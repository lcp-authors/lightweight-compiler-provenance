
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-time.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_month_to_integer>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #16
       c:	add	r1, sp, #4
      10:	str	r0, [sp, #8]
      14:	ldr	r0, [sp, #8]
      18:	ldrb	r0, [r0]
      1c:	strb	r0, [sp, #4]
      20:	ldr	r0, [sp, #8]
      24:	ldrb	r0, [r0, #1]
      28:	strb	r0, [sp, #5]
      2c:	ldr	r0, [sp, #8]
      30:	ldrb	r0, [r0, #2]
      34:	strb	r0, [sp, #6]
      38:	movw	r0, #0
      3c:	strb	r0, [sp, #7]
      40:	mov	r0, r1
      44:	movw	r1, #0
      48:	movt	r1, #0
      4c:	movw	r2, #3
      50:	bl	0 <strncasecmp>
      54:	cmp	r0, #0
      58:	bne	68 <coda_month_to_integer+0x68>
      5c:	movw	r0, #1
      60:	str	r0, [fp, #-4]
      64:	b	23c <coda_month_to_integer+0x23c>
      68:	add	r0, sp, #4
      6c:	movw	r1, #0
      70:	movt	r1, #0
      74:	movw	r2, #3
      78:	bl	0 <strncasecmp>
      7c:	cmp	r0, #0
      80:	bne	90 <coda_month_to_integer+0x90>
      84:	movw	r0, #2
      88:	str	r0, [fp, #-4]
      8c:	b	23c <coda_month_to_integer+0x23c>
      90:	add	r0, sp, #4
      94:	movw	r1, #0
      98:	movt	r1, #0
      9c:	movw	r2, #3
      a0:	bl	0 <strncasecmp>
      a4:	cmp	r0, #0
      a8:	bne	b8 <coda_month_to_integer+0xb8>
      ac:	movw	r0, #3
      b0:	str	r0, [fp, #-4]
      b4:	b	23c <coda_month_to_integer+0x23c>
      b8:	add	r0, sp, #4
      bc:	movw	r1, #0
      c0:	movt	r1, #0
      c4:	movw	r2, #3
      c8:	bl	0 <strncasecmp>
      cc:	cmp	r0, #0
      d0:	bne	e0 <coda_month_to_integer+0xe0>
      d4:	movw	r0, #4
      d8:	str	r0, [fp, #-4]
      dc:	b	23c <coda_month_to_integer+0x23c>
      e0:	add	r0, sp, #4
      e4:	movw	r1, #0
      e8:	movt	r1, #0
      ec:	movw	r2, #3
      f0:	bl	0 <strncasecmp>
      f4:	cmp	r0, #0
      f8:	bne	108 <coda_month_to_integer+0x108>
      fc:	movw	r0, #5
     100:	str	r0, [fp, #-4]
     104:	b	23c <coda_month_to_integer+0x23c>
     108:	add	r0, sp, #4
     10c:	movw	r1, #0
     110:	movt	r1, #0
     114:	movw	r2, #3
     118:	bl	0 <strncasecmp>
     11c:	cmp	r0, #0
     120:	bne	130 <coda_month_to_integer+0x130>
     124:	movw	r0, #6
     128:	str	r0, [fp, #-4]
     12c:	b	23c <coda_month_to_integer+0x23c>
     130:	add	r0, sp, #4
     134:	movw	r1, #0
     138:	movt	r1, #0
     13c:	movw	r2, #3
     140:	bl	0 <strncasecmp>
     144:	cmp	r0, #0
     148:	bne	158 <coda_month_to_integer+0x158>
     14c:	movw	r0, #7
     150:	str	r0, [fp, #-4]
     154:	b	23c <coda_month_to_integer+0x23c>
     158:	add	r0, sp, #4
     15c:	movw	r1, #0
     160:	movt	r1, #0
     164:	movw	r2, #3
     168:	bl	0 <strncasecmp>
     16c:	cmp	r0, #0
     170:	bne	180 <coda_month_to_integer+0x180>
     174:	movw	r0, #8
     178:	str	r0, [fp, #-4]
     17c:	b	23c <coda_month_to_integer+0x23c>
     180:	add	r0, sp, #4
     184:	movw	r1, #0
     188:	movt	r1, #0
     18c:	movw	r2, #3
     190:	bl	0 <strncasecmp>
     194:	cmp	r0, #0
     198:	bne	1a8 <coda_month_to_integer+0x1a8>
     19c:	movw	r0, #9
     1a0:	str	r0, [fp, #-4]
     1a4:	b	23c <coda_month_to_integer+0x23c>
     1a8:	add	r0, sp, #4
     1ac:	movw	r1, #0
     1b0:	movt	r1, #0
     1b4:	movw	r2, #3
     1b8:	bl	0 <strncasecmp>
     1bc:	cmp	r0, #0
     1c0:	bne	1d0 <coda_month_to_integer+0x1d0>
     1c4:	movw	r0, #10
     1c8:	str	r0, [fp, #-4]
     1cc:	b	23c <coda_month_to_integer+0x23c>
     1d0:	add	r0, sp, #4
     1d4:	movw	r1, #0
     1d8:	movt	r1, #0
     1dc:	movw	r2, #3
     1e0:	bl	0 <strncasecmp>
     1e4:	cmp	r0, #0
     1e8:	bne	1f8 <coda_month_to_integer+0x1f8>
     1ec:	movw	r0, #11
     1f0:	str	r0, [fp, #-4]
     1f4:	b	23c <coda_month_to_integer+0x23c>
     1f8:	add	r0, sp, #4
     1fc:	movw	r1, #0
     200:	movt	r1, #0
     204:	movw	r2, #3
     208:	bl	0 <strncasecmp>
     20c:	cmp	r0, #0
     210:	bne	220 <coda_month_to_integer+0x220>
     214:	movw	r0, #12
     218:	str	r0, [fp, #-4]
     21c:	b	23c <coda_month_to_integer+0x23c>
     220:	add	r2, sp, #4
     224:	mvn	r0, #99	; 0x63
     228:	movw	r1, #0
     22c:	movt	r1, #0
     230:	bl	0 <coda_set_error>
     234:	mvn	r0, #0
     238:	str	r0, [fp, #-4]
     23c:	ldr	r0, [fp, #-4]
     240:	mov	sp, fp
     244:	pop	{fp, pc}

00000248 <coda_dayofyear_to_month_day>:
     248:	push	{fp, lr}
     24c:	mov	fp, sp
     250:	sub	sp, sp, #32
     254:	str	r0, [fp, #-8]
     258:	str	r1, [fp, #-12]
     25c:	str	r2, [sp, #16]
     260:	str	r3, [sp, #12]
     264:	ldr	r0, [sp, #16]
     268:	movw	r1, #0
     26c:	cmp	r0, r1
     270:	beq	284 <coda_dayofyear_to_month_day+0x3c>
     274:	ldr	r0, [sp, #12]
     278:	movw	r1, #0
     27c:	cmp	r0, r1
     280:	bne	2ac <coda_dayofyear_to_month_day+0x64>
     284:	mvn	r0, #99	; 0x63
     288:	movw	r1, #0
     28c:	movt	r1, #0
     290:	movw	r2, #0
     294:	movt	r2, #0
     298:	movw	r3, #549	; 0x225
     29c:	bl	0 <coda_set_error>
     2a0:	mvn	r0, #0
     2a4:	str	r0, [fp, #-4]
     2a8:	b	358 <coda_dayofyear_to_month_day+0x110>
     2ac:	ldr	r0, [fp, #-12]
     2b0:	cmp	r0, #0
     2b4:	blt	2c8 <coda_dayofyear_to_month_day+0x80>
     2b8:	ldr	r0, [fp, #-12]
     2bc:	movw	r1, #366	; 0x16e
     2c0:	cmp	r0, r1
     2c4:	ble	2e8 <coda_dayofyear_to_month_day+0xa0>
     2c8:	ldr	r2, [fp, #-12]
     2cc:	mvn	r0, #103	; 0x67
     2d0:	movw	r1, #0
     2d4:	movt	r1, #0
     2d8:	bl	0 <coda_set_error>
     2dc:	mvn	r0, #0
     2e0:	str	r0, [fp, #-4]
     2e4:	b	358 <coda_dayofyear_to_month_day+0x110>
     2e8:	ldr	r2, [fp, #-8]
     2ec:	movw	r0, #1
     2f0:	str	r0, [sp, #4]
     2f4:	ldr	r1, [sp, #4]
     2f8:	add	r3, sp, #8
     2fc:	bl	364 <dmy_to_mjd2000>
     300:	cmp	r0, #0
     304:	beq	314 <coda_dayofyear_to_month_day+0xcc>
     308:	mvn	r0, #0
     30c:	str	r0, [fp, #-4]
     310:	b	358 <coda_dayofyear_to_month_day+0x110>
     314:	ldr	r0, [fp, #-12]
     318:	sub	r0, r0, #1
     31c:	ldr	r1, [sp, #8]
     320:	add	r0, r1, r0
     324:	str	r0, [sp, #8]
     328:	ldr	r0, [sp, #8]
     32c:	ldr	r1, [sp, #12]
     330:	ldr	r2, [sp, #16]
     334:	sub	r3, fp, #8
     338:	bl	4b4 <mjd2000_to_dmy>
     33c:	cmp	r0, #0
     340:	beq	350 <coda_dayofyear_to_month_day+0x108>
     344:	mvn	r0, #0
     348:	str	r0, [fp, #-4]
     34c:	b	358 <coda_dayofyear_to_month_day+0x110>
     350:	movw	r0, #0
     354:	str	r0, [fp, #-4]
     358:	ldr	r0, [fp, #-4]
     35c:	mov	sp, fp
     360:	pop	{fp, pc}

00000364 <dmy_to_mjd2000>:
     364:	push	{fp, lr}
     368:	mov	fp, sp
     36c:	sub	sp, sp, #48	; 0x30
     370:	str	r0, [fp, #-8]
     374:	str	r1, [fp, #-12]
     378:	str	r2, [fp, #-16]
     37c:	str	r3, [fp, #-20]	; 0xffffffec
     380:	movw	r0, #2
     384:	str	r0, [sp, #24]
     388:	movw	r0, #9
     38c:	str	r0, [sp, #20]
     390:	movw	r0, #1752	; 0x6d8
     394:	str	r0, [sp, #16]
     398:	ldr	r0, [fp, #-8]
     39c:	ldr	r1, [fp, #-12]
     3a0:	ldr	r2, [fp, #-16]
     3a4:	add	r3, sp, #8
     3a8:	bl	383c <dmy_to_mjd2000_julian>
     3ac:	cmp	r0, #0
     3b0:	bne	3d0 <dmy_to_mjd2000+0x6c>
     3b4:	movw	r0, #2
     3b8:	movw	r1, #9
     3bc:	movw	r2, #1752	; 0x6d8
     3c0:	add	r3, sp, #12
     3c4:	bl	383c <dmy_to_mjd2000_julian>
     3c8:	cmp	r0, #0
     3cc:	beq	3dc <dmy_to_mjd2000+0x78>
     3d0:	mvn	r0, #0
     3d4:	str	r0, [fp, #-4]
     3d8:	b	4a0 <dmy_to_mjd2000+0x13c>
     3dc:	ldr	r0, [sp, #8]
     3e0:	ldr	r1, [sp, #12]
     3e4:	cmp	r0, r1
     3e8:	bgt	404 <dmy_to_mjd2000+0xa0>
     3ec:	ldr	r0, [pc, #184]	; 4ac <dmy_to_mjd2000+0x148>
     3f0:	ldr	r1, [sp, #8]
     3f4:	sub	r0, r1, r0
     3f8:	ldr	r1, [fp, #-20]	; 0xffffffec
     3fc:	str	r0, [r1]
     400:	b	498 <dmy_to_mjd2000+0x134>
     404:	ldr	r0, [fp, #-8]
     408:	ldr	r1, [fp, #-12]
     40c:	ldr	r2, [fp, #-16]
     410:	add	r3, sp, #8
     414:	bl	3a38 <dmy_to_mjd2000_gregorian>
     418:	cmp	r0, #0
     41c:	beq	42c <dmy_to_mjd2000+0xc8>
     420:	mvn	r0, #0
     424:	str	r0, [fp, #-4]
     428:	b	4a0 <dmy_to_mjd2000+0x13c>
     42c:	ldr	r0, [pc, #120]	; 4ac <dmy_to_mjd2000+0x148>
     430:	ldr	r1, [pc, #120]	; 4b0 <dmy_to_mjd2000+0x14c>
     434:	ldr	r2, [sp, #8]
     438:	sub	r1, r2, r1
     43c:	ldr	r2, [sp, #12]
     440:	sub	r0, r2, r0
     444:	cmp	r1, r0
     448:	bgt	484 <dmy_to_mjd2000+0x120>
     44c:	ldr	r2, [fp, #-8]
     450:	ldr	r3, [fp, #-12]
     454:	ldr	r0, [fp, #-16]
     458:	mvn	r1, #103	; 0x67
     45c:	str	r0, [sp, #4]
     460:	mov	r0, r1
     464:	movw	r1, #0
     468:	movt	r1, #0
     46c:	ldr	ip, [sp, #4]
     470:	str	ip, [sp]
     474:	bl	0 <coda_set_error>
     478:	mvn	r0, #0
     47c:	str	r0, [fp, #-4]
     480:	b	4a0 <dmy_to_mjd2000+0x13c>
     484:	ldr	r0, [pc, #36]	; 4b0 <dmy_to_mjd2000+0x14c>
     488:	ldr	r1, [sp, #8]
     48c:	sub	r0, r1, r0
     490:	ldr	r1, [fp, #-20]	; 0xffffffec
     494:	str	r0, [r1]
     498:	movw	r0, #0
     49c:	str	r0, [fp, #-4]
     4a0:	ldr	r0, [fp, #-4]
     4a4:	mov	sp, fp
     4a8:	pop	{fp, pc}
     4ac:	.word	0x00256859
     4b0:	.word	0x00024d96

000004b4 <mjd2000_to_dmy>:
     4b4:	push	{fp, lr}
     4b8:	mov	fp, sp
     4bc:	sub	sp, sp, #40	; 0x28
     4c0:	str	r0, [fp, #-8]
     4c4:	str	r1, [fp, #-12]
     4c8:	str	r2, [fp, #-16]
     4cc:	str	r3, [sp, #20]
     4d0:	movw	r0, #2
     4d4:	str	r0, [sp, #16]
     4d8:	movw	r1, #9
     4dc:	str	r1, [sp, #12]
     4e0:	movw	r2, #1752	; 0x6d8
     4e4:	str	r2, [sp, #8]
     4e8:	add	r3, sp, #4
     4ec:	bl	364 <dmy_to_mjd2000>
     4f0:	cmp	r0, #0
     4f4:	beq	504 <mjd2000_to_dmy+0x50>
     4f8:	mvn	r0, #0
     4fc:	str	r0, [fp, #-4]
     500:	b	548 <mjd2000_to_dmy+0x94>
     504:	ldr	r0, [fp, #-8]
     508:	ldr	r1, [sp, #4]
     50c:	cmp	r0, r1
     510:	bgt	52c <mjd2000_to_dmy+0x78>
     514:	ldr	r0, [fp, #-8]
     518:	ldr	r1, [fp, #-12]
     51c:	ldr	r2, [fp, #-16]
     520:	ldr	r3, [sp, #20]
     524:	bl	3dec <mjd2000_to_dmy_julian>
     528:	b	540 <mjd2000_to_dmy+0x8c>
     52c:	ldr	r0, [fp, #-8]
     530:	ldr	r1, [fp, #-12]
     534:	ldr	r2, [fp, #-16]
     538:	ldr	r3, [sp, #20]
     53c:	bl	3f08 <mjd2000_to_dmy_gregorian>
     540:	movw	r0, #0
     544:	str	r0, [fp, #-4]
     548:	ldr	r0, [fp, #-4]
     54c:	mov	sp, fp
     550:	pop	{fp, pc}

00000554 <coda_leap_second_table_done>:
     554:	push	{fp, lr}
     558:	mov	fp, sp
     55c:	sub	sp, sp, #16
     560:	ldr	r0, [pc, #104]	; 5d0 <coda_leap_second_table_done+0x7c>
     564:	str	r0, [fp, #-4]
     568:	bl	0 <__aeabi_read_tp>
     56c:	ldr	ip, [fp, #-4]
     570:	ldr	r0, [r0, ip]
     574:	movw	ip, #0
     578:	cmp	r0, ip
     57c:	beq	5b0 <coda_leap_second_table_done+0x5c>
     580:	ldr	r0, [pc, #72]	; 5d0 <coda_leap_second_table_done+0x7c>
     584:	str	r0, [sp, #8]
     588:	bl	0 <__aeabi_read_tp>
     58c:	ldr	ip, [sp, #8]
     590:	ldr	lr, [r0, ip]
     594:	str	r0, [sp, #4]
     598:	mov	r0, lr
     59c:	bl	0 <free>
     5a0:	mov	r0, #0
     5a4:	ldr	ip, [sp, #4]
     5a8:	ldr	lr, [sp, #8]
     5ac:	str	r0, [ip, lr]
     5b0:	ldr	r0, [pc, #28]	; 5d4 <coda_leap_second_table_done+0x80>
     5b4:	str	r0, [sp]
     5b8:	bl	0 <__aeabi_read_tp>
     5bc:	mov	ip, #0
     5c0:	ldr	lr, [sp]
     5c4:	str	ip, [r0, lr]
     5c8:	mov	sp, fp
     5cc:	pop	{fp, pc}
	...

000005d8 <coda_leap_second_table_init>:
     5d8:	push	{fp, lr}
     5dc:	mov	fp, sp
     5e0:	sub	sp, sp, #112	; 0x70
     5e4:	bl	554 <coda_leap_second_table_done>
     5e8:	movw	r0, #0
     5ec:	movt	r0, #0
     5f0:	bl	0 <getenv>
     5f4:	movw	lr, #0
     5f8:	cmp	r0, lr
     5fc:	beq	628 <coda_leap_second_table_init+0x50>
     600:	movw	r0, #0
     604:	movt	r0, #0
     608:	bl	0 <getenv>
     60c:	bl	858 <read_leap_second_table>
     610:	cmp	r0, #0
     614:	beq	624 <coda_leap_second_table_init+0x4c>
     618:	mvn	r0, #0
     61c:	str	r0, [fp, #-4]
     620:	b	774 <coda_leap_second_table_init+0x19c>
     624:	b	76c <coda_leap_second_table_init+0x194>
     628:	vldr	d0, [pc, #544]	; 850 <coda_leap_second_table_init+0x278>
     62c:	bl	ac0 <register_leap_second>
     630:	vldr	d0, [pc, #528]	; 848 <coda_leap_second_table_init+0x270>
     634:	str	r0, [fp, #-8]
     638:	bl	ac0 <register_leap_second>
     63c:	vldr	d0, [pc, #508]	; 840 <coda_leap_second_table_init+0x268>
     640:	str	r0, [fp, #-12]
     644:	bl	ac0 <register_leap_second>
     648:	vldr	d0, [pc, #488]	; 838 <coda_leap_second_table_init+0x260>
     64c:	str	r0, [fp, #-16]
     650:	bl	ac0 <register_leap_second>
     654:	vldr	d0, [pc, #468]	; 830 <coda_leap_second_table_init+0x258>
     658:	str	r0, [fp, #-20]	; 0xffffffec
     65c:	bl	ac0 <register_leap_second>
     660:	vldr	d0, [pc, #448]	; 828 <coda_leap_second_table_init+0x250>
     664:	str	r0, [fp, #-24]	; 0xffffffe8
     668:	bl	ac0 <register_leap_second>
     66c:	vldr	d0, [pc, #428]	; 820 <coda_leap_second_table_init+0x248>
     670:	str	r0, [fp, #-28]	; 0xffffffe4
     674:	bl	ac0 <register_leap_second>
     678:	vldr	d0, [pc, #408]	; 818 <coda_leap_second_table_init+0x240>
     67c:	str	r0, [fp, #-32]	; 0xffffffe0
     680:	bl	ac0 <register_leap_second>
     684:	vldr	d0, [pc, #388]	; 810 <coda_leap_second_table_init+0x238>
     688:	str	r0, [fp, #-36]	; 0xffffffdc
     68c:	bl	ac0 <register_leap_second>
     690:	vldr	d0, [pc, #368]	; 808 <coda_leap_second_table_init+0x230>
     694:	str	r0, [fp, #-40]	; 0xffffffd8
     698:	bl	ac0 <register_leap_second>
     69c:	vldr	d0, [pc, #348]	; 800 <coda_leap_second_table_init+0x228>
     6a0:	str	r0, [fp, #-44]	; 0xffffffd4
     6a4:	bl	ac0 <register_leap_second>
     6a8:	vldr	d0, [pc, #328]	; 7f8 <coda_leap_second_table_init+0x220>
     6ac:	str	r0, [fp, #-48]	; 0xffffffd0
     6b0:	bl	ac0 <register_leap_second>
     6b4:	vldr	d0, [pc, #308]	; 7f0 <coda_leap_second_table_init+0x218>
     6b8:	str	r0, [fp, #-52]	; 0xffffffcc
     6bc:	bl	ac0 <register_leap_second>
     6c0:	vldr	d0, [pc, #288]	; 7e8 <coda_leap_second_table_init+0x210>
     6c4:	str	r0, [sp, #56]	; 0x38
     6c8:	bl	ac0 <register_leap_second>
     6cc:	vldr	d0, [pc, #268]	; 7e0 <coda_leap_second_table_init+0x208>
     6d0:	str	r0, [sp, #52]	; 0x34
     6d4:	bl	ac0 <register_leap_second>
     6d8:	vldr	d0, [pc, #248]	; 7d8 <coda_leap_second_table_init+0x200>
     6dc:	str	r0, [sp, #48]	; 0x30
     6e0:	bl	ac0 <register_leap_second>
     6e4:	vldr	d0, [pc, #228]	; 7d0 <coda_leap_second_table_init+0x1f8>
     6e8:	str	r0, [sp, #44]	; 0x2c
     6ec:	bl	ac0 <register_leap_second>
     6f0:	vldr	d0, [pc, #208]	; 7c8 <coda_leap_second_table_init+0x1f0>
     6f4:	str	r0, [sp, #40]	; 0x28
     6f8:	bl	ac0 <register_leap_second>
     6fc:	vldr	d0, [pc, #188]	; 7c0 <coda_leap_second_table_init+0x1e8>
     700:	str	r0, [sp, #36]	; 0x24
     704:	bl	ac0 <register_leap_second>
     708:	vldr	d0, [pc, #168]	; 7b8 <coda_leap_second_table_init+0x1e0>
     70c:	str	r0, [sp, #32]
     710:	bl	ac0 <register_leap_second>
     714:	vldr	d0, [pc, #148]	; 7b0 <coda_leap_second_table_init+0x1d8>
     718:	str	r0, [sp, #28]
     71c:	bl	ac0 <register_leap_second>
     720:	vldr	d0, [pc, #128]	; 7a8 <coda_leap_second_table_init+0x1d0>
     724:	str	r0, [sp, #24]
     728:	bl	ac0 <register_leap_second>
     72c:	vldr	d0, [pc, #108]	; 7a0 <coda_leap_second_table_init+0x1c8>
     730:	str	r0, [sp, #20]
     734:	bl	ac0 <register_leap_second>
     738:	vldr	d0, [pc, #88]	; 798 <coda_leap_second_table_init+0x1c0>
     73c:	str	r0, [sp, #16]
     740:	bl	ac0 <register_leap_second>
     744:	vldr	d0, [pc, #68]	; 790 <coda_leap_second_table_init+0x1b8>
     748:	str	r0, [sp, #12]
     74c:	bl	ac0 <register_leap_second>
     750:	vldr	d0, [pc, #48]	; 788 <coda_leap_second_table_init+0x1b0>
     754:	str	r0, [sp, #8]
     758:	bl	ac0 <register_leap_second>
     75c:	vldr	d0, [pc, #28]	; 780 <coda_leap_second_table_init+0x1a8>
     760:	str	r0, [sp, #4]
     764:	bl	ac0 <register_leap_second>
     768:	str	r0, [sp]
     76c:	movw	r0, #0
     770:	str	r0, [fp, #-4]
     774:	ldr	r0, [fp, #-4]
     778:	mov	sp, fp
     77c:	pop	{fp, pc}
     780:	.word	0x24000000
     784:	.word	0x41bffb03
     788:	.word	0x23000000
     78c:	.word	0x41bd25ea
     790:	.word	0xa2000000
     794:	.word	0x41b7824f
     798:	.word	0x21000000
     79c:	.word	0x41b0eec4
     7a0:	.word	0x40000000
     7a4:	.word	0x41a693b0
     7a8:	.word	0x10000000
     7ac:	.word	0xc17e1336
     7b0:	.word	0x88000000
     7b4:	.word	0xc192d3eb
     7b8:	.word	0x8c000000
     7bc:	.word	0xc19e187d
     7c0:	.word	0xc8000000
     7c4:	.word	0xc1a4b3cd
     7c8:	.word	0xca000000
     7cc:	.word	0xc1a87634
     7d0:	.word	0xcc000000
     7d4:	.word	0xc1ac389b
     7d8:	.word	0x67000000
     7dc:	.word	0xc1b0ed72
     7e0:	.word	0xe8000000
     7e4:	.word	0xc1b2cea5
     7e8:	.word	0x69000000
     7ec:	.word	0xc1b6925e
     7f0:	.word	0x6a000000
     7f4:	.word	0xc1bb4759
     7f8:	.word	0xeb000000
     7fc:	.word	0xc1bf0b11
     800:	.word	0xb6000000
     804:	.word	0xc1c07622
     808:	.word	0x76800000
     80c:	.word	0xc1c166bc
     810:	.word	0xb7000000
     814:	.word	0xc1c2cf4e
     818:	.word	0x77800000
     81c:	.word	0xc1c3bfe8
     820:	.word	0x38000000
     824:	.word	0xc1c4b082
     828:	.word	0xf8800000
     82c:	.word	0xc1c5a11b
     830:	.word	0x79000000
     834:	.word	0xc1c6925e
     838:	.word	0x39800000
     83c:	.word	0xc1c782f8
     840:	.word	0xfa000000
     844:	.word	0xc1c87391
     848:	.word	0xba800000
     84c:	.word	0xc1c9642b
     850:	.word	0xbb000000
     854:	.word	0xc1c9dd75

00000858 <read_leap_second_table>:
     858:	push	{r4, sl, fp, lr}
     85c:	add	fp, sp, #8
     860:	sub	sp, sp, #232	; 0xe8
     864:	str	r0, [fp, #-16]
     868:	movw	r0, #0
     86c:	str	r0, [sp, #120]	; 0x78
     870:	ldr	r0, [fp, #-16]
     874:	movw	r1, #0
     878:	movt	r1, #0
     87c:	bl	0 <fopen>
     880:	str	r0, [sp, #116]	; 0x74
     884:	ldr	r0, [sp, #116]	; 0x74
     888:	movw	r1, #0
     88c:	cmp	r0, r1
     890:	bne	8b4 <read_leap_second_table+0x5c>
     894:	ldr	r2, [fp, #-16]
     898:	mvn	r0, #20
     89c:	movw	r1, #0
     8a0:	movt	r1, #0
     8a4:	bl	0 <coda_set_error>
     8a8:	mvn	r0, #0
     8ac:	str	r0, [fp, #-12]
     8b0:	b	a9c <read_leap_second_table+0x244>
     8b4:	b	8b8 <read_leap_second_table+0x60>
     8b8:	sub	r2, fp, #116	; 0x74
     8bc:	movw	r0, #0
     8c0:	str	r0, [sp, #112]	; 0x70
     8c4:	ldr	r0, [sp, #116]	; 0x74
     8c8:	movw	r1, #0
     8cc:	movt	r1, #0
     8d0:	add	r3, sp, #112	; 0x70
     8d4:	bl	0 <__isoc99_fscanf>
     8d8:	str	r0, [sp, #108]	; 0x6c
     8dc:	ldr	r0, [sp, #112]	; 0x70
     8e0:	cmp	r0, #0
     8e4:	bgt	8ec <read_leap_second_table+0x94>
     8e8:	b	a88 <read_leap_second_table+0x230>
     8ec:	ldr	r0, [sp, #112]	; 0x70
     8f0:	cmp	r0, #80	; 0x50
     8f4:	beq	928 <read_leap_second_table+0xd0>
     8f8:	ldr	r0, [sp, #116]	; 0x74
     8fc:	bl	0 <fclose>
     900:	ldr	r2, [fp, #-16]
     904:	mvn	lr, #21
     908:	str	r0, [sp, #60]	; 0x3c
     90c:	mov	r0, lr
     910:	movw	r1, #0
     914:	movt	r1, #0
     918:	bl	0 <coda_set_error>
     91c:	mvn	r0, #0
     920:	str	r0, [fp, #-12]
     924:	b	a9c <read_leap_second_table+0x244>
     928:	ldr	r0, [sp, #112]	; 0x70
     92c:	sub	r1, fp, #116	; 0x74
     930:	add	r0, r1, r0
     934:	movw	r1, #0
     938:	strb	r1, [r0]
     93c:	ldr	r0, [sp, #116]	; 0x74
     940:	movw	r1, #0
     944:	movt	r1, #0
     948:	bl	0 <__isoc99_fscanf>
     94c:	add	r1, sp, #101	; 0x65
     950:	sub	lr, fp, #116	; 0x74
     954:	str	r0, [sp, #108]	; 0x6c
     958:	add	r0, r1, #1
     95c:	add	r2, r1, #2
     960:	str	r0, [sp, #56]	; 0x38
     964:	mov	r0, lr
     968:	movw	lr, #0
     96c:	movt	lr, #0
     970:	str	r1, [sp, #52]	; 0x34
     974:	mov	r1, lr
     978:	add	lr, sp, #104	; 0x68
     97c:	str	r2, [sp, #48]	; 0x30
     980:	mov	r2, lr
     984:	ldr	r3, [sp, #52]	; 0x34
     988:	ldr	lr, [sp, #56]	; 0x38
     98c:	str	lr, [sp]
     990:	ldr	ip, [sp, #48]	; 0x30
     994:	str	ip, [sp, #4]
     998:	add	r4, sp, #96	; 0x60
     99c:	str	r4, [sp, #8]
     9a0:	add	r4, sp, #88	; 0x58
     9a4:	str	r4, [sp, #12]
     9a8:	add	r4, sp, #80	; 0x50
     9ac:	str	r4, [sp, #16]
     9b0:	add	r4, sp, #72	; 0x48
     9b4:	str	r4, [sp, #20]
     9b8:	add	r4, sp, #64	; 0x40
     9bc:	str	r4, [sp, #24]
     9c0:	add	r4, sp, #112	; 0x70
     9c4:	str	r4, [sp, #28]
     9c8:	bl	0 <__isoc99_sscanf>
     9cc:	str	r0, [sp, #108]	; 0x6c
     9d0:	ldr	r0, [sp, #108]	; 0x6c
     9d4:	cmp	r0, #9
     9d8:	beq	a18 <read_leap_second_table+0x1c0>
     9dc:	ldr	r0, [sp, #112]	; 0x70
     9e0:	cmp	r0, #80	; 0x50
     9e4:	beq	a18 <read_leap_second_table+0x1c0>
     9e8:	ldr	r0, [sp, #116]	; 0x74
     9ec:	bl	0 <fclose>
     9f0:	ldr	r2, [fp, #-16]
     9f4:	mvn	lr, #21
     9f8:	str	r0, [sp, #44]	; 0x2c
     9fc:	mov	r0, lr
     a00:	movw	r1, #0
     a04:	movt	r1, #0
     a08:	bl	0 <coda_set_error>
     a0c:	mvn	r0, #0
     a10:	str	r0, [fp, #-12]
     a14:	b	a9c <read_leap_second_table+0x244>
     a18:	vldr	d16, [pc, #136]	; aa8 <read_leap_second_table+0x250>
     a1c:	vldr	d17, [sp, #88]	; 0x58
     a20:	vcmpe.f64	d17, d16
     a24:	vmrs	APSR_nzcv, fpscr
     a28:	ble	a84 <read_leap_second_table+0x22c>
     a2c:	vldr	d16, [pc, #124]	; ab0 <read_leap_second_table+0x258>
     a30:	vldr	d17, [pc, #128]	; ab8 <read_leap_second_table+0x260>
     a34:	vldr	d18, [sp, #88]	; 0x58
     a38:	vsub.f64	d17, d18, d17
     a3c:	vmul.f64	d16, d17, d16
     a40:	ldr	r0, [sp, #120]	; 0x78
     a44:	add	r0, r0, #10
     a48:	vmov	s0, r0
     a4c:	vcvt.f64.s32	d17, s0
     a50:	vadd.f64	d0, d16, d17
     a54:	bl	ac0 <register_leap_second>
     a58:	cmp	r0, #0
     a5c:	beq	a78 <read_leap_second_table+0x220>
     a60:	ldr	r0, [sp, #116]	; 0x74
     a64:	bl	0 <fclose>
     a68:	mvn	lr, #0
     a6c:	str	lr, [fp, #-12]
     a70:	str	r0, [sp, #40]	; 0x28
     a74:	b	a9c <read_leap_second_table+0x244>
     a78:	ldr	r0, [sp, #120]	; 0x78
     a7c:	add	r0, r0, #1
     a80:	str	r0, [sp, #120]	; 0x78
     a84:	b	8b8 <read_leap_second_table+0x60>
     a88:	ldr	r0, [sp, #116]	; 0x74
     a8c:	bl	0 <fclose>
     a90:	movw	lr, #0
     a94:	str	lr, [fp, #-12]
     a98:	str	r0, [sp, #36]	; 0x24
     a9c:	ldr	r0, [fp, #-12]
     aa0:	sub	sp, fp, #8
     aa4:	pop	{r4, sl, fp, pc}
     aa8:	.word	0xc0000000
     aac:	.word	0x4142a032
     ab0:	.word	0x00000000
     ab4:	.word	0x40f51800
     ab8:	.word	0x40000000
     abc:	.word	0x4142b42c

00000ac0 <register_leap_second>:
     ac0:	push	{fp, lr}
     ac4:	mov	fp, sp
     ac8:	sub	sp, sp, #128	; 0x80
     acc:	vstr	d0, [fp, #-16]
     ad0:	ldr	r0, [pc, #636]	; d54 <register_leap_second+0x294>
     ad4:	str	r0, [fp, #-36]	; 0xffffffdc
     ad8:	bl	0 <__aeabi_read_tp>
     adc:	ldr	ip, [fp, #-36]	; 0xffffffdc
     ae0:	ldr	r0, [r0, ip]
     ae4:	asr	ip, r0, #31
     ae8:	add	ip, r0, ip, lsr #28
     aec:	bic	ip, ip, #15
     af0:	sub	r0, r0, ip
     af4:	cmp	r0, #0
     af8:	bne	ba4 <register_leap_second+0xe4>
     afc:	ldr	r0, [pc, #596]	; d58 <register_leap_second+0x298>
     b00:	str	r0, [fp, #-40]	; 0xffffffd8
     b04:	bl	0 <__aeabi_read_tp>
     b08:	ldr	ip, [fp, #-40]	; 0xffffffd8
     b0c:	ldr	ip, [r0, ip]
     b10:	ldr	lr, [pc, #572]	; d54 <register_leap_second+0x294>
     b14:	ldr	r0, [r0, lr]
     b18:	add	r0, r0, #16
     b1c:	lsl	r1, r0, #3
     b20:	mov	r0, ip
     b24:	bl	0 <realloc>
     b28:	str	r0, [fp, #-24]	; 0xffffffe8
     b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b30:	movw	r1, #0
     b34:	cmp	r0, r1
     b38:	bne	b84 <register_leap_second+0xc4>
     b3c:	ldr	r0, [pc, #528]	; d54 <register_leap_second+0x294>
     b40:	str	r0, [fp, #-44]	; 0xffffffd4
     b44:	bl	0 <__aeabi_read_tp>
     b48:	ldr	ip, [fp, #-44]	; 0xffffffd4
     b4c:	ldr	r0, [r0, ip]
     b50:	add	r0, r0, #16
     b54:	lsl	r2, r0, #3
     b58:	mvn	r0, #0
     b5c:	movw	r1, #0
     b60:	movt	r1, #0
     b64:	movw	r3, #0
     b68:	movt	r3, #0
     b6c:	movw	ip, #609	; 0x261
     b70:	str	ip, [sp]
     b74:	bl	0 <coda_set_error>
     b78:	mvn	r0, #0
     b7c:	str	r0, [fp, #-4]
     b80:	b	d48 <register_leap_second+0x288>
     b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
     b88:	ldr	r1, [pc, #456]	; d58 <register_leap_second+0x298>
     b8c:	str	r0, [fp, #-48]	; 0xffffffd0
     b90:	str	r1, [fp, #-52]	; 0xffffffcc
     b94:	bl	0 <__aeabi_read_tp>
     b98:	ldr	r1, [fp, #-48]	; 0xffffffd0
     b9c:	ldr	ip, [fp, #-52]	; 0xffffffcc
     ba0:	str	r1, [r0, ip]
     ba4:	ldr	r0, [pc, #424]	; d54 <register_leap_second+0x294>
     ba8:	str	r0, [fp, #-56]	; 0xffffffc8
     bac:	bl	0 <__aeabi_read_tp>
     bb0:	ldr	ip, [fp, #-56]	; 0xffffffc8
     bb4:	ldr	r0, [r0, ip]
     bb8:	cmp	r0, #0
     bbc:	ble	d04 <register_leap_second+0x244>
     bc0:	vldr	d16, [fp, #-16]
     bc4:	ldr	r0, [pc, #396]	; d58 <register_leap_second+0x298>
     bc8:	vstr	d16, [sp, #64]	; 0x40
     bcc:	str	r0, [sp, #60]	; 0x3c
     bd0:	bl	0 <__aeabi_read_tp>
     bd4:	ldr	ip, [sp, #60]	; 0x3c
     bd8:	ldr	ip, [r0, ip]
     bdc:	ldr	lr, [pc, #368]	; d54 <register_leap_second+0x294>
     be0:	ldr	r0, [r0, lr]
     be4:	sub	r0, r0, #1
     be8:	add	r0, ip, r0, lsl #3
     bec:	vldr	d16, [r0]
     bf0:	vldr	d17, [sp, #64]	; 0x40
     bf4:	vcmpe.f64	d17, d16
     bf8:	vmrs	APSR_nzcv, fpscr
     bfc:	bhi	d04 <register_leap_second+0x244>
     c00:	movw	r0, #0
     c04:	str	r0, [fp, #-20]	; 0xffffffec
     c08:	ldr	r0, [fp, #-20]	; 0xffffffec
     c0c:	ldr	r1, [pc, #320]	; d54 <register_leap_second+0x294>
     c10:	str	r0, [sp, #56]	; 0x38
     c14:	str	r1, [sp, #52]	; 0x34
     c18:	bl	0 <__aeabi_read_tp>
     c1c:	ldr	r1, [sp, #52]	; 0x34
     c20:	ldr	r0, [r0, r1]
     c24:	ldr	r1, [sp, #56]	; 0x38
     c28:	cmp	r1, r0
     c2c:	bge	d00 <register_leap_second+0x240>
     c30:	vldr	d16, [fp, #-16]
     c34:	ldr	r0, [pc, #284]	; d58 <register_leap_second+0x298>
     c38:	vstr	d16, [sp, #40]	; 0x28
     c3c:	str	r0, [sp, #36]	; 0x24
     c40:	bl	0 <__aeabi_read_tp>
     c44:	ldr	ip, [sp, #36]	; 0x24
     c48:	ldr	r0, [r0, ip]
     c4c:	ldr	ip, [fp, #-20]	; 0xffffffec
     c50:	add	r0, r0, ip, lsl #3
     c54:	vldr	d16, [r0]
     c58:	vldr	d17, [sp, #40]	; 0x28
     c5c:	vcmpe.f64	d17, d16
     c60:	vmrs	APSR_nzcv, fpscr
     c64:	bhi	cec <register_leap_second+0x22c>
     c68:	vldr	d16, [fp, #-16]
     c6c:	ldr	r0, [pc, #228]	; d58 <register_leap_second+0x298>
     c70:	vstr	d16, [sp, #24]
     c74:	str	r0, [sp, #20]
     c78:	bl	0 <__aeabi_read_tp>
     c7c:	ldr	ip, [sp, #20]
     c80:	ldr	r0, [r0, ip]
     c84:	ldr	ip, [fp, #-20]	; 0xffffffec
     c88:	add	r0, r0, ip, lsl #3
     c8c:	vldr	d16, [r0]
     c90:	vldr	d17, [sp, #24]
     c94:	vcmp.f64	d17, d16
     c98:	vmrs	APSR_nzcv, fpscr
     c9c:	bne	cac <register_leap_second+0x1ec>
     ca0:	movw	r0, #0
     ca4:	str	r0, [fp, #-4]
     ca8:	b	d48 <register_leap_second+0x288>
     cac:	ldr	r0, [pc, #164]	; d58 <register_leap_second+0x298>
     cb0:	str	r0, [sp, #16]
     cb4:	bl	0 <__aeabi_read_tp>
     cb8:	ldr	ip, [sp, #16]
     cbc:	ldr	lr, [r0, ip]
     cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
     cc4:	add	r1, lr, r1, lsl #3
     cc8:	vldr	d16, [r1]
     ccc:	vstr	d16, [fp, #-32]	; 0xffffffe0
     cd0:	vldr	d16, [fp, #-16]
     cd4:	ldr	r0, [r0, ip]
     cd8:	ldr	r1, [fp, #-20]	; 0xffffffec
     cdc:	add	r0, r0, r1, lsl #3
     ce0:	vstr	d16, [r0]
     ce4:	vldr	d16, [fp, #-32]	; 0xffffffe0
     ce8:	vstr	d16, [fp, #-16]
     cec:	b	cf0 <register_leap_second+0x230>
     cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
     cf4:	add	r0, r0, #1
     cf8:	str	r0, [fp, #-20]	; 0xffffffec
     cfc:	b	c08 <register_leap_second+0x148>
     d00:	b	d04 <register_leap_second+0x244>
     d04:	vldr	d16, [fp, #-16]
     d08:	ldr	r0, [pc, #72]	; d58 <register_leap_second+0x298>
     d0c:	vstr	d16, [sp, #8]
     d10:	str	r0, [sp, #4]
     d14:	bl	0 <__aeabi_read_tp>
     d18:	ldr	ip, [sp, #4]
     d1c:	ldr	ip, [r0, ip]
     d20:	ldr	lr, [pc, #44]	; d54 <register_leap_second+0x294>
     d24:	ldr	r1, [r0, lr]
     d28:	add	r1, ip, r1, lsl #3
     d2c:	vldr	d16, [sp, #8]
     d30:	vstr	d16, [r1]
     d34:	ldr	r1, [r0, lr]
     d38:	add	r1, r1, #1
     d3c:	str	r1, [r0, lr]
     d40:	movw	r0, #0
     d44:	str	r0, [fp, #-4]
     d48:	ldr	r0, [fp, #-4]
     d4c:	mov	sp, fp
     d50:	pop	{fp, pc}
	...
     d5c:	.word	0xe320f000

00000d60 <coda_time_double_to_parts>:
     d60:	push	{r4, sl, fp, lr}
     d64:	add	fp, sp, #8
     d68:	sub	sp, sp, #88	; 0x58
     d6c:	ldr	ip, [fp, #16]
     d70:	ldr	lr, [fp, #12]
     d74:	ldr	r4, [fp, #8]
     d78:	vstr	d0, [fp, #-24]	; 0xffffffe8
     d7c:	str	r0, [fp, #-28]	; 0xffffffe4
     d80:	str	r1, [fp, #-32]	; 0xffffffe0
     d84:	str	r2, [fp, #-36]	; 0xffffffdc
     d88:	str	r3, [fp, #-40]	; 0xffffffd8
     d8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     d90:	movw	r1, #0
     d94:	cmp	r0, r1
     d98:	str	r4, [sp, #8]
     d9c:	str	ip, [sp, #4]
     da0:	str	lr, [sp]
     da4:	beq	e08 <coda_time_double_to_parts+0xa8>
     da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
     dac:	movw	r1, #0
     db0:	cmp	r0, r1
     db4:	beq	e08 <coda_time_double_to_parts+0xa8>
     db8:	ldr	r0, [fp, #-36]	; 0xffffffdc
     dbc:	movw	r1, #0
     dc0:	cmp	r0, r1
     dc4:	beq	e08 <coda_time_double_to_parts+0xa8>
     dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
     dcc:	movw	r1, #0
     dd0:	cmp	r0, r1
     dd4:	beq	e08 <coda_time_double_to_parts+0xa8>
     dd8:	ldr	r0, [fp, #8]
     ddc:	movw	r1, #0
     de0:	cmp	r0, r1
     de4:	beq	e08 <coda_time_double_to_parts+0xa8>
     de8:	ldr	r0, [fp, #12]
     dec:	movw	r1, #0
     df0:	cmp	r0, r1
     df4:	beq	e08 <coda_time_double_to_parts+0xa8>
     df8:	ldr	r0, [fp, #16]
     dfc:	movw	r1, #0
     e00:	cmp	r0, r1
     e04:	bne	e30 <coda_time_double_to_parts+0xd0>
     e08:	mvn	r0, #99	; 0x63
     e0c:	movw	r1, #0
     e10:	movt	r1, #0
     e14:	movw	r2, #0
     e18:	movt	r2, #0
     e1c:	movw	r3, #787	; 0x313
     e20:	bl	0 <coda_set_error>
     e24:	mvn	r0, #0
     e28:	str	r0, [fp, #-12]
     e2c:	b	fb8 <coda_time_double_to_parts+0x258>
     e30:	vldr	d0, [fp, #-24]	; 0xffffffe8
     e34:	bl	0 <coda_isNaN>
     e38:	cmp	r0, #0
     e3c:	beq	e5c <coda_time_double_to_parts+0xfc>
     e40:	mvn	r0, #103	; 0x67
     e44:	movw	r1, #0
     e48:	movt	r1, #0
     e4c:	bl	0 <coda_set_error>
     e50:	mvn	r0, #0
     e54:	str	r0, [fp, #-12]
     e58:	b	fb8 <coda_time_double_to_parts+0x258>
     e5c:	vldr	d0, [fp, #-24]	; 0xffffffe8
     e60:	bl	0 <coda_isInf>
     e64:	cmp	r0, #0
     e68:	beq	e88 <coda_time_double_to_parts+0x128>
     e6c:	mvn	r0, #103	; 0x67
     e70:	movw	r1, #0
     e74:	movt	r1, #0
     e78:	bl	0 <coda_set_error>
     e7c:	mvn	r0, #0
     e80:	str	r0, [fp, #-12]
     e84:	b	fb8 <coda_time_double_to_parts+0x258>
     e88:	vldr	d16, [pc, #312]	; fc8 <coda_time_double_to_parts+0x268>
     e8c:	vldr	d17, [pc, #316]	; fd0 <coda_time_double_to_parts+0x270>
     e90:	vldr	d18, [fp, #-24]	; 0xffffffe8
     e94:	vadd.f64	d17, d18, d17
     e98:	vstr	d17, [fp, #-24]	; 0xffffffe8
     e9c:	vldr	d17, [fp, #-24]	; 0xffffffe8
     ea0:	vrintm.f64	d17, d17
     ea4:	vstr	d17, [sp, #48]	; 0x30
     ea8:	vldr	d17, [sp, #48]	; 0x30
     eac:	vdiv.f64	d16, d17, d16
     eb0:	vrintm.f64	d16, d16
     eb4:	vcvt.s32.f64	s0, d16
     eb8:	vmov	r0, s0
     ebc:	str	r0, [sp, #16]
     ec0:	ldr	r0, [sp, #16]
     ec4:	add	r1, sp, #44	; 0x2c
     ec8:	add	r2, sp, #40	; 0x28
     ecc:	add	r3, sp, #36	; 0x24
     ed0:	bl	4b4 <mjd2000_to_dmy>
     ed4:	cmp	r0, #0
     ed8:	beq	ee8 <coda_time_double_to_parts+0x188>
     edc:	mvn	r0, #0
     ee0:	str	r0, [fp, #-12]
     ee4:	b	fb8 <coda_time_double_to_parts+0x258>
     ee8:	vldr	d16, [pc, #216]	; fc8 <coda_time_double_to_parts+0x268>
     eec:	vldr	d17, [sp, #48]	; 0x30
     ef0:	ldr	r0, [sp, #16]
     ef4:	vmov	s0, r0
     ef8:	vcvt.f64.s32	d18, s0
     efc:	vmul.f64	d16, d18, d16
     f00:	vsub.f64	d16, d17, d16
     f04:	vcvt.s32.f64	s0, d16
     f08:	vmov	r0, s0
     f0c:	str	r0, [sp, #12]
     f10:	ldr	r0, [sp, #12]
     f14:	add	r1, sp, #32
     f18:	add	r2, sp, #28
     f1c:	add	r3, sp, #24
     f20:	bl	fe0 <seconds_to_hms>
     f24:	cmp	r0, #0
     f28:	beq	f38 <coda_time_double_to_parts+0x1d8>
     f2c:	mvn	r0, #0
     f30:	str	r0, [fp, #-12]
     f34:	b	fb8 <coda_time_double_to_parts+0x258>
     f38:	vldr	d16, [pc, #152]	; fd8 <coda_time_double_to_parts+0x278>
     f3c:	vldr	d17, [fp, #-24]	; 0xffffffe8
     f40:	vldr	d18, [sp, #48]	; 0x30
     f44:	vsub.f64	d17, d17, d18
     f48:	vmul.f64	d16, d17, d16
     f4c:	vrintm.f64	d16, d16
     f50:	vcvt.s32.f64	s0, d16
     f54:	vmov	r0, s0
     f58:	str	r0, [sp, #20]
     f5c:	ldr	r0, [sp, #36]	; 0x24
     f60:	ldr	r1, [fp, #-28]	; 0xffffffe4
     f64:	str	r0, [r1]
     f68:	ldr	r0, [sp, #40]	; 0x28
     f6c:	ldr	r1, [fp, #-32]	; 0xffffffe0
     f70:	str	r0, [r1]
     f74:	ldr	r0, [sp, #44]	; 0x2c
     f78:	ldr	r1, [fp, #-36]	; 0xffffffdc
     f7c:	str	r0, [r1]
     f80:	ldr	r0, [sp, #32]
     f84:	ldr	r1, [fp, #-40]	; 0xffffffd8
     f88:	str	r0, [r1]
     f8c:	ldr	r0, [sp, #28]
     f90:	ldr	r1, [fp, #8]
     f94:	str	r0, [r1]
     f98:	ldr	r0, [sp, #24]
     f9c:	ldr	r1, [fp, #12]
     fa0:	str	r0, [r1]
     fa4:	ldr	r0, [sp, #20]
     fa8:	ldr	r1, [fp, #16]
     fac:	str	r0, [r1]
     fb0:	movw	r0, #0
     fb4:	str	r0, [fp, #-12]
     fb8:	ldr	r0, [fp, #-12]
     fbc:	sub	sp, fp, #8
     fc0:	pop	{r4, sl, fp, pc}
     fc4:	nop	{0}
     fc8:	.word	0x00000000
     fcc:	.word	0x40f51800
     fd0:	.word	0xa0b5ed8d
     fd4:	.word	0x3ea0c6f7
     fd8:	.word	0x00000000
     fdc:	.word	0x412e8480

00000fe0 <seconds_to_hms>:
     fe0:	push	{fp, lr}
     fe4:	mov	fp, sp
     fe8:	sub	sp, sp, #24
     fec:	str	r0, [fp, #-8]
     ff0:	str	r1, [sp, #12]
     ff4:	str	r2, [sp, #8]
     ff8:	str	r3, [sp, #4]
     ffc:	ldr	r0, [fp, #-8]
    1000:	str	r0, [sp]
    1004:	ldr	r0, [sp]
    1008:	cmp	r0, #0
    100c:	blt	1020 <seconds_to_hms+0x40>
    1010:	ldr	r0, [pc, #192]	; 10d8 <seconds_to_hms+0xf8>
    1014:	ldr	r1, [sp]
    1018:	cmp	r1, r0
    101c:	ble	1040 <seconds_to_hms+0x60>
    1020:	ldr	r2, [sp]
    1024:	mvn	r0, #103	; 0x67
    1028:	movw	r1, #0
    102c:	movt	r1, #0
    1030:	bl	0 <coda_set_error>
    1034:	mvn	r0, #0
    1038:	str	r0, [fp, #-4]
    103c:	b	10cc <seconds_to_hms+0xec>
    1040:	ldr	r0, [sp]
    1044:	movw	r1, #46021	; 0xb3c5
    1048:	movt	r1, #37282	; 0x91a2
    104c:	smmla	r0, r0, r1, r0
    1050:	asr	r2, r0, #11
    1054:	add	r0, r2, r0, lsr #31
    1058:	ldr	r2, [sp, #12]
    105c:	str	r0, [r2]
    1060:	ldr	r0, [sp]
    1064:	smmla	r1, r0, r1, r0
    1068:	asr	r2, r1, #11
    106c:	add	r1, r2, r1, lsr #31
    1070:	mov	r2, #3600	; 0xe10
    1074:	mls	r0, r1, r2, r0
    1078:	str	r0, [sp]
    107c:	ldr	r0, [sp]
    1080:	movw	r1, #34953	; 0x8889
    1084:	movt	r1, #34952	; 0x8888
    1088:	smmla	r0, r0, r1, r0
    108c:	asr	r2, r0, #5
    1090:	add	r0, r2, r0, lsr #31
    1094:	ldr	r2, [sp, #8]
    1098:	str	r0, [r2]
    109c:	ldr	r0, [sp]
    10a0:	smmla	r1, r0, r1, r0
    10a4:	asr	r2, r1, #5
    10a8:	add	r1, r2, r1, lsr #31
    10ac:	rsb	r1, r1, r1, lsl #4
    10b0:	sub	r0, r0, r1, lsl #2
    10b4:	str	r0, [sp]
    10b8:	ldr	r0, [sp]
    10bc:	ldr	r1, [sp, #4]
    10c0:	str	r0, [r1]
    10c4:	movw	r0, #0
    10c8:	str	r0, [fp, #-4]
    10cc:	ldr	r0, [fp, #-4]
    10d0:	mov	sp, fp
    10d4:	pop	{fp, pc}
    10d8:	.word	0x0001517f
    10dc:	.word	0xe320f000

000010e0 <coda_time_double_to_parts_utc>:
    10e0:	push	{r4, sl, fp, lr}
    10e4:	add	fp, sp, #8
    10e8:	sub	sp, sp, #168	; 0xa8
    10ec:	ldr	ip, [fp, #16]
    10f0:	ldr	lr, [fp, #12]
    10f4:	ldr	r4, [fp, #8]
    10f8:	vstr	d0, [fp, #-24]	; 0xffffffe8
    10fc:	str	r0, [fp, #-28]	; 0xffffffe4
    1100:	str	r1, [fp, #-32]	; 0xffffffe0
    1104:	str	r2, [fp, #-36]	; 0xffffffdc
    1108:	str	r3, [fp, #-40]	; 0xffffffd8
    110c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1110:	movw	r1, #0
    1114:	cmp	r0, r1
    1118:	str	r4, [sp, #80]	; 0x50
    111c:	str	ip, [sp, #76]	; 0x4c
    1120:	str	lr, [sp, #72]	; 0x48
    1124:	beq	1188 <coda_time_double_to_parts_utc+0xa8>
    1128:	ldr	r0, [fp, #-32]	; 0xffffffe0
    112c:	movw	r1, #0
    1130:	cmp	r0, r1
    1134:	beq	1188 <coda_time_double_to_parts_utc+0xa8>
    1138:	ldr	r0, [fp, #-36]	; 0xffffffdc
    113c:	movw	r1, #0
    1140:	cmp	r0, r1
    1144:	beq	1188 <coda_time_double_to_parts_utc+0xa8>
    1148:	ldr	r0, [fp, #-40]	; 0xffffffd8
    114c:	movw	r1, #0
    1150:	cmp	r0, r1
    1154:	beq	1188 <coda_time_double_to_parts_utc+0xa8>
    1158:	ldr	r0, [fp, #8]
    115c:	movw	r1, #0
    1160:	cmp	r0, r1
    1164:	beq	1188 <coda_time_double_to_parts_utc+0xa8>
    1168:	ldr	r0, [fp, #12]
    116c:	movw	r1, #0
    1170:	cmp	r0, r1
    1174:	beq	1188 <coda_time_double_to_parts_utc+0xa8>
    1178:	ldr	r0, [fp, #16]
    117c:	movw	r1, #0
    1180:	cmp	r0, r1
    1184:	bne	11b0 <coda_time_double_to_parts_utc+0xd0>
    1188:	mvn	r0, #99	; 0x63
    118c:	movw	r1, #0
    1190:	movt	r1, #0
    1194:	movw	r2, #0
    1198:	movt	r2, #0
    119c:	movw	r3, #874	; 0x36a
    11a0:	bl	0 <coda_set_error>
    11a4:	mvn	r0, #0
    11a8:	str	r0, [fp, #-12]
    11ac:	b	14dc <coda_time_double_to_parts_utc+0x3fc>
    11b0:	vldr	d0, [fp, #-24]	; 0xffffffe8
    11b4:	bl	0 <coda_isNaN>
    11b8:	cmp	r0, #0
    11bc:	beq	11dc <coda_time_double_to_parts_utc+0xfc>
    11c0:	mvn	r0, #103	; 0x67
    11c4:	movw	r1, #0
    11c8:	movt	r1, #0
    11cc:	bl	0 <coda_set_error>
    11d0:	mvn	r0, #0
    11d4:	str	r0, [fp, #-12]
    11d8:	b	14dc <coda_time_double_to_parts_utc+0x3fc>
    11dc:	vldr	d0, [fp, #-24]	; 0xffffffe8
    11e0:	bl	0 <coda_isInf>
    11e4:	cmp	r0, #0
    11e8:	beq	1208 <coda_time_double_to_parts_utc+0x128>
    11ec:	mvn	r0, #103	; 0x67
    11f0:	movw	r1, #0
    11f4:	movt	r1, #0
    11f8:	bl	0 <coda_set_error>
    11fc:	mvn	r0, #0
    1200:	str	r0, [fp, #-12]
    1204:	b	14dc <coda_time_double_to_parts_utc+0x3fc>
    1208:	vldr	d16, [fp, #-24]	; 0xffffffe8
    120c:	vldr	d17, [pc, #724]	; 14e8 <coda_time_double_to_parts_utc+0x408>
    1210:	vadd.f64	d16, d16, d17
    1214:	vstr	d16, [fp, #-24]	; 0xffffffe8
    1218:	vldr	d16, [fp, #-24]	; 0xffffffe8
    121c:	vrintm.f64	d16, d16
    1220:	vstr	d16, [fp, #-48]	; 0xffffffd0
    1224:	ldr	r0, [pc, #732]	; 1508 <coda_time_double_to_parts_utc+0x428>
    1228:	str	r0, [sp, #68]	; 0x44
    122c:	bl	0 <__aeabi_read_tp>
    1230:	ldr	ip, [sp, #68]	; 0x44
    1234:	ldr	r0, [r0, ip]
    1238:	movw	ip, #0
    123c:	cmp	r0, ip
    1240:	beq	1264 <coda_time_double_to_parts_utc+0x184>
    1244:	ldr	r0, [pc, #704]	; 150c <coda_time_double_to_parts_utc+0x42c>
    1248:	str	r0, [sp, #64]	; 0x40
    124c:	bl	0 <__aeabi_read_tp>
    1250:	ldr	ip, [sp, #64]	; 0x40
    1254:	ldr	r0, [r0, ip]
    1258:	cmp	r0, #0
    125c:	ble	1264 <coda_time_double_to_parts_utc+0x184>
    1260:	b	1284 <coda_time_double_to_parts_utc+0x1a4>
    1264:	movw	r0, #0
    1268:	movt	r0, #0
    126c:	movw	r1, #0
    1270:	movt	r1, #0
    1274:	movw	r2, #894	; 0x37e
    1278:	movw	r3, #0
    127c:	movt	r3, #0
    1280:	bl	0 <__assert_fail>
    1284:	movw	r0, #0
    1288:	str	r0, [sp, #88]	; 0x58
    128c:	ldr	r0, [sp, #88]	; 0x58
    1290:	ldr	r1, [pc, #628]	; 150c <coda_time_double_to_parts_utc+0x42c>
    1294:	str	r0, [sp, #60]	; 0x3c
    1298:	str	r1, [sp, #56]	; 0x38
    129c:	bl	0 <__aeabi_read_tp>
    12a0:	ldr	r1, [sp, #56]	; 0x38
    12a4:	ldr	r0, [r0, r1]
    12a8:	ldr	r1, [sp, #60]	; 0x3c
    12ac:	cmp	r1, r0
    12b0:	movw	r0, #0
    12b4:	str	r0, [sp, #52]	; 0x34
    12b8:	bge	12fc <coda_time_double_to_parts_utc+0x21c>
    12bc:	vldr	d16, [fp, #-48]	; 0xffffffd0
    12c0:	ldr	r0, [pc, #576]	; 1508 <coda_time_double_to_parts_utc+0x428>
    12c4:	vstr	d16, [sp, #40]	; 0x28
    12c8:	str	r0, [sp, #36]	; 0x24
    12cc:	bl	0 <__aeabi_read_tp>
    12d0:	ldr	ip, [sp, #36]	; 0x24
    12d4:	ldr	r0, [r0, ip]
    12d8:	ldr	ip, [sp, #88]	; 0x58
    12dc:	add	r0, r0, ip, lsl #3
    12e0:	vldr	d16, [r0]
    12e4:	vldr	d17, [sp, #40]	; 0x28
    12e8:	vcmpe.f64	d17, d16
    12ec:	vmrs	APSR_nzcv, fpscr
    12f0:	movw	r0, #0
    12f4:	movgt	r0, #1
    12f8:	str	r0, [sp, #52]	; 0x34
    12fc:	ldr	r0, [sp, #52]	; 0x34
    1300:	tst	r0, #1
    1304:	beq	1318 <coda_time_double_to_parts_utc+0x238>
    1308:	ldr	r0, [sp, #88]	; 0x58
    130c:	add	r0, r0, #1
    1310:	str	r0, [sp, #88]	; 0x58
    1314:	b	128c <coda_time_double_to_parts_utc+0x1ac>
    1318:	vldr	d16, [pc, #464]	; 14f0 <coda_time_double_to_parts_utc+0x410>
    131c:	vldr	d17, [pc, #468]	; 14f8 <coda_time_double_to_parts_utc+0x418>
    1320:	vldr	d18, [fp, #-48]	; 0xffffffd0
    1324:	ldr	r0, [pc, #476]	; 1508 <coda_time_double_to_parts_utc+0x428>
    1328:	vstr	d16, [sp, #24]
    132c:	vstr	d17, [sp, #16]
    1330:	vstr	d18, [sp, #8]
    1334:	str	r0, [sp, #4]
    1338:	bl	0 <__aeabi_read_tp>
    133c:	ldr	ip, [sp, #4]
    1340:	ldr	r0, [r0, ip]
    1344:	ldr	ip, [sp, #88]	; 0x58
    1348:	add	r0, r0, ip, lsl #3
    134c:	vldr	d16, [r0]
    1350:	vldr	d17, [sp, #8]
    1354:	vsub.f64	d16, d17, d16
    1358:	vabs.f64	d16, d16
    135c:	vldr	d17, [sp, #16]
    1360:	vcmpe.f64	d16, d17
    1364:	vmrs	APSR_nzcv, fpscr
    1368:	movw	r0, #0
    136c:	movmi	r0, #1
    1370:	and	r0, r0, #1
    1374:	str	r0, [sp, #84]	; 0x54
    1378:	ldr	r0, [sp, #88]	; 0x58
    137c:	add	r0, r0, #10
    1380:	ldr	ip, [sp, #84]	; 0x54
    1384:	add	r0, r0, ip
    1388:	vmov	s0, r0
    138c:	vcvt.f64.s32	d16, s0
    1390:	vldr	d18, [fp, #-48]	; 0xffffffd0
    1394:	vsub.f64	d16, d18, d16
    1398:	vstr	d16, [fp, #-48]	; 0xffffffd0
    139c:	ldr	r0, [sp, #88]	; 0x58
    13a0:	add	r0, r0, #10
    13a4:	ldr	ip, [sp, #84]	; 0x54
    13a8:	add	r0, r0, ip
    13ac:	vmov	s0, r0
    13b0:	vcvt.f64.s32	d16, s0
    13b4:	vldr	d18, [fp, #-24]	; 0xffffffe8
    13b8:	vsub.f64	d16, d18, d16
    13bc:	vstr	d16, [fp, #-24]	; 0xffffffe8
    13c0:	vldr	d16, [fp, #-48]	; 0xffffffd0
    13c4:	vldr	d18, [sp, #24]
    13c8:	vdiv.f64	d16, d16, d18
    13cc:	vrintm.f64	d16, d16
    13d0:	vcvt.s32.f64	s0, d16
    13d4:	vmov	r0, s0
    13d8:	str	r0, [fp, #-80]	; 0xffffffb0
    13dc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    13e0:	sub	r1, fp, #52	; 0x34
    13e4:	sub	r2, fp, #56	; 0x38
    13e8:	sub	r3, fp, #60	; 0x3c
    13ec:	bl	4b4 <mjd2000_to_dmy>
    13f0:	cmp	r0, #0
    13f4:	beq	1404 <coda_time_double_to_parts_utc+0x324>
    13f8:	mvn	r0, #0
    13fc:	str	r0, [fp, #-12]
    1400:	b	14dc <coda_time_double_to_parts_utc+0x3fc>
    1404:	vldr	d16, [pc, #228]	; 14f0 <coda_time_double_to_parts_utc+0x410>
    1408:	vldr	d17, [fp, #-48]	; 0xffffffd0
    140c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1410:	vmov	s0, r0
    1414:	vcvt.f64.s32	d18, s0
    1418:	vmul.f64	d16, d18, d16
    141c:	vsub.f64	d16, d17, d16
    1420:	vcvt.s32.f64	s0, d16
    1424:	vmov	r0, s0
    1428:	str	r0, [fp, #-84]	; 0xffffffac
    142c:	ldr	r0, [fp, #-84]	; 0xffffffac
    1430:	sub	r1, fp, #64	; 0x40
    1434:	sub	r2, fp, #68	; 0x44
    1438:	sub	r3, fp, #72	; 0x48
    143c:	bl	fe0 <seconds_to_hms>
    1440:	cmp	r0, #0
    1444:	beq	1454 <coda_time_double_to_parts_utc+0x374>
    1448:	mvn	r0, #0
    144c:	str	r0, [fp, #-12]
    1450:	b	14dc <coda_time_double_to_parts_utc+0x3fc>
    1454:	vldr	d16, [pc, #164]	; 1500 <coda_time_double_to_parts_utc+0x420>
    1458:	vldr	d17, [fp, #-24]	; 0xffffffe8
    145c:	vldr	d18, [fp, #-48]	; 0xffffffd0
    1460:	vsub.f64	d17, d17, d18
    1464:	vmul.f64	d16, d17, d16
    1468:	vrintm.f64	d16, d16
    146c:	vcvt.s32.f64	s0, d16
    1470:	vmov	r0, s0
    1474:	str	r0, [fp, #-76]	; 0xffffffb4
    1478:	ldr	r0, [fp, #-60]	; 0xffffffc4
    147c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1480:	str	r0, [r1]
    1484:	ldr	r0, [fp, #-56]	; 0xffffffc8
    1488:	ldr	r1, [fp, #-32]	; 0xffffffe0
    148c:	str	r0, [r1]
    1490:	ldr	r0, [fp, #-52]	; 0xffffffcc
    1494:	ldr	r1, [fp, #-36]	; 0xffffffdc
    1498:	str	r0, [r1]
    149c:	ldr	r0, [fp, #-64]	; 0xffffffc0
    14a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
    14a4:	str	r0, [r1]
    14a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
    14ac:	ldr	r1, [fp, #8]
    14b0:	str	r0, [r1]
    14b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
    14b8:	ldr	r1, [sp, #84]	; 0x54
    14bc:	add	r0, r0, r1
    14c0:	ldr	r1, [fp, #12]
    14c4:	str	r0, [r1]
    14c8:	ldr	r0, [fp, #-76]	; 0xffffffb4
    14cc:	ldr	r1, [fp, #16]
    14d0:	str	r0, [r1]
    14d4:	movw	r0, #0
    14d8:	str	r0, [fp, #-12]
    14dc:	ldr	r0, [fp, #-12]
    14e0:	sub	sp, fp, #8
    14e4:	pop	{r4, sl, fp, pc}
    14e8:	.word	0xa0b5ed8d
    14ec:	.word	0x3ea0c6f7
    14f0:	.word	0x00000000
    14f4:	.word	0x40f51800
    14f8:	.word	0x9999999a
    14fc:	.word	0x3fb99999
    1500:	.word	0x00000000
    1504:	.word	0x412e8480
	...

00001510 <coda_time_parts_to_double>:
    1510:	push	{r4, r5, fp, lr}
    1514:	add	fp, sp, #8
    1518:	sub	sp, sp, #56	; 0x38
    151c:	ldr	ip, [fp, #20]
    1520:	ldr	lr, [fp, #16]
    1524:	ldr	r4, [fp, #12]
    1528:	ldr	r5, [fp, #8]
    152c:	str	r0, [fp, #-16]
    1530:	str	r1, [fp, #-20]	; 0xffffffec
    1534:	str	r2, [fp, #-24]	; 0xffffffe8
    1538:	str	r3, [fp, #-28]	; 0xffffffe4
    153c:	ldr	r0, [fp, #20]
    1540:	movw	r1, #0
    1544:	cmp	r0, r1
    1548:	str	r5, [sp, #16]
    154c:	str	ip, [sp, #12]
    1550:	str	lr, [sp, #8]
    1554:	str	r4, [sp, #4]
    1558:	bne	1584 <coda_time_parts_to_double+0x74>
    155c:	mvn	r0, #99	; 0x63
    1560:	movw	r1, #0
    1564:	movt	r1, #0
    1568:	movw	r2, #0
    156c:	movt	r2, #0
    1570:	movw	r3, #954	; 0x3ba
    1574:	bl	0 <coda_set_error>
    1578:	mvn	r0, #0
    157c:	str	r0, [fp, #-12]
    1580:	b	1608 <coda_time_parts_to_double+0xf8>
    1584:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1588:	ldr	r1, [fp, #-20]	; 0xffffffec
    158c:	ldr	r2, [fp, #-16]
    1590:	add	r3, sp, #20
    1594:	bl	364 <dmy_to_mjd2000>
    1598:	cmp	r0, #0
    159c:	beq	15ac <coda_time_parts_to_double+0x9c>
    15a0:	mvn	r0, #0
    15a4:	str	r0, [fp, #-12]
    15a8:	b	1608 <coda_time_parts_to_double+0xf8>
    15ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    15b0:	ldr	r1, [fp, #8]
    15b4:	ldr	r2, [fp, #12]
    15b8:	ldr	r3, [fp, #16]
    15bc:	add	ip, sp, #24
    15c0:	str	ip, [sp]
    15c4:	bl	1620 <hms_to_daytime>
    15c8:	cmp	r0, #0
    15cc:	beq	15dc <coda_time_parts_to_double+0xcc>
    15d0:	mvn	r0, #0
    15d4:	str	r0, [fp, #-12]
    15d8:	b	1608 <coda_time_parts_to_double+0xf8>
    15dc:	vldr	d16, [pc, #52]	; 1618 <coda_time_parts_to_double+0x108>
    15e0:	ldr	r0, [sp, #20]
    15e4:	vmov	s0, r0
    15e8:	vcvt.f64.s32	d17, s0
    15ec:	vmul.f64	d16, d16, d17
    15f0:	vldr	d17, [sp, #24]
    15f4:	vadd.f64	d16, d16, d17
    15f8:	ldr	r0, [fp, #20]
    15fc:	vstr	d16, [r0]
    1600:	movw	r0, #0
    1604:	str	r0, [fp, #-12]
    1608:	ldr	r0, [fp, #-12]
    160c:	sub	sp, fp, #8
    1610:	pop	{r4, r5, fp, pc}
    1614:	nop	{0}
    1618:	.word	0x00000000
    161c:	.word	0x40f51800

00001620 <hms_to_daytime>:
    1620:	push	{fp, lr}
    1624:	mov	fp, sp
    1628:	sub	sp, sp, #40	; 0x28
    162c:	ldr	ip, [fp, #8]
    1630:	str	r0, [fp, #-8]
    1634:	str	r1, [fp, #-12]
    1638:	str	r2, [fp, #-16]
    163c:	str	r3, [sp, #20]
    1640:	ldr	r0, [fp, #-8]
    1644:	cmp	r0, #0
    1648:	str	ip, [sp, #16]
    164c:	blt	16a8 <hms_to_daytime+0x88>
    1650:	ldr	r0, [fp, #-8]
    1654:	cmp	r0, #23
    1658:	bgt	16a8 <hms_to_daytime+0x88>
    165c:	ldr	r0, [fp, #-12]
    1660:	cmp	r0, #0
    1664:	blt	16a8 <hms_to_daytime+0x88>
    1668:	ldr	r0, [fp, #-12]
    166c:	cmp	r0, #59	; 0x3b
    1670:	bgt	16a8 <hms_to_daytime+0x88>
    1674:	ldr	r0, [fp, #-16]
    1678:	cmp	r0, #0
    167c:	blt	16a8 <hms_to_daytime+0x88>
    1680:	ldr	r0, [fp, #-16]
    1684:	cmp	r0, #60	; 0x3c
    1688:	bgt	16a8 <hms_to_daytime+0x88>
    168c:	ldr	r0, [sp, #20]
    1690:	cmp	r0, #0
    1694:	blt	16a8 <hms_to_daytime+0x88>
    1698:	ldr	r0, [pc, #232]	; 1788 <hms_to_daytime+0x168>
    169c:	ldr	r1, [sp, #20]
    16a0:	cmp	r1, r0
    16a4:	ble	16f4 <hms_to_daytime+0xd4>
    16a8:	ldr	r2, [fp, #-8]
    16ac:	ldr	r3, [fp, #-12]
    16b0:	ldr	r0, [fp, #-16]
    16b4:	ldr	r1, [sp, #20]
    16b8:	mvn	ip, #103	; 0x67
    16bc:	str	r0, [sp, #12]
    16c0:	mov	r0, ip
    16c4:	movw	ip, #0
    16c8:	movt	ip, #0
    16cc:	str	r1, [sp, #8]
    16d0:	mov	r1, ip
    16d4:	ldr	ip, [sp, #12]
    16d8:	str	ip, [sp]
    16dc:	ldr	lr, [sp, #8]
    16e0:	str	lr, [sp, #4]
    16e4:	bl	0 <coda_set_error>
    16e8:	mvn	r0, #0
    16ec:	str	r0, [fp, #-4]
    16f0:	b	1760 <hms_to_daytime+0x140>
    16f4:	vldr	d16, [pc, #116]	; 1770 <hms_to_daytime+0x150>
    16f8:	vldr	d17, [pc, #120]	; 1778 <hms_to_daytime+0x158>
    16fc:	vldr	d18, [pc, #124]	; 1780 <hms_to_daytime+0x160>
    1700:	ldr	r0, [fp, #-8]
    1704:	vmov	s0, r0
    1708:	vcvt.f64.s32	d19, s0
    170c:	vmul.f64	d18, d18, d19
    1710:	ldr	r0, [fp, #-12]
    1714:	vmov	s0, r0
    1718:	vcvt.f64.s32	d19, s0
    171c:	vmul.f64	d17, d17, d19
    1720:	vadd.f64	d17, d18, d17
    1724:	ldr	r0, [fp, #-16]
    1728:	vmov	s0, r0
    172c:	vcvt.f64.s32	d18, s0
    1730:	vmov.f64	d19, #112	; 0x3f800000  1.0
    1734:	vmul.f64	d18, d19, d18
    1738:	vadd.f64	d17, d17, d18
    173c:	ldr	r0, [sp, #20]
    1740:	vmov	s0, r0
    1744:	vcvt.f64.s32	d18, s0
    1748:	vdiv.f64	d16, d18, d16
    174c:	vadd.f64	d16, d17, d16
    1750:	ldr	r0, [fp, #8]
    1754:	vstr	d16, [r0]
    1758:	movw	r0, #0
    175c:	str	r0, [fp, #-4]
    1760:	ldr	r0, [fp, #-4]
    1764:	mov	sp, fp
    1768:	pop	{fp, pc}
    176c:	nop	{0}
    1770:	.word	0x00000000
    1774:	.word	0x412e8480
    1778:	.word	0x00000000
    177c:	.word	0x404e0000
    1780:	.word	0x00000000
    1784:	.word	0x40ac2000
    1788:	.word	0x000f423f
    178c:	.word	0xe320f000

00001790 <coda_time_parts_to_double_utc>:
    1790:	push	{r4, r5, fp, lr}
    1794:	add	fp, sp, #8
    1798:	sub	sp, sp, #104	; 0x68
    179c:	ldr	ip, [fp, #20]
    17a0:	ldr	lr, [fp, #16]
    17a4:	ldr	r4, [fp, #12]
    17a8:	ldr	r5, [fp, #8]
    17ac:	str	r0, [fp, #-16]
    17b0:	str	r1, [fp, #-20]	; 0xffffffec
    17b4:	str	r2, [fp, #-24]	; 0xffffffe8
    17b8:	str	r3, [fp, #-28]	; 0xffffffe4
    17bc:	ldr	r0, [fp, #20]
    17c0:	movw	r1, #0
    17c4:	cmp	r0, r1
    17c8:	str	r5, [sp, #52]	; 0x34
    17cc:	str	ip, [sp, #48]	; 0x30
    17d0:	str	lr, [sp, #44]	; 0x2c
    17d4:	str	r4, [sp, #40]	; 0x28
    17d8:	bne	1804 <coda_time_parts_to_double_utc+0x74>
    17dc:	mvn	r0, #99	; 0x63
    17e0:	movw	r1, #0
    17e4:	movt	r1, #0
    17e8:	movw	r2, #0
    17ec:	movt	r2, #0
    17f0:	movw	r3, #1008	; 0x3f0
    17f4:	bl	0 <coda_set_error>
    17f8:	mvn	r0, #0
    17fc:	str	r0, [fp, #-12]
    1800:	b	1994 <coda_time_parts_to_double_utc+0x204>
    1804:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1808:	ldr	r1, [fp, #-20]	; 0xffffffec
    180c:	ldr	r2, [fp, #-16]
    1810:	sub	r3, fp, #52	; 0x34
    1814:	bl	364 <dmy_to_mjd2000>
    1818:	cmp	r0, #0
    181c:	beq	182c <coda_time_parts_to_double_utc+0x9c>
    1820:	mvn	r0, #0
    1824:	str	r0, [fp, #-12]
    1828:	b	1994 <coda_time_parts_to_double_utc+0x204>
    182c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1830:	ldr	r1, [fp, #8]
    1834:	ldr	r2, [fp, #12]
    1838:	ldr	r3, [fp, #16]
    183c:	sub	ip, fp, #40	; 0x28
    1840:	str	ip, [sp]
    1844:	bl	1620 <hms_to_daytime>
    1848:	cmp	r0, #0
    184c:	beq	185c <coda_time_parts_to_double_utc+0xcc>
    1850:	mvn	r0, #0
    1854:	str	r0, [fp, #-12]
    1858:	b	1994 <coda_time_parts_to_double_utc+0x204>
    185c:	vldr	s0, [fp, #-52]	; 0xffffffcc
    1860:	vcvt.f64.s32	d16, s0
    1864:	vldr	d17, [pc, #308]	; 19a0 <coda_time_parts_to_double_utc+0x210>
    1868:	vmov.f64	d18, #36	; 0x41200000  10.0
    186c:	vmla.f64	d18, d16, d17
    1870:	vstr	d18, [fp, #-48]	; 0xffffffd0
    1874:	ldr	r0, [pc, #300]	; 19a8 <coda_time_parts_to_double_utc+0x218>
    1878:	str	r0, [sp, #36]	; 0x24
    187c:	bl	0 <__aeabi_read_tp>
    1880:	ldr	ip, [sp, #36]	; 0x24
    1884:	ldr	r0, [r0, ip]
    1888:	movw	ip, #0
    188c:	cmp	r0, ip
    1890:	beq	18b4 <coda_time_parts_to_double_utc+0x124>
    1894:	ldr	r0, [pc, #272]	; 19ac <coda_time_parts_to_double_utc+0x21c>
    1898:	str	r0, [sp, #32]
    189c:	bl	0 <__aeabi_read_tp>
    18a0:	ldr	ip, [sp, #32]
    18a4:	ldr	r0, [r0, ip]
    18a8:	cmp	r0, #0
    18ac:	ble	18b4 <coda_time_parts_to_double_utc+0x124>
    18b0:	b	18d4 <coda_time_parts_to_double_utc+0x144>
    18b4:	movw	r0, #0
    18b8:	movt	r0, #0
    18bc:	movw	r1, #0
    18c0:	movt	r1, #0
    18c4:	movw	r2, #1024	; 0x400
    18c8:	movw	r3, #0
    18cc:	movt	r3, #0
    18d0:	bl	0 <__assert_fail>
    18d4:	movw	r0, #0
    18d8:	str	r0, [sp, #56]	; 0x38
    18dc:	ldr	r0, [sp, #56]	; 0x38
    18e0:	ldr	r1, [pc, #196]	; 19ac <coda_time_parts_to_double_utc+0x21c>
    18e4:	str	r0, [sp, #28]
    18e8:	str	r1, [sp, #24]
    18ec:	bl	0 <__aeabi_read_tp>
    18f0:	ldr	r1, [sp, #24]
    18f4:	ldr	r0, [r0, r1]
    18f8:	ldr	r1, [sp, #28]
    18fc:	cmp	r1, r0
    1900:	movw	r0, #0
    1904:	str	r0, [sp, #20]
    1908:	bge	194c <coda_time_parts_to_double_utc+0x1bc>
    190c:	vldr	d16, [fp, #-48]	; 0xffffffd0
    1910:	ldr	r0, [pc, #144]	; 19a8 <coda_time_parts_to_double_utc+0x218>
    1914:	vstr	d16, [sp, #8]
    1918:	str	r0, [sp, #4]
    191c:	bl	0 <__aeabi_read_tp>
    1920:	ldr	ip, [sp, #4]
    1924:	ldr	r0, [r0, ip]
    1928:	ldr	ip, [sp, #56]	; 0x38
    192c:	add	r0, r0, ip, lsl #3
    1930:	vldr	d16, [r0]
    1934:	vldr	d17, [sp, #8]
    1938:	vcmpe.f64	d17, d16
    193c:	vmrs	APSR_nzcv, fpscr
    1940:	movw	r0, #0
    1944:	movge	r0, #1
    1948:	str	r0, [sp, #20]
    194c:	ldr	r0, [sp, #20]
    1950:	tst	r0, #1
    1954:	beq	1978 <coda_time_parts_to_double_utc+0x1e8>
    1958:	vldr	d16, [fp, #-48]	; 0xffffffd0
    195c:	vmov.f64	d17, #112	; 0x3f800000  1.0
    1960:	vadd.f64	d16, d16, d17
    1964:	vstr	d16, [fp, #-48]	; 0xffffffd0
    1968:	ldr	r0, [sp, #56]	; 0x38
    196c:	add	r0, r0, #1
    1970:	str	r0, [sp, #56]	; 0x38
    1974:	b	18dc <coda_time_parts_to_double_utc+0x14c>
    1978:	vldr	d16, [fp, #-48]	; 0xffffffd0
    197c:	vldr	d17, [fp, #-40]	; 0xffffffd8
    1980:	vadd.f64	d16, d16, d17
    1984:	ldr	r0, [fp, #20]
    1988:	vstr	d16, [r0]
    198c:	movw	r0, #0
    1990:	str	r0, [fp, #-12]
    1994:	ldr	r0, [fp, #-12]
    1998:	sub	sp, fp, #8
    199c:	pop	{r4, r5, fp, pc}
    19a0:	.word	0x00000000
    19a4:	.word	0x40f51800
	...

000019b0 <coda_time_parts_to_string>:
    19b0:	push	{r4, r5, r6, r7, fp, lr}
    19b4:	add	fp, sp, #16
    19b8:	sub	sp, sp, #168	; 0xa8
    19bc:	ldr	ip, [fp, #24]
    19c0:	ldr	lr, [fp, #20]
    19c4:	ldr	r4, [fp, #16]
    19c8:	ldr	r5, [fp, #12]
    19cc:	ldr	r6, [fp, #8]
    19d0:	movw	r7, #0
    19d4:	movt	r7, #0
    19d8:	str	r0, [fp, #-24]	; 0xffffffe8
    19dc:	str	r1, [fp, #-28]	; 0xffffffe4
    19e0:	str	r2, [fp, #-32]	; 0xffffffe0
    19e4:	str	r3, [fp, #-36]	; 0xffffffdc
    19e8:	sub	r0, fp, #84	; 0x54
    19ec:	mov	r1, r7
    19f0:	movw	r2, #48	; 0x30
    19f4:	str	r6, [sp, #64]	; 0x40
    19f8:	str	r4, [sp, #60]	; 0x3c
    19fc:	str	r5, [sp, #56]	; 0x38
    1a00:	str	lr, [sp, #52]	; 0x34
    1a04:	str	ip, [sp, #48]	; 0x30
    1a08:	bl	0 <memcpy>
    1a0c:	movw	r0, #0
    1a10:	str	r0, [fp, #-88]	; 0xffffffa8
    1a14:	str	r0, [sp, #92]	; 0x5c
    1a18:	str	r0, [sp, #88]	; 0x58
    1a1c:	ldr	r1, [fp, #20]
    1a20:	cmp	r1, r0
    1a24:	bne	1a50 <coda_time_parts_to_string+0xa0>
    1a28:	mvn	r0, #99	; 0x63
    1a2c:	movw	r1, #0
    1a30:	movt	r1, #0
    1a34:	movw	r2, #0
    1a38:	movt	r2, #0
    1a3c:	movw	r3, #1069	; 0x42d
    1a40:	bl	0 <coda_set_error>
    1a44:	mvn	r0, #0
    1a48:	str	r0, [fp, #-20]	; 0xffffffec
    1a4c:	b	231c <coda_time_parts_to_string+0x96c>
    1a50:	ldr	r0, [fp, #24]
    1a54:	movw	r1, #0
    1a58:	cmp	r0, r1
    1a5c:	bne	1a88 <coda_time_parts_to_string+0xd8>
    1a60:	mvn	r0, #99	; 0x63
    1a64:	movw	r1, #0
    1a68:	movt	r1, #0
    1a6c:	movw	r2, #0
    1a70:	movt	r2, #0
    1a74:	movw	r3, #1074	; 0x432
    1a78:	bl	0 <coda_set_error>
    1a7c:	mvn	r0, #0
    1a80:	str	r0, [fp, #-20]	; 0xffffffec
    1a84:	b	231c <coda_time_parts_to_string+0x96c>
    1a88:	b	1a8c <coda_time_parts_to_string+0xdc>
    1a8c:	ldr	r0, [fp, #20]
    1a90:	ldr	r1, [sp, #92]	; 0x5c
    1a94:	add	r0, r0, r1
    1a98:	ldrb	r0, [r0]
    1a9c:	cmp	r0, #0
    1aa0:	movw	r0, #0
    1aa4:	str	r0, [sp, #44]	; 0x2c
    1aa8:	beq	1ae8 <coda_time_parts_to_string+0x138>
    1aac:	ldr	r0, [fp, #-88]	; 0xffffffa8
    1ab0:	cmp	r0, #0
    1ab4:	movw	r0, #1
    1ab8:	str	r0, [sp, #40]	; 0x28
    1abc:	bne	1ae0 <coda_time_parts_to_string+0x130>
    1ac0:	ldr	r0, [fp, #20]
    1ac4:	ldr	r1, [sp, #92]	; 0x5c
    1ac8:	add	r0, r0, r1
    1acc:	ldrb	r0, [r0]
    1ad0:	cmp	r0, #124	; 0x7c
    1ad4:	movw	r0, #0
    1ad8:	movne	r0, #1
    1adc:	str	r0, [sp, #40]	; 0x28
    1ae0:	ldr	r0, [sp, #40]	; 0x28
    1ae4:	str	r0, [sp, #44]	; 0x2c
    1ae8:	ldr	r0, [sp, #44]	; 0x2c
    1aec:	tst	r0, #1
    1af0:	beq	22e8 <coda_time_parts_to_string+0x938>
    1af4:	ldr	r0, [fp, #20]
    1af8:	ldr	r1, [sp, #92]	; 0x5c
    1afc:	add	r0, r0, r1
    1b00:	ldrb	r0, [r0]
    1b04:	cmp	r0, #39	; 0x27
    1b08:	bne	1b58 <coda_time_parts_to_string+0x1a8>
    1b0c:	ldr	r0, [sp, #92]	; 0x5c
    1b10:	add	r0, r0, #1
    1b14:	str	r0, [sp, #92]	; 0x5c
    1b18:	ldr	r0, [fp, #20]
    1b1c:	ldr	r1, [sp, #92]	; 0x5c
    1b20:	add	r0, r0, r1
    1b24:	ldrb	r0, [r0]
    1b28:	cmp	r0, #39	; 0x27
    1b2c:	beq	1b54 <coda_time_parts_to_string+0x1a4>
    1b30:	ldr	r0, [fp, #-88]	; 0xffffffa8
    1b34:	cmp	r0, #0
    1b38:	movw	r0, #0
    1b3c:	movne	r0, #1
    1b40:	mvn	r1, #0
    1b44:	eor	r0, r0, r1
    1b48:	and	r0, r0, #1
    1b4c:	str	r0, [fp, #-88]	; 0xffffffa8
    1b50:	b	1a8c <coda_time_parts_to_string+0xdc>
    1b54:	b	1b58 <coda_time_parts_to_string+0x1a8>
    1b58:	ldr	r0, [fp, #-88]	; 0xffffffa8
    1b5c:	cmp	r0, #0
    1b60:	beq	1ba0 <coda_time_parts_to_string+0x1f0>
    1b64:	ldr	r0, [fp, #20]
    1b68:	ldr	r1, [sp, #92]	; 0x5c
    1b6c:	add	r0, r0, r1
    1b70:	ldrb	r0, [r0]
    1b74:	ldr	r1, [fp, #24]
    1b78:	ldr	r2, [sp, #88]	; 0x58
    1b7c:	add	r1, r1, r2
    1b80:	strb	r0, [r1]
    1b84:	ldr	r0, [sp, #92]	; 0x5c
    1b88:	add	r0, r0, #1
    1b8c:	str	r0, [sp, #92]	; 0x5c
    1b90:	ldr	r0, [sp, #88]	; 0x58
    1b94:	add	r0, r0, #1
    1b98:	str	r0, [sp, #88]	; 0x58
    1b9c:	b	22e4 <coda_time_parts_to_string+0x934>
    1ba0:	ldr	r0, [fp, #20]
    1ba4:	ldr	r1, [sp, #92]	; 0x5c
    1ba8:	add	r0, r0, r1
    1bac:	ldrb	r0, [r0]
    1bb0:	cmp	r0, #121	; 0x79
    1bb4:	bne	1c80 <coda_time_parts_to_string+0x2d0>
    1bb8:	ldr	r0, [fp, #20]
    1bbc:	ldr	r1, [sp, #92]	; 0x5c
    1bc0:	add	r1, r1, #1
    1bc4:	add	r0, r0, r1
    1bc8:	ldrb	r0, [r0]
    1bcc:	cmp	r0, #121	; 0x79
    1bd0:	bne	1c80 <coda_time_parts_to_string+0x2d0>
    1bd4:	ldr	r0, [fp, #20]
    1bd8:	ldr	r1, [sp, #92]	; 0x5c
    1bdc:	add	r1, r1, #2
    1be0:	add	r0, r0, r1
    1be4:	ldrb	r0, [r0]
    1be8:	cmp	r0, #121	; 0x79
    1bec:	bne	1c80 <coda_time_parts_to_string+0x2d0>
    1bf0:	ldr	r0, [fp, #20]
    1bf4:	ldr	r1, [sp, #92]	; 0x5c
    1bf8:	add	r1, r1, #3
    1bfc:	add	r0, r0, r1
    1c00:	ldrb	r0, [r0]
    1c04:	cmp	r0, #121	; 0x79
    1c08:	bne	1c80 <coda_time_parts_to_string+0x2d0>
    1c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c10:	cmp	r0, #0
    1c14:	blt	1c28 <coda_time_parts_to_string+0x278>
    1c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c1c:	movw	r1, #9999	; 0x270f
    1c20:	cmp	r0, r1
    1c24:	ble	1c44 <coda_time_parts_to_string+0x294>
    1c28:	mvn	r0, #103	; 0x67
    1c2c:	movw	r1, #0
    1c30:	movt	r1, #0
    1c34:	bl	0 <coda_set_error>
    1c38:	mvn	r0, #0
    1c3c:	str	r0, [fp, #-20]	; 0xffffffec
    1c40:	b	231c <coda_time_parts_to_string+0x96c>
    1c44:	ldr	r0, [fp, #24]
    1c48:	ldr	r1, [sp, #88]	; 0x58
    1c4c:	add	r0, r0, r1
    1c50:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1c54:	movw	r1, #0
    1c58:	movt	r1, #0
    1c5c:	bl	0 <sprintf>
    1c60:	ldr	r1, [sp, #92]	; 0x5c
    1c64:	add	r1, r1, #4
    1c68:	str	r1, [sp, #92]	; 0x5c
    1c6c:	ldr	r1, [sp, #88]	; 0x58
    1c70:	add	r1, r1, #4
    1c74:	str	r1, [sp, #88]	; 0x58
    1c78:	str	r0, [sp, #36]	; 0x24
    1c7c:	b	22e0 <coda_time_parts_to_string+0x930>
    1c80:	ldr	r0, [fp, #20]
    1c84:	ldr	r1, [sp, #92]	; 0x5c
    1c88:	add	r0, r0, r1
    1c8c:	ldrb	r0, [r0]
    1c90:	cmp	r0, #77	; 0x4d
    1c94:	bne	1d88 <coda_time_parts_to_string+0x3d8>
    1c98:	ldr	r0, [fp, #20]
    1c9c:	ldr	r1, [sp, #92]	; 0x5c
    1ca0:	add	r1, r1, #1
    1ca4:	add	r0, r0, r1
    1ca8:	ldrb	r0, [r0]
    1cac:	cmp	r0, #77	; 0x4d
    1cb0:	bne	1d88 <coda_time_parts_to_string+0x3d8>
    1cb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1cb8:	cmp	r0, #1
    1cbc:	blt	1ccc <coda_time_parts_to_string+0x31c>
    1cc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1cc4:	cmp	r0, #12
    1cc8:	ble	1ce8 <coda_time_parts_to_string+0x338>
    1ccc:	mvn	r0, #103	; 0x67
    1cd0:	movw	r1, #0
    1cd4:	movt	r1, #0
    1cd8:	bl	0 <coda_set_error>
    1cdc:	mvn	r0, #0
    1ce0:	str	r0, [fp, #-20]	; 0xffffffec
    1ce4:	b	231c <coda_time_parts_to_string+0x96c>
    1ce8:	ldr	r0, [fp, #20]
    1cec:	ldr	r1, [sp, #92]	; 0x5c
    1cf0:	add	r1, r1, #2
    1cf4:	add	r0, r0, r1
    1cf8:	ldrb	r0, [r0]
    1cfc:	cmp	r0, #77	; 0x4d
    1d00:	bne	1d4c <coda_time_parts_to_string+0x39c>
    1d04:	ldr	r0, [fp, #24]
    1d08:	ldr	r1, [sp, #88]	; 0x58
    1d0c:	add	r0, r0, r1
    1d10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1d14:	sub	r2, fp, #84	; 0x54
    1d18:	add	r1, r2, r1, lsl #2
    1d1c:	ldr	r2, [r1]
    1d20:	movw	r1, #0
    1d24:	movt	r1, #0
    1d28:	bl	0 <sprintf>
    1d2c:	ldr	r1, [sp, #92]	; 0x5c
    1d30:	add	r1, r1, #3
    1d34:	str	r1, [sp, #92]	; 0x5c
    1d38:	ldr	r1, [sp, #88]	; 0x58
    1d3c:	add	r1, r1, #3
    1d40:	str	r1, [sp, #88]	; 0x58
    1d44:	str	r0, [sp, #32]
    1d48:	b	1d84 <coda_time_parts_to_string+0x3d4>
    1d4c:	ldr	r0, [fp, #24]
    1d50:	ldr	r1, [sp, #88]	; 0x58
    1d54:	add	r0, r0, r1
    1d58:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1d5c:	movw	r1, #0
    1d60:	movt	r1, #0
    1d64:	bl	0 <sprintf>
    1d68:	ldr	r1, [sp, #92]	; 0x5c
    1d6c:	add	r1, r1, #2
    1d70:	str	r1, [sp, #92]	; 0x5c
    1d74:	ldr	r1, [sp, #88]	; 0x58
    1d78:	add	r1, r1, #2
    1d7c:	str	r1, [sp, #88]	; 0x58
    1d80:	str	r0, [sp, #28]
    1d84:	b	22dc <coda_time_parts_to_string+0x92c>
    1d88:	ldr	r0, [fp, #20]
    1d8c:	ldr	r1, [sp, #92]	; 0x5c
    1d90:	add	r0, r0, r1
    1d94:	ldrb	r0, [r0]
    1d98:	cmp	r0, #100	; 0x64
    1d9c:	bne	1e2c <coda_time_parts_to_string+0x47c>
    1da0:	ldr	r0, [fp, #20]
    1da4:	ldr	r1, [sp, #92]	; 0x5c
    1da8:	add	r1, r1, #1
    1dac:	add	r0, r0, r1
    1db0:	ldrb	r0, [r0]
    1db4:	cmp	r0, #100	; 0x64
    1db8:	bne	1e2c <coda_time_parts_to_string+0x47c>
    1dbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1dc0:	cmp	r0, #1
    1dc4:	blt	1dd4 <coda_time_parts_to_string+0x424>
    1dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1dcc:	cmp	r0, #31
    1dd0:	ble	1df0 <coda_time_parts_to_string+0x440>
    1dd4:	mvn	r0, #103	; 0x67
    1dd8:	movw	r1, #0
    1ddc:	movt	r1, #0
    1de0:	bl	0 <coda_set_error>
    1de4:	mvn	r0, #0
    1de8:	str	r0, [fp, #-20]	; 0xffffffec
    1dec:	b	231c <coda_time_parts_to_string+0x96c>
    1df0:	ldr	r0, [fp, #24]
    1df4:	ldr	r1, [sp, #88]	; 0x58
    1df8:	add	r0, r0, r1
    1dfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1e00:	movw	r1, #0
    1e04:	movt	r1, #0
    1e08:	bl	0 <sprintf>
    1e0c:	ldr	r1, [sp, #92]	; 0x5c
    1e10:	add	r1, r1, #2
    1e14:	str	r1, [sp, #92]	; 0x5c
    1e18:	ldr	r1, [sp, #88]	; 0x58
    1e1c:	add	r1, r1, #2
    1e20:	str	r1, [sp, #88]	; 0x58
    1e24:	str	r0, [sp, #24]
    1e28:	b	22d8 <coda_time_parts_to_string+0x928>
    1e2c:	ldr	r0, [fp, #20]
    1e30:	ldr	r1, [sp, #92]	; 0x5c
    1e34:	add	r0, r0, r1
    1e38:	ldrb	r0, [r0]
    1e3c:	cmp	r0, #68	; 0x44
    1e40:	bne	1f18 <coda_time_parts_to_string+0x568>
    1e44:	ldr	r0, [fp, #20]
    1e48:	ldr	r1, [sp, #92]	; 0x5c
    1e4c:	add	r1, r1, #1
    1e50:	add	r0, r0, r1
    1e54:	ldrb	r0, [r0]
    1e58:	cmp	r0, #68	; 0x44
    1e5c:	bne	1f18 <coda_time_parts_to_string+0x568>
    1e60:	ldr	r0, [fp, #20]
    1e64:	ldr	r1, [sp, #92]	; 0x5c
    1e68:	add	r1, r1, #2
    1e6c:	add	r0, r0, r1
    1e70:	ldrb	r0, [r0]
    1e74:	cmp	r0, #68	; 0x44
    1e78:	bne	1f18 <coda_time_parts_to_string+0x568>
    1e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    1e80:	ldr	r1, [fp, #-28]	; 0xffffffe4
    1e84:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1e88:	add	r3, sp, #84	; 0x54
    1e8c:	bl	364 <dmy_to_mjd2000>
    1e90:	cmp	r0, #0
    1e94:	beq	1ea4 <coda_time_parts_to_string+0x4f4>
    1e98:	mvn	r0, #0
    1e9c:	str	r0, [fp, #-20]	; 0xffffffec
    1ea0:	b	231c <coda_time_parts_to_string+0x96c>
    1ea4:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1ea8:	movw	r0, #1
    1eac:	str	r0, [sp, #20]
    1eb0:	ldr	r1, [sp, #20]
    1eb4:	add	r3, sp, #80	; 0x50
    1eb8:	bl	364 <dmy_to_mjd2000>
    1ebc:	cmp	r0, #0
    1ec0:	beq	1ed0 <coda_time_parts_to_string+0x520>
    1ec4:	mvn	r0, #0
    1ec8:	str	r0, [fp, #-20]	; 0xffffffec
    1ecc:	b	231c <coda_time_parts_to_string+0x96c>
    1ed0:	ldr	r0, [fp, #24]
    1ed4:	ldr	r1, [sp, #88]	; 0x58
    1ed8:	add	r0, r0, r1
    1edc:	ldr	r1, [sp, #84]	; 0x54
    1ee0:	ldr	r2, [sp, #80]	; 0x50
    1ee4:	sub	r1, r1, r2
    1ee8:	add	r2, r1, #1
    1eec:	movw	r1, #0
    1ef0:	movt	r1, #0
    1ef4:	bl	0 <sprintf>
    1ef8:	ldr	r1, [sp, #92]	; 0x5c
    1efc:	add	r1, r1, #3
    1f00:	str	r1, [sp, #92]	; 0x5c
    1f04:	ldr	r1, [sp, #88]	; 0x58
    1f08:	add	r1, r1, #3
    1f0c:	str	r1, [sp, #88]	; 0x58
    1f10:	str	r0, [sp, #16]
    1f14:	b	22d4 <coda_time_parts_to_string+0x924>
    1f18:	ldr	r0, [fp, #20]
    1f1c:	ldr	r1, [sp, #92]	; 0x5c
    1f20:	add	r0, r0, r1
    1f24:	ldrb	r0, [r0]
    1f28:	cmp	r0, #72	; 0x48
    1f2c:	bne	1fbc <coda_time_parts_to_string+0x60c>
    1f30:	ldr	r0, [fp, #20]
    1f34:	ldr	r1, [sp, #92]	; 0x5c
    1f38:	add	r1, r1, #1
    1f3c:	add	r0, r0, r1
    1f40:	ldrb	r0, [r0]
    1f44:	cmp	r0, #72	; 0x48
    1f48:	bne	1fbc <coda_time_parts_to_string+0x60c>
    1f4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f50:	cmp	r0, #0
    1f54:	blt	1f64 <coda_time_parts_to_string+0x5b4>
    1f58:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1f5c:	cmp	r0, #23
    1f60:	ble	1f80 <coda_time_parts_to_string+0x5d0>
    1f64:	mvn	r0, #103	; 0x67
    1f68:	movw	r1, #0
    1f6c:	movt	r1, #0
    1f70:	bl	0 <coda_set_error>
    1f74:	mvn	r0, #0
    1f78:	str	r0, [fp, #-20]	; 0xffffffec
    1f7c:	b	231c <coda_time_parts_to_string+0x96c>
    1f80:	ldr	r0, [fp, #24]
    1f84:	ldr	r1, [sp, #88]	; 0x58
    1f88:	add	r0, r0, r1
    1f8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    1f90:	movw	r1, #0
    1f94:	movt	r1, #0
    1f98:	bl	0 <sprintf>
    1f9c:	ldr	r1, [sp, #92]	; 0x5c
    1fa0:	add	r1, r1, #2
    1fa4:	str	r1, [sp, #92]	; 0x5c
    1fa8:	ldr	r1, [sp, #88]	; 0x58
    1fac:	add	r1, r1, #2
    1fb0:	str	r1, [sp, #88]	; 0x58
    1fb4:	str	r0, [sp, #12]
    1fb8:	b	22d0 <coda_time_parts_to_string+0x920>
    1fbc:	ldr	r0, [fp, #20]
    1fc0:	ldr	r1, [sp, #92]	; 0x5c
    1fc4:	add	r0, r0, r1
    1fc8:	ldrb	r0, [r0]
    1fcc:	cmp	r0, #109	; 0x6d
    1fd0:	bne	2060 <coda_time_parts_to_string+0x6b0>
    1fd4:	ldr	r0, [fp, #20]
    1fd8:	ldr	r1, [sp, #92]	; 0x5c
    1fdc:	add	r1, r1, #1
    1fe0:	add	r0, r0, r1
    1fe4:	ldrb	r0, [r0]
    1fe8:	cmp	r0, #109	; 0x6d
    1fec:	bne	2060 <coda_time_parts_to_string+0x6b0>
    1ff0:	ldr	r0, [fp, #8]
    1ff4:	cmp	r0, #0
    1ff8:	blt	2008 <coda_time_parts_to_string+0x658>
    1ffc:	ldr	r0, [fp, #8]
    2000:	cmp	r0, #59	; 0x3b
    2004:	ble	2024 <coda_time_parts_to_string+0x674>
    2008:	mvn	r0, #103	; 0x67
    200c:	movw	r1, #0
    2010:	movt	r1, #0
    2014:	bl	0 <coda_set_error>
    2018:	mvn	r0, #0
    201c:	str	r0, [fp, #-20]	; 0xffffffec
    2020:	b	231c <coda_time_parts_to_string+0x96c>
    2024:	ldr	r0, [fp, #24]
    2028:	ldr	r1, [sp, #88]	; 0x58
    202c:	add	r0, r0, r1
    2030:	ldr	r2, [fp, #8]
    2034:	movw	r1, #0
    2038:	movt	r1, #0
    203c:	bl	0 <sprintf>
    2040:	ldr	r1, [sp, #92]	; 0x5c
    2044:	add	r1, r1, #2
    2048:	str	r1, [sp, #92]	; 0x5c
    204c:	ldr	r1, [sp, #88]	; 0x58
    2050:	add	r1, r1, #2
    2054:	str	r1, [sp, #88]	; 0x58
    2058:	str	r0, [sp, #8]
    205c:	b	22cc <coda_time_parts_to_string+0x91c>
    2060:	ldr	r0, [fp, #20]
    2064:	ldr	r1, [sp, #92]	; 0x5c
    2068:	add	r0, r0, r1
    206c:	ldrb	r0, [r0]
    2070:	cmp	r0, #115	; 0x73
    2074:	bne	2104 <coda_time_parts_to_string+0x754>
    2078:	ldr	r0, [fp, #20]
    207c:	ldr	r1, [sp, #92]	; 0x5c
    2080:	add	r1, r1, #1
    2084:	add	r0, r0, r1
    2088:	ldrb	r0, [r0]
    208c:	cmp	r0, #115	; 0x73
    2090:	bne	2104 <coda_time_parts_to_string+0x754>
    2094:	ldr	r0, [fp, #12]
    2098:	cmp	r0, #0
    209c:	blt	20ac <coda_time_parts_to_string+0x6fc>
    20a0:	ldr	r0, [fp, #12]
    20a4:	cmp	r0, #60	; 0x3c
    20a8:	ble	20c8 <coda_time_parts_to_string+0x718>
    20ac:	mvn	r0, #103	; 0x67
    20b0:	movw	r1, #0
    20b4:	movt	r1, #0
    20b8:	bl	0 <coda_set_error>
    20bc:	mvn	r0, #0
    20c0:	str	r0, [fp, #-20]	; 0xffffffec
    20c4:	b	231c <coda_time_parts_to_string+0x96c>
    20c8:	ldr	r0, [fp, #24]
    20cc:	ldr	r1, [sp, #88]	; 0x58
    20d0:	add	r0, r0, r1
    20d4:	ldr	r2, [fp, #12]
    20d8:	movw	r1, #0
    20dc:	movt	r1, #0
    20e0:	bl	0 <sprintf>
    20e4:	ldr	r1, [sp, #92]	; 0x5c
    20e8:	add	r1, r1, #2
    20ec:	str	r1, [sp, #92]	; 0x5c
    20f0:	ldr	r1, [sp, #88]	; 0x58
    20f4:	add	r1, r1, #2
    20f8:	str	r1, [sp, #88]	; 0x58
    20fc:	str	r0, [sp, #4]
    2100:	b	22c8 <coda_time_parts_to_string+0x918>
    2104:	ldr	r0, [fp, #20]
    2108:	ldr	r1, [sp, #92]	; 0x5c
    210c:	add	r0, r0, r1
    2110:	ldrb	r0, [r0]
    2114:	cmp	r0, #83	; 0x53
    2118:	bne	2208 <coda_time_parts_to_string+0x858>
    211c:	ldr	r0, [fp, #16]
    2120:	str	r0, [sp, #76]	; 0x4c
    2124:	movw	r0, #0
    2128:	str	r0, [sp, #72]	; 0x48
    212c:	ldr	r0, [fp, #16]
    2130:	cmp	r0, #0
    2134:	blt	2148 <coda_time_parts_to_string+0x798>
    2138:	ldr	r0, [pc, #488]	; 2328 <coda_time_parts_to_string+0x978>
    213c:	ldr	r1, [fp, #16]
    2140:	cmp	r1, r0
    2144:	ble	2164 <coda_time_parts_to_string+0x7b4>
    2148:	mvn	r0, #103	; 0x67
    214c:	movw	r1, #0
    2150:	movt	r1, #0
    2154:	bl	0 <coda_set_error>
    2158:	mvn	r0, #0
    215c:	str	r0, [fp, #-20]	; 0xffffffec
    2160:	b	231c <coda_time_parts_to_string+0x96c>
    2164:	b	2168 <coda_time_parts_to_string+0x7b8>
    2168:	ldr	r0, [fp, #20]
    216c:	ldr	r1, [sp, #92]	; 0x5c
    2170:	add	r0, r0, r1
    2174:	ldrb	r0, [r0]
    2178:	cmp	r0, #83	; 0x53
    217c:	bne	219c <coda_time_parts_to_string+0x7ec>
    2180:	ldr	r0, [sp, #92]	; 0x5c
    2184:	add	r0, r0, #1
    2188:	str	r0, [sp, #92]	; 0x5c
    218c:	ldr	r0, [sp, #72]	; 0x48
    2190:	add	r0, r0, #1
    2194:	str	r0, [sp, #72]	; 0x48
    2198:	b	2168 <coda_time_parts_to_string+0x7b8>
    219c:	ldr	r0, [sp, #72]	; 0x48
    21a0:	str	r0, [sp, #68]	; 0x44
    21a4:	ldr	r0, [sp, #68]	; 0x44
    21a8:	cmp	r0, #6
    21ac:	bge	21d0 <coda_time_parts_to_string+0x820>
    21b0:	ldr	r0, [sp, #76]	; 0x4c
    21b4:	movw	r1, #10
    21b8:	sdiv	r0, r0, r1
    21bc:	str	r0, [sp, #76]	; 0x4c
    21c0:	ldr	r0, [sp, #68]	; 0x44
    21c4:	add	r0, r0, #1
    21c8:	str	r0, [sp, #68]	; 0x44
    21cc:	b	21a4 <coda_time_parts_to_string+0x7f4>
    21d0:	ldr	r0, [fp, #24]
    21d4:	ldr	r1, [sp, #88]	; 0x58
    21d8:	add	r0, r0, r1
    21dc:	ldr	r2, [sp, #72]	; 0x48
    21e0:	ldr	r3, [sp, #76]	; 0x4c
    21e4:	movw	r1, #0
    21e8:	movt	r1, #0
    21ec:	bl	0 <sprintf>
    21f0:	ldr	r1, [sp, #72]	; 0x48
    21f4:	ldr	r2, [sp, #88]	; 0x58
    21f8:	add	r1, r2, r1
    21fc:	str	r1, [sp, #88]	; 0x58
    2200:	str	r0, [sp]
    2204:	b	22c4 <coda_time_parts_to_string+0x914>
    2208:	ldr	r0, [fp, #20]
    220c:	ldr	r1, [sp, #92]	; 0x5c
    2210:	add	r0, r0, r1
    2214:	ldrb	r0, [r0]
    2218:	cmp	r0, #65	; 0x41
    221c:	blt	2238 <coda_time_parts_to_string+0x888>
    2220:	ldr	r0, [fp, #20]
    2224:	ldr	r1, [sp, #92]	; 0x5c
    2228:	add	r0, r0, r1
    222c:	ldrb	r0, [r0]
    2230:	cmp	r0, #90	; 0x5a
    2234:	ble	2268 <coda_time_parts_to_string+0x8b8>
    2238:	ldr	r0, [fp, #20]
    223c:	ldr	r1, [sp, #92]	; 0x5c
    2240:	add	r0, r0, r1
    2244:	ldrb	r0, [r0]
    2248:	cmp	r0, #97	; 0x61
    224c:	blt	2288 <coda_time_parts_to_string+0x8d8>
    2250:	ldr	r0, [fp, #20]
    2254:	ldr	r1, [sp, #92]	; 0x5c
    2258:	add	r0, r0, r1
    225c:	ldrb	r0, [r0]
    2260:	cmp	r0, #122	; 0x7a
    2264:	bgt	2288 <coda_time_parts_to_string+0x8d8>
    2268:	ldr	r2, [fp, #20]
    226c:	mvn	r0, #102	; 0x66
    2270:	movw	r1, #0
    2274:	movt	r1, #0
    2278:	bl	0 <coda_set_error>
    227c:	mvn	r0, #0
    2280:	str	r0, [fp, #-20]	; 0xffffffec
    2284:	b	231c <coda_time_parts_to_string+0x96c>
    2288:	ldr	r0, [fp, #20]
    228c:	ldr	r1, [sp, #92]	; 0x5c
    2290:	add	r0, r0, r1
    2294:	ldrb	r0, [r0]
    2298:	ldr	r1, [fp, #24]
    229c:	ldr	r2, [sp, #88]	; 0x58
    22a0:	add	r1, r1, r2
    22a4:	strb	r0, [r1]
    22a8:	ldr	r0, [sp, #92]	; 0x5c
    22ac:	add	r0, r0, #1
    22b0:	str	r0, [sp, #92]	; 0x5c
    22b4:	ldr	r0, [sp, #88]	; 0x58
    22b8:	add	r0, r0, #1
    22bc:	str	r0, [sp, #88]	; 0x58
    22c0:	b	22c4 <coda_time_parts_to_string+0x914>
    22c4:	b	22c8 <coda_time_parts_to_string+0x918>
    22c8:	b	22cc <coda_time_parts_to_string+0x91c>
    22cc:	b	22d0 <coda_time_parts_to_string+0x920>
    22d0:	b	22d4 <coda_time_parts_to_string+0x924>
    22d4:	b	22d8 <coda_time_parts_to_string+0x928>
    22d8:	b	22dc <coda_time_parts_to_string+0x92c>
    22dc:	b	22e0 <coda_time_parts_to_string+0x930>
    22e0:	b	22e4 <coda_time_parts_to_string+0x934>
    22e4:	b	1a8c <coda_time_parts_to_string+0xdc>
    22e8:	ldr	r0, [fp, #-88]	; 0xffffffa8
    22ec:	cmp	r0, #0
    22f0:	beq	2314 <coda_time_parts_to_string+0x964>
    22f4:	ldr	r2, [fp, #20]
    22f8:	mvn	r0, #102	; 0x66
    22fc:	movw	r1, #0
    2300:	movt	r1, #0
    2304:	bl	0 <coda_set_error>
    2308:	mvn	r0, #0
    230c:	str	r0, [fp, #-20]	; 0xffffffec
    2310:	b	231c <coda_time_parts_to_string+0x96c>
    2314:	movw	r0, #0
    2318:	str	r0, [fp, #-20]	; 0xffffffec
    231c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2320:	sub	sp, fp, #16
    2324:	pop	{r4, r5, r6, r7, fp, pc}
    2328:	.word	0x000f423f

0000232c <coda_time_string_to_parts>:
    232c:	push	{r4, r5, r6, sl, fp, lr}
    2330:	add	fp, sp, #16
    2334:	sub	sp, sp, #88	; 0x58
    2338:	ldr	ip, [fp, #24]
    233c:	ldr	lr, [fp, #20]
    2340:	ldr	r4, [fp, #16]
    2344:	ldr	r5, [fp, #12]
    2348:	ldr	r6, [fp, #8]
    234c:	str	r0, [fp, #-24]	; 0xffffffe8
    2350:	str	r1, [fp, #-28]	; 0xffffffe4
    2354:	str	r2, [fp, #-32]	; 0xffffffe0
    2358:	str	r3, [fp, #-36]	; 0xffffffdc
    235c:	movw	r0, #0
    2360:	str	r0, [fp, #-40]	; 0xffffffd8
    2364:	str	r0, [fp, #-44]	; 0xffffffd4
    2368:	ldr	r1, [fp, #-24]	; 0xffffffe8
    236c:	cmp	r1, r0
    2370:	str	r6, [sp, #52]	; 0x34
    2374:	str	lr, [sp, #48]	; 0x30
    2378:	str	r4, [sp, #44]	; 0x2c
    237c:	str	r5, [sp, #40]	; 0x28
    2380:	str	ip, [sp, #36]	; 0x24
    2384:	bne	23b0 <coda_time_string_to_parts+0x84>
    2388:	mvn	r0, #99	; 0x63
    238c:	movw	r1, #0
    2390:	movt	r1, #0
    2394:	movw	r2, #0
    2398:	movt	r2, #0
    239c:	movw	r3, #1468	; 0x5bc
    23a0:	bl	0 <coda_set_error>
    23a4:	mvn	r0, #0
    23a8:	str	r0, [fp, #-20]	; 0xffffffec
    23ac:	b	26f0 <coda_time_string_to_parts+0x3c4>
    23b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    23b4:	movw	r1, #0
    23b8:	cmp	r0, r1
    23bc:	bne	23e8 <coda_time_string_to_parts+0xbc>
    23c0:	mvn	r0, #99	; 0x63
    23c4:	movw	r1, #0
    23c8:	movt	r1, #0
    23cc:	movw	r2, #0
    23d0:	movt	r2, #0
    23d4:	movw	r3, #1473	; 0x5c1
    23d8:	bl	0 <coda_set_error>
    23dc:	mvn	r0, #0
    23e0:	str	r0, [fp, #-20]	; 0xffffffec
    23e4:	b	26f0 <coda_time_string_to_parts+0x3c4>
    23e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
    23ec:	movw	r1, #0
    23f0:	cmp	r0, r1
    23f4:	beq	2458 <coda_time_string_to_parts+0x12c>
    23f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    23fc:	movw	r1, #0
    2400:	cmp	r0, r1
    2404:	beq	2458 <coda_time_string_to_parts+0x12c>
    2408:	ldr	r0, [fp, #8]
    240c:	movw	r1, #0
    2410:	cmp	r0, r1
    2414:	beq	2458 <coda_time_string_to_parts+0x12c>
    2418:	ldr	r0, [fp, #12]
    241c:	movw	r1, #0
    2420:	cmp	r0, r1
    2424:	beq	2458 <coda_time_string_to_parts+0x12c>
    2428:	ldr	r0, [fp, #16]
    242c:	movw	r1, #0
    2430:	cmp	r0, r1
    2434:	beq	2458 <coda_time_string_to_parts+0x12c>
    2438:	ldr	r0, [fp, #20]
    243c:	movw	r1, #0
    2440:	cmp	r0, r1
    2444:	beq	2458 <coda_time_string_to_parts+0x12c>
    2448:	ldr	r0, [fp, #24]
    244c:	movw	r1, #0
    2450:	cmp	r0, r1
    2454:	bne	2480 <coda_time_string_to_parts+0x154>
    2458:	mvn	r0, #99	; 0x63
    245c:	movw	r1, #0
    2460:	movt	r1, #0
    2464:	movw	r2, #0
    2468:	movt	r2, #0
    246c:	movw	r3, #1479	; 0x5c7
    2470:	bl	0 <coda_set_error>
    2474:	mvn	r0, #0
    2478:	str	r0, [fp, #-20]	; 0xffffffec
    247c:	b	26f0 <coda_time_string_to_parts+0x3c4>
    2480:	b	2484 <coda_time_string_to_parts+0x158>
    2484:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2488:	ldr	r1, [fp, #-44]	; 0xffffffd4
    248c:	add	r0, r0, r1
    2490:	ldrb	r0, [r0]
    2494:	cmp	r0, #0
    2498:	movw	r0, #0
    249c:	str	r0, [sp, #32]
    24a0:	beq	24e0 <coda_time_string_to_parts+0x1b4>
    24a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
    24a8:	cmp	r0, #0
    24ac:	movw	r0, #1
    24b0:	str	r0, [sp, #28]
    24b4:	bne	24d8 <coda_time_string_to_parts+0x1ac>
    24b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    24c0:	add	r0, r0, r1
    24c4:	ldrb	r0, [r0]
    24c8:	cmp	r0, #124	; 0x7c
    24cc:	movw	r0, #0
    24d0:	movne	r0, #1
    24d4:	str	r0, [sp, #28]
    24d8:	ldr	r0, [sp, #28]
    24dc:	str	r0, [sp, #32]
    24e0:	ldr	r0, [sp, #32]
    24e4:	tst	r0, #1
    24e8:	beq	2534 <coda_time_string_to_parts+0x208>
    24ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    24f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    24f4:	add	r0, r0, r1
    24f8:	ldrb	r0, [r0]
    24fc:	cmp	r0, #39	; 0x27
    2500:	bne	2524 <coda_time_string_to_parts+0x1f8>
    2504:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2508:	cmp	r0, #0
    250c:	movw	r0, #0
    2510:	movne	r0, #1
    2514:	mvn	r1, #0
    2518:	eor	r0, r0, r1
    251c:	and	r0, r0, #1
    2520:	str	r0, [fp, #-40]	; 0xffffffd8
    2524:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2528:	add	r0, r0, #1
    252c:	str	r0, [fp, #-44]	; 0xffffffd4
    2530:	b	2484 <coda_time_string_to_parts+0x158>
    2534:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2538:	ldr	r1, [fp, #-44]	; 0xffffffd4
    253c:	add	r0, r0, r1
    2540:	ldrb	r0, [r0]
    2544:	cmp	r0, #124	; 0x7c
    2548:	bne	26b0 <coda_time_string_to_parts+0x384>
    254c:	movw	r0, #0
    2550:	str	r0, [fp, #-48]	; 0xffffffd0
    2554:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2558:	ldr	r1, [fp, #-48]	; 0xffffffd0
    255c:	add	r0, r0, r1
    2560:	ldr	r1, [fp, #-28]	; 0xffffffe4
    2564:	ldr	r2, [fp, #-32]	; 0xffffffe0
    2568:	ldr	r3, [fp, #-36]	; 0xffffffdc
    256c:	ldr	ip, [fp, #8]
    2570:	ldr	lr, [fp, #12]
    2574:	ldr	r4, [fp, #16]
    2578:	ldr	r5, [fp, #20]
    257c:	ldr	r6, [fp, #24]
    2580:	str	ip, [sp]
    2584:	str	lr, [sp, #4]
    2588:	str	r4, [sp, #8]
    258c:	str	r5, [sp, #12]
    2590:	str	r6, [sp, #16]
    2594:	bl	26fc <string_to_parts>
    2598:	cmp	r0, #0
    259c:	bne	25ac <coda_time_string_to_parts+0x280>
    25a0:	movw	r0, #0
    25a4:	str	r0, [fp, #-20]	; 0xffffffec
    25a8:	b	26f0 <coda_time_string_to_parts+0x3c4>
    25ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    25b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    25b4:	add	r0, r0, r1
    25b8:	ldrb	r0, [r0]
    25bc:	cmp	r0, #0
    25c0:	bne	25e8 <coda_time_string_to_parts+0x2bc>
    25c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
    25c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
    25cc:	mvn	r0, #103	; 0x67
    25d0:	movw	r1, #0
    25d4:	movt	r1, #0
    25d8:	bl	0 <coda_set_error>
    25dc:	mvn	r0, #0
    25e0:	str	r0, [fp, #-20]	; 0xffffffec
    25e4:	b	26f0 <coda_time_string_to_parts+0x3c4>
    25e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
    25ec:	add	r0, r0, #1
    25f0:	str	r0, [fp, #-44]	; 0xffffffd4
    25f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    25f8:	str	r0, [fp, #-48]	; 0xffffffd0
    25fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2600:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2604:	add	r0, r0, r1
    2608:	ldrb	r0, [r0]
    260c:	cmp	r0, #0
    2610:	movw	r0, #0
    2614:	str	r0, [sp, #24]
    2618:	beq	2658 <coda_time_string_to_parts+0x32c>
    261c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2620:	cmp	r0, #0
    2624:	movw	r0, #1
    2628:	str	r0, [sp, #20]
    262c:	bne	2650 <coda_time_string_to_parts+0x324>
    2630:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2634:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2638:	add	r0, r0, r1
    263c:	ldrb	r0, [r0]
    2640:	cmp	r0, #124	; 0x7c
    2644:	movw	r0, #0
    2648:	movne	r0, #1
    264c:	str	r0, [sp, #20]
    2650:	ldr	r0, [sp, #20]
    2654:	str	r0, [sp, #24]
    2658:	ldr	r0, [sp, #24]
    265c:	tst	r0, #1
    2660:	beq	26ac <coda_time_string_to_parts+0x380>
    2664:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2668:	ldr	r1, [fp, #-44]	; 0xffffffd4
    266c:	add	r0, r0, r1
    2670:	ldrb	r0, [r0]
    2674:	cmp	r0, #39	; 0x27
    2678:	bne	269c <coda_time_string_to_parts+0x370>
    267c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    2680:	cmp	r0, #0
    2684:	movw	r0, #0
    2688:	movne	r0, #1
    268c:	mvn	r1, #0
    2690:	eor	r0, r0, r1
    2694:	and	r0, r0, #1
    2698:	str	r0, [fp, #-40]	; 0xffffffd8
    269c:	ldr	r0, [fp, #-44]	; 0xffffffd4
    26a0:	add	r0, r0, #1
    26a4:	str	r0, [fp, #-44]	; 0xffffffd4
    26a8:	b	25fc <coda_time_string_to_parts+0x2d0>
    26ac:	b	2554 <coda_time_string_to_parts+0x228>
    26b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    26b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    26b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
    26bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    26c0:	ldr	ip, [fp, #8]
    26c4:	ldr	lr, [fp, #12]
    26c8:	ldr	r4, [fp, #16]
    26cc:	ldr	r5, [fp, #20]
    26d0:	ldr	r6, [fp, #24]
    26d4:	str	ip, [sp]
    26d8:	str	lr, [sp, #4]
    26dc:	str	r4, [sp, #8]
    26e0:	str	r5, [sp, #12]
    26e4:	str	r6, [sp, #16]
    26e8:	bl	26fc <string_to_parts>
    26ec:	str	r0, [fp, #-20]	; 0xffffffec
    26f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    26f4:	sub	sp, fp, #16
    26f8:	pop	{r4, r5, r6, sl, fp, pc}

000026fc <string_to_parts>:
    26fc:	push	{r4, r5, r6, sl, fp, lr}
    2700:	add	fp, sp, #16
    2704:	sub	sp, sp, #88	; 0x58
    2708:	ldr	ip, [fp, #24]
    270c:	ldr	lr, [fp, #20]
    2710:	ldr	r4, [fp, #16]
    2714:	ldr	r5, [fp, #12]
    2718:	ldr	r6, [fp, #8]
    271c:	str	r0, [fp, #-24]	; 0xffffffe8
    2720:	str	r1, [fp, #-28]	; 0xffffffe4
    2724:	str	r2, [fp, #-32]	; 0xffffffe0
    2728:	str	r3, [fp, #-36]	; 0xffffffdc
    272c:	movw	r0, #0
    2730:	str	r0, [fp, #-44]	; 0xffffffd4
    2734:	str	r0, [fp, #-48]	; 0xffffffd0
    2738:	str	r0, [sp, #52]	; 0x34
    273c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    2740:	movw	r2, #2000	; 0x7d0
    2744:	str	r2, [r1]
    2748:	ldr	r1, [fp, #-36]	; 0xffffffdc
    274c:	movw	r2, #1
    2750:	str	r2, [r1]
    2754:	ldr	r1, [fp, #8]
    2758:	str	r2, [r1]
    275c:	ldr	r1, [fp, #12]
    2760:	str	r0, [r1]
    2764:	ldr	r1, [fp, #16]
    2768:	str	r0, [r1]
    276c:	ldr	r1, [fp, #20]
    2770:	str	r0, [r1]
    2774:	ldr	r1, [fp, #24]
    2778:	str	r0, [r1]
    277c:	str	r6, [sp, #40]	; 0x28
    2780:	str	lr, [sp, #36]	; 0x24
    2784:	str	r4, [sp, #32]
    2788:	str	r5, [sp, #28]
    278c:	str	ip, [sp, #24]
    2790:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2794:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2798:	add	r0, r0, r1
    279c:	ldrb	r0, [r0]
    27a0:	cmp	r0, #0
    27a4:	movw	r0, #0
    27a8:	str	r0, [sp, #20]
    27ac:	beq	27ec <string_to_parts+0xf0>
    27b0:	ldr	r0, [sp, #52]	; 0x34
    27b4:	cmp	r0, #0
    27b8:	movw	r0, #1
    27bc:	str	r0, [sp, #16]
    27c0:	bne	27e4 <string_to_parts+0xe8>
    27c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    27c8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    27cc:	add	r0, r0, r1
    27d0:	ldrb	r0, [r0]
    27d4:	cmp	r0, #124	; 0x7c
    27d8:	movw	r0, #0
    27dc:	movne	r0, #1
    27e0:	str	r0, [sp, #16]
    27e4:	ldr	r0, [sp, #16]
    27e8:	str	r0, [sp, #20]
    27ec:	ldr	r0, [sp, #20]
    27f0:	tst	r0, #1
    27f4:	beq	3278 <string_to_parts+0xb7c>
    27f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    27fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2800:	add	r0, r0, r1
    2804:	ldrb	r0, [r0]
    2808:	cmp	r0, #39	; 0x27
    280c:	bne	285c <string_to_parts+0x160>
    2810:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2814:	add	r0, r0, #1
    2818:	str	r0, [fp, #-44]	; 0xffffffd4
    281c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2820:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2824:	add	r0, r0, r1
    2828:	ldrb	r0, [r0]
    282c:	cmp	r0, #39	; 0x27
    2830:	beq	2858 <string_to_parts+0x15c>
    2834:	ldr	r0, [sp, #52]	; 0x34
    2838:	cmp	r0, #0
    283c:	movw	r0, #0
    2840:	movne	r0, #1
    2844:	mvn	r1, #0
    2848:	eor	r0, r0, r1
    284c:	and	r0, r0, #1
    2850:	str	r0, [sp, #52]	; 0x34
    2854:	b	2790 <string_to_parts+0x94>
    2858:	b	285c <string_to_parts+0x160>
    285c:	ldr	r0, [sp, #52]	; 0x34
    2860:	cmp	r0, #0
    2864:	beq	28d0 <string_to_parts+0x1d4>
    2868:	ldr	r0, [fp, #-24]	; 0xffffffe8
    286c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2870:	add	r0, r0, r1
    2874:	ldrb	r0, [r0]
    2878:	ldr	r1, [fp, #-28]	; 0xffffffe4
    287c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    2880:	add	r1, r1, r2
    2884:	ldrb	r1, [r1]
    2888:	cmp	r0, r1
    288c:	beq	28b4 <string_to_parts+0x1b8>
    2890:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2894:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2898:	mvn	r0, #103	; 0x67
    289c:	movw	r1, #0
    28a0:	movt	r1, #0
    28a4:	bl	0 <coda_set_error>
    28a8:	mvn	r0, #0
    28ac:	str	r0, [fp, #-20]	; 0xffffffec
    28b0:	b	32e8 <string_to_parts+0xbec>
    28b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
    28b8:	add	r0, r0, #1
    28bc:	str	r0, [fp, #-44]	; 0xffffffd4
    28c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    28c4:	add	r0, r0, #1
    28c8:	str	r0, [fp, #-48]	; 0xffffffd0
    28cc:	b	3274 <string_to_parts+0xb78>
    28d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    28d8:	add	r0, r0, r1
    28dc:	ldrb	r0, [r0]
    28e0:	cmp	r0, #121	; 0x79
    28e4:	bne	29ec <string_to_parts+0x2f0>
    28e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    28ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
    28f0:	add	r1, r1, #1
    28f4:	add	r0, r0, r1
    28f8:	ldrb	r0, [r0]
    28fc:	cmp	r0, #121	; 0x79
    2900:	bne	29ec <string_to_parts+0x2f0>
    2904:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2908:	ldr	r1, [fp, #-44]	; 0xffffffd4
    290c:	add	r1, r1, #2
    2910:	add	r0, r0, r1
    2914:	ldrb	r0, [r0]
    2918:	cmp	r0, #121	; 0x79
    291c:	bne	29ec <string_to_parts+0x2f0>
    2920:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2924:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2928:	add	r1, r1, #3
    292c:	add	r0, r0, r1
    2930:	ldrb	r0, [r0]
    2934:	cmp	r0, #121	; 0x79
    2938:	bne	29ec <string_to_parts+0x2f0>
    293c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2940:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2944:	add	r1, r1, #4
    2948:	add	r0, r0, r1
    294c:	ldrb	r0, [r0]
    2950:	cmp	r0, #42	; 0x2a
    2954:	movw	r0, #0
    2958:	moveq	r0, #1
    295c:	and	r0, r0, #1
    2960:	str	r0, [fp, #-40]	; 0xffffffd8
    2964:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2968:	ldr	r1, [fp, #-48]	; 0xffffffd0
    296c:	add	r0, r0, r1
    2970:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2974:	ldr	r3, [fp, #-32]	; 0xffffffe0
    2978:	movw	r1, #4
    297c:	bl	4468 <parse_integer>
    2980:	cmp	r0, #0
    2984:	beq	29ac <string_to_parts+0x2b0>
    2988:	ldr	r2, [fp, #-28]	; 0xffffffe4
    298c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2990:	mvn	r0, #103	; 0x67
    2994:	movw	r1, #0
    2998:	movt	r1, #0
    299c:	bl	0 <coda_set_error>
    29a0:	mvn	r0, #0
    29a4:	str	r0, [fp, #-20]	; 0xffffffec
    29a8:	b	32e8 <string_to_parts+0xbec>
    29ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
    29b0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    29b4:	add	r0, r0, r1
    29b8:	ldrb	r0, [r0]
    29bc:	cmp	r0, #42	; 0x2a
    29c0:	movw	r0, #0
    29c4:	moveq	r0, #1
    29c8:	and	r0, r0, #1
    29cc:	add	r0, r0, #4
    29d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    29d4:	add	r0, r1, r0
    29d8:	str	r0, [fp, #-44]	; 0xffffffd4
    29dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
    29e0:	add	r0, r0, #4
    29e4:	str	r0, [fp, #-48]	; 0xffffffd0
    29e8:	b	3270 <string_to_parts+0xb74>
    29ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    29f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    29f4:	add	r0, r0, r1
    29f8:	ldrb	r0, [r0]
    29fc:	cmp	r0, #77	; 0x4d
    2a00:	bne	2b58 <string_to_parts+0x45c>
    2a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2a08:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a0c:	add	r1, r1, #1
    2a10:	add	r0, r0, r1
    2a14:	ldrb	r0, [r0]
    2a18:	cmp	r0, #77	; 0x4d
    2a1c:	bne	2b58 <string_to_parts+0x45c>
    2a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2a24:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2a28:	add	r1, r1, #2
    2a2c:	add	r0, r0, r1
    2a30:	ldrb	r0, [r0]
    2a34:	cmp	r0, #77	; 0x4d
    2a38:	bne	2aa4 <string_to_parts+0x3a8>
    2a3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2a40:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2a44:	add	r0, r0, r1
    2a48:	bl	0 <coda_month_to_integer>
    2a4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    2a50:	str	r0, [r1]
    2a54:	ldr	r0, [fp, #-36]	; 0xffffffdc
    2a58:	ldr	r0, [r0]
    2a5c:	cmn	r0, #1
    2a60:	bne	2a88 <string_to_parts+0x38c>
    2a64:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2a6c:	mvn	r0, #103	; 0x67
    2a70:	movw	r1, #0
    2a74:	movt	r1, #0
    2a78:	bl	0 <coda_set_error>
    2a7c:	mvn	r0, #0
    2a80:	str	r0, [fp, #-20]	; 0xffffffec
    2a84:	b	32e8 <string_to_parts+0xbec>
    2a88:	ldr	r0, [fp, #-44]	; 0xffffffd4
    2a8c:	add	r0, r0, #3
    2a90:	str	r0, [fp, #-44]	; 0xffffffd4
    2a94:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2a98:	add	r0, r0, #3
    2a9c:	str	r0, [fp, #-48]	; 0xffffffd0
    2aa0:	b	2b54 <string_to_parts+0x458>
    2aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2aa8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2aac:	add	r1, r1, #2
    2ab0:	add	r0, r0, r1
    2ab4:	ldrb	r0, [r0]
    2ab8:	cmp	r0, #42	; 0x2a
    2abc:	movw	r0, #0
    2ac0:	moveq	r0, #1
    2ac4:	and	r0, r0, #1
    2ac8:	str	r0, [fp, #-40]	; 0xffffffd8
    2acc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2ad0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2ad4:	add	r0, r0, r1
    2ad8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2adc:	ldr	r3, [fp, #-36]	; 0xffffffdc
    2ae0:	movw	r1, #2
    2ae4:	bl	4468 <parse_integer>
    2ae8:	cmp	r0, #0
    2aec:	beq	2b14 <string_to_parts+0x418>
    2af0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2af4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2af8:	mvn	r0, #103	; 0x67
    2afc:	movw	r1, #0
    2b00:	movt	r1, #0
    2b04:	bl	0 <coda_set_error>
    2b08:	mvn	r0, #0
    2b0c:	str	r0, [fp, #-20]	; 0xffffffec
    2b10:	b	32e8 <string_to_parts+0xbec>
    2b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b18:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b1c:	add	r1, r1, #2
    2b20:	add	r0, r0, r1
    2b24:	ldrb	r0, [r0]
    2b28:	cmp	r0, #42	; 0x2a
    2b2c:	movw	r0, #0
    2b30:	moveq	r0, #1
    2b34:	and	r0, r0, #1
    2b38:	add	r0, r0, #2
    2b3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b40:	add	r0, r1, r0
    2b44:	str	r0, [fp, #-44]	; 0xffffffd4
    2b48:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2b4c:	add	r0, r0, #2
    2b50:	str	r0, [fp, #-48]	; 0xffffffd0
    2b54:	b	326c <string_to_parts+0xb70>
    2b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b60:	add	r0, r0, r1
    2b64:	ldrb	r0, [r0]
    2b68:	cmp	r0, #100	; 0x64
    2b6c:	bne	2c40 <string_to_parts+0x544>
    2b70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b74:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b78:	add	r1, r1, #1
    2b7c:	add	r0, r0, r1
    2b80:	ldrb	r0, [r0]
    2b84:	cmp	r0, #100	; 0x64
    2b88:	bne	2c40 <string_to_parts+0x544>
    2b8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2b90:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2b94:	add	r1, r1, #2
    2b98:	add	r0, r0, r1
    2b9c:	ldrb	r0, [r0]
    2ba0:	cmp	r0, #42	; 0x2a
    2ba4:	movw	r0, #0
    2ba8:	moveq	r0, #1
    2bac:	and	r0, r0, #1
    2bb0:	str	r0, [fp, #-40]	; 0xffffffd8
    2bb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2bb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2bbc:	add	r0, r0, r1
    2bc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2bc4:	ldr	r3, [fp, #8]
    2bc8:	movw	r1, #2
    2bcc:	bl	4468 <parse_integer>
    2bd0:	cmp	r0, #0
    2bd4:	beq	2bfc <string_to_parts+0x500>
    2bd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2bdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2be0:	mvn	r0, #103	; 0x67
    2be4:	movw	r1, #0
    2be8:	movt	r1, #0
    2bec:	bl	0 <coda_set_error>
    2bf0:	mvn	r0, #0
    2bf4:	str	r0, [fp, #-20]	; 0xffffffec
    2bf8:	b	32e8 <string_to_parts+0xbec>
    2bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c00:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2c04:	add	r1, r1, #2
    2c08:	add	r0, r0, r1
    2c0c:	ldrb	r0, [r0]
    2c10:	cmp	r0, #42	; 0x2a
    2c14:	movw	r0, #0
    2c18:	moveq	r0, #1
    2c1c:	and	r0, r0, #1
    2c20:	add	r0, r0, #2
    2c24:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2c28:	add	r0, r1, r0
    2c2c:	str	r0, [fp, #-44]	; 0xffffffd4
    2c30:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2c34:	add	r0, r0, #2
    2c38:	str	r0, [fp, #-48]	; 0xffffffd0
    2c3c:	b	3268 <string_to_parts+0xb6c>
    2c40:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c44:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2c48:	add	r0, r0, r1
    2c4c:	ldrb	r0, [r0]
    2c50:	cmp	r0, #68	; 0x44
    2c54:	bne	2d88 <string_to_parts+0x68c>
    2c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2c60:	add	r1, r1, #1
    2c64:	add	r0, r0, r1
    2c68:	ldrb	r0, [r0]
    2c6c:	cmp	r0, #68	; 0x44
    2c70:	bne	2d88 <string_to_parts+0x68c>
    2c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c78:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2c7c:	add	r1, r1, #2
    2c80:	add	r0, r0, r1
    2c84:	ldrb	r0, [r0]
    2c88:	cmp	r0, #68	; 0x44
    2c8c:	bne	2d88 <string_to_parts+0x68c>
    2c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2c94:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2c98:	add	r1, r1, #3
    2c9c:	add	r0, r0, r1
    2ca0:	ldrb	r0, [r0]
    2ca4:	cmp	r0, #42	; 0x2a
    2ca8:	movw	r0, #0
    2cac:	moveq	r0, #1
    2cb0:	and	r0, r0, #1
    2cb4:	str	r0, [fp, #-40]	; 0xffffffd8
    2cb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2cbc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2cc0:	add	r0, r0, r1
    2cc4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2cc8:	movw	r1, #3
    2ccc:	add	r3, sp, #44	; 0x2c
    2cd0:	bl	4468 <parse_integer>
    2cd4:	cmp	r0, #0
    2cd8:	beq	2d00 <string_to_parts+0x604>
    2cdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2ce0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2ce4:	mvn	r0, #103	; 0x67
    2ce8:	movw	r1, #0
    2cec:	movt	r1, #0
    2cf0:	bl	0 <coda_set_error>
    2cf4:	mvn	r0, #0
    2cf8:	str	r0, [fp, #-20]	; 0xffffffec
    2cfc:	b	32e8 <string_to_parts+0xbec>
    2d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
    2d04:	ldr	r0, [r0]
    2d08:	ldr	r1, [sp, #44]	; 0x2c
    2d0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    2d10:	ldr	r3, [fp, #8]
    2d14:	bl	248 <coda_dayofyear_to_month_day>
    2d18:	cmp	r0, #0
    2d1c:	beq	2d44 <string_to_parts+0x648>
    2d20:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2d24:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2d28:	mvn	r0, #103	; 0x67
    2d2c:	movw	r1, #0
    2d30:	movt	r1, #0
    2d34:	bl	0 <coda_set_error>
    2d38:	mvn	r0, #0
    2d3c:	str	r0, [fp, #-20]	; 0xffffffec
    2d40:	b	32e8 <string_to_parts+0xbec>
    2d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d48:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2d4c:	add	r1, r1, #3
    2d50:	add	r0, r0, r1
    2d54:	ldrb	r0, [r0]
    2d58:	cmp	r0, #42	; 0x2a
    2d5c:	movw	r0, #0
    2d60:	moveq	r0, #1
    2d64:	and	r0, r0, #1
    2d68:	add	r0, r0, #3
    2d6c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2d70:	add	r0, r1, r0
    2d74:	str	r0, [fp, #-44]	; 0xffffffd4
    2d78:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2d7c:	add	r0, r0, #3
    2d80:	str	r0, [fp, #-48]	; 0xffffffd0
    2d84:	b	3264 <string_to_parts+0xb68>
    2d88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2d8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2d90:	add	r0, r0, r1
    2d94:	ldrb	r0, [r0]
    2d98:	cmp	r0, #72	; 0x48
    2d9c:	bne	2e70 <string_to_parts+0x774>
    2da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2da4:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2da8:	add	r1, r1, #1
    2dac:	add	r0, r0, r1
    2db0:	ldrb	r0, [r0]
    2db4:	cmp	r0, #72	; 0x48
    2db8:	bne	2e70 <string_to_parts+0x774>
    2dbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2dc0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2dc4:	add	r1, r1, #2
    2dc8:	add	r0, r0, r1
    2dcc:	ldrb	r0, [r0]
    2dd0:	cmp	r0, #42	; 0x2a
    2dd4:	movw	r0, #0
    2dd8:	moveq	r0, #1
    2ddc:	and	r0, r0, #1
    2de0:	str	r0, [fp, #-40]	; 0xffffffd8
    2de4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2de8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2dec:	add	r0, r0, r1
    2df0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2df4:	ldr	r3, [fp, #12]
    2df8:	movw	r1, #2
    2dfc:	bl	4468 <parse_integer>
    2e00:	cmp	r0, #0
    2e04:	beq	2e2c <string_to_parts+0x730>
    2e08:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2e10:	mvn	r0, #103	; 0x67
    2e14:	movw	r1, #0
    2e18:	movt	r1, #0
    2e1c:	bl	0 <coda_set_error>
    2e20:	mvn	r0, #0
    2e24:	str	r0, [fp, #-20]	; 0xffffffec
    2e28:	b	32e8 <string_to_parts+0xbec>
    2e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e30:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2e34:	add	r1, r1, #2
    2e38:	add	r0, r0, r1
    2e3c:	ldrb	r0, [r0]
    2e40:	cmp	r0, #42	; 0x2a
    2e44:	movw	r0, #0
    2e48:	moveq	r0, #1
    2e4c:	and	r0, r0, #1
    2e50:	add	r0, r0, #2
    2e54:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2e58:	add	r0, r1, r0
    2e5c:	str	r0, [fp, #-44]	; 0xffffffd4
    2e60:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2e64:	add	r0, r0, #2
    2e68:	str	r0, [fp, #-48]	; 0xffffffd0
    2e6c:	b	3260 <string_to_parts+0xb64>
    2e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e74:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2e78:	add	r0, r0, r1
    2e7c:	ldrb	r0, [r0]
    2e80:	cmp	r0, #109	; 0x6d
    2e84:	bne	2f58 <string_to_parts+0x85c>
    2e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2e8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2e90:	add	r1, r1, #1
    2e94:	add	r0, r0, r1
    2e98:	ldrb	r0, [r0]
    2e9c:	cmp	r0, #109	; 0x6d
    2ea0:	bne	2f58 <string_to_parts+0x85c>
    2ea4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2ea8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2eac:	add	r1, r1, #2
    2eb0:	add	r0, r0, r1
    2eb4:	ldrb	r0, [r0]
    2eb8:	cmp	r0, #42	; 0x2a
    2ebc:	movw	r0, #0
    2ec0:	moveq	r0, #1
    2ec4:	and	r0, r0, #1
    2ec8:	str	r0, [fp, #-40]	; 0xffffffd8
    2ecc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2ed0:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2ed4:	add	r0, r0, r1
    2ed8:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2edc:	ldr	r3, [fp, #16]
    2ee0:	movw	r1, #2
    2ee4:	bl	4468 <parse_integer>
    2ee8:	cmp	r0, #0
    2eec:	beq	2f14 <string_to_parts+0x818>
    2ef0:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2ef8:	mvn	r0, #103	; 0x67
    2efc:	movw	r1, #0
    2f00:	movt	r1, #0
    2f04:	bl	0 <coda_set_error>
    2f08:	mvn	r0, #0
    2f0c:	str	r0, [fp, #-20]	; 0xffffffec
    2f10:	b	32e8 <string_to_parts+0xbec>
    2f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f18:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2f1c:	add	r1, r1, #2
    2f20:	add	r0, r0, r1
    2f24:	ldrb	r0, [r0]
    2f28:	cmp	r0, #42	; 0x2a
    2f2c:	movw	r0, #0
    2f30:	moveq	r0, #1
    2f34:	and	r0, r0, #1
    2f38:	add	r0, r0, #2
    2f3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2f40:	add	r0, r1, r0
    2f44:	str	r0, [fp, #-44]	; 0xffffffd4
    2f48:	ldr	r0, [fp, #-48]	; 0xffffffd0
    2f4c:	add	r0, r0, #2
    2f50:	str	r0, [fp, #-48]	; 0xffffffd0
    2f54:	b	325c <string_to_parts+0xb60>
    2f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2f60:	add	r0, r0, r1
    2f64:	ldrb	r0, [r0]
    2f68:	cmp	r0, #115	; 0x73
    2f6c:	bne	3040 <string_to_parts+0x944>
    2f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f74:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2f78:	add	r1, r1, #1
    2f7c:	add	r0, r0, r1
    2f80:	ldrb	r0, [r0]
    2f84:	cmp	r0, #115	; 0x73
    2f88:	bne	3040 <string_to_parts+0x944>
    2f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f90:	ldr	r1, [fp, #-44]	; 0xffffffd4
    2f94:	add	r1, r1, #2
    2f98:	add	r0, r0, r1
    2f9c:	ldrb	r0, [r0]
    2fa0:	cmp	r0, #42	; 0x2a
    2fa4:	movw	r0, #0
    2fa8:	moveq	r0, #1
    2fac:	and	r0, r0, #1
    2fb0:	str	r0, [fp, #-40]	; 0xffffffd8
    2fb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    2fb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    2fbc:	add	r0, r0, r1
    2fc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
    2fc4:	ldr	r3, [fp, #20]
    2fc8:	movw	r1, #2
    2fcc:	bl	4468 <parse_integer>
    2fd0:	cmp	r0, #0
    2fd4:	beq	2ffc <string_to_parts+0x900>
    2fd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2fdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    2fe0:	mvn	r0, #103	; 0x67
    2fe4:	movw	r1, #0
    2fe8:	movt	r1, #0
    2fec:	bl	0 <coda_set_error>
    2ff0:	mvn	r0, #0
    2ff4:	str	r0, [fp, #-20]	; 0xffffffec
    2ff8:	b	32e8 <string_to_parts+0xbec>
    2ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3000:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3004:	add	r1, r1, #2
    3008:	add	r0, r0, r1
    300c:	ldrb	r0, [r0]
    3010:	cmp	r0, #42	; 0x2a
    3014:	movw	r0, #0
    3018:	moveq	r0, #1
    301c:	and	r0, r0, #1
    3020:	add	r0, r0, #2
    3024:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3028:	add	r0, r1, r0
    302c:	str	r0, [fp, #-44]	; 0xffffffd4
    3030:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3034:	add	r0, r0, #2
    3038:	str	r0, [fp, #-48]	; 0xffffffd0
    303c:	b	3258 <string_to_parts+0xb5c>
    3040:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3044:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3048:	add	r0, r0, r1
    304c:	ldrb	r0, [r0]
    3050:	cmp	r0, #83	; 0x53
    3054:	bne	3154 <string_to_parts+0xa58>
    3058:	movw	r0, #0
    305c:	str	r0, [sp, #48]	; 0x30
    3060:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3064:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3068:	add	r0, r0, r1
    306c:	ldrb	r0, [r0]
    3070:	cmp	r0, #83	; 0x53
    3074:	bne	3094 <string_to_parts+0x998>
    3078:	ldr	r0, [fp, #-44]	; 0xffffffd4
    307c:	add	r0, r0, #1
    3080:	str	r0, [fp, #-44]	; 0xffffffd4
    3084:	ldr	r0, [sp, #48]	; 0x30
    3088:	add	r0, r0, #1
    308c:	str	r0, [sp, #48]	; 0x30
    3090:	b	3060 <string_to_parts+0x964>
    3094:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3098:	ldr	r1, [fp, #-48]	; 0xffffffd0
    309c:	add	r0, r0, r1
    30a0:	ldr	r1, [sp, #48]	; 0x30
    30a4:	cmp	r1, #6
    30a8:	str	r0, [sp, #12]
    30ac:	ble	30bc <string_to_parts+0x9c0>
    30b0:	movw	r0, #6
    30b4:	str	r0, [sp, #8]
    30b8:	b	30c4 <string_to_parts+0x9c8>
    30bc:	ldr	r0, [sp, #48]	; 0x30
    30c0:	str	r0, [sp, #8]
    30c4:	ldr	r0, [sp, #8]
    30c8:	ldr	r3, [fp, #24]
    30cc:	ldr	r1, [sp, #12]
    30d0:	str	r0, [sp, #4]
    30d4:	mov	r0, r1
    30d8:	ldr	r1, [sp, #4]
    30dc:	movw	r2, #0
    30e0:	bl	4468 <parse_integer>
    30e4:	cmp	r0, #0
    30e8:	beq	3110 <string_to_parts+0xa14>
    30ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
    30f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    30f4:	mvn	r0, #103	; 0x67
    30f8:	movw	r1, #0
    30fc:	movt	r1, #0
    3100:	bl	0 <coda_set_error>
    3104:	mvn	r0, #0
    3108:	str	r0, [fp, #-20]	; 0xffffffec
    310c:	b	32e8 <string_to_parts+0xbec>
    3110:	ldr	r0, [sp, #48]	; 0x30
    3114:	ldr	r1, [fp, #-48]	; 0xffffffd0
    3118:	add	r0, r1, r0
    311c:	str	r0, [fp, #-48]	; 0xffffffd0
    3120:	ldr	r0, [sp, #48]	; 0x30
    3124:	cmp	r0, #6
    3128:	bge	3150 <string_to_parts+0xa54>
    312c:	ldr	r0, [fp, #24]
    3130:	ldr	r1, [r0]
    3134:	movw	r2, #10
    3138:	mul	r1, r1, r2
    313c:	str	r1, [r0]
    3140:	ldr	r0, [sp, #48]	; 0x30
    3144:	add	r0, r0, #1
    3148:	str	r0, [sp, #48]	; 0x30
    314c:	b	3120 <string_to_parts+0xa24>
    3150:	b	3254 <string_to_parts+0xb58>
    3154:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3158:	ldr	r1, [fp, #-44]	; 0xffffffd4
    315c:	add	r0, r0, r1
    3160:	ldrb	r0, [r0]
    3164:	cmp	r0, #65	; 0x41
    3168:	blt	3184 <string_to_parts+0xa88>
    316c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3170:	ldr	r1, [fp, #-44]	; 0xffffffd4
    3174:	add	r0, r0, r1
    3178:	ldrb	r0, [r0]
    317c:	cmp	r0, #90	; 0x5a
    3180:	ble	31cc <string_to_parts+0xad0>
    3184:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3188:	ldr	r1, [fp, #-44]	; 0xffffffd4
    318c:	add	r0, r0, r1
    3190:	ldrb	r0, [r0]
    3194:	cmp	r0, #97	; 0x61
    3198:	blt	31b4 <string_to_parts+0xab8>
    319c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31a0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    31a4:	add	r0, r0, r1
    31a8:	ldrb	r0, [r0]
    31ac:	cmp	r0, #122	; 0x7a
    31b0:	ble	31cc <string_to_parts+0xad0>
    31b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
    31bc:	add	r0, r0, r1
    31c0:	ldrb	r0, [r0]
    31c4:	cmp	r0, #42	; 0x2a
    31c8:	bne	31ec <string_to_parts+0xaf0>
    31cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
    31d0:	mvn	r0, #102	; 0x66
    31d4:	movw	r1, #0
    31d8:	movt	r1, #0
    31dc:	bl	0 <coda_set_error>
    31e0:	mvn	r0, #0
    31e4:	str	r0, [fp, #-20]	; 0xffffffec
    31e8:	b	32e8 <string_to_parts+0xbec>
    31ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
    31f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
    31f4:	add	r0, r0, r1
    31f8:	ldrb	r0, [r0]
    31fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3200:	ldr	r2, [fp, #-48]	; 0xffffffd0
    3204:	add	r1, r1, r2
    3208:	ldrb	r1, [r1]
    320c:	cmp	r0, r1
    3210:	beq	3238 <string_to_parts+0xb3c>
    3214:	ldr	r2, [fp, #-28]	; 0xffffffe4
    3218:	ldr	r3, [fp, #-24]	; 0xffffffe8
    321c:	mvn	r0, #103	; 0x67
    3220:	movw	r1, #0
    3224:	movt	r1, #0
    3228:	bl	0 <coda_set_error>
    322c:	mvn	r0, #0
    3230:	str	r0, [fp, #-20]	; 0xffffffec
    3234:	b	32e8 <string_to_parts+0xbec>
    3238:	ldr	r0, [fp, #-44]	; 0xffffffd4
    323c:	add	r0, r0, #1
    3240:	str	r0, [fp, #-44]	; 0xffffffd4
    3244:	ldr	r0, [fp, #-48]	; 0xffffffd0
    3248:	add	r0, r0, #1
    324c:	str	r0, [fp, #-48]	; 0xffffffd0
    3250:	b	3254 <string_to_parts+0xb58>
    3254:	b	3258 <string_to_parts+0xb5c>
    3258:	b	325c <string_to_parts+0xb60>
    325c:	b	3260 <string_to_parts+0xb64>
    3260:	b	3264 <string_to_parts+0xb68>
    3264:	b	3268 <string_to_parts+0xb6c>
    3268:	b	326c <string_to_parts+0xb70>
    326c:	b	3270 <string_to_parts+0xb74>
    3270:	b	3274 <string_to_parts+0xb78>
    3274:	b	2790 <string_to_parts+0x94>
    3278:	ldr	r0, [sp, #52]	; 0x34
    327c:	cmp	r0, #0
    3280:	beq	32a4 <string_to_parts+0xba8>
    3284:	ldr	r2, [fp, #-24]	; 0xffffffe8
    3288:	mvn	r0, #102	; 0x66
    328c:	movw	r1, #0
    3290:	movt	r1, #0
    3294:	bl	0 <coda_set_error>
    3298:	mvn	r0, #0
    329c:	str	r0, [fp, #-20]	; 0xffffffec
    32a0:	b	32e8 <string_to_parts+0xbec>
    32a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    32a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
    32ac:	add	r0, r0, r1
    32b0:	ldrb	r0, [r0]
    32b4:	cmp	r0, #0
    32b8:	beq	32e0 <string_to_parts+0xbe4>
    32bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
    32c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    32c4:	mvn	r0, #103	; 0x67
    32c8:	movw	r1, #0
    32cc:	movt	r1, #0
    32d0:	bl	0 <coda_set_error>
    32d4:	mvn	r0, #0
    32d8:	str	r0, [fp, #-20]	; 0xffffffec
    32dc:	b	32e8 <string_to_parts+0xbec>
    32e0:	movw	r0, #0
    32e4:	str	r0, [fp, #-20]	; 0xffffffec
    32e8:	ldr	r0, [fp, #-20]	; 0xffffffec
    32ec:	sub	sp, fp, #16
    32f0:	pop	{r4, r5, r6, sl, fp, pc}

000032f4 <coda_time_double_to_string>:
    32f4:	push	{r4, r5, r6, sl, fp, lr}
    32f8:	add	fp, sp, #16
    32fc:	sub	sp, sp, #72	; 0x48
    3300:	vstr	d0, [fp, #-32]	; 0xffffffe0
    3304:	str	r0, [fp, #-36]	; 0xffffffdc
    3308:	str	r1, [fp, #-40]	; 0xffffffd8
    330c:	vldr	d0, [fp, #-32]	; 0xffffffe0
    3310:	add	r0, sp, #44	; 0x2c
    3314:	add	r1, sp, #40	; 0x28
    3318:	add	r2, sp, #36	; 0x24
    331c:	add	r3, sp, #32
    3320:	add	ip, sp, #28
    3324:	str	ip, [sp]
    3328:	add	ip, sp, #24
    332c:	str	ip, [sp, #4]
    3330:	add	ip, sp, #20
    3334:	str	ip, [sp, #8]
    3338:	bl	d60 <coda_time_double_to_parts>
    333c:	cmp	r0, #0
    3340:	beq	3350 <coda_time_double_to_string+0x5c>
    3344:	mvn	r0, #0
    3348:	str	r0, [fp, #-20]	; 0xffffffec
    334c:	b	3390 <coda_time_double_to_string+0x9c>
    3350:	ldr	r0, [sp, #44]	; 0x2c
    3354:	ldr	r1, [sp, #40]	; 0x28
    3358:	ldr	r2, [sp, #36]	; 0x24
    335c:	ldr	r3, [sp, #32]
    3360:	ldr	ip, [sp, #28]
    3364:	ldr	lr, [sp, #24]
    3368:	ldr	r4, [sp, #20]
    336c:	ldr	r5, [fp, #-36]	; 0xffffffdc
    3370:	ldr	r6, [fp, #-40]	; 0xffffffd8
    3374:	str	ip, [sp]
    3378:	str	lr, [sp, #4]
    337c:	str	r4, [sp, #8]
    3380:	str	r5, [sp, #12]
    3384:	str	r6, [sp, #16]
    3388:	bl	19b0 <coda_time_parts_to_string>
    338c:	str	r0, [fp, #-20]	; 0xffffffec
    3390:	ldr	r0, [fp, #-20]	; 0xffffffec
    3394:	sub	sp, fp, #16
    3398:	pop	{r4, r5, r6, sl, fp, pc}

0000339c <coda_time_double_to_string_utc>:
    339c:	push	{r4, r5, r6, sl, fp, lr}
    33a0:	add	fp, sp, #16
    33a4:	sub	sp, sp, #72	; 0x48
    33a8:	vstr	d0, [fp, #-32]	; 0xffffffe0
    33ac:	str	r0, [fp, #-36]	; 0xffffffdc
    33b0:	str	r1, [fp, #-40]	; 0xffffffd8
    33b4:	vldr	d0, [fp, #-32]	; 0xffffffe0
    33b8:	add	r0, sp, #44	; 0x2c
    33bc:	add	r1, sp, #40	; 0x28
    33c0:	add	r2, sp, #36	; 0x24
    33c4:	add	r3, sp, #32
    33c8:	add	ip, sp, #28
    33cc:	str	ip, [sp]
    33d0:	add	ip, sp, #24
    33d4:	str	ip, [sp, #4]
    33d8:	add	ip, sp, #20
    33dc:	str	ip, [sp, #8]
    33e0:	bl	10e0 <coda_time_double_to_parts_utc>
    33e4:	cmp	r0, #0
    33e8:	beq	33f8 <coda_time_double_to_string_utc+0x5c>
    33ec:	mvn	r0, #0
    33f0:	str	r0, [fp, #-20]	; 0xffffffec
    33f4:	b	3438 <coda_time_double_to_string_utc+0x9c>
    33f8:	ldr	r0, [sp, #44]	; 0x2c
    33fc:	ldr	r1, [sp, #40]	; 0x28
    3400:	ldr	r2, [sp, #36]	; 0x24
    3404:	ldr	r3, [sp, #32]
    3408:	ldr	ip, [sp, #28]
    340c:	ldr	lr, [sp, #24]
    3410:	ldr	r4, [sp, #20]
    3414:	ldr	r5, [fp, #-36]	; 0xffffffdc
    3418:	ldr	r6, [fp, #-40]	; 0xffffffd8
    341c:	str	ip, [sp]
    3420:	str	lr, [sp, #4]
    3424:	str	r4, [sp, #8]
    3428:	str	r5, [sp, #12]
    342c:	str	r6, [sp, #16]
    3430:	bl	19b0 <coda_time_parts_to_string>
    3434:	str	r0, [fp, #-20]	; 0xffffffec
    3438:	ldr	r0, [fp, #-20]	; 0xffffffec
    343c:	sub	sp, fp, #16
    3440:	pop	{r4, r5, r6, sl, fp, pc}

00003444 <coda_time_string_to_double>:
    3444:	push	{r4, r5, fp, lr}
    3448:	add	fp, sp, #8
    344c:	sub	sp, sp, #64	; 0x40
    3450:	str	r0, [fp, #-16]
    3454:	str	r1, [fp, #-20]	; 0xffffffec
    3458:	str	r2, [fp, #-24]	; 0xffffffe8
    345c:	ldr	r0, [fp, #-16]
    3460:	ldr	r1, [fp, #-20]	; 0xffffffec
    3464:	sub	r2, fp, #28
    3468:	sub	r3, fp, #32
    346c:	add	ip, sp, #36	; 0x24
    3470:	str	ip, [sp]
    3474:	add	ip, sp, #32
    3478:	str	ip, [sp, #4]
    347c:	add	ip, sp, #28
    3480:	str	ip, [sp, #8]
    3484:	add	ip, sp, #24
    3488:	str	ip, [sp, #12]
    348c:	add	ip, sp, #20
    3490:	str	ip, [sp, #16]
    3494:	bl	232c <coda_time_string_to_parts>
    3498:	cmp	r0, #0
    349c:	beq	34ac <coda_time_string_to_double+0x68>
    34a0:	mvn	r0, #0
    34a4:	str	r0, [fp, #-12]
    34a8:	b	34e4 <coda_time_string_to_double+0xa0>
    34ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
    34b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
    34b4:	ldr	r2, [sp, #36]	; 0x24
    34b8:	ldr	r3, [sp, #32]
    34bc:	ldr	ip, [sp, #28]
    34c0:	ldr	lr, [sp, #24]
    34c4:	ldr	r4, [sp, #20]
    34c8:	ldr	r5, [fp, #-24]	; 0xffffffe8
    34cc:	str	ip, [sp]
    34d0:	str	lr, [sp, #4]
    34d4:	str	r4, [sp, #8]
    34d8:	str	r5, [sp, #12]
    34dc:	bl	1510 <coda_time_parts_to_double>
    34e0:	str	r0, [fp, #-12]
    34e4:	ldr	r0, [fp, #-12]
    34e8:	sub	sp, fp, #8
    34ec:	pop	{r4, r5, fp, pc}

000034f0 <coda_time_string_to_double_utc>:
    34f0:	push	{r4, r5, fp, lr}
    34f4:	add	fp, sp, #8
    34f8:	sub	sp, sp, #64	; 0x40
    34fc:	str	r0, [fp, #-16]
    3500:	str	r1, [fp, #-20]	; 0xffffffec
    3504:	str	r2, [fp, #-24]	; 0xffffffe8
    3508:	ldr	r0, [fp, #-16]
    350c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3510:	sub	r2, fp, #28
    3514:	sub	r3, fp, #32
    3518:	add	ip, sp, #36	; 0x24
    351c:	str	ip, [sp]
    3520:	add	ip, sp, #32
    3524:	str	ip, [sp, #4]
    3528:	add	ip, sp, #28
    352c:	str	ip, [sp, #8]
    3530:	add	ip, sp, #24
    3534:	str	ip, [sp, #12]
    3538:	add	ip, sp, #20
    353c:	str	ip, [sp, #16]
    3540:	bl	232c <coda_time_string_to_parts>
    3544:	cmp	r0, #0
    3548:	beq	3558 <coda_time_string_to_double_utc+0x68>
    354c:	mvn	r0, #0
    3550:	str	r0, [fp, #-12]
    3554:	b	3590 <coda_time_string_to_double_utc+0xa0>
    3558:	ldr	r0, [fp, #-28]	; 0xffffffe4
    355c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3560:	ldr	r2, [sp, #36]	; 0x24
    3564:	ldr	r3, [sp, #32]
    3568:	ldr	ip, [sp, #28]
    356c:	ldr	lr, [sp, #24]
    3570:	ldr	r4, [sp, #20]
    3574:	ldr	r5, [fp, #-24]	; 0xffffffe8
    3578:	str	ip, [sp]
    357c:	str	lr, [sp, #4]
    3580:	str	r4, [sp, #8]
    3584:	str	r5, [sp, #12]
    3588:	bl	1790 <coda_time_parts_to_double_utc>
    358c:	str	r0, [fp, #-12]
    3590:	ldr	r0, [fp, #-12]
    3594:	sub	sp, fp, #8
    3598:	pop	{r4, r5, fp, pc}

0000359c <coda_datetime_to_double>:
    359c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    35a0:	add	fp, sp, #24
    35a4:	sub	sp, sp, #48	; 0x30
    35a8:	ldr	ip, [fp, #20]
    35ac:	ldr	lr, [fp, #16]
    35b0:	ldr	r4, [fp, #12]
    35b4:	ldr	r5, [fp, #8]
    35b8:	str	r0, [fp, #-28]	; 0xffffffe4
    35bc:	str	r1, [fp, #-32]	; 0xffffffe0
    35c0:	str	r2, [sp, #36]	; 0x24
    35c4:	str	r3, [sp, #32]
    35c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    35cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    35d0:	ldr	r2, [sp, #36]	; 0x24
    35d4:	ldr	r3, [sp, #32]
    35d8:	ldr	r6, [fp, #8]
    35dc:	ldr	r7, [fp, #12]
    35e0:	ldr	r8, [fp, #16]
    35e4:	ldr	r9, [fp, #20]
    35e8:	str	r6, [sp]
    35ec:	str	r7, [sp, #4]
    35f0:	str	r8, [sp, #8]
    35f4:	str	r9, [sp, #12]
    35f8:	str	r5, [sp, #28]
    35fc:	str	ip, [sp, #24]
    3600:	str	lr, [sp, #20]
    3604:	str	r4, [sp, #16]
    3608:	bl	1510 <coda_time_parts_to_double>
    360c:	sub	sp, fp, #24
    3610:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00003614 <coda_double_to_datetime>:
    3614:	push	{r4, r5, r6, r7, fp, lr}
    3618:	add	fp, sp, #16
    361c:	sub	sp, sp, #48	; 0x30
    3620:	ldr	ip, [fp, #16]
    3624:	ldr	lr, [fp, #12]
    3628:	ldr	r4, [fp, #8]
    362c:	vstr	d0, [fp, #-24]	; 0xffffffe8
    3630:	str	r0, [fp, #-28]	; 0xffffffe4
    3634:	str	r1, [sp, #32]
    3638:	str	r2, [sp, #28]
    363c:	str	r3, [sp, #24]
    3640:	vldr	d0, [fp, #-24]	; 0xffffffe8
    3644:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3648:	ldr	r1, [sp, #32]
    364c:	ldr	r2, [sp, #28]
    3650:	ldr	r3, [sp, #24]
    3654:	ldr	r5, [fp, #8]
    3658:	ldr	r6, [fp, #12]
    365c:	ldr	r7, [fp, #16]
    3660:	str	r5, [sp]
    3664:	str	r6, [sp, #4]
    3668:	str	r7, [sp, #8]
    366c:	str	r4, [sp, #20]
    3670:	str	ip, [sp, #16]
    3674:	str	lr, [sp, #12]
    3678:	bl	d60 <coda_time_double_to_parts>
    367c:	sub	sp, fp, #16
    3680:	pop	{r4, r5, r6, r7, fp, pc}

00003684 <coda_time_to_string>:
    3684:	push	{fp, lr}
    3688:	mov	fp, sp
    368c:	sub	sp, sp, #16
    3690:	vstr	d0, [sp, #8]
    3694:	str	r0, [sp, #4]
    3698:	vldr	d0, [sp, #8]
    369c:	ldr	r1, [sp, #4]
    36a0:	movw	r0, #0
    36a4:	movt	r0, #0
    36a8:	bl	32f4 <coda_time_double_to_string>
    36ac:	mov	sp, fp
    36b0:	pop	{fp, pc}

000036b4 <coda_string_to_time>:
    36b4:	push	{fp, lr}
    36b8:	mov	fp, sp
    36bc:	sub	sp, sp, #16
    36c0:	str	r0, [fp, #-4]
    36c4:	str	r1, [sp, #8]
    36c8:	movw	r0, #0
    36cc:	movt	r0, #0
    36d0:	str	r0, [sp, #4]
    36d4:	ldr	r0, [sp, #4]
    36d8:	ldr	r1, [fp, #-4]
    36dc:	ldr	r2, [sp, #8]
    36e0:	bl	3444 <coda_time_string_to_double>
    36e4:	mov	sp, fp
    36e8:	pop	{fp, pc}

000036ec <coda_utcdatetime_to_double>:
    36ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    36f0:	add	fp, sp, #24
    36f4:	sub	sp, sp, #48	; 0x30
    36f8:	ldr	ip, [fp, #20]
    36fc:	ldr	lr, [fp, #16]
    3700:	ldr	r4, [fp, #12]
    3704:	ldr	r5, [fp, #8]
    3708:	str	r0, [fp, #-28]	; 0xffffffe4
    370c:	str	r1, [fp, #-32]	; 0xffffffe0
    3710:	str	r2, [sp, #36]	; 0x24
    3714:	str	r3, [sp, #32]
    3718:	ldr	r0, [fp, #-28]	; 0xffffffe4
    371c:	ldr	r1, [fp, #-32]	; 0xffffffe0
    3720:	ldr	r2, [sp, #36]	; 0x24
    3724:	ldr	r3, [sp, #32]
    3728:	ldr	r6, [fp, #8]
    372c:	ldr	r7, [fp, #12]
    3730:	ldr	r8, [fp, #16]
    3734:	ldr	r9, [fp, #20]
    3738:	str	r6, [sp]
    373c:	str	r7, [sp, #4]
    3740:	str	r8, [sp, #8]
    3744:	str	r9, [sp, #12]
    3748:	str	r5, [sp, #28]
    374c:	str	ip, [sp, #24]
    3750:	str	lr, [sp, #20]
    3754:	str	r4, [sp, #16]
    3758:	bl	1790 <coda_time_parts_to_double_utc>
    375c:	sub	sp, fp, #24
    3760:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00003764 <coda_double_to_utcdatetime>:
    3764:	push	{r4, r5, r6, r7, fp, lr}
    3768:	add	fp, sp, #16
    376c:	sub	sp, sp, #48	; 0x30
    3770:	ldr	ip, [fp, #16]
    3774:	ldr	lr, [fp, #12]
    3778:	ldr	r4, [fp, #8]
    377c:	vstr	d0, [fp, #-24]	; 0xffffffe8
    3780:	str	r0, [fp, #-28]	; 0xffffffe4
    3784:	str	r1, [sp, #32]
    3788:	str	r2, [sp, #28]
    378c:	str	r3, [sp, #24]
    3790:	vldr	d0, [fp, #-24]	; 0xffffffe8
    3794:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3798:	ldr	r1, [sp, #32]
    379c:	ldr	r2, [sp, #28]
    37a0:	ldr	r3, [sp, #24]
    37a4:	ldr	r5, [fp, #8]
    37a8:	ldr	r6, [fp, #12]
    37ac:	ldr	r7, [fp, #16]
    37b0:	str	r5, [sp]
    37b4:	str	r6, [sp, #4]
    37b8:	str	r7, [sp, #8]
    37bc:	str	r4, [sp, #20]
    37c0:	str	ip, [sp, #16]
    37c4:	str	lr, [sp, #12]
    37c8:	bl	10e0 <coda_time_double_to_parts_utc>
    37cc:	sub	sp, fp, #16
    37d0:	pop	{r4, r5, r6, r7, fp, pc}

000037d4 <coda_time_to_utcstring>:
    37d4:	push	{fp, lr}
    37d8:	mov	fp, sp
    37dc:	sub	sp, sp, #16
    37e0:	vstr	d0, [sp, #8]
    37e4:	str	r0, [sp, #4]
    37e8:	vldr	d0, [sp, #8]
    37ec:	ldr	r1, [sp, #4]
    37f0:	movw	r0, #0
    37f4:	movt	r0, #0
    37f8:	bl	339c <coda_time_double_to_string_utc>
    37fc:	mov	sp, fp
    3800:	pop	{fp, pc}

00003804 <coda_utcstring_to_time>:
    3804:	push	{fp, lr}
    3808:	mov	fp, sp
    380c:	sub	sp, sp, #16
    3810:	str	r0, [fp, #-4]
    3814:	str	r1, [sp, #8]
    3818:	movw	r0, #0
    381c:	movt	r0, #0
    3820:	str	r0, [sp, #4]
    3824:	ldr	r0, [sp, #4]
    3828:	ldr	r1, [fp, #-4]
    382c:	ldr	r2, [sp, #8]
    3830:	bl	34f0 <coda_time_string_to_double_utc>
    3834:	mov	sp, fp
    3838:	pop	{fp, pc}

0000383c <dmy_to_mjd2000_julian>:
    383c:	push	{fp, lr}
    3840:	mov	fp, sp
    3844:	sub	sp, sp, #120	; 0x78
    3848:	movw	ip, #0
    384c:	movt	ip, #0
    3850:	str	r0, [fp, #-8]
    3854:	str	r1, [fp, #-12]
    3858:	str	r2, [fp, #-16]
    385c:	str	r3, [fp, #-20]	; 0xffffffec
    3860:	add	r0, sp, #48	; 0x30
    3864:	mov	r1, ip
    3868:	movw	r2, #52	; 0x34
    386c:	bl	0 <memcpy>
    3870:	ldr	r0, [fp, #-16]
    3874:	cmp	r0, #0
    3878:	beq	3928 <dmy_to_mjd2000_julian+0xec>
    387c:	ldr	r0, [fp, #-12]
    3880:	cmp	r0, #1
    3884:	blt	3928 <dmy_to_mjd2000_julian+0xec>
    3888:	ldr	r0, [fp, #-12]
    388c:	cmp	r0, #12
    3890:	bgt	3928 <dmy_to_mjd2000_julian+0xec>
    3894:	ldr	r0, [fp, #-8]
    3898:	cmp	r0, #1
    389c:	blt	3928 <dmy_to_mjd2000_julian+0xec>
    38a0:	ldr	r0, [fp, #-8]
    38a4:	ldr	r1, [fp, #-12]
    38a8:	add	r2, sp, #48	; 0x30
    38ac:	ldr	r3, [r2, r1, lsl #2]
    38b0:	sub	r1, r1, #1
    38b4:	add	r1, r2, r1, lsl #2
    38b8:	ldr	r1, [r1]
    38bc:	sub	r1, r3, r1
    38c0:	ldr	r2, [fp, #-12]
    38c4:	cmp	r2, #2
    38c8:	movw	r2, #0
    38cc:	str	r0, [sp, #44]	; 0x2c
    38d0:	str	r1, [sp, #40]	; 0x28
    38d4:	str	r2, [sp, #36]	; 0x24
    38d8:	bne	390c <dmy_to_mjd2000_julian+0xd0>
    38dc:	ldr	r0, [fp, #-16]
    38e0:	bl	3d88 <y>
    38e4:	mov	lr, r0
    38e8:	asr	r1, r0, #31
    38ec:	add	r1, r0, r1, lsr #30
    38f0:	bic	r1, r1, #3
    38f4:	sub	r0, r0, r1
    38f8:	cmp	r0, #0
    38fc:	movw	r0, #0
    3900:	moveq	r0, #1
    3904:	str	lr, [sp, #32]
    3908:	str	r0, [sp, #36]	; 0x24
    390c:	ldr	r0, [sp, #36]	; 0x24
    3910:	and	r0, r0, #1
    3914:	ldr	r1, [sp, #40]	; 0x28
    3918:	add	r0, r1, r0
    391c:	ldr	r2, [sp, #44]	; 0x2c
    3920:	cmp	r2, r0
    3924:	ble	3960 <dmy_to_mjd2000_julian+0x124>
    3928:	ldr	r2, [fp, #-8]
    392c:	ldr	r3, [fp, #-12]
    3930:	ldr	r0, [fp, #-16]
    3934:	mvn	r1, #103	; 0x67
    3938:	str	r0, [sp, #28]
    393c:	mov	r0, r1
    3940:	movw	r1, #0
    3944:	movt	r1, #0
    3948:	ldr	ip, [sp, #28]
    394c:	str	ip, [sp]
    3950:	bl	0 <coda_set_error>
    3954:	mvn	r0, #0
    3958:	str	r0, [fp, #-4]
    395c:	b	3a28 <dmy_to_mjd2000_julian+0x1ec>
    3960:	ldr	r0, [fp, #-8]
    3964:	ldr	r1, [fp, #-16]
    3968:	str	r0, [sp, #24]
    396c:	mov	r0, r1
    3970:	bl	3d88 <y>
    3974:	movw	r1, #365	; 0x16d
    3978:	ldr	lr, [sp, #24]
    397c:	mla	r0, r0, r1, lr
    3980:	ldr	r1, [fp, #-16]
    3984:	str	r0, [sp, #20]
    3988:	mov	r0, r1
    398c:	bl	3d88 <y>
    3990:	mov	r1, #4
    3994:	bl	3db4 <int_div>
    3998:	ldr	r1, [sp, #20]
    399c:	add	r0, r1, r0
    39a0:	ldr	r1, [fp, #-12]
    39a4:	sub	r1, r1, #1
    39a8:	add	lr, sp, #48	; 0x30
    39ac:	add	r1, lr, r1, lsl #2
    39b0:	ldr	r1, [r1]
    39b4:	add	r0, r0, r1
    39b8:	ldr	r1, [fp, #-12]
    39bc:	cmp	r1, #2
    39c0:	movw	r1, #0
    39c4:	str	r0, [sp, #16]
    39c8:	str	r1, [sp, #12]
    39cc:	bgt	3a00 <dmy_to_mjd2000_julian+0x1c4>
    39d0:	ldr	r0, [fp, #-16]
    39d4:	bl	3d88 <y>
    39d8:	mov	lr, r0
    39dc:	asr	r1, r0, #31
    39e0:	add	r1, r0, r1, lsr #30
    39e4:	bic	r1, r1, #3
    39e8:	sub	r0, r0, r1
    39ec:	cmp	r0, #0
    39f0:	movw	r0, #0
    39f4:	moveq	r0, #1
    39f8:	str	lr, [sp, #8]
    39fc:	str	r0, [sp, #12]
    3a00:	ldr	r0, [sp, #12]
    3a04:	ldr	r1, [pc, #40]	; 3a34 <dmy_to_mjd2000_julian+0x1f8>
    3a08:	and	r0, r0, #1
    3a0c:	ldr	r2, [sp, #16]
    3a10:	sub	r0, r2, r0
    3a14:	add	r0, r0, r1
    3a18:	ldr	r1, [fp, #-20]	; 0xffffffec
    3a1c:	str	r0, [r1]
    3a20:	movw	r0, #0
    3a24:	str	r0, [fp, #-4]
    3a28:	ldr	r0, [fp, #-4]
    3a2c:	mov	sp, fp
    3a30:	pop	{fp, pc}
    3a34:	.word	0x001a42e2

00003a38 <dmy_to_mjd2000_gregorian>:
    3a38:	push	{fp, lr}
    3a3c:	mov	fp, sp
    3a40:	sub	sp, sp, #152	; 0x98
    3a44:	movw	ip, #0
    3a48:	movt	ip, #0
    3a4c:	str	r0, [fp, #-8]
    3a50:	str	r1, [fp, #-12]
    3a54:	str	r2, [fp, #-16]
    3a58:	str	r3, [fp, #-20]	; 0xffffffec
    3a5c:	sub	r0, fp, #72	; 0x48
    3a60:	mov	r1, ip
    3a64:	movw	r2, #52	; 0x34
    3a68:	bl	0 <memcpy>
    3a6c:	ldr	r0, [fp, #-16]
    3a70:	cmp	r0, #0
    3a74:	beq	3bac <dmy_to_mjd2000_gregorian+0x174>
    3a78:	ldr	r0, [fp, #-12]
    3a7c:	cmp	r0, #1
    3a80:	blt	3bac <dmy_to_mjd2000_gregorian+0x174>
    3a84:	ldr	r0, [fp, #-12]
    3a88:	cmp	r0, #12
    3a8c:	bgt	3bac <dmy_to_mjd2000_gregorian+0x174>
    3a90:	ldr	r0, [fp, #-8]
    3a94:	cmp	r0, #1
    3a98:	blt	3bac <dmy_to_mjd2000_gregorian+0x174>
    3a9c:	ldr	r0, [fp, #-8]
    3aa0:	ldr	r1, [fp, #-12]
    3aa4:	sub	r2, fp, #72	; 0x48
    3aa8:	ldr	r3, [r2, r1, lsl #2]
    3aac:	sub	r1, r1, #1
    3ab0:	add	r1, r2, r1, lsl #2
    3ab4:	ldr	r1, [r1]
    3ab8:	sub	r1, r3, r1
    3abc:	ldr	r2, [fp, #-12]
    3ac0:	cmp	r2, #2
    3ac4:	movw	r2, #0
    3ac8:	str	r0, [sp, #76]	; 0x4c
    3acc:	str	r1, [sp, #72]	; 0x48
    3ad0:	str	r2, [sp, #68]	; 0x44
    3ad4:	bne	3b90 <dmy_to_mjd2000_gregorian+0x158>
    3ad8:	ldr	r0, [fp, #-16]
    3adc:	bl	3d88 <y>
    3ae0:	asr	lr, r0, #31
    3ae4:	add	lr, r0, lr, lsr #30
    3ae8:	bic	lr, lr, #3
    3aec:	sub	r0, r0, lr
    3af0:	clz	r0, r0
    3af4:	lsr	r0, r0, #5
    3af8:	ldr	lr, [fp, #-16]
    3afc:	str	r0, [sp, #64]	; 0x40
    3b00:	mov	r0, lr
    3b04:	bl	3d88 <y>
    3b08:	movw	lr, #34079	; 0x851f
    3b0c:	movt	lr, #20971	; 0x51eb
    3b10:	smmul	r1, r0, lr
    3b14:	asr	r2, r1, #5
    3b18:	add	r1, r2, r1, lsr #31
    3b1c:	mov	r2, #100	; 0x64
    3b20:	mls	r0, r1, r2, r0
    3b24:	clz	r0, r0
    3b28:	lsr	r0, r0, #5
    3b2c:	ldr	r1, [sp, #64]	; 0x40
    3b30:	eor	r0, r1, r0
    3b34:	ldr	r1, [fp, #-16]
    3b38:	str	r0, [sp, #60]	; 0x3c
    3b3c:	mov	r0, r1
    3b40:	str	lr, [sp, #56]	; 0x38
    3b44:	bl	3d88 <y>
    3b48:	mov	r1, r0
    3b4c:	ldr	r2, [sp, #56]	; 0x38
    3b50:	smmul	lr, r0, r2
    3b54:	asr	r3, lr, #7
    3b58:	add	r3, r3, lr, lsr #31
    3b5c:	mov	lr, #400	; 0x190
    3b60:	mls	r0, r3, lr, r0
    3b64:	cmp	r0, #0
    3b68:	movw	r0, #0
    3b6c:	moveq	r0, #1
    3b70:	and	r0, r0, #1
    3b74:	ldr	r3, [sp, #60]	; 0x3c
    3b78:	eor	r0, r3, r0
    3b7c:	cmp	r0, #0
    3b80:	movw	r0, #0
    3b84:	movne	r0, #1
    3b88:	str	r1, [sp, #52]	; 0x34
    3b8c:	str	r0, [sp, #68]	; 0x44
    3b90:	ldr	r0, [sp, #68]	; 0x44
    3b94:	and	r0, r0, #1
    3b98:	ldr	r1, [sp, #72]	; 0x48
    3b9c:	add	r0, r1, r0
    3ba0:	ldr	r2, [sp, #76]	; 0x4c
    3ba4:	cmp	r2, r0
    3ba8:	ble	3be4 <dmy_to_mjd2000_gregorian+0x1ac>
    3bac:	ldr	r2, [fp, #-8]
    3bb0:	ldr	r3, [fp, #-12]
    3bb4:	ldr	r0, [fp, #-16]
    3bb8:	mvn	r1, #103	; 0x67
    3bbc:	str	r0, [sp, #48]	; 0x30
    3bc0:	mov	r0, r1
    3bc4:	movw	r1, #0
    3bc8:	movt	r1, #0
    3bcc:	ldr	ip, [sp, #48]	; 0x30
    3bd0:	str	ip, [sp]
    3bd4:	bl	0 <coda_set_error>
    3bd8:	mvn	r0, #0
    3bdc:	str	r0, [fp, #-4]
    3be0:	b	3d78 <dmy_to_mjd2000_gregorian+0x340>
    3be4:	ldr	r0, [fp, #-8]
    3be8:	ldr	r1, [fp, #-12]
    3bec:	sub	r1, r1, #1
    3bf0:	sub	r2, fp, #72	; 0x48
    3bf4:	add	r1, r2, r1, lsl #2
    3bf8:	ldr	r1, [r1]
    3bfc:	add	r0, r0, r1
    3c00:	ldr	r1, [fp, #-16]
    3c04:	str	r0, [sp, #44]	; 0x2c
    3c08:	mov	r0, r1
    3c0c:	bl	3d88 <y>
    3c10:	movw	r1, #365	; 0x16d
    3c14:	mul	r0, r0, r1
    3c18:	ldr	r1, [sp, #44]	; 0x2c
    3c1c:	add	r0, r1, r0
    3c20:	ldr	r1, [fp, #-16]
    3c24:	str	r0, [sp, #40]	; 0x28
    3c28:	mov	r0, r1
    3c2c:	bl	3d88 <y>
    3c30:	movw	r1, #4
    3c34:	bl	3db4 <int_div>
    3c38:	ldr	r1, [sp, #40]	; 0x28
    3c3c:	add	r0, r1, r0
    3c40:	ldr	r1, [fp, #-16]
    3c44:	str	r0, [sp, #36]	; 0x24
    3c48:	mov	r0, r1
    3c4c:	bl	3d88 <y>
    3c50:	movw	r1, #100	; 0x64
    3c54:	bl	3db4 <int_div>
    3c58:	ldr	r1, [sp, #36]	; 0x24
    3c5c:	sub	r0, r1, r0
    3c60:	ldr	r1, [fp, #-16]
    3c64:	str	r0, [sp, #32]
    3c68:	mov	r0, r1
    3c6c:	bl	3d88 <y>
    3c70:	movw	r1, #400	; 0x190
    3c74:	bl	3db4 <int_div>
    3c78:	ldr	r1, [sp, #32]
    3c7c:	add	r0, r1, r0
    3c80:	ldr	r1, [fp, #-12]
    3c84:	cmp	r1, #2
    3c88:	movw	r1, #0
    3c8c:	str	r0, [sp, #28]
    3c90:	str	r1, [sp, #24]
    3c94:	bgt	3d4c <dmy_to_mjd2000_gregorian+0x314>
    3c98:	ldr	r0, [fp, #-16]
    3c9c:	bl	3d88 <y>
    3ca0:	asr	lr, r0, #31
    3ca4:	add	lr, r0, lr, lsr #30
    3ca8:	bic	lr, lr, #3
    3cac:	sub	r0, r0, lr
    3cb0:	clz	r0, r0
    3cb4:	lsr	r0, r0, #5
    3cb8:	ldr	lr, [fp, #-16]
    3cbc:	str	r0, [sp, #20]
    3cc0:	mov	r0, lr
    3cc4:	bl	3d88 <y>
    3cc8:	movw	lr, #34079	; 0x851f
    3ccc:	movt	lr, #20971	; 0x51eb
    3cd0:	smmul	r1, r0, lr
    3cd4:	asr	r2, r1, #5
    3cd8:	add	r1, r2, r1, lsr #31
    3cdc:	mov	r2, #100	; 0x64
    3ce0:	mls	r0, r1, r2, r0
    3ce4:	ldr	r1, [sp, #20]
    3ce8:	sub	r2, r1, #1
    3cec:	cmp	r0, #0
    3cf0:	moveq	r1, r2
    3cf4:	ldr	r0, [fp, #-16]
    3cf8:	str	lr, [sp, #16]
    3cfc:	str	r1, [sp, #12]
    3d00:	bl	3d88 <y>
    3d04:	mov	r1, r0
    3d08:	ldr	r2, [sp, #16]
    3d0c:	smmul	lr, r0, r2
    3d10:	asr	r3, lr, #7
    3d14:	add	r3, r3, lr, lsr #31
    3d18:	mov	lr, #400	; 0x190
    3d1c:	mls	r0, r3, lr, r0
    3d20:	cmp	r0, #0
    3d24:	movw	r0, #0
    3d28:	moveq	r0, #1
    3d2c:	and	r0, r0, #1
    3d30:	ldr	r3, [sp, #12]
    3d34:	add	r0, r3, r0
    3d38:	cmp	r0, #0
    3d3c:	movw	r0, #0
    3d40:	movne	r0, #1
    3d44:	str	r1, [sp, #8]
    3d48:	str	r0, [sp, #24]
    3d4c:	ldr	r0, [sp, #24]
    3d50:	ldr	r1, [pc, #44]	; 3d84 <dmy_to_mjd2000_gregorian+0x34c>
    3d54:	and	r0, r0, #1
    3d58:	movw	r2, #0
    3d5c:	sub	r0, r2, r0
    3d60:	ldr	r3, [sp, #28]
    3d64:	add	r0, r3, r0
    3d68:	sub	r0, r0, r1
    3d6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    3d70:	str	r0, [r1]
    3d74:	str	r2, [fp, #-4]
    3d78:	ldr	r0, [fp, #-4]
    3d7c:	mov	sp, fp
    3d80:	pop	{fp, pc}
    3d84:	.word	0x0008d7df

00003d88 <y>:
    3d88:	sub	sp, sp, #4
    3d8c:	str	r0, [sp]
    3d90:	ldr	r0, [sp]
    3d94:	ldr	r1, [sp]
    3d98:	cmp	r1, #0
    3d9c:	movw	r1, #0
    3da0:	movlt	r1, #1
    3da4:	and	r1, r1, #1
    3da8:	add	r0, r0, r1
    3dac:	add	sp, sp, #4
    3db0:	bx	lr

00003db4 <int_div>:
    3db4:	sub	sp, sp, #8
    3db8:	str	r0, [sp, #4]
    3dbc:	str	r1, [sp]
    3dc0:	ldr	r0, [sp, #4]
    3dc4:	ldr	r1, [sp]
    3dc8:	sdiv	r2, r0, r1
    3dcc:	mls	r0, r2, r1, r0
    3dd0:	cmp	r0, #0
    3dd4:	movw	r0, #0
    3dd8:	movlt	r0, #1
    3ddc:	and	r0, r0, #1
    3de0:	sub	r0, r2, r0
    3de4:	add	sp, sp, #8
    3de8:	bx	lr

00003dec <mjd2000_to_dmy_julian>:
    3dec:	push	{fp, lr}
    3df0:	mov	fp, sp
    3df4:	sub	sp, sp, #24
    3df8:	str	r0, [fp, #-4]
    3dfc:	str	r1, [fp, #-8]
    3e00:	str	r2, [sp, #12]
    3e04:	str	r3, [sp, #8]
    3e08:	ldr	r0, [sp, #8]
    3e0c:	mov	r1, #2000	; 0x7d0
    3e10:	str	r1, [r0]
    3e14:	ldr	r0, [fp, #-4]
    3e18:	sub	r0, r0, #13
    3e1c:	str	r0, [sp, #4]
    3e20:	ldr	r0, [sp, #4]
    3e24:	movw	r1, #1461	; 0x5b5
    3e28:	bl	3db4 <int_div>
    3e2c:	mov	r1, r0
    3e30:	lsl	r0, r0, #2
    3e34:	ldr	r2, [sp, #8]
    3e38:	ldr	r3, [r2]
    3e3c:	add	r0, r3, r0
    3e40:	str	r0, [r2]
    3e44:	ldr	r0, [sp, #4]
    3e48:	movw	r2, #1461	; 0x5b5
    3e4c:	str	r1, [sp]
    3e50:	mov	r1, r2
    3e54:	bl	41f8 <int_mod>
    3e58:	str	r0, [sp, #4]
    3e5c:	ldr	r0, [sp, #4]
    3e60:	movw	r1, #366	; 0x16e
    3e64:	cmp	r0, r1
    3e68:	bge	3e80 <mjd2000_to_dmy_julian+0x94>
    3e6c:	ldr	r0, [sp, #4]
    3e70:	ldr	r1, [fp, #-8]
    3e74:	ldr	r2, [sp, #12]
    3e78:	bl	4238 <getday_leapyear>
    3e7c:	b	3edc <mjd2000_to_dmy_julian+0xf0>
    3e80:	ldr	r0, [sp, #8]
    3e84:	ldr	r1, [r0]
    3e88:	add	r1, r1, #1
    3e8c:	str	r1, [r0]
    3e90:	ldr	r0, [sp, #4]
    3e94:	movw	r1, #366	; 0x16e
    3e98:	sub	r0, r0, r1
    3e9c:	str	r0, [sp, #4]
    3ea0:	ldr	r0, [sp, #4]
    3ea4:	movw	r1, #365	; 0x16d
    3ea8:	bl	3db4 <int_div>
    3eac:	ldr	r1, [sp, #8]
    3eb0:	ldr	lr, [r1]
    3eb4:	add	r0, lr, r0
    3eb8:	str	r0, [r1]
    3ebc:	ldr	r0, [sp, #4]
    3ec0:	movw	r1, #365	; 0x16d
    3ec4:	bl	41f8 <int_mod>
    3ec8:	str	r0, [sp, #4]
    3ecc:	ldr	r0, [sp, #4]
    3ed0:	ldr	r1, [fp, #-8]
    3ed4:	ldr	r2, [sp, #12]
    3ed8:	bl	4350 <getday_nonleapyear>
    3edc:	ldr	r0, [sp, #8]
    3ee0:	ldr	r0, [r0]
    3ee4:	cmp	r0, #0
    3ee8:	bgt	3f00 <mjd2000_to_dmy_julian+0x114>
    3eec:	ldr	r0, [sp, #8]
    3ef0:	ldr	r1, [r0]
    3ef4:	mvn	r2, #0
    3ef8:	add	r1, r1, r2
    3efc:	str	r1, [r0]
    3f00:	mov	sp, fp
    3f04:	pop	{fp, pc}

00003f08 <mjd2000_to_dmy_gregorian>:
    3f08:	push	{fp, lr}
    3f0c:	mov	fp, sp
    3f10:	sub	sp, sp, #32
    3f14:	ldr	ip, [pc, #728]	; 41f4 <mjd2000_to_dmy_gregorian+0x2ec>
    3f18:	str	r0, [fp, #-4]
    3f1c:	str	r1, [fp, #-8]
    3f20:	str	r2, [fp, #-12]
    3f24:	str	r3, [sp, #16]
    3f28:	ldr	r0, [sp, #16]
    3f2c:	movw	r1, #2000	; 0x7d0
    3f30:	str	r1, [r0]
    3f34:	ldr	r0, [fp, #-4]
    3f38:	str	r0, [sp, #12]
    3f3c:	ldr	r0, [sp, #12]
    3f40:	mov	r1, ip
    3f44:	bl	3db4 <int_div>
    3f48:	ldr	r1, [pc, #676]	; 41f4 <mjd2000_to_dmy_gregorian+0x2ec>
    3f4c:	movw	r2, #400	; 0x190
    3f50:	mul	r0, r0, r2
    3f54:	ldr	r2, [sp, #16]
    3f58:	ldr	r3, [r2]
    3f5c:	add	r0, r3, r0
    3f60:	str	r0, [r2]
    3f64:	ldr	r0, [sp, #12]
    3f68:	bl	41f8 <int_mod>
    3f6c:	str	r0, [sp, #12]
    3f70:	ldr	r0, [sp, #12]
    3f74:	movw	r1, #36525	; 0x8ead
    3f78:	cmp	r0, r1
    3f7c:	bge	4040 <mjd2000_to_dmy_gregorian+0x138>
    3f80:	ldr	r0, [sp, #12]
    3f84:	movw	r1, #1461	; 0x5b5
    3f88:	bl	3db4 <int_div>
    3f8c:	mov	r1, r0
    3f90:	lsl	r0, r0, #2
    3f94:	ldr	lr, [sp, #16]
    3f98:	ldr	r2, [lr]
    3f9c:	add	r0, r2, r0
    3fa0:	str	r0, [lr]
    3fa4:	ldr	r0, [sp, #12]
    3fa8:	movw	r2, #1461	; 0x5b5
    3fac:	str	r1, [sp, #8]
    3fb0:	mov	r1, r2
    3fb4:	bl	41f8 <int_mod>
    3fb8:	str	r0, [sp, #12]
    3fbc:	ldr	r0, [sp, #12]
    3fc0:	movw	r1, #366	; 0x16e
    3fc4:	cmp	r0, r1
    3fc8:	bge	3fe0 <mjd2000_to_dmy_gregorian+0xd8>
    3fcc:	ldr	r0, [sp, #12]
    3fd0:	ldr	r1, [fp, #-8]
    3fd4:	ldr	r2, [fp, #-12]
    3fd8:	bl	4238 <getday_leapyear>
    3fdc:	b	403c <mjd2000_to_dmy_gregorian+0x134>
    3fe0:	ldr	r0, [sp, #16]
    3fe4:	ldr	r1, [r0]
    3fe8:	add	r1, r1, #1
    3fec:	str	r1, [r0]
    3ff0:	ldr	r0, [sp, #12]
    3ff4:	movw	r1, #366	; 0x16e
    3ff8:	sub	r0, r0, r1
    3ffc:	str	r0, [sp, #12]
    4000:	ldr	r0, [sp, #12]
    4004:	movw	r1, #365	; 0x16d
    4008:	bl	3db4 <int_div>
    400c:	ldr	r1, [sp, #16]
    4010:	ldr	lr, [r1]
    4014:	add	r0, lr, r0
    4018:	str	r0, [r1]
    401c:	ldr	r0, [sp, #12]
    4020:	movw	r1, #365	; 0x16d
    4024:	bl	41f8 <int_mod>
    4028:	str	r0, [sp, #12]
    402c:	ldr	r0, [sp, #12]
    4030:	ldr	r1, [fp, #-8]
    4034:	ldr	r2, [fp, #-12]
    4038:	bl	4350 <getday_nonleapyear>
    403c:	b	41c8 <mjd2000_to_dmy_gregorian+0x2c0>
    4040:	ldr	r0, [sp, #12]
    4044:	movw	r1, #36525	; 0x8ead
    4048:	sub	r0, r0, r1
    404c:	str	r0, [sp, #12]
    4050:	ldr	r0, [sp, #16]
    4054:	ldr	r1, [r0]
    4058:	add	r1, r1, #100	; 0x64
    405c:	str	r1, [r0]
    4060:	ldr	r0, [sp, #12]
    4064:	movw	r1, #36524	; 0x8eac
    4068:	bl	3db4 <int_div>
    406c:	movw	r1, #100	; 0x64
    4070:	mul	r0, r0, r1
    4074:	ldr	r1, [sp, #16]
    4078:	ldr	lr, [r1]
    407c:	add	r0, lr, r0
    4080:	str	r0, [r1]
    4084:	ldr	r0, [sp, #12]
    4088:	movw	r1, #36524	; 0x8eac
    408c:	bl	41f8 <int_mod>
    4090:	str	r0, [sp, #12]
    4094:	ldr	r0, [sp, #12]
    4098:	movw	r1, #1460	; 0x5b4
    409c:	cmp	r0, r1
    40a0:	bge	40e4 <mjd2000_to_dmy_gregorian+0x1dc>
    40a4:	ldr	r0, [sp, #12]
    40a8:	movw	r1, #365	; 0x16d
    40ac:	bl	3db4 <int_div>
    40b0:	ldr	r1, [sp, #16]
    40b4:	ldr	lr, [r1]
    40b8:	add	r0, lr, r0
    40bc:	str	r0, [r1]
    40c0:	ldr	r0, [sp, #12]
    40c4:	movw	r1, #365	; 0x16d
    40c8:	bl	41f8 <int_mod>
    40cc:	str	r0, [sp, #12]
    40d0:	ldr	r0, [sp, #12]
    40d4:	ldr	r1, [fp, #-8]
    40d8:	ldr	r2, [fp, #-12]
    40dc:	bl	4350 <getday_nonleapyear>
    40e0:	b	41c4 <mjd2000_to_dmy_gregorian+0x2bc>
    40e4:	ldr	r0, [sp, #12]
    40e8:	movw	r1, #1460	; 0x5b4
    40ec:	sub	r0, r0, r1
    40f0:	str	r0, [sp, #12]
    40f4:	ldr	r0, [sp, #16]
    40f8:	ldr	r1, [r0]
    40fc:	add	r1, r1, #4
    4100:	str	r1, [r0]
    4104:	ldr	r0, [sp, #12]
    4108:	movw	r1, #1461	; 0x5b5
    410c:	bl	3db4 <int_div>
    4110:	mov	r1, r0
    4114:	lsl	r0, r0, #2
    4118:	ldr	lr, [sp, #16]
    411c:	ldr	r2, [lr]
    4120:	add	r0, r2, r0
    4124:	str	r0, [lr]
    4128:	ldr	r0, [sp, #12]
    412c:	movw	r2, #1461	; 0x5b5
    4130:	str	r1, [sp, #4]
    4134:	mov	r1, r2
    4138:	bl	41f8 <int_mod>
    413c:	str	r0, [sp, #12]
    4140:	ldr	r0, [sp, #12]
    4144:	movw	r1, #366	; 0x16e
    4148:	cmp	r0, r1
    414c:	bge	4164 <mjd2000_to_dmy_gregorian+0x25c>
    4150:	ldr	r0, [sp, #12]
    4154:	ldr	r1, [fp, #-8]
    4158:	ldr	r2, [fp, #-12]
    415c:	bl	4238 <getday_leapyear>
    4160:	b	41c0 <mjd2000_to_dmy_gregorian+0x2b8>
    4164:	ldr	r0, [sp, #16]
    4168:	ldr	r1, [r0]
    416c:	add	r1, r1, #1
    4170:	str	r1, [r0]
    4174:	ldr	r0, [sp, #12]
    4178:	movw	r1, #366	; 0x16e
    417c:	sub	r0, r0, r1
    4180:	str	r0, [sp, #12]
    4184:	ldr	r0, [sp, #12]
    4188:	movw	r1, #365	; 0x16d
    418c:	bl	3db4 <int_div>
    4190:	ldr	r1, [sp, #16]
    4194:	ldr	lr, [r1]
    4198:	add	r0, lr, r0
    419c:	str	r0, [r1]
    41a0:	ldr	r0, [sp, #12]
    41a4:	movw	r1, #365	; 0x16d
    41a8:	bl	41f8 <int_mod>
    41ac:	str	r0, [sp, #12]
    41b0:	ldr	r0, [sp, #12]
    41b4:	ldr	r1, [fp, #-8]
    41b8:	ldr	r2, [fp, #-12]
    41bc:	bl	4350 <getday_nonleapyear>
    41c0:	b	41c4 <mjd2000_to_dmy_gregorian+0x2bc>
    41c4:	b	41c8 <mjd2000_to_dmy_gregorian+0x2c0>
    41c8:	ldr	r0, [sp, #16]
    41cc:	ldr	r0, [r0]
    41d0:	cmp	r0, #0
    41d4:	bgt	41ec <mjd2000_to_dmy_gregorian+0x2e4>
    41d8:	ldr	r0, [sp, #16]
    41dc:	ldr	r1, [r0]
    41e0:	mvn	r2, #0
    41e4:	add	r1, r1, r2
    41e8:	str	r1, [r0]
    41ec:	mov	sp, fp
    41f0:	pop	{fp, pc}
    41f4:	.word	0x00023ab1

000041f8 <int_mod>:
    41f8:	sub	sp, sp, #8
    41fc:	str	r0, [sp, #4]
    4200:	str	r1, [sp]
    4204:	ldr	r0, [sp, #4]
    4208:	ldr	r1, [sp]
    420c:	sdiv	r2, r0, r1
    4210:	mls	r0, r2, r1, r0
    4214:	mov	r2, r0
    4218:	cmp	r2, #0
    421c:	movw	r2, #0
    4220:	movlt	r2, #1
    4224:	and	r2, r2, #1
    4228:	mul	r1, r1, r2
    422c:	add	r0, r0, r1
    4230:	add	sp, sp, #8
    4234:	bx	lr

00004238 <getday_leapyear>:
    4238:	push	{fp, lr}
    423c:	mov	fp, sp
    4240:	sub	sp, sp, #72	; 0x48
    4244:	movw	r3, #0
    4248:	movt	r3, #0
    424c:	str	r0, [fp, #-4]
    4250:	str	r1, [fp, #-8]
    4254:	str	r2, [fp, #-12]
    4258:	add	r0, sp, #8
    425c:	mov	r1, r3
    4260:	movw	r2, #52	; 0x34
    4264:	bl	0 <memcpy>
    4268:	ldr	r0, [fp, #-4]
    426c:	cmp	r0, #0
    4270:	blt	4278 <getday_leapyear+0x40>
    4274:	b	4298 <getday_leapyear+0x60>
    4278:	movw	r0, #0
    427c:	movt	r0, #0
    4280:	movw	r1, #0
    4284:	movt	r1, #0
    4288:	movw	r2, #358	; 0x166
    428c:	movw	r3, #0
    4290:	movt	r3, #0
    4294:	bl	0 <__assert_fail>
    4298:	ldr	r0, [fp, #-4]
    429c:	movw	r1, #366	; 0x16e
    42a0:	cmp	r0, r1
    42a4:	bge	42ac <getday_leapyear+0x74>
    42a8:	b	42cc <getday_leapyear+0x94>
    42ac:	movw	r0, #0
    42b0:	movt	r0, #0
    42b4:	movw	r1, #0
    42b8:	movt	r1, #0
    42bc:	movw	r2, #359	; 0x167
    42c0:	movw	r3, #0
    42c4:	movt	r3, #0
    42c8:	bl	0 <__assert_fail>
    42cc:	movw	r0, #1
    42d0:	str	r0, [sp, #4]
    42d4:	ldr	r0, [sp, #4]
    42d8:	cmp	r0, #12
    42dc:	bgt	4314 <getday_leapyear+0xdc>
    42e0:	ldr	r0, [fp, #-4]
    42e4:	ldr	r1, [sp, #4]
    42e8:	add	r2, sp, #8
    42ec:	add	r1, r2, r1, lsl #2
    42f0:	ldr	r1, [r1]
    42f4:	cmp	r0, r1
    42f8:	bge	4300 <getday_leapyear+0xc8>
    42fc:	b	4314 <getday_leapyear+0xdc>
    4300:	b	4304 <getday_leapyear+0xcc>
    4304:	ldr	r0, [sp, #4]
    4308:	add	r0, r0, #1
    430c:	str	r0, [sp, #4]
    4310:	b	42d4 <getday_leapyear+0x9c>
    4314:	ldr	r0, [sp, #4]
    4318:	ldr	r1, [fp, #-12]
    431c:	str	r0, [r1]
    4320:	ldr	r0, [fp, #-4]
    4324:	add	r0, r0, #1
    4328:	ldr	r1, [sp, #4]
    432c:	sub	r1, r1, #1
    4330:	add	r2, sp, #8
    4334:	add	r1, r2, r1, lsl #2
    4338:	ldr	r1, [r1]
    433c:	sub	r0, r0, r1
    4340:	ldr	r1, [fp, #-8]
    4344:	str	r0, [r1]
    4348:	mov	sp, fp
    434c:	pop	{fp, pc}

00004350 <getday_nonleapyear>:
    4350:	push	{fp, lr}
    4354:	mov	fp, sp
    4358:	sub	sp, sp, #72	; 0x48
    435c:	movw	r3, #0
    4360:	movt	r3, #0
    4364:	str	r0, [fp, #-4]
    4368:	str	r1, [fp, #-8]
    436c:	str	r2, [fp, #-12]
    4370:	add	r0, sp, #8
    4374:	mov	r1, r3
    4378:	movw	r2, #52	; 0x34
    437c:	bl	0 <memcpy>
    4380:	ldr	r0, [fp, #-4]
    4384:	cmp	r0, #0
    4388:	blt	4390 <getday_nonleapyear+0x40>
    438c:	b	43b0 <getday_nonleapyear+0x60>
    4390:	movw	r0, #0
    4394:	movt	r0, #0
    4398:	movw	r1, #0
    439c:	movt	r1, #0
    43a0:	movw	r2, #377	; 0x179
    43a4:	movw	r3, #0
    43a8:	movt	r3, #0
    43ac:	bl	0 <__assert_fail>
    43b0:	ldr	r0, [fp, #-4]
    43b4:	movw	r1, #365	; 0x16d
    43b8:	cmp	r0, r1
    43bc:	bge	43c4 <getday_nonleapyear+0x74>
    43c0:	b	43e4 <getday_nonleapyear+0x94>
    43c4:	movw	r0, #0
    43c8:	movt	r0, #0
    43cc:	movw	r1, #0
    43d0:	movt	r1, #0
    43d4:	movw	r2, #378	; 0x17a
    43d8:	movw	r3, #0
    43dc:	movt	r3, #0
    43e0:	bl	0 <__assert_fail>
    43e4:	movw	r0, #1
    43e8:	str	r0, [sp, #4]
    43ec:	ldr	r0, [sp, #4]
    43f0:	cmp	r0, #12
    43f4:	bgt	442c <getday_nonleapyear+0xdc>
    43f8:	ldr	r0, [fp, #-4]
    43fc:	ldr	r1, [sp, #4]
    4400:	add	r2, sp, #8
    4404:	add	r1, r2, r1, lsl #2
    4408:	ldr	r1, [r1]
    440c:	cmp	r0, r1
    4410:	bge	4418 <getday_nonleapyear+0xc8>
    4414:	b	442c <getday_nonleapyear+0xdc>
    4418:	b	441c <getday_nonleapyear+0xcc>
    441c:	ldr	r0, [sp, #4]
    4420:	add	r0, r0, #1
    4424:	str	r0, [sp, #4]
    4428:	b	43ec <getday_nonleapyear+0x9c>
    442c:	ldr	r0, [sp, #4]
    4430:	ldr	r1, [fp, #-12]
    4434:	str	r0, [r1]
    4438:	ldr	r0, [fp, #-4]
    443c:	add	r0, r0, #1
    4440:	ldr	r1, [sp, #4]
    4444:	sub	r1, r1, #1
    4448:	add	r2, sp, #8
    444c:	add	r1, r2, r1, lsl #2
    4450:	ldr	r1, [r1]
    4454:	sub	r0, r0, r1
    4458:	ldr	r1, [fp, #-8]
    445c:	str	r0, [r1]
    4460:	mov	sp, fp
    4464:	pop	{fp, pc}

00004468 <parse_integer>:
    4468:	sub	sp, sp, #24
    446c:	str	r0, [sp, #16]
    4470:	str	r1, [sp, #12]
    4474:	str	r2, [sp, #8]
    4478:	str	r3, [sp, #4]
    447c:	ldr	r0, [sp, #8]
    4480:	cmp	r0, #0
    4484:	beq	44e8 <parse_integer+0x80>
    4488:	b	448c <parse_integer+0x24>
    448c:	ldr	r0, [sp, #12]
    4490:	cmp	r0, #1
    4494:	movw	r0, #0
    4498:	str	r0, [sp]
    449c:	ble	44b8 <parse_integer+0x50>
    44a0:	ldr	r0, [sp, #16]
    44a4:	ldrb	r0, [r0]
    44a8:	cmp	r0, #32
    44ac:	movw	r0, #0
    44b0:	moveq	r0, #1
    44b4:	str	r0, [sp]
    44b8:	ldr	r0, [sp]
    44bc:	tst	r0, #1
    44c0:	beq	44e4 <parse_integer+0x7c>
    44c4:	ldr	r0, [sp, #16]
    44c8:	add	r0, r0, #1
    44cc:	str	r0, [sp, #16]
    44d0:	ldr	r0, [sp, #12]
    44d4:	mvn	r1, #0
    44d8:	add	r0, r0, r1
    44dc:	str	r0, [sp, #12]
    44e0:	b	448c <parse_integer+0x24>
    44e4:	b	44e8 <parse_integer+0x80>
    44e8:	ldr	r0, [sp, #4]
    44ec:	movw	r1, #0
    44f0:	str	r1, [r0]
    44f4:	ldr	r0, [sp, #12]
    44f8:	cmp	r0, #0
    44fc:	ble	4574 <parse_integer+0x10c>
    4500:	ldr	r0, [sp, #16]
    4504:	ldrb	r0, [r0]
    4508:	cmp	r0, #48	; 0x30
    450c:	blt	4520 <parse_integer+0xb8>
    4510:	ldr	r0, [sp, #16]
    4514:	ldrb	r0, [r0]
    4518:	cmp	r0, #57	; 0x39
    451c:	ble	452c <parse_integer+0xc4>
    4520:	mvn	r0, #0
    4524:	str	r0, [sp, #20]
    4528:	b	457c <parse_integer+0x114>
    452c:	ldr	r0, [sp, #4]
    4530:	ldr	r0, [r0]
    4534:	movw	r1, #10
    4538:	mul	r0, r0, r1
    453c:	ldr	r1, [sp, #16]
    4540:	ldrb	r1, [r1]
    4544:	sub	r1, r1, #48	; 0x30
    4548:	add	r0, r0, r1
    454c:	ldr	r1, [sp, #4]
    4550:	str	r0, [r1]
    4554:	ldr	r0, [sp, #16]
    4558:	add	r0, r0, #1
    455c:	str	r0, [sp, #16]
    4560:	ldr	r0, [sp, #12]
    4564:	mvn	r1, #0
    4568:	add	r0, r0, r1
    456c:	str	r0, [sp, #12]
    4570:	b	44f4 <parse_integer+0x8c>
    4574:	movw	r0, #0
    4578:	str	r0, [sp, #20]
    457c:	ldr	r0, [sp, #20]
    4580:	add	sp, sp, #24
    4584:	bx	lr
