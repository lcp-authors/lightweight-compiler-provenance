
../compcert-repos/rootname/CMakeFiles/rootname.dir/src/power.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <init_bat>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #8
   c:	str	r0, [sp, #4]
  10:	movw	r0, #0
  14:	movt	r0, #0
  18:	movw	r1, #0
  1c:	movt	r1, #0
  20:	bl	0 <fopen>
  24:	str	r0, [sp]
  28:	ldr	r0, [sp]
  2c:	movw	r1, #0
  30:	cmp	r0, r1
  34:	bne	50 <init_bat+0x50>
  38:	movw	r0, #0
  3c:	movt	r0, #0
  40:	movw	r1, #0
  44:	movt	r1, #0
  48:	bl	0 <fopen>
  4c:	str	r0, [sp]
  50:	ldr	r0, [sp]
  54:	movw	r1, #0
  58:	cmp	r0, r1
  5c:	bne	8c <init_bat+0x8c>
  60:	ldr	r0, [sp, #4]
  64:	movw	r1, #0
  68:	strb	r1, [r0, #24]
  6c:	ldr	r0, [sp, #4]
  70:	movw	r1, #0
  74:	str	r1, [r0]
  78:	ldr	r0, [sp, #4]
  7c:	str	r1, [r0, #4]
  80:	ldr	r0, [sp, #4]
  84:	str	r1, [r0, #8]
  88:	b	168 <init_bat+0x168>
  8c:	ldr	r0, [sp, #4]
  90:	mov	r1, #1
  94:	strb	r1, [r0, #24]
  98:	ldr	r0, [sp]
  9c:	bl	0 <read_int>
  a0:	ldr	r2, [sp, #4]
  a4:	str	r1, [r2, #20]
  a8:	str	r0, [r2, #16]
  ac:	movw	r0, #0
  b0:	movt	r0, #0
  b4:	movw	r1, #0
  b8:	movt	r1, #0
  bc:	bl	0 <fopen>
  c0:	ldr	r1, [sp, #4]
  c4:	str	r0, [r1]
  c8:	movw	r0, #0
  cc:	movt	r0, #0
  d0:	movw	r1, #0
  d4:	movt	r1, #0
  d8:	bl	0 <fopen>
  dc:	ldr	r1, [sp, #4]
  e0:	str	r0, [r1, #4]
  e4:	ldr	r0, [sp, #4]
  e8:	ldr	r0, [r0, #4]
  ec:	movw	r1, #0
  f0:	cmp	r0, r1
  f4:	bne	114 <init_bat+0x114>
  f8:	movw	r0, #0
  fc:	movt	r0, #0
 100:	movw	r1, #0
 104:	movt	r1, #0
 108:	bl	0 <fopen>
 10c:	ldr	r1, [sp, #4]
 110:	str	r0, [r1, #4]
 114:	movw	r0, #0
 118:	movt	r0, #0
 11c:	movw	r1, #0
 120:	movt	r1, #0
 124:	bl	0 <fopen>
 128:	ldr	r1, [sp, #4]
 12c:	str	r0, [r1, #8]
 130:	ldr	r0, [sp, #4]
 134:	ldr	r0, [r0, #8]
 138:	movw	r1, #0
 13c:	cmp	r0, r1
 140:	bne	160 <init_bat+0x160>
 144:	movw	r0, #0
 148:	movt	r0, #0
 14c:	movw	r1, #0
 150:	movt	r1, #0
 154:	bl	0 <fopen>
 158:	ldr	r1, [sp, #4]
 15c:	str	r0, [r1, #8]
 160:	ldr	r0, [sp]
 164:	bl	0 <fclose>
 168:	mov	sp, fp
 16c:	pop	{fp, pc}

00000170 <close_bat>:
 170:	push	{fp, lr}
 174:	mov	fp, sp
 178:	sub	sp, sp, #8
 17c:	str	r0, [sp, #4]
 180:	ldr	r0, [sp, #4]
 184:	ldr	r0, [r0]
 188:	movw	r1, #0
 18c:	cmp	r0, r1
 190:	beq	1a0 <close_bat+0x30>
 194:	ldr	r0, [sp, #4]
 198:	ldr	r0, [r0]
 19c:	bl	0 <fclose>
 1a0:	ldr	r0, [sp, #4]
 1a4:	ldr	r0, [r0, #4]
 1a8:	movw	r1, #0
 1ac:	cmp	r0, r1
 1b0:	beq	1c0 <close_bat+0x50>
 1b4:	ldr	r0, [sp, #4]
 1b8:	ldr	r0, [r0, #4]
 1bc:	bl	0 <fclose>
 1c0:	ldr	r0, [sp, #4]
 1c4:	ldr	r0, [r0, #8]
 1c8:	movw	r1, #0
 1cc:	cmp	r0, r1
 1d0:	beq	1e0 <close_bat+0x70>
 1d4:	ldr	r0, [sp, #4]
 1d8:	ldr	r0, [r0, #8]
 1dc:	bl	0 <fclose>
 1e0:	mov	sp, fp
 1e4:	pop	{fp, pc}

000001e8 <bat>:
 1e8:	push	{r4, sl, fp, lr}
 1ec:	add	fp, sp, #8
 1f0:	sub	sp, sp, #80	; 0x50
 1f4:	str	r0, [fp, #-16]
 1f8:	str	r1, [fp, #-20]	; 0xffffffec
 1fc:	str	r2, [fp, #-24]	; 0xffffffe8
 200:	ldr	r0, [fp, #-16]
 204:	ldr	r0, [r0]
 208:	bl	0 <read_int>
 20c:	orr	r0, r0, r1
 210:	cmp	r0, #0
 214:	movwne	r0, #1
 218:	strb	r0, [fp, #-25]	; 0xffffffe7
 21c:	ldr	r0, [fp, #-16]
 220:	ldr	r0, [r0, #4]
 224:	bl	0 <read_int>
 228:	str	r1, [fp, #-36]	; 0xffffffdc
 22c:	str	r0, [fp, #-40]	; 0xffffffd8
 230:	ldr	r0, [fp, #-16]
 234:	ldr	r0, [r0, #8]
 238:	bl	0 <read_int>
 23c:	str	r1, [sp, #44]	; 0x2c
 240:	str	r0, [sp, #40]	; 0x28
 244:	ldr	r0, [fp, #-40]	; 0xffffffd8
 248:	ldr	r1, [fp, #-36]	; 0xffffffdc
 24c:	mov	r2, #100	; 0x64
 250:	umull	r0, r3, r0, r2
 254:	mla	r1, r1, r2, r3
 258:	ldr	r2, [fp, #-16]
 25c:	ldr	r3, [r2, #16]
 260:	ldr	r2, [r2, #20]
 264:	str	r2, [sp, #24]
 268:	mov	r2, r3
 26c:	ldr	r3, [sp, #24]
 270:	bl	0 <__aeabi_uldivmod>
 274:	str	r0, [sp, #36]	; 0x24
 278:	ldrb	r0, [fp, #-25]	; 0xffffffe7
 27c:	tst	r0, #1
 280:	beq	2a4 <bat+0xbc>
 284:	ldr	r0, [fp, #-20]	; 0xffffffec
 288:	ldr	r1, [fp, #-24]	; 0xffffffe8
 28c:	ldr	r3, [sp, #36]	; 0x24
 290:	movw	r2, #0
 294:	movt	r2, #0
 298:	bl	0 <snprintf>
 29c:	str	r0, [fp, #-12]
 2a0:	b	374 <bat+0x18c>
 2a4:	ldr	r0, [sp, #40]	; 0x28
 2a8:	ldr	r1, [sp, #44]	; 0x2c
 2ac:	orr	r0, r0, r1
 2b0:	cmp	r0, #0
 2b4:	beq	358 <bat+0x170>
 2b8:	b	2bc <bat+0xd4>
 2bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
 2c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
 2c4:	ldr	r2, [sp, #40]	; 0x28
 2c8:	ldr	r3, [sp, #44]	; 0x2c
 2cc:	bl	0 <__aeabi_uldivmod>
 2d0:	str	r0, [sp, #32]
 2d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
 2d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
 2dc:	mov	r2, #60	; 0x3c
 2e0:	umull	r0, r3, r0, r2
 2e4:	rsb	r1, r1, r1, lsl #4
 2e8:	add	r1, r3, r1, lsl #2
 2ec:	ldr	r3, [sp, #40]	; 0x28
 2f0:	ldr	ip, [sp, #44]	; 0x2c
 2f4:	str	r2, [sp, #20]
 2f8:	mov	r2, r3
 2fc:	mov	r3, ip
 300:	bl	0 <__aeabi_uldivmod>
 304:	mov	r3, #0
 308:	ldr	r2, [sp, #20]
 30c:	bl	0 <__aeabi_uldivmod>
 310:	str	r2, [sp, #28]
 314:	ldr	r2, [fp, #-20]	; 0xffffffec
 318:	ldr	r3, [fp, #-24]	; 0xffffffe8
 31c:	ldr	ip, [sp, #36]	; 0x24
 320:	ldr	lr, [sp, #32]
 324:	ldr	r4, [sp, #28]
 328:	str	r0, [sp, #16]
 32c:	mov	r0, r2
 330:	str	r1, [sp, #12]
 334:	mov	r1, r3
 338:	movw	r2, #0
 33c:	movt	r2, #0
 340:	mov	r3, ip
 344:	str	lr, [sp]
 348:	str	r4, [sp, #4]
 34c:	bl	0 <snprintf>
 350:	str	r0, [fp, #-12]
 354:	b	374 <bat+0x18c>
 358:	ldr	r0, [fp, #-20]	; 0xffffffec
 35c:	ldr	r1, [fp, #-24]	; 0xffffffe8
 360:	ldr	r3, [sp, #36]	; 0x24
 364:	movw	r2, #0
 368:	movt	r2, #0
 36c:	bl	0 <snprintf>
 370:	str	r0, [fp, #-12]
 374:	ldr	r0, [fp, #-12]
 378:	sub	sp, fp, #8
 37c:	pop	{r4, sl, fp, pc}
