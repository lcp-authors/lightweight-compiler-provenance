
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-definition.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <init_product_variable>:
       0:	mov	r2, #1
       4:	mov	r3, #0
       8:	strd	r4, [sp, #-20]!	; 0xffffffec
       c:	strd	r6, [sp, #8]
      10:	mov	r4, r0
      14:	mov	r5, r1
      18:	str	lr, [sp, #16]
      1c:	sub	sp, sp, #540	; 0x21c
      20:	mov	r1, r0
      24:	add	r0, sp, #16
      28:	strd	r2, [sp, #8]
      2c:	bl	0 <coda_cursor_set_product>
      30:	cmp	r0, #0
      34:	bne	cc <init_product_variable+0xcc>
      38:	ldr	r3, [r4, #24]
      3c:	ldr	r3, [r3, #36]	; 0x24
      40:	ldr	r3, [r3, r5, lsl #2]
      44:	ldr	r0, [r3, #4]
      48:	cmp	r0, #0
      4c:	beq	64 <init_product_variable+0x64>
      50:	add	r2, sp, #8
      54:	add	r1, sp, #16
      58:	bl	0 <coda_expression_eval_integer>
      5c:	cmp	r0, #0
      60:	bne	124 <init_product_variable+0x124>
      64:	ldr	r3, [sp, #8]
      68:	ldr	r2, [r4, #28]
      6c:	ldr	r7, [r4, #32]
      70:	lsl	r6, r3, #3
      74:	mov	r0, r6
      78:	str	r3, [r2, r5, lsl #2]
      7c:	bl	0 <malloc>
      80:	cmp	r0, #0
      84:	str	r0, [r7, r5, lsl #2]
      88:	beq	f8 <init_product_variable+0xf8>
      8c:	mov	r2, r6
      90:	mov	r1, #0
      94:	bl	0 <memset>
      98:	ldr	r3, [r4, #24]
      9c:	add	r1, sp, #16
      a0:	ldr	r3, [r3, #36]	; 0x24
      a4:	ldr	r3, [r3, r5, lsl #2]
      a8:	ldr	r0, [r3, #8]
      ac:	bl	0 <coda_expression_eval_void>
      b0:	cmp	r0, #0
      b4:	bne	d4 <init_product_variable+0xd4>
      b8:	add	sp, sp, #540	; 0x21c
      bc:	ldrd	r4, [sp]
      c0:	ldrd	r6, [sp, #8]
      c4:	add	sp, sp, #16
      c8:	pop	{pc}		; (ldr pc, [sp], #4)
      cc:	mvn	r0, #0
      d0:	b	b8 <init_product_variable+0xb8>
      d4:	ldr	r3, [r4, #24]
      d8:	movw	r0, #0
      dc:	movt	r0, #0
      e0:	ldr	r3, [r3, #36]	; 0x24
      e4:	ldr	r3, [r3, r5, lsl #2]
      e8:	ldr	r1, [r3]
      ec:	bl	0 <coda_add_error_message>
      f0:	mvn	r0, #0
      f4:	b	b8 <init_product_variable+0xb8>
      f8:	mov	r0, #162	; 0xa2
      fc:	mov	r2, r6
     100:	movw	r3, #0
     104:	movt	r3, #0
     108:	movw	r1, #0
     10c:	movt	r1, #0
     110:	str	r0, [sp]
     114:	mvn	r0, #0
     118:	bl	0 <coda_set_error>
     11c:	mvn	r0, #0
     120:	b	b8 <init_product_variable+0xb8>
     124:	movw	r0, #0
     128:	movt	r0, #0
     12c:	ldr	r3, [r4, #24]
     130:	b	e0 <init_product_variable+0xe0>

00000134 <data_dictionary_rebuild_product_class_hash_data>:
     134:	strd	r4, [sp, #-16]!
     138:	mrc	15, 0, r4, cr13, cr0, {3}
     13c:	ldr	r5, [pc, #208]	; 214 <data_dictionary_rebuild_product_class_hash_data+0xe0>
     140:	ldr	r3, [r5, r4]
     144:	ldr	r0, [r3, #8]
     148:	str	r6, [sp, #8]
     14c:	str	lr, [sp, #12]
     150:	bl	0 <coda_hashtable_delete>
     154:	mov	r0, #1
     158:	ldr	r6, [r5, r4]
     15c:	bl	0 <coda_hashtable_new>
     160:	ldr	r3, [r5, r4]
     164:	str	r0, [r6, #8]
     168:	ldr	r0, [r3, #8]
     16c:	cmp	r0, #0
     170:	beq	1f0 <data_dictionary_rebuild_product_class_hash_data+0xbc>
     174:	ldr	r2, [r3]
     178:	cmp	r2, #0
     17c:	addgt	r5, r5, r4
     180:	movgt	r4, #0
     184:	bgt	190 <data_dictionary_rebuild_product_class_hash_data+0x5c>
     188:	b	1bc <data_dictionary_rebuild_product_class_hash_data+0x88>
     18c:	ldr	r0, [r3, #8]
     190:	ldr	r3, [r3, #4]
     194:	ldr	r3, [r3, r4, lsl #2]
     198:	ldr	r1, [r3]
     19c:	bl	0 <coda_hashtable_add_name>
     1a0:	cmp	r0, #0
     1a4:	bne	1d0 <data_dictionary_rebuild_product_class_hash_data+0x9c>
     1a8:	ldr	r3, [r5]
     1ac:	add	r4, r4, #1
     1b0:	ldr	r2, [r3]
     1b4:	cmp	r2, r4
     1b8:	bgt	18c <data_dictionary_rebuild_product_class_hash_data+0x58>
     1bc:	mov	r0, #0
     1c0:	ldrd	r4, [sp]
     1c4:	ldr	r6, [sp, #8]
     1c8:	add	sp, sp, #12
     1cc:	pop	{pc}		; (ldr pc, [sp], #4)
     1d0:	movw	r3, #0
     1d4:	movt	r3, #0
     1d8:	movw	r1, #0
     1dc:	movt	r1, #0
     1e0:	movw	r0, #0
     1e4:	movt	r0, #0
     1e8:	mov	r2, #960	; 0x3c0
     1ec:	bl	0 <__assert_fail>
     1f0:	mvn	r0, #0
     1f4:	movw	r2, #0
     1f8:	movt	r2, #0
     1fc:	movw	r1, #0
     200:	movt	r1, #0
     204:	mov	r3, #952	; 0x3b8
     208:	bl	0 <coda_set_error>
     20c:	mvn	r0, #0
     210:	b	1c0 <data_dictionary_rebuild_product_class_hash_data+0x8c>
     214:	.word	0x00000000

00000218 <coda_product_variable_delete>:
     218:	str	r4, [sp, #-8]!
     21c:	subs	r4, r0, #0
     220:	str	lr, [sp, #4]
     224:	beq	26c <coda_product_variable_delete+0x54>
     228:	ldr	r0, [r4]
     22c:	cmp	r0, #0
     230:	beq	238 <coda_product_variable_delete+0x20>
     234:	bl	0 <free>
     238:	ldr	r0, [r4, #4]
     23c:	cmp	r0, #0
     240:	beq	248 <coda_product_variable_delete+0x30>
     244:	bl	0 <coda_expression_delete>
     248:	ldr	r0, [r4, #8]
     24c:	cmp	r0, #0
     250:	beq	258 <coda_product_variable_delete+0x40>
     254:	bl	0 <coda_expression_delete>
     258:	mov	r0, r4
     25c:	ldr	r4, [sp]
     260:	ldr	lr, [sp, #4]
     264:	add	sp, sp, #8
     268:	b	0 <free>
     26c:	movw	r1, #0
     270:	movt	r1, #0
     274:	ldr	r3, [pc, #12]	; 288 <coda_product_variable_delete+0x70>
     278:	movw	r0, #0
     27c:	movt	r0, #0
     280:	mov	r2, #49	; 0x31
     284:	bl	0 <__assert_fail>
     288:	.word	0x00000030

0000028c <coda_product_variable_new>:
     28c:	strd	r4, [sp, #-12]!
     290:	mov	r5, r0
     294:	str	lr, [sp, #8]
     298:	sub	sp, sp, #12
     29c:	bl	0 <coda_is_identifier>
     2a0:	subs	r4, r0, #0
     2a4:	beq	2f0 <coda_product_variable_new+0x64>
     2a8:	mov	r0, #12
     2ac:	bl	0 <malloc>
     2b0:	subs	r4, r0, #0
     2b4:	beq	30c <coda_product_variable_new+0x80>
     2b8:	mov	r3, #0
     2bc:	mov	r0, r5
     2c0:	str	r3, [r4, #4]
     2c4:	str	r3, [r4, #8]
     2c8:	bl	0 <strdup>
     2cc:	cmp	r0, #0
     2d0:	mov	r5, r0
     2d4:	str	r0, [r4]
     2d8:	beq	334 <coda_product_variable_new+0xa8>
     2dc:	mov	r0, r4
     2e0:	add	sp, sp, #12
     2e4:	ldrd	r4, [sp]
     2e8:	add	sp, sp, #8
     2ec:	pop	{pc}		; (ldr pc, [sp], #4)
     2f0:	mov	r2, r5
     2f4:	movw	r1, #0
     2f8:	movt	r1, #0
     2fc:	movw	r0, #65136	; 0xfe70
     300:	movt	r0, #65535	; 0xffff
     304:	bl	0 <coda_set_error>
     308:	b	2dc <coda_product_variable_new+0x50>
     30c:	mov	r0, #82	; 0x52
     310:	movw	r3, #0
     314:	movt	r3, #0
     318:	movw	r1, #0
     31c:	movt	r1, #0
     320:	mov	r2, #12
     324:	str	r0, [sp]
     328:	mvn	r0, #0
     32c:	bl	0 <coda_set_error>
     330:	b	2dc <coda_product_variable_new+0x50>
     334:	mov	r3, #93	; 0x5d
     338:	mvn	r0, #0
     33c:	movw	r2, #0
     340:	movt	r2, #0
     344:	movw	r1, #0
     348:	movt	r1, #0
     34c:	bl	0 <coda_set_error>
     350:	mov	r0, r4
     354:	mov	r4, r5
     358:	bl	218 <coda_product_variable_delete>
     35c:	b	2dc <coda_product_variable_new+0x50>

00000360 <coda_product_variable_set_size_expression>:
     360:	cmp	r1, #0
     364:	str	r4, [sp, #-8]!
     368:	str	lr, [sp, #4]
     36c:	beq	3ac <coda_product_variable_set_size_expression+0x4c>
     370:	ldr	r3, [r0, #4]
     374:	cmp	r3, #0
     378:	streq	r1, [r0, #4]
     37c:	bne	390 <coda_product_variable_set_size_expression+0x30>
     380:	ldr	r4, [sp]
     384:	add	sp, sp, #4
     388:	mov	r0, r3
     38c:	pop	{pc}		; (ldr pc, [sp], #4)
     390:	movw	r1, #0
     394:	movt	r1, #0
     398:	movw	r0, #65136	; 0xfe70
     39c:	movt	r0, #65535	; 0xffff
     3a0:	bl	0 <coda_set_error>
     3a4:	mvn	r3, #0
     3a8:	b	380 <coda_product_variable_set_size_expression+0x20>
     3ac:	movw	r1, #0
     3b0:	movt	r1, #0
     3b4:	ldr	r3, [pc, #12]	; 3c8 <coda_product_variable_set_size_expression+0x68>
     3b8:	movw	r0, #0
     3bc:	movt	r0, #0
     3c0:	mov	r2, #103	; 0x67
     3c4:	bl	0 <__assert_fail>
     3c8:	.word	0x00000050

000003cc <coda_product_variable_set_init_expression>:
     3cc:	cmp	r1, #0
     3d0:	str	r4, [sp, #-8]!
     3d4:	str	lr, [sp, #4]
     3d8:	beq	418 <coda_product_variable_set_init_expression+0x4c>
     3dc:	ldr	r3, [r0, #8]
     3e0:	cmp	r3, #0
     3e4:	streq	r1, [r0, #8]
     3e8:	bne	3fc <coda_product_variable_set_init_expression+0x30>
     3ec:	ldr	r4, [sp]
     3f0:	add	sp, sp, #4
     3f4:	mov	r0, r3
     3f8:	pop	{pc}		; (ldr pc, [sp], #4)
     3fc:	movw	r1, #0
     400:	movt	r1, #0
     404:	movw	r0, #65136	; 0xfe70
     408:	movt	r0, #65535	; 0xffff
     40c:	bl	0 <coda_set_error>
     410:	mvn	r3, #0
     414:	b	3ec <coda_product_variable_set_init_expression+0x20>
     418:	movw	r1, #0
     41c:	movt	r1, #0
     420:	ldr	r3, [pc, #12]	; 434 <coda_product_variable_set_init_expression+0x68>
     424:	movw	r0, #0
     428:	movt	r0, #0
     42c:	mov	r2, #115	; 0x73
     430:	bl	0 <__assert_fail>
     434:	.word	0x0000007c

00000438 <coda_product_variable_validate>:
     438:	ldr	r3, [r0, #8]
     43c:	cmp	r3, #0
     440:	beq	44c <coda_product_variable_validate+0x14>
     444:	mov	r0, #0
     448:	bx	lr
     44c:	movw	r1, #0
     450:	movt	r1, #0
     454:	str	r4, [sp, #-8]!
     458:	movw	r0, #65136	; 0xfe70
     45c:	movt	r0, #65535	; 0xffff
     460:	str	lr, [sp, #4]
     464:	bl	0 <coda_set_error>
     468:	ldr	r4, [sp]
     46c:	add	sp, sp, #4
     470:	mvn	r0, #0
     474:	pop	{pc}		; (ldr pc, [sp], #4)

00000478 <coda_product_variable_get_size>:
     478:	adds	r3, r2, #0
     47c:	strd	r4, [sp, #-20]!	; 0xffffffec
     480:	movne	r3, #1
     484:	cmp	r1, #0
     488:	strd	r6, [sp, #8]
     48c:	moveq	r3, #0
     490:	cmp	r0, #0
     494:	str	lr, [sp, #16]
     498:	moveq	r3, #0
     49c:	sub	sp, sp, #12
     4a0:	cmp	r3, #0
     4a4:	beq	55c <coda_product_variable_get_size+0xe4>
     4a8:	ldr	r3, [r0, #32]
     4ac:	mov	r4, r0
     4b0:	cmp	r3, #0
     4b4:	beq	578 <coda_product_variable_get_size+0x100>
     4b8:	ldr	r3, [r0, #24]
     4bc:	mov	r6, r2
     4c0:	mov	r7, r1
     4c4:	ldr	r0, [r3, #40]	; 0x28
     4c8:	bl	0 <coda_hashtable_get_index_from_name>
     4cc:	cmn	r0, #1
     4d0:	mov	r5, r0
     4d4:	beq	530 <coda_product_variable_get_size+0xb8>
     4d8:	ldr	r3, [r4, #32]
     4dc:	lsl	r7, r0, #2
     4e0:	ldr	r3, [r3, r0, lsl #2]
     4e4:	cmp	r3, #0
     4e8:	beq	514 <coda_product_variable_get_size+0x9c>
     4ec:	ldr	r3, [r4, #28]
     4f0:	mov	r5, #0
     4f4:	ldr	r3, [r3, r7]
     4f8:	str	r3, [r6]
     4fc:	mov	r0, r5
     500:	add	sp, sp, #12
     504:	ldrd	r4, [sp]
     508:	ldrd	r6, [sp, #8]
     50c:	add	sp, sp, #16
     510:	pop	{pc}		; (ldr pc, [sp], #4)
     514:	mov	r1, r0
     518:	mov	r0, r4
     51c:	bl	0 <init_product_variable>
     520:	cmp	r0, #0
     524:	beq	4ec <coda_product_variable_get_size+0x74>
     528:	mvn	r5, #0
     52c:	b	4fc <coda_product_variable_get_size+0x84>
     530:	ldr	r3, [r4, #24]
     534:	movw	r1, #0
     538:	movt	r1, #0
     53c:	movw	r0, #65136	; 0xfe70
     540:	movt	r0, #65535	; 0xffff
     544:	ldr	r2, [r3, #44]	; 0x2c
     548:	ldr	r3, [r3, #4]
     54c:	ldr	r2, [r2]
     550:	str	r7, [sp]
     554:	bl	0 <coda_set_error>
     558:	b	4fc <coda_product_variable_get_size+0x84>
     55c:	movw	r1, #0
     560:	movt	r1, #0
     564:	ldr	r3, [pc, #40]	; 594 <coda_product_variable_get_size+0x11c>
     568:	movw	r0, #0
     56c:	movt	r0, #0
     570:	mov	r2, #180	; 0xb4
     574:	bl	0 <__assert_fail>
     578:	movw	r1, #0
     57c:	movt	r1, #0
     580:	ldr	r3, [pc, #12]	; 594 <coda_product_variable_get_size+0x11c>
     584:	movw	r0, #0
     588:	movt	r0, #0
     58c:	mov	r2, #181	; 0xb5
     590:	bl	0 <__assert_fail>
     594:	.word	0x000000a8

00000598 <coda_product_variable_get_pointer>:
     598:	adds	ip, r3, #0
     59c:	strd	r4, [sp, #-28]!	; 0xffffffe4
     5a0:	movne	ip, #1
     5a4:	cmp	r1, #0
     5a8:	strd	r6, [sp, #8]
     5ac:	moveq	ip, #0
     5b0:	cmp	r0, #0
     5b4:	strd	r8, [sp, #16]
     5b8:	moveq	ip, #0
     5bc:	str	lr, [sp, #24]
     5c0:	sub	sp, sp, #12
     5c4:	cmp	ip, #0
     5c8:	beq	6bc <coda_product_variable_get_pointer+0x124>
     5cc:	mov	r8, r3
     5d0:	ldr	r3, [r0, #24]
     5d4:	mov	r5, r0
     5d8:	mov	r6, r2
     5dc:	mov	r9, r1
     5e0:	ldr	r0, [r3, #40]	; 0x28
     5e4:	bl	0 <coda_hashtable_get_index_from_name>
     5e8:	cmn	r0, #1
     5ec:	mov	r4, r0
     5f0:	beq	690 <coda_product_variable_get_pointer+0xf8>
     5f4:	ldr	r3, [r5, #32]
     5f8:	lsl	r7, r0, #2
     5fc:	ldr	r3, [r3, r0, lsl #2]
     600:	cmp	r3, #0
     604:	beq	650 <coda_product_variable_get_pointer+0xb8>
     608:	cmp	r6, #0
     60c:	blt	66c <coda_product_variable_get_pointer+0xd4>
     610:	ldr	r3, [r5, #28]
     614:	ldr	r3, [r3, r7]
     618:	cmp	r3, r6
     61c:	ble	66c <coda_product_variable_get_pointer+0xd4>
     620:	ldr	r3, [r5, #32]
     624:	mov	r4, #0
     628:	ldr	r2, [r3, r7]
     62c:	add	r2, r2, r6, lsl #3
     630:	str	r2, [r8]
     634:	mov	r0, r4
     638:	add	sp, sp, #12
     63c:	ldrd	r4, [sp]
     640:	ldrd	r6, [sp, #8]
     644:	ldrd	r8, [sp, #16]
     648:	add	sp, sp, #24
     64c:	pop	{pc}		; (ldr pc, [sp], #4)
     650:	mov	r1, r0
     654:	mov	r0, r5
     658:	bl	0 <init_product_variable>
     65c:	cmp	r0, #0
     660:	beq	608 <coda_product_variable_get_pointer+0x70>
     664:	mvn	r4, #0
     668:	b	634 <coda_product_variable_get_pointer+0x9c>
     66c:	mov	r3, r9
     670:	mov	r2, r6
     674:	movw	r1, #0
     678:	movt	r1, #0
     67c:	movw	r0, #65136	; 0xfe70
     680:	movt	r0, #65535	; 0xffff
     684:	bl	0 <coda_set_error>
     688:	mvn	r4, #0
     68c:	b	634 <coda_product_variable_get_pointer+0x9c>
     690:	ldr	r3, [r5, #24]
     694:	movw	r1, #0
     698:	movt	r1, #0
     69c:	movw	r0, #65136	; 0xfe70
     6a0:	movt	r0, #65535	; 0xffff
     6a4:	ldr	r2, [r3, #44]	; 0x2c
     6a8:	ldr	r3, [r3, #4]
     6ac:	ldr	r2, [r2]
     6b0:	str	r9, [sp]
     6b4:	bl	0 <coda_set_error>
     6b8:	b	634 <coda_product_variable_get_pointer+0x9c>
     6bc:	movw	r1, #0
     6c0:	movt	r1, #0
     6c4:	ldr	r3, [pc, #12]	; 6d8 <coda_product_variable_get_pointer+0x140>
     6c8:	movw	r0, #0
     6cc:	movt	r0, #0
     6d0:	mov	r2, #208	; 0xd0
     6d4:	bl	0 <__assert_fail>
     6d8:	.word	0x000000c8

000006dc <coda_product_definition_delete>:
     6dc:	strd	r4, [sp, #-16]!
     6e0:	mov	r4, r0
     6e4:	ldr	r0, [r0, #20]
     6e8:	str	r6, [sp, #8]
     6ec:	str	lr, [sp, #12]
     6f0:	cmp	r0, #0
     6f4:	beq	728 <coda_product_definition_delete+0x4c>
     6f8:	ldr	r3, [r4, #16]
     6fc:	cmp	r3, #0
     700:	ble	724 <coda_product_definition_delete+0x48>
     704:	mov	r5, #0
     708:	ldr	r0, [r0, r5, lsl #2]
     70c:	add	r5, r5, #1
     710:	bl	0 <coda_detection_rule_delete>
     714:	ldr	r3, [r4, #16]
     718:	ldr	r0, [r4, #20]
     71c:	cmp	r3, r5
     720:	bgt	708 <coda_product_definition_delete+0x2c>
     724:	bl	0 <free>
     728:	ldr	r0, [r4, #8]
     72c:	cmp	r0, #0
     730:	beq	738 <coda_product_definition_delete+0x5c>
     734:	bl	0 <free>
     738:	ldr	r0, [r4, #12]
     73c:	cmp	r0, #0
     740:	beq	748 <coda_product_definition_delete+0x6c>
     744:	bl	0 <free>
     748:	ldr	r0, [r4, #28]
     74c:	cmp	r0, #0
     750:	beq	758 <coda_product_definition_delete+0x7c>
     754:	bl	0 <coda_type_release>
     758:	ldr	r0, [r4, #40]	; 0x28
     75c:	cmp	r0, #0
     760:	beq	768 <coda_product_definition_delete+0x8c>
     764:	bl	0 <coda_hashtable_delete>
     768:	ldr	r0, [r4, #36]	; 0x24
     76c:	cmp	r0, #0
     770:	beq	7a4 <coda_product_definition_delete+0xc8>
     774:	ldr	r3, [r4, #32]
     778:	cmp	r3, #0
     77c:	ble	7a0 <coda_product_definition_delete+0xc4>
     780:	mov	r5, #0
     784:	ldr	r0, [r0, r5, lsl #2]
     788:	add	r5, r5, #1
     78c:	bl	218 <coda_product_variable_delete>
     790:	ldr	r3, [r4, #32]
     794:	ldr	r0, [r4, #36]	; 0x24
     798:	cmp	r3, r5
     79c:	bgt	784 <coda_product_definition_delete+0xa8>
     7a0:	bl	0 <free>
     7a4:	mov	r0, r4
     7a8:	ldrd	r4, [sp]
     7ac:	ldr	r6, [sp, #8]
     7b0:	ldr	lr, [sp, #12]
     7b4:	add	sp, sp, #16
     7b8:	b	0 <free>

000007bc <coda_product_definition_new>:
     7bc:	strd	r4, [sp, #-20]!	; 0xffffffec
     7c0:	mov	r5, r0
     7c4:	strd	r6, [sp, #8]
     7c8:	mov	r7, r1
     7cc:	mov	r6, r2
     7d0:	str	lr, [sp, #16]
     7d4:	sub	sp, sp, #12
     7d8:	bl	0 <coda_is_identifier>
     7dc:	subs	r4, r0, #0
     7e0:	beq	86c <coda_product_definition_new+0xb0>
     7e4:	mov	r0, #48	; 0x30
     7e8:	bl	0 <malloc>
     7ec:	subs	r4, r0, #0
     7f0:	beq	888 <coda_product_definition_new+0xcc>
     7f4:	mov	r3, #0
     7f8:	mov	r0, r5
     7fc:	str	r7, [r4]
     800:	str	r6, [r4, #4]
     804:	str	r3, [r4, #12]
     808:	str	r3, [r4, #16]
     80c:	str	r3, [r4, #20]
     810:	str	r3, [r4, #24]
     814:	str	r3, [r4, #28]
     818:	str	r3, [r4, #32]
     81c:	str	r3, [r4, #36]	; 0x24
     820:	str	r3, [r4, #40]	; 0x28
     824:	str	r3, [r4, #44]	; 0x2c
     828:	bl	0 <strdup>
     82c:	cmp	r0, #0
     830:	mov	r5, r0
     834:	str	r0, [r4, #8]
     838:	beq	8b0 <coda_product_definition_new+0xf4>
     83c:	mov	r0, #1
     840:	bl	0 <coda_hashtable_new>
     844:	cmp	r0, #0
     848:	mov	r5, r0
     84c:	str	r0, [r4, #40]	; 0x28
     850:	beq	8dc <coda_product_definition_new+0x120>
     854:	mov	r0, r4
     858:	add	sp, sp, #12
     85c:	ldrd	r4, [sp]
     860:	ldrd	r6, [sp, #8]
     864:	add	sp, sp, #16
     868:	pop	{pc}		; (ldr pc, [sp], #4)
     86c:	mov	r2, r5
     870:	movw	r1, #0
     874:	movt	r1, #0
     878:	movw	r0, #65136	; 0xfe70
     87c:	movt	r0, #65535	; 0xffff
     880:	bl	0 <coda_set_error>
     884:	b	854 <coda_product_definition_new+0x98>
     888:	movw	r0, #291	; 0x123
     88c:	movw	r3, #0
     890:	movt	r3, #0
     894:	movw	r1, #0
     898:	movt	r1, #0
     89c:	mov	r2, #48	; 0x30
     8a0:	str	r0, [sp]
     8a4:	mvn	r0, #0
     8a8:	bl	0 <coda_set_error>
     8ac:	b	854 <coda_product_definition_new+0x98>
     8b0:	movw	r2, #0
     8b4:	movt	r2, #0
     8b8:	movw	r1, #0
     8bc:	movt	r1, #0
     8c0:	movw	r3, #311	; 0x137
     8c4:	mvn	r0, #0
     8c8:	bl	0 <coda_set_error>
     8cc:	mov	r0, r4
     8d0:	mov	r4, r5
     8d4:	bl	6dc <coda_product_definition_delete>
     8d8:	b	854 <coda_product_definition_new+0x98>
     8dc:	movw	r2, #0
     8e0:	movt	r2, #0
     8e4:	movw	r1, #0
     8e8:	movt	r1, #0
     8ec:	mov	r3, #320	; 0x140
     8f0:	b	8c4 <coda_product_definition_new+0x108>

000008f4 <coda_product_definition_set_description>:
     8f4:	ldr	r3, [r0, #12]
     8f8:	str	r4, [sp, #-8]!
     8fc:	str	lr, [sp, #4]
     900:	cmp	r3, #0
     904:	bne	938 <coda_product_definition_set_description+0x44>
     908:	cmp	r1, #0
     90c:	mov	r4, r0
     910:	beq	924 <coda_product_definition_set_description+0x30>
     914:	mov	r0, r1
     918:	bl	0 <strdup>
     91c:	subs	r1, r0, #0
     920:	beq	954 <coda_product_definition_set_description+0x60>
     924:	mov	r0, #0
     928:	str	r1, [r4, #12]
     92c:	ldr	r4, [sp]
     930:	add	sp, sp, #4
     934:	pop	{pc}		; (ldr pc, [sp], #4)
     938:	movw	r1, #0
     93c:	movt	r1, #0
     940:	movw	r0, #65136	; 0xfe70
     944:	movt	r0, #65535	; 0xffff
     948:	bl	0 <coda_set_error>
     94c:	mvn	r0, #0
     950:	b	92c <coda_product_definition_set_description+0x38>
     954:	mvn	r0, #0
     958:	movw	r2, #0
     95c:	movt	r2, #0
     960:	movw	r1, #0
     964:	movt	r1, #0
     968:	movw	r3, #343	; 0x157
     96c:	bl	0 <coda_set_error>
     970:	mvn	r0, #0
     974:	b	92c <coda_product_definition_set_description+0x38>

00000978 <coda_product_definition_set_root_type>:
     978:	cmp	r1, #0
     97c:	str	r4, [sp, #-8]!
     980:	str	lr, [sp, #4]
     984:	beq	9d0 <coda_product_definition_set_root_type+0x58>
     988:	ldr	r3, [r0, #28]
     98c:	cmp	r3, #0
     990:	bne	9b4 <coda_product_definition_set_root_type+0x3c>
     994:	ldr	r2, [r1, #4]
     998:	str	r1, [r0, #28]
     99c:	add	r2, r2, #1
     9a0:	str	r2, [r1, #4]
     9a4:	ldr	r4, [sp]
     9a8:	add	sp, sp, #4
     9ac:	mov	r0, r3
     9b0:	pop	{pc}		; (ldr pc, [sp], #4)
     9b4:	movw	r1, #0
     9b8:	movt	r1, #0
     9bc:	movw	r0, #65136	; 0xfe70
     9c0:	movt	r0, #65535	; 0xffff
     9c4:	bl	0 <coda_set_error>
     9c8:	mvn	r3, #0
     9cc:	b	9a4 <coda_product_definition_set_root_type+0x2c>
     9d0:	movw	r1, #0
     9d4:	movt	r1, #0
     9d8:	ldr	r3, [pc, #12]	; 9ec <coda_product_definition_set_root_type+0x74>
     9dc:	movw	r0, #0
     9e0:	movt	r0, #0
     9e4:	movw	r2, #354	; 0x162
     9e8:	bl	0 <__assert_fail>
     9ec:	.word	0x000000ec

000009f0 <coda_product_definition_add_detection_rule>:
     9f0:	ldr	r3, [r1]
     9f4:	strd	r4, [sp, #-16]!
     9f8:	mov	r4, r0
     9fc:	str	r6, [sp, #8]
     a00:	str	lr, [sp, #12]
     a04:	sub	sp, sp, #8
     a08:	cmp	r3, #0
     a0c:	beq	a98 <coda_product_definition_add_detection_rule+0xa8>
     a10:	ldr	r2, [pc, #212]	; aec <coda_product_definition_add_detection_rule+0xfc>
     a14:	mrc	15, 0, r3, cr13, cr0, {3}
     a18:	mov	r5, r1
     a1c:	ldr	r0, [r0]
     a20:	str	r4, [r1, #8]
     a24:	ldr	r3, [r3, r2]
     a28:	cmp	r0, #0
     a2c:	addne	r0, r0, #3
     a30:	moveq	r0, #16
     a34:	lslne	r0, r0, #2
     a38:	add	r0, r3, r0
     a3c:	bl	0 <coda_detection_tree_add_rule>
     a40:	subs	r6, r0, #0
     a44:	bne	a90 <coda_product_definition_add_detection_rule+0xa0>
     a48:	ldr	r1, [r4, #16]
     a4c:	ldr	r0, [r4, #20]
     a50:	add	r1, r1, #1
     a54:	lsl	r1, r1, #2
     a58:	bl	0 <realloc>
     a5c:	cmp	r0, #0
     a60:	beq	ab8 <coda_product_definition_add_detection_rule+0xc8>
     a64:	ldr	r3, [r4, #16]
     a68:	str	r0, [r4, #20]
     a6c:	add	r2, r3, #1
     a70:	str	r2, [r4, #16]
     a74:	str	r5, [r0, r3, lsl #2]
     a78:	mov	r0, r6
     a7c:	add	sp, sp, #8
     a80:	ldrd	r4, [sp]
     a84:	ldr	r6, [sp, #8]
     a88:	add	sp, sp, #12
     a8c:	pop	{pc}		; (ldr pc, [sp], #4)
     a90:	mvn	r6, #0
     a94:	b	a78 <coda_product_definition_add_detection_rule+0x88>
     a98:	movw	r1, #0
     a9c:	movt	r1, #0
     aa0:	ldr	r2, [r4, #8]
     aa4:	movw	r0, #65136	; 0xfe70
     aa8:	movt	r0, #65535	; 0xffff
     aac:	mvn	r6, #0
     ab0:	bl	0 <coda_set_error>
     ab4:	b	a78 <coda_product_definition_add_detection_rule+0x88>
     ab8:	ldr	r2, [r4, #16]
     abc:	movw	ip, #390	; 0x186
     ac0:	mvn	r0, #0
     ac4:	movw	r3, #0
     ac8:	movt	r3, #0
     acc:	movw	r1, #0
     ad0:	movt	r1, #0
     ad4:	str	ip, [sp]
     ad8:	mov	r6, r0
     adc:	add	r2, r2, #1
     ae0:	lsl	r2, r2, #2
     ae4:	bl	0 <coda_set_error>
     ae8:	b	a78 <coda_product_definition_add_detection_rule+0x88>
     aec:	.word	0x00000000

00000af0 <coda_product_definition_add_product_variable>:
     af0:	strd	r4, [sp, #-16]!
     af4:	mov	r4, r0
     af8:	mov	r5, r1
     afc:	ldr	r1, [r1]
     b00:	ldr	r0, [r0, #40]	; 0x28
     b04:	str	r6, [sp, #8]
     b08:	str	lr, [sp, #12]
     b0c:	sub	sp, sp, #8
     b10:	bl	0 <coda_hashtable_add_name>
     b14:	subs	r6, r0, #0
     b18:	bne	b70 <coda_product_definition_add_product_variable+0x80>
     b1c:	ldr	r1, [r4, #32]
     b20:	ldr	r0, [r4, #36]	; 0x24
     b24:	tst	r1, #15
     b28:	beq	b50 <coda_product_definition_add_product_variable+0x60>
     b2c:	add	r3, r1, #1
     b30:	str	r3, [r4, #32]
     b34:	str	r5, [r0, r1, lsl #2]
     b38:	mov	r0, r6
     b3c:	add	sp, sp, #8
     b40:	ldrd	r4, [sp]
     b44:	ldr	r6, [sp, #8]
     b48:	add	sp, sp, #12
     b4c:	pop	{pc}		; (ldr pc, [sp], #4)
     b50:	add	r1, r1, #16
     b54:	lsl	r1, r1, #2
     b58:	bl	0 <realloc>
     b5c:	cmp	r0, #0
     b60:	beq	b94 <coda_product_definition_add_product_variable+0xa4>
     b64:	str	r0, [r4, #36]	; 0x24
     b68:	ldr	r1, [r4, #32]
     b6c:	b	b2c <coda_product_definition_add_product_variable+0x3c>
     b70:	movw	r1, #0
     b74:	movt	r1, #0
     b78:	ldr	r2, [r5]
     b7c:	movw	r0, #65136	; 0xfe70
     b80:	movt	r0, #65535	; 0xffff
     b84:	ldr	r3, [r4, #8]
     b88:	mvn	r6, #0
     b8c:	bl	0 <coda_set_error>
     b90:	b	b38 <coda_product_definition_add_product_variable+0x48>
     b94:	ldr	r2, [r4, #32]
     b98:	mov	ip, #420	; 0x1a4
     b9c:	mvn	r0, #0
     ba0:	movw	r3, #0
     ba4:	movt	r3, #0
     ba8:	movw	r1, #0
     bac:	movt	r1, #0
     bb0:	str	ip, [sp]
     bb4:	mov	r6, r0
     bb8:	add	r2, r2, #16
     bbc:	lsl	r2, r2, #2
     bc0:	bl	0 <coda_set_error>
     bc4:	b	b38 <coda_product_definition_add_product_variable+0x48>

00000bc8 <coda_product_definition_validate>:
     bc8:	ldr	r2, [r0]
     bcc:	mov	r3, r0
     bd0:	cmp	r2, #1
     bd4:	bls	be8 <coda_product_definition_validate+0x20>
     bd8:	mov	r2, #1
     bdc:	mov	r0, #0
     be0:	str	r2, [r3, #24]
     be4:	bx	lr
     be8:	ldr	r2, [r0, #28]
     bec:	cmp	r2, #0
     bf0:	bne	bd8 <coda_product_definition_validate+0x10>
     bf4:	movw	r1, #0
     bf8:	movt	r1, #0
     bfc:	str	r4, [sp, #-8]!
     c00:	movw	r0, #65136	; 0xfe70
     c04:	movt	r0, #65535	; 0xffff
     c08:	str	lr, [sp, #4]
     c0c:	bl	0 <coda_set_error>
     c10:	ldr	r4, [sp]
     c14:	add	sp, sp, #4
     c18:	mvn	r0, #0
     c1c:	pop	{pc}		; (ldr pc, [sp], #4)

00000c20 <coda_product_type_delete>:
     c20:	strd	r4, [sp, #-16]!
     c24:	mov	r5, r0
     c28:	ldr	r0, [r0]
     c2c:	str	r6, [sp, #8]
     c30:	str	lr, [sp, #12]
     c34:	cmp	r0, #0
     c38:	beq	c40 <coda_product_type_delete+0x20>
     c3c:	bl	0 <free>
     c40:	ldr	r0, [r5, #4]
     c44:	cmp	r0, #0
     c48:	beq	c50 <coda_product_type_delete+0x30>
     c4c:	bl	0 <free>
     c50:	ldr	r0, [r5, #16]
     c54:	cmp	r0, #0
     c58:	beq	c60 <coda_product_type_delete+0x40>
     c5c:	bl	0 <coda_hashtable_delete>
     c60:	ldr	r0, [r5, #12]
     c64:	cmp	r0, #0
     c68:	beq	c9c <coda_product_type_delete+0x7c>
     c6c:	ldr	r3, [r5, #8]
     c70:	cmp	r3, #0
     c74:	ble	c98 <coda_product_type_delete+0x78>
     c78:	mov	r4, #0
     c7c:	ldr	r0, [r0, r4, lsl #2]
     c80:	add	r4, r4, #1
     c84:	bl	6dc <coda_product_definition_delete>
     c88:	ldr	r3, [r5, #8]
     c8c:	ldr	r0, [r5, #12]
     c90:	cmp	r3, r4
     c94:	bgt	c7c <coda_product_type_delete+0x5c>
     c98:	bl	0 <free>
     c9c:	mov	r0, r5
     ca0:	ldrd	r4, [sp]
     ca4:	ldr	r6, [sp, #8]
     ca8:	ldr	lr, [sp, #12]
     cac:	add	sp, sp, #16
     cb0:	b	0 <free>

00000cb4 <coda_product_type_new>:
     cb4:	strd	r4, [sp, #-12]!
     cb8:	mov	r5, r0
     cbc:	mov	r0, #24
     cc0:	str	lr, [sp, #8]
     cc4:	sub	sp, sp, #12
     cc8:	bl	0 <malloc>
     ccc:	subs	r4, r0, #0
     cd0:	beq	d2c <coda_product_type_new+0x78>
     cd4:	mov	r3, #0
     cd8:	mov	r0, r5
     cdc:	str	r3, [r4, #4]
     ce0:	str	r3, [r4, #8]
     ce4:	str	r3, [r4, #12]
     ce8:	str	r3, [r4, #16]
     cec:	bl	0 <strdup>
     cf0:	cmp	r0, #0
     cf4:	mov	r5, r0
     cf8:	str	r0, [r4]
     cfc:	beq	d54 <coda_product_type_new+0xa0>
     d00:	mov	r0, #1
     d04:	bl	0 <coda_hashtable_new>
     d08:	cmp	r0, #0
     d0c:	mov	r5, r0
     d10:	str	r0, [r4, #16]
     d14:	beq	d80 <coda_product_type_new+0xcc>
     d18:	mov	r0, r4
     d1c:	add	sp, sp, #12
     d20:	ldrd	r4, [sp]
     d24:	add	sp, sp, #8
     d28:	pop	{pc}		; (ldr pc, [sp], #4)
     d2c:	movw	r0, #482	; 0x1e2
     d30:	movw	r3, #0
     d34:	movt	r3, #0
     d38:	movw	r1, #0
     d3c:	movt	r1, #0
     d40:	mov	r2, #24
     d44:	str	r0, [sp]
     d48:	mvn	r0, #0
     d4c:	bl	0 <coda_set_error>
     d50:	b	d18 <coda_product_type_new+0x64>
     d54:	movw	r2, #0
     d58:	movt	r2, #0
     d5c:	movw	r1, #0
     d60:	movt	r1, #0
     d64:	movw	r3, #495	; 0x1ef
     d68:	mvn	r0, #0
     d6c:	bl	0 <coda_set_error>
     d70:	mov	r0, r4
     d74:	mov	r4, r5
     d78:	bl	c20 <coda_product_type_delete>
     d7c:	b	d18 <coda_product_type_new+0x64>
     d80:	movw	r2, #0
     d84:	movt	r2, #0
     d88:	movw	r1, #0
     d8c:	movt	r1, #0
     d90:	mov	r3, #504	; 0x1f8
     d94:	b	d68 <coda_product_type_new+0xb4>

00000d98 <coda_product_type_set_description>:
     d98:	ldr	r3, [r0, #4]
     d9c:	str	r4, [sp, #-8]!
     da0:	str	lr, [sp, #4]
     da4:	cmp	r3, #0
     da8:	bne	ddc <coda_product_type_set_description+0x44>
     dac:	cmp	r1, #0
     db0:	mov	r4, r0
     db4:	beq	dc8 <coda_product_type_set_description+0x30>
     db8:	mov	r0, r1
     dbc:	bl	0 <strdup>
     dc0:	subs	r1, r0, #0
     dc4:	beq	df8 <coda_product_type_set_description+0x60>
     dc8:	mov	r0, #0
     dcc:	str	r1, [r4, #4]
     dd0:	ldr	r4, [sp]
     dd4:	add	sp, sp, #4
     dd8:	pop	{pc}		; (ldr pc, [sp], #4)
     ddc:	movw	r1, #0
     de0:	movt	r1, #0
     de4:	movw	r0, #65136	; 0xfe70
     de8:	movt	r0, #65535	; 0xffff
     dec:	bl	0 <coda_set_error>
     df0:	mvn	r0, #0
     df4:	b	dd0 <coda_product_type_set_description+0x38>
     df8:	mvn	r0, #0
     dfc:	movw	r2, #0
     e00:	movt	r2, #0
     e04:	movw	r1, #0
     e08:	movt	r1, #0
     e0c:	movw	r3, #527	; 0x20f
     e10:	bl	0 <coda_set_error>
     e14:	mvn	r0, #0
     e18:	b	dd0 <coda_product_type_set_description+0x38>

00000e1c <coda_product_type_add_product_definition>:
     e1c:	ldr	r3, [r1, #44]	; 0x2c
     e20:	strd	r4, [sp, #-16]!
     e24:	mov	r5, r1
     e28:	mov	r4, r0
     e2c:	str	r6, [sp, #8]
     e30:	str	lr, [sp, #12]
     e34:	sub	sp, sp, #8
     e38:	cmp	r3, #0
     e3c:	bne	f10 <coda_product_type_add_product_definition+0xf4>
     e40:	ldr	ip, [r0, #8]
     e44:	cmp	ip, #0
     e48:	ble	e84 <coda_product_type_add_product_definition+0x68>
     e4c:	ldr	r1, [r0, #12]
     e50:	ldr	r2, [r5, #4]
     e54:	ldr	r0, [r1]
     e58:	ldr	r0, [r0, #4]
     e5c:	cmp	r0, r2
     e60:	bne	e78 <coda_product_type_add_product_definition+0x5c>
     e64:	b	ed0 <coda_product_type_add_product_definition+0xb4>
     e68:	ldr	r0, [r1, #4]!
     e6c:	ldr	r0, [r0, #4]
     e70:	cmp	r0, r2
     e74:	beq	ed0 <coda_product_type_add_product_definition+0xb4>
     e78:	add	r3, r3, #1
     e7c:	cmp	ip, r3
     e80:	bne	e68 <coda_product_type_add_product_definition+0x4c>
     e84:	ldr	r1, [r5, #8]
     e88:	ldr	r0, [r4, #16]
     e8c:	bl	0 <coda_hashtable_add_name>
     e90:	subs	r6, r0, #0
     e94:	bne	f3c <coda_product_type_add_product_definition+0x120>
     e98:	ldr	r1, [r4, #8]
     e9c:	ldr	r0, [r4, #12]
     ea0:	tst	r1, #15
     ea4:	beq	ef0 <coda_product_type_add_product_definition+0xd4>
     ea8:	add	r3, r1, #1
     eac:	str	r3, [r4, #8]
     eb0:	str	r5, [r0, r1, lsl #2]
     eb4:	str	r4, [r5, #44]	; 0x2c
     eb8:	mov	r0, r6
     ebc:	add	sp, sp, #8
     ec0:	ldrd	r4, [sp]
     ec4:	ldr	r6, [sp, #8]
     ec8:	add	sp, sp, #12
     ecc:	pop	{pc}		; (ldr pc, [sp], #4)
     ed0:	movw	r1, #0
     ed4:	movt	r1, #0
     ed8:	ldr	r3, [r4]
     edc:	movw	r0, #65136	; 0xfe70
     ee0:	movt	r0, #65535	; 0xffff
     ee4:	mvn	r6, #0
     ee8:	bl	0 <coda_set_error>
     eec:	b	eb8 <coda_product_type_add_product_definition+0x9c>
     ef0:	add	r1, r1, #16
     ef4:	lsl	r1, r1, #2
     ef8:	bl	0 <realloc>
     efc:	cmp	r0, #0
     f00:	beq	f60 <coda_product_type_add_product_definition+0x144>
     f04:	str	r0, [r4, #12]
     f08:	ldr	r1, [r4, #8]
     f0c:	b	ea8 <coda_product_type_add_product_definition+0x8c>
     f10:	ldr	ip, [r4]
     f14:	movw	r1, #0
     f18:	movt	r1, #0
     f1c:	movw	r0, #65136	; 0xfe70
     f20:	movt	r0, #65535	; 0xffff
     f24:	ldr	r3, [r3]
     f28:	mvn	r6, #0
     f2c:	ldr	r2, [r5, #8]
     f30:	str	ip, [sp]
     f34:	bl	0 <coda_set_error>
     f38:	b	eb8 <coda_product_type_add_product_definition+0x9c>
     f3c:	movw	r1, #0
     f40:	movt	r1, #0
     f44:	ldr	r3, [r4]
     f48:	movw	r0, #65136	; 0xfe70
     f4c:	movt	r0, #65535	; 0xffff
     f50:	ldr	r2, [r5, #8]
     f54:	mvn	r6, #0
     f58:	bl	0 <coda_set_error>
     f5c:	b	eb8 <coda_product_type_add_product_definition+0x9c>
     f60:	ldr	r2, [r4, #8]
     f64:	movw	ip, #574	; 0x23e
     f68:	mvn	r0, #0
     f6c:	movw	r3, #0
     f70:	movt	r3, #0
     f74:	movw	r1, #0
     f78:	movt	r1, #0
     f7c:	str	ip, [sp]
     f80:	mov	r6, r0
     f84:	add	r2, r2, #16
     f88:	lsl	r2, r2, #2
     f8c:	bl	0 <coda_set_error>
     f90:	b	eb8 <coda_product_type_add_product_definition+0x9c>

00000f94 <coda_product_type_get_product_definition_by_version>:
     f94:	ldr	r3, [r0, #8]
     f98:	str	r4, [sp, #-8]!
     f9c:	mov	r4, r0
     fa0:	str	lr, [sp, #4]
     fa4:	cmp	r3, #0
     fa8:	ble	fe4 <coda_product_type_get_product_definition_by_version+0x50>
     fac:	ldr	ip, [r0, #12]
     fb0:	ldr	r0, [ip]
     fb4:	ldr	r2, [r0, #4]
     fb8:	cmp	r1, r2
     fbc:	beq	1004 <coda_product_type_get_product_definition_by_version+0x70>
     fc0:	mov	r2, #0
     fc4:	b	fd8 <coda_product_type_get_product_definition_by_version+0x44>
     fc8:	ldr	r0, [ip, #4]!
     fcc:	ldr	lr, [r0, #4]
     fd0:	cmp	lr, r1
     fd4:	beq	1004 <coda_product_type_get_product_definition_by_version+0x70>
     fd8:	add	r2, r2, #1
     fdc:	cmp	r2, r3
     fe0:	bne	fc8 <coda_product_type_get_product_definition_by_version+0x34>
     fe4:	mov	r3, r1
     fe8:	movw	r0, #65136	; 0xfe70
     fec:	movt	r0, #65535	; 0xffff
     ff0:	movw	r1, #0
     ff4:	movt	r1, #0
     ff8:	ldr	r2, [r4]
     ffc:	bl	0 <coda_set_error>
    1000:	mov	r0, #0
    1004:	ldr	r4, [sp]
    1008:	add	sp, sp, #4
    100c:	pop	{pc}		; (ldr pc, [sp], #4)

00001010 <coda_product_type_get_latest_product_definition>:
    1010:	str	r4, [sp, #-8]!
    1014:	ldr	r4, [r0, #8]
    1018:	str	lr, [sp, #4]
    101c:	cmp	r4, #0
    1020:	beq	1074 <coda_product_type_get_latest_product_definition+0x64>
    1024:	ldr	lr, [r0, #12]
    1028:	cmp	r4, #1
    102c:	ldr	r0, [lr]
    1030:	ldr	r2, [r0, #4]
    1034:	ble	1068 <coda_product_type_get_latest_product_definition+0x58>
    1038:	mov	ip, lr
    103c:	mov	r3, #1
    1040:	mov	r0, #0
    1044:	ldr	r1, [ip, #4]!
    1048:	ldr	r1, [r1, #4]
    104c:	cmp	r1, r2
    1050:	movgt	r0, r3
    1054:	add	r3, r3, #1
    1058:	movgt	r2, r1
    105c:	cmp	r4, r3
    1060:	bne	1044 <coda_product_type_get_latest_product_definition+0x34>
    1064:	ldr	r0, [lr, r0, lsl #2]
    1068:	ldr	r4, [sp]
    106c:	add	sp, sp, #4
    1070:	pop	{pc}		; (ldr pc, [sp], #4)
    1074:	movw	r1, #0
    1078:	movt	r1, #0
    107c:	ldr	r2, [r0]
    1080:	movw	r0, #65136	; 0xfe70
    1084:	movt	r0, #65535	; 0xffff
    1088:	bl	0 <coda_set_error>
    108c:	mov	r0, r4
    1090:	b	1068 <coda_product_type_get_latest_product_definition+0x58>

00001094 <coda_product_class_delete>:
    1094:	strd	r4, [sp, #-16]!
    1098:	mov	r4, r0
    109c:	ldr	r0, [r0]
    10a0:	str	r6, [sp, #8]
    10a4:	str	lr, [sp, #12]
    10a8:	cmp	r0, #0
    10ac:	beq	10b4 <coda_product_class_delete+0x20>
    10b0:	bl	0 <free>
    10b4:	ldr	r0, [r4, #4]
    10b8:	cmp	r0, #0
    10bc:	beq	10c4 <coda_product_class_delete+0x30>
    10c0:	bl	0 <free>
    10c4:	ldr	r0, [r4, #8]
    10c8:	cmp	r0, #0
    10cc:	beq	10d4 <coda_product_class_delete+0x40>
    10d0:	bl	0 <free>
    10d4:	ldr	r0, [r4, #24]
    10d8:	cmp	r0, #0
    10dc:	beq	10e4 <coda_product_class_delete+0x50>
    10e0:	bl	0 <coda_hashtable_delete>
    10e4:	ldr	r0, [r4, #36]	; 0x24
    10e8:	cmp	r0, #0
    10ec:	beq	10f4 <coda_product_class_delete+0x60>
    10f0:	bl	0 <coda_hashtable_delete>
    10f4:	ldr	r0, [r4, #20]
    10f8:	cmp	r0, #0
    10fc:	beq	1130 <coda_product_class_delete+0x9c>
    1100:	ldr	r3, [r4, #16]
    1104:	cmp	r3, #0
    1108:	ble	112c <coda_product_class_delete+0x98>
    110c:	mov	r5, #0
    1110:	ldr	r0, [r0, r5, lsl #2]
    1114:	add	r5, r5, #1
    1118:	bl	0 <coda_type_release>
    111c:	ldr	r3, [r4, #16]
    1120:	ldr	r0, [r4, #20]
    1124:	cmp	r3, r5
    1128:	bgt	1110 <coda_product_class_delete+0x7c>
    112c:	bl	0 <free>
    1130:	ldr	r0, [r4, #32]
    1134:	cmp	r0, #0
    1138:	beq	116c <coda_product_class_delete+0xd8>
    113c:	ldr	r3, [r4, #28]
    1140:	cmp	r3, #0
    1144:	ble	1168 <coda_product_class_delete+0xd4>
    1148:	mov	r5, #0
    114c:	ldr	r0, [r0, r5, lsl #2]
    1150:	add	r5, r5, #1
    1154:	bl	c20 <coda_product_type_delete>
    1158:	ldr	r3, [r4, #28]
    115c:	ldr	r0, [r4, #32]
    1160:	cmp	r3, r5
    1164:	bgt	114c <coda_product_class_delete+0xb8>
    1168:	bl	0 <free>
    116c:	mov	r0, r4
    1170:	ldrd	r4, [sp]
    1174:	ldr	r6, [sp, #8]
    1178:	ldr	lr, [sp, #12]
    117c:	add	sp, sp, #16
    1180:	b	0 <free>

00001184 <delete_data_dictionary>:
    1184:	strd	r4, [sp, #-16]!
    1188:	subs	r5, r0, #0
    118c:	str	r6, [sp, #8]
    1190:	str	lr, [sp, #12]
    1194:	beq	121c <delete_data_dictionary+0x98>
    1198:	ldr	r0, [r5, #8]
    119c:	cmp	r0, #0
    11a0:	beq	11a8 <delete_data_dictionary+0x24>
    11a4:	bl	0 <coda_hashtable_delete>
    11a8:	ldr	r0, [r5, #4]
    11ac:	cmp	r0, #0
    11b0:	beq	11e4 <delete_data_dictionary+0x60>
    11b4:	ldr	r3, [r5]
    11b8:	cmp	r3, #0
    11bc:	ble	11e0 <delete_data_dictionary+0x5c>
    11c0:	mov	r4, #0
    11c4:	ldr	r0, [r0, r4, lsl #2]
    11c8:	add	r4, r4, #1
    11cc:	bl	1094 <coda_product_class_delete>
    11d0:	ldr	r3, [r5]
    11d4:	ldr	r0, [r5, #4]
    11d8:	cmp	r3, r4
    11dc:	bgt	11c4 <delete_data_dictionary+0x40>
    11e0:	bl	0 <free>
    11e4:	add	r4, r5, #8
    11e8:	add	r6, r5, #48	; 0x30
    11ec:	ldr	r0, [r4, #4]!
    11f0:	cmp	r0, #0
    11f4:	beq	11fc <delete_data_dictionary+0x78>
    11f8:	bl	0 <coda_detection_tree_delete>
    11fc:	cmp	r6, r4
    1200:	bne	11ec <delete_data_dictionary+0x68>
    1204:	mov	r0, r5
    1208:	ldrd	r4, [sp]
    120c:	ldr	r6, [sp, #8]
    1210:	ldr	lr, [sp, #12]
    1214:	add	sp, sp, #16
    1218:	b	0 <free>
    121c:	movw	r1, #0
    1220:	movt	r1, #0
    1224:	ldr	r3, [pc, #12]	; 1238 <delete_data_dictionary+0xb4>
    1228:	movw	r0, #0
    122c:	movt	r0, #0
    1230:	movw	r2, #887	; 0x377
    1234:	bl	0 <__assert_fail>
    1238:	.word	0x00000114

0000123c <coda_product_class_new>:
    123c:	strd	r4, [sp, #-16]!
    1240:	mov	r5, r0
    1244:	str	r6, [sp, #8]
    1248:	str	lr, [sp, #12]
    124c:	bl	0 <coda_is_identifier>
    1250:	subs	r4, r0, #0
    1254:	beq	12ec <coda_product_class_new+0xb0>
    1258:	mov	r0, #40	; 0x28
    125c:	bl	0 <malloc>
    1260:	subs	r4, r0, #0
    1264:	beq	1364 <coda_product_class_new+0x128>
    1268:	mov	r3, #0
    126c:	mov	r0, r5
    1270:	str	r3, [r4, #4]
    1274:	str	r3, [r4, #8]
    1278:	str	r3, [r4, #12]
    127c:	str	r3, [r4, #16]
    1280:	str	r3, [r4, #20]
    1284:	str	r3, [r4, #24]
    1288:	str	r3, [r4, #28]
    128c:	str	r3, [r4, #32]
    1290:	str	r3, [r4, #36]	; 0x24
    1294:	bl	0 <strdup>
    1298:	cmp	r0, #0
    129c:	mov	r5, r0
    12a0:	str	r0, [r4]
    12a4:	beq	1308 <coda_product_class_new+0xcc>
    12a8:	mov	r0, #1
    12ac:	bl	0 <coda_hashtable_new>
    12b0:	cmp	r0, #0
    12b4:	mov	r5, r0
    12b8:	str	r0, [r4, #24]
    12bc:	beq	1334 <coda_product_class_new+0xf8>
    12c0:	mov	r0, #1
    12c4:	bl	0 <coda_hashtable_new>
    12c8:	cmp	r0, #0
    12cc:	mov	r5, r0
    12d0:	str	r0, [r4, #36]	; 0x24
    12d4:	beq	134c <coda_product_class_new+0x110>
    12d8:	mov	r0, r4
    12dc:	ldrd	r4, [sp]
    12e0:	ldr	r6, [sp, #8]
    12e4:	add	sp, sp, #12
    12e8:	pop	{pc}		; (ldr pc, [sp], #4)
    12ec:	mov	r2, r5
    12f0:	movw	r1, #0
    12f4:	movt	r1, #0
    12f8:	movw	r0, #65136	; 0xfe70
    12fc:	movt	r0, #65535	; 0xffff
    1300:	bl	0 <coda_set_error>
    1304:	b	12d8 <coda_product_class_new+0x9c>
    1308:	movw	r2, #0
    130c:	movt	r2, #0
    1310:	movw	r1, #0
    1314:	movt	r1, #0
    1318:	movw	r3, #702	; 0x2be
    131c:	mvn	r0, #0
    1320:	bl	0 <coda_set_error>
    1324:	mov	r0, r4
    1328:	mov	r4, r5
    132c:	bl	1094 <coda_product_class_delete>
    1330:	b	12d8 <coda_product_class_new+0x9c>
    1334:	movw	r2, #0
    1338:	movt	r2, #0
    133c:	movw	r1, #0
    1340:	movt	r1, #0
    1344:	movw	r3, #711	; 0x2c7
    1348:	b	131c <coda_product_class_new+0xe0>
    134c:	movw	r2, #0
    1350:	movt	r2, #0
    1354:	movw	r1, #0
    1358:	movt	r1, #0
    135c:	mov	r3, #720	; 0x2d0
    1360:	b	131c <coda_product_class_new+0xe0>
    1364:	movw	r1, #0
    1368:	movt	r1, #0
    136c:	ldr	r3, [pc, #12]	; 1380 <coda_product_class_new+0x144>
    1370:	movw	r0, #0
    1374:	movt	r0, #0
    1378:	movw	r2, #686	; 0x2ae
    137c:	bl	0 <__assert_fail>
    1380:	.word	0x0000012c

00001384 <coda_product_class_set_description>:
    1384:	ldr	r3, [r0, #4]
    1388:	str	r4, [sp, #-8]!
    138c:	str	lr, [sp, #4]
    1390:	cmp	r3, #0
    1394:	bne	13c8 <coda_product_class_set_description+0x44>
    1398:	cmp	r1, #0
    139c:	mov	r4, r0
    13a0:	beq	13b4 <coda_product_class_set_description+0x30>
    13a4:	mov	r0, r1
    13a8:	bl	0 <strdup>
    13ac:	subs	r1, r0, #0
    13b0:	beq	13e4 <coda_product_class_set_description+0x60>
    13b4:	mov	r0, #0
    13b8:	str	r1, [r4, #4]
    13bc:	ldr	r4, [sp]
    13c0:	add	sp, sp, #4
    13c4:	pop	{pc}		; (ldr pc, [sp], #4)
    13c8:	movw	r1, #0
    13cc:	movt	r1, #0
    13d0:	movw	r0, #65136	; 0xfe70
    13d4:	movt	r0, #65535	; 0xffff
    13d8:	bl	0 <coda_set_error>
    13dc:	mvn	r0, #0
    13e0:	b	13bc <coda_product_class_set_description+0x38>
    13e4:	mvn	r0, #0
    13e8:	movw	r2, #0
    13ec:	movt	r2, #0
    13f0:	movw	r1, #0
    13f4:	movt	r1, #0
    13f8:	movw	r3, #743	; 0x2e7
    13fc:	bl	0 <coda_set_error>
    1400:	mvn	r0, #0
    1404:	b	13bc <coda_product_class_set_description+0x38>

00001408 <coda_product_class_set_definition_file>:
    1408:	ldr	r3, [r0, #8]
    140c:	str	r4, [sp, #-8]!
    1410:	str	lr, [sp, #4]
    1414:	cmp	r3, #0
    1418:	bne	144c <coda_product_class_set_definition_file+0x44>
    141c:	cmp	r1, #0
    1420:	mov	r4, r0
    1424:	beq	1438 <coda_product_class_set_definition_file+0x30>
    1428:	mov	r0, r1
    142c:	bl	0 <strdup>
    1430:	subs	r1, r0, #0
    1434:	beq	1468 <coda_product_class_set_definition_file+0x60>
    1438:	mov	r0, #0
    143c:	str	r1, [r4, #8]
    1440:	ldr	r4, [sp]
    1444:	add	sp, sp, #4
    1448:	pop	{pc}		; (ldr pc, [sp], #4)
    144c:	movw	r1, #0
    1450:	movt	r1, #0
    1454:	movw	r0, #65136	; 0xfe70
    1458:	movt	r0, #65535	; 0xffff
    145c:	bl	0 <coda_set_error>
    1460:	mvn	r0, #0
    1464:	b	1440 <coda_product_class_set_definition_file+0x38>
    1468:	mvn	r0, #0
    146c:	movw	r2, #0
    1470:	movt	r2, #0
    1474:	movw	r1, #0
    1478:	movt	r1, #0
    147c:	movw	r3, #767	; 0x2ff
    1480:	bl	0 <coda_set_error>
    1484:	mvn	r0, #0
    1488:	b	1440 <coda_product_class_set_definition_file+0x38>

0000148c <coda_product_class_set_revision>:
    148c:	str	r1, [r0, #12]
    1490:	mov	r0, #0
    1494:	bx	lr

00001498 <coda_product_class_add_product_type>:
    1498:	strd	r4, [sp, #-16]!
    149c:	mov	r4, r0
    14a0:	mov	r5, r1
    14a4:	ldr	r1, [r1]
    14a8:	ldr	r0, [r0, #36]	; 0x24
    14ac:	str	r6, [sp, #8]
    14b0:	str	lr, [sp, #12]
    14b4:	sub	sp, sp, #8
    14b8:	bl	0 <coda_hashtable_add_name>
    14bc:	subs	r6, r0, #0
    14c0:	bne	151c <coda_product_class_add_product_type+0x84>
    14c4:	ldr	r1, [r4, #28]
    14c8:	ldr	r0, [r4, #32]
    14cc:	tst	r1, #15
    14d0:	beq	14fc <coda_product_class_add_product_type+0x64>
    14d4:	add	r3, r1, #1
    14d8:	str	r3, [r4, #28]
    14dc:	str	r5, [r0, r1, lsl #2]
    14e0:	str	r4, [r5, #20]
    14e4:	mov	r0, r6
    14e8:	add	sp, sp, #8
    14ec:	ldrd	r4, [sp]
    14f0:	ldr	r6, [sp, #8]
    14f4:	add	sp, sp, #12
    14f8:	pop	{pc}		; (ldr pc, [sp], #4)
    14fc:	add	r1, r1, #16
    1500:	lsl	r1, r1, #2
    1504:	bl	0 <realloc>
    1508:	cmp	r0, #0
    150c:	beq	1540 <coda_product_class_add_product_type+0xa8>
    1510:	str	r0, [r4, #32]
    1514:	ldr	r1, [r4, #28]
    1518:	b	14d4 <coda_product_class_add_product_type+0x3c>
    151c:	movw	r1, #0
    1520:	movt	r1, #0
    1524:	ldr	r3, [r4]
    1528:	movw	r0, #65136	; 0xfe70
    152c:	movt	r0, #65535	; 0xffff
    1530:	ldr	r2, [r5]
    1534:	mvn	r6, #0
    1538:	bl	0 <coda_set_error>
    153c:	b	14e4 <coda_product_class_add_product_type+0x4c>
    1540:	ldr	r2, [r4, #28]
    1544:	mov	ip, #800	; 0x320
    1548:	mvn	r0, #0
    154c:	movw	r3, #0
    1550:	movt	r3, #0
    1554:	movw	r1, #0
    1558:	movt	r1, #0
    155c:	str	ip, [sp]
    1560:	mov	r6, r0
    1564:	add	r2, r2, #16
    1568:	lsl	r2, r2, #2
    156c:	bl	0 <coda_set_error>
    1570:	b	14e4 <coda_product_class_add_product_type+0x4c>

00001574 <coda_product_class_get_product_type>:
    1574:	strd	r4, [sp, #-16]!
    1578:	mov	r4, r0
    157c:	mov	r5, r1
    1580:	ldr	r0, [r0, #36]	; 0x24
    1584:	str	r6, [sp, #8]
    1588:	str	lr, [sp, #12]
    158c:	bl	0 <coda_hashtable_get_index_from_name>
    1590:	cmn	r0, #1
    1594:	beq	15b0 <coda_product_class_get_product_type+0x3c>
    1598:	ldr	r3, [r4, #32]
    159c:	ldr	r0, [r3, r0, lsl #2]
    15a0:	ldrd	r4, [sp]
    15a4:	ldr	r6, [sp, #8]
    15a8:	add	sp, sp, #12
    15ac:	pop	{pc}		; (ldr pc, [sp], #4)
    15b0:	mov	r3, r5
    15b4:	movw	r1, #0
    15b8:	movt	r1, #0
    15bc:	movw	r0, #65136	; 0xfe70
    15c0:	movt	r0, #65535	; 0xffff
    15c4:	ldr	r2, [r4]
    15c8:	bl	0 <coda_set_error>
    15cc:	mov	r0, #0
    15d0:	b	15a0 <coda_product_class_get_product_type+0x2c>

000015d4 <coda_product_class_has_product_type>:
    15d4:	str	r4, [sp, #-8]!
    15d8:	ldr	r0, [r0, #36]	; 0x24
    15dc:	str	lr, [sp, #4]
    15e0:	bl	0 <coda_hashtable_get_index_from_name>
    15e4:	adds	r0, r0, #1
    15e8:	ldr	r4, [sp]
    15ec:	add	sp, sp, #4
    15f0:	movne	r0, #1
    15f4:	pop	{pc}		; (ldr pc, [sp], #4)

000015f8 <coda_product_class_add_named_type>:
    15f8:	strd	r4, [sp, #-16]!
    15fc:	mov	r4, r0
    1600:	mov	r5, r1
    1604:	ldr	r1, [r1, #16]
    1608:	ldr	r0, [r0, #24]
    160c:	str	r6, [sp, #8]
    1610:	str	lr, [sp, #12]
    1614:	bl	0 <coda_hashtable_add_name>
    1618:	subs	r6, r0, #0
    161c:	bne	167c <coda_product_class_add_named_type+0x84>
    1620:	ldr	r1, [r4, #16]
    1624:	ldr	r0, [r4, #20]
    1628:	tst	r1, #15
    162c:	beq	165c <coda_product_class_add_named_type+0x64>
    1630:	ldr	r3, [r5, #4]
    1634:	add	r2, r1, #1
    1638:	str	r2, [r4, #16]
    163c:	str	r5, [r0, r1, lsl #2]
    1640:	add	r3, r3, #1
    1644:	str	r3, [r5, #4]
    1648:	mov	r0, r6
    164c:	ldrd	r4, [sp]
    1650:	ldr	r6, [sp, #8]
    1654:	add	sp, sp, #12
    1658:	pop	{pc}		; (ldr pc, [sp], #4)
    165c:	add	r1, r1, #16
    1660:	lsl	r1, r1, #2
    1664:	bl	0 <realloc>
    1668:	cmp	r0, #0
    166c:	beq	16a0 <coda_product_class_add_named_type+0xa8>
    1670:	str	r0, [r4, #20]
    1674:	ldr	r1, [r4, #16]
    1678:	b	1630 <coda_product_class_add_named_type+0x38>
    167c:	movw	r1, #0
    1680:	movt	r1, #0
    1684:	ldr	r3, [r4]
    1688:	movw	r0, #65136	; 0xfe70
    168c:	movt	r0, #65535	; 0xffff
    1690:	ldr	r2, [r5, #16]
    1694:	mvn	r6, #0
    1698:	bl	0 <coda_set_error>
    169c:	b	1648 <coda_product_class_add_named_type+0x50>
    16a0:	movw	r1, #0
    16a4:	movt	r1, #0
    16a8:	ldr	r3, [pc, #12]	; 16bc <coda_product_class_add_named_type+0xc4>
    16ac:	movw	r0, #0
    16b0:	movt	r0, #0
    16b4:	mov	r2, #848	; 0x350
    16b8:	bl	0 <__assert_fail>
    16bc:	.word	0x00000144

000016c0 <coda_product_class_get_named_type>:
    16c0:	strd	r4, [sp, #-16]!
    16c4:	mov	r4, r0
    16c8:	mov	r5, r1
    16cc:	ldr	r0, [r0, #24]
    16d0:	str	r6, [sp, #8]
    16d4:	str	lr, [sp, #12]
    16d8:	bl	0 <coda_hashtable_get_index_from_name>
    16dc:	cmn	r0, #1
    16e0:	beq	16fc <coda_product_class_get_named_type+0x3c>
    16e4:	ldr	r3, [r4, #20]
    16e8:	ldr	r0, [r3, r0, lsl #2]
    16ec:	ldrd	r4, [sp]
    16f0:	ldr	r6, [sp, #8]
    16f4:	add	sp, sp, #12
    16f8:	pop	{pc}		; (ldr pc, [sp], #4)
    16fc:	mov	r3, r5
    1700:	movw	r1, #0
    1704:	movt	r1, #0
    1708:	movw	r0, #65136	; 0xfe70
    170c:	movt	r0, #65535	; 0xffff
    1710:	ldr	r2, [r4]
    1714:	bl	0 <coda_set_error>
    1718:	mov	r0, #0
    171c:	b	16ec <coda_product_class_get_named_type+0x2c>

00001720 <coda_product_class_has_named_type>:
    1720:	str	r4, [sp, #-8]!
    1724:	ldr	r0, [r0, #24]
    1728:	str	lr, [sp, #4]
    172c:	bl	0 <coda_hashtable_get_index_from_name>
    1730:	adds	r0, r0, #1
    1734:	ldr	r4, [sp]
    1738:	add	sp, sp, #4
    173c:	movne	r0, #1
    1740:	pop	{pc}		; (ldr pc, [sp], #4)

00001744 <coda_product_class_get_revision>:
    1744:	ldr	r0, [r0, #12]
    1748:	bx	lr

0000174c <coda_data_dictionary_add_product_class>:
    174c:	strd	r4, [sp, #-32]!	; 0xffffffe0
    1750:	mrc	15, 0, r5, cr13, cr0, {3}
    1754:	ldr	r4, [pc, #332]	; 18a8 <coda_data_dictionary_add_product_class+0x15c>
    1758:	ldr	r3, [r5, r4]
    175c:	strd	r6, [sp, #8]
    1760:	strd	r8, [sp, #16]
    1764:	str	sl, [sp, #24]
    1768:	str	lr, [sp, #28]
    176c:	sub	sp, sp, #8
    1770:	cmp	r3, #0
    1774:	beq	1854 <coda_data_dictionary_add_product_class+0x108>
    1778:	mov	r6, r0
    177c:	ldr	r0, [r3, #8]
    1780:	ldr	r1, [r6]
    1784:	bl	0 <coda_hashtable_add_name>
    1788:	cmp	r0, #0
    178c:	bne	1834 <coda_data_dictionary_add_product_class+0xe8>
    1790:	ldr	r9, [r5, r4]
    1794:	ldm	r9, {r8, sl}
    1798:	tst	r8, #15
    179c:	beq	180c <coda_data_dictionary_add_product_class+0xc0>
    17a0:	cmp	r8, #0
    17a4:	addgt	r7, sl, r8, lsl #2
    17a8:	movgt	r4, sl
    17ac:	ble	17d4 <coda_data_dictionary_add_product_class+0x88>
    17b0:	ldr	r5, [r4], #4
    17b4:	ldr	r0, [r6]
    17b8:	ldr	r1, [r5]
    17bc:	bl	0 <strcmp>
    17c0:	cmp	r0, #0
    17c4:	strlt	r6, [r4, #-4]
    17c8:	movlt	r6, r5
    17cc:	cmp	r7, r4
    17d0:	bne	17b0 <coda_data_dictionary_add_product_class+0x64>
    17d4:	add	r3, r8, #1
    17d8:	str	r3, [r9]
    17dc:	str	r6, [sl, r8, lsl #2]
    17e0:	bl	134 <data_dictionary_rebuild_product_class_hash_data>
    17e4:	adds	r0, r0, #0
    17e8:	movne	r0, #1
    17ec:	rsb	r0, r0, #0
    17f0:	add	sp, sp, #8
    17f4:	ldrd	r4, [sp]
    17f8:	ldrd	r6, [sp, #8]
    17fc:	ldrd	r8, [sp, #16]
    1800:	ldr	sl, [sp, #24]
    1804:	add	sp, sp, #28
    1808:	pop	{pc}		; (ldr pc, [sp], #4)
    180c:	add	r1, r8, #16
    1810:	mov	r0, sl
    1814:	lsl	r1, r1, #2
    1818:	bl	0 <realloc>
    181c:	subs	sl, r0, #0
    1820:	beq	1870 <coda_data_dictionary_add_product_class+0x124>
    1824:	ldr	r9, [r5, r4]
    1828:	str	sl, [r9, #4]
    182c:	ldr	r8, [r9]
    1830:	b	17a0 <coda_data_dictionary_add_product_class+0x54>
    1834:	movw	r1, #0
    1838:	movt	r1, #0
    183c:	ldr	r2, [r6]
    1840:	movw	r0, #65136	; 0xfe70
    1844:	movt	r0, #65535	; 0xffff
    1848:	bl	0 <coda_set_error>
    184c:	mvn	r0, #0
    1850:	b	17f0 <coda_data_dictionary_add_product_class+0xa4>
    1854:	movw	r1, #0
    1858:	movt	r1, #0
    185c:	movw	r0, #65136	; 0xfe70
    1860:	movt	r0, #65535	; 0xffff
    1864:	bl	0 <coda_set_error>
    1868:	mvn	r0, #0
    186c:	b	17f0 <coda_data_dictionary_add_product_class+0xa4>
    1870:	ldr	r2, [r5, r4]
    1874:	movw	ip, #994	; 0x3e2
    1878:	mvn	r0, #0
    187c:	movw	r3, #0
    1880:	movt	r3, #0
    1884:	movw	r1, #0
    1888:	movt	r1, #0
    188c:	ldr	r2, [r2]
    1890:	str	ip, [sp]
    1894:	add	r2, r2, #16
    1898:	lsl	r2, r2, #2
    189c:	bl	0 <coda_set_error>
    18a0:	mvn	r0, #0
    18a4:	b	17f0 <coda_data_dictionary_add_product_class+0xa4>
    18a8:	.word	0x00000000

000018ac <coda_data_dictionary_get_product_class>:
    18ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
    18b0:	ldr	r5, [pc, #140]	; 1944 <coda_data_dictionary_get_product_class+0x98>
    18b4:	strd	r6, [sp, #8]
    18b8:	mrc	15, 0, r6, cr13, cr0, {3}
    18bc:	str	r8, [sp, #16]
    18c0:	str	lr, [sp, #20]
    18c4:	ldr	r4, [r6, r5]
    18c8:	cmp	r4, #0
    18cc:	beq	190c <coda_data_dictionary_get_product_class+0x60>
    18d0:	mov	r1, r0
    18d4:	mov	r7, r0
    18d8:	ldr	r0, [r4, #8]
    18dc:	bl	0 <coda_hashtable_get_index_from_name>
    18e0:	cmn	r0, #1
    18e4:	beq	1924 <coda_data_dictionary_get_product_class+0x78>
    18e8:	ldr	r3, [r6, r5]
    18ec:	ldr	r3, [r3, #4]
    18f0:	ldr	r4, [r3, r0, lsl #2]
    18f4:	mov	r0, r4
    18f8:	ldrd	r4, [sp]
    18fc:	ldrd	r6, [sp, #8]
    1900:	ldr	r8, [sp, #16]
    1904:	add	sp, sp, #20
    1908:	pop	{pc}		; (ldr pc, [sp], #4)
    190c:	movw	r1, #0
    1910:	movt	r1, #0
    1914:	movw	r0, #65136	; 0xfe70
    1918:	movt	r0, #65535	; 0xffff
    191c:	bl	0 <coda_set_error>
    1920:	b	18f4 <coda_data_dictionary_get_product_class+0x48>
    1924:	mov	r2, r7
    1928:	movw	r1, #0
    192c:	movt	r1, #0
    1930:	movw	r0, #65136	; 0xfe70
    1934:	movt	r0, #65535	; 0xffff
    1938:	mov	r4, #0
    193c:	bl	0 <coda_set_error>
    1940:	b	18f4 <coda_data_dictionary_get_product_class+0x48>
    1944:	.word	0x00000000

00001948 <coda_data_dictionary_has_product_class>:
    1948:	ldr	r2, [pc, #60]	; 198c <coda_data_dictionary_has_product_class+0x44>
    194c:	mrc	15, 0, r3, cr13, cr0, {3}
    1950:	ldr	r3, [r3, r2]
    1954:	cmp	r3, #0
    1958:	beq	1984 <coda_data_dictionary_has_product_class+0x3c>
    195c:	mov	r1, r0
    1960:	str	r4, [sp, #-8]!
    1964:	ldr	r0, [r3, #8]
    1968:	str	lr, [sp, #4]
    196c:	bl	0 <coda_hashtable_get_index_from_name>
    1970:	adds	r0, r0, #1
    1974:	ldr	r4, [sp]
    1978:	add	sp, sp, #4
    197c:	movne	r0, #1
    1980:	pop	{pc}		; (ldr pc, [sp], #4)
    1984:	mov	r0, r3
    1988:	bx	lr
    198c:	.word	0x00000000

00001990 <coda_data_dictionary_remove_product_class>:
    1990:	strd	r4, [sp, #-36]!	; 0xffffffdc
    1994:	mrc	15, 0, r5, cr13, cr0, {3}
    1998:	strd	r6, [sp, #8]
    199c:	strd	r8, [sp, #16]
    19a0:	ldr	r9, [pc, #520]	; 1bb0 <coda_data_dictionary_remove_product_class+0x220>
    19a4:	strd	sl, [sp, #24]
    19a8:	str	lr, [sp, #32]
    19ac:	sub	sp, sp, #12
    19b0:	ldr	r3, [r9, r5]
    19b4:	cmp	r3, #0
    19b8:	beq	1b78 <coda_data_dictionary_remove_product_class+0x1e8>
    19bc:	mov	r4, r0
    19c0:	ldr	r0, [r3, #8]
    19c4:	ldr	r1, [r4]
    19c8:	bl	0 <coda_hashtable_get_index_from_name>
    19cc:	cmn	r0, #1
    19d0:	mov	r6, r0
    19d4:	beq	1b94 <coda_data_dictionary_remove_product_class+0x204>
    19d8:	ldr	ip, [r9, r5]
    19dc:	add	r3, r0, #1
    19e0:	ldr	r1, [ip]
    19e4:	cmp	r3, r1
    19e8:	bge	1a0c <coda_data_dictionary_remove_product_class+0x7c>
    19ec:	ldr	r3, [ip, #4]
    19f0:	sub	r2, r3, #4
    19f4:	add	r6, r3, r0, lsl #2
    19f8:	add	r2, r2, r1, lsl #2
    19fc:	ldr	r3, [r6, #4]
    1a00:	str	r3, [r6], #4
    1a04:	cmp	r2, r6
    1a08:	bne	19fc <coda_data_dictionary_remove_product_class+0x6c>
    1a0c:	sub	r1, r1, #1
    1a10:	mov	r0, r4
    1a14:	str	r1, [ip]
    1a18:	bl	1094 <coda_product_class_delete>
    1a1c:	bl	134 <data_dictionary_rebuild_product_class_hash_data>
    1a20:	subs	r6, r0, #0
    1a24:	bne	1b18 <coda_data_dictionary_remove_product_class+0x188>
    1a28:	mov	r7, r9
    1a2c:	mov	sl, r6
    1a30:	ldr	r3, [r7, r5]!
    1a34:	mov	r8, r6
    1a38:	add	r4, sl, #2
    1a3c:	add	sl, sl, #1
    1a40:	lsl	r4, r4, #2
    1a44:	add	r2, r3, r4
    1a48:	ldr	r2, [r2, #4]
    1a4c:	subs	r0, r2, #0
    1a50:	beq	1a64 <coda_data_dictionary_remove_product_class+0xd4>
    1a54:	bl	0 <coda_detection_tree_delete>
    1a58:	ldr	r3, [r7]
    1a5c:	add	r4, r3, r4
    1a60:	str	r8, [r4, #4]
    1a64:	cmp	sl, #10
    1a68:	bne	1a38 <coda_data_dictionary_remove_product_class+0xa8>
    1a6c:	ldr	r2, [r3]
    1a70:	cmp	r2, #0
    1a74:	ble	1b1c <coda_data_dictionary_remove_product_class+0x18c>
    1a78:	mov	r2, #0
    1a7c:	add	r5, r9, r5
    1a80:	str	r2, [sp, #4]
    1a84:	ldr	r2, [r3, #4]
    1a88:	ldr	r1, [sp, #4]
    1a8c:	ldr	r8, [r2, r1, lsl #2]
    1a90:	ldr	r2, [r8, #28]
    1a94:	cmp	r2, #0
    1a98:	ble	1b5c <coda_data_dictionary_remove_product_class+0x1cc>
    1a9c:	mov	r9, #0
    1aa0:	ldr	r1, [r8, #32]
    1aa4:	ldr	r7, [r1, r9, lsl #2]
    1aa8:	ldr	r1, [r7, #8]
    1aac:	cmp	r1, #0
    1ab0:	ble	1b50 <coda_data_dictionary_remove_product_class+0x1c0>
    1ab4:	mov	r4, #0
    1ab8:	ldr	r2, [r7, #12]
    1abc:	ldr	sl, [r2, r4, lsl #2]
    1ac0:	ldr	r0, [sl, #16]
    1ac4:	cmp	r0, #0
    1ac8:	ble	1b40 <coda_data_dictionary_remove_product_class+0x1b0>
    1acc:	mov	fp, #0
    1ad0:	b	1ae4 <coda_data_dictionary_remove_product_class+0x154>
    1ad4:	ldr	r1, [sl, #16]
    1ad8:	ldr	r3, [r5]
    1adc:	cmp	fp, r1
    1ae0:	bge	1b3c <coda_data_dictionary_remove_product_class+0x1ac>
    1ae4:	ldr	r1, [sl, #20]
    1ae8:	mov	r0, #16
    1aec:	ldr	r1, [r1, fp, lsl #2]
    1af0:	add	fp, fp, #1
    1af4:	ldr	ip, [r1, #8]
    1af8:	ldr	ip, [ip]
    1afc:	cmp	ip, #0
    1b00:	add	ip, ip, #3
    1b04:	lslne	r0, ip, #2
    1b08:	add	r0, r3, r0
    1b0c:	bl	0 <coda_detection_tree_add_rule>
    1b10:	cmp	r0, #0
    1b14:	beq	1ad4 <coda_data_dictionary_remove_product_class+0x144>
    1b18:	mvn	r6, #0
    1b1c:	mov	r0, r6
    1b20:	add	sp, sp, #12
    1b24:	ldrd	r4, [sp]
    1b28:	ldrd	r6, [sp, #8]
    1b2c:	ldrd	r8, [sp, #16]
    1b30:	ldrd	sl, [sp, #24]
    1b34:	add	sp, sp, #32
    1b38:	pop	{pc}		; (ldr pc, [sp], #4)
    1b3c:	ldr	r1, [r7, #8]
    1b40:	add	r4, r4, #1
    1b44:	cmp	r4, r1
    1b48:	blt	1ab8 <coda_data_dictionary_remove_product_class+0x128>
    1b4c:	ldr	r2, [r8, #28]
    1b50:	add	r9, r9, #1
    1b54:	cmp	r9, r2
    1b58:	blt	1aa0 <coda_data_dictionary_remove_product_class+0x110>
    1b5c:	ldr	r1, [sp, #4]
    1b60:	ldr	r2, [r3]
    1b64:	add	r1, r1, #1
    1b68:	cmp	r1, r2
    1b6c:	str	r1, [sp, #4]
    1b70:	blt	1a84 <coda_data_dictionary_remove_product_class+0xf4>
    1b74:	b	1b1c <coda_data_dictionary_remove_product_class+0x18c>
    1b78:	movw	r1, #0
    1b7c:	movt	r1, #0
    1b80:	movw	r0, #65136	; 0xfe70
    1b84:	movt	r0, #65535	; 0xffff
    1b88:	bl	0 <coda_set_error>
    1b8c:	mvn	r6, #0
    1b90:	b	1b1c <coda_data_dictionary_remove_product_class+0x18c>
    1b94:	movw	r1, #0
    1b98:	movt	r1, #0
    1b9c:	ldr	r2, [r4]
    1ba0:	movw	r0, #65136	; 0xfe70
    1ba4:	movt	r0, #65535	; 0xffff
    1ba8:	bl	0 <coda_set_error>
    1bac:	b	1b1c <coda_data_dictionary_remove_product_class+0x18c>
    1bb0:	.word	0x00000000

00001bb4 <coda_data_dictionary_get_definition>:
    1bb4:	strd	r4, [sp, #-16]!
    1bb8:	mov	r5, r1
    1bbc:	mov	r4, r2
    1bc0:	str	r6, [sp, #8]
    1bc4:	mov	r6, r3
    1bc8:	str	lr, [sp, #12]
    1bcc:	bl	18ac <coda_data_dictionary_get_product_class>
    1bd0:	cmp	r0, #0
    1bd4:	beq	1c28 <coda_data_dictionary_get_definition+0x74>
    1bd8:	mov	r1, r5
    1bdc:	bl	1574 <coda_product_class_get_product_type>
    1be0:	cmp	r0, #0
    1be4:	beq	1c28 <coda_data_dictionary_get_definition+0x74>
    1be8:	cmp	r4, #0
    1bec:	blt	1c1c <coda_data_dictionary_get_definition+0x68>
    1bf0:	mov	r1, r4
    1bf4:	bl	f94 <coda_product_type_get_product_definition_by_version>
    1bf8:	mov	r3, r0
    1bfc:	cmp	r3, #0
    1c00:	beq	1c28 <coda_data_dictionary_get_definition+0x74>
    1c04:	mov	r0, #0
    1c08:	str	r3, [r6]
    1c0c:	ldrd	r4, [sp]
    1c10:	ldr	r6, [sp, #8]
    1c14:	add	sp, sp, #12
    1c18:	pop	{pc}		; (ldr pc, [sp], #4)
    1c1c:	bl	1010 <coda_product_type_get_latest_product_definition>
    1c20:	mov	r3, r0
    1c24:	b	1bfc <coda_data_dictionary_get_definition+0x48>
    1c28:	mvn	r0, #0
    1c2c:	b	1c0c <coda_data_dictionary_get_definition+0x58>

00001c30 <coda_data_dictionary_get_detection_tree>:
    1c30:	ldr	r2, [pc, #24]	; 1c50 <coda_data_dictionary_get_detection_tree+0x20>
    1c34:	mrc	15, 0, r3, cr13, cr0, {3}
    1c38:	cmp	r0, #0
    1c3c:	moveq	r0, #1
    1c40:	ldr	r3, [r3, r2]
    1c44:	add	r3, r3, r0, lsl #2
    1c48:	ldr	r0, [r3, #12]
    1c4c:	bx	lr
    1c50:	.word	0x00000000

00001c54 <coda_data_dictionary_find_definition_for_product>:
    1c54:	strd	r4, [sp, #-12]!
    1c58:	mov	r4, r0
    1c5c:	mov	r5, r1
    1c60:	str	lr, [sp, #8]
    1c64:	sub	sp, sp, #524	; 0x20c
    1c68:	mov	r1, r0
    1c6c:	mov	r0, sp
    1c70:	bl	0 <coda_cursor_set_product>
    1c74:	cmp	r0, #0
    1c78:	bne	1cb8 <coda_data_dictionary_find_definition_for_product+0x64>
    1c7c:	ldr	ip, [pc, #60]	; 1cc0 <coda_data_dictionary_find_definition_for_product+0x6c>
    1c80:	mrc	15, 0, r0, cr13, cr0, {3}
    1c84:	mov	r2, r5
    1c88:	mov	r1, sp
    1c8c:	ldr	r3, [r4, #16]
    1c90:	ldr	r0, [r0, ip]
    1c94:	cmp	r3, #0
    1c98:	moveq	r3, #1
    1c9c:	add	r3, r0, r3, lsl #2
    1ca0:	ldr	r0, [r3, #12]
    1ca4:	bl	0 <coda_evaluate_detection_node>
    1ca8:	add	sp, sp, #524	; 0x20c
    1cac:	ldrd	r4, [sp]
    1cb0:	add	sp, sp, #8
    1cb4:	pop	{pc}		; (ldr pc, [sp], #4)
    1cb8:	mvn	r0, #0
    1cbc:	b	1ca8 <coda_data_dictionary_find_definition_for_product+0x54>
    1cc0:	.word	0x00000000

00001cc4 <coda_data_dictionary_init>:
    1cc4:	strd	r4, [sp, #-20]!	; 0xffffffec
    1cc8:	strd	r6, [sp, #8]
    1ccc:	mrc	15, 0, r6, cr13, cr0, {3}
    1cd0:	ldr	r7, [pc, #244]	; 1dcc <coda_data_dictionary_init+0x108>
    1cd4:	str	lr, [sp, #16]
    1cd8:	sub	sp, sp, #12
    1cdc:	ldr	r5, [r7, r6]
    1ce0:	cmp	r5, #0
    1ce4:	bne	1db0 <coda_data_dictionary_init+0xec>
    1ce8:	mov	r0, #52	; 0x34
    1cec:	bl	0 <malloc>
    1cf0:	subs	r4, r0, #0
    1cf4:	beq	1d50 <coda_data_dictionary_init+0x8c>
    1cf8:	mov	r3, r4
    1cfc:	mov	r1, r5
    1d00:	str	r5, [r4]
    1d04:	add	r2, r4, #48	; 0x30
    1d08:	str	r5, [r4, #4]
    1d0c:	str	r5, [r3, #8]!
    1d10:	str	r1, [r3, #4]!
    1d14:	cmp	r3, r2
    1d18:	bne	1d10 <coda_data_dictionary_init+0x4c>
    1d1c:	mov	r0, #1
    1d20:	bl	0 <coda_hashtable_new>
    1d24:	cmp	r0, #0
    1d28:	mov	r5, r0
    1d2c:	str	r0, [r4, #8]
    1d30:	movne	r0, #0
    1d34:	strne	r4, [r7, r6]
    1d38:	beq	1d80 <coda_data_dictionary_init+0xbc>
    1d3c:	add	sp, sp, #12
    1d40:	ldrd	r4, [sp]
    1d44:	ldrd	r6, [sp, #8]
    1d48:	add	sp, sp, #16
    1d4c:	pop	{pc}		; (ldr pc, [sp], #4)
    1d50:	mov	r0, #920	; 0x398
    1d54:	movw	r3, #0
    1d58:	movt	r3, #0
    1d5c:	movw	r1, #0
    1d60:	movt	r1, #0
    1d64:	mov	r2, #52	; 0x34
    1d68:	str	r0, [sp]
    1d6c:	mvn	r0, #0
    1d70:	bl	0 <coda_set_error>
    1d74:	mvn	r0, #0
    1d78:	str	r4, [r7, r6]
    1d7c:	b	1d3c <coda_data_dictionary_init+0x78>
    1d80:	movw	r3, #935	; 0x3a7
    1d84:	mvn	r0, #0
    1d88:	movw	r2, #0
    1d8c:	movt	r2, #0
    1d90:	movw	r1, #0
    1d94:	movt	r1, #0
    1d98:	bl	0 <coda_set_error>
    1d9c:	mov	r0, r4
    1da0:	bl	1184 <delete_data_dictionary>
    1da4:	mvn	r0, #0
    1da8:	str	r5, [r7, r6]
    1dac:	b	1d3c <coda_data_dictionary_init+0x78>
    1db0:	movw	r1, #0
    1db4:	movt	r1, #0
    1db8:	ldr	r3, [pc, #16]	; 1dd0 <coda_data_dictionary_init+0x10c>
    1dbc:	movw	r0, #0
    1dc0:	movt	r0, #0
    1dc4:	mov	r2, #1200	; 0x4b0
    1dc8:	bl	0 <__assert_fail>
    1dcc:	.word	0x00000000
    1dd0:	.word	0x00000168

00001dd4 <coda_data_dictionary_done>:
    1dd4:	strd	r4, [sp, #-16]!
    1dd8:	mrc	15, 0, r5, cr13, cr0, {3}
    1ddc:	ldr	r4, [pc, #72]	; 1e2c <coda_data_dictionary_done+0x58>
    1de0:	ldr	r0, [r5, r4]
    1de4:	str	r6, [sp, #8]
    1de8:	str	lr, [sp, #12]
    1dec:	cmp	r0, #0
    1df0:	beq	1e10 <coda_data_dictionary_done+0x3c>
    1df4:	bl	1184 <delete_data_dictionary>
    1df8:	mov	r3, #0
    1dfc:	ldr	r6, [sp, #8]
    1e00:	str	r3, [r5, r4]
    1e04:	ldrd	r4, [sp]
    1e08:	add	sp, sp, #12
    1e0c:	pop	{pc}		; (ldr pc, [sp], #4)
    1e10:	movw	r1, #0
    1e14:	movt	r1, #0
    1e18:	ldr	r3, [pc, #16]	; 1e30 <coda_data_dictionary_done+0x5c>
    1e1c:	movw	r0, #0
    1e20:	movt	r0, #0
    1e24:	movw	r2, #1213	; 0x4bd
    1e28:	bl	0 <__assert_fail>
    1e2c:	.word	0x00000000
    1e30:	.word	0x00000184
