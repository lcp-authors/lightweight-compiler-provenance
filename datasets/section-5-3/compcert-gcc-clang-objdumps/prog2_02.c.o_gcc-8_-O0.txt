
../compcert-repos/prog2/CMakeFiles/2.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/02.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	strd	r4, [sp, #-16]!
   4:	str	fp, [sp, #8]
   8:	str	lr, [sp, #12]
   c:	add	fp, sp, #12
  10:	sub	sp, sp, #96	; 0x60
  14:	mov	r0, #12
  18:	bl	0 <malloc>
  1c:	mov	r3, r0
  20:	str	r3, [fp, #-20]	; 0xffffffec
  24:	mov	r3, #0
  28:	str	r3, [fp, #-16]
  2c:	b	54 <main+0x54>
  30:	ldr	r3, [fp, #-16]
  34:	lsl	r3, r3, #2
  38:	ldr	r2, [fp, #-20]	; 0xffffffec
  3c:	add	r3, r2, r3
  40:	mov	r2, #0
  44:	str	r2, [r3]
  48:	ldr	r3, [fp, #-16]
  4c:	add	r3, r3, #1
  50:	str	r3, [fp, #-16]
  54:	ldr	r3, [fp, #-16]
  58:	cmp	r3, #2
  5c:	ble	30 <main+0x30>
  60:	mov	r3, #0
  64:	str	r3, [fp, #-16]
  68:	b	d8 <main+0xd8>
  6c:	ldr	r3, [fp, #-16]
  70:	add	r3, r3, #1
  74:	mov	r1, r3
  78:	movw	r0, #0
  7c:	movt	r0, #0
  80:	bl	0 <printf>
  84:	ldr	r3, [fp, #-16]
  88:	lsl	r3, r3, #2
  8c:	ldr	r2, [fp, #-20]	; 0xffffffec
  90:	add	r3, r2, r3
  94:	ldr	r3, [r3]
  98:	cmp	r3, #0
  9c:	bne	b0 <main+0xb0>
  a0:	movw	r0, #0
  a4:	movt	r0, #0
  a8:	bl	0 <puts>
  ac:	b	cc <main+0xcc>
  b0:	ldr	r3, [fp, #-16]
  b4:	lsl	r3, r3, #2
  b8:	ldr	r2, [fp, #-20]	; 0xffffffec
  bc:	add	r3, r2, r3
  c0:	ldr	r3, [r3]
  c4:	mov	r0, r3
  c8:	bl	0 <puts>
  cc:	ldr	r3, [fp, #-16]
  d0:	add	r3, r3, #1
  d4:	str	r3, [fp, #-16]
  d8:	ldr	r3, [fp, #-16]
  dc:	cmp	r3, #2
  e0:	ble	6c <main+0x6c>
  e4:	mov	r1, #3
  e8:	movw	r0, #0
  ec:	movt	r0, #0
  f0:	bl	0 <printf>
  f4:	sub	r3, fp, #104	; 0x68
  f8:	mov	r1, r3
  fc:	movw	r0, #0
 100:	movt	r0, #0
 104:	bl	0 <__isoc99_scanf>
 108:	bl	0 <getchar>
 10c:	ldr	r3, [fp, #-104]	; 0xffffff98
 110:	cmp	r3, #0
 114:	blt	e4 <main+0xe4>
 118:	ldr	r3, [fp, #-104]	; 0xffffff98
 11c:	cmp	r3, #3
 120:	bgt	e4 <main+0xe4>
 124:	ldr	r3, [fp, #-104]	; 0xffffff98
 128:	cmp	r3, #0
 12c:	beq	1f8 <main+0x1f8>
 130:	movw	r0, #0
 134:	movt	r0, #0
 138:	bl	0 <printf>
 13c:	movw	r3, #0
 140:	movt	r3, #0
 144:	ldr	r2, [r3]
 148:	sub	r3, fp, #100	; 0x64
 14c:	mov	r1, #80	; 0x50
 150:	mov	r0, r3
 154:	bl	0 <fgets>
 158:	sub	r3, fp, #100	; 0x64
 15c:	mov	r0, r3
 160:	bl	0 <strlen>
 164:	mov	r3, r0
 168:	sub	r3, r3, #1
 16c:	sub	r2, fp, #12
 170:	add	r3, r2, r3
 174:	mov	r2, #0
 178:	strb	r2, [r3, #-88]	; 0xffffffa8
 17c:	ldr	r3, [fp, #-104]	; 0xffffff98
 180:	sub	r3, r3, #-1073741823	; 0xc0000001
 184:	lsl	r3, r3, #2
 188:	ldr	r2, [fp, #-20]	; 0xffffffec
 18c:	add	r3, r2, r3
 190:	ldr	r5, [r3]
 194:	sub	r3, fp, #100	; 0x64
 198:	mov	r0, r3
 19c:	bl	0 <strlen>
 1a0:	mov	r3, r0
 1a4:	add	r1, r3, #1
 1a8:	ldr	r3, [fp, #-104]	; 0xffffff98
 1ac:	sub	r3, r3, #-1073741823	; 0xc0000001
 1b0:	lsl	r3, r3, #2
 1b4:	ldr	r2, [fp, #-20]	; 0xffffffec
 1b8:	add	r4, r2, r3
 1bc:	mov	r0, r5
 1c0:	bl	0 <realloc>
 1c4:	mov	r3, r0
 1c8:	str	r3, [r4]
 1cc:	ldr	r3, [fp, #-104]	; 0xffffff98
 1d0:	sub	r3, r3, #-1073741823	; 0xc0000001
 1d4:	lsl	r3, r3, #2
 1d8:	ldr	r2, [fp, #-20]	; 0xffffffec
 1dc:	add	r3, r2, r3
 1e0:	ldr	r3, [r3]
 1e4:	sub	r2, fp, #100	; 0x64
 1e8:	mov	r1, r2
 1ec:	mov	r0, r3
 1f0:	bl	0 <strcpy>
 1f4:	b	60 <main+0x60>
 1f8:	nop	{0}
 1fc:	mov	r3, #0
 200:	str	r3, [fp, #-16]
 204:	b	230 <main+0x230>
 208:	ldr	r3, [fp, #-16]
 20c:	lsl	r3, r3, #2
 210:	ldr	r2, [fp, #-20]	; 0xffffffec
 214:	add	r3, r2, r3
 218:	ldr	r3, [r3]
 21c:	mov	r0, r3
 220:	bl	0 <free>
 224:	ldr	r3, [fp, #-16]
 228:	add	r3, r3, #1
 22c:	str	r3, [fp, #-16]
 230:	ldr	r3, [fp, #-16]
 234:	cmp	r3, #2
 238:	ble	208 <main+0x208>
 23c:	ldr	r0, [fp, #-20]	; 0xffffffec
 240:	bl	0 <free>
 244:	mov	r3, #0
 248:	mov	r0, r3
 24c:	sub	sp, fp, #12
 250:	ldrd	r4, [sp]
 254:	ldr	fp, [sp, #8]
 258:	add	sp, sp, #12
 25c:	pop	{pc}		; (ldr pc, [sp], #4)
