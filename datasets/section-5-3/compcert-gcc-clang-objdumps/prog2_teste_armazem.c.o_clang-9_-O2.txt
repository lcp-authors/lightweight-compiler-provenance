
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/teste_armazem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4:	add	fp, sp, #28
   8:	sub	sp, sp, #4
   c:	vpush	{d8}
  10:	sub	sp, sp, #40	; 0x28
  14:	mov	r0, #4
  18:	mov	r1, #3
  1c:	bl	0 <armazem_novo>
  20:	mov	r4, r0
  24:	movw	r0, #0
  28:	movt	r0, #0
  2c:	bl	0 <puts>
  30:	vldr	s0, [pc, #312]	; 170 <main+0x170>
  34:	movw	r0, #0
  38:	movt	r0, #0
  3c:	bl	0 <contentor_novo>
  40:	vldr	s0, [pc, #300]	; 174 <main+0x174>
  44:	mov	r8, r0
  48:	movw	r0, #0
  4c:	movt	r0, #0
  50:	bl	0 <contentor_novo>
  54:	vldr	s0, [pc, #284]	; 178 <main+0x178>
  58:	mov	sl, r0
  5c:	movw	r0, #0
  60:	movt	r0, #0
  64:	bl	0 <contentor_novo>
  68:	vldr	s0, [pc, #268]	; 17c <main+0x17c>
  6c:	str	r0, [sp, #24]
  70:	movw	r0, #0
  74:	movt	r0, #0
  78:	bl	0 <contentor_novo>
  7c:	vldr	s16, [pc, #252]	; 180 <main+0x180>
  80:	mov	r5, r0
  84:	movw	r0, #0
  88:	movt	r0, #0
  8c:	vmov.f32	s0, s16
  90:	bl	0 <contentor_novo>
  94:	vldr	s0, [pc, #232]	; 184 <main+0x184>
  98:	str	r0, [sp, #8]
  9c:	movw	r0, #0
  a0:	movt	r0, #0
  a4:	bl	0 <contentor_novo>
  a8:	vldr	s0, [pc, #216]	; 188 <main+0x188>
  ac:	str	r0, [sp, #16]
  b0:	movw	r0, #0
  b4:	movt	r0, #0
  b8:	bl	0 <contentor_novo>
  bc:	vldr	s0, [pc, #200]	; 18c <main+0x18c>
  c0:	str	r0, [sp, #20]
  c4:	movw	r0, #0
  c8:	movt	r0, #0
  cc:	bl	0 <contentor_novo>
  d0:	str	r0, [sp, #12]
  d4:	movw	r0, #0
  d8:	vmov.f32	s0, s16
  dc:	movt	r0, #0
  e0:	bl	0 <contentor_novo>
  e4:	vldr	s0, [pc, #164]	; 190 <main+0x190>
  e8:	mov	r9, r0
  ec:	movw	r0, #0
  f0:	movt	r0, #0
  f4:	bl	0 <contentor_novo>
  f8:	vldr	s0, [pc, #148]	; 194 <main+0x194>
  fc:	mov	r7, r0
 100:	movw	r0, #0
 104:	movt	r0, #0
 108:	bl	0 <contentor_novo>
 10c:	vldr	s0, [pc, #132]	; 198 <main+0x198>
 110:	str	r0, [sp, #28]
 114:	movw	r0, #0
 118:	movt	r0, #0
 11c:	bl	0 <contentor_novo>
 120:	vldr	s0, [pc, #116]	; 19c <main+0x19c>
 124:	str	r0, [sp, #32]
 128:	movw	r0, #0
 12c:	movt	r0, #0
 130:	bl	0 <contentor_novo>
 134:	str	r0, [sp, #36]	; 0x24
 138:	movw	r0, #0
 13c:	movt	r0, #0
 140:	bl	0 <puts>
 144:	mov	r0, r4
 148:	bl	5b8 <imprimeArmazem>
 14c:	movw	r0, #0
 150:	movt	r0, #0
 154:	bl	0 <puts>
 158:	mov	r0, r4
 15c:	mov	r1, r8
 160:	bl	0 <armazenar_contentor>
 164:	cmp	r0, #0
 168:	beq	1b0 <main+0x1b0>
 16c:	b	1a0 <main+0x1a0>
 170:	.word	0x43660000
 174:	.word	0x437a0000
 178:	.word	0x44048000
 17c:	.word	0x44318000
 180:	.word	0x43be0000
 184:	.word	0x43c30000
 188:	.word	0x42c80000
 18c:	.word	0x42a00000
 190:	.word	0x43160000
 194:	.word	0x43870000
 198:	.word	0x43d70000
 19c:	.word	0x43480000
 1a0:	ldr	r1, [r8]
 1a4:	movw	r0, #0
 1a8:	movt	r0, #0
 1ac:	bl	0 <printf>
 1b0:	mov	r0, r4
 1b4:	mov	r1, sl
 1b8:	bl	0 <armazenar_contentor>
 1bc:	cmp	r0, #0
 1c0:	beq	1d4 <main+0x1d4>
 1c4:	ldr	r1, [sl]
 1c8:	movw	r0, #0
 1cc:	movt	r0, #0
 1d0:	bl	0 <printf>
 1d4:	ldr	r8, [sp, #24]
 1d8:	mov	r0, r4
 1dc:	mov	r1, r8
 1e0:	bl	0 <armazenar_contentor>
 1e4:	cmp	r0, #0
 1e8:	str	r7, [sp, #4]
 1ec:	beq	200 <main+0x200>
 1f0:	ldr	r1, [r8]
 1f4:	movw	r0, #0
 1f8:	movt	r0, #0
 1fc:	bl	0 <printf>
 200:	mov	r0, r4
 204:	mov	r1, r5
 208:	bl	0 <armazenar_contentor>
 20c:	ldr	r7, [sp, #12]
 210:	cmp	r0, #0
 214:	beq	228 <main+0x228>
 218:	ldr	r1, [r5]
 21c:	movw	r0, #0
 220:	movt	r0, #0
 224:	bl	0 <printf>
 228:	movw	r0, #0
 22c:	movt	r0, #0
 230:	bl	0 <puts>
 234:	mov	r0, r4
 238:	bl	5b8 <imprimeArmazem>
 23c:	movw	r0, #0
 240:	movt	r0, #0
 244:	bl	0 <puts>
 248:	ldr	r5, [sp, #8]
 24c:	mov	r0, r4
 250:	mov	r1, r5
 254:	bl	0 <armazenar_contentor>
 258:	ldr	r6, [sp, #20]
 25c:	cmp	r0, #0
 260:	beq	274 <main+0x274>
 264:	ldr	r1, [r5]
 268:	movw	r0, #0
 26c:	movt	r0, #0
 270:	bl	0 <printf>
 274:	ldr	sl, [sp, #16]
 278:	mov	r0, r4
 27c:	mov	r1, sl
 280:	bl	0 <armazenar_contentor>
 284:	ldr	r5, [sp, #32]
 288:	cmp	r0, #0
 28c:	beq	2a0 <main+0x2a0>
 290:	ldr	r1, [sl]
 294:	movw	r0, #0
 298:	movt	r0, #0
 29c:	bl	0 <printf>
 2a0:	mov	r0, r4
 2a4:	mov	r1, r6
 2a8:	bl	0 <armazenar_contentor>
 2ac:	cmp	r0, #0
 2b0:	mov	r0, r6
 2b4:	ldr	r6, [sp, #28]
 2b8:	beq	2cc <main+0x2cc>
 2bc:	ldr	r1, [r0]
 2c0:	movw	r0, #0
 2c4:	movt	r0, #0
 2c8:	bl	0 <printf>
 2cc:	mov	r0, r4
 2d0:	mov	r1, r7
 2d4:	bl	0 <armazenar_contentor>
 2d8:	cmp	r0, #0
 2dc:	beq	2f0 <main+0x2f0>
 2e0:	ldr	r1, [r7]
 2e4:	movw	r0, #0
 2e8:	movt	r0, #0
 2ec:	bl	0 <printf>
 2f0:	mov	r0, r4
 2f4:	mov	r1, r9
 2f8:	bl	0 <armazenar_contentor>
 2fc:	cmp	r0, #0
 300:	beq	314 <main+0x314>
 304:	ldr	r1, [r9]
 308:	movw	r0, #0
 30c:	movt	r0, #0
 310:	bl	0 <printf>
 314:	ldr	r7, [sp, #4]
 318:	mov	r0, r4
 31c:	mov	r1, r7
 320:	bl	0 <armazenar_contentor>
 324:	cmp	r0, #0
 328:	beq	33c <main+0x33c>
 32c:	ldr	r1, [r7]
 330:	movw	r0, #0
 334:	movt	r0, #0
 338:	bl	0 <printf>
 33c:	mov	r0, r4
 340:	mov	r1, r6
 344:	bl	0 <armazenar_contentor>
 348:	cmp	r0, #0
 34c:	beq	360 <main+0x360>
 350:	ldr	r1, [r6]
 354:	movw	r0, #0
 358:	movt	r0, #0
 35c:	bl	0 <printf>
 360:	mov	r0, r4
 364:	mov	r1, r5
 368:	bl	0 <armazenar_contentor>
 36c:	cmp	r0, #0
 370:	beq	384 <main+0x384>
 374:	ldr	r1, [r5]
 378:	movw	r0, #0
 37c:	movt	r0, #0
 380:	bl	0 <printf>
 384:	movw	r0, #0
 388:	movt	r0, #0
 38c:	bl	0 <puts>
 390:	mov	r0, r4
 394:	bl	5b8 <imprimeArmazem>
 398:	mov	r0, r4
 39c:	bl	0 <armazem_cheio>
 3a0:	movw	r2, #0
 3a4:	movw	r1, #0
 3a8:	cmp	r0, #0
 3ac:	movt	r2, #0
 3b0:	movt	r1, #0
 3b4:	moveq	r1, r2
 3b8:	mov	r0, r1
 3bc:	bl	0 <puts>
 3c0:	ldr	r1, [sp, #36]	; 0x24
 3c4:	mov	r0, r4
 3c8:	bl	0 <armazenar_contentor>
 3cc:	cmp	r0, #0
 3d0:	beq	3e4 <main+0x3e4>
 3d4:	ldr	r1, [r8]
 3d8:	movw	r0, #0
 3dc:	movt	r0, #0
 3e0:	bl	0 <printf>
 3e4:	movw	r0, #0
 3e8:	movt	r0, #0
 3ec:	bl	0 <puts>
 3f0:	mov	r0, r4
 3f4:	bl	0 <expedir_contentor>
 3f8:	movw	r5, #0
 3fc:	mov	r6, r0
 400:	movt	r5, #0
 404:	mov	r0, r5
 408:	bl	0 <puts>
 40c:	mov	r0, r6
 410:	bl	0 <contentor_imprime>
 414:	mov	r0, r4
 418:	bl	0 <expedir_contentor>
 41c:	mov	r6, r0
 420:	mov	r0, r5
 424:	bl	0 <puts>
 428:	mov	r0, r6
 42c:	bl	0 <contentor_imprime>
 430:	mov	r0, r4
 434:	bl	0 <expedir_contentor>
 438:	mov	r6, r0
 43c:	mov	r0, r5
 440:	bl	0 <puts>
 444:	mov	r0, r6
 448:	bl	0 <contentor_imprime>
 44c:	mov	r0, r4
 450:	bl	0 <expedir_contentor>
 454:	mov	r6, r0
 458:	mov	r0, r5
 45c:	bl	0 <puts>
 460:	mov	r0, r6
 464:	bl	0 <contentor_imprime>
 468:	mov	r0, r4
 46c:	bl	0 <expedir_contentor>
 470:	mov	r6, r0
 474:	mov	r0, r5
 478:	bl	0 <puts>
 47c:	mov	r0, r6
 480:	bl	0 <contentor_imprime>
 484:	mov	r0, r4
 488:	bl	0 <expedir_contentor>
 48c:	mov	r6, r0
 490:	mov	r0, r5
 494:	bl	0 <puts>
 498:	mov	r0, r6
 49c:	bl	0 <contentor_imprime>
 4a0:	mov	r0, r4
 4a4:	bl	0 <expedir_contentor>
 4a8:	mov	r6, r0
 4ac:	mov	r0, r5
 4b0:	bl	0 <puts>
 4b4:	mov	r0, r6
 4b8:	bl	0 <contentor_imprime>
 4bc:	mov	r0, r4
 4c0:	bl	0 <expedir_contentor>
 4c4:	mov	r6, r0
 4c8:	mov	r0, r5
 4cc:	bl	0 <puts>
 4d0:	mov	r0, r6
 4d4:	bl	0 <contentor_imprime>
 4d8:	movw	r0, #0
 4dc:	movt	r0, #0
 4e0:	bl	0 <puts>
 4e4:	mov	r0, r4
 4e8:	bl	5b8 <imprimeArmazem>
 4ec:	movw	r0, #0
 4f0:	movt	r0, #0
 4f4:	bl	0 <puts>
 4f8:	mov	r0, r4
 4fc:	bl	0 <expedir_contentor>
 500:	mov	r6, r0
 504:	mov	r0, r5
 508:	bl	0 <puts>
 50c:	mov	r0, r6
 510:	bl	0 <contentor_imprime>
 514:	mov	r0, r4
 518:	bl	0 <expedir_contentor>
 51c:	mov	r6, r0
 520:	mov	r0, r5
 524:	bl	0 <puts>
 528:	mov	r0, r6
 52c:	bl	0 <contentor_imprime>
 530:	mov	r0, r4
 534:	bl	0 <expedir_contentor>
 538:	mov	r6, r0
 53c:	mov	r0, r5
 540:	bl	0 <puts>
 544:	mov	r0, r6
 548:	bl	0 <contentor_imprime>
 54c:	mov	r0, r4
 550:	bl	0 <expedir_contentor>
 554:	mov	r6, r0
 558:	mov	r0, r5
 55c:	bl	0 <puts>
 560:	mov	r0, r6
 564:	bl	0 <contentor_imprime>
 568:	movw	r0, #0
 56c:	movt	r0, #0
 570:	bl	0 <puts>
 574:	mov	r0, r4
 578:	bl	5b8 <imprimeArmazem>
 57c:	mov	r0, r4
 580:	bl	0 <armazem_vazio>
 584:	movw	r2, #0
 588:	movw	r1, #0
 58c:	cmp	r0, #0
 590:	movt	r2, #0
 594:	movt	r1, #0
 598:	moveq	r1, r2
 59c:	mov	r0, r1
 5a0:	bl	0 <puts>
 5a4:	mov	r0, #0
 5a8:	sub	sp, fp, #40	; 0x28
 5ac:	vpop	{d8}
 5b0:	add	sp, sp, #4
 5b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000005b8 <imprimeArmazem>:
 5b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 5bc:	add	fp, sp, #28
 5c0:	sub	sp, sp, #4
 5c4:	cmp	r0, #0
 5c8:	beq	690 <imprimeArmazem+0xd8>
 5cc:	ldr	r4, [r0, #8]
 5d0:	mov	sl, r0
 5d4:	cmp	r4, #0
 5d8:	beq	690 <imprimeArmazem+0xd8>
 5dc:	ldr	r9, [r4, #4]
 5e0:	mov	r1, #4
 5e4:	mov	r0, r9
 5e8:	bl	0 <calloc>
 5ec:	str	r0, [sp]
 5f0:	ldr	r0, [r4]
 5f4:	cmp	r0, #0
 5f8:	beq	618 <imprimeArmazem+0x60>
 5fc:	ldr	r1, [sp]
 600:	ldr	r2, [r0]
 604:	ldr	r2, [r2, #4]
 608:	str	r2, [r1], #4
 60c:	ldr	r0, [r0, #4]
 610:	cmp	r0, #0
 614:	bne	600 <imprimeArmazem+0x48>
 618:	mov	r0, #10
 61c:	bl	0 <putchar>
 620:	ldr	r5, [sl, #4]
 624:	cmp	r5, #1
 628:	blt	698 <imprimeArmazem+0xe0>
 62c:	movw	r7, #0
 630:	movw	r4, #0
 634:	movt	r7, #0
 638:	movt	r4, #0
 63c:	b	654 <imprimeArmazem+0x9c>
 640:	mov	r0, #10
 644:	bl	0 <putchar>
 648:	sub	r5, r5, #1
 64c:	cmp	r5, #0
 650:	ble	698 <imprimeArmazem+0xe0>
 654:	movw	r0, #0
 658:	movt	r0, #0
 65c:	bl	0 <printf>
 660:	cmp	r9, #1
 664:	blt	640 <imprimeArmazem+0x88>
 668:	ldr	r8, [sp]
 66c:	mov	r6, r9
 670:	ldr	r0, [r8], #4
 674:	cmp	r0, r5
 678:	mov	r0, r4
 67c:	movlt	r0, r7
 680:	bl	0 <printf>
 684:	subs	r6, r6, #1
 688:	bne	670 <imprimeArmazem+0xb8>
 68c:	b	640 <imprimeArmazem+0x88>
 690:	sub	sp, fp, #28
 694:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 698:	movw	r0, #0
 69c:	movt	r0, #0
 6a0:	bl	0 <printf>
 6a4:	ldr	r0, [sl]
 6a8:	cmp	r0, #1
 6ac:	blt	6d4 <imprimeArmazem+0x11c>
 6b0:	movw	r6, #0
 6b4:	mov	r4, #0
 6b8:	movt	r6, #0
 6bc:	mov	r0, r6
 6c0:	bl	0 <printf>
 6c4:	ldr	r0, [sl]
 6c8:	add	r4, r4, #1
 6cc:	cmp	r4, r0
 6d0:	blt	6bc <imprimeArmazem+0x104>
 6d4:	movw	r0, #0
 6d8:	movt	r0, #0
 6dc:	bl	0 <puts>
 6e0:	ldr	r0, [sp]
 6e4:	sub	sp, fp, #28
 6e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 6ec:	b	0 <free>
