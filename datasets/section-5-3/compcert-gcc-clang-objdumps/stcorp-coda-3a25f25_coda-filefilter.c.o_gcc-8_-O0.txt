
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-filefilter.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <name_buffer_init>:
   0:	str	fp, [sp, #-8]!
   4:	str	lr, [sp, #4]
   8:	add	fp, sp, #4
   c:	sub	sp, sp, #8
  10:	str	r0, [fp, #-8]
  14:	ldr	r3, [fp, #-8]
  18:	cmp	r3, #0
  1c:	bne	40 <name_buffer_init+0x40>
  20:	movw	r3, #0
  24:	movt	r3, #0
  28:	mov	r2, #62	; 0x3e
  2c:	movw	r1, #0
  30:	movt	r1, #0
  34:	movw	r0, #0
  38:	movt	r0, #0
  3c:	bl	0 <__assert_fail>
  40:	ldr	r3, [fp, #-8]
  44:	mov	r2, #0
  48:	str	r2, [r3]
  4c:	ldr	r3, [fp, #-8]
  50:	mov	r2, #1024	; 0x400
  54:	str	r2, [r3, #4]
  58:	mov	r0, #1024	; 0x400
  5c:	bl	0 <malloc>
  60:	mov	r3, r0
  64:	mov	r2, r3
  68:	ldr	r3, [fp, #-8]
  6c:	str	r2, [r3, #8]
  70:	ldr	r3, [fp, #-8]
  74:	ldr	r3, [r3, #8]
  78:	cmp	r3, #0
  7c:	bne	a0 <name_buffer_init+0xa0>
  80:	movw	r3, #0
  84:	movt	r3, #0
  88:	mov	r2, #67	; 0x43
  8c:	movw	r1, #0
  90:	movt	r1, #0
  94:	movw	r0, #0
  98:	movt	r0, #0
  9c:	bl	0 <__assert_fail>
  a0:	nop	{0}
  a4:	sub	sp, fp, #4
  a8:	ldr	fp, [sp]
  ac:	add	sp, sp, #4
  b0:	pop	{pc}		; (ldr pc, [sp], #4)

000000b4 <name_buffer_done>:
  b4:	str	fp, [sp, #-8]!
  b8:	str	lr, [sp, #4]
  bc:	add	fp, sp, #4
  c0:	sub	sp, sp, #8
  c4:	str	r0, [fp, #-8]
  c8:	ldr	r3, [fp, #-8]
  cc:	cmp	r3, #0
  d0:	bne	f4 <name_buffer_done+0x40>
  d4:	movw	r3, #0
  d8:	movt	r3, #0
  dc:	mov	r2, #72	; 0x48
  e0:	movw	r1, #0
  e4:	movt	r1, #0
  e8:	movw	r0, #0
  ec:	movt	r0, #0
  f0:	bl	0 <__assert_fail>
  f4:	ldr	r3, [fp, #-8]
  f8:	mov	r2, #0
  fc:	str	r2, [r3]
 100:	ldr	r3, [fp, #-8]
 104:	mov	r2, #0
 108:	str	r2, [r3, #4]
 10c:	ldr	r3, [fp, #-8]
 110:	ldr	r3, [r3, #8]
 114:	mov	r0, r3
 118:	bl	0 <free>
 11c:	ldr	r3, [fp, #-8]
 120:	mov	r2, #0
 124:	str	r2, [r3, #8]
 128:	nop	{0}
 12c:	sub	sp, fp, #4
 130:	ldr	fp, [sp]
 134:	add	sp, sp, #4
 138:	pop	{pc}		; (ldr pc, [sp], #4)

0000013c <append_string_to_name_buffer>:
 13c:	str	fp, [sp, #-8]!
 140:	str	lr, [sp, #4]
 144:	add	fp, sp, #4
 148:	sub	sp, sp, #24
 14c:	str	r0, [fp, #-24]	; 0xffffffe8
 150:	str	r1, [fp, #-28]	; 0xffffffe4
 154:	ldr	r3, [fp, #-24]	; 0xffffffe8
 158:	cmp	r3, #0
 15c:	bne	180 <append_string_to_name_buffer+0x44>
 160:	movw	r3, #0
 164:	movt	r3, #0
 168:	mov	r2, #84	; 0x54
 16c:	movw	r1, #0
 170:	movt	r1, #0
 174:	movw	r0, #0
 178:	movt	r0, #0
 17c:	bl	0 <__assert_fail>
 180:	ldr	r3, [fp, #-28]	; 0xffffffe4
 184:	cmp	r3, #0
 188:	bne	1ac <append_string_to_name_buffer+0x70>
 18c:	movw	r3, #0
 190:	movt	r3, #0
 194:	mov	r2, #85	; 0x55
 198:	movw	r1, #0
 19c:	movt	r1, #0
 1a0:	movw	r0, #0
 1a4:	movt	r0, #0
 1a8:	bl	0 <__assert_fail>
 1ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
 1b0:	bl	0 <strlen>
 1b4:	mov	r3, r0
 1b8:	str	r3, [fp, #-12]
 1bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1c0:	ldr	r2, [r3]
 1c4:	ldr	r3, [fp, #-12]
 1c8:	add	r2, r2, r3
 1cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1d0:	ldr	r3, [r3, #4]
 1d4:	cmp	r2, r3
 1d8:	blt	290 <append_string_to_name_buffer+0x154>
 1dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1e0:	ldr	r3, [r3, #4]
 1e4:	str	r3, [fp, #-8]
 1e8:	b	1f8 <append_string_to_name_buffer+0xbc>
 1ec:	ldr	r3, [fp, #-8]
 1f0:	add	r3, r3, #1024	; 0x400
 1f4:	str	r3, [fp, #-8]
 1f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1fc:	ldr	r2, [r3]
 200:	ldr	r3, [fp, #-12]
 204:	add	r3, r2, r3
 208:	ldr	r2, [fp, #-8]
 20c:	cmp	r2, r3
 210:	blt	1ec <append_string_to_name_buffer+0xb0>
 214:	ldr	r3, [fp, #-8]
 218:	mov	r0, r3
 21c:	bl	0 <malloc>
 220:	mov	r3, r0
 224:	str	r3, [fp, #-16]
 228:	ldr	r3, [fp, #-16]
 22c:	cmp	r3, #0
 230:	bne	254 <append_string_to_name_buffer+0x118>
 234:	movw	r3, #0
 238:	movt	r3, #0
 23c:	mov	r2, #100	; 0x64
 240:	movw	r1, #0
 244:	movt	r1, #0
 248:	movw	r0, #0
 24c:	movt	r0, #0
 250:	bl	0 <__assert_fail>
 254:	ldr	r3, [fp, #-24]	; 0xffffffe8
 258:	ldr	r3, [r3, #8]
 25c:	mov	r1, r3
 260:	ldr	r0, [fp, #-16]
 264:	bl	0 <strcpy>
 268:	ldr	r3, [fp, #-24]	; 0xffffffe8
 26c:	ldr	r3, [r3, #8]
 270:	mov	r0, r3
 274:	bl	0 <free>
 278:	ldr	r3, [fp, #-24]	; 0xffffffe8
 27c:	ldr	r2, [fp, #-16]
 280:	str	r2, [r3, #8]
 284:	ldr	r3, [fp, #-24]	; 0xffffffe8
 288:	ldr	r2, [fp, #-8]
 28c:	str	r2, [r3, #4]
 290:	ldr	r3, [fp, #-24]	; 0xffffffe8
 294:	ldr	r3, [r3, #8]
 298:	ldr	r2, [fp, #-24]	; 0xffffffe8
 29c:	ldr	r2, [r2]
 2a0:	add	r3, r3, r2
 2a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
 2a8:	mov	r0, r3
 2ac:	bl	0 <strcpy>
 2b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2b4:	ldr	r2, [r3]
 2b8:	ldr	r3, [fp, #-12]
 2bc:	add	r2, r2, r3
 2c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2c4:	str	r2, [r3]
 2c8:	nop	{0}
 2cc:	sub	sp, fp, #4
 2d0:	ldr	fp, [sp]
 2d4:	add	sp, sp, #4
 2d8:	pop	{pc}		; (ldr pc, [sp], #4)

000002dc <coda_match_file>:
 2dc:	strd	r4, [sp, #-16]!
 2e0:	str	fp, [sp, #8]
 2e4:	str	lr, [sp, #12]
 2e8:	add	fp, sp, #12
 2ec:	sub	sp, sp, #552	; 0x228
 2f0:	str	r0, [fp, #-552]	; 0xfffffdd8
 2f4:	str	r1, [fp, #-556]	; 0xfffffdd4
 2f8:	str	r2, [fp, #-560]	; 0xfffffdd0
 2fc:	str	r3, [fp, #-564]	; 0xfffffdcc
 300:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 304:	ldr	r3, [r3, #8]
 308:	sub	r2, fp, #20
 30c:	mov	r1, r2
 310:	mov	r0, r3
 314:	bl	0 <coda_open>
 318:	str	r0, [fp, #-16]
 31c:	ldr	r3, [fp, #-16]
 320:	cmp	r3, #0
 324:	beq	36c <coda_match_file+0x90>
 328:	ldr	r3, [pc, #488]	; 518 <coda_match_file+0x23c>
 32c:	ldr	r3, [pc, r3]
 330:	mrc	15, 0, r2, cr13, cr0, {3}
 334:	ldr	r3, [r2, r3]
 338:	cmn	r3, #21
 33c:	bne	36c <coda_match_file+0x90>
 340:	mov	r0, #0
 344:	bl	0 <coda_set_option_use_mmap>
 348:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 34c:	ldr	r3, [r3, #8]
 350:	sub	r2, fp, #20
 354:	mov	r1, r2
 358:	mov	r0, r3
 35c:	bl	0 <coda_open>
 360:	str	r0, [fp, #-16]
 364:	mov	r0, #1
 368:	bl	0 <coda_set_option_use_mmap>
 36c:	ldr	r3, [fp, #-16]
 370:	cmp	r3, #0
 374:	beq	3f4 <coda_match_file+0x118>
 378:	ldr	r3, [pc, #412]	; 51c <coda_match_file+0x240>
 37c:	ldr	r3, [pc, r3]
 380:	mrc	15, 0, r2, cr13, cr0, {3}
 384:	ldr	r3, [r2, r3]
 388:	cmn	r3, #200	; 0xc8
 38c:	bne	3b4 <coda_match_file+0xd8>
 390:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 394:	ldr	r0, [r3, #8]
 398:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 39c:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 3a0:	mov	r2, #0
 3a4:	mov	r1, #3
 3a8:	blx	r4
 3ac:	mov	r3, r0
 3b0:	b	500 <coda_match_file+0x224>
 3b4:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 3b8:	ldr	r5, [r3, #8]
 3bc:	ldr	r3, [pc, #348]	; 520 <coda_match_file+0x244>
 3c0:	ldr	r3, [pc, r3]
 3c4:	mrc	15, 0, r2, cr13, cr0, {3}
 3c8:	ldr	r3, [r2, r3]
 3cc:	mov	r0, r3
 3d0:	bl	0 <coda_errno_to_string>
 3d4:	mov	r2, r0
 3d8:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 3dc:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 3e0:	mov	r1, #1
 3e4:	mov	r0, r5
 3e8:	blx	r4
 3ec:	mov	r3, r0
 3f0:	b	500 <coda_match_file+0x224>
 3f4:	ldr	r2, [fp, #-20]	; 0xffffffec
 3f8:	sub	r3, fp, #540	; 0x21c
 3fc:	mov	r1, r2
 400:	mov	r0, r3
 404:	bl	0 <coda_cursor_set_product>
 408:	mov	r3, r0
 40c:	cmp	r3, #0
 410:	beq	460 <coda_match_file+0x184>
 414:	ldr	r3, [fp, #-20]	; 0xffffffec
 418:	mov	r0, r3
 41c:	bl	0 <coda_close>
 420:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 424:	ldr	r5, [r3, #8]
 428:	ldr	r3, [pc, #244]	; 524 <coda_match_file+0x248>
 42c:	ldr	r3, [pc, r3]
 430:	mrc	15, 0, r2, cr13, cr0, {3}
 434:	ldr	r3, [r2, r3]
 438:	mov	r0, r3
 43c:	bl	0 <coda_errno_to_string>
 440:	mov	r2, r0
 444:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 448:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 44c:	mov	r1, #0
 450:	mov	r0, r5
 454:	blx	r4
 458:	mov	r3, r0
 45c:	b	500 <coda_match_file+0x224>
 460:	sub	r2, fp, #544	; 0x220
 464:	sub	r3, fp, #540	; 0x21c
 468:	mov	r1, r3
 46c:	ldr	r0, [fp, #-552]	; 0xfffffdd8
 470:	bl	0 <coda_expression_eval_bool>
 474:	mov	r3, r0
 478:	cmp	r3, #0
 47c:	beq	4c0 <coda_match_file+0x1e4>
 480:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 484:	ldr	r5, [r3, #8]
 488:	ldr	r3, [pc, #152]	; 528 <coda_match_file+0x24c>
 48c:	ldr	r3, [pc, r3]
 490:	mrc	15, 0, r2, cr13, cr0, {3}
 494:	ldr	r3, [r2, r3]
 498:	mov	r0, r3
 49c:	bl	0 <coda_errno_to_string>
 4a0:	mov	r2, r0
 4a4:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 4a8:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 4ac:	mov	r1, #0
 4b0:	mov	r0, r5
 4b4:	blx	r4
 4b8:	mov	r3, r0
 4bc:	b	500 <coda_match_file+0x224>
 4c0:	ldr	r3, [fp, #-20]	; 0xffffffec
 4c4:	mov	r0, r3
 4c8:	bl	0 <coda_close>
 4cc:	ldr	r3, [fp, #-556]	; 0xfffffdd4
 4d0:	ldr	r0, [r3, #8]
 4d4:	ldr	r3, [fp, #-544]	; 0xfffffde0
 4d8:	cmp	r3, #0
 4dc:	beq	4e8 <coda_match_file+0x20c>
 4e0:	mov	r1, #4
 4e4:	b	4ec <coda_match_file+0x210>
 4e8:	mov	r1, #5
 4ec:	ldr	r4, [fp, #-560]	; 0xfffffdd0
 4f0:	ldr	r3, [fp, #-564]	; 0xfffffdcc
 4f4:	mov	r2, #0
 4f8:	blx	r4
 4fc:	mov	r3, r0
 500:	mov	r0, r3
 504:	sub	sp, fp, #12
 508:	ldrd	r4, [sp]
 50c:	ldr	fp, [sp, #8]
 510:	add	sp, sp, #12
 514:	pop	{pc}		; (ldr pc, [sp], #4)
 518:	.word	0x000001e4
 51c:	.word	0x00000198
 520:	.word	0x00000158
 524:	.word	0x000000f0
 528:	.word	0x00000094

0000052c <coda_match_dir>:
 52c:	str	r4, [sp, #-12]!
 530:	str	fp, [sp, #4]
 534:	str	lr, [sp, #8]
 538:	add	fp, sp, #8
 53c:	sub	sp, sp, #44	; 0x2c
 540:	str	r0, [fp, #-32]	; 0xffffffe0
 544:	str	r1, [fp, #-36]	; 0xffffffdc
 548:	str	r2, [fp, #-40]	; 0xffffffd8
 54c:	str	r3, [fp, #-44]	; 0xffffffd4
 550:	ldr	r3, [fp, #-36]	; 0xffffffdc
 554:	ldr	r3, [r3, #8]
 558:	mov	r0, r3
 55c:	bl	0 <opendir>
 560:	str	r0, [fp, #-16]
 564:	ldr	r3, [fp, #-16]
 568:	cmp	r3, #0
 56c:	bne	598 <coda_match_dir+0x6c>
 570:	ldr	r3, [fp, #-36]	; 0xffffffdc
 574:	ldr	r0, [r3, #8]
 578:	ldr	r4, [fp, #-40]	; 0xffffffd8
 57c:	ldr	r3, [fp, #-44]	; 0xffffffd4
 580:	movw	r2, #0
 584:	movt	r2, #0
 588:	mov	r1, #2
 58c:	blx	r4
 590:	mov	r3, r0
 594:	b	69c <coda_match_dir+0x170>
 598:	ldr	r3, [fp, #-36]	; 0xffffffdc
 59c:	ldr	r3, [r3]
 5a0:	str	r3, [fp, #-20]	; 0xffffffec
 5a4:	b	678 <coda_match_dir+0x14c>
 5a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5ac:	add	r3, r3, #11
 5b0:	movw	r1, #0
 5b4:	movt	r1, #0
 5b8:	mov	r0, r3
 5bc:	bl	0 <strcmp>
 5c0:	mov	r3, r0
 5c4:	cmp	r3, #0
 5c8:	beq	678 <coda_match_dir+0x14c>
 5cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 5d0:	add	r3, r3, #11
 5d4:	movw	r1, #0
 5d8:	movt	r1, #0
 5dc:	mov	r0, r3
 5e0:	bl	0 <strcmp>
 5e4:	mov	r3, r0
 5e8:	cmp	r3, #0
 5ec:	bne	5f4 <coda_match_dir+0xc8>
 5f0:	b	678 <coda_match_dir+0x14c>
 5f4:	movw	r1, #0
 5f8:	movt	r1, #0
 5fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
 600:	bl	13c <append_string_to_name_buffer>
 604:	ldr	r3, [fp, #-24]	; 0xffffffe8
 608:	add	r3, r3, #11
 60c:	mov	r1, r3
 610:	ldr	r0, [fp, #-36]	; 0xffffffdc
 614:	bl	13c <append_string_to_name_buffer>
 618:	ldr	r3, [fp, #-44]	; 0xffffffd4
 61c:	str	r3, [sp]
 620:	ldr	r3, [fp, #-40]	; 0xffffffd8
 624:	ldr	r2, [fp, #-36]	; 0xffffffdc
 628:	ldr	r1, [fp, #-32]	; 0xffffffe0
 62c:	mov	r0, #1
 630:	bl	6b4 <coda_match_filepath>
 634:	str	r0, [fp, #-28]	; 0xffffffe4
 638:	ldr	r3, [fp, #-28]	; 0xffffffe4
 63c:	cmp	r3, #0
 640:	beq	654 <coda_match_dir+0x128>
 644:	ldr	r0, [fp, #-16]
 648:	bl	0 <closedir>
 64c:	ldr	r3, [fp, #-28]	; 0xffffffe4
 650:	b	69c <coda_match_dir+0x170>
 654:	ldr	r3, [fp, #-36]	; 0xffffffdc
 658:	ldr	r2, [fp, #-20]	; 0xffffffec
 65c:	str	r2, [r3]
 660:	ldr	r3, [fp, #-36]	; 0xffffffdc
 664:	ldr	r2, [r3, #8]
 668:	ldr	r3, [fp, #-20]	; 0xffffffec
 66c:	add	r3, r2, r3
 670:	mov	r2, #0
 674:	strb	r2, [r3]
 678:	ldr	r0, [fp, #-16]
 67c:	bl	0 <readdir>
 680:	str	r0, [fp, #-24]	; 0xffffffe8
 684:	ldr	r3, [fp, #-24]	; 0xffffffe8
 688:	cmp	r3, #0
 68c:	bne	5a8 <coda_match_dir+0x7c>
 690:	ldr	r0, [fp, #-16]
 694:	bl	0 <closedir>
 698:	mov	r3, #0
 69c:	mov	r0, r3
 6a0:	sub	sp, fp, #8
 6a4:	ldr	r4, [sp]
 6a8:	ldr	fp, [sp, #4]
 6ac:	add	sp, sp, #8
 6b0:	pop	{pc}		; (ldr pc, [sp], #4)

000006b4 <coda_match_filepath>:
 6b4:	strd	r4, [sp, #-16]!
 6b8:	str	fp, [sp, #8]
 6bc:	str	lr, [sp, #12]
 6c0:	add	fp, sp, #12
 6c4:	sub	sp, sp, #104	; 0x68
 6c8:	str	r0, [fp, #-104]	; 0xffffff98
 6cc:	str	r1, [fp, #-108]	; 0xffffff94
 6d0:	str	r2, [fp, #-112]	; 0xffffff90
 6d4:	str	r3, [fp, #-116]	; 0xffffff8c
 6d8:	ldr	r3, [fp, #-112]	; 0xffffff90
 6dc:	ldr	r3, [r3, #8]
 6e0:	sub	r2, fp, #100	; 0x64
 6e4:	mov	r1, r2
 6e8:	mov	r0, r3
 6ec:	bl	0 <stat>
 6f0:	mov	r3, r0
 6f4:	cmp	r3, #0
 6f8:	beq	788 <coda_match_filepath+0xd4>
 6fc:	bl	0 <__errno_location>
 700:	mov	r3, r0
 704:	ldr	r3, [r3]
 708:	cmp	r3, #2
 70c:	beq	724 <coda_match_filepath+0x70>
 710:	bl	0 <__errno_location>
 714:	mov	r3, r0
 718:	ldr	r3, [r3]
 71c:	cmp	r3, #20
 720:	bne	74c <coda_match_filepath+0x98>
 724:	ldr	r3, [fp, #-112]	; 0xffffff90
 728:	ldr	r0, [r3, #8]
 72c:	ldr	r4, [fp, #-116]	; 0xffffff8c
 730:	ldr	r3, [fp, #4]
 734:	movw	r2, #0
 738:	movt	r2, #0
 73c:	mov	r1, #0
 740:	blx	r4
 744:	mov	r3, r0
 748:	b	818 <coda_match_filepath+0x164>
 74c:	ldr	r3, [fp, #-112]	; 0xffffff90
 750:	ldr	r5, [r3, #8]
 754:	bl	0 <__errno_location>
 758:	mov	r3, r0
 75c:	ldr	r3, [r3]
 760:	mov	r0, r3
 764:	bl	0 <strerror>
 768:	mov	r2, r0
 76c:	ldr	r4, [fp, #-116]	; 0xffffff8c
 770:	ldr	r3, [fp, #4]
 774:	mov	r1, #0
 778:	mov	r0, r5
 77c:	blx	r4
 780:	mov	r3, r0
 784:	b	818 <coda_match_filepath+0x164>
 788:	ldr	r3, [fp, #-84]	; 0xffffffac
 78c:	and	r3, r3, #16384	; 0x4000
 790:	cmp	r3, #0
 794:	beq	7b4 <coda_match_filepath+0x100>
 798:	ldr	r3, [fp, #4]
 79c:	ldr	r2, [fp, #-116]	; 0xffffff8c
 7a0:	ldr	r1, [fp, #-112]	; 0xffffff90
 7a4:	ldr	r0, [fp, #-108]	; 0xffffff94
 7a8:	bl	52c <coda_match_dir>
 7ac:	mov	r3, r0
 7b0:	b	818 <coda_match_filepath+0x164>
 7b4:	ldr	r3, [fp, #-84]	; 0xffffffac
 7b8:	and	r3, r3, #32768	; 0x8000
 7bc:	cmp	r3, #0
 7c0:	beq	7e0 <coda_match_filepath+0x12c>
 7c4:	ldr	r3, [fp, #4]
 7c8:	ldr	r2, [fp, #-116]	; 0xffffff8c
 7cc:	ldr	r1, [fp, #-112]	; 0xffffff90
 7d0:	ldr	r0, [fp, #-108]	; 0xffffff94
 7d4:	bl	2dc <coda_match_file>
 7d8:	mov	r3, r0
 7dc:	b	818 <coda_match_filepath+0x164>
 7e0:	ldr	r3, [fp, #-104]	; 0xffffff98
 7e4:	cmp	r3, #0
 7e8:	bne	814 <coda_match_filepath+0x160>
 7ec:	ldr	r3, [fp, #-112]	; 0xffffff90
 7f0:	ldr	r0, [r3, #8]
 7f4:	ldr	r4, [fp, #-116]	; 0xffffff8c
 7f8:	ldr	r3, [fp, #4]
 7fc:	movw	r2, #0
 800:	movt	r2, #0
 804:	mov	r1, #0
 808:	blx	r4
 80c:	mov	r3, r0
 810:	b	818 <coda_match_filepath+0x164>
 814:	mov	r3, #0
 818:	mov	r0, r3
 81c:	sub	sp, fp, #12
 820:	ldrd	r4, [sp]
 824:	ldr	fp, [sp, #8]
 828:	add	sp, sp, #12
 82c:	pop	{pc}		; (ldr pc, [sp], #4)

00000830 <coda_match_filefilter>:
 830:	str	fp, [sp, #-8]!
 834:	str	lr, [sp, #4]
 838:	add	fp, sp, #4
 83c:	sub	sp, sp, #56	; 0x38
 840:	str	r0, [fp, #-40]	; 0xffffffd8
 844:	str	r1, [fp, #-44]	; 0xffffffd4
 848:	str	r2, [fp, #-48]	; 0xffffffd0
 84c:	str	r3, [fp, #-52]	; 0xffffffcc
 850:	ldr	r3, [fp, #-44]	; 0xffffffd4
 854:	cmp	r3, #0
 858:	ble	874 <coda_match_filefilter+0x44>
 85c:	ldr	r3, [fp, #-48]	; 0xffffffd0
 860:	cmp	r3, #0
 864:	beq	874 <coda_match_filefilter+0x44>
 868:	ldr	r3, [fp, #-52]	; 0xffffffcc
 86c:	cmp	r3, #0
 870:	bne	898 <coda_match_filefilter+0x68>
 874:	movw	r3, #386	; 0x182
 878:	movw	r2, #0
 87c:	movt	r2, #0
 880:	movw	r1, #0
 884:	movt	r1, #0
 888:	mvn	r0, #99	; 0x63
 88c:	bl	0 <coda_set_error>
 890:	mvn	r3, #0
 894:	b	a1c <coda_match_filefilter+0x1ec>
 898:	ldr	r3, [fp, #-40]	; 0xffffffd8
 89c:	cmp	r3, #0
 8a0:	beq	8b4 <coda_match_filefilter+0x84>
 8a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
 8a8:	ldrb	r3, [r3]
 8ac:	cmp	r3, #0
 8b0:	bne	8c0 <coda_match_filefilter+0x90>
 8b4:	movw	r3, #0
 8b8:	movt	r3, #0
 8bc:	str	r3, [fp, #-40]	; 0xffffffd8
 8c0:	sub	r3, fp, #32
 8c4:	mov	r1, r3
 8c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
 8cc:	bl	0 <coda_expression_from_string>
 8d0:	mov	r3, r0
 8d4:	cmp	r3, #0
 8d8:	beq	8e4 <coda_match_filefilter+0xb4>
 8dc:	mvn	r3, #0
 8e0:	b	a1c <coda_match_filefilter+0x1ec>
 8e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
 8e8:	sub	r2, fp, #28
 8ec:	mov	r1, r2
 8f0:	mov	r0, r3
 8f4:	bl	0 <coda_expression_get_type>
 8f8:	mov	r3, r0
 8fc:	cmp	r3, #0
 900:	beq	918 <coda_match_filefilter+0xe8>
 904:	ldr	r3, [fp, #-32]	; 0xffffffe0
 908:	mov	r0, r3
 90c:	bl	0 <coda_expression_delete>
 910:	mvn	r3, #0
 914:	b	a1c <coda_match_filefilter+0x1ec>
 918:	ldr	r3, [fp, #-28]	; 0xffffffe4
 91c:	cmp	r3, #0
 920:	beq	948 <coda_match_filefilter+0x118>
 924:	movw	r1, #0
 928:	movt	r1, #0
 92c:	mvn	r0, #400	; 0x190
 930:	bl	0 <coda_set_error>
 934:	ldr	r3, [fp, #-32]	; 0xffffffe0
 938:	mov	r0, r3
 93c:	bl	0 <coda_expression_delete>
 940:	mvn	r3, #0
 944:	b	a1c <coda_match_filefilter+0x1ec>
 948:	sub	r3, fp, #24
 94c:	mov	r0, r3
 950:	bl	0 <name_buffer_init>
 954:	mov	r3, #0
 958:	str	r3, [fp, #-8]
 95c:	b	9f0 <coda_match_filefilter+0x1c0>
 960:	ldr	r3, [fp, #-8]
 964:	lsl	r3, r3, #2
 968:	ldr	r2, [fp, #-48]	; 0xffffffd0
 96c:	add	r3, r2, r3
 970:	ldr	r2, [r3]
 974:	sub	r3, fp, #24
 978:	mov	r1, r2
 97c:	mov	r0, r3
 980:	bl	13c <append_string_to_name_buffer>
 984:	ldr	r1, [fp, #-32]	; 0xffffffe0
 988:	sub	r2, fp, #24
 98c:	ldr	r3, [fp, #4]
 990:	str	r3, [sp]
 994:	ldr	r3, [fp, #-52]	; 0xffffffcc
 998:	mov	r0, #0
 99c:	bl	6b4 <coda_match_filepath>
 9a0:	str	r0, [fp, #-12]
 9a4:	ldr	r3, [fp, #-12]
 9a8:	cmp	r3, #0
 9ac:	beq	9d0 <coda_match_filefilter+0x1a0>
 9b0:	sub	r3, fp, #24
 9b4:	mov	r0, r3
 9b8:	bl	b4 <name_buffer_done>
 9bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
 9c0:	mov	r0, r3
 9c4:	bl	0 <coda_expression_delete>
 9c8:	ldr	r3, [fp, #-12]
 9cc:	b	a1c <coda_match_filefilter+0x1ec>
 9d0:	mov	r3, #0
 9d4:	str	r3, [fp, #-24]	; 0xffffffe8
 9d8:	ldr	r3, [fp, #-16]
 9dc:	mov	r2, #0
 9e0:	strb	r2, [r3]
 9e4:	ldr	r3, [fp, #-8]
 9e8:	add	r3, r3, #1
 9ec:	str	r3, [fp, #-8]
 9f0:	ldr	r2, [fp, #-8]
 9f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
 9f8:	cmp	r2, r3
 9fc:	blt	960 <coda_match_filefilter+0x130>
 a00:	sub	r3, fp, #24
 a04:	mov	r0, r3
 a08:	bl	b4 <name_buffer_done>
 a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 a10:	mov	r0, r3
 a14:	bl	0 <coda_expression_delete>
 a18:	mov	r3, #0
 a1c:	mov	r0, r3
 a20:	sub	sp, fp, #4
 a24:	ldr	fp, [sp]
 a28:	add	sp, sp, #4
 a2c:	pop	{pc}		; (ldr pc, [sp], #4)
