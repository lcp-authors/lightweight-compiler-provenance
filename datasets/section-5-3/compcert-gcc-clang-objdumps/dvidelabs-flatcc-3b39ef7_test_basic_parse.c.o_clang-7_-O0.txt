
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_basic_parse.dir/test_basic_parse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <test>:
       0:	push	{r4, r5, fp, lr}
       4:	add	fp, sp, #8
       8:	sub	sp, sp, #280	; 0x118
       c:	str	r0, [fp, #-12]
      10:	str	r1, [fp, #-16]
      14:	str	r2, [fp, #-20]	; 0xffffffec
      18:	str	r3, [fp, #-24]	; 0xffffffe8
      1c:	movw	r0, #0
      20:	str	r0, [fp, #-76]	; 0xffffffb4
      24:	sub	r1, fp, #68	; 0x44
      28:	str	r1, [fp, #-72]	; 0xffffffb8
      2c:	ldr	r1, [fp, #-72]	; 0xffffffb8
      30:	str	r0, [fp, #-116]	; 0xffffff8c
      34:	mov	r0, r1
      38:	movw	r1, #0
      3c:	and	r1, r1, #255	; 0xff
      40:	movw	r2, #44	; 0x2c
      44:	bl	0 <memset>
      48:	ldr	r0, [fp, #-72]	; 0xffffffb8
      4c:	movw	r1, #1
      50:	str	r1, [r0, #16]
      54:	ldr	r0, [fp, #-16]
      58:	ldr	r1, [fp, #-72]	; 0xffffffb8
      5c:	str	r0, [r1, #4]
      60:	ldr	r0, [fp, #-12]
      64:	movw	r1, #0
      68:	movt	r1, #0
      6c:	movw	r2, #0
      70:	uxth	r2, r2
      74:	ldr	r3, [fp, #-116]	; 0xffffff8c
      78:	bl	0 <flatcc_builder_start_buffer>
      7c:	ldr	r1, [fp, #-72]	; 0xffffffb8
      80:	ldr	r2, [fp, #-16]
      84:	ldr	r3, [fp, #-20]	; 0xffffffec
      88:	str	r0, [fp, #-120]	; 0xffffff88
      8c:	mov	r0, r1
      90:	mov	r1, r2
      94:	mov	r2, r3
      98:	bl	102c <flatcc_json_parser_space>
      9c:	str	r0, [fp, #-16]
      a0:	ldr	r0, [fp, #-16]
      a4:	ldr	r1, [fp, #-20]	; 0xffffffec
      a8:	cmp	r0, r1
      ac:	bne	d0 <test+0xd0>
      b0:	movw	r0, #0
      b4:	movt	r0, #0
      b8:	ldr	r0, [r0]
      bc:	movw	r1, #0
      c0:	movt	r1, #0
      c4:	bl	0 <fprintf>
      c8:	str	r0, [fp, #-124]	; 0xffffff84
      cc:	b	f5c <test+0xf5c>
      d0:	ldr	r0, [fp, #-20]	; 0xffffffec
      d4:	ldr	r1, [fp, #-16]
      d8:	cmp	r0, r1
      dc:	bls	100 <test+0x100>
      e0:	ldr	r0, [fp, #-16]
      e4:	ldrb	r0, [r0]
      e8:	cmp	r0, #123	; 0x7b
      ec:	bne	100 <test+0x100>
      f0:	ldr	r0, [fp, #-16]
      f4:	add	r0, r0, #1
      f8:	str	r0, [fp, #-16]
      fc:	b	148 <test+0x148>
     100:	movw	r0, #0
     104:	movt	r0, #0
     108:	ldr	r0, [r0]
     10c:	movw	r1, #0
     110:	movt	r1, #0
     114:	movw	r2, #123	; 0x7b
     118:	bl	0 <fprintf>
     11c:	ldr	r1, [fp, #-72]	; 0xffffffb8
     120:	ldr	r2, [fp, #-16]
     124:	ldr	lr, [fp, #-20]	; 0xffffffec
     128:	str	r0, [fp, #-128]	; 0xffffff80
     12c:	mov	r0, r1
     130:	mov	r1, r2
     134:	mov	r2, lr
     138:	movw	r3, #17
     13c:	bl	0 <flatcc_json_parser_set_error>
     140:	str	r0, [fp, #-16]
     144:	b	f5c <test+0xf5c>
     148:	ldr	r0, [fp, #-72]	; 0xffffffb8
     14c:	ldr	r1, [fp, #-16]
     150:	ldr	r2, [fp, #-20]	; 0xffffffec
     154:	bl	102c <flatcc_json_parser_space>
     158:	str	r0, [fp, #-16]
     15c:	ldr	r0, [fp, #-16]
     160:	ldr	r1, [fp, #-20]	; 0xffffffec
     164:	cmp	r0, r1
     168:	bne	18c <test+0x18c>
     16c:	movw	r0, #0
     170:	movt	r0, #0
     174:	ldr	r0, [r0]
     178:	movw	r1, #0
     17c:	movt	r1, #0
     180:	bl	0 <fprintf>
     184:	str	r0, [fp, #-132]	; 0xffffff7c
     188:	b	f5c <test+0xf5c>
     18c:	ldr	r0, [fp, #-12]
     190:	movw	r1, #11
     194:	bl	0 <flatcc_builder_start_table>
     198:	str	r0, [fp, #-136]	; 0xffffff78
     19c:	ldr	r0, [fp, #-72]	; 0xffffffb8
     1a0:	ldr	r1, [fp, #-16]
     1a4:	ldr	r2, [fp, #-20]	; 0xffffffec
     1a8:	bl	10c8 <flatcc_json_parser_symbol_start>
     1ac:	str	r0, [fp, #-16]
     1b0:	ldr	r0, [fp, #-16]
     1b4:	ldr	r1, [fp, #-20]	; 0xffffffec
     1b8:	bl	1174 <flatcc_json_parser_symbol_part>
     1bc:	str	r1, [fp, #-92]	; 0xffffffa4
     1c0:	str	r0, [fp, #-96]	; 0xffffffa0
     1c4:	ldr	r0, [fp, #-20]	; 0xffffffec
     1c8:	ldr	r1, [fp, #-16]
     1cc:	sub	r0, r0, r1
     1d0:	cmp	r0, #8
     1d4:	ble	1e8 <test+0x1e8>
     1d8:	ldr	r0, [fp, #-16]
     1dc:	add	r0, r0, #8
     1e0:	str	r0, [fp, #-140]	; 0xffffff74
     1e4:	b	1f0 <test+0x1f0>
     1e8:	ldr	r0, [fp, #-20]	; 0xffffffec
     1ec:	str	r0, [fp, #-140]	; 0xffffff74
     1f0:	ldr	r0, [fp, #-140]	; 0xffffff74
     1f4:	str	r0, [fp, #-100]	; 0xffffff9c
     1f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
     1fc:	ldr	r1, [fp, #-92]	; 0xffffffa4
     200:	bfc	r0, #0, #16
     204:	movw	r2, #0
     208:	movt	r2, #0
     20c:	ldr	r3, [r2]
     210:	rev	r3, r3
     214:	ldrb	ip, [r2, #4]
     218:	lsl	ip, ip, #24
     21c:	ldrb	r2, [r2, #5]
     220:	orr	r2, ip, r2, lsl #16
     224:	subs	r0, r0, r2
     228:	sbcs	r1, r1, r3
     22c:	str	r0, [sp, #144]	; 0x90
     230:	str	r1, [sp, #140]	; 0x8c
     234:	bcs	414 <test+0x414>
     238:	b	23c <test+0x23c>
     23c:	ldr	r0, [fp, #-96]	; 0xffffffa0
     240:	ldr	r1, [fp, #-92]	; 0xffffffa4
     244:	and	r0, r0, #-16777216	; 0xff000000
     248:	movw	r2, #0
     24c:	movt	r2, #0
     250:	ldr	r3, [r2]
     254:	rev	r3, r3
     258:	ldrb	r2, [r2, #4]
     25c:	eor	r0, r0, r2, lsl #24
     260:	eor	r1, r1, r3
     264:	orr	r0, r0, r1
     268:	cmp	r0, #0
     26c:	beq	290 <test+0x290>
     270:	b	274 <test+0x274>
     274:	ldr	r0, [fp, #-72]	; 0xffffffb8
     278:	ldr	r1, [fp, #-16]
     27c:	ldr	r2, [fp, #-20]	; 0xffffffec
     280:	movw	r3, #13
     284:	bl	0 <flatcc_json_parser_set_error>
     288:	str	r0, [fp, #-16]
     28c:	b	f5c <test+0xf5c>
     290:	ldr	r0, [fp, #-72]	; 0xffffffb8
     294:	ldr	r1, [fp, #-16]
     298:	add	r1, r1, #5
     29c:	ldr	r2, [fp, #-20]	; 0xffffffec
     2a0:	bl	11ac <flatcc_json_parser_symbol_end>
     2a4:	str	r0, [fp, #-16]
     2a8:	ldr	r0, [fp, #-72]	; 0xffffffb8
     2ac:	ldr	r1, [fp, #-16]
     2b0:	ldr	r2, [fp, #-20]	; 0xffffffec
     2b4:	bl	102c <flatcc_json_parser_space>
     2b8:	str	r0, [fp, #-16]
     2bc:	ldr	r0, [fp, #-16]
     2c0:	ldr	r1, [fp, #-20]	; 0xffffffec
     2c4:	cmp	r0, r1
     2c8:	bne	2ec <test+0x2ec>
     2cc:	movw	r0, #0
     2d0:	movt	r0, #0
     2d4:	ldr	r0, [r0]
     2d8:	movw	r1, #0
     2dc:	movt	r1, #0
     2e0:	bl	0 <fprintf>
     2e4:	str	r0, [sp, #136]	; 0x88
     2e8:	b	f5c <test+0xf5c>
     2ec:	ldr	r0, [fp, #-20]	; 0xffffffec
     2f0:	ldr	r1, [fp, #-16]
     2f4:	cmp	r0, r1
     2f8:	bls	31c <test+0x31c>
     2fc:	ldr	r0, [fp, #-16]
     300:	ldrb	r0, [r0]
     304:	cmp	r0, #58	; 0x3a
     308:	bne	31c <test+0x31c>
     30c:	ldr	r0, [fp, #-16]
     310:	add	r0, r0, #1
     314:	str	r0, [fp, #-16]
     318:	b	364 <test+0x364>
     31c:	movw	r0, #0
     320:	movt	r0, #0
     324:	ldr	r0, [r0]
     328:	movw	r1, #0
     32c:	movt	r1, #0
     330:	movw	r2, #58	; 0x3a
     334:	bl	0 <fprintf>
     338:	ldr	r1, [fp, #-72]	; 0xffffffb8
     33c:	ldr	r2, [fp, #-16]
     340:	ldr	lr, [fp, #-20]	; 0xffffffec
     344:	str	r0, [sp, #132]	; 0x84
     348:	mov	r0, r1
     34c:	mov	r1, r2
     350:	mov	r2, lr
     354:	movw	r3, #17
     358:	bl	0 <flatcc_json_parser_set_error>
     35c:	str	r0, [fp, #-16]
     360:	b	f5c <test+0xf5c>
     364:	ldr	r0, [fp, #-72]	; 0xffffffb8
     368:	ldr	r1, [fp, #-16]
     36c:	ldr	r2, [fp, #-20]	; 0xffffffec
     370:	bl	102c <flatcc_json_parser_space>
     374:	str	r0, [fp, #-16]
     378:	ldr	r0, [fp, #-16]
     37c:	ldr	r1, [fp, #-20]	; 0xffffffec
     380:	cmp	r0, r1
     384:	bne	3a8 <test+0x3a8>
     388:	movw	r0, #0
     38c:	movt	r0, #0
     390:	ldr	r0, [r0]
     394:	movw	r1, #0
     398:	movt	r1, #0
     39c:	bl	0 <fprintf>
     3a0:	str	r0, [sp, #128]	; 0x80
     3a4:	b	f5c <test+0xf5c>
     3a8:	ldr	r0, [fp, #-12]
     3ac:	movw	r1, #0
     3b0:	movw	r2, #1
     3b4:	movw	r3, #1
     3b8:	uxth	r3, r3
     3bc:	bl	0 <flatcc_builder_table_add>
     3c0:	str	r0, [fp, #-112]	; 0xffffff90
     3c4:	ldr	r0, [fp, #-112]	; 0xffffff90
     3c8:	movw	r1, #0
     3cc:	cmp	r0, r1
     3d0:	bne	3d8 <test+0x3d8>
     3d4:	b	f5c <test+0xf5c>
     3d8:	ldr	r0, [fp, #-16]
     3dc:	str	r0, [fp, #-100]	; 0xffffff9c
     3e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     3e4:	ldr	r1, [fp, #-16]
     3e8:	ldr	r2, [fp, #-20]	; 0xffffffec
     3ec:	ldr	r3, [fp, #-112]	; 0xffffff90
     3f0:	bl	13c0 <flatcc_json_parser_uint8>
     3f4:	str	r0, [fp, #-16]
     3f8:	ldr	r0, [fp, #-100]	; 0xffffff9c
     3fc:	ldr	r1, [fp, #-16]
     400:	cmp	r0, r1
     404:	bne	40c <test+0x40c>
     408:	b	f5c <test+0xf5c>
     40c:	b	410 <test+0x410>
     410:	b	dbc <test+0xdbc>
     414:	ldr	r0, [fp, #-92]	; 0xffffffa4
     418:	movw	r1, #0
     41c:	movt	r1, #0
     420:	ldr	r1, [r1]
     424:	rev	r1, r1
     428:	cmp	r0, r1
     42c:	bcs	aa0 <test+0xaa0>
     430:	b	434 <test+0x434>
     434:	ldr	r0, [fp, #-96]	; 0xffffffa0
     438:	ldr	r1, [fp, #-92]	; 0xffffffa4
     43c:	movw	r2, #0
     440:	movt	r2, #0
     444:	ldr	r3, [r2]
     448:	ldr	r2, [r2, #4]
     44c:	rev	r3, r3
     450:	rev	r2, r2
     454:	subs	r0, r0, r2
     458:	sbcs	r1, r1, r3
     45c:	str	r0, [sp, #124]	; 0x7c
     460:	str	r1, [sp, #120]	; 0x78
     464:	bcs	650 <test+0x650>
     468:	b	46c <test+0x46c>
     46c:	ldr	r0, [fp, #-96]	; 0xffffffa0
     470:	ldr	r1, [fp, #-92]	; 0xffffffa4
     474:	bfc	r0, #0, #16
     478:	movw	r2, #0
     47c:	movt	r2, #0
     480:	ldr	r3, [r2]
     484:	rev	r3, r3
     488:	ldrb	ip, [r2, #4]
     48c:	lsl	ip, ip, #24
     490:	ldrb	r2, [r2, #5]
     494:	orr	r2, ip, r2, lsl #16
     498:	eor	r1, r1, r3
     49c:	eor	r0, r0, r2
     4a0:	orr	r0, r0, r1
     4a4:	cmp	r0, #0
     4a8:	beq	4cc <test+0x4cc>
     4ac:	b	4b0 <test+0x4b0>
     4b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     4b4:	ldr	r1, [fp, #-16]
     4b8:	ldr	r2, [fp, #-20]	; 0xffffffec
     4bc:	movw	r3, #13
     4c0:	bl	0 <flatcc_json_parser_set_error>
     4c4:	str	r0, [fp, #-16]
     4c8:	b	f5c <test+0xf5c>
     4cc:	ldr	r0, [fp, #-72]	; 0xffffffb8
     4d0:	ldr	r1, [fp, #-16]
     4d4:	add	r1, r1, #6
     4d8:	ldr	r2, [fp, #-20]	; 0xffffffec
     4dc:	bl	11ac <flatcc_json_parser_symbol_end>
     4e0:	str	r0, [fp, #-16]
     4e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
     4e8:	ldr	r1, [fp, #-16]
     4ec:	ldr	r2, [fp, #-20]	; 0xffffffec
     4f0:	bl	102c <flatcc_json_parser_space>
     4f4:	str	r0, [fp, #-16]
     4f8:	ldr	r0, [fp, #-16]
     4fc:	ldr	r1, [fp, #-20]	; 0xffffffec
     500:	cmp	r0, r1
     504:	bne	528 <test+0x528>
     508:	movw	r0, #0
     50c:	movt	r0, #0
     510:	ldr	r0, [r0]
     514:	movw	r1, #0
     518:	movt	r1, #0
     51c:	bl	0 <fprintf>
     520:	str	r0, [sp, #116]	; 0x74
     524:	b	f5c <test+0xf5c>
     528:	ldr	r0, [fp, #-20]	; 0xffffffec
     52c:	ldr	r1, [fp, #-16]
     530:	cmp	r0, r1
     534:	bls	558 <test+0x558>
     538:	ldr	r0, [fp, #-16]
     53c:	ldrb	r0, [r0]
     540:	cmp	r0, #58	; 0x3a
     544:	bne	558 <test+0x558>
     548:	ldr	r0, [fp, #-16]
     54c:	add	r0, r0, #1
     550:	str	r0, [fp, #-16]
     554:	b	5a0 <test+0x5a0>
     558:	movw	r0, #0
     55c:	movt	r0, #0
     560:	ldr	r0, [r0]
     564:	movw	r1, #0
     568:	movt	r1, #0
     56c:	movw	r2, #58	; 0x3a
     570:	bl	0 <fprintf>
     574:	ldr	r1, [fp, #-72]	; 0xffffffb8
     578:	ldr	r2, [fp, #-16]
     57c:	ldr	lr, [fp, #-20]	; 0xffffffec
     580:	str	r0, [sp, #112]	; 0x70
     584:	mov	r0, r1
     588:	mov	r1, r2
     58c:	mov	r2, lr
     590:	movw	r3, #17
     594:	bl	0 <flatcc_json_parser_set_error>
     598:	str	r0, [fp, #-16]
     59c:	b	f5c <test+0xf5c>
     5a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     5a4:	ldr	r1, [fp, #-16]
     5a8:	ldr	r2, [fp, #-20]	; 0xffffffec
     5ac:	bl	102c <flatcc_json_parser_space>
     5b0:	str	r0, [fp, #-16]
     5b4:	ldr	r0, [fp, #-16]
     5b8:	ldr	r1, [fp, #-20]	; 0xffffffec
     5bc:	cmp	r0, r1
     5c0:	bne	5e4 <test+0x5e4>
     5c4:	movw	r0, #0
     5c8:	movt	r0, #0
     5cc:	ldr	r0, [r0]
     5d0:	movw	r1, #0
     5d4:	movt	r1, #0
     5d8:	bl	0 <fprintf>
     5dc:	str	r0, [sp, #108]	; 0x6c
     5e0:	b	f5c <test+0xf5c>
     5e4:	ldr	r0, [fp, #-12]
     5e8:	movw	r1, #1
     5ec:	movw	r2, #8
     5f0:	movw	r3, #8
     5f4:	uxth	r3, r3
     5f8:	bl	0 <flatcc_builder_table_add>
     5fc:	str	r0, [fp, #-112]	; 0xffffff90
     600:	ldr	r0, [fp, #-112]	; 0xffffff90
     604:	movw	r1, #0
     608:	cmp	r0, r1
     60c:	bne	614 <test+0x614>
     610:	b	f5c <test+0xf5c>
     614:	ldr	r0, [fp, #-16]
     618:	str	r0, [fp, #-100]	; 0xffffff9c
     61c:	ldr	r0, [fp, #-72]	; 0xffffffb8
     620:	ldr	r1, [fp, #-16]
     624:	ldr	r2, [fp, #-20]	; 0xffffffec
     628:	ldr	r3, [fp, #-112]	; 0xffffff90
     62c:	bl	0 <flatcc_json_parser_double>
     630:	str	r0, [fp, #-16]
     634:	ldr	r0, [fp, #-100]	; 0xffffff9c
     638:	ldr	r1, [fp, #-16]
     63c:	cmp	r0, r1
     640:	bne	648 <test+0x648>
     644:	b	f5c <test+0xf5c>
     648:	b	64c <test+0x64c>
     64c:	b	a9c <test+0xa9c>
     650:	ldr	r0, [fp, #-96]	; 0xffffffa0
     654:	ldr	r1, [fp, #-92]	; 0xffffffa4
     658:	movw	r2, #0
     65c:	movt	r2, #0
     660:	ldr	r3, [r2]
     664:	ldr	r2, [r2, #4]
     668:	rev	r3, r3
     66c:	rev	r2, r2
     670:	eor	r1, r1, r3
     674:	eor	r0, r0, r2
     678:	orr	r0, r0, r1
     67c:	cmp	r0, #0
     680:	beq	6a4 <test+0x6a4>
     684:	b	688 <test+0x688>
     688:	ldr	r0, [fp, #-72]	; 0xffffffb8
     68c:	ldr	r1, [fp, #-16]
     690:	ldr	r2, [fp, #-20]	; 0xffffffec
     694:	movw	r3, #13
     698:	bl	0 <flatcc_json_parser_set_error>
     69c:	str	r0, [fp, #-16]
     6a0:	b	f5c <test+0xf5c>
     6a4:	ldr	r0, [fp, #-100]	; 0xffffff9c
     6a8:	str	r0, [fp, #-16]
     6ac:	ldr	r0, [fp, #-16]
     6b0:	ldr	r1, [fp, #-20]	; 0xffffffec
     6b4:	bl	1174 <flatcc_json_parser_symbol_part>
     6b8:	str	r1, [fp, #-92]	; 0xffffffa4
     6bc:	str	r0, [fp, #-96]	; 0xffffffa0
     6c0:	ldr	r0, [fp, #-20]	; 0xffffffec
     6c4:	ldr	r1, [fp, #-16]
     6c8:	sub	r0, r0, r1
     6cc:	cmp	r0, #8
     6d0:	ble	6e4 <test+0x6e4>
     6d4:	ldr	r0, [fp, #-16]
     6d8:	add	r0, r0, #8
     6dc:	str	r0, [sp, #104]	; 0x68
     6e0:	b	6ec <test+0x6ec>
     6e4:	ldr	r0, [fp, #-20]	; 0xffffffec
     6e8:	str	r0, [sp, #104]	; 0x68
     6ec:	ldr	r0, [sp, #104]	; 0x68
     6f0:	str	r0, [fp, #-100]	; 0xffffff9c
     6f4:	ldr	r0, [fp, #-92]	; 0xffffffa4
     6f8:	movw	r1, #0
     6fc:	movt	r1, #0
     700:	ldr	r1, [r1]
     704:	rev	r1, r1
     708:	cmp	r0, r1
     70c:	bcs	8d4 <test+0x8d4>
     710:	b	714 <test+0x714>
     714:	ldr	r0, [fp, #-92]	; 0xffffffa4
     718:	movw	r1, #0
     71c:	movt	r1, #0
     720:	ldr	r1, [r1]
     724:	rev	r1, r1
     728:	teq	r0, r1
     72c:	beq	750 <test+0x750>
     730:	b	734 <test+0x734>
     734:	ldr	r0, [fp, #-72]	; 0xffffffb8
     738:	ldr	r1, [fp, #-16]
     73c:	ldr	r2, [fp, #-20]	; 0xffffffec
     740:	movw	r3, #13
     744:	bl	0 <flatcc_json_parser_set_error>
     748:	str	r0, [fp, #-16]
     74c:	b	f5c <test+0xf5c>
     750:	ldr	r0, [fp, #-72]	; 0xffffffb8
     754:	ldr	r1, [fp, #-16]
     758:	add	r1, r1, #4
     75c:	ldr	r2, [fp, #-20]	; 0xffffffec
     760:	bl	11ac <flatcc_json_parser_symbol_end>
     764:	str	r0, [fp, #-16]
     768:	ldr	r0, [fp, #-72]	; 0xffffffb8
     76c:	ldr	r1, [fp, #-16]
     770:	ldr	r2, [fp, #-20]	; 0xffffffec
     774:	bl	102c <flatcc_json_parser_space>
     778:	str	r0, [fp, #-16]
     77c:	ldr	r0, [fp, #-16]
     780:	ldr	r1, [fp, #-20]	; 0xffffffec
     784:	cmp	r0, r1
     788:	bne	7ac <test+0x7ac>
     78c:	movw	r0, #0
     790:	movt	r0, #0
     794:	ldr	r0, [r0]
     798:	movw	r1, #0
     79c:	movt	r1, #0
     7a0:	bl	0 <fprintf>
     7a4:	str	r0, [sp, #100]	; 0x64
     7a8:	b	f5c <test+0xf5c>
     7ac:	ldr	r0, [fp, #-20]	; 0xffffffec
     7b0:	ldr	r1, [fp, #-16]
     7b4:	cmp	r0, r1
     7b8:	bls	7dc <test+0x7dc>
     7bc:	ldr	r0, [fp, #-16]
     7c0:	ldrb	r0, [r0]
     7c4:	cmp	r0, #58	; 0x3a
     7c8:	bne	7dc <test+0x7dc>
     7cc:	ldr	r0, [fp, #-16]
     7d0:	add	r0, r0, #1
     7d4:	str	r0, [fp, #-16]
     7d8:	b	824 <test+0x824>
     7dc:	movw	r0, #0
     7e0:	movt	r0, #0
     7e4:	ldr	r0, [r0]
     7e8:	movw	r1, #0
     7ec:	movt	r1, #0
     7f0:	movw	r2, #58	; 0x3a
     7f4:	bl	0 <fprintf>
     7f8:	ldr	r1, [fp, #-72]	; 0xffffffb8
     7fc:	ldr	r2, [fp, #-16]
     800:	ldr	lr, [fp, #-20]	; 0xffffffec
     804:	str	r0, [sp, #96]	; 0x60
     808:	mov	r0, r1
     80c:	mov	r1, r2
     810:	mov	r2, lr
     814:	movw	r3, #17
     818:	bl	0 <flatcc_json_parser_set_error>
     81c:	str	r0, [fp, #-16]
     820:	b	f5c <test+0xf5c>
     824:	ldr	r0, [fp, #-72]	; 0xffffffb8
     828:	ldr	r1, [fp, #-16]
     82c:	ldr	r2, [fp, #-20]	; 0xffffffec
     830:	bl	102c <flatcc_json_parser_space>
     834:	str	r0, [fp, #-16]
     838:	ldr	r0, [fp, #-16]
     83c:	ldr	r1, [fp, #-20]	; 0xffffffec
     840:	cmp	r0, r1
     844:	bne	868 <test+0x868>
     848:	movw	r0, #0
     84c:	movt	r0, #0
     850:	ldr	r0, [r0]
     854:	movw	r1, #0
     858:	movt	r1, #0
     85c:	bl	0 <fprintf>
     860:	str	r0, [sp, #92]	; 0x5c
     864:	b	f5c <test+0xf5c>
     868:	ldr	r0, [fp, #-12]
     86c:	movw	r1, #3
     870:	movw	r2, #8
     874:	movw	r3, #8
     878:	uxth	r3, r3
     87c:	bl	0 <flatcc_builder_table_add>
     880:	str	r0, [fp, #-112]	; 0xffffff90
     884:	ldr	r0, [fp, #-112]	; 0xffffff90
     888:	movw	r1, #0
     88c:	cmp	r0, r1
     890:	bne	898 <test+0x898>
     894:	b	f5c <test+0xf5c>
     898:	ldr	r0, [fp, #-16]
     89c:	str	r0, [fp, #-100]	; 0xffffff9c
     8a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     8a4:	ldr	r1, [fp, #-16]
     8a8:	ldr	r2, [fp, #-20]	; 0xffffffec
     8ac:	ldr	r3, [fp, #-112]	; 0xffffff90
     8b0:	bl	149c <flatcc_json_parser_int64>
     8b4:	str	r0, [fp, #-16]
     8b8:	ldr	r0, [fp, #-100]	; 0xffffff9c
     8bc:	ldr	r1, [fp, #-16]
     8c0:	cmp	r0, r1
     8c4:	bne	8cc <test+0x8cc>
     8c8:	b	f5c <test+0xf5c>
     8cc:	b	8d0 <test+0x8d0>
     8d0:	b	a94 <test+0xa94>
     8d4:	ldr	r0, [fp, #-92]	; 0xffffffa4
     8d8:	movw	r1, #0
     8dc:	movt	r1, #0
     8e0:	ldr	r1, [r1]
     8e4:	rev	r1, r1
     8e8:	teq	r0, r1
     8ec:	beq	910 <test+0x910>
     8f0:	b	8f4 <test+0x8f4>
     8f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
     8f8:	ldr	r1, [fp, #-16]
     8fc:	ldr	r2, [fp, #-20]	; 0xffffffec
     900:	movw	r3, #13
     904:	bl	0 <flatcc_json_parser_set_error>
     908:	str	r0, [fp, #-16]
     90c:	b	f5c <test+0xf5c>
     910:	ldr	r0, [fp, #-72]	; 0xffffffb8
     914:	ldr	r1, [fp, #-16]
     918:	add	r1, r1, #4
     91c:	ldr	r2, [fp, #-20]	; 0xffffffec
     920:	bl	11ac <flatcc_json_parser_symbol_end>
     924:	str	r0, [fp, #-16]
     928:	ldr	r0, [fp, #-72]	; 0xffffffb8
     92c:	ldr	r1, [fp, #-16]
     930:	ldr	r2, [fp, #-20]	; 0xffffffec
     934:	bl	102c <flatcc_json_parser_space>
     938:	str	r0, [fp, #-16]
     93c:	ldr	r0, [fp, #-16]
     940:	ldr	r1, [fp, #-20]	; 0xffffffec
     944:	cmp	r0, r1
     948:	bne	96c <test+0x96c>
     94c:	movw	r0, #0
     950:	movt	r0, #0
     954:	ldr	r0, [r0]
     958:	movw	r1, #0
     95c:	movt	r1, #0
     960:	bl	0 <fprintf>
     964:	str	r0, [sp, #88]	; 0x58
     968:	b	f5c <test+0xf5c>
     96c:	ldr	r0, [fp, #-20]	; 0xffffffec
     970:	ldr	r1, [fp, #-16]
     974:	cmp	r0, r1
     978:	bls	99c <test+0x99c>
     97c:	ldr	r0, [fp, #-16]
     980:	ldrb	r0, [r0]
     984:	cmp	r0, #58	; 0x3a
     988:	bne	99c <test+0x99c>
     98c:	ldr	r0, [fp, #-16]
     990:	add	r0, r0, #1
     994:	str	r0, [fp, #-16]
     998:	b	9e4 <test+0x9e4>
     99c:	movw	r0, #0
     9a0:	movt	r0, #0
     9a4:	ldr	r0, [r0]
     9a8:	movw	r1, #0
     9ac:	movt	r1, #0
     9b0:	movw	r2, #58	; 0x3a
     9b4:	bl	0 <fprintf>
     9b8:	ldr	r1, [fp, #-72]	; 0xffffffb8
     9bc:	ldr	r2, [fp, #-16]
     9c0:	ldr	lr, [fp, #-20]	; 0xffffffec
     9c4:	str	r0, [sp, #84]	; 0x54
     9c8:	mov	r0, r1
     9cc:	mov	r1, r2
     9d0:	mov	r2, lr
     9d4:	movw	r3, #17
     9d8:	bl	0 <flatcc_json_parser_set_error>
     9dc:	str	r0, [fp, #-16]
     9e0:	b	f5c <test+0xf5c>
     9e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
     9e8:	ldr	r1, [fp, #-16]
     9ec:	ldr	r2, [fp, #-20]	; 0xffffffec
     9f0:	bl	102c <flatcc_json_parser_space>
     9f4:	str	r0, [fp, #-16]
     9f8:	ldr	r0, [fp, #-16]
     9fc:	ldr	r1, [fp, #-20]	; 0xffffffec
     a00:	cmp	r0, r1
     a04:	bne	a28 <test+0xa28>
     a08:	movw	r0, #0
     a0c:	movt	r0, #0
     a10:	ldr	r0, [r0]
     a14:	movw	r1, #0
     a18:	movt	r1, #0
     a1c:	bl	0 <fprintf>
     a20:	str	r0, [sp, #80]	; 0x50
     a24:	b	f5c <test+0xf5c>
     a28:	ldr	r0, [fp, #-12]
     a2c:	movw	r1, #2
     a30:	movw	r2, #4
     a34:	movw	r3, #4
     a38:	uxth	r3, r3
     a3c:	bl	0 <flatcc_builder_table_add>
     a40:	str	r0, [fp, #-112]	; 0xffffff90
     a44:	ldr	r0, [fp, #-112]	; 0xffffff90
     a48:	movw	r1, #0
     a4c:	cmp	r0, r1
     a50:	bne	a58 <test+0xa58>
     a54:	b	f5c <test+0xf5c>
     a58:	ldr	r0, [fp, #-16]
     a5c:	str	r0, [fp, #-100]	; 0xffffff9c
     a60:	ldr	r0, [fp, #-72]	; 0xffffffb8
     a64:	ldr	r1, [fp, #-16]
     a68:	ldr	r2, [fp, #-20]	; 0xffffffec
     a6c:	ldr	r3, [fp, #-112]	; 0xffffff90
     a70:	bl	1574 <flatcc_json_parser_uint32>
     a74:	str	r0, [fp, #-16]
     a78:	ldr	r0, [fp, #-100]	; 0xffffff9c
     a7c:	ldr	r1, [fp, #-16]
     a80:	cmp	r0, r1
     a84:	bne	a8c <test+0xa8c>
     a88:	b	f5c <test+0xf5c>
     a8c:	b	a90 <test+0xa90>
     a90:	b	a94 <test+0xa94>
     a94:	b	a98 <test+0xa98>
     a98:	b	a9c <test+0xa9c>
     a9c:	b	db8 <test+0xdb8>
     aa0:	ldr	r0, [fp, #-92]	; 0xffffffa4
     aa4:	movw	r1, #0
     aa8:	movt	r1, #0
     aac:	ldr	r1, [r1]
     ab0:	rev	r1, r1
     ab4:	teq	r0, r1
     ab8:	beq	adc <test+0xadc>
     abc:	b	ac0 <test+0xac0>
     ac0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     ac4:	ldr	r1, [fp, #-16]
     ac8:	ldr	r2, [fp, #-20]	; 0xffffffec
     acc:	movw	r3, #13
     ad0:	bl	0 <flatcc_json_parser_set_error>
     ad4:	str	r0, [fp, #-16]
     ad8:	b	f5c <test+0xf5c>
     adc:	ldr	r0, [fp, #-72]	; 0xffffffb8
     ae0:	ldr	r1, [fp, #-16]
     ae4:	add	r1, r1, #4
     ae8:	ldr	r2, [fp, #-20]	; 0xffffffec
     aec:	bl	11ac <flatcc_json_parser_symbol_end>
     af0:	str	r0, [fp, #-16]
     af4:	ldr	r0, [fp, #-72]	; 0xffffffb8
     af8:	ldr	r1, [fp, #-16]
     afc:	ldr	r2, [fp, #-20]	; 0xffffffec
     b00:	bl	102c <flatcc_json_parser_space>
     b04:	str	r0, [fp, #-16]
     b08:	ldr	r0, [fp, #-16]
     b0c:	ldr	r1, [fp, #-20]	; 0xffffffec
     b10:	cmp	r0, r1
     b14:	bne	b38 <test+0xb38>
     b18:	movw	r0, #0
     b1c:	movt	r0, #0
     b20:	ldr	r0, [r0]
     b24:	movw	r1, #0
     b28:	movt	r1, #0
     b2c:	bl	0 <fprintf>
     b30:	str	r0, [sp, #76]	; 0x4c
     b34:	b	f5c <test+0xf5c>
     b38:	ldr	r0, [fp, #-20]	; 0xffffffec
     b3c:	ldr	r1, [fp, #-16]
     b40:	cmp	r0, r1
     b44:	bls	b68 <test+0xb68>
     b48:	ldr	r0, [fp, #-16]
     b4c:	ldrb	r0, [r0]
     b50:	cmp	r0, #58	; 0x3a
     b54:	bne	b68 <test+0xb68>
     b58:	ldr	r0, [fp, #-16]
     b5c:	add	r0, r0, #1
     b60:	str	r0, [fp, #-16]
     b64:	b	bb0 <test+0xbb0>
     b68:	movw	r0, #0
     b6c:	movt	r0, #0
     b70:	ldr	r0, [r0]
     b74:	movw	r1, #0
     b78:	movt	r1, #0
     b7c:	movw	r2, #58	; 0x3a
     b80:	bl	0 <fprintf>
     b84:	ldr	r1, [fp, #-72]	; 0xffffffb8
     b88:	ldr	r2, [fp, #-16]
     b8c:	ldr	lr, [fp, #-20]	; 0xffffffec
     b90:	str	r0, [sp, #72]	; 0x48
     b94:	mov	r0, r1
     b98:	mov	r1, r2
     b9c:	mov	r2, lr
     ba0:	movw	r3, #17
     ba4:	bl	0 <flatcc_json_parser_set_error>
     ba8:	str	r0, [fp, #-16]
     bac:	b	f5c <test+0xf5c>
     bb0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     bb4:	ldr	r1, [fp, #-16]
     bb8:	ldr	r2, [fp, #-20]	; 0xffffffec
     bbc:	bl	102c <flatcc_json_parser_space>
     bc0:	str	r0, [fp, #-16]
     bc4:	ldr	r0, [fp, #-16]
     bc8:	ldr	r1, [fp, #-20]	; 0xffffffec
     bcc:	cmp	r0, r1
     bd0:	bne	bf4 <test+0xbf4>
     bd4:	movw	r0, #0
     bd8:	movt	r0, #0
     bdc:	ldr	r0, [r0]
     be0:	movw	r1, #0
     be4:	movt	r1, #0
     be8:	bl	0 <fprintf>
     bec:	str	r0, [sp, #68]	; 0x44
     bf0:	b	f5c <test+0xf5c>
     bf4:	ldr	r0, [fp, #-72]	; 0xffffffb8
     bf8:	ldr	r1, [fp, #-16]
     bfc:	ldr	r2, [fp, #-20]	; 0xffffffec
     c00:	bl	164c <flatcc_json_parser_string_start>
     c04:	str	r0, [fp, #-16]
     c08:	ldr	r0, [fp, #-16]
     c0c:	str	r0, [fp, #-100]	; 0xffffff9c
     c10:	ldr	r0, [fp, #-72]	; 0xffffffb8
     c14:	ldr	r1, [fp, #-16]
     c18:	ldr	r2, [fp, #-20]	; 0xffffffec
     c1c:	bl	0 <flatcc_json_parser_string_part>
     c20:	str	r0, [fp, #-16]
     c24:	ldr	r0, [fp, #-16]
     c28:	ldr	r1, [fp, #-20]	; 0xffffffec
     c2c:	cmp	r0, r1
     c30:	bne	c38 <test+0xc38>
     c34:	b	f5c <test+0xf5c>
     c38:	ldr	r0, [fp, #-16]
     c3c:	ldrb	r0, [r0]
     c40:	cmp	r0, #34	; 0x22
     c44:	bne	c68 <test+0xc68>
     c48:	ldr	r0, [fp, #-12]
     c4c:	ldr	r1, [fp, #-100]	; 0xffffff9c
     c50:	ldr	r2, [fp, #-16]
     c54:	ldr	r3, [fp, #-100]	; 0xffffff9c
     c58:	sub	r2, r2, r3
     c5c:	bl	0 <flatcc_builder_create_string>
     c60:	str	r0, [fp, #-80]	; 0xffffffb0
     c64:	b	d60 <test+0xd60>
     c68:	ldr	r0, [fp, #-12]
     c6c:	bl	0 <flatcc_builder_start_string>
     c70:	ldr	lr, [fp, #-12]
     c74:	ldr	r1, [fp, #-16]
     c78:	ldr	r2, [fp, #-100]	; 0xffffff9c
     c7c:	sub	r1, r1, r2
     c80:	str	r0, [sp, #64]	; 0x40
     c84:	mov	r0, lr
     c88:	bl	0 <flatcc_builder_extend_string>
     c8c:	str	r0, [fp, #-104]	; 0xffffff98
     c90:	ldr	r0, [fp, #-104]	; 0xffffff98
     c94:	movw	r1, #0
     c98:	cmp	r0, r1
     c9c:	bne	ca4 <test+0xca4>
     ca0:	b	f5c <test+0xf5c>
     ca4:	ldr	r0, [fp, #-104]	; 0xffffff98
     ca8:	ldr	r1, [fp, #-100]	; 0xffffff9c
     cac:	ldr	r2, [fp, #-16]
     cb0:	ldr	r3, [fp, #-100]	; 0xffffff9c
     cb4:	sub	r2, r2, r3
     cb8:	bl	0 <memcpy>
     cbc:	sub	r3, fp, #108	; 0x6c
     cc0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     cc4:	ldr	r1, [fp, #-16]
     cc8:	ldr	r2, [fp, #-20]	; 0xffffffec
     ccc:	bl	0 <flatcc_json_parser_string_escape>
     cd0:	sub	r1, fp, #108	; 0x6c
     cd4:	str	r0, [fp, #-16]
     cd8:	ldr	r0, [fp, #-12]
     cdc:	add	r1, r1, #1
     ce0:	ldrb	r2, [fp, #-108]	; 0xffffff94
     ce4:	bl	0 <flatcc_builder_append_string>
     ce8:	ldr	r1, [fp, #-16]
     cec:	str	r1, [fp, #-100]	; 0xffffff9c
     cf0:	ldr	r1, [fp, #-72]	; 0xffffffb8
     cf4:	ldr	r2, [fp, #-16]
     cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
     cfc:	str	r0, [sp, #60]	; 0x3c
     d00:	mov	r0, r1
     d04:	mov	r1, r2
     d08:	mov	r2, r3
     d0c:	bl	0 <flatcc_json_parser_string_part>
     d10:	str	r0, [fp, #-16]
     d14:	ldr	r0, [fp, #-16]
     d18:	ldr	r1, [fp, #-20]	; 0xffffffec
     d1c:	cmp	r0, r1
     d20:	bne	d28 <test+0xd28>
     d24:	b	f5c <test+0xf5c>
     d28:	ldr	r0, [fp, #-12]
     d2c:	ldr	r1, [fp, #-100]	; 0xffffff9c
     d30:	ldr	r2, [fp, #-16]
     d34:	ldr	r3, [fp, #-100]	; 0xffffff9c
     d38:	sub	r2, r2, r3
     d3c:	bl	0 <flatcc_builder_append_string>
     d40:	str	r0, [sp, #56]	; 0x38
     d44:	ldr	r0, [fp, #-16]
     d48:	ldrb	r0, [r0]
     d4c:	cmp	r0, #34	; 0x22
     d50:	bne	cbc <test+0xcbc>
     d54:	ldr	r0, [fp, #-12]
     d58:	bl	0 <flatcc_builder_end_string>
     d5c:	str	r0, [fp, #-80]	; 0xffffffb0
     d60:	ldr	r0, [fp, #-80]	; 0xffffffb0
     d64:	cmp	r0, #0
     d68:	bne	d70 <test+0xd70>
     d6c:	b	f5c <test+0xf5c>
     d70:	ldr	r0, [fp, #-12]
     d74:	movw	r1, #10
     d78:	bl	0 <flatcc_builder_table_add_offset>
     d7c:	str	r0, [fp, #-84]	; 0xffffffac
     d80:	ldr	r0, [fp, #-84]	; 0xffffffac
     d84:	movw	r1, #0
     d88:	cmp	r0, r1
     d8c:	bne	d94 <test+0xd94>
     d90:	b	f5c <test+0xf5c>
     d94:	ldr	r0, [fp, #-80]	; 0xffffffb0
     d98:	ldr	r1, [fp, #-84]	; 0xffffffac
     d9c:	str	r0, [r1]
     da0:	ldr	r0, [fp, #-72]	; 0xffffffb8
     da4:	ldr	r1, [fp, #-16]
     da8:	ldr	r2, [fp, #-20]	; 0xffffffec
     dac:	bl	16bc <flatcc_json_parser_string_end>
     db0:	str	r0, [fp, #-16]
     db4:	b	db8 <test+0xdb8>
     db8:	b	dbc <test+0xdbc>
     dbc:	ldr	r0, [fp, #-72]	; 0xffffffb8
     dc0:	ldr	r1, [fp, #-16]
     dc4:	ldr	r2, [fp, #-20]	; 0xffffffec
     dc8:	bl	102c <flatcc_json_parser_space>
     dcc:	str	r0, [fp, #-16]
     dd0:	ldr	r0, [fp, #-16]
     dd4:	ldr	r1, [fp, #-20]	; 0xffffffec
     dd8:	cmp	r0, r1
     ddc:	bne	e00 <test+0xe00>
     de0:	movw	r0, #0
     de4:	movt	r0, #0
     de8:	ldr	r0, [r0]
     dec:	movw	r1, #0
     df0:	movt	r1, #0
     df4:	bl	0 <fprintf>
     df8:	str	r0, [sp, #52]	; 0x34
     dfc:	b	f5c <test+0xf5c>
     e00:	ldr	r0, [fp, #-16]
     e04:	ldrb	r0, [r0]
     e08:	cmp	r0, #44	; 0x2c
     e0c:	bne	e78 <test+0xe78>
     e10:	ldr	r0, [fp, #-16]
     e14:	add	r0, r0, #1
     e18:	str	r0, [fp, #-16]
     e1c:	ldr	r0, [fp, #-72]	; 0xffffffb8
     e20:	ldr	r1, [fp, #-16]
     e24:	ldr	r2, [fp, #-20]	; 0xffffffec
     e28:	bl	102c <flatcc_json_parser_space>
     e2c:	str	r0, [fp, #-16]
     e30:	ldr	r0, [fp, #-16]
     e34:	ldr	r1, [fp, #-20]	; 0xffffffec
     e38:	cmp	r0, r1
     e3c:	bne	e60 <test+0xe60>
     e40:	movw	r0, #0
     e44:	movt	r0, #0
     e48:	ldr	r0, [r0]
     e4c:	movw	r1, #0
     e50:	movt	r1, #0
     e54:	bl	0 <fprintf>
     e58:	str	r0, [sp, #48]	; 0x30
     e5c:	b	f5c <test+0xf5c>
     e60:	ldr	r0, [fp, #-16]
     e64:	ldrb	r0, [r0]
     e68:	cmp	r0, #125	; 0x7d
     e6c:	beq	e74 <test+0xe74>
     e70:	b	19c <test+0x19c>
     e74:	b	e78 <test+0xe78>
     e78:	ldr	r0, [fp, #-20]	; 0xffffffec
     e7c:	ldr	r1, [fp, #-16]
     e80:	cmp	r0, r1
     e84:	bls	ea8 <test+0xea8>
     e88:	ldr	r0, [fp, #-16]
     e8c:	ldrb	r0, [r0]
     e90:	cmp	r0, #125	; 0x7d
     e94:	bne	ea8 <test+0xea8>
     e98:	ldr	r0, [fp, #-16]
     e9c:	add	r0, r0, #1
     ea0:	str	r0, [fp, #-16]
     ea4:	b	ef0 <test+0xef0>
     ea8:	movw	r0, #0
     eac:	movt	r0, #0
     eb0:	ldr	r0, [r0]
     eb4:	movw	r1, #0
     eb8:	movt	r1, #0
     ebc:	movw	r2, #125	; 0x7d
     ec0:	bl	0 <fprintf>
     ec4:	ldr	r1, [fp, #-72]	; 0xffffffb8
     ec8:	ldr	r2, [fp, #-16]
     ecc:	ldr	lr, [fp, #-20]	; 0xffffffec
     ed0:	str	r0, [sp, #44]	; 0x2c
     ed4:	mov	r0, r1
     ed8:	mov	r1, r2
     edc:	mov	r2, lr
     ee0:	movw	r3, #17
     ee4:	bl	0 <flatcc_json_parser_set_error>
     ee8:	str	r0, [fp, #-16]
     eec:	b	f5c <test+0xf5c>
     ef0:	ldr	r0, [fp, #-12]
     ef4:	bl	0 <flatcc_builder_end_table>
     ef8:	str	r0, [fp, #-76]	; 0xffffffb4
     efc:	ldr	r0, [fp, #-12]
     f00:	ldr	r1, [fp, #-76]	; 0xffffffb4
     f04:	bl	0 <flatcc_builder_end_buffer>
     f08:	ldr	r1, [fp, #-72]	; 0xffffffb8
     f0c:	ldr	lr, [fp, #-16]
     f10:	ldr	r2, [fp, #-20]	; 0xffffffec
     f14:	str	r0, [sp, #40]	; 0x28
     f18:	mov	r0, r1
     f1c:	mov	r1, lr
     f20:	bl	102c <flatcc_json_parser_space>
     f24:	str	r0, [fp, #-16]
     f28:	ldr	r0, [fp, #-16]
     f2c:	ldr	r1, [fp, #-20]	; 0xffffffec
     f30:	cmp	r0, r1
     f34:	beq	f58 <test+0xf58>
     f38:	movw	r0, #0
     f3c:	movt	r0, #0
     f40:	ldr	r0, [r0]
     f44:	movw	r1, #0
     f48:	movt	r1, #0
     f4c:	bl	0 <fprintf>
     f50:	str	r0, [sp, #36]	; 0x24
     f54:	b	f5c <test+0xf5c>
     f58:	b	f5c <test+0xf5c>
     f5c:	ldr	r0, [fp, #-72]	; 0xffffffb8
     f60:	ldr	r0, [r0, #24]
     f64:	cmp	r0, #0
     f68:	beq	ff4 <test+0xff4>
     f6c:	movw	r0, #0
     f70:	movt	r0, #0
     f74:	ldr	r0, [r0]
     f78:	ldr	r1, [fp, #-72]	; 0xffffffb8
     f7c:	ldr	r2, [r1, #16]
     f80:	ldr	r1, [fp, #-72]	; 0xffffffb8
     f84:	ldr	r1, [r1, #36]	; 0x24
     f88:	ldr	r3, [fp, #-72]	; 0xffffffb8
     f8c:	ldr	r3, [r3, #4]
     f90:	sub	r1, r1, r3
     f94:	add	r3, r1, #1
     f98:	ldr	r1, [fp, #-72]	; 0xffffffb8
     f9c:	ldr	r1, [r1, #24]
     fa0:	str	r0, [sp, #32]
     fa4:	mov	r0, r1
     fa8:	str	r3, [sp, #28]
     fac:	str	r2, [sp, #24]
     fb0:	bl	0 <flatcc_json_parser_error_string>
     fb4:	ldr	r1, [sp, #32]
     fb8:	str	r0, [sp, #20]
     fbc:	mov	r0, r1
     fc0:	movw	r1, #0
     fc4:	movt	r1, #0
     fc8:	ldr	r2, [sp, #24]
     fcc:	ldr	r3, [sp, #28]
     fd0:	ldr	lr, [sp, #20]
     fd4:	str	lr, [sp]
     fd8:	bl	0 <fprintf>
     fdc:	ldr	r1, [fp, #-12]
     fe0:	str	r0, [sp, #16]
     fe4:	mov	r0, r1
     fe8:	bl	0 <flatcc_builder_reset>
     fec:	str	r0, [sp, #12]
     ff0:	b	1010 <test+0x1010>
     ff4:	movw	r0, #0
     ff8:	movt	r0, #0
     ffc:	ldr	r0, [r0]
    1000:	movw	r1, #0
    1004:	movt	r1, #0
    1008:	bl	0 <fprintf>
    100c:	str	r0, [sp, #8]
    1010:	ldr	r0, [fp, #-72]	; 0xffffffb8
    1014:	ldr	r0, [r0, #24]
    1018:	ldr	r1, [fp, #-24]	; 0xffffffe8
    101c:	str	r0, [r1]
    1020:	ldr	r0, [fp, #-16]
    1024:	sub	sp, fp, #8
    1028:	pop	{r4, r5, fp, pc}

0000102c <flatcc_json_parser_space>:
    102c:	push	{fp, lr}
    1030:	mov	fp, sp
    1034:	sub	sp, sp, #16
    1038:	str	r0, [sp, #8]
    103c:	str	r1, [sp, #4]
    1040:	str	r2, [sp]
    1044:	ldr	r0, [sp]
    1048:	ldr	r1, [sp, #4]
    104c:	sub	r0, r0, r1
    1050:	cmp	r0, #1
    1054:	ble	10a8 <flatcc_json_parser_space+0x7c>
    1058:	ldr	r0, [sp, #4]
    105c:	ldrb	r0, [r0]
    1060:	cmp	r0, #32
    1064:	ble	1074 <flatcc_json_parser_space+0x48>
    1068:	ldr	r0, [sp, #4]
    106c:	str	r0, [fp, #-4]
    1070:	b	10bc <flatcc_json_parser_space+0x90>
    1074:	ldr	r0, [sp, #4]
    1078:	ldrb	r0, [r0]
    107c:	cmp	r0, #32
    1080:	bne	10a4 <flatcc_json_parser_space+0x78>
    1084:	ldr	r0, [sp, #4]
    1088:	ldrb	r0, [r0, #1]
    108c:	cmp	r0, #32
    1090:	ble	10a4 <flatcc_json_parser_space+0x78>
    1094:	ldr	r0, [sp, #4]
    1098:	add	r0, r0, #1
    109c:	str	r0, [fp, #-4]
    10a0:	b	10bc <flatcc_json_parser_space+0x90>
    10a4:	b	10a8 <flatcc_json_parser_space+0x7c>
    10a8:	ldr	r0, [sp, #8]
    10ac:	ldr	r1, [sp, #4]
    10b0:	ldr	r2, [sp]
    10b4:	bl	0 <flatcc_json_parser_space_ext>
    10b8:	str	r0, [fp, #-4]
    10bc:	ldr	r0, [fp, #-4]
    10c0:	mov	sp, fp
    10c4:	pop	{fp, pc}

000010c8 <flatcc_json_parser_symbol_start>:
    10c8:	push	{fp, lr}
    10cc:	mov	fp, sp
    10d0:	sub	sp, sp, #16
    10d4:	str	r0, [sp, #8]
    10d8:	str	r1, [sp, #4]
    10dc:	str	r2, [sp]
    10e0:	ldr	r0, [sp, #4]
    10e4:	ldr	r1, [sp]
    10e8:	cmp	r0, r1
    10ec:	bne	10fc <flatcc_json_parser_symbol_start+0x34>
    10f0:	ldr	r0, [sp, #4]
    10f4:	str	r0, [fp, #-4]
    10f8:	b	1168 <flatcc_json_parser_symbol_start+0xa0>
    10fc:	ldr	r0, [sp, #4]
    1100:	ldrb	r0, [r0]
    1104:	cmp	r0, #34	; 0x22
    1108:	bne	1128 <flatcc_json_parser_symbol_start+0x60>
    110c:	ldr	r0, [sp, #4]
    1110:	add	r0, r0, #1
    1114:	str	r0, [sp, #4]
    1118:	ldr	r0, [sp, #8]
    111c:	movw	r1, #0
    1120:	str	r1, [r0, #12]
    1124:	b	1160 <flatcc_json_parser_symbol_start+0x98>
    1128:	ldr	r0, [sp, #4]
    112c:	ldrb	r0, [r0]
    1130:	cmp	r0, #46	; 0x2e
    1134:	bne	1154 <flatcc_json_parser_symbol_start+0x8c>
    1138:	ldr	r0, [sp, #8]
    113c:	ldr	r1, [sp, #4]
    1140:	ldr	r2, [sp]
    1144:	movw	r3, #5
    1148:	bl	0 <flatcc_json_parser_set_error>
    114c:	str	r0, [fp, #-4]
    1150:	b	1168 <flatcc_json_parser_symbol_start+0xa0>
    1154:	ldr	r0, [sp, #8]
    1158:	movw	r1, #1
    115c:	str	r1, [r0, #12]
    1160:	ldr	r0, [sp, #4]
    1164:	str	r0, [fp, #-4]
    1168:	ldr	r0, [fp, #-4]
    116c:	mov	sp, fp
    1170:	pop	{fp, pc}

00001174 <flatcc_json_parser_symbol_part>:
    1174:	push	{fp, lr}
    1178:	mov	fp, sp
    117c:	sub	sp, sp, #16
    1180:	str	r0, [fp, #-4]
    1184:	str	r1, [sp, #8]
    1188:	ldr	r0, [sp, #8]
    118c:	ldr	r1, [fp, #-4]
    1190:	sub	r0, r0, r1
    1194:	str	r0, [sp, #4]
    1198:	ldr	r0, [fp, #-4]
    119c:	ldr	r1, [sp, #8]
    11a0:	bl	1790 <flatcc_json_parser_symbol_part_ext>
    11a4:	mov	sp, fp
    11a8:	pop	{fp, pc}

000011ac <flatcc_json_parser_symbol_end>:
    11ac:	push	{fp, lr}
    11b0:	mov	fp, sp
    11b4:	sub	sp, sp, #32
    11b8:	str	r0, [fp, #-8]
    11bc:	str	r1, [fp, #-12]
    11c0:	str	r2, [sp, #16]
    11c4:	movw	r0, #0
    11c8:	strb	r0, [sp, #14]
    11cc:	ldr	r0, [fp, #-8]
    11d0:	ldr	r0, [r0, #12]
    11d4:	cmp	r0, #0
    11d8:	beq	12e0 <flatcc_json_parser_symbol_end+0x134>
    11dc:	b	11e0 <flatcc_json_parser_symbol_end+0x34>
    11e0:	ldr	r0, [fp, #-12]
    11e4:	ldr	r1, [sp, #16]
    11e8:	cmp	r0, r1
    11ec:	movw	r0, #0
    11f0:	str	r0, [sp, #8]
    11f4:	beq	1210 <flatcc_json_parser_symbol_end+0x64>
    11f8:	ldr	r0, [fp, #-12]
    11fc:	ldrb	r0, [r0]
    1200:	cmp	r0, #32
    1204:	movw	r0, #0
    1208:	movgt	r0, #1
    120c:	str	r0, [sp, #8]
    1210:	ldr	r0, [sp, #8]
    1214:	tst	r0, #1
    1218:	beq	12b4 <flatcc_json_parser_symbol_end+0x108>
    121c:	ldr	r0, [fp, #-12]
    1220:	ldrb	r0, [r0]
    1224:	strb	r0, [sp, #15]
    1228:	strb	r0, [sp, #14]
    122c:	ldrb	r0, [sp, #15]
    1230:	cmp	r0, #95	; 0x5f
    1234:	beq	126c <flatcc_json_parser_symbol_end+0xc0>
    1238:	ldrb	r0, [sp, #15]
    123c:	cmp	r0, #46	; 0x2e
    1240:	beq	126c <flatcc_json_parser_symbol_end+0xc0>
    1244:	ldrb	r0, [sp, #15]
    1248:	and	r0, r0, #128	; 0x80
    124c:	cmp	r0, #0
    1250:	bne	126c <flatcc_json_parser_symbol_end+0xc0>
    1254:	ldrb	r0, [sp, #15]
    1258:	cmp	r0, #48	; 0x30
    125c:	blt	127c <flatcc_json_parser_symbol_end+0xd0>
    1260:	ldrb	r0, [sp, #15]
    1264:	cmp	r0, #57	; 0x39
    1268:	bgt	127c <flatcc_json_parser_symbol_end+0xd0>
    126c:	ldr	r0, [fp, #-12]
    1270:	add	r0, r0, #1
    1274:	str	r0, [fp, #-12]
    1278:	b	11e0 <flatcc_json_parser_symbol_end+0x34>
    127c:	ldrb	r0, [sp, #15]
    1280:	orr	r0, r0, #32
    1284:	strb	r0, [sp, #15]
    1288:	ldrb	r0, [sp, #15]
    128c:	cmp	r0, #97	; 0x61
    1290:	blt	12b0 <flatcc_json_parser_symbol_end+0x104>
    1294:	ldrb	r0, [sp, #15]
    1298:	cmp	r0, #122	; 0x7a
    129c:	bgt	12b0 <flatcc_json_parser_symbol_end+0x104>
    12a0:	ldr	r0, [fp, #-12]
    12a4:	add	r0, r0, #1
    12a8:	str	r0, [fp, #-12]
    12ac:	b	11e0 <flatcc_json_parser_symbol_end+0x34>
    12b0:	b	12b4 <flatcc_json_parser_symbol_end+0x108>
    12b4:	ldrb	r0, [sp, #14]
    12b8:	cmp	r0, #46	; 0x2e
    12bc:	bne	12dc <flatcc_json_parser_symbol_end+0x130>
    12c0:	ldr	r0, [fp, #-8]
    12c4:	ldr	r1, [fp, #-12]
    12c8:	ldr	r2, [sp, #16]
    12cc:	movw	r3, #5
    12d0:	bl	0 <flatcc_json_parser_set_error>
    12d4:	str	r0, [fp, #-4]
    12d8:	b	13b4 <flatcc_json_parser_symbol_end+0x208>
    12dc:	b	13ac <flatcc_json_parser_symbol_end+0x200>
    12e0:	b	12e4 <flatcc_json_parser_symbol_end+0x138>
    12e4:	ldr	r0, [fp, #-12]
    12e8:	ldr	r1, [sp, #16]
    12ec:	cmp	r0, r1
    12f0:	movw	r0, #0
    12f4:	str	r0, [sp, #4]
    12f8:	beq	1314 <flatcc_json_parser_symbol_end+0x168>
    12fc:	ldr	r0, [fp, #-12]
    1300:	ldrb	r0, [r0]
    1304:	cmp	r0, #34	; 0x22
    1308:	movw	r0, #0
    130c:	movne	r0, #1
    1310:	str	r0, [sp, #4]
    1314:	ldr	r0, [sp, #4]
    1318:	tst	r0, #1
    131c:	beq	1364 <flatcc_json_parser_symbol_end+0x1b8>
    1320:	ldr	r0, [fp, #-12]
    1324:	ldrb	r0, [r0]
    1328:	cmp	r0, #92	; 0x5c
    132c:	bne	1354 <flatcc_json_parser_symbol_end+0x1a8>
    1330:	ldr	r0, [sp, #16]
    1334:	ldr	r1, [fp, #-12]
    1338:	sub	r0, r0, r1
    133c:	cmp	r0, #2
    1340:	bge	1348 <flatcc_json_parser_symbol_end+0x19c>
    1344:	b	1364 <flatcc_json_parser_symbol_end+0x1b8>
    1348:	ldr	r0, [fp, #-12]
    134c:	add	r0, r0, #1
    1350:	str	r0, [fp, #-12]
    1354:	ldr	r0, [fp, #-12]
    1358:	add	r0, r0, #1
    135c:	str	r0, [fp, #-12]
    1360:	b	12e4 <flatcc_json_parser_symbol_end+0x138>
    1364:	ldr	r0, [fp, #-12]
    1368:	ldr	r1, [sp, #16]
    136c:	cmp	r0, r1
    1370:	beq	1384 <flatcc_json_parser_symbol_end+0x1d8>
    1374:	ldr	r0, [fp, #-12]
    1378:	ldrb	r0, [r0]
    137c:	cmp	r0, #34	; 0x22
    1380:	beq	13a0 <flatcc_json_parser_symbol_end+0x1f4>
    1384:	ldr	r0, [fp, #-8]
    1388:	ldr	r1, [fp, #-12]
    138c:	ldr	r2, [sp, #16]
    1390:	movw	r3, #20
    1394:	bl	0 <flatcc_json_parser_set_error>
    1398:	str	r0, [fp, #-4]
    139c:	b	13b4 <flatcc_json_parser_symbol_end+0x208>
    13a0:	ldr	r0, [fp, #-12]
    13a4:	add	r0, r0, #1
    13a8:	str	r0, [fp, #-12]
    13ac:	ldr	r0, [fp, #-12]
    13b0:	str	r0, [fp, #-4]
    13b4:	ldr	r0, [fp, #-4]
    13b8:	mov	sp, fp
    13bc:	pop	{fp, pc}

000013c0 <flatcc_json_parser_uint8>:
    13c0:	push	{r4, r5, fp, lr}
    13c4:	add	fp, sp, #8
    13c8:	sub	sp, sp, #56	; 0x38
    13cc:	str	r0, [fp, #-16]
    13d0:	str	r1, [fp, #-20]	; 0xffffffec
    13d4:	str	r2, [fp, #-24]	; 0xffffffe8
    13d8:	str	r3, [fp, #-28]	; 0xffffffe4
    13dc:	mov	r0, #0
    13e0:	str	r0, [sp, #28]
    13e4:	str	r0, [sp, #24]
    13e8:	movw	r0, #0
    13ec:	str	r0, [sp, #20]
    13f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    13f4:	str	r0, [sp, #16]
    13f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    13fc:	movw	r1, #0
    1400:	strb	r1, [r0]
    1404:	ldr	r0, [fp, #-20]	; 0xffffffec
    1408:	ldr	r1, [fp, #-24]	; 0xffffffe8
    140c:	cmp	r0, r1
    1410:	bne	1420 <flatcc_json_parser_uint8+0x60>
    1414:	ldr	r0, [fp, #-20]	; 0xffffffec
    1418:	str	r0, [fp, #-12]
    141c:	b	1490 <flatcc_json_parser_uint8+0xd0>
    1420:	ldr	r0, [fp, #-16]
    1424:	ldr	r1, [fp, #-20]	; 0xffffffec
    1428:	ldr	r2, [fp, #-24]	; 0xffffffe8
    142c:	add	r3, sp, #20
    1430:	add	ip, sp, #24
    1434:	str	ip, [sp]
    1438:	bl	0 <flatcc_json_parser_integer>
    143c:	str	r0, [fp, #-20]	; 0xffffffec
    1440:	ldr	r0, [fp, #-20]	; 0xffffffec
    1444:	ldr	r1, [sp, #16]
    1448:	cmp	r0, r1
    144c:	beq	1488 <flatcc_json_parser_uint8+0xc8>
    1450:	ldr	r0, [fp, #-16]
    1454:	ldr	r1, [fp, #-20]	; 0xffffffec
    1458:	ldr	r2, [fp, #-24]	; 0xffffffe8
    145c:	ldr	r3, [sp, #20]
    1460:	ldr	ip, [sp, #24]
    1464:	ldr	lr, [sp, #28]
    1468:	ldr	r4, [fp, #-28]	; 0xffffffe4
    146c:	mov	r5, sp
    1470:	str	r4, [r5, #8]
    1474:	str	lr, [r5, #4]
    1478:	str	ip, [r5]
    147c:	bl	1904 <flatcc_json_parser_coerce_uint8>
    1480:	str	r0, [fp, #-12]
    1484:	b	1490 <flatcc_json_parser_uint8+0xd0>
    1488:	ldr	r0, [fp, #-20]	; 0xffffffec
    148c:	str	r0, [fp, #-12]
    1490:	ldr	r0, [fp, #-12]
    1494:	sub	sp, fp, #8
    1498:	pop	{r4, r5, fp, pc}

0000149c <flatcc_json_parser_int64>:
    149c:	push	{r4, r5, fp, lr}
    14a0:	add	fp, sp, #8
    14a4:	sub	sp, sp, #56	; 0x38
    14a8:	str	r0, [fp, #-16]
    14ac:	str	r1, [fp, #-20]	; 0xffffffec
    14b0:	str	r2, [fp, #-24]	; 0xffffffe8
    14b4:	str	r3, [fp, #-28]	; 0xffffffe4
    14b8:	mov	r0, #0
    14bc:	str	r0, [sp, #28]
    14c0:	str	r0, [sp, #24]
    14c4:	str	r0, [sp, #20]
    14c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    14cc:	str	r1, [sp, #16]
    14d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    14d4:	str	r0, [r1, #4]
    14d8:	str	r0, [r1]
    14dc:	ldr	r0, [fp, #-20]	; 0xffffffec
    14e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
    14e4:	cmp	r0, r1
    14e8:	bne	14f8 <flatcc_json_parser_int64+0x5c>
    14ec:	ldr	r0, [fp, #-20]	; 0xffffffec
    14f0:	str	r0, [fp, #-12]
    14f4:	b	1568 <flatcc_json_parser_int64+0xcc>
    14f8:	ldr	r0, [fp, #-16]
    14fc:	ldr	r1, [fp, #-20]	; 0xffffffec
    1500:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1504:	add	r3, sp, #20
    1508:	add	ip, sp, #24
    150c:	str	ip, [sp]
    1510:	bl	0 <flatcc_json_parser_integer>
    1514:	str	r0, [fp, #-20]	; 0xffffffec
    1518:	ldr	r0, [fp, #-20]	; 0xffffffec
    151c:	ldr	r1, [sp, #16]
    1520:	cmp	r0, r1
    1524:	beq	1560 <flatcc_json_parser_int64+0xc4>
    1528:	ldr	r0, [fp, #-16]
    152c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1530:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1534:	ldr	r3, [sp, #20]
    1538:	ldr	ip, [sp, #24]
    153c:	ldr	lr, [sp, #28]
    1540:	ldr	r4, [fp, #-28]	; 0xffffffe4
    1544:	mov	r5, sp
    1548:	str	r4, [r5, #8]
    154c:	str	lr, [r5, #4]
    1550:	str	ip, [r5]
    1554:	bl	19bc <flatcc_json_parser_coerce_int64>
    1558:	str	r0, [fp, #-12]
    155c:	b	1568 <flatcc_json_parser_int64+0xcc>
    1560:	ldr	r0, [fp, #-20]	; 0xffffffec
    1564:	str	r0, [fp, #-12]
    1568:	ldr	r0, [fp, #-12]
    156c:	sub	sp, fp, #8
    1570:	pop	{r4, r5, fp, pc}

00001574 <flatcc_json_parser_uint32>:
    1574:	push	{r4, r5, fp, lr}
    1578:	add	fp, sp, #8
    157c:	sub	sp, sp, #56	; 0x38
    1580:	str	r0, [fp, #-16]
    1584:	str	r1, [fp, #-20]	; 0xffffffec
    1588:	str	r2, [fp, #-24]	; 0xffffffe8
    158c:	str	r3, [fp, #-28]	; 0xffffffe4
    1590:	mov	r0, #0
    1594:	str	r0, [sp, #28]
    1598:	str	r0, [sp, #24]
    159c:	movw	r0, #0
    15a0:	str	r0, [sp, #20]
    15a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    15a8:	str	r1, [sp, #16]
    15ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    15b0:	str	r0, [r1]
    15b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    15b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
    15bc:	cmp	r0, r1
    15c0:	bne	15d0 <flatcc_json_parser_uint32+0x5c>
    15c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    15c8:	str	r0, [fp, #-12]
    15cc:	b	1640 <flatcc_json_parser_uint32+0xcc>
    15d0:	ldr	r0, [fp, #-16]
    15d4:	ldr	r1, [fp, #-20]	; 0xffffffec
    15d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    15dc:	add	r3, sp, #20
    15e0:	add	ip, sp, #24
    15e4:	str	ip, [sp]
    15e8:	bl	0 <flatcc_json_parser_integer>
    15ec:	str	r0, [fp, #-20]	; 0xffffffec
    15f0:	ldr	r0, [fp, #-20]	; 0xffffffec
    15f4:	ldr	r1, [sp, #16]
    15f8:	cmp	r0, r1
    15fc:	beq	1638 <flatcc_json_parser_uint32+0xc4>
    1600:	ldr	r0, [fp, #-16]
    1604:	ldr	r1, [fp, #-20]	; 0xffffffec
    1608:	ldr	r2, [fp, #-24]	; 0xffffffe8
    160c:	ldr	r3, [sp, #20]
    1610:	ldr	ip, [sp, #24]
    1614:	ldr	lr, [sp, #28]
    1618:	ldr	r4, [fp, #-28]	; 0xffffffe4
    161c:	mov	r5, sp
    1620:	str	r4, [r5, #8]
    1624:	str	lr, [r5, #4]
    1628:	str	ip, [r5]
    162c:	bl	1aac <flatcc_json_parser_coerce_uint32>
    1630:	str	r0, [fp, #-12]
    1634:	b	1640 <flatcc_json_parser_uint32+0xcc>
    1638:	ldr	r0, [fp, #-20]	; 0xffffffec
    163c:	str	r0, [fp, #-12]
    1640:	ldr	r0, [fp, #-12]
    1644:	sub	sp, fp, #8
    1648:	pop	{r4, r5, fp, pc}

0000164c <flatcc_json_parser_string_start>:
    164c:	push	{fp, lr}
    1650:	mov	fp, sp
    1654:	sub	sp, sp, #16
    1658:	str	r0, [sp, #8]
    165c:	str	r1, [sp, #4]
    1660:	str	r2, [sp]
    1664:	ldr	r0, [sp, #4]
    1668:	ldr	r1, [sp]
    166c:	cmp	r0, r1
    1670:	beq	1684 <flatcc_json_parser_string_start+0x38>
    1674:	ldr	r0, [sp, #4]
    1678:	ldrb	r0, [r0]
    167c:	cmp	r0, #34	; 0x22
    1680:	beq	16a0 <flatcc_json_parser_string_start+0x54>
    1684:	ldr	r0, [sp, #8]
    1688:	ldr	r1, [sp, #4]
    168c:	ldr	r2, [sp]
    1690:	movw	r3, #16
    1694:	bl	0 <flatcc_json_parser_set_error>
    1698:	str	r0, [fp, #-4]
    169c:	b	16b0 <flatcc_json_parser_string_start+0x64>
    16a0:	ldr	r0, [sp, #4]
    16a4:	add	r0, r0, #1
    16a8:	str	r0, [sp, #4]
    16ac:	str	r0, [fp, #-4]
    16b0:	ldr	r0, [fp, #-4]
    16b4:	mov	sp, fp
    16b8:	pop	{fp, pc}

000016bc <flatcc_json_parser_string_end>:
    16bc:	push	{fp, lr}
    16c0:	mov	fp, sp
    16c4:	sub	sp, sp, #16
    16c8:	str	r0, [sp, #8]
    16cc:	str	r1, [sp, #4]
    16d0:	str	r2, [sp]
    16d4:	ldr	r0, [sp, #4]
    16d8:	ldr	r1, [sp]
    16dc:	cmp	r0, r1
    16e0:	beq	16f4 <flatcc_json_parser_string_end+0x38>
    16e4:	ldr	r0, [sp, #4]
    16e8:	ldrb	r0, [r0]
    16ec:	cmp	r0, #34	; 0x22
    16f0:	beq	1710 <flatcc_json_parser_string_end+0x54>
    16f4:	ldr	r0, [sp, #8]
    16f8:	ldr	r1, [sp, #4]
    16fc:	ldr	r2, [sp]
    1700:	movw	r3, #20
    1704:	bl	0 <flatcc_json_parser_set_error>
    1708:	str	r0, [fp, #-4]
    170c:	b	1720 <flatcc_json_parser_string_end+0x64>
    1710:	ldr	r0, [sp, #4]
    1714:	add	r0, r0, #1
    1718:	str	r0, [sp, #4]
    171c:	str	r0, [fp, #-4]
    1720:	ldr	r0, [fp, #-4]
    1724:	mov	sp, fp
    1728:	pop	{fp, pc}

0000172c <main>:
    172c:	push	{r4, r5, fp, lr}
    1730:	add	fp, sp, #8
    1734:	sub	sp, sp, #248	; 0xf8
    1738:	movw	r0, #0
    173c:	str	r0, [fp, #-12]
    1740:	mvn	r0, #0
    1744:	str	r0, [fp, #-16]
    1748:	add	r0, sp, #8
    174c:	bl	0 <flatcc_builder_init>
    1750:	movw	lr, #645	; 0x285
    1754:	movw	r1, #0
    1758:	movt	r1, #0
    175c:	add	r2, r1, lr
    1760:	add	lr, sp, #8
    1764:	str	r0, [sp, #4]
    1768:	mov	r0, lr
    176c:	sub	r3, fp, #16
    1770:	bl	0 <test>
    1774:	add	r1, sp, #8
    1778:	str	r0, [sp]
    177c:	mov	r0, r1
    1780:	bl	0 <flatcc_builder_clear>
    1784:	ldr	r0, [fp, #-16]
    1788:	sub	sp, fp, #8
    178c:	pop	{r4, r5, fp, pc}

00001790 <flatcc_json_parser_symbol_part_ext>:
    1790:	sub	sp, sp, #24
    1794:	str	r0, [sp, #20]
    1798:	str	r1, [sp, #16]
    179c:	mov	r0, #0
    17a0:	str	r0, [sp, #12]
    17a4:	str	r0, [sp, #8]
    17a8:	ldr	r0, [sp, #16]
    17ac:	ldr	r1, [sp, #20]
    17b0:	sub	r0, r0, r1
    17b4:	str	r0, [sp, #4]
    17b8:	ldr	r0, [sp, #4]
    17bc:	cmp	r0, #8
    17c0:	bls	17cc <flatcc_json_parser_symbol_part_ext+0x3c>
    17c4:	movw	r0, #8
    17c8:	str	r0, [sp, #4]
    17cc:	ldr	r0, [sp, #4]
    17d0:	cmp	r0, #8
    17d4:	str	r0, [sp]
    17d8:	bhi	18f4 <flatcc_json_parser_symbol_part_ext+0x164>
    17dc:	add	r0, pc, #8
    17e0:	ldr	r1, [sp]
    17e4:	ldr	r0, [r0, r1, lsl #2]
    17e8:	mov	pc, r0
    17ec:	.word	0x000018f0
    17f0:	.word	0x000018d4
    17f4:	.word	0x000018b8
    17f8:	.word	0x0000189c
    17fc:	.word	0x00001880
    1800:	.word	0x00001864
    1804:	.word	0x00001848
    1808:	.word	0x0000182c
    180c:	.word	0x00001810
    1810:	ldr	r0, [sp, #20]
    1814:	ldrb	r0, [r0, #7]
    1818:	ldr	r1, [sp, #8]
    181c:	ldr	r2, [sp, #12]
    1820:	orr	r0, r1, r0
    1824:	str	r2, [sp, #12]
    1828:	str	r0, [sp, #8]
    182c:	ldr	r0, [sp, #20]
    1830:	ldrb	r0, [r0, #6]
    1834:	ldr	r1, [sp, #8]
    1838:	ldr	r2, [sp, #12]
    183c:	orr	r0, r1, r0, lsl #8
    1840:	str	r2, [sp, #12]
    1844:	str	r0, [sp, #8]
    1848:	ldr	r0, [sp, #20]
    184c:	ldrb	r0, [r0, #5]
    1850:	ldr	r1, [sp, #8]
    1854:	ldr	r2, [sp, #12]
    1858:	orr	r0, r1, r0, lsl #16
    185c:	str	r2, [sp, #12]
    1860:	str	r0, [sp, #8]
    1864:	ldr	r0, [sp, #20]
    1868:	ldrb	r0, [r0, #4]
    186c:	ldr	r1, [sp, #8]
    1870:	ldr	r2, [sp, #12]
    1874:	orr	r0, r1, r0, lsl #24
    1878:	str	r2, [sp, #12]
    187c:	str	r0, [sp, #8]
    1880:	ldr	r0, [sp, #20]
    1884:	ldrb	r0, [r0, #3]
    1888:	ldr	r1, [sp, #8]
    188c:	ldr	r2, [sp, #12]
    1890:	orr	r0, r2, r0
    1894:	str	r1, [sp, #8]
    1898:	str	r0, [sp, #12]
    189c:	ldr	r0, [sp, #20]
    18a0:	ldrb	r0, [r0, #2]
    18a4:	ldr	r1, [sp, #8]
    18a8:	ldr	r2, [sp, #12]
    18ac:	orr	r0, r2, r0, lsl #8
    18b0:	str	r1, [sp, #8]
    18b4:	str	r0, [sp, #12]
    18b8:	ldr	r0, [sp, #20]
    18bc:	ldrb	r0, [r0, #1]
    18c0:	ldr	r1, [sp, #8]
    18c4:	ldr	r2, [sp, #12]
    18c8:	orr	r0, r2, r0, lsl #16
    18cc:	str	r1, [sp, #8]
    18d0:	str	r0, [sp, #12]
    18d4:	ldr	r0, [sp, #20]
    18d8:	ldrb	r0, [r0]
    18dc:	ldr	r1, [sp, #8]
    18e0:	ldr	r2, [sp, #12]
    18e4:	orr	r0, r2, r0, lsl #24
    18e8:	str	r1, [sp, #8]
    18ec:	str	r0, [sp, #12]
    18f0:	b	18f4 <flatcc_json_parser_symbol_part_ext+0x164>
    18f4:	ldr	r0, [sp, #8]
    18f8:	ldr	r1, [sp, #12]
    18fc:	add	sp, sp, #24
    1900:	bx	lr

00001904 <flatcc_json_parser_coerce_uint8>:
    1904:	push	{r4, sl, fp, lr}
    1908:	add	fp, sp, #8
    190c:	sub	sp, sp, #48	; 0x30
    1910:	ldr	ip, [fp, #12]
    1914:	ldr	lr, [fp, #8]
    1918:	ldr	r4, [fp, #16]
    191c:	str	r0, [fp, #-16]
    1920:	str	r1, [fp, #-20]	; 0xffffffec
    1924:	str	r2, [fp, #-24]	; 0xffffffe8
    1928:	str	r3, [sp, #28]
    192c:	str	ip, [sp, #20]
    1930:	str	lr, [sp, #16]
    1934:	ldr	r0, [sp, #28]
    1938:	cmp	r0, #0
    193c:	str	r4, [sp, #12]
    1940:	beq	1960 <flatcc_json_parser_coerce_uint8+0x5c>
    1944:	ldr	r0, [fp, #-16]
    1948:	ldr	r1, [fp, #-20]	; 0xffffffec
    194c:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1950:	movw	r3, #8
    1954:	bl	0 <flatcc_json_parser_set_error>
    1958:	str	r0, [fp, #-12]
    195c:	b	19b0 <flatcc_json_parser_coerce_uint8+0xac>
    1960:	ldr	r0, [sp, #16]
    1964:	ldr	r1, [sp, #20]
    1968:	subs	r0, r0, #256	; 0x100
    196c:	sbcs	r1, r1, #0
    1970:	str	r0, [sp, #8]
    1974:	str	r1, [sp, #4]
    1978:	bcc	199c <flatcc_json_parser_coerce_uint8+0x98>
    197c:	b	1980 <flatcc_json_parser_coerce_uint8+0x7c>
    1980:	ldr	r0, [fp, #-16]
    1984:	ldr	r1, [fp, #-20]	; 0xffffffec
    1988:	ldr	r2, [fp, #-24]	; 0xffffffe8
    198c:	movw	r3, #7
    1990:	bl	0 <flatcc_json_parser_set_error>
    1994:	str	r0, [fp, #-12]
    1998:	b	19b0 <flatcc_json_parser_coerce_uint8+0xac>
    199c:	ldrb	r0, [sp, #16]
    19a0:	ldr	r1, [fp, #16]
    19a4:	strb	r0, [r1]
    19a8:	ldr	r0, [fp, #-20]	; 0xffffffec
    19ac:	str	r0, [fp, #-12]
    19b0:	ldr	r0, [fp, #-12]
    19b4:	sub	sp, fp, #8
    19b8:	pop	{r4, sl, fp, pc}

000019bc <flatcc_json_parser_coerce_int64>:
    19bc:	push	{r4, sl, fp, lr}
    19c0:	add	fp, sp, #8
    19c4:	sub	sp, sp, #48	; 0x30
    19c8:	ldr	ip, [fp, #12]
    19cc:	ldr	lr, [fp, #8]
    19d0:	ldr	r4, [fp, #16]
    19d4:	str	r0, [fp, #-16]
    19d8:	str	r1, [fp, #-20]	; 0xffffffec
    19dc:	str	r2, [fp, #-24]	; 0xffffffe8
    19e0:	str	r3, [sp, #28]
    19e4:	str	ip, [sp, #20]
    19e8:	str	lr, [sp, #16]
    19ec:	ldr	r0, [sp, #28]
    19f0:	cmp	r0, #0
    19f4:	str	r4, [sp, #12]
    19f8:	beq	1a58 <flatcc_json_parser_coerce_int64+0x9c>
    19fc:	ldr	r0, [sp, #16]
    1a00:	ldr	r1, [sp, #20]
    1a04:	subs	r0, r0, #1
    1a08:	sbcs	r1, r1, #-2147483648	; 0x80000000
    1a0c:	str	r0, [sp, #8]
    1a10:	str	r1, [sp, #4]
    1a14:	bcc	1a38 <flatcc_json_parser_coerce_int64+0x7c>
    1a18:	b	1a1c <flatcc_json_parser_coerce_int64+0x60>
    1a1c:	ldr	r0, [fp, #-16]
    1a20:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a24:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1a28:	movw	r3, #8
    1a2c:	bl	0 <flatcc_json_parser_set_error>
    1a30:	str	r0, [fp, #-12]
    1a34:	b	1aa0 <flatcc_json_parser_coerce_int64+0xe4>
    1a38:	ldr	r0, [sp, #16]
    1a3c:	ldr	r1, [sp, #20]
    1a40:	rsbs	r0, r0, #0
    1a44:	rsc	r1, r1, #0
    1a48:	ldr	r2, [fp, #16]
    1a4c:	str	r0, [r2]
    1a50:	str	r1, [r2, #4]
    1a54:	b	1a98 <flatcc_json_parser_coerce_int64+0xdc>
    1a58:	ldr	r0, [sp, #20]
    1a5c:	cmn	r0, #1
    1a60:	bgt	1a84 <flatcc_json_parser_coerce_int64+0xc8>
    1a64:	b	1a68 <flatcc_json_parser_coerce_int64+0xac>
    1a68:	ldr	r0, [fp, #-16]
    1a6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a70:	ldr	r2, [fp, #-24]	; 0xffffffe8
    1a74:	movw	r3, #7
    1a78:	bl	0 <flatcc_json_parser_set_error>
    1a7c:	str	r0, [fp, #-12]
    1a80:	b	1aa0 <flatcc_json_parser_coerce_int64+0xe4>
    1a84:	ldr	r0, [sp, #16]
    1a88:	ldr	r1, [sp, #20]
    1a8c:	ldr	r2, [fp, #16]
    1a90:	str	r1, [r2, #4]
    1a94:	str	r0, [r2]
    1a98:	ldr	r0, [fp, #-20]	; 0xffffffec
    1a9c:	str	r0, [fp, #-12]
    1aa0:	ldr	r0, [fp, #-12]
    1aa4:	sub	sp, fp, #8
    1aa8:	pop	{r4, sl, fp, pc}

00001aac <flatcc_json_parser_coerce_uint32>:
    1aac:	push	{r4, sl, fp, lr}
    1ab0:	add	fp, sp, #8
    1ab4:	sub	sp, sp, #40	; 0x28
    1ab8:	ldr	ip, [fp, #12]
    1abc:	ldr	lr, [fp, #8]
    1ac0:	ldr	r4, [fp, #16]
    1ac4:	str	r0, [fp, #-16]
    1ac8:	str	r1, [fp, #-20]	; 0xffffffec
    1acc:	str	r2, [sp, #24]
    1ad0:	str	r3, [sp, #20]
    1ad4:	str	ip, [sp, #12]
    1ad8:	str	lr, [sp, #8]
    1adc:	ldr	r0, [sp, #20]
    1ae0:	cmp	r0, #0
    1ae4:	str	r4, [sp, #4]
    1ae8:	beq	1b08 <flatcc_json_parser_coerce_uint32+0x5c>
    1aec:	ldr	r0, [fp, #-16]
    1af0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1af4:	ldr	r2, [sp, #24]
    1af8:	movw	r3, #8
    1afc:	bl	0 <flatcc_json_parser_set_error>
    1b00:	str	r0, [fp, #-12]
    1b04:	b	1b48 <flatcc_json_parser_coerce_uint32+0x9c>
    1b08:	ldr	r0, [sp, #12]
    1b0c:	cmp	r0, #0
    1b10:	beq	1b34 <flatcc_json_parser_coerce_uint32+0x88>
    1b14:	b	1b18 <flatcc_json_parser_coerce_uint32+0x6c>
    1b18:	ldr	r0, [fp, #-16]
    1b1c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b20:	ldr	r2, [sp, #24]
    1b24:	movw	r3, #7
    1b28:	bl	0 <flatcc_json_parser_set_error>
    1b2c:	str	r0, [fp, #-12]
    1b30:	b	1b48 <flatcc_json_parser_coerce_uint32+0x9c>
    1b34:	ldr	r0, [sp, #8]
    1b38:	ldr	r1, [fp, #16]
    1b3c:	str	r0, [r1]
    1b40:	ldr	r0, [fp, #-20]	; 0xffffffec
    1b44:	str	r0, [fp, #-12]
    1b48:	ldr	r0, [fp, #-12]
    1b4c:	sub	sp, fp, #8
    1b50:	pop	{r4, sl, fp, pc}
