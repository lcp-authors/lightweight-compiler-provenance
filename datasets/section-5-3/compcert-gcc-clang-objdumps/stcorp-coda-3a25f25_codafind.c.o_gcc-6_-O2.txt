
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codafind.dir/tools/codafind/codafind.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_help>:
   0:	push	{r4, lr}
   4:	ldr	r0, [pc, #228]	; f0 <print_help+0xf0>
   8:	bl	0 <puts>
   c:	ldr	r0, [pc, #224]	; f4 <print_help+0xf4>
  10:	bl	0 <puts>
  14:	ldr	r0, [pc, #220]	; f8 <print_help+0xf8>
  18:	bl	0 <puts>
  1c:	ldr	r0, [pc, #216]	; fc <print_help+0xfc>
  20:	bl	0 <puts>
  24:	mov	r0, #10
  28:	bl	0 <putchar>
  2c:	ldr	r0, [pc, #204]	; 100 <print_help+0x100>
  30:	bl	0 <puts>
  34:	ldr	r0, [pc, #200]	; 104 <print_help+0x104>
  38:	bl	0 <puts>
  3c:	ldr	r0, [pc, #196]	; 108 <print_help+0x108>
  40:	bl	0 <puts>
  44:	ldr	r0, [pc, #192]	; 10c <print_help+0x10c>
  48:	bl	0 <puts>
  4c:	ldr	r0, [pc, #188]	; 110 <print_help+0x110>
  50:	bl	0 <puts>
  54:	ldr	r0, [pc, #184]	; 114 <print_help+0x114>
  58:	bl	0 <puts>
  5c:	ldr	r0, [pc, #180]	; 118 <print_help+0x118>
  60:	bl	0 <puts>
  64:	ldr	r0, [pc, #176]	; 11c <print_help+0x11c>
  68:	bl	0 <puts>
  6c:	ldr	r0, [pc, #172]	; 120 <print_help+0x120>
  70:	bl	0 <puts>
  74:	mov	r0, #10
  78:	bl	0 <putchar>
  7c:	ldr	r0, [pc, #160]	; 124 <print_help+0x124>
  80:	bl	0 <puts>
  84:	ldr	r0, [pc, #156]	; 128 <print_help+0x128>
  88:	bl	0 <puts>
  8c:	mov	r0, #10
  90:	bl	0 <putchar>
  94:	ldr	r0, [pc, #144]	; 12c <print_help+0x12c>
  98:	bl	0 <puts>
  9c:	ldr	r0, [pc, #140]	; 130 <print_help+0x130>
  a0:	bl	0 <puts>
  a4:	mov	r0, #10
  a8:	bl	0 <putchar>
  ac:	ldr	r0, [pc, #128]	; 134 <print_help+0x134>
  b0:	bl	0 <puts>
  b4:	ldr	r0, [pc, #124]	; 138 <print_help+0x138>
  b8:	bl	0 <puts>
  bc:	ldr	r0, [pc, #120]	; 13c <print_help+0x13c>
  c0:	bl	0 <puts>
  c4:	ldr	r0, [pc, #116]	; 140 <print_help+0x140>
  c8:	bl	0 <puts>
  cc:	ldr	r0, [pc, #112]	; 144 <print_help+0x144>
  d0:	bl	0 <puts>
  d4:	ldr	r0, [pc, #108]	; 148 <print_help+0x148>
  d8:	bl	0 <puts>
  dc:	ldr	r0, [pc, #104]	; 14c <print_help+0x14c>
  e0:	bl	0 <puts>
  e4:	mov	r0, #10
  e8:	pop	{r4, lr}
  ec:	b	0 <putchar>
  f0:	.word	0x00000000
  f4:	.word	0x00000008
  f8:	.word	0x0000004c
  fc:	.word	0x0000009c
 100:	.word	0x000000b4
 104:	.word	0x000000c8
 108:	.word	0x000000f0
 10c:	.word	0x0000012c
 110:	.word	0x0000015c
 114:	.word	0x000001a4
 118:	.word	0x000001f4
 11c:	.word	0x00000220
 120:	.word	0x0000023c
 124:	.word	0x00000274
 128:	.word	0x0000028c
 12c:	.word	0x000002ac
 130:	.word	0x000002c8
 134:	.word	0x000002fc
 138:	.word	0x0000034c
 13c:	.word	0x00000398
 140:	.word	0x000003c4
 144:	.word	0x00000410
 148:	.word	0x00000458
 14c:	.word	0x00000498

00000150 <callback>:
 150:	push	{r4, lr}
 154:	subs	r4, r1, #0
 158:	mov	r1, r0
 15c:	beq	190 <callback+0x40>
 160:	cmp	r4, #2
 164:	beq	1e4 <callback+0x94>
 168:	cmp	r4, #1
 16c:	beq	1fc <callback+0xac>
 170:	ldr	r3, [pc, #216]	; 250 <callback+0x100>
 174:	ldr	r3, [r3]
 178:	cmp	r3, #0
 17c:	bne	1b0 <callback+0x60>
 180:	cmp	r4, #4
 184:	beq	1dc <callback+0x8c>
 188:	mov	r0, #0
 18c:	pop	{r4, pc}
 190:	ldr	r0, [pc, #188]	; 254 <callback+0x104>
 194:	mov	r3, r2
 198:	mov	r2, r1
 19c:	ldr	r0, [r0]
 1a0:	ldr	r1, [pc, #176]	; 258 <callback+0x108>
 1a4:	bl	0 <fprintf>
 1a8:	mov	r0, #0
 1ac:	pop	{r4, pc}
 1b0:	ldr	r0, [pc, #164]	; 25c <callback+0x10c>
 1b4:	bl	0 <printf>
 1b8:	cmp	r4, #5
 1bc:	ldrls	pc, [pc, r4, lsl #2]
 1c0:	b	188 <callback+0x38>
 1c4:	.word	0x0000023c
 1c8:	.word	0x0000023c
 1cc:	.word	0x0000023c
 1d0:	.word	0x00000230
 1d4:	.word	0x00000224
 1d8:	.word	0x00000218
 1dc:	bl	0 <puts>
 1e0:	b	188 <callback+0x38>
 1e4:	ldr	r3, [pc, #104]	; 254 <callback+0x104>
 1e8:	mov	r2, r0
 1ec:	ldr	r1, [pc, #108]	; 260 <callback+0x110>
 1f0:	ldr	r0, [r3]
 1f4:	bl	0 <fprintf>
 1f8:	b	188 <callback+0x38>
 1fc:	ldr	r0, [pc, #80]	; 254 <callback+0x104>
 200:	mov	r3, r2
 204:	mov	r2, r1
 208:	ldr	r0, [r0]
 20c:	ldr	r1, [pc, #80]	; 264 <callback+0x114>
 210:	bl	0 <fprintf>
 214:	b	188 <callback+0x38>
 218:	ldr	r0, [pc, #72]	; 268 <callback+0x118>
 21c:	bl	0 <puts>
 220:	b	188 <callback+0x38>
 224:	ldr	r0, [pc, #64]	; 26c <callback+0x11c>
 228:	bl	0 <puts>
 22c:	b	188 <callback+0x38>
 230:	ldr	r0, [pc, #56]	; 270 <callback+0x120>
 234:	bl	0 <puts>
 238:	b	188 <callback+0x38>
 23c:	ldr	r3, [pc, #48]	; 274 <callback+0x124>
 240:	mov	r2, #110	; 0x6e
 244:	ldr	r1, [pc, #44]	; 278 <callback+0x128>
 248:	ldr	r0, [pc, #44]	; 27c <callback+0x12c>
 24c:	bl	0 <__assert_fail>
	...
 258:	.word	0x000004d8
 25c:	.word	0x00000520
 260:	.word	0x000004e0
 264:	.word	0x00000500
 268:	.word	0x00000590
 26c:	.word	0x0000059c
 270:	.word	0x0000057c
 274:	.word	0x00000000
 278:	.word	0x00000528
 27c:	.word	0x00000578

Disassembly of section .text.startup:

00000000 <main>:
   0:	ldr	r2, [pc, #680]	; 2b0 <main+0x2b0>
   4:	mov	r3, #0
   8:	cmp	r0, #1
   c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
  10:	sub	sp, sp, #20
  14:	str	r3, [r2]
  18:	beq	250 <main+0x250>
  1c:	ldr	r4, [r1, #4]
  20:	mov	r5, r0
  24:	mov	r6, r1
  28:	mov	r0, r4
  2c:	ldr	r1, [pc, #640]	; 2b4 <main+0x2b4>
  30:	bl	0 <strcmp>
  34:	cmp	r0, #0
  38:	beq	250 <main+0x250>
  3c:	ldr	r1, [pc, #628]	; 2b8 <main+0x2b8>
  40:	mov	r0, r4
  44:	bl	0 <strcmp>
  48:	cmp	r0, #0
  4c:	beq	250 <main+0x250>
  50:	ldr	r1, [pc, #612]	; 2bc <main+0x2bc>
  54:	mov	r0, r4
  58:	bl	0 <strcmp>
  5c:	cmp	r0, #0
  60:	beq	25c <main+0x25c>
  64:	ldr	r1, [pc, #596]	; 2c0 <main+0x2c0>
  68:	mov	r0, r4
  6c:	bl	0 <strcmp>
  70:	cmp	r0, #0
  74:	beq	25c <main+0x25c>
  78:	cmp	r5, #2
  7c:	ble	94 <main+0x94>
  80:	mov	r0, r4
  84:	ldr	r1, [pc, #568]	; 2c4 <main+0x2c4>
  88:	bl	0 <strcmp>
  8c:	subs	r4, r0, #0
  90:	beq	1fc <main+0x1fc>
  94:	ldr	r2, [pc, #556]	; 2c8 <main+0x2c8>
  98:	mov	r1, #0
  9c:	ldr	r0, [r6]
  a0:	bl	0 <coda_set_definition_path_conditional>
  a4:	cmp	r0, #0
  a8:	bne	284 <main+0x284>
  ac:	cmp	r5, #1
  b0:	movle	r9, #1
  b4:	strle	r0, [sp, #12]
  b8:	movle	fp, r9
  bc:	ble	180 <main+0x180>
  c0:	mov	fp, #1
  c4:	mov	r3, #0
  c8:	mov	r9, #1
  cc:	str	r3, [sp, #12]
  d0:	ldr	r8, [pc, #500]	; 2cc <main+0x2cc>
  d4:	mov	sl, r3
  d8:	b	14c <main+0x14c>
  dc:	ldr	r1, [pc, #492]	; 2d0 <main+0x2d0>
  e0:	mov	r0, r4
  e4:	bl	0 <strcmp>
  e8:	cmp	r0, #0
  ec:	beq	168 <main+0x168>
  f0:	ldr	r1, [pc, #476]	; 2d4 <main+0x2d4>
  f4:	mov	r0, r4
  f8:	bl	0 <strcmp>
  fc:	cmp	r0, #0
 100:	beq	118 <main+0x118>
 104:	ldr	r1, [pc, #460]	; 2d8 <main+0x2d8>
 108:	mov	r0, r4
 10c:	bl	0 <strcmp>
 110:	cmp	r0, #0
 114:	bne	1c4 <main+0x1c4>
 118:	add	r3, fp, #1
 11c:	cmp	r5, r3
 120:	ble	1c4 <main+0x1c4>
 124:	add	r7, r6, r7
 128:	ldr	r2, [r7, #4]
 12c:	ldrb	r1, [r2]
 130:	cmp	r1, #45	; 0x2d
 134:	movne	fp, r3
 138:	strne	r2, [sp, #12]
 13c:	beq	1c4 <main+0x1c4>
 140:	add	fp, fp, #1
 144:	cmp	r5, fp
 148:	ble	178 <main+0x178>
 14c:	ldr	r4, [r6, fp, lsl #2]
 150:	mov	r1, r8
 154:	mov	r0, r4
 158:	bl	0 <strcmp>
 15c:	lsl	r7, fp, #2
 160:	cmp	r0, #0
 164:	bne	dc <main+0xdc>
 168:	add	fp, fp, #1
 16c:	cmp	r5, fp
 170:	mov	r9, sl
 174:	bgt	14c <main+0x14c>
 178:	cmp	r5, fp
 17c:	beq	22c <main+0x22c>
 180:	bl	0 <coda_init>
 184:	subs	r4, r0, #0
 188:	bne	284 <main+0x284>
 18c:	mov	r0, r9
 190:	bl	0 <coda_set_option_perform_conversions>
 194:	str	r4, [sp]
 198:	add	r2, r6, fp, lsl #2
 19c:	sub	r1, r5, fp
 1a0:	ldr	r0, [sp, #12]
 1a4:	ldr	r3, [pc, #304]	; 2dc <main+0x2dc>
 1a8:	bl	0 <coda_match_filefilter>
 1ac:	subs	r4, r0, #0
 1b0:	bne	284 <main+0x284>
 1b4:	bl	0 <coda_done>
 1b8:	mov	r0, r4
 1bc:	add	sp, sp, #20
 1c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 1c4:	ldr	r1, [pc, #276]	; 2e0 <main+0x2e0>
 1c8:	mov	r0, r4
 1cc:	bl	0 <strcmp>
 1d0:	cmp	r0, #0
 1d4:	beq	1ec <main+0x1ec>
 1d8:	ldr	r1, [pc, #260]	; 2e4 <main+0x2e4>
 1dc:	mov	r0, r4
 1e0:	bl	0 <strcmp>
 1e4:	cmp	r0, #0
 1e8:	bne	220 <main+0x220>
 1ec:	ldr	r3, [pc, #188]	; 2b0 <main+0x2b0>
 1f0:	mov	r2, #1
 1f4:	str	r2, [r3]
 1f8:	b	140 <main+0x140>
 1fc:	ldr	r0, [r6, #8]
 200:	bl	0 <coda_set_definition_path>
 204:	cmp	r5, #3
 208:	streq	r4, [sp, #12]
 20c:	moveq	fp, r5
 210:	moveq	r9, #1
 214:	beq	178 <main+0x178>
 218:	mov	fp, #3
 21c:	b	c4 <main+0xc4>
 220:	ldrb	r2, [r4]
 224:	cmp	r2, #45	; 0x2d
 228:	bne	178 <main+0x178>
 22c:	ldr	r3, [pc, #180]	; 2e8 <main+0x2e8>
 230:	mov	r2, #25
 234:	mov	r1, #1
 238:	ldr	r3, [r3]
 23c:	ldr	r0, [pc, #168]	; 2ec <main+0x2ec>
 240:	bl	0 <fwrite>
 244:	bl	0 <main>
 248:	mov	r0, #1
 24c:	bl	0 <exit>
 250:	bl	0 <main>
 254:	mov	r0, #0
 258:	bl	0 <exit>
 25c:	bl	0 <coda_get_libcoda_version>
 260:	mov	r1, r0
 264:	ldr	r0, [pc, #132]	; 2f0 <main+0x2f0>
 268:	bl	0 <printf>
 26c:	ldr	r0, [pc, #128]	; 2f4 <main+0x2f4>
 270:	bl	0 <puts>
 274:	mov	r0, #10
 278:	bl	0 <putchar>
 27c:	mov	r0, #0
 280:	bl	0 <exit>
 284:	ldr	r3, [pc, #92]	; 2e8 <main+0x2e8>
 288:	ldr	r4, [r3]
 28c:	bl	0 <coda_get_errno>
 290:	ldr	r0, [r0]
 294:	bl	0 <coda_errno_to_string>
 298:	ldr	r1, [pc, #88]	; 2f8 <main+0x2f8>
 29c:	mov	r2, r0
 2a0:	mov	r0, r4
 2a4:	bl	0 <fprintf>
 2a8:	mov	r0, #1
 2ac:	bl	0 <exit>
 2b0:	.word	0x00000000
 2b4:	.word	0x000005a4
 2b8:	.word	0x000005a8
 2bc:	.word	0x000005b0
 2c0:	.word	0x000005b4
 2c4:	.word	0x00000600
 2c8:	.word	0x00000604
 2cc:	.word	0x0000062c
 2d0:	.word	0x00000630
 2d4:	.word	0x00000648
 2d8:	.word	0x0000064c
 2dc:	.word	0x00000000
 2e0:	.word	0x00000658
 2e4:	.word	0x0000065c
 2e8:	.word	0x00000000
 2ec:	.word	0x00000668
 2f0:	.word	0x000005c0
 2f4:	.word	0x000005d0
 2f8:	.word	0x00000620
