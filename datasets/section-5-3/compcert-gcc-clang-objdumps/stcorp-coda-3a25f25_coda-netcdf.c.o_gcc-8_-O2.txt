
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-netcdf.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	strd	r4, [sp, #-36]!	; 0xffffffdc
       4:	mov	r4, r2
       8:	ldr	r5, [r0, #48]	; 0x30
       c:	strd	r6, [sp, #8]
      10:	mov	r6, r0
      14:	mov	r7, r3
      18:	strd	r8, [sp, #16]
      1c:	strd	sl, [sp, #24]
      20:	str	lr, [sp, #32]
      24:	sub	sp, sp, #84	; 0x54
      28:	cmp	r5, #0
      2c:	ldr	r2, [sp, #120]	; 0x78
      30:	ldr	r1, [sp, #124]	; 0x7c
      34:	beq	d8 <read_bytes+0xd8>
      38:	adds	r8, r4, r2
      3c:	ldrd	sl, [r0, #40]	; 0x28
      40:	adc	r9, r3, r1
      44:	cmp	r9, fp
      48:	cmpeq	r8, sl
      4c:	bls	c4 <read_bytes+0xc4>
      50:	ldr	r3, [r0, #16]
      54:	cmp	r3, #1
      58:	bls	140 <read_bytes+0x140>
      5c:	mov	r0, r2
      60:	add	r2, sp, #8
      64:	bl	0 <coda_str64>
      68:	add	r5, sp, #56	; 0x38
      6c:	mov	r0, r4
      70:	mov	r1, r7
      74:	add	r2, sp, #32
      78:	bl	0 <coda_str64>
      7c:	mov	r2, r5
      80:	ldrd	r0, [r6, #40]	; 0x28
      84:	bl	0 <coda_str64>
      88:	mvn	r0, #300	; 0x12c
      8c:	add	r3, sp, #32
      90:	str	r5, [sp]
      94:	add	r2, sp, #8
      98:	movw	r1, #0
      9c:	movt	r1, #0
      a0:	bl	0 <coda_set_error>
      a4:	mvn	r0, #0
      a8:	add	sp, sp, #84	; 0x54
      ac:	ldrd	r4, [sp]
      b0:	ldrd	r6, [sp, #8]
      b4:	ldrd	r8, [sp, #16]
      b8:	ldrd	sl, [sp, #24]
      bc:	add	sp, sp, #32
      c0:	pop	{pc}		; (ldr pc, [sp], #4)
      c4:	add	r1, r5, r4
      c8:	ldr	r0, [sp, #128]	; 0x80
      cc:	bl	0 <memcpy>
      d0:	mov	r0, #0
      d4:	b	a8 <read_bytes+0xa8>
      d8:	ldr	r3, [r0, #16]
      dc:	cmp	r3, #1
      e0:	bhi	158 <read_bytes+0x158>
      e4:	ldrd	r8, [r0, #8]
      e8:	adds	sl, r4, r2
      ec:	adc	fp, r7, r1
      f0:	cmp	fp, r9
      f4:	cmpeq	sl, r8
      f8:	bhi	140 <read_bytes+0x140>
      fc:	mov	r3, r4
     100:	ldr	r0, [r0, #56]	; 0x38
     104:	ldr	r1, [sp, #128]	; 0x80
     108:	bl	0 <pread>
     10c:	cmp	r0, #0
     110:	movge	r0, r5
     114:	bge	a8 <read_bytes+0xa8>
     118:	bl	0 <__errno_location>
     11c:	ldr	r0, [r0]
     120:	bl	0 <strerror>
     124:	mov	r2, r0
     128:	movw	r1, #0
     12c:	movt	r1, #0
     130:	mvn	r0, #21
     134:	bl	0 <coda_set_error>
     138:	mvn	r0, #0
     13c:	b	a8 <read_bytes+0xa8>
     140:	mvn	r0, #300	; 0x12c
     144:	movw	r1, #0
     148:	movt	r1, #0
     14c:	bl	0 <coda_set_error>
     150:	mvn	r0, #0
     154:	b	a8 <read_bytes+0xa8>
     158:	movw	r3, #0
     15c:	movt	r3, #0
     160:	movw	r1, #0
     164:	movt	r1, #0
     168:	movw	r0, #0
     16c:	movt	r0, #0
     170:	mov	r2, #83	; 0x53
     174:	bl	0 <__assert_fail>

00000178 <read_length_value.isra.0>:
     178:	cmp	r1, #5
     17c:	strd	r4, [sp, #-20]!	; 0xffffffec
     180:	mov	r5, r2
     184:	mov	r4, r3
     188:	ldrd	r2, [r2]
     18c:	strd	r6, [sp, #8]
     190:	str	lr, [sp, #16]
     194:	sub	sp, sp, #28
     198:	beq	218 <read_length_value.isra.0+0xa0>
     19c:	add	r1, sp, #20
     1a0:	mov	r6, #4
     1a4:	mov	r7, #0
     1a8:	strd	r6, [sp]
     1ac:	str	r1, [sp, #8]
     1b0:	bl	0 <read_bytes>
     1b4:	cmp	r0, #0
     1b8:	blt	294 <read_length_value.isra.0+0x11c>
     1bc:	ldrb	r3, [sp, #23]
     1c0:	mov	r0, #0
     1c4:	ldrb	r2, [sp, #22]
     1c8:	ldrb	r1, [sp, #20]
     1cc:	strb	r3, [sp, #20]
     1d0:	ldrb	r3, [sp, #21]
     1d4:	strb	r2, [sp, #21]
     1d8:	strb	r3, [sp, #22]
     1dc:	strb	r1, [sp, #23]
     1e0:	ldr	r2, [sp, #20]
     1e4:	asr	r3, r2, #31
     1e8:	strd	r2, [r4]
     1ec:	ldr	r3, [r5]
     1f0:	ldr	r2, [r5, #4]
     1f4:	adds	r3, r3, #4
     1f8:	adc	r2, r2, r0
     1fc:	str	r3, [r5]
     200:	str	r2, [r5, #4]
     204:	add	sp, sp, #28
     208:	ldrd	r4, [sp]
     20c:	ldrd	r6, [sp, #8]
     210:	add	sp, sp, #16
     214:	pop	{pc}		; (ldr pc, [sp], #4)
     218:	mov	r6, #8
     21c:	mov	r7, #0
     220:	strd	r6, [sp]
     224:	str	r4, [sp, #8]
     228:	bl	0 <read_bytes>
     22c:	cmp	r0, #0
     230:	blt	294 <read_length_value.isra.0+0x11c>
     234:	ldrb	r2, [r4, #7]
     238:	mov	r0, #0
     23c:	ldrb	r3, [r4]
     240:	ldrb	r1, [r4, #6]
     244:	strb	r2, [r4]
     248:	ldrb	r2, [r4, #1]
     24c:	strb	r3, [r4, #7]
     250:	ldrb	r3, [r4, #5]
     254:	strb	r1, [r4, #1]
     258:	ldrb	r1, [r4, #2]
     25c:	strb	r3, [r4, #2]
     260:	ldrb	r3, [r4, #3]
     264:	strb	r2, [r4, #6]
     268:	ldrb	r2, [r4, #4]
     26c:	strb	r1, [r4, #5]
     270:	strb	r2, [r4, #3]
     274:	strb	r3, [r4, #4]
     278:	ldr	r3, [r5]
     27c:	ldr	r2, [r5, #4]
     280:	adds	r3, r3, #8
     284:	adc	r2, r2, r0
     288:	str	r3, [r5]
     28c:	str	r2, [r5, #4]
     290:	b	204 <read_length_value.isra.0+0x8c>
     294:	mvn	r0, #0
     298:	b	204 <read_length_value.isra.0+0x8c>

0000029c <read_att_array>:
     29c:	strd	r4, [sp, #-36]!	; 0xffffffdc
     2a0:	mov	r5, r0
     2a4:	mov	r4, r1
     2a8:	strd	r6, [sp, #8]
     2ac:	mov	r7, #0
     2b0:	mov	r6, #4
     2b4:	strd	r8, [sp, #16]
     2b8:	mov	r8, r2
     2bc:	strd	sl, [sp, #24]
     2c0:	str	lr, [sp, #32]
     2c4:	sub	sp, sp, #108	; 0x6c
     2c8:	add	ip, sp, #64	; 0x40
     2cc:	strd	r6, [sp]
     2d0:	str	ip, [sp, #8]
     2d4:	str	r3, [sp, #36]	; 0x24
     2d8:	ldrd	r2, [r1]
     2dc:	ldr	r0, [r0, #52]	; 0x34
     2e0:	bl	0 <read_bytes>
     2e4:	cmp	r0, r7
     2e8:	blt	708 <read_att_array+0x46c>
     2ec:	ldm	r4, {r1, ip}
     2f0:	add	r3, sp, #72	; 0x48
     2f4:	mov	r2, r4
     2f8:	ldrb	r0, [sp, #64]	; 0x40
     2fc:	ldrb	lr, [sp, #67]	; 0x43
     300:	adds	r1, r1, #4
     304:	adc	ip, ip, #0
     308:	stm	r4, {r1, ip}
     30c:	ldrb	r1, [sp, #66]	; 0x42
     310:	strb	r0, [sp, #67]	; 0x43
     314:	ldrb	ip, [sp, #65]	; 0x41
     318:	strb	lr, [sp, #64]	; 0x40
     31c:	ldr	r0, [r5, #52]	; 0x34
     320:	strb	r1, [sp, #65]	; 0x41
     324:	ldr	r1, [r5, #56]	; 0x38
     328:	strb	ip, [sp, #66]	; 0x42
     32c:	bl	178 <read_length_value.isra.0>
     330:	subs	r9, r0, #0
     334:	bne	708 <read_att_array+0x46c>
     338:	ldr	r3, [sp, #64]	; 0x40
     33c:	cmp	r3, #0
     340:	beq	4e4 <read_att_array+0x248>
     344:	cmp	r3, #12
     348:	bne	b1c <read_att_array+0x880>
     34c:	mov	r0, #6
     350:	bl	0 <coda_type_record_new>
     354:	subs	fp, r0, #0
     358:	beq	708 <read_att_array+0x46c>
     35c:	mov	r1, r9
     360:	bl	0 <coda_mem_record_new>
     364:	str	r0, [r8]
     368:	mov	r0, fp
     36c:	bl	0 <coda_type_release>
     370:	ldr	r3, [r8]
     374:	cmp	r3, #0
     378:	beq	708 <read_att_array+0x46c>
     37c:	ldrd	r2, [sp, #72]	; 0x48
     380:	cmp	r2, #1
     384:	sbcs	r3, r3, #0
     388:	blt	4f4 <read_att_array+0x258>
     38c:	movw	r3, #0
     390:	movt	r3, #0
     394:	strd	r6, [sp, #28]
     398:	mov	r2, #0
     39c:	str	r8, [sp, #40]	; 0x28
     3a0:	str	r3, [sp, #56]	; 0x38
     3a4:	mov	r3, #0
     3a8:	strd	r2, [sp, #16]
     3ac:	str	r9, [sp, #60]	; 0x3c
     3b0:	add	r3, sp, #80	; 0x50
     3b4:	mov	r2, r4
     3b8:	ldrd	r0, [r5, #52]	; 0x34
     3bc:	bl	178 <read_length_value.isra.0>
     3c0:	subs	r6, r0, #0
     3c4:	bne	708 <read_att_array+0x46c>
     3c8:	ldrd	r8, [sp, #80]	; 0x50
     3cc:	add	r0, r8, #1
     3d0:	bl	0 <malloc>
     3d4:	subs	r7, r0, #0
     3d8:	beq	ae4 <read_att_array+0x848>
     3dc:	strb	r6, [r7, r8]
     3e0:	strd	r8, [sp]
     3e4:	str	r7, [sp, #8]
     3e8:	ldrd	r2, [r4]
     3ec:	ldr	r0, [r5, #52]	; 0x34
     3f0:	bl	0 <read_bytes>
     3f4:	cmp	r0, #0
     3f8:	blt	754 <read_att_array+0x4b8>
     3fc:	ldr	r1, [r4]
     400:	mov	fp, r6
     404:	ldrd	r2, [sp, #80]	; 0x50
     408:	ldr	r0, [r4, #4]
     40c:	and	sl, r2, #3
     410:	adds	r2, r2, r1
     414:	adc	r3, r3, r0
     418:	orrs	r1, sl, fp
     41c:	beq	438 <read_att_array+0x19c>
     420:	ldr	r1, [sp, #28]
     424:	ldr	r0, [sp, #32]
     428:	subs	r1, r1, sl
     42c:	sbc	r0, r0, r6
     430:	adds	r2, r2, r1
     434:	adc	r3, r3, r0
     438:	ldr	r0, [sp, #28]
     43c:	add	r1, sp, #68	; 0x44
     440:	strd	r2, [r4]
     444:	str	r0, [sp]
     448:	ldr	r0, [sp, #32]
     44c:	str	r1, [sp, #8]
     450:	str	r0, [sp, #4]
     454:	ldr	r0, [r5, #52]	; 0x34
     458:	bl	0 <read_bytes>
     45c:	cmp	r0, #0
     460:	blt	754 <read_att_array+0x4b8>
     464:	ldm	r4, {r1, ip}
     468:	add	r3, sp, #88	; 0x58
     46c:	mov	r2, r4
     470:	ldrb	r0, [sp, #68]	; 0x44
     474:	ldrb	lr, [sp, #71]	; 0x47
     478:	adds	r1, r1, #4
     47c:	adc	ip, ip, #0
     480:	stm	r4, {r1, ip}
     484:	ldrb	r1, [sp, #70]	; 0x46
     488:	strb	r0, [sp, #71]	; 0x47
     48c:	ldrb	ip, [sp, #69]	; 0x45
     490:	strb	lr, [sp, #68]	; 0x44
     494:	ldr	r0, [r5, #52]	; 0x34
     498:	strb	r1, [sp, #69]	; 0x45
     49c:	ldr	r1, [r5, #56]	; 0x38
     4a0:	strb	ip, [sp, #70]	; 0x46
     4a4:	bl	178 <read_length_value.isra.0>
     4a8:	cmp	r0, #0
     4ac:	bne	708 <read_att_array+0x46c>
     4b0:	ldr	r9, [sp, #68]	; 0x44
     4b4:	ldrd	r2, [sp, #88]	; 0x58
     4b8:	sub	r1, r9, #1
     4bc:	mov	r6, r2
     4c0:	cmp	r1, #5
     4c4:	ldrls	pc, [pc, r1, lsl #2]
     4c8:	b	b7c <read_att_array+0x8e0>
     4cc:	.word	0x00000518
     4d0:	.word	0x00000518
     4d4:	.word	0x00000628
     4d8:	.word	0x00000514
     4dc:	.word	0x00000514
     4e0:	.word	0x000006c4
     4e4:	ldrd	r2, [sp, #72]	; 0x48
     4e8:	str	r9, [r8]
     4ec:	orrs	r3, r2, r3
     4f0:	bne	b44 <read_att_array+0x8a8>
     4f4:	mov	r0, r9
     4f8:	add	sp, sp, #108	; 0x6c
     4fc:	ldrd	r4, [sp]
     500:	ldrd	r6, [sp, #8]
     504:	ldrd	r8, [sp, #16]
     508:	ldrd	sl, [sp, #24]
     50c:	add	sp, sp, #32
     510:	pop	{pc}		; (ldr pc, [sp], #4)
     514:	lsl	r6, r2, #2
     518:	ldr	r1, [sp, #36]	; 0x24
     51c:	cmp	r1, #0
     520:	beq	530 <read_att_array+0x294>
     524:	cmp	r3, #0
     528:	cmpeq	r2, #1
     52c:	beq	644 <read_att_array+0x3a8>
     530:	cmp	r9, #2
     534:	beq	710 <read_att_array+0x474>
     538:	mov	r1, #0
     53c:	mov	r2, #1
     540:	mov	r3, #0
     544:	mov	r0, r9
     548:	strd	r2, [sp, #8]
     54c:	ldrd	r2, [r4]
     550:	str	r1, [sp]
     554:	bl	0 <coda_netcdf_basic_type_new>
     558:	mov	r9, r0
     55c:	cmp	r9, #0
     560:	beq	754 <read_att_array+0x4b8>
     564:	ldrd	r2, [r4]
     568:	adds	r0, r2, r6
     56c:	adc	r1, r3, r6, asr #31
     570:	ands	r6, r6, #3
     574:	strdeq	r0, [r4]
     578:	beq	58c <read_att_array+0x2f0>
     57c:	rsb	r6, r6, #4
     580:	adds	r2, r0, r6
     584:	adc	r3, r1, r6, asr #31
     588:	strd	r2, [r4]
     58c:	ldr	r3, [sp, #68]	; 0x44
     590:	cmp	r3, #2
     594:	beq	6cc <read_att_array+0x430>
     598:	ldrd	r2, [sp, #88]	; 0x58
     59c:	cmp	r3, #0
     5a0:	strd	r2, [sp, #48]	; 0x30
     5a4:	cmpeq	r2, #1
     5a8:	beq	6cc <read_att_array+0x430>
     5ac:	ldr	r3, [sp, #48]	; 0x30
     5b0:	mov	r2, r9
     5b4:	add	r1, sp, #96	; 0x60
     5b8:	mov	r0, #1
     5bc:	str	r3, [sp, #96]	; 0x60
     5c0:	bl	0 <coda_netcdf_array_new>
     5c4:	subs	r6, r0, #0
     5c8:	beq	6ec <read_att_array+0x450>
     5cc:	ldr	r1, [sp, #40]	; 0x28
     5d0:	mov	r3, #1
     5d4:	mov	r2, r6
     5d8:	ldr	r0, [r1]
     5dc:	mov	r1, r7
     5e0:	bl	0 <coda_mem_record_add_field>
     5e4:	cmp	r0, #0
     5e8:	bne	b38 <read_att_array+0x89c>
     5ec:	mov	r0, r7
     5f0:	bl	0 <free>
     5f4:	ldr	r1, [sp, #16]
     5f8:	ldrd	r2, [sp, #72]	; 0x48
     5fc:	adds	r1, r1, #1
     600:	str	r1, [sp, #16]
     604:	ldr	r1, [sp, #20]
     608:	adc	r1, r1, #0
     60c:	str	r1, [sp, #20]
     610:	ldrd	r0, [sp, #16]
     614:	cmp	r0, r2
     618:	sbcs	r3, r1, r3
     61c:	blt	3b0 <read_att_array+0x114>
     620:	ldr	r9, [sp, #60]	; 0x3c
     624:	b	4f4 <read_att_array+0x258>
     628:	lsl	r6, r2, #1
     62c:	ldr	r1, [sp, #36]	; 0x24
     630:	cmp	r1, #0
     634:	beq	538 <read_att_array+0x29c>
     638:	cmp	r3, #0
     63c:	cmpeq	r2, #1
     640:	bne	530 <read_att_array+0x294>
     644:	mov	r0, r7
     648:	ldr	r1, [sp, #56]	; 0x38
     64c:	strd	r2, [sp, #48]	; 0x30
     650:	bl	0 <strcmp>
     654:	cmp	r0, #0
     658:	ldrd	r2, [sp, #48]	; 0x30
     65c:	bne	734 <read_att_array+0x498>
     660:	cmp	r9, #5
     664:	beq	9e0 <read_att_array+0x744>
     668:	cmp	r9, #6
     66c:	beq	a60 <read_att_array+0x7c4>
     670:	cmp	r9, #2
     674:	beq	714 <read_att_array+0x478>
     678:	movw	r1, #0
     67c:	movt	r1, #0
     680:	mov	r0, r7
     684:	bl	0 <strcmp>
     688:	cmp	r0, #0
     68c:	beq	76c <read_att_array+0x4d0>
     690:	movw	r1, #0
     694:	movt	r1, #0
     698:	mov	r0, r7
     69c:	bl	0 <strcmp>
     6a0:	cmp	r0, #0
     6a4:	bne	538 <read_att_array+0x29c>
     6a8:	ldr	r3, [sp, #36]	; 0x24
     6ac:	vldr	d0, [r3, #24]
     6b0:	bl	0 <coda_isNaN>
     6b4:	cmp	r0, #0
     6b8:	bne	76c <read_att_array+0x4d0>
     6bc:	ldr	r9, [sp, #68]	; 0x44
     6c0:	b	530 <read_att_array+0x294>
     6c4:	lsl	r6, r2, #3
     6c8:	b	62c <read_att_array+0x390>
     6cc:	ldr	r1, [sp, #40]	; 0x28
     6d0:	mov	r3, #1
     6d4:	mov	r2, r9
     6d8:	ldr	r0, [r1]
     6dc:	mov	r1, r7
     6e0:	bl	0 <coda_mem_record_add_field>
     6e4:	cmp	r0, #0
     6e8:	beq	5ec <read_att_array+0x350>
     6ec:	ldr	r8, [sp, #40]	; 0x28
     6f0:	mov	r0, r9
     6f4:	bl	0 <coda_dynamic_type_delete>
     6f8:	mov	r0, r7
     6fc:	bl	0 <free>
     700:	ldr	r0, [r8]
     704:	bl	0 <coda_dynamic_type_delete>
     708:	mvn	r9, #0
     70c:	b	4f4 <read_att_array+0x258>
     710:	ldrd	r2, [sp, #88]	; 0x58
     714:	mov	r1, #0
     718:	mov	r0, #2
     71c:	strd	r2, [sp, #8]
     720:	ldrd	r2, [r4]
     724:	str	r1, [sp]
     728:	bl	0 <coda_netcdf_basic_type_new>
     72c:	mov	r9, r0
     730:	b	55c <read_att_array+0x2c0>
     734:	movw	r1, #0
     738:	movt	r1, #0
     73c:	mov	r0, r7
     740:	bl	0 <strcmp>
     744:	cmp	r0, #0
     748:	ldrd	r2, [sp, #48]	; 0x30
     74c:	bne	670 <read_att_array+0x3d4>
     750:	b	660 <read_att_array+0x3c4>
     754:	ldr	r8, [sp, #40]	; 0x28
     758:	mov	r0, r7
     75c:	bl	0 <free>
     760:	ldr	r0, [r8]
     764:	bl	0 <coda_dynamic_type_delete>
     768:	b	708 <read_att_array+0x46c>
     76c:	asr	r1, r6, #31
     770:	add	ip, sp, #96	; 0x60
     774:	mov	r0, r6
     778:	ldrd	r2, [r4]
     77c:	strd	r0, [sp]
     780:	str	ip, [sp, #8]
     784:	ldr	r0, [r5, #52]	; 0x34
     788:	bl	0 <read_bytes>
     78c:	cmp	r0, #0
     790:	blt	754 <read_att_array+0x4b8>
     794:	ldr	r9, [sp, #68]	; 0x44
     798:	sub	r3, r9, #1
     79c:	cmp	r3, #10
     7a0:	ldrls	pc, [pc, r3, lsl #2]
     7a4:	b	b60 <read_att_array+0x8c4>
     7a8:	.word	0x000007d4
     7ac:	.word	0x00000b60
     7b0:	.word	0x000008a4
     7b4:	.word	0x00000870
     7b8:	.word	0x0000083c
     7bc:	.word	0x000007ec
     7c0:	.word	0x000009c8
     7c4:	.word	0x000009a4
     7c8:	.word	0x00000970
     7cc:	.word	0x0000091c
     7d0:	.word	0x000008c8
     7d4:	ldrsb	r3, [sp, #96]	; 0x60
     7d8:	vmov	s14, r3
     7dc:	ldr	r3, [sp, #36]	; 0x24
     7e0:	vcvt.f64.s32	d7, s14
     7e4:	vstr	d7, [r3, #24]
     7e8:	b	530 <read_att_array+0x294>
     7ec:	ldrb	r2, [sp, #103]	; 0x67
     7f0:	ldrb	r3, [sp, #96]	; 0x60
     7f4:	ldrb	r1, [sp, #102]	; 0x66
     7f8:	strb	r2, [sp, #96]	; 0x60
     7fc:	ldrb	r2, [sp, #97]	; 0x61
     800:	strb	r3, [sp, #103]	; 0x67
     804:	ldrb	r3, [sp, #101]	; 0x65
     808:	strb	r1, [sp, #97]	; 0x61
     80c:	ldrb	r1, [sp, #98]	; 0x62
     810:	strb	r3, [sp, #98]	; 0x62
     814:	ldrb	r3, [sp, #99]	; 0x63
     818:	strb	r2, [sp, #102]	; 0x66
     81c:	ldrb	r2, [sp, #100]	; 0x64
     820:	strb	r1, [sp, #101]	; 0x65
     824:	ldr	r1, [sp, #36]	; 0x24
     828:	strb	r2, [sp, #99]	; 0x63
     82c:	strb	r3, [sp, #100]	; 0x64
     830:	ldrd	r2, [sp, #96]	; 0x60
     834:	strd	r2, [r1, #24]
     838:	b	530 <read_att_array+0x294>
     83c:	ldrb	r3, [sp, #99]	; 0x63
     840:	ldrb	r1, [sp, #96]	; 0x60
     844:	ldrb	r2, [sp, #98]	; 0x62
     848:	strb	r3, [sp, #96]	; 0x60
     84c:	ldrb	r3, [sp, #97]	; 0x61
     850:	strb	r2, [sp, #97]	; 0x61
     854:	strb	r1, [sp, #99]	; 0x63
     858:	strb	r3, [sp, #98]	; 0x62
     85c:	ldr	r3, [sp, #36]	; 0x24
     860:	vldr	s14, [sp, #96]	; 0x60
     864:	vcvt.f64.f32	d7, s14
     868:	vstr	d7, [r3, #24]
     86c:	b	530 <read_att_array+0x294>
     870:	ldrb	r3, [sp, #99]	; 0x63
     874:	ldrb	r1, [sp, #96]	; 0x60
     878:	ldrb	r2, [sp, #98]	; 0x62
     87c:	strb	r3, [sp, #96]	; 0x60
     880:	ldrb	r3, [sp, #97]	; 0x61
     884:	strb	r2, [sp, #97]	; 0x61
     888:	strb	r1, [sp, #99]	; 0x63
     88c:	strb	r3, [sp, #98]	; 0x62
     890:	ldr	r3, [sp, #36]	; 0x24
     894:	vldr	s15, [sp, #96]	; 0x60
     898:	vcvt.f64.s32	d7, s15
     89c:	vstr	d7, [r3, #24]
     8a0:	b	530 <read_att_array+0x294>
     8a4:	ldrh	r3, [sp, #96]	; 0x60
     8a8:	rev16	r3, r3
     8ac:	sxth	r2, r3
     8b0:	strh	r3, [sp, #96]	; 0x60
     8b4:	vmov	s14, r2
     8b8:	ldr	r3, [sp, #36]	; 0x24
     8bc:	vcvt.f64.s32	d7, s14
     8c0:	vstr	d7, [r3, #24]
     8c4:	b	530 <read_att_array+0x294>
     8c8:	ldrb	r2, [sp, #103]	; 0x67
     8cc:	ldrb	r3, [sp, #96]	; 0x60
     8d0:	ldrb	r1, [sp, #102]	; 0x66
     8d4:	strb	r2, [sp, #96]	; 0x60
     8d8:	ldrb	r2, [sp, #97]	; 0x61
     8dc:	strb	r3, [sp, #103]	; 0x67
     8e0:	ldrb	r3, [sp, #101]	; 0x65
     8e4:	strb	r1, [sp, #97]	; 0x61
     8e8:	ldrb	r1, [sp, #98]	; 0x62
     8ec:	strb	r3, [sp, #98]	; 0x62
     8f0:	ldrb	r3, [sp, #99]	; 0x63
     8f4:	strb	r2, [sp, #102]	; 0x66
     8f8:	ldrb	r2, [sp, #100]	; 0x64
     8fc:	strb	r1, [sp, #101]	; 0x65
     900:	strb	r2, [sp, #99]	; 0x63
     904:	strb	r3, [sp, #100]	; 0x64
     908:	ldrd	r0, [sp, #96]	; 0x60
     90c:	bl	0 <__aeabi_ul2d>
     910:	ldr	r3, [sp, #36]	; 0x24
     914:	strd	r0, [r3, #24]
     918:	b	530 <read_att_array+0x294>
     91c:	ldrb	r2, [sp, #103]	; 0x67
     920:	ldrb	r3, [sp, #96]	; 0x60
     924:	ldrb	r1, [sp, #102]	; 0x66
     928:	strb	r2, [sp, #96]	; 0x60
     92c:	ldrb	r2, [sp, #97]	; 0x61
     930:	strb	r3, [sp, #103]	; 0x67
     934:	ldrb	r3, [sp, #101]	; 0x65
     938:	strb	r1, [sp, #97]	; 0x61
     93c:	ldrb	r1, [sp, #98]	; 0x62
     940:	strb	r3, [sp, #98]	; 0x62
     944:	ldrb	r3, [sp, #99]	; 0x63
     948:	strb	r2, [sp, #102]	; 0x66
     94c:	ldrb	r2, [sp, #100]	; 0x64
     950:	strb	r1, [sp, #101]	; 0x65
     954:	strb	r2, [sp, #99]	; 0x63
     958:	strb	r3, [sp, #100]	; 0x64
     95c:	ldrd	r0, [sp, #96]	; 0x60
     960:	bl	0 <__aeabi_l2d>
     964:	ldr	r3, [sp, #36]	; 0x24
     968:	strd	r0, [r3, #24]
     96c:	b	530 <read_att_array+0x294>
     970:	ldrb	r3, [sp, #99]	; 0x63
     974:	ldrb	r1, [sp, #96]	; 0x60
     978:	ldrb	r2, [sp, #98]	; 0x62
     97c:	strb	r3, [sp, #96]	; 0x60
     980:	ldrb	r3, [sp, #97]	; 0x61
     984:	strb	r2, [sp, #97]	; 0x61
     988:	strb	r1, [sp, #99]	; 0x63
     98c:	strb	r3, [sp, #98]	; 0x62
     990:	ldr	r3, [sp, #36]	; 0x24
     994:	vldr	s15, [sp, #96]	; 0x60
     998:	vcvt.f64.u32	d7, s15
     99c:	vstr	d7, [r3, #24]
     9a0:	b	530 <read_att_array+0x294>
     9a4:	ldrh	r3, [sp, #96]	; 0x60
     9a8:	rev16	r3, r3
     9ac:	uxth	r2, r3
     9b0:	strh	r3, [sp, #96]	; 0x60
     9b4:	vmov	s14, r2
     9b8:	ldr	r3, [sp, #36]	; 0x24
     9bc:	vcvt.f64.u32	d7, s14
     9c0:	vstr	d7, [r3, #24]
     9c4:	b	530 <read_att_array+0x294>
     9c8:	ldrb	r3, [sp, #96]	; 0x60
     9cc:	vmov	s14, r3
     9d0:	ldr	r3, [sp, #36]	; 0x24
     9d4:	vcvt.f64.u32	d7, s14
     9d8:	vstr	d7, [r3, #24]
     9dc:	b	530 <read_att_array+0x294>
     9e0:	ldr	r2, [sp, #28]
     9e4:	add	r3, sp, #96	; 0x60
     9e8:	str	r2, [sp]
     9ec:	ldr	r2, [sp, #32]
     9f0:	str	r3, [sp, #8]
     9f4:	str	r2, [sp, #4]
     9f8:	ldrd	r2, [r4]
     9fc:	ldr	r0, [r5, #52]	; 0x34
     a00:	bl	0 <read_bytes>
     a04:	cmp	r0, #0
     a08:	blt	754 <read_att_array+0x4b8>
     a0c:	ldrb	r3, [sp, #99]	; 0x63
     a10:	ldrb	r2, [r7]
     a14:	ldrb	r1, [sp, #96]	; 0x60
     a18:	strb	r3, [sp, #96]	; 0x60
     a1c:	ldrb	r3, [sp, #97]	; 0x61
     a20:	cmp	r2, #115	; 0x73
     a24:	ldrb	r2, [sp, #98]	; 0x62
     a28:	strb	r1, [sp, #99]	; 0x63
     a2c:	strb	r2, [sp, #97]	; 0x61
     a30:	strb	r3, [sp, #98]	; 0x62
     a34:	ldr	r3, [sp, #36]	; 0x24
     a38:	vldr	s14, [sp, #96]	; 0x60
     a3c:	vcvt.f64.f32	d7, s14
     a40:	vstreq	d7, [r3]
     a44:	vstrne	d7, [r3, #16]
     a48:	ldr	r9, [sp, #68]	; 0x44
     a4c:	ldrd	r2, [sp, #88]	; 0x58
     a50:	cmp	r3, #0
     a54:	cmpeq	r2, #1
     a58:	beq	670 <read_att_array+0x3d4>
     a5c:	b	530 <read_att_array+0x294>
     a60:	add	ip, sp, #96	; 0x60
     a64:	mov	r0, #8
     a68:	ldrd	r2, [r4]
     a6c:	mov	r1, #0
     a70:	strd	r0, [sp]
     a74:	str	ip, [sp, #8]
     a78:	ldr	r0, [r5, #52]	; 0x34
     a7c:	bl	0 <read_bytes>
     a80:	cmp	r0, #0
     a84:	blt	754 <read_att_array+0x4b8>
     a88:	ldrb	r2, [sp, #103]	; 0x67
     a8c:	ldrb	r3, [sp, #96]	; 0x60
     a90:	ldrb	r1, [r7]
     a94:	strb	r2, [sp, #96]	; 0x60
     a98:	ldrb	r2, [sp, #97]	; 0x61
     a9c:	strb	r3, [sp, #103]	; 0x67
     aa0:	ldrb	r3, [sp, #101]	; 0x65
     aa4:	cmp	r1, #115	; 0x73
     aa8:	ldrb	r1, [sp, #102]	; 0x66
     aac:	strb	r1, [sp, #97]	; 0x61
     ab0:	ldrb	r1, [sp, #98]	; 0x62
     ab4:	strb	r3, [sp, #98]	; 0x62
     ab8:	ldrb	r3, [sp, #99]	; 0x63
     abc:	strb	r2, [sp, #102]	; 0x66
     ac0:	ldrb	r2, [sp, #100]	; 0x64
     ac4:	strb	r2, [sp, #99]	; 0x63
     ac8:	strb	r3, [sp, #100]	; 0x64
     acc:	strb	r1, [sp, #101]	; 0x65
     ad0:	ldr	r1, [sp, #36]	; 0x24
     ad4:	ldrd	r2, [sp, #96]	; 0x60
     ad8:	strdeq	r2, [r1]
     adc:	strdne	r2, [r1, #16]
     ae0:	b	a48 <read_att_array+0x7ac>
     ae4:	ldr	r8, [sp, #40]	; 0x28
     ae8:	ldr	r0, [r8]
     aec:	bl	0 <coda_dynamic_type_delete>
     af0:	ldr	r2, [sp, #80]	; 0x50
     af4:	mov	ip, #230	; 0xe6
     af8:	movw	r3, #0
     afc:	movt	r3, #0
     b00:	movw	r1, #0
     b04:	movt	r1, #0
     b08:	mvn	r0, #0
     b0c:	str	ip, [sp]
     b10:	add	r2, r2, #1
     b14:	bl	0 <coda_set_error>
     b18:	b	708 <read_att_array+0x46c>
     b1c:	movw	r1, #0
     b20:	movt	r1, #0
     b24:	movw	r0, #65236	; 0xfed4
     b28:	movt	r0, #65535	; 0xffff
     b2c:	bl	0 <coda_set_error>
     b30:	mvn	r9, #0
     b34:	b	4f4 <read_att_array+0x258>
     b38:	mov	r0, r6
     b3c:	ldr	r8, [sp, #40]	; 0x28
     b40:	b	6f4 <read_att_array+0x458>
     b44:	movw	r1, #0
     b48:	movt	r1, #0
     b4c:	movw	r0, #65236	; 0xfed4
     b50:	movt	r0, #65535	; 0xffff
     b54:	bl	0 <coda_set_error>
     b58:	mvn	r9, #0
     b5c:	b	4f4 <read_att_array+0x258>
     b60:	movw	r1, #0
     b64:	movt	r1, #0
     b68:	ldr	r3, [pc, #60]	; bac <read_att_array+0x910>
     b6c:	movw	r0, #0
     b70:	movt	r0, #0
     b74:	movw	r2, #417	; 0x1a1
     b78:	bl	0 <__assert_fail>
     b7c:	ldr	r8, [sp, #40]	; 0x28
     b80:	mov	r0, r7
     b84:	bl	0 <free>
     b88:	ldr	r0, [r8]
     b8c:	bl	0 <coda_dynamic_type_delete>
     b90:	movw	r1, #0
     b94:	movt	r1, #0
     b98:	ldr	r2, [sp, #68]	; 0x44
     b9c:	movw	r0, #65236	; 0xfed4
     ba0:	movt	r0, #65535	; 0xffff
     ba4:	bl	0 <coda_set_error>
     ba8:	b	708 <read_att_array+0x46c>
     bac:	.word	0x0000000c

00000bb0 <coda_netcdf_close>:
     bb0:	str	r4, [sp, #-8]!
     bb4:	mov	r4, r0
     bb8:	ldr	r0, [r0]
     bbc:	str	lr, [sp, #4]
     bc0:	cmp	r0, #0
     bc4:	beq	bcc <coda_netcdf_close+0x1c>
     bc8:	bl	0 <free>
     bcc:	ldr	r0, [r4, #20]
     bd0:	cmp	r0, #0
     bd4:	beq	bdc <coda_netcdf_close+0x2c>
     bd8:	bl	0 <coda_dynamic_type_delete>
     bdc:	ldr	r0, [r4, #48]	; 0x30
     be0:	cmp	r0, #0
     be4:	beq	bec <coda_netcdf_close+0x3c>
     be8:	bl	0 <free>
     bec:	ldr	r0, [r4, #52]	; 0x34
     bf0:	cmp	r0, #0
     bf4:	beq	bfc <coda_netcdf_close+0x4c>
     bf8:	bl	0 <coda_bin_close>
     bfc:	mov	r0, r4
     c00:	bl	0 <free>
     c04:	ldr	r4, [sp]
     c08:	add	sp, sp, #4
     c0c:	mov	r0, #0
     c10:	pop	{pc}		; (ldr pc, [sp], #4)

00000c14 <coda_netcdf_reopen>:
     c14:	strd	r4, [sp, #-36]!	; 0xffffffdc
     c18:	mov	r4, #0
     c1c:	mov	r5, #0
     c20:	strd	r6, [sp, #8]
     c24:	strd	r8, [sp, #16]
     c28:	strd	sl, [sp, #24]
     c2c:	str	lr, [sp, #32]
     c30:	vpush	{d8-d9}
     c34:	sub	sp, sp, #236	; 0xec
     c38:	str	r0, [sp, #28]
     c3c:	mov	r0, #64	; 0x40
     c40:	strd	r4, [sp, #144]	; 0x90
     c44:	bl	0 <malloc>
     c48:	subs	sl, r0, #0
     c4c:	beq	17fc <coda_netcdf_reopen+0xbe8>
     c50:	ldr	r3, [sp, #28]
     c54:	mov	r6, #0
     c58:	mov	r2, #1
     c5c:	mov	r7, #6
     c60:	ldr	r3, [r3]
     c64:	ldrd	r0, [r3, #8]
     c68:	str	r6, [sl]
     c6c:	strd	r0, [sl, #8]
     c70:	str	r7, [sl, #16]
     c74:	str	r6, [sl, #20]
     c78:	str	r6, [sl, #24]
     c7c:	str	r6, [sl, #28]
     c80:	str	r6, [sl, #32]
     c84:	strd	r4, [sl, #40]	; 0x28
     c88:	str	r6, [sl, #48]	; 0x30
     c8c:	str	r3, [sl, #52]	; 0x34
     c90:	str	r2, [sl, #56]	; 0x38
     c94:	str	r6, [sl, #60]	; 0x3c
     c98:	ldr	r0, [r3]
     c9c:	bl	0 <strdup>
     ca0:	cmp	r0, r6
     ca4:	str	r0, [sl]
     ca8:	beq	1834 <coda_netcdf_reopen+0xc20>
     cac:	mov	r0, r7
     cb0:	bl	0 <coda_type_record_new>
     cb4:	subs	r4, r0, #0
     cb8:	beq	1038 <coda_netcdf_reopen+0x424>
     cbc:	mov	r1, r6
     cc0:	bl	0 <coda_mem_record_new>
     cc4:	mov	r5, r0
     cc8:	mov	r0, r4
     ccc:	str	r5, [sp, #40]	; 0x28
     cd0:	bl	0 <coda_type_release>
     cd4:	cmp	r5, #0
     cd8:	beq	1038 <coda_netcdf_reopen+0x424>
     cdc:	ldr	r3, [sp, #40]	; 0x28
     ce0:	add	ip, sp, #108	; 0x6c
     ce4:	mov	r0, #4
     ce8:	mov	r1, #0
     cec:	str	r3, [sl, #20]
     cf0:	strd	r0, [sp]
     cf4:	str	ip, [sp, #8]
     cf8:	ldr	r0, [sl, #52]	; 0x34
     cfc:	ldrd	r2, [sp, #144]	; 0x90
     d00:	bl	0 <read_bytes>
     d04:	cmp	r0, #0
     d08:	blt	16c4 <coda_netcdf_reopen+0xab0>
     d0c:	ldrb	r3, [sp, #108]	; 0x6c
     d10:	cmp	r3, #67	; 0x43
     d14:	bne	1878 <coda_netcdf_reopen+0xc64>
     d18:	ldrb	r3, [sp, #109]	; 0x6d
     d1c:	cmp	r3, #68	; 0x44
     d20:	bne	1878 <coda_netcdf_reopen+0xc64>
     d24:	ldrb	r3, [sp, #110]	; 0x6e
     d28:	cmp	r3, #70	; 0x46
     d2c:	bne	1878 <coda_netcdf_reopen+0xc64>
     d30:	ldrb	r1, [sp, #111]	; 0x6f
     d34:	sub	r3, r1, #1
     d38:	str	r1, [sl, #56]	; 0x38
     d3c:	cmp	r1, #5
     d40:	cmpne	r3, #1
     d44:	bhi	1750 <coda_netcdf_reopen+0xb3c>
     d48:	ldr	ip, [sp, #144]	; 0x90
     d4c:	add	r2, sp, #144	; 0x90
     d50:	add	r3, sp, #128	; 0x80
     d54:	ldr	lr, [sp, #148]	; 0x94
     d58:	ldr	r0, [sl, #52]	; 0x34
     d5c:	adds	ip, ip, #4
     d60:	adc	lr, lr, #0
     d64:	str	ip, [sp, #144]	; 0x90
     d68:	str	lr, [sp, #148]	; 0x94
     d6c:	bl	178 <read_length_value.isra.0>
     d70:	cmp	r0, #0
     d74:	bne	16c4 <coda_netcdf_reopen+0xab0>
     d78:	ldrd	r4, [sp, #128]	; 0x80
     d7c:	mov	r9, #0
     d80:	add	r1, sp, #192	; 0xc0
     d84:	mov	r7, #4
     d88:	ldrd	r2, [sp, #144]	; 0x90
     d8c:	stm	sp, {r7, r9}
     d90:	str	r1, [sp, #8]
     d94:	ldr	r0, [sl, #52]	; 0x34
     d98:	strd	r4, [sp, #32]
     d9c:	bl	0 <read_bytes>
     da0:	cmp	r0, r9
     da4:	blt	1038 <coda_netcdf_reopen+0x424>
     da8:	ldr	r1, [sp, #144]	; 0x90
     dac:	add	r3, sp, #136	; 0x88
     db0:	add	r2, sp, #144	; 0x90
     db4:	ldr	ip, [sp, #148]	; 0x94
     db8:	ldrb	r0, [sp, #192]	; 0xc0
     dbc:	adds	r1, r1, r7
     dc0:	ldrb	lr, [sp, #195]	; 0xc3
     dc4:	adc	ip, ip, r9
     dc8:	str	r1, [sp, #144]	; 0x90
     dcc:	ldrb	r1, [sp, #194]	; 0xc2
     dd0:	str	ip, [sp, #148]	; 0x94
     dd4:	ldrb	ip, [sp, #193]	; 0xc1
     dd8:	strb	lr, [sp, #192]	; 0xc0
     ddc:	strb	r0, [sp, #195]	; 0xc3
     de0:	strb	r1, [sp, #193]	; 0xc1
     de4:	ldr	r0, [sl, #52]	; 0x34
     de8:	strb	ip, [sp, #194]	; 0xc2
     dec:	ldr	r1, [sl, #56]	; 0x38
     df0:	bl	178 <read_length_value.isra.0>
     df4:	cmp	r0, r9
     df8:	bne	1038 <coda_netcdf_reopen+0x424>
     dfc:	ldr	r3, [sp, #192]	; 0xc0
     e00:	cmp	r3, r9
     e04:	bne	f28 <coda_netcdf_reopen+0x314>
     e08:	ldrd	r0, [sp, #136]	; 0x88
     e0c:	orrs	r2, r0, r1
     e10:	bne	17b4 <coda_netcdf_reopen+0xba0>
     e14:	add	r2, sp, #104	; 0x68
     e18:	add	r1, sp, #144	; 0x90
     e1c:	mov	r0, sl
     e20:	bl	29c <read_att_array>
     e24:	subs	r8, r0, #0
     e28:	bne	1038 <coda_netcdf_reopen+0x424>
     e2c:	mvn	fp, #0
     e30:	ldr	r1, [sp, #104]	; 0x68
     e34:	cmp	r1, #0
     e38:	beq	e50 <coda_netcdf_reopen+0x23c>
     e3c:	mov	r2, #1
     e40:	ldr	r0, [sp, #40]	; 0x28
     e44:	bl	0 <coda_mem_type_set_attributes>
     e48:	cmp	r0, #0
     e4c:	bne	127c <coda_netcdf_reopen+0x668>
     e50:	ldrd	r6, [sp, #136]	; 0x88
     e54:	add	r1, sp, #112	; 0x70
     e58:	mov	r5, #0
     e5c:	mov	r4, #4
     e60:	ldrd	r2, [sp, #144]	; 0x90
     e64:	strd	r4, [sp]
     e68:	str	r1, [sp, #8]
     e6c:	ldr	r0, [sl, #52]	; 0x34
     e70:	strd	r6, [sp, #48]	; 0x30
     e74:	bl	0 <read_bytes>
     e78:	cmp	r0, r5
     e7c:	blt	1790 <coda_netcdf_reopen+0xb7c>
     e80:	ldr	lr, [sp, #144]	; 0x90
     e84:	add	r3, sp, #152	; 0x98
     e88:	add	r2, sp, #144	; 0x90
     e8c:	ldrb	ip, [sp, #115]	; 0x73
     e90:	ldr	r1, [sp, #148]	; 0x94
     e94:	adds	lr, lr, #4
     e98:	ldrb	r0, [sp, #112]	; 0x70
     e9c:	strb	ip, [sp, #112]	; 0x70
     ea0:	ldrb	ip, [sp, #113]	; 0x71
     ea4:	adc	r1, r1, #0
     ea8:	strb	r0, [sp, #115]	; 0x73
     eac:	str	lr, [sp, #144]	; 0x90
     eb0:	ldrb	lr, [sp, #114]	; 0x72
     eb4:	str	r1, [sp, #148]	; 0x94
     eb8:	ldrd	r0, [sl, #52]	; 0x34
     ebc:	strb	lr, [sp, #113]	; 0x71
     ec0:	strb	ip, [sp, #114]	; 0x72
     ec4:	bl	178 <read_length_value.isra.0>
     ec8:	subs	r3, r0, #0
     ecc:	str	r3, [sp, #32]
     ed0:	bne	127c <coda_netcdf_reopen+0x668>
     ed4:	ldr	r3, [sp, #112]	; 0x70
     ed8:	cmp	r3, #0
     edc:	bne	104c <coda_netcdf_reopen+0x438>
     ee0:	ldrd	r2, [sp, #152]	; 0x98
     ee4:	orrs	r3, r2, r3
     ee8:	bne	17cc <coda_netcdf_reopen+0xbb8>
     eec:	cmp	r8, #0
     ef0:	beq	efc <coda_netcdf_reopen+0x2e8>
     ef4:	mov	r0, r8
     ef8:	bl	0 <free>
     efc:	ldr	r3, [sp, #28]
     f00:	str	sl, [r3]
     f04:	ldr	r0, [sp, #32]
     f08:	add	sp, sp, #236	; 0xec
     f0c:	vpop	{d8-d9}
     f10:	ldrd	r4, [sp]
     f14:	ldrd	r6, [sp, #8]
     f18:	ldrd	r8, [sp, #16]
     f1c:	ldrd	sl, [sp, #24]
     f20:	add	sp, sp, #32
     f24:	pop	{pc}		; (ldr pc, [sp], #4)
     f28:	cmp	r3, #10
     f2c:	bne	1778 <coda_netcdf_reopen+0xb64>
     f30:	ldrd	r4, [sp, #136]	; 0x88
     f34:	lsl	r6, r4, #3
     f38:	mov	r0, r6
     f3c:	bl	0 <malloc>
     f40:	subs	r8, r0, #0
     f44:	beq	1894 <coda_netcdf_reopen+0xc80>
     f48:	cmp	r4, #1
     f4c:	sbcs	r3, r5, #0
     f50:	blt	16a8 <coda_netcdf_reopen+0xa94>
     f54:	mvn	fp, #0
     f58:	mov	r6, r8
     f5c:	str	r7, [sp, #44]	; 0x2c
     f60:	mov	r4, #0
     f64:	mov	r5, #0
     f68:	str	r9, [sp, #48]	; 0x30
     f6c:	mov	r7, fp
     f70:	str	r8, [sp, #88]	; 0x58
     f74:	b	1010 <coda_netcdf_reopen+0x3fc>
     f78:	ldr	r2, [sp, #144]	; 0x90
     f7c:	mov	r9, r0
     f80:	ldr	ip, [sp, #148]	; 0x94
     f84:	ldr	r3, [sp, #200]	; 0xc8
     f88:	ldr	r1, [sp, #204]	; 0xcc
     f8c:	and	r8, r3, #3
     f90:	adds	r3, r3, r2
     f94:	adc	r1, r1, ip
     f98:	orrs	r2, r8, r9
     f9c:	beq	fb8 <coda_netcdf_reopen+0x3a4>
     fa0:	ldr	r2, [sp, #44]	; 0x2c
     fa4:	ldr	r0, [sp, #48]	; 0x30
     fa8:	subs	r2, r2, r8
     fac:	sbc	r0, r0, r9
     fb0:	adds	r3, r2, r3
     fb4:	adc	r1, r0, r1
     fb8:	add	r2, sp, #144	; 0x90
     fbc:	str	r3, [sp, #144]	; 0x90
     fc0:	mov	r3, r6
     fc4:	str	r1, [sp, #148]	; 0x94
     fc8:	ldr	r0, [sl, #52]	; 0x34
     fcc:	ldr	r1, [sl, #56]	; 0x38
     fd0:	bl	178 <read_length_value.isra.0>
     fd4:	cmp	r0, #0
     fd8:	bne	102c <coda_netcdf_reopen+0x418>
     fdc:	ldrd	r2, [r6]
     fe0:	orrs	r3, r2, r3
     fe4:	bne	ff4 <coda_netcdf_reopen+0x3e0>
     fe8:	ldrd	r2, [sp, #32]
     fec:	mov	r7, fp
     ff0:	strd	r2, [r6]
     ff4:	ldrd	r2, [sp, #136]	; 0x88
     ff8:	adds	r4, r4, #1
     ffc:	add	r6, r6, #8
    1000:	adc	r5, r5, #0
    1004:	cmp	r4, r2
    1008:	sbcs	r3, r5, r3
    100c:	bge	1290 <coda_netcdf_reopen+0x67c>
    1010:	add	r3, sp, #200	; 0xc8
    1014:	add	r2, sp, #144	; 0x90
    1018:	ldrd	r0, [sl, #52]	; 0x34
    101c:	bl	178 <read_length_value.isra.0>
    1020:	cmp	r0, #0
    1024:	mov	fp, r4
    1028:	beq	f78 <coda_netcdf_reopen+0x364>
    102c:	ldr	r8, [sp, #88]	; 0x58
    1030:	mov	r0, r8
    1034:	bl	0 <free>
    1038:	mvn	r3, #0
    103c:	mov	r0, sl
    1040:	str	r3, [sp, #32]
    1044:	bl	bb0 <coda_netcdf_close>
    1048:	b	f04 <coda_netcdf_reopen+0x2f0>
    104c:	cmp	r3, #11
    1050:	bne	17e4 <coda_netcdf_reopen+0xbd0>
    1054:	ldrd	r2, [sp, #152]	; 0x98
    1058:	cmp	r2, #1
    105c:	sbcs	r3, r3, #0
    1060:	blt	eec <coda_netcdf_reopen+0x2d8>
    1064:	vldr	d9, [pc, #596]	; 12c0 <coda_netcdf_reopen+0x6ac>
    1068:	mov	r2, #0
    106c:	mov	r3, #0
    1070:	vldr	d8, [pc, #576]	; 12b8 <coda_netcdf_reopen+0x6a4>
    1074:	strd	r2, [sp, #80]	; 0x50
    1078:	asr	r3, fp, #31
    107c:	mov	r2, fp
    1080:	strd	r4, [sp, #92]	; 0x5c
    1084:	strd	r2, [sp, #72]	; 0x48
    1088:	mov	r1, #0
    108c:	add	r3, sp, #168	; 0xa8
    1090:	ldr	r0, [sl, #52]	; 0x34
    1094:	add	r2, sp, #144	; 0x90
    1098:	str	r1, [sp, #116]	; 0x74
    109c:	ldr	r1, [sl, #56]	; 0x38
    10a0:	bl	178 <read_length_value.isra.0>
    10a4:	subs	r4, r0, #0
    10a8:	bne	127c <coda_netcdf_reopen+0x668>
    10ac:	ldr	r6, [sp, #168]	; 0xa8
    10b0:	ldr	r5, [sp, #172]	; 0xac
    10b4:	add	r7, r6, #1
    10b8:	mov	r0, r7
    10bc:	bl	0 <malloc>
    10c0:	subs	r9, r0, #0
    10c4:	beq	1728 <coda_netcdf_reopen+0xb14>
    10c8:	strb	r4, [r9, r6]
    10cc:	str	r6, [sp]
    10d0:	stmib	sp, {r5, r9}
    10d4:	ldr	r0, [sl, #52]	; 0x34
    10d8:	ldrd	r2, [sp, #144]	; 0x90
    10dc:	bl	0 <read_bytes>
    10e0:	cmp	r0, #0
    10e4:	blt	169c <coda_netcdf_reopen+0xa88>
    10e8:	ldr	r1, [sp, #144]	; 0x90
    10ec:	str	r4, [sp, #60]	; 0x3c
    10f0:	ldr	r3, [sp, #168]	; 0xa8
    10f4:	ldr	r0, [sp, #148]	; 0x94
    10f8:	and	r2, r3, #3
    10fc:	adds	r3, r3, r1
    1100:	str	r2, [sp, #56]	; 0x38
    1104:	ldr	r2, [sp, #172]	; 0xac
    1108:	adc	r2, r2, r0
    110c:	ldrd	r0, [sp, #56]	; 0x38
    1110:	orrs	r1, r0, r1
    1114:	beq	1134 <coda_netcdf_reopen+0x520>
    1118:	ldrd	r4, [sp, #56]	; 0x38
    111c:	ldr	r1, [sp, #92]	; 0x5c
    1120:	ldr	r0, [sp, #96]	; 0x60
    1124:	subs	r1, r1, r4
    1128:	sbc	r0, r0, r5
    112c:	adds	r3, r1, r3
    1130:	adc	r2, r0, r2
    1134:	str	r3, [sp, #144]	; 0x90
    1138:	add	r3, sp, #176	; 0xb0
    113c:	str	r2, [sp, #148]	; 0x94
    1140:	add	r2, sp, #144	; 0x90
    1144:	ldrd	r0, [sl, #52]	; 0x34
    1148:	bl	178 <read_length_value.isra.0>
    114c:	subs	r6, r0, #0
    1150:	bne	127c <coda_netcdf_reopen+0x668>
    1154:	ldrd	r2, [sp, #176]	; 0xb0
    1158:	mov	r7, r6
    115c:	str	r6, [sp, #64]	; 0x40
    1160:	str	r6, [sp, #88]	; 0x58
    1164:	cmp	r2, #1
    1168:	sbcs	r3, r3, #0
    116c:	blt	12d4 <coda_netcdf_reopen+0x6c0>
    1170:	mov	r4, #0
    1174:	mov	r5, #0
    1178:	str	r8, [sp, #44]	; 0x2c
    117c:	add	fp, sp, #200	; 0xc8
    1180:	str	r9, [sp, #100]	; 0x64
    1184:	b	11cc <coda_netcdf_reopen+0x5b8>
    1188:	cmp	r4, #7
    118c:	bgt	1244 <coda_netcdf_reopen+0x630>
    1190:	lsl	lr, r4, #2
    1194:	add	r6, r6, #1
    1198:	str	ip, [lr, fp]
    119c:	cmp	r4, #0
    11a0:	bne	11b8 <coda_netcdf_reopen+0x5a4>
    11a4:	ldrd	r8, [sp, #72]	; 0x48
    11a8:	cmp	r9, r3
    11ac:	cmpeq	r8, r2
    11b0:	moveq	r7, #1
    11b4:	movne	r7, #0
    11b8:	adds	r4, r4, #1
    11bc:	adc	r5, r5, #0
    11c0:	cmp	r4, r0
    11c4:	sbcs	r3, r5, r1
    11c8:	bge	12cc <coda_netcdf_reopen+0x6b8>
    11cc:	add	r3, sp, #192	; 0xc0
    11d0:	add	r2, sp, #144	; 0x90
    11d4:	ldrd	r0, [sl, #52]	; 0x34
    11d8:	bl	178 <read_length_value.isra.0>
    11dc:	cmp	r0, #0
    11e0:	bne	1544 <coda_netcdf_reopen+0x930>
    11e4:	ldrd	r0, [sp, #48]	; 0x30
    11e8:	ldrd	r2, [sp, #192]	; 0xc0
    11ec:	cmp	r2, r0
    11f0:	sbcs	r1, r3, r1
    11f4:	movge	r1, #1
    11f8:	movlt	r1, #0
    11fc:	orrs	r1, r1, r3, lsr #31
    1200:	bne	1254 <coda_netcdf_reopen+0x640>
    1204:	ldr	lr, [sp, #44]	; 0x2c
    1208:	lsl	ip, r2, #3
    120c:	ldrd	r0, [sp, #176]	; 0xb0
    1210:	ldr	ip, [lr, ip]
    1214:	subs	lr, r0, #1
    1218:	str	lr, [sp, #16]
    121c:	sbc	lr, r1, #0
    1220:	str	lr, [sp, #20]
    1224:	ldrd	r8, [sp, #16]
    1228:	cmp	r9, r5
    122c:	cmpeq	r8, r4
    1230:	bne	1188 <coda_netcdf_reopen+0x574>
    1234:	str	ip, [sp, #64]	; 0x40
    1238:	mov	ip, #1
    123c:	str	ip, [sp, #88]	; 0x58
    1240:	b	119c <coda_netcdf_reopen+0x588>
    1244:	ldr	r3, [sp, #228]	; 0xe4
    1248:	mul	ip, ip, r3
    124c:	str	ip, [sp, #228]	; 0xe4
    1250:	b	11b8 <coda_netcdf_reopen+0x5a4>
    1254:	ldr	r8, [sp, #44]	; 0x2c
    1258:	ldr	r9, [sp, #100]	; 0x64
    125c:	mov	r0, r9
    1260:	bl	0 <free>
    1264:	movw	r1, #0
    1268:	movt	r1, #0
    126c:	movw	r0, #65236	; 0xfed4
    1270:	movt	r0, #65535	; 0xffff
    1274:	mov	r2, r9
    1278:	bl	0 <coda_set_error>
    127c:	cmp	r8, #0
    1280:	beq	1038 <coda_netcdf_reopen+0x424>
    1284:	mov	r0, r8
    1288:	bl	0 <free>
    128c:	b	1038 <coda_netcdf_reopen+0x424>
    1290:	ldr	r8, [sp, #88]	; 0x58
    1294:	mov	fp, r7
    1298:	mov	r3, #0
    129c:	add	r2, sp, #104	; 0x68
    12a0:	add	r1, sp, #144	; 0x90
    12a4:	mov	r0, sl
    12a8:	bl	29c <read_att_array>
    12ac:	cmp	r0, #0
    12b0:	beq	e30 <coda_netcdf_reopen+0x21c>
    12b4:	b	1284 <coda_netcdf_reopen+0x670>
	...
    12c4:	.word	0x3ff00000
    12c8:	.word	0x0000001c
    12cc:	ldr	r8, [sp, #44]	; 0x2c
    12d0:	ldr	r9, [sp, #100]	; 0x64
    12d4:	bl	0 <coda_NaN>
    12d8:	vldr	d1, [pc, #-32]	; 12c0 <coda_netcdf_reopen+0x6ac>
    12dc:	vmov.f64	d3, d0
    12e0:	vmov.f64	d2, d8
    12e4:	vmov.f64	d0, d1
    12e8:	bl	0 <coda_conversion_new>
    12ec:	subs	fp, r0, #0
    12f0:	beq	169c <coda_netcdf_reopen+0xa88>
    12f4:	mov	r3, fp
    12f8:	add	r2, sp, #116	; 0x74
    12fc:	add	r1, sp, #144	; 0x90
    1300:	mov	r0, sl
    1304:	bl	29c <read_att_array>
    1308:	cmp	r0, #0
    130c:	bne	16b8 <coda_netcdf_reopen+0xaa4>
    1310:	ldr	r2, [sp, #92]	; 0x5c
    1314:	add	r3, sp, #120	; 0x78
    1318:	str	r2, [sp]
    131c:	ldr	r2, [sp, #96]	; 0x60
    1320:	str	r3, [sp, #8]
    1324:	str	r2, [sp, #4]
    1328:	ldr	r0, [sl, #52]	; 0x34
    132c:	ldrd	r2, [sp, #144]	; 0x90
    1330:	bl	0 <read_bytes>
    1334:	cmp	r0, #0
    1338:	blt	16b0 <coda_netcdf_reopen+0xa9c>
    133c:	ldrb	r1, [sp, #123]	; 0x7b
    1340:	ldrb	r3, [sp, #120]	; 0x78
    1344:	ldrb	r2, [sp, #122]	; 0x7a
    1348:	strb	r1, [sp, #120]	; 0x78
    134c:	ldrb	r1, [sp, #121]	; 0x79
    1350:	strb	r2, [sp, #121]	; 0x79
    1354:	strb	r3, [sp, #123]	; 0x7b
    1358:	strb	r1, [sp, #122]	; 0x7a
    135c:	vldr	d7, [fp]
    1360:	ldr	r3, [sp, #144]	; 0x90
    1364:	ldr	r2, [sp, #148]	; 0x94
    1368:	vcmp.f64	d7, d9
    136c:	adds	r3, r3, #4
    1370:	adc	r2, r2, #0
    1374:	str	r3, [sp, #144]	; 0x90
    1378:	str	r2, [sp, #148]	; 0x94
    137c:	vmrs	APSR_nzcv, fpscr
    1380:	bne	1394 <coda_netcdf_reopen+0x780>
    1384:	vldr	d7, [fp, #16]
    1388:	vcmp.f64	d7, #0.0
    138c:	vmrs	APSR_nzcv, fpscr
    1390:	beq	1580 <coda_netcdf_reopen+0x96c>
    1394:	add	r3, sp, #184	; 0xb8
    1398:	add	r2, sp, #144	; 0x90
    139c:	ldrd	r0, [sl, #52]	; 0x34
    13a0:	bl	178 <read_length_value.isra.0>
    13a4:	cmp	r0, #0
    13a8:	bne	16b0 <coda_netcdf_reopen+0xa9c>
    13ac:	cmp	r7, #0
    13b0:	beq	13c4 <coda_netcdf_reopen+0x7b0>
    13b4:	ldr	r3, [sl, #60]	; 0x3c
    13b8:	ldr	r2, [sp, #184]	; 0xb8
    13bc:	add	r3, r3, r2
    13c0:	str	r3, [sl, #60]	; 0x3c
    13c4:	ldrd	r0, [sl, #52]	; 0x34
    13c8:	ldrd	r2, [sp, #144]	; 0x90
    13cc:	cmp	r1, #1
    13d0:	beq	15a0 <coda_netcdf_reopen+0x98c>
    13d4:	add	r1, sp, #160	; 0xa0
    13d8:	mov	r4, #8
    13dc:	mov	r5, #0
    13e0:	strd	r4, [sp]
    13e4:	str	r1, [sp, #8]
    13e8:	bl	0 <read_bytes>
    13ec:	cmp	r0, #0
    13f0:	blt	16b0 <coda_netcdf_reopen+0xa9c>
    13f4:	ldrb	r2, [sp, #167]	; 0xa7
    13f8:	ldrb	r3, [sp, #160]	; 0xa0
    13fc:	ldrb	r1, [sp, #166]	; 0xa6
    1400:	strb	r2, [sp, #160]	; 0xa0
    1404:	ldrb	r2, [sp, #161]	; 0xa1
    1408:	ldr	r0, [sp, #148]	; 0x94
    140c:	strb	r3, [sp, #167]	; 0xa7
    1410:	ldrb	r3, [sp, #165]	; 0xa5
    1414:	strb	r1, [sp, #161]	; 0xa1
    1418:	ldrb	r1, [sp, #162]	; 0xa2
    141c:	strb	r3, [sp, #162]	; 0xa2
    1420:	ldrb	r3, [sp, #163]	; 0xa3
    1424:	strb	r2, [sp, #166]	; 0xa6
    1428:	ldrb	r2, [sp, #164]	; 0xa4
    142c:	strb	r1, [sp, #165]	; 0xa5
    1430:	ldr	r1, [sp, #144]	; 0x90
    1434:	strb	r2, [sp, #163]	; 0xa3
    1438:	strb	r3, [sp, #164]	; 0xa4
    143c:	ldrd	r2, [sp, #160]	; 0xa0
    1440:	adds	r1, r1, #8
    1444:	adc	r0, r0, #0
    1448:	str	r1, [sp, #144]	; 0x90
    144c:	str	r0, [sp, #148]	; 0x94
    1450:	ldr	r1, [sp, #88]	; 0x58
    1454:	ldr	r0, [sp, #120]	; 0x78
    1458:	cmp	r1, #0
    145c:	beq	160c <coda_netcdf_reopen+0x9f8>
    1460:	cmp	r0, #2
    1464:	bne	154c <coda_netcdf_reopen+0x938>
    1468:	cmp	r6, #0
    146c:	eor	r1, r7, #1
    1470:	movne	r1, #1
    1474:	cmp	r1, #0
    1478:	bne	16f8 <coda_netcdf_reopen+0xae4>
    147c:	mov	r4, #1
    1480:	mov	r5, #0
    1484:	str	r7, [sp]
    1488:	strd	r4, [sp, #8]
    148c:	bl	0 <coda_netcdf_basic_type_new>
    1490:	mov	r4, r0
    1494:	ldr	r2, [sp, #64]	; 0x40
    1498:	add	r3, sp, #232	; 0xe8
    149c:	add	r3, r3, r6, lsl #2
    14a0:	add	r6, r6, #1
    14a4:	str	r2, [r3, #-32]	; 0xffffffe0
    14a8:	cmp	r4, #0
    14ac:	beq	16b0 <coda_netcdf_reopen+0xa9c>
    14b0:	cmp	fp, #0
    14b4:	beq	14cc <coda_netcdf_reopen+0x8b8>
    14b8:	mov	r1, fp
    14bc:	mov	r0, r4
    14c0:	bl	0 <coda_netcdf_basic_type_set_conversion>
    14c4:	cmp	r0, #0
    14c8:	bne	16b0 <coda_netcdf_reopen+0xa9c>
    14cc:	cmp	r6, #0
    14d0:	bne	162c <coda_netcdf_reopen+0xa18>
    14d4:	ldr	r1, [sp, #116]	; 0x74
    14d8:	cmp	r1, #0
    14dc:	beq	14f0 <coda_netcdf_reopen+0x8dc>
    14e0:	mov	r0, r4
    14e4:	bl	0 <coda_netcdf_basic_type_set_attributes>
    14e8:	cmp	r0, #0
    14ec:	bne	168c <coda_netcdf_reopen+0xa78>
    14f0:	mov	r3, #1
    14f4:	mov	r2, r4
    14f8:	ldr	r0, [sp, #40]	; 0x28
    14fc:	mov	r1, r9
    1500:	bl	0 <coda_mem_record_add_field>
    1504:	cmp	r0, #0
    1508:	bne	1864 <coda_netcdf_reopen+0xc50>
    150c:	mov	r0, r9
    1510:	bl	0 <free>
    1514:	ldr	r1, [sp, #80]	; 0x50
    1518:	ldrd	r2, [sp, #152]	; 0x98
    151c:	adds	r1, r1, #1
    1520:	str	r1, [sp, #80]	; 0x50
    1524:	ldr	r1, [sp, #84]	; 0x54
    1528:	adc	r1, r1, #0
    152c:	str	r1, [sp, #84]	; 0x54
    1530:	ldrd	r0, [sp, #80]	; 0x50
    1534:	cmp	r0, r2
    1538:	sbcs	r3, r1, r3
    153c:	blt	1088 <coda_netcdf_reopen+0x474>
    1540:	b	eec <coda_netcdf_reopen+0x2d8>
    1544:	ldr	r8, [sp, #44]	; 0x2c
    1548:	b	127c <coda_netcdf_reopen+0x668>
    154c:	mov	r4, #1
    1550:	mov	r5, #0
    1554:	str	r7, [sp]
    1558:	strd	r4, [sp, #8]
    155c:	bl	0 <coda_netcdf_basic_type_new>
    1560:	cmp	r6, #7
    1564:	mov	r4, r0
    1568:	ble	1494 <coda_netcdf_reopen+0x880>
    156c:	ldr	r2, [sp, #64]	; 0x40
    1570:	ldr	r3, [sp, #228]	; 0xe4
    1574:	mul	r3, r2, r3
    1578:	str	r3, [sp, #228]	; 0xe4
    157c:	b	14a8 <coda_netcdf_reopen+0x894>
    1580:	ldr	r3, [sp, #120]	; 0x78
    1584:	sub	r3, r3, #5
    1588:	cmp	r3, #1
    158c:	bls	1714 <coda_netcdf_reopen+0xb00>
    1590:	mov	r0, fp
    1594:	mov	fp, #0
    1598:	bl	0 <coda_conversion_delete>
    159c:	b	1394 <coda_netcdf_reopen+0x780>
    15a0:	ldr	ip, [sp, #92]	; 0x5c
    15a4:	add	r1, sp, #124	; 0x7c
    15a8:	str	ip, [sp]
    15ac:	ldr	ip, [sp, #96]	; 0x60
    15b0:	str	r1, [sp, #8]
    15b4:	str	ip, [sp, #4]
    15b8:	bl	0 <read_bytes>
    15bc:	cmp	r0, #0
    15c0:	blt	16b0 <coda_netcdf_reopen+0xa9c>
    15c4:	ldrb	r2, [sp, #127]	; 0x7f
    15c8:	ldrb	r3, [sp, #124]	; 0x7c
    15cc:	ldrb	r1, [sp, #126]	; 0x7e
    15d0:	strb	r2, [sp, #124]	; 0x7c
    15d4:	ldrb	r2, [sp, #125]	; 0x7d
    15d8:	strb	r3, [sp, #127]	; 0x7f
    15dc:	ldr	r3, [sp, #144]	; 0x90
    15e0:	strb	r1, [sp, #125]	; 0x7d
    15e4:	strb	r2, [sp, #126]	; 0x7e
    15e8:	ldr	r2, [sp, #124]	; 0x7c
    15ec:	ldr	r1, [sp, #148]	; 0x94
    15f0:	adds	r3, r3, #4
    15f4:	str	r3, [sp, #144]	; 0x90
    15f8:	asr	r3, r2, #31
    15fc:	adc	r1, r1, #0
    1600:	str	r1, [sp, #148]	; 0x94
    1604:	strd	r2, [sp, #160]	; 0xa0
    1608:	b	1450 <coda_netcdf_reopen+0x83c>
    160c:	ldr	r1, [sp, #88]	; 0x58
    1610:	mov	r4, #1
    1614:	mov	r5, #0
    1618:	str	r1, [sp]
    161c:	strd	r4, [sp, #8]
    1620:	bl	0 <coda_netcdf_basic_type_new>
    1624:	mov	r4, r0
    1628:	b	14a8 <coda_netcdf_reopen+0x894>
    162c:	mov	r0, r6
    1630:	mov	r2, r4
    1634:	add	r1, sp, #200	; 0xc8
    1638:	bl	0 <coda_netcdf_array_new>
    163c:	subs	r5, r0, #0
    1640:	beq	168c <coda_netcdf_reopen+0xa78>
    1644:	ldr	r1, [sp, #116]	; 0x74
    1648:	cmp	r1, #0
    164c:	beq	165c <coda_netcdf_reopen+0xa48>
    1650:	bl	0 <coda_netcdf_array_set_attributes>
    1654:	cmp	r0, #0
    1658:	bne	18c8 <coda_netcdf_reopen+0xcb4>
    165c:	mov	r3, #1
    1660:	mov	r2, r5
    1664:	ldr	r0, [sp, #40]	; 0x28
    1668:	mov	r1, r9
    166c:	bl	0 <coda_mem_record_add_field>
    1670:	cmp	r0, #0
    1674:	beq	150c <coda_netcdf_reopen+0x8f8>
    1678:	mov	r0, r5
    167c:	bl	0 <coda_dynamic_type_delete>
    1680:	mov	r0, r9
    1684:	bl	0 <free>
    1688:	b	127c <coda_netcdf_reopen+0x668>
    168c:	mov	r0, r4
    1690:	bl	0 <coda_dynamic_type_delete>
    1694:	ldr	r0, [sp, #116]	; 0x74
    1698:	bl	0 <coda_dynamic_type_delete>
    169c:	mov	r0, r9
    16a0:	bl	0 <free>
    16a4:	b	127c <coda_netcdf_reopen+0x668>
    16a8:	mvn	fp, #0
    16ac:	b	1298 <coda_netcdf_reopen+0x684>
    16b0:	ldr	r0, [sp, #116]	; 0x74
    16b4:	bl	0 <coda_dynamic_type_delete>
    16b8:	mov	r0, fp
    16bc:	bl	0 <coda_conversion_delete>
    16c0:	b	169c <coda_netcdf_reopen+0xa88>
    16c4:	bl	0 <__errno_location>
    16c8:	mvn	r3, #0
    16cc:	ldr	r0, [r0]
    16d0:	str	r3, [sp, #32]
    16d4:	bl	0 <strerror>
    16d8:	mov	r2, r0
    16dc:	movw	r1, #0
    16e0:	movt	r1, #0
    16e4:	mvn	r0, #21
    16e8:	bl	0 <coda_set_error>
    16ec:	mov	r0, sl
    16f0:	bl	bb0 <coda_netcdf_close>
    16f4:	b	f04 <coda_netcdf_reopen+0x2f0>
    16f8:	ldr	r4, [sp, #64]	; 0x40
    16fc:	str	r7, [sp]
    1700:	asr	r5, r4, #31
    1704:	strd	r4, [sp, #8]
    1708:	bl	0 <coda_netcdf_basic_type_new>
    170c:	mov	r4, r0
    1710:	b	14a8 <coda_netcdf_reopen+0x894>
    1714:	vldr	d0, [fp, #24]
    1718:	bl	0 <coda_isNaN>
    171c:	cmp	r0, #0
    1720:	bne	1590 <coda_netcdf_reopen+0x97c>
    1724:	b	1394 <coda_netcdf_reopen+0x780>
    1728:	movw	r0, #546	; 0x222
    172c:	mov	r2, r7
    1730:	movw	r3, #0
    1734:	movt	r3, #0
    1738:	movw	r1, #0
    173c:	movt	r1, #0
    1740:	str	r0, [sp]
    1744:	mvn	r0, #0
    1748:	bl	0 <coda_set_error>
    174c:	b	127c <coda_netcdf_reopen+0x668>
    1750:	mov	r2, r1
    1754:	mvn	r0, #199	; 0xc7
    1758:	movw	r1, #0
    175c:	movt	r1, #0
    1760:	bl	0 <coda_set_error>
    1764:	mvn	r3, #0
    1768:	mov	r0, sl
    176c:	str	r3, [sp, #32]
    1770:	bl	bb0 <coda_netcdf_close>
    1774:	b	f04 <coda_netcdf_reopen+0x2f0>
    1778:	movw	r1, #0
    177c:	movt	r1, #0
    1780:	movw	r0, #65236	; 0xfed4
    1784:	movt	r0, #65535	; 0xffff
    1788:	bl	0 <coda_set_error>
    178c:	b	1038 <coda_netcdf_reopen+0x424>
    1790:	bl	0 <__errno_location>
    1794:	ldr	r0, [r0]
    1798:	bl	0 <strerror>
    179c:	mov	r2, r0
    17a0:	movw	r1, #0
    17a4:	movt	r1, #0
    17a8:	mvn	r0, #21
    17ac:	bl	0 <coda_set_error>
    17b0:	b	127c <coda_netcdf_reopen+0x668>
    17b4:	movw	r1, #0
    17b8:	movt	r1, #0
    17bc:	movw	r0, #65236	; 0xfed4
    17c0:	movt	r0, #65535	; 0xffff
    17c4:	bl	0 <coda_set_error>
    17c8:	b	1038 <coda_netcdf_reopen+0x424>
    17cc:	movw	r1, #0
    17d0:	movt	r1, #0
    17d4:	movw	r0, #65236	; 0xfed4
    17d8:	movt	r0, #65535	; 0xffff
    17dc:	bl	0 <coda_set_error>
    17e0:	b	127c <coda_netcdf_reopen+0x668>
    17e4:	movw	r1, #0
    17e8:	movt	r1, #0
    17ec:	movw	r0, #65236	; 0xfed4
    17f0:	movt	r0, #65535	; 0xffff
    17f4:	bl	0 <coda_set_error>
    17f8:	b	127c <coda_netcdf_reopen+0x668>
    17fc:	movw	r0, #801	; 0x321
    1800:	mov	r2, #64	; 0x40
    1804:	movw	r3, #0
    1808:	movt	r3, #0
    180c:	str	r0, [sp]
    1810:	mvn	r0, #0
    1814:	movw	r1, #0
    1818:	movt	r1, #0
    181c:	str	r0, [sp, #32]
    1820:	bl	0 <coda_set_error>
    1824:	ldr	r3, [sp, #28]
    1828:	ldr	r0, [r3]
    182c:	bl	0 <coda_close>
    1830:	b	f04 <coda_netcdf_reopen+0x2f0>
    1834:	movw	r3, #823	; 0x337
    1838:	mvn	r0, #0
    183c:	movw	r2, #0
    1840:	movt	r2, #0
    1844:	movw	r1, #0
    1848:	movt	r1, #0
    184c:	bl	0 <coda_set_error>
    1850:	mvn	r3, #0
    1854:	mov	r0, sl
    1858:	str	r3, [sp, #32]
    185c:	bl	bb0 <coda_netcdf_close>
    1860:	b	f04 <coda_netcdf_reopen+0x2f0>
    1864:	mov	r0, r4
    1868:	bl	0 <coda_dynamic_type_delete>
    186c:	mov	r0, r9
    1870:	bl	0 <free>
    1874:	b	127c <coda_netcdf_reopen+0x668>
    1878:	movw	r1, #0
    187c:	movt	r1, #0
    1880:	ldr	r3, [pc, #-1472]	; 12c8 <coda_netcdf_reopen+0x6b4>
    1884:	movw	r0, #0
    1888:	movt	r0, #0
    188c:	movw	r2, #851	; 0x353
    1890:	bl	0 <__assert_fail>
    1894:	lsl	r3, r5, #3
    1898:	mov	r0, #124	; 0x7c
    189c:	movw	r1, #0
    18a0:	movt	r1, #0
    18a4:	mov	r2, r6
    18a8:	orr	r3, r3, r4, lsr #29
    18ac:	str	r1, [sp]
    18b0:	movw	r1, #0
    18b4:	movt	r1, #0
    18b8:	str	r0, [sp, #4]
    18bc:	mvn	r0, #0
    18c0:	bl	0 <coda_set_error>
    18c4:	b	1038 <coda_netcdf_reopen+0x424>
    18c8:	mov	r0, r5
    18cc:	b	1690 <coda_netcdf_reopen+0xa7c>
