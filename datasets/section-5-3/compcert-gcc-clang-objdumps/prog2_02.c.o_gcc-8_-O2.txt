
../compcert-repos/prog2/CMakeFiles/2.2.dir/Aula02_Alocacao_dinamica_de_memoria_e_vetores/02.c.o:     file format elf32-littlearm


Disassembly of section .text.startup:

00000000 <main>:
   0:	mov	r0, #12
   4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   8:	movw	r5, #0
   c:	movt	r5, #0
  10:	strd	r6, [sp, #8]
  14:	movw	r6, #0
  18:	movt	r6, #0
  1c:	strd	r8, [sp, #16]
  20:	movw	r8, #0
  24:	movt	r8, #0
  28:	strd	sl, [sp, #24]
  2c:	movw	sl, #0
  30:	movt	sl, #0
  34:	str	lr, [sp, #32]
  38:	sub	sp, sp, #92	; 0x5c
  3c:	bl	0 <malloc>
  40:	mov	r3, #0
  44:	mov	r7, r0
  48:	mov	r9, r3
  4c:	str	r3, [r0]
  50:	str	r3, [r0, #4]
  54:	str	r3, [r0, #8]
  58:	mov	fp, r9
  5c:	mov	r4, #0
  60:	add	r4, r4, #1
  64:	mov	r0, r8
  68:	mov	r1, r4
  6c:	bl	0 <printf>
  70:	subs	r0, fp, #0
  74:	moveq	r0, sl
  78:	bl	0 <puts>
  7c:	cmp	r4, #3
  80:	beq	8c <main+0x8c>
  84:	ldr	fp, [r7, r4, lsl #2]
  88:	b	60 <main+0x60>
  8c:	movw	fp, #0
  90:	movt	fp, #0
  94:	mov	r1, #3
  98:	mov	r0, r6
  9c:	bl	0 <printf>
  a0:	add	r1, sp, #4
  a4:	mov	r0, fp
  a8:	bl	0 <__isoc99_scanf>
  ac:	ldr	r0, [r5]
  b0:	bl	0 <getc>
  b4:	ldr	r4, [sp, #4]
  b8:	cmp	r4, #3
  bc:	bhi	94 <main+0x94>
  c0:	cmp	r4, #0
  c4:	beq	140 <main+0x140>
  c8:	movw	r0, #0
  cc:	movt	r0, #0
  d0:	bl	0 <printf>
  d4:	mov	r1, #80	; 0x50
  d8:	add	r0, sp, #8
  dc:	ldr	r2, [r5]
  e0:	bl	0 <fgets>
  e4:	add	r0, sp, #8
  e8:	bl	0 <strlen>
  ec:	ldr	r4, [sp, #4]
  f0:	add	r3, sp, #88	; 0x58
  f4:	mov	r2, #0
  f8:	add	r3, r3, r0
  fc:	add	r0, sp, #8
 100:	strb	r2, [r3, #-81]	; 0xffffffaf
 104:	bl	0 <strlen>
 108:	add	r9, r0, #1
 10c:	sub	r4, r4, #-1073741823	; 0xc0000001
 110:	mov	r1, r9
 114:	ldr	r0, [r7, r4, lsl #2]
 118:	bl	0 <realloc>
 11c:	ldr	r3, [sp, #4]
 120:	mov	r2, r9
 124:	add	r1, sp, #8
 128:	str	r0, [r7, r4, lsl #2]
 12c:	sub	r3, r3, #-1073741823	; 0xc0000001
 130:	ldr	r0, [r7, r3, lsl #2]
 134:	bl	0 <memcpy>
 138:	ldr	r9, [r7]
 13c:	b	58 <main+0x58>
 140:	mov	r0, r9
 144:	bl	0 <free>
 148:	ldr	r0, [r7, #4]
 14c:	bl	0 <free>
 150:	ldr	r0, [r7, #8]
 154:	bl	0 <free>
 158:	mov	r0, r7
 15c:	bl	0 <free>
 160:	mov	r0, r4
 164:	add	sp, sp, #92	; 0x5c
 168:	ldrd	r4, [sp]
 16c:	ldrd	r6, [sp, #8]
 170:	ldrd	r8, [sp, #16]
 174:	ldrd	sl, [sp, #24]
 178:	add	sp, sp, #32
 17c:	pop	{pc}		; (ldr pc, [sp], #4)
