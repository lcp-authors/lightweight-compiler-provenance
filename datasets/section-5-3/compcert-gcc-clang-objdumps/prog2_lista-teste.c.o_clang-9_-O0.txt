
../compcert-repos/prog2/CMakeFiles/4.dir/Aula04_Listas_T1/lista-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_l>:
       0:	sub	sp, sp, #12
       4:	push	{fp, lr}
       8:	mov	fp, sp
       c:	sub	sp, sp, #28
      10:	str	r3, [fp, #16]
      14:	str	r2, [fp, #12]
      18:	str	r1, [fp, #8]
      1c:	str	r0, [fp, #-4]
      20:	movw	r0, #12
      24:	bl	0 <malloc>
      28:	str	r0, [fp, #-12]
      2c:	ldr	r0, [fp, #-12]
      30:	movw	r1, #0
      34:	str	r1, [r0]
      38:	ldr	r0, [fp, #-12]
      3c:	str	r1, [r0, #4]
      40:	ldr	r0, [fp, #-4]
      44:	ldr	r2, [fp, #-12]
      48:	str	r0, [r2, #8]
      4c:	sub	r0, fp, #8
      50:	add	r2, fp, #8
      54:	str	r2, [r0]
      58:	str	r1, [sp, #8]
      5c:	ldr	r0, [sp, #8]
      60:	ldr	r1, [fp, #-4]
      64:	cmp	r0, r1
      68:	bge	11c <_l+0x11c>
      6c:	ldr	r0, [fp, #-8]
      70:	add	r1, r0, #4
      74:	str	r1, [fp, #-8]
      78:	ldr	r0, [r0]
      7c:	str	r0, [sp, #4]
      80:	ldr	r0, [sp, #8]
      84:	cmp	r0, #0
      88:	bne	b8 <_l+0xb8>
      8c:	movw	r0, #12
      90:	bl	0 <malloc>
      94:	ldr	r1, [fp, #-12]
      98:	str	r0, [r1]
      9c:	ldr	r0, [fp, #-12]
      a0:	ldr	r0, [r0]
      a4:	str	r0, [sp, #12]
      a8:	ldr	r0, [sp, #12]
      ac:	movw	r1, #0
      b0:	str	r1, [r0, #8]
      b4:	b	e4 <_l+0xe4>
      b8:	movw	r0, #12
      bc:	bl	0 <malloc>
      c0:	ldr	r1, [sp, #12]
      c4:	str	r0, [r1, #4]
      c8:	ldr	r0, [sp, #12]
      cc:	ldr	r1, [sp, #12]
      d0:	ldr	r1, [r1, #4]
      d4:	str	r0, [r1, #8]
      d8:	ldr	r0, [sp, #12]
      dc:	ldr	r0, [r0, #4]
      e0:	str	r0, [sp, #12]
      e4:	ldr	r0, [sp, #4]
      e8:	bl	0 <strlen>
      ec:	add	r0, r0, #1
      f0:	bl	0 <malloc>
      f4:	ldr	r1, [sp, #12]
      f8:	str	r0, [r1]
      fc:	ldr	r0, [sp, #12]
     100:	ldr	r0, [r0]
     104:	ldr	r1, [sp, #4]
     108:	bl	0 <strcpy>
     10c:	ldr	r0, [sp, #8]
     110:	add	r0, r0, #1
     114:	str	r0, [sp, #8]
     118:	b	5c <_l+0x5c>
     11c:	sub	r0, fp, #8
     120:	ldr	r1, [sp, #12]
     124:	movw	r2, #0
     128:	str	r2, [r1, #4]
     12c:	ldr	r1, [sp, #12]
     130:	ldr	r2, [fp, #-12]
     134:	str	r1, [r2, #4]
     138:	ldr	r1, [fp, #-12]
     13c:	str	r0, [sp]
     140:	mov	r0, r1
     144:	mov	sp, fp
     148:	pop	{fp, lr}
     14c:	add	sp, sp, #12
     150:	bx	lr

00000154 <_f>:
     154:	sub	sp, sp, #24
     158:	str	r0, [sp, #16]
     15c:	str	r1, [sp, #12]
     160:	ldr	r0, [sp, #16]
     164:	movw	r1, #0
     168:	cmp	r0, r1
     16c:	bne	17c <_f+0x28>
     170:	movw	r0, #0
     174:	str	r0, [sp, #20]
     178:	b	214 <_f+0xc0>
     17c:	ldr	r0, [sp, #16]
     180:	ldr	r0, [r0]
     184:	str	r0, [sp, #4]
     188:	movw	r0, #0
     18c:	str	r0, [sp, #8]
     190:	ldr	r0, [sp, #8]
     194:	ldr	r1, [sp, #12]
     198:	cmp	r0, r1
     19c:	movw	r0, #0
     1a0:	str	r0, [sp]
     1a4:	bge	1c0 <_f+0x6c>
     1a8:	ldr	r0, [sp, #4]
     1ac:	movw	r1, #0
     1b0:	cmp	r0, r1
     1b4:	movw	r0, #0
     1b8:	movne	r0, #1
     1bc:	str	r0, [sp]
     1c0:	ldr	r0, [sp]
     1c4:	tst	r0, #1
     1c8:	beq	1e8 <_f+0x94>
     1cc:	ldr	r0, [sp, #4]
     1d0:	ldr	r0, [r0, #4]
     1d4:	str	r0, [sp, #4]
     1d8:	ldr	r0, [sp, #8]
     1dc:	add	r0, r0, #1
     1e0:	str	r0, [sp, #8]
     1e4:	b	190 <_f+0x3c>
     1e8:	ldr	r0, [sp, #12]
     1ec:	ldr	r1, [sp, #8]
     1f0:	cmp	r0, r1
     1f4:	bne	208 <_f+0xb4>
     1f8:	ldr	r0, [sp, #4]
     1fc:	ldr	r0, [r0]
     200:	str	r0, [sp, #20]
     204:	b	214 <_f+0xc0>
     208:	movw	r0, #0
     20c:	movt	r0, #0
     210:	str	r0, [sp, #20]
     214:	ldr	r0, [sp, #20]
     218:	add	sp, sp, #24
     21c:	bx	lr

00000220 <teste_lista_nova>:
     220:	push	{fp, lr}
     224:	mov	fp, sp
     228:	sub	sp, sp, #16
     22c:	movw	r0, #0
     230:	str	r0, [sp, #8]
     234:	movw	r0, #0
     238:	movt	r0, #0
     23c:	bl	0 <printf>
     240:	movw	r1, #0
     244:	movt	r1, #0
     248:	str	r0, [sp]
     24c:	blx	r1
     250:	str	r0, [sp, #4]
     254:	ldr	r0, [sp, #4]
     258:	movw	r1, #0
     25c:	cmp	r0, r1
     260:	bne	2b0 <teste_lista_nova+0x90>
     264:	movw	r0, #0
     268:	movt	r0, #0
     26c:	bl	0 <printf>
     270:	ldr	r1, [sp, #8]
     274:	add	r1, r1, #1
     278:	str	r1, [sp, #8]
     27c:	ldr	r1, [sp, #8]
     280:	cmp	r1, #0
     284:	bne	298 <teste_lista_nova+0x78>
     288:	movw	r0, #0
     28c:	movt	r0, #0
     290:	bl	0 <printf>
     294:	b	2a4 <teste_lista_nova+0x84>
     298:	movw	r0, #0
     29c:	movt	r0, #0
     2a0:	bl	0 <printf>
     2a4:	ldr	r0, [sp, #8]
     2a8:	str	r0, [fp, #-4]
     2ac:	b	310 <teste_lista_nova+0xf0>
     2b0:	ldr	r0, [sp, #4]
     2b4:	ldr	r0, [r0, #8]
     2b8:	cmp	r0, #0
     2bc:	beq	2d8 <teste_lista_nova+0xb8>
     2c0:	movw	r0, #0
     2c4:	movt	r0, #0
     2c8:	bl	0 <printf>
     2cc:	ldr	r1, [sp, #8]
     2d0:	add	r1, r1, #1
     2d4:	str	r1, [sp, #8]
     2d8:	ldr	r0, [sp, #4]
     2dc:	bl	0 <lista_apaga>
     2e0:	ldr	r0, [sp, #8]
     2e4:	cmp	r0, #0
     2e8:	bne	2fc <teste_lista_nova+0xdc>
     2ec:	movw	r0, #0
     2f0:	movt	r0, #0
     2f4:	bl	0 <printf>
     2f8:	b	308 <teste_lista_nova+0xe8>
     2fc:	movw	r0, #0
     300:	movt	r0, #0
     304:	bl	0 <printf>
     308:	ldr	r0, [sp, #8]
     30c:	str	r0, [fp, #-4]
     310:	ldr	r0, [fp, #-4]
     314:	mov	sp, fp
     318:	pop	{fp, pc}

0000031c <teste_lista_insere>:
     31c:	push	{fp, lr}
     320:	mov	fp, sp
     324:	sub	sp, sp, #32
     328:	movw	r0, #0
     32c:	str	r0, [fp, #-8]
     330:	movw	r0, #0
     334:	movt	r0, #0
     338:	str	r0, [sp, #16]
     33c:	movw	r0, #0
     340:	movt	r0, #0
     344:	str	r0, [sp, #12]
     348:	ldr	r1, [sp, #16]
     34c:	ldr	r2, [sp, #16]
     350:	movw	r0, #2
     354:	bl	0 <_l>
     358:	str	r0, [sp, #8]
     35c:	movw	r0, #0
     360:	movt	r0, #0
     364:	bl	0 <printf>
     368:	ldr	r1, [sp, #8]
     36c:	ldr	r2, [sp, #12]
     370:	ldr	r3, [sp, #8]
     374:	ldr	r3, [r3]
     378:	ldr	r3, [r3, #4]
     37c:	str	r0, [sp, #4]
     380:	mov	r0, r1
     384:	mov	r1, r2
     388:	mov	r2, r3
     38c:	bl	0 <lista_insere>
     390:	str	r0, [fp, #-12]
     394:	ldr	r0, [fp, #-12]
     398:	movw	r1, #0
     39c:	cmp	r0, r1
     3a0:	bne	3bc <teste_lista_insere+0xa0>
     3a4:	movw	r0, #0
     3a8:	movt	r0, #0
     3ac:	bl	0 <printf>
     3b0:	ldr	r1, [fp, #-8]
     3b4:	add	r1, r1, #1
     3b8:	str	r1, [fp, #-8]
     3bc:	ldr	r0, [sp, #8]
     3c0:	ldr	r0, [r0, #8]
     3c4:	cmp	r0, #3
     3c8:	beq	3e4 <teste_lista_insere+0xc8>
     3cc:	movw	r0, #0
     3d0:	movt	r0, #0
     3d4:	bl	0 <printf>
     3d8:	ldr	r1, [fp, #-8]
     3dc:	add	r1, r1, #1
     3e0:	str	r1, [fp, #-8]
     3e4:	ldr	r0, [sp, #8]
     3e8:	ldr	r0, [r0, #8]
     3ec:	cmp	r0, #3
     3f0:	beq	428 <teste_lista_insere+0x10c>
     3f4:	ldr	r0, [fp, #-8]
     3f8:	cmp	r0, #0
     3fc:	bne	410 <teste_lista_insere+0xf4>
     400:	movw	r0, #0
     404:	movt	r0, #0
     408:	bl	0 <printf>
     40c:	b	41c <teste_lista_insere+0x100>
     410:	movw	r0, #0
     414:	movt	r0, #0
     418:	bl	0 <printf>
     41c:	ldr	r0, [fp, #-8]
     420:	str	r0, [fp, #-4]
     424:	b	7c0 <teste_lista_insere+0x4a4>
     428:	ldr	r0, [sp, #8]
     42c:	ldr	r0, [r0]
     430:	ldr	r0, [r0]
     434:	ldr	r1, [sp, #16]
     438:	bl	0 <strcmp>
     43c:	cmp	r0, #0
     440:	bne	488 <teste_lista_insere+0x16c>
     444:	ldr	r0, [sp, #8]
     448:	ldr	r0, [r0]
     44c:	ldr	r0, [r0, #4]
     450:	ldr	r0, [r0]
     454:	ldr	r1, [sp, #12]
     458:	bl	0 <strcmp>
     45c:	cmp	r0, #0
     460:	bne	488 <teste_lista_insere+0x16c>
     464:	ldr	r0, [sp, #8]
     468:	ldr	r0, [r0]
     46c:	ldr	r0, [r0, #4]
     470:	ldr	r0, [r0, #4]
     474:	ldr	r0, [r0]
     478:	ldr	r1, [sp, #16]
     47c:	bl	0 <strcmp>
     480:	cmp	r0, #0
     484:	beq	4a0 <teste_lista_insere+0x184>
     488:	movw	r0, #0
     48c:	movt	r0, #0
     490:	bl	0 <printf>
     494:	ldr	r1, [fp, #-8]
     498:	add	r1, r1, #1
     49c:	str	r1, [fp, #-8]
     4a0:	ldr	r0, [sp, #8]
     4a4:	ldr	r1, [sp, #12]
     4a8:	ldr	r2, [sp, #8]
     4ac:	ldr	r2, [r2]
     4b0:	bl	0 <lista_insere>
     4b4:	str	r0, [fp, #-12]
     4b8:	ldr	r0, [fp, #-12]
     4bc:	ldr	r1, [sp, #8]
     4c0:	ldr	r1, [r1]
     4c4:	cmp	r0, r1
     4c8:	beq	4e4 <teste_lista_insere+0x1c8>
     4cc:	movw	r0, #0
     4d0:	movt	r0, #0
     4d4:	bl	0 <printf>
     4d8:	ldr	r1, [fp, #-8]
     4dc:	add	r1, r1, #1
     4e0:	str	r1, [fp, #-8]
     4e4:	ldr	r0, [sp, #8]
     4e8:	ldr	r0, [r0, #8]
     4ec:	cmp	r0, #4
     4f0:	beq	50c <teste_lista_insere+0x1f0>
     4f4:	movw	r0, #0
     4f8:	movt	r0, #0
     4fc:	bl	0 <printf>
     500:	ldr	r1, [fp, #-8]
     504:	add	r1, r1, #1
     508:	str	r1, [fp, #-8]
     50c:	ldr	r0, [sp, #8]
     510:	ldr	r0, [r0, #8]
     514:	cmp	r0, #4
     518:	beq	550 <teste_lista_insere+0x234>
     51c:	ldr	r0, [fp, #-8]
     520:	cmp	r0, #0
     524:	bne	538 <teste_lista_insere+0x21c>
     528:	movw	r0, #0
     52c:	movt	r0, #0
     530:	bl	0 <printf>
     534:	b	544 <teste_lista_insere+0x228>
     538:	movw	r0, #0
     53c:	movt	r0, #0
     540:	bl	0 <printf>
     544:	ldr	r0, [fp, #-8]
     548:	str	r0, [fp, #-4]
     54c:	b	7c0 <teste_lista_insere+0x4a4>
     550:	ldr	r0, [sp, #8]
     554:	ldr	r0, [r0]
     558:	ldr	r0, [r0]
     55c:	ldr	r1, [sp, #12]
     560:	bl	0 <strcmp>
     564:	cmp	r0, #0
     568:	bne	5d8 <teste_lista_insere+0x2bc>
     56c:	ldr	r0, [sp, #8]
     570:	ldr	r0, [r0]
     574:	ldr	r0, [r0, #4]
     578:	ldr	r0, [r0]
     57c:	ldr	r1, [sp, #16]
     580:	bl	0 <strcmp>
     584:	cmp	r0, #0
     588:	bne	5d8 <teste_lista_insere+0x2bc>
     58c:	ldr	r0, [sp, #8]
     590:	ldr	r0, [r0]
     594:	ldr	r0, [r0, #4]
     598:	ldr	r0, [r0, #4]
     59c:	ldr	r0, [r0]
     5a0:	ldr	r1, [sp, #12]
     5a4:	bl	0 <strcmp>
     5a8:	cmp	r0, #0
     5ac:	bne	5d8 <teste_lista_insere+0x2bc>
     5b0:	ldr	r0, [sp, #8]
     5b4:	ldr	r0, [r0]
     5b8:	ldr	r0, [r0, #4]
     5bc:	ldr	r0, [r0, #4]
     5c0:	ldr	r0, [r0, #4]
     5c4:	ldr	r0, [r0]
     5c8:	ldr	r1, [sp, #16]
     5cc:	bl	0 <strcmp>
     5d0:	cmp	r0, #0
     5d4:	beq	5f0 <teste_lista_insere+0x2d4>
     5d8:	movw	r0, #0
     5dc:	movt	r0, #0
     5e0:	bl	0 <printf>
     5e4:	ldr	r1, [fp, #-8]
     5e8:	add	r1, r1, #1
     5ec:	str	r1, [fp, #-8]
     5f0:	ldr	r0, [sp, #8]
     5f4:	movw	r1, #0
     5f8:	movt	r1, #0
     5fc:	movw	r2, #0
     600:	bl	0 <lista_insere>
     604:	ldr	r1, [sp, #8]
     608:	ldr	r1, [r1, #8]
     60c:	cmp	r1, #5
     610:	beq	62c <teste_lista_insere+0x310>
     614:	movw	r0, #0
     618:	movt	r0, #0
     61c:	bl	0 <printf>
     620:	ldr	r1, [fp, #-8]
     624:	add	r1, r1, #1
     628:	str	r1, [fp, #-8]
     62c:	ldr	r0, [sp, #8]
     630:	ldr	r0, [r0, #8]
     634:	cmp	r0, #5
     638:	beq	670 <teste_lista_insere+0x354>
     63c:	ldr	r0, [fp, #-8]
     640:	cmp	r0, #0
     644:	bne	658 <teste_lista_insere+0x33c>
     648:	movw	r0, #0
     64c:	movt	r0, #0
     650:	bl	0 <printf>
     654:	b	664 <teste_lista_insere+0x348>
     658:	movw	r0, #0
     65c:	movt	r0, #0
     660:	bl	0 <printf>
     664:	ldr	r0, [fp, #-8]
     668:	str	r0, [fp, #-4]
     66c:	b	7c0 <teste_lista_insere+0x4a4>
     670:	ldr	r0, [sp, #8]
     674:	ldr	r0, [r0]
     678:	ldr	r0, [r0, #4]
     67c:	ldr	r0, [r0, #4]
     680:	ldr	r0, [r0, #4]
     684:	ldr	r0, [r0, #4]
     688:	ldr	r0, [r0]
     68c:	movw	r1, #0
     690:	movt	r1, #0
     694:	bl	0 <strcmp>
     698:	cmp	r0, #0
     69c:	beq	6b8 <teste_lista_insere+0x39c>
     6a0:	movw	r0, #0
     6a4:	movt	r0, #0
     6a8:	bl	0 <printf>
     6ac:	ldr	r1, [fp, #-8]
     6b0:	add	r1, r1, #1
     6b4:	str	r1, [fp, #-8]
     6b8:	ldr	r0, [sp, #8]
     6bc:	bl	0 <lista_apaga>
     6c0:	movw	r0, #0
     6c4:	movt	r0, #0
     6c8:	blx	r0
     6cc:	str	r0, [sp, #8]
     6d0:	ldr	r0, [sp, #8]
     6d4:	movw	r1, #0
     6d8:	movt	r1, #0
     6dc:	movw	r2, #0
     6e0:	bl	0 <lista_insere>
     6e4:	ldr	r1, [sp, #8]
     6e8:	ldr	r1, [r1, #8]
     6ec:	cmp	r1, #1
     6f0:	beq	70c <teste_lista_insere+0x3f0>
     6f4:	movw	r0, #0
     6f8:	movt	r0, #0
     6fc:	bl	0 <printf>
     700:	ldr	r1, [fp, #-8]
     704:	add	r1, r1, #1
     708:	str	r1, [fp, #-8]
     70c:	ldr	r0, [sp, #8]
     710:	bl	0 <lista_tamanho>
     714:	cmp	r0, #1
     718:	beq	750 <teste_lista_insere+0x434>
     71c:	ldr	r0, [fp, #-8]
     720:	cmp	r0, #0
     724:	bne	738 <teste_lista_insere+0x41c>
     728:	movw	r0, #0
     72c:	movt	r0, #0
     730:	bl	0 <printf>
     734:	b	744 <teste_lista_insere+0x428>
     738:	movw	r0, #0
     73c:	movt	r0, #0
     740:	bl	0 <printf>
     744:	ldr	r0, [fp, #-8]
     748:	str	r0, [fp, #-4]
     74c:	b	7c0 <teste_lista_insere+0x4a4>
     750:	ldr	r0, [sp, #8]
     754:	ldr	r0, [r0]
     758:	ldr	r0, [r0]
     75c:	movw	r1, #0
     760:	movt	r1, #0
     764:	bl	0 <strcmp>
     768:	cmp	r0, #0
     76c:	beq	788 <teste_lista_insere+0x46c>
     770:	movw	r0, #0
     774:	movt	r0, #0
     778:	bl	0 <printf>
     77c:	ldr	r1, [fp, #-8]
     780:	add	r1, r1, #1
     784:	str	r1, [fp, #-8]
     788:	ldr	r0, [sp, #8]
     78c:	bl	0 <lista_apaga>
     790:	ldr	r0, [fp, #-8]
     794:	cmp	r0, #0
     798:	bne	7ac <teste_lista_insere+0x490>
     79c:	movw	r0, #0
     7a0:	movt	r0, #0
     7a4:	bl	0 <printf>
     7a8:	b	7b8 <teste_lista_insere+0x49c>
     7ac:	movw	r0, #0
     7b0:	movt	r0, #0
     7b4:	bl	0 <printf>
     7b8:	ldr	r0, [fp, #-8]
     7bc:	str	r0, [fp, #-4]
     7c0:	ldr	r0, [fp, #-4]
     7c4:	mov	sp, fp
     7c8:	pop	{fp, pc}

000007cc <teste_lista_remove>:
     7cc:	push	{fp, lr}
     7d0:	mov	fp, sp
     7d4:	sub	sp, sp, #24
     7d8:	movw	r0, #0
     7dc:	str	r0, [fp, #-4]
     7e0:	movw	r0, #5
     7e4:	movw	r1, #0
     7e8:	movt	r1, #0
     7ec:	movw	r2, #0
     7f0:	movt	r2, #0
     7f4:	movw	r3, #0
     7f8:	movt	r3, #0
     7fc:	movw	ip, #0
     800:	movt	ip, #0
     804:	str	ip, [sp]
     808:	movw	ip, #0
     80c:	movt	ip, #0
     810:	str	ip, [sp, #4]
     814:	bl	0 <_l>
     818:	str	r0, [sp, #12]
     81c:	movw	r0, #0
     820:	movt	r0, #0
     824:	bl	0 <printf>
     828:	ldr	r1, [sp, #12]
     82c:	ldr	r2, [sp, #12]
     830:	ldr	r2, [r2]
     834:	ldr	r2, [r2, #4]
     838:	ldr	r2, [r2, #4]
     83c:	ldr	r2, [r2, #4]
     840:	str	r0, [sp, #8]
     844:	mov	r0, r1
     848:	mov	r1, r2
     84c:	bl	0 <lista_remove>
     850:	str	r0, [fp, #-8]
     854:	ldr	r0, [fp, #-8]
     858:	ldr	r1, [sp, #12]
     85c:	ldr	r1, [r1, #4]
     860:	cmp	r0, r1
     864:	beq	880 <teste_lista_remove+0xb4>
     868:	movw	r0, #0
     86c:	movt	r0, #0
     870:	bl	0 <printf>
     874:	ldr	r1, [fp, #-4]
     878:	add	r1, r1, #1
     87c:	str	r1, [fp, #-4]
     880:	ldr	r0, [sp, #12]
     884:	ldr	r0, [r0, #8]
     888:	cmp	r0, #4
     88c:	beq	8a8 <teste_lista_remove+0xdc>
     890:	movw	r0, #0
     894:	movt	r0, #0
     898:	bl	0 <printf>
     89c:	ldr	r1, [fp, #-4]
     8a0:	add	r1, r1, #1
     8a4:	str	r1, [fp, #-4]
     8a8:	ldr	r0, [sp, #12]
     8ac:	ldr	r0, [r0]
     8b0:	ldr	r0, [r0]
     8b4:	movw	r1, #0
     8b8:	movt	r1, #0
     8bc:	bl	0 <strcmp>
     8c0:	cmp	r0, #0
     8c4:	bne	940 <teste_lista_remove+0x174>
     8c8:	ldr	r0, [sp, #12]
     8cc:	ldr	r0, [r0]
     8d0:	ldr	r0, [r0, #4]
     8d4:	ldr	r0, [r0]
     8d8:	movw	r1, #0
     8dc:	movt	r1, #0
     8e0:	bl	0 <strcmp>
     8e4:	cmp	r0, #0
     8e8:	bne	940 <teste_lista_remove+0x174>
     8ec:	ldr	r0, [sp, #12]
     8f0:	ldr	r0, [r0]
     8f4:	ldr	r0, [r0, #4]
     8f8:	ldr	r0, [r0, #4]
     8fc:	ldr	r0, [r0]
     900:	movw	r1, #0
     904:	movt	r1, #0
     908:	bl	0 <strcmp>
     90c:	cmp	r0, #0
     910:	bne	940 <teste_lista_remove+0x174>
     914:	ldr	r0, [sp, #12]
     918:	ldr	r0, [r0]
     91c:	ldr	r0, [r0, #4]
     920:	ldr	r0, [r0, #4]
     924:	ldr	r0, [r0, #4]
     928:	ldr	r0, [r0]
     92c:	movw	r1, #0
     930:	movt	r1, #0
     934:	bl	0 <strcmp>
     938:	cmp	r0, #0
     93c:	beq	958 <teste_lista_remove+0x18c>
     940:	movw	r0, #0
     944:	movt	r0, #0
     948:	bl	0 <printf>
     94c:	ldr	r1, [fp, #-4]
     950:	add	r1, r1, #1
     954:	str	r1, [fp, #-4]
     958:	ldr	r0, [sp, #12]
     95c:	movw	r1, #0
     960:	bl	0 <lista_remove>
     964:	str	r0, [fp, #-8]
     968:	ldr	r0, [fp, #-8]
     96c:	movw	r1, #0
     970:	cmp	r0, r1
     974:	beq	990 <teste_lista_remove+0x1c4>
     978:	movw	r0, #0
     97c:	movt	r0, #0
     980:	bl	0 <printf>
     984:	ldr	r1, [fp, #-4]
     988:	add	r1, r1, #1
     98c:	str	r1, [fp, #-4]
     990:	ldr	r0, [sp, #12]
     994:	bl	0 <lista_apaga>
     998:	ldr	r0, [fp, #-4]
     99c:	cmp	r0, #0
     9a0:	bne	9b4 <teste_lista_remove+0x1e8>
     9a4:	movw	r0, #0
     9a8:	movt	r0, #0
     9ac:	bl	0 <printf>
     9b0:	b	9c0 <teste_lista_remove+0x1f4>
     9b4:	movw	r0, #0
     9b8:	movt	r0, #0
     9bc:	bl	0 <printf>
     9c0:	ldr	r0, [fp, #-4]
     9c4:	mov	sp, fp
     9c8:	pop	{fp, pc}

000009cc <teste_lista_pesquisa>:
     9cc:	push	{r4, r5, fp, lr}
     9d0:	add	fp, sp, #8
     9d4:	sub	sp, sp, #40	; 0x28
     9d8:	movw	r0, #0
     9dc:	str	r0, [fp, #-12]
     9e0:	movw	r0, #0
     9e4:	movt	r0, #0
     9e8:	str	r0, [fp, #-16]
     9ec:	movw	r0, #0
     9f0:	movt	r0, #0
     9f4:	str	r0, [fp, #-20]	; 0xffffffec
     9f8:	ldr	r1, [fp, #-16]
     9fc:	ldr	r2, [fp, #-16]
     a00:	ldr	r3, [fp, #-16]
     a04:	ldr	r0, [fp, #-16]
     a08:	ldr	ip, [fp, #-20]	; 0xffffffec
     a0c:	ldr	lr, [fp, #-16]
     a10:	ldr	r4, [fp, #-16]
     a14:	movw	r5, #7
     a18:	str	r0, [sp, #20]
     a1c:	mov	r0, r5
     a20:	ldr	r5, [sp, #20]
     a24:	str	r5, [sp]
     a28:	str	ip, [sp, #4]
     a2c:	str	lr, [sp, #8]
     a30:	str	r4, [sp, #12]
     a34:	bl	0 <_l>
     a38:	str	r0, [sp, #24]
     a3c:	movw	r0, #0
     a40:	movt	r0, #0
     a44:	bl	0 <printf>
     a48:	ldr	r1, [sp, #24]
     a4c:	ldr	r2, [fp, #-20]	; 0xffffffec
     a50:	str	r0, [sp, #16]
     a54:	mov	r0, r1
     a58:	mov	r1, r2
     a5c:	movw	r2, #0
     a60:	bl	0 <lista_pesquisa>
     a64:	ldr	r1, [sp, #24]
     a68:	ldr	r1, [r1]
     a6c:	ldr	r1, [r1, #4]
     a70:	ldr	r1, [r1, #4]
     a74:	ldr	r1, [r1, #4]
     a78:	ldr	r1, [r1, #4]
     a7c:	cmp	r0, r1
     a80:	beq	a9c <teste_lista_pesquisa+0xd0>
     a84:	movw	r0, #0
     a88:	movt	r0, #0
     a8c:	bl	0 <printf>
     a90:	ldr	r1, [fp, #-12]
     a94:	add	r1, r1, #1
     a98:	str	r1, [fp, #-12]
     a9c:	ldr	r0, [sp, #24]
     aa0:	movw	r1, #0
     aa4:	movt	r1, #0
     aa8:	movw	r2, #0
     aac:	bl	0 <lista_pesquisa>
     ab0:	movw	r1, #0
     ab4:	cmp	r0, r1
     ab8:	beq	ad4 <teste_lista_pesquisa+0x108>
     abc:	movw	r0, #0
     ac0:	movt	r0, #0
     ac4:	bl	0 <printf>
     ac8:	ldr	r1, [fp, #-12]
     acc:	add	r1, r1, #1
     ad0:	str	r1, [fp, #-12]
     ad4:	ldr	r0, [sp, #24]
     ad8:	ldr	r1, [fp, #-16]
     adc:	movw	r2, #1
     ae0:	bl	0 <lista_pesquisa>
     ae4:	ldr	r1, [sp, #24]
     ae8:	ldr	r1, [r1]
     aec:	ldr	r1, [r1, #4]
     af0:	ldr	r1, [r1, #4]
     af4:	ldr	r1, [r1, #4]
     af8:	ldr	r1, [r1, #4]
     afc:	ldr	r1, [r1, #4]
     b00:	ldr	r1, [r1, #4]
     b04:	cmp	r0, r1
     b08:	beq	b24 <teste_lista_pesquisa+0x158>
     b0c:	movw	r0, #0
     b10:	movt	r0, #0
     b14:	bl	0 <printf>
     b18:	ldr	r1, [fp, #-12]
     b1c:	add	r1, r1, #1
     b20:	str	r1, [fp, #-12]
     b24:	ldr	r0, [sp, #24]
     b28:	movw	r1, #0
     b2c:	movt	r1, #0
     b30:	movw	r2, #1
     b34:	bl	0 <lista_pesquisa>
     b38:	movw	r1, #0
     b3c:	cmp	r0, r1
     b40:	beq	b5c <teste_lista_pesquisa+0x190>
     b44:	movw	r0, #0
     b48:	movt	r0, #0
     b4c:	bl	0 <printf>
     b50:	ldr	r1, [fp, #-12]
     b54:	add	r1, r1, #1
     b58:	str	r1, [fp, #-12]
     b5c:	ldr	r0, [sp, #24]
     b60:	bl	0 <lista_apaga>
     b64:	ldr	r0, [fp, #-12]
     b68:	cmp	r0, #0
     b6c:	bne	b80 <teste_lista_pesquisa+0x1b4>
     b70:	movw	r0, #0
     b74:	movt	r0, #0
     b78:	bl	0 <printf>
     b7c:	b	b8c <teste_lista_pesquisa+0x1c0>
     b80:	movw	r0, #0
     b84:	movt	r0, #0
     b88:	bl	0 <printf>
     b8c:	ldr	r0, [fp, #-12]
     b90:	sub	sp, fp, #8
     b94:	pop	{r4, r5, fp, pc}

00000b98 <teste_lista_ordena>:
     b98:	push	{fp, lr}
     b9c:	mov	fp, sp
     ba0:	sub	sp, sp, #32
     ba4:	movw	r0, #0
     ba8:	str	r0, [fp, #-4]
     bac:	movw	r0, #5
     bb0:	movw	r1, #0
     bb4:	movt	r1, #0
     bb8:	movw	r2, #0
     bbc:	movt	r2, #0
     bc0:	movw	r3, #0
     bc4:	movt	r3, #0
     bc8:	movw	ip, #0
     bcc:	movt	ip, #0
     bd0:	str	ip, [sp]
     bd4:	movw	ip, #0
     bd8:	movt	ip, #0
     bdc:	str	ip, [sp, #4]
     be0:	bl	0 <_l>
     be4:	str	r0, [fp, #-12]
     be8:	movw	r0, #0
     bec:	movt	r0, #0
     bf0:	bl	0 <printf>
     bf4:	movw	r1, #0
     bf8:	str	r0, [sp, #16]
     bfc:	mov	r0, r1
     c00:	bl	0 <lista_ordena>
     c04:	str	r0, [fp, #-8]
     c08:	ldr	r0, [fp, #-8]
     c0c:	cmn	r0, #1
     c10:	beq	c2c <teste_lista_ordena+0x94>
     c14:	movw	r0, #0
     c18:	movt	r0, #0
     c1c:	bl	0 <printf>
     c20:	ldr	r1, [fp, #-4]
     c24:	add	r1, r1, #1
     c28:	str	r1, [fp, #-4]
     c2c:	ldr	r0, [fp, #-12]
     c30:	bl	0 <lista_ordena>
     c34:	ldr	r1, [fp, #-12]
     c38:	ldr	r1, [r1]
     c3c:	ldr	r1, [r1]
     c40:	movw	r2, #0
     c44:	movt	r2, #0
     c48:	str	r0, [sp, #12]
     c4c:	mov	r0, r1
     c50:	mov	r1, r2
     c54:	bl	0 <strcmp>
     c58:	cmp	r0, #0
     c5c:	bne	d08 <teste_lista_ordena+0x170>
     c60:	ldr	r0, [fp, #-12]
     c64:	ldr	r0, [r0]
     c68:	ldr	r0, [r0, #4]
     c6c:	ldr	r0, [r0]
     c70:	movw	r1, #0
     c74:	movt	r1, #0
     c78:	bl	0 <strcmp>
     c7c:	cmp	r0, #0
     c80:	bne	d08 <teste_lista_ordena+0x170>
     c84:	ldr	r0, [fp, #-12]
     c88:	ldr	r0, [r0]
     c8c:	ldr	r0, [r0, #4]
     c90:	ldr	r0, [r0, #4]
     c94:	ldr	r0, [r0]
     c98:	movw	r1, #0
     c9c:	movt	r1, #0
     ca0:	bl	0 <strcmp>
     ca4:	cmp	r0, #0
     ca8:	bne	d08 <teste_lista_ordena+0x170>
     cac:	ldr	r0, [fp, #-12]
     cb0:	ldr	r0, [r0]
     cb4:	ldr	r0, [r0, #4]
     cb8:	ldr	r0, [r0, #4]
     cbc:	ldr	r0, [r0, #4]
     cc0:	ldr	r0, [r0]
     cc4:	movw	r1, #0
     cc8:	movt	r1, #0
     ccc:	bl	0 <strcmp>
     cd0:	cmp	r0, #0
     cd4:	bne	d08 <teste_lista_ordena+0x170>
     cd8:	ldr	r0, [fp, #-12]
     cdc:	ldr	r0, [r0]
     ce0:	ldr	r0, [r0, #4]
     ce4:	ldr	r0, [r0, #4]
     ce8:	ldr	r0, [r0, #4]
     cec:	ldr	r0, [r0, #4]
     cf0:	ldr	r0, [r0]
     cf4:	movw	r1, #0
     cf8:	movt	r1, #0
     cfc:	bl	0 <strcmp>
     d00:	cmp	r0, #0
     d04:	beq	d20 <teste_lista_ordena+0x188>
     d08:	movw	r0, #0
     d0c:	movt	r0, #0
     d10:	bl	0 <printf>
     d14:	ldr	r1, [fp, #-4]
     d18:	add	r1, r1, #1
     d1c:	str	r1, [fp, #-4]
     d20:	ldr	r0, [fp, #-12]
     d24:	ldr	r0, [r0, #4]
     d28:	ldr	r0, [r0]
     d2c:	movw	r1, #0
     d30:	movt	r1, #0
     d34:	bl	0 <strcmp>
     d38:	cmp	r0, #0
     d3c:	bne	de8 <teste_lista_ordena+0x250>
     d40:	ldr	r0, [fp, #-12]
     d44:	ldr	r0, [r0, #4]
     d48:	ldr	r0, [r0, #8]
     d4c:	ldr	r0, [r0]
     d50:	movw	r1, #0
     d54:	movt	r1, #0
     d58:	bl	0 <strcmp>
     d5c:	cmp	r0, #0
     d60:	bne	de8 <teste_lista_ordena+0x250>
     d64:	ldr	r0, [fp, #-12]
     d68:	ldr	r0, [r0, #4]
     d6c:	ldr	r0, [r0, #8]
     d70:	ldr	r0, [r0, #8]
     d74:	ldr	r0, [r0]
     d78:	movw	r1, #0
     d7c:	movt	r1, #0
     d80:	bl	0 <strcmp>
     d84:	cmp	r0, #0
     d88:	bne	de8 <teste_lista_ordena+0x250>
     d8c:	ldr	r0, [fp, #-12]
     d90:	ldr	r0, [r0, #4]
     d94:	ldr	r0, [r0, #8]
     d98:	ldr	r0, [r0, #8]
     d9c:	ldr	r0, [r0, #8]
     da0:	ldr	r0, [r0]
     da4:	movw	r1, #0
     da8:	movt	r1, #0
     dac:	bl	0 <strcmp>
     db0:	cmp	r0, #0
     db4:	bne	de8 <teste_lista_ordena+0x250>
     db8:	ldr	r0, [fp, #-12]
     dbc:	ldr	r0, [r0, #4]
     dc0:	ldr	r0, [r0, #8]
     dc4:	ldr	r0, [r0, #8]
     dc8:	ldr	r0, [r0, #8]
     dcc:	ldr	r0, [r0, #8]
     dd0:	ldr	r0, [r0]
     dd4:	movw	r1, #0
     dd8:	movt	r1, #0
     ddc:	bl	0 <strcmp>
     de0:	cmp	r0, #0
     de4:	beq	e00 <teste_lista_ordena+0x268>
     de8:	movw	r0, #0
     dec:	movt	r0, #0
     df0:	bl	0 <printf>
     df4:	ldr	r1, [fp, #-4]
     df8:	add	r1, r1, #1
     dfc:	str	r1, [fp, #-4]
     e00:	ldr	r0, [fp, #-12]
     e04:	bl	0 <lista_apaga>
     e08:	ldr	r0, [fp, #-4]
     e0c:	cmp	r0, #0
     e10:	bne	e24 <teste_lista_ordena+0x28c>
     e14:	movw	r0, #0
     e18:	movt	r0, #0
     e1c:	bl	0 <printf>
     e20:	b	e30 <teste_lista_ordena+0x298>
     e24:	movw	r0, #0
     e28:	movt	r0, #0
     e2c:	bl	0 <printf>
     e30:	ldr	r0, [fp, #-4]
     e34:	mov	sp, fp
     e38:	pop	{fp, pc}

00000e3c <teste_lista_inverte>:
     e3c:	push	{fp, lr}
     e40:	mov	fp, sp
     e44:	sub	sp, sp, #24
     e48:	movw	r0, #0
     e4c:	str	r0, [fp, #-4]
     e50:	movw	r0, #5
     e54:	movw	r1, #0
     e58:	movt	r1, #0
     e5c:	movw	r2, #0
     e60:	movt	r2, #0
     e64:	movw	r3, #0
     e68:	movt	r3, #0
     e6c:	movw	ip, #0
     e70:	movt	ip, #0
     e74:	str	ip, [sp]
     e78:	movw	ip, #0
     e7c:	movt	ip, #0
     e80:	str	ip, [sp, #4]
     e84:	bl	0 <_l>
     e88:	str	r0, [sp, #12]
     e8c:	movw	r0, #0
     e90:	movt	r0, #0
     e94:	bl	0 <printf>
     e98:	movw	r1, #0
     e9c:	str	r0, [sp, #8]
     ea0:	mov	r0, r1
     ea4:	bl	0 <lista_inverte>
     ea8:	str	r0, [fp, #-8]
     eac:	ldr	r0, [fp, #-8]
     eb0:	cmn	r0, #1
     eb4:	beq	ed0 <teste_lista_inverte+0x94>
     eb8:	movw	r0, #0
     ebc:	movt	r0, #0
     ec0:	bl	0 <printf>
     ec4:	ldr	r1, [fp, #-4]
     ec8:	add	r1, r1, #1
     ecc:	str	r1, [fp, #-4]
     ed0:	ldr	r0, [sp, #12]
     ed4:	bl	0 <lista_inverte>
     ed8:	str	r0, [fp, #-8]
     edc:	ldr	r0, [sp, #12]
     ee0:	ldr	r0, [r0, #8]
     ee4:	cmp	r0, #5
     ee8:	beq	f04 <teste_lista_inverte+0xc8>
     eec:	movw	r0, #0
     ef0:	movt	r0, #0
     ef4:	bl	0 <printf>
     ef8:	ldr	r1, [fp, #-4]
     efc:	add	r1, r1, #1
     f00:	str	r1, [fp, #-4]
     f04:	ldr	r0, [sp, #12]
     f08:	ldr	r0, [r0]
     f0c:	ldr	r0, [r0]
     f10:	movw	r1, #0
     f14:	movt	r1, #0
     f18:	bl	0 <strcmp>
     f1c:	cmp	r0, #0
     f20:	bne	fcc <teste_lista_inverte+0x190>
     f24:	ldr	r0, [sp, #12]
     f28:	ldr	r0, [r0]
     f2c:	ldr	r0, [r0, #4]
     f30:	ldr	r0, [r0]
     f34:	movw	r1, #0
     f38:	movt	r1, #0
     f3c:	bl	0 <strcmp>
     f40:	cmp	r0, #0
     f44:	bne	fcc <teste_lista_inverte+0x190>
     f48:	ldr	r0, [sp, #12]
     f4c:	ldr	r0, [r0]
     f50:	ldr	r0, [r0, #4]
     f54:	ldr	r0, [r0, #4]
     f58:	ldr	r0, [r0]
     f5c:	movw	r1, #0
     f60:	movt	r1, #0
     f64:	bl	0 <strcmp>
     f68:	cmp	r0, #0
     f6c:	bne	fcc <teste_lista_inverte+0x190>
     f70:	ldr	r0, [sp, #12]
     f74:	ldr	r0, [r0]
     f78:	ldr	r0, [r0, #4]
     f7c:	ldr	r0, [r0, #4]
     f80:	ldr	r0, [r0, #4]
     f84:	ldr	r0, [r0]
     f88:	movw	r1, #0
     f8c:	movt	r1, #0
     f90:	bl	0 <strcmp>
     f94:	cmp	r0, #0
     f98:	bne	fcc <teste_lista_inverte+0x190>
     f9c:	ldr	r0, [sp, #12]
     fa0:	ldr	r0, [r0]
     fa4:	ldr	r0, [r0, #4]
     fa8:	ldr	r0, [r0, #4]
     fac:	ldr	r0, [r0, #4]
     fb0:	ldr	r0, [r0, #4]
     fb4:	ldr	r0, [r0]
     fb8:	movw	r1, #0
     fbc:	movt	r1, #0
     fc0:	bl	0 <strcmp>
     fc4:	cmp	r0, #0
     fc8:	beq	fe4 <teste_lista_inverte+0x1a8>
     fcc:	movw	r0, #0
     fd0:	movt	r0, #0
     fd4:	bl	0 <printf>
     fd8:	ldr	r1, [fp, #-4]
     fdc:	add	r1, r1, #1
     fe0:	str	r1, [fp, #-4]
     fe4:	ldr	r0, [sp, #12]
     fe8:	ldr	r0, [r0, #4]
     fec:	ldr	r0, [r0]
     ff0:	movw	r1, #0
     ff4:	movt	r1, #0
     ff8:	bl	0 <strcmp>
     ffc:	cmp	r0, #0
    1000:	bne	10ac <teste_lista_inverte+0x270>
    1004:	ldr	r0, [sp, #12]
    1008:	ldr	r0, [r0, #4]
    100c:	ldr	r0, [r0, #8]
    1010:	ldr	r0, [r0]
    1014:	movw	r1, #0
    1018:	movt	r1, #0
    101c:	bl	0 <strcmp>
    1020:	cmp	r0, #0
    1024:	bne	10ac <teste_lista_inverte+0x270>
    1028:	ldr	r0, [sp, #12]
    102c:	ldr	r0, [r0, #4]
    1030:	ldr	r0, [r0, #8]
    1034:	ldr	r0, [r0, #8]
    1038:	ldr	r0, [r0]
    103c:	movw	r1, #0
    1040:	movt	r1, #0
    1044:	bl	0 <strcmp>
    1048:	cmp	r0, #0
    104c:	bne	10ac <teste_lista_inverte+0x270>
    1050:	ldr	r0, [sp, #12]
    1054:	ldr	r0, [r0, #4]
    1058:	ldr	r0, [r0, #8]
    105c:	ldr	r0, [r0, #8]
    1060:	ldr	r0, [r0, #8]
    1064:	ldr	r0, [r0]
    1068:	movw	r1, #0
    106c:	movt	r1, #0
    1070:	bl	0 <strcmp>
    1074:	cmp	r0, #0
    1078:	bne	10ac <teste_lista_inverte+0x270>
    107c:	ldr	r0, [sp, #12]
    1080:	ldr	r0, [r0, #4]
    1084:	ldr	r0, [r0, #8]
    1088:	ldr	r0, [r0, #8]
    108c:	ldr	r0, [r0, #8]
    1090:	ldr	r0, [r0, #8]
    1094:	ldr	r0, [r0]
    1098:	movw	r1, #0
    109c:	movt	r1, #0
    10a0:	bl	0 <strcmp>
    10a4:	cmp	r0, #0
    10a8:	beq	10c4 <teste_lista_inverte+0x288>
    10ac:	movw	r0, #0
    10b0:	movt	r0, #0
    10b4:	bl	0 <printf>
    10b8:	ldr	r1, [fp, #-4]
    10bc:	add	r1, r1, #1
    10c0:	str	r1, [fp, #-4]
    10c4:	ldr	r0, [sp, #12]
    10c8:	bl	0 <lista_apaga>
    10cc:	ldr	r0, [fp, #-4]
    10d0:	cmp	r0, #0
    10d4:	bne	10e8 <teste_lista_inverte+0x2ac>
    10d8:	movw	r0, #0
    10dc:	movt	r0, #0
    10e0:	bl	0 <printf>
    10e4:	b	10f4 <teste_lista_inverte+0x2b8>
    10e8:	movw	r0, #0
    10ec:	movt	r0, #0
    10f0:	bl	0 <printf>
    10f4:	ldr	r0, [fp, #-4]
    10f8:	mov	sp, fp
    10fc:	pop	{fp, pc}

00001100 <main>:
    1100:	push	{fp, lr}
    1104:	mov	fp, sp
    1108:	sub	sp, sp, #24
    110c:	movw	r0, #0
    1110:	str	r0, [fp, #-4]
    1114:	movw	r1, #0
    1118:	movt	r1, #0
    111c:	ldr	r1, [r1]
    1120:	str	r0, [sp, #12]
    1124:	mov	r0, r1
    1128:	ldr	r1, [sp, #12]
    112c:	movw	r2, #2
    1130:	ldr	r3, [sp, #12]
    1134:	bl	0 <setvbuf>
    1138:	movw	r1, #0
    113c:	movt	r1, #0
    1140:	ldr	r1, [r1]
    1144:	str	r0, [sp, #8]
    1148:	mov	r0, r1
    114c:	movw	r1, #0
    1150:	str	r1, [sp, #4]
    1154:	movw	r2, #2
    1158:	ldr	r3, [sp, #4]
    115c:	bl	0 <setvbuf>
    1160:	movw	r1, #0
    1164:	str	r1, [fp, #-8]
    1168:	str	r0, [sp]
    116c:	bl	220 <teste_lista_nova>
    1170:	ldr	r1, [fp, #-8]
    1174:	add	r0, r1, r0
    1178:	str	r0, [fp, #-8]
    117c:	bl	31c <teste_lista_insere>
    1180:	ldr	r1, [fp, #-8]
    1184:	add	r0, r1, r0
    1188:	str	r0, [fp, #-8]
    118c:	bl	7cc <teste_lista_remove>
    1190:	ldr	r1, [fp, #-8]
    1194:	add	r0, r1, r0
    1198:	str	r0, [fp, #-8]
    119c:	bl	9cc <teste_lista_pesquisa>
    11a0:	ldr	r1, [fp, #-8]
    11a4:	add	r0, r1, r0
    11a8:	str	r0, [fp, #-8]
    11ac:	bl	b98 <teste_lista_ordena>
    11b0:	ldr	r1, [fp, #-8]
    11b4:	add	r0, r1, r0
    11b8:	str	r0, [fp, #-8]
    11bc:	bl	e3c <teste_lista_inverte>
    11c0:	ldr	r1, [fp, #-8]
    11c4:	add	r0, r1, r0
    11c8:	str	r0, [fp, #-8]
    11cc:	ldr	r0, [fp, #-8]
    11d0:	cmp	r0, #0
    11d4:	bne	11e8 <main+0xe8>
    11d8:	movw	r0, #0
    11dc:	movt	r0, #0
    11e0:	bl	0 <printf>
    11e4:	b	11f8 <main+0xf8>
    11e8:	ldr	r1, [fp, #-8]
    11ec:	movw	r0, #0
    11f0:	movt	r0, #0
    11f4:	bl	0 <printf>
    11f8:	movw	r0, #0
    11fc:	mov	sp, fp
    1200:	pop	{fp, pc}
