
../compcert-repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010c28 <.init>:
   10c28:	push	{r3, lr}
   10c2c:	bl	10d44 <_start@@Base+0x3c>
   10c30:	pop	{r3, pc}

Disassembly of section .plt:

00010c34 <strcmp@plt-0x14>:
   10c34:	push	{lr}		; (str lr, [sp, #-4]!)
   10c38:	ldr	lr, [pc, #4]	; 10c44 <strcmp@plt-0x4>
   10c3c:	add	lr, pc, lr
   10c40:	ldr	pc, [lr, #8]!
   10c44:			; <UNDEFINED> instruction: 0x000123bc

00010c48 <strcmp@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #956]!	; 0x3bc

00010c54 <printf@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #948]!	; 0x3b4

00010c60 <fopen@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #940]!	; 0x3ac

00010c6c <free@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #932]!	; 0x3a4

00010c78 <fgets@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #924]!	; 0x39c

00010c84 <realloc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #916]!	; 0x394

00010c90 <strcpy@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #908]!	; 0x38c

00010c9c <puts@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #900]!	; 0x384

00010ca8 <malloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #892]!	; 0x37c

00010cb4 <__libc_start_main@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #884]!	; 0x374

00010cc0 <__gmon_start__@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #876]!	; 0x36c

00010ccc <strlen@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #868]!	; 0x364

00010cd8 <putchar@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #860]!	; 0x35c

00010ce4 <fclose@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #852]!	; 0x354

00010cf0 <strtok@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #844]!	; 0x34c

00010cfc <abort@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #836]!	; 0x344

Disassembly of section .text:

00010d08 <_start@@Base>:
   10d08:	mov	fp, #0
   10d0c:	mov	lr, #0
   10d10:	pop	{r1}		; (ldr r1, [sp], #4)
   10d14:	mov	r2, sp
   10d18:	push	{r2}		; (str r2, [sp, #-4]!)
   10d1c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d20:	ldr	ip, [pc, #16]	; 10d38 <_start@@Base+0x30>
   10d24:	push	{ip}		; (str ip, [sp, #-4]!)
   10d28:	ldr	r0, [pc, #12]	; 10d3c <_start@@Base+0x34>
   10d2c:	ldr	r3, [pc, #12]	; 10d40 <_start@@Base+0x38>
   10d30:	bl	10cb4 <__libc_start_main@plt>
   10d34:	bl	10cfc <abort@plt>
   10d38:	andeq	r2, r1, r0, asr r8
   10d3c:	strdeq	r0, [r1], -r8
   10d40:	strdeq	r2, [r1], -r0
   10d44:	ldr	r3, [pc, #20]	; 10d60 <_start@@Base+0x58>
   10d48:	ldr	r2, [pc, #20]	; 10d64 <_start@@Base+0x5c>
   10d4c:	add	r3, pc, r3
   10d50:	ldr	r2, [r3, r2]
   10d54:	cmp	r2, #0
   10d58:	bxeq	lr
   10d5c:	b	10cc0 <__gmon_start__@plt>
   10d60:	andeq	r2, r1, ip, lsr #5
   10d64:	andeq	r0, r0, ip, asr #32
   10d68:	ldr	r0, [pc, #24]	; 10d88 <_start@@Base+0x80>
   10d6c:	ldr	r3, [pc, #24]	; 10d8c <_start@@Base+0x84>
   10d70:	cmp	r3, r0
   10d74:	bxeq	lr
   10d78:	ldr	r3, [pc, #16]	; 10d90 <_start@@Base+0x88>
   10d7c:	cmp	r3, #0
   10d80:	bxeq	lr
   10d84:	bx	r3
   10d88:	andeq	r3, r2, r8, asr r0
   10d8c:	andeq	r3, r2, r8, asr r0
   10d90:	andeq	r0, r0, r0
   10d94:	ldr	r0, [pc, #36]	; 10dc0 <_start@@Base+0xb8>
   10d98:	ldr	r1, [pc, #36]	; 10dc4 <_start@@Base+0xbc>
   10d9c:	sub	r1, r1, r0
   10da0:	asr	r1, r1, #2
   10da4:	add	r1, r1, r1, lsr #31
   10da8:	asrs	r1, r1, #1
   10dac:	bxeq	lr
   10db0:	ldr	r3, [pc, #16]	; 10dc8 <_start@@Base+0xc0>
   10db4:	cmp	r3, #0
   10db8:	bxeq	lr
   10dbc:	bx	r3
   10dc0:	andeq	r3, r2, r8, asr r0
   10dc4:	andeq	r3, r2, r8, asr r0
   10dc8:	andeq	r0, r0, r0
   10dcc:	push	{r4, lr}
   10dd0:	ldr	r4, [pc, #24]	; 10df0 <_start@@Base+0xe8>
   10dd4:	ldrb	r3, [r4]
   10dd8:	cmp	r3, #0
   10ddc:	popne	{r4, pc}
   10de0:	bl	10d68 <_start@@Base+0x60>
   10de4:	mov	r3, #1
   10de8:	strb	r3, [r4]
   10dec:	pop	{r4, pc}
   10df0:	andeq	r3, r2, r8, asr r0
   10df4:	b	10d94 <_start@@Base+0x8c>

00010df8 <main@@Base>:
   10df8:	str	fp, [sp, #-8]!
   10dfc:	str	lr, [sp, #4]
   10e00:	add	fp, sp, #4
   10e04:	sub	sp, sp, #160	; 0xa0
   10e08:	movw	r0, #10336	; 0x2860
   10e0c:	movt	r0, #1
   10e10:	bl	10c9c <puts@plt>
   10e14:	movw	r2, #10464	; 0x28e0
   10e18:	movt	r2, #1
   10e1c:	sub	r3, fp, #64	; 0x40
   10e20:	ldrd	r0, [r2]
   10e24:	strd	r0, [r3]
   10e28:	ldrd	r0, [r2, #8]
   10e2c:	strd	r0, [r3, #8]
   10e30:	ldrd	r0, [r2, #16]
   10e34:	strd	r0, [r3, #16]
   10e38:	ldrd	r0, [r2, #24]
   10e3c:	strd	r0, [r3, #24]
   10e40:	ldrd	r0, [r2, #32]
   10e44:	strd	r0, [r3, #32]
   10e48:	bl	11e7c <bst_nova@@Base>
   10e4c:	str	r0, [fp, #-12]
   10e50:	mov	r3, #0
   10e54:	str	r3, [fp, #-8]
   10e58:	b	10e88 <main@@Base+0x90>
   10e5c:	ldr	r3, [fp, #-8]
   10e60:	lsl	r3, r3, #2
   10e64:	sub	r2, fp, #4
   10e68:	add	r3, r2, r3
   10e6c:	ldr	r3, [r3, #-60]	; 0xffffffc4
   10e70:	mov	r1, r3
   10e74:	ldr	r0, [fp, #-12]
   10e78:	bl	11fa8 <bst_insere@@Base>
   10e7c:	ldr	r3, [fp, #-8]
   10e80:	add	r3, r3, #1
   10e84:	str	r3, [fp, #-8]
   10e88:	ldr	r3, [fp, #-8]
   10e8c:	cmp	r3, #9
   10e90:	ble	10e5c <main@@Base+0x64>
   10e94:	ldr	r3, [fp, #-12]
   10e98:	ldr	r3, [r3]
   10e9c:	mov	r0, r3
   10ea0:	bl	1269c <bst_altura@@Base>
   10ea4:	mov	r3, r0
   10ea8:	mov	r1, r3
   10eac:	movw	r0, #10340	; 0x2864
   10eb0:	movt	r0, #1
   10eb4:	bl	10c54 <printf@plt>
   10eb8:	ldr	r0, [fp, #-12]
   10ebc:	bl	12130 <bst_imprime@@Base>
   10ec0:	movw	r0, #10360	; 0x2878
   10ec4:	movt	r0, #1
   10ec8:	bl	10c9c <puts@plt>
   10ecc:	bl	11070 <avl_nova@@Base>
   10ed0:	str	r0, [fp, #-16]
   10ed4:	movw	r1, #10364	; 0x287c
   10ed8:	movt	r1, #1
   10edc:	movw	r0, #10368	; 0x2880
   10ee0:	movt	r0, #1
   10ee4:	bl	10c60 <fopen@plt>
   10ee8:	str	r0, [fp, #-20]	; 0xffffffec
   10eec:	b	10f70 <main@@Base+0x178>
   10ef0:	sub	r3, fp, #164	; 0xa4
   10ef4:	movw	r1, #10380	; 0x288c
   10ef8:	movt	r1, #1
   10efc:	mov	r0, r3
   10f00:	bl	10cf0 <strtok@plt>
   10f04:	mov	r2, r0
   10f08:	sub	r3, fp, #164	; 0xa4
   10f0c:	mov	r1, r2
   10f10:	mov	r0, r3
   10f14:	bl	10c90 <strcpy@plt>
   10f18:	movw	r1, #10380	; 0x288c
   10f1c:	movt	r1, #1
   10f20:	mov	r0, #0
   10f24:	bl	10cf0 <strtok@plt>
   10f28:	mov	r2, r0
   10f2c:	sub	r3, fp, #164	; 0xa4
   10f30:	mov	r1, r2
   10f34:	mov	r0, r3
   10f38:	bl	10c90 <strcpy@plt>
   10f3c:	sub	r3, fp, #164	; 0xa4
   10f40:	mov	r0, r3
   10f44:	bl	10ccc <strlen@plt>
   10f48:	mov	r3, r0
   10f4c:	sub	r3, r3, #1
   10f50:	sub	r2, fp, #4
   10f54:	add	r3, r2, r3
   10f58:	mov	r2, #0
   10f5c:	strb	r2, [r3, #-160]	; 0xffffff60
   10f60:	sub	r3, fp, #164	; 0xa4
   10f64:	mov	r1, r3
   10f68:	ldr	r0, [fp, #-16]
   10f6c:	bl	111ac <avl_insere@@Base>
   10f70:	sub	r3, fp, #164	; 0xa4
   10f74:	ldr	r2, [fp, #-20]	; 0xffffffec
   10f78:	mov	r1, #100	; 0x64
   10f7c:	mov	r0, r3
   10f80:	bl	10c78 <fgets@plt>
   10f84:	mov	r3, r0
   10f88:	cmp	r3, #0
   10f8c:	bne	10ef0 <main@@Base+0xf8>
   10f90:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f94:	bl	10ce4 <fclose@plt>
   10f98:	movw	r1, #10384	; 0x2890
   10f9c:	movt	r1, #1
   10fa0:	ldr	r0, [fp, #-16]
   10fa4:	bl	11148 <avl_pesquisa@@Base>
   10fa8:	str	r0, [fp, #-24]	; 0xffffffe8
   10fac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fb0:	cmp	r3, #0
   10fb4:	beq	10fd8 <main@@Base+0x1e0>
   10fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fbc:	ldr	r1, [r3]
   10fc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fc4:	ldr	r3, [r3, #16]
   10fc8:	mov	r2, r3
   10fcc:	movw	r0, #10396	; 0x289c
   10fd0:	movt	r0, #1
   10fd4:	bl	10c54 <printf@plt>
   10fd8:	movw	r1, #10408	; 0x28a8
   10fdc:	movt	r1, #1
   10fe0:	ldr	r0, [fp, #-16]
   10fe4:	bl	11148 <avl_pesquisa@@Base>
   10fe8:	str	r0, [fp, #-24]	; 0xffffffe8
   10fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ff0:	cmp	r3, #0
   10ff4:	beq	11018 <main@@Base+0x220>
   10ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ffc:	ldr	r1, [r3]
   11000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11004:	ldr	r3, [r3, #16]
   11008:	mov	r2, r3
   1100c:	movw	r0, #10396	; 0x289c
   11010:	movt	r0, #1
   11014:	bl	10c54 <printf@plt>
   11018:	movw	r1, #10416	; 0x28b0
   1101c:	movt	r1, #1
   11020:	ldr	r0, [fp, #-16]
   11024:	bl	11148 <avl_pesquisa@@Base>
   11028:	str	r0, [fp, #-24]	; 0xffffffe8
   1102c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11030:	cmp	r3, #0
   11034:	beq	11058 <main@@Base+0x260>
   11038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1103c:	ldr	r1, [r3]
   11040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11044:	ldr	r3, [r3, #16]
   11048:	mov	r2, r3
   1104c:	movw	r0, #10396	; 0x289c
   11050:	movt	r0, #1
   11054:	bl	10c54 <printf@plt>
   11058:	mov	r3, #0
   1105c:	mov	r0, r3
   11060:	sub	sp, fp, #4
   11064:	ldr	fp, [sp]
   11068:	add	sp, sp, #4
   1106c:	pop	{pc}		; (ldr pc, [sp], #4)

00011070 <avl_nova@@Base>:
   11070:	str	fp, [sp, #-8]!
   11074:	str	lr, [sp, #4]
   11078:	add	fp, sp, #4
   1107c:	sub	sp, sp, #8
   11080:	mov	r0, #4
   11084:	bl	10ca8 <malloc@plt>
   11088:	mov	r3, r0
   1108c:	str	r3, [fp, #-8]
   11090:	ldr	r3, [fp, #-8]
   11094:	cmp	r3, #0
   11098:	bne	110a4 <avl_nova@@Base+0x34>
   1109c:	mov	r3, #0
   110a0:	b	110b4 <avl_nova@@Base+0x44>
   110a4:	ldr	r3, [fp, #-8]
   110a8:	mov	r2, #0
   110ac:	str	r2, [r3]
   110b0:	ldr	r3, [fp, #-8]
   110b4:	mov	r0, r3
   110b8:	sub	sp, fp, #4
   110bc:	ldr	fp, [sp]
   110c0:	add	sp, sp, #4
   110c4:	pop	{pc}		; (ldr pc, [sp], #4)

000110c8 <avl_apaga@@Base>:
   110c8:	str	fp, [sp, #-8]!
   110cc:	str	lr, [sp, #4]
   110d0:	add	fp, sp, #4
   110d4:	sub	sp, sp, #8
   110d8:	str	r0, [fp, #-8]
   110dc:	ldr	r3, [fp, #-8]
   110e0:	cmp	r3, #0
   110e4:	beq	11134 <avl_apaga@@Base+0x6c>
   110e8:	b	11118 <avl_apaga@@Base+0x50>
   110ec:	ldr	r3, [fp, #-8]
   110f0:	ldr	r2, [r3]
   110f4:	ldr	r3, [fp, #-8]
   110f8:	ldr	r3, [r3]
   110fc:	ldr	r3, [r3]
   11100:	mov	r1, r3
   11104:	mov	r0, r2
   11108:	bl	11a6c <avl_remove_impl@@Base>
   1110c:	mov	r2, r0
   11110:	ldr	r3, [fp, #-8]
   11114:	str	r2, [r3]
   11118:	ldr	r3, [fp, #-8]
   1111c:	ldr	r3, [r3]
   11120:	cmp	r3, #0
   11124:	bne	110ec <avl_apaga@@Base+0x24>
   11128:	ldr	r0, [fp, #-8]
   1112c:	bl	10c6c <free@plt>
   11130:	b	11138 <avl_apaga@@Base+0x70>
   11134:	nop	{0}
   11138:	sub	sp, fp, #4
   1113c:	ldr	fp, [sp]
   11140:	add	sp, sp, #4
   11144:	pop	{pc}		; (ldr pc, [sp], #4)

00011148 <avl_pesquisa@@Base>:
   11148:	str	fp, [sp, #-8]!
   1114c:	str	lr, [sp, #4]
   11150:	add	fp, sp, #4
   11154:	sub	sp, sp, #8
   11158:	str	r0, [fp, #-8]
   1115c:	str	r1, [fp, #-12]
   11160:	ldr	r3, [fp, #-8]
   11164:	cmp	r3, #0
   11168:	beq	11178 <avl_pesquisa@@Base+0x30>
   1116c:	ldr	r3, [fp, #-12]
   11170:	cmp	r3, #0
   11174:	bne	11180 <avl_pesquisa@@Base+0x38>
   11178:	mov	r3, #0
   1117c:	b	11198 <avl_pesquisa@@Base+0x50>
   11180:	ldr	r3, [fp, #-8]
   11184:	ldr	r3, [r3]
   11188:	ldr	r1, [fp, #-12]
   1118c:	mov	r0, r3
   11190:	bl	116e8 <avl_pesquisa_impl@@Base>
   11194:	mov	r3, r0
   11198:	mov	r0, r3
   1119c:	sub	sp, fp, #4
   111a0:	ldr	fp, [sp]
   111a4:	add	sp, sp, #4
   111a8:	pop	{pc}		; (ldr pc, [sp], #4)

000111ac <avl_insere@@Base>:
   111ac:	str	fp, [sp, #-8]!
   111b0:	str	lr, [sp, #4]
   111b4:	add	fp, sp, #4
   111b8:	sub	sp, sp, #8
   111bc:	str	r0, [fp, #-8]
   111c0:	str	r1, [fp, #-12]
   111c4:	ldr	r3, [fp, #-8]
   111c8:	cmp	r3, #0
   111cc:	beq	111dc <avl_insere@@Base+0x30>
   111d0:	ldr	r3, [fp, #-12]
   111d4:	cmp	r3, #0
   111d8:	bne	111e4 <avl_insere@@Base+0x38>
   111dc:	mvn	r3, #0
   111e0:	b	11208 <avl_insere@@Base+0x5c>
   111e4:	ldr	r3, [fp, #-8]
   111e8:	ldr	r3, [r3]
   111ec:	ldr	r1, [fp, #-12]
   111f0:	mov	r0, r3
   111f4:	bl	117a4 <avl_insere_impl@@Base>
   111f8:	mov	r2, r0
   111fc:	ldr	r3, [fp, #-8]
   11200:	str	r2, [r3]
   11204:	mov	r3, #0
   11208:	mov	r0, r3
   1120c:	sub	sp, fp, #4
   11210:	ldr	fp, [sp]
   11214:	add	sp, sp, #4
   11218:	pop	{pc}		; (ldr pc, [sp], #4)

0001121c <avl_remove@@Base>:
   1121c:	str	fp, [sp, #-8]!
   11220:	str	lr, [sp, #4]
   11224:	add	fp, sp, #4
   11228:	sub	sp, sp, #8
   1122c:	str	r0, [fp, #-8]
   11230:	str	r1, [fp, #-12]
   11234:	ldr	r3, [fp, #-8]
   11238:	cmp	r3, #0
   1123c:	beq	1124c <avl_remove@@Base+0x30>
   11240:	ldr	r3, [fp, #-12]
   11244:	cmp	r3, #0
   11248:	bne	11254 <avl_remove@@Base+0x38>
   1124c:	mvn	r3, #0
   11250:	b	11278 <avl_remove@@Base+0x5c>
   11254:	ldr	r3, [fp, #-8]
   11258:	ldr	r3, [r3]
   1125c:	ldr	r1, [fp, #-12]
   11260:	mov	r0, r3
   11264:	bl	11a6c <avl_remove_impl@@Base>
   11268:	mov	r2, r0
   1126c:	ldr	r3, [fp, #-8]
   11270:	str	r2, [r3]
   11274:	mov	r3, #0
   11278:	mov	r0, r3
   1127c:	sub	sp, fp, #4
   11280:	ldr	fp, [sp]
   11284:	add	sp, sp, #4
   11288:	pop	{pc}		; (ldr pc, [sp], #4)

0001128c <avl_min@@Base>:
   1128c:	str	fp, [sp, #-8]!
   11290:	str	lr, [sp, #4]
   11294:	add	fp, sp, #4
   11298:	sub	sp, sp, #8
   1129c:	str	r0, [fp, #-8]
   112a0:	ldr	r3, [fp, #-8]
   112a4:	cmp	r3, #0
   112a8:	bne	112b4 <avl_min@@Base+0x28>
   112ac:	mov	r3, #0
   112b0:	b	112cc <avl_min@@Base+0x40>
   112b4:	ldr	r3, [fp, #-8]
   112b8:	ldr	r3, [r3]
   112bc:	mov	r0, r3
   112c0:	bl	119d4 <avl_no_valormin@@Base>
   112c4:	mov	r3, r0
   112c8:	ldr	r3, [r3]
   112cc:	mov	r0, r3
   112d0:	sub	sp, fp, #4
   112d4:	ldr	fp, [sp]
   112d8:	add	sp, sp, #4
   112dc:	pop	{pc}		; (ldr pc, [sp], #4)

000112e0 <avl_max@@Base>:
   112e0:	str	fp, [sp, #-8]!
   112e4:	str	lr, [sp, #4]
   112e8:	add	fp, sp, #4
   112ec:	sub	sp, sp, #8
   112f0:	str	r0, [fp, #-8]
   112f4:	ldr	r3, [fp, #-8]
   112f8:	cmp	r3, #0
   112fc:	bne	11308 <avl_max@@Base+0x28>
   11300:	mov	r3, #0
   11304:	b	11320 <avl_max@@Base+0x40>
   11308:	ldr	r3, [fp, #-8]
   1130c:	ldr	r3, [r3]
   11310:	mov	r0, r3
   11314:	bl	11a20 <avl_no_valormax@@Base>
   11318:	mov	r3, r0
   1131c:	ldr	r3, [r3]
   11320:	mov	r0, r3
   11324:	sub	sp, fp, #4
   11328:	ldr	fp, [sp]
   1132c:	add	sp, sp, #4
   11330:	pop	{pc}		; (ldr pc, [sp], #4)

00011334 <avl_imprime@@Base>:
   11334:	str	fp, [sp, #-8]!
   11338:	str	lr, [sp, #4]
   1133c:	add	fp, sp, #4
   11340:	sub	sp, sp, #8
   11344:	str	r0, [fp, #-8]
   11348:	ldr	r3, [fp, #-8]
   1134c:	cmp	r3, #0
   11350:	beq	11370 <avl_imprime@@Base+0x3c>
   11354:	ldr	r3, [fp, #-8]
   11358:	ldr	r3, [r3]
   1135c:	mov	r0, r3
   11360:	bl	11e04 <avl_preordem_impl@@Base>
   11364:	mov	r0, #10
   11368:	bl	10cd8 <putchar@plt>
   1136c:	b	11374 <avl_imprime@@Base+0x40>
   11370:	nop	{0}
   11374:	sub	sp, fp, #4
   11378:	ldr	fp, [sp]
   1137c:	add	sp, sp, #4
   11380:	pop	{pc}		; (ldr pc, [sp], #4)

00011384 <avl_altura@@Base>:
   11384:	push	{fp}		; (str fp, [sp, #-4]!)
   11388:	add	fp, sp, #0
   1138c:	sub	sp, sp, #12
   11390:	str	r0, [fp, #-8]
   11394:	ldr	r3, [fp, #-8]
   11398:	cmp	r3, #0
   1139c:	bne	113a8 <avl_altura@@Base+0x24>
   113a0:	mvn	r3, #0
   113a4:	b	113b0 <avl_altura@@Base+0x2c>
   113a8:	ldr	r3, [fp, #-8]
   113ac:	ldr	r3, [r3, #12]
   113b0:	mov	r0, r3
   113b4:	add	sp, fp, #0
   113b8:	pop	{fp}		; (ldr fp, [sp], #4)
   113bc:	bx	lr

000113c0 <max@@Base>:
   113c0:	push	{fp}		; (str fp, [sp, #-4]!)
   113c4:	add	fp, sp, #0
   113c8:	sub	sp, sp, #12
   113cc:	str	r0, [fp, #-8]
   113d0:	str	r1, [fp, #-12]
   113d4:	ldr	r2, [fp, #-12]
   113d8:	ldr	r3, [fp, #-8]
   113dc:	cmp	r2, r3
   113e0:	movge	r3, r2
   113e4:	movlt	r3, r3
   113e8:	mov	r0, r3
   113ec:	add	sp, fp, #0
   113f0:	pop	{fp}		; (ldr fp, [sp], #4)
   113f4:	bx	lr

000113f8 <avl_novo_no@@Base>:
   113f8:	str	fp, [sp, #-8]!
   113fc:	str	lr, [sp, #4]
   11400:	add	fp, sp, #4
   11404:	sub	sp, sp, #16
   11408:	str	r0, [fp, #-16]
   1140c:	mov	r0, #20
   11410:	bl	10ca8 <malloc@plt>
   11414:	mov	r3, r0
   11418:	str	r3, [fp, #-8]
   1141c:	ldr	r0, [fp, #-16]
   11420:	bl	10ccc <strlen@plt>
   11424:	mov	r3, r0
   11428:	add	r3, r3, #1
   1142c:	mov	r0, r3
   11430:	bl	10ca8 <malloc@plt>
   11434:	mov	r3, r0
   11438:	mov	r2, r3
   1143c:	ldr	r3, [fp, #-8]
   11440:	str	r2, [r3]
   11444:	ldr	r3, [fp, #-8]
   11448:	ldr	r3, [r3]
   1144c:	ldr	r1, [fp, #-16]
   11450:	mov	r0, r3
   11454:	bl	10c90 <strcpy@plt>
   11458:	ldr	r3, [fp, #-8]
   1145c:	mov	r2, #0
   11460:	str	r2, [r3, #4]
   11464:	ldr	r3, [fp, #-8]
   11468:	mov	r2, #0
   1146c:	str	r2, [r3, #8]
   11470:	ldr	r3, [fp, #-8]
   11474:	mov	r2, #0
   11478:	str	r2, [r3, #12]
   1147c:	ldr	r3, [fp, #-8]
   11480:	mov	r2, #1
   11484:	str	r2, [r3, #16]
   11488:	ldr	r3, [fp, #-8]
   1148c:	mov	r0, r3
   11490:	sub	sp, fp, #4
   11494:	ldr	fp, [sp]
   11498:	add	sp, sp, #4
   1149c:	pop	{pc}		; (ldr pc, [sp], #4)

000114a0 <roda_direita@@Base>:
   114a0:	str	r4, [sp, #-12]!
   114a4:	str	fp, [sp, #4]
   114a8:	str	lr, [sp, #8]
   114ac:	add	fp, sp, #8
   114b0:	sub	sp, sp, #20
   114b4:	str	r0, [fp, #-24]	; 0xffffffe8
   114b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114bc:	ldr	r3, [r3, #4]
   114c0:	str	r3, [fp, #-16]
   114c4:	ldr	r3, [fp, #-16]
   114c8:	ldr	r3, [r3, #8]
   114cc:	str	r3, [fp, #-20]	; 0xffffffec
   114d0:	ldr	r3, [fp, #-16]
   114d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   114d8:	str	r2, [r3, #8]
   114dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   114e4:	str	r2, [r3, #4]
   114e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114ec:	ldr	r3, [r3, #4]
   114f0:	mov	r0, r3
   114f4:	bl	11384 <avl_altura@@Base>
   114f8:	mov	r4, r0
   114fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11500:	ldr	r3, [r3, #8]
   11504:	mov	r0, r3
   11508:	bl	11384 <avl_altura@@Base>
   1150c:	mov	r3, r0
   11510:	mov	r1, r3
   11514:	mov	r0, r4
   11518:	bl	113c0 <max@@Base>
   1151c:	mov	r3, r0
   11520:	add	r2, r3, #1
   11524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11528:	str	r2, [r3, #12]
   1152c:	ldr	r3, [fp, #-16]
   11530:	ldr	r3, [r3, #4]
   11534:	mov	r0, r3
   11538:	bl	11384 <avl_altura@@Base>
   1153c:	mov	r4, r0
   11540:	ldr	r3, [fp, #-16]
   11544:	ldr	r3, [r3, #8]
   11548:	mov	r0, r3
   1154c:	bl	11384 <avl_altura@@Base>
   11550:	mov	r3, r0
   11554:	mov	r1, r3
   11558:	mov	r0, r4
   1155c:	bl	113c0 <max@@Base>
   11560:	mov	r3, r0
   11564:	add	r2, r3, #1
   11568:	ldr	r3, [fp, #-16]
   1156c:	str	r2, [r3, #12]
   11570:	ldr	r3, [fp, #-16]
   11574:	mov	r0, r3
   11578:	sub	sp, fp, #8
   1157c:	ldr	r4, [sp]
   11580:	ldr	fp, [sp, #4]
   11584:	add	sp, sp, #8
   11588:	pop	{pc}		; (ldr pc, [sp], #4)

0001158c <roda_esquerda@@Base>:
   1158c:	str	r4, [sp, #-12]!
   11590:	str	fp, [sp, #4]
   11594:	str	lr, [sp, #8]
   11598:	add	fp, sp, #8
   1159c:	sub	sp, sp, #20
   115a0:	str	r0, [fp, #-24]	; 0xffffffe8
   115a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115a8:	ldr	r3, [r3, #8]
   115ac:	str	r3, [fp, #-16]
   115b0:	ldr	r3, [fp, #-16]
   115b4:	ldr	r3, [r3, #4]
   115b8:	str	r3, [fp, #-20]	; 0xffffffec
   115bc:	ldr	r3, [fp, #-16]
   115c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   115c4:	str	r2, [r3, #4]
   115c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   115d0:	str	r2, [r3, #8]
   115d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115d8:	ldr	r3, [r3, #4]
   115dc:	mov	r0, r3
   115e0:	bl	11384 <avl_altura@@Base>
   115e4:	mov	r4, r0
   115e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115ec:	ldr	r3, [r3, #8]
   115f0:	mov	r0, r3
   115f4:	bl	11384 <avl_altura@@Base>
   115f8:	mov	r3, r0
   115fc:	mov	r1, r3
   11600:	mov	r0, r4
   11604:	bl	113c0 <max@@Base>
   11608:	mov	r3, r0
   1160c:	add	r2, r3, #1
   11610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11614:	str	r2, [r3, #12]
   11618:	ldr	r3, [fp, #-16]
   1161c:	ldr	r3, [r3, #4]
   11620:	mov	r0, r3
   11624:	bl	11384 <avl_altura@@Base>
   11628:	mov	r4, r0
   1162c:	ldr	r3, [fp, #-16]
   11630:	ldr	r3, [r3, #8]
   11634:	mov	r0, r3
   11638:	bl	11384 <avl_altura@@Base>
   1163c:	mov	r3, r0
   11640:	mov	r1, r3
   11644:	mov	r0, r4
   11648:	bl	113c0 <max@@Base>
   1164c:	mov	r3, r0
   11650:	add	r2, r3, #1
   11654:	ldr	r3, [fp, #-16]
   11658:	str	r2, [r3, #12]
   1165c:	ldr	r3, [fp, #-16]
   11660:	mov	r0, r3
   11664:	sub	sp, fp, #8
   11668:	ldr	r4, [sp]
   1166c:	ldr	fp, [sp, #4]
   11670:	add	sp, sp, #8
   11674:	pop	{pc}		; (ldr pc, [sp], #4)

00011678 <calc_balanceamento@@Base>:
   11678:	str	r4, [sp, #-12]!
   1167c:	str	fp, [sp, #4]
   11680:	str	lr, [sp, #8]
   11684:	add	fp, sp, #8
   11688:	sub	sp, sp, #12
   1168c:	str	r0, [fp, #-16]
   11690:	ldr	r3, [fp, #-16]
   11694:	cmp	r3, #0
   11698:	bne	116a4 <calc_balanceamento@@Base+0x2c>
   1169c:	mov	r3, #0
   116a0:	b	116d0 <calc_balanceamento@@Base+0x58>
   116a4:	ldr	r3, [fp, #-16]
   116a8:	ldr	r3, [r3, #8]
   116ac:	mov	r0, r3
   116b0:	bl	11384 <avl_altura@@Base>
   116b4:	mov	r4, r0
   116b8:	ldr	r3, [fp, #-16]
   116bc:	ldr	r3, [r3, #4]
   116c0:	mov	r0, r3
   116c4:	bl	11384 <avl_altura@@Base>
   116c8:	mov	r3, r0
   116cc:	sub	r3, r4, r3
   116d0:	mov	r0, r3
   116d4:	sub	sp, fp, #8
   116d8:	ldr	r4, [sp]
   116dc:	ldr	fp, [sp, #4]
   116e0:	add	sp, sp, #8
   116e4:	pop	{pc}		; (ldr pc, [sp], #4)

000116e8 <avl_pesquisa_impl@@Base>:
   116e8:	str	fp, [sp, #-8]!
   116ec:	str	lr, [sp, #4]
   116f0:	add	fp, sp, #4
   116f4:	sub	sp, sp, #8
   116f8:	str	r0, [fp, #-8]
   116fc:	str	r1, [fp, #-12]
   11700:	ldr	r3, [fp, #-8]
   11704:	cmp	r3, #0
   11708:	bne	11714 <avl_pesquisa_impl@@Base+0x2c>
   1170c:	mov	r3, #0
   11710:	b	11790 <avl_pesquisa_impl@@Base+0xa8>
   11714:	ldr	r3, [fp, #-8]
   11718:	ldr	r3, [r3]
   1171c:	mov	r1, r3
   11720:	ldr	r0, [fp, #-12]
   11724:	bl	10c48 <strcmp@plt>
   11728:	mov	r3, r0
   1172c:	cmp	r3, #0
   11730:	bge	11750 <avl_pesquisa_impl@@Base+0x68>
   11734:	ldr	r3, [fp, #-8]
   11738:	ldr	r3, [r3, #4]
   1173c:	ldr	r1, [fp, #-12]
   11740:	mov	r0, r3
   11744:	bl	116e8 <avl_pesquisa_impl@@Base>
   11748:	mov	r3, r0
   1174c:	b	11790 <avl_pesquisa_impl@@Base+0xa8>
   11750:	ldr	r3, [fp, #-8]
   11754:	ldr	r3, [r3]
   11758:	mov	r1, r3
   1175c:	ldr	r0, [fp, #-12]
   11760:	bl	10c48 <strcmp@plt>
   11764:	mov	r3, r0
   11768:	cmp	r3, #0
   1176c:	ble	1178c <avl_pesquisa_impl@@Base+0xa4>
   11770:	ldr	r3, [fp, #-8]
   11774:	ldr	r3, [r3, #8]
   11778:	ldr	r1, [fp, #-12]
   1177c:	mov	r0, r3
   11780:	bl	116e8 <avl_pesquisa_impl@@Base>
   11784:	mov	r3, r0
   11788:	b	11790 <avl_pesquisa_impl@@Base+0xa8>
   1178c:	ldr	r3, [fp, #-8]
   11790:	mov	r0, r3
   11794:	sub	sp, fp, #4
   11798:	ldr	fp, [sp]
   1179c:	add	sp, sp, #4
   117a0:	pop	{pc}		; (ldr pc, [sp], #4)

000117a4 <avl_insere_impl@@Base>:
   117a4:	str	r4, [sp, #-12]!
   117a8:	str	fp, [sp, #4]
   117ac:	str	lr, [sp, #8]
   117b0:	add	fp, sp, #8
   117b4:	sub	sp, sp, #20
   117b8:	str	r0, [fp, #-24]	; 0xffffffe8
   117bc:	str	r1, [fp, #-28]	; 0xffffffe4
   117c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117c4:	cmp	r3, #0
   117c8:	bne	117dc <avl_insere_impl@@Base+0x38>
   117cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117d0:	bl	113f8 <avl_novo_no@@Base>
   117d4:	mov	r3, r0
   117d8:	b	119bc <avl_insere_impl@@Base+0x218>
   117dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117e0:	ldr	r3, [r3]
   117e4:	mov	r1, r3
   117e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   117ec:	bl	10c48 <strcmp@plt>
   117f0:	mov	r3, r0
   117f4:	cmp	r3, #0
   117f8:	bge	11820 <avl_insere_impl@@Base+0x7c>
   117fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11800:	ldr	r3, [r3, #4]
   11804:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11808:	mov	r0, r3
   1180c:	bl	117a4 <avl_insere_impl@@Base>
   11810:	mov	r2, r0
   11814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11818:	str	r2, [r3, #4]
   1181c:	b	118a0 <avl_insere_impl@@Base+0xfc>
   11820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11824:	ldr	r3, [r3]
   11828:	mov	r1, r3
   1182c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11830:	bl	10c48 <strcmp@plt>
   11834:	mov	r3, r0
   11838:	cmp	r3, #0
   1183c:	ble	11864 <avl_insere_impl@@Base+0xc0>
   11840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11844:	ldr	r3, [r3, #8]
   11848:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1184c:	mov	r0, r3
   11850:	bl	117a4 <avl_insere_impl@@Base>
   11854:	mov	r2, r0
   11858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1185c:	str	r2, [r3, #8]
   11860:	b	118a0 <avl_insere_impl@@Base+0xfc>
   11864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11868:	ldr	r3, [r3]
   1186c:	mov	r1, r3
   11870:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11874:	bl	10c48 <strcmp@plt>
   11878:	mov	r3, r0
   1187c:	cmp	r3, #0
   11880:	bne	118a0 <avl_insere_impl@@Base+0xfc>
   11884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11888:	ldr	r3, [r3, #16]
   1188c:	add	r2, r3, #1
   11890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11894:	str	r2, [r3, #16]
   11898:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1189c:	b	119bc <avl_insere_impl@@Base+0x218>
   118a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118a4:	ldr	r3, [r3, #4]
   118a8:	mov	r0, r3
   118ac:	bl	11384 <avl_altura@@Base>
   118b0:	mov	r4, r0
   118b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118b8:	ldr	r3, [r3, #8]
   118bc:	mov	r0, r3
   118c0:	bl	11384 <avl_altura@@Base>
   118c4:	mov	r3, r0
   118c8:	mov	r1, r3
   118cc:	mov	r0, r4
   118d0:	bl	113c0 <max@@Base>
   118d4:	mov	r3, r0
   118d8:	add	r2, r3, #1
   118dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118e0:	str	r2, [r3, #12]
   118e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118e8:	bl	11678 <calc_balanceamento@@Base>
   118ec:	str	r0, [fp, #-16]
   118f0:	ldr	r3, [fp, #-16]
   118f4:	cmp	r3, #1
   118f8:	ble	11954 <avl_insere_impl@@Base+0x1b0>
   118fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11900:	ldr	r3, [r3, #8]
   11904:	mov	r0, r3
   11908:	bl	11678 <calc_balanceamento@@Base>
   1190c:	mov	r3, r0
   11910:	cmp	r3, #0
   11914:	bge	11944 <avl_insere_impl@@Base+0x1a0>
   11918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1191c:	ldr	r3, [r3, #8]
   11920:	mov	r0, r3
   11924:	bl	114a0 <roda_direita@@Base>
   11928:	mov	r2, r0
   1192c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11930:	str	r2, [r3, #8]
   11934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11938:	bl	1158c <roda_esquerda@@Base>
   1193c:	mov	r3, r0
   11940:	b	119bc <avl_insere_impl@@Base+0x218>
   11944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11948:	bl	1158c <roda_esquerda@@Base>
   1194c:	mov	r3, r0
   11950:	b	119bc <avl_insere_impl@@Base+0x218>
   11954:	ldr	r3, [fp, #-16]
   11958:	cmn	r3, #1
   1195c:	bge	119b8 <avl_insere_impl@@Base+0x214>
   11960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11964:	ldr	r3, [r3, #4]
   11968:	mov	r0, r3
   1196c:	bl	11678 <calc_balanceamento@@Base>
   11970:	mov	r3, r0
   11974:	cmp	r3, #0
   11978:	ble	119a8 <avl_insere_impl@@Base+0x204>
   1197c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11980:	ldr	r3, [r3, #4]
   11984:	mov	r0, r3
   11988:	bl	1158c <roda_esquerda@@Base>
   1198c:	mov	r2, r0
   11990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11994:	str	r2, [r3, #4]
   11998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1199c:	bl	114a0 <roda_direita@@Base>
   119a0:	mov	r3, r0
   119a4:	b	119bc <avl_insere_impl@@Base+0x218>
   119a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119ac:	bl	114a0 <roda_direita@@Base>
   119b0:	mov	r3, r0
   119b4:	b	119bc <avl_insere_impl@@Base+0x218>
   119b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119bc:	mov	r0, r3
   119c0:	sub	sp, fp, #8
   119c4:	ldr	r4, [sp]
   119c8:	ldr	fp, [sp, #4]
   119cc:	add	sp, sp, #8
   119d0:	pop	{pc}		; (ldr pc, [sp], #4)

000119d4 <avl_no_valormin@@Base>:
   119d4:	push	{fp}		; (str fp, [sp, #-4]!)
   119d8:	add	fp, sp, #0
   119dc:	sub	sp, sp, #20
   119e0:	str	r0, [fp, #-16]
   119e4:	ldr	r3, [fp, #-16]
   119e8:	str	r3, [fp, #-8]
   119ec:	b	119fc <avl_no_valormin@@Base+0x28>
   119f0:	ldr	r3, [fp, #-8]
   119f4:	ldr	r3, [r3, #4]
   119f8:	str	r3, [fp, #-8]
   119fc:	ldr	r3, [fp, #-8]
   11a00:	ldr	r3, [r3, #4]
   11a04:	cmp	r3, #0
   11a08:	bne	119f0 <avl_no_valormin@@Base+0x1c>
   11a0c:	ldr	r3, [fp, #-8]
   11a10:	mov	r0, r3
   11a14:	add	sp, fp, #0
   11a18:	pop	{fp}		; (ldr fp, [sp], #4)
   11a1c:	bx	lr

00011a20 <avl_no_valormax@@Base>:
   11a20:	push	{fp}		; (str fp, [sp, #-4]!)
   11a24:	add	fp, sp, #0
   11a28:	sub	sp, sp, #20
   11a2c:	str	r0, [fp, #-16]
   11a30:	ldr	r3, [fp, #-16]
   11a34:	str	r3, [fp, #-8]
   11a38:	b	11a48 <avl_no_valormax@@Base+0x28>
   11a3c:	ldr	r3, [fp, #-8]
   11a40:	ldr	r3, [r3, #8]
   11a44:	str	r3, [fp, #-8]
   11a48:	ldr	r3, [fp, #-8]
   11a4c:	ldr	r3, [r3, #8]
   11a50:	cmp	r3, #0
   11a54:	bne	11a3c <avl_no_valormax@@Base+0x1c>
   11a58:	ldr	r3, [fp, #-8]
   11a5c:	mov	r0, r3
   11a60:	add	sp, fp, #0
   11a64:	pop	{fp}		; (ldr fp, [sp], #4)
   11a68:	bx	lr

00011a6c <avl_remove_impl@@Base>:
   11a6c:	str	r4, [sp, #-12]!
   11a70:	str	fp, [sp, #4]
   11a74:	str	lr, [sp, #8]
   11a78:	add	fp, sp, #8
   11a7c:	sub	sp, sp, #28
   11a80:	str	r0, [fp, #-32]	; 0xffffffe0
   11a84:	str	r1, [fp, #-36]	; 0xffffffdc
   11a88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a8c:	cmp	r3, #0
   11a90:	bne	11a9c <avl_remove_impl@@Base+0x30>
   11a94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11a98:	b	11dec <avl_remove_impl@@Base+0x380>
   11a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11aa0:	ldr	r3, [r3]
   11aa4:	mov	r1, r3
   11aa8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11aac:	bl	10c48 <strcmp@plt>
   11ab0:	mov	r3, r0
   11ab4:	cmp	r3, #0
   11ab8:	bge	11ae0 <avl_remove_impl@@Base+0x74>
   11abc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ac0:	ldr	r3, [r3, #4]
   11ac4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11ac8:	mov	r0, r3
   11acc:	bl	11a6c <avl_remove_impl@@Base>
   11ad0:	mov	r2, r0
   11ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ad8:	str	r2, [r3, #4]
   11adc:	b	11cbc <avl_remove_impl@@Base+0x250>
   11ae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ae4:	ldr	r3, [r3]
   11ae8:	mov	r1, r3
   11aec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11af0:	bl	10c48 <strcmp@plt>
   11af4:	mov	r3, r0
   11af8:	cmp	r3, #0
   11afc:	ble	11b24 <avl_remove_impl@@Base+0xb8>
   11b00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b04:	ldr	r3, [r3, #8]
   11b08:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b0c:	mov	r0, r3
   11b10:	bl	11a6c <avl_remove_impl@@Base>
   11b14:	mov	r2, r0
   11b18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b1c:	str	r2, [r3, #8]
   11b20:	b	11cbc <avl_remove_impl@@Base+0x250>
   11b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b28:	ldr	r3, [r3, #4]
   11b2c:	cmp	r3, #0
   11b30:	beq	11b44 <avl_remove_impl@@Base+0xd8>
   11b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b38:	ldr	r3, [r3, #8]
   11b3c:	cmp	r3, #0
   11b40:	bne	11c2c <avl_remove_impl@@Base+0x1c0>
   11b44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b48:	ldr	r3, [r3, #4]
   11b4c:	cmp	r3, #0
   11b50:	beq	11b60 <avl_remove_impl@@Base+0xf4>
   11b54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b58:	ldr	r3, [r3, #4]
   11b5c:	b	11b68 <avl_remove_impl@@Base+0xfc>
   11b60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b64:	ldr	r3, [r3, #8]
   11b68:	str	r3, [fp, #-16]
   11b6c:	ldr	r3, [fp, #-16]
   11b70:	cmp	r3, #0
   11b74:	bne	11b8c <avl_remove_impl@@Base+0x120>
   11b78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b7c:	str	r3, [fp, #-16]
   11b80:	mov	r3, #0
   11b84:	str	r3, [fp, #-32]	; 0xffffffe0
   11b88:	b	11c10 <avl_remove_impl@@Base+0x1a4>
   11b8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b90:	ldr	r4, [r3]
   11b94:	ldr	r3, [fp, #-16]
   11b98:	ldr	r3, [r3]
   11b9c:	mov	r0, r3
   11ba0:	bl	10ccc <strlen@plt>
   11ba4:	mov	r3, r0
   11ba8:	add	r3, r3, #1
   11bac:	mov	r1, r3
   11bb0:	mov	r0, r4
   11bb4:	bl	10c84 <realloc@plt>
   11bb8:	mov	r2, r0
   11bbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bc0:	str	r2, [r3]
   11bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bc8:	ldr	r2, [r3]
   11bcc:	ldr	r3, [fp, #-16]
   11bd0:	ldr	r3, [r3]
   11bd4:	mov	r1, r3
   11bd8:	mov	r0, r2
   11bdc:	bl	10c90 <strcpy@plt>
   11be0:	ldr	r3, [fp, #-16]
   11be4:	ldr	r2, [r3, #4]
   11be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bec:	str	r2, [r3, #4]
   11bf0:	ldr	r3, [fp, #-16]
   11bf4:	ldr	r2, [r3, #8]
   11bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bfc:	str	r2, [r3, #8]
   11c00:	ldr	r3, [fp, #-16]
   11c04:	ldr	r2, [r3, #12]
   11c08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c0c:	str	r2, [r3, #12]
   11c10:	ldr	r3, [fp, #-16]
   11c14:	ldr	r3, [r3]
   11c18:	mov	r0, r3
   11c1c:	bl	10c6c <free@plt>
   11c20:	ldr	r0, [fp, #-16]
   11c24:	bl	10c6c <free@plt>
   11c28:	b	11cbc <avl_remove_impl@@Base+0x250>
   11c2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c30:	ldr	r3, [r3, #8]
   11c34:	mov	r0, r3
   11c38:	bl	119d4 <avl_no_valormin@@Base>
   11c3c:	str	r0, [fp, #-20]	; 0xffffffec
   11c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c44:	ldr	r4, [r3]
   11c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c4c:	ldr	r3, [r3]
   11c50:	mov	r0, r3
   11c54:	bl	10ccc <strlen@plt>
   11c58:	mov	r3, r0
   11c5c:	add	r3, r3, #1
   11c60:	mov	r1, r3
   11c64:	mov	r0, r4
   11c68:	bl	10c84 <realloc@plt>
   11c6c:	mov	r2, r0
   11c70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c74:	str	r2, [r3]
   11c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c7c:	ldr	r2, [r3]
   11c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c84:	ldr	r3, [r3]
   11c88:	mov	r1, r3
   11c8c:	mov	r0, r2
   11c90:	bl	10c90 <strcpy@plt>
   11c94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c98:	ldr	r2, [r3, #8]
   11c9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ca0:	ldr	r3, [r3]
   11ca4:	mov	r1, r3
   11ca8:	mov	r0, r2
   11cac:	bl	11a6c <avl_remove_impl@@Base>
   11cb0:	mov	r2, r0
   11cb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cb8:	str	r2, [r3, #8]
   11cbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cc0:	cmp	r3, #0
   11cc4:	bne	11cd0 <avl_remove_impl@@Base+0x264>
   11cc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ccc:	b	11dec <avl_remove_impl@@Base+0x380>
   11cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cd4:	ldr	r3, [r3, #4]
   11cd8:	mov	r0, r3
   11cdc:	bl	11384 <avl_altura@@Base>
   11ce0:	mov	r4, r0
   11ce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ce8:	ldr	r3, [r3, #8]
   11cec:	mov	r0, r3
   11cf0:	bl	11384 <avl_altura@@Base>
   11cf4:	mov	r3, r0
   11cf8:	mov	r1, r3
   11cfc:	mov	r0, r4
   11d00:	bl	113c0 <max@@Base>
   11d04:	mov	r3, r0
   11d08:	add	r2, r3, #1
   11d0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d10:	str	r2, [r3, #12]
   11d14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d18:	bl	11678 <calc_balanceamento@@Base>
   11d1c:	str	r0, [fp, #-24]	; 0xffffffe8
   11d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d24:	cmp	r3, #1
   11d28:	ble	11d84 <avl_remove_impl@@Base+0x318>
   11d2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d30:	ldr	r3, [r3, #8]
   11d34:	mov	r0, r3
   11d38:	bl	11678 <calc_balanceamento@@Base>
   11d3c:	mov	r3, r0
   11d40:	cmp	r3, #0
   11d44:	bge	11d74 <avl_remove_impl@@Base+0x308>
   11d48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d4c:	ldr	r3, [r3, #8]
   11d50:	mov	r0, r3
   11d54:	bl	114a0 <roda_direita@@Base>
   11d58:	mov	r2, r0
   11d5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d60:	str	r2, [r3, #8]
   11d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d68:	bl	1158c <roda_esquerda@@Base>
   11d6c:	mov	r3, r0
   11d70:	b	11dec <avl_remove_impl@@Base+0x380>
   11d74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d78:	bl	1158c <roda_esquerda@@Base>
   11d7c:	mov	r3, r0
   11d80:	b	11dec <avl_remove_impl@@Base+0x380>
   11d84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d88:	cmn	r3, #1
   11d8c:	bge	11de8 <avl_remove_impl@@Base+0x37c>
   11d90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d94:	ldr	r3, [r3, #4]
   11d98:	mov	r0, r3
   11d9c:	bl	11678 <calc_balanceamento@@Base>
   11da0:	mov	r3, r0
   11da4:	cmp	r3, #0
   11da8:	ble	11dd8 <avl_remove_impl@@Base+0x36c>
   11dac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11db0:	ldr	r3, [r3, #4]
   11db4:	mov	r0, r3
   11db8:	bl	1158c <roda_esquerda@@Base>
   11dbc:	mov	r2, r0
   11dc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11dc4:	str	r2, [r3, #4]
   11dc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dcc:	bl	114a0 <roda_direita@@Base>
   11dd0:	mov	r3, r0
   11dd4:	b	11dec <avl_remove_impl@@Base+0x380>
   11dd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ddc:	bl	114a0 <roda_direita@@Base>
   11de0:	mov	r3, r0
   11de4:	b	11dec <avl_remove_impl@@Base+0x380>
   11de8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11dec:	mov	r0, r3
   11df0:	sub	sp, fp, #8
   11df4:	ldr	r4, [sp]
   11df8:	ldr	fp, [sp, #4]
   11dfc:	add	sp, sp, #8
   11e00:	pop	{pc}		; (ldr pc, [sp], #4)

00011e04 <avl_preordem_impl@@Base>:
   11e04:	str	fp, [sp, #-8]!
   11e08:	str	lr, [sp, #4]
   11e0c:	add	fp, sp, #4
   11e10:	sub	sp, sp, #8
   11e14:	str	r0, [fp, #-8]
   11e18:	ldr	r3, [fp, #-8]
   11e1c:	cmp	r3, #0
   11e20:	beq	11e68 <avl_preordem_impl@@Base+0x64>
   11e24:	ldr	r3, [fp, #-8]
   11e28:	ldr	r1, [r3]
   11e2c:	ldr	r3, [fp, #-8]
   11e30:	ldr	r3, [r3, #16]
   11e34:	mov	r2, r3
   11e38:	movw	r0, #10504	; 0x2908
   11e3c:	movt	r0, #1
   11e40:	bl	10c54 <printf@plt>
   11e44:	ldr	r3, [fp, #-8]
   11e48:	ldr	r3, [r3, #4]
   11e4c:	mov	r0, r3
   11e50:	bl	11e04 <avl_preordem_impl@@Base>
   11e54:	ldr	r3, [fp, #-8]
   11e58:	ldr	r3, [r3, #8]
   11e5c:	mov	r0, r3
   11e60:	bl	11e04 <avl_preordem_impl@@Base>
   11e64:	b	11e6c <avl_preordem_impl@@Base+0x68>
   11e68:	nop	{0}
   11e6c:	sub	sp, fp, #4
   11e70:	ldr	fp, [sp]
   11e74:	add	sp, sp, #4
   11e78:	pop	{pc}		; (ldr pc, [sp], #4)

00011e7c <bst_nova@@Base>:
   11e7c:	str	fp, [sp, #-8]!
   11e80:	str	lr, [sp, #4]
   11e84:	add	fp, sp, #4
   11e88:	sub	sp, sp, #8
   11e8c:	mov	r0, #4
   11e90:	bl	10ca8 <malloc@plt>
   11e94:	mov	r3, r0
   11e98:	str	r3, [fp, #-8]
   11e9c:	ldr	r3, [fp, #-8]
   11ea0:	cmp	r3, #0
   11ea4:	bne	11eb0 <bst_nova@@Base+0x34>
   11ea8:	mov	r3, #0
   11eac:	b	11ec0 <bst_nova@@Base+0x44>
   11eb0:	ldr	r3, [fp, #-8]
   11eb4:	mov	r2, #0
   11eb8:	str	r2, [r3]
   11ebc:	ldr	r3, [fp, #-8]
   11ec0:	mov	r0, r3
   11ec4:	sub	sp, fp, #4
   11ec8:	ldr	fp, [sp]
   11ecc:	add	sp, sp, #4
   11ed0:	pop	{pc}		; (ldr pc, [sp], #4)

00011ed4 <bst_apaga@@Base>:
   11ed4:	str	fp, [sp, #-8]!
   11ed8:	str	lr, [sp, #4]
   11edc:	add	fp, sp, #4
   11ee0:	sub	sp, sp, #8
   11ee4:	str	r0, [fp, #-8]
   11ee8:	b	11f18 <bst_apaga@@Base+0x44>
   11eec:	ldr	r3, [fp, #-8]
   11ef0:	ldr	r2, [r3]
   11ef4:	ldr	r3, [fp, #-8]
   11ef8:	ldr	r3, [r3]
   11efc:	ldr	r3, [r3]
   11f00:	mov	r1, r3
   11f04:	mov	r0, r2
   11f08:	bl	12440 <bst_remove_impl@@Base>
   11f0c:	mov	r2, r0
   11f10:	ldr	r3, [fp, #-8]
   11f14:	str	r2, [r3]
   11f18:	ldr	r3, [fp, #-8]
   11f1c:	ldr	r3, [r3]
   11f20:	cmp	r3, #0
   11f24:	bne	11eec <bst_apaga@@Base+0x18>
   11f28:	ldr	r0, [fp, #-8]
   11f2c:	bl	10c6c <free@plt>
   11f30:	nop	{0}
   11f34:	sub	sp, fp, #4
   11f38:	ldr	fp, [sp]
   11f3c:	add	sp, sp, #4
   11f40:	pop	{pc}		; (ldr pc, [sp], #4)

00011f44 <bst_pesquisa@@Base>:
   11f44:	str	fp, [sp, #-8]!
   11f48:	str	lr, [sp, #4]
   11f4c:	add	fp, sp, #4
   11f50:	sub	sp, sp, #8
   11f54:	str	r0, [fp, #-8]
   11f58:	str	r1, [fp, #-12]
   11f5c:	ldr	r3, [fp, #-8]
   11f60:	cmp	r3, #0
   11f64:	beq	11f74 <bst_pesquisa@@Base+0x30>
   11f68:	ldr	r3, [fp, #-12]
   11f6c:	cmp	r3, #0
   11f70:	bne	11f7c <bst_pesquisa@@Base+0x38>
   11f74:	mov	r3, #0
   11f78:	b	11f94 <bst_pesquisa@@Base+0x50>
   11f7c:	ldr	r3, [fp, #-8]
   11f80:	ldr	r3, [r3]
   11f84:	ldr	r1, [fp, #-12]
   11f88:	mov	r0, r3
   11f8c:	bl	122b4 <bst_pesquisa_impl@@Base>
   11f90:	mov	r3, r0
   11f94:	mov	r0, r3
   11f98:	sub	sp, fp, #4
   11f9c:	ldr	fp, [sp]
   11fa0:	add	sp, sp, #4
   11fa4:	pop	{pc}		; (ldr pc, [sp], #4)

00011fa8 <bst_insere@@Base>:
   11fa8:	str	fp, [sp, #-8]!
   11fac:	str	lr, [sp, #4]
   11fb0:	add	fp, sp, #4
   11fb4:	sub	sp, sp, #8
   11fb8:	str	r0, [fp, #-8]
   11fbc:	str	r1, [fp, #-12]
   11fc0:	ldr	r3, [fp, #-8]
   11fc4:	cmp	r3, #0
   11fc8:	beq	11fd8 <bst_insere@@Base+0x30>
   11fcc:	ldr	r3, [fp, #-12]
   11fd0:	cmp	r3, #0
   11fd4:	bne	11fe0 <bst_insere@@Base+0x38>
   11fd8:	mvn	r3, #0
   11fdc:	b	12004 <bst_insere@@Base+0x5c>
   11fe0:	ldr	r3, [fp, #-8]
   11fe4:	ldr	r3, [r3]
   11fe8:	ldr	r1, [fp, #-12]
   11fec:	mov	r0, r3
   11ff0:	bl	12370 <bst_insere_impl@@Base>
   11ff4:	mov	r2, r0
   11ff8:	ldr	r3, [fp, #-8]
   11ffc:	str	r2, [r3]
   12000:	mov	r3, #0
   12004:	mov	r0, r3
   12008:	sub	sp, fp, #4
   1200c:	ldr	fp, [sp]
   12010:	add	sp, sp, #4
   12014:	pop	{pc}		; (ldr pc, [sp], #4)

00012018 <bst_remove@@Base>:
   12018:	str	fp, [sp, #-8]!
   1201c:	str	lr, [sp, #4]
   12020:	add	fp, sp, #4
   12024:	sub	sp, sp, #8
   12028:	str	r0, [fp, #-8]
   1202c:	str	r1, [fp, #-12]
   12030:	ldr	r3, [fp, #-8]
   12034:	cmp	r3, #0
   12038:	beq	12048 <bst_remove@@Base+0x30>
   1203c:	ldr	r3, [fp, #-12]
   12040:	cmp	r3, #0
   12044:	bne	12050 <bst_remove@@Base+0x38>
   12048:	mvn	r3, #0
   1204c:	b	12074 <bst_remove@@Base+0x5c>
   12050:	ldr	r3, [fp, #-8]
   12054:	ldr	r3, [r3]
   12058:	ldr	r1, [fp, #-12]
   1205c:	mov	r0, r3
   12060:	bl	12440 <bst_remove_impl@@Base>
   12064:	mov	r2, r0
   12068:	ldr	r3, [fp, #-8]
   1206c:	str	r2, [r3]
   12070:	mov	r3, #0
   12074:	mov	r0, r3
   12078:	sub	sp, fp, #4
   1207c:	ldr	fp, [sp]
   12080:	add	sp, sp, #4
   12084:	pop	{pc}		; (ldr pc, [sp], #4)

00012088 <bst_min@@Base>:
   12088:	str	fp, [sp, #-8]!
   1208c:	str	lr, [sp, #4]
   12090:	add	fp, sp, #4
   12094:	sub	sp, sp, #8
   12098:	str	r0, [fp, #-8]
   1209c:	ldr	r3, [fp, #-8]
   120a0:	cmp	r3, #0
   120a4:	bne	120b0 <bst_min@@Base+0x28>
   120a8:	mov	r3, #0
   120ac:	b	120c8 <bst_min@@Base+0x40>
   120b0:	ldr	r3, [fp, #-8]
   120b4:	ldr	r3, [r3]
   120b8:	mov	r0, r3
   120bc:	bl	1221c <bst_no_valormin@@Base>
   120c0:	mov	r3, r0
   120c4:	ldr	r3, [r3]
   120c8:	mov	r0, r3
   120cc:	sub	sp, fp, #4
   120d0:	ldr	fp, [sp]
   120d4:	add	sp, sp, #4
   120d8:	pop	{pc}		; (ldr pc, [sp], #4)

000120dc <bst_max@@Base>:
   120dc:	str	fp, [sp, #-8]!
   120e0:	str	lr, [sp, #4]
   120e4:	add	fp, sp, #4
   120e8:	sub	sp, sp, #8
   120ec:	str	r0, [fp, #-8]
   120f0:	ldr	r3, [fp, #-8]
   120f4:	cmp	r3, #0
   120f8:	bne	12104 <bst_max@@Base+0x28>
   120fc:	mov	r3, #0
   12100:	b	1211c <bst_max@@Base+0x40>
   12104:	ldr	r3, [fp, #-8]
   12108:	ldr	r3, [r3]
   1210c:	mov	r0, r3
   12110:	bl	12268 <bst_no_valormax@@Base>
   12114:	mov	r3, r0
   12118:	ldr	r3, [r3]
   1211c:	mov	r0, r3
   12120:	sub	sp, fp, #4
   12124:	ldr	fp, [sp]
   12128:	add	sp, sp, #4
   1212c:	pop	{pc}		; (ldr pc, [sp], #4)

00012130 <bst_imprime@@Base>:
   12130:	str	fp, [sp, #-8]!
   12134:	str	lr, [sp, #4]
   12138:	add	fp, sp, #4
   1213c:	sub	sp, sp, #8
   12140:	str	r0, [fp, #-8]
   12144:	ldr	r3, [fp, #-8]
   12148:	cmp	r3, #0
   1214c:	beq	12178 <bst_imprime@@Base+0x48>
   12150:	movw	r0, #10512	; 0x2910
   12154:	movt	r0, #1
   12158:	bl	10c54 <printf@plt>
   1215c:	ldr	r3, [fp, #-8]
   12160:	ldr	r3, [r3]
   12164:	mov	r0, r3
   12168:	bl	1277c <bst_preordem_impl@@Base>
   1216c:	mov	r0, #10
   12170:	bl	10cd8 <putchar@plt>
   12174:	b	1217c <bst_imprime@@Base+0x4c>
   12178:	nop	{0}
   1217c:	sub	sp, fp, #4
   12180:	ldr	fp, [sp]
   12184:	add	sp, sp, #4
   12188:	pop	{pc}		; (ldr pc, [sp], #4)

0001218c <bst_novo_no@@Base>:
   1218c:	str	fp, [sp, #-8]!
   12190:	str	lr, [sp, #4]
   12194:	add	fp, sp, #4
   12198:	sub	sp, sp, #16
   1219c:	str	r0, [fp, #-16]
   121a0:	mov	r0, #12
   121a4:	bl	10ca8 <malloc@plt>
   121a8:	mov	r3, r0
   121ac:	str	r3, [fp, #-8]
   121b0:	ldr	r0, [fp, #-16]
   121b4:	bl	10ccc <strlen@plt>
   121b8:	mov	r3, r0
   121bc:	add	r3, r3, #1
   121c0:	mov	r0, r3
   121c4:	bl	10ca8 <malloc@plt>
   121c8:	mov	r3, r0
   121cc:	mov	r2, r3
   121d0:	ldr	r3, [fp, #-8]
   121d4:	str	r2, [r3]
   121d8:	ldr	r3, [fp, #-8]
   121dc:	ldr	r3, [r3]
   121e0:	ldr	r1, [fp, #-16]
   121e4:	mov	r0, r3
   121e8:	bl	10c90 <strcpy@plt>
   121ec:	ldr	r3, [fp, #-8]
   121f0:	mov	r2, #0
   121f4:	str	r2, [r3, #4]
   121f8:	ldr	r3, [fp, #-8]
   121fc:	mov	r2, #0
   12200:	str	r2, [r3, #8]
   12204:	ldr	r3, [fp, #-8]
   12208:	mov	r0, r3
   1220c:	sub	sp, fp, #4
   12210:	ldr	fp, [sp]
   12214:	add	sp, sp, #4
   12218:	pop	{pc}		; (ldr pc, [sp], #4)

0001221c <bst_no_valormin@@Base>:
   1221c:	push	{fp}		; (str fp, [sp, #-4]!)
   12220:	add	fp, sp, #0
   12224:	sub	sp, sp, #20
   12228:	str	r0, [fp, #-16]
   1222c:	ldr	r3, [fp, #-16]
   12230:	str	r3, [fp, #-8]
   12234:	b	12244 <bst_no_valormin@@Base+0x28>
   12238:	ldr	r3, [fp, #-8]
   1223c:	ldr	r3, [r3, #4]
   12240:	str	r3, [fp, #-8]
   12244:	ldr	r3, [fp, #-8]
   12248:	ldr	r3, [r3, #4]
   1224c:	cmp	r3, #0
   12250:	bne	12238 <bst_no_valormin@@Base+0x1c>
   12254:	ldr	r3, [fp, #-8]
   12258:	mov	r0, r3
   1225c:	add	sp, fp, #0
   12260:	pop	{fp}		; (ldr fp, [sp], #4)
   12264:	bx	lr

00012268 <bst_no_valormax@@Base>:
   12268:	push	{fp}		; (str fp, [sp, #-4]!)
   1226c:	add	fp, sp, #0
   12270:	sub	sp, sp, #20
   12274:	str	r0, [fp, #-16]
   12278:	ldr	r3, [fp, #-16]
   1227c:	str	r3, [fp, #-8]
   12280:	b	12290 <bst_no_valormax@@Base+0x28>
   12284:	ldr	r3, [fp, #-8]
   12288:	ldr	r3, [r3, #8]
   1228c:	str	r3, [fp, #-8]
   12290:	ldr	r3, [fp, #-8]
   12294:	ldr	r3, [r3, #8]
   12298:	cmp	r3, #0
   1229c:	bne	12284 <bst_no_valormax@@Base+0x1c>
   122a0:	ldr	r3, [fp, #-8]
   122a4:	mov	r0, r3
   122a8:	add	sp, fp, #0
   122ac:	pop	{fp}		; (ldr fp, [sp], #4)
   122b0:	bx	lr

000122b4 <bst_pesquisa_impl@@Base>:
   122b4:	str	fp, [sp, #-8]!
   122b8:	str	lr, [sp, #4]
   122bc:	add	fp, sp, #4
   122c0:	sub	sp, sp, #8
   122c4:	str	r0, [fp, #-8]
   122c8:	str	r1, [fp, #-12]
   122cc:	ldr	r3, [fp, #-8]
   122d0:	cmp	r3, #0
   122d4:	bne	122e0 <bst_pesquisa_impl@@Base+0x2c>
   122d8:	mov	r3, #0
   122dc:	b	1235c <bst_pesquisa_impl@@Base+0xa8>
   122e0:	ldr	r3, [fp, #-8]
   122e4:	ldr	r3, [r3]
   122e8:	mov	r1, r3
   122ec:	ldr	r0, [fp, #-12]
   122f0:	bl	10c48 <strcmp@plt>
   122f4:	mov	r3, r0
   122f8:	cmp	r3, #0
   122fc:	bge	1231c <bst_pesquisa_impl@@Base+0x68>
   12300:	ldr	r3, [fp, #-8]
   12304:	ldr	r3, [r3, #4]
   12308:	ldr	r1, [fp, #-12]
   1230c:	mov	r0, r3
   12310:	bl	122b4 <bst_pesquisa_impl@@Base>
   12314:	mov	r3, r0
   12318:	b	1235c <bst_pesquisa_impl@@Base+0xa8>
   1231c:	ldr	r3, [fp, #-8]
   12320:	ldr	r3, [r3]
   12324:	mov	r1, r3
   12328:	ldr	r0, [fp, #-12]
   1232c:	bl	10c48 <strcmp@plt>
   12330:	mov	r3, r0
   12334:	cmp	r3, #0
   12338:	ble	12358 <bst_pesquisa_impl@@Base+0xa4>
   1233c:	ldr	r3, [fp, #-8]
   12340:	ldr	r3, [r3, #8]
   12344:	ldr	r1, [fp, #-12]
   12348:	mov	r0, r3
   1234c:	bl	122b4 <bst_pesquisa_impl@@Base>
   12350:	mov	r3, r0
   12354:	b	1235c <bst_pesquisa_impl@@Base+0xa8>
   12358:	ldr	r3, [fp, #-8]
   1235c:	mov	r0, r3
   12360:	sub	sp, fp, #4
   12364:	ldr	fp, [sp]
   12368:	add	sp, sp, #4
   1236c:	pop	{pc}		; (ldr pc, [sp], #4)

00012370 <bst_insere_impl@@Base>:
   12370:	str	fp, [sp, #-8]!
   12374:	str	lr, [sp, #4]
   12378:	add	fp, sp, #4
   1237c:	sub	sp, sp, #8
   12380:	str	r0, [fp, #-8]
   12384:	str	r1, [fp, #-12]
   12388:	ldr	r3, [fp, #-8]
   1238c:	cmp	r3, #0
   12390:	bne	123a4 <bst_insere_impl@@Base+0x34>
   12394:	ldr	r0, [fp, #-12]
   12398:	bl	1218c <bst_novo_no@@Base>
   1239c:	mov	r3, r0
   123a0:	b	1242c <bst_insere_impl@@Base+0xbc>
   123a4:	ldr	r3, [fp, #-8]
   123a8:	ldr	r3, [r3]
   123ac:	mov	r1, r3
   123b0:	ldr	r0, [fp, #-12]
   123b4:	bl	10c48 <strcmp@plt>
   123b8:	mov	r3, r0
   123bc:	cmp	r3, #0
   123c0:	bge	123e8 <bst_insere_impl@@Base+0x78>
   123c4:	ldr	r3, [fp, #-8]
   123c8:	ldr	r3, [r3, #4]
   123cc:	ldr	r1, [fp, #-12]
   123d0:	mov	r0, r3
   123d4:	bl	12370 <bst_insere_impl@@Base>
   123d8:	mov	r2, r0
   123dc:	ldr	r3, [fp, #-8]
   123e0:	str	r2, [r3, #4]
   123e4:	b	12428 <bst_insere_impl@@Base+0xb8>
   123e8:	ldr	r3, [fp, #-8]
   123ec:	ldr	r3, [r3]
   123f0:	mov	r1, r3
   123f4:	ldr	r0, [fp, #-12]
   123f8:	bl	10c48 <strcmp@plt>
   123fc:	mov	r3, r0
   12400:	cmp	r3, #0
   12404:	ble	12428 <bst_insere_impl@@Base+0xb8>
   12408:	ldr	r3, [fp, #-8]
   1240c:	ldr	r3, [r3, #8]
   12410:	ldr	r1, [fp, #-12]
   12414:	mov	r0, r3
   12418:	bl	12370 <bst_insere_impl@@Base>
   1241c:	mov	r2, r0
   12420:	ldr	r3, [fp, #-8]
   12424:	str	r2, [r3, #8]
   12428:	ldr	r3, [fp, #-8]
   1242c:	mov	r0, r3
   12430:	sub	sp, fp, #4
   12434:	ldr	fp, [sp]
   12438:	add	sp, sp, #4
   1243c:	pop	{pc}		; (ldr pc, [sp], #4)

00012440 <bst_remove_impl@@Base>:
   12440:	str	r4, [sp, #-12]!
   12444:	str	fp, [sp, #4]
   12448:	str	lr, [sp, #8]
   1244c:	add	fp, sp, #8
   12450:	sub	sp, sp, #20
   12454:	str	r0, [fp, #-24]	; 0xffffffe8
   12458:	str	r1, [fp, #-28]	; 0xffffffe4
   1245c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12460:	cmp	r3, #0
   12464:	bne	12470 <bst_remove_impl@@Base+0x30>
   12468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1246c:	b	12684 <bst_remove_impl@@Base+0x244>
   12470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12474:	ldr	r3, [r3]
   12478:	mov	r1, r3
   1247c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12480:	bl	10c48 <strcmp@plt>
   12484:	mov	r3, r0
   12488:	cmp	r3, #0
   1248c:	bge	124b4 <bst_remove_impl@@Base+0x74>
   12490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12494:	ldr	r3, [r3, #4]
   12498:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1249c:	mov	r0, r3
   124a0:	bl	12440 <bst_remove_impl@@Base>
   124a4:	mov	r2, r0
   124a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124ac:	str	r2, [r3, #4]
   124b0:	b	12680 <bst_remove_impl@@Base+0x240>
   124b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124b8:	ldr	r3, [r3]
   124bc:	mov	r1, r3
   124c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   124c4:	bl	10c48 <strcmp@plt>
   124c8:	mov	r3, r0
   124cc:	cmp	r3, #0
   124d0:	ble	124f8 <bst_remove_impl@@Base+0xb8>
   124d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124d8:	ldr	r3, [r3, #8]
   124dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   124e0:	mov	r0, r3
   124e4:	bl	12440 <bst_remove_impl@@Base>
   124e8:	mov	r2, r0
   124ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124f0:	str	r2, [r3, #8]
   124f4:	b	12680 <bst_remove_impl@@Base+0x240>
   124f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124fc:	ldr	r3, [r3, #4]
   12500:	cmp	r3, #0
   12504:	beq	12518 <bst_remove_impl@@Base+0xd8>
   12508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1250c:	ldr	r3, [r3, #8]
   12510:	cmp	r3, #0
   12514:	bne	125f0 <bst_remove_impl@@Base+0x1b0>
   12518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1251c:	ldr	r3, [r3, #4]
   12520:	cmp	r3, #0
   12524:	beq	12534 <bst_remove_impl@@Base+0xf4>
   12528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1252c:	ldr	r3, [r3, #4]
   12530:	b	1253c <bst_remove_impl@@Base+0xfc>
   12534:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12538:	ldr	r3, [r3, #8]
   1253c:	str	r3, [fp, #-16]
   12540:	ldr	r3, [fp, #-16]
   12544:	cmp	r3, #0
   12548:	bne	12560 <bst_remove_impl@@Base+0x120>
   1254c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12550:	str	r3, [fp, #-16]
   12554:	mov	r3, #0
   12558:	str	r3, [fp, #-24]	; 0xffffffe8
   1255c:	b	125d4 <bst_remove_impl@@Base+0x194>
   12560:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12564:	ldr	r4, [r3]
   12568:	ldr	r3, [fp, #-16]
   1256c:	ldr	r3, [r3]
   12570:	mov	r0, r3
   12574:	bl	10ccc <strlen@plt>
   12578:	mov	r3, r0
   1257c:	add	r3, r3, #1
   12580:	mov	r1, r3
   12584:	mov	r0, r4
   12588:	bl	10c84 <realloc@plt>
   1258c:	mov	r2, r0
   12590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12594:	str	r2, [r3]
   12598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1259c:	ldr	r2, [r3]
   125a0:	ldr	r3, [fp, #-16]
   125a4:	ldr	r3, [r3]
   125a8:	mov	r1, r3
   125ac:	mov	r0, r2
   125b0:	bl	10c90 <strcpy@plt>
   125b4:	ldr	r3, [fp, #-16]
   125b8:	ldr	r2, [r3, #4]
   125bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125c0:	str	r2, [r3, #4]
   125c4:	ldr	r3, [fp, #-16]
   125c8:	ldr	r2, [r3, #8]
   125cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125d0:	str	r2, [r3, #8]
   125d4:	ldr	r3, [fp, #-16]
   125d8:	ldr	r3, [r3]
   125dc:	mov	r0, r3
   125e0:	bl	10c6c <free@plt>
   125e4:	ldr	r0, [fp, #-16]
   125e8:	bl	10c6c <free@plt>
   125ec:	b	12680 <bst_remove_impl@@Base+0x240>
   125f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125f4:	ldr	r3, [r3, #8]
   125f8:	mov	r0, r3
   125fc:	bl	1221c <bst_no_valormin@@Base>
   12600:	str	r0, [fp, #-20]	; 0xffffffec
   12604:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12608:	ldr	r4, [r3]
   1260c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12610:	ldr	r3, [r3]
   12614:	mov	r0, r3
   12618:	bl	10ccc <strlen@plt>
   1261c:	mov	r3, r0
   12620:	add	r3, r3, #1
   12624:	mov	r1, r3
   12628:	mov	r0, r4
   1262c:	bl	10c84 <realloc@plt>
   12630:	mov	r2, r0
   12634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12638:	str	r2, [r3]
   1263c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12640:	ldr	r2, [r3]
   12644:	ldr	r3, [fp, #-20]	; 0xffffffec
   12648:	ldr	r3, [r3]
   1264c:	mov	r1, r3
   12650:	mov	r0, r2
   12654:	bl	10c90 <strcpy@plt>
   12658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1265c:	ldr	r2, [r3, #8]
   12660:	ldr	r3, [fp, #-20]	; 0xffffffec
   12664:	ldr	r3, [r3]
   12668:	mov	r1, r3
   1266c:	mov	r0, r2
   12670:	bl	12440 <bst_remove_impl@@Base>
   12674:	mov	r2, r0
   12678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1267c:	str	r2, [r3, #8]
   12680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12684:	mov	r0, r3
   12688:	sub	sp, fp, #8
   1268c:	ldr	r4, [sp]
   12690:	ldr	fp, [sp, #4]
   12694:	add	sp, sp, #8
   12698:	pop	{pc}		; (ldr pc, [sp], #4)

0001269c <bst_altura@@Base>:
   1269c:	str	fp, [sp, #-8]!
   126a0:	str	lr, [sp, #4]
   126a4:	add	fp, sp, #4
   126a8:	sub	sp, sp, #16
   126ac:	str	r0, [fp, #-16]
   126b0:	mov	r3, #0
   126b4:	str	r3, [fp, #-8]
   126b8:	mov	r3, #0
   126bc:	str	r3, [fp, #-12]
   126c0:	ldr	r3, [fp, #-16]
   126c4:	cmp	r3, #0
   126c8:	bne	126d4 <bst_altura@@Base+0x38>
   126cc:	mvn	r3, #0
   126d0:	b	12768 <bst_altura@@Base+0xcc>
   126d4:	ldr	r3, [fp, #-16]
   126d8:	ldr	r3, [r3, #8]
   126dc:	cmp	r3, #0
   126e0:	bne	126fc <bst_altura@@Base+0x60>
   126e4:	ldr	r3, [fp, #-16]
   126e8:	ldr	r3, [r3, #4]
   126ec:	cmp	r3, #0
   126f0:	bne	126fc <bst_altura@@Base+0x60>
   126f4:	mov	r3, #0
   126f8:	b	12768 <bst_altura@@Base+0xcc>
   126fc:	ldr	r3, [fp, #-16]
   12700:	ldr	r3, [r3, #4]
   12704:	mov	r0, r3
   12708:	bl	1269c <bst_altura@@Base>
   1270c:	str	r0, [fp, #-8]
   12710:	ldr	r3, [fp, #-16]
   12714:	ldr	r3, [r3, #8]
   12718:	mov	r0, r3
   1271c:	bl	1269c <bst_altura@@Base>
   12720:	str	r0, [fp, #-12]
   12724:	ldr	r2, [fp, #-8]
   12728:	ldr	r3, [fp, #-12]
   1272c:	cmp	r2, r3
   12730:	ble	12750 <bst_altura@@Base+0xb4>
   12734:	ldr	r3, [fp, #-16]
   12738:	ldr	r3, [r3, #4]
   1273c:	mov	r0, r3
   12740:	bl	1269c <bst_altura@@Base>
   12744:	mov	r3, r0
   12748:	add	r3, r3, #1
   1274c:	b	12768 <bst_altura@@Base+0xcc>
   12750:	ldr	r3, [fp, #-16]
   12754:	ldr	r3, [r3, #8]
   12758:	mov	r0, r3
   1275c:	bl	1269c <bst_altura@@Base>
   12760:	mov	r3, r0
   12764:	add	r3, r3, #1
   12768:	mov	r0, r3
   1276c:	sub	sp, fp, #4
   12770:	ldr	fp, [sp]
   12774:	add	sp, sp, #4
   12778:	pop	{pc}		; (ldr pc, [sp], #4)

0001277c <bst_preordem_impl@@Base>:
   1277c:	str	fp, [sp, #-8]!
   12780:	str	lr, [sp, #4]
   12784:	add	fp, sp, #4
   12788:	sub	sp, sp, #8
   1278c:	str	r0, [fp, #-8]
   12790:	ldr	r3, [fp, #-8]
   12794:	cmp	r3, #0
   12798:	beq	127dc <bst_preordem_impl@@Base+0x60>
   1279c:	ldr	r3, [fp, #-8]
   127a0:	ldr	r3, [r3]
   127a4:	mov	r1, r3
   127a8:	movw	r0, #10524	; 0x291c
   127ac:	movt	r0, #1
   127b0:	bl	10c54 <printf@plt>
   127b4:	ldr	r3, [fp, #-8]
   127b8:	ldr	r3, [r3, #4]
   127bc:	mov	r0, r3
   127c0:	bl	1277c <bst_preordem_impl@@Base>
   127c4:	ldr	r3, [fp, #-8]
   127c8:	ldr	r3, [r3, #8]
   127cc:	mov	r0, r3
   127d0:	bl	1277c <bst_preordem_impl@@Base>
   127d4:	nop	{0}
   127d8:	b	127e0 <bst_preordem_impl@@Base+0x64>
   127dc:	nop	{0}
   127e0:	sub	sp, fp, #4
   127e4:	ldr	fp, [sp]
   127e8:	add	sp, sp, #4
   127ec:	pop	{pc}		; (ldr pc, [sp], #4)

000127f0 <__libc_csu_init@@Base>:
   127f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127f4:	mov	r7, r0
   127f8:	ldr	r6, [pc, #72]	; 12848 <__libc_csu_init@@Base+0x58>
   127fc:	ldr	r5, [pc, #72]	; 1284c <__libc_csu_init@@Base+0x5c>
   12800:	add	r6, pc, r6
   12804:	add	r5, pc, r5
   12808:	sub	r6, r6, r5
   1280c:	mov	r8, r1
   12810:	mov	r9, r2
   12814:	bl	10c28 <strcmp@plt-0x20>
   12818:	asrs	r6, r6, #2
   1281c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12820:	mov	r4, #0
   12824:	add	r4, r4, #1
   12828:	ldr	r3, [r5], #4
   1282c:	mov	r2, r9
   12830:	mov	r1, r8
   12834:	mov	r0, r7
   12838:	blx	r3
   1283c:	cmp	r6, r4
   12840:	bne	12824 <__libc_csu_init@@Base+0x34>
   12844:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12848:	andeq	r0, r1, ip, lsl #14
   1284c:	andeq	r0, r1, r4, lsl #14

00012850 <__libc_csu_fini@@Base>:
   12850:	bx	lr

Disassembly of section .fini:

00012854 <.fini>:
   12854:	push	{r3, lr}
   12858:	pop	{r3, pc}
