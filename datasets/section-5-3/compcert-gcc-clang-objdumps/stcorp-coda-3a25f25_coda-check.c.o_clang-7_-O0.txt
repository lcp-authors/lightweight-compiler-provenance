
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-check.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_product_check>:
       0:	push	{r4, r5, fp, lr}
       4:	add	fp, sp, #8
       8:	sub	sp, sp, #928	; 0x3a0
       c:	str	r0, [fp, #-16]
      10:	str	r1, [fp, #-20]	; 0xffffffec
      14:	str	r2, [fp, #-24]	; 0xffffffe8
      18:	str	r3, [fp, #-28]	; 0xffffffe4
      1c:	mov	r0, #0
      20:	str	r0, [fp, #-32]	; 0xffffffe0
      24:	str	r0, [sp, #372]	; 0x174
      28:	str	r0, [sp, #368]	; 0x170
      2c:	str	r0, [sp, #364]	; 0x16c
      30:	str	r0, [sp, #360]	; 0x168
      34:	ldr	r1, [fp, #-16]
      38:	add	r0, sp, #384	; 0x180
      3c:	bl	0 <coda_cursor_set_product>
      40:	cmp	r0, #0
      44:	beq	54 <coda_product_check+0x54>
      48:	mvn	r0, #0
      4c:	str	r0, [fp, #-12]
      50:	b	314 <coda_product_check+0x314>
      54:	ldr	r0, [fp, #-16]
      58:	add	r1, sp, #380	; 0x17c
      5c:	bl	0 <coda_get_product_format>
      60:	cmp	r0, #0
      64:	beq	74 <coda_product_check+0x74>
      68:	mvn	r0, #0
      6c:	str	r0, [fp, #-12]
      70:	b	314 <coda_product_check+0x314>
      74:	ldr	r0, [sp, #380]	; 0x17c
      78:	cmp	r0, #0
      7c:	beq	d8 <coda_product_check+0xd8>
      80:	ldr	r0, [sp, #380]	; 0x17c
      84:	cmp	r0, #1
      88:	beq	d8 <coda_product_check+0xd8>
      8c:	ldr	r0, [sp, #380]	; 0x17c
      90:	cmp	r0, #2
      94:	beq	d8 <coda_product_check+0xd8>
      98:	ldr	r0, [fp, #-16]
      9c:	ldr	r0, [r0, #24]
      a0:	movw	r1, #0
      a4:	cmp	r0, r1
      a8:	beq	d4 <coda_product_check+0xd4>
      ac:	ldr	r0, [fp, #-16]
      b0:	ldr	r0, [r0, #24]
      b4:	ldr	r0, [r0, #28]
      b8:	movw	r1, #0
      bc:	cmp	r0, r1
      c0:	beq	d4 <coda_product_check+0xd4>
      c4:	ldr	r0, [fp, #-16]
      c8:	ldr	r0, [r0, #24]
      cc:	ldr	r0, [r0, #28]
      d0:	str	r0, [fp, #-32]	; 0xffffffe0
      d4:	b	d8 <coda_product_check+0xd8>
      d8:	ldr	r0, [sp, #380]	; 0x17c
      dc:	cmp	r0, #0
      e0:	movw	r0, #1
      e4:	str	r0, [sp, #48]	; 0x30
      e8:	beq	100 <coda_product_check+0x100>
      ec:	ldr	r0, [sp, #380]	; 0x17c
      f0:	cmp	r0, #1
      f4:	movw	r0, #0
      f8:	moveq	r0, #1
      fc:	str	r0, [sp, #48]	; 0x30
     100:	ldr	r0, [sp, #48]	; 0x30
     104:	and	r0, r0, #1
     108:	str	r0, [sp, #356]	; 0x164
     10c:	ldr	r0, [sp, #356]	; 0x164
     110:	cmp	r0, #0
     114:	beq	154 <coda_product_check+0x154>
     118:	ldr	r0, [fp, #-16]
     11c:	add	r1, sp, #368	; 0x170
     120:	bl	0 <coda_get_product_file_size>
     124:	cmp	r0, #0
     128:	beq	138 <coda_product_check+0x138>
     12c:	mvn	r0, #0
     130:	str	r0, [fp, #-12]
     134:	b	314 <coda_product_check+0x314>
     138:	ldr	r0, [sp, #368]	; 0x170
     13c:	ldr	r1, [sp, #372]	; 0x174
     140:	lsl	r1, r1, #3
     144:	orr	r1, r1, r0, lsr #29
     148:	lsl	r0, r0, #3
     14c:	str	r0, [sp, #368]	; 0x170
     150:	str	r1, [sp, #372]	; 0x174
     154:	ldr	r0, [sp, #356]	; 0x164
     158:	cmp	r0, #0
     15c:	beq	1c0 <coda_product_check+0x1c0>
     160:	ldr	r0, [fp, #-20]	; 0xffffffec
     164:	cmp	r0, #0
     168:	bne	1c0 <coda_product_check+0x1c0>
     16c:	bl	0 <coda_get_option_use_fast_size_expressions>
     170:	str	r0, [sp, #352]	; 0x160
     174:	movw	r0, #0
     178:	bl	0 <coda_set_option_use_fast_size_expressions>
     17c:	add	lr, sp, #384	; 0x180
     180:	str	r0, [sp, #44]	; 0x2c
     184:	mov	r0, lr
     188:	add	r1, sp, #360	; 0x168
     18c:	bl	0 <coda_cursor_get_bit_size>
     190:	cmp	r0, #0
     194:	beq	1b0 <coda_product_check+0x1b0>
     198:	ldr	r0, [sp, #352]	; 0x160
     19c:	bl	0 <coda_set_option_use_fast_size_expressions>
     1a0:	mvn	lr, #0
     1a4:	str	lr, [fp, #-12]
     1a8:	str	r0, [sp, #40]	; 0x28
     1ac:	b	314 <coda_product_check+0x314>
     1b0:	ldr	r0, [sp, #352]	; 0x160
     1b4:	bl	0 <coda_set_option_use_fast_size_expressions>
     1b8:	str	r0, [sp, #36]	; 0x24
     1bc:	b	21c <coda_product_check+0x21c>
     1c0:	ldr	r2, [fp, #-20]	; 0xffffffec
     1c4:	ldr	r3, [sp, #356]	; 0x164
     1c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
     1cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     1d0:	add	ip, sp, #384	; 0x180
     1d4:	str	r0, [sp, #32]
     1d8:	mov	r0, ip
     1dc:	sub	ip, fp, #32
     1e0:	str	r1, [sp, #28]
     1e4:	mov	r1, ip
     1e8:	add	ip, sp, #360	; 0x168
     1ec:	str	ip, [sp]
     1f0:	ldr	ip, [sp, #32]
     1f4:	str	ip, [sp, #4]
     1f8:	ldr	lr, [sp, #28]
     1fc:	str	lr, [sp, #8]
     200:	bl	320 <check_data>
     204:	cmp	r0, #0
     208:	beq	218 <coda_product_check+0x218>
     20c:	mvn	r0, #0
     210:	str	r0, [fp, #-12]
     214:	b	314 <coda_product_check+0x314>
     218:	b	21c <coda_product_check+0x21c>
     21c:	ldr	r0, [sp, #356]	; 0x164
     220:	cmp	r0, #0
     224:	beq	30c <coda_product_check+0x30c>
     228:	ldr	r0, [sp, #368]	; 0x170
     22c:	ldr	r1, [sp, #372]	; 0x174
     230:	ldr	r2, [sp, #360]	; 0x168
     234:	ldr	r3, [sp, #364]	; 0x16c
     238:	eor	r1, r1, r3
     23c:	eor	r0, r0, r2
     240:	orr	r0, r0, r1
     244:	cmp	r0, #0
     248:	beq	30c <coda_product_check+0x30c>
     24c:	b	250 <coda_product_check+0x250>
     250:	ldr	r0, [sp, #368]	; 0x170
     254:	ldr	r1, [sp, #372]	; 0x174
     258:	lsr	r0, r0, #3
     25c:	orr	r0, r0, r1, lsl #29
     260:	asr	r1, r1, #3
     264:	add	r2, sp, #75	; 0x4b
     268:	bl	0 <coda_str64>
     26c:	ldr	r0, [sp, #360]	; 0x168
     270:	ldr	r1, [sp, #364]	; 0x16c
     274:	lsr	r0, r0, #3
     278:	orr	r0, r0, r1, lsl #29
     27c:	asr	r1, r1, #3
     280:	add	r2, sp, #54	; 0x36
     284:	bl	0 <coda_str64>
     288:	ldrb	r0, [sp, #360]	; 0x168
     28c:	tst	r0, #7
     290:	beq	2d0 <coda_product_check+0x2d0>
     294:	b	298 <coda_product_check+0x298>
     298:	add	r0, sp, #96	; 0x60
     29c:	add	r2, sp, #75	; 0x4b
     2a0:	add	r3, sp, #54	; 0x36
     2a4:	ldr	r1, [sp, #360]	; 0x168
     2a8:	and	r1, r1, #7
     2ac:	movw	ip, #0
     2b0:	movt	ip, #0
     2b4:	str	r1, [sp, #24]
     2b8:	mov	r1, ip
     2bc:	ldr	ip, [sp, #24]
     2c0:	str	ip, [sp]
     2c4:	bl	0 <sprintf>
     2c8:	str	r0, [sp, #20]
     2cc:	b	2ec <coda_product_check+0x2ec>
     2d0:	add	r3, sp, #54	; 0x36
     2d4:	add	r2, sp, #75	; 0x4b
     2d8:	add	r0, sp, #96	; 0x60
     2dc:	movw	r1, #0
     2e0:	movt	r1, #0
     2e4:	bl	0 <sprintf>
     2e8:	str	r0, [sp, #16]
     2ec:	add	r1, sp, #96	; 0x60
     2f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
     2f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
     2f8:	movw	r3, #0
     2fc:	str	r0, [sp, #12]
     300:	mov	r0, r3
     304:	ldr	r3, [sp, #12]
     308:	blx	r3
     30c:	movw	r0, #0
     310:	str	r0, [fp, #-12]
     314:	ldr	r0, [fp, #-12]
     318:	sub	sp, fp, #8
     31c:	pop	{r4, r5, fp, pc}

00000320 <check_data>:
     320:	push	{r4, sl, fp, lr}
     324:	add	fp, sp, #8
     328:	sub	sp, sp, #680	; 0x2a8
     32c:	sub	sp, sp, #1024	; 0x400
     330:	ldr	ip, [fp, #16]
     334:	ldr	lr, [fp, #12]
     338:	ldr	r4, [fp, #8]
     33c:	str	r0, [fp, #-16]
     340:	str	r1, [fp, #-20]	; 0xffffffec
     344:	str	r2, [fp, #-24]	; 0xffffffe8
     348:	str	r3, [fp, #-28]	; 0xffffffe4
     34c:	movw	r0, #0
     350:	str	r0, [fp, #-36]	; 0xffffffdc
     354:	ldr	r1, [fp, #8]
     358:	cmp	r1, r0
     35c:	str	r4, [sp, #328]	; 0x148
     360:	str	lr, [sp, #324]	; 0x144
     364:	str	ip, [sp, #320]	; 0x140
     368:	beq	370 <check_data+0x50>
     36c:	b	390 <check_data+0x70>
     370:	movw	r0, #0
     374:	movt	r0, #0
     378:	movw	r1, #0
     37c:	movt	r1, #0
     380:	movw	r2, #306	; 0x132
     384:	movw	r3, #0
     388:	movt	r3, #0
     38c:	bl	0 <__assert_fail>
     390:	ldr	r0, [fp, #-16]
     394:	sub	r1, fp, #44	; 0x2c
     398:	bl	0 <coda_cursor_get_type>
     39c:	cmp	r0, #0
     3a0:	beq	3b0 <check_data+0x90>
     3a4:	mvn	r0, #0
     3a8:	str	r0, [fp, #-12]
     3ac:	b	1a54 <check_data+0x1734>
     3b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
     3b4:	sub	r1, fp, #32
     3b8:	bl	0 <coda_type_get_class>
     3bc:	cmp	r0, #0
     3c0:	beq	3d0 <check_data+0xb0>
     3c4:	mvn	r0, #0
     3c8:	str	r0, [fp, #-12]
     3cc:	b	1a54 <check_data+0x1734>
     3d0:	ldr	r0, [fp, #-16]
     3d4:	ldr	r1, [fp, #-20]	; 0xffffffec
     3d8:	ldr	r2, [fp, #12]
     3dc:	ldr	r3, [fp, #16]
     3e0:	bl	1a78 <check_definition>
     3e4:	cmp	r0, #0
     3e8:	beq	3f8 <check_data+0xd8>
     3ec:	mvn	r0, #0
     3f0:	str	r0, [fp, #-12]
     3f4:	b	1a54 <check_data+0x1734>
     3f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
     3fc:	cmp	r0, #0
     400:	beq	478 <check_data+0x158>
     404:	ldr	r0, [fp, #-32]	; 0xffffffe0
     408:	cmp	r0, #2
     40c:	str	r0, [sp, #316]	; 0x13c
     410:	bcc	43c <check_data+0x11c>
     414:	b	418 <check_data+0xf8>
     418:	ldr	r0, [sp, #316]	; 0x13c
     41c:	sub	r1, r0, #2
     420:	cmp	r1, #4
     424:	bcc	450 <check_data+0x130>
     428:	b	42c <check_data+0x10c>
     42c:	ldr	r0, [sp, #316]	; 0x13c
     430:	cmp	r0, #6
     434:	bne	474 <check_data+0x154>
     438:	b	43c <check_data+0x11c>
     43c:	ldr	r0, [fp, #8]
     440:	mov	r1, #0
     444:	str	r1, [r0, #4]
     448:	str	r1, [r0]
     44c:	b	474 <check_data+0x154>
     450:	ldr	r0, [fp, #-16]
     454:	ldr	r1, [fp, #8]
     458:	bl	0 <coda_cursor_get_bit_size>
     45c:	cmp	r0, #0
     460:	beq	470 <check_data+0x150>
     464:	mvn	r0, #0
     468:	str	r0, [fp, #-12]
     46c:	b	1a54 <check_data+0x1734>
     470:	b	474 <check_data+0x154>
     474:	b	478 <check_data+0x158>
     478:	ldr	r0, [fp, #-24]	; 0xffffffe8
     47c:	cmp	r0, #0
     480:	beq	d90 <check_data+0xa70>
     484:	ldr	r0, [fp, #-32]	; 0xffffffe0
     488:	cmp	r0, #6
     48c:	str	r0, [sp, #312]	; 0x138
     490:	bhi	d8c <check_data+0xa6c>
     494:	add	r0, pc, #8
     498:	ldr	r1, [sp, #312]	; 0x138
     49c:	ldr	r0, [r0, r1, lsl #2]
     4a0:	mov	pc, r0
     4a4:	.word	0x000004c0
     4a8:	.word	0x000004c0
     4ac:	.word	0x000004c4
     4b0:	.word	0x000004c4
     4b4:	.word	0x00000590
     4b8:	.word	0x0000098c
     4bc:	.word	0x00000c90
     4c0:	b	d8c <check_data+0xa6c>
     4c4:	ldr	r0, [fp, #-16]
     4c8:	sub	r1, fp, #56	; 0x38
     4cc:	bl	0 <coda_cursor_read_double>
     4d0:	cmp	r0, #0
     4d4:	beq	58c <check_data+0x26c>
     4d8:	ldr	r0, [pc, #3976]	; 1468 <check_data+0x1148>
     4dc:	ldr	r0, [pc, r0]
     4e0:	str	r0, [sp, #308]	; 0x134
     4e4:	bl	0 <__aeabi_read_tp>
     4e8:	ldr	ip, [sp, #308]	; 0x134
     4ec:	ldr	r0, [r0, ip]
     4f0:	cmn	r0, #300	; 0x12c
     4f4:	beq	544 <check_data+0x224>
     4f8:	ldr	r0, [pc, #4084]	; 14f4 <check_data+0x11d4>
     4fc:	ldr	r0, [pc, r0]
     500:	str	r0, [sp, #304]	; 0x130
     504:	bl	0 <__aeabi_read_tp>
     508:	ldr	ip, [sp, #304]	; 0x130
     50c:	ldr	r0, [r0, ip]
     510:	cmn	r0, #103	; 0x67
     514:	beq	544 <check_data+0x224>
     518:	ldr	r0, [pc, #4056]	; 14f8 <check_data+0x11d8>
     51c:	ldr	r0, [pc, r0]
     520:	str	r0, [sp, #300]	; 0x12c
     524:	bl	0 <__aeabi_read_tp>
     528:	ldr	ip, [sp, #300]	; 0x12c
     52c:	ldr	r0, [r0, ip]
     530:	cmn	r0, #104	; 0x68
     534:	beq	544 <check_data+0x224>
     538:	mvn	r0, #0
     53c:	str	r0, [fp, #-12]
     540:	b	1a54 <check_data+0x1734>
     544:	ldr	r0, [fp, #12]
     548:	ldr	r1, [fp, #-16]
     54c:	ldr	r2, [pc, #4064]	; 1534 <check_data+0x1214>
     550:	ldr	r2, [pc, r2]
     554:	str	r0, [sp, #296]	; 0x128
     558:	str	r1, [sp, #292]	; 0x124
     55c:	str	r2, [sp, #288]	; 0x120
     560:	bl	0 <__aeabi_read_tp>
     564:	ldr	r1, [sp, #288]	; 0x120
     568:	ldr	r0, [r0, r1]
     56c:	bl	0 <coda_errno_to_string>
     570:	ldr	r2, [fp, #16]
     574:	ldr	r1, [sp, #292]	; 0x124
     578:	str	r0, [sp, #284]	; 0x11c
     57c:	mov	r0, r1
     580:	ldr	r1, [sp, #284]	; 0x11c
     584:	ldr	ip, [sp, #296]	; 0x128
     588:	blx	ip
     58c:	b	d8c <check_data+0xa6c>
     590:	movw	r0, #0
     594:	str	r0, [fp, #-60]	; 0xffffffc4
     598:	ldr	r0, [fp, #-16]
     59c:	sub	r1, fp, #64	; 0x40
     5a0:	bl	0 <coda_cursor_get_string_length>
     5a4:	cmp	r0, #0
     5a8:	beq	66c <check_data+0x34c>
     5ac:	ldr	r0, [pc, #4092]	; 15b0 <check_data+0x1290>
     5b0:	ldr	r0, [pc, r0]
     5b4:	str	r0, [sp, #280]	; 0x118
     5b8:	bl	0 <__aeabi_read_tp>
     5bc:	ldr	ip, [sp, #280]	; 0x118
     5c0:	ldr	r0, [r0, ip]
     5c4:	cmn	r0, #300	; 0x12c
     5c8:	beq	618 <check_data+0x2f8>
     5cc:	ldr	r0, [pc, #4064]	; 15b4 <check_data+0x1294>
     5d0:	ldr	r0, [pc, r0]
     5d4:	str	r0, [sp, #276]	; 0x114
     5d8:	bl	0 <__aeabi_read_tp>
     5dc:	ldr	ip, [sp, #276]	; 0x114
     5e0:	ldr	r0, [r0, ip]
     5e4:	cmn	r0, #103	; 0x67
     5e8:	beq	618 <check_data+0x2f8>
     5ec:	ldr	r0, [pc, #4036]	; 15b8 <check_data+0x1298>
     5f0:	ldr	r0, [pc, r0]
     5f4:	str	r0, [sp, #272]	; 0x110
     5f8:	bl	0 <__aeabi_read_tp>
     5fc:	ldr	ip, [sp, #272]	; 0x110
     600:	ldr	r0, [r0, ip]
     604:	cmn	r0, #104	; 0x68
     608:	beq	618 <check_data+0x2f8>
     60c:	mvn	r0, #0
     610:	str	r0, [fp, #-12]
     614:	b	1a54 <check_data+0x1734>
     618:	ldr	r0, [fp, #12]
     61c:	ldr	r1, [fp, #-16]
     620:	ldr	r2, [pc, #4064]	; 1608 <check_data+0x12e8>
     624:	ldr	r2, [pc, r2]
     628:	str	r0, [sp, #268]	; 0x10c
     62c:	str	r1, [sp, #264]	; 0x108
     630:	str	r2, [sp, #260]	; 0x104
     634:	bl	0 <__aeabi_read_tp>
     638:	ldr	r1, [sp, #260]	; 0x104
     63c:	ldr	r0, [r0, r1]
     640:	bl	0 <coda_errno_to_string>
     644:	ldr	r2, [fp, #16]
     648:	ldr	r1, [sp, #264]	; 0x108
     64c:	str	r0, [sp, #256]	; 0x100
     650:	mov	r0, r1
     654:	ldr	r1, [sp, #256]	; 0x100
     658:	ldr	ip, [sp, #268]	; 0x10c
     65c:	blx	ip
     660:	movw	r0, #1
     664:	str	r0, [fp, #-36]	; 0xffffffdc
     668:	b	d8c <check_data+0xa6c>
     66c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     670:	cmp	r0, #0
     674:	bge	6a8 <check_data+0x388>
     678:	ldr	r0, [fp, #12]
     67c:	ldr	r1, [fp, #-16]
     680:	ldr	r2, [fp, #16]
     684:	str	r0, [sp, #252]	; 0xfc
     688:	mov	r0, r1
     68c:	movw	r1, #0
     690:	movt	r1, #0
     694:	ldr	r3, [sp, #252]	; 0xfc
     698:	blx	r3
     69c:	movw	r0, #1
     6a0:	str	r0, [fp, #-36]	; 0xffffffdc
     6a4:	b	d8c <check_data+0xa6c>
     6a8:	ldr	r0, [fp, #-20]	; 0xffffffec
     6ac:	ldr	r0, [r0]
     6b0:	movw	r1, #0
     6b4:	cmp	r0, r1
     6b8:	beq	6cc <check_data+0x3ac>
     6bc:	ldr	r0, [fp, #-20]	; 0xffffffec
     6c0:	ldr	r0, [r0]
     6c4:	str	r0, [sp, #248]	; 0xf8
     6c8:	b	6d4 <check_data+0x3b4>
     6cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
     6d0:	str	r0, [sp, #248]	; 0xf8
     6d4:	ldr	r0, [sp, #248]	; 0xf8
     6d8:	sub	r1, fp, #68	; 0x44
     6dc:	sub	r2, fp, #72	; 0x48
     6e0:	bl	0 <coda_type_get_fixed_value>
     6e4:	cmp	r0, #0
     6e8:	beq	6f8 <check_data+0x3d8>
     6ec:	mvn	r0, #0
     6f0:	str	r0, [fp, #-12]
     6f4:	b	1a54 <check_data+0x1734>
     6f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
     6fc:	cmp	r0, #0
     700:	ble	78c <check_data+0x46c>
     704:	ldr	r0, [fp, #-64]	; 0xffffffc0
     708:	add	r0, r0, #1
     70c:	bl	0 <malloc>
     710:	str	r0, [fp, #-60]	; 0xffffffc4
     714:	ldr	r0, [fp, #-60]	; 0xffffffc4
     718:	movw	lr, #0
     71c:	cmp	r0, lr
     720:	bne	758 <check_data+0x438>
     724:	ldr	r0, [fp, #-64]	; 0xffffffc0
     728:	add	r2, r0, #1
     72c:	mvn	r0, #0
     730:	movw	r1, #0
     734:	movt	r1, #0
     738:	movw	r3, #0
     73c:	movt	r3, #0
     740:	movw	ip, #411	; 0x19b
     744:	str	ip, [sp]
     748:	bl	0 <coda_set_error>
     74c:	mvn	r0, #0
     750:	str	r0, [fp, #-12]
     754:	b	1a54 <check_data+0x1734>
     758:	ldr	r0, [fp, #-16]
     75c:	ldr	r1, [fp, #-60]	; 0xffffffc4
     760:	ldr	r2, [fp, #-64]	; 0xffffffc0
     764:	add	r2, r2, #1
     768:	bl	0 <coda_cursor_read_string>
     76c:	cmp	r0, #0
     770:	beq	788 <check_data+0x468>
     774:	ldr	r0, [fp, #-60]	; 0xffffffc4
     778:	bl	0 <free>
     77c:	mvn	r0, #0
     780:	str	r0, [fp, #-12]
     784:	b	1a54 <check_data+0x1734>
     788:	b	78c <check_data+0x46c>
     78c:	ldr	r0, [fp, #-68]	; 0xffffffbc
     790:	movw	r1, #0
     794:	cmp	r0, r1
     798:	beq	828 <check_data+0x508>
     79c:	ldr	r0, [fp, #-64]	; 0xffffffc0
     7a0:	ldr	r1, [fp, #-72]	; 0xffffffb8
     7a4:	cmp	r0, r1
     7a8:	beq	7d4 <check_data+0x4b4>
     7ac:	ldr	r0, [fp, #12]
     7b0:	ldr	r1, [fp, #-16]
     7b4:	ldr	r2, [fp, #16]
     7b8:	str	r0, [sp, #244]	; 0xf4
     7bc:	mov	r0, r1
     7c0:	movw	r1, #0
     7c4:	movt	r1, #0
     7c8:	ldr	r3, [sp, #244]	; 0xf4
     7cc:	blx	r3
     7d0:	b	824 <check_data+0x504>
     7d4:	ldr	r0, [fp, #-64]	; 0xffffffc0
     7d8:	cmp	r0, #0
     7dc:	ble	820 <check_data+0x500>
     7e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
     7e4:	ldr	r1, [fp, #-68]	; 0xffffffbc
     7e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
     7ec:	bl	0 <memcmp>
     7f0:	cmp	r0, #0
     7f4:	beq	81c <check_data+0x4fc>
     7f8:	ldr	r0, [fp, #12]
     7fc:	ldr	r1, [fp, #-16]
     800:	ldr	r2, [fp, #16]
     804:	str	r0, [sp, #240]	; 0xf0
     808:	mov	r0, r1
     80c:	movw	r1, #0
     810:	movt	r1, #0
     814:	ldr	r3, [sp, #240]	; 0xf0
     818:	blx	r3
     81c:	b	820 <check_data+0x500>
     820:	b	824 <check_data+0x504>
     824:	b	828 <check_data+0x508>
     828:	ldr	r0, [fp, #-44]	; 0xffffffd4
     82c:	ldr	r0, [r0, #44]	; 0x2c
     830:	cmp	r0, #1
     834:	bne	970 <check_data+0x650>
     838:	ldr	r0, [fp, #-16]
     83c:	ldr	r0, [r0]
     840:	ldr	r0, [r0, #60]	; 0x3c
     844:	cmp	r0, #3
     848:	str	r0, [sp, #236]	; 0xec
     84c:	bhi	96c <check_data+0x64c>
     850:	add	r0, pc, #8
     854:	ldr	r1, [sp, #236]	; 0xec
     858:	ldr	r0, [r0, r1, lsl #2]
     85c:	mov	pc, r0
     860:	.word	0x0000094c
     864:	.word	0x00000870
     868:	.word	0x000008b4
     86c:	.word	0x000008f8
     870:	ldr	r0, [fp, #-64]	; 0xffffffc0
     874:	cmp	r0, #1
     878:	bne	88c <check_data+0x56c>
     87c:	ldr	r0, [fp, #-60]	; 0xffffffc4
     880:	ldrb	r0, [r0]
     884:	cmp	r0, #10
     888:	beq	8b0 <check_data+0x590>
     88c:	ldr	r0, [fp, #12]
     890:	ldr	r1, [fp, #-16]
     894:	ldr	r2, [fp, #16]
     898:	str	r0, [sp, #232]	; 0xe8
     89c:	mov	r0, r1
     8a0:	movw	r1, #0
     8a4:	movt	r1, #0
     8a8:	ldr	r3, [sp, #232]	; 0xe8
     8ac:	blx	r3
     8b0:	b	96c <check_data+0x64c>
     8b4:	ldr	r0, [fp, #-64]	; 0xffffffc0
     8b8:	cmp	r0, #1
     8bc:	bne	8d0 <check_data+0x5b0>
     8c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
     8c4:	ldrb	r0, [r0]
     8c8:	cmp	r0, #13
     8cc:	beq	8f4 <check_data+0x5d4>
     8d0:	ldr	r0, [fp, #12]
     8d4:	ldr	r1, [fp, #-16]
     8d8:	ldr	r2, [fp, #16]
     8dc:	str	r0, [sp, #228]	; 0xe4
     8e0:	mov	r0, r1
     8e4:	movw	r1, #0
     8e8:	movt	r1, #0
     8ec:	ldr	r3, [sp, #228]	; 0xe4
     8f0:	blx	r3
     8f4:	b	96c <check_data+0x64c>
     8f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
     8fc:	cmp	r0, #2
     900:	bne	924 <check_data+0x604>
     904:	ldr	r0, [fp, #-60]	; 0xffffffc4
     908:	ldrb	r0, [r0]
     90c:	cmp	r0, #13
     910:	bne	924 <check_data+0x604>
     914:	ldr	r0, [fp, #-60]	; 0xffffffc4
     918:	ldrb	r0, [r0, #1]
     91c:	cmp	r0, #10
     920:	beq	948 <check_data+0x628>
     924:	ldr	r0, [fp, #12]
     928:	ldr	r1, [fp, #-16]
     92c:	ldr	r2, [fp, #16]
     930:	str	r0, [sp, #224]	; 0xe0
     934:	mov	r0, r1
     938:	movw	r1, #0
     93c:	movt	r1, #0
     940:	ldr	r3, [sp, #224]	; 0xe0
     944:	blx	r3
     948:	b	96c <check_data+0x64c>
     94c:	movw	r0, #0
     950:	movt	r0, #0
     954:	movw	r1, #0
     958:	movt	r1, #0
     95c:	movw	r2, #462	; 0x1ce
     960:	movw	r3, #0
     964:	movt	r3, #0
     968:	bl	0 <__assert_fail>
     96c:	b	970 <check_data+0x650>
     970:	ldr	r0, [fp, #-60]	; 0xffffffc4
     974:	movw	r1, #0
     978:	cmp	r0, r1
     97c:	beq	988 <check_data+0x668>
     980:	ldr	r0, [fp, #-60]	; 0xffffffc4
     984:	bl	0 <free>
     988:	b	d8c <check_data+0xa6c>
     98c:	ldr	r0, [fp, #-28]	; 0xffffffe4
     990:	cmp	r0, #0
     994:	bne	a70 <check_data+0x750>
     998:	ldr	r0, [fp, #-16]
     99c:	ldr	r1, [fp, #8]
     9a0:	bl	0 <coda_cursor_get_bit_size>
     9a4:	cmp	r0, #0
     9a8:	beq	a6c <check_data+0x74c>
     9ac:	ldr	r0, [pc, #4044]	; 1980 <check_data+0x1660>
     9b0:	ldr	r0, [pc, r0]
     9b4:	str	r0, [sp, #220]	; 0xdc
     9b8:	bl	0 <__aeabi_read_tp>
     9bc:	ldr	ip, [sp, #220]	; 0xdc
     9c0:	ldr	r0, [r0, ip]
     9c4:	cmn	r0, #300	; 0x12c
     9c8:	beq	a18 <check_data+0x6f8>
     9cc:	ldr	r0, [pc, #4080]	; 19c4 <check_data+0x16a4>
     9d0:	ldr	r0, [pc, r0]
     9d4:	str	r0, [sp, #216]	; 0xd8
     9d8:	bl	0 <__aeabi_read_tp>
     9dc:	ldr	ip, [sp, #216]	; 0xd8
     9e0:	ldr	r0, [r0, ip]
     9e4:	cmn	r0, #103	; 0x67
     9e8:	beq	a18 <check_data+0x6f8>
     9ec:	ldr	r0, [pc, #4052]	; 19c8 <check_data+0x16a8>
     9f0:	ldr	r0, [pc, r0]
     9f4:	str	r0, [sp, #212]	; 0xd4
     9f8:	bl	0 <__aeabi_read_tp>
     9fc:	ldr	ip, [sp, #212]	; 0xd4
     a00:	ldr	r0, [r0, ip]
     a04:	cmn	r0, #104	; 0x68
     a08:	beq	a18 <check_data+0x6f8>
     a0c:	mvn	r0, #0
     a10:	str	r0, [fp, #-12]
     a14:	b	1a54 <check_data+0x1734>
     a18:	ldr	r0, [fp, #12]
     a1c:	ldr	r1, [fp, #-16]
     a20:	ldr	r2, [pc, #4004]	; 19cc <check_data+0x16ac>
     a24:	ldr	r2, [pc, r2]
     a28:	str	r0, [sp, #208]	; 0xd0
     a2c:	str	r1, [sp, #204]	; 0xcc
     a30:	str	r2, [sp, #200]	; 0xc8
     a34:	bl	0 <__aeabi_read_tp>
     a38:	ldr	r1, [sp, #200]	; 0xc8
     a3c:	ldr	r0, [r0, r1]
     a40:	bl	0 <coda_errno_to_string>
     a44:	ldr	r2, [fp, #16]
     a48:	ldr	r1, [sp, #204]	; 0xcc
     a4c:	str	r0, [sp, #196]	; 0xc4
     a50:	mov	r0, r1
     a54:	ldr	r1, [sp, #196]	; 0xc4
     a58:	ldr	ip, [sp, #208]	; 0xd0
     a5c:	blx	ip
     a60:	movw	r0, #1
     a64:	str	r0, [fp, #-36]	; 0xffffffdc
     a68:	b	d8c <check_data+0xa6c>
     a6c:	b	a70 <check_data+0x750>
     a70:	ldr	r0, [fp, #8]
     a74:	ldr	r0, [r0, #4]
     a78:	cmn	r0, #1
     a7c:	bgt	ab4 <check_data+0x794>
     a80:	b	a84 <check_data+0x764>
     a84:	ldr	r0, [fp, #12]
     a88:	ldr	r1, [fp, #-16]
     a8c:	ldr	r2, [fp, #16]
     a90:	str	r0, [sp, #192]	; 0xc0
     a94:	mov	r0, r1
     a98:	movw	r1, #0
     a9c:	movt	r1, #0
     aa0:	ldr	r3, [sp, #192]	; 0xc0
     aa4:	blx	r3
     aa8:	movw	r0, #1
     aac:	str	r0, [fp, #-36]	; 0xffffffdc
     ab0:	b	d8c <check_data+0xa6c>
     ab4:	ldr	r0, [fp, #8]
     ab8:	ldr	r1, [r0]
     abc:	ldr	r0, [r0, #4]
     ac0:	lsr	r2, r1, #3
     ac4:	orr	r2, r2, r0, lsl #29
     ac8:	asr	r0, r0, #3
     acc:	and	r1, r1, #7
     ad0:	adds	r3, r2, #1
     ad4:	adc	ip, r0, #0
     ad8:	cmp	r1, #0
     adc:	movne	r2, r3
     ae0:	cmp	r1, #0
     ae4:	movne	r0, ip
     ae8:	str	r2, [fp, #-80]	; 0xffffffb0
     aec:	str	r0, [fp, #-76]	; 0xffffffb4
     af0:	ldr	r0, [fp, #-20]	; 0xffffffec
     af4:	ldr	r0, [r0]
     af8:	movw	r1, #0
     afc:	cmp	r0, r1
     b00:	beq	b14 <check_data+0x7f4>
     b04:	ldr	r0, [fp, #-20]	; 0xffffffec
     b08:	ldr	r0, [r0]
     b0c:	str	r0, [sp, #188]	; 0xbc
     b10:	b	b1c <check_data+0x7fc>
     b14:	ldr	r0, [fp, #-44]	; 0xffffffd4
     b18:	str	r0, [sp, #188]	; 0xbc
     b1c:	ldr	r0, [sp, #188]	; 0xbc
     b20:	sub	r1, fp, #84	; 0x54
     b24:	sub	r2, fp, #88	; 0x58
     b28:	bl	0 <coda_type_get_fixed_value>
     b2c:	cmp	r0, #0
     b30:	beq	b40 <check_data+0x820>
     b34:	mvn	r0, #0
     b38:	str	r0, [fp, #-12]
     b3c:	b	1a54 <check_data+0x1734>
     b40:	ldr	r0, [fp, #-84]	; 0xffffffac
     b44:	movw	r1, #0
     b48:	cmp	r0, r1
     b4c:	beq	c8c <check_data+0x96c>
     b50:	ldr	r0, [fp, #-80]	; 0xffffffb0
     b54:	ldr	r1, [fp, #-76]	; 0xffffffb4
     b58:	ldr	r2, [fp, #-88]	; 0xffffffa8
     b5c:	eor	r1, r1, r2, asr #31
     b60:	eor	r0, r0, r2
     b64:	orr	r0, r0, r1
     b68:	cmp	r0, #0
     b6c:	beq	b9c <check_data+0x87c>
     b70:	b	b74 <check_data+0x854>
     b74:	ldr	r0, [fp, #12]
     b78:	ldr	r1, [fp, #-16]
     b7c:	ldr	r2, [fp, #16]
     b80:	str	r0, [sp, #184]	; 0xb8
     b84:	mov	r0, r1
     b88:	movw	r1, #0
     b8c:	movt	r1, #0
     b90:	ldr	r3, [sp, #184]	; 0xb8
     b94:	blx	r3
     b98:	b	c88 <check_data+0x968>
     b9c:	ldr	r0, [fp, #-88]	; 0xffffffa8
     ba0:	cmp	r0, #0
     ba4:	ble	c84 <check_data+0x964>
     ba8:	ldr	r0, [fp, #-80]	; 0xffffffb0
     bac:	bl	0 <malloc>
     bb0:	str	r0, [fp, #-92]	; 0xffffffa4
     bb4:	ldr	r0, [fp, #-92]	; 0xffffffa4
     bb8:	movw	lr, #0
     bbc:	cmp	r0, lr
     bc0:	bne	bf4 <check_data+0x8d4>
     bc4:	ldr	r2, [fp, #-80]	; 0xffffffb0
     bc8:	mvn	r0, #0
     bcc:	movw	r1, #0
     bd0:	movt	r1, #0
     bd4:	movw	r3, #0
     bd8:	movt	r3, #0
     bdc:	movw	ip, #524	; 0x20c
     be0:	str	ip, [sp]
     be4:	bl	0 <coda_set_error>
     be8:	mvn	r0, #0
     bec:	str	r0, [fp, #-12]
     bf0:	b	1a54 <check_data+0x1734>
     bf4:	ldr	r0, [fp, #-16]
     bf8:	ldr	r1, [fp, #-92]	; 0xffffffa4
     bfc:	ldr	r2, [fp, #8]
     c00:	ldr	r3, [r2]
     c04:	ldr	r2, [r2, #4]
     c08:	mov	ip, sp
     c0c:	str	r2, [ip, #4]
     c10:	str	r3, [ip]
     c14:	mov	r2, #0
     c18:	str	r2, [sp, #180]	; 0xb4
     c1c:	ldr	r3, [sp, #180]	; 0xb4
     c20:	bl	0 <coda_cursor_read_bits>
     c24:	cmp	r0, #0
     c28:	beq	c40 <check_data+0x920>
     c2c:	ldr	r0, [fp, #-92]	; 0xffffffa4
     c30:	bl	0 <free>
     c34:	mvn	r0, #0
     c38:	str	r0, [fp, #-12]
     c3c:	b	1a54 <check_data+0x1734>
     c40:	ldr	r0, [fp, #-92]	; 0xffffffa4
     c44:	ldr	r1, [fp, #-84]	; 0xffffffac
     c48:	ldr	r2, [fp, #-88]	; 0xffffffa8
     c4c:	bl	0 <memcmp>
     c50:	cmp	r0, #0
     c54:	beq	c7c <check_data+0x95c>
     c58:	ldr	r0, [fp, #12]
     c5c:	ldr	r1, [fp, #-16]
     c60:	ldr	r2, [fp, #16]
     c64:	str	r0, [sp, #176]	; 0xb0
     c68:	mov	r0, r1
     c6c:	movw	r1, #0
     c70:	movt	r1, #0
     c74:	ldr	r3, [sp, #176]	; 0xb0
     c78:	blx	r3
     c7c:	ldr	r0, [fp, #-92]	; 0xffffffa4
     c80:	bl	0 <free>
     c84:	b	c88 <check_data+0x968>
     c88:	b	c8c <check_data+0x96c>
     c8c:	b	d8c <check_data+0xa6c>
     c90:	ldr	r0, [fp, #-16]
     c94:	sub	r1, fp, #96	; 0x60
     c98:	bl	0 <coda_cursor_get_special_type>
     c9c:	cmp	r0, #0
     ca0:	beq	cb0 <check_data+0x990>
     ca4:	mvn	r0, #0
     ca8:	str	r0, [fp, #-12]
     cac:	b	1a54 <check_data+0x1734>
     cb0:	ldr	r0, [fp, #-96]	; 0xffffffa0
     cb4:	cmp	r0, #2
     cb8:	bne	d88 <check_data+0xa68>
     cbc:	ldr	r0, [fp, #-16]
     cc0:	sub	r1, fp, #104	; 0x68
     cc4:	bl	0 <coda_cursor_read_double>
     cc8:	cmp	r0, #0
     ccc:	beq	d84 <check_data+0xa64>
     cd0:	ldr	r0, [pc, #3464]	; 1a60 <check_data+0x1740>
     cd4:	ldr	r0, [pc, r0]
     cd8:	str	r0, [sp, #172]	; 0xac
     cdc:	bl	0 <__aeabi_read_tp>
     ce0:	ldr	ip, [sp, #172]	; 0xac
     ce4:	ldr	r0, [r0, ip]
     ce8:	cmn	r0, #300	; 0x12c
     cec:	beq	d3c <check_data+0xa1c>
     cf0:	ldr	r0, [pc, #3436]	; 1a64 <check_data+0x1744>
     cf4:	ldr	r0, [pc, r0]
     cf8:	str	r0, [sp, #168]	; 0xa8
     cfc:	bl	0 <__aeabi_read_tp>
     d00:	ldr	ip, [sp, #168]	; 0xa8
     d04:	ldr	r0, [r0, ip]
     d08:	cmn	r0, #103	; 0x67
     d0c:	beq	d3c <check_data+0xa1c>
     d10:	ldr	r0, [pc, #3408]	; 1a68 <check_data+0x1748>
     d14:	ldr	r0, [pc, r0]
     d18:	str	r0, [sp, #164]	; 0xa4
     d1c:	bl	0 <__aeabi_read_tp>
     d20:	ldr	ip, [sp, #164]	; 0xa4
     d24:	ldr	r0, [r0, ip]
     d28:	cmn	r0, #104	; 0x68
     d2c:	beq	d3c <check_data+0xa1c>
     d30:	mvn	r0, #0
     d34:	str	r0, [fp, #-12]
     d38:	b	1a54 <check_data+0x1734>
     d3c:	ldr	r0, [fp, #12]
     d40:	ldr	r1, [fp, #-16]
     d44:	ldr	r2, [pc, #3360]	; 1a6c <check_data+0x174c>
     d48:	ldr	r2, [pc, r2]
     d4c:	str	r0, [sp, #160]	; 0xa0
     d50:	str	r1, [sp, #156]	; 0x9c
     d54:	str	r2, [sp, #152]	; 0x98
     d58:	bl	0 <__aeabi_read_tp>
     d5c:	ldr	r1, [sp, #152]	; 0x98
     d60:	ldr	r0, [r0, r1]
     d64:	bl	0 <coda_errno_to_string>
     d68:	ldr	r2, [fp, #16]
     d6c:	ldr	r1, [sp, #156]	; 0x9c
     d70:	str	r0, [sp, #148]	; 0x94
     d74:	mov	r0, r1
     d78:	ldr	r1, [sp, #148]	; 0x94
     d7c:	ldr	ip, [sp, #160]	; 0xa0
     d80:	blx	ip
     d84:	b	d88 <check_data+0xa68>
     d88:	b	d8c <check_data+0xa6c>
     d8c:	b	d90 <check_data+0xa70>
     d90:	ldr	r0, [fp, #-16]
     d94:	sub	r1, fp, #40	; 0x28
     d98:	bl	0 <coda_cursor_has_attributes>
     d9c:	cmp	r0, #0
     da0:	beq	db0 <check_data+0xa90>
     da4:	mvn	r0, #0
     da8:	str	r0, [fp, #-12]
     dac:	b	1a54 <check_data+0x1734>
     db0:	ldr	r0, [fp, #-40]	; 0xffffffd8
     db4:	cmp	r0, #0
     db8:	beq	eb0 <check_data+0xb90>
     dbc:	movw	r0, #0
     dc0:	str	r0, [fp, #-108]	; 0xffffff94
     dc4:	ldr	r1, [fp, #-20]	; 0xffffffec
     dc8:	ldr	r1, [r1]
     dcc:	cmp	r1, r0
     dd0:	beq	dfc <check_data+0xadc>
     dd4:	ldr	r0, [fp, #-20]	; 0xffffffec
     dd8:	ldr	r0, [r0]
     ddc:	sub	r1, fp, #108	; 0x6c
     de0:	bl	0 <coda_type_get_attributes>
     de4:	cmp	r0, #0
     de8:	beq	df8 <check_data+0xad8>
     dec:	mvn	r0, #0
     df0:	str	r0, [fp, #-12]
     df4:	b	1a54 <check_data+0x1734>
     df8:	b	dfc <check_data+0xadc>
     dfc:	ldr	r0, [fp, #-16]
     e00:	bl	0 <coda_cursor_goto_attributes>
     e04:	cmp	r0, #0
     e08:	beq	e18 <check_data+0xaf8>
     e0c:	mvn	r0, #0
     e10:	str	r0, [fp, #-12]
     e14:	b	1a54 <check_data+0x1734>
     e18:	ldr	r0, [fp, #-16]
     e1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
     e20:	ldr	r1, [fp, #12]
     e24:	ldr	r3, [fp, #16]
     e28:	sub	ip, fp, #108	; 0x6c
     e2c:	str	r1, [sp, #144]	; 0x90
     e30:	mov	r1, ip
     e34:	movw	ip, #0
     e38:	str	r3, [sp, #140]	; 0x8c
     e3c:	mov	r3, ip
     e40:	sub	ip, fp, #120	; 0x78
     e44:	str	ip, [sp]
     e48:	ldr	ip, [sp, #144]	; 0x90
     e4c:	str	ip, [sp, #4]
     e50:	ldr	lr, [sp, #140]	; 0x8c
     e54:	str	lr, [sp, #8]
     e58:	bl	320 <check_data>
     e5c:	cmp	r0, #0
     e60:	beq	e70 <check_data+0xb50>
     e64:	mvn	r0, #0
     e68:	str	r0, [fp, #-12]
     e6c:	b	1a54 <check_data+0x1734>
     e70:	ldr	r0, [fp, #-16]
     e74:	bl	0 <coda_cursor_goto_parent>
     e78:	ldr	lr, [fp, #-20]	; 0xffffffec
     e7c:	ldr	lr, [lr]
     e80:	movw	r1, #0
     e84:	cmp	lr, r1
     e88:	str	r0, [sp, #136]	; 0x88
     e8c:	beq	eac <check_data+0xb8c>
     e90:	ldr	r0, [fp, #-108]	; 0xffffff94
     e94:	movw	r1, #0
     e98:	cmp	r0, r1
     e9c:	bne	eac <check_data+0xb8c>
     ea0:	ldr	r0, [fp, #-20]	; 0xffffffec
     ea4:	movw	r1, #0
     ea8:	str	r1, [r0]
     eac:	b	eb0 <check_data+0xb90>
     eb0:	ldr	r0, [fp, #-20]	; 0xffffffec
     eb4:	ldr	r0, [r0]
     eb8:	movw	r1, #0
     ebc:	cmp	r0, r1
     ec0:	bne	edc <check_data+0xbbc>
     ec4:	ldr	r0, [fp, #-24]	; 0xffffffe8
     ec8:	cmp	r0, #0
     ecc:	bne	edc <check_data+0xbbc>
     ed0:	ldr	r0, [fp, #-28]	; 0xffffffe4
     ed4:	cmp	r0, #0
     ed8:	beq	1614 <check_data+0x12f4>
     edc:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ee0:	cmp	r0, #6
     ee4:	str	r0, [sp, #132]	; 0x84
     ee8:	bhi	1610 <check_data+0x12f0>
     eec:	add	r0, pc, #8
     ef0:	ldr	r1, [sp, #132]	; 0x84
     ef4:	ldr	r0, [r0, r1, lsl #2]
     ef8:	mov	pc, r0
     efc:	.word	0x000010c0
     f00:	.word	0x00000f18
     f04:	.word	0x000014f0
     f08:	.word	0x000014f0
     f0c:	.word	0x000014f0
     f10:	.word	0x000014f0
     f14:	.word	0x000014fc
     f18:	movw	r0, #0
     f1c:	str	r0, [fp, #-132]	; 0xffffff7c
     f20:	ldr	r1, [fp, #-20]	; 0xffffffec
     f24:	ldr	r1, [r1]
     f28:	cmp	r1, r0
     f2c:	beq	f58 <check_data+0xc38>
     f30:	ldr	r0, [fp, #-20]	; 0xffffffec
     f34:	ldr	r0, [r0]
     f38:	sub	r1, fp, #132	; 0x84
     f3c:	bl	0 <coda_type_get_array_base_type>
     f40:	cmp	r0, #0
     f44:	beq	f54 <check_data+0xc34>
     f48:	mvn	r0, #0
     f4c:	str	r0, [fp, #-12]
     f50:	b	1a54 <check_data+0x1734>
     f54:	b	f58 <check_data+0xc38>
     f58:	ldr	r0, [fp, #-16]
     f5c:	sub	r1, fp, #136	; 0x88
     f60:	bl	0 <coda_cursor_get_num_elements>
     f64:	cmp	r0, #0
     f68:	beq	f78 <check_data+0xc58>
     f6c:	mvn	r0, #0
     f70:	str	r0, [fp, #-12]
     f74:	b	1a54 <check_data+0x1734>
     f78:	ldr	r0, [fp, #-136]	; 0xffffff78
     f7c:	cmp	r0, #0
     f80:	ble	10bc <check_data+0xd9c>
     f84:	ldr	r0, [fp, #-16]
     f88:	bl	0 <coda_cursor_goto_first_array_element>
     f8c:	cmp	r0, #0
     f90:	beq	fa0 <check_data+0xc80>
     f94:	mvn	r0, #0
     f98:	str	r0, [fp, #-12]
     f9c:	b	1a54 <check_data+0x1734>
     fa0:	movw	r0, #0
     fa4:	str	r0, [fp, #-140]	; 0xffffff74
     fa8:	ldr	r0, [fp, #-140]	; 0xffffff74
     fac:	ldr	r1, [fp, #-136]	; 0xffffff78
     fb0:	cmp	r0, r1
     fb4:	bge	107c <check_data+0xd5c>
     fb8:	ldr	r0, [fp, #-16]
     fbc:	ldr	r2, [fp, #-24]	; 0xffffffe8
     fc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fc4:	ldr	r1, [fp, #12]
     fc8:	ldr	ip, [fp, #16]
     fcc:	sub	lr, fp, #132	; 0x84
     fd0:	str	r1, [sp, #128]	; 0x80
     fd4:	mov	r1, lr
     fd8:	sub	lr, fp, #128	; 0x80
     fdc:	str	lr, [sp]
     fe0:	ldr	lr, [sp, #128]	; 0x80
     fe4:	str	lr, [sp, #4]
     fe8:	str	ip, [sp, #8]
     fec:	bl	320 <check_data>
     ff0:	cmp	r0, #0
     ff4:	beq	1004 <check_data+0xce4>
     ff8:	mvn	r0, #0
     ffc:	str	r0, [fp, #-12]
    1000:	b	1a54 <check_data+0x1734>
    1004:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1008:	cmp	r0, #0
    100c:	beq	1034 <check_data+0xd14>
    1010:	ldr	r0, [fp, #-128]	; 0xffffff80
    1014:	ldr	r1, [fp, #-124]	; 0xffffff84
    1018:	ldr	r2, [fp, #8]
    101c:	ldr	r3, [r2]
    1020:	ldr	ip, [r2, #4]
    1024:	adds	r0, r3, r0
    1028:	adc	r1, ip, r1
    102c:	str	r0, [r2]
    1030:	str	r1, [r2, #4]
    1034:	ldr	r0, [fp, #-140]	; 0xffffff74
    1038:	ldr	r1, [fp, #-136]	; 0xffffff78
    103c:	sub	r1, r1, #1
    1040:	cmp	r0, r1
    1044:	bge	1068 <check_data+0xd48>
    1048:	ldr	r0, [fp, #-16]
    104c:	bl	0 <coda_cursor_goto_next_array_element>
    1050:	cmp	r0, #0
    1054:	beq	1064 <check_data+0xd44>
    1058:	mvn	r0, #0
    105c:	str	r0, [fp, #-12]
    1060:	b	1a54 <check_data+0x1734>
    1064:	b	1068 <check_data+0xd48>
    1068:	b	106c <check_data+0xd4c>
    106c:	ldr	r0, [fp, #-140]	; 0xffffff74
    1070:	add	r0, r0, #1
    1074:	str	r0, [fp, #-140]	; 0xffffff74
    1078:	b	fa8 <check_data+0xc88>
    107c:	ldr	r0, [fp, #-16]
    1080:	bl	0 <coda_cursor_goto_parent>
    1084:	ldr	lr, [fp, #-20]	; 0xffffffec
    1088:	ldr	lr, [lr]
    108c:	movw	r1, #0
    1090:	cmp	lr, r1
    1094:	str	r0, [sp, #124]	; 0x7c
    1098:	beq	10b8 <check_data+0xd98>
    109c:	ldr	r0, [fp, #-132]	; 0xffffff7c
    10a0:	movw	r1, #0
    10a4:	cmp	r0, r1
    10a8:	bne	10b8 <check_data+0xd98>
    10ac:	ldr	r0, [fp, #-20]	; 0xffffffec
    10b0:	movw	r1, #0
    10b4:	str	r1, [r0]
    10b8:	b	10bc <check_data+0xd9c>
    10bc:	b	1610 <check_data+0x12f0>
    10c0:	ldr	r0, [fp, #-16]
    10c4:	sub	r1, fp, #664	; 0x298
    10c8:	mov	r2, r1
    10cc:	str	r0, [sp, #120]	; 0x78
    10d0:	mov	r0, r2
    10d4:	ldr	r2, [sp, #120]	; 0x78
    10d8:	str	r1, [sp, #116]	; 0x74
    10dc:	mov	r1, r2
    10e0:	movw	r2, #520	; 0x208
    10e4:	bl	0 <memcpy>
    10e8:	ldr	r0, [sp, #116]	; 0x74
    10ec:	sub	r1, fp, #668	; 0x29c
    10f0:	bl	0 <coda_cursor_get_num_elements>
    10f4:	cmp	r0, #0
    10f8:	beq	1108 <check_data+0xde8>
    10fc:	mvn	r0, #0
    1100:	str	r0, [fp, #-12]
    1104:	b	1a54 <check_data+0x1734>
    1108:	ldr	r0, [fp, #-668]	; 0xfffffd64
    110c:	cmp	r0, #0
    1110:	ble	12f8 <check_data+0xfd8>
    1114:	ldr	r0, [fp, #-16]
    1118:	bl	0 <coda_cursor_goto_first_record_field>
    111c:	cmp	r0, #0
    1120:	beq	1130 <check_data+0xe10>
    1124:	mvn	r0, #0
    1128:	str	r0, [fp, #-12]
    112c:	b	1a54 <check_data+0x1734>
    1130:	movw	r0, #0
    1134:	str	r0, [fp, #-672]	; 0xfffffd60
    1138:	ldr	r0, [fp, #-672]	; 0xfffffd60
    113c:	ldr	r1, [fp, #-668]	; 0xfffffd64
    1140:	cmp	r0, r1
    1144:	bge	12ec <check_data+0xfcc>
    1148:	movw	r0, #0
    114c:	str	r0, [fp, #-676]	; 0xfffffd5c
    1150:	ldr	r1, [fp, #-672]	; 0xfffffd60
    1154:	sub	r0, fp, #664	; 0x298
    1158:	sub	r2, fp, #680	; 0x2a8
    115c:	bl	0 <coda_cursor_get_record_field_available_status>
    1160:	cmp	r0, #0
    1164:	beq	1174 <check_data+0xe54>
    1168:	mvn	r0, #0
    116c:	str	r0, [fp, #-12]
    1170:	b	1a54 <check_data+0x1734>
    1174:	ldr	r0, [fp, #-680]	; 0xfffffd58
    1178:	cmp	r0, #0
    117c:	beq	12a4 <check_data+0xf84>
    1180:	ldr	r0, [fp, #-20]	; 0xffffffec
    1184:	ldr	r0, [r0]
    1188:	movw	r1, #0
    118c:	cmp	r0, r1
    1190:	beq	1224 <check_data+0xf04>
    1194:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1198:	ldr	r1, [fp, #-672]	; 0xfffffd60
    119c:	sub	r2, fp, #684	; 0x2ac
    11a0:	bl	0 <coda_type_get_record_field_name>
    11a4:	cmp	r0, #0
    11a8:	beq	11b8 <check_data+0xe98>
    11ac:	mvn	r0, #0
    11b0:	str	r0, [fp, #-12]
    11b4:	b	1a54 <check_data+0x1734>
    11b8:	ldr	r0, [fp, #-20]	; 0xffffffec
    11bc:	ldr	r0, [r0]
    11c0:	ldr	r1, [fp, #-684]	; 0xfffffd54
    11c4:	sub	r2, fp, #688	; 0x2b0
    11c8:	bl	0 <coda_type_get_record_field_index_from_name>
    11cc:	cmp	r0, #0
    11d0:	beq	11f4 <check_data+0xed4>
    11d4:	ldr	r0, [pc, #2200]	; 1a74 <check_data+0x1754>
    11d8:	ldr	r0, [pc, r0]
    11dc:	str	r0, [sp, #112]	; 0x70
    11e0:	bl	0 <__aeabi_read_tp>
    11e4:	mov	ip, #0
    11e8:	ldr	lr, [sp, #112]	; 0x70
    11ec:	str	ip, [r0, lr]
    11f0:	b	1220 <check_data+0xf00>
    11f4:	ldr	r0, [fp, #-20]	; 0xffffffec
    11f8:	ldr	r0, [r0]
    11fc:	ldr	r1, [fp, #-688]	; 0xfffffd50
    1200:	sub	r2, fp, #676	; 0x2a4
    1204:	bl	0 <coda_type_get_record_field_type>
    1208:	cmp	r0, #0
    120c:	beq	121c <check_data+0xefc>
    1210:	mvn	r0, #0
    1214:	str	r0, [fp, #-12]
    1218:	b	1a54 <check_data+0x1734>
    121c:	b	1220 <check_data+0xf00>
    1220:	b	1224 <check_data+0xf04>
    1224:	ldr	r0, [fp, #-16]
    1228:	ldr	r2, [fp, #-24]	; 0xffffffe8
    122c:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1230:	ldr	r1, [fp, #12]
    1234:	ldr	ip, [fp, #16]
    1238:	sub	lr, fp, #676	; 0x2a4
    123c:	str	r1, [sp, #108]	; 0x6c
    1240:	mov	r1, lr
    1244:	sub	lr, fp, #128	; 0x80
    1248:	str	lr, [sp]
    124c:	ldr	lr, [sp, #108]	; 0x6c
    1250:	str	lr, [sp, #4]
    1254:	str	ip, [sp, #8]
    1258:	bl	320 <check_data>
    125c:	cmp	r0, #0
    1260:	beq	1270 <check_data+0xf50>
    1264:	mvn	r0, #0
    1268:	str	r0, [fp, #-12]
    126c:	b	1a54 <check_data+0x1734>
    1270:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1274:	cmp	r0, #0
    1278:	beq	12a0 <check_data+0xf80>
    127c:	ldr	r0, [fp, #-128]	; 0xffffff80
    1280:	ldr	r1, [fp, #-124]	; 0xffffff84
    1284:	ldr	r2, [fp, #8]
    1288:	ldr	r3, [r2]
    128c:	ldr	ip, [r2, #4]
    1290:	adds	r0, r3, r0
    1294:	adc	r1, ip, r1
    1298:	str	r0, [r2]
    129c:	str	r1, [r2, #4]
    12a0:	b	12a4 <check_data+0xf84>
    12a4:	ldr	r0, [fp, #-672]	; 0xfffffd60
    12a8:	ldr	r1, [fp, #-668]	; 0xfffffd64
    12ac:	sub	r1, r1, #1
    12b0:	cmp	r0, r1
    12b4:	bge	12d8 <check_data+0xfb8>
    12b8:	ldr	r0, [fp, #-16]
    12bc:	bl	0 <coda_cursor_goto_next_record_field>
    12c0:	cmp	r0, #0
    12c4:	beq	12d4 <check_data+0xfb4>
    12c8:	mvn	r0, #0
    12cc:	str	r0, [fp, #-12]
    12d0:	b	1a54 <check_data+0x1734>
    12d4:	b	12d8 <check_data+0xfb8>
    12d8:	b	12dc <check_data+0xfbc>
    12dc:	ldr	r0, [fp, #-672]	; 0xfffffd60
    12e0:	add	r0, r0, #1
    12e4:	str	r0, [fp, #-672]	; 0xfffffd60
    12e8:	b	1138 <check_data+0xe18>
    12ec:	ldr	r0, [fp, #-16]
    12f0:	bl	0 <coda_cursor_goto_parent>
    12f4:	str	r0, [sp, #104]	; 0x68
    12f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    12fc:	cmp	r0, #0
    1300:	beq	14ec <check_data+0x11cc>
    1304:	ldr	r0, [fp, #-44]	; 0xffffffd4
    1308:	ldr	r0, [r0, #32]
    130c:	movw	r1, #0
    1310:	cmp	r0, r1
    1314:	beq	14ec <check_data+0x11cc>
    1318:	bl	0 <coda_get_option_use_fast_size_expressions>
    131c:	str	r0, [fp, #-700]	; 0xfffffd44
    1320:	movw	r0, #1
    1324:	bl	0 <coda_set_option_use_fast_size_expressions>
    1328:	ldr	lr, [fp, #-16]
    132c:	str	r0, [sp, #100]	; 0x64
    1330:	mov	r0, lr
    1334:	sub	r1, fp, #696	; 0x2b8
    1338:	bl	0 <coda_cursor_get_bit_size>
    133c:	cmp	r0, #0
    1340:	beq	1398 <check_data+0x1078>
    1344:	ldr	r0, [fp, #12]
    1348:	ldr	r1, [fp, #-16]
    134c:	ldr	r2, [pc, #1820]	; 1a70 <check_data+0x1750>
    1350:	ldr	r2, [pc, r2]
    1354:	str	r0, [sp, #96]	; 0x60
    1358:	str	r1, [sp, #92]	; 0x5c
    135c:	str	r2, [sp, #88]	; 0x58
    1360:	bl	0 <__aeabi_read_tp>
    1364:	ldr	r1, [sp, #88]	; 0x58
    1368:	ldr	r0, [r0, r1]
    136c:	bl	0 <coda_errno_to_string>
    1370:	ldr	r2, [fp, #16]
    1374:	ldr	r1, [sp, #92]	; 0x5c
    1378:	str	r0, [sp, #84]	; 0x54
    137c:	mov	r0, r1
    1380:	ldr	r1, [sp, #84]	; 0x54
    1384:	ldr	ip, [sp, #96]	; 0x60
    1388:	blx	ip
    138c:	movw	r0, #1
    1390:	str	r0, [fp, #-36]	; 0xffffffdc
    1394:	b	14e0 <check_data+0x11c0>
    1398:	ldr	r0, [fp, #8]
    139c:	ldr	r1, [r0]
    13a0:	ldr	r0, [r0, #4]
    13a4:	ldr	r2, [fp, #-696]	; 0xfffffd48
    13a8:	ldr	r3, [fp, #-692]	; 0xfffffd4c
    13ac:	eor	r0, r0, r3
    13b0:	eor	r1, r1, r2
    13b4:	orr	r0, r1, r0
    13b8:	cmp	r0, #0
    13bc:	beq	14dc <check_data+0x11bc>
    13c0:	b	13c4 <check_data+0x10a4>
    13c4:	ldr	r0, [fp, #8]
    13c8:	ldr	r1, [r0]
    13cc:	ldr	r0, [r0, #4]
    13d0:	lsr	r1, r1, #3
    13d4:	orr	r1, r1, r0, lsl #29
    13d8:	asr	r0, r0, #3
    13dc:	add	lr, sp, #512	; 0x200
    13e0:	add	r2, lr, #214	; 0xd6
    13e4:	str	r0, [sp, #80]	; 0x50
    13e8:	mov	r0, r1
    13ec:	ldr	r1, [sp, #80]	; 0x50
    13f0:	bl	0 <coda_str64>
    13f4:	ldr	r0, [fp, #8]
    13f8:	ldrb	r0, [r0]
    13fc:	tst	r0, #7
    1400:	beq	143c <check_data+0x111c>
    1404:	b	1408 <check_data+0x10e8>
    1408:	add	lr, sp, #512	; 0x200
    140c:	add	r0, lr, #214	; 0xd6
    1410:	str	r0, [sp, #76]	; 0x4c
    1414:	bl	0 <strlen>
    1418:	ldr	lr, [sp, #76]	; 0x4c
    141c:	add	r0, lr, r0
    1420:	ldr	r1, [fp, #8]
    1424:	ldr	r1, [r1]
    1428:	and	r2, r1, #7
    142c:	movw	r1, #0
    1430:	movt	r1, #0
    1434:	bl	0 <sprintf>
    1438:	str	r0, [sp, #72]	; 0x48
    143c:	ldr	r0, [fp, #-696]	; 0xfffffd48
    1440:	ldr	r1, [fp, #-692]	; 0xfffffd4c
    1444:	lsr	r0, r0, #3
    1448:	orr	r0, r0, r1, lsl #29
    144c:	asr	r1, r1, #3
    1450:	add	r2, sp, #696	; 0x2b8
    1454:	bl	0 <coda_str64>
    1458:	ldrb	r0, [fp, #-696]	; 0xfffffd48
    145c:	tst	r0, #7
    1460:	beq	1498 <check_data+0x1178>
    1464:	b	146c <check_data+0x114c>
    1468:	.word	0x00000f84
    146c:	add	r0, sp, #696	; 0x2b8
    1470:	str	r0, [sp, #68]	; 0x44
    1474:	bl	0 <strlen>
    1478:	ldr	lr, [sp, #68]	; 0x44
    147c:	add	r0, lr, r0
    1480:	ldr	r1, [fp, #-696]	; 0xfffffd48
    1484:	and	r2, r1, #7
    1488:	movw	r1, #0
    148c:	movt	r1, #0
    1490:	bl	0 <sprintf>
    1494:	str	r0, [sp, #64]	; 0x40
    1498:	add	r3, sp, #696	; 0x2b8
    149c:	add	lr, sp, #512	; 0x200
    14a0:	add	r2, lr, #214	; 0xd6
    14a4:	add	r0, sp, #756	; 0x2f4
    14a8:	movw	r1, #0
    14ac:	movt	r1, #0
    14b0:	bl	0 <sprintf>
    14b4:	add	r1, sp, #756	; 0x2f4
    14b8:	ldr	r2, [fp, #12]
    14bc:	ldr	r3, [fp, #-16]
    14c0:	ldr	lr, [fp, #16]
    14c4:	str	r0, [sp, #60]	; 0x3c
    14c8:	mov	r0, r3
    14cc:	str	r2, [sp, #56]	; 0x38
    14d0:	mov	r2, lr
    14d4:	ldr	r3, [sp, #56]	; 0x38
    14d8:	blx	r3
    14dc:	b	14e0 <check_data+0x11c0>
    14e0:	ldr	r0, [fp, #-700]	; 0xfffffd44
    14e4:	bl	0 <coda_set_option_use_fast_size_expressions>
    14e8:	str	r0, [sp, #52]	; 0x34
    14ec:	b	1610 <check_data+0x12f0>
    14f0:	b	1610 <check_data+0x12f0>
    14f4:	.word	0x00000ff0
    14f8:	.word	0x00000fd4
    14fc:	movw	r0, #0
    1500:	str	r0, [sp, #688]	; 0x2b0
    1504:	ldr	r0, [fp, #-16]
    1508:	add	r1, sp, #692	; 0x2b4
    150c:	bl	0 <coda_cursor_get_special_type>
    1510:	cmp	r0, #0
    1514:	beq	1524 <check_data+0x1204>
    1518:	mvn	r0, #0
    151c:	str	r0, [fp, #-12]
    1520:	b	1a54 <check_data+0x1734>
    1524:	ldr	r0, [sp, #692]	; 0x2b4
    1528:	cmp	r0, #0
    152c:	beq	1538 <check_data+0x1218>
    1530:	b	1558 <check_data+0x1238>
    1534:	.word	0x00000fdc
    1538:	movw	r0, #0
    153c:	movt	r0, #0
    1540:	movw	r1, #0
    1544:	movt	r1, #0
    1548:	movw	r2, #778	; 0x30a
    154c:	movw	r3, #0
    1550:	movt	r3, #0
    1554:	bl	0 <__assert_fail>
    1558:	ldr	r0, [fp, #-20]	; 0xffffffec
    155c:	ldr	r0, [r0]
    1560:	movw	r1, #0
    1564:	cmp	r0, r1
    1568:	beq	1594 <check_data+0x1274>
    156c:	ldr	r0, [fp, #-20]	; 0xffffffec
    1570:	ldr	r0, [r0]
    1574:	add	r1, sp, #688	; 0x2b0
    1578:	bl	0 <coda_type_get_special_base_type>
    157c:	cmp	r0, #0
    1580:	beq	1590 <check_data+0x1270>
    1584:	mvn	r0, #0
    1588:	str	r0, [fp, #-12]
    158c:	b	1a54 <check_data+0x1734>
    1590:	b	1594 <check_data+0x1274>
    1594:	ldr	r0, [fp, #-16]
    1598:	bl	0 <coda_cursor_use_base_type_of_special_type>
    159c:	cmp	r0, #0
    15a0:	beq	15bc <check_data+0x129c>
    15a4:	mvn	r0, #0
    15a8:	str	r0, [fp, #-12]
    15ac:	b	1a54 <check_data+0x1734>
    15b0:	.word	0x00000ff8
    15b4:	.word	0x00000fdc
    15b8:	.word	0x00000fc0
    15bc:	ldr	r0, [fp, #-16]
    15c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
    15c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
    15c8:	ldr	r1, [fp, #8]
    15cc:	ldr	ip, [fp, #12]
    15d0:	ldr	lr, [fp, #16]
    15d4:	add	r4, sp, #688	; 0x2b0
    15d8:	str	r1, [sp, #48]	; 0x30
    15dc:	mov	r1, r4
    15e0:	ldr	r4, [sp, #48]	; 0x30
    15e4:	str	r4, [sp]
    15e8:	str	ip, [sp, #4]
    15ec:	str	lr, [sp, #8]
    15f0:	bl	320 <check_data>
    15f4:	cmp	r0, #0
    15f8:	beq	160c <check_data+0x12ec>
    15fc:	mvn	r0, #0
    1600:	str	r0, [fp, #-12]
    1604:	b	1a54 <check_data+0x1734>
    1608:	.word	0x00000fdc
    160c:	b	1610 <check_data+0x12f0>
    1610:	b	1614 <check_data+0x12f4>
    1614:	ldr	r0, [fp, #-28]	; 0xffffffe4
    1618:	cmp	r0, #0
    161c:	beq	1a4c <check_data+0x172c>
    1620:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1624:	cmp	r0, #0
    1628:	bne	1a4c <check_data+0x172c>
    162c:	ldr	r0, [fp, #-16]
    1630:	add	r1, r0, #8
    1634:	ldr	r0, [r0, #4]
    1638:	sub	r0, r0, #1
    163c:	add	r0, r1, r0, lsl #4
    1640:	ldr	r0, [r0]
    1644:	ldr	r0, [r0]
    1648:	cmp	r0, #100	; 0x64
    164c:	bne	1a4c <check_data+0x172c>
    1650:	ldr	r0, [fp, #-16]
    1654:	add	r1, r0, #8
    1658:	ldr	r0, [r0, #4]
    165c:	sub	r0, r0, #1
    1660:	add	r0, r1, r0, lsl #4
    1664:	ldr	r0, [r0]
    1668:	ldr	r0, [r0, #8]
    166c:	cmp	r0, #2
    1670:	bne	1a48 <check_data+0x1728>
    1674:	ldr	r0, [fp, #-16]
    1678:	ldr	r1, [r0, #4]
    167c:	add	r0, r0, r1, lsl #4
    1680:	ldr	r0, [r0, #-8]
    1684:	ldr	r0, [r0, #16]
    1688:	asr	r1, r0, #31
    168c:	str	r0, [sp, #680]	; 0x2a8
    1690:	str	r1, [sp, #684]	; 0x2ac
    1694:	mov	r0, #0
    1698:	str	r0, [sp, #676]	; 0x2a4
    169c:	str	r0, [sp, #672]	; 0x2a0
    16a0:	ldr	r0, [fp, #8]
    16a4:	movw	r1, #0
    16a8:	cmp	r0, r1
    16ac:	beq	16c8 <check_data+0x13a8>
    16b0:	ldr	r0, [fp, #8]
    16b4:	ldr	r1, [r0]
    16b8:	ldr	r0, [r0, #4]
    16bc:	str	r0, [sp, #676]	; 0x2a4
    16c0:	str	r1, [sp, #672]	; 0x2a0
    16c4:	b	16ec <check_data+0x13cc>
    16c8:	ldr	r0, [fp, #-16]
    16cc:	add	r1, sp, #672	; 0x2a0
    16d0:	bl	0 <coda_cursor_get_bit_size>
    16d4:	cmp	r0, #0
    16d8:	beq	16e8 <check_data+0x13c8>
    16dc:	mvn	r0, #0
    16e0:	str	r0, [fp, #-12]
    16e4:	b	1a54 <check_data+0x1734>
    16e8:	b	16ec <check_data+0x13cc>
    16ec:	ldr	r0, [fp, #-16]
    16f0:	ldr	r0, [r0]
    16f4:	ldr	r0, [r0, #16]
    16f8:	cmp	r0, #2
    16fc:	bne	1930 <check_data+0x1610>
    1700:	ldr	r0, [sp, #672]	; 0x2a0
    1704:	ldr	r1, [sp, #676]	; 0x2a4
    1708:	lsr	r2, r0, #3
    170c:	orr	r2, r2, r1, lsl #29
    1710:	asr	r1, r1, #3
    1714:	and	r0, r0, #7
    1718:	adds	r3, r2, #1
    171c:	adc	ip, r1, #0
    1720:	cmp	r0, #0
    1724:	movne	r2, r3
    1728:	cmp	r0, #0
    172c:	movne	r1, ip
    1730:	ldr	r0, [sp, #680]	; 0x2a8
    1734:	ldr	r3, [sp, #684]	; 0x2ac
    1738:	subs	r0, r2, r0
    173c:	sbcs	r1, r1, r3
    1740:	str	r0, [sp, #44]	; 0x2c
    1744:	str	r1, [sp, #40]	; 0x28
    1748:	bge	1930 <check_data+0x1610>
    174c:	b	1750 <check_data+0x1430>
    1750:	ldr	r0, [fp, #-16]
    1754:	ldr	r1, [r0, #4]
    1758:	add	r0, r0, r1, lsl #4
    175c:	ldr	r0, [r0, #-8]
    1760:	ldr	r0, [r0, #24]
    1764:	str	r0, [sp, #668]	; 0x29c
    1768:	ldr	r0, [sp, #680]	; 0x2a8
    176c:	ldr	r1, [sp, #684]	; 0x2ac
    1770:	ldr	r2, [sp, #672]	; 0x2a0
    1774:	ldr	r3, [sp, #676]	; 0x2a4
    1778:	lsr	r2, r2, #3
    177c:	orr	r2, r2, r3, lsl #29
    1780:	subs	r0, r0, r2
    1784:	sbc	r1, r1, r3, asr #3
    1788:	str	r0, [sp, #656]	; 0x290
    178c:	str	r1, [sp, #660]	; 0x294
    1790:	ldr	r0, [sp, #656]	; 0x290
    1794:	add	r0, r0, #1
    1798:	bl	0 <malloc>
    179c:	str	r0, [sp, #652]	; 0x28c
    17a0:	ldr	r0, [sp, #652]	; 0x28c
    17a4:	movw	r1, #0
    17a8:	cmp	r0, r1
    17ac:	bne	17e0 <check_data+0x14c0>
    17b0:	ldr	r2, [sp, #656]	; 0x290
    17b4:	mvn	r0, #0
    17b8:	movw	r1, #0
    17bc:	movt	r1, #0
    17c0:	movw	r3, #0
    17c4:	movt	r3, #0
    17c8:	movw	ip, #831	; 0x33f
    17cc:	str	ip, [sp]
    17d0:	bl	0 <coda_set_error>
    17d4:	mvn	r0, #0
    17d8:	str	r0, [fp, #-12]
    17dc:	b	1a54 <check_data+0x1734>
    17e0:	ldr	r0, [fp, #-16]
    17e4:	ldr	r0, [r0]
    17e8:	ldr	r1, [sp, #668]	; 0x29c
    17ec:	asr	r2, r1, #31
    17f0:	ldr	r3, [sp, #672]	; 0x2a0
    17f4:	ldr	ip, [sp, #676]	; 0x2a4
    17f8:	lsr	r3, r3, #3
    17fc:	orr	r3, r3, ip, lsl #29
    1800:	adds	r1, r1, r3
    1804:	adc	r3, r2, ip, asr #3
    1808:	ldr	r2, [sp, #656]	; 0x290
    180c:	ldr	ip, [sp, #660]	; 0x294
    1810:	ldr	lr, [sp, #652]	; 0x28c
    1814:	mov	r4, sp
    1818:	str	lr, [r4, #8]
    181c:	str	ip, [r4, #4]
    1820:	str	r2, [r4]
    1824:	mov	r2, r1
    1828:	bl	270c <read_bytes>
    182c:	cmp	r0, #0
    1830:	beq	1848 <check_data+0x1528>
    1834:	ldr	r0, [sp, #652]	; 0x28c
    1838:	bl	0 <free>
    183c:	mvn	r0, #0
    1840:	str	r0, [fp, #-12]
    1844:	b	1a54 <check_data+0x1734>
    1848:	ldr	r0, [sp, #652]	; 0x28c
    184c:	ldr	r1, [sp, #656]	; 0x290
    1850:	add	r0, r0, r1
    1854:	movw	r1, #0
    1858:	strb	r1, [r0]
    185c:	movw	r0, #0
    1860:	str	r0, [sp, #648]	; 0x288
    1864:	ldr	r0, [sp, #648]	; 0x288
    1868:	ldr	r1, [sp, #656]	; 0x290
    186c:	ldr	r2, [sp, #660]	; 0x294
    1870:	subs	r1, r0, r1
    1874:	rscs	r0, r2, r0, asr #31
    1878:	str	r1, [sp, #36]	; 0x24
    187c:	str	r0, [sp, #32]
    1880:	bge	1924 <check_data+0x1604>
    1884:	b	1888 <check_data+0x1568>
    1888:	ldr	r0, [sp, #652]	; 0x28c
    188c:	ldr	r1, [sp, #648]	; 0x288
    1890:	add	r0, r0, r1
    1894:	ldrb	r0, [r0]
    1898:	cmp	r0, #32
    189c:	beq	1910 <check_data+0x15f0>
    18a0:	ldr	r0, [sp, #652]	; 0x28c
    18a4:	ldr	r1, [sp, #648]	; 0x288
    18a8:	add	r0, r0, r1
    18ac:	ldrb	r0, [r0]
    18b0:	cmp	r0, #9
    18b4:	beq	1910 <check_data+0x15f0>
    18b8:	ldr	r0, [sp, #652]	; 0x28c
    18bc:	ldr	r1, [sp, #648]	; 0x288
    18c0:	add	r0, r0, r1
    18c4:	ldrb	r0, [r0]
    18c8:	cmp	r0, #10
    18cc:	beq	1910 <check_data+0x15f0>
    18d0:	ldr	r0, [sp, #652]	; 0x28c
    18d4:	ldr	r1, [sp, #648]	; 0x288
    18d8:	add	r0, r0, r1
    18dc:	ldrb	r0, [r0]
    18e0:	cmp	r0, #13
    18e4:	beq	1910 <check_data+0x15f0>
    18e8:	ldr	r0, [fp, #12]
    18ec:	ldr	r1, [fp, #-16]
    18f0:	ldr	r2, [fp, #16]
    18f4:	str	r0, [sp, #28]
    18f8:	mov	r0, r1
    18fc:	movw	r1, #0
    1900:	movt	r1, #0
    1904:	ldr	r3, [sp, #28]
    1908:	blx	r3
    190c:	b	1924 <check_data+0x1604>
    1910:	b	1914 <check_data+0x15f4>
    1914:	ldr	r0, [sp, #648]	; 0x288
    1918:	add	r0, r0, #1
    191c:	str	r0, [sp, #648]	; 0x288
    1920:	b	1864 <check_data+0x1544>
    1924:	ldr	r0, [sp, #652]	; 0x28c
    1928:	bl	0 <free>
    192c:	b	1a44 <check_data+0x1724>
    1930:	ldr	r0, [sp, #672]	; 0x2a0
    1934:	ldr	r1, [sp, #676]	; 0x2a4
    1938:	lsr	r2, r0, #3
    193c:	orr	r2, r2, r1, lsl #29
    1940:	asr	r1, r1, #3
    1944:	and	r0, r0, #7
    1948:	adds	r3, r2, #1
    194c:	adc	ip, r1, #0
    1950:	cmp	r0, #0
    1954:	movne	r2, r3
    1958:	cmp	r0, #0
    195c:	movne	r1, ip
    1960:	ldr	r0, [sp, #680]	; 0x2a8
    1964:	ldr	r3, [sp, #684]	; 0x2ac
    1968:	eor	r0, r2, r0
    196c:	eor	r1, r1, r3
    1970:	orr	r0, r0, r1
    1974:	cmp	r0, #0
    1978:	beq	1a40 <check_data+0x1720>
    197c:	b	1984 <check_data+0x1664>
    1980:	.word	0x00000fc8
    1984:	ldr	r0, [sp, #680]	; 0x2a8
    1988:	ldr	r1, [sp, #684]	; 0x2ac
    198c:	add	lr, sp, #256	; 0x100
    1990:	add	r2, lr, #106	; 0x6a
    1994:	bl	0 <coda_str64>
    1998:	ldr	r0, [sp, #672]	; 0x2a0
    199c:	ldr	r1, [sp, #676]	; 0x2a4
    19a0:	lsr	r0, r0, #3
    19a4:	orr	r0, r0, r1, lsl #29
    19a8:	asr	r1, r1, #3
    19ac:	add	r2, sp, #332	; 0x14c
    19b0:	bl	0 <coda_str64>
    19b4:	ldrb	r0, [sp, #672]	; 0x2a0
    19b8:	tst	r0, #7
    19bc:	beq	19fc <check_data+0x16dc>
    19c0:	b	19d0 <check_data+0x16b0>
    19c4:	.word	0x00000fec
    19c8:	.word	0x00000fd0
    19cc:	.word	0x00000fa0
    19d0:	add	r0, sp, #332	; 0x14c
    19d4:	str	r0, [sp, #24]
    19d8:	bl	0 <strlen>
    19dc:	ldr	lr, [sp, #24]
    19e0:	add	r0, lr, r0
    19e4:	ldr	r1, [sp, #672]	; 0x2a0
    19e8:	and	r2, r1, #7
    19ec:	movw	r1, #0
    19f0:	movt	r1, #0
    19f4:	bl	0 <sprintf>
    19f8:	str	r0, [sp, #20]
    19fc:	add	r3, sp, #332	; 0x14c
    1a00:	add	lr, sp, #256	; 0x100
    1a04:	add	r2, lr, #106	; 0x6a
    1a08:	add	r0, sp, #392	; 0x188
    1a0c:	movw	r1, #0
    1a10:	movt	r1, #0
    1a14:	bl	0 <sprintf>
    1a18:	add	r1, sp, #392	; 0x188
    1a1c:	ldr	r2, [fp, #12]
    1a20:	ldr	r3, [fp, #-16]
    1a24:	ldr	lr, [fp, #16]
    1a28:	str	r0, [sp, #16]
    1a2c:	mov	r0, r3
    1a30:	str	r2, [sp, #12]
    1a34:	mov	r2, lr
    1a38:	ldr	r3, [sp, #12]
    1a3c:	blx	r3
    1a40:	b	1a44 <check_data+0x1724>
    1a44:	b	1a48 <check_data+0x1728>
    1a48:	b	1a4c <check_data+0x172c>
    1a4c:	movw	r0, #0
    1a50:	str	r0, [fp, #-12]
    1a54:	ldr	r0, [fp, #-12]
    1a58:	sub	sp, fp, #8
    1a5c:	pop	{r4, sl, fp, pc}
    1a60:	.word	0x00000d84
    1a64:	.word	0x00000d68
    1a68:	.word	0x00000d4c
    1a6c:	.word	0x00000d1c
    1a70:	.word	0x00000718
    1a74:	.word	0x00000894

00001a78 <check_definition>:
    1a78:	push	{r4, r5, fp, lr}
    1a7c:	add	fp, sp, #8
    1a80:	sub	sp, sp, #416	; 0x1a0
    1a84:	str	r0, [fp, #-16]
    1a88:	str	r1, [fp, #-20]	; 0xffffffec
    1a8c:	str	r2, [fp, #-24]	; 0xffffffe8
    1a90:	str	r3, [fp, #-28]	; 0xffffffe4
    1a94:	ldr	r0, [fp, #-20]	; 0xffffffec
    1a98:	ldr	r0, [r0]
    1a9c:	movw	r1, #0
    1aa0:	cmp	r0, r1
    1aa4:	bne	1ab4 <check_definition+0x3c>
    1aa8:	movw	r0, #0
    1aac:	str	r0, [fp, #-12]
    1ab0:	b	26c8 <check_definition+0xc50>
    1ab4:	ldr	r0, [fp, #-16]
    1ab8:	sub	r1, fp, #36	; 0x24
    1abc:	bl	0 <coda_cursor_get_type_class>
    1ac0:	cmp	r0, #0
    1ac4:	beq	1ad4 <check_definition+0x5c>
    1ac8:	mvn	r0, #0
    1acc:	str	r0, [fp, #-12]
    1ad0:	b	26c8 <check_definition+0xc50>
    1ad4:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ad8:	ldr	r0, [r0]
    1adc:	sub	r1, fp, #32
    1ae0:	bl	0 <coda_type_get_class>
    1ae4:	cmp	r0, #0
    1ae8:	beq	1af8 <check_definition+0x80>
    1aec:	mvn	r0, #0
    1af0:	str	r0, [fp, #-12]
    1af4:	b	26c8 <check_definition+0xc50>
    1af8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1afc:	ldr	r1, [fp, #-32]	; 0xffffffe0
    1b00:	cmp	r0, r1
    1b04:	beq	1bb8 <check_definition+0x140>
    1b08:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1b0c:	bl	0 <coda_type_get_class_name>
    1b10:	ldr	lr, [fp, #-32]	; 0xffffffe0
    1b14:	str	r0, [fp, #-148]	; 0xffffff6c
    1b18:	mov	r0, lr
    1b1c:	bl	0 <coda_type_get_class_name>
    1b20:	movw	r1, #0
    1b24:	movt	r1, #0
    1b28:	movw	lr, #65236	; 0xfed4
    1b2c:	movt	lr, #65535	; 0xffff
    1b30:	str	r0, [fp, #-152]	; 0xffffff68
    1b34:	mov	r0, lr
    1b38:	ldr	r2, [fp, #-148]	; 0xffffff6c
    1b3c:	ldr	r3, [fp, #-152]	; 0xffffff68
    1b40:	bl	0 <coda_set_error>
    1b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1b48:	ldr	r1, [fp, #-16]
    1b4c:	ldr	r2, [pc, #2996]	; 2708 <check_definition+0xc90>
    1b50:	ldr	r2, [pc, r2]
    1b54:	str	r0, [fp, #-156]	; 0xffffff64
    1b58:	str	r1, [fp, #-160]	; 0xffffff60
    1b5c:	str	r2, [fp, #-164]	; 0xffffff5c
    1b60:	bl	0 <__aeabi_read_tp>
    1b64:	ldr	r1, [fp, #-164]	; 0xffffff5c
    1b68:	ldr	r2, [r0, r1]
    1b6c:	str	r0, [fp, #-168]	; 0xffffff58
    1b70:	mov	r0, r2
    1b74:	bl	0 <coda_errno_to_string>
    1b78:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1b7c:	ldr	r1, [fp, #-160]	; 0xffffff60
    1b80:	str	r0, [fp, #-172]	; 0xffffff54
    1b84:	mov	r0, r1
    1b88:	ldr	r1, [fp, #-172]	; 0xffffff54
    1b8c:	ldr	r3, [fp, #-156]	; 0xffffff64
    1b90:	blx	r3
    1b94:	mov	r0, #0
    1b98:	ldr	r1, [fp, #-168]	; 0xffffff58
    1b9c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    1ba0:	str	r0, [r1, r2]
    1ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
    1ba8:	movw	r3, #0
    1bac:	str	r3, [r0]
    1bb0:	str	r3, [fp, #-12]
    1bb4:	b	26c8 <check_definition+0xc50>
    1bb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
    1bbc:	cmp	r0, #6
    1bc0:	str	r0, [fp, #-176]	; 0xffffff50
    1bc4:	bhi	26c0 <check_definition+0xc48>
    1bc8:	add	r0, pc, #8
    1bcc:	ldr	r1, [fp, #-176]	; 0xffffff50
    1bd0:	ldr	r0, [r0, r1, lsl #2]
    1bd4:	mov	pc, r0
    1bd8:	.word	0x00001f64
    1bdc:	.word	0x00001bf4
    1be0:	.word	0x000024dc
    1be4:	.word	0x000024dc
    1be8:	.word	0x000025bc
    1bec:	.word	0x000025c0
    1bf0:	.word	0x000025c4
    1bf4:	sub	r2, fp, #72	; 0x48
    1bf8:	ldr	r0, [fp, #-20]	; 0xffffffec
    1bfc:	ldr	r0, [r0]
    1c00:	str	r0, [fp, #-40]	; 0xffffffd8
    1c04:	ldr	r0, [fp, #-16]
    1c08:	sub	r1, fp, #76	; 0x4c
    1c0c:	bl	0 <coda_cursor_get_array_dim>
    1c10:	cmp	r0, #0
    1c14:	beq	1c24 <check_definition+0x1ac>
    1c18:	mvn	r0, #0
    1c1c:	str	r0, [fp, #-12]
    1c20:	b	26c8 <check_definition+0xc50>
    1c24:	ldr	r0, [fp, #-76]	; 0xffffffb4
    1c28:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1c2c:	ldr	r1, [r1, #48]	; 0x30
    1c30:	cmp	r0, r1
    1c34:	beq	1cc4 <check_definition+0x24c>
    1c38:	ldr	r2, [fp, #-76]	; 0xffffffb4
    1c3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1c40:	ldr	r3, [r0, #48]	; 0x30
    1c44:	movw	r1, #0
    1c48:	movt	r1, #0
    1c4c:	movw	r0, #65236	; 0xfed4
    1c50:	movt	r0, #65535	; 0xffff
    1c54:	bl	0 <coda_set_error>
    1c58:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1c5c:	ldr	r1, [fp, #-16]
    1c60:	ldr	r2, [pc, #2716]	; 2704 <check_definition+0xc8c>
    1c64:	ldr	r2, [pc, r2]
    1c68:	str	r0, [fp, #-180]	; 0xffffff4c
    1c6c:	str	r1, [fp, #-184]	; 0xffffff48
    1c70:	str	r2, [fp, #-188]	; 0xffffff44
    1c74:	bl	0 <__aeabi_read_tp>
    1c78:	ldr	r1, [fp, #-188]	; 0xffffff44
    1c7c:	ldr	r2, [r0, r1]
    1c80:	str	r0, [fp, #-192]	; 0xffffff40
    1c84:	mov	r0, r2
    1c88:	bl	0 <coda_errno_to_string>
    1c8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1c90:	ldr	r1, [fp, #-184]	; 0xffffff48
    1c94:	str	r0, [fp, #-196]	; 0xffffff3c
    1c98:	mov	r0, r1
    1c9c:	ldr	r1, [fp, #-196]	; 0xffffff3c
    1ca0:	ldr	r3, [fp, #-180]	; 0xffffff4c
    1ca4:	blx	r3
    1ca8:	mov	r0, #0
    1cac:	ldr	r1, [fp, #-192]	; 0xffffff40
    1cb0:	ldr	r2, [fp, #-188]	; 0xffffff44
    1cb4:	str	r0, [r1, r2]
    1cb8:	movw	r0, #0
    1cbc:	str	r0, [fp, #-12]
    1cc0:	b	26c8 <check_definition+0xc50>
    1cc4:	movw	r0, #0
    1cc8:	str	r0, [fp, #-80]	; 0xffffffb0
    1ccc:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1cd0:	ldr	r1, [fp, #-76]	; 0xffffffb4
    1cd4:	cmp	r0, r1
    1cd8:	bge	1f60 <check_definition+0x4e8>
    1cdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1ce0:	add	r0, r0, #52	; 0x34
    1ce4:	ldr	r1, [fp, #-80]	; 0xffffffb0
    1ce8:	add	r0, r0, r1, lsl #2
    1cec:	ldr	r0, [r0]
    1cf0:	cmp	r0, #0
    1cf4:	blt	1dc0 <check_definition+0x348>
    1cf8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1cfc:	sub	r1, fp, #72	; 0x48
    1d00:	ldr	r1, [r1, r0, lsl #2]
    1d04:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1d08:	add	r2, r2, #52	; 0x34
    1d0c:	add	r0, r2, r0, lsl #2
    1d10:	ldr	r0, [r0]
    1d14:	cmp	r1, r0
    1d18:	beq	1dbc <check_definition+0x344>
    1d1c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1d20:	sub	r1, fp, #72	; 0x48
    1d24:	ldr	r3, [r1, r0, lsl #2]
    1d28:	ldr	r1, [fp, #-40]	; 0xffffffd8
    1d2c:	add	r1, r1, r0, lsl #2
    1d30:	ldr	r1, [r1, #52]	; 0x34
    1d34:	mov	r2, sp
    1d38:	str	r1, [r2]
    1d3c:	movw	r1, #0
    1d40:	movt	r1, #0
    1d44:	movw	r2, #65236	; 0xfed4
    1d48:	movt	r2, #65535	; 0xffff
    1d4c:	str	r0, [fp, #-200]	; 0xffffff38
    1d50:	mov	r0, r2
    1d54:	ldr	r2, [fp, #-200]	; 0xffffff38
    1d58:	bl	0 <coda_set_error>
    1d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1d60:	ldr	r1, [fp, #-16]
    1d64:	ldr	r2, [pc, #2452]	; 2700 <check_definition+0xc88>
    1d68:	ldr	r2, [pc, r2]
    1d6c:	str	r0, [fp, #-204]	; 0xffffff34
    1d70:	str	r1, [fp, #-208]	; 0xffffff30
    1d74:	str	r2, [sp, #212]	; 0xd4
    1d78:	bl	0 <__aeabi_read_tp>
    1d7c:	ldr	r1, [sp, #212]	; 0xd4
    1d80:	ldr	r2, [r0, r1]
    1d84:	str	r0, [sp, #208]	; 0xd0
    1d88:	mov	r0, r2
    1d8c:	bl	0 <coda_errno_to_string>
    1d90:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1d94:	ldr	r1, [fp, #-208]	; 0xffffff30
    1d98:	str	r0, [sp, #204]	; 0xcc
    1d9c:	mov	r0, r1
    1da0:	ldr	r1, [sp, #204]	; 0xcc
    1da4:	ldr	r3, [fp, #-204]	; 0xffffff34
    1da8:	blx	r3
    1dac:	mov	r0, #0
    1db0:	ldr	r1, [sp, #208]	; 0xd0
    1db4:	ldr	r2, [sp, #212]	; 0xd4
    1db8:	str	r0, [r1, r2]
    1dbc:	b	1f4c <check_definition+0x4d4>
    1dc0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1dc4:	add	r0, r0, #84	; 0x54
    1dc8:	ldr	r1, [fp, #-80]	; 0xffffffb0
    1dcc:	add	r0, r0, r1, lsl #2
    1dd0:	ldr	r0, [r0]
    1dd4:	movw	r1, #0
    1dd8:	cmp	r0, r1
    1ddc:	beq	1f48 <check_definition+0x4d0>
    1de0:	ldr	r0, [fp, #-40]	; 0xffffffd8
    1de4:	add	r0, r0, #84	; 0x54
    1de8:	ldr	r1, [fp, #-80]	; 0xffffffb0
    1dec:	add	r0, r0, r1, lsl #2
    1df0:	ldr	r0, [r0]
    1df4:	ldr	r1, [fp, #-16]
    1df8:	sub	r2, fp, #88	; 0x58
    1dfc:	bl	0 <coda_expression_eval_integer>
    1e00:	cmp	r0, #0
    1e04:	beq	1e7c <check_definition+0x404>
    1e08:	ldr	r1, [fp, #-80]	; 0xffffffb0
    1e0c:	movw	r0, #0
    1e10:	movt	r0, #0
    1e14:	bl	0 <coda_add_error_message>
    1e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1e1c:	ldr	r1, [fp, #-16]
    1e20:	ldr	lr, [pc, #2260]	; 26fc <check_definition+0xc84>
    1e24:	ldr	lr, [pc, lr]
    1e28:	str	r0, [sp, #200]	; 0xc8
    1e2c:	str	r1, [sp, #196]	; 0xc4
    1e30:	str	lr, [sp, #192]	; 0xc0
    1e34:	bl	0 <__aeabi_read_tp>
    1e38:	ldr	r1, [sp, #192]	; 0xc0
    1e3c:	ldr	ip, [r0, r1]
    1e40:	str	r0, [sp, #188]	; 0xbc
    1e44:	mov	r0, ip
    1e48:	bl	0 <coda_errno_to_string>
    1e4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1e50:	ldr	r1, [sp, #196]	; 0xc4
    1e54:	str	r0, [sp, #184]	; 0xb8
    1e58:	mov	r0, r1
    1e5c:	ldr	r1, [sp, #184]	; 0xb8
    1e60:	ldr	ip, [sp, #200]	; 0xc8
    1e64:	blx	ip
    1e68:	mov	r0, #0
    1e6c:	ldr	r1, [sp, #188]	; 0xbc
    1e70:	ldr	r2, [sp, #192]	; 0xc0
    1e74:	str	r0, [r1, r2]
    1e78:	b	1f44 <check_definition+0x4cc>
    1e7c:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1e80:	sub	r1, fp, #72	; 0x48
    1e84:	ldr	r0, [r1, r0, lsl #2]
    1e88:	ldr	r1, [fp, #-88]	; 0xffffffa8
    1e8c:	ldr	r2, [fp, #-84]	; 0xffffffac
    1e90:	eor	r2, r2, r0, asr #31
    1e94:	eor	r0, r0, r1
    1e98:	orr	r0, r0, r2
    1e9c:	cmp	r0, #0
    1ea0:	beq	1f40 <check_definition+0x4c8>
    1ea4:	b	1ea8 <check_definition+0x430>
    1ea8:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1eac:	sub	r1, fp, #72	; 0x48
    1eb0:	ldr	r3, [r1, r0, lsl #2]
    1eb4:	ldr	r1, [fp, #-88]	; 0xffffffa8
    1eb8:	mov	r2, sp
    1ebc:	str	r1, [r2]
    1ec0:	movw	r1, #0
    1ec4:	movt	r1, #0
    1ec8:	movw	r2, #65236	; 0xfed4
    1ecc:	movt	r2, #65535	; 0xffff
    1ed0:	str	r0, [sp, #180]	; 0xb4
    1ed4:	mov	r0, r2
    1ed8:	ldr	r2, [sp, #180]	; 0xb4
    1edc:	bl	0 <coda_set_error>
    1ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    1ee4:	ldr	r1, [fp, #-16]
    1ee8:	ldr	r2, [pc, #2056]	; 26f8 <check_definition+0xc80>
    1eec:	ldr	r2, [pc, r2]
    1ef0:	str	r0, [sp, #176]	; 0xb0
    1ef4:	str	r1, [sp, #172]	; 0xac
    1ef8:	str	r2, [sp, #168]	; 0xa8
    1efc:	bl	0 <__aeabi_read_tp>
    1f00:	ldr	r1, [sp, #168]	; 0xa8
    1f04:	ldr	r2, [r0, r1]
    1f08:	str	r0, [sp, #164]	; 0xa4
    1f0c:	mov	r0, r2
    1f10:	bl	0 <coda_errno_to_string>
    1f14:	ldr	r2, [fp, #-28]	; 0xffffffe4
    1f18:	ldr	r1, [sp, #172]	; 0xac
    1f1c:	str	r0, [sp, #160]	; 0xa0
    1f20:	mov	r0, r1
    1f24:	ldr	r1, [sp, #160]	; 0xa0
    1f28:	ldr	r3, [sp, #176]	; 0xb0
    1f2c:	blx	r3
    1f30:	mov	r0, #0
    1f34:	ldr	r1, [sp, #164]	; 0xa4
    1f38:	ldr	r2, [sp, #168]	; 0xa8
    1f3c:	str	r0, [r1, r2]
    1f40:	b	1f44 <check_definition+0x4cc>
    1f44:	b	1f48 <check_definition+0x4d0>
    1f48:	b	1f4c <check_definition+0x4d4>
    1f4c:	b	1f50 <check_definition+0x4d8>
    1f50:	ldr	r0, [fp, #-80]	; 0xffffffb0
    1f54:	add	r0, r0, #1
    1f58:	str	r0, [fp, #-80]	; 0xffffffb0
    1f5c:	b	1ccc <check_definition+0x254>
    1f60:	b	26c0 <check_definition+0xc48>
    1f64:	ldr	r0, [fp, #-20]	; 0xffffffec
    1f68:	ldr	r0, [r0]
    1f6c:	str	r0, [fp, #-92]	; 0xffffffa4
    1f70:	ldr	r0, [fp, #-16]
    1f74:	sub	r1, fp, #96	; 0x60
    1f78:	bl	0 <coda_cursor_get_type>
    1f7c:	cmp	r0, #0
    1f80:	beq	1f90 <check_definition+0x518>
    1f84:	mvn	r0, #0
    1f88:	str	r0, [fp, #-12]
    1f8c:	b	26c8 <check_definition+0xc50>
    1f90:	movw	r0, #0
    1f94:	str	r0, [fp, #-104]	; 0xffffff98
    1f98:	ldr	r0, [fp, #-104]	; 0xffffff98
    1f9c:	ldr	r1, [fp, #-92]	; 0xffffffa4
    1fa0:	ldr	r1, [r1, #48]	; 0x30
    1fa4:	cmp	r0, r1
    1fa8:	bge	23b0 <check_definition+0x938>
    1fac:	mov	r0, #1
    1fb0:	str	r0, [fp, #-108]	; 0xffffff94
    1fb4:	str	r0, [fp, #-112]	; 0xffffff90
    1fb8:	ldr	r0, [fp, #-16]
    1fbc:	ldr	r1, [fp, #-92]	; 0xffffffa4
    1fc0:	ldr	r1, [r1, #52]	; 0x34
    1fc4:	ldr	r2, [fp, #-104]	; 0xffffff98
    1fc8:	add	r1, r1, r2, lsl #2
    1fcc:	ldr	r1, [r1]
    1fd0:	ldr	r1, [r1]
    1fd4:	sub	r2, fp, #116	; 0x74
    1fd8:	bl	0 <coda_cursor_get_record_field_index_from_name>
    1fdc:	cmp	r0, #0
    1fe0:	beq	2038 <check_definition+0x5c0>
    1fe4:	ldr	r0, [pc, #1784]	; 26e4 <check_definition+0xc6c>
    1fe8:	ldr	r0, [pc, r0]
    1fec:	str	r0, [sp, #156]	; 0x9c
    1ff0:	bl	0 <__aeabi_read_tp>
    1ff4:	ldr	ip, [sp, #156]	; 0x9c
    1ff8:	ldr	r0, [r0, ip]
    1ffc:	cmn	r0, #102	; 0x66
    2000:	beq	2010 <check_definition+0x598>
    2004:	mvn	r0, #0
    2008:	str	r0, [fp, #-12]
    200c:	b	26c8 <check_definition+0xc50>
    2010:	ldr	r0, [pc, #1744]	; 26e8 <check_definition+0xc70>
    2014:	ldr	r0, [pc, r0]
    2018:	str	r0, [sp, #152]	; 0x98
    201c:	bl	0 <__aeabi_read_tp>
    2020:	mov	ip, #0
    2024:	ldr	lr, [sp, #152]	; 0x98
    2028:	str	ip, [r0, lr]
    202c:	movw	r0, #0
    2030:	str	r0, [fp, #-112]	; 0xffffff90
    2034:	b	2060 <check_definition+0x5e8>
    2038:	ldr	r0, [fp, #-16]
    203c:	ldr	r1, [fp, #-116]	; 0xffffff8c
    2040:	sub	r2, fp, #112	; 0x70
    2044:	bl	0 <coda_cursor_get_record_field_available_status>
    2048:	cmp	r0, #0
    204c:	beq	205c <check_definition+0x5e4>
    2050:	mvn	r0, #0
    2054:	str	r0, [fp, #-12]
    2058:	b	26c8 <check_definition+0xc50>
    205c:	b	2060 <check_definition+0x5e8>
    2060:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2064:	ldr	r0, [r0, #52]	; 0x34
    2068:	ldr	r1, [fp, #-104]	; 0xffffff98
    206c:	add	r0, r0, r1, lsl #2
    2070:	ldr	r0, [r0]
    2074:	ldrsb	r0, [r0, #16]
    2078:	cmp	r0, #0
    207c:	beq	2160 <check_definition+0x6e8>
    2080:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2084:	ldr	r0, [r0, #52]	; 0x34
    2088:	ldr	r1, [fp, #-104]	; 0xffffff98
    208c:	add	r0, r0, r1, lsl #2
    2090:	ldr	r0, [r0]
    2094:	ldr	r0, [r0, #20]
    2098:	movw	r1, #0
    209c:	cmp	r0, r1
    20a0:	beq	2154 <check_definition+0x6dc>
    20a4:	ldr	r0, [fp, #-92]	; 0xffffffa4
    20a8:	ldr	r0, [r0, #52]	; 0x34
    20ac:	ldr	r1, [fp, #-104]	; 0xffffff98
    20b0:	add	r0, r0, r1, lsl #2
    20b4:	ldr	r0, [r0]
    20b8:	ldr	r0, [r0, #20]
    20bc:	ldr	r1, [fp, #-16]
    20c0:	sub	r2, fp, #108	; 0x6c
    20c4:	bl	0 <coda_expression_eval_bool>
    20c8:	cmp	r0, #0
    20cc:	beq	2150 <check_definition+0x6d8>
    20d0:	ldr	r0, [fp, #-92]	; 0xffffffa4
    20d4:	ldr	r0, [r0, #52]	; 0x34
    20d8:	ldr	r1, [fp, #-104]	; 0xffffff98
    20dc:	ldr	r0, [r0, r1, lsl #2]
    20e0:	ldr	r1, [r0]
    20e4:	movw	r0, #0
    20e8:	movt	r0, #0
    20ec:	bl	0 <coda_add_error_message>
    20f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    20f4:	ldr	r1, [fp, #-16]
    20f8:	ldr	lr, [pc, #1516]	; 26ec <check_definition+0xc74>
    20fc:	ldr	lr, [pc, lr]
    2100:	str	r0, [sp, #148]	; 0x94
    2104:	str	r1, [sp, #144]	; 0x90
    2108:	str	lr, [sp, #140]	; 0x8c
    210c:	bl	0 <__aeabi_read_tp>
    2110:	ldr	r1, [sp, #140]	; 0x8c
    2114:	ldr	ip, [r0, r1]
    2118:	str	r0, [sp, #136]	; 0x88
    211c:	mov	r0, ip
    2120:	bl	0 <coda_errno_to_string>
    2124:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2128:	ldr	r1, [sp, #144]	; 0x90
    212c:	str	r0, [sp, #132]	; 0x84
    2130:	mov	r0, r1
    2134:	ldr	r1, [sp, #132]	; 0x84
    2138:	ldr	ip, [sp, #148]	; 0x94
    213c:	blx	ip
    2140:	mov	r0, #0
    2144:	ldr	r1, [sp, #136]	; 0x88
    2148:	ldr	r2, [sp, #140]	; 0x8c
    214c:	str	r0, [r1, r2]
    2150:	b	215c <check_definition+0x6e4>
    2154:	mvn	r0, #0
    2158:	str	r0, [fp, #-108]	; 0xffffff94
    215c:	b	2160 <check_definition+0x6e8>
    2160:	ldr	r0, [fp, #-108]	; 0xffffff94
    2164:	cmn	r0, #1
    2168:	beq	2248 <check_definition+0x7d0>
    216c:	ldr	r0, [fp, #-112]	; 0xffffff90
    2170:	ldr	r1, [fp, #-108]	; 0xffffff94
    2174:	cmp	r0, r1
    2178:	beq	2244 <check_definition+0x7cc>
    217c:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2180:	ldr	r0, [r0, #52]	; 0x34
    2184:	ldr	r1, [fp, #-104]	; 0xffffff98
    2188:	ldr	r0, [r0, r1, lsl #2]
    218c:	ldr	r2, [r0]
    2190:	ldr	r0, [fp, #-112]	; 0xffffff90
    2194:	movw	r1, #0
    2198:	movt	r1, #0
    219c:	movw	r3, #0
    21a0:	movt	r3, #0
    21a4:	cmp	r0, #0
    21a8:	mov	r0, r3
    21ac:	movne	r0, r1
    21b0:	ldr	ip, [fp, #-108]	; 0xffffff94
    21b4:	cmp	ip, #0
    21b8:	movne	r3, r1
    21bc:	mov	r1, sp
    21c0:	str	r3, [r1]
    21c4:	movw	r1, #0
    21c8:	movt	r1, #0
    21cc:	movw	r3, #65236	; 0xfed4
    21d0:	movt	r3, #65535	; 0xffff
    21d4:	str	r0, [sp, #128]	; 0x80
    21d8:	mov	r0, r3
    21dc:	ldr	r3, [sp, #128]	; 0x80
    21e0:	bl	0 <coda_set_error>
    21e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
    21e8:	ldr	r1, [fp, #-16]
    21ec:	ldr	r2, [pc, #1276]	; 26f0 <check_definition+0xc78>
    21f0:	ldr	r2, [pc, r2]
    21f4:	str	r0, [sp, #124]	; 0x7c
    21f8:	str	r1, [sp, #120]	; 0x78
    21fc:	str	r2, [sp, #116]	; 0x74
    2200:	bl	0 <__aeabi_read_tp>
    2204:	ldr	r1, [sp, #116]	; 0x74
    2208:	ldr	r2, [r0, r1]
    220c:	str	r0, [sp, #112]	; 0x70
    2210:	mov	r0, r2
    2214:	bl	0 <coda_errno_to_string>
    2218:	ldr	r2, [fp, #-28]	; 0xffffffe4
    221c:	ldr	r1, [sp, #120]	; 0x78
    2220:	str	r0, [sp, #108]	; 0x6c
    2224:	mov	r0, r1
    2228:	ldr	r1, [sp, #108]	; 0x6c
    222c:	ldr	r3, [sp, #124]	; 0x7c
    2230:	blx	r3
    2234:	mov	r0, #0
    2238:	ldr	r1, [sp, #112]	; 0x70
    223c:	ldr	r2, [sp, #116]	; 0x74
    2240:	str	r0, [r1, r2]
    2244:	b	2248 <check_definition+0x7d0>
    2248:	ldr	r0, [fp, #-112]	; 0xffffff90
    224c:	cmp	r0, #0
    2250:	beq	239c <check_definition+0x924>
    2254:	ldr	r0, [fp, #-108]	; 0xffffff94
    2258:	cmp	r0, #0
    225c:	beq	239c <check_definition+0x924>
    2260:	ldr	r0, [fp, #-96]	; 0xffffffa0
    2264:	ldr	r1, [fp, #-116]	; 0xffffff8c
    2268:	sub	r2, fp, #124	; 0x7c
    226c:	bl	0 <coda_type_get_record_field_real_name>
    2270:	cmp	r0, #0
    2274:	beq	2284 <check_definition+0x80c>
    2278:	mvn	r0, #0
    227c:	str	r0, [fp, #-12]
    2280:	b	26c8 <check_definition+0xc50>
    2284:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2288:	ldr	r0, [r0, #52]	; 0x34
    228c:	ldr	r1, [fp, #-104]	; 0xffffff98
    2290:	add	r0, r0, r1, lsl #2
    2294:	ldr	r0, [r0]
    2298:	ldr	r0, [r0, #4]
    229c:	movw	r1, #0
    22a0:	cmp	r0, r1
    22a4:	beq	22c8 <check_definition+0x850>
    22a8:	ldr	r0, [fp, #-92]	; 0xffffffa4
    22ac:	ldr	r0, [r0, #52]	; 0x34
    22b0:	ldr	r1, [fp, #-104]	; 0xffffff98
    22b4:	add	r0, r0, r1, lsl #2
    22b8:	ldr	r0, [r0]
    22bc:	ldr	r0, [r0, #4]
    22c0:	str	r0, [sp, #104]	; 0x68
    22c4:	b	22e4 <check_definition+0x86c>
    22c8:	ldr	r0, [fp, #-92]	; 0xffffffa4
    22cc:	ldr	r0, [r0, #52]	; 0x34
    22d0:	ldr	r1, [fp, #-104]	; 0xffffff98
    22d4:	add	r0, r0, r1, lsl #2
    22d8:	ldr	r0, [r0]
    22dc:	ldr	r0, [r0]
    22e0:	str	r0, [sp, #104]	; 0x68
    22e4:	ldr	r0, [sp, #104]	; 0x68
    22e8:	str	r0, [fp, #-120]	; 0xffffff88
    22ec:	ldr	r0, [fp, #-124]	; 0xffffff84
    22f0:	ldr	r1, [fp, #-120]	; 0xffffff88
    22f4:	bl	0 <strcmp>
    22f8:	cmp	r0, #0
    22fc:	beq	2398 <check_definition+0x920>
    2300:	ldr	r0, [fp, #-92]	; 0xffffffa4
    2304:	ldr	r0, [r0, #52]	; 0x34
    2308:	ldr	r1, [fp, #-104]	; 0xffffff98
    230c:	ldr	r0, [r0, r1, lsl #2]
    2310:	ldr	r2, [r0]
    2314:	ldr	r3, [fp, #-124]	; 0xffffff84
    2318:	ldr	r0, [fp, #-120]	; 0xffffff88
    231c:	mov	r1, sp
    2320:	str	r0, [r1]
    2324:	movw	r1, #0
    2328:	movt	r1, #0
    232c:	movw	r0, #65236	; 0xfed4
    2330:	movt	r0, #65535	; 0xffff
    2334:	bl	0 <coda_set_error>
    2338:	ldr	r0, [fp, #-24]	; 0xffffffe8
    233c:	ldr	r1, [fp, #-16]
    2340:	ldr	r2, [pc, #940]	; 26f4 <check_definition+0xc7c>
    2344:	ldr	r2, [pc, r2]
    2348:	str	r0, [sp, #100]	; 0x64
    234c:	str	r1, [sp, #96]	; 0x60
    2350:	str	r2, [sp, #92]	; 0x5c
    2354:	bl	0 <__aeabi_read_tp>
    2358:	ldr	r1, [sp, #92]	; 0x5c
    235c:	ldr	r2, [r0, r1]
    2360:	str	r0, [sp, #88]	; 0x58
    2364:	mov	r0, r2
    2368:	bl	0 <coda_errno_to_string>
    236c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2370:	ldr	r1, [sp, #96]	; 0x60
    2374:	str	r0, [sp, #84]	; 0x54
    2378:	mov	r0, r1
    237c:	ldr	r1, [sp, #84]	; 0x54
    2380:	ldr	r3, [sp, #100]	; 0x64
    2384:	blx	r3
    2388:	mov	r0, #0
    238c:	ldr	r1, [sp, #88]	; 0x58
    2390:	ldr	r2, [sp, #92]	; 0x5c
    2394:	str	r0, [r1, r2]
    2398:	b	239c <check_definition+0x924>
    239c:	b	23a0 <check_definition+0x928>
    23a0:	ldr	r0, [fp, #-104]	; 0xffffff98
    23a4:	add	r0, r0, #1
    23a8:	str	r0, [fp, #-104]	; 0xffffff98
    23ac:	b	1f98 <check_definition+0x520>
    23b0:	ldr	r0, [fp, #-16]
    23b4:	sub	r1, fp, #100	; 0x64
    23b8:	bl	0 <coda_cursor_get_num_elements>
    23bc:	cmp	r0, #0
    23c0:	beq	23d0 <check_definition+0x958>
    23c4:	mvn	r0, #0
    23c8:	str	r0, [fp, #-12]
    23cc:	b	26c8 <check_definition+0xc50>
    23d0:	movw	r0, #0
    23d4:	str	r0, [fp, #-104]	; 0xffffff98
    23d8:	ldr	r0, [fp, #-104]	; 0xffffff98
    23dc:	ldr	r1, [fp, #-100]	; 0xffffff9c
    23e0:	cmp	r0, r1
    23e4:	bge	24d8 <check_definition+0xa60>
    23e8:	ldr	r0, [fp, #-96]	; 0xffffffa0
    23ec:	ldr	r1, [fp, #-104]	; 0xffffff98
    23f0:	sub	r2, fp, #128	; 0x80
    23f4:	bl	0 <coda_type_get_record_field_name>
    23f8:	cmp	r0, #0
    23fc:	beq	240c <check_definition+0x994>
    2400:	mvn	r0, #0
    2404:	str	r0, [fp, #-12]
    2408:	b	26c8 <check_definition+0xc50>
    240c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2410:	ldr	r0, [r0]
    2414:	ldr	r1, [fp, #-128]	; 0xffffff80
    2418:	sub	r2, fp, #132	; 0x84
    241c:	bl	0 <coda_type_get_record_field_index_from_name>
    2420:	cmp	r0, #0
    2424:	beq	24c4 <check_definition+0xa4c>
    2428:	ldr	r0, [pc, #684]	; 26dc <check_definition+0xc64>
    242c:	ldr	r0, [pc, r0]
    2430:	str	r0, [sp, #80]	; 0x50
    2434:	bl	0 <__aeabi_read_tp>
    2438:	ldr	ip, [sp, #80]	; 0x50
    243c:	ldr	r0, [r0, ip]
    2440:	cmn	r0, #102	; 0x66
    2444:	bne	24c0 <check_definition+0xa48>
    2448:	ldr	r2, [fp, #-128]	; 0xffffff80
    244c:	movw	r1, #0
    2450:	movt	r1, #0
    2454:	movw	r0, #65236	; 0xfed4
    2458:	movt	r0, #65535	; 0xffff
    245c:	bl	0 <coda_set_error>
    2460:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2464:	ldr	r1, [fp, #-16]
    2468:	ldr	r2, [pc, #624]	; 26e0 <check_definition+0xc68>
    246c:	ldr	r2, [pc, r2]
    2470:	str	r0, [sp, #76]	; 0x4c
    2474:	str	r1, [sp, #72]	; 0x48
    2478:	str	r2, [sp, #68]	; 0x44
    247c:	bl	0 <__aeabi_read_tp>
    2480:	ldr	r1, [sp, #68]	; 0x44
    2484:	ldr	r2, [r0, r1]
    2488:	str	r0, [sp, #64]	; 0x40
    248c:	mov	r0, r2
    2490:	bl	0 <coda_errno_to_string>
    2494:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2498:	ldr	r1, [sp, #72]	; 0x48
    249c:	str	r0, [sp, #60]	; 0x3c
    24a0:	mov	r0, r1
    24a4:	ldr	r1, [sp, #60]	; 0x3c
    24a8:	ldr	ip, [sp, #76]	; 0x4c
    24ac:	blx	ip
    24b0:	mov	r0, #0
    24b4:	ldr	r1, [sp, #64]	; 0x40
    24b8:	ldr	r2, [sp, #68]	; 0x44
    24bc:	str	r0, [r1, r2]
    24c0:	b	24c4 <check_definition+0xa4c>
    24c4:	b	24c8 <check_definition+0xa50>
    24c8:	ldr	r0, [fp, #-104]	; 0xffffff98
    24cc:	add	r0, r0, #1
    24d0:	str	r0, [fp, #-104]	; 0xffffff98
    24d4:	b	23d8 <check_definition+0x960>
    24d8:	b	26c0 <check_definition+0xc48>
    24dc:	ldr	r0, [fp, #-16]
    24e0:	sub	r1, fp, #136	; 0x88
    24e4:	bl	0 <coda_cursor_get_read_type>
    24e8:	cmp	r0, #0
    24ec:	beq	24fc <check_definition+0xa84>
    24f0:	mvn	r0, #0
    24f4:	str	r0, [fp, #-12]
    24f8:	b	26c8 <check_definition+0xc50>
    24fc:	ldr	r0, [fp, #-136]	; 0xffffff78
    2500:	ldr	r1, [fp, #-20]	; 0xffffffec
    2504:	ldr	r1, [r1]
    2508:	ldr	r1, [r1, #12]
    250c:	cmp	r0, r1
    2510:	beq	25b8 <check_definition+0xb40>
    2514:	ldr	r0, [fp, #-136]	; 0xffffff78
    2518:	bl	0 <coda_type_get_native_type_name>
    251c:	ldr	lr, [fp, #-20]	; 0xffffffec
    2520:	ldr	lr, [lr]
    2524:	ldr	lr, [lr, #12]
    2528:	str	r0, [sp, #56]	; 0x38
    252c:	mov	r0, lr
    2530:	bl	0 <coda_type_get_native_type_name>
    2534:	movw	r1, #0
    2538:	movt	r1, #0
    253c:	movw	lr, #65236	; 0xfed4
    2540:	movt	lr, #65535	; 0xffff
    2544:	str	r0, [sp, #52]	; 0x34
    2548:	mov	r0, lr
    254c:	ldr	r2, [sp, #56]	; 0x38
    2550:	ldr	r3, [sp, #52]	; 0x34
    2554:	bl	0 <coda_set_error>
    2558:	ldr	r0, [fp, #-24]	; 0xffffffe8
    255c:	ldr	r1, [fp, #-16]
    2560:	ldr	r2, [pc, #368]	; 26d8 <check_definition+0xc60>
    2564:	ldr	r2, [pc, r2]
    2568:	str	r0, [sp, #48]	; 0x30
    256c:	str	r1, [sp, #44]	; 0x2c
    2570:	str	r2, [sp, #40]	; 0x28
    2574:	bl	0 <__aeabi_read_tp>
    2578:	ldr	r1, [sp, #40]	; 0x28
    257c:	ldr	r2, [r0, r1]
    2580:	str	r0, [sp, #36]	; 0x24
    2584:	mov	r0, r2
    2588:	bl	0 <coda_errno_to_string>
    258c:	ldr	r2, [fp, #-28]	; 0xffffffe4
    2590:	ldr	r1, [sp, #44]	; 0x2c
    2594:	str	r0, [sp, #32]
    2598:	mov	r0, r1
    259c:	ldr	r1, [sp, #32]
    25a0:	ldr	r3, [sp, #48]	; 0x30
    25a4:	blx	r3
    25a8:	mov	r0, #0
    25ac:	ldr	r1, [sp, #36]	; 0x24
    25b0:	ldr	r2, [sp, #40]	; 0x28
    25b4:	str	r0, [r1, r2]
    25b8:	b	26c0 <check_definition+0xc48>
    25bc:	b	26c0 <check_definition+0xc48>
    25c0:	b	26c0 <check_definition+0xc48>
    25c4:	ldr	r0, [fp, #-16]
    25c8:	sub	r1, fp, #140	; 0x8c
    25cc:	bl	0 <coda_cursor_get_special_type>
    25d0:	cmp	r0, #0
    25d4:	beq	25e4 <check_definition+0xb6c>
    25d8:	mvn	r0, #0
    25dc:	str	r0, [fp, #-12]
    25e0:	b	26c8 <check_definition+0xc50>
    25e4:	ldr	r0, [fp, #-20]	; 0xffffffec
    25e8:	ldr	r0, [r0]
    25ec:	sub	r1, fp, #144	; 0x90
    25f0:	bl	0 <coda_type_get_special_type>
    25f4:	cmp	r0, #0
    25f8:	beq	2608 <check_definition+0xb90>
    25fc:	mvn	r0, #0
    2600:	str	r0, [fp, #-12]
    2604:	b	26c8 <check_definition+0xc50>
    2608:	ldr	r0, [fp, #-140]	; 0xffffff74
    260c:	ldr	r1, [fp, #-144]	; 0xffffff70
    2610:	cmp	r0, r1
    2614:	beq	26b4 <check_definition+0xc3c>
    2618:	ldr	r0, [fp, #-140]	; 0xffffff74
    261c:	bl	0 <coda_type_get_special_type_name>
    2620:	ldr	lr, [fp, #-144]	; 0xffffff70
    2624:	str	r0, [sp, #28]
    2628:	mov	r0, lr
    262c:	bl	0 <coda_type_get_special_type_name>
    2630:	movw	r1, #0
    2634:	movt	r1, #0
    2638:	movw	lr, #65236	; 0xfed4
    263c:	movt	lr, #65535	; 0xffff
    2640:	str	r0, [sp, #24]
    2644:	mov	r0, lr
    2648:	ldr	r2, [sp, #28]
    264c:	ldr	r3, [sp, #24]
    2650:	bl	0 <coda_set_error>
    2654:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2658:	ldr	r1, [fp, #-16]
    265c:	ldr	r2, [pc, #112]	; 26d4 <check_definition+0xc5c>
    2660:	ldr	r2, [pc, r2]
    2664:	str	r0, [sp, #20]
    2668:	str	r1, [sp, #16]
    266c:	str	r2, [sp, #12]
    2670:	bl	0 <__aeabi_read_tp>
    2674:	ldr	r1, [sp, #12]
    2678:	ldr	r2, [r0, r1]
    267c:	str	r0, [sp, #8]
    2680:	mov	r0, r2
    2684:	bl	0 <coda_errno_to_string>
    2688:	ldr	r2, [fp, #-28]	; 0xffffffe4
    268c:	ldr	r1, [sp, #16]
    2690:	str	r0, [sp, #4]
    2694:	mov	r0, r1
    2698:	ldr	r1, [sp, #4]
    269c:	ldr	r3, [sp, #20]
    26a0:	blx	r3
    26a4:	mov	r0, #0
    26a8:	ldr	r1, [sp, #8]
    26ac:	ldr	r2, [sp, #12]
    26b0:	str	r0, [r1, r2]
    26b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    26b8:	movw	r1, #0
    26bc:	str	r1, [r0]
    26c0:	movw	r0, #0
    26c4:	str	r0, [fp, #-12]
    26c8:	ldr	r0, [fp, #-12]
    26cc:	sub	sp, fp, #8
    26d0:	pop	{r4, r5, fp, pc}
    26d4:	.word	0x0000006c
    26d8:	.word	0x0000016c
    26dc:	.word	0x000002a8
    26e0:	.word	0x0000026c
    26e4:	.word	0x000006f4
    26e8:	.word	0x000006cc
    26ec:	.word	0x000005e8
    26f0:	.word	0x000004f8
    26f4:	.word	0x000003a8
    26f8:	.word	0x00000804
    26fc:	.word	0x000008d0
    2700:	.word	0x00000990
    2704:	.word	0x00000a98
    2708:	.word	0x00000bb0

0000270c <read_bytes>:
    270c:	push	{fp, lr}
    2710:	mov	fp, sp
    2714:	sub	sp, sp, #128	; 0x80
    2718:	ldr	r1, [fp, #12]
    271c:	ldr	ip, [fp, #8]
    2720:	ldr	lr, [fp, #16]
    2724:	str	r0, [fp, #-8]
    2728:	str	r3, [fp, #-12]
    272c:	str	r2, [fp, #-16]
    2730:	str	r1, [fp, #-20]	; 0xffffffec
    2734:	str	ip, [fp, #-24]	; 0xffffffe8
    2738:	ldr	r0, [fp, #-8]
    273c:	ldr	r0, [r0, #48]	; 0x30
    2740:	movw	r1, #0
    2744:	cmp	r0, r1
    2748:	str	lr, [sp, #36]	; 0x24
    274c:	beq	286c <read_bytes+0x160>
    2750:	ldr	r0, [fp, #-16]
    2754:	ldr	r1, [fp, #-12]
    2758:	ldr	r2, [fp, #-24]	; 0xffffffe8
    275c:	ldr	r3, [fp, #-20]	; 0xffffffec
    2760:	adds	r0, r0, r2
    2764:	adc	r1, r1, r3
    2768:	ldr	r2, [fp, #-8]
    276c:	ldr	r3, [r2, #40]	; 0x28
    2770:	ldr	r2, [r2, #44]	; 0x2c
    2774:	subs	r0, r3, r0
    2778:	sbcs	r1, r2, r1
    277c:	str	r0, [sp, #32]
    2780:	str	r1, [sp, #28]
    2784:	bcs	284c <read_bytes+0x140>
    2788:	b	278c <read_bytes+0x80>
    278c:	ldr	r0, [fp, #-8]
    2790:	ldr	r0, [r0, #16]
    2794:	cmp	r0, #0
    2798:	beq	27ac <read_bytes+0xa0>
    279c:	ldr	r0, [fp, #-8]
    27a0:	ldr	r0, [r0, #16]
    27a4:	cmp	r0, #1
    27a8:	bne	27c8 <read_bytes+0xbc>
    27ac:	mvn	r0, #300	; 0x12c
    27b0:	movw	r1, #0
    27b4:	movt	r1, #0
    27b8:	bl	0 <coda_set_error>
    27bc:	mvn	r0, #0
    27c0:	str	r0, [fp, #-4]
    27c4:	b	2968 <read_bytes+0x25c>
    27c8:	add	r2, sp, #41	; 0x29
    27cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    27d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    27d4:	sub	r3, fp, #45	; 0x2d
    27d8:	str	r2, [sp, #24]
    27dc:	mov	r2, r3
    27e0:	bl	0 <coda_str64>
    27e4:	ldr	r0, [fp, #-16]
    27e8:	ldr	r1, [fp, #-12]
    27ec:	add	r2, sp, #62	; 0x3e
    27f0:	bl	0 <coda_str64>
    27f4:	ldr	r0, [fp, #-8]
    27f8:	ldr	r1, [r0, #40]	; 0x28
    27fc:	ldr	r0, [r0, #44]	; 0x2c
    2800:	str	r0, [sp, #20]
    2804:	mov	r0, r1
    2808:	ldr	r1, [sp, #20]
    280c:	ldr	r2, [sp, #24]
    2810:	bl	0 <coda_str64>
    2814:	add	r0, sp, #41	; 0x29
    2818:	add	r3, sp, #62	; 0x3e
    281c:	sub	r2, fp, #45	; 0x2d
    2820:	mvn	r1, #300	; 0x12c
    2824:	str	r0, [sp, #16]
    2828:	mov	r0, r1
    282c:	movw	r1, #0
    2830:	movt	r1, #0
    2834:	ldr	lr, [sp, #16]
    2838:	str	lr, [sp]
    283c:	bl	0 <coda_set_error>
    2840:	mvn	r0, #0
    2844:	str	r0, [fp, #-4]
    2848:	b	2968 <read_bytes+0x25c>
    284c:	ldr	r0, [fp, #16]
    2850:	ldr	r1, [fp, #-8]
    2854:	ldr	r1, [r1, #48]	; 0x30
    2858:	ldr	r2, [fp, #-16]
    285c:	add	r1, r1, r2
    2860:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2864:	bl	0 <memcpy>
    2868:	b	2960 <read_bytes+0x254>
    286c:	ldr	r0, [fp, #-8]
    2870:	ldr	r0, [r0, #16]
    2874:	cmp	r0, #0
    2878:	beq	288c <read_bytes+0x180>
    287c:	ldr	r0, [fp, #-8]
    2880:	ldr	r0, [r0, #16]
    2884:	cmp	r0, #1
    2888:	bne	2890 <read_bytes+0x184>
    288c:	b	28b0 <read_bytes+0x1a4>
    2890:	movw	r0, #0
    2894:	movt	r0, #0
    2898:	movw	r1, #0
    289c:	movt	r1, #0
    28a0:	movw	r2, #83	; 0x53
    28a4:	movw	r3, #0
    28a8:	movt	r3, #0
    28ac:	bl	0 <__assert_fail>
    28b0:	ldr	r0, [fp, #-16]
    28b4:	ldr	r1, [fp, #-12]
    28b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
    28bc:	ldr	r3, [fp, #-20]	; 0xffffffec
    28c0:	adds	r0, r0, r2
    28c4:	adc	r1, r1, r3
    28c8:	ldr	r2, [fp, #-8]
    28cc:	ldr	r3, [r2, #8]
    28d0:	ldr	r2, [r2, #12]
    28d4:	subs	r0, r3, r0
    28d8:	sbcs	r1, r2, r1
    28dc:	str	r0, [sp, #12]
    28e0:	str	r1, [sp, #8]
    28e4:	bcs	2908 <read_bytes+0x1fc>
    28e8:	b	28ec <read_bytes+0x1e0>
    28ec:	mvn	r0, #300	; 0x12c
    28f0:	movw	r1, #0
    28f4:	movt	r1, #0
    28f8:	bl	0 <coda_set_error>
    28fc:	mvn	r0, #0
    2900:	str	r0, [fp, #-4]
    2904:	b	2968 <read_bytes+0x25c>
    2908:	ldr	r0, [fp, #-8]
    290c:	ldr	r0, [r0, #56]	; 0x38
    2910:	ldr	r1, [fp, #16]
    2914:	ldr	r2, [fp, #-24]	; 0xffffffe8
    2918:	ldr	r3, [fp, #-16]
    291c:	bl	0 <pread>
    2920:	cmp	r0, #0
    2924:	bge	295c <read_bytes+0x250>
    2928:	bl	0 <__errno_location>
    292c:	ldr	r0, [r0]
    2930:	bl	0 <strerror>
    2934:	mvn	lr, #21
    2938:	str	r0, [sp, #4]
    293c:	mov	r0, lr
    2940:	movw	r1, #0
    2944:	movt	r1, #0
    2948:	ldr	r2, [sp, #4]
    294c:	bl	0 <coda_set_error>
    2950:	mvn	r0, #0
    2954:	str	r0, [fp, #-4]
    2958:	b	2968 <read_bytes+0x25c>
    295c:	b	2960 <read_bytes+0x254>
    2960:	movw	r0, #0
    2964:	str	r0, [fp, #-4]
    2968:	ldr	r0, [fp, #-4]
    296c:	mov	sp, fp
    2970:	pop	{fp, pc}
