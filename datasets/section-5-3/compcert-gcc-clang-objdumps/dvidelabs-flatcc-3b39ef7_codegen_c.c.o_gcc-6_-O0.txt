
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/compiler/CMakeFiles/flatcc.dir/codegen_c.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <checkmem>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #8
   c:	str	r0, [fp, #-8]
  10:	ldr	r3, [fp, #-8]
  14:	cmp	r3, #0
  18:	bne	3c <checkmem+0x3c>
  1c:	ldr	r3, [pc, #36]	; 48 <checkmem+0x48>
  20:	ldr	r3, [r3]
  24:	mov	r2, #34	; 0x22
  28:	mov	r1, #1
  2c:	ldr	r0, [pc, #24]	; 4c <checkmem+0x4c>
  30:	bl	0 <fwrite>
  34:	mov	r0, #1
  38:	bl	0 <exit>
  3c:	nop			; (mov r0, r0)
  40:	sub	sp, fp, #4
  44:	pop	{fp, pc}
	...

00000050 <error_tok_2>:
  50:	push	{fp, lr}
  54:	add	fp, sp, #4
  58:	sub	sp, sp, #24
  5c:	str	r0, [fp, #-8]
  60:	str	r1, [fp, #-12]
  64:	str	r2, [fp, #-16]
  68:	str	r3, [fp, #-20]	; 0xffffffec
  6c:	mov	r3, #0
  70:	str	r3, [sp, #4]
  74:	mov	r3, #0
  78:	str	r3, [sp]
  7c:	ldr	r3, [fp, #-20]	; 0xffffffec
  80:	ldr	r2, [fp, #-16]
  84:	ldr	r1, [fp, #-12]
  88:	ldr	r0, [fp, #-8]
  8c:	bl	0 <__flatcc_error_report>
  90:	nop			; (mov r0, r0)
  94:	sub	sp, fp, #4
  98:	pop	{fp, pc}

0000009c <pstrcpyupper>:
  9c:	push	{r4, fp, lr}
  a0:	add	fp, sp, #8
  a4:	sub	sp, sp, #20
  a8:	str	r0, [fp, #-24]	; 0xffffffe8
  ac:	str	r1, [fp, #-28]	; 0xffffffe4
  b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
  b4:	str	r3, [fp, #-16]
  b8:	b	ec <pstrcpyupper+0x50>
  bc:	ldr	r4, [fp, #-16]
  c0:	add	r3, r4, #1
  c4:	str	r3, [fp, #-16]
  c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
  cc:	add	r2, r3, #1
  d0:	str	r2, [fp, #-28]	; 0xffffffe4
  d4:	ldrb	r3, [r3]
  d8:	mov	r0, r3
  dc:	bl	0 <toupper>
  e0:	mov	r3, r0
  e4:	uxtb	r3, r3
  e8:	strb	r3, [r4]
  ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
  f0:	ldrb	r3, [r3]
  f4:	cmp	r3, #0
  f8:	bne	bc <pstrcpyupper+0x20>
  fc:	ldr	r3, [fp, #-16]
 100:	mov	r2, #0
 104:	strb	r2, [r3]
 108:	ldr	r3, [fp, #-24]	; 0xffffffe8
 10c:	mov	r0, r3
 110:	sub	sp, fp, #8
 114:	pop	{r4, fp, pc}

00000118 <__flatcc_fb_open_output_file>:
 118:	push	{fp, lr}
 11c:	add	fp, sp, #4
 120:	sub	sp, sp, #40	; 0x28
 124:	str	r0, [fp, #-24]	; 0xffffffe8
 128:	str	r1, [fp, #-28]	; 0xffffffe4
 12c:	str	r2, [fp, #-32]	; 0xffffffe0
 130:	str	r3, [fp, #-36]	; 0xffffffdc
 134:	ldr	r3, [fp, #-24]	; 0xffffffe8
 138:	ldr	r3, [r3, #212]	; 0xd4
 13c:	ldr	r3, [r3, #216]	; 0xd8
 140:	cmp	r3, #0
 144:	beq	158 <__flatcc_fb_open_output_file+0x40>
 148:	ldr	r3, [fp, #-24]	; 0xffffffe8
 14c:	ldr	r3, [r3, #212]	; 0xd4
 150:	ldr	r3, [r3, #216]	; 0xd8
 154:	b	15c <__flatcc_fb_open_output_file+0x44>
 158:	ldr	r3, [pc, #188]	; 21c <__flatcc_fb_open_output_file+0x104>
 15c:	str	r3, [fp, #-12]
 160:	ldr	r0, [fp, #-12]
 164:	bl	0 <strlen>
 168:	str	r0, [fp, #-16]
 16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 170:	ldr	r3, [r3, #204]	; 0xcc
 174:	cmp	r3, #0
 178:	beq	184 <__flatcc_fb_open_output_file+0x6c>
 17c:	mov	r3, #0
 180:	b	210 <__flatcc_fb_open_output_file+0xf8>
 184:	mov	r3, #1
 188:	str	r3, [sp, #4]
 18c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 190:	str	r3, [sp]
 194:	ldr	r3, [fp, #-32]	; 0xffffffe0
 198:	ldr	r2, [fp, #-28]	; 0xffffffe4
 19c:	ldr	r1, [fp, #-16]
 1a0:	ldr	r0, [fp, #-12]
 1a4:	bl	0 <__flatcc_fb_create_join_path_n>
 1a8:	str	r0, [fp, #-20]	; 0xffffffec
 1ac:	ldr	r0, [fp, #-20]	; 0xffffffec
 1b0:	bl	0 <checkmem>
 1b4:	ldr	r1, [pc, #100]	; 220 <__flatcc_fb_open_output_file+0x108>
 1b8:	ldr	r0, [fp, #-20]	; 0xffffffec
 1bc:	bl	0 <fopen>
 1c0:	mov	r2, r0
 1c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1c8:	str	r2, [r3, #204]	; 0xcc
 1cc:	mov	r3, #0
 1d0:	str	r3, [fp, #-8]
 1d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1d8:	ldr	r3, [r3, #204]	; 0xcc
 1dc:	cmp	r3, #0
 1e0:	bne	204 <__flatcc_fb_open_output_file+0xec>
 1e4:	ldr	r3, [pc, #56]	; 224 <__flatcc_fb_open_output_file+0x10c>
 1e8:	ldr	r3, [r3]
 1ec:	ldr	r2, [fp, #-20]	; 0xffffffec
 1f0:	ldr	r1, [pc, #48]	; 228 <__flatcc_fb_open_output_file+0x110>
 1f4:	mov	r0, r3
 1f8:	bl	0 <fprintf>
 1fc:	mvn	r3, #0
 200:	str	r3, [fp, #-8]
 204:	ldr	r0, [fp, #-20]	; 0xffffffec
 208:	bl	0 <free>
 20c:	ldr	r3, [fp, #-8]
 210:	mov	r0, r3
 214:	sub	sp, fp, #4
 218:	pop	{fp, pc}
 21c:	.word	0x00000024
 220:	.word	0x00000028
 224:	.word	0x00000000
 228:	.word	0x0000002c

0000022c <__flatcc_fb_close_output_file>:
 22c:	push	{fp, lr}
 230:	add	fp, sp, #4
 234:	sub	sp, sp, #8
 238:	str	r0, [fp, #-8]
 23c:	ldr	r3, [fp, #-8]
 240:	ldr	r3, [r3, #212]	; 0xd4
 244:	ldr	r3, [r3, #124]	; 0x7c
 248:	cmp	r3, #0
 24c:	bne	290 <__flatcc_fb_close_output_file+0x64>
 250:	ldr	r3, [fp, #-8]
 254:	ldr	r3, [r3, #212]	; 0xd4
 258:	ldr	r3, [r3, #108]	; 0x6c
 25c:	cmp	r3, #0
 260:	bne	290 <__flatcc_fb_close_output_file+0x64>
 264:	ldr	r3, [fp, #-8]
 268:	ldr	r3, [r3, #204]	; 0xcc
 26c:	cmp	r3, #0
 270:	beq	290 <__flatcc_fb_close_output_file+0x64>
 274:	ldr	r3, [fp, #-8]
 278:	ldr	r3, [r3, #204]	; 0xcc
 27c:	mov	r0, r3
 280:	bl	0 <fclose>
 284:	ldr	r3, [fp, #-8]
 288:	mov	r2, #0
 28c:	str	r2, [r3, #204]	; 0xcc
 290:	nop			; (mov r0, r0)
 294:	sub	sp, fp, #4
 298:	pop	{fp, pc}

0000029c <__flatcc_fb_end_output_c>:
 29c:	push	{fp, lr}
 2a0:	add	fp, sp, #4
 2a4:	sub	sp, sp, #8
 2a8:	str	r0, [fp, #-8]
 2ac:	ldr	r3, [fp, #-8]
 2b0:	ldr	r2, [r3, #204]	; 0xcc
 2b4:	ldr	r3, [pc, #64]	; 2fc <__flatcc_fb_end_output_c+0x60>
 2b8:	ldr	r3, [r3]
 2bc:	cmp	r2, r3
 2c0:	beq	2e4 <__flatcc_fb_end_output_c+0x48>
 2c4:	ldr	r3, [fp, #-8]
 2c8:	ldr	r3, [r3, #204]	; 0xcc
 2cc:	cmp	r3, #0
 2d0:	beq	2e4 <__flatcc_fb_end_output_c+0x48>
 2d4:	ldr	r3, [fp, #-8]
 2d8:	ldr	r3, [r3, #204]	; 0xcc
 2dc:	mov	r0, r3
 2e0:	bl	0 <fclose>
 2e4:	ldr	r3, [fp, #-8]
 2e8:	mov	r2, #0
 2ec:	str	r2, [r3, #204]	; 0xcc
 2f0:	nop			; (mov r0, r0)
 2f4:	sub	sp, fp, #4
 2f8:	pop	{fp, pc}
 2fc:	.word	0x00000000

00000300 <__flatcc_fb_init_output_c>:
 300:	push	{fp, lr}
 304:	add	fp, sp, #4
 308:	sub	sp, sp, #32
 30c:	str	r0, [fp, #-32]	; 0xffffffe0
 310:	str	r1, [fp, #-36]	; 0xffffffdc
 314:	mov	r3, #0
 318:	str	r3, [fp, #-20]	; 0xffffffec
 31c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 320:	ldr	r3, [r3, #128]	; 0x80
 324:	cmp	r3, #0
 328:	beq	334 <__flatcc_fb_init_output_c+0x34>
 32c:	ldr	r3, [pc, #564]	; 568 <__flatcc_fb_init_output_c+0x268>
 330:	b	338 <__flatcc_fb_init_output_c+0x38>
 334:	ldr	r3, [pc, #560]	; 56c <__flatcc_fb_init_output_c+0x26c>
 338:	str	r3, [fp, #-24]	; 0xffffffe8
 33c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 340:	ldr	r3, [r3, #216]	; 0xd8
 344:	cmp	r3, #0
 348:	beq	358 <__flatcc_fb_init_output_c+0x58>
 34c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 350:	ldr	r3, [r3, #216]	; 0xd8
 354:	b	35c <__flatcc_fb_init_output_c+0x5c>
 358:	ldr	r3, [pc, #528]	; 570 <__flatcc_fb_init_output_c+0x270>
 35c:	str	r3, [fp, #-28]	; 0xffffffe4
 360:	mvn	r3, #0
 364:	str	r3, [fp, #-16]
 368:	mov	r2, #232	; 0xe8
 36c:	mov	r1, #0
 370:	ldr	r0, [fp, #-32]	; 0xffffffe0
 374:	bl	0 <memset>
 378:	ldr	r3, [fp, #-32]	; 0xffffffe0
 37c:	ldr	r2, [fp, #-36]	; 0xffffffdc
 380:	str	r2, [r3, #212]	; 0xd4
 384:	ldr	r3, [fp, #-36]	; 0xffffffdc
 388:	ldr	r3, [r3, #196]	; 0xc4
 38c:	str	r3, [fp, #-8]
 390:	ldr	r3, [fp, #-8]
 394:	cmp	r3, #0
 398:	beq	3dc <__flatcc_fb_init_output_c+0xdc>
 39c:	ldr	r3, [fp, #-36]	; 0xffffffdc
 3a0:	ldr	r3, [r3, #196]	; 0xc4
 3a4:	mov	r0, r3
 3a8:	bl	0 <strlen>
 3ac:	str	r0, [fp, #-12]
 3b0:	ldr	r3, [fp, #-12]
 3b4:	cmp	r3, #100	; 0x64
 3b8:	bls	3f0 <__flatcc_fb_init_output_c+0xf0>
 3bc:	ldr	r3, [pc, #432]	; 574 <__flatcc_fb_init_output_c+0x274>
 3c0:	ldr	r3, [r3]
 3c4:	mov	r2, #100	; 0x64
 3c8:	ldr	r1, [pc, #424]	; 578 <__flatcc_fb_init_output_c+0x278>
 3cc:	mov	r0, r3
 3d0:	bl	0 <fprintf>
 3d4:	mvn	r3, #0
 3d8:	b	55c <__flatcc_fb_init_output_c+0x25c>
 3dc:	ldr	r3, [pc, #408]	; 57c <__flatcc_fb_init_output_c+0x27c>
 3e0:	str	r3, [fp, #-8]
 3e4:	ldr	r0, [fp, #-8]
 3e8:	bl	0 <strlen>
 3ec:	str	r0, [fp, #-12]
 3f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
 3f4:	mov	r2, #100	; 0x64
 3f8:	ldr	r1, [fp, #-8]
 3fc:	mov	r0, r3
 400:	bl	0 <strncpy>
 404:	ldr	r3, [fp, #-32]	; 0xffffffe0
 408:	mov	r2, #0
 40c:	strb	r2, [r3, #100]	; 0x64
 410:	ldr	r3, [fp, #-12]
 414:	cmp	r3, #0
 418:	beq	444 <__flatcc_fb_init_output_c+0x144>
 41c:	ldr	r2, [fp, #-32]	; 0xffffffe0
 420:	ldr	r3, [fp, #-12]
 424:	add	r3, r2, r3
 428:	mov	r2, #95	; 0x5f
 42c:	strb	r2, [r3]
 430:	ldr	r3, [fp, #-12]
 434:	add	r3, r3, #1
 438:	ldr	r2, [fp, #-32]	; 0xffffffe0
 43c:	mov	r1, #0
 440:	strb	r1, [r2, r3]
 444:	ldr	r3, [fp, #-32]	; 0xffffffe0
 448:	add	r3, r3, #102	; 0x66
 44c:	ldr	r2, [fp, #-32]	; 0xffffffe0
 450:	mov	r1, r2
 454:	mov	r0, r3
 458:	bl	9c <pstrcpyupper>
 45c:	ldr	r2, [fp, #-32]	; 0xffffffe0
 460:	ldr	r3, [fp, #-12]
 464:	add	r3, r2, r3
 468:	add	r3, r3, #102	; 0x66
 46c:	mov	r2, #0
 470:	strb	r2, [r3]
 474:	ldr	r3, [fp, #-36]	; 0xffffffdc
 478:	ldr	r2, [r3, #176]	; 0xb0
 47c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 480:	str	r2, [r3, #224]	; 0xe0
 484:	ldr	r3, [fp, #-36]	; 0xffffffdc
 488:	ldr	r3, [r3, #108]	; 0x6c
 48c:	cmp	r3, #0
 490:	beq	4ac <__flatcc_fb_init_output_c+0x1ac>
 494:	ldr	r3, [pc, #228]	; 580 <__flatcc_fb_init_output_c+0x280>
 498:	ldr	r2, [r3]
 49c:	ldr	r3, [fp, #-32]	; 0xffffffe0
 4a0:	str	r2, [r3, #204]	; 0xcc
 4a4:	mov	r3, #0
 4a8:	b	55c <__flatcc_fb_init_output_c+0x25c>
 4ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
 4b0:	ldr	r3, [r3, #212]	; 0xd4
 4b4:	ldr	r3, [r3, #124]	; 0x7c
 4b8:	cmp	r3, #0
 4bc:	bne	4c8 <__flatcc_fb_init_output_c+0x1c8>
 4c0:	mov	r3, #0
 4c4:	b	55c <__flatcc_fb_init_output_c+0x25c>
 4c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
 4cc:	ldr	r3, [r3, #212]	; 0xd4
 4d0:	ldr	r1, [r3, #124]	; 0x7c
 4d4:	mov	r3, #1
 4d8:	ldr	r2, [pc, #144]	; 570 <__flatcc_fb_init_output_c+0x270>
 4dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
 4e0:	bl	0 <__flatcc_fb_create_join_path>
 4e4:	str	r0, [fp, #-20]	; 0xffffffec
 4e8:	ldr	r0, [fp, #-20]	; 0xffffffec
 4ec:	bl	0 <checkmem>
 4f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
 4f4:	ldr	r0, [fp, #-20]	; 0xffffffec
 4f8:	bl	0 <fopen>
 4fc:	mov	r2, r0
 500:	ldr	r3, [fp, #-32]	; 0xffffffe0
 504:	str	r2, [r3, #204]	; 0xcc
 508:	ldr	r3, [fp, #-32]	; 0xffffffe0
 50c:	ldr	r3, [r3, #204]	; 0xcc
 510:	cmp	r3, #0
 514:	bne	53c <__flatcc_fb_init_output_c+0x23c>
 518:	ldr	r3, [pc, #84]	; 574 <__flatcc_fb_init_output_c+0x274>
 51c:	ldr	r3, [r3]
 520:	ldr	r2, [fp, #-20]	; 0xffffffec
 524:	ldr	r1, [pc, #88]	; 584 <__flatcc_fb_init_output_c+0x284>
 528:	mov	r0, r3
 52c:	bl	0 <fprintf>
 530:	mvn	r3, #0
 534:	str	r3, [fp, #-16]
 538:	b	544 <__flatcc_fb_init_output_c+0x244>
 53c:	mov	r3, #0
 540:	str	r3, [fp, #-16]
 544:	ldr	r3, [fp, #-20]	; 0xffffffec
 548:	cmp	r3, #0
 54c:	beq	558 <__flatcc_fb_init_output_c+0x258>
 550:	ldr	r0, [fp, #-20]	; 0xffffffec
 554:	bl	0 <free>
 558:	ldr	r3, [fp, #-16]
 55c:	mov	r0, r3
 560:	sub	sp, fp, #4
 564:	pop	{fp, pc}
 568:	.word	0x00000050
 56c:	.word	0x00000028
 570:	.word	0x00000024
 574:	.word	0x00000000
 578:	.word	0x00000054
 57c:	.word	0x0000008c
 580:	.word	0x00000000
 584:	.word	0x0000002c

00000588 <_str_set_destructor>:
 588:	push	{fp, lr}
 58c:	add	fp, sp, #4
 590:	sub	sp, sp, #8
 594:	str	r0, [fp, #-8]
 598:	str	r1, [fp, #-12]
 59c:	ldr	r0, [fp, #-12]
 5a0:	bl	0 <free>
 5a4:	nop			; (mov r0, r0)
 5a8:	sub	sp, fp, #4
 5ac:	pop	{fp, pc}

000005b0 <__flatcc_fb_gen_c_includes>:
 5b0:	push	{fp, lr}
 5b4:	add	fp, sp, #4
 5b8:	sub	sp, sp, #56	; 0x38
 5bc:	str	r0, [fp, #-40]	; 0xffffffd8
 5c0:	str	r1, [fp, #-44]	; 0xffffffd4
 5c4:	str	r2, [fp, #-48]	; 0xffffffd0
 5c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 5cc:	ldr	r3, [r3, #208]	; 0xd0
 5d0:	ldr	r3, [r3]
 5d4:	str	r3, [fp, #-8]
 5d8:	sub	r3, fp, #36	; 0x24
 5dc:	mov	r2, #16
 5e0:	mov	r1, #0
 5e4:	mov	r0, r3
 5e8:	bl	0 <memset>
 5ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
 5f0:	ldr	r3, [r3, #208]	; 0xd0
 5f4:	ldr	r3, [r3, #164]	; 0xa4
 5f8:	mov	r0, r3
 5fc:	bl	0 <__flatcc_fb_copy_path>
 600:	mov	r1, r0
 604:	sub	r3, fp, #36	; 0x24
 608:	mov	r2, #1
 60c:	mov	r0, r3
 610:	bl	0 <str_set_insert_item>
 614:	b	718 <__flatcc_fb_gen_c_includes+0x168>
 618:	ldr	r3, [fp, #-8]
 61c:	ldr	r0, [r3, #8]
 620:	ldr	r3, [fp, #-8]
 624:	ldr	r3, [r3, #12]
 628:	mov	r1, r3
 62c:	ldr	r3, [fp, #-40]	; 0xffffffd8
 630:	ldr	r3, [r3, #212]	; 0xd4
 634:	ldr	r3, [r3, #96]	; 0x60
 638:	mov	r2, r3
 63c:	bl	0 <__flatcc_fb_create_basename>
 640:	str	r0, [fp, #-16]
 644:	ldr	r0, [fp, #-16]
 648:	bl	0 <checkmem>
 64c:	ldr	r3, [fp, #-8]
 650:	ldr	r3, [r3]
 654:	str	r3, [fp, #-8]
 658:	ldr	r0, [fp, #-16]
 65c:	bl	0 <__flatcc_fb_copy_path>
 660:	str	r0, [fp, #-20]	; 0xffffffec
 664:	ldr	r0, [fp, #-20]	; 0xffffffec
 668:	bl	0 <checkmem>
 66c:	ldr	r3, [fp, #-20]	; 0xffffffec
 670:	str	r3, [fp, #-12]
 674:	b	6a4 <__flatcc_fb_gen_c_includes+0xf4>
 678:	ldr	r3, [fp, #-12]
 67c:	ldrb	r3, [r3]
 680:	mov	r0, r3
 684:	bl	0 <toupper>
 688:	mov	r3, r0
 68c:	uxtb	r2, r3
 690:	ldr	r3, [fp, #-12]
 694:	strb	r2, [r3]
 698:	ldr	r3, [fp, #-12]
 69c:	add	r3, r3, #1
 6a0:	str	r3, [fp, #-12]
 6a4:	ldr	r3, [fp, #-12]
 6a8:	ldrb	r3, [r3]
 6ac:	cmp	r3, #0
 6b0:	bne	678 <__flatcc_fb_gen_c_includes+0xc8>
 6b4:	sub	r3, fp, #36	; 0x24
 6b8:	mov	r2, #1
 6bc:	ldr	r1, [fp, #-20]	; 0xffffffec
 6c0:	mov	r0, r3
 6c4:	bl	0 <str_set_insert_item>
 6c8:	mov	r3, r0
 6cc:	cmp	r3, #0
 6d0:	beq	6e8 <__flatcc_fb_gen_c_includes+0x138>
 6d4:	ldr	r0, [fp, #-20]	; 0xffffffec
 6d8:	bl	0 <free>
 6dc:	ldr	r0, [fp, #-16]
 6e0:	bl	0 <free>
 6e4:	b	718 <__flatcc_fb_gen_c_includes+0x168>
 6e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
 6ec:	ldr	r0, [r3, #204]	; 0xcc
 6f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
 6f4:	str	r3, [sp, #4]
 6f8:	ldr	r3, [fp, #-16]
 6fc:	str	r3, [sp]
 700:	ldr	r3, [fp, #-48]	; 0xffffffd0
 704:	ldr	r2, [fp, #-20]	; 0xffffffec
 708:	ldr	r1, [pc, #52]	; 744 <__flatcc_fb_gen_c_includes+0x194>
 70c:	bl	0 <fprintf>
 710:	ldr	r0, [fp, #-16]
 714:	bl	0 <free>
 718:	ldr	r3, [fp, #-8]
 71c:	cmp	r3, #0
 720:	bne	618 <__flatcc_fb_gen_c_includes+0x68>
 724:	sub	r3, fp, #36	; 0x24
 728:	mov	r2, #0
 72c:	ldr	r1, [pc, #20]	; 748 <__flatcc_fb_gen_c_includes+0x198>
 730:	mov	r0, r3
 734:	bl	0 <str_set_destroy>
 738:	nop			; (mov r0, r0)
 73c:	sub	sp, fp, #4
 740:	pop	{fp, pc}
 744:	.word	0x00000098
 748:	.word	0x00000000

0000074c <__flatcc_fb_copy_scope>:
 74c:	push	{fp, lr}
 750:	add	fp, sp, #4
 754:	sub	sp, sp, #24
 758:	str	r0, [fp, #-24]	; 0xffffffe8
 75c:	str	r1, [fp, #-28]	; 0xffffffe4
 760:	ldr	r3, [fp, #-24]	; 0xffffffe8
 764:	ldr	r3, [r3, #24]
 768:	str	r3, [fp, #-8]
 76c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 770:	ldr	r3, [r3]
 774:	str	r3, [fp, #-12]
 778:	b	7ac <__flatcc_fb_copy_scope+0x60>
 77c:	ldr	r3, [fp, #-12]
 780:	ldr	r3, [r3, #4]
 784:	ldr	r3, [r3, #4]
 788:	str	r3, [fp, #-16]
 78c:	ldr	r2, [fp, #-16]
 790:	ldr	r3, [fp, #-8]
 794:	add	r3, r2, r3
 798:	add	r3, r3, #1
 79c:	str	r3, [fp, #-8]
 7a0:	ldr	r3, [fp, #-12]
 7a4:	ldr	r3, [r3]
 7a8:	str	r3, [fp, #-12]
 7ac:	ldr	r3, [fp, #-12]
 7b0:	cmp	r3, #0
 7b4:	bne	77c <__flatcc_fb_copy_scope+0x30>
 7b8:	ldr	r3, [fp, #-8]
 7bc:	cmp	r3, #101	; 0x65
 7c0:	bls	7d8 <__flatcc_fb_copy_scope+0x8c>
 7c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
 7c8:	mov	r2, #0
 7cc:	strb	r2, [r3]
 7d0:	mvn	r3, #0
 7d4:	b	89c <__flatcc_fb_copy_scope+0x150>
 7d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7dc:	ldr	r3, [r3, #24]
 7e0:	str	r3, [fp, #-8]
 7e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 7e8:	ldr	r3, [r3, #20]
 7ec:	ldr	r2, [fp, #-8]
 7f0:	mov	r1, r3
 7f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
 7f8:	bl	0 <memcpy>
 7fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 800:	ldr	r3, [r3]
 804:	str	r3, [fp, #-12]
 808:	b	878 <__flatcc_fb_copy_scope+0x12c>
 80c:	ldr	r3, [fp, #-12]
 810:	ldr	r3, [r3, #4]
 814:	ldr	r3, [r3, #4]
 818:	str	r3, [fp, #-16]
 81c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 820:	ldr	r3, [fp, #-8]
 824:	add	r0, r2, r3
 828:	ldr	r3, [fp, #-12]
 82c:	ldr	r3, [r3, #4]
 830:	ldr	r3, [r3]
 834:	ldr	r2, [fp, #-16]
 838:	mov	r1, r3
 83c:	bl	0 <memcpy>
 840:	ldr	r2, [fp, #-16]
 844:	ldr	r3, [fp, #-8]
 848:	add	r3, r2, r3
 84c:	add	r3, r3, #1
 850:	str	r3, [fp, #-8]
 854:	ldr	r3, [fp, #-8]
 858:	sub	r3, r3, #1
 85c:	ldr	r2, [fp, #-28]	; 0xffffffe4
 860:	add	r3, r2, r3
 864:	mov	r2, #95	; 0x5f
 868:	strb	r2, [r3]
 86c:	ldr	r3, [fp, #-12]
 870:	ldr	r3, [r3]
 874:	str	r3, [fp, #-12]
 878:	ldr	r3, [fp, #-12]
 87c:	cmp	r3, #0
 880:	bne	80c <__flatcc_fb_copy_scope+0xc0>
 884:	ldr	r2, [fp, #-28]	; 0xffffffe4
 888:	ldr	r3, [fp, #-8]
 88c:	add	r3, r2, r3
 890:	mov	r2, #0
 894:	strb	r2, [r3]
 898:	ldr	r3, [fp, #-8]
 89c:	mov	r0, r3
 8a0:	sub	sp, fp, #4
 8a4:	pop	{fp, pc}

000008a8 <__flatcc_fb_scoped_symbol_name>:
 8a8:	push	{fp, lr}
 8ac:	add	fp, sp, #4
 8b0:	sub	sp, sp, #24
 8b4:	str	r0, [fp, #-16]
 8b8:	str	r1, [fp, #-20]	; 0xffffffec
 8bc:	str	r2, [fp, #-24]	; 0xffffffe8
 8c0:	ldr	r3, [fp, #-20]	; 0xffffffec
 8c4:	ldr	r3, [r3, #4]
 8c8:	str	r3, [fp, #-8]
 8cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8d0:	ldr	r2, [r3, #204]	; 0xcc
 8d4:	ldr	r3, [fp, #-16]
 8d8:	cmp	r2, r3
 8dc:	beq	930 <__flatcc_fb_scoped_symbol_name+0x88>
 8e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8e4:	mov	r1, r3
 8e8:	ldr	r0, [fp, #-16]
 8ec:	bl	74c <__flatcc_fb_copy_scope>
 8f0:	mov	r2, r0
 8f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 8f8:	str	r2, [r3, #208]	; 0xd0
 8fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 900:	ldr	r3, [r3, #208]	; 0xd0
 904:	cmp	r3, #0
 908:	bge	930 <__flatcc_fb_scoped_symbol_name+0x88>
 90c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 910:	mov	r2, #0
 914:	str	r2, [r3, #208]	; 0xd0
 918:	ldr	r3, [pc, #228]	; a04 <__flatcc_fb_scoped_symbol_name+0x15c>
 91c:	ldr	r3, [r3]
 920:	mov	r2, #28
 924:	mov	r1, #1
 928:	ldr	r0, [pc, #216]	; a08 <__flatcc_fb_scoped_symbol_name+0x160>
 92c:	bl	0 <fwrite>
 930:	ldr	r3, [fp, #-8]
 934:	ldr	r2, [r3, #4]
 938:	ldr	r3, [fp, #-24]	; 0xffffffe8
 93c:	str	r2, [r3, #212]	; 0xd4
 940:	ldr	r3, [fp, #-24]	; 0xffffffe8
 944:	ldr	r2, [r3, #208]	; 0xd0
 948:	ldr	r3, [fp, #-24]	; 0xffffffe8
 94c:	ldr	r3, [r3, #212]	; 0xd4
 950:	add	r2, r2, r3
 954:	ldr	r3, [fp, #-24]	; 0xffffffe8
 958:	str	r2, [r3, #216]	; 0xd8
 95c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 960:	ldr	r3, [r3, #216]	; 0xd8
 964:	cmp	r3, #203	; 0xcb
 968:	ble	9bc <__flatcc_fb_scoped_symbol_name+0x114>
 96c:	ldr	r3, [pc, #144]	; a04 <__flatcc_fb_scoped_symbol_name+0x15c>
 970:	ldr	r0, [r3]
 974:	ldr	r3, [fp, #-24]	; 0xffffffe8
 978:	ldr	r2, [r3, #212]	; 0xd4
 97c:	ldr	r3, [fp, #-8]
 980:	ldr	r3, [r3]
 984:	ldr	r1, [pc, #128]	; a0c <__flatcc_fb_scoped_symbol_name+0x164>
 988:	bl	0 <fprintf>
 98c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 990:	ldr	r3, [r3, #208]	; 0xd0
 994:	rsb	r2, r3, #203	; 0xcb
 998:	ldr	r3, [fp, #-24]	; 0xffffffe8
 99c:	str	r2, [r3, #212]	; 0xd4
 9a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9a4:	ldr	r2, [r3, #208]	; 0xd0
 9a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9ac:	ldr	r3, [r3, #212]	; 0xd4
 9b0:	add	r2, r2, r3
 9b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9b8:	str	r2, [r3, #216]	; 0xd8
 9bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
 9c4:	ldr	r2, [r2, #208]	; 0xd0
 9c8:	add	r0, r3, r2
 9cc:	ldr	r3, [fp, #-8]
 9d0:	ldr	r1, [r3]
 9d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9d8:	ldr	r3, [r3, #212]	; 0xd4
 9dc:	mov	r2, r3
 9e0:	bl	0 <memcpy>
 9e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 9e8:	ldr	r3, [r3, #216]	; 0xd8
 9ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
 9f0:	mov	r1, #0
 9f4:	strb	r1, [r2, r3]
 9f8:	nop			; (mov r0, r0)
 9fc:	sub	sp, fp, #4
 a00:	pop	{fp, pc}
 a04:	.word	0x00000000
 a08:	.word	0x000000c0
 a0c:	.word	0x000000e0

00000a10 <__flatcc_fb_codegen_common_c>:
 a10:	push	{fp, lr}
 a14:	add	fp, sp, #4
 a18:	sub	sp, sp, #16
 a1c:	str	r0, [fp, #-16]
 a20:	ldr	r3, [fp, #-16]
 a24:	mov	r0, r3
 a28:	bl	0 <strlen>
 a2c:	mov	r3, r0
 a30:	sub	r3, r3, #1
 a34:	str	r3, [fp, #-12]
 a38:	mov	r3, #0
 a3c:	str	r3, [fp, #-8]
 a40:	ldr	r3, [fp, #-16]
 a44:	ldr	r3, [r3, #212]	; 0xd4
 a48:	ldr	r3, [r3, #144]	; 0x90
 a4c:	cmp	r3, #0
 a50:	beq	a90 <__flatcc_fb_codegen_common_c+0x80>
 a54:	ldr	r1, [fp, #-16]
 a58:	ldr	r3, [pc, #152]	; af8 <__flatcc_fb_codegen_common_c+0xe8>
 a5c:	ldr	r2, [fp, #-12]
 a60:	ldr	r0, [fp, #-16]
 a64:	bl	118 <__flatcc_fb_open_output_file>
 a68:	mov	r3, r0
 a6c:	cmp	r3, #0
 a70:	beq	a7c <__flatcc_fb_codegen_common_c+0x6c>
 a74:	mvn	r3, #0
 a78:	b	aec <__flatcc_fb_codegen_common_c+0xdc>
 a7c:	ldr	r0, [fp, #-16]
 a80:	bl	0 <__flatcc_fb_gen_common_c_header>
 a84:	str	r0, [fp, #-8]
 a88:	ldr	r0, [fp, #-16]
 a8c:	bl	22c <__flatcc_fb_close_output_file>
 a90:	ldr	r3, [fp, #-8]
 a94:	cmp	r3, #0
 a98:	bne	ae8 <__flatcc_fb_codegen_common_c+0xd8>
 a9c:	ldr	r3, [fp, #-16]
 aa0:	ldr	r3, [r3, #212]	; 0xd4
 aa4:	ldr	r3, [r3, #148]	; 0x94
 aa8:	cmp	r3, #0
 aac:	beq	ae8 <__flatcc_fb_codegen_common_c+0xd8>
 ab0:	ldr	r1, [fp, #-16]
 ab4:	ldr	r3, [pc, #64]	; afc <__flatcc_fb_codegen_common_c+0xec>
 ab8:	ldr	r2, [fp, #-12]
 abc:	ldr	r0, [fp, #-16]
 ac0:	bl	118 <__flatcc_fb_open_output_file>
 ac4:	mov	r3, r0
 ac8:	cmp	r3, #0
 acc:	beq	ad8 <__flatcc_fb_codegen_common_c+0xc8>
 ad0:	mvn	r3, #0
 ad4:	b	aec <__flatcc_fb_codegen_common_c+0xdc>
 ad8:	ldr	r0, [fp, #-16]
 adc:	bl	0 <__flatcc_fb_gen_common_c_builder_header>
 ae0:	ldr	r0, [fp, #-16]
 ae4:	bl	22c <__flatcc_fb_close_output_file>
 ae8:	ldr	r3, [fp, #-8]
 aec:	mov	r0, r3
 af0:	sub	sp, fp, #4
 af4:	pop	{fp, pc}
 af8:	.word	0x00000108
 afc:	.word	0x0000011c

00000b00 <__flatcc_fb_codegen_c>:
 b00:	push	{fp, lr}
 b04:	add	fp, sp, #4
 b08:	sub	sp, sp, #16
 b0c:	str	r0, [fp, #-16]
 b10:	str	r1, [fp, #-20]	; 0xffffffec
 b14:	mov	r3, #0
 b18:	str	r3, [fp, #-8]
 b1c:	ldr	r3, [fp, #-16]
 b20:	ldr	r2, [fp, #-20]	; 0xffffffec
 b24:	str	r2, [r3, #208]	; 0xd0
 b28:	ldr	r3, [fp, #-20]	; 0xffffffec
 b2c:	ldr	r3, [r3, #60]	; 0x3c
 b30:	mov	r2, #0
 b34:	mov	r1, #0
 b38:	mov	r0, r3
 b3c:	bl	0 <fb_scope_table_find>
 b40:	mov	r2, r0
 b44:	ldr	r3, [fp, #-16]
 b48:	str	r2, [r3, #216]	; 0xd8
 b4c:	ldr	r3, [fp, #-16]
 b50:	ldr	r3, [r3, #208]	; 0xd0
 b54:	ldr	r3, [r3, #160]	; 0xa0
 b58:	mov	r0, r3
 b5c:	bl	0 <strlen>
 b60:	str	r0, [fp, #-12]
 b64:	ldr	r3, [fp, #-16]
 b68:	ldr	r3, [r3, #212]	; 0xd4
 b6c:	ldr	r3, [r3, #152]	; 0x98
 b70:	cmp	r3, #0
 b74:	beq	bcc <__flatcc_fb_codegen_c+0xcc>
 b78:	ldr	r3, [fp, #-16]
 b7c:	ldr	r3, [r3, #208]	; 0xd0
 b80:	ldr	r1, [r3, #160]	; 0xa0
 b84:	ldr	r3, [pc, #536]	; da4 <__flatcc_fb_codegen_c+0x2a4>
 b88:	ldr	r2, [fp, #-12]
 b8c:	ldr	r0, [fp, #-16]
 b90:	bl	118 <__flatcc_fb_open_output_file>
 b94:	mov	r3, r0
 b98:	cmp	r3, #0
 b9c:	beq	bac <__flatcc_fb_codegen_c+0xac>
 ba0:	mvn	r3, #0
 ba4:	str	r3, [fp, #-8]
 ba8:	b	d94 <__flatcc_fb_codegen_c+0x294>
 bac:	ldr	r0, [fp, #-16]
 bb0:	bl	0 <__flatcc_fb_gen_c_reader>
 bb4:	str	r0, [fp, #-8]
 bb8:	ldr	r3, [fp, #-8]
 bbc:	cmp	r3, #0
 bc0:	bne	d70 <__flatcc_fb_codegen_c+0x270>
 bc4:	ldr	r0, [fp, #-16]
 bc8:	bl	22c <__flatcc_fb_close_output_file>
 bcc:	ldr	r3, [fp, #-16]
 bd0:	ldr	r3, [r3, #212]	; 0xd4
 bd4:	ldr	r3, [r3, #156]	; 0x9c
 bd8:	cmp	r3, #0
 bdc:	beq	c34 <__flatcc_fb_codegen_c+0x134>
 be0:	ldr	r3, [fp, #-16]
 be4:	ldr	r3, [r3, #208]	; 0xd0
 be8:	ldr	r1, [r3, #160]	; 0xa0
 bec:	ldr	r3, [pc, #436]	; da8 <__flatcc_fb_codegen_c+0x2a8>
 bf0:	ldr	r2, [fp, #-12]
 bf4:	ldr	r0, [fp, #-16]
 bf8:	bl	118 <__flatcc_fb_open_output_file>
 bfc:	mov	r3, r0
 c00:	cmp	r3, #0
 c04:	beq	c14 <__flatcc_fb_codegen_c+0x114>
 c08:	mvn	r3, #0
 c0c:	str	r3, [fp, #-8]
 c10:	b	d94 <__flatcc_fb_codegen_c+0x294>
 c14:	ldr	r0, [fp, #-16]
 c18:	bl	0 <__flatcc_fb_gen_c_builder>
 c1c:	str	r0, [fp, #-8]
 c20:	ldr	r3, [fp, #-8]
 c24:	cmp	r3, #0
 c28:	bne	d78 <__flatcc_fb_codegen_c+0x278>
 c2c:	ldr	r0, [fp, #-16]
 c30:	bl	22c <__flatcc_fb_close_output_file>
 c34:	ldr	r3, [fp, #-16]
 c38:	ldr	r3, [r3, #212]	; 0xd4
 c3c:	ldr	r3, [r3, #160]	; 0xa0
 c40:	cmp	r3, #0
 c44:	beq	c9c <__flatcc_fb_codegen_c+0x19c>
 c48:	ldr	r3, [fp, #-16]
 c4c:	ldr	r3, [r3, #208]	; 0xd0
 c50:	ldr	r1, [r3, #160]	; 0xa0
 c54:	ldr	r3, [pc, #336]	; dac <__flatcc_fb_codegen_c+0x2ac>
 c58:	ldr	r2, [fp, #-12]
 c5c:	ldr	r0, [fp, #-16]
 c60:	bl	118 <__flatcc_fb_open_output_file>
 c64:	mov	r3, r0
 c68:	cmp	r3, #0
 c6c:	beq	c7c <__flatcc_fb_codegen_c+0x17c>
 c70:	mvn	r3, #0
 c74:	str	r3, [fp, #-8]
 c78:	b	d94 <__flatcc_fb_codegen_c+0x294>
 c7c:	ldr	r0, [fp, #-16]
 c80:	bl	0 <__flatcc_fb_gen_c_verifier>
 c84:	str	r0, [fp, #-8]
 c88:	ldr	r3, [fp, #-8]
 c8c:	cmp	r3, #0
 c90:	bne	d80 <__flatcc_fb_codegen_c+0x280>
 c94:	ldr	r0, [fp, #-16]
 c98:	bl	22c <__flatcc_fb_close_output_file>
 c9c:	ldr	r3, [fp, #-16]
 ca0:	ldr	r3, [r3, #212]	; 0xd4
 ca4:	ldr	r3, [r3, #164]	; 0xa4
 ca8:	cmp	r3, #0
 cac:	beq	d04 <__flatcc_fb_codegen_c+0x204>
 cb0:	ldr	r3, [fp, #-16]
 cb4:	ldr	r3, [r3, #208]	; 0xd0
 cb8:	ldr	r1, [r3, #160]	; 0xa0
 cbc:	ldr	r3, [pc, #236]	; db0 <__flatcc_fb_codegen_c+0x2b0>
 cc0:	ldr	r2, [fp, #-12]
 cc4:	ldr	r0, [fp, #-16]
 cc8:	bl	118 <__flatcc_fb_open_output_file>
 ccc:	mov	r3, r0
 cd0:	cmp	r3, #0
 cd4:	beq	ce4 <__flatcc_fb_codegen_c+0x1e4>
 cd8:	mvn	r3, #0
 cdc:	str	r3, [fp, #-8]
 ce0:	b	d94 <__flatcc_fb_codegen_c+0x294>
 ce4:	ldr	r0, [fp, #-16]
 ce8:	bl	0 <__flatcc_fb_gen_c_json_parser>
 cec:	str	r0, [fp, #-8]
 cf0:	ldr	r3, [fp, #-8]
 cf4:	cmp	r3, #0
 cf8:	bne	d88 <__flatcc_fb_codegen_c+0x288>
 cfc:	ldr	r0, [fp, #-16]
 d00:	bl	22c <__flatcc_fb_close_output_file>
 d04:	ldr	r3, [fp, #-16]
 d08:	ldr	r3, [r3, #212]	; 0xd4
 d0c:	ldr	r3, [r3, #168]	; 0xa8
 d10:	cmp	r3, #0
 d14:	beq	d94 <__flatcc_fb_codegen_c+0x294>
 d18:	ldr	r3, [fp, #-16]
 d1c:	ldr	r3, [r3, #208]	; 0xd0
 d20:	ldr	r1, [r3, #160]	; 0xa0
 d24:	ldr	r3, [pc, #136]	; db4 <__flatcc_fb_codegen_c+0x2b4>
 d28:	ldr	r2, [fp, #-12]
 d2c:	ldr	r0, [fp, #-16]
 d30:	bl	118 <__flatcc_fb_open_output_file>
 d34:	mov	r3, r0
 d38:	cmp	r3, #0
 d3c:	beq	d4c <__flatcc_fb_codegen_c+0x24c>
 d40:	mvn	r3, #0
 d44:	str	r3, [fp, #-8]
 d48:	b	d94 <__flatcc_fb_codegen_c+0x294>
 d4c:	ldr	r0, [fp, #-16]
 d50:	bl	0 <__flatcc_fb_gen_c_json_printer>
 d54:	str	r0, [fp, #-8]
 d58:	ldr	r3, [fp, #-8]
 d5c:	cmp	r3, #0
 d60:	bne	d90 <__flatcc_fb_codegen_c+0x290>
 d64:	ldr	r0, [fp, #-16]
 d68:	bl	22c <__flatcc_fb_close_output_file>
 d6c:	b	d94 <__flatcc_fb_codegen_c+0x294>
 d70:	nop			; (mov r0, r0)
 d74:	b	d94 <__flatcc_fb_codegen_c+0x294>
 d78:	nop			; (mov r0, r0)
 d7c:	b	d94 <__flatcc_fb_codegen_c+0x294>
 d80:	nop			; (mov r0, r0)
 d84:	b	d94 <__flatcc_fb_codegen_c+0x294>
 d88:	nop			; (mov r0, r0)
 d8c:	b	d94 <__flatcc_fb_codegen_c+0x294>
 d90:	nop			; (mov r0, r0)
 d94:	ldr	r3, [fp, #-8]
 d98:	mov	r0, r3
 d9c:	sub	sp, fp, #4
 da0:	pop	{fp, pc}
 da4:	.word	0x00000130
 da8:	.word	0x0000013c
 dac:	.word	0x00000148
 db0:	.word	0x00000154
 db4:	.word	0x00000164
