
../compcert-repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/armazem.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <armazem_novo>:
   0:	push	{fp, lr}
   4:	add	fp, sp, #4
   8:	sub	sp, sp, #16
   c:	str	r0, [fp, #-16]
  10:	str	r1, [fp, #-20]	; 0xffffffec
  14:	mov	r0, #12
  18:	bl	0 <malloc>
  1c:	mov	r3, r0
  20:	str	r3, [fp, #-8]
  24:	ldr	r3, [fp, #-8]
  28:	ldr	r2, [fp, #-16]
  2c:	str	r2, [r3]
  30:	ldr	r3, [fp, #-8]
  34:	ldr	r2, [fp, #-20]	; 0xffffffec
  38:	str	r2, [r3, #4]
  3c:	bl	0 <fila_nova>
  40:	mov	r2, r0
  44:	ldr	r3, [fp, #-8]
  48:	str	r2, [r3, #8]
  4c:	ldr	r3, [fp, #-8]
  50:	mov	r0, r3
  54:	sub	sp, fp, #4
  58:	pop	{fp, pc}

0000005c <armazem_vazio>:
  5c:	push	{fp, lr}
  60:	add	fp, sp, #4
  64:	sub	sp, sp, #8
  68:	str	r0, [fp, #-8]
  6c:	ldr	r3, [fp, #-8]
  70:	cmp	r3, #0
  74:	beq	94 <armazem_vazio+0x38>
  78:	ldr	r3, [fp, #-8]
  7c:	ldr	r3, [r3, #8]
  80:	mov	r0, r3
  84:	bl	0 <fila_tamanho>
  88:	mov	r3, r0
  8c:	cmp	r3, #0
  90:	bne	9c <armazem_vazio+0x40>
  94:	mov	r3, #1
  98:	b	a0 <armazem_vazio+0x44>
  9c:	mov	r3, #0
  a0:	mov	r0, r3
  a4:	sub	sp, fp, #4
  a8:	pop	{fp, pc}

000000ac <armazem_cheio>:
  ac:	push	{fp, lr}
  b0:	add	fp, sp, #4
  b4:	sub	sp, sp, #8
  b8:	str	r0, [fp, #-8]
  bc:	ldr	r0, [fp, #-8]
  c0:	bl	5c <armazem_vazio>
  c4:	mov	r3, r0
  c8:	cmp	r3, #0
  cc:	beq	d8 <armazem_cheio+0x2c>
  d0:	mov	r3, #0
  d4:	b	130 <armazem_cheio+0x84>
  d8:	ldr	r3, [fp, #-8]
  dc:	ldr	r3, [r3, #8]
  e0:	mov	r0, r3
  e4:	bl	0 <fila_tamanho>
  e8:	mov	r2, r0
  ec:	ldr	r3, [fp, #-8]
  f0:	ldr	r3, [r3]
  f4:	cmp	r2, r3
  f8:	bne	12c <armazem_cheio+0x80>
  fc:	ldr	r3, [fp, #-8]
 100:	ldr	r3, [r3, #8]
 104:	mov	r0, r3
 108:	bl	0 <fila_back>
 10c:	mov	r3, r0
 110:	ldr	r2, [r3, #4]
 114:	ldr	r3, [fp, #-8]
 118:	ldr	r3, [r3, #4]
 11c:	cmp	r2, r3
 120:	bne	12c <armazem_cheio+0x80>
 124:	mov	r3, #1
 128:	b	130 <armazem_cheio+0x84>
 12c:	mov	r3, #0
 130:	mov	r0, r3
 134:	sub	sp, fp, #4
 138:	pop	{fp, pc}

0000013c <armazenar_contentor>:
 13c:	push	{r4, fp, lr}
 140:	add	fp, sp, #8
 144:	sub	sp, sp, #20
 148:	str	r0, [fp, #-24]	; 0xffffffe8
 14c:	str	r1, [fp, #-28]	; 0xffffffe4
 150:	bl	0 <pilha_nova>
 154:	str	r0, [fp, #-16]
 158:	ldr	r3, [fp, #-24]	; 0xffffffe8
 15c:	cmp	r3, #0
 160:	beq	184 <armazenar_contentor+0x48>
 164:	ldr	r3, [fp, #-28]	; 0xffffffe4
 168:	cmp	r3, #0
 16c:	beq	184 <armazenar_contentor+0x48>
 170:	ldr	r0, [fp, #-24]	; 0xffffffe8
 174:	bl	ac <armazem_cheio>
 178:	mov	r3, r0
 17c:	cmp	r3, #0
 180:	beq	18c <armazenar_contentor+0x50>
 184:	mov	r3, #0
 188:	b	21c <armazenar_contentor+0xe0>
 18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 190:	bl	5c <armazem_vazio>
 194:	mov	r3, r0
 198:	cmp	r3, #0
 19c:	beq	1bc <armazenar_contentor+0x80>
 1a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1a4:	ldr	r4, [r3, #8]
 1a8:	bl	0 <pilha_nova>
 1ac:	mov	r3, r0
 1b0:	mov	r1, r3
 1b4:	mov	r0, r4
 1b8:	bl	0 <fila_push>
 1bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1c0:	ldr	r3, [r3, #8]
 1c4:	mov	r0, r3
 1c8:	bl	0 <fila_back>
 1cc:	mov	r3, r0
 1d0:	ldr	r2, [r3, #4]
 1d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1d8:	ldr	r3, [r3, #4]
 1dc:	cmp	r2, r3
 1e0:	bne	1f8 <armazenar_contentor+0xbc>
 1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1e8:	ldr	r3, [r3, #8]
 1ec:	ldr	r1, [fp, #-16]
 1f0:	mov	r0, r3
 1f4:	bl	0 <fila_push>
 1f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
 1fc:	ldr	r3, [r3, #8]
 200:	mov	r0, r3
 204:	bl	0 <fila_back>
 208:	mov	r3, r0
 20c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 210:	mov	r0, r3
 214:	bl	0 <pilha_push>
 218:	mov	r3, #1
 21c:	mov	r0, r3
 220:	sub	sp, fp, #8
 224:	pop	{r4, fp, pc}

00000228 <expedir_contentor>:
 228:	push	{r4, fp, lr}
 22c:	add	fp, sp, #8
 230:	sub	sp, sp, #20
 234:	str	r0, [fp, #-24]	; 0xffffffe8
 238:	ldr	r0, [fp, #-24]	; 0xffffffe8
 23c:	bl	5c <armazem_vazio>
 240:	mov	r3, r0
 244:	cmp	r3, #0
 248:	bne	274 <expedir_contentor+0x4c>
 24c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 250:	ldr	r3, [r3, #8]
 254:	mov	r0, r3
 258:	bl	0 <fila_front>
 25c:	mov	r3, r0
 260:	mov	r0, r3
 264:	bl	0 <pilha_top>
 268:	mov	r3, r0
 26c:	cmp	r3, #0
 270:	bne	27c <expedir_contentor+0x54>
 274:	mov	r3, #0
 278:	b	328 <expedir_contentor+0x100>
 27c:	ldr	r3, [fp, #-24]	; 0xffffffe8
 280:	ldr	r3, [r3, #8]
 284:	mov	r0, r3
 288:	bl	0 <fila_front>
 28c:	mov	r3, r0
 290:	mov	r0, r3
 294:	bl	0 <pilha_top>
 298:	mov	r3, r0
 29c:	ldr	r4, [r3]
 2a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2a4:	ldr	r3, [r3, #8]
 2a8:	mov	r0, r3
 2ac:	bl	0 <fila_front>
 2b0:	mov	r3, r0
 2b4:	mov	r0, r3
 2b8:	bl	0 <pilha_top>
 2bc:	mov	r3, r0
 2c0:	vldr	s15, [r3, #4]
 2c4:	vmov.f32	s0, s15
 2c8:	mov	r0, r4
 2cc:	bl	0 <contentor_novo>
 2d0:	str	r0, [fp, #-16]
 2d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2d8:	ldr	r3, [r3, #8]
 2dc:	mov	r0, r3
 2e0:	bl	0 <fila_front>
 2e4:	mov	r3, r0
 2e8:	ldr	r3, [r3, #4]
 2ec:	cmp	r3, #1
 2f0:	bgt	308 <expedir_contentor+0xe0>
 2f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
 2f8:	ldr	r3, [r3, #8]
 2fc:	mov	r0, r3
 300:	bl	0 <fila_pop>
 304:	b	324 <expedir_contentor+0xfc>
 308:	ldr	r3, [fp, #-24]	; 0xffffffe8
 30c:	ldr	r3, [r3, #8]
 310:	mov	r0, r3
 314:	bl	0 <fila_front>
 318:	mov	r3, r0
 31c:	mov	r0, r3
 320:	bl	0 <pilha_pop>
 324:	ldr	r3, [fp, #-16]
 328:	mov	r0, r3
 32c:	sub	sp, fp, #8
 330:	pop	{r4, fp, pc}
