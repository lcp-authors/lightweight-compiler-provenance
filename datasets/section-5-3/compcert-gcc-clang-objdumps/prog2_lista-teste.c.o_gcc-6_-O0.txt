
../compcert-repos/prog2/CMakeFiles/4.dir/Aula04_Listas_T1/lista-teste.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_l>:
       0:	push	{r0, r1, r2, r3}
       4:	push	{fp, lr}
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #24
      10:	mov	r0, #12
      14:	bl	0 <malloc>
      18:	mov	r3, r0
      1c:	str	r3, [fp, #-16]
      20:	ldr	r3, [fp, #-16]
      24:	mov	r2, #0
      28:	str	r2, [r3]
      2c:	ldr	r3, [fp, #-16]
      30:	mov	r2, #0
      34:	str	r2, [r3, #4]
      38:	ldr	r3, [fp, #-16]
      3c:	ldr	r2, [fp, #4]
      40:	str	r2, [r3, #8]
      44:	add	r3, fp, #8
      48:	str	r3, [fp, #-24]	; 0xffffffe8
      4c:	mov	r3, #0
      50:	str	r3, [fp, #-12]
      54:	b	128 <_l+0x128>
      58:	ldr	r3, [fp, #-24]	; 0xffffffe8
      5c:	add	r2, r3, #4
      60:	str	r2, [fp, #-24]	; 0xffffffe8
      64:	ldr	r3, [r3]
      68:	str	r3, [fp, #-20]	; 0xffffffec
      6c:	ldr	r3, [fp, #-12]
      70:	cmp	r3, #0
      74:	bne	ac <_l+0xac>
      78:	mov	r0, #12
      7c:	bl	0 <malloc>
      80:	mov	r3, r0
      84:	mov	r2, r3
      88:	ldr	r3, [fp, #-16]
      8c:	str	r2, [r3]
      90:	ldr	r3, [fp, #-16]
      94:	ldr	r3, [r3]
      98:	str	r3, [fp, #-8]
      9c:	ldr	r3, [fp, #-8]
      a0:	mov	r2, #0
      a4:	str	r2, [r3, #8]
      a8:	b	e0 <_l+0xe0>
      ac:	mov	r0, #12
      b0:	bl	0 <malloc>
      b4:	mov	r3, r0
      b8:	mov	r2, r3
      bc:	ldr	r3, [fp, #-8]
      c0:	str	r2, [r3, #4]
      c4:	ldr	r3, [fp, #-8]
      c8:	ldr	r3, [r3, #4]
      cc:	ldr	r2, [fp, #-8]
      d0:	str	r2, [r3, #8]
      d4:	ldr	r3, [fp, #-8]
      d8:	ldr	r3, [r3, #4]
      dc:	str	r3, [fp, #-8]
      e0:	ldr	r0, [fp, #-20]	; 0xffffffec
      e4:	bl	0 <strlen>
      e8:	mov	r3, r0
      ec:	add	r3, r3, #1
      f0:	mov	r0, r3
      f4:	bl	0 <malloc>
      f8:	mov	r3, r0
      fc:	mov	r2, r3
     100:	ldr	r3, [fp, #-8]
     104:	str	r2, [r3]
     108:	ldr	r3, [fp, #-8]
     10c:	ldr	r3, [r3]
     110:	ldr	r1, [fp, #-20]	; 0xffffffec
     114:	mov	r0, r3
     118:	bl	0 <strcpy>
     11c:	ldr	r3, [fp, #-12]
     120:	add	r3, r3, #1
     124:	str	r3, [fp, #-12]
     128:	ldr	r2, [fp, #-12]
     12c:	ldr	r3, [fp, #4]
     130:	cmp	r2, r3
     134:	blt	58 <_l+0x58>
     138:	ldr	r3, [fp, #-8]
     13c:	mov	r2, #0
     140:	str	r2, [r3, #4]
     144:	ldr	r3, [fp, #-16]
     148:	ldr	r2, [fp, #-8]
     14c:	str	r2, [r3, #4]
     150:	ldr	r3, [fp, #-16]
     154:	mov	r0, r3
     158:	sub	sp, fp, #4
     15c:	pop	{fp, lr}
     160:	add	sp, sp, #16
     164:	bx	lr

00000168 <_f>:
     168:	push	{fp}		; (str fp, [sp, #-4]!)
     16c:	add	fp, sp, #0
     170:	sub	sp, sp, #20
     174:	str	r0, [fp, #-16]
     178:	str	r1, [fp, #-20]	; 0xffffffec
     17c:	ldr	r3, [fp, #-16]
     180:	cmp	r3, #0
     184:	bne	190 <_f+0x28>
     188:	mov	r3, #0
     18c:	b	1fc <_f+0x94>
     190:	ldr	r3, [fp, #-16]
     194:	ldr	r3, [r3]
     198:	str	r3, [fp, #-12]
     19c:	mov	r3, #0
     1a0:	str	r3, [fp, #-8]
     1a4:	b	1c0 <_f+0x58>
     1a8:	ldr	r3, [fp, #-12]
     1ac:	ldr	r3, [r3, #4]
     1b0:	str	r3, [fp, #-12]
     1b4:	ldr	r3, [fp, #-8]
     1b8:	add	r3, r3, #1
     1bc:	str	r3, [fp, #-8]
     1c0:	ldr	r2, [fp, #-8]
     1c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     1c8:	cmp	r2, r3
     1cc:	bge	1dc <_f+0x74>
     1d0:	ldr	r3, [fp, #-12]
     1d4:	cmp	r3, #0
     1d8:	bne	1a8 <_f+0x40>
     1dc:	ldr	r2, [fp, #-20]	; 0xffffffec
     1e0:	ldr	r3, [fp, #-8]
     1e4:	cmp	r2, r3
     1e8:	bne	1f8 <_f+0x90>
     1ec:	ldr	r3, [fp, #-12]
     1f0:	ldr	r3, [r3]
     1f4:	b	1fc <_f+0x94>
     1f8:	ldr	r3, [pc, #12]	; 20c <_f+0xa4>
     1fc:	mov	r0, r3
     200:	add	sp, fp, #0
     204:	pop	{fp}		; (ldr fp, [sp], #4)
     208:	bx	lr
     20c:	.word	0x00000000

00000210 <teste_lista_nova>:
     210:	push	{fp, lr}
     214:	add	fp, sp, #4
     218:	sub	sp, sp, #8
     21c:	mov	r3, #0
     220:	str	r3, [fp, #-8]
     224:	ldr	r0, [pc, #172]	; 2d8 <teste_lista_nova+0xc8>
     228:	bl	0 <printf>
     22c:	bl	0 <lista_nova>
     230:	str	r0, [fp, #-12]
     234:	ldr	r3, [fp, #-12]
     238:	cmp	r3, #0
     23c:	bne	27c <teste_lista_nova+0x6c>
     240:	ldr	r0, [pc, #148]	; 2dc <teste_lista_nova+0xcc>
     244:	bl	0 <printf>
     248:	ldr	r3, [fp, #-8]
     24c:	add	r3, r3, #1
     250:	str	r3, [fp, #-8]
     254:	ldr	r3, [fp, #-8]
     258:	cmp	r3, #0
     25c:	bne	26c <teste_lista_nova+0x5c>
     260:	ldr	r0, [pc, #120]	; 2e0 <teste_lista_nova+0xd0>
     264:	bl	0 <puts>
     268:	b	274 <teste_lista_nova+0x64>
     26c:	mov	r0, #10
     270:	bl	0 <putchar>
     274:	ldr	r3, [fp, #-8]
     278:	b	2cc <teste_lista_nova+0xbc>
     27c:	ldr	r3, [fp, #-12]
     280:	ldr	r3, [r3, #8]
     284:	cmp	r3, #0
     288:	beq	2a0 <teste_lista_nova+0x90>
     28c:	ldr	r0, [pc, #80]	; 2e4 <teste_lista_nova+0xd4>
     290:	bl	0 <printf>
     294:	ldr	r3, [fp, #-8]
     298:	add	r3, r3, #1
     29c:	str	r3, [fp, #-8]
     2a0:	ldr	r0, [fp, #-12]
     2a4:	bl	0 <lista_apaga>
     2a8:	ldr	r3, [fp, #-8]
     2ac:	cmp	r3, #0
     2b0:	bne	2c0 <teste_lista_nova+0xb0>
     2b4:	ldr	r0, [pc, #36]	; 2e0 <teste_lista_nova+0xd0>
     2b8:	bl	0 <puts>
     2bc:	b	2c8 <teste_lista_nova+0xb8>
     2c0:	mov	r0, #10
     2c4:	bl	0 <putchar>
     2c8:	ldr	r3, [fp, #-8]
     2cc:	mov	r0, r3
     2d0:	sub	sp, fp, #4
     2d4:	pop	{fp, pc}
     2d8:	.word	0x00000004
     2dc:	.word	0x00000014
     2e0:	.word	0x0000002c
     2e4:	.word	0x00000030

000002e8 <teste_lista_insere>:
     2e8:	push	{fp, lr}
     2ec:	add	fp, sp, #4
     2f0:	sub	sp, sp, #24
     2f4:	mov	r3, #0
     2f8:	str	r3, [fp, #-8]
     2fc:	ldr	r3, [pc, #1100]	; 750 <teste_lista_insere+0x468>
     300:	str	r3, [fp, #-12]
     304:	ldr	r3, [pc, #1096]	; 754 <teste_lista_insere+0x46c>
     308:	str	r3, [fp, #-16]
     30c:	ldr	r2, [fp, #-12]
     310:	ldr	r1, [fp, #-12]
     314:	mov	r0, #2
     318:	bl	0 <_l>
     31c:	str	r0, [fp, #-20]	; 0xffffffec
     320:	ldr	r0, [pc, #1072]	; 758 <teste_lista_insere+0x470>
     324:	bl	0 <printf>
     328:	ldr	r3, [fp, #-20]	; 0xffffffec
     32c:	ldr	r3, [r3]
     330:	ldr	r3, [r3, #4]
     334:	mov	r2, r3
     338:	ldr	r1, [fp, #-16]
     33c:	ldr	r0, [fp, #-20]	; 0xffffffec
     340:	bl	0 <lista_insere>
     344:	str	r0, [fp, #-24]	; 0xffffffe8
     348:	ldr	r3, [fp, #-24]	; 0xffffffe8
     34c:	cmp	r3, #0
     350:	bne	368 <teste_lista_insere+0x80>
     354:	ldr	r0, [pc, #1024]	; 75c <teste_lista_insere+0x474>
     358:	bl	0 <printf>
     35c:	ldr	r3, [fp, #-8]
     360:	add	r3, r3, #1
     364:	str	r3, [fp, #-8]
     368:	ldr	r3, [fp, #-20]	; 0xffffffec
     36c:	ldr	r3, [r3, #8]
     370:	cmp	r3, #3
     374:	beq	38c <teste_lista_insere+0xa4>
     378:	ldr	r0, [pc, #992]	; 760 <teste_lista_insere+0x478>
     37c:	bl	0 <printf>
     380:	ldr	r3, [fp, #-8]
     384:	add	r3, r3, #1
     388:	str	r3, [fp, #-8]
     38c:	ldr	r3, [fp, #-20]	; 0xffffffec
     390:	ldr	r3, [r3, #8]
     394:	cmp	r3, #3
     398:	beq	3c4 <teste_lista_insere+0xdc>
     39c:	ldr	r3, [fp, #-8]
     3a0:	cmp	r3, #0
     3a4:	bne	3b4 <teste_lista_insere+0xcc>
     3a8:	ldr	r0, [pc, #948]	; 764 <teste_lista_insere+0x47c>
     3ac:	bl	0 <puts>
     3b0:	b	3bc <teste_lista_insere+0xd4>
     3b4:	mov	r0, #10
     3b8:	bl	0 <putchar>
     3bc:	ldr	r3, [fp, #-8]
     3c0:	b	744 <teste_lista_insere+0x45c>
     3c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     3c8:	ldr	r3, [r3]
     3cc:	ldr	r3, [r3]
     3d0:	ldr	r1, [fp, #-12]
     3d4:	mov	r0, r3
     3d8:	bl	0 <strcmp>
     3dc:	mov	r3, r0
     3e0:	cmp	r3, #0
     3e4:	bne	43c <teste_lista_insere+0x154>
     3e8:	ldr	r3, [fp, #-20]	; 0xffffffec
     3ec:	ldr	r3, [r3]
     3f0:	ldr	r3, [r3, #4]
     3f4:	ldr	r3, [r3]
     3f8:	ldr	r1, [fp, #-16]
     3fc:	mov	r0, r3
     400:	bl	0 <strcmp>
     404:	mov	r3, r0
     408:	cmp	r3, #0
     40c:	bne	43c <teste_lista_insere+0x154>
     410:	ldr	r3, [fp, #-20]	; 0xffffffec
     414:	ldr	r3, [r3]
     418:	ldr	r3, [r3, #4]
     41c:	ldr	r3, [r3, #4]
     420:	ldr	r3, [r3]
     424:	ldr	r1, [fp, #-12]
     428:	mov	r0, r3
     42c:	bl	0 <strcmp>
     430:	mov	r3, r0
     434:	cmp	r3, #0
     438:	beq	450 <teste_lista_insere+0x168>
     43c:	ldr	r0, [pc, #804]	; 768 <teste_lista_insere+0x480>
     440:	bl	0 <printf>
     444:	ldr	r3, [fp, #-8]
     448:	add	r3, r3, #1
     44c:	str	r3, [fp, #-8]
     450:	ldr	r3, [fp, #-20]	; 0xffffffec
     454:	ldr	r3, [r3]
     458:	mov	r2, r3
     45c:	ldr	r1, [fp, #-16]
     460:	ldr	r0, [fp, #-20]	; 0xffffffec
     464:	bl	0 <lista_insere>
     468:	str	r0, [fp, #-24]	; 0xffffffe8
     46c:	ldr	r3, [fp, #-20]	; 0xffffffec
     470:	ldr	r2, [r3]
     474:	ldr	r3, [fp, #-24]	; 0xffffffe8
     478:	cmp	r2, r3
     47c:	beq	494 <teste_lista_insere+0x1ac>
     480:	ldr	r0, [pc, #740]	; 76c <teste_lista_insere+0x484>
     484:	bl	0 <printf>
     488:	ldr	r3, [fp, #-8]
     48c:	add	r3, r3, #1
     490:	str	r3, [fp, #-8]
     494:	ldr	r3, [fp, #-20]	; 0xffffffec
     498:	ldr	r3, [r3, #8]
     49c:	cmp	r3, #4
     4a0:	beq	4b8 <teste_lista_insere+0x1d0>
     4a4:	ldr	r0, [pc, #708]	; 770 <teste_lista_insere+0x488>
     4a8:	bl	0 <printf>
     4ac:	ldr	r3, [fp, #-8]
     4b0:	add	r3, r3, #1
     4b4:	str	r3, [fp, #-8]
     4b8:	ldr	r3, [fp, #-20]	; 0xffffffec
     4bc:	ldr	r3, [r3, #8]
     4c0:	cmp	r3, #4
     4c4:	beq	4f0 <teste_lista_insere+0x208>
     4c8:	ldr	r3, [fp, #-8]
     4cc:	cmp	r3, #0
     4d0:	bne	4e0 <teste_lista_insere+0x1f8>
     4d4:	ldr	r0, [pc, #648]	; 764 <teste_lista_insere+0x47c>
     4d8:	bl	0 <puts>
     4dc:	b	4e8 <teste_lista_insere+0x200>
     4e0:	mov	r0, #10
     4e4:	bl	0 <putchar>
     4e8:	ldr	r3, [fp, #-8]
     4ec:	b	744 <teste_lista_insere+0x45c>
     4f0:	ldr	r3, [fp, #-20]	; 0xffffffec
     4f4:	ldr	r3, [r3]
     4f8:	ldr	r3, [r3]
     4fc:	ldr	r1, [fp, #-16]
     500:	mov	r0, r3
     504:	bl	0 <strcmp>
     508:	mov	r3, r0
     50c:	cmp	r3, #0
     510:	bne	598 <teste_lista_insere+0x2b0>
     514:	ldr	r3, [fp, #-20]	; 0xffffffec
     518:	ldr	r3, [r3]
     51c:	ldr	r3, [r3, #4]
     520:	ldr	r3, [r3]
     524:	ldr	r1, [fp, #-12]
     528:	mov	r0, r3
     52c:	bl	0 <strcmp>
     530:	mov	r3, r0
     534:	cmp	r3, #0
     538:	bne	598 <teste_lista_insere+0x2b0>
     53c:	ldr	r3, [fp, #-20]	; 0xffffffec
     540:	ldr	r3, [r3]
     544:	ldr	r3, [r3, #4]
     548:	ldr	r3, [r3, #4]
     54c:	ldr	r3, [r3]
     550:	ldr	r1, [fp, #-16]
     554:	mov	r0, r3
     558:	bl	0 <strcmp>
     55c:	mov	r3, r0
     560:	cmp	r3, #0
     564:	bne	598 <teste_lista_insere+0x2b0>
     568:	ldr	r3, [fp, #-20]	; 0xffffffec
     56c:	ldr	r3, [r3]
     570:	ldr	r3, [r3, #4]
     574:	ldr	r3, [r3, #4]
     578:	ldr	r3, [r3, #4]
     57c:	ldr	r3, [r3]
     580:	ldr	r1, [fp, #-12]
     584:	mov	r0, r3
     588:	bl	0 <strcmp>
     58c:	mov	r3, r0
     590:	cmp	r3, #0
     594:	beq	5ac <teste_lista_insere+0x2c4>
     598:	ldr	r0, [pc, #456]	; 768 <teste_lista_insere+0x480>
     59c:	bl	0 <printf>
     5a0:	ldr	r3, [fp, #-8]
     5a4:	add	r3, r3, #1
     5a8:	str	r3, [fp, #-8]
     5ac:	mov	r2, #0
     5b0:	ldr	r1, [pc, #412]	; 754 <teste_lista_insere+0x46c>
     5b4:	ldr	r0, [fp, #-20]	; 0xffffffec
     5b8:	bl	0 <lista_insere>
     5bc:	ldr	r3, [fp, #-20]	; 0xffffffec
     5c0:	ldr	r3, [r3, #8]
     5c4:	cmp	r3, #5
     5c8:	beq	5e0 <teste_lista_insere+0x2f8>
     5cc:	ldr	r0, [pc, #416]	; 774 <teste_lista_insere+0x48c>
     5d0:	bl	0 <printf>
     5d4:	ldr	r3, [fp, #-8]
     5d8:	add	r3, r3, #1
     5dc:	str	r3, [fp, #-8]
     5e0:	ldr	r3, [fp, #-20]	; 0xffffffec
     5e4:	ldr	r3, [r3, #8]
     5e8:	cmp	r3, #5
     5ec:	beq	618 <teste_lista_insere+0x330>
     5f0:	ldr	r3, [fp, #-8]
     5f4:	cmp	r3, #0
     5f8:	bne	608 <teste_lista_insere+0x320>
     5fc:	ldr	r0, [pc, #352]	; 764 <teste_lista_insere+0x47c>
     600:	bl	0 <puts>
     604:	b	610 <teste_lista_insere+0x328>
     608:	mov	r0, #10
     60c:	bl	0 <putchar>
     610:	ldr	r3, [fp, #-8]
     614:	b	744 <teste_lista_insere+0x45c>
     618:	ldr	r3, [fp, #-20]	; 0xffffffec
     61c:	ldr	r3, [r3]
     620:	ldr	r3, [r3, #4]
     624:	ldr	r3, [r3, #4]
     628:	ldr	r3, [r3, #4]
     62c:	ldr	r3, [r3, #4]
     630:	ldr	r3, [r3]
     634:	ldr	r1, [pc, #280]	; 754 <teste_lista_insere+0x46c>
     638:	mov	r0, r3
     63c:	bl	0 <strcmp>
     640:	mov	r3, r0
     644:	cmp	r3, #0
     648:	beq	660 <teste_lista_insere+0x378>
     64c:	ldr	r0, [pc, #276]	; 768 <teste_lista_insere+0x480>
     650:	bl	0 <printf>
     654:	ldr	r3, [fp, #-8]
     658:	add	r3, r3, #1
     65c:	str	r3, [fp, #-8]
     660:	ldr	r0, [fp, #-20]	; 0xffffffec
     664:	bl	0 <lista_apaga>
     668:	bl	0 <lista_nova>
     66c:	str	r0, [fp, #-20]	; 0xffffffec
     670:	mov	r2, #0
     674:	ldr	r1, [pc, #216]	; 754 <teste_lista_insere+0x46c>
     678:	ldr	r0, [fp, #-20]	; 0xffffffec
     67c:	bl	0 <lista_insere>
     680:	ldr	r3, [fp, #-20]	; 0xffffffec
     684:	ldr	r3, [r3, #8]
     688:	cmp	r3, #1
     68c:	beq	6a4 <teste_lista_insere+0x3bc>
     690:	ldr	r0, [pc, #224]	; 778 <teste_lista_insere+0x490>
     694:	bl	0 <printf>
     698:	ldr	r3, [fp, #-8]
     69c:	add	r3, r3, #1
     6a0:	str	r3, [fp, #-8]
     6a4:	ldr	r0, [fp, #-20]	; 0xffffffec
     6a8:	bl	0 <lista_tamanho>
     6ac:	mov	r3, r0
     6b0:	cmp	r3, #1
     6b4:	beq	6e0 <teste_lista_insere+0x3f8>
     6b8:	ldr	r3, [fp, #-8]
     6bc:	cmp	r3, #0
     6c0:	bne	6d0 <teste_lista_insere+0x3e8>
     6c4:	ldr	r0, [pc, #152]	; 764 <teste_lista_insere+0x47c>
     6c8:	bl	0 <puts>
     6cc:	b	6d8 <teste_lista_insere+0x3f0>
     6d0:	mov	r0, #10
     6d4:	bl	0 <putchar>
     6d8:	ldr	r3, [fp, #-8]
     6dc:	b	744 <teste_lista_insere+0x45c>
     6e0:	ldr	r3, [fp, #-20]	; 0xffffffec
     6e4:	ldr	r3, [r3]
     6e8:	ldr	r3, [r3]
     6ec:	ldr	r1, [pc, #96]	; 754 <teste_lista_insere+0x46c>
     6f0:	mov	r0, r3
     6f4:	bl	0 <strcmp>
     6f8:	mov	r3, r0
     6fc:	cmp	r3, #0
     700:	beq	718 <teste_lista_insere+0x430>
     704:	ldr	r0, [pc, #92]	; 768 <teste_lista_insere+0x480>
     708:	bl	0 <printf>
     70c:	ldr	r3, [fp, #-8]
     710:	add	r3, r3, #1
     714:	str	r3, [fp, #-8]
     718:	ldr	r0, [fp, #-20]	; 0xffffffec
     71c:	bl	0 <lista_apaga>
     720:	ldr	r3, [fp, #-8]
     724:	cmp	r3, #0
     728:	bne	738 <teste_lista_insere+0x450>
     72c:	ldr	r0, [pc, #48]	; 764 <teste_lista_insere+0x47c>
     730:	bl	0 <puts>
     734:	b	740 <teste_lista_insere+0x458>
     738:	mov	r0, #10
     73c:	bl	0 <putchar>
     740:	ldr	r3, [fp, #-8]
     744:	mov	r0, r3
     748:	sub	sp, fp, #4
     74c:	pop	{fp, pc}
     750:	.word	0x00000054
     754:	.word	0x00000058
     758:	.word	0x00000060
     75c:	.word	0x00000074
     760:	.word	0x000000a0
     764:	.word	0x0000002c
     768:	.word	0x000000dc
     76c:	.word	0x00000114
     770:	.word	0x00000144
     774:	.word	0x00000180
     778:	.word	0x000001bc

0000077c <teste_lista_remove>:
     77c:	push	{fp, lr}
     780:	add	fp, sp, #4
     784:	sub	sp, sp, #24
     788:	mov	r3, #0
     78c:	str	r3, [fp, #-8]
     790:	ldr	r3, [pc, #444]	; 954 <teste_lista_remove+0x1d8>
     794:	str	r3, [sp, #4]
     798:	ldr	r3, [pc, #440]	; 958 <teste_lista_remove+0x1dc>
     79c:	str	r3, [sp]
     7a0:	ldr	r3, [pc, #436]	; 95c <teste_lista_remove+0x1e0>
     7a4:	ldr	r2, [pc, #436]	; 960 <teste_lista_remove+0x1e4>
     7a8:	ldr	r1, [pc, #436]	; 964 <teste_lista_remove+0x1e8>
     7ac:	mov	r0, #5
     7b0:	bl	0 <_l>
     7b4:	str	r0, [fp, #-12]
     7b8:	ldr	r0, [pc, #424]	; 968 <teste_lista_remove+0x1ec>
     7bc:	bl	0 <printf>
     7c0:	ldr	r3, [fp, #-12]
     7c4:	ldr	r3, [r3]
     7c8:	ldr	r3, [r3, #4]
     7cc:	ldr	r3, [r3, #4]
     7d0:	ldr	r3, [r3, #4]
     7d4:	mov	r1, r3
     7d8:	ldr	r0, [fp, #-12]
     7dc:	bl	0 <lista_remove>
     7e0:	str	r0, [fp, #-16]
     7e4:	ldr	r3, [fp, #-12]
     7e8:	ldr	r2, [r3, #4]
     7ec:	ldr	r3, [fp, #-16]
     7f0:	cmp	r2, r3
     7f4:	beq	80c <teste_lista_remove+0x90>
     7f8:	ldr	r0, [pc, #364]	; 96c <teste_lista_remove+0x1f0>
     7fc:	bl	0 <printf>
     800:	ldr	r3, [fp, #-8]
     804:	add	r3, r3, #1
     808:	str	r3, [fp, #-8]
     80c:	ldr	r3, [fp, #-12]
     810:	ldr	r3, [r3, #8]
     814:	cmp	r3, #4
     818:	beq	830 <teste_lista_remove+0xb4>
     81c:	ldr	r0, [pc, #332]	; 970 <teste_lista_remove+0x1f4>
     820:	bl	0 <printf>
     824:	ldr	r3, [fp, #-8]
     828:	add	r3, r3, #1
     82c:	str	r3, [fp, #-8]
     830:	ldr	r3, [fp, #-12]
     834:	ldr	r3, [r3]
     838:	ldr	r3, [r3]
     83c:	ldr	r1, [pc, #288]	; 964 <teste_lista_remove+0x1e8>
     840:	mov	r0, r3
     844:	bl	0 <strcmp>
     848:	mov	r3, r0
     84c:	cmp	r3, #0
     850:	bne	8d8 <teste_lista_remove+0x15c>
     854:	ldr	r3, [fp, #-12]
     858:	ldr	r3, [r3]
     85c:	ldr	r3, [r3, #4]
     860:	ldr	r3, [r3]
     864:	ldr	r1, [pc, #244]	; 960 <teste_lista_remove+0x1e4>
     868:	mov	r0, r3
     86c:	bl	0 <strcmp>
     870:	mov	r3, r0
     874:	cmp	r3, #0
     878:	bne	8d8 <teste_lista_remove+0x15c>
     87c:	ldr	r3, [fp, #-12]
     880:	ldr	r3, [r3]
     884:	ldr	r3, [r3, #4]
     888:	ldr	r3, [r3, #4]
     88c:	ldr	r3, [r3]
     890:	ldr	r1, [pc, #196]	; 95c <teste_lista_remove+0x1e0>
     894:	mov	r0, r3
     898:	bl	0 <strcmp>
     89c:	mov	r3, r0
     8a0:	cmp	r3, #0
     8a4:	bne	8d8 <teste_lista_remove+0x15c>
     8a8:	ldr	r3, [fp, #-12]
     8ac:	ldr	r3, [r3]
     8b0:	ldr	r3, [r3, #4]
     8b4:	ldr	r3, [r3, #4]
     8b8:	ldr	r3, [r3, #4]
     8bc:	ldr	r3, [r3]
     8c0:	ldr	r1, [pc, #140]	; 954 <teste_lista_remove+0x1d8>
     8c4:	mov	r0, r3
     8c8:	bl	0 <strcmp>
     8cc:	mov	r3, r0
     8d0:	cmp	r3, #0
     8d4:	beq	8ec <teste_lista_remove+0x170>
     8d8:	ldr	r0, [pc, #148]	; 974 <teste_lista_remove+0x1f8>
     8dc:	bl	0 <printf>
     8e0:	ldr	r3, [fp, #-8]
     8e4:	add	r3, r3, #1
     8e8:	str	r3, [fp, #-8]
     8ec:	mov	r1, #0
     8f0:	ldr	r0, [fp, #-12]
     8f4:	bl	0 <lista_remove>
     8f8:	str	r0, [fp, #-16]
     8fc:	ldr	r3, [fp, #-16]
     900:	cmp	r3, #0
     904:	beq	91c <teste_lista_remove+0x1a0>
     908:	ldr	r0, [pc, #104]	; 978 <teste_lista_remove+0x1fc>
     90c:	bl	0 <printf>
     910:	ldr	r3, [fp, #-8]
     914:	add	r3, r3, #1
     918:	str	r3, [fp, #-8]
     91c:	ldr	r0, [fp, #-12]
     920:	bl	0 <lista_apaga>
     924:	ldr	r3, [fp, #-8]
     928:	cmp	r3, #0
     92c:	bne	93c <teste_lista_remove+0x1c0>
     930:	ldr	r0, [pc, #68]	; 97c <teste_lista_remove+0x200>
     934:	bl	0 <puts>
     938:	b	944 <teste_lista_remove+0x1c8>
     93c:	mov	r0, #10
     940:	bl	0 <putchar>
     944:	ldr	r3, [fp, #-8]
     948:	mov	r0, r3
     94c:	sub	sp, fp, #4
     950:	pop	{fp, pc}
     954:	.word	0x00000204
     958:	.word	0x00000208
     95c:	.word	0x000001f8
     960:	.word	0x000001fc
     964:	.word	0x00000200
     968:	.word	0x0000020c
     96c:	.word	0x00000220
     970:	.word	0x0000025c
     974:	.word	0x00000298
     978:	.word	0x000002d0
     97c:	.word	0x0000002c

00000980 <teste_lista_pesquisa>:
     980:	push	{fp, lr}
     984:	add	fp, sp, #4
     988:	sub	sp, sp, #32
     98c:	mov	r3, #0
     990:	str	r3, [fp, #-8]
     994:	ldr	r3, [pc, #376]	; b14 <teste_lista_pesquisa+0x194>
     998:	str	r3, [fp, #-12]
     99c:	ldr	r3, [pc, #372]	; b18 <teste_lista_pesquisa+0x198>
     9a0:	str	r3, [fp, #-16]
     9a4:	ldr	r3, [fp, #-12]
     9a8:	str	r3, [sp, #12]
     9ac:	ldr	r3, [fp, #-12]
     9b0:	str	r3, [sp, #8]
     9b4:	ldr	r3, [fp, #-16]
     9b8:	str	r3, [sp, #4]
     9bc:	ldr	r3, [fp, #-12]
     9c0:	str	r3, [sp]
     9c4:	ldr	r3, [fp, #-12]
     9c8:	ldr	r2, [fp, #-12]
     9cc:	ldr	r1, [fp, #-12]
     9d0:	mov	r0, #7
     9d4:	bl	0 <_l>
     9d8:	str	r0, [fp, #-20]	; 0xffffffec
     9dc:	ldr	r0, [pc, #312]	; b1c <teste_lista_pesquisa+0x19c>
     9e0:	bl	0 <printf>
     9e4:	mov	r2, #0
     9e8:	ldr	r1, [fp, #-16]
     9ec:	ldr	r0, [fp, #-20]	; 0xffffffec
     9f0:	bl	0 <lista_pesquisa>
     9f4:	mov	r2, r0
     9f8:	ldr	r3, [fp, #-20]	; 0xffffffec
     9fc:	ldr	r3, [r3]
     a00:	ldr	r3, [r3, #4]
     a04:	ldr	r3, [r3, #4]
     a08:	ldr	r3, [r3, #4]
     a0c:	ldr	r3, [r3, #4]
     a10:	cmp	r2, r3
     a14:	beq	a2c <teste_lista_pesquisa+0xac>
     a18:	ldr	r0, [pc, #256]	; b20 <teste_lista_pesquisa+0x1a0>
     a1c:	bl	0 <printf>
     a20:	ldr	r3, [fp, #-8]
     a24:	add	r3, r3, #1
     a28:	str	r3, [fp, #-8]
     a2c:	mov	r2, #0
     a30:	ldr	r1, [pc, #236]	; b24 <teste_lista_pesquisa+0x1a4>
     a34:	ldr	r0, [fp, #-20]	; 0xffffffec
     a38:	bl	0 <lista_pesquisa>
     a3c:	mov	r3, r0
     a40:	cmp	r3, #0
     a44:	beq	a5c <teste_lista_pesquisa+0xdc>
     a48:	ldr	r0, [pc, #216]	; b28 <teste_lista_pesquisa+0x1a8>
     a4c:	bl	0 <printf>
     a50:	ldr	r3, [fp, #-8]
     a54:	add	r3, r3, #1
     a58:	str	r3, [fp, #-8]
     a5c:	mov	r2, #1
     a60:	ldr	r1, [fp, #-12]
     a64:	ldr	r0, [fp, #-20]	; 0xffffffec
     a68:	bl	0 <lista_pesquisa>
     a6c:	mov	r2, r0
     a70:	ldr	r3, [fp, #-20]	; 0xffffffec
     a74:	ldr	r3, [r3]
     a78:	ldr	r3, [r3, #4]
     a7c:	ldr	r3, [r3, #4]
     a80:	ldr	r3, [r3, #4]
     a84:	ldr	r3, [r3, #4]
     a88:	ldr	r3, [r3, #4]
     a8c:	ldr	r3, [r3, #4]
     a90:	cmp	r2, r3
     a94:	beq	aac <teste_lista_pesquisa+0x12c>
     a98:	ldr	r0, [pc, #128]	; b20 <teste_lista_pesquisa+0x1a0>
     a9c:	bl	0 <printf>
     aa0:	ldr	r3, [fp, #-8]
     aa4:	add	r3, r3, #1
     aa8:	str	r3, [fp, #-8]
     aac:	mov	r2, #1
     ab0:	ldr	r1, [pc, #108]	; b24 <teste_lista_pesquisa+0x1a4>
     ab4:	ldr	r0, [fp, #-20]	; 0xffffffec
     ab8:	bl	0 <lista_pesquisa>
     abc:	mov	r3, r0
     ac0:	cmp	r3, #0
     ac4:	beq	adc <teste_lista_pesquisa+0x15c>
     ac8:	ldr	r0, [pc, #88]	; b28 <teste_lista_pesquisa+0x1a8>
     acc:	bl	0 <printf>
     ad0:	ldr	r3, [fp, #-8]
     ad4:	add	r3, r3, #1
     ad8:	str	r3, [fp, #-8]
     adc:	ldr	r0, [fp, #-20]	; 0xffffffec
     ae0:	bl	0 <lista_apaga>
     ae4:	ldr	r3, [fp, #-8]
     ae8:	cmp	r3, #0
     aec:	bne	afc <teste_lista_pesquisa+0x17c>
     af0:	ldr	r0, [pc, #52]	; b2c <teste_lista_pesquisa+0x1ac>
     af4:	bl	0 <puts>
     af8:	b	b04 <teste_lista_pesquisa+0x184>
     afc:	mov	r0, #10
     b00:	bl	0 <putchar>
     b04:	ldr	r3, [fp, #-8]
     b08:	mov	r0, r3
     b0c:	sub	sp, fp, #4
     b10:	pop	{fp, pc}
     b14:	.word	0x00000054
     b18:	.word	0x00000304
     b1c:	.word	0x00000308
     b20:	.word	0x0000031c
     b24:	.word	0x00000364
     b28:	.word	0x0000036c
     b2c:	.word	0x0000002c

00000b30 <teste_lista_ordena>:
     b30:	push	{fp, lr}
     b34:	add	fp, sp, #4
     b38:	sub	sp, sp, #24
     b3c:	mov	r3, #0
     b40:	str	r3, [fp, #-8]
     b44:	ldr	r3, [pc, #628]	; dc0 <teste_lista_ordena+0x290>
     b48:	str	r3, [sp, #4]
     b4c:	ldr	r3, [pc, #624]	; dc4 <teste_lista_ordena+0x294>
     b50:	str	r3, [sp]
     b54:	ldr	r3, [pc, #620]	; dc8 <teste_lista_ordena+0x298>
     b58:	ldr	r2, [pc, #620]	; dcc <teste_lista_ordena+0x29c>
     b5c:	ldr	r1, [pc, #620]	; dd0 <teste_lista_ordena+0x2a0>
     b60:	mov	r0, #5
     b64:	bl	0 <_l>
     b68:	str	r0, [fp, #-12]
     b6c:	ldr	r0, [pc, #608]	; dd4 <teste_lista_ordena+0x2a4>
     b70:	bl	0 <printf>
     b74:	mov	r0, #0
     b78:	bl	0 <lista_ordena>
     b7c:	str	r0, [fp, #-16]
     b80:	ldr	r3, [fp, #-16]
     b84:	cmn	r3, #1
     b88:	beq	ba0 <teste_lista_ordena+0x70>
     b8c:	ldr	r0, [pc, #580]	; dd8 <teste_lista_ordena+0x2a8>
     b90:	bl	0 <printf>
     b94:	ldr	r3, [fp, #-8]
     b98:	add	r3, r3, #1
     b9c:	str	r3, [fp, #-8]
     ba0:	ldr	r0, [fp, #-12]
     ba4:	bl	0 <lista_ordena>
     ba8:	ldr	r3, [fp, #-12]
     bac:	ldr	r3, [r3]
     bb0:	ldr	r3, [r3]
     bb4:	ldr	r1, [pc, #532]	; dd0 <teste_lista_ordena+0x2a0>
     bb8:	mov	r0, r3
     bbc:	bl	0 <strcmp>
     bc0:	mov	r3, r0
     bc4:	cmp	r3, #0
     bc8:	bne	c84 <teste_lista_ordena+0x154>
     bcc:	ldr	r3, [fp, #-12]
     bd0:	ldr	r3, [r3]
     bd4:	ldr	r3, [r3, #4]
     bd8:	ldr	r3, [r3]
     bdc:	ldr	r1, [pc, #488]	; dcc <teste_lista_ordena+0x29c>
     be0:	mov	r0, r3
     be4:	bl	0 <strcmp>
     be8:	mov	r3, r0
     bec:	cmp	r3, #0
     bf0:	bne	c84 <teste_lista_ordena+0x154>
     bf4:	ldr	r3, [fp, #-12]
     bf8:	ldr	r3, [r3]
     bfc:	ldr	r3, [r3, #4]
     c00:	ldr	r3, [r3, #4]
     c04:	ldr	r3, [r3]
     c08:	ldr	r1, [pc, #436]	; dc4 <teste_lista_ordena+0x294>
     c0c:	mov	r0, r3
     c10:	bl	0 <strcmp>
     c14:	mov	r3, r0
     c18:	cmp	r3, #0
     c1c:	bne	c84 <teste_lista_ordena+0x154>
     c20:	ldr	r3, [fp, #-12]
     c24:	ldr	r3, [r3]
     c28:	ldr	r3, [r3, #4]
     c2c:	ldr	r3, [r3, #4]
     c30:	ldr	r3, [r3, #4]
     c34:	ldr	r3, [r3]
     c38:	ldr	r1, [pc, #384]	; dc0 <teste_lista_ordena+0x290>
     c3c:	mov	r0, r3
     c40:	bl	0 <strcmp>
     c44:	mov	r3, r0
     c48:	cmp	r3, #0
     c4c:	bne	c84 <teste_lista_ordena+0x154>
     c50:	ldr	r3, [fp, #-12]
     c54:	ldr	r3, [r3]
     c58:	ldr	r3, [r3, #4]
     c5c:	ldr	r3, [r3, #4]
     c60:	ldr	r3, [r3, #4]
     c64:	ldr	r3, [r3, #4]
     c68:	ldr	r3, [r3]
     c6c:	ldr	r1, [pc, #340]	; dc8 <teste_lista_ordena+0x298>
     c70:	mov	r0, r3
     c74:	bl	0 <strcmp>
     c78:	mov	r3, r0
     c7c:	cmp	r3, #0
     c80:	beq	c98 <teste_lista_ordena+0x168>
     c84:	ldr	r0, [pc, #336]	; ddc <teste_lista_ordena+0x2ac>
     c88:	bl	0 <printf>
     c8c:	ldr	r3, [fp, #-8]
     c90:	add	r3, r3, #1
     c94:	str	r3, [fp, #-8]
     c98:	ldr	r3, [fp, #-12]
     c9c:	ldr	r3, [r3, #4]
     ca0:	ldr	r3, [r3]
     ca4:	ldr	r1, [pc, #284]	; dc8 <teste_lista_ordena+0x298>
     ca8:	mov	r0, r3
     cac:	bl	0 <strcmp>
     cb0:	mov	r3, r0
     cb4:	cmp	r3, #0
     cb8:	bne	d74 <teste_lista_ordena+0x244>
     cbc:	ldr	r3, [fp, #-12]
     cc0:	ldr	r3, [r3, #4]
     cc4:	ldr	r3, [r3, #8]
     cc8:	ldr	r3, [r3]
     ccc:	ldr	r1, [pc, #236]	; dc0 <teste_lista_ordena+0x290>
     cd0:	mov	r0, r3
     cd4:	bl	0 <strcmp>
     cd8:	mov	r3, r0
     cdc:	cmp	r3, #0
     ce0:	bne	d74 <teste_lista_ordena+0x244>
     ce4:	ldr	r3, [fp, #-12]
     ce8:	ldr	r3, [r3, #4]
     cec:	ldr	r3, [r3, #8]
     cf0:	ldr	r3, [r3, #8]
     cf4:	ldr	r3, [r3]
     cf8:	ldr	r1, [pc, #196]	; dc4 <teste_lista_ordena+0x294>
     cfc:	mov	r0, r3
     d00:	bl	0 <strcmp>
     d04:	mov	r3, r0
     d08:	cmp	r3, #0
     d0c:	bne	d74 <teste_lista_ordena+0x244>
     d10:	ldr	r3, [fp, #-12]
     d14:	ldr	r3, [r3, #4]
     d18:	ldr	r3, [r3, #8]
     d1c:	ldr	r3, [r3, #8]
     d20:	ldr	r3, [r3, #8]
     d24:	ldr	r3, [r3]
     d28:	ldr	r1, [pc, #156]	; dcc <teste_lista_ordena+0x29c>
     d2c:	mov	r0, r3
     d30:	bl	0 <strcmp>
     d34:	mov	r3, r0
     d38:	cmp	r3, #0
     d3c:	bne	d74 <teste_lista_ordena+0x244>
     d40:	ldr	r3, [fp, #-12]
     d44:	ldr	r3, [r3, #4]
     d48:	ldr	r3, [r3, #8]
     d4c:	ldr	r3, [r3, #8]
     d50:	ldr	r3, [r3, #8]
     d54:	ldr	r3, [r3, #8]
     d58:	ldr	r3, [r3]
     d5c:	ldr	r1, [pc, #108]	; dd0 <teste_lista_ordena+0x2a0>
     d60:	mov	r0, r3
     d64:	bl	0 <strcmp>
     d68:	mov	r3, r0
     d6c:	cmp	r3, #0
     d70:	beq	d88 <teste_lista_ordena+0x258>
     d74:	ldr	r0, [pc, #100]	; de0 <teste_lista_ordena+0x2b0>
     d78:	bl	0 <printf>
     d7c:	ldr	r3, [fp, #-8]
     d80:	add	r3, r3, #1
     d84:	str	r3, [fp, #-8]
     d88:	ldr	r0, [fp, #-12]
     d8c:	bl	0 <lista_apaga>
     d90:	ldr	r3, [fp, #-8]
     d94:	cmp	r3, #0
     d98:	bne	da8 <teste_lista_ordena+0x278>
     d9c:	ldr	r0, [pc, #64]	; de4 <teste_lista_ordena+0x2b4>
     da0:	bl	0 <puts>
     da4:	b	db0 <teste_lista_ordena+0x280>
     da8:	mov	r0, #10
     dac:	bl	0 <putchar>
     db0:	ldr	r3, [fp, #-8]
     db4:	mov	r0, r3
     db8:	sub	sp, fp, #4
     dbc:	pop	{fp, pc}
     dc0:	.word	0x000003b8
     dc4:	.word	0x000003bc
     dc8:	.word	0x000003ac
     dcc:	.word	0x000003b0
     dd0:	.word	0x000003b4
     dd4:	.word	0x000003c0
     dd8:	.word	0x000003d4
     ddc:	.word	0x00000404
     de0:	.word	0x00000444
     de4:	.word	0x0000002c

00000de8 <teste_lista_inverte>:
     de8:	push	{fp, lr}
     dec:	add	fp, sp, #4
     df0:	sub	sp, sp, #24
     df4:	mov	r3, #0
     df8:	str	r3, [fp, #-8]
     dfc:	ldr	r3, [pc, #668]	; 10a0 <teste_lista_inverte+0x2b8>
     e00:	str	r3, [sp, #4]
     e04:	ldr	r3, [pc, #664]	; 10a4 <teste_lista_inverte+0x2bc>
     e08:	str	r3, [sp]
     e0c:	ldr	r3, [pc, #660]	; 10a8 <teste_lista_inverte+0x2c0>
     e10:	ldr	r2, [pc, #660]	; 10ac <teste_lista_inverte+0x2c4>
     e14:	ldr	r1, [pc, #660]	; 10b0 <teste_lista_inverte+0x2c8>
     e18:	mov	r0, #5
     e1c:	bl	0 <_l>
     e20:	str	r0, [fp, #-12]
     e24:	ldr	r0, [pc, #648]	; 10b4 <teste_lista_inverte+0x2cc>
     e28:	bl	0 <printf>
     e2c:	mov	r0, #0
     e30:	bl	0 <lista_inverte>
     e34:	str	r0, [fp, #-16]
     e38:	ldr	r3, [fp, #-16]
     e3c:	cmn	r3, #1
     e40:	beq	e58 <teste_lista_inverte+0x70>
     e44:	ldr	r0, [pc, #620]	; 10b8 <teste_lista_inverte+0x2d0>
     e48:	bl	0 <printf>
     e4c:	ldr	r3, [fp, #-8]
     e50:	add	r3, r3, #1
     e54:	str	r3, [fp, #-8]
     e58:	ldr	r0, [fp, #-12]
     e5c:	bl	0 <lista_inverte>
     e60:	str	r0, [fp, #-16]
     e64:	ldr	r3, [fp, #-12]
     e68:	ldr	r3, [r3, #8]
     e6c:	cmp	r3, #5
     e70:	beq	e88 <teste_lista_inverte+0xa0>
     e74:	ldr	r0, [pc, #576]	; 10bc <teste_lista_inverte+0x2d4>
     e78:	bl	0 <printf>
     e7c:	ldr	r3, [fp, #-8]
     e80:	add	r3, r3, #1
     e84:	str	r3, [fp, #-8]
     e88:	ldr	r3, [fp, #-12]
     e8c:	ldr	r3, [r3]
     e90:	ldr	r3, [r3]
     e94:	ldr	r1, [pc, #516]	; 10a0 <teste_lista_inverte+0x2b8>
     e98:	mov	r0, r3
     e9c:	bl	0 <strcmp>
     ea0:	mov	r3, r0
     ea4:	cmp	r3, #0
     ea8:	bne	f64 <teste_lista_inverte+0x17c>
     eac:	ldr	r3, [fp, #-12]
     eb0:	ldr	r3, [r3]
     eb4:	ldr	r3, [r3, #4]
     eb8:	ldr	r3, [r3]
     ebc:	ldr	r1, [pc, #480]	; 10a4 <teste_lista_inverte+0x2bc>
     ec0:	mov	r0, r3
     ec4:	bl	0 <strcmp>
     ec8:	mov	r3, r0
     ecc:	cmp	r3, #0
     ed0:	bne	f64 <teste_lista_inverte+0x17c>
     ed4:	ldr	r3, [fp, #-12]
     ed8:	ldr	r3, [r3]
     edc:	ldr	r3, [r3, #4]
     ee0:	ldr	r3, [r3, #4]
     ee4:	ldr	r3, [r3]
     ee8:	ldr	r1, [pc, #440]	; 10a8 <teste_lista_inverte+0x2c0>
     eec:	mov	r0, r3
     ef0:	bl	0 <strcmp>
     ef4:	mov	r3, r0
     ef8:	cmp	r3, #0
     efc:	bne	f64 <teste_lista_inverte+0x17c>
     f00:	ldr	r3, [fp, #-12]
     f04:	ldr	r3, [r3]
     f08:	ldr	r3, [r3, #4]
     f0c:	ldr	r3, [r3, #4]
     f10:	ldr	r3, [r3, #4]
     f14:	ldr	r3, [r3]
     f18:	ldr	r1, [pc, #396]	; 10ac <teste_lista_inverte+0x2c4>
     f1c:	mov	r0, r3
     f20:	bl	0 <strcmp>
     f24:	mov	r3, r0
     f28:	cmp	r3, #0
     f2c:	bne	f64 <teste_lista_inverte+0x17c>
     f30:	ldr	r3, [fp, #-12]
     f34:	ldr	r3, [r3]
     f38:	ldr	r3, [r3, #4]
     f3c:	ldr	r3, [r3, #4]
     f40:	ldr	r3, [r3, #4]
     f44:	ldr	r3, [r3, #4]
     f48:	ldr	r3, [r3]
     f4c:	ldr	r1, [pc, #348]	; 10b0 <teste_lista_inverte+0x2c8>
     f50:	mov	r0, r3
     f54:	bl	0 <strcmp>
     f58:	mov	r3, r0
     f5c:	cmp	r3, #0
     f60:	beq	f78 <teste_lista_inverte+0x190>
     f64:	ldr	r0, [pc, #340]	; 10c0 <teste_lista_inverte+0x2d8>
     f68:	bl	0 <printf>
     f6c:	ldr	r3, [fp, #-8]
     f70:	add	r3, r3, #1
     f74:	str	r3, [fp, #-8]
     f78:	ldr	r3, [fp, #-12]
     f7c:	ldr	r3, [r3, #4]
     f80:	ldr	r3, [r3]
     f84:	ldr	r1, [pc, #292]	; 10b0 <teste_lista_inverte+0x2c8>
     f88:	mov	r0, r3
     f8c:	bl	0 <strcmp>
     f90:	mov	r3, r0
     f94:	cmp	r3, #0
     f98:	bne	1054 <teste_lista_inverte+0x26c>
     f9c:	ldr	r3, [fp, #-12]
     fa0:	ldr	r3, [r3, #4]
     fa4:	ldr	r3, [r3, #8]
     fa8:	ldr	r3, [r3]
     fac:	ldr	r1, [pc, #248]	; 10ac <teste_lista_inverte+0x2c4>
     fb0:	mov	r0, r3
     fb4:	bl	0 <strcmp>
     fb8:	mov	r3, r0
     fbc:	cmp	r3, #0
     fc0:	bne	1054 <teste_lista_inverte+0x26c>
     fc4:	ldr	r3, [fp, #-12]
     fc8:	ldr	r3, [r3, #4]
     fcc:	ldr	r3, [r3, #8]
     fd0:	ldr	r3, [r3, #8]
     fd4:	ldr	r3, [r3]
     fd8:	ldr	r1, [pc, #200]	; 10a8 <teste_lista_inverte+0x2c0>
     fdc:	mov	r0, r3
     fe0:	bl	0 <strcmp>
     fe4:	mov	r3, r0
     fe8:	cmp	r3, #0
     fec:	bne	1054 <teste_lista_inverte+0x26c>
     ff0:	ldr	r3, [fp, #-12]
     ff4:	ldr	r3, [r3, #4]
     ff8:	ldr	r3, [r3, #8]
     ffc:	ldr	r3, [r3, #8]
    1000:	ldr	r3, [r3, #8]
    1004:	ldr	r3, [r3]
    1008:	ldr	r1, [pc, #148]	; 10a4 <teste_lista_inverte+0x2bc>
    100c:	mov	r0, r3
    1010:	bl	0 <strcmp>
    1014:	mov	r3, r0
    1018:	cmp	r3, #0
    101c:	bne	1054 <teste_lista_inverte+0x26c>
    1020:	ldr	r3, [fp, #-12]
    1024:	ldr	r3, [r3, #4]
    1028:	ldr	r3, [r3, #8]
    102c:	ldr	r3, [r3, #8]
    1030:	ldr	r3, [r3, #8]
    1034:	ldr	r3, [r3, #8]
    1038:	ldr	r3, [r3]
    103c:	ldr	r1, [pc, #92]	; 10a0 <teste_lista_inverte+0x2b8>
    1040:	mov	r0, r3
    1044:	bl	0 <strcmp>
    1048:	mov	r3, r0
    104c:	cmp	r3, #0
    1050:	beq	1068 <teste_lista_inverte+0x280>
    1054:	ldr	r0, [pc, #104]	; 10c4 <teste_lista_inverte+0x2dc>
    1058:	bl	0 <printf>
    105c:	ldr	r3, [fp, #-8]
    1060:	add	r3, r3, #1
    1064:	str	r3, [fp, #-8]
    1068:	ldr	r0, [fp, #-12]
    106c:	bl	0 <lista_apaga>
    1070:	ldr	r3, [fp, #-8]
    1074:	cmp	r3, #0
    1078:	bne	1088 <teste_lista_inverte+0x2a0>
    107c:	ldr	r0, [pc, #68]	; 10c8 <teste_lista_inverte+0x2e0>
    1080:	bl	0 <puts>
    1084:	b	1090 <teste_lista_inverte+0x2a8>
    1088:	mov	r0, #10
    108c:	bl	0 <putchar>
    1090:	ldr	r3, [fp, #-8]
    1094:	mov	r0, r3
    1098:	sub	sp, fp, #4
    109c:	pop	{fp, pc}
    10a0:	.word	0x000003b8
    10a4:	.word	0x000003bc
    10a8:	.word	0x000003ac
    10ac:	.word	0x000003b0
    10b0:	.word	0x000003b4
    10b4:	.word	0x00000484
    10b8:	.word	0x000003d4
    10bc:	.word	0x00000498
    10c0:	.word	0x000004c4
    10c4:	.word	0x00000444
    10c8:	.word	0x0000002c

000010cc <main>:
    10cc:	push	{fp, lr}
    10d0:	add	fp, sp, #4
    10d4:	sub	sp, sp, #8
    10d8:	ldr	r3, [pc, #220]	; 11bc <main+0xf0>
    10dc:	ldr	r0, [r3]
    10e0:	mov	r3, #0
    10e4:	mov	r2, #2
    10e8:	mov	r1, #0
    10ec:	bl	0 <setvbuf>
    10f0:	ldr	r3, [pc, #200]	; 11c0 <main+0xf4>
    10f4:	ldr	r0, [r3]
    10f8:	mov	r3, #0
    10fc:	mov	r2, #2
    1100:	mov	r1, #0
    1104:	bl	0 <setvbuf>
    1108:	mov	r3, #0
    110c:	str	r3, [fp, #-8]
    1110:	bl	210 <teste_lista_nova>
    1114:	mov	r2, r0
    1118:	ldr	r3, [fp, #-8]
    111c:	add	r3, r3, r2
    1120:	str	r3, [fp, #-8]
    1124:	bl	2e8 <teste_lista_insere>
    1128:	mov	r2, r0
    112c:	ldr	r3, [fp, #-8]
    1130:	add	r3, r3, r2
    1134:	str	r3, [fp, #-8]
    1138:	bl	77c <teste_lista_remove>
    113c:	mov	r2, r0
    1140:	ldr	r3, [fp, #-8]
    1144:	add	r3, r3, r2
    1148:	str	r3, [fp, #-8]
    114c:	bl	980 <teste_lista_pesquisa>
    1150:	mov	r2, r0
    1154:	ldr	r3, [fp, #-8]
    1158:	add	r3, r3, r2
    115c:	str	r3, [fp, #-8]
    1160:	bl	b30 <teste_lista_ordena>
    1164:	mov	r2, r0
    1168:	ldr	r3, [fp, #-8]
    116c:	add	r3, r3, r2
    1170:	str	r3, [fp, #-8]
    1174:	bl	de8 <teste_lista_inverte>
    1178:	mov	r2, r0
    117c:	ldr	r3, [fp, #-8]
    1180:	add	r3, r3, r2
    1184:	str	r3, [fp, #-8]
    1188:	ldr	r3, [fp, #-8]
    118c:	cmp	r3, #0
    1190:	bne	11a0 <main+0xd4>
    1194:	ldr	r0, [pc, #40]	; 11c4 <main+0xf8>
    1198:	bl	0 <puts>
    119c:	b	11ac <main+0xe0>
    11a0:	ldr	r1, [fp, #-8]
    11a4:	ldr	r0, [pc, #28]	; 11c8 <main+0xfc>
    11a8:	bl	0 <printf>
    11ac:	mov	r3, #0
    11b0:	mov	r0, r3
    11b4:	sub	sp, fp, #4
    11b8:	pop	{fp, pc}
	...
    11c4:	.word	0x00000504
    11c8:	.word	0x0000051c
