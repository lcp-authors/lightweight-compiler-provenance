
../repos/stcorp-coda-3a25f25/CMakeFiles/codacmp.dir/tools/codacmp/codacmp.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_help>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	ldr	r0, [pc, #364]	; 184 <print_help+0x184>
      14:	bl	0 <printf>
      18:	ldr	r0, [pc, #276]	; 134 <print_help+0x134>
      1c:	bl	0 <printf>
      20:	ldr	r0, [pc, #380]	; 1a4 <print_help+0x1a4>
      24:	bl	0 <printf>
      28:	ldr	r0, [pc, #280]	; 148 <print_help+0x148>
      2c:	bl	0 <printf>
      30:	ldr	r0, [pc, #352]	; 198 <print_help+0x198>
      34:	bl	0 <printf>
      38:	ldr	r0, [pc, #320]	; 180 <print_help+0x180>
      3c:	bl	0 <printf>
      40:	ldr	r0, [pc, #292]	; 16c <print_help+0x16c>
      44:	bl	0 <printf>
      48:	ldr	r0, [pc, #296]	; 178 <print_help+0x178>
      4c:	bl	0 <printf>
      50:	ldr	r0, [pc, #324]	; 19c <print_help+0x19c>
      54:	bl	0 <printf>
      58:	ldr	r0, [pc, #304]	; 190 <print_help+0x190>
      5c:	bl	0 <printf>
      60:	ldr	r0, [pc, #312]	; 1a0 <print_help+0x1a0>
      64:	bl	0 <printf>
      68:	ldr	r0, [pc, #244]	; 164 <print_help+0x164>
      6c:	bl	0 <printf>
      70:	ldr	r0, [pc, #232]	; 160 <print_help+0x160>
      74:	bl	0 <printf>
      78:	ldr	r0, [pc, #192]	; 140 <print_help+0x140>
      7c:	bl	0 <printf>
      80:	ldr	r0, [pc, #236]	; 174 <print_help+0x174>
      84:	bl	0 <printf>
      88:	ldr	r0, [pc, #200]	; 158 <print_help+0x158>
      8c:	bl	0 <printf>
      90:	ldr	r0, [pc, #188]	; 154 <print_help+0x154>
      94:	bl	0 <printf>
      98:	ldr	r0, [pc, #152]	; 138 <print_help+0x138>
      9c:	bl	0 <printf>
      a0:	ldr	r0, [pc, #164]	; 14c <print_help+0x14c>
      a4:	bl	0 <printf>
      a8:	ldr	r0, [pc, #148]	; 144 <print_help+0x144>
      ac:	bl	0 <printf>
      b0:	ldr	r0, [pc, #212]	; 18c <print_help+0x18c>
      b4:	bl	0 <printf>
      b8:	ldr	r0, [pc, #144]	; 150 <print_help+0x150>
      bc:	bl	0 <printf>
      c0:	ldr	r0, [pc, #204]	; 194 <print_help+0x194>
      c4:	bl	0 <printf>
      c8:	ldr	r0, [pc, #188]	; 18c <print_help+0x18c>
      cc:	bl	0 <printf>
      d0:	ldr	r0, [pc, #164]	; 17c <print_help+0x17c>
      d4:	bl	0 <printf>
      d8:	ldr	r0, [pc, #144]	; 170 <print_help+0x170>
      dc:	bl	0 <printf>
      e0:	ldr	r0, [pc, #164]	; 18c <print_help+0x18c>
      e4:	bl	0 <printf>
      e8:	ldr	r0, [pc, #184]	; 1a8 <print_help+0x1a8>
      ec:	bl	0 <printf>
      f0:	ldr	r0, [pc, #100]	; 15c <print_help+0x15c>
      f4:	bl	0 <printf>
      f8:	ldr	r0, [pc, #104]	; 168 <print_help+0x168>
      fc:	bl	0 <printf>
     100:	ldr	r0, [pc, #164]	; 1ac <print_help+0x1ac>
     104:	bl	0 <printf>
     108:	ldr	r0, [pc, #120]	; 188 <print_help+0x188>
     10c:	bl	0 <printf>
     110:	ldr	r0, [pc, #36]	; 13c <print_help+0x13c>
     114:	bl	0 <printf>
     118:	ldr	r0, [pc, #144]	; 1b0 <print_help+0x1b0>
     11c:	bl	0 <printf>
     120:	ldr	r0, [pc, #100]	; 18c <print_help+0x18c>
     124:	bl	0 <printf>
     128:	ldr	lr, [sp, #4]
     12c:	add	sp, sp, #8
     130:	bx	lr
     134:	.word	0x000008e9
     138:	.word	0x000002c8
     13c:	.word	0x000009b2
     140:	.word	0x000004de
     144:	.word	0x00000000
     148:	.word	0x0000052f
     14c:	.word	0x000006b5
     150:	.word	0x000002ef
     154:	.word	0x000009f5
     158:	.word	0x000007d9
     15c:	.word	0x000003ad
     160:	.word	0x00000738
     164:	.word	0x00000872
     168:	.word	0x00000598
     16c:	.word	0x00000150
     170:	.word	0x00000922
     174:	.word	0x000000ca
     178:	.word	0x0000027f
     17c:	.word	0x00000450
     180:	.word	0x0000055d
     184:	.word	0x00000212
     188:	.word	0x00000329
     18c:	.word	0x00000736
     190:	.word	0x00000491
     194:	.word	0x00000990
     198:	.word	0x0000084b
     19c:	.word	0x000006e6
     1a0:	.word	0x0000007b
     1a4:	.word	0x0000004e
     1a8:	.word	0x0000021a
     1ac:	.word	0x0000018b
     1b0:	.word	0x0000077f

000001b4 <print_escaped>:
     1b4:	mov	ip, sp
     1b8:	sub	sp, sp, #24
     1bc:	str	ip, [sp]
     1c0:	str	lr, [sp, #4]
     1c4:	str	r4, [sp, #8]
     1c8:	str	r5, [sp, #12]
     1cc:	str	r6, [sp, #16]
     1d0:	mov	r4, r1
     1d4:	mov	r5, r0
     1d8:	mov	r6, #0
     1dc:	cmp	r6, r4
     1e0:	bge	2d8 <print_escaped+0x124>
     1e4:	ldrb	r3, [r5, r6]
     1e8:	and	r1, r3, #255	; 0xff
     1ec:	cmp	r1, #11
     1f0:	bcs	244 <print_escaped+0x90>
     1f4:	cmp	r1, #9
     1f8:	bcs	224 <print_escaped+0x70>
     1fc:	cmp	r1, #7
     200:	beq	218 <print_escaped+0x64>
     204:	cmp	r1, #8
     208:	bne	288 <print_escaped+0xd4>
     20c:	ldr	r0, [pc, #224]	; 2f4 <print_escaped+0x140>
     210:	bl	0 <printf>
     214:	b	2d0 <print_escaped+0x11c>
     218:	ldr	r0, [pc, #244]	; 314 <print_escaped+0x160>
     21c:	bl	0 <printf>
     220:	b	2d0 <print_escaped+0x11c>
     224:	cmp	r1, #9
     228:	bne	238 <print_escaped+0x84>
     22c:	ldr	r0, [pc, #200]	; 2fc <print_escaped+0x148>
     230:	bl	0 <printf>
     234:	b	2d0 <print_escaped+0x11c>
     238:	ldr	r0, [pc, #196]	; 304 <print_escaped+0x150>
     23c:	bl	0 <printf>
     240:	b	2d0 <print_escaped+0x11c>
     244:	cmp	r1, #13
     248:	bcs	26c <print_escaped+0xb8>
     24c:	cmp	r1, #11
     250:	bne	260 <print_escaped+0xac>
     254:	ldr	r0, [pc, #148]	; 2f0 <print_escaped+0x13c>
     258:	bl	0 <printf>
     25c:	b	2d0 <print_escaped+0x11c>
     260:	ldr	r0, [pc, #160]	; 308 <print_escaped+0x154>
     264:	bl	0 <printf>
     268:	b	2d0 <print_escaped+0x11c>
     26c:	cmp	r1, #13
     270:	beq	2c8 <print_escaped+0x114>
     274:	cmp	r1, #92	; 0x5c
     278:	bne	288 <print_escaped+0xd4>
     27c:	ldr	r0, [pc, #140]	; 310 <print_escaped+0x15c>
     280:	bl	0 <printf>
     284:	b	2d0 <print_escaped+0x11c>
     288:	cmp	r1, #126	; 0x7e
     28c:	movle	r2, #1
     290:	movgt	r2, #0
     294:	mov	r0, #0
     298:	cmp	r1, #32
     29c:	movge	r2, r2
     2a0:	movlt	r2, r0
     2a4:	cmp	r2, #0
     2a8:	bne	2bc <print_escaped+0x108>
     2ac:	ldr	r0, [pc, #88]	; 30c <print_escaped+0x158>
     2b0:	and	r1, r1, #255	; 0xff
     2b4:	bl	0 <printf>
     2b8:	b	2d0 <print_escaped+0x11c>
     2bc:	ldr	r0, [pc, #52]	; 2f8 <print_escaped+0x144>
     2c0:	bl	0 <printf>
     2c4:	b	2d0 <print_escaped+0x11c>
     2c8:	ldr	r0, [pc, #48]	; 300 <print_escaped+0x14c>
     2cc:	bl	0 <printf>
     2d0:	add	r6, r6, #1
     2d4:	b	1dc <print_escaped+0x28>
     2d8:	ldr	r4, [sp, #8]
     2dc:	ldr	r5, [sp, #12]
     2e0:	ldr	r6, [sp, #16]
     2e4:	ldr	lr, [sp, #4]
     2e8:	add	sp, sp, #24
     2ec:	bx	lr
     2f0:	.word	0x00000958
     2f4:	.word	0x000001f3
     2f8:	.word	0x000003f7
     2fc:	.word	0x00000673
     300:	.word	0x0000066d
     304:	.word	0x000009af
     308:	.word	0x00000670
     30c:	.word	0x00000373
     310:	.word	0x00000185
     314:	.word	0x00000370

00000318 <print_error_with_cursor>:
     318:	mov	ip, sp
     31c:	sub	sp, sp, #16
     320:	str	ip, [sp]
     324:	str	lr, [sp, #4]
     328:	str	r4, [sp, #8]
     32c:	mov	r4, r1
     330:	bl	0 <coda_cursor_add_to_error_message>
     334:	bl	0 <coda_get_errno>
     338:	ldr	r0, [r0]
     33c:	bl	0 <coda_errno_to_string>
     340:	ldr	r1, [pc, #56]	; 380 <print_error_with_cursor+0x68>
     344:	ldr	r3, [r1]
     348:	ldr	r1, [pc, #56]	; 388 <print_error_with_cursor+0x70>
     34c:	ldr	ip, [pc, #48]	; 384 <print_error_with_cursor+0x6c>
     350:	lsl	r2, r4, #2
     354:	add	r2, ip, r2
     358:	sub	lr, r2, #4096	; 0x1000
     35c:	ldr	r2, [lr, #4092]	; 0xffc
     360:	mov	ip, r0
     364:	mov	r0, r3
     368:	mov	r3, ip
     36c:	bl	0 <fprintf>
     370:	ldr	r4, [sp, #8]
     374:	ldr	lr, [sp, #4]
     378:	add	sp, sp, #16
     37c:	bx	lr
	...
     388:	.word	0x00000443

0000038c <compare_data>:
     38c:	mov	ip, sp
     390:	sub	sp, sp, #648	; 0x288
     394:	str	ip, [sp, #8]
     398:	str	lr, [sp, #12]
     39c:	str	r4, [sp, #32]
     3a0:	str	r5, [sp, #36]	; 0x24
     3a4:	str	r6, [sp, #40]	; 0x28
     3a8:	str	r7, [sp, #44]	; 0x2c
     3ac:	str	r8, [sp, #48]	; 0x30
     3b0:	str	r9, [sp, #52]	; 0x34
     3b4:	str	sl, [sp, #56]	; 0x38
     3b8:	str	fp, [sp, #60]	; 0x3c
     3bc:	str	r1, [sp, #28]
     3c0:	str	r0, [sp, #20]
     3c4:	add	r1, sp, #64	; 0x40
     3c8:	ldr	r0, [sp, #20]
     3cc:	bl	0 <coda_cursor_get_type_class>
     3d0:	cmp	r0, #0
     3d4:	beq	3ec <compare_data+0x60>
     3d8:	mov	r1, #1
     3dc:	ldr	r0, [sp, #20]
     3e0:	bl	318 <print_error_with_cursor>
     3e4:	mvn	r0, #0
     3e8:	b	2080 <compare_data+0x1cf4>
     3ec:	add	r1, sp, #68	; 0x44
     3f0:	ldr	r0, [sp, #28]
     3f4:	bl	0 <coda_cursor_get_type_class>
     3f8:	cmp	r0, #0
     3fc:	beq	414 <compare_data+0x88>
     400:	mov	r1, #2
     404:	ldr	r0, [sp, #28]
     408:	bl	318 <print_error_with_cursor>
     40c:	mvn	r0, #0
     410:	b	2080 <compare_data+0x1cf4>
     414:	ldr	ip, [sp, #64]	; 0x40
     418:	ldr	r2, [sp, #68]	; 0x44
     41c:	cmp	ip, r2
     420:	beq	4a0 <compare_data+0x114>
     424:	ldr	r0, [pc, #3804]	; 1308 <compare_data+0xf7c>
     428:	bl	0 <printf>
     42c:	ldr	r1, [pc, #3800]	; 130c <compare_data+0xf80>
     430:	ldr	r0, [sp, #20]
     434:	bl	0 <coda_cursor_print_path>
     438:	ldr	r0, [pc, #3812]	; 1324 <compare_data+0xf98>
     43c:	bl	0 <printf>
     440:	ldr	r0, [pc, #3792]	; 1318 <compare_data+0xf8c>
     444:	ldr	r0, [r0]
     448:	cmp	r0, #0
     44c:	beq	498 <compare_data+0x10c>
     450:	ldr	r0, [sp, #64]	; 0x40
     454:	bl	0 <coda_type_get_class_name>
     458:	ldr	r2, [pc, #3804]	; 133c <compare_data+0xfb0>
     45c:	ldr	ip, [pc, #3740]	; 1300 <compare_data+0xf74>
     460:	ldr	r1, [ip]
     464:	mov	r3, r0
     468:	mov	r0, r2
     46c:	mov	r2, r3
     470:	bl	0 <printf>
     474:	ldr	r0, [sp, #68]	; 0x44
     478:	bl	0 <coda_type_get_class_name>
     47c:	ldr	r2, [pc, #3768]	; 133c <compare_data+0xfb0>
     480:	ldr	ip, [pc, #3768]	; 1340 <compare_data+0xfb4>
     484:	ldr	r1, [ip]
     488:	mov	r3, r0
     48c:	mov	r0, r2
     490:	mov	r2, r3
     494:	bl	0 <printf>
     498:	mov	r0, #0
     49c:	b	2080 <compare_data+0x1cf4>
     4a0:	cmp	ip, #7
     4a4:	bcs	1f84 <compare_data+0x1bf8>
     4a8:	add	pc, pc, ip, lsl #2
     4ac:	nop	{0}
     4b0:	b	e20 <compare_data+0xa94>
     4b4:	b	4cc <compare_data+0x140>
     4b8:	b	12bc <compare_data+0xf30>
     4bc:	b	12bc <compare_data+0xf30>
     4c0:	b	1804 <compare_data+0x1478>
     4c4:	b	1a54 <compare_data+0x16c8>
     4c8:	b	1e4c <compare_data+0x1ac0>
     4cc:	ldr	r4, [sp, #28]
     4d0:	ldr	r5, [sp, #20]
     4d4:	ldr	r2, [pc, #3660]	; 1328 <compare_data+0xf9c>
     4d8:	ldr	r0, [r2]
     4dc:	add	r2, sp, #84	; 0x54
     4e0:	mov	r1, r5
     4e4:	bl	0 <coda_tree_node_get_item_for_cursor>
     4e8:	cmp	r0, #0
     4ec:	beq	504 <compare_data+0x178>
     4f0:	mov	r1, #1
     4f4:	mov	r0, r5
     4f8:	bl	318 <print_error_with_cursor>
     4fc:	mvn	r5, #0
     500:	b	e10 <compare_data+0xa84>
     504:	ldr	r6, [sp, #84]	; 0x54
     508:	cmp	r6, #0
     50c:	beq	c64 <compare_data+0x8d8>
     510:	mov	sl, r4
     514:	str	r5, [sp, #16]
     518:	mov	r0, #0
     51c:	str	r0, [sp, #100]	; 0x64
     520:	add	r1, sp, #104	; 0x68
     524:	ldr	r0, [sp, #16]
     528:	bl	0 <coda_cursor_get_num_elements>
     52c:	cmp	r0, #0
     530:	beq	548 <compare_data+0x1bc>
     534:	mov	r1, #1
     538:	ldr	r0, [sp, #16]
     53c:	bl	318 <print_error_with_cursor>
     540:	mvn	r5, #0
     544:	b	e10 <compare_data+0xa84>
     548:	add	r1, sp, #96	; 0x60
     54c:	mov	r0, sl
     550:	bl	0 <coda_cursor_get_num_elements>
     554:	cmp	r0, #0
     558:	beq	570 <compare_data+0x1e4>
     55c:	mov	r1, #2
     560:	mov	r0, sl
     564:	bl	318 <print_error_with_cursor>
     568:	mvn	r5, #0
     56c:	b	e10 <compare_data+0xa84>
     570:	add	r1, sp, #100	; 0x64
     574:	mov	r0, r6
     578:	bl	0 <coda_expression_from_string>
     57c:	cmp	r0, #0
     580:	beq	5b4 <compare_data+0x228>
     584:	bl	0 <coda_get_errno>
     588:	ldr	r0, [r0]
     58c:	bl	0 <coda_errno_to_string>
     590:	ldr	ip, [pc, #3416]	; 12f0 <compare_data+0xf64>
     594:	ldr	r2, [ip]
     598:	ldr	r1, [pc, #3404]	; 12ec <compare_data+0xf60>
     59c:	mov	r3, r0
     5a0:	mov	r0, r2
     5a4:	mov	r2, r3
     5a8:	bl	0 <fprintf>
     5ac:	mvn	r5, #0
     5b0:	b	e10 <compare_data+0xa84>
     5b4:	ldr	r1, [sp, #104]	; 0x68
     5b8:	lsl	r0, r1, #2
     5bc:	bl	0 <malloc>
     5c0:	mov	r9, r0
     5c4:	cmp	r9, #0
     5c8:	bne	608 <compare_data+0x27c>
     5cc:	mvn	r0, #0
     5d0:	ldr	r1, [pc, #3416]	; 1330 <compare_data+0xfa4>
     5d4:	ldr	r2, [sp, #104]	; 0x68
     5d8:	lsl	r2, r2, #2
     5dc:	ldr	r3, [pc, #3424]	; 1344 <compare_data+0xfb8>
     5e0:	movw	ip, #461	; 0x1cd
     5e4:	str	ip, [sp]
     5e8:	bl	0 <coda_set_error>
     5ec:	mov	r1, #1
     5f0:	ldr	r0, [sp, #16]
     5f4:	bl	318 <print_error_with_cursor>
     5f8:	ldr	r0, [sp, #100]	; 0x64
     5fc:	bl	0 <coda_expression_delete>
     600:	mvn	r5, #0
     604:	b	e10 <compare_data+0xa84>
     608:	mov	ip, #0
     60c:	ldr	r2, [sp, #104]	; 0x68
     610:	cmp	ip, r2
     614:	bge	628 <compare_data+0x29c>
     618:	mov	r0, #0
     61c:	str	r0, [r9, ip, lsl #2]
     620:	add	ip, ip, #1
     624:	b	60c <compare_data+0x280>
     628:	ldr	r2, [sp, #96]	; 0x60
     62c:	lsl	r0, r2, #2
     630:	bl	0 <malloc>
     634:	mov	r4, r0
     638:	cmp	r4, #0
     63c:	bne	684 <compare_data+0x2f8>
     640:	mvn	r0, #0
     644:	ldr	r1, [pc, #3300]	; 1330 <compare_data+0xfa4>
     648:	ldr	r3, [sp, #96]	; 0x60
     64c:	lsl	r2, r3, #2
     650:	ldr	r3, [pc, #3308]	; 1344 <compare_data+0xfb8>
     654:	movw	r4, #475	; 0x1db
     658:	str	r4, [sp]
     65c:	bl	0 <coda_set_error>
     660:	mov	r1, #2
     664:	mov	r0, sl
     668:	bl	318 <print_error_with_cursor>
     66c:	ldr	r0, [sp, #100]	; 0x64
     670:	bl	0 <coda_expression_delete>
     674:	mov	r0, r9
     678:	bl	0 <free>
     67c:	mvn	r5, #0
     680:	b	e10 <compare_data+0xa84>
     684:	mov	r2, #0
     688:	ldr	r3, [sp, #96]	; 0x60
     68c:	cmp	r2, r3
     690:	bge	6a4 <compare_data+0x318>
     694:	mov	ip, #0
     698:	str	ip, [r4, r2, lsl #2]
     69c:	add	r2, r2, #1
     6a0:	b	688 <compare_data+0x2fc>
     6a4:	mov	r0, #1
     6a8:	bl	0 <coda_hashtable_new>
     6ac:	mov	fp, r0
     6b0:	cmp	fp, #0
     6b4:	bne	6f8 <compare_data+0x36c>
     6b8:	mvn	r0, #0
     6bc:	ldr	r1, [pc, #3176]	; 132c <compare_data+0xfa0>
     6c0:	ldr	r2, [pc, #3196]	; 1344 <compare_data+0xfb8>
     6c4:	movw	r3, #489	; 0x1e9
     6c8:	bl	0 <coda_set_error>
     6cc:	mov	r1, #1
     6d0:	ldr	r0, [sp, #16]
     6d4:	bl	318 <print_error_with_cursor>
     6d8:	ldr	r0, [sp, #100]	; 0x64
     6dc:	bl	0 <coda_expression_delete>
     6e0:	mov	r0, r9
     6e4:	bl	0 <free>
     6e8:	mov	r0, r4
     6ec:	bl	0 <free>
     6f0:	mvn	r5, #0
     6f4:	b	e10 <compare_data+0xa84>
     6f8:	mov	r0, #1
     6fc:	bl	0 <coda_hashtable_new>
     700:	mov	r8, r0
     704:	cmp	r8, #0
     708:	bne	754 <compare_data+0x3c8>
     70c:	mvn	r0, #0
     710:	ldr	r1, [pc, #3092]	; 132c <compare_data+0xfa0>
     714:	ldr	r2, [pc, #3112]	; 1344 <compare_data+0xfb8>
     718:	mov	r3, #500	; 0x1f4
     71c:	bl	0 <coda_set_error>
     720:	mov	r1, #2
     724:	mov	r0, sl
     728:	bl	318 <print_error_with_cursor>
     72c:	ldr	r0, [sp, #100]	; 0x64
     730:	bl	0 <coda_expression_delete>
     734:	mov	r0, fp
     738:	bl	0 <coda_hashtable_delete>
     73c:	mov	r0, r9
     740:	bl	0 <free>
     744:	mov	r0, r4
     748:	bl	0 <free>
     74c:	mvn	r5, #0
     750:	b	e10 <compare_data+0xa84>
     754:	ldr	r5, [sp, #100]	; 0x64
     758:	ldr	r6, [sp, #104]	; 0x68
     75c:	ldr	r7, [sp, #96]	; 0x60
     760:	str	sl, [sp, #24]
     764:	cmp	r6, #0
     768:	ble	88c <compare_data+0x500>
     76c:	ldr	r0, [sp, #16]
     770:	bl	0 <coda_cursor_goto_first_array_element>
     774:	cmp	r0, #0
     778:	beq	790 <compare_data+0x404>
     77c:	mov	r1, #1
     780:	ldr	r0, [sp, #16]
     784:	bl	318 <print_error_with_cursor>
     788:	mvn	r5, #0
     78c:	b	be8 <compare_data+0x85c>
     790:	mov	sl, #0
     794:	cmp	sl, r6
     798:	bge	884 <compare_data+0x4f8>
     79c:	add	r2, r9, sl, lsl #2
     7a0:	add	r3, sp, #112	; 0x70
     7a4:	ldr	r1, [sp, #16]
     7a8:	mov	r0, r5
     7ac:	bl	0 <coda_expression_eval_string>
     7b0:	cmp	r0, #0
     7b4:	beq	7f0 <compare_data+0x464>
     7b8:	bl	0 <coda_get_errno>
     7bc:	ldr	r0, [r0]
     7c0:	bl	0 <coda_errno_to_string>
     7c4:	ldr	r1, [pc, #2852]	; 12f0 <compare_data+0xf64>
     7c8:	ldr	r3, [r1]
     7cc:	ldr	r1, [pc, #2864]	; 1304 <compare_data+0xf78>
     7d0:	ldr	r2, [pc, #2856]	; 1300 <compare_data+0xf74>
     7d4:	ldr	r2, [r2]
     7d8:	mov	ip, r0
     7dc:	mov	r0, r3
     7e0:	mov	r3, ip
     7e4:	bl	0 <fprintf>
     7e8:	mvn	r5, #0
     7ec:	b	be8 <compare_data+0x85c>
     7f0:	ldr	r1, [r9, sl, lsl #2]
     7f4:	mov	r0, fp
     7f8:	bl	0 <coda_hashtable_add_name>
     7fc:	cmp	r0, #0
     800:	beq	84c <compare_data+0x4c0>
     804:	mvn	r0, #99	; 0x63
     808:	ldr	r1, [pc, #2832]	; 1320 <compare_data+0xf94>
     80c:	ldr	r2, [r9, sl, lsl #2]
     810:	bl	0 <coda_set_error>
     814:	bl	0 <coda_get_errno>
     818:	ldr	r0, [r0]
     81c:	bl	0 <coda_errno_to_string>
     820:	ldr	r1, [pc, #2760]	; 12f0 <compare_data+0xf64>
     824:	ldr	r3, [r1]
     828:	ldr	r1, [pc, #2772]	; 1304 <compare_data+0xf78>
     82c:	ldr	r2, [pc, #2764]	; 1300 <compare_data+0xf74>
     830:	ldr	r2, [r2]
     834:	mov	ip, r0
     838:	mov	r0, r3
     83c:	mov	r3, ip
     840:	bl	0 <fprintf>
     844:	mvn	r5, #0
     848:	b	be8 <compare_data+0x85c>
     84c:	sub	ip, r6, #1
     850:	cmp	sl, ip
     854:	bge	87c <compare_data+0x4f0>
     858:	ldr	r0, [sp, #16]
     85c:	bl	0 <coda_cursor_goto_next_array_element>
     860:	cmp	r0, #0
     864:	beq	87c <compare_data+0x4f0>
     868:	mov	r1, #1
     86c:	ldr	r0, [sp, #16]
     870:	bl	318 <print_error_with_cursor>
     874:	mvn	r5, #0
     878:	b	be8 <compare_data+0x85c>
     87c:	add	sl, sl, #1
     880:	b	794 <compare_data+0x408>
     884:	ldr	r0, [sp, #16]
     888:	bl	0 <coda_cursor_goto_parent>
     88c:	cmp	r7, #0
     890:	ble	9b4 <compare_data+0x628>
     894:	ldr	r0, [sp, #24]
     898:	bl	0 <coda_cursor_goto_first_array_element>
     89c:	cmp	r0, #0
     8a0:	beq	8b8 <compare_data+0x52c>
     8a4:	mov	r1, #2
     8a8:	ldr	r0, [sp, #24]
     8ac:	bl	318 <print_error_with_cursor>
     8b0:	mvn	r5, #0
     8b4:	b	be8 <compare_data+0x85c>
     8b8:	mov	sl, #0
     8bc:	cmp	sl, r7
     8c0:	bge	9ac <compare_data+0x620>
     8c4:	add	r2, r4, sl, lsl #2
     8c8:	add	r3, sp, #116	; 0x74
     8cc:	ldr	r1, [sp, #24]
     8d0:	mov	r0, r5
     8d4:	bl	0 <coda_expression_eval_string>
     8d8:	cmp	r0, #0
     8dc:	beq	918 <compare_data+0x58c>
     8e0:	bl	0 <coda_get_errno>
     8e4:	ldr	r0, [r0]
     8e8:	bl	0 <coda_errno_to_string>
     8ec:	ldr	r3, [pc, #2556]	; 12f0 <compare_data+0xf64>
     8f0:	ldr	r3, [r3]
     8f4:	ldr	r1, [pc, #2568]	; 1304 <compare_data+0xf78>
     8f8:	ldr	ip, [pc, #2624]	; 1340 <compare_data+0xfb4>
     8fc:	ldr	r2, [ip]
     900:	mov	ip, r0
     904:	mov	r0, r3
     908:	mov	r3, ip
     90c:	bl	0 <fprintf>
     910:	mvn	r5, #0
     914:	b	be8 <compare_data+0x85c>
     918:	ldr	r1, [r4, sl, lsl #2]
     91c:	mov	r0, r8
     920:	bl	0 <coda_hashtable_add_name>
     924:	cmp	r0, #0
     928:	beq	974 <compare_data+0x5e8>
     92c:	mvn	r0, #99	; 0x63
     930:	ldr	r1, [pc, #2536]	; 1320 <compare_data+0xf94>
     934:	ldr	r2, [r4, sl, lsl #2]
     938:	bl	0 <coda_set_error>
     93c:	bl	0 <coda_get_errno>
     940:	ldr	r0, [r0]
     944:	bl	0 <coda_errno_to_string>
     948:	ldr	ip, [pc, #2464]	; 12f0 <compare_data+0xf64>
     94c:	ldr	r3, [ip]
     950:	ldr	r1, [pc, #2476]	; 1304 <compare_data+0xf78>
     954:	ldr	ip, [pc, #2532]	; 1340 <compare_data+0xfb4>
     958:	ldr	r2, [ip]
     95c:	mov	ip, r0
     960:	mov	r0, r3
     964:	mov	r3, ip
     968:	bl	0 <fprintf>
     96c:	mvn	r5, #0
     970:	b	be8 <compare_data+0x85c>
     974:	sub	r3, r7, #1
     978:	cmp	sl, r3
     97c:	bge	9a4 <compare_data+0x618>
     980:	ldr	r0, [sp, #24]
     984:	bl	0 <coda_cursor_goto_next_array_element>
     988:	cmp	r0, #0
     98c:	beq	9a4 <compare_data+0x618>
     990:	mov	r1, #2
     994:	ldr	r0, [sp, #24]
     998:	bl	318 <print_error_with_cursor>
     99c:	mvn	r5, #0
     9a0:	b	be8 <compare_data+0x85c>
     9a4:	add	sl, sl, #1
     9a8:	b	8bc <compare_data+0x530>
     9ac:	ldr	r0, [sp, #24]
     9b0:	bl	0 <coda_cursor_goto_parent>
     9b4:	cmp	r6, r7
     9b8:	beq	a10 <compare_data+0x684>
     9bc:	ldr	r0, [pc, #2360]	; 12fc <compare_data+0xf70>
     9c0:	bl	0 <printf>
     9c4:	ldr	r1, [pc, #2368]	; 130c <compare_data+0xf80>
     9c8:	ldr	r0, [sp, #16]
     9cc:	bl	0 <coda_cursor_print_path>
     9d0:	ldr	r0, [pc, #2380]	; 1324 <compare_data+0xf98>
     9d4:	bl	0 <printf>
     9d8:	ldr	r1, [pc, #2360]	; 1318 <compare_data+0xf8c>
     9dc:	ldr	r0, [r1]
     9e0:	cmp	r0, #0
     9e4:	beq	a10 <compare_data+0x684>
     9e8:	ldr	r0, [pc, #2312]	; 12f8 <compare_data+0xf6c>
     9ec:	ldr	r2, [pc, #2316]	; 1300 <compare_data+0xf74>
     9f0:	ldr	r1, [r2]
     9f4:	mov	r2, r6
     9f8:	bl	0 <printf>
     9fc:	ldr	r0, [pc, #2292]	; 12f8 <compare_data+0xf6c>
     a00:	ldr	r3, [pc, #2360]	; 1340 <compare_data+0xfb4>
     a04:	ldr	r1, [r3]
     a08:	mov	r2, r7
     a0c:	bl	0 <printf>
     a10:	mov	sl, #1
     a14:	cmp	r6, #0
     a18:	ble	a90 <compare_data+0x704>
     a1c:	mov	r5, #0
     a20:	cmp	r5, r6
     a24:	bge	a90 <compare_data+0x704>
     a28:	ldr	r1, [r9, r5, lsl #2]
     a2c:	mov	r0, r8
     a30:	bl	0 <coda_hashtable_get_index_from_name>
     a34:	cmp	r0, #0
     a38:	bge	a88 <compare_data+0x6fc>
     a3c:	cmp	sl, #0
     a40:	beq	a64 <compare_data+0x6d8>
     a44:	ldr	r0, [pc, #2256]	; 131c <compare_data+0xf90>
     a48:	bl	0 <printf>
     a4c:	ldr	r1, [pc, #2232]	; 130c <compare_data+0xf80>
     a50:	ldr	r0, [sp, #16]
     a54:	bl	0 <coda_cursor_print_path>
     a58:	ldr	r0, [pc, #2244]	; 1324 <compare_data+0xf98>
     a5c:	bl	0 <printf>
     a60:	mov	sl, #0
     a64:	ldr	r0, [pc, #2220]	; 1318 <compare_data+0xf8c>
     a68:	ldr	r3, [r0]
     a6c:	cmp	r3, #0
     a70:	beq	a88 <compare_data+0x6fc>
     a74:	ldr	r0, [pc, #2232]	; 1334 <compare_data+0xfa8>
     a78:	ldr	r2, [pc, #2176]	; 1300 <compare_data+0xf74>
     a7c:	ldr	r1, [r2]
     a80:	ldr	r2, [r9, r5, lsl #2]
     a84:	bl	0 <printf>
     a88:	add	r5, r5, #1
     a8c:	b	a20 <compare_data+0x694>
     a90:	cmp	r7, #0
     a94:	ble	b0c <compare_data+0x780>
     a98:	mov	r5, #0
     a9c:	cmp	r5, r7
     aa0:	bge	b0c <compare_data+0x780>
     aa4:	ldr	r1, [r4, r5, lsl #2]
     aa8:	mov	r0, fp
     aac:	bl	0 <coda_hashtable_get_index_from_name>
     ab0:	cmp	r0, #0
     ab4:	bge	b04 <compare_data+0x778>
     ab8:	cmp	sl, #0
     abc:	beq	ae0 <compare_data+0x754>
     ac0:	ldr	r0, [pc, #2132]	; 131c <compare_data+0xf90>
     ac4:	bl	0 <printf>
     ac8:	ldr	r1, [pc, #2108]	; 130c <compare_data+0xf80>
     acc:	ldr	r0, [sp, #16]
     ad0:	bl	0 <coda_cursor_print_path>
     ad4:	ldr	r0, [pc, #2120]	; 1324 <compare_data+0xf98>
     ad8:	bl	0 <printf>
     adc:	mov	sl, #0
     ae0:	ldr	r2, [pc, #2096]	; 1318 <compare_data+0xf8c>
     ae4:	ldr	r1, [r2]
     ae8:	cmp	r1, #0
     aec:	beq	b04 <compare_data+0x778>
     af0:	ldr	r0, [pc, #2108]	; 1334 <compare_data+0xfa8>
     af4:	ldr	r3, [pc, #2116]	; 1340 <compare_data+0xfb4>
     af8:	ldr	r1, [r3]
     afc:	ldr	r2, [r4, r5, lsl #2]
     b00:	bl	0 <printf>
     b04:	add	r5, r5, #1
     b08:	b	a9c <compare_data+0x710>
     b0c:	cmp	r6, #0
     b10:	ble	be4 <compare_data+0x858>
     b14:	ldr	r0, [sp, #16]
     b18:	bl	0 <coda_cursor_goto_first_array_element>
     b1c:	cmp	r0, #0
     b20:	beq	b38 <compare_data+0x7ac>
     b24:	mov	r1, #1
     b28:	ldr	r0, [sp, #16]
     b2c:	bl	318 <print_error_with_cursor>
     b30:	mvn	r5, #0
     b34:	b	be8 <compare_data+0x85c>
     b38:	mov	r5, #0
     b3c:	cmp	r5, r6
     b40:	bge	bdc <compare_data+0x850>
     b44:	ldr	r1, [r9, r5, lsl #2]
     b48:	mov	r0, r8
     b4c:	bl	0 <coda_hashtable_get_index_from_name>
     b50:	cmp	r0, #0
     b54:	blt	ba4 <compare_data+0x818>
     b58:	mov	r1, r0
     b5c:	ldr	r0, [sp, #24]
     b60:	bl	0 <coda_cursor_goto_array_element_by_index>
     b64:	cmp	r0, #0
     b68:	beq	b80 <compare_data+0x7f4>
     b6c:	mov	r1, #2
     b70:	ldr	r0, [sp, #24]
     b74:	bl	318 <print_error_with_cursor>
     b78:	mvn	r5, #0
     b7c:	b	be8 <compare_data+0x85c>
     b80:	ldr	r1, [sp, #24]
     b84:	ldr	r0, [sp, #16]
     b88:	bl	38c <compare_data>
     b8c:	cmp	r0, #0
     b90:	beq	b9c <compare_data+0x810>
     b94:	mvn	r5, #0
     b98:	b	be8 <compare_data+0x85c>
     b9c:	ldr	r0, [sp, #24]
     ba0:	bl	0 <coda_cursor_goto_parent>
     ba4:	sub	r3, r6, #1
     ba8:	cmp	r5, r3
     bac:	bge	bd4 <compare_data+0x848>
     bb0:	ldr	r0, [sp, #16]
     bb4:	bl	0 <coda_cursor_goto_next_array_element>
     bb8:	cmp	r0, #0
     bbc:	beq	bd4 <compare_data+0x848>
     bc0:	mov	r1, #1
     bc4:	ldr	r0, [sp, #16]
     bc8:	bl	318 <print_error_with_cursor>
     bcc:	mvn	r5, #0
     bd0:	b	be8 <compare_data+0x85c>
     bd4:	add	r5, r5, #1
     bd8:	b	b3c <compare_data+0x7b0>
     bdc:	ldr	r0, [sp, #16]
     be0:	bl	0 <coda_cursor_goto_parent>
     be4:	mov	r5, #0
     be8:	ldr	r0, [sp, #100]	; 0x64
     bec:	bl	0 <coda_expression_delete>
     bf0:	mov	r0, fp
     bf4:	bl	0 <coda_hashtable_delete>
     bf8:	mov	r0, r8
     bfc:	bl	0 <coda_hashtable_delete>
     c00:	mov	r6, #0
     c04:	ldr	r3, [sp, #104]	; 0x68
     c08:	cmp	r6, r3
     c0c:	bge	c28 <compare_data+0x89c>
     c10:	ldr	r0, [r9, r6, lsl #2]
     c14:	cmp	r0, #0
     c18:	beq	c20 <compare_data+0x894>
     c1c:	bl	0 <coda_free>
     c20:	add	r6, r6, #1
     c24:	b	c04 <compare_data+0x878>
     c28:	mov	r0, r9
     c2c:	bl	0 <free>
     c30:	mov	r6, #0
     c34:	ldr	r2, [sp, #96]	; 0x60
     c38:	cmp	r6, r2
     c3c:	bge	c58 <compare_data+0x8cc>
     c40:	ldr	r0, [r4, r6, lsl #2]
     c44:	cmp	r0, #0
     c48:	beq	c50 <compare_data+0x8c4>
     c4c:	bl	0 <coda_free>
     c50:	add	r6, r6, #1
     c54:	b	c34 <compare_data+0x8a8>
     c58:	mov	r0, r4
     c5c:	bl	0 <free>
     c60:	b	e10 <compare_data+0xa84>
     c64:	add	r1, sp, #88	; 0x58
     c68:	mov	r0, r5
     c6c:	bl	0 <coda_cursor_get_num_elements>
     c70:	cmp	r0, #0
     c74:	beq	c8c <compare_data+0x900>
     c78:	mov	r1, #1
     c7c:	mov	r0, r5
     c80:	bl	318 <print_error_with_cursor>
     c84:	mvn	r5, #0
     c88:	b	e10 <compare_data+0xa84>
     c8c:	add	r1, sp, #80	; 0x50
     c90:	mov	r0, r4
     c94:	bl	0 <coda_cursor_get_num_elements>
     c98:	cmp	r0, #0
     c9c:	beq	cb4 <compare_data+0x928>
     ca0:	mov	r1, #2
     ca4:	mov	r0, r4
     ca8:	bl	318 <print_error_with_cursor>
     cac:	mvn	r5, #0
     cb0:	b	e10 <compare_data+0xa84>
     cb4:	ldr	r1, [sp, #88]	; 0x58
     cb8:	ldr	r3, [sp, #80]	; 0x50
     cbc:	cmp	r1, r3
     cc0:	beq	d20 <compare_data+0x994>
     cc4:	ldr	r0, [pc, #1584]	; 12fc <compare_data+0xf70>
     cc8:	bl	0 <printf>
     ccc:	ldr	r1, [pc, #1592]	; 130c <compare_data+0xf80>
     cd0:	mov	r0, r5
     cd4:	bl	0 <coda_cursor_print_path>
     cd8:	ldr	r0, [pc, #1604]	; 1324 <compare_data+0xf98>
     cdc:	bl	0 <printf>
     ce0:	ldr	ip, [pc, #1584]	; 1318 <compare_data+0xf8c>
     ce4:	ldr	r3, [ip]
     ce8:	cmp	r3, #0
     cec:	beq	d18 <compare_data+0x98c>
     cf0:	ldr	r0, [pc, #1536]	; 12f8 <compare_data+0xf6c>
     cf4:	ldr	r2, [pc, #1540]	; 1300 <compare_data+0xf74>
     cf8:	ldr	r1, [r2]
     cfc:	ldr	r2, [sp, #88]	; 0x58
     d00:	bl	0 <printf>
     d04:	ldr	r0, [pc, #1516]	; 12f8 <compare_data+0xf6c>
     d08:	ldr	ip, [pc, #1584]	; 1340 <compare_data+0xfb4>
     d0c:	ldr	r1, [ip]
     d10:	ldr	r2, [sp, #80]	; 0x50
     d14:	bl	0 <printf>
     d18:	mov	r5, #0
     d1c:	b	e10 <compare_data+0xa84>
     d20:	cmp	r1, #0
     d24:	ble	e0c <compare_data+0xa80>
     d28:	mov	r0, r5
     d2c:	bl	0 <coda_cursor_goto_first_array_element>
     d30:	cmp	r0, #0
     d34:	beq	d4c <compare_data+0x9c0>
     d38:	mov	r1, #1
     d3c:	mov	r0, r5
     d40:	bl	318 <print_error_with_cursor>
     d44:	mvn	r5, #0
     d48:	b	e10 <compare_data+0xa84>
     d4c:	mov	r0, r4
     d50:	bl	0 <coda_cursor_goto_first_array_element>
     d54:	cmp	r0, #0
     d58:	beq	d70 <compare_data+0x9e4>
     d5c:	mov	r1, #1
     d60:	mov	r0, r4
     d64:	bl	318 <print_error_with_cursor>
     d68:	mvn	r5, #0
     d6c:	b	e10 <compare_data+0xa84>
     d70:	mov	r6, #0
     d74:	ldr	r2, [sp, #88]	; 0x58
     d78:	cmp	r6, r2
     d7c:	bge	dfc <compare_data+0xa70>
     d80:	mov	r1, r4
     d84:	mov	r0, r5
     d88:	bl	38c <compare_data>
     d8c:	cmp	r0, #0
     d90:	beq	d9c <compare_data+0xa10>
     d94:	mvn	r5, #0
     d98:	b	e10 <compare_data+0xa84>
     d9c:	ldr	r0, [sp, #88]	; 0x58
     da0:	sub	r1, r0, #1
     da4:	cmp	r6, r1
     da8:	bge	df4 <compare_data+0xa68>
     dac:	mov	r0, r5
     db0:	bl	0 <coda_cursor_goto_next_array_element>
     db4:	cmp	r0, #0
     db8:	beq	dd0 <compare_data+0xa44>
     dbc:	mov	r1, #1
     dc0:	mov	r0, r5
     dc4:	bl	318 <print_error_with_cursor>
     dc8:	mvn	r5, #0
     dcc:	b	e10 <compare_data+0xa84>
     dd0:	mov	r0, r4
     dd4:	bl	0 <coda_cursor_goto_next_array_element>
     dd8:	cmp	r0, #0
     ddc:	beq	df4 <compare_data+0xa68>
     de0:	mov	r1, #2
     de4:	mov	r0, r4
     de8:	bl	318 <print_error_with_cursor>
     dec:	mvn	r5, #0
     df0:	b	e10 <compare_data+0xa84>
     df4:	add	r6, r6, #1
     df8:	b	d74 <compare_data+0x9e8>
     dfc:	mov	r0, r5
     e00:	bl	0 <coda_cursor_goto_parent>
     e04:	mov	r0, r4
     e08:	bl	0 <coda_cursor_goto_parent>
     e0c:	mov	r5, #0
     e10:	cmp	r5, #0
     e14:	beq	1f84 <compare_data+0x1bf8>
     e18:	mvn	r0, #0
     e1c:	b	2080 <compare_data+0x1cf4>
     e20:	ldr	r5, [sp, #28]
     e24:	ldr	r4, [sp, #20]
     e28:	add	r1, sp, #92	; 0x5c
     e2c:	mov	r0, r4
     e30:	bl	0 <coda_cursor_get_type>
     e34:	cmp	r0, #0
     e38:	beq	e50 <compare_data+0xac4>
     e3c:	mov	r1, #1
     e40:	mov	r0, r4
     e44:	bl	318 <print_error_with_cursor>
     e48:	mvn	r0, #0
     e4c:	b	12ac <compare_data+0xf20>
     e50:	add	r1, sp, #96	; 0x60
     e54:	mov	r0, r5
     e58:	bl	0 <coda_cursor_get_type>
     e5c:	cmp	r0, #0
     e60:	beq	e78 <compare_data+0xaec>
     e64:	mov	r1, #2
     e68:	mov	r0, r5
     e6c:	bl	318 <print_error_with_cursor>
     e70:	mvn	r0, #0
     e74:	b	12ac <compare_data+0xf20>
     e78:	add	r1, sp, #100	; 0x64
     e7c:	mov	r0, r4
     e80:	bl	0 <coda_cursor_get_num_elements>
     e84:	cmp	r0, #0
     e88:	beq	ea0 <compare_data+0xb14>
     e8c:	mov	r1, #1
     e90:	mov	r0, r4
     e94:	bl	318 <print_error_with_cursor>
     e98:	mvn	r0, #0
     e9c:	b	12ac <compare_data+0xf20>
     ea0:	add	r1, sp, #104	; 0x68
     ea4:	mov	r0, r5
     ea8:	bl	0 <coda_cursor_get_num_elements>
     eac:	cmp	r0, #0
     eb0:	beq	ec8 <compare_data+0xb3c>
     eb4:	mov	r1, #2
     eb8:	mov	r0, r5
     ebc:	bl	318 <print_error_with_cursor>
     ec0:	mvn	r0, #0
     ec4:	b	12ac <compare_data+0xf20>
     ec8:	mov	r6, #1
     ecc:	ldr	ip, [sp, #100]	; 0x64
     ed0:	cmp	ip, #0
     ed4:	ble	f8c <compare_data+0xc00>
     ed8:	mov	r2, #0
     edc:	str	r2, [sp, #108]	; 0x6c
     ee0:	ldr	r1, [sp, #108]	; 0x6c
     ee4:	ldr	r2, [sp, #100]	; 0x64
     ee8:	cmp	r1, r2
     eec:	bge	f8c <compare_data+0xc00>
     ef0:	ldr	r0, [sp, #92]	; 0x5c
     ef4:	add	r2, sp, #116	; 0x74
     ef8:	bl	0 <coda_type_get_record_field_name>
     efc:	cmp	r0, #0
     f00:	beq	f18 <compare_data+0xb8c>
     f04:	mov	r1, #1
     f08:	mov	r0, r4
     f0c:	bl	318 <print_error_with_cursor>
     f10:	mvn	r0, #0
     f14:	b	12ac <compare_data+0xf20>
     f18:	ldr	r0, [sp, #96]	; 0x60
     f1c:	ldr	r1, [sp, #116]	; 0x74
     f20:	add	r2, sp, #112	; 0x70
     f24:	bl	0 <coda_type_get_record_field_index_from_name>
     f28:	cmp	r0, #0
     f2c:	beq	f7c <compare_data+0xbf0>
     f30:	cmp	r6, #0
     f34:	beq	f58 <compare_data+0xbcc>
     f38:	ldr	r0, [pc, #1032]	; 1348 <compare_data+0xfbc>
     f3c:	bl	0 <printf>
     f40:	ldr	r1, [pc, #964]	; 130c <compare_data+0xf80>
     f44:	mov	r0, r4
     f48:	bl	0 <coda_cursor_print_path>
     f4c:	ldr	r0, [pc, #976]	; 1324 <compare_data+0xf98>
     f50:	bl	0 <printf>
     f54:	mov	r6, #0
     f58:	ldr	ip, [pc, #952]	; 1318 <compare_data+0xf8c>
     f5c:	ldr	ip, [ip]
     f60:	cmp	ip, #0
     f64:	beq	f7c <compare_data+0xbf0>
     f68:	ldr	r0, [pc, #968]	; 1338 <compare_data+0xfac>
     f6c:	ldr	r1, [pc, #908]	; 1300 <compare_data+0xf74>
     f70:	ldr	r1, [r1]
     f74:	ldr	r2, [sp, #116]	; 0x74
     f78:	bl	0 <printf>
     f7c:	ldr	ip, [sp, #108]	; 0x6c
     f80:	add	r2, ip, #1
     f84:	str	r2, [sp, #108]	; 0x6c
     f88:	b	ee0 <compare_data+0xb54>
     f8c:	ldr	r2, [sp, #104]	; 0x68
     f90:	cmp	r2, #0
     f94:	ble	104c <compare_data+0xcc0>
     f98:	mov	r1, #0
     f9c:	str	r1, [sp, #112]	; 0x70
     fa0:	ldr	r1, [sp, #112]	; 0x70
     fa4:	ldr	ip, [sp, #104]	; 0x68
     fa8:	cmp	r1, ip
     fac:	bge	104c <compare_data+0xcc0>
     fb0:	ldr	r0, [sp, #96]	; 0x60
     fb4:	add	r2, sp, #120	; 0x78
     fb8:	bl	0 <coda_type_get_record_field_name>
     fbc:	cmp	r0, #0
     fc0:	beq	fd8 <compare_data+0xc4c>
     fc4:	mov	r1, #2
     fc8:	mov	r0, r5
     fcc:	bl	318 <print_error_with_cursor>
     fd0:	mvn	r0, #0
     fd4:	b	12ac <compare_data+0xf20>
     fd8:	ldr	r0, [sp, #92]	; 0x5c
     fdc:	ldr	r1, [sp, #120]	; 0x78
     fe0:	add	r2, sp, #108	; 0x6c
     fe4:	bl	0 <coda_type_get_record_field_index_from_name>
     fe8:	cmp	r0, #0
     fec:	beq	103c <compare_data+0xcb0>
     ff0:	cmp	r6, #0
     ff4:	beq	1018 <compare_data+0xc8c>
     ff8:	ldr	r0, [pc, #840]	; 1348 <compare_data+0xfbc>
     ffc:	bl	0 <printf>
    1000:	ldr	r1, [pc, #772]	; 130c <compare_data+0xf80>
    1004:	mov	r0, r4
    1008:	bl	0 <coda_cursor_print_path>
    100c:	ldr	r0, [pc, #784]	; 1324 <compare_data+0xf98>
    1010:	bl	0 <printf>
    1014:	mov	r6, #0
    1018:	ldr	r0, [pc, #760]	; 1318 <compare_data+0xf8c>
    101c:	ldr	r2, [r0]
    1020:	cmp	r2, #0
    1024:	beq	103c <compare_data+0xcb0>
    1028:	ldr	r0, [pc, #776]	; 1338 <compare_data+0xfac>
    102c:	ldr	r1, [pc, #780]	; 1340 <compare_data+0xfb4>
    1030:	ldr	r1, [r1]
    1034:	ldr	r2, [sp, #120]	; 0x78
    1038:	bl	0 <printf>
    103c:	ldr	r0, [sp, #112]	; 0x70
    1040:	add	ip, r0, #1
    1044:	str	ip, [sp, #112]	; 0x70
    1048:	b	fa0 <compare_data+0xc14>
    104c:	ldr	r2, [sp, #100]	; 0x64
    1050:	cmp	r2, #0
    1054:	ble	12a8 <compare_data+0xf1c>
    1058:	mov	r2, r4
    105c:	add	r3, sp, #128	; 0x80
    1060:	mov	lr, #130	; 0x82
    1064:	ldr	ip, [r2], #4
    1068:	subs	lr, lr, #1
    106c:	str	ip, [r3], #4
    1070:	bne	1064 <compare_data+0xcd8>
    1074:	mov	r0, r4
    1078:	bl	0 <coda_cursor_goto_first_record_field>
    107c:	cmp	r0, #0
    1080:	beq	1098 <compare_data+0xd0c>
    1084:	mov	r1, #1
    1088:	mov	r0, r4
    108c:	bl	318 <print_error_with_cursor>
    1090:	mvn	r0, #0
    1094:	b	12ac <compare_data+0xf20>
    1098:	mov	r0, #0
    109c:	str	r0, [sp, #108]	; 0x6c
    10a0:	ldr	r1, [sp, #108]	; 0x6c
    10a4:	ldr	r3, [sp, #100]	; 0x64
    10a8:	cmp	r1, r3
    10ac:	bge	12a0 <compare_data+0xf14>
    10b0:	add	r0, sp, #128	; 0x80
    10b4:	add	r2, sp, #84	; 0x54
    10b8:	bl	0 <coda_cursor_get_record_field_available_status>
    10bc:	cmp	r0, #0
    10c0:	beq	10d8 <compare_data+0xd4c>
    10c4:	add	r0, sp, #128	; 0x80
    10c8:	mov	r1, #1
    10cc:	bl	318 <print_error_with_cursor>
    10d0:	mvn	r0, #0
    10d4:	b	12ac <compare_data+0xf20>
    10d8:	ldr	r0, [sp, #92]	; 0x5c
    10dc:	ldr	r1, [sp, #108]	; 0x6c
    10e0:	add	r2, sp, #80	; 0x50
    10e4:	bl	0 <coda_type_get_record_field_name>
    10e8:	cmp	r0, #0
    10ec:	beq	1104 <compare_data+0xd78>
    10f0:	mov	r1, #1
    10f4:	mov	r0, r4
    10f8:	bl	318 <print_error_with_cursor>
    10fc:	mvn	r0, #0
    1100:	b	12ac <compare_data+0xf20>
    1104:	ldr	r0, [sp, #96]	; 0x60
    1108:	ldr	r1, [sp, #80]	; 0x50
    110c:	add	r2, sp, #112	; 0x70
    1110:	bl	0 <coda_type_get_record_field_index_from_name>
    1114:	cmp	r0, #0
    1118:	bne	1258 <compare_data+0xecc>
    111c:	ldr	r1, [sp, #112]	; 0x70
    1120:	add	r2, sp, #88	; 0x58
    1124:	mov	r0, r5
    1128:	bl	0 <coda_cursor_get_record_field_available_status>
    112c:	cmp	r0, #0
    1130:	beq	1148 <compare_data+0xdbc>
    1134:	mov	r1, #2
    1138:	mov	r0, r5
    113c:	bl	318 <print_error_with_cursor>
    1140:	mvn	r0, #0
    1144:	b	12ac <compare_data+0xf20>
    1148:	ldr	ip, [sp, #84]	; 0x54
    114c:	cmp	ip, #0
    1150:	bne	11b0 <compare_data+0xe24>
    1154:	ldr	r0, [sp, #88]	; 0x58
    1158:	cmp	r0, #0
    115c:	beq	1258 <compare_data+0xecc>
    1160:	ldr	r0, [pc, #396]	; 12f4 <compare_data+0xf68>
    1164:	bl	0 <printf>
    1168:	ldr	r1, [pc, #412]	; 130c <compare_data+0xf80>
    116c:	mov	r0, r4
    1170:	bl	0 <coda_cursor_print_path>
    1174:	ldr	r0, [pc, #424]	; 1324 <compare_data+0xf98>
    1178:	bl	0 <printf>
    117c:	ldr	r3, [pc, #404]	; 1318 <compare_data+0xf8c>
    1180:	ldr	r1, [r3]
    1184:	cmp	r1, #0
    1188:	beq	1258 <compare_data+0xecc>
    118c:	ldr	r0, [pc, #380]	; 1310 <compare_data+0xf84>
    1190:	ldr	r1, [pc, #360]	; 1300 <compare_data+0xf74>
    1194:	ldr	r1, [r1]
    1198:	bl	0 <printf>
    119c:	ldr	r0, [pc, #368]	; 1314 <compare_data+0xf88>
    11a0:	ldr	r2, [pc, #408]	; 1340 <compare_data+0xfb4>
    11a4:	ldr	r1, [r2]
    11a8:	bl	0 <printf>
    11ac:	b	1258 <compare_data+0xecc>
    11b0:	ldr	ip, [sp, #88]	; 0x58
    11b4:	cmp	ip, #0
    11b8:	bne	120c <compare_data+0xe80>
    11bc:	ldr	r0, [pc, #304]	; 12f4 <compare_data+0xf68>
    11c0:	bl	0 <printf>
    11c4:	ldr	r1, [pc, #320]	; 130c <compare_data+0xf80>
    11c8:	mov	r0, r4
    11cc:	bl	0 <coda_cursor_print_path>
    11d0:	ldr	r0, [pc, #332]	; 1324 <compare_data+0xf98>
    11d4:	bl	0 <printf>
    11d8:	ldr	r0, [pc, #312]	; 1318 <compare_data+0xf8c>
    11dc:	ldr	r1, [r0]
    11e0:	cmp	r1, #0
    11e4:	beq	1258 <compare_data+0xecc>
    11e8:	ldr	r0, [pc, #292]	; 1314 <compare_data+0xf88>
    11ec:	ldr	r2, [pc, #268]	; 1300 <compare_data+0xf74>
    11f0:	ldr	r1, [r2]
    11f4:	bl	0 <printf>
    11f8:	ldr	r0, [pc, #272]	; 1310 <compare_data+0xf84>
    11fc:	ldr	r1, [pc, #316]	; 1340 <compare_data+0xfb4>
    1200:	ldr	r1, [r1]
    1204:	bl	0 <printf>
    1208:	b	1258 <compare_data+0xecc>
    120c:	ldr	r1, [sp, #112]	; 0x70
    1210:	mov	r0, r5
    1214:	bl	0 <coda_cursor_goto_record_field_by_index>
    1218:	cmp	r0, #0
    121c:	beq	1234 <compare_data+0xea8>
    1220:	mov	r1, #2
    1224:	mov	r0, r5
    1228:	bl	318 <print_error_with_cursor>
    122c:	mvn	r0, #0
    1230:	b	12ac <compare_data+0xf20>
    1234:	mov	r1, r5
    1238:	mov	r0, r4
    123c:	bl	38c <compare_data>
    1240:	cmp	r0, #0
    1244:	beq	1250 <compare_data+0xec4>
    1248:	mvn	r0, #0
    124c:	b	12ac <compare_data+0xf20>
    1250:	mov	r0, r5
    1254:	bl	0 <coda_cursor_goto_parent>
    1258:	ldr	r1, [sp, #108]	; 0x6c
    125c:	ldr	ip, [sp, #100]	; 0x64
    1260:	sub	r2, ip, #1
    1264:	cmp	r1, r2
    1268:	bge	1290 <compare_data+0xf04>
    126c:	mov	r0, r4
    1270:	bl	0 <coda_cursor_goto_next_record_field>
    1274:	cmp	r0, #0
    1278:	beq	1290 <compare_data+0xf04>
    127c:	mov	r1, #1
    1280:	mov	r0, r4
    1284:	bl	318 <print_error_with_cursor>
    1288:	mvn	r0, #0
    128c:	b	12ac <compare_data+0xf20>
    1290:	ldr	r1, [sp, #108]	; 0x6c
    1294:	add	r0, r1, #1
    1298:	str	r0, [sp, #108]	; 0x6c
    129c:	b	10a0 <compare_data+0xd14>
    12a0:	mov	r0, r4
    12a4:	bl	0 <coda_cursor_goto_parent>
    12a8:	mov	r0, #0
    12ac:	cmp	r0, #0
    12b0:	beq	1f84 <compare_data+0x1bf8>
    12b4:	mvn	r0, #0
    12b8:	b	2080 <compare_data+0x1cf4>
    12bc:	ldr	r4, [sp, #28]
    12c0:	ldr	r5, [sp, #20]
    12c4:	add	r1, sp, #80	; 0x50
    12c8:	mov	r0, r5
    12cc:	bl	0 <coda_cursor_get_read_type>
    12d0:	cmp	r0, #0
    12d4:	beq	134c <compare_data+0xfc0>
    12d8:	mov	r1, #1
    12dc:	mov	r0, r5
    12e0:	bl	318 <print_error_with_cursor>
    12e4:	mvn	ip, #0
    12e8:	b	17f4 <compare_data+0x1468>
    12ec:	.word	0x00000541
    12f0:	.word	0x00000000
    12f4:	.word	0x0000011a
    12f8:	.word	0x00000833
    12fc:	.word	0x00000689
    1300:	.word	0x00000000
    1304:	.word	0x00000443
    1308:	.word	0x00000318
    130c:	.word	0x00000000
    1310:	.word	0x0000054c
    1314:	.word	0x00000269
    1318:	.word	0x00000000
    131c:	.word	0x000008cd
    1320:	.word	0x0000046b
    1324:	.word	0x00000736
    1328:	.word	0x0000000c
    132c:	.word	0x000005c4
    1330:	.word	0x0000095b
    1334:	.word	0x000003fa
    1338:	.word	0x00000307
    133c:	.word	0x00000276
    1340:	.word	0x00000004
    1344:	.word	0x00000609
    1348:	.word	0x000008ab
    134c:	add	r1, sp, #84	; 0x54
    1350:	mov	r0, r4
    1354:	bl	0 <coda_cursor_get_read_type>
    1358:	cmp	r0, #0
    135c:	beq	1374 <compare_data+0xfe8>
    1360:	mov	r1, #2
    1364:	mov	r0, r4
    1368:	bl	318 <print_error_with_cursor>
    136c:	mvn	ip, #0
    1370:	b	17f4 <compare_data+0x1468>
    1374:	ldr	r3, [sp, #80]	; 0x50
    1378:	ldr	r0, [sp, #84]	; 0x54
    137c:	cmp	r3, r0
    1380:	beq	1400 <compare_data+0x1074>
    1384:	ldr	r0, [pc, #3412]	; 20e0 <compare_data+0x1d54>
    1388:	bl	0 <printf>
    138c:	ldr	r1, [pc, #3376]	; 20c4 <compare_data+0x1d38>
    1390:	mov	r0, r5
    1394:	bl	0 <coda_cursor_print_path>
    1398:	ldr	r0, [pc, #3372]	; 20cc <compare_data+0x1d40>
    139c:	bl	0 <printf>
    13a0:	ldr	r2, [pc, #3360]	; 20c8 <compare_data+0x1d3c>
    13a4:	ldr	ip, [r2]
    13a8:	cmp	ip, #0
    13ac:	beq	13f8 <compare_data+0x106c>
    13b0:	ldr	r0, [sp, #80]	; 0x50
    13b4:	bl	0 <coda_type_get_native_type_name>
    13b8:	ldr	r2, [pc, #3364]	; 20e4 <compare_data+0x1d58>
    13bc:	ldr	r3, [pc, #3312]	; 20b4 <compare_data+0x1d28>
    13c0:	ldr	r1, [r3]
    13c4:	mov	r3, r0
    13c8:	mov	r0, r2
    13cc:	mov	r2, r3
    13d0:	bl	0 <printf>
    13d4:	ldr	r0, [sp, #84]	; 0x54
    13d8:	bl	0 <coda_type_get_native_type_name>
    13dc:	ldr	r2, [pc, #3328]	; 20e4 <compare_data+0x1d58>
    13e0:	ldr	ip, [pc, #3328]	; 20e8 <compare_data+0x1d5c>
    13e4:	ldr	r1, [ip]
    13e8:	mov	r3, r0
    13ec:	mov	r0, r2
    13f0:	mov	r2, r3
    13f4:	bl	0 <printf>
    13f8:	mov	ip, #0
    13fc:	b	17f4 <compare_data+0x1468>
    1400:	cmp	r3, #10
    1404:	bcs	17d4 <compare_data+0x1448>
    1408:	add	pc, pc, r3, lsl #2
    140c:	nop	{0}
    1410:	b	1438 <compare_data+0x10ac>
    1414:	b	1568 <compare_data+0x11dc>
    1418:	b	1438 <compare_data+0x10ac>
    141c:	b	1568 <compare_data+0x11dc>
    1420:	b	1438 <compare_data+0x10ac>
    1424:	b	1568 <compare_data+0x11dc>
    1428:	b	1438 <compare_data+0x10ac>
    142c:	b	1568 <compare_data+0x11dc>
    1430:	b	1698 <compare_data+0x130c>
    1434:	b	1698 <compare_data+0x130c>
    1438:	add	r1, sp, #104	; 0x68
    143c:	mov	r0, r5
    1440:	bl	0 <coda_cursor_read_int64>
    1444:	cmp	r0, #0
    1448:	bne	1534 <compare_data+0x11a8>
    144c:	add	r1, sp, #112	; 0x70
    1450:	mov	r0, r4
    1454:	bl	0 <coda_cursor_read_int64>
    1458:	cmp	r0, #0
    145c:	bne	1500 <compare_data+0x1174>
    1460:	ldr	r0, [sp, #104]	; 0x68
    1464:	ldr	ip, [sp, #108]	; 0x6c
    1468:	ldr	r2, [sp, #112]	; 0x70
    146c:	ldr	r1, [sp, #116]	; 0x74
    1470:	eor	ip, ip, r1
    1474:	eor	r0, r0, r2
    1478:	orr	ip, ip, r0
    147c:	cmp	ip, #0
    1480:	beq	17f0 <compare_data+0x1464>
    1484:	ldr	r0, [pc, #3104]	; 20ac <compare_data+0x1d20>
    1488:	bl	0 <printf>
    148c:	ldr	r1, [pc, #3120]	; 20c4 <compare_data+0x1d38>
    1490:	mov	r0, r5
    1494:	bl	0 <coda_cursor_print_path>
    1498:	ldr	r0, [pc, #3116]	; 20cc <compare_data+0x1d40>
    149c:	bl	0 <printf>
    14a0:	ldr	r1, [pc, #3104]	; 20c8 <compare_data+0x1d3c>
    14a4:	ldr	r0, [r1]
    14a8:	cmp	r0, #0
    14ac:	beq	14f8 <compare_data+0x116c>
    14b0:	ldr	r0, [sp, #104]	; 0x68
    14b4:	ldr	r1, [sp, #108]	; 0x6c
    14b8:	add	r2, sp, #136	; 0x88
    14bc:	bl	0 <coda_str64>
    14c0:	ldr	r0, [pc, #3100]	; 20e4 <compare_data+0x1d58>
    14c4:	ldr	r2, [pc, #3048]	; 20b4 <compare_data+0x1d28>
    14c8:	ldr	r1, [r2]
    14cc:	add	r2, sp, #136	; 0x88
    14d0:	bl	0 <printf>
    14d4:	ldr	r0, [sp, #112]	; 0x70
    14d8:	ldr	r1, [sp, #116]	; 0x74
    14dc:	add	r2, sp, #136	; 0x88
    14e0:	bl	0 <coda_str64>
    14e4:	ldr	r0, [pc, #3064]	; 20e4 <compare_data+0x1d58>
    14e8:	ldr	ip, [pc, #3064]	; 20e8 <compare_data+0x1d5c>
    14ec:	ldr	r1, [ip]
    14f0:	add	r2, sp, #136	; 0x88
    14f4:	bl	0 <printf>
    14f8:	mov	ip, #0
    14fc:	b	17f4 <compare_data+0x1468>
    1500:	mov	r1, #2
    1504:	mov	r0, r4
    1508:	bl	318 <print_error_with_cursor>
    150c:	bl	0 <coda_get_errno>
    1510:	ldr	ip, [r0]
    1514:	cmn	ip, #300	; 0x12c
    1518:	beq	17f0 <compare_data+0x1464>
    151c:	bl	0 <coda_get_errno>
    1520:	ldr	ip, [r0]
    1524:	cmn	ip, #103	; 0x67
    1528:	beq	17f0 <compare_data+0x1464>
    152c:	mvn	ip, #0
    1530:	b	17f4 <compare_data+0x1468>
    1534:	mov	r1, #1
    1538:	mov	r0, r5
    153c:	bl	318 <print_error_with_cursor>
    1540:	bl	0 <coda_get_errno>
    1544:	ldr	ip, [r0]
    1548:	cmn	ip, #300	; 0x12c
    154c:	beq	17f0 <compare_data+0x1464>
    1550:	bl	0 <coda_get_errno>
    1554:	ldr	r3, [r0]
    1558:	cmn	r3, #103	; 0x67
    155c:	beq	17f0 <compare_data+0x1464>
    1560:	mvn	ip, #0
    1564:	b	17f4 <compare_data+0x1468>
    1568:	add	r1, sp, #120	; 0x78
    156c:	mov	r0, r5
    1570:	bl	0 <coda_cursor_read_uint64>
    1574:	cmp	r0, #0
    1578:	bne	1664 <compare_data+0x12d8>
    157c:	add	r1, sp, #128	; 0x80
    1580:	mov	r0, r4
    1584:	bl	0 <coda_cursor_read_uint64>
    1588:	cmp	r0, #0
    158c:	bne	1630 <compare_data+0x12a4>
    1590:	ldr	r3, [sp, #120]	; 0x78
    1594:	ldr	ip, [sp, #124]	; 0x7c
    1598:	ldr	r2, [sp, #128]	; 0x80
    159c:	ldr	r0, [sp, #132]	; 0x84
    15a0:	eor	r1, ip, r0
    15a4:	eor	r2, r3, r2
    15a8:	orr	r1, r1, r2
    15ac:	cmp	r1, #0
    15b0:	beq	17f0 <compare_data+0x1464>
    15b4:	ldr	r0, [pc, #2800]	; 20ac <compare_data+0x1d20>
    15b8:	bl	0 <printf>
    15bc:	ldr	r1, [pc, #2816]	; 20c4 <compare_data+0x1d38>
    15c0:	mov	r0, r5
    15c4:	bl	0 <coda_cursor_print_path>
    15c8:	ldr	r0, [pc, #2812]	; 20cc <compare_data+0x1d40>
    15cc:	bl	0 <printf>
    15d0:	ldr	r1, [pc, #2800]	; 20c8 <compare_data+0x1d3c>
    15d4:	ldr	r2, [r1]
    15d8:	cmp	r2, #0
    15dc:	beq	1628 <compare_data+0x129c>
    15e0:	ldr	r0, [sp, #120]	; 0x78
    15e4:	ldr	r1, [sp, #124]	; 0x7c
    15e8:	add	r2, sp, #160	; 0xa0
    15ec:	bl	0 <coda_str64u>
    15f0:	ldr	r0, [pc, #2796]	; 20e4 <compare_data+0x1d58>
    15f4:	ldr	ip, [pc, #2744]	; 20b4 <compare_data+0x1d28>
    15f8:	ldr	r1, [ip]
    15fc:	add	r2, sp, #160	; 0xa0
    1600:	bl	0 <printf>
    1604:	ldr	r0, [sp, #128]	; 0x80
    1608:	ldr	r1, [sp, #132]	; 0x84
    160c:	add	r2, sp, #160	; 0xa0
    1610:	bl	0 <coda_str64u>
    1614:	ldr	r0, [pc, #2760]	; 20e4 <compare_data+0x1d58>
    1618:	ldr	r2, [pc, #2760]	; 20e8 <compare_data+0x1d5c>
    161c:	ldr	r1, [r2]
    1620:	add	r2, sp, #160	; 0xa0
    1624:	bl	0 <printf>
    1628:	mov	ip, #0
    162c:	b	17f4 <compare_data+0x1468>
    1630:	mov	r1, #2
    1634:	mov	r0, r4
    1638:	bl	318 <print_error_with_cursor>
    163c:	bl	0 <coda_get_errno>
    1640:	ldr	r0, [r0]
    1644:	cmn	r0, #300	; 0x12c
    1648:	beq	17f0 <compare_data+0x1464>
    164c:	bl	0 <coda_get_errno>
    1650:	ldr	r1, [r0]
    1654:	cmn	r1, #103	; 0x67
    1658:	beq	17f0 <compare_data+0x1464>
    165c:	mvn	ip, #0
    1660:	b	17f4 <compare_data+0x1468>
    1664:	mov	r1, #1
    1668:	mov	r0, r5
    166c:	bl	318 <print_error_with_cursor>
    1670:	bl	0 <coda_get_errno>
    1674:	ldr	ip, [r0]
    1678:	cmn	ip, #300	; 0x12c
    167c:	beq	17f0 <compare_data+0x1464>
    1680:	bl	0 <coda_get_errno>
    1684:	ldr	r2, [r0]
    1688:	cmn	r2, #103	; 0x67
    168c:	beq	17f0 <compare_data+0x1464>
    1690:	mvn	ip, #0
    1694:	b	17f4 <compare_data+0x1468>
    1698:	add	r1, sp, #88	; 0x58
    169c:	mov	r0, r5
    16a0:	bl	0 <coda_cursor_read_double>
    16a4:	cmp	r0, #0
    16a8:	bne	17a0 <compare_data+0x1414>
    16ac:	add	r1, sp, #96	; 0x60
    16b0:	mov	r0, r4
    16b4:	bl	0 <coda_cursor_read_double>
    16b8:	cmp	r0, #0
    16bc:	bne	176c <compare_data+0x13e0>
    16c0:	vldr	d0, [sp, #88]	; 0x58
    16c4:	vldr	d1, [sp, #96]	; 0x60
    16c8:	vcmp.f64	d0, d1
    16cc:	vmrs	APSR_nzcv, fpscr
    16d0:	beq	17f0 <compare_data+0x1464>
    16d4:	bl	0 <coda_isNaN>
    16d8:	cmp	r0, #0
    16dc:	beq	16f8 <compare_data+0x136c>
    16e0:	vldr	d0, [sp, #96]	; 0x60
    16e4:	bl	0 <coda_isNaN>
    16e8:	cmp	r0, #0
    16ec:	movne	r2, #1
    16f0:	moveq	r2, #0
    16f4:	b	16fc <compare_data+0x1370>
    16f8:	mov	r2, #0
    16fc:	eor	r1, r2, #1
    1700:	cmp	r1, #0
    1704:	beq	17f0 <compare_data+0x1464>
    1708:	ldr	r0, [pc, #2460]	; 20ac <compare_data+0x1d20>
    170c:	bl	0 <printf>
    1710:	ldr	r1, [pc, #2476]	; 20c4 <compare_data+0x1d38>
    1714:	mov	r0, r5
    1718:	bl	0 <coda_cursor_print_path>
    171c:	ldr	r0, [pc, #2472]	; 20cc <compare_data+0x1d40>
    1720:	bl	0 <printf>
    1724:	ldr	r2, [pc, #2460]	; 20c8 <compare_data+0x1d3c>
    1728:	ldr	r0, [r2]
    172c:	cmp	r0, #0
    1730:	beq	1764 <compare_data+0x13d8>
    1734:	ldr	r0, [pc, #2428]	; 20b8 <compare_data+0x1d2c>
    1738:	ldr	r2, [pc, #2420]	; 20b4 <compare_data+0x1d28>
    173c:	ldr	r1, [r2]
    1740:	vldr	d2, [sp, #88]	; 0x58
    1744:	vmov	r2, r3, d2
    1748:	bl	0 <printf>
    174c:	ldr	r0, [pc, #2404]	; 20b8 <compare_data+0x1d2c>
    1750:	ldr	ip, [pc, #2448]	; 20e8 <compare_data+0x1d5c>
    1754:	ldr	r1, [ip]
    1758:	vldr	d2, [sp, #96]	; 0x60
    175c:	vmov	r2, r3, d2
    1760:	bl	0 <printf>
    1764:	mov	ip, #0
    1768:	b	17f4 <compare_data+0x1468>
    176c:	mov	r1, #2
    1770:	mov	r0, r4
    1774:	bl	318 <print_error_with_cursor>
    1778:	bl	0 <coda_get_errno>
    177c:	ldr	r3, [r0]
    1780:	cmn	r3, #300	; 0x12c
    1784:	beq	17f0 <compare_data+0x1464>
    1788:	bl	0 <coda_get_errno>
    178c:	ldr	r1, [r0]
    1790:	cmn	r1, #103	; 0x67
    1794:	beq	17f0 <compare_data+0x1464>
    1798:	mvn	ip, #0
    179c:	b	17f4 <compare_data+0x1468>
    17a0:	mov	r1, #1
    17a4:	mov	r0, r5
    17a8:	bl	318 <print_error_with_cursor>
    17ac:	bl	0 <coda_get_errno>
    17b0:	ldr	ip, [r0]
    17b4:	cmn	ip, #300	; 0x12c
    17b8:	beq	17f0 <compare_data+0x1464>
    17bc:	bl	0 <coda_get_errno>
    17c0:	ldr	ip, [r0]
    17c4:	cmn	ip, #103	; 0x67
    17c8:	beq	17f0 <compare_data+0x1464>
    17cc:	mvn	ip, #0
    17d0:	b	17f4 <compare_data+0x1468>
    17d4:	ldr	r0, [pc, #2324]	; 20f0 <compare_data+0x1d64>
    17d8:	ldr	r1, [pc, #2316]	; 20ec <compare_data+0x1d60>
    17dc:	movw	r2, #950	; 0x3b6
    17e0:	ldr	r3, [pc, #2280]	; 20d0 <compare_data+0x1d44>
    17e4:	bl	0 <__assert_fail>
    17e8:	mov	r0, #1
    17ec:	bl	0 <exit>
    17f0:	mov	ip, #0
    17f4:	cmp	ip, #0
    17f8:	beq	1f84 <compare_data+0x1bf8>
    17fc:	mvn	r0, #0
    1800:	b	2080 <compare_data+0x1cf4>
    1804:	ldr	r5, [sp, #28]
    1808:	ldr	r4, [sp, #20]
    180c:	add	r1, sp, #80	; 0x50
    1810:	mov	r0, r4
    1814:	bl	0 <coda_cursor_get_string_length>
    1818:	cmp	r0, #0
    181c:	beq	1834 <compare_data+0x14a8>
    1820:	mov	r1, #1
    1824:	mov	r0, r4
    1828:	bl	318 <print_error_with_cursor>
    182c:	mvn	ip, #0
    1830:	b	1a44 <compare_data+0x16b8>
    1834:	add	r1, sp, #84	; 0x54
    1838:	mov	r0, r5
    183c:	bl	0 <coda_cursor_get_string_length>
    1840:	cmp	r0, #0
    1844:	beq	185c <compare_data+0x14d0>
    1848:	mov	r1, #2
    184c:	mov	r0, r5
    1850:	bl	318 <print_error_with_cursor>
    1854:	mvn	ip, #0
    1858:	b	1a44 <compare_data+0x16b8>
    185c:	ldr	ip, [sp, #80]	; 0x50
    1860:	add	r0, ip, #1
    1864:	bl	0 <malloc>
    1868:	mov	r6, r0
    186c:	cmp	r6, #0
    1870:	bne	18a4 <compare_data+0x1518>
    1874:	mvn	r0, #0
    1878:	ldr	r1, [pc, #2136]	; 20d8 <compare_data+0x1d4c>
    187c:	ldr	r2, [sp, #80]	; 0x50
    1880:	ldr	r3, [pc, #2148]	; 20ec <compare_data+0x1d60>
    1884:	movw	r5, #978	; 0x3d2
    1888:	str	r5, [sp]
    188c:	bl	0 <coda_set_error>
    1890:	mov	r1, #1
    1894:	mov	r0, r4
    1898:	bl	318 <print_error_with_cursor>
    189c:	mvn	ip, #0
    18a0:	b	1a44 <compare_data+0x16b8>
    18a4:	ldr	r0, [sp, #84]	; 0x54
    18a8:	add	r0, r0, #1
    18ac:	bl	0 <malloc>
    18b0:	mov	r7, r0
    18b4:	cmp	r7, #0
    18b8:	bne	18f4 <compare_data+0x1568>
    18bc:	mvn	r0, #0
    18c0:	ldr	r1, [pc, #2064]	; 20d8 <compare_data+0x1d4c>
    18c4:	ldr	r2, [sp, #84]	; 0x54
    18c8:	ldr	r3, [pc, #2076]	; 20ec <compare_data+0x1d60>
    18cc:	movw	r4, #986	; 0x3da
    18d0:	str	r4, [sp]
    18d4:	bl	0 <coda_set_error>
    18d8:	mov	r1, #2
    18dc:	mov	r0, r5
    18e0:	bl	318 <print_error_with_cursor>
    18e4:	mov	r0, r6
    18e8:	bl	0 <free>
    18ec:	mvn	ip, #0
    18f0:	b	1a44 <compare_data+0x16b8>
    18f4:	ldr	ip, [sp, #80]	; 0x50
    18f8:	add	r2, ip, #1
    18fc:	mov	r1, r6
    1900:	mov	r0, r4
    1904:	bl	0 <coda_cursor_read_string>
    1908:	cmp	r0, #0
    190c:	bne	19ec <compare_data+0x1660>
    1910:	ldr	r0, [sp, #84]	; 0x54
    1914:	add	r2, r0, #1
    1918:	mov	r1, r7
    191c:	mov	r0, r5
    1920:	bl	0 <coda_cursor_read_string>
    1924:	cmp	r0, #0
    1928:	bne	19a8 <compare_data+0x161c>
    192c:	ldr	r2, [sp, #80]	; 0x50
    1930:	ldr	r3, [sp, #84]	; 0x54
    1934:	cmp	r2, r3
    1938:	bne	1950 <compare_data+0x15c4>
    193c:	mov	r1, r7
    1940:	mov	r0, r6
    1944:	bl	0 <memcmp>
    1948:	cmp	r0, #0
    194c:	beq	1a30 <compare_data+0x16a4>
    1950:	ldr	r0, [pc, #1924]	; 20dc <compare_data+0x1d50>
    1954:	bl	0 <printf>
    1958:	ldr	r1, [pc, #1892]	; 20c4 <compare_data+0x1d38>
    195c:	mov	r0, r4
    1960:	bl	0 <coda_cursor_print_path>
    1964:	ldr	r0, [pc, #1888]	; 20cc <compare_data+0x1d40>
    1968:	bl	0 <printf>
    196c:	ldr	r2, [pc, #1876]	; 20c8 <compare_data+0x1d3c>
    1970:	ldr	r0, [r2]
    1974:	cmp	r0, #0
    1978:	beq	1a30 <compare_data+0x16a4>
    197c:	ldr	r0, [pc, #1888]	; 20e4 <compare_data+0x1d58>
    1980:	ldr	r1, [pc, #1836]	; 20b4 <compare_data+0x1d28>
    1984:	ldr	r1, [r1]
    1988:	mov	r2, r6
    198c:	bl	0 <printf>
    1990:	ldr	r0, [pc, #1868]	; 20e4 <compare_data+0x1d58>
    1994:	ldr	ip, [pc, #1868]	; 20e8 <compare_data+0x1d5c>
    1998:	ldr	r1, [ip]
    199c:	mov	r2, r7
    19a0:	bl	0 <printf>
    19a4:	b	1a30 <compare_data+0x16a4>
    19a8:	mov	r1, #2
    19ac:	mov	r0, r5
    19b0:	bl	318 <print_error_with_cursor>
    19b4:	bl	0 <coda_get_errno>
    19b8:	ldr	r3, [r0]
    19bc:	cmn	r3, #300	; 0x12c
    19c0:	beq	1a30 <compare_data+0x16a4>
    19c4:	bl	0 <coda_get_errno>
    19c8:	ldr	r0, [r0]
    19cc:	cmn	r0, #103	; 0x67
    19d0:	beq	1a30 <compare_data+0x16a4>
    19d4:	mov	r0, r6
    19d8:	bl	0 <free>
    19dc:	mov	r0, r7
    19e0:	bl	0 <free>
    19e4:	mvn	ip, #0
    19e8:	b	1a44 <compare_data+0x16b8>
    19ec:	mov	r1, #1
    19f0:	mov	r0, r4
    19f4:	bl	318 <print_error_with_cursor>
    19f8:	bl	0 <coda_get_errno>
    19fc:	ldr	r0, [r0]
    1a00:	cmn	r0, #300	; 0x12c
    1a04:	beq	1a30 <compare_data+0x16a4>
    1a08:	bl	0 <coda_get_errno>
    1a0c:	ldr	r3, [r0]
    1a10:	cmn	r3, #103	; 0x67
    1a14:	beq	1a30 <compare_data+0x16a4>
    1a18:	mov	r0, r6
    1a1c:	bl	0 <free>
    1a20:	mov	r0, r7
    1a24:	bl	0 <free>
    1a28:	mvn	ip, #0
    1a2c:	b	1a44 <compare_data+0x16b8>
    1a30:	mov	r0, r6
    1a34:	bl	0 <free>
    1a38:	mov	r0, r7
    1a3c:	bl	0 <free>
    1a40:	mov	ip, #0
    1a44:	cmp	ip, #0
    1a48:	beq	1f84 <compare_data+0x1bf8>
    1a4c:	mvn	r0, #0
    1a50:	b	2080 <compare_data+0x1cf4>
    1a54:	ldr	sl, [sp, #28]
    1a58:	ldr	r4, [sp, #20]
    1a5c:	add	r1, sp, #80	; 0x50
    1a60:	mov	r0, r4
    1a64:	bl	0 <coda_cursor_get_bit_size>
    1a68:	cmp	r0, #0
    1a6c:	beq	1a84 <compare_data+0x16f8>
    1a70:	mov	r1, #1
    1a74:	mov	r0, r4
    1a78:	bl	318 <print_error_with_cursor>
    1a7c:	mvn	r0, #0
    1a80:	b	1e3c <compare_data+0x1ab0>
    1a84:	mov	r0, #1
    1a88:	mov	ip, #0
    1a8c:	ldr	r3, [sp, #80]	; 0x50
    1a90:	ldr	r2, [sp, #84]	; 0x54
    1a94:	mov	r5, #0
    1a98:	and	r1, r3, #7
    1a9c:	orr	r1, r5, r1
    1aa0:	cmp	r1, #0
    1aa4:	movne	r1, #1
    1aa8:	moveq	r1, #0
    1aac:	cmp	r1, #0
    1ab0:	movne	r0, r0
    1ab4:	moveq	r0, ip
    1ab8:	asr	ip, r2, #3
    1abc:	lsr	r1, r3, #3
    1ac0:	orr	r2, r1, r2, lsl #29
    1ac4:	asr	r1, r0, #31
    1ac8:	adds	r8, r2, r0
    1acc:	adc	r7, ip, r1
    1ad0:	add	r1, sp, #88	; 0x58
    1ad4:	mov	r0, sl
    1ad8:	bl	0 <coda_cursor_get_bit_size>
    1adc:	cmp	r0, #0
    1ae0:	beq	1af8 <compare_data+0x176c>
    1ae4:	mov	r1, #2
    1ae8:	mov	r0, sl
    1aec:	bl	318 <print_error_with_cursor>
    1af0:	mvn	r0, #0
    1af4:	b	1e3c <compare_data+0x1ab0>
    1af8:	mov	r2, #1
    1afc:	mov	r1, #0
    1b00:	ldr	r3, [sp, #88]	; 0x58
    1b04:	ldr	r0, [sp, #92]	; 0x5c
    1b08:	mov	ip, #0
    1b0c:	and	r5, r3, #7
    1b10:	orr	ip, ip, r5
    1b14:	cmp	ip, #0
    1b18:	movne	ip, #1
    1b1c:	moveq	ip, #0
    1b20:	cmp	ip, #0
    1b24:	movne	r2, r2
    1b28:	moveq	r2, r1
    1b2c:	asr	r1, r0, #3
    1b30:	lsr	ip, r3, #3
    1b34:	orr	ip, ip, r0, lsl #29
    1b38:	asr	r5, r2, #31
    1b3c:	adds	r9, ip, r2
    1b40:	adc	ip, r1, r5
    1b44:	ldr	r1, [sp, #80]	; 0x50
    1b48:	ldr	r2, [sp, #84]	; 0x54
    1b4c:	eor	ip, r2, r0
    1b50:	eor	r3, r1, r3
    1b54:	orr	ip, ip, r3
    1b58:	cmp	ip, #0
    1b5c:	beq	1bdc <compare_data+0x1850>
    1b60:	ldr	r0, [pc, #1352]	; 20b0 <compare_data+0x1d24>
    1b64:	bl	0 <printf>
    1b68:	ldr	r1, [pc, #1364]	; 20c4 <compare_data+0x1d38>
    1b6c:	mov	r0, r4
    1b70:	bl	0 <coda_cursor_print_path>
    1b74:	ldr	r0, [pc, #1360]	; 20cc <compare_data+0x1d40>
    1b78:	bl	0 <printf>
    1b7c:	ldr	r0, [pc, #1348]	; 20c8 <compare_data+0x1d3c>
    1b80:	ldr	r2, [r0]
    1b84:	cmp	r2, #0
    1b88:	beq	1bd4 <compare_data+0x1848>
    1b8c:	ldr	r0, [sp, #80]	; 0x50
    1b90:	ldr	r1, [sp, #84]	; 0x54
    1b94:	add	r2, sp, #96	; 0x60
    1b98:	bl	0 <coda_str64>
    1b9c:	ldr	r0, [pc, #1304]	; 20bc <compare_data+0x1d30>
    1ba0:	ldr	r1, [pc, #1292]	; 20b4 <compare_data+0x1d28>
    1ba4:	ldr	r1, [r1]
    1ba8:	add	r2, sp, #96	; 0x60
    1bac:	bl	0 <printf>
    1bb0:	ldr	r0, [sp, #88]	; 0x58
    1bb4:	ldr	r1, [sp, #92]	; 0x5c
    1bb8:	add	r2, sp, #96	; 0x60
    1bbc:	bl	0 <coda_str64>
    1bc0:	ldr	r0, [pc, #1268]	; 20bc <compare_data+0x1d30>
    1bc4:	ldr	ip, [pc, #1308]	; 20e8 <compare_data+0x1d5c>
    1bc8:	ldr	r1, [ip]
    1bcc:	add	r2, sp, #96	; 0x60
    1bd0:	bl	0 <printf>
    1bd4:	mov	r0, #0
    1bd8:	b	1e3c <compare_data+0x1ab0>
    1bdc:	cmp	r2, #0
    1be0:	bne	1bf0 <compare_data+0x1864>
    1be4:	cmp	r1, #0
    1be8:	bhi	1bf8 <compare_data+0x186c>
    1bec:	b	1e38 <compare_data+0x1aac>
    1bf0:	cmp	r2, #0
    1bf4:	ble	1e38 <compare_data+0x1aac>
    1bf8:	mov	r0, r8
    1bfc:	bl	0 <malloc>
    1c00:	mov	r5, r0
    1c04:	cmp	r5, #0
    1c08:	bne	1c3c <compare_data+0x18b0>
    1c0c:	mvn	r0, #0
    1c10:	ldr	r1, [pc, #1216]	; 20d8 <compare_data+0x1d4c>
    1c14:	ldr	r3, [pc, #1232]	; 20ec <compare_data+0x1d60>
    1c18:	mov	r2, #1072	; 0x430
    1c1c:	str	r2, [sp]
    1c20:	mov	r2, r8
    1c24:	bl	0 <coda_set_error>
    1c28:	mov	r1, #1
    1c2c:	mov	r0, r4
    1c30:	bl	318 <print_error_with_cursor>
    1c34:	mvn	r0, #0
    1c38:	b	1e3c <compare_data+0x1ab0>
    1c3c:	mov	r0, r9
    1c40:	bl	0 <malloc>
    1c44:	mov	r6, r0
    1c48:	cmp	r6, #0
    1c4c:	bne	1c88 <compare_data+0x18fc>
    1c50:	mvn	r0, #0
    1c54:	ldr	r1, [pc, #1148]	; 20d8 <compare_data+0x1d4c>
    1c58:	mov	r2, r9
    1c5c:	ldr	r3, [pc, #1160]	; 20ec <compare_data+0x1d60>
    1c60:	movw	r4, #1080	; 0x438
    1c64:	str	r4, [sp]
    1c68:	bl	0 <coda_set_error>
    1c6c:	mov	r1, #2
    1c70:	mov	r0, sl
    1c74:	bl	318 <print_error_with_cursor>
    1c78:	mov	r0, r5
    1c7c:	bl	0 <free>
    1c80:	mvn	r0, #0
    1c84:	b	1e3c <compare_data+0x1ab0>
    1c88:	mov	r3, #0
    1c8c:	mov	r2, #0
    1c90:	ldr	r0, [sp, #80]	; 0x50
    1c94:	ldr	r1, [sp, #84]	; 0x54
    1c98:	str	r1, [sp, #4]
    1c9c:	str	r0, [sp]
    1ca0:	mov	r1, r5
    1ca4:	mov	r0, r4
    1ca8:	bl	0 <coda_cursor_read_bits>
    1cac:	cmp	r0, #0
    1cb0:	bne	1de4 <compare_data+0x1a58>
    1cb4:	mov	r3, #0
    1cb8:	mov	r2, #0
    1cbc:	ldr	r1, [sp, #88]	; 0x58
    1cc0:	ldr	r0, [sp, #92]	; 0x5c
    1cc4:	str	r0, [sp, #4]
    1cc8:	str	r1, [sp]
    1ccc:	mov	r1, r6
    1cd0:	mov	r0, sl
    1cd4:	bl	0 <coda_cursor_read_bits>
    1cd8:	cmp	r0, #0
    1cdc:	bne	1da0 <compare_data+0x1a14>
    1ce0:	mov	r2, r8
    1ce4:	mov	r1, r6
    1ce8:	mov	r0, r5
    1cec:	bl	0 <memcmp>
    1cf0:	cmp	r0, #0
    1cf4:	beq	1e28 <compare_data+0x1a9c>
    1cf8:	ldr	r0, [pc, #1012]	; 20f4 <compare_data+0x1d68>
    1cfc:	bl	0 <printf>
    1d00:	ldr	r1, [pc, #956]	; 20c4 <compare_data+0x1d38>
    1d04:	mov	r0, r4
    1d08:	bl	0 <coda_cursor_print_path>
    1d0c:	ldr	r0, [pc, #952]	; 20cc <compare_data+0x1d40>
    1d10:	bl	0 <printf>
    1d14:	ldr	r0, [pc, #940]	; 20c8 <compare_data+0x1d3c>
    1d18:	ldr	ip, [r0]
    1d1c:	cmp	ip, #0
    1d20:	beq	1e28 <compare_data+0x1a9c>
    1d24:	mov	r3, r8
    1d28:	cmp	r7, #0
    1d2c:	bne	1d40 <compare_data+0x19b4>
    1d30:	cmp	r3, #256	; 0x100
    1d34:	movls	r1, #1
    1d38:	movhi	r1, #0
    1d3c:	b	1d4c <compare_data+0x19c0>
    1d40:	cmp	r7, #0
    1d44:	movlt	r1, #1
    1d48:	movge	r1, #0
    1d4c:	cmp	r1, #0
    1d50:	beq	1e28 <compare_data+0x1a9c>
    1d54:	ldr	r0, [pc, #888]	; 20d4 <compare_data+0x1d48>
    1d58:	ldr	r1, [pc, #852]	; 20b4 <compare_data+0x1d28>
    1d5c:	ldr	r1, [r1]
    1d60:	bl	0 <printf>
    1d64:	mov	r1, r8
    1d68:	mov	r0, r5
    1d6c:	bl	1b4 <print_escaped>
    1d70:	ldr	r0, [pc, #852]	; 20cc <compare_data+0x1d40>
    1d74:	bl	0 <printf>
    1d78:	ldr	r0, [pc, #852]	; 20d4 <compare_data+0x1d48>
    1d7c:	ldr	ip, [pc, #868]	; 20e8 <compare_data+0x1d5c>
    1d80:	ldr	r1, [ip]
    1d84:	bl	0 <printf>
    1d88:	mov	r1, r9
    1d8c:	mov	r0, r6
    1d90:	bl	1b4 <print_escaped>
    1d94:	ldr	r0, [pc, #816]	; 20cc <compare_data+0x1d40>
    1d98:	bl	0 <printf>
    1d9c:	b	1e28 <compare_data+0x1a9c>
    1da0:	mov	r1, #2
    1da4:	mov	r0, sl
    1da8:	bl	318 <print_error_with_cursor>
    1dac:	bl	0 <coda_get_errno>
    1db0:	ldr	r2, [r0]
    1db4:	cmn	r2, #300	; 0x12c
    1db8:	beq	1e28 <compare_data+0x1a9c>
    1dbc:	bl	0 <coda_get_errno>
    1dc0:	ldr	r0, [r0]
    1dc4:	cmn	r0, #103	; 0x67
    1dc8:	beq	1e28 <compare_data+0x1a9c>
    1dcc:	mov	r0, r5
    1dd0:	bl	0 <free>
    1dd4:	mov	r0, r6
    1dd8:	bl	0 <free>
    1ddc:	mvn	r0, #0
    1de0:	b	1e3c <compare_data+0x1ab0>
    1de4:	mov	r1, #1
    1de8:	mov	r0, r4
    1dec:	bl	318 <print_error_with_cursor>
    1df0:	bl	0 <coda_get_errno>
    1df4:	ldr	r3, [r0]
    1df8:	cmn	r3, #300	; 0x12c
    1dfc:	beq	1e28 <compare_data+0x1a9c>
    1e00:	bl	0 <coda_get_errno>
    1e04:	ldr	ip, [r0]
    1e08:	cmn	ip, #103	; 0x67
    1e0c:	beq	1e28 <compare_data+0x1a9c>
    1e10:	mov	r0, r5
    1e14:	bl	0 <free>
    1e18:	mov	r0, r6
    1e1c:	bl	0 <free>
    1e20:	mvn	r0, #0
    1e24:	b	1e3c <compare_data+0x1ab0>
    1e28:	mov	r0, r5
    1e2c:	bl	0 <free>
    1e30:	mov	r0, r6
    1e34:	bl	0 <free>
    1e38:	mov	r0, #0
    1e3c:	cmp	r0, #0
    1e40:	beq	1f84 <compare_data+0x1bf8>
    1e44:	mvn	r0, #0
    1e48:	b	2080 <compare_data+0x1cf4>
    1e4c:	add	r1, sp, #72	; 0x48
    1e50:	ldr	r0, [sp, #20]
    1e54:	bl	0 <coda_cursor_get_special_type>
    1e58:	cmp	r0, #0
    1e5c:	beq	1e74 <compare_data+0x1ae8>
    1e60:	mov	r1, #1
    1e64:	ldr	r0, [sp, #20]
    1e68:	bl	318 <print_error_with_cursor>
    1e6c:	mvn	r0, #0
    1e70:	b	2080 <compare_data+0x1cf4>
    1e74:	add	r1, sp, #76	; 0x4c
    1e78:	ldr	r0, [sp, #28]
    1e7c:	bl	0 <coda_cursor_get_special_type>
    1e80:	cmp	r0, #0
    1e84:	beq	1e9c <compare_data+0x1b10>
    1e88:	mov	r1, #2
    1e8c:	ldr	r0, [sp, #28]
    1e90:	bl	318 <print_error_with_cursor>
    1e94:	mvn	r0, #0
    1e98:	b	2080 <compare_data+0x1cf4>
    1e9c:	ldr	r1, [sp, #72]	; 0x48
    1ea0:	ldr	r0, [sp, #76]	; 0x4c
    1ea4:	cmp	r1, r0
    1ea8:	beq	1f20 <compare_data+0x1b94>
    1eac:	ldr	r0, [pc, #524]	; 20c0 <compare_data+0x1d34>
    1eb0:	bl	0 <printf>
    1eb4:	ldr	r1, [pc, #520]	; 20c4 <compare_data+0x1d38>
    1eb8:	ldr	r0, [sp, #20]
    1ebc:	bl	0 <coda_cursor_print_path>
    1ec0:	ldr	r0, [pc, #516]	; 20cc <compare_data+0x1d40>
    1ec4:	bl	0 <printf>
    1ec8:	ldr	r0, [pc, #504]	; 20c8 <compare_data+0x1d3c>
    1ecc:	ldr	r0, [r0]
    1ed0:	cmp	r0, #0
    1ed4:	beq	1f18 <compare_data+0x1b8c>
    1ed8:	ldr	r0, [sp, #72]	; 0x48
    1edc:	bl	0 <coda_type_get_special_type_name>
    1ee0:	mov	r2, r0
    1ee4:	ldr	r0, [pc, #504]	; 20e4 <compare_data+0x1d58>
    1ee8:	ldr	r1, [pc, #452]	; 20b4 <compare_data+0x1d28>
    1eec:	ldr	r1, [r1]
    1ef0:	bl	0 <printf>
    1ef4:	ldr	r0, [sp, #76]	; 0x4c
    1ef8:	bl	0 <coda_type_get_special_type_name>
    1efc:	ldr	r2, [pc, #480]	; 20e4 <compare_data+0x1d58>
    1f00:	ldr	r1, [pc, #480]	; 20e8 <compare_data+0x1d5c>
    1f04:	ldr	r1, [r1]
    1f08:	mov	r3, r0
    1f0c:	mov	r0, r2
    1f10:	mov	r2, r3
    1f14:	bl	0 <printf>
    1f18:	mov	r0, #0
    1f1c:	b	2080 <compare_data+0x1cf4>
    1f20:	ldr	r0, [sp, #20]
    1f24:	bl	0 <coda_cursor_use_base_type_of_special_type>
    1f28:	cmp	r0, #0
    1f2c:	beq	1f44 <compare_data+0x1bb8>
    1f30:	mov	r1, #1
    1f34:	ldr	r0, [sp, #20]
    1f38:	bl	318 <print_error_with_cursor>
    1f3c:	mvn	r0, #0
    1f40:	b	2080 <compare_data+0x1cf4>
    1f44:	ldr	r0, [sp, #28]
    1f48:	bl	0 <coda_cursor_use_base_type_of_special_type>
    1f4c:	cmp	r0, #0
    1f50:	beq	1f68 <compare_data+0x1bdc>
    1f54:	mov	r1, #2
    1f58:	ldr	r0, [sp, #28]
    1f5c:	bl	318 <print_error_with_cursor>
    1f60:	mvn	r0, #0
    1f64:	b	2080 <compare_data+0x1cf4>
    1f68:	ldr	r1, [sp, #28]
    1f6c:	ldr	r0, [sp, #20]
    1f70:	bl	38c <compare_data>
    1f74:	cmp	r0, #0
    1f78:	beq	1f84 <compare_data+0x1bf8>
    1f7c:	mvn	r0, #0
    1f80:	b	2080 <compare_data+0x1cf4>
    1f84:	ldr	r4, [sp, #28]
    1f88:	ldr	r5, [sp, #20]
    1f8c:	add	r1, sp, #80	; 0x50
    1f90:	mov	r0, r5
    1f94:	bl	0 <coda_cursor_has_attributes>
    1f98:	cmp	r0, #0
    1f9c:	beq	1fb4 <compare_data+0x1c28>
    1fa0:	mov	r1, #1
    1fa4:	mov	r0, r5
    1fa8:	bl	318 <print_error_with_cursor>
    1fac:	mvn	r3, #0
    1fb0:	b	206c <compare_data+0x1ce0>
    1fb4:	add	r1, sp, #84	; 0x54
    1fb8:	mov	r0, r4
    1fbc:	bl	0 <coda_cursor_has_attributes>
    1fc0:	cmp	r0, #0
    1fc4:	beq	1fdc <compare_data+0x1c50>
    1fc8:	mov	r1, #2
    1fcc:	mov	r0, r4
    1fd0:	bl	318 <print_error_with_cursor>
    1fd4:	mvn	r3, #0
    1fd8:	b	206c <compare_data+0x1ce0>
    1fdc:	ldr	r3, [sp, #80]	; 0x50
    1fe0:	cmp	r3, #0
    1fe4:	bne	1ff4 <compare_data+0x1c68>
    1fe8:	ldr	r3, [sp, #84]	; 0x54
    1fec:	cmp	r3, #0
    1ff0:	beq	2068 <compare_data+0x1cdc>
    1ff4:	mov	r0, r5
    1ff8:	bl	0 <coda_cursor_goto_attributes>
    1ffc:	cmp	r0, #0
    2000:	beq	2018 <compare_data+0x1c8c>
    2004:	mov	r1, #1
    2008:	mov	r0, r5
    200c:	bl	318 <print_error_with_cursor>
    2010:	mvn	r3, #0
    2014:	b	206c <compare_data+0x1ce0>
    2018:	mov	r0, r4
    201c:	bl	0 <coda_cursor_goto_attributes>
    2020:	cmp	r0, #0
    2024:	beq	203c <compare_data+0x1cb0>
    2028:	mov	r1, #2
    202c:	mov	r0, r4
    2030:	bl	318 <print_error_with_cursor>
    2034:	mvn	r3, #0
    2038:	b	206c <compare_data+0x1ce0>
    203c:	mov	r1, r4
    2040:	mov	r0, r5
    2044:	bl	38c <compare_data>
    2048:	cmp	r0, #0
    204c:	beq	2058 <compare_data+0x1ccc>
    2050:	mvn	r3, #0
    2054:	b	206c <compare_data+0x1ce0>
    2058:	mov	r0, r5
    205c:	bl	0 <coda_cursor_goto_parent>
    2060:	mov	r0, r4
    2064:	bl	0 <coda_cursor_goto_parent>
    2068:	mov	r3, #0
    206c:	cmp	r3, #0
    2070:	beq	207c <compare_data+0x1cf0>
    2074:	mvn	r0, #0
    2078:	b	2080 <compare_data+0x1cf4>
    207c:	mov	r0, #0
    2080:	ldr	r4, [sp, #32]
    2084:	ldr	r5, [sp, #36]	; 0x24
    2088:	ldr	r6, [sp, #40]	; 0x28
    208c:	ldr	r7, [sp, #44]	; 0x2c
    2090:	ldr	r8, [sp, #48]	; 0x30
    2094:	ldr	r9, [sp, #52]	; 0x34
    2098:	ldr	sl, [sp, #56]	; 0x38
    209c:	ldr	fp, [sp, #60]	; 0x3c
    20a0:	ldr	lr, [sp, #12]
    20a4:	add	sp, sp, #648	; 0x288
    20a8:	bx	lr
    20ac:	.word	0x000005f7
    20b0:	.word	0x000006d0
    20b4:	.word	0x00000000
    20b8:	.word	0x00000676
    20bc:	.word	0x000008c2
    20c0:	.word	0x000001f6
	...
    20cc:	.word	0x00000736
    20d0:	.word	0x00000a5f
    20d4:	.word	0x0000004b
    20d8:	.word	0x0000095b
    20dc:	.word	0x00000a46
    20e0:	.word	0x000001db
    20e4:	.word	0x00000276
    20e8:	.word	0x00000004
    20ec:	.word	0x00000609
    20f0:	.word	0x000008e7
    20f4:	.word	0x0000083a

000020f8 <main>:
    20f8:	mov	ip, sp
    20fc:	sub	sp, sp, #1104	; 0x450
    2100:	str	ip, [sp, #4]
    2104:	str	lr, [sp, #8]
    2108:	str	r4, [sp, #16]
    210c:	str	r5, [sp, #20]
    2110:	str	r6, [sp, #24]
    2114:	str	r7, [sp, #28]
    2118:	str	r8, [sp, #32]
    211c:	str	r9, [sp, #36]	; 0x24
    2120:	str	sl, [sp, #40]	; 0x28
    2124:	mov	r8, r1
    2128:	mov	r6, r0
    212c:	ldr	r3, [pc, #2236]	; 29f0 <main+0x8f8>
    2130:	mov	ip, #0
    2134:	str	ip, [r3]
    2138:	mov	r7, #1
    213c:	mov	r5, #0
    2140:	cmp	r6, #1
    2144:	beq	2170 <main+0x78>
    2148:	ldr	r0, [r8, #4]
    214c:	ldr	r1, [pc, #2264]	; 2a2c <main+0x934>
    2150:	bl	0 <strcmp>
    2154:	cmp	r0, #0
    2158:	beq	2170 <main+0x78>
    215c:	ldr	r0, [r8, #4]
    2160:	ldr	r1, [pc, #2164]	; 29dc <main+0x8e4>
    2164:	bl	0 <strcmp>
    2168:	cmp	r0, #0
    216c:	bne	217c <main+0x84>
    2170:	bl	0 <print_help>
    2174:	mov	r0, #0
    2178:	bl	0 <exit>
    217c:	ldr	r0, [r8, #4]
    2180:	ldr	r1, [pc, #2128]	; 29d8 <main+0x8e0>
    2184:	bl	0 <strcmp>
    2188:	cmp	r0, #0
    218c:	beq	21a4 <main+0xac>
    2190:	ldr	r0, [r8, #4]
    2194:	ldr	r1, [pc, #2172]	; 2a18 <main+0x920>
    2198:	bl	0 <strcmp>
    219c:	cmp	r0, #0
    21a0:	bne	21cc <main+0xd4>
    21a4:	bl	0 <coda_get_libcoda_version>
    21a8:	mov	r1, r0
    21ac:	ldr	r0, [pc, #2144]	; 2a14 <main+0x91c>
    21b0:	bl	0 <printf>
    21b4:	ldr	r0, [pc, #2052]	; 29c0 <main+0x8c8>
    21b8:	bl	0 <printf>
    21bc:	ldr	r0, [pc, #2104]	; 29fc <main+0x904>
    21c0:	bl	0 <printf>
    21c4:	mov	r0, #0
    21c8:	bl	0 <exit>
    21cc:	ldr	r0, [pc, #2064]	; 29e4 <main+0x8ec>
    21d0:	mov	ip, #0
    21d4:	str	ip, [r0]
    21d8:	ldr	r3, [pc, #2072]	; 29f8 <main+0x900>
    21dc:	mov	r2, #0
    21e0:	str	r2, [r3]
    21e4:	ldr	r1, [pc, #2100]	; 2a20 <main+0x928>
    21e8:	mov	ip, #0
    21ec:	str	ip, [r1]
    21f0:	ldr	r0, [pc, #2056]	; 2a00 <main+0x908>
    21f4:	mov	ip, #0
    21f8:	str	ip, [r0]
    21fc:	mov	sl, #1
    2200:	cmp	r6, #2
    2204:	ble	222c <main+0x134>
    2208:	ldr	r0, [r8, #4]
    220c:	ldr	r1, [pc, #1984]	; 29d4 <main+0x8dc>
    2210:	bl	0 <strcmp>
    2214:	cmp	r0, #0
    2218:	bne	222c <main+0x134>
    221c:	ldr	r0, [r8, #8]
    2220:	bl	0 <coda_set_definition_path>
    2224:	mov	sl, #3
    2228:	b	2270 <main+0x178>
    222c:	ldr	r2, [pc, #1976]	; 29ec <main+0x8f4>
    2230:	ldr	r0, [r8]
    2234:	mov	r1, #0
    2238:	bl	0 <coda_set_definition_path_conditional>
    223c:	cmp	r0, #0
    2240:	beq	2270 <main+0x178>
    2244:	bl	0 <coda_get_errno>
    2248:	ldr	r0, [r0]
    224c:	bl	0 <coda_errno_to_string>
    2250:	ldr	r1, [pc, #1892]	; 29bc <main+0x8c4>
    2254:	ldr	ip, [r1]
    2258:	ldr	r1, [pc, #1880]	; 29b8 <main+0x8c0>
    225c:	mov	r2, r0
    2260:	mov	r0, ip
    2264:	bl	0 <fprintf>
    2268:	mov	r0, #1
    226c:	bl	0 <exit>
    2270:	cmp	sl, r6
    2274:	bge	2520 <main+0x428>
    2278:	ldr	r0, [r8, sl, lsl #2]
    227c:	ldr	r1, [pc, #1932]	; 2a10 <main+0x918>
    2280:	bl	0 <strcmp>
    2284:	cmp	r0, #0
    2288:	beq	250c <main+0x414>
    228c:	ldr	r0, [r8, sl, lsl #2]
    2290:	ldr	r1, [pc, #1848]	; 29d0 <main+0x8d8>
    2294:	bl	0 <strcmp>
    2298:	cmp	r0, #0
    229c:	beq	250c <main+0x414>
    22a0:	ldr	r0, [r8, sl, lsl #2]
    22a4:	ldr	r1, [pc, #1820]	; 29c8 <main+0x8d0>
    22a8:	bl	0 <strcmp>
    22ac:	cmp	r0, #0
    22b0:	beq	2504 <main+0x40c>
    22b4:	ldr	r0, [r8, sl, lsl #2]
    22b8:	ldr	r1, [pc, #1796]	; 29c4 <main+0x8cc>
    22bc:	bl	0 <strcmp>
    22c0:	cmp	r0, #0
    22c4:	beq	2504 <main+0x40c>
    22c8:	ldr	r0, [r8, sl, lsl #2]
    22cc:	ldr	r1, [pc, #1848]	; 2a0c <main+0x914>
    22d0:	bl	0 <strcmp>
    22d4:	cmp	r0, #0
    22d8:	beq	22f8 <main+0x200>
    22dc:	ldr	r0, [r8, sl, lsl #2]
    22e0:	ldr	r1, [pc, #1804]	; 29f4 <main+0x8fc>
    22e4:	bl	0 <strcmp>
    22e8:	cmp	r0, #0
    22ec:	moveq	ip, #1
    22f0:	movne	ip, #0
    22f4:	b	22fc <main+0x204>
    22f8:	mov	ip, #1
    22fc:	add	r1, sl, #1
    2300:	cmp	r1, r6
    2304:	movlt	r3, #1
    2308:	movge	r3, #0
    230c:	mov	r2, #0
    2310:	cmp	ip, #0
    2314:	movne	r2, r3
    2318:	moveq	r2, r2
    231c:	cmp	r2, #0
    2320:	beq	2348 <main+0x250>
    2324:	lsl	r3, sl, #2
    2328:	add	ip, r8, r3
    232c:	ldr	r0, [ip, #4]
    2330:	ldrb	r2, [r0]
    2334:	cmp	r2, #45	; 0x2d
    2338:	beq	2348 <main+0x250>
    233c:	mov	r5, r0
    2340:	mov	sl, r1
    2344:	b	2518 <main+0x420>
    2348:	ldr	r0, [r8, sl, lsl #2]
    234c:	ldr	r1, [pc, #1684]	; 29e8 <main+0x8f0>
    2350:	bl	0 <strcmp>
    2354:	cmp	r0, #0
    2358:	beq	2378 <main+0x280>
    235c:	ldr	r0, [r8, sl, lsl #2]
    2360:	ldr	r1, [pc, #1716]	; 2a1c <main+0x924>
    2364:	bl	0 <strcmp>
    2368:	cmp	r0, #0
    236c:	moveq	r0, #1
    2370:	movne	r0, #0
    2374:	b	237c <main+0x284>
    2378:	mov	r0, #1
    237c:	add	r1, sl, #2
    2380:	cmp	r1, r6
    2384:	movlt	ip, #1
    2388:	movge	ip, #0
    238c:	mov	r1, #0
    2390:	cmp	r0, #0
    2394:	movne	r0, ip
    2398:	moveq	r0, r1
    239c:	cmp	r0, #0
    23a0:	bne	23d4 <main+0x2dc>
    23a4:	ldr	ip, [r8, sl, lsl #2]
    23a8:	ldrb	r3, [ip]
    23ac:	cmp	r3, #45	; 0x2d
    23b0:	bne	2520 <main+0x428>
    23b4:	ldr	r1, [pc, #1536]	; 29bc <main+0x8c4>
    23b8:	ldr	r0, [r1]
    23bc:	ldr	r1, [pc, #1600]	; 2a04 <main+0x90c>
    23c0:	bl	0 <fprintf>
    23c4:	bl	0 <print_help>
    23c8:	mov	r0, #1
    23cc:	bl	0 <exit>
    23d0:	b	2518 <main+0x420>
    23d4:	lsl	ip, sl, #2
    23d8:	add	r1, r8, ip
    23dc:	ldr	r9, [r1, #4]
    23e0:	ldr	r4, [r1, #8]
    23e4:	ldr	ip, [pc, #1528]	; 29e4 <main+0x8ec>
    23e8:	ldr	r1, [ip]
    23ec:	asr	lr, r1, #31
    23f0:	add	lr, r1, lr, lsr #28
    23f4:	asr	r2, lr, #4
    23f8:	lsl	r0, r2, #4
    23fc:	sub	ip, r1, r0
    2400:	cmp	ip, #0
    2404:	bne	24b8 <main+0x3c0>
    2408:	ldr	r2, [pc, #1512]	; 29f8 <main+0x900>
    240c:	ldr	r0, [r2]
    2410:	lsl	r3, r1, #2
    2414:	add	r1, r3, #64	; 0x40
    2418:	bl	0 <realloc>
    241c:	cmp	r0, #0
    2420:	bne	2454 <main+0x35c>
    2424:	mvn	r0, #0
    2428:	ldr	r1, [pc, #1496]	; 2a08 <main+0x910>
    242c:	ldr	r2, [pc, #1456]	; 29e4 <main+0x8ec>
    2430:	ldr	ip, [r2]
    2434:	lsl	r2, ip, #2
    2438:	add	r2, r2, #64	; 0x40
    243c:	ldr	r3, [pc, #1504]	; 2a24 <main+0x92c>
    2440:	mov	r4, #198	; 0xc6
    2444:	str	r4, [sp]
    2448:	bl	0 <coda_set_error>
    244c:	mvn	ip, #0
    2450:	b	24ec <main+0x3f4>
    2454:	ldr	r1, [pc, #1436]	; 29f8 <main+0x900>
    2458:	str	r0, [r1]
    245c:	ldr	r3, [pc, #1468]	; 2a20 <main+0x928>
    2460:	ldr	r0, [r3]
    2464:	ldr	r3, [pc, #1400]	; 29e4 <main+0x8ec>
    2468:	ldr	r1, [r3]
    246c:	lsl	r1, r1, #2
    2470:	add	r1, r1, #64	; 0x40
    2474:	bl	0 <realloc>
    2478:	cmp	r0, #0
    247c:	bne	24b0 <main+0x3b8>
    2480:	mvn	r0, #0
    2484:	ldr	r1, [pc, #1404]	; 2a08 <main+0x910>
    2488:	ldr	ip, [pc, #1364]	; 29e4 <main+0x8ec>
    248c:	ldr	r2, [ip]
    2490:	lsl	r2, r2, #2
    2494:	add	r2, r2, #64	; 0x40
    2498:	ldr	r3, [pc, #1412]	; 2a24 <main+0x92c>
    249c:	mov	r4, #207	; 0xcf
    24a0:	str	r4, [sp]
    24a4:	bl	0 <coda_set_error>
    24a8:	mvn	ip, #0
    24ac:	b	24ec <main+0x3f4>
    24b0:	ldr	r2, [pc, #1384]	; 2a20 <main+0x928>
    24b4:	str	r0, [r2]
    24b8:	ldr	r2, [pc, #1336]	; 29f8 <main+0x900>
    24bc:	ldr	r1, [r2]
    24c0:	ldr	r0, [pc, #1308]	; 29e4 <main+0x8ec>
    24c4:	ldr	r2, [r0]
    24c8:	str	r9, [r1, r2, lsl #2]
    24cc:	ldr	r2, [pc, #1356]	; 2a20 <main+0x928>
    24d0:	ldr	r1, [r2]
    24d4:	ldr	r2, [r0]
    24d8:	str	r4, [r1, r2, lsl #2]
    24dc:	ldr	r1, [r0]
    24e0:	add	r2, r1, #1
    24e4:	str	r2, [r0]
    24e8:	mov	ip, #0
    24ec:	cmp	ip, #0
    24f0:	beq	24fc <main+0x404>
    24f4:	mvn	r0, #0
    24f8:	b	2990 <main+0x898>
    24fc:	add	sl, sl, #2
    2500:	b	2518 <main+0x420>
    2504:	mov	r7, #0
    2508:	b	2518 <main+0x420>
    250c:	ldr	r1, [pc, #1244]	; 29f0 <main+0x8f8>
    2510:	mov	r3, #1
    2514:	str	r3, [r1]
    2518:	add	sl, sl, #1
    251c:	b	2270 <main+0x178>
    2520:	sub	r2, r6, #2
    2524:	cmp	sl, r2
    2528:	beq	2548 <main+0x450>
    252c:	ldr	r2, [pc, #1160]	; 29bc <main+0x8c4>
    2530:	ldr	r0, [r2]
    2534:	ldr	r1, [pc, #1224]	; 2a04 <main+0x90c>
    2538:	bl	0 <fprintf>
    253c:	bl	0 <print_help>
    2540:	mov	r0, #1
    2544:	bl	0 <exit>
    2548:	bl	0 <coda_init>
    254c:	cmp	r0, #0
    2550:	beq	257c <main+0x484>
    2554:	bl	0 <coda_get_errno>
    2558:	ldr	r0, [r0]
    255c:	bl	0 <coda_errno_to_string>
    2560:	mov	r2, r0
    2564:	ldr	r1, [pc, #1104]	; 29bc <main+0x8c4>
    2568:	ldr	r0, [r1]
    256c:	ldr	r1, [pc, #1092]	; 29b8 <main+0x8c0>
    2570:	bl	0 <fprintf>
    2574:	mov	r0, #1
    2578:	bl	0 <exit>
    257c:	mov	r0, #0
    2580:	bl	0 <coda_set_option_perform_boundary_checks>
    2584:	mov	r0, r7
    2588:	bl	0 <coda_set_option_perform_conversions>
    258c:	lsl	r3, r6, #2
    2590:	add	r3, r8, r3
    2594:	sub	lr, r3, #4096	; 0x1000
    2598:	ldr	r7, [lr, #4088]	; 0xff8
    259c:	sub	lr, r3, #4096	; 0x1000
    25a0:	ldr	r6, [lr, #4092]	; 0xffc
    25a4:	add	r1, sp, #48	; 0x30
    25a8:	mov	r0, r7
    25ac:	bl	0 <coda_open>
    25b0:	mov	r4, r0
    25b4:	cmp	r4, #0
    25b8:	beq	25ec <main+0x4f4>
    25bc:	bl	0 <coda_get_errno>
    25c0:	ldr	r1, [r0]
    25c4:	cmn	r1, #21
    25c8:	bne	25ec <main+0x4f4>
    25cc:	mov	r0, #0
    25d0:	bl	0 <coda_set_option_use_mmap>
    25d4:	add	r1, sp, #48	; 0x30
    25d8:	mov	r0, r7
    25dc:	bl	0 <coda_open>
    25e0:	mov	r4, r0
    25e4:	mov	r0, #1
    25e8:	bl	0 <coda_set_option_use_mmap>
    25ec:	cmp	r4, #0
    25f0:	beq	262c <main+0x534>
    25f4:	bl	0 <coda_get_errno>
    25f8:	ldr	r0, [r0]
    25fc:	bl	0 <coda_errno_to_string>
    2600:	ldr	r2, [pc, #948]	; 29bc <main+0x8c4>
    2604:	ldr	r3, [r2]
    2608:	ldr	r1, [pc, #976]	; 29e0 <main+0x8e8>
    260c:	ldr	r2, [pc, #952]	; 29cc <main+0x8d4>
    2610:	ldr	r2, [r2]
    2614:	mov	ip, r0
    2618:	mov	r0, r3
    261c:	mov	r3, ip
    2620:	bl	0 <fprintf>
    2624:	mvn	r4, #0
    2628:	b	2938 <main+0x840>
    262c:	ldr	r0, [sp, #48]	; 0x30
    2630:	ldr	r3, [pc, #940]	; 29e4 <main+0x8ec>
    2634:	ldr	r1, [r3]
    2638:	cmp	r1, #0
    263c:	bne	2648 <main+0x550>
    2640:	mov	r2, #0
    2644:	b	26dc <main+0x5e4>
    2648:	add	r1, sp, #72	; 0x48
    264c:	add	r1, r1, #1024	; 0x400
    2650:	bl	0 <coda_get_product_root_type>
    2654:	cmp	r0, #0
    2658:	beq	2664 <main+0x56c>
    265c:	mvn	r2, #0
    2660:	b	26dc <main+0x5e4>
    2664:	ldr	r0, [sp, #1096]	; 0x448
    2668:	bl	0 <coda_tree_node_new>
    266c:	ldr	r1, [pc, #908]	; 2a00 <main+0x908>
    2670:	str	r0, [r1]
    2674:	cmp	r0, #0
    2678:	bne	2684 <main+0x58c>
    267c:	mvn	r2, #0
    2680:	b	26dc <main+0x5e4>
    2684:	mov	r4, #0
    2688:	ldr	ip, [pc, #852]	; 29e4 <main+0x8ec>
    268c:	ldr	r0, [ip]
    2690:	cmp	r4, r0
    2694:	bge	26d8 <main+0x5e0>
    2698:	ldr	r2, [pc, #864]	; 2a00 <main+0x908>
    269c:	ldr	r0, [r2]
    26a0:	ldr	r3, [pc, #848]	; 29f8 <main+0x900>
    26a4:	ldr	r1, [r3]
    26a8:	ldr	r1, [r1, r4, lsl #2]
    26ac:	ldr	r3, [pc, #876]	; 2a20 <main+0x928>
    26b0:	ldr	ip, [r3]
    26b4:	ldr	r2, [ip, r4, lsl #2]
    26b8:	mov	r3, #0
    26bc:	bl	0 <coda_tree_node_add_item_for_path>
    26c0:	cmp	r0, #0
    26c4:	beq	26d0 <main+0x5d8>
    26c8:	mvn	r2, #0
    26cc:	b	26dc <main+0x5e4>
    26d0:	add	r4, r4, #1
    26d4:	b	2688 <main+0x590>
    26d8:	mov	r2, #0
    26dc:	cmp	r2, #0
    26e0:	beq	271c <main+0x624>
    26e4:	bl	0 <coda_get_errno>
    26e8:	ldr	r0, [r0]
    26ec:	bl	0 <coda_errno_to_string>
    26f0:	ldr	r1, [pc, #708]	; 29bc <main+0x8c4>
    26f4:	ldr	r3, [r1]
    26f8:	ldr	r1, [pc, #736]	; 29e0 <main+0x8e8>
    26fc:	ldr	r2, [pc, #712]	; 29cc <main+0x8d4>
    2700:	ldr	r2, [r2]
    2704:	mov	ip, r0
    2708:	mov	r0, r3
    270c:	mov	r3, ip
    2710:	bl	0 <fprintf>
    2714:	mvn	r4, #0
    2718:	b	2938 <main+0x840>
    271c:	add	r1, sp, #52	; 0x34
    2720:	mov	r0, r6
    2724:	bl	0 <coda_open>
    2728:	mov	r4, r0
    272c:	cmp	r4, #0
    2730:	beq	2764 <main+0x66c>
    2734:	bl	0 <coda_get_errno>
    2738:	ldr	r3, [r0]
    273c:	cmn	r3, #21
    2740:	bne	2764 <main+0x66c>
    2744:	mov	r0, #0
    2748:	bl	0 <coda_set_option_use_mmap>
    274c:	add	r1, sp, #52	; 0x34
    2750:	mov	r0, r6
    2754:	bl	0 <coda_open>
    2758:	mov	r4, r0
    275c:	mov	r0, #1
    2760:	bl	0 <coda_set_option_use_mmap>
    2764:	cmp	r4, #0
    2768:	beq	27a8 <main+0x6b0>
    276c:	bl	0 <coda_get_errno>
    2770:	ldr	r0, [r0]
    2774:	bl	0 <coda_errno_to_string>
    2778:	ldr	ip, [pc, #572]	; 29bc <main+0x8c4>
    277c:	ldr	ip, [ip]
    2780:	ldr	r1, [pc, #600]	; 29e0 <main+0x8e8>
    2784:	ldr	r2, [pc, #668]	; 2a28 <main+0x930>
    2788:	ldr	r2, [r2]
    278c:	mov	r3, r0
    2790:	mov	r0, ip
    2794:	bl	0 <fprintf>
    2798:	ldr	r0, [sp, #48]	; 0x30
    279c:	bl	0 <coda_close>
    27a0:	mvn	r4, #0
    27a4:	b	2938 <main+0x840>
    27a8:	add	r0, sp, #56	; 0x38
    27ac:	ldr	r1, [sp, #48]	; 0x30
    27b0:	bl	0 <coda_cursor_set_product>
    27b4:	cmp	r0, #0
    27b8:	beq	2804 <main+0x70c>
    27bc:	bl	0 <coda_get_errno>
    27c0:	ldr	r0, [r0]
    27c4:	bl	0 <coda_errno_to_string>
    27c8:	ldr	r2, [pc, #492]	; 29bc <main+0x8c4>
    27cc:	ldr	r3, [r2]
    27d0:	ldr	r1, [pc, #520]	; 29e0 <main+0x8e8>
    27d4:	ldr	r2, [pc, #496]	; 29cc <main+0x8d4>
    27d8:	ldr	r2, [r2]
    27dc:	mov	ip, r0
    27e0:	mov	r0, r3
    27e4:	mov	r3, ip
    27e8:	bl	0 <fprintf>
    27ec:	ldr	r0, [sp, #48]	; 0x30
    27f0:	bl	0 <coda_close>
    27f4:	ldr	r0, [sp, #52]	; 0x34
    27f8:	bl	0 <coda_close>
    27fc:	mvn	r4, #0
    2800:	b	2938 <main+0x840>
    2804:	add	r0, sp, #576	; 0x240
    2808:	ldr	r1, [sp, #52]	; 0x34
    280c:	bl	0 <coda_cursor_set_product>
    2810:	cmp	r0, #0
    2814:	beq	2858 <main+0x760>
    2818:	bl	0 <coda_get_errno>
    281c:	ldr	r0, [r0]
    2820:	bl	0 <coda_errno_to_string>
    2824:	mov	r3, r0
    2828:	ldr	ip, [pc, #396]	; 29bc <main+0x8c4>
    282c:	ldr	r0, [ip]
    2830:	ldr	r1, [pc, #424]	; 29e0 <main+0x8e8>
    2834:	ldr	r2, [pc, #492]	; 2a28 <main+0x930>
    2838:	ldr	r2, [r2]
    283c:	bl	0 <fprintf>
    2840:	ldr	r0, [sp, #48]	; 0x30
    2844:	bl	0 <coda_close>
    2848:	ldr	r0, [sp, #52]	; 0x34
    284c:	bl	0 <coda_close>
    2850:	mvn	r4, #0
    2854:	b	2938 <main+0x840>
    2858:	cmp	r5, #0
    285c:	beq	2918 <main+0x820>
    2860:	add	r0, sp, #56	; 0x38
    2864:	mov	r1, r5
    2868:	bl	0 <coda_cursor_goto>
    286c:	cmp	r0, #0
    2870:	beq	28bc <main+0x7c4>
    2874:	bl	0 <coda_get_errno>
    2878:	ldr	r0, [r0]
    287c:	bl	0 <coda_errno_to_string>
    2880:	ldr	r1, [pc, #308]	; 29bc <main+0x8c4>
    2884:	ldr	r3, [r1]
    2888:	ldr	r1, [pc, #336]	; 29e0 <main+0x8e8>
    288c:	ldr	ip, [pc, #312]	; 29cc <main+0x8d4>
    2890:	ldr	r2, [ip]
    2894:	mov	ip, r0
    2898:	mov	r0, r3
    289c:	mov	r3, ip
    28a0:	bl	0 <fprintf>
    28a4:	ldr	r0, [sp, #48]	; 0x30
    28a8:	bl	0 <coda_close>
    28ac:	ldr	r0, [sp, #52]	; 0x34
    28b0:	bl	0 <coda_close>
    28b4:	mvn	r4, #0
    28b8:	b	2938 <main+0x840>
    28bc:	add	r0, sp, #576	; 0x240
    28c0:	mov	r1, r5
    28c4:	bl	0 <coda_cursor_goto>
    28c8:	cmp	r0, #0
    28cc:	beq	2918 <main+0x820>
    28d0:	bl	0 <coda_get_errno>
    28d4:	ldr	r0, [r0]
    28d8:	bl	0 <coda_errno_to_string>
    28dc:	ldr	r1, [pc, #216]	; 29bc <main+0x8c4>
    28e0:	ldr	r3, [r1]
    28e4:	ldr	r1, [pc, #244]	; 29e0 <main+0x8e8>
    28e8:	ldr	ip, [pc, #312]	; 2a28 <main+0x930>
    28ec:	ldr	r2, [ip]
    28f0:	mov	ip, r0
    28f4:	mov	r0, r3
    28f8:	mov	r3, ip
    28fc:	bl	0 <fprintf>
    2900:	ldr	r0, [sp, #48]	; 0x30
    2904:	bl	0 <coda_close>
    2908:	ldr	r0, [sp, #52]	; 0x34
    290c:	bl	0 <coda_close>
    2910:	mvn	r4, #0
    2914:	b	2938 <main+0x840>
    2918:	add	r0, sp, #56	; 0x38
    291c:	add	r1, sp, #576	; 0x240
    2920:	bl	38c <compare_data>
    2924:	mov	r4, r0
    2928:	ldr	r0, [sp, #48]	; 0x30
    292c:	bl	0 <coda_close>
    2930:	ldr	r0, [sp, #52]	; 0x34
    2934:	bl	0 <coda_close>
    2938:	bl	0 <coda_done>
    293c:	ldr	r2, [pc, #180]	; 29f8 <main+0x900>
    2940:	ldr	r0, [r2]
    2944:	cmp	r0, #0
    2948:	beq	2950 <main+0x858>
    294c:	bl	0 <free>
    2950:	ldr	r3, [pc, #200]	; 2a20 <main+0x928>
    2954:	ldr	r0, [r3]
    2958:	cmp	r0, #0
    295c:	beq	2964 <main+0x86c>
    2960:	bl	0 <free>
    2964:	ldr	r0, [pc, #148]	; 2a00 <main+0x908>
    2968:	ldr	r0, [r0]
    296c:	cmp	r0, #0
    2970:	beq	297c <main+0x884>
    2974:	mov	r1, #0
    2978:	bl	0 <coda_tree_node_delete>
    297c:	cmp	r4, #0
    2980:	beq	298c <main+0x894>
    2984:	mov	r0, #1
    2988:	bl	0 <exit>
    298c:	mov	r0, #0
    2990:	ldr	r4, [sp, #16]
    2994:	ldr	r5, [sp, #20]
    2998:	ldr	r6, [sp, #24]
    299c:	ldr	r7, [sp, #28]
    29a0:	ldr	r8, [sp, #32]
    29a4:	ldr	r9, [sp, #36]	; 0x24
    29a8:	ldr	sl, [sp, #40]	; 0x28
    29ac:	ldr	lr, [sp, #8]
    29b0:	add	sp, sp, #1104	; 0x450
    29b4:	bx	lr
    29b8:	.word	0x00000541
    29bc:	.word	0x00000000
    29c0:	.word	0x0000037c
    29c4:	.word	0x0000016f
    29c8:	.word	0x0000014d
    29cc:	.word	0x00000000
    29d0:	.word	0x00000829
    29d4:	.word	0x000001d8
    29d8:	.word	0x0000027c
    29dc:	.word	0x00000666
    29e0:	.word	0x00000443
    29e4:	.word	0x00000000
    29e8:	.word	0x0000020f
    29ec:	.word	0x00000133
    29f0:	.word	0x00000000
    29f4:	.word	0x00000422
    29f8:	.word	0x00000004
    29fc:	.word	0x00000736
    2a00:	.word	0x0000000c
    2a04:	.word	0x00000429
    2a08:	.word	0x0000095b
    2a0c:	.word	0x00000955
    2a10:	.word	0x00000379
    2a14:	.word	0x000007c0
    2a18:	.word	0x0000067f
    2a1c:	.word	0x000006ae
    2a20:	.word	0x00000008
    2a24:	.word	0x00000609
    2a28:	.word	0x00000004
    2a2c:	.word	0x00000188
