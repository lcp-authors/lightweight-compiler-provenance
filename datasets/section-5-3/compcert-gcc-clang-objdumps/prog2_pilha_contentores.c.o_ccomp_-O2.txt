
../repos/prog2/CMakeFiles/5.1.dir/Aula05_Filas_e_Pilhas/1/pilha_contentores.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <pilha_novo_elemento>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	str	r5, [sp, #12]
  18:	mov	r5, r0
  1c:	mov	r0, #8
  20:	bl	0 <malloc>
  24:	mov	r4, r0
  28:	cmp	r4, #0
  2c:	bne	38 <pilha_novo_elemento+0x38>
  30:	mov	r0, #0
  34:	b	70 <pilha_novo_elemento+0x70>
  38:	ldr	r0, [r5]
  3c:	vldr	s0, [r5, #4]
  40:	vmov.f32	s0, s0
  44:	bl	0 <contentor_novo>
  48:	str	r0, [r4]
  4c:	cmp	r0, #0
  50:	bne	64 <pilha_novo_elemento+0x64>
  54:	mov	r0, r4
  58:	bl	0 <free>
  5c:	mov	r0, #0
  60:	b	70 <pilha_novo_elemento+0x70>
  64:	mov	r1, #0
  68:	str	r1, [r4, #4]
  6c:	mov	r0, r4
  70:	ldr	r4, [sp, #8]
  74:	ldr	r5, [sp, #12]
  78:	ldr	lr, [sp, #4]
  7c:	add	sp, sp, #16
  80:	bx	lr

00000084 <pilha_nova>:
  84:	mov	ip, sp
  88:	sub	sp, sp, #8
  8c:	str	ip, [sp]
  90:	str	lr, [sp, #4]
  94:	mov	r0, #8
  98:	bl	0 <malloc>
  9c:	cmp	r0, #0
  a0:	bne	ac <pilha_nova+0x28>
  a4:	mov	r0, #0
  a8:	b	bc <pilha_nova+0x38>
  ac:	mov	r1, #0
  b0:	str	r1, [r0]
  b4:	mov	r1, #0
  b8:	str	r1, [r0, #4]
  bc:	ldr	lr, [sp, #4]
  c0:	add	sp, sp, #8
  c4:	bx	lr

000000c8 <pilha_apaga>:
  c8:	mov	ip, sp
  cc:	sub	sp, sp, #16
  d0:	str	ip, [sp]
  d4:	str	lr, [sp, #4]
  d8:	str	r4, [sp, #8]
  dc:	str	r5, [sp, #12]
  e0:	mov	r5, r0
  e4:	cmp	r5, #0
  e8:	beq	12c <pilha_apaga+0x64>
  ec:	ldr	r4, [r5]
  f0:	cmp	r4, #0
  f4:	beq	114 <pilha_apaga+0x4c>
  f8:	ldr	r0, [r4, #4]
  fc:	str	r0, [r5]
 100:	ldr	r0, [r4]
 104:	bl	0 <contentor_apaga>
 108:	mov	r0, r4
 10c:	bl	0 <free>
 110:	b	ec <pilha_apaga+0x24>
 114:	mov	r0, r5
 118:	ldr	r4, [sp, #8]
 11c:	ldr	r5, [sp, #12]
 120:	ldr	lr, [sp, #4]
 124:	add	sp, sp, #16
 128:	b	0 <free>
 12c:	ldr	r4, [sp, #8]
 130:	ldr	r5, [sp, #12]
 134:	ldr	lr, [sp, #4]
 138:	add	sp, sp, #16
 13c:	bx	lr

00000140 <pilha_tamanho>:
 140:	mov	ip, sp
 144:	sub	sp, sp, #8
 148:	str	ip, [sp]
 14c:	str	lr, [sp, #4]
 150:	cmp	r0, #0
 154:	bne	160 <pilha_tamanho+0x20>
 158:	mvn	r0, #0
 15c:	b	164 <pilha_tamanho+0x24>
 160:	ldr	r0, [r0, #4]
 164:	ldr	lr, [sp, #4]
 168:	add	sp, sp, #8
 16c:	bx	lr

00000170 <pilha_top>:
 170:	mov	ip, sp
 174:	sub	sp, sp, #8
 178:	str	ip, [sp]
 17c:	str	lr, [sp, #4]
 180:	cmp	r0, #0
 184:	beq	1a0 <pilha_top+0x30>
 188:	ldr	r1, [r0, #4]
 18c:	cmp	r1, #0
 190:	beq	1a0 <pilha_top+0x30>
 194:	ldr	r0, [r0]
 198:	ldr	r0, [r0]
 19c:	b	1a4 <pilha_top+0x34>
 1a0:	mov	r0, #0
 1a4:	ldr	lr, [sp, #4]
 1a8:	add	sp, sp, #8
 1ac:	bx	lr

000001b0 <pilha_push>:
 1b0:	mov	ip, sp
 1b4:	sub	sp, sp, #16
 1b8:	str	ip, [sp]
 1bc:	str	lr, [sp, #4]
 1c0:	str	r4, [sp, #8]
 1c4:	mov	r4, r0
 1c8:	mov	r0, r1
 1cc:	cmp	r4, #0
 1d0:	beq	208 <pilha_push+0x58>
 1d4:	bl	0 <pilha_novo_elemento>
 1d8:	cmp	r0, #0
 1dc:	beq	208 <pilha_push+0x58>
 1e0:	ldr	r2, [r4, #4]
 1e4:	add	r1, r2, #1
 1e8:	str	r1, [r4, #4]
 1ec:	ldr	r1, [r4]
 1f0:	cmp	r1, #0
 1f4:	bne	200 <pilha_push+0x50>
 1f8:	str	r0, [r4]
 1fc:	b	208 <pilha_push+0x58>
 200:	str	r1, [r0, #4]
 204:	str	r0, [r4]
 208:	ldr	r4, [sp, #8]
 20c:	ldr	lr, [sp, #4]
 210:	add	sp, sp, #16
 214:	bx	lr

00000218 <pilha_pop>:
 218:	mov	ip, sp
 21c:	sub	sp, sp, #16
 220:	str	ip, [sp]
 224:	str	lr, [sp, #4]
 228:	str	r4, [sp, #8]
 22c:	cmp	r0, #0
 230:	beq	274 <pilha_pop+0x5c>
 234:	ldr	r1, [r0, #4]
 238:	cmp	r1, #0
 23c:	beq	274 <pilha_pop+0x5c>
 240:	ldr	r4, [r0]
 244:	ldr	r3, [r4, #4]
 248:	str	r3, [r0]
 24c:	ldr	r2, [r0, #4]
 250:	sub	r1, r2, #1
 254:	str	r1, [r0, #4]
 258:	ldr	r0, [r4]
 25c:	bl	0 <contentor_apaga>
 260:	mov	r0, r4
 264:	ldr	r4, [sp, #8]
 268:	ldr	lr, [sp, #4]
 26c:	add	sp, sp, #16
 270:	b	0 <free>
 274:	ldr	r4, [sp, #8]
 278:	ldr	lr, [sp, #4]
 27c:	add	sp, sp, #16
 280:	bx	lr
