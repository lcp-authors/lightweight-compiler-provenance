
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-product.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <get_format>:
       0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
       4:	mov	r3, r0
       8:	sub	sp, sp, #612	; 0x264
       c:	mov	r5, r1
      10:	add	r0, sp, #88	; 0x58
      14:	mov	r1, r3
      18:	ldrd	r6, [r3, #8]
      1c:	bl	0 <coda_cursor_set_product>
      20:	subs	r4, r0, #0
      24:	bne	32c <get_format+0x32c>
      28:	cmp	r6, #4
      2c:	sbcs	r3, r7, #0
      30:	mov	r3, #1
      34:	str	r3, [r5]
      38:	bge	48 <get_format+0x48>
      3c:	mov	r0, r4
      40:	add	sp, sp, #612	; 0x264
      44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
      48:	mov	r2, #4
      4c:	mov	r3, #0
      50:	add	r1, sp, #8
      54:	strd	r2, [sp]
      58:	add	r0, sp, #88	; 0x58
      5c:	mov	r2, #0
      60:	mov	r3, #0
      64:	bl	0 <coda_cursor_read_bytes>
      68:	subs	r8, r0, #0
      6c:	bne	32c <get_format+0x32c>
      70:	mov	r2, #3
      74:	ldr	r1, [pc, #956]	; 438 <get_format+0x438>
      78:	add	r0, sp, #8
      7c:	bl	0 <memcmp>
      80:	cmp	r0, #0
      84:	bne	a4 <get_format+0xa4>
      88:	ldrb	r3, [sp, #11]
      8c:	sub	r2, r3, #1
      90:	cmp	r3, #5
      94:	cmpne	r2, #1
      98:	movls	r3, #6
      9c:	strls	r3, [r5]
      a0:	bls	3c <get_format+0x3c>
      a4:	mov	r2, #4
      a8:	ldr	r1, [pc, #908]	; 43c <get_format+0x43c>
      ac:	add	r0, sp, #8
      b0:	bl	0 <memcmp>
      b4:	cmp	r0, #0
      b8:	beq	e0 <get_format+0xe0>
      bc:	cmp	r6, #8
      c0:	sbcs	r3, r7, #0
      c4:	bge	f8 <get_format+0xf8>
      c8:	mov	r3, #1
      cc:	mov	r4, r8
      d0:	mov	r0, r4
      d4:	str	r3, [r5]
      d8:	add	sp, sp, #612	; 0x264
      dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
      e0:	mov	r3, #3
      e4:	mov	r4, r0
      e8:	mov	r0, r4
      ec:	str	r3, [r5]
      f0:	add	sp, sp, #612	; 0x264
      f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
      f8:	mov	r0, #4
      fc:	mov	r1, #0
     100:	mov	r2, r0
     104:	strd	r0, [sp]
     108:	mov	r3, r1
     10c:	add	r0, sp, #88	; 0x58
     110:	add	r1, sp, #12
     114:	bl	0 <coda_cursor_read_bytes>
     118:	subs	r8, r0, #0
     11c:	bne	32c <get_format+0x32c>
     120:	mov	r2, #8
     124:	ldr	r1, [pc, #788]	; 440 <get_format+0x440>
     128:	add	r0, sp, r2
     12c:	bl	0 <memcmp>
     130:	cmp	r0, #0
     134:	beq	334 <get_format+0x334>
     138:	mov	r2, #8
     13c:	ldr	r1, [pc, #768]	; 444 <get_format+0x444>
     140:	add	r0, sp, r2
     144:	bl	0 <memcmp>
     148:	cmp	r0, #0
     14c:	beq	344 <get_format+0x344>
     150:	mov	r2, #8
     154:	ldr	r1, [pc, #748]	; 448 <get_format+0x448>
     158:	add	r0, sp, r2
     15c:	bl	0 <memcmp>
     160:	cmp	r0, #0
     164:	beq	344 <get_format+0x344>
     168:	mov	r2, #8
     16c:	ldr	r1, [pc, #728]	; 44c <get_format+0x44c>
     170:	add	r0, sp, r2
     174:	bl	0 <memcmp>
     178:	cmp	r0, #0
     17c:	beq	344 <get_format+0x344>
     180:	mov	r2, #8
     184:	ldr	r1, [pc, #708]	; 450 <get_format+0x450>
     188:	add	r0, sp, r2
     18c:	bl	0 <memcmp>
     190:	cmp	r0, #0
     194:	beq	344 <get_format+0x344>
     198:	mov	r2, #8
     19c:	ldr	r1, [pc, #688]	; 454 <get_format+0x454>
     1a0:	add	r0, sp, r2
     1a4:	bl	0 <memcmp>
     1a8:	cmp	r0, #0
     1ac:	beq	344 <get_format+0x344>
     1b0:	mov	r2, #4
     1b4:	ldr	r1, [pc, #668]	; 458 <get_format+0x458>
     1b8:	add	r0, sp, #8
     1bc:	bl	0 <memcmp>
     1c0:	cmp	r0, #0
     1c4:	bne	1e4 <get_format+0x1e4>
     1c8:	ldrb	r3, [sp, #15]
     1cc:	sub	r3, r3, #1
     1d0:	cmp	r3, #1
     1d4:	movls	r3, #7
     1d8:	movls	r4, r0
     1dc:	strls	r3, [r5]
     1e0:	bls	3c <get_format+0x3c>
     1e4:	mov	r2, #5
     1e8:	ldr	r1, [pc, #620]	; 45c <get_format+0x45c>
     1ec:	add	r0, sp, #8
     1f0:	bl	0 <memcmp>
     1f4:	cmp	r0, #0
     1f8:	beq	354 <get_format+0x354>
     1fc:	mov	r2, #8
     200:	ldr	r1, [pc, #600]	; 460 <get_format+0x460>
     204:	add	r0, sp, r2
     208:	bl	0 <memcmp>
     20c:	cmp	r0, #0
     210:	beq	354 <get_format+0x354>
     214:	cmp	r6, #40	; 0x28
     218:	sbcs	r3, r7, #0
     21c:	blt	3c <get_format+0x3c>
     220:	mov	r0, #32
     224:	mov	r1, #0
     228:	mov	r2, #8
     22c:	strd	r0, [sp]
     230:	mov	r3, #0
     234:	add	r1, sp, #16
     238:	add	r0, sp, #88	; 0x58
     23c:	bl	0 <coda_cursor_read_bytes>
     240:	cmp	r0, #0
     244:	bne	32c <get_format+0x32c>
     248:	cmp	r6, #60	; 0x3c
     24c:	sbcs	r3, r7, #0
     250:	blt	3c <get_format+0x3c>
     254:	ldrb	r3, [sp, #8]
     258:	cmp	r3, #35	; 0x23
     25c:	beq	374 <get_format+0x374>
     260:	cmp	r6, #80	; 0x50
     264:	sbcs	r3, r7, #0
     268:	blt	3c <get_format+0x3c>
     26c:	mov	r0, #20
     270:	mov	r1, #0
     274:	mov	r2, #60	; 0x3c
     278:	strd	r0, [sp]
     27c:	mov	r3, #0
     280:	add	r1, sp, #8
     284:	add	r0, sp, #88	; 0x58
     288:	bl	0 <coda_cursor_read_bytes>
     28c:	cmp	r0, #0
     290:	bne	32c <get_format+0x32c>
     294:	mov	r2, #20
     298:	ldr	r1, [pc, #452]	; 464 <get_format+0x464>
     29c:	add	r0, sp, #8
     2a0:	bl	0 <memcmp>
     2a4:	cmp	r0, #0
     2a8:	beq	364 <get_format+0x364>
     2ac:	mov	r2, #520	; 0x208
     2b0:	mov	r3, #0
     2b4:	cmp	r2, r6
     2b8:	sbcs	r3, r3, r7
     2bc:	movlt	sl, #512	; 0x200
     2c0:	movlt	fp, #0
     2c4:	movlt	r9, #8
     2c8:	blt	2f8 <get_format+0x2f8>
     2cc:	b	3c <get_format+0x3c>
     2d0:	bl	0 <memcmp>
     2d4:	cmp	r0, #0
     2d8:	beq	334 <get_format+0x334>
     2dc:	adds	sl, sl, sl
     2e0:	adc	fp, fp, fp
     2e4:	adds	r2, sl, #8
     2e8:	adc	r3, fp, #0
     2ec:	cmp	r2, r6
     2f0:	sbcs	r3, r3, r7
     2f4:	bge	3c <get_format+0x3c>
     2f8:	mov	r2, #8
     2fc:	mov	r3, #0
     300:	add	r1, sp, #8
     304:	strd	r2, [sp]
     308:	add	r0, sp, #88	; 0x58
     30c:	mov	r2, sl
     310:	mov	r3, fp
     314:	bl	0 <coda_cursor_read_bytes>
     318:	mov	r2, r9
     31c:	ldr	r1, [pc, #284]	; 440 <get_format+0x440>
     320:	cmp	r0, #0
     324:	add	r0, sp, #8
     328:	beq	2d0 <get_format+0x2d0>
     32c:	mvn	r4, #0
     330:	b	3c <get_format+0x3c>
     334:	mov	r3, #4
     338:	mov	r4, r8
     33c:	str	r3, [r5]
     340:	b	3c <get_format+0x3c>
     344:	mov	r3, #5
     348:	mov	r4, r8
     34c:	str	r3, [r5]
     350:	b	3c <get_format+0x3c>
     354:	mov	r3, #2
     358:	mov	r4, r8
     35c:	str	r3, [r5]
     360:	b	3c <get_format+0x3c>
     364:	mov	r3, #8
     368:	mov	r4, r0
     36c:	str	r3, [r5]
     370:	b	3c <get_format+0x3c>
     374:	ldrb	r3, [sp, #9]
     378:	sub	r3, r3, #97	; 0x61
     37c:	cmp	r3, #2
     380:	bhi	260 <get_format+0x260>
     384:	ldrb	r3, [sp, #10]
     388:	cmp	r3, #86	; 0x56
     38c:	cmpne	r3, #80	; 0x50
     390:	bne	260 <get_format+0x260>
     394:	ldrb	r3, [sp, #11]
     398:	sub	r3, r3, #48	; 0x30
     39c:	cmp	r3, #9
     3a0:	bhi	260 <get_format+0x260>
     3a4:	ldrb	r3, [sp, #12]
     3a8:	sub	r3, r3, #48	; 0x30
     3ac:	cmp	r3, #9
     3b0:	bhi	260 <get_format+0x260>
     3b4:	ldrb	r3, [sp, #13]
     3b8:	sub	r3, r3, #48	; 0x30
     3bc:	cmp	r3, #9
     3c0:	bhi	260 <get_format+0x260>
     3c4:	ldrb	r3, [sp, #14]
     3c8:	sub	r3, r3, #48	; 0x30
     3cc:	cmp	r3, #9
     3d0:	bhi	260 <get_format+0x260>
     3d4:	ldrb	r3, [sp, #15]
     3d8:	cmp	r3, #32
     3dc:	bne	260 <get_format+0x260>
     3e0:	ldrb	r3, [sp, #18]
     3e4:	cmp	r3, #32
     3e8:	bne	260 <get_format+0x260>
     3ec:	ldrb	r3, [sp, #21]
     3f0:	cmp	r3, #32
     3f4:	bne	260 <get_format+0x260>
     3f8:	ldrb	r3, [sp, #24]
     3fc:	cmp	r3, #32
     400:	bne	260 <get_format+0x260>
     404:	ldrb	r3, [sp, #27]
     408:	cmp	r3, #32
     40c:	bne	260 <get_format+0x260>
     410:	ldrb	r3, [sp, #39]	; 0x27
     414:	cmp	r3, #32
     418:	bne	260 <get_format+0x260>
     41c:	ldrb	r3, [sp, #47]	; 0x2f
     420:	cmp	r3, #32
     424:	moveq	r3, #9
     428:	moveq	r4, r0
     42c:	streq	r3, [r5]
     430:	bne	260 <get_format+0x260>
     434:	b	3c <get_format+0x3c>
     438:	.word	0x00000000
     43c:	.word	0x00000004
     440:	.word	0x0000000c
     444:	.word	0x00000000
     448:	.word	0x0000000c
     44c:	.word	0x00000018
     450:	.word	0x00000024
     454:	.word	0x00000030
     458:	.word	0x00000018
     45c:	.word	0x00000020
     460:	.word	0x00000028
     464:	.word	0x00000034

00000468 <set_definition>:
     468:	push	{r4, r5, lr}
     46c:	subs	r4, r1, #0
     470:	sub	sp, sp, #12
     474:	mov	r5, r0
     478:	ldr	r3, [r0]
     47c:	beq	594 <set_definition+0x12c>
     480:	ldr	r0, [r4]
     484:	ldr	r3, [r3, #16]
     488:	cmp	r3, r0
     48c:	beq	49c <set_definition+0x34>
     490:	cmp	r0, #0
     494:	cmpeq	r3, #1
     498:	bne	5b0 <set_definition+0x148>
     49c:	ldr	r3, [r4, #24]
     4a0:	cmp	r3, #0
     4a4:	beq	524 <set_definition+0xbc>
     4a8:	cmp	r0, #1
     4ac:	beq	540 <set_definition+0xd8>
     4b0:	bcc	57c <set_definition+0x114>
     4b4:	cmp	r0, #2
     4b8:	beq	55c <set_definition+0xf4>
     4bc:	ldr	r5, [r5]
     4c0:	mov	r3, r4
     4c4:	str	r4, [r5, #24]
     4c8:	ldr	r2, [r3, #32]
     4cc:	cmp	r2, #0
     4d0:	ble	518 <set_definition+0xb0>
     4d4:	lsl	r4, r2, #2
     4d8:	mov	r0, r4
     4dc:	bl	0 <malloc>
     4e0:	cmp	r0, #0
     4e4:	str	r0, [r5, #28]
     4e8:	moveq	r3, #500	; 0x1f4
     4ec:	beq	5e4 <set_definition+0x17c>
     4f0:	mov	r0, r4
     4f4:	bl	0 <malloc>
     4f8:	cmp	r0, #0
     4fc:	str	r0, [r5, #32]
     500:	addne	r2, r0, r4
     504:	movne	r3, #0
     508:	beq	5e0 <set_definition+0x178>
     50c:	str	r3, [r0], #4
     510:	cmp	r0, r2
     514:	bne	50c <set_definition+0xa4>
     518:	mov	r0, #0
     51c:	add	sp, sp, #12
     520:	pop	{r4, r5, pc}
     524:	mov	r0, r4
     528:	bl	0 <coda_read_product_definition>
     52c:	cmp	r0, #0
     530:	bne	554 <set_definition+0xec>
     534:	ldr	r0, [r4]
     538:	cmp	r0, #1
     53c:	bne	4b0 <set_definition+0x48>
     540:	mov	r1, r4
     544:	mov	r0, r5
     548:	bl	0 <coda_bin_reopen_with_definition>
     54c:	cmp	r0, #0
     550:	beq	570 <set_definition+0x108>
     554:	mvn	r0, #0
     558:	b	51c <set_definition+0xb4>
     55c:	mov	r1, r4
     560:	mov	r0, r5
     564:	bl	0 <coda_xml_reopen_with_definition>
     568:	cmp	r0, #0
     56c:	bne	554 <set_definition+0xec>
     570:	ldr	r5, [r5]
     574:	ldr	r3, [r5, #24]
     578:	b	4c8 <set_definition+0x60>
     57c:	mov	r1, r4
     580:	mov	r0, r5
     584:	bl	0 <coda_ascii_reopen_with_definition>
     588:	cmp	r0, #0
     58c:	beq	570 <set_definition+0x108>
     590:	b	554 <set_definition+0xec>
     594:	ldr	r3, [r3, #16]
     598:	cmp	r3, #1
     59c:	bhi	518 <set_definition+0xb0>
     5a0:	mvn	r0, #199	; 0xc7
     5a4:	bl	0 <coda_set_error>
     5a8:	mvn	r0, #0
     5ac:	b	51c <set_definition+0xb4>
     5b0:	bl	0 <coda_type_get_format_name>
     5b4:	ldr	r3, [r5]
     5b8:	mov	r4, r0
     5bc:	ldr	r0, [r3, #16]
     5c0:	bl	0 <coda_type_get_format_name>
     5c4:	mov	r2, r4
     5c8:	ldr	r1, [pc, #48]	; 600 <set_definition+0x198>
     5cc:	mov	r3, r0
     5d0:	mvn	r0, #199	; 0xc7
     5d4:	bl	0 <coda_set_error>
     5d8:	mvn	r0, #0
     5dc:	b	51c <set_definition+0xb4>
     5e0:	ldr	r3, [pc, #28]	; 604 <set_definition+0x19c>
     5e4:	str	r3, [sp]
     5e8:	mov	r2, r4
     5ec:	ldr	r3, [pc, #20]	; 608 <set_definition+0x1a0>
     5f0:	ldr	r1, [pc, #20]	; 60c <set_definition+0x1a4>
     5f4:	mvn	r0, #0
     5f8:	bl	0 <coda_set_error>
     5fc:	b	554 <set_definition+0xec>
     600:	.word	0x0000004c
     604:	.word	0x000001fb
     608:	.word	0x00000074
     60c:	.word	0x000000c0

00000610 <coda_close>:
     610:	push	{r4, r5, r6, lr}
     614:	subs	r5, r0, #0
     618:	beq	760 <coda_close+0x150>
     61c:	ldr	r0, [r5, #28]
     620:	cmp	r0, #0
     624:	beq	634 <coda_close+0x24>
     628:	bl	0 <free>
     62c:	mov	r3, #0
     630:	str	r3, [r5, #28]
     634:	ldr	r3, [r5, #32]
     638:	cmp	r3, #0
     63c:	beq	68c <coda_close+0x7c>
     640:	ldr	r1, [r5, #24]
     644:	ldr	r2, [r1, #32]
     648:	cmp	r2, #0
     64c:	ble	67c <coda_close+0x6c>
     650:	mov	r4, #0
     654:	ldr	r0, [r3, r4, lsl #2]
     658:	cmp	r0, #0
     65c:	beq	66c <coda_close+0x5c>
     660:	bl	0 <free>
     664:	ldr	r3, [r5, #32]
     668:	ldr	r1, [r5, #24]
     66c:	ldr	r2, [r1, #32]
     670:	add	r4, r4, #1
     674:	cmp	r2, r4
     678:	bgt	654 <coda_close+0x44>
     67c:	mov	r0, r3
     680:	bl	0 <free>
     684:	mov	r3, #0
     688:	str	r3, [r5, #32]
     68c:	ldr	r3, [r5, #16]
     690:	cmp	r3, #9
     694:	ldrls	pc, [pc, r3, lsl #2]
     698:	b	74c <coda_close+0x13c>
     69c:	.word	0x000006d0
     6a0:	.word	0x000006dc
     6a4:	.word	0x000006e8
     6a8:	.word	0x000006f4
     6ac:	.word	0x00000708
     6b0:	.word	0x0000071c
     6b4:	.word	0x00000728
     6b8:	.word	0x00000734
     6bc:	.word	0x00000740
     6c0:	.word	0x000006c4
     6c4:	mov	r0, r5
     6c8:	pop	{r4, r5, r6, lr}
     6cc:	b	0 <coda_sp3_close>
     6d0:	mov	r0, r5
     6d4:	pop	{r4, r5, r6, lr}
     6d8:	b	0 <coda_ascii_close>
     6dc:	mov	r0, r5
     6e0:	pop	{r4, r5, r6, lr}
     6e4:	b	0 <coda_bin_close>
     6e8:	mov	r0, r5
     6ec:	pop	{r4, r5, r6, lr}
     6f0:	b	0 <coda_xml_close>
     6f4:	mov	r1, #0
     6f8:	mvn	r0, #10
     6fc:	bl	0 <coda_set_error>
     700:	mvn	r0, #0
     704:	pop	{r4, r5, r6, pc}
     708:	mov	r1, #0
     70c:	mvn	r0, #12
     710:	bl	0 <coda_set_error>
     714:	mvn	r0, #0
     718:	pop	{r4, r5, r6, pc}
     71c:	mov	r0, r5
     720:	pop	{r4, r5, r6, lr}
     724:	b	0 <coda_cdf_close>
     728:	mov	r0, r5
     72c:	pop	{r4, r5, r6, lr}
     730:	b	0 <coda_netcdf_close>
     734:	mov	r0, r5
     738:	pop	{r4, r5, r6, lr}
     73c:	b	0 <coda_grib_close>
     740:	mov	r0, r5
     744:	pop	{r4, r5, r6, lr}
     748:	b	0 <coda_rinex_close>
     74c:	ldr	r3, [pc, #40]	; 77c <coda_close+0x16c>
     750:	mov	r2, #836	; 0x344
     754:	ldr	r1, [pc, #36]	; 780 <coda_close+0x170>
     758:	ldr	r0, [pc, #36]	; 784 <coda_close+0x174>
     75c:	bl	0 <__assert_fail>
     760:	ldr	r3, [pc, #32]	; 788 <coda_close+0x178>
     764:	ldr	r2, [pc, #20]	; 780 <coda_close+0x170>
     768:	ldr	r1, [pc, #28]	; 78c <coda_close+0x17c>
     76c:	mvn	r0, #99	; 0x63
     770:	bl	0 <coda_set_error>
     774:	mvn	r0, #0
     778:	pop	{r4, r5, r6, pc}
     77c:	.word	0x0000003c
     780:	.word	0x00000074
     784:	.word	0x00000120
     788:	.word	0x00000309
     78c:	.word	0x000000f8

00000790 <open_file>:
     790:	push	{r4, r5, r6, r7, lr}
     794:	subs	r4, r0, #0
     798:	sub	sp, sp, #108	; 0x6c
     79c:	beq	974 <open_file+0x1e4>
     7a0:	mov	r7, r1
     7a4:	mov	r6, r2
     7a8:	mov	r1, r4
     7ac:	add	r2, sp, #16
     7b0:	mov	r0, #3
     7b4:	bl	0 <__xstat>
     7b8:	cmp	r0, #0
     7bc:	bne	808 <open_file+0x78>
     7c0:	ldr	r3, [sp, #32]
     7c4:	tst	r3, #32768	; 0x8000
     7c8:	beq	950 <open_file+0x1c0>
     7cc:	ldr	r2, [sp, #60]	; 0x3c
     7d0:	add	r5, sp, #12
     7d4:	mov	r0, r4
     7d8:	asr	r3, r2, #31
     7dc:	str	r5, [sp]
     7e0:	bl	0 <coda_bin_open>
     7e4:	subs	r4, r0, #0
     7e8:	bne	830 <open_file+0xa0>
     7ec:	cmp	r6, #0
     7f0:	beq	840 <open_file+0xb0>
     7f4:	ldr	r3, [sp, #12]
     7f8:	str	r3, [r7]
     7fc:	mov	r0, r4
     800:	add	sp, sp, #108	; 0x6c
     804:	pop	{r4, r5, r6, r7, pc}
     808:	bl	0 <__errno_location>
     80c:	ldr	r0, [r0]
     810:	cmp	r0, #2
     814:	beq	93c <open_file+0x1ac>
     818:	bl	0 <strerror>
     81c:	mov	r2, r4
     820:	ldr	r1, [pc, #352]	; 988 <open_file+0x1f8>
     824:	mov	r3, r0
     828:	mvn	r0, #20
     82c:	bl	0 <coda_set_error>
     830:	mvn	r4, #0
     834:	mov	r0, r4
     838:	add	sp, sp, #108	; 0x6c
     83c:	pop	{r4, r5, r6, r7, pc}
     840:	add	r1, sp, #16
     844:	ldr	r0, [sp, #12]
     848:	bl	0 <get_format>
     84c:	cmp	r0, #0
     850:	bne	964 <open_file+0x1d4>
     854:	ldr	r3, [sp, #16]
     858:	cmp	r3, #9
     85c:	ldrls	pc, [pc, r3, lsl #2]
     860:	b	7f4 <open_file+0x64>
     864:	.word	0x00000928
     868:	.word	0x000007f4
     86c:	.word	0x00000900
     870:	.word	0x000008ec
     874:	.word	0x000008dc
     878:	.word	0x000008c8
     87c:	.word	0x000008b4
     880:	.word	0x000008a0
     884:	.word	0x0000088c
     888:	.word	0x00000914
     88c:	mov	r0, r5
     890:	bl	0 <coda_rinex_reopen>
     894:	cmp	r0, #0
     898:	beq	7f4 <open_file+0x64>
     89c:	b	830 <open_file+0xa0>
     8a0:	mov	r0, r5
     8a4:	bl	0 <coda_grib_reopen>
     8a8:	cmp	r0, #0
     8ac:	beq	7f4 <open_file+0x64>
     8b0:	b	830 <open_file+0xa0>
     8b4:	mov	r0, r5
     8b8:	bl	0 <coda_netcdf_reopen>
     8bc:	cmp	r0, #0
     8c0:	beq	7f4 <open_file+0x64>
     8c4:	b	830 <open_file+0xa0>
     8c8:	mov	r0, r5
     8cc:	bl	0 <coda_cdf_reopen>
     8d0:	cmp	r0, #0
     8d4:	beq	7f4 <open_file+0x64>
     8d8:	b	830 <open_file+0xa0>
     8dc:	mov	r1, #0
     8e0:	mvn	r0, #12
     8e4:	bl	0 <coda_set_error>
     8e8:	b	830 <open_file+0xa0>
     8ec:	mov	r1, #0
     8f0:	mvn	r0, #10
     8f4:	bl	0 <coda_set_error>
     8f8:	mvn	r4, #0
     8fc:	b	7fc <open_file+0x6c>
     900:	mov	r0, r5
     904:	bl	0 <coda_xml_reopen>
     908:	cmp	r0, #0
     90c:	beq	7f4 <open_file+0x64>
     910:	b	830 <open_file+0xa0>
     914:	mov	r0, r5
     918:	bl	0 <coda_sp3_reopen>
     91c:	cmp	r0, #0
     920:	beq	7f4 <open_file+0x64>
     924:	b	830 <open_file+0xa0>
     928:	ldr	r3, [pc, #92]	; 98c <open_file+0x1fc>
     92c:	ldr	r2, [pc, #92]	; 990 <open_file+0x200>
     930:	ldr	r1, [pc, #92]	; 994 <open_file+0x204>
     934:	ldr	r0, [pc, #92]	; 998 <open_file+0x208>
     938:	bl	0 <__assert_fail>
     93c:	mov	r2, r4
     940:	ldr	r1, [pc, #84]	; 99c <open_file+0x20c>
     944:	mvn	r0, #19
     948:	bl	0 <coda_set_error>
     94c:	b	830 <open_file+0xa0>
     950:	mov	r2, r4
     954:	ldr	r1, [pc, #68]	; 9a0 <open_file+0x210>
     958:	mvn	r0, #20
     95c:	bl	0 <coda_set_error>
     960:	b	830 <open_file+0xa0>
     964:	ldr	r0, [sp, #12]
     968:	bl	610 <coda_close>
     96c:	mvn	r4, #0
     970:	b	7fc <open_file+0x6c>
     974:	ldr	r3, [pc, #40]	; 9a4 <open_file+0x214>
     978:	mov	r2, #162	; 0xa2
     97c:	ldr	r1, [pc, #16]	; 994 <open_file+0x204>
     980:	ldr	r0, [pc, #32]	; 9a8 <open_file+0x218>
     984:	bl	0 <__assert_fail>
     988:	.word	0x00000160
     98c:	.word	0x00000058
     990:	.word	0x0000016a
     994:	.word	0x00000074
     998:	.word	0x00000120
     99c:	.word	0x0000014c
     9a0:	.word	0x00000178
     9a4:	.word	0x00000048
     9a8:	.word	0x00000124

000009ac <coda_recognize_file>:
     9ac:	push	{r4, r5, r6, r7, r8, r9, lr}
     9b0:	mov	ip, #0
     9b4:	sub	sp, sp, #12
     9b8:	mov	r4, r1
     9bc:	mov	r8, r2
     9c0:	add	r1, sp, #4
     9c4:	mov	r2, ip
     9c8:	mov	r7, r3
     9cc:	str	ip, [sp]
     9d0:	ldr	r6, [sp, #40]	; 0x28
     9d4:	ldr	r5, [sp, #44]	; 0x2c
     9d8:	bl	790 <open_file>
     9dc:	cmp	r0, #0
     9e0:	bne	a94 <coda_recognize_file+0xe8>
     9e4:	mov	r1, sp
     9e8:	ldr	r0, [sp, #4]
     9ec:	bl	0 <coda_data_dictionary_find_definition_for_product>
     9f0:	subs	r9, r0, #0
     9f4:	ldr	r0, [sp, #4]
     9f8:	bne	a9c <coda_recognize_file+0xf0>
     9fc:	cmp	r4, #0
     a00:	ldrdne	r2, [r0, #8]
     a04:	strdne	r2, [r4]
     a08:	ldr	r3, [sp]
     a0c:	cmp	r3, #0
     a10:	beq	a60 <coda_recognize_file+0xb4>
     a14:	cmp	r8, #0
     a18:	ldrne	r2, [r3]
     a1c:	strne	r2, [r8]
     a20:	cmp	r7, #0
     a24:	ldrne	r2, [r3, #44]	; 0x2c
     a28:	ldrne	r2, [r2, #20]
     a2c:	ldrne	r2, [r2]
     a30:	strne	r2, [r7]
     a34:	cmp	r6, #0
     a38:	ldrne	r2, [r3, #44]	; 0x2c
     a3c:	ldrne	r2, [r2]
     a40:	strne	r2, [r6]
     a44:	cmp	r5, #0
     a48:	ldrne	r3, [r3, #4]
     a4c:	strne	r3, [r5]
     a50:	bl	610 <coda_close>
     a54:	mov	r0, r9
     a58:	add	sp, sp, #12
     a5c:	pop	{r4, r5, r6, r7, r8, r9, pc}
     a60:	cmp	r8, #0
     a64:	ldrne	r3, [r0, #16]
     a68:	strne	r3, [r8]
     a6c:	cmp	r7, #0
     a70:	movne	r3, #0
     a74:	strne	r3, [r7]
     a78:	cmp	r6, #0
     a7c:	movne	r3, #0
     a80:	strne	r3, [r6]
     a84:	cmp	r5, #0
     a88:	mvnne	r3, #0
     a8c:	strne	r3, [r5]
     a90:	b	a50 <coda_recognize_file+0xa4>
     a94:	mvn	r9, #0
     a98:	b	a54 <coda_recognize_file+0xa8>
     a9c:	bl	610 <coda_close>
     aa0:	mvn	r9, #0
     aa4:	b	a54 <coda_recognize_file+0xa8>

00000aa8 <coda_open>:
     aa8:	push	{r4, lr}
     aac:	sub	sp, sp, #8
     ab0:	mov	r2, #0
     ab4:	cmp	r0, #0
     ab8:	str	r2, [sp]
     abc:	beq	b48 <coda_open+0xa0>
     ac0:	cmp	r1, #0
     ac4:	mov	r4, r1
     ac8:	beq	b2c <coda_open+0x84>
     acc:	add	r1, sp, #4
     ad0:	bl	790 <open_file>
     ad4:	cmp	r0, #0
     ad8:	bne	b14 <coda_open+0x6c>
     adc:	mov	r1, sp
     ae0:	ldr	r0, [sp, #4]
     ae4:	bl	0 <coda_data_dictionary_find_definition_for_product>
     ae8:	cmp	r0, #0
     aec:	bne	b1c <coda_open+0x74>
     af0:	add	r0, sp, #4
     af4:	ldr	r1, [sp]
     af8:	bl	468 <set_definition>
     afc:	cmp	r0, #0
     b00:	ldreq	r3, [sp, #4]
     b04:	streq	r3, [r4]
     b08:	bne	b1c <coda_open+0x74>
     b0c:	add	sp, sp, #8
     b10:	pop	{r4, pc}
     b14:	mvn	r0, #0
     b18:	b	b0c <coda_open+0x64>
     b1c:	ldr	r0, [sp, #4]
     b20:	bl	610 <coda_close>
     b24:	mvn	r0, #0
     b28:	b	b0c <coda_open+0x64>
     b2c:	mvn	r0, #99	; 0x63
     b30:	ldr	r3, [pc, #44]	; b64 <coda_open+0xbc>
     b34:	ldr	r2, [pc, #44]	; b68 <coda_open+0xc0>
     b38:	ldr	r1, [pc, #44]	; b6c <coda_open+0xc4>
     b3c:	bl	0 <coda_set_error>
     b40:	mvn	r0, #0
     b44:	b	b0c <coda_open+0x64>
     b48:	mvn	r0, #99	; 0x63
     b4c:	mov	r3, #668	; 0x29c
     b50:	ldr	r2, [pc, #16]	; b68 <coda_open+0xc0>
     b54:	ldr	r1, [pc, #20]	; b70 <coda_open+0xc8>
     b58:	bl	0 <coda_set_error>
     b5c:	mvn	r0, #0
     b60:	b	b0c <coda_open+0x64>
     b64:	.word	0x000002a1
     b68:	.word	0x00000074
     b6c:	.word	0x000001c4
     b70:	.word	0x000001a0

00000b74 <coda_open_as>:
     b74:	push	{r4, r5, lr}
     b78:	sub	sp, sp, #12
     b7c:	mov	ip, #0
     b80:	subs	r5, r0, #0
     b84:	str	ip, [sp]
     b88:	ldr	r4, [sp, #24]
     b8c:	beq	c34 <coda_open_as+0xc0>
     b90:	cmp	r1, #0
     b94:	mov	r0, r1
     b98:	beq	c18 <coda_open_as+0xa4>
     b9c:	cmp	r2, #0
     ba0:	mov	r1, r2
     ba4:	beq	c6c <coda_open_as+0xf8>
     ba8:	cmp	r4, #0
     bac:	beq	c50 <coda_open_as+0xdc>
     bb0:	mov	r2, r3
     bb4:	mov	r3, sp
     bb8:	bl	0 <coda_data_dictionary_get_definition>
     bbc:	cmp	r0, #0
     bc0:	bne	c28 <coda_open_as+0xb4>
     bc4:	ldr	r3, [sp]
     bc8:	cmp	r3, #0
     bcc:	beq	c18 <coda_open_as+0xa4>
     bd0:	ldr	r2, [r3]
     bd4:	cmp	r2, #1
     bd8:	movhi	r2, #0
     bdc:	movls	r2, #1
     be0:	mov	r0, r5
     be4:	add	r1, sp, #4
     be8:	bl	790 <open_file>
     bec:	cmp	r0, #0
     bf0:	bne	c28 <coda_open_as+0xb4>
     bf4:	add	r0, sp, #4
     bf8:	ldr	r1, [sp]
     bfc:	bl	468 <set_definition>
     c00:	cmp	r0, #0
     c04:	ldreq	r3, [sp, #4]
     c08:	streq	r3, [r4]
     c0c:	bne	c20 <coda_open_as+0xac>
     c10:	add	sp, sp, #12
     c14:	pop	{r4, r5, pc}
     c18:	mov	r2, #0
     c1c:	b	be0 <coda_open_as+0x6c>
     c20:	ldr	r0, [sp, #4]
     c24:	bl	610 <coda_close>
     c28:	mvn	r0, #0
     c2c:	add	sp, sp, #12
     c30:	pop	{r4, r5, pc}
     c34:	mvn	r0, #99	; 0x63
     c38:	ldr	r3, [pc, #72]	; c88 <coda_open_as+0x114>
     c3c:	ldr	r2, [pc, #72]	; c8c <coda_open_as+0x118>
     c40:	ldr	r1, [pc, #72]	; c90 <coda_open_as+0x11c>
     c44:	bl	0 <coda_set_error>
     c48:	mvn	r0, #0
     c4c:	b	c10 <coda_open_as+0x9c>
     c50:	mvn	r0, #99	; 0x63
     c54:	ldr	r3, [pc, #56]	; c94 <coda_open_as+0x120>
     c58:	ldr	r2, [pc, #44]	; c8c <coda_open_as+0x118>
     c5c:	ldr	r1, [pc, #52]	; c98 <coda_open_as+0x124>
     c60:	bl	0 <coda_set_error>
     c64:	mvn	r0, #0
     c68:	b	c10 <coda_open_as+0x9c>
     c6c:	mvn	r0, #99	; 0x63
     c70:	ldr	r3, [pc, #36]	; c9c <coda_open_as+0x128>
     c74:	ldr	r2, [pc, #16]	; c8c <coda_open_as+0x118>
     c78:	ldr	r1, [pc, #32]	; ca0 <coda_open_as+0x12c>
     c7c:	bl	0 <coda_set_error>
     c80:	mvn	r0, #0
     c84:	b	c10 <coda_open_as+0x9c>
     c88:	.word	0x000002cf
     c8c:	.word	0x00000074
     c90:	.word	0x000001a0
     c94:	.word	0x000002db
     c98:	.word	0x000001c4
     c9c:	.word	0x000002d6
     ca0:	.word	0x000001e8

00000ca4 <coda_get_product_filename>:
     ca4:	cmp	r0, #0
     ca8:	beq	cbc <coda_get_product_filename+0x18>
     cac:	ldr	r3, [r0]
     cb0:	mov	r0, #0
     cb4:	str	r3, [r1]
     cb8:	bx	lr
     cbc:	push	{r4, lr}
     cc0:	mov	r3, #856	; 0x358
     cc4:	ldr	r2, [pc, #16]	; cdc <coda_get_product_filename+0x38>
     cc8:	ldr	r1, [pc, #16]	; ce0 <coda_get_product_filename+0x3c>
     ccc:	mvn	r0, #99	; 0x63
     cd0:	bl	0 <coda_set_error>
     cd4:	mvn	r0, #0
     cd8:	pop	{r4, pc}
     cdc:	.word	0x00000074
     ce0:	.word	0x000000f8

00000ce4 <coda_get_product_file_size>:
     ce4:	cmp	r0, #0
     ce8:	push	{r4, lr}
     cec:	beq	d08 <coda_get_product_file_size+0x24>
     cf0:	cmp	r1, #0
     cf4:	beq	d24 <coda_get_product_file_size+0x40>
     cf8:	ldrd	r2, [r0, #8]
     cfc:	mov	r0, #0
     d00:	strd	r2, [r1]
     d04:	pop	{r4, pc}
     d08:	mov	r3, #876	; 0x36c
     d0c:	ldr	r2, [pc, #44]	; d40 <coda_get_product_file_size+0x5c>
     d10:	ldr	r1, [pc, #44]	; d44 <coda_get_product_file_size+0x60>
     d14:	mvn	r0, #99	; 0x63
     d18:	bl	0 <coda_set_error>
     d1c:	mvn	r0, #0
     d20:	pop	{r4, pc}
     d24:	ldr	r3, [pc, #28]	; d48 <coda_get_product_file_size+0x64>
     d28:	ldr	r2, [pc, #16]	; d40 <coda_get_product_file_size+0x5c>
     d2c:	ldr	r1, [pc, #24]	; d4c <coda_get_product_file_size+0x68>
     d30:	mvn	r0, #99	; 0x63
     d34:	bl	0 <coda_set_error>
     d38:	mvn	r0, #0
     d3c:	pop	{r4, pc}
     d40:	.word	0x00000074
     d44:	.word	0x000000f8
     d48:	.word	0x00000371
     d4c:	.word	0x00000210

00000d50 <coda_get_product_format>:
     d50:	cmp	r0, #0
     d54:	push	{r4, lr}
     d58:	beq	d74 <coda_get_product_format+0x24>
     d5c:	cmp	r1, #0
     d60:	beq	d90 <coda_get_product_format+0x40>
     d64:	ldr	r3, [r0, #16]
     d68:	mov	r0, #0
     d6c:	str	r3, [r1]
     d70:	pop	{r4, pc}
     d74:	mov	r3, #904	; 0x388
     d78:	ldr	r2, [pc, #44]	; dac <coda_get_product_format+0x5c>
     d7c:	ldr	r1, [pc, #44]	; db0 <coda_get_product_format+0x60>
     d80:	mvn	r0, #99	; 0x63
     d84:	bl	0 <coda_set_error>
     d88:	mvn	r0, #0
     d8c:	pop	{r4, pc}
     d90:	ldr	r3, [pc, #28]	; db4 <coda_get_product_format+0x64>
     d94:	ldr	r2, [pc, #16]	; dac <coda_get_product_format+0x5c>
     d98:	ldr	r1, [pc, #24]	; db8 <coda_get_product_format+0x68>
     d9c:	mvn	r0, #99	; 0x63
     da0:	bl	0 <coda_set_error>
     da4:	mvn	r0, #0
     da8:	pop	{r4, pc}
     dac:	.word	0x00000074
     db0:	.word	0x000000f8
     db4:	.word	0x0000038d
     db8:	.word	0x00000234

00000dbc <coda_get_product_class>:
     dbc:	cmp	r0, #0
     dc0:	push	{r4, lr}
     dc4:	beq	df4 <coda_get_product_class+0x38>
     dc8:	cmp	r1, #0
     dcc:	beq	e10 <coda_get_product_class+0x54>
     dd0:	ldr	r3, [r0, #24]
     dd4:	cmp	r3, #0
     dd8:	movne	r0, #0
     ddc:	ldrne	r3, [r3, #44]	; 0x2c
     de0:	moveq	r0, r3
     de4:	ldrne	r3, [r3, #20]
     de8:	ldrne	r3, [r3]
     dec:	str	r3, [r1]
     df0:	pop	{r4, pc}
     df4:	ldr	r3, [pc, #48]	; e2c <coda_get_product_class+0x70>
     df8:	ldr	r2, [pc, #48]	; e30 <coda_get_product_class+0x74>
     dfc:	ldr	r1, [pc, #48]	; e34 <coda_get_product_class+0x78>
     e00:	mvn	r0, #99	; 0x63
     e04:	bl	0 <coda_set_error>
     e08:	mvn	r0, #0
     e0c:	pop	{r4, pc}
     e10:	ldr	r3, [pc, #32]	; e38 <coda_get_product_class+0x7c>
     e14:	ldr	r2, [pc, #20]	; e30 <coda_get_product_class+0x74>
     e18:	ldr	r1, [pc, #28]	; e3c <coda_get_product_class+0x80>
     e1c:	mvn	r0, #99	; 0x63
     e20:	bl	0 <coda_set_error>
     e24:	mvn	r0, #0
     e28:	pop	{r4, pc}
     e2c:	.word	0x000003a5
     e30:	.word	0x00000074
     e34:	.word	0x000000f8
     e38:	.word	0x000003aa
     e3c:	.word	0x00000254

00000e40 <coda_get_product_type>:
     e40:	cmp	r0, #0
     e44:	push	{r4, lr}
     e48:	beq	e74 <coda_get_product_type+0x34>
     e4c:	cmp	r1, #0
     e50:	beq	e90 <coda_get_product_type+0x50>
     e54:	ldr	r3, [r0, #24]
     e58:	cmp	r3, #0
     e5c:	movne	r0, #0
     e60:	ldrne	r3, [r3, #44]	; 0x2c
     e64:	moveq	r0, r3
     e68:	ldrne	r3, [r3]
     e6c:	str	r3, [r1]
     e70:	pop	{r4, pc}
     e74:	ldr	r3, [pc, #48]	; eac <coda_get_product_type+0x6c>
     e78:	ldr	r2, [pc, #48]	; eb0 <coda_get_product_type+0x70>
     e7c:	ldr	r1, [pc, #48]	; eb4 <coda_get_product_type+0x74>
     e80:	mvn	r0, #99	; 0x63
     e84:	bl	0 <coda_set_error>
     e88:	mvn	r0, #0
     e8c:	pop	{r4, pc}
     e90:	ldr	r3, [pc, #32]	; eb8 <coda_get_product_type+0x78>
     e94:	ldr	r2, [pc, #20]	; eb0 <coda_get_product_type+0x70>
     e98:	ldr	r1, [pc, #28]	; ebc <coda_get_product_type+0x7c>
     e9c:	mvn	r0, #99	; 0x63
     ea0:	bl	0 <coda_set_error>
     ea4:	mvn	r0, #0
     ea8:	pop	{r4, pc}
     eac:	.word	0x000003c9
     eb0:	.word	0x00000074
     eb4:	.word	0x000000f8
     eb8:	.word	0x000003ce
     ebc:	.word	0x000001e8

00000ec0 <coda_get_product_version>:
     ec0:	cmp	r0, #0
     ec4:	push	{r4, lr}
     ec8:	beq	ef0 <coda_get_product_version+0x30>
     ecc:	cmp	r1, #0
     ed0:	beq	f0c <coda_get_product_version+0x4c>
     ed4:	ldr	r0, [r0, #24]
     ed8:	cmp	r0, #0
     edc:	mvneq	r3, #0
     ee0:	ldrne	r3, [r0, #4]
     ee4:	movne	r0, #0
     ee8:	str	r3, [r1]
     eec:	pop	{r4, pc}
     ef0:	ldr	r3, [pc, #48]	; f28 <coda_get_product_version+0x68>
     ef4:	ldr	r2, [pc, #48]	; f2c <coda_get_product_version+0x6c>
     ef8:	ldr	r1, [pc, #48]	; f30 <coda_get_product_version+0x70>
     efc:	mvn	r0, #99	; 0x63
     f00:	bl	0 <coda_set_error>
     f04:	mvn	r0, #0
     f08:	pop	{r4, pc}
     f0c:	mov	r3, #1008	; 0x3f0
     f10:	ldr	r2, [pc, #20]	; f2c <coda_get_product_version+0x6c>
     f14:	ldr	r1, [pc, #24]	; f34 <coda_get_product_version+0x74>
     f18:	mvn	r0, #99	; 0x63
     f1c:	bl	0 <coda_set_error>
     f20:	mvn	r0, #0
     f24:	pop	{r4, pc}
     f28:	.word	0x000003eb
     f2c:	.word	0x00000074
     f30:	.word	0x000000f8
     f34:	.word	0x0000027c

00000f38 <coda_get_product_root_type>:
     f38:	cmp	r0, #0
     f3c:	push	{r4, lr}
     f40:	beq	fa8 <coda_get_product_root_type+0x70>
     f44:	cmp	r1, #0
     f48:	beq	f8c <coda_get_product_root_type+0x54>
     f4c:	ldr	r3, [r0, #24]
     f50:	cmp	r3, #0
     f54:	beq	f70 <coda_get_product_root_type+0x38>
     f58:	ldr	r3, [r3, #28]
     f5c:	cmp	r3, #0
     f60:	beq	f70 <coda_get_product_root_type+0x38>
     f64:	str	r3, [r1]
     f68:	mov	r0, #0
     f6c:	pop	{r4, pc}
     f70:	ldr	r3, [r0, #20]
     f74:	mov	r0, #0
     f78:	ldr	r2, [r3]
     f7c:	cmp	r2, #99	; 0x63
     f80:	ldrhi	r3, [r3, #4]
     f84:	str	r3, [r1]
     f88:	pop	{r4, pc}
     f8c:	ldr	r3, [pc, #48]	; fc4 <coda_get_product_root_type+0x8c>
     f90:	ldr	r2, [pc, #48]	; fc8 <coda_get_product_root_type+0x90>
     f94:	ldr	r1, [pc, #48]	; fcc <coda_get_product_root_type+0x94>
     f98:	mvn	r0, #99	; 0x63
     f9c:	bl	0 <coda_set_error>
     fa0:	mvn	r0, #0
     fa4:	pop	{r4, pc}
     fa8:	ldr	r3, [pc, #32]	; fd0 <coda_get_product_root_type+0x98>
     fac:	ldr	r2, [pc, #20]	; fc8 <coda_get_product_root_type+0x90>
     fb0:	ldr	r1, [pc, #28]	; fd4 <coda_get_product_root_type+0x9c>
     fb4:	mvn	r0, #99	; 0x63
     fb8:	bl	0 <coda_set_error>
     fbc:	mvn	r0, #0
     fc0:	pop	{r4, pc}
     fc4:	.word	0x00000418
     fc8:	.word	0x00000074
     fcc:	.word	0x000002a0
     fd0:	.word	0x00000413
     fd4:	.word	0x000000f8

00000fd8 <coda_get_product_definition_file>:
     fd8:	cmp	r0, #0
     fdc:	push	{r4, lr}
     fe0:	beq	1010 <coda_get_product_definition_file+0x38>
     fe4:	cmp	r1, #0
     fe8:	beq	102c <coda_get_product_definition_file+0x54>
     fec:	ldr	r3, [r0, #24]
     ff0:	cmp	r3, #0
     ff4:	movne	r0, #0
     ff8:	ldrne	r3, [r3, #44]	; 0x2c
     ffc:	moveq	r0, r3
    1000:	ldrne	r3, [r3, #20]
    1004:	ldrne	r3, [r3, #8]
    1008:	str	r3, [r1]
    100c:	pop	{r4, pc}
    1010:	ldr	r3, [pc, #48]	; 1048 <coda_get_product_definition_file+0x70>
    1014:	ldr	r2, [pc, #48]	; 104c <coda_get_product_definition_file+0x74>
    1018:	ldr	r1, [pc, #48]	; 1050 <coda_get_product_definition_file+0x78>
    101c:	mvn	r0, #99	; 0x63
    1020:	bl	0 <coda_set_error>
    1024:	mvn	r0, #0
    1028:	pop	{r4, pc}
    102c:	ldr	r3, [pc, #32]	; 1054 <coda_get_product_definition_file+0x7c>
    1030:	ldr	r2, [pc, #20]	; 104c <coda_get_product_definition_file+0x74>
    1034:	ldr	r1, [pc, #28]	; 1058 <coda_get_product_definition_file+0x80>
    1038:	mvn	r0, #99	; 0x63
    103c:	bl	0 <coda_set_error>
    1040:	mvn	r0, #0
    1044:	pop	{r4, pc}
    1048:	.word	0x00000438
    104c:	.word	0x00000074
    1050:	.word	0x000000f8
    1054:	.word	0x0000043d
    1058:	.word	0x000002c0

0000105c <coda_get_product_variable_value>:
    105c:	push	{r4, r5, r6, r7, lr}
    1060:	subs	r6, r0, #0
    1064:	sub	sp, sp, #12
    1068:	beq	112c <coda_get_product_variable_value+0xd0>
    106c:	cmp	r1, #0
    1070:	mov	r5, r1
    1074:	beq	1110 <coda_get_product_variable_value+0xb4>
    1078:	mov	r4, r2
    107c:	add	r2, sp, #4
    1080:	mov	r7, r3
    1084:	bl	0 <coda_product_variable_get_size>
    1088:	cmp	r0, #0
    108c:	bne	10f8 <coda_get_product_variable_value+0x9c>
    1090:	cmp	r4, #0
    1094:	blt	10d4 <coda_get_product_variable_value+0x78>
    1098:	ldr	r3, [sp, #4]
    109c:	cmp	r4, r3
    10a0:	bge	10d4 <coda_get_product_variable_value+0x78>
    10a4:	mov	r2, r4
    10a8:	mov	r1, r5
    10ac:	mov	r0, r6
    10b0:	mov	r3, sp
    10b4:	bl	0 <coda_product_variable_get_pointer>
    10b8:	cmp	r0, #0
    10bc:	bne	10f0 <coda_get_product_variable_value+0x94>
    10c0:	ldr	r3, [sp]
    10c4:	ldrd	r2, [r3]
    10c8:	strd	r2, [r7]
    10cc:	add	sp, sp, #12
    10d0:	pop	{r4, r5, r6, r7, pc}
    10d4:	mvn	r0, #100	; 0x64
    10d8:	mov	r3, r5
    10dc:	mov	r2, r4
    10e0:	ldr	r1, [pc, #96]	; 1148 <coda_get_product_variable_value+0xec>
    10e4:	bl	0 <coda_set_error>
    10e8:	mvn	r0, #0
    10ec:	b	10cc <coda_get_product_variable_value+0x70>
    10f0:	mvn	r0, #0
    10f4:	b	10cc <coda_get_product_variable_value+0x70>
    10f8:	mvn	r0, #101	; 0x65
    10fc:	mov	r2, r5
    1100:	ldr	r1, [pc, #68]	; 114c <coda_get_product_variable_value+0xf0>
    1104:	bl	0 <coda_set_error>
    1108:	mvn	r0, #0
    110c:	b	10cc <coda_get_product_variable_value+0x70>
    1110:	mvn	r0, #99	; 0x63
    1114:	ldr	r3, [pc, #52]	; 1150 <coda_get_product_variable_value+0xf4>
    1118:	ldr	r2, [pc, #52]	; 1154 <coda_get_product_variable_value+0xf8>
    111c:	ldr	r1, [pc, #52]	; 1158 <coda_get_product_variable_value+0xfc>
    1120:	bl	0 <coda_set_error>
    1124:	mvn	r0, #0
    1128:	b	10cc <coda_get_product_variable_value+0x70>
    112c:	mvn	r0, #99	; 0x63
    1130:	ldr	r3, [pc, #36]	; 115c <coda_get_product_variable_value+0x100>
    1134:	ldr	r2, [pc, #24]	; 1154 <coda_get_product_variable_value+0xf8>
    1138:	ldr	r1, [pc, #32]	; 1160 <coda_get_product_variable_value+0x104>
    113c:	bl	0 <coda_set_error>
    1140:	mvn	r0, #0
    1144:	b	10cc <coda_get_product_variable_value+0x70>
    1148:	.word	0x00000334
    114c:	.word	0x00000310
    1150:	.word	0x00000469
    1154:	.word	0x00000074
    1158:	.word	0x000002ec
    115c:	.word	0x00000464
    1160:	.word	0x000000f8
