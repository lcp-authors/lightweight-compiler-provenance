
../repos/dvidelabs-flatcc-3b39ef7/src/cli/CMakeFiles/flatcc_cli.dir/flatcc_cli.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <usage>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #16
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	str	r4, [sp, #8]
  14:	mov	r4, r0
  18:	ldr	r1, [pc, #64]	; 60 <usage+0x60>
  1c:	ldr	r2, [pc, #64]	; 64 <usage+0x64>
  20:	mov	r0, r4
  24:	bl	0 <fprintf>
  28:	ldr	r1, [pc, #64]	; 70 <usage+0x70>
  2c:	ldr	r2, [pc, #64]	; 74 <usage+0x74>
  30:	mov	r0, r4
  34:	bl	0 <fprintf>
  38:	ldr	r1, [pc, #44]	; 6c <usage+0x6c>
  3c:	mov	r0, r4
  40:	bl	0 <fprintf>
  44:	ldr	r1, [pc, #28]	; 68 <usage+0x68>
  48:	mov	r0, r4
  4c:	bl	0 <fprintf>
  50:	ldr	r4, [sp, #8]
  54:	ldr	lr, [sp, #4]
  58:	add	sp, sp, #16
  5c:	bx	lr
  60:	.word	0x000015e9
  64:	.word	0x00000fbc
  68:	.word	0x00001016
  6c:	.word	0x00000f74
  70:	.word	0x000000be
  74:	.word	0x00001629

00000078 <help>:
  78:	mov	ip, sp
  7c:	sub	sp, sp, #16
  80:	str	ip, [sp]
  84:	str	lr, [sp, #4]
  88:	str	r4, [sp, #8]
  8c:	mov	r4, r0
  90:	mov	r0, r4
  94:	bl	0 <usage>
  98:	ldr	r1, [pc, #20]	; b4 <help+0x3c>
  9c:	mov	r0, r4
  a0:	bl	0 <fprintf>
  a4:	ldr	r4, [sp, #8]
  a8:	ldr	lr, [sp, #4]
  ac:	add	sp, sp, #16
  b0:	bx	lr
  b4:	.word	0x00000274

000000b8 <parse_bool_arg>:
  b8:	mov	ip, sp
  bc:	sub	sp, sp, #16
  c0:	str	ip, [sp]
  c4:	str	lr, [sp, #4]
  c8:	str	r4, [sp, #8]
  cc:	mov	r4, r0
  d0:	ldr	r1, [pc, #172]	; 184 <parse_bool_arg+0xcc>
  d4:	mov	r0, r4
  d8:	bl	0 <strcmp>
  dc:	cmp	r0, #0
  e0:	beq	100 <parse_bool_arg+0x48>
  e4:	ldr	r1, [pc, #164]	; 190 <parse_bool_arg+0xd8>
  e8:	mov	r0, r4
  ec:	bl	0 <strcmp>
  f0:	cmp	r0, #0
  f4:	moveq	r2, #1
  f8:	movne	r2, #0
  fc:	b	104 <parse_bool_arg+0x4c>
 100:	mov	r2, #1
 104:	cmp	r2, #0
 108:	beq	114 <parse_bool_arg+0x5c>
 10c:	mov	r0, #0
 110:	b	170 <parse_bool_arg+0xb8>
 114:	ldr	r1, [pc, #112]	; 18c <parse_bool_arg+0xd4>
 118:	mov	r0, r4
 11c:	bl	0 <strcmp>
 120:	cmp	r0, #0
 124:	beq	144 <parse_bool_arg+0x8c>
 128:	ldr	r1, [pc, #80]	; 180 <parse_bool_arg+0xc8>
 12c:	mov	r0, r4
 130:	bl	0 <strcmp>
 134:	cmp	r0, #0
 138:	moveq	r1, #1
 13c:	movne	r1, #0
 140:	b	148 <parse_bool_arg+0x90>
 144:	mov	r1, #1
 148:	cmp	r1, #0
 14c:	beq	158 <parse_bool_arg+0xa0>
 150:	mov	r0, #1
 154:	b	170 <parse_bool_arg+0xb8>
 158:	ldr	r0, [pc, #40]	; 188 <parse_bool_arg+0xd0>
 15c:	ldr	r0, [r0]
 160:	ldr	r1, [pc, #44]	; 194 <parse_bool_arg+0xdc>
 164:	mov	r2, r4
 168:	bl	0 <fprintf>
 16c:	mvn	r0, #0
 170:	ldr	r4, [sp, #8]
 174:	ldr	lr, [sp, #4]
 178:	add	sp, sp, #16
 17c:	bx	lr
 180:	.word	0x000001bd
 184:	.word	0x000015e5
 188:	.word	0x00000000
 18c:	.word	0x000015e7
 190:	.word	0x0000002d
 194:	.word	0x00000228

00000198 <match_long_arg>:
 198:	mov	ip, sp
 19c:	sub	sp, sp, #16
 1a0:	str	ip, [sp]
 1a4:	str	lr, [sp, #4]
 1a8:	str	r4, [sp, #8]
 1ac:	str	r5, [sp, #12]
 1b0:	mov	r4, r2
 1b4:	mov	r5, r0
 1b8:	mov	r2, r4
 1bc:	mov	r0, r5
 1c0:	bl	0 <strncmp>
 1c4:	cmp	r0, #0
 1c8:	bne	1e4 <match_long_arg+0x4c>
 1cc:	mov	r0, r5
 1d0:	bl	0 <strlen>
 1d4:	cmp	r0, r4
 1d8:	moveq	r0, #1
 1dc:	movne	r0, #0
 1e0:	b	1e8 <match_long_arg+0x50>
 1e4:	mov	r0, #0
 1e8:	ldr	r4, [sp, #8]
 1ec:	ldr	r5, [sp, #12]
 1f0:	ldr	lr, [sp, #4]
 1f4:	add	sp, sp, #16
 1f8:	bx	lr

000001fc <set_opt>:
 1fc:	mov	ip, sp
 200:	sub	sp, sp, #32
 204:	str	ip, [sp]
 208:	str	lr, [sp, #4]
 20c:	str	r4, [sp, #8]
 210:	str	r5, [sp, #12]
 214:	str	r6, [sp, #16]
 218:	str	r7, [sp, #20]
 21c:	str	r8, [sp, #24]
 220:	str	r9, [sp, #28]
 224:	mov	r7, r2
 228:	mov	r5, r1
 22c:	mov	r8, r0
 230:	mov	r6, #0
 234:	mov	r0, r5
 238:	bl	0 <strlen>
 23c:	mov	r4, r0
 240:	mov	r1, #61	; 0x3d
 244:	mov	r0, r5
 248:	bl	0 <strchr>
 24c:	mov	r9, r0
 250:	cmp	r9, #0
 254:	beq	260 <set_opt+0x64>
 258:	add	r7, r9, #1
 25c:	sub	r4, r9, r5
 260:	ldrb	r1, [r5]
 264:	cmp	r1, #104	; 0x68
 268:	beq	288 <set_opt+0x8c>
 26c:	ldr	r0, [pc, #1588]	; 8a8 <set_opt+0x6ac>
 270:	mov	r1, r5
 274:	bl	0 <strcmp>
 278:	cmp	r0, #0
 27c:	moveq	r1, #1
 280:	movne	r1, #0
 284:	b	28c <set_opt+0x90>
 288:	mov	r1, #1
 28c:	cmp	r1, #0
 290:	beq	2a8 <set_opt+0xac>
 294:	ldr	r3, [pc, #1588]	; 8d0 <set_opt+0x6d4>
 298:	ldr	r0, [r3]
 29c:	bl	78 <help>
 2a0:	mov	r0, #0
 2a4:	bl	0 <exit>
 2a8:	ldr	r0, [pc, #1488]	; 880 <set_opt+0x684>
 2ac:	mov	r1, r5
 2b0:	bl	0 <strcmp>
 2b4:	cmp	r0, #0
 2b8:	bne	2ec <set_opt+0xf0>
 2bc:	ldr	r2, [pc, #1536]	; 8c4 <set_opt+0x6c8>
 2c0:	ldr	r0, [r2]
 2c4:	ldr	r1, [pc, #1428]	; 860 <set_opt+0x664>
 2c8:	ldr	r2, [pc, #1428]	; 864 <set_opt+0x668>
 2cc:	bl	0 <fprintf>
 2d0:	ldr	r1, [pc, #1516]	; 8c4 <set_opt+0x6c8>
 2d4:	ldr	r0, [r1]
 2d8:	ldr	r1, [pc, #1472]	; 8a0 <set_opt+0x6a4>
 2dc:	ldr	r2, [pc, #1520]	; 8d4 <set_opt+0x6d8>
 2e0:	bl	0 <fprintf>
 2e4:	mov	r0, #0
 2e8:	bl	0 <exit>
 2ec:	ldr	r0, [pc, #1432]	; 88c <set_opt+0x690>
 2f0:	mov	r1, r5
 2f4:	bl	0 <strcmp>
 2f8:	cmp	r0, #0
 2fc:	bne	310 <set_opt+0x114>
 300:	mov	r0, #1
 304:	str	r0, [r8, #108]	; 0x6c
 308:	mov	r6, #0
 30c:	b	82c <set_opt+0x630>
 310:	ldr	r0, [pc, #1344]	; 858 <set_opt+0x65c>
 314:	mov	r1, r5
 318:	bl	0 <strcmp>
 31c:	cmp	r0, #0
 320:	bne	334 <set_opt+0x138>
 324:	mov	r2, #1
 328:	str	r2, [r8, #180]	; 0xb4
 32c:	mov	r6, #0
 330:	b	82c <set_opt+0x630>
 334:	ldr	r0, [pc, #1384]	; 8a4 <set_opt+0x6a8>
 338:	mov	r1, r5
 33c:	bl	0 <strcmp>
 340:	cmp	r0, #0
 344:	bne	358 <set_opt+0x15c>
 348:	mov	r0, #1
 34c:	str	r0, [r8, #164]	; 0xa4
 350:	mov	r6, #0
 354:	b	82c <set_opt+0x630>
 358:	ldr	r0, [pc, #1328]	; 890 <set_opt+0x694>
 35c:	mov	r1, r5
 360:	bl	0 <strcmp>
 364:	cmp	r0, #0
 368:	bne	37c <set_opt+0x180>
 36c:	mov	r0, #1
 370:	str	r0, [r8, #168]	; 0xa8
 374:	mov	r6, #0
 378:	b	82c <set_opt+0x630>
 37c:	ldr	r0, [pc, #1352]	; 8cc <set_opt+0x6d0>
 380:	mov	r1, r5
 384:	bl	0 <strcmp>
 388:	cmp	r0, #0
 38c:	bne	3a8 <set_opt+0x1ac>
 390:	mov	r3, #1
 394:	str	r3, [r8, #164]	; 0xa4
 398:	mov	ip, #1
 39c:	str	ip, [r8, #168]	; 0xa8
 3a0:	mov	r6, #0
 3a4:	b	82c <set_opt+0x630>
 3a8:	ldr	r0, [pc, #1220]	; 874 <set_opt+0x678>
 3ac:	mov	r2, r4
 3b0:	mov	r1, r5
 3b4:	bl	198 <match_long_arg>
 3b8:	cmp	r0, #0
 3bc:	beq	424 <set_opt+0x228>
 3c0:	ldr	r3, [pc, #1276]	; 8c4 <set_opt+0x6c8>
 3c4:	ldr	r0, [r3]
 3c8:	ldr	r1, [pc, #1248]	; 8b0 <set_opt+0x6b4>
 3cc:	bl	0 <fprintf>
 3d0:	cmp	r7, #0
 3d4:	bne	3f0 <set_opt+0x1f4>
 3d8:	ldr	r1, [pc, #1252]	; 8c4 <set_opt+0x6c8>
 3dc:	ldr	r0, [r1]
 3e0:	ldr	r1, [pc, #1156]	; 86c <set_opt+0x670>
 3e4:	bl	0 <fprintf>
 3e8:	mvn	r0, #0
 3ec:	bl	0 <exit>
 3f0:	mov	r0, r7
 3f4:	bl	b8 <parse_bool_arg>
 3f8:	str	r0, [r8, #184]	; 0xb8
 3fc:	cmp	r0, #0
 400:	bge	40c <set_opt+0x210>
 404:	mvn	r0, #0
 408:	bl	0 <exit>
 40c:	cmp	r9, #0
 410:	bne	41c <set_opt+0x220>
 414:	mov	r6, #2
 418:	b	82c <set_opt+0x630>
 41c:	mov	r6, #0
 420:	b	82c <set_opt+0x630>
 424:	ldr	r0, [pc, #1152]	; 8ac <set_opt+0x6b0>
 428:	mov	r2, r4
 42c:	mov	r1, r5
 430:	bl	198 <match_long_arg>
 434:	cmp	r0, #0
 438:	beq	490 <set_opt+0x294>
 43c:	cmp	r7, #0
 440:	bne	45c <set_opt+0x260>
 444:	ldr	r1, [pc, #1144]	; 8c4 <set_opt+0x6c8>
 448:	ldr	r0, [r1]
 44c:	ldr	r1, [pc, #1024]	; 854 <set_opt+0x658>
 450:	bl	0 <fprintf>
 454:	mvn	r0, #0
 458:	bl	0 <exit>
 45c:	mov	r0, r7
 460:	bl	b8 <parse_bool_arg>
 464:	str	r0, [r8, #188]	; 0xbc
 468:	cmp	r0, #0
 46c:	bge	478 <set_opt+0x27c>
 470:	mvn	r0, #0
 474:	bl	0 <exit>
 478:	cmp	r9, #0
 47c:	bne	488 <set_opt+0x28c>
 480:	mov	r6, #2
 484:	b	82c <set_opt+0x630>
 488:	mov	r6, #0
 48c:	b	82c <set_opt+0x630>
 490:	ldr	r0, [pc, #1072]	; 8c8 <set_opt+0x6cc>
 494:	mov	r2, r4
 498:	mov	r1, r5
 49c:	bl	198 <match_long_arg>
 4a0:	cmp	r0, #0
 4a4:	beq	4ec <set_opt+0x2f0>
 4a8:	cmp	r7, #0
 4ac:	bne	4c8 <set_opt+0x2cc>
 4b0:	ldr	r3, [pc, #1036]	; 8c4 <set_opt+0x6c8>
 4b4:	ldr	r0, [r3]
 4b8:	ldr	r1, [pc, #936]	; 868 <set_opt+0x66c>
 4bc:	bl	0 <fprintf>
 4c0:	mvn	r0, #0
 4c4:	bl	0 <exit>
 4c8:	str	r7, [r8, #116]	; 0x74
 4cc:	mov	r1, #1
 4d0:	str	r1, [r8, #112]	; 0x70
 4d4:	cmp	r9, #0
 4d8:	bne	4e4 <set_opt+0x2e8>
 4dc:	mov	r6, #2
 4e0:	b	82c <set_opt+0x630>
 4e4:	mov	r6, #0
 4e8:	b	82c <set_opt+0x630>
 4ec:	ldr	r0, [pc, #964]	; 8b8 <set_opt+0x6bc>
 4f0:	mov	r2, r4
 4f4:	mov	r1, r5
 4f8:	bl	198 <match_long_arg>
 4fc:	cmp	r0, #0
 500:	beq	540 <set_opt+0x344>
 504:	cmp	r7, #0
 508:	bne	524 <set_opt+0x328>
 50c:	ldr	ip, [pc, #944]	; 8c4 <set_opt+0x6c8>
 510:	ldr	r0, [ip]
 514:	ldr	r1, [pc, #896]	; 89c <set_opt+0x6a0>
 518:	bl	0 <fprintf>
 51c:	mvn	r0, #0
 520:	bl	0 <exit>
 524:	str	r7, [r8, #120]	; 0x78
 528:	cmp	r9, #0
 52c:	bne	538 <set_opt+0x33c>
 530:	mov	r6, #2
 534:	b	82c <set_opt+0x630>
 538:	mov	r6, #0
 53c:	b	82c <set_opt+0x630>
 540:	ldr	r0, [pc, #832]	; 888 <set_opt+0x68c>
 544:	mov	r2, r4
 548:	mov	r1, r5
 54c:	bl	198 <match_long_arg>
 550:	cmp	r0, #0
 554:	beq	594 <set_opt+0x398>
 558:	cmp	r7, #0
 55c:	bne	578 <set_opt+0x37c>
 560:	ldr	r3, [pc, #860]	; 8c4 <set_opt+0x6c8>
 564:	ldr	r0, [r3]
 568:	ldr	r1, [pc, #808]	; 898 <set_opt+0x69c>
 56c:	bl	0 <fprintf>
 570:	mvn	r0, #0
 574:	bl	0 <exit>
 578:	str	r7, [r8, #124]	; 0x7c
 57c:	cmp	r9, #0
 580:	bne	58c <set_opt+0x390>
 584:	mov	r6, #2
 588:	b	82c <set_opt+0x630>
 58c:	mov	r6, #0
 590:	b	82c <set_opt+0x630>
 594:	ldr	r0, [pc, #800]	; 8bc <set_opt+0x6c0>
 598:	mov	r2, r4
 59c:	mov	r1, r5
 5a0:	bl	198 <match_long_arg>
 5a4:	cmp	r0, #0
 5a8:	beq	5e8 <set_opt+0x3ec>
 5ac:	cmp	r7, #0
 5b0:	bne	5cc <set_opt+0x3d0>
 5b4:	ldr	r2, [pc, #776]	; 8c4 <set_opt+0x6c8>
 5b8:	ldr	r0, [r2]
 5bc:	ldr	r1, [pc, #752]	; 8b4 <set_opt+0x6b8>
 5c0:	bl	0 <fprintf>
 5c4:	mvn	r0, #0
 5c8:	bl	0 <exit>
 5cc:	str	r7, [r8, #196]	; 0xc4
 5d0:	cmp	r9, #0
 5d4:	bne	5e0 <set_opt+0x3e4>
 5d8:	mov	r6, #2
 5dc:	b	82c <set_opt+0x630>
 5e0:	mov	r6, #0
 5e4:	b	82c <set_opt+0x630>
 5e8:	ldr	r0, [pc, #720]	; 8c0 <set_opt+0x6c4>
 5ec:	mov	r2, r4
 5f0:	mov	r1, r5
 5f4:	bl	198 <match_long_arg>
 5f8:	cmp	r0, #0
 5fc:	beq	63c <set_opt+0x440>
 600:	cmp	r7, #0
 604:	bne	620 <set_opt+0x424>
 608:	ldr	ip, [pc, #692]	; 8c4 <set_opt+0x6c8>
 60c:	ldr	r0, [ip]
 610:	ldr	r1, [pc, #620]	; 884 <set_opt+0x688>
 614:	bl	0 <fprintf>
 618:	mvn	r0, #0
 61c:	bl	0 <exit>
 620:	str	r7, [r8, #192]	; 0xc0
 624:	cmp	r9, #0
 628:	bne	634 <set_opt+0x438>
 62c:	mov	r6, #2
 630:	b	82c <set_opt+0x630>
 634:	mov	r6, #0
 638:	b	82c <set_opt+0x630>
 63c:	ldrb	ip, [r5]
 640:	cmp	ip, #100	; 0x64
 644:	bcs	730 <set_opt+0x534>
 648:	cmp	ip, #97	; 0x61
 64c:	bcs	6d8 <set_opt+0x4dc>
 650:	cmp	ip, #45	; 0x2d
 654:	beq	664 <set_opt+0x468>
 658:	cmp	ip, #73	; 0x49
 65c:	beq	680 <set_opt+0x484>
 660:	b	7ec <set_opt+0x5f0>
 664:	ldr	r2, [pc, #600]	; 8c4 <set_opt+0x6c8>
 668:	ldr	r0, [r2]
 66c:	ldr	r1, [pc, #508]	; 870 <set_opt+0x674>
 670:	mov	r2, r5
 674:	bl	0 <fprintf>
 678:	mvn	r0, #0
 67c:	bl	0 <exit>
 680:	ldrb	r1, [r5, #1]
 684:	cmp	r1, #0
 688:	bne	6b8 <set_opt+0x4bc>
 68c:	cmp	r7, #0
 690:	bne	6b0 <set_opt+0x4b4>
 694:	ldr	r1, [pc, #552]	; 8c4 <set_opt+0x6c8>
 698:	ldr	r0, [r1]
 69c:	ldr	r1, [pc, #468]	; 878 <set_opt+0x67c>
 6a0:	bl	0 <fprintf>
 6a4:	mvn	r0, #0
 6a8:	bl	0 <exit>
 6ac:	b	6c0 <set_opt+0x4c4>
 6b0:	mov	r6, #2
 6b4:	b	6c0 <set_opt+0x4c4>
 6b8:	mov	r6, #1
 6bc:	add	r7, r5, #1
 6c0:	ldr	r0, [r8, #208]	; 0xd0
 6c4:	add	r3, r0, #1
 6c8:	str	r3, [r8, #208]	; 0xd0
 6cc:	ldr	ip, [r8, #200]	; 0xc8
 6d0:	str	r7, [ip, r0, lsl #2]
 6d4:	b	82c <set_opt+0x630>
 6d8:	cmp	ip, #97	; 0x61
 6dc:	beq	6f8 <set_opt+0x4fc>
 6e0:	cmp	ip, #99	; 0x63
 6e4:	bne	7ec <set_opt+0x5f0>
 6e8:	mov	r0, #1
 6ec:	str	r0, [r8, #144]	; 0x90
 6f0:	mov	r6, #0
 6f4:	b	82c <set_opt+0x630>
 6f8:	mov	r2, #1
 6fc:	str	r2, [r8, #152]	; 0x98
 700:	mov	r0, #1
 704:	str	r0, [r8, #156]	; 0x9c
 708:	mov	r0, #1
 70c:	str	r0, [r8, #160]	; 0xa0
 710:	mov	r2, #1
 714:	str	r2, [r8, #144]	; 0x90
 718:	mov	r2, #1
 71c:	str	r2, [r8, #148]	; 0x94
 720:	mov	r1, #1
 724:	str	r1, [r8, #172]	; 0xac
 728:	mov	r6, #0
 72c:	b	82c <set_opt+0x630>
 730:	cmp	ip, #114	; 0x72
 734:	bcs	7c4 <set_opt+0x5c8>
 738:	cmp	ip, #100	; 0x64
 73c:	beq	7b4 <set_opt+0x5b8>
 740:	cmp	ip, #111	; 0x6f
 744:	bne	7ec <set_opt+0x5f0>
 748:	ldr	r0, [r8, #216]	; 0xd8
 74c:	cmp	r0, #0
 750:	beq	76c <set_opt+0x570>
 754:	ldr	r2, [pc, #360]	; 8c4 <set_opt+0x6c8>
 758:	ldr	r0, [r2]
 75c:	ldr	r1, [pc, #248]	; 85c <set_opt+0x660>
 760:	bl	0 <fprintf>
 764:	mvn	r0, #0
 768:	bl	0 <exit>
 76c:	ldrb	ip, [r5, #1]
 770:	cmp	ip, #0
 774:	bne	7a4 <set_opt+0x5a8>
 778:	cmp	r7, #0
 77c:	bne	79c <set_opt+0x5a0>
 780:	ldr	ip, [pc, #316]	; 8c4 <set_opt+0x6c8>
 784:	ldr	r0, [ip]
 788:	ldr	r1, [pc, #260]	; 894 <set_opt+0x698>
 78c:	bl	0 <fprintf>
 790:	mvn	r0, #0
 794:	bl	0 <exit>
 798:	b	7ac <set_opt+0x5b0>
 79c:	mov	r6, #2
 7a0:	b	7ac <set_opt+0x5b0>
 7a4:	mov	r6, #1
 7a8:	add	r7, r5, #1
 7ac:	str	r7, [r8, #216]	; 0xd8
 7b0:	b	82c <set_opt+0x630>
 7b4:	mov	r3, #1
 7b8:	str	r3, [r8, #112]	; 0x70
 7bc:	mov	r6, #0
 7c0:	b	82c <set_opt+0x630>
 7c4:	cmp	ip, #114	; 0x72
 7c8:	beq	820 <set_opt+0x624>
 7cc:	cmp	ip, #118	; 0x76
 7d0:	beq	810 <set_opt+0x614>
 7d4:	cmp	ip, #119	; 0x77
 7d8:	bne	7ec <set_opt+0x5f0>
 7dc:	mov	ip, #1
 7e0:	str	ip, [r8, #156]	; 0x9c
 7e4:	mov	r6, #0
 7e8:	b	82c <set_opt+0x630>
 7ec:	ldr	ip, [pc, #208]	; 8c4 <set_opt+0x6c8>
 7f0:	ldr	r0, [ip]
 7f4:	ldr	r1, [pc, #128]	; 87c <set_opt+0x680>
 7f8:	ldrb	r2, [r5]
 7fc:	bl	0 <fprintf>
 800:	mvn	r0, #0
 804:	bl	0 <exit>
 808:	mov	r6, #0
 80c:	b	82c <set_opt+0x630>
 810:	mov	r0, #1
 814:	str	r0, [r8, #160]	; 0xa0
 818:	mov	r6, #0
 81c:	b	82c <set_opt+0x630>
 820:	mov	r1, #1
 824:	str	r1, [r8, #172]	; 0xac
 828:	mov	r6, #0
 82c:	mov	r0, r6
 830:	ldr	r4, [sp, #8]
 834:	ldr	r5, [sp, #12]
 838:	ldr	r6, [sp, #16]
 83c:	ldr	r7, [sp, #20]
 840:	ldr	r8, [sp, #24]
 844:	ldr	r9, [sp, #28]
 848:	ldr	lr, [sp, #4]
 84c:	add	sp, sp, #32
 850:	bx	lr
 854:	.word	0x00001646
 858:	.word	0x0000016a
 85c:	.word	0x00000ec8
 860:	.word	0x000015e9
 864:	.word	0x00000fbc
 868:	.word	0x00000ff2
 86c:	.word	0x00000000
 870:	.word	0x00000067
 874:	.word	0x00000f62
 878:	.word	0x00000ef4
 87c:	.word	0x000001e7
 880:	.word	0x00000161
 884:	.word	0x000000d3
 888:	.word	0x000015f3
 88c:	.word	0x0000162f
 890:	.word	0x00000f4b
 894:	.word	0x0000020b
 898:	.word	0x00000f98
 89c:	.word	0x000001c1
 8a0:	.word	0x000000be
 8a4:	.word	0x00000030
 8a8:	.word	0x00000eee
 8ac:	.word	0x000001fc
 8b0:	.word	0x000000f0
 8b4:	.word	0x0000003d
 8b8:	.word	0x00000269
 8bc:	.word	0x00001637
 8c0:	.word	0x000000cb
 8c4:	.word	0x00000000
 8c8:	.word	0x00000f59
 8cc:	.word	0x000015ed
 8d0:	.word	0x00000000
 8d4:	.word	0x00001629

000008d8 <get_opt>:
 8d8:	mov	ip, sp
 8dc:	sub	sp, sp, #24
 8e0:	str	ip, [sp]
 8e4:	str	lr, [sp, #4]
 8e8:	str	r4, [sp, #8]
 8ec:	str	r5, [sp, #12]
 8f0:	str	r6, [sp, #16]
 8f4:	mov	r4, r2
 8f8:	mov	r5, r0
 8fc:	ldrb	r2, [r1, #1]
 900:	cmp	r2, #45	; 0x2d
 904:	bne	928 <get_opt+0x50>
 908:	add	r1, r1, #1
 90c:	mov	r2, r4
 910:	mov	r0, r5
 914:	bl	1fc <set_opt>
 918:	cmp	r0, #2
 91c:	moveq	r0, #1
 920:	movne	r0, #0
 924:	b	9a0 <get_opt+0xc8>
 928:	add	r6, r1, #1
 92c:	ldrb	r1, [r6]
 930:	cmp	r1, #0
 934:	bne	950 <get_opt+0x78>
 938:	ldr	ip, [pc, #124]	; 9bc <get_opt+0xe4>
 93c:	ldr	r0, [ip]
 940:	ldr	r1, [pc, #112]	; 9b8 <get_opt+0xe0>
 944:	bl	0 <fprintf>
 948:	mvn	r0, #0
 94c:	bl	0 <exit>
 950:	ldrb	r1, [r6]
 954:	cmp	r1, #0
 958:	beq	99c <get_opt+0xc4>
 95c:	mov	r2, r4
 960:	mov	r1, r6
 964:	mov	r0, r5
 968:	bl	1fc <set_opt>
 96c:	cmp	r0, #0
 970:	beq	994 <get_opt+0xbc>
 974:	cmp	r0, #1
 978:	beq	98c <get_opt+0xb4>
 97c:	cmp	r0, #2
 980:	bne	950 <get_opt+0x78>
 984:	mov	r0, #1
 988:	b	9a0 <get_opt+0xc8>
 98c:	mov	r0, #0
 990:	b	9a0 <get_opt+0xc8>
 994:	add	r6, r6, #1
 998:	b	950 <get_opt+0x78>
 99c:	mov	r0, #0
 9a0:	ldr	r4, [sp, #8]
 9a4:	ldr	r5, [sp, #12]
 9a8:	ldr	r6, [sp, #16]
 9ac:	ldr	lr, [sp, #4]
 9b0:	add	sp, sp, #24
 9b4:	bx	lr
 9b8:	.word	0x000001a4
 9bc:	.word	0x00000000

000009c0 <parse_opts>:
 9c0:	mov	ip, sp
 9c4:	sub	sp, sp, #24
 9c8:	str	ip, [sp]
 9cc:	str	lr, [sp, #4]
 9d0:	str	r4, [sp, #8]
 9d4:	str	r5, [sp, #12]
 9d8:	str	r6, [sp, #16]
 9dc:	str	r7, [sp, #20]
 9e0:	mov	r4, r2
 9e4:	mov	r5, r1
 9e8:	mov	r6, r0
 9ec:	mov	r7, #1
 9f0:	cmp	r7, r6
 9f4:	bge	a5c <parse_opts+0x9c>
 9f8:	ldr	r2, [r5, r7, lsl #2]
 9fc:	ldrb	r3, [r2]
 a00:	cmp	r3, #45	; 0x2d
 a04:	bne	a3c <parse_opts+0x7c>
 a08:	ldr	r1, [r5, r7, lsl #2]
 a0c:	add	r2, r7, #1
 a10:	cmp	r2, r6
 a14:	bge	a28 <parse_opts+0x68>
 a18:	lsl	ip, r7, #2
 a1c:	add	r2, r5, ip
 a20:	ldr	r2, [r2, #4]
 a24:	b	a2c <parse_opts+0x6c>
 a28:	mov	r2, #0
 a2c:	mov	r0, r4
 a30:	bl	8d8 <get_opt>
 a34:	add	r7, r7, r0
 a38:	b	a54 <parse_opts+0x94>
 a3c:	ldr	r1, [r4, #212]	; 0xd4
 a40:	add	ip, r1, #1
 a44:	str	ip, [r4, #212]	; 0xd4
 a48:	ldr	r2, [r4, #204]	; 0xcc
 a4c:	ldr	r0, [r5, r7, lsl #2]
 a50:	str	r0, [r2, r1, lsl #2]
 a54:	add	r7, r7, #1
 a58:	b	9f0 <parse_opts+0x30>
 a5c:	ldr	r4, [sp, #8]
 a60:	ldr	r5, [sp, #12]
 a64:	ldr	r6, [sp, #16]
 a68:	ldr	r7, [sp, #20]
 a6c:	ldr	lr, [sp, #4]
 a70:	add	sp, sp, #24
 a74:	bx	lr

00000a78 <main>:
 a78:	mov	ip, sp
 a7c:	sub	sp, sp, #248	; 0xf8
 a80:	str	ip, [sp]
 a84:	str	lr, [sp, #4]
 a88:	str	r4, [sp, #8]
 a8c:	str	r5, [sp, #12]
 a90:	str	r6, [sp, #16]
 a94:	str	r7, [sp, #20]
 a98:	mov	r6, r1
 a9c:	mov	r7, r0
 aa0:	mov	r4, #0
 aa4:	mov	r5, #0
 aa8:	cmp	r7, #2
 aac:	bge	ac4 <main+0x4c>
 ab0:	ldr	ip, [pc, #1116]	; f14 <main+0x49c>
 ab4:	ldr	r0, [ip]
 ab8:	bl	0 <usage>
 abc:	mvn	r0, #0
 ac0:	bl	0 <exit>
 ac4:	add	r0, sp, #24
 ac8:	bl	0 <flatcc_init_options>
 acc:	lsl	r0, r7, #2
 ad0:	bl	0 <malloc>
 ad4:	str	r0, [sp, #224]	; 0xe0
 ad8:	cmp	r0, #0
 adc:	bne	af8 <main+0x80>
 ae0:	ldr	r0, [pc, #1068]	; f14 <main+0x49c>
 ae4:	ldr	r0, [r0]
 ae8:	ldr	r1, [pc, #1072]	; f20 <main+0x4a8>
 aec:	bl	0 <fprintf>
 af0:	mvn	r0, #0
 af4:	bl	0 <exit>
 af8:	lsl	r0, r7, #2
 afc:	bl	0 <malloc>
 b00:	str	r0, [sp, #228]	; 0xe4
 b04:	cmp	r0, #0
 b08:	bne	b2c <main+0xb4>
 b0c:	ldr	r3, [pc, #1024]	; f14 <main+0x49c>
 b10:	ldr	r0, [r3]
 b14:	ldr	r1, [pc, #1028]	; f20 <main+0x4a8>
 b18:	bl	0 <fprintf>
 b1c:	ldr	r0, [sp, #224]	; 0xe0
 b20:	bl	0 <free>
 b24:	mvn	r0, #0
 b28:	bl	0 <exit>
 b2c:	add	r2, sp, #24
 b30:	mov	r1, r6
 b34:	mov	r0, r7
 b38:	bl	9c0 <parse_opts>
 b3c:	ldr	r1, [sp, #180]	; 0xb4
 b40:	cmp	r1, #0
 b44:	beq	b5c <main+0xe4>
 b48:	ldr	ip, [sp, #168]	; 0xa8
 b4c:	cmp	ip, #0
 b50:	movne	r1, #1
 b54:	moveq	r1, #0
 b58:	b	b60 <main+0xe8>
 b5c:	mov	r1, #0
 b60:	str	r1, [sp, #172]	; 0xac
 b64:	ldr	r2, [sp, #236]	; 0xec
 b68:	cmp	r2, #0
 b6c:	bne	c04 <main+0x18c>
 b70:	ldr	r2, [sp, #168]	; 0xa8
 b74:	cmp	r2, #0
 b78:	beq	b90 <main+0x118>
 b7c:	ldr	r2, [sp, #204]	; 0xcc
 b80:	cmp	r2, #0
 b84:	movne	r3, #1
 b88:	moveq	r3, #0
 b8c:	b	b94 <main+0x11c>
 b90:	mov	r3, #1
 b94:	cmp	r3, #0
 b98:	beq	bb0 <main+0x138>
 b9c:	ldr	r3, [pc, #880]	; f14 <main+0x49c>
 ba0:	ldr	r0, [r3]
 ba4:	ldr	r1, [pc, #868]	; f10 <main+0x498>
 ba8:	bl	0 <fprintf>
 bac:	b	eac <main+0x434>
 bb0:	add	r0, sp, #24
 bb4:	mov	r1, #0
 bb8:	mov	r2, #0
 bbc:	mov	r3, #0
 bc0:	bl	0 <flatcc_create_context>
 bc4:	mov	r4, r0
 bc8:	cmp	r4, #0
 bcc:	bne	be4 <main+0x16c>
 bd0:	ldr	ip, [pc, #828]	; f14 <main+0x49c>
 bd4:	ldr	r0, [ip]
 bd8:	ldr	r1, [pc, #836]	; f24 <main+0x4ac>
 bdc:	bl	0 <fprintf>
 be0:	b	eac <main+0x434>
 be4:	mov	r0, r4
 be8:	bl	0 <flatcc_generate_files>
 bec:	cmp	r0, #0
 bf0:	bne	eac <main+0x434>
 bf4:	mov	r0, r4
 bf8:	bl	0 <flatcc_destroy_context>
 bfc:	mov	r4, #0
 c00:	b	eb0 <main+0x438>
 c04:	ldr	r0, [sp, #176]	; 0xb0
 c08:	cmp	r0, #0
 c0c:	bne	c24 <main+0x1ac>
 c10:	ldr	r3, [sp, #180]	; 0xb4
 c14:	cmp	r3, #0
 c18:	movne	r0, #1
 c1c:	moveq	r0, #0
 c20:	b	c28 <main+0x1b0>
 c24:	mov	r0, #1
 c28:	cmp	r0, #0
 c2c:	bne	c44 <main+0x1cc>
 c30:	ldr	ip, [sp, #184]	; 0xb8
 c34:	cmp	ip, #0
 c38:	movne	r2, #1
 c3c:	moveq	r2, #0
 c40:	b	c48 <main+0x1d0>
 c44:	mov	r2, #1
 c48:	cmp	r2, #0
 c4c:	bne	c64 <main+0x1ec>
 c50:	ldr	ip, [sp, #168]	; 0xa8
 c54:	cmp	ip, #0
 c58:	movne	ip, #1
 c5c:	moveq	ip, #0
 c60:	b	c68 <main+0x1f0>
 c64:	mov	ip, #1
 c68:	cmp	ip, #0
 c6c:	bne	c84 <main+0x20c>
 c70:	ldr	r0, [sp, #172]	; 0xac
 c74:	cmp	r0, #0
 c78:	movne	r2, #1
 c7c:	moveq	r2, #0
 c80:	b	c88 <main+0x210>
 c84:	mov	r2, #1
 c88:	cmp	r2, #0
 c8c:	bne	ca4 <main+0x22c>
 c90:	ldr	r2, [sp, #188]	; 0xbc
 c94:	cmp	r2, #0
 c98:	movne	r2, #1
 c9c:	moveq	r2, #0
 ca0:	b	ca8 <main+0x230>
 ca4:	mov	r2, #1
 ca8:	cmp	r2, #0
 cac:	bne	cc4 <main+0x24c>
 cb0:	ldr	ip, [sp, #192]	; 0xc0
 cb4:	cmp	ip, #0
 cb8:	movne	r0, #1
 cbc:	moveq	r0, #0
 cc0:	b	cc8 <main+0x250>
 cc4:	mov	r0, #1
 cc8:	ldr	r1, [sp, #204]	; 0xcc
 ccc:	cmp	r1, #0
 cd0:	bne	d24 <main+0x2ac>
 cd4:	cmp	r0, #0
 cd8:	beq	cf0 <main+0x278>
 cdc:	ldr	r3, [sp, #180]	; 0xb4
 ce0:	cmp	r3, #0
 ce4:	movne	r1, #1
 ce8:	moveq	r1, #0
 cec:	b	cf4 <main+0x27c>
 cf0:	mov	r1, #1
 cf4:	cmp	r1, #0
 cf8:	bne	d1c <main+0x2a4>
 cfc:	ldr	ip, [sp, #184]	; 0xb8
 d00:	cmp	ip, #0
 d04:	movne	r1, #1
 d08:	moveq	r1, #0
 d0c:	cmp	r1, #0
 d10:	movne	r1, #1
 d14:	moveq	r1, #0
 d18:	b	d28 <main+0x2b0>
 d1c:	mov	r1, #1
 d20:	b	d28 <main+0x2b0>
 d24:	mov	r1, #0
 d28:	cmp	r1, #0
 d2c:	beq	d38 <main+0x2c0>
 d30:	mov	r2, #1
 d34:	str	r2, [sp, #176]	; 0xb0
 d38:	ldr	r1, [sp, #204]	; 0xcc
 d3c:	cmp	r1, #0
 d40:	bne	d4c <main+0x2d4>
 d44:	mov	r1, #0
 d48:	b	d58 <main+0x2e0>
 d4c:	cmp	r0, #0
 d50:	movne	r1, #1
 d54:	moveq	r1, #0
 d58:	cmp	r1, #0
 d5c:	beq	da0 <main+0x328>
 d60:	ldr	ip, [sp, #132]	; 0x84
 d64:	cmp	ip, #0
 d68:	beq	d80 <main+0x308>
 d6c:	ldr	r0, [pc, #416]	; f14 <main+0x49c>
 d70:	ldr	r0, [r0]
 d74:	ldr	r1, [pc, #416]	; f1c <main+0x4a4>
 d78:	bl	0 <fprintf>
 d7c:	b	eac <main+0x434>
 d80:	ldr	r3, [sp, #148]	; 0x94
 d84:	cmp	r3, #0
 d88:	beq	da0 <main+0x328>
 d8c:	ldr	ip, [pc, #384]	; f14 <main+0x49c>
 d90:	ldr	r0, [ip]
 d94:	ldr	r1, [pc, #364]	; f08 <main+0x490>
 d98:	bl	0 <fprintf>
 d9c:	b	eac <main+0x434>
 da0:	ldr	ip, [sp, #144]	; 0x90
 da4:	cmp	ip, #0
 da8:	beq	dc0 <main+0x348>
 dac:	ldr	ip, [sp, #140]	; 0x8c
 db0:	cmp	ip, #0
 db4:	moveq	r2, #1
 db8:	movne	r2, #0
 dbc:	b	dc4 <main+0x34c>
 dc0:	mov	r2, #0
 dc4:	cmp	r2, #0
 dc8:	beq	de0 <main+0x368>
 dcc:	ldr	r3, [pc, #320]	; f14 <main+0x49c>
 dd0:	ldr	r0, [r3]
 dd4:	ldr	r1, [pc, #316]	; f18 <main+0x4a0>
 dd8:	bl	0 <fprintf>
 ddc:	b	eac <main+0x434>
 de0:	ldr	r1, [sp, #132]	; 0x84
 de4:	cmp	r1, #0
 de8:	beq	e00 <main+0x388>
 dec:	ldr	r3, [sp, #148]	; 0x94
 df0:	cmp	r3, #0
 df4:	movne	r2, #1
 df8:	moveq	r2, #0
 dfc:	b	e04 <main+0x38c>
 e00:	mov	r2, #0
 e04:	cmp	r2, #0
 e08:	beq	e20 <main+0x3a8>
 e0c:	ldr	r3, [pc, #256]	; f14 <main+0x49c>
 e10:	ldr	r0, [r3]
 e14:	ldr	r1, [pc, #268]	; f28 <main+0x4b0>
 e18:	bl	0 <fprintf>
 e1c:	b	eac <main+0x434>
 e20:	mov	r7, #0
 e24:	ldr	r6, [sp, #228]	; 0xe4
 e28:	ldr	r0, [sp, #236]	; 0xec
 e2c:	cmp	r7, r0
 e30:	bge	eb0 <main+0x438>
 e34:	add	r0, sp, #24
 e38:	ldr	r1, [r6]
 e3c:	mov	r2, #0
 e40:	mov	r3, #0
 e44:	bl	0 <flatcc_create_context>
 e48:	mov	r4, r0
 e4c:	cmp	r4, #0
 e50:	bne	e68 <main+0x3f0>
 e54:	ldr	ip, [pc, #184]	; f14 <main+0x49c>
 e58:	ldr	r0, [ip]
 e5c:	ldr	r1, [pc, #192]	; f24 <main+0x4ac>
 e60:	bl	0 <fprintf>
 e64:	b	eac <main+0x434>
 e68:	ldr	r1, [r6]
 e6c:	mov	r0, r4
 e70:	bl	0 <flatcc_parse_file>
 e74:	cmp	r0, #0
 e78:	bne	eac <main+0x434>
 e7c:	mov	r0, r4
 e80:	bl	0 <flatcc_generate_files>
 e84:	cmp	r0, #0
 e88:	bne	eac <main+0x434>
 e8c:	mov	r0, r4
 e90:	bl	0 <flatcc_destroy_context>
 e94:	mov	r4, #0
 e98:	mov	r1, #1
 e9c:	str	r1, [sp, #152]	; 0x98
 ea0:	add	r7, r7, #1
 ea4:	add	r6, r6, #4
 ea8:	b	e28 <main+0x3b0>
 eac:	mvn	r5, #0
 eb0:	cmp	r4, #0
 eb4:	beq	ec0 <main+0x448>
 eb8:	mov	r0, r4
 ebc:	bl	0 <flatcc_destroy_context>
 ec0:	cmp	r5, #0
 ec4:	beq	ed8 <main+0x460>
 ec8:	ldr	r0, [pc, #68]	; f14 <main+0x49c>
 ecc:	ldr	r0, [r0]
 ed0:	ldr	r1, [pc, #52]	; f0c <main+0x494>
 ed4:	bl	0 <fprintf>
 ed8:	ldr	r0, [sp, #224]	; 0xe0
 edc:	bl	0 <free>
 ee0:	ldr	r0, [sp, #228]	; 0xe4
 ee4:	bl	0 <free>
 ee8:	mov	r0, r5
 eec:	ldr	r4, [sp, #8]
 ef0:	ldr	r5, [sp, #12]
 ef4:	ldr	r6, [sp, #16]
 ef8:	ldr	r7, [sp, #20]
 efc:	ldr	lr, [sp, #4]
 f00:	add	sp, sp, #248	; 0xf8
 f04:	bx	lr
 f08:	.word	0x00001598
 f0c:	.word	0x00000eb9
 f10:	.word	0x000015d3
 f14:	.word	0x00000000
 f18:	.word	0x000015fc
 f1c:	.word	0x00000f11
 f20:	.word	0x000000a3
 f24:	.word	0x00000172
 f28:	.word	0x0000007c
