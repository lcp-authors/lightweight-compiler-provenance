
../repos/prog2/0.11.2:     file format elf32-littlearm


Disassembly of section .init:

000103a4 <.init>:
   103a4:	push	{r3, lr}
   103a8:	bl	10460 <abort@plt+0x3c>
   103ac:	pop	{r3, pc}

Disassembly of section .plt:

000103b0 <strcmp@plt-0x14>:
   103b0:	push	{lr}		; (str lr, [sp, #-4]!)
   103b4:	ldr	lr, [pc, #4]	; 103c0 <strcmp@plt-0x4>
   103b8:	add	lr, pc, lr
   103bc:	ldr	pc, [lr, #8]!
   103c0:	andeq	r0, r1, r0, asr #24

000103c4 <strcmp@plt>:
   103c4:	add	ip, pc, #0, 12
   103c8:	add	ip, ip, #16, 20	; 0x10000
   103cc:	ldr	pc, [ip, #3136]!	; 0xc40

000103d0 <printf@plt>:
   103d0:	add	ip, pc, #0, 12
   103d4:	add	ip, ip, #16, 20	; 0x10000
   103d8:	ldr	pc, [ip, #3128]!	; 0xc38

000103dc <strcat@plt>:
   103dc:	add	ip, pc, #0, 12
   103e0:	add	ip, ip, #16, 20	; 0x10000
   103e4:	ldr	pc, [ip, #3120]!	; 0xc30

000103e8 <strcpy@plt>:
   103e8:	add	ip, pc, #0, 12
   103ec:	add	ip, ip, #16, 20	; 0x10000
   103f0:	ldr	pc, [ip, #3112]!	; 0xc28

000103f4 <__libc_start_main@plt>:
   103f4:	add	ip, pc, #0, 12
   103f8:	add	ip, ip, #16, 20	; 0x10000
   103fc:	ldr	pc, [ip, #3104]!	; 0xc20

00010400 <scanf@plt>:
   10400:	add	ip, pc, #0, 12
   10404:	add	ip, ip, #16, 20	; 0x10000
   10408:	ldr	pc, [ip, #3096]!	; 0xc18

0001040c <__gmon_start__@plt>:
   1040c:	add	ip, pc, #0, 12
   10410:	add	ip, ip, #16, 20	; 0x10000
   10414:	ldr	pc, [ip, #3088]!	; 0xc10

00010418 <strlen@plt>:
   10418:	add	ip, pc, #0, 12
   1041c:	add	ip, ip, #16, 20	; 0x10000
   10420:	ldr	pc, [ip, #3080]!	; 0xc08

00010424 <abort@plt>:
   10424:	add	ip, pc, #0, 12
   10428:	add	ip, ip, #16, 20	; 0x10000
   1042c:	ldr	pc, [ip, #3072]!	; 0xc00

Disassembly of section .text:

00010430 <.text>:
   10430:	bleq	4c574 <abort@plt+0x3c150>
   10434:	cdpeq	0, 0, cr15, cr0, cr15, {2}
   10438:	strbtmi	fp, [sl], -r2, lsl #24
   1043c:	strlt	fp, [r1], #-1028	; 0xfffffbfc
   10440:			; <UNDEFINED> instruction: 0xc010f8df
   10444:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
   10448:	blmi	12245c <abort@plt+0x112038>
   1044c:	svc	0x00d2f7ff
   10450:	svc	0x00e8f7ff
   10454:	andeq	r0, r1, sp, asr #16
   10458:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1045c:	andeq	r0, r1, sp, lsl #16
   10460:	ldr	r3, [pc, #20]	; 1047c <abort@plt+0x58>
   10464:	ldr	r2, [pc, #20]	; 10480 <abort@plt+0x5c>
   10468:	add	r3, pc, r3
   1046c:	ldr	r2, [r3, r2]
   10470:	cmp	r2, #0
   10474:	bxeq	lr
   10478:	b	1040c <__gmon_start__@plt>
   1047c:	muleq	r1, r0, fp
   10480:	andeq	r0, r0, r0, lsr r0
   10484:	eorseq	pc, ip, r1, asr #4
   10488:	andeq	pc, r2, r0, asr #5
   1048c:	teqeq	ip, #268435460	; 0x10000004	; <UNPREDICTABLE>
   10490:	movweq	pc, #8896	; 0x22c0	; <UNPREDICTABLE>
   10494:	andle	r4, r5, r3, lsl #5
   10498:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   1049c:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   104a0:	ldrmi	fp, [r8, -r3, lsl #2]
   104a4:	svclt	0x00004770
   104a8:	eorseq	pc, ip, r1, asr #4
   104ac:	andeq	pc, r2, r0, asr #5
   104b0:	teqeq	ip, r1, asr #4	; <UNPREDICTABLE>
   104b4:	smlabteq	r2, r0, r2, pc	; <UNPREDICTABLE>
   104b8:	svceq	0x00d91a0b
   104bc:			; <UNDEFINED> instruction: 0x01a3eb01
   104c0:	andle	r1, r5, r9, asr #32
   104c4:	movweq	pc, #576	; 0x240	; <UNPREDICTABLE>
   104c8:	movweq	pc, #704	; 0x2c0	; <UNPREDICTABLE>
   104cc:	ldrmi	fp, [r8, -r3, lsl #2]
   104d0:	svclt	0x00004770
   104d4:	vqrshl.s8	d27, d0, d1
   104d8:	vmvn.i32	d16, #786432	; 0x000c0000
   104dc:	stmdavc	r3!, {r1, sl}
   104e0:			; <UNDEFINED> instruction: 0xf7ffb91b
   104e4:	movwcs	pc, #8143	; 0x1fcf	; <UNPREDICTABLE>
   104e8:	ldclt	0, cr7, [r0, #-140]	; 0xffffff74
   104ec:	svclt	0x0000e7dc
   104f0:	mov	ip, sp
   104f4:	sub	sp, sp, #136	; 0x88
   104f8:	str	ip, [sp]
   104fc:	str	lr, [sp, #4]
   10500:	str	r4, [sp, #8]
   10504:	mov	r0, #0
   10508:	strb	r0, [sp, #40]	; 0x28
   1050c:	mov	r0, #0
   10510:	strb	r0, [sp, #41]	; 0x29
   10514:	mov	r0, #0
   10518:	strb	r0, [sp, #42]	; 0x2a
   1051c:	mov	r0, #0
   10520:	strb	r0, [sp, #43]	; 0x2b
   10524:	mov	r0, #0
   10528:	strb	r0, [sp, #44]	; 0x2c
   1052c:	mov	r0, #0
   10530:	strb	r0, [sp, #45]	; 0x2d
   10534:	mov	r0, #0
   10538:	strb	r0, [sp, #46]	; 0x2e
   1053c:	mov	r0, #0
   10540:	strb	r0, [sp, #47]	; 0x2f
   10544:	mov	r0, #0
   10548:	strb	r0, [sp, #48]	; 0x30
   1054c:	mov	r0, #0
   10550:	strb	r0, [sp, #49]	; 0x31
   10554:	mov	r0, #0
   10558:	strb	r0, [sp, #50]	; 0x32
   1055c:	mov	r0, #0
   10560:	strb	r0, [sp, #51]	; 0x33
   10564:	mov	r0, #0
   10568:	strb	r0, [sp, #52]	; 0x34
   1056c:	mov	r0, #0
   10570:	strb	r0, [sp, #53]	; 0x35
   10574:	mov	r0, #0
   10578:	strb	r0, [sp, #54]	; 0x36
   1057c:	mov	r0, #0
   10580:	strb	r0, [sp, #55]	; 0x37
   10584:	mov	r0, #0
   10588:	strb	r0, [sp, #56]	; 0x38
   1058c:	mov	r0, #0
   10590:	strb	r0, [sp, #57]	; 0x39
   10594:	mov	r0, #0
   10598:	strb	r0, [sp, #58]	; 0x3a
   1059c:	mov	r0, #0
   105a0:	strb	r0, [sp, #59]	; 0x3b
   105a4:	mov	r0, #0
   105a8:	strb	r0, [sp, #60]	; 0x3c
   105ac:	mov	r0, #0
   105b0:	strb	r0, [sp, #61]	; 0x3d
   105b4:	mov	r0, #0
   105b8:	strb	r0, [sp, #62]	; 0x3e
   105bc:	mov	r0, #0
   105c0:	strb	r0, [sp, #63]	; 0x3f
   105c4:	mov	r0, #0
   105c8:	strb	r0, [sp, #64]	; 0x40
   105cc:	mov	r0, #0
   105d0:	strb	r0, [sp, #65]	; 0x41
   105d4:	ldr	r0, [pc, #160]	; 1067c <abort@plt+0x258>
   105d8:	add	r1, sp, #24
   105dc:	bl	10400 <scanf@plt>
   105e0:	ldrb	r0, [sp, #24]
   105e4:	cmp	r0, #46	; 0x2e
   105e8:	beq	10664 <abort@plt+0x240>
   105ec:	ldr	r0, [pc, #140]	; 10680 <abort@plt+0x25c>
   105f0:	add	r1, sp, #16
   105f4:	bl	10400 <scanf@plt>
   105f8:	mov	r4, #0
   105fc:	add	r0, sp, #24
   10600:	add	r1, sp, #40	; 0x28
   10604:	ldr	r2, [sp, #16]
   10608:	bl	10794 <abort@plt+0x370>
   1060c:	add	r0, sp, #40	; 0x28
   10610:	add	r1, sp, #72	; 0x48
   10614:	bl	10684 <abort@plt+0x260>
   10618:	cmp	r4, #0
   1061c:	bne	105d4 <abort@plt+0x1b0>
   10620:	add	r0, sp, #40	; 0x28
   10624:	add	r1, sp, #72	; 0x48
   10628:	bl	103c4 <strcmp@plt>
   1062c:	mov	r1, #1
   10630:	cmp	r0, #0
   10634:	moveq	r4, r1
   10638:	movne	r4, r4
   1063c:	ldr	r0, [pc, #52]	; 10678 <abort@plt+0x254>
   10640:	add	r1, sp, #40	; 0x28
   10644:	bl	103d0 <printf@plt>
   10648:	add	r0, sp, #104	; 0x68
   1064c:	add	r1, sp, #40	; 0x28
   10650:	bl	103e8 <strcpy@plt>
   10654:	add	r0, sp, #104	; 0x68
   10658:	add	r1, sp, #40	; 0x28
   1065c:	bl	1070c <abort@plt+0x2e8>
   10660:	b	10618 <abort@plt+0x1f4>
   10664:	mov	r0, #0
   10668:	ldr	r4, [sp, #8]
   1066c:	ldr	lr, [sp, #4]
   10670:	add	sp, sp, #136	; 0x88
   10674:	bx	lr
   10678:	strdeq	r0, [r1], -r2
   1067c:	andeq	r0, r1, ip, ror #17
   10680:	andeq	r0, r1, pc, ror #17
   10684:	mov	ip, sp
   10688:	sub	sp, sp, #24
   1068c:	str	ip, [sp]
   10690:	str	lr, [sp, #4]
   10694:	str	r4, [sp, #8]
   10698:	str	r5, [sp, #12]
   1069c:	str	r6, [sp, #16]
   106a0:	mov	r5, r1
   106a4:	mov	r4, r0
   106a8:	mov	r0, r4
   106ac:	bl	10418 <strlen@plt>
   106b0:	add	r0, r4, r0
   106b4:	sub	lr, r0, #4096	; 0x1000
   106b8:	ldrb	r1, [lr, #4095]	; 0xfff
   106bc:	strb	r1, [r5]
   106c0:	mov	r6, #1
   106c4:	mov	r0, r4
   106c8:	bl	10418 <strlen@plt>
   106cc:	cmp	r6, r0
   106d0:	bcs	106ec <abort@plt+0x2c8>
   106d4:	add	ip, r4, r6
   106d8:	sub	lr, ip, #4096	; 0x1000
   106dc:	ldrb	r0, [lr, #4095]	; 0xfff
   106e0:	strb	r0, [r5, r6]
   106e4:	add	r6, r6, #1
   106e8:	b	106c4 <abort@plt+0x2a0>
   106ec:	mov	r3, #0
   106f0:	strb	r3, [r5, r6]
   106f4:	ldr	r4, [sp, #8]
   106f8:	ldr	r5, [sp, #12]
   106fc:	ldr	r6, [sp, #16]
   10700:	ldr	lr, [sp, #4]
   10704:	add	sp, sp, #24
   10708:	bx	lr
   1070c:	mov	ip, sp
   10710:	sub	sp, sp, #24
   10714:	str	ip, [sp]
   10718:	str	lr, [sp, #4]
   1071c:	str	r4, [sp, #8]
   10720:	str	r5, [sp, #12]
   10724:	str	r6, [sp, #16]
   10728:	mov	r5, r1
   1072c:	mov	r4, r0
   10730:	mov	r0, r4
   10734:	bl	10418 <strlen@plt>
   10738:	add	r0, r5, r0
   1073c:	ldrb	r1, [r4]
   10740:	sub	lr, r0, #4096	; 0x1000
   10744:	strb	r1, [lr, #4095]	; 0xfff
   10748:	mov	r6, #1
   1074c:	mov	r0, r4
   10750:	bl	10418 <strlen@plt>
   10754:	cmp	r6, r0
   10758:	bcs	10774 <abort@plt+0x350>
   1075c:	add	ip, r5, r6
   10760:	ldrb	r0, [r4, r6]
   10764:	sub	lr, ip, #4096	; 0x1000
   10768:	strb	r0, [lr, #4095]	; 0xfff
   1076c:	add	r6, r6, #1
   10770:	b	1074c <abort@plt+0x328>
   10774:	mov	r3, #0
   10778:	strb	r3, [r5, r6]
   1077c:	ldr	r4, [sp, #8]
   10780:	ldr	r5, [sp, #12]
   10784:	ldr	r6, [sp, #16]
   10788:	ldr	lr, [sp, #4]
   1078c:	add	sp, sp, #24
   10790:	bx	lr
   10794:	mov	ip, sp
   10798:	sub	sp, sp, #24
   1079c:	str	ip, [sp]
   107a0:	str	lr, [sp, #4]
   107a4:	str	r4, [sp, #8]
   107a8:	str	r5, [sp, #12]
   107ac:	str	r6, [sp, #16]
   107b0:	str	r7, [sp, #20]
   107b4:	mov	r4, r2
   107b8:	mov	r5, r1
   107bc:	mov	r6, r0
   107c0:	ldr	r1, [pc, #64]	; 10808 <abort@plt+0x3e4>
   107c4:	mov	r0, r5
   107c8:	bl	103e8 <strcpy@plt>
   107cc:	mov	r7, #0
   107d0:	cmp	r7, r4
   107d4:	bge	107ec <abort@plt+0x3c8>
   107d8:	mov	r1, r6
   107dc:	mov	r0, r5
   107e0:	bl	103dc <strcat@plt>
   107e4:	add	r7, r7, #1
   107e8:	b	107d0 <abort@plt+0x3ac>
   107ec:	ldr	r4, [sp, #8]
   107f0:	ldr	r5, [sp, #12]
   107f4:	ldr	r6, [sp, #16]
   107f8:	ldr	r7, [sp, #20]
   107fc:	ldr	lr, [sp, #4]
   10800:	add	sp, sp, #24
   10804:	bx	lr
   10808:	strdeq	r0, [r1], -r6
   1080c:	mvnsmi	lr, #737280	; 0xb4000
   10810:	cfmadd32mi	mvax0, mvfx4, mvfx12, mvfx7
   10814:	strmi	r4, [r8], ip, lsl #26
   10818:			; <UNDEFINED> instruction: 0x4691447e
   1081c:			; <UNDEFINED> instruction: 0xf7ff447d
   10820:	blne	1dcbf30 <abort@plt+0x1dbbb0c>
   10824:	strhle	r1, [sl], -r6
   10828:	strcs	r3, [r0], #-3332	; 0xfffff2fc
   1082c:	svccc	0x0004f855
   10830:	strbmi	r4, [r1], -sl, asr #12
   10834:	strcc	r4, [r1], #-1592	; 0xfffff9c8
   10838:	adcmi	r4, r6, #152, 14	; 0x2600000
   1083c:	pop	{r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}
   10840:	svclt	0x000083f8
   10844:	strdeq	r0, [r1], -r8
   10848:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1084c:	svclt	0x00004770

Disassembly of section .fini:

00010850 <.fini>:
   10850:	push	{r3, lr}
   10854:	pop	{r3, pc}
