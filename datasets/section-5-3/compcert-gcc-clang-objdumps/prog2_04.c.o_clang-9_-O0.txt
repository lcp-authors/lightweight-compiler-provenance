
../compcert-repos/prog2/CMakeFiles/0.4.dir/Aula00_Conceitos_base/04.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <ordenado>:
   0:	sub	sp, sp, #20
   4:	str	r0, [sp, #12]
   8:	str	r1, [sp, #8]
   c:	ldr	r0, [sp, #12]
  10:	ldr	r0, [r0]
  14:	str	r0, [sp]
  18:	movw	r0, #1
  1c:	str	r0, [sp, #4]
  20:	ldr	r0, [sp, #4]
  24:	ldr	r1, [sp, #8]
  28:	cmp	r0, r1
  2c:	bge	7c <ordenado+0x7c>
  30:	ldr	r0, [sp, #12]
  34:	ldr	r1, [sp, #4]
  38:	add	r0, r0, r1, lsl #2
  3c:	ldr	r0, [r0]
  40:	ldr	r1, [sp]
  44:	cmp	r0, r1
  48:	bge	58 <ordenado+0x58>
  4c:	movw	r0, #0
  50:	str	r0, [sp, #16]
  54:	b	84 <ordenado+0x84>
  58:	ldr	r0, [sp, #12]
  5c:	ldr	r1, [sp, #4]
  60:	add	r0, r0, r1, lsl #2
  64:	ldr	r0, [r0]
  68:	str	r0, [sp]
  6c:	ldr	r0, [sp, #4]
  70:	add	r0, r0, #1
  74:	str	r0, [sp, #4]
  78:	b	20 <ordenado+0x20>
  7c:	movw	r0, #1
  80:	str	r0, [sp, #16]
  84:	ldr	r0, [sp, #16]
  88:	add	sp, sp, #20
  8c:	bx	lr

00000090 <main>:
  90:	push	{fp, lr}
  94:	mov	fp, sp
  98:	sub	sp, sp, #24
  9c:	movw	r0, #0
  a0:	str	r0, [fp, #-4]
  a4:	movw	r0, #0
  a8:	movt	r0, #0
  ac:	bl	0 <printf>
  b0:	movw	r1, #0
  b4:	movt	r1, #0
  b8:	str	r0, [sp, #4]
  bc:	mov	r0, r1
  c0:	add	r1, sp, #8
  c4:	bl	0 <__isoc99_scanf>
  c8:	ldr	r1, [sp, #8]
  cc:	cmp	r1, #100	; 0x64
  d0:	ble	e8 <main+0x58>
  d4:	movw	r0, #0
  d8:	movt	r0, #0
  dc:	bl	0 <printf>
  e0:	movw	r1, #100	; 0x64
  e4:	str	r1, [sp, #8]
  e8:	ldr	r0, [sp, #8]
  ec:	lsl	r0, r0, #2
  f0:	bl	0 <malloc>
  f4:	str	r0, [sp, #12]
  f8:	movw	r0, #0
  fc:	str	r0, [fp, #-8]
 100:	ldr	r0, [fp, #-8]
 104:	ldr	r1, [sp, #8]
 108:	cmp	r0, r1
 10c:	bge	154 <main+0xc4>
 110:	ldr	r0, [fp, #-8]
 114:	add	r1, r0, #1
 118:	movw	r0, #0
 11c:	movt	r0, #0
 120:	bl	0 <printf>
 124:	ldr	r1, [sp, #12]
 128:	ldr	r2, [fp, #-8]
 12c:	add	r1, r1, r2, lsl #2
 130:	movw	r2, #0
 134:	movt	r2, #0
 138:	str	r0, [sp]
 13c:	mov	r0, r2
 140:	bl	0 <__isoc99_scanf>
 144:	ldr	r0, [fp, #-8]
 148:	add	r0, r0, #1
 14c:	str	r0, [fp, #-8]
 150:	b	100 <main+0x70>
 154:	ldr	r0, [sp, #12]
 158:	ldr	r1, [sp, #8]
 15c:	bl	0 <ordenado>
 160:	cmp	r0, #0
 164:	beq	1dc <main+0x14c>
 168:	movw	r0, #0
 16c:	movt	r0, #0
 170:	bl	0 <printf>
 174:	ldr	r1, [sp, #8]
 178:	sub	r1, r1, #1
 17c:	str	r1, [fp, #-8]
 180:	ldr	r0, [fp, #-8]
 184:	cmp	r0, #0
 188:	ble	1bc <main+0x12c>
 18c:	ldr	r0, [sp, #12]
 190:	ldr	r1, [fp, #-8]
 194:	add	r0, r0, r1, lsl #2
 198:	ldr	r1, [r0]
 19c:	movw	r0, #0
 1a0:	movt	r0, #0
 1a4:	bl	0 <printf>
 1a8:	ldr	r0, [fp, #-8]
 1ac:	mvn	r1, #0
 1b0:	add	r0, r0, r1
 1b4:	str	r0, [fp, #-8]
 1b8:	b	180 <main+0xf0>
 1bc:	ldr	r0, [sp, #12]
 1c0:	ldr	r1, [fp, #-8]
 1c4:	add	r0, r0, r1, lsl #2
 1c8:	ldr	r1, [r0]
 1cc:	movw	r0, #0
 1d0:	movt	r0, #0
 1d4:	bl	0 <printf>
 1d8:	b	1e8 <main+0x158>
 1dc:	movw	r0, #0
 1e0:	movt	r0, #0
 1e4:	bl	0 <printf>
 1e8:	movw	r0, #0
 1ec:	mov	sp, fp
 1f0:	pop	{fp, pc}
