
../compcert-repos/prog2/1.5:     file format elf32-littlearm


Disassembly of section .init:

000105c4 <.init>:
   105c4:	push	{r3, lr}
   105c8:	bl	10680 <_start@@Base+0x3c>
   105cc:	pop	{r3, pc}

Disassembly of section .plt:

000105d0 <strcmp@plt-0x14>:
   105d0:	push	{lr}		; (str lr, [sp, #-4]!)
   105d4:	ldr	lr, [pc, #4]	; 105e0 <strcmp@plt-0x4>
   105d8:	add	lr, pc, lr
   105dc:	ldr	pc, [lr, #8]!
   105e0:	andeq	r0, r1, r0, lsr #20

000105e4 <strcmp@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #16, 20	; 0x10000
   105ec:	ldr	pc, [ip, #2592]!	; 0xa20

000105f0 <fopen@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #16, 20	; 0x10000
   105f8:	ldr	pc, [ip, #2584]!	; 0xa18

000105fc <__libc_start_main@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #16, 20	; 0x10000
   10604:	ldr	pc, [ip, #2576]!	; 0xa10

00010608 <__gmon_start__@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2568]!	; 0xa08

00010614 <strlen@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2560]!	; 0xa00

00010620 <fgetc@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2552]!	; 0x9f8

0001062c <fseek@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2544]!	; 0x9f0

00010638 <abort@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2536]!	; 0x9e8

Disassembly of section .text:

00010644 <_start@@Base>:
   10644:	mov	fp, #0
   10648:	mov	lr, #0
   1064c:	pop	{r1}		; (ldr r1, [sp], #4)
   10650:	mov	r2, sp
   10654:	push	{r2}		; (str r2, [sp, #-4]!)
   10658:	push	{r0}		; (str r0, [sp, #-4]!)
   1065c:	ldr	ip, [pc, #16]	; 10674 <_start@@Base+0x30>
   10660:	push	{ip}		; (str ip, [sp, #-4]!)
   10664:	ldr	r0, [pc, #12]	; 10678 <_start@@Base+0x34>
   10668:	ldr	r3, [pc, #12]	; 1067c <_start@@Base+0x38>
   1066c:	bl	105fc <__libc_start_main@plt>
   10670:	bl	10638 <abort@plt>
   10674:	andeq	r0, r1, r0, asr sl
   10678:	andeq	r0, r1, r4, lsr r7
   1067c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10680:	ldr	r3, [pc, #20]	; 1069c <_start@@Base+0x58>
   10684:	ldr	r2, [pc, #20]	; 106a0 <_start@@Base+0x5c>
   10688:	add	r3, pc, r3
   1068c:	ldr	r2, [r3, r2]
   10690:	cmp	r2, #0
   10694:	bxeq	lr
   10698:	b	10608 <__gmon_start__@plt>
   1069c:	andeq	r0, r1, r0, ror r9
   106a0:	andeq	r0, r0, ip, lsr #32
   106a4:	ldr	r0, [pc, #24]	; 106c4 <_start@@Base+0x80>
   106a8:	ldr	r3, [pc, #24]	; 106c8 <_start@@Base+0x84>
   106ac:	cmp	r3, r0
   106b0:	bxeq	lr
   106b4:	ldr	r3, [pc, #16]	; 106cc <_start@@Base+0x88>
   106b8:	cmp	r3, #0
   106bc:	bxeq	lr
   106c0:	bx	r3
   106c4:	andeq	r1, r2, r8, lsr r0
   106c8:	andeq	r1, r2, r8, lsr r0
   106cc:	andeq	r0, r0, r0
   106d0:	ldr	r0, [pc, #36]	; 106fc <_start@@Base+0xb8>
   106d4:	ldr	r1, [pc, #36]	; 10700 <_start@@Base+0xbc>
   106d8:	sub	r1, r1, r0
   106dc:	asr	r1, r1, #2
   106e0:	add	r1, r1, r1, lsr #31
   106e4:	asrs	r1, r1, #1
   106e8:	bxeq	lr
   106ec:	ldr	r3, [pc, #16]	; 10704 <_start@@Base+0xc0>
   106f0:	cmp	r3, #0
   106f4:	bxeq	lr
   106f8:	bx	r3
   106fc:	andeq	r1, r2, r8, lsr r0
   10700:	andeq	r1, r2, r8, lsr r0
   10704:	andeq	r0, r0, r0
   10708:	push	{r4, lr}
   1070c:	ldr	r4, [pc, #24]	; 1072c <_start@@Base+0xe8>
   10710:	ldrb	r3, [r4]
   10714:	cmp	r3, #0
   10718:	popne	{r4, pc}
   1071c:	bl	106a4 <_start@@Base+0x60>
   10720:	mov	r3, #1
   10724:	strb	r3, [r4]
   10728:	pop	{r4, pc}
   1072c:	andeq	r1, r2, r8, lsr r0
   10730:	b	106d0 <_start@@Base+0x8c>

00010734 <main@@Base>:
   10734:	str	fp, [sp, #-8]!
   10738:	str	lr, [sp, #4]
   1073c:	add	fp, sp, #4
   10740:	sub	sp, sp, #32
   10744:	mov	r3, #0
   10748:	str	r3, [fp, #-8]
   1074c:	mov	r3, #1
   10750:	str	r3, [fp, #-12]
   10754:	mov	r3, #0
   10758:	str	r3, [fp, #-16]
   1075c:	mov	r3, #0
   10760:	str	r3, [fp, #-20]	; 0xffffffec
   10764:	mov	r3, #0
   10768:	str	r3, [fp, #-24]	; 0xffffffe8
   1076c:	movw	r1, #2656	; 0xa60
   10770:	movt	r1, #1
   10774:	movw	r0, #2660	; 0xa64
   10778:	movt	r0, #1
   1077c:	bl	105f0 <fopen@plt>
   10780:	str	r0, [fp, #-28]	; 0xffffffe4
   10784:	b	108c0 <main@@Base+0x18c>
   10788:	ldr	r3, [fp, #-12]
   1078c:	add	r3, r3, #1
   10790:	str	r3, [fp, #-12]
   10794:	b	108c0 <main@@Base+0x18c>
   10798:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1079c:	cmp	r3, #115	; 0x73
   107a0:	bne	107d0 <main@@Base+0x9c>
   107a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   107a8:	movw	r0, #2680	; 0xa78
   107ac:	movt	r0, #1
   107b0:	bl	108ec <IsIOFunction@@Base>
   107b4:	mov	r3, r0
   107b8:	cmp	r3, #0
   107bc:	beq	108c0 <main@@Base+0x18c>
   107c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   107c4:	add	r3, r3, #1
   107c8:	str	r3, [fp, #-20]	; 0xffffffec
   107cc:	b	108c0 <main@@Base+0x18c>
   107d0:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   107d4:	cmp	r3, #112	; 0x70
   107d8:	bne	10808 <main@@Base+0xd4>
   107dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   107e0:	movw	r0, #2688	; 0xa80
   107e4:	movt	r0, #1
   107e8:	bl	108ec <IsIOFunction@@Base>
   107ec:	mov	r3, r0
   107f0:	cmp	r3, #0
   107f4:	beq	108c0 <main@@Base+0x18c>
   107f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   107fc:	add	r3, r3, #1
   10800:	str	r3, [fp, #-20]	; 0xffffffec
   10804:	b	108c0 <main@@Base+0x18c>
   10808:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   1080c:	cmp	r3, #47	; 0x2f
   10810:	bne	10860 <main@@Base+0x12c>
   10814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10818:	bl	10620 <fgetc@plt>
   1081c:	mov	r3, r0
   10820:	cmp	r3, #42	; 0x2a
   10824:	bne	1084c <main@@Base+0x118>
   10828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1082c:	cmp	r3, #0
   10830:	bne	1084c <main@@Base+0x118>
   10834:	mov	r3, #1
   10838:	str	r3, [fp, #-24]	; 0xffffffe8
   1083c:	ldr	r3, [fp, #-16]
   10840:	add	r3, r3, #1
   10844:	str	r3, [fp, #-16]
   10848:	b	108c0 <main@@Base+0x18c>
   1084c:	mov	r2, #1
   10850:	mvn	r1, #0
   10854:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10858:	bl	1062c <fseek@plt>
   1085c:	b	108c0 <main@@Base+0x18c>
   10860:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   10864:	cmp	r3, #42	; 0x2a
   10868:	bne	108c0 <main@@Base+0x18c>
   1086c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10870:	bl	10620 <fgetc@plt>
   10874:	mov	r3, r0
   10878:	cmp	r3, #47	; 0x2f
   1087c:	bne	108b0 <main@@Base+0x17c>
   10880:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10884:	cmp	r3, #0
   10888:	beq	108b0 <main@@Base+0x17c>
   1088c:	ldr	r3, [fp, #-16]
   10890:	add	r3, r3, #1
   10894:	str	r3, [fp, #-16]
   10898:	ldr	r3, [fp, #-8]
   1089c:	add	r3, r3, #1
   108a0:	str	r3, [fp, #-8]
   108a4:	mov	r3, #0
   108a8:	str	r3, [fp, #-24]	; 0xffffffe8
   108ac:	b	108c0 <main@@Base+0x18c>
   108b0:	mov	r2, #1
   108b4:	mvn	r1, #0
   108b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   108bc:	bl	1062c <fseek@plt>
   108c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   108c4:	bl	10620 <fgetc@plt>
   108c8:	mov	r3, r0
   108cc:	strb	r3, [fp, #-29]	; 0xffffffe3
   108d0:	ldr	r3, [fp, #-16]
   108d4:	add	r3, r3, #1
   108d8:	str	r3, [fp, #-16]
   108dc:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   108e0:	cmp	r3, #10
   108e4:	bne	10798 <main@@Base+0x64>
   108e8:	b	10788 <main@@Base+0x54>

000108ec <IsIOFunction@@Base>:
   108ec:	str	fp, [sp, #-8]!
   108f0:	str	lr, [sp, #4]
   108f4:	add	fp, sp, #4
   108f8:	sub	sp, sp, #24
   108fc:	str	r0, [fp, #-24]	; 0xffffffe8
   10900:	str	r1, [fp, #-28]	; 0xffffffe4
   10904:	mov	r2, #1
   10908:	mvn	r1, #0
   1090c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10910:	bl	1062c <fseek@plt>
   10914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10918:	bl	10614 <strlen@plt>
   1091c:	mov	r3, r0
   10920:	str	r3, [fp, #-12]
   10924:	mov	r3, #0
   10928:	str	r3, [fp, #-20]	; 0xffffffec
   1092c:	sub	r3, fp, #16
   10930:	mov	r2, #0
   10934:	strh	r2, [r3]
   10938:	strb	r2, [r3, #2]
   1093c:	mov	r3, #0
   10940:	str	r3, [fp, #-8]
   10944:	b	10978 <IsIOFunction@@Base+0x8c>
   10948:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1094c:	bl	10620 <fgetc@plt>
   10950:	mov	r3, r0
   10954:	uxtb	r1, r3
   10958:	sub	r2, fp, #20
   1095c:	ldr	r3, [fp, #-8]
   10960:	add	r3, r2, r3
   10964:	mov	r2, r1
   10968:	strb	r2, [r3]
   1096c:	ldr	r3, [fp, #-8]
   10970:	add	r3, r3, #1
   10974:	str	r3, [fp, #-8]
   10978:	ldr	r2, [fp, #-8]
   1097c:	ldr	r3, [fp, #-12]
   10980:	cmp	r2, r3
   10984:	blt	10948 <IsIOFunction@@Base+0x5c>
   10988:	sub	r2, fp, #20
   1098c:	ldr	r3, [fp, #-8]
   10990:	add	r3, r2, r3
   10994:	mov	r2, #0
   10998:	strb	r2, [r3]
   1099c:	ldr	r3, [fp, #-12]
   109a0:	rsb	r3, r3, #1
   109a4:	mov	r2, #1
   109a8:	mov	r1, r3
   109ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   109b0:	bl	1062c <fseek@plt>
   109b4:	sub	r3, fp, #20
   109b8:	mov	r1, r3
   109bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109c0:	bl	105e4 <strcmp@plt>
   109c4:	mov	r3, r0
   109c8:	cmp	r3, #0
   109cc:	bne	109d8 <IsIOFunction@@Base+0xec>
   109d0:	mov	r3, #1
   109d4:	b	109dc <IsIOFunction@@Base+0xf0>
   109d8:	mov	r3, #0
   109dc:	mov	r0, r3
   109e0:	sub	sp, fp, #4
   109e4:	ldr	fp, [sp]
   109e8:	add	sp, sp, #4
   109ec:	pop	{pc}		; (ldr pc, [sp], #4)

000109f0 <__libc_csu_init@@Base>:
   109f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109f4:	mov	r7, r0
   109f8:	ldr	r6, [pc, #72]	; 10a48 <__libc_csu_init@@Base+0x58>
   109fc:	ldr	r5, [pc, #72]	; 10a4c <__libc_csu_init@@Base+0x5c>
   10a00:	add	r6, pc, r6
   10a04:	add	r5, pc, r5
   10a08:	sub	r6, r6, r5
   10a0c:	mov	r8, r1
   10a10:	mov	r9, r2
   10a14:	bl	105c4 <strcmp@plt-0x20>
   10a18:	asrs	r6, r6, #2
   10a1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a20:	mov	r4, #0
   10a24:	add	r4, r4, #1
   10a28:	ldr	r3, [r5], #4
   10a2c:	mov	r2, r9
   10a30:	mov	r1, r8
   10a34:	mov	r0, r7
   10a38:	blx	r3
   10a3c:	cmp	r6, r4
   10a40:	bne	10a24 <__libc_csu_init@@Base+0x34>
   10a44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a48:	andeq	r0, r1, ip, lsl #10
   10a4c:	andeq	r0, r1, r4, lsl #10

00010a50 <__libc_csu_fini@@Base>:
   10a50:	bx	lr

Disassembly of section .fini:

00010a54 <.fini>:
   10a54:	push	{r3, lr}
   10a58:	pop	{r3, pc}
