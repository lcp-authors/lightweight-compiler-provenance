
../repos/stcorp-coda-3a25f25/CMakeFiles/codacmp.dir/tools/codacmp/codacmp.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_version>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	bl	0 <coda_get_libcoda_version>
      14:	mov	r1, r0
      18:	ldr	r0, [pc, #36]	; 44 <print_version+0x44>
      1c:	bl	0 <printf>
      20:	ldr	r0, [pc, #20]	; 3c <print_version+0x3c>
      24:	bl	0 <printf>
      28:	ldr	r0, [pc, #16]	; 40 <print_version+0x40>
      2c:	bl	0 <printf>
      30:	ldr	lr, [sp, #4]
      34:	add	sp, sp, #8
      38:	bx	lr
      3c:	.word	0x0000037c
      40:	.word	0x00000736
      44:	.word	0x000007c0

00000048 <print_help>:
      48:	mov	ip, sp
      4c:	sub	sp, sp, #8
      50:	str	ip, [sp]
      54:	str	lr, [sp, #4]
      58:	ldr	r0, [pc, #364]	; 1cc <print_help+0x184>
      5c:	bl	0 <printf>
      60:	ldr	r0, [pc, #276]	; 17c <print_help+0x134>
      64:	bl	0 <printf>
      68:	ldr	r0, [pc, #380]	; 1ec <print_help+0x1a4>
      6c:	bl	0 <printf>
      70:	ldr	r0, [pc, #280]	; 190 <print_help+0x148>
      74:	bl	0 <printf>
      78:	ldr	r0, [pc, #352]	; 1e0 <print_help+0x198>
      7c:	bl	0 <printf>
      80:	ldr	r0, [pc, #320]	; 1c8 <print_help+0x180>
      84:	bl	0 <printf>
      88:	ldr	r0, [pc, #292]	; 1b4 <print_help+0x16c>
      8c:	bl	0 <printf>
      90:	ldr	r0, [pc, #296]	; 1c0 <print_help+0x178>
      94:	bl	0 <printf>
      98:	ldr	r0, [pc, #324]	; 1e4 <print_help+0x19c>
      9c:	bl	0 <printf>
      a0:	ldr	r0, [pc, #304]	; 1d8 <print_help+0x190>
      a4:	bl	0 <printf>
      a8:	ldr	r0, [pc, #312]	; 1e8 <print_help+0x1a0>
      ac:	bl	0 <printf>
      b0:	ldr	r0, [pc, #244]	; 1ac <print_help+0x164>
      b4:	bl	0 <printf>
      b8:	ldr	r0, [pc, #232]	; 1a8 <print_help+0x160>
      bc:	bl	0 <printf>
      c0:	ldr	r0, [pc, #192]	; 188 <print_help+0x140>
      c4:	bl	0 <printf>
      c8:	ldr	r0, [pc, #236]	; 1bc <print_help+0x174>
      cc:	bl	0 <printf>
      d0:	ldr	r0, [pc, #200]	; 1a0 <print_help+0x158>
      d4:	bl	0 <printf>
      d8:	ldr	r0, [pc, #188]	; 19c <print_help+0x154>
      dc:	bl	0 <printf>
      e0:	ldr	r0, [pc, #152]	; 180 <print_help+0x138>
      e4:	bl	0 <printf>
      e8:	ldr	r0, [pc, #164]	; 194 <print_help+0x14c>
      ec:	bl	0 <printf>
      f0:	ldr	r0, [pc, #148]	; 18c <print_help+0x144>
      f4:	bl	0 <printf>
      f8:	ldr	r0, [pc, #212]	; 1d4 <print_help+0x18c>
      fc:	bl	0 <printf>
     100:	ldr	r0, [pc, #144]	; 198 <print_help+0x150>
     104:	bl	0 <printf>
     108:	ldr	r0, [pc, #204]	; 1dc <print_help+0x194>
     10c:	bl	0 <printf>
     110:	ldr	r0, [pc, #188]	; 1d4 <print_help+0x18c>
     114:	bl	0 <printf>
     118:	ldr	r0, [pc, #164]	; 1c4 <print_help+0x17c>
     11c:	bl	0 <printf>
     120:	ldr	r0, [pc, #144]	; 1b8 <print_help+0x170>
     124:	bl	0 <printf>
     128:	ldr	r0, [pc, #164]	; 1d4 <print_help+0x18c>
     12c:	bl	0 <printf>
     130:	ldr	r0, [pc, #184]	; 1f0 <print_help+0x1a8>
     134:	bl	0 <printf>
     138:	ldr	r0, [pc, #100]	; 1a4 <print_help+0x15c>
     13c:	bl	0 <printf>
     140:	ldr	r0, [pc, #104]	; 1b0 <print_help+0x168>
     144:	bl	0 <printf>
     148:	ldr	r0, [pc, #164]	; 1f4 <print_help+0x1ac>
     14c:	bl	0 <printf>
     150:	ldr	r0, [pc, #120]	; 1d0 <print_help+0x188>
     154:	bl	0 <printf>
     158:	ldr	r0, [pc, #36]	; 184 <print_help+0x13c>
     15c:	bl	0 <printf>
     160:	ldr	r0, [pc, #144]	; 1f8 <print_help+0x1b0>
     164:	bl	0 <printf>
     168:	ldr	r0, [pc, #100]	; 1d4 <print_help+0x18c>
     16c:	bl	0 <printf>
     170:	ldr	lr, [sp, #4]
     174:	add	sp, sp, #8
     178:	bx	lr
     17c:	.word	0x000008e9
     180:	.word	0x000002c8
     184:	.word	0x000009b2
     188:	.word	0x000004de
     18c:	.word	0x00000000
     190:	.word	0x0000052f
     194:	.word	0x000006b5
     198:	.word	0x000002ef
     19c:	.word	0x000009f5
     1a0:	.word	0x000007d9
     1a4:	.word	0x000003ad
     1a8:	.word	0x00000738
     1ac:	.word	0x00000872
     1b0:	.word	0x00000598
     1b4:	.word	0x00000150
     1b8:	.word	0x00000922
     1bc:	.word	0x000000ca
     1c0:	.word	0x0000027f
     1c4:	.word	0x00000450
     1c8:	.word	0x0000055d
     1cc:	.word	0x00000212
     1d0:	.word	0x00000329
     1d4:	.word	0x00000736
     1d8:	.word	0x00000491
     1dc:	.word	0x00000990
     1e0:	.word	0x0000084b
     1e4:	.word	0x000006e6
     1e8:	.word	0x0000007b
     1ec:	.word	0x0000004e
     1f0:	.word	0x0000021a
     1f4:	.word	0x0000018b
     1f8:	.word	0x0000077f

000001fc <print_escaped>:
     1fc:	mov	ip, sp
     200:	sub	sp, sp, #24
     204:	str	ip, [sp]
     208:	str	lr, [sp, #4]
     20c:	str	r4, [sp, #8]
     210:	str	r5, [sp, #12]
     214:	str	r6, [sp, #16]
     218:	mov	r4, r1
     21c:	mov	r5, r0
     220:	mov	r6, #0
     224:	cmp	r6, r4
     228:	bge	320 <print_escaped+0x124>
     22c:	ldrb	r3, [r5, r6]
     230:	and	r1, r3, #255	; 0xff
     234:	cmp	r1, #11
     238:	bcs	28c <print_escaped+0x90>
     23c:	cmp	r1, #9
     240:	bcs	26c <print_escaped+0x70>
     244:	cmp	r1, #7
     248:	beq	260 <print_escaped+0x64>
     24c:	cmp	r1, #8
     250:	bne	2d0 <print_escaped+0xd4>
     254:	ldr	r0, [pc, #224]	; 33c <print_escaped+0x140>
     258:	bl	0 <printf>
     25c:	b	318 <print_escaped+0x11c>
     260:	ldr	r0, [pc, #244]	; 35c <print_escaped+0x160>
     264:	bl	0 <printf>
     268:	b	318 <print_escaped+0x11c>
     26c:	cmp	r1, #9
     270:	bne	280 <print_escaped+0x84>
     274:	ldr	r0, [pc, #200]	; 344 <print_escaped+0x148>
     278:	bl	0 <printf>
     27c:	b	318 <print_escaped+0x11c>
     280:	ldr	r0, [pc, #196]	; 34c <print_escaped+0x150>
     284:	bl	0 <printf>
     288:	b	318 <print_escaped+0x11c>
     28c:	cmp	r1, #13
     290:	bcs	2b4 <print_escaped+0xb8>
     294:	cmp	r1, #11
     298:	bne	2a8 <print_escaped+0xac>
     29c:	ldr	r0, [pc, #148]	; 338 <print_escaped+0x13c>
     2a0:	bl	0 <printf>
     2a4:	b	318 <print_escaped+0x11c>
     2a8:	ldr	r0, [pc, #160]	; 350 <print_escaped+0x154>
     2ac:	bl	0 <printf>
     2b0:	b	318 <print_escaped+0x11c>
     2b4:	cmp	r1, #13
     2b8:	beq	310 <print_escaped+0x114>
     2bc:	cmp	r1, #92	; 0x5c
     2c0:	bne	2d0 <print_escaped+0xd4>
     2c4:	ldr	r0, [pc, #140]	; 358 <print_escaped+0x15c>
     2c8:	bl	0 <printf>
     2cc:	b	318 <print_escaped+0x11c>
     2d0:	cmp	r1, #32
     2d4:	bge	2e0 <print_escaped+0xe4>
     2d8:	mov	r2, #0
     2dc:	b	2ec <print_escaped+0xf0>
     2e0:	cmp	r1, #126	; 0x7e
     2e4:	movle	r2, #1
     2e8:	movgt	r2, #0
     2ec:	cmp	r2, #0
     2f0:	bne	304 <print_escaped+0x108>
     2f4:	ldr	r0, [pc, #88]	; 354 <print_escaped+0x158>
     2f8:	and	r1, r1, #255	; 0xff
     2fc:	bl	0 <printf>
     300:	b	318 <print_escaped+0x11c>
     304:	ldr	r0, [pc, #52]	; 340 <print_escaped+0x144>
     308:	bl	0 <printf>
     30c:	b	318 <print_escaped+0x11c>
     310:	ldr	r0, [pc, #48]	; 348 <print_escaped+0x14c>
     314:	bl	0 <printf>
     318:	add	r6, r6, #1
     31c:	b	224 <print_escaped+0x28>
     320:	ldr	r4, [sp, #8]
     324:	ldr	r5, [sp, #12]
     328:	ldr	r6, [sp, #16]
     32c:	ldr	lr, [sp, #4]
     330:	add	sp, sp, #24
     334:	bx	lr
     338:	.word	0x00000958
     33c:	.word	0x000001f3
     340:	.word	0x000003f7
     344:	.word	0x00000673
     348:	.word	0x0000066d
     34c:	.word	0x000009af
     350:	.word	0x00000670
     354:	.word	0x00000373
     358:	.word	0x00000185
     35c:	.word	0x00000370

00000360 <print_error_with_cursor>:
     360:	mov	ip, sp
     364:	sub	sp, sp, #16
     368:	str	ip, [sp]
     36c:	str	lr, [sp, #4]
     370:	str	r4, [sp, #8]
     374:	mov	r4, r1
     378:	bl	0 <coda_cursor_add_to_error_message>
     37c:	bl	0 <coda_get_errno>
     380:	ldr	r0, [r0]
     384:	bl	0 <coda_errno_to_string>
     388:	ldr	r1, [pc, #56]	; 3c8 <print_error_with_cursor+0x68>
     38c:	ldr	r3, [r1]
     390:	ldr	r1, [pc, #56]	; 3d0 <print_error_with_cursor+0x70>
     394:	ldr	ip, [pc, #48]	; 3cc <print_error_with_cursor+0x6c>
     398:	lsl	r2, r4, #2
     39c:	add	r2, ip, r2
     3a0:	sub	lr, r2, #4096	; 0x1000
     3a4:	ldr	r2, [lr, #4092]	; 0xffc
     3a8:	mov	ip, r0
     3ac:	mov	r0, r3
     3b0:	mov	r3, ip
     3b4:	bl	0 <fprintf>
     3b8:	ldr	r4, [sp, #8]
     3bc:	ldr	lr, [sp, #4]
     3c0:	add	sp, sp, #16
     3c4:	bx	lr
	...
     3d0:	.word	0x00000443

000003d4 <array_key_info_init>:
     3d4:	mov	ip, sp
     3d8:	sub	sp, sp, #8
     3dc:	str	ip, [sp]
     3e0:	str	lr, [sp, #4]
     3e4:	ldr	ip, [pc, #52]	; 420 <array_key_info_init+0x4c>
     3e8:	mov	r3, #0
     3ec:	str	r3, [ip]
     3f0:	ldr	r0, [pc, #44]	; 424 <array_key_info_init+0x50>
     3f4:	mov	r2, #0
     3f8:	str	r2, [r0]
     3fc:	ldr	r1, [pc, #40]	; 42c <array_key_info_init+0x58>
     400:	mov	r2, #0
     404:	str	r2, [r1]
     408:	ldr	r1, [pc, #24]	; 428 <array_key_info_init+0x54>
     40c:	mov	r0, #0
     410:	str	r0, [r1]
     414:	ldr	lr, [sp, #4]
     418:	add	sp, sp, #8
     41c:	bx	lr
     420:	.word	0x00000000
     424:	.word	0x00000004
     428:	.word	0x0000000c
     42c:	.word	0x00000008

00000430 <array_key_info_done>:
     430:	mov	ip, sp
     434:	sub	sp, sp, #8
     438:	str	ip, [sp]
     43c:	str	lr, [sp, #4]
     440:	ldr	r0, [pc, #92]	; 4a4 <array_key_info_done+0x74>
     444:	ldr	r0, [r0]
     448:	cmp	r0, #0
     44c:	beq	45c <array_key_info_done+0x2c>
     450:	ldr	r0, [pc, #76]	; 4a4 <array_key_info_done+0x74>
     454:	ldr	r0, [r0]
     458:	bl	0 <free>
     45c:	ldr	r0, [pc, #72]	; 4ac <array_key_info_done+0x7c>
     460:	ldr	r0, [r0]
     464:	cmp	r0, #0
     468:	beq	478 <array_key_info_done+0x48>
     46c:	ldr	r0, [pc, #56]	; 4ac <array_key_info_done+0x7c>
     470:	ldr	r0, [r0]
     474:	bl	0 <free>
     478:	ldr	r0, [pc, #40]	; 4a8 <array_key_info_done+0x78>
     47c:	ldr	r0, [r0]
     480:	cmp	r0, #0
     484:	beq	498 <array_key_info_done+0x68>
     488:	ldr	r0, [pc, #24]	; 4a8 <array_key_info_done+0x78>
     48c:	ldr	r0, [r0]
     490:	mov	r1, #0
     494:	bl	0 <coda_tree_node_delete>
     498:	ldr	lr, [sp, #4]
     49c:	add	sp, sp, #8
     4a0:	bx	lr
     4a4:	.word	0x00000004
     4a8:	.word	0x0000000c
     4ac:	.word	0x00000008

000004b0 <array_key_info_add_key>:
     4b0:	mov	ip, sp
     4b4:	sub	sp, sp, #24
     4b8:	str	ip, [sp, #4]
     4bc:	str	lr, [sp, #8]
     4c0:	str	r4, [sp, #16]
     4c4:	str	r5, [sp, #20]
     4c8:	mov	r4, r1
     4cc:	mov	r5, r0
     4d0:	ldr	r0, [pc, #296]	; 600 <array_key_info_add_key+0x150>
     4d4:	ldr	ip, [r0]
     4d8:	asr	lr, ip, #31
     4dc:	add	lr, ip, lr, lsr #28
     4e0:	asr	r0, lr, #4
     4e4:	lsl	r0, r0, #4
     4e8:	sub	r3, ip, r0
     4ec:	cmp	r3, #0
     4f0:	bne	5ac <array_key_info_add_key+0xfc>
     4f4:	ldr	r1, [pc, #264]	; 604 <array_key_info_add_key+0x154>
     4f8:	ldr	r0, [r1]
     4fc:	ldr	r1, [pc, #252]	; 600 <array_key_info_add_key+0x150>
     500:	ldr	r1, [r1]
     504:	lsl	r1, r1, #2
     508:	add	r1, r1, #64	; 0x40
     50c:	bl	0 <realloc>
     510:	cmp	r0, #0
     514:	bne	548 <array_key_info_add_key+0x98>
     518:	mvn	r0, #0
     51c:	ldr	r1, [pc, #228]	; 608 <array_key_info_add_key+0x158>
     520:	ldr	r2, [pc, #216]	; 600 <array_key_info_add_key+0x150>
     524:	ldr	r3, [r2]
     528:	lsl	r2, r3, #2
     52c:	add	r2, r2, #64	; 0x40
     530:	ldr	r3, [pc, #216]	; 610 <array_key_info_add_key+0x160>
     534:	mov	r4, #198	; 0xc6
     538:	str	r4, [sp]
     53c:	bl	0 <coda_set_error>
     540:	mvn	r0, #0
     544:	b	5ec <array_key_info_add_key+0x13c>
     548:	ldr	ip, [pc, #180]	; 604 <array_key_info_add_key+0x154>
     54c:	str	r0, [ip]
     550:	ldr	r1, [pc, #180]	; 60c <array_key_info_add_key+0x15c>
     554:	ldr	r0, [r1]
     558:	ldr	r3, [pc, #160]	; 600 <array_key_info_add_key+0x150>
     55c:	ldr	r3, [r3]
     560:	lsl	r2, r3, #2
     564:	add	r1, r2, #64	; 0x40
     568:	bl	0 <realloc>
     56c:	cmp	r0, #0
     570:	bne	5a4 <array_key_info_add_key+0xf4>
     574:	mvn	r0, #0
     578:	ldr	r1, [pc, #136]	; 608 <array_key_info_add_key+0x158>
     57c:	ldr	r2, [pc, #124]	; 600 <array_key_info_add_key+0x150>
     580:	ldr	r2, [r2]
     584:	lsl	r2, r2, #2
     588:	add	r2, r2, #64	; 0x40
     58c:	ldr	r3, [pc, #124]	; 610 <array_key_info_add_key+0x160>
     590:	mov	ip, #207	; 0xcf
     594:	str	ip, [sp]
     598:	bl	0 <coda_set_error>
     59c:	mvn	r0, #0
     5a0:	b	5ec <array_key_info_add_key+0x13c>
     5a4:	ldr	r2, [pc, #96]	; 60c <array_key_info_add_key+0x15c>
     5a8:	str	r0, [r2]
     5ac:	ldr	r3, [pc, #80]	; 604 <array_key_info_add_key+0x154>
     5b0:	ldr	r3, [r3]
     5b4:	ldr	ip, [pc, #68]	; 600 <array_key_info_add_key+0x150>
     5b8:	ldr	r2, [ip]
     5bc:	str	r5, [r3, r2, lsl #2]
     5c0:	ldr	ip, [pc, #68]	; 60c <array_key_info_add_key+0x15c>
     5c4:	ldr	r1, [ip]
     5c8:	ldr	r2, [pc, #48]	; 600 <array_key_info_add_key+0x150>
     5cc:	ldr	r0, [r2]
     5d0:	str	r4, [r1, r0, lsl #2]
     5d4:	ldr	ip, [pc, #36]	; 600 <array_key_info_add_key+0x150>
     5d8:	ldr	r3, [pc, #32]	; 600 <array_key_info_add_key+0x150>
     5dc:	ldr	r0, [r3]
     5e0:	add	r2, r0, #1
     5e4:	str	r2, [ip]
     5e8:	mov	r0, #0
     5ec:	ldr	r4, [sp, #16]
     5f0:	ldr	r5, [sp, #20]
     5f4:	ldr	lr, [sp, #8]
     5f8:	add	sp, sp, #24
     5fc:	bx	lr
     600:	.word	0x00000000
     604:	.word	0x00000004
     608:	.word	0x0000095b
     60c:	.word	0x00000008
     610:	.word	0x00000609

00000614 <array_key_info_set_product>:
     614:	mov	ip, sp
     618:	sub	sp, sp, #24
     61c:	str	ip, [sp]
     620:	str	lr, [sp, #4]
     624:	str	r4, [sp, #8]
     628:	ldr	r3, [pc, #184]	; 6e8 <array_key_info_set_product+0xd4>
     62c:	ldr	r1, [r3]
     630:	cmp	r1, #0
     634:	bne	640 <array_key_info_set_product+0x2c>
     638:	mov	r0, #0
     63c:	b	6d8 <array_key_info_set_product+0xc4>
     640:	add	r1, sp, #16
     644:	bl	0 <coda_get_product_root_type>
     648:	cmp	r0, #0
     64c:	beq	658 <array_key_info_set_product+0x44>
     650:	mvn	r0, #0
     654:	b	6d8 <array_key_info_set_product+0xc4>
     658:	ldr	r0, [sp, #16]
     65c:	bl	0 <coda_tree_node_new>
     660:	ldr	r1, [pc, #136]	; 6f0 <array_key_info_set_product+0xdc>
     664:	str	r0, [r1]
     668:	ldr	r0, [pc, #128]	; 6f0 <array_key_info_set_product+0xdc>
     66c:	ldr	r0, [r0]
     670:	cmp	r0, #0
     674:	bne	680 <array_key_info_set_product+0x6c>
     678:	mvn	r0, #0
     67c:	b	6d8 <array_key_info_set_product+0xc4>
     680:	mov	r4, #0
     684:	ldr	r1, [pc, #92]	; 6e8 <array_key_info_set_product+0xd4>
     688:	ldr	ip, [r1]
     68c:	cmp	r4, ip
     690:	bge	6d4 <array_key_info_set_product+0xc0>
     694:	ldr	r2, [pc, #84]	; 6f0 <array_key_info_set_product+0xdc>
     698:	ldr	r0, [r2]
     69c:	ldr	r2, [pc, #72]	; 6ec <array_key_info_set_product+0xd8>
     6a0:	ldr	r1, [r2]
     6a4:	ldr	r1, [r1, r4, lsl #2]
     6a8:	ldr	ip, [pc, #68]	; 6f4 <array_key_info_set_product+0xe0>
     6ac:	ldr	r3, [ip]
     6b0:	ldr	r2, [r3, r4, lsl #2]
     6b4:	mov	r3, #0
     6b8:	bl	0 <coda_tree_node_add_item_for_path>
     6bc:	cmp	r0, #0
     6c0:	beq	6cc <array_key_info_set_product+0xb8>
     6c4:	mvn	r0, #0
     6c8:	b	6d8 <array_key_info_set_product+0xc4>
     6cc:	add	r4, r4, #1
     6d0:	b	684 <array_key_info_set_product+0x70>
     6d4:	mov	r0, #0
     6d8:	ldr	r4, [sp, #8]
     6dc:	ldr	lr, [sp, #4]
     6e0:	add	sp, sp, #24
     6e4:	bx	lr
     6e8:	.word	0x00000000
     6ec:	.word	0x00000004
     6f0:	.word	0x0000000c
     6f4:	.word	0x00000008

000006f8 <compare_arrays_as_records_sub>:
     6f8:	mov	ip, sp
     6fc:	sub	sp, sp, #56	; 0x38
     700:	str	ip, [sp]
     704:	str	lr, [sp, #4]
     708:	str	r4, [sp, #16]
     70c:	str	r5, [sp, #20]
     710:	str	r6, [sp, #24]
     714:	str	r7, [sp, #28]
     718:	str	r8, [sp, #32]
     71c:	str	r9, [sp, #36]	; 0x24
     720:	str	sl, [sp, #40]	; 0x28
     724:	str	fp, [sp, #44]	; 0x2c
     728:	ldr	ip, [ip, #16]
     72c:	str	ip, [sp, #8]
     730:	ldr	ip, [sp]
     734:	ldr	ip, [ip, #12]
     738:	str	ip, [sp, #12]
     73c:	ldr	ip, [sp]
     740:	ldr	sl, [ip, #8]
     744:	ldr	r9, [ip, #4]
     748:	ldr	r8, [ip]
     74c:	mov	r7, r3
     750:	mov	fp, r2
     754:	mov	r6, r1
     758:	mov	r5, r0
     75c:	cmp	r7, #0
     760:	ble	87c <compare_arrays_as_records_sub+0x184>
     764:	mov	r0, r5
     768:	bl	0 <coda_cursor_goto_first_array_element>
     76c:	cmp	r0, #0
     770:	beq	788 <compare_arrays_as_records_sub+0x90>
     774:	mov	r1, #1
     778:	mov	r0, r5
     77c:	bl	360 <print_error_with_cursor>
     780:	mvn	r0, #0
     784:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     788:	mov	r4, #0
     78c:	cmp	r4, r7
     790:	bge	874 <compare_arrays_as_records_sub+0x17c>
     794:	add	r2, r9, r4, lsl #2
     798:	add	r3, sp, #48	; 0x30
     79c:	mov	r1, r5
     7a0:	mov	r0, fp
     7a4:	bl	0 <coda_expression_eval_string>
     7a8:	cmp	r0, #0
     7ac:	beq	7e0 <compare_arrays_as_records_sub+0xe8>
     7b0:	bl	0 <coda_get_errno>
     7b4:	ldr	r0, [r0]
     7b8:	bl	0 <coda_errno_to_string>
     7bc:	mov	r3, r0
     7c0:	ldr	r2, [pc, #1076]	; bfc <compare_arrays_as_records_sub+0x504>
     7c4:	ldr	r0, [r2]
     7c8:	ldr	r1, [pc, #1084]	; c0c <compare_arrays_as_records_sub+0x514>
     7cc:	ldr	ip, [pc, #1076]	; c08 <compare_arrays_as_records_sub+0x510>
     7d0:	ldr	r2, [ip]
     7d4:	bl	0 <fprintf>
     7d8:	mvn	r0, #0
     7dc:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     7e0:	ldr	r1, [r9, r4, lsl #2]
     7e4:	ldr	r0, [sp, #12]
     7e8:	bl	0 <coda_hashtable_add_name>
     7ec:	cmp	r0, #0
     7f0:	beq	83c <compare_arrays_as_records_sub+0x144>
     7f4:	mvn	r0, #99	; 0x63
     7f8:	ldr	r1, [pc, #1052]	; c1c <compare_arrays_as_records_sub+0x524>
     7fc:	ldr	r2, [r9, r4, lsl #2]
     800:	bl	0 <coda_set_error>
     804:	bl	0 <coda_get_errno>
     808:	ldr	r0, [r0]
     80c:	bl	0 <coda_errno_to_string>
     810:	ldr	ip, [pc, #996]	; bfc <compare_arrays_as_records_sub+0x504>
     814:	ldr	r3, [ip]
     818:	ldr	r1, [pc, #1004]	; c0c <compare_arrays_as_records_sub+0x514>
     81c:	ldr	ip, [pc, #996]	; c08 <compare_arrays_as_records_sub+0x510>
     820:	ldr	r2, [ip]
     824:	mov	ip, r0
     828:	mov	r0, r3
     82c:	mov	r3, ip
     830:	bl	0 <fprintf>
     834:	mvn	r0, #0
     838:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     83c:	sub	r0, r7, #1
     840:	cmp	r4, r0
     844:	bge	86c <compare_arrays_as_records_sub+0x174>
     848:	mov	r0, r5
     84c:	bl	0 <coda_cursor_goto_next_array_element>
     850:	cmp	r0, #0
     854:	beq	86c <compare_arrays_as_records_sub+0x174>
     858:	mov	r1, #1
     85c:	mov	r0, r5
     860:	bl	360 <print_error_with_cursor>
     864:	mvn	r0, #0
     868:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     86c:	add	r4, r4, #1
     870:	b	78c <compare_arrays_as_records_sub+0x94>
     874:	mov	r0, r5
     878:	bl	0 <coda_cursor_goto_parent>
     87c:	cmp	r8, #0
     880:	ble	99c <compare_arrays_as_records_sub+0x2a4>
     884:	mov	r0, r6
     888:	bl	0 <coda_cursor_goto_first_array_element>
     88c:	cmp	r0, #0
     890:	beq	8a8 <compare_arrays_as_records_sub+0x1b0>
     894:	mov	r1, #2
     898:	mov	r0, r6
     89c:	bl	360 <print_error_with_cursor>
     8a0:	mvn	r0, #0
     8a4:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     8a8:	mov	r4, #0
     8ac:	cmp	r4, r8
     8b0:	bge	994 <compare_arrays_as_records_sub+0x29c>
     8b4:	add	r2, sl, r4, lsl #2
     8b8:	add	r3, sp, #52	; 0x34
     8bc:	mov	r1, r6
     8c0:	mov	r0, fp
     8c4:	bl	0 <coda_expression_eval_string>
     8c8:	cmp	r0, #0
     8cc:	beq	908 <compare_arrays_as_records_sub+0x210>
     8d0:	bl	0 <coda_get_errno>
     8d4:	ldr	r0, [r0]
     8d8:	bl	0 <coda_errno_to_string>
     8dc:	ldr	r2, [pc, #792]	; bfc <compare_arrays_as_records_sub+0x504>
     8e0:	ldr	r3, [r2]
     8e4:	ldr	r1, [pc, #800]	; c0c <compare_arrays_as_records_sub+0x514>
     8e8:	ldr	r2, [pc, #824]	; c28 <compare_arrays_as_records_sub+0x530>
     8ec:	ldr	r2, [r2]
     8f0:	mov	ip, r0
     8f4:	mov	r0, r3
     8f8:	mov	r3, ip
     8fc:	bl	0 <fprintf>
     900:	mvn	r0, #0
     904:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     908:	ldr	r1, [sl, r4, lsl #2]
     90c:	ldr	r0, [sp, #8]
     910:	bl	0 <coda_hashtable_add_name>
     914:	cmp	r0, #0
     918:	beq	95c <compare_arrays_as_records_sub+0x264>
     91c:	mvn	r0, #99	; 0x63
     920:	ldr	r1, [pc, #756]	; c1c <compare_arrays_as_records_sub+0x524>
     924:	ldr	r2, [sl, r4, lsl #2]
     928:	bl	0 <coda_set_error>
     92c:	bl	0 <coda_get_errno>
     930:	ldr	r0, [r0]
     934:	bl	0 <coda_errno_to_string>
     938:	mov	r3, r0
     93c:	ldr	r0, [pc, #696]	; bfc <compare_arrays_as_records_sub+0x504>
     940:	ldr	r0, [r0]
     944:	ldr	r1, [pc, #704]	; c0c <compare_arrays_as_records_sub+0x514>
     948:	ldr	r2, [pc, #728]	; c28 <compare_arrays_as_records_sub+0x530>
     94c:	ldr	r2, [r2]
     950:	bl	0 <fprintf>
     954:	mvn	r0, #0
     958:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     95c:	sub	r0, r8, #1
     960:	cmp	r4, r0
     964:	bge	98c <compare_arrays_as_records_sub+0x294>
     968:	mov	r0, r6
     96c:	bl	0 <coda_cursor_goto_next_array_element>
     970:	cmp	r0, #0
     974:	beq	98c <compare_arrays_as_records_sub+0x294>
     978:	mov	r1, #2
     97c:	mov	r0, r6
     980:	bl	360 <print_error_with_cursor>
     984:	mvn	r0, #0
     988:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     98c:	add	r4, r4, #1
     990:	b	8ac <compare_arrays_as_records_sub+0x1b4>
     994:	mov	r0, r6
     998:	bl	0 <coda_cursor_goto_parent>
     99c:	cmp	r7, r8
     9a0:	beq	9f8 <compare_arrays_as_records_sub+0x300>
     9a4:	ldr	r0, [pc, #600]	; c04 <compare_arrays_as_records_sub+0x50c>
     9a8:	bl	0 <printf>
     9ac:	ldr	r1, [pc, #604]	; c10 <compare_arrays_as_records_sub+0x518>
     9b0:	mov	r0, r5
     9b4:	bl	0 <coda_cursor_print_path>
     9b8:	ldr	r0, [pc, #608]	; c20 <compare_arrays_as_records_sub+0x528>
     9bc:	bl	0 <printf>
     9c0:	ldr	ip, [pc, #588]	; c14 <compare_arrays_as_records_sub+0x51c>
     9c4:	ldr	r3, [ip]
     9c8:	cmp	r3, #0
     9cc:	beq	9f8 <compare_arrays_as_records_sub+0x300>
     9d0:	ldr	r0, [pc, #552]	; c00 <compare_arrays_as_records_sub+0x508>
     9d4:	ldr	r1, [pc, #556]	; c08 <compare_arrays_as_records_sub+0x510>
     9d8:	ldr	r1, [r1]
     9dc:	mov	r2, r7
     9e0:	bl	0 <printf>
     9e4:	ldr	r0, [pc, #532]	; c00 <compare_arrays_as_records_sub+0x508>
     9e8:	ldr	r1, [pc, #568]	; c28 <compare_arrays_as_records_sub+0x530>
     9ec:	ldr	r1, [r1]
     9f0:	mov	r2, r8
     9f4:	bl	0 <printf>
     9f8:	mov	fp, #1
     9fc:	cmp	r7, #0
     a00:	ble	a78 <compare_arrays_as_records_sub+0x380>
     a04:	mov	r4, #0
     a08:	cmp	r4, r7
     a0c:	bge	a78 <compare_arrays_as_records_sub+0x380>
     a10:	ldr	r1, [r9, r4, lsl #2]
     a14:	ldr	r0, [sp, #8]
     a18:	bl	0 <coda_hashtable_get_index_from_name>
     a1c:	cmp	r0, #0
     a20:	bge	a70 <compare_arrays_as_records_sub+0x378>
     a24:	cmp	fp, #0
     a28:	beq	a4c <compare_arrays_as_records_sub+0x354>
     a2c:	ldr	r0, [pc, #484]	; c18 <compare_arrays_as_records_sub+0x520>
     a30:	bl	0 <printf>
     a34:	ldr	r1, [pc, #468]	; c10 <compare_arrays_as_records_sub+0x518>
     a38:	mov	r0, r5
     a3c:	bl	0 <coda_cursor_print_path>
     a40:	ldr	r0, [pc, #472]	; c20 <compare_arrays_as_records_sub+0x528>
     a44:	bl	0 <printf>
     a48:	mov	fp, #0
     a4c:	ldr	r2, [pc, #448]	; c14 <compare_arrays_as_records_sub+0x51c>
     a50:	ldr	r3, [r2]
     a54:	cmp	r3, #0
     a58:	beq	a70 <compare_arrays_as_records_sub+0x378>
     a5c:	ldr	r0, [pc, #448]	; c24 <compare_arrays_as_records_sub+0x52c>
     a60:	ldr	r3, [pc, #416]	; c08 <compare_arrays_as_records_sub+0x510>
     a64:	ldr	r1, [r3]
     a68:	ldr	r2, [r9, r4, lsl #2]
     a6c:	bl	0 <printf>
     a70:	add	r4, r4, #1
     a74:	b	a08 <compare_arrays_as_records_sub+0x310>
     a78:	cmp	r8, #0
     a7c:	ble	af4 <compare_arrays_as_records_sub+0x3fc>
     a80:	mov	r4, #0
     a84:	cmp	r4, r8
     a88:	bge	af4 <compare_arrays_as_records_sub+0x3fc>
     a8c:	ldr	r1, [sl, r4, lsl #2]
     a90:	ldr	r0, [sp, #12]
     a94:	bl	0 <coda_hashtable_get_index_from_name>
     a98:	cmp	r0, #0
     a9c:	bge	aec <compare_arrays_as_records_sub+0x3f4>
     aa0:	cmp	fp, #0
     aa4:	beq	ac8 <compare_arrays_as_records_sub+0x3d0>
     aa8:	ldr	r0, [pc, #360]	; c18 <compare_arrays_as_records_sub+0x520>
     aac:	bl	0 <printf>
     ab0:	ldr	r1, [pc, #344]	; c10 <compare_arrays_as_records_sub+0x518>
     ab4:	mov	r0, r5
     ab8:	bl	0 <coda_cursor_print_path>
     abc:	ldr	r0, [pc, #348]	; c20 <compare_arrays_as_records_sub+0x528>
     ac0:	bl	0 <printf>
     ac4:	mov	fp, #0
     ac8:	ldr	r3, [pc, #324]	; c14 <compare_arrays_as_records_sub+0x51c>
     acc:	ldr	r3, [r3]
     ad0:	cmp	r3, #0
     ad4:	beq	aec <compare_arrays_as_records_sub+0x3f4>
     ad8:	ldr	r0, [pc, #324]	; c24 <compare_arrays_as_records_sub+0x52c>
     adc:	ldr	r1, [pc, #324]	; c28 <compare_arrays_as_records_sub+0x530>
     ae0:	ldr	r1, [r1]
     ae4:	ldr	r2, [sl, r4, lsl #2]
     ae8:	bl	0 <printf>
     aec:	add	r4, r4, #1
     af0:	b	a84 <compare_arrays_as_records_sub+0x38c>
     af4:	cmp	r7, #0
     af8:	ble	bcc <compare_arrays_as_records_sub+0x4d4>
     afc:	mov	r0, r5
     b00:	bl	0 <coda_cursor_goto_first_array_element>
     b04:	cmp	r0, #0
     b08:	beq	b20 <compare_arrays_as_records_sub+0x428>
     b0c:	mov	r1, #1
     b10:	mov	r0, r5
     b14:	bl	360 <print_error_with_cursor>
     b18:	mvn	r0, #0
     b1c:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     b20:	mov	r4, #0
     b24:	cmp	r4, r7
     b28:	bge	bc4 <compare_arrays_as_records_sub+0x4cc>
     b2c:	ldr	r1, [r9, r4, lsl #2]
     b30:	ldr	r0, [sp, #8]
     b34:	bl	0 <coda_hashtable_get_index_from_name>
     b38:	mov	r1, r0
     b3c:	cmp	r1, #0
     b40:	blt	b8c <compare_arrays_as_records_sub+0x494>
     b44:	mov	r0, r6
     b48:	bl	0 <coda_cursor_goto_array_element_by_index>
     b4c:	cmp	r0, #0
     b50:	beq	b68 <compare_arrays_as_records_sub+0x470>
     b54:	mov	r1, #2
     b58:	mov	r0, r6
     b5c:	bl	360 <print_error_with_cursor>
     b60:	mvn	r0, #0
     b64:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     b68:	mov	r1, r6
     b6c:	mov	r0, r5
     b70:	bl	254c <compare_data>
     b74:	cmp	r0, #0
     b78:	beq	b84 <compare_arrays_as_records_sub+0x48c>
     b7c:	mvn	r0, #0
     b80:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     b84:	mov	r0, r6
     b88:	bl	0 <coda_cursor_goto_parent>
     b8c:	sub	r2, r7, #1
     b90:	cmp	r4, r2
     b94:	bge	bbc <compare_arrays_as_records_sub+0x4c4>
     b98:	mov	r0, r5
     b9c:	bl	0 <coda_cursor_goto_next_array_element>
     ba0:	cmp	r0, #0
     ba4:	beq	bbc <compare_arrays_as_records_sub+0x4c4>
     ba8:	mov	r1, #1
     bac:	mov	r0, r5
     bb0:	bl	360 <print_error_with_cursor>
     bb4:	mvn	r0, #0
     bb8:	b	bd0 <compare_arrays_as_records_sub+0x4d8>
     bbc:	add	r4, r4, #1
     bc0:	b	b24 <compare_arrays_as_records_sub+0x42c>
     bc4:	mov	r0, r5
     bc8:	bl	0 <coda_cursor_goto_parent>
     bcc:	mov	r0, #0
     bd0:	ldr	r4, [sp, #16]
     bd4:	ldr	r5, [sp, #20]
     bd8:	ldr	r6, [sp, #24]
     bdc:	ldr	r7, [sp, #28]
     be0:	ldr	r8, [sp, #32]
     be4:	ldr	r9, [sp, #36]	; 0x24
     be8:	ldr	sl, [sp, #40]	; 0x28
     bec:	ldr	fp, [sp, #44]	; 0x2c
     bf0:	ldr	lr, [sp, #4]
     bf4:	add	sp, sp, #56	; 0x38
     bf8:	bx	lr
     bfc:	.word	0x00000000
     c00:	.word	0x00000833
     c04:	.word	0x00000689
     c08:	.word	0x00000000
     c0c:	.word	0x00000443
	...
     c18:	.word	0x000008cd
     c1c:	.word	0x0000046b
     c20:	.word	0x00000736
     c24:	.word	0x000003fa
     c28:	.word	0x00000004

00000c2c <compare_arrays_as_records>:
     c2c:	mov	ip, sp
     c30:	sub	sp, sp, #72	; 0x48
     c34:	str	ip, [sp, #20]
     c38:	str	lr, [sp, #24]
     c3c:	str	r4, [sp, #32]
     c40:	str	r5, [sp, #36]	; 0x24
     c44:	str	r6, [sp, #40]	; 0x28
     c48:	str	r7, [sp, #44]	; 0x2c
     c4c:	str	r8, [sp, #48]	; 0x30
     c50:	str	r9, [sp, #52]	; 0x34
     c54:	mov	r4, r2
     c58:	mov	r7, r1
     c5c:	mov	r6, r0
     c60:	mov	r1, #0
     c64:	str	r1, [sp, #60]	; 0x3c
     c68:	add	r1, sp, #64	; 0x40
     c6c:	mov	r0, r6
     c70:	bl	0 <coda_cursor_get_num_elements>
     c74:	cmp	r0, #0
     c78:	beq	c90 <compare_arrays_as_records+0x64>
     c7c:	mov	r1, #1
     c80:	mov	r0, r6
     c84:	bl	360 <print_error_with_cursor>
     c88:	mvn	r0, #0
     c8c:	b	f48 <compare_arrays_as_records+0x31c>
     c90:	add	r1, sp, #56	; 0x38
     c94:	mov	r0, r7
     c98:	bl	0 <coda_cursor_get_num_elements>
     c9c:	cmp	r0, #0
     ca0:	beq	cb8 <compare_arrays_as_records+0x8c>
     ca4:	mov	r1, #2
     ca8:	mov	r0, r7
     cac:	bl	360 <print_error_with_cursor>
     cb0:	mvn	r0, #0
     cb4:	b	f48 <compare_arrays_as_records+0x31c>
     cb8:	add	r1, sp, #60	; 0x3c
     cbc:	mov	r0, r4
     cc0:	bl	0 <coda_expression_from_string>
     cc4:	cmp	r0, #0
     cc8:	beq	cf4 <compare_arrays_as_records+0xc8>
     ccc:	bl	0 <coda_get_errno>
     cd0:	ldr	r0, [r0]
     cd4:	bl	0 <coda_errno_to_string>
     cd8:	mov	r2, r0
     cdc:	ldr	ip, [pc, #652]	; f70 <compare_arrays_as_records+0x344>
     ce0:	ldr	r0, [ip]
     ce4:	ldr	r1, [pc, #640]	; f6c <compare_arrays_as_records+0x340>
     ce8:	bl	0 <fprintf>
     cec:	mvn	r0, #0
     cf0:	b	f48 <compare_arrays_as_records+0x31c>
     cf4:	ldr	r1, [sp, #64]	; 0x40
     cf8:	lsl	r0, r1, #2
     cfc:	bl	0 <malloc>
     d00:	mov	r8, r0
     d04:	cmp	r8, #0
     d08:	bne	d48 <compare_arrays_as_records+0x11c>
     d0c:	mvn	r0, #0
     d10:	ldr	r1, [pc, #608]	; f78 <compare_arrays_as_records+0x34c>
     d14:	ldr	r2, [sp, #64]	; 0x40
     d18:	lsl	r2, r2, #2
     d1c:	ldr	r3, [pc, #600]	; f7c <compare_arrays_as_records+0x350>
     d20:	movw	r4, #461	; 0x1cd
     d24:	str	r4, [sp]
     d28:	bl	0 <coda_set_error>
     d2c:	mov	r1, #1
     d30:	mov	r0, r6
     d34:	bl	360 <print_error_with_cursor>
     d38:	ldr	r0, [sp, #60]	; 0x3c
     d3c:	bl	0 <coda_expression_delete>
     d40:	mvn	r0, #0
     d44:	b	f48 <compare_arrays_as_records+0x31c>
     d48:	mov	r1, #0
     d4c:	ldr	r3, [sp, #64]	; 0x40
     d50:	cmp	r1, r3
     d54:	bge	d68 <compare_arrays_as_records+0x13c>
     d58:	mov	r0, #0
     d5c:	str	r0, [r8, r1, lsl #2]
     d60:	add	r1, r1, #1
     d64:	b	d4c <compare_arrays_as_records+0x120>
     d68:	ldr	ip, [sp, #56]	; 0x38
     d6c:	lsl	r0, ip, #2
     d70:	bl	0 <malloc>
     d74:	mov	r9, r0
     d78:	cmp	r9, #0
     d7c:	bne	dc4 <compare_arrays_as_records+0x198>
     d80:	mvn	r0, #0
     d84:	ldr	r1, [pc, #492]	; f78 <compare_arrays_as_records+0x34c>
     d88:	ldr	r2, [sp, #56]	; 0x38
     d8c:	lsl	r2, r2, #2
     d90:	ldr	r3, [pc, #484]	; f7c <compare_arrays_as_records+0x350>
     d94:	movw	r4, #475	; 0x1db
     d98:	str	r4, [sp]
     d9c:	bl	0 <coda_set_error>
     da0:	mov	r1, #2
     da4:	mov	r0, r7
     da8:	bl	360 <print_error_with_cursor>
     dac:	ldr	r0, [sp, #60]	; 0x3c
     db0:	bl	0 <coda_expression_delete>
     db4:	mov	r0, r8
     db8:	bl	0 <free>
     dbc:	mvn	r0, #0
     dc0:	b	f48 <compare_arrays_as_records+0x31c>
     dc4:	mov	r1, #0
     dc8:	ldr	ip, [sp, #56]	; 0x38
     dcc:	cmp	r1, ip
     dd0:	bge	de4 <compare_arrays_as_records+0x1b8>
     dd4:	mov	r2, #0
     dd8:	str	r2, [r9, r1, lsl #2]
     ddc:	add	r1, r1, #1
     de0:	b	dc8 <compare_arrays_as_records+0x19c>
     de4:	mov	r0, #1
     de8:	bl	0 <coda_hashtable_new>
     dec:	mov	r4, r0
     df0:	cmp	r4, #0
     df4:	bne	e38 <compare_arrays_as_records+0x20c>
     df8:	mvn	r0, #0
     dfc:	ldr	r1, [pc, #368]	; f74 <compare_arrays_as_records+0x348>
     e00:	ldr	r2, [pc, #372]	; f7c <compare_arrays_as_records+0x350>
     e04:	movw	r3, #489	; 0x1e9
     e08:	bl	0 <coda_set_error>
     e0c:	mov	r1, #1
     e10:	mov	r0, r6
     e14:	bl	360 <print_error_with_cursor>
     e18:	ldr	r0, [sp, #60]	; 0x3c
     e1c:	bl	0 <coda_expression_delete>
     e20:	mov	r0, r8
     e24:	bl	0 <free>
     e28:	mov	r0, r9
     e2c:	bl	0 <free>
     e30:	mvn	r0, #0
     e34:	b	f48 <compare_arrays_as_records+0x31c>
     e38:	mov	r0, #1
     e3c:	bl	0 <coda_hashtable_new>
     e40:	mov	r5, r0
     e44:	cmp	r5, #0
     e48:	bne	e94 <compare_arrays_as_records+0x268>
     e4c:	mvn	r0, #0
     e50:	ldr	r1, [pc, #284]	; f74 <compare_arrays_as_records+0x348>
     e54:	ldr	r2, [pc, #288]	; f7c <compare_arrays_as_records+0x350>
     e58:	mov	r3, #500	; 0x1f4
     e5c:	bl	0 <coda_set_error>
     e60:	mov	r1, #2
     e64:	mov	r0, r7
     e68:	bl	360 <print_error_with_cursor>
     e6c:	ldr	r0, [sp, #60]	; 0x3c
     e70:	bl	0 <coda_expression_delete>
     e74:	mov	r0, r4
     e78:	bl	0 <coda_hashtable_delete>
     e7c:	mov	r0, r8
     e80:	bl	0 <free>
     e84:	mov	r0, r9
     e88:	bl	0 <free>
     e8c:	mvn	r0, #0
     e90:	b	f48 <compare_arrays_as_records+0x31c>
     e94:	ldr	r2, [sp, #60]	; 0x3c
     e98:	ldr	r3, [sp, #64]	; 0x40
     e9c:	ldr	r1, [sp, #56]	; 0x38
     ea0:	str	r5, [sp, #16]
     ea4:	str	r4, [sp, #12]
     ea8:	str	r9, [sp, #8]
     eac:	str	r8, [sp, #4]
     eb0:	str	r1, [sp]
     eb4:	mov	r1, r7
     eb8:	mov	r0, r6
     ebc:	bl	6f8 <compare_arrays_as_records_sub>
     ec0:	mov	r6, r0
     ec4:	ldr	r0, [sp, #60]	; 0x3c
     ec8:	bl	0 <coda_expression_delete>
     ecc:	mov	r0, r4
     ed0:	bl	0 <coda_hashtable_delete>
     ed4:	mov	r0, r5
     ed8:	bl	0 <coda_hashtable_delete>
     edc:	mov	r4, #0
     ee0:	ldr	ip, [sp, #64]	; 0x40
     ee4:	cmp	r4, ip
     ee8:	bge	f08 <compare_arrays_as_records+0x2dc>
     eec:	ldr	r3, [r8, r4, lsl #2]
     ef0:	cmp	r3, #0
     ef4:	beq	f00 <compare_arrays_as_records+0x2d4>
     ef8:	ldr	r0, [r8, r4, lsl #2]
     efc:	bl	0 <coda_free>
     f00:	add	r4, r4, #1
     f04:	b	ee0 <compare_arrays_as_records+0x2b4>
     f08:	mov	r0, r8
     f0c:	bl	0 <free>
     f10:	mov	r4, #0
     f14:	ldr	r2, [sp, #56]	; 0x38
     f18:	cmp	r4, r2
     f1c:	bge	f3c <compare_arrays_as_records+0x310>
     f20:	ldr	r3, [r9, r4, lsl #2]
     f24:	cmp	r3, #0
     f28:	beq	f34 <compare_arrays_as_records+0x308>
     f2c:	ldr	r0, [r9, r4, lsl #2]
     f30:	bl	0 <coda_free>
     f34:	add	r4, r4, #1
     f38:	b	f14 <compare_arrays_as_records+0x2e8>
     f3c:	mov	r0, r9
     f40:	bl	0 <free>
     f44:	mov	r0, r6
     f48:	ldr	r4, [sp, #32]
     f4c:	ldr	r5, [sp, #36]	; 0x24
     f50:	ldr	r6, [sp, #40]	; 0x28
     f54:	ldr	r7, [sp, #44]	; 0x2c
     f58:	ldr	r8, [sp, #48]	; 0x30
     f5c:	ldr	r9, [sp, #52]	; 0x34
     f60:	ldr	lr, [sp, #24]
     f64:	add	sp, sp, #72	; 0x48
     f68:	bx	lr
     f6c:	.word	0x00000541
     f70:	.word	0x00000000
     f74:	.word	0x000005c4
     f78:	.word	0x0000095b
     f7c:	.word	0x00000609

00000f80 <compare_arrays>:
     f80:	mov	ip, sp
     f84:	sub	sp, sp, #40	; 0x28
     f88:	str	ip, [sp]
     f8c:	str	lr, [sp, #4]
     f90:	str	r4, [sp, #8]
     f94:	str	r5, [sp, #12]
     f98:	str	r6, [sp, #16]
     f9c:	mov	r5, r1
     fa0:	mov	r4, r0
     fa4:	ldr	r0, [pc, #548]	; 11d0 <compare_arrays+0x250>
     fa8:	ldr	r0, [r0]
     fac:	add	r2, sp, #28
     fb0:	mov	r1, r4
     fb4:	bl	0 <coda_tree_node_get_item_for_cursor>
     fb8:	cmp	r0, #0
     fbc:	beq	fd4 <compare_arrays+0x54>
     fc0:	mov	r1, #1
     fc4:	mov	r0, r4
     fc8:	bl	360 <print_error_with_cursor>
     fcc:	mvn	r0, #0
     fd0:	b	11a4 <compare_arrays+0x224>
     fd4:	ldr	ip, [sp, #28]
     fd8:	cmp	ip, #0
     fdc:	beq	ff4 <compare_arrays+0x74>
     fe0:	ldr	r2, [sp, #28]
     fe4:	mov	r1, r5
     fe8:	mov	r0, r4
     fec:	bl	c2c <compare_arrays_as_records>
     ff0:	b	11a4 <compare_arrays+0x224>
     ff4:	add	r1, sp, #32
     ff8:	mov	r0, r4
     ffc:	bl	0 <coda_cursor_get_num_elements>
    1000:	cmp	r0, #0
    1004:	beq	101c <compare_arrays+0x9c>
    1008:	mov	r1, #1
    100c:	mov	r0, r4
    1010:	bl	360 <print_error_with_cursor>
    1014:	mvn	r0, #0
    1018:	b	11a4 <compare_arrays+0x224>
    101c:	add	r1, sp, #24
    1020:	mov	r0, r5
    1024:	bl	0 <coda_cursor_get_num_elements>
    1028:	cmp	r0, #0
    102c:	beq	1044 <compare_arrays+0xc4>
    1030:	mov	r1, #2
    1034:	mov	r0, r5
    1038:	bl	360 <print_error_with_cursor>
    103c:	mvn	r0, #0
    1040:	b	11a4 <compare_arrays+0x224>
    1044:	ldr	r1, [sp, #32]
    1048:	ldr	r2, [sp, #24]
    104c:	cmp	r1, r2
    1050:	beq	10b0 <compare_arrays+0x130>
    1054:	ldr	r0, [pc, #356]	; 11c0 <compare_arrays+0x240>
    1058:	bl	0 <printf>
    105c:	ldr	r1, [pc, #356]	; 11c8 <compare_arrays+0x248>
    1060:	mov	r0, r4
    1064:	bl	0 <coda_cursor_print_path>
    1068:	ldr	r0, [pc, #356]	; 11d4 <compare_arrays+0x254>
    106c:	bl	0 <printf>
    1070:	ldr	r0, [pc, #340]	; 11cc <compare_arrays+0x24c>
    1074:	ldr	r0, [r0]
    1078:	cmp	r0, #0
    107c:	beq	10a8 <compare_arrays+0x128>
    1080:	ldr	r0, [pc, #308]	; 11bc <compare_arrays+0x23c>
    1084:	ldr	r1, [pc, #312]	; 11c4 <compare_arrays+0x244>
    1088:	ldr	r1, [r1]
    108c:	ldr	r2, [sp, #32]
    1090:	bl	0 <printf>
    1094:	ldr	r0, [pc, #288]	; 11bc <compare_arrays+0x23c>
    1098:	ldr	r1, [pc, #312]	; 11d8 <compare_arrays+0x258>
    109c:	ldr	r1, [r1]
    10a0:	ldr	r2, [sp, #24]
    10a4:	bl	0 <printf>
    10a8:	mov	r0, #0
    10ac:	b	11a4 <compare_arrays+0x224>
    10b0:	ldr	r3, [sp, #32]
    10b4:	cmp	r3, #0
    10b8:	ble	11a0 <compare_arrays+0x220>
    10bc:	mov	r0, r4
    10c0:	bl	0 <coda_cursor_goto_first_array_element>
    10c4:	cmp	r0, #0
    10c8:	beq	10e0 <compare_arrays+0x160>
    10cc:	mov	r1, #1
    10d0:	mov	r0, r4
    10d4:	bl	360 <print_error_with_cursor>
    10d8:	mvn	r0, #0
    10dc:	b	11a4 <compare_arrays+0x224>
    10e0:	mov	r0, r5
    10e4:	bl	0 <coda_cursor_goto_first_array_element>
    10e8:	cmp	r0, #0
    10ec:	beq	1104 <compare_arrays+0x184>
    10f0:	mov	r1, #1
    10f4:	mov	r0, r5
    10f8:	bl	360 <print_error_with_cursor>
    10fc:	mvn	r0, #0
    1100:	b	11a4 <compare_arrays+0x224>
    1104:	mov	r6, #0
    1108:	ldr	r1, [sp, #32]
    110c:	cmp	r6, r1
    1110:	bge	1190 <compare_arrays+0x210>
    1114:	mov	r1, r5
    1118:	mov	r0, r4
    111c:	bl	254c <compare_data>
    1120:	cmp	r0, #0
    1124:	beq	1130 <compare_arrays+0x1b0>
    1128:	mvn	r0, #0
    112c:	b	11a4 <compare_arrays+0x224>
    1130:	ldr	r3, [sp, #32]
    1134:	sub	r0, r3, #1
    1138:	cmp	r6, r0
    113c:	bge	1188 <compare_arrays+0x208>
    1140:	mov	r0, r4
    1144:	bl	0 <coda_cursor_goto_next_array_element>
    1148:	cmp	r0, #0
    114c:	beq	1164 <compare_arrays+0x1e4>
    1150:	mov	r1, #1
    1154:	mov	r0, r4
    1158:	bl	360 <print_error_with_cursor>
    115c:	mvn	r0, #0
    1160:	b	11a4 <compare_arrays+0x224>
    1164:	mov	r0, r5
    1168:	bl	0 <coda_cursor_goto_next_array_element>
    116c:	cmp	r0, #0
    1170:	beq	1188 <compare_arrays+0x208>
    1174:	mov	r1, #2
    1178:	mov	r0, r5
    117c:	bl	360 <print_error_with_cursor>
    1180:	mvn	r0, #0
    1184:	b	11a4 <compare_arrays+0x224>
    1188:	add	r6, r6, #1
    118c:	b	1108 <compare_arrays+0x188>
    1190:	mov	r0, r4
    1194:	bl	0 <coda_cursor_goto_parent>
    1198:	mov	r0, r5
    119c:	bl	0 <coda_cursor_goto_parent>
    11a0:	mov	r0, #0
    11a4:	ldr	r4, [sp, #8]
    11a8:	ldr	r5, [sp, #12]
    11ac:	ldr	r6, [sp, #16]
    11b0:	ldr	lr, [sp, #4]
    11b4:	add	sp, sp, #40	; 0x28
    11b8:	bx	lr
    11bc:	.word	0x00000833
    11c0:	.word	0x00000689
	...
    11d0:	.word	0x0000000c
    11d4:	.word	0x00000736
    11d8:	.word	0x00000004

000011dc <compare_records>:
    11dc:	mov	ip, sp
    11e0:	sub	sp, sp, #592	; 0x250
    11e4:	str	ip, [sp]
    11e8:	str	lr, [sp, #4]
    11ec:	str	r4, [sp, #8]
    11f0:	str	r5, [sp, #12]
    11f4:	str	r6, [sp, #16]
    11f8:	mov	r5, r1
    11fc:	mov	r4, r0
    1200:	add	r1, sp, #36	; 0x24
    1204:	mov	r0, r4
    1208:	bl	0 <coda_cursor_get_type>
    120c:	cmp	r0, #0
    1210:	beq	1228 <compare_records+0x4c>
    1214:	mov	r1, #1
    1218:	mov	r0, r4
    121c:	bl	360 <print_error_with_cursor>
    1220:	mvn	r0, #0
    1224:	b	1690 <compare_records+0x4b4>
    1228:	add	r1, sp, #40	; 0x28
    122c:	mov	r0, r5
    1230:	bl	0 <coda_cursor_get_type>
    1234:	cmp	r0, #0
    1238:	beq	1250 <compare_records+0x74>
    123c:	mov	r1, #2
    1240:	mov	r0, r5
    1244:	bl	360 <print_error_with_cursor>
    1248:	mvn	r0, #0
    124c:	b	1690 <compare_records+0x4b4>
    1250:	add	r1, sp, #44	; 0x2c
    1254:	mov	r0, r4
    1258:	bl	0 <coda_cursor_get_num_elements>
    125c:	cmp	r0, #0
    1260:	beq	1278 <compare_records+0x9c>
    1264:	mov	r1, #1
    1268:	mov	r0, r4
    126c:	bl	360 <print_error_with_cursor>
    1270:	mvn	r0, #0
    1274:	b	1690 <compare_records+0x4b4>
    1278:	add	r1, sp, #48	; 0x30
    127c:	mov	r0, r5
    1280:	bl	0 <coda_cursor_get_num_elements>
    1284:	cmp	r0, #0
    1288:	beq	12a0 <compare_records+0xc4>
    128c:	mov	r1, #2
    1290:	mov	r0, r5
    1294:	bl	360 <print_error_with_cursor>
    1298:	mvn	r0, #0
    129c:	b	1690 <compare_records+0x4b4>
    12a0:	mov	r6, #1
    12a4:	ldr	r0, [sp, #44]	; 0x2c
    12a8:	cmp	r0, #0
    12ac:	ble	1368 <compare_records+0x18c>
    12b0:	mov	r3, #0
    12b4:	str	r3, [sp, #52]	; 0x34
    12b8:	ldr	r3, [sp, #52]	; 0x34
    12bc:	ldr	r2, [sp, #44]	; 0x2c
    12c0:	cmp	r3, r2
    12c4:	bge	1368 <compare_records+0x18c>
    12c8:	ldr	r0, [sp, #36]	; 0x24
    12cc:	ldr	r1, [sp, #52]	; 0x34
    12d0:	add	r2, sp, #60	; 0x3c
    12d4:	bl	0 <coda_type_get_record_field_name>
    12d8:	cmp	r0, #0
    12dc:	beq	12f4 <compare_records+0x118>
    12e0:	mov	r1, #1
    12e4:	mov	r0, r4
    12e8:	bl	360 <print_error_with_cursor>
    12ec:	mvn	r0, #0
    12f0:	b	1690 <compare_records+0x4b4>
    12f4:	ldr	r0, [sp, #40]	; 0x28
    12f8:	ldr	r1, [sp, #60]	; 0x3c
    12fc:	add	r2, sp, #56	; 0x38
    1300:	bl	0 <coda_type_get_record_field_index_from_name>
    1304:	cmp	r0, #0
    1308:	beq	1358 <compare_records+0x17c>
    130c:	cmp	r6, #0
    1310:	beq	1334 <compare_records+0x158>
    1314:	ldr	r0, [pc, #940]	; 16c8 <compare_records+0x4ec>
    1318:	bl	0 <printf>
    131c:	ldr	r1, [pc, #908]	; 16b0 <compare_records+0x4d4>
    1320:	mov	r0, r4
    1324:	bl	0 <coda_cursor_print_path>
    1328:	ldr	r0, [pc, #912]	; 16c0 <compare_records+0x4e4>
    132c:	bl	0 <printf>
    1330:	mov	r6, #0
    1334:	ldr	r1, [pc, #896]	; 16bc <compare_records+0x4e0>
    1338:	ldr	r1, [r1]
    133c:	cmp	r1, #0
    1340:	beq	1358 <compare_records+0x17c>
    1344:	ldr	r0, [pc, #888]	; 16c4 <compare_records+0x4e8>
    1348:	ldr	r1, [pc, #860]	; 16ac <compare_records+0x4d0>
    134c:	ldr	r1, [r1]
    1350:	ldr	r2, [sp, #60]	; 0x3c
    1354:	bl	0 <printf>
    1358:	ldr	r2, [sp, #52]	; 0x34
    135c:	add	r2, r2, #1
    1360:	str	r2, [sp, #52]	; 0x34
    1364:	b	12b8 <compare_records+0xdc>
    1368:	ldr	r0, [sp, #48]	; 0x30
    136c:	cmp	r0, #0
    1370:	ble	142c <compare_records+0x250>
    1374:	mov	ip, #0
    1378:	str	ip, [sp, #56]	; 0x38
    137c:	ldr	r3, [sp, #56]	; 0x38
    1380:	ldr	r2, [sp, #48]	; 0x30
    1384:	cmp	r3, r2
    1388:	bge	142c <compare_records+0x250>
    138c:	ldr	r0, [sp, #40]	; 0x28
    1390:	ldr	r1, [sp, #56]	; 0x38
    1394:	add	r2, sp, #64	; 0x40
    1398:	bl	0 <coda_type_get_record_field_name>
    139c:	cmp	r0, #0
    13a0:	beq	13b8 <compare_records+0x1dc>
    13a4:	mov	r1, #2
    13a8:	mov	r0, r5
    13ac:	bl	360 <print_error_with_cursor>
    13b0:	mvn	r0, #0
    13b4:	b	1690 <compare_records+0x4b4>
    13b8:	ldr	r0, [sp, #36]	; 0x24
    13bc:	ldr	r1, [sp, #64]	; 0x40
    13c0:	add	r2, sp, #52	; 0x34
    13c4:	bl	0 <coda_type_get_record_field_index_from_name>
    13c8:	cmp	r0, #0
    13cc:	beq	141c <compare_records+0x240>
    13d0:	cmp	r6, #0
    13d4:	beq	13f8 <compare_records+0x21c>
    13d8:	ldr	r0, [pc, #744]	; 16c8 <compare_records+0x4ec>
    13dc:	bl	0 <printf>
    13e0:	ldr	r1, [pc, #712]	; 16b0 <compare_records+0x4d4>
    13e4:	mov	r0, r4
    13e8:	bl	0 <coda_cursor_print_path>
    13ec:	ldr	r0, [pc, #716]	; 16c0 <compare_records+0x4e4>
    13f0:	bl	0 <printf>
    13f4:	mov	r6, #0
    13f8:	ldr	ip, [pc, #700]	; 16bc <compare_records+0x4e0>
    13fc:	ldr	r0, [ip]
    1400:	cmp	r0, #0
    1404:	beq	141c <compare_records+0x240>
    1408:	ldr	r0, [pc, #692]	; 16c4 <compare_records+0x4e8>
    140c:	ldr	ip, [pc, #696]	; 16cc <compare_records+0x4f0>
    1410:	ldr	r1, [ip]
    1414:	ldr	r2, [sp, #64]	; 0x40
    1418:	bl	0 <printf>
    141c:	ldr	r0, [sp, #56]	; 0x38
    1420:	add	r0, r0, #1
    1424:	str	r0, [sp, #56]	; 0x38
    1428:	b	137c <compare_records+0x1a0>
    142c:	ldr	r2, [sp, #44]	; 0x2c
    1430:	cmp	r2, #0
    1434:	ble	168c <compare_records+0x4b0>
    1438:	mov	r2, r4
    143c:	add	r3, sp, #72	; 0x48
    1440:	mov	lr, #130	; 0x82
    1444:	ldr	ip, [r2], #4
    1448:	subs	lr, lr, #1
    144c:	str	ip, [r3], #4
    1450:	bne	1444 <compare_records+0x268>
    1454:	mov	r0, r4
    1458:	bl	0 <coda_cursor_goto_first_record_field>
    145c:	cmp	r0, #0
    1460:	beq	1478 <compare_records+0x29c>
    1464:	mov	r1, #1
    1468:	mov	r0, r4
    146c:	bl	360 <print_error_with_cursor>
    1470:	mvn	r0, #0
    1474:	b	1690 <compare_records+0x4b4>
    1478:	mov	r1, #0
    147c:	str	r1, [sp, #52]	; 0x34
    1480:	ldr	r3, [sp, #52]	; 0x34
    1484:	ldr	r2, [sp, #44]	; 0x2c
    1488:	cmp	r3, r2
    148c:	bge	1684 <compare_records+0x4a8>
    1490:	add	r0, sp, #72	; 0x48
    1494:	ldr	r1, [sp, #52]	; 0x34
    1498:	add	r2, sp, #28
    149c:	bl	0 <coda_cursor_get_record_field_available_status>
    14a0:	cmp	r0, #0
    14a4:	beq	14bc <compare_records+0x2e0>
    14a8:	add	r0, sp, #72	; 0x48
    14ac:	mov	r1, #1
    14b0:	bl	360 <print_error_with_cursor>
    14b4:	mvn	r0, #0
    14b8:	b	1690 <compare_records+0x4b4>
    14bc:	ldr	r0, [sp, #36]	; 0x24
    14c0:	ldr	r1, [sp, #52]	; 0x34
    14c4:	add	r2, sp, #24
    14c8:	bl	0 <coda_type_get_record_field_name>
    14cc:	cmp	r0, #0
    14d0:	beq	14e8 <compare_records+0x30c>
    14d4:	mov	r1, #1
    14d8:	mov	r0, r4
    14dc:	bl	360 <print_error_with_cursor>
    14e0:	mvn	r0, #0
    14e4:	b	1690 <compare_records+0x4b4>
    14e8:	ldr	r0, [sp, #40]	; 0x28
    14ec:	ldr	r1, [sp, #24]
    14f0:	add	r2, sp, #56	; 0x38
    14f4:	bl	0 <coda_type_get_record_field_index_from_name>
    14f8:	cmp	r0, #0
    14fc:	bne	163c <compare_records+0x460>
    1500:	ldr	r1, [sp, #56]	; 0x38
    1504:	add	r2, sp, #32
    1508:	mov	r0, r5
    150c:	bl	0 <coda_cursor_get_record_field_available_status>
    1510:	cmp	r0, #0
    1514:	beq	152c <compare_records+0x350>
    1518:	mov	r1, #2
    151c:	mov	r0, r5
    1520:	bl	360 <print_error_with_cursor>
    1524:	mvn	r0, #0
    1528:	b	1690 <compare_records+0x4b4>
    152c:	ldr	r3, [sp, #28]
    1530:	cmp	r3, #0
    1534:	bne	1594 <compare_records+0x3b8>
    1538:	ldr	r2, [sp, #32]
    153c:	cmp	r2, #0
    1540:	beq	163c <compare_records+0x460>
    1544:	ldr	r0, [pc, #348]	; 16a8 <compare_records+0x4cc>
    1548:	bl	0 <printf>
    154c:	ldr	r1, [pc, #348]	; 16b0 <compare_records+0x4d4>
    1550:	mov	r0, r4
    1554:	bl	0 <coda_cursor_print_path>
    1558:	ldr	r0, [pc, #352]	; 16c0 <compare_records+0x4e4>
    155c:	bl	0 <printf>
    1560:	ldr	r1, [pc, #340]	; 16bc <compare_records+0x4e0>
    1564:	ldr	ip, [r1]
    1568:	cmp	ip, #0
    156c:	beq	163c <compare_records+0x460>
    1570:	ldr	r0, [pc, #316]	; 16b4 <compare_records+0x4d8>
    1574:	ldr	r1, [pc, #304]	; 16ac <compare_records+0x4d0>
    1578:	ldr	r1, [r1]
    157c:	bl	0 <printf>
    1580:	ldr	r0, [pc, #304]	; 16b8 <compare_records+0x4dc>
    1584:	ldr	r1, [pc, #320]	; 16cc <compare_records+0x4f0>
    1588:	ldr	r1, [r1]
    158c:	bl	0 <printf>
    1590:	b	163c <compare_records+0x460>
    1594:	ldr	r2, [sp, #32]
    1598:	cmp	r2, #0
    159c:	bne	15f0 <compare_records+0x414>
    15a0:	ldr	r0, [pc, #256]	; 16a8 <compare_records+0x4cc>
    15a4:	bl	0 <printf>
    15a8:	ldr	r1, [pc, #256]	; 16b0 <compare_records+0x4d4>
    15ac:	mov	r0, r4
    15b0:	bl	0 <coda_cursor_print_path>
    15b4:	ldr	r0, [pc, #260]	; 16c0 <compare_records+0x4e4>
    15b8:	bl	0 <printf>
    15bc:	ldr	r0, [pc, #248]	; 16bc <compare_records+0x4e0>
    15c0:	ldr	r2, [r0]
    15c4:	cmp	r2, #0
    15c8:	beq	163c <compare_records+0x460>
    15cc:	ldr	r0, [pc, #228]	; 16b8 <compare_records+0x4dc>
    15d0:	ldr	r1, [pc, #212]	; 16ac <compare_records+0x4d0>
    15d4:	ldr	r1, [r1]
    15d8:	bl	0 <printf>
    15dc:	ldr	r0, [pc, #208]	; 16b4 <compare_records+0x4d8>
    15e0:	ldr	r1, [pc, #228]	; 16cc <compare_records+0x4f0>
    15e4:	ldr	r1, [r1]
    15e8:	bl	0 <printf>
    15ec:	b	163c <compare_records+0x460>
    15f0:	ldr	r1, [sp, #56]	; 0x38
    15f4:	mov	r0, r5
    15f8:	bl	0 <coda_cursor_goto_record_field_by_index>
    15fc:	cmp	r0, #0
    1600:	beq	1618 <compare_records+0x43c>
    1604:	mov	r1, #2
    1608:	mov	r0, r5
    160c:	bl	360 <print_error_with_cursor>
    1610:	mvn	r0, #0
    1614:	b	1690 <compare_records+0x4b4>
    1618:	mov	r1, r5
    161c:	mov	r0, r4
    1620:	bl	254c <compare_data>
    1624:	cmp	r0, #0
    1628:	beq	1634 <compare_records+0x458>
    162c:	mvn	r0, #0
    1630:	b	1690 <compare_records+0x4b4>
    1634:	mov	r0, r5
    1638:	bl	0 <coda_cursor_goto_parent>
    163c:	ldr	r0, [sp, #52]	; 0x34
    1640:	ldr	r1, [sp, #44]	; 0x2c
    1644:	sub	ip, r1, #1
    1648:	cmp	r0, ip
    164c:	bge	1674 <compare_records+0x498>
    1650:	mov	r0, r4
    1654:	bl	0 <coda_cursor_goto_next_record_field>
    1658:	cmp	r0, #0
    165c:	beq	1674 <compare_records+0x498>
    1660:	mov	r1, #1
    1664:	mov	r0, r4
    1668:	bl	360 <print_error_with_cursor>
    166c:	mvn	r0, #0
    1670:	b	1690 <compare_records+0x4b4>
    1674:	ldr	ip, [sp, #52]	; 0x34
    1678:	add	ip, ip, #1
    167c:	str	ip, [sp, #52]	; 0x34
    1680:	b	1480 <compare_records+0x2a4>
    1684:	mov	r0, r4
    1688:	bl	0 <coda_cursor_goto_parent>
    168c:	mov	r0, #0
    1690:	ldr	r4, [sp, #8]
    1694:	ldr	r5, [sp, #12]
    1698:	ldr	r6, [sp, #16]
    169c:	ldr	lr, [sp, #4]
    16a0:	add	sp, sp, #592	; 0x250
    16a4:	bx	lr
    16a8:	.word	0x0000011a
	...
    16b4:	.word	0x0000054c
    16b8:	.word	0x00000269
    16bc:	.word	0x00000000
    16c0:	.word	0x00000736
    16c4:	.word	0x00000307
    16c8:	.word	0x000008ab
    16cc:	.word	0x00000004

000016d0 <compare_numbers>:
    16d0:	mov	ip, sp
    16d4:	sub	sp, sp, #120	; 0x78
    16d8:	str	ip, [sp]
    16dc:	str	lr, [sp, #4]
    16e0:	str	r4, [sp, #8]
    16e4:	str	r5, [sp, #12]
    16e8:	mov	r5, r1
    16ec:	mov	r4, r0
    16f0:	add	r1, sp, #16
    16f4:	mov	r0, r4
    16f8:	bl	0 <coda_cursor_get_read_type>
    16fc:	cmp	r0, #0
    1700:	beq	1718 <compare_numbers+0x48>
    1704:	mov	r1, #1
    1708:	mov	r0, r4
    170c:	bl	360 <print_error_with_cursor>
    1710:	mvn	r0, #0
    1714:	b	1c50 <compare_numbers+0x580>
    1718:	add	r1, sp, #20
    171c:	mov	r0, r5
    1720:	bl	0 <coda_cursor_get_read_type>
    1724:	cmp	r0, #0
    1728:	beq	1740 <compare_numbers+0x70>
    172c:	mov	r1, #2
    1730:	mov	r0, r5
    1734:	bl	360 <print_error_with_cursor>
    1738:	mvn	r0, #0
    173c:	b	1c50 <compare_numbers+0x580>
    1740:	ldr	r1, [sp, #16]
    1744:	ldr	r3, [sp, #20]
    1748:	cmp	r1, r3
    174c:	beq	17cc <compare_numbers+0xfc>
    1750:	ldr	r0, [pc, #1320]	; 1c80 <compare_numbers+0x5b0>
    1754:	bl	0 <printf>
    1758:	ldr	r1, [pc, #1296]	; 1c70 <compare_numbers+0x5a0>
    175c:	mov	r0, r4
    1760:	bl	0 <coda_cursor_print_path>
    1764:	ldr	r0, [pc, #1292]	; 1c78 <compare_numbers+0x5a8>
    1768:	bl	0 <printf>
    176c:	ldr	r0, [pc, #1280]	; 1c74 <compare_numbers+0x5a4>
    1770:	ldr	r0, [r0]
    1774:	cmp	r0, #0
    1778:	beq	17c4 <compare_numbers+0xf4>
    177c:	ldr	r0, [sp, #16]
    1780:	bl	0 <coda_type_get_native_type_name>
    1784:	ldr	r2, [pc, #1272]	; 1c84 <compare_numbers+0x5b4>
    1788:	ldr	r3, [pc, #1240]	; 1c68 <compare_numbers+0x598>
    178c:	ldr	r1, [r3]
    1790:	mov	r3, r0
    1794:	mov	r0, r2
    1798:	mov	r2, r3
    179c:	bl	0 <printf>
    17a0:	ldr	r0, [sp, #20]
    17a4:	bl	0 <coda_type_get_native_type_name>
    17a8:	ldr	r2, [pc, #1236]	; 1c84 <compare_numbers+0x5b4>
    17ac:	ldr	r3, [pc, #1236]	; 1c88 <compare_numbers+0x5b8>
    17b0:	ldr	r1, [r3]
    17b4:	mov	r3, r0
    17b8:	mov	r0, r2
    17bc:	mov	r2, r3
    17c0:	bl	0 <printf>
    17c4:	mov	r0, #0
    17c8:	b	1c50 <compare_numbers+0x580>
    17cc:	ldr	ip, [sp, #16]
    17d0:	cmp	ip, #10
    17d4:	bcs	1c30 <compare_numbers+0x560>
    17d8:	add	pc, pc, ip, lsl #2
    17dc:	nop	{0}
    17e0:	b	1808 <compare_numbers+0x138>
    17e4:	b	1960 <compare_numbers+0x290>
    17e8:	b	1808 <compare_numbers+0x138>
    17ec:	b	1960 <compare_numbers+0x290>
    17f0:	b	1808 <compare_numbers+0x138>
    17f4:	b	1960 <compare_numbers+0x290>
    17f8:	b	1808 <compare_numbers+0x138>
    17fc:	b	1960 <compare_numbers+0x290>
    1800:	b	1ab8 <compare_numbers+0x3e8>
    1804:	b	1ab8 <compare_numbers+0x3e8>
    1808:	add	r1, sp, #40	; 0x28
    180c:	mov	r0, r4
    1810:	bl	0 <coda_cursor_read_int64>
    1814:	cmp	r0, #0
    1818:	bne	1918 <compare_numbers+0x248>
    181c:	add	r1, sp, #48	; 0x30
    1820:	mov	r0, r5
    1824:	bl	0 <coda_cursor_read_int64>
    1828:	cmp	r0, #0
    182c:	bne	18d0 <compare_numbers+0x200>
    1830:	ldr	r0, [sp, #40]	; 0x28
    1834:	ldr	r3, [sp, #44]	; 0x2c
    1838:	ldr	r1, [sp, #48]	; 0x30
    183c:	ldr	ip, [sp, #52]	; 0x34
    1840:	eor	r2, r3, ip
    1844:	eor	ip, r0, r1
    1848:	orr	r1, r2, ip
    184c:	cmp	r1, #0
    1850:	beq	1c4c <compare_numbers+0x57c>
    1854:	ldr	r0, [pc, #1032]	; 1c64 <compare_numbers+0x594>
    1858:	bl	0 <printf>
    185c:	ldr	r1, [pc, #1036]	; 1c70 <compare_numbers+0x5a0>
    1860:	mov	r0, r4
    1864:	bl	0 <coda_cursor_print_path>
    1868:	ldr	r0, [pc, #1032]	; 1c78 <compare_numbers+0x5a8>
    186c:	bl	0 <printf>
    1870:	ldr	r0, [pc, #1020]	; 1c74 <compare_numbers+0x5a4>
    1874:	ldr	r0, [r0]
    1878:	cmp	r0, #0
    187c:	beq	18c8 <compare_numbers+0x1f8>
    1880:	ldr	r0, [sp, #40]	; 0x28
    1884:	ldr	r1, [sp, #44]	; 0x2c
    1888:	add	r2, sp, #72	; 0x48
    188c:	bl	0 <coda_str64>
    1890:	ldr	r0, [pc, #1004]	; 1c84 <compare_numbers+0x5b4>
    1894:	ldr	ip, [pc, #972]	; 1c68 <compare_numbers+0x598>
    1898:	ldr	r1, [ip]
    189c:	add	r2, sp, #72	; 0x48
    18a0:	bl	0 <printf>
    18a4:	ldr	r0, [sp, #48]	; 0x30
    18a8:	ldr	r1, [sp, #52]	; 0x34
    18ac:	add	r2, sp, #72	; 0x48
    18b0:	bl	0 <coda_str64>
    18b4:	ldr	r0, [pc, #968]	; 1c84 <compare_numbers+0x5b4>
    18b8:	ldr	ip, [pc, #968]	; 1c88 <compare_numbers+0x5b8>
    18bc:	ldr	r1, [ip]
    18c0:	add	r2, sp, #72	; 0x48
    18c4:	bl	0 <printf>
    18c8:	mov	r0, #0
    18cc:	b	1c50 <compare_numbers+0x580>
    18d0:	mov	r1, #2
    18d4:	mov	r0, r5
    18d8:	bl	360 <print_error_with_cursor>
    18dc:	bl	0 <coda_get_errno>
    18e0:	ldr	r0, [r0]
    18e4:	cmn	r0, #300	; 0x12c
    18e8:	beq	1904 <compare_numbers+0x234>
    18ec:	bl	0 <coda_get_errno>
    18f0:	ldr	r0, [r0]
    18f4:	cmn	r0, #103	; 0x67
    18f8:	movne	r0, #1
    18fc:	moveq	r0, #0
    1900:	b	1908 <compare_numbers+0x238>
    1904:	mov	r0, #0
    1908:	cmp	r0, #0
    190c:	beq	1c4c <compare_numbers+0x57c>
    1910:	mvn	r0, #0
    1914:	b	1c50 <compare_numbers+0x580>
    1918:	mov	r1, #1
    191c:	mov	r0, r4
    1920:	bl	360 <print_error_with_cursor>
    1924:	bl	0 <coda_get_errno>
    1928:	ldr	r0, [r0]
    192c:	cmn	r0, #300	; 0x12c
    1930:	beq	194c <compare_numbers+0x27c>
    1934:	bl	0 <coda_get_errno>
    1938:	ldr	r0, [r0]
    193c:	cmn	r0, #103	; 0x67
    1940:	movne	r0, #1
    1944:	moveq	r0, #0
    1948:	b	1950 <compare_numbers+0x280>
    194c:	mov	r0, #0
    1950:	cmp	r0, #0
    1954:	beq	1c4c <compare_numbers+0x57c>
    1958:	mvn	r0, #0
    195c:	b	1c50 <compare_numbers+0x580>
    1960:	add	r1, sp, #56	; 0x38
    1964:	mov	r0, r4
    1968:	bl	0 <coda_cursor_read_uint64>
    196c:	cmp	r0, #0
    1970:	bne	1a70 <compare_numbers+0x3a0>
    1974:	add	r1, sp, #64	; 0x40
    1978:	mov	r0, r5
    197c:	bl	0 <coda_cursor_read_uint64>
    1980:	cmp	r0, #0
    1984:	bne	1a28 <compare_numbers+0x358>
    1988:	ldr	r3, [sp, #56]	; 0x38
    198c:	ldr	ip, [sp, #60]	; 0x3c
    1990:	ldr	r2, [sp, #64]	; 0x40
    1994:	ldr	r0, [sp, #68]	; 0x44
    1998:	eor	r1, ip, r0
    199c:	eor	r2, r3, r2
    19a0:	orr	r3, r1, r2
    19a4:	cmp	r3, #0
    19a8:	beq	1c4c <compare_numbers+0x57c>
    19ac:	ldr	r0, [pc, #688]	; 1c64 <compare_numbers+0x594>
    19b0:	bl	0 <printf>
    19b4:	ldr	r1, [pc, #692]	; 1c70 <compare_numbers+0x5a0>
    19b8:	mov	r0, r4
    19bc:	bl	0 <coda_cursor_print_path>
    19c0:	ldr	r0, [pc, #688]	; 1c78 <compare_numbers+0x5a8>
    19c4:	bl	0 <printf>
    19c8:	ldr	r0, [pc, #676]	; 1c74 <compare_numbers+0x5a4>
    19cc:	ldr	r0, [r0]
    19d0:	cmp	r0, #0
    19d4:	beq	1a20 <compare_numbers+0x350>
    19d8:	ldr	r0, [sp, #56]	; 0x38
    19dc:	ldr	r1, [sp, #60]	; 0x3c
    19e0:	add	r2, sp, #96	; 0x60
    19e4:	bl	0 <coda_str64u>
    19e8:	ldr	r0, [pc, #660]	; 1c84 <compare_numbers+0x5b4>
    19ec:	ldr	r1, [pc, #628]	; 1c68 <compare_numbers+0x598>
    19f0:	ldr	r1, [r1]
    19f4:	add	r2, sp, #96	; 0x60
    19f8:	bl	0 <printf>
    19fc:	ldr	r0, [sp, #64]	; 0x40
    1a00:	ldr	r1, [sp, #68]	; 0x44
    1a04:	add	r2, sp, #96	; 0x60
    1a08:	bl	0 <coda_str64u>
    1a0c:	ldr	r0, [pc, #624]	; 1c84 <compare_numbers+0x5b4>
    1a10:	ldr	r1, [pc, #624]	; 1c88 <compare_numbers+0x5b8>
    1a14:	ldr	r1, [r1]
    1a18:	add	r2, sp, #96	; 0x60
    1a1c:	bl	0 <printf>
    1a20:	mov	r0, #0
    1a24:	b	1c50 <compare_numbers+0x580>
    1a28:	mov	r1, #2
    1a2c:	mov	r0, r5
    1a30:	bl	360 <print_error_with_cursor>
    1a34:	bl	0 <coda_get_errno>
    1a38:	ldr	r0, [r0]
    1a3c:	cmn	r0, #300	; 0x12c
    1a40:	beq	1a5c <compare_numbers+0x38c>
    1a44:	bl	0 <coda_get_errno>
    1a48:	ldr	r0, [r0]
    1a4c:	cmn	r0, #103	; 0x67
    1a50:	movne	r0, #1
    1a54:	moveq	r0, #0
    1a58:	b	1a60 <compare_numbers+0x390>
    1a5c:	mov	r0, #0
    1a60:	cmp	r0, #0
    1a64:	beq	1c4c <compare_numbers+0x57c>
    1a68:	mvn	r0, #0
    1a6c:	b	1c50 <compare_numbers+0x580>
    1a70:	mov	r1, #1
    1a74:	mov	r0, r4
    1a78:	bl	360 <print_error_with_cursor>
    1a7c:	bl	0 <coda_get_errno>
    1a80:	ldr	r0, [r0]
    1a84:	cmn	r0, #300	; 0x12c
    1a88:	beq	1aa4 <compare_numbers+0x3d4>
    1a8c:	bl	0 <coda_get_errno>
    1a90:	ldr	r0, [r0]
    1a94:	cmn	r0, #103	; 0x67
    1a98:	movne	r0, #1
    1a9c:	moveq	r0, #0
    1aa0:	b	1aa8 <compare_numbers+0x3d8>
    1aa4:	mov	r0, #0
    1aa8:	cmp	r0, #0
    1aac:	beq	1c4c <compare_numbers+0x57c>
    1ab0:	mvn	r0, #0
    1ab4:	b	1c50 <compare_numbers+0x580>
    1ab8:	add	r1, sp, #24
    1abc:	mov	r0, r4
    1ac0:	bl	0 <coda_cursor_read_double>
    1ac4:	cmp	r0, #0
    1ac8:	bne	1be8 <compare_numbers+0x518>
    1acc:	add	r1, sp, #32
    1ad0:	mov	r0, r5
    1ad4:	bl	0 <coda_cursor_read_double>
    1ad8:	cmp	r0, #0
    1adc:	bne	1ba0 <compare_numbers+0x4d0>
    1ae0:	vldr	d3, [sp, #24]
    1ae4:	vldr	d6, [sp, #32]
    1ae8:	vcmp.f64	d3, d6
    1aec:	vmrs	APSR_nzcv, fpscr
    1af0:	beq	1b30 <compare_numbers+0x460>
    1af4:	vldr	d0, [sp, #24]
    1af8:	bl	0 <coda_isNaN>
    1afc:	cmp	r0, #0
    1b00:	beq	1b1c <compare_numbers+0x44c>
    1b04:	vldr	d0, [sp, #32]
    1b08:	bl	0 <coda_isNaN>
    1b0c:	cmp	r0, #0
    1b10:	movne	r1, #1
    1b14:	moveq	r1, #0
    1b18:	b	1b20 <compare_numbers+0x450>
    1b1c:	mov	r1, #0
    1b20:	cmp	r1, #0
    1b24:	moveq	r2, #1
    1b28:	movne	r2, #0
    1b2c:	b	1b34 <compare_numbers+0x464>
    1b30:	mov	r2, #0
    1b34:	cmp	r2, #0
    1b38:	beq	1c4c <compare_numbers+0x57c>
    1b3c:	ldr	r0, [pc, #288]	; 1c64 <compare_numbers+0x594>
    1b40:	bl	0 <printf>
    1b44:	ldr	r1, [pc, #292]	; 1c70 <compare_numbers+0x5a0>
    1b48:	mov	r0, r4
    1b4c:	bl	0 <coda_cursor_print_path>
    1b50:	ldr	r0, [pc, #288]	; 1c78 <compare_numbers+0x5a8>
    1b54:	bl	0 <printf>
    1b58:	ldr	r0, [pc, #276]	; 1c74 <compare_numbers+0x5a4>
    1b5c:	ldr	r0, [r0]
    1b60:	cmp	r0, #0
    1b64:	beq	1b98 <compare_numbers+0x4c8>
    1b68:	ldr	r0, [pc, #252]	; 1c6c <compare_numbers+0x59c>
    1b6c:	ldr	ip, [pc, #244]	; 1c68 <compare_numbers+0x598>
    1b70:	ldr	r1, [ip]
    1b74:	vldr	d2, [sp, #24]
    1b78:	vmov	r2, r3, d2
    1b7c:	bl	0 <printf>
    1b80:	ldr	r0, [pc, #228]	; 1c6c <compare_numbers+0x59c>
    1b84:	ldr	r3, [pc, #252]	; 1c88 <compare_numbers+0x5b8>
    1b88:	ldr	r1, [r3]
    1b8c:	vldr	d2, [sp, #32]
    1b90:	vmov	r2, r3, d2
    1b94:	bl	0 <printf>
    1b98:	mov	r0, #0
    1b9c:	b	1c50 <compare_numbers+0x580>
    1ba0:	mov	r1, #2
    1ba4:	mov	r0, r5
    1ba8:	bl	360 <print_error_with_cursor>
    1bac:	bl	0 <coda_get_errno>
    1bb0:	ldr	r0, [r0]
    1bb4:	cmn	r0, #300	; 0x12c
    1bb8:	beq	1bd4 <compare_numbers+0x504>
    1bbc:	bl	0 <coda_get_errno>
    1bc0:	ldr	r0, [r0]
    1bc4:	cmn	r0, #103	; 0x67
    1bc8:	movne	r0, #1
    1bcc:	moveq	r0, #0
    1bd0:	b	1bd8 <compare_numbers+0x508>
    1bd4:	mov	r0, #0
    1bd8:	cmp	r0, #0
    1bdc:	beq	1c4c <compare_numbers+0x57c>
    1be0:	mvn	r0, #0
    1be4:	b	1c50 <compare_numbers+0x580>
    1be8:	mov	r1, #1
    1bec:	mov	r0, r4
    1bf0:	bl	360 <print_error_with_cursor>
    1bf4:	bl	0 <coda_get_errno>
    1bf8:	ldr	r0, [r0]
    1bfc:	cmn	r0, #300	; 0x12c
    1c00:	beq	1c1c <compare_numbers+0x54c>
    1c04:	bl	0 <coda_get_errno>
    1c08:	ldr	r0, [r0]
    1c0c:	cmn	r0, #103	; 0x67
    1c10:	movne	r0, #1
    1c14:	moveq	r0, #0
    1c18:	b	1c20 <compare_numbers+0x550>
    1c1c:	mov	r0, #0
    1c20:	cmp	r0, #0
    1c24:	beq	1c4c <compare_numbers+0x57c>
    1c28:	mvn	r0, #0
    1c2c:	b	1c50 <compare_numbers+0x580>
    1c30:	ldr	r0, [pc, #88]	; 1c90 <compare_numbers+0x5c0>
    1c34:	ldr	r1, [pc, #80]	; 1c8c <compare_numbers+0x5bc>
    1c38:	movw	r2, #950	; 0x3b6
    1c3c:	ldr	r3, [pc, #56]	; 1c7c <compare_numbers+0x5ac>
    1c40:	bl	0 <__assert_fail>
    1c44:	mov	r0, #1
    1c48:	bl	0 <exit>
    1c4c:	mov	r0, #0
    1c50:	ldr	r4, [sp, #8]
    1c54:	ldr	r5, [sp, #12]
    1c58:	ldr	lr, [sp, #4]
    1c5c:	add	sp, sp, #120	; 0x78
    1c60:	bx	lr
    1c64:	.word	0x000005f7
    1c68:	.word	0x00000000
    1c6c:	.word	0x00000676
	...
    1c78:	.word	0x00000736
    1c7c:	.word	0x00000a5f
    1c80:	.word	0x000001db
    1c84:	.word	0x00000276
    1c88:	.word	0x00000004
    1c8c:	.word	0x00000609
    1c90:	.word	0x000008e7

00001c94 <compare_strings>:
    1c94:	mov	ip, sp
    1c98:	sub	sp, sp, #40	; 0x28
    1c9c:	str	ip, [sp, #4]
    1ca0:	str	lr, [sp, #8]
    1ca4:	str	r4, [sp, #16]
    1ca8:	str	r5, [sp, #20]
    1cac:	str	r6, [sp, #24]
    1cb0:	str	r7, [sp, #28]
    1cb4:	mov	r7, r1
    1cb8:	mov	r4, r0
    1cbc:	add	r1, sp, #32
    1cc0:	mov	r0, r4
    1cc4:	bl	0 <coda_cursor_get_string_length>
    1cc8:	cmp	r0, #0
    1ccc:	beq	1ce4 <compare_strings+0x50>
    1cd0:	mov	r1, #1
    1cd4:	mov	r0, r4
    1cd8:	bl	360 <print_error_with_cursor>
    1cdc:	mvn	r0, #0
    1ce0:	b	1f34 <compare_strings+0x2a0>
    1ce4:	add	r1, sp, #36	; 0x24
    1ce8:	mov	r0, r7
    1cec:	bl	0 <coda_cursor_get_string_length>
    1cf0:	cmp	r0, #0
    1cf4:	beq	1d0c <compare_strings+0x78>
    1cf8:	mov	r1, #2
    1cfc:	mov	r0, r7
    1d00:	bl	360 <print_error_with_cursor>
    1d04:	mvn	r0, #0
    1d08:	b	1f34 <compare_strings+0x2a0>
    1d0c:	ldr	r0, [sp, #32]
    1d10:	add	r0, r0, #1
    1d14:	bl	0 <malloc>
    1d18:	mov	r5, r0
    1d1c:	cmp	r5, #0
    1d20:	bne	1d54 <compare_strings+0xc0>
    1d24:	mvn	r0, #0
    1d28:	ldr	r1, [pc, #560]	; 1f60 <compare_strings+0x2cc>
    1d2c:	ldr	r2, [sp, #32]
    1d30:	ldr	r3, [pc, #560]	; 1f68 <compare_strings+0x2d4>
    1d34:	movw	ip, #978	; 0x3d2
    1d38:	str	ip, [sp]
    1d3c:	bl	0 <coda_set_error>
    1d40:	mov	r1, #1
    1d44:	mov	r0, r4
    1d48:	bl	360 <print_error_with_cursor>
    1d4c:	mvn	r0, #0
    1d50:	b	1f34 <compare_strings+0x2a0>
    1d54:	ldr	r1, [sp, #36]	; 0x24
    1d58:	add	r0, r1, #1
    1d5c:	bl	0 <malloc>
    1d60:	mov	r6, r0
    1d64:	cmp	r6, #0
    1d68:	bne	1da4 <compare_strings+0x110>
    1d6c:	mvn	r0, #0
    1d70:	ldr	r1, [pc, #488]	; 1f60 <compare_strings+0x2cc>
    1d74:	ldr	r2, [sp, #36]	; 0x24
    1d78:	ldr	r3, [pc, #488]	; 1f68 <compare_strings+0x2d4>
    1d7c:	movw	r4, #986	; 0x3da
    1d80:	str	r4, [sp]
    1d84:	bl	0 <coda_set_error>
    1d88:	mov	r1, #2
    1d8c:	mov	r0, r7
    1d90:	bl	360 <print_error_with_cursor>
    1d94:	mov	r0, r5
    1d98:	bl	0 <free>
    1d9c:	mvn	r0, #0
    1da0:	b	1f34 <compare_strings+0x2a0>
    1da4:	ldr	r3, [sp, #32]
    1da8:	add	r2, r3, #1
    1dac:	mov	r1, r5
    1db0:	mov	r0, r4
    1db4:	bl	0 <coda_cursor_read_string>
    1db8:	cmp	r0, #0
    1dbc:	bne	1ec8 <compare_strings+0x234>
    1dc0:	ldr	r3, [sp, #36]	; 0x24
    1dc4:	add	r2, r3, #1
    1dc8:	mov	r1, r6
    1dcc:	mov	r0, r7
    1dd0:	bl	0 <coda_cursor_read_string>
    1dd4:	cmp	r0, #0
    1dd8:	bne	1e70 <compare_strings+0x1dc>
    1ddc:	ldr	ip, [sp, #32]
    1de0:	ldr	r1, [sp, #36]	; 0x24
    1de4:	cmp	ip, r1
    1de8:	bne	1e0c <compare_strings+0x178>
    1dec:	ldr	r2, [sp, #32]
    1df0:	mov	r1, r6
    1df4:	mov	r0, r5
    1df8:	bl	0 <memcmp>
    1dfc:	cmp	r0, #0
    1e00:	movne	r0, #1
    1e04:	moveq	r0, #0
    1e08:	b	1e10 <compare_strings+0x17c>
    1e0c:	mov	r0, #1
    1e10:	cmp	r0, #0
    1e14:	beq	1f20 <compare_strings+0x28c>
    1e18:	ldr	r0, [pc, #324]	; 1f64 <compare_strings+0x2d0>
    1e1c:	bl	0 <printf>
    1e20:	ldr	r1, [pc, #300]	; 1f54 <compare_strings+0x2c0>
    1e24:	mov	r0, r4
    1e28:	bl	0 <coda_cursor_print_path>
    1e2c:	ldr	r0, [pc, #296]	; 1f5c <compare_strings+0x2c8>
    1e30:	bl	0 <printf>
    1e34:	ldr	r1, [pc, #284]	; 1f58 <compare_strings+0x2c4>
    1e38:	ldr	r3, [r1]
    1e3c:	cmp	r3, #0
    1e40:	beq	1f20 <compare_strings+0x28c>
    1e44:	ldr	r0, [pc, #288]	; 1f6c <compare_strings+0x2d8>
    1e48:	ldr	r2, [pc, #256]	; 1f50 <compare_strings+0x2bc>
    1e4c:	ldr	r1, [r2]
    1e50:	mov	r2, r5
    1e54:	bl	0 <printf>
    1e58:	ldr	r0, [pc, #268]	; 1f6c <compare_strings+0x2d8>
    1e5c:	ldr	r1, [pc, #268]	; 1f70 <compare_strings+0x2dc>
    1e60:	ldr	r1, [r1]
    1e64:	mov	r2, r6
    1e68:	bl	0 <printf>
    1e6c:	b	1f20 <compare_strings+0x28c>
    1e70:	mov	r1, #2
    1e74:	mov	r0, r7
    1e78:	bl	360 <print_error_with_cursor>
    1e7c:	bl	0 <coda_get_errno>
    1e80:	ldr	ip, [r0]
    1e84:	cmn	ip, #300	; 0x12c
    1e88:	beq	1ea4 <compare_strings+0x210>
    1e8c:	bl	0 <coda_get_errno>
    1e90:	ldr	ip, [r0]
    1e94:	cmn	ip, #103	; 0x67
    1e98:	movne	r3, #1
    1e9c:	moveq	r3, #0
    1ea0:	b	1ea8 <compare_strings+0x214>
    1ea4:	mov	r3, #0
    1ea8:	cmp	r3, #0
    1eac:	beq	1f20 <compare_strings+0x28c>
    1eb0:	mov	r0, r5
    1eb4:	bl	0 <free>
    1eb8:	mov	r0, r6
    1ebc:	bl	0 <free>
    1ec0:	mvn	r0, #0
    1ec4:	b	1f34 <compare_strings+0x2a0>
    1ec8:	mov	r1, #1
    1ecc:	mov	r0, r4
    1ed0:	bl	360 <print_error_with_cursor>
    1ed4:	bl	0 <coda_get_errno>
    1ed8:	ldr	r1, [r0]
    1edc:	cmn	r1, #300	; 0x12c
    1ee0:	beq	1efc <compare_strings+0x268>
    1ee4:	bl	0 <coda_get_errno>
    1ee8:	ldr	ip, [r0]
    1eec:	cmn	ip, #103	; 0x67
    1ef0:	movne	r3, #1
    1ef4:	moveq	r3, #0
    1ef8:	b	1f00 <compare_strings+0x26c>
    1efc:	mov	r3, #0
    1f00:	cmp	r3, #0
    1f04:	beq	1f20 <compare_strings+0x28c>
    1f08:	mov	r0, r5
    1f0c:	bl	0 <free>
    1f10:	mov	r0, r6
    1f14:	bl	0 <free>
    1f18:	mvn	r0, #0
    1f1c:	b	1f34 <compare_strings+0x2a0>
    1f20:	mov	r0, r5
    1f24:	bl	0 <free>
    1f28:	mov	r0, r6
    1f2c:	bl	0 <free>
    1f30:	mov	r0, #0
    1f34:	ldr	r4, [sp, #16]
    1f38:	ldr	r5, [sp, #20]
    1f3c:	ldr	r6, [sp, #24]
    1f40:	ldr	r7, [sp, #28]
    1f44:	ldr	lr, [sp, #8]
    1f48:	add	sp, sp, #40	; 0x28
    1f4c:	bx	lr
	...
    1f5c:	.word	0x00000736
    1f60:	.word	0x0000095b
    1f64:	.word	0x00000a46
    1f68:	.word	0x00000609
    1f6c:	.word	0x00000276
    1f70:	.word	0x00000004

00001f74 <compare_bytes>:
    1f74:	mov	ip, sp
    1f78:	sub	sp, sp, #88	; 0x58
    1f7c:	str	ip, [sp, #8]
    1f80:	str	lr, [sp, #12]
    1f84:	str	r4, [sp, #16]
    1f88:	str	r5, [sp, #20]
    1f8c:	str	r6, [sp, #24]
    1f90:	str	r7, [sp, #28]
    1f94:	str	r8, [sp, #32]
    1f98:	str	r9, [sp, #36]	; 0x24
    1f9c:	str	sl, [sp, #40]	; 0x28
    1fa0:	mov	r5, r1
    1fa4:	mov	r4, r0
    1fa8:	add	r1, sp, #48	; 0x30
    1fac:	mov	r0, r4
    1fb0:	bl	0 <coda_cursor_get_bit_size>
    1fb4:	cmp	r0, #0
    1fb8:	beq	1fd0 <compare_bytes+0x5c>
    1fbc:	mov	r1, #1
    1fc0:	mov	r0, r4
    1fc4:	bl	360 <print_error_with_cursor>
    1fc8:	mvn	r0, #0
    1fcc:	b	23d0 <compare_bytes+0x45c>
    1fd0:	ldr	r0, [sp, #48]	; 0x30
    1fd4:	mov	ip, #0
    1fd8:	and	r0, r0, #7
    1fdc:	orr	r3, ip, r0
    1fe0:	cmp	r3, #0
    1fe4:	bne	1ff0 <compare_bytes+0x7c>
    1fe8:	mov	r0, #0
    1fec:	b	1ff4 <compare_bytes+0x80>
    1ff0:	mov	r0, #1
    1ff4:	ldr	r2, [sp, #48]	; 0x30
    1ff8:	ldr	r3, [sp, #52]	; 0x34
    1ffc:	asr	ip, r3, #3
    2000:	lsr	r1, r2, #3
    2004:	orr	r2, r1, r3, lsl #29
    2008:	asr	r1, r0, #31
    200c:	adds	r6, r2, r0
    2010:	adc	r7, ip, r1
    2014:	add	r1, sp, #56	; 0x38
    2018:	mov	r0, r5
    201c:	bl	0 <coda_cursor_get_bit_size>
    2020:	cmp	r0, #0
    2024:	beq	203c <compare_bytes+0xc8>
    2028:	mov	r1, #2
    202c:	mov	r0, r5
    2030:	bl	360 <print_error_with_cursor>
    2034:	mvn	r0, #0
    2038:	b	23d0 <compare_bytes+0x45c>
    203c:	ldr	r1, [sp, #56]	; 0x38
    2040:	mov	r0, #0
    2044:	and	r1, r1, #7
    2048:	orr	r0, r0, r1
    204c:	cmp	r0, #0
    2050:	bne	205c <compare_bytes+0xe8>
    2054:	mov	r2, #0
    2058:	b	2060 <compare_bytes+0xec>
    205c:	mov	r2, #1
    2060:	ldr	r3, [sp, #56]	; 0x38
    2064:	ldr	ip, [sp, #60]	; 0x3c
    2068:	asr	r0, ip, #3
    206c:	lsr	r1, r3, #3
    2070:	orr	ip, r1, ip, lsl #29
    2074:	asr	r3, r2, #31
    2078:	adds	r8, ip, r2
    207c:	adc	r3, r0, r3
    2080:	ldr	r1, [sp, #48]	; 0x30
    2084:	ldr	r2, [sp, #52]	; 0x34
    2088:	ldr	r3, [sp, #56]	; 0x38
    208c:	ldr	ip, [sp, #60]	; 0x3c
    2090:	eor	r0, r2, ip
    2094:	eor	ip, r1, r3
    2098:	orr	r1, r0, ip
    209c:	cmp	r1, #0
    20a0:	beq	2120 <compare_bytes+0x1ac>
    20a4:	ldr	r0, [pc, #844]	; 23f8 <compare_bytes+0x484>
    20a8:	bl	0 <printf>
    20ac:	ldr	r1, [pc, #848]	; 2404 <compare_bytes+0x490>
    20b0:	mov	r0, r4
    20b4:	bl	0 <coda_cursor_print_path>
    20b8:	ldr	r0, [pc, #844]	; 240c <compare_bytes+0x498>
    20bc:	bl	0 <printf>
    20c0:	ldr	r0, [pc, #832]	; 2408 <compare_bytes+0x494>
    20c4:	ldr	r0, [r0]
    20c8:	cmp	r0, #0
    20cc:	beq	2118 <compare_bytes+0x1a4>
    20d0:	ldr	r0, [sp, #48]	; 0x30
    20d4:	ldr	r1, [sp, #52]	; 0x34
    20d8:	add	r2, sp, #64	; 0x40
    20dc:	bl	0 <coda_str64>
    20e0:	ldr	r0, [pc, #792]	; 2400 <compare_bytes+0x48c>
    20e4:	ldr	ip, [pc, #784]	; 23fc <compare_bytes+0x488>
    20e8:	ldr	r1, [ip]
    20ec:	add	r2, sp, #64	; 0x40
    20f0:	bl	0 <printf>
    20f4:	ldr	r0, [sp, #56]	; 0x38
    20f8:	ldr	r1, [sp, #60]	; 0x3c
    20fc:	add	r2, sp, #64	; 0x40
    2100:	bl	0 <coda_str64>
    2104:	ldr	r0, [pc, #756]	; 2400 <compare_bytes+0x48c>
    2108:	ldr	r2, [pc, #776]	; 2418 <compare_bytes+0x4a4>
    210c:	ldr	r1, [r2]
    2110:	add	r2, sp, #64	; 0x40
    2114:	bl	0 <printf>
    2118:	mov	r0, #0
    211c:	b	23d0 <compare_bytes+0x45c>
    2120:	ldr	r0, [sp, #48]	; 0x30
    2124:	ldr	r1, [sp, #52]	; 0x34
    2128:	mov	r3, #0
    212c:	cmp	r1, r3
    2130:	bne	2144 <compare_bytes+0x1d0>
    2134:	mov	ip, #0
    2138:	cmp	r0, ip
    213c:	bhi	2150 <compare_bytes+0x1dc>
    2140:	b	23cc <compare_bytes+0x458>
    2144:	mov	r0, #0
    2148:	cmp	r1, r0
    214c:	ble	23cc <compare_bytes+0x458>
    2150:	mov	r0, r6
    2154:	bl	0 <malloc>
    2158:	mov	r9, r0
    215c:	cmp	r9, #0
    2160:	bne	2194 <compare_bytes+0x220>
    2164:	mvn	r0, #0
    2168:	ldr	r1, [pc, #676]	; 2414 <compare_bytes+0x4a0>
    216c:	ldr	r3, [pc, #680]	; 241c <compare_bytes+0x4a8>
    2170:	mov	r2, #1072	; 0x430
    2174:	str	r2, [sp]
    2178:	mov	r2, r6
    217c:	bl	0 <coda_set_error>
    2180:	mov	r1, #1
    2184:	mov	r0, r4
    2188:	bl	360 <print_error_with_cursor>
    218c:	mvn	r0, #0
    2190:	b	23d0 <compare_bytes+0x45c>
    2194:	mov	r0, r8
    2198:	bl	0 <malloc>
    219c:	mov	sl, r0
    21a0:	cmp	sl, #0
    21a4:	bne	21e0 <compare_bytes+0x26c>
    21a8:	mvn	r0, #0
    21ac:	ldr	r1, [pc, #608]	; 2414 <compare_bytes+0x4a0>
    21b0:	mov	r2, r8
    21b4:	ldr	r3, [pc, #608]	; 241c <compare_bytes+0x4a8>
    21b8:	movw	r4, #1080	; 0x438
    21bc:	str	r4, [sp]
    21c0:	bl	0 <coda_set_error>
    21c4:	mov	r1, #2
    21c8:	mov	r0, r5
    21cc:	bl	360 <print_error_with_cursor>
    21d0:	mov	r0, r9
    21d4:	bl	0 <free>
    21d8:	mvn	r0, #0
    21dc:	b	23d0 <compare_bytes+0x45c>
    21e0:	mov	r3, #0
    21e4:	mov	r2, #0
    21e8:	ldr	r0, [sp, #48]	; 0x30
    21ec:	ldr	r1, [sp, #52]	; 0x34
    21f0:	str	r1, [sp, #4]
    21f4:	str	r0, [sp]
    21f8:	mov	r1, r9
    21fc:	mov	r0, r4
    2200:	bl	0 <coda_cursor_read_bits>
    2204:	cmp	r0, #0
    2208:	bne	2364 <compare_bytes+0x3f0>
    220c:	mov	r3, #0
    2210:	mov	r2, #0
    2214:	ldr	r0, [sp, #56]	; 0x38
    2218:	ldr	r1, [sp, #60]	; 0x3c
    221c:	str	r1, [sp, #4]
    2220:	str	r0, [sp]
    2224:	mov	r1, sl
    2228:	mov	r0, r5
    222c:	bl	0 <coda_cursor_read_bits>
    2230:	cmp	r0, #0
    2234:	bne	230c <compare_bytes+0x398>
    2238:	mov	r2, r6
    223c:	mov	r1, sl
    2240:	mov	r0, r9
    2244:	bl	0 <memcmp>
    2248:	cmp	r0, #0
    224c:	beq	23bc <compare_bytes+0x448>
    2250:	ldr	r0, [pc, #456]	; 2420 <compare_bytes+0x4ac>
    2254:	bl	0 <printf>
    2258:	ldr	r1, [pc, #420]	; 2404 <compare_bytes+0x490>
    225c:	mov	r0, r4
    2260:	bl	0 <coda_cursor_print_path>
    2264:	ldr	r0, [pc, #416]	; 240c <compare_bytes+0x498>
    2268:	bl	0 <printf>
    226c:	ldr	r0, [pc, #404]	; 2408 <compare_bytes+0x494>
    2270:	ldr	r1, [r0]
    2274:	cmp	r1, #0
    2278:	beq	22b4 <compare_bytes+0x340>
    227c:	mov	r3, r6
    2280:	mov	r0, #0
    2284:	cmp	r7, r0
    2288:	bne	22a0 <compare_bytes+0x32c>
    228c:	mov	r1, #256	; 0x100
    2290:	cmp	r3, r1
    2294:	movls	ip, #1
    2298:	movhi	ip, #0
    229c:	b	22b8 <compare_bytes+0x344>
    22a0:	mov	r2, #0
    22a4:	cmp	r7, r2
    22a8:	movlt	ip, #1
    22ac:	movge	ip, #0
    22b0:	b	22b8 <compare_bytes+0x344>
    22b4:	mov	ip, #0
    22b8:	cmp	ip, #0
    22bc:	beq	23bc <compare_bytes+0x448>
    22c0:	ldr	r0, [pc, #328]	; 2410 <compare_bytes+0x49c>
    22c4:	ldr	r1, [pc, #304]	; 23fc <compare_bytes+0x488>
    22c8:	ldr	r1, [r1]
    22cc:	bl	0 <printf>
    22d0:	mov	r1, r6
    22d4:	mov	r0, r9
    22d8:	bl	1fc <print_escaped>
    22dc:	ldr	r0, [pc, #296]	; 240c <compare_bytes+0x498>
    22e0:	bl	0 <printf>
    22e4:	ldr	r0, [pc, #292]	; 2410 <compare_bytes+0x49c>
    22e8:	ldr	r1, [pc, #296]	; 2418 <compare_bytes+0x4a4>
    22ec:	ldr	r1, [r1]
    22f0:	bl	0 <printf>
    22f4:	mov	r1, r8
    22f8:	mov	r0, sl
    22fc:	bl	1fc <print_escaped>
    2300:	ldr	r0, [pc, #260]	; 240c <compare_bytes+0x498>
    2304:	bl	0 <printf>
    2308:	b	23bc <compare_bytes+0x448>
    230c:	mov	r1, #2
    2310:	mov	r0, r5
    2314:	bl	360 <print_error_with_cursor>
    2318:	bl	0 <coda_get_errno>
    231c:	ldr	r1, [r0]
    2320:	cmn	r1, #300	; 0x12c
    2324:	beq	2340 <compare_bytes+0x3cc>
    2328:	bl	0 <coda_get_errno>
    232c:	ldr	r2, [r0]
    2330:	cmn	r2, #103	; 0x67
    2334:	movne	r1, #1
    2338:	moveq	r1, #0
    233c:	b	2344 <compare_bytes+0x3d0>
    2340:	mov	r1, #0
    2344:	cmp	r1, #0
    2348:	beq	23bc <compare_bytes+0x448>
    234c:	mov	r0, r9
    2350:	bl	0 <free>
    2354:	mov	r0, sl
    2358:	bl	0 <free>
    235c:	mvn	r0, #0
    2360:	b	23d0 <compare_bytes+0x45c>
    2364:	mov	r1, #1
    2368:	mov	r0, r4
    236c:	bl	360 <print_error_with_cursor>
    2370:	bl	0 <coda_get_errno>
    2374:	ldr	r0, [r0]
    2378:	cmn	r0, #300	; 0x12c
    237c:	beq	2398 <compare_bytes+0x424>
    2380:	bl	0 <coda_get_errno>
    2384:	ldr	r0, [r0]
    2388:	cmn	r0, #103	; 0x67
    238c:	movne	ip, #1
    2390:	moveq	ip, #0
    2394:	b	239c <compare_bytes+0x428>
    2398:	mov	ip, #0
    239c:	cmp	ip, #0
    23a0:	beq	23bc <compare_bytes+0x448>
    23a4:	mov	r0, r9
    23a8:	bl	0 <free>
    23ac:	mov	r0, sl
    23b0:	bl	0 <free>
    23b4:	mvn	r0, #0
    23b8:	b	23d0 <compare_bytes+0x45c>
    23bc:	mov	r0, r9
    23c0:	bl	0 <free>
    23c4:	mov	r0, sl
    23c8:	bl	0 <free>
    23cc:	mov	r0, #0
    23d0:	ldr	r4, [sp, #16]
    23d4:	ldr	r5, [sp, #20]
    23d8:	ldr	r6, [sp, #24]
    23dc:	ldr	r7, [sp, #28]
    23e0:	ldr	r8, [sp, #32]
    23e4:	ldr	r9, [sp, #36]	; 0x24
    23e8:	ldr	sl, [sp, #40]	; 0x28
    23ec:	ldr	lr, [sp, #12]
    23f0:	add	sp, sp, #88	; 0x58
    23f4:	bx	lr
    23f8:	.word	0x000006d0
    23fc:	.word	0x00000000
    2400:	.word	0x000008c2
	...
    240c:	.word	0x00000736
    2410:	.word	0x0000004b
    2414:	.word	0x0000095b
    2418:	.word	0x00000004
    241c:	.word	0x00000609
    2420:	.word	0x0000083a

00002424 <compare_attributes>:
    2424:	mov	ip, sp
    2428:	sub	sp, sp, #24
    242c:	str	ip, [sp]
    2430:	str	lr, [sp, #4]
    2434:	str	r4, [sp, #8]
    2438:	str	r5, [sp, #12]
    243c:	mov	r5, r1
    2440:	mov	r4, r0
    2444:	add	r1, sp, #16
    2448:	mov	r0, r4
    244c:	bl	0 <coda_cursor_has_attributes>
    2450:	cmp	r0, #0
    2454:	beq	246c <compare_attributes+0x48>
    2458:	mov	r1, #1
    245c:	mov	r0, r4
    2460:	bl	360 <print_error_with_cursor>
    2464:	mvn	r0, #0
    2468:	b	2538 <compare_attributes+0x114>
    246c:	add	r1, sp, #20
    2470:	mov	r0, r5
    2474:	bl	0 <coda_cursor_has_attributes>
    2478:	cmp	r0, #0
    247c:	beq	2494 <compare_attributes+0x70>
    2480:	mov	r1, #2
    2484:	mov	r0, r5
    2488:	bl	360 <print_error_with_cursor>
    248c:	mvn	r0, #0
    2490:	b	2538 <compare_attributes+0x114>
    2494:	ldr	r3, [sp, #16]
    2498:	cmp	r3, #0
    249c:	bne	24b4 <compare_attributes+0x90>
    24a0:	ldr	r1, [sp, #20]
    24a4:	cmp	r1, #0
    24a8:	movne	r2, #1
    24ac:	moveq	r2, #0
    24b0:	b	24b8 <compare_attributes+0x94>
    24b4:	mov	r2, #1
    24b8:	cmp	r2, #0
    24bc:	beq	2534 <compare_attributes+0x110>
    24c0:	mov	r0, r4
    24c4:	bl	0 <coda_cursor_goto_attributes>
    24c8:	cmp	r0, #0
    24cc:	beq	24e4 <compare_attributes+0xc0>
    24d0:	mov	r1, #1
    24d4:	mov	r0, r4
    24d8:	bl	360 <print_error_with_cursor>
    24dc:	mvn	r0, #0
    24e0:	b	2538 <compare_attributes+0x114>
    24e4:	mov	r0, r5
    24e8:	bl	0 <coda_cursor_goto_attributes>
    24ec:	cmp	r0, #0
    24f0:	beq	2508 <compare_attributes+0xe4>
    24f4:	mov	r1, #2
    24f8:	mov	r0, r5
    24fc:	bl	360 <print_error_with_cursor>
    2500:	mvn	r0, #0
    2504:	b	2538 <compare_attributes+0x114>
    2508:	mov	r1, r5
    250c:	mov	r0, r4
    2510:	bl	254c <compare_data>
    2514:	cmp	r0, #0
    2518:	beq	2524 <compare_attributes+0x100>
    251c:	mvn	r0, #0
    2520:	b	2538 <compare_attributes+0x114>
    2524:	mov	r0, r4
    2528:	bl	0 <coda_cursor_goto_parent>
    252c:	mov	r0, r5
    2530:	bl	0 <coda_cursor_goto_parent>
    2534:	mov	r0, #0
    2538:	ldr	r4, [sp, #8]
    253c:	ldr	r5, [sp, #12]
    2540:	ldr	lr, [sp, #4]
    2544:	add	sp, sp, #24
    2548:	bx	lr

0000254c <compare_data>:
    254c:	mov	ip, sp
    2550:	sub	sp, sp, #32
    2554:	str	ip, [sp]
    2558:	str	lr, [sp, #4]
    255c:	str	r4, [sp, #8]
    2560:	str	r5, [sp, #12]
    2564:	mov	r4, r1
    2568:	mov	r5, r0
    256c:	add	r1, sp, #16
    2570:	mov	r0, r5
    2574:	bl	0 <coda_cursor_get_type_class>
    2578:	cmp	r0, #0
    257c:	beq	2594 <compare_data+0x48>
    2580:	mov	r1, #1
    2584:	mov	r0, r5
    2588:	bl	360 <print_error_with_cursor>
    258c:	mvn	r0, #0
    2590:	b	2854 <compare_data+0x308>
    2594:	add	r1, sp, #20
    2598:	mov	r0, r4
    259c:	bl	0 <coda_cursor_get_type_class>
    25a0:	cmp	r0, #0
    25a4:	beq	25bc <compare_data+0x70>
    25a8:	mov	r1, #2
    25ac:	mov	r0, r4
    25b0:	bl	360 <print_error_with_cursor>
    25b4:	mvn	r0, #0
    25b8:	b	2854 <compare_data+0x308>
    25bc:	ldr	ip, [sp, #16]
    25c0:	ldr	r0, [sp, #20]
    25c4:	cmp	ip, r0
    25c8:	beq	2640 <compare_data+0xf4>
    25cc:	ldr	r0, [pc, #664]	; 286c <compare_data+0x320>
    25d0:	bl	0 <printf>
    25d4:	ldr	r1, [pc, #664]	; 2874 <compare_data+0x328>
    25d8:	mov	r0, r5
    25dc:	bl	0 <coda_cursor_print_path>
    25e0:	ldr	r0, [pc, #660]	; 287c <compare_data+0x330>
    25e4:	bl	0 <printf>
    25e8:	ldr	r0, [pc, #648]	; 2878 <compare_data+0x32c>
    25ec:	ldr	r0, [r0]
    25f0:	cmp	r0, #0
    25f4:	beq	2638 <compare_data+0xec>
    25f8:	ldr	r0, [sp, #16]
    25fc:	bl	0 <coda_type_get_class_name>
    2600:	ldr	r2, [pc, #632]	; 2880 <compare_data+0x334>
    2604:	ldr	r1, [pc, #604]	; 2868 <compare_data+0x31c>
    2608:	ldr	r1, [r1]
    260c:	mov	r3, r0
    2610:	mov	r0, r2
    2614:	mov	r2, r3
    2618:	bl	0 <printf>
    261c:	ldr	r0, [sp, #20]
    2620:	bl	0 <coda_type_get_class_name>
    2624:	mov	r2, r0
    2628:	ldr	r0, [pc, #592]	; 2880 <compare_data+0x334>
    262c:	ldr	r3, [pc, #592]	; 2884 <compare_data+0x338>
    2630:	ldr	r1, [r3]
    2634:	bl	0 <printf>
    2638:	mov	r0, #0
    263c:	b	2854 <compare_data+0x308>
    2640:	ldr	r2, [sp, #16]
    2644:	cmp	r2, #7
    2648:	bcs	2834 <compare_data+0x2e8>
    264c:	add	pc, pc, r2, lsl #2
    2650:	nop	{0}
    2654:	b	268c <compare_data+0x140>
    2658:	b	2670 <compare_data+0x124>
    265c:	b	26a8 <compare_data+0x15c>
    2660:	b	26a8 <compare_data+0x15c>
    2664:	b	26c4 <compare_data+0x178>
    2668:	b	26e0 <compare_data+0x194>
    266c:	b	26fc <compare_data+0x1b0>
    2670:	mov	r1, r4
    2674:	mov	r0, r5
    2678:	bl	f80 <compare_arrays>
    267c:	cmp	r0, #0
    2680:	beq	2834 <compare_data+0x2e8>
    2684:	mvn	r0, #0
    2688:	b	2854 <compare_data+0x308>
    268c:	mov	r1, r4
    2690:	mov	r0, r5
    2694:	bl	11dc <compare_records>
    2698:	cmp	r0, #0
    269c:	beq	2834 <compare_data+0x2e8>
    26a0:	mvn	r0, #0
    26a4:	b	2854 <compare_data+0x308>
    26a8:	mov	r1, r4
    26ac:	mov	r0, r5
    26b0:	bl	16d0 <compare_numbers>
    26b4:	cmp	r0, #0
    26b8:	beq	2834 <compare_data+0x2e8>
    26bc:	mvn	r0, #0
    26c0:	b	2854 <compare_data+0x308>
    26c4:	mov	r1, r4
    26c8:	mov	r0, r5
    26cc:	bl	1c94 <compare_strings>
    26d0:	cmp	r0, #0
    26d4:	beq	2834 <compare_data+0x2e8>
    26d8:	mvn	r0, #0
    26dc:	b	2854 <compare_data+0x308>
    26e0:	mov	r1, r4
    26e4:	mov	r0, r5
    26e8:	bl	1f74 <compare_bytes>
    26ec:	cmp	r0, #0
    26f0:	beq	2834 <compare_data+0x2e8>
    26f4:	mvn	r0, #0
    26f8:	b	2854 <compare_data+0x308>
    26fc:	add	r1, sp, #24
    2700:	mov	r0, r5
    2704:	bl	0 <coda_cursor_get_special_type>
    2708:	cmp	r0, #0
    270c:	beq	2724 <compare_data+0x1d8>
    2710:	mov	r1, #1
    2714:	mov	r0, r5
    2718:	bl	360 <print_error_with_cursor>
    271c:	mvn	r0, #0
    2720:	b	2854 <compare_data+0x308>
    2724:	add	r1, sp, #28
    2728:	mov	r0, r4
    272c:	bl	0 <coda_cursor_get_special_type>
    2730:	cmp	r0, #0
    2734:	beq	274c <compare_data+0x200>
    2738:	mov	r1, #2
    273c:	mov	r0, r4
    2740:	bl	360 <print_error_with_cursor>
    2744:	mvn	r0, #0
    2748:	b	2854 <compare_data+0x308>
    274c:	ldr	r1, [sp, #24]
    2750:	ldr	ip, [sp, #28]
    2754:	cmp	r1, ip
    2758:	beq	27d0 <compare_data+0x284>
    275c:	ldr	r0, [pc, #268]	; 2870 <compare_data+0x324>
    2760:	bl	0 <printf>
    2764:	ldr	r1, [pc, #264]	; 2874 <compare_data+0x328>
    2768:	mov	r0, r5
    276c:	bl	0 <coda_cursor_print_path>
    2770:	ldr	r0, [pc, #260]	; 287c <compare_data+0x330>
    2774:	bl	0 <printf>
    2778:	ldr	r0, [pc, #248]	; 2878 <compare_data+0x32c>
    277c:	ldr	r0, [r0]
    2780:	cmp	r0, #0
    2784:	beq	27c8 <compare_data+0x27c>
    2788:	ldr	r0, [sp, #24]
    278c:	bl	0 <coda_type_get_special_type_name>
    2790:	ldr	r2, [pc, #232]	; 2880 <compare_data+0x334>
    2794:	ldr	r1, [pc, #204]	; 2868 <compare_data+0x31c>
    2798:	ldr	r1, [r1]
    279c:	mov	r3, r0
    27a0:	mov	r0, r2
    27a4:	mov	r2, r3
    27a8:	bl	0 <printf>
    27ac:	ldr	r0, [sp, #28]
    27b0:	bl	0 <coda_type_get_special_type_name>
    27b4:	mov	r2, r0
    27b8:	ldr	r0, [pc, #192]	; 2880 <compare_data+0x334>
    27bc:	ldr	r3, [pc, #192]	; 2884 <compare_data+0x338>
    27c0:	ldr	r1, [r3]
    27c4:	bl	0 <printf>
    27c8:	mov	r0, #0
    27cc:	b	2854 <compare_data+0x308>
    27d0:	mov	r0, r5
    27d4:	bl	0 <coda_cursor_use_base_type_of_special_type>
    27d8:	cmp	r0, #0
    27dc:	beq	27f4 <compare_data+0x2a8>
    27e0:	mov	r1, #1
    27e4:	mov	r0, r5
    27e8:	bl	360 <print_error_with_cursor>
    27ec:	mvn	r0, #0
    27f0:	b	2854 <compare_data+0x308>
    27f4:	mov	r0, r4
    27f8:	bl	0 <coda_cursor_use_base_type_of_special_type>
    27fc:	cmp	r0, #0
    2800:	beq	2818 <compare_data+0x2cc>
    2804:	mov	r1, #2
    2808:	mov	r0, r4
    280c:	bl	360 <print_error_with_cursor>
    2810:	mvn	r0, #0
    2814:	b	2854 <compare_data+0x308>
    2818:	mov	r1, r4
    281c:	mov	r0, r5
    2820:	bl	254c <compare_data>
    2824:	cmp	r0, #0
    2828:	beq	2834 <compare_data+0x2e8>
    282c:	mvn	r0, #0
    2830:	b	2854 <compare_data+0x308>
    2834:	mov	r1, r4
    2838:	mov	r0, r5
    283c:	bl	2424 <compare_attributes>
    2840:	cmp	r0, #0
    2844:	beq	2850 <compare_data+0x304>
    2848:	mvn	r0, #0
    284c:	b	2854 <compare_data+0x308>
    2850:	mov	r0, #0
    2854:	ldr	r4, [sp, #8]
    2858:	ldr	r5, [sp, #12]
    285c:	ldr	lr, [sp, #4]
    2860:	add	sp, sp, #32
    2864:	bx	lr
    2868:	.word	0x00000000
    286c:	.word	0x00000318
    2870:	.word	0x000001f6
	...
    287c:	.word	0x00000736
    2880:	.word	0x00000276
    2884:	.word	0x00000004

00002888 <compare_files>:
    2888:	mov	ip, sp
    288c:	sub	sp, sp, #1072	; 0x430
    2890:	str	ip, [sp]
    2894:	str	lr, [sp, #4]
    2898:	str	r4, [sp, #8]
    289c:	str	r5, [sp, #12]
    28a0:	str	r6, [sp, #16]
    28a4:	str	r7, [sp, #20]
    28a8:	mov	r6, r2
    28ac:	mov	r5, r1
    28b0:	mov	r7, r0
    28b4:	add	r1, sp, #24
    28b8:	mov	r0, r7
    28bc:	bl	0 <coda_open>
    28c0:	mov	r4, r0
    28c4:	cmp	r4, #0
    28c8:	beq	28e4 <compare_files+0x5c>
    28cc:	bl	0 <coda_get_errno>
    28d0:	ldr	r2, [r0]
    28d4:	cmn	r2, #21
    28d8:	moveq	r1, #1
    28dc:	movne	r1, #0
    28e0:	b	28e8 <compare_files+0x60>
    28e4:	mov	r1, #0
    28e8:	cmp	r1, #0
    28ec:	beq	2910 <compare_files+0x88>
    28f0:	mov	r0, #0
    28f4:	bl	0 <coda_set_option_use_mmap>
    28f8:	add	r1, sp, #24
    28fc:	mov	r0, r7
    2900:	bl	0 <coda_open>
    2904:	mov	r4, r0
    2908:	mov	r0, #1
    290c:	bl	0 <coda_set_option_use_mmap>
    2910:	cmp	r4, #0
    2914:	beq	2950 <compare_files+0xc8>
    2918:	bl	0 <coda_get_errno>
    291c:	ldr	r0, [r0]
    2920:	bl	0 <coda_errno_to_string>
    2924:	ldr	ip, [pc, #700]	; 2be8 <compare_files+0x360>
    2928:	ldr	r3, [ip]
    292c:	ldr	r1, [pc, #700]	; 2bf0 <compare_files+0x368>
    2930:	ldr	r2, [pc, #692]	; 2bec <compare_files+0x364>
    2934:	ldr	r2, [r2]
    2938:	mov	ip, r0
    293c:	mov	r0, r3
    2940:	mov	r3, ip
    2944:	bl	0 <fprintf>
    2948:	mvn	r0, #0
    294c:	b	2bcc <compare_files+0x344>
    2950:	ldr	r0, [sp, #24]
    2954:	bl	614 <array_key_info_set_product>
    2958:	cmp	r0, #0
    295c:	beq	2998 <compare_files+0x110>
    2960:	bl	0 <coda_get_errno>
    2964:	ldr	r0, [r0]
    2968:	bl	0 <coda_errno_to_string>
    296c:	ldr	r1, [pc, #628]	; 2be8 <compare_files+0x360>
    2970:	ldr	r3, [r1]
    2974:	ldr	r1, [pc, #628]	; 2bf0 <compare_files+0x368>
    2978:	ldr	r2, [pc, #620]	; 2bec <compare_files+0x364>
    297c:	ldr	r2, [r2]
    2980:	mov	ip, r0
    2984:	mov	r0, r3
    2988:	mov	r3, ip
    298c:	bl	0 <fprintf>
    2990:	mvn	r0, #0
    2994:	b	2bcc <compare_files+0x344>
    2998:	add	r1, sp, #28
    299c:	mov	r0, r5
    29a0:	bl	0 <coda_open>
    29a4:	mov	r4, r0
    29a8:	cmp	r4, #0
    29ac:	beq	29c8 <compare_files+0x140>
    29b0:	bl	0 <coda_get_errno>
    29b4:	ldr	r2, [r0]
    29b8:	cmn	r2, #21
    29bc:	moveq	ip, #1
    29c0:	movne	ip, #0
    29c4:	b	29cc <compare_files+0x144>
    29c8:	mov	ip, #0
    29cc:	cmp	ip, #0
    29d0:	beq	29f4 <compare_files+0x16c>
    29d4:	mov	r0, #0
    29d8:	bl	0 <coda_set_option_use_mmap>
    29dc:	add	r1, sp, #28
    29e0:	mov	r0, r5
    29e4:	bl	0 <coda_open>
    29e8:	mov	r4, r0
    29ec:	mov	r0, #1
    29f0:	bl	0 <coda_set_option_use_mmap>
    29f4:	cmp	r4, #0
    29f8:	beq	2a38 <compare_files+0x1b0>
    29fc:	bl	0 <coda_get_errno>
    2a00:	ldr	r0, [r0]
    2a04:	bl	0 <coda_errno_to_string>
    2a08:	ldr	r2, [pc, #472]	; 2be8 <compare_files+0x360>
    2a0c:	ldr	ip, [r2]
    2a10:	ldr	r1, [pc, #472]	; 2bf0 <compare_files+0x368>
    2a14:	ldr	r2, [pc, #472]	; 2bf4 <compare_files+0x36c>
    2a18:	ldr	r2, [r2]
    2a1c:	mov	r3, r0
    2a20:	mov	r0, ip
    2a24:	bl	0 <fprintf>
    2a28:	ldr	r0, [sp, #24]
    2a2c:	bl	0 <coda_close>
    2a30:	mvn	r0, #0
    2a34:	b	2bcc <compare_files+0x344>
    2a38:	add	r0, sp, #32
    2a3c:	ldr	r1, [sp, #24]
    2a40:	bl	0 <coda_cursor_set_product>
    2a44:	cmp	r0, #0
    2a48:	beq	2a94 <compare_files+0x20c>
    2a4c:	bl	0 <coda_get_errno>
    2a50:	ldr	r0, [r0]
    2a54:	bl	0 <coda_errno_to_string>
    2a58:	ldr	r3, [pc, #392]	; 2be8 <compare_files+0x360>
    2a5c:	ldr	r3, [r3]
    2a60:	ldr	r1, [pc, #392]	; 2bf0 <compare_files+0x368>
    2a64:	ldr	r2, [pc, #384]	; 2bec <compare_files+0x364>
    2a68:	ldr	r2, [r2]
    2a6c:	mov	ip, r0
    2a70:	mov	r0, r3
    2a74:	mov	r3, ip
    2a78:	bl	0 <fprintf>
    2a7c:	ldr	r0, [sp, #24]
    2a80:	bl	0 <coda_close>
    2a84:	ldr	r0, [sp, #28]
    2a88:	bl	0 <coda_close>
    2a8c:	mvn	r0, #0
    2a90:	b	2bcc <compare_files+0x344>
    2a94:	add	r0, sp, #552	; 0x228
    2a98:	ldr	r1, [sp, #28]
    2a9c:	bl	0 <coda_cursor_set_product>
    2aa0:	cmp	r0, #0
    2aa4:	beq	2ae8 <compare_files+0x260>
    2aa8:	bl	0 <coda_get_errno>
    2aac:	ldr	r0, [r0]
    2ab0:	bl	0 <coda_errno_to_string>
    2ab4:	mov	r3, r0
    2ab8:	ldr	ip, [pc, #296]	; 2be8 <compare_files+0x360>
    2abc:	ldr	r0, [ip]
    2ac0:	ldr	r1, [pc, #296]	; 2bf0 <compare_files+0x368>
    2ac4:	ldr	r2, [pc, #296]	; 2bf4 <compare_files+0x36c>
    2ac8:	ldr	r2, [r2]
    2acc:	bl	0 <fprintf>
    2ad0:	ldr	r0, [sp, #24]
    2ad4:	bl	0 <coda_close>
    2ad8:	ldr	r0, [sp, #28]
    2adc:	bl	0 <coda_close>
    2ae0:	mvn	r0, #0
    2ae4:	b	2bcc <compare_files+0x344>
    2ae8:	cmp	r6, #0
    2aec:	beq	2ba8 <compare_files+0x320>
    2af0:	add	r0, sp, #32
    2af4:	mov	r1, r6
    2af8:	bl	0 <coda_cursor_goto>
    2afc:	cmp	r0, #0
    2b00:	beq	2b4c <compare_files+0x2c4>
    2b04:	bl	0 <coda_get_errno>
    2b08:	ldr	r0, [r0]
    2b0c:	bl	0 <coda_errno_to_string>
    2b10:	ldr	r2, [pc, #208]	; 2be8 <compare_files+0x360>
    2b14:	ldr	r3, [r2]
    2b18:	ldr	r1, [pc, #208]	; 2bf0 <compare_files+0x368>
    2b1c:	ldr	ip, [pc, #200]	; 2bec <compare_files+0x364>
    2b20:	ldr	r2, [ip]
    2b24:	mov	ip, r0
    2b28:	mov	r0, r3
    2b2c:	mov	r3, ip
    2b30:	bl	0 <fprintf>
    2b34:	ldr	r0, [sp, #24]
    2b38:	bl	0 <coda_close>
    2b3c:	ldr	r0, [sp, #28]
    2b40:	bl	0 <coda_close>
    2b44:	mvn	r0, #0
    2b48:	b	2bcc <compare_files+0x344>
    2b4c:	add	r0, sp, #552	; 0x228
    2b50:	mov	r1, r6
    2b54:	bl	0 <coda_cursor_goto>
    2b58:	cmp	r0, #0
    2b5c:	beq	2ba8 <compare_files+0x320>
    2b60:	bl	0 <coda_get_errno>
    2b64:	ldr	r0, [r0]
    2b68:	bl	0 <coda_errno_to_string>
    2b6c:	ldr	r3, [pc, #116]	; 2be8 <compare_files+0x360>
    2b70:	ldr	r3, [r3]
    2b74:	ldr	r1, [pc, #116]	; 2bf0 <compare_files+0x368>
    2b78:	ldr	ip, [pc, #116]	; 2bf4 <compare_files+0x36c>
    2b7c:	ldr	r2, [ip]
    2b80:	mov	ip, r0
    2b84:	mov	r0, r3
    2b88:	mov	r3, ip
    2b8c:	bl	0 <fprintf>
    2b90:	ldr	r0, [sp, #24]
    2b94:	bl	0 <coda_close>
    2b98:	ldr	r0, [sp, #28]
    2b9c:	bl	0 <coda_close>
    2ba0:	mvn	r0, #0
    2ba4:	b	2bcc <compare_files+0x344>
    2ba8:	add	r0, sp, #32
    2bac:	add	r1, sp, #552	; 0x228
    2bb0:	bl	254c <compare_data>
    2bb4:	mov	r4, r0
    2bb8:	ldr	r0, [sp, #24]
    2bbc:	bl	0 <coda_close>
    2bc0:	ldr	r0, [sp, #28]
    2bc4:	bl	0 <coda_close>
    2bc8:	mov	r0, r4
    2bcc:	ldr	r4, [sp, #8]
    2bd0:	ldr	r5, [sp, #12]
    2bd4:	ldr	r6, [sp, #16]
    2bd8:	ldr	r7, [sp, #20]
    2bdc:	ldr	lr, [sp, #4]
    2be0:	add	sp, sp, #1072	; 0x430
    2be4:	bx	lr
	...
    2bf0:	.word	0x00000443
    2bf4:	.word	0x00000004

00002bf8 <main>:
    2bf8:	mov	ip, sp
    2bfc:	sub	sp, sp, #32
    2c00:	str	ip, [sp]
    2c04:	str	lr, [sp, #4]
    2c08:	str	r4, [sp, #8]
    2c0c:	str	r5, [sp, #12]
    2c10:	str	r6, [sp, #16]
    2c14:	str	r7, [sp, #20]
    2c18:	str	r8, [sp, #24]
    2c1c:	mov	r5, r1
    2c20:	mov	r7, r0
    2c24:	ldr	r0, [pc, #1088]	; 306c <main+0x474>
    2c28:	mov	r3, #0
    2c2c:	str	r3, [r0]
    2c30:	mov	r4, #1
    2c34:	mov	r6, #0
    2c38:	cmp	r7, #1
    2c3c:	beq	2c5c <main+0x64>
    2c40:	ldr	r0, [r5, #4]
    2c44:	ldr	r1, [pc, #1084]	; 3088 <main+0x490>
    2c48:	bl	0 <strcmp>
    2c4c:	cmp	r0, #0
    2c50:	moveq	r2, #1
    2c54:	movne	r2, #0
    2c58:	b	2c60 <main+0x68>
    2c5c:	mov	r2, #1
    2c60:	cmp	r2, #0
    2c64:	bne	2c84 <main+0x8c>
    2c68:	ldr	r0, [r5, #4]
    2c6c:	ldr	r1, [pc, #1004]	; 3060 <main+0x468>
    2c70:	bl	0 <strcmp>
    2c74:	cmp	r0, #0
    2c78:	moveq	ip, #1
    2c7c:	movne	ip, #0
    2c80:	b	2c88 <main+0x90>
    2c84:	mov	ip, #1
    2c88:	cmp	ip, #0
    2c8c:	beq	2c9c <main+0xa4>
    2c90:	bl	48 <print_help>
    2c94:	mov	r0, #0
    2c98:	bl	0 <exit>
    2c9c:	ldr	r0, [r5, #4]
    2ca0:	ldr	r1, [pc, #948]	; 305c <main+0x464>
    2ca4:	bl	0 <strcmp>
    2ca8:	cmp	r0, #0
    2cac:	beq	2ccc <main+0xd4>
    2cb0:	ldr	r0, [r5, #4]
    2cb4:	ldr	r1, [pc, #964]	; 3080 <main+0x488>
    2cb8:	bl	0 <strcmp>
    2cbc:	cmp	r0, #0
    2cc0:	moveq	r2, #1
    2cc4:	movne	r2, #0
    2cc8:	b	2cd0 <main+0xd8>
    2ccc:	mov	r2, #1
    2cd0:	cmp	r2, #0
    2cd4:	beq	2ce4 <main+0xec>
    2cd8:	bl	0 <print_version>
    2cdc:	mov	r0, #0
    2ce0:	bl	0 <exit>
    2ce4:	bl	3d4 <array_key_info_init>
    2ce8:	mov	r8, #1
    2cec:	add	ip, r8, #1
    2cf0:	cmp	ip, r7
    2cf4:	bge	2d14 <main+0x11c>
    2cf8:	ldr	r0, [r5, r8, lsl #2]
    2cfc:	ldr	r1, [pc, #852]	; 3058 <main+0x460>
    2d00:	bl	0 <strcmp>
    2d04:	cmp	r0, #0
    2d08:	moveq	r0, #1
    2d0c:	movne	r0, #0
    2d10:	b	2d18 <main+0x120>
    2d14:	mov	r0, #0
    2d18:	cmp	r0, #0
    2d1c:	bne	2d64 <main+0x16c>
    2d20:	ldr	r2, [pc, #832]	; 3068 <main+0x470>
    2d24:	ldr	r0, [r5]
    2d28:	mov	r1, #0
    2d2c:	bl	0 <coda_set_definition_path_conditional>
    2d30:	cmp	r0, #0
    2d34:	beq	2d78 <main+0x180>
    2d38:	bl	0 <coda_get_errno>
    2d3c:	ldr	r0, [r0]
    2d40:	bl	0 <coda_errno_to_string>
    2d44:	mov	r2, r0
    2d48:	ldr	r1, [pc, #760]	; 3048 <main+0x450>
    2d4c:	ldr	r0, [r1]
    2d50:	ldr	r1, [pc, #748]	; 3044 <main+0x44c>
    2d54:	bl	0 <fprintf>
    2d58:	mov	r0, #1
    2d5c:	bl	0 <exit>
    2d60:	b	2d78 <main+0x180>
    2d64:	lsl	ip, r8, #2
    2d68:	add	r0, r5, ip
    2d6c:	ldr	r0, [r0, #4]
    2d70:	bl	0 <coda_set_definition_path>
    2d74:	add	r8, r8, #2
    2d78:	cmp	r8, r7
    2d7c:	bge	2f70 <main+0x378>
    2d80:	ldr	r0, [r5, r8, lsl #2]
    2d84:	ldr	r1, [pc, #752]	; 307c <main+0x484>
    2d88:	bl	0 <strcmp>
    2d8c:	cmp	r0, #0
    2d90:	beq	2db0 <main+0x1b8>
    2d94:	ldr	r0, [r5, r8, lsl #2]
    2d98:	ldr	r1, [pc, #692]	; 3054 <main+0x45c>
    2d9c:	bl	0 <strcmp>
    2da0:	cmp	r0, #0
    2da4:	moveq	ip, #1
    2da8:	movne	ip, #0
    2dac:	b	2db4 <main+0x1bc>
    2db0:	mov	ip, #1
    2db4:	cmp	ip, #0
    2db8:	bne	2f5c <main+0x364>
    2dbc:	ldr	r0, [r5, r8, lsl #2]
    2dc0:	ldr	r1, [pc, #648]	; 3050 <main+0x458>
    2dc4:	bl	0 <strcmp>
    2dc8:	cmp	r0, #0
    2dcc:	beq	2dec <main+0x1f4>
    2dd0:	ldr	r0, [r5, r8, lsl #2]
    2dd4:	ldr	r1, [pc, #624]	; 304c <main+0x454>
    2dd8:	bl	0 <strcmp>
    2ddc:	cmp	r0, #0
    2de0:	moveq	ip, #1
    2de4:	movne	ip, #0
    2de8:	b	2df0 <main+0x1f8>
    2dec:	mov	ip, #1
    2df0:	cmp	ip, #0
    2df4:	bne	2f54 <main+0x35c>
    2df8:	ldr	r0, [r5, r8, lsl #2]
    2dfc:	ldr	r1, [pc, #628]	; 3078 <main+0x480>
    2e00:	bl	0 <strcmp>
    2e04:	cmp	r0, #0
    2e08:	beq	2e28 <main+0x230>
    2e0c:	ldr	r0, [r5, r8, lsl #2]
    2e10:	ldr	r1, [pc, #600]	; 3070 <main+0x478>
    2e14:	bl	0 <strcmp>
    2e18:	cmp	r0, #0
    2e1c:	moveq	r2, #1
    2e20:	movne	r2, #0
    2e24:	b	2e2c <main+0x234>
    2e28:	mov	r2, #1
    2e2c:	cmp	r2, #0
    2e30:	beq	2e48 <main+0x250>
    2e34:	add	r1, r8, #1
    2e38:	cmp	r1, r7
    2e3c:	movlt	ip, #1
    2e40:	movge	ip, #0
    2e44:	b	2e4c <main+0x254>
    2e48:	mov	ip, #0
    2e4c:	cmp	ip, #0
    2e50:	beq	2e74 <main+0x27c>
    2e54:	lsl	r1, r8, #2
    2e58:	add	r1, r5, r1
    2e5c:	ldr	r0, [r1, #4]
    2e60:	ldrb	r3, [r0]
    2e64:	cmp	r3, #45	; 0x2d
    2e68:	movne	r2, #1
    2e6c:	moveq	r2, #0
    2e70:	b	2e78 <main+0x280>
    2e74:	mov	r2, #0
    2e78:	cmp	r2, #0
    2e7c:	bne	2f40 <main+0x348>
    2e80:	ldr	r0, [r5, r8, lsl #2]
    2e84:	ldr	r1, [pc, #472]	; 3064 <main+0x46c>
    2e88:	bl	0 <strcmp>
    2e8c:	cmp	r0, #0
    2e90:	beq	2eb0 <main+0x2b8>
    2e94:	ldr	r0, [r5, r8, lsl #2]
    2e98:	ldr	r1, [pc, #484]	; 3084 <main+0x48c>
    2e9c:	bl	0 <strcmp>
    2ea0:	cmp	r0, #0
    2ea4:	moveq	r2, #1
    2ea8:	movne	r2, #0
    2eac:	b	2eb4 <main+0x2bc>
    2eb0:	mov	r2, #1
    2eb4:	cmp	r2, #0
    2eb8:	beq	2ed0 <main+0x2d8>
    2ebc:	add	r1, r8, #2
    2ec0:	cmp	r1, r7
    2ec4:	movlt	r1, #1
    2ec8:	movge	r1, #0
    2ecc:	b	2ed4 <main+0x2dc>
    2ed0:	mov	r1, #0
    2ed4:	cmp	r1, #0
    2ed8:	bne	2f0c <main+0x314>
    2edc:	ldr	r2, [r5, r8, lsl #2]
    2ee0:	ldrb	r1, [r2]
    2ee4:	cmp	r1, #45	; 0x2d
    2ee8:	bne	2f70 <main+0x378>
    2eec:	ldr	r3, [pc, #340]	; 3048 <main+0x450>
    2ef0:	ldr	r0, [r3]
    2ef4:	ldr	r1, [pc, #376]	; 3074 <main+0x47c>
    2ef8:	bl	0 <fprintf>
    2efc:	bl	48 <print_help>
    2f00:	mov	r0, #1
    2f04:	bl	0 <exit>
    2f08:	b	2f68 <main+0x370>
    2f0c:	lsl	ip, r8, #2
    2f10:	add	r3, r5, ip
    2f14:	ldr	r0, [r3, #4]
    2f18:	lsl	r3, r8, #2
    2f1c:	add	ip, r5, r3
    2f20:	ldr	r1, [ip, #8]
    2f24:	bl	4b0 <array_key_info_add_key>
    2f28:	cmp	r0, #0
    2f2c:	beq	2f38 <main+0x340>
    2f30:	mvn	r0, #0
    2f34:	b	3024 <main+0x42c>
    2f38:	add	r8, r8, #2
    2f3c:	b	2f68 <main+0x370>
    2f40:	lsl	r1, r8, #2
    2f44:	add	ip, r5, r1
    2f48:	ldr	r6, [ip, #4]
    2f4c:	add	r8, r8, #1
    2f50:	b	2f68 <main+0x370>
    2f54:	mov	r4, #0
    2f58:	b	2f68 <main+0x370>
    2f5c:	ldr	r2, [pc, #264]	; 306c <main+0x474>
    2f60:	mov	r3, #1
    2f64:	str	r3, [r2]
    2f68:	add	r8, r8, #1
    2f6c:	b	2d78 <main+0x180>
    2f70:	sub	r3, r7, #2
    2f74:	cmp	r8, r3
    2f78:	beq	2f98 <main+0x3a0>
    2f7c:	ldr	r1, [pc, #196]	; 3048 <main+0x450>
    2f80:	ldr	r0, [r1]
    2f84:	ldr	r1, [pc, #232]	; 3074 <main+0x47c>
    2f88:	bl	0 <fprintf>
    2f8c:	bl	48 <print_help>
    2f90:	mov	r0, #1
    2f94:	bl	0 <exit>
    2f98:	bl	0 <coda_init>
    2f9c:	cmp	r0, #0
    2fa0:	beq	2fcc <main+0x3d4>
    2fa4:	bl	0 <coda_get_errno>
    2fa8:	ldr	r0, [r0]
    2fac:	bl	0 <coda_errno_to_string>
    2fb0:	mov	r2, r0
    2fb4:	ldr	r0, [pc, #140]	; 3048 <main+0x450>
    2fb8:	ldr	r0, [r0]
    2fbc:	ldr	r1, [pc, #128]	; 3044 <main+0x44c>
    2fc0:	bl	0 <fprintf>
    2fc4:	mov	r0, #1
    2fc8:	bl	0 <exit>
    2fcc:	mov	r0, #0
    2fd0:	bl	0 <coda_set_option_perform_boundary_checks>
    2fd4:	mov	r0, r4
    2fd8:	bl	0 <coda_set_option_perform_conversions>
    2fdc:	lsl	r2, r7, #2
    2fe0:	add	r2, r5, r2
    2fe4:	sub	lr, r2, #4096	; 0x1000
    2fe8:	ldr	r0, [lr, #4088]	; 0xff8
    2fec:	lsl	r3, r7, #2
    2ff0:	add	r1, r5, r3
    2ff4:	sub	lr, r1, #4096	; 0x1000
    2ff8:	ldr	r1, [lr, #4092]	; 0xffc
    2ffc:	mov	r2, r6
    3000:	bl	2888 <compare_files>
    3004:	mov	r4, r0
    3008:	bl	0 <coda_done>
    300c:	bl	430 <array_key_info_done>
    3010:	cmp	r4, #0
    3014:	beq	3020 <main+0x428>
    3018:	mov	r0, #1
    301c:	bl	0 <exit>
    3020:	mov	r0, #0
    3024:	ldr	r4, [sp, #8]
    3028:	ldr	r5, [sp, #12]
    302c:	ldr	r6, [sp, #16]
    3030:	ldr	r7, [sp, #20]
    3034:	ldr	r8, [sp, #24]
    3038:	ldr	lr, [sp, #4]
    303c:	add	sp, sp, #32
    3040:	bx	lr
    3044:	.word	0x00000541
    3048:	.word	0x00000000
    304c:	.word	0x0000016f
    3050:	.word	0x0000014d
    3054:	.word	0x00000829
    3058:	.word	0x000001d8
    305c:	.word	0x0000027c
    3060:	.word	0x00000666
    3064:	.word	0x0000020f
    3068:	.word	0x00000133
    306c:	.word	0x00000000
    3070:	.word	0x00000422
    3074:	.word	0x00000429
    3078:	.word	0x00000955
    307c:	.word	0x00000379
    3080:	.word	0x0000067f
    3084:	.word	0x000006ae
    3088:	.word	0x00000188
