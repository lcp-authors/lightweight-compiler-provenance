
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-list.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <print_type>:
   0:	cmp	r1, #31
   4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   8:	mov	r4, r1
   c:	sub	sp, sp, #68	; 0x44
  10:	bgt	494 <print_type+0x494>
  14:	ldr	sl, [pc, #1184]	; 4bc <print_type+0x4bc>
  18:	add	r1, sp, #20
  1c:	mov	r7, r0
  20:	str	r0, [sl, r4, lsl #2]
  24:	bl	0 <coda_type_get_class>
  28:	ldr	r3, [sp, #20]
  2c:	cmp	r3, #1
  30:	bls	19c <print_type+0x19c>
  34:	cmp	r3, #6
  38:	beq	294 <print_type+0x294>
  3c:	mov	r0, #47	; 0x2f
  40:	bl	0 <putchar>
  44:	cmp	r4, #0
  48:	ble	104 <print_type+0x104>
  4c:	ldr	r9, [pc, #1132]	; 4c0 <print_type+0x4c0>
  50:	mov	fp, #0
  54:	add	r3, r9, r4, lsl #2
  58:	str	r3, [sp, #4]
  5c:	str	r7, [sp, #8]
  60:	str	r4, [sp, #12]
  64:	ldr	r1, [r9, #4]!
  68:	cmn	r1, #1
  6c:	beq	358 <print_type+0x358>
  70:	ldr	r4, [sl, fp, lsl #2]
  74:	ldr	r3, [r4, #8]
  78:	cmp	r3, #0
  7c:	beq	218 <print_type+0x218>
  80:	cmp	r3, #1
  84:	bne	204 <print_type+0x204>
  88:	add	r2, sp, #32
  8c:	add	r1, sp, #28
  90:	mov	r0, r4
  94:	bl	0 <coda_type_get_array_dim>
  98:	mov	r0, #91	; 0x5b
  9c:	bl	0 <putchar>
  a0:	ldr	r3, [sp, #28]
  a4:	cmp	r3, #0
  a8:	ble	e4 <print_type+0xe4>
  ac:	add	r6, sp, #32
  b0:	add	r4, r4, #84	; 0x54
  b4:	ldr	r1, [r6], #4
  b8:	mov	r5, #0
  bc:	cmp	r1, #0
  c0:	mov	r8, #63	; 0x3f
  c4:	mov	r7, #44	; 0x2c
  c8:	blt	168 <print_type+0x168>
  cc:	ldr	r0, [pc, #1008]	; 4c4 <print_type+0x4c4>
  d0:	bl	0 <printf>
  d4:	ldr	r3, [sp, #28]
  d8:	add	r5, r5, #1
  dc:	cmp	r5, r3
  e0:	blt	150 <print_type+0x150>
  e4:	mov	r0, #93	; 0x5d
  e8:	bl	0 <putchar>
  ec:	ldr	r3, [sp, #4]
  f0:	add	fp, fp, #1
  f4:	cmp	r9, r3
  f8:	bne	64 <print_type+0x64>
  fc:	ldr	r7, [sp, #8]
 100:	ldr	r4, [sp, #12]
 104:	ldr	r3, [pc, #956]	; 4c8 <print_type+0x4c8>
 108:	ldr	r3, [r3]
 10c:	cmp	r3, #0
 110:	bne	364 <print_type+0x364>
 114:	ldr	r3, [pc, #944]	; 4cc <print_type+0x4cc>
 118:	ldr	r3, [r3]
 11c:	cmp	r3, #0
 120:	bne	444 <print_type+0x444>
 124:	ldr	r3, [pc, #932]	; 4d0 <print_type+0x4d0>
 128:	ldr	r3, [r3]
 12c:	cmp	r3, #0
 130:	bne	3ec <print_type+0x3ec>
 134:	ldr	r3, [pc, #920]	; 4d4 <print_type+0x4d4>
 138:	ldr	r3, [r3]
 13c:	cmp	r3, #0
 140:	bne	394 <print_type+0x394>
 144:	mov	r0, #10
 148:	bl	0 <putchar>
 14c:	b	1ac <print_type+0x1ac>
 150:	mov	r0, r7
 154:	bl	0 <putchar>
 158:	ldr	r1, [r6], #4
 15c:	add	r4, r4, #4
 160:	cmp	r1, #0
 164:	bge	cc <print_type+0xcc>
 168:	ldr	r3, [pc, #872]	; 4d8 <print_type+0x4d8>
 16c:	ldr	r3, [r3]
 170:	cmp	r3, #0
 174:	beq	190 <print_type+0x190>
 178:	ldr	r0, [r4]
 17c:	cmp	r0, #0
 180:	beq	190 <print_type+0x190>
 184:	ldr	r1, [pc, #848]	; 4dc <print_type+0x4dc>
 188:	bl	0 <coda_expression_print>
 18c:	b	d4 <print_type+0xd4>
 190:	mov	r0, r8
 194:	bl	0 <putchar>
 198:	b	d4 <print_type+0xd4>
 19c:	ldr	r3, [pc, #828]	; 4e0 <print_type+0x4e0>
 1a0:	ldr	r3, [r3]
 1a4:	cmp	r3, #0
 1a8:	bne	3c <print_type+0x3c>
 1ac:	ldr	r3, [pc, #816]	; 4e4 <print_type+0x4e4>
 1b0:	ldr	r3, [r3]
 1b4:	cmp	r3, #0
 1b8:	bne	250 <print_type+0x250>
 1bc:	ldr	r3, [sp, #20]
 1c0:	cmp	r3, #1
 1c4:	beq	328 <print_type+0x328>
 1c8:	bcc	2a0 <print_type+0x2a0>
 1cc:	cmp	r3, #6
 1d0:	bne	1fc <print_type+0x1fc>
 1d4:	ldr	r3, [pc, #780]	; 4e8 <print_type+0x4e8>
 1d8:	ldr	r3, [r3]
 1dc:	cmp	r3, #0
 1e0:	bne	1fc <print_type+0x1fc>
 1e4:	add	r1, sp, #32
 1e8:	mov	r0, r7
 1ec:	bl	0 <coda_type_get_special_base_type>
 1f0:	mov	r1, r4
 1f4:	ldr	r0, [sp, #32]
 1f8:	bl	0 <print_type>
 1fc:	add	sp, sp, #68	; 0x44
 200:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 204:	ldr	r3, [pc, #736]	; 4ec <print_type+0x4ec>
 208:	mov	r2, #125	; 0x7d
 20c:	ldr	r1, [pc, #732]	; 4f0 <print_type+0x4f0>
 210:	ldr	r0, [pc, #732]	; 4f4 <print_type+0x4f4>
 214:	bl	0 <__assert_fail>
 218:	mov	r0, r4
 21c:	add	r2, sp, #32
 220:	bl	0 <coda_type_get_record_field_name>
 224:	cmp	fp, #0
 228:	beq	240 <print_type+0x240>
 22c:	ldr	r3, [r9, #-4]
 230:	cmn	r3, #1
 234:	beq	240 <print_type+0x240>
 238:	mov	r0, #47	; 0x2f
 23c:	bl	0 <putchar>
 240:	ldr	r1, [sp, #32]
 244:	ldr	r0, [pc, #684]	; 4f8 <print_type+0x4f8>
 248:	bl	0 <printf>
 24c:	b	ec <print_type+0xec>
 250:	add	r1, sp, #28
 254:	mov	r0, r7
 258:	bl	0 <coda_type_has_attributes>
 25c:	ldr	r3, [sp, #28]
 260:	cmp	r3, #0
 264:	beq	1bc <print_type+0x1bc>
 268:	add	r1, sp, #32
 26c:	mov	r0, r7
 270:	bl	0 <coda_type_get_attributes>
 274:	ldr	r2, [pc, #580]	; 4c0 <print_type+0x4c0>
 278:	add	r3, r4, #1
 27c:	mvn	ip, #0
 280:	mov	r1, r3
 284:	ldr	r0, [sp, #32]
 288:	str	ip, [r2, r3, lsl #2]
 28c:	bl	0 <print_type>
 290:	b	1bc <print_type+0x1bc>
 294:	ldr	r3, [pc, #588]	; 4e8 <print_type+0x4e8>
 298:	ldr	r3, [r3]
 29c:	b	1a4 <print_type+0x1a4>
 2a0:	add	r1, sp, #24
 2a4:	mov	r0, r7
 2a8:	bl	0 <coda_type_get_num_record_fields>
 2ac:	ldr	r3, [sp, #24]
 2b0:	cmp	r3, #0
 2b4:	ble	1fc <print_type+0x1fc>
 2b8:	ldr	r6, [pc, #572]	; 4fc <print_type+0x4fc>
 2bc:	ldr	r8, [pc, #508]	; 4c0 <print_type+0x4c0>
 2c0:	add	r4, r4, #1
 2c4:	mov	r5, #0
 2c8:	add	r2, sp, #28
 2cc:	mov	r1, r5
 2d0:	mov	r0, r7
 2d4:	bl	0 <coda_type_get_record_field_type>
 2d8:	ldr	r3, [r6]
 2dc:	cmp	r3, #0
 2e0:	bne	300 <print_type+0x300>
 2e4:	add	r2, sp, #32
 2e8:	mov	r1, r5
 2ec:	mov	r0, r7
 2f0:	bl	0 <coda_type_get_record_field_hidden_status>
 2f4:	ldr	r3, [sp, #32]
 2f8:	cmp	r3, #0
 2fc:	bne	310 <print_type+0x310>
 300:	mov	r1, r4
 304:	ldr	r0, [sp, #28]
 308:	str	r5, [r8, r4, lsl #2]
 30c:	bl	0 <print_type>
 310:	ldr	r3, [sp, #24]
 314:	add	r5, r5, #1
 318:	cmp	r3, r5
 31c:	bgt	2c8 <print_type+0x2c8>
 320:	add	sp, sp, #68	; 0x44
 324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 328:	add	r1, sp, #32
 32c:	mov	r0, r7
 330:	bl	0 <coda_type_get_array_base_type>
 334:	ldr	r3, [pc, #388]	; 4c0 <print_type+0x4c0>
 338:	add	r4, r4, #1
 33c:	mov	r2, #0
 340:	mov	r1, r4
 344:	ldr	r0, [sp, #32]
 348:	str	r2, [r3, r4, lsl #2]
 34c:	bl	0 <print_type>
 350:	add	sp, sp, #68	; 0x44
 354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 358:	mov	r0, #64	; 0x40
 35c:	bl	0 <putchar>
 360:	b	ec <print_type+0xec>
 364:	add	r1, sp, #32
 368:	mov	r0, r7
 36c:	bl	0 <coda_type_get_read_type>
 370:	ldr	r3, [pc, #392]	; 500 <print_type+0x500>
 374:	ldr	r0, [sp, #32]
 378:	ldr	r5, [r3]
 37c:	bl	0 <coda_type_get_native_type_name>
 380:	mov	r1, r5
 384:	mov	r2, r0
 388:	ldr	r0, [pc, #372]	; 504 <print_type+0x504>
 38c:	bl	0 <printf>
 390:	b	114 <print_type+0x114>
 394:	ldr	r3, [pc, #356]	; 500 <print_type+0x500>
 398:	ldr	r0, [pc, #344]	; 4f8 <print_type+0x4f8>
 39c:	ldr	r1, [r3]
 3a0:	bl	0 <printf>
 3a4:	add	r1, sp, #32
 3a8:	mov	r0, r7
 3ac:	bl	0 <coda_type_get_description>
 3b0:	ldr	r1, [sp, #32]
 3b4:	cmp	r1, #0
 3b8:	beq	144 <print_type+0x144>
 3bc:	ldr	r5, [pc, #324]	; 508 <print_type+0x508>
 3c0:	ldr	r3, [r5]
 3c4:	cmp	r3, #0
 3c8:	bne	474 <print_type+0x474>
 3cc:	ldr	r0, [pc, #292]	; 4f8 <print_type+0x4f8>
 3d0:	bl	0 <printf>
 3d4:	ldr	r3, [r5]
 3d8:	cmp	r3, #0
 3dc:	beq	144 <print_type+0x144>
 3e0:	mov	r0, #34	; 0x22
 3e4:	bl	0 <putchar>
 3e8:	b	144 <print_type+0x144>
 3ec:	ldr	r3, [pc, #268]	; 500 <print_type+0x500>
 3f0:	ldr	r0, [pc, #256]	; 4f8 <print_type+0x4f8>
 3f4:	ldr	r1, [r3]
 3f8:	bl	0 <printf>
 3fc:	add	r1, sp, #32
 400:	mov	r0, r7
 404:	bl	0 <coda_type_get_unit>
 408:	ldr	r1, [sp, #32]
 40c:	cmp	r1, #0
 410:	beq	134 <print_type+0x134>
 414:	ldr	r5, [pc, #236]	; 508 <print_type+0x508>
 418:	ldr	r3, [r5]
 41c:	cmp	r3, #0
 420:	bne	484 <print_type+0x484>
 424:	ldr	r0, [pc, #204]	; 4f8 <print_type+0x4f8>
 428:	bl	0 <printf>
 42c:	ldr	r3, [r5]
 430:	cmp	r3, #0
 434:	beq	134 <print_type+0x134>
 438:	mov	r0, #34	; 0x22
 43c:	bl	0 <putchar>
 440:	b	134 <print_type+0x134>
 444:	add	r1, sp, #32
 448:	mov	r0, r7
 44c:	bl	0 <coda_type_get_format>
 450:	ldr	r3, [pc, #168]	; 500 <print_type+0x500>
 454:	ldr	r0, [sp, #32]
 458:	ldr	r5, [r3]
 45c:	bl	0 <coda_type_get_format_name>
 460:	mov	r1, r5
 464:	mov	r2, r0
 468:	ldr	r0, [pc, #148]	; 504 <print_type+0x504>
 46c:	bl	0 <printf>
 470:	b	124 <print_type+0x124>
 474:	mov	r0, #34	; 0x22
 478:	bl	0 <putchar>
 47c:	ldr	r1, [sp, #32]
 480:	b	3cc <print_type+0x3cc>
 484:	mov	r0, #34	; 0x22
 488:	bl	0 <putchar>
 48c:	ldr	r1, [sp, #32]
 490:	b	424 <print_type+0x424>
 494:	mov	r0, #10
 498:	bl	0 <putchar>
 49c:	ldr	r1, [pc, #104]	; 50c <print_type+0x50c>
 4a0:	mov	r2, r4
 4a4:	mov	r3, #32
 4a8:	ldr	r0, [r1]
 4ac:	ldr	r1, [pc, #92]	; 510 <print_type+0x510>
 4b0:	bl	0 <fprintf>
 4b4:	mov	r0, #1
 4b8:	bl	0 <exit>
	...
 4c4:	.word	0x0000004c
	...
 4f0:	.word	0x00000050
 4f4:	.word	0x000000a0
 4f8:	.word	0x00000048
	...
 504:	.word	0x000000a4
	...

00000514 <generate_list>:
 514:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 518:	sub	sp, sp, #36	; 0x24
 51c:	subs	r4, r2, #0
 520:	str	r1, [sp, #20]
 524:	str	r0, [sp, #28]
 528:	blt	5c0 <generate_list+0xac>
 52c:	bl	0 <coda_data_dictionary_get_product_class>
 530:	cmp	r0, #0
 534:	beq	788 <generate_list+0x274>
 538:	ldr	r1, [sp, #20]
 53c:	bl	0 <coda_product_class_get_product_type>
 540:	cmp	r0, #0
 544:	beq	754 <generate_list+0x240>
 548:	mov	r1, r4
 54c:	bl	0 <coda_product_type_get_product_definition_by_version>
 550:	cmp	r0, #0
 554:	beq	79c <generate_list+0x288>
 558:	ldr	r0, [r0, #28]
 55c:	cmp	r0, #0
 560:	beq	5b8 <generate_list+0xa4>
 564:	mov	r1, #0
 568:	add	sp, sp, #36	; 0x24
 56c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
 570:	b	0 <print_type>
 574:	ldr	r4, [r8, #28]
 578:	ldr	r3, [sp, #12]
 57c:	add	r3, r3, #1
 580:	cmp	r3, r4
 584:	str	r3, [sp, #12]
 588:	blt	630 <generate_list+0x11c>
 58c:	ldr	r3, [pc, #540]	; 7b0 <generate_list+0x29c>
 590:	bl	0 <__aeabi_read_tp>
 594:	ldr	r2, [sp, #24]
 598:	ldr	r3, [pc, r3]
 59c:	add	r2, r2, #1
 5a0:	mov	r1, r2
 5a4:	ldr	r3, [r0, r3]
 5a8:	str	r2, [sp, #24]
 5ac:	ldr	r2, [r3]
 5b0:	cmp	r1, r2
 5b4:	blt	5f0 <generate_list+0xdc>
 5b8:	add	sp, sp, #36	; 0x24
 5bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
 5c0:	ldr	r3, [pc, #492]	; 7b4 <generate_list+0x2a0>
 5c4:	bl	0 <__aeabi_read_tp>
 5c8:	ldr	r3, [pc, r3]
 5cc:	ldr	r3, [r0, r3]
 5d0:	ldr	r2, [r3]
 5d4:	cmp	r2, #0
 5d8:	ble	5b8 <generate_list+0xa4>
 5dc:	ldr	sl, [pc, #468]	; 7b8 <generate_list+0x2a4>
 5e0:	ldr	fp, [pc, #468]	; 7bc <generate_list+0x2a8>
 5e4:	ldr	r9, [pc, #468]	; 7c0 <generate_list+0x2ac>
 5e8:	mov	r2, #0
 5ec:	str	r2, [sp, #24]
 5f0:	ldr	r2, [sp, #28]
 5f4:	ldr	r3, [r3, #4]
 5f8:	cmp	r2, #0
 5fc:	ldr	r2, [sp, #24]
 600:	ldr	r8, [r3, r2, lsl #2]
 604:	beq	61c <generate_list+0x108>
 608:	ldr	r1, [sp, #28]
 60c:	ldr	r0, [r8]
 610:	bl	0 <strcmp>
 614:	cmp	r0, #0
 618:	bne	58c <generate_list+0x78>
 61c:	ldr	r4, [r8, #28]
 620:	cmp	r4, #0
 624:	movgt	r3, #0
 628:	strgt	r3, [sp, #12]
 62c:	ble	58c <generate_list+0x78>
 630:	ldr	r3, [r8, #32]
 634:	ldr	r2, [sp, #20]
 638:	ldr	r1, [sp, #12]
 63c:	cmp	r2, #0
 640:	ldr	r5, [r3, r1, lsl #2]
 644:	beq	65c <generate_list+0x148>
 648:	mov	r1, r2
 64c:	ldr	r0, [r5]
 650:	bl	0 <strcmp>
 654:	cmp	r0, #0
 658:	bne	578 <generate_list+0x64>
 65c:	ldr	r3, [r5, #8]
 660:	cmp	r3, #0
 664:	ble	578 <generate_list+0x64>
 668:	mov	r4, #0
 66c:	mov	r7, #10
 670:	b	698 <generate_list+0x184>
 674:	ldr	r3, [r9]
 678:	cmp	r3, #0
 67c:	bne	6f8 <generate_list+0x1e4>
 680:	mov	r0, r7
 684:	bl	0 <putchar>
 688:	ldr	r3, [r5, #8]
 68c:	add	r4, r4, #1
 690:	cmp	r4, r3
 694:	bge	574 <generate_list+0x60>
 698:	ldr	r2, [r5, #12]
 69c:	ldr	r3, [r5]
 6a0:	ldr	r1, [r8]
 6a4:	ldr	r6, [r2, r4, lsl #2]
 6a8:	ldr	r2, [sl]
 6ac:	ldr	r0, [r6, #4]
 6b0:	str	r2, [sp]
 6b4:	str	r0, [sp, #4]
 6b8:	ldr	r0, [pc, #260]	; 7c4 <generate_list+0x2b0>
 6bc:	bl	0 <printf>
 6c0:	ldr	r3, [fp]
 6c4:	cmp	r3, #0
 6c8:	beq	674 <generate_list+0x160>
 6cc:	ldr	r1, [sl]
 6d0:	ldr	r0, [r6]
 6d4:	str	r1, [sp, #16]
 6d8:	bl	0 <coda_type_get_format_name>
 6dc:	ldr	r1, [sp, #16]
 6e0:	mov	r2, r0
 6e4:	ldr	r0, [pc, #220]	; 7c8 <generate_list+0x2b4>
 6e8:	bl	0 <printf>
 6ec:	ldr	r3, [r9]
 6f0:	cmp	r3, #0
 6f4:	beq	680 <generate_list+0x16c>
 6f8:	ldr	r1, [sl]
 6fc:	ldr	r0, [pc, #200]	; 7cc <generate_list+0x2b8>
 700:	bl	0 <printf>
 704:	ldr	r1, [r6, #12]
 708:	cmp	r1, #0
 70c:	beq	680 <generate_list+0x16c>
 710:	ldr	r3, [pc, #184]	; 7d0 <generate_list+0x2bc>
 714:	ldr	r3, [r3]
 718:	cmp	r3, #0
 71c:	bne	744 <generate_list+0x230>
 720:	ldr	r0, [pc, #164]	; 7cc <generate_list+0x2b8>
 724:	bl	0 <printf>
 728:	ldr	r3, [pc, #160]	; 7d0 <generate_list+0x2bc>
 72c:	ldr	r3, [r3]
 730:	cmp	r3, #0
 734:	beq	680 <generate_list+0x16c>
 738:	mov	r0, #34	; 0x22
 73c:	bl	0 <putchar>
 740:	b	680 <generate_list+0x16c>
 744:	mov	r0, #34	; 0x22
 748:	bl	0 <putchar>
 74c:	ldr	r1, [r6, #12]
 750:	b	720 <generate_list+0x20c>
 754:	ldr	r3, [pc, #120]	; 7d4 <generate_list+0x2c0>
 758:	ldr	r2, [pc, #120]	; 7d8 <generate_list+0x2c4>
 75c:	bl	0 <__aeabi_read_tp>
 760:	ldr	r3, [pc, r3]
 764:	ldr	r0, [r0, r3]
 768:	ldr	r4, [r2]
 76c:	bl	0 <coda_errno_to_string>
 770:	ldr	r1, [pc, #100]	; 7dc <generate_list+0x2c8>
 774:	mov	r2, r0
 778:	mov	r0, r4
 77c:	bl	0 <fprintf>
 780:	mov	r0, #1
 784:	bl	0 <exit>
 788:	ldr	r3, [pc, #80]	; 7e0 <generate_list+0x2cc>
 78c:	ldr	r2, [pc, #68]	; 7d8 <generate_list+0x2c4>
 790:	bl	0 <__aeabi_read_tp>
 794:	ldr	r3, [pc, r3]
 798:	b	764 <generate_list+0x250>
 79c:	ldr	r3, [pc, #64]	; 7e4 <generate_list+0x2d0>
 7a0:	ldr	r2, [pc, #48]	; 7d8 <generate_list+0x2c4>
 7a4:	bl	0 <__aeabi_read_tp>
 7a8:	ldr	r3, [pc, r3]
 7ac:	b	764 <generate_list+0x250>
 7b0:	.word	0x00000210
 7b4:	.word	0x000001e4
	...
 7c4:	.word	0x000000ac
 7c8:	.word	0x000000a4
 7cc:	.word	0x00000048
 7d0:	.word	0x00000000
 7d4:	.word	0x0000006c
 7d8:	.word	0x00000000
 7dc:	.word	0x000000b8
 7e0:	.word	0x00000044
 7e4:	.word	0x00000034
