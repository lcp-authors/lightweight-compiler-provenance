
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/CMakeFiles/cgen_test.dir/cgen_test.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <main>:
   0:	push	{r4, r5, fp, lr}
   4:	add	fp, sp, #8
   8:	sub	sp, sp, #936	; 0x3a8
   c:	sub	sp, sp, #3072	; 0xc00
  10:	movw	r0, #0
  14:	str	r0, [fp, #-12]
  18:	movw	r1, #0
  1c:	movt	r1, #0
  20:	str	r1, [fp, #-16]
  24:	add	lr, sp, #256	; 0x100
  28:	add	r1, lr, #9
  2c:	str	r0, [sp, #28]
  30:	mov	r0, r1
  34:	movw	r1, #0
  38:	movt	r1, #0
  3c:	movw	r2, #3735	; 0xe97
  40:	bl	0 <memcpy>
  44:	ldr	r0, [sp, #28]
  48:	str	r0, [sp, #36]	; 0x24
  4c:	mvn	r1, #0
  50:	str	r1, [sp, #32]
  54:	add	r0, sp, #40	; 0x28
  58:	bl	0 <flatcc_init_options>
  5c:	movw	r0, #1
  60:	str	r0, [sp, #184]	; 0xb8
  64:	str	r0, [sp, #192]	; 0xc0
  68:	str	r0, [sp, #188]	; 0xbc
  6c:	str	r0, [sp, #196]	; 0xc4
  70:	str	r0, [sp, #148]	; 0x94
  74:	ldr	r1, [fp, #-16]
  78:	add	r0, sp, #40	; 0x28
  7c:	movw	r2, #0
  80:	str	r2, [sp, #24]
  84:	ldr	r3, [sp, #24]
  88:	bl	0 <flatcc_create_context>
  8c:	str	r0, [sp, #36]	; 0x24
  90:	movw	r1, #0
  94:	cmp	r0, r1
  98:	bne	c4 <main+0xc4>
  9c:	movw	r0, #0
  a0:	movt	r0, #0
  a4:	ldr	r0, [r0]
  a8:	movw	r1, #0
  ac:	movt	r1, #0
  b0:	bl	0 <fprintf>
  b4:	mvn	r1, #0
  b8:	str	r1, [fp, #-12]
  bc:	str	r0, [sp, #20]
  c0:	b	1b0 <main+0x1b0>
  c4:	add	lr, sp, #256	; 0x100
  c8:	add	r1, lr, #9
  cc:	ldr	r0, [sp, #36]	; 0x24
  d0:	movw	r2, #3735	; 0xe97
  d4:	bl	0 <flatcc_parse_buffer>
  d8:	str	r0, [sp, #32]
  dc:	cmp	r0, #0
  e0:	beq	104 <main+0x104>
  e4:	movw	r0, #0
  e8:	movt	r0, #0
  ec:	ldr	r0, [r0]
  f0:	movw	r1, #0
  f4:	movt	r1, #0
  f8:	bl	0 <fprintf>
  fc:	str	r0, [sp, #16]
 100:	b	1a0 <main+0x1a0>
 104:	movw	r0, #0
 108:	movt	r0, #0
 10c:	ldr	r0, [r0]
 110:	movw	r1, #0
 114:	movt	r1, #0
 118:	bl	0 <fprintf>
 11c:	movw	r1, #0
 120:	movt	r1, #0
 124:	ldr	r1, [r1]
 128:	str	r0, [sp, #12]
 12c:	mov	r0, r1
 130:	movw	r1, #0
 134:	movt	r1, #0
 138:	bl	0 <fprintf>
 13c:	ldr	r1, [sp, #36]	; 0x24
 140:	str	r0, [sp, #8]
 144:	mov	r0, r1
 148:	bl	0 <flatcc_generate_files>
 14c:	cmp	r0, #0
 150:	beq	174 <main+0x174>
 154:	movw	r0, #0
 158:	movt	r0, #0
 15c:	ldr	r0, [r0]
 160:	movw	r1, #0
 164:	movt	r1, #0
 168:	bl	0 <fprintf>
 16c:	str	r0, [sp, #4]
 170:	b	1a0 <main+0x1a0>
 174:	add	lr, sp, #256	; 0x100
 178:	add	r2, lr, #9
 17c:	movw	r0, #0
 180:	movt	r0, #0
 184:	ldr	r0, [r0]
 188:	movw	r1, #0
 18c:	movt	r1, #0
 190:	bl	0 <fprintf>
 194:	str	r0, [sp]
 198:	movw	r0, #0
 19c:	str	r0, [sp, #32]
 1a0:	ldr	r0, [sp, #36]	; 0x24
 1a4:	bl	0 <flatcc_destroy_context>
 1a8:	ldr	r0, [sp, #32]
 1ac:	str	r0, [fp, #-12]
 1b0:	ldr	r0, [fp, #-12]
 1b4:	sub	sp, fp, #8
 1b8:	pop	{r4, r5, fp, pc}
