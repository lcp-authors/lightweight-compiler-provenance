
../compcert-repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/CMakeFiles/reflection_test.dir/reflection_test.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <reflection_Object_vec_at.part.1>:
   0:	movw	r3, #0
   4:	movt	r3, #0
   8:	str	r4, [sp, #-8]!
   c:	movw	r1, #0
  10:	movt	r1, #0
  14:	str	lr, [sp, #4]
  18:	movw	r0, #0
  1c:	movt	r0, #0
  20:	mov	r2, #215	; 0xd7
  24:	bl	0 <__assert_fail>

00000028 <reflection_Object_name.part.2>:
  28:	movw	r1, #0
  2c:	movt	r1, #0
  30:	ldr	r3, [pc, #20]	; 4c <reflection_Object_name.part.2+0x24>
  34:	movw	r0, #0
  38:	movt	r0, #0
  3c:	str	r4, [sp, #-8]!
  40:	mov	r2, #218	; 0xda
  44:	str	lr, [sp, #4]
  48:	bl	0 <__assert_fail>
  4c:	.word	0x0000001c

00000050 <reflection_Field_name.part.3>:
  50:	movw	r1, #0
  54:	movt	r1, #0
  58:	ldr	r3, [pc, #20]	; 74 <reflection_Field_name.part.3+0x24>
  5c:	movw	r0, #0
  60:	movt	r0, #0
  64:	str	r4, [sp, #-8]!
  68:	mov	r2, #195	; 0xc3
  6c:	str	lr, [sp, #4]
  70:	bl	0 <__assert_fail>
  74:	.word	0x00000034

00000078 <reflection_Field_default_integer.part.4>:
  78:	movw	r1, #0
  7c:	movt	r1, #0
  80:	ldr	r3, [pc, #20]	; 9c <reflection_Field_default_integer.part.4+0x24>
  84:	movw	r0, #0
  88:	movt	r0, #0
  8c:	str	r4, [sp, #-8]!
  90:	mov	r2, #204	; 0xcc
  94:	str	lr, [sp, #4]
  98:	bl	0 <__assert_fail>
  9c:	.word	0x0000004c

000000a0 <reflection_Field_vec_at.part.5>:
  a0:	movw	r1, #0
  a4:	movt	r1, #0
  a8:	ldr	r3, [pc, #20]	; c4 <reflection_Field_vec_at.part.5+0x24>
  ac:	movw	r0, #0
  b0:	movt	r0, #0
  b4:	str	r4, [sp, #-8]!
  b8:	mov	r2, #192	; 0xc0
  bc:	str	lr, [sp, #4]
  c0:	bl	0 <__assert_fail>
  c4:	.word	0x00000070

000000c8 <reflection_Field_type.part.6>:
  c8:	movw	r1, #0
  cc:	movt	r1, #0
  d0:	ldr	r3, [pc, #20]	; ec <reflection_Field_type.part.6+0x24>
  d4:	movw	r0, #0
  d8:	movt	r0, #0
  dc:	str	r4, [sp, #-8]!
  e0:	mov	r2, #201	; 0xc9
  e4:	str	lr, [sp, #4]
  e8:	bl	0 <__assert_fail>
  ec:	.word	0x00000088

000000f0 <reflection_Type_base_type.part.7>:
  f0:	movw	r1, #0
  f4:	movt	r1, #0
  f8:	ldr	r3, [pc, #20]	; 114 <reflection_Type_base_type.part.7+0x24>
  fc:	movw	r0, #0
 100:	movt	r0, #0
 104:	str	r4, [sp, #-8]!
 108:	mov	r2, #147	; 0x93
 10c:	str	lr, [sp, #4]
 110:	bl	0 <__assert_fail>
 114:	.word	0x000000a0

00000118 <reflection_Type_index.part.8>:
 118:	movw	r1, #0
 11c:	movt	r1, #0
 120:	ldr	r3, [pc, #20]	; 13c <reflection_Type_index.part.8+0x24>
 124:	movw	r0, #0
 128:	movt	r0, #0
 12c:	str	r4, [sp, #-8]!
 130:	mov	r2, #149	; 0x95
 134:	str	lr, [sp, #4]
 138:	bl	0 <__assert_fail>
 13c:	.word	0x000000bc

00000140 <test_schema>:
 140:	movw	r1, #0
 144:	movt	r1, #0
 148:	strd	r4, [sp, #-36]!	; 0xffffffdc
 14c:	strd	r6, [sp, #8]
 150:	strd	r8, [sp, #16]
 154:	strd	sl, [sp, #24]
 158:	str	lr, [sp, #32]
 15c:	sub	sp, sp, #20
 160:	bl	0 <fopen>
 164:	subs	r6, r0, #0
 168:	beq	470 <test_schema+0x330>
 16c:	mov	r2, #2
 170:	mov	r1, #0
 174:	bl	0 <fseek>
 178:	mov	r0, r6
 17c:	bl	0 <ftell>
 180:	mov	r7, r0
 184:	movw	r3, #10000	; 0x2710
 188:	cmp	r7, r3
 18c:	mov	r0, r6
 190:	bhi	46c <test_schema+0x32c>
 194:	bl	0 <rewind>
 198:	cmp	r7, #0
 19c:	movne	r0, r7
 1a0:	moveq	r0, #1
 1a4:	bl	0 <malloc>
 1a8:	subs	r5, r0, #0
 1ac:	str	r5, [sp, #4]
 1b0:	beq	468 <test_schema+0x328>
 1b4:	mov	r4, #0
 1b8:	b	1c0 <test_schema+0x80>
 1bc:	add	r4, r4, r0
 1c0:	mov	r3, r6
 1c4:	sub	r2, r7, r4
 1c8:	mov	r1, #1
 1cc:	add	r0, r5, r4
 1d0:	bl	0 <fread>
 1d4:	cmp	r0, #0
 1d8:	bne	1bc <test_schema+0x7c>
 1dc:	cmp	r7, r4
 1e0:	mov	r5, r0
 1e4:	mov	r0, r6
 1e8:	bne	448 <test_schema+0x308>
 1ec:	bl	0 <fclose>
 1f0:	ldr	r3, [sp, #4]
 1f4:	ldr	r2, [r3, #4]
 1f8:	movw	r3, #17986	; 0x4642
 1fc:	movt	r3, #21314	; 0x5342
 200:	cmp	r2, r3
 204:	beq	224 <test_schema+0xe4>
 208:	movw	r1, #0
 20c:	movt	r1, #0
 210:	ldr	r3, [pc, #2704]	; ca8 <test_schema+0xb68>
 214:	movw	r0, #0
 218:	movt	r0, #0
 21c:	mov	r2, #237	; 0xed
 220:	bl	0 <__assert_fail>
 224:	ldr	r3, [sp, #4]
 228:	ldr	r2, [r3]
 22c:	adds	r3, r3, r2
 230:	beq	208 <test_schema+0xc8>
 234:	ldr	r1, [sp, #4]
 238:	ldr	r2, [r1, r2]
 23c:	sub	r2, r3, r2
 240:	ldrh	r1, [r2]
 244:	cmp	r1, #5
 248:	bls	c7c <test_schema+0xb3c>
 24c:	ldrh	r1, [r2, #4]
 250:	cmp	r1, #0
 254:	beq	c7c <test_schema+0xb3c>
 258:	ldr	r2, [r3, r1]
 25c:	add	r3, r3, r1
 260:	add	r2, r2, #4
 264:	adds	r4, r3, r2
 268:	beq	340 <test_schema+0x200>
 26c:	ldr	r1, [r4, #-4]
 270:	cmp	r1, #0
 274:	beq	340 <test_schema+0x200>
 278:	ldr	r3, [r3, r2]
 27c:	adds	r0, r4, r3
 280:	beq	318 <test_schema+0x1d8>
 284:	ldr	r3, [r4, r3]
 288:	sub	r3, r0, r3
 28c:	ldrh	r2, [r3]
 290:	cmp	r2, #5
 294:	bls	bc0 <test_schema+0xa80>
 298:	ldrh	r2, [r3, #4]
 29c:	cmp	r2, #0
 2a0:	beq	bc0 <test_schema+0xa80>
 2a4:	movw	r7, #0
 2a8:	movt	r7, #0
 2ac:	add	r8, r4, #4
 2b0:	mov	r6, #0
 2b4:	b	2d8 <test_schema+0x198>
 2b8:	ldr	r3, [r3, r2]
 2bc:	sub	r3, r0, r3
 2c0:	ldrh	r2, [r3]
 2c4:	cmp	r2, #5
 2c8:	bls	bc0 <test_schema+0xa80>
 2cc:	ldrh	r2, [r3, #4]
 2d0:	cmp	r2, #0
 2d4:	beq	bc0 <test_schema+0xa80>
 2d8:	ldr	r3, [r0, r2]
 2dc:	add	r2, r0, r2
 2e0:	mov	r1, r6
 2e4:	mov	r0, r7
 2e8:	add	r6, r6, #1
 2ec:	add	r3, r3, #4
 2f0:	add	r2, r2, r3
 2f4:	bl	0 <printf>
 2f8:	ldr	fp, [r4, #-4]
 2fc:	cmp	r6, fp
 300:	bcs	378 <test_schema+0x238>
 304:	mov	r3, r8
 308:	add	r8, r8, #4
 30c:	ldr	r2, [r3]
 310:	adds	r0, r3, r2
 314:	bne	2b8 <test_schema+0x178>
 318:	movw	r1, #0
 31c:	movt	r1, #0
 320:	ldr	r3, [pc, #2436]	; cac <test_schema+0xb6c>
 324:	movw	r0, #0
 328:	movt	r0, #0
 32c:	mov	r2, #218	; 0xda
 330:	bl	0 <__assert_fail>
 334:	mov	sl, r7
 338:	cmp	r6, sl
 33c:	beq	484 <test_schema+0x344>
 340:	movw	r0, #0
 344:	movt	r0, #0
 348:	mvn	r5, #0
 34c:	bl	0 <puts>
 350:	ldr	r0, [sp, #4]
 354:	bl	0 <free>
 358:	mov	r0, r5
 35c:	add	sp, sp, #20
 360:	ldrd	r4, [sp]
 364:	ldrd	r6, [sp, #8]
 368:	ldrd	r8, [sp, #16]
 36c:	ldrd	sl, [sp, #24]
 370:	add	sp, sp, #32
 374:	pop	{pc}		; (ldr pc, [sp], #4)
 378:	cmp	fp, #0
 37c:	beq	340 <test_schema+0x200>
 380:	movw	r8, #0
 384:	movt	r8, #0
 388:	sub	r7, fp, #1
 38c:	mov	r6, #0
 390:	cmp	r6, r7
 394:	bcs	334 <test_schema+0x1f4>
 398:	sub	sl, r7, r6
 39c:	add	sl, r6, sl, lsr #1
 3a0:	cmp	fp, sl
 3a4:	add	r2, r4, sl, lsl #2
 3a8:	bls	c20 <test_schema+0xae0>
 3ac:	ldr	r3, [r4, sl, lsl #2]
 3b0:	adds	r1, r2, r3
 3b4:	beq	318 <test_schema+0x1d8>
 3b8:	ldr	r2, [r2, r3]
 3bc:	sub	r2, r1, r2
 3c0:	ldrh	r3, [r2]
 3c4:	cmp	r3, #5
 3c8:	bhi	414 <test_schema+0x2d4>
 3cc:	b	bc0 <test_schema+0xa80>
 3d0:	cmp	r6, sl
 3d4:	bcs	338 <test_schema+0x1f8>
 3d8:	sub	r3, sl, r6
 3dc:	add	r3, r6, r3, lsr #1
 3e0:	cmp	fp, r3
 3e4:	add	r0, r4, r3, lsl #2
 3e8:	bls	c20 <test_schema+0xae0>
 3ec:	ldr	r2, [r4, r3, lsl #2]
 3f0:	adds	r1, r0, r2
 3f4:	beq	318 <test_schema+0x1d8>
 3f8:	ldr	r2, [r0, r2]
 3fc:	mov	r7, sl
 400:	sub	r2, r1, r2
 404:	ldrh	r0, [r2]
 408:	cmp	r0, #5
 40c:	bls	bc0 <test_schema+0xa80>
 410:	mov	sl, r3
 414:	ldrh	r0, [r2, #4]
 418:	cmp	r0, #0
 41c:	beq	bc0 <test_schema+0xa80>
 420:	ldr	r3, [r1, r0]
 424:	add	r0, r1, r0
 428:	mov	r1, r8
 42c:	add	r3, r3, #4
 430:	add	r0, r0, r3
 434:	bl	0 <strcmp>
 438:	cmp	r0, #0
 43c:	bge	3d0 <test_schema+0x290>
 440:	add	r6, sl, #1
 444:	b	390 <test_schema+0x250>
 448:	bl	0 <fclose>
 44c:	ldr	r0, [sp, #4]
 450:	mvn	r5, #0
 454:	bl	0 <free>
 458:	movw	r0, #0
 45c:	movt	r0, #0
 460:	bl	0 <puts>
 464:	b	358 <test_schema+0x218>
 468:	mov	r0, r6
 46c:	bl	0 <fclose>
 470:	movw	r0, #0
 474:	movt	r0, #0
 478:	bl	0 <puts>
 47c:	mvn	r5, #0
 480:	b	358 <test_schema+0x218>
 484:	cmp	fp, r6
 488:	add	r2, r4, r6, lsl #2
 48c:	bls	c9c <test_schema+0xb5c>
 490:	ldr	r3, [r4, r6, lsl #2]
 494:	adds	r4, r2, r3
 498:	beq	c98 <test_schema+0xb58>
 49c:	ldr	r7, [r2, r3]
 4a0:	sub	r7, r4, r7
 4a4:	ldrh	r8, [r7]
 4a8:	cmp	r8, #5
 4ac:	bls	bc0 <test_schema+0xa80>
 4b0:	ldrh	r0, [r7, #4]
 4b4:	cmp	r0, #0
 4b8:	beq	bc0 <test_schema+0xa80>
 4bc:	ldr	r3, [r4, r0]
 4c0:	add	r0, r4, r0
 4c4:	movw	r1, #0
 4c8:	movt	r1, #0
 4cc:	add	r3, r3, #4
 4d0:	add	r0, r0, r3
 4d4:	bl	0 <strcmp>
 4d8:	cmp	r0, #0
 4dc:	bne	340 <test_schema+0x200>
 4e0:	cmp	r8, #7
 4e4:	bls	c60 <test_schema+0xb20>
 4e8:	ldrh	r2, [r7, #6]
 4ec:	cmp	r2, #0
 4f0:	beq	c60 <test_schema+0xb20>
 4f4:	ldr	r3, [r4, r2]
 4f8:	add	r4, r4, r2
 4fc:	add	r3, r3, #4
 500:	adds	r4, r4, r3
 504:	beq	5fc <test_schema+0x4bc>
 508:	ldr	r7, [r4, #-4]
 50c:	cmp	r7, #0
 510:	beq	5fc <test_schema+0x4bc>
 514:	sub	r8, r7, #1
 518:	movw	r3, #0
 51c:	movt	r3, #0
 520:	mov	sl, r8
 524:	str	r5, [sp, #8]
 528:	mov	r9, #0
 52c:	mov	r5, r4
 530:	mov	r4, r3
 534:	cmp	r9, sl
 538:	bcs	b70 <test_schema+0xa30>
 53c:	sub	fp, sl, r9
 540:	add	fp, r9, fp, lsr #1
 544:	cmp	r7, fp
 548:	add	r1, r5, fp, lsl #2
 54c:	bls	c04 <test_schema+0xac4>
 550:	ldr	r3, [r5, fp, lsl #2]
 554:	adds	ip, r1, r3
 558:	beq	be8 <test_schema+0xaa8>
 55c:	ldr	r1, [r1, r3]
 560:	sub	r1, ip, r1
 564:	ldrh	r3, [r1]
 568:	cmp	r3, #5
 56c:	bhi	5b8 <test_schema+0x478>
 570:	b	b90 <test_schema+0xa50>
 574:	cmp	r9, fp
 578:	bcs	5ec <test_schema+0x4ac>
 57c:	sub	r3, fp, r9
 580:	add	r3, r9, r3, lsr #1
 584:	cmp	r7, r3
 588:	add	r0, r5, r3, lsl #2
 58c:	bls	c04 <test_schema+0xac4>
 590:	ldr	r1, [r5, r3, lsl #2]
 594:	adds	ip, r0, r1
 598:	beq	be8 <test_schema+0xaa8>
 59c:	ldr	r1, [r0, r1]
 5a0:	mov	sl, fp
 5a4:	sub	r1, ip, r1
 5a8:	ldrh	r0, [r1]
 5ac:	cmp	r0, #5
 5b0:	bls	b90 <test_schema+0xa50>
 5b4:	mov	fp, r3
 5b8:	ldrh	r0, [r1, #4]
 5bc:	cmp	r0, #0
 5c0:	beq	b90 <test_schema+0xa50>
 5c4:	ldr	r3, [ip, r0]
 5c8:	add	r0, ip, r0
 5cc:	mov	r1, r4
 5d0:	add	r3, r3, #4
 5d4:	add	r0, r0, r3
 5d8:	bl	0 <strcmp>
 5dc:	cmp	r0, #0
 5e0:	bge	574 <test_schema+0x434>
 5e4:	add	r9, fp, #1
 5e8:	b	534 <test_schema+0x3f4>
 5ec:	mov	r4, r5
 5f0:	ldr	r5, [sp, #8]
 5f4:	cmp	r9, fp
 5f8:	beq	610 <test_schema+0x4d0>
 5fc:	movw	r0, #0
 600:	movt	r0, #0
 604:	bl	0 <puts>
 608:	mvn	r5, #0
 60c:	b	350 <test_schema+0x210>
 610:	cmp	r7, r9
 614:	add	r2, r4, r9, lsl #2
 618:	bls	ca4 <test_schema+0xb64>
 61c:	ldr	r9, [r4, r9, lsl #2]
 620:	adds	sl, r2, r9
 624:	beq	ca0 <test_schema+0xb60>
 628:	ldr	fp, [r2, r9]
 62c:	str	r2, [sp, #12]
 630:	sub	fp, sl, fp
 634:	ldrh	r3, [fp]
 638:	cmp	r3, #5
 63c:	str	r3, [sp, #8]
 640:	bls	b90 <test_schema+0xa50>
 644:	ldrh	r1, [fp, #4]
 648:	cmp	r1, #0
 64c:	beq	b90 <test_schema+0xa50>
 650:	ldr	ip, [sl, r1]
 654:	add	r0, sl, r1
 658:	movw	r1, #0
 65c:	movt	r1, #0
 660:	add	ip, ip, #4
 664:	add	r0, r0, ip
 668:	bl	0 <strcmp>
 66c:	cmp	r0, #0
 670:	ldr	r3, [sp, #8]
 674:	ldr	r2, [sp, #12]
 678:	bne	5fc <test_schema+0x4bc>
 67c:	cmp	r3, #13
 680:	bhi	710 <test_schema+0x5d0>
 684:	movw	r0, #0
 688:	movt	r0, #0
 68c:	str	r2, [sp, #8]
 690:	bl	0 <puts>
 694:	ldr	r2, [sp, #8]
 698:	ldr	r3, [r2, r9]
 69c:	sub	r3, sl, r3
 6a0:	ldrh	r1, [r3]
 6a4:	cmp	r1, #5
 6a8:	bls	b90 <test_schema+0xa50>
 6ac:	ldrh	r3, [r3, #4]
 6b0:	cmp	r3, #0
 6b4:	beq	b90 <test_schema+0xa50>
 6b8:	ldr	r1, [sl, r3]
 6bc:	add	r3, sl, r3
 6c0:	movw	r0, #0
 6c4:	movt	r0, #0
 6c8:	add	r1, r1, #4
 6cc:	add	r1, r3, r1
 6d0:	bl	0 <printf>
 6d4:	ldr	r2, [sp, #8]
 6d8:	ldr	r3, [r2, r9]
 6dc:	sub	r3, sl, r3
 6e0:	ldrh	r2, [r3]
 6e4:	cmp	r2, #13
 6e8:	bls	bdc <test_schema+0xa9c>
 6ec:	ldrh	r3, [r3, #12]
 6f0:	cmp	r3, #0
 6f4:	beq	bdc <test_schema+0xa9c>
 6f8:	ldrd	r2, [r3, sl]
 6fc:	movw	r0, #0
 700:	movt	r0, #0
 704:	mvn	r5, #0
 708:	bl	0 <printf>
 70c:	b	350 <test_schema+0x210>
 710:	ldrh	r3, [fp, #12]
 714:	cmp	r3, #0
 718:	beq	684 <test_schema+0x544>
 71c:	ldrd	r0, [sl, r3]
 720:	cmp	r1, #0
 724:	cmpeq	r0, #150	; 0x96
 728:	bne	684 <test_schema+0x544>
 72c:	ldrh	r2, [fp, #6]
 730:	cmp	r2, #0
 734:	beq	c40 <test_schema+0xb00>
 738:	ldr	r3, [sl, r2]
 73c:	add	sl, sl, r2
 740:	adds	r2, sl, r3
 744:	beq	c5c <test_schema+0xb1c>
 748:	ldr	r3, [sl, r3]
 74c:	sub	r3, r2, r3
 750:	ldrh	r1, [r3]
 754:	cmp	r1, #5
 758:	bhi	770 <test_schema+0x630>
 75c:	movw	r0, #0
 760:	movt	r0, #0
 764:	bl	0 <puts>
 768:	mvn	r5, #0
 76c:	b	350 <test_schema+0x210>
 770:	ldrh	r3, [r3, #4]
 774:	cmp	r3, #0
 778:	beq	75c <test_schema+0x61c>
 77c:	ldrsb	r3, [r2, r3]
 780:	cmp	r3, #5
 784:	bne	75c <test_schema+0x61c>
 788:	movw	r3, #0
 78c:	movt	r3, #0
 790:	str	r5, [sp, #8]
 794:	mov	sl, r8
 798:	mov	r5, r4
 79c:	mov	r9, #0
 7a0:	mov	r4, r3
 7a4:	cmp	r9, sl
 7a8:	bcs	b80 <test_schema+0xa40>
 7ac:	sub	fp, sl, r9
 7b0:	add	fp, r9, fp, lsr #1
 7b4:	cmp	r7, fp
 7b8:	add	r1, r5, fp, lsl #2
 7bc:	bls	c04 <test_schema+0xac4>
 7c0:	ldr	r3, [r5, fp, lsl #2]
 7c4:	adds	ip, r1, r3
 7c8:	beq	be8 <test_schema+0xaa8>
 7cc:	ldr	r1, [r1, r3]
 7d0:	sub	r1, ip, r1
 7d4:	ldrh	r3, [r1]
 7d8:	cmp	r3, #5
 7dc:	bhi	828 <test_schema+0x6e8>
 7e0:	b	b90 <test_schema+0xa50>
 7e4:	cmp	r9, fp
 7e8:	bcs	85c <test_schema+0x71c>
 7ec:	sub	r3, fp, r9
 7f0:	add	r3, r9, r3, lsr #1
 7f4:	cmp	r7, r3
 7f8:	add	r0, r5, r3, lsl #2
 7fc:	bls	c04 <test_schema+0xac4>
 800:	ldr	r1, [r5, r3, lsl #2]
 804:	adds	ip, r0, r1
 808:	beq	be8 <test_schema+0xaa8>
 80c:	ldr	r1, [r0, r1]
 810:	mov	sl, fp
 814:	sub	r1, ip, r1
 818:	ldrh	r0, [r1]
 81c:	cmp	r0, #5
 820:	bls	b90 <test_schema+0xa50>
 824:	mov	fp, r3
 828:	ldrh	r0, [r1, #4]
 82c:	cmp	r0, #0
 830:	beq	b90 <test_schema+0xa50>
 834:	ldr	r3, [ip, r0]
 838:	add	r0, ip, r0
 83c:	mov	r1, r4
 840:	add	r3, r3, #4
 844:	add	r0, r0, r3
 848:	bl	0 <strcmp>
 84c:	cmp	r0, #0
 850:	bge	7e4 <test_schema+0x6a4>
 854:	add	r9, fp, #1
 858:	b	7a4 <test_schema+0x664>
 85c:	mov	r4, r5
 860:	ldr	r5, [sp, #8]
 864:	cmp	fp, r9
 868:	beq	880 <test_schema+0x740>
 86c:	movw	r0, #0
 870:	movt	r0, #0
 874:	bl	0 <puts>
 878:	mvn	r5, #0
 87c:	b	350 <test_schema+0x210>
 880:	cmp	r7, fp
 884:	add	r2, r4, fp, lsl #2
 888:	bls	ca4 <test_schema+0xb64>
 88c:	ldr	r3, [r4, fp, lsl #2]
 890:	adds	sl, r2, r3
 894:	beq	ca0 <test_schema+0xb60>
 898:	ldr	fp, [r2, r3]
 89c:	sub	fp, sl, fp
 8a0:	ldrh	r3, [fp]
 8a4:	cmp	r3, #5
 8a8:	str	r3, [sp, #8]
 8ac:	bls	b90 <test_schema+0xa50>
 8b0:	ldrh	r2, [fp, #4]
 8b4:	cmp	r2, #0
 8b8:	beq	b90 <test_schema+0xa50>
 8bc:	ldr	r0, [sl, r2]
 8c0:	add	r2, sl, r2
 8c4:	movw	r1, #0
 8c8:	movt	r1, #0
 8cc:	add	r0, r0, #4
 8d0:	add	r0, r2, r0
 8d4:	bl	0 <strcmp>
 8d8:	cmp	r0, #0
 8dc:	ldr	r3, [sp, #8]
 8e0:	bne	86c <test_schema+0x72c>
 8e4:	cmp	r3, #7
 8e8:	bls	c40 <test_schema+0xb00>
 8ec:	ldrh	r3, [fp, #6]
 8f0:	cmp	r3, #0
 8f4:	beq	c40 <test_schema+0xb00>
 8f8:	ldr	r2, [sl, r3]
 8fc:	add	r3, sl, r3
 900:	adds	r1, r3, r2
 904:	beq	c5c <test_schema+0xb1c>
 908:	ldr	r3, [r3, r2]
 90c:	sub	r3, r1, r3
 910:	ldrh	r2, [r3]
 914:	cmp	r2, #5
 918:	bhi	930 <test_schema+0x7f0>
 91c:	movw	r0, #0
 920:	movt	r0, #0
 924:	bl	0 <puts>
 928:	mvn	r5, #0
 92c:	b	350 <test_schema+0x210>
 930:	ldrh	r0, [r3, #4]
 934:	cmp	r0, #0
 938:	beq	91c <test_schema+0x7dc>
 93c:	ldrsb	r0, [r1, r0]
 940:	cmp	r0, #15
 944:	bne	91c <test_schema+0x7dc>
 948:	cmp	r2, #9
 94c:	bls	bac <test_schema+0xa6c>
 950:	ldrh	r3, [r3, #8]
 954:	cmp	r3, #0
 958:	beq	bac <test_schema+0xa6c>
 95c:	ldr	r3, [r1, r3]
 960:	cmp	r3, r6
 964:	bne	bac <test_schema+0xa6c>
 968:	movw	sl, #0
 96c:	movt	sl, #0
 970:	cmp	r5, r8
 974:	bcs	a28 <test_schema+0x8e8>
 978:	sub	fp, r8, r5
 97c:	add	fp, r5, fp, lsr #1
 980:	cmp	r7, fp
 984:	add	r2, r4, fp, lsl #2
 988:	bls	c04 <test_schema+0xac4>
 98c:	ldr	r3, [r4, fp, lsl #2]
 990:	adds	r1, r2, r3
 994:	beq	be8 <test_schema+0xaa8>
 998:	ldr	r2, [r2, r3]
 99c:	sub	r2, r1, r2
 9a0:	ldrh	r3, [r2]
 9a4:	cmp	r3, #5
 9a8:	bhi	9f4 <test_schema+0x8b4>
 9ac:	b	b90 <test_schema+0xa50>
 9b0:	cmp	r5, fp
 9b4:	bcs	a2c <test_schema+0x8ec>
 9b8:	sub	r3, fp, r5
 9bc:	add	r3, r5, r3, lsr #1
 9c0:	cmp	r7, r3
 9c4:	add	r0, r4, r3, lsl #2
 9c8:	bls	c04 <test_schema+0xac4>
 9cc:	ldr	r2, [r4, r3, lsl #2]
 9d0:	adds	r1, r0, r2
 9d4:	beq	be8 <test_schema+0xaa8>
 9d8:	ldr	r2, [r0, r2]
 9dc:	mov	r8, fp
 9e0:	sub	r2, r1, r2
 9e4:	ldrh	r0, [r2]
 9e8:	cmp	r0, #5
 9ec:	bls	b90 <test_schema+0xa50>
 9f0:	mov	fp, r3
 9f4:	ldrh	r0, [r2, #4]
 9f8:	cmp	r0, #0
 9fc:	beq	b90 <test_schema+0xa50>
 a00:	ldr	r3, [r1, r0]
 a04:	add	r0, r1, r0
 a08:	mov	r1, sl
 a0c:	add	r3, r3, #4
 a10:	add	r0, r0, r3
 a14:	bl	0 <strcmp>
 a18:	cmp	r0, #0
 a1c:	bge	9b0 <test_schema+0x870>
 a20:	add	r5, fp, #1
 a24:	b	970 <test_schema+0x830>
 a28:	mov	fp, r8
 a2c:	cmp	r5, fp
 a30:	beq	a48 <test_schema+0x908>
 a34:	movw	r0, #0
 a38:	movt	r0, #0
 a3c:	bl	0 <puts>
 a40:	mvn	r5, #0
 a44:	b	350 <test_schema+0x210>
 a48:	cmp	r7, r5
 a4c:	add	r2, r4, r5, lsl #2
 a50:	bls	ca4 <test_schema+0xb64>
 a54:	ldr	r3, [r4, r5, lsl #2]
 a58:	adds	r4, r2, r3
 a5c:	beq	ca0 <test_schema+0xb60>
 a60:	ldr	r7, [r2, r3]
 a64:	sub	r7, r4, r7
 a68:	ldrh	r8, [r7]
 a6c:	cmp	r8, #5
 a70:	bls	b90 <test_schema+0xa50>
 a74:	ldrh	r3, [r7, #4]
 a78:	cmp	r3, #0
 a7c:	beq	b90 <test_schema+0xa50>
 a80:	ldr	r0, [r4, r3]
 a84:	add	r3, r4, r3
 a88:	movw	r1, #0
 a8c:	movt	r1, #0
 a90:	add	r0, r0, #4
 a94:	add	r0, r3, r0
 a98:	bl	0 <strcmp>
 a9c:	subs	r5, r0, #0
 aa0:	bne	a34 <test_schema+0x8f4>
 aa4:	cmp	r8, #7
 aa8:	bls	c40 <test_schema+0xb00>
 aac:	ldrh	r3, [r7, #6]
 ab0:	cmp	r3, #0
 ab4:	beq	c40 <test_schema+0xb00>
 ab8:	ldr	r2, [r4, r3]
 abc:	add	r3, r4, r3
 ac0:	adds	r1, r3, r2
 ac4:	beq	c5c <test_schema+0xb1c>
 ac8:	ldr	r3, [r3, r2]
 acc:	sub	r3, r1, r3
 ad0:	ldrh	r2, [r3]
 ad4:	cmp	r2, #5
 ad8:	bhi	af0 <test_schema+0x9b0>
 adc:	movw	r0, #0
 ae0:	movt	r0, #0
 ae4:	bl	0 <puts>
 ae8:	mvn	r5, #0
 aec:	b	350 <test_schema+0x210>
 af0:	ldrh	r0, [r3, #4]
 af4:	cmp	r0, #0
 af8:	beq	adc <test_schema+0x99c>
 afc:	ldrsb	r0, [r1, r0]
 b00:	cmp	r0, #14
 b04:	bne	adc <test_schema+0x99c>
 b08:	cmp	r2, #7
 b0c:	bhi	b24 <test_schema+0x9e4>
 b10:	movw	r0, #0
 b14:	movt	r0, #0
 b18:	bl	0 <puts>
 b1c:	mvn	r5, #0
 b20:	b	350 <test_schema+0x210>
 b24:	ldrh	r0, [r3, #6]
 b28:	cmp	r0, #0
 b2c:	beq	b10 <test_schema+0x9d0>
 b30:	ldrsb	r0, [r1, r0]
 b34:	cmp	r0, #15
 b38:	bne	b10 <test_schema+0x9d0>
 b3c:	cmp	r2, #9
 b40:	bls	b5c <test_schema+0xa1c>
 b44:	ldrh	r3, [r3, #8]
 b48:	cmp	r3, #0
 b4c:	beq	b5c <test_schema+0xa1c>
 b50:	ldr	r3, [r1, r3]
 b54:	cmp	r3, r6
 b58:	beq	350 <test_schema+0x210>
 b5c:	movw	r0, #0
 b60:	movt	r0, #0
 b64:	mvn	r5, #0
 b68:	bl	0 <puts>
 b6c:	b	350 <test_schema+0x210>
 b70:	mov	r4, r5
 b74:	mov	fp, sl
 b78:	ldr	r5, [sp, #8]
 b7c:	b	5f4 <test_schema+0x4b4>
 b80:	mov	r4, r5
 b84:	mov	fp, sl
 b88:	ldr	r5, [sp, #8]
 b8c:	b	864 <test_schema+0x724>
 b90:	movw	r1, #0
 b94:	movt	r1, #0
 b98:	ldr	r3, [pc, #272]	; cb0 <test_schema+0xb70>
 b9c:	movw	r0, #0
 ba0:	movt	r0, #0
 ba4:	mov	r2, #195	; 0xc3
 ba8:	bl	0 <__assert_fail>
 bac:	movw	r0, #0
 bb0:	movt	r0, #0
 bb4:	bl	0 <puts>
 bb8:	mvn	r5, #0
 bbc:	b	350 <test_schema+0x210>
 bc0:	movw	r1, #0
 bc4:	movt	r1, #0
 bc8:	ldr	r3, [pc, #220]	; cac <test_schema+0xb6c>
 bcc:	movw	r0, #0
 bd0:	movt	r0, #0
 bd4:	mov	r2, #218	; 0xda
 bd8:	bl	0 <__assert_fail>
 bdc:	mov	r2, #0
 be0:	mov	r3, #0
 be4:	b	6fc <test_schema+0x5bc>
 be8:	movw	r1, #0
 bec:	movt	r1, #0
 bf0:	ldr	r3, [pc, #184]	; cb0 <test_schema+0xb70>
 bf4:	movw	r0, #0
 bf8:	movt	r0, #0
 bfc:	mov	r2, #195	; 0xc3
 c00:	bl	0 <__assert_fail>
 c04:	movw	r1, #0
 c08:	movt	r1, #0
 c0c:	ldr	r3, [pc, #160]	; cb4 <test_schema+0xb74>
 c10:	movw	r0, #0
 c14:	movt	r0, #0
 c18:	mov	r2, #192	; 0xc0
 c1c:	bl	0 <__assert_fail>
 c20:	movw	r3, #0
 c24:	movt	r3, #0
 c28:	movw	r1, #0
 c2c:	movt	r1, #0
 c30:	movw	r0, #0
 c34:	movt	r0, #0
 c38:	mov	r2, #215	; 0xd7
 c3c:	bl	0 <__assert_fail>
 c40:	movw	r1, #0
 c44:	movt	r1, #0
 c48:	ldr	r3, [pc, #104]	; cb8 <test_schema+0xb78>
 c4c:	movw	r0, #0
 c50:	movt	r0, #0
 c54:	mov	r2, #201	; 0xc9
 c58:	bl	0 <__assert_fail>
 c5c:	bl	f0 <reflection_Type_base_type.part.7>
 c60:	movw	r1, #0
 c64:	movt	r1, #0
 c68:	ldr	r3, [pc, #76]	; cbc <test_schema+0xb7c>
 c6c:	movw	r0, #0
 c70:	movt	r0, #0
 c74:	mov	r2, #224	; 0xe0
 c78:	bl	0 <__assert_fail>
 c7c:	movw	r1, #0
 c80:	movt	r1, #0
 c84:	ldr	r3, [pc, #28]	; ca8 <test_schema+0xb68>
 c88:	movw	r0, #0
 c8c:	movt	r0, #0
 c90:	mov	r2, #237	; 0xed
 c94:	bl	0 <__assert_fail>
 c98:	bl	28 <reflection_Object_name.part.2>
 c9c:	bl	0 <reflection_Object_vec_at.part.1>
 ca0:	bl	50 <reflection_Field_name.part.3>
 ca4:	bl	a0 <reflection_Field_vec_at.part.5>
 ca8:	.word	0x000000d4
 cac:	.word	0x0000001c
 cb0:	.word	0x00000034
 cb4:	.word	0x00000070
 cb8:	.word	0x00000088
 cbc:	.word	0x000000f0

Disassembly of section .text.startup:

00000000 <main>:
   0:	sub	r3, r0, #1
   4:	cmp	r3, #1
   8:	bhi	28 <main+0x28>
   c:	cmp	r0, #2
  10:	movw	r3, #0
  14:	movt	r3, #0
  18:	ldreq	r2, [r1, #4]
  1c:	streq	r2, [r3]
  20:	ldr	r0, [r3]
  24:	b	140 <test_schema>
  28:	movw	r3, #0
  2c:	movt	r3, #0
  30:	str	r4, [sp, #-8]!
  34:	movw	r0, #0
  38:	movt	r0, #0
  3c:	ldr	r3, [r3]
  40:	mov	r2, #64	; 0x40
  44:	mov	r1, #1
  48:	str	lr, [sp, #4]
  4c:	bl	0 <fwrite>
  50:	mov	r0, #1
  54:	bl	0 <exit>
