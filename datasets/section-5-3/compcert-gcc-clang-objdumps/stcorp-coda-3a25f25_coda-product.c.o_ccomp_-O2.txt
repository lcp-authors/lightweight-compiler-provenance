
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/coda-product.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <set_definition>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #24
       8:	str	ip, [sp, #4]
       c:	str	lr, [sp, #8]
      10:	str	r4, [sp, #16]
      14:	str	r5, [sp, #20]
      18:	mov	r4, r1
      1c:	mov	r5, r0
      20:	cmp	r4, #0
      24:	bne	5c <set_definition+0x5c>
      28:	ldr	r0, [r5]
      2c:	ldr	r2, [r0, #16]
      30:	cmp	r2, #1
      34:	beq	48 <set_definition+0x48>
      38:	cmp	r2, #0
      3c:	beq	48 <set_definition+0x48>
      40:	mov	r0, #0
      44:	b	230 <set_definition+0x230>
      48:	mvn	r0, #199	; 0xc7
      4c:	mov	r1, #0
      50:	bl	0 <coda_set_error>
      54:	mvn	r0, #0
      58:	b	230 <set_definition+0x230>
      5c:	ldr	r3, [r5]
      60:	ldr	r0, [r3, #16]
      64:	ldr	r1, [r4]
      68:	cmp	r0, r1
      6c:	beq	cc <set_definition+0xcc>
      70:	cmp	r0, #1
      74:	bne	88 <set_definition+0x88>
      78:	cmp	r1, #0
      7c:	moveq	r2, #1
      80:	movne	r2, #0
      84:	b	8c <set_definition+0x8c>
      88:	mov	r2, #0
      8c:	eor	r0, r2, #1
      90:	cmp	r0, #0
      94:	beq	cc <set_definition+0xcc>
      98:	ldr	r0, [r4]
      9c:	bl	0 <coda_type_get_format_name>
      a0:	mov	r4, r0
      a4:	ldr	r1, [r5]
      a8:	ldr	r0, [r1, #16]
      ac:	bl	0 <coda_type_get_format_name>
      b0:	mov	r3, r0
      b4:	mvn	r0, #199	; 0xc7
      b8:	ldr	r1, [pc, #392]	; 248 <set_definition+0x248>
      bc:	mov	r2, r4
      c0:	bl	0 <coda_set_error>
      c4:	mvn	r0, #0
      c8:	b	230 <set_definition+0x230>
      cc:	ldr	r0, [r4, #24]
      d0:	cmp	r0, #0
      d4:	bne	f0 <set_definition+0xf0>
      d8:	mov	r0, r4
      dc:	bl	0 <coda_read_product_definition>
      e0:	cmp	r0, #0
      e4:	beq	f0 <set_definition+0xf0>
      e8:	mvn	r0, #0
      ec:	b	230 <set_definition+0x230>
      f0:	ldr	r3, [r4]
      f4:	cmp	r3, #0
      f8:	beq	150 <set_definition+0x150>
      fc:	cmp	r3, #1
     100:	beq	134 <set_definition+0x134>
     104:	cmp	r3, #2
     108:	bne	128 <set_definition+0x128>
     10c:	mov	r1, r4
     110:	mov	r0, r5
     114:	bl	0 <coda_xml_reopen_with_definition>
     118:	cmp	r0, #0
     11c:	beq	16c <set_definition+0x16c>
     120:	mvn	r0, #0
     124:	b	230 <set_definition+0x230>
     128:	ldr	r3, [r5]
     12c:	str	r4, [r3, #24]
     130:	b	16c <set_definition+0x16c>
     134:	mov	r1, r4
     138:	mov	r0, r5
     13c:	bl	0 <coda_bin_reopen_with_definition>
     140:	cmp	r0, #0
     144:	beq	16c <set_definition+0x16c>
     148:	mvn	r0, #0
     14c:	b	230 <set_definition+0x230>
     150:	mov	r1, r4
     154:	mov	r0, r5
     158:	bl	0 <coda_ascii_reopen_with_definition>
     15c:	cmp	r0, #0
     160:	beq	16c <set_definition+0x16c>
     164:	mvn	r0, #0
     168:	b	230 <set_definition+0x230>
     16c:	ldr	ip, [r5]
     170:	ldr	r0, [ip, #24]
     174:	ldr	r4, [r0, #32]
     178:	cmp	r4, #0
     17c:	ble	22c <set_definition+0x22c>
     180:	lsl	r0, r4, #2
     184:	bl	0 <malloc>
     188:	ldr	r2, [r5]
     18c:	str	r0, [r2, #28]
     190:	ldr	r2, [r5]
     194:	ldr	ip, [r2, #28]
     198:	cmp	ip, #0
     19c:	bne	1c4 <set_definition+0x1c4>
     1a0:	mvn	r0, #0
     1a4:	ldr	r1, [pc, #152]	; 244 <set_definition+0x244>
     1a8:	lsl	r2, r4, #2
     1ac:	ldr	r3, [pc, #152]	; 24c <set_definition+0x24c>
     1b0:	mov	r4, #500	; 0x1f4
     1b4:	str	r4, [sp]
     1b8:	bl	0 <coda_set_error>
     1bc:	mvn	r0, #0
     1c0:	b	230 <set_definition+0x230>
     1c4:	lsl	r0, r4, #2
     1c8:	bl	0 <malloc>
     1cc:	ldr	ip, [r5]
     1d0:	str	r0, [ip, #32]
     1d4:	ldr	ip, [r5]
     1d8:	ldr	r3, [ip, #32]
     1dc:	cmp	r3, #0
     1e0:	bne	208 <set_definition+0x208>
     1e4:	mvn	r0, #0
     1e8:	ldr	r1, [pc, #84]	; 244 <set_definition+0x244>
     1ec:	lsl	r2, r4, #2
     1f0:	ldr	r3, [pc, #84]	; 24c <set_definition+0x24c>
     1f4:	movw	r4, #507	; 0x1fb
     1f8:	str	r4, [sp]
     1fc:	bl	0 <coda_set_error>
     200:	mvn	r0, #0
     204:	b	230 <set_definition+0x230>
     208:	mov	r1, #0
     20c:	cmp	r1, r4
     210:	bge	22c <set_definition+0x22c>
     214:	ldr	r0, [r5]
     218:	ldr	r3, [r0, #32]
     21c:	mov	r2, #0
     220:	str	r2, [r3, r1, lsl #2]
     224:	add	r1, r1, #1
     228:	b	20c <set_definition+0x20c>
     22c:	mov	r0, #0
     230:	ldr	r4, [sp, #16]
     234:	ldr	r5, [sp, #20]
     238:	ldr	lr, [sp, #8]
     23c:	add	sp, sp, #24
     240:	bx	lr
     244:	.word	0x0000031e
     248:	.word	0x00000093
     24c:	.word	0x000002b5

00000250 <open_file>:
     250:	mov	ip, sp
     254:	sub	sp, sp, #656	; 0x290
     258:	str	ip, [sp, #8]
     25c:	str	lr, [sp, #12]
     260:	str	r4, [sp, #16]
     264:	str	r5, [sp, #20]
     268:	str	r6, [sp, #24]
     26c:	str	r7, [sp, #28]
     270:	str	r8, [sp, #32]
     274:	mov	r4, r2
     278:	mov	r5, r1
     27c:	mov	r6, r0
     280:	add	r0, sp, #48	; 0x30
     284:	cmp	r0, #0
     288:	movne	r2, #1
     28c:	moveq	r2, #0
     290:	mov	r1, #0
     294:	cmp	r6, #0
     298:	movne	r2, r2
     29c:	moveq	r2, r1
     2a0:	cmp	r2, #0
     2a4:	bne	2bc <open_file+0x6c>
     2a8:	ldr	r0, [pc, #1952]	; a50 <open_file+0x800>
     2ac:	ldr	r1, [pc, #1964]	; a60 <open_file+0x810>
     2b0:	mov	r2, #162	; 0xa2
     2b4:	ldr	r3, [pc, #1936]	; a4c <open_file+0x7fc>
     2b8:	bl	0 <__assert_fail>
     2bc:	add	r1, sp, #56	; 0x38
     2c0:	mov	r0, r6
     2c4:	bl	0 <stat>
     2c8:	cmp	r0, #0
     2cc:	beq	324 <open_file+0xd4>
     2d0:	bl	0 <__errno_location>
     2d4:	ldr	r1, [r0]
     2d8:	cmp	r1, #2
     2dc:	beq	30c <open_file+0xbc>
     2e0:	bl	0 <__errno_location>
     2e4:	ldr	r0, [r0]
     2e8:	bl	0 <strerror>
     2ec:	mvn	r3, #20
     2f0:	ldr	r1, [pc, #1920]	; a78 <open_file+0x828>
     2f4:	mov	ip, r0
     2f8:	mov	r0, r3
     2fc:	mov	r3, ip
     300:	mov	r2, r6
     304:	bl	0 <coda_set_error>
     308:	b	31c <open_file+0xcc>
     30c:	mvn	r0, #19
     310:	ldr	r1, [pc, #1824]	; a38 <open_file+0x7e8>
     314:	mov	r2, r6
     318:	bl	0 <coda_set_error>
     31c:	mvn	r3, #0
     320:	b	360 <open_file+0x110>
     324:	ldr	r3, [sp, #72]	; 0x48
     328:	and	r2, r3, #32768	; 0x8000
     32c:	cmp	r2, #0
     330:	bne	34c <open_file+0xfc>
     334:	mvn	r0, #20
     338:	ldr	r1, [pc, #1828]	; a64 <open_file+0x814>
     33c:	mov	r2, r6
     340:	bl	0 <coda_set_error>
     344:	mvn	r3, #0
     348:	b	360 <open_file+0x110>
     34c:	ldr	r1, [sp, #100]	; 0x64
     350:	asr	r2, r1, #31
     354:	str	r1, [sp, #48]	; 0x30
     358:	str	r2, [sp, #52]	; 0x34
     35c:	mov	r3, #0
     360:	cmp	r3, #0
     364:	beq	370 <open_file+0x120>
     368:	mvn	r0, #0
     36c:	b	a0c <open_file+0x7bc>
     370:	ldr	r2, [sp, #48]	; 0x30
     374:	ldr	r3, [sp, #52]	; 0x34
     378:	add	ip, sp, #44	; 0x2c
     37c:	str	ip, [sp]
     380:	mov	r0, r6
     384:	bl	0 <coda_bin_open>
     388:	cmp	r0, #0
     38c:	beq	398 <open_file+0x148>
     390:	mvn	r0, #0
     394:	b	a0c <open_file+0x7bc>
     398:	cmp	r4, #0
     39c:	bne	8e4 <open_file+0x694>
     3a0:	ldr	r1, [sp, #44]	; 0x2c
     3a4:	ldr	r6, [r1, #8]
     3a8:	ldr	r4, [r1, #12]
     3ac:	add	r0, sp, #136	; 0x88
     3b0:	bl	0 <coda_cursor_set_product>
     3b4:	cmp	r0, #0
     3b8:	beq	3c4 <open_file+0x174>
     3bc:	mvn	r1, #0
     3c0:	b	8cc <open_file+0x67c>
     3c4:	mov	r0, #1
     3c8:	str	r0, [sp, #40]	; 0x28
     3cc:	mov	r2, r6
     3d0:	mov	r1, r4
     3d4:	cmp	r1, #0
     3d8:	bne	3e8 <open_file+0x198>
     3dc:	cmp	r2, #4
     3e0:	bcc	3f0 <open_file+0x1a0>
     3e4:	b	3f8 <open_file+0x1a8>
     3e8:	cmp	r1, #0
     3ec:	bge	3f8 <open_file+0x1a8>
     3f0:	mov	r1, #0
     3f4:	b	8cc <open_file+0x67c>
     3f8:	add	r0, sp, #136	; 0x88
     3fc:	add	r1, sp, #56	; 0x38
     400:	mov	r3, #0
     404:	mov	r2, #0
     408:	mov	r8, #0
     40c:	mov	ip, #4
     410:	str	r8, [sp, #4]
     414:	str	ip, [sp]
     418:	bl	0 <coda_cursor_read_bytes>
     41c:	cmp	r0, #0
     420:	beq	42c <open_file+0x1dc>
     424:	mvn	r1, #0
     428:	b	8cc <open_file+0x67c>
     42c:	add	r0, sp, #56	; 0x38
     430:	ldr	r1, [pc, #1588]	; a6c <open_file+0x81c>
     434:	mov	r2, #3
     438:	bl	0 <memcmp>
     43c:	cmp	r0, #0
     440:	bne	470 <open_file+0x220>
     444:	ldrb	r2, [sp, #59]	; 0x3b
     448:	cmp	r2, #1
     44c:	beq	460 <open_file+0x210>
     450:	cmp	r2, #2
     454:	beq	460 <open_file+0x210>
     458:	cmp	r2, #5
     45c:	bne	470 <open_file+0x220>
     460:	mov	r3, #6
     464:	str	r3, [sp, #40]	; 0x28
     468:	mov	r1, #0
     46c:	b	8cc <open_file+0x67c>
     470:	add	r0, sp, #56	; 0x38
     474:	ldr	r1, [pc, #1504]	; a5c <open_file+0x80c>
     478:	mov	r2, #4
     47c:	bl	0 <memcmp>
     480:	cmp	r0, #0
     484:	bne	498 <open_file+0x248>
     488:	mov	ip, #3
     48c:	str	ip, [sp, #40]	; 0x28
     490:	mov	r1, #0
     494:	b	8cc <open_file+0x67c>
     498:	mov	ip, r4
     49c:	cmp	ip, #0
     4a0:	bne	4b4 <open_file+0x264>
     4a4:	mov	r2, r6
     4a8:	cmp	r2, #8
     4ac:	bcc	4bc <open_file+0x26c>
     4b0:	b	4cc <open_file+0x27c>
     4b4:	cmp	ip, #0
     4b8:	bge	4cc <open_file+0x27c>
     4bc:	mov	r0, #1
     4c0:	str	r0, [sp, #40]	; 0x28
     4c4:	mov	r1, #0
     4c8:	b	8cc <open_file+0x67c>
     4cc:	add	r0, sp, #136	; 0x88
     4d0:	add	r1, sp, #60	; 0x3c
     4d4:	mov	r3, #0
     4d8:	mov	r2, #4
     4dc:	str	r3, [sp, #4]
     4e0:	str	r2, [sp]
     4e4:	bl	0 <coda_cursor_read_bytes>
     4e8:	cmp	r0, #0
     4ec:	beq	4f8 <open_file+0x2a8>
     4f0:	mvn	r1, #0
     4f4:	b	8cc <open_file+0x67c>
     4f8:	add	r0, sp, #56	; 0x38
     4fc:	ldr	r1, [pc, #1348]	; a48 <open_file+0x7f8>
     500:	mov	r2, #8
     504:	bl	0 <memcmp>
     508:	cmp	r0, #0
     50c:	bne	520 <open_file+0x2d0>
     510:	mov	ip, #4
     514:	str	ip, [sp, #40]	; 0x28
     518:	mov	r1, #0
     51c:	b	8cc <open_file+0x67c>
     520:	add	r0, sp, #56	; 0x38
     524:	ldr	r1, [pc, #1304]	; a44 <open_file+0x7f4>
     528:	mov	r2, #8
     52c:	bl	0 <memcmp>
     530:	cmp	r0, #0
     534:	beq	8c0 <open_file+0x670>
     538:	add	r0, sp, #56	; 0x38
     53c:	ldr	r1, [pc, #1324]	; a70 <open_file+0x820>
     540:	mov	r2, #8
     544:	bl	0 <memcmp>
     548:	cmp	r0, #0
     54c:	beq	8c0 <open_file+0x670>
     550:	add	r0, sp, #56	; 0x38
     554:	ldr	r1, [pc, #1292]	; a68 <open_file+0x818>
     558:	mov	r2, #8
     55c:	bl	0 <memcmp>
     560:	cmp	r0, #0
     564:	beq	8c0 <open_file+0x670>
     568:	add	r0, sp, #56	; 0x38
     56c:	ldr	r1, [pc, #1280]	; a74 <open_file+0x824>
     570:	mov	r2, #8
     574:	bl	0 <memcmp>
     578:	cmp	r0, #0
     57c:	beq	8c0 <open_file+0x670>
     580:	add	r0, sp, #56	; 0x38
     584:	ldr	r1, [pc, #1228]	; a58 <open_file+0x808>
     588:	mov	r2, #8
     58c:	bl	0 <memcmp>
     590:	cmp	r0, #0
     594:	beq	8c0 <open_file+0x670>
     598:	add	r0, sp, #56	; 0x38
     59c:	ldr	r1, [pc, #1180]	; a40 <open_file+0x7f0>
     5a0:	mov	r2, #4
     5a4:	bl	0 <memcmp>
     5a8:	cmp	r0, #0
     5ac:	bne	5d4 <open_file+0x384>
     5b0:	ldrb	r1, [sp, #63]	; 0x3f
     5b4:	cmp	r1, #1
     5b8:	beq	5c4 <open_file+0x374>
     5bc:	cmp	r1, #2
     5c0:	bne	5d4 <open_file+0x384>
     5c4:	mov	r0, #7
     5c8:	str	r0, [sp, #40]	; 0x28
     5cc:	mov	r1, #0
     5d0:	b	8cc <open_file+0x67c>
     5d4:	add	r0, sp, #56	; 0x38
     5d8:	ldr	r1, [pc, #1140]	; a54 <open_file+0x804>
     5dc:	mov	r2, #5
     5e0:	bl	0 <memcmp>
     5e4:	cmp	r0, #0
     5e8:	beq	8b0 <open_file+0x660>
     5ec:	add	r0, sp, #56	; 0x38
     5f0:	ldr	r1, [pc, #1080]	; a30 <open_file+0x7e0>
     5f4:	mov	r2, #8
     5f8:	bl	0 <memcmp>
     5fc:	cmp	r0, #0
     600:	beq	8b0 <open_file+0x660>
     604:	mov	r1, r6
     608:	mov	r0, r4
     60c:	cmp	r0, #0
     610:	bne	620 <open_file+0x3d0>
     614:	cmp	r1, #40	; 0x28
     618:	bcc	628 <open_file+0x3d8>
     61c:	b	630 <open_file+0x3e0>
     620:	cmp	r0, #0
     624:	bge	630 <open_file+0x3e0>
     628:	mov	r1, #0
     62c:	b	8cc <open_file+0x67c>
     630:	add	r0, sp, #136	; 0x88
     634:	add	r1, sp, #64	; 0x40
     638:	mov	r3, #0
     63c:	mov	r2, #8
     640:	mov	r8, #0
     644:	mov	ip, #32
     648:	str	r8, [sp, #4]
     64c:	str	ip, [sp]
     650:	bl	0 <coda_cursor_read_bytes>
     654:	cmp	r0, #0
     658:	beq	664 <open_file+0x414>
     65c:	mvn	r1, #0
     660:	b	8cc <open_file+0x67c>
     664:	mov	r3, r6
     668:	mov	ip, r4
     66c:	cmp	ip, #0
     670:	bne	680 <open_file+0x430>
     674:	cmp	r3, #60	; 0x3c
     678:	bcs	688 <open_file+0x438>
     67c:	b	778 <open_file+0x528>
     680:	cmp	ip, #0
     684:	ble	778 <open_file+0x528>
     688:	ldrb	r2, [sp, #56]	; 0x38
     68c:	cmp	r2, #35	; 0x23
     690:	bne	778 <open_file+0x528>
     694:	ldrb	r1, [sp, #57]	; 0x39
     698:	cmp	r1, #97	; 0x61
     69c:	beq	6b0 <open_file+0x460>
     6a0:	cmp	r1, #98	; 0x62
     6a4:	beq	6b0 <open_file+0x460>
     6a8:	cmp	r1, #99	; 0x63
     6ac:	bne	778 <open_file+0x528>
     6b0:	ldrb	ip, [sp, #58]	; 0x3a
     6b4:	cmp	ip, #80	; 0x50
     6b8:	beq	6c4 <open_file+0x474>
     6bc:	cmp	ip, #86	; 0x56
     6c0:	bne	778 <open_file+0x528>
     6c4:	ldrb	r0, [sp, #59]	; 0x3b
     6c8:	cmp	r0, #48	; 0x30
     6cc:	blt	778 <open_file+0x528>
     6d0:	cmp	r0, #57	; 0x39
     6d4:	bgt	778 <open_file+0x528>
     6d8:	ldrb	r3, [sp, #60]	; 0x3c
     6dc:	cmp	r3, #48	; 0x30
     6e0:	blt	778 <open_file+0x528>
     6e4:	cmp	r3, #57	; 0x39
     6e8:	bgt	778 <open_file+0x528>
     6ec:	ldrb	ip, [sp, #61]	; 0x3d
     6f0:	cmp	ip, #48	; 0x30
     6f4:	blt	778 <open_file+0x528>
     6f8:	cmp	ip, #57	; 0x39
     6fc:	bgt	778 <open_file+0x528>
     700:	ldrb	r2, [sp, #62]	; 0x3e
     704:	cmp	r2, #48	; 0x30
     708:	blt	778 <open_file+0x528>
     70c:	cmp	r2, #57	; 0x39
     710:	bgt	778 <open_file+0x528>
     714:	ldrb	r1, [sp, #63]	; 0x3f
     718:	cmp	r1, #32
     71c:	bne	778 <open_file+0x528>
     720:	ldrb	r0, [sp, #66]	; 0x42
     724:	cmp	r0, #32
     728:	bne	778 <open_file+0x528>
     72c:	ldrb	r0, [sp, #69]	; 0x45
     730:	cmp	r0, #32
     734:	bne	778 <open_file+0x528>
     738:	ldrb	r2, [sp, #72]	; 0x48
     73c:	cmp	r2, #32
     740:	bne	778 <open_file+0x528>
     744:	ldrb	r3, [sp, #75]	; 0x4b
     748:	cmp	r3, #32
     74c:	bne	778 <open_file+0x528>
     750:	ldrb	ip, [sp, #87]	; 0x57
     754:	cmp	ip, #32
     758:	bne	778 <open_file+0x528>
     75c:	ldrb	r1, [sp, #95]	; 0x5f
     760:	cmp	r1, #32
     764:	bne	778 <open_file+0x528>
     768:	mov	r2, #9
     76c:	str	r2, [sp, #40]	; 0x28
     770:	mov	r1, #0
     774:	b	8cc <open_file+0x67c>
     778:	mov	r0, r4
     77c:	cmp	r0, #0
     780:	bne	794 <open_file+0x544>
     784:	mov	r0, r6
     788:	cmp	r0, #80	; 0x50
     78c:	bcc	79c <open_file+0x54c>
     790:	b	7a4 <open_file+0x554>
     794:	cmp	r0, #0
     798:	bge	7a4 <open_file+0x554>
     79c:	mov	r1, #0
     7a0:	b	8cc <open_file+0x67c>
     7a4:	add	r0, sp, #136	; 0x88
     7a8:	add	r1, sp, #56	; 0x38
     7ac:	mov	r3, #0
     7b0:	mov	r2, #60	; 0x3c
     7b4:	mov	r7, #0
     7b8:	mov	ip, #20
     7bc:	str	r7, [sp, #4]
     7c0:	str	ip, [sp]
     7c4:	bl	0 <coda_cursor_read_bytes>
     7c8:	cmp	r0, #0
     7cc:	beq	7d8 <open_file+0x588>
     7d0:	mvn	r1, #0
     7d4:	b	8cc <open_file+0x67c>
     7d8:	add	r0, sp, #56	; 0x38
     7dc:	ldr	r1, [pc, #600]	; a3c <open_file+0x7ec>
     7e0:	mov	r2, #20
     7e4:	bl	0 <memcmp>
     7e8:	cmp	r0, #0
     7ec:	bne	800 <open_file+0x5b0>
     7f0:	mov	r2, #8
     7f4:	str	r2, [sp, #40]	; 0x28
     7f8:	mov	r1, #0
     7fc:	b	8cc <open_file+0x67c>
     800:	mov	r8, #0
     804:	mov	r7, #512	; 0x200
     808:	mov	r3, #0
     80c:	mov	r2, #8
     810:	adds	r0, r7, r2
     814:	adc	r3, r8, r3
     818:	mov	r2, r4
     81c:	cmp	r3, r2
     820:	bne	834 <open_file+0x5e4>
     824:	mov	r3, r6
     828:	cmp	r0, r3
     82c:	bcc	83c <open_file+0x5ec>
     830:	b	8a8 <open_file+0x658>
     834:	cmp	r3, r2
     838:	bge	8a8 <open_file+0x658>
     83c:	add	r0, sp, #136	; 0x88
     840:	add	r1, sp, #56	; 0x38
     844:	mov	r2, #0
     848:	mov	ip, #8
     84c:	str	r2, [sp, #4]
     850:	str	ip, [sp]
     854:	mov	r3, r8
     858:	mov	r2, r7
     85c:	bl	0 <coda_cursor_read_bytes>
     860:	cmp	r0, #0
     864:	beq	870 <open_file+0x620>
     868:	mvn	r1, #0
     86c:	b	8cc <open_file+0x67c>
     870:	add	r0, sp, #56	; 0x38
     874:	ldr	r1, [pc, #460]	; a48 <open_file+0x7f8>
     878:	mov	r2, #8
     87c:	bl	0 <memcmp>
     880:	cmp	r0, #0
     884:	bne	898 <open_file+0x648>
     888:	mov	ip, #4
     88c:	str	ip, [sp, #40]	; 0x28
     890:	mov	r1, #0
     894:	b	8cc <open_file+0x67c>
     898:	lsl	r0, r8, #1
     89c:	orr	r8, r0, r7, lsr #31
     8a0:	lsl	r7, r7, #1
     8a4:	b	808 <open_file+0x5b8>
     8a8:	mov	r1, #0
     8ac:	b	8cc <open_file+0x67c>
     8b0:	mov	r2, #2
     8b4:	str	r2, [sp, #40]	; 0x28
     8b8:	mov	r1, #0
     8bc:	b	8cc <open_file+0x67c>
     8c0:	mov	r0, #5
     8c4:	str	r0, [sp, #40]	; 0x28
     8c8:	mov	r1, #0
     8cc:	cmp	r1, #0
     8d0:	beq	8ec <open_file+0x69c>
     8d4:	ldr	r0, [sp, #44]	; 0x2c
     8d8:	bl	e58 <coda_close>
     8dc:	mvn	r0, #0
     8e0:	b	a0c <open_file+0x7bc>
     8e4:	mov	ip, #1
     8e8:	str	ip, [sp, #40]	; 0x28
     8ec:	ldr	r1, [sp, #40]	; 0x28
     8f0:	add	r0, sp, #44	; 0x2c
     8f4:	cmp	r1, #10
     8f8:	bcs	9ec <open_file+0x79c>
     8fc:	add	pc, pc, r1, lsl #2
     900:	nop	{0}
     904:	b	92c <open_file+0x6dc>
     908:	b	9ec <open_file+0x79c>
     90c:	b	94c <open_file+0x6fc>
     910:	b	960 <open_file+0x710>
     914:	b	974 <open_file+0x724>
     918:	b	988 <open_file+0x738>
     91c:	b	99c <open_file+0x74c>
     920:	b	9b0 <open_file+0x760>
     924:	b	9c4 <open_file+0x774>
     928:	b	9d8 <open_file+0x788>
     92c:	ldr	r0, [pc, #256]	; a34 <open_file+0x7e4>
     930:	ldr	r1, [pc, #296]	; a60 <open_file+0x810>
     934:	movw	r2, #362	; 0x16a
     938:	ldr	r3, [pc, #236]	; a2c <open_file+0x7dc>
     93c:	bl	0 <__assert_fail>
     940:	mov	r0, #1
     944:	bl	0 <exit>
     948:	b	9ec <open_file+0x79c>
     94c:	bl	0 <coda_xml_reopen>
     950:	cmp	r0, #0
     954:	beq	9ec <open_file+0x79c>
     958:	mvn	ip, #0
     95c:	b	9f0 <open_file+0x7a0>
     960:	mvn	r0, #10
     964:	mov	r1, #0
     968:	bl	0 <coda_set_error>
     96c:	mvn	ip, #0
     970:	b	9f0 <open_file+0x7a0>
     974:	mvn	r0, #12
     978:	mov	r1, #0
     97c:	bl	0 <coda_set_error>
     980:	mvn	ip, #0
     984:	b	9f0 <open_file+0x7a0>
     988:	bl	0 <coda_cdf_reopen>
     98c:	cmp	r0, #0
     990:	beq	9ec <open_file+0x79c>
     994:	mvn	ip, #0
     998:	b	9f0 <open_file+0x7a0>
     99c:	bl	0 <coda_netcdf_reopen>
     9a0:	cmp	r0, #0
     9a4:	beq	9ec <open_file+0x79c>
     9a8:	mvn	ip, #0
     9ac:	b	9f0 <open_file+0x7a0>
     9b0:	bl	0 <coda_grib_reopen>
     9b4:	cmp	r0, #0
     9b8:	beq	9ec <open_file+0x79c>
     9bc:	mvn	ip, #0
     9c0:	b	9f0 <open_file+0x7a0>
     9c4:	bl	0 <coda_rinex_reopen>
     9c8:	cmp	r0, #0
     9cc:	beq	9ec <open_file+0x79c>
     9d0:	mvn	ip, #0
     9d4:	b	9f0 <open_file+0x7a0>
     9d8:	bl	0 <coda_sp3_reopen>
     9dc:	cmp	r0, #0
     9e0:	beq	9ec <open_file+0x79c>
     9e4:	mvn	ip, #0
     9e8:	b	9f0 <open_file+0x7a0>
     9ec:	mov	ip, #0
     9f0:	cmp	ip, #0
     9f4:	beq	a00 <open_file+0x7b0>
     9f8:	mvn	r0, #0
     9fc:	b	a0c <open_file+0x7bc>
     a00:	ldr	r1, [sp, #44]	; 0x2c
     a04:	str	r1, [r5]
     a08:	mov	r0, #0
     a0c:	ldr	r4, [sp, #16]
     a10:	ldr	r5, [sp, #20]
     a14:	ldr	r6, [sp, #24]
     a18:	ldr	r7, [sp, #28]
     a1c:	ldr	r8, [sp, #32]
     a20:	ldr	lr, [sp, #12]
     a24:	add	sp, sp, #656	; 0x290
     a28:	bx	lr
     a2c:	.word	0x00000388
     a30:	.word	0x000000f5
     a34:	.word	0x0000031c
     a38:	.word	0x000000fe
     a3c:	.word	0x00000137
     a40:	.word	0x000001b3
     a44:	.word	0x00000254
     a48:	.word	0x00000371
     a4c:	.word	0x0000037a
     a50:	.word	0x0000022e
     a54:	.word	0x00000311
     a58:	.word	0x00000286
     a5c:	.word	0x00000317
     a60:	.word	0x000002b5
     a64:	.word	0x00000110
     a68:	.word	0x0000008a
     a6c:	.word	0x000001af
     a70:	.word	0x00000225
     a74:	.word	0x000001fa
     a78:	.word	0x000000bb

00000a7c <coda_recognize_file>:
     a7c:	mov	ip, sp
     a80:	sub	sp, sp, #40	; 0x28
     a84:	str	ip, [sp]
     a88:	str	lr, [sp, #4]
     a8c:	str	r4, [sp, #8]
     a90:	str	r5, [sp, #12]
     a94:	str	r6, [sp, #16]
     a98:	str	r7, [sp, #20]
     a9c:	str	r8, [sp, #24]
     aa0:	ldr	r8, [ip, #4]
     aa4:	ldr	r7, [ip]
     aa8:	mov	r4, r3
     aac:	mov	r5, r2
     ab0:	mov	r6, r1
     ab4:	mov	r3, #0
     ab8:	str	r3, [sp, #32]
     abc:	add	r1, sp, #36	; 0x24
     ac0:	mov	r2, #0
     ac4:	bl	250 <open_file>
     ac8:	cmp	r0, #0
     acc:	beq	ad8 <coda_recognize_file+0x5c>
     ad0:	mvn	r0, #0
     ad4:	b	bd0 <coda_recognize_file+0x154>
     ad8:	ldr	r0, [sp, #36]	; 0x24
     adc:	add	r1, sp, #32
     ae0:	bl	0 <coda_data_dictionary_find_definition_for_product>
     ae4:	cmp	r0, #0
     ae8:	beq	afc <coda_recognize_file+0x80>
     aec:	ldr	r0, [sp, #36]	; 0x24
     af0:	bl	e58 <coda_close>
     af4:	mvn	r0, #0
     af8:	b	bd0 <coda_recognize_file+0x154>
     afc:	cmp	r6, #0
     b00:	beq	b18 <coda_recognize_file+0x9c>
     b04:	ldr	r3, [sp, #36]	; 0x24
     b08:	ldr	r2, [r3, #8]
     b0c:	ldr	r1, [r3, #12]
     b10:	str	r2, [r6]
     b14:	str	r1, [r6, #4]
     b18:	ldr	r0, [sp, #32]
     b1c:	cmp	r0, #0
     b20:	beq	b80 <coda_recognize_file+0x104>
     b24:	cmp	r5, #0
     b28:	beq	b34 <coda_recognize_file+0xb8>
     b2c:	ldr	ip, [r0]
     b30:	str	ip, [r5]
     b34:	cmp	r4, #0
     b38:	beq	b50 <coda_recognize_file+0xd4>
     b3c:	ldr	r0, [sp, #32]
     b40:	ldr	r1, [r0, #44]	; 0x2c
     b44:	ldr	r1, [r1, #20]
     b48:	ldr	r2, [r1]
     b4c:	str	r2, [r4]
     b50:	cmp	r7, #0
     b54:	beq	b68 <coda_recognize_file+0xec>
     b58:	ldr	r3, [sp, #32]
     b5c:	ldr	r2, [r3, #44]	; 0x2c
     b60:	ldr	r3, [r2]
     b64:	str	r3, [r7]
     b68:	cmp	r8, #0
     b6c:	beq	bc4 <coda_recognize_file+0x148>
     b70:	ldr	r0, [sp, #32]
     b74:	ldr	ip, [r0, #4]
     b78:	str	ip, [r8]
     b7c:	b	bc4 <coda_recognize_file+0x148>
     b80:	cmp	r5, #0
     b84:	beq	b94 <coda_recognize_file+0x118>
     b88:	ldr	ip, [sp, #36]	; 0x24
     b8c:	ldr	ip, [ip, #16]
     b90:	str	ip, [r5]
     b94:	cmp	r4, #0
     b98:	beq	ba4 <coda_recognize_file+0x128>
     b9c:	mov	r2, #0
     ba0:	str	r2, [r4]
     ba4:	cmp	r7, #0
     ba8:	beq	bb4 <coda_recognize_file+0x138>
     bac:	mov	r2, #0
     bb0:	str	r2, [r7]
     bb4:	cmp	r8, #0
     bb8:	beq	bc4 <coda_recognize_file+0x148>
     bbc:	mvn	r3, #0
     bc0:	str	r3, [r8]
     bc4:	ldr	r0, [sp, #36]	; 0x24
     bc8:	bl	e58 <coda_close>
     bcc:	mov	r0, #0
     bd0:	ldr	r4, [sp, #8]
     bd4:	ldr	r5, [sp, #12]
     bd8:	ldr	r6, [sp, #16]
     bdc:	ldr	r7, [sp, #20]
     be0:	ldr	r8, [sp, #24]
     be4:	ldr	lr, [sp, #4]
     be8:	add	sp, sp, #40	; 0x28
     bec:	bx	lr

00000bf0 <coda_open>:
     bf0:	mov	ip, sp
     bf4:	sub	sp, sp, #24
     bf8:	str	ip, [sp]
     bfc:	str	lr, [sp, #4]
     c00:	str	r4, [sp, #8]
     c04:	mov	r4, r1
     c08:	mov	r1, #0
     c0c:	str	r1, [sp, #16]
     c10:	cmp	r0, #0
     c14:	bne	c34 <coda_open+0x44>
     c18:	mvn	r0, #99	; 0x63
     c1c:	ldr	r1, [pc, #188]	; ce0 <coda_open+0xf0>
     c20:	ldr	r2, [pc, #180]	; cdc <coda_open+0xec>
     c24:	mov	r3, #668	; 0x29c
     c28:	bl	0 <coda_set_error>
     c2c:	mvn	r0, #0
     c30:	b	cc8 <coda_open+0xd8>
     c34:	cmp	r4, #0
     c38:	bne	c58 <coda_open+0x68>
     c3c:	mvn	r0, #99	; 0x63
     c40:	ldr	r1, [pc, #144]	; cd8 <coda_open+0xe8>
     c44:	ldr	r2, [pc, #144]	; cdc <coda_open+0xec>
     c48:	movw	r3, #673	; 0x2a1
     c4c:	bl	0 <coda_set_error>
     c50:	mvn	r0, #0
     c54:	b	cc8 <coda_open+0xd8>
     c58:	add	r1, sp, #20
     c5c:	mov	r2, #0
     c60:	bl	250 <open_file>
     c64:	cmp	r0, #0
     c68:	beq	c74 <coda_open+0x84>
     c6c:	mvn	r0, #0
     c70:	b	cc8 <coda_open+0xd8>
     c74:	ldr	r0, [sp, #20]
     c78:	add	r1, sp, #16
     c7c:	bl	0 <coda_data_dictionary_find_definition_for_product>
     c80:	cmp	r0, #0
     c84:	beq	c98 <coda_open+0xa8>
     c88:	ldr	r0, [sp, #20]
     c8c:	bl	e58 <coda_close>
     c90:	mvn	r0, #0
     c94:	b	cc8 <coda_open+0xd8>
     c98:	add	r0, sp, #20
     c9c:	ldr	r1, [sp, #16]
     ca0:	bl	0 <set_definition>
     ca4:	cmp	r0, #0
     ca8:	beq	cbc <coda_open+0xcc>
     cac:	ldr	r0, [sp, #20]
     cb0:	bl	e58 <coda_close>
     cb4:	mvn	r0, #0
     cb8:	b	cc8 <coda_open+0xd8>
     cbc:	ldr	r0, [sp, #20]
     cc0:	str	r0, [r4]
     cc4:	mov	r0, #0
     cc8:	ldr	r4, [sp, #8]
     ccc:	ldr	lr, [sp, #4]
     cd0:	add	sp, sp, #24
     cd4:	bx	lr
     cd8:	.word	0x00000021
     cdc:	.word	0x000002b5
     ce0:	.word	0x000001d8

00000ce4 <coda_open_as>:
     ce4:	mov	ip, sp
     ce8:	sub	sp, sp, #32
     cec:	str	ip, [sp]
     cf0:	str	lr, [sp, #4]
     cf4:	str	r4, [sp, #8]
     cf8:	str	r5, [sp, #12]
     cfc:	str	r6, [sp, #16]
     d00:	ldr	r6, [ip]
     d04:	mov	r5, r0
     d08:	mov	r0, r1
     d0c:	mov	r1, r2
     d10:	mov	r2, r3
     d14:	mov	ip, #0
     d18:	str	ip, [sp, #24]
     d1c:	mov	r4, #0
     d20:	cmp	r5, #0
     d24:	bne	d44 <coda_open_as+0x60>
     d28:	mvn	r0, #99	; 0x63
     d2c:	ldr	r1, [pc, #288]	; e54 <coda_open_as+0x170>
     d30:	ldr	r2, [pc, #276]	; e4c <coda_open_as+0x168>
     d34:	movw	r3, #719	; 0x2cf
     d38:	bl	0 <coda_set_error>
     d3c:	mvn	r0, #0
     d40:	b	e30 <coda_open_as+0x14c>
     d44:	cmp	r0, #0
     d48:	beq	d94 <coda_open_as+0xb0>
     d4c:	cmp	r1, #0
     d50:	bne	d70 <coda_open_as+0x8c>
     d54:	mvn	r0, #99	; 0x63
     d58:	ldr	r1, [pc, #240]	; e50 <coda_open_as+0x16c>
     d5c:	ldr	r2, [pc, #232]	; e4c <coda_open_as+0x168>
     d60:	movw	r3, #726	; 0x2d6
     d64:	bl	0 <coda_set_error>
     d68:	mvn	r0, #0
     d6c:	b	e30 <coda_open_as+0x14c>
     d70:	cmp	r6, #0
     d74:	bne	d94 <coda_open_as+0xb0>
     d78:	mvn	r0, #99	; 0x63
     d7c:	ldr	r1, [pc, #196]	; e48 <coda_open_as+0x164>
     d80:	ldr	r2, [pc, #196]	; e4c <coda_open_as+0x168>
     d84:	movw	r3, #731	; 0x2db
     d88:	bl	0 <coda_set_error>
     d8c:	mvn	r0, #0
     d90:	b	e30 <coda_open_as+0x14c>
     d94:	cmp	r0, #0
     d98:	beq	de0 <coda_open_as+0xfc>
     d9c:	add	r3, sp, #24
     da0:	bl	0 <coda_data_dictionary_get_definition>
     da4:	cmp	r0, #0
     da8:	beq	db4 <coda_open_as+0xd0>
     dac:	mvn	r0, #0
     db0:	b	e30 <coda_open_as+0x14c>
     db4:	ldr	r1, [sp, #24]
     db8:	cmp	r1, #0
     dbc:	beq	de0 <coda_open_as+0xfc>
     dc0:	ldr	r0, [r1]
     dc4:	cmp	r0, #0
     dc8:	beq	ddc <coda_open_as+0xf8>
     dcc:	cmp	r0, #1
     dd0:	moveq	r4, #1
     dd4:	movne	r4, #0
     dd8:	b	de0 <coda_open_as+0xfc>
     ddc:	mov	r4, #1
     de0:	add	r1, sp, #28
     de4:	mov	r2, r4
     de8:	mov	r0, r5
     dec:	bl	250 <open_file>
     df0:	cmp	r0, #0
     df4:	beq	e00 <coda_open_as+0x11c>
     df8:	mvn	r0, #0
     dfc:	b	e30 <coda_open_as+0x14c>
     e00:	add	r0, sp, #28
     e04:	ldr	r1, [sp, #24]
     e08:	bl	0 <set_definition>
     e0c:	cmp	r0, #0
     e10:	beq	e24 <coda_open_as+0x140>
     e14:	ldr	r0, [sp, #28]
     e18:	bl	e58 <coda_close>
     e1c:	mvn	r0, #0
     e20:	b	e30 <coda_open_as+0x14c>
     e24:	ldr	r0, [sp, #28]
     e28:	str	r0, [r6]
     e2c:	mov	r0, #0
     e30:	ldr	r4, [sp, #8]
     e34:	ldr	r5, [sp, #12]
     e38:	ldr	r6, [sp, #16]
     e3c:	ldr	lr, [sp, #4]
     e40:	add	sp, sp, #32
     e44:	bx	lr
     e48:	.word	0x00000021
     e4c:	.word	0x000002b5
     e50:	.word	0x00000064
     e54:	.word	0x000001d8

00000e58 <coda_close>:
     e58:	mov	ip, sp
     e5c:	sub	sp, sp, #24
     e60:	str	ip, [sp]
     e64:	str	lr, [sp, #4]
     e68:	str	r4, [sp, #8]
     e6c:	str	r5, [sp, #12]
     e70:	str	r6, [sp, #16]
     e74:	mov	r4, r0
     e78:	cmp	r4, #0
     e7c:	bne	e9c <coda_close+0x44>
     e80:	mvn	r0, #99	; 0x63
     e84:	ldr	r1, [pc, #500]	; 1080 <coda_close+0x228>
     e88:	ldr	r2, [pc, #504]	; 1088 <coda_close+0x230>
     e8c:	movw	r3, #777	; 0x309
     e90:	bl	0 <coda_set_error>
     e94:	mvn	r5, #0
     e98:	b	1060 <coda_close+0x208>
     e9c:	ldr	r0, [r4, #28]
     ea0:	cmp	r0, #0
     ea4:	beq	eb4 <coda_close+0x5c>
     ea8:	bl	0 <free>
     eac:	mov	r2, #0
     eb0:	str	r2, [r4, #28]
     eb4:	ldr	r3, [r4, #32]
     eb8:	cmp	r3, #0
     ebc:	beq	f00 <coda_close+0xa8>
     ec0:	mov	r6, #0
     ec4:	ldr	r1, [r4, #24]
     ec8:	ldr	r1, [r1, #32]
     ecc:	cmp	r6, r1
     ed0:	bge	ef0 <coda_close+0x98>
     ed4:	ldr	r2, [r4, #32]
     ed8:	ldr	r0, [r2, r6, lsl #2]
     edc:	cmp	r0, #0
     ee0:	beq	ee8 <coda_close+0x90>
     ee4:	bl	0 <free>
     ee8:	add	r6, r6, #1
     eec:	b	ec4 <coda_close+0x6c>
     ef0:	ldr	r0, [r4, #32]
     ef4:	bl	0 <free>
     ef8:	mov	ip, #0
     efc:	str	ip, [r4, #32]
     f00:	ldr	r0, [r4, #16]
     f04:	cmp	r0, #10
     f08:	bcs	1044 <coda_close+0x1ec>
     f0c:	add	pc, pc, r0, lsl #2
     f10:	nop	{0}
     f14:	b	f3c <coda_close+0xe4>
     f18:	b	f58 <coda_close+0x100>
     f1c:	b	f74 <coda_close+0x11c>
     f20:	b	fe4 <coda_close+0x18c>
     f24:	b	ff8 <coda_close+0x1a0>
     f28:	b	f90 <coda_close+0x138>
     f2c:	b	fac <coda_close+0x154>
     f30:	b	fc8 <coda_close+0x170>
     f34:	b	100c <coda_close+0x1b4>
     f38:	b	1028 <coda_close+0x1d0>
     f3c:	mov	r0, r4
     f40:	ldr	r4, [sp, #8]
     f44:	ldr	r5, [sp, #12]
     f48:	ldr	r6, [sp, #16]
     f4c:	ldr	lr, [sp, #4]
     f50:	add	sp, sp, #24
     f54:	b	0 <coda_ascii_close>
     f58:	mov	r0, r4
     f5c:	ldr	r4, [sp, #8]
     f60:	ldr	r5, [sp, #12]
     f64:	ldr	r6, [sp, #16]
     f68:	ldr	lr, [sp, #4]
     f6c:	add	sp, sp, #24
     f70:	b	0 <coda_bin_close>
     f74:	mov	r0, r4
     f78:	ldr	r4, [sp, #8]
     f7c:	ldr	r5, [sp, #12]
     f80:	ldr	r6, [sp, #16]
     f84:	ldr	lr, [sp, #4]
     f88:	add	sp, sp, #24
     f8c:	b	0 <coda_xml_close>
     f90:	mov	r0, r4
     f94:	ldr	r4, [sp, #8]
     f98:	ldr	r5, [sp, #12]
     f9c:	ldr	r6, [sp, #16]
     fa0:	ldr	lr, [sp, #4]
     fa4:	add	sp, sp, #24
     fa8:	b	0 <coda_cdf_close>
     fac:	mov	r0, r4
     fb0:	ldr	r4, [sp, #8]
     fb4:	ldr	r5, [sp, #12]
     fb8:	ldr	r6, [sp, #16]
     fbc:	ldr	lr, [sp, #4]
     fc0:	add	sp, sp, #24
     fc4:	b	0 <coda_netcdf_close>
     fc8:	mov	r0, r4
     fcc:	ldr	r4, [sp, #8]
     fd0:	ldr	r5, [sp, #12]
     fd4:	ldr	r6, [sp, #16]
     fd8:	ldr	lr, [sp, #4]
     fdc:	add	sp, sp, #24
     fe0:	b	0 <coda_grib_close>
     fe4:	mvn	r0, #10
     fe8:	mov	r1, #0
     fec:	bl	0 <coda_set_error>
     ff0:	mvn	r5, #0
     ff4:	b	1060 <coda_close+0x208>
     ff8:	mvn	r0, #12
     ffc:	mov	r1, #0
    1000:	bl	0 <coda_set_error>
    1004:	mvn	r5, #0
    1008:	b	1060 <coda_close+0x208>
    100c:	mov	r0, r4
    1010:	ldr	r4, [sp, #8]
    1014:	ldr	r5, [sp, #12]
    1018:	ldr	r6, [sp, #16]
    101c:	ldr	lr, [sp, #4]
    1020:	add	sp, sp, #24
    1024:	b	0 <coda_rinex_close>
    1028:	mov	r0, r4
    102c:	ldr	r4, [sp, #8]
    1030:	ldr	r5, [sp, #12]
    1034:	ldr	r6, [sp, #16]
    1038:	ldr	lr, [sp, #4]
    103c:	add	sp, sp, #24
    1040:	b	0 <coda_sp3_close>
    1044:	ldr	r0, [pc, #48]	; 107c <coda_close+0x224>
    1048:	ldr	r1, [pc, #56]	; 1088 <coda_close+0x230>
    104c:	mov	r2, #836	; 0x344
    1050:	ldr	r3, [pc, #44]	; 1084 <coda_close+0x22c>
    1054:	bl	0 <__assert_fail>
    1058:	mov	r0, #1
    105c:	bl	0 <exit>
    1060:	mov	r0, r5
    1064:	ldr	r4, [sp, #8]
    1068:	ldr	r5, [sp, #12]
    106c:	ldr	r6, [sp, #16]
    1070:	ldr	lr, [sp, #4]
    1074:	add	sp, sp, #24
    1078:	bx	lr
    107c:	.word	0x0000031c
    1080:	.word	0x0000028f
    1084:	.word	0x0000039c
    1088:	.word	0x000002b5

0000108c <coda_get_product_filename>:
    108c:	mov	ip, sp
    1090:	sub	sp, sp, #8
    1094:	str	ip, [sp]
    1098:	str	lr, [sp, #4]
    109c:	cmp	r0, #0
    10a0:	bne	10c0 <coda_get_product_filename+0x34>
    10a4:	mvn	r0, #99	; 0x63
    10a8:	ldr	r1, [pc, #40]	; 10d8 <coda_get_product_filename+0x4c>
    10ac:	ldr	r2, [pc, #40]	; 10dc <coda_get_product_filename+0x50>
    10b0:	mov	r3, #856	; 0x358
    10b4:	bl	0 <coda_set_error>
    10b8:	mvn	r0, #0
    10bc:	b	10cc <coda_get_product_filename+0x40>
    10c0:	ldr	r2, [r0]
    10c4:	str	r2, [r1]
    10c8:	mov	r0, #0
    10cc:	ldr	lr, [sp, #4]
    10d0:	add	sp, sp, #8
    10d4:	bx	lr
    10d8:	.word	0x0000028f
    10dc:	.word	0x000002b5

000010e0 <coda_get_product_file_size>:
    10e0:	mov	ip, sp
    10e4:	sub	sp, sp, #8
    10e8:	str	ip, [sp]
    10ec:	str	lr, [sp, #4]
    10f0:	cmp	r0, #0
    10f4:	bne	1114 <coda_get_product_file_size+0x34>
    10f8:	mvn	r0, #99	; 0x63
    10fc:	ldr	r1, [pc, #84]	; 1158 <coda_get_product_file_size+0x78>
    1100:	ldr	r2, [pc, #88]	; 1160 <coda_get_product_file_size+0x80>
    1104:	mov	r3, #876	; 0x36c
    1108:	bl	0 <coda_set_error>
    110c:	mvn	r0, #0
    1110:	b	114c <coda_get_product_file_size+0x6c>
    1114:	cmp	r1, #0
    1118:	bne	1138 <coda_get_product_file_size+0x58>
    111c:	mvn	r0, #99	; 0x63
    1120:	ldr	r1, [pc, #52]	; 115c <coda_get_product_file_size+0x7c>
    1124:	ldr	r2, [pc, #52]	; 1160 <coda_get_product_file_size+0x80>
    1128:	movw	r3, #881	; 0x371
    112c:	bl	0 <coda_set_error>
    1130:	mvn	r0, #0
    1134:	b	114c <coda_get_product_file_size+0x6c>
    1138:	ldr	r2, [r0, #8]
    113c:	ldr	r3, [r0, #12]
    1140:	str	r2, [r1]
    1144:	str	r3, [r1, #4]
    1148:	mov	r0, #0
    114c:	ldr	lr, [sp, #4]
    1150:	add	sp, sp, #8
    1154:	bx	lr
    1158:	.word	0x0000028f
    115c:	.word	0x000000d2
    1160:	.word	0x000002b5

00001164 <coda_get_product_format>:
    1164:	mov	ip, sp
    1168:	sub	sp, sp, #8
    116c:	str	ip, [sp]
    1170:	str	lr, [sp, #4]
    1174:	cmp	r0, #0
    1178:	bne	1198 <coda_get_product_format+0x34>
    117c:	mvn	r0, #99	; 0x63
    1180:	ldr	r1, [pc, #80]	; 11d8 <coda_get_product_format+0x74>
    1184:	ldr	r2, [pc, #80]	; 11dc <coda_get_product_format+0x78>
    1188:	mov	r3, #904	; 0x388
    118c:	bl	0 <coda_set_error>
    1190:	mvn	r0, #0
    1194:	b	11c8 <coda_get_product_format+0x64>
    1198:	cmp	r1, #0
    119c:	bne	11bc <coda_get_product_format+0x58>
    11a0:	mvn	r0, #99	; 0x63
    11a4:	ldr	r1, [pc, #40]	; 11d4 <coda_get_product_format+0x70>
    11a8:	ldr	r2, [pc, #44]	; 11dc <coda_get_product_format+0x78>
    11ac:	movw	r3, #909	; 0x38d
    11b0:	bl	0 <coda_set_error>
    11b4:	mvn	r0, #0
    11b8:	b	11c8 <coda_get_product_format+0x64>
    11bc:	ldr	r3, [r0, #16]
    11c0:	str	r3, [r1]
    11c4:	mov	r0, #0
    11c8:	ldr	lr, [sp, #4]
    11cc:	add	sp, sp, #8
    11d0:	bx	lr
    11d4:	.word	0x000001b8
    11d8:	.word	0x0000028f
    11dc:	.word	0x000002b5

000011e0 <coda_get_product_class>:
    11e0:	mov	ip, sp
    11e4:	sub	sp, sp, #8
    11e8:	str	ip, [sp]
    11ec:	str	lr, [sp, #4]
    11f0:	cmp	r0, #0
    11f4:	bne	1214 <coda_get_product_class+0x34>
    11f8:	mvn	r0, #99	; 0x63
    11fc:	ldr	r1, [pc, #108]	; 1270 <coda_get_product_class+0x90>
    1200:	ldr	r2, [pc, #112]	; 1278 <coda_get_product_class+0x98>
    1204:	movw	r3, #933	; 0x3a5
    1208:	bl	0 <coda_set_error>
    120c:	mvn	r0, #0
    1210:	b	1264 <coda_get_product_class+0x84>
    1214:	cmp	r1, #0
    1218:	bne	1238 <coda_get_product_class+0x58>
    121c:	mvn	r0, #99	; 0x63
    1220:	ldr	r1, [pc, #76]	; 1274 <coda_get_product_class+0x94>
    1224:	ldr	r2, [pc, #76]	; 1278 <coda_get_product_class+0x98>
    1228:	movw	r3, #938	; 0x3aa
    122c:	bl	0 <coda_set_error>
    1230:	mvn	r0, #0
    1234:	b	1264 <coda_get_product_class+0x84>
    1238:	ldr	r0, [r0, #24]
    123c:	cmp	r0, #0
    1240:	beq	1258 <coda_get_product_class+0x78>
    1244:	ldr	r2, [r0, #44]	; 0x2c
    1248:	ldr	r0, [r2, #20]
    124c:	ldr	r2, [r0]
    1250:	str	r2, [r1]
    1254:	b	1260 <coda_get_product_class+0x80>
    1258:	mov	ip, #0
    125c:	str	ip, [r1]
    1260:	mov	r0, #0
    1264:	ldr	lr, [sp, #4]
    1268:	add	sp, sp, #8
    126c:	bx	lr
    1270:	.word	0x0000028f
    1274:	.word	0x0000014c
    1278:	.word	0x000002b5

0000127c <coda_get_product_type>:
    127c:	mov	ip, sp
    1280:	sub	sp, sp, #8
    1284:	str	ip, [sp]
    1288:	str	lr, [sp, #4]
    128c:	cmp	r0, #0
    1290:	bne	12b0 <coda_get_product_type+0x34>
    1294:	mvn	r0, #99	; 0x63
    1298:	ldr	r1, [pc, #104]	; 1308 <coda_get_product_type+0x8c>
    129c:	ldr	r2, [pc, #104]	; 130c <coda_get_product_type+0x90>
    12a0:	movw	r3, #969	; 0x3c9
    12a4:	bl	0 <coda_set_error>
    12a8:	mvn	r0, #0
    12ac:	b	12fc <coda_get_product_type+0x80>
    12b0:	cmp	r1, #0
    12b4:	bne	12d4 <coda_get_product_type+0x58>
    12b8:	mvn	r0, #99	; 0x63
    12bc:	ldr	r1, [pc, #76]	; 1310 <coda_get_product_type+0x94>
    12c0:	ldr	r2, [pc, #68]	; 130c <coda_get_product_type+0x90>
    12c4:	movw	r3, #974	; 0x3ce
    12c8:	bl	0 <coda_set_error>
    12cc:	mvn	r0, #0
    12d0:	b	12fc <coda_get_product_type+0x80>
    12d4:	ldr	r0, [r0, #24]
    12d8:	cmp	r0, #0
    12dc:	beq	12f0 <coda_get_product_type+0x74>
    12e0:	ldr	r0, [r0, #44]	; 0x2c
    12e4:	ldr	r2, [r0]
    12e8:	str	r2, [r1]
    12ec:	b	12f8 <coda_get_product_type+0x7c>
    12f0:	mov	r2, #0
    12f4:	str	r2, [r1]
    12f8:	mov	r0, #0
    12fc:	ldr	lr, [sp, #4]
    1300:	add	sp, sp, #8
    1304:	bx	lr
    1308:	.word	0x0000028f
    130c:	.word	0x000002b5
    1310:	.word	0x00000064

00001314 <coda_get_product_version>:
    1314:	mov	ip, sp
    1318:	sub	sp, sp, #8
    131c:	str	ip, [sp]
    1320:	str	lr, [sp, #4]
    1324:	cmp	r0, #0
    1328:	bne	1348 <coda_get_product_version+0x34>
    132c:	mvn	r0, #99	; 0x63
    1330:	ldr	r1, [pc, #100]	; 139c <coda_get_product_version+0x88>
    1334:	ldr	r2, [pc, #100]	; 13a0 <coda_get_product_version+0x8c>
    1338:	movw	r3, #1003	; 0x3eb
    133c:	bl	0 <coda_set_error>
    1340:	mvn	r0, #0
    1344:	b	1390 <coda_get_product_version+0x7c>
    1348:	cmp	r1, #0
    134c:	bne	136c <coda_get_product_version+0x58>
    1350:	mvn	r0, #99	; 0x63
    1354:	ldr	r1, [pc, #72]	; 13a4 <coda_get_product_version+0x90>
    1358:	ldr	r2, [pc, #64]	; 13a0 <coda_get_product_version+0x8c>
    135c:	mov	r3, #1008	; 0x3f0
    1360:	bl	0 <coda_set_error>
    1364:	mvn	r0, #0
    1368:	b	1390 <coda_get_product_version+0x7c>
    136c:	ldr	r0, [r0, #24]
    1370:	cmp	r0, #0
    1374:	beq	1384 <coda_get_product_version+0x70>
    1378:	ldr	r2, [r0, #4]
    137c:	str	r2, [r1]
    1380:	b	138c <coda_get_product_version+0x78>
    1384:	mvn	r3, #0
    1388:	str	r3, [r1]
    138c:	mov	r0, #0
    1390:	ldr	lr, [sp, #4]
    1394:	add	sp, sp, #8
    1398:	bx	lr
    139c:	.word	0x0000028f
    13a0:	.word	0x000002b5
    13a4:	.word	0x00000000

000013a8 <coda_get_product_root_type>:
    13a8:	mov	ip, sp
    13ac:	sub	sp, sp, #8
    13b0:	str	ip, [sp]
    13b4:	str	lr, [sp, #4]
    13b8:	cmp	r0, #0
    13bc:	bne	13dc <coda_get_product_root_type+0x34>
    13c0:	mvn	r0, #99	; 0x63
    13c4:	ldr	r1, [pc, #124]	; 1448 <coda_get_product_root_type+0xa0>
    13c8:	ldr	r2, [pc, #124]	; 144c <coda_get_product_root_type+0xa4>
    13cc:	movw	r3, #1043	; 0x413
    13d0:	bl	0 <coda_set_error>
    13d4:	mvn	r0, #0
    13d8:	b	143c <coda_get_product_root_type+0x94>
    13dc:	cmp	r1, #0
    13e0:	bne	1400 <coda_get_product_root_type+0x58>
    13e4:	mvn	r0, #99	; 0x63
    13e8:	ldr	r1, [pc, #96]	; 1450 <coda_get_product_root_type+0xa8>
    13ec:	ldr	r2, [pc, #88]	; 144c <coda_get_product_root_type+0xa4>
    13f0:	movw	r3, #1048	; 0x418
    13f4:	bl	0 <coda_set_error>
    13f8:	mvn	r0, #0
    13fc:	b	143c <coda_get_product_root_type+0x94>
    1400:	ldr	r2, [r0, #24]
    1404:	cmp	r2, #0
    1408:	beq	1420 <coda_get_product_root_type+0x78>
    140c:	ldr	r2, [r2, #28]
    1410:	cmp	r2, #0
    1414:	beq	1420 <coda_get_product_root_type+0x78>
    1418:	str	r2, [r1]
    141c:	b	1438 <coda_get_product_root_type+0x90>
    1420:	ldr	r0, [r0, #20]
    1424:	ldr	ip, [r0]
    1428:	cmp	ip, #100	; 0x64
    142c:	blt	1434 <coda_get_product_root_type+0x8c>
    1430:	ldr	r0, [r0, #4]
    1434:	str	r0, [r1]
    1438:	mov	r0, #0
    143c:	ldr	lr, [sp, #4]
    1440:	add	sp, sp, #8
    1444:	bx	lr
    1448:	.word	0x0000028f
    144c:	.word	0x000002b5
    1450:	.word	0x00000353

00001454 <coda_get_product_definition_file>:
    1454:	mov	ip, sp
    1458:	sub	sp, sp, #8
    145c:	str	ip, [sp]
    1460:	str	lr, [sp, #4]
    1464:	cmp	r0, #0
    1468:	bne	1488 <coda_get_product_definition_file+0x34>
    146c:	mvn	r0, #99	; 0x63
    1470:	ldr	r1, [pc, #108]	; 14e4 <coda_get_product_definition_file+0x90>
    1474:	ldr	r2, [pc, #108]	; 14e8 <coda_get_product_definition_file+0x94>
    1478:	movw	r3, #1080	; 0x438
    147c:	bl	0 <coda_set_error>
    1480:	mvn	r0, #0
    1484:	b	14d8 <coda_get_product_definition_file+0x84>
    1488:	cmp	r1, #0
    148c:	bne	14ac <coda_get_product_definition_file+0x58>
    1490:	mvn	r0, #99	; 0x63
    1494:	ldr	r1, [pc, #80]	; 14ec <coda_get_product_definition_file+0x98>
    1498:	ldr	r2, [pc, #72]	; 14e8 <coda_get_product_definition_file+0x94>
    149c:	movw	r3, #1085	; 0x43d
    14a0:	bl	0 <coda_set_error>
    14a4:	mvn	r0, #0
    14a8:	b	14d8 <coda_get_product_definition_file+0x84>
    14ac:	ldr	r0, [r0, #24]
    14b0:	cmp	r0, #0
    14b4:	beq	14cc <coda_get_product_definition_file+0x78>
    14b8:	ldr	r2, [r0, #44]	; 0x2c
    14bc:	ldr	r0, [r2, #20]
    14c0:	ldr	r2, [r0, #8]
    14c4:	str	r2, [r1]
    14c8:	b	14d4 <coda_get_product_definition_file+0x80>
    14cc:	mov	ip, #0
    14d0:	str	ip, [r1]
    14d4:	mov	r0, #0
    14d8:	ldr	lr, [sp, #4]
    14dc:	add	sp, sp, #8
    14e0:	bx	lr
    14e4:	.word	0x0000028f
    14e8:	.word	0x000002b5
    14ec:	.word	0x0000025d

000014f0 <coda_get_product_variable_value>:
    14f0:	mov	ip, sp
    14f4:	sub	sp, sp, #32
    14f8:	str	ip, [sp]
    14fc:	str	lr, [sp, #4]
    1500:	str	r4, [sp, #8]
    1504:	str	r5, [sp, #12]
    1508:	str	r6, [sp, #16]
    150c:	str	r7, [sp, #20]
    1510:	mov	r4, r3
    1514:	mov	r5, r2
    1518:	mov	r6, r1
    151c:	mov	r7, r0
    1520:	cmp	r7, #0
    1524:	bne	1544 <coda_get_product_variable_value+0x54>
    1528:	mvn	r0, #99	; 0x63
    152c:	ldr	r1, [pc, #236]	; 1620 <coda_get_product_variable_value+0x130>
    1530:	ldr	r2, [pc, #240]	; 1628 <coda_get_product_variable_value+0x138>
    1534:	movw	r3, #1124	; 0x464
    1538:	bl	0 <coda_set_error>
    153c:	mvn	r0, #0
    1540:	b	1604 <coda_get_product_variable_value+0x114>
    1544:	cmp	r6, #0
    1548:	bne	1568 <coda_get_product_variable_value+0x78>
    154c:	mvn	r0, #99	; 0x63
    1550:	ldr	r1, [pc, #212]	; 162c <coda_get_product_variable_value+0x13c>
    1554:	ldr	r2, [pc, #204]	; 1628 <coda_get_product_variable_value+0x138>
    1558:	movw	r3, #1129	; 0x469
    155c:	bl	0 <coda_set_error>
    1560:	mvn	r0, #0
    1564:	b	1604 <coda_get_product_variable_value+0x114>
    1568:	add	r2, sp, #28
    156c:	mov	r1, r6
    1570:	mov	r0, r7
    1574:	bl	0 <coda_product_variable_get_size>
    1578:	cmp	r0, #0
    157c:	beq	1598 <coda_get_product_variable_value+0xa8>
    1580:	mvn	r0, #101	; 0x65
    1584:	ldr	r1, [pc, #164]	; 1630 <coda_get_product_variable_value+0x140>
    1588:	mov	r2, r6
    158c:	bl	0 <coda_set_error>
    1590:	mvn	r0, #0
    1594:	b	1604 <coda_get_product_variable_value+0x114>
    1598:	cmp	r5, #0
    159c:	blt	15ec <coda_get_product_variable_value+0xfc>
    15a0:	ldr	r1, [sp, #28]
    15a4:	cmp	r5, r1
    15a8:	bge	15ec <coda_get_product_variable_value+0xfc>
    15ac:	add	r3, sp, #24
    15b0:	mov	r2, r5
    15b4:	mov	r1, r6
    15b8:	mov	r0, r7
    15bc:	bl	0 <coda_product_variable_get_pointer>
    15c0:	cmp	r0, #0
    15c4:	beq	15d0 <coda_get_product_variable_value+0xe0>
    15c8:	mvn	r0, #0
    15cc:	b	1604 <coda_get_product_variable_value+0x114>
    15d0:	ldr	r1, [sp, #24]
    15d4:	ldr	r2, [r1]
    15d8:	ldr	r0, [r1, #4]
    15dc:	str	r2, [r4]
    15e0:	str	r0, [r4, #4]
    15e4:	mov	r0, #0
    15e8:	b	1604 <coda_get_product_variable_value+0x114>
    15ec:	mvn	r0, #100	; 0x64
    15f0:	ldr	r1, [pc, #44]	; 1624 <coda_get_product_variable_value+0x134>
    15f4:	mov	r3, r6
    15f8:	mov	r2, r5
    15fc:	bl	0 <coda_set_error>
    1600:	mvn	r0, #0
    1604:	ldr	r4, [sp, #8]
    1608:	ldr	r5, [sp, #12]
    160c:	ldr	r6, [sp, #16]
    1610:	ldr	r7, [sp, #20]
    1614:	ldr	lr, [sp, #4]
    1618:	add	sp, sp, #32
    161c:	bx	lr
    1620:	.word	0x0000028f
    1624:	.word	0x00000173
    1628:	.word	0x000002b5
    162c:	.word	0x00000203
    1630:	.word	0x00000042
