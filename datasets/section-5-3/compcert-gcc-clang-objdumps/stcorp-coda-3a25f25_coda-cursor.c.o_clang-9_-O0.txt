
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-cursor.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_dynamic_type_delete>:
       0:	push	{fp, lr}
       4:	mov	fp, sp
       8:	sub	sp, sp, #8
       c:	str	r0, [sp, #4]
      10:	ldr	r0, [sp, #4]
      14:	movw	r1, #0
      18:	cmp	r0, r1
      1c:	bne	24 <coda_dynamic_type_delete+0x24>
      20:	b	dc <coda_dynamic_type_delete+0xdc>
      24:	ldr	r0, [sp, #4]
      28:	ldr	r0, [r0]
      2c:	cmp	r0, #2
      30:	str	r0, [sp]
      34:	bcc	9c <coda_dynamic_type_delete+0x9c>
      38:	b	3c <coda_dynamic_type_delete+0x3c>
      3c:	ldr	r0, [sp]
      40:	cmp	r0, #100	; 0x64
      44:	beq	a8 <coda_dynamic_type_delete+0xa8>
      48:	b	4c <coda_dynamic_type_delete+0x4c>
      4c:	ldr	r0, [sp]
      50:	cmp	r0, #101	; 0x65
      54:	beq	b4 <coda_dynamic_type_delete+0xb4>
      58:	b	5c <coda_dynamic_type_delete+0x5c>
      5c:	ldr	r0, [sp]
      60:	cmp	r0, #102	; 0x66
      64:	beq	b8 <coda_dynamic_type_delete+0xb8>
      68:	b	6c <coda_dynamic_type_delete+0x6c>
      6c:	ldr	r0, [sp]
      70:	cmp	r0, #103	; 0x67
      74:	beq	bc <coda_dynamic_type_delete+0xbc>
      78:	b	7c <coda_dynamic_type_delete+0x7c>
      7c:	ldr	r0, [sp]
      80:	cmp	r0, #104	; 0x68
      84:	beq	c8 <coda_dynamic_type_delete+0xc8>
      88:	b	8c <coda_dynamic_type_delete+0x8c>
      8c:	ldr	r0, [sp]
      90:	cmp	r0, #105	; 0x69
      94:	beq	d4 <coda_dynamic_type_delete+0xd4>
      98:	b	dc <coda_dynamic_type_delete+0xdc>
      9c:	ldr	r0, [sp, #4]
      a0:	bl	0 <coda_type_release>
      a4:	b	dc <coda_dynamic_type_delete+0xdc>
      a8:	ldr	r0, [sp, #4]
      ac:	bl	0 <coda_mem_type_delete>
      b0:	b	dc <coda_dynamic_type_delete+0xdc>
      b4:	b	dc <coda_dynamic_type_delete+0xdc>
      b8:	b	dc <coda_dynamic_type_delete+0xdc>
      bc:	ldr	r0, [sp, #4]
      c0:	bl	0 <coda_cdf_type_delete>
      c4:	b	dc <coda_dynamic_type_delete+0xdc>
      c8:	ldr	r0, [sp, #4]
      cc:	bl	0 <coda_netcdf_type_delete>
      d0:	b	dc <coda_dynamic_type_delete+0xdc>
      d4:	ldr	r0, [sp, #4]
      d8:	bl	0 <coda_grib_type_delete>
      dc:	mov	sp, fp
      e0:	pop	{fp, pc}

000000e4 <coda_cursor_compare>:
      e4:	sub	sp, sp, #20
      e8:	str	r0, [sp, #12]
      ec:	str	r1, [sp, #8]
      f0:	movw	r0, #0
      f4:	str	r0, [sp, #4]
      f8:	ldr	r0, [sp, #4]
      fc:	ldr	r1, [sp, #12]
     100:	ldr	r1, [r1, #4]
     104:	cmp	r0, r1
     108:	movw	r0, #0
     10c:	str	r0, [sp]
     110:	bge	130 <coda_cursor_compare+0x4c>
     114:	ldr	r0, [sp, #4]
     118:	ldr	r1, [sp, #8]
     11c:	ldr	r1, [r1, #4]
     120:	cmp	r0, r1
     124:	movw	r0, #0
     128:	movlt	r0, #1
     12c:	str	r0, [sp]
     130:	ldr	r0, [sp]
     134:	tst	r0, #1
     138:	beq	1c4 <coda_cursor_compare+0xe0>
     13c:	ldr	r0, [sp, #4]
     140:	cmp	r0, #0
     144:	ble	1b4 <coda_cursor_compare+0xd0>
     148:	ldr	r0, [sp, #12]
     14c:	ldr	r1, [sp, #4]
     150:	add	r0, r0, r1, lsl #4
     154:	ldr	r0, [r0, #12]
     158:	ldr	r2, [sp, #8]
     15c:	add	r2, r2, #8
     160:	add	r1, r2, r1, lsl #4
     164:	ldr	r1, [r1, #4]
     168:	cmp	r0, r1
     16c:	ble	17c <coda_cursor_compare+0x98>
     170:	movw	r0, #1
     174:	str	r0, [sp, #16]
     178:	b	20c <coda_cursor_compare+0x128>
     17c:	ldr	r0, [sp, #12]
     180:	ldr	r1, [sp, #4]
     184:	add	r0, r0, r1, lsl #4
     188:	ldr	r0, [r0, #12]
     18c:	ldr	r2, [sp, #8]
     190:	add	r2, r2, #8
     194:	add	r1, r2, r1, lsl #4
     198:	ldr	r1, [r1, #4]
     19c:	cmp	r0, r1
     1a0:	bge	1b0 <coda_cursor_compare+0xcc>
     1a4:	mvn	r0, #0
     1a8:	str	r0, [sp, #16]
     1ac:	b	20c <coda_cursor_compare+0x128>
     1b0:	b	1b4 <coda_cursor_compare+0xd0>
     1b4:	ldr	r0, [sp, #4]
     1b8:	add	r0, r0, #1
     1bc:	str	r0, [sp, #4]
     1c0:	b	f8 <coda_cursor_compare+0x14>
     1c4:	ldr	r0, [sp, #4]
     1c8:	ldr	r1, [sp, #12]
     1cc:	ldr	r1, [r1, #4]
     1d0:	cmp	r0, r1
     1d4:	bge	1e4 <coda_cursor_compare+0x100>
     1d8:	movw	r0, #1
     1dc:	str	r0, [sp, #16]
     1e0:	b	20c <coda_cursor_compare+0x128>
     1e4:	ldr	r0, [sp, #4]
     1e8:	ldr	r1, [sp, #8]
     1ec:	ldr	r1, [r1, #4]
     1f0:	cmp	r0, r1
     1f4:	bge	204 <coda_cursor_compare+0x120>
     1f8:	mvn	r0, #0
     1fc:	str	r0, [sp, #16]
     200:	b	20c <coda_cursor_compare+0x128>
     204:	movw	r0, #0
     208:	str	r0, [sp, #16]
     20c:	ldr	r0, [sp, #16]
     210:	add	sp, sp, #20
     214:	bx	lr

00000218 <coda_cursor_print_path>:
     218:	push	{fp, lr}
     21c:	mov	fp, sp
     220:	sub	sp, sp, #64	; 0x40
     224:	str	r0, [fp, #-8]
     228:	str	r1, [fp, #-12]
     22c:	ldr	r0, [fp, #-8]
     230:	ldr	r0, [r0, #4]
     234:	cmp	r0, #1
     238:	bgt	278 <coda_cursor_print_path+0x60>
     23c:	ldr	r0, [fp, #-12]
     240:	movw	r1, #0
     244:	movt	r1, #0
     248:	str	r0, [sp, #28]
     24c:	mov	r0, r1
     250:	ldr	r1, [sp, #28]
     254:	blx	r1
     258:	cmp	r0, #0
     25c:	bge	26c <coda_cursor_print_path+0x54>
     260:	mvn	r0, #0
     264:	str	r0, [fp, #-4]
     268:	b	514 <coda_cursor_print_path+0x2fc>
     26c:	movw	r0, #0
     270:	str	r0, [fp, #-4]
     274:	b	514 <coda_cursor_print_path+0x2fc>
     278:	movw	r0, #1
     27c:	str	r0, [fp, #-16]
     280:	ldr	r0, [fp, #-16]
     284:	ldr	r1, [fp, #-8]
     288:	ldr	r1, [r1, #4]
     28c:	cmp	r0, r1
     290:	bge	50c <coda_cursor_print_path+0x2f4>
     294:	ldr	r0, [fp, #-8]
     298:	add	r0, r0, #8
     29c:	ldr	r1, [fp, #-16]
     2a0:	add	r0, r0, r1, lsl #4
     2a4:	ldr	r0, [r0, #4]
     2a8:	str	r0, [fp, #-20]	; 0xffffffec
     2ac:	ldr	r0, [fp, #-20]	; 0xffffffec
     2b0:	cmn	r0, #1
     2b4:	bne	30c <coda_cursor_print_path+0xf4>
     2b8:	ldr	r0, [fp, #-12]
     2bc:	ldr	r1, [fp, #-16]
     2c0:	cmp	r1, #1
     2c4:	movw	r1, #0
     2c8:	moveq	r1, #1
     2cc:	tst	r1, #1
     2d0:	movw	r1, #0
     2d4:	movt	r1, #0
     2d8:	movw	r2, #0
     2dc:	movt	r2, #0
     2e0:	movne	r1, r2
     2e4:	str	r0, [sp, #24]
     2e8:	mov	r0, r1
     2ec:	ldr	r1, [sp, #24]
     2f0:	blx	r1
     2f4:	cmp	r0, #0
     2f8:	bge	308 <coda_cursor_print_path+0xf0>
     2fc:	mvn	r0, #0
     300:	str	r0, [fp, #-4]
     304:	b	514 <coda_cursor_print_path+0x2fc>
     308:	b	4f8 <coda_cursor_print_path+0x2e0>
     30c:	ldr	r0, [fp, #-8]
     310:	add	r0, r0, #8
     314:	ldr	r1, [fp, #-16]
     318:	sub	r1, r1, #1
     31c:	add	r0, r0, r1, lsl #4
     320:	ldr	r0, [r0]
     324:	ldr	r0, [r0]
     328:	cmp	r0, #100	; 0x64
     32c:	bcs	350 <coda_cursor_print_path+0x138>
     330:	ldr	r0, [fp, #-8]
     334:	add	r0, r0, #8
     338:	ldr	r1, [fp, #-16]
     33c:	sub	r1, r1, #1
     340:	add	r0, r0, r1, lsl #4
     344:	ldr	r0, [r0]
     348:	str	r0, [sp, #20]
     34c:	b	370 <coda_cursor_print_path+0x158>
     350:	ldr	r0, [fp, #-8]
     354:	add	r0, r0, #8
     358:	ldr	r1, [fp, #-16]
     35c:	sub	r1, r1, #1
     360:	add	r0, r0, r1, lsl #4
     364:	ldr	r0, [r0]
     368:	ldr	r0, [r0, #4]
     36c:	str	r0, [sp, #20]
     370:	ldr	r0, [sp, #20]
     374:	str	r0, [fp, #-28]	; 0xffffffe4
     378:	ldr	r0, [fp, #-28]	; 0xffffffe4
     37c:	sub	r1, fp, #24
     380:	bl	0 <coda_type_get_class>
     384:	cmp	r0, #0
     388:	beq	398 <coda_cursor_print_path+0x180>
     38c:	mvn	r0, #0
     390:	str	r0, [fp, #-4]
     394:	b	514 <coda_cursor_print_path+0x2fc>
     398:	ldr	r0, [fp, #-24]	; 0xffffffe8
     39c:	cmp	r0, #0
     3a0:	str	r0, [sp, #16]
     3a4:	beq	418 <coda_cursor_print_path+0x200>
     3a8:	b	3ac <coda_cursor_print_path+0x194>
     3ac:	ldr	r0, [sp, #16]
     3b0:	cmp	r0, #1
     3b4:	bne	4d4 <coda_cursor_print_path+0x2bc>
     3b8:	b	3bc <coda_cursor_print_path+0x1a4>
     3bc:	ldr	r0, [fp, #-12]
     3c0:	ldr	r1, [fp, #-16]
     3c4:	cmp	r1, #1
     3c8:	movw	r1, #0
     3cc:	moveq	r1, #1
     3d0:	tst	r1, #1
     3d4:	movw	r1, #0
     3d8:	movt	r1, #0
     3dc:	movw	r2, #0
     3e0:	movt	r2, #0
     3e4:	movne	r1, r2
     3e8:	ldr	r2, [fp, #-20]	; 0xffffffec
     3ec:	str	r0, [sp, #12]
     3f0:	mov	r0, r1
     3f4:	mov	r1, r2
     3f8:	ldr	r2, [sp, #12]
     3fc:	blx	r2
     400:	cmp	r0, #0
     404:	bge	414 <coda_cursor_print_path+0x1fc>
     408:	mvn	r0, #0
     40c:	str	r0, [fp, #-4]
     410:	b	514 <coda_cursor_print_path+0x2fc>
     414:	b	4f4 <coda_cursor_print_path+0x2dc>
     418:	ldr	r0, [fp, #-28]	; 0xffffffe4
     41c:	ldr	r1, [fp, #-20]	; 0xffffffec
     420:	add	r2, sp, #32
     424:	bl	0 <coda_type_get_record_field_name>
     428:	cmp	r0, #0
     42c:	beq	43c <coda_cursor_print_path+0x224>
     430:	mvn	r0, #0
     434:	str	r0, [fp, #-4]
     438:	b	514 <coda_cursor_print_path+0x2fc>
     43c:	ldr	r0, [fp, #-16]
     440:	cmp	r0, #1
     444:	beq	468 <coda_cursor_print_path+0x250>
     448:	ldr	r0, [fp, #-8]
     44c:	add	r0, r0, #8
     450:	ldr	r1, [fp, #-16]
     454:	sub	r1, r1, #1
     458:	add	r0, r0, r1, lsl #4
     45c:	ldr	r0, [r0, #4]
     460:	cmn	r0, #1
     464:	beq	49c <coda_cursor_print_path+0x284>
     468:	ldr	r0, [fp, #-12]
     46c:	movw	r1, #0
     470:	movt	r1, #0
     474:	str	r0, [sp, #8]
     478:	mov	r0, r1
     47c:	ldr	r1, [sp, #8]
     480:	blx	r1
     484:	cmp	r0, #0
     488:	bge	498 <coda_cursor_print_path+0x280>
     48c:	mvn	r0, #0
     490:	str	r0, [fp, #-4]
     494:	b	514 <coda_cursor_print_path+0x2fc>
     498:	b	49c <coda_cursor_print_path+0x284>
     49c:	ldr	r0, [fp, #-12]
     4a0:	ldr	r1, [sp, #32]
     4a4:	movw	r2, #0
     4a8:	movt	r2, #0
     4ac:	str	r0, [sp, #4]
     4b0:	mov	r0, r2
     4b4:	ldr	r2, [sp, #4]
     4b8:	blx	r2
     4bc:	cmp	r0, #0
     4c0:	bge	4d0 <coda_cursor_print_path+0x2b8>
     4c4:	mvn	r0, #0
     4c8:	str	r0, [fp, #-4]
     4cc:	b	514 <coda_cursor_print_path+0x2fc>
     4d0:	b	4f4 <coda_cursor_print_path+0x2dc>
     4d4:	movw	r0, #0
     4d8:	movt	r0, #0
     4dc:	movw	r1, #0
     4e0:	movt	r1, #0
     4e4:	movw	r2, #305	; 0x131
     4e8:	movw	r3, #0
     4ec:	movt	r3, #0
     4f0:	bl	0 <__assert_fail>
     4f4:	b	4f8 <coda_cursor_print_path+0x2e0>
     4f8:	b	4fc <coda_cursor_print_path+0x2e4>
     4fc:	ldr	r0, [fp, #-16]
     500:	add	r0, r0, #1
     504:	str	r0, [fp, #-16]
     508:	b	280 <coda_cursor_print_path+0x68>
     50c:	movw	r0, #0
     510:	str	r0, [fp, #-4]
     514:	ldr	r0, [fp, #-4]
     518:	mov	sp, fp
     51c:	pop	{fp, pc}

00000520 <coda_cursor_set_product>:
     520:	push	{fp, lr}
     524:	mov	fp, sp
     528:	sub	sp, sp, #16
     52c:	str	r0, [sp, #8]
     530:	str	r1, [sp, #4]
     534:	ldr	r0, [sp, #8]
     538:	movw	r1, #0
     53c:	cmp	r0, r1
     540:	bne	56c <coda_cursor_set_product+0x4c>
     544:	mvn	r0, #99	; 0x63
     548:	movw	r1, #0
     54c:	movt	r1, #0
     550:	movw	r2, #0
     554:	movt	r2, #0
     558:	movw	r3, #325	; 0x145
     55c:	bl	0 <coda_set_error>
     560:	mvn	r0, #0
     564:	str	r0, [fp, #-4]
     568:	b	6cc <coda_cursor_set_product+0x1ac>
     56c:	ldr	r0, [sp, #4]
     570:	movw	r1, #0
     574:	cmp	r0, r1
     578:	bne	5a4 <coda_cursor_set_product+0x84>
     57c:	mvn	r0, #99	; 0x63
     580:	movw	r1, #0
     584:	movt	r1, #0
     588:	movw	r2, #0
     58c:	movt	r2, #0
     590:	movw	r3, #331	; 0x14b
     594:	bl	0 <coda_set_error>
     598:	mvn	r0, #0
     59c:	str	r0, [fp, #-4]
     5a0:	b	6cc <coda_cursor_set_product+0x1ac>
     5a4:	ldr	r0, [sp, #4]
     5a8:	ldr	r0, [r0, #16]
     5ac:	cmp	r0, #9
     5b0:	str	r0, [sp]
     5b4:	bhi	6ac <coda_cursor_set_product+0x18c>
     5b8:	add	r0, pc, #8
     5bc:	ldr	r1, [sp]
     5c0:	ldr	r0, [r0, r1, lsl #2]
     5c4:	mov	pc, r0
     5c8:	.word	0x000005f0
     5cc:	.word	0x000005f0
     5d0:	.word	0x00000604
     5d4:	.word	0x00000654
     5d8:	.word	0x0000066c
     5dc:	.word	0x00000618
     5e0:	.word	0x0000062c
     5e4:	.word	0x00000640
     5e8:	.word	0x00000684
     5ec:	.word	0x00000698
     5f0:	ldr	r0, [sp, #8]
     5f4:	ldr	r1, [sp, #4]
     5f8:	bl	0 <coda_ascbin_cursor_set_product>
     5fc:	str	r0, [fp, #-4]
     600:	b	6cc <coda_cursor_set_product+0x1ac>
     604:	ldr	r0, [sp, #8]
     608:	ldr	r1, [sp, #4]
     60c:	bl	0 <coda_xml_cursor_set_product>
     610:	str	r0, [fp, #-4]
     614:	b	6cc <coda_cursor_set_product+0x1ac>
     618:	ldr	r0, [sp, #8]
     61c:	ldr	r1, [sp, #4]
     620:	bl	0 <coda_cdf_cursor_set_product>
     624:	str	r0, [fp, #-4]
     628:	b	6cc <coda_cursor_set_product+0x1ac>
     62c:	ldr	r0, [sp, #8]
     630:	ldr	r1, [sp, #4]
     634:	bl	0 <coda_netcdf_cursor_set_product>
     638:	str	r0, [fp, #-4]
     63c:	b	6cc <coda_cursor_set_product+0x1ac>
     640:	ldr	r0, [sp, #8]
     644:	ldr	r1, [sp, #4]
     648:	bl	0 <coda_grib_cursor_set_product>
     64c:	str	r0, [fp, #-4]
     650:	b	6cc <coda_cursor_set_product+0x1ac>
     654:	mvn	r0, #10
     658:	movw	r1, #0
     65c:	bl	0 <coda_set_error>
     660:	mvn	r0, #0
     664:	str	r0, [fp, #-4]
     668:	b	6cc <coda_cursor_set_product+0x1ac>
     66c:	mvn	r0, #12
     670:	movw	r1, #0
     674:	bl	0 <coda_set_error>
     678:	mvn	r0, #0
     67c:	str	r0, [fp, #-4]
     680:	b	6cc <coda_cursor_set_product+0x1ac>
     684:	ldr	r0, [sp, #8]
     688:	ldr	r1, [sp, #4]
     68c:	bl	0 <coda_rinex_cursor_set_product>
     690:	str	r0, [fp, #-4]
     694:	b	6cc <coda_cursor_set_product+0x1ac>
     698:	ldr	r0, [sp, #8]
     69c:	ldr	r1, [sp, #4]
     6a0:	bl	0 <coda_sp3_cursor_set_product>
     6a4:	str	r0, [fp, #-4]
     6a8:	b	6cc <coda_cursor_set_product+0x1ac>
     6ac:	movw	r0, #0
     6b0:	movt	r0, #0
     6b4:	movw	r1, #0
     6b8:	movt	r1, #0
     6bc:	movw	r2, #368	; 0x170
     6c0:	movw	r3, #0
     6c4:	movt	r3, #0
     6c8:	bl	0 <__assert_fail>
     6cc:	ldr	r0, [fp, #-4]
     6d0:	mov	sp, fp
     6d4:	pop	{fp, pc}

000006d8 <coda_cursor_goto>:
     6d8:	push	{fp, lr}
     6dc:	mov	fp, sp
     6e0:	sub	sp, sp, #48	; 0x30
     6e4:	str	r0, [fp, #-8]
     6e8:	str	r1, [fp, #-12]
     6ec:	movw	r0, #0
     6f0:	str	r0, [fp, #-16]
     6f4:	str	r0, [sp, #24]
     6f8:	ldr	r0, [fp, #-12]
     6fc:	ldr	r1, [sp, #24]
     700:	add	r0, r0, r1
     704:	ldrb	r0, [r0]
     708:	cmp	r0, #47	; 0x2f
     70c:	bne	7ac <coda_cursor_goto+0xd4>
     710:	ldr	r0, [fp, #-8]
     714:	bl	db4 <coda_cursor_goto_root>
     718:	cmp	r0, #0
     71c:	beq	72c <coda_cursor_goto+0x54>
     720:	mvn	r0, #0
     724:	str	r0, [fp, #-4]
     728:	b	da8 <coda_cursor_goto+0x6d0>
     72c:	ldr	r0, [fp, #-12]
     730:	ldr	r1, [sp, #24]
     734:	add	r1, r1, #1
     738:	add	r0, r0, r1
     73c:	ldrb	r0, [r0]
     740:	cmp	r0, #0
     744:	beq	79c <coda_cursor_goto+0xc4>
     748:	ldr	r0, [fp, #-12]
     74c:	ldr	r1, [sp, #24]
     750:	add	r1, r1, #1
     754:	add	r0, r0, r1
     758:	ldrb	r0, [r0]
     75c:	cmp	r0, #47	; 0x2f
     760:	beq	79c <coda_cursor_goto+0xc4>
     764:	ldr	r0, [fp, #-12]
     768:	ldr	r1, [sp, #24]
     76c:	add	r1, r1, #1
     770:	add	r0, r0, r1
     774:	ldrb	r0, [r0]
     778:	cmp	r0, #91	; 0x5b
     77c:	beq	79c <coda_cursor_goto+0xc4>
     780:	ldr	r0, [fp, #-12]
     784:	ldr	r1, [sp, #24]
     788:	add	r1, r1, #1
     78c:	add	r0, r0, r1
     790:	ldrb	r0, [r0]
     794:	cmp	r0, #64	; 0x40
     798:	bne	7a8 <coda_cursor_goto+0xd0>
     79c:	ldr	r0, [sp, #24]
     7a0:	add	r0, r0, #1
     7a4:	str	r0, [sp, #24]
     7a8:	b	7ac <coda_cursor_goto+0xd4>
     7ac:	b	7b0 <coda_cursor_goto+0xd8>
     7b0:	ldr	r0, [fp, #-12]
     7b4:	ldr	r1, [sp, #24]
     7b8:	add	r0, r0, r1
     7bc:	ldrb	r0, [r0]
     7c0:	cmp	r0, #0
     7c4:	beq	da0 <coda_cursor_goto+0x6c8>
     7c8:	ldr	r0, [fp, #-12]
     7cc:	ldr	r1, [sp, #24]
     7d0:	add	r0, r0, r1
     7d4:	ldrb	r0, [r0]
     7d8:	cmp	r0, #64	; 0x40
     7dc:	bne	9e4 <coda_cursor_goto+0x30c>
     7e0:	ldr	r0, [fp, #-8]
     7e4:	bl	f34 <coda_cursor_goto_attributes>
     7e8:	cmp	r0, #0
     7ec:	beq	7fc <coda_cursor_goto+0x124>
     7f0:	mvn	r0, #0
     7f4:	str	r0, [fp, #-4]
     7f8:	b	da8 <coda_cursor_goto+0x6d0>
     7fc:	ldr	r0, [sp, #24]
     800:	add	r0, r0, #1
     804:	str	r0, [sp, #24]
     808:	ldr	r0, [sp, #24]
     80c:	str	r0, [sp, #20]
     810:	ldr	r0, [fp, #-12]
     814:	ldr	r1, [sp, #20]
     818:	add	r0, r0, r1
     81c:	ldrb	r0, [r0]
     820:	cmp	r0, #0
     824:	movw	r0, #0
     828:	str	r0, [sp, #8]
     82c:	beq	890 <coda_cursor_goto+0x1b8>
     830:	ldr	r0, [fp, #-12]
     834:	ldr	r1, [sp, #20]
     838:	add	r0, r0, r1
     83c:	ldrb	r0, [r0]
     840:	cmp	r0, #47	; 0x2f
     844:	movw	r0, #0
     848:	str	r0, [sp, #8]
     84c:	beq	890 <coda_cursor_goto+0x1b8>
     850:	ldr	r0, [fp, #-12]
     854:	ldr	r1, [sp, #20]
     858:	add	r0, r0, r1
     85c:	ldrb	r0, [r0]
     860:	cmp	r0, #91	; 0x5b
     864:	movw	r0, #0
     868:	str	r0, [sp, #8]
     86c:	beq	890 <coda_cursor_goto+0x1b8>
     870:	ldr	r0, [fp, #-12]
     874:	ldr	r1, [sp, #20]
     878:	add	r0, r0, r1
     87c:	ldrb	r0, [r0]
     880:	cmp	r0, #64	; 0x40
     884:	movw	r0, #0
     888:	movne	r0, #1
     88c:	str	r0, [sp, #8]
     890:	ldr	r0, [sp, #8]
     894:	tst	r0, #1
     898:	beq	8ac <coda_cursor_goto+0x1d4>
     89c:	ldr	r0, [sp, #20]
     8a0:	add	r0, r0, #1
     8a4:	str	r0, [sp, #20]
     8a8:	b	810 <coda_cursor_goto+0x138>
     8ac:	ldr	r0, [sp, #20]
     8b0:	ldr	r1, [sp, #24]
     8b4:	add	r1, r1, #1
     8b8:	cmp	r0, r1
     8bc:	bne	8dc <coda_cursor_goto+0x204>
     8c0:	ldr	r0, [fp, #-12]
     8c4:	ldr	r1, [sp, #24]
     8c8:	add	r0, r0, r1
     8cc:	ldrb	r0, [r0]
     8d0:	cmp	r0, #46	; 0x2e
     8d4:	bne	8dc <coda_cursor_goto+0x204>
     8d8:	b	9d8 <coda_cursor_goto+0x300>
     8dc:	ldr	r0, [sp, #20]
     8e0:	ldr	r1, [sp, #24]
     8e4:	add	r1, r1, #2
     8e8:	cmp	r0, r1
     8ec:	bne	944 <coda_cursor_goto+0x26c>
     8f0:	ldr	r0, [fp, #-12]
     8f4:	ldr	r1, [sp, #24]
     8f8:	add	r0, r0, r1
     8fc:	ldrb	r0, [r0]
     900:	cmp	r0, #46	; 0x2e
     904:	bne	944 <coda_cursor_goto+0x26c>
     908:	ldr	r0, [fp, #-12]
     90c:	ldr	r1, [sp, #24]
     910:	add	r1, r1, #1
     914:	add	r0, r0, r1
     918:	ldrb	r0, [r0]
     91c:	cmp	r0, #46	; 0x2e
     920:	bne	944 <coda_cursor_goto+0x26c>
     924:	ldr	r0, [fp, #-8]
     928:	bl	1188 <coda_cursor_goto_parent>
     92c:	cmp	r0, #0
     930:	beq	940 <coda_cursor_goto+0x268>
     934:	mvn	r0, #0
     938:	str	r0, [fp, #-4]
     93c:	b	da8 <coda_cursor_goto+0x6d0>
     940:	b	9d4 <coda_cursor_goto+0x2fc>
     944:	ldr	r0, [sp, #20]
     948:	ldr	r1, [sp, #24]
     94c:	cmp	r0, r1
     950:	ble	9d0 <coda_cursor_goto+0x2f8>
     954:	ldr	r0, [fp, #-8]
     958:	sub	r1, fp, #16
     95c:	bl	1254 <coda_cursor_get_type>
     960:	cmp	r0, #0
     964:	beq	974 <coda_cursor_goto+0x29c>
     968:	mvn	r0, #0
     96c:	str	r0, [fp, #-4]
     970:	b	da8 <coda_cursor_goto+0x6d0>
     974:	ldr	r0, [fp, #-16]
     978:	ldr	r1, [fp, #-12]
     97c:	ldr	r2, [sp, #24]
     980:	add	r1, r1, r2
     984:	ldr	r2, [sp, #20]
     988:	ldr	r3, [sp, #24]
     98c:	sub	r2, r2, r3
     990:	sub	r3, fp, #20
     994:	bl	0 <coda_type_get_record_field_index_from_name_n>
     998:	cmp	r0, #0
     99c:	beq	9ac <coda_cursor_goto+0x2d4>
     9a0:	mvn	r0, #0
     9a4:	str	r0, [fp, #-4]
     9a8:	b	da8 <coda_cursor_goto+0x6d0>
     9ac:	ldr	r0, [fp, #-8]
     9b0:	ldr	r1, [fp, #-20]	; 0xffffffec
     9b4:	bl	1390 <coda_cursor_goto_record_field_by_index>
     9b8:	cmp	r0, #0
     9bc:	beq	9cc <coda_cursor_goto+0x2f4>
     9c0:	mvn	r0, #0
     9c4:	str	r0, [fp, #-4]
     9c8:	b	da8 <coda_cursor_goto+0x6d0>
     9cc:	b	9d0 <coda_cursor_goto+0x2f8>
     9d0:	b	9d4 <coda_cursor_goto+0x2fc>
     9d4:	b	9d8 <coda_cursor_goto+0x300>
     9d8:	ldr	r0, [sp, #20]
     9dc:	str	r0, [sp, #24]
     9e0:	b	d9c <coda_cursor_goto+0x6c4>
     9e4:	ldr	r0, [fp, #-12]
     9e8:	ldr	r1, [sp, #24]
     9ec:	add	r0, r0, r1
     9f0:	ldrb	r0, [r0]
     9f4:	cmp	r0, #91	; 0x5b
     9f8:	bne	b7c <coda_cursor_goto+0x4a4>
     9fc:	ldr	r0, [sp, #24]
     a00:	add	r0, r0, #1
     a04:	str	r0, [sp, #24]
     a08:	ldr	r0, [sp, #24]
     a0c:	str	r0, [sp, #20]
     a10:	ldr	r0, [fp, #-12]
     a14:	ldr	r1, [sp, #20]
     a18:	add	r0, r0, r1
     a1c:	ldrb	r0, [r0]
     a20:	cmp	r0, #0
     a24:	movw	r0, #0
     a28:	str	r0, [sp, #4]
     a2c:	beq	a50 <coda_cursor_goto+0x378>
     a30:	ldr	r0, [fp, #-12]
     a34:	ldr	r1, [sp, #20]
     a38:	add	r0, r0, r1
     a3c:	ldrb	r0, [r0]
     a40:	cmp	r0, #93	; 0x5d
     a44:	movw	r0, #0
     a48:	movne	r0, #1
     a4c:	str	r0, [sp, #4]
     a50:	ldr	r0, [sp, #4]
     a54:	tst	r0, #1
     a58:	beq	a6c <coda_cursor_goto+0x394>
     a5c:	ldr	r0, [sp, #20]
     a60:	add	r0, r0, #1
     a64:	str	r0, [sp, #20]
     a68:	b	a10 <coda_cursor_goto+0x338>
     a6c:	ldr	r0, [fp, #-12]
     a70:	ldr	r1, [sp, #20]
     a74:	add	r0, r0, r1
     a78:	ldrb	r0, [r0]
     a7c:	cmp	r0, #0
     a80:	bne	aa4 <coda_cursor_goto+0x3cc>
     a84:	ldr	r2, [fp, #-12]
     a88:	mvn	r0, #99	; 0x63
     a8c:	movw	r1, #0
     a90:	movt	r1, #0
     a94:	bl	0 <coda_set_error>
     a98:	mvn	r0, #0
     a9c:	str	r0, [fp, #-4]
     aa0:	b	da8 <coda_cursor_goto+0x6d0>
     aa4:	ldr	r0, [sp, #24]
     aa8:	ldr	r1, [sp, #20]
     aac:	cmp	r0, r1
     ab0:	bne	ad0 <coda_cursor_goto+0x3f8>
     ab4:	mvn	r0, #99	; 0x63
     ab8:	movw	r1, #0
     abc:	movt	r1, #0
     ac0:	bl	0 <coda_set_error>
     ac4:	mvn	r0, #0
     ac8:	str	r0, [fp, #-4]
     acc:	b	da8 <coda_cursor_goto+0x6d0>
     ad0:	ldr	r0, [fp, #-12]
     ad4:	ldr	r1, [sp, #24]
     ad8:	add	r0, r0, r1
     adc:	movw	r1, #0
     ae0:	movt	r1, #0
     ae4:	sub	r2, fp, #20
     ae8:	add	r3, sp, #12
     aec:	bl	0 <__isoc99_sscanf>
     af0:	str	r0, [sp, #16]
     af4:	ldr	r0, [sp, #16]
     af8:	cmp	r0, #1
     afc:	bne	b18 <coda_cursor_goto+0x440>
     b00:	ldr	r0, [sp, #12]
     b04:	ldr	r1, [sp, #20]
     b08:	ldr	r2, [sp, #24]
     b0c:	sub	r1, r1, r2
     b10:	cmp	r0, r1
     b14:	beq	b4c <coda_cursor_goto+0x474>
     b18:	ldr	r0, [sp, #20]
     b1c:	ldr	r1, [sp, #24]
     b20:	sub	r2, r0, r1
     b24:	ldr	r0, [fp, #-12]
     b28:	ldr	r1, [sp, #24]
     b2c:	add	r3, r0, r1
     b30:	mvn	r0, #99	; 0x63
     b34:	movw	r1, #0
     b38:	movt	r1, #0
     b3c:	bl	0 <coda_set_error>
     b40:	mvn	r0, #0
     b44:	str	r0, [fp, #-4]
     b48:	b	da8 <coda_cursor_goto+0x6d0>
     b4c:	ldr	r0, [fp, #-8]
     b50:	ldr	r1, [fp, #-20]	; 0xffffffec
     b54:	bl	16fc <coda_cursor_goto_array_element_by_index>
     b58:	cmp	r0, #0
     b5c:	beq	b6c <coda_cursor_goto+0x494>
     b60:	mvn	r0, #0
     b64:	str	r0, [fp, #-4]
     b68:	b	da8 <coda_cursor_goto+0x6d0>
     b6c:	ldr	r0, [sp, #20]
     b70:	add	r0, r0, #1
     b74:	str	r0, [sp, #24]
     b78:	b	d98 <coda_cursor_goto+0x6c0>
     b7c:	ldr	r0, [fp, #-12]
     b80:	ldr	r1, [sp, #24]
     b84:	add	r0, r0, r1
     b88:	ldrb	r0, [r0]
     b8c:	cmp	r0, #47	; 0x2f
     b90:	bne	ba4 <coda_cursor_goto+0x4cc>
     b94:	ldr	r0, [sp, #24]
     b98:	add	r0, r0, #1
     b9c:	str	r0, [sp, #24]
     ba0:	b	bd4 <coda_cursor_goto+0x4fc>
     ba4:	ldr	r0, [sp, #24]
     ba8:	cmp	r0, #0
     bac:	ble	bd0 <coda_cursor_goto+0x4f8>
     bb0:	ldr	r2, [fp, #-12]
     bb4:	mvn	r0, #99	; 0x63
     bb8:	movw	r1, #0
     bbc:	movt	r1, #0
     bc0:	bl	0 <coda_set_error>
     bc4:	mvn	r0, #0
     bc8:	str	r0, [fp, #-4]
     bcc:	b	da8 <coda_cursor_goto+0x6d0>
     bd0:	b	bd4 <coda_cursor_goto+0x4fc>
     bd4:	ldr	r0, [sp, #24]
     bd8:	str	r0, [sp, #20]
     bdc:	ldr	r0, [fp, #-12]
     be0:	ldr	r1, [sp, #20]
     be4:	add	r0, r0, r1
     be8:	ldrb	r0, [r0]
     bec:	cmp	r0, #0
     bf0:	movw	r0, #0
     bf4:	str	r0, [sp]
     bf8:	beq	c5c <coda_cursor_goto+0x584>
     bfc:	ldr	r0, [fp, #-12]
     c00:	ldr	r1, [sp, #20]
     c04:	add	r0, r0, r1
     c08:	ldrb	r0, [r0]
     c0c:	cmp	r0, #47	; 0x2f
     c10:	movw	r0, #0
     c14:	str	r0, [sp]
     c18:	beq	c5c <coda_cursor_goto+0x584>
     c1c:	ldr	r0, [fp, #-12]
     c20:	ldr	r1, [sp, #20]
     c24:	add	r0, r0, r1
     c28:	ldrb	r0, [r0]
     c2c:	cmp	r0, #91	; 0x5b
     c30:	movw	r0, #0
     c34:	str	r0, [sp]
     c38:	beq	c5c <coda_cursor_goto+0x584>
     c3c:	ldr	r0, [fp, #-12]
     c40:	ldr	r1, [sp, #20]
     c44:	add	r0, r0, r1
     c48:	ldrb	r0, [r0]
     c4c:	cmp	r0, #64	; 0x40
     c50:	movw	r0, #0
     c54:	movne	r0, #1
     c58:	str	r0, [sp]
     c5c:	ldr	r0, [sp]
     c60:	tst	r0, #1
     c64:	beq	c78 <coda_cursor_goto+0x5a0>
     c68:	ldr	r0, [sp, #20]
     c6c:	add	r0, r0, #1
     c70:	str	r0, [sp, #20]
     c74:	b	bdc <coda_cursor_goto+0x504>
     c78:	ldr	r0, [sp, #20]
     c7c:	ldr	r1, [sp, #24]
     c80:	add	r1, r1, #1
     c84:	cmp	r0, r1
     c88:	bne	ca8 <coda_cursor_goto+0x5d0>
     c8c:	ldr	r0, [fp, #-12]
     c90:	ldr	r1, [sp, #24]
     c94:	add	r0, r0, r1
     c98:	ldrb	r0, [r0]
     c9c:	cmp	r0, #46	; 0x2e
     ca0:	bne	ca8 <coda_cursor_goto+0x5d0>
     ca4:	b	d90 <coda_cursor_goto+0x6b8>
     ca8:	ldr	r0, [sp, #20]
     cac:	ldr	r1, [sp, #24]
     cb0:	add	r1, r1, #2
     cb4:	cmp	r0, r1
     cb8:	bne	d10 <coda_cursor_goto+0x638>
     cbc:	ldr	r0, [fp, #-12]
     cc0:	ldr	r1, [sp, #24]
     cc4:	add	r0, r0, r1
     cc8:	ldrb	r0, [r0]
     ccc:	cmp	r0, #46	; 0x2e
     cd0:	bne	d10 <coda_cursor_goto+0x638>
     cd4:	ldr	r0, [fp, #-12]
     cd8:	ldr	r1, [sp, #24]
     cdc:	add	r1, r1, #1
     ce0:	add	r0, r0, r1
     ce4:	ldrb	r0, [r0]
     ce8:	cmp	r0, #46	; 0x2e
     cec:	bne	d10 <coda_cursor_goto+0x638>
     cf0:	ldr	r0, [fp, #-8]
     cf4:	bl	1188 <coda_cursor_goto_parent>
     cf8:	cmp	r0, #0
     cfc:	beq	d0c <coda_cursor_goto+0x634>
     d00:	mvn	r0, #0
     d04:	str	r0, [fp, #-4]
     d08:	b	da8 <coda_cursor_goto+0x6d0>
     d0c:	b	d8c <coda_cursor_goto+0x6b4>
     d10:	ldr	r0, [fp, #-8]
     d14:	sub	r1, fp, #16
     d18:	bl	1254 <coda_cursor_get_type>
     d1c:	cmp	r0, #0
     d20:	beq	d30 <coda_cursor_goto+0x658>
     d24:	mvn	r0, #0
     d28:	str	r0, [fp, #-4]
     d2c:	b	da8 <coda_cursor_goto+0x6d0>
     d30:	ldr	r0, [fp, #-16]
     d34:	ldr	r1, [fp, #-12]
     d38:	ldr	r2, [sp, #24]
     d3c:	add	r1, r1, r2
     d40:	ldr	r2, [sp, #20]
     d44:	ldr	r3, [sp, #24]
     d48:	sub	r2, r2, r3
     d4c:	sub	r3, fp, #20
     d50:	bl	0 <coda_type_get_record_field_index_from_name_n>
     d54:	cmp	r0, #0
     d58:	beq	d68 <coda_cursor_goto+0x690>
     d5c:	mvn	r0, #0
     d60:	str	r0, [fp, #-4]
     d64:	b	da8 <coda_cursor_goto+0x6d0>
     d68:	ldr	r0, [fp, #-8]
     d6c:	ldr	r1, [fp, #-20]	; 0xffffffec
     d70:	bl	1390 <coda_cursor_goto_record_field_by_index>
     d74:	cmp	r0, #0
     d78:	beq	d88 <coda_cursor_goto+0x6b0>
     d7c:	mvn	r0, #0
     d80:	str	r0, [fp, #-4]
     d84:	b	da8 <coda_cursor_goto+0x6d0>
     d88:	b	d8c <coda_cursor_goto+0x6b4>
     d8c:	b	d90 <coda_cursor_goto+0x6b8>
     d90:	ldr	r0, [sp, #20]
     d94:	str	r0, [sp, #24]
     d98:	b	d9c <coda_cursor_goto+0x6c4>
     d9c:	b	7b0 <coda_cursor_goto+0xd8>
     da0:	movw	r0, #0
     da4:	str	r0, [fp, #-4]
     da8:	ldr	r0, [fp, #-4]
     dac:	mov	sp, fp
     db0:	pop	{fp, pc}

00000db4 <coda_cursor_goto_root>:
     db4:	push	{fp, lr}
     db8:	mov	fp, sp
     dbc:	sub	sp, sp, #16
     dc0:	str	r0, [sp, #8]
     dc4:	ldr	r0, [sp, #8]
     dc8:	movw	r1, #0
     dcc:	cmp	r0, r1
     dd0:	beq	e08 <coda_cursor_goto_root+0x54>
     dd4:	ldr	r0, [sp, #8]
     dd8:	ldr	r0, [r0, #4]
     ddc:	cmp	r0, #0
     de0:	ble	e08 <coda_cursor_goto_root+0x54>
     de4:	ldr	r0, [sp, #8]
     de8:	add	r1, r0, #8
     dec:	ldr	r0, [r0, #4]
     df0:	sub	r0, r0, #1
     df4:	add	r0, r1, r0, lsl #4
     df8:	ldr	r0, [r0]
     dfc:	movw	r1, #0
     e00:	cmp	r0, r1
     e04:	bne	e30 <coda_cursor_goto_root+0x7c>
     e08:	mvn	r0, #99	; 0x63
     e0c:	movw	r1, #0
     e10:	movt	r1, #0
     e14:	movw	r2, #0
     e18:	movt	r2, #0
     e1c:	movw	r3, #1359	; 0x54f
     e20:	bl	0 <coda_set_error>
     e24:	mvn	r0, #0
     e28:	str	r0, [fp, #-4]
     e2c:	b	f24 <coda_cursor_goto_root+0x170>
     e30:	ldr	r0, [sp, #8]
     e34:	mov	r1, #1
     e38:	str	r1, [r0, #4]
     e3c:	ldr	r0, [sp, #8]
     e40:	add	r1, r0, #8
     e44:	ldr	r0, [r0, #4]
     e48:	sub	r0, r0, #1
     e4c:	add	r0, r1, r0, lsl #4
     e50:	ldr	r0, [r0]
     e54:	ldr	r0, [r0]
     e58:	cmp	r0, #100	; 0x64
     e5c:	bne	e68 <coda_cursor_goto_root+0xb4>
     e60:	ldr	r0, [sp, #8]
     e64:	bl	0 <coda_mem_cursor_update_offset>
     e68:	ldr	r0, [pc, #192]	; f30 <coda_cursor_goto_root+0x17c>
     e6c:	ldr	r0, [pc, r0]
     e70:	str	r0, [sp, #4]
     e74:	bl	0 <__aeabi_read_tp>
     e78:	ldr	r1, [sp, #4]
     e7c:	ldr	r0, [r0, r1]
     e80:	cmp	r0, #0
     e84:	beq	f1c <coda_cursor_goto_root+0x168>
     e88:	ldr	r0, [sp, #8]
     e8c:	add	r1, r0, #8
     e90:	ldr	r0, [r0, #4]
     e94:	sub	r0, r0, #1
     e98:	add	r0, r1, r0, lsl #4
     e9c:	ldr	r0, [r0]
     ea0:	ldr	r0, [r0]
     ea4:	cmp	r0, #100	; 0x64
     ea8:	bcs	ecc <coda_cursor_goto_root+0x118>
     eac:	ldr	r0, [sp, #8]
     eb0:	add	r1, r0, #8
     eb4:	ldr	r0, [r0, #4]
     eb8:	sub	r0, r0, #1
     ebc:	add	r0, r1, r0, lsl #4
     ec0:	ldr	r0, [r0]
     ec4:	str	r0, [sp]
     ec8:	b	eec <coda_cursor_goto_root+0x138>
     ecc:	ldr	r0, [sp, #8]
     ed0:	add	r1, r0, #8
     ed4:	ldr	r0, [r0, #4]
     ed8:	sub	r0, r0, #1
     edc:	add	r0, r1, r0, lsl #4
     ee0:	ldr	r0, [r0]
     ee4:	ldr	r0, [r0, #4]
     ee8:	str	r0, [sp]
     eec:	ldr	r0, [sp]
     ef0:	ldr	r0, [r0, #8]
     ef4:	cmp	r0, #6
     ef8:	bne	f1c <coda_cursor_goto_root+0x168>
     efc:	ldr	r0, [sp, #8]
     f00:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
     f04:	cmp	r0, #0
     f08:	beq	f18 <coda_cursor_goto_root+0x164>
     f0c:	mvn	r0, #0
     f10:	str	r0, [fp, #-4]
     f14:	b	f24 <coda_cursor_goto_root+0x170>
     f18:	b	f1c <coda_cursor_goto_root+0x168>
     f1c:	movw	r0, #0
     f20:	str	r0, [fp, #-4]
     f24:	ldr	r0, [fp, #-4]
     f28:	mov	sp, fp
     f2c:	pop	{fp, pc}
     f30:	.word	0x000000bc

00000f34 <coda_cursor_goto_attributes>:
     f34:	push	{fp, lr}
     f38:	mov	fp, sp
     f3c:	sub	sp, sp, #16
     f40:	str	r0, [sp, #8]
     f44:	ldr	r0, [sp, #8]
     f48:	movw	r1, #0
     f4c:	cmp	r0, r1
     f50:	beq	f88 <coda_cursor_goto_attributes+0x54>
     f54:	ldr	r0, [sp, #8]
     f58:	ldr	r0, [r0, #4]
     f5c:	cmp	r0, #0
     f60:	ble	f88 <coda_cursor_goto_attributes+0x54>
     f64:	ldr	r0, [sp, #8]
     f68:	add	r1, r0, #8
     f6c:	ldr	r0, [r0, #4]
     f70:	sub	r0, r0, #1
     f74:	add	r0, r1, r0, lsl #4
     f78:	ldr	r0, [r0]
     f7c:	movw	r1, #0
     f80:	cmp	r0, r1
     f84:	bne	fb0 <coda_cursor_goto_attributes+0x7c>
     f88:	mvn	r0, #99	; 0x63
     f8c:	movw	r1, #0
     f90:	movt	r1, #0
     f94:	movw	r2, #0
     f98:	movt	r2, #0
     f9c:	movw	r3, #1244	; 0x4dc
     fa0:	bl	0 <coda_set_error>
     fa4:	mvn	r0, #0
     fa8:	str	r0, [fp, #-4]
     fac:	b	117c <coda_cursor_goto_attributes+0x248>
     fb0:	ldr	r0, [sp, #8]
     fb4:	ldr	r0, [r0, #4]
     fb8:	cmp	r0, #32
     fbc:	bne	ff4 <coda_cursor_goto_attributes+0xc0>
     fc0:	ldr	r0, [sp, #8]
     fc4:	ldr	r2, [r0, #4]
     fc8:	mvn	r0, #99	; 0x63
     fcc:	movw	r1, #0
     fd0:	movt	r1, #0
     fd4:	movw	r3, #0
     fd8:	movt	r3, #0
     fdc:	movw	ip, #1251	; 0x4e3
     fe0:	str	ip, [sp]
     fe4:	bl	0 <coda_set_error>
     fe8:	mvn	r0, #0
     fec:	str	r0, [fp, #-4]
     ff0:	b	117c <coda_cursor_goto_attributes+0x248>
     ff4:	ldr	r0, [sp, #8]
     ff8:	ldr	r1, [r0, #4]
     ffc:	add	r0, r0, r1, lsl #4
    1000:	ldr	r0, [r0, #-8]
    1004:	ldr	r0, [r0]
    1008:	cmp	r0, #2
    100c:	str	r0, [sp, #4]
    1010:	bcc	1078 <coda_cursor_goto_attributes+0x144>
    1014:	b	1018 <coda_cursor_goto_attributes+0xe4>
    1018:	ldr	r0, [sp, #4]
    101c:	cmp	r0, #100	; 0x64
    1020:	beq	1098 <coda_cursor_goto_attributes+0x164>
    1024:	b	1028 <coda_cursor_goto_attributes+0xf4>
    1028:	ldr	r0, [sp, #4]
    102c:	cmp	r0, #101	; 0x65
    1030:	beq	10b8 <coda_cursor_goto_attributes+0x184>
    1034:	b	1038 <coda_cursor_goto_attributes+0x104>
    1038:	ldr	r0, [sp, #4]
    103c:	cmp	r0, #102	; 0x66
    1040:	beq	10d0 <coda_cursor_goto_attributes+0x19c>
    1044:	b	1048 <coda_cursor_goto_attributes+0x114>
    1048:	ldr	r0, [sp, #4]
    104c:	cmp	r0, #103	; 0x67
    1050:	beq	10e8 <coda_cursor_goto_attributes+0x1b4>
    1054:	b	1058 <coda_cursor_goto_attributes+0x124>
    1058:	ldr	r0, [sp, #4]
    105c:	cmp	r0, #104	; 0x68
    1060:	beq	1108 <coda_cursor_goto_attributes+0x1d4>
    1064:	b	1068 <coda_cursor_goto_attributes+0x134>
    1068:	ldr	r0, [sp, #4]
    106c:	cmp	r0, #105	; 0x69
    1070:	beq	1128 <coda_cursor_goto_attributes+0x1f4>
    1074:	b	1148 <coda_cursor_goto_attributes+0x214>
    1078:	ldr	r0, [sp, #8]
    107c:	bl	0 <coda_ascbin_cursor_goto_attributes>
    1080:	cmp	r0, #0
    1084:	beq	1094 <coda_cursor_goto_attributes+0x160>
    1088:	mvn	r0, #0
    108c:	str	r0, [fp, #-4]
    1090:	b	117c <coda_cursor_goto_attributes+0x248>
    1094:	b	1148 <coda_cursor_goto_attributes+0x214>
    1098:	ldr	r0, [sp, #8]
    109c:	bl	0 <coda_mem_cursor_goto_attributes>
    10a0:	cmp	r0, #0
    10a4:	beq	10b4 <coda_cursor_goto_attributes+0x180>
    10a8:	mvn	r0, #0
    10ac:	str	r0, [fp, #-4]
    10b0:	b	117c <coda_cursor_goto_attributes+0x248>
    10b4:	b	1148 <coda_cursor_goto_attributes+0x214>
    10b8:	mvn	r0, #10
    10bc:	movw	r1, #0
    10c0:	bl	0 <coda_set_error>
    10c4:	mvn	r0, #0
    10c8:	str	r0, [fp, #-4]
    10cc:	b	117c <coda_cursor_goto_attributes+0x248>
    10d0:	mvn	r0, #12
    10d4:	movw	r1, #0
    10d8:	bl	0 <coda_set_error>
    10dc:	mvn	r0, #0
    10e0:	str	r0, [fp, #-4]
    10e4:	b	117c <coda_cursor_goto_attributes+0x248>
    10e8:	ldr	r0, [sp, #8]
    10ec:	bl	0 <coda_cdf_cursor_goto_attributes>
    10f0:	cmp	r0, #0
    10f4:	beq	1104 <coda_cursor_goto_attributes+0x1d0>
    10f8:	mvn	r0, #0
    10fc:	str	r0, [fp, #-4]
    1100:	b	117c <coda_cursor_goto_attributes+0x248>
    1104:	b	1148 <coda_cursor_goto_attributes+0x214>
    1108:	ldr	r0, [sp, #8]
    110c:	bl	0 <coda_netcdf_cursor_goto_attributes>
    1110:	cmp	r0, #0
    1114:	beq	1124 <coda_cursor_goto_attributes+0x1f0>
    1118:	mvn	r0, #0
    111c:	str	r0, [fp, #-4]
    1120:	b	117c <coda_cursor_goto_attributes+0x248>
    1124:	b	1148 <coda_cursor_goto_attributes+0x214>
    1128:	ldr	r0, [sp, #8]
    112c:	bl	0 <coda_grib_cursor_goto_attributes>
    1130:	cmp	r0, #0
    1134:	beq	1144 <coda_cursor_goto_attributes+0x210>
    1138:	mvn	r0, #0
    113c:	str	r0, [fp, #-4]
    1140:	b	117c <coda_cursor_goto_attributes+0x248>
    1144:	b	1148 <coda_cursor_goto_attributes+0x214>
    1148:	ldr	r0, [sp, #8]
    114c:	add	r1, r0, #8
    1150:	ldr	r0, [r0, #4]
    1154:	sub	r0, r0, #1
    1158:	add	r0, r1, r0, lsl #4
    115c:	ldr	r0, [r0]
    1160:	ldr	r0, [r0]
    1164:	cmp	r0, #100	; 0x64
    1168:	bne	1174 <coda_cursor_goto_attributes+0x240>
    116c:	ldr	r0, [sp, #8]
    1170:	bl	0 <coda_mem_cursor_update_offset>
    1174:	movw	r0, #0
    1178:	str	r0, [fp, #-4]
    117c:	ldr	r0, [fp, #-4]
    1180:	mov	sp, fp
    1184:	pop	{fp, pc}

00001188 <coda_cursor_goto_parent>:
    1188:	push	{fp, lr}
    118c:	mov	fp, sp
    1190:	sub	sp, sp, #8
    1194:	str	r0, [sp]
    1198:	ldr	r0, [sp]
    119c:	movw	r1, #0
    11a0:	cmp	r0, r1
    11a4:	beq	11dc <coda_cursor_goto_parent+0x54>
    11a8:	ldr	r0, [sp]
    11ac:	ldr	r0, [r0, #4]
    11b0:	cmp	r0, #0
    11b4:	ble	11dc <coda_cursor_goto_parent+0x54>
    11b8:	ldr	r0, [sp]
    11bc:	add	r1, r0, #8
    11c0:	ldr	r0, [r0, #4]
    11c4:	sub	r0, r0, #1
    11c8:	add	r0, r1, r0, lsl #4
    11cc:	ldr	r0, [r0]
    11d0:	movw	r1, #0
    11d4:	cmp	r0, r1
    11d8:	bne	1204 <coda_cursor_goto_parent+0x7c>
    11dc:	mvn	r0, #99	; 0x63
    11e0:	movw	r1, #0
    11e4:	movt	r1, #0
    11e8:	movw	r2, #0
    11ec:	movt	r2, #0
    11f0:	movw	r3, #1333	; 0x535
    11f4:	bl	0 <coda_set_error>
    11f8:	mvn	r0, #0
    11fc:	str	r0, [sp, #4]
    1200:	b	1248 <coda_cursor_goto_parent+0xc0>
    1204:	ldr	r0, [sp]
    1208:	ldr	r0, [r0, #4]
    120c:	cmp	r0, #1
    1210:	bgt	122c <coda_cursor_goto_parent+0xa4>
    1214:	mvn	r0, #107	; 0x6b
    1218:	movw	r1, #0
    121c:	bl	0 <coda_set_error>
    1220:	mvn	r0, #0
    1224:	str	r0, [sp, #4]
    1228:	b	1248 <coda_cursor_goto_parent+0xc0>
    122c:	ldr	r0, [sp]
    1230:	ldr	r1, [r0, #4]
    1234:	mvn	r2, #0
    1238:	add	r1, r1, r2
    123c:	str	r1, [r0, #4]
    1240:	movw	r0, #0
    1244:	str	r0, [sp, #4]
    1248:	ldr	r0, [sp, #4]
    124c:	mov	sp, fp
    1250:	pop	{fp, pc}

00001254 <coda_cursor_get_type>:
    1254:	push	{fp, lr}
    1258:	mov	fp, sp
    125c:	sub	sp, sp, #16
    1260:	str	r0, [sp, #8]
    1264:	str	r1, [sp, #4]
    1268:	ldr	r0, [sp, #8]
    126c:	movw	r1, #0
    1270:	cmp	r0, r1
    1274:	beq	12ac <coda_cursor_get_type+0x58>
    1278:	ldr	r0, [sp, #8]
    127c:	ldr	r0, [r0, #4]
    1280:	cmp	r0, #0
    1284:	ble	12ac <coda_cursor_get_type+0x58>
    1288:	ldr	r0, [sp, #8]
    128c:	add	r1, r0, #8
    1290:	ldr	r0, [r0, #4]
    1294:	sub	r0, r0, #1
    1298:	add	r0, r1, r0, lsl #4
    129c:	ldr	r0, [r0]
    12a0:	movw	r1, #0
    12a4:	cmp	r0, r1
    12a8:	bne	12d4 <coda_cursor_get_type+0x80>
    12ac:	mvn	r0, #99	; 0x63
    12b0:	movw	r1, #0
    12b4:	movt	r1, #0
    12b8:	movw	r2, #0
    12bc:	movt	r2, #0
    12c0:	movw	r3, #2028	; 0x7ec
    12c4:	bl	0 <coda_set_error>
    12c8:	mvn	r0, #0
    12cc:	str	r0, [fp, #-4]
    12d0:	b	1384 <coda_cursor_get_type+0x130>
    12d4:	ldr	r0, [sp, #4]
    12d8:	movw	r1, #0
    12dc:	cmp	r0, r1
    12e0:	bne	130c <coda_cursor_get_type+0xb8>
    12e4:	mvn	r0, #99	; 0x63
    12e8:	movw	r1, #0
    12ec:	movt	r1, #0
    12f0:	movw	r2, #0
    12f4:	movt	r2, #0
    12f8:	movw	r3, #2033	; 0x7f1
    12fc:	bl	0 <coda_set_error>
    1300:	mvn	r0, #0
    1304:	str	r0, [fp, #-4]
    1308:	b	1384 <coda_cursor_get_type+0x130>
    130c:	ldr	r0, [sp, #8]
    1310:	add	r1, r0, #8
    1314:	ldr	r0, [r0, #4]
    1318:	sub	r0, r0, #1
    131c:	add	r0, r1, r0, lsl #4
    1320:	ldr	r0, [r0]
    1324:	ldr	r0, [r0]
    1328:	cmp	r0, #100	; 0x64
    132c:	bcs	1350 <coda_cursor_get_type+0xfc>
    1330:	ldr	r0, [sp, #8]
    1334:	add	r1, r0, #8
    1338:	ldr	r0, [r0, #4]
    133c:	sub	r0, r0, #1
    1340:	add	r0, r1, r0, lsl #4
    1344:	ldr	r0, [r0]
    1348:	str	r0, [sp]
    134c:	b	1370 <coda_cursor_get_type+0x11c>
    1350:	ldr	r0, [sp, #8]
    1354:	add	r1, r0, #8
    1358:	ldr	r0, [r0, #4]
    135c:	sub	r0, r0, #1
    1360:	add	r0, r1, r0, lsl #4
    1364:	ldr	r0, [r0]
    1368:	ldr	r0, [r0, #4]
    136c:	str	r0, [sp]
    1370:	ldr	r0, [sp]
    1374:	ldr	r1, [sp, #4]
    1378:	str	r0, [r1]
    137c:	movw	r0, #0
    1380:	str	r0, [fp, #-4]
    1384:	ldr	r0, [fp, #-4]
    1388:	mov	sp, fp
    138c:	pop	{fp, pc}

00001390 <coda_cursor_goto_record_field_by_index>:
    1390:	push	{fp, lr}
    1394:	mov	fp, sp
    1398:	sub	sp, sp, #40	; 0x28
    139c:	str	r0, [fp, #-8]
    13a0:	str	r1, [fp, #-12]
    13a4:	ldr	r0, [fp, #-8]
    13a8:	movw	r1, #0
    13ac:	cmp	r0, r1
    13b0:	beq	13e8 <coda_cursor_goto_record_field_by_index+0x58>
    13b4:	ldr	r0, [fp, #-8]
    13b8:	ldr	r0, [r0, #4]
    13bc:	cmp	r0, #0
    13c0:	ble	13e8 <coda_cursor_goto_record_field_by_index+0x58>
    13c4:	ldr	r0, [fp, #-8]
    13c8:	add	r1, r0, #8
    13cc:	ldr	r0, [r0, #4]
    13d0:	sub	r0, r0, #1
    13d4:	add	r0, r1, r0, lsl #4
    13d8:	ldr	r0, [r0]
    13dc:	movw	r1, #0
    13e0:	cmp	r0, r1
    13e4:	bne	1410 <coda_cursor_goto_record_field_by_index+0x80>
    13e8:	mvn	r0, #99	; 0x63
    13ec:	movw	r1, #0
    13f0:	movt	r1, #0
    13f4:	movw	r2, #0
    13f8:	movt	r2, #0
    13fc:	movw	r3, #569	; 0x239
    1400:	bl	0 <coda_set_error>
    1404:	mvn	r0, #0
    1408:	str	r0, [fp, #-4]
    140c:	b	16ec <coda_cursor_goto_record_field_by_index+0x35c>
    1410:	ldr	r0, [fp, #-8]
    1414:	add	r1, r0, #8
    1418:	ldr	r0, [r0, #4]
    141c:	sub	r0, r0, #1
    1420:	add	r0, r1, r0, lsl #4
    1424:	ldr	r0, [r0]
    1428:	ldr	r0, [r0]
    142c:	cmp	r0, #100	; 0x64
    1430:	bcs	1454 <coda_cursor_goto_record_field_by_index+0xc4>
    1434:	ldr	r0, [fp, #-8]
    1438:	add	r1, r0, #8
    143c:	ldr	r0, [r0, #4]
    1440:	sub	r0, r0, #1
    1444:	add	r0, r1, r0, lsl #4
    1448:	ldr	r0, [r0]
    144c:	str	r0, [sp, #20]
    1450:	b	1474 <coda_cursor_goto_record_field_by_index+0xe4>
    1454:	ldr	r0, [fp, #-8]
    1458:	add	r1, r0, #8
    145c:	ldr	r0, [r0, #4]
    1460:	sub	r0, r0, #1
    1464:	add	r0, r1, r0, lsl #4
    1468:	ldr	r0, [r0]
    146c:	ldr	r0, [r0, #4]
    1470:	str	r0, [sp, #20]
    1474:	ldr	r0, [sp, #20]
    1478:	str	r0, [fp, #-16]
    147c:	ldr	r0, [fp, #-16]
    1480:	ldr	r0, [r0, #8]
    1484:	cmp	r0, #0
    1488:	beq	14c0 <coda_cursor_goto_record_field_by_index+0x130>
    148c:	ldr	r0, [fp, #-16]
    1490:	ldr	r0, [r0, #8]
    1494:	bl	0 <coda_type_get_class_name>
    1498:	mvn	r1, #104	; 0x68
    149c:	str	r0, [sp, #16]
    14a0:	mov	r0, r1
    14a4:	movw	r1, #0
    14a8:	movt	r1, #0
    14ac:	ldr	r2, [sp, #16]
    14b0:	bl	0 <coda_set_error>
    14b4:	mvn	r0, #0
    14b8:	str	r0, [fp, #-4]
    14bc:	b	16ec <coda_cursor_goto_record_field_by_index+0x35c>
    14c0:	ldr	r0, [fp, #-8]
    14c4:	ldr	r0, [r0, #4]
    14c8:	cmp	r0, #32
    14cc:	bne	1504 <coda_cursor_goto_record_field_by_index+0x174>
    14d0:	ldr	r0, [fp, #-8]
    14d4:	ldr	r2, [r0, #4]
    14d8:	mvn	r0, #99	; 0x63
    14dc:	movw	r1, #0
    14e0:	movt	r1, #0
    14e4:	movw	r3, #0
    14e8:	movt	r3, #0
    14ec:	movw	ip, #584	; 0x248
    14f0:	str	ip, [sp]
    14f4:	bl	0 <coda_set_error>
    14f8:	mvn	r0, #0
    14fc:	str	r0, [fp, #-4]
    1500:	b	16ec <coda_cursor_goto_record_field_by_index+0x35c>
    1504:	ldr	r0, [fp, #-8]
    1508:	ldr	r1, [r0, #4]
    150c:	add	r0, r0, r1, lsl #4
    1510:	ldr	r0, [r0, #-8]
    1514:	ldr	r0, [r0]
    1518:	cmp	r0, #2
    151c:	str	r0, [sp, #12]
    1520:	bcc	156c <coda_cursor_goto_record_field_by_index+0x1dc>
    1524:	b	1528 <coda_cursor_goto_record_field_by_index+0x198>
    1528:	ldr	r0, [sp, #12]
    152c:	cmp	r0, #100	; 0x64
    1530:	beq	1590 <coda_cursor_goto_record_field_by_index+0x200>
    1534:	b	1538 <coda_cursor_goto_record_field_by_index+0x1a8>
    1538:	ldr	r0, [sp, #12]
    153c:	cmp	r0, #101	; 0x65
    1540:	beq	15b4 <coda_cursor_goto_record_field_by_index+0x224>
    1544:	b	1548 <coda_cursor_goto_record_field_by_index+0x1b8>
    1548:	ldr	r0, [sp, #12]
    154c:	cmp	r0, #102	; 0x66
    1550:	beq	15cc <coda_cursor_goto_record_field_by_index+0x23c>
    1554:	b	1558 <coda_cursor_goto_record_field_by_index+0x1c8>
    1558:	ldr	r0, [sp, #12]
    155c:	sub	r1, r0, #103	; 0x67
    1560:	cmp	r1, #3
    1564:	bcc	15e4 <coda_cursor_goto_record_field_by_index+0x254>
    1568:	b	1604 <coda_cursor_goto_record_field_by_index+0x274>
    156c:	ldr	r0, [fp, #-8]
    1570:	ldr	r1, [fp, #-12]
    1574:	bl	0 <coda_ascbin_cursor_goto_record_field_by_index>
    1578:	cmp	r0, #0
    157c:	beq	158c <coda_cursor_goto_record_field_by_index+0x1fc>
    1580:	mvn	r0, #0
    1584:	str	r0, [fp, #-4]
    1588:	b	16ec <coda_cursor_goto_record_field_by_index+0x35c>
    158c:	b	1604 <coda_cursor_goto_record_field_by_index+0x274>
    1590:	ldr	r0, [fp, #-8]
    1594:	ldr	r1, [fp, #-12]
    1598:	bl	0 <coda_mem_cursor_goto_record_field_by_index>
    159c:	cmp	r0, #0
    15a0:	beq	15b0 <coda_cursor_goto_record_field_by_index+0x220>
    15a4:	mvn	r0, #0
    15a8:	str	r0, [fp, #-4]
    15ac:	b	16ec <coda_cursor_goto_record_field_by_index+0x35c>
    15b0:	b	1604 <coda_cursor_goto_record_field_by_index+0x274>
    15b4:	mvn	r0, #10
    15b8:	movw	r1, #0
    15bc:	bl	0 <coda_set_error>
    15c0:	mvn	r0, #0
    15c4:	str	r0, [fp, #-4]
    15c8:	b	16ec <coda_cursor_goto_record_field_by_index+0x35c>
    15cc:	mvn	r0, #12
    15d0:	movw	r1, #0
    15d4:	bl	0 <coda_set_error>
    15d8:	mvn	r0, #0
    15dc:	str	r0, [fp, #-4]
    15e0:	b	16ec <coda_cursor_goto_record_field_by_index+0x35c>
    15e4:	movw	r0, #0
    15e8:	movt	r0, #0
    15ec:	movw	r1, #0
    15f0:	movt	r1, #0
    15f4:	movw	r2, #628	; 0x274
    15f8:	movw	r3, #0
    15fc:	movt	r3, #0
    1600:	bl	0 <__assert_fail>
    1604:	ldr	r0, [fp, #-8]
    1608:	add	r1, r0, #8
    160c:	ldr	r0, [r0, #4]
    1610:	sub	r0, r0, #1
    1614:	add	r0, r1, r0, lsl #4
    1618:	ldr	r0, [r0]
    161c:	ldr	r0, [r0]
    1620:	cmp	r0, #100	; 0x64
    1624:	bne	1630 <coda_cursor_goto_record_field_by_index+0x2a0>
    1628:	ldr	r0, [fp, #-8]
    162c:	bl	0 <coda_mem_cursor_update_offset>
    1630:	ldr	r0, [pc, #192]	; 16f8 <coda_cursor_goto_record_field_by_index+0x368>
    1634:	ldr	r0, [pc, r0]
    1638:	str	r0, [sp, #8]
    163c:	bl	0 <__aeabi_read_tp>
    1640:	ldr	r1, [sp, #8]
    1644:	ldr	r0, [r0, r1]
    1648:	cmp	r0, #0
    164c:	beq	16e4 <coda_cursor_goto_record_field_by_index+0x354>
    1650:	ldr	r0, [fp, #-8]
    1654:	add	r1, r0, #8
    1658:	ldr	r0, [r0, #4]
    165c:	sub	r0, r0, #1
    1660:	add	r0, r1, r0, lsl #4
    1664:	ldr	r0, [r0]
    1668:	ldr	r0, [r0]
    166c:	cmp	r0, #100	; 0x64
    1670:	bcs	1694 <coda_cursor_goto_record_field_by_index+0x304>
    1674:	ldr	r0, [fp, #-8]
    1678:	add	r1, r0, #8
    167c:	ldr	r0, [r0, #4]
    1680:	sub	r0, r0, #1
    1684:	add	r0, r1, r0, lsl #4
    1688:	ldr	r0, [r0]
    168c:	str	r0, [sp, #4]
    1690:	b	16b4 <coda_cursor_goto_record_field_by_index+0x324>
    1694:	ldr	r0, [fp, #-8]
    1698:	add	r1, r0, #8
    169c:	ldr	r0, [r0, #4]
    16a0:	sub	r0, r0, #1
    16a4:	add	r0, r1, r0, lsl #4
    16a8:	ldr	r0, [r0]
    16ac:	ldr	r0, [r0, #4]
    16b0:	str	r0, [sp, #4]
    16b4:	ldr	r0, [sp, #4]
    16b8:	ldr	r0, [r0, #8]
    16bc:	cmp	r0, #6
    16c0:	bne	16e4 <coda_cursor_goto_record_field_by_index+0x354>
    16c4:	ldr	r0, [fp, #-8]
    16c8:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
    16cc:	cmp	r0, #0
    16d0:	beq	16e0 <coda_cursor_goto_record_field_by_index+0x350>
    16d4:	mvn	r0, #0
    16d8:	str	r0, [fp, #-4]
    16dc:	b	16ec <coda_cursor_goto_record_field_by_index+0x35c>
    16e0:	b	16e4 <coda_cursor_goto_record_field_by_index+0x354>
    16e4:	movw	r0, #0
    16e8:	str	r0, [fp, #-4]
    16ec:	ldr	r0, [fp, #-4]
    16f0:	mov	sp, fp
    16f4:	pop	{fp, pc}
    16f8:	.word	0x000000bc

000016fc <coda_cursor_goto_array_element_by_index>:
    16fc:	push	{fp, lr}
    1700:	mov	fp, sp
    1704:	sub	sp, sp, #40	; 0x28
    1708:	str	r0, [fp, #-8]
    170c:	str	r1, [fp, #-12]
    1710:	ldr	r0, [fp, #-8]
    1714:	movw	r1, #0
    1718:	cmp	r0, r1
    171c:	beq	1754 <coda_cursor_goto_array_element_by_index+0x58>
    1720:	ldr	r0, [fp, #-8]
    1724:	ldr	r0, [r0, #4]
    1728:	cmp	r0, #0
    172c:	ble	1754 <coda_cursor_goto_array_element_by_index+0x58>
    1730:	ldr	r0, [fp, #-8]
    1734:	add	r1, r0, #8
    1738:	ldr	r0, [r0, #4]
    173c:	sub	r0, r0, #1
    1740:	add	r0, r1, r0, lsl #4
    1744:	ldr	r0, [r0]
    1748:	movw	r1, #0
    174c:	cmp	r0, r1
    1750:	bne	177c <coda_cursor_goto_array_element_by_index+0x80>
    1754:	mvn	r0, #99	; 0x63
    1758:	movw	r1, #0
    175c:	movt	r1, #0
    1760:	movw	r2, #0
    1764:	movt	r2, #0
    1768:	movw	r3, #1008	; 0x3f0
    176c:	bl	0 <coda_set_error>
    1770:	mvn	r0, #0
    1774:	str	r0, [fp, #-4]
    1778:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    177c:	ldr	r0, [fp, #-8]
    1780:	add	r1, r0, #8
    1784:	ldr	r0, [r0, #4]
    1788:	sub	r0, r0, #1
    178c:	add	r0, r1, r0, lsl #4
    1790:	ldr	r0, [r0]
    1794:	ldr	r0, [r0]
    1798:	cmp	r0, #100	; 0x64
    179c:	bcs	17c0 <coda_cursor_goto_array_element_by_index+0xc4>
    17a0:	ldr	r0, [fp, #-8]
    17a4:	add	r1, r0, #8
    17a8:	ldr	r0, [r0, #4]
    17ac:	sub	r0, r0, #1
    17b0:	add	r0, r1, r0, lsl #4
    17b4:	ldr	r0, [r0]
    17b8:	str	r0, [sp, #20]
    17bc:	b	17e0 <coda_cursor_goto_array_element_by_index+0xe4>
    17c0:	ldr	r0, [fp, #-8]
    17c4:	add	r1, r0, #8
    17c8:	ldr	r0, [r0, #4]
    17cc:	sub	r0, r0, #1
    17d0:	add	r0, r1, r0, lsl #4
    17d4:	ldr	r0, [r0]
    17d8:	ldr	r0, [r0, #4]
    17dc:	str	r0, [sp, #20]
    17e0:	ldr	r0, [sp, #20]
    17e4:	str	r0, [fp, #-16]
    17e8:	ldr	r0, [fp, #-16]
    17ec:	ldr	r0, [r0, #8]
    17f0:	cmp	r0, #1
    17f4:	beq	182c <coda_cursor_goto_array_element_by_index+0x130>
    17f8:	ldr	r0, [fp, #-16]
    17fc:	ldr	r0, [r0, #8]
    1800:	bl	0 <coda_type_get_class_name>
    1804:	mvn	r1, #104	; 0x68
    1808:	str	r0, [sp, #16]
    180c:	mov	r0, r1
    1810:	movw	r1, #0
    1814:	movt	r1, #0
    1818:	ldr	r2, [sp, #16]
    181c:	bl	0 <coda_set_error>
    1820:	mvn	r0, #0
    1824:	str	r0, [fp, #-4]
    1828:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    182c:	ldr	r0, [fp, #-8]
    1830:	ldr	r0, [r0, #4]
    1834:	cmp	r0, #32
    1838:	bne	1870 <coda_cursor_goto_array_element_by_index+0x174>
    183c:	ldr	r0, [fp, #-8]
    1840:	ldr	r2, [r0, #4]
    1844:	mvn	r0, #99	; 0x63
    1848:	movw	r1, #0
    184c:	movt	r1, #0
    1850:	movw	r3, #0
    1854:	movt	r3, #0
    1858:	movw	ip, #1023	; 0x3ff
    185c:	str	ip, [sp]
    1860:	bl	0 <coda_set_error>
    1864:	mvn	r0, #0
    1868:	str	r0, [fp, #-4]
    186c:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    1870:	ldr	r0, [fp, #-8]
    1874:	ldr	r1, [r0, #4]
    1878:	add	r0, r0, r1, lsl #4
    187c:	ldr	r0, [r0, #-8]
    1880:	ldr	r0, [r0]
    1884:	cmp	r0, #2
    1888:	str	r0, [sp, #12]
    188c:	bcc	18f4 <coda_cursor_goto_array_element_by_index+0x1f8>
    1890:	b	1894 <coda_cursor_goto_array_element_by_index+0x198>
    1894:	ldr	r0, [sp, #12]
    1898:	cmp	r0, #100	; 0x64
    189c:	beq	1918 <coda_cursor_goto_array_element_by_index+0x21c>
    18a0:	b	18a4 <coda_cursor_goto_array_element_by_index+0x1a8>
    18a4:	ldr	r0, [sp, #12]
    18a8:	cmp	r0, #101	; 0x65
    18ac:	beq	193c <coda_cursor_goto_array_element_by_index+0x240>
    18b0:	b	18b4 <coda_cursor_goto_array_element_by_index+0x1b8>
    18b4:	ldr	r0, [sp, #12]
    18b8:	cmp	r0, #102	; 0x66
    18bc:	beq	1954 <coda_cursor_goto_array_element_by_index+0x258>
    18c0:	b	18c4 <coda_cursor_goto_array_element_by_index+0x1c8>
    18c4:	ldr	r0, [sp, #12]
    18c8:	cmp	r0, #103	; 0x67
    18cc:	beq	196c <coda_cursor_goto_array_element_by_index+0x270>
    18d0:	b	18d4 <coda_cursor_goto_array_element_by_index+0x1d8>
    18d4:	ldr	r0, [sp, #12]
    18d8:	cmp	r0, #104	; 0x68
    18dc:	beq	1990 <coda_cursor_goto_array_element_by_index+0x294>
    18e0:	b	18e4 <coda_cursor_goto_array_element_by_index+0x1e8>
    18e4:	ldr	r0, [sp, #12]
    18e8:	cmp	r0, #105	; 0x69
    18ec:	beq	19b4 <coda_cursor_goto_array_element_by_index+0x2b8>
    18f0:	b	19d8 <coda_cursor_goto_array_element_by_index+0x2dc>
    18f4:	ldr	r0, [fp, #-8]
    18f8:	ldr	r1, [fp, #-12]
    18fc:	bl	0 <coda_ascbin_cursor_goto_array_element_by_index>
    1900:	cmp	r0, #0
    1904:	beq	1914 <coda_cursor_goto_array_element_by_index+0x218>
    1908:	mvn	r0, #0
    190c:	str	r0, [fp, #-4]
    1910:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    1914:	b	19d8 <coda_cursor_goto_array_element_by_index+0x2dc>
    1918:	ldr	r0, [fp, #-8]
    191c:	ldr	r1, [fp, #-12]
    1920:	bl	0 <coda_mem_cursor_goto_array_element_by_index>
    1924:	cmp	r0, #0
    1928:	beq	1938 <coda_cursor_goto_array_element_by_index+0x23c>
    192c:	mvn	r0, #0
    1930:	str	r0, [fp, #-4]
    1934:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    1938:	b	19d8 <coda_cursor_goto_array_element_by_index+0x2dc>
    193c:	mvn	r0, #10
    1940:	movw	r1, #0
    1944:	bl	0 <coda_set_error>
    1948:	mvn	r0, #0
    194c:	str	r0, [fp, #-4]
    1950:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    1954:	mvn	r0, #12
    1958:	movw	r1, #0
    195c:	bl	0 <coda_set_error>
    1960:	mvn	r0, #0
    1964:	str	r0, [fp, #-4]
    1968:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    196c:	ldr	r0, [fp, #-8]
    1970:	ldr	r1, [fp, #-12]
    1974:	bl	0 <coda_cdf_cursor_goto_array_element_by_index>
    1978:	cmp	r0, #0
    197c:	beq	198c <coda_cursor_goto_array_element_by_index+0x290>
    1980:	mvn	r0, #0
    1984:	str	r0, [fp, #-4]
    1988:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    198c:	b	19d8 <coda_cursor_goto_array_element_by_index+0x2dc>
    1990:	ldr	r0, [fp, #-8]
    1994:	ldr	r1, [fp, #-12]
    1998:	bl	0 <coda_netcdf_cursor_goto_array_element_by_index>
    199c:	cmp	r0, #0
    19a0:	beq	19b0 <coda_cursor_goto_array_element_by_index+0x2b4>
    19a4:	mvn	r0, #0
    19a8:	str	r0, [fp, #-4]
    19ac:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    19b0:	b	19d8 <coda_cursor_goto_array_element_by_index+0x2dc>
    19b4:	ldr	r0, [fp, #-8]
    19b8:	ldr	r1, [fp, #-12]
    19bc:	bl	0 <coda_grib_cursor_goto_array_element_by_index>
    19c0:	cmp	r0, #0
    19c4:	beq	19d4 <coda_cursor_goto_array_element_by_index+0x2d8>
    19c8:	mvn	r0, #0
    19cc:	str	r0, [fp, #-4]
    19d0:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    19d4:	b	19d8 <coda_cursor_goto_array_element_by_index+0x2dc>
    19d8:	ldr	r0, [fp, #-8]
    19dc:	add	r1, r0, #8
    19e0:	ldr	r0, [r0, #4]
    19e4:	sub	r0, r0, #1
    19e8:	add	r0, r1, r0, lsl #4
    19ec:	ldr	r0, [r0]
    19f0:	ldr	r0, [r0]
    19f4:	cmp	r0, #100	; 0x64
    19f8:	bne	1a04 <coda_cursor_goto_array_element_by_index+0x308>
    19fc:	ldr	r0, [fp, #-8]
    1a00:	bl	0 <coda_mem_cursor_update_offset>
    1a04:	ldr	r0, [pc, #192]	; 1acc <coda_cursor_goto_array_element_by_index+0x3d0>
    1a08:	ldr	r0, [pc, r0]
    1a0c:	str	r0, [sp, #8]
    1a10:	bl	0 <__aeabi_read_tp>
    1a14:	ldr	r1, [sp, #8]
    1a18:	ldr	r0, [r0, r1]
    1a1c:	cmp	r0, #0
    1a20:	beq	1ab8 <coda_cursor_goto_array_element_by_index+0x3bc>
    1a24:	ldr	r0, [fp, #-8]
    1a28:	add	r1, r0, #8
    1a2c:	ldr	r0, [r0, #4]
    1a30:	sub	r0, r0, #1
    1a34:	add	r0, r1, r0, lsl #4
    1a38:	ldr	r0, [r0]
    1a3c:	ldr	r0, [r0]
    1a40:	cmp	r0, #100	; 0x64
    1a44:	bcs	1a68 <coda_cursor_goto_array_element_by_index+0x36c>
    1a48:	ldr	r0, [fp, #-8]
    1a4c:	add	r1, r0, #8
    1a50:	ldr	r0, [r0, #4]
    1a54:	sub	r0, r0, #1
    1a58:	add	r0, r1, r0, lsl #4
    1a5c:	ldr	r0, [r0]
    1a60:	str	r0, [sp, #4]
    1a64:	b	1a88 <coda_cursor_goto_array_element_by_index+0x38c>
    1a68:	ldr	r0, [fp, #-8]
    1a6c:	add	r1, r0, #8
    1a70:	ldr	r0, [r0, #4]
    1a74:	sub	r0, r0, #1
    1a78:	add	r0, r1, r0, lsl #4
    1a7c:	ldr	r0, [r0]
    1a80:	ldr	r0, [r0, #4]
    1a84:	str	r0, [sp, #4]
    1a88:	ldr	r0, [sp, #4]
    1a8c:	ldr	r0, [r0, #8]
    1a90:	cmp	r0, #6
    1a94:	bne	1ab8 <coda_cursor_goto_array_element_by_index+0x3bc>
    1a98:	ldr	r0, [fp, #-8]
    1a9c:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
    1aa0:	cmp	r0, #0
    1aa4:	beq	1ab4 <coda_cursor_goto_array_element_by_index+0x3b8>
    1aa8:	mvn	r0, #0
    1aac:	str	r0, [fp, #-4]
    1ab0:	b	1ac0 <coda_cursor_goto_array_element_by_index+0x3c4>
    1ab4:	b	1ab8 <coda_cursor_goto_array_element_by_index+0x3bc>
    1ab8:	movw	r0, #0
    1abc:	str	r0, [fp, #-4]
    1ac0:	ldr	r0, [fp, #-4]
    1ac4:	mov	sp, fp
    1ac8:	pop	{fp, pc}
    1acc:	.word	0x000000bc

00001ad0 <coda_cursor_goto_first_record_field>:
    1ad0:	push	{fp, lr}
    1ad4:	mov	fp, sp
    1ad8:	sub	sp, sp, #8
    1adc:	str	r0, [sp, #4]
    1ae0:	ldr	r0, [sp, #4]
    1ae4:	movw	r1, #0
    1ae8:	bl	1390 <coda_cursor_goto_record_field_by_index>
    1aec:	mov	sp, fp
    1af0:	pop	{fp, pc}

00001af4 <coda_cursor_use_base_type_of_special_type>:
    1af4:	push	{fp, lr}
    1af8:	mov	fp, sp
    1afc:	sub	sp, sp, #32
    1b00:	str	r0, [fp, #-8]
    1b04:	ldr	r0, [fp, #-8]
    1b08:	movw	r1, #0
    1b0c:	cmp	r0, r1
    1b10:	beq	1b48 <coda_cursor_use_base_type_of_special_type+0x54>
    1b14:	ldr	r0, [fp, #-8]
    1b18:	ldr	r0, [r0, #4]
    1b1c:	cmp	r0, #0
    1b20:	ble	1b48 <coda_cursor_use_base_type_of_special_type+0x54>
    1b24:	ldr	r0, [fp, #-8]
    1b28:	add	r1, r0, #8
    1b2c:	ldr	r0, [r0, #4]
    1b30:	sub	r0, r0, #1
    1b34:	add	r0, r1, r0, lsl #4
    1b38:	ldr	r0, [r0]
    1b3c:	movw	r1, #0
    1b40:	cmp	r0, r1
    1b44:	bne	1b70 <coda_cursor_use_base_type_of_special_type+0x7c>
    1b48:	mvn	r0, #99	; 0x63
    1b4c:	movw	r1, #0
    1b50:	movt	r1, #0
    1b54:	movw	r2, #0
    1b58:	movt	r2, #0
    1b5c:	movw	r3, #1403	; 0x57b
    1b60:	bl	0 <coda_set_error>
    1b64:	mvn	r0, #0
    1b68:	str	r0, [fp, #-4]
    1b6c:	b	1df4 <coda_cursor_use_base_type_of_special_type+0x300>
    1b70:	ldr	r0, [fp, #-8]
    1b74:	add	r1, r0, #8
    1b78:	ldr	r0, [r0, #4]
    1b7c:	sub	r0, r0, #1
    1b80:	add	r0, r1, r0, lsl #4
    1b84:	ldr	r0, [r0]
    1b88:	ldr	r0, [r0]
    1b8c:	cmp	r0, #100	; 0x64
    1b90:	bcs	1bb4 <coda_cursor_use_base_type_of_special_type+0xc0>
    1b94:	ldr	r0, [fp, #-8]
    1b98:	add	r1, r0, #8
    1b9c:	ldr	r0, [r0, #4]
    1ba0:	sub	r0, r0, #1
    1ba4:	add	r0, r1, r0, lsl #4
    1ba8:	ldr	r0, [r0]
    1bac:	str	r0, [sp, #16]
    1bb0:	b	1bd4 <coda_cursor_use_base_type_of_special_type+0xe0>
    1bb4:	ldr	r0, [fp, #-8]
    1bb8:	add	r1, r0, #8
    1bbc:	ldr	r0, [r0, #4]
    1bc0:	sub	r0, r0, #1
    1bc4:	add	r0, r1, r0, lsl #4
    1bc8:	ldr	r0, [r0]
    1bcc:	ldr	r0, [r0, #4]
    1bd0:	str	r0, [sp, #16]
    1bd4:	ldr	r0, [sp, #16]
    1bd8:	str	r0, [fp, #-12]
    1bdc:	ldr	r0, [fp, #-12]
    1be0:	ldr	r0, [r0, #8]
    1be4:	cmp	r0, #6
    1be8:	beq	1c20 <coda_cursor_use_base_type_of_special_type+0x12c>
    1bec:	ldr	r0, [fp, #-12]
    1bf0:	ldr	r0, [r0, #8]
    1bf4:	bl	0 <coda_type_get_class_name>
    1bf8:	mvn	r1, #104	; 0x68
    1bfc:	str	r0, [sp, #12]
    1c00:	mov	r0, r1
    1c04:	movw	r1, #0
    1c08:	movt	r1, #0
    1c0c:	ldr	r2, [sp, #12]
    1c10:	bl	0 <coda_set_error>
    1c14:	mvn	r0, #0
    1c18:	str	r0, [fp, #-4]
    1c1c:	b	1df4 <coda_cursor_use_base_type_of_special_type+0x300>
    1c20:	ldr	r0, [fp, #-8]
    1c24:	ldr	r1, [r0, #4]
    1c28:	add	r0, r0, r1, lsl #4
    1c2c:	ldr	r0, [r0, #-8]
    1c30:	ldr	r0, [r0]
    1c34:	cmp	r0, #2
    1c38:	str	r0, [sp, #8]
    1c3c:	bcc	1c8c <coda_cursor_use_base_type_of_special_type+0x198>
    1c40:	b	1c44 <coda_cursor_use_base_type_of_special_type+0x150>
    1c44:	ldr	r0, [sp, #8]
    1c48:	cmp	r0, #100	; 0x64
    1c4c:	beq	1cac <coda_cursor_use_base_type_of_special_type+0x1b8>
    1c50:	b	1c54 <coda_cursor_use_base_type_of_special_type+0x160>
    1c54:	ldr	r0, [sp, #8]
    1c58:	sub	r1, r0, #101	; 0x65
    1c5c:	cmp	r1, #2
    1c60:	bcc	1cec <coda_cursor_use_base_type_of_special_type+0x1f8>
    1c64:	b	1c68 <coda_cursor_use_base_type_of_special_type+0x174>
    1c68:	ldr	r0, [sp, #8]
    1c6c:	cmp	r0, #103	; 0x67
    1c70:	beq	1ccc <coda_cursor_use_base_type_of_special_type+0x1d8>
    1c74:	b	1c78 <coda_cursor_use_base_type_of_special_type+0x184>
    1c78:	ldr	r0, [sp, #8]
    1c7c:	sub	r1, r0, #104	; 0x68
    1c80:	cmp	r1, #2
    1c84:	bcc	1cec <coda_cursor_use_base_type_of_special_type+0x1f8>
    1c88:	b	1d0c <coda_cursor_use_base_type_of_special_type+0x218>
    1c8c:	ldr	r0, [fp, #-8]
    1c90:	bl	0 <coda_ascbin_cursor_use_base_type_of_special_type>
    1c94:	cmp	r0, #0
    1c98:	beq	1ca8 <coda_cursor_use_base_type_of_special_type+0x1b4>
    1c9c:	mvn	r0, #0
    1ca0:	str	r0, [fp, #-4]
    1ca4:	b	1df4 <coda_cursor_use_base_type_of_special_type+0x300>
    1ca8:	b	1d0c <coda_cursor_use_base_type_of_special_type+0x218>
    1cac:	ldr	r0, [fp, #-8]
    1cb0:	bl	0 <coda_mem_cursor_use_base_type_of_special_type>
    1cb4:	cmp	r0, #0
    1cb8:	beq	1cc8 <coda_cursor_use_base_type_of_special_type+0x1d4>
    1cbc:	mvn	r0, #0
    1cc0:	str	r0, [fp, #-4]
    1cc4:	b	1df4 <coda_cursor_use_base_type_of_special_type+0x300>
    1cc8:	b	1d0c <coda_cursor_use_base_type_of_special_type+0x218>
    1ccc:	ldr	r0, [fp, #-8]
    1cd0:	bl	0 <coda_cdf_cursor_use_base_type_of_special_type>
    1cd4:	cmp	r0, #0
    1cd8:	beq	1ce8 <coda_cursor_use_base_type_of_special_type+0x1f4>
    1cdc:	mvn	r0, #0
    1ce0:	str	r0, [fp, #-4]
    1ce4:	b	1df4 <coda_cursor_use_base_type_of_special_type+0x300>
    1ce8:	b	1d0c <coda_cursor_use_base_type_of_special_type+0x218>
    1cec:	movw	r0, #0
    1cf0:	movt	r0, #0
    1cf4:	movw	r1, #0
    1cf8:	movt	r1, #0
    1cfc:	movw	r2, #1440	; 0x5a0
    1d00:	movw	r3, #0
    1d04:	movt	r3, #0
    1d08:	bl	0 <__assert_fail>
    1d0c:	ldr	r0, [fp, #-8]
    1d10:	add	r1, r0, #8
    1d14:	ldr	r0, [r0, #4]
    1d18:	sub	r0, r0, #1
    1d1c:	add	r0, r1, r0, lsl #4
    1d20:	ldr	r0, [r0]
    1d24:	ldr	r0, [r0]
    1d28:	cmp	r0, #100	; 0x64
    1d2c:	bne	1d38 <coda_cursor_use_base_type_of_special_type+0x244>
    1d30:	ldr	r0, [fp, #-8]
    1d34:	bl	0 <coda_mem_cursor_update_offset>
    1d38:	ldr	r0, [pc, #192]	; 1e00 <coda_cursor_use_base_type_of_special_type+0x30c>
    1d3c:	ldr	r0, [pc, r0]
    1d40:	str	r0, [sp, #4]
    1d44:	bl	0 <__aeabi_read_tp>
    1d48:	ldr	r1, [sp, #4]
    1d4c:	ldr	r0, [r0, r1]
    1d50:	cmp	r0, #0
    1d54:	beq	1dec <coda_cursor_use_base_type_of_special_type+0x2f8>
    1d58:	ldr	r0, [fp, #-8]
    1d5c:	add	r1, r0, #8
    1d60:	ldr	r0, [r0, #4]
    1d64:	sub	r0, r0, #1
    1d68:	add	r0, r1, r0, lsl #4
    1d6c:	ldr	r0, [r0]
    1d70:	ldr	r0, [r0]
    1d74:	cmp	r0, #100	; 0x64
    1d78:	bcs	1d9c <coda_cursor_use_base_type_of_special_type+0x2a8>
    1d7c:	ldr	r0, [fp, #-8]
    1d80:	add	r1, r0, #8
    1d84:	ldr	r0, [r0, #4]
    1d88:	sub	r0, r0, #1
    1d8c:	add	r0, r1, r0, lsl #4
    1d90:	ldr	r0, [r0]
    1d94:	str	r0, [sp]
    1d98:	b	1dbc <coda_cursor_use_base_type_of_special_type+0x2c8>
    1d9c:	ldr	r0, [fp, #-8]
    1da0:	add	r1, r0, #8
    1da4:	ldr	r0, [r0, #4]
    1da8:	sub	r0, r0, #1
    1dac:	add	r0, r1, r0, lsl #4
    1db0:	ldr	r0, [r0]
    1db4:	ldr	r0, [r0, #4]
    1db8:	str	r0, [sp]
    1dbc:	ldr	r0, [sp]
    1dc0:	ldr	r0, [r0, #8]
    1dc4:	cmp	r0, #6
    1dc8:	bne	1dec <coda_cursor_use_base_type_of_special_type+0x2f8>
    1dcc:	ldr	r0, [fp, #-8]
    1dd0:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
    1dd4:	cmp	r0, #0
    1dd8:	beq	1de8 <coda_cursor_use_base_type_of_special_type+0x2f4>
    1ddc:	mvn	r0, #0
    1de0:	str	r0, [fp, #-4]
    1de4:	b	1df4 <coda_cursor_use_base_type_of_special_type+0x300>
    1de8:	b	1dec <coda_cursor_use_base_type_of_special_type+0x2f8>
    1dec:	movw	r0, #0
    1df0:	str	r0, [fp, #-4]
    1df4:	ldr	r0, [fp, #-4]
    1df8:	mov	sp, fp
    1dfc:	pop	{fp, pc}
    1e00:	.word	0x000000bc

00001e04 <coda_cursor_goto_record_field_by_name>:
    1e04:	push	{fp, lr}
    1e08:	mov	fp, sp
    1e0c:	sub	sp, sp, #16
    1e10:	str	r0, [sp, #8]
    1e14:	str	r1, [sp, #4]
    1e18:	ldr	r0, [sp, #8]
    1e1c:	ldr	r1, [sp, #4]
    1e20:	mov	r2, sp
    1e24:	bl	1e58 <coda_cursor_get_record_field_index_from_name>
    1e28:	cmp	r0, #0
    1e2c:	beq	1e3c <coda_cursor_goto_record_field_by_name+0x38>
    1e30:	mvn	r0, #0
    1e34:	str	r0, [fp, #-4]
    1e38:	b	1e4c <coda_cursor_goto_record_field_by_name+0x48>
    1e3c:	ldr	r0, [sp, #8]
    1e40:	ldr	r1, [sp]
    1e44:	bl	1390 <coda_cursor_goto_record_field_by_index>
    1e48:	str	r0, [fp, #-4]
    1e4c:	ldr	r0, [fp, #-4]
    1e50:	mov	sp, fp
    1e54:	pop	{fp, pc}

00001e58 <coda_cursor_get_record_field_index_from_name>:
    1e58:	push	{fp, lr}
    1e5c:	mov	fp, sp
    1e60:	sub	sp, sp, #24
    1e64:	str	r0, [fp, #-8]
    1e68:	str	r1, [sp, #12]
    1e6c:	str	r2, [sp, #8]
    1e70:	ldr	r0, [fp, #-8]
    1e74:	movw	r1, #0
    1e78:	cmp	r0, r1
    1e7c:	beq	1ec8 <coda_cursor_get_record_field_index_from_name+0x70>
    1e80:	ldr	r0, [fp, #-8]
    1e84:	ldr	r0, [r0, #4]
    1e88:	cmp	r0, #0
    1e8c:	ble	1ec8 <coda_cursor_get_record_field_index_from_name+0x70>
    1e90:	ldr	r0, [fp, #-8]
    1e94:	ldr	r0, [r0]
    1e98:	movw	r1, #0
    1e9c:	cmp	r0, r1
    1ea0:	beq	1ec8 <coda_cursor_get_record_field_index_from_name+0x70>
    1ea4:	ldr	r0, [fp, #-8]
    1ea8:	add	r1, r0, #8
    1eac:	ldr	r0, [r0, #4]
    1eb0:	sub	r0, r0, #1
    1eb4:	add	r0, r1, r0, lsl #4
    1eb8:	ldr	r0, [r0]
    1ebc:	movw	r1, #0
    1ec0:	cmp	r0, r1
    1ec4:	bne	1ef0 <coda_cursor_get_record_field_index_from_name+0x98>
    1ec8:	mvn	r0, #99	; 0x63
    1ecc:	movw	r1, #0
    1ed0:	movt	r1, #0
    1ed4:	movw	r2, #0
    1ed8:	movt	r2, #0
    1edc:	movw	r3, #2057	; 0x809
    1ee0:	bl	0 <coda_set_error>
    1ee4:	mvn	r0, #0
    1ee8:	str	r0, [fp, #-4]
    1eec:	b	1f70 <coda_cursor_get_record_field_index_from_name+0x118>
    1ef0:	ldr	r0, [fp, #-8]
    1ef4:	add	r1, r0, #8
    1ef8:	ldr	r0, [r0, #4]
    1efc:	sub	r0, r0, #1
    1f00:	add	r0, r1, r0, lsl #4
    1f04:	ldr	r0, [r0]
    1f08:	ldr	r0, [r0]
    1f0c:	cmp	r0, #100	; 0x64
    1f10:	bcs	1f34 <coda_cursor_get_record_field_index_from_name+0xdc>
    1f14:	ldr	r0, [fp, #-8]
    1f18:	add	r1, r0, #8
    1f1c:	ldr	r0, [r0, #4]
    1f20:	sub	r0, r0, #1
    1f24:	add	r0, r1, r0, lsl #4
    1f28:	ldr	r0, [r0]
    1f2c:	str	r0, [sp]
    1f30:	b	1f54 <coda_cursor_get_record_field_index_from_name+0xfc>
    1f34:	ldr	r0, [fp, #-8]
    1f38:	add	r1, r0, #8
    1f3c:	ldr	r0, [r0, #4]
    1f40:	sub	r0, r0, #1
    1f44:	add	r0, r1, r0, lsl #4
    1f48:	ldr	r0, [r0]
    1f4c:	ldr	r0, [r0, #4]
    1f50:	str	r0, [sp]
    1f54:	ldr	r0, [sp]
    1f58:	str	r0, [sp, #4]
    1f5c:	ldr	r0, [sp, #4]
    1f60:	ldr	r1, [sp, #12]
    1f64:	ldr	r2, [sp, #8]
    1f68:	bl	0 <coda_type_get_record_field_index_from_name>
    1f6c:	str	r0, [fp, #-4]
    1f70:	ldr	r0, [fp, #-4]
    1f74:	mov	sp, fp
    1f78:	pop	{fp, pc}

00001f7c <coda_cursor_goto_next_record_field>:
    1f7c:	push	{fp, lr}
    1f80:	mov	fp, sp
    1f84:	sub	sp, sp, #32
    1f88:	str	r0, [fp, #-8]
    1f8c:	ldr	r0, [fp, #-8]
    1f90:	movw	r1, #0
    1f94:	cmp	r0, r1
    1f98:	beq	1fd0 <coda_cursor_goto_next_record_field+0x54>
    1f9c:	ldr	r0, [fp, #-8]
    1fa0:	ldr	r0, [r0, #4]
    1fa4:	cmp	r0, #1
    1fa8:	ble	1fd0 <coda_cursor_goto_next_record_field+0x54>
    1fac:	ldr	r0, [fp, #-8]
    1fb0:	add	r1, r0, #8
    1fb4:	ldr	r0, [r0, #4]
    1fb8:	sub	r0, r0, #2
    1fbc:	add	r0, r1, r0, lsl #4
    1fc0:	ldr	r0, [r0]
    1fc4:	movw	r1, #0
    1fc8:	cmp	r0, r1
    1fcc:	bne	1ff8 <coda_cursor_goto_next_record_field+0x7c>
    1fd0:	mvn	r0, #99	; 0x63
    1fd4:	movw	r1, #0
    1fd8:	movt	r1, #0
    1fdc:	movw	r2, #0
    1fe0:	movt	r2, #0
    1fe4:	movw	r3, #706	; 0x2c2
    1fe8:	bl	0 <coda_set_error>
    1fec:	mvn	r0, #0
    1ff0:	str	r0, [fp, #-4]
    1ff4:	b	22c4 <coda_cursor_goto_next_record_field+0x348>
    1ff8:	ldr	r0, [fp, #-8]
    1ffc:	add	r1, r0, #8
    2000:	ldr	r0, [r0, #4]
    2004:	sub	r0, r0, #2
    2008:	add	r0, r1, r0, lsl #4
    200c:	ldr	r0, [r0]
    2010:	ldr	r0, [r0]
    2014:	cmp	r0, #100	; 0x64
    2018:	bcs	203c <coda_cursor_goto_next_record_field+0xc0>
    201c:	ldr	r0, [fp, #-8]
    2020:	add	r1, r0, #8
    2024:	ldr	r0, [r0, #4]
    2028:	sub	r0, r0, #2
    202c:	add	r0, r1, r0, lsl #4
    2030:	ldr	r0, [r0]
    2034:	str	r0, [sp, #16]
    2038:	b	205c <coda_cursor_goto_next_record_field+0xe0>
    203c:	ldr	r0, [fp, #-8]
    2040:	add	r1, r0, #8
    2044:	ldr	r0, [r0, #4]
    2048:	sub	r0, r0, #2
    204c:	add	r0, r1, r0, lsl #4
    2050:	ldr	r0, [r0]
    2054:	ldr	r0, [r0, #4]
    2058:	str	r0, [sp, #16]
    205c:	ldr	r0, [sp, #16]
    2060:	str	r0, [fp, #-12]
    2064:	ldr	r0, [fp, #-12]
    2068:	ldr	r0, [r0, #8]
    206c:	cmp	r0, #0
    2070:	beq	20a8 <coda_cursor_goto_next_record_field+0x12c>
    2074:	ldr	r0, [fp, #-12]
    2078:	ldr	r0, [r0, #8]
    207c:	bl	0 <coda_type_get_class_name>
    2080:	mvn	r1, #104	; 0x68
    2084:	str	r0, [sp, #12]
    2088:	mov	r0, r1
    208c:	movw	r1, #0
    2090:	movt	r1, #0
    2094:	ldr	r2, [sp, #12]
    2098:	bl	0 <coda_set_error>
    209c:	mvn	r0, #0
    20a0:	str	r0, [fp, #-4]
    20a4:	b	22c4 <coda_cursor_goto_next_record_field+0x348>
    20a8:	ldr	r0, [fp, #-8]
    20ac:	add	r1, r0, #8
    20b0:	ldr	r0, [r0, #4]
    20b4:	sub	r0, r0, #1
    20b8:	add	r0, r1, r0, lsl #4
    20bc:	ldr	r0, [r0, #4]
    20c0:	cmn	r0, #1
    20c4:	bne	20e4 <coda_cursor_goto_next_record_field+0x168>
    20c8:	mvn	r0, #104	; 0x68
    20cc:	movw	r1, #0
    20d0:	movt	r1, #0
    20d4:	bl	0 <coda_set_error>
    20d8:	mvn	r0, #0
    20dc:	str	r0, [fp, #-4]
    20e0:	b	22c4 <coda_cursor_goto_next_record_field+0x348>
    20e4:	ldr	r0, [fp, #-8]
    20e8:	ldr	r1, [r0, #4]
    20ec:	add	r0, r0, r1, lsl #4
    20f0:	ldr	r0, [r0, #-24]	; 0xffffffe8
    20f4:	ldr	r0, [r0]
    20f8:	cmp	r0, #2
    20fc:	str	r0, [sp, #8]
    2100:	bcc	214c <coda_cursor_goto_next_record_field+0x1d0>
    2104:	b	2108 <coda_cursor_goto_next_record_field+0x18c>
    2108:	ldr	r0, [sp, #8]
    210c:	cmp	r0, #100	; 0x64
    2110:	beq	216c <coda_cursor_goto_next_record_field+0x1f0>
    2114:	b	2118 <coda_cursor_goto_next_record_field+0x19c>
    2118:	ldr	r0, [sp, #8]
    211c:	cmp	r0, #101	; 0x65
    2120:	beq	218c <coda_cursor_goto_next_record_field+0x210>
    2124:	b	2128 <coda_cursor_goto_next_record_field+0x1ac>
    2128:	ldr	r0, [sp, #8]
    212c:	cmp	r0, #102	; 0x66
    2130:	beq	21a4 <coda_cursor_goto_next_record_field+0x228>
    2134:	b	2138 <coda_cursor_goto_next_record_field+0x1bc>
    2138:	ldr	r0, [sp, #8]
    213c:	sub	r1, r0, #103	; 0x67
    2140:	cmp	r1, #3
    2144:	bcc	21bc <coda_cursor_goto_next_record_field+0x240>
    2148:	b	21dc <coda_cursor_goto_next_record_field+0x260>
    214c:	ldr	r0, [fp, #-8]
    2150:	bl	0 <coda_ascbin_cursor_goto_next_record_field>
    2154:	cmp	r0, #0
    2158:	beq	2168 <coda_cursor_goto_next_record_field+0x1ec>
    215c:	mvn	r0, #0
    2160:	str	r0, [fp, #-4]
    2164:	b	22c4 <coda_cursor_goto_next_record_field+0x348>
    2168:	b	21dc <coda_cursor_goto_next_record_field+0x260>
    216c:	ldr	r0, [fp, #-8]
    2170:	bl	0 <coda_mem_cursor_goto_next_record_field>
    2174:	cmp	r0, #0
    2178:	beq	2188 <coda_cursor_goto_next_record_field+0x20c>
    217c:	mvn	r0, #0
    2180:	str	r0, [fp, #-4]
    2184:	b	22c4 <coda_cursor_goto_next_record_field+0x348>
    2188:	b	21dc <coda_cursor_goto_next_record_field+0x260>
    218c:	mvn	r0, #10
    2190:	movw	r1, #0
    2194:	bl	0 <coda_set_error>
    2198:	mvn	r0, #0
    219c:	str	r0, [fp, #-4]
    21a0:	b	22c4 <coda_cursor_goto_next_record_field+0x348>
    21a4:	mvn	r0, #12
    21a8:	movw	r1, #0
    21ac:	bl	0 <coda_set_error>
    21b0:	mvn	r0, #0
    21b4:	str	r0, [fp, #-4]
    21b8:	b	22c4 <coda_cursor_goto_next_record_field+0x348>
    21bc:	movw	r0, #0
    21c0:	movt	r0, #0
    21c4:	movw	r1, #0
    21c8:	movt	r1, #0
    21cc:	movw	r2, #766	; 0x2fe
    21d0:	movw	r3, #0
    21d4:	movt	r3, #0
    21d8:	bl	0 <__assert_fail>
    21dc:	ldr	r0, [fp, #-8]
    21e0:	add	r1, r0, #8
    21e4:	ldr	r0, [r0, #4]
    21e8:	sub	r0, r0, #1
    21ec:	add	r0, r1, r0, lsl #4
    21f0:	ldr	r0, [r0]
    21f4:	ldr	r0, [r0]
    21f8:	cmp	r0, #100	; 0x64
    21fc:	bne	2208 <coda_cursor_goto_next_record_field+0x28c>
    2200:	ldr	r0, [fp, #-8]
    2204:	bl	0 <coda_mem_cursor_update_offset>
    2208:	ldr	r0, [pc, #192]	; 22d0 <coda_cursor_goto_next_record_field+0x354>
    220c:	ldr	r0, [pc, r0]
    2210:	str	r0, [sp, #4]
    2214:	bl	0 <__aeabi_read_tp>
    2218:	ldr	r1, [sp, #4]
    221c:	ldr	r0, [r0, r1]
    2220:	cmp	r0, #0
    2224:	beq	22bc <coda_cursor_goto_next_record_field+0x340>
    2228:	ldr	r0, [fp, #-8]
    222c:	add	r1, r0, #8
    2230:	ldr	r0, [r0, #4]
    2234:	sub	r0, r0, #1
    2238:	add	r0, r1, r0, lsl #4
    223c:	ldr	r0, [r0]
    2240:	ldr	r0, [r0]
    2244:	cmp	r0, #100	; 0x64
    2248:	bcs	226c <coda_cursor_goto_next_record_field+0x2f0>
    224c:	ldr	r0, [fp, #-8]
    2250:	add	r1, r0, #8
    2254:	ldr	r0, [r0, #4]
    2258:	sub	r0, r0, #1
    225c:	add	r0, r1, r0, lsl #4
    2260:	ldr	r0, [r0]
    2264:	str	r0, [sp]
    2268:	b	228c <coda_cursor_goto_next_record_field+0x310>
    226c:	ldr	r0, [fp, #-8]
    2270:	add	r1, r0, #8
    2274:	ldr	r0, [r0, #4]
    2278:	sub	r0, r0, #1
    227c:	add	r0, r1, r0, lsl #4
    2280:	ldr	r0, [r0]
    2284:	ldr	r0, [r0, #4]
    2288:	str	r0, [sp]
    228c:	ldr	r0, [sp]
    2290:	ldr	r0, [r0, #8]
    2294:	cmp	r0, #6
    2298:	bne	22bc <coda_cursor_goto_next_record_field+0x340>
    229c:	ldr	r0, [fp, #-8]
    22a0:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
    22a4:	cmp	r0, #0
    22a8:	beq	22b8 <coda_cursor_goto_next_record_field+0x33c>
    22ac:	mvn	r0, #0
    22b0:	str	r0, [fp, #-4]
    22b4:	b	22c4 <coda_cursor_goto_next_record_field+0x348>
    22b8:	b	22bc <coda_cursor_goto_next_record_field+0x340>
    22bc:	movw	r0, #0
    22c0:	str	r0, [fp, #-4]
    22c4:	ldr	r0, [fp, #-4]
    22c8:	mov	sp, fp
    22cc:	pop	{fp, pc}
    22d0:	.word	0x000000bc

000022d4 <coda_cursor_goto_available_union_field>:
    22d4:	push	{fp, lr}
    22d8:	mov	fp, sp
    22dc:	sub	sp, sp, #32
    22e0:	str	r0, [fp, #-8]
    22e4:	ldr	r0, [fp, #-8]
    22e8:	movw	r1, #0
    22ec:	cmp	r0, r1
    22f0:	beq	2328 <coda_cursor_goto_available_union_field+0x54>
    22f4:	ldr	r0, [fp, #-8]
    22f8:	ldr	r0, [r0, #4]
    22fc:	cmp	r0, #0
    2300:	ble	2328 <coda_cursor_goto_available_union_field+0x54>
    2304:	ldr	r0, [fp, #-8]
    2308:	add	r1, r0, #8
    230c:	ldr	r0, [r0, #4]
    2310:	sub	r0, r0, #1
    2314:	add	r0, r1, r0, lsl #4
    2318:	ldr	r0, [r0]
    231c:	movw	r1, #0
    2320:	cmp	r0, r1
    2324:	bne	2350 <coda_cursor_goto_available_union_field+0x7c>
    2328:	mvn	r0, #99	; 0x63
    232c:	movw	r1, #0
    2330:	movt	r1, #0
    2334:	movw	r2, #0
    2338:	movt	r2, #0
    233c:	movw	r3, #803	; 0x323
    2340:	bl	0 <coda_set_error>
    2344:	mvn	r0, #0
    2348:	str	r0, [fp, #-4]
    234c:	b	2590 <coda_cursor_goto_available_union_field+0x2bc>
    2350:	ldr	r0, [fp, #-8]
    2354:	add	r1, r0, #8
    2358:	ldr	r0, [r0, #4]
    235c:	sub	r0, r0, #1
    2360:	add	r0, r1, r0, lsl #4
    2364:	ldr	r0, [r0]
    2368:	ldr	r0, [r0]
    236c:	cmp	r0, #100	; 0x64
    2370:	bcs	2394 <coda_cursor_goto_available_union_field+0xc0>
    2374:	ldr	r0, [fp, #-8]
    2378:	add	r1, r0, #8
    237c:	ldr	r0, [r0, #4]
    2380:	sub	r0, r0, #1
    2384:	add	r0, r1, r0, lsl #4
    2388:	ldr	r0, [r0]
    238c:	str	r0, [sp, #16]
    2390:	b	23b4 <coda_cursor_goto_available_union_field+0xe0>
    2394:	ldr	r0, [fp, #-8]
    2398:	add	r1, r0, #8
    239c:	ldr	r0, [r0, #4]
    23a0:	sub	r0, r0, #1
    23a4:	add	r0, r1, r0, lsl #4
    23a8:	ldr	r0, [r0]
    23ac:	ldr	r0, [r0, #4]
    23b0:	str	r0, [sp, #16]
    23b4:	ldr	r0, [sp, #16]
    23b8:	str	r0, [fp, #-12]
    23bc:	ldr	r0, [fp, #-12]
    23c0:	ldr	r0, [r0, #8]
    23c4:	cmp	r0, #0
    23c8:	beq	2400 <coda_cursor_goto_available_union_field+0x12c>
    23cc:	ldr	r0, [fp, #-12]
    23d0:	ldr	r0, [r0, #8]
    23d4:	bl	0 <coda_type_get_class_name>
    23d8:	mvn	r1, #104	; 0x68
    23dc:	str	r0, [sp, #12]
    23e0:	mov	r0, r1
    23e4:	movw	r1, #0
    23e8:	movt	r1, #0
    23ec:	ldr	r2, [sp, #12]
    23f0:	bl	0 <coda_set_error>
    23f4:	mvn	r0, #0
    23f8:	str	r0, [fp, #-4]
    23fc:	b	2590 <coda_cursor_goto_available_union_field+0x2bc>
    2400:	ldr	r0, [fp, #-8]
    2404:	ldr	r1, [r0, #4]
    2408:	add	r0, r0, r1, lsl #4
    240c:	ldr	r0, [r0, #-8]
    2410:	ldr	r0, [r0]
    2414:	cmp	r0, #2
    2418:	str	r0, [sp, #8]
    241c:	bcc	2448 <coda_cursor_goto_available_union_field+0x174>
    2420:	b	2424 <coda_cursor_goto_available_union_field+0x150>
    2424:	ldr	r0, [sp, #8]
    2428:	cmp	r0, #100	; 0x64
    242c:	beq	2468 <coda_cursor_goto_available_union_field+0x194>
    2430:	b	2434 <coda_cursor_goto_available_union_field+0x160>
    2434:	ldr	r0, [sp, #8]
    2438:	sub	r1, r0, #101	; 0x65
    243c:	cmp	r1, #5
    2440:	bcc	2488 <coda_cursor_goto_available_union_field+0x1b4>
    2444:	b	24a8 <coda_cursor_goto_available_union_field+0x1d4>
    2448:	ldr	r0, [fp, #-8]
    244c:	bl	0 <coda_ascbin_cursor_goto_available_union_field>
    2450:	cmp	r0, #0
    2454:	beq	2464 <coda_cursor_goto_available_union_field+0x190>
    2458:	mvn	r0, #0
    245c:	str	r0, [fp, #-4]
    2460:	b	2590 <coda_cursor_goto_available_union_field+0x2bc>
    2464:	b	24a8 <coda_cursor_goto_available_union_field+0x1d4>
    2468:	ldr	r0, [fp, #-8]
    246c:	bl	0 <coda_mem_cursor_goto_available_union_field>
    2470:	cmp	r0, #0
    2474:	beq	2484 <coda_cursor_goto_available_union_field+0x1b0>
    2478:	mvn	r0, #0
    247c:	str	r0, [fp, #-4]
    2480:	b	2590 <coda_cursor_goto_available_union_field+0x2bc>
    2484:	b	24a8 <coda_cursor_goto_available_union_field+0x1d4>
    2488:	movw	r0, #0
    248c:	movt	r0, #0
    2490:	movw	r1, #0
    2494:	movt	r1, #0
    2498:	movw	r2, #835	; 0x343
    249c:	movw	r3, #0
    24a0:	movt	r3, #0
    24a4:	bl	0 <__assert_fail>
    24a8:	ldr	r0, [fp, #-8]
    24ac:	add	r1, r0, #8
    24b0:	ldr	r0, [r0, #4]
    24b4:	sub	r0, r0, #1
    24b8:	add	r0, r1, r0, lsl #4
    24bc:	ldr	r0, [r0]
    24c0:	ldr	r0, [r0]
    24c4:	cmp	r0, #100	; 0x64
    24c8:	bne	24d4 <coda_cursor_goto_available_union_field+0x200>
    24cc:	ldr	r0, [fp, #-8]
    24d0:	bl	0 <coda_mem_cursor_update_offset>
    24d4:	ldr	r0, [pc, #192]	; 259c <coda_cursor_goto_available_union_field+0x2c8>
    24d8:	ldr	r0, [pc, r0]
    24dc:	str	r0, [sp, #4]
    24e0:	bl	0 <__aeabi_read_tp>
    24e4:	ldr	r1, [sp, #4]
    24e8:	ldr	r0, [r0, r1]
    24ec:	cmp	r0, #0
    24f0:	beq	2588 <coda_cursor_goto_available_union_field+0x2b4>
    24f4:	ldr	r0, [fp, #-8]
    24f8:	add	r1, r0, #8
    24fc:	ldr	r0, [r0, #4]
    2500:	sub	r0, r0, #1
    2504:	add	r0, r1, r0, lsl #4
    2508:	ldr	r0, [r0]
    250c:	ldr	r0, [r0]
    2510:	cmp	r0, #100	; 0x64
    2514:	bcs	2538 <coda_cursor_goto_available_union_field+0x264>
    2518:	ldr	r0, [fp, #-8]
    251c:	add	r1, r0, #8
    2520:	ldr	r0, [r0, #4]
    2524:	sub	r0, r0, #1
    2528:	add	r0, r1, r0, lsl #4
    252c:	ldr	r0, [r0]
    2530:	str	r0, [sp]
    2534:	b	2558 <coda_cursor_goto_available_union_field+0x284>
    2538:	ldr	r0, [fp, #-8]
    253c:	add	r1, r0, #8
    2540:	ldr	r0, [r0, #4]
    2544:	sub	r0, r0, #1
    2548:	add	r0, r1, r0, lsl #4
    254c:	ldr	r0, [r0]
    2550:	ldr	r0, [r0, #4]
    2554:	str	r0, [sp]
    2558:	ldr	r0, [sp]
    255c:	ldr	r0, [r0, #8]
    2560:	cmp	r0, #6
    2564:	bne	2588 <coda_cursor_goto_available_union_field+0x2b4>
    2568:	ldr	r0, [fp, #-8]
    256c:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
    2570:	cmp	r0, #0
    2574:	beq	2584 <coda_cursor_goto_available_union_field+0x2b0>
    2578:	mvn	r0, #0
    257c:	str	r0, [fp, #-4]
    2580:	b	2590 <coda_cursor_goto_available_union_field+0x2bc>
    2584:	b	2588 <coda_cursor_goto_available_union_field+0x2b4>
    2588:	movw	r0, #0
    258c:	str	r0, [fp, #-4]
    2590:	ldr	r0, [fp, #-4]
    2594:	mov	sp, fp
    2598:	pop	{fp, pc}
    259c:	.word	0x000000bc

000025a0 <coda_cursor_goto_first_array_element>:
    25a0:	push	{fp, lr}
    25a4:	mov	fp, sp
    25a8:	sub	sp, sp, #8
    25ac:	str	r0, [sp, #4]
    25b0:	ldr	r0, [sp, #4]
    25b4:	movw	r1, #0
    25b8:	bl	16fc <coda_cursor_goto_array_element_by_index>
    25bc:	mov	sp, fp
    25c0:	pop	{fp, pc}

000025c4 <coda_cursor_goto_array_element>:
    25c4:	push	{fp, lr}
    25c8:	mov	fp, sp
    25cc:	sub	sp, sp, #48	; 0x30
    25d0:	str	r0, [fp, #-8]
    25d4:	str	r1, [fp, #-12]
    25d8:	str	r2, [fp, #-16]
    25dc:	ldr	r0, [fp, #-8]
    25e0:	movw	r1, #0
    25e4:	cmp	r0, r1
    25e8:	beq	2620 <coda_cursor_goto_array_element+0x5c>
    25ec:	ldr	r0, [fp, #-8]
    25f0:	ldr	r0, [r0, #4]
    25f4:	cmp	r0, #0
    25f8:	ble	2620 <coda_cursor_goto_array_element+0x5c>
    25fc:	ldr	r0, [fp, #-8]
    2600:	add	r1, r0, #8
    2604:	ldr	r0, [r0, #4]
    2608:	sub	r0, r0, #1
    260c:	add	r0, r1, r0, lsl #4
    2610:	ldr	r0, [r0]
    2614:	movw	r1, #0
    2618:	cmp	r0, r1
    261c:	bne	2648 <coda_cursor_goto_array_element+0x84>
    2620:	mvn	r0, #99	; 0x63
    2624:	movw	r1, #0
    2628:	movt	r1, #0
    262c:	movw	r2, #0
    2630:	movt	r2, #0
    2634:	movw	r3, #890	; 0x37a
    2638:	bl	0 <coda_set_error>
    263c:	mvn	r0, #0
    2640:	str	r0, [fp, #-4]
    2644:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    2648:	ldr	r0, [fp, #-8]
    264c:	add	r1, r0, #8
    2650:	ldr	r0, [r0, #4]
    2654:	sub	r0, r0, #1
    2658:	add	r0, r1, r0, lsl #4
    265c:	ldr	r0, [r0]
    2660:	ldr	r0, [r0]
    2664:	cmp	r0, #100	; 0x64
    2668:	bcs	268c <coda_cursor_goto_array_element+0xc8>
    266c:	ldr	r0, [fp, #-8]
    2670:	add	r1, r0, #8
    2674:	ldr	r0, [r0, #4]
    2678:	sub	r0, r0, #1
    267c:	add	r0, r1, r0, lsl #4
    2680:	ldr	r0, [r0]
    2684:	str	r0, [sp, #24]
    2688:	b	26ac <coda_cursor_goto_array_element+0xe8>
    268c:	ldr	r0, [fp, #-8]
    2690:	add	r1, r0, #8
    2694:	ldr	r0, [r0, #4]
    2698:	sub	r0, r0, #1
    269c:	add	r0, r1, r0, lsl #4
    26a0:	ldr	r0, [r0]
    26a4:	ldr	r0, [r0, #4]
    26a8:	str	r0, [sp, #24]
    26ac:	ldr	r0, [sp, #24]
    26b0:	str	r0, [fp, #-20]	; 0xffffffec
    26b4:	ldr	r0, [fp, #-20]	; 0xffffffec
    26b8:	ldr	r0, [r0, #8]
    26bc:	cmp	r0, #1
    26c0:	beq	26f8 <coda_cursor_goto_array_element+0x134>
    26c4:	ldr	r0, [fp, #-20]	; 0xffffffec
    26c8:	ldr	r0, [r0, #8]
    26cc:	bl	0 <coda_type_get_class_name>
    26d0:	mvn	r1, #104	; 0x68
    26d4:	str	r0, [sp, #20]
    26d8:	mov	r0, r1
    26dc:	movw	r1, #0
    26e0:	movt	r1, #0
    26e4:	ldr	r2, [sp, #20]
    26e8:	bl	0 <coda_set_error>
    26ec:	mvn	r0, #0
    26f0:	str	r0, [fp, #-4]
    26f4:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    26f8:	ldr	r0, [fp, #-8]
    26fc:	ldr	r0, [r0, #4]
    2700:	cmp	r0, #32
    2704:	bne	273c <coda_cursor_goto_array_element+0x178>
    2708:	ldr	r0, [fp, #-8]
    270c:	ldr	r2, [r0, #4]
    2710:	mvn	r0, #99	; 0x63
    2714:	movw	r1, #0
    2718:	movt	r1, #0
    271c:	movw	r3, #0
    2720:	movt	r3, #0
    2724:	movw	ip, #905	; 0x389
    2728:	str	ip, [sp]
    272c:	bl	0 <coda_set_error>
    2730:	mvn	r0, #0
    2734:	str	r0, [fp, #-4]
    2738:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    273c:	ldr	r0, [fp, #-8]
    2740:	ldr	r1, [r0, #4]
    2744:	add	r0, r0, r1, lsl #4
    2748:	ldr	r0, [r0, #-8]
    274c:	ldr	r0, [r0]
    2750:	cmp	r0, #2
    2754:	str	r0, [sp, #16]
    2758:	bcc	27c0 <coda_cursor_goto_array_element+0x1fc>
    275c:	b	2760 <coda_cursor_goto_array_element+0x19c>
    2760:	ldr	r0, [sp, #16]
    2764:	cmp	r0, #100	; 0x64
    2768:	beq	27e8 <coda_cursor_goto_array_element+0x224>
    276c:	b	2770 <coda_cursor_goto_array_element+0x1ac>
    2770:	ldr	r0, [sp, #16]
    2774:	cmp	r0, #101	; 0x65
    2778:	beq	2810 <coda_cursor_goto_array_element+0x24c>
    277c:	b	2780 <coda_cursor_goto_array_element+0x1bc>
    2780:	ldr	r0, [sp, #16]
    2784:	cmp	r0, #102	; 0x66
    2788:	beq	2828 <coda_cursor_goto_array_element+0x264>
    278c:	b	2790 <coda_cursor_goto_array_element+0x1cc>
    2790:	ldr	r0, [sp, #16]
    2794:	cmp	r0, #103	; 0x67
    2798:	beq	2840 <coda_cursor_goto_array_element+0x27c>
    279c:	b	27a0 <coda_cursor_goto_array_element+0x1dc>
    27a0:	ldr	r0, [sp, #16]
    27a4:	cmp	r0, #104	; 0x68
    27a8:	beq	2868 <coda_cursor_goto_array_element+0x2a4>
    27ac:	b	27b0 <coda_cursor_goto_array_element+0x1ec>
    27b0:	ldr	r0, [sp, #16]
    27b4:	cmp	r0, #105	; 0x69
    27b8:	beq	2890 <coda_cursor_goto_array_element+0x2cc>
    27bc:	b	28b8 <coda_cursor_goto_array_element+0x2f4>
    27c0:	ldr	r0, [fp, #-8]
    27c4:	ldr	r1, [fp, #-12]
    27c8:	ldr	r2, [fp, #-16]
    27cc:	bl	0 <coda_ascbin_cursor_goto_array_element>
    27d0:	cmp	r0, #0
    27d4:	beq	27e4 <coda_cursor_goto_array_element+0x220>
    27d8:	mvn	r0, #0
    27dc:	str	r0, [fp, #-4]
    27e0:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    27e4:	b	28b8 <coda_cursor_goto_array_element+0x2f4>
    27e8:	ldr	r0, [fp, #-8]
    27ec:	ldr	r1, [fp, #-12]
    27f0:	ldr	r2, [fp, #-16]
    27f4:	bl	0 <coda_mem_cursor_goto_array_element>
    27f8:	cmp	r0, #0
    27fc:	beq	280c <coda_cursor_goto_array_element+0x248>
    2800:	mvn	r0, #0
    2804:	str	r0, [fp, #-4]
    2808:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    280c:	b	28b8 <coda_cursor_goto_array_element+0x2f4>
    2810:	mvn	r0, #10
    2814:	movw	r1, #0
    2818:	bl	0 <coda_set_error>
    281c:	mvn	r0, #0
    2820:	str	r0, [fp, #-4]
    2824:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    2828:	mvn	r0, #12
    282c:	movw	r1, #0
    2830:	bl	0 <coda_set_error>
    2834:	mvn	r0, #0
    2838:	str	r0, [fp, #-4]
    283c:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    2840:	ldr	r0, [fp, #-8]
    2844:	ldr	r1, [fp, #-12]
    2848:	ldr	r2, [fp, #-16]
    284c:	bl	0 <coda_cdf_cursor_goto_array_element>
    2850:	cmp	r0, #0
    2854:	beq	2864 <coda_cursor_goto_array_element+0x2a0>
    2858:	mvn	r0, #0
    285c:	str	r0, [fp, #-4]
    2860:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    2864:	b	28b8 <coda_cursor_goto_array_element+0x2f4>
    2868:	ldr	r0, [fp, #-8]
    286c:	ldr	r1, [fp, #-12]
    2870:	ldr	r2, [fp, #-16]
    2874:	bl	0 <coda_netcdf_cursor_goto_array_element>
    2878:	cmp	r0, #0
    287c:	beq	288c <coda_cursor_goto_array_element+0x2c8>
    2880:	mvn	r0, #0
    2884:	str	r0, [fp, #-4]
    2888:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    288c:	b	28b8 <coda_cursor_goto_array_element+0x2f4>
    2890:	ldr	r0, [fp, #-8]
    2894:	ldr	r1, [fp, #-12]
    2898:	ldr	r2, [fp, #-16]
    289c:	bl	0 <coda_grib_cursor_goto_array_element>
    28a0:	cmp	r0, #0
    28a4:	beq	28b4 <coda_cursor_goto_array_element+0x2f0>
    28a8:	mvn	r0, #0
    28ac:	str	r0, [fp, #-4]
    28b0:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    28b4:	b	28b8 <coda_cursor_goto_array_element+0x2f4>
    28b8:	ldr	r0, [fp, #-8]
    28bc:	add	r1, r0, #8
    28c0:	ldr	r0, [r0, #4]
    28c4:	sub	r0, r0, #1
    28c8:	add	r0, r1, r0, lsl #4
    28cc:	ldr	r0, [r0]
    28d0:	ldr	r0, [r0]
    28d4:	cmp	r0, #100	; 0x64
    28d8:	bne	28e4 <coda_cursor_goto_array_element+0x320>
    28dc:	ldr	r0, [fp, #-8]
    28e0:	bl	0 <coda_mem_cursor_update_offset>
    28e4:	ldr	r0, [pc, #192]	; 29ac <coda_cursor_goto_array_element+0x3e8>
    28e8:	ldr	r0, [pc, r0]
    28ec:	str	r0, [sp, #12]
    28f0:	bl	0 <__aeabi_read_tp>
    28f4:	ldr	r1, [sp, #12]
    28f8:	ldr	r0, [r0, r1]
    28fc:	cmp	r0, #0
    2900:	beq	2998 <coda_cursor_goto_array_element+0x3d4>
    2904:	ldr	r0, [fp, #-8]
    2908:	add	r1, r0, #8
    290c:	ldr	r0, [r0, #4]
    2910:	sub	r0, r0, #1
    2914:	add	r0, r1, r0, lsl #4
    2918:	ldr	r0, [r0]
    291c:	ldr	r0, [r0]
    2920:	cmp	r0, #100	; 0x64
    2924:	bcs	2948 <coda_cursor_goto_array_element+0x384>
    2928:	ldr	r0, [fp, #-8]
    292c:	add	r1, r0, #8
    2930:	ldr	r0, [r0, #4]
    2934:	sub	r0, r0, #1
    2938:	add	r0, r1, r0, lsl #4
    293c:	ldr	r0, [r0]
    2940:	str	r0, [sp, #8]
    2944:	b	2968 <coda_cursor_goto_array_element+0x3a4>
    2948:	ldr	r0, [fp, #-8]
    294c:	add	r1, r0, #8
    2950:	ldr	r0, [r0, #4]
    2954:	sub	r0, r0, #1
    2958:	add	r0, r1, r0, lsl #4
    295c:	ldr	r0, [r0]
    2960:	ldr	r0, [r0, #4]
    2964:	str	r0, [sp, #8]
    2968:	ldr	r0, [sp, #8]
    296c:	ldr	r0, [r0, #8]
    2970:	cmp	r0, #6
    2974:	bne	2998 <coda_cursor_goto_array_element+0x3d4>
    2978:	ldr	r0, [fp, #-8]
    297c:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
    2980:	cmp	r0, #0
    2984:	beq	2994 <coda_cursor_goto_array_element+0x3d0>
    2988:	mvn	r0, #0
    298c:	str	r0, [fp, #-4]
    2990:	b	29a0 <coda_cursor_goto_array_element+0x3dc>
    2994:	b	2998 <coda_cursor_goto_array_element+0x3d4>
    2998:	movw	r0, #0
    299c:	str	r0, [fp, #-4]
    29a0:	ldr	r0, [fp, #-4]
    29a4:	mov	sp, fp
    29a8:	pop	{fp, pc}
    29ac:	.word	0x000000bc

000029b0 <coda_cursor_goto_next_array_element>:
    29b0:	push	{fp, lr}
    29b4:	mov	fp, sp
    29b8:	sub	sp, sp, #32
    29bc:	str	r0, [fp, #-8]
    29c0:	ldr	r0, [fp, #-8]
    29c4:	movw	r1, #0
    29c8:	cmp	r0, r1
    29cc:	beq	2a04 <coda_cursor_goto_next_array_element+0x54>
    29d0:	ldr	r0, [fp, #-8]
    29d4:	ldr	r0, [r0, #4]
    29d8:	cmp	r0, #1
    29dc:	ble	2a04 <coda_cursor_goto_next_array_element+0x54>
    29e0:	ldr	r0, [fp, #-8]
    29e4:	add	r1, r0, #8
    29e8:	ldr	r0, [r0, #4]
    29ec:	sub	r0, r0, #1
    29f0:	add	r0, r1, r0, lsl #4
    29f4:	ldr	r0, [r0]
    29f8:	movw	r1, #0
    29fc:	cmp	r0, r1
    2a00:	bne	2a2c <coda_cursor_goto_next_array_element+0x7c>
    2a04:	mvn	r0, #99	; 0x63
    2a08:	movw	r1, #0
    2a0c:	movt	r1, #0
    2a10:	movw	r2, #0
    2a14:	movt	r2, #0
    2a18:	movw	r3, #1134	; 0x46e
    2a1c:	bl	0 <coda_set_error>
    2a20:	mvn	r0, #0
    2a24:	str	r0, [fp, #-4]
    2a28:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2a2c:	ldr	r0, [fp, #-8]
    2a30:	add	r1, r0, #8
    2a34:	ldr	r0, [r0, #4]
    2a38:	sub	r0, r0, #2
    2a3c:	add	r0, r1, r0, lsl #4
    2a40:	ldr	r0, [r0]
    2a44:	ldr	r0, [r0]
    2a48:	cmp	r0, #100	; 0x64
    2a4c:	bcs	2a70 <coda_cursor_goto_next_array_element+0xc0>
    2a50:	ldr	r0, [fp, #-8]
    2a54:	add	r1, r0, #8
    2a58:	ldr	r0, [r0, #4]
    2a5c:	sub	r0, r0, #2
    2a60:	add	r0, r1, r0, lsl #4
    2a64:	ldr	r0, [r0]
    2a68:	str	r0, [sp, #16]
    2a6c:	b	2a90 <coda_cursor_goto_next_array_element+0xe0>
    2a70:	ldr	r0, [fp, #-8]
    2a74:	add	r1, r0, #8
    2a78:	ldr	r0, [r0, #4]
    2a7c:	sub	r0, r0, #2
    2a80:	add	r0, r1, r0, lsl #4
    2a84:	ldr	r0, [r0]
    2a88:	ldr	r0, [r0, #4]
    2a8c:	str	r0, [sp, #16]
    2a90:	ldr	r0, [sp, #16]
    2a94:	str	r0, [fp, #-12]
    2a98:	ldr	r0, [fp, #-12]
    2a9c:	ldr	r0, [r0, #8]
    2aa0:	cmp	r0, #1
    2aa4:	beq	2adc <coda_cursor_goto_next_array_element+0x12c>
    2aa8:	ldr	r0, [fp, #-12]
    2aac:	ldr	r0, [r0, #8]
    2ab0:	bl	0 <coda_type_get_class_name>
    2ab4:	mvn	r1, #104	; 0x68
    2ab8:	str	r0, [sp, #12]
    2abc:	mov	r0, r1
    2ac0:	movw	r1, #0
    2ac4:	movt	r1, #0
    2ac8:	ldr	r2, [sp, #12]
    2acc:	bl	0 <coda_set_error>
    2ad0:	mvn	r0, #0
    2ad4:	str	r0, [fp, #-4]
    2ad8:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2adc:	ldr	r0, [fp, #-8]
    2ae0:	add	r1, r0, #8
    2ae4:	ldr	r0, [r0, #4]
    2ae8:	sub	r0, r0, #1
    2aec:	add	r0, r1, r0, lsl #4
    2af0:	ldr	r0, [r0, #4]
    2af4:	cmn	r0, #1
    2af8:	bne	2b18 <coda_cursor_goto_next_array_element+0x168>
    2afc:	mvn	r0, #104	; 0x68
    2b00:	movw	r1, #0
    2b04:	movt	r1, #0
    2b08:	bl	0 <coda_set_error>
    2b0c:	mvn	r0, #0
    2b10:	str	r0, [fp, #-4]
    2b14:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2b18:	ldr	r0, [fp, #-8]
    2b1c:	ldr	r1, [r0, #4]
    2b20:	add	r0, r0, r1, lsl #4
    2b24:	ldr	r0, [r0, #-24]	; 0xffffffe8
    2b28:	ldr	r0, [r0]
    2b2c:	cmp	r0, #2
    2b30:	str	r0, [sp, #8]
    2b34:	bcc	2b9c <coda_cursor_goto_next_array_element+0x1ec>
    2b38:	b	2b3c <coda_cursor_goto_next_array_element+0x18c>
    2b3c:	ldr	r0, [sp, #8]
    2b40:	cmp	r0, #100	; 0x64
    2b44:	beq	2bbc <coda_cursor_goto_next_array_element+0x20c>
    2b48:	b	2b4c <coda_cursor_goto_next_array_element+0x19c>
    2b4c:	ldr	r0, [sp, #8]
    2b50:	cmp	r0, #101	; 0x65
    2b54:	beq	2bdc <coda_cursor_goto_next_array_element+0x22c>
    2b58:	b	2b5c <coda_cursor_goto_next_array_element+0x1ac>
    2b5c:	ldr	r0, [sp, #8]
    2b60:	cmp	r0, #102	; 0x66
    2b64:	beq	2bf4 <coda_cursor_goto_next_array_element+0x244>
    2b68:	b	2b6c <coda_cursor_goto_next_array_element+0x1bc>
    2b6c:	ldr	r0, [sp, #8]
    2b70:	cmp	r0, #103	; 0x67
    2b74:	beq	2c0c <coda_cursor_goto_next_array_element+0x25c>
    2b78:	b	2b7c <coda_cursor_goto_next_array_element+0x1cc>
    2b7c:	ldr	r0, [sp, #8]
    2b80:	cmp	r0, #104	; 0x68
    2b84:	beq	2c2c <coda_cursor_goto_next_array_element+0x27c>
    2b88:	b	2b8c <coda_cursor_goto_next_array_element+0x1dc>
    2b8c:	ldr	r0, [sp, #8]
    2b90:	cmp	r0, #105	; 0x69
    2b94:	beq	2c4c <coda_cursor_goto_next_array_element+0x29c>
    2b98:	b	2c6c <coda_cursor_goto_next_array_element+0x2bc>
    2b9c:	ldr	r0, [fp, #-8]
    2ba0:	bl	0 <coda_ascbin_cursor_goto_next_array_element>
    2ba4:	cmp	r0, #0
    2ba8:	beq	2bb8 <coda_cursor_goto_next_array_element+0x208>
    2bac:	mvn	r0, #0
    2bb0:	str	r0, [fp, #-4]
    2bb4:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2bb8:	b	2c6c <coda_cursor_goto_next_array_element+0x2bc>
    2bbc:	ldr	r0, [fp, #-8]
    2bc0:	bl	0 <coda_mem_cursor_goto_next_array_element>
    2bc4:	cmp	r0, #0
    2bc8:	beq	2bd8 <coda_cursor_goto_next_array_element+0x228>
    2bcc:	mvn	r0, #0
    2bd0:	str	r0, [fp, #-4]
    2bd4:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2bd8:	b	2c6c <coda_cursor_goto_next_array_element+0x2bc>
    2bdc:	mvn	r0, #10
    2be0:	movw	r1, #0
    2be4:	bl	0 <coda_set_error>
    2be8:	mvn	r0, #0
    2bec:	str	r0, [fp, #-4]
    2bf0:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2bf4:	mvn	r0, #12
    2bf8:	movw	r1, #0
    2bfc:	bl	0 <coda_set_error>
    2c00:	mvn	r0, #0
    2c04:	str	r0, [fp, #-4]
    2c08:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2c0c:	ldr	r0, [fp, #-8]
    2c10:	bl	0 <coda_cdf_cursor_goto_next_array_element>
    2c14:	cmp	r0, #0
    2c18:	beq	2c28 <coda_cursor_goto_next_array_element+0x278>
    2c1c:	mvn	r0, #0
    2c20:	str	r0, [fp, #-4]
    2c24:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2c28:	b	2c6c <coda_cursor_goto_next_array_element+0x2bc>
    2c2c:	ldr	r0, [fp, #-8]
    2c30:	bl	0 <coda_netcdf_cursor_goto_next_array_element>
    2c34:	cmp	r0, #0
    2c38:	beq	2c48 <coda_cursor_goto_next_array_element+0x298>
    2c3c:	mvn	r0, #0
    2c40:	str	r0, [fp, #-4]
    2c44:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2c48:	b	2c6c <coda_cursor_goto_next_array_element+0x2bc>
    2c4c:	ldr	r0, [fp, #-8]
    2c50:	bl	0 <coda_grib_cursor_goto_next_array_element>
    2c54:	cmp	r0, #0
    2c58:	beq	2c68 <coda_cursor_goto_next_array_element+0x2b8>
    2c5c:	mvn	r0, #0
    2c60:	str	r0, [fp, #-4]
    2c64:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2c68:	b	2c6c <coda_cursor_goto_next_array_element+0x2bc>
    2c6c:	ldr	r0, [fp, #-8]
    2c70:	add	r1, r0, #8
    2c74:	ldr	r0, [r0, #4]
    2c78:	sub	r0, r0, #1
    2c7c:	add	r0, r1, r0, lsl #4
    2c80:	ldr	r0, [r0]
    2c84:	ldr	r0, [r0]
    2c88:	cmp	r0, #100	; 0x64
    2c8c:	bne	2c98 <coda_cursor_goto_next_array_element+0x2e8>
    2c90:	ldr	r0, [fp, #-8]
    2c94:	bl	0 <coda_mem_cursor_update_offset>
    2c98:	ldr	r0, [pc, #192]	; 2d60 <coda_cursor_goto_next_array_element+0x3b0>
    2c9c:	ldr	r0, [pc, r0]
    2ca0:	str	r0, [sp, #4]
    2ca4:	bl	0 <__aeabi_read_tp>
    2ca8:	ldr	r1, [sp, #4]
    2cac:	ldr	r0, [r0, r1]
    2cb0:	cmp	r0, #0
    2cb4:	beq	2d4c <coda_cursor_goto_next_array_element+0x39c>
    2cb8:	ldr	r0, [fp, #-8]
    2cbc:	add	r1, r0, #8
    2cc0:	ldr	r0, [r0, #4]
    2cc4:	sub	r0, r0, #1
    2cc8:	add	r0, r1, r0, lsl #4
    2ccc:	ldr	r0, [r0]
    2cd0:	ldr	r0, [r0]
    2cd4:	cmp	r0, #100	; 0x64
    2cd8:	bcs	2cfc <coda_cursor_goto_next_array_element+0x34c>
    2cdc:	ldr	r0, [fp, #-8]
    2ce0:	add	r1, r0, #8
    2ce4:	ldr	r0, [r0, #4]
    2ce8:	sub	r0, r0, #1
    2cec:	add	r0, r1, r0, lsl #4
    2cf0:	ldr	r0, [r0]
    2cf4:	str	r0, [sp]
    2cf8:	b	2d1c <coda_cursor_goto_next_array_element+0x36c>
    2cfc:	ldr	r0, [fp, #-8]
    2d00:	add	r1, r0, #8
    2d04:	ldr	r0, [r0, #4]
    2d08:	sub	r0, r0, #1
    2d0c:	add	r0, r1, r0, lsl #4
    2d10:	ldr	r0, [r0]
    2d14:	ldr	r0, [r0, #4]
    2d18:	str	r0, [sp]
    2d1c:	ldr	r0, [sp]
    2d20:	ldr	r0, [r0, #8]
    2d24:	cmp	r0, #6
    2d28:	bne	2d4c <coda_cursor_goto_next_array_element+0x39c>
    2d2c:	ldr	r0, [fp, #-8]
    2d30:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
    2d34:	cmp	r0, #0
    2d38:	beq	2d48 <coda_cursor_goto_next_array_element+0x398>
    2d3c:	mvn	r0, #0
    2d40:	str	r0, [fp, #-4]
    2d44:	b	2d54 <coda_cursor_goto_next_array_element+0x3a4>
    2d48:	b	2d4c <coda_cursor_goto_next_array_element+0x39c>
    2d4c:	movw	r0, #0
    2d50:	str	r0, [fp, #-4]
    2d54:	ldr	r0, [fp, #-4]
    2d58:	mov	sp, fp
    2d5c:	pop	{fp, pc}
    2d60:	.word	0x000000bc

00002d64 <coda_cursor_has_ascii_content>:
    2d64:	push	{r4, r5, fp, lr}
    2d68:	add	fp, sp, #8
    2d6c:	sub	sp, sp, #552	; 0x228
    2d70:	str	r0, [fp, #-16]
    2d74:	str	r1, [fp, #-20]	; 0xffffffec
    2d78:	ldr	r0, [fp, #-16]
    2d7c:	movw	r1, #0
    2d80:	cmp	r0, r1
    2d84:	beq	2dbc <coda_cursor_has_ascii_content+0x58>
    2d88:	ldr	r0, [fp, #-16]
    2d8c:	ldr	r0, [r0, #4]
    2d90:	cmp	r0, #0
    2d94:	ble	2dbc <coda_cursor_has_ascii_content+0x58>
    2d98:	ldr	r0, [fp, #-16]
    2d9c:	add	r1, r0, #8
    2da0:	ldr	r0, [r0, #4]
    2da4:	sub	r0, r0, #1
    2da8:	add	r0, r1, r0, lsl #4
    2dac:	ldr	r0, [r0]
    2db0:	movw	r1, #0
    2db4:	cmp	r0, r1
    2db8:	bne	2de4 <coda_cursor_has_ascii_content+0x80>
    2dbc:	mvn	r0, #99	; 0x63
    2dc0:	movw	r1, #0
    2dc4:	movt	r1, #0
    2dc8:	movw	r2, #0
    2dcc:	movt	r2, #0
    2dd0:	movw	r3, #1477	; 0x5c5
    2dd4:	bl	0 <coda_set_error>
    2dd8:	mvn	r0, #0
    2ddc:	str	r0, [fp, #-12]
    2de0:	b	2f68 <coda_cursor_has_ascii_content+0x204>
    2de4:	ldr	r0, [fp, #-20]	; 0xffffffec
    2de8:	movw	r1, #0
    2dec:	cmp	r0, r1
    2df0:	bne	2e1c <coda_cursor_has_ascii_content+0xb8>
    2df4:	mvn	r0, #99	; 0x63
    2df8:	movw	r1, #0
    2dfc:	movt	r1, #0
    2e00:	movw	r2, #0
    2e04:	movt	r2, #0
    2e08:	movw	r3, #1482	; 0x5ca
    2e0c:	bl	0 <coda_set_error>
    2e10:	mvn	r0, #0
    2e14:	str	r0, [fp, #-12]
    2e18:	b	2f68 <coda_cursor_has_ascii_content+0x204>
    2e1c:	ldr	r0, [fp, #-16]
    2e20:	ldr	r1, [r0, #4]
    2e24:	add	r0, r0, r1, lsl #4
    2e28:	ldr	r0, [r0, #-8]
    2e2c:	ldr	r0, [r0]
    2e30:	cmp	r0, #0
    2e34:	bne	2e4c <coda_cursor_has_ascii_content+0xe8>
    2e38:	b	2e3c <coda_cursor_has_ascii_content+0xd8>
    2e3c:	ldr	r0, [fp, #-20]	; 0xffffffec
    2e40:	movw	r1, #1
    2e44:	str	r1, [r0]
    2e48:	b	2f60 <coda_cursor_has_ascii_content+0x1fc>
    2e4c:	ldr	r0, [fp, #-16]
    2e50:	add	r1, r0, #8
    2e54:	ldr	r0, [r0, #4]
    2e58:	sub	r0, r0, #1
    2e5c:	add	r0, r1, r0, lsl #4
    2e60:	ldr	r0, [r0]
    2e64:	ldr	r0, [r0]
    2e68:	cmp	r0, #100	; 0x64
    2e6c:	bcs	2e90 <coda_cursor_has_ascii_content+0x12c>
    2e70:	ldr	r0, [fp, #-16]
    2e74:	add	r1, r0, #8
    2e78:	ldr	r0, [r0, #4]
    2e7c:	sub	r0, r0, #1
    2e80:	add	r0, r1, r0, lsl #4
    2e84:	ldr	r0, [r0]
    2e88:	str	r0, [sp, #12]
    2e8c:	b	2eb0 <coda_cursor_has_ascii_content+0x14c>
    2e90:	ldr	r0, [fp, #-16]
    2e94:	add	r1, r0, #8
    2e98:	ldr	r0, [r0, #4]
    2e9c:	sub	r0, r0, #1
    2ea0:	add	r0, r1, r0, lsl #4
    2ea4:	ldr	r0, [r0]
    2ea8:	ldr	r0, [r0, #4]
    2eac:	str	r0, [sp, #12]
    2eb0:	ldr	r0, [sp, #12]
    2eb4:	str	r0, [fp, #-24]	; 0xffffffe8
    2eb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2ebc:	ldr	r0, [r0, #8]
    2ec0:	cmp	r0, #6
    2ec4:	bne	2f20 <coda_cursor_has_ascii_content+0x1bc>
    2ec8:	ldr	r0, [fp, #-16]
    2ecc:	add	r1, sp, #16
    2ed0:	mov	r2, r1
    2ed4:	str	r0, [sp, #8]
    2ed8:	mov	r0, r2
    2edc:	ldr	r2, [sp, #8]
    2ee0:	str	r1, [sp, #4]
    2ee4:	mov	r1, r2
    2ee8:	movw	r2, #520	; 0x208
    2eec:	bl	0 <memcpy>
    2ef0:	ldr	r0, [sp, #4]
    2ef4:	bl	1af4 <coda_cursor_use_base_type_of_special_type>
    2ef8:	cmp	r0, #0
    2efc:	beq	2f0c <coda_cursor_has_ascii_content+0x1a8>
    2f00:	mvn	r0, #0
    2f04:	str	r0, [fp, #-12]
    2f08:	b	2f68 <coda_cursor_has_ascii_content+0x204>
    2f0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f10:	add	r0, sp, #16
    2f14:	bl	2d64 <coda_cursor_has_ascii_content>
    2f18:	str	r0, [fp, #-12]
    2f1c:	b	2f68 <coda_cursor_has_ascii_content+0x204>
    2f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f24:	ldr	r0, [r0]
    2f28:	cmp	r0, #0
    2f2c:	movw	r0, #1
    2f30:	str	r0, [sp]
    2f34:	beq	2f50 <coda_cursor_has_ascii_content+0x1ec>
    2f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
    2f3c:	ldr	r0, [r0, #8]
    2f40:	cmp	r0, #4
    2f44:	movw	r0, #0
    2f48:	moveq	r0, #1
    2f4c:	str	r0, [sp]
    2f50:	ldr	r0, [sp]
    2f54:	and	r0, r0, #1
    2f58:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f5c:	str	r0, [r1]
    2f60:	movw	r0, #0
    2f64:	str	r0, [fp, #-12]
    2f68:	ldr	r0, [fp, #-12]
    2f6c:	sub	sp, fp, #8
    2f70:	pop	{r4, r5, fp, pc}

00002f74 <coda_cursor_has_attributes>:
    2f74:	push	{fp, lr}
    2f78:	mov	fp, sp
    2f7c:	sub	sp, sp, #24
    2f80:	str	r0, [fp, #-8]
    2f84:	str	r1, [sp, #12]
    2f88:	ldr	r0, [fp, #-8]
    2f8c:	movw	r1, #0
    2f90:	cmp	r0, r1
    2f94:	beq	2fcc <coda_cursor_has_attributes+0x58>
    2f98:	ldr	r0, [fp, #-8]
    2f9c:	ldr	r0, [r0, #4]
    2fa0:	cmp	r0, #0
    2fa4:	ble	2fcc <coda_cursor_has_attributes+0x58>
    2fa8:	ldr	r0, [fp, #-8]
    2fac:	add	r1, r0, #8
    2fb0:	ldr	r0, [r0, #4]
    2fb4:	sub	r0, r0, #1
    2fb8:	add	r0, r1, r0, lsl #4
    2fbc:	ldr	r0, [r0]
    2fc0:	movw	r1, #0
    2fc4:	cmp	r0, r1
    2fc8:	bne	2ff4 <coda_cursor_has_attributes+0x80>
    2fcc:	mvn	r0, #99	; 0x63
    2fd0:	movw	r1, #0
    2fd4:	movt	r1, #0
    2fd8:	movw	r2, #0
    2fdc:	movt	r2, #0
    2fe0:	movw	r3, #1528	; 0x5f8
    2fe4:	bl	0 <coda_set_error>
    2fe8:	mvn	r0, #0
    2fec:	str	r0, [fp, #-4]
    2ff0:	b	30c0 <coda_cursor_has_attributes+0x14c>
    2ff4:	ldr	r0, [sp, #12]
    2ff8:	movw	r1, #0
    2ffc:	cmp	r0, r1
    3000:	bne	302c <coda_cursor_has_attributes+0xb8>
    3004:	mvn	r0, #99	; 0x63
    3008:	movw	r1, #0
    300c:	movt	r1, #0
    3010:	movw	r2, #0
    3014:	movt	r2, #0
    3018:	movw	r3, #1533	; 0x5fd
    301c:	bl	0 <coda_set_error>
    3020:	mvn	r0, #0
    3024:	str	r0, [fp, #-4]
    3028:	b	30c0 <coda_cursor_has_attributes+0x14c>
    302c:	ldr	r0, [fp, #-8]
    3030:	add	r1, r0, #8
    3034:	ldr	r0, [r0, #4]
    3038:	sub	r0, r0, #1
    303c:	add	r0, r1, r0, lsl #4
    3040:	ldr	r0, [r0]
    3044:	ldr	r0, [r0]
    3048:	cmp	r0, #100	; 0x64
    304c:	bcs	3070 <coda_cursor_has_attributes+0xfc>
    3050:	ldr	r0, [fp, #-8]
    3054:	add	r1, r0, #8
    3058:	ldr	r0, [r0, #4]
    305c:	sub	r0, r0, #1
    3060:	add	r0, r1, r0, lsl #4
    3064:	ldr	r0, [r0]
    3068:	str	r0, [sp, #4]
    306c:	b	3090 <coda_cursor_has_attributes+0x11c>
    3070:	ldr	r0, [fp, #-8]
    3074:	add	r1, r0, #8
    3078:	ldr	r0, [r0, #4]
    307c:	sub	r0, r0, #1
    3080:	add	r0, r1, r0, lsl #4
    3084:	ldr	r0, [r0]
    3088:	ldr	r0, [r0, #4]
    308c:	str	r0, [sp, #4]
    3090:	ldr	r0, [sp, #4]
    3094:	str	r0, [sp, #8]
    3098:	ldr	r0, [sp, #8]
    309c:	ldr	r0, [r0, #36]	; 0x24
    30a0:	movw	r1, #0
    30a4:	cmp	r0, r1
    30a8:	movw	r0, #0
    30ac:	movne	r0, #1
    30b0:	and	r0, r0, #1
    30b4:	ldr	r2, [sp, #12]
    30b8:	str	r0, [r2]
    30bc:	str	r1, [fp, #-4]
    30c0:	ldr	r0, [fp, #-4]
    30c4:	mov	sp, fp
    30c8:	pop	{fp, pc}

000030cc <coda_cursor_get_string_length>:
    30cc:	push	{fp, lr}
    30d0:	mov	fp, sp
    30d4:	sub	sp, sp, #24
    30d8:	str	r0, [fp, #-8]
    30dc:	str	r1, [sp, #12]
    30e0:	ldr	r0, [fp, #-8]
    30e4:	movw	r1, #0
    30e8:	cmp	r0, r1
    30ec:	beq	3124 <coda_cursor_get_string_length+0x58>
    30f0:	ldr	r0, [fp, #-8]
    30f4:	ldr	r0, [r0, #4]
    30f8:	cmp	r0, #0
    30fc:	ble	3124 <coda_cursor_get_string_length+0x58>
    3100:	ldr	r0, [fp, #-8]
    3104:	add	r1, r0, #8
    3108:	ldr	r0, [r0, #4]
    310c:	sub	r0, r0, #1
    3110:	add	r0, r1, r0, lsl #4
    3114:	ldr	r0, [r0]
    3118:	movw	r1, #0
    311c:	cmp	r0, r1
    3120:	bne	314c <coda_cursor_get_string_length+0x80>
    3124:	mvn	r0, #99	; 0x63
    3128:	movw	r1, #0
    312c:	movt	r1, #0
    3130:	movw	r2, #0
    3134:	movt	r2, #0
    3138:	movw	r3, #1559	; 0x617
    313c:	bl	0 <coda_set_error>
    3140:	mvn	r0, #0
    3144:	str	r0, [fp, #-4]
    3148:	b	3318 <coda_cursor_get_string_length+0x24c>
    314c:	ldr	r0, [sp, #12]
    3150:	movw	r1, #0
    3154:	cmp	r0, r1
    3158:	bne	3184 <coda_cursor_get_string_length+0xb8>
    315c:	mvn	r0, #99	; 0x63
    3160:	movw	r1, #0
    3164:	movt	r1, #0
    3168:	movw	r2, #0
    316c:	movt	r2, #0
    3170:	movw	r3, #1564	; 0x61c
    3174:	bl	0 <coda_set_error>
    3178:	mvn	r0, #0
    317c:	str	r0, [fp, #-4]
    3180:	b	3318 <coda_cursor_get_string_length+0x24c>
    3184:	ldr	r0, [fp, #-8]
    3188:	add	r1, sp, #8
    318c:	bl	2d64 <coda_cursor_has_ascii_content>
    3190:	cmp	r0, #0
    3194:	beq	31a4 <coda_cursor_get_string_length+0xd8>
    3198:	mvn	r0, #0
    319c:	str	r0, [fp, #-4]
    31a0:	b	3318 <coda_cursor_get_string_length+0x24c>
    31a4:	ldr	r0, [sp, #8]
    31a8:	cmp	r0, #0
    31ac:	bne	31cc <coda_cursor_get_string_length+0x100>
    31b0:	mvn	r0, #104	; 0x68
    31b4:	movw	r1, #0
    31b8:	movt	r1, #0
    31bc:	bl	0 <coda_set_error>
    31c0:	mvn	r0, #0
    31c4:	str	r0, [fp, #-4]
    31c8:	b	3318 <coda_cursor_get_string_length+0x24c>
    31cc:	ldr	r0, [fp, #-8]
    31d0:	ldr	r1, [r0, #4]
    31d4:	add	r0, r0, r1, lsl #4
    31d8:	ldr	r0, [r0, #-8]
    31dc:	ldr	r0, [r0]
    31e0:	cmp	r0, #0
    31e4:	str	r0, [sp, #4]
    31e8:	beq	3260 <coda_cursor_get_string_length+0x194>
    31ec:	b	31f0 <coda_cursor_get_string_length+0x124>
    31f0:	ldr	r0, [sp, #4]
    31f4:	cmp	r0, #1
    31f8:	beq	3274 <coda_cursor_get_string_length+0x1a8>
    31fc:	b	3200 <coda_cursor_get_string_length+0x134>
    3200:	ldr	r0, [sp, #4]
    3204:	cmp	r0, #100	; 0x64
    3208:	beq	3288 <coda_cursor_get_string_length+0x1bc>
    320c:	b	3210 <coda_cursor_get_string_length+0x144>
    3210:	ldr	r0, [sp, #4]
    3214:	cmp	r0, #101	; 0x65
    3218:	beq	329c <coda_cursor_get_string_length+0x1d0>
    321c:	b	3220 <coda_cursor_get_string_length+0x154>
    3220:	ldr	r0, [sp, #4]
    3224:	cmp	r0, #102	; 0x66
    3228:	beq	32b4 <coda_cursor_get_string_length+0x1e8>
    322c:	b	3230 <coda_cursor_get_string_length+0x164>
    3230:	ldr	r0, [sp, #4]
    3234:	cmp	r0, #103	; 0x67
    3238:	beq	32cc <coda_cursor_get_string_length+0x200>
    323c:	b	3240 <coda_cursor_get_string_length+0x174>
    3240:	ldr	r0, [sp, #4]
    3244:	cmp	r0, #104	; 0x68
    3248:	beq	32e0 <coda_cursor_get_string_length+0x214>
    324c:	b	3250 <coda_cursor_get_string_length+0x184>
    3250:	ldr	r0, [sp, #4]
    3254:	cmp	r0, #105	; 0x69
    3258:	beq	32f4 <coda_cursor_get_string_length+0x228>
    325c:	b	32f8 <coda_cursor_get_string_length+0x22c>
    3260:	ldr	r0, [fp, #-8]
    3264:	ldr	r1, [sp, #12]
    3268:	bl	0 <coda_ascii_cursor_get_string_length>
    326c:	str	r0, [fp, #-4]
    3270:	b	3318 <coda_cursor_get_string_length+0x24c>
    3274:	ldr	r0, [fp, #-8]
    3278:	ldr	r1, [sp, #12]
    327c:	bl	0 <coda_bin_cursor_get_string_length>
    3280:	str	r0, [fp, #-4]
    3284:	b	3318 <coda_cursor_get_string_length+0x24c>
    3288:	ldr	r0, [fp, #-8]
    328c:	ldr	r1, [sp, #12]
    3290:	bl	0 <coda_mem_cursor_get_string_length>
    3294:	str	r0, [fp, #-4]
    3298:	b	3318 <coda_cursor_get_string_length+0x24c>
    329c:	mvn	r0, #10
    32a0:	movw	r1, #0
    32a4:	bl	0 <coda_set_error>
    32a8:	mvn	r0, #0
    32ac:	str	r0, [fp, #-4]
    32b0:	b	3318 <coda_cursor_get_string_length+0x24c>
    32b4:	mvn	r0, #12
    32b8:	movw	r1, #0
    32bc:	bl	0 <coda_set_error>
    32c0:	mvn	r0, #0
    32c4:	str	r0, [fp, #-4]
    32c8:	b	3318 <coda_cursor_get_string_length+0x24c>
    32cc:	ldr	r0, [fp, #-8]
    32d0:	ldr	r1, [sp, #12]
    32d4:	bl	0 <coda_cdf_cursor_get_string_length>
    32d8:	str	r0, [fp, #-4]
    32dc:	b	3318 <coda_cursor_get_string_length+0x24c>
    32e0:	ldr	r0, [fp, #-8]
    32e4:	ldr	r1, [sp, #12]
    32e8:	bl	0 <coda_netcdf_cursor_get_string_length>
    32ec:	str	r0, [fp, #-4]
    32f0:	b	3318 <coda_cursor_get_string_length+0x24c>
    32f4:	b	32f8 <coda_cursor_get_string_length+0x22c>
    32f8:	movw	r0, #0
    32fc:	movt	r0, #0
    3300:	movw	r1, #0
    3304:	movt	r1, #0
    3308:	movw	r2, #1608	; 0x648
    330c:	movw	r3, #0
    3310:	movt	r3, #0
    3314:	bl	0 <__assert_fail>
    3318:	ldr	r0, [fp, #-4]
    331c:	mov	sp, fp
    3320:	pop	{fp, pc}

00003324 <coda_cursor_get_bit_size>:
    3324:	push	{fp, lr}
    3328:	mov	fp, sp
    332c:	sub	sp, sp, #16
    3330:	str	r0, [sp, #8]
    3334:	str	r1, [sp, #4]
    3338:	ldr	r0, [sp, #8]
    333c:	movw	r1, #0
    3340:	cmp	r0, r1
    3344:	beq	337c <coda_cursor_get_bit_size+0x58>
    3348:	ldr	r0, [sp, #8]
    334c:	ldr	r0, [r0, #4]
    3350:	cmp	r0, #0
    3354:	ble	337c <coda_cursor_get_bit_size+0x58>
    3358:	ldr	r0, [sp, #8]
    335c:	add	r1, r0, #8
    3360:	ldr	r0, [r0, #4]
    3364:	sub	r0, r0, #1
    3368:	add	r0, r1, r0, lsl #4
    336c:	ldr	r0, [r0]
    3370:	movw	r1, #0
    3374:	cmp	r0, r1
    3378:	bne	33a4 <coda_cursor_get_bit_size+0x80>
    337c:	mvn	r0, #99	; 0x63
    3380:	movw	r1, #0
    3384:	movt	r1, #0
    3388:	movw	r2, #0
    338c:	movt	r2, #0
    3390:	movw	r3, #1630	; 0x65e
    3394:	bl	0 <coda_set_error>
    3398:	mvn	r0, #0
    339c:	str	r0, [fp, #-4]
    33a0:	b	3450 <coda_cursor_get_bit_size+0x12c>
    33a4:	ldr	r0, [sp, #8]
    33a8:	ldr	r1, [r0, #4]
    33ac:	add	r0, r0, r1, lsl #4
    33b0:	ldr	r0, [r0, #-8]
    33b4:	ldr	r0, [r0]
    33b8:	cmp	r0, #0
    33bc:	str	r0, [sp]
    33c0:	beq	33fc <coda_cursor_get_bit_size+0xd8>
    33c4:	b	33c8 <coda_cursor_get_bit_size+0xa4>
    33c8:	ldr	r0, [sp]
    33cc:	cmp	r0, #1
    33d0:	beq	3410 <coda_cursor_get_bit_size+0xec>
    33d4:	b	33d8 <coda_cursor_get_bit_size+0xb4>
    33d8:	ldr	r0, [sp]
    33dc:	cmp	r0, #100	; 0x64
    33e0:	beq	3424 <coda_cursor_get_bit_size+0x100>
    33e4:	b	33e8 <coda_cursor_get_bit_size+0xc4>
    33e8:	ldr	r0, [sp]
    33ec:	sub	r1, r0, #101	; 0x65
    33f0:	cmp	r1, #5
    33f4:	bcc	3438 <coda_cursor_get_bit_size+0x114>
    33f8:	b	3448 <coda_cursor_get_bit_size+0x124>
    33fc:	ldr	r0, [sp, #8]
    3400:	ldr	r1, [sp, #4]
    3404:	bl	0 <coda_ascii_cursor_get_bit_size>
    3408:	str	r0, [fp, #-4]
    340c:	b	3450 <coda_cursor_get_bit_size+0x12c>
    3410:	ldr	r0, [sp, #8]
    3414:	ldr	r1, [sp, #4]
    3418:	bl	0 <coda_bin_cursor_get_bit_size>
    341c:	str	r0, [fp, #-4]
    3420:	b	3450 <coda_cursor_get_bit_size+0x12c>
    3424:	ldr	r0, [sp, #8]
    3428:	ldr	r1, [sp, #4]
    342c:	bl	0 <coda_mem_cursor_get_bit_size>
    3430:	str	r0, [fp, #-4]
    3434:	b	3450 <coda_cursor_get_bit_size+0x12c>
    3438:	ldr	r0, [sp, #4]
    343c:	mvn	r1, #0
    3440:	str	r1, [r0, #4]
    3444:	str	r1, [r0]
    3448:	movw	r0, #0
    344c:	str	r0, [fp, #-4]
    3450:	ldr	r0, [fp, #-4]
    3454:	mov	sp, fp
    3458:	pop	{fp, pc}

0000345c <coda_cursor_get_byte_size>:
    345c:	push	{fp, lr}
    3460:	mov	fp, sp
    3464:	sub	sp, sp, #24
    3468:	str	r0, [fp, #-8]
    346c:	str	r1, [sp, #12]
    3470:	ldr	r0, [fp, #-8]
    3474:	movw	r1, #0
    3478:	cmp	r0, r1
    347c:	beq	34b4 <coda_cursor_get_byte_size+0x58>
    3480:	ldr	r0, [fp, #-8]
    3484:	ldr	r0, [r0, #4]
    3488:	cmp	r0, #0
    348c:	ble	34b4 <coda_cursor_get_byte_size+0x58>
    3490:	ldr	r0, [fp, #-8]
    3494:	add	r1, r0, #8
    3498:	ldr	r0, [r0, #4]
    349c:	sub	r0, r0, #1
    34a0:	add	r0, r1, r0, lsl #4
    34a4:	ldr	r0, [r0]
    34a8:	movw	r1, #0
    34ac:	cmp	r0, r1
    34b0:	bne	34dc <coda_cursor_get_byte_size+0x80>
    34b4:	mvn	r0, #99	; 0x63
    34b8:	movw	r1, #0
    34bc:	movt	r1, #0
    34c0:	movw	r2, #0
    34c4:	movt	r2, #0
    34c8:	movw	r3, #1670	; 0x686
    34cc:	bl	0 <coda_set_error>
    34d0:	mvn	r0, #0
    34d4:	str	r0, [fp, #-4]
    34d8:	b	356c <coda_cursor_get_byte_size+0x110>
    34dc:	ldr	r0, [fp, #-8]
    34e0:	mov	r1, sp
    34e4:	bl	3324 <coda_cursor_get_bit_size>
    34e8:	cmp	r0, #0
    34ec:	beq	34fc <coda_cursor_get_byte_size+0xa0>
    34f0:	mvn	r0, #0
    34f4:	str	r0, [fp, #-4]
    34f8:	b	356c <coda_cursor_get_byte_size+0x110>
    34fc:	ldr	r0, [sp, #4]
    3500:	cmn	r0, #1
    3504:	bgt	3528 <coda_cursor_get_byte_size+0xcc>
    3508:	b	350c <coda_cursor_get_byte_size+0xb0>
    350c:	ldr	r0, [sp, #12]
    3510:	mvn	r1, #0
    3514:	str	r1, [r0, #4]
    3518:	str	r1, [r0]
    351c:	movw	r0, #0
    3520:	str	r0, [fp, #-4]
    3524:	b	356c <coda_cursor_get_byte_size+0x110>
    3528:	ldr	r0, [sp]
    352c:	ldr	r1, [sp, #4]
    3530:	lsr	r2, r0, #3
    3534:	orr	r2, r2, r1, lsl #29
    3538:	asr	r1, r1, #3
    353c:	and	r0, r0, #7
    3540:	adds	r3, r2, #1
    3544:	adc	ip, r1, #0
    3548:	cmp	r0, #0
    354c:	movne	r2, r3
    3550:	cmp	r0, #0
    3554:	movne	r1, ip
    3558:	ldr	r0, [sp, #12]
    355c:	str	r2, [r0]
    3560:	str	r1, [r0, #4]
    3564:	movw	r0, #0
    3568:	str	r0, [fp, #-4]
    356c:	ldr	r0, [fp, #-4]
    3570:	mov	sp, fp
    3574:	pop	{fp, pc}

00003578 <coda_cursor_get_num_elements>:
    3578:	push	{fp, lr}
    357c:	mov	fp, sp
    3580:	sub	sp, sp, #16
    3584:	str	r0, [sp, #8]
    3588:	str	r1, [sp, #4]
    358c:	ldr	r0, [sp, #8]
    3590:	movw	r1, #0
    3594:	cmp	r0, r1
    3598:	beq	35d0 <coda_cursor_get_num_elements+0x58>
    359c:	ldr	r0, [sp, #8]
    35a0:	ldr	r0, [r0, #4]
    35a4:	cmp	r0, #0
    35a8:	ble	35d0 <coda_cursor_get_num_elements+0x58>
    35ac:	ldr	r0, [sp, #8]
    35b0:	add	r1, r0, #8
    35b4:	ldr	r0, [r0, #4]
    35b8:	sub	r0, r0, #1
    35bc:	add	r0, r1, r0, lsl #4
    35c0:	ldr	r0, [r0]
    35c4:	movw	r1, #0
    35c8:	cmp	r0, r1
    35cc:	bne	35f8 <coda_cursor_get_num_elements+0x80>
    35d0:	mvn	r0, #99	; 0x63
    35d4:	movw	r1, #0
    35d8:	movt	r1, #0
    35dc:	movw	r2, #0
    35e0:	movt	r2, #0
    35e4:	movw	r3, #1704	; 0x6a8
    35e8:	bl	0 <coda_set_error>
    35ec:	mvn	r0, #0
    35f0:	str	r0, [fp, #-4]
    35f4:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    35f8:	ldr	r0, [sp, #8]
    35fc:	ldr	r1, [r0, #4]
    3600:	add	r0, r0, r1, lsl #4
    3604:	ldr	r0, [r0, #-8]
    3608:	ldr	r0, [r0]
    360c:	cmp	r0, #0
    3610:	str	r0, [sp]
    3614:	beq	368c <coda_cursor_get_num_elements+0x114>
    3618:	b	361c <coda_cursor_get_num_elements+0xa4>
    361c:	ldr	r0, [sp]
    3620:	cmp	r0, #1
    3624:	beq	36a0 <coda_cursor_get_num_elements+0x128>
    3628:	b	362c <coda_cursor_get_num_elements+0xb4>
    362c:	ldr	r0, [sp]
    3630:	cmp	r0, #100	; 0x64
    3634:	beq	36b4 <coda_cursor_get_num_elements+0x13c>
    3638:	b	363c <coda_cursor_get_num_elements+0xc4>
    363c:	ldr	r0, [sp]
    3640:	cmp	r0, #101	; 0x65
    3644:	beq	36c8 <coda_cursor_get_num_elements+0x150>
    3648:	b	364c <coda_cursor_get_num_elements+0xd4>
    364c:	ldr	r0, [sp]
    3650:	cmp	r0, #102	; 0x66
    3654:	beq	36e0 <coda_cursor_get_num_elements+0x168>
    3658:	b	365c <coda_cursor_get_num_elements+0xe4>
    365c:	ldr	r0, [sp]
    3660:	cmp	r0, #103	; 0x67
    3664:	beq	36f8 <coda_cursor_get_num_elements+0x180>
    3668:	b	366c <coda_cursor_get_num_elements+0xf4>
    366c:	ldr	r0, [sp]
    3670:	cmp	r0, #104	; 0x68
    3674:	beq	370c <coda_cursor_get_num_elements+0x194>
    3678:	b	367c <coda_cursor_get_num_elements+0x104>
    367c:	ldr	r0, [sp]
    3680:	cmp	r0, #105	; 0x69
    3684:	beq	3720 <coda_cursor_get_num_elements+0x1a8>
    3688:	b	3734 <coda_cursor_get_num_elements+0x1bc>
    368c:	ldr	r0, [sp, #8]
    3690:	ldr	r1, [sp, #4]
    3694:	bl	0 <coda_ascii_cursor_get_num_elements>
    3698:	str	r0, [fp, #-4]
    369c:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    36a0:	ldr	r0, [sp, #8]
    36a4:	ldr	r1, [sp, #4]
    36a8:	bl	0 <coda_bin_cursor_get_num_elements>
    36ac:	str	r0, [fp, #-4]
    36b0:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    36b4:	ldr	r0, [sp, #8]
    36b8:	ldr	r1, [sp, #4]
    36bc:	bl	0 <coda_mem_cursor_get_num_elements>
    36c0:	str	r0, [fp, #-4]
    36c4:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    36c8:	mvn	r0, #10
    36cc:	movw	r1, #0
    36d0:	bl	0 <coda_set_error>
    36d4:	mvn	r0, #0
    36d8:	str	r0, [fp, #-4]
    36dc:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    36e0:	mvn	r0, #12
    36e4:	movw	r1, #0
    36e8:	bl	0 <coda_set_error>
    36ec:	mvn	r0, #0
    36f0:	str	r0, [fp, #-4]
    36f4:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    36f8:	ldr	r0, [sp, #8]
    36fc:	ldr	r1, [sp, #4]
    3700:	bl	0 <coda_cdf_cursor_get_num_elements>
    3704:	str	r0, [fp, #-4]
    3708:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    370c:	ldr	r0, [sp, #8]
    3710:	ldr	r1, [sp, #4]
    3714:	bl	0 <coda_netcdf_cursor_get_num_elements>
    3718:	str	r0, [fp, #-4]
    371c:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    3720:	ldr	r0, [sp, #8]
    3724:	ldr	r1, [sp, #4]
    3728:	bl	0 <coda_grib_cursor_get_num_elements>
    372c:	str	r0, [fp, #-4]
    3730:	b	3754 <coda_cursor_get_num_elements+0x1dc>
    3734:	movw	r0, #0
    3738:	movt	r0, #0
    373c:	movw	r1, #0
    3740:	movt	r1, #0
    3744:	movw	r2, #1738	; 0x6ca
    3748:	movw	r3, #0
    374c:	movt	r3, #0
    3750:	bl	0 <__assert_fail>
    3754:	ldr	r0, [fp, #-4]
    3758:	mov	sp, fp
    375c:	pop	{fp, pc}

00003760 <coda_cursor_get_product_file>:
    3760:	push	{fp, lr}
    3764:	mov	fp, sp
    3768:	sub	sp, sp, #16
    376c:	str	r0, [sp, #8]
    3770:	str	r1, [sp, #4]
    3774:	ldr	r0, [sp, #8]
    3778:	movw	r1, #0
    377c:	cmp	r0, r1
    3780:	beq	37b8 <coda_cursor_get_product_file+0x58>
    3784:	ldr	r0, [sp, #8]
    3788:	ldr	r0, [r0, #4]
    378c:	cmp	r0, #0
    3790:	ble	37b8 <coda_cursor_get_product_file+0x58>
    3794:	ldr	r0, [sp, #8]
    3798:	add	r1, r0, #8
    379c:	ldr	r0, [r0, #4]
    37a0:	sub	r0, r0, #1
    37a4:	add	r0, r1, r0, lsl #4
    37a8:	ldr	r0, [r0]
    37ac:	movw	r1, #0
    37b0:	cmp	r0, r1
    37b4:	bne	37e0 <coda_cursor_get_product_file+0x80>
    37b8:	mvn	r0, #99	; 0x63
    37bc:	movw	r1, #0
    37c0:	movt	r1, #0
    37c4:	movw	r2, #0
    37c8:	movt	r2, #0
    37cc:	movw	r3, #1753	; 0x6d9
    37d0:	bl	0 <coda_set_error>
    37d4:	mvn	r0, #0
    37d8:	str	r0, [fp, #-4]
    37dc:	b	37f8 <coda_cursor_get_product_file+0x98>
    37e0:	ldr	r0, [sp, #8]
    37e4:	ldr	r0, [r0]
    37e8:	ldr	r1, [sp, #4]
    37ec:	str	r0, [r1]
    37f0:	movw	r0, #0
    37f4:	str	r0, [fp, #-4]
    37f8:	ldr	r0, [fp, #-4]
    37fc:	mov	sp, fp
    3800:	pop	{fp, pc}

00003804 <coda_cursor_get_depth>:
    3804:	push	{fp, lr}
    3808:	mov	fp, sp
    380c:	sub	sp, sp, #16
    3810:	str	r0, [sp, #8]
    3814:	str	r1, [sp, #4]
    3818:	ldr	r0, [sp, #8]
    381c:	movw	r1, #0
    3820:	cmp	r0, r1
    3824:	beq	385c <coda_cursor_get_depth+0x58>
    3828:	ldr	r0, [sp, #8]
    382c:	ldr	r0, [r0, #4]
    3830:	cmp	r0, #0
    3834:	ble	385c <coda_cursor_get_depth+0x58>
    3838:	ldr	r0, [sp, #8]
    383c:	add	r1, r0, #8
    3840:	ldr	r0, [r0, #4]
    3844:	sub	r0, r0, #1
    3848:	add	r0, r1, r0, lsl #4
    384c:	ldr	r0, [r0]
    3850:	movw	r1, #0
    3854:	cmp	r0, r1
    3858:	bne	3884 <coda_cursor_get_depth+0x80>
    385c:	mvn	r0, #99	; 0x63
    3860:	movw	r1, #0
    3864:	movt	r1, #0
    3868:	movw	r2, #0
    386c:	movt	r2, #0
    3870:	movw	r3, #1775	; 0x6ef
    3874:	bl	0 <coda_set_error>
    3878:	mvn	r0, #0
    387c:	str	r0, [fp, #-4]
    3880:	b	38d8 <coda_cursor_get_depth+0xd4>
    3884:	ldr	r0, [sp, #4]
    3888:	movw	r1, #0
    388c:	cmp	r0, r1
    3890:	bne	38bc <coda_cursor_get_depth+0xb8>
    3894:	mvn	r0, #99	; 0x63
    3898:	movw	r1, #0
    389c:	movt	r1, #0
    38a0:	movw	r2, #0
    38a4:	movt	r2, #0
    38a8:	movw	r3, #1781	; 0x6f5
    38ac:	bl	0 <coda_set_error>
    38b0:	mvn	r0, #0
    38b4:	str	r0, [fp, #-4]
    38b8:	b	38d8 <coda_cursor_get_depth+0xd4>
    38bc:	ldr	r0, [sp, #8]
    38c0:	ldr	r0, [r0, #4]
    38c4:	sub	r0, r0, #1
    38c8:	ldr	r1, [sp, #4]
    38cc:	str	r0, [r1]
    38d0:	movw	r0, #0
    38d4:	str	r0, [fp, #-4]
    38d8:	ldr	r0, [fp, #-4]
    38dc:	mov	sp, fp
    38e0:	pop	{fp, pc}

000038e4 <coda_cursor_get_index>:
    38e4:	push	{fp, lr}
    38e8:	mov	fp, sp
    38ec:	sub	sp, sp, #16
    38f0:	str	r0, [sp, #8]
    38f4:	str	r1, [sp, #4]
    38f8:	ldr	r0, [sp, #8]
    38fc:	movw	r1, #0
    3900:	cmp	r0, r1
    3904:	beq	393c <coda_cursor_get_index+0x58>
    3908:	ldr	r0, [sp, #8]
    390c:	ldr	r0, [r0, #4]
    3910:	cmp	r0, #1
    3914:	ble	393c <coda_cursor_get_index+0x58>
    3918:	ldr	r0, [sp, #8]
    391c:	add	r1, r0, #8
    3920:	ldr	r0, [r0, #4]
    3924:	sub	r0, r0, #1
    3928:	add	r0, r1, r0, lsl #4
    392c:	ldr	r0, [r0]
    3930:	movw	r1, #0
    3934:	cmp	r0, r1
    3938:	bne	3964 <coda_cursor_get_index+0x80>
    393c:	mvn	r0, #99	; 0x63
    3940:	movw	r1, #0
    3944:	movt	r1, #0
    3948:	movw	r2, #0
    394c:	movt	r2, #0
    3950:	movw	r3, #1805	; 0x70d
    3954:	bl	0 <coda_set_error>
    3958:	mvn	r0, #0
    395c:	str	r0, [fp, #-4]
    3960:	b	39c4 <coda_cursor_get_index+0xe0>
    3964:	ldr	r0, [sp, #4]
    3968:	movw	r1, #0
    396c:	cmp	r0, r1
    3970:	bne	399c <coda_cursor_get_index+0xb8>
    3974:	mvn	r0, #99	; 0x63
    3978:	movw	r1, #0
    397c:	movt	r1, #0
    3980:	movw	r2, #0
    3984:	movt	r2, #0
    3988:	movw	r3, #1811	; 0x713
    398c:	bl	0 <coda_set_error>
    3990:	mvn	r0, #0
    3994:	str	r0, [fp, #-4]
    3998:	b	39c4 <coda_cursor_get_index+0xe0>
    399c:	ldr	r0, [sp, #8]
    39a0:	add	r1, r0, #8
    39a4:	ldr	r0, [r0, #4]
    39a8:	sub	r0, r0, #1
    39ac:	add	r0, r1, r0, lsl #4
    39b0:	ldr	r0, [r0, #4]
    39b4:	ldr	r1, [sp, #4]
    39b8:	str	r0, [r1]
    39bc:	movw	r0, #0
    39c0:	str	r0, [fp, #-4]
    39c4:	ldr	r0, [fp, #-4]
    39c8:	mov	sp, fp
    39cc:	pop	{fp, pc}

000039d0 <coda_cursor_get_file_bit_offset>:
    39d0:	push	{fp, lr}
    39d4:	mov	fp, sp
    39d8:	sub	sp, sp, #16
    39dc:	str	r0, [sp, #8]
    39e0:	str	r1, [sp, #4]
    39e4:	ldr	r0, [sp, #8]
    39e8:	movw	r1, #0
    39ec:	cmp	r0, r1
    39f0:	beq	3a28 <coda_cursor_get_file_bit_offset+0x58>
    39f4:	ldr	r0, [sp, #8]
    39f8:	ldr	r0, [r0, #4]
    39fc:	cmp	r0, #0
    3a00:	ble	3a28 <coda_cursor_get_file_bit_offset+0x58>
    3a04:	ldr	r0, [sp, #8]
    3a08:	add	r1, r0, #8
    3a0c:	ldr	r0, [r0, #4]
    3a10:	sub	r0, r0, #1
    3a14:	add	r0, r1, r0, lsl #4
    3a18:	ldr	r0, [r0]
    3a1c:	movw	r1, #0
    3a20:	cmp	r0, r1
    3a24:	bne	3a50 <coda_cursor_get_file_bit_offset+0x80>
    3a28:	mvn	r0, #99	; 0x63
    3a2c:	movw	r1, #0
    3a30:	movt	r1, #0
    3a34:	movw	r2, #0
    3a38:	movt	r2, #0
    3a3c:	movw	r3, #1833	; 0x729
    3a40:	bl	0 <coda_set_error>
    3a44:	mvn	r0, #0
    3a48:	str	r0, [fp, #-4]
    3a4c:	b	3af8 <coda_cursor_get_file_bit_offset+0x128>
    3a50:	ldr	r0, [sp, #4]
    3a54:	movw	r1, #0
    3a58:	cmp	r0, r1
    3a5c:	bne	3a88 <coda_cursor_get_file_bit_offset+0xb8>
    3a60:	mvn	r0, #99	; 0x63
    3a64:	movw	r1, #0
    3a68:	movt	r1, #0
    3a6c:	movw	r2, #0
    3a70:	movt	r2, #0
    3a74:	movw	r3, #1839	; 0x72f
    3a78:	bl	0 <coda_set_error>
    3a7c:	mvn	r0, #0
    3a80:	str	r0, [fp, #-4]
    3a84:	b	3af8 <coda_cursor_get_file_bit_offset+0x128>
    3a88:	ldr	r0, [sp, #8]
    3a8c:	ldr	r1, [r0, #4]
    3a90:	add	r0, r0, r1, lsl #4
    3a94:	ldr	r0, [r0, #-8]
    3a98:	ldr	r0, [r0]
    3a9c:	cmp	r0, #2
    3aa0:	str	r0, [sp]
    3aa4:	bcc	3ac0 <coda_cursor_get_file_bit_offset+0xf0>
    3aa8:	b	3aac <coda_cursor_get_file_bit_offset+0xdc>
    3aac:	ldr	r0, [sp]
    3ab0:	sub	r1, r0, #100	; 0x64
    3ab4:	cmp	r1, #6
    3ab8:	bcc	3ae0 <coda_cursor_get_file_bit_offset+0x110>
    3abc:	b	3af0 <coda_cursor_get_file_bit_offset+0x120>
    3ac0:	ldr	r0, [sp, #8]
    3ac4:	ldr	r1, [r0, #4]
    3ac8:	ldr	r1, [r0, r1, lsl #4]!
    3acc:	ldr	r0, [r0, #4]
    3ad0:	ldr	r2, [sp, #4]
    3ad4:	str	r0, [r2, #4]
    3ad8:	str	r1, [r2]
    3adc:	b	3af0 <coda_cursor_get_file_bit_offset+0x120>
    3ae0:	ldr	r0, [sp, #4]
    3ae4:	mvn	r1, #0
    3ae8:	str	r1, [r0, #4]
    3aec:	str	r1, [r0]
    3af0:	movw	r0, #0
    3af4:	str	r0, [fp, #-4]
    3af8:	ldr	r0, [fp, #-4]
    3afc:	mov	sp, fp
    3b00:	pop	{fp, pc}

00003b04 <coda_cursor_get_file_byte_offset>:
    3b04:	push	{fp, lr}
    3b08:	mov	fp, sp
    3b0c:	sub	sp, sp, #16
    3b10:	str	r0, [sp, #8]
    3b14:	str	r1, [sp, #4]
    3b18:	ldr	r0, [sp, #8]
    3b1c:	movw	r1, #0
    3b20:	cmp	r0, r1
    3b24:	beq	3b5c <coda_cursor_get_file_byte_offset+0x58>
    3b28:	ldr	r0, [sp, #8]
    3b2c:	ldr	r0, [r0, #4]
    3b30:	cmp	r0, #0
    3b34:	ble	3b5c <coda_cursor_get_file_byte_offset+0x58>
    3b38:	ldr	r0, [sp, #8]
    3b3c:	add	r1, r0, #8
    3b40:	ldr	r0, [r0, #4]
    3b44:	sub	r0, r0, #1
    3b48:	add	r0, r1, r0, lsl #4
    3b4c:	ldr	r0, [r0]
    3b50:	movw	r1, #0
    3b54:	cmp	r0, r1
    3b58:	bne	3b84 <coda_cursor_get_file_byte_offset+0x80>
    3b5c:	mvn	r0, #99	; 0x63
    3b60:	movw	r1, #0
    3b64:	movt	r1, #0
    3b68:	movw	r2, #0
    3b6c:	movt	r2, #0
    3b70:	movw	r3, #1875	; 0x753
    3b74:	bl	0 <coda_set_error>
    3b78:	mvn	r0, #0
    3b7c:	str	r0, [fp, #-4]
    3b80:	b	3c78 <coda_cursor_get_file_byte_offset+0x174>
    3b84:	ldr	r0, [sp, #4]
    3b88:	movw	r1, #0
    3b8c:	cmp	r0, r1
    3b90:	bne	3bbc <coda_cursor_get_file_byte_offset+0xb8>
    3b94:	mvn	r0, #99	; 0x63
    3b98:	movw	r1, #0
    3b9c:	movt	r1, #0
    3ba0:	movw	r2, #0
    3ba4:	movt	r2, #0
    3ba8:	movw	r3, #1881	; 0x759
    3bac:	bl	0 <coda_set_error>
    3bb0:	mvn	r0, #0
    3bb4:	str	r0, [fp, #-4]
    3bb8:	b	3c78 <coda_cursor_get_file_byte_offset+0x174>
    3bbc:	ldr	r0, [sp, #8]
    3bc0:	ldr	r1, [r0, #4]
    3bc4:	add	r0, r0, r1, lsl #4
    3bc8:	ldr	r0, [r0, #-8]
    3bcc:	ldr	r0, [r0]
    3bd0:	cmp	r0, #2
    3bd4:	str	r0, [sp]
    3bd8:	bcc	3bf4 <coda_cursor_get_file_byte_offset+0xf0>
    3bdc:	b	3be0 <coda_cursor_get_file_byte_offset+0xdc>
    3be0:	ldr	r0, [sp]
    3be4:	sub	r1, r0, #100	; 0x64
    3be8:	cmp	r1, #6
    3bec:	bcc	3c54 <coda_cursor_get_file_byte_offset+0x150>
    3bf0:	b	3c70 <coda_cursor_get_file_byte_offset+0x16c>
    3bf4:	ldr	r0, [sp, #8]
    3bf8:	ldr	r1, [r0, #4]
    3bfc:	ldr	r1, [r0, r1, lsl #4]!
    3c00:	ldr	r0, [r0, #4]
    3c04:	and	r0, r1, r0
    3c08:	cmn	r0, #1
    3c0c:	bne	3c28 <coda_cursor_get_file_byte_offset+0x124>
    3c10:	b	3c14 <coda_cursor_get_file_byte_offset+0x110>
    3c14:	ldr	r0, [sp, #4]
    3c18:	mvn	r1, #0
    3c1c:	str	r1, [r0, #4]
    3c20:	str	r1, [r0]
    3c24:	b	3c50 <coda_cursor_get_file_byte_offset+0x14c>
    3c28:	ldr	r0, [sp, #8]
    3c2c:	ldr	r1, [r0, #4]
    3c30:	ldr	r1, [r0, r1, lsl #4]!
    3c34:	ldr	r0, [r0, #4]
    3c38:	lsr	r1, r1, #3
    3c3c:	orr	r1, r1, r0, lsl #29
    3c40:	asr	r0, r0, #3
    3c44:	ldr	r2, [sp, #4]
    3c48:	str	r0, [r2, #4]
    3c4c:	str	r1, [r2]
    3c50:	b	3c70 <coda_cursor_get_file_byte_offset+0x16c>
    3c54:	ldr	r0, [sp, #4]
    3c58:	mvn	r1, #0
    3c5c:	str	r1, [r0, #4]
    3c60:	str	r1, [r0]
    3c64:	mvn	r0, #0
    3c68:	str	r0, [fp, #-4]
    3c6c:	b	3c78 <coda_cursor_get_file_byte_offset+0x174>
    3c70:	movw	r0, #0
    3c74:	str	r0, [fp, #-4]
    3c78:	ldr	r0, [fp, #-4]
    3c7c:	mov	sp, fp
    3c80:	pop	{fp, pc}

00003c84 <coda_cursor_get_format>:
    3c84:	push	{fp, lr}
    3c88:	mov	fp, sp
    3c8c:	sub	sp, sp, #24
    3c90:	str	r0, [fp, #-8]
    3c94:	str	r1, [sp, #12]
    3c98:	ldr	r0, [fp, #-8]
    3c9c:	movw	r1, #0
    3ca0:	cmp	r0, r1
    3ca4:	beq	3cdc <coda_cursor_get_format+0x58>
    3ca8:	ldr	r0, [fp, #-8]
    3cac:	ldr	r0, [r0, #4]
    3cb0:	cmp	r0, #0
    3cb4:	ble	3cdc <coda_cursor_get_format+0x58>
    3cb8:	ldr	r0, [fp, #-8]
    3cbc:	add	r1, r0, #8
    3cc0:	ldr	r0, [r0, #4]
    3cc4:	sub	r0, r0, #1
    3cc8:	add	r0, r1, r0, lsl #4
    3ccc:	ldr	r0, [r0]
    3cd0:	movw	r1, #0
    3cd4:	cmp	r0, r1
    3cd8:	bne	3d04 <coda_cursor_get_format+0x80>
    3cdc:	mvn	r0, #99	; 0x63
    3ce0:	movw	r1, #0
    3ce4:	movt	r1, #0
    3ce8:	movw	r2, #0
    3cec:	movt	r2, #0
    3cf0:	movw	r3, #1925	; 0x785
    3cf4:	bl	0 <coda_set_error>
    3cf8:	mvn	r0, #0
    3cfc:	str	r0, [fp, #-4]
    3d00:	b	3dc0 <coda_cursor_get_format+0x13c>
    3d04:	ldr	r0, [sp, #12]
    3d08:	movw	r1, #0
    3d0c:	cmp	r0, r1
    3d10:	bne	3d3c <coda_cursor_get_format+0xb8>
    3d14:	mvn	r0, #99	; 0x63
    3d18:	movw	r1, #0
    3d1c:	movt	r1, #0
    3d20:	movw	r2, #0
    3d24:	movt	r2, #0
    3d28:	movw	r3, #1930	; 0x78a
    3d2c:	bl	0 <coda_set_error>
    3d30:	mvn	r0, #0
    3d34:	str	r0, [fp, #-4]
    3d38:	b	3dc0 <coda_cursor_get_format+0x13c>
    3d3c:	ldr	r0, [fp, #-8]
    3d40:	add	r1, r0, #8
    3d44:	ldr	r0, [r0, #4]
    3d48:	sub	r0, r0, #1
    3d4c:	add	r0, r1, r0, lsl #4
    3d50:	ldr	r0, [r0]
    3d54:	ldr	r0, [r0]
    3d58:	cmp	r0, #100	; 0x64
    3d5c:	bcs	3d80 <coda_cursor_get_format+0xfc>
    3d60:	ldr	r0, [fp, #-8]
    3d64:	add	r1, r0, #8
    3d68:	ldr	r0, [r0, #4]
    3d6c:	sub	r0, r0, #1
    3d70:	add	r0, r1, r0, lsl #4
    3d74:	ldr	r0, [r0]
    3d78:	str	r0, [sp, #4]
    3d7c:	b	3da0 <coda_cursor_get_format+0x11c>
    3d80:	ldr	r0, [fp, #-8]
    3d84:	add	r1, r0, #8
    3d88:	ldr	r0, [r0, #4]
    3d8c:	sub	r0, r0, #1
    3d90:	add	r0, r1, r0, lsl #4
    3d94:	ldr	r0, [r0]
    3d98:	ldr	r0, [r0, #4]
    3d9c:	str	r0, [sp, #4]
    3da0:	ldr	r0, [sp, #4]
    3da4:	str	r0, [sp, #8]
    3da8:	ldr	r0, [sp, #8]
    3dac:	ldr	r0, [r0]
    3db0:	ldr	r1, [sp, #12]
    3db4:	str	r0, [r1]
    3db8:	movw	r0, #0
    3dbc:	str	r0, [fp, #-4]
    3dc0:	ldr	r0, [fp, #-4]
    3dc4:	mov	sp, fp
    3dc8:	pop	{fp, pc}

00003dcc <coda_cursor_get_type_class>:
    3dcc:	push	{fp, lr}
    3dd0:	mov	fp, sp
    3dd4:	sub	sp, sp, #24
    3dd8:	str	r0, [fp, #-8]
    3ddc:	str	r1, [sp, #12]
    3de0:	ldr	r0, [fp, #-8]
    3de4:	movw	r1, #0
    3de8:	cmp	r0, r1
    3dec:	beq	3e24 <coda_cursor_get_type_class+0x58>
    3df0:	ldr	r0, [fp, #-8]
    3df4:	ldr	r0, [r0, #4]
    3df8:	cmp	r0, #0
    3dfc:	ble	3e24 <coda_cursor_get_type_class+0x58>
    3e00:	ldr	r0, [fp, #-8]
    3e04:	add	r1, r0, #8
    3e08:	ldr	r0, [r0, #4]
    3e0c:	sub	r0, r0, #1
    3e10:	add	r0, r1, r0, lsl #4
    3e14:	ldr	r0, [r0]
    3e18:	movw	r1, #0
    3e1c:	cmp	r0, r1
    3e20:	bne	3e4c <coda_cursor_get_type_class+0x80>
    3e24:	mvn	r0, #99	; 0x63
    3e28:	movw	r1, #0
    3e2c:	movt	r1, #0
    3e30:	movw	r2, #0
    3e34:	movt	r2, #0
    3e38:	movw	r3, #1954	; 0x7a2
    3e3c:	bl	0 <coda_set_error>
    3e40:	mvn	r0, #0
    3e44:	str	r0, [fp, #-4]
    3e48:	b	3f08 <coda_cursor_get_type_class+0x13c>
    3e4c:	ldr	r0, [sp, #12]
    3e50:	movw	r1, #0
    3e54:	cmp	r0, r1
    3e58:	bne	3e84 <coda_cursor_get_type_class+0xb8>
    3e5c:	mvn	r0, #99	; 0x63
    3e60:	movw	r1, #0
    3e64:	movt	r1, #0
    3e68:	movw	r2, #0
    3e6c:	movt	r2, #0
    3e70:	movw	r3, #1959	; 0x7a7
    3e74:	bl	0 <coda_set_error>
    3e78:	mvn	r0, #0
    3e7c:	str	r0, [fp, #-4]
    3e80:	b	3f08 <coda_cursor_get_type_class+0x13c>
    3e84:	ldr	r0, [fp, #-8]
    3e88:	add	r1, r0, #8
    3e8c:	ldr	r0, [r0, #4]
    3e90:	sub	r0, r0, #1
    3e94:	add	r0, r1, r0, lsl #4
    3e98:	ldr	r0, [r0]
    3e9c:	ldr	r0, [r0]
    3ea0:	cmp	r0, #100	; 0x64
    3ea4:	bcs	3ec8 <coda_cursor_get_type_class+0xfc>
    3ea8:	ldr	r0, [fp, #-8]
    3eac:	add	r1, r0, #8
    3eb0:	ldr	r0, [r0, #4]
    3eb4:	sub	r0, r0, #1
    3eb8:	add	r0, r1, r0, lsl #4
    3ebc:	ldr	r0, [r0]
    3ec0:	str	r0, [sp, #4]
    3ec4:	b	3ee8 <coda_cursor_get_type_class+0x11c>
    3ec8:	ldr	r0, [fp, #-8]
    3ecc:	add	r1, r0, #8
    3ed0:	ldr	r0, [r0, #4]
    3ed4:	sub	r0, r0, #1
    3ed8:	add	r0, r1, r0, lsl #4
    3edc:	ldr	r0, [r0]
    3ee0:	ldr	r0, [r0, #4]
    3ee4:	str	r0, [sp, #4]
    3ee8:	ldr	r0, [sp, #4]
    3eec:	str	r0, [sp, #8]
    3ef0:	ldr	r0, [sp, #8]
    3ef4:	ldr	r0, [r0, #8]
    3ef8:	ldr	r1, [sp, #12]
    3efc:	str	r0, [r1]
    3f00:	movw	r0, #0
    3f04:	str	r0, [fp, #-4]
    3f08:	ldr	r0, [fp, #-4]
    3f0c:	mov	sp, fp
    3f10:	pop	{fp, pc}

00003f14 <coda_cursor_get_read_type>:
    3f14:	push	{fp, lr}
    3f18:	mov	fp, sp
    3f1c:	sub	sp, sp, #16
    3f20:	str	r0, [sp, #8]
    3f24:	str	r1, [sp, #4]
    3f28:	ldr	r0, [sp, #8]
    3f2c:	movw	r1, #0
    3f30:	cmp	r0, r1
    3f34:	beq	3f6c <coda_cursor_get_read_type+0x58>
    3f38:	ldr	r0, [sp, #8]
    3f3c:	ldr	r0, [r0, #4]
    3f40:	cmp	r0, #0
    3f44:	ble	3f6c <coda_cursor_get_read_type+0x58>
    3f48:	ldr	r0, [sp, #8]
    3f4c:	add	r1, r0, #8
    3f50:	ldr	r0, [r0, #4]
    3f54:	sub	r0, r0, #1
    3f58:	add	r0, r1, r0, lsl #4
    3f5c:	ldr	r0, [r0]
    3f60:	movw	r1, #0
    3f64:	cmp	r0, r1
    3f68:	bne	3f94 <coda_cursor_get_read_type+0x80>
    3f6c:	mvn	r0, #99	; 0x63
    3f70:	movw	r1, #0
    3f74:	movt	r1, #0
    3f78:	movw	r2, #0
    3f7c:	movt	r2, #0
    3f80:	movw	r3, #1982	; 0x7be
    3f84:	bl	0 <coda_set_error>
    3f88:	mvn	r0, #0
    3f8c:	str	r0, [fp, #-4]
    3f90:	b	4008 <coda_cursor_get_read_type+0xf4>
    3f94:	ldr	r0, [sp, #8]
    3f98:	add	r1, r0, #8
    3f9c:	ldr	r0, [r0, #4]
    3fa0:	sub	r0, r0, #1
    3fa4:	add	r0, r1, r0, lsl #4
    3fa8:	ldr	r0, [r0]
    3fac:	ldr	r0, [r0]
    3fb0:	cmp	r0, #100	; 0x64
    3fb4:	bcs	3fd8 <coda_cursor_get_read_type+0xc4>
    3fb8:	ldr	r0, [sp, #8]
    3fbc:	add	r1, r0, #8
    3fc0:	ldr	r0, [r0, #4]
    3fc4:	sub	r0, r0, #1
    3fc8:	add	r0, r1, r0, lsl #4
    3fcc:	ldr	r0, [r0]
    3fd0:	str	r0, [sp]
    3fd4:	b	3ff8 <coda_cursor_get_read_type+0xe4>
    3fd8:	ldr	r0, [sp, #8]
    3fdc:	add	r1, r0, #8
    3fe0:	ldr	r0, [r0, #4]
    3fe4:	sub	r0, r0, #1
    3fe8:	add	r0, r1, r0, lsl #4
    3fec:	ldr	r0, [r0]
    3ff0:	ldr	r0, [r0, #4]
    3ff4:	str	r0, [sp]
    3ff8:	ldr	r0, [sp]
    3ffc:	ldr	r1, [sp, #4]
    4000:	bl	0 <coda_type_get_read_type>
    4004:	str	r0, [fp, #-4]
    4008:	ldr	r0, [fp, #-4]
    400c:	mov	sp, fp
    4010:	pop	{fp, pc}

00004014 <coda_cursor_get_special_type>:
    4014:	push	{fp, lr}
    4018:	mov	fp, sp
    401c:	sub	sp, sp, #16
    4020:	str	r0, [sp, #8]
    4024:	str	r1, [sp, #4]
    4028:	ldr	r0, [sp, #8]
    402c:	movw	r1, #0
    4030:	cmp	r0, r1
    4034:	beq	406c <coda_cursor_get_special_type+0x58>
    4038:	ldr	r0, [sp, #8]
    403c:	ldr	r0, [r0, #4]
    4040:	cmp	r0, #0
    4044:	ble	406c <coda_cursor_get_special_type+0x58>
    4048:	ldr	r0, [sp, #8]
    404c:	add	r1, r0, #8
    4050:	ldr	r0, [r0, #4]
    4054:	sub	r0, r0, #1
    4058:	add	r0, r1, r0, lsl #4
    405c:	ldr	r0, [r0]
    4060:	movw	r1, #0
    4064:	cmp	r0, r1
    4068:	bne	4094 <coda_cursor_get_special_type+0x80>
    406c:	mvn	r0, #99	; 0x63
    4070:	movw	r1, #0
    4074:	movt	r1, #0
    4078:	movw	r2, #0
    407c:	movt	r2, #0
    4080:	movw	r3, #2003	; 0x7d3
    4084:	bl	0 <coda_set_error>
    4088:	mvn	r0, #0
    408c:	str	r0, [fp, #-4]
    4090:	b	4140 <coda_cursor_get_special_type+0x12c>
    4094:	ldr	r0, [sp, #4]
    4098:	movw	r1, #0
    409c:	cmp	r0, r1
    40a0:	bne	40cc <coda_cursor_get_special_type+0xb8>
    40a4:	mvn	r0, #99	; 0x63
    40a8:	movw	r1, #0
    40ac:	movt	r1, #0
    40b0:	movw	r2, #0
    40b4:	movt	r2, #0
    40b8:	movw	r3, #2008	; 0x7d8
    40bc:	bl	0 <coda_set_error>
    40c0:	mvn	r0, #0
    40c4:	str	r0, [fp, #-4]
    40c8:	b	4140 <coda_cursor_get_special_type+0x12c>
    40cc:	ldr	r0, [sp, #8]
    40d0:	add	r1, r0, #8
    40d4:	ldr	r0, [r0, #4]
    40d8:	sub	r0, r0, #1
    40dc:	add	r0, r1, r0, lsl #4
    40e0:	ldr	r0, [r0]
    40e4:	ldr	r0, [r0]
    40e8:	cmp	r0, #100	; 0x64
    40ec:	bcs	4110 <coda_cursor_get_special_type+0xfc>
    40f0:	ldr	r0, [sp, #8]
    40f4:	add	r1, r0, #8
    40f8:	ldr	r0, [r0, #4]
    40fc:	sub	r0, r0, #1
    4100:	add	r0, r1, r0, lsl #4
    4104:	ldr	r0, [r0]
    4108:	str	r0, [sp]
    410c:	b	4130 <coda_cursor_get_special_type+0x11c>
    4110:	ldr	r0, [sp, #8]
    4114:	add	r1, r0, #8
    4118:	ldr	r0, [r0, #4]
    411c:	sub	r0, r0, #1
    4120:	add	r0, r1, r0, lsl #4
    4124:	ldr	r0, [r0]
    4128:	ldr	r0, [r0, #4]
    412c:	str	r0, [sp]
    4130:	ldr	r0, [sp]
    4134:	ldr	r1, [sp, #4]
    4138:	bl	0 <coda_type_get_special_type>
    413c:	str	r0, [fp, #-4]
    4140:	ldr	r0, [fp, #-4]
    4144:	mov	sp, fp
    4148:	pop	{fp, pc}

0000414c <coda_cursor_get_record_field_available_status>:
    414c:	push	{fp, lr}
    4150:	mov	fp, sp
    4154:	sub	sp, sp, #32
    4158:	str	r0, [fp, #-8]
    415c:	str	r1, [fp, #-12]
    4160:	str	r2, [sp, #16]
    4164:	ldr	r0, [fp, #-8]
    4168:	movw	r1, #0
    416c:	cmp	r0, r1
    4170:	beq	41bc <coda_cursor_get_record_field_available_status+0x70>
    4174:	ldr	r0, [fp, #-8]
    4178:	ldr	r0, [r0, #4]
    417c:	cmp	r0, #0
    4180:	ble	41bc <coda_cursor_get_record_field_available_status+0x70>
    4184:	ldr	r0, [fp, #-8]
    4188:	ldr	r0, [r0]
    418c:	movw	r1, #0
    4190:	cmp	r0, r1
    4194:	beq	41bc <coda_cursor_get_record_field_available_status+0x70>
    4198:	ldr	r0, [fp, #-8]
    419c:	add	r1, r0, #8
    41a0:	ldr	r0, [r0, #4]
    41a4:	sub	r0, r0, #1
    41a8:	add	r0, r1, r0, lsl #4
    41ac:	ldr	r0, [r0]
    41b0:	movw	r1, #0
    41b4:	cmp	r0, r1
    41b8:	bne	41e4 <coda_cursor_get_record_field_available_status+0x98>
    41bc:	mvn	r0, #99	; 0x63
    41c0:	movw	r1, #0
    41c4:	movt	r1, #0
    41c8:	movw	r2, #0
    41cc:	movt	r2, #0
    41d0:	movw	r3, #2085	; 0x825
    41d4:	bl	0 <coda_set_error>
    41d8:	mvn	r0, #0
    41dc:	str	r0, [fp, #-4]
    41e0:	b	438c <coda_cursor_get_record_field_available_status+0x240>
    41e4:	ldr	r0, [sp, #16]
    41e8:	movw	r1, #0
    41ec:	cmp	r0, r1
    41f0:	bne	421c <coda_cursor_get_record_field_available_status+0xd0>
    41f4:	mvn	r0, #99	; 0x63
    41f8:	movw	r1, #0
    41fc:	movt	r1, #0
    4200:	movw	r2, #0
    4204:	movt	r2, #0
    4208:	movw	r3, #2090	; 0x82a
    420c:	bl	0 <coda_set_error>
    4210:	mvn	r0, #0
    4214:	str	r0, [fp, #-4]
    4218:	b	438c <coda_cursor_get_record_field_available_status+0x240>
    421c:	ldr	r0, [fp, #-8]
    4220:	add	r1, r0, #8
    4224:	ldr	r0, [r0, #4]
    4228:	sub	r0, r0, #1
    422c:	add	r0, r1, r0, lsl #4
    4230:	ldr	r0, [r0]
    4234:	ldr	r0, [r0]
    4238:	cmp	r0, #100	; 0x64
    423c:	bcs	4260 <coda_cursor_get_record_field_available_status+0x114>
    4240:	ldr	r0, [fp, #-8]
    4244:	add	r1, r0, #8
    4248:	ldr	r0, [r0, #4]
    424c:	sub	r0, r0, #1
    4250:	add	r0, r1, r0, lsl #4
    4254:	ldr	r0, [r0]
    4258:	str	r0, [sp, #8]
    425c:	b	4280 <coda_cursor_get_record_field_available_status+0x134>
    4260:	ldr	r0, [fp, #-8]
    4264:	add	r1, r0, #8
    4268:	ldr	r0, [r0, #4]
    426c:	sub	r0, r0, #1
    4270:	add	r0, r1, r0, lsl #4
    4274:	ldr	r0, [r0]
    4278:	ldr	r0, [r0, #4]
    427c:	str	r0, [sp, #8]
    4280:	ldr	r0, [sp, #8]
    4284:	str	r0, [sp, #12]
    4288:	ldr	r0, [sp, #12]
    428c:	ldr	r0, [r0, #8]
    4290:	cmp	r0, #0
    4294:	beq	42cc <coda_cursor_get_record_field_available_status+0x180>
    4298:	ldr	r0, [sp, #12]
    429c:	ldr	r0, [r0, #8]
    42a0:	bl	0 <coda_type_get_class_name>
    42a4:	mvn	r1, #104	; 0x68
    42a8:	str	r0, [sp, #4]
    42ac:	mov	r0, r1
    42b0:	movw	r1, #0
    42b4:	movt	r1, #0
    42b8:	ldr	r2, [sp, #4]
    42bc:	bl	0 <coda_set_error>
    42c0:	mvn	r0, #0
    42c4:	str	r0, [fp, #-4]
    42c8:	b	438c <coda_cursor_get_record_field_available_status+0x240>
    42cc:	ldr	r0, [fp, #-8]
    42d0:	ldr	r1, [r0, #4]
    42d4:	add	r0, r0, r1, lsl #4
    42d8:	ldr	r0, [r0, #-8]
    42dc:	ldr	r0, [r0]
    42e0:	cmp	r0, #2
    42e4:	str	r0, [sp]
    42e8:	bcc	4324 <coda_cursor_get_record_field_available_status+0x1d8>
    42ec:	b	42f0 <coda_cursor_get_record_field_available_status+0x1a4>
    42f0:	ldr	r0, [sp]
    42f4:	cmp	r0, #100	; 0x64
    42f8:	beq	433c <coda_cursor_get_record_field_available_status+0x1f0>
    42fc:	b	4300 <coda_cursor_get_record_field_available_status+0x1b4>
    4300:	ldr	r0, [sp]
    4304:	sub	r1, r0, #101	; 0x65
    4308:	cmp	r1, #4
    430c:	bcc	4354 <coda_cursor_get_record_field_available_status+0x208>
    4310:	b	4314 <coda_cursor_get_record_field_available_status+0x1c8>
    4314:	ldr	r0, [sp]
    4318:	cmp	r0, #105	; 0x69
    431c:	beq	4364 <coda_cursor_get_record_field_available_status+0x218>
    4320:	b	4384 <coda_cursor_get_record_field_available_status+0x238>
    4324:	ldr	r0, [fp, #-8]
    4328:	ldr	r1, [fp, #-12]
    432c:	ldr	r2, [sp, #16]
    4330:	bl	0 <coda_ascbin_cursor_get_record_field_available_status>
    4334:	str	r0, [fp, #-4]
    4338:	b	438c <coda_cursor_get_record_field_available_status+0x240>
    433c:	ldr	r0, [fp, #-8]
    4340:	ldr	r1, [fp, #-12]
    4344:	ldr	r2, [sp, #16]
    4348:	bl	0 <coda_mem_cursor_get_record_field_available_status>
    434c:	str	r0, [fp, #-4]
    4350:	b	438c <coda_cursor_get_record_field_available_status+0x240>
    4354:	ldr	r0, [sp, #16]
    4358:	movw	r1, #1
    435c:	str	r1, [r0]
    4360:	b	4384 <coda_cursor_get_record_field_available_status+0x238>
    4364:	movw	r0, #0
    4368:	movt	r0, #0
    436c:	movw	r1, #0
    4370:	movt	r1, #0
    4374:	movw	r2, #2117	; 0x845
    4378:	movw	r3, #0
    437c:	movt	r3, #0
    4380:	bl	0 <__assert_fail>
    4384:	movw	r0, #0
    4388:	str	r0, [fp, #-4]
    438c:	ldr	r0, [fp, #-4]
    4390:	mov	sp, fp
    4394:	pop	{fp, pc}

00004398 <coda_cursor_get_available_union_field_index>:
    4398:	push	{fp, lr}
    439c:	mov	fp, sp
    43a0:	sub	sp, sp, #32
    43a4:	str	r0, [fp, #-8]
    43a8:	str	r1, [fp, #-12]
    43ac:	ldr	r0, [fp, #-8]
    43b0:	movw	r1, #0
    43b4:	cmp	r0, r1
    43b8:	beq	4404 <coda_cursor_get_available_union_field_index+0x6c>
    43bc:	ldr	r0, [fp, #-8]
    43c0:	ldr	r0, [r0, #4]
    43c4:	cmp	r0, #0
    43c8:	ble	4404 <coda_cursor_get_available_union_field_index+0x6c>
    43cc:	ldr	r0, [fp, #-8]
    43d0:	ldr	r0, [r0]
    43d4:	movw	r1, #0
    43d8:	cmp	r0, r1
    43dc:	beq	4404 <coda_cursor_get_available_union_field_index+0x6c>
    43e0:	ldr	r0, [fp, #-8]
    43e4:	add	r1, r0, #8
    43e8:	ldr	r0, [r0, #4]
    43ec:	sub	r0, r0, #1
    43f0:	add	r0, r1, r0, lsl #4
    43f4:	ldr	r0, [r0]
    43f8:	movw	r1, #0
    43fc:	cmp	r0, r1
    4400:	bne	442c <coda_cursor_get_available_union_field_index+0x94>
    4404:	mvn	r0, #99	; 0x63
    4408:	movw	r1, #0
    440c:	movt	r1, #0
    4410:	movw	r2, #0
    4414:	movt	r2, #0
    4418:	movw	r3, #2140	; 0x85c
    441c:	bl	0 <coda_set_error>
    4420:	mvn	r0, #0
    4424:	str	r0, [fp, #-4]
    4428:	b	45a8 <coda_cursor_get_available_union_field_index+0x210>
    442c:	ldr	r0, [fp, #-12]
    4430:	movw	r1, #0
    4434:	cmp	r0, r1
    4438:	bne	4464 <coda_cursor_get_available_union_field_index+0xcc>
    443c:	mvn	r0, #99	; 0x63
    4440:	movw	r1, #0
    4444:	movt	r1, #0
    4448:	movw	r2, #0
    444c:	movt	r2, #0
    4450:	movw	r3, #2145	; 0x861
    4454:	bl	0 <coda_set_error>
    4458:	mvn	r0, #0
    445c:	str	r0, [fp, #-4]
    4460:	b	45a8 <coda_cursor_get_available_union_field_index+0x210>
    4464:	ldr	r0, [fp, #-8]
    4468:	add	r1, r0, #8
    446c:	ldr	r0, [r0, #4]
    4470:	sub	r0, r0, #1
    4474:	add	r0, r1, r0, lsl #4
    4478:	ldr	r0, [r0]
    447c:	ldr	r0, [r0]
    4480:	cmp	r0, #100	; 0x64
    4484:	bcs	44a8 <coda_cursor_get_available_union_field_index+0x110>
    4488:	ldr	r0, [fp, #-8]
    448c:	add	r1, r0, #8
    4490:	ldr	r0, [r0, #4]
    4494:	sub	r0, r0, #1
    4498:	add	r0, r1, r0, lsl #4
    449c:	ldr	r0, [r0]
    44a0:	str	r0, [sp, #12]
    44a4:	b	44c8 <coda_cursor_get_available_union_field_index+0x130>
    44a8:	ldr	r0, [fp, #-8]
    44ac:	add	r1, r0, #8
    44b0:	ldr	r0, [r0, #4]
    44b4:	sub	r0, r0, #1
    44b8:	add	r0, r1, r0, lsl #4
    44bc:	ldr	r0, [r0]
    44c0:	ldr	r0, [r0, #4]
    44c4:	str	r0, [sp, #12]
    44c8:	ldr	r0, [sp, #12]
    44cc:	str	r0, [sp, #16]
    44d0:	ldr	r0, [sp, #16]
    44d4:	ldr	r0, [r0, #8]
    44d8:	cmp	r0, #0
    44dc:	beq	4514 <coda_cursor_get_available_union_field_index+0x17c>
    44e0:	ldr	r0, [sp, #16]
    44e4:	ldr	r0, [r0, #8]
    44e8:	bl	0 <coda_type_get_class_name>
    44ec:	mvn	r1, #104	; 0x68
    44f0:	str	r0, [sp, #8]
    44f4:	mov	r0, r1
    44f8:	movw	r1, #0
    44fc:	movt	r1, #0
    4500:	ldr	r2, [sp, #8]
    4504:	bl	0 <coda_set_error>
    4508:	mvn	r0, #0
    450c:	str	r0, [fp, #-4]
    4510:	b	45a8 <coda_cursor_get_available_union_field_index+0x210>
    4514:	ldr	r0, [fp, #-8]
    4518:	ldr	r1, [r0, #4]
    451c:	add	r0, r0, r1, lsl #4
    4520:	ldr	r0, [r0, #-8]
    4524:	ldr	r0, [r0]
    4528:	cmp	r0, #2
    452c:	str	r0, [sp, #4]
    4530:	bcc	455c <coda_cursor_get_available_union_field_index+0x1c4>
    4534:	b	4538 <coda_cursor_get_available_union_field_index+0x1a0>
    4538:	ldr	r0, [sp, #4]
    453c:	cmp	r0, #100	; 0x64
    4540:	beq	4570 <coda_cursor_get_available_union_field_index+0x1d8>
    4544:	b	4548 <coda_cursor_get_available_union_field_index+0x1b0>
    4548:	ldr	r0, [sp, #4]
    454c:	sub	r1, r0, #101	; 0x65
    4550:	cmp	r1, #5
    4554:	bcc	4584 <coda_cursor_get_available_union_field_index+0x1ec>
    4558:	b	4588 <coda_cursor_get_available_union_field_index+0x1f0>
    455c:	ldr	r0, [fp, #-8]
    4560:	ldr	r1, [fp, #-12]
    4564:	bl	0 <coda_ascbin_cursor_get_available_union_field_index>
    4568:	str	r0, [fp, #-4]
    456c:	b	45a8 <coda_cursor_get_available_union_field_index+0x210>
    4570:	ldr	r0, [fp, #-8]
    4574:	ldr	r1, [fp, #-12]
    4578:	bl	0 <coda_mem_cursor_get_available_union_field_index>
    457c:	str	r0, [fp, #-4]
    4580:	b	45a8 <coda_cursor_get_available_union_field_index+0x210>
    4584:	b	4588 <coda_cursor_get_available_union_field_index+0x1f0>
    4588:	movw	r0, #0
    458c:	movt	r0, #0
    4590:	movw	r1, #0
    4594:	movt	r1, #0
    4598:	movw	r2, #2172	; 0x87c
    459c:	movw	r3, #0
    45a0:	movt	r3, #0
    45a4:	bl	0 <__assert_fail>
    45a8:	ldr	r0, [fp, #-4]
    45ac:	mov	sp, fp
    45b0:	pop	{fp, pc}

000045b4 <coda_cursor_get_array_dim>:
    45b4:	push	{fp, lr}
    45b8:	mov	fp, sp
    45bc:	sub	sp, sp, #32
    45c0:	str	r0, [fp, #-8]
    45c4:	str	r1, [fp, #-12]
    45c8:	str	r2, [sp, #16]
    45cc:	ldr	r0, [fp, #-8]
    45d0:	movw	r1, #0
    45d4:	cmp	r0, r1
    45d8:	beq	4610 <coda_cursor_get_array_dim+0x5c>
    45dc:	ldr	r0, [fp, #-8]
    45e0:	ldr	r0, [r0, #4]
    45e4:	cmp	r0, #0
    45e8:	ble	4610 <coda_cursor_get_array_dim+0x5c>
    45ec:	ldr	r0, [fp, #-8]
    45f0:	add	r1, r0, #8
    45f4:	ldr	r0, [r0, #4]
    45f8:	sub	r0, r0, #1
    45fc:	add	r0, r1, r0, lsl #4
    4600:	ldr	r0, [r0]
    4604:	movw	r1, #0
    4608:	cmp	r0, r1
    460c:	bne	4638 <coda_cursor_get_array_dim+0x84>
    4610:	mvn	r0, #99	; 0x63
    4614:	movw	r1, #0
    4618:	movt	r1, #0
    461c:	movw	r2, #0
    4620:	movt	r2, #0
    4624:	movw	r3, #2197	; 0x895
    4628:	bl	0 <coda_set_error>
    462c:	mvn	r0, #0
    4630:	str	r0, [fp, #-4]
    4634:	b	487c <coda_cursor_get_array_dim+0x2c8>
    4638:	ldr	r0, [fp, #-12]
    463c:	movw	r1, #0
    4640:	cmp	r0, r1
    4644:	beq	4658 <coda_cursor_get_array_dim+0xa4>
    4648:	ldr	r0, [sp, #16]
    464c:	movw	r1, #0
    4650:	cmp	r0, r1
    4654:	bne	4680 <coda_cursor_get_array_dim+0xcc>
    4658:	mvn	r0, #99	; 0x63
    465c:	movw	r1, #0
    4660:	movt	r1, #0
    4664:	movw	r2, #0
    4668:	movt	r2, #0
    466c:	movw	r3, #2202	; 0x89a
    4670:	bl	0 <coda_set_error>
    4674:	mvn	r0, #0
    4678:	str	r0, [fp, #-4]
    467c:	b	487c <coda_cursor_get_array_dim+0x2c8>
    4680:	ldr	r0, [fp, #-8]
    4684:	add	r1, r0, #8
    4688:	ldr	r0, [r0, #4]
    468c:	sub	r0, r0, #1
    4690:	add	r0, r1, r0, lsl #4
    4694:	ldr	r0, [r0]
    4698:	ldr	r0, [r0]
    469c:	cmp	r0, #100	; 0x64
    46a0:	bcs	46c4 <coda_cursor_get_array_dim+0x110>
    46a4:	ldr	r0, [fp, #-8]
    46a8:	add	r1, r0, #8
    46ac:	ldr	r0, [r0, #4]
    46b0:	sub	r0, r0, #1
    46b4:	add	r0, r1, r0, lsl #4
    46b8:	ldr	r0, [r0]
    46bc:	str	r0, [sp, #8]
    46c0:	b	46e4 <coda_cursor_get_array_dim+0x130>
    46c4:	ldr	r0, [fp, #-8]
    46c8:	add	r1, r0, #8
    46cc:	ldr	r0, [r0, #4]
    46d0:	sub	r0, r0, #1
    46d4:	add	r0, r1, r0, lsl #4
    46d8:	ldr	r0, [r0]
    46dc:	ldr	r0, [r0, #4]
    46e0:	str	r0, [sp, #8]
    46e4:	ldr	r0, [sp, #8]
    46e8:	str	r0, [sp, #12]
    46ec:	ldr	r0, [sp, #12]
    46f0:	ldr	r0, [r0, #8]
    46f4:	cmp	r0, #1
    46f8:	beq	4730 <coda_cursor_get_array_dim+0x17c>
    46fc:	ldr	r0, [sp, #12]
    4700:	ldr	r0, [r0, #8]
    4704:	bl	0 <coda_type_get_class_name>
    4708:	mvn	r1, #104	; 0x68
    470c:	str	r0, [sp, #4]
    4710:	mov	r0, r1
    4714:	movw	r1, #0
    4718:	movt	r1, #0
    471c:	ldr	r2, [sp, #4]
    4720:	bl	0 <coda_set_error>
    4724:	mvn	r0, #0
    4728:	str	r0, [fp, #-4]
    472c:	b	487c <coda_cursor_get_array_dim+0x2c8>
    4730:	ldr	r0, [fp, #-8]
    4734:	ldr	r1, [r0, #4]
    4738:	add	r0, r0, r1, lsl #4
    473c:	ldr	r0, [r0, #-8]
    4740:	ldr	r0, [r0]
    4744:	cmp	r0, #2
    4748:	str	r0, [sp]
    474c:	bcc	47b4 <coda_cursor_get_array_dim+0x200>
    4750:	b	4754 <coda_cursor_get_array_dim+0x1a0>
    4754:	ldr	r0, [sp]
    4758:	cmp	r0, #100	; 0x64
    475c:	beq	47cc <coda_cursor_get_array_dim+0x218>
    4760:	b	4764 <coda_cursor_get_array_dim+0x1b0>
    4764:	ldr	r0, [sp]
    4768:	cmp	r0, #101	; 0x65
    476c:	beq	47e4 <coda_cursor_get_array_dim+0x230>
    4770:	b	4774 <coda_cursor_get_array_dim+0x1c0>
    4774:	ldr	r0, [sp]
    4778:	cmp	r0, #102	; 0x66
    477c:	beq	47fc <coda_cursor_get_array_dim+0x248>
    4780:	b	4784 <coda_cursor_get_array_dim+0x1d0>
    4784:	ldr	r0, [sp]
    4788:	cmp	r0, #103	; 0x67
    478c:	beq	4814 <coda_cursor_get_array_dim+0x260>
    4790:	b	4794 <coda_cursor_get_array_dim+0x1e0>
    4794:	ldr	r0, [sp]
    4798:	cmp	r0, #104	; 0x68
    479c:	beq	482c <coda_cursor_get_array_dim+0x278>
    47a0:	b	47a4 <coda_cursor_get_array_dim+0x1f0>
    47a4:	ldr	r0, [sp]
    47a8:	cmp	r0, #105	; 0x69
    47ac:	beq	4844 <coda_cursor_get_array_dim+0x290>
    47b0:	b	485c <coda_cursor_get_array_dim+0x2a8>
    47b4:	ldr	r0, [fp, #-8]
    47b8:	ldr	r1, [fp, #-12]
    47bc:	ldr	r2, [sp, #16]
    47c0:	bl	0 <coda_ascbin_cursor_get_array_dim>
    47c4:	str	r0, [fp, #-4]
    47c8:	b	487c <coda_cursor_get_array_dim+0x2c8>
    47cc:	ldr	r0, [fp, #-8]
    47d0:	ldr	r1, [fp, #-12]
    47d4:	ldr	r2, [sp, #16]
    47d8:	bl	0 <coda_mem_cursor_get_array_dim>
    47dc:	str	r0, [fp, #-4]
    47e0:	b	487c <coda_cursor_get_array_dim+0x2c8>
    47e4:	mvn	r0, #10
    47e8:	movw	r1, #0
    47ec:	bl	0 <coda_set_error>
    47f0:	mvn	r0, #0
    47f4:	str	r0, [fp, #-4]
    47f8:	b	487c <coda_cursor_get_array_dim+0x2c8>
    47fc:	mvn	r0, #12
    4800:	movw	r1, #0
    4804:	bl	0 <coda_set_error>
    4808:	mvn	r0, #0
    480c:	str	r0, [fp, #-4]
    4810:	b	487c <coda_cursor_get_array_dim+0x2c8>
    4814:	ldr	r0, [fp, #-8]
    4818:	ldr	r1, [fp, #-12]
    481c:	ldr	r2, [sp, #16]
    4820:	bl	0 <coda_cdf_cursor_get_array_dim>
    4824:	str	r0, [fp, #-4]
    4828:	b	487c <coda_cursor_get_array_dim+0x2c8>
    482c:	ldr	r0, [fp, #-8]
    4830:	ldr	r1, [fp, #-12]
    4834:	ldr	r2, [sp, #16]
    4838:	bl	0 <coda_netcdf_cursor_get_array_dim>
    483c:	str	r0, [fp, #-4]
    4840:	b	487c <coda_cursor_get_array_dim+0x2c8>
    4844:	ldr	r0, [fp, #-8]
    4848:	ldr	r1, [fp, #-12]
    484c:	ldr	r2, [sp, #16]
    4850:	bl	0 <coda_grib_cursor_get_array_dim>
    4854:	str	r0, [fp, #-4]
    4858:	b	487c <coda_cursor_get_array_dim+0x2c8>
    485c:	movw	r0, #0
    4860:	movt	r0, #0
    4864:	movw	r1, #0
    4868:	movt	r1, #0
    486c:	movw	r2, #2243	; 0x8c3
    4870:	movw	r3, #0
    4874:	movt	r3, #0
    4878:	bl	0 <__assert_fail>
    487c:	ldr	r0, [fp, #-4]
    4880:	mov	sp, fp
    4884:	pop	{fp, pc}
