
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-grib.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <read_bytes>:
       0:	strd	r4, [sp, #-24]!	; 0xffffffe8
       4:	strd	r6, [sp, #8]
       8:	str	fp, [sp, #16]
       c:	str	lr, [sp, #20]
      10:	add	fp, sp, #20
      14:	sub	sp, sp, #96	; 0x60
      18:	str	r0, [fp, #-96]	; 0xffffffa0
      1c:	strd	r2, [fp, #-108]	; 0xffffff94
      20:	ldr	r3, [fp, #-96]	; 0xffffffa0
      24:	ldr	r3, [r3, #48]	; 0x30
      28:	cmp	r3, #0
      2c:	beq	110 <read_bytes+0x110>
      30:	ldrd	r0, [fp, #-108]	; 0xffffff94
      34:	ldrd	r2, [fp, #4]
      38:	adds	r6, r0, r2
      3c:	adc	r7, r1, r3
      40:	ldr	r3, [fp, #-96]	; 0xffffffa0
      44:	ldrd	r2, [r3, #40]	; 0x28
      48:	cmp	r7, r3
      4c:	cmpeq	r6, r2
      50:	bls	ec <read_bytes+0xec>
      54:	ldr	r3, [fp, #-96]	; 0xffffffa0
      58:	ldr	r3, [r3, #16]
      5c:	cmp	r3, #0
      60:	beq	74 <read_bytes+0x74>
      64:	ldr	r3, [fp, #-96]	; 0xffffffa0
      68:	ldr	r3, [r3, #16]
      6c:	cmp	r3, #1
      70:	bne	8c <read_bytes+0x8c>
      74:	movw	r1, #0
      78:	movt	r1, #0
      7c:	mvn	r0, #300	; 0x12c
      80:	bl	0 <coda_set_error>
      84:	mvn	r3, #0
      88:	b	1e8 <read_bytes+0x1e8>
      8c:	sub	r3, fp, #44	; 0x2c
      90:	mov	r2, r3
      94:	ldrd	r0, [fp, #4]
      98:	bl	0 <coda_str64>
      9c:	sub	r3, fp, #68	; 0x44
      a0:	mov	r2, r3
      a4:	ldrd	r0, [fp, #-108]	; 0xffffff94
      a8:	bl	0 <coda_str64>
      ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
      b0:	ldrd	r0, [r3, #40]	; 0x28
      b4:	sub	r3, fp, #92	; 0x5c
      b8:	mov	r2, r3
      bc:	bl	0 <coda_str64>
      c0:	sub	r1, fp, #68	; 0x44
      c4:	sub	r2, fp, #44	; 0x2c
      c8:	sub	r3, fp, #92	; 0x5c
      cc:	str	r3, [sp]
      d0:	mov	r3, r1
      d4:	movw	r1, #0
      d8:	movt	r1, #0
      dc:	mvn	r0, #300	; 0x12c
      e0:	bl	0 <coda_set_error>
      e4:	mvn	r3, #0
      e8:	b	1e8 <read_bytes+0x1e8>
      ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
      f0:	ldr	r2, [r3, #48]	; 0x30
      f4:	ldr	r3, [fp, #-108]	; 0xffffff94
      f8:	add	r3, r2, r3
      fc:	ldr	r2, [fp, #4]
     100:	mov	r1, r3
     104:	ldr	r0, [fp, #12]
     108:	bl	0 <memcpy>
     10c:	b	1e4 <read_bytes+0x1e4>
     110:	ldr	r3, [fp, #-96]	; 0xffffffa0
     114:	ldr	r3, [r3, #16]
     118:	cmp	r3, #0
     11c:	beq	150 <read_bytes+0x150>
     120:	ldr	r3, [fp, #-96]	; 0xffffffa0
     124:	ldr	r3, [r3, #16]
     128:	cmp	r3, #1
     12c:	beq	150 <read_bytes+0x150>
     130:	movw	r3, #0
     134:	movt	r3, #0
     138:	mov	r2, #83	; 0x53
     13c:	movw	r1, #0
     140:	movt	r1, #0
     144:	movw	r0, #0
     148:	movt	r0, #0
     14c:	bl	0 <__assert_fail>
     150:	ldrd	r0, [fp, #-108]	; 0xffffff94
     154:	ldrd	r2, [fp, #4]
     158:	adds	r4, r0, r2
     15c:	adc	r5, r1, r3
     160:	ldr	r3, [fp, #-96]	; 0xffffffa0
     164:	ldrd	r2, [r3, #8]
     168:	cmp	r5, r3
     16c:	cmpeq	r4, r2
     170:	bls	18c <read_bytes+0x18c>
     174:	movw	r1, #0
     178:	movt	r1, #0
     17c:	mvn	r0, #300	; 0x12c
     180:	bl	0 <coda_set_error>
     184:	mvn	r3, #0
     188:	b	1e8 <read_bytes+0x1e8>
     18c:	ldr	r3, [fp, #-96]	; 0xffffffa0
     190:	ldr	r0, [r3, #56]	; 0x38
     194:	ldr	r2, [fp, #4]
     198:	ldr	r3, [fp, #-108]	; 0xffffff94
     19c:	ldr	r1, [fp, #12]
     1a0:	bl	0 <pread>
     1a4:	mov	r3, r0
     1a8:	cmp	r3, #0
     1ac:	bge	1e4 <read_bytes+0x1e4>
     1b0:	bl	0 <__errno_location>
     1b4:	mov	r3, r0
     1b8:	ldr	r3, [r3]
     1bc:	mov	r0, r3
     1c0:	bl	0 <strerror>
     1c4:	mov	r3, r0
     1c8:	mov	r2, r3
     1cc:	movw	r1, #0
     1d0:	movt	r1, #0
     1d4:	mvn	r0, #21
     1d8:	bl	0 <coda_set_error>
     1dc:	mvn	r3, #0
     1e0:	b	1e8 <read_bytes+0x1e8>
     1e4:	mov	r3, #0
     1e8:	mov	r0, r3
     1ec:	sub	sp, fp, #20
     1f0:	ldrd	r4, [sp]
     1f4:	ldrd	r6, [sp, #8]
     1f8:	ldr	fp, [sp, #16]
     1fc:	add	sp, sp, #20
     200:	pop	{pc}		; (ldr pc, [sp], #4)

00000204 <read_bytes_in_bounds>:
     204:	str	fp, [sp, #-8]!
     208:	str	lr, [sp, #4]
     20c:	add	fp, sp, #4
     210:	sub	sp, sp, #16
     214:	str	r0, [fp, #-8]
     218:	strd	r2, [fp, #-20]	; 0xffffffec
     21c:	ldr	r3, [fp, #-8]
     220:	ldr	r3, [r3, #48]	; 0x30
     224:	cmp	r3, #0
     228:	beq	250 <read_bytes_in_bounds+0x4c>
     22c:	ldr	r3, [fp, #-8]
     230:	ldr	r2, [r3, #48]	; 0x30
     234:	ldr	r3, [fp, #-20]	; 0xffffffec
     238:	add	r3, r2, r3
     23c:	ldr	r2, [fp, #4]
     240:	mov	r1, r3
     244:	ldr	r0, [fp, #12]
     248:	bl	0 <memcpy>
     24c:	b	2e8 <read_bytes_in_bounds+0xe4>
     250:	ldr	r3, [fp, #-8]
     254:	ldr	r3, [r3, #16]
     258:	cmp	r3, #0
     25c:	beq	290 <read_bytes_in_bounds+0x8c>
     260:	ldr	r3, [fp, #-8]
     264:	ldr	r3, [r3, #16]
     268:	cmp	r3, #1
     26c:	beq	290 <read_bytes_in_bounds+0x8c>
     270:	movw	r3, #0
     274:	movt	r3, #0
     278:	mov	r2, #62	; 0x3e
     27c:	movw	r1, #0
     280:	movt	r1, #0
     284:	movw	r0, #0
     288:	movt	r0, #0
     28c:	bl	0 <__assert_fail>
     290:	ldr	r3, [fp, #-8]
     294:	ldr	r0, [r3, #56]	; 0x38
     298:	ldr	r2, [fp, #4]
     29c:	ldr	r3, [fp, #-20]	; 0xffffffec
     2a0:	ldr	r1, [fp, #12]
     2a4:	bl	0 <pread>
     2a8:	mov	r3, r0
     2ac:	cmp	r3, #0
     2b0:	bge	2e8 <read_bytes_in_bounds+0xe4>
     2b4:	bl	0 <__errno_location>
     2b8:	mov	r3, r0
     2bc:	ldr	r3, [r3]
     2c0:	mov	r0, r3
     2c4:	bl	0 <strerror>
     2c8:	mov	r3, r0
     2cc:	mov	r2, r3
     2d0:	movw	r1, #0
     2d4:	movt	r1, #0
     2d8:	mvn	r0, #21
     2dc:	bl	0 <coda_set_error>
     2e0:	mvn	r3, #0
     2e4:	b	2ec <read_bytes_in_bounds+0xe8>
     2e8:	mov	r3, #0
     2ec:	mov	r0, r3
     2f0:	sub	sp, fp, #4
     2f4:	ldr	fp, [sp]
     2f8:	add	sp, sp, #4
     2fc:	pop	{pc}		; (ldr pc, [sp], #4)

00000300 <swap4>:
     300:	push	{fp}		; (str fp, [sp, #-4]!)
     304:	add	fp, sp, #0
     308:	sub	sp, sp, #20
     30c:	str	r0, [fp, #-16]
     310:	ldr	r3, [fp, #-16]
     314:	str	r3, [fp, #-8]
     318:	ldr	r3, [fp, #-8]
     31c:	ldrb	r2, [r3]
     320:	ldr	r3, [fp, #-8]
     324:	add	r3, r3, #3
     328:	ldrb	r3, [r3]
     32c:	eor	r3, r3, r2
     330:	uxtb	r2, r3
     334:	ldr	r3, [fp, #-8]
     338:	strb	r2, [r3]
     33c:	ldr	r3, [fp, #-8]
     340:	ldrb	r1, [r3]
     344:	ldr	r3, [fp, #-8]
     348:	add	r3, r3, #3
     34c:	ldrb	r2, [r3]
     350:	ldr	r3, [fp, #-8]
     354:	add	r3, r3, #3
     358:	eor	r2, r2, r1
     35c:	uxtb	r2, r2
     360:	strb	r2, [r3]
     364:	ldr	r3, [fp, #-8]
     368:	ldrb	r2, [r3]
     36c:	ldr	r3, [fp, #-8]
     370:	add	r3, r3, #3
     374:	ldrb	r3, [r3]
     378:	eor	r3, r3, r2
     37c:	uxtb	r2, r3
     380:	ldr	r3, [fp, #-8]
     384:	strb	r2, [r3]
     388:	ldr	r3, [fp, #-8]
     38c:	add	r3, r3, #1
     390:	ldrb	r1, [r3]
     394:	ldr	r3, [fp, #-8]
     398:	add	r3, r3, #2
     39c:	ldrb	r2, [r3]
     3a0:	ldr	r3, [fp, #-8]
     3a4:	add	r3, r3, #1
     3a8:	eor	r2, r2, r1
     3ac:	uxtb	r2, r2
     3b0:	strb	r2, [r3]
     3b4:	ldr	r3, [fp, #-8]
     3b8:	add	r3, r3, #1
     3bc:	ldrb	r1, [r3]
     3c0:	ldr	r3, [fp, #-8]
     3c4:	add	r3, r3, #2
     3c8:	ldrb	r2, [r3]
     3cc:	ldr	r3, [fp, #-8]
     3d0:	add	r3, r3, #2
     3d4:	eor	r2, r2, r1
     3d8:	uxtb	r2, r2
     3dc:	strb	r2, [r3]
     3e0:	ldr	r3, [fp, #-8]
     3e4:	add	r3, r3, #1
     3e8:	ldrb	r1, [r3]
     3ec:	ldr	r3, [fp, #-8]
     3f0:	add	r3, r3, #2
     3f4:	ldrb	r2, [r3]
     3f8:	ldr	r3, [fp, #-8]
     3fc:	add	r3, r3, #1
     400:	eor	r2, r2, r1
     404:	uxtb	r2, r2
     408:	strb	r2, [r3]
     40c:	nop	{0}
     410:	add	sp, fp, #0
     414:	pop	{fp}		; (ldr fp, [sp], #4)
     418:	bx	lr

0000041c <swap8>:
     41c:	push	{fp}		; (str fp, [sp, #-4]!)
     420:	add	fp, sp, #0
     424:	sub	sp, sp, #20
     428:	str	r0, [fp, #-16]
     42c:	ldr	r3, [fp, #-16]
     430:	str	r3, [fp, #-8]
     434:	ldr	r3, [fp, #-8]
     438:	ldrb	r2, [r3]
     43c:	ldr	r3, [fp, #-8]
     440:	add	r3, r3, #7
     444:	ldrb	r3, [r3]
     448:	eor	r3, r3, r2
     44c:	uxtb	r2, r3
     450:	ldr	r3, [fp, #-8]
     454:	strb	r2, [r3]
     458:	ldr	r3, [fp, #-8]
     45c:	ldrb	r1, [r3]
     460:	ldr	r3, [fp, #-8]
     464:	add	r3, r3, #7
     468:	ldrb	r2, [r3]
     46c:	ldr	r3, [fp, #-8]
     470:	add	r3, r3, #7
     474:	eor	r2, r2, r1
     478:	uxtb	r2, r2
     47c:	strb	r2, [r3]
     480:	ldr	r3, [fp, #-8]
     484:	ldrb	r2, [r3]
     488:	ldr	r3, [fp, #-8]
     48c:	add	r3, r3, #7
     490:	ldrb	r3, [r3]
     494:	eor	r3, r3, r2
     498:	uxtb	r2, r3
     49c:	ldr	r3, [fp, #-8]
     4a0:	strb	r2, [r3]
     4a4:	ldr	r3, [fp, #-8]
     4a8:	add	r3, r3, #1
     4ac:	ldrb	r1, [r3]
     4b0:	ldr	r3, [fp, #-8]
     4b4:	add	r3, r3, #6
     4b8:	ldrb	r2, [r3]
     4bc:	ldr	r3, [fp, #-8]
     4c0:	add	r3, r3, #1
     4c4:	eor	r2, r2, r1
     4c8:	uxtb	r2, r2
     4cc:	strb	r2, [r3]
     4d0:	ldr	r3, [fp, #-8]
     4d4:	add	r3, r3, #1
     4d8:	ldrb	r1, [r3]
     4dc:	ldr	r3, [fp, #-8]
     4e0:	add	r3, r3, #6
     4e4:	ldrb	r2, [r3]
     4e8:	ldr	r3, [fp, #-8]
     4ec:	add	r3, r3, #6
     4f0:	eor	r2, r2, r1
     4f4:	uxtb	r2, r2
     4f8:	strb	r2, [r3]
     4fc:	ldr	r3, [fp, #-8]
     500:	add	r3, r3, #1
     504:	ldrb	r1, [r3]
     508:	ldr	r3, [fp, #-8]
     50c:	add	r3, r3, #6
     510:	ldrb	r2, [r3]
     514:	ldr	r3, [fp, #-8]
     518:	add	r3, r3, #1
     51c:	eor	r2, r2, r1
     520:	uxtb	r2, r2
     524:	strb	r2, [r3]
     528:	ldr	r3, [fp, #-8]
     52c:	add	r3, r3, #2
     530:	ldrb	r1, [r3]
     534:	ldr	r3, [fp, #-8]
     538:	add	r3, r3, #5
     53c:	ldrb	r2, [r3]
     540:	ldr	r3, [fp, #-8]
     544:	add	r3, r3, #2
     548:	eor	r2, r2, r1
     54c:	uxtb	r2, r2
     550:	strb	r2, [r3]
     554:	ldr	r3, [fp, #-8]
     558:	add	r3, r3, #2
     55c:	ldrb	r1, [r3]
     560:	ldr	r3, [fp, #-8]
     564:	add	r3, r3, #5
     568:	ldrb	r2, [r3]
     56c:	ldr	r3, [fp, #-8]
     570:	add	r3, r3, #5
     574:	eor	r2, r2, r1
     578:	uxtb	r2, r2
     57c:	strb	r2, [r3]
     580:	ldr	r3, [fp, #-8]
     584:	add	r3, r3, #2
     588:	ldrb	r1, [r3]
     58c:	ldr	r3, [fp, #-8]
     590:	add	r3, r3, #5
     594:	ldrb	r2, [r3]
     598:	ldr	r3, [fp, #-8]
     59c:	add	r3, r3, #2
     5a0:	eor	r2, r2, r1
     5a4:	uxtb	r2, r2
     5a8:	strb	r2, [r3]
     5ac:	ldr	r3, [fp, #-8]
     5b0:	add	r3, r3, #3
     5b4:	ldrb	r1, [r3]
     5b8:	ldr	r3, [fp, #-8]
     5bc:	add	r3, r3, #4
     5c0:	ldrb	r2, [r3]
     5c4:	ldr	r3, [fp, #-8]
     5c8:	add	r3, r3, #3
     5cc:	eor	r2, r2, r1
     5d0:	uxtb	r2, r2
     5d4:	strb	r2, [r3]
     5d8:	ldr	r3, [fp, #-8]
     5dc:	add	r3, r3, #3
     5e0:	ldrb	r1, [r3]
     5e4:	ldr	r3, [fp, #-8]
     5e8:	add	r3, r3, #4
     5ec:	ldrb	r2, [r3]
     5f0:	ldr	r3, [fp, #-8]
     5f4:	add	r3, r3, #4
     5f8:	eor	r2, r2, r1
     5fc:	uxtb	r2, r2
     600:	strb	r2, [r3]
     604:	ldr	r3, [fp, #-8]
     608:	add	r3, r3, #3
     60c:	ldrb	r1, [r3]
     610:	ldr	r3, [fp, #-8]
     614:	add	r3, r3, #4
     618:	ldrb	r2, [r3]
     61c:	ldr	r3, [fp, #-8]
     620:	add	r3, r3, #3
     624:	eor	r2, r2, r1
     628:	uxtb	r2, r2
     62c:	strb	r2, [r3]
     630:	nop	{0}
     634:	add	sp, fp, #0
     638:	pop	{fp}		; (ldr fp, [sp], #4)
     63c:	bx	lr

00000640 <grib_init>:
     640:	str	r4, [sp, #-12]!
     644:	str	fp, [sp, #4]
     648:	str	lr, [sp, #8]
     64c:	add	fp, sp, #8
     650:	sub	sp, sp, #28
     654:	mrc	15, 0, r3, cr13, cr0, {3}
     658:	ldr	r2, [pc, #128]	; 6e0 <grib_init+0xa0>
     65c:	ldr	r3, [r3, r2]
     660:	cmp	r3, #0
     664:	beq	670 <grib_init+0x30>
     668:	mov	r3, #0
     66c:	b	8090 <grib_init+0x7a50>
     670:	mov	r3, #1
     674:	str	r3, [fp, #-20]	; 0xffffffec
     678:	mov	r0, #572	; 0x23c
     67c:	bl	0 <malloc>
     680:	mov	r3, r0
     684:	mov	r1, r3
     688:	mrc	15, 0, r3, cr13, cr0, {3}
     68c:	ldr	r2, [pc, #76]	; 6e0 <grib_init+0xa0>
     690:	str	r1, [r3, r2]
     694:	mrc	15, 0, r3, cr13, cr0, {3}
     698:	ldr	r2, [pc, #64]	; 6e0 <grib_init+0xa0>
     69c:	ldr	r3, [r3, r2]
     6a0:	cmp	r3, #0
     6a4:	bne	6d4 <grib_init+0x94>
     6a8:	mov	r3, #227	; 0xe3
     6ac:	str	r3, [sp]
     6b0:	movw	r3, #0
     6b4:	movt	r3, #0
     6b8:	mov	r2, #572	; 0x23c
     6bc:	movw	r1, #0
     6c0:	movt	r1, #0
     6c4:	mvn	r0, #0
     6c8:	bl	0 <coda_set_error>
     6cc:	mvn	r3, #0
     6d0:	b	8090 <grib_init+0x7a50>
     6d4:	mov	r3, #0
     6d8:	str	r3, [fp, #-16]
     6dc:	b	710 <grib_init+0xd0>
     6e0:	.word	0x00000000
     6e4:	mrc	15, 0, r3, cr13, cr0, {3}
     6e8:	ldr	r2, [pc, #-16]	; 6e0 <grib_init+0xa0>
     6ec:	ldr	r2, [r3, r2]
     6f0:	ldr	r3, [fp, #-16]
     6f4:	lsl	r3, r3, #2
     6f8:	add	r3, r2, r3
     6fc:	mov	r2, #0
     700:	str	r2, [r3]
     704:	ldr	r3, [fp, #-16]
     708:	add	r3, r3, #1
     70c:	str	r3, [fp, #-16]
     710:	ldr	r3, [fp, #-16]
     714:	cmp	r3, #142	; 0x8e
     718:	ble	6e4 <grib_init+0xa4>
     71c:	mrc	15, 0, r3, cr13, cr0, {3}
     720:	ldr	r2, [pc, #-72]	; 6e0 <grib_init+0xa0>
     724:	ldr	r4, [r3, r2]
     728:	mov	r1, #2
     72c:	mov	r0, #7
     730:	bl	0 <coda_type_number_new>
     734:	mov	r3, r0
     738:	str	r3, [r4]
     73c:	mrc	15, 0, r3, cr13, cr0, {3}
     740:	ldr	r2, [pc, #-104]	; 6e0 <grib_init+0xa0>
     744:	ldr	r3, [r3, r2]
     748:	ldr	r3, [r3]
     74c:	ldr	r1, [fp, #-20]	; 0xffffffec
     750:	mov	r0, r3
     754:	bl	0 <coda_type_number_set_endianness>
     758:	mrc	15, 0, r3, cr13, cr0, {3}
     75c:	ldr	r2, [pc, #-132]	; 6e0 <grib_init+0xa0>
     760:	ldr	r3, [r3, r2]
     764:	ldr	r3, [r3]
     768:	mov	r1, #4
     76c:	mov	r0, r3
     770:	bl	0 <coda_type_set_read_type>
     774:	mrc	15, 0, r3, cr13, cr0, {3}
     778:	ldr	r2, [pc, #-160]	; 6e0 <grib_init+0xa0>
     77c:	ldr	r3, [r3, r2]
     780:	ldr	r1, [r3]
     784:	mov	r2, #32
     788:	mov	r3, #0
     78c:	mov	r0, r1
     790:	bl	0 <coda_type_set_bit_size>
     794:	mrc	15, 0, r3, cr13, cr0, {3}
     798:	ldr	r2, [pc, #-192]	; 6e0 <grib_init+0xa0>
     79c:	ldr	r3, [r3, r2]
     7a0:	add	r4, r3, #4
     7a4:	mov	r1, #2
     7a8:	mov	r0, #7
     7ac:	bl	0 <coda_type_number_new>
     7b0:	mov	r3, r0
     7b4:	str	r3, [r4]
     7b8:	mrc	15, 0, r3, cr13, cr0, {3}
     7bc:	ldr	r2, [pc, #-228]	; 6e0 <grib_init+0xa0>
     7c0:	ldr	r3, [r3, r2]
     7c4:	add	r3, r3, #4
     7c8:	ldr	r3, [r3]
     7cc:	ldr	r1, [fp, #-20]	; 0xffffffec
     7d0:	mov	r0, r3
     7d4:	bl	0 <coda_type_number_set_endianness>
     7d8:	mrc	15, 0, r3, cr13, cr0, {3}
     7dc:	ldr	r2, [pc, #-260]	; 6e0 <grib_init+0xa0>
     7e0:	ldr	r3, [r3, r2]
     7e4:	add	r3, r3, #4
     7e8:	ldr	r3, [r3]
     7ec:	mov	r1, #5
     7f0:	mov	r0, r3
     7f4:	bl	0 <coda_type_set_read_type>
     7f8:	mrc	15, 0, r3, cr13, cr0, {3}
     7fc:	ldr	r2, [pc, #-292]	; 6e0 <grib_init+0xa0>
     800:	ldr	r3, [r3, r2]
     804:	add	r3, r3, #4
     808:	ldr	r1, [r3]
     80c:	mov	r2, #32
     810:	mov	r3, #0
     814:	mov	r0, r1
     818:	bl	0 <coda_type_set_bit_size>
     81c:	mrc	15, 0, r3, cr13, cr0, {3}
     820:	ldr	r2, [pc, #-328]	; 6e0 <grib_init+0xa0>
     824:	ldr	r3, [r3, r2]
     828:	add	r4, r3, #8
     82c:	mov	r1, #2
     830:	mov	r0, #7
     834:	bl	0 <coda_type_number_new>
     838:	mov	r3, r0
     83c:	str	r3, [r4]
     840:	mrc	15, 0, r3, cr13, cr0, {3}
     844:	ldr	r2, [pc, #-364]	; 6e0 <grib_init+0xa0>
     848:	ldr	r3, [r3, r2]
     84c:	add	r3, r3, #8
     850:	ldr	r3, [r3]
     854:	ldr	r1, [fp, #-20]	; 0xffffffec
     858:	mov	r0, r3
     85c:	bl	0 <coda_type_number_set_endianness>
     860:	mrc	15, 0, r3, cr13, cr0, {3}
     864:	ldr	r2, [pc, #-396]	; 6e0 <grib_init+0xa0>
     868:	ldr	r3, [r3, r2]
     86c:	add	r3, r3, #8
     870:	ldr	r3, [r3]
     874:	mov	r1, #1
     878:	mov	r0, r3
     87c:	bl	0 <coda_type_set_read_type>
     880:	mrc	15, 0, r3, cr13, cr0, {3}
     884:	ldr	r2, [pc, #-428]	; 6e0 <grib_init+0xa0>
     888:	ldr	r3, [r3, r2]
     88c:	add	r3, r3, #8
     890:	ldr	r1, [r3]
     894:	mov	r2, #8
     898:	mov	r3, #0
     89c:	mov	r0, r1
     8a0:	bl	0 <coda_type_set_bit_size>
     8a4:	mrc	15, 0, r3, cr13, cr0, {3}
     8a8:	ldr	r2, [pc, #-464]	; 6e0 <grib_init+0xa0>
     8ac:	ldr	r3, [r3, r2]
     8b0:	add	r3, r3, #8
     8b4:	ldr	r3, [r3]
     8b8:	movw	r1, #0
     8bc:	movt	r1, #0
     8c0:	mov	r0, r3
     8c4:	bl	0 <coda_type_set_description>
     8c8:	mrc	15, 0, r3, cr13, cr0, {3}
     8cc:	ldr	r2, [pc, #-500]	; 6e0 <grib_init+0xa0>
     8d0:	ldr	r3, [r3, r2]
     8d4:	add	r4, r3, #12
     8d8:	mov	r1, #2
     8dc:	mov	r0, #7
     8e0:	bl	0 <coda_type_number_new>
     8e4:	mov	r3, r0
     8e8:	str	r3, [r4]
     8ec:	mrc	15, 0, r3, cr13, cr0, {3}
     8f0:	ldr	r2, [pc, #-536]	; 6e0 <grib_init+0xa0>
     8f4:	ldr	r3, [r3, r2]
     8f8:	add	r3, r3, #12
     8fc:	ldr	r3, [r3]
     900:	ldr	r1, [fp, #-20]	; 0xffffffec
     904:	mov	r0, r3
     908:	bl	0 <coda_type_number_set_endianness>
     90c:	mrc	15, 0, r3, cr13, cr0, {3}
     910:	ldr	r2, [pc, #-568]	; 6e0 <grib_init+0xa0>
     914:	ldr	r3, [r3, r2]
     918:	add	r3, r3, #12
     91c:	ldr	r3, [r3]
     920:	mov	r1, #1
     924:	mov	r0, r3
     928:	bl	0 <coda_type_set_read_type>
     92c:	mrc	15, 0, r3, cr13, cr0, {3}
     930:	ldr	r2, [pc, #-600]	; 6e0 <grib_init+0xa0>
     934:	ldr	r3, [r3, r2]
     938:	add	r3, r3, #12
     93c:	ldr	r1, [r3]
     940:	mov	r2, #8
     944:	mov	r3, #0
     948:	mov	r0, r1
     94c:	bl	0 <coda_type_set_bit_size>
     950:	mrc	15, 0, r3, cr13, cr0, {3}
     954:	ldr	r2, [pc, #-636]	; 6e0 <grib_init+0xa0>
     958:	ldr	r3, [r3, r2]
     95c:	add	r3, r3, #12
     960:	ldr	r3, [r3]
     964:	movw	r1, #0
     968:	movt	r1, #0
     96c:	mov	r0, r3
     970:	bl	0 <coda_type_set_description>
     974:	mrc	15, 0, r3, cr13, cr0, {3}
     978:	ldr	r2, [pc, #-672]	; 6e0 <grib_init+0xa0>
     97c:	ldr	r3, [r3, r2]
     980:	add	r4, r3, #16
     984:	mov	r1, #2
     988:	mov	r0, #7
     98c:	bl	0 <coda_type_number_new>
     990:	mov	r3, r0
     994:	str	r3, [r4]
     998:	mrc	15, 0, r3, cr13, cr0, {3}
     99c:	ldr	r2, [pc, #-708]	; 6e0 <grib_init+0xa0>
     9a0:	ldr	r3, [r3, r2]
     9a4:	add	r3, r3, #16
     9a8:	ldr	r3, [r3]
     9ac:	ldr	r1, [fp, #-20]	; 0xffffffec
     9b0:	mov	r0, r3
     9b4:	bl	0 <coda_type_number_set_endianness>
     9b8:	mrc	15, 0, r3, cr13, cr0, {3}
     9bc:	ldr	r2, [pc, #-740]	; 6e0 <grib_init+0xa0>
     9c0:	ldr	r3, [r3, r2]
     9c4:	add	r3, r3, #16
     9c8:	ldr	r3, [r3]
     9cc:	mov	r1, #1
     9d0:	mov	r0, r3
     9d4:	bl	0 <coda_type_set_read_type>
     9d8:	mrc	15, 0, r3, cr13, cr0, {3}
     9dc:	ldr	r2, [pc, #-772]	; 6e0 <grib_init+0xa0>
     9e0:	ldr	r3, [r3, r2]
     9e4:	add	r3, r3, #16
     9e8:	ldr	r1, [r3]
     9ec:	mov	r2, #8
     9f0:	mov	r3, #0
     9f4:	mov	r0, r1
     9f8:	bl	0 <coda_type_set_bit_size>
     9fc:	mrc	15, 0, r3, cr13, cr0, {3}
     a00:	ldr	r2, [pc, #-808]	; 6e0 <grib_init+0xa0>
     a04:	ldr	r3, [r3, r2]
     a08:	add	r3, r3, #16
     a0c:	ldr	r3, [r3]
     a10:	movw	r1, #0
     a14:	movt	r1, #0
     a18:	mov	r0, r3
     a1c:	bl	0 <coda_type_set_description>
     a20:	mrc	15, 0, r3, cr13, cr0, {3}
     a24:	ldr	r2, [pc, #-844]	; 6e0 <grib_init+0xa0>
     a28:	ldr	r3, [r3, r2]
     a2c:	add	r4, r3, #20
     a30:	mov	r1, #2
     a34:	mov	r0, #7
     a38:	bl	0 <coda_type_number_new>
     a3c:	mov	r3, r0
     a40:	str	r3, [r4]
     a44:	mrc	15, 0, r3, cr13, cr0, {3}
     a48:	ldr	r2, [pc, #-880]	; 6e0 <grib_init+0xa0>
     a4c:	ldr	r3, [r3, r2]
     a50:	add	r3, r3, #20
     a54:	ldr	r3, [r3]
     a58:	ldr	r1, [fp, #-20]	; 0xffffffec
     a5c:	mov	r0, r3
     a60:	bl	0 <coda_type_number_set_endianness>
     a64:	mrc	15, 0, r3, cr13, cr0, {3}
     a68:	ldr	r2, [pc, #-912]	; 6e0 <grib_init+0xa0>
     a6c:	ldr	r3, [r3, r2]
     a70:	add	r3, r3, #20
     a74:	ldr	r3, [r3]
     a78:	mov	r1, #1
     a7c:	mov	r0, r3
     a80:	bl	0 <coda_type_set_read_type>
     a84:	mrc	15, 0, r3, cr13, cr0, {3}
     a88:	ldr	r2, [pc, #-944]	; 6e0 <grib_init+0xa0>
     a8c:	ldr	r3, [r3, r2]
     a90:	add	r3, r3, #20
     a94:	ldr	r1, [r3]
     a98:	mov	r2, #8
     a9c:	mov	r3, #0
     aa0:	mov	r0, r1
     aa4:	bl	0 <coda_type_set_bit_size>
     aa8:	mrc	15, 0, r3, cr13, cr0, {3}
     aac:	ldr	r2, [pc, #-980]	; 6e0 <grib_init+0xa0>
     ab0:	ldr	r3, [r3, r2]
     ab4:	add	r3, r3, #20
     ab8:	ldr	r3, [r3]
     abc:	movw	r1, #0
     ac0:	movt	r1, #0
     ac4:	mov	r0, r3
     ac8:	bl	0 <coda_type_set_description>
     acc:	mrc	15, 0, r3, cr13, cr0, {3}
     ad0:	ldr	r2, [pc, #-1016]	; 6e0 <grib_init+0xa0>
     ad4:	ldr	r3, [r3, r2]
     ad8:	add	r4, r3, #24
     adc:	mov	r1, #2
     ae0:	mov	r0, #7
     ae4:	bl	0 <coda_type_number_new>
     ae8:	mov	r3, r0
     aec:	str	r3, [r4]
     af0:	mrc	15, 0, r3, cr13, cr0, {3}
     af4:	ldr	r2, [pc, #-1052]	; 6e0 <grib_init+0xa0>
     af8:	ldr	r3, [r3, r2]
     afc:	add	r3, r3, #24
     b00:	ldr	r3, [r3]
     b04:	ldr	r1, [fp, #-20]	; 0xffffffec
     b08:	mov	r0, r3
     b0c:	bl	0 <coda_type_number_set_endianness>
     b10:	mrc	15, 0, r3, cr13, cr0, {3}
     b14:	ldr	r2, [pc, #-1084]	; 6e0 <grib_init+0xa0>
     b18:	ldr	r3, [r3, r2]
     b1c:	add	r3, r3, #24
     b20:	ldr	r3, [r3]
     b24:	mov	r1, #1
     b28:	mov	r0, r3
     b2c:	bl	0 <coda_type_set_read_type>
     b30:	mrc	15, 0, r3, cr13, cr0, {3}
     b34:	ldr	r2, [pc, #-1116]	; 6e0 <grib_init+0xa0>
     b38:	ldr	r3, [r3, r2]
     b3c:	add	r3, r3, #24
     b40:	ldr	r1, [r3]
     b44:	mov	r2, #8
     b48:	mov	r3, #0
     b4c:	mov	r0, r1
     b50:	bl	0 <coda_type_set_bit_size>
     b54:	mrc	15, 0, r3, cr13, cr0, {3}
     b58:	ldr	r2, [pc, #-1152]	; 6e0 <grib_init+0xa0>
     b5c:	ldr	r3, [r3, r2]
     b60:	add	r3, r3, #24
     b64:	ldr	r3, [r3]
     b68:	movw	r1, #0
     b6c:	movt	r1, #0
     b70:	mov	r0, r3
     b74:	bl	0 <coda_type_set_description>
     b78:	mrc	15, 0, r3, cr13, cr0, {3}
     b7c:	ldr	r2, [pc, #-1188]	; 6e0 <grib_init+0xa0>
     b80:	ldr	r3, [r3, r2]
     b84:	add	r4, r3, #28
     b88:	mov	r1, #2
     b8c:	mov	r0, #7
     b90:	bl	0 <coda_type_number_new>
     b94:	mov	r3, r0
     b98:	str	r3, [r4]
     b9c:	mrc	15, 0, r3, cr13, cr0, {3}
     ba0:	ldr	r2, [pc, #-1224]	; 6e0 <grib_init+0xa0>
     ba4:	ldr	r3, [r3, r2]
     ba8:	add	r3, r3, #28
     bac:	ldr	r3, [r3]
     bb0:	ldr	r1, [fp, #-20]	; 0xffffffec
     bb4:	mov	r0, r3
     bb8:	bl	0 <coda_type_number_set_endianness>
     bbc:	mrc	15, 0, r3, cr13, cr0, {3}
     bc0:	ldr	r2, [pc, #-1256]	; 6e0 <grib_init+0xa0>
     bc4:	ldr	r3, [r3, r2]
     bc8:	add	r3, r3, #28
     bcc:	ldr	r3, [r3]
     bd0:	mov	r1, #1
     bd4:	mov	r0, r3
     bd8:	bl	0 <coda_type_set_read_type>
     bdc:	mrc	15, 0, r3, cr13, cr0, {3}
     be0:	ldr	r2, [pc, #-1288]	; 6e0 <grib_init+0xa0>
     be4:	ldr	r3, [r3, r2]
     be8:	add	r3, r3, #28
     bec:	ldr	r1, [r3]
     bf0:	mov	r2, #8
     bf4:	mov	r3, #0
     bf8:	mov	r0, r1
     bfc:	bl	0 <coda_type_set_bit_size>
     c00:	mrc	15, 0, r3, cr13, cr0, {3}
     c04:	ldr	r2, [pc, #-1324]	; 6e0 <grib_init+0xa0>
     c08:	ldr	r3, [r3, r2]
     c0c:	add	r3, r3, #28
     c10:	ldr	r3, [r3]
     c14:	movw	r1, #0
     c18:	movt	r1, #0
     c1c:	mov	r0, r3
     c20:	bl	0 <coda_type_set_description>
     c24:	mrc	15, 0, r3, cr13, cr0, {3}
     c28:	ldr	r2, [pc, #-1360]	; 6e0 <grib_init+0xa0>
     c2c:	ldr	r3, [r3, r2]
     c30:	add	r4, r3, #32
     c34:	mov	r1, #2
     c38:	mov	r0, #7
     c3c:	bl	0 <coda_type_number_new>
     c40:	mov	r3, r0
     c44:	str	r3, [r4]
     c48:	mrc	15, 0, r3, cr13, cr0, {3}
     c4c:	ldr	r2, [pc, #-1396]	; 6e0 <grib_init+0xa0>
     c50:	ldr	r3, [r3, r2]
     c54:	add	r3, r3, #32
     c58:	ldr	r3, [r3]
     c5c:	ldr	r1, [fp, #-20]	; 0xffffffec
     c60:	mov	r0, r3
     c64:	bl	0 <coda_type_number_set_endianness>
     c68:	mrc	15, 0, r3, cr13, cr0, {3}
     c6c:	ldr	r2, [pc, #-1428]	; 6e0 <grib_init+0xa0>
     c70:	ldr	r3, [r3, r2]
     c74:	add	r3, r3, #32
     c78:	ldr	r3, [r3]
     c7c:	mov	r1, #1
     c80:	mov	r0, r3
     c84:	bl	0 <coda_type_set_read_type>
     c88:	mrc	15, 0, r3, cr13, cr0, {3}
     c8c:	ldr	r2, [pc, #-1460]	; 6e0 <grib_init+0xa0>
     c90:	ldr	r3, [r3, r2]
     c94:	add	r3, r3, #32
     c98:	ldr	r1, [r3]
     c9c:	mov	r2, #8
     ca0:	mov	r3, #0
     ca4:	mov	r0, r1
     ca8:	bl	0 <coda_type_set_bit_size>
     cac:	mrc	15, 0, r3, cr13, cr0, {3}
     cb0:	ldr	r2, [pc, #-1496]	; 6e0 <grib_init+0xa0>
     cb4:	ldr	r3, [r3, r2]
     cb8:	add	r3, r3, #32
     cbc:	ldr	r3, [r3]
     cc0:	movw	r1, #0
     cc4:	movt	r1, #0
     cc8:	mov	r0, r3
     ccc:	bl	0 <coda_type_set_description>
     cd0:	mrc	15, 0, r3, cr13, cr0, {3}
     cd4:	ldr	r2, [pc, #-1532]	; 6e0 <grib_init+0xa0>
     cd8:	ldr	r3, [r3, r2]
     cdc:	add	r4, r3, #36	; 0x24
     ce0:	mov	r1, #2
     ce4:	mov	r0, #7
     ce8:	bl	0 <coda_type_number_new>
     cec:	mov	r3, r0
     cf0:	str	r3, [r4]
     cf4:	mrc	15, 0, r3, cr13, cr0, {3}
     cf8:	ldr	r2, [pc, #-1568]	; 6e0 <grib_init+0xa0>
     cfc:	ldr	r3, [r3, r2]
     d00:	add	r3, r3, #36	; 0x24
     d04:	ldr	r3, [r3]
     d08:	ldr	r1, [fp, #-20]	; 0xffffffec
     d0c:	mov	r0, r3
     d10:	bl	0 <coda_type_number_set_endianness>
     d14:	mrc	15, 0, r3, cr13, cr0, {3}
     d18:	ldr	r2, [pc, #-1600]	; 6e0 <grib_init+0xa0>
     d1c:	ldr	r3, [r3, r2]
     d20:	add	r3, r3, #36	; 0x24
     d24:	ldr	r3, [r3]
     d28:	mov	r1, #3
     d2c:	mov	r0, r3
     d30:	bl	0 <coda_type_set_read_type>
     d34:	mrc	15, 0, r3, cr13, cr0, {3}
     d38:	ldr	r2, [pc, #-1632]	; 6e0 <grib_init+0xa0>
     d3c:	ldr	r3, [r3, r2]
     d40:	add	r3, r3, #36	; 0x24
     d44:	ldr	r1, [r3]
     d48:	mov	r2, #16
     d4c:	mov	r3, #0
     d50:	mov	r0, r1
     d54:	bl	0 <coda_type_set_bit_size>
     d58:	mrc	15, 0, r3, cr13, cr0, {3}
     d5c:	ldr	r2, [pc, #-1668]	; 6e0 <grib_init+0xa0>
     d60:	ldr	r3, [r3, r2]
     d64:	add	r3, r3, #36	; 0x24
     d68:	ldr	r3, [r3]
     d6c:	movw	r1, #0
     d70:	movt	r1, #0
     d74:	mov	r0, r3
     d78:	bl	0 <coda_type_set_description>
     d7c:	mrc	15, 0, r3, cr13, cr0, {3}
     d80:	ldr	r2, [pc, #-1704]	; 6e0 <grib_init+0xa0>
     d84:	ldr	r3, [r3, r2]
     d88:	add	r4, r3, #40	; 0x28
     d8c:	mov	r1, #2
     d90:	mov	r0, #7
     d94:	bl	0 <coda_type_number_new>
     d98:	mov	r3, r0
     d9c:	str	r3, [r4]
     da0:	mrc	15, 0, r3, cr13, cr0, {3}
     da4:	ldr	r2, [pc, #-1740]	; 6e0 <grib_init+0xa0>
     da8:	ldr	r3, [r3, r2]
     dac:	add	r3, r3, #40	; 0x28
     db0:	ldr	r3, [r3]
     db4:	ldr	r1, [fp, #-20]	; 0xffffffec
     db8:	mov	r0, r3
     dbc:	bl	0 <coda_type_number_set_endianness>
     dc0:	mrc	15, 0, r3, cr13, cr0, {3}
     dc4:	ldr	r2, [pc, #-1772]	; 6e0 <grib_init+0xa0>
     dc8:	ldr	r3, [r3, r2]
     dcc:	add	r3, r3, #40	; 0x28
     dd0:	ldr	r3, [r3]
     dd4:	mov	r1, #1
     dd8:	mov	r0, r3
     ddc:	bl	0 <coda_type_set_read_type>
     de0:	mrc	15, 0, r3, cr13, cr0, {3}
     de4:	ldr	r2, [pc, #-1804]	; 6e0 <grib_init+0xa0>
     de8:	ldr	r3, [r3, r2]
     dec:	add	r3, r3, #40	; 0x28
     df0:	ldr	r1, [r3]
     df4:	mov	r2, #8
     df8:	mov	r3, #0
     dfc:	mov	r0, r1
     e00:	bl	0 <coda_type_set_bit_size>
     e04:	mrc	15, 0, r3, cr13, cr0, {3}
     e08:	ldr	r2, [pc, #-1840]	; 6e0 <grib_init+0xa0>
     e0c:	ldr	r3, [r3, r2]
     e10:	add	r3, r3, #40	; 0x28
     e14:	ldr	r3, [r3]
     e18:	movw	r1, #0
     e1c:	movt	r1, #0
     e20:	mov	r0, r3
     e24:	bl	0 <coda_type_set_description>
     e28:	mrc	15, 0, r3, cr13, cr0, {3}
     e2c:	ldr	r2, [pc, #-1876]	; 6e0 <grib_init+0xa0>
     e30:	ldr	r3, [r3, r2]
     e34:	add	r4, r3, #44	; 0x2c
     e38:	mov	r1, #2
     e3c:	mov	r0, #7
     e40:	bl	0 <coda_type_number_new>
     e44:	mov	r3, r0
     e48:	str	r3, [r4]
     e4c:	mrc	15, 0, r3, cr13, cr0, {3}
     e50:	ldr	r2, [pc, #-1912]	; 6e0 <grib_init+0xa0>
     e54:	ldr	r3, [r3, r2]
     e58:	add	r3, r3, #44	; 0x2c
     e5c:	ldr	r3, [r3]
     e60:	ldr	r1, [fp, #-20]	; 0xffffffec
     e64:	mov	r0, r3
     e68:	bl	0 <coda_type_number_set_endianness>
     e6c:	mrc	15, 0, r3, cr13, cr0, {3}
     e70:	ldr	r2, [pc, #-1944]	; 6e0 <grib_init+0xa0>
     e74:	ldr	r3, [r3, r2]
     e78:	add	r3, r3, #44	; 0x2c
     e7c:	ldr	r3, [r3]
     e80:	mov	r1, #3
     e84:	mov	r0, r3
     e88:	bl	0 <coda_type_set_read_type>
     e8c:	mrc	15, 0, r3, cr13, cr0, {3}
     e90:	ldr	r2, [pc, #-1976]	; 6e0 <grib_init+0xa0>
     e94:	ldr	r3, [r3, r2]
     e98:	add	r3, r3, #44	; 0x2c
     e9c:	ldr	r1, [r3]
     ea0:	mov	r2, #16
     ea4:	mov	r3, #0
     ea8:	mov	r0, r1
     eac:	bl	0 <coda_type_set_bit_size>
     eb0:	mrc	15, 0, r3, cr13, cr0, {3}
     eb4:	ldr	r2, [pc, #-2012]	; 6e0 <grib_init+0xa0>
     eb8:	ldr	r3, [r3, r2]
     ebc:	add	r3, r3, #44	; 0x2c
     ec0:	ldr	r3, [r3]
     ec4:	movw	r1, #0
     ec8:	movt	r1, #0
     ecc:	mov	r0, r3
     ed0:	bl	0 <coda_type_set_description>
     ed4:	mrc	15, 0, r3, cr13, cr0, {3}
     ed8:	ldr	r2, [pc, #-2048]	; 6e0 <grib_init+0xa0>
     edc:	ldr	r3, [r3, r2]
     ee0:	add	r4, r3, #48	; 0x30
     ee4:	mov	r1, #2
     ee8:	mov	r0, #7
     eec:	bl	0 <coda_type_number_new>
     ef0:	mov	r3, r0
     ef4:	str	r3, [r4]
     ef8:	mrc	15, 0, r3, cr13, cr0, {3}
     efc:	ldr	r2, [pc, #-2084]	; 6e0 <grib_init+0xa0>
     f00:	ldr	r3, [r3, r2]
     f04:	add	r3, r3, #48	; 0x30
     f08:	ldr	r3, [r3]
     f0c:	ldr	r1, [fp, #-20]	; 0xffffffec
     f10:	mov	r0, r3
     f14:	bl	0 <coda_type_number_set_endianness>
     f18:	mrc	15, 0, r3, cr13, cr0, {3}
     f1c:	ldr	r2, [pc, #-2116]	; 6e0 <grib_init+0xa0>
     f20:	ldr	r3, [r3, r2]
     f24:	add	r3, r3, #48	; 0x30
     f28:	ldr	r3, [r3]
     f2c:	mov	r1, #1
     f30:	mov	r0, r3
     f34:	bl	0 <coda_type_set_read_type>
     f38:	mrc	15, 0, r3, cr13, cr0, {3}
     f3c:	ldr	r2, [pc, #-2148]	; 6e0 <grib_init+0xa0>
     f40:	ldr	r3, [r3, r2]
     f44:	add	r3, r3, #48	; 0x30
     f48:	ldr	r1, [r3]
     f4c:	mov	r2, #8
     f50:	mov	r3, #0
     f54:	mov	r0, r1
     f58:	bl	0 <coda_type_set_bit_size>
     f5c:	mrc	15, 0, r3, cr13, cr0, {3}
     f60:	ldr	r2, [pc, #-2184]	; 6e0 <grib_init+0xa0>
     f64:	ldr	r3, [r3, r2]
     f68:	add	r3, r3, #48	; 0x30
     f6c:	ldr	r3, [r3]
     f70:	movw	r1, #0
     f74:	movt	r1, #0
     f78:	mov	r0, r3
     f7c:	bl	0 <coda_type_set_description>
     f80:	mrc	15, 0, r3, cr13, cr0, {3}
     f84:	ldr	r2, [pc, #-2220]	; 6e0 <grib_init+0xa0>
     f88:	ldr	r3, [r3, r2]
     f8c:	add	r4, r3, #52	; 0x34
     f90:	mov	r1, #2
     f94:	mov	r0, #7
     f98:	bl	0 <coda_type_number_new>
     f9c:	mov	r3, r0
     fa0:	str	r3, [r4]
     fa4:	mrc	15, 0, r3, cr13, cr0, {3}
     fa8:	ldr	r2, [pc, #-2256]	; 6e0 <grib_init+0xa0>
     fac:	ldr	r3, [r3, r2]
     fb0:	add	r3, r3, #52	; 0x34
     fb4:	ldr	r3, [r3]
     fb8:	ldr	r1, [fp, #-20]	; 0xffffffec
     fbc:	mov	r0, r3
     fc0:	bl	0 <coda_type_number_set_endianness>
     fc4:	mrc	15, 0, r3, cr13, cr0, {3}
     fc8:	ldr	r2, [pc, #-2288]	; 6e0 <grib_init+0xa0>
     fcc:	ldr	r3, [r3, r2]
     fd0:	add	r3, r3, #52	; 0x34
     fd4:	ldr	r3, [r3]
     fd8:	mov	r1, #1
     fdc:	mov	r0, r3
     fe0:	bl	0 <coda_type_set_read_type>
     fe4:	mrc	15, 0, r3, cr13, cr0, {3}
     fe8:	ldr	r2, [pc, #-2320]	; 6e0 <grib_init+0xa0>
     fec:	ldr	r3, [r3, r2]
     ff0:	add	r3, r3, #52	; 0x34
     ff4:	ldr	r1, [r3]
     ff8:	mov	r2, #8
     ffc:	mov	r3, #0
    1000:	mov	r0, r1
    1004:	bl	0 <coda_type_set_bit_size>
    1008:	mrc	15, 0, r3, cr13, cr0, {3}
    100c:	ldr	r2, [pc, #-2356]	; 6e0 <grib_init+0xa0>
    1010:	ldr	r3, [r3, r2]
    1014:	add	r3, r3, #52	; 0x34
    1018:	ldr	r3, [r3]
    101c:	movw	r1, #0
    1020:	movt	r1, #0
    1024:	mov	r0, r3
    1028:	bl	0 <coda_type_set_description>
    102c:	mrc	15, 0, r3, cr13, cr0, {3}
    1030:	ldr	r2, [pc, #-2392]	; 6e0 <grib_init+0xa0>
    1034:	ldr	r3, [r3, r2]
    1038:	add	r4, r3, #56	; 0x38
    103c:	mov	r1, #2
    1040:	mov	r0, #7
    1044:	bl	0 <coda_type_number_new>
    1048:	mov	r3, r0
    104c:	str	r3, [r4]
    1050:	mrc	15, 0, r3, cr13, cr0, {3}
    1054:	ldr	r2, [pc, #-2428]	; 6e0 <grib_init+0xa0>
    1058:	ldr	r3, [r3, r2]
    105c:	add	r3, r3, #56	; 0x38
    1060:	ldr	r3, [r3]
    1064:	ldr	r1, [fp, #-20]	; 0xffffffec
    1068:	mov	r0, r3
    106c:	bl	0 <coda_type_number_set_endianness>
    1070:	mrc	15, 0, r3, cr13, cr0, {3}
    1074:	ldr	r2, [pc, #-2460]	; 6e0 <grib_init+0xa0>
    1078:	ldr	r3, [r3, r2]
    107c:	add	r3, r3, #56	; 0x38
    1080:	ldr	r3, [r3]
    1084:	mov	r1, #1
    1088:	mov	r0, r3
    108c:	bl	0 <coda_type_set_read_type>
    1090:	mrc	15, 0, r3, cr13, cr0, {3}
    1094:	ldr	r2, [pc, #-2492]	; 6e0 <grib_init+0xa0>
    1098:	ldr	r3, [r3, r2]
    109c:	add	r3, r3, #56	; 0x38
    10a0:	ldr	r1, [r3]
    10a4:	mov	r2, #8
    10a8:	mov	r3, #0
    10ac:	mov	r0, r1
    10b0:	bl	0 <coda_type_set_bit_size>
    10b4:	mrc	15, 0, r3, cr13, cr0, {3}
    10b8:	ldr	r2, [pc, #-2528]	; 6e0 <grib_init+0xa0>
    10bc:	ldr	r3, [r3, r2]
    10c0:	add	r3, r3, #56	; 0x38
    10c4:	ldr	r3, [r3]
    10c8:	movw	r1, #0
    10cc:	movt	r1, #0
    10d0:	mov	r0, r3
    10d4:	bl	0 <coda_type_set_description>
    10d8:	mrc	15, 0, r3, cr13, cr0, {3}
    10dc:	ldr	r2, [pc, #-2564]	; 6e0 <grib_init+0xa0>
    10e0:	ldr	r3, [r3, r2]
    10e4:	add	r4, r3, #60	; 0x3c
    10e8:	mov	r1, #2
    10ec:	mov	r0, #7
    10f0:	bl	0 <coda_type_number_new>
    10f4:	mov	r3, r0
    10f8:	str	r3, [r4]
    10fc:	mrc	15, 0, r3, cr13, cr0, {3}
    1100:	ldr	r2, [pc, #-2600]	; 6e0 <grib_init+0xa0>
    1104:	ldr	r3, [r3, r2]
    1108:	add	r3, r3, #60	; 0x3c
    110c:	ldr	r3, [r3]
    1110:	ldr	r1, [fp, #-20]	; 0xffffffec
    1114:	mov	r0, r3
    1118:	bl	0 <coda_type_number_set_endianness>
    111c:	mrc	15, 0, r3, cr13, cr0, {3}
    1120:	ldr	r2, [pc, #-2632]	; 6e0 <grib_init+0xa0>
    1124:	ldr	r3, [r3, r2]
    1128:	add	r3, r3, #60	; 0x3c
    112c:	ldr	r3, [r3]
    1130:	mov	r1, #1
    1134:	mov	r0, r3
    1138:	bl	0 <coda_type_set_read_type>
    113c:	mrc	15, 0, r3, cr13, cr0, {3}
    1140:	ldr	r2, [pc, #-2664]	; 6e0 <grib_init+0xa0>
    1144:	ldr	r3, [r3, r2]
    1148:	add	r3, r3, #60	; 0x3c
    114c:	ldr	r1, [r3]
    1150:	mov	r2, #8
    1154:	mov	r3, #0
    1158:	mov	r0, r1
    115c:	bl	0 <coda_type_set_bit_size>
    1160:	mrc	15, 0, r3, cr13, cr0, {3}
    1164:	ldr	r2, [pc, #-2700]	; 6e0 <grib_init+0xa0>
    1168:	ldr	r3, [r3, r2]
    116c:	add	r3, r3, #60	; 0x3c
    1170:	ldr	r3, [r3]
    1174:	movw	r1, #0
    1178:	movt	r1, #0
    117c:	mov	r0, r3
    1180:	bl	0 <coda_type_set_description>
    1184:	mrc	15, 0, r3, cr13, cr0, {3}
    1188:	ldr	r2, [pc, #-2736]	; 6e0 <grib_init+0xa0>
    118c:	ldr	r3, [r3, r2]
    1190:	add	r4, r3, #64	; 0x40
    1194:	mov	r1, #2
    1198:	mov	r0, #7
    119c:	bl	0 <coda_type_number_new>
    11a0:	mov	r3, r0
    11a4:	str	r3, [r4]
    11a8:	mrc	15, 0, r3, cr13, cr0, {3}
    11ac:	ldr	r2, [pc, #-2772]	; 6e0 <grib_init+0xa0>
    11b0:	ldr	r3, [r3, r2]
    11b4:	add	r3, r3, #64	; 0x40
    11b8:	ldr	r3, [r3]
    11bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    11c0:	mov	r0, r3
    11c4:	bl	0 <coda_type_number_set_endianness>
    11c8:	mrc	15, 0, r3, cr13, cr0, {3}
    11cc:	ldr	r2, [pc, #-2804]	; 6e0 <grib_init+0xa0>
    11d0:	ldr	r3, [r3, r2]
    11d4:	add	r3, r3, #64	; 0x40
    11d8:	ldr	r3, [r3]
    11dc:	mov	r1, #1
    11e0:	mov	r0, r3
    11e4:	bl	0 <coda_type_set_read_type>
    11e8:	mrc	15, 0, r3, cr13, cr0, {3}
    11ec:	ldr	r2, [pc, #-2836]	; 6e0 <grib_init+0xa0>
    11f0:	ldr	r3, [r3, r2]
    11f4:	add	r3, r3, #64	; 0x40
    11f8:	ldr	r1, [r3]
    11fc:	mov	r2, #8
    1200:	mov	r3, #0
    1204:	mov	r0, r1
    1208:	bl	0 <coda_type_set_bit_size>
    120c:	mrc	15, 0, r3, cr13, cr0, {3}
    1210:	ldr	r2, [pc, #-2872]	; 6e0 <grib_init+0xa0>
    1214:	ldr	r3, [r3, r2]
    1218:	add	r3, r3, #64	; 0x40
    121c:	ldr	r3, [r3]
    1220:	movw	r1, #0
    1224:	movt	r1, #0
    1228:	mov	r0, r3
    122c:	bl	0 <coda_type_set_description>
    1230:	mrc	15, 0, r3, cr13, cr0, {3}
    1234:	ldr	r2, [pc, #-2908]	; 6e0 <grib_init+0xa0>
    1238:	ldr	r3, [r3, r2]
    123c:	add	r4, r3, #68	; 0x44
    1240:	mov	r1, #2
    1244:	mov	r0, #7
    1248:	bl	0 <coda_type_number_new>
    124c:	mov	r3, r0
    1250:	str	r3, [r4]
    1254:	mrc	15, 0, r3, cr13, cr0, {3}
    1258:	ldr	r2, [pc, #-2944]	; 6e0 <grib_init+0xa0>
    125c:	ldr	r3, [r3, r2]
    1260:	add	r3, r3, #68	; 0x44
    1264:	ldr	r3, [r3]
    1268:	ldr	r1, [fp, #-20]	; 0xffffffec
    126c:	mov	r0, r3
    1270:	bl	0 <coda_type_number_set_endianness>
    1274:	mrc	15, 0, r3, cr13, cr0, {3}
    1278:	ldr	r2, [pc, #-2976]	; 6e0 <grib_init+0xa0>
    127c:	ldr	r3, [r3, r2]
    1280:	add	r3, r3, #68	; 0x44
    1284:	ldr	r3, [r3]
    1288:	mov	r1, #1
    128c:	mov	r0, r3
    1290:	bl	0 <coda_type_set_read_type>
    1294:	mrc	15, 0, r3, cr13, cr0, {3}
    1298:	ldr	r2, [pc, #-3008]	; 6e0 <grib_init+0xa0>
    129c:	ldr	r3, [r3, r2]
    12a0:	add	r3, r3, #68	; 0x44
    12a4:	ldr	r1, [r3]
    12a8:	mov	r2, #8
    12ac:	mov	r3, #0
    12b0:	mov	r0, r1
    12b4:	bl	0 <coda_type_set_bit_size>
    12b8:	mrc	15, 0, r3, cr13, cr0, {3}
    12bc:	ldr	r2, [pc, #-3044]	; 6e0 <grib_init+0xa0>
    12c0:	ldr	r3, [r3, r2]
    12c4:	add	r3, r3, #68	; 0x44
    12c8:	ldr	r3, [r3]
    12cc:	movw	r1, #0
    12d0:	movt	r1, #0
    12d4:	mov	r0, r3
    12d8:	bl	0 <coda_type_set_description>
    12dc:	mrc	15, 0, r3, cr13, cr0, {3}
    12e0:	ldr	r2, [pc, #-3080]	; 6e0 <grib_init+0xa0>
    12e4:	ldr	r3, [r3, r2]
    12e8:	add	r4, r3, #72	; 0x48
    12ec:	mov	r1, #2
    12f0:	mov	r0, #7
    12f4:	bl	0 <coda_type_number_new>
    12f8:	mov	r3, r0
    12fc:	str	r3, [r4]
    1300:	mrc	15, 0, r3, cr13, cr0, {3}
    1304:	ldr	r2, [pc, #-3116]	; 6e0 <grib_init+0xa0>
    1308:	ldr	r3, [r3, r2]
    130c:	add	r3, r3, #72	; 0x48
    1310:	ldr	r3, [r3]
    1314:	ldr	r1, [fp, #-20]	; 0xffffffec
    1318:	mov	r0, r3
    131c:	bl	0 <coda_type_number_set_endianness>
    1320:	mrc	15, 0, r3, cr13, cr0, {3}
    1324:	ldr	r2, [pc, #-3148]	; 6e0 <grib_init+0xa0>
    1328:	ldr	r3, [r3, r2]
    132c:	add	r3, r3, #72	; 0x48
    1330:	ldr	r3, [r3]
    1334:	mov	r1, #1
    1338:	mov	r0, r3
    133c:	bl	0 <coda_type_set_read_type>
    1340:	mrc	15, 0, r3, cr13, cr0, {3}
    1344:	ldr	r2, [pc, #-3180]	; 6e0 <grib_init+0xa0>
    1348:	ldr	r3, [r3, r2]
    134c:	add	r3, r3, #72	; 0x48
    1350:	ldr	r1, [r3]
    1354:	mov	r2, #8
    1358:	mov	r3, #0
    135c:	mov	r0, r1
    1360:	bl	0 <coda_type_set_bit_size>
    1364:	mrc	15, 0, r3, cr13, cr0, {3}
    1368:	ldr	r2, [pc, #-3216]	; 6e0 <grib_init+0xa0>
    136c:	ldr	r3, [r3, r2]
    1370:	add	r3, r3, #72	; 0x48
    1374:	ldr	r3, [r3]
    1378:	movw	r1, #0
    137c:	movt	r1, #0
    1380:	mov	r0, r3
    1384:	bl	0 <coda_type_set_description>
    1388:	mrc	15, 0, r3, cr13, cr0, {3}
    138c:	ldr	r2, [pc, #-3252]	; 6e0 <grib_init+0xa0>
    1390:	ldr	r3, [r3, r2]
    1394:	add	r4, r3, #76	; 0x4c
    1398:	mov	r1, #2
    139c:	mov	r0, #7
    13a0:	bl	0 <coda_type_number_new>
    13a4:	mov	r3, r0
    13a8:	str	r3, [r4]
    13ac:	mrc	15, 0, r3, cr13, cr0, {3}
    13b0:	ldr	r2, [pc, #-3288]	; 6e0 <grib_init+0xa0>
    13b4:	ldr	r3, [r3, r2]
    13b8:	add	r3, r3, #76	; 0x4c
    13bc:	ldr	r3, [r3]
    13c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    13c4:	mov	r0, r3
    13c8:	bl	0 <coda_type_number_set_endianness>
    13cc:	mrc	15, 0, r3, cr13, cr0, {3}
    13d0:	ldr	r2, [pc, #-3320]	; 6e0 <grib_init+0xa0>
    13d4:	ldr	r3, [r3, r2]
    13d8:	add	r3, r3, #76	; 0x4c
    13dc:	ldr	r3, [r3]
    13e0:	mov	r1, #1
    13e4:	mov	r0, r3
    13e8:	bl	0 <coda_type_set_read_type>
    13ec:	mrc	15, 0, r3, cr13, cr0, {3}
    13f0:	ldr	r2, [pc, #-3352]	; 6e0 <grib_init+0xa0>
    13f4:	ldr	r3, [r3, r2]
    13f8:	add	r3, r3, #76	; 0x4c
    13fc:	ldr	r1, [r3]
    1400:	mov	r2, #8
    1404:	mov	r3, #0
    1408:	mov	r0, r1
    140c:	bl	0 <coda_type_set_bit_size>
    1410:	mrc	15, 0, r3, cr13, cr0, {3}
    1414:	ldr	r2, [pc, #-3388]	; 6e0 <grib_init+0xa0>
    1418:	ldr	r3, [r3, r2]
    141c:	add	r3, r3, #76	; 0x4c
    1420:	ldr	r3, [r3]
    1424:	movw	r1, #0
    1428:	movt	r1, #0
    142c:	mov	r0, r3
    1430:	bl	0 <coda_type_set_description>
    1434:	mrc	15, 0, r3, cr13, cr0, {3}
    1438:	ldr	r2, [pc, #-3424]	; 6e0 <grib_init+0xa0>
    143c:	ldr	r3, [r3, r2]
    1440:	add	r4, r3, #80	; 0x50
    1444:	mov	r1, #2
    1448:	mov	r0, #7
    144c:	bl	0 <coda_type_number_new>
    1450:	mov	r3, r0
    1454:	str	r3, [r4]
    1458:	mrc	15, 0, r3, cr13, cr0, {3}
    145c:	ldr	r2, [pc, #-3460]	; 6e0 <grib_init+0xa0>
    1460:	ldr	r3, [r3, r2]
    1464:	add	r3, r3, #80	; 0x50
    1468:	ldr	r3, [r3]
    146c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1470:	mov	r0, r3
    1474:	bl	0 <coda_type_number_set_endianness>
    1478:	mrc	15, 0, r3, cr13, cr0, {3}
    147c:	ldr	r2, [pc, #-3492]	; 6e0 <grib_init+0xa0>
    1480:	ldr	r3, [r3, r2]
    1484:	add	r3, r3, #80	; 0x50
    1488:	ldr	r3, [r3]
    148c:	mov	r1, #1
    1490:	mov	r0, r3
    1494:	bl	0 <coda_type_set_read_type>
    1498:	mrc	15, 0, r3, cr13, cr0, {3}
    149c:	ldr	r2, [pc, #-3524]	; 6e0 <grib_init+0xa0>
    14a0:	ldr	r3, [r3, r2]
    14a4:	add	r3, r3, #80	; 0x50
    14a8:	ldr	r1, [r3]
    14ac:	mov	r2, #8
    14b0:	mov	r3, #0
    14b4:	mov	r0, r1
    14b8:	bl	0 <coda_type_set_bit_size>
    14bc:	mrc	15, 0, r3, cr13, cr0, {3}
    14c0:	ldr	r2, [pc, #-3560]	; 6e0 <grib_init+0xa0>
    14c4:	ldr	r3, [r3, r2]
    14c8:	add	r3, r3, #80	; 0x50
    14cc:	ldr	r3, [r3]
    14d0:	movw	r1, #0
    14d4:	movt	r1, #0
    14d8:	mov	r0, r3
    14dc:	bl	0 <coda_type_set_description>
    14e0:	mrc	15, 0, r3, cr13, cr0, {3}
    14e4:	ldr	r2, [pc, #-3596]	; 6e0 <grib_init+0xa0>
    14e8:	ldr	r3, [r3, r2]
    14ec:	add	r4, r3, #84	; 0x54
    14f0:	mov	r1, #2
    14f4:	mov	r0, #7
    14f8:	bl	0 <coda_type_number_new>
    14fc:	mov	r3, r0
    1500:	str	r3, [r4]
    1504:	mrc	15, 0, r3, cr13, cr0, {3}
    1508:	ldr	r2, [pc, #-3632]	; 6e0 <grib_init+0xa0>
    150c:	ldr	r3, [r3, r2]
    1510:	add	r3, r3, #84	; 0x54
    1514:	ldr	r3, [r3]
    1518:	ldr	r1, [fp, #-20]	; 0xffffffec
    151c:	mov	r0, r3
    1520:	bl	0 <coda_type_number_set_endianness>
    1524:	mrc	15, 0, r3, cr13, cr0, {3}
    1528:	ldr	r2, [pc, #-3664]	; 6e0 <grib_init+0xa0>
    152c:	ldr	r3, [r3, r2]
    1530:	add	r3, r3, #84	; 0x54
    1534:	ldr	r3, [r3]
    1538:	mov	r1, #3
    153c:	mov	r0, r3
    1540:	bl	0 <coda_type_set_read_type>
    1544:	mrc	15, 0, r3, cr13, cr0, {3}
    1548:	ldr	r2, [pc, #-3696]	; 6e0 <grib_init+0xa0>
    154c:	ldr	r3, [r3, r2]
    1550:	add	r3, r3, #84	; 0x54
    1554:	ldr	r1, [r3]
    1558:	mov	r2, #16
    155c:	mov	r3, #0
    1560:	mov	r0, r1
    1564:	bl	0 <coda_type_set_bit_size>
    1568:	mrc	15, 0, r3, cr13, cr0, {3}
    156c:	ldr	r2, [pc, #-3732]	; 6e0 <grib_init+0xa0>
    1570:	ldr	r3, [r3, r2]
    1574:	add	r3, r3, #84	; 0x54
    1578:	ldr	r3, [r3]
    157c:	movw	r1, #0
    1580:	movt	r1, #0
    1584:	mov	r0, r3
    1588:	bl	0 <coda_type_set_description>
    158c:	mrc	15, 0, r3, cr13, cr0, {3}
    1590:	ldr	r2, [pc, #-3768]	; 6e0 <grib_init+0xa0>
    1594:	ldr	r3, [r3, r2]
    1598:	add	r4, r3, #88	; 0x58
    159c:	mov	r1, #2
    15a0:	mov	r0, #7
    15a4:	bl	0 <coda_type_number_new>
    15a8:	mov	r3, r0
    15ac:	str	r3, [r4]
    15b0:	mrc	15, 0, r3, cr13, cr0, {3}
    15b4:	ldr	r2, [pc, #-3804]	; 6e0 <grib_init+0xa0>
    15b8:	ldr	r3, [r3, r2]
    15bc:	add	r3, r3, #88	; 0x58
    15c0:	ldr	r3, [r3]
    15c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    15c8:	mov	r0, r3
    15cc:	bl	0 <coda_type_number_set_endianness>
    15d0:	mrc	15, 0, r3, cr13, cr0, {3}
    15d4:	ldr	r2, [pc, #-3836]	; 6e0 <grib_init+0xa0>
    15d8:	ldr	r3, [r3, r2]
    15dc:	add	r3, r3, #88	; 0x58
    15e0:	ldr	r3, [r3]
    15e4:	mov	r1, #1
    15e8:	mov	r0, r3
    15ec:	bl	0 <coda_type_set_read_type>
    15f0:	mrc	15, 0, r3, cr13, cr0, {3}
    15f4:	ldr	r2, [pc, #-3868]	; 6e0 <grib_init+0xa0>
    15f8:	ldr	r3, [r3, r2]
    15fc:	add	r3, r3, #88	; 0x58
    1600:	ldr	r1, [r3]
    1604:	mov	r2, #8
    1608:	mov	r3, #0
    160c:	mov	r0, r1
    1610:	bl	0 <coda_type_set_bit_size>
    1614:	mrc	15, 0, r3, cr13, cr0, {3}
    1618:	ldr	r2, [pc, #-3904]	; 6e0 <grib_init+0xa0>
    161c:	ldr	r3, [r3, r2]
    1620:	add	r3, r3, #88	; 0x58
    1624:	ldr	r3, [r3]
    1628:	movw	r1, #0
    162c:	movt	r1, #0
    1630:	mov	r0, r3
    1634:	bl	0 <coda_type_set_description>
    1638:	mrc	15, 0, r3, cr13, cr0, {3}
    163c:	ldr	r2, [pc, #-3940]	; 6e0 <grib_init+0xa0>
    1640:	ldr	r3, [r3, r2]
    1644:	add	r4, r3, #92	; 0x5c
    1648:	mov	r1, #2
    164c:	mov	r0, #7
    1650:	bl	0 <coda_type_number_new>
    1654:	mov	r3, r0
    1658:	str	r3, [r4]
    165c:	mrc	15, 0, r3, cr13, cr0, {3}
    1660:	ldr	r2, [pc, #-3976]	; 6e0 <grib_init+0xa0>
    1664:	ldr	r3, [r3, r2]
    1668:	add	r3, r3, #92	; 0x5c
    166c:	ldr	r3, [r3]
    1670:	ldr	r1, [fp, #-20]	; 0xffffffec
    1674:	mov	r0, r3
    1678:	bl	0 <coda_type_number_set_endianness>
    167c:	mrc	15, 0, r3, cr13, cr0, {3}
    1680:	ldr	r2, [pc, #-4008]	; 6e0 <grib_init+0xa0>
    1684:	ldr	r3, [r3, r2]
    1688:	add	r3, r3, #92	; 0x5c
    168c:	ldr	r3, [r3]
    1690:	mov	r1, #1
    1694:	mov	r0, r3
    1698:	bl	0 <coda_type_set_read_type>
    169c:	mrc	15, 0, r3, cr13, cr0, {3}
    16a0:	ldr	r2, [pc, #-4040]	; 6e0 <grib_init+0xa0>
    16a4:	ldr	r3, [r3, r2]
    16a8:	add	r3, r3, #92	; 0x5c
    16ac:	ldr	r1, [r3]
    16b0:	mov	r2, #8
    16b4:	mov	r3, #0
    16b8:	mov	r0, r1
    16bc:	bl	0 <coda_type_set_bit_size>
    16c0:	mrc	15, 0, r3, cr13, cr0, {3}
    16c4:	ldr	r2, [pc, #-4076]	; 6e0 <grib_init+0xa0>
    16c8:	ldr	r3, [r3, r2]
    16cc:	add	r3, r3, #92	; 0x5c
    16d0:	ldr	r3, [r3]
    16d4:	movw	r1, #0
    16d8:	movt	r1, #0
    16dc:	mov	r0, r3
    16e0:	bl	0 <coda_type_set_description>
    16e4:	mrc	15, 0, r3, cr13, cr0, {3}
    16e8:	ldr	r2, [pc, #4088]	; 26e8 <grib_init+0x20a8>
    16ec:	ldr	r3, [r3, r2]
    16f0:	add	r4, r3, #96	; 0x60
    16f4:	mov	r1, #2
    16f8:	mov	r0, #7
    16fc:	bl	0 <coda_type_number_new>
    1700:	mov	r3, r0
    1704:	str	r3, [r4]
    1708:	mrc	15, 0, r3, cr13, cr0, {3}
    170c:	ldr	r2, [pc, #4052]	; 26e8 <grib_init+0x20a8>
    1710:	ldr	r3, [r3, r2]
    1714:	add	r3, r3, #96	; 0x60
    1718:	ldr	r3, [r3]
    171c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1720:	mov	r0, r3
    1724:	bl	0 <coda_type_number_set_endianness>
    1728:	mrc	15, 0, r3, cr13, cr0, {3}
    172c:	ldr	r2, [pc, #4020]	; 26e8 <grib_init+0x20a8>
    1730:	ldr	r3, [r3, r2]
    1734:	add	r3, r3, #96	; 0x60
    1738:	ldr	r3, [r3]
    173c:	mov	r1, #1
    1740:	mov	r0, r3
    1744:	bl	0 <coda_type_set_read_type>
    1748:	mrc	15, 0, r3, cr13, cr0, {3}
    174c:	ldr	r2, [pc, #3988]	; 26e8 <grib_init+0x20a8>
    1750:	ldr	r3, [r3, r2]
    1754:	add	r3, r3, #96	; 0x60
    1758:	ldr	r1, [r3]
    175c:	mov	r2, #8
    1760:	mov	r3, #0
    1764:	mov	r0, r1
    1768:	bl	0 <coda_type_set_bit_size>
    176c:	mrc	15, 0, r3, cr13, cr0, {3}
    1770:	ldr	r2, [pc, #3952]	; 26e8 <grib_init+0x20a8>
    1774:	ldr	r3, [r3, r2]
    1778:	add	r3, r3, #96	; 0x60
    177c:	ldr	r3, [r3]
    1780:	movw	r1, #0
    1784:	movt	r1, #0
    1788:	mov	r0, r3
    178c:	bl	0 <coda_type_set_description>
    1790:	mrc	15, 0, r3, cr13, cr0, {3}
    1794:	ldr	r2, [pc, #3916]	; 26e8 <grib_init+0x20a8>
    1798:	ldr	r3, [r3, r2]
    179c:	add	r4, r3, #100	; 0x64
    17a0:	mov	r1, #2
    17a4:	mov	r0, #7
    17a8:	bl	0 <coda_type_number_new>
    17ac:	mov	r3, r0
    17b0:	str	r3, [r4]
    17b4:	mrc	15, 0, r3, cr13, cr0, {3}
    17b8:	ldr	r2, [pc, #3880]	; 26e8 <grib_init+0x20a8>
    17bc:	ldr	r3, [r3, r2]
    17c0:	add	r3, r3, #100	; 0x64
    17c4:	ldr	r3, [r3]
    17c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    17cc:	mov	r0, r3
    17d0:	bl	0 <coda_type_number_set_endianness>
    17d4:	mrc	15, 0, r3, cr13, cr0, {3}
    17d8:	ldr	r2, [pc, #3848]	; 26e8 <grib_init+0x20a8>
    17dc:	ldr	r3, [r3, r2]
    17e0:	add	r3, r3, #100	; 0x64
    17e4:	ldr	r3, [r3]
    17e8:	mov	r1, #2
    17ec:	mov	r0, r3
    17f0:	bl	0 <coda_type_set_read_type>
    17f4:	mrc	15, 0, r3, cr13, cr0, {3}
    17f8:	ldr	r2, [pc, #3816]	; 26e8 <grib_init+0x20a8>
    17fc:	ldr	r3, [r3, r2]
    1800:	add	r3, r3, #100	; 0x64
    1804:	ldr	r1, [r3]
    1808:	mov	r2, #16
    180c:	mov	r3, #0
    1810:	mov	r0, r1
    1814:	bl	0 <coda_type_set_bit_size>
    1818:	mrc	15, 0, r3, cr13, cr0, {3}
    181c:	ldr	r2, [pc, #3780]	; 26e8 <grib_init+0x20a8>
    1820:	ldr	r3, [r3, r2]
    1824:	add	r3, r3, #100	; 0x64
    1828:	ldr	r3, [r3]
    182c:	movw	r1, #0
    1830:	movt	r1, #0
    1834:	mov	r0, r3
    1838:	bl	0 <coda_type_set_description>
    183c:	mrc	15, 0, r3, cr13, cr0, {3}
    1840:	ldr	r2, [pc, #3744]	; 26e8 <grib_init+0x20a8>
    1844:	ldr	r3, [r3, r2]
    1848:	add	r4, r3, #104	; 0x68
    184c:	mov	r1, #2
    1850:	mov	r0, #7
    1854:	bl	0 <coda_type_number_new>
    1858:	mov	r3, r0
    185c:	str	r3, [r4]
    1860:	mrc	15, 0, r3, cr13, cr0, {3}
    1864:	ldr	r2, [pc, #3708]	; 26e8 <grib_init+0x20a8>
    1868:	ldr	r3, [r3, r2]
    186c:	add	r3, r3, #104	; 0x68
    1870:	ldr	r3, [r3]
    1874:	ldr	r1, [fp, #-20]	; 0xffffffec
    1878:	mov	r0, r3
    187c:	bl	0 <coda_type_number_set_endianness>
    1880:	mrc	15, 0, r3, cr13, cr0, {3}
    1884:	ldr	r2, [pc, #3676]	; 26e8 <grib_init+0x20a8>
    1888:	ldr	r3, [r3, r2]
    188c:	add	r3, r3, #104	; 0x68
    1890:	ldr	r3, [r3]
    1894:	mov	r1, #1
    1898:	mov	r0, r3
    189c:	bl	0 <coda_type_set_read_type>
    18a0:	mrc	15, 0, r3, cr13, cr0, {3}
    18a4:	ldr	r2, [pc, #3644]	; 26e8 <grib_init+0x20a8>
    18a8:	ldr	r3, [r3, r2]
    18ac:	add	r3, r3, #104	; 0x68
    18b0:	ldr	r1, [r3]
    18b4:	mov	r2, #8
    18b8:	mov	r3, #0
    18bc:	mov	r0, r1
    18c0:	bl	0 <coda_type_set_bit_size>
    18c4:	mrc	15, 0, r3, cr13, cr0, {3}
    18c8:	ldr	r2, [pc, #3608]	; 26e8 <grib_init+0x20a8>
    18cc:	ldr	r3, [r3, r2]
    18d0:	add	r3, r3, #104	; 0x68
    18d4:	ldr	r3, [r3]
    18d8:	movw	r1, #0
    18dc:	movt	r1, #0
    18e0:	mov	r0, r3
    18e4:	bl	0 <coda_type_set_description>
    18e8:	mrc	15, 0, r3, cr13, cr0, {3}
    18ec:	ldr	r2, [pc, #3572]	; 26e8 <grib_init+0x20a8>
    18f0:	ldr	r3, [r3, r2]
    18f4:	add	r4, r3, #108	; 0x6c
    18f8:	mov	r1, #2
    18fc:	mov	r0, #7
    1900:	bl	0 <coda_type_number_new>
    1904:	mov	r3, r0
    1908:	str	r3, [r4]
    190c:	mrc	15, 0, r3, cr13, cr0, {3}
    1910:	ldr	r2, [pc, #3536]	; 26e8 <grib_init+0x20a8>
    1914:	ldr	r3, [r3, r2]
    1918:	add	r3, r3, #108	; 0x6c
    191c:	ldr	r3, [r3]
    1920:	ldr	r1, [fp, #-20]	; 0xffffffec
    1924:	mov	r0, r3
    1928:	bl	0 <coda_type_number_set_endianness>
    192c:	mrc	15, 0, r3, cr13, cr0, {3}
    1930:	ldr	r2, [pc, #3504]	; 26e8 <grib_init+0x20a8>
    1934:	ldr	r3, [r3, r2]
    1938:	add	r3, r3, #108	; 0x6c
    193c:	ldr	r3, [r3]
    1940:	mov	r1, #1
    1944:	mov	r0, r3
    1948:	bl	0 <coda_type_set_read_type>
    194c:	mrc	15, 0, r3, cr13, cr0, {3}
    1950:	ldr	r2, [pc, #3472]	; 26e8 <grib_init+0x20a8>
    1954:	ldr	r3, [r3, r2]
    1958:	add	r3, r3, #108	; 0x6c
    195c:	ldr	r1, [r3]
    1960:	mov	r2, #8
    1964:	mov	r3, #0
    1968:	mov	r0, r1
    196c:	bl	0 <coda_type_set_bit_size>
    1970:	mrc	15, 0, r3, cr13, cr0, {3}
    1974:	ldr	r2, [pc, #3436]	; 26e8 <grib_init+0x20a8>
    1978:	ldr	r3, [r3, r2]
    197c:	add	r3, r3, #108	; 0x6c
    1980:	ldr	r3, [r3]
    1984:	movw	r1, #0
    1988:	movt	r1, #0
    198c:	mov	r0, r3
    1990:	bl	0 <coda_type_set_description>
    1994:	mrc	15, 0, r3, cr13, cr0, {3}
    1998:	ldr	r2, [pc, #3400]	; 26e8 <grib_init+0x20a8>
    199c:	ldr	r3, [r3, r2]
    19a0:	add	r4, r3, #112	; 0x70
    19a4:	mov	r1, #2
    19a8:	mov	r0, #7
    19ac:	bl	0 <coda_type_number_new>
    19b0:	mov	r3, r0
    19b4:	str	r3, [r4]
    19b8:	mrc	15, 0, r3, cr13, cr0, {3}
    19bc:	ldr	r2, [pc, #3364]	; 26e8 <grib_init+0x20a8>
    19c0:	ldr	r3, [r3, r2]
    19c4:	add	r3, r3, #112	; 0x70
    19c8:	ldr	r3, [r3]
    19cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    19d0:	mov	r0, r3
    19d4:	bl	0 <coda_type_number_set_endianness>
    19d8:	mrc	15, 0, r3, cr13, cr0, {3}
    19dc:	ldr	r2, [pc, #3332]	; 26e8 <grib_init+0x20a8>
    19e0:	ldr	r3, [r3, r2]
    19e4:	add	r3, r3, #112	; 0x70
    19e8:	ldr	r3, [r3]
    19ec:	mov	r1, #1
    19f0:	mov	r0, r3
    19f4:	bl	0 <coda_type_set_read_type>
    19f8:	mrc	15, 0, r3, cr13, cr0, {3}
    19fc:	ldr	r2, [pc, #3300]	; 26e8 <grib_init+0x20a8>
    1a00:	ldr	r3, [r3, r2]
    1a04:	add	r3, r3, #112	; 0x70
    1a08:	ldr	r1, [r3]
    1a0c:	mov	r2, #8
    1a10:	mov	r3, #0
    1a14:	mov	r0, r1
    1a18:	bl	0 <coda_type_set_bit_size>
    1a1c:	mrc	15, 0, r3, cr13, cr0, {3}
    1a20:	ldr	r2, [pc, #3264]	; 26e8 <grib_init+0x20a8>
    1a24:	ldr	r3, [r3, r2]
    1a28:	add	r3, r3, #112	; 0x70
    1a2c:	ldr	r3, [r3]
    1a30:	movw	r1, #0
    1a34:	movt	r1, #0
    1a38:	mov	r0, r3
    1a3c:	bl	0 <coda_type_set_description>
    1a40:	mrc	15, 0, r3, cr13, cr0, {3}
    1a44:	ldr	r2, [pc, #3228]	; 26e8 <grib_init+0x20a8>
    1a48:	ldr	r3, [r3, r2]
    1a4c:	add	r4, r3, #116	; 0x74
    1a50:	mov	r1, #2
    1a54:	mov	r0, #7
    1a58:	bl	0 <coda_type_number_new>
    1a5c:	mov	r3, r0
    1a60:	str	r3, [r4]
    1a64:	mrc	15, 0, r3, cr13, cr0, {3}
    1a68:	ldr	r2, [pc, #3192]	; 26e8 <grib_init+0x20a8>
    1a6c:	ldr	r3, [r3, r2]
    1a70:	add	r3, r3, #116	; 0x74
    1a74:	ldr	r3, [r3]
    1a78:	ldr	r1, [fp, #-20]	; 0xffffffec
    1a7c:	mov	r0, r3
    1a80:	bl	0 <coda_type_number_set_endianness>
    1a84:	mrc	15, 0, r3, cr13, cr0, {3}
    1a88:	ldr	r2, [pc, #3160]	; 26e8 <grib_init+0x20a8>
    1a8c:	ldr	r3, [r3, r2]
    1a90:	add	r3, r3, #116	; 0x74
    1a94:	ldr	r3, [r3]
    1a98:	mov	r1, #1
    1a9c:	mov	r0, r3
    1aa0:	bl	0 <coda_type_set_read_type>
    1aa4:	mrc	15, 0, r3, cr13, cr0, {3}
    1aa8:	ldr	r2, [pc, #3128]	; 26e8 <grib_init+0x20a8>
    1aac:	ldr	r3, [r3, r2]
    1ab0:	add	r3, r3, #116	; 0x74
    1ab4:	ldr	r1, [r3]
    1ab8:	mov	r2, #8
    1abc:	mov	r3, #0
    1ac0:	mov	r0, r1
    1ac4:	bl	0 <coda_type_set_bit_size>
    1ac8:	mrc	15, 0, r3, cr13, cr0, {3}
    1acc:	ldr	r2, [pc, #3092]	; 26e8 <grib_init+0x20a8>
    1ad0:	ldr	r3, [r3, r2]
    1ad4:	add	r3, r3, #116	; 0x74
    1ad8:	ldr	r3, [r3]
    1adc:	movw	r1, #0
    1ae0:	movt	r1, #0
    1ae4:	mov	r0, r3
    1ae8:	bl	0 <coda_type_set_description>
    1aec:	mrc	15, 0, r3, cr13, cr0, {3}
    1af0:	ldr	r2, [pc, #3056]	; 26e8 <grib_init+0x20a8>
    1af4:	ldr	r3, [r3, r2]
    1af8:	add	r4, r3, #120	; 0x78
    1afc:	mov	r1, #2
    1b00:	mov	r0, #7
    1b04:	bl	0 <coda_type_number_new>
    1b08:	mov	r3, r0
    1b0c:	str	r3, [r4]
    1b10:	mrc	15, 0, r3, cr13, cr0, {3}
    1b14:	ldr	r2, [pc, #3020]	; 26e8 <grib_init+0x20a8>
    1b18:	ldr	r3, [r3, r2]
    1b1c:	add	r3, r3, #120	; 0x78
    1b20:	ldr	r3, [r3]
    1b24:	ldr	r1, [fp, #-20]	; 0xffffffec
    1b28:	mov	r0, r3
    1b2c:	bl	0 <coda_type_number_set_endianness>
    1b30:	mrc	15, 0, r3, cr13, cr0, {3}
    1b34:	ldr	r2, [pc, #2988]	; 26e8 <grib_init+0x20a8>
    1b38:	ldr	r3, [r3, r2]
    1b3c:	add	r3, r3, #120	; 0x78
    1b40:	ldr	r3, [r3]
    1b44:	mov	r1, #1
    1b48:	mov	r0, r3
    1b4c:	bl	0 <coda_type_set_read_type>
    1b50:	mrc	15, 0, r3, cr13, cr0, {3}
    1b54:	ldr	r2, [pc, #2956]	; 26e8 <grib_init+0x20a8>
    1b58:	ldr	r3, [r3, r2]
    1b5c:	add	r3, r3, #120	; 0x78
    1b60:	ldr	r1, [r3]
    1b64:	mov	r2, #8
    1b68:	mov	r3, #0
    1b6c:	mov	r0, r1
    1b70:	bl	0 <coda_type_set_bit_size>
    1b74:	mrc	15, 0, r3, cr13, cr0, {3}
    1b78:	ldr	r2, [pc, #2920]	; 26e8 <grib_init+0x20a8>
    1b7c:	ldr	r3, [r3, r2]
    1b80:	add	r3, r3, #120	; 0x78
    1b84:	ldr	r3, [r3]
    1b88:	movw	r1, #0
    1b8c:	movt	r1, #0
    1b90:	mov	r0, r3
    1b94:	bl	0 <coda_type_set_description>
    1b98:	mrc	15, 0, r3, cr13, cr0, {3}
    1b9c:	ldr	r2, [pc, #2884]	; 26e8 <grib_init+0x20a8>
    1ba0:	ldr	r3, [r3, r2]
    1ba4:	add	r4, r3, #124	; 0x7c
    1ba8:	mov	r1, #2
    1bac:	mov	r0, #7
    1bb0:	bl	0 <coda_type_number_new>
    1bb4:	mov	r3, r0
    1bb8:	str	r3, [r4]
    1bbc:	mrc	15, 0, r3, cr13, cr0, {3}
    1bc0:	ldr	r2, [pc, #2848]	; 26e8 <grib_init+0x20a8>
    1bc4:	ldr	r3, [r3, r2]
    1bc8:	add	r3, r3, #124	; 0x7c
    1bcc:	ldr	r3, [r3]
    1bd0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1bd4:	mov	r0, r3
    1bd8:	bl	0 <coda_type_number_set_endianness>
    1bdc:	mrc	15, 0, r3, cr13, cr0, {3}
    1be0:	ldr	r2, [pc, #2816]	; 26e8 <grib_init+0x20a8>
    1be4:	ldr	r3, [r3, r2]
    1be8:	add	r3, r3, #124	; 0x7c
    1bec:	ldr	r3, [r3]
    1bf0:	mov	r1, #1
    1bf4:	mov	r0, r3
    1bf8:	bl	0 <coda_type_set_read_type>
    1bfc:	mrc	15, 0, r3, cr13, cr0, {3}
    1c00:	ldr	r2, [pc, #2784]	; 26e8 <grib_init+0x20a8>
    1c04:	ldr	r3, [r3, r2]
    1c08:	add	r3, r3, #124	; 0x7c
    1c0c:	ldr	r1, [r3]
    1c10:	mov	r2, #8
    1c14:	mov	r3, #0
    1c18:	mov	r0, r1
    1c1c:	bl	0 <coda_type_set_bit_size>
    1c20:	mrc	15, 0, r3, cr13, cr0, {3}
    1c24:	ldr	r2, [pc, #2748]	; 26e8 <grib_init+0x20a8>
    1c28:	ldr	r3, [r3, r2]
    1c2c:	add	r3, r3, #124	; 0x7c
    1c30:	ldr	r3, [r3]
    1c34:	movw	r1, #0
    1c38:	movt	r1, #0
    1c3c:	mov	r0, r3
    1c40:	bl	0 <coda_type_set_description>
    1c44:	mrc	15, 0, r3, cr13, cr0, {3}
    1c48:	ldr	r2, [pc, #2712]	; 26e8 <grib_init+0x20a8>
    1c4c:	ldr	r3, [r3, r2]
    1c50:	add	r4, r3, #128	; 0x80
    1c54:	mov	r0, #7
    1c58:	bl	0 <coda_type_raw_new>
    1c5c:	mov	r3, r0
    1c60:	str	r3, [r4]
    1c64:	mrc	15, 0, r3, cr13, cr0, {3}
    1c68:	ldr	r2, [pc, #2680]	; 26e8 <grib_init+0x20a8>
    1c6c:	ldr	r3, [r3, r2]
    1c70:	add	r3, r3, #128	; 0x80
    1c74:	ldr	r3, [r3]
    1c78:	movw	r1, #0
    1c7c:	movt	r1, #0
    1c80:	mov	r0, r3
    1c84:	bl	0 <coda_type_set_description>
    1c88:	mrc	15, 0, r3, cr13, cr0, {3}
    1c8c:	ldr	r2, [pc, #2644]	; 26e8 <grib_init+0x20a8>
    1c90:	ldr	r3, [r3, r2]
    1c94:	add	r4, r3, #132	; 0x84
    1c98:	mov	r1, #2
    1c9c:	mov	r0, #7
    1ca0:	bl	0 <coda_type_number_new>
    1ca4:	mov	r3, r0
    1ca8:	str	r3, [r4]
    1cac:	mrc	15, 0, r3, cr13, cr0, {3}
    1cb0:	ldr	r2, [pc, #2608]	; 26e8 <grib_init+0x20a8>
    1cb4:	ldr	r3, [r3, r2]
    1cb8:	add	r3, r3, #132	; 0x84
    1cbc:	ldr	r3, [r3]
    1cc0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1cc4:	mov	r0, r3
    1cc8:	bl	0 <coda_type_number_set_endianness>
    1ccc:	mrc	15, 0, r3, cr13, cr0, {3}
    1cd0:	ldr	r2, [pc, #2576]	; 26e8 <grib_init+0x20a8>
    1cd4:	ldr	r3, [r3, r2]
    1cd8:	add	r3, r3, #132	; 0x84
    1cdc:	ldr	r3, [r3]
    1ce0:	mov	r1, #1
    1ce4:	mov	r0, r3
    1ce8:	bl	0 <coda_type_set_read_type>
    1cec:	mrc	15, 0, r3, cr13, cr0, {3}
    1cf0:	ldr	r2, [pc, #2544]	; 26e8 <grib_init+0x20a8>
    1cf4:	ldr	r3, [r3, r2]
    1cf8:	add	r3, r3, #132	; 0x84
    1cfc:	ldr	r1, [r3]
    1d00:	mov	r2, #8
    1d04:	mov	r3, #0
    1d08:	mov	r0, r1
    1d0c:	bl	0 <coda_type_set_bit_size>
    1d10:	mrc	15, 0, r3, cr13, cr0, {3}
    1d14:	ldr	r2, [pc, #2508]	; 26e8 <grib_init+0x20a8>
    1d18:	ldr	r3, [r3, r2]
    1d1c:	add	r3, r3, #132	; 0x84
    1d20:	ldr	r3, [r3]
    1d24:	movw	r1, #0
    1d28:	movt	r1, #0
    1d2c:	mov	r0, r3
    1d30:	bl	0 <coda_type_set_description>
    1d34:	mrc	15, 0, r3, cr13, cr0, {3}
    1d38:	ldr	r2, [pc, #2472]	; 26e8 <grib_init+0x20a8>
    1d3c:	ldr	r3, [r3, r2]
    1d40:	add	r4, r3, #136	; 0x88
    1d44:	mov	r1, #2
    1d48:	mov	r0, #7
    1d4c:	bl	0 <coda_type_number_new>
    1d50:	mov	r3, r0
    1d54:	str	r3, [r4]
    1d58:	mrc	15, 0, r3, cr13, cr0, {3}
    1d5c:	ldr	r2, [pc, #2436]	; 26e8 <grib_init+0x20a8>
    1d60:	ldr	r3, [r3, r2]
    1d64:	add	r3, r3, #136	; 0x88
    1d68:	ldr	r3, [r3]
    1d6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    1d70:	mov	r0, r3
    1d74:	bl	0 <coda_type_number_set_endianness>
    1d78:	mrc	15, 0, r3, cr13, cr0, {3}
    1d7c:	ldr	r2, [pc, #2404]	; 26e8 <grib_init+0x20a8>
    1d80:	ldr	r3, [r3, r2]
    1d84:	add	r3, r3, #136	; 0x88
    1d88:	ldr	r3, [r3]
    1d8c:	mov	r1, #1
    1d90:	mov	r0, r3
    1d94:	bl	0 <coda_type_set_read_type>
    1d98:	mrc	15, 0, r3, cr13, cr0, {3}
    1d9c:	ldr	r2, [pc, #2372]	; 26e8 <grib_init+0x20a8>
    1da0:	ldr	r3, [r3, r2]
    1da4:	add	r3, r3, #136	; 0x88
    1da8:	ldr	r1, [r3]
    1dac:	mov	r2, #8
    1db0:	mov	r3, #0
    1db4:	mov	r0, r1
    1db8:	bl	0 <coda_type_set_bit_size>
    1dbc:	mrc	15, 0, r3, cr13, cr0, {3}
    1dc0:	ldr	r2, [pc, #2336]	; 26e8 <grib_init+0x20a8>
    1dc4:	ldr	r3, [r3, r2]
    1dc8:	add	r3, r3, #136	; 0x88
    1dcc:	ldr	r3, [r3]
    1dd0:	movw	r1, #0
    1dd4:	movt	r1, #0
    1dd8:	mov	r0, r3
    1ddc:	bl	0 <coda_type_set_description>
    1de0:	mrc	15, 0, r3, cr13, cr0, {3}
    1de4:	ldr	r2, [pc, #2300]	; 26e8 <grib_init+0x20a8>
    1de8:	ldr	r3, [r3, r2]
    1dec:	add	r4, r3, #140	; 0x8c
    1df0:	mov	r1, #2
    1df4:	mov	r0, #7
    1df8:	bl	0 <coda_type_number_new>
    1dfc:	mov	r3, r0
    1e00:	str	r3, [r4]
    1e04:	mrc	15, 0, r3, cr13, cr0, {3}
    1e08:	ldr	r2, [pc, #2264]	; 26e8 <grib_init+0x20a8>
    1e0c:	ldr	r3, [r3, r2]
    1e10:	add	r3, r3, #140	; 0x8c
    1e14:	ldr	r3, [r3]
    1e18:	ldr	r1, [fp, #-20]	; 0xffffffec
    1e1c:	mov	r0, r3
    1e20:	bl	0 <coda_type_number_set_endianness>
    1e24:	mrc	15, 0, r3, cr13, cr0, {3}
    1e28:	ldr	r2, [pc, #2232]	; 26e8 <grib_init+0x20a8>
    1e2c:	ldr	r3, [r3, r2]
    1e30:	add	r3, r3, #140	; 0x8c
    1e34:	ldr	r3, [r3]
    1e38:	mov	r1, #1
    1e3c:	mov	r0, r3
    1e40:	bl	0 <coda_type_set_read_type>
    1e44:	mrc	15, 0, r3, cr13, cr0, {3}
    1e48:	ldr	r2, [pc, #2200]	; 26e8 <grib_init+0x20a8>
    1e4c:	ldr	r3, [r3, r2]
    1e50:	add	r3, r3, #140	; 0x8c
    1e54:	ldr	r1, [r3]
    1e58:	mov	r2, #8
    1e5c:	mov	r3, #0
    1e60:	mov	r0, r1
    1e64:	bl	0 <coda_type_set_bit_size>
    1e68:	mrc	15, 0, r3, cr13, cr0, {3}
    1e6c:	ldr	r2, [pc, #2164]	; 26e8 <grib_init+0x20a8>
    1e70:	ldr	r3, [r3, r2]
    1e74:	add	r4, r3, #144	; 0x90
    1e78:	mov	r1, #2
    1e7c:	mov	r0, #7
    1e80:	bl	0 <coda_type_number_new>
    1e84:	mov	r3, r0
    1e88:	str	r3, [r4]
    1e8c:	mrc	15, 0, r3, cr13, cr0, {3}
    1e90:	ldr	r2, [pc, #2128]	; 26e8 <grib_init+0x20a8>
    1e94:	ldr	r3, [r3, r2]
    1e98:	add	r3, r3, #144	; 0x90
    1e9c:	ldr	r3, [r3]
    1ea0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1ea4:	mov	r0, r3
    1ea8:	bl	0 <coda_type_number_set_endianness>
    1eac:	mrc	15, 0, r3, cr13, cr0, {3}
    1eb0:	ldr	r2, [pc, #2096]	; 26e8 <grib_init+0x20a8>
    1eb4:	ldr	r3, [r3, r2]
    1eb8:	add	r3, r3, #144	; 0x90
    1ebc:	ldr	r3, [r3]
    1ec0:	mov	r1, #1
    1ec4:	mov	r0, r3
    1ec8:	bl	0 <coda_type_set_read_type>
    1ecc:	mrc	15, 0, r3, cr13, cr0, {3}
    1ed0:	ldr	r2, [pc, #2064]	; 26e8 <grib_init+0x20a8>
    1ed4:	ldr	r3, [r3, r2]
    1ed8:	add	r3, r3, #144	; 0x90
    1edc:	ldr	r1, [r3]
    1ee0:	mov	r2, #8
    1ee4:	mov	r3, #0
    1ee8:	mov	r0, r1
    1eec:	bl	0 <coda_type_set_bit_size>
    1ef0:	mrc	15, 0, r3, cr13, cr0, {3}
    1ef4:	ldr	r2, [pc, #2028]	; 26e8 <grib_init+0x20a8>
    1ef8:	ldr	r3, [r3, r2]
    1efc:	add	r4, r3, #148	; 0x94
    1f00:	mov	r1, #2
    1f04:	mov	r0, #7
    1f08:	bl	0 <coda_type_number_new>
    1f0c:	mov	r3, r0
    1f10:	str	r3, [r4]
    1f14:	mrc	15, 0, r3, cr13, cr0, {3}
    1f18:	ldr	r2, [pc, #1992]	; 26e8 <grib_init+0x20a8>
    1f1c:	ldr	r3, [r3, r2]
    1f20:	add	r3, r3, #148	; 0x94
    1f24:	ldr	r3, [r3]
    1f28:	ldr	r1, [fp, #-20]	; 0xffffffec
    1f2c:	mov	r0, r3
    1f30:	bl	0 <coda_type_number_set_endianness>
    1f34:	mrc	15, 0, r3, cr13, cr0, {3}
    1f38:	ldr	r2, [pc, #1960]	; 26e8 <grib_init+0x20a8>
    1f3c:	ldr	r3, [r3, r2]
    1f40:	add	r3, r3, #148	; 0x94
    1f44:	ldr	r3, [r3]
    1f48:	mov	r1, #5
    1f4c:	mov	r0, r3
    1f50:	bl	0 <coda_type_set_read_type>
    1f54:	mrc	15, 0, r3, cr13, cr0, {3}
    1f58:	ldr	r2, [pc, #1928]	; 26e8 <grib_init+0x20a8>
    1f5c:	ldr	r3, [r3, r2]
    1f60:	add	r3, r3, #148	; 0x94
    1f64:	ldr	r1, [r3]
    1f68:	mov	r2, #32
    1f6c:	mov	r3, #0
    1f70:	mov	r0, r1
    1f74:	bl	0 <coda_type_set_bit_size>
    1f78:	mrc	15, 0, r3, cr13, cr0, {3}
    1f7c:	ldr	r2, [pc, #1892]	; 26e8 <grib_init+0x20a8>
    1f80:	ldr	r3, [r3, r2]
    1f84:	add	r4, r3, #152	; 0x98
    1f88:	mov	r1, #2
    1f8c:	mov	r0, #7
    1f90:	bl	0 <coda_type_number_new>
    1f94:	mov	r3, r0
    1f98:	str	r3, [r4]
    1f9c:	mrc	15, 0, r3, cr13, cr0, {3}
    1fa0:	ldr	r2, [pc, #1856]	; 26e8 <grib_init+0x20a8>
    1fa4:	ldr	r3, [r3, r2]
    1fa8:	add	r3, r3, #152	; 0x98
    1fac:	ldr	r3, [r3]
    1fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
    1fb4:	mov	r0, r3
    1fb8:	bl	0 <coda_type_number_set_endianness>
    1fbc:	mrc	15, 0, r3, cr13, cr0, {3}
    1fc0:	ldr	r2, [pc, #1824]	; 26e8 <grib_init+0x20a8>
    1fc4:	ldr	r3, [r3, r2]
    1fc8:	add	r3, r3, #152	; 0x98
    1fcc:	ldr	r3, [r3]
    1fd0:	mov	r1, #1
    1fd4:	mov	r0, r3
    1fd8:	bl	0 <coda_type_set_read_type>
    1fdc:	mrc	15, 0, r3, cr13, cr0, {3}
    1fe0:	ldr	r2, [pc, #1792]	; 26e8 <grib_init+0x20a8>
    1fe4:	ldr	r3, [r3, r2]
    1fe8:	add	r3, r3, #152	; 0x98
    1fec:	ldr	r1, [r3]
    1ff0:	mov	r2, #8
    1ff4:	mov	r3, #0
    1ff8:	mov	r0, r1
    1ffc:	bl	0 <coda_type_set_bit_size>
    2000:	mrc	15, 0, r3, cr13, cr0, {3}
    2004:	ldr	r2, [pc, #1756]	; 26e8 <grib_init+0x20a8>
    2008:	ldr	r3, [r3, r2]
    200c:	add	r4, r3, #156	; 0x9c
    2010:	mov	r1, #2
    2014:	mov	r0, #7
    2018:	bl	0 <coda_type_number_new>
    201c:	mov	r3, r0
    2020:	str	r3, [r4]
    2024:	mrc	15, 0, r3, cr13, cr0, {3}
    2028:	ldr	r2, [pc, #1720]	; 26e8 <grib_init+0x20a8>
    202c:	ldr	r3, [r3, r2]
    2030:	add	r3, r3, #156	; 0x9c
    2034:	ldr	r3, [r3]
    2038:	ldr	r1, [fp, #-20]	; 0xffffffec
    203c:	mov	r0, r3
    2040:	bl	0 <coda_type_number_set_endianness>
    2044:	mrc	15, 0, r3, cr13, cr0, {3}
    2048:	ldr	r2, [pc, #1688]	; 26e8 <grib_init+0x20a8>
    204c:	ldr	r3, [r3, r2]
    2050:	add	r3, r3, #156	; 0x9c
    2054:	ldr	r3, [r3]
    2058:	mov	r1, #5
    205c:	mov	r0, r3
    2060:	bl	0 <coda_type_set_read_type>
    2064:	mrc	15, 0, r3, cr13, cr0, {3}
    2068:	ldr	r2, [pc, #1656]	; 26e8 <grib_init+0x20a8>
    206c:	ldr	r3, [r3, r2]
    2070:	add	r3, r3, #156	; 0x9c
    2074:	ldr	r1, [r3]
    2078:	mov	r2, #32
    207c:	mov	r3, #0
    2080:	mov	r0, r1
    2084:	bl	0 <coda_type_set_bit_size>
    2088:	mrc	15, 0, r3, cr13, cr0, {3}
    208c:	ldr	r2, [pc, #1620]	; 26e8 <grib_init+0x20a8>
    2090:	ldr	r3, [r3, r2]
    2094:	add	r4, r3, #160	; 0xa0
    2098:	mov	r1, #2
    209c:	mov	r0, #7
    20a0:	bl	0 <coda_type_number_new>
    20a4:	mov	r3, r0
    20a8:	str	r3, [r4]
    20ac:	mrc	15, 0, r3, cr13, cr0, {3}
    20b0:	ldr	r2, [pc, #1584]	; 26e8 <grib_init+0x20a8>
    20b4:	ldr	r3, [r3, r2]
    20b8:	add	r3, r3, #160	; 0xa0
    20bc:	ldr	r3, [r3]
    20c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    20c4:	mov	r0, r3
    20c8:	bl	0 <coda_type_number_set_endianness>
    20cc:	mrc	15, 0, r3, cr13, cr0, {3}
    20d0:	ldr	r2, [pc, #1552]	; 26e8 <grib_init+0x20a8>
    20d4:	ldr	r3, [r3, r2]
    20d8:	add	r3, r3, #160	; 0xa0
    20dc:	ldr	r3, [r3]
    20e0:	mov	r1, #1
    20e4:	mov	r0, r3
    20e8:	bl	0 <coda_type_set_read_type>
    20ec:	mrc	15, 0, r3, cr13, cr0, {3}
    20f0:	ldr	r2, [pc, #1520]	; 26e8 <grib_init+0x20a8>
    20f4:	ldr	r3, [r3, r2]
    20f8:	add	r3, r3, #160	; 0xa0
    20fc:	ldr	r1, [r3]
    2100:	mov	r2, #8
    2104:	mov	r3, #0
    2108:	mov	r0, r1
    210c:	bl	0 <coda_type_set_bit_size>
    2110:	mrc	15, 0, r3, cr13, cr0, {3}
    2114:	ldr	r2, [pc, #1484]	; 26e8 <grib_init+0x20a8>
    2118:	ldr	r3, [r3, r2]
    211c:	add	r4, r3, #164	; 0xa4
    2120:	mov	r1, #2
    2124:	mov	r0, #7
    2128:	bl	0 <coda_type_number_new>
    212c:	mov	r3, r0
    2130:	str	r3, [r4]
    2134:	mrc	15, 0, r3, cr13, cr0, {3}
    2138:	ldr	r2, [pc, #1448]	; 26e8 <grib_init+0x20a8>
    213c:	ldr	r3, [r3, r2]
    2140:	add	r3, r3, #164	; 0xa4
    2144:	ldr	r3, [r3]
    2148:	ldr	r1, [fp, #-20]	; 0xffffffec
    214c:	mov	r0, r3
    2150:	bl	0 <coda_type_number_set_endianness>
    2154:	mrc	15, 0, r3, cr13, cr0, {3}
    2158:	ldr	r2, [pc, #1416]	; 26e8 <grib_init+0x20a8>
    215c:	ldr	r3, [r3, r2]
    2160:	add	r3, r3, #164	; 0xa4
    2164:	ldr	r3, [r3]
    2168:	mov	r1, #5
    216c:	mov	r0, r3
    2170:	bl	0 <coda_type_set_read_type>
    2174:	mrc	15, 0, r3, cr13, cr0, {3}
    2178:	ldr	r2, [pc, #1384]	; 26e8 <grib_init+0x20a8>
    217c:	ldr	r3, [r3, r2]
    2180:	add	r3, r3, #164	; 0xa4
    2184:	ldr	r1, [r3]
    2188:	mov	r2, #32
    218c:	mov	r3, #0
    2190:	mov	r0, r1
    2194:	bl	0 <coda_type_set_bit_size>
    2198:	mrc	15, 0, r3, cr13, cr0, {3}
    219c:	ldr	r2, [pc, #1348]	; 26e8 <grib_init+0x20a8>
    21a0:	ldr	r3, [r3, r2]
    21a4:	add	r4, r3, #168	; 0xa8
    21a8:	mov	r1, #2
    21ac:	mov	r0, #7
    21b0:	bl	0 <coda_type_number_new>
    21b4:	mov	r3, r0
    21b8:	str	r3, [r4]
    21bc:	mrc	15, 0, r3, cr13, cr0, {3}
    21c0:	ldr	r2, [pc, #1312]	; 26e8 <grib_init+0x20a8>
    21c4:	ldr	r3, [r3, r2]
    21c8:	add	r3, r3, #168	; 0xa8
    21cc:	ldr	r3, [r3]
    21d0:	ldr	r1, [fp, #-20]	; 0xffffffec
    21d4:	mov	r0, r3
    21d8:	bl	0 <coda_type_number_set_endianness>
    21dc:	mrc	15, 0, r3, cr13, cr0, {3}
    21e0:	ldr	r2, [pc, #1280]	; 26e8 <grib_init+0x20a8>
    21e4:	ldr	r3, [r3, r2]
    21e8:	add	r3, r3, #168	; 0xa8
    21ec:	ldr	r3, [r3]
    21f0:	mov	r1, #3
    21f4:	mov	r0, r3
    21f8:	bl	0 <coda_type_set_read_type>
    21fc:	mrc	15, 0, r3, cr13, cr0, {3}
    2200:	ldr	r2, [pc, #1248]	; 26e8 <grib_init+0x20a8>
    2204:	ldr	r3, [r3, r2]
    2208:	add	r3, r3, #168	; 0xa8
    220c:	ldr	r1, [r3]
    2210:	mov	r2, #16
    2214:	mov	r3, #0
    2218:	mov	r0, r1
    221c:	bl	0 <coda_type_set_bit_size>
    2220:	mrc	15, 0, r3, cr13, cr0, {3}
    2224:	ldr	r2, [pc, #1212]	; 26e8 <grib_init+0x20a8>
    2228:	ldr	r3, [r3, r2]
    222c:	add	r3, r3, #168	; 0xa8
    2230:	ldr	r3, [r3]
    2234:	movw	r1, #0
    2238:	movt	r1, #0
    223c:	mov	r0, r3
    2240:	bl	0 <coda_type_set_description>
    2244:	mrc	15, 0, r3, cr13, cr0, {3}
    2248:	ldr	r2, [pc, #1176]	; 26e8 <grib_init+0x20a8>
    224c:	ldr	r3, [r3, r2]
    2250:	add	r4, r3, #172	; 0xac
    2254:	mov	r1, #2
    2258:	mov	r0, #7
    225c:	bl	0 <coda_type_number_new>
    2260:	mov	r3, r0
    2264:	str	r3, [r4]
    2268:	mrc	15, 0, r3, cr13, cr0, {3}
    226c:	ldr	r2, [pc, #1140]	; 26e8 <grib_init+0x20a8>
    2270:	ldr	r3, [r3, r2]
    2274:	add	r3, r3, #172	; 0xac
    2278:	ldr	r3, [r3]
    227c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2280:	mov	r0, r3
    2284:	bl	0 <coda_type_number_set_endianness>
    2288:	mrc	15, 0, r3, cr13, cr0, {3}
    228c:	ldr	r2, [pc, #1108]	; 26e8 <grib_init+0x20a8>
    2290:	ldr	r3, [r3, r2]
    2294:	add	r3, r3, #172	; 0xac
    2298:	ldr	r3, [r3]
    229c:	mov	r1, #3
    22a0:	mov	r0, r3
    22a4:	bl	0 <coda_type_set_read_type>
    22a8:	mrc	15, 0, r3, cr13, cr0, {3}
    22ac:	ldr	r2, [pc, #1076]	; 26e8 <grib_init+0x20a8>
    22b0:	ldr	r3, [r3, r2]
    22b4:	add	r3, r3, #172	; 0xac
    22b8:	ldr	r1, [r3]
    22bc:	mov	r2, #16
    22c0:	mov	r3, #0
    22c4:	mov	r0, r1
    22c8:	bl	0 <coda_type_set_bit_size>
    22cc:	mrc	15, 0, r3, cr13, cr0, {3}
    22d0:	ldr	r2, [pc, #1040]	; 26e8 <grib_init+0x20a8>
    22d4:	ldr	r3, [r3, r2]
    22d8:	add	r3, r3, #172	; 0xac
    22dc:	ldr	r3, [r3]
    22e0:	movw	r1, #0
    22e4:	movt	r1, #0
    22e8:	mov	r0, r3
    22ec:	bl	0 <coda_type_set_description>
    22f0:	mrc	15, 0, r3, cr13, cr0, {3}
    22f4:	ldr	r2, [pc, #1004]	; 26e8 <grib_init+0x20a8>
    22f8:	ldr	r3, [r3, r2]
    22fc:	add	r4, r3, #176	; 0xb0
    2300:	mov	r1, #2
    2304:	mov	r0, #7
    2308:	bl	0 <coda_type_number_new>
    230c:	mov	r3, r0
    2310:	str	r3, [r4]
    2314:	mrc	15, 0, r3, cr13, cr0, {3}
    2318:	ldr	r2, [pc, #968]	; 26e8 <grib_init+0x20a8>
    231c:	ldr	r3, [r3, r2]
    2320:	add	r3, r3, #176	; 0xb0
    2324:	ldr	r3, [r3]
    2328:	ldr	r1, [fp, #-20]	; 0xffffffec
    232c:	mov	r0, r3
    2330:	bl	0 <coda_type_number_set_endianness>
    2334:	mrc	15, 0, r3, cr13, cr0, {3}
    2338:	ldr	r2, [pc, #936]	; 26e8 <grib_init+0x20a8>
    233c:	ldr	r3, [r3, r2]
    2340:	add	r3, r3, #176	; 0xb0
    2344:	ldr	r3, [r3]
    2348:	mov	r1, #5
    234c:	mov	r0, r3
    2350:	bl	0 <coda_type_set_read_type>
    2354:	mrc	15, 0, r3, cr13, cr0, {3}
    2358:	ldr	r2, [pc, #904]	; 26e8 <grib_init+0x20a8>
    235c:	ldr	r3, [r3, r2]
    2360:	add	r3, r3, #176	; 0xb0
    2364:	ldr	r1, [r3]
    2368:	mov	r2, #32
    236c:	mov	r3, #0
    2370:	mov	r0, r1
    2374:	bl	0 <coda_type_set_bit_size>
    2378:	mrc	15, 0, r3, cr13, cr0, {3}
    237c:	ldr	r2, [pc, #868]	; 26e8 <grib_init+0x20a8>
    2380:	ldr	r3, [r3, r2]
    2384:	add	r4, r3, #180	; 0xb4
    2388:	mov	r1, #2
    238c:	mov	r0, #7
    2390:	bl	0 <coda_type_number_new>
    2394:	mov	r3, r0
    2398:	str	r3, [r4]
    239c:	mrc	15, 0, r3, cr13, cr0, {3}
    23a0:	ldr	r2, [pc, #832]	; 26e8 <grib_init+0x20a8>
    23a4:	ldr	r3, [r3, r2]
    23a8:	add	r3, r3, #180	; 0xb4
    23ac:	ldr	r3, [r3]
    23b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    23b4:	mov	r0, r3
    23b8:	bl	0 <coda_type_number_set_endianness>
    23bc:	mrc	15, 0, r3, cr13, cr0, {3}
    23c0:	ldr	r2, [pc, #800]	; 26e8 <grib_init+0x20a8>
    23c4:	ldr	r3, [r3, r2]
    23c8:	add	r3, r3, #180	; 0xb4
    23cc:	ldr	r3, [r3]
    23d0:	mov	r1, #5
    23d4:	mov	r0, r3
    23d8:	bl	0 <coda_type_set_read_type>
    23dc:	mrc	15, 0, r3, cr13, cr0, {3}
    23e0:	ldr	r2, [pc, #768]	; 26e8 <grib_init+0x20a8>
    23e4:	ldr	r3, [r3, r2]
    23e8:	add	r3, r3, #180	; 0xb4
    23ec:	ldr	r1, [r3]
    23f0:	mov	r2, #32
    23f4:	mov	r3, #0
    23f8:	mov	r0, r1
    23fc:	bl	0 <coda_type_set_bit_size>
    2400:	mrc	15, 0, r3, cr13, cr0, {3}
    2404:	ldr	r2, [pc, #732]	; 26e8 <grib_init+0x20a8>
    2408:	ldr	r3, [r3, r2]
    240c:	add	r4, r3, #184	; 0xb8
    2410:	mov	r1, #2
    2414:	mov	r0, #7
    2418:	bl	0 <coda_type_number_new>
    241c:	mov	r3, r0
    2420:	str	r3, [r4]
    2424:	mrc	15, 0, r3, cr13, cr0, {3}
    2428:	ldr	r2, [pc, #696]	; 26e8 <grib_init+0x20a8>
    242c:	ldr	r3, [r3, r2]
    2430:	add	r3, r3, #184	; 0xb8
    2434:	ldr	r3, [r3]
    2438:	ldr	r1, [fp, #-20]	; 0xffffffec
    243c:	mov	r0, r3
    2440:	bl	0 <coda_type_number_set_endianness>
    2444:	mrc	15, 0, r3, cr13, cr0, {3}
    2448:	ldr	r2, [pc, #664]	; 26e8 <grib_init+0x20a8>
    244c:	ldr	r3, [r3, r2]
    2450:	add	r3, r3, #184	; 0xb8
    2454:	ldr	r3, [r3]
    2458:	mov	r1, #4
    245c:	mov	r0, r3
    2460:	bl	0 <coda_type_set_read_type>
    2464:	mrc	15, 0, r3, cr13, cr0, {3}
    2468:	ldr	r2, [pc, #632]	; 26e8 <grib_init+0x20a8>
    246c:	ldr	r3, [r3, r2]
    2470:	add	r3, r3, #184	; 0xb8
    2474:	ldr	r1, [r3]
    2478:	mov	r2, #32
    247c:	mov	r3, #0
    2480:	mov	r0, r1
    2484:	bl	0 <coda_type_set_bit_size>
    2488:	mrc	15, 0, r3, cr13, cr0, {3}
    248c:	ldr	r2, [pc, #596]	; 26e8 <grib_init+0x20a8>
    2490:	ldr	r3, [r3, r2]
    2494:	add	r3, r3, #184	; 0xb8
    2498:	ldr	r3, [r3]
    249c:	movw	r1, #0
    24a0:	movt	r1, #0
    24a4:	mov	r0, r3
    24a8:	bl	0 <coda_type_set_description>
    24ac:	mrc	15, 0, r3, cr13, cr0, {3}
    24b0:	ldr	r2, [pc, #560]	; 26e8 <grib_init+0x20a8>
    24b4:	ldr	r3, [r3, r2]
    24b8:	add	r4, r3, #188	; 0xbc
    24bc:	mov	r1, #2
    24c0:	mov	r0, #7
    24c4:	bl	0 <coda_type_number_new>
    24c8:	mov	r3, r0
    24cc:	str	r3, [r4]
    24d0:	mrc	15, 0, r3, cr13, cr0, {3}
    24d4:	ldr	r2, [pc, #524]	; 26e8 <grib_init+0x20a8>
    24d8:	ldr	r3, [r3, r2]
    24dc:	add	r3, r3, #188	; 0xbc
    24e0:	ldr	r3, [r3]
    24e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    24e8:	mov	r0, r3
    24ec:	bl	0 <coda_type_number_set_endianness>
    24f0:	mrc	15, 0, r3, cr13, cr0, {3}
    24f4:	ldr	r2, [pc, #492]	; 26e8 <grib_init+0x20a8>
    24f8:	ldr	r3, [r3, r2]
    24fc:	add	r3, r3, #188	; 0xbc
    2500:	ldr	r3, [r3]
    2504:	mov	r1, #4
    2508:	mov	r0, r3
    250c:	bl	0 <coda_type_set_read_type>
    2510:	mrc	15, 0, r3, cr13, cr0, {3}
    2514:	ldr	r2, [pc, #460]	; 26e8 <grib_init+0x20a8>
    2518:	ldr	r3, [r3, r2]
    251c:	add	r3, r3, #188	; 0xbc
    2520:	ldr	r1, [r3]
    2524:	mov	r2, #32
    2528:	mov	r3, #0
    252c:	mov	r0, r1
    2530:	bl	0 <coda_type_set_bit_size>
    2534:	mrc	15, 0, r3, cr13, cr0, {3}
    2538:	ldr	r2, [pc, #424]	; 26e8 <grib_init+0x20a8>
    253c:	ldr	r3, [r3, r2]
    2540:	add	r3, r3, #188	; 0xbc
    2544:	ldr	r3, [r3]
    2548:	movw	r1, #0
    254c:	movt	r1, #0
    2550:	mov	r0, r3
    2554:	bl	0 <coda_type_set_description>
    2558:	mrc	15, 0, r3, cr13, cr0, {3}
    255c:	ldr	r2, [pc, #388]	; 26e8 <grib_init+0x20a8>
    2560:	ldr	r3, [r3, r2]
    2564:	add	r4, r3, #192	; 0xc0
    2568:	mov	r1, #2
    256c:	mov	r0, #7
    2570:	bl	0 <coda_type_number_new>
    2574:	mov	r3, r0
    2578:	str	r3, [r4]
    257c:	mrc	15, 0, r3, cr13, cr0, {3}
    2580:	ldr	r2, [pc, #352]	; 26e8 <grib_init+0x20a8>
    2584:	ldr	r3, [r3, r2]
    2588:	add	r3, r3, #192	; 0xc0
    258c:	ldr	r3, [r3]
    2590:	ldr	r1, [fp, #-20]	; 0xffffffec
    2594:	mov	r0, r3
    2598:	bl	0 <coda_type_number_set_endianness>
    259c:	mrc	15, 0, r3, cr13, cr0, {3}
    25a0:	ldr	r2, [pc, #320]	; 26e8 <grib_init+0x20a8>
    25a4:	ldr	r3, [r3, r2]
    25a8:	add	r3, r3, #192	; 0xc0
    25ac:	ldr	r3, [r3]
    25b0:	mov	r1, #1
    25b4:	mov	r0, r3
    25b8:	bl	0 <coda_type_set_read_type>
    25bc:	mrc	15, 0, r3, cr13, cr0, {3}
    25c0:	ldr	r2, [pc, #288]	; 26e8 <grib_init+0x20a8>
    25c4:	ldr	r3, [r3, r2]
    25c8:	add	r3, r3, #192	; 0xc0
    25cc:	ldr	r1, [r3]
    25d0:	mov	r2, #8
    25d4:	mov	r3, #0
    25d8:	mov	r0, r1
    25dc:	bl	0 <coda_type_set_bit_size>
    25e0:	mrc	15, 0, r3, cr13, cr0, {3}
    25e4:	ldr	r2, [pc, #252]	; 26e8 <grib_init+0x20a8>
    25e8:	ldr	r3, [r3, r2]
    25ec:	add	r3, r3, #192	; 0xc0
    25f0:	ldr	r3, [r3]
    25f4:	movw	r1, #0
    25f8:	movt	r1, #0
    25fc:	mov	r0, r3
    2600:	bl	0 <coda_type_set_description>
    2604:	mrc	15, 0, r3, cr13, cr0, {3}
    2608:	ldr	r2, [pc, #216]	; 26e8 <grib_init+0x20a8>
    260c:	ldr	r3, [r3, r2]
    2610:	add	r4, r3, #196	; 0xc4
    2614:	mov	r1, #2
    2618:	mov	r0, #7
    261c:	bl	0 <coda_type_number_new>
    2620:	mov	r3, r0
    2624:	str	r3, [r4]
    2628:	mrc	15, 0, r3, cr13, cr0, {3}
    262c:	ldr	r2, [pc, #180]	; 26e8 <grib_init+0x20a8>
    2630:	ldr	r3, [r3, r2]
    2634:	add	r3, r3, #196	; 0xc4
    2638:	ldr	r3, [r3]
    263c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2640:	mov	r0, r3
    2644:	bl	0 <coda_type_number_set_endianness>
    2648:	mrc	15, 0, r3, cr13, cr0, {3}
    264c:	ldr	r2, [pc, #148]	; 26e8 <grib_init+0x20a8>
    2650:	ldr	r3, [r3, r2]
    2654:	add	r3, r3, #196	; 0xc4
    2658:	ldr	r3, [r3]
    265c:	mov	r1, #4
    2660:	mov	r0, r3
    2664:	bl	0 <coda_type_set_read_type>
    2668:	mrc	15, 0, r3, cr13, cr0, {3}
    266c:	ldr	r2, [pc, #116]	; 26e8 <grib_init+0x20a8>
    2670:	ldr	r3, [r3, r2]
    2674:	add	r3, r3, #196	; 0xc4
    2678:	ldr	r1, [r3]
    267c:	mov	r2, #32
    2680:	mov	r3, #0
    2684:	mov	r0, r1
    2688:	bl	0 <coda_type_set_bit_size>
    268c:	mrc	15, 0, r3, cr13, cr0, {3}
    2690:	ldr	r2, [pc, #80]	; 26e8 <grib_init+0x20a8>
    2694:	ldr	r3, [r3, r2]
    2698:	add	r3, r3, #196	; 0xc4
    269c:	ldr	r3, [r3]
    26a0:	movw	r1, #0
    26a4:	movt	r1, #0
    26a8:	mov	r0, r3
    26ac:	bl	0 <coda_type_set_description>
    26b0:	mrc	15, 0, r3, cr13, cr0, {3}
    26b4:	ldr	r2, [pc, #44]	; 26e8 <grib_init+0x20a8>
    26b8:	ldr	r3, [r3, r2]
    26bc:	add	r4, r3, #200	; 0xc8
    26c0:	mov	r1, #2
    26c4:	mov	r0, #7
    26c8:	bl	0 <coda_type_number_new>
    26cc:	mov	r3, r0
    26d0:	str	r3, [r4]
    26d4:	mrc	15, 0, r3, cr13, cr0, {3}
    26d8:	ldr	r2, [pc, #8]	; 26e8 <grib_init+0x20a8>
    26dc:	ldr	r3, [r3, r2]
    26e0:	add	r3, r3, #200	; 0xc8
    26e4:	b	26f0 <grib_init+0x20b0>
	...
    26f0:	ldr	r3, [r3]
    26f4:	ldr	r1, [fp, #-20]	; 0xffffffec
    26f8:	mov	r0, r3
    26fc:	bl	0 <coda_type_number_set_endianness>
    2700:	mrc	15, 0, r3, cr13, cr0, {3}
    2704:	ldr	r2, [pc, #-32]	; 26ec <grib_init+0x20ac>
    2708:	ldr	r3, [r3, r2]
    270c:	add	r3, r3, #200	; 0xc8
    2710:	ldr	r3, [r3]
    2714:	mov	r1, #4
    2718:	mov	r0, r3
    271c:	bl	0 <coda_type_set_read_type>
    2720:	mrc	15, 0, r3, cr13, cr0, {3}
    2724:	ldr	r2, [pc, #-64]	; 26ec <grib_init+0x20ac>
    2728:	ldr	r3, [r3, r2]
    272c:	add	r3, r3, #200	; 0xc8
    2730:	ldr	r1, [r3]
    2734:	mov	r2, #32
    2738:	mov	r3, #0
    273c:	mov	r0, r1
    2740:	bl	0 <coda_type_set_bit_size>
    2744:	mrc	15, 0, r3, cr13, cr0, {3}
    2748:	ldr	r2, [pc, #-100]	; 26ec <grib_init+0x20ac>
    274c:	ldr	r3, [r3, r2]
    2750:	add	r3, r3, #200	; 0xc8
    2754:	ldr	r3, [r3]
    2758:	movw	r1, #0
    275c:	movt	r1, #0
    2760:	mov	r0, r3
    2764:	bl	0 <coda_type_set_description>
    2768:	mrc	15, 0, r3, cr13, cr0, {3}
    276c:	ldr	r2, [pc, #-136]	; 26ec <grib_init+0x20ac>
    2770:	ldr	r3, [r3, r2]
    2774:	add	r4, r3, #204	; 0xcc
    2778:	mov	r1, #2
    277c:	mov	r0, #7
    2780:	bl	0 <coda_type_number_new>
    2784:	mov	r3, r0
    2788:	str	r3, [r4]
    278c:	mrc	15, 0, r3, cr13, cr0, {3}
    2790:	ldr	r2, [pc, #-172]	; 26ec <grib_init+0x20ac>
    2794:	ldr	r3, [r3, r2]
    2798:	add	r3, r3, #204	; 0xcc
    279c:	ldr	r3, [r3]
    27a0:	ldr	r1, [fp, #-20]	; 0xffffffec
    27a4:	mov	r0, r3
    27a8:	bl	0 <coda_type_number_set_endianness>
    27ac:	mrc	15, 0, r3, cr13, cr0, {3}
    27b0:	ldr	r2, [pc, #-204]	; 26ec <grib_init+0x20ac>
    27b4:	ldr	r3, [r3, r2]
    27b8:	add	r3, r3, #204	; 0xcc
    27bc:	ldr	r3, [r3]
    27c0:	mov	r1, #3
    27c4:	mov	r0, r3
    27c8:	bl	0 <coda_type_set_read_type>
    27cc:	mrc	15, 0, r3, cr13, cr0, {3}
    27d0:	ldr	r2, [pc, #-236]	; 26ec <grib_init+0x20ac>
    27d4:	ldr	r3, [r3, r2]
    27d8:	add	r3, r3, #204	; 0xcc
    27dc:	ldr	r1, [r3]
    27e0:	mov	r2, #16
    27e4:	mov	r3, #0
    27e8:	mov	r0, r1
    27ec:	bl	0 <coda_type_set_bit_size>
    27f0:	mrc	15, 0, r3, cr13, cr0, {3}
    27f4:	ldr	r2, [pc, #-272]	; 26ec <grib_init+0x20ac>
    27f8:	ldr	r3, [r3, r2]
    27fc:	add	r3, r3, #204	; 0xcc
    2800:	ldr	r3, [r3]
    2804:	movw	r1, #0
    2808:	movt	r1, #0
    280c:	mov	r0, r3
    2810:	bl	0 <coda_type_set_description>
    2814:	mrc	15, 0, r3, cr13, cr0, {3}
    2818:	ldr	r2, [pc, #-308]	; 26ec <grib_init+0x20ac>
    281c:	ldr	r3, [r3, r2]
    2820:	add	r4, r3, #208	; 0xd0
    2824:	mov	r1, #2
    2828:	mov	r0, #7
    282c:	bl	0 <coda_type_number_new>
    2830:	mov	r3, r0
    2834:	str	r3, [r4]
    2838:	mrc	15, 0, r3, cr13, cr0, {3}
    283c:	ldr	r2, [pc, #-344]	; 26ec <grib_init+0x20ac>
    2840:	ldr	r3, [r3, r2]
    2844:	add	r3, r3, #208	; 0xd0
    2848:	ldr	r3, [r3]
    284c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2850:	mov	r0, r3
    2854:	bl	0 <coda_type_number_set_endianness>
    2858:	mrc	15, 0, r3, cr13, cr0, {3}
    285c:	ldr	r2, [pc, #-376]	; 26ec <grib_init+0x20ac>
    2860:	ldr	r3, [r3, r2]
    2864:	add	r3, r3, #208	; 0xd0
    2868:	ldr	r3, [r3]
    286c:	mov	r1, #3
    2870:	mov	r0, r3
    2874:	bl	0 <coda_type_set_read_type>
    2878:	mrc	15, 0, r3, cr13, cr0, {3}
    287c:	ldr	r2, [pc, #-408]	; 26ec <grib_init+0x20ac>
    2880:	ldr	r3, [r3, r2]
    2884:	add	r3, r3, #208	; 0xd0
    2888:	ldr	r1, [r3]
    288c:	mov	r2, #16
    2890:	mov	r3, #0
    2894:	mov	r0, r1
    2898:	bl	0 <coda_type_set_bit_size>
    289c:	mrc	15, 0, r3, cr13, cr0, {3}
    28a0:	ldr	r2, [pc, #-444]	; 26ec <grib_init+0x20ac>
    28a4:	ldr	r3, [r3, r2]
    28a8:	add	r3, r3, #208	; 0xd0
    28ac:	ldr	r3, [r3]
    28b0:	movw	r1, #0
    28b4:	movt	r1, #0
    28b8:	mov	r0, r3
    28bc:	bl	0 <coda_type_set_description>
    28c0:	mrc	15, 0, r3, cr13, cr0, {3}
    28c4:	ldr	r2, [pc, #-480]	; 26ec <grib_init+0x20ac>
    28c8:	ldr	r3, [r3, r2]
    28cc:	add	r4, r3, #212	; 0xd4
    28d0:	mov	r1, #2
    28d4:	mov	r0, #7
    28d8:	bl	0 <coda_type_number_new>
    28dc:	mov	r3, r0
    28e0:	str	r3, [r4]
    28e4:	mrc	15, 0, r3, cr13, cr0, {3}
    28e8:	ldr	r2, [pc, #-516]	; 26ec <grib_init+0x20ac>
    28ec:	ldr	r3, [r3, r2]
    28f0:	add	r3, r3, #212	; 0xd4
    28f4:	ldr	r3, [r3]
    28f8:	ldr	r1, [fp, #-20]	; 0xffffffec
    28fc:	mov	r0, r3
    2900:	bl	0 <coda_type_number_set_endianness>
    2904:	mrc	15, 0, r3, cr13, cr0, {3}
    2908:	ldr	r2, [pc, #-548]	; 26ec <grib_init+0x20ac>
    290c:	ldr	r3, [r3, r2]
    2910:	add	r3, r3, #212	; 0xd4
    2914:	ldr	r3, [r3]
    2918:	mov	r1, #3
    291c:	mov	r0, r3
    2920:	bl	0 <coda_type_set_read_type>
    2924:	mrc	15, 0, r3, cr13, cr0, {3}
    2928:	ldr	r2, [pc, #-580]	; 26ec <grib_init+0x20ac>
    292c:	ldr	r3, [r3, r2]
    2930:	add	r3, r3, #212	; 0xd4
    2934:	ldr	r1, [r3]
    2938:	mov	r2, #16
    293c:	mov	r3, #0
    2940:	mov	r0, r1
    2944:	bl	0 <coda_type_set_bit_size>
    2948:	mrc	15, 0, r3, cr13, cr0, {3}
    294c:	ldr	r2, [pc, #-616]	; 26ec <grib_init+0x20ac>
    2950:	ldr	r3, [r3, r2]
    2954:	add	r3, r3, #212	; 0xd4
    2958:	ldr	r3, [r3]
    295c:	movw	r1, #0
    2960:	movt	r1, #0
    2964:	mov	r0, r3
    2968:	bl	0 <coda_type_set_description>
    296c:	mrc	15, 0, r3, cr13, cr0, {3}
    2970:	ldr	r2, [pc, #-652]	; 26ec <grib_init+0x20ac>
    2974:	ldr	r3, [r3, r2]
    2978:	add	r4, r3, #216	; 0xd8
    297c:	mov	r1, #2
    2980:	mov	r0, #7
    2984:	bl	0 <coda_type_number_new>
    2988:	mov	r3, r0
    298c:	str	r3, [r4]
    2990:	mrc	15, 0, r3, cr13, cr0, {3}
    2994:	ldr	r2, [pc, #-688]	; 26ec <grib_init+0x20ac>
    2998:	ldr	r3, [r3, r2]
    299c:	add	r3, r3, #216	; 0xd8
    29a0:	ldr	r3, [r3]
    29a4:	ldr	r1, [fp, #-20]	; 0xffffffec
    29a8:	mov	r0, r3
    29ac:	bl	0 <coda_type_number_set_endianness>
    29b0:	mrc	15, 0, r3, cr13, cr0, {3}
    29b4:	ldr	r2, [pc, #-720]	; 26ec <grib_init+0x20ac>
    29b8:	ldr	r3, [r3, r2]
    29bc:	add	r3, r3, #216	; 0xd8
    29c0:	ldr	r3, [r3]
    29c4:	mov	r1, #1
    29c8:	mov	r0, r3
    29cc:	bl	0 <coda_type_set_read_type>
    29d0:	mrc	15, 0, r3, cr13, cr0, {3}
    29d4:	ldr	r2, [pc, #-752]	; 26ec <grib_init+0x20ac>
    29d8:	ldr	r3, [r3, r2]
    29dc:	add	r3, r3, #216	; 0xd8
    29e0:	ldr	r1, [r3]
    29e4:	mov	r2, #8
    29e8:	mov	r3, #0
    29ec:	mov	r0, r1
    29f0:	bl	0 <coda_type_set_bit_size>
    29f4:	mrc	15, 0, r3, cr13, cr0, {3}
    29f8:	ldr	r2, [pc, #-788]	; 26ec <grib_init+0x20ac>
    29fc:	ldr	r3, [r3, r2]
    2a00:	add	r3, r3, #216	; 0xd8
    2a04:	ldr	r3, [r3]
    2a08:	movw	r1, #0
    2a0c:	movt	r1, #0
    2a10:	mov	r0, r3
    2a14:	bl	0 <coda_type_set_description>
    2a18:	mrc	15, 0, r3, cr13, cr0, {3}
    2a1c:	ldr	r2, [pc, #-824]	; 26ec <grib_init+0x20ac>
    2a20:	ldr	r3, [r3, r2]
    2a24:	add	r4, r3, #220	; 0xdc
    2a28:	mov	r1, #3
    2a2c:	mov	r0, #7
    2a30:	bl	0 <coda_type_number_new>
    2a34:	mov	r3, r0
    2a38:	str	r3, [r4]
    2a3c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a40:	ldr	r2, [pc, #-860]	; 26ec <grib_init+0x20ac>
    2a44:	ldr	r3, [r3, r2]
    2a48:	add	r3, r3, #220	; 0xdc
    2a4c:	ldr	r3, [r3]
    2a50:	ldr	r1, [fp, #-20]	; 0xffffffec
    2a54:	mov	r0, r3
    2a58:	bl	0 <coda_type_number_set_endianness>
    2a5c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a60:	ldr	r2, [pc, #-892]	; 26ec <grib_init+0x20ac>
    2a64:	ldr	r3, [r3, r2]
    2a68:	add	r3, r3, #220	; 0xdc
    2a6c:	ldr	r3, [r3]
    2a70:	mov	r1, #8
    2a74:	mov	r0, r3
    2a78:	bl	0 <coda_type_set_read_type>
    2a7c:	mrc	15, 0, r3, cr13, cr0, {3}
    2a80:	ldr	r2, [pc, #-924]	; 26ec <grib_init+0x20ac>
    2a84:	ldr	r3, [r3, r2]
    2a88:	add	r3, r3, #220	; 0xdc
    2a8c:	ldr	r1, [r3]
    2a90:	mov	r2, #32
    2a94:	mov	r3, #0
    2a98:	mov	r0, r1
    2a9c:	bl	0 <coda_type_set_bit_size>
    2aa0:	mrc	15, 0, r3, cr13, cr0, {3}
    2aa4:	ldr	r2, [pc, #-960]	; 26ec <grib_init+0x20ac>
    2aa8:	ldr	r3, [r3, r2]
    2aac:	add	r4, r3, #224	; 0xe0
    2ab0:	mov	r0, #7
    2ab4:	bl	0 <coda_type_array_new>
    2ab8:	mov	r3, r0
    2abc:	str	r3, [r4]
    2ac0:	mrc	15, 0, r3, cr13, cr0, {3}
    2ac4:	ldr	r2, [pc, #-992]	; 26ec <grib_init+0x20ac>
    2ac8:	ldr	r3, [r3, r2]
    2acc:	add	r3, r3, #224	; 0xe0
    2ad0:	ldr	r3, [r3]
    2ad4:	movw	r1, #0
    2ad8:	movt	r1, #0
    2adc:	mov	r0, r3
    2ae0:	bl	0 <coda_type_set_description>
    2ae4:	mrc	15, 0, r3, cr13, cr0, {3}
    2ae8:	ldr	r2, [pc, #-1028]	; 26ec <grib_init+0x20ac>
    2aec:	ldr	r3, [r3, r2]
    2af0:	add	r3, r3, #224	; 0xe0
    2af4:	ldr	r0, [r3]
    2af8:	mrc	15, 0, r3, cr13, cr0, {3}
    2afc:	ldr	r2, [pc, #-1048]	; 26ec <grib_init+0x20ac>
    2b00:	ldr	r3, [r3, r2]
    2b04:	add	r3, r3, #220	; 0xdc
    2b08:	ldr	r3, [r3]
    2b0c:	mov	r1, r3
    2b10:	bl	0 <coda_type_array_set_base_type>
    2b14:	mrc	15, 0, r3, cr13, cr0, {3}
    2b18:	ldr	r2, [pc, #-1076]	; 26ec <grib_init+0x20ac>
    2b1c:	ldr	r3, [r3, r2]
    2b20:	add	r3, r3, #224	; 0xe0
    2b24:	ldr	r3, [r3]
    2b28:	mov	r1, #0
    2b2c:	mov	r0, r3
    2b30:	bl	0 <coda_type_array_add_variable_dimension>
    2b34:	mrc	15, 0, r3, cr13, cr0, {3}
    2b38:	ldr	r2, [pc, #-1108]	; 26ec <grib_init+0x20ac>
    2b3c:	ldr	r3, [r3, r2]
    2b40:	add	r4, r3, #228	; 0xe4
    2b44:	mov	r1, #2
    2b48:	mov	r0, #7
    2b4c:	bl	0 <coda_type_number_new>
    2b50:	mov	r3, r0
    2b54:	str	r3, [r4]
    2b58:	mrc	15, 0, r3, cr13, cr0, {3}
    2b5c:	ldr	r2, [pc, #-1144]	; 26ec <grib_init+0x20ac>
    2b60:	ldr	r3, [r3, r2]
    2b64:	add	r3, r3, #228	; 0xe4
    2b68:	ldr	r3, [r3]
    2b6c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2b70:	mov	r0, r3
    2b74:	bl	0 <coda_type_number_set_endianness>
    2b78:	mrc	15, 0, r3, cr13, cr0, {3}
    2b7c:	ldr	r2, [pc, #-1176]	; 26ec <grib_init+0x20ac>
    2b80:	ldr	r3, [r3, r2]
    2b84:	add	r3, r3, #228	; 0xe4
    2b88:	ldr	r3, [r3]
    2b8c:	mov	r1, #3
    2b90:	mov	r0, r3
    2b94:	bl	0 <coda_type_set_read_type>
    2b98:	mrc	15, 0, r3, cr13, cr0, {3}
    2b9c:	ldr	r2, [pc, #-1208]	; 26ec <grib_init+0x20ac>
    2ba0:	ldr	r3, [r3, r2]
    2ba4:	add	r3, r3, #228	; 0xe4
    2ba8:	ldr	r1, [r3]
    2bac:	mov	r2, #16
    2bb0:	mov	r3, #0
    2bb4:	mov	r0, r1
    2bb8:	bl	0 <coda_type_set_bit_size>
    2bbc:	mrc	15, 0, r3, cr13, cr0, {3}
    2bc0:	ldr	r2, [pc, #-1244]	; 26ec <grib_init+0x20ac>
    2bc4:	ldr	r3, [r3, r2]
    2bc8:	add	r4, r3, #232	; 0xe8
    2bcc:	mov	r0, #7
    2bd0:	bl	0 <coda_type_array_new>
    2bd4:	mov	r3, r0
    2bd8:	str	r3, [r4]
    2bdc:	mrc	15, 0, r3, cr13, cr0, {3}
    2be0:	ldr	r2, [pc, #-1276]	; 26ec <grib_init+0x20ac>
    2be4:	ldr	r3, [r3, r2]
    2be8:	add	r3, r3, #232	; 0xe8
    2bec:	ldr	r3, [r3]
    2bf0:	movw	r1, #0
    2bf4:	movt	r1, #0
    2bf8:	mov	r0, r3
    2bfc:	bl	0 <coda_type_set_description>
    2c00:	mrc	15, 0, r3, cr13, cr0, {3}
    2c04:	ldr	r2, [pc, #-1312]	; 26ec <grib_init+0x20ac>
    2c08:	ldr	r3, [r3, r2]
    2c0c:	add	r3, r3, #232	; 0xe8
    2c10:	ldr	r0, [r3]
    2c14:	mrc	15, 0, r3, cr13, cr0, {3}
    2c18:	ldr	r2, [pc, #-1332]	; 26ec <grib_init+0x20ac>
    2c1c:	ldr	r3, [r3, r2]
    2c20:	add	r3, r3, #228	; 0xe4
    2c24:	ldr	r3, [r3]
    2c28:	mov	r1, r3
    2c2c:	bl	0 <coda_type_array_set_base_type>
    2c30:	mrc	15, 0, r3, cr13, cr0, {3}
    2c34:	ldr	r2, [pc, #-1360]	; 26ec <grib_init+0x20ac>
    2c38:	ldr	r3, [r3, r2]
    2c3c:	add	r3, r3, #232	; 0xe8
    2c40:	ldr	r3, [r3]
    2c44:	mov	r1, #0
    2c48:	mov	r0, r3
    2c4c:	bl	0 <coda_type_array_add_variable_dimension>
    2c50:	mrc	15, 0, r3, cr13, cr0, {3}
    2c54:	ldr	r2, [pc, #-1392]	; 26ec <grib_init+0x20ac>
    2c58:	ldr	r3, [r3, r2]
    2c5c:	add	r4, r3, #236	; 0xec
    2c60:	mov	r1, #2
    2c64:	mov	r0, #7
    2c68:	bl	0 <coda_type_number_new>
    2c6c:	mov	r3, r0
    2c70:	str	r3, [r4]
    2c74:	mrc	15, 0, r3, cr13, cr0, {3}
    2c78:	ldr	r2, [pc, #-1428]	; 26ec <grib_init+0x20ac>
    2c7c:	ldr	r3, [r3, r2]
    2c80:	add	r3, r3, #236	; 0xec
    2c84:	ldr	r3, [r3]
    2c88:	ldr	r1, [fp, #-20]	; 0xffffffec
    2c8c:	mov	r0, r3
    2c90:	bl	0 <coda_type_number_set_endianness>
    2c94:	mrc	15, 0, r3, cr13, cr0, {3}
    2c98:	ldr	r2, [pc, #-1460]	; 26ec <grib_init+0x20ac>
    2c9c:	ldr	r3, [r3, r2]
    2ca0:	add	r3, r3, #236	; 0xec
    2ca4:	ldr	r3, [r3]
    2ca8:	mov	r1, #1
    2cac:	mov	r0, r3
    2cb0:	bl	0 <coda_type_set_read_type>
    2cb4:	mrc	15, 0, r3, cr13, cr0, {3}
    2cb8:	ldr	r2, [pc, #-1492]	; 26ec <grib_init+0x20ac>
    2cbc:	ldr	r3, [r3, r2]
    2cc0:	add	r3, r3, #236	; 0xec
    2cc4:	ldr	r1, [r3]
    2cc8:	mov	r2, #8
    2ccc:	mov	r3, #0
    2cd0:	mov	r0, r1
    2cd4:	bl	0 <coda_type_set_bit_size>
    2cd8:	mrc	15, 0, r3, cr13, cr0, {3}
    2cdc:	ldr	r2, [pc, #-1528]	; 26ec <grib_init+0x20ac>
    2ce0:	ldr	r3, [r3, r2]
    2ce4:	add	r3, r3, #236	; 0xec
    2ce8:	ldr	r3, [r3]
    2cec:	movw	r1, #0
    2cf0:	movt	r1, #0
    2cf4:	mov	r0, r3
    2cf8:	bl	0 <coda_type_set_description>
    2cfc:	mrc	15, 0, r3, cr13, cr0, {3}
    2d00:	ldr	r2, [pc, #-1564]	; 26ec <grib_init+0x20ac>
    2d04:	ldr	r3, [r3, r2]
    2d08:	add	r4, r3, #240	; 0xf0
    2d0c:	mov	r1, #2
    2d10:	mov	r0, #7
    2d14:	bl	0 <coda_type_number_new>
    2d18:	mov	r3, r0
    2d1c:	str	r3, [r4]
    2d20:	mrc	15, 0, r3, cr13, cr0, {3}
    2d24:	ldr	r2, [pc, #-1600]	; 26ec <grib_init+0x20ac>
    2d28:	ldr	r3, [r3, r2]
    2d2c:	add	r3, r3, #240	; 0xf0
    2d30:	ldr	r3, [r3]
    2d34:	ldr	r1, [fp, #-20]	; 0xffffffec
    2d38:	mov	r0, r3
    2d3c:	bl	0 <coda_type_number_set_endianness>
    2d40:	mrc	15, 0, r3, cr13, cr0, {3}
    2d44:	ldr	r2, [pc, #-1632]	; 26ec <grib_init+0x20ac>
    2d48:	ldr	r3, [r3, r2]
    2d4c:	add	r3, r3, #240	; 0xf0
    2d50:	ldr	r3, [r3]
    2d54:	mov	r1, #5
    2d58:	mov	r0, r3
    2d5c:	bl	0 <coda_type_set_read_type>
    2d60:	mrc	15, 0, r3, cr13, cr0, {3}
    2d64:	ldr	r2, [pc, #-1664]	; 26ec <grib_init+0x20ac>
    2d68:	ldr	r3, [r3, r2]
    2d6c:	add	r3, r3, #240	; 0xf0
    2d70:	ldr	r1, [r3]
    2d74:	mov	r2, #32
    2d78:	mov	r3, #0
    2d7c:	mov	r0, r1
    2d80:	bl	0 <coda_type_set_bit_size>
    2d84:	mrc	15, 0, r3, cr13, cr0, {3}
    2d88:	ldr	r2, [pc, #-1700]	; 26ec <grib_init+0x20ac>
    2d8c:	ldr	r3, [r3, r2]
    2d90:	add	r3, r3, #240	; 0xf0
    2d94:	ldr	r3, [r3]
    2d98:	movw	r1, #0
    2d9c:	movt	r1, #0
    2da0:	mov	r0, r3
    2da4:	bl	0 <coda_type_set_description>
    2da8:	mrc	15, 0, r3, cr13, cr0, {3}
    2dac:	ldr	r2, [pc, #-1736]	; 26ec <grib_init+0x20ac>
    2db0:	ldr	r3, [r3, r2]
    2db4:	add	r4, r3, #244	; 0xf4
    2db8:	mov	r1, #2
    2dbc:	mov	r0, #7
    2dc0:	bl	0 <coda_type_number_new>
    2dc4:	mov	r3, r0
    2dc8:	str	r3, [r4]
    2dcc:	mrc	15, 0, r3, cr13, cr0, {3}
    2dd0:	ldr	r2, [pc, #-1772]	; 26ec <grib_init+0x20ac>
    2dd4:	ldr	r3, [r3, r2]
    2dd8:	add	r3, r3, #244	; 0xf4
    2ddc:	ldr	r3, [r3]
    2de0:	ldr	r1, [fp, #-20]	; 0xffffffec
    2de4:	mov	r0, r3
    2de8:	bl	0 <coda_type_number_set_endianness>
    2dec:	mrc	15, 0, r3, cr13, cr0, {3}
    2df0:	ldr	r2, [pc, #-1804]	; 26ec <grib_init+0x20ac>
    2df4:	ldr	r3, [r3, r2]
    2df8:	add	r3, r3, #244	; 0xf4
    2dfc:	ldr	r3, [r3]
    2e00:	mov	r1, #3
    2e04:	mov	r0, r3
    2e08:	bl	0 <coda_type_set_read_type>
    2e0c:	mrc	15, 0, r3, cr13, cr0, {3}
    2e10:	ldr	r2, [pc, #-1836]	; 26ec <grib_init+0x20ac>
    2e14:	ldr	r3, [r3, r2]
    2e18:	add	r3, r3, #244	; 0xf4
    2e1c:	ldr	r1, [r3]
    2e20:	mov	r2, #16
    2e24:	mov	r3, #0
    2e28:	mov	r0, r1
    2e2c:	bl	0 <coda_type_set_bit_size>
    2e30:	mrc	15, 0, r3, cr13, cr0, {3}
    2e34:	ldr	r2, [pc, #-1872]	; 26ec <grib_init+0x20ac>
    2e38:	ldr	r3, [r3, r2]
    2e3c:	add	r3, r3, #244	; 0xf4
    2e40:	ldr	r3, [r3]
    2e44:	movw	r1, #0
    2e48:	movt	r1, #0
    2e4c:	mov	r0, r3
    2e50:	bl	0 <coda_type_set_description>
    2e54:	mrc	15, 0, r3, cr13, cr0, {3}
    2e58:	ldr	r2, [pc, #-1908]	; 26ec <grib_init+0x20ac>
    2e5c:	ldr	r3, [r3, r2]
    2e60:	add	r4, r3, #248	; 0xf8
    2e64:	mov	r1, #2
    2e68:	mov	r0, #7
    2e6c:	bl	0 <coda_type_number_new>
    2e70:	mov	r3, r0
    2e74:	str	r3, [r4]
    2e78:	mrc	15, 0, r3, cr13, cr0, {3}
    2e7c:	ldr	r2, [pc, #-1944]	; 26ec <grib_init+0x20ac>
    2e80:	ldr	r3, [r3, r2]
    2e84:	add	r3, r3, #248	; 0xf8
    2e88:	ldr	r3, [r3]
    2e8c:	ldr	r1, [fp, #-20]	; 0xffffffec
    2e90:	mov	r0, r3
    2e94:	bl	0 <coda_type_number_set_endianness>
    2e98:	mrc	15, 0, r3, cr13, cr0, {3}
    2e9c:	ldr	r2, [pc, #-1976]	; 26ec <grib_init+0x20ac>
    2ea0:	ldr	r3, [r3, r2]
    2ea4:	add	r3, r3, #248	; 0xf8
    2ea8:	ldr	r3, [r3]
    2eac:	mov	r1, #1
    2eb0:	mov	r0, r3
    2eb4:	bl	0 <coda_type_set_read_type>
    2eb8:	mrc	15, 0, r3, cr13, cr0, {3}
    2ebc:	ldr	r2, [pc, #-2008]	; 26ec <grib_init+0x20ac>
    2ec0:	ldr	r3, [r3, r2]
    2ec4:	add	r3, r3, #248	; 0xf8
    2ec8:	ldr	r1, [r3]
    2ecc:	mov	r2, #8
    2ed0:	mov	r3, #0
    2ed4:	mov	r0, r1
    2ed8:	bl	0 <coda_type_set_bit_size>
    2edc:	mrc	15, 0, r3, cr13, cr0, {3}
    2ee0:	ldr	r2, [pc, #-2044]	; 26ec <grib_init+0x20ac>
    2ee4:	ldr	r3, [r3, r2]
    2ee8:	add	r3, r3, #248	; 0xf8
    2eec:	ldr	r3, [r3]
    2ef0:	movw	r1, #0
    2ef4:	movt	r1, #0
    2ef8:	mov	r0, r3
    2efc:	bl	0 <coda_type_set_description>
    2f00:	mrc	15, 0, r3, cr13, cr0, {3}
    2f04:	ldr	r2, [pc, #-2080]	; 26ec <grib_init+0x20ac>
    2f08:	ldr	r3, [r3, r2]
    2f0c:	add	r4, r3, #252	; 0xfc
    2f10:	mov	r1, #2
    2f14:	mov	r0, #7
    2f18:	bl	0 <coda_type_number_new>
    2f1c:	mov	r3, r0
    2f20:	str	r3, [r4]
    2f24:	mrc	15, 0, r3, cr13, cr0, {3}
    2f28:	ldr	r2, [pc, #-2116]	; 26ec <grib_init+0x20ac>
    2f2c:	ldr	r3, [r3, r2]
    2f30:	add	r3, r3, #252	; 0xfc
    2f34:	ldr	r3, [r3]
    2f38:	ldr	r1, [fp, #-20]	; 0xffffffec
    2f3c:	mov	r0, r3
    2f40:	bl	0 <coda_type_number_set_endianness>
    2f44:	mrc	15, 0, r3, cr13, cr0, {3}
    2f48:	ldr	r2, [pc, #-2148]	; 26ec <grib_init+0x20ac>
    2f4c:	ldr	r3, [r3, r2]
    2f50:	add	r3, r3, #252	; 0xfc
    2f54:	ldr	r3, [r3]
    2f58:	mov	r1, #2
    2f5c:	mov	r0, r3
    2f60:	bl	0 <coda_type_set_read_type>
    2f64:	mrc	15, 0, r3, cr13, cr0, {3}
    2f68:	ldr	r2, [pc, #-2180]	; 26ec <grib_init+0x20ac>
    2f6c:	ldr	r3, [r3, r2]
    2f70:	add	r3, r3, #252	; 0xfc
    2f74:	ldr	r1, [r3]
    2f78:	mov	r2, #16
    2f7c:	mov	r3, #0
    2f80:	mov	r0, r1
    2f84:	bl	0 <coda_type_set_bit_size>
    2f88:	mrc	15, 0, r3, cr13, cr0, {3}
    2f8c:	ldr	r2, [pc, #-2216]	; 26ec <grib_init+0x20ac>
    2f90:	ldr	r3, [r3, r2]
    2f94:	add	r3, r3, #252	; 0xfc
    2f98:	ldr	r3, [r3]
    2f9c:	movw	r1, #0
    2fa0:	movt	r1, #0
    2fa4:	mov	r0, r3
    2fa8:	bl	0 <coda_type_set_description>
    2fac:	mrc	15, 0, r3, cr13, cr0, {3}
    2fb0:	ldr	r2, [pc, #-2252]	; 26ec <grib_init+0x20ac>
    2fb4:	ldr	r3, [r3, r2]
    2fb8:	add	r4, r3, #256	; 0x100
    2fbc:	mov	r1, #3
    2fc0:	mov	r0, #7
    2fc4:	bl	0 <coda_type_number_new>
    2fc8:	mov	r3, r0
    2fcc:	str	r3, [r4]
    2fd0:	mrc	15, 0, r3, cr13, cr0, {3}
    2fd4:	ldr	r2, [pc, #-2288]	; 26ec <grib_init+0x20ac>
    2fd8:	ldr	r3, [r3, r2]
    2fdc:	add	r3, r3, #256	; 0x100
    2fe0:	ldr	r3, [r3]
    2fe4:	ldr	r1, [fp, #-20]	; 0xffffffec
    2fe8:	mov	r0, r3
    2fec:	bl	0 <coda_type_number_set_endianness>
    2ff0:	mrc	15, 0, r3, cr13, cr0, {3}
    2ff4:	ldr	r2, [pc, #-2320]	; 26ec <grib_init+0x20ac>
    2ff8:	ldr	r3, [r3, r2]
    2ffc:	add	r3, r3, #256	; 0x100
    3000:	ldr	r3, [r3]
    3004:	mov	r1, #8
    3008:	mov	r0, r3
    300c:	bl	0 <coda_type_set_read_type>
    3010:	mrc	15, 0, r3, cr13, cr0, {3}
    3014:	ldr	r2, [pc, #-2352]	; 26ec <grib_init+0x20ac>
    3018:	ldr	r3, [r3, r2]
    301c:	add	r3, r3, #256	; 0x100
    3020:	ldr	r1, [r3]
    3024:	mov	r2, #32
    3028:	mov	r3, #0
    302c:	mov	r0, r1
    3030:	bl	0 <coda_type_set_bit_size>
    3034:	mrc	15, 0, r3, cr13, cr0, {3}
    3038:	ldr	r2, [pc, #-2388]	; 26ec <grib_init+0x20ac>
    303c:	ldr	r3, [r3, r2]
    3040:	add	r3, r3, #256	; 0x100
    3044:	ldr	r3, [r3]
    3048:	movw	r1, #0
    304c:	movt	r1, #0
    3050:	mov	r0, r3
    3054:	bl	0 <coda_type_set_description>
    3058:	mrc	15, 0, r3, cr13, cr0, {3}
    305c:	ldr	r2, [pc, #-2424]	; 26ec <grib_init+0x20ac>
    3060:	ldr	r3, [r3, r2]
    3064:	add	r4, r3, #260	; 0x104
    3068:	mov	r0, #7
    306c:	bl	0 <coda_type_array_new>
    3070:	mov	r3, r0
    3074:	str	r3, [r4]
    3078:	mov	r1, #3
    307c:	mov	r0, #7
    3080:	bl	0 <coda_type_number_new>
    3084:	str	r0, [fp, #-24]	; 0xffffffe8
    3088:	ldr	r1, [fp, #-20]	; 0xffffffec
    308c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    3090:	bl	0 <coda_type_number_set_endianness>
    3094:	mov	r1, #8
    3098:	ldr	r0, [fp, #-24]	; 0xffffffe8
    309c:	bl	0 <coda_type_set_read_type>
    30a0:	mov	r2, #32
    30a4:	mov	r3, #0
    30a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
    30ac:	bl	0 <coda_type_set_bit_size>
    30b0:	mrc	15, 0, r3, cr13, cr0, {3}
    30b4:	ldr	r2, [pc, #-2512]	; 26ec <grib_init+0x20ac>
    30b8:	ldr	r3, [r3, r2]
    30bc:	add	r3, r3, #260	; 0x104
    30c0:	ldr	r3, [r3]
    30c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
    30c8:	mov	r0, r3
    30cc:	bl	0 <coda_type_array_set_base_type>
    30d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    30d4:	bl	0 <coda_type_release>
    30d8:	mrc	15, 0, r3, cr13, cr0, {3}
    30dc:	ldr	r2, [pc, #-2552]	; 26ec <grib_init+0x20ac>
    30e0:	ldr	r3, [r3, r2]
    30e4:	add	r3, r3, #260	; 0x104
    30e8:	ldr	r3, [r3]
    30ec:	mov	r1, #0
    30f0:	mov	r0, r3
    30f4:	bl	0 <coda_type_array_add_variable_dimension>
    30f8:	mrc	15, 0, r3, cr13, cr0, {3}
    30fc:	ldr	r2, [pc, #-2584]	; 26ec <grib_init+0x20ac>
    3100:	ldr	r3, [r3, r2]
    3104:	add	r4, r3, #264	; 0x108
    3108:	mov	r0, #7
    310c:	bl	0 <coda_type_record_new>
    3110:	mov	r3, r0
    3114:	str	r3, [r4]
    3118:	movw	r0, #0
    311c:	movt	r0, #0
    3120:	bl	0 <coda_type_record_field_new>
    3124:	str	r0, [fp, #-28]	; 0xffffffe4
    3128:	mrc	15, 0, r3, cr13, cr0, {3}
    312c:	ldr	r2, [pc, #-2632]	; 26ec <grib_init+0x20ac>
    3130:	ldr	r3, [r3, r2]
    3134:	add	r3, r3, #132	; 0x84
    3138:	ldr	r3, [r3]
    313c:	mov	r1, r3
    3140:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3144:	bl	0 <coda_type_record_field_set_type>
    3148:	mrc	15, 0, r3, cr13, cr0, {3}
    314c:	ldr	r2, [pc, #-2664]	; 26ec <grib_init+0x20ac>
    3150:	ldr	r3, [r3, r2]
    3154:	add	r3, r3, #264	; 0x108
    3158:	ldr	r3, [r3]
    315c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3160:	mov	r0, r3
    3164:	bl	0 <coda_type_record_add_field>
    3168:	movw	r0, #0
    316c:	movt	r0, #0
    3170:	bl	0 <coda_type_record_field_new>
    3174:	str	r0, [fp, #-28]	; 0xffffffe4
    3178:	mrc	15, 0, r3, cr13, cr0, {3}
    317c:	ldr	r2, [pc, #-2712]	; 26ec <grib_init+0x20ac>
    3180:	ldr	r3, [r3, r2]
    3184:	add	r3, r3, #136	; 0x88
    3188:	ldr	r3, [r3]
    318c:	mov	r1, r3
    3190:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3194:	bl	0 <coda_type_record_field_set_type>
    3198:	mrc	15, 0, r3, cr13, cr0, {3}
    319c:	ldr	r2, [pc, #-2744]	; 26ec <grib_init+0x20ac>
    31a0:	ldr	r3, [r3, r2]
    31a4:	add	r3, r3, #264	; 0x108
    31a8:	ldr	r3, [r3]
    31ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    31b0:	mov	r0, r3
    31b4:	bl	0 <coda_type_record_add_field>
    31b8:	movw	r0, #0
    31bc:	movt	r0, #0
    31c0:	bl	0 <coda_type_record_field_new>
    31c4:	str	r0, [fp, #-28]	; 0xffffffe4
    31c8:	mrc	15, 0, r3, cr13, cr0, {3}
    31cc:	ldr	r2, [pc, #-2792]	; 26ec <grib_init+0x20ac>
    31d0:	ldr	r3, [r3, r2]
    31d4:	add	r3, r3, #168	; 0xa8
    31d8:	ldr	r3, [r3]
    31dc:	mov	r1, r3
    31e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    31e4:	bl	0 <coda_type_record_field_set_type>
    31e8:	mrc	15, 0, r3, cr13, cr0, {3}
    31ec:	ldr	r2, [pc, #-2824]	; 26ec <grib_init+0x20ac>
    31f0:	ldr	r3, [r3, r2]
    31f4:	add	r3, r3, #264	; 0x108
    31f8:	ldr	r3, [r3]
    31fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3200:	mov	r0, r3
    3204:	bl	0 <coda_type_record_add_field>
    3208:	movw	r0, #0
    320c:	movt	r0, #0
    3210:	bl	0 <coda_type_record_field_new>
    3214:	str	r0, [fp, #-28]	; 0xffffffe4
    3218:	mrc	15, 0, r3, cr13, cr0, {3}
    321c:	ldr	r2, [pc, #-2872]	; 26ec <grib_init+0x20ac>
    3220:	ldr	r3, [r3, r2]
    3224:	add	r3, r3, #172	; 0xac
    3228:	ldr	r3, [r3]
    322c:	mov	r1, r3
    3230:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3234:	bl	0 <coda_type_record_field_set_type>
    3238:	mrc	15, 0, r3, cr13, cr0, {3}
    323c:	ldr	r2, [pc, #-2904]	; 26ec <grib_init+0x20ac>
    3240:	ldr	r3, [r3, r2]
    3244:	add	r3, r3, #264	; 0x108
    3248:	ldr	r3, [r3]
    324c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3250:	mov	r0, r3
    3254:	bl	0 <coda_type_record_add_field>
    3258:	movw	r0, #0
    325c:	movt	r0, #0
    3260:	bl	0 <coda_type_record_field_new>
    3264:	str	r0, [fp, #-28]	; 0xffffffe4
    3268:	mrc	15, 0, r3, cr13, cr0, {3}
    326c:	ldr	r2, [pc, #-2952]	; 26ec <grib_init+0x20ac>
    3270:	ldr	r3, [r3, r2]
    3274:	add	r3, r3, #184	; 0xb8
    3278:	ldr	r3, [r3]
    327c:	mov	r1, r3
    3280:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3284:	bl	0 <coda_type_record_field_set_type>
    3288:	mrc	15, 0, r3, cr13, cr0, {3}
    328c:	ldr	r2, [pc, #-2984]	; 26ec <grib_init+0x20ac>
    3290:	ldr	r3, [r3, r2]
    3294:	add	r3, r3, #264	; 0x108
    3298:	ldr	r3, [r3]
    329c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    32a0:	mov	r0, r3
    32a4:	bl	0 <coda_type_record_add_field>
    32a8:	movw	r0, #0
    32ac:	movt	r0, #0
    32b0:	bl	0 <coda_type_record_field_new>
    32b4:	str	r0, [fp, #-28]	; 0xffffffe4
    32b8:	mrc	15, 0, r3, cr13, cr0, {3}
    32bc:	ldr	r2, [pc, #-3032]	; 26ec <grib_init+0x20ac>
    32c0:	ldr	r3, [r3, r2]
    32c4:	add	r3, r3, #188	; 0xbc
    32c8:	ldr	r3, [r3]
    32cc:	mov	r1, r3
    32d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    32d4:	bl	0 <coda_type_record_field_set_type>
    32d8:	mrc	15, 0, r3, cr13, cr0, {3}
    32dc:	ldr	r2, [pc, #-3064]	; 26ec <grib_init+0x20ac>
    32e0:	ldr	r3, [r3, r2]
    32e4:	add	r3, r3, #264	; 0x108
    32e8:	ldr	r3, [r3]
    32ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
    32f0:	mov	r0, r3
    32f4:	bl	0 <coda_type_record_add_field>
    32f8:	movw	r0, #0
    32fc:	movt	r0, #0
    3300:	bl	0 <coda_type_record_field_new>
    3304:	str	r0, [fp, #-28]	; 0xffffffe4
    3308:	mrc	15, 0, r3, cr13, cr0, {3}
    330c:	ldr	r2, [pc, #-3112]	; 26ec <grib_init+0x20ac>
    3310:	ldr	r3, [r3, r2]
    3314:	add	r3, r3, #192	; 0xc0
    3318:	ldr	r3, [r3]
    331c:	mov	r1, r3
    3320:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3324:	bl	0 <coda_type_record_field_set_type>
    3328:	mrc	15, 0, r3, cr13, cr0, {3}
    332c:	ldr	r2, [pc, #-3144]	; 26ec <grib_init+0x20ac>
    3330:	ldr	r3, [r3, r2]
    3334:	add	r3, r3, #264	; 0x108
    3338:	ldr	r3, [r3]
    333c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3340:	mov	r0, r3
    3344:	bl	0 <coda_type_record_add_field>
    3348:	movw	r0, #0
    334c:	movt	r0, #0
    3350:	bl	0 <coda_type_record_field_new>
    3354:	str	r0, [fp, #-28]	; 0xffffffe4
    3358:	mrc	15, 0, r3, cr13, cr0, {3}
    335c:	ldr	r2, [pc, #-3192]	; 26ec <grib_init+0x20ac>
    3360:	ldr	r3, [r3, r2]
    3364:	add	r3, r3, #196	; 0xc4
    3368:	ldr	r3, [r3]
    336c:	mov	r1, r3
    3370:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3374:	bl	0 <coda_type_record_field_set_type>
    3378:	mrc	15, 0, r3, cr13, cr0, {3}
    337c:	ldr	r2, [pc, #-3224]	; 26ec <grib_init+0x20ac>
    3380:	ldr	r3, [r3, r2]
    3384:	add	r3, r3, #264	; 0x108
    3388:	ldr	r3, [r3]
    338c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3390:	mov	r0, r3
    3394:	bl	0 <coda_type_record_add_field>
    3398:	movw	r0, #0
    339c:	movt	r0, #0
    33a0:	bl	0 <coda_type_record_field_new>
    33a4:	str	r0, [fp, #-28]	; 0xffffffe4
    33a8:	mrc	15, 0, r3, cr13, cr0, {3}
    33ac:	ldr	r2, [pc, #-3272]	; 26ec <grib_init+0x20ac>
    33b0:	ldr	r3, [r3, r2]
    33b4:	add	r3, r3, #200	; 0xc8
    33b8:	ldr	r3, [r3]
    33bc:	mov	r1, r3
    33c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    33c4:	bl	0 <coda_type_record_field_set_type>
    33c8:	mrc	15, 0, r3, cr13, cr0, {3}
    33cc:	ldr	r2, [pc, #-3304]	; 26ec <grib_init+0x20ac>
    33d0:	ldr	r3, [r3, r2]
    33d4:	add	r3, r3, #264	; 0x108
    33d8:	ldr	r3, [r3]
    33dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    33e0:	mov	r0, r3
    33e4:	bl	0 <coda_type_record_add_field>
    33e8:	movw	r0, #0
    33ec:	movt	r0, #0
    33f0:	bl	0 <coda_type_record_field_new>
    33f4:	str	r0, [fp, #-28]	; 0xffffffe4
    33f8:	mrc	15, 0, r3, cr13, cr0, {3}
    33fc:	ldr	r2, [pc, #-3352]	; 26ec <grib_init+0x20ac>
    3400:	ldr	r3, [r3, r2]
    3404:	add	r3, r3, #204	; 0xcc
    3408:	ldr	r3, [r3]
    340c:	mov	r1, r3
    3410:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3414:	bl	0 <coda_type_record_field_set_type>
    3418:	mrc	15, 0, r3, cr13, cr0, {3}
    341c:	ldr	r2, [pc, #-3384]	; 26ec <grib_init+0x20ac>
    3420:	ldr	r3, [r3, r2]
    3424:	add	r3, r3, #264	; 0x108
    3428:	ldr	r3, [r3]
    342c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3430:	mov	r0, r3
    3434:	bl	0 <coda_type_record_add_field>
    3438:	movw	r0, #0
    343c:	movt	r0, #0
    3440:	bl	0 <coda_type_record_field_new>
    3444:	str	r0, [fp, #-28]	; 0xffffffe4
    3448:	mrc	15, 0, r3, cr13, cr0, {3}
    344c:	ldr	r2, [pc, #-3432]	; 26ec <grib_init+0x20ac>
    3450:	ldr	r3, [r3, r2]
    3454:	add	r3, r3, #208	; 0xd0
    3458:	ldr	r3, [r3]
    345c:	mov	r1, r3
    3460:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3464:	bl	0 <coda_type_record_field_set_type>
    3468:	ldr	r0, [fp, #-28]	; 0xffffffe4
    346c:	bl	0 <coda_type_record_field_set_optional>
    3470:	mrc	15, 0, r3, cr13, cr0, {3}
    3474:	ldr	r2, [pc, #-3472]	; 26ec <grib_init+0x20ac>
    3478:	ldr	r3, [r3, r2]
    347c:	add	r3, r3, #264	; 0x108
    3480:	ldr	r3, [r3]
    3484:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3488:	mov	r0, r3
    348c:	bl	0 <coda_type_record_add_field>
    3490:	movw	r0, #0
    3494:	movt	r0, #0
    3498:	bl	0 <coda_type_record_field_new>
    349c:	str	r0, [fp, #-28]	; 0xffffffe4
    34a0:	mrc	15, 0, r3, cr13, cr0, {3}
    34a4:	ldr	r2, [pc, #-3520]	; 26ec <grib_init+0x20ac>
    34a8:	ldr	r3, [r3, r2]
    34ac:	add	r3, r3, #212	; 0xd4
    34b0:	ldr	r3, [r3]
    34b4:	mov	r1, r3
    34b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    34bc:	bl	0 <coda_type_record_field_set_type>
    34c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    34c4:	bl	0 <coda_type_record_field_set_optional>
    34c8:	mrc	15, 0, r3, cr13, cr0, {3}
    34cc:	ldr	r2, [pc, #-3560]	; 26ec <grib_init+0x20ac>
    34d0:	ldr	r3, [r3, r2]
    34d4:	add	r3, r3, #264	; 0x108
    34d8:	ldr	r3, [r3]
    34dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    34e0:	mov	r0, r3
    34e4:	bl	0 <coda_type_record_add_field>
    34e8:	movw	r0, #0
    34ec:	movt	r0, #0
    34f0:	bl	0 <coda_type_record_field_new>
    34f4:	str	r0, [fp, #-28]	; 0xffffffe4
    34f8:	mrc	15, 0, r3, cr13, cr0, {3}
    34fc:	ldr	r2, [pc, #-3608]	; 26ec <grib_init+0x20ac>
    3500:	ldr	r3, [r3, r2]
    3504:	add	r3, r3, #216	; 0xd8
    3508:	ldr	r3, [r3]
    350c:	mov	r1, r3
    3510:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3514:	bl	0 <coda_type_record_field_set_type>
    3518:	mrc	15, 0, r3, cr13, cr0, {3}
    351c:	ldr	r2, [pc, #-3640]	; 26ec <grib_init+0x20ac>
    3520:	ldr	r3, [r3, r2]
    3524:	add	r3, r3, #264	; 0x108
    3528:	ldr	r3, [r3]
    352c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3530:	mov	r0, r3
    3534:	bl	0 <coda_type_record_add_field>
    3538:	movw	r0, #0
    353c:	movt	r0, #0
    3540:	bl	0 <coda_type_record_field_new>
    3544:	str	r0, [fp, #-28]	; 0xffffffe4
    3548:	mrc	15, 0, r3, cr13, cr0, {3}
    354c:	ldr	r2, [pc, #-3688]	; 26ec <grib_init+0x20ac>
    3550:	ldr	r3, [r3, r2]
    3554:	add	r3, r3, #224	; 0xe0
    3558:	ldr	r3, [r3]
    355c:	mov	r1, r3
    3560:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3564:	bl	0 <coda_type_record_field_set_type>
    3568:	ldr	r0, [fp, #-28]	; 0xffffffe4
    356c:	bl	0 <coda_type_record_field_set_optional>
    3570:	mrc	15, 0, r3, cr13, cr0, {3}
    3574:	ldr	r2, [pc, #-3728]	; 26ec <grib_init+0x20ac>
    3578:	ldr	r3, [r3, r2]
    357c:	add	r3, r3, #264	; 0x108
    3580:	ldr	r3, [r3]
    3584:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3588:	mov	r0, r3
    358c:	bl	0 <coda_type_record_add_field>
    3590:	movw	r0, #0
    3594:	movt	r0, #0
    3598:	bl	0 <coda_type_record_field_new>
    359c:	str	r0, [fp, #-28]	; 0xffffffe4
    35a0:	mrc	15, 0, r3, cr13, cr0, {3}
    35a4:	ldr	r2, [pc, #-3776]	; 26ec <grib_init+0x20ac>
    35a8:	ldr	r3, [r3, r2]
    35ac:	add	r3, r3, #232	; 0xe8
    35b0:	ldr	r3, [r3]
    35b4:	mov	r1, r3
    35b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    35bc:	bl	0 <coda_type_record_field_set_type>
    35c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    35c4:	bl	0 <coda_type_record_field_set_optional>
    35c8:	mrc	15, 0, r3, cr13, cr0, {3}
    35cc:	ldr	r2, [pc, #-3816]	; 26ec <grib_init+0x20ac>
    35d0:	ldr	r3, [r3, r2]
    35d4:	add	r3, r3, #264	; 0x108
    35d8:	ldr	r3, [r3]
    35dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
    35e0:	mov	r0, r3
    35e4:	bl	0 <coda_type_record_add_field>
    35e8:	mrc	15, 0, r3, cr13, cr0, {3}
    35ec:	ldr	r2, [pc, #-3848]	; 26ec <grib_init+0x20ac>
    35f0:	ldr	r3, [r3, r2]
    35f4:	add	r4, r3, #268	; 0x10c
    35f8:	mov	r0, #7
    35fc:	bl	0 <coda_type_record_new>
    3600:	mov	r3, r0
    3604:	str	r3, [r4]
    3608:	movw	r0, #0
    360c:	movt	r0, #0
    3610:	bl	0 <coda_type_record_field_new>
    3614:	str	r0, [fp, #-28]	; 0xffffffe4
    3618:	mrc	15, 0, r3, cr13, cr0, {3}
    361c:	ldr	r2, [pc, #-3896]	; 26ec <grib_init+0x20ac>
    3620:	ldr	r3, [r3, r2]
    3624:	add	r3, r3, #248	; 0xf8
    3628:	ldr	r3, [r3]
    362c:	mov	r1, r3
    3630:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3634:	bl	0 <coda_type_record_field_set_type>
    3638:	ldr	r0, [fp, #-28]	; 0xffffffe4
    363c:	bl	0 <coda_type_record_field_set_hidden>
    3640:	mrc	15, 0, r3, cr13, cr0, {3}
    3644:	ldr	r2, [pc, #-3936]	; 26ec <grib_init+0x20ac>
    3648:	ldr	r3, [r3, r2]
    364c:	add	r3, r3, #268	; 0x10c
    3650:	ldr	r3, [r3]
    3654:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3658:	mov	r0, r3
    365c:	bl	0 <coda_type_record_add_field>
    3660:	movw	r0, #0
    3664:	movt	r0, #0
    3668:	bl	0 <coda_type_record_field_new>
    366c:	str	r0, [fp, #-28]	; 0xffffffe4
    3670:	mrc	15, 0, r3, cr13, cr0, {3}
    3674:	ldr	r2, [pc, #-3984]	; 26ec <grib_init+0x20ac>
    3678:	ldr	r3, [r3, r2]
    367c:	add	r3, r3, #252	; 0xfc
    3680:	ldr	r3, [r3]
    3684:	mov	r1, r3
    3688:	ldr	r0, [fp, #-28]	; 0xffffffe4
    368c:	bl	0 <coda_type_record_field_set_type>
    3690:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3694:	bl	0 <coda_type_record_field_set_hidden>
    3698:	mrc	15, 0, r3, cr13, cr0, {3}
    369c:	ldr	r2, [pc, #-4024]	; 26ec <grib_init+0x20ac>
    36a0:	ldr	r3, [r3, r2]
    36a4:	add	r3, r3, #268	; 0x10c
    36a8:	ldr	r3, [r3]
    36ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
    36b0:	mov	r0, r3
    36b4:	bl	0 <coda_type_record_add_field>
    36b8:	movw	r0, #0
    36bc:	movt	r0, #0
    36c0:	bl	0 <coda_type_record_field_new>
    36c4:	str	r0, [fp, #-28]	; 0xffffffe4
    36c8:	mrc	15, 0, r3, cr13, cr0, {3}
    36cc:	ldr	r2, [pc, #-4072]	; 26ec <grib_init+0x20ac>
    36d0:	ldr	r3, [r3, r2]
    36d4:	add	r3, r3, #256	; 0x100
    36d8:	ldr	r3, [r3]
    36dc:	mov	r1, r3
    36e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    36e4:	bl	0 <coda_type_record_field_set_type>
    36e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    36ec:	bl	0 <coda_type_record_field_set_hidden>
    36f0:	mrc	15, 0, r3, cr13, cr0, {3}
    36f4:	ldr	r2, [pc, #4084]	; 46f0 <grib_init+0x40b0>
    36f8:	ldr	r3, [r3, r2]
    36fc:	add	r3, r3, #268	; 0x10c
    3700:	ldr	r3, [r3]
    3704:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3708:	mov	r0, r3
    370c:	bl	0 <coda_type_record_add_field>
    3710:	movw	r0, #0
    3714:	movt	r0, #0
    3718:	bl	0 <coda_type_record_field_new>
    371c:	str	r0, [fp, #-28]	; 0xffffffe4
    3720:	mrc	15, 0, r3, cr13, cr0, {3}
    3724:	ldr	r2, [pc, #4036]	; 46f0 <grib_init+0x40b0>
    3728:	ldr	r3, [r3, r2]
    372c:	add	r3, r3, #260	; 0x104
    3730:	ldr	r3, [r3]
    3734:	mov	r1, r3
    3738:	ldr	r0, [fp, #-28]	; 0xffffffe4
    373c:	bl	0 <coda_type_record_field_set_type>
    3740:	mrc	15, 0, r3, cr13, cr0, {3}
    3744:	ldr	r2, [pc, #4004]	; 46f0 <grib_init+0x40b0>
    3748:	ldr	r3, [r3, r2]
    374c:	add	r3, r3, #268	; 0x10c
    3750:	ldr	r3, [r3]
    3754:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3758:	mov	r0, r3
    375c:	bl	0 <coda_type_record_add_field>
    3760:	mrc	15, 0, r3, cr13, cr0, {3}
    3764:	ldr	r2, [pc, #3972]	; 46f0 <grib_init+0x40b0>
    3768:	ldr	r3, [r3, r2]
    376c:	add	r4, r3, #272	; 0x110
    3770:	mov	r0, #7
    3774:	bl	0 <coda_type_record_new>
    3778:	mov	r3, r0
    377c:	str	r3, [r4]
    3780:	movw	r0, #0
    3784:	movt	r0, #0
    3788:	bl	0 <coda_type_record_field_new>
    378c:	str	r0, [fp, #-28]	; 0xffffffe4
    3790:	mrc	15, 0, r3, cr13, cr0, {3}
    3794:	ldr	r2, [pc, #3924]	; 46f0 <grib_init+0x40b0>
    3798:	ldr	r3, [r3, r2]
    379c:	add	r3, r3, #12
    37a0:	ldr	r3, [r3]
    37a4:	mov	r1, r3
    37a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    37ac:	bl	0 <coda_type_record_field_set_type>
    37b0:	mrc	15, 0, r3, cr13, cr0, {3}
    37b4:	ldr	r2, [pc, #3892]	; 46f0 <grib_init+0x40b0>
    37b8:	ldr	r3, [r3, r2]
    37bc:	add	r3, r3, #272	; 0x110
    37c0:	ldr	r3, [r3]
    37c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    37c8:	mov	r0, r3
    37cc:	bl	0 <coda_type_record_add_field>
    37d0:	movw	r0, #0
    37d4:	movt	r0, #0
    37d8:	bl	0 <coda_type_record_field_new>
    37dc:	str	r0, [fp, #-28]	; 0xffffffe4
    37e0:	mrc	15, 0, r3, cr13, cr0, {3}
    37e4:	ldr	r2, [pc, #3844]	; 46f0 <grib_init+0x40b0>
    37e8:	ldr	r3, [r3, r2]
    37ec:	add	r3, r3, #8
    37f0:	ldr	r3, [r3]
    37f4:	mov	r1, r3
    37f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    37fc:	bl	0 <coda_type_record_field_set_type>
    3800:	mrc	15, 0, r3, cr13, cr0, {3}
    3804:	ldr	r2, [pc, #3812]	; 46f0 <grib_init+0x40b0>
    3808:	ldr	r3, [r3, r2]
    380c:	add	r3, r3, #272	; 0x110
    3810:	ldr	r3, [r3]
    3814:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3818:	mov	r0, r3
    381c:	bl	0 <coda_type_record_add_field>
    3820:	movw	r0, #0
    3824:	movt	r0, #0
    3828:	bl	0 <coda_type_record_field_new>
    382c:	str	r0, [fp, #-28]	; 0xffffffe4
    3830:	mrc	15, 0, r3, cr13, cr0, {3}
    3834:	ldr	r2, [pc, #3764]	; 46f0 <grib_init+0x40b0>
    3838:	ldr	r3, [r3, r2]
    383c:	add	r3, r3, #16
    3840:	ldr	r3, [r3]
    3844:	mov	r1, r3
    3848:	ldr	r0, [fp, #-28]	; 0xffffffe4
    384c:	bl	0 <coda_type_record_field_set_type>
    3850:	mrc	15, 0, r3, cr13, cr0, {3}
    3854:	ldr	r2, [pc, #3732]	; 46f0 <grib_init+0x40b0>
    3858:	ldr	r3, [r3, r2]
    385c:	add	r3, r3, #272	; 0x110
    3860:	ldr	r3, [r3]
    3864:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3868:	mov	r0, r3
    386c:	bl	0 <coda_type_record_add_field>
    3870:	movw	r0, #0
    3874:	movt	r0, #0
    3878:	bl	0 <coda_type_record_field_new>
    387c:	str	r0, [fp, #-28]	; 0xffffffe4
    3880:	mrc	15, 0, r3, cr13, cr0, {3}
    3884:	ldr	r2, [pc, #3684]	; 46f0 <grib_init+0x40b0>
    3888:	ldr	r3, [r3, r2]
    388c:	add	r3, r3, #20
    3890:	ldr	r3, [r3]
    3894:	mov	r1, r3
    3898:	ldr	r0, [fp, #-28]	; 0xffffffe4
    389c:	bl	0 <coda_type_record_field_set_type>
    38a0:	mrc	15, 0, r3, cr13, cr0, {3}
    38a4:	ldr	r2, [pc, #3652]	; 46f0 <grib_init+0x40b0>
    38a8:	ldr	r3, [r3, r2]
    38ac:	add	r3, r3, #272	; 0x110
    38b0:	ldr	r3, [r3]
    38b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    38b8:	mov	r0, r3
    38bc:	bl	0 <coda_type_record_add_field>
    38c0:	movw	r0, #0
    38c4:	movt	r0, #0
    38c8:	bl	0 <coda_type_record_field_new>
    38cc:	str	r0, [fp, #-28]	; 0xffffffe4
    38d0:	mrc	15, 0, r3, cr13, cr0, {3}
    38d4:	ldr	r2, [pc, #3604]	; 46f0 <grib_init+0x40b0>
    38d8:	ldr	r3, [r3, r2]
    38dc:	add	r3, r3, #24
    38e0:	ldr	r3, [r3]
    38e4:	mov	r1, r3
    38e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    38ec:	bl	0 <coda_type_record_field_set_type>
    38f0:	mrc	15, 0, r3, cr13, cr0, {3}
    38f4:	ldr	r2, [pc, #3572]	; 46f0 <grib_init+0x40b0>
    38f8:	ldr	r3, [r3, r2]
    38fc:	add	r3, r3, #272	; 0x110
    3900:	ldr	r3, [r3]
    3904:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3908:	mov	r0, r3
    390c:	bl	0 <coda_type_record_add_field>
    3910:	movw	r0, #0
    3914:	movt	r0, #0
    3918:	bl	0 <coda_type_record_field_new>
    391c:	str	r0, [fp, #-28]	; 0xffffffe4
    3920:	mrc	15, 0, r3, cr13, cr0, {3}
    3924:	ldr	r2, [pc, #3524]	; 46f0 <grib_init+0x40b0>
    3928:	ldr	r3, [r3, r2]
    392c:	add	r3, r3, #28
    3930:	ldr	r3, [r3]
    3934:	mov	r1, r3
    3938:	ldr	r0, [fp, #-28]	; 0xffffffe4
    393c:	bl	0 <coda_type_record_field_set_type>
    3940:	mrc	15, 0, r3, cr13, cr0, {3}
    3944:	ldr	r2, [pc, #3492]	; 46f0 <grib_init+0x40b0>
    3948:	ldr	r3, [r3, r2]
    394c:	add	r3, r3, #272	; 0x110
    3950:	ldr	r3, [r3]
    3954:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3958:	mov	r0, r3
    395c:	bl	0 <coda_type_record_add_field>
    3960:	movw	r0, #0
    3964:	movt	r0, #0
    3968:	bl	0 <coda_type_record_field_new>
    396c:	str	r0, [fp, #-28]	; 0xffffffe4
    3970:	mrc	15, 0, r3, cr13, cr0, {3}
    3974:	ldr	r2, [pc, #3444]	; 46f0 <grib_init+0x40b0>
    3978:	ldr	r3, [r3, r2]
    397c:	add	r3, r3, #32
    3980:	ldr	r3, [r3]
    3984:	mov	r1, r3
    3988:	ldr	r0, [fp, #-28]	; 0xffffffe4
    398c:	bl	0 <coda_type_record_field_set_type>
    3990:	mrc	15, 0, r3, cr13, cr0, {3}
    3994:	ldr	r2, [pc, #3412]	; 46f0 <grib_init+0x40b0>
    3998:	ldr	r3, [r3, r2]
    399c:	add	r3, r3, #272	; 0x110
    39a0:	ldr	r3, [r3]
    39a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    39a8:	mov	r0, r3
    39ac:	bl	0 <coda_type_record_add_field>
    39b0:	movw	r0, #0
    39b4:	movt	r0, #0
    39b8:	bl	0 <coda_type_record_field_new>
    39bc:	str	r0, [fp, #-28]	; 0xffffffe4
    39c0:	mrc	15, 0, r3, cr13, cr0, {3}
    39c4:	ldr	r2, [pc, #3364]	; 46f0 <grib_init+0x40b0>
    39c8:	ldr	r3, [r3, r2]
    39cc:	add	r3, r3, #36	; 0x24
    39d0:	ldr	r3, [r3]
    39d4:	mov	r1, r3
    39d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    39dc:	bl	0 <coda_type_record_field_set_type>
    39e0:	mrc	15, 0, r3, cr13, cr0, {3}
    39e4:	ldr	r2, [pc, #3332]	; 46f0 <grib_init+0x40b0>
    39e8:	ldr	r3, [r3, r2]
    39ec:	add	r3, r3, #272	; 0x110
    39f0:	ldr	r3, [r3]
    39f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    39f8:	mov	r0, r3
    39fc:	bl	0 <coda_type_record_add_field>
    3a00:	movw	r0, #0
    3a04:	movt	r0, #0
    3a08:	bl	0 <coda_type_record_field_new>
    3a0c:	str	r0, [fp, #-28]	; 0xffffffe4
    3a10:	mrc	15, 0, r3, cr13, cr0, {3}
    3a14:	ldr	r2, [pc, #3284]	; 46f0 <grib_init+0x40b0>
    3a18:	ldr	r3, [r3, r2]
    3a1c:	add	r3, r3, #40	; 0x28
    3a20:	ldr	r3, [r3]
    3a24:	mov	r1, r3
    3a28:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3a2c:	bl	0 <coda_type_record_field_set_type>
    3a30:	mrc	15, 0, r3, cr13, cr0, {3}
    3a34:	ldr	r2, [pc, #3252]	; 46f0 <grib_init+0x40b0>
    3a38:	ldr	r3, [r3, r2]
    3a3c:	add	r3, r3, #272	; 0x110
    3a40:	ldr	r3, [r3]
    3a44:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3a48:	mov	r0, r3
    3a4c:	bl	0 <coda_type_record_add_field>
    3a50:	movw	r0, #0
    3a54:	movt	r0, #0
    3a58:	bl	0 <coda_type_record_field_new>
    3a5c:	str	r0, [fp, #-28]	; 0xffffffe4
    3a60:	mrc	15, 0, r3, cr13, cr0, {3}
    3a64:	ldr	r2, [pc, #3204]	; 46f0 <grib_init+0x40b0>
    3a68:	ldr	r3, [r3, r2]
    3a6c:	add	r3, r3, #48	; 0x30
    3a70:	ldr	r3, [r3]
    3a74:	mov	r1, r3
    3a78:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3a7c:	bl	0 <coda_type_record_field_set_type>
    3a80:	mrc	15, 0, r3, cr13, cr0, {3}
    3a84:	ldr	r2, [pc, #3172]	; 46f0 <grib_init+0x40b0>
    3a88:	ldr	r3, [r3, r2]
    3a8c:	add	r3, r3, #272	; 0x110
    3a90:	ldr	r3, [r3]
    3a94:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3a98:	mov	r0, r3
    3a9c:	bl	0 <coda_type_record_add_field>
    3aa0:	movw	r0, #0
    3aa4:	movt	r0, #0
    3aa8:	bl	0 <coda_type_record_field_new>
    3aac:	str	r0, [fp, #-28]	; 0xffffffe4
    3ab0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ab4:	ldr	r2, [pc, #3124]	; 46f0 <grib_init+0x40b0>
    3ab8:	ldr	r3, [r3, r2]
    3abc:	add	r3, r3, #52	; 0x34
    3ac0:	ldr	r3, [r3]
    3ac4:	mov	r1, r3
    3ac8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3acc:	bl	0 <coda_type_record_field_set_type>
    3ad0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ad4:	ldr	r2, [pc, #3092]	; 46f0 <grib_init+0x40b0>
    3ad8:	ldr	r3, [r3, r2]
    3adc:	add	r3, r3, #272	; 0x110
    3ae0:	ldr	r3, [r3]
    3ae4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3ae8:	mov	r0, r3
    3aec:	bl	0 <coda_type_record_add_field>
    3af0:	movw	r0, #0
    3af4:	movt	r0, #0
    3af8:	bl	0 <coda_type_record_field_new>
    3afc:	str	r0, [fp, #-28]	; 0xffffffe4
    3b00:	mrc	15, 0, r3, cr13, cr0, {3}
    3b04:	ldr	r2, [pc, #3044]	; 46f0 <grib_init+0x40b0>
    3b08:	ldr	r3, [r3, r2]
    3b0c:	add	r3, r3, #56	; 0x38
    3b10:	ldr	r3, [r3]
    3b14:	mov	r1, r3
    3b18:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3b1c:	bl	0 <coda_type_record_field_set_type>
    3b20:	mrc	15, 0, r3, cr13, cr0, {3}
    3b24:	ldr	r2, [pc, #3012]	; 46f0 <grib_init+0x40b0>
    3b28:	ldr	r3, [r3, r2]
    3b2c:	add	r3, r3, #272	; 0x110
    3b30:	ldr	r3, [r3]
    3b34:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3b38:	mov	r0, r3
    3b3c:	bl	0 <coda_type_record_add_field>
    3b40:	movw	r0, #0
    3b44:	movt	r0, #0
    3b48:	bl	0 <coda_type_record_field_new>
    3b4c:	str	r0, [fp, #-28]	; 0xffffffe4
    3b50:	mrc	15, 0, r3, cr13, cr0, {3}
    3b54:	ldr	r2, [pc, #2964]	; 46f0 <grib_init+0x40b0>
    3b58:	ldr	r3, [r3, r2]
    3b5c:	add	r3, r3, #60	; 0x3c
    3b60:	ldr	r3, [r3]
    3b64:	mov	r1, r3
    3b68:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3b6c:	bl	0 <coda_type_record_field_set_type>
    3b70:	mrc	15, 0, r3, cr13, cr0, {3}
    3b74:	ldr	r2, [pc, #2932]	; 46f0 <grib_init+0x40b0>
    3b78:	ldr	r3, [r3, r2]
    3b7c:	add	r3, r3, #272	; 0x110
    3b80:	ldr	r3, [r3]
    3b84:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3b88:	mov	r0, r3
    3b8c:	bl	0 <coda_type_record_add_field>
    3b90:	movw	r0, #0
    3b94:	movt	r0, #0
    3b98:	bl	0 <coda_type_record_field_new>
    3b9c:	str	r0, [fp, #-28]	; 0xffffffe4
    3ba0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ba4:	ldr	r2, [pc, #2884]	; 46f0 <grib_init+0x40b0>
    3ba8:	ldr	r3, [r3, r2]
    3bac:	add	r3, r3, #68	; 0x44
    3bb0:	ldr	r3, [r3]
    3bb4:	mov	r1, r3
    3bb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3bbc:	bl	0 <coda_type_record_field_set_type>
    3bc0:	mrc	15, 0, r3, cr13, cr0, {3}
    3bc4:	ldr	r2, [pc, #2852]	; 46f0 <grib_init+0x40b0>
    3bc8:	ldr	r3, [r3, r2]
    3bcc:	add	r3, r3, #272	; 0x110
    3bd0:	ldr	r3, [r3]
    3bd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3bd8:	mov	r0, r3
    3bdc:	bl	0 <coda_type_record_add_field>
    3be0:	movw	r0, #0
    3be4:	movt	r0, #0
    3be8:	bl	0 <coda_type_record_field_new>
    3bec:	str	r0, [fp, #-28]	; 0xffffffe4
    3bf0:	mrc	15, 0, r3, cr13, cr0, {3}
    3bf4:	ldr	r2, [pc, #2804]	; 46f0 <grib_init+0x40b0>
    3bf8:	ldr	r3, [r3, r2]
    3bfc:	add	r3, r3, #72	; 0x48
    3c00:	ldr	r3, [r3]
    3c04:	mov	r1, r3
    3c08:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3c0c:	bl	0 <coda_type_record_field_set_type>
    3c10:	mrc	15, 0, r3, cr13, cr0, {3}
    3c14:	ldr	r2, [pc, #2772]	; 46f0 <grib_init+0x40b0>
    3c18:	ldr	r3, [r3, r2]
    3c1c:	add	r3, r3, #272	; 0x110
    3c20:	ldr	r3, [r3]
    3c24:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3c28:	mov	r0, r3
    3c2c:	bl	0 <coda_type_record_add_field>
    3c30:	movw	r0, #0
    3c34:	movt	r0, #0
    3c38:	bl	0 <coda_type_record_field_new>
    3c3c:	str	r0, [fp, #-28]	; 0xffffffe4
    3c40:	mrc	15, 0, r3, cr13, cr0, {3}
    3c44:	ldr	r2, [pc, #2724]	; 46f0 <grib_init+0x40b0>
    3c48:	ldr	r3, [r3, r2]
    3c4c:	add	r3, r3, #76	; 0x4c
    3c50:	ldr	r3, [r3]
    3c54:	mov	r1, r3
    3c58:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3c5c:	bl	0 <coda_type_record_field_set_type>
    3c60:	mrc	15, 0, r3, cr13, cr0, {3}
    3c64:	ldr	r2, [pc, #2692]	; 46f0 <grib_init+0x40b0>
    3c68:	ldr	r3, [r3, r2]
    3c6c:	add	r3, r3, #272	; 0x110
    3c70:	ldr	r3, [r3]
    3c74:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3c78:	mov	r0, r3
    3c7c:	bl	0 <coda_type_record_add_field>
    3c80:	movw	r0, #0
    3c84:	movt	r0, #0
    3c88:	bl	0 <coda_type_record_field_new>
    3c8c:	str	r0, [fp, #-28]	; 0xffffffe4
    3c90:	mrc	15, 0, r3, cr13, cr0, {3}
    3c94:	ldr	r2, [pc, #2644]	; 46f0 <grib_init+0x40b0>
    3c98:	ldr	r3, [r3, r2]
    3c9c:	add	r3, r3, #80	; 0x50
    3ca0:	ldr	r3, [r3]
    3ca4:	mov	r1, r3
    3ca8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3cac:	bl	0 <coda_type_record_field_set_type>
    3cb0:	mrc	15, 0, r3, cr13, cr0, {3}
    3cb4:	ldr	r2, [pc, #2612]	; 46f0 <grib_init+0x40b0>
    3cb8:	ldr	r3, [r3, r2]
    3cbc:	add	r3, r3, #272	; 0x110
    3cc0:	ldr	r3, [r3]
    3cc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3cc8:	mov	r0, r3
    3ccc:	bl	0 <coda_type_record_add_field>
    3cd0:	movw	r0, #0
    3cd4:	movt	r0, #0
    3cd8:	bl	0 <coda_type_record_field_new>
    3cdc:	str	r0, [fp, #-28]	; 0xffffffe4
    3ce0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ce4:	ldr	r2, [pc, #2564]	; 46f0 <grib_init+0x40b0>
    3ce8:	ldr	r3, [r3, r2]
    3cec:	add	r3, r3, #84	; 0x54
    3cf0:	ldr	r3, [r3]
    3cf4:	mov	r1, r3
    3cf8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3cfc:	bl	0 <coda_type_record_field_set_type>
    3d00:	mrc	15, 0, r3, cr13, cr0, {3}
    3d04:	ldr	r2, [pc, #2532]	; 46f0 <grib_init+0x40b0>
    3d08:	ldr	r3, [r3, r2]
    3d0c:	add	r3, r3, #272	; 0x110
    3d10:	ldr	r3, [r3]
    3d14:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3d18:	mov	r0, r3
    3d1c:	bl	0 <coda_type_record_add_field>
    3d20:	movw	r0, #0
    3d24:	movt	r0, #0
    3d28:	bl	0 <coda_type_record_field_new>
    3d2c:	str	r0, [fp, #-28]	; 0xffffffe4
    3d30:	mrc	15, 0, r3, cr13, cr0, {3}
    3d34:	ldr	r2, [pc, #2484]	; 46f0 <grib_init+0x40b0>
    3d38:	ldr	r3, [r3, r2]
    3d3c:	add	r3, r3, #88	; 0x58
    3d40:	ldr	r3, [r3]
    3d44:	mov	r1, r3
    3d48:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3d4c:	bl	0 <coda_type_record_field_set_type>
    3d50:	mrc	15, 0, r3, cr13, cr0, {3}
    3d54:	ldr	r2, [pc, #2452]	; 46f0 <grib_init+0x40b0>
    3d58:	ldr	r3, [r3, r2]
    3d5c:	add	r3, r3, #272	; 0x110
    3d60:	ldr	r3, [r3]
    3d64:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3d68:	mov	r0, r3
    3d6c:	bl	0 <coda_type_record_add_field>
    3d70:	movw	r0, #0
    3d74:	movt	r0, #0
    3d78:	bl	0 <coda_type_record_field_new>
    3d7c:	str	r0, [fp, #-28]	; 0xffffffe4
    3d80:	mrc	15, 0, r3, cr13, cr0, {3}
    3d84:	ldr	r2, [pc, #2404]	; 46f0 <grib_init+0x40b0>
    3d88:	ldr	r3, [r3, r2]
    3d8c:	add	r3, r3, #92	; 0x5c
    3d90:	ldr	r3, [r3]
    3d94:	mov	r1, r3
    3d98:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3d9c:	bl	0 <coda_type_record_field_set_type>
    3da0:	mrc	15, 0, r3, cr13, cr0, {3}
    3da4:	ldr	r2, [pc, #2372]	; 46f0 <grib_init+0x40b0>
    3da8:	ldr	r3, [r3, r2]
    3dac:	add	r3, r3, #272	; 0x110
    3db0:	ldr	r3, [r3]
    3db4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3db8:	mov	r0, r3
    3dbc:	bl	0 <coda_type_record_add_field>
    3dc0:	movw	r0, #0
    3dc4:	movt	r0, #0
    3dc8:	bl	0 <coda_type_record_field_new>
    3dcc:	str	r0, [fp, #-28]	; 0xffffffe4
    3dd0:	mrc	15, 0, r3, cr13, cr0, {3}
    3dd4:	ldr	r2, [pc, #2324]	; 46f0 <grib_init+0x40b0>
    3dd8:	ldr	r3, [r3, r2]
    3ddc:	add	r3, r3, #96	; 0x60
    3de0:	ldr	r3, [r3]
    3de4:	mov	r1, r3
    3de8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3dec:	bl	0 <coda_type_record_field_set_type>
    3df0:	mrc	15, 0, r3, cr13, cr0, {3}
    3df4:	ldr	r2, [pc, #2292]	; 46f0 <grib_init+0x40b0>
    3df8:	ldr	r3, [r3, r2]
    3dfc:	add	r3, r3, #272	; 0x110
    3e00:	ldr	r3, [r3]
    3e04:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3e08:	mov	r0, r3
    3e0c:	bl	0 <coda_type_record_add_field>
    3e10:	movw	r0, #0
    3e14:	movt	r0, #0
    3e18:	bl	0 <coda_type_record_field_new>
    3e1c:	str	r0, [fp, #-28]	; 0xffffffe4
    3e20:	mrc	15, 0, r3, cr13, cr0, {3}
    3e24:	ldr	r2, [pc, #2244]	; 46f0 <grib_init+0x40b0>
    3e28:	ldr	r3, [r3, r2]
    3e2c:	add	r3, r3, #100	; 0x64
    3e30:	ldr	r3, [r3]
    3e34:	mov	r1, r3
    3e38:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3e3c:	bl	0 <coda_type_record_field_set_type>
    3e40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3e44:	bl	0 <coda_type_record_field_set_hidden>
    3e48:	mrc	15, 0, r3, cr13, cr0, {3}
    3e4c:	ldr	r2, [pc, #2204]	; 46f0 <grib_init+0x40b0>
    3e50:	ldr	r3, [r3, r2]
    3e54:	add	r3, r3, #272	; 0x110
    3e58:	ldr	r3, [r3]
    3e5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3e60:	mov	r0, r3
    3e64:	bl	0 <coda_type_record_add_field>
    3e68:	movw	r0, #0
    3e6c:	movt	r0, #0
    3e70:	bl	0 <coda_type_record_field_new>
    3e74:	str	r0, [fp, #-28]	; 0xffffffe4
    3e78:	mrc	15, 0, r3, cr13, cr0, {3}
    3e7c:	ldr	r2, [pc, #2156]	; 46f0 <grib_init+0x40b0>
    3e80:	ldr	r3, [r3, r2]
    3e84:	add	r3, r3, #128	; 0x80
    3e88:	ldr	r3, [r3]
    3e8c:	mov	r1, r3
    3e90:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3e94:	bl	0 <coda_type_record_field_set_type>
    3e98:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3e9c:	bl	0 <coda_type_record_field_set_optional>
    3ea0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ea4:	ldr	r2, [pc, #2116]	; 46f0 <grib_init+0x40b0>
    3ea8:	ldr	r3, [r3, r2]
    3eac:	add	r3, r3, #272	; 0x110
    3eb0:	ldr	r3, [r3]
    3eb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3eb8:	mov	r0, r3
    3ebc:	bl	0 <coda_type_record_add_field>
    3ec0:	movw	r0, #0
    3ec4:	movt	r0, #0
    3ec8:	bl	0 <coda_type_record_field_new>
    3ecc:	str	r0, [fp, #-28]	; 0xffffffe4
    3ed0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ed4:	ldr	r2, [pc, #2068]	; 46f0 <grib_init+0x40b0>
    3ed8:	ldr	r3, [r3, r2]
    3edc:	add	r3, r3, #264	; 0x108
    3ee0:	ldr	r3, [r3]
    3ee4:	mov	r1, r3
    3ee8:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3eec:	bl	0 <coda_type_record_field_set_type>
    3ef0:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3ef4:	bl	0 <coda_type_record_field_set_optional>
    3ef8:	mrc	15, 0, r3, cr13, cr0, {3}
    3efc:	ldr	r2, [pc, #2028]	; 46f0 <grib_init+0x40b0>
    3f00:	ldr	r3, [r3, r2]
    3f04:	add	r3, r3, #272	; 0x110
    3f08:	ldr	r3, [r3]
    3f0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3f10:	mov	r0, r3
    3f14:	bl	0 <coda_type_record_add_field>
    3f18:	movw	r0, #0
    3f1c:	movt	r0, #0
    3f20:	bl	0 <coda_type_record_field_new>
    3f24:	str	r0, [fp, #-28]	; 0xffffffe4
    3f28:	mrc	15, 0, r3, cr13, cr0, {3}
    3f2c:	ldr	r2, [pc, #1980]	; 46f0 <grib_init+0x40b0>
    3f30:	ldr	r3, [r3, r2]
    3f34:	add	r3, r3, #268	; 0x10c
    3f38:	ldr	r3, [r3]
    3f3c:	mov	r1, r3
    3f40:	ldr	r0, [fp, #-28]	; 0xffffffe4
    3f44:	bl	0 <coda_type_record_field_set_type>
    3f48:	mrc	15, 0, r3, cr13, cr0, {3}
    3f4c:	ldr	r2, [pc, #1948]	; 46f0 <grib_init+0x40b0>
    3f50:	ldr	r3, [r3, r2]
    3f54:	add	r3, r3, #272	; 0x110
    3f58:	ldr	r3, [r3]
    3f5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
    3f60:	mov	r0, r3
    3f64:	bl	0 <coda_type_record_add_field>
    3f68:	mrc	15, 0, r3, cr13, cr0, {3}
    3f6c:	ldr	r2, [pc, #1916]	; 46f0 <grib_init+0x40b0>
    3f70:	ldr	r3, [r3, r2]
    3f74:	add	r4, r3, #276	; 0x114
    3f78:	mov	r1, #2
    3f7c:	mov	r0, #7
    3f80:	bl	0 <coda_type_number_new>
    3f84:	mov	r3, r0
    3f88:	str	r3, [r4]
    3f8c:	mrc	15, 0, r3, cr13, cr0, {3}
    3f90:	ldr	r2, [pc, #1880]	; 46f0 <grib_init+0x40b0>
    3f94:	ldr	r3, [r3, r2]
    3f98:	add	r3, r3, #276	; 0x114
    3f9c:	ldr	r3, [r3]
    3fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
    3fa4:	mov	r0, r3
    3fa8:	bl	0 <coda_type_number_set_endianness>
    3fac:	mrc	15, 0, r3, cr13, cr0, {3}
    3fb0:	ldr	r2, [pc, #1848]	; 46f0 <grib_init+0x40b0>
    3fb4:	ldr	r3, [r3, r2]
    3fb8:	add	r3, r3, #276	; 0x114
    3fbc:	ldr	r3, [r3]
    3fc0:	mov	r1, #4
    3fc4:	mov	r0, r3
    3fc8:	bl	0 <coda_type_set_read_type>
    3fcc:	mrc	15, 0, r3, cr13, cr0, {3}
    3fd0:	ldr	r2, [pc, #1816]	; 46f0 <grib_init+0x40b0>
    3fd4:	ldr	r3, [r3, r2]
    3fd8:	add	r3, r3, #276	; 0x114
    3fdc:	ldr	r1, [r3]
    3fe0:	mov	r2, #32
    3fe4:	mov	r3, #0
    3fe8:	mov	r0, r1
    3fec:	bl	0 <coda_type_set_bit_size>
    3ff0:	mrc	15, 0, r3, cr13, cr0, {3}
    3ff4:	ldr	r2, [pc, #1780]	; 46f0 <grib_init+0x40b0>
    3ff8:	ldr	r3, [r3, r2]
    3ffc:	add	r4, r3, #280	; 0x118
    4000:	mov	r1, #2
    4004:	mov	r0, #7
    4008:	bl	0 <coda_type_number_new>
    400c:	mov	r3, r0
    4010:	str	r3, [r4]
    4014:	mrc	15, 0, r3, cr13, cr0, {3}
    4018:	ldr	r2, [pc, #1744]	; 46f0 <grib_init+0x40b0>
    401c:	ldr	r3, [r3, r2]
    4020:	add	r3, r3, #280	; 0x118
    4024:	ldr	r3, [r3]
    4028:	ldr	r1, [fp, #-20]	; 0xffffffec
    402c:	mov	r0, r3
    4030:	bl	0 <coda_type_number_set_endianness>
    4034:	mrc	15, 0, r3, cr13, cr0, {3}
    4038:	ldr	r2, [pc, #1712]	; 46f0 <grib_init+0x40b0>
    403c:	ldr	r3, [r3, r2]
    4040:	add	r3, r3, #280	; 0x118
    4044:	ldr	r3, [r3]
    4048:	mov	r1, #5
    404c:	mov	r0, r3
    4050:	bl	0 <coda_type_set_read_type>
    4054:	mrc	15, 0, r3, cr13, cr0, {3}
    4058:	ldr	r2, [pc, #1680]	; 46f0 <grib_init+0x40b0>
    405c:	ldr	r3, [r3, r2]
    4060:	add	r3, r3, #280	; 0x118
    4064:	ldr	r1, [r3]
    4068:	mov	r2, #32
    406c:	mov	r3, #0
    4070:	mov	r0, r1
    4074:	bl	0 <coda_type_set_bit_size>
    4078:	mrc	15, 0, r3, cr13, cr0, {3}
    407c:	ldr	r2, [pc, #1644]	; 46f0 <grib_init+0x40b0>
    4080:	ldr	r3, [r3, r2]
    4084:	add	r4, r3, #284	; 0x11c
    4088:	mov	r1, #2
    408c:	mov	r0, #7
    4090:	bl	0 <coda_type_number_new>
    4094:	mov	r3, r0
    4098:	str	r3, [r4]
    409c:	mrc	15, 0, r3, cr13, cr0, {3}
    40a0:	ldr	r2, [pc, #1608]	; 46f0 <grib_init+0x40b0>
    40a4:	ldr	r3, [r3, r2]
    40a8:	add	r3, r3, #284	; 0x11c
    40ac:	ldr	r3, [r3]
    40b0:	ldr	r1, [fp, #-20]	; 0xffffffec
    40b4:	mov	r0, r3
    40b8:	bl	0 <coda_type_number_set_endianness>
    40bc:	mrc	15, 0, r3, cr13, cr0, {3}
    40c0:	ldr	r2, [pc, #1576]	; 46f0 <grib_init+0x40b0>
    40c4:	ldr	r3, [r3, r2]
    40c8:	add	r3, r3, #284	; 0x11c
    40cc:	ldr	r3, [r3]
    40d0:	mov	r1, #1
    40d4:	mov	r0, r3
    40d8:	bl	0 <coda_type_set_read_type>
    40dc:	mrc	15, 0, r3, cr13, cr0, {3}
    40e0:	ldr	r2, [pc, #1544]	; 46f0 <grib_init+0x40b0>
    40e4:	ldr	r3, [r3, r2]
    40e8:	add	r3, r3, #284	; 0x11c
    40ec:	ldr	r1, [r3]
    40f0:	mov	r2, #8
    40f4:	mov	r3, #0
    40f8:	mov	r0, r1
    40fc:	bl	0 <coda_type_set_bit_size>
    4100:	mrc	15, 0, r3, cr13, cr0, {3}
    4104:	ldr	r2, [pc, #1508]	; 46f0 <grib_init+0x40b0>
    4108:	ldr	r3, [r3, r2]
    410c:	add	r3, r3, #284	; 0x11c
    4110:	ldr	r3, [r3]
    4114:	movw	r1, #0
    4118:	movt	r1, #0
    411c:	mov	r0, r3
    4120:	bl	0 <coda_type_set_description>
    4124:	mrc	15, 0, r3, cr13, cr0, {3}
    4128:	ldr	r2, [pc, #1472]	; 46f0 <grib_init+0x40b0>
    412c:	ldr	r3, [r3, r2]
    4130:	add	r4, r3, #288	; 0x120
    4134:	mov	r1, #2
    4138:	mov	r0, #7
    413c:	bl	0 <coda_type_number_new>
    4140:	mov	r3, r0
    4144:	str	r3, [r4]
    4148:	mrc	15, 0, r3, cr13, cr0, {3}
    414c:	ldr	r2, [pc, #1436]	; 46f0 <grib_init+0x40b0>
    4150:	ldr	r3, [r3, r2]
    4154:	add	r3, r3, #288	; 0x120
    4158:	ldr	r3, [r3]
    415c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4160:	mov	r0, r3
    4164:	bl	0 <coda_type_number_set_endianness>
    4168:	mrc	15, 0, r3, cr13, cr0, {3}
    416c:	ldr	r2, [pc, #1404]	; 46f0 <grib_init+0x40b0>
    4170:	ldr	r3, [r3, r2]
    4174:	add	r3, r3, #288	; 0x120
    4178:	ldr	r3, [r3]
    417c:	mov	r1, #3
    4180:	mov	r0, r3
    4184:	bl	0 <coda_type_set_read_type>
    4188:	mrc	15, 0, r3, cr13, cr0, {3}
    418c:	ldr	r2, [pc, #1372]	; 46f0 <grib_init+0x40b0>
    4190:	ldr	r3, [r3, r2]
    4194:	add	r3, r3, #288	; 0x120
    4198:	ldr	r1, [r3]
    419c:	mov	r2, #16
    41a0:	mov	r3, #0
    41a4:	mov	r0, r1
    41a8:	bl	0 <coda_type_set_bit_size>
    41ac:	mrc	15, 0, r3, cr13, cr0, {3}
    41b0:	ldr	r2, [pc, #1336]	; 46f0 <grib_init+0x40b0>
    41b4:	ldr	r3, [r3, r2]
    41b8:	add	r3, r3, #288	; 0x120
    41bc:	ldr	r3, [r3]
    41c0:	movw	r1, #0
    41c4:	movt	r1, #0
    41c8:	mov	r0, r3
    41cc:	bl	0 <coda_type_set_description>
    41d0:	mrc	15, 0, r3, cr13, cr0, {3}
    41d4:	ldr	r2, [pc, #1300]	; 46f0 <grib_init+0x40b0>
    41d8:	ldr	r3, [r3, r2]
    41dc:	add	r4, r3, #292	; 0x124
    41e0:	mov	r1, #2
    41e4:	mov	r0, #7
    41e8:	bl	0 <coda_type_number_new>
    41ec:	mov	r3, r0
    41f0:	str	r3, [r4]
    41f4:	mrc	15, 0, r3, cr13, cr0, {3}
    41f8:	ldr	r2, [pc, #1264]	; 46f0 <grib_init+0x40b0>
    41fc:	ldr	r3, [r3, r2]
    4200:	add	r3, r3, #292	; 0x124
    4204:	ldr	r3, [r3]
    4208:	ldr	r1, [fp, #-20]	; 0xffffffec
    420c:	mov	r0, r3
    4210:	bl	0 <coda_type_number_set_endianness>
    4214:	mrc	15, 0, r3, cr13, cr0, {3}
    4218:	ldr	r2, [pc, #1232]	; 46f0 <grib_init+0x40b0>
    421c:	ldr	r3, [r3, r2]
    4220:	add	r3, r3, #292	; 0x124
    4224:	ldr	r3, [r3]
    4228:	mov	r1, #3
    422c:	mov	r0, r3
    4230:	bl	0 <coda_type_set_read_type>
    4234:	mrc	15, 0, r3, cr13, cr0, {3}
    4238:	ldr	r2, [pc, #1200]	; 46f0 <grib_init+0x40b0>
    423c:	ldr	r3, [r3, r2]
    4240:	add	r3, r3, #292	; 0x124
    4244:	ldr	r1, [r3]
    4248:	mov	r2, #16
    424c:	mov	r3, #0
    4250:	mov	r0, r1
    4254:	bl	0 <coda_type_set_bit_size>
    4258:	mrc	15, 0, r3, cr13, cr0, {3}
    425c:	ldr	r2, [pc, #1164]	; 46f0 <grib_init+0x40b0>
    4260:	ldr	r3, [r3, r2]
    4264:	add	r3, r3, #292	; 0x124
    4268:	ldr	r3, [r3]
    426c:	movw	r1, #0
    4270:	movt	r1, #0
    4274:	mov	r0, r3
    4278:	bl	0 <coda_type_set_description>
    427c:	mrc	15, 0, r3, cr13, cr0, {3}
    4280:	ldr	r2, [pc, #1128]	; 46f0 <grib_init+0x40b0>
    4284:	ldr	r3, [r3, r2]
    4288:	add	r4, r3, #296	; 0x128
    428c:	mov	r1, #2
    4290:	mov	r0, #7
    4294:	bl	0 <coda_type_number_new>
    4298:	mov	r3, r0
    429c:	str	r3, [r4]
    42a0:	mrc	15, 0, r3, cr13, cr0, {3}
    42a4:	ldr	r2, [pc, #1092]	; 46f0 <grib_init+0x40b0>
    42a8:	ldr	r3, [r3, r2]
    42ac:	add	r3, r3, #296	; 0x128
    42b0:	ldr	r3, [r3]
    42b4:	ldr	r1, [fp, #-20]	; 0xffffffec
    42b8:	mov	r0, r3
    42bc:	bl	0 <coda_type_number_set_endianness>
    42c0:	mrc	15, 0, r3, cr13, cr0, {3}
    42c4:	ldr	r2, [pc, #1060]	; 46f0 <grib_init+0x40b0>
    42c8:	ldr	r3, [r3, r2]
    42cc:	add	r3, r3, #296	; 0x128
    42d0:	ldr	r3, [r3]
    42d4:	mov	r1, #1
    42d8:	mov	r0, r3
    42dc:	bl	0 <coda_type_set_read_type>
    42e0:	mrc	15, 0, r3, cr13, cr0, {3}
    42e4:	ldr	r2, [pc, #1028]	; 46f0 <grib_init+0x40b0>
    42e8:	ldr	r3, [r3, r2]
    42ec:	add	r3, r3, #296	; 0x128
    42f0:	ldr	r1, [r3]
    42f4:	mov	r2, #8
    42f8:	mov	r3, #0
    42fc:	mov	r0, r1
    4300:	bl	0 <coda_type_set_bit_size>
    4304:	mrc	15, 0, r3, cr13, cr0, {3}
    4308:	ldr	r2, [pc, #992]	; 46f0 <grib_init+0x40b0>
    430c:	ldr	r3, [r3, r2]
    4310:	add	r3, r3, #296	; 0x128
    4314:	ldr	r3, [r3]
    4318:	movw	r1, #0
    431c:	movt	r1, #0
    4320:	mov	r0, r3
    4324:	bl	0 <coda_type_set_description>
    4328:	mrc	15, 0, r3, cr13, cr0, {3}
    432c:	ldr	r2, [pc, #956]	; 46f0 <grib_init+0x40b0>
    4330:	ldr	r3, [r3, r2]
    4334:	add	r4, r3, #300	; 0x12c
    4338:	mov	r1, #2
    433c:	mov	r0, #7
    4340:	bl	0 <coda_type_number_new>
    4344:	mov	r3, r0
    4348:	str	r3, [r4]
    434c:	mrc	15, 0, r3, cr13, cr0, {3}
    4350:	ldr	r2, [pc, #920]	; 46f0 <grib_init+0x40b0>
    4354:	ldr	r3, [r3, r2]
    4358:	add	r3, r3, #300	; 0x12c
    435c:	ldr	r3, [r3]
    4360:	ldr	r1, [fp, #-20]	; 0xffffffec
    4364:	mov	r0, r3
    4368:	bl	0 <coda_type_number_set_endianness>
    436c:	mrc	15, 0, r3, cr13, cr0, {3}
    4370:	ldr	r2, [pc, #888]	; 46f0 <grib_init+0x40b0>
    4374:	ldr	r3, [r3, r2]
    4378:	add	r3, r3, #300	; 0x12c
    437c:	ldr	r3, [r3]
    4380:	mov	r1, #1
    4384:	mov	r0, r3
    4388:	bl	0 <coda_type_set_read_type>
    438c:	mrc	15, 0, r3, cr13, cr0, {3}
    4390:	ldr	r2, [pc, #856]	; 46f0 <grib_init+0x40b0>
    4394:	ldr	r3, [r3, r2]
    4398:	add	r3, r3, #300	; 0x12c
    439c:	ldr	r1, [r3]
    43a0:	mov	r2, #8
    43a4:	mov	r3, #0
    43a8:	mov	r0, r1
    43ac:	bl	0 <coda_type_set_bit_size>
    43b0:	mrc	15, 0, r3, cr13, cr0, {3}
    43b4:	ldr	r2, [pc, #820]	; 46f0 <grib_init+0x40b0>
    43b8:	ldr	r3, [r3, r2]
    43bc:	add	r3, r3, #300	; 0x12c
    43c0:	ldr	r3, [r3]
    43c4:	movw	r1, #0
    43c8:	movt	r1, #0
    43cc:	mov	r0, r3
    43d0:	bl	0 <coda_type_set_description>
    43d4:	mrc	15, 0, r3, cr13, cr0, {3}
    43d8:	ldr	r2, [pc, #784]	; 46f0 <grib_init+0x40b0>
    43dc:	ldr	r3, [r3, r2]
    43e0:	add	r4, r3, #304	; 0x130
    43e4:	mov	r1, #2
    43e8:	mov	r0, #7
    43ec:	bl	0 <coda_type_number_new>
    43f0:	mov	r3, r0
    43f4:	str	r3, [r4]
    43f8:	mrc	15, 0, r3, cr13, cr0, {3}
    43fc:	ldr	r2, [pc, #748]	; 46f0 <grib_init+0x40b0>
    4400:	ldr	r3, [r3, r2]
    4404:	add	r3, r3, #304	; 0x130
    4408:	ldr	r3, [r3]
    440c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4410:	mov	r0, r3
    4414:	bl	0 <coda_type_number_set_endianness>
    4418:	mrc	15, 0, r3, cr13, cr0, {3}
    441c:	ldr	r2, [pc, #716]	; 46f0 <grib_init+0x40b0>
    4420:	ldr	r3, [r3, r2]
    4424:	add	r3, r3, #304	; 0x130
    4428:	ldr	r3, [r3]
    442c:	mov	r1, #1
    4430:	mov	r0, r3
    4434:	bl	0 <coda_type_set_read_type>
    4438:	mrc	15, 0, r3, cr13, cr0, {3}
    443c:	ldr	r2, [pc, #684]	; 46f0 <grib_init+0x40b0>
    4440:	ldr	r3, [r3, r2]
    4444:	add	r3, r3, #304	; 0x130
    4448:	ldr	r1, [r3]
    444c:	mov	r2, #8
    4450:	mov	r3, #0
    4454:	mov	r0, r1
    4458:	bl	0 <coda_type_set_bit_size>
    445c:	mrc	15, 0, r3, cr13, cr0, {3}
    4460:	ldr	r2, [pc, #648]	; 46f0 <grib_init+0x40b0>
    4464:	ldr	r3, [r3, r2]
    4468:	add	r3, r3, #304	; 0x130
    446c:	ldr	r3, [r3]
    4470:	movw	r1, #0
    4474:	movt	r1, #0
    4478:	mov	r0, r3
    447c:	bl	0 <coda_type_set_description>
    4480:	mrc	15, 0, r3, cr13, cr0, {3}
    4484:	ldr	r2, [pc, #612]	; 46f0 <grib_init+0x40b0>
    4488:	ldr	r3, [r3, r2]
    448c:	add	r4, r3, #308	; 0x134
    4490:	mov	r1, #2
    4494:	mov	r0, #7
    4498:	bl	0 <coda_type_number_new>
    449c:	mov	r3, r0
    44a0:	str	r3, [r4]
    44a4:	mrc	15, 0, r3, cr13, cr0, {3}
    44a8:	ldr	r2, [pc, #576]	; 46f0 <grib_init+0x40b0>
    44ac:	ldr	r3, [r3, r2]
    44b0:	add	r3, r3, #308	; 0x134
    44b4:	ldr	r3, [r3]
    44b8:	ldr	r1, [fp, #-20]	; 0xffffffec
    44bc:	mov	r0, r3
    44c0:	bl	0 <coda_type_number_set_endianness>
    44c4:	mrc	15, 0, r3, cr13, cr0, {3}
    44c8:	ldr	r2, [pc, #544]	; 46f0 <grib_init+0x40b0>
    44cc:	ldr	r3, [r3, r2]
    44d0:	add	r3, r3, #308	; 0x134
    44d4:	ldr	r3, [r3]
    44d8:	mov	r1, #1
    44dc:	mov	r0, r3
    44e0:	bl	0 <coda_type_set_read_type>
    44e4:	mrc	15, 0, r3, cr13, cr0, {3}
    44e8:	ldr	r2, [pc, #512]	; 46f0 <grib_init+0x40b0>
    44ec:	ldr	r3, [r3, r2]
    44f0:	add	r3, r3, #308	; 0x134
    44f4:	ldr	r1, [r3]
    44f8:	mov	r2, #8
    44fc:	mov	r3, #0
    4500:	mov	r0, r1
    4504:	bl	0 <coda_type_set_bit_size>
    4508:	mrc	15, 0, r3, cr13, cr0, {3}
    450c:	ldr	r2, [pc, #476]	; 46f0 <grib_init+0x40b0>
    4510:	ldr	r3, [r3, r2]
    4514:	add	r3, r3, #308	; 0x134
    4518:	ldr	r3, [r3]
    451c:	movw	r1, #0
    4520:	movt	r1, #0
    4524:	mov	r0, r3
    4528:	bl	0 <coda_type_set_description>
    452c:	mrc	15, 0, r3, cr13, cr0, {3}
    4530:	ldr	r2, [pc, #440]	; 46f0 <grib_init+0x40b0>
    4534:	ldr	r3, [r3, r2]
    4538:	add	r4, r3, #312	; 0x138
    453c:	mov	r1, #2
    4540:	mov	r0, #7
    4544:	bl	0 <coda_type_number_new>
    4548:	mov	r3, r0
    454c:	str	r3, [r4]
    4550:	mrc	15, 0, r3, cr13, cr0, {3}
    4554:	ldr	r2, [pc, #404]	; 46f0 <grib_init+0x40b0>
    4558:	ldr	r3, [r3, r2]
    455c:	add	r3, r3, #312	; 0x138
    4560:	ldr	r3, [r3]
    4564:	ldr	r1, [fp, #-20]	; 0xffffffec
    4568:	mov	r0, r3
    456c:	bl	0 <coda_type_number_set_endianness>
    4570:	mrc	15, 0, r3, cr13, cr0, {3}
    4574:	ldr	r2, [pc, #372]	; 46f0 <grib_init+0x40b0>
    4578:	ldr	r3, [r3, r2]
    457c:	add	r3, r3, #312	; 0x138
    4580:	ldr	r3, [r3]
    4584:	mov	r1, #1
    4588:	mov	r0, r3
    458c:	bl	0 <coda_type_set_read_type>
    4590:	mrc	15, 0, r3, cr13, cr0, {3}
    4594:	ldr	r2, [pc, #340]	; 46f0 <grib_init+0x40b0>
    4598:	ldr	r3, [r3, r2]
    459c:	add	r3, r3, #312	; 0x138
    45a0:	ldr	r1, [r3]
    45a4:	mov	r2, #8
    45a8:	mov	r3, #0
    45ac:	mov	r0, r1
    45b0:	bl	0 <coda_type_set_bit_size>
    45b4:	mrc	15, 0, r3, cr13, cr0, {3}
    45b8:	ldr	r2, [pc, #304]	; 46f0 <grib_init+0x40b0>
    45bc:	ldr	r3, [r3, r2]
    45c0:	add	r3, r3, #312	; 0x138
    45c4:	ldr	r3, [r3]
    45c8:	movw	r1, #0
    45cc:	movt	r1, #0
    45d0:	mov	r0, r3
    45d4:	bl	0 <coda_type_set_description>
    45d8:	mrc	15, 0, r3, cr13, cr0, {3}
    45dc:	ldr	r2, [pc, #268]	; 46f0 <grib_init+0x40b0>
    45e0:	ldr	r3, [r3, r2]
    45e4:	add	r4, r3, #316	; 0x13c
    45e8:	mov	r1, #2
    45ec:	mov	r0, #7
    45f0:	bl	0 <coda_type_number_new>
    45f4:	mov	r3, r0
    45f8:	str	r3, [r4]
    45fc:	mrc	15, 0, r3, cr13, cr0, {3}
    4600:	ldr	r2, [pc, #232]	; 46f0 <grib_init+0x40b0>
    4604:	ldr	r3, [r3, r2]
    4608:	add	r3, r3, #316	; 0x13c
    460c:	ldr	r3, [r3]
    4610:	ldr	r1, [fp, #-20]	; 0xffffffec
    4614:	mov	r0, r3
    4618:	bl	0 <coda_type_number_set_endianness>
    461c:	mrc	15, 0, r3, cr13, cr0, {3}
    4620:	ldr	r2, [pc, #200]	; 46f0 <grib_init+0x40b0>
    4624:	ldr	r3, [r3, r2]
    4628:	add	r3, r3, #316	; 0x13c
    462c:	ldr	r3, [r3]
    4630:	mov	r1, #3
    4634:	mov	r0, r3
    4638:	bl	0 <coda_type_set_read_type>
    463c:	mrc	15, 0, r3, cr13, cr0, {3}
    4640:	ldr	r2, [pc, #168]	; 46f0 <grib_init+0x40b0>
    4644:	ldr	r3, [r3, r2]
    4648:	add	r3, r3, #316	; 0x13c
    464c:	ldr	r1, [r3]
    4650:	mov	r2, #16
    4654:	mov	r3, #0
    4658:	mov	r0, r1
    465c:	bl	0 <coda_type_set_bit_size>
    4660:	mrc	15, 0, r3, cr13, cr0, {3}
    4664:	ldr	r2, [pc, #132]	; 46f0 <grib_init+0x40b0>
    4668:	ldr	r3, [r3, r2]
    466c:	add	r3, r3, #316	; 0x13c
    4670:	ldr	r3, [r3]
    4674:	movw	r1, #0
    4678:	movt	r1, #0
    467c:	mov	r0, r3
    4680:	bl	0 <coda_type_set_description>
    4684:	mrc	15, 0, r3, cr13, cr0, {3}
    4688:	ldr	r2, [pc, #96]	; 46f0 <grib_init+0x40b0>
    468c:	ldr	r3, [r3, r2]
    4690:	add	r4, r3, #320	; 0x140
    4694:	mov	r1, #2
    4698:	mov	r0, #7
    469c:	bl	0 <coda_type_number_new>
    46a0:	mov	r3, r0
    46a4:	str	r3, [r4]
    46a8:	mrc	15, 0, r3, cr13, cr0, {3}
    46ac:	ldr	r2, [pc, #60]	; 46f0 <grib_init+0x40b0>
    46b0:	ldr	r3, [r3, r2]
    46b4:	add	r3, r3, #320	; 0x140
    46b8:	ldr	r3, [r3]
    46bc:	ldr	r1, [fp, #-20]	; 0xffffffec
    46c0:	mov	r0, r3
    46c4:	bl	0 <coda_type_number_set_endianness>
    46c8:	mrc	15, 0, r3, cr13, cr0, {3}
    46cc:	ldr	r2, [pc, #28]	; 46f0 <grib_init+0x40b0>
    46d0:	ldr	r3, [r3, r2]
    46d4:	add	r3, r3, #320	; 0x140
    46d8:	ldr	r3, [r3]
    46dc:	mov	r1, #2
    46e0:	mov	r0, r3
    46e4:	bl	0 <coda_type_set_read_type>
    46e8:	mrc	15, 0, r3, cr13, cr0, {3}
    46ec:	b	46f4 <grib_init+0x40b4>
    46f0:	.word	0x00000000
    46f4:	ldr	r2, [pc, #-12]	; 46f0 <grib_init+0x40b0>
    46f8:	ldr	r3, [r3, r2]
    46fc:	add	r3, r3, #320	; 0x140
    4700:	ldr	r1, [r3]
    4704:	mov	r2, #16
    4708:	mov	r3, #0
    470c:	mov	r0, r1
    4710:	bl	0 <coda_type_set_bit_size>
    4714:	mrc	15, 0, r3, cr13, cr0, {3}
    4718:	ldr	r2, [pc, #-48]	; 46f0 <grib_init+0x40b0>
    471c:	ldr	r3, [r3, r2]
    4720:	add	r3, r3, #320	; 0x140
    4724:	ldr	r3, [r3]
    4728:	movw	r1, #0
    472c:	movt	r1, #0
    4730:	mov	r0, r3
    4734:	bl	0 <coda_type_set_description>
    4738:	mrc	15, 0, r3, cr13, cr0, {3}
    473c:	ldr	r2, [pc, #-84]	; 46f0 <grib_init+0x40b0>
    4740:	ldr	r3, [r3, r2]
    4744:	add	r4, r3, #324	; 0x144
    4748:	mov	r1, #2
    474c:	mov	r0, #7
    4750:	bl	0 <coda_type_number_new>
    4754:	mov	r3, r0
    4758:	str	r3, [r4]
    475c:	mrc	15, 0, r3, cr13, cr0, {3}
    4760:	ldr	r2, [pc, #-120]	; 46f0 <grib_init+0x40b0>
    4764:	ldr	r3, [r3, r2]
    4768:	add	r3, r3, #324	; 0x144
    476c:	ldr	r3, [r3]
    4770:	ldr	r1, [fp, #-20]	; 0xffffffec
    4774:	mov	r0, r3
    4778:	bl	0 <coda_type_number_set_endianness>
    477c:	mrc	15, 0, r3, cr13, cr0, {3}
    4780:	ldr	r2, [pc, #-152]	; 46f0 <grib_init+0x40b0>
    4784:	ldr	r3, [r3, r2]
    4788:	add	r3, r3, #324	; 0x144
    478c:	ldr	r3, [r3]
    4790:	mov	r1, #1
    4794:	mov	r0, r3
    4798:	bl	0 <coda_type_set_read_type>
    479c:	mrc	15, 0, r3, cr13, cr0, {3}
    47a0:	ldr	r2, [pc, #-184]	; 46f0 <grib_init+0x40b0>
    47a4:	ldr	r3, [r3, r2]
    47a8:	add	r3, r3, #324	; 0x144
    47ac:	ldr	r1, [r3]
    47b0:	mov	r2, #8
    47b4:	mov	r3, #0
    47b8:	mov	r0, r1
    47bc:	bl	0 <coda_type_set_bit_size>
    47c0:	mrc	15, 0, r3, cr13, cr0, {3}
    47c4:	ldr	r2, [pc, #-220]	; 46f0 <grib_init+0x40b0>
    47c8:	ldr	r3, [r3, r2]
    47cc:	add	r3, r3, #324	; 0x144
    47d0:	ldr	r3, [r3]
    47d4:	movw	r1, #0
    47d8:	movt	r1, #0
    47dc:	mov	r0, r3
    47e0:	bl	0 <coda_type_set_description>
    47e4:	mrc	15, 0, r3, cr13, cr0, {3}
    47e8:	ldr	r2, [pc, #-256]	; 46f0 <grib_init+0x40b0>
    47ec:	ldr	r3, [r3, r2]
    47f0:	add	r4, r3, #328	; 0x148
    47f4:	mov	r1, #2
    47f8:	mov	r0, #7
    47fc:	bl	0 <coda_type_number_new>
    4800:	mov	r3, r0
    4804:	str	r3, [r4]
    4808:	mrc	15, 0, r3, cr13, cr0, {3}
    480c:	ldr	r2, [pc, #-292]	; 46f0 <grib_init+0x40b0>
    4810:	ldr	r3, [r3, r2]
    4814:	add	r3, r3, #328	; 0x148
    4818:	ldr	r3, [r3]
    481c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4820:	mov	r0, r3
    4824:	bl	0 <coda_type_number_set_endianness>
    4828:	mrc	15, 0, r3, cr13, cr0, {3}
    482c:	ldr	r2, [pc, #-324]	; 46f0 <grib_init+0x40b0>
    4830:	ldr	r3, [r3, r2]
    4834:	add	r3, r3, #328	; 0x148
    4838:	ldr	r3, [r3]
    483c:	mov	r1, #1
    4840:	mov	r0, r3
    4844:	bl	0 <coda_type_set_read_type>
    4848:	mrc	15, 0, r3, cr13, cr0, {3}
    484c:	ldr	r2, [pc, #-356]	; 46f0 <grib_init+0x40b0>
    4850:	ldr	r3, [r3, r2]
    4854:	add	r3, r3, #328	; 0x148
    4858:	ldr	r1, [r3]
    485c:	mov	r2, #8
    4860:	mov	r3, #0
    4864:	mov	r0, r1
    4868:	bl	0 <coda_type_set_bit_size>
    486c:	mrc	15, 0, r3, cr13, cr0, {3}
    4870:	ldr	r2, [pc, #-392]	; 46f0 <grib_init+0x40b0>
    4874:	ldr	r3, [r3, r2]
    4878:	add	r3, r3, #328	; 0x148
    487c:	ldr	r3, [r3]
    4880:	movw	r1, #0
    4884:	movt	r1, #0
    4888:	mov	r0, r3
    488c:	bl	0 <coda_type_set_description>
    4890:	mrc	15, 0, r3, cr13, cr0, {3}
    4894:	ldr	r2, [pc, #-428]	; 46f0 <grib_init+0x40b0>
    4898:	ldr	r3, [r3, r2]
    489c:	add	r4, r3, #332	; 0x14c
    48a0:	mov	r1, #2
    48a4:	mov	r0, #7
    48a8:	bl	0 <coda_type_number_new>
    48ac:	mov	r3, r0
    48b0:	str	r3, [r4]
    48b4:	mrc	15, 0, r3, cr13, cr0, {3}
    48b8:	ldr	r2, [pc, #-464]	; 46f0 <grib_init+0x40b0>
    48bc:	ldr	r3, [r3, r2]
    48c0:	add	r3, r3, #332	; 0x14c
    48c4:	ldr	r3, [r3]
    48c8:	ldr	r1, [fp, #-20]	; 0xffffffec
    48cc:	mov	r0, r3
    48d0:	bl	0 <coda_type_number_set_endianness>
    48d4:	mrc	15, 0, r3, cr13, cr0, {3}
    48d8:	ldr	r2, [pc, #-496]	; 46f0 <grib_init+0x40b0>
    48dc:	ldr	r3, [r3, r2]
    48e0:	add	r3, r3, #332	; 0x14c
    48e4:	ldr	r3, [r3]
    48e8:	mov	r1, #1
    48ec:	mov	r0, r3
    48f0:	bl	0 <coda_type_set_read_type>
    48f4:	mrc	15, 0, r3, cr13, cr0, {3}
    48f8:	ldr	r2, [pc, #-528]	; 46f0 <grib_init+0x40b0>
    48fc:	ldr	r3, [r3, r2]
    4900:	add	r3, r3, #332	; 0x14c
    4904:	ldr	r1, [r3]
    4908:	mov	r2, #8
    490c:	mov	r3, #0
    4910:	mov	r0, r1
    4914:	bl	0 <coda_type_set_bit_size>
    4918:	mrc	15, 0, r3, cr13, cr0, {3}
    491c:	ldr	r2, [pc, #-564]	; 46f0 <grib_init+0x40b0>
    4920:	ldr	r3, [r3, r2]
    4924:	add	r3, r3, #332	; 0x14c
    4928:	ldr	r3, [r3]
    492c:	movw	r1, #0
    4930:	movt	r1, #0
    4934:	mov	r0, r3
    4938:	bl	0 <coda_type_set_description>
    493c:	mrc	15, 0, r3, cr13, cr0, {3}
    4940:	ldr	r2, [pc, #-600]	; 46f0 <grib_init+0x40b0>
    4944:	ldr	r3, [r3, r2]
    4948:	add	r4, r3, #336	; 0x150
    494c:	mov	r1, #2
    4950:	mov	r0, #7
    4954:	bl	0 <coda_type_number_new>
    4958:	mov	r3, r0
    495c:	str	r3, [r4]
    4960:	mrc	15, 0, r3, cr13, cr0, {3}
    4964:	ldr	r2, [pc, #-636]	; 46f0 <grib_init+0x40b0>
    4968:	ldr	r3, [r3, r2]
    496c:	add	r3, r3, #336	; 0x150
    4970:	ldr	r3, [r3]
    4974:	ldr	r1, [fp, #-20]	; 0xffffffec
    4978:	mov	r0, r3
    497c:	bl	0 <coda_type_number_set_endianness>
    4980:	mrc	15, 0, r3, cr13, cr0, {3}
    4984:	ldr	r2, [pc, #-668]	; 46f0 <grib_init+0x40b0>
    4988:	ldr	r3, [r3, r2]
    498c:	add	r3, r3, #336	; 0x150
    4990:	ldr	r3, [r3]
    4994:	mov	r1, #1
    4998:	mov	r0, r3
    499c:	bl	0 <coda_type_set_read_type>
    49a0:	mrc	15, 0, r3, cr13, cr0, {3}
    49a4:	ldr	r2, [pc, #-700]	; 46f0 <grib_init+0x40b0>
    49a8:	ldr	r3, [r3, r2]
    49ac:	add	r3, r3, #336	; 0x150
    49b0:	ldr	r1, [r3]
    49b4:	mov	r2, #8
    49b8:	mov	r3, #0
    49bc:	mov	r0, r1
    49c0:	bl	0 <coda_type_set_bit_size>
    49c4:	mrc	15, 0, r3, cr13, cr0, {3}
    49c8:	ldr	r2, [pc, #-736]	; 46f0 <grib_init+0x40b0>
    49cc:	ldr	r3, [r3, r2]
    49d0:	add	r3, r3, #336	; 0x150
    49d4:	ldr	r3, [r3]
    49d8:	movw	r1, #0
    49dc:	movt	r1, #0
    49e0:	mov	r0, r3
    49e4:	bl	0 <coda_type_set_description>
    49e8:	mrc	15, 0, r3, cr13, cr0, {3}
    49ec:	ldr	r2, [pc, #-772]	; 46f0 <grib_init+0x40b0>
    49f0:	ldr	r3, [r3, r2]
    49f4:	add	r4, r3, #340	; 0x154
    49f8:	mov	r1, #2
    49fc:	mov	r0, #7
    4a00:	bl	0 <coda_type_number_new>
    4a04:	mov	r3, r0
    4a08:	str	r3, [r4]
    4a0c:	mrc	15, 0, r3, cr13, cr0, {3}
    4a10:	ldr	r2, [pc, #-808]	; 46f0 <grib_init+0x40b0>
    4a14:	ldr	r3, [r3, r2]
    4a18:	add	r3, r3, #340	; 0x154
    4a1c:	ldr	r3, [r3]
    4a20:	ldr	r1, [fp, #-20]	; 0xffffffec
    4a24:	mov	r0, r3
    4a28:	bl	0 <coda_type_number_set_endianness>
    4a2c:	mrc	15, 0, r3, cr13, cr0, {3}
    4a30:	ldr	r2, [pc, #-840]	; 46f0 <grib_init+0x40b0>
    4a34:	ldr	r3, [r3, r2]
    4a38:	add	r3, r3, #340	; 0x154
    4a3c:	ldr	r3, [r3]
    4a40:	mov	r1, #1
    4a44:	mov	r0, r3
    4a48:	bl	0 <coda_type_set_read_type>
    4a4c:	mrc	15, 0, r3, cr13, cr0, {3}
    4a50:	ldr	r2, [pc, #-872]	; 46f0 <grib_init+0x40b0>
    4a54:	ldr	r3, [r3, r2]
    4a58:	add	r3, r3, #340	; 0x154
    4a5c:	ldr	r1, [r3]
    4a60:	mov	r2, #8
    4a64:	mov	r3, #0
    4a68:	mov	r0, r1
    4a6c:	bl	0 <coda_type_set_bit_size>
    4a70:	mrc	15, 0, r3, cr13, cr0, {3}
    4a74:	ldr	r2, [pc, #-908]	; 46f0 <grib_init+0x40b0>
    4a78:	ldr	r3, [r3, r2]
    4a7c:	add	r3, r3, #340	; 0x154
    4a80:	ldr	r3, [r3]
    4a84:	movw	r1, #0
    4a88:	movt	r1, #0
    4a8c:	mov	r0, r3
    4a90:	bl	0 <coda_type_set_description>
    4a94:	mrc	15, 0, r3, cr13, cr0, {3}
    4a98:	ldr	r2, [pc, #-944]	; 46f0 <grib_init+0x40b0>
    4a9c:	ldr	r3, [r3, r2]
    4aa0:	add	r4, r3, #344	; 0x158
    4aa4:	mov	r1, #2
    4aa8:	mov	r0, #7
    4aac:	bl	0 <coda_type_number_new>
    4ab0:	mov	r3, r0
    4ab4:	str	r3, [r4]
    4ab8:	mrc	15, 0, r3, cr13, cr0, {3}
    4abc:	ldr	r2, [pc, #-980]	; 46f0 <grib_init+0x40b0>
    4ac0:	ldr	r3, [r3, r2]
    4ac4:	add	r3, r3, #344	; 0x158
    4ac8:	ldr	r3, [r3]
    4acc:	ldr	r1, [fp, #-20]	; 0xffffffec
    4ad0:	mov	r0, r3
    4ad4:	bl	0 <coda_type_number_set_endianness>
    4ad8:	mrc	15, 0, r3, cr13, cr0, {3}
    4adc:	ldr	r2, [pc, #-1012]	; 46f0 <grib_init+0x40b0>
    4ae0:	ldr	r3, [r3, r2]
    4ae4:	add	r3, r3, #344	; 0x158
    4ae8:	ldr	r3, [r3]
    4aec:	mov	r1, #1
    4af0:	mov	r0, r3
    4af4:	bl	0 <coda_type_set_read_type>
    4af8:	mrc	15, 0, r3, cr13, cr0, {3}
    4afc:	ldr	r2, [pc, #-1044]	; 46f0 <grib_init+0x40b0>
    4b00:	ldr	r3, [r3, r2]
    4b04:	add	r3, r3, #344	; 0x158
    4b08:	ldr	r1, [r3]
    4b0c:	mov	r2, #8
    4b10:	mov	r3, #0
    4b14:	mov	r0, r1
    4b18:	bl	0 <coda_type_set_bit_size>
    4b1c:	mrc	15, 0, r3, cr13, cr0, {3}
    4b20:	ldr	r2, [pc, #-1080]	; 46f0 <grib_init+0x40b0>
    4b24:	ldr	r3, [r3, r2]
    4b28:	add	r3, r3, #344	; 0x158
    4b2c:	ldr	r3, [r3]
    4b30:	movw	r1, #0
    4b34:	movt	r1, #0
    4b38:	mov	r0, r3
    4b3c:	bl	0 <coda_type_set_description>
    4b40:	mrc	15, 0, r3, cr13, cr0, {3}
    4b44:	ldr	r2, [pc, #-1116]	; 46f0 <grib_init+0x40b0>
    4b48:	ldr	r3, [r3, r2]
    4b4c:	add	r4, r3, #348	; 0x15c
    4b50:	mov	r0, #7
    4b54:	bl	0 <coda_type_raw_new>
    4b58:	mov	r3, r0
    4b5c:	str	r3, [r4]
    4b60:	mrc	15, 0, r3, cr13, cr0, {3}
    4b64:	ldr	r2, [pc, #-1148]	; 46f0 <grib_init+0x40b0>
    4b68:	ldr	r3, [r3, r2]
    4b6c:	add	r3, r3, #348	; 0x15c
    4b70:	ldr	r3, [r3]
    4b74:	movw	r1, #0
    4b78:	movt	r1, #0
    4b7c:	mov	r0, r3
    4b80:	bl	0 <coda_type_set_description>
    4b84:	mrc	15, 0, r3, cr13, cr0, {3}
    4b88:	ldr	r2, [pc, #-1184]	; 46f0 <grib_init+0x40b0>
    4b8c:	ldr	r3, [r3, r2]
    4b90:	add	r4, r3, #352	; 0x160
    4b94:	mov	r1, #2
    4b98:	mov	r0, #7
    4b9c:	bl	0 <coda_type_number_new>
    4ba0:	mov	r3, r0
    4ba4:	str	r3, [r4]
    4ba8:	mrc	15, 0, r3, cr13, cr0, {3}
    4bac:	ldr	r2, [pc, #-1220]	; 46f0 <grib_init+0x40b0>
    4bb0:	ldr	r3, [r3, r2]
    4bb4:	add	r3, r3, #352	; 0x160
    4bb8:	ldr	r3, [r3]
    4bbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    4bc0:	mov	r0, r3
    4bc4:	bl	0 <coda_type_number_set_endianness>
    4bc8:	mrc	15, 0, r3, cr13, cr0, {3}
    4bcc:	ldr	r2, [pc, #-1252]	; 46f0 <grib_init+0x40b0>
    4bd0:	ldr	r3, [r3, r2]
    4bd4:	add	r3, r3, #352	; 0x160
    4bd8:	ldr	r3, [r3]
    4bdc:	mov	r1, #1
    4be0:	mov	r0, r3
    4be4:	bl	0 <coda_type_set_read_type>
    4be8:	mrc	15, 0, r3, cr13, cr0, {3}
    4bec:	ldr	r2, [pc, #-1284]	; 46f0 <grib_init+0x40b0>
    4bf0:	ldr	r3, [r3, r2]
    4bf4:	add	r3, r3, #352	; 0x160
    4bf8:	ldr	r1, [r3]
    4bfc:	mov	r2, #8
    4c00:	mov	r3, #0
    4c04:	mov	r0, r1
    4c08:	bl	0 <coda_type_set_bit_size>
    4c0c:	mrc	15, 0, r3, cr13, cr0, {3}
    4c10:	ldr	r2, [pc, #-1320]	; 46f0 <grib_init+0x40b0>
    4c14:	ldr	r3, [r3, r2]
    4c18:	add	r3, r3, #352	; 0x160
    4c1c:	ldr	r3, [r3]
    4c20:	movw	r1, #0
    4c24:	movt	r1, #0
    4c28:	mov	r0, r3
    4c2c:	bl	0 <coda_type_set_description>
    4c30:	mrc	15, 0, r3, cr13, cr0, {3}
    4c34:	ldr	r2, [pc, #-1356]	; 46f0 <grib_init+0x40b0>
    4c38:	ldr	r3, [r3, r2]
    4c3c:	add	r4, r3, #356	; 0x164
    4c40:	mov	r1, #2
    4c44:	mov	r0, #7
    4c48:	bl	0 <coda_type_number_new>
    4c4c:	mov	r3, r0
    4c50:	str	r3, [r4]
    4c54:	mrc	15, 0, r3, cr13, cr0, {3}
    4c58:	ldr	r2, [pc, #-1392]	; 46f0 <grib_init+0x40b0>
    4c5c:	ldr	r3, [r3, r2]
    4c60:	add	r3, r3, #356	; 0x164
    4c64:	ldr	r3, [r3]
    4c68:	ldr	r1, [fp, #-20]	; 0xffffffec
    4c6c:	mov	r0, r3
    4c70:	bl	0 <coda_type_number_set_endianness>
    4c74:	mrc	15, 0, r3, cr13, cr0, {3}
    4c78:	ldr	r2, [pc, #-1424]	; 46f0 <grib_init+0x40b0>
    4c7c:	ldr	r3, [r3, r2]
    4c80:	add	r3, r3, #356	; 0x164
    4c84:	ldr	r3, [r3]
    4c88:	mov	r1, #1
    4c8c:	mov	r0, r3
    4c90:	bl	0 <coda_type_set_read_type>
    4c94:	mrc	15, 0, r3, cr13, cr0, {3}
    4c98:	ldr	r2, [pc, #-1456]	; 46f0 <grib_init+0x40b0>
    4c9c:	ldr	r3, [r3, r2]
    4ca0:	add	r3, r3, #356	; 0x164
    4ca4:	ldr	r1, [r3]
    4ca8:	mov	r2, #8
    4cac:	mov	r3, #0
    4cb0:	mov	r0, r1
    4cb4:	bl	0 <coda_type_set_bit_size>
    4cb8:	mrc	15, 0, r3, cr13, cr0, {3}
    4cbc:	ldr	r2, [pc, #-1492]	; 46f0 <grib_init+0x40b0>
    4cc0:	ldr	r3, [r3, r2]
    4cc4:	add	r3, r3, #356	; 0x164
    4cc8:	ldr	r3, [r3]
    4ccc:	movw	r1, #0
    4cd0:	movt	r1, #0
    4cd4:	mov	r0, r3
    4cd8:	bl	0 <coda_type_set_description>
    4cdc:	mrc	15, 0, r3, cr13, cr0, {3}
    4ce0:	ldr	r2, [pc, #-1528]	; 46f0 <grib_init+0x40b0>
    4ce4:	ldr	r3, [r3, r2]
    4ce8:	add	r4, r3, #360	; 0x168
    4cec:	mov	r1, #2
    4cf0:	mov	r0, #7
    4cf4:	bl	0 <coda_type_number_new>
    4cf8:	mov	r3, r0
    4cfc:	str	r3, [r4]
    4d00:	mrc	15, 0, r3, cr13, cr0, {3}
    4d04:	ldr	r2, [pc, #-1564]	; 46f0 <grib_init+0x40b0>
    4d08:	ldr	r3, [r3, r2]
    4d0c:	add	r3, r3, #360	; 0x168
    4d10:	ldr	r3, [r3]
    4d14:	ldr	r1, [fp, #-20]	; 0xffffffec
    4d18:	mov	r0, r3
    4d1c:	bl	0 <coda_type_number_set_endianness>
    4d20:	mrc	15, 0, r3, cr13, cr0, {3}
    4d24:	ldr	r2, [pc, #-1596]	; 46f0 <grib_init+0x40b0>
    4d28:	ldr	r3, [r3, r2]
    4d2c:	add	r3, r3, #360	; 0x168
    4d30:	ldr	r3, [r3]
    4d34:	mov	r1, #1
    4d38:	mov	r0, r3
    4d3c:	bl	0 <coda_type_set_read_type>
    4d40:	mrc	15, 0, r3, cr13, cr0, {3}
    4d44:	ldr	r2, [pc, #-1628]	; 46f0 <grib_init+0x40b0>
    4d48:	ldr	r3, [r3, r2]
    4d4c:	add	r3, r3, #360	; 0x168
    4d50:	ldr	r1, [r3]
    4d54:	mov	r2, #8
    4d58:	mov	r3, #0
    4d5c:	mov	r0, r1
    4d60:	bl	0 <coda_type_set_bit_size>
    4d64:	mrc	15, 0, r3, cr13, cr0, {3}
    4d68:	ldr	r2, [pc, #-1664]	; 46f0 <grib_init+0x40b0>
    4d6c:	ldr	r3, [r3, r2]
    4d70:	add	r4, r3, #364	; 0x16c
    4d74:	mov	r1, #2
    4d78:	mov	r0, #7
    4d7c:	bl	0 <coda_type_number_new>
    4d80:	mov	r3, r0
    4d84:	str	r3, [r4]
    4d88:	mrc	15, 0, r3, cr13, cr0, {3}
    4d8c:	ldr	r2, [pc, #-1700]	; 46f0 <grib_init+0x40b0>
    4d90:	ldr	r3, [r3, r2]
    4d94:	add	r3, r3, #364	; 0x16c
    4d98:	ldr	r3, [r3]
    4d9c:	ldr	r1, [fp, #-20]	; 0xffffffec
    4da0:	mov	r0, r3
    4da4:	bl	0 <coda_type_number_set_endianness>
    4da8:	mrc	15, 0, r3, cr13, cr0, {3}
    4dac:	ldr	r2, [pc, #-1732]	; 46f0 <grib_init+0x40b0>
    4db0:	ldr	r3, [r3, r2]
    4db4:	add	r3, r3, #364	; 0x16c
    4db8:	ldr	r3, [r3]
    4dbc:	mov	r1, #1
    4dc0:	mov	r0, r3
    4dc4:	bl	0 <coda_type_set_read_type>
    4dc8:	mrc	15, 0, r3, cr13, cr0, {3}
    4dcc:	ldr	r2, [pc, #-1764]	; 46f0 <grib_init+0x40b0>
    4dd0:	ldr	r3, [r3, r2]
    4dd4:	add	r3, r3, #364	; 0x16c
    4dd8:	ldr	r1, [r3]
    4ddc:	mov	r2, #8
    4de0:	mov	r3, #0
    4de4:	mov	r0, r1
    4de8:	bl	0 <coda_type_set_bit_size>
    4dec:	mrc	15, 0, r3, cr13, cr0, {3}
    4df0:	ldr	r2, [pc, #-1800]	; 46f0 <grib_init+0x40b0>
    4df4:	ldr	r3, [r3, r2]
    4df8:	add	r4, r3, #368	; 0x170
    4dfc:	mov	r1, #2
    4e00:	mov	r0, #7
    4e04:	bl	0 <coda_type_number_new>
    4e08:	mov	r3, r0
    4e0c:	str	r3, [r4]
    4e10:	mrc	15, 0, r3, cr13, cr0, {3}
    4e14:	ldr	r2, [pc, #-1836]	; 46f0 <grib_init+0x40b0>
    4e18:	ldr	r3, [r3, r2]
    4e1c:	add	r3, r3, #368	; 0x170
    4e20:	ldr	r3, [r3]
    4e24:	ldr	r1, [fp, #-20]	; 0xffffffec
    4e28:	mov	r0, r3
    4e2c:	bl	0 <coda_type_number_set_endianness>
    4e30:	mrc	15, 0, r3, cr13, cr0, {3}
    4e34:	ldr	r2, [pc, #-1868]	; 46f0 <grib_init+0x40b0>
    4e38:	ldr	r3, [r3, r2]
    4e3c:	add	r3, r3, #368	; 0x170
    4e40:	ldr	r3, [r3]
    4e44:	mov	r1, #5
    4e48:	mov	r0, r3
    4e4c:	bl	0 <coda_type_set_read_type>
    4e50:	mrc	15, 0, r3, cr13, cr0, {3}
    4e54:	ldr	r2, [pc, #-1900]	; 46f0 <grib_init+0x40b0>
    4e58:	ldr	r3, [r3, r2]
    4e5c:	add	r3, r3, #368	; 0x170
    4e60:	ldr	r1, [r3]
    4e64:	mov	r2, #32
    4e68:	mov	r3, #0
    4e6c:	mov	r0, r1
    4e70:	bl	0 <coda_type_set_bit_size>
    4e74:	mrc	15, 0, r3, cr13, cr0, {3}
    4e78:	ldr	r2, [pc, #-1936]	; 46f0 <grib_init+0x40b0>
    4e7c:	ldr	r3, [r3, r2]
    4e80:	add	r4, r3, #372	; 0x174
    4e84:	mov	r1, #2
    4e88:	mov	r0, #7
    4e8c:	bl	0 <coda_type_number_new>
    4e90:	mov	r3, r0
    4e94:	str	r3, [r4]
    4e98:	mrc	15, 0, r3, cr13, cr0, {3}
    4e9c:	ldr	r2, [pc, #-1972]	; 46f0 <grib_init+0x40b0>
    4ea0:	ldr	r3, [r3, r2]
    4ea4:	add	r3, r3, #372	; 0x174
    4ea8:	ldr	r3, [r3]
    4eac:	ldr	r1, [fp, #-20]	; 0xffffffec
    4eb0:	mov	r0, r3
    4eb4:	bl	0 <coda_type_number_set_endianness>
    4eb8:	mrc	15, 0, r3, cr13, cr0, {3}
    4ebc:	ldr	r2, [pc, #-2004]	; 46f0 <grib_init+0x40b0>
    4ec0:	ldr	r3, [r3, r2]
    4ec4:	add	r3, r3, #372	; 0x174
    4ec8:	ldr	r3, [r3]
    4ecc:	mov	r1, #1
    4ed0:	mov	r0, r3
    4ed4:	bl	0 <coda_type_set_read_type>
    4ed8:	mrc	15, 0, r3, cr13, cr0, {3}
    4edc:	ldr	r2, [pc, #-2036]	; 46f0 <grib_init+0x40b0>
    4ee0:	ldr	r3, [r3, r2]
    4ee4:	add	r3, r3, #372	; 0x174
    4ee8:	ldr	r1, [r3]
    4eec:	mov	r2, #8
    4ef0:	mov	r3, #0
    4ef4:	mov	r0, r1
    4ef8:	bl	0 <coda_type_set_bit_size>
    4efc:	mrc	15, 0, r3, cr13, cr0, {3}
    4f00:	ldr	r2, [pc, #-2072]	; 46f0 <grib_init+0x40b0>
    4f04:	ldr	r3, [r3, r2]
    4f08:	add	r4, r3, #376	; 0x178
    4f0c:	mov	r1, #2
    4f10:	mov	r0, #7
    4f14:	bl	0 <coda_type_number_new>
    4f18:	mov	r3, r0
    4f1c:	str	r3, [r4]
    4f20:	mrc	15, 0, r3, cr13, cr0, {3}
    4f24:	ldr	r2, [pc, #-2108]	; 46f0 <grib_init+0x40b0>
    4f28:	ldr	r3, [r3, r2]
    4f2c:	add	r3, r3, #376	; 0x178
    4f30:	ldr	r3, [r3]
    4f34:	ldr	r1, [fp, #-20]	; 0xffffffec
    4f38:	mov	r0, r3
    4f3c:	bl	0 <coda_type_number_set_endianness>
    4f40:	mrc	15, 0, r3, cr13, cr0, {3}
    4f44:	ldr	r2, [pc, #-2140]	; 46f0 <grib_init+0x40b0>
    4f48:	ldr	r3, [r3, r2]
    4f4c:	add	r3, r3, #376	; 0x178
    4f50:	ldr	r3, [r3]
    4f54:	mov	r1, #5
    4f58:	mov	r0, r3
    4f5c:	bl	0 <coda_type_set_read_type>
    4f60:	mrc	15, 0, r3, cr13, cr0, {3}
    4f64:	ldr	r2, [pc, #-2172]	; 46f0 <grib_init+0x40b0>
    4f68:	ldr	r3, [r3, r2]
    4f6c:	add	r3, r3, #376	; 0x178
    4f70:	ldr	r1, [r3]
    4f74:	mov	r2, #32
    4f78:	mov	r3, #0
    4f7c:	mov	r0, r1
    4f80:	bl	0 <coda_type_set_bit_size>
    4f84:	mrc	15, 0, r3, cr13, cr0, {3}
    4f88:	ldr	r2, [pc, #-2208]	; 46f0 <grib_init+0x40b0>
    4f8c:	ldr	r3, [r3, r2]
    4f90:	add	r4, r3, #380	; 0x17c
    4f94:	mov	r1, #2
    4f98:	mov	r0, #7
    4f9c:	bl	0 <coda_type_number_new>
    4fa0:	mov	r3, r0
    4fa4:	str	r3, [r4]
    4fa8:	mrc	15, 0, r3, cr13, cr0, {3}
    4fac:	ldr	r2, [pc, #-2244]	; 46f0 <grib_init+0x40b0>
    4fb0:	ldr	r3, [r3, r2]
    4fb4:	add	r3, r3, #380	; 0x17c
    4fb8:	ldr	r3, [r3]
    4fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    4fc0:	mov	r0, r3
    4fc4:	bl	0 <coda_type_number_set_endianness>
    4fc8:	mrc	15, 0, r3, cr13, cr0, {3}
    4fcc:	ldr	r2, [pc, #-2276]	; 46f0 <grib_init+0x40b0>
    4fd0:	ldr	r3, [r3, r2]
    4fd4:	add	r3, r3, #380	; 0x17c
    4fd8:	ldr	r3, [r3]
    4fdc:	mov	r1, #1
    4fe0:	mov	r0, r3
    4fe4:	bl	0 <coda_type_set_read_type>
    4fe8:	mrc	15, 0, r3, cr13, cr0, {3}
    4fec:	ldr	r2, [pc, #-2308]	; 46f0 <grib_init+0x40b0>
    4ff0:	ldr	r3, [r3, r2]
    4ff4:	add	r3, r3, #380	; 0x17c
    4ff8:	ldr	r1, [r3]
    4ffc:	mov	r2, #8
    5000:	mov	r3, #0
    5004:	mov	r0, r1
    5008:	bl	0 <coda_type_set_bit_size>
    500c:	mrc	15, 0, r3, cr13, cr0, {3}
    5010:	ldr	r2, [pc, #-2344]	; 46f0 <grib_init+0x40b0>
    5014:	ldr	r3, [r3, r2]
    5018:	add	r4, r3, #384	; 0x180
    501c:	mov	r1, #2
    5020:	mov	r0, #7
    5024:	bl	0 <coda_type_number_new>
    5028:	mov	r3, r0
    502c:	str	r3, [r4]
    5030:	mrc	15, 0, r3, cr13, cr0, {3}
    5034:	ldr	r2, [pc, #-2380]	; 46f0 <grib_init+0x40b0>
    5038:	ldr	r3, [r3, r2]
    503c:	add	r3, r3, #384	; 0x180
    5040:	ldr	r3, [r3]
    5044:	ldr	r1, [fp, #-20]	; 0xffffffec
    5048:	mov	r0, r3
    504c:	bl	0 <coda_type_number_set_endianness>
    5050:	mrc	15, 0, r3, cr13, cr0, {3}
    5054:	ldr	r2, [pc, #-2412]	; 46f0 <grib_init+0x40b0>
    5058:	ldr	r3, [r3, r2]
    505c:	add	r3, r3, #384	; 0x180
    5060:	ldr	r3, [r3]
    5064:	mov	r1, #5
    5068:	mov	r0, r3
    506c:	bl	0 <coda_type_set_read_type>
    5070:	mrc	15, 0, r3, cr13, cr0, {3}
    5074:	ldr	r2, [pc, #-2444]	; 46f0 <grib_init+0x40b0>
    5078:	ldr	r3, [r3, r2]
    507c:	add	r3, r3, #384	; 0x180
    5080:	ldr	r1, [r3]
    5084:	mov	r2, #32
    5088:	mov	r3, #0
    508c:	mov	r0, r1
    5090:	bl	0 <coda_type_set_bit_size>
    5094:	mrc	15, 0, r3, cr13, cr0, {3}
    5098:	ldr	r2, [pc, #-2480]	; 46f0 <grib_init+0x40b0>
    509c:	ldr	r3, [r3, r2]
    50a0:	add	r4, r3, #388	; 0x184
    50a4:	mov	r1, #2
    50a8:	mov	r0, #7
    50ac:	bl	0 <coda_type_number_new>
    50b0:	mov	r3, r0
    50b4:	str	r3, [r4]
    50b8:	mrc	15, 0, r3, cr13, cr0, {3}
    50bc:	ldr	r2, [pc, #-2516]	; 46f0 <grib_init+0x40b0>
    50c0:	ldr	r3, [r3, r2]
    50c4:	add	r3, r3, #388	; 0x184
    50c8:	ldr	r3, [r3]
    50cc:	ldr	r1, [fp, #-20]	; 0xffffffec
    50d0:	mov	r0, r3
    50d4:	bl	0 <coda_type_number_set_endianness>
    50d8:	mrc	15, 0, r3, cr13, cr0, {3}
    50dc:	ldr	r2, [pc, #-2548]	; 46f0 <grib_init+0x40b0>
    50e0:	ldr	r3, [r3, r2]
    50e4:	add	r3, r3, #388	; 0x184
    50e8:	ldr	r3, [r3]
    50ec:	mov	r1, #5
    50f0:	mov	r0, r3
    50f4:	bl	0 <coda_type_set_read_type>
    50f8:	mrc	15, 0, r3, cr13, cr0, {3}
    50fc:	ldr	r2, [pc, #-2580]	; 46f0 <grib_init+0x40b0>
    5100:	ldr	r3, [r3, r2]
    5104:	add	r3, r3, #388	; 0x184
    5108:	ldr	r1, [r3]
    510c:	mov	r2, #32
    5110:	mov	r3, #0
    5114:	mov	r0, r1
    5118:	bl	0 <coda_type_set_bit_size>
    511c:	mrc	15, 0, r3, cr13, cr0, {3}
    5120:	ldr	r2, [pc, #-2616]	; 46f0 <grib_init+0x40b0>
    5124:	ldr	r3, [r3, r2]
    5128:	add	r3, r3, #388	; 0x184
    512c:	ldr	r3, [r3]
    5130:	movw	r1, #0
    5134:	movt	r1, #0
    5138:	mov	r0, r3
    513c:	bl	0 <coda_type_set_description>
    5140:	mrc	15, 0, r3, cr13, cr0, {3}
    5144:	ldr	r2, [pc, #-2652]	; 46f0 <grib_init+0x40b0>
    5148:	ldr	r3, [r3, r2]
    514c:	add	r4, r3, #392	; 0x188
    5150:	mov	r1, #2
    5154:	mov	r0, #7
    5158:	bl	0 <coda_type_number_new>
    515c:	mov	r3, r0
    5160:	str	r3, [r4]
    5164:	mrc	15, 0, r3, cr13, cr0, {3}
    5168:	ldr	r2, [pc, #-2688]	; 46f0 <grib_init+0x40b0>
    516c:	ldr	r3, [r3, r2]
    5170:	add	r3, r3, #392	; 0x188
    5174:	ldr	r3, [r3]
    5178:	ldr	r1, [fp, #-20]	; 0xffffffec
    517c:	mov	r0, r3
    5180:	bl	0 <coda_type_number_set_endianness>
    5184:	mrc	15, 0, r3, cr13, cr0, {3}
    5188:	ldr	r2, [pc, #-2720]	; 46f0 <grib_init+0x40b0>
    518c:	ldr	r3, [r3, r2]
    5190:	add	r3, r3, #392	; 0x188
    5194:	ldr	r3, [r3]
    5198:	mov	r1, #5
    519c:	mov	r0, r3
    51a0:	bl	0 <coda_type_set_read_type>
    51a4:	mrc	15, 0, r3, cr13, cr0, {3}
    51a8:	ldr	r2, [pc, #-2752]	; 46f0 <grib_init+0x40b0>
    51ac:	ldr	r3, [r3, r2]
    51b0:	add	r3, r3, #392	; 0x188
    51b4:	ldr	r1, [r3]
    51b8:	mov	r2, #32
    51bc:	mov	r3, #0
    51c0:	mov	r0, r1
    51c4:	bl	0 <coda_type_set_bit_size>
    51c8:	mrc	15, 0, r3, cr13, cr0, {3}
    51cc:	ldr	r2, [pc, #-2788]	; 46f0 <grib_init+0x40b0>
    51d0:	ldr	r3, [r3, r2]
    51d4:	add	r3, r3, #392	; 0x188
    51d8:	ldr	r3, [r3]
    51dc:	movw	r1, #0
    51e0:	movt	r1, #0
    51e4:	mov	r0, r3
    51e8:	bl	0 <coda_type_set_description>
    51ec:	mrc	15, 0, r3, cr13, cr0, {3}
    51f0:	ldr	r2, [pc, #-2824]	; 46f0 <grib_init+0x40b0>
    51f4:	ldr	r3, [r3, r2]
    51f8:	add	r4, r3, #396	; 0x18c
    51fc:	mov	r1, #2
    5200:	mov	r0, #7
    5204:	bl	0 <coda_type_number_new>
    5208:	mov	r3, r0
    520c:	str	r3, [r4]
    5210:	mrc	15, 0, r3, cr13, cr0, {3}
    5214:	ldr	r2, [pc, #-2860]	; 46f0 <grib_init+0x40b0>
    5218:	ldr	r3, [r3, r2]
    521c:	add	r3, r3, #396	; 0x18c
    5220:	ldr	r3, [r3]
    5224:	ldr	r1, [fp, #-20]	; 0xffffffec
    5228:	mov	r0, r3
    522c:	bl	0 <coda_type_number_set_endianness>
    5230:	mrc	15, 0, r3, cr13, cr0, {3}
    5234:	ldr	r2, [pc, #-2892]	; 46f0 <grib_init+0x40b0>
    5238:	ldr	r3, [r3, r2]
    523c:	add	r3, r3, #396	; 0x18c
    5240:	ldr	r3, [r3]
    5244:	mov	r1, #5
    5248:	mov	r0, r3
    524c:	bl	0 <coda_type_set_read_type>
    5250:	mrc	15, 0, r3, cr13, cr0, {3}
    5254:	ldr	r2, [pc, #-2924]	; 46f0 <grib_init+0x40b0>
    5258:	ldr	r3, [r3, r2]
    525c:	add	r3, r3, #396	; 0x18c
    5260:	ldr	r1, [r3]
    5264:	mov	r2, #32
    5268:	mov	r3, #0
    526c:	mov	r0, r1
    5270:	bl	0 <coda_type_set_bit_size>
    5274:	mrc	15, 0, r3, cr13, cr0, {3}
    5278:	ldr	r2, [pc, #-2960]	; 46f0 <grib_init+0x40b0>
    527c:	ldr	r3, [r3, r2]
    5280:	add	r4, r3, #400	; 0x190
    5284:	mov	r1, #2
    5288:	mov	r0, #7
    528c:	bl	0 <coda_type_number_new>
    5290:	mov	r3, r0
    5294:	str	r3, [r4]
    5298:	mrc	15, 0, r3, cr13, cr0, {3}
    529c:	ldr	r2, [pc, #-2996]	; 46f0 <grib_init+0x40b0>
    52a0:	ldr	r3, [r3, r2]
    52a4:	add	r3, r3, #400	; 0x190
    52a8:	ldr	r3, [r3]
    52ac:	ldr	r1, [fp, #-20]	; 0xffffffec
    52b0:	mov	r0, r3
    52b4:	bl	0 <coda_type_number_set_endianness>
    52b8:	mrc	15, 0, r3, cr13, cr0, {3}
    52bc:	ldr	r2, [pc, #-3028]	; 46f0 <grib_init+0x40b0>
    52c0:	ldr	r3, [r3, r2]
    52c4:	add	r3, r3, #400	; 0x190
    52c8:	ldr	r3, [r3]
    52cc:	mov	r1, #5
    52d0:	mov	r0, r3
    52d4:	bl	0 <coda_type_set_read_type>
    52d8:	mrc	15, 0, r3, cr13, cr0, {3}
    52dc:	ldr	r2, [pc, #-3060]	; 46f0 <grib_init+0x40b0>
    52e0:	ldr	r3, [r3, r2]
    52e4:	add	r3, r3, #400	; 0x190
    52e8:	ldr	r1, [r3]
    52ec:	mov	r2, #32
    52f0:	mov	r3, #0
    52f4:	mov	r0, r1
    52f8:	bl	0 <coda_type_set_bit_size>
    52fc:	mrc	15, 0, r3, cr13, cr0, {3}
    5300:	ldr	r2, [pc, #-3096]	; 46f0 <grib_init+0x40b0>
    5304:	ldr	r3, [r3, r2]
    5308:	add	r4, r3, #404	; 0x194
    530c:	mov	r1, #2
    5310:	mov	r0, #7
    5314:	bl	0 <coda_type_number_new>
    5318:	mov	r3, r0
    531c:	str	r3, [r4]
    5320:	mrc	15, 0, r3, cr13, cr0, {3}
    5324:	ldr	r2, [pc, #-3132]	; 46f0 <grib_init+0x40b0>
    5328:	ldr	r3, [r3, r2]
    532c:	add	r3, r3, #404	; 0x194
    5330:	ldr	r3, [r3]
    5334:	ldr	r1, [fp, #-20]	; 0xffffffec
    5338:	mov	r0, r3
    533c:	bl	0 <coda_type_number_set_endianness>
    5340:	mrc	15, 0, r3, cr13, cr0, {3}
    5344:	ldr	r2, [pc, #-3164]	; 46f0 <grib_init+0x40b0>
    5348:	ldr	r3, [r3, r2]
    534c:	add	r3, r3, #404	; 0x194
    5350:	ldr	r3, [r3]
    5354:	mov	r1, #4
    5358:	mov	r0, r3
    535c:	bl	0 <coda_type_set_read_type>
    5360:	mrc	15, 0, r3, cr13, cr0, {3}
    5364:	ldr	r2, [pc, #-3196]	; 46f0 <grib_init+0x40b0>
    5368:	ldr	r3, [r3, r2]
    536c:	add	r3, r3, #404	; 0x194
    5370:	ldr	r1, [r3]
    5374:	mov	r2, #32
    5378:	mov	r3, #0
    537c:	mov	r0, r1
    5380:	bl	0 <coda_type_set_bit_size>
    5384:	mrc	15, 0, r3, cr13, cr0, {3}
    5388:	ldr	r2, [pc, #-3232]	; 46f0 <grib_init+0x40b0>
    538c:	ldr	r3, [r3, r2]
    5390:	add	r3, r3, #404	; 0x194
    5394:	ldr	r3, [r3]
    5398:	movw	r1, #0
    539c:	movt	r1, #0
    53a0:	mov	r0, r3
    53a4:	bl	0 <coda_type_set_description>
    53a8:	mrc	15, 0, r3, cr13, cr0, {3}
    53ac:	ldr	r2, [pc, #-3268]	; 46f0 <grib_init+0x40b0>
    53b0:	ldr	r3, [r3, r2]
    53b4:	add	r4, r3, #408	; 0x198
    53b8:	mov	r1, #2
    53bc:	mov	r0, #7
    53c0:	bl	0 <coda_type_number_new>
    53c4:	mov	r3, r0
    53c8:	str	r3, [r4]
    53cc:	mrc	15, 0, r3, cr13, cr0, {3}
    53d0:	ldr	r2, [pc, #-3304]	; 46f0 <grib_init+0x40b0>
    53d4:	ldr	r3, [r3, r2]
    53d8:	add	r3, r3, #408	; 0x198
    53dc:	ldr	r3, [r3]
    53e0:	ldr	r1, [fp, #-20]	; 0xffffffec
    53e4:	mov	r0, r3
    53e8:	bl	0 <coda_type_number_set_endianness>
    53ec:	mrc	15, 0, r3, cr13, cr0, {3}
    53f0:	ldr	r2, [pc, #-3336]	; 46f0 <grib_init+0x40b0>
    53f4:	ldr	r3, [r3, r2]
    53f8:	add	r3, r3, #408	; 0x198
    53fc:	ldr	r3, [r3]
    5400:	mov	r1, #4
    5404:	mov	r0, r3
    5408:	bl	0 <coda_type_set_read_type>
    540c:	mrc	15, 0, r3, cr13, cr0, {3}
    5410:	ldr	r2, [pc, #-3368]	; 46f0 <grib_init+0x40b0>
    5414:	ldr	r3, [r3, r2]
    5418:	add	r3, r3, #408	; 0x198
    541c:	ldr	r1, [r3]
    5420:	mov	r2, #32
    5424:	mov	r3, #0
    5428:	mov	r0, r1
    542c:	bl	0 <coda_type_set_bit_size>
    5430:	mrc	15, 0, r3, cr13, cr0, {3}
    5434:	ldr	r2, [pc, #-3404]	; 46f0 <grib_init+0x40b0>
    5438:	ldr	r3, [r3, r2]
    543c:	add	r3, r3, #408	; 0x198
    5440:	ldr	r3, [r3]
    5444:	movw	r1, #0
    5448:	movt	r1, #0
    544c:	mov	r0, r3
    5450:	bl	0 <coda_type_set_description>
    5454:	mrc	15, 0, r3, cr13, cr0, {3}
    5458:	ldr	r2, [pc, #-3440]	; 46f0 <grib_init+0x40b0>
    545c:	ldr	r3, [r3, r2]
    5460:	add	r4, r3, #412	; 0x19c
    5464:	mov	r1, #2
    5468:	mov	r0, #7
    546c:	bl	0 <coda_type_number_new>
    5470:	mov	r3, r0
    5474:	str	r3, [r4]
    5478:	mrc	15, 0, r3, cr13, cr0, {3}
    547c:	ldr	r2, [pc, #-3476]	; 46f0 <grib_init+0x40b0>
    5480:	ldr	r3, [r3, r2]
    5484:	add	r3, r3, #412	; 0x19c
    5488:	ldr	r3, [r3]
    548c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5490:	mov	r0, r3
    5494:	bl	0 <coda_type_number_set_endianness>
    5498:	mrc	15, 0, r3, cr13, cr0, {3}
    549c:	ldr	r2, [pc, #-3508]	; 46f0 <grib_init+0x40b0>
    54a0:	ldr	r3, [r3, r2]
    54a4:	add	r3, r3, #412	; 0x19c
    54a8:	ldr	r3, [r3]
    54ac:	mov	r1, #1
    54b0:	mov	r0, r3
    54b4:	bl	0 <coda_type_set_read_type>
    54b8:	mrc	15, 0, r3, cr13, cr0, {3}
    54bc:	ldr	r2, [pc, #-3540]	; 46f0 <grib_init+0x40b0>
    54c0:	ldr	r3, [r3, r2]
    54c4:	add	r3, r3, #412	; 0x19c
    54c8:	ldr	r1, [r3]
    54cc:	mov	r2, #8
    54d0:	mov	r3, #0
    54d4:	mov	r0, r1
    54d8:	bl	0 <coda_type_set_bit_size>
    54dc:	mrc	15, 0, r3, cr13, cr0, {3}
    54e0:	ldr	r2, [pc, #-3576]	; 46f0 <grib_init+0x40b0>
    54e4:	ldr	r3, [r3, r2]
    54e8:	add	r3, r3, #412	; 0x19c
    54ec:	ldr	r3, [r3]
    54f0:	movw	r1, #0
    54f4:	movt	r1, #0
    54f8:	mov	r0, r3
    54fc:	bl	0 <coda_type_set_description>
    5500:	mrc	15, 0, r3, cr13, cr0, {3}
    5504:	ldr	r2, [pc, #-3612]	; 46f0 <grib_init+0x40b0>
    5508:	ldr	r3, [r3, r2]
    550c:	add	r4, r3, #416	; 0x1a0
    5510:	mov	r1, #2
    5514:	mov	r0, #7
    5518:	bl	0 <coda_type_number_new>
    551c:	mov	r3, r0
    5520:	str	r3, [r4]
    5524:	mrc	15, 0, r3, cr13, cr0, {3}
    5528:	ldr	r2, [pc, #-3648]	; 46f0 <grib_init+0x40b0>
    552c:	ldr	r3, [r3, r2]
    5530:	add	r3, r3, #416	; 0x1a0
    5534:	ldr	r3, [r3]
    5538:	ldr	r1, [fp, #-20]	; 0xffffffec
    553c:	mov	r0, r3
    5540:	bl	0 <coda_type_number_set_endianness>
    5544:	mrc	15, 0, r3, cr13, cr0, {3}
    5548:	ldr	r2, [pc, #-3680]	; 46f0 <grib_init+0x40b0>
    554c:	ldr	r3, [r3, r2]
    5550:	add	r3, r3, #416	; 0x1a0
    5554:	ldr	r3, [r3]
    5558:	mov	r1, #4
    555c:	mov	r0, r3
    5560:	bl	0 <coda_type_set_read_type>
    5564:	mrc	15, 0, r3, cr13, cr0, {3}
    5568:	ldr	r2, [pc, #-3712]	; 46f0 <grib_init+0x40b0>
    556c:	ldr	r3, [r3, r2]
    5570:	add	r3, r3, #416	; 0x1a0
    5574:	ldr	r1, [r3]
    5578:	mov	r2, #32
    557c:	mov	r3, #0
    5580:	mov	r0, r1
    5584:	bl	0 <coda_type_set_bit_size>
    5588:	mrc	15, 0, r3, cr13, cr0, {3}
    558c:	ldr	r2, [pc, #-3748]	; 46f0 <grib_init+0x40b0>
    5590:	ldr	r3, [r3, r2]
    5594:	add	r3, r3, #416	; 0x1a0
    5598:	ldr	r3, [r3]
    559c:	movw	r1, #0
    55a0:	movt	r1, #0
    55a4:	mov	r0, r3
    55a8:	bl	0 <coda_type_set_description>
    55ac:	mrc	15, 0, r3, cr13, cr0, {3}
    55b0:	ldr	r2, [pc, #-3784]	; 46f0 <grib_init+0x40b0>
    55b4:	ldr	r3, [r3, r2]
    55b8:	add	r4, r3, #420	; 0x1a4
    55bc:	mov	r1, #2
    55c0:	mov	r0, #7
    55c4:	bl	0 <coda_type_number_new>
    55c8:	mov	r3, r0
    55cc:	str	r3, [r4]
    55d0:	mrc	15, 0, r3, cr13, cr0, {3}
    55d4:	ldr	r2, [pc, #-3820]	; 46f0 <grib_init+0x40b0>
    55d8:	ldr	r3, [r3, r2]
    55dc:	add	r3, r3, #420	; 0x1a4
    55e0:	ldr	r3, [r3]
    55e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    55e8:	mov	r0, r3
    55ec:	bl	0 <coda_type_number_set_endianness>
    55f0:	mrc	15, 0, r3, cr13, cr0, {3}
    55f4:	ldr	r2, [pc, #-3852]	; 46f0 <grib_init+0x40b0>
    55f8:	ldr	r3, [r3, r2]
    55fc:	add	r3, r3, #420	; 0x1a4
    5600:	ldr	r3, [r3]
    5604:	mov	r1, #4
    5608:	mov	r0, r3
    560c:	bl	0 <coda_type_set_read_type>
    5610:	mrc	15, 0, r3, cr13, cr0, {3}
    5614:	ldr	r2, [pc, #-3884]	; 46f0 <grib_init+0x40b0>
    5618:	ldr	r3, [r3, r2]
    561c:	add	r3, r3, #420	; 0x1a4
    5620:	ldr	r1, [r3]
    5624:	mov	r2, #32
    5628:	mov	r3, #0
    562c:	mov	r0, r1
    5630:	bl	0 <coda_type_set_bit_size>
    5634:	mrc	15, 0, r3, cr13, cr0, {3}
    5638:	ldr	r2, [pc, #-3920]	; 46f0 <grib_init+0x40b0>
    563c:	ldr	r3, [r3, r2]
    5640:	add	r3, r3, #420	; 0x1a4
    5644:	ldr	r3, [r3]
    5648:	movw	r1, #0
    564c:	movt	r1, #0
    5650:	mov	r0, r3
    5654:	bl	0 <coda_type_set_description>
    5658:	mrc	15, 0, r3, cr13, cr0, {3}
    565c:	ldr	r2, [pc, #-3956]	; 46f0 <grib_init+0x40b0>
    5660:	ldr	r3, [r3, r2]
    5664:	add	r4, r3, #424	; 0x1a8
    5668:	mov	r1, #2
    566c:	mov	r0, #7
    5670:	bl	0 <coda_type_number_new>
    5674:	mov	r3, r0
    5678:	str	r3, [r4]
    567c:	mrc	15, 0, r3, cr13, cr0, {3}
    5680:	ldr	r2, [pc, #-3992]	; 46f0 <grib_init+0x40b0>
    5684:	ldr	r3, [r3, r2]
    5688:	add	r3, r3, #424	; 0x1a8
    568c:	ldr	r3, [r3]
    5690:	ldr	r1, [fp, #-20]	; 0xffffffec
    5694:	mov	r0, r3
    5698:	bl	0 <coda_type_number_set_endianness>
    569c:	mrc	15, 0, r3, cr13, cr0, {3}
    56a0:	ldr	r2, [pc, #-4024]	; 46f0 <grib_init+0x40b0>
    56a4:	ldr	r3, [r3, r2]
    56a8:	add	r3, r3, #424	; 0x1a8
    56ac:	ldr	r3, [r3]
    56b0:	mov	r1, #5
    56b4:	mov	r0, r3
    56b8:	bl	0 <coda_type_set_read_type>
    56bc:	mrc	15, 0, r3, cr13, cr0, {3}
    56c0:	ldr	r2, [pc, #-4056]	; 46f0 <grib_init+0x40b0>
    56c4:	ldr	r3, [r3, r2]
    56c8:	add	r3, r3, #424	; 0x1a8
    56cc:	ldr	r1, [r3]
    56d0:	mov	r2, #32
    56d4:	mov	r3, #0
    56d8:	mov	r0, r1
    56dc:	bl	0 <coda_type_set_bit_size>
    56e0:	mrc	15, 0, r3, cr13, cr0, {3}
    56e4:	ldr	r2, [pc, #-4092]	; 46f0 <grib_init+0x40b0>
    56e8:	ldr	r3, [r3, r2]
    56ec:	add	r3, r3, #424	; 0x1a8
    56f0:	ldr	r3, [r3]
    56f4:	movw	r1, #0
    56f8:	movt	r1, #0
    56fc:	mov	r0, r3
    5700:	bl	0 <coda_type_set_description>
    5704:	mrc	15, 0, r3, cr13, cr0, {3}
    5708:	ldr	r2, [pc, #4088]	; 6708 <grib_init+0x60c8>
    570c:	ldr	r3, [r3, r2]
    5710:	add	r4, r3, #428	; 0x1ac
    5714:	mov	r1, #2
    5718:	mov	r0, #7
    571c:	bl	0 <coda_type_number_new>
    5720:	mov	r3, r0
    5724:	str	r3, [r4]
    5728:	mrc	15, 0, r3, cr13, cr0, {3}
    572c:	ldr	r2, [pc, #4052]	; 6708 <grib_init+0x60c8>
    5730:	ldr	r3, [r3, r2]
    5734:	add	r3, r3, #428	; 0x1ac
    5738:	ldr	r3, [r3]
    573c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5740:	mov	r0, r3
    5744:	bl	0 <coda_type_number_set_endianness>
    5748:	mrc	15, 0, r3, cr13, cr0, {3}
    574c:	ldr	r2, [pc, #4020]	; 6708 <grib_init+0x60c8>
    5750:	ldr	r3, [r3, r2]
    5754:	add	r3, r3, #428	; 0x1ac
    5758:	ldr	r3, [r3]
    575c:	mov	r1, #5
    5760:	mov	r0, r3
    5764:	bl	0 <coda_type_set_read_type>
    5768:	mrc	15, 0, r3, cr13, cr0, {3}
    576c:	ldr	r2, [pc, #3988]	; 6708 <grib_init+0x60c8>
    5770:	ldr	r3, [r3, r2]
    5774:	add	r3, r3, #428	; 0x1ac
    5778:	ldr	r1, [r3]
    577c:	mov	r2, #32
    5780:	mov	r3, #0
    5784:	mov	r0, r1
    5788:	bl	0 <coda_type_set_bit_size>
    578c:	mrc	15, 0, r3, cr13, cr0, {3}
    5790:	ldr	r2, [pc, #3952]	; 6708 <grib_init+0x60c8>
    5794:	ldr	r3, [r3, r2]
    5798:	add	r3, r3, #428	; 0x1ac
    579c:	ldr	r3, [r3]
    57a0:	movw	r1, #0
    57a4:	movt	r1, #0
    57a8:	mov	r0, r3
    57ac:	bl	0 <coda_type_set_description>
    57b0:	mrc	15, 0, r3, cr13, cr0, {3}
    57b4:	ldr	r2, [pc, #3916]	; 6708 <grib_init+0x60c8>
    57b8:	ldr	r3, [r3, r2]
    57bc:	add	r4, r3, #432	; 0x1b0
    57c0:	mov	r1, #2
    57c4:	mov	r0, #7
    57c8:	bl	0 <coda_type_number_new>
    57cc:	mov	r3, r0
    57d0:	str	r3, [r4]
    57d4:	mrc	15, 0, r3, cr13, cr0, {3}
    57d8:	ldr	r2, [pc, #3880]	; 6708 <grib_init+0x60c8>
    57dc:	ldr	r3, [r3, r2]
    57e0:	add	r3, r3, #432	; 0x1b0
    57e4:	ldr	r3, [r3]
    57e8:	ldr	r1, [fp, #-20]	; 0xffffffec
    57ec:	mov	r0, r3
    57f0:	bl	0 <coda_type_number_set_endianness>
    57f4:	mrc	15, 0, r3, cr13, cr0, {3}
    57f8:	ldr	r2, [pc, #3848]	; 6708 <grib_init+0x60c8>
    57fc:	ldr	r3, [r3, r2]
    5800:	add	r3, r3, #432	; 0x1b0
    5804:	ldr	r3, [r3]
    5808:	mov	r1, #5
    580c:	mov	r0, r3
    5810:	bl	0 <coda_type_set_read_type>
    5814:	mrc	15, 0, r3, cr13, cr0, {3}
    5818:	ldr	r2, [pc, #3816]	; 6708 <grib_init+0x60c8>
    581c:	ldr	r3, [r3, r2]
    5820:	add	r3, r3, #432	; 0x1b0
    5824:	ldr	r1, [r3]
    5828:	mov	r2, #32
    582c:	mov	r3, #0
    5830:	mov	r0, r1
    5834:	bl	0 <coda_type_set_bit_size>
    5838:	mrc	15, 0, r3, cr13, cr0, {3}
    583c:	ldr	r2, [pc, #3780]	; 6708 <grib_init+0x60c8>
    5840:	ldr	r3, [r3, r2]
    5844:	add	r3, r3, #432	; 0x1b0
    5848:	ldr	r3, [r3]
    584c:	movw	r1, #0
    5850:	movt	r1, #0
    5854:	mov	r0, r3
    5858:	bl	0 <coda_type_set_description>
    585c:	mrc	15, 0, r3, cr13, cr0, {3}
    5860:	ldr	r2, [pc, #3744]	; 6708 <grib_init+0x60c8>
    5864:	ldr	r3, [r3, r2]
    5868:	add	r4, r3, #436	; 0x1b4
    586c:	mov	r1, #2
    5870:	mov	r0, #7
    5874:	bl	0 <coda_type_number_new>
    5878:	mov	r3, r0
    587c:	str	r3, [r4]
    5880:	mrc	15, 0, r3, cr13, cr0, {3}
    5884:	ldr	r2, [pc, #3708]	; 6708 <grib_init+0x60c8>
    5888:	ldr	r3, [r3, r2]
    588c:	add	r3, r3, #436	; 0x1b4
    5890:	ldr	r3, [r3]
    5894:	ldr	r1, [fp, #-20]	; 0xffffffec
    5898:	mov	r0, r3
    589c:	bl	0 <coda_type_number_set_endianness>
    58a0:	mrc	15, 0, r3, cr13, cr0, {3}
    58a4:	ldr	r2, [pc, #3676]	; 6708 <grib_init+0x60c8>
    58a8:	ldr	r3, [r3, r2]
    58ac:	add	r3, r3, #436	; 0x1b4
    58b0:	ldr	r3, [r3]
    58b4:	mov	r1, #1
    58b8:	mov	r0, r3
    58bc:	bl	0 <coda_type_set_read_type>
    58c0:	mrc	15, 0, r3, cr13, cr0, {3}
    58c4:	ldr	r2, [pc, #3644]	; 6708 <grib_init+0x60c8>
    58c8:	ldr	r3, [r3, r2]
    58cc:	add	r3, r3, #436	; 0x1b4
    58d0:	ldr	r1, [r3]
    58d4:	mov	r2, #8
    58d8:	mov	r3, #0
    58dc:	mov	r0, r1
    58e0:	bl	0 <coda_type_set_bit_size>
    58e4:	mrc	15, 0, r3, cr13, cr0, {3}
    58e8:	ldr	r2, [pc, #3608]	; 6708 <grib_init+0x60c8>
    58ec:	ldr	r3, [r3, r2]
    58f0:	add	r3, r3, #436	; 0x1b4
    58f4:	ldr	r3, [r3]
    58f8:	movw	r1, #0
    58fc:	movt	r1, #0
    5900:	mov	r0, r3
    5904:	bl	0 <coda_type_set_description>
    5908:	mrc	15, 0, r3, cr13, cr0, {3}
    590c:	ldr	r2, [pc, #3572]	; 6708 <grib_init+0x60c8>
    5910:	ldr	r3, [r3, r2]
    5914:	add	r4, r3, #440	; 0x1b8
    5918:	mov	r1, #2
    591c:	mov	r0, #7
    5920:	bl	0 <coda_type_number_new>
    5924:	mov	r3, r0
    5928:	str	r3, [r4]
    592c:	mrc	15, 0, r3, cr13, cr0, {3}
    5930:	ldr	r2, [pc, #3536]	; 6708 <grib_init+0x60c8>
    5934:	ldr	r3, [r3, r2]
    5938:	add	r3, r3, #440	; 0x1b8
    593c:	ldr	r3, [r3]
    5940:	ldr	r1, [fp, #-20]	; 0xffffffec
    5944:	mov	r0, r3
    5948:	bl	0 <coda_type_number_set_endianness>
    594c:	mrc	15, 0, r3, cr13, cr0, {3}
    5950:	ldr	r2, [pc, #3504]	; 6708 <grib_init+0x60c8>
    5954:	ldr	r3, [r3, r2]
    5958:	add	r3, r3, #440	; 0x1b8
    595c:	ldr	r3, [r3]
    5960:	mov	r1, #5
    5964:	mov	r0, r3
    5968:	bl	0 <coda_type_set_read_type>
    596c:	mrc	15, 0, r3, cr13, cr0, {3}
    5970:	ldr	r2, [pc, #3472]	; 6708 <grib_init+0x60c8>
    5974:	ldr	r3, [r3, r2]
    5978:	add	r3, r3, #440	; 0x1b8
    597c:	ldr	r1, [r3]
    5980:	mov	r2, #32
    5984:	mov	r3, #0
    5988:	mov	r0, r1
    598c:	bl	0 <coda_type_set_bit_size>
    5990:	mrc	15, 0, r3, cr13, cr0, {3}
    5994:	ldr	r2, [pc, #3436]	; 6708 <grib_init+0x60c8>
    5998:	ldr	r3, [r3, r2]
    599c:	add	r4, r3, #444	; 0x1bc
    59a0:	mov	r0, #7
    59a4:	bl	0 <coda_type_array_new>
    59a8:	mov	r3, r0
    59ac:	str	r3, [r4]
    59b0:	mrc	15, 0, r3, cr13, cr0, {3}
    59b4:	ldr	r2, [pc, #3404]	; 6708 <grib_init+0x60c8>
    59b8:	ldr	r3, [r3, r2]
    59bc:	add	r3, r3, #444	; 0x1bc
    59c0:	ldr	r3, [r3]
    59c4:	movw	r1, #0
    59c8:	movt	r1, #0
    59cc:	mov	r0, r3
    59d0:	bl	0 <coda_type_set_description>
    59d4:	mrc	15, 0, r3, cr13, cr0, {3}
    59d8:	ldr	r2, [pc, #3368]	; 6708 <grib_init+0x60c8>
    59dc:	ldr	r3, [r3, r2]
    59e0:	add	r3, r3, #444	; 0x1bc
    59e4:	ldr	r0, [r3]
    59e8:	mrc	15, 0, r3, cr13, cr0, {3}
    59ec:	ldr	r2, [pc, #3348]	; 6708 <grib_init+0x60c8>
    59f0:	ldr	r3, [r3, r2]
    59f4:	add	r3, r3, #440	; 0x1b8
    59f8:	ldr	r3, [r3]
    59fc:	mov	r1, r3
    5a00:	bl	0 <coda_type_array_set_base_type>
    5a04:	mrc	15, 0, r3, cr13, cr0, {3}
    5a08:	ldr	r2, [pc, #3320]	; 6708 <grib_init+0x60c8>
    5a0c:	ldr	r3, [r3, r2]
    5a10:	add	r3, r3, #444	; 0x1bc
    5a14:	ldr	r3, [r3]
    5a18:	mov	r1, #0
    5a1c:	mov	r0, r3
    5a20:	bl	0 <coda_type_array_add_variable_dimension>
    5a24:	mrc	15, 0, r3, cr13, cr0, {3}
    5a28:	ldr	r2, [pc, #3288]	; 6708 <grib_init+0x60c8>
    5a2c:	ldr	r3, [r3, r2]
    5a30:	add	r4, r3, #448	; 0x1c0
    5a34:	mov	r1, #2
    5a38:	mov	r0, #7
    5a3c:	bl	0 <coda_type_number_new>
    5a40:	mov	r3, r0
    5a44:	str	r3, [r4]
    5a48:	mrc	15, 0, r3, cr13, cr0, {3}
    5a4c:	ldr	r2, [pc, #3252]	; 6708 <grib_init+0x60c8>
    5a50:	ldr	r3, [r3, r2]
    5a54:	add	r3, r3, #448	; 0x1c0
    5a58:	ldr	r3, [r3]
    5a5c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5a60:	mov	r0, r3
    5a64:	bl	0 <coda_type_number_set_endianness>
    5a68:	mrc	15, 0, r3, cr13, cr0, {3}
    5a6c:	ldr	r2, [pc, #3220]	; 6708 <grib_init+0x60c8>
    5a70:	ldr	r3, [r3, r2]
    5a74:	add	r3, r3, #448	; 0x1c0
    5a78:	ldr	r3, [r3]
    5a7c:	mov	r1, #1
    5a80:	mov	r0, r3
    5a84:	bl	0 <coda_type_set_read_type>
    5a88:	mrc	15, 0, r3, cr13, cr0, {3}
    5a8c:	ldr	r2, [pc, #3188]	; 6708 <grib_init+0x60c8>
    5a90:	ldr	r3, [r3, r2]
    5a94:	add	r3, r3, #448	; 0x1c0
    5a98:	ldr	r1, [r3]
    5a9c:	mov	r2, #8
    5aa0:	mov	r3, #0
    5aa4:	mov	r0, r1
    5aa8:	bl	0 <coda_type_set_bit_size>
    5aac:	mrc	15, 0, r3, cr13, cr0, {3}
    5ab0:	ldr	r2, [pc, #3152]	; 6708 <grib_init+0x60c8>
    5ab4:	ldr	r3, [r3, r2]
    5ab8:	add	r3, r3, #448	; 0x1c0
    5abc:	ldr	r3, [r3]
    5ac0:	movw	r1, #0
    5ac4:	movt	r1, #0
    5ac8:	mov	r0, r3
    5acc:	bl	0 <coda_type_set_description>
    5ad0:	mrc	15, 0, r3, cr13, cr0, {3}
    5ad4:	ldr	r2, [pc, #3116]	; 6708 <grib_init+0x60c8>
    5ad8:	ldr	r3, [r3, r2]
    5adc:	add	r4, r3, #452	; 0x1c4
    5ae0:	mov	r1, #2
    5ae4:	mov	r0, #7
    5ae8:	bl	0 <coda_type_number_new>
    5aec:	mov	r3, r0
    5af0:	str	r3, [r4]
    5af4:	mrc	15, 0, r3, cr13, cr0, {3}
    5af8:	ldr	r2, [pc, #3080]	; 6708 <grib_init+0x60c8>
    5afc:	ldr	r3, [r3, r2]
    5b00:	add	r3, r3, #452	; 0x1c4
    5b04:	ldr	r3, [r3]
    5b08:	ldr	r1, [fp, #-20]	; 0xffffffec
    5b0c:	mov	r0, r3
    5b10:	bl	0 <coda_type_number_set_endianness>
    5b14:	mrc	15, 0, r3, cr13, cr0, {3}
    5b18:	ldr	r2, [pc, #3048]	; 6708 <grib_init+0x60c8>
    5b1c:	ldr	r3, [r3, r2]
    5b20:	add	r3, r3, #452	; 0x1c4
    5b24:	ldr	r3, [r3]
    5b28:	mov	r1, #5
    5b2c:	mov	r0, r3
    5b30:	bl	0 <coda_type_set_read_type>
    5b34:	mrc	15, 0, r3, cr13, cr0, {3}
    5b38:	ldr	r2, [pc, #3016]	; 6708 <grib_init+0x60c8>
    5b3c:	ldr	r3, [r3, r2]
    5b40:	add	r3, r3, #452	; 0x1c4
    5b44:	ldr	r1, [r3]
    5b48:	mov	r2, #32
    5b4c:	mov	r3, #0
    5b50:	mov	r0, r1
    5b54:	bl	0 <coda_type_set_bit_size>
    5b58:	mrc	15, 0, r3, cr13, cr0, {3}
    5b5c:	ldr	r2, [pc, #2980]	; 6708 <grib_init+0x60c8>
    5b60:	ldr	r3, [r3, r2]
    5b64:	add	r3, r3, #452	; 0x1c4
    5b68:	ldr	r3, [r3]
    5b6c:	movw	r1, #0
    5b70:	movt	r1, #0
    5b74:	mov	r0, r3
    5b78:	bl	0 <coda_type_set_description>
    5b7c:	mrc	15, 0, r3, cr13, cr0, {3}
    5b80:	ldr	r2, [pc, #2944]	; 6708 <grib_init+0x60c8>
    5b84:	ldr	r3, [r3, r2]
    5b88:	add	r4, r3, #456	; 0x1c8
    5b8c:	mov	r1, #2
    5b90:	mov	r0, #7
    5b94:	bl	0 <coda_type_number_new>
    5b98:	mov	r3, r0
    5b9c:	str	r3, [r4]
    5ba0:	mrc	15, 0, r3, cr13, cr0, {3}
    5ba4:	ldr	r2, [pc, #2908]	; 6708 <grib_init+0x60c8>
    5ba8:	ldr	r3, [r3, r2]
    5bac:	add	r3, r3, #456	; 0x1c8
    5bb0:	ldr	r3, [r3]
    5bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
    5bb8:	mov	r0, r3
    5bbc:	bl	0 <coda_type_number_set_endianness>
    5bc0:	mrc	15, 0, r3, cr13, cr0, {3}
    5bc4:	ldr	r2, [pc, #2876]	; 6708 <grib_init+0x60c8>
    5bc8:	ldr	r3, [r3, r2]
    5bcc:	add	r3, r3, #456	; 0x1c8
    5bd0:	ldr	r3, [r3]
    5bd4:	mov	r1, #1
    5bd8:	mov	r0, r3
    5bdc:	bl	0 <coda_type_set_read_type>
    5be0:	mrc	15, 0, r3, cr13, cr0, {3}
    5be4:	ldr	r2, [pc, #2844]	; 6708 <grib_init+0x60c8>
    5be8:	ldr	r3, [r3, r2]
    5bec:	add	r3, r3, #456	; 0x1c8
    5bf0:	ldr	r1, [r3]
    5bf4:	mov	r2, #8
    5bf8:	mov	r3, #0
    5bfc:	mov	r0, r1
    5c00:	bl	0 <coda_type_set_bit_size>
    5c04:	mrc	15, 0, r3, cr13, cr0, {3}
    5c08:	ldr	r2, [pc, #2808]	; 6708 <grib_init+0x60c8>
    5c0c:	ldr	r3, [r3, r2]
    5c10:	add	r3, r3, #456	; 0x1c8
    5c14:	ldr	r3, [r3]
    5c18:	movw	r1, #0
    5c1c:	movt	r1, #0
    5c20:	mov	r0, r3
    5c24:	bl	0 <coda_type_set_description>
    5c28:	mrc	15, 0, r3, cr13, cr0, {3}
    5c2c:	ldr	r2, [pc, #2772]	; 6708 <grib_init+0x60c8>
    5c30:	ldr	r3, [r3, r2]
    5c34:	add	r4, r3, #460	; 0x1cc
    5c38:	mov	r1, #2
    5c3c:	mov	r0, #7
    5c40:	bl	0 <coda_type_number_new>
    5c44:	mov	r3, r0
    5c48:	str	r3, [r4]
    5c4c:	mrc	15, 0, r3, cr13, cr0, {3}
    5c50:	ldr	r2, [pc, #2736]	; 6708 <grib_init+0x60c8>
    5c54:	ldr	r3, [r3, r2]
    5c58:	add	r3, r3, #460	; 0x1cc
    5c5c:	ldr	r3, [r3]
    5c60:	ldr	r1, [fp, #-20]	; 0xffffffec
    5c64:	mov	r0, r3
    5c68:	bl	0 <coda_type_number_set_endianness>
    5c6c:	mrc	15, 0, r3, cr13, cr0, {3}
    5c70:	ldr	r2, [pc, #2704]	; 6708 <grib_init+0x60c8>
    5c74:	ldr	r3, [r3, r2]
    5c78:	add	r3, r3, #460	; 0x1cc
    5c7c:	ldr	r3, [r3]
    5c80:	mov	r1, #1
    5c84:	mov	r0, r3
    5c88:	bl	0 <coda_type_set_read_type>
    5c8c:	mrc	15, 0, r3, cr13, cr0, {3}
    5c90:	ldr	r2, [pc, #2672]	; 6708 <grib_init+0x60c8>
    5c94:	ldr	r3, [r3, r2]
    5c98:	add	r3, r3, #460	; 0x1cc
    5c9c:	ldr	r1, [r3]
    5ca0:	mov	r2, #8
    5ca4:	mov	r3, #0
    5ca8:	mov	r0, r1
    5cac:	bl	0 <coda_type_set_bit_size>
    5cb0:	mrc	15, 0, r3, cr13, cr0, {3}
    5cb4:	ldr	r2, [pc, #2636]	; 6708 <grib_init+0x60c8>
    5cb8:	ldr	r3, [r3, r2]
    5cbc:	add	r3, r3, #460	; 0x1cc
    5cc0:	ldr	r3, [r3]
    5cc4:	movw	r1, #0
    5cc8:	movt	r1, #0
    5ccc:	mov	r0, r3
    5cd0:	bl	0 <coda_type_set_description>
    5cd4:	mrc	15, 0, r3, cr13, cr0, {3}
    5cd8:	ldr	r2, [pc, #2600]	; 6708 <grib_init+0x60c8>
    5cdc:	ldr	r3, [r3, r2]
    5ce0:	add	r4, r3, #464	; 0x1d0
    5ce4:	mov	r1, #2
    5ce8:	mov	r0, #7
    5cec:	bl	0 <coda_type_number_new>
    5cf0:	mov	r3, r0
    5cf4:	str	r3, [r4]
    5cf8:	mrc	15, 0, r3, cr13, cr0, {3}
    5cfc:	ldr	r2, [pc, #2564]	; 6708 <grib_init+0x60c8>
    5d00:	ldr	r3, [r3, r2]
    5d04:	add	r3, r3, #464	; 0x1d0
    5d08:	ldr	r3, [r3]
    5d0c:	ldr	r1, [fp, #-20]	; 0xffffffec
    5d10:	mov	r0, r3
    5d14:	bl	0 <coda_type_number_set_endianness>
    5d18:	mrc	15, 0, r3, cr13, cr0, {3}
    5d1c:	ldr	r2, [pc, #2532]	; 6708 <grib_init+0x60c8>
    5d20:	ldr	r3, [r3, r2]
    5d24:	add	r3, r3, #464	; 0x1d0
    5d28:	ldr	r3, [r3]
    5d2c:	mov	r1, #1
    5d30:	mov	r0, r3
    5d34:	bl	0 <coda_type_set_read_type>
    5d38:	mrc	15, 0, r3, cr13, cr0, {3}
    5d3c:	ldr	r2, [pc, #2500]	; 6708 <grib_init+0x60c8>
    5d40:	ldr	r3, [r3, r2]
    5d44:	add	r3, r3, #464	; 0x1d0
    5d48:	ldr	r1, [r3]
    5d4c:	mov	r2, #8
    5d50:	mov	r3, #0
    5d54:	mov	r0, r1
    5d58:	bl	0 <coda_type_set_bit_size>
    5d5c:	mrc	15, 0, r3, cr13, cr0, {3}
    5d60:	ldr	r2, [pc, #2464]	; 6708 <grib_init+0x60c8>
    5d64:	ldr	r3, [r3, r2]
    5d68:	add	r3, r3, #464	; 0x1d0
    5d6c:	ldr	r3, [r3]
    5d70:	movw	r1, #0
    5d74:	movt	r1, #0
    5d78:	mov	r0, r3
    5d7c:	bl	0 <coda_type_set_description>
    5d80:	mrc	15, 0, r3, cr13, cr0, {3}
    5d84:	ldr	r2, [pc, #2428]	; 6708 <grib_init+0x60c8>
    5d88:	ldr	r3, [r3, r2]
    5d8c:	add	r4, r3, #468	; 0x1d4
    5d90:	mov	r1, #2
    5d94:	mov	r0, #7
    5d98:	bl	0 <coda_type_number_new>
    5d9c:	mov	r3, r0
    5da0:	str	r3, [r4]
    5da4:	mrc	15, 0, r3, cr13, cr0, {3}
    5da8:	ldr	r2, [pc, #2392]	; 6708 <grib_init+0x60c8>
    5dac:	ldr	r3, [r3, r2]
    5db0:	add	r3, r3, #468	; 0x1d4
    5db4:	ldr	r3, [r3]
    5db8:	ldr	r1, [fp, #-20]	; 0xffffffec
    5dbc:	mov	r0, r3
    5dc0:	bl	0 <coda_type_number_set_endianness>
    5dc4:	mrc	15, 0, r3, cr13, cr0, {3}
    5dc8:	ldr	r2, [pc, #2360]	; 6708 <grib_init+0x60c8>
    5dcc:	ldr	r3, [r3, r2]
    5dd0:	add	r3, r3, #468	; 0x1d4
    5dd4:	ldr	r3, [r3]
    5dd8:	mov	r1, #1
    5ddc:	mov	r0, r3
    5de0:	bl	0 <coda_type_set_read_type>
    5de4:	mrc	15, 0, r3, cr13, cr0, {3}
    5de8:	ldr	r2, [pc, #2328]	; 6708 <grib_init+0x60c8>
    5dec:	ldr	r3, [r3, r2]
    5df0:	add	r3, r3, #468	; 0x1d4
    5df4:	ldr	r1, [r3]
    5df8:	mov	r2, #8
    5dfc:	mov	r3, #0
    5e00:	mov	r0, r1
    5e04:	bl	0 <coda_type_set_bit_size>
    5e08:	mrc	15, 0, r3, cr13, cr0, {3}
    5e0c:	ldr	r2, [pc, #2292]	; 6708 <grib_init+0x60c8>
    5e10:	ldr	r3, [r3, r2]
    5e14:	add	r3, r3, #468	; 0x1d4
    5e18:	ldr	r3, [r3]
    5e1c:	movw	r1, #0
    5e20:	movt	r1, #0
    5e24:	mov	r0, r3
    5e28:	bl	0 <coda_type_set_description>
    5e2c:	mrc	15, 0, r3, cr13, cr0, {3}
    5e30:	ldr	r2, [pc, #2256]	; 6708 <grib_init+0x60c8>
    5e34:	ldr	r3, [r3, r2]
    5e38:	add	r4, r3, #472	; 0x1d8
    5e3c:	mov	r1, #2
    5e40:	mov	r0, #7
    5e44:	bl	0 <coda_type_number_new>
    5e48:	mov	r3, r0
    5e4c:	str	r3, [r4]
    5e50:	mrc	15, 0, r3, cr13, cr0, {3}
    5e54:	ldr	r2, [pc, #2220]	; 6708 <grib_init+0x60c8>
    5e58:	ldr	r3, [r3, r2]
    5e5c:	add	r3, r3, #472	; 0x1d8
    5e60:	ldr	r3, [r3]
    5e64:	ldr	r1, [fp, #-20]	; 0xffffffec
    5e68:	mov	r0, r3
    5e6c:	bl	0 <coda_type_number_set_endianness>
    5e70:	mrc	15, 0, r3, cr13, cr0, {3}
    5e74:	ldr	r2, [pc, #2188]	; 6708 <grib_init+0x60c8>
    5e78:	ldr	r3, [r3, r2]
    5e7c:	add	r3, r3, #472	; 0x1d8
    5e80:	ldr	r3, [r3]
    5e84:	mov	r1, #1
    5e88:	mov	r0, r3
    5e8c:	bl	0 <coda_type_set_read_type>
    5e90:	mrc	15, 0, r3, cr13, cr0, {3}
    5e94:	ldr	r2, [pc, #2156]	; 6708 <grib_init+0x60c8>
    5e98:	ldr	r3, [r3, r2]
    5e9c:	add	r3, r3, #472	; 0x1d8
    5ea0:	ldr	r1, [r3]
    5ea4:	mov	r2, #8
    5ea8:	mov	r3, #0
    5eac:	mov	r0, r1
    5eb0:	bl	0 <coda_type_set_bit_size>
    5eb4:	mrc	15, 0, r3, cr13, cr0, {3}
    5eb8:	ldr	r2, [pc, #2120]	; 6708 <grib_init+0x60c8>
    5ebc:	ldr	r3, [r3, r2]
    5ec0:	add	r3, r3, #472	; 0x1d8
    5ec4:	ldr	r3, [r3]
    5ec8:	movw	r1, #0
    5ecc:	movt	r1, #0
    5ed0:	mov	r0, r3
    5ed4:	bl	0 <coda_type_set_description>
    5ed8:	mrc	15, 0, r3, cr13, cr0, {3}
    5edc:	ldr	r2, [pc, #2084]	; 6708 <grib_init+0x60c8>
    5ee0:	ldr	r3, [r3, r2]
    5ee4:	add	r4, r3, #476	; 0x1dc
    5ee8:	mov	r1, #2
    5eec:	mov	r0, #7
    5ef0:	bl	0 <coda_type_number_new>
    5ef4:	mov	r3, r0
    5ef8:	str	r3, [r4]
    5efc:	mrc	15, 0, r3, cr13, cr0, {3}
    5f00:	ldr	r2, [pc, #2048]	; 6708 <grib_init+0x60c8>
    5f04:	ldr	r3, [r3, r2]
    5f08:	add	r3, r3, #476	; 0x1dc
    5f0c:	ldr	r3, [r3]
    5f10:	ldr	r1, [fp, #-20]	; 0xffffffec
    5f14:	mov	r0, r3
    5f18:	bl	0 <coda_type_number_set_endianness>
    5f1c:	mrc	15, 0, r3, cr13, cr0, {3}
    5f20:	ldr	r2, [pc, #2016]	; 6708 <grib_init+0x60c8>
    5f24:	ldr	r3, [r3, r2]
    5f28:	add	r3, r3, #476	; 0x1dc
    5f2c:	ldr	r3, [r3]
    5f30:	mov	r1, #1
    5f34:	mov	r0, r3
    5f38:	bl	0 <coda_type_set_read_type>
    5f3c:	mrc	15, 0, r3, cr13, cr0, {3}
    5f40:	ldr	r2, [pc, #1984]	; 6708 <grib_init+0x60c8>
    5f44:	ldr	r3, [r3, r2]
    5f48:	add	r3, r3, #476	; 0x1dc
    5f4c:	ldr	r1, [r3]
    5f50:	mov	r2, #8
    5f54:	mov	r3, #0
    5f58:	mov	r0, r1
    5f5c:	bl	0 <coda_type_set_bit_size>
    5f60:	mrc	15, 0, r3, cr13, cr0, {3}
    5f64:	ldr	r2, [pc, #1948]	; 6708 <grib_init+0x60c8>
    5f68:	ldr	r3, [r3, r2]
    5f6c:	add	r3, r3, #476	; 0x1dc
    5f70:	ldr	r3, [r3]
    5f74:	movw	r1, #0
    5f78:	movt	r1, #0
    5f7c:	mov	r0, r3
    5f80:	bl	0 <coda_type_set_description>
    5f84:	mrc	15, 0, r3, cr13, cr0, {3}
    5f88:	ldr	r2, [pc, #1912]	; 6708 <grib_init+0x60c8>
    5f8c:	ldr	r3, [r3, r2]
    5f90:	add	r4, r3, #480	; 0x1e0
    5f94:	mov	r1, #2
    5f98:	mov	r0, #7
    5f9c:	bl	0 <coda_type_number_new>
    5fa0:	mov	r3, r0
    5fa4:	str	r3, [r4]
    5fa8:	mrc	15, 0, r3, cr13, cr0, {3}
    5fac:	ldr	r2, [pc, #1876]	; 6708 <grib_init+0x60c8>
    5fb0:	ldr	r3, [r3, r2]
    5fb4:	add	r3, r3, #480	; 0x1e0
    5fb8:	ldr	r3, [r3]
    5fbc:	ldr	r1, [fp, #-20]	; 0xffffffec
    5fc0:	mov	r0, r3
    5fc4:	bl	0 <coda_type_number_set_endianness>
    5fc8:	mrc	15, 0, r3, cr13, cr0, {3}
    5fcc:	ldr	r2, [pc, #1844]	; 6708 <grib_init+0x60c8>
    5fd0:	ldr	r3, [r3, r2]
    5fd4:	add	r3, r3, #480	; 0x1e0
    5fd8:	ldr	r3, [r3]
    5fdc:	mov	r1, #3
    5fe0:	mov	r0, r3
    5fe4:	bl	0 <coda_type_set_read_type>
    5fe8:	mrc	15, 0, r3, cr13, cr0, {3}
    5fec:	ldr	r2, [pc, #1812]	; 6708 <grib_init+0x60c8>
    5ff0:	ldr	r3, [r3, r2]
    5ff4:	add	r3, r3, #480	; 0x1e0
    5ff8:	ldr	r1, [r3]
    5ffc:	mov	r2, #16
    6000:	mov	r3, #0
    6004:	mov	r0, r1
    6008:	bl	0 <coda_type_set_bit_size>
    600c:	mrc	15, 0, r3, cr13, cr0, {3}
    6010:	ldr	r2, [pc, #1776]	; 6708 <grib_init+0x60c8>
    6014:	ldr	r3, [r3, r2]
    6018:	add	r3, r3, #480	; 0x1e0
    601c:	ldr	r3, [r3]
    6020:	movw	r1, #0
    6024:	movt	r1, #0
    6028:	mov	r0, r3
    602c:	bl	0 <coda_type_set_description>
    6030:	mrc	15, 0, r3, cr13, cr0, {3}
    6034:	ldr	r2, [pc, #1740]	; 6708 <grib_init+0x60c8>
    6038:	ldr	r3, [r3, r2]
    603c:	add	r4, r3, #484	; 0x1e4
    6040:	mov	r1, #2
    6044:	mov	r0, #7
    6048:	bl	0 <coda_type_number_new>
    604c:	mov	r3, r0
    6050:	str	r3, [r4]
    6054:	mrc	15, 0, r3, cr13, cr0, {3}
    6058:	ldr	r2, [pc, #1704]	; 6708 <grib_init+0x60c8>
    605c:	ldr	r3, [r3, r2]
    6060:	add	r3, r3, #484	; 0x1e4
    6064:	ldr	r3, [r3]
    6068:	ldr	r1, [fp, #-20]	; 0xffffffec
    606c:	mov	r0, r3
    6070:	bl	0 <coda_type_number_set_endianness>
    6074:	mrc	15, 0, r3, cr13, cr0, {3}
    6078:	ldr	r2, [pc, #1672]	; 6708 <grib_init+0x60c8>
    607c:	ldr	r3, [r3, r2]
    6080:	add	r3, r3, #484	; 0x1e4
    6084:	ldr	r3, [r3]
    6088:	mov	r1, #1
    608c:	mov	r0, r3
    6090:	bl	0 <coda_type_set_read_type>
    6094:	mrc	15, 0, r3, cr13, cr0, {3}
    6098:	ldr	r2, [pc, #1640]	; 6708 <grib_init+0x60c8>
    609c:	ldr	r3, [r3, r2]
    60a0:	add	r3, r3, #484	; 0x1e4
    60a4:	ldr	r1, [r3]
    60a8:	mov	r2, #8
    60ac:	mov	r3, #0
    60b0:	mov	r0, r1
    60b4:	bl	0 <coda_type_set_bit_size>
    60b8:	mrc	15, 0, r3, cr13, cr0, {3}
    60bc:	ldr	r2, [pc, #1604]	; 6708 <grib_init+0x60c8>
    60c0:	ldr	r3, [r3, r2]
    60c4:	add	r3, r3, #484	; 0x1e4
    60c8:	ldr	r3, [r3]
    60cc:	movw	r1, #0
    60d0:	movt	r1, #0
    60d4:	mov	r0, r3
    60d8:	bl	0 <coda_type_set_description>
    60dc:	mrc	15, 0, r3, cr13, cr0, {3}
    60e0:	ldr	r2, [pc, #1568]	; 6708 <grib_init+0x60c8>
    60e4:	ldr	r3, [r3, r2]
    60e8:	add	r4, r3, #488	; 0x1e8
    60ec:	mov	r1, #2
    60f0:	mov	r0, #7
    60f4:	bl	0 <coda_type_number_new>
    60f8:	mov	r3, r0
    60fc:	str	r3, [r4]
    6100:	mrc	15, 0, r3, cr13, cr0, {3}
    6104:	ldr	r2, [pc, #1532]	; 6708 <grib_init+0x60c8>
    6108:	ldr	r3, [r3, r2]
    610c:	add	r3, r3, #488	; 0x1e8
    6110:	ldr	r3, [r3]
    6114:	ldr	r1, [fp, #-20]	; 0xffffffec
    6118:	mov	r0, r3
    611c:	bl	0 <coda_type_number_set_endianness>
    6120:	mrc	15, 0, r3, cr13, cr0, {3}
    6124:	ldr	r2, [pc, #1500]	; 6708 <grib_init+0x60c8>
    6128:	ldr	r3, [r3, r2]
    612c:	add	r3, r3, #488	; 0x1e8
    6130:	ldr	r3, [r3]
    6134:	mov	r1, #1
    6138:	mov	r0, r3
    613c:	bl	0 <coda_type_set_read_type>
    6140:	mrc	15, 0, r3, cr13, cr0, {3}
    6144:	ldr	r2, [pc, #1468]	; 6708 <grib_init+0x60c8>
    6148:	ldr	r3, [r3, r2]
    614c:	add	r3, r3, #488	; 0x1e8
    6150:	ldr	r1, [r3]
    6154:	mov	r2, #8
    6158:	mov	r3, #0
    615c:	mov	r0, r1
    6160:	bl	0 <coda_type_set_bit_size>
    6164:	mrc	15, 0, r3, cr13, cr0, {3}
    6168:	ldr	r2, [pc, #1432]	; 6708 <grib_init+0x60c8>
    616c:	ldr	r3, [r3, r2]
    6170:	add	r3, r3, #488	; 0x1e8
    6174:	ldr	r3, [r3]
    6178:	movw	r1, #0
    617c:	movt	r1, #0
    6180:	mov	r0, r3
    6184:	bl	0 <coda_type_set_description>
    6188:	mrc	15, 0, r3, cr13, cr0, {3}
    618c:	ldr	r2, [pc, #1396]	; 6708 <grib_init+0x60c8>
    6190:	ldr	r3, [r3, r2]
    6194:	add	r4, r3, #492	; 0x1ec
    6198:	mov	r1, #2
    619c:	mov	r0, #7
    61a0:	bl	0 <coda_type_number_new>
    61a4:	mov	r3, r0
    61a8:	str	r3, [r4]
    61ac:	mrc	15, 0, r3, cr13, cr0, {3}
    61b0:	ldr	r2, [pc, #1360]	; 6708 <grib_init+0x60c8>
    61b4:	ldr	r3, [r3, r2]
    61b8:	add	r3, r3, #492	; 0x1ec
    61bc:	ldr	r3, [r3]
    61c0:	ldr	r1, [fp, #-20]	; 0xffffffec
    61c4:	mov	r0, r3
    61c8:	bl	0 <coda_type_number_set_endianness>
    61cc:	mrc	15, 0, r3, cr13, cr0, {3}
    61d0:	ldr	r2, [pc, #1328]	; 6708 <grib_init+0x60c8>
    61d4:	ldr	r3, [r3, r2]
    61d8:	add	r3, r3, #492	; 0x1ec
    61dc:	ldr	r3, [r3]
    61e0:	mov	r1, #5
    61e4:	mov	r0, r3
    61e8:	bl	0 <coda_type_set_read_type>
    61ec:	mrc	15, 0, r3, cr13, cr0, {3}
    61f0:	ldr	r2, [pc, #1296]	; 6708 <grib_init+0x60c8>
    61f4:	ldr	r3, [r3, r2]
    61f8:	add	r3, r3, #492	; 0x1ec
    61fc:	ldr	r1, [r3]
    6200:	mov	r2, #32
    6204:	mov	r3, #0
    6208:	mov	r0, r1
    620c:	bl	0 <coda_type_set_bit_size>
    6210:	mrc	15, 0, r3, cr13, cr0, {3}
    6214:	ldr	r2, [pc, #1260]	; 6708 <grib_init+0x60c8>
    6218:	ldr	r3, [r3, r2]
    621c:	add	r3, r3, #492	; 0x1ec
    6220:	ldr	r3, [r3]
    6224:	movw	r1, #0
    6228:	movt	r1, #0
    622c:	mov	r0, r3
    6230:	bl	0 <coda_type_set_description>
    6234:	mrc	15, 0, r3, cr13, cr0, {3}
    6238:	ldr	r2, [pc, #1224]	; 6708 <grib_init+0x60c8>
    623c:	ldr	r3, [r3, r2]
    6240:	add	r4, r3, #496	; 0x1f0
    6244:	mov	r1, #2
    6248:	mov	r0, #7
    624c:	bl	0 <coda_type_number_new>
    6250:	mov	r3, r0
    6254:	str	r3, [r4]
    6258:	mrc	15, 0, r3, cr13, cr0, {3}
    625c:	ldr	r2, [pc, #1188]	; 6708 <grib_init+0x60c8>
    6260:	ldr	r3, [r3, r2]
    6264:	add	r3, r3, #496	; 0x1f0
    6268:	ldr	r3, [r3]
    626c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6270:	mov	r0, r3
    6274:	bl	0 <coda_type_number_set_endianness>
    6278:	mrc	15, 0, r3, cr13, cr0, {3}
    627c:	ldr	r2, [pc, #1156]	; 6708 <grib_init+0x60c8>
    6280:	ldr	r3, [r3, r2]
    6284:	add	r3, r3, #496	; 0x1f0
    6288:	ldr	r3, [r3]
    628c:	mov	r1, #1
    6290:	mov	r0, r3
    6294:	bl	0 <coda_type_set_read_type>
    6298:	mrc	15, 0, r3, cr13, cr0, {3}
    629c:	ldr	r2, [pc, #1124]	; 6708 <grib_init+0x60c8>
    62a0:	ldr	r3, [r3, r2]
    62a4:	add	r3, r3, #496	; 0x1f0
    62a8:	ldr	r1, [r3]
    62ac:	mov	r2, #8
    62b0:	mov	r3, #0
    62b4:	mov	r0, r1
    62b8:	bl	0 <coda_type_set_bit_size>
    62bc:	mrc	15, 0, r3, cr13, cr0, {3}
    62c0:	ldr	r2, [pc, #1088]	; 6708 <grib_init+0x60c8>
    62c4:	ldr	r3, [r3, r2]
    62c8:	add	r3, r3, #496	; 0x1f0
    62cc:	ldr	r3, [r3]
    62d0:	movw	r1, #0
    62d4:	movt	r1, #0
    62d8:	mov	r0, r3
    62dc:	bl	0 <coda_type_set_description>
    62e0:	mrc	15, 0, r3, cr13, cr0, {3}
    62e4:	ldr	r2, [pc, #1052]	; 6708 <grib_init+0x60c8>
    62e8:	ldr	r3, [r3, r2]
    62ec:	add	r4, r3, #500	; 0x1f4
    62f0:	mov	r1, #3
    62f4:	mov	r0, #7
    62f8:	bl	0 <coda_type_number_new>
    62fc:	mov	r3, r0
    6300:	str	r3, [r4]
    6304:	mrc	15, 0, r3, cr13, cr0, {3}
    6308:	ldr	r2, [pc, #1016]	; 6708 <grib_init+0x60c8>
    630c:	ldr	r3, [r3, r2]
    6310:	add	r3, r3, #500	; 0x1f4
    6314:	ldr	r3, [r3]
    6318:	ldr	r1, [fp, #-20]	; 0xffffffec
    631c:	mov	r0, r3
    6320:	bl	0 <coda_type_number_set_endianness>
    6324:	mrc	15, 0, r3, cr13, cr0, {3}
    6328:	ldr	r2, [pc, #984]	; 6708 <grib_init+0x60c8>
    632c:	ldr	r3, [r3, r2]
    6330:	add	r3, r3, #500	; 0x1f4
    6334:	ldr	r3, [r3]
    6338:	mov	r1, #9
    633c:	mov	r0, r3
    6340:	bl	0 <coda_type_set_read_type>
    6344:	mrc	15, 0, r3, cr13, cr0, {3}
    6348:	ldr	r2, [pc, #952]	; 6708 <grib_init+0x60c8>
    634c:	ldr	r3, [r3, r2]
    6350:	add	r3, r3, #500	; 0x1f4
    6354:	ldr	r1, [r3]
    6358:	mov	r2, #64	; 0x40
    635c:	mov	r3, #0
    6360:	mov	r0, r1
    6364:	bl	0 <coda_type_set_bit_size>
    6368:	mrc	15, 0, r3, cr13, cr0, {3}
    636c:	ldr	r2, [pc, #916]	; 6708 <grib_init+0x60c8>
    6370:	ldr	r3, [r3, r2]
    6374:	add	r3, r3, #500	; 0x1f4
    6378:	ldr	r3, [r3]
    637c:	movw	r1, #0
    6380:	movt	r1, #0
    6384:	mov	r0, r3
    6388:	bl	0 <coda_type_set_description>
    638c:	mrc	15, 0, r3, cr13, cr0, {3}
    6390:	ldr	r2, [pc, #880]	; 6708 <grib_init+0x60c8>
    6394:	ldr	r3, [r3, r2]
    6398:	add	r4, r3, #504	; 0x1f8
    639c:	mov	r1, #2
    63a0:	mov	r0, #7
    63a4:	bl	0 <coda_type_number_new>
    63a8:	mov	r3, r0
    63ac:	str	r3, [r4]
    63b0:	mrc	15, 0, r3, cr13, cr0, {3}
    63b4:	ldr	r2, [pc, #844]	; 6708 <grib_init+0x60c8>
    63b8:	ldr	r3, [r3, r2]
    63bc:	add	r3, r3, #504	; 0x1f8
    63c0:	ldr	r3, [r3]
    63c4:	ldr	r1, [fp, #-20]	; 0xffffffec
    63c8:	mov	r0, r3
    63cc:	bl	0 <coda_type_number_set_endianness>
    63d0:	mrc	15, 0, r3, cr13, cr0, {3}
    63d4:	ldr	r2, [pc, #812]	; 6708 <grib_init+0x60c8>
    63d8:	ldr	r3, [r3, r2]
    63dc:	add	r3, r3, #504	; 0x1f8
    63e0:	ldr	r3, [r3]
    63e4:	mov	r1, #1
    63e8:	mov	r0, r3
    63ec:	bl	0 <coda_type_set_read_type>
    63f0:	mrc	15, 0, r3, cr13, cr0, {3}
    63f4:	ldr	r2, [pc, #780]	; 6708 <grib_init+0x60c8>
    63f8:	ldr	r3, [r3, r2]
    63fc:	add	r3, r3, #504	; 0x1f8
    6400:	ldr	r1, [r3]
    6404:	mov	r2, #8
    6408:	mov	r3, #0
    640c:	mov	r0, r1
    6410:	bl	0 <coda_type_set_bit_size>
    6414:	mrc	15, 0, r3, cr13, cr0, {3}
    6418:	ldr	r2, [pc, #744]	; 6708 <grib_init+0x60c8>
    641c:	ldr	r3, [r3, r2]
    6420:	add	r3, r3, #504	; 0x1f8
    6424:	ldr	r3, [r3]
    6428:	movw	r1, #0
    642c:	movt	r1, #0
    6430:	mov	r0, r3
    6434:	bl	0 <coda_type_set_description>
    6438:	mrc	15, 0, r3, cr13, cr0, {3}
    643c:	ldr	r2, [pc, #708]	; 6708 <grib_init+0x60c8>
    6440:	ldr	r3, [r3, r2]
    6444:	add	r4, r3, #508	; 0x1fc
    6448:	mov	r1, #3
    644c:	mov	r0, #7
    6450:	bl	0 <coda_type_number_new>
    6454:	mov	r3, r0
    6458:	str	r3, [r4]
    645c:	mrc	15, 0, r3, cr13, cr0, {3}
    6460:	ldr	r2, [pc, #672]	; 6708 <grib_init+0x60c8>
    6464:	ldr	r3, [r3, r2]
    6468:	add	r3, r3, #508	; 0x1fc
    646c:	ldr	r3, [r3]
    6470:	ldr	r1, [fp, #-20]	; 0xffffffec
    6474:	mov	r0, r3
    6478:	bl	0 <coda_type_number_set_endianness>
    647c:	mrc	15, 0, r3, cr13, cr0, {3}
    6480:	ldr	r2, [pc, #640]	; 6708 <grib_init+0x60c8>
    6484:	ldr	r3, [r3, r2]
    6488:	add	r3, r3, #508	; 0x1fc
    648c:	ldr	r3, [r3]
    6490:	mov	r1, #9
    6494:	mov	r0, r3
    6498:	bl	0 <coda_type_set_read_type>
    649c:	mrc	15, 0, r3, cr13, cr0, {3}
    64a0:	ldr	r2, [pc, #608]	; 6708 <grib_init+0x60c8>
    64a4:	ldr	r3, [r3, r2]
    64a8:	add	r3, r3, #508	; 0x1fc
    64ac:	ldr	r1, [r3]
    64b0:	mov	r2, #64	; 0x40
    64b4:	mov	r3, #0
    64b8:	mov	r0, r1
    64bc:	bl	0 <coda_type_set_bit_size>
    64c0:	mrc	15, 0, r3, cr13, cr0, {3}
    64c4:	ldr	r2, [pc, #572]	; 6708 <grib_init+0x60c8>
    64c8:	ldr	r3, [r3, r2]
    64cc:	add	r3, r3, #508	; 0x1fc
    64d0:	ldr	r3, [r3]
    64d4:	movw	r1, #0
    64d8:	movt	r1, #0
    64dc:	mov	r0, r3
    64e0:	bl	0 <coda_type_set_description>
    64e4:	mrc	15, 0, r3, cr13, cr0, {3}
    64e8:	ldr	r2, [pc, #536]	; 6708 <grib_init+0x60c8>
    64ec:	ldr	r3, [r3, r2]
    64f0:	add	r4, r3, #512	; 0x200
    64f4:	mov	r1, #3
    64f8:	mov	r0, #7
    64fc:	bl	0 <coda_type_number_new>
    6500:	mov	r3, r0
    6504:	str	r3, [r4]
    6508:	mrc	15, 0, r3, cr13, cr0, {3}
    650c:	ldr	r2, [pc, #500]	; 6708 <grib_init+0x60c8>
    6510:	ldr	r3, [r3, r2]
    6514:	add	r3, r3, #512	; 0x200
    6518:	ldr	r3, [r3]
    651c:	ldr	r1, [fp, #-20]	; 0xffffffec
    6520:	mov	r0, r3
    6524:	bl	0 <coda_type_number_set_endianness>
    6528:	mrc	15, 0, r3, cr13, cr0, {3}
    652c:	ldr	r2, [pc, #468]	; 6708 <grib_init+0x60c8>
    6530:	ldr	r3, [r3, r2]
    6534:	add	r3, r3, #512	; 0x200
    6538:	ldr	r3, [r3]
    653c:	mov	r1, #8
    6540:	mov	r0, r3
    6544:	bl	0 <coda_type_set_read_type>
    6548:	mrc	15, 0, r3, cr13, cr0, {3}
    654c:	ldr	r2, [pc, #436]	; 6708 <grib_init+0x60c8>
    6550:	ldr	r3, [r3, r2]
    6554:	add	r3, r3, #512	; 0x200
    6558:	ldr	r1, [r3]
    655c:	mov	r2, #32
    6560:	mov	r3, #0
    6564:	mov	r0, r1
    6568:	bl	0 <coda_type_set_bit_size>
    656c:	mrc	15, 0, r3, cr13, cr0, {3}
    6570:	ldr	r2, [pc, #400]	; 6708 <grib_init+0x60c8>
    6574:	ldr	r3, [r3, r2]
    6578:	add	r4, r3, #516	; 0x204
    657c:	mov	r0, #7
    6580:	bl	0 <coda_type_array_new>
    6584:	mov	r3, r0
    6588:	str	r3, [r4]
    658c:	mrc	15, 0, r3, cr13, cr0, {3}
    6590:	ldr	r2, [pc, #368]	; 6708 <grib_init+0x60c8>
    6594:	ldr	r3, [r3, r2]
    6598:	add	r3, r3, #516	; 0x204
    659c:	ldr	r3, [r3]
    65a0:	movw	r1, #0
    65a4:	movt	r1, #0
    65a8:	mov	r0, r3
    65ac:	bl	0 <coda_type_set_description>
    65b0:	mrc	15, 0, r3, cr13, cr0, {3}
    65b4:	ldr	r2, [pc, #332]	; 6708 <grib_init+0x60c8>
    65b8:	ldr	r3, [r3, r2]
    65bc:	add	r3, r3, #516	; 0x204
    65c0:	ldr	r0, [r3]
    65c4:	mrc	15, 0, r3, cr13, cr0, {3}
    65c8:	ldr	r2, [pc, #312]	; 6708 <grib_init+0x60c8>
    65cc:	ldr	r3, [r3, r2]
    65d0:	add	r3, r3, #512	; 0x200
    65d4:	ldr	r3, [r3]
    65d8:	mov	r1, r3
    65dc:	bl	0 <coda_type_array_set_base_type>
    65e0:	mrc	15, 0, r3, cr13, cr0, {3}
    65e4:	ldr	r2, [pc, #284]	; 6708 <grib_init+0x60c8>
    65e8:	ldr	r3, [r3, r2]
    65ec:	add	r3, r3, #516	; 0x204
    65f0:	ldr	r3, [r3]
    65f4:	mov	r1, #0
    65f8:	mov	r0, r3
    65fc:	bl	0 <coda_type_array_add_variable_dimension>
    6600:	mrc	15, 0, r3, cr13, cr0, {3}
    6604:	ldr	r2, [pc, #252]	; 6708 <grib_init+0x60c8>
    6608:	ldr	r3, [r3, r2]
    660c:	add	r4, r3, #520	; 0x208
    6610:	mov	r1, #2
    6614:	mov	r0, #7
    6618:	bl	0 <coda_type_number_new>
    661c:	mov	r3, r0
    6620:	str	r3, [r4]
    6624:	mrc	15, 0, r3, cr13, cr0, {3}
    6628:	ldr	r2, [pc, #216]	; 6708 <grib_init+0x60c8>
    662c:	ldr	r3, [r3, r2]
    6630:	add	r3, r3, #520	; 0x208
    6634:	ldr	r3, [r3]
    6638:	ldr	r1, [fp, #-20]	; 0xffffffec
    663c:	mov	r0, r3
    6640:	bl	0 <coda_type_number_set_endianness>
    6644:	mrc	15, 0, r3, cr13, cr0, {3}
    6648:	ldr	r2, [pc, #184]	; 6708 <grib_init+0x60c8>
    664c:	ldr	r3, [r3, r2]
    6650:	add	r3, r3, #520	; 0x208
    6654:	ldr	r3, [r3]
    6658:	mov	r1, #3
    665c:	mov	r0, r3
    6660:	bl	0 <coda_type_set_read_type>
    6664:	mrc	15, 0, r3, cr13, cr0, {3}
    6668:	ldr	r2, [pc, #152]	; 6708 <grib_init+0x60c8>
    666c:	ldr	r3, [r3, r2]
    6670:	add	r3, r3, #520	; 0x208
    6674:	ldr	r1, [r3]
    6678:	mov	r2, #16
    667c:	mov	r3, #0
    6680:	mov	r0, r1
    6684:	bl	0 <coda_type_set_bit_size>
    6688:	mrc	15, 0, r3, cr13, cr0, {3}
    668c:	ldr	r2, [pc, #116]	; 6708 <grib_init+0x60c8>
    6690:	ldr	r3, [r3, r2]
    6694:	add	r3, r3, #520	; 0x208
    6698:	ldr	r3, [r3]
    669c:	movw	r1, #0
    66a0:	movt	r1, #0
    66a4:	mov	r0, r3
    66a8:	bl	0 <coda_type_set_description>
    66ac:	mrc	15, 0, r3, cr13, cr0, {3}
    66b0:	ldr	r2, [pc, #80]	; 6708 <grib_init+0x60c8>
    66b4:	ldr	r3, [r3, r2]
    66b8:	add	r4, r3, #524	; 0x20c
    66bc:	mov	r1, #2
    66c0:	mov	r0, #7
    66c4:	bl	0 <coda_type_number_new>
    66c8:	mov	r3, r0
    66cc:	str	r3, [r4]
    66d0:	mrc	15, 0, r3, cr13, cr0, {3}
    66d4:	ldr	r2, [pc, #44]	; 6708 <grib_init+0x60c8>
    66d8:	ldr	r3, [r3, r2]
    66dc:	add	r3, r3, #524	; 0x20c
    66e0:	ldr	r3, [r3]
    66e4:	ldr	r1, [fp, #-20]	; 0xffffffec
    66e8:	mov	r0, r3
    66ec:	bl	0 <coda_type_number_set_endianness>
    66f0:	mrc	15, 0, r3, cr13, cr0, {3}
    66f4:	ldr	r2, [pc, #12]	; 6708 <grib_init+0x60c8>
    66f8:	ldr	r3, [r3, r2]
    66fc:	add	r3, r3, #524	; 0x20c
    6700:	ldr	r3, [r3]
    6704:	b	6710 <grib_init+0x60d0>
	...
    6710:	mov	r1, #1
    6714:	mov	r0, r3
    6718:	bl	0 <coda_type_set_read_type>
    671c:	mrc	15, 0, r3, cr13, cr0, {3}
    6720:	ldr	r2, [pc, #-28]	; 670c <grib_init+0x60cc>
    6724:	ldr	r3, [r3, r2]
    6728:	add	r3, r3, #524	; 0x20c
    672c:	ldr	r1, [r3]
    6730:	mov	r2, #8
    6734:	mov	r3, #0
    6738:	mov	r0, r1
    673c:	bl	0 <coda_type_set_bit_size>
    6740:	mrc	15, 0, r3, cr13, cr0, {3}
    6744:	ldr	r2, [pc, #-64]	; 670c <grib_init+0x60cc>
    6748:	ldr	r3, [r3, r2]
    674c:	add	r3, r3, #524	; 0x20c
    6750:	ldr	r3, [r3]
    6754:	movw	r1, #0
    6758:	movt	r1, #0
    675c:	mov	r0, r3
    6760:	bl	0 <coda_type_set_description>
    6764:	mrc	15, 0, r3, cr13, cr0, {3}
    6768:	ldr	r2, [pc, #-100]	; 670c <grib_init+0x60cc>
    676c:	ldr	r3, [r3, r2]
    6770:	add	r4, r3, #528	; 0x210
    6774:	mov	r1, #2
    6778:	mov	r0, #7
    677c:	bl	0 <coda_type_number_new>
    6780:	mov	r3, r0
    6784:	str	r3, [r4]
    6788:	mrc	15, 0, r3, cr13, cr0, {3}
    678c:	ldr	r2, [pc, #-136]	; 670c <grib_init+0x60cc>
    6790:	ldr	r3, [r3, r2]
    6794:	add	r3, r3, #528	; 0x210
    6798:	ldr	r3, [r3]
    679c:	ldr	r1, [fp, #-20]	; 0xffffffec
    67a0:	mov	r0, r3
    67a4:	bl	0 <coda_type_number_set_endianness>
    67a8:	mrc	15, 0, r3, cr13, cr0, {3}
    67ac:	ldr	r2, [pc, #-168]	; 670c <grib_init+0x60cc>
    67b0:	ldr	r3, [r3, r2]
    67b4:	add	r3, r3, #528	; 0x210
    67b8:	ldr	r3, [r3]
    67bc:	mov	r1, #2
    67c0:	mov	r0, r3
    67c4:	bl	0 <coda_type_set_read_type>
    67c8:	mrc	15, 0, r3, cr13, cr0, {3}
    67cc:	ldr	r2, [pc, #-200]	; 670c <grib_init+0x60cc>
    67d0:	ldr	r3, [r3, r2]
    67d4:	add	r3, r3, #528	; 0x210
    67d8:	ldr	r1, [r3]
    67dc:	mov	r2, #16
    67e0:	mov	r3, #0
    67e4:	mov	r0, r1
    67e8:	bl	0 <coda_type_set_bit_size>
    67ec:	mrc	15, 0, r3, cr13, cr0, {3}
    67f0:	ldr	r2, [pc, #-236]	; 670c <grib_init+0x60cc>
    67f4:	ldr	r3, [r3, r2]
    67f8:	add	r3, r3, #528	; 0x210
    67fc:	ldr	r3, [r3]
    6800:	movw	r1, #0
    6804:	movt	r1, #0
    6808:	mov	r0, r3
    680c:	bl	0 <coda_type_set_description>
    6810:	mrc	15, 0, r3, cr13, cr0, {3}
    6814:	ldr	r2, [pc, #-272]	; 670c <grib_init+0x60cc>
    6818:	ldr	r3, [r3, r2]
    681c:	add	r4, r3, #532	; 0x214
    6820:	mov	r1, #3
    6824:	mov	r0, #7
    6828:	bl	0 <coda_type_number_new>
    682c:	mov	r3, r0
    6830:	str	r3, [r4]
    6834:	mrc	15, 0, r3, cr13, cr0, {3}
    6838:	ldr	r2, [pc, #-308]	; 670c <grib_init+0x60cc>
    683c:	ldr	r3, [r3, r2]
    6840:	add	r3, r3, #532	; 0x214
    6844:	ldr	r3, [r3]
    6848:	ldr	r1, [fp, #-20]	; 0xffffffec
    684c:	mov	r0, r3
    6850:	bl	0 <coda_type_number_set_endianness>
    6854:	mrc	15, 0, r3, cr13, cr0, {3}
    6858:	ldr	r2, [pc, #-340]	; 670c <grib_init+0x60cc>
    685c:	ldr	r3, [r3, r2]
    6860:	add	r3, r3, #532	; 0x214
    6864:	ldr	r3, [r3]
    6868:	mov	r1, #8
    686c:	mov	r0, r3
    6870:	bl	0 <coda_type_set_read_type>
    6874:	mrc	15, 0, r3, cr13, cr0, {3}
    6878:	ldr	r2, [pc, #-372]	; 670c <grib_init+0x60cc>
    687c:	ldr	r3, [r3, r2]
    6880:	add	r3, r3, #532	; 0x214
    6884:	ldr	r1, [r3]
    6888:	mov	r2, #32
    688c:	mov	r3, #0
    6890:	mov	r0, r1
    6894:	bl	0 <coda_type_set_bit_size>
    6898:	mrc	15, 0, r3, cr13, cr0, {3}
    689c:	ldr	r2, [pc, #-408]	; 670c <grib_init+0x60cc>
    68a0:	ldr	r3, [r3, r2]
    68a4:	add	r3, r3, #532	; 0x214
    68a8:	ldr	r3, [r3]
    68ac:	movw	r1, #0
    68b0:	movt	r1, #0
    68b4:	mov	r0, r3
    68b8:	bl	0 <coda_type_set_description>
    68bc:	mrc	15, 0, r3, cr13, cr0, {3}
    68c0:	ldr	r2, [pc, #-444]	; 670c <grib_init+0x60cc>
    68c4:	ldr	r3, [r3, r2]
    68c8:	add	r4, r3, #536	; 0x218
    68cc:	mov	r0, #7
    68d0:	bl	0 <coda_type_array_new>
    68d4:	mov	r3, r0
    68d8:	str	r3, [r4]
    68dc:	mov	r1, #3
    68e0:	mov	r0, #7
    68e4:	bl	0 <coda_type_number_new>
    68e8:	str	r0, [fp, #-24]	; 0xffffffe8
    68ec:	ldr	r1, [fp, #-20]	; 0xffffffec
    68f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
    68f4:	bl	0 <coda_type_number_set_endianness>
    68f8:	mov	r1, #8
    68fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6900:	bl	0 <coda_type_set_read_type>
    6904:	mov	r2, #32
    6908:	mov	r3, #0
    690c:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6910:	bl	0 <coda_type_set_bit_size>
    6914:	mrc	15, 0, r3, cr13, cr0, {3}
    6918:	ldr	r2, [pc, #-532]	; 670c <grib_init+0x60cc>
    691c:	ldr	r3, [r3, r2]
    6920:	add	r3, r3, #536	; 0x218
    6924:	ldr	r3, [r3]
    6928:	ldr	r1, [fp, #-24]	; 0xffffffe8
    692c:	mov	r0, r3
    6930:	bl	0 <coda_type_array_set_base_type>
    6934:	ldr	r0, [fp, #-24]	; 0xffffffe8
    6938:	bl	0 <coda_type_release>
    693c:	mrc	15, 0, r3, cr13, cr0, {3}
    6940:	ldr	r2, [pc, #-572]	; 670c <grib_init+0x60cc>
    6944:	ldr	r3, [r3, r2]
    6948:	add	r3, r3, #536	; 0x218
    694c:	ldr	r3, [r3]
    6950:	mov	r1, #0
    6954:	mov	r0, r3
    6958:	bl	0 <coda_type_array_add_variable_dimension>
    695c:	mrc	15, 0, r3, cr13, cr0, {3}
    6960:	ldr	r2, [pc, #-604]	; 670c <grib_init+0x60cc>
    6964:	ldr	r3, [r3, r2]
    6968:	add	r4, r3, #540	; 0x21c
    696c:	mov	r0, #7
    6970:	bl	0 <coda_type_record_new>
    6974:	mov	r3, r0
    6978:	str	r3, [r4]
    697c:	movw	r0, #0
    6980:	movt	r0, #0
    6984:	bl	0 <coda_type_record_field_new>
    6988:	str	r0, [fp, #-28]	; 0xffffffe4
    698c:	mrc	15, 0, r3, cr13, cr0, {3}
    6990:	ldr	r2, [pc, #-652]	; 670c <grib_init+0x60cc>
    6994:	ldr	r3, [r3, r2]
    6998:	add	r3, r3, #276	; 0x114
    699c:	ldr	r3, [r3]
    69a0:	mov	r1, r3
    69a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    69a8:	bl	0 <coda_type_record_field_set_type>
    69ac:	mrc	15, 0, r3, cr13, cr0, {3}
    69b0:	ldr	r2, [pc, #-684]	; 670c <grib_init+0x60cc>
    69b4:	ldr	r3, [r3, r2]
    69b8:	add	r3, r3, #540	; 0x21c
    69bc:	ldr	r3, [r3]
    69c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    69c4:	mov	r0, r3
    69c8:	bl	0 <coda_type_record_add_field>
    69cc:	movw	r0, #0
    69d0:	movt	r0, #0
    69d4:	bl	0 <coda_type_record_field_new>
    69d8:	str	r0, [fp, #-28]	; 0xffffffe4
    69dc:	mrc	15, 0, r3, cr13, cr0, {3}
    69e0:	ldr	r2, [pc, #-732]	; 670c <grib_init+0x60cc>
    69e4:	ldr	r3, [r3, r2]
    69e8:	add	r3, r3, #448	; 0x1c0
    69ec:	ldr	r3, [r3]
    69f0:	mov	r1, r3
    69f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    69f8:	bl	0 <coda_type_record_field_set_type>
    69fc:	mrc	15, 0, r3, cr13, cr0, {3}
    6a00:	ldr	r2, [pc, #-764]	; 670c <grib_init+0x60cc>
    6a04:	ldr	r3, [r3, r2]
    6a08:	add	r3, r3, #540	; 0x21c
    6a0c:	ldr	r3, [r3]
    6a10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6a14:	mov	r0, r3
    6a18:	bl	0 <coda_type_record_add_field>
    6a1c:	movw	r0, #0
    6a20:	movt	r0, #0
    6a24:	bl	0 <coda_type_record_field_new>
    6a28:	str	r0, [fp, #-28]	; 0xffffffe4
    6a2c:	mrc	15, 0, r3, cr13, cr0, {3}
    6a30:	ldr	r2, [pc, #-812]	; 670c <grib_init+0x60cc>
    6a34:	ldr	r3, [r3, r2]
    6a38:	add	r3, r3, #452	; 0x1c4
    6a3c:	ldr	r3, [r3]
    6a40:	mov	r1, r3
    6a44:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6a48:	bl	0 <coda_type_record_field_set_type>
    6a4c:	mrc	15, 0, r3, cr13, cr0, {3}
    6a50:	ldr	r2, [pc, #-844]	; 670c <grib_init+0x60cc>
    6a54:	ldr	r3, [r3, r2]
    6a58:	add	r3, r3, #540	; 0x21c
    6a5c:	ldr	r3, [r3]
    6a60:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6a64:	mov	r0, r3
    6a68:	bl	0 <coda_type_record_add_field>
    6a6c:	movw	r0, #0
    6a70:	movt	r0, #0
    6a74:	bl	0 <coda_type_record_field_new>
    6a78:	str	r0, [fp, #-28]	; 0xffffffe4
    6a7c:	mrc	15, 0, r3, cr13, cr0, {3}
    6a80:	ldr	r2, [pc, #-892]	; 670c <grib_init+0x60cc>
    6a84:	ldr	r3, [r3, r2]
    6a88:	add	r3, r3, #456	; 0x1c8
    6a8c:	ldr	r3, [r3]
    6a90:	mov	r1, r3
    6a94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6a98:	bl	0 <coda_type_record_field_set_type>
    6a9c:	mrc	15, 0, r3, cr13, cr0, {3}
    6aa0:	ldr	r2, [pc, #-924]	; 670c <grib_init+0x60cc>
    6aa4:	ldr	r3, [r3, r2]
    6aa8:	add	r3, r3, #540	; 0x21c
    6aac:	ldr	r3, [r3]
    6ab0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6ab4:	mov	r0, r3
    6ab8:	bl	0 <coda_type_record_add_field>
    6abc:	movw	r0, #0
    6ac0:	movt	r0, #0
    6ac4:	bl	0 <coda_type_record_field_new>
    6ac8:	str	r0, [fp, #-28]	; 0xffffffe4
    6acc:	mrc	15, 0, r3, cr13, cr0, {3}
    6ad0:	ldr	r2, [pc, #-972]	; 670c <grib_init+0x60cc>
    6ad4:	ldr	r3, [r3, r2]
    6ad8:	add	r3, r3, #520	; 0x208
    6adc:	ldr	r3, [r3]
    6ae0:	mov	r1, r3
    6ae4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6ae8:	bl	0 <coda_type_record_field_set_type>
    6aec:	mrc	15, 0, r3, cr13, cr0, {3}
    6af0:	ldr	r2, [pc, #-1004]	; 670c <grib_init+0x60cc>
    6af4:	ldr	r3, [r3, r2]
    6af8:	add	r3, r3, #540	; 0x21c
    6afc:	ldr	r3, [r3]
    6b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6b04:	mov	r0, r3
    6b08:	bl	0 <coda_type_record_add_field>
    6b0c:	movw	r0, #0
    6b10:	movt	r0, #0
    6b14:	bl	0 <coda_type_record_field_new>
    6b18:	str	r0, [fp, #-28]	; 0xffffffe4
    6b1c:	mrc	15, 0, r3, cr13, cr0, {3}
    6b20:	ldr	r2, [pc, #-1052]	; 670c <grib_init+0x60cc>
    6b24:	ldr	r3, [r3, r2]
    6b28:	add	r3, r3, #360	; 0x168
    6b2c:	ldr	r3, [r3]
    6b30:	mov	r1, r3
    6b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6b38:	bl	0 <coda_type_record_field_set_type>
    6b3c:	mrc	15, 0, r3, cr13, cr0, {3}
    6b40:	ldr	r2, [pc, #-1084]	; 670c <grib_init+0x60cc>
    6b44:	ldr	r3, [r3, r2]
    6b48:	add	r3, r3, #540	; 0x21c
    6b4c:	ldr	r3, [r3]
    6b50:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6b54:	mov	r0, r3
    6b58:	bl	0 <coda_type_record_add_field>
    6b5c:	movw	r0, #0
    6b60:	movt	r0, #0
    6b64:	bl	0 <coda_type_record_field_new>
    6b68:	str	r0, [fp, #-28]	; 0xffffffe4
    6b6c:	mrc	15, 0, r3, cr13, cr0, {3}
    6b70:	ldr	r2, [pc, #-1132]	; 670c <grib_init+0x60cc>
    6b74:	ldr	r3, [r3, r2]
    6b78:	add	r3, r3, #364	; 0x16c
    6b7c:	ldr	r3, [r3]
    6b80:	mov	r1, r3
    6b84:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6b88:	bl	0 <coda_type_record_field_set_type>
    6b8c:	mrc	15, 0, r3, cr13, cr0, {3}
    6b90:	ldr	r2, [pc, #-1164]	; 670c <grib_init+0x60cc>
    6b94:	ldr	r3, [r3, r2]
    6b98:	add	r3, r3, #540	; 0x21c
    6b9c:	ldr	r3, [r3]
    6ba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6ba4:	mov	r0, r3
    6ba8:	bl	0 <coda_type_record_add_field>
    6bac:	movw	r0, #0
    6bb0:	movt	r0, #0
    6bb4:	bl	0 <coda_type_record_field_new>
    6bb8:	str	r0, [fp, #-28]	; 0xffffffe4
    6bbc:	mrc	15, 0, r3, cr13, cr0, {3}
    6bc0:	ldr	r2, [pc, #-1212]	; 670c <grib_init+0x60cc>
    6bc4:	ldr	r3, [r3, r2]
    6bc8:	add	r3, r3, #368	; 0x170
    6bcc:	ldr	r3, [r3]
    6bd0:	mov	r1, r3
    6bd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6bd8:	bl	0 <coda_type_record_field_set_type>
    6bdc:	mrc	15, 0, r3, cr13, cr0, {3}
    6be0:	ldr	r2, [pc, #-1244]	; 670c <grib_init+0x60cc>
    6be4:	ldr	r3, [r3, r2]
    6be8:	add	r3, r3, #540	; 0x21c
    6bec:	ldr	r3, [r3]
    6bf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6bf4:	mov	r0, r3
    6bf8:	bl	0 <coda_type_record_add_field>
    6bfc:	movw	r0, #0
    6c00:	movt	r0, #0
    6c04:	bl	0 <coda_type_record_field_new>
    6c08:	str	r0, [fp, #-28]	; 0xffffffe4
    6c0c:	mrc	15, 0, r3, cr13, cr0, {3}
    6c10:	ldr	r2, [pc, #-1292]	; 670c <grib_init+0x60cc>
    6c14:	ldr	r3, [r3, r2]
    6c18:	add	r3, r3, #372	; 0x174
    6c1c:	ldr	r3, [r3]
    6c20:	mov	r1, r3
    6c24:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6c28:	bl	0 <coda_type_record_field_set_type>
    6c2c:	mrc	15, 0, r3, cr13, cr0, {3}
    6c30:	ldr	r2, [pc, #-1324]	; 670c <grib_init+0x60cc>
    6c34:	ldr	r3, [r3, r2]
    6c38:	add	r3, r3, #540	; 0x21c
    6c3c:	ldr	r3, [r3]
    6c40:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6c44:	mov	r0, r3
    6c48:	bl	0 <coda_type_record_add_field>
    6c4c:	movw	r0, #0
    6c50:	movt	r0, #0
    6c54:	bl	0 <coda_type_record_field_new>
    6c58:	str	r0, [fp, #-28]	; 0xffffffe4
    6c5c:	mrc	15, 0, r3, cr13, cr0, {3}
    6c60:	ldr	r2, [pc, #-1372]	; 670c <grib_init+0x60cc>
    6c64:	ldr	r3, [r3, r2]
    6c68:	add	r3, r3, #376	; 0x178
    6c6c:	ldr	r3, [r3]
    6c70:	mov	r1, r3
    6c74:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6c78:	bl	0 <coda_type_record_field_set_type>
    6c7c:	mrc	15, 0, r3, cr13, cr0, {3}
    6c80:	ldr	r2, [pc, #-1404]	; 670c <grib_init+0x60cc>
    6c84:	ldr	r3, [r3, r2]
    6c88:	add	r3, r3, #540	; 0x21c
    6c8c:	ldr	r3, [r3]
    6c90:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6c94:	mov	r0, r3
    6c98:	bl	0 <coda_type_record_add_field>
    6c9c:	movw	r0, #0
    6ca0:	movt	r0, #0
    6ca4:	bl	0 <coda_type_record_field_new>
    6ca8:	str	r0, [fp, #-28]	; 0xffffffe4
    6cac:	mrc	15, 0, r3, cr13, cr0, {3}
    6cb0:	ldr	r2, [pc, #-1452]	; 670c <grib_init+0x60cc>
    6cb4:	ldr	r3, [r3, r2]
    6cb8:	add	r3, r3, #380	; 0x17c
    6cbc:	ldr	r3, [r3]
    6cc0:	mov	r1, r3
    6cc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6cc8:	bl	0 <coda_type_record_field_set_type>
    6ccc:	mrc	15, 0, r3, cr13, cr0, {3}
    6cd0:	ldr	r2, [pc, #-1484]	; 670c <grib_init+0x60cc>
    6cd4:	ldr	r3, [r3, r2]
    6cd8:	add	r3, r3, #540	; 0x21c
    6cdc:	ldr	r3, [r3]
    6ce0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6ce4:	mov	r0, r3
    6ce8:	bl	0 <coda_type_record_add_field>
    6cec:	movw	r0, #0
    6cf0:	movt	r0, #0
    6cf4:	bl	0 <coda_type_record_field_new>
    6cf8:	str	r0, [fp, #-28]	; 0xffffffe4
    6cfc:	mrc	15, 0, r3, cr13, cr0, {3}
    6d00:	ldr	r2, [pc, #-1532]	; 670c <grib_init+0x60cc>
    6d04:	ldr	r3, [r3, r2]
    6d08:	add	r3, r3, #384	; 0x180
    6d0c:	ldr	r3, [r3]
    6d10:	mov	r1, r3
    6d14:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6d18:	bl	0 <coda_type_record_field_set_type>
    6d1c:	mrc	15, 0, r3, cr13, cr0, {3}
    6d20:	ldr	r2, [pc, #-1564]	; 670c <grib_init+0x60cc>
    6d24:	ldr	r3, [r3, r2]
    6d28:	add	r3, r3, #540	; 0x21c
    6d2c:	ldr	r3, [r3]
    6d30:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6d34:	mov	r0, r3
    6d38:	bl	0 <coda_type_record_add_field>
    6d3c:	movw	r0, #0
    6d40:	movt	r0, #0
    6d44:	bl	0 <coda_type_record_field_new>
    6d48:	str	r0, [fp, #-28]	; 0xffffffe4
    6d4c:	mrc	15, 0, r3, cr13, cr0, {3}
    6d50:	ldr	r2, [pc, #-1612]	; 670c <grib_init+0x60cc>
    6d54:	ldr	r3, [r3, r2]
    6d58:	add	r3, r3, #388	; 0x184
    6d5c:	ldr	r3, [r3]
    6d60:	mov	r1, r3
    6d64:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6d68:	bl	0 <coda_type_record_field_set_type>
    6d6c:	mrc	15, 0, r3, cr13, cr0, {3}
    6d70:	ldr	r2, [pc, #-1644]	; 670c <grib_init+0x60cc>
    6d74:	ldr	r3, [r3, r2]
    6d78:	add	r3, r3, #540	; 0x21c
    6d7c:	ldr	r3, [r3]
    6d80:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6d84:	mov	r0, r3
    6d88:	bl	0 <coda_type_record_add_field>
    6d8c:	movw	r0, #0
    6d90:	movt	r0, #0
    6d94:	bl	0 <coda_type_record_field_new>
    6d98:	str	r0, [fp, #-28]	; 0xffffffe4
    6d9c:	mrc	15, 0, r3, cr13, cr0, {3}
    6da0:	ldr	r2, [pc, #-1692]	; 670c <grib_init+0x60cc>
    6da4:	ldr	r3, [r3, r2]
    6da8:	add	r3, r3, #392	; 0x188
    6dac:	ldr	r3, [r3]
    6db0:	mov	r1, r3
    6db4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6db8:	bl	0 <coda_type_record_field_set_type>
    6dbc:	mrc	15, 0, r3, cr13, cr0, {3}
    6dc0:	ldr	r2, [pc, #-1724]	; 670c <grib_init+0x60cc>
    6dc4:	ldr	r3, [r3, r2]
    6dc8:	add	r3, r3, #540	; 0x21c
    6dcc:	ldr	r3, [r3]
    6dd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6dd4:	mov	r0, r3
    6dd8:	bl	0 <coda_type_record_add_field>
    6ddc:	movw	r0, #0
    6de0:	movt	r0, #0
    6de4:	bl	0 <coda_type_record_field_new>
    6de8:	str	r0, [fp, #-28]	; 0xffffffe4
    6dec:	mrc	15, 0, r3, cr13, cr0, {3}
    6df0:	ldr	r2, [pc, #-1772]	; 670c <grib_init+0x60cc>
    6df4:	ldr	r3, [r3, r2]
    6df8:	add	r3, r3, #396	; 0x18c
    6dfc:	ldr	r3, [r3]
    6e00:	mov	r1, r3
    6e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6e08:	bl	0 <coda_type_record_field_set_type>
    6e0c:	mrc	15, 0, r3, cr13, cr0, {3}
    6e10:	ldr	r2, [pc, #-1804]	; 670c <grib_init+0x60cc>
    6e14:	ldr	r3, [r3, r2]
    6e18:	add	r3, r3, #540	; 0x21c
    6e1c:	ldr	r3, [r3]
    6e20:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6e24:	mov	r0, r3
    6e28:	bl	0 <coda_type_record_add_field>
    6e2c:	movw	r0, #0
    6e30:	movt	r0, #0
    6e34:	bl	0 <coda_type_record_field_new>
    6e38:	str	r0, [fp, #-28]	; 0xffffffe4
    6e3c:	mrc	15, 0, r3, cr13, cr0, {3}
    6e40:	ldr	r2, [pc, #-1852]	; 670c <grib_init+0x60cc>
    6e44:	ldr	r3, [r3, r2]
    6e48:	add	r3, r3, #400	; 0x190
    6e4c:	ldr	r3, [r3]
    6e50:	mov	r1, r3
    6e54:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6e58:	bl	0 <coda_type_record_field_set_type>
    6e5c:	mrc	15, 0, r3, cr13, cr0, {3}
    6e60:	ldr	r2, [pc, #-1884]	; 670c <grib_init+0x60cc>
    6e64:	ldr	r3, [r3, r2]
    6e68:	add	r3, r3, #540	; 0x21c
    6e6c:	ldr	r3, [r3]
    6e70:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6e74:	mov	r0, r3
    6e78:	bl	0 <coda_type_record_add_field>
    6e7c:	movw	r0, #0
    6e80:	movt	r0, #0
    6e84:	bl	0 <coda_type_record_field_new>
    6e88:	str	r0, [fp, #-28]	; 0xffffffe4
    6e8c:	mrc	15, 0, r3, cr13, cr0, {3}
    6e90:	ldr	r2, [pc, #-1932]	; 670c <grib_init+0x60cc>
    6e94:	ldr	r3, [r3, r2]
    6e98:	add	r3, r3, #404	; 0x194
    6e9c:	ldr	r3, [r3]
    6ea0:	mov	r1, r3
    6ea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6ea8:	bl	0 <coda_type_record_field_set_type>
    6eac:	mrc	15, 0, r3, cr13, cr0, {3}
    6eb0:	ldr	r2, [pc, #-1964]	; 670c <grib_init+0x60cc>
    6eb4:	ldr	r3, [r3, r2]
    6eb8:	add	r3, r3, #540	; 0x21c
    6ebc:	ldr	r3, [r3]
    6ec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6ec4:	mov	r0, r3
    6ec8:	bl	0 <coda_type_record_add_field>
    6ecc:	movw	r0, #0
    6ed0:	movt	r0, #0
    6ed4:	bl	0 <coda_type_record_field_new>
    6ed8:	str	r0, [fp, #-28]	; 0xffffffe4
    6edc:	mrc	15, 0, r3, cr13, cr0, {3}
    6ee0:	ldr	r2, [pc, #-2012]	; 670c <grib_init+0x60cc>
    6ee4:	ldr	r3, [r3, r2]
    6ee8:	add	r3, r3, #408	; 0x198
    6eec:	ldr	r3, [r3]
    6ef0:	mov	r1, r3
    6ef4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6ef8:	bl	0 <coda_type_record_field_set_type>
    6efc:	mrc	15, 0, r3, cr13, cr0, {3}
    6f00:	ldr	r2, [pc, #-2044]	; 670c <grib_init+0x60cc>
    6f04:	ldr	r3, [r3, r2]
    6f08:	add	r3, r3, #540	; 0x21c
    6f0c:	ldr	r3, [r3]
    6f10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6f14:	mov	r0, r3
    6f18:	bl	0 <coda_type_record_add_field>
    6f1c:	movw	r0, #0
    6f20:	movt	r0, #0
    6f24:	bl	0 <coda_type_record_field_new>
    6f28:	str	r0, [fp, #-28]	; 0xffffffe4
    6f2c:	mrc	15, 0, r3, cr13, cr0, {3}
    6f30:	ldr	r2, [pc, #-2092]	; 670c <grib_init+0x60cc>
    6f34:	ldr	r3, [r3, r2]
    6f38:	add	r3, r3, #412	; 0x19c
    6f3c:	ldr	r3, [r3]
    6f40:	mov	r1, r3
    6f44:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6f48:	bl	0 <coda_type_record_field_set_type>
    6f4c:	mrc	15, 0, r3, cr13, cr0, {3}
    6f50:	ldr	r2, [pc, #-2124]	; 670c <grib_init+0x60cc>
    6f54:	ldr	r3, [r3, r2]
    6f58:	add	r3, r3, #540	; 0x21c
    6f5c:	ldr	r3, [r3]
    6f60:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6f64:	mov	r0, r3
    6f68:	bl	0 <coda_type_record_add_field>
    6f6c:	movw	r0, #0
    6f70:	movt	r0, #0
    6f74:	bl	0 <coda_type_record_field_new>
    6f78:	str	r0, [fp, #-28]	; 0xffffffe4
    6f7c:	mrc	15, 0, r3, cr13, cr0, {3}
    6f80:	ldr	r2, [pc, #-2172]	; 670c <grib_init+0x60cc>
    6f84:	ldr	r3, [r3, r2]
    6f88:	add	r3, r3, #416	; 0x1a0
    6f8c:	ldr	r3, [r3]
    6f90:	mov	r1, r3
    6f94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6f98:	bl	0 <coda_type_record_field_set_type>
    6f9c:	mrc	15, 0, r3, cr13, cr0, {3}
    6fa0:	ldr	r2, [pc, #-2204]	; 670c <grib_init+0x60cc>
    6fa4:	ldr	r3, [r3, r2]
    6fa8:	add	r3, r3, #540	; 0x21c
    6fac:	ldr	r3, [r3]
    6fb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    6fb4:	mov	r0, r3
    6fb8:	bl	0 <coda_type_record_add_field>
    6fbc:	movw	r0, #0
    6fc0:	movt	r0, #0
    6fc4:	bl	0 <coda_type_record_field_new>
    6fc8:	str	r0, [fp, #-28]	; 0xffffffe4
    6fcc:	mrc	15, 0, r3, cr13, cr0, {3}
    6fd0:	ldr	r2, [pc, #-2252]	; 670c <grib_init+0x60cc>
    6fd4:	ldr	r3, [r3, r2]
    6fd8:	add	r3, r3, #420	; 0x1a4
    6fdc:	ldr	r3, [r3]
    6fe0:	mov	r1, r3
    6fe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    6fe8:	bl	0 <coda_type_record_field_set_type>
    6fec:	mrc	15, 0, r3, cr13, cr0, {3}
    6ff0:	ldr	r2, [pc, #-2284]	; 670c <grib_init+0x60cc>
    6ff4:	ldr	r3, [r3, r2]
    6ff8:	add	r3, r3, #540	; 0x21c
    6ffc:	ldr	r3, [r3]
    7000:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7004:	mov	r0, r3
    7008:	bl	0 <coda_type_record_add_field>
    700c:	movw	r0, #0
    7010:	movt	r0, #0
    7014:	bl	0 <coda_type_record_field_new>
    7018:	str	r0, [fp, #-28]	; 0xffffffe4
    701c:	mrc	15, 0, r3, cr13, cr0, {3}
    7020:	ldr	r2, [pc, #-2332]	; 670c <grib_init+0x60cc>
    7024:	ldr	r3, [r3, r2]
    7028:	add	r3, r3, #424	; 0x1a8
    702c:	ldr	r3, [r3]
    7030:	mov	r1, r3
    7034:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7038:	bl	0 <coda_type_record_field_set_type>
    703c:	mrc	15, 0, r3, cr13, cr0, {3}
    7040:	ldr	r2, [pc, #-2364]	; 670c <grib_init+0x60cc>
    7044:	ldr	r3, [r3, r2]
    7048:	add	r3, r3, #540	; 0x21c
    704c:	ldr	r3, [r3]
    7050:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7054:	mov	r0, r3
    7058:	bl	0 <coda_type_record_add_field>
    705c:	movw	r0, #0
    7060:	movt	r0, #0
    7064:	bl	0 <coda_type_record_field_new>
    7068:	str	r0, [fp, #-28]	; 0xffffffe4
    706c:	mrc	15, 0, r3, cr13, cr0, {3}
    7070:	ldr	r2, [pc, #-2412]	; 670c <grib_init+0x60cc>
    7074:	ldr	r3, [r3, r2]
    7078:	add	r3, r3, #428	; 0x1ac
    707c:	ldr	r3, [r3]
    7080:	mov	r1, r3
    7084:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7088:	bl	0 <coda_type_record_field_set_type>
    708c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7090:	bl	0 <coda_type_record_field_set_optional>
    7094:	mrc	15, 0, r3, cr13, cr0, {3}
    7098:	ldr	r2, [pc, #-2452]	; 670c <grib_init+0x60cc>
    709c:	ldr	r3, [r3, r2]
    70a0:	add	r3, r3, #540	; 0x21c
    70a4:	ldr	r3, [r3]
    70a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    70ac:	mov	r0, r3
    70b0:	bl	0 <coda_type_record_add_field>
    70b4:	movw	r0, #0
    70b8:	movt	r0, #0
    70bc:	bl	0 <coda_type_record_field_new>
    70c0:	str	r0, [fp, #-28]	; 0xffffffe4
    70c4:	mrc	15, 0, r3, cr13, cr0, {3}
    70c8:	ldr	r2, [pc, #-2500]	; 670c <grib_init+0x60cc>
    70cc:	ldr	r3, [r3, r2]
    70d0:	add	r3, r3, #432	; 0x1b0
    70d4:	ldr	r3, [r3]
    70d8:	mov	r1, r3
    70dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    70e0:	bl	0 <coda_type_record_field_set_type>
    70e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    70e8:	bl	0 <coda_type_record_field_set_optional>
    70ec:	mrc	15, 0, r3, cr13, cr0, {3}
    70f0:	ldr	r2, [pc, #-2540]	; 670c <grib_init+0x60cc>
    70f4:	ldr	r3, [r3, r2]
    70f8:	add	r3, r3, #540	; 0x21c
    70fc:	ldr	r3, [r3]
    7100:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7104:	mov	r0, r3
    7108:	bl	0 <coda_type_record_add_field>
    710c:	movw	r0, #0
    7110:	movt	r0, #0
    7114:	bl	0 <coda_type_record_field_new>
    7118:	str	r0, [fp, #-28]	; 0xffffffe4
    711c:	mrc	15, 0, r3, cr13, cr0, {3}
    7120:	ldr	r2, [pc, #-2588]	; 670c <grib_init+0x60cc>
    7124:	ldr	r3, [r3, r2]
    7128:	add	r3, r3, #436	; 0x1b4
    712c:	ldr	r3, [r3]
    7130:	mov	r1, r3
    7134:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7138:	bl	0 <coda_type_record_field_set_type>
    713c:	mrc	15, 0, r3, cr13, cr0, {3}
    7140:	ldr	r2, [pc, #-2620]	; 670c <grib_init+0x60cc>
    7144:	ldr	r3, [r3, r2]
    7148:	add	r3, r3, #540	; 0x21c
    714c:	ldr	r3, [r3]
    7150:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7154:	mov	r0, r3
    7158:	bl	0 <coda_type_record_add_field>
    715c:	movw	r0, #0
    7160:	movt	r0, #0
    7164:	bl	0 <coda_type_record_field_new>
    7168:	str	r0, [fp, #-28]	; 0xffffffe4
    716c:	mrc	15, 0, r3, cr13, cr0, {3}
    7170:	ldr	r2, [pc, #-2668]	; 670c <grib_init+0x60cc>
    7174:	ldr	r3, [r3, r2]
    7178:	add	r3, r3, #444	; 0x1bc
    717c:	ldr	r3, [r3]
    7180:	mov	r1, r3
    7184:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7188:	bl	0 <coda_type_record_field_set_type>
    718c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7190:	bl	0 <coda_type_record_field_set_optional>
    7194:	mrc	15, 0, r3, cr13, cr0, {3}
    7198:	ldr	r2, [pc, #-2708]	; 670c <grib_init+0x60cc>
    719c:	ldr	r3, [r3, r2]
    71a0:	add	r3, r3, #540	; 0x21c
    71a4:	ldr	r3, [r3]
    71a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    71ac:	mov	r0, r3
    71b0:	bl	0 <coda_type_record_add_field>
    71b4:	mrc	15, 0, r3, cr13, cr0, {3}
    71b8:	ldr	r2, [pc, #-2740]	; 670c <grib_init+0x60cc>
    71bc:	ldr	r3, [r3, r2]
    71c0:	add	r4, r3, #544	; 0x220
    71c4:	mov	r0, #7
    71c8:	bl	0 <coda_type_record_new>
    71cc:	mov	r3, r0
    71d0:	str	r3, [r4]
    71d4:	movw	r0, #0
    71d8:	movt	r0, #0
    71dc:	bl	0 <coda_type_record_field_new>
    71e0:	str	r0, [fp, #-28]	; 0xffffffe4
    71e4:	mrc	15, 0, r3, cr13, cr0, {3}
    71e8:	ldr	r2, [pc, #-2788]	; 670c <grib_init+0x60cc>
    71ec:	ldr	r3, [r3, r2]
    71f0:	add	r3, r3, #280	; 0x118
    71f4:	ldr	r3, [r3]
    71f8:	mov	r1, r3
    71fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7200:	bl	0 <coda_type_record_field_set_type>
    7204:	mrc	15, 0, r3, cr13, cr0, {3}
    7208:	ldr	r2, [pc, #-2820]	; 670c <grib_init+0x60cc>
    720c:	ldr	r3, [r3, r2]
    7210:	add	r3, r3, #544	; 0x220
    7214:	ldr	r3, [r3]
    7218:	ldr	r1, [fp, #-28]	; 0xffffffe4
    721c:	mov	r0, r3
    7220:	bl	0 <coda_type_record_add_field>
    7224:	movw	r0, #0
    7228:	movt	r0, #0
    722c:	bl	0 <coda_type_record_field_new>
    7230:	str	r0, [fp, #-28]	; 0xffffffe4
    7234:	mrc	15, 0, r3, cr13, cr0, {3}
    7238:	ldr	r2, [pc, #-2868]	; 670c <grib_init+0x60cc>
    723c:	ldr	r3, [r3, r2]
    7240:	add	r3, r3, #460	; 0x1cc
    7244:	ldr	r3, [r3]
    7248:	mov	r1, r3
    724c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7250:	bl	0 <coda_type_record_field_set_type>
    7254:	mrc	15, 0, r3, cr13, cr0, {3}
    7258:	ldr	r2, [pc, #-2900]	; 670c <grib_init+0x60cc>
    725c:	ldr	r3, [r3, r2]
    7260:	add	r3, r3, #544	; 0x220
    7264:	ldr	r3, [r3]
    7268:	ldr	r1, [fp, #-28]	; 0xffffffe4
    726c:	mov	r0, r3
    7270:	bl	0 <coda_type_record_add_field>
    7274:	movw	r0, #0
    7278:	movt	r0, #0
    727c:	bl	0 <coda_type_record_field_new>
    7280:	str	r0, [fp, #-28]	; 0xffffffe4
    7284:	mrc	15, 0, r3, cr13, cr0, {3}
    7288:	ldr	r2, [pc, #-2948]	; 670c <grib_init+0x60cc>
    728c:	ldr	r3, [r3, r2]
    7290:	add	r3, r3, #464	; 0x1d0
    7294:	ldr	r3, [r3]
    7298:	mov	r1, r3
    729c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    72a0:	bl	0 <coda_type_record_field_set_type>
    72a4:	mrc	15, 0, r3, cr13, cr0, {3}
    72a8:	ldr	r2, [pc, #-2980]	; 670c <grib_init+0x60cc>
    72ac:	ldr	r3, [r3, r2]
    72b0:	add	r3, r3, #544	; 0x220
    72b4:	ldr	r3, [r3]
    72b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    72bc:	mov	r0, r3
    72c0:	bl	0 <coda_type_record_add_field>
    72c4:	movw	r0, #0
    72c8:	movt	r0, #0
    72cc:	bl	0 <coda_type_record_field_new>
    72d0:	str	r0, [fp, #-28]	; 0xffffffe4
    72d4:	mrc	15, 0, r3, cr13, cr0, {3}
    72d8:	ldr	r2, [pc, #-3028]	; 670c <grib_init+0x60cc>
    72dc:	ldr	r3, [r3, r2]
    72e0:	add	r3, r3, #468	; 0x1d4
    72e4:	ldr	r3, [r3]
    72e8:	mov	r1, r3
    72ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    72f0:	bl	0 <coda_type_record_field_set_type>
    72f4:	mrc	15, 0, r3, cr13, cr0, {3}
    72f8:	ldr	r2, [pc, #-3060]	; 670c <grib_init+0x60cc>
    72fc:	ldr	r3, [r3, r2]
    7300:	add	r3, r3, #544	; 0x220
    7304:	ldr	r3, [r3]
    7308:	ldr	r1, [fp, #-28]	; 0xffffffe4
    730c:	mov	r0, r3
    7310:	bl	0 <coda_type_record_add_field>
    7314:	movw	r0, #0
    7318:	movt	r0, #0
    731c:	bl	0 <coda_type_record_field_new>
    7320:	str	r0, [fp, #-28]	; 0xffffffe4
    7324:	mrc	15, 0, r3, cr13, cr0, {3}
    7328:	ldr	r2, [pc, #-3108]	; 670c <grib_init+0x60cc>
    732c:	ldr	r3, [r3, r2]
    7330:	add	r3, r3, #472	; 0x1d8
    7334:	ldr	r3, [r3]
    7338:	mov	r1, r3
    733c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7340:	bl	0 <coda_type_record_field_set_type>
    7344:	mrc	15, 0, r3, cr13, cr0, {3}
    7348:	ldr	r2, [pc, #-3140]	; 670c <grib_init+0x60cc>
    734c:	ldr	r3, [r3, r2]
    7350:	add	r3, r3, #544	; 0x220
    7354:	ldr	r3, [r3]
    7358:	ldr	r1, [fp, #-28]	; 0xffffffe4
    735c:	mov	r0, r3
    7360:	bl	0 <coda_type_record_add_field>
    7364:	movw	r0, #0
    7368:	movt	r0, #0
    736c:	bl	0 <coda_type_record_field_new>
    7370:	str	r0, [fp, #-28]	; 0xffffffe4
    7374:	mrc	15, 0, r3, cr13, cr0, {3}
    7378:	ldr	r2, [pc, #-3188]	; 670c <grib_init+0x60cc>
    737c:	ldr	r3, [r3, r2]
    7380:	add	r3, r3, #476	; 0x1dc
    7384:	ldr	r3, [r3]
    7388:	mov	r1, r3
    738c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7390:	bl	0 <coda_type_record_field_set_type>
    7394:	mrc	15, 0, r3, cr13, cr0, {3}
    7398:	ldr	r2, [pc, #-3220]	; 670c <grib_init+0x60cc>
    739c:	ldr	r3, [r3, r2]
    73a0:	add	r3, r3, #544	; 0x220
    73a4:	ldr	r3, [r3]
    73a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    73ac:	mov	r0, r3
    73b0:	bl	0 <coda_type_record_add_field>
    73b4:	movw	r0, #0
    73b8:	movt	r0, #0
    73bc:	bl	0 <coda_type_record_field_new>
    73c0:	str	r0, [fp, #-28]	; 0xffffffe4
    73c4:	mrc	15, 0, r3, cr13, cr0, {3}
    73c8:	ldr	r2, [pc, #-3268]	; 670c <grib_init+0x60cc>
    73cc:	ldr	r3, [r3, r2]
    73d0:	add	r3, r3, #480	; 0x1e0
    73d4:	ldr	r3, [r3]
    73d8:	mov	r1, r3
    73dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    73e0:	bl	0 <coda_type_record_field_set_type>
    73e4:	mrc	15, 0, r3, cr13, cr0, {3}
    73e8:	ldr	r2, [pc, #-3300]	; 670c <grib_init+0x60cc>
    73ec:	ldr	r3, [r3, r2]
    73f0:	add	r3, r3, #544	; 0x220
    73f4:	ldr	r3, [r3]
    73f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    73fc:	mov	r0, r3
    7400:	bl	0 <coda_type_record_add_field>
    7404:	movw	r0, #0
    7408:	movt	r0, #0
    740c:	bl	0 <coda_type_record_field_new>
    7410:	str	r0, [fp, #-28]	; 0xffffffe4
    7414:	mrc	15, 0, r3, cr13, cr0, {3}
    7418:	ldr	r2, [pc, #-3348]	; 670c <grib_init+0x60cc>
    741c:	ldr	r3, [r3, r2]
    7420:	add	r3, r3, #484	; 0x1e4
    7424:	ldr	r3, [r3]
    7428:	mov	r1, r3
    742c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7430:	bl	0 <coda_type_record_field_set_type>
    7434:	mrc	15, 0, r3, cr13, cr0, {3}
    7438:	ldr	r2, [pc, #-3380]	; 670c <grib_init+0x60cc>
    743c:	ldr	r3, [r3, r2]
    7440:	add	r3, r3, #544	; 0x220
    7444:	ldr	r3, [r3]
    7448:	ldr	r1, [fp, #-28]	; 0xffffffe4
    744c:	mov	r0, r3
    7450:	bl	0 <coda_type_record_add_field>
    7454:	movw	r0, #0
    7458:	movt	r0, #0
    745c:	bl	0 <coda_type_record_field_new>
    7460:	str	r0, [fp, #-28]	; 0xffffffe4
    7464:	mrc	15, 0, r3, cr13, cr0, {3}
    7468:	ldr	r2, [pc, #-3428]	; 670c <grib_init+0x60cc>
    746c:	ldr	r3, [r3, r2]
    7470:	add	r3, r3, #488	; 0x1e8
    7474:	ldr	r3, [r3]
    7478:	mov	r1, r3
    747c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7480:	bl	0 <coda_type_record_field_set_type>
    7484:	mrc	15, 0, r3, cr13, cr0, {3}
    7488:	ldr	r2, [pc, #-3460]	; 670c <grib_init+0x60cc>
    748c:	ldr	r3, [r3, r2]
    7490:	add	r3, r3, #544	; 0x220
    7494:	ldr	r3, [r3]
    7498:	ldr	r1, [fp, #-28]	; 0xffffffe4
    749c:	mov	r0, r3
    74a0:	bl	0 <coda_type_record_add_field>
    74a4:	movw	r0, #0
    74a8:	movt	r0, #0
    74ac:	bl	0 <coda_type_record_field_new>
    74b0:	str	r0, [fp, #-28]	; 0xffffffe4
    74b4:	mrc	15, 0, r3, cr13, cr0, {3}
    74b8:	ldr	r2, [pc, #-3508]	; 670c <grib_init+0x60cc>
    74bc:	ldr	r3, [r3, r2]
    74c0:	add	r3, r3, #492	; 0x1ec
    74c4:	ldr	r3, [r3]
    74c8:	mov	r1, r3
    74cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    74d0:	bl	0 <coda_type_record_field_set_type>
    74d4:	mrc	15, 0, r3, cr13, cr0, {3}
    74d8:	ldr	r2, [pc, #-3540]	; 670c <grib_init+0x60cc>
    74dc:	ldr	r3, [r3, r2]
    74e0:	add	r3, r3, #544	; 0x220
    74e4:	ldr	r3, [r3]
    74e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    74ec:	mov	r0, r3
    74f0:	bl	0 <coda_type_record_add_field>
    74f4:	movw	r0, #0
    74f8:	movt	r0, #0
    74fc:	bl	0 <coda_type_record_field_new>
    7500:	str	r0, [fp, #-28]	; 0xffffffe4
    7504:	mrc	15, 0, r3, cr13, cr0, {3}
    7508:	ldr	r2, [pc, #-3588]	; 670c <grib_init+0x60cc>
    750c:	ldr	r3, [r3, r2]
    7510:	add	r3, r3, #496	; 0x1f0
    7514:	ldr	r3, [r3]
    7518:	mov	r1, r3
    751c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7520:	bl	0 <coda_type_record_field_set_type>
    7524:	mrc	15, 0, r3, cr13, cr0, {3}
    7528:	ldr	r2, [pc, #-3620]	; 670c <grib_init+0x60cc>
    752c:	ldr	r3, [r3, r2]
    7530:	add	r3, r3, #544	; 0x220
    7534:	ldr	r3, [r3]
    7538:	ldr	r1, [fp, #-28]	; 0xffffffe4
    753c:	mov	r0, r3
    7540:	bl	0 <coda_type_record_add_field>
    7544:	movw	r0, #0
    7548:	movt	r0, #0
    754c:	bl	0 <coda_type_record_field_new>
    7550:	str	r0, [fp, #-28]	; 0xffffffe4
    7554:	mrc	15, 0, r3, cr13, cr0, {3}
    7558:	ldr	r2, [pc, #-3668]	; 670c <grib_init+0x60cc>
    755c:	ldr	r3, [r3, r2]
    7560:	add	r3, r3, #500	; 0x1f4
    7564:	ldr	r3, [r3]
    7568:	mov	r1, r3
    756c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7570:	bl	0 <coda_type_record_field_set_type>
    7574:	mrc	15, 0, r3, cr13, cr0, {3}
    7578:	ldr	r2, [pc, #-3700]	; 670c <grib_init+0x60cc>
    757c:	ldr	r3, [r3, r2]
    7580:	add	r3, r3, #544	; 0x220
    7584:	ldr	r3, [r3]
    7588:	ldr	r1, [fp, #-28]	; 0xffffffe4
    758c:	mov	r0, r3
    7590:	bl	0 <coda_type_record_add_field>
    7594:	movw	r0, #0
    7598:	movt	r0, #0
    759c:	bl	0 <coda_type_record_field_new>
    75a0:	str	r0, [fp, #-28]	; 0xffffffe4
    75a4:	mrc	15, 0, r3, cr13, cr0, {3}
    75a8:	ldr	r2, [pc, #-3748]	; 670c <grib_init+0x60cc>
    75ac:	ldr	r3, [r3, r2]
    75b0:	add	r3, r3, #504	; 0x1f8
    75b4:	ldr	r3, [r3]
    75b8:	mov	r1, r3
    75bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    75c0:	bl	0 <coda_type_record_field_set_type>
    75c4:	mrc	15, 0, r3, cr13, cr0, {3}
    75c8:	ldr	r2, [pc, #-3780]	; 670c <grib_init+0x60cc>
    75cc:	ldr	r3, [r3, r2]
    75d0:	add	r3, r3, #544	; 0x220
    75d4:	ldr	r3, [r3]
    75d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    75dc:	mov	r0, r3
    75e0:	bl	0 <coda_type_record_add_field>
    75e4:	movw	r0, #0
    75e8:	movt	r0, #0
    75ec:	bl	0 <coda_type_record_field_new>
    75f0:	str	r0, [fp, #-28]	; 0xffffffe4
    75f4:	mrc	15, 0, r3, cr13, cr0, {3}
    75f8:	ldr	r2, [pc, #-3828]	; 670c <grib_init+0x60cc>
    75fc:	ldr	r3, [r3, r2]
    7600:	add	r3, r3, #508	; 0x1fc
    7604:	ldr	r3, [r3]
    7608:	mov	r1, r3
    760c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7610:	bl	0 <coda_type_record_field_set_type>
    7614:	mrc	15, 0, r3, cr13, cr0, {3}
    7618:	ldr	r2, [pc, #-3860]	; 670c <grib_init+0x60cc>
    761c:	ldr	r3, [r3, r2]
    7620:	add	r3, r3, #544	; 0x220
    7624:	ldr	r3, [r3]
    7628:	ldr	r1, [fp, #-28]	; 0xffffffe4
    762c:	mov	r0, r3
    7630:	bl	0 <coda_type_record_add_field>
    7634:	movw	r0, #0
    7638:	movt	r0, #0
    763c:	bl	0 <coda_type_record_field_new>
    7640:	str	r0, [fp, #-28]	; 0xffffffe4
    7644:	mrc	15, 0, r3, cr13, cr0, {3}
    7648:	ldr	r2, [pc, #-3908]	; 670c <grib_init+0x60cc>
    764c:	ldr	r3, [r3, r2]
    7650:	add	r3, r3, #516	; 0x204
    7654:	ldr	r3, [r3]
    7658:	mov	r1, r3
    765c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7660:	bl	0 <coda_type_record_field_set_type>
    7664:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7668:	bl	0 <coda_type_record_field_set_optional>
    766c:	mrc	15, 0, r3, cr13, cr0, {3}
    7670:	ldr	r2, [pc, #-3948]	; 670c <grib_init+0x60cc>
    7674:	ldr	r3, [r3, r2]
    7678:	add	r3, r3, #544	; 0x220
    767c:	ldr	r3, [r3]
    7680:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7684:	mov	r0, r3
    7688:	bl	0 <coda_type_record_add_field>
    768c:	movw	r0, #0
    7690:	movt	r0, #0
    7694:	bl	0 <coda_type_record_field_new>
    7698:	str	r0, [fp, #-28]	; 0xffffffe4
    769c:	mrc	15, 0, r3, cr13, cr0, {3}
    76a0:	ldr	r2, [pc, #-3996]	; 670c <grib_init+0x60cc>
    76a4:	ldr	r3, [r3, r2]
    76a8:	add	r3, r3, #524	; 0x20c
    76ac:	ldr	r3, [r3]
    76b0:	mov	r1, r3
    76b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    76b8:	bl	0 <coda_type_record_field_set_type>
    76bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    76c0:	bl	0 <coda_type_record_field_set_hidden>
    76c4:	mrc	15, 0, r3, cr13, cr0, {3}
    76c8:	ldr	r2, [pc, #-4036]	; 670c <grib_init+0x60cc>
    76cc:	ldr	r3, [r3, r2]
    76d0:	add	r3, r3, #544	; 0x220
    76d4:	ldr	r3, [r3]
    76d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    76dc:	mov	r0, r3
    76e0:	bl	0 <coda_type_record_add_field>
    76e4:	movw	r0, #0
    76e8:	movt	r0, #0
    76ec:	bl	0 <coda_type_record_field_new>
    76f0:	str	r0, [fp, #-28]	; 0xffffffe4
    76f4:	mrc	15, 0, r3, cr13, cr0, {3}
    76f8:	ldr	r2, [pc, #-4084]	; 670c <grib_init+0x60cc>
    76fc:	ldr	r3, [r3, r2]
    7700:	add	r3, r3, #320	; 0x140
    7704:	ldr	r3, [r3]
    7708:	mov	r1, r3
    770c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7710:	bl	0 <coda_type_record_field_set_type>
    7714:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7718:	bl	0 <coda_type_record_field_set_hidden>
    771c:	mrc	15, 0, r3, cr13, cr0, {3}
    7720:	ldr	r2, [pc, #2432]	; 80a8 <grib_init+0x7a68>
    7724:	ldr	r3, [r3, r2]
    7728:	add	r3, r3, #544	; 0x220
    772c:	ldr	r3, [r3]
    7730:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7734:	mov	r0, r3
    7738:	bl	0 <coda_type_record_add_field>
    773c:	movw	r0, #0
    7740:	movt	r0, #0
    7744:	bl	0 <coda_type_record_field_new>
    7748:	str	r0, [fp, #-28]	; 0xffffffe4
    774c:	mrc	15, 0, r3, cr13, cr0, {3}
    7750:	ldr	r2, [pc, #2384]	; 80a8 <grib_init+0x7a68>
    7754:	ldr	r3, [r3, r2]
    7758:	add	r3, r3, #528	; 0x210
    775c:	ldr	r3, [r3]
    7760:	mov	r1, r3
    7764:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7768:	bl	0 <coda_type_record_field_set_type>
    776c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7770:	bl	0 <coda_type_record_field_set_hidden>
    7774:	mrc	15, 0, r3, cr13, cr0, {3}
    7778:	ldr	r2, [pc, #2344]	; 80a8 <grib_init+0x7a68>
    777c:	ldr	r3, [r3, r2]
    7780:	add	r3, r3, #544	; 0x220
    7784:	ldr	r3, [r3]
    7788:	ldr	r1, [fp, #-28]	; 0xffffffe4
    778c:	mov	r0, r3
    7790:	bl	0 <coda_type_record_add_field>
    7794:	movw	r0, #0
    7798:	movt	r0, #0
    779c:	bl	0 <coda_type_record_field_new>
    77a0:	str	r0, [fp, #-28]	; 0xffffffe4
    77a4:	mrc	15, 0, r3, cr13, cr0, {3}
    77a8:	ldr	r2, [pc, #2296]	; 80a8 <grib_init+0x7a68>
    77ac:	ldr	r3, [r3, r2]
    77b0:	add	r3, r3, #532	; 0x214
    77b4:	ldr	r3, [r3]
    77b8:	mov	r1, r3
    77bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
    77c0:	bl	0 <coda_type_record_field_set_type>
    77c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    77c8:	bl	0 <coda_type_record_field_set_hidden>
    77cc:	mrc	15, 0, r3, cr13, cr0, {3}
    77d0:	ldr	r2, [pc, #2256]	; 80a8 <grib_init+0x7a68>
    77d4:	ldr	r3, [r3, r2]
    77d8:	add	r3, r3, #544	; 0x220
    77dc:	ldr	r3, [r3]
    77e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    77e4:	mov	r0, r3
    77e8:	bl	0 <coda_type_record_add_field>
    77ec:	movw	r0, #0
    77f0:	movt	r0, #0
    77f4:	bl	0 <coda_type_record_field_new>
    77f8:	str	r0, [fp, #-28]	; 0xffffffe4
    77fc:	mrc	15, 0, r3, cr13, cr0, {3}
    7800:	ldr	r2, [pc, #2208]	; 80a8 <grib_init+0x7a68>
    7804:	ldr	r3, [r3, r2]
    7808:	add	r3, r3, #536	; 0x218
    780c:	ldr	r3, [r3]
    7810:	mov	r1, r3
    7814:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7818:	bl	0 <coda_type_record_field_set_type>
    781c:	mrc	15, 0, r3, cr13, cr0, {3}
    7820:	ldr	r2, [pc, #2176]	; 80a8 <grib_init+0x7a68>
    7824:	ldr	r3, [r3, r2]
    7828:	add	r3, r3, #544	; 0x220
    782c:	ldr	r3, [r3]
    7830:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7834:	mov	r0, r3
    7838:	bl	0 <coda_type_record_add_field>
    783c:	mrc	15, 0, r3, cr13, cr0, {3}
    7840:	ldr	r2, [pc, #2144]	; 80a8 <grib_init+0x7a68>
    7844:	ldr	r3, [r3, r2]
    7848:	add	r4, r3, #548	; 0x224
    784c:	mov	r0, #7
    7850:	bl	0 <coda_type_array_new>
    7854:	mov	r3, r0
    7858:	str	r3, [r4]
    785c:	mrc	15, 0, r3, cr13, cr0, {3}
    7860:	ldr	r2, [pc, #2112]	; 80a8 <grib_init+0x7a68>
    7864:	ldr	r3, [r3, r2]
    7868:	add	r3, r3, #548	; 0x224
    786c:	ldr	r0, [r3]
    7870:	mrc	15, 0, r3, cr13, cr0, {3}
    7874:	ldr	r2, [pc, #2092]	; 80a8 <grib_init+0x7a68>
    7878:	ldr	r3, [r3, r2]
    787c:	add	r3, r3, #348	; 0x15c
    7880:	ldr	r3, [r3]
    7884:	mov	r1, r3
    7888:	bl	0 <coda_type_array_set_base_type>
    788c:	mrc	15, 0, r3, cr13, cr0, {3}
    7890:	ldr	r2, [pc, #2064]	; 80a8 <grib_init+0x7a68>
    7894:	ldr	r3, [r3, r2]
    7898:	add	r3, r3, #548	; 0x224
    789c:	ldr	r3, [r3]
    78a0:	mov	r1, #0
    78a4:	mov	r0, r3
    78a8:	bl	0 <coda_type_array_add_variable_dimension>
    78ac:	mrc	15, 0, r3, cr13, cr0, {3}
    78b0:	ldr	r2, [pc, #2032]	; 80a8 <grib_init+0x7a68>
    78b4:	ldr	r3, [r3, r2]
    78b8:	add	r4, r3, #552	; 0x228
    78bc:	mov	r0, #7
    78c0:	bl	0 <coda_type_array_new>
    78c4:	mov	r3, r0
    78c8:	str	r3, [r4]
    78cc:	mrc	15, 0, r3, cr13, cr0, {3}
    78d0:	ldr	r2, [pc, #2000]	; 80a8 <grib_init+0x7a68>
    78d4:	ldr	r3, [r3, r2]
    78d8:	add	r3, r3, #552	; 0x228
    78dc:	ldr	r0, [r3]
    78e0:	mrc	15, 0, r3, cr13, cr0, {3}
    78e4:	ldr	r2, [pc, #1980]	; 80a8 <grib_init+0x7a68>
    78e8:	ldr	r3, [r3, r2]
    78ec:	add	r3, r3, #540	; 0x21c
    78f0:	ldr	r3, [r3]
    78f4:	mov	r1, r3
    78f8:	bl	0 <coda_type_array_set_base_type>
    78fc:	mrc	15, 0, r3, cr13, cr0, {3}
    7900:	ldr	r2, [pc, #1952]	; 80a8 <grib_init+0x7a68>
    7904:	ldr	r3, [r3, r2]
    7908:	add	r3, r3, #552	; 0x228
    790c:	ldr	r3, [r3]
    7910:	mov	r1, #0
    7914:	mov	r0, r3
    7918:	bl	0 <coda_type_array_add_variable_dimension>
    791c:	mrc	15, 0, r3, cr13, cr0, {3}
    7920:	ldr	r2, [pc, #1920]	; 80a8 <grib_init+0x7a68>
    7924:	ldr	r3, [r3, r2]
    7928:	add	r4, r3, #556	; 0x22c
    792c:	mov	r0, #7
    7930:	bl	0 <coda_type_array_new>
    7934:	mov	r3, r0
    7938:	str	r3, [r4]
    793c:	mrc	15, 0, r3, cr13, cr0, {3}
    7940:	ldr	r2, [pc, #1888]	; 80a8 <grib_init+0x7a68>
    7944:	ldr	r3, [r3, r2]
    7948:	add	r3, r3, #556	; 0x22c
    794c:	ldr	r0, [r3]
    7950:	mrc	15, 0, r3, cr13, cr0, {3}
    7954:	ldr	r2, [pc, #1868]	; 80a8 <grib_init+0x7a68>
    7958:	ldr	r3, [r3, r2]
    795c:	add	r3, r3, #544	; 0x220
    7960:	ldr	r3, [r3]
    7964:	mov	r1, r3
    7968:	bl	0 <coda_type_array_set_base_type>
    796c:	mrc	15, 0, r3, cr13, cr0, {3}
    7970:	ldr	r2, [pc, #1840]	; 80a8 <grib_init+0x7a68>
    7974:	ldr	r3, [r3, r2]
    7978:	add	r3, r3, #556	; 0x22c
    797c:	ldr	r3, [r3]
    7980:	mov	r1, #0
    7984:	mov	r0, r3
    7988:	bl	0 <coda_type_array_add_variable_dimension>
    798c:	mrc	15, 0, r3, cr13, cr0, {3}
    7990:	ldr	r2, [pc, #1808]	; 80a8 <grib_init+0x7a68>
    7994:	ldr	r3, [r3, r2]
    7998:	add	r4, r3, #560	; 0x230
    799c:	mov	r0, #7
    79a0:	bl	0 <coda_type_record_new>
    79a4:	mov	r3, r0
    79a8:	str	r3, [r4]
    79ac:	movw	r0, #0
    79b0:	movt	r0, #0
    79b4:	bl	0 <coda_type_record_field_new>
    79b8:	str	r0, [fp, #-28]	; 0xffffffe4
    79bc:	mrc	15, 0, r3, cr13, cr0, {3}
    79c0:	ldr	r2, [pc, #1760]	; 80a8 <grib_init+0x7a68>
    79c4:	ldr	r3, [r3, r2]
    79c8:	add	r3, r3, #284	; 0x11c
    79cc:	ldr	r3, [r3]
    79d0:	mov	r1, r3
    79d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    79d8:	bl	0 <coda_type_record_field_set_type>
    79dc:	mrc	15, 0, r3, cr13, cr0, {3}
    79e0:	ldr	r2, [pc, #1728]	; 80a8 <grib_init+0x7a68>
    79e4:	ldr	r3, [r3, r2]
    79e8:	add	r3, r3, #560	; 0x230
    79ec:	ldr	r3, [r3]
    79f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    79f4:	mov	r0, r3
    79f8:	bl	0 <coda_type_record_add_field>
    79fc:	movw	r0, #0
    7a00:	movt	r0, #0
    7a04:	bl	0 <coda_type_record_field_new>
    7a08:	str	r0, [fp, #-28]	; 0xffffffe4
    7a0c:	mrc	15, 0, r3, cr13, cr0, {3}
    7a10:	ldr	r2, [pc, #1680]	; 80a8 <grib_init+0x7a68>
    7a14:	ldr	r3, [r3, r2]
    7a18:	add	r3, r3, #324	; 0x144
    7a1c:	ldr	r3, [r3]
    7a20:	mov	r1, r3
    7a24:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7a28:	bl	0 <coda_type_record_field_set_type>
    7a2c:	mrc	15, 0, r3, cr13, cr0, {3}
    7a30:	ldr	r2, [pc, #1648]	; 80a8 <grib_init+0x7a68>
    7a34:	ldr	r3, [r3, r2]
    7a38:	add	r3, r3, #560	; 0x230
    7a3c:	ldr	r3, [r3]
    7a40:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7a44:	mov	r0, r3
    7a48:	bl	0 <coda_type_record_add_field>
    7a4c:	movw	r0, #0
    7a50:	movt	r0, #0
    7a54:	bl	0 <coda_type_record_field_new>
    7a58:	str	r0, [fp, #-28]	; 0xffffffe4
    7a5c:	mrc	15, 0, r3, cr13, cr0, {3}
    7a60:	ldr	r2, [pc, #1600]	; 80a8 <grib_init+0x7a68>
    7a64:	ldr	r3, [r3, r2]
    7a68:	add	r3, r3, #288	; 0x120
    7a6c:	ldr	r3, [r3]
    7a70:	mov	r1, r3
    7a74:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7a78:	bl	0 <coda_type_record_field_set_type>
    7a7c:	mrc	15, 0, r3, cr13, cr0, {3}
    7a80:	ldr	r2, [pc, #1568]	; 80a8 <grib_init+0x7a68>
    7a84:	ldr	r3, [r3, r2]
    7a88:	add	r3, r3, #560	; 0x230
    7a8c:	ldr	r3, [r3]
    7a90:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7a94:	mov	r0, r3
    7a98:	bl	0 <coda_type_record_add_field>
    7a9c:	movw	r0, #0
    7aa0:	movt	r0, #0
    7aa4:	bl	0 <coda_type_record_field_new>
    7aa8:	str	r0, [fp, #-28]	; 0xffffffe4
    7aac:	mrc	15, 0, r3, cr13, cr0, {3}
    7ab0:	ldr	r2, [pc, #1520]	; 80a8 <grib_init+0x7a68>
    7ab4:	ldr	r3, [r3, r2]
    7ab8:	add	r3, r3, #316	; 0x13c
    7abc:	ldr	r3, [r3]
    7ac0:	mov	r1, r3
    7ac4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7ac8:	bl	0 <coda_type_record_field_set_type>
    7acc:	mrc	15, 0, r3, cr13, cr0, {3}
    7ad0:	ldr	r2, [pc, #1488]	; 80a8 <grib_init+0x7a68>
    7ad4:	ldr	r3, [r3, r2]
    7ad8:	add	r3, r3, #560	; 0x230
    7adc:	ldr	r3, [r3]
    7ae0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7ae4:	mov	r0, r3
    7ae8:	bl	0 <coda_type_record_add_field>
    7aec:	movw	r0, #0
    7af0:	movt	r0, #0
    7af4:	bl	0 <coda_type_record_field_new>
    7af8:	str	r0, [fp, #-28]	; 0xffffffe4
    7afc:	mrc	15, 0, r3, cr13, cr0, {3}
    7b00:	ldr	r2, [pc, #1440]	; 80a8 <grib_init+0x7a68>
    7b04:	ldr	r3, [r3, r2]
    7b08:	add	r3, r3, #328	; 0x148
    7b0c:	ldr	r3, [r3]
    7b10:	mov	r1, r3
    7b14:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7b18:	bl	0 <coda_type_record_field_set_type>
    7b1c:	mrc	15, 0, r3, cr13, cr0, {3}
    7b20:	ldr	r2, [pc, #1408]	; 80a8 <grib_init+0x7a68>
    7b24:	ldr	r3, [r3, r2]
    7b28:	add	r3, r3, #560	; 0x230
    7b2c:	ldr	r3, [r3]
    7b30:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7b34:	mov	r0, r3
    7b38:	bl	0 <coda_type_record_add_field>
    7b3c:	movw	r0, #0
    7b40:	movt	r0, #0
    7b44:	bl	0 <coda_type_record_field_new>
    7b48:	str	r0, [fp, #-28]	; 0xffffffe4
    7b4c:	mrc	15, 0, r3, cr13, cr0, {3}
    7b50:	ldr	r2, [pc, #1360]	; 80a8 <grib_init+0x7a68>
    7b54:	ldr	r3, [r3, r2]
    7b58:	add	r3, r3, #332	; 0x14c
    7b5c:	ldr	r3, [r3]
    7b60:	mov	r1, r3
    7b64:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7b68:	bl	0 <coda_type_record_field_set_type>
    7b6c:	mrc	15, 0, r3, cr13, cr0, {3}
    7b70:	ldr	r2, [pc, #1328]	; 80a8 <grib_init+0x7a68>
    7b74:	ldr	r3, [r3, r2]
    7b78:	add	r3, r3, #560	; 0x230
    7b7c:	ldr	r3, [r3]
    7b80:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7b84:	mov	r0, r3
    7b88:	bl	0 <coda_type_record_add_field>
    7b8c:	movw	r0, #0
    7b90:	movt	r0, #0
    7b94:	bl	0 <coda_type_record_field_new>
    7b98:	str	r0, [fp, #-28]	; 0xffffffe4
    7b9c:	mrc	15, 0, r3, cr13, cr0, {3}
    7ba0:	ldr	r2, [pc, #1280]	; 80a8 <grib_init+0x7a68>
    7ba4:	ldr	r3, [r3, r2]
    7ba8:	add	r3, r3, #336	; 0x150
    7bac:	ldr	r3, [r3]
    7bb0:	mov	r1, r3
    7bb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7bb8:	bl	0 <coda_type_record_field_set_type>
    7bbc:	mrc	15, 0, r3, cr13, cr0, {3}
    7bc0:	ldr	r2, [pc, #1248]	; 80a8 <grib_init+0x7a68>
    7bc4:	ldr	r3, [r3, r2]
    7bc8:	add	r3, r3, #560	; 0x230
    7bcc:	ldr	r3, [r3]
    7bd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7bd4:	mov	r0, r3
    7bd8:	bl	0 <coda_type_record_add_field>
    7bdc:	movw	r0, #0
    7be0:	movt	r0, #0
    7be4:	bl	0 <coda_type_record_field_new>
    7be8:	str	r0, [fp, #-28]	; 0xffffffe4
    7bec:	mrc	15, 0, r3, cr13, cr0, {3}
    7bf0:	ldr	r2, [pc, #1200]	; 80a8 <grib_init+0x7a68>
    7bf4:	ldr	r3, [r3, r2]
    7bf8:	add	r3, r3, #292	; 0x124
    7bfc:	ldr	r3, [r3]
    7c00:	mov	r1, r3
    7c04:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7c08:	bl	0 <coda_type_record_field_set_type>
    7c0c:	mrc	15, 0, r3, cr13, cr0, {3}
    7c10:	ldr	r2, [pc, #1168]	; 80a8 <grib_init+0x7a68>
    7c14:	ldr	r3, [r3, r2]
    7c18:	add	r3, r3, #560	; 0x230
    7c1c:	ldr	r3, [r3]
    7c20:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7c24:	mov	r0, r3
    7c28:	bl	0 <coda_type_record_add_field>
    7c2c:	movw	r0, #0
    7c30:	movt	r0, #0
    7c34:	bl	0 <coda_type_record_field_new>
    7c38:	str	r0, [fp, #-28]	; 0xffffffe4
    7c3c:	mrc	15, 0, r3, cr13, cr0, {3}
    7c40:	ldr	r2, [pc, #1120]	; 80a8 <grib_init+0x7a68>
    7c44:	ldr	r3, [r3, r2]
    7c48:	add	r3, r3, #296	; 0x128
    7c4c:	ldr	r3, [r3]
    7c50:	mov	r1, r3
    7c54:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7c58:	bl	0 <coda_type_record_field_set_type>
    7c5c:	mrc	15, 0, r3, cr13, cr0, {3}
    7c60:	ldr	r2, [pc, #1088]	; 80a8 <grib_init+0x7a68>
    7c64:	ldr	r3, [r3, r2]
    7c68:	add	r3, r3, #560	; 0x230
    7c6c:	ldr	r3, [r3]
    7c70:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7c74:	mov	r0, r3
    7c78:	bl	0 <coda_type_record_add_field>
    7c7c:	movw	r0, #0
    7c80:	movt	r0, #0
    7c84:	bl	0 <coda_type_record_field_new>
    7c88:	str	r0, [fp, #-28]	; 0xffffffe4
    7c8c:	mrc	15, 0, r3, cr13, cr0, {3}
    7c90:	ldr	r2, [pc, #1040]	; 80a8 <grib_init+0x7a68>
    7c94:	ldr	r3, [r3, r2]
    7c98:	add	r3, r3, #300	; 0x12c
    7c9c:	ldr	r3, [r3]
    7ca0:	mov	r1, r3
    7ca4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7ca8:	bl	0 <coda_type_record_field_set_type>
    7cac:	mrc	15, 0, r3, cr13, cr0, {3}
    7cb0:	ldr	r2, [pc, #1008]	; 80a8 <grib_init+0x7a68>
    7cb4:	ldr	r3, [r3, r2]
    7cb8:	add	r3, r3, #560	; 0x230
    7cbc:	ldr	r3, [r3]
    7cc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7cc4:	mov	r0, r3
    7cc8:	bl	0 <coda_type_record_add_field>
    7ccc:	movw	r0, #0
    7cd0:	movt	r0, #0
    7cd4:	bl	0 <coda_type_record_field_new>
    7cd8:	str	r0, [fp, #-28]	; 0xffffffe4
    7cdc:	mrc	15, 0, r3, cr13, cr0, {3}
    7ce0:	ldr	r2, [pc, #960]	; 80a8 <grib_init+0x7a68>
    7ce4:	ldr	r3, [r3, r2]
    7ce8:	add	r3, r3, #304	; 0x130
    7cec:	ldr	r3, [r3]
    7cf0:	mov	r1, r3
    7cf4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7cf8:	bl	0 <coda_type_record_field_set_type>
    7cfc:	mrc	15, 0, r3, cr13, cr0, {3}
    7d00:	ldr	r2, [pc, #928]	; 80a8 <grib_init+0x7a68>
    7d04:	ldr	r3, [r3, r2]
    7d08:	add	r3, r3, #560	; 0x230
    7d0c:	ldr	r3, [r3]
    7d10:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7d14:	mov	r0, r3
    7d18:	bl	0 <coda_type_record_add_field>
    7d1c:	movw	r0, #0
    7d20:	movt	r0, #0
    7d24:	bl	0 <coda_type_record_field_new>
    7d28:	str	r0, [fp, #-28]	; 0xffffffe4
    7d2c:	mrc	15, 0, r3, cr13, cr0, {3}
    7d30:	ldr	r2, [pc, #880]	; 80a8 <grib_init+0x7a68>
    7d34:	ldr	r3, [r3, r2]
    7d38:	add	r3, r3, #308	; 0x134
    7d3c:	ldr	r3, [r3]
    7d40:	mov	r1, r3
    7d44:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7d48:	bl	0 <coda_type_record_field_set_type>
    7d4c:	mrc	15, 0, r3, cr13, cr0, {3}
    7d50:	ldr	r2, [pc, #848]	; 80a8 <grib_init+0x7a68>
    7d54:	ldr	r3, [r3, r2]
    7d58:	add	r3, r3, #560	; 0x230
    7d5c:	ldr	r3, [r3]
    7d60:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7d64:	mov	r0, r3
    7d68:	bl	0 <coda_type_record_add_field>
    7d6c:	movw	r0, #0
    7d70:	movt	r0, #0
    7d74:	bl	0 <coda_type_record_field_new>
    7d78:	str	r0, [fp, #-28]	; 0xffffffe4
    7d7c:	mrc	15, 0, r3, cr13, cr0, {3}
    7d80:	ldr	r2, [pc, #800]	; 80a8 <grib_init+0x7a68>
    7d84:	ldr	r3, [r3, r2]
    7d88:	add	r3, r3, #312	; 0x138
    7d8c:	ldr	r3, [r3]
    7d90:	mov	r1, r3
    7d94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7d98:	bl	0 <coda_type_record_field_set_type>
    7d9c:	mrc	15, 0, r3, cr13, cr0, {3}
    7da0:	ldr	r2, [pc, #768]	; 80a8 <grib_init+0x7a68>
    7da4:	ldr	r3, [r3, r2]
    7da8:	add	r3, r3, #560	; 0x230
    7dac:	ldr	r3, [r3]
    7db0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7db4:	mov	r0, r3
    7db8:	bl	0 <coda_type_record_add_field>
    7dbc:	movw	r0, #0
    7dc0:	movt	r0, #0
    7dc4:	bl	0 <coda_type_record_field_new>
    7dc8:	str	r0, [fp, #-28]	; 0xffffffe4
    7dcc:	mrc	15, 0, r3, cr13, cr0, {3}
    7dd0:	ldr	r2, [pc, #720]	; 80a8 <grib_init+0x7a68>
    7dd4:	ldr	r3, [r3, r2]
    7dd8:	add	r3, r3, #340	; 0x154
    7ddc:	ldr	r3, [r3]
    7de0:	mov	r1, r3
    7de4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7de8:	bl	0 <coda_type_record_field_set_type>
    7dec:	mrc	15, 0, r3, cr13, cr0, {3}
    7df0:	ldr	r2, [pc, #688]	; 80a8 <grib_init+0x7a68>
    7df4:	ldr	r3, [r3, r2]
    7df8:	add	r3, r3, #560	; 0x230
    7dfc:	ldr	r3, [r3]
    7e00:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7e04:	mov	r0, r3
    7e08:	bl	0 <coda_type_record_add_field>
    7e0c:	movw	r0, #0
    7e10:	movt	r0, #0
    7e14:	bl	0 <coda_type_record_field_new>
    7e18:	str	r0, [fp, #-28]	; 0xffffffe4
    7e1c:	mrc	15, 0, r3, cr13, cr0, {3}
    7e20:	ldr	r2, [pc, #640]	; 80a8 <grib_init+0x7a68>
    7e24:	ldr	r3, [r3, r2]
    7e28:	add	r3, r3, #344	; 0x158
    7e2c:	ldr	r3, [r3]
    7e30:	mov	r1, r3
    7e34:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7e38:	bl	0 <coda_type_record_field_set_type>
    7e3c:	mrc	15, 0, r3, cr13, cr0, {3}
    7e40:	ldr	r2, [pc, #608]	; 80a8 <grib_init+0x7a68>
    7e44:	ldr	r3, [r3, r2]
    7e48:	add	r3, r3, #560	; 0x230
    7e4c:	ldr	r3, [r3]
    7e50:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7e54:	mov	r0, r3
    7e58:	bl	0 <coda_type_record_add_field>
    7e5c:	movw	r0, #0
    7e60:	movt	r0, #0
    7e64:	bl	0 <coda_type_record_field_new>
    7e68:	str	r0, [fp, #-28]	; 0xffffffe4
    7e6c:	mrc	15, 0, r3, cr13, cr0, {3}
    7e70:	ldr	r2, [pc, #560]	; 80a8 <grib_init+0x7a68>
    7e74:	ldr	r3, [r3, r2]
    7e78:	add	r3, r3, #548	; 0x224
    7e7c:	ldr	r3, [r3]
    7e80:	mov	r1, r3
    7e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7e88:	bl	0 <coda_type_record_field_set_type>
    7e8c:	mrc	15, 0, r3, cr13, cr0, {3}
    7e90:	ldr	r2, [pc, #528]	; 80a8 <grib_init+0x7a68>
    7e94:	ldr	r3, [r3, r2]
    7e98:	add	r3, r3, #560	; 0x230
    7e9c:	ldr	r3, [r3]
    7ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7ea4:	mov	r0, r3
    7ea8:	bl	0 <coda_type_record_add_field>
    7eac:	movw	r0, #0
    7eb0:	movt	r0, #0
    7eb4:	bl	0 <coda_type_record_field_new>
    7eb8:	str	r0, [fp, #-28]	; 0xffffffe4
    7ebc:	mrc	15, 0, r3, cr13, cr0, {3}
    7ec0:	ldr	r2, [pc, #480]	; 80a8 <grib_init+0x7a68>
    7ec4:	ldr	r3, [r3, r2]
    7ec8:	add	r3, r3, #552	; 0x228
    7ecc:	ldr	r3, [r3]
    7ed0:	mov	r1, r3
    7ed4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7ed8:	bl	0 <coda_type_record_field_set_type>
    7edc:	mrc	15, 0, r3, cr13, cr0, {3}
    7ee0:	ldr	r2, [pc, #448]	; 80a8 <grib_init+0x7a68>
    7ee4:	ldr	r3, [r3, r2]
    7ee8:	add	r3, r3, #560	; 0x230
    7eec:	ldr	r3, [r3]
    7ef0:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7ef4:	mov	r0, r3
    7ef8:	bl	0 <coda_type_record_add_field>
    7efc:	movw	r0, #0
    7f00:	movt	r0, #0
    7f04:	bl	0 <coda_type_record_field_new>
    7f08:	str	r0, [fp, #-28]	; 0xffffffe4
    7f0c:	mrc	15, 0, r3, cr13, cr0, {3}
    7f10:	ldr	r2, [pc, #400]	; 80a8 <grib_init+0x7a68>
    7f14:	ldr	r3, [r3, r2]
    7f18:	add	r3, r3, #556	; 0x22c
    7f1c:	ldr	r3, [r3]
    7f20:	mov	r1, r3
    7f24:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7f28:	bl	0 <coda_type_record_field_set_type>
    7f2c:	mrc	15, 0, r3, cr13, cr0, {3}
    7f30:	ldr	r2, [pc, #368]	; 80a8 <grib_init+0x7a68>
    7f34:	ldr	r3, [r3, r2]
    7f38:	add	r3, r3, #560	; 0x230
    7f3c:	ldr	r3, [r3]
    7f40:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7f44:	mov	r0, r3
    7f48:	bl	0 <coda_type_record_add_field>
    7f4c:	mrc	15, 0, r3, cr13, cr0, {3}
    7f50:	ldr	r2, [pc, #336]	; 80a8 <grib_init+0x7a68>
    7f54:	ldr	r3, [r3, r2]
    7f58:	add	r4, r3, #564	; 0x234
    7f5c:	mov	r0, #7
    7f60:	bl	0 <coda_type_union_new>
    7f64:	mov	r3, r0
    7f68:	str	r3, [r4]
    7f6c:	movw	r0, #0
    7f70:	movt	r0, #0
    7f74:	bl	0 <coda_type_record_field_new>
    7f78:	str	r0, [fp, #-28]	; 0xffffffe4
    7f7c:	mrc	15, 0, r3, cr13, cr0, {3}
    7f80:	ldr	r2, [pc, #288]	; 80a8 <grib_init+0x7a68>
    7f84:	ldr	r3, [r3, r2]
    7f88:	add	r3, r3, #272	; 0x110
    7f8c:	ldr	r3, [r3]
    7f90:	mov	r1, r3
    7f94:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7f98:	bl	0 <coda_type_record_field_set_type>
    7f9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7fa0:	bl	0 <coda_type_record_field_set_optional>
    7fa4:	mrc	15, 0, r3, cr13, cr0, {3}
    7fa8:	ldr	r2, [pc, #248]	; 80a8 <grib_init+0x7a68>
    7fac:	ldr	r3, [r3, r2]
    7fb0:	add	r3, r3, #564	; 0x234
    7fb4:	ldr	r3, [r3]
    7fb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
    7fbc:	mov	r0, r3
    7fc0:	bl	0 <coda_type_record_add_field>
    7fc4:	movw	r0, #0
    7fc8:	movt	r0, #0
    7fcc:	bl	0 <coda_type_record_field_new>
    7fd0:	str	r0, [fp, #-28]	; 0xffffffe4
    7fd4:	mrc	15, 0, r3, cr13, cr0, {3}
    7fd8:	ldr	r2, [pc, #200]	; 80a8 <grib_init+0x7a68>
    7fdc:	ldr	r3, [r3, r2]
    7fe0:	add	r3, r3, #560	; 0x230
    7fe4:	ldr	r3, [r3]
    7fe8:	mov	r1, r3
    7fec:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7ff0:	bl	0 <coda_type_record_field_set_type>
    7ff4:	ldr	r0, [fp, #-28]	; 0xffffffe4
    7ff8:	bl	0 <coda_type_record_field_set_optional>
    7ffc:	mrc	15, 0, r3, cr13, cr0, {3}
    8000:	ldr	r2, [pc, #160]	; 80a8 <grib_init+0x7a68>
    8004:	ldr	r3, [r3, r2]
    8008:	add	r3, r3, #564	; 0x234
    800c:	ldr	r3, [r3]
    8010:	ldr	r1, [fp, #-28]	; 0xffffffe4
    8014:	mov	r0, r3
    8018:	bl	0 <coda_type_record_add_field>
    801c:	mrc	15, 0, r3, cr13, cr0, {3}
    8020:	ldr	r2, [pc, #128]	; 80a8 <grib_init+0x7a68>
    8024:	ldr	r3, [r3, r2]
    8028:	add	r4, r3, #568	; 0x238
    802c:	mov	r0, #7
    8030:	bl	0 <coda_type_array_new>
    8034:	mov	r3, r0
    8038:	str	r3, [r4]
    803c:	mrc	15, 0, r3, cr13, cr0, {3}
    8040:	ldr	r2, [pc, #96]	; 80a8 <grib_init+0x7a68>
    8044:	ldr	r3, [r3, r2]
    8048:	add	r3, r3, #568	; 0x238
    804c:	ldr	r0, [r3]
    8050:	mrc	15, 0, r3, cr13, cr0, {3}
    8054:	ldr	r2, [pc, #76]	; 80a8 <grib_init+0x7a68>
    8058:	ldr	r3, [r3, r2]
    805c:	add	r3, r3, #564	; 0x234
    8060:	ldr	r3, [r3]
    8064:	mov	r1, r3
    8068:	bl	0 <coda_type_array_set_base_type>
    806c:	mrc	15, 0, r3, cr13, cr0, {3}
    8070:	ldr	r2, [pc, #48]	; 80a8 <grib_init+0x7a68>
    8074:	ldr	r3, [r3, r2]
    8078:	add	r3, r3, #568	; 0x238
    807c:	ldr	r3, [r3]
    8080:	mov	r1, #0
    8084:	mov	r0, r3
    8088:	bl	0 <coda_type_array_add_variable_dimension>
    808c:	mov	r3, #0
    8090:	mov	r0, r3
    8094:	sub	sp, fp, #8
    8098:	ldr	r4, [sp]
    809c:	ldr	fp, [sp, #4]
    80a0:	add	sp, sp, #8
    80a4:	pop	{pc}		; (ldr pc, [sp], #4)
    80a8:	.word	0x00000000

000080ac <coda_grib_done>:
    80ac:	str	fp, [sp, #-8]!
    80b0:	str	lr, [sp, #4]
    80b4:	add	fp, sp, #4
    80b8:	sub	sp, sp, #8
    80bc:	mrc	15, 0, r3, cr13, cr0, {3}
    80c0:	ldr	r2, [pc, #208]	; 8198 <coda_grib_done+0xec>
    80c4:	ldr	r3, [r3, r2]
    80c8:	cmp	r3, #0
    80cc:	beq	8184 <coda_grib_done+0xd8>
    80d0:	mov	r3, #0
    80d4:	str	r3, [fp, #-8]
    80d8:	b	8150 <coda_grib_done+0xa4>
    80dc:	mrc	15, 0, r3, cr13, cr0, {3}
    80e0:	ldr	r2, [pc, #176]	; 8198 <coda_grib_done+0xec>
    80e4:	ldr	r2, [r3, r2]
    80e8:	ldr	r3, [fp, #-8]
    80ec:	lsl	r3, r3, #2
    80f0:	add	r3, r2, r3
    80f4:	ldr	r3, [r3]
    80f8:	cmp	r3, #0
    80fc:	beq	8144 <coda_grib_done+0x98>
    8100:	mrc	15, 0, r3, cr13, cr0, {3}
    8104:	ldr	r2, [pc, #140]	; 8198 <coda_grib_done+0xec>
    8108:	ldr	r2, [r3, r2]
    810c:	ldr	r3, [fp, #-8]
    8110:	lsl	r3, r3, #2
    8114:	add	r3, r2, r3
    8118:	ldr	r3, [r3]
    811c:	mov	r0, r3
    8120:	bl	0 <coda_type_release>
    8124:	mrc	15, 0, r3, cr13, cr0, {3}
    8128:	ldr	r2, [pc, #104]	; 8198 <coda_grib_done+0xec>
    812c:	ldr	r2, [r3, r2]
    8130:	ldr	r3, [fp, #-8]
    8134:	lsl	r3, r3, #2
    8138:	add	r3, r2, r3
    813c:	mov	r2, #0
    8140:	str	r2, [r3]
    8144:	ldr	r3, [fp, #-8]
    8148:	add	r3, r3, #1
    814c:	str	r3, [fp, #-8]
    8150:	ldr	r3, [fp, #-8]
    8154:	cmp	r3, #142	; 0x8e
    8158:	ble	80dc <coda_grib_done+0x30>
    815c:	mrc	15, 0, r3, cr13, cr0, {3}
    8160:	ldr	r2, [pc, #48]	; 8198 <coda_grib_done+0xec>
    8164:	ldr	r3, [r3, r2]
    8168:	mov	r0, r3
    816c:	bl	0 <free>
    8170:	mrc	15, 0, r3, cr13, cr0, {3}
    8174:	ldr	r2, [pc, #28]	; 8198 <coda_grib_done+0xec>
    8178:	mov	r1, #0
    817c:	str	r1, [r3, r2]
    8180:	b	8188 <coda_grib_done+0xdc>
    8184:	nop	{0}
    8188:	sub	sp, fp, #4
    818c:	ldr	fp, [sp]
    8190:	add	sp, sp, #4
    8194:	pop	{pc}		; (ldr pc, [sp], #4)
    8198:	.word	0x00000000

0000819c <ibmfloat_to_iee754>:
    819c:	str	fp, [sp, #-8]!
    81a0:	str	lr, [sp, #4]
    81a4:	add	fp, sp, #4
    81a8:	sub	sp, sp, #24
    81ac:	str	r0, [fp, #-24]	; 0xffffffe8
    81b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
    81b4:	ldrb	r3, [r3]
    81b8:	sxtb	r3, r3
    81bc:	asr	r3, r3, #7
    81c0:	sxtb	r3, r3
    81c4:	and	r3, r3, #1
    81c8:	str	r3, [fp, #-16]
    81cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    81d0:	ldrb	r3, [r3]
    81d4:	and	r3, r3, #127	; 0x7f
    81d8:	str	r3, [fp, #-8]
    81dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
    81e0:	add	r3, r3, #1
    81e4:	ldrb	r3, [r3]
    81e8:	lsl	r3, r3, #8
    81ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
    81f0:	add	r2, r2, #2
    81f4:	ldrb	r2, [r2]
    81f8:	add	r3, r3, r2
    81fc:	lsl	r3, r3, #8
    8200:	ldr	r2, [fp, #-24]	; 0xffffffe8
    8204:	add	r2, r2, #3
    8208:	ldrb	r2, [r2]
    820c:	add	r3, r3, r2
    8210:	str	r3, [fp, #-12]
    8214:	ldr	r3, [fp, #-12]
    8218:	cmp	r3, #0
    821c:	bne	8228 <ibmfloat_to_iee754+0x8c>
    8220:	vldr	s15, [pc, #212]	; 82fc <ibmfloat_to_iee754+0x160>
    8224:	b	82e8 <ibmfloat_to_iee754+0x14c>
    8228:	ldr	r3, [fp, #-8]
    822c:	lsl	r3, r3, #2
    8230:	sub	r3, r3, #130	; 0x82
    8234:	str	r3, [fp, #-8]
    8238:	b	8254 <ibmfloat_to_iee754+0xb8>
    823c:	ldr	r3, [fp, #-12]
    8240:	lsl	r3, r3, #1
    8244:	str	r3, [fp, #-12]
    8248:	ldr	r3, [fp, #-8]
    824c:	sub	r3, r3, #1
    8250:	str	r3, [fp, #-8]
    8254:	ldr	r3, [fp, #-12]
    8258:	cmp	r3, #8388608	; 0x800000
    825c:	bcc	823c <ibmfloat_to_iee754+0xa0>
    8260:	ldr	r3, [fp, #-8]
    8264:	cmp	r3, #254	; 0xfe
    8268:	ble	827c <ibmfloat_to_iee754+0xe0>
    826c:	bl	0 <coda_PlusInf>
    8270:	vmov.f64	d7, d0
    8274:	vcvt.f32.f64	s15, d7
    8278:	b	82e8 <ibmfloat_to_iee754+0x14c>
    827c:	ldr	r3, [fp, #-8]
    8280:	cmp	r3, #0
    8284:	bgt	82bc <ibmfloat_to_iee754+0x120>
    8288:	ldr	r3, [fp, #-8]
    828c:	cmn	r3, #24
    8290:	bge	82a0 <ibmfloat_to_iee754+0x104>
    8294:	mov	r3, #0
    8298:	str	r3, [fp, #-12]
    829c:	b	82b4 <ibmfloat_to_iee754+0x118>
    82a0:	ldr	r3, [fp, #-8]
    82a4:	rsb	r3, r3, #0
    82a8:	ldr	r2, [fp, #-12]
    82ac:	lsr	r3, r2, r3
    82b0:	str	r3, [fp, #-12]
    82b4:	mov	r3, #0
    82b8:	str	r3, [fp, #-8]
    82bc:	ldr	r3, [fp, #-16]
    82c0:	lsl	r2, r3, #31
    82c4:	ldr	r3, [fp, #-8]
    82c8:	lsl	r3, r3, #23
    82cc:	orr	r3, r2, r3
    82d0:	mov	r2, r3
    82d4:	ldr	r3, [fp, #-12]
    82d8:	ubfx	r3, r3, #0, #23
    82dc:	orr	r3, r2, r3
    82e0:	str	r3, [fp, #-20]	; 0xffffffec
    82e4:	vldr	s15, [fp, #-20]	; 0xffffffec
    82e8:	vmov.f32	s0, s15
    82ec:	sub	sp, fp, #4
    82f0:	ldr	fp, [sp]
    82f4:	add	sp, sp, #4
    82f8:	pop	{pc}		; (ldr pc, [sp], #4)
    82fc:	.word	0x00000000

00008300 <read_grib1_message>:
    8300:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8304:	strd	r6, [sp, #8]
    8308:	strd	r8, [sp, #16]
    830c:	str	fp, [sp, #24]
    8310:	str	lr, [sp, #28]
    8314:	add	fp, sp, #28
    8318:	sub	sp, sp, #272	; 0x110
    831c:	str	r0, [fp, #-184]	; 0xffffff48
    8320:	str	r1, [fp, #-188]	; 0xffffff44
    8324:	strd	r2, [fp, #-196]	; 0xffffff3c
    8328:	ldr	r3, [fp, #-184]	; 0xffffff48
    832c:	str	r3, [fp, #-48]	; 0xffffffd0
    8330:	mov	r3, #0
    8334:	str	r3, [fp, #-32]	; 0xffffffe0
    8338:	mov	r3, #0
    833c:	str	r3, [fp, #-36]	; 0xffffffdc
    8340:	ldr	r3, [fp, #-184]	; 0xffffff48
    8344:	ldr	r1, [r3, #52]	; 0x34
    8348:	sub	r3, fp, #156	; 0x9c
    834c:	str	r3, [sp, #8]
    8350:	mov	r2, #28
    8354:	mov	r3, #0
    8358:	strd	r2, [sp]
    835c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    8360:	mov	r0, r1
    8364:	bl	0 <read_bytes>
    8368:	mov	r3, r0
    836c:	cmp	r3, #0
    8370:	bge	837c <read_grib1_message+0x7c>
    8374:	mvn	r3, #0
    8378:	b	a0d0 <read_grib1_message+0x1dd0>
    837c:	ldrb	r3, [fp, #-156]	; 0xffffff64
    8380:	lsl	r2, r3, #8
    8384:	ldrb	r3, [fp, #-155]	; 0xffffff65
    8388:	add	r3, r2, r3
    838c:	lsl	r2, r3, #8
    8390:	ldrb	r3, [fp, #-154]	; 0xffffff66
    8394:	add	r3, r2, r3
    8398:	str	r3, [fp, #-52]	; 0xffffffcc
    839c:	mrc	15, 0, r2, cr13, cr0, {3}
    83a0:	ldr	r3, [pc, #3968]	; 9328 <read_grib1_message+0x1028>
    83a4:	ldr	r3, [r2, r3]
    83a8:	ldr	r3, [r3, #8]
    83ac:	str	r3, [fp, #-56]	; 0xffffffc8
    83b0:	ldrb	r3, [fp, #-153]	; 0xffffff67
    83b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    83b8:	mov	r1, #0
    83bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    83c0:	bl	0 <coda_mem_uint8_new>
    83c4:	str	r0, [fp, #-60]	; 0xffffffc4
    83c8:	mov	r3, #0
    83cc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    83d0:	movw	r1, #0
    83d4:	movt	r1, #0
    83d8:	ldr	r0, [fp, #-188]	; 0xffffff44
    83dc:	bl	0 <coda_mem_record_add_field>
    83e0:	mrc	15, 0, r2, cr13, cr0, {3}
    83e4:	ldr	r3, [pc, #3900]	; 9328 <read_grib1_message+0x1028>
    83e8:	ldr	r3, [r2, r3]
    83ec:	ldr	r3, [r3, #16]
    83f0:	str	r3, [fp, #-56]	; 0xffffffc8
    83f4:	ldrb	r3, [fp, #-152]	; 0xffffff68
    83f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    83fc:	mov	r1, #0
    8400:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8404:	bl	0 <coda_mem_uint8_new>
    8408:	str	r0, [fp, #-60]	; 0xffffffc4
    840c:	mov	r3, #0
    8410:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8414:	movw	r1, #0
    8418:	movt	r1, #0
    841c:	ldr	r0, [fp, #-188]	; 0xffffff44
    8420:	bl	0 <coda_mem_record_add_field>
    8424:	mrc	15, 0, r2, cr13, cr0, {3}
    8428:	ldr	r3, [pc, #3832]	; 9328 <read_grib1_message+0x1028>
    842c:	ldr	r3, [r2, r3]
    8430:	ldr	r3, [r3, #20]
    8434:	str	r3, [fp, #-56]	; 0xffffffc8
    8438:	ldrb	r3, [fp, #-151]	; 0xffffff69
    843c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8440:	mov	r1, #0
    8444:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8448:	bl	0 <coda_mem_uint8_new>
    844c:	str	r0, [fp, #-60]	; 0xffffffc4
    8450:	mov	r3, #0
    8454:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8458:	movw	r1, #0
    845c:	movt	r1, #0
    8460:	ldr	r0, [fp, #-188]	; 0xffffff44
    8464:	bl	0 <coda_mem_record_add_field>
    8468:	ldrb	r3, [fp, #-150]	; 0xffffff6a
    846c:	strb	r3, [fp, #-61]	; 0xffffffc3
    8470:	mrc	15, 0, r2, cr13, cr0, {3}
    8474:	ldr	r3, [pc, #3756]	; 9328 <read_grib1_message+0x1028>
    8478:	ldr	r3, [r2, r3]
    847c:	ldr	r3, [r3, #24]
    8480:	str	r3, [fp, #-56]	; 0xffffffc8
    8484:	ldrb	r3, [fp, #-61]	; 0xffffffc3
    8488:	ldr	r2, [fp, #-48]	; 0xffffffd0
    848c:	mov	r1, #0
    8490:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8494:	bl	0 <coda_mem_uint8_new>
    8498:	str	r0, [fp, #-60]	; 0xffffffc4
    849c:	mov	r3, #0
    84a0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    84a4:	movw	r1, #0
    84a8:	movt	r1, #0
    84ac:	ldr	r0, [fp, #-188]	; 0xffffff44
    84b0:	bl	0 <coda_mem_record_add_field>
    84b4:	ldrb	r3, [fp, #-149]	; 0xffffff6b
    84b8:	sxtb	r3, r3
    84bc:	asr	r3, r3, #7
    84c0:	sxtb	r3, r3
    84c4:	and	r3, r3, #1
    84c8:	str	r3, [fp, #-68]	; 0xffffffbc
    84cc:	ldrb	r3, [fp, #-149]	; 0xffffff6b
    84d0:	asr	r3, r3, #6
    84d4:	and	r3, r3, #1
    84d8:	str	r3, [fp, #-72]	; 0xffffffb8
    84dc:	mrc	15, 0, r2, cr13, cr0, {3}
    84e0:	ldr	r3, [pc, #3648]	; 9328 <read_grib1_message+0x1028>
    84e4:	ldr	r3, [r2, r3]
    84e8:	ldr	r3, [r3, #28]
    84ec:	str	r3, [fp, #-56]	; 0xffffffc8
    84f0:	ldrb	r3, [fp, #-148]	; 0xffffff6c
    84f4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    84f8:	mov	r1, #0
    84fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8500:	bl	0 <coda_mem_uint8_new>
    8504:	str	r0, [fp, #-60]	; 0xffffffc4
    8508:	mov	r3, #0
    850c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8510:	movw	r1, #0
    8514:	movt	r1, #0
    8518:	ldr	r0, [fp, #-188]	; 0xffffff44
    851c:	bl	0 <coda_mem_record_add_field>
    8520:	mrc	15, 0, r2, cr13, cr0, {3}
    8524:	ldr	r3, [pc, #3580]	; 9328 <read_grib1_message+0x1028>
    8528:	ldr	r3, [r2, r3]
    852c:	ldr	r3, [r3, #32]
    8530:	str	r3, [fp, #-56]	; 0xffffffc8
    8534:	ldrb	r3, [fp, #-147]	; 0xffffff6d
    8538:	ldr	r2, [fp, #-48]	; 0xffffffd0
    853c:	mov	r1, #0
    8540:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8544:	bl	0 <coda_mem_uint8_new>
    8548:	str	r0, [fp, #-60]	; 0xffffffc4
    854c:	mov	r3, #0
    8550:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8554:	movw	r1, #0
    8558:	movt	r1, #0
    855c:	ldr	r0, [fp, #-188]	; 0xffffff44
    8560:	bl	0 <coda_mem_record_add_field>
    8564:	mrc	15, 0, r2, cr13, cr0, {3}
    8568:	ldr	r3, [pc, #3512]	; 9328 <read_grib1_message+0x1028>
    856c:	ldr	r3, [r2, r3]
    8570:	ldr	r3, [r3, #36]	; 0x24
    8574:	str	r3, [fp, #-56]	; 0xffffffc8
    8578:	ldrb	r3, [fp, #-146]	; 0xffffff6e
    857c:	uxth	r3, r3
    8580:	lsl	r3, r3, #8
    8584:	uxth	r2, r3
    8588:	ldrb	r3, [fp, #-145]	; 0xffffff6f
    858c:	uxth	r3, r3
    8590:	add	r3, r2, r3
    8594:	uxth	r3, r3
    8598:	ldr	r2, [fp, #-48]	; 0xffffffd0
    859c:	mov	r1, #0
    85a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    85a4:	bl	0 <coda_mem_uint16_new>
    85a8:	str	r0, [fp, #-60]	; 0xffffffc4
    85ac:	mov	r3, #0
    85b0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    85b4:	movw	r1, #0
    85b8:	movt	r1, #0
    85bc:	ldr	r0, [fp, #-188]	; 0xffffff44
    85c0:	bl	0 <coda_mem_record_add_field>
    85c4:	mrc	15, 0, r2, cr13, cr0, {3}
    85c8:	ldr	r3, [pc, #3416]	; 9328 <read_grib1_message+0x1028>
    85cc:	ldr	r3, [r2, r3]
    85d0:	ldr	r3, [r3, #40]	; 0x28
    85d4:	str	r3, [fp, #-56]	; 0xffffffc8
    85d8:	ldrb	r3, [fp, #-144]	; 0xffffff70
    85dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    85e0:	mov	r1, #0
    85e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    85e8:	bl	0 <coda_mem_uint8_new>
    85ec:	str	r0, [fp, #-60]	; 0xffffffc4
    85f0:	mov	r3, #0
    85f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    85f8:	movw	r1, #0
    85fc:	movt	r1, #0
    8600:	ldr	r0, [fp, #-188]	; 0xffffff44
    8604:	bl	0 <coda_mem_record_add_field>
    8608:	mrc	15, 0, r2, cr13, cr0, {3}
    860c:	ldr	r3, [pc, #3348]	; 9328 <read_grib1_message+0x1028>
    8610:	ldr	r3, [r2, r3]
    8614:	ldr	r3, [r3, #48]	; 0x30
    8618:	str	r3, [fp, #-56]	; 0xffffffc8
    861c:	ldrb	r3, [fp, #-143]	; 0xffffff71
    8620:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8624:	mov	r1, #0
    8628:	ldr	r0, [fp, #-56]	; 0xffffffc8
    862c:	bl	0 <coda_mem_uint8_new>
    8630:	str	r0, [fp, #-60]	; 0xffffffc4
    8634:	mov	r3, #0
    8638:	ldr	r2, [fp, #-60]	; 0xffffffc4
    863c:	movw	r1, #0
    8640:	movt	r1, #0
    8644:	ldr	r0, [fp, #-188]	; 0xffffff44
    8648:	bl	0 <coda_mem_record_add_field>
    864c:	mrc	15, 0, r2, cr13, cr0, {3}
    8650:	ldr	r3, [pc, #3280]	; 9328 <read_grib1_message+0x1028>
    8654:	ldr	r3, [r2, r3]
    8658:	ldr	r3, [r3, #52]	; 0x34
    865c:	str	r3, [fp, #-56]	; 0xffffffc8
    8660:	ldrb	r3, [fp, #-142]	; 0xffffff72
    8664:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8668:	mov	r1, #0
    866c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8670:	bl	0 <coda_mem_uint8_new>
    8674:	str	r0, [fp, #-60]	; 0xffffffc4
    8678:	mov	r3, #0
    867c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8680:	movw	r1, #0
    8684:	movt	r1, #0
    8688:	ldr	r0, [fp, #-188]	; 0xffffff44
    868c:	bl	0 <coda_mem_record_add_field>
    8690:	mrc	15, 0, r2, cr13, cr0, {3}
    8694:	ldr	r3, [pc, #3212]	; 9328 <read_grib1_message+0x1028>
    8698:	ldr	r3, [r2, r3]
    869c:	ldr	r3, [r3, #56]	; 0x38
    86a0:	str	r3, [fp, #-56]	; 0xffffffc8
    86a4:	ldrb	r3, [fp, #-141]	; 0xffffff73
    86a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    86ac:	mov	r1, #0
    86b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    86b4:	bl	0 <coda_mem_uint8_new>
    86b8:	str	r0, [fp, #-60]	; 0xffffffc4
    86bc:	mov	r3, #0
    86c0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    86c4:	movw	r1, #0
    86c8:	movt	r1, #0
    86cc:	ldr	r0, [fp, #-188]	; 0xffffff44
    86d0:	bl	0 <coda_mem_record_add_field>
    86d4:	mrc	15, 0, r2, cr13, cr0, {3}
    86d8:	ldr	r3, [pc, #3144]	; 9328 <read_grib1_message+0x1028>
    86dc:	ldr	r3, [r2, r3]
    86e0:	ldr	r3, [r3, #60]	; 0x3c
    86e4:	str	r3, [fp, #-56]	; 0xffffffc8
    86e8:	ldrb	r3, [fp, #-140]	; 0xffffff74
    86ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
    86f0:	mov	r1, #0
    86f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    86f8:	bl	0 <coda_mem_uint8_new>
    86fc:	str	r0, [fp, #-60]	; 0xffffffc4
    8700:	mov	r3, #0
    8704:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8708:	movw	r1, #0
    870c:	movt	r1, #0
    8710:	ldr	r0, [fp, #-188]	; 0xffffff44
    8714:	bl	0 <coda_mem_record_add_field>
    8718:	mrc	15, 0, r2, cr13, cr0, {3}
    871c:	ldr	r3, [pc, #3076]	; 9328 <read_grib1_message+0x1028>
    8720:	ldr	r3, [r2, r3]
    8724:	ldr	r3, [r3, #68]	; 0x44
    8728:	str	r3, [fp, #-56]	; 0xffffffc8
    872c:	ldrb	r3, [fp, #-139]	; 0xffffff75
    8730:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8734:	mov	r1, #0
    8738:	ldr	r0, [fp, #-56]	; 0xffffffc8
    873c:	bl	0 <coda_mem_uint8_new>
    8740:	str	r0, [fp, #-60]	; 0xffffffc4
    8744:	mov	r3, #0
    8748:	ldr	r2, [fp, #-60]	; 0xffffffc4
    874c:	movw	r1, #0
    8750:	movt	r1, #0
    8754:	ldr	r0, [fp, #-188]	; 0xffffff44
    8758:	bl	0 <coda_mem_record_add_field>
    875c:	mrc	15, 0, r2, cr13, cr0, {3}
    8760:	ldr	r3, [pc, #3008]	; 9328 <read_grib1_message+0x1028>
    8764:	ldr	r3, [r2, r3]
    8768:	ldr	r3, [r3, #72]	; 0x48
    876c:	str	r3, [fp, #-56]	; 0xffffffc8
    8770:	ldrb	r3, [fp, #-138]	; 0xffffff76
    8774:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8778:	mov	r1, #0
    877c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8780:	bl	0 <coda_mem_uint8_new>
    8784:	str	r0, [fp, #-60]	; 0xffffffc4
    8788:	mov	r3, #0
    878c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8790:	movw	r1, #0
    8794:	movt	r1, #0
    8798:	ldr	r0, [fp, #-188]	; 0xffffff44
    879c:	bl	0 <coda_mem_record_add_field>
    87a0:	mrc	15, 0, r2, cr13, cr0, {3}
    87a4:	ldr	r3, [pc, #2940]	; 9328 <read_grib1_message+0x1028>
    87a8:	ldr	r3, [r2, r3]
    87ac:	ldr	r3, [r3, #76]	; 0x4c
    87b0:	str	r3, [fp, #-56]	; 0xffffffc8
    87b4:	ldrb	r3, [fp, #-137]	; 0xffffff77
    87b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
    87bc:	mov	r1, #0
    87c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    87c4:	bl	0 <coda_mem_uint8_new>
    87c8:	str	r0, [fp, #-60]	; 0xffffffc4
    87cc:	mov	r3, #0
    87d0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    87d4:	movw	r1, #0
    87d8:	movt	r1, #0
    87dc:	ldr	r0, [fp, #-188]	; 0xffffff44
    87e0:	bl	0 <coda_mem_record_add_field>
    87e4:	mrc	15, 0, r2, cr13, cr0, {3}
    87e8:	ldr	r3, [pc, #2872]	; 9328 <read_grib1_message+0x1028>
    87ec:	ldr	r3, [r2, r3]
    87f0:	ldr	r3, [r3, #80]	; 0x50
    87f4:	str	r3, [fp, #-56]	; 0xffffffc8
    87f8:	ldrb	r3, [fp, #-136]	; 0xffffff78
    87fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8800:	mov	r1, #0
    8804:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8808:	bl	0 <coda_mem_uint8_new>
    880c:	str	r0, [fp, #-60]	; 0xffffffc4
    8810:	mov	r3, #0
    8814:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8818:	movw	r1, #0
    881c:	movt	r1, #0
    8820:	ldr	r0, [fp, #-188]	; 0xffffff44
    8824:	bl	0 <coda_mem_record_add_field>
    8828:	mrc	15, 0, r2, cr13, cr0, {3}
    882c:	ldr	r3, [pc, #2804]	; 9328 <read_grib1_message+0x1028>
    8830:	ldr	r3, [r2, r3]
    8834:	ldr	r3, [r3, #84]	; 0x54
    8838:	str	r3, [fp, #-56]	; 0xffffffc8
    883c:	ldrb	r3, [fp, #-135]	; 0xffffff79
    8840:	uxth	r3, r3
    8844:	lsl	r3, r3, #8
    8848:	uxth	r2, r3
    884c:	ldrb	r3, [fp, #-134]	; 0xffffff7a
    8850:	uxth	r3, r3
    8854:	add	r3, r2, r3
    8858:	uxth	r3, r3
    885c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8860:	mov	r1, #0
    8864:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8868:	bl	0 <coda_mem_uint16_new>
    886c:	str	r0, [fp, #-60]	; 0xffffffc4
    8870:	mov	r3, #0
    8874:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8878:	movw	r1, #0
    887c:	movt	r1, #0
    8880:	ldr	r0, [fp, #-188]	; 0xffffff44
    8884:	bl	0 <coda_mem_record_add_field>
    8888:	mrc	15, 0, r2, cr13, cr0, {3}
    888c:	ldr	r3, [pc, #2708]	; 9328 <read_grib1_message+0x1028>
    8890:	ldr	r3, [r2, r3]
    8894:	ldr	r3, [r3, #88]	; 0x58
    8898:	str	r3, [fp, #-56]	; 0xffffffc8
    889c:	ldrb	r3, [fp, #-133]	; 0xffffff7b
    88a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    88a4:	mov	r1, #0
    88a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    88ac:	bl	0 <coda_mem_uint8_new>
    88b0:	str	r0, [fp, #-60]	; 0xffffffc4
    88b4:	mov	r3, #0
    88b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    88bc:	movw	r1, #0
    88c0:	movt	r1, #0
    88c4:	ldr	r0, [fp, #-188]	; 0xffffff44
    88c8:	bl	0 <coda_mem_record_add_field>
    88cc:	mrc	15, 0, r2, cr13, cr0, {3}
    88d0:	ldr	r3, [pc, #2640]	; 9328 <read_grib1_message+0x1028>
    88d4:	ldr	r3, [r2, r3]
    88d8:	ldr	r3, [r3, #92]	; 0x5c
    88dc:	str	r3, [fp, #-56]	; 0xffffffc8
    88e0:	ldrb	r3, [fp, #-132]	; 0xffffff7c
    88e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    88e8:	mov	r1, #0
    88ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
    88f0:	bl	0 <coda_mem_uint8_new>
    88f4:	str	r0, [fp, #-60]	; 0xffffffc4
    88f8:	mov	r3, #0
    88fc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8900:	movw	r1, #0
    8904:	movt	r1, #0
    8908:	ldr	r0, [fp, #-188]	; 0xffffff44
    890c:	bl	0 <coda_mem_record_add_field>
    8910:	mrc	15, 0, r2, cr13, cr0, {3}
    8914:	ldr	r3, [pc, #2572]	; 9328 <read_grib1_message+0x1028>
    8918:	ldr	r3, [r2, r3]
    891c:	ldr	r3, [r3, #96]	; 0x60
    8920:	str	r3, [fp, #-56]	; 0xffffffc8
    8924:	ldrb	r3, [fp, #-131]	; 0xffffff7d
    8928:	ldr	r2, [fp, #-48]	; 0xffffffd0
    892c:	mov	r1, #0
    8930:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8934:	bl	0 <coda_mem_uint8_new>
    8938:	str	r0, [fp, #-60]	; 0xffffffc4
    893c:	mov	r3, #0
    8940:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8944:	movw	r1, #0
    8948:	movt	r1, #0
    894c:	ldr	r0, [fp, #-188]	; 0xffffff44
    8950:	bl	0 <coda_mem_record_add_field>
    8954:	ldrb	r3, [fp, #-130]	; 0xffffff7e
    8958:	sxtb	r3, r3
    895c:	cmp	r3, #0
    8960:	bge	896c <read_grib1_message+0x66c>
    8964:	movw	r1, #65535	; 0xffff
    8968:	b	8970 <read_grib1_message+0x670>
    896c:	mov	r1, #1
    8970:	ldrb	r3, [fp, #-130]	; 0xffffff7e
    8974:	and	r3, r3, #127	; 0x7f
    8978:	lsl	r2, r3, #8
    897c:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    8980:	add	r3, r2, r3
    8984:	uxth	r3, r3
    8988:	smulbb	r3, r1, r3
    898c:	uxth	r3, r3
    8990:	strh	r3, [fp, #-74]	; 0xffffffb6
    8994:	mrc	15, 0, r2, cr13, cr0, {3}
    8998:	ldr	r3, [pc, #2440]	; 9328 <read_grib1_message+0x1028>
    899c:	ldr	r3, [r2, r3]
    89a0:	ldr	r3, [r3, #100]	; 0x64
    89a4:	str	r3, [fp, #-56]	; 0xffffffc8
    89a8:	ldrsh	r3, [fp, #-74]	; 0xffffffb6
    89ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
    89b0:	mov	r1, #0
    89b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    89b8:	bl	0 <coda_mem_int16_new>
    89bc:	str	r0, [fp, #-60]	; 0xffffffc4
    89c0:	mov	r3, #0
    89c4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    89c8:	movw	r1, #0
    89cc:	movt	r1, #0
    89d0:	ldr	r0, [fp, #-188]	; 0xffffff44
    89d4:	bl	0 <coda_mem_record_add_field>
    89d8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    89dc:	adds	r4, r2, #28
    89e0:	adc	r5, r3, #0
    89e4:	strd	r4, [fp, #-196]	; 0xffffff3c
    89e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    89ec:	cmp	r3, #28
    89f0:	ble	8b2c <read_grib1_message+0x82c>
    89f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    89f8:	cmp	r3, #40	; 0x28
    89fc:	ble	8b0c <read_grib1_message+0x80c>
    8a00:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8a04:	sub	r3, r3, #40	; 0x28
    8a08:	mov	r0, r3
    8a0c:	bl	0 <malloc>
    8a10:	mov	r3, r0
    8a14:	str	r3, [fp, #-80]	; 0xffffffb0
    8a18:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8a1c:	cmp	r3, #0
    8a20:	bne	8a54 <read_grib1_message+0x754>
    8a24:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8a28:	sub	r2, r3, #40	; 0x28
    8a2c:	movw	r3, #1662	; 0x67e
    8a30:	str	r3, [sp]
    8a34:	movw	r3, #0
    8a38:	movt	r3, #0
    8a3c:	movw	r1, #0
    8a40:	movt	r1, #0
    8a44:	mvn	r0, #0
    8a48:	bl	0 <coda_set_error>
    8a4c:	mvn	r3, #0
    8a50:	b	a0d0 <read_grib1_message+0x1dd0>
    8a54:	ldr	r3, [fp, #-184]	; 0xffffff48
    8a58:	ldr	ip, [r3, #52]	; 0x34
    8a5c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    8a60:	adds	r1, r2, #12
    8a64:	str	r1, [fp, #-204]	; 0xffffff34
    8a68:	adc	r3, r3, #0
    8a6c:	str	r3, [fp, #-200]	; 0xffffff38
    8a70:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8a74:	sub	r3, r3, #40	; 0x28
    8a78:	mov	r0, r3
    8a7c:	asr	r1, r0, #31
    8a80:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8a84:	str	r3, [sp, #8]
    8a88:	strd	r0, [sp]
    8a8c:	ldrd	r2, [fp, #-204]	; 0xffffff34
    8a90:	mov	r0, ip
    8a94:	bl	0 <read_bytes>
    8a98:	mov	r3, r0
    8a9c:	cmp	r3, #0
    8aa0:	bge	8ab4 <read_grib1_message+0x7b4>
    8aa4:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8aa8:	bl	0 <free>
    8aac:	mvn	r3, #0
    8ab0:	b	a0d0 <read_grib1_message+0x1dd0>
    8ab4:	mrc	15, 0, r2, cr13, cr0, {3}
    8ab8:	ldr	r3, [pc, #2152]	; 9328 <read_grib1_message+0x1028>
    8abc:	ldr	r3, [r2, r3]
    8ac0:	add	r3, r3, #128	; 0x80
    8ac4:	ldr	r0, [r3]
    8ac8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8acc:	sub	r2, r3, #40	; 0x28
    8ad0:	ldr	r3, [fp, #-80]	; 0xffffffb0
    8ad4:	str	r3, [sp]
    8ad8:	mov	r3, r2
    8adc:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8ae0:	mov	r1, #0
    8ae4:	bl	0 <coda_mem_raw_new>
    8ae8:	str	r0, [fp, #-60]	; 0xffffffc4
    8aec:	ldr	r0, [fp, #-80]	; 0xffffffb0
    8af0:	bl	0 <free>
    8af4:	mov	r3, #0
    8af8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8afc:	movw	r1, #0
    8b00:	movt	r1, #0
    8b04:	ldr	r0, [fp, #-188]	; 0xffffff44
    8b08:	bl	0 <coda_mem_record_add_field>
    8b0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    8b10:	sub	r3, r3, #28
    8b14:	mov	r0, r3
    8b18:	asr	r1, r0, #31
    8b1c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    8b20:	adds	r6, r2, r0
    8b24:	adc	r7, r3, r1
    8b28:	strd	r6, [fp, #-196]	; 0xffffff3c
    8b2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
    8b30:	cmp	r3, #0
    8b34:	beq	96f0 <read_grib1_message+0x13f0>
    8b38:	ldr	r3, [fp, #-184]	; 0xffffff48
    8b3c:	ldr	r1, [r3, #52]	; 0x34
    8b40:	sub	r3, fp, #156	; 0x9c
    8b44:	str	r3, [sp, #8]
    8b48:	mov	r2, #6
    8b4c:	mov	r3, #0
    8b50:	strd	r2, [sp]
    8b54:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    8b58:	mov	r0, r1
    8b5c:	bl	0 <read_bytes>
    8b60:	mov	r3, r0
    8b64:	cmp	r3, #0
    8b68:	bge	8b74 <read_grib1_message+0x874>
    8b6c:	mvn	r3, #0
    8b70:	b	a0d0 <read_grib1_message+0x1dd0>
    8b74:	ldrb	r3, [fp, #-156]	; 0xffffff64
    8b78:	lsl	r2, r3, #8
    8b7c:	ldrb	r3, [fp, #-155]	; 0xffffff65
    8b80:	add	r3, r2, r3
    8b84:	lsl	r2, r3, #8
    8b88:	ldrb	r3, [fp, #-154]	; 0xffffff66
    8b8c:	add	r3, r2, r3
    8b90:	str	r3, [fp, #-52]	; 0xffffffcc
    8b94:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    8b98:	adds	r8, r2, #6
    8b9c:	adc	r9, r3, #0
    8ba0:	strd	r8, [fp, #-196]	; 0xffffff3c
    8ba4:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8ba8:	cmp	r3, #0
    8bac:	beq	8c04 <read_grib1_message+0x904>
    8bb0:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8bb4:	cmp	r3, #4
    8bb8:	beq	8c04 <read_grib1_message+0x904>
    8bbc:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8bc0:	cmp	r3, #10
    8bc4:	beq	8c04 <read_grib1_message+0x904>
    8bc8:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8bcc:	cmp	r3, #14
    8bd0:	beq	8c04 <read_grib1_message+0x904>
    8bd4:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8bd8:	cmp	r3, #20
    8bdc:	beq	8c04 <read_grib1_message+0x904>
    8be0:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8be4:	cmp	r3, #24
    8be8:	beq	8c04 <read_grib1_message+0x904>
    8bec:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8bf0:	cmp	r3, #30
    8bf4:	beq	8c04 <read_grib1_message+0x904>
    8bf8:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8bfc:	cmp	r3, #34	; 0x22
    8c00:	bne	96cc <read_grib1_message+0x13cc>
    8c04:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8c08:	cmp	r3, #4
    8c0c:	beq	8c34 <read_grib1_message+0x934>
    8c10:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8c14:	cmp	r3, #14
    8c18:	beq	8c34 <read_grib1_message+0x934>
    8c1c:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8c20:	cmp	r3, #24
    8c24:	beq	8c34 <read_grib1_message+0x934>
    8c28:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8c2c:	cmp	r3, #34	; 0x22
    8c30:	bne	8c3c <read_grib1_message+0x93c>
    8c34:	mov	r3, #1
    8c38:	b	8c40 <read_grib1_message+0x940>
    8c3c:	mov	r3, #0
    8c40:	str	r3, [fp, #-84]	; 0xffffffac
    8c44:	mrc	15, 0, r2, cr13, cr0, {3}
    8c48:	ldr	r3, [pc, #1752]	; 9328 <read_grib1_message+0x1028>
    8c4c:	ldr	r3, [r2, r3]
    8c50:	add	r3, r3, #264	; 0x108
    8c54:	ldr	r3, [r3]
    8c58:	mov	r1, #0
    8c5c:	mov	r0, r3
    8c60:	bl	0 <coda_mem_record_new>
    8c64:	str	r0, [fp, #-88]	; 0xffffffa8
    8c68:	ldrb	r3, [fp, #-153]	; 0xffffff67
    8c6c:	strb	r3, [fp, #-89]	; 0xffffffa7
    8c70:	mrc	15, 0, r2, cr13, cr0, {3}
    8c74:	ldr	r3, [pc, #1708]	; 9328 <read_grib1_message+0x1028>
    8c78:	ldr	r3, [r2, r3]
    8c7c:	ldr	r3, [r3, #132]	; 0x84
    8c80:	str	r3, [fp, #-56]	; 0xffffffc8
    8c84:	ldrb	r3, [fp, #-89]	; 0xffffffa7
    8c88:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8c8c:	mov	r1, #0
    8c90:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8c94:	bl	0 <coda_mem_uint8_new>
    8c98:	str	r0, [fp, #-60]	; 0xffffffc4
    8c9c:	mov	r3, #0
    8ca0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8ca4:	movw	r1, #0
    8ca8:	movt	r1, #0
    8cac:	ldr	r0, [fp, #-88]	; 0xffffffa8
    8cb0:	bl	0 <coda_mem_record_add_field>
    8cb4:	ldrb	r3, [fp, #-152]	; 0xffffff68
    8cb8:	strb	r3, [fp, #-90]	; 0xffffffa6
    8cbc:	mrc	15, 0, r2, cr13, cr0, {3}
    8cc0:	ldr	r3, [pc, #1632]	; 9328 <read_grib1_message+0x1028>
    8cc4:	ldr	r3, [r2, r3]
    8cc8:	ldr	r3, [r3, #136]	; 0x88
    8ccc:	str	r3, [fp, #-56]	; 0xffffffc8
    8cd0:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8cd4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8cd8:	mov	r1, #0
    8cdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8ce0:	bl	0 <coda_mem_uint8_new>
    8ce4:	str	r0, [fp, #-60]	; 0xffffffc4
    8ce8:	mov	r3, #0
    8cec:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8cf0:	movw	r1, #0
    8cf4:	movt	r1, #0
    8cf8:	ldr	r0, [fp, #-88]	; 0xffffffa8
    8cfc:	bl	0 <coda_mem_record_add_field>
    8d00:	ldr	r3, [fp, #-184]	; 0xffffff48
    8d04:	ldr	r1, [r3, #52]	; 0x34
    8d08:	sub	r3, fp, #156	; 0x9c
    8d0c:	str	r3, [sp, #8]
    8d10:	mov	r2, #26
    8d14:	mov	r3, #0
    8d18:	strd	r2, [sp]
    8d1c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    8d20:	mov	r0, r1
    8d24:	bl	0 <read_bytes>
    8d28:	mov	r3, r0
    8d2c:	cmp	r3, #0
    8d30:	bge	8d44 <read_grib1_message+0xa44>
    8d34:	ldr	r0, [fp, #-88]	; 0xffffffa8
    8d38:	bl	0 <coda_grib_type_delete>
    8d3c:	mvn	r3, #0
    8d40:	b	a0d0 <read_grib1_message+0x1dd0>
    8d44:	ldrb	r3, [fp, #-156]	; 0xffffff64
    8d48:	lsl	r2, r3, #8
    8d4c:	ldrb	r3, [fp, #-155]	; 0xffffff65
    8d50:	add	r3, r2, r3
    8d54:	str	r3, [fp, #-96]	; 0xffffffa0
    8d58:	ldrb	r3, [fp, #-154]	; 0xffffff66
    8d5c:	lsl	r2, r3, #8
    8d60:	ldrb	r3, [fp, #-153]	; 0xffffff67
    8d64:	add	r3, r2, r3
    8d68:	str	r3, [fp, #-100]	; 0xffffff9c
    8d6c:	ldr	r2, [fp, #-96]	; 0xffffffa0
    8d70:	movw	r3, #65535	; 0xffff
    8d74:	cmp	r2, r3
    8d78:	bne	8da8 <read_grib1_message+0xaa8>
    8d7c:	ldr	r2, [fp, #-100]	; 0xffffff9c
    8d80:	movw	r3, #65535	; 0xffff
    8d84:	cmp	r2, r3
    8d88:	bne	8da8 <read_grib1_message+0xaa8>
    8d8c:	movw	r1, #0
    8d90:	movt	r1, #0
    8d94:	movw	r0, #65236	; 0xfed4
    8d98:	movt	r0, #65535	; 0xffff
    8d9c:	bl	0 <coda_set_error>
    8da0:	mvn	r3, #0
    8da4:	b	a0d0 <read_grib1_message+0x1dd0>
    8da8:	ldr	r2, [fp, #-96]	; 0xffffffa0
    8dac:	movw	r3, #65535	; 0xffff
    8db0:	cmp	r2, r3
    8db4:	beq	8dd8 <read_grib1_message+0xad8>
    8db8:	ldr	r2, [fp, #-100]	; 0xffffff9c
    8dbc:	movw	r3, #65535	; 0xffff
    8dc0:	cmp	r2, r3
    8dc4:	beq	8dd8 <read_grib1_message+0xad8>
    8dc8:	ldr	r2, [fp, #-96]	; 0xffffffa0
    8dcc:	ldr	r3, [fp, #-100]	; 0xffffff9c
    8dd0:	mul	r3, r3, r2
    8dd4:	str	r3, [fp, #-36]	; 0xffffffdc
    8dd8:	mrc	15, 0, r2, cr13, cr0, {3}
    8ddc:	ldr	r3, [pc, #1348]	; 9328 <read_grib1_message+0x1028>
    8de0:	ldr	r3, [r2, r3]
    8de4:	ldr	r3, [r3, #168]	; 0xa8
    8de8:	str	r3, [fp, #-56]	; 0xffffffc8
    8dec:	ldr	r3, [fp, #-96]	; 0xffffffa0
    8df0:	uxth	r3, r3
    8df4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8df8:	mov	r1, #0
    8dfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8e00:	bl	0 <coda_mem_uint16_new>
    8e04:	str	r0, [fp, #-60]	; 0xffffffc4
    8e08:	mov	r3, #0
    8e0c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8e10:	movw	r1, #0
    8e14:	movt	r1, #0
    8e18:	ldr	r0, [fp, #-88]	; 0xffffffa8
    8e1c:	bl	0 <coda_mem_record_add_field>
    8e20:	mrc	15, 0, r2, cr13, cr0, {3}
    8e24:	ldr	r3, [pc, #1276]	; 9328 <read_grib1_message+0x1028>
    8e28:	ldr	r3, [r2, r3]
    8e2c:	ldr	r3, [r3, #172]	; 0xac
    8e30:	str	r3, [fp, #-56]	; 0xffffffc8
    8e34:	ldr	r3, [fp, #-100]	; 0xffffff9c
    8e38:	uxth	r3, r3
    8e3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8e40:	mov	r1, #0
    8e44:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8e48:	bl	0 <coda_mem_uint16_new>
    8e4c:	str	r0, [fp, #-60]	; 0xffffffc4
    8e50:	mov	r3, #0
    8e54:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8e58:	movw	r1, #0
    8e5c:	movt	r1, #0
    8e60:	ldr	r0, [fp, #-88]	; 0xffffffa8
    8e64:	bl	0 <coda_mem_record_add_field>
    8e68:	ldrb	r3, [fp, #-152]	; 0xffffff68
    8e6c:	sxtb	r3, r3
    8e70:	cmp	r3, #0
    8e74:	bge	8e80 <read_grib1_message+0xb80>
    8e78:	mvn	r1, #0
    8e7c:	b	8e84 <read_grib1_message+0xb84>
    8e80:	mov	r1, #1
    8e84:	ldrb	r3, [fp, #-152]	; 0xffffff68
    8e88:	and	r3, r3, #127	; 0x7f
    8e8c:	lsl	r2, r3, #8
    8e90:	ldrb	r3, [fp, #-151]	; 0xffffff69
    8e94:	add	r3, r2, r3
    8e98:	lsl	r2, r3, #8
    8e9c:	ldrb	r3, [fp, #-150]	; 0xffffff6a
    8ea0:	add	r3, r2, r3
    8ea4:	mul	r3, r3, r1
    8ea8:	str	r3, [fp, #-104]	; 0xffffff98
    8eac:	mrc	15, 0, r2, cr13, cr0, {3}
    8eb0:	ldr	r3, [pc, #1136]	; 9328 <read_grib1_message+0x1028>
    8eb4:	ldr	r3, [r2, r3]
    8eb8:	ldr	r3, [r3, #184]	; 0xb8
    8ebc:	str	r3, [fp, #-56]	; 0xffffffc8
    8ec0:	ldr	r3, [fp, #-104]	; 0xffffff98
    8ec4:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8ec8:	mov	r1, #0
    8ecc:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8ed0:	bl	0 <coda_mem_int32_new>
    8ed4:	str	r0, [fp, #-60]	; 0xffffffc4
    8ed8:	mov	r3, #0
    8edc:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8ee0:	movw	r1, #0
    8ee4:	movt	r1, #0
    8ee8:	ldr	r0, [fp, #-88]	; 0xffffffa8
    8eec:	bl	0 <coda_mem_record_add_field>
    8ef0:	ldrb	r3, [fp, #-149]	; 0xffffff6b
    8ef4:	sxtb	r3, r3
    8ef8:	cmp	r3, #0
    8efc:	bge	8f08 <read_grib1_message+0xc08>
    8f00:	mvn	r1, #0
    8f04:	b	8f0c <read_grib1_message+0xc0c>
    8f08:	mov	r1, #1
    8f0c:	ldrb	r3, [fp, #-149]	; 0xffffff6b
    8f10:	and	r3, r3, #127	; 0x7f
    8f14:	lsl	r2, r3, #8
    8f18:	ldrb	r3, [fp, #-148]	; 0xffffff6c
    8f1c:	add	r3, r2, r3
    8f20:	lsl	r2, r3, #8
    8f24:	ldrb	r3, [fp, #-147]	; 0xffffff6d
    8f28:	add	r3, r2, r3
    8f2c:	mul	r3, r3, r1
    8f30:	str	r3, [fp, #-104]	; 0xffffff98
    8f34:	mrc	15, 0, r2, cr13, cr0, {3}
    8f38:	ldr	r3, [pc, #1000]	; 9328 <read_grib1_message+0x1028>
    8f3c:	ldr	r3, [r2, r3]
    8f40:	ldr	r3, [r3, #188]	; 0xbc
    8f44:	str	r3, [fp, #-56]	; 0xffffffc8
    8f48:	ldr	r3, [fp, #-104]	; 0xffffff98
    8f4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8f50:	mov	r1, #0
    8f54:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8f58:	bl	0 <coda_mem_int32_new>
    8f5c:	str	r0, [fp, #-60]	; 0xffffffc4
    8f60:	mov	r3, #0
    8f64:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8f68:	movw	r1, #0
    8f6c:	movt	r1, #0
    8f70:	ldr	r0, [fp, #-88]	; 0xffffffa8
    8f74:	bl	0 <coda_mem_record_add_field>
    8f78:	mrc	15, 0, r2, cr13, cr0, {3}
    8f7c:	ldr	r3, [pc, #932]	; 9328 <read_grib1_message+0x1028>
    8f80:	ldr	r3, [r2, r3]
    8f84:	ldr	r3, [r3, #192]	; 0xc0
    8f88:	str	r3, [fp, #-56]	; 0xffffffc8
    8f8c:	ldrb	r3, [fp, #-146]	; 0xffffff6e
    8f90:	ldr	r2, [fp, #-48]	; 0xffffffd0
    8f94:	mov	r1, #0
    8f98:	ldr	r0, [fp, #-56]	; 0xffffffc8
    8f9c:	bl	0 <coda_mem_uint8_new>
    8fa0:	str	r0, [fp, #-60]	; 0xffffffc4
    8fa4:	mov	r3, #0
    8fa8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    8fac:	movw	r1, #0
    8fb0:	movt	r1, #0
    8fb4:	ldr	r0, [fp, #-88]	; 0xffffffa8
    8fb8:	bl	0 <coda_mem_record_add_field>
    8fbc:	ldrb	r3, [fp, #-145]	; 0xffffff6f
    8fc0:	sxtb	r3, r3
    8fc4:	cmp	r3, #0
    8fc8:	bge	8fd4 <read_grib1_message+0xcd4>
    8fcc:	mvn	r1, #0
    8fd0:	b	8fd8 <read_grib1_message+0xcd8>
    8fd4:	mov	r1, #1
    8fd8:	ldrb	r3, [fp, #-145]	; 0xffffff6f
    8fdc:	and	r3, r3, #127	; 0x7f
    8fe0:	lsl	r2, r3, #8
    8fe4:	ldrb	r3, [fp, #-144]	; 0xffffff70
    8fe8:	add	r3, r2, r3
    8fec:	lsl	r2, r3, #8
    8ff0:	ldrb	r3, [fp, #-143]	; 0xffffff71
    8ff4:	add	r3, r2, r3
    8ff8:	mul	r3, r3, r1
    8ffc:	str	r3, [fp, #-104]	; 0xffffff98
    9000:	mrc	15, 0, r2, cr13, cr0, {3}
    9004:	ldr	r3, [pc, #796]	; 9328 <read_grib1_message+0x1028>
    9008:	ldr	r3, [r2, r3]
    900c:	ldr	r3, [r3, #196]	; 0xc4
    9010:	str	r3, [fp, #-56]	; 0xffffffc8
    9014:	ldr	r3, [fp, #-104]	; 0xffffff98
    9018:	ldr	r2, [fp, #-48]	; 0xffffffd0
    901c:	mov	r1, #0
    9020:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9024:	bl	0 <coda_mem_int32_new>
    9028:	str	r0, [fp, #-60]	; 0xffffffc4
    902c:	mov	r3, #0
    9030:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9034:	movw	r1, #0
    9038:	movt	r1, #0
    903c:	ldr	r0, [fp, #-88]	; 0xffffffa8
    9040:	bl	0 <coda_mem_record_add_field>
    9044:	ldrb	r3, [fp, #-142]	; 0xffffff72
    9048:	sxtb	r3, r3
    904c:	cmp	r3, #0
    9050:	bge	905c <read_grib1_message+0xd5c>
    9054:	mvn	r1, #0
    9058:	b	9060 <read_grib1_message+0xd60>
    905c:	mov	r1, #1
    9060:	ldrb	r3, [fp, #-142]	; 0xffffff72
    9064:	and	r3, r3, #127	; 0x7f
    9068:	lsl	r2, r3, #8
    906c:	ldrb	r3, [fp, #-141]	; 0xffffff73
    9070:	add	r3, r2, r3
    9074:	lsl	r2, r3, #8
    9078:	ldrb	r3, [fp, #-140]	; 0xffffff74
    907c:	add	r3, r2, r3
    9080:	mul	r3, r3, r1
    9084:	str	r3, [fp, #-104]	; 0xffffff98
    9088:	mrc	15, 0, r2, cr13, cr0, {3}
    908c:	ldr	r3, [pc, #660]	; 9328 <read_grib1_message+0x1028>
    9090:	ldr	r3, [r2, r3]
    9094:	ldr	r3, [r3, #200]	; 0xc8
    9098:	str	r3, [fp, #-56]	; 0xffffffc8
    909c:	ldr	r3, [fp, #-104]	; 0xffffff98
    90a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    90a4:	mov	r1, #0
    90a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    90ac:	bl	0 <coda_mem_int32_new>
    90b0:	str	r0, [fp, #-60]	; 0xffffffc4
    90b4:	mov	r3, #0
    90b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    90bc:	movw	r1, #0
    90c0:	movt	r1, #0
    90c4:	ldr	r0, [fp, #-88]	; 0xffffffa8
    90c8:	bl	0 <coda_mem_record_add_field>
    90cc:	mrc	15, 0, r2, cr13, cr0, {3}
    90d0:	ldr	r3, [pc, #592]	; 9328 <read_grib1_message+0x1028>
    90d4:	ldr	r3, [r2, r3]
    90d8:	ldr	r3, [r3, #204]	; 0xcc
    90dc:	str	r3, [fp, #-56]	; 0xffffffc8
    90e0:	ldrb	r3, [fp, #-139]	; 0xffffff75
    90e4:	uxth	r3, r3
    90e8:	lsl	r3, r3, #8
    90ec:	uxth	r2, r3
    90f0:	ldrb	r3, [fp, #-138]	; 0xffffff76
    90f4:	uxth	r3, r3
    90f8:	add	r3, r2, r3
    90fc:	uxth	r3, r3
    9100:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9104:	mov	r1, #0
    9108:	ldr	r0, [fp, #-56]	; 0xffffffc8
    910c:	bl	0 <coda_mem_uint16_new>
    9110:	str	r0, [fp, #-60]	; 0xffffffc4
    9114:	mov	r3, #0
    9118:	ldr	r2, [fp, #-60]	; 0xffffffc4
    911c:	movw	r1, #0
    9120:	movt	r1, #0
    9124:	ldr	r0, [fp, #-88]	; 0xffffffa8
    9128:	bl	0 <coda_mem_record_add_field>
    912c:	ldr	r3, [fp, #-84]	; 0xffffffac
    9130:	cmp	r3, #0
    9134:	beq	919c <read_grib1_message+0xe9c>
    9138:	mrc	15, 0, r2, cr13, cr0, {3}
    913c:	ldr	r3, [pc, #484]	; 9328 <read_grib1_message+0x1028>
    9140:	ldr	r3, [r2, r3]
    9144:	ldr	r3, [r3, #212]	; 0xd4
    9148:	str	r3, [fp, #-56]	; 0xffffffc8
    914c:	ldrb	r3, [fp, #-137]	; 0xffffff77
    9150:	uxth	r3, r3
    9154:	lsl	r3, r3, #8
    9158:	uxth	r2, r3
    915c:	ldrb	r3, [fp, #-136]	; 0xffffff78
    9160:	uxth	r3, r3
    9164:	add	r3, r2, r3
    9168:	uxth	r3, r3
    916c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9170:	mov	r1, #0
    9174:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9178:	bl	0 <coda_mem_uint16_new>
    917c:	str	r0, [fp, #-60]	; 0xffffffc4
    9180:	mov	r3, #0
    9184:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9188:	movw	r1, #0
    918c:	movt	r1, #0
    9190:	ldr	r0, [fp, #-88]	; 0xffffffa8
    9194:	bl	0 <coda_mem_record_add_field>
    9198:	b	91fc <read_grib1_message+0xefc>
    919c:	mrc	15, 0, r2, cr13, cr0, {3}
    91a0:	ldr	r3, [pc, #384]	; 9328 <read_grib1_message+0x1028>
    91a4:	ldr	r3, [r2, r3]
    91a8:	ldr	r3, [r3, #208]	; 0xd0
    91ac:	str	r3, [fp, #-56]	; 0xffffffc8
    91b0:	ldrb	r3, [fp, #-137]	; 0xffffff77
    91b4:	uxth	r3, r3
    91b8:	lsl	r3, r3, #8
    91bc:	uxth	r2, r3
    91c0:	ldrb	r3, [fp, #-136]	; 0xffffff78
    91c4:	uxth	r3, r3
    91c8:	add	r3, r2, r3
    91cc:	uxth	r3, r3
    91d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    91d4:	mov	r1, #0
    91d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    91dc:	bl	0 <coda_mem_uint16_new>
    91e0:	str	r0, [fp, #-60]	; 0xffffffc4
    91e4:	mov	r3, #0
    91e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    91ec:	movw	r1, #0
    91f0:	movt	r1, #0
    91f4:	ldr	r0, [fp, #-88]	; 0xffffffa8
    91f8:	bl	0 <coda_mem_record_add_field>
    91fc:	mrc	15, 0, r2, cr13, cr0, {3}
    9200:	ldr	r3, [pc, #288]	; 9328 <read_grib1_message+0x1028>
    9204:	ldr	r3, [r2, r3]
    9208:	ldr	r3, [r3, #216]	; 0xd8
    920c:	str	r3, [fp, #-56]	; 0xffffffc8
    9210:	ldrb	r3, [fp, #-135]	; 0xffffff79
    9214:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9218:	mov	r1, #0
    921c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9220:	bl	0 <coda_mem_uint8_new>
    9224:	str	r0, [fp, #-60]	; 0xffffffc4
    9228:	mov	r3, #0
    922c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9230:	movw	r1, #0
    9234:	movt	r1, #0
    9238:	ldr	r0, [fp, #-88]	; 0xffffffa8
    923c:	bl	0 <coda_mem_record_add_field>
    9240:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9244:	adds	r1, r2, #26
    9248:	str	r1, [fp, #-220]	; 0xffffff24
    924c:	adc	r3, r3, #0
    9250:	str	r3, [fp, #-216]	; 0xffffff28
    9254:	ldrd	r2, [fp, #-220]	; 0xffffff24
    9258:	strd	r2, [fp, #-196]	; 0xffffff3c
    925c:	ldrb	r3, [fp, #-90]	; 0xffffffa6
    9260:	cmp	r3, #255	; 0xff
    9264:	beq	9634 <read_grib1_message+0x1334>
    9268:	ldrb	r3, [fp, #-90]	; 0xffffffa6
    926c:	sub	r3, r3, #1
    9270:	strb	r3, [fp, #-90]	; 0xffffffa6
    9274:	ldrb	r3, [fp, #-90]	; 0xffffffa6
    9278:	sub	r3, r3, #32
    927c:	mov	r0, r3
    9280:	asr	r1, r0, #31
    9284:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9288:	adds	ip, r2, r0
    928c:	str	ip, [fp, #-228]	; 0xffffff1c
    9290:	adc	r3, r3, r1
    9294:	str	r3, [fp, #-224]	; 0xffffff20
    9298:	ldrd	r2, [fp, #-228]	; 0xffffff1c
    929c:	strd	r2, [fp, #-196]	; 0xffffff3c
    92a0:	ldrb	r3, [fp, #-89]	; 0xffffffa7
    92a4:	cmp	r3, #0
    92a8:	beq	93c4 <read_grib1_message+0x10c4>
    92ac:	mrc	15, 0, r2, cr13, cr0, {3}
    92b0:	ldr	r3, [pc, #112]	; 9328 <read_grib1_message+0x1028>
    92b4:	ldr	r3, [r2, r3]
    92b8:	ldr	r3, [r3, #224]	; 0xe0
    92bc:	str	r3, [fp, #-56]	; 0xffffffc8
    92c0:	mov	r1, #0
    92c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
    92c8:	bl	0 <coda_mem_array_new>
    92cc:	str	r0, [fp, #-108]	; 0xffffff94
    92d0:	mov	r3, #0
    92d4:	str	r3, [fp, #-40]	; 0xffffffd8
    92d8:	b	939c <read_grib1_message+0x109c>
    92dc:	ldr	r3, [fp, #-184]	; 0xffffff48
    92e0:	ldr	r1, [r3, #52]	; 0x34
    92e4:	sub	r3, fp, #156	; 0x9c
    92e8:	str	r3, [sp, #8]
    92ec:	mov	r2, #4
    92f0:	mov	r3, #0
    92f4:	strd	r2, [sp]
    92f8:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    92fc:	mov	r0, r1
    9300:	bl	0 <read_bytes>
    9304:	mov	r3, r0
    9308:	cmp	r3, #0
    930c:	bge	932c <read_grib1_message+0x102c>
    9310:	ldr	r0, [fp, #-108]	; 0xffffff94
    9314:	bl	0 <coda_dynamic_type_delete>
    9318:	ldr	r0, [fp, #-88]	; 0xffffffa8
    931c:	bl	0 <coda_dynamic_type_delete>
    9320:	mvn	r3, #0
    9324:	b	a0d0 <read_grib1_message+0x1dd0>
    9328:	.word	0x00000000
    932c:	mrc	15, 0, r2, cr13, cr0, {3}
    9330:	ldr	r3, [pc, #-16]	; 9328 <read_grib1_message+0x1028>
    9334:	ldr	r3, [r2, r3]
    9338:	ldr	r3, [r3, #220]	; 0xdc
    933c:	str	r3, [fp, #-56]	; 0xffffffc8
    9340:	sub	r3, fp, #156	; 0x9c
    9344:	mov	r0, r3
    9348:	bl	819c <ibmfloat_to_iee754>
    934c:	vmov.f32	s15, s0
    9350:	vmov.f32	s0, s15
    9354:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9358:	mov	r1, #0
    935c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9360:	bl	0 <coda_mem_float_new>
    9364:	str	r0, [fp, #-60]	; 0xffffffc4
    9368:	ldr	r1, [fp, #-60]	; 0xffffffc4
    936c:	ldr	r0, [fp, #-108]	; 0xffffff94
    9370:	bl	0 <coda_mem_array_add_element>
    9374:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9378:	adds	r1, r2, #4
    937c:	str	r1, [fp, #-236]	; 0xffffff14
    9380:	adc	r3, r3, #0
    9384:	str	r3, [fp, #-232]	; 0xffffff18
    9388:	ldrd	r2, [fp, #-236]	; 0xffffff14
    938c:	strd	r2, [fp, #-196]	; 0xffffff3c
    9390:	ldr	r3, [fp, #-40]	; 0xffffffd8
    9394:	add	r3, r3, #1
    9398:	str	r3, [fp, #-40]	; 0xffffffd8
    939c:	ldrb	r2, [fp, #-89]	; 0xffffffa7
    93a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
    93a4:	cmp	r3, r2
    93a8:	blt	92dc <read_grib1_message+0xfdc>
    93ac:	mov	r3, #0
    93b0:	ldr	r2, [fp, #-108]	; 0xffffff94
    93b4:	movw	r1, #0
    93b8:	movt	r1, #0
    93bc:	ldr	r0, [fp, #-88]	; 0xffffffa8
    93c0:	bl	0 <coda_mem_record_add_field>
    93c4:	ldrb	r2, [fp, #-90]	; 0xffffffa6
    93c8:	ldrb	r3, [fp, #-89]	; 0xffffffa7
    93cc:	lsl	r3, r3, #2
    93d0:	add	r3, r2, r3
    93d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    93d8:	cmp	r2, r3
    93dc:	ble	95f0 <read_grib1_message+0x12f0>
    93e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
    93e4:	movw	r2, #65535	; 0xffff
    93e8:	cmp	r3, r2
    93ec:	bne	93fc <read_grib1_message+0x10fc>
    93f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
    93f4:	str	r3, [fp, #-44]	; 0xffffffd4
    93f8:	b	943c <read_grib1_message+0x113c>
    93fc:	ldr	r3, [fp, #-100]	; 0xffffff9c
    9400:	movw	r2, #65535	; 0xffff
    9404:	cmp	r3, r2
    9408:	bne	9418 <read_grib1_message+0x1118>
    940c:	ldr	r3, [fp, #-96]	; 0xffffffa0
    9410:	str	r3, [fp, #-44]	; 0xffffffd4
    9414:	b	943c <read_grib1_message+0x113c>
    9418:	movw	r1, #0
    941c:	movt	r1, #0
    9420:	movw	r0, #65236	; 0xfed4
    9424:	movt	r0, #65535	; 0xffff
    9428:	bl	0 <coda_set_error>
    942c:	ldr	r0, [fp, #-88]	; 0xffffffa8
    9430:	bl	0 <coda_dynamic_type_delete>
    9434:	mvn	r3, #0
    9438:	b	a0d0 <read_grib1_message+0x1dd0>
    943c:	ldrb	r2, [fp, #-90]	; 0xffffffa6
    9440:	ldrb	r3, [fp, #-89]	; 0xffffffa7
    9444:	lsl	r3, r3, #2
    9448:	add	r3, r2, r3
    944c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    9450:	sub	r2, r2, r3
    9454:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9458:	lsl	r3, r3, #1
    945c:	cmp	r2, r3
    9460:	beq	94a8 <read_grib1_message+0x11a8>
    9464:	ldrb	r2, [fp, #-90]	; 0xffffffa6
    9468:	ldrb	r3, [fp, #-89]	; 0xffffffa7
    946c:	lsl	r3, r3, #2
    9470:	add	r3, r2, r3
    9474:	ldr	r2, [fp, #-52]	; 0xffffffcc
    9478:	sub	r2, r2, r3
    947c:	ldr	r3, [fp, #-44]	; 0xffffffd4
    9480:	lsl	r3, r3, #1
    9484:	movw	r1, #0
    9488:	movt	r1, #0
    948c:	movw	r0, #65236	; 0xfed4
    9490:	movt	r0, #65535	; 0xffff
    9494:	bl	0 <coda_set_error>
    9498:	ldr	r0, [fp, #-88]	; 0xffffffa8
    949c:	bl	0 <coda_dynamic_type_delete>
    94a0:	mvn	r3, #0
    94a4:	b	a0d0 <read_grib1_message+0x1dd0>
    94a8:	mrc	15, 0, r3, cr13, cr0, {3}
    94ac:	ldr	r2, [pc, #-396]	; 9328 <read_grib1_message+0x1028>
    94b0:	ldr	r3, [r3, r2]
    94b4:	ldr	r3, [r3, #232]	; 0xe8
    94b8:	str	r3, [fp, #-56]	; 0xffffffc8
    94bc:	mov	r1, #0
    94c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
    94c4:	bl	0 <coda_mem_array_new>
    94c8:	str	r0, [fp, #-112]	; 0xffffff90
    94cc:	mov	r3, #0
    94d0:	str	r3, [fp, #-36]	; 0xffffffdc
    94d4:	mov	r3, #0
    94d8:	str	r3, [fp, #-40]	; 0xffffffd8
    94dc:	b	95c4 <read_grib1_message+0x12c4>
    94e0:	ldr	r3, [fp, #-184]	; 0xffffff48
    94e4:	ldr	r1, [r3, #52]	; 0x34
    94e8:	sub	r3, fp, #156	; 0x9c
    94ec:	str	r3, [sp, #8]
    94f0:	mov	r2, #2
    94f4:	mov	r3, #0
    94f8:	strd	r2, [sp]
    94fc:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9500:	mov	r0, r1
    9504:	bl	0 <read_bytes>
    9508:	mov	r3, r0
    950c:	cmp	r3, #0
    9510:	bge	952c <read_grib1_message+0x122c>
    9514:	ldr	r0, [fp, #-112]	; 0xffffff90
    9518:	bl	0 <coda_dynamic_type_delete>
    951c:	ldr	r0, [fp, #-88]	; 0xffffffa8
    9520:	bl	0 <coda_dynamic_type_delete>
    9524:	mvn	r3, #0
    9528:	b	a0d0 <read_grib1_message+0x1dd0>
    952c:	ldrb	r3, [fp, #-156]	; 0xffffff64
    9530:	lsl	r2, r3, #8
    9534:	ldrb	r3, [fp, #-155]	; 0xffffff65
    9538:	add	r3, r2, r3
    953c:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9540:	add	r3, r2, r3
    9544:	str	r3, [fp, #-36]	; 0xffffffdc
    9548:	mrc	15, 0, r3, cr13, cr0, {3}
    954c:	ldr	r2, [pc, #-556]	; 9328 <read_grib1_message+0x1028>
    9550:	ldr	r3, [r3, r2]
    9554:	ldr	r3, [r3, #228]	; 0xe4
    9558:	str	r3, [fp, #-56]	; 0xffffffc8
    955c:	ldrb	r3, [fp, #-156]	; 0xffffff64
    9560:	uxth	r3, r3
    9564:	lsl	r3, r3, #8
    9568:	uxth	r2, r3
    956c:	ldrb	r3, [fp, #-155]	; 0xffffff65
    9570:	uxth	r3, r3
    9574:	add	r3, r2, r3
    9578:	uxth	r3, r3
    957c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9580:	mov	r1, #0
    9584:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9588:	bl	0 <coda_mem_uint16_new>
    958c:	str	r0, [fp, #-60]	; 0xffffffc4
    9590:	ldr	r1, [fp, #-60]	; 0xffffffc4
    9594:	ldr	r0, [fp, #-112]	; 0xffffff90
    9598:	bl	0 <coda_mem_array_add_element>
    959c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    95a0:	adds	r1, r2, #2
    95a4:	str	r1, [fp, #-244]	; 0xffffff0c
    95a8:	adc	r3, r3, #0
    95ac:	str	r3, [fp, #-240]	; 0xffffff10
    95b0:	ldrd	r2, [fp, #-244]	; 0xffffff0c
    95b4:	strd	r2, [fp, #-196]	; 0xffffff3c
    95b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
    95bc:	add	r3, r3, #1
    95c0:	str	r3, [fp, #-40]	; 0xffffffd8
    95c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
    95c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
    95cc:	cmp	r2, r3
    95d0:	blt	94e0 <read_grib1_message+0x11e0>
    95d4:	mov	r3, #0
    95d8:	ldr	r2, [fp, #-112]	; 0xffffff90
    95dc:	movw	r1, #0
    95e0:	movt	r1, #0
    95e4:	ldr	r0, [fp, #-88]	; 0xffffffa8
    95e8:	bl	0 <coda_mem_record_add_field>
    95ec:	b	96b0 <read_grib1_message+0x13b0>
    95f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
    95f4:	movw	r2, #65535	; 0xffff
    95f8:	cmp	r3, r2
    95fc:	beq	9610 <read_grib1_message+0x1310>
    9600:	ldr	r3, [fp, #-100]	; 0xffffff9c
    9604:	movw	r2, #65535	; 0xffff
    9608:	cmp	r3, r2
    960c:	bne	96b0 <read_grib1_message+0x13b0>
    9610:	movw	r1, #0
    9614:	movt	r1, #0
    9618:	movw	r0, #65236	; 0xfed4
    961c:	movt	r0, #65535	; 0xffff
    9620:	bl	0 <coda_set_error>
    9624:	ldr	r0, [fp, #-88]	; 0xffffffa8
    9628:	bl	0 <coda_dynamic_type_delete>
    962c:	mvn	r3, #0
    9630:	b	a0d0 <read_grib1_message+0x1dd0>
    9634:	ldr	r3, [fp, #-96]	; 0xffffffa0
    9638:	movw	r2, #65535	; 0xffff
    963c:	cmp	r3, r2
    9640:	beq	9654 <read_grib1_message+0x1354>
    9644:	ldr	r3, [fp, #-100]	; 0xffffff9c
    9648:	movw	r2, #65535	; 0xffff
    964c:	cmp	r3, r2
    9650:	bne	9678 <read_grib1_message+0x1378>
    9654:	movw	r1, #0
    9658:	movt	r1, #0
    965c:	movw	r0, #65236	; 0xfed4
    9660:	movt	r0, #65535	; 0xffff
    9664:	bl	0 <coda_set_error>
    9668:	ldr	r0, [fp, #-88]	; 0xffffffa8
    966c:	bl	0 <coda_dynamic_type_delete>
    9670:	mvn	r3, #0
    9674:	b	a0d0 <read_grib1_message+0x1dd0>
    9678:	ldr	r3, [fp, #-52]	; 0xffffffcc
    967c:	cmp	r3, #32
    9680:	ble	96b0 <read_grib1_message+0x13b0>
    9684:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9688:	sub	r3, r3, #32
    968c:	mov	r0, r3
    9690:	asr	r1, r0, #31
    9694:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9698:	adds	ip, r2, r0
    969c:	str	ip, [fp, #-252]	; 0xffffff04
    96a0:	adc	r3, r3, r1
    96a4:	str	r3, [fp, #-248]	; 0xffffff08
    96a8:	ldrd	r2, [fp, #-252]	; 0xffffff04
    96ac:	strd	r2, [fp, #-196]	; 0xffffff3c
    96b0:	mov	r3, #0
    96b4:	ldr	r2, [fp, #-88]	; 0xffffffa8
    96b8:	movw	r1, #0
    96bc:	movt	r1, #0
    96c0:	ldr	r0, [fp, #-188]	; 0xffffff44
    96c4:	bl	0 <coda_mem_record_add_field>
    96c8:	b	9a74 <read_grib1_message+0x1774>
    96cc:	ldrb	r3, [fp, #-151]	; 0xffffff69
    96d0:	mov	r2, r3
    96d4:	movw	r1, #0
    96d8:	movt	r1, #0
    96dc:	movw	r0, #65236	; 0xfed4
    96e0:	movt	r0, #65535	; 0xffff
    96e4:	bl	0 <coda_set_error>
    96e8:	mvn	r3, #0
    96ec:	b	a0d0 <read_grib1_message+0x1dd0>
    96f0:	ldrb	r3, [fp, #-61]	; 0xffffffc3
    96f4:	sub	r3, r3, #1
    96f8:	cmp	r3, #106	; 0x6a
    96fc:	ldrls	pc, [pc, r3, lsl #2]
    9700:	b	9a50 <read_grib1_message+0x1750>
    9704:	.word	0x000098b0
    9708:	.word	0x000098bc
    970c:	.word	0x000098c8
    9710:	.word	0x000098d4
    9714:	.word	0x000098e4
    9718:	.word	0x000098e4
    971c:	.word	0x00009a50
    9720:	.word	0x000098f0
    9724:	.word	0x00009a50
    9728:	.word	0x00009a50
    972c:	.word	0x00009a50
    9730:	.word	0x00009a50
    9734:	.word	0x00009a50
    9738:	.word	0x00009a50
    973c:	.word	0x00009a50
    9740:	.word	0x00009a50
    9744:	.word	0x00009a50
    9748:	.word	0x00009a50
    974c:	.word	0x00009a50
    9750:	.word	0x00009a50
    9754:	.word	0x000098fc
    9758:	.word	0x000098fc
    975c:	.word	0x000098fc
    9760:	.word	0x000098fc
    9764:	.word	0x00009908
    9768:	.word	0x00009908
    976c:	.word	0x00009914
    9770:	.word	0x00009914
    9774:	.word	0x00009920
    9778:	.word	0x00009920
    977c:	.word	0x00009a50
    9780:	.word	0x00009a50
    9784:	.word	0x0000992c
    9788:	.word	0x0000992c
    978c:	.word	0x00009a50
    9790:	.word	0x00009a50
    9794:	.word	0x00009a50
    9798:	.word	0x00009a50
    979c:	.word	0x00009a50
    97a0:	.word	0x00009a50
    97a4:	.word	0x00009a50
    97a8:	.word	0x00009a50
    97ac:	.word	0x00009a50
    97b0:	.word	0x00009a50
    97b4:	.word	0x00009a50
    97b8:	.word	0x00009a50
    97bc:	.word	0x00009a50
    97c0:	.word	0x00009a50
    97c4:	.word	0x00009a50
    97c8:	.word	0x00009938
    97cc:	.word	0x00009a50
    97d0:	.word	0x00009a50
    97d4:	.word	0x00009944
    97d8:	.word	0x00009a50
    97dc:	.word	0x00009950
    97e0:	.word	0x00009950
    97e4:	.word	0x00009a50
    97e8:	.word	0x00009a50
    97ec:	.word	0x00009a50
    97f0:	.word	0x00009a50
    97f4:	.word	0x0000995c
    97f8:	.word	0x0000995c
    97fc:	.word	0x0000995c
    9800:	.word	0x0000995c
    9804:	.word	0x00009a50
    9808:	.word	0x00009a50
    980c:	.word	0x00009a50
    9810:	.word	0x00009a50
    9814:	.word	0x00009a50
    9818:	.word	0x00009a50
    981c:	.word	0x00009a50
    9820:	.word	0x00009a50
    9824:	.word	0x00009a50
    9828:	.word	0x00009a50
    982c:	.word	0x00009968
    9830:	.word	0x00009968
    9834:	.word	0x00009968
    9838:	.word	0x00009a50
    983c:	.word	0x00009a50
    9840:	.word	0x00009a50
    9844:	.word	0x00009a50
    9848:	.word	0x00009a50
    984c:	.word	0x00009a50
    9850:	.word	0x00009a50
    9854:	.word	0x00009974
    9858:	.word	0x00009974
    985c:	.word	0x00009980
    9860:	.word	0x00009a50
    9864:	.word	0x00009a50
    9868:	.word	0x0000998c
    986c:	.word	0x00009998
    9870:	.word	0x000099a4
    9874:	.word	0x000099b4
    9878:	.word	0x000099c4
    987c:	.word	0x000099d0
    9880:	.word	0x000099e0
    9884:	.word	0x000099ec
    9888:	.word	0x00009a50
    988c:	.word	0x00009a50
    9890:	.word	0x000099fc
    9894:	.word	0x00009a08
    9898:	.word	0x00009a50
    989c:	.word	0x00009a14
    98a0:	.word	0x00009a20
    98a4:	.word	0x00009a2c
    98a8:	.word	0x00009a38
    98ac:	.word	0x00009a44
    98b0:	movw	r3, #1679	; 0x68f
    98b4:	str	r3, [fp, #-36]	; 0xffffffdc
    98b8:	b	9a74 <read_grib1_message+0x1774>
    98bc:	movw	r3, #10512	; 0x2910
    98c0:	str	r3, [fp, #-36]	; 0xffffffdc
    98c4:	b	9a74 <read_grib1_message+0x1774>
    98c8:	movw	r3, #65160	; 0xfe88
    98cc:	str	r3, [fp, #-36]	; 0xffffffdc
    98d0:	b	9a74 <read_grib1_message+0x1774>
    98d4:	movw	r3, #63312	; 0xf750
    98d8:	movt	r3, #3
    98dc:	str	r3, [fp, #-36]	; 0xffffffdc
    98e0:	b	9a74 <read_grib1_message+0x1774>
    98e4:	movw	r3, #2385	; 0x951
    98e8:	str	r3, [fp, #-36]	; 0xffffffdc
    98ec:	b	9a74 <read_grib1_message+0x1774>
    98f0:	movw	r3, #5104	; 0x13f0
    98f4:	str	r3, [fp, #-36]	; 0xffffffdc
    98f8:	b	9a74 <read_grib1_message+0x1774>
    98fc:	movw	r3, #1333	; 0x535
    9900:	str	r3, [fp, #-36]	; 0xffffffdc
    9904:	b	9a74 <read_grib1_message+0x1774>
    9908:	movw	r3, #1297	; 0x511
    990c:	str	r3, [fp, #-36]	; 0xffffffdc
    9910:	b	9a74 <read_grib1_message+0x1774>
    9914:	movw	r3, #4225	; 0x1081
    9918:	str	r3, [fp, #-36]	; 0xffffffdc
    991c:	b	9a74 <read_grib1_message+0x1774>
    9920:	movw	r3, #5365	; 0x14f5
    9924:	str	r3, [fp, #-36]	; 0xffffffdc
    9928:	b	9a74 <read_grib1_message+0x1774>
    992c:	movw	r3, #8326	; 0x2086
    9930:	str	r3, [fp, #-36]	; 0xffffffdc
    9934:	b	9a74 <read_grib1_message+0x1774>
    9938:	mov	r3, #964	; 0x3c4
    993c:	str	r3, [fp, #-36]	; 0xffffffdc
    9940:	b	9a74 <read_grib1_message+0x1774>
    9944:	movw	r3, #5967	; 0x174f
    9948:	str	r3, [fp, #-36]	; 0xffffffdc
    994c:	b	9a74 <read_grib1_message+0x1774>
    9950:	movw	r3, #6177	; 0x1821
    9954:	str	r3, [fp, #-36]	; 0xffffffdc
    9958:	b	9a74 <read_grib1_message+0x1774>
    995c:	mov	r3, #4096	; 0x1000
    9960:	str	r3, [fp, #-36]	; 0xffffffdc
    9964:	b	9a74 <read_grib1_message+0x1774>
    9968:	movw	r3, #12321	; 0x3021
    996c:	str	r3, [fp, #-36]	; 0xffffffdc
    9970:	b	9a74 <read_grib1_message+0x1774>
    9974:	movw	r3, #32400	; 0x7e90
    9978:	str	r3, [fp, #-36]	; 0xffffffdc
    997c:	b	9a74 <read_grib1_message+0x1774>
    9980:	movw	r3, #5022	; 0x139e
    9984:	str	r3, [fp, #-36]	; 0xffffffdc
    9988:	b	9a74 <read_grib1_message+0x1774>
    998c:	movw	r3, #12902	; 0x3266
    9990:	str	r3, [fp, #-36]	; 0xffffffdc
    9994:	b	9a74 <read_grib1_message+0x1774>
    9998:	movw	r3, #25803	; 0x64cb
    999c:	str	r3, [fp, #-36]	; 0xffffffdc
    99a0:	b	9a74 <read_grib1_message+0x1774>
    99a4:	movw	r3, #15677	; 0x3d3d
    99a8:	movt	r3, #1
    99ac:	str	r3, [fp, #-36]	; 0xffffffdc
    99b0:	b	9a74 <read_grib1_message+0x1774>
    99b4:	movw	r3, #31353	; 0x7a79
    99b8:	movt	r3, #2
    99bc:	str	r3, [fp, #-36]	; 0xffffffdc
    99c0:	b	9a74 <read_grib1_message+0x1774>
    99c4:	movw	r3, #48916	; 0xbf14
    99c8:	str	r3, [fp, #-36]	; 0xffffffdc
    99cc:	b	9a74 <read_grib1_message+0x1774>
    99d0:	movw	r3, #32295	; 0x7e27
    99d4:	movt	r3, #1
    99d8:	str	r3, [fp, #-36]	; 0xffffffdc
    99dc:	b	9a74 <read_grib1_message+0x1774>
    99e0:	movw	r3, #41630	; 0xa29e
    99e4:	str	r3, [fp, #-36]	; 0xffffffdc
    99e8:	b	9a74 <read_grib1_message+0x1774>
    99ec:	movw	r3, #17723	; 0x453b
    99f0:	movt	r3, #1
    99f4:	str	r3, [fp, #-36]	; 0xffffffdc
    99f8:	b	9a74 <read_grib1_message+0x1774>
    99fc:	movw	r3, #6889	; 0x1ae9
    9a00:	str	r3, [fp, #-36]	; 0xffffffdc
    9a04:	b	9a74 <read_grib1_message+0x1774>
    9a08:	movw	r3, #10283	; 0x282b
    9a0c:	str	r3, [fp, #-36]	; 0xffffffdc
    9a10:	b	9a74 <read_grib1_message+0x1774>
    9a14:	movw	r3, #3640	; 0xe38
    9a18:	str	r3, [fp, #-36]	; 0xffffffdc
    9a1c:	b	9a74 <read_grib1_message+0x1774>
    9a20:	movw	r3, #16170	; 0x3f2a
    9a24:	str	r3, [fp, #-36]	; 0xffffffdc
    9a28:	b	9a74 <read_grib1_message+0x1774>
    9a2c:	movw	r3, #6889	; 0x1ae9
    9a30:	str	r3, [fp, #-36]	; 0xffffffdc
    9a34:	b	9a74 <read_grib1_message+0x1774>
    9a38:	movw	r3, #19305	; 0x4b69
    9a3c:	str	r3, [fp, #-36]	; 0xffffffdc
    9a40:	b	9a74 <read_grib1_message+0x1774>
    9a44:	movw	r3, #11040	; 0x2b20
    9a48:	str	r3, [fp, #-36]	; 0xffffffdc
    9a4c:	b	9a74 <read_grib1_message+0x1774>
    9a50:	ldrb	r3, [fp, #-61]	; 0xffffffc3
    9a54:	mov	r2, r3
    9a58:	movw	r1, #0
    9a5c:	movt	r1, #0
    9a60:	movw	r0, #65236	; 0xfed4
    9a64:	movt	r0, #65535	; 0xffff
    9a68:	bl	0 <coda_set_error>
    9a6c:	mvn	r3, #0
    9a70:	b	a0d0 <read_grib1_message+0x1dd0>
    9a74:	ldr	r3, [fp, #-72]	; 0xffffffb8
    9a78:	cmp	r3, #0
    9a7c:	beq	9c80 <read_grib1_message+0x1980>
    9a80:	ldr	r3, [fp, #-184]	; 0xffffff48
    9a84:	ldr	r1, [r3, #52]	; 0x34
    9a88:	sub	r3, fp, #156	; 0x9c
    9a8c:	str	r3, [sp, #8]
    9a90:	mov	r2, #6
    9a94:	mov	r3, #0
    9a98:	strd	r2, [sp]
    9a9c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9aa0:	mov	r0, r1
    9aa4:	bl	0 <read_bytes>
    9aa8:	mov	r3, r0
    9aac:	cmp	r3, #0
    9ab0:	bge	9abc <read_grib1_message+0x17bc>
    9ab4:	mvn	r3, #0
    9ab8:	b	a0d0 <read_grib1_message+0x1dd0>
    9abc:	ldrb	r3, [fp, #-156]	; 0xffffff64
    9ac0:	lsl	r3, r3, #8
    9ac4:	ldrb	r2, [fp, #-155]	; 0xffffff65
    9ac8:	add	r3, r3, r2
    9acc:	lsl	r3, r3, #8
    9ad0:	ldrb	r2, [fp, #-154]	; 0xffffff66
    9ad4:	add	r3, r3, r2
    9ad8:	str	r3, [fp, #-52]	; 0xffffffcc
    9adc:	ldrb	r3, [fp, #-152]	; 0xffffff68
    9ae0:	lsl	r3, r3, #8
    9ae4:	ldrb	r2, [fp, #-151]	; 0xffffff69
    9ae8:	add	r3, r3, r2
    9aec:	cmp	r3, #0
    9af0:	beq	9b10 <read_grib1_message+0x1810>
    9af4:	movw	r1, #0
    9af8:	movt	r1, #0
    9afc:	movw	r0, #65236	; 0xfed4
    9b00:	movt	r0, #65535	; 0xffff
    9b04:	bl	0 <coda_set_error>
    9b08:	mvn	r3, #0
    9b0c:	b	a0d0 <read_grib1_message+0x1dd0>
    9b10:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b14:	sub	r2, r3, #5
    9b18:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9b1c:	asr	r3, r3, #3
    9b20:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9b24:	uxtb	r1, r1
    9b28:	and	r1, r1, #7
    9b2c:	cmp	r1, #0
    9b30:	movne	r1, #1
    9b34:	moveq	r1, #0
    9b38:	uxtb	r1, r1
    9b3c:	add	r3, r3, r1
    9b40:	cmp	r2, r3
    9b44:	bgt	9ba4 <read_grib1_message+0x18a4>
    9b48:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9b4c:	sub	r1, r3, #6
    9b50:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9b54:	asr	r3, r3, #3
    9b58:	ldr	r2, [fp, #-36]	; 0xffffffdc
    9b5c:	uxtb	r2, r2
    9b60:	and	r2, r2, #7
    9b64:	cmp	r2, #0
    9b68:	movne	r2, #1
    9b6c:	moveq	r2, #0
    9b70:	uxtb	r2, r2
    9b74:	add	r2, r3, r2
    9b78:	ldr	r3, [fp, #-36]	; 0xffffffdc
    9b7c:	str	r3, [sp]
    9b80:	mov	r3, r2
    9b84:	mov	r2, r1
    9b88:	movw	r1, #0
    9b8c:	movt	r1, #0
    9b90:	movw	r0, #65236	; 0xfed4
    9b94:	movt	r0, #65535	; 0xffff
    9b98:	bl	0 <coda_set_error>
    9b9c:	mvn	r3, #0
    9ba0:	b	a0d0 <read_grib1_message+0x1dd0>
    9ba4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9ba8:	sub	r3, r3, #6
    9bac:	mov	r0, r3
    9bb0:	bl	0 <malloc>
    9bb4:	mov	r3, r0
    9bb8:	str	r3, [fp, #-32]	; 0xffffffe0
    9bbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9bc0:	cmp	r3, #0
    9bc4:	bne	9bf8 <read_grib1_message+0x18f8>
    9bc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9bcc:	sub	r2, r3, #6
    9bd0:	movw	r3, #2063	; 0x80f
    9bd4:	str	r3, [sp]
    9bd8:	movw	r3, #0
    9bdc:	movt	r3, #0
    9be0:	movw	r1, #0
    9be4:	movt	r1, #0
    9be8:	mvn	r0, #0
    9bec:	bl	0 <coda_set_error>
    9bf0:	mvn	r3, #0
    9bf4:	b	a0d0 <read_grib1_message+0x1dd0>
    9bf8:	ldr	r3, [fp, #-184]	; 0xffffff48
    9bfc:	ldr	r0, [r3, #52]	; 0x34
    9c00:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9c04:	adds	r1, r2, #6
    9c08:	str	r1, [fp, #-212]	; 0xffffff2c
    9c0c:	adc	r3, r3, #0
    9c10:	str	r3, [fp, #-208]	; 0xffffff30
    9c14:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9c18:	sub	r3, r3, #6
    9c1c:	mov	r2, r3
    9c20:	asr	r3, r2, #31
    9c24:	ldr	r1, [fp, #-32]	; 0xffffffe0
    9c28:	str	r1, [sp, #8]
    9c2c:	strd	r2, [sp]
    9c30:	ldrd	r2, [fp, #-212]	; 0xffffff2c
    9c34:	bl	0 <read_bytes>
    9c38:	mov	r3, r0
    9c3c:	cmp	r3, #0
    9c40:	bge	9c54 <read_grib1_message+0x1954>
    9c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9c48:	bl	0 <free>
    9c4c:	mvn	r3, #0
    9c50:	b	a0d0 <read_grib1_message+0x1dd0>
    9c54:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9c58:	mov	r2, r3
    9c5c:	asr	r3, r2, #31
    9c60:	ldrd	r0, [fp, #-196]	; 0xffffff3c
    9c64:	adds	ip, r0, r2
    9c68:	str	ip, [fp, #-260]	; 0xfffffefc
    9c6c:	adc	r3, r1, r3
    9c70:	str	r3, [fp, #-256]	; 0xffffff00
    9c74:	sub	r3, fp, #260	; 0x104
    9c78:	ldrd	r2, [r3]
    9c7c:	strd	r2, [fp, #-196]	; 0xffffff3c
    9c80:	ldr	r3, [fp, #-184]	; 0xffffff48
    9c84:	ldr	r1, [r3, #52]	; 0x34
    9c88:	sub	r3, fp, #156	; 0x9c
    9c8c:	str	r3, [sp, #8]
    9c90:	mov	r2, #11
    9c94:	mov	r3, #0
    9c98:	strd	r2, [sp]
    9c9c:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9ca0:	mov	r0, r1
    9ca4:	bl	0 <read_bytes>
    9ca8:	mov	r3, r0
    9cac:	cmp	r3, #0
    9cb0:	bge	9cd0 <read_grib1_message+0x19d0>
    9cb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9cb8:	cmp	r3, #0
    9cbc:	beq	9cc8 <read_grib1_message+0x19c8>
    9cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9cc4:	bl	0 <free>
    9cc8:	mvn	r3, #0
    9ccc:	b	a0d0 <read_grib1_message+0x1dd0>
    9cd0:	ldrb	r3, [fp, #-156]	; 0xffffff64
    9cd4:	lsl	r3, r3, #8
    9cd8:	ldrb	r2, [fp, #-155]	; 0xffffff65
    9cdc:	add	r3, r3, r2
    9ce0:	lsl	r3, r3, #8
    9ce4:	ldrb	r2, [fp, #-154]	; 0xffffff66
    9ce8:	add	r3, r3, r2
    9cec:	str	r3, [fp, #-52]	; 0xffffffcc
    9cf0:	ldrb	r3, [fp, #-153]	; 0xffffff67
    9cf4:	sxtb	r3, r3
    9cf8:	cmp	r3, #0
    9cfc:	bge	9d30 <read_grib1_message+0x1a30>
    9d00:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d04:	cmp	r3, #0
    9d08:	beq	9d14 <read_grib1_message+0x1a14>
    9d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d10:	bl	0 <free>
    9d14:	movw	r1, #0
    9d18:	movt	r1, #0
    9d1c:	movw	r0, #65236	; 0xfed4
    9d20:	movt	r0, #65535	; 0xffff
    9d24:	bl	0 <coda_set_error>
    9d28:	mvn	r3, #0
    9d2c:	b	a0d0 <read_grib1_message+0x1dd0>
    9d30:	ldrb	r3, [fp, #-153]	; 0xffffff67
    9d34:	and	r3, r3, #64	; 0x40
    9d38:	cmp	r3, #0
    9d3c:	beq	9d70 <read_grib1_message+0x1a70>
    9d40:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d44:	cmp	r3, #0
    9d48:	beq	9d54 <read_grib1_message+0x1a54>
    9d4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d50:	bl	0 <free>
    9d54:	movw	r1, #0
    9d58:	movt	r1, #0
    9d5c:	movw	r0, #65236	; 0xfed4
    9d60:	movt	r0, #65535	; 0xffff
    9d64:	bl	0 <coda_set_error>
    9d68:	mvn	r3, #0
    9d6c:	b	a0d0 <read_grib1_message+0x1dd0>
    9d70:	ldrb	r3, [fp, #-153]	; 0xffffff67
    9d74:	and	r3, r3, #16
    9d78:	cmp	r3, #0
    9d7c:	beq	9db0 <read_grib1_message+0x1ab0>
    9d80:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9d84:	cmp	r3, #0
    9d88:	beq	9d94 <read_grib1_message+0x1a94>
    9d8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9d90:	bl	0 <free>
    9d94:	movw	r1, #0
    9d98:	movt	r1, #0
    9d9c:	movw	r0, #65236	; 0xfed4
    9da0:	movt	r0, #65535	; 0xffff
    9da4:	bl	0 <coda_set_error>
    9da8:	mvn	r3, #0
    9dac:	b	a0d0 <read_grib1_message+0x1dd0>
    9db0:	ldrb	r3, [fp, #-152]	; 0xffffff68
    9db4:	sxtb	r3, r3
    9db8:	cmp	r3, #0
    9dbc:	bge	9dc8 <read_grib1_message+0x1ac8>
    9dc0:	movw	r2, #65535	; 0xffff
    9dc4:	b	9dcc <read_grib1_message+0x1acc>
    9dc8:	mov	r2, #1
    9dcc:	ldrb	r3, [fp, #-152]	; 0xffffff68
    9dd0:	and	r3, r3, #127	; 0x7f
    9dd4:	lsl	r3, r3, #8
    9dd8:	ldrb	r1, [fp, #-151]	; 0xffffff69
    9ddc:	add	r3, r3, r1
    9de0:	uxth	r3, r3
    9de4:	smulbb	r3, r2, r3
    9de8:	uxth	r3, r3
    9dec:	strh	r3, [fp, #-114]	; 0xffffff8e
    9df0:	sub	r3, fp, #156	; 0x9c
    9df4:	add	r3, r3, #6
    9df8:	mov	r0, r3
    9dfc:	bl	819c <ibmfloat_to_iee754>
    9e00:	vstr	s0, [fp, #-120]	; 0xffffff88
    9e04:	ldrb	r3, [fp, #-146]	; 0xffffff6e
    9e08:	strb	r3, [fp, #-121]	; 0xffffff87
    9e0c:	ldrb	r3, [fp, #-121]	; 0xffffff87
    9e10:	cmp	r3, #63	; 0x3f
    9e14:	bls	9e50 <read_grib1_message+0x1b50>
    9e18:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9e1c:	cmp	r3, #0
    9e20:	beq	9e2c <read_grib1_message+0x1b2c>
    9e24:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9e28:	bl	0 <free>
    9e2c:	ldrb	r3, [fp, #-121]	; 0xffffff87
    9e30:	mov	r2, r3
    9e34:	movw	r1, #0
    9e38:	movt	r1, #0
    9e3c:	movw	r0, #65236	; 0xfed4
    9e40:	movt	r0, #65535	; 0xffff
    9e44:	bl	0 <coda_set_error>
    9e48:	mvn	r3, #0
    9e4c:	b	a0d0 <read_grib1_message+0x1dd0>
    9e50:	mrc	15, 0, r3, cr13, cr0, {3}
    9e54:	ldr	r2, [pc, #-2868]	; 9328 <read_grib1_message+0x1028>
    9e58:	ldr	r3, [r3, r2]
    9e5c:	add	r3, r3, #268	; 0x10c
    9e60:	ldr	r3, [r3]
    9e64:	mov	r1, #0
    9e68:	mov	r0, r3
    9e6c:	bl	0 <coda_mem_record_new>
    9e70:	str	r0, [fp, #-128]	; 0xffffff80
    9e74:	mrc	15, 0, r3, cr13, cr0, {3}
    9e78:	ldr	r2, [pc, #-2904]	; 9328 <read_grib1_message+0x1028>
    9e7c:	ldr	r3, [r3, r2]
    9e80:	ldr	r3, [r3, #248]	; 0xf8
    9e84:	str	r3, [fp, #-56]	; 0xffffffc8
    9e88:	ldrb	r3, [fp, #-121]	; 0xffffff87
    9e8c:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9e90:	mov	r1, #0
    9e94:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9e98:	bl	0 <coda_mem_uint8_new>
    9e9c:	str	r0, [fp, #-60]	; 0xffffffc4
    9ea0:	mov	r3, #0
    9ea4:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9ea8:	movw	r1, #0
    9eac:	movt	r1, #0
    9eb0:	ldr	r0, [fp, #-128]	; 0xffffff80
    9eb4:	bl	0 <coda_mem_record_add_field>
    9eb8:	mrc	15, 0, r3, cr13, cr0, {3}
    9ebc:	ldr	r2, [pc, #-2972]	; 9328 <read_grib1_message+0x1028>
    9ec0:	ldr	r3, [r3, r2]
    9ec4:	ldr	r3, [r3, #252]	; 0xfc
    9ec8:	str	r3, [fp, #-56]	; 0xffffffc8
    9ecc:	ldrsh	r3, [fp, #-114]	; 0xffffff8e
    9ed0:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9ed4:	mov	r1, #0
    9ed8:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9edc:	bl	0 <coda_mem_int16_new>
    9ee0:	str	r0, [fp, #-60]	; 0xffffffc4
    9ee4:	mov	r3, #0
    9ee8:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9eec:	movw	r1, #0
    9ef0:	movt	r1, #0
    9ef4:	ldr	r0, [fp, #-128]	; 0xffffff80
    9ef8:	bl	0 <coda_mem_record_add_field>
    9efc:	mrc	15, 0, r3, cr13, cr0, {3}
    9f00:	ldr	r2, [pc, #-3040]	; 9328 <read_grib1_message+0x1028>
    9f04:	ldr	r3, [r3, r2]
    9f08:	ldr	r3, [r3, #256]	; 0x100
    9f0c:	str	r3, [fp, #-56]	; 0xffffffc8
    9f10:	vldr	s0, [fp, #-120]	; 0xffffff88
    9f14:	ldr	r2, [fp, #-48]	; 0xffffffd0
    9f18:	mov	r1, #0
    9f1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
    9f20:	bl	0 <coda_mem_float_new>
    9f24:	str	r0, [fp, #-60]	; 0xffffffc4
    9f28:	mov	r3, #0
    9f2c:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9f30:	movw	r1, #0
    9f34:	movt	r1, #0
    9f38:	ldr	r0, [fp, #-128]	; 0xffffff80
    9f3c:	bl	0 <coda_mem_record_add_field>
    9f40:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9f44:	adds	r1, r2, #11
    9f48:	str	r1, [fp, #-268]	; 0xfffffef4
    9f4c:	adc	r3, r3, #0
    9f50:	str	r3, [fp, #-264]	; 0xfffffef8
    9f54:	sub	r3, fp, #268	; 0x10c
    9f58:	ldrd	r2, [r3]
    9f5c:	strd	r2, [fp, #-196]	; 0xffffff3c
    9f60:	mrc	15, 0, r3, cr13, cr0, {3}
    9f64:	ldr	r2, [pc, #-3140]	; 9328 <read_grib1_message+0x1028>
    9f68:	ldr	r3, [r3, r2]
    9f6c:	add	r3, r3, #260	; 0x104
    9f70:	ldr	r0, [r3]
    9f74:	ldrb	r3, [fp, #-121]	; 0xffffff87
    9f78:	ldr	r2, [fp, #-32]	; 0xffffffe0
    9f7c:	str	r2, [sp, #12]
    9f80:	ldrsh	r2, [fp, #-114]	; 0xffffff8e
    9f84:	str	r2, [sp, #8]
    9f88:	ldrsh	r2, [fp, #-74]	; 0xffffffb6
    9f8c:	str	r2, [sp, #4]
    9f90:	str	r3, [sp]
    9f94:	vldr	s0, [fp, #-120]	; 0xffffff88
    9f98:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    9f9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
    9fa0:	bl	0 <coda_grib_value_array_simple_packing_new>
    9fa4:	str	r0, [fp, #-60]	; 0xffffffc4
    9fa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    9fac:	cmp	r3, #0
    9fb0:	beq	9fbc <read_grib1_message+0x1cbc>
    9fb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
    9fb8:	bl	0 <free>
    9fbc:	mov	r3, #0
    9fc0:	ldr	r2, [fp, #-60]	; 0xffffffc4
    9fc4:	movw	r1, #0
    9fc8:	movt	r1, #0
    9fcc:	ldr	r0, [fp, #-128]	; 0xffffff80
    9fd0:	bl	0 <coda_mem_record_add_field>
    9fd4:	mov	r3, #0
    9fd8:	ldr	r2, [fp, #-128]	; 0xffffff80
    9fdc:	movw	r1, #0
    9fe0:	movt	r1, #0
    9fe4:	ldr	r0, [fp, #-188]	; 0xffffff44
    9fe8:	bl	0 <coda_mem_record_add_field>
    9fec:	ldr	r3, [fp, #-52]	; 0xffffffcc
    9ff0:	sub	r3, r3, #11
    9ff4:	mov	r2, r3
    9ff8:	asr	r3, r2, #31
    9ffc:	ldrd	r0, [fp, #-196]	; 0xffffff3c
    a000:	adds	ip, r0, r2
    a004:	str	ip, [fp, #-276]	; 0xfffffeec
    a008:	adc	r3, r1, r3
    a00c:	str	r3, [fp, #-272]	; 0xfffffef0
    a010:	sub	r3, fp, #276	; 0x114
    a014:	ldrd	r2, [r3]
    a018:	strd	r2, [fp, #-196]	; 0xffffff3c
    a01c:	ldr	r3, [fp, #-184]	; 0xffffff48
    a020:	ldr	r1, [r3, #52]	; 0x34
    a024:	sub	r3, fp, #156	; 0x9c
    a028:	str	r3, [sp, #8]
    a02c:	mov	r2, #4
    a030:	mov	r3, #0
    a034:	strd	r2, [sp]
    a038:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    a03c:	mov	r0, r1
    a040:	bl	0 <read_bytes>
    a044:	mov	r3, r0
    a048:	cmp	r3, #0
    a04c:	bge	a058 <read_grib1_message+0x1d58>
    a050:	mvn	r3, #0
    a054:	b	a0d0 <read_grib1_message+0x1dd0>
    a058:	sub	r3, fp, #156	; 0x9c
    a05c:	mov	r2, #4
    a060:	movw	r1, #0
    a064:	movt	r1, #0
    a068:	mov	r0, r3
    a06c:	bl	0 <memcmp>
    a070:	mov	r3, r0
    a074:	cmp	r3, #0
    a078:	beq	a0ac <read_grib1_message+0x1dac>
    a07c:	sub	r3, fp, #180	; 0xb4
    a080:	mov	r2, r3
    a084:	ldrd	r0, [fp, #-196]	; 0xffffff3c
    a088:	bl	0 <coda_str64>
    a08c:	sub	r3, fp, #180	; 0xb4
    a090:	mov	r2, r3
    a094:	movw	r1, #0
    a098:	movt	r1, #0
    a09c:	mvn	r0, #21
    a0a0:	bl	0 <coda_set_error>
    a0a4:	mvn	r3, #0
    a0a8:	b	a0d0 <read_grib1_message+0x1dd0>
    a0ac:	ldrd	r2, [fp, #-196]	; 0xffffff3c
    a0b0:	adds	r1, r2, #4
    a0b4:	str	r1, [fp, #-284]	; 0xfffffee4
    a0b8:	adc	r3, r3, #0
    a0bc:	str	r3, [fp, #-280]	; 0xfffffee8
    a0c0:	sub	r3, fp, #284	; 0x11c
    a0c4:	ldrd	r2, [r3]
    a0c8:	strd	r2, [fp, #-196]	; 0xffffff3c
    a0cc:	mov	r3, #0
    a0d0:	mov	r0, r3
    a0d4:	sub	sp, fp, #28
    a0d8:	ldrd	r4, [sp]
    a0dc:	ldrd	r6, [sp, #8]
    a0e0:	ldrd	r8, [sp, #16]
    a0e4:	ldr	fp, [sp, #24]
    a0e8:	add	sp, sp, #28
    a0ec:	pop	{pc}		; (ldr pc, [sp], #4)

0000a0f0 <read_grib2_message>:
    a0f0:	strd	r4, [sp, #-32]!	; 0xffffffe0
    a0f4:	strd	r6, [sp, #8]
    a0f8:	strd	r8, [sp, #16]
    a0fc:	str	fp, [sp, #24]
    a100:	str	lr, [sp, #28]
    a104:	add	fp, sp, #28
    a108:	sub	sp, sp, #520	; 0x208
    a10c:	str	r0, [fp, #-376]	; 0xfffffe88
    a110:	str	r1, [fp, #-380]	; 0xfffffe84
    a114:	sub	r1, fp, #380	; 0x17c
    a118:	strd	r2, [r1, #-8]
    a11c:	ldr	r3, [fp, #-376]	; 0xfffffe88
    a120:	str	r3, [fp, #-164]	; 0xffffff5c
    a124:	mov	r3, #0
    a128:	str	r3, [fp, #-32]	; 0xffffffe0
    a12c:	mvn	r2, #0
    a130:	mvn	r3, #0
    a134:	strd	r2, [fp, #-44]	; 0xffffffd4
    a138:	mov	r2, #0
    a13c:	mov	r3, #0
    a140:	strd	r2, [fp, #-52]	; 0xffffffcc
    a144:	mvn	r3, #0
    a148:	str	r3, [fp, #-56]	; 0xffffffc8
    a14c:	mvn	r3, #0
    a150:	str	r3, [fp, #-60]	; 0xffffffc4
    a154:	mov	r3, #0
    a158:	strh	r3, [fp, #-62]	; 0xffffffc2
    a15c:	mvn	r2, #0
    a160:	mvn	r3, #0
    a164:	strd	r2, [fp, #-76]	; 0xffffffb4
    a168:	mov	r3, #0
    a16c:	strb	r3, [fp, #-77]	; 0xffffffb3
    a170:	mov	r3, #0
    a174:	strb	r3, [fp, #-78]	; 0xffffffb2
    a178:	mov	r3, #0
    a17c:	strb	r3, [fp, #-79]	; 0xffffffb1
    a180:	mov	r3, #0
    a184:	strb	r3, [fp, #-80]	; 0xffffffb0
    a188:	mov	r3, #0
    a18c:	strb	r3, [fp, #-81]	; 0xffffffaf
    a190:	mov	r3, #0
    a194:	strh	r3, [fp, #-84]	; 0xffffffac
    a198:	mov	r3, #0
    a19c:	strb	r3, [fp, #-85]	; 0xffffffab
    a1a0:	mov	r3, #0
    a1a4:	strb	r3, [fp, #-86]	; 0xffffffaa
    a1a8:	mov	r3, #0
    a1ac:	str	r3, [fp, #-92]	; 0xffffffa4
    a1b0:	mov	r3, #0
    a1b4:	strb	r3, [fp, #-93]	; 0xffffffa3
    a1b8:	mov	r2, #0
    a1bc:	mov	r3, #0
    a1c0:	strd	r2, [fp, #-108]	; 0xffffff94
    a1c4:	mov	r3, #0
    a1c8:	strb	r3, [fp, #-109]	; 0xffffff93
    a1cc:	mov	r2, #0
    a1d0:	mov	r3, #0
    a1d4:	strd	r2, [fp, #-124]	; 0xffffff84
    a1d8:	mov	r3, #0
    a1dc:	strh	r3, [fp, #-126]	; 0xffffff82
    a1e0:	mov	r3, #0
    a1e4:	strh	r3, [fp, #-128]	; 0xffffff80
    a1e8:	mov	r3, #0
    a1ec:	str	r3, [fp, #-232]	; 0xffffff18
    a1f0:	mov	r3, #0
    a1f4:	strb	r3, [fp, #-129]	; 0xffffff7f
    a1f8:	mov	r3, #0
    a1fc:	str	r3, [fp, #-136]	; 0xffffff78
    a200:	ldr	r3, [fp, #-376]	; 0xfffffe88
    a204:	ldr	r0, [r3, #52]	; 0x34
    a208:	sub	r3, fp, #380	; 0x17c
    a20c:	mov	r1, r3
    a210:	sub	r3, fp, #296	; 0x128
    a214:	str	r3, [sp, #8]
    a218:	mov	r2, #21
    a21c:	mov	r3, #0
    a220:	strd	r2, [sp]
    a224:	ldrd	r2, [r1, #-8]
    a228:	bl	0 <read_bytes>
    a22c:	mov	r3, r0
    a230:	cmp	r3, #0
    a234:	bge	a240 <read_grib2_message+0x150>
    a238:	mvn	r3, #0
    a23c:	b	ca44 <read_grib2_message+0x2954>
    a240:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    a244:	lsl	r2, r3, #8
    a248:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    a24c:	add	r3, r2, r3
    a250:	lsl	r2, r3, #8
    a254:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    a258:	add	r3, r2, r3
    a25c:	lsl	r2, r3, #8
    a260:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    a264:	add	r3, r2, r3
    a268:	str	r3, [fp, #-168]	; 0xffffff58
    a26c:	ldrb	r3, [fp, #-292]	; 0xfffffedc
    a270:	cmp	r3, #1
    a274:	beq	a2b0 <read_grib2_message+0x1c0>
    a278:	sub	r2, fp, #320	; 0x140
    a27c:	sub	r3, fp, #380	; 0x17c
    a280:	ldrd	r0, [r3, #-8]
    a284:	bl	0 <coda_str64>
    a288:	ldrb	r3, [fp, #-292]	; 0xfffffedc
    a28c:	sub	r2, r3, #48	; 0x30
    a290:	sub	r3, fp, #320	; 0x140
    a294:	movw	r1, #0
    a298:	movt	r1, #0
    a29c:	movw	r0, #65236	; 0xfed4
    a2a0:	movt	r0, #65535	; 0xffff
    a2a4:	bl	0 <coda_set_error>
    a2a8:	mvn	r3, #0
    a2ac:	b	ca44 <read_grib2_message+0x2954>
    a2b0:	mov	r3, #1
    a2b4:	strb	r3, [fp, #-137]	; 0xffffff77
    a2b8:	mrc	15, 0, r2, cr13, cr0, {3}
    a2bc:	ldr	r3, [pc, #3948]	; b230 <read_grib2_message+0x1140>
    a2c0:	ldr	r3, [r2, r3]
    a2c4:	ldr	r3, [r3, #288]	; 0x120
    a2c8:	str	r3, [fp, #-172]	; 0xffffff54
    a2cc:	ldrb	r3, [fp, #-291]	; 0xfffffedd
    a2d0:	uxth	r3, r3
    a2d4:	lsl	r3, r3, #8
    a2d8:	uxth	r2, r3
    a2dc:	ldrb	r3, [fp, #-290]	; 0xfffffede
    a2e0:	uxth	r3, r3
    a2e4:	add	r3, r2, r3
    a2e8:	uxth	r3, r3
    a2ec:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a2f0:	mov	r1, #0
    a2f4:	ldr	r0, [fp, #-172]	; 0xffffff54
    a2f8:	bl	0 <coda_mem_uint16_new>
    a2fc:	str	r0, [fp, #-176]	; 0xffffff50
    a300:	mov	r3, #0
    a304:	ldr	r2, [fp, #-176]	; 0xffffff50
    a308:	movw	r1, #0
    a30c:	movt	r1, #0
    a310:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a314:	bl	0 <coda_mem_record_add_field>
    a318:	mrc	15, 0, r2, cr13, cr0, {3}
    a31c:	ldr	r3, [pc, #3852]	; b230 <read_grib2_message+0x1140>
    a320:	ldr	r3, [r2, r3]
    a324:	ldr	r3, [r3, #316]	; 0x13c
    a328:	str	r3, [fp, #-172]	; 0xffffff54
    a32c:	ldrb	r3, [fp, #-289]	; 0xfffffedf
    a330:	uxth	r3, r3
    a334:	lsl	r3, r3, #8
    a338:	uxth	r2, r3
    a33c:	ldrb	r3, [fp, #-288]	; 0xfffffee0
    a340:	uxth	r3, r3
    a344:	add	r3, r2, r3
    a348:	uxth	r3, r3
    a34c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a350:	mov	r1, #0
    a354:	ldr	r0, [fp, #-172]	; 0xffffff54
    a358:	bl	0 <coda_mem_uint16_new>
    a35c:	str	r0, [fp, #-176]	; 0xffffff50
    a360:	mov	r3, #0
    a364:	ldr	r2, [fp, #-176]	; 0xffffff50
    a368:	movw	r1, #0
    a36c:	movt	r1, #0
    a370:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a374:	bl	0 <coda_mem_record_add_field>
    a378:	mrc	15, 0, r2, cr13, cr0, {3}
    a37c:	ldr	r3, [pc, #3756]	; b230 <read_grib2_message+0x1140>
    a380:	ldr	r3, [r2, r3]
    a384:	ldr	r3, [r3, #328]	; 0x148
    a388:	str	r3, [fp, #-172]	; 0xffffff54
    a38c:	ldrb	r3, [fp, #-287]	; 0xfffffee1
    a390:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a394:	mov	r1, #0
    a398:	ldr	r0, [fp, #-172]	; 0xffffff54
    a39c:	bl	0 <coda_mem_uint8_new>
    a3a0:	str	r0, [fp, #-176]	; 0xffffff50
    a3a4:	mov	r3, #0
    a3a8:	ldr	r2, [fp, #-176]	; 0xffffff50
    a3ac:	movw	r1, #0
    a3b0:	movt	r1, #0
    a3b4:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a3b8:	bl	0 <coda_mem_record_add_field>
    a3bc:	mrc	15, 0, r2, cr13, cr0, {3}
    a3c0:	ldr	r3, [pc, #3688]	; b230 <read_grib2_message+0x1140>
    a3c4:	ldr	r3, [r2, r3]
    a3c8:	ldr	r3, [r3, #332]	; 0x14c
    a3cc:	str	r3, [fp, #-172]	; 0xffffff54
    a3d0:	ldrb	r3, [fp, #-286]	; 0xfffffee2
    a3d4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a3d8:	mov	r1, #0
    a3dc:	ldr	r0, [fp, #-172]	; 0xffffff54
    a3e0:	bl	0 <coda_mem_uint8_new>
    a3e4:	str	r0, [fp, #-176]	; 0xffffff50
    a3e8:	mov	r3, #0
    a3ec:	ldr	r2, [fp, #-176]	; 0xffffff50
    a3f0:	movw	r1, #0
    a3f4:	movt	r1, #0
    a3f8:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a3fc:	bl	0 <coda_mem_record_add_field>
    a400:	mrc	15, 0, r2, cr13, cr0, {3}
    a404:	ldr	r3, [pc, #3620]	; b230 <read_grib2_message+0x1140>
    a408:	ldr	r3, [r2, r3]
    a40c:	ldr	r3, [r3, #336]	; 0x150
    a410:	str	r3, [fp, #-172]	; 0xffffff54
    a414:	ldrb	r3, [fp, #-285]	; 0xfffffee3
    a418:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a41c:	mov	r1, #0
    a420:	ldr	r0, [fp, #-172]	; 0xffffff54
    a424:	bl	0 <coda_mem_uint8_new>
    a428:	str	r0, [fp, #-176]	; 0xffffff50
    a42c:	mov	r3, #0
    a430:	ldr	r2, [fp, #-176]	; 0xffffff50
    a434:	movw	r1, #0
    a438:	movt	r1, #0
    a43c:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a440:	bl	0 <coda_mem_record_add_field>
    a444:	mrc	15, 0, r2, cr13, cr0, {3}
    a448:	ldr	r3, [pc, #3552]	; b230 <read_grib2_message+0x1140>
    a44c:	ldr	r3, [r2, r3]
    a450:	ldr	r3, [r3, #292]	; 0x124
    a454:	str	r3, [fp, #-172]	; 0xffffff54
    a458:	ldrb	r3, [fp, #-284]	; 0xfffffee4
    a45c:	uxth	r3, r3
    a460:	lsl	r3, r3, #8
    a464:	uxth	r2, r3
    a468:	ldrb	r3, [fp, #-283]	; 0xfffffee5
    a46c:	uxth	r3, r3
    a470:	add	r3, r2, r3
    a474:	uxth	r3, r3
    a478:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a47c:	mov	r1, #0
    a480:	ldr	r0, [fp, #-172]	; 0xffffff54
    a484:	bl	0 <coda_mem_uint16_new>
    a488:	str	r0, [fp, #-176]	; 0xffffff50
    a48c:	mov	r3, #0
    a490:	ldr	r2, [fp, #-176]	; 0xffffff50
    a494:	movw	r1, #0
    a498:	movt	r1, #0
    a49c:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a4a0:	bl	0 <coda_mem_record_add_field>
    a4a4:	mrc	15, 0, r2, cr13, cr0, {3}
    a4a8:	ldr	r3, [pc, #3456]	; b230 <read_grib2_message+0x1140>
    a4ac:	ldr	r3, [r2, r3]
    a4b0:	ldr	r3, [r3, #296]	; 0x128
    a4b4:	str	r3, [fp, #-172]	; 0xffffff54
    a4b8:	ldrb	r3, [fp, #-282]	; 0xfffffee6
    a4bc:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a4c0:	mov	r1, #0
    a4c4:	ldr	r0, [fp, #-172]	; 0xffffff54
    a4c8:	bl	0 <coda_mem_uint8_new>
    a4cc:	str	r0, [fp, #-176]	; 0xffffff50
    a4d0:	mov	r3, #0
    a4d4:	ldr	r2, [fp, #-176]	; 0xffffff50
    a4d8:	movw	r1, #0
    a4dc:	movt	r1, #0
    a4e0:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a4e4:	bl	0 <coda_mem_record_add_field>
    a4e8:	mrc	15, 0, r2, cr13, cr0, {3}
    a4ec:	ldr	r3, [pc, #3388]	; b230 <read_grib2_message+0x1140>
    a4f0:	ldr	r3, [r2, r3]
    a4f4:	ldr	r3, [r3, #300]	; 0x12c
    a4f8:	str	r3, [fp, #-172]	; 0xffffff54
    a4fc:	ldrb	r3, [fp, #-281]	; 0xfffffee7
    a500:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a504:	mov	r1, #0
    a508:	ldr	r0, [fp, #-172]	; 0xffffff54
    a50c:	bl	0 <coda_mem_uint8_new>
    a510:	str	r0, [fp, #-176]	; 0xffffff50
    a514:	mov	r3, #0
    a518:	ldr	r2, [fp, #-176]	; 0xffffff50
    a51c:	movw	r1, #0
    a520:	movt	r1, #0
    a524:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a528:	bl	0 <coda_mem_record_add_field>
    a52c:	mrc	15, 0, r2, cr13, cr0, {3}
    a530:	ldr	r3, [pc, #3320]	; b230 <read_grib2_message+0x1140>
    a534:	ldr	r3, [r2, r3]
    a538:	ldr	r3, [r3, #304]	; 0x130
    a53c:	str	r3, [fp, #-172]	; 0xffffff54
    a540:	ldrb	r3, [fp, #-280]	; 0xfffffee8
    a544:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a548:	mov	r1, #0
    a54c:	ldr	r0, [fp, #-172]	; 0xffffff54
    a550:	bl	0 <coda_mem_uint8_new>
    a554:	str	r0, [fp, #-176]	; 0xffffff50
    a558:	mov	r3, #0
    a55c:	ldr	r2, [fp, #-176]	; 0xffffff50
    a560:	movw	r1, #0
    a564:	movt	r1, #0
    a568:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a56c:	bl	0 <coda_mem_record_add_field>
    a570:	mrc	15, 0, r2, cr13, cr0, {3}
    a574:	ldr	r3, [pc, #3252]	; b230 <read_grib2_message+0x1140>
    a578:	ldr	r3, [r2, r3]
    a57c:	ldr	r3, [r3, #308]	; 0x134
    a580:	str	r3, [fp, #-172]	; 0xffffff54
    a584:	ldrb	r3, [fp, #-279]	; 0xfffffee9
    a588:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a58c:	mov	r1, #0
    a590:	ldr	r0, [fp, #-172]	; 0xffffff54
    a594:	bl	0 <coda_mem_uint8_new>
    a598:	str	r0, [fp, #-176]	; 0xffffff50
    a59c:	mov	r3, #0
    a5a0:	ldr	r2, [fp, #-176]	; 0xffffff50
    a5a4:	movw	r1, #0
    a5a8:	movt	r1, #0
    a5ac:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a5b0:	bl	0 <coda_mem_record_add_field>
    a5b4:	mrc	15, 0, r2, cr13, cr0, {3}
    a5b8:	ldr	r3, [pc, #3184]	; b230 <read_grib2_message+0x1140>
    a5bc:	ldr	r3, [r2, r3]
    a5c0:	ldr	r3, [r3, #312]	; 0x138
    a5c4:	str	r3, [fp, #-172]	; 0xffffff54
    a5c8:	ldrb	r3, [fp, #-278]	; 0xfffffeea
    a5cc:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a5d0:	mov	r1, #0
    a5d4:	ldr	r0, [fp, #-172]	; 0xffffff54
    a5d8:	bl	0 <coda_mem_uint8_new>
    a5dc:	str	r0, [fp, #-176]	; 0xffffff50
    a5e0:	mov	r3, #0
    a5e4:	ldr	r2, [fp, #-176]	; 0xffffff50
    a5e8:	movw	r1, #0
    a5ec:	movt	r1, #0
    a5f0:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a5f4:	bl	0 <coda_mem_record_add_field>
    a5f8:	mrc	15, 0, r2, cr13, cr0, {3}
    a5fc:	ldr	r3, [pc, #3116]	; b230 <read_grib2_message+0x1140>
    a600:	ldr	r3, [r2, r3]
    a604:	ldr	r3, [r3, #340]	; 0x154
    a608:	str	r3, [fp, #-172]	; 0xffffff54
    a60c:	ldrb	r3, [fp, #-277]	; 0xfffffeeb
    a610:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a614:	mov	r1, #0
    a618:	ldr	r0, [fp, #-172]	; 0xffffff54
    a61c:	bl	0 <coda_mem_uint8_new>
    a620:	str	r0, [fp, #-176]	; 0xffffff50
    a624:	mov	r3, #0
    a628:	ldr	r2, [fp, #-176]	; 0xffffff50
    a62c:	movw	r1, #0
    a630:	movt	r1, #0
    a634:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a638:	bl	0 <coda_mem_record_add_field>
    a63c:	mrc	15, 0, r2, cr13, cr0, {3}
    a640:	ldr	r3, [pc, #3048]	; b230 <read_grib2_message+0x1140>
    a644:	ldr	r3, [r2, r3]
    a648:	ldr	r3, [r3, #344]	; 0x158
    a64c:	str	r3, [fp, #-172]	; 0xffffff54
    a650:	ldrb	r3, [fp, #-276]	; 0xfffffeec
    a654:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a658:	mov	r1, #0
    a65c:	ldr	r0, [fp, #-172]	; 0xffffff54
    a660:	bl	0 <coda_mem_uint8_new>
    a664:	str	r0, [fp, #-176]	; 0xffffff50
    a668:	mov	r3, #0
    a66c:	ldr	r2, [fp, #-176]	; 0xffffff50
    a670:	movw	r1, #0
    a674:	movt	r1, #0
    a678:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a67c:	bl	0 <coda_mem_record_add_field>
    a680:	mrc	15, 0, r2, cr13, cr0, {3}
    a684:	ldr	r3, [pc, #2980]	; b230 <read_grib2_message+0x1140>
    a688:	ldr	r3, [r2, r3]
    a68c:	add	r3, r3, #548	; 0x224
    a690:	ldr	r3, [r3]
    a694:	mov	r1, #0
    a698:	mov	r0, r3
    a69c:	bl	0 <coda_mem_array_new>
    a6a0:	str	r0, [fp, #-180]	; 0xffffff4c
    a6a4:	mov	r3, #0
    a6a8:	ldr	r2, [fp, #-180]	; 0xffffff4c
    a6ac:	movw	r1, #0
    a6b0:	movt	r1, #0
    a6b4:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a6b8:	bl	0 <coda_mem_record_add_field>
    a6bc:	mrc	15, 0, r2, cr13, cr0, {3}
    a6c0:	ldr	r3, [pc, #2920]	; b230 <read_grib2_message+0x1140>
    a6c4:	ldr	r3, [r2, r3]
    a6c8:	add	r3, r3, #552	; 0x228
    a6cc:	ldr	r3, [r3]
    a6d0:	mov	r1, #0
    a6d4:	mov	r0, r3
    a6d8:	bl	0 <coda_mem_array_new>
    a6dc:	str	r0, [fp, #-184]	; 0xffffff48
    a6e0:	mov	r3, #0
    a6e4:	ldr	r2, [fp, #-184]	; 0xffffff48
    a6e8:	movw	r1, #0
    a6ec:	movt	r1, #0
    a6f0:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a6f4:	bl	0 <coda_mem_record_add_field>
    a6f8:	mrc	15, 0, r2, cr13, cr0, {3}
    a6fc:	ldr	r3, [pc, #2860]	; b230 <read_grib2_message+0x1140>
    a700:	ldr	r3, [r2, r3]
    a704:	add	r3, r3, #556	; 0x22c
    a708:	ldr	r3, [r3]
    a70c:	mov	r1, #0
    a710:	mov	r0, r3
    a714:	bl	0 <coda_mem_array_new>
    a718:	str	r0, [fp, #-188]	; 0xffffff44
    a71c:	mov	r3, #0
    a720:	ldr	r2, [fp, #-188]	; 0xffffff44
    a724:	movw	r1, #0
    a728:	movt	r1, #0
    a72c:	ldr	r0, [fp, #-380]	; 0xfffffe84
    a730:	bl	0 <coda_mem_record_add_field>
    a734:	sub	r3, fp, #380	; 0x17c
    a738:	mov	r1, r3
    a73c:	sub	r3, fp, #380	; 0x17c
    a740:	ldrd	r2, [r3, #-8]
    a744:	adds	r4, r2, #21
    a748:	adc	r5, r3, #0
    a74c:	strd	r4, [r1, #-8]
    a750:	ldr	r3, [fp, #-168]	; 0xffffff58
    a754:	cmp	r3, #21
    a758:	bls	a788 <read_grib2_message+0x698>
    a75c:	ldr	r3, [fp, #-168]	; 0xffffff58
    a760:	sub	r3, r3, #21
    a764:	mov	r0, r3
    a768:	mov	r1, #0
    a76c:	sub	r3, fp, #380	; 0x17c
    a770:	mov	ip, r3
    a774:	sub	r3, fp, #380	; 0x17c
    a778:	ldrd	r2, [r3, #-8]
    a77c:	adds	r6, r2, r0
    a780:	adc	r7, r3, r1
    a784:	strd	r6, [ip, #-8]
    a788:	ldr	r3, [fp, #-376]	; 0xfffffe88
    a78c:	ldr	r0, [r3, #52]	; 0x34
    a790:	sub	r3, fp, #380	; 0x17c
    a794:	mov	r1, r3
    a798:	sub	r3, fp, #296	; 0x128
    a79c:	str	r3, [sp, #8]
    a7a0:	mov	r2, #4
    a7a4:	mov	r3, #0
    a7a8:	strd	r2, [sp]
    a7ac:	ldrd	r2, [r1, #-8]
    a7b0:	bl	0 <read_bytes>
    a7b4:	mov	r3, r0
    a7b8:	cmp	r3, #0
    a7bc:	bge	a7c8 <read_grib2_message+0x6d8>
    a7c0:	mvn	r3, #0
    a7c4:	b	ca44 <read_grib2_message+0x2954>
    a7c8:	sub	r3, fp, #380	; 0x17c
    a7cc:	mov	r1, r3
    a7d0:	sub	r3, fp, #380	; 0x17c
    a7d4:	ldrd	r2, [r3, #-8]
    a7d8:	adds	r8, r2, #4
    a7dc:	adc	r9, r3, #0
    a7e0:	strd	r8, [r1, #-8]
    a7e4:	b	c9dc <read_grib2_message+0x28ec>
    a7e8:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    a7ec:	lsl	r2, r3, #8
    a7f0:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    a7f4:	add	r3, r2, r3
    a7f8:	lsl	r2, r3, #8
    a7fc:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    a800:	add	r3, r2, r3
    a804:	lsl	r2, r3, #8
    a808:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    a80c:	add	r3, r2, r3
    a810:	str	r3, [fp, #-168]	; 0xffffff58
    a814:	ldr	r3, [fp, #-376]	; 0xfffffe88
    a818:	ldr	r0, [r3, #52]	; 0x34
    a81c:	sub	r3, fp, #380	; 0x17c
    a820:	mov	r1, r3
    a824:	sub	r3, fp, #296	; 0x128
    a828:	str	r3, [sp, #8]
    a82c:	mov	r2, #1
    a830:	mov	r3, #0
    a834:	strd	r2, [sp]
    a838:	ldrd	r2, [r1, #-8]
    a83c:	bl	0 <read_bytes>
    a840:	mov	r3, r0
    a844:	cmp	r3, #0
    a848:	bge	a854 <read_grib2_message+0x764>
    a84c:	mvn	r3, #0
    a850:	b	ca44 <read_grib2_message+0x2954>
    a854:	sub	r3, fp, #380	; 0x17c
    a858:	mov	r1, r3
    a85c:	sub	r3, fp, #380	; 0x17c
    a860:	ldrd	r2, [r3, #-8]
    a864:	adds	r0, r2, #1
    a868:	str	r0, [fp, #-404]	; 0xfffffe6c
    a86c:	adc	r3, r3, #0
    a870:	str	r3, [fp, #-400]	; 0xfffffe70
    a874:	sub	r3, fp, #404	; 0x194
    a878:	ldrd	r2, [r3]
    a87c:	strd	r2, [r1, #-8]
    a880:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    a884:	cmp	r3, #2
    a888:	bne	aa24 <read_grib2_message+0x934>
    a88c:	ldrb	r3, [fp, #-137]	; 0xffffff77
    a890:	cmp	r3, #1
    a894:	beq	a8cc <read_grib2_message+0x7dc>
    a898:	ldrb	r3, [fp, #-137]	; 0xffffff77
    a89c:	cmp	r3, #7
    a8a0:	beq	a8cc <read_grib2_message+0x7dc>
    a8a4:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    a8a8:	sub	r2, r3, #48	; 0x30
    a8ac:	ldrb	r3, [fp, #-137]	; 0xffffff77
    a8b0:	movw	r1, #0
    a8b4:	movt	r1, #0
    a8b8:	movw	r0, #65236	; 0xfed4
    a8bc:	movt	r0, #65535	; 0xffff
    a8c0:	bl	0 <coda_set_error>
    a8c4:	mvn	r3, #0
    a8c8:	b	ca44 <read_grib2_message+0x2954>
    a8cc:	ldr	r3, [fp, #-168]	; 0xffffff58
    a8d0:	cmp	r3, #5
    a8d4:	bls	aa18 <read_grib2_message+0x928>
    a8d8:	ldr	r3, [fp, #-168]	; 0xffffff58
    a8dc:	sub	r3, r3, #5
    a8e0:	mov	r0, r3
    a8e4:	bl	0 <malloc>
    a8e8:	mov	r3, r0
    a8ec:	str	r3, [fp, #-192]	; 0xffffff40
    a8f0:	ldr	r3, [fp, #-192]	; 0xffffff40
    a8f4:	cmp	r3, #0
    a8f8:	bne	a930 <read_grib2_message+0x840>
    a8fc:	ldr	r3, [fp, #-168]	; 0xffffff58
    a900:	sub	r3, r3, #5
    a904:	mov	r2, r3
    a908:	movw	r3, #2332	; 0x91c
    a90c:	str	r3, [sp]
    a910:	movw	r3, #0
    a914:	movt	r3, #0
    a918:	movw	r1, #0
    a91c:	movt	r1, #0
    a920:	mvn	r0, #0
    a924:	bl	0 <coda_set_error>
    a928:	mvn	r3, #0
    a92c:	b	ca44 <read_grib2_message+0x2954>
    a930:	ldr	r3, [fp, #-376]	; 0xfffffe88
    a934:	ldr	ip, [r3, #52]	; 0x34
    a938:	ldr	r3, [fp, #-168]	; 0xffffff58
    a93c:	sub	r3, r3, #5
    a940:	mov	r0, r3
    a944:	mov	r1, #0
    a948:	sub	r3, fp, #380	; 0x17c
    a94c:	mov	r2, r3
    a950:	ldr	r3, [fp, #-192]	; 0xffffff40
    a954:	str	r3, [sp, #8]
    a958:	strd	r0, [sp]
    a95c:	ldrd	r2, [r2, #-8]
    a960:	mov	r0, ip
    a964:	bl	0 <read_bytes>
    a968:	mov	r3, r0
    a96c:	cmp	r3, #0
    a970:	bge	a984 <read_grib2_message+0x894>
    a974:	ldr	r0, [fp, #-192]	; 0xffffff40
    a978:	bl	0 <free>
    a97c:	mvn	r3, #0
    a980:	b	ca44 <read_grib2_message+0x2954>
    a984:	mrc	15, 0, r2, cr13, cr0, {3}
    a988:	ldr	r3, [pc, #2208]	; b230 <read_grib2_message+0x1140>
    a98c:	ldr	r3, [r2, r3]
    a990:	ldr	r3, [r3, #348]	; 0x15c
    a994:	str	r3, [fp, #-172]	; 0xffffff54
    a998:	ldr	r3, [fp, #-168]	; 0xffffff58
    a99c:	sub	r3, r3, #5
    a9a0:	mov	r2, r3
    a9a4:	ldr	r3, [fp, #-192]	; 0xffffff40
    a9a8:	str	r3, [sp]
    a9ac:	mov	r3, r2
    a9b0:	ldr	r2, [fp, #-164]	; 0xffffff5c
    a9b4:	mov	r1, #0
    a9b8:	ldr	r0, [fp, #-172]	; 0xffffff54
    a9bc:	bl	0 <coda_mem_raw_new>
    a9c0:	str	r0, [fp, #-176]	; 0xffffff50
    a9c4:	ldr	r1, [fp, #-176]	; 0xffffff50
    a9c8:	ldr	r0, [fp, #-180]	; 0xffffff4c
    a9cc:	bl	0 <coda_mem_array_add_element>
    a9d0:	ldr	r3, [fp, #-168]	; 0xffffff58
    a9d4:	sub	r3, r3, #5
    a9d8:	mov	r0, r3
    a9dc:	mov	r1, #0
    a9e0:	sub	r3, fp, #380	; 0x17c
    a9e4:	mov	ip, r3
    a9e8:	sub	r3, fp, #380	; 0x17c
    a9ec:	ldrd	r2, [r3, #-8]
    a9f0:	adds	lr, r2, r0
    a9f4:	str	lr, [fp, #-412]	; 0xfffffe64
    a9f8:	adc	r3, r3, r1
    a9fc:	str	r3, [fp, #-408]	; 0xfffffe68
    aa00:	sub	r3, fp, #412	; 0x19c
    aa04:	ldrd	r2, [r3]
    aa08:	strd	r2, [ip, #-8]
    aa0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    aa10:	add	r3, r3, #1
    aa14:	str	r3, [fp, #-56]	; 0xffffffc8
    aa18:	mov	r3, #2
    aa1c:	strb	r3, [fp, #-137]	; 0xffffff77
    aa20:	b	c970 <read_grib2_message+0x2880>
    aa24:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    aa28:	cmp	r3, #3
    aa2c:	bne	b8f8 <read_grib2_message+0x1808>
    aa30:	ldrb	r3, [fp, #-137]	; 0xffffff77
    aa34:	cmp	r3, #1
    aa38:	beq	aa7c <read_grib2_message+0x98c>
    aa3c:	ldrb	r3, [fp, #-137]	; 0xffffff77
    aa40:	cmp	r3, #2
    aa44:	beq	aa7c <read_grib2_message+0x98c>
    aa48:	ldrb	r3, [fp, #-137]	; 0xffffff77
    aa4c:	cmp	r3, #7
    aa50:	beq	aa7c <read_grib2_message+0x98c>
    aa54:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    aa58:	sub	r2, r3, #48	; 0x30
    aa5c:	ldrb	r3, [fp, #-137]	; 0xffffff77
    aa60:	movw	r1, #0
    aa64:	movt	r1, #0
    aa68:	movw	r0, #65236	; 0xfed4
    aa6c:	movt	r0, #65535	; 0xffff
    aa70:	bl	0 <coda_set_error>
    aa74:	mvn	r3, #0
    aa78:	b	ca44 <read_grib2_message+0x2954>
    aa7c:	ldr	r3, [fp, #-376]	; 0xfffffe88
    aa80:	ldr	r0, [r3, #52]	; 0x34
    aa84:	sub	r3, fp, #380	; 0x17c
    aa88:	mov	r1, r3
    aa8c:	sub	r3, fp, #296	; 0x128
    aa90:	str	r3, [sp, #8]
    aa94:	mov	r2, #9
    aa98:	mov	r3, #0
    aa9c:	strd	r2, [sp]
    aaa0:	ldrd	r2, [r1, #-8]
    aaa4:	bl	0 <read_bytes>
    aaa8:	mov	r3, r0
    aaac:	cmp	r3, #0
    aab0:	bge	aabc <read_grib2_message+0x9cc>
    aab4:	mvn	r3, #0
    aab8:	b	ca44 <read_grib2_message+0x2954>
    aabc:	mrc	15, 0, r2, cr13, cr0, {3}
    aac0:	ldr	r3, [pc, #1896]	; b230 <read_grib2_message+0x1140>
    aac4:	ldr	r3, [r2, r3]
    aac8:	add	r3, r3, #540	; 0x21c
    aacc:	ldr	r3, [r3]
    aad0:	mov	r1, #0
    aad4:	mov	r0, r3
    aad8:	bl	0 <coda_mem_record_new>
    aadc:	str	r0, [fp, #-196]	; 0xffffff3c
    aae0:	mrc	15, 0, r2, cr13, cr0, {3}
    aae4:	ldr	r3, [pc, #1860]	; b230 <read_grib2_message+0x1140>
    aae8:	ldr	r3, [r2, r3]
    aaec:	ldr	r3, [r3, #276]	; 0x114
    aaf0:	str	r3, [fp, #-172]	; 0xffffff54
    aaf4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    aaf8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    aafc:	mov	r1, #0
    ab00:	ldr	r0, [fp, #-172]	; 0xffffff54
    ab04:	bl	0 <coda_mem_int32_new>
    ab08:	str	r0, [fp, #-176]	; 0xffffff50
    ab0c:	mov	r3, #0
    ab10:	ldr	r2, [fp, #-176]	; 0xffffff50
    ab14:	movw	r1, #0
    ab18:	movt	r1, #0
    ab1c:	ldr	r0, [fp, #-196]	; 0xffffff3c
    ab20:	bl	0 <coda_mem_record_add_field>
    ab24:	mrc	15, 0, r2, cr13, cr0, {3}
    ab28:	ldr	r3, [pc, #1792]	; b230 <read_grib2_message+0x1140>
    ab2c:	ldr	r3, [r2, r3]
    ab30:	ldr	r3, [r3, #448]	; 0x1c0
    ab34:	str	r3, [fp, #-172]	; 0xffffff54
    ab38:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    ab3c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ab40:	mov	r1, #0
    ab44:	ldr	r0, [fp, #-172]	; 0xffffff54
    ab48:	bl	0 <coda_mem_uint8_new>
    ab4c:	str	r0, [fp, #-176]	; 0xffffff50
    ab50:	mov	r3, #0
    ab54:	ldr	r2, [fp, #-176]	; 0xffffff50
    ab58:	movw	r1, #0
    ab5c:	movt	r1, #0
    ab60:	ldr	r0, [fp, #-196]	; 0xffffff3c
    ab64:	bl	0 <coda_mem_record_add_field>
    ab68:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    ab6c:	lsl	r2, r3, #8
    ab70:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    ab74:	add	r3, r2, r3
    ab78:	lsl	r2, r3, #8
    ab7c:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    ab80:	add	r3, r2, r3
    ab84:	lsl	r2, r3, #8
    ab88:	ldrb	r3, [fp, #-292]	; 0xfffffedc
    ab8c:	add	r3, r2, r3
    ab90:	str	r3, [fp, #-200]	; 0xffffff38
    ab94:	mrc	15, 0, r2, cr13, cr0, {3}
    ab98:	ldr	r3, [pc, #1680]	; b230 <read_grib2_message+0x1140>
    ab9c:	ldr	r3, [r2, r3]
    aba0:	ldr	r3, [r3, #452]	; 0x1c4
    aba4:	str	r3, [fp, #-172]	; 0xffffff54
    aba8:	ldr	r3, [fp, #-200]	; 0xffffff38
    abac:	ldr	r2, [fp, #-164]	; 0xffffff5c
    abb0:	mov	r1, #0
    abb4:	ldr	r0, [fp, #-172]	; 0xffffff54
    abb8:	bl	0 <coda_mem_uint32_new>
    abbc:	str	r0, [fp, #-176]	; 0xffffff50
    abc0:	mov	r3, #0
    abc4:	ldr	r2, [fp, #-176]	; 0xffffff50
    abc8:	movw	r1, #0
    abcc:	movt	r1, #0
    abd0:	ldr	r0, [fp, #-196]	; 0xffffff3c
    abd4:	bl	0 <coda_mem_record_add_field>
    abd8:	ldrb	r3, [fp, #-291]	; 0xfffffedd
    abdc:	strb	r3, [fp, #-201]	; 0xffffff37
    abe0:	ldrb	r3, [fp, #-290]	; 0xfffffede
    abe4:	strb	r3, [fp, #-202]	; 0xffffff36
    abe8:	mrc	15, 0, r2, cr13, cr0, {3}
    abec:	ldr	r3, [pc, #1596]	; b230 <read_grib2_message+0x1140>
    abf0:	ldr	r3, [r2, r3]
    abf4:	ldr	r3, [r3, #456]	; 0x1c8
    abf8:	str	r3, [fp, #-172]	; 0xffffff54
    abfc:	ldrb	r3, [fp, #-202]	; 0xffffff36
    ac00:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ac04:	mov	r1, #0
    ac08:	ldr	r0, [fp, #-172]	; 0xffffff54
    ac0c:	bl	0 <coda_mem_uint8_new>
    ac10:	str	r0, [fp, #-176]	; 0xffffff50
    ac14:	mov	r3, #0
    ac18:	ldr	r2, [fp, #-176]	; 0xffffff50
    ac1c:	movw	r1, #0
    ac20:	movt	r1, #0
    ac24:	ldr	r0, [fp, #-196]	; 0xffffff3c
    ac28:	bl	0 <coda_mem_record_add_field>
    ac2c:	ldrb	r3, [fp, #-289]	; 0xfffffedf
    ac30:	uxth	r3, r3
    ac34:	lsl	r3, r3, #8
    ac38:	uxth	r2, r3
    ac3c:	ldrb	r3, [fp, #-288]	; 0xfffffee0
    ac40:	uxth	r3, r3
    ac44:	add	r3, r2, r3
    ac48:	strh	r3, [fp, #-204]	; 0xffffff34
    ac4c:	mrc	15, 0, r2, cr13, cr0, {3}
    ac50:	ldr	r3, [pc, #1496]	; b230 <read_grib2_message+0x1140>
    ac54:	ldr	r3, [r2, r3]
    ac58:	ldr	r3, [r3, #520]	; 0x208
    ac5c:	str	r3, [fp, #-172]	; 0xffffff54
    ac60:	ldrh	r3, [fp, #-204]	; 0xffffff34
    ac64:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ac68:	mov	r1, #0
    ac6c:	ldr	r0, [fp, #-172]	; 0xffffff54
    ac70:	bl	0 <coda_mem_uint16_new>
    ac74:	str	r0, [fp, #-176]	; 0xffffff50
    ac78:	mov	r3, #0
    ac7c:	ldr	r2, [fp, #-176]	; 0xffffff50
    ac80:	movw	r1, #0
    ac84:	movt	r1, #0
    ac88:	ldr	r0, [fp, #-196]	; 0xffffff3c
    ac8c:	bl	0 <coda_mem_record_add_field>
    ac90:	sub	r3, fp, #380	; 0x17c
    ac94:	mov	r1, r3
    ac98:	sub	r3, fp, #380	; 0x17c
    ac9c:	ldrd	r2, [r3, #-8]
    aca0:	adds	r0, r2, #9
    aca4:	str	r0, [fp, #-420]	; 0xfffffe5c
    aca8:	adc	r3, r3, #0
    acac:	str	r3, [fp, #-416]	; 0xfffffe60
    acb0:	sub	r3, fp, #420	; 0x1a4
    acb4:	ldrd	r2, [r3]
    acb8:	strd	r2, [r1, #-8]
    acbc:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    acc0:	cmp	r3, #0
    acc4:	bne	b8a0 <read_grib2_message+0x17b0>
    acc8:	ldrh	r3, [fp, #-204]	; 0xffffff34
    accc:	cmp	r3, #3
    acd0:	bls	acec <read_grib2_message+0xbfc>
    acd4:	ldrh	r3, [fp, #-204]	; 0xffffff34
    acd8:	cmp	r3, #39	; 0x27
    acdc:	bls	b8a0 <read_grib2_message+0x17b0>
    ace0:	ldrh	r3, [fp, #-204]	; 0xffffff34
    ace4:	cmp	r3, #43	; 0x2b
    ace8:	bhi	b8a0 <read_grib2_message+0x17b0>
    acec:	ldr	r3, [fp, #-376]	; 0xfffffe88
    acf0:	ldr	r0, [r3, #52]	; 0x34
    acf4:	sub	r3, fp, #380	; 0x17c
    acf8:	mov	r1, r3
    acfc:	sub	r3, fp, #296	; 0x128
    ad00:	str	r3, [sp, #8]
    ad04:	mov	r2, #58	; 0x3a
    ad08:	mov	r3, #0
    ad0c:	strd	r2, [sp]
    ad10:	ldrd	r2, [r1, #-8]
    ad14:	bl	0 <read_bytes>
    ad18:	mov	r3, r0
    ad1c:	cmp	r3, #0
    ad20:	bge	ad34 <read_grib2_message+0xc44>
    ad24:	ldr	r0, [fp, #-196]	; 0xffffff3c
    ad28:	bl	0 <coda_dynamic_type_delete>
    ad2c:	mvn	r3, #0
    ad30:	b	ca44 <read_grib2_message+0x2954>
    ad34:	mrc	15, 0, r2, cr13, cr0, {3}
    ad38:	ldr	r3, [pc, #1264]	; b230 <read_grib2_message+0x1140>
    ad3c:	ldr	r3, [r2, r3]
    ad40:	ldr	r3, [r3, #360]	; 0x168
    ad44:	str	r3, [fp, #-172]	; 0xffffff54
    ad48:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    ad4c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ad50:	mov	r1, #0
    ad54:	ldr	r0, [fp, #-172]	; 0xffffff54
    ad58:	bl	0 <coda_mem_uint8_new>
    ad5c:	str	r0, [fp, #-176]	; 0xffffff50
    ad60:	mov	r3, #0
    ad64:	ldr	r2, [fp, #-176]	; 0xffffff50
    ad68:	movw	r1, #0
    ad6c:	movt	r1, #0
    ad70:	ldr	r0, [fp, #-196]	; 0xffffff3c
    ad74:	bl	0 <coda_mem_record_add_field>
    ad78:	mrc	15, 0, r2, cr13, cr0, {3}
    ad7c:	ldr	r3, [pc, #1196]	; b230 <read_grib2_message+0x1140>
    ad80:	ldr	r3, [r2, r3]
    ad84:	ldr	r3, [r3, #364]	; 0x16c
    ad88:	str	r3, [fp, #-172]	; 0xffffff54
    ad8c:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    ad90:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ad94:	mov	r1, #0
    ad98:	ldr	r0, [fp, #-172]	; 0xffffff54
    ad9c:	bl	0 <coda_mem_uint8_new>
    ada0:	str	r0, [fp, #-176]	; 0xffffff50
    ada4:	mov	r3, #0
    ada8:	ldr	r2, [fp, #-176]	; 0xffffff50
    adac:	movw	r1, #0
    adb0:	movt	r1, #0
    adb4:	ldr	r0, [fp, #-196]	; 0xffffff3c
    adb8:	bl	0 <coda_mem_record_add_field>
    adbc:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    adc0:	lsl	r2, r3, #8
    adc4:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    adc8:	add	r3, r2, r3
    adcc:	lsl	r2, r3, #8
    add0:	ldrb	r3, [fp, #-292]	; 0xfffffedc
    add4:	add	r3, r2, r3
    add8:	lsl	r2, r3, #8
    addc:	ldrb	r3, [fp, #-291]	; 0xfffffedd
    ade0:	add	r3, r2, r3
    ade4:	str	r3, [fp, #-208]	; 0xffffff30
    ade8:	mrc	15, 0, r2, cr13, cr0, {3}
    adec:	ldr	r3, [pc, #1084]	; b230 <read_grib2_message+0x1140>
    adf0:	ldr	r3, [r2, r3]
    adf4:	ldr	r3, [r3, #368]	; 0x170
    adf8:	str	r3, [fp, #-172]	; 0xffffff54
    adfc:	ldr	r3, [fp, #-208]	; 0xffffff30
    ae00:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ae04:	mov	r1, #0
    ae08:	ldr	r0, [fp, #-172]	; 0xffffff54
    ae0c:	bl	0 <coda_mem_uint32_new>
    ae10:	str	r0, [fp, #-176]	; 0xffffff50
    ae14:	mov	r3, #0
    ae18:	ldr	r2, [fp, #-176]	; 0xffffff50
    ae1c:	movw	r1, #0
    ae20:	movt	r1, #0
    ae24:	ldr	r0, [fp, #-196]	; 0xffffff3c
    ae28:	bl	0 <coda_mem_record_add_field>
    ae2c:	mrc	15, 0, r2, cr13, cr0, {3}
    ae30:	ldr	r3, [pc, #1016]	; b230 <read_grib2_message+0x1140>
    ae34:	ldr	r3, [r2, r3]
    ae38:	ldr	r3, [r3, #372]	; 0x174
    ae3c:	str	r3, [fp, #-172]	; 0xffffff54
    ae40:	ldrb	r3, [fp, #-290]	; 0xfffffede
    ae44:	ldr	r2, [fp, #-164]	; 0xffffff5c
    ae48:	mov	r1, #0
    ae4c:	ldr	r0, [fp, #-172]	; 0xffffff54
    ae50:	bl	0 <coda_mem_uint8_new>
    ae54:	str	r0, [fp, #-176]	; 0xffffff50
    ae58:	mov	r3, #0
    ae5c:	ldr	r2, [fp, #-176]	; 0xffffff50
    ae60:	movw	r1, #0
    ae64:	movt	r1, #0
    ae68:	ldr	r0, [fp, #-196]	; 0xffffff3c
    ae6c:	bl	0 <coda_mem_record_add_field>
    ae70:	ldrb	r3, [fp, #-289]	; 0xfffffedf
    ae74:	lsl	r2, r3, #8
    ae78:	ldrb	r3, [fp, #-288]	; 0xfffffee0
    ae7c:	add	r3, r2, r3
    ae80:	lsl	r2, r3, #8
    ae84:	ldrb	r3, [fp, #-287]	; 0xfffffee1
    ae88:	add	r3, r2, r3
    ae8c:	lsl	r2, r3, #8
    ae90:	ldrb	r3, [fp, #-286]	; 0xfffffee2
    ae94:	add	r3, r2, r3
    ae98:	str	r3, [fp, #-208]	; 0xffffff30
    ae9c:	mrc	15, 0, r2, cr13, cr0, {3}
    aea0:	ldr	r3, [pc, #904]	; b230 <read_grib2_message+0x1140>
    aea4:	ldr	r3, [r2, r3]
    aea8:	ldr	r3, [r3, #376]	; 0x178
    aeac:	str	r3, [fp, #-172]	; 0xffffff54
    aeb0:	ldr	r3, [fp, #-208]	; 0xffffff30
    aeb4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    aeb8:	mov	r1, #0
    aebc:	ldr	r0, [fp, #-172]	; 0xffffff54
    aec0:	bl	0 <coda_mem_uint32_new>
    aec4:	str	r0, [fp, #-176]	; 0xffffff50
    aec8:	mov	r3, #0
    aecc:	ldr	r2, [fp, #-176]	; 0xffffff50
    aed0:	movw	r1, #0
    aed4:	movt	r1, #0
    aed8:	ldr	r0, [fp, #-196]	; 0xffffff3c
    aedc:	bl	0 <coda_mem_record_add_field>
    aee0:	mrc	15, 0, r2, cr13, cr0, {3}
    aee4:	ldr	r3, [pc, #836]	; b230 <read_grib2_message+0x1140>
    aee8:	ldr	r3, [r2, r3]
    aeec:	ldr	r3, [r3, #380]	; 0x17c
    aef0:	str	r3, [fp, #-172]	; 0xffffff54
    aef4:	ldrb	r3, [fp, #-285]	; 0xfffffee3
    aef8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    aefc:	mov	r1, #0
    af00:	ldr	r0, [fp, #-172]	; 0xffffff54
    af04:	bl	0 <coda_mem_uint8_new>
    af08:	str	r0, [fp, #-176]	; 0xffffff50
    af0c:	mov	r3, #0
    af10:	ldr	r2, [fp, #-176]	; 0xffffff50
    af14:	movw	r1, #0
    af18:	movt	r1, #0
    af1c:	ldr	r0, [fp, #-196]	; 0xffffff3c
    af20:	bl	0 <coda_mem_record_add_field>
    af24:	ldrb	r3, [fp, #-284]	; 0xfffffee4
    af28:	lsl	r2, r3, #8
    af2c:	ldrb	r3, [fp, #-283]	; 0xfffffee5
    af30:	add	r3, r2, r3
    af34:	lsl	r2, r3, #8
    af38:	ldrb	r3, [fp, #-282]	; 0xfffffee6
    af3c:	add	r3, r2, r3
    af40:	lsl	r2, r3, #8
    af44:	ldrb	r3, [fp, #-281]	; 0xfffffee7
    af48:	add	r3, r2, r3
    af4c:	str	r3, [fp, #-208]	; 0xffffff30
    af50:	mrc	15, 0, r2, cr13, cr0, {3}
    af54:	ldr	r3, [pc, #724]	; b230 <read_grib2_message+0x1140>
    af58:	ldr	r3, [r2, r3]
    af5c:	ldr	r3, [r3, #384]	; 0x180
    af60:	str	r3, [fp, #-172]	; 0xffffff54
    af64:	ldr	r3, [fp, #-208]	; 0xffffff30
    af68:	ldr	r2, [fp, #-164]	; 0xffffff5c
    af6c:	mov	r1, #0
    af70:	ldr	r0, [fp, #-172]	; 0xffffff54
    af74:	bl	0 <coda_mem_uint32_new>
    af78:	str	r0, [fp, #-176]	; 0xffffff50
    af7c:	mov	r3, #0
    af80:	ldr	r2, [fp, #-176]	; 0xffffff50
    af84:	movw	r1, #0
    af88:	movt	r1, #0
    af8c:	ldr	r0, [fp, #-196]	; 0xffffff3c
    af90:	bl	0 <coda_mem_record_add_field>
    af94:	ldrb	r3, [fp, #-280]	; 0xfffffee8
    af98:	lsl	r2, r3, #8
    af9c:	ldrb	r3, [fp, #-279]	; 0xfffffee9
    afa0:	add	r3, r2, r3
    afa4:	lsl	r2, r3, #8
    afa8:	ldrb	r3, [fp, #-278]	; 0xfffffeea
    afac:	add	r3, r2, r3
    afb0:	lsl	r2, r3, #8
    afb4:	ldrb	r3, [fp, #-277]	; 0xfffffeeb
    afb8:	add	r3, r2, r3
    afbc:	str	r3, [fp, #-212]	; 0xffffff2c
    afc0:	mrc	15, 0, r2, cr13, cr0, {3}
    afc4:	ldr	r3, [pc, #612]	; b230 <read_grib2_message+0x1140>
    afc8:	ldr	r3, [r2, r3]
    afcc:	ldr	r3, [r3, #388]	; 0x184
    afd0:	str	r3, [fp, #-172]	; 0xffffff54
    afd4:	ldr	r3, [fp, #-212]	; 0xffffff2c
    afd8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    afdc:	mov	r1, #0
    afe0:	ldr	r0, [fp, #-172]	; 0xffffff54
    afe4:	bl	0 <coda_mem_uint32_new>
    afe8:	str	r0, [fp, #-176]	; 0xffffff50
    afec:	mov	r3, #0
    aff0:	ldr	r2, [fp, #-176]	; 0xffffff50
    aff4:	movw	r1, #0
    aff8:	movt	r1, #0
    affc:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b000:	bl	0 <coda_mem_record_add_field>
    b004:	ldrb	r3, [fp, #-276]	; 0xfffffeec
    b008:	lsl	r2, r3, #8
    b00c:	ldrb	r3, [fp, #-275]	; 0xfffffeed
    b010:	add	r3, r2, r3
    b014:	lsl	r2, r3, #8
    b018:	ldrb	r3, [fp, #-274]	; 0xfffffeee
    b01c:	add	r3, r2, r3
    b020:	lsl	r2, r3, #8
    b024:	ldrb	r3, [fp, #-273]	; 0xfffffeef
    b028:	add	r3, r2, r3
    b02c:	str	r3, [fp, #-216]	; 0xffffff28
    b030:	mrc	15, 0, r2, cr13, cr0, {3}
    b034:	ldr	r3, [pc, #500]	; b230 <read_grib2_message+0x1140>
    b038:	ldr	r3, [r2, r3]
    b03c:	ldr	r3, [r3, #392]	; 0x188
    b040:	str	r3, [fp, #-172]	; 0xffffff54
    b044:	ldr	r3, [fp, #-216]	; 0xffffff28
    b048:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b04c:	mov	r1, #0
    b050:	ldr	r0, [fp, #-172]	; 0xffffff54
    b054:	bl	0 <coda_mem_uint32_new>
    b058:	str	r0, [fp, #-176]	; 0xffffff50
    b05c:	mov	r3, #0
    b060:	ldr	r2, [fp, #-176]	; 0xffffff50
    b064:	movw	r1, #0
    b068:	movt	r1, #0
    b06c:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b070:	bl	0 <coda_mem_record_add_field>
    b074:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    b078:	lsl	r2, r3, #8
    b07c:	ldrb	r3, [fp, #-271]	; 0xfffffef1
    b080:	add	r3, r2, r3
    b084:	lsl	r2, r3, #8
    b088:	ldrb	r3, [fp, #-270]	; 0xfffffef2
    b08c:	add	r3, r2, r3
    b090:	lsl	r2, r3, #8
    b094:	ldrb	r3, [fp, #-269]	; 0xfffffef3
    b098:	add	r3, r2, r3
    b09c:	str	r3, [fp, #-208]	; 0xffffff30
    b0a0:	mrc	15, 0, r2, cr13, cr0, {3}
    b0a4:	ldr	r3, [pc, #388]	; b230 <read_grib2_message+0x1140>
    b0a8:	ldr	r3, [r2, r3]
    b0ac:	ldr	r3, [r3, #396]	; 0x18c
    b0b0:	str	r3, [fp, #-172]	; 0xffffff54
    b0b4:	ldr	r3, [fp, #-208]	; 0xffffff30
    b0b8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b0bc:	mov	r1, #0
    b0c0:	ldr	r0, [fp, #-172]	; 0xffffff54
    b0c4:	bl	0 <coda_mem_uint32_new>
    b0c8:	str	r0, [fp, #-176]	; 0xffffff50
    b0cc:	mov	r3, #0
    b0d0:	ldr	r2, [fp, #-176]	; 0xffffff50
    b0d4:	movw	r1, #0
    b0d8:	movt	r1, #0
    b0dc:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b0e0:	bl	0 <coda_mem_record_add_field>
    b0e4:	ldrb	r3, [fp, #-268]	; 0xfffffef4
    b0e8:	lsl	r2, r3, #8
    b0ec:	ldrb	r3, [fp, #-267]	; 0xfffffef5
    b0f0:	add	r3, r2, r3
    b0f4:	lsl	r2, r3, #8
    b0f8:	ldrb	r3, [fp, #-266]	; 0xfffffef6
    b0fc:	add	r3, r2, r3
    b100:	lsl	r2, r3, #8
    b104:	ldrb	r3, [fp, #-265]	; 0xfffffef7
    b108:	add	r3, r2, r3
    b10c:	str	r3, [fp, #-208]	; 0xffffff30
    b110:	mrc	15, 0, r2, cr13, cr0, {3}
    b114:	ldr	r3, [pc, #276]	; b230 <read_grib2_message+0x1140>
    b118:	ldr	r3, [r2, r3]
    b11c:	ldr	r3, [r3, #400]	; 0x190
    b120:	str	r3, [fp, #-172]	; 0xffffff54
    b124:	ldr	r3, [fp, #-208]	; 0xffffff30
    b128:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b12c:	mov	r1, #0
    b130:	ldr	r0, [fp, #-172]	; 0xffffff54
    b134:	bl	0 <coda_mem_uint32_new>
    b138:	str	r0, [fp, #-176]	; 0xffffff50
    b13c:	mov	r3, #0
    b140:	ldr	r2, [fp, #-176]	; 0xffffff50
    b144:	movw	r1, #0
    b148:	movt	r1, #0
    b14c:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b150:	bl	0 <coda_mem_record_add_field>
    b154:	ldrb	r3, [fp, #-264]	; 0xfffffef8
    b158:	lsl	r2, r3, #8
    b15c:	ldrb	r3, [fp, #-263]	; 0xfffffef9
    b160:	add	r3, r2, r3
    b164:	lsl	r2, r3, #8
    b168:	ldrb	r3, [fp, #-262]	; 0xfffffefa
    b16c:	add	r3, r2, r3
    b170:	lsl	r2, r3, #8
    b174:	ldrb	r3, [fp, #-261]	; 0xfffffefb
    b178:	add	r3, r2, r3
    b17c:	str	r3, [fp, #-208]	; 0xffffff30
    b180:	ldrb	r3, [fp, #-264]	; 0xfffffef8
    b184:	sxtb	r3, r3
    b188:	cmp	r3, #0
    b18c:	bge	b19c <read_grib2_message+0x10ac>
    b190:	ldr	r3, [fp, #-208]	; 0xffffff30
    b194:	rsb	r3, r3, #-2147483648	; 0x80000000
    b198:	b	b1a0 <read_grib2_message+0x10b0>
    b19c:	ldr	r3, [fp, #-208]	; 0xffffff30
    b1a0:	str	r3, [fp, #-208]	; 0xffffff30
    b1a4:	mrc	15, 0, r2, cr13, cr0, {3}
    b1a8:	ldr	r3, [pc, #128]	; b230 <read_grib2_message+0x1140>
    b1ac:	ldr	r3, [r2, r3]
    b1b0:	ldr	r3, [r3, #404]	; 0x194
    b1b4:	str	r3, [fp, #-172]	; 0xffffff54
    b1b8:	ldr	r3, [fp, #-208]	; 0xffffff30
    b1bc:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b1c0:	mov	r1, #0
    b1c4:	ldr	r0, [fp, #-172]	; 0xffffff54
    b1c8:	bl	0 <coda_mem_int32_new>
    b1cc:	str	r0, [fp, #-176]	; 0xffffff50
    b1d0:	mov	r3, #0
    b1d4:	ldr	r2, [fp, #-176]	; 0xffffff50
    b1d8:	movw	r1, #0
    b1dc:	movt	r1, #0
    b1e0:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b1e4:	bl	0 <coda_mem_record_add_field>
    b1e8:	ldrb	r3, [fp, #-260]	; 0xfffffefc
    b1ec:	lsl	r2, r3, #8
    b1f0:	ldrb	r3, [fp, #-259]	; 0xfffffefd
    b1f4:	add	r3, r2, r3
    b1f8:	lsl	r2, r3, #8
    b1fc:	ldrb	r3, [fp, #-258]	; 0xfffffefe
    b200:	add	r3, r2, r3
    b204:	lsl	r2, r3, #8
    b208:	ldrb	r3, [fp, #-257]	; 0xfffffeff
    b20c:	add	r3, r2, r3
    b210:	str	r3, [fp, #-208]	; 0xffffff30
    b214:	ldrb	r3, [fp, #-260]	; 0xfffffefc
    b218:	sxtb	r3, r3
    b21c:	cmp	r3, #0
    b220:	bge	b234 <read_grib2_message+0x1144>
    b224:	ldr	r3, [fp, #-208]	; 0xffffff30
    b228:	rsb	r3, r3, #-2147483648	; 0x80000000
    b22c:	b	b238 <read_grib2_message+0x1148>
    b230:	.word	0x00000000
    b234:	ldr	r3, [fp, #-208]	; 0xffffff30
    b238:	str	r3, [fp, #-208]	; 0xffffff30
    b23c:	mrc	15, 0, r2, cr13, cr0, {3}
    b240:	ldr	r3, [pc, #-24]	; b230 <read_grib2_message+0x1140>
    b244:	ldr	r3, [r2, r3]
    b248:	ldr	r3, [r3, #408]	; 0x198
    b24c:	str	r3, [fp, #-172]	; 0xffffff54
    b250:	ldr	r3, [fp, #-208]	; 0xffffff30
    b254:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b258:	mov	r1, #0
    b25c:	ldr	r0, [fp, #-172]	; 0xffffff54
    b260:	bl	0 <coda_mem_int32_new>
    b264:	str	r0, [fp, #-176]	; 0xffffff50
    b268:	mov	r3, #0
    b26c:	ldr	r2, [fp, #-176]	; 0xffffff50
    b270:	movw	r1, #0
    b274:	movt	r1, #0
    b278:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b27c:	bl	0 <coda_mem_record_add_field>
    b280:	mrc	15, 0, r2, cr13, cr0, {3}
    b284:	ldr	r3, [pc, #-92]	; b230 <read_grib2_message+0x1140>
    b288:	ldr	r3, [r2, r3]
    b28c:	ldr	r3, [r3, #412]	; 0x19c
    b290:	str	r3, [fp, #-172]	; 0xffffff54
    b294:	ldrb	r3, [fp, #-256]	; 0xffffff00
    b298:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b29c:	mov	r1, #0
    b2a0:	ldr	r0, [fp, #-172]	; 0xffffff54
    b2a4:	bl	0 <coda_mem_uint8_new>
    b2a8:	str	r0, [fp, #-176]	; 0xffffff50
    b2ac:	mov	r3, #0
    b2b0:	ldr	r2, [fp, #-176]	; 0xffffff50
    b2b4:	movw	r1, #0
    b2b8:	movt	r1, #0
    b2bc:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b2c0:	bl	0 <coda_mem_record_add_field>
    b2c4:	ldrb	r3, [fp, #-255]	; 0xffffff01
    b2c8:	lsl	r2, r3, #8
    b2cc:	ldrb	r3, [fp, #-254]	; 0xffffff02
    b2d0:	add	r3, r2, r3
    b2d4:	lsl	r2, r3, #8
    b2d8:	ldrb	r3, [fp, #-253]	; 0xffffff03
    b2dc:	add	r3, r2, r3
    b2e0:	lsl	r2, r3, #8
    b2e4:	ldrb	r3, [fp, #-252]	; 0xffffff04
    b2e8:	add	r3, r2, r3
    b2ec:	str	r3, [fp, #-208]	; 0xffffff30
    b2f0:	ldrb	r3, [fp, #-255]	; 0xffffff01
    b2f4:	sxtb	r3, r3
    b2f8:	cmp	r3, #0
    b2fc:	bge	b30c <read_grib2_message+0x121c>
    b300:	ldr	r3, [fp, #-208]	; 0xffffff30
    b304:	rsb	r3, r3, #-2147483648	; 0x80000000
    b308:	b	b310 <read_grib2_message+0x1220>
    b30c:	ldr	r3, [fp, #-208]	; 0xffffff30
    b310:	str	r3, [fp, #-208]	; 0xffffff30
    b314:	mrc	15, 0, r2, cr13, cr0, {3}
    b318:	ldr	r3, [pc, #-240]	; b230 <read_grib2_message+0x1140>
    b31c:	ldr	r3, [r2, r3]
    b320:	ldr	r3, [r3, #416]	; 0x1a0
    b324:	str	r3, [fp, #-172]	; 0xffffff54
    b328:	ldr	r3, [fp, #-208]	; 0xffffff30
    b32c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b330:	mov	r1, #0
    b334:	ldr	r0, [fp, #-172]	; 0xffffff54
    b338:	bl	0 <coda_mem_int32_new>
    b33c:	str	r0, [fp, #-176]	; 0xffffff50
    b340:	mov	r3, #0
    b344:	ldr	r2, [fp, #-176]	; 0xffffff50
    b348:	movw	r1, #0
    b34c:	movt	r1, #0
    b350:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b354:	bl	0 <coda_mem_record_add_field>
    b358:	ldrb	r3, [fp, #-251]	; 0xffffff05
    b35c:	lsl	r2, r3, #8
    b360:	ldrb	r3, [fp, #-250]	; 0xffffff06
    b364:	add	r3, r2, r3
    b368:	lsl	r2, r3, #8
    b36c:	ldrb	r3, [fp, #-249]	; 0xffffff07
    b370:	add	r3, r2, r3
    b374:	lsl	r2, r3, #8
    b378:	ldrb	r3, [fp, #-248]	; 0xffffff08
    b37c:	add	r3, r2, r3
    b380:	str	r3, [fp, #-208]	; 0xffffff30
    b384:	ldrb	r3, [fp, #-251]	; 0xffffff05
    b388:	sxtb	r3, r3
    b38c:	cmp	r3, #0
    b390:	bge	b3a0 <read_grib2_message+0x12b0>
    b394:	ldr	r3, [fp, #-208]	; 0xffffff30
    b398:	rsb	r3, r3, #-2147483648	; 0x80000000
    b39c:	b	b3a4 <read_grib2_message+0x12b4>
    b3a0:	ldr	r3, [fp, #-208]	; 0xffffff30
    b3a4:	str	r3, [fp, #-208]	; 0xffffff30
    b3a8:	mrc	15, 0, r2, cr13, cr0, {3}
    b3ac:	ldr	r3, [pc, #-388]	; b230 <read_grib2_message+0x1140>
    b3b0:	ldr	r3, [r2, r3]
    b3b4:	ldr	r3, [r3, #420]	; 0x1a4
    b3b8:	str	r3, [fp, #-172]	; 0xffffff54
    b3bc:	ldr	r3, [fp, #-208]	; 0xffffff30
    b3c0:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b3c4:	mov	r1, #0
    b3c8:	ldr	r0, [fp, #-172]	; 0xffffff54
    b3cc:	bl	0 <coda_mem_int32_new>
    b3d0:	str	r0, [fp, #-176]	; 0xffffff50
    b3d4:	mov	r3, #0
    b3d8:	ldr	r2, [fp, #-176]	; 0xffffff50
    b3dc:	movw	r1, #0
    b3e0:	movt	r1, #0
    b3e4:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b3e8:	bl	0 <coda_mem_record_add_field>
    b3ec:	ldrb	r3, [fp, #-247]	; 0xffffff09
    b3f0:	lsl	r2, r3, #8
    b3f4:	ldrb	r3, [fp, #-246]	; 0xffffff0a
    b3f8:	add	r3, r2, r3
    b3fc:	lsl	r2, r3, #8
    b400:	ldrb	r3, [fp, #-245]	; 0xffffff0b
    b404:	add	r3, r2, r3
    b408:	lsl	r2, r3, #8
    b40c:	ldrb	r3, [fp, #-244]	; 0xffffff0c
    b410:	add	r3, r2, r3
    b414:	str	r3, [fp, #-208]	; 0xffffff30
    b418:	mrc	15, 0, r2, cr13, cr0, {3}
    b41c:	ldr	r3, [pc, #-500]	; b230 <read_grib2_message+0x1140>
    b420:	ldr	r3, [r2, r3]
    b424:	ldr	r3, [r3, #424]	; 0x1a8
    b428:	str	r3, [fp, #-172]	; 0xffffff54
    b42c:	ldr	r3, [fp, #-208]	; 0xffffff30
    b430:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b434:	mov	r1, #0
    b438:	ldr	r0, [fp, #-172]	; 0xffffff54
    b43c:	bl	0 <coda_mem_uint32_new>
    b440:	str	r0, [fp, #-176]	; 0xffffff50
    b444:	mov	r3, #0
    b448:	ldr	r2, [fp, #-176]	; 0xffffff50
    b44c:	movw	r1, #0
    b450:	movt	r1, #0
    b454:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b458:	bl	0 <coda_mem_record_add_field>
    b45c:	ldrb	r3, [fp, #-243]	; 0xffffff0d
    b460:	lsl	r2, r3, #8
    b464:	ldrb	r3, [fp, #-242]	; 0xffffff0e
    b468:	add	r3, r2, r3
    b46c:	lsl	r2, r3, #8
    b470:	ldrb	r3, [fp, #-241]	; 0xffffff0f
    b474:	add	r3, r2, r3
    b478:	lsl	r2, r3, #8
    b47c:	ldrb	r3, [fp, #-240]	; 0xffffff10
    b480:	add	r3, r2, r3
    b484:	str	r3, [fp, #-208]	; 0xffffff30
    b488:	ldrh	r3, [fp, #-204]	; 0xffffff34
    b48c:	cmp	r3, #39	; 0x27
    b490:	bls	b4e8 <read_grib2_message+0x13f8>
    b494:	ldrh	r3, [fp, #-204]	; 0xffffff34
    b498:	cmp	r3, #43	; 0x2b
    b49c:	bhi	b4e8 <read_grib2_message+0x13f8>
    b4a0:	mrc	15, 0, r2, cr13, cr0, {3}
    b4a4:	ldr	r3, [pc, #-636]	; b230 <read_grib2_message+0x1140>
    b4a8:	ldr	r3, [r2, r3]
    b4ac:	ldr	r3, [r3, #432]	; 0x1b0
    b4b0:	str	r3, [fp, #-172]	; 0xffffff54
    b4b4:	ldr	r3, [fp, #-208]	; 0xffffff30
    b4b8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b4bc:	mov	r1, #0
    b4c0:	ldr	r0, [fp, #-172]	; 0xffffff54
    b4c4:	bl	0 <coda_mem_uint32_new>
    b4c8:	str	r0, [fp, #-176]	; 0xffffff50
    b4cc:	mov	r3, #0
    b4d0:	ldr	r2, [fp, #-176]	; 0xffffff50
    b4d4:	movw	r1, #0
    b4d8:	movt	r1, #0
    b4dc:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b4e0:	bl	0 <coda_mem_record_add_field>
    b4e4:	b	b52c <read_grib2_message+0x143c>
    b4e8:	mrc	15, 0, r2, cr13, cr0, {3}
    b4ec:	ldr	r3, [pc, #-708]	; b230 <read_grib2_message+0x1140>
    b4f0:	ldr	r3, [r2, r3]
    b4f4:	ldr	r3, [r3, #428]	; 0x1ac
    b4f8:	str	r3, [fp, #-172]	; 0xffffff54
    b4fc:	ldr	r3, [fp, #-208]	; 0xffffff30
    b500:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b504:	mov	r1, #0
    b508:	ldr	r0, [fp, #-172]	; 0xffffff54
    b50c:	bl	0 <coda_mem_uint32_new>
    b510:	str	r0, [fp, #-176]	; 0xffffff50
    b514:	mov	r3, #0
    b518:	ldr	r2, [fp, #-176]	; 0xffffff50
    b51c:	movw	r1, #0
    b520:	movt	r1, #0
    b524:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b528:	bl	0 <coda_mem_record_add_field>
    b52c:	mrc	15, 0, r2, cr13, cr0, {3}
    b530:	ldr	r3, [pc, #-776]	; b230 <read_grib2_message+0x1140>
    b534:	ldr	r3, [r2, r3]
    b538:	ldr	r3, [r3, #436]	; 0x1b4
    b53c:	str	r3, [fp, #-172]	; 0xffffff54
    b540:	ldrb	r3, [fp, #-239]	; 0xffffff11
    b544:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b548:	mov	r1, #0
    b54c:	ldr	r0, [fp, #-172]	; 0xffffff54
    b550:	bl	0 <coda_mem_uint8_new>
    b554:	str	r0, [fp, #-176]	; 0xffffff50
    b558:	mov	r3, #0
    b55c:	ldr	r2, [fp, #-176]	; 0xffffff50
    b560:	movw	r1, #0
    b564:	movt	r1, #0
    b568:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b56c:	bl	0 <coda_mem_record_add_field>
    b570:	sub	r3, fp, #380	; 0x17c
    b574:	mov	r1, r3
    b578:	sub	r3, fp, #380	; 0x17c
    b57c:	ldrd	r2, [r3, #-8]
    b580:	adds	r0, r2, #58	; 0x3a
    b584:	str	r0, [fp, #-428]	; 0xfffffe54
    b588:	adc	r3, r3, #0
    b58c:	str	r3, [fp, #-424]	; 0xfffffe58
    b590:	sub	r3, fp, #428	; 0x1ac
    b594:	ldrd	r2, [r3]
    b598:	strd	r2, [r1, #-8]
    b59c:	ldrb	r3, [fp, #-202]	; 0xffffff36
    b5a0:	cmp	r3, #0
    b5a4:	beq	b818 <read_grib2_message+0x1728>
    b5a8:	ldr	r3, [fp, #-212]	; 0xffffff2c
    b5ac:	cmn	r3, #1
    b5b0:	bne	b5c0 <read_grib2_message+0x14d0>
    b5b4:	ldr	r3, [fp, #-216]	; 0xffffff28
    b5b8:	str	r3, [fp, #-144]	; 0xffffff70
    b5bc:	b	b5f4 <read_grib2_message+0x1504>
    b5c0:	ldr	r3, [fp, #-216]	; 0xffffff28
    b5c4:	cmn	r3, #1
    b5c8:	bne	b5d8 <read_grib2_message+0x14e8>
    b5cc:	ldr	r3, [fp, #-212]	; 0xffffff2c
    b5d0:	str	r3, [fp, #-144]	; 0xffffff70
    b5d4:	b	b5f4 <read_grib2_message+0x1504>
    b5d8:	movw	r1, #0
    b5dc:	movt	r1, #0
    b5e0:	movw	r0, #65236	; 0xfed4
    b5e4:	movt	r0, #65535	; 0xffff
    b5e8:	bl	0 <coda_set_error>
    b5ec:	mvn	r3, #0
    b5f0:	b	ca44 <read_grib2_message+0x2954>
    b5f4:	ldr	r3, [fp, #-168]	; 0xffffff58
    b5f8:	sub	r1, r3, #72	; 0x48
    b5fc:	ldrb	r2, [fp, #-201]	; 0xffffff37
    b600:	ldr	r3, [fp, #-144]	; 0xffffff70
    b604:	mul	r3, r3, r2
    b608:	cmp	r1, r3
    b60c:	beq	b650 <read_grib2_message+0x1560>
    b610:	ldr	r3, [fp, #-168]	; 0xffffff58
    b614:	sub	r3, r3, #72	; 0x48
    b618:	mov	r1, r3
    b61c:	ldrb	r3, [fp, #-201]	; 0xffffff37
    b620:	ldr	r2, [fp, #-144]	; 0xffffff70
    b624:	mul	r3, r2, r3
    b628:	mov	r2, r1
    b62c:	movw	r1, #0
    b630:	movt	r1, #0
    b634:	movw	r0, #65236	; 0xfed4
    b638:	movt	r0, #65535	; 0xffff
    b63c:	bl	0 <coda_set_error>
    b640:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b644:	bl	0 <coda_dynamic_type_delete>
    b648:	mvn	r3, #0
    b64c:	b	ca44 <read_grib2_message+0x2954>
    b650:	mrc	15, 0, r2, cr13, cr0, {3}
    b654:	ldr	r3, [pc, #-1068]	; b230 <read_grib2_message+0x1140>
    b658:	ldr	r3, [r2, r3]
    b65c:	ldr	r3, [r3, #444]	; 0x1bc
    b660:	str	r3, [fp, #-172]	; 0xffffff54
    b664:	mov	r1, #0
    b668:	ldr	r0, [fp, #-172]	; 0xffffff54
    b66c:	bl	0 <coda_mem_array_new>
    b670:	str	r0, [fp, #-220]	; 0xffffff24
    b674:	mov	r3, #0
    b678:	str	r3, [fp, #-148]	; 0xffffff6c
    b67c:	b	b7ec <read_grib2_message+0x16fc>
    b680:	ldr	r3, [fp, #-376]	; 0xfffffe88
    b684:	ldr	r0, [r3, #52]	; 0x34
    b688:	sub	r3, fp, #380	; 0x17c
    b68c:	mov	r1, r3
    b690:	sub	r3, fp, #296	; 0x128
    b694:	str	r3, [sp, #8]
    b698:	mov	r2, #2
    b69c:	mov	r3, #0
    b6a0:	strd	r2, [sp]
    b6a4:	ldrd	r2, [r1, #-8]
    b6a8:	bl	0 <read_bytes>
    b6ac:	mov	r3, r0
    b6b0:	cmp	r3, #0
    b6b4:	bge	b6d0 <read_grib2_message+0x15e0>
    b6b8:	ldr	r0, [fp, #-220]	; 0xffffff24
    b6bc:	bl	0 <coda_dynamic_type_delete>
    b6c0:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b6c4:	bl	0 <coda_dynamic_type_delete>
    b6c8:	mvn	r3, #0
    b6cc:	b	ca44 <read_grib2_message+0x2954>
    b6d0:	ldrb	r3, [fp, #-201]	; 0xffffff37
    b6d4:	cmp	r3, #2
    b6d8:	beq	b6f8 <read_grib2_message+0x1608>
    b6dc:	cmp	r3, #4
    b6e0:	beq	b710 <read_grib2_message+0x1620>
    b6e4:	cmp	r3, #1
    b6e8:	bne	b740 <read_grib2_message+0x1650>
    b6ec:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    b6f0:	str	r3, [fp, #-152]	; 0xffffff68
    b6f4:	b	b774 <read_grib2_message+0x1684>
    b6f8:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    b6fc:	lsl	r2, r3, #8
    b700:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    b704:	add	r3, r2, r3
    b708:	str	r3, [fp, #-152]	; 0xffffff68
    b70c:	b	b774 <read_grib2_message+0x1684>
    b710:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    b714:	lsl	r2, r3, #8
    b718:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    b71c:	add	r3, r2, r3
    b720:	lsl	r2, r3, #8
    b724:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    b728:	add	r3, r2, r3
    b72c:	lsl	r2, r3, #8
    b730:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    b734:	add	r3, r2, r3
    b738:	str	r3, [fp, #-152]	; 0xffffff68
    b73c:	b	b774 <read_grib2_message+0x1684>
    b740:	ldrb	r3, [fp, #-201]	; 0xffffff37
    b744:	mov	r2, r3
    b748:	movw	r1, #0
    b74c:	movt	r1, #0
    b750:	movw	r0, #65236	; 0xfed4
    b754:	movt	r0, #65535	; 0xffff
    b758:	bl	0 <coda_set_error>
    b75c:	ldr	r0, [fp, #-220]	; 0xffffff24
    b760:	bl	0 <coda_dynamic_type_delete>
    b764:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b768:	bl	0 <coda_dynamic_type_delete>
    b76c:	mvn	r3, #0
    b770:	b	ca44 <read_grib2_message+0x2954>
    b774:	mrc	15, 0, r2, cr13, cr0, {3}
    b778:	ldr	r3, [pc, #-1360]	; b230 <read_grib2_message+0x1140>
    b77c:	ldr	r3, [r2, r3]
    b780:	ldr	r3, [r3, #440]	; 0x1b8
    b784:	str	r3, [fp, #-172]	; 0xffffff54
    b788:	ldr	r3, [fp, #-152]	; 0xffffff68
    b78c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    b790:	mov	r1, #0
    b794:	ldr	r0, [fp, #-172]	; 0xffffff54
    b798:	bl	0 <coda_mem_uint32_new>
    b79c:	str	r0, [fp, #-176]	; 0xffffff50
    b7a0:	ldr	r1, [fp, #-176]	; 0xffffff50
    b7a4:	ldr	r0, [fp, #-220]	; 0xffffff24
    b7a8:	bl	0 <coda_mem_array_add_element>
    b7ac:	ldrb	r0, [fp, #-201]	; 0xffffff37
    b7b0:	mov	r1, #0
    b7b4:	sub	r3, fp, #380	; 0x17c
    b7b8:	mov	ip, r3
    b7bc:	sub	r3, fp, #380	; 0x17c
    b7c0:	ldrd	r2, [r3, #-8]
    b7c4:	adds	lr, r2, r0
    b7c8:	str	lr, [fp, #-436]	; 0xfffffe4c
    b7cc:	adc	r3, r3, r1
    b7d0:	str	r3, [fp, #-432]	; 0xfffffe50
    b7d4:	sub	r3, fp, #436	; 0x1b4
    b7d8:	ldrd	r2, [r3]
    b7dc:	strd	r2, [ip, #-8]
    b7e0:	ldr	r3, [fp, #-148]	; 0xffffff6c
    b7e4:	add	r3, r3, #1
    b7e8:	str	r3, [fp, #-148]	; 0xffffff6c
    b7ec:	ldr	r2, [fp, #-148]	; 0xffffff6c
    b7f0:	ldr	r3, [fp, #-144]	; 0xffffff70
    b7f4:	cmp	r2, r3
    b7f8:	blt	b680 <read_grib2_message+0x1590>
    b7fc:	mov	r3, #0
    b800:	ldr	r2, [fp, #-220]	; 0xffffff24
    b804:	movw	r1, #0
    b808:	movt	r1, #0
    b80c:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b810:	bl	0 <coda_mem_record_add_field>
    b814:	b	b8d0 <read_grib2_message+0x17e0>
    b818:	ldr	r3, [fp, #-212]	; 0xffffff2c
    b81c:	cmn	r3, #1
    b820:	beq	b830 <read_grib2_message+0x1740>
    b824:	ldr	r3, [fp, #-216]	; 0xffffff28
    b828:	cmn	r3, #1
    b82c:	bne	b854 <read_grib2_message+0x1764>
    b830:	movw	r1, #0
    b834:	movt	r1, #0
    b838:	movw	r0, #65236	; 0xfed4
    b83c:	movt	r0, #65535	; 0xffff
    b840:	bl	0 <coda_set_error>
    b844:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b848:	bl	0 <coda_dynamic_type_delete>
    b84c:	mvn	r3, #0
    b850:	b	ca44 <read_grib2_message+0x2954>
    b854:	ldr	r3, [fp, #-168]	; 0xffffff58
    b858:	cmp	r3, #72	; 0x48
    b85c:	bls	b8d0 <read_grib2_message+0x17e0>
    b860:	ldr	r3, [fp, #-168]	; 0xffffff58
    b864:	sub	r3, r3, #72	; 0x48
    b868:	mov	r0, r3
    b86c:	mov	r1, #0
    b870:	sub	r3, fp, #380	; 0x17c
    b874:	mov	ip, r3
    b878:	sub	r3, fp, #380	; 0x17c
    b87c:	ldrd	r2, [r3, #-8]
    b880:	adds	lr, r2, r0
    b884:	str	lr, [fp, #-444]	; 0xfffffe44
    b888:	adc	r3, r3, r1
    b88c:	str	r3, [fp, #-440]	; 0xfffffe48
    b890:	sub	r3, fp, #444	; 0x1bc
    b894:	ldrd	r2, [r3]
    b898:	strd	r2, [ip, #-8]
    b89c:	b	b8d0 <read_grib2_message+0x17e0>
    b8a0:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    b8a4:	mov	r2, r3
    b8a8:	ldrh	r3, [fp, #-204]	; 0xffffff34
    b8ac:	movw	r1, #0
    b8b0:	movt	r1, #0
    b8b4:	movw	r0, #65236	; 0xfed4
    b8b8:	movt	r0, #65535	; 0xffff
    b8bc:	bl	0 <coda_set_error>
    b8c0:	ldr	r0, [fp, #-196]	; 0xffffff3c
    b8c4:	bl	0 <coda_dynamic_type_delete>
    b8c8:	mvn	r3, #0
    b8cc:	b	ca44 <read_grib2_message+0x2954>
    b8d0:	nop	{0}
    b8d4:	ldr	r1, [fp, #-196]	; 0xffffff3c
    b8d8:	ldr	r0, [fp, #-184]	; 0xffffff48
    b8dc:	bl	0 <coda_mem_array_add_element>
    b8e0:	ldr	r3, [fp, #-60]	; 0xffffffc4
    b8e4:	add	r3, r3, #1
    b8e8:	str	r3, [fp, #-60]	; 0xffffffc4
    b8ec:	mov	r3, #3
    b8f0:	strb	r3, [fp, #-137]	; 0xffffff77
    b8f4:	b	c970 <read_grib2_message+0x2880>
    b8f8:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    b8fc:	cmp	r3, #4
    b900:	bne	bd38 <read_grib2_message+0x1c48>
    b904:	ldrb	r3, [fp, #-137]	; 0xffffff77
    b908:	cmp	r3, #3
    b90c:	beq	b944 <read_grib2_message+0x1854>
    b910:	ldrb	r3, [fp, #-137]	; 0xffffff77
    b914:	cmp	r3, #7
    b918:	beq	b944 <read_grib2_message+0x1854>
    b91c:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    b920:	sub	r2, r3, #48	; 0x30
    b924:	ldrb	r3, [fp, #-137]	; 0xffffff77
    b928:	movw	r1, #0
    b92c:	movt	r1, #0
    b930:	movw	r0, #65236	; 0xfed4
    b934:	movt	r0, #65535	; 0xffff
    b938:	bl	0 <coda_set_error>
    b93c:	mvn	r3, #0
    b940:	b	ca44 <read_grib2_message+0x2954>
    b944:	ldr	r3, [fp, #-376]	; 0xfffffe88
    b948:	ldr	r0, [r3, #52]	; 0x34
    b94c:	sub	r3, fp, #380	; 0x17c
    b950:	mov	r1, r3
    b954:	sub	r3, fp, #296	; 0x128
    b958:	str	r3, [sp, #8]
    b95c:	mov	r2, #4
    b960:	mov	r3, #0
    b964:	strd	r2, [sp]
    b968:	ldrd	r2, [r1, #-8]
    b96c:	bl	0 <read_bytes>
    b970:	mov	r3, r0
    b974:	cmp	r3, #0
    b978:	bge	b984 <read_grib2_message+0x1894>
    b97c:	mvn	r3, #0
    b980:	b	ca44 <read_grib2_message+0x2954>
    b984:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    b988:	uxth	r3, r3
    b98c:	lsl	r3, r3, #8
    b990:	uxth	r2, r3
    b994:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    b998:	uxth	r3, r3
    b99c:	add	r3, r2, r3
    b9a0:	strh	r3, [fp, #-62]	; 0xffffffc2
    b9a4:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    b9a8:	uxth	r3, r3
    b9ac:	lsl	r3, r3, #8
    b9b0:	uxth	r2, r3
    b9b4:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    b9b8:	uxth	r3, r3
    b9bc:	add	r3, r2, r3
    b9c0:	strh	r3, [fp, #-222]	; 0xffffff22
    b9c4:	sub	r3, fp, #380	; 0x17c
    b9c8:	mov	r1, r3
    b9cc:	sub	r3, fp, #380	; 0x17c
    b9d0:	ldrd	r2, [r3, #-8]
    b9d4:	adds	r0, r2, #4
    b9d8:	str	r0, [fp, #-452]	; 0xfffffe3c
    b9dc:	adc	r3, r3, #0
    b9e0:	str	r3, [fp, #-448]	; 0xfffffe40
    b9e4:	sub	r3, fp, #452	; 0x1c4
    b9e8:	ldrd	r2, [r3]
    b9ec:	strd	r2, [r1, #-8]
    b9f0:	ldrh	r3, [fp, #-222]	; 0xffffff22
    b9f4:	cmp	r3, #6
    b9f8:	bls	ba20 <read_grib2_message+0x1930>
    b9fc:	ldrh	r3, [fp, #-222]	; 0xffffff22
    ba00:	cmp	r3, #15
    ba04:	beq	ba20 <read_grib2_message+0x1930>
    ba08:	ldrh	r3, [fp, #-222]	; 0xffffff22
    ba0c:	cmp	r3, #40	; 0x28
    ba10:	beq	ba20 <read_grib2_message+0x1930>
    ba14:	ldrh	r3, [fp, #-222]	; 0xffffff22
    ba18:	cmp	r3, #51	; 0x33
    ba1c:	bne	bccc <read_grib2_message+0x1bdc>
    ba20:	ldr	r3, [fp, #-376]	; 0xfffffe88
    ba24:	ldr	r0, [r3, #52]	; 0x34
    ba28:	sub	r3, fp, #380	; 0x17c
    ba2c:	mov	r1, r3
    ba30:	sub	r3, fp, #296	; 0x128
    ba34:	str	r3, [sp, #8]
    ba38:	mov	r2, #25
    ba3c:	mov	r3, #0
    ba40:	strd	r2, [sp]
    ba44:	ldrd	r2, [r1, #-8]
    ba48:	bl	0 <read_bytes>
    ba4c:	mov	r3, r0
    ba50:	cmp	r3, #0
    ba54:	bge	ba60 <read_grib2_message+0x1970>
    ba58:	mvn	r3, #0
    ba5c:	b	ca44 <read_grib2_message+0x2954>
    ba60:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    ba64:	strb	r3, [fp, #-77]	; 0xffffffb3
    ba68:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    ba6c:	strb	r3, [fp, #-78]	; 0xffffffb2
    ba70:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    ba74:	strb	r3, [fp, #-79]	; 0xffffffb1
    ba78:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    ba7c:	strb	r3, [fp, #-80]	; 0xffffffb0
    ba80:	ldrb	r3, [fp, #-292]	; 0xfffffedc
    ba84:	strb	r3, [fp, #-81]	; 0xffffffaf
    ba88:	ldrb	r3, [fp, #-291]	; 0xfffffedd
    ba8c:	uxth	r3, r3
    ba90:	lsl	r3, r3, #8
    ba94:	uxth	r2, r3
    ba98:	ldrb	r3, [fp, #-290]	; 0xfffffede
    ba9c:	uxth	r3, r3
    baa0:	add	r3, r2, r3
    baa4:	strh	r3, [fp, #-84]	; 0xffffffac
    baa8:	ldrb	r3, [fp, #-289]	; 0xfffffedf
    baac:	strb	r3, [fp, #-85]	; 0xffffffab
    bab0:	ldrb	r3, [fp, #-288]	; 0xfffffee0
    bab4:	strb	r3, [fp, #-86]	; 0xffffffaa
    bab8:	ldrb	r3, [fp, #-287]	; 0xfffffee1
    babc:	lsl	r2, r3, #8
    bac0:	ldrb	r3, [fp, #-286]	; 0xfffffee2
    bac4:	add	r3, r2, r3
    bac8:	lsl	r2, r3, #8
    bacc:	ldrb	r3, [fp, #-285]	; 0xfffffee3
    bad0:	add	r3, r2, r3
    bad4:	lsl	r2, r3, #8
    bad8:	ldrb	r3, [fp, #-284]	; 0xfffffee4
    badc:	add	r3, r2, r3
    bae0:	str	r3, [fp, #-92]	; 0xffffffa4
    bae4:	ldrb	r3, [fp, #-283]	; 0xfffffee5
    bae8:	strb	r3, [fp, #-93]	; 0xffffffa3
    baec:	ldrb	r3, [fp, #-93]	; 0xffffffa3
    baf0:	cmp	r3, #255	; 0xff
    baf4:	beq	bba0 <read_grib2_message+0x1ab0>
    baf8:	ldrb	r3, [fp, #-282]	; 0xfffffee6
    bafc:	strb	r3, [fp, #-153]	; 0xffffff67
    bb00:	ldrb	r3, [fp, #-281]	; 0xfffffee7
    bb04:	lsl	r2, r3, #8
    bb08:	ldrb	r3, [fp, #-280]	; 0xfffffee8
    bb0c:	add	r3, r2, r3
    bb10:	lsl	r2, r3, #8
    bb14:	ldrb	r3, [fp, #-279]	; 0xfffffee9
    bb18:	add	r3, r2, r3
    bb1c:	lsl	r2, r3, #8
    bb20:	ldrb	r3, [fp, #-278]	; 0xfffffeea
    bb24:	add	r3, r2, r3
    bb28:	vmov	s15, r3
    bb2c:	vcvt.f64.s32	d7, s15
    bb30:	vstr	d7, [fp, #-108]	; 0xffffff94
    bb34:	b	bb5c <read_grib2_message+0x1a6c>
    bb38:	vldr	d7, [fp, #-108]	; 0xffffff94
    bb3c:	vldr	d6, [pc, #964]	; bf08 <read_grib2_message+0x1e18>
    bb40:	vmul.f64	d7, d7, d6
    bb44:	vstr	d7, [fp, #-108]	; 0xffffff94
    bb48:	ldrsb	r3, [fp, #-153]	; 0xffffff67
    bb4c:	uxtb	r3, r3
    bb50:	add	r3, r3, #1
    bb54:	uxtb	r3, r3
    bb58:	strb	r3, [fp, #-153]	; 0xffffff67
    bb5c:	ldrsb	r3, [fp, #-153]	; 0xffffff67
    bb60:	cmp	r3, #0
    bb64:	blt	bb38 <read_grib2_message+0x1a48>
    bb68:	b	bb90 <read_grib2_message+0x1aa0>
    bb6c:	vldr	d6, [fp, #-108]	; 0xffffff94
    bb70:	vldr	d5, [pc, #912]	; bf08 <read_grib2_message+0x1e18>
    bb74:	vdiv.f64	d7, d6, d5
    bb78:	vstr	d7, [fp, #-108]	; 0xffffff94
    bb7c:	ldrsb	r3, [fp, #-153]	; 0xffffff67
    bb80:	uxtb	r3, r3
    bb84:	sub	r3, r3, #1
    bb88:	uxtb	r3, r3
    bb8c:	strb	r3, [fp, #-153]	; 0xffffff67
    bb90:	ldrsb	r3, [fp, #-153]	; 0xffffff67
    bb94:	cmp	r3, #0
    bb98:	bgt	bb6c <read_grib2_message+0x1a7c>
    bb9c:	b	bba8 <read_grib2_message+0x1ab8>
    bba0:	bl	0 <coda_NaN>
    bba4:	vstr	d0, [fp, #-108]	; 0xffffff94
    bba8:	ldrb	r3, [fp, #-277]	; 0xfffffeeb
    bbac:	strb	r3, [fp, #-109]	; 0xffffff93
    bbb0:	ldrb	r3, [fp, #-109]	; 0xffffff93
    bbb4:	cmp	r3, #255	; 0xff
    bbb8:	beq	bc64 <read_grib2_message+0x1b74>
    bbbc:	ldrb	r3, [fp, #-276]	; 0xfffffeec
    bbc0:	strb	r3, [fp, #-154]	; 0xffffff66
    bbc4:	ldrb	r3, [fp, #-275]	; 0xfffffeed
    bbc8:	lsl	r2, r3, #8
    bbcc:	ldrb	r3, [fp, #-274]	; 0xfffffeee
    bbd0:	add	r3, r2, r3
    bbd4:	lsl	r2, r3, #8
    bbd8:	ldrb	r3, [fp, #-273]	; 0xfffffeef
    bbdc:	add	r3, r2, r3
    bbe0:	lsl	r2, r3, #8
    bbe4:	ldrb	r3, [fp, #-272]	; 0xfffffef0
    bbe8:	add	r3, r2, r3
    bbec:	vmov	s15, r3
    bbf0:	vcvt.f64.s32	d7, s15
    bbf4:	vstr	d7, [fp, #-124]	; 0xffffff84
    bbf8:	b	bc20 <read_grib2_message+0x1b30>
    bbfc:	vldr	d7, [fp, #-124]	; 0xffffff84
    bc00:	vldr	d6, [pc, #768]	; bf08 <read_grib2_message+0x1e18>
    bc04:	vmul.f64	d7, d7, d6
    bc08:	vstr	d7, [fp, #-124]	; 0xffffff84
    bc0c:	ldrsb	r3, [fp, #-154]	; 0xffffff66
    bc10:	uxtb	r3, r3
    bc14:	add	r3, r3, #1
    bc18:	uxtb	r3, r3
    bc1c:	strb	r3, [fp, #-154]	; 0xffffff66
    bc20:	ldrsb	r3, [fp, #-154]	; 0xffffff66
    bc24:	cmp	r3, #0
    bc28:	blt	bbfc <read_grib2_message+0x1b0c>
    bc2c:	b	bc54 <read_grib2_message+0x1b64>
    bc30:	vldr	d6, [fp, #-124]	; 0xffffff84
    bc34:	vldr	d5, [pc, #716]	; bf08 <read_grib2_message+0x1e18>
    bc38:	vdiv.f64	d7, d6, d5
    bc3c:	vstr	d7, [fp, #-124]	; 0xffffff84
    bc40:	ldrsb	r3, [fp, #-154]	; 0xffffff66
    bc44:	uxtb	r3, r3
    bc48:	sub	r3, r3, #1
    bc4c:	uxtb	r3, r3
    bc50:	strb	r3, [fp, #-154]	; 0xffffff66
    bc54:	ldrsb	r3, [fp, #-154]	; 0xffffff66
    bc58:	cmp	r3, #0
    bc5c:	bgt	bc30 <read_grib2_message+0x1b40>
    bc60:	b	bc6c <read_grib2_message+0x1b7c>
    bc64:	bl	0 <coda_NaN>
    bc68:	vstr	d0, [fp, #-124]	; 0xffffff84
    bc6c:	sub	r3, fp, #380	; 0x17c
    bc70:	mov	r1, r3
    bc74:	sub	r3, fp, #380	; 0x17c
    bc78:	ldrd	r2, [r3, #-8]
    bc7c:	adds	r0, r2, #25
    bc80:	str	r0, [fp, #-460]	; 0xfffffe34
    bc84:	adc	r3, r3, #0
    bc88:	str	r3, [fp, #-456]	; 0xfffffe38
    bc8c:	sub	r3, fp, #460	; 0x1cc
    bc90:	ldrd	r2, [r3]
    bc94:	strd	r2, [r1, #-8]
    bc98:	ldrh	r3, [fp, #-62]	; 0xffffffc2
    bc9c:	cmp	r3, #0
    bca0:	beq	bcb0 <read_grib2_message+0x1bc0>
    bca4:	sub	r3, fp, #380	; 0x17c
    bca8:	ldrd	r2, [r3, #-8]
    bcac:	b	bcb8 <read_grib2_message+0x1bc8>
    bcb0:	mvn	r2, #0
    bcb4:	mvn	r3, #0
    bcb8:	strd	r2, [fp, #-76]	; 0xffffffb4
    bcbc:	ldr	r3, [fp, #-168]	; 0xffffff58
    bcc0:	cmp	r3, #34	; 0x22
    bcc4:	bhi	bcf0 <read_grib2_message+0x1c00>
    bcc8:	b	bd2c <read_grib2_message+0x1c3c>
    bccc:	ldrh	r3, [fp, #-222]	; 0xffffff22
    bcd0:	mov	r2, r3
    bcd4:	movw	r1, #0
    bcd8:	movt	r1, #0
    bcdc:	movw	r0, #65236	; 0xfed4
    bce0:	movt	r0, #65535	; 0xffff
    bce4:	bl	0 <coda_set_error>
    bce8:	mvn	r3, #0
    bcec:	b	ca44 <read_grib2_message+0x2954>
    bcf0:	ldr	r3, [fp, #-168]	; 0xffffff58
    bcf4:	sub	r3, r3, #34	; 0x22
    bcf8:	mov	r0, r3
    bcfc:	mov	r1, #0
    bd00:	sub	r3, fp, #380	; 0x17c
    bd04:	mov	ip, r3
    bd08:	sub	r3, fp, #380	; 0x17c
    bd0c:	ldrd	r2, [r3, #-8]
    bd10:	adds	lr, r2, r0
    bd14:	str	lr, [fp, #-468]	; 0xfffffe2c
    bd18:	adc	r3, r3, r1
    bd1c:	str	r3, [fp, #-464]	; 0xfffffe30
    bd20:	sub	r3, fp, #468	; 0x1d4
    bd24:	ldrd	r2, [r3]
    bd28:	strd	r2, [ip, #-8]
    bd2c:	mov	r3, #4
    bd30:	strb	r3, [fp, #-137]	; 0xffffff77
    bd34:	b	c970 <read_grib2_message+0x2880>
    bd38:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    bd3c:	cmp	r3, #5
    bd40:	bne	c05c <read_grib2_message+0x1f6c>
    bd44:	ldrb	r3, [fp, #-137]	; 0xffffff77
    bd48:	cmp	r3, #4
    bd4c:	beq	bd78 <read_grib2_message+0x1c88>
    bd50:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    bd54:	sub	r2, r3, #48	; 0x30
    bd58:	ldrb	r3, [fp, #-137]	; 0xffffff77
    bd5c:	movw	r1, #0
    bd60:	movt	r1, #0
    bd64:	movw	r0, #65236	; 0xfed4
    bd68:	movt	r0, #65535	; 0xffff
    bd6c:	bl	0 <coda_set_error>
    bd70:	mvn	r3, #0
    bd74:	b	ca44 <read_grib2_message+0x2954>
    bd78:	ldr	r3, [fp, #-376]	; 0xfffffe88
    bd7c:	ldr	r0, [r3, #52]	; 0x34
    bd80:	sub	r3, fp, #380	; 0x17c
    bd84:	mov	r1, r3
    bd88:	sub	r3, fp, #296	; 0x128
    bd8c:	str	r3, [sp, #8]
    bd90:	mov	r2, #6
    bd94:	mov	r3, #0
    bd98:	strd	r2, [sp]
    bd9c:	ldrd	r2, [r1, #-8]
    bda0:	bl	0 <read_bytes>
    bda4:	mov	r3, r0
    bda8:	cmp	r3, #0
    bdac:	bge	bdb8 <read_grib2_message+0x1cc8>
    bdb0:	mvn	r3, #0
    bdb4:	b	ca44 <read_grib2_message+0x2954>
    bdb8:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    bdbc:	lsl	r2, r3, #8
    bdc0:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    bdc4:	add	r3, r2, r3
    bdc8:	lsl	r2, r3, #8
    bdcc:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    bdd0:	add	r3, r2, r3
    bdd4:	lsl	r2, r3, #8
    bdd8:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    bddc:	add	r3, r2, r3
    bde0:	str	r3, [fp, #-136]	; 0xffffff78
    bde4:	ldrb	r3, [fp, #-292]	; 0xfffffedc
    bde8:	uxth	r3, r3
    bdec:	lsl	r3, r3, #8
    bdf0:	uxth	r2, r3
    bdf4:	ldrb	r3, [fp, #-291]	; 0xfffffedd
    bdf8:	uxth	r3, r3
    bdfc:	add	r3, r2, r3
    be00:	strh	r3, [fp, #-224]	; 0xffffff20
    be04:	sub	r3, fp, #380	; 0x17c
    be08:	mov	r1, r3
    be0c:	sub	r3, fp, #380	; 0x17c
    be10:	ldrd	r2, [r3, #-8]
    be14:	adds	r0, r2, #6
    be18:	str	r0, [fp, #-476]	; 0xfffffe24
    be1c:	adc	r3, r3, #0
    be20:	str	r3, [fp, #-472]	; 0xfffffe28
    be24:	sub	r3, fp, #476	; 0x1dc
    be28:	ldrd	r2, [r3]
    be2c:	strd	r2, [r1, #-8]
    be30:	ldrh	r3, [fp, #-224]	; 0xffffff20
    be34:	cmp	r3, #0
    be38:	beq	be48 <read_grib2_message+0x1d58>
    be3c:	ldrh	r3, [fp, #-224]	; 0xffffff20
    be40:	cmp	r3, #1
    be44:	bne	bff0 <read_grib2_message+0x1f00>
    be48:	ldr	r3, [fp, #-376]	; 0xfffffe88
    be4c:	ldr	r0, [r3, #52]	; 0x34
    be50:	sub	r3, fp, #380	; 0x17c
    be54:	mov	r1, r3
    be58:	sub	r3, fp, #232	; 0xe8
    be5c:	str	r3, [sp, #8]
    be60:	mov	r2, #4
    be64:	mov	r3, #0
    be68:	strd	r2, [sp]
    be6c:	ldrd	r2, [r1, #-8]
    be70:	bl	0 <read_bytes>
    be74:	mov	r3, r0
    be78:	cmp	r3, #0
    be7c:	bge	be88 <read_grib2_message+0x1d98>
    be80:	mvn	r3, #0
    be84:	b	ca44 <read_grib2_message+0x2954>
    be88:	sub	r3, fp, #232	; 0xe8
    be8c:	mov	r0, r3
    be90:	bl	300 <swap4>
    be94:	ldr	r3, [fp, #-376]	; 0xfffffe88
    be98:	ldr	r1, [r3, #52]	; 0x34
    be9c:	sub	r3, fp, #380	; 0x17c
    bea0:	ldrd	r2, [r3, #-8]
    bea4:	adds	r0, r2, #4
    bea8:	str	r0, [fp, #-396]	; 0xfffffe74
    beac:	adc	r3, r3, #0
    beb0:	str	r3, [fp, #-392]	; 0xfffffe78
    beb4:	sub	r3, fp, #296	; 0x128
    beb8:	str	r3, [sp, #8]
    bebc:	mov	r2, #5
    bec0:	mov	r3, #0
    bec4:	strd	r2, [sp]
    bec8:	sub	r3, fp, #396	; 0x18c
    becc:	ldrd	r2, [r3]
    bed0:	mov	r0, r1
    bed4:	bl	0 <read_bytes>
    bed8:	mov	r3, r0
    bedc:	cmp	r3, #0
    bee0:	bge	beec <read_grib2_message+0x1dfc>
    bee4:	mvn	r3, #0
    bee8:	b	ca44 <read_grib2_message+0x2954>
    beec:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    bef0:	sxtb	r3, r3
    bef4:	cmp	r3, #0
    bef8:	bge	bf14 <read_grib2_message+0x1e24>
    befc:	movw	r1, #65535	; 0xffff
    bf00:	b	bf18 <read_grib2_message+0x1e28>
    bf04:	nop	{0}
    bf08:	.word	0x00000000
    bf0c:	.word	0x40240000
    bf10:	.word	0x00000000
    bf14:	mov	r1, #1
    bf18:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    bf1c:	and	r3, r3, #127	; 0x7f
    bf20:	lsl	r2, r3, #8
    bf24:	ldrb	r3, [fp, #-295]	; 0xfffffed9
    bf28:	add	r3, r2, r3
    bf2c:	uxth	r3, r3
    bf30:	smulbb	r3, r1, r3
    bf34:	uxth	r3, r3
    bf38:	strh	r3, [fp, #-128]	; 0xffffff80
    bf3c:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    bf40:	sxtb	r3, r3
    bf44:	cmp	r3, #0
    bf48:	bge	bf54 <read_grib2_message+0x1e64>
    bf4c:	movw	r1, #65535	; 0xffff
    bf50:	b	bf58 <read_grib2_message+0x1e68>
    bf54:	mov	r1, #1
    bf58:	ldrb	r3, [fp, #-294]	; 0xfffffeda
    bf5c:	and	r3, r3, #127	; 0x7f
    bf60:	lsl	r2, r3, #8
    bf64:	ldrb	r3, [fp, #-293]	; 0xfffffedb
    bf68:	add	r3, r2, r3
    bf6c:	uxth	r3, r3
    bf70:	smulbb	r3, r1, r3
    bf74:	uxth	r3, r3
    bf78:	strh	r3, [fp, #-126]	; 0xffffff82
    bf7c:	ldrb	r3, [fp, #-292]	; 0xfffffedc
    bf80:	strb	r3, [fp, #-129]	; 0xffffff7f
    bf84:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    bf88:	cmp	r3, #63	; 0x3f
    bf8c:	bls	bfb4 <read_grib2_message+0x1ec4>
    bf90:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    bf94:	mov	r2, r3
    bf98:	movw	r1, #0
    bf9c:	movt	r1, #0
    bfa0:	movw	r0, #65236	; 0xfed4
    bfa4:	movt	r0, #65535	; 0xffff
    bfa8:	bl	0 <coda_set_error>
    bfac:	mvn	r3, #0
    bfb0:	b	ca44 <read_grib2_message+0x2954>
    bfb4:	sub	r3, fp, #380	; 0x17c
    bfb8:	mov	r1, r3
    bfbc:	sub	r3, fp, #380	; 0x17c
    bfc0:	ldrd	r2, [r3, #-8]
    bfc4:	adds	r0, r2, #9
    bfc8:	str	r0, [fp, #-484]	; 0xfffffe1c
    bfcc:	adc	r3, r3, #0
    bfd0:	str	r3, [fp, #-480]	; 0xfffffe20
    bfd4:	sub	r3, fp, #484	; 0x1e4
    bfd8:	ldrd	r2, [r3]
    bfdc:	strd	r2, [r1, #-8]
    bfe0:	ldr	r3, [fp, #-168]	; 0xffffff58
    bfe4:	cmp	r3, #20
    bfe8:	bhi	c014 <read_grib2_message+0x1f24>
    bfec:	b	c050 <read_grib2_message+0x1f60>
    bff0:	ldrh	r3, [fp, #-224]	; 0xffffff20
    bff4:	mov	r2, r3
    bff8:	movw	r1, #0
    bffc:	movt	r1, #0
    c000:	movw	r0, #65236	; 0xfed4
    c004:	movt	r0, #65535	; 0xffff
    c008:	bl	0 <coda_set_error>
    c00c:	mvn	r3, #0
    c010:	b	ca44 <read_grib2_message+0x2954>
    c014:	ldr	r3, [fp, #-168]	; 0xffffff58
    c018:	sub	r3, r3, #20
    c01c:	mov	r0, r3
    c020:	mov	r1, #0
    c024:	sub	r3, fp, #380	; 0x17c
    c028:	mov	ip, r3
    c02c:	sub	r3, fp, #380	; 0x17c
    c030:	ldrd	r2, [r3, #-8]
    c034:	adds	lr, r2, r0
    c038:	str	lr, [fp, #-492]	; 0xfffffe14
    c03c:	adc	r3, r3, r1
    c040:	str	r3, [fp, #-488]	; 0xfffffe18
    c044:	sub	r3, fp, #492	; 0x1ec
    c048:	ldrd	r2, [r3]
    c04c:	strd	r2, [ip, #-8]
    c050:	mov	r3, #5
    c054:	strb	r3, [fp, #-137]	; 0xffffff77
    c058:	b	c970 <read_grib2_message+0x2880>
    c05c:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    c060:	cmp	r3, #6
    c064:	bne	c228 <read_grib2_message+0x2138>
    c068:	ldrb	r3, [fp, #-137]	; 0xffffff77
    c06c:	cmp	r3, #5
    c070:	beq	c09c <read_grib2_message+0x1fac>
    c074:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    c078:	sub	r2, r3, #48	; 0x30
    c07c:	ldrb	r3, [fp, #-137]	; 0xffffff77
    c080:	movw	r1, #0
    c084:	movt	r1, #0
    c088:	movw	r0, #65236	; 0xfed4
    c08c:	movt	r0, #65535	; 0xffff
    c090:	bl	0 <coda_set_error>
    c094:	mvn	r3, #0
    c098:	b	ca44 <read_grib2_message+0x2954>
    c09c:	ldr	r3, [fp, #-376]	; 0xfffffe88
    c0a0:	ldr	r0, [r3, #52]	; 0x34
    c0a4:	sub	r3, fp, #380	; 0x17c
    c0a8:	mov	r1, r3
    c0ac:	sub	r3, fp, #296	; 0x128
    c0b0:	str	r3, [sp, #8]
    c0b4:	mov	r2, #1
    c0b8:	mov	r3, #0
    c0bc:	strd	r2, [sp]
    c0c0:	ldrd	r2, [r1, #-8]
    c0c4:	bl	0 <read_bytes>
    c0c8:	mov	r3, r0
    c0cc:	cmp	r3, #0
    c0d0:	bge	c0dc <read_grib2_message+0x1fec>
    c0d4:	mvn	r3, #0
    c0d8:	b	ca44 <read_grib2_message+0x2954>
    c0dc:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    c0e0:	cmp	r3, #0
    c0e4:	bne	c12c <read_grib2_message+0x203c>
    c0e8:	mov	r3, #1
    c0ec:	str	r3, [fp, #-32]	; 0xffffffe0
    c0f0:	sub	r3, fp, #380	; 0x17c
    c0f4:	ldrd	r2, [r3, #-8]
    c0f8:	adds	r1, r2, #1
    c0fc:	str	r1, [fp, #-500]	; 0xfffffe0c
    c100:	adc	r3, r3, #0
    c104:	str	r3, [fp, #-496]	; 0xfffffe10
    c108:	sub	r3, fp, #500	; 0x1f4
    c10c:	ldrd	r2, [r3]
    c110:	strd	r2, [fp, #-44]	; 0xffffffd4
    c114:	ldr	r3, [fp, #-168]	; 0xffffff58
    c118:	sub	r3, r3, #6
    c11c:	mov	r2, r3
    c120:	mov	r3, #0
    c124:	strd	r2, [fp, #-52]	; 0xffffffcc
    c128:	b	c1a8 <read_grib2_message+0x20b8>
    c12c:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    c130:	cmp	r3, #254	; 0xfe
    c134:	bne	c174 <read_grib2_message+0x2084>
    c138:	mov	r3, #1
    c13c:	str	r3, [fp, #-32]	; 0xffffffe0
    c140:	ldrd	r0, [fp, #-44]	; 0xffffffd4
    c144:	mvn	r2, #0
    c148:	mvn	r3, #0
    c14c:	cmp	r1, r3
    c150:	cmpeq	r0, r2
    c154:	bne	c1a8 <read_grib2_message+0x20b8>
    c158:	movw	r1, #0
    c15c:	movt	r1, #0
    c160:	movw	r0, #65236	; 0xfed4
    c164:	movt	r0, #65535	; 0xffff
    c168:	bl	0 <coda_set_error>
    c16c:	mvn	r3, #0
    c170:	b	ca44 <read_grib2_message+0x2954>
    c174:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    c178:	cmp	r3, #255	; 0xff
    c17c:	bne	c18c <read_grib2_message+0x209c>
    c180:	mov	r3, #0
    c184:	str	r3, [fp, #-32]	; 0xffffffe0
    c188:	b	c1a8 <read_grib2_message+0x20b8>
    c18c:	movw	r1, #0
    c190:	movt	r1, #0
    c194:	movw	r0, #65236	; 0xfed4
    c198:	movt	r0, #65535	; 0xffff
    c19c:	bl	0 <coda_set_error>
    c1a0:	mvn	r3, #0
    c1a4:	b	ca44 <read_grib2_message+0x2954>
    c1a8:	sub	r3, fp, #380	; 0x17c
    c1ac:	mov	r1, r3
    c1b0:	sub	r3, fp, #380	; 0x17c
    c1b4:	ldrd	r2, [r3, #-8]
    c1b8:	adds	r0, r2, #1
    c1bc:	str	r0, [fp, #-508]	; 0xfffffe04
    c1c0:	adc	r3, r3, #0
    c1c4:	str	r3, [fp, #-504]	; 0xfffffe08
    c1c8:	sub	r3, fp, #508	; 0x1fc
    c1cc:	ldrd	r2, [r3]
    c1d0:	strd	r2, [r1, #-8]
    c1d4:	ldr	r3, [fp, #-168]	; 0xffffff58
    c1d8:	cmp	r3, #6
    c1dc:	bls	c21c <read_grib2_message+0x212c>
    c1e0:	ldr	r3, [fp, #-168]	; 0xffffff58
    c1e4:	sub	r3, r3, #6
    c1e8:	mov	r0, r3
    c1ec:	mov	r1, #0
    c1f0:	sub	r3, fp, #380	; 0x17c
    c1f4:	mov	ip, r3
    c1f8:	sub	r3, fp, #380	; 0x17c
    c1fc:	ldrd	r2, [r3, #-8]
    c200:	adds	lr, r2, r0
    c204:	str	lr, [fp, #-516]	; 0xfffffdfc
    c208:	adc	r3, r3, r1
    c20c:	str	r3, [fp, #-512]	; 0xfffffe00
    c210:	sub	r3, fp, #516	; 0x204
    c214:	ldrd	r2, [r3]
    c218:	strd	r2, [ip, #-8]
    c21c:	mov	r3, #6
    c220:	strb	r3, [fp, #-137]	; 0xffffff77
    c224:	b	c970 <read_grib2_message+0x2880>
    c228:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    c22c:	cmp	r3, #7
    c230:	bne	c938 <read_grib2_message+0x2848>
    c234:	mov	r3, #0
    c238:	str	r3, [fp, #-160]	; 0xffffff60
    c23c:	ldrb	r3, [fp, #-137]	; 0xffffff77
    c240:	cmp	r3, #5
    c244:	beq	c27c <read_grib2_message+0x218c>
    c248:	ldrb	r3, [fp, #-137]	; 0xffffff77
    c24c:	cmp	r3, #6
    c250:	beq	c27c <read_grib2_message+0x218c>
    c254:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    c258:	sub	r2, r3, #48	; 0x30
    c25c:	ldrb	r3, [fp, #-137]	; 0xffffff77
    c260:	movw	r1, #0
    c264:	movt	r1, #0
    c268:	movw	r0, #65236	; 0xfed4
    c26c:	movt	r0, #65535	; 0xffff
    c270:	bl	0 <coda_set_error>
    c274:	mvn	r3, #0
    c278:	b	ca44 <read_grib2_message+0x2954>
    c27c:	mrc	15, 0, r2, cr13, cr0, {3}
    c280:	ldr	r3, [pc, #-888]	; bf10 <read_grib2_message+0x1e20>
    c284:	ldr	r3, [r2, r3]
    c288:	add	r3, r3, #544	; 0x220
    c28c:	ldr	r3, [r3]
    c290:	mov	r1, #0
    c294:	mov	r0, r3
    c298:	bl	0 <coda_mem_record_new>
    c29c:	str	r0, [fp, #-228]	; 0xffffff1c
    c2a0:	mrc	15, 0, r2, cr13, cr0, {3}
    c2a4:	ldr	r3, [pc, #-924]	; bf10 <read_grib2_message+0x1e20>
    c2a8:	ldr	r3, [r2, r3]
    c2ac:	ldr	r3, [r3, #280]	; 0x118
    c2b0:	str	r3, [fp, #-172]	; 0xffffff54
    c2b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
    c2b8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c2bc:	mov	r1, #0
    c2c0:	ldr	r0, [fp, #-172]	; 0xffffff54
    c2c4:	bl	0 <coda_mem_uint32_new>
    c2c8:	str	r0, [fp, #-176]	; 0xffffff50
    c2cc:	mov	r3, #0
    c2d0:	ldr	r2, [fp, #-176]	; 0xffffff50
    c2d4:	movw	r1, #0
    c2d8:	movt	r1, #0
    c2dc:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c2e0:	bl	0 <coda_mem_record_add_field>
    c2e4:	mrc	15, 0, r2, cr13, cr0, {3}
    c2e8:	ldr	r3, [pc, #-992]	; bf10 <read_grib2_message+0x1e20>
    c2ec:	ldr	r3, [r2, r3]
    c2f0:	ldr	r3, [r3, #460]	; 0x1cc
    c2f4:	str	r3, [fp, #-172]	; 0xffffff54
    c2f8:	ldrb	r3, [fp, #-77]	; 0xffffffb3
    c2fc:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c300:	mov	r1, #0
    c304:	ldr	r0, [fp, #-172]	; 0xffffff54
    c308:	bl	0 <coda_mem_uint8_new>
    c30c:	str	r0, [fp, #-176]	; 0xffffff50
    c310:	mov	r3, #0
    c314:	ldr	r2, [fp, #-176]	; 0xffffff50
    c318:	movw	r1, #0
    c31c:	movt	r1, #0
    c320:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c324:	bl	0 <coda_mem_record_add_field>
    c328:	mrc	15, 0, r2, cr13, cr0, {3}
    c32c:	ldr	r3, [pc, #-1060]	; bf10 <read_grib2_message+0x1e20>
    c330:	ldr	r3, [r2, r3]
    c334:	ldr	r3, [r3, #464]	; 0x1d0
    c338:	str	r3, [fp, #-172]	; 0xffffff54
    c33c:	ldrb	r3, [fp, #-78]	; 0xffffffb2
    c340:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c344:	mov	r1, #0
    c348:	ldr	r0, [fp, #-172]	; 0xffffff54
    c34c:	bl	0 <coda_mem_uint8_new>
    c350:	str	r0, [fp, #-176]	; 0xffffff50
    c354:	mov	r3, #0
    c358:	ldr	r2, [fp, #-176]	; 0xffffff50
    c35c:	movw	r1, #0
    c360:	movt	r1, #0
    c364:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c368:	bl	0 <coda_mem_record_add_field>
    c36c:	mrc	15, 0, r2, cr13, cr0, {3}
    c370:	ldr	r3, [pc, #-1128]	; bf10 <read_grib2_message+0x1e20>
    c374:	ldr	r3, [r2, r3]
    c378:	ldr	r3, [r3, #468]	; 0x1d4
    c37c:	str	r3, [fp, #-172]	; 0xffffff54
    c380:	ldrb	r3, [fp, #-79]	; 0xffffffb1
    c384:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c388:	mov	r1, #0
    c38c:	ldr	r0, [fp, #-172]	; 0xffffff54
    c390:	bl	0 <coda_mem_uint8_new>
    c394:	str	r0, [fp, #-176]	; 0xffffff50
    c398:	mov	r3, #0
    c39c:	ldr	r2, [fp, #-176]	; 0xffffff50
    c3a0:	movw	r1, #0
    c3a4:	movt	r1, #0
    c3a8:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c3ac:	bl	0 <coda_mem_record_add_field>
    c3b0:	mrc	15, 0, r2, cr13, cr0, {3}
    c3b4:	ldr	r3, [pc, #-1196]	; bf10 <read_grib2_message+0x1e20>
    c3b8:	ldr	r3, [r2, r3]
    c3bc:	ldr	r3, [r3, #472]	; 0x1d8
    c3c0:	str	r3, [fp, #-172]	; 0xffffff54
    c3c4:	ldrb	r3, [fp, #-80]	; 0xffffffb0
    c3c8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c3cc:	mov	r1, #0
    c3d0:	ldr	r0, [fp, #-172]	; 0xffffff54
    c3d4:	bl	0 <coda_mem_uint8_new>
    c3d8:	str	r0, [fp, #-176]	; 0xffffff50
    c3dc:	mov	r3, #0
    c3e0:	ldr	r2, [fp, #-176]	; 0xffffff50
    c3e4:	movw	r1, #0
    c3e8:	movt	r1, #0
    c3ec:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c3f0:	bl	0 <coda_mem_record_add_field>
    c3f4:	mrc	15, 0, r2, cr13, cr0, {3}
    c3f8:	ldr	r3, [pc, #-1264]	; bf10 <read_grib2_message+0x1e20>
    c3fc:	ldr	r3, [r2, r3]
    c400:	ldr	r3, [r3, #476]	; 0x1dc
    c404:	str	r3, [fp, #-172]	; 0xffffff54
    c408:	ldrb	r3, [fp, #-81]	; 0xffffffaf
    c40c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c410:	mov	r1, #0
    c414:	ldr	r0, [fp, #-172]	; 0xffffff54
    c418:	bl	0 <coda_mem_uint8_new>
    c41c:	str	r0, [fp, #-176]	; 0xffffff50
    c420:	mov	r3, #0
    c424:	ldr	r2, [fp, #-176]	; 0xffffff50
    c428:	movw	r1, #0
    c42c:	movt	r1, #0
    c430:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c434:	bl	0 <coda_mem_record_add_field>
    c438:	mrc	15, 0, r2, cr13, cr0, {3}
    c43c:	ldr	r3, [pc, #-1332]	; bf10 <read_grib2_message+0x1e20>
    c440:	ldr	r3, [r2, r3]
    c444:	ldr	r3, [r3, #480]	; 0x1e0
    c448:	str	r3, [fp, #-172]	; 0xffffff54
    c44c:	ldrh	r3, [fp, #-84]	; 0xffffffac
    c450:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c454:	mov	r1, #0
    c458:	ldr	r0, [fp, #-172]	; 0xffffff54
    c45c:	bl	0 <coda_mem_uint16_new>
    c460:	str	r0, [fp, #-176]	; 0xffffff50
    c464:	mov	r3, #0
    c468:	ldr	r2, [fp, #-176]	; 0xffffff50
    c46c:	movw	r1, #0
    c470:	movt	r1, #0
    c474:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c478:	bl	0 <coda_mem_record_add_field>
    c47c:	mrc	15, 0, r2, cr13, cr0, {3}
    c480:	ldr	r3, [pc, #-1400]	; bf10 <read_grib2_message+0x1e20>
    c484:	ldr	r3, [r2, r3]
    c488:	ldr	r3, [r3, #484]	; 0x1e4
    c48c:	str	r3, [fp, #-172]	; 0xffffff54
    c490:	ldrb	r3, [fp, #-85]	; 0xffffffab
    c494:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c498:	mov	r1, #0
    c49c:	ldr	r0, [fp, #-172]	; 0xffffff54
    c4a0:	bl	0 <coda_mem_uint8_new>
    c4a4:	str	r0, [fp, #-176]	; 0xffffff50
    c4a8:	mov	r3, #0
    c4ac:	ldr	r2, [fp, #-176]	; 0xffffff50
    c4b0:	movw	r1, #0
    c4b4:	movt	r1, #0
    c4b8:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c4bc:	bl	0 <coda_mem_record_add_field>
    c4c0:	mrc	15, 0, r2, cr13, cr0, {3}
    c4c4:	ldr	r3, [pc, #-1468]	; bf10 <read_grib2_message+0x1e20>
    c4c8:	ldr	r3, [r2, r3]
    c4cc:	ldr	r3, [r3, #488]	; 0x1e8
    c4d0:	str	r3, [fp, #-172]	; 0xffffff54
    c4d4:	ldrb	r3, [fp, #-86]	; 0xffffffaa
    c4d8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c4dc:	mov	r1, #0
    c4e0:	ldr	r0, [fp, #-172]	; 0xffffff54
    c4e4:	bl	0 <coda_mem_uint8_new>
    c4e8:	str	r0, [fp, #-176]	; 0xffffff50
    c4ec:	mov	r3, #0
    c4f0:	ldr	r2, [fp, #-176]	; 0xffffff50
    c4f4:	movw	r1, #0
    c4f8:	movt	r1, #0
    c4fc:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c500:	bl	0 <coda_mem_record_add_field>
    c504:	mrc	15, 0, r2, cr13, cr0, {3}
    c508:	ldr	r3, [pc, #-1536]	; bf10 <read_grib2_message+0x1e20>
    c50c:	ldr	r3, [r2, r3]
    c510:	ldr	r3, [r3, #492]	; 0x1ec
    c514:	str	r3, [fp, #-172]	; 0xffffff54
    c518:	ldr	r3, [fp, #-92]	; 0xffffffa4
    c51c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c520:	mov	r1, #0
    c524:	ldr	r0, [fp, #-172]	; 0xffffff54
    c528:	bl	0 <coda_mem_uint32_new>
    c52c:	str	r0, [fp, #-176]	; 0xffffff50
    c530:	mov	r3, #0
    c534:	ldr	r2, [fp, #-176]	; 0xffffff50
    c538:	movw	r1, #0
    c53c:	movt	r1, #0
    c540:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c544:	bl	0 <coda_mem_record_add_field>
    c548:	mrc	15, 0, r2, cr13, cr0, {3}
    c54c:	ldr	r3, [pc, #-1604]	; bf10 <read_grib2_message+0x1e20>
    c550:	ldr	r3, [r2, r3]
    c554:	ldr	r3, [r3, #496]	; 0x1f0
    c558:	str	r3, [fp, #-172]	; 0xffffff54
    c55c:	ldrb	r3, [fp, #-93]	; 0xffffffa3
    c560:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c564:	mov	r1, #0
    c568:	ldr	r0, [fp, #-172]	; 0xffffff54
    c56c:	bl	0 <coda_mem_uint8_new>
    c570:	str	r0, [fp, #-176]	; 0xffffff50
    c574:	mov	r3, #0
    c578:	ldr	r2, [fp, #-176]	; 0xffffff50
    c57c:	movw	r1, #0
    c580:	movt	r1, #0
    c584:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c588:	bl	0 <coda_mem_record_add_field>
    c58c:	mrc	15, 0, r2, cr13, cr0, {3}
    c590:	ldr	r3, [pc, #-1672]	; bf10 <read_grib2_message+0x1e20>
    c594:	ldr	r3, [r2, r3]
    c598:	ldr	r3, [r3, #500]	; 0x1f4
    c59c:	str	r3, [fp, #-172]	; 0xffffff54
    c5a0:	vldr	d0, [fp, #-108]	; 0xffffff94
    c5a4:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c5a8:	mov	r1, #0
    c5ac:	ldr	r0, [fp, #-172]	; 0xffffff54
    c5b0:	bl	0 <coda_mem_double_new>
    c5b4:	str	r0, [fp, #-176]	; 0xffffff50
    c5b8:	mov	r3, #0
    c5bc:	ldr	r2, [fp, #-176]	; 0xffffff50
    c5c0:	movw	r1, #0
    c5c4:	movt	r1, #0
    c5c8:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c5cc:	bl	0 <coda_mem_record_add_field>
    c5d0:	mrc	15, 0, r2, cr13, cr0, {3}
    c5d4:	ldr	r3, [pc, #-1740]	; bf10 <read_grib2_message+0x1e20>
    c5d8:	ldr	r3, [r2, r3]
    c5dc:	ldr	r3, [r3, #504]	; 0x1f8
    c5e0:	str	r3, [fp, #-172]	; 0xffffff54
    c5e4:	ldrb	r3, [fp, #-109]	; 0xffffff93
    c5e8:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c5ec:	mov	r1, #0
    c5f0:	ldr	r0, [fp, #-172]	; 0xffffff54
    c5f4:	bl	0 <coda_mem_uint8_new>
    c5f8:	str	r0, [fp, #-176]	; 0xffffff50
    c5fc:	mov	r3, #0
    c600:	ldr	r2, [fp, #-176]	; 0xffffff50
    c604:	movw	r1, #0
    c608:	movt	r1, #0
    c60c:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c610:	bl	0 <coda_mem_record_add_field>
    c614:	mrc	15, 0, r2, cr13, cr0, {3}
    c618:	ldr	r3, [pc, #-1808]	; bf10 <read_grib2_message+0x1e20>
    c61c:	ldr	r3, [r2, r3]
    c620:	ldr	r3, [r3, #508]	; 0x1fc
    c624:	str	r3, [fp, #-172]	; 0xffffff54
    c628:	vldr	d0, [fp, #-124]	; 0xffffff84
    c62c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c630:	mov	r1, #0
    c634:	ldr	r0, [fp, #-172]	; 0xffffff54
    c638:	bl	0 <coda_mem_double_new>
    c63c:	str	r0, [fp, #-176]	; 0xffffff50
    c640:	mov	r3, #0
    c644:	ldr	r2, [fp, #-176]	; 0xffffff50
    c648:	movw	r1, #0
    c64c:	movt	r1, #0
    c650:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c654:	bl	0 <coda_mem_record_add_field>
    c658:	ldrh	r3, [fp, #-62]	; 0xffffffc2
    c65c:	cmp	r3, #0
    c660:	beq	c6a4 <read_grib2_message+0x25b4>
    c664:	mrc	15, 0, r2, cr13, cr0, {3}
    c668:	ldr	r3, [pc, #-1888]	; bf10 <read_grib2_message+0x1e20>
    c66c:	ldr	r3, [r2, r3]
    c670:	ldr	r3, [r3, #516]	; 0x204
    c674:	str	r3, [fp, #-172]	; 0xffffff54
    c678:	ldrh	r1, [fp, #-62]	; 0xffffffc2
    c67c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
    c680:	ldr	r0, [fp, #-172]	; 0xffffff54
    c684:	bl	0 <coda_grib_value_array_new>
    c688:	str	r0, [fp, #-176]	; 0xffffff50
    c68c:	mov	r3, #0
    c690:	ldr	r2, [fp, #-176]	; 0xffffff50
    c694:	movw	r1, #0
    c698:	movt	r1, #0
    c69c:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c6a0:	bl	0 <coda_mem_record_add_field>
    c6a4:	mrc	15, 0, r2, cr13, cr0, {3}
    c6a8:	ldr	r3, [pc, #-1952]	; bf10 <read_grib2_message+0x1e20>
    c6ac:	ldr	r3, [r2, r3]
    c6b0:	ldr	r3, [r3, #524]	; 0x20c
    c6b4:	str	r3, [fp, #-172]	; 0xffffff54
    c6b8:	ldrb	r3, [fp, #-129]	; 0xffffff7f
    c6bc:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c6c0:	mov	r1, #0
    c6c4:	ldr	r0, [fp, #-172]	; 0xffffff54
    c6c8:	bl	0 <coda_mem_uint8_new>
    c6cc:	str	r0, [fp, #-176]	; 0xffffff50
    c6d0:	mov	r3, #0
    c6d4:	ldr	r2, [fp, #-176]	; 0xffffff50
    c6d8:	movw	r1, #0
    c6dc:	movt	r1, #0
    c6e0:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c6e4:	bl	0 <coda_mem_record_add_field>
    c6e8:	mrc	15, 0, r2, cr13, cr0, {3}
    c6ec:	ldr	r3, [pc, #-2020]	; bf10 <read_grib2_message+0x1e20>
    c6f0:	ldr	r3, [r2, r3]
    c6f4:	ldr	r3, [r3, #320]	; 0x140
    c6f8:	str	r3, [fp, #-172]	; 0xffffff54
    c6fc:	ldrsh	r3, [fp, #-126]	; 0xffffff82
    c700:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c704:	mov	r1, #0
    c708:	ldr	r0, [fp, #-172]	; 0xffffff54
    c70c:	bl	0 <coda_mem_int16_new>
    c710:	str	r0, [fp, #-176]	; 0xffffff50
    c714:	mov	r3, #0
    c718:	ldr	r2, [fp, #-176]	; 0xffffff50
    c71c:	movw	r1, #0
    c720:	movt	r1, #0
    c724:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c728:	bl	0 <coda_mem_record_add_field>
    c72c:	mrc	15, 0, r2, cr13, cr0, {3}
    c730:	ldr	r3, [pc, #-2088]	; bf10 <read_grib2_message+0x1e20>
    c734:	ldr	r3, [r2, r3]
    c738:	ldr	r3, [r3, #528]	; 0x210
    c73c:	str	r3, [fp, #-172]	; 0xffffff54
    c740:	ldrsh	r3, [fp, #-128]	; 0xffffff80
    c744:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c748:	mov	r1, #0
    c74c:	ldr	r0, [fp, #-172]	; 0xffffff54
    c750:	bl	0 <coda_mem_int16_new>
    c754:	str	r0, [fp, #-176]	; 0xffffff50
    c758:	mov	r3, #0
    c75c:	ldr	r2, [fp, #-176]	; 0xffffff50
    c760:	movw	r1, #0
    c764:	movt	r1, #0
    c768:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c76c:	bl	0 <coda_mem_record_add_field>
    c770:	mrc	15, 0, r2, cr13, cr0, {3}
    c774:	ldr	r3, [pc, #-2156]	; bf10 <read_grib2_message+0x1e20>
    c778:	ldr	r3, [r2, r3]
    c77c:	ldr	r3, [r3, #532]	; 0x214
    c780:	str	r3, [fp, #-172]	; 0xffffff54
    c784:	vldr	s15, [fp, #-232]	; 0xffffff18
    c788:	vmov.f32	s0, s15
    c78c:	ldr	r2, [fp, #-164]	; 0xffffff5c
    c790:	mov	r1, #0
    c794:	ldr	r0, [fp, #-172]	; 0xffffff54
    c798:	bl	0 <coda_mem_float_new>
    c79c:	str	r0, [fp, #-176]	; 0xffffff50
    c7a0:	mov	r3, #0
    c7a4:	ldr	r2, [fp, #-176]	; 0xffffff50
    c7a8:	movw	r1, #0
    c7ac:	movt	r1, #0
    c7b0:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c7b4:	bl	0 <coda_mem_record_add_field>
    c7b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    c7bc:	cmp	r3, #0
    c7c0:	beq	c850 <read_grib2_message+0x2760>
    c7c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    c7c8:	mov	r0, r3
    c7cc:	bl	0 <malloc>
    c7d0:	mov	r3, r0
    c7d4:	str	r3, [fp, #-160]	; 0xffffff60
    c7d8:	ldr	r3, [fp, #-160]	; 0xffffff60
    c7dc:	cmp	r3, #0
    c7e0:	bne	c810 <read_grib2_message+0x2720>
    c7e4:	ldr	r2, [fp, #-52]	; 0xffffffcc
    c7e8:	movw	r3, #2940	; 0xb7c
    c7ec:	str	r3, [sp]
    c7f0:	movw	r3, #0
    c7f4:	movt	r3, #0
    c7f8:	movw	r1, #0
    c7fc:	movt	r1, #0
    c800:	mvn	r0, #0
    c804:	bl	0 <coda_set_error>
    c808:	mvn	r3, #0
    c80c:	b	ca44 <read_grib2_message+0x2954>
    c810:	ldr	r3, [fp, #-376]	; 0xfffffe88
    c814:	ldr	r1, [r3, #52]	; 0x34
    c818:	ldr	r3, [fp, #-160]	; 0xffffff60
    c81c:	str	r3, [sp, #8]
    c820:	ldrd	r2, [fp, #-52]	; 0xffffffcc
    c824:	strd	r2, [sp]
    c828:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    c82c:	mov	r0, r1
    c830:	bl	0 <read_bytes>
    c834:	mov	r3, r0
    c838:	cmp	r3, #0
    c83c:	bge	c850 <read_grib2_message+0x2760>
    c840:	ldr	r0, [fp, #-160]	; 0xffffff60
    c844:	bl	0 <free>
    c848:	mvn	r3, #0
    c84c:	b	ca44 <read_grib2_message+0x2954>
    c850:	mrc	15, 0, r2, cr13, cr0, {3}
    c854:	ldr	r3, [pc, #-2380]	; bf10 <read_grib2_message+0x1e20>
    c858:	ldr	r3, [r2, r3]
    c85c:	ldr	r3, [r3, #536]	; 0x218
    c860:	str	r3, [fp, #-172]	; 0xffffff54
    c864:	ldr	r0, [fp, #-136]	; 0xffffff78
    c868:	ldrb	r2, [fp, #-129]	; 0xffffff7f
    c86c:	vldr	s15, [fp, #-232]	; 0xffffff18
    c870:	sub	r3, fp, #380	; 0x17c
    c874:	mov	r1, r3
    c878:	ldr	r3, [fp, #-160]	; 0xffffff60
    c87c:	str	r3, [sp, #12]
    c880:	ldrsh	r3, [fp, #-128]	; 0xffffff80
    c884:	str	r3, [sp, #8]
    c888:	ldrsh	r3, [fp, #-126]	; 0xffffff82
    c88c:	str	r3, [sp, #4]
    c890:	str	r2, [sp]
    c894:	vmov.f32	s0, s15
    c898:	ldrd	r2, [r1, #-8]
    c89c:	mov	r1, r0
    c8a0:	ldr	r0, [fp, #-172]	; 0xffffff54
    c8a4:	bl	0 <coda_grib_value_array_simple_packing_new>
    c8a8:	str	r0, [fp, #-176]	; 0xffffff50
    c8ac:	ldr	r3, [fp, #-160]	; 0xffffff60
    c8b0:	cmp	r3, #0
    c8b4:	beq	c8c0 <read_grib2_message+0x27d0>
    c8b8:	ldr	r0, [fp, #-160]	; 0xffffff60
    c8bc:	bl	0 <free>
    c8c0:	mov	r3, #0
    c8c4:	ldr	r2, [fp, #-176]	; 0xffffff50
    c8c8:	movw	r1, #0
    c8cc:	movt	r1, #0
    c8d0:	ldr	r0, [fp, #-228]	; 0xffffff1c
    c8d4:	bl	0 <coda_mem_record_add_field>
    c8d8:	ldr	r1, [fp, #-228]	; 0xffffff1c
    c8dc:	ldr	r0, [fp, #-188]	; 0xffffff44
    c8e0:	bl	0 <coda_mem_array_add_element>
    c8e4:	ldr	r3, [fp, #-168]	; 0xffffff58
    c8e8:	cmp	r3, #5
    c8ec:	bls	c92c <read_grib2_message+0x283c>
    c8f0:	ldr	r3, [fp, #-168]	; 0xffffff58
    c8f4:	sub	r3, r3, #5
    c8f8:	mov	r0, r3
    c8fc:	mov	r1, #0
    c900:	sub	r3, fp, #380	; 0x17c
    c904:	mov	ip, r3
    c908:	sub	r3, fp, #380	; 0x17c
    c90c:	ldrd	r2, [r3, #-8]
    c910:	adds	lr, r2, r0
    c914:	str	lr, [fp, #-524]	; 0xfffffdf4
    c918:	adc	r3, r3, r1
    c91c:	str	r3, [fp, #-520]	; 0xfffffdf8
    c920:	sub	r3, fp, #524	; 0x20c
    c924:	ldrd	r2, [r3]
    c928:	strd	r2, [ip, #-8]
    c92c:	mov	r3, #7
    c930:	strb	r3, [fp, #-137]	; 0xffffff77
    c934:	b	c970 <read_grib2_message+0x2880>
    c938:	sub	r2, fp, #344	; 0x158
    c93c:	sub	r3, fp, #380	; 0x17c
    c940:	ldrd	r0, [r3, #-8]
    c944:	bl	0 <coda_str64>
    c948:	ldrb	r3, [fp, #-296]	; 0xfffffed8
    c94c:	sub	r2, r3, #48	; 0x30
    c950:	sub	r3, fp, #344	; 0x158
    c954:	movw	r1, #0
    c958:	movt	r1, #0
    c95c:	movw	r0, #65236	; 0xfed4
    c960:	movt	r0, #65535	; 0xffff
    c964:	bl	0 <coda_set_error>
    c968:	mvn	r3, #0
    c96c:	b	ca44 <read_grib2_message+0x2954>
    c970:	ldr	r3, [fp, #-376]	; 0xfffffe88
    c974:	ldr	r0, [r3, #52]	; 0x34
    c978:	sub	r3, fp, #380	; 0x17c
    c97c:	mov	r1, r3
    c980:	sub	r3, fp, #296	; 0x128
    c984:	str	r3, [sp, #8]
    c988:	mov	r2, #4
    c98c:	mov	r3, #0
    c990:	strd	r2, [sp]
    c994:	ldrd	r2, [r1, #-8]
    c998:	bl	0 <read_bytes>
    c99c:	mov	r3, r0
    c9a0:	cmp	r3, #0
    c9a4:	bge	c9b0 <read_grib2_message+0x28c0>
    c9a8:	mvn	r3, #0
    c9ac:	b	ca44 <read_grib2_message+0x2954>
    c9b0:	sub	r3, fp, #380	; 0x17c
    c9b4:	mov	r1, r3
    c9b8:	sub	r3, fp, #380	; 0x17c
    c9bc:	ldrd	r2, [r3, #-8]
    c9c0:	adds	r0, r2, #4
    c9c4:	str	r0, [fp, #-532]	; 0xfffffdec
    c9c8:	adc	r3, r3, #0
    c9cc:	str	r3, [fp, #-528]	; 0xfffffdf0
    c9d0:	sub	r3, fp, #532	; 0x214
    c9d4:	ldrd	r2, [r3]
    c9d8:	strd	r2, [r1, #-8]
    c9dc:	sub	r3, fp, #296	; 0x128
    c9e0:	mov	r2, #4
    c9e4:	movw	r1, #0
    c9e8:	movt	r1, #0
    c9ec:	mov	r0, r3
    c9f0:	bl	0 <memcmp>
    c9f4:	mov	r3, r0
    c9f8:	cmp	r3, #0
    c9fc:	bne	a7e8 <read_grib2_message+0x6f8>
    ca00:	ldrb	r3, [fp, #-137]	; 0xffffff77
    ca04:	cmp	r3, #7
    ca08:	beq	ca40 <read_grib2_message+0x2950>
    ca0c:	sub	r2, fp, #368	; 0x170
    ca10:	sub	r3, fp, #380	; 0x17c
    ca14:	ldrd	r0, [r3, #-8]
    ca18:	bl	0 <coda_str64>
    ca1c:	sub	r3, fp, #368	; 0x170
    ca20:	mov	r2, r3
    ca24:	movw	r1, #0
    ca28:	movt	r1, #0
    ca2c:	movw	r0, #65236	; 0xfed4
    ca30:	movt	r0, #65535	; 0xffff
    ca34:	bl	0 <coda_set_error>
    ca38:	mvn	r3, #0
    ca3c:	b	ca44 <read_grib2_message+0x2954>
    ca40:	mov	r3, #0
    ca44:	mov	r0, r3
    ca48:	sub	sp, fp, #28
    ca4c:	ldrd	r4, [sp]
    ca50:	ldrd	r6, [sp, #8]
    ca54:	ldrd	r8, [sp, #16]
    ca58:	ldr	fp, [sp, #24]
    ca5c:	add	sp, sp, #28
    ca60:	pop	{pc}		; (ldr pc, [sp], #4)

0000ca64 <coda_grib_reopen>:
    ca64:	strd	r4, [sp, #-32]!	; 0xffffffe0
    ca68:	strd	r6, [sp, #8]
    ca6c:	strd	r8, [sp, #16]
    ca70:	str	fp, [sp, #24]
    ca74:	str	lr, [sp, #28]
    ca78:	add	fp, sp, #28
    ca7c:	sub	sp, sp, #144	; 0x90
    ca80:	str	r0, [fp, #-104]	; 0xffffff98
    ca84:	mov	r2, #0
    ca88:	mov	r3, #0
    ca8c:	strd	r2, [fp, #-44]	; 0xffffffd4
    ca90:	bl	640 <grib_init>
    ca94:	mov	r3, r0
    ca98:	cmp	r3, #0
    ca9c:	beq	cab8 <coda_grib_reopen+0x54>
    caa0:	ldr	r3, [fp, #-104]	; 0xffffff98
    caa4:	ldr	r3, [r3]
    caa8:	mov	r0, r3
    caac:	bl	0 <coda_close>
    cab0:	mvn	r3, #0
    cab4:	b	d0fc <coda_grib_reopen+0x698>
    cab8:	mov	r0, #56	; 0x38
    cabc:	bl	0 <malloc>
    cac0:	mov	r3, r0
    cac4:	str	r3, [fp, #-52]	; 0xffffffcc
    cac8:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cacc:	cmp	r3, #0
    cad0:	bne	cb10 <coda_grib_reopen+0xac>
    cad4:	movw	r3, #3019	; 0xbcb
    cad8:	str	r3, [sp]
    cadc:	movw	r3, #0
    cae0:	movt	r3, #0
    cae4:	mov	r2, #56	; 0x38
    cae8:	movw	r1, #0
    caec:	movt	r1, #0
    caf0:	mvn	r0, #0
    caf4:	bl	0 <coda_set_error>
    caf8:	ldr	r3, [fp, #-104]	; 0xffffff98
    cafc:	ldr	r3, [r3]
    cb00:	mov	r0, r3
    cb04:	bl	0 <coda_close>
    cb08:	mvn	r3, #0
    cb0c:	b	d0fc <coda_grib_reopen+0x698>
    cb10:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cb14:	mov	r3, #0
    cb18:	str	r3, [r2]
    cb1c:	ldr	r3, [fp, #-104]	; 0xffffff98
    cb20:	ldr	r3, [r3]
    cb24:	ldrd	r0, [r3, #8]
    cb28:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cb2c:	strd	r0, [r3, #8]
    cb30:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cb34:	mov	r3, #7
    cb38:	str	r3, [r2, #16]
    cb3c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cb40:	mov	r3, #0
    cb44:	str	r3, [r2, #20]
    cb48:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cb4c:	mov	r3, #0
    cb50:	str	r3, [r2, #24]
    cb54:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cb58:	mov	r3, #0
    cb5c:	str	r3, [r2, #28]
    cb60:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cb64:	mov	r3, #0
    cb68:	str	r3, [r2, #32]
    cb6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
    cb70:	mov	r2, #0
    cb74:	mov	r3, #0
    cb78:	strd	r2, [r1, #40]	; 0x28
    cb7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cb80:	mov	r3, #0
    cb84:	str	r3, [r2, #48]	; 0x30
    cb88:	ldr	r3, [fp, #-104]	; 0xffffff98
    cb8c:	ldr	r2, [r3]
    cb90:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cb94:	str	r2, [r3, #52]	; 0x34
    cb98:	ldr	r3, [fp, #-104]	; 0xffffff98
    cb9c:	ldr	r3, [r3]
    cba0:	ldr	r3, [r3]
    cba4:	mov	r0, r3
    cba8:	bl	0 <strdup>
    cbac:	mov	r3, r0
    cbb0:	mov	r2, r3
    cbb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cbb8:	str	r2, [r3]
    cbbc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cbc0:	ldr	r3, [r3]
    cbc4:	cmp	r3, #0
    cbc8:	bne	cbf8 <coda_grib_reopen+0x194>
    cbcc:	movw	r3, #3039	; 0xbdf
    cbd0:	movw	r2, #0
    cbd4:	movt	r2, #0
    cbd8:	movw	r1, #0
    cbdc:	movt	r1, #0
    cbe0:	mvn	r0, #0
    cbe4:	bl	0 <coda_set_error>
    cbe8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    cbec:	bl	d120 <coda_grib_close>
    cbf0:	mvn	r3, #0
    cbf4:	b	d0fc <coda_grib_reopen+0x698>
    cbf8:	mrc	15, 0, r2, cr13, cr0, {3}
    cbfc:	ldr	r3, [pc, #1304]	; d11c <coda_grib_reopen+0x6b8>
    cc00:	ldr	r3, [r2, r3]
    cc04:	add	r3, r3, #568	; 0x238
    cc08:	ldr	r3, [r3]
    cc0c:	mov	r1, #0
    cc10:	mov	r0, r3
    cc14:	bl	0 <coda_mem_array_new>
    cc18:	mov	r2, r0
    cc1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cc20:	str	r2, [r3, #20]
    cc24:	mov	r3, #0
    cc28:	str	r3, [fp, #-32]	; 0xffffffe0
    cc2c:	b	d0c4 <coda_grib_reopen+0x660>
    cc30:	mov	r3, #0
    cc34:	strb	r3, [fp, #-92]	; 0xffffffa4
    cc38:	b	cc90 <coda_grib_reopen+0x22c>
    cc3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cc40:	ldr	r1, [r3, #52]	; 0x34
    cc44:	sub	r3, fp, #92	; 0x5c
    cc48:	str	r3, [sp, #8]
    cc4c:	mov	r2, #1
    cc50:	mov	r3, #0
    cc54:	strd	r2, [sp]
    cc58:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    cc5c:	mov	r0, r1
    cc60:	bl	204 <read_bytes_in_bounds>
    cc64:	mov	r3, r0
    cc68:	cmp	r3, #0
    cc6c:	bge	cc80 <coda_grib_reopen+0x21c>
    cc70:	ldr	r0, [fp, #-52]	; 0xffffffcc
    cc74:	bl	d120 <coda_grib_close>
    cc78:	mvn	r3, #0
    cc7c:	b	d0fc <coda_grib_reopen+0x698>
    cc80:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    cc84:	adds	r4, r2, #1
    cc88:	adc	r5, r3, #0
    cc8c:	strd	r4, [fp, #-44]	; 0xffffffd4
    cc90:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cc94:	ldrd	r2, [r3, #8]
    cc98:	subs	r8, r2, #1
    cc9c:	sbc	r9, r3, #0
    cca0:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    cca4:	cmp	r2, r8
    cca8:	sbcs	r3, r3, r9
    ccac:	bge	ccbc <coda_grib_reopen+0x258>
    ccb0:	ldrb	r3, [fp, #-92]	; 0xffffffa4
    ccb4:	cmp	r3, #71	; 0x47
    ccb8:	bne	cc3c <coda_grib_reopen+0x1d8>
    ccbc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    ccc0:	ldrd	r2, [r3, #8]
    ccc4:	subs	r1, r2, #1
    ccc8:	str	r1, [fp, #-116]	; 0xffffff8c
    cccc:	sbc	r3, r3, #0
    ccd0:	str	r3, [fp, #-112]	; 0xffffff90
    ccd4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    ccd8:	ldrd	r0, [fp, #-116]	; 0xffffff8c
    ccdc:	cmp	r2, r0
    cce0:	sbcs	r3, r3, r1
    cce4:	bge	d0e8 <coda_grib_reopen+0x684>
    cce8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    ccec:	subs	r1, r2, #1
    ccf0:	str	r1, [fp, #-148]	; 0xffffff6c
    ccf4:	sbc	r3, r3, #0
    ccf8:	str	r3, [fp, #-144]	; 0xffffff70
    ccfc:	ldrd	r2, [fp, #-148]	; 0xffffff6c
    cd00:	strd	r2, [fp, #-44]	; 0xffffffd4
    cd04:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cd08:	ldr	r1, [r3, #52]	; 0x34
    cd0c:	sub	r3, fp, #92	; 0x5c
    cd10:	str	r3, [sp, #8]
    cd14:	mov	r2, #8
    cd18:	mov	r3, #0
    cd1c:	strd	r2, [sp]
    cd20:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    cd24:	mov	r0, r1
    cd28:	bl	0 <read_bytes>
    cd2c:	mov	r3, r0
    cd30:	cmp	r3, #0
    cd34:	bge	cd48 <coda_grib_reopen+0x2e4>
    cd38:	ldr	r0, [fp, #-52]	; 0xffffffcc
    cd3c:	bl	d120 <coda_grib_close>
    cd40:	mvn	r3, #0
    cd44:	b	d0fc <coda_grib_reopen+0x698>
    cd48:	ldrb	r3, [fp, #-92]	; 0xffffffa4
    cd4c:	cmp	r3, #71	; 0x47
    cd50:	bne	cd78 <coda_grib_reopen+0x314>
    cd54:	ldrb	r3, [fp, #-91]	; 0xffffffa5
    cd58:	cmp	r3, #82	; 0x52
    cd5c:	bne	cd78 <coda_grib_reopen+0x314>
    cd60:	ldrb	r3, [fp, #-90]	; 0xffffffa6
    cd64:	cmp	r3, #73	; 0x49
    cd68:	bne	cd78 <coda_grib_reopen+0x314>
    cd6c:	ldrb	r3, [fp, #-89]	; 0xffffffa7
    cd70:	cmp	r3, #66	; 0x42
    cd74:	beq	cda0 <coda_grib_reopen+0x33c>
    cd78:	ldr	r2, [fp, #-32]	; 0xffffffe0
    cd7c:	movw	r1, #0
    cd80:	movt	r1, #0
    cd84:	movw	r0, #65236	; 0xfed4
    cd88:	movt	r0, #65535	; 0xffff
    cd8c:	bl	0 <coda_set_error>
    cd90:	ldr	r0, [fp, #-52]	; 0xffffffcc
    cd94:	bl	d120 <coda_grib_close>
    cd98:	mvn	r3, #0
    cd9c:	b	d0fc <coda_grib_reopen+0x698>
    cda0:	ldrb	r3, [fp, #-85]	; 0xffffffab
    cda4:	str	r3, [fp, #-56]	; 0xffffffc8
    cda8:	ldr	r3, [fp, #-56]	; 0xffffffc8
    cdac:	cmp	r3, #1
    cdb0:	beq	cde8 <coda_grib_reopen+0x384>
    cdb4:	ldr	r3, [fp, #-56]	; 0xffffffc8
    cdb8:	cmp	r3, #2
    cdbc:	beq	cde8 <coda_grib_reopen+0x384>
    cdc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
    cdc4:	ldr	r2, [fp, #-56]	; 0xffffffc8
    cdc8:	movw	r1, #0
    cdcc:	movt	r1, #0
    cdd0:	mvn	r0, #199	; 0xc7
    cdd4:	bl	0 <coda_set_error>
    cdd8:	ldr	r0, [fp, #-52]	; 0xffffffcc
    cddc:	bl	d120 <coda_grib_close>
    cde0:	mvn	r3, #0
    cde4:	b	d0fc <coda_grib_reopen+0x698>
    cde8:	mrc	15, 0, r2, cr13, cr0, {3}
    cdec:	ldr	r3, [pc, #808]	; d11c <coda_grib_reopen+0x6b8>
    cdf0:	ldr	r3, [r2, r3]
    cdf4:	add	r3, r3, #564	; 0x234
    cdf8:	ldr	r3, [r3]
    cdfc:	mov	r1, #0
    ce00:	mov	r0, r3
    ce04:	bl	0 <coda_mem_record_new>
    ce08:	str	r0, [fp, #-60]	; 0xffffffc4
    ce0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
    ce10:	cmp	r3, #1
    ce14:	bne	cefc <coda_grib_reopen+0x498>
    ce18:	ldrb	r3, [fp, #-88]	; 0xffffffa8
    ce1c:	lsl	r2, r3, #8
    ce20:	ldrb	r3, [fp, #-87]	; 0xffffffa9
    ce24:	add	r3, r2, r3
    ce28:	lsl	r2, r3, #8
    ce2c:	ldrb	r3, [fp, #-86]	; 0xffffffaa
    ce30:	add	r3, r2, r3
    ce34:	mov	r2, r3
    ce38:	asr	r3, r2, #31
    ce3c:	strd	r2, [fp, #-100]	; 0xffffff9c
    ce40:	mrc	15, 0, r2, cr13, cr0, {3}
    ce44:	ldr	r3, [pc, #720]	; d11c <coda_grib_reopen+0x6b8>
    ce48:	ldr	r3, [r2, r3]
    ce4c:	add	r3, r3, #272	; 0x110
    ce50:	ldr	r3, [r3]
    ce54:	mov	r1, #0
    ce58:	mov	r0, r3
    ce5c:	bl	0 <coda_mem_record_new>
    ce60:	str	r0, [fp, #-48]	; 0xffffffd0
    ce64:	ldr	r3, [fp, #-60]	; 0xffffffc4
    ce68:	ldr	r2, [r3, #20]
    ce6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
    ce70:	str	r3, [r2]
    ce74:	mrc	15, 0, r2, cr13, cr0, {3}
    ce78:	ldr	r3, [pc, #668]	; d11c <coda_grib_reopen+0x6b8>
    ce7c:	ldr	r3, [r2, r3]
    ce80:	add	r3, r3, #12
    ce84:	ldr	r0, [r3]
    ce88:	mov	r3, #1
    ce8c:	ldr	r2, [fp, #-52]	; 0xffffffcc
    ce90:	mov	r1, #0
    ce94:	bl	0 <coda_mem_uint8_new>
    ce98:	str	r0, [fp, #-64]	; 0xffffffc0
    ce9c:	mov	r3, #0
    cea0:	ldr	r2, [fp, #-64]	; 0xffffffc0
    cea4:	movw	r1, #0
    cea8:	movt	r1, #0
    ceac:	ldr	r0, [fp, #-48]	; 0xffffffd0
    ceb0:	bl	0 <coda_mem_record_add_field>
    ceb4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    ceb8:	adds	r1, r2, #8
    cebc:	str	r1, [fp, #-124]	; 0xffffff84
    cec0:	adc	r3, r3, #0
    cec4:	str	r3, [fp, #-120]	; 0xffffff88
    cec8:	ldrd	r2, [fp, #-124]	; 0xffffff84
    cecc:	ldr	r1, [fp, #-48]	; 0xffffffd0
    ced0:	ldr	r0, [fp, #-52]	; 0xffffffcc
    ced4:	bl	8300 <read_grib1_message>
    ced8:	mov	r3, r0
    cedc:	cmp	r3, #0
    cee0:	beq	d060 <coda_grib_reopen+0x5fc>
    cee4:	ldr	r0, [fp, #-60]	; 0xffffffc4
    cee8:	bl	0 <coda_dynamic_type_delete>
    ceec:	ldr	r0, [fp, #-52]	; 0xffffffcc
    cef0:	bl	d120 <coda_grib_close>
    cef4:	mvn	r3, #0
    cef8:	b	d0fc <coda_grib_reopen+0x698>
    cefc:	ldr	r3, [fp, #-52]	; 0xffffffcc
    cf00:	ldr	r1, [r3, #52]	; 0x34
    cf04:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    cf08:	adds	r0, r2, #8
    cf0c:	str	r0, [fp, #-132]	; 0xffffff7c
    cf10:	adc	r3, r3, #0
    cf14:	str	r3, [fp, #-128]	; 0xffffff80
    cf18:	sub	r3, fp, #100	; 0x64
    cf1c:	str	r3, [sp, #8]
    cf20:	mov	r2, #8
    cf24:	mov	r3, #0
    cf28:	strd	r2, [sp]
    cf2c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
    cf30:	mov	r0, r1
    cf34:	bl	0 <read_bytes>
    cf38:	mov	r3, r0
    cf3c:	cmp	r3, #0
    cf40:	bge	cf54 <coda_grib_reopen+0x4f0>
    cf44:	ldr	r0, [fp, #-52]	; 0xffffffcc
    cf48:	bl	d120 <coda_grib_close>
    cf4c:	mvn	r3, #0
    cf50:	b	d0fc <coda_grib_reopen+0x698>
    cf54:	sub	r3, fp, #100	; 0x64
    cf58:	mov	r0, r3
    cf5c:	bl	41c <swap8>
    cf60:	mrc	15, 0, r2, cr13, cr0, {3}
    cf64:	ldr	r3, [pc, #432]	; d11c <coda_grib_reopen+0x6b8>
    cf68:	ldr	r3, [r2, r3]
    cf6c:	add	r3, r3, #560	; 0x230
    cf70:	ldr	r3, [r3]
    cf74:	mov	r1, #0
    cf78:	mov	r0, r3
    cf7c:	bl	0 <coda_mem_record_new>
    cf80:	str	r0, [fp, #-48]	; 0xffffffd0
    cf84:	ldr	r3, [fp, #-60]	; 0xffffffc4
    cf88:	ldr	r3, [r3, #20]
    cf8c:	add	r2, r3, #4
    cf90:	ldr	r3, [fp, #-48]	; 0xffffffd0
    cf94:	str	r3, [r2]
    cf98:	mrc	15, 0, r2, cr13, cr0, {3}
    cf9c:	ldr	r3, [pc, #376]	; d11c <coda_grib_reopen+0x6b8>
    cfa0:	ldr	r3, [r2, r3]
    cfa4:	add	r3, r3, #284	; 0x11c
    cfa8:	ldr	r0, [r3]
    cfac:	mov	r3, #2
    cfb0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cfb4:	mov	r1, #0
    cfb8:	bl	0 <coda_mem_uint8_new>
    cfbc:	str	r0, [fp, #-64]	; 0xffffffc0
    cfc0:	mov	r3, #0
    cfc4:	ldr	r2, [fp, #-64]	; 0xffffffc0
    cfc8:	movw	r1, #0
    cfcc:	movt	r1, #0
    cfd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
    cfd4:	bl	0 <coda_mem_record_add_field>
    cfd8:	mrc	15, 0, r2, cr13, cr0, {3}
    cfdc:	ldr	r3, [pc, #312]	; d11c <coda_grib_reopen+0x6b8>
    cfe0:	ldr	r3, [r2, r3]
    cfe4:	add	r3, r3, #324	; 0x144
    cfe8:	ldr	r0, [r3]
    cfec:	ldrb	r3, [fp, #-86]	; 0xffffffaa
    cff0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    cff4:	mov	r1, #0
    cff8:	bl	0 <coda_mem_uint8_new>
    cffc:	str	r0, [fp, #-64]	; 0xffffffc0
    d000:	mov	r3, #0
    d004:	ldr	r2, [fp, #-64]	; 0xffffffc0
    d008:	movw	r1, #0
    d00c:	movt	r1, #0
    d010:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d014:	bl	0 <coda_mem_record_add_field>
    d018:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    d01c:	adds	r1, r2, #16
    d020:	str	r1, [fp, #-140]	; 0xffffff74
    d024:	adc	r3, r3, #0
    d028:	str	r3, [fp, #-136]	; 0xffffff78
    d02c:	ldrd	r2, [fp, #-140]	; 0xffffff74
    d030:	ldr	r1, [fp, #-48]	; 0xffffffd0
    d034:	ldr	r0, [fp, #-52]	; 0xffffffcc
    d038:	bl	a0f0 <read_grib2_message>
    d03c:	mov	r3, r0
    d040:	cmp	r3, #0
    d044:	beq	d060 <coda_grib_reopen+0x5fc>
    d048:	ldr	r0, [fp, #-60]	; 0xffffffc4
    d04c:	bl	0 <coda_dynamic_type_delete>
    d050:	ldr	r0, [fp, #-52]	; 0xffffffcc
    d054:	bl	d120 <coda_grib_close>
    d058:	mvn	r3, #0
    d05c:	b	d0fc <coda_grib_reopen+0x698>
    d060:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d064:	ldr	r3, [r3, #20]
    d068:	ldr	r1, [fp, #-60]	; 0xffffffc4
    d06c:	mov	r0, r3
    d070:	bl	0 <coda_mem_array_add_element>
    d074:	mov	r3, r0
    d078:	cmp	r3, #0
    d07c:	beq	d098 <coda_grib_reopen+0x634>
    d080:	ldr	r0, [fp, #-48]	; 0xffffffd0
    d084:	bl	0 <coda_dynamic_type_delete>
    d088:	ldr	r0, [fp, #-52]	; 0xffffffcc
    d08c:	bl	d120 <coda_grib_close>
    d090:	mvn	r3, #0
    d094:	b	d0fc <coda_grib_reopen+0x698>
    d098:	ldrd	r0, [fp, #-100]	; 0xffffff9c
    d09c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    d0a0:	adds	ip, r2, r0
    d0a4:	str	ip, [fp, #-156]	; 0xffffff64
    d0a8:	adc	r3, r3, r1
    d0ac:	str	r3, [fp, #-152]	; 0xffffff68
    d0b0:	ldrd	r2, [fp, #-156]	; 0xffffff64
    d0b4:	strd	r2, [fp, #-44]	; 0xffffffd4
    d0b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
    d0bc:	add	r3, r3, #1
    d0c0:	str	r3, [fp, #-32]	; 0xffffffe0
    d0c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
    d0c8:	ldrd	r2, [r3, #8]
    d0cc:	subs	r6, r2, #1
    d0d0:	sbc	r7, r3, #0
    d0d4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
    d0d8:	cmp	r2, r6
    d0dc:	sbcs	r3, r3, r7
    d0e0:	blt	cc30 <coda_grib_reopen+0x1cc>
    d0e4:	b	d0ec <coda_grib_reopen+0x688>
    d0e8:	nop	{0}
    d0ec:	ldr	r3, [fp, #-104]	; 0xffffff98
    d0f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
    d0f4:	str	r2, [r3]
    d0f8:	mov	r3, #0
    d0fc:	mov	r0, r3
    d100:	sub	sp, fp, #28
    d104:	ldrd	r4, [sp]
    d108:	ldrd	r6, [sp, #8]
    d10c:	ldrd	r8, [sp, #16]
    d110:	ldr	fp, [sp, #24]
    d114:	add	sp, sp, #28
    d118:	pop	{pc}		; (ldr pc, [sp], #4)
    d11c:	.word	0x00000000

0000d120 <coda_grib_close>:
    d120:	str	fp, [sp, #-8]!
    d124:	str	lr, [sp, #4]
    d128:	add	fp, sp, #4
    d12c:	sub	sp, sp, #16
    d130:	str	r0, [fp, #-16]
    d134:	ldr	r3, [fp, #-16]
    d138:	str	r3, [fp, #-8]
    d13c:	ldr	r3, [fp, #-8]
    d140:	ldr	r3, [r3]
    d144:	cmp	r3, #0
    d148:	beq	d15c <coda_grib_close+0x3c>
    d14c:	ldr	r3, [fp, #-8]
    d150:	ldr	r3, [r3]
    d154:	mov	r0, r3
    d158:	bl	0 <free>
    d15c:	ldr	r3, [fp, #-8]
    d160:	ldr	r3, [r3, #20]
    d164:	cmp	r3, #0
    d168:	beq	d17c <coda_grib_close+0x5c>
    d16c:	ldr	r3, [fp, #-8]
    d170:	ldr	r3, [r3, #20]
    d174:	mov	r0, r3
    d178:	bl	0 <coda_dynamic_type_delete>
    d17c:	ldr	r3, [fp, #-8]
    d180:	ldr	r3, [r3, #48]	; 0x30
    d184:	cmp	r3, #0
    d188:	beq	d19c <coda_grib_close+0x7c>
    d18c:	ldr	r3, [fp, #-8]
    d190:	ldr	r3, [r3, #48]	; 0x30
    d194:	mov	r0, r3
    d198:	bl	0 <free>
    d19c:	ldr	r3, [fp, #-8]
    d1a0:	ldr	r3, [r3, #52]	; 0x34
    d1a4:	cmp	r3, #0
    d1a8:	beq	d1bc <coda_grib_close+0x9c>
    d1ac:	ldr	r3, [fp, #-8]
    d1b0:	ldr	r3, [r3, #52]	; 0x34
    d1b4:	mov	r0, r3
    d1b8:	bl	0 <coda_bin_close>
    d1bc:	ldr	r0, [fp, #-8]
    d1c0:	bl	0 <free>
    d1c4:	mov	r3, #0
    d1c8:	mov	r0, r3
    d1cc:	sub	sp, fp, #4
    d1d0:	ldr	fp, [sp]
    d1d4:	add	sp, sp, #4
    d1d8:	pop	{pc}		; (ldr pc, [sp], #4)
