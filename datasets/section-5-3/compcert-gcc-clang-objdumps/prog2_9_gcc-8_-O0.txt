
../compcert-repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

000109a0 <.init>:
   109a0:	push	{r3, lr}
   109a4:	bl	10ad4 <_start@@Base+0x3c>
   109a8:	pop	{r3, pc}

Disassembly of section .plt:

000109ac <calloc@plt-0x14>:
   109ac:	push	{lr}		; (str lr, [sp, #-4]!)
   109b0:	ldr	lr, [pc, #4]	; 109bc <calloc@plt-0x4>
   109b4:	add	lr, pc, lr
   109b8:	ldr	pc, [lr, #8]!
   109bc:	andeq	r1, r1, r4, asr #12

000109c0 <calloc@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #69632	; 0x11000
   109c8:	ldr	pc, [ip, #1604]!	; 0x644

000109cc <strcmp@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #69632	; 0x11000
   109d4:	ldr	pc, [ip, #1596]!	; 0x63c

000109d8 <printf@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #69632	; 0x11000
   109e0:	ldr	pc, [ip, #1588]!	; 0x634

000109e4 <__isoc99_fscanf@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #69632	; 0x11000
   109ec:	ldr	pc, [ip, #1580]!	; 0x62c

000109f0 <fopen@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #69632	; 0x11000
   109f8:	ldr	pc, [ip, #1572]!	; 0x624

000109fc <fflush@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #69632	; 0x11000
   10a04:	ldr	pc, [ip, #1564]!	; 0x61c

00010a08 <free@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #69632	; 0x11000
   10a10:	ldr	pc, [ip, #1556]!	; 0x614

00010a14 <fgets@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #69632	; 0x11000
   10a1c:	ldr	pc, [ip, #1548]!	; 0x60c

00010a20 <strdup@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #69632	; 0x11000
   10a28:	ldr	pc, [ip, #1540]!	; 0x604

00010a2c <puts@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #69632	; 0x11000
   10a34:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a38 <malloc@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #69632	; 0x11000
   10a40:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a44 <__libc_start_main@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a50 <__gmon_start__@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a5c <feof@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a68 <strlen@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a74 <putchar@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a80 <fclose@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a8c <abort@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1468]!	; 0x5bc

Disassembly of section .text:

00010a98 <_start@@Base>:
   10a98:	mov	fp, #0
   10a9c:	mov	lr, #0
   10aa0:	pop	{r1}		; (ldr r1, [sp], #4)
   10aa4:	mov	r2, sp
   10aa8:	push	{r2}		; (str r2, [sp, #-4]!)
   10aac:	push	{r0}		; (str r0, [sp, #-4]!)
   10ab0:	ldr	ip, [pc, #16]	; 10ac8 <_start@@Base+0x30>
   10ab4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ab8:	ldr	r0, [pc, #12]	; 10acc <_start@@Base+0x34>
   10abc:	ldr	r3, [pc, #12]	; 10ad0 <_start@@Base+0x38>
   10ac0:	bl	10a44 <__libc_start_main@plt>
   10ac4:	bl	10a8c <abort@plt>
   10ac8:	muleq	r1, ip, sl
   10acc:	strdeq	r1, [r1], -r0
   10ad0:	andeq	r1, r1, ip, lsr sl
   10ad4:	ldr	r3, [pc, #20]	; 10af0 <_start@@Base+0x58>
   10ad8:	ldr	r2, [pc, #20]	; 10af4 <_start@@Base+0x5c>
   10adc:	add	r3, pc, r3
   10ae0:	ldr	r2, [r3, r2]
   10ae4:	cmp	r2, #0
   10ae8:	bxeq	lr
   10aec:	b	10a50 <__gmon_start__@plt>
   10af0:	andeq	r1, r1, ip, lsl r5
   10af4:	andeq	r0, r0, r4, asr r0
   10af8:	ldr	r0, [pc, #24]	; 10b18 <_start@@Base+0x80>
   10afc:	ldr	r3, [pc, #24]	; 10b1c <_start@@Base+0x84>
   10b00:	cmp	r3, r0
   10b04:	bxeq	lr
   10b08:	ldr	r3, [pc, #16]	; 10b20 <_start@@Base+0x88>
   10b0c:	cmp	r3, #0
   10b10:	bxeq	lr
   10b14:	bx	r3
   10b18:	andeq	r2, r2, r0, rrx
   10b1c:	andeq	r2, r2, r0, rrx
   10b20:	andeq	r0, r0, r0
   10b24:	ldr	r0, [pc, #36]	; 10b50 <_start@@Base+0xb8>
   10b28:	ldr	r1, [pc, #36]	; 10b54 <_start@@Base+0xbc>
   10b2c:	sub	r1, r1, r0
   10b30:	asr	r1, r1, #2
   10b34:	add	r1, r1, r1, lsr #31
   10b38:	asrs	r1, r1, #1
   10b3c:	bxeq	lr
   10b40:	ldr	r3, [pc, #16]	; 10b58 <_start@@Base+0xc0>
   10b44:	cmp	r3, #0
   10b48:	bxeq	lr
   10b4c:	bx	r3
   10b50:	andeq	r2, r2, r0, rrx
   10b54:	andeq	r2, r2, r0, rrx
   10b58:	andeq	r0, r0, r0
   10b5c:	push	{r4, lr}
   10b60:	ldr	r4, [pc, #24]	; 10b80 <_start@@Base+0xe8>
   10b64:	ldrb	r3, [r4]
   10b68:	cmp	r3, #0
   10b6c:	popne	{r4, pc}
   10b70:	bl	10af8 <_start@@Base+0x60>
   10b74:	mov	r3, #1
   10b78:	strb	r3, [r4]
   10b7c:	pop	{r4, pc}
   10b80:	andeq	r2, r2, r4, rrx
   10b84:	b	10b24 <_start@@Base+0x8c>

00010b88 <fp_insere@@Base>:
   10b88:	str	fp, [sp, #-8]!
   10b8c:	str	lr, [sp, #4]
   10b90:	add	fp, sp, #4
   10b94:	sub	sp, sp, #32
   10b98:	str	r0, [fp, #-24]	; 0xffffffe8
   10b9c:	str	r1, [fp, #-28]	; 0xffffffe4
   10ba0:	str	r2, [fp, #-32]	; 0xffffffe0
   10ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ba8:	cmp	r3, #0
   10bac:	bne	10bb8 <fp_insere@@Base+0x30>
   10bb0:	mvn	r3, #0
   10bb4:	b	10ce0 <fp_insere@@Base+0x158>
   10bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bbc:	ldr	r2, [r3]
   10bc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bc4:	ldr	r3, [r3, #4]
   10bc8:	cmp	r2, r3
   10bcc:	bne	10bd8 <fp_insere@@Base+0x50>
   10bd0:	mov	r3, #0
   10bd4:	b	10ce0 <fp_insere@@Base+0x158>
   10bd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10be0:	bl	11684 <elemento_cria@@Base>
   10be4:	str	r0, [fp, #-16]
   10be8:	mov	r3, #0
   10bec:	str	r3, [fp, #-8]
   10bf0:	b	10c30 <fp_insere@@Base+0xa8>
   10bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bf8:	ldr	r2, [r3, #8]
   10bfc:	ldr	r3, [fp, #-8]
   10c00:	lsl	r3, r3, #2
   10c04:	add	r3, r2, r3
   10c08:	ldr	r3, [r3]
   10c0c:	ldr	r1, [fp, #-16]
   10c10:	mov	r0, r3
   10c14:	bl	116fc <maior_que@@Base>
   10c18:	mov	r3, r0
   10c1c:	cmp	r3, #0
   10c20:	beq	10c48 <fp_insere@@Base+0xc0>
   10c24:	ldr	r3, [fp, #-8]
   10c28:	add	r3, r3, #1
   10c2c:	str	r3, [fp, #-8]
   10c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c34:	ldr	r3, [r3]
   10c38:	ldr	r2, [fp, #-8]
   10c3c:	cmp	r2, r3
   10c40:	blt	10bf4 <fp_insere@@Base+0x6c>
   10c44:	b	10c4c <fp_insere@@Base+0xc4>
   10c48:	nop	{0}
   10c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c50:	ldr	r3, [r3]
   10c54:	str	r3, [fp, #-12]
   10c58:	b	10c9c <fp_insere@@Base+0x114>
   10c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c60:	ldr	r2, [r3, #8]
   10c64:	ldr	r3, [fp, #-12]
   10c68:	lsl	r3, r3, #2
   10c6c:	add	r2, r2, r3
   10c70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c74:	ldr	r1, [r3, #8]
   10c78:	ldr	r3, [fp, #-12]
   10c7c:	add	r3, r3, #1
   10c80:	lsl	r3, r3, #2
   10c84:	add	r3, r1, r3
   10c88:	ldr	r2, [r2]
   10c8c:	str	r2, [r3]
   10c90:	ldr	r3, [fp, #-12]
   10c94:	sub	r3, r3, #1
   10c98:	str	r3, [fp, #-12]
   10c9c:	ldr	r2, [fp, #-12]
   10ca0:	ldr	r3, [fp, #-8]
   10ca4:	cmp	r2, r3
   10ca8:	bge	10c5c <fp_insere@@Base+0xd4>
   10cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cb0:	ldr	r2, [r3, #8]
   10cb4:	ldr	r3, [fp, #-8]
   10cb8:	lsl	r3, r3, #2
   10cbc:	add	r3, r2, r3
   10cc0:	ldr	r2, [fp, #-16]
   10cc4:	str	r2, [r3]
   10cc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ccc:	ldr	r3, [r3]
   10cd0:	add	r2, r3, #1
   10cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cd8:	str	r2, [r3]
   10cdc:	mov	r3, #1
   10ce0:	mov	r0, r3
   10ce4:	sub	sp, fp, #4
   10ce8:	ldr	fp, [sp]
   10cec:	add	sp, sp, #4
   10cf0:	pop	{pc}		; (ldr pc, [sp], #4)

00010cf4 <fp_remove@@Base>:
   10cf4:	push	{fp}		; (str fp, [sp, #-4]!)
   10cf8:	add	fp, sp, #0
   10cfc:	sub	sp, sp, #20
   10d00:	str	r0, [fp, #-16]
   10d04:	ldr	r3, [fp, #-16]
   10d08:	cmp	r3, #0
   10d0c:	beq	10d20 <fp_remove@@Base+0x2c>
   10d10:	ldr	r3, [fp, #-16]
   10d14:	ldr	r3, [r3]
   10d18:	cmp	r3, #0
   10d1c:	bne	10d28 <fp_remove@@Base+0x34>
   10d20:	mov	r3, #0
   10d24:	b	10db4 <fp_remove@@Base+0xc0>
   10d28:	ldr	r3, [fp, #-16]
   10d2c:	ldr	r3, [r3, #8]
   10d30:	ldr	r3, [r3]
   10d34:	str	r3, [fp, #-12]
   10d38:	mov	r3, #0
   10d3c:	str	r3, [fp, #-8]
   10d40:	b	10d84 <fp_remove@@Base+0x90>
   10d44:	ldr	r3, [fp, #-16]
   10d48:	ldr	r2, [r3, #8]
   10d4c:	ldr	r3, [fp, #-8]
   10d50:	add	r3, r3, #1
   10d54:	lsl	r3, r3, #2
   10d58:	add	r2, r2, r3
   10d5c:	ldr	r3, [fp, #-16]
   10d60:	ldr	r1, [r3, #8]
   10d64:	ldr	r3, [fp, #-8]
   10d68:	lsl	r3, r3, #2
   10d6c:	add	r3, r1, r3
   10d70:	ldr	r2, [r2]
   10d74:	str	r2, [r3]
   10d78:	ldr	r3, [fp, #-8]
   10d7c:	add	r3, r3, #1
   10d80:	str	r3, [fp, #-8]
   10d84:	ldr	r3, [fp, #-16]
   10d88:	ldr	r3, [r3]
   10d8c:	ldr	r2, [fp, #-8]
   10d90:	cmp	r2, r3
   10d94:	blt	10d44 <fp_remove@@Base+0x50>
   10d98:	ldr	r3, [fp, #-16]
   10d9c:	ldr	r3, [r3]
   10da0:	sub	r2, r3, #1
   10da4:	ldr	r3, [fp, #-16]
   10da8:	str	r2, [r3]
   10dac:	ldr	r3, [fp, #-12]
   10db0:	ldr	r3, [r3, #4]
   10db4:	mov	r0, r3
   10db8:	add	sp, fp, #0
   10dbc:	pop	{fp}		; (ldr fp, [sp], #4)
   10dc0:	bx	lr

00010dc4 <fp_carrega@@Base>:
   10dc4:	str	fp, [sp, #-8]!
   10dc8:	str	lr, [sp, #4]
   10dcc:	add	fp, sp, #4
   10dd0:	sub	sp, sp, #272	; 0x110
   10dd4:	str	r0, [fp, #-272]	; 0xfffffef0
   10dd8:	str	r1, [fp, #-276]	; 0xfffffeec
   10ddc:	movw	r1, #6828	; 0x1aac
   10de0:	movt	r1, #1
   10de4:	ldr	r0, [fp, #-276]	; 0xfffffeec
   10de8:	bl	109f0 <fopen@plt>
   10dec:	str	r0, [fp, #-8]
   10df0:	ldr	r3, [fp, #-8]
   10df4:	cmp	r3, #0
   10df8:	bne	10e70 <fp_carrega@@Base+0xac>
   10dfc:	movw	r0, #6832	; 0x1ab0
   10e00:	movt	r0, #1
   10e04:	bl	10a2c <puts@plt>
   10e08:	b	10e8c <fp_carrega@@Base+0xc8>
   10e0c:	sub	r3, fp, #268	; 0x10c
   10e10:	mov	r2, r3
   10e14:	movw	r1, #6868	; 0x1ad4
   10e18:	movt	r1, #1
   10e1c:	ldr	r0, [fp, #-8]
   10e20:	bl	109e4 <__isoc99_fscanf@plt>
   10e24:	sub	r3, fp, #264	; 0x108
   10e28:	ldr	r2, [fp, #-8]
   10e2c:	mov	r1, #256	; 0x100
   10e30:	mov	r0, r3
   10e34:	bl	10a14 <fgets@plt>
   10e38:	sub	r3, fp, #264	; 0x108
   10e3c:	mov	r0, r3
   10e40:	bl	10a68 <strlen@plt>
   10e44:	mov	r3, r0
   10e48:	sub	r3, r3, #1
   10e4c:	sub	r2, fp, #4
   10e50:	add	r3, r2, r3
   10e54:	mov	r2, #0
   10e58:	strb	r2, [r3, #-260]	; 0xfffffefc
   10e5c:	ldr	r2, [fp, #-268]	; 0xfffffef4
   10e60:	sub	r3, fp, #264	; 0x108
   10e64:	mov	r1, r3
   10e68:	ldr	r0, [fp, #-272]	; 0xfffffef0
   10e6c:	bl	10b88 <fp_insere@@Base>
   10e70:	ldr	r0, [fp, #-8]
   10e74:	bl	10a5c <feof@plt>
   10e78:	mov	r3, r0
   10e7c:	cmp	r3, #0
   10e80:	beq	10e0c <fp_carrega@@Base+0x48>
   10e84:	ldr	r0, [fp, #-8]
   10e88:	bl	10a80 <fclose@plt>
   10e8c:	sub	sp, fp, #4
   10e90:	ldr	fp, [sp]
   10e94:	add	sp, sp, #4
   10e98:	pop	{pc}		; (ldr pc, [sp], #4)

00010e9c <heap_insere@@Base>:
   10e9c:	str	fp, [sp, #-8]!
   10ea0:	str	lr, [sp, #4]
   10ea4:	add	fp, sp, #4
   10ea8:	sub	sp, sp, #32
   10eac:	str	r0, [fp, #-24]	; 0xffffffe8
   10eb0:	str	r1, [fp, #-28]	; 0xffffffe4
   10eb4:	str	r2, [fp, #-32]	; 0xffffffe0
   10eb8:	str	r3, [fp, #-36]	; 0xffffffdc
   10ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ec0:	ldr	r2, [r3]
   10ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ec8:	ldr	r3, [r3, #4]
   10ecc:	cmp	r2, r3
   10ed0:	bne	10edc <heap_insere@@Base+0x40>
   10ed4:	mov	r3, #0
   10ed8:	b	10fd8 <heap_insere@@Base+0x13c>
   10edc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10ee0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10ee4:	bl	11684 <elemento_cria@@Base>
   10ee8:	str	r0, [fp, #-16]
   10eec:	mov	r3, #0
   10ef0:	str	r3, [fp, #-8]
   10ef4:	b	10f04 <heap_insere@@Base+0x68>
   10ef8:	ldr	r3, [fp, #-8]
   10efc:	add	r3, r3, #1
   10f00:	str	r3, [fp, #-8]
   10f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f08:	ldr	r3, [r3]
   10f0c:	ldr	r2, [fp, #-8]
   10f10:	cmp	r2, r3
   10f14:	bge	10f4c <heap_insere@@Base+0xb0>
   10f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f1c:	ldr	r2, [r3, #8]
   10f20:	ldr	r3, [fp, #-8]
   10f24:	lsl	r3, r3, #2
   10f28:	add	r3, r2, r3
   10f2c:	ldr	r2, [r3]
   10f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f34:	ldr	r1, [fp, #-16]
   10f38:	mov	r0, r2
   10f3c:	blx	r3
   10f40:	mov	r3, r0
   10f44:	cmp	r3, #1
   10f48:	bne	10ef8 <heap_insere@@Base+0x5c>
   10f4c:	ldr	r3, [fp, #-8]
   10f50:	str	r3, [fp, #-12]
   10f54:	b	10f98 <heap_insere@@Base+0xfc>
   10f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f5c:	ldr	r2, [r3, #8]
   10f60:	ldr	r3, [fp, #-12]
   10f64:	lsl	r3, r3, #2
   10f68:	add	r2, r2, r3
   10f6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f70:	ldr	r1, [r3, #8]
   10f74:	ldr	r3, [fp, #-12]
   10f78:	add	r3, r3, #1
   10f7c:	lsl	r3, r3, #2
   10f80:	add	r3, r1, r3
   10f84:	ldr	r2, [r2]
   10f88:	str	r2, [r3]
   10f8c:	ldr	r3, [fp, #-12]
   10f90:	sub	r3, r3, #1
   10f94:	str	r3, [fp, #-12]
   10f98:	ldr	r3, [fp, #-12]
   10f9c:	cmp	r3, #0
   10fa0:	bgt	10f58 <heap_insere@@Base+0xbc>
   10fa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fa8:	ldr	r2, [r3, #8]
   10fac:	ldr	r3, [fp, #-8]
   10fb0:	lsl	r3, r3, #2
   10fb4:	add	r3, r2, r3
   10fb8:	ldr	r2, [fp, #-16]
   10fbc:	str	r2, [r3]
   10fc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fc4:	ldr	r3, [r3]
   10fc8:	add	r2, r3, #1
   10fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fd0:	str	r2, [r3]
   10fd4:	ldr	r3, [fp, #-8]
   10fd8:	mov	r0, r3
   10fdc:	sub	sp, fp, #4
   10fe0:	ldr	fp, [sp]
   10fe4:	add	sp, sp, #4
   10fe8:	pop	{pc}		; (ldr pc, [sp], #4)

00010fec <heap_remove@@Base>:
   10fec:	push	{fp}		; (str fp, [sp, #-4]!)
   10ff0:	add	fp, sp, #0
   10ff4:	sub	sp, sp, #12
   10ff8:	str	r0, [fp, #-8]
   10ffc:	str	r1, [fp, #-12]
   11000:	mov	r3, #0
   11004:	mov	r0, r3
   11008:	add	sp, fp, #0
   1100c:	pop	{fp}		; (ldr fp, [sp], #4)
   11010:	bx	lr

00011014 <heap_carrega@@Base>:
   11014:	str	fp, [sp, #-8]!
   11018:	str	lr, [sp, #4]
   1101c:	add	fp, sp, #4
   11020:	sub	sp, sp, #280	; 0x118
   11024:	str	r0, [fp, #-272]	; 0xfffffef0
   11028:	str	r1, [fp, #-276]	; 0xfffffeec
   1102c:	str	r2, [fp, #-280]	; 0xfffffee8
   11030:	movw	r1, #6828	; 0x1aac
   11034:	movt	r1, #1
   11038:	ldr	r0, [fp, #-280]	; 0xfffffee8
   1103c:	bl	109f0 <fopen@plt>
   11040:	str	r0, [fp, #-8]
   11044:	ldr	r3, [fp, #-8]
   11048:	cmp	r3, #0
   1104c:	bne	110c4 <heap_carrega@@Base+0xb0>
   11050:	movw	r0, #6832	; 0x1ab0
   11054:	movt	r0, #1
   11058:	bl	10a2c <puts@plt>
   1105c:	b	110e0 <heap_carrega@@Base+0xcc>
   11060:	sub	r3, fp, #268	; 0x10c
   11064:	mov	r2, r3
   11068:	movw	r1, #6868	; 0x1ad4
   1106c:	movt	r1, #1
   11070:	ldr	r0, [fp, #-8]
   11074:	bl	109e4 <__isoc99_fscanf@plt>
   11078:	sub	r3, fp, #264	; 0x108
   1107c:	ldr	r2, [fp, #-8]
   11080:	mov	r1, #256	; 0x100
   11084:	mov	r0, r3
   11088:	bl	10a14 <fgets@plt>
   1108c:	sub	r3, fp, #264	; 0x108
   11090:	mov	r0, r3
   11094:	bl	10a68 <strlen@plt>
   11098:	mov	r3, r0
   1109c:	sub	r3, r3, #1
   110a0:	sub	r2, fp, #4
   110a4:	add	r3, r2, r3
   110a8:	mov	r2, #0
   110ac:	strb	r2, [r3, #-260]	; 0xfffffefc
   110b0:	ldr	r3, [fp, #-268]	; 0xfffffef4
   110b4:	sub	r2, fp, #264	; 0x108
   110b8:	ldr	r1, [fp, #-276]	; 0xfffffeec
   110bc:	ldr	r0, [fp, #-272]	; 0xfffffef0
   110c0:	bl	10e9c <heap_insere@@Base>
   110c4:	ldr	r0, [fp, #-8]
   110c8:	bl	10a5c <feof@plt>
   110cc:	mov	r3, r0
   110d0:	cmp	r3, #0
   110d4:	beq	11060 <heap_carrega@@Base+0x4c>
   110d8:	ldr	r0, [fp, #-8]
   110dc:	bl	10a80 <fclose@plt>
   110e0:	sub	sp, fp, #4
   110e4:	ldr	fp, [sp]
   110e8:	add	sp, sp, #4
   110ec:	pop	{pc}		; (ldr pc, [sp], #4)

000110f0 <main@@Base>:
   110f0:	str	fp, [sp, #-8]!
   110f4:	str	lr, [sp, #4]
   110f8:	add	fp, sp, #4
   110fc:	sub	sp, sp, #200	; 0xc8
   11100:	str	r0, [fp, #-200]	; 0xffffff38
   11104:	str	r1, [fp, #-204]	; 0xffffff34
   11108:	mov	r0, #42	; 0x2a
   1110c:	bl	11530 <vetor_cria@@Base>
   11110:	str	r0, [fp, #-12]
   11114:	movw	r0, #6872	; 0x1ad8
   11118:	movt	r0, #1
   1111c:	bl	10a2c <puts@plt>
   11120:	movw	r1, #6928	; 0x1b10
   11124:	movt	r1, #1
   11128:	ldr	r0, [fp, #-12]
   1112c:	bl	10dc4 <fp_carrega@@Base>
   11130:	movw	r3, #8296	; 0x2068
   11134:	movt	r3, #2
   11138:	ldr	r3, [r3]
   1113c:	mov	r1, r3
   11140:	movw	r0, #6940	; 0x1b1c
   11144:	movt	r0, #1
   11148:	bl	109d8 <printf@plt>
   1114c:	ldr	r0, [fp, #-12]
   11150:	bl	11854 <vetor_imprime@@Base>
   11154:	ldr	r3, [fp, #-12]
   11158:	ldr	r3, [r3]
   1115c:	cmp	r3, #42	; 0x2a
   11160:	beq	11178 <main@@Base+0x88>
   11164:	movw	r0, #6996	; 0x1b54
   11168:	movt	r0, #1
   1116c:	bl	10a2c <puts@plt>
   11170:	mov	r3, #1
   11174:	b	1151c <main@@Base+0x42c>
   11178:	ldr	r0, [fp, #-12]
   1117c:	bl	10cf4 <fp_remove@@Base>
   11180:	mov	r3, r0
   11184:	mov	r1, r3
   11188:	movw	r0, #7036	; 0x1b7c
   1118c:	movt	r0, #1
   11190:	bl	109cc <strcmp@plt>
   11194:	mov	r3, r0
   11198:	cmp	r3, #0
   1119c:	beq	111b4 <main@@Base+0xc4>
   111a0:	movw	r0, #7056	; 0x1b90
   111a4:	movt	r0, #1
   111a8:	bl	10a2c <puts@plt>
   111ac:	mov	r3, #1
   111b0:	b	1151c <main@@Base+0x42c>
   111b4:	movw	r3, #8296	; 0x2068
   111b8:	movt	r3, #2
   111bc:	mov	r2, #0
   111c0:	str	r2, [r3]
   111c4:	ldr	r0, [fp, #-12]
   111c8:	bl	10cf4 <fp_remove@@Base>
   111cc:	movw	r3, #8296	; 0x2068
   111d0:	movt	r3, #2
   111d4:	ldr	r3, [r3]
   111d8:	mov	r1, r3
   111dc:	movw	r0, #7124	; 0x1bd4
   111e0:	movt	r0, #1
   111e4:	bl	109d8 <printf@plt>
   111e8:	movw	r3, #8296	; 0x2068
   111ec:	movt	r3, #2
   111f0:	mov	r2, #0
   111f4:	str	r2, [r3]
   111f8:	mov	r2, #99	; 0x63
   111fc:	movw	r1, #7176	; 0x1c08
   11200:	movt	r1, #1
   11204:	ldr	r0, [fp, #-12]
   11208:	bl	10b88 <fp_insere@@Base>
   1120c:	movw	r3, #8296	; 0x2068
   11210:	movt	r3, #2
   11214:	ldr	r3, [r3]
   11218:	mov	r1, r3
   1121c:	movw	r0, #7192	; 0x1c18
   11220:	movt	r0, #1
   11224:	bl	109d8 <printf@plt>
   11228:	ldr	r0, [fp, #-12]
   1122c:	bl	10cf4 <fp_remove@@Base>
   11230:	movw	r3, #8296	; 0x2068
   11234:	movt	r3, #2
   11238:	mov	r2, #0
   1123c:	str	r2, [r3]
   11240:	mov	r2, #0
   11244:	movw	r1, #7176	; 0x1c08
   11248:	movt	r1, #1
   1124c:	ldr	r0, [fp, #-12]
   11250:	bl	10b88 <fp_insere@@Base>
   11254:	movw	r3, #8296	; 0x2068
   11258:	movt	r3, #2
   1125c:	ldr	r3, [r3]
   11260:	mov	r1, r3
   11264:	movw	r0, #7264	; 0x1c60
   11268:	movt	r0, #1
   1126c:	bl	109d8 <printf@plt>
   11270:	ldr	r0, [fp, #-12]
   11274:	bl	10cf4 <fp_remove@@Base>
   11278:	movw	r3, #8296	; 0x2068
   1127c:	movt	r3, #2
   11280:	mov	r2, #0
   11284:	str	r2, [r3]
   11288:	mov	r2, #42	; 0x2a
   1128c:	movw	r1, #7176	; 0x1c08
   11290:	movt	r1, #1
   11294:	ldr	r0, [fp, #-12]
   11298:	bl	10b88 <fp_insere@@Base>
   1129c:	movw	r3, #8296	; 0x2068
   112a0:	movt	r3, #2
   112a4:	ldr	r3, [r3]
   112a8:	mov	r1, r3
   112ac:	movw	r0, #7336	; 0x1ca8
   112b0:	movt	r0, #1
   112b4:	bl	109d8 <printf@plt>
   112b8:	movw	r0, #7408	; 0x1cf0
   112bc:	movt	r0, #1
   112c0:	bl	10a2c <puts@plt>
   112c4:	mov	r0, #42	; 0x2a
   112c8:	bl	115d8 <vetor_criaHeap@@Base>
   112cc:	str	r0, [fp, #-16]
   112d0:	movw	r3, #5884	; 0x16fc
   112d4:	movt	r3, #1
   112d8:	str	r3, [fp, #-20]	; 0xffffffec
   112dc:	movw	r2, #6928	; 0x1b10
   112e0:	movt	r2, #1
   112e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   112e8:	ldr	r0, [fp, #-16]
   112ec:	bl	11014 <heap_carrega@@Base>
   112f0:	movw	r3, #8296	; 0x2068
   112f4:	movt	r3, #2
   112f8:	ldr	r3, [r3]
   112fc:	mov	r1, r3
   11300:	movw	r0, #7464	; 0x1d28
   11304:	movt	r0, #1
   11308:	bl	109d8 <printf@plt>
   1130c:	ldr	r0, [fp, #-16]
   11310:	bl	11944 <vetor_imprimeHeap@@Base>
   11314:	ldr	r3, [fp, #-16]
   11318:	ldr	r3, [r3]
   1131c:	cmp	r3, #42	; 0x2a
   11320:	beq	11338 <main@@Base+0x248>
   11324:	movw	r0, #7520	; 0x1d60
   11328:	movt	r0, #1
   1132c:	bl	10a2c <puts@plt>
   11330:	mov	r3, #1
   11334:	b	1151c <main@@Base+0x42c>
   11338:	ldr	r1, [fp, #-20]	; 0xffffffec
   1133c:	ldr	r0, [fp, #-16]
   11340:	bl	10fec <heap_remove@@Base>
   11344:	mov	r3, r0
   11348:	mov	r1, r3
   1134c:	movw	r0, #7036	; 0x1b7c
   11350:	movt	r0, #1
   11354:	bl	109cc <strcmp@plt>
   11358:	mov	r3, r0
   1135c:	cmp	r3, #0
   11360:	beq	11378 <main@@Base+0x288>
   11364:	movw	r0, #7056	; 0x1b90
   11368:	movt	r0, #1
   1136c:	bl	10a2c <puts@plt>
   11370:	mov	r3, #1
   11374:	b	1151c <main@@Base+0x42c>
   11378:	movw	r3, #8296	; 0x2068
   1137c:	movt	r3, #2
   11380:	mov	r2, #0
   11384:	str	r2, [r3]
   11388:	ldr	r1, [fp, #-20]	; 0xffffffec
   1138c:	ldr	r0, [fp, #-16]
   11390:	bl	10fec <heap_remove@@Base>
   11394:	movw	r3, #8296	; 0x2068
   11398:	movt	r3, #2
   1139c:	ldr	r3, [r3]
   113a0:	mov	r1, r3
   113a4:	movw	r0, #7560	; 0x1d88
   113a8:	movt	r0, #1
   113ac:	bl	109d8 <printf@plt>
   113b0:	movw	r3, #8296	; 0x2068
   113b4:	movt	r3, #2
   113b8:	mov	r2, #0
   113bc:	str	r2, [r3]
   113c0:	mov	r3, #99	; 0x63
   113c4:	movw	r2, #7176	; 0x1c08
   113c8:	movt	r2, #1
   113cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   113d0:	ldr	r0, [fp, #-16]
   113d4:	bl	10e9c <heap_insere@@Base>
   113d8:	movw	r3, #8296	; 0x2068
   113dc:	movt	r3, #2
   113e0:	ldr	r3, [r3]
   113e4:	mov	r1, r3
   113e8:	movw	r0, #7612	; 0x1dbc
   113ec:	movt	r0, #1
   113f0:	bl	109d8 <printf@plt>
   113f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   113f8:	ldr	r0, [fp, #-16]
   113fc:	bl	10fec <heap_remove@@Base>
   11400:	movw	r3, #8296	; 0x2068
   11404:	movt	r3, #2
   11408:	mov	r2, #0
   1140c:	str	r2, [r3]
   11410:	mov	r3, #0
   11414:	movw	r2, #7176	; 0x1c08
   11418:	movt	r2, #1
   1141c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11420:	ldr	r0, [fp, #-16]
   11424:	bl	10e9c <heap_insere@@Base>
   11428:	movw	r3, #8296	; 0x2068
   1142c:	movt	r3, #2
   11430:	ldr	r3, [r3]
   11434:	mov	r1, r3
   11438:	movw	r0, #7684	; 0x1e04
   1143c:	movt	r0, #1
   11440:	bl	109d8 <printf@plt>
   11444:	ldr	r1, [fp, #-20]	; 0xffffffec
   11448:	ldr	r0, [fp, #-16]
   1144c:	bl	10fec <heap_remove@@Base>
   11450:	movw	r3, #8296	; 0x2068
   11454:	movt	r3, #2
   11458:	mov	r2, #0
   1145c:	str	r2, [r3]
   11460:	mov	r3, #42	; 0x2a
   11464:	movw	r2, #7176	; 0x1c08
   11468:	movt	r2, #1
   1146c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11470:	ldr	r0, [fp, #-16]
   11474:	bl	10e9c <heap_insere@@Base>
   11478:	movw	r3, #8296	; 0x2068
   1147c:	movt	r3, #2
   11480:	ldr	r3, [r3]
   11484:	mov	r1, r3
   11488:	movw	r0, #7336	; 0x1ca8
   1148c:	movt	r0, #1
   11490:	bl	109d8 <printf@plt>
   11494:	mov	r0, #42	; 0x2a
   11498:	bl	115d8 <vetor_criaHeap@@Base>
   1149c:	str	r0, [fp, #-16]
   114a0:	movw	r3, #6052	; 0x17a4
   114a4:	movt	r3, #1
   114a8:	str	r3, [fp, #-24]	; 0xffffffe8
   114ac:	movw	r2, #6928	; 0x1b10
   114b0:	movt	r2, #1
   114b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114b8:	ldr	r0, [fp, #-16]
   114bc:	bl	11014 <heap_carrega@@Base>
   114c0:	movw	r3, #8296	; 0x2068
   114c4:	movt	r3, #2
   114c8:	ldr	r3, [r3]
   114cc:	mov	r1, r3
   114d0:	movw	r0, #7464	; 0x1d28
   114d4:	movt	r0, #1
   114d8:	bl	109d8 <printf@plt>
   114dc:	mov	r3, #0
   114e0:	str	r3, [fp, #-8]
   114e4:	b	1150c <main@@Base+0x41c>
   114e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114ec:	ldr	r0, [fp, #-16]
   114f0:	bl	10fec <heap_remove@@Base>
   114f4:	mov	r3, r0
   114f8:	mov	r0, r3
   114fc:	bl	10a2c <puts@plt>
   11500:	ldr	r3, [fp, #-8]
   11504:	add	r3, r3, #1
   11508:	str	r3, [fp, #-8]
   1150c:	ldr	r3, [fp, #-8]
   11510:	cmp	r3, #41	; 0x29
   11514:	ble	114e8 <main@@Base+0x3f8>
   11518:	mov	r3, #0
   1151c:	mov	r0, r3
   11520:	sub	sp, fp, #4
   11524:	ldr	fp, [sp]
   11528:	add	sp, sp, #4
   1152c:	pop	{pc}		; (ldr pc, [sp], #4)

00011530 <vetor_cria@@Base>:
   11530:	str	fp, [sp, #-8]!
   11534:	str	lr, [sp, #4]
   11538:	add	fp, sp, #4
   1153c:	sub	sp, sp, #16
   11540:	str	r0, [fp, #-16]
   11544:	mov	r0, #12
   11548:	bl	10a38 <malloc@plt>
   1154c:	mov	r3, r0
   11550:	str	r3, [fp, #-8]
   11554:	ldr	r3, [fp, #-8]
   11558:	cmp	r3, #0
   1155c:	bne	11568 <vetor_cria@@Base+0x38>
   11560:	mov	r3, #0
   11564:	b	115c4 <vetor_cria@@Base+0x94>
   11568:	ldr	r3, [fp, #-8]
   1156c:	mov	r2, #0
   11570:	str	r2, [r3]
   11574:	ldr	r3, [fp, #-8]
   11578:	ldr	r2, [fp, #-16]
   1157c:	str	r2, [r3, #4]
   11580:	ldr	r3, [fp, #-16]
   11584:	mov	r1, #4
   11588:	mov	r0, r3
   1158c:	bl	109c0 <calloc@plt>
   11590:	mov	r3, r0
   11594:	mov	r2, r3
   11598:	ldr	r3, [fp, #-8]
   1159c:	str	r2, [r3, #8]
   115a0:	ldr	r3, [fp, #-8]
   115a4:	ldr	r3, [r3, #8]
   115a8:	cmp	r3, #0
   115ac:	bne	115c0 <vetor_cria@@Base+0x90>
   115b0:	ldr	r0, [fp, #-8]
   115b4:	bl	10a08 <free@plt>
   115b8:	mov	r3, #0
   115bc:	b	115c4 <vetor_cria@@Base+0x94>
   115c0:	ldr	r3, [fp, #-8]
   115c4:	mov	r0, r3
   115c8:	sub	sp, fp, #4
   115cc:	ldr	fp, [sp]
   115d0:	add	sp, sp, #4
   115d4:	pop	{pc}		; (ldr pc, [sp], #4)

000115d8 <vetor_criaHeap@@Base>:
   115d8:	str	fp, [sp, #-8]!
   115dc:	str	lr, [sp, #4]
   115e0:	add	fp, sp, #4
   115e4:	sub	sp, sp, #16
   115e8:	str	r0, [fp, #-16]
   115ec:	mov	r0, #12
   115f0:	bl	10a38 <malloc@plt>
   115f4:	mov	r3, r0
   115f8:	str	r3, [fp, #-8]
   115fc:	ldr	r3, [fp, #-8]
   11600:	cmp	r3, #0
   11604:	bne	11610 <vetor_criaHeap@@Base+0x38>
   11608:	mov	r3, #0
   1160c:	b	11670 <vetor_criaHeap@@Base+0x98>
   11610:	ldr	r3, [fp, #-8]
   11614:	mov	r2, #0
   11618:	str	r2, [r3]
   1161c:	ldr	r3, [fp, #-8]
   11620:	ldr	r2, [fp, #-16]
   11624:	str	r2, [r3, #4]
   11628:	ldr	r3, [fp, #-16]
   1162c:	add	r3, r3, #1
   11630:	mov	r1, #4
   11634:	mov	r0, r3
   11638:	bl	109c0 <calloc@plt>
   1163c:	mov	r3, r0
   11640:	mov	r2, r3
   11644:	ldr	r3, [fp, #-8]
   11648:	str	r2, [r3, #8]
   1164c:	ldr	r3, [fp, #-8]
   11650:	ldr	r3, [r3, #8]
   11654:	cmp	r3, #0
   11658:	bne	1166c <vetor_criaHeap@@Base+0x94>
   1165c:	ldr	r0, [fp, #-8]
   11660:	bl	10a08 <free@plt>
   11664:	mov	r3, #0
   11668:	b	11670 <vetor_criaHeap@@Base+0x98>
   1166c:	ldr	r3, [fp, #-8]
   11670:	mov	r0, r3
   11674:	sub	sp, fp, #4
   11678:	ldr	fp, [sp]
   1167c:	add	sp, sp, #4
   11680:	pop	{pc}		; (ldr pc, [sp], #4)

00011684 <elemento_cria@@Base>:
   11684:	str	fp, [sp, #-8]!
   11688:	str	lr, [sp, #4]
   1168c:	add	fp, sp, #4
   11690:	sub	sp, sp, #16
   11694:	str	r0, [fp, #-16]
   11698:	str	r1, [fp, #-20]	; 0xffffffec
   1169c:	mov	r0, #8
   116a0:	bl	10a38 <malloc@plt>
   116a4:	mov	r3, r0
   116a8:	str	r3, [fp, #-8]
   116ac:	ldr	r3, [fp, #-8]
   116b0:	cmp	r3, #0
   116b4:	bne	116c0 <elemento_cria@@Base+0x3c>
   116b8:	mov	r3, #0
   116bc:	b	116e8 <elemento_cria@@Base+0x64>
   116c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   116c4:	bl	10a20 <strdup@plt>
   116c8:	mov	r3, r0
   116cc:	mov	r2, r3
   116d0:	ldr	r3, [fp, #-8]
   116d4:	str	r2, [r3, #4]
   116d8:	ldr	r3, [fp, #-8]
   116dc:	ldr	r2, [fp, #-16]
   116e0:	str	r2, [r3]
   116e4:	ldr	r3, [fp, #-8]
   116e8:	mov	r0, r3
   116ec:	sub	sp, fp, #4
   116f0:	ldr	fp, [sp]
   116f4:	add	sp, sp, #4
   116f8:	pop	{pc}		; (ldr pc, [sp], #4)

000116fc <maior_que@@Base>:
   116fc:	str	fp, [sp, #-8]!
   11700:	str	lr, [sp, #4]
   11704:	add	fp, sp, #4
   11708:	sub	sp, sp, #8
   1170c:	str	r0, [fp, #-8]
   11710:	str	r1, [fp, #-12]
   11714:	ldr	r3, [fp, #-8]
   11718:	cmp	r3, #0
   1171c:	beq	1172c <maior_que@@Base+0x30>
   11720:	ldr	r3, [fp, #-12]
   11724:	cmp	r3, #0
   11728:	bne	11740 <maior_que@@Base+0x44>
   1172c:	movw	r0, #7756	; 0x1e4c
   11730:	movt	r0, #1
   11734:	bl	10a2c <puts@plt>
   11738:	mov	r3, #0
   1173c:	b	11790 <maior_que@@Base+0x94>
   11740:	movw	r3, #8288	; 0x2060
   11744:	movt	r3, #2
   11748:	ldr	r3, [r3]
   1174c:	mov	r0, r3
   11750:	bl	109fc <fflush@plt>
   11754:	movw	r3, #8296	; 0x2068
   11758:	movt	r3, #2
   1175c:	ldr	r3, [r3]
   11760:	add	r2, r3, #1
   11764:	movw	r3, #8296	; 0x2068
   11768:	movt	r3, #2
   1176c:	str	r2, [r3]
   11770:	ldr	r3, [fp, #-8]
   11774:	ldr	r2, [r3]
   11778:	ldr	r3, [fp, #-12]
   1177c:	ldr	r3, [r3]
   11780:	cmp	r2, r3
   11784:	movgt	r3, #1
   11788:	movle	r3, #0
   1178c:	uxtb	r3, r3
   11790:	mov	r0, r3
   11794:	sub	sp, fp, #4
   11798:	ldr	fp, [sp]
   1179c:	add	sp, sp, #4
   117a0:	pop	{pc}		; (ldr pc, [sp], #4)

000117a4 <maior_que_HeapSort@@Base>:
   117a4:	str	fp, [sp, #-8]!
   117a8:	str	lr, [sp, #4]
   117ac:	add	fp, sp, #4
   117b0:	sub	sp, sp, #8
   117b4:	str	r0, [fp, #-8]
   117b8:	str	r1, [fp, #-12]
   117bc:	ldr	r3, [fp, #-8]
   117c0:	cmp	r3, #0
   117c4:	beq	117d4 <maior_que_HeapSort@@Base+0x30>
   117c8:	ldr	r3, [fp, #-12]
   117cc:	cmp	r3, #0
   117d0:	bne	117e8 <maior_que_HeapSort@@Base+0x44>
   117d4:	movw	r0, #7756	; 0x1e4c
   117d8:	movt	r0, #1
   117dc:	bl	10a2c <puts@plt>
   117e0:	mov	r3, #0
   117e4:	b	11840 <maior_que_HeapSort@@Base+0x9c>
   117e8:	movw	r3, #8288	; 0x2060
   117ec:	movt	r3, #2
   117f0:	ldr	r3, [r3]
   117f4:	mov	r0, r3
   117f8:	bl	109fc <fflush@plt>
   117fc:	movw	r3, #8296	; 0x2068
   11800:	movt	r3, #2
   11804:	ldr	r3, [r3]
   11808:	add	r2, r3, #1
   1180c:	movw	r3, #8296	; 0x2068
   11810:	movt	r3, #2
   11814:	str	r2, [r3]
   11818:	ldr	r3, [fp, #-8]
   1181c:	ldr	r2, [r3, #4]
   11820:	ldr	r3, [fp, #-12]
   11824:	ldr	r3, [r3, #4]
   11828:	mov	r1, r3
   1182c:	mov	r0, r2
   11830:	bl	109cc <strcmp@plt>
   11834:	mov	r3, r0
   11838:	lsr	r3, r3, #31
   1183c:	uxtb	r3, r3
   11840:	mov	r0, r3
   11844:	sub	sp, fp, #4
   11848:	ldr	fp, [sp]
   1184c:	add	sp, sp, #4
   11850:	pop	{pc}		; (ldr pc, [sp], #4)

00011854 <vetor_imprime@@Base>:
   11854:	str	fp, [sp, #-8]!
   11858:	str	lr, [sp, #4]
   1185c:	add	fp, sp, #4
   11860:	sub	sp, sp, #16
   11864:	str	r0, [fp, #-16]
   11868:	ldr	r3, [fp, #-16]
   1186c:	ldr	r3, [r3]
   11870:	cmp	r3, #0
   11874:	ble	118b4 <vetor_imprime@@Base+0x60>
   11878:	ldr	r3, [fp, #-16]
   1187c:	ldr	r3, [r3, #8]
   11880:	ldr	r3, [r3]
   11884:	ldr	r1, [r3, #4]
   11888:	ldr	r3, [fp, #-16]
   1188c:	ldr	r3, [r3, #8]
   11890:	ldr	r3, [r3]
   11894:	ldr	r3, [r3]
   11898:	mov	r2, r3
   1189c:	movw	r0, #7768	; 0x1e58
   118a0:	movt	r0, #1
   118a4:	bl	109d8 <printf@plt>
   118a8:	mov	r3, #1
   118ac:	str	r3, [fp, #-8]
   118b0:	b	11918 <vetor_imprime@@Base+0xc4>
   118b4:	movw	r0, #7800	; 0x1e78
   118b8:	movt	r0, #1
   118bc:	bl	10a2c <puts@plt>
   118c0:	b	11934 <vetor_imprime@@Base+0xe0>
   118c4:	ldr	r3, [fp, #-16]
   118c8:	ldr	r2, [r3, #8]
   118cc:	ldr	r3, [fp, #-8]
   118d0:	lsl	r3, r3, #2
   118d4:	add	r3, r2, r3
   118d8:	ldr	r3, [r3]
   118dc:	ldr	r1, [r3, #4]
   118e0:	ldr	r3, [fp, #-16]
   118e4:	ldr	r2, [r3, #8]
   118e8:	ldr	r3, [fp, #-8]
   118ec:	lsl	r3, r3, #2
   118f0:	add	r3, r2, r3
   118f4:	ldr	r3, [r3]
   118f8:	ldr	r3, [r3]
   118fc:	mov	r2, r3
   11900:	movw	r0, #7824	; 0x1e90
   11904:	movt	r0, #1
   11908:	bl	109d8 <printf@plt>
   1190c:	ldr	r3, [fp, #-8]
   11910:	add	r3, r3, #1
   11914:	str	r3, [fp, #-8]
   11918:	ldr	r3, [fp, #-16]
   1191c:	ldr	r3, [r3]
   11920:	ldr	r2, [fp, #-8]
   11924:	cmp	r2, r3
   11928:	blt	118c4 <vetor_imprime@@Base+0x70>
   1192c:	mov	r0, #10
   11930:	bl	10a74 <putchar@plt>
   11934:	sub	sp, fp, #4
   11938:	ldr	fp, [sp]
   1193c:	add	sp, sp, #4
   11940:	pop	{pc}		; (ldr pc, [sp], #4)

00011944 <vetor_imprimeHeap@@Base>:
   11944:	str	fp, [sp, #-8]!
   11948:	str	lr, [sp, #4]
   1194c:	add	fp, sp, #4
   11950:	sub	sp, sp, #16
   11954:	str	r0, [fp, #-16]
   11958:	ldr	r3, [fp, #-16]
   1195c:	ldr	r3, [r3]
   11960:	cmp	r3, #0
   11964:	ble	119ac <vetor_imprimeHeap@@Base+0x68>
   11968:	ldr	r3, [fp, #-16]
   1196c:	ldr	r3, [r3, #8]
   11970:	add	r3, r3, #4
   11974:	ldr	r3, [r3]
   11978:	ldr	r1, [r3, #4]
   1197c:	ldr	r3, [fp, #-16]
   11980:	ldr	r3, [r3, #8]
   11984:	add	r3, r3, #4
   11988:	ldr	r3, [r3]
   1198c:	ldr	r3, [r3]
   11990:	mov	r2, r3
   11994:	movw	r0, #7768	; 0x1e58
   11998:	movt	r0, #1
   1199c:	bl	109d8 <printf@plt>
   119a0:	mov	r3, #2
   119a4:	str	r3, [fp, #-8]
   119a8:	b	11a10 <vetor_imprimeHeap@@Base+0xcc>
   119ac:	movw	r0, #7800	; 0x1e78
   119b0:	movt	r0, #1
   119b4:	bl	10a2c <puts@plt>
   119b8:	b	11a2c <vetor_imprimeHeap@@Base+0xe8>
   119bc:	ldr	r3, [fp, #-16]
   119c0:	ldr	r2, [r3, #8]
   119c4:	ldr	r3, [fp, #-8]
   119c8:	lsl	r3, r3, #2
   119cc:	add	r3, r2, r3
   119d0:	ldr	r3, [r3]
   119d4:	ldr	r1, [r3, #4]
   119d8:	ldr	r3, [fp, #-16]
   119dc:	ldr	r2, [r3, #8]
   119e0:	ldr	r3, [fp, #-8]
   119e4:	lsl	r3, r3, #2
   119e8:	add	r3, r2, r3
   119ec:	ldr	r3, [r3]
   119f0:	ldr	r3, [r3]
   119f4:	mov	r2, r3
   119f8:	movw	r0, #7824	; 0x1e90
   119fc:	movt	r0, #1
   11a00:	bl	109d8 <printf@plt>
   11a04:	ldr	r3, [fp, #-8]
   11a08:	add	r3, r3, #1
   11a0c:	str	r3, [fp, #-8]
   11a10:	ldr	r3, [fp, #-16]
   11a14:	ldr	r3, [r3]
   11a18:	ldr	r2, [fp, #-8]
   11a1c:	cmp	r2, r3
   11a20:	blt	119bc <vetor_imprimeHeap@@Base+0x78>
   11a24:	mov	r0, #10
   11a28:	bl	10a74 <putchar@plt>
   11a2c:	sub	sp, fp, #4
   11a30:	ldr	fp, [sp]
   11a34:	add	sp, sp, #4
   11a38:	pop	{pc}		; (ldr pc, [sp], #4)

00011a3c <__libc_csu_init@@Base>:
   11a3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a40:	mov	r7, r0
   11a44:	ldr	r6, [pc, #72]	; 11a94 <__libc_csu_init@@Base+0x58>
   11a48:	ldr	r5, [pc, #72]	; 11a98 <__libc_csu_init@@Base+0x5c>
   11a4c:	add	r6, pc, r6
   11a50:	add	r5, pc, r5
   11a54:	sub	r6, r6, r5
   11a58:	mov	r8, r1
   11a5c:	mov	r9, r2
   11a60:	bl	109a0 <calloc@plt-0x20>
   11a64:	asrs	r6, r6, #2
   11a68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a6c:	mov	r4, #0
   11a70:	add	r4, r4, #1
   11a74:	ldr	r3, [r5], #4
   11a78:	mov	r2, r9
   11a7c:	mov	r1, r8
   11a80:	mov	r0, r7
   11a84:	blx	r3
   11a88:	cmp	r6, r4
   11a8c:	bne	11a70 <__libc_csu_init@@Base+0x34>
   11a90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a94:	andeq	r0, r1, r0, asr #9
   11a98:			; <UNDEFINED> instruction: 0x000104b8

00011a9c <__libc_csu_fini@@Base>:
   11a9c:	bx	lr

Disassembly of section .fini:

00011aa0 <.fini>:
   11aa0:	push	{r3, lr}
   11aa4:	pop	{r3, pc}
