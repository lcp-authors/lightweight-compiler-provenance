
../compcert-repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

00012568 <.init>:
   12568:	push	{r3, lr}
   1256c:	bl	12a44 <_start@@Base+0x3c>
   12570:	pop	{r3, pc}

Disassembly of section .plt:

00012574 <coda_cursor_get_byte_size@plt-0x14>:
   12574:	push	{lr}		; (str lr, [sp, #-4]!)
   12578:	ldr	lr, [pc, #4]	; 12584 <coda_cursor_get_byte_size@plt-0x4>
   1257c:	add	lr, pc, lr
   12580:	ldr	pc, [lr, #8]!
   12584:	andeq	sp, r1, ip, ror sl

00012588 <coda_cursor_get_byte_size@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #118784	; 0x1d000
   12590:	ldr	pc, [ip, #2684]!	; 0xa7c

00012594 <coda_type_get_special_type_name@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #118784	; 0x1d000
   1259c:	ldr	pc, [ip, #2676]!	; 0xa74

000125a0 <coda_set_option_use_fast_size_expressions@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #118784	; 0x1d000
   125a8:	ldr	pc, [ip, #2668]!	; 0xa6c

000125ac <raise@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #118784	; 0x1d000
   125b4:	ldr	pc, [ip, #2660]!	; 0xa64

000125b8 <coda_get_option_bypass_special_types@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #118784	; 0x1d000
   125c0:	ldr	pc, [ip, #2652]!	; 0xa5c

000125c4 <coda_set_option_perform_boundary_checks@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #118784	; 0x1d000
   125cc:	ldr	pc, [ip, #2644]!	; 0xa54

000125d0 <strcmp@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #118784	; 0x1d000
   125d8:	ldr	pc, [ip, #2636]!	; 0xa4c

000125dc <coda_type_get_record_field_hidden_status@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #118784	; 0x1d000
   125e4:	ldr	pc, [ip, #2628]!	; 0xa44

000125e8 <printf@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #118784	; 0x1d000
   125f0:	ldr	pc, [ip, #2620]!	; 0xa3c

000125f4 <coda_cursor_get_record_field_available_status@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #118784	; 0x1d000
   125fc:	ldr	pc, [ip, #2612]!	; 0xa34

00012600 <fopen@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #118784	; 0x1d000
   12608:	ldr	pc, [ip, #2604]!	; 0xa2c

0001260c <coda_set_error@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #118784	; 0x1d000
   12614:	ldr	pc, [ip, #2596]!	; 0xa24

00012618 <coda_open@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #118784	; 0x1d000
   12620:	ldr	pc, [ip, #2588]!	; 0xa1c

00012624 <fflush@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #118784	; 0x1d000
   1262c:	ldr	pc, [ip, #2580]!	; 0xa14

00012630 <coda_time_double_to_string@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #118784	; 0x1d000
   12638:	ldr	pc, [ip, #2572]!	; 0xa0c

0001263c <coda_cursor_get_num_elements@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #118784	; 0x1d000
   12644:	ldr	pc, [ip, #2564]!	; 0xa04

00012648 <coda_str64u@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #118784	; 0x1d000
   12650:	ldr	pc, [ip, #2556]!	; 0x9fc

00012654 <free@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #118784	; 0x1d000
   1265c:	ldr	pc, [ip, #2548]!	; 0x9f4

00012660 <coda_set_option_use_mmap@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #118784	; 0x1d000
   12668:	ldr	pc, [ip, #2540]!	; 0x9ec

0001266c <coda_set_definition_path_conditional@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #118784	; 0x1d000
   12674:	ldr	pc, [ip, #2532]!	; 0x9e4

00012678 <coda_cursor_read_uint32@plt>:
   12678:	add	ip, pc, #0, 12
   1267c:	add	ip, ip, #118784	; 0x1d000
   12680:	ldr	pc, [ip, #2524]!	; 0x9dc

00012684 <coda_set_option_bypass_special_types@plt>:
   12684:	add	ip, pc, #0, 12
   12688:	add	ip, ip, #118784	; 0x1d000
   1268c:	ldr	pc, [ip, #2516]!	; 0x9d4

00012690 <coda_type_get_record_field_type@plt>:
   12690:	add	ip, pc, #0, 12
   12694:	add	ip, ip, #118784	; 0x1d000
   12698:	ldr	pc, [ip, #2508]!	; 0x9cc

0001269c <coda_cursor_get_type@plt>:
   1269c:	add	ip, pc, #0, 12
   126a0:	add	ip, ip, #118784	; 0x1d000
   126a4:	ldr	pc, [ip, #2500]!	; 0x9c4

000126a8 <memcpy@plt>:
   126a8:	add	ip, pc, #0, 12
   126ac:	add	ip, ip, #118784	; 0x1d000
   126b0:	ldr	pc, [ip, #2492]!	; 0x9bc

000126b4 <coda_isInf@plt>:
   126b4:	add	ip, pc, #0, 12
   126b8:	add	ip, ip, #118784	; 0x1d000
   126bc:	ldr	pc, [ip, #2484]!	; 0x9b4

000126c0 <coda_type_get_bit_size@plt>:
   126c0:	add	ip, pc, #0, 12
   126c4:	add	ip, ip, #118784	; 0x1d000
   126c8:	ldr	pc, [ip, #2476]!	; 0x9ac

000126cc <coda_type_get_record_field_available_status@plt>:
   126cc:	add	ip, pc, #0, 12
   126d0:	add	ip, ip, #118784	; 0x1d000
   126d4:	ldr	pc, [ip, #2468]!	; 0x9a4

000126d8 <coda_cursor_has_attributes@plt>:
   126d8:	add	ip, pc, #0, 12
   126dc:	add	ip, ip, #118784	; 0x1d000
   126e0:	ldr	pc, [ip, #2460]!	; 0x99c

000126e4 <coda_cursor_get_type_class@plt>:
   126e4:	add	ip, pc, #0, 12
   126e8:	add	ip, ip, #118784	; 0x1d000
   126ec:	ldr	pc, [ip, #2452]!	; 0x994

000126f0 <coda_set_definition_path@plt>:
   126f0:	add	ip, pc, #0, 12
   126f4:	add	ip, ip, #118784	; 0x1d000
   126f8:	ldr	pc, [ip, #2444]!	; 0x98c

000126fc <coda_get_product_format@plt>:
   126fc:	add	ip, pc, #0, 12
   12700:	add	ip, ip, #118784	; 0x1d000
   12704:	ldr	pc, [ip, #2436]!	; 0x984

00012708 <coda_type_get_unit@plt>:
   12708:	add	ip, pc, #0, 12
   1270c:	add	ip, ip, #118784	; 0x1d000
   12710:	ldr	pc, [ip, #2428]!	; 0x97c

00012714 <coda_type_get_description@plt>:
   12714:	add	ip, pc, #0, 12
   12718:	add	ip, ip, #118784	; 0x1d000
   1271c:	ldr	pc, [ip, #2420]!	; 0x974

00012720 <coda_cursor_get_special_type@plt>:
   12720:	add	ip, pc, #0, 12
   12724:	add	ip, ip, #118784	; 0x1d000
   12728:	ldr	pc, [ip, #2412]!	; 0x96c

0001272c <coda_cursor_goto_first_array_element@plt>:
   1272c:	add	ip, pc, #0, 12
   12730:	add	ip, ip, #118784	; 0x1d000
   12734:	ldr	pc, [ip, #2404]!	; 0x964

00012738 <coda_cursor_set_product@plt>:
   12738:	add	ip, pc, #0, 12
   1273c:	add	ip, ip, #118784	; 0x1d000
   12740:	ldr	pc, [ip, #2396]!	; 0x95c

00012744 <strcpy@plt>:
   12744:	add	ip, pc, #0, 12
   12748:	add	ip, ip, #118784	; 0x1d000
   1274c:	ldr	pc, [ip, #2388]!	; 0x954

00012750 <coda_cursor_goto_first_record_field@plt>:
   12750:	add	ip, pc, #0, 12
   12754:	add	ip, ip, #118784	; 0x1d000
   12758:	ldr	pc, [ip, #2380]!	; 0x94c

0001275c <coda_cursor_goto_record_field_by_index@plt>:
   1275c:	add	ip, pc, #0, 12
   12760:	add	ip, ip, #118784	; 0x1d000
   12764:	ldr	pc, [ip, #2372]!	; 0x944

00012768 <coda_done@plt>:
   12768:	add	ip, pc, #0, 12
   1276c:	add	ip, ip, #118784	; 0x1d000
   12770:	ldr	pc, [ip, #2364]!	; 0x93c

00012774 <coda_cursor_get_read_type@plt>:
   12774:	add	ip, pc, #0, 12
   12778:	add	ip, ip, #118784	; 0x1d000
   1277c:	ldr	pc, [ip, #2356]!	; 0x934

00012780 <malloc@plt>:
   12780:	add	ip, pc, #0, 12
   12784:	add	ip, ip, #118784	; 0x1d000
   12788:	ldr	pc, [ip, #2348]!	; 0x92c

0001278c <__libc_start_main@plt>:
   1278c:	add	ip, pc, #0, 12
   12790:	add	ip, ip, #118784	; 0x1d000
   12794:	ldr	pc, [ip, #2340]!	; 0x924

00012798 <__gmon_start__@plt>:
   12798:	add	ip, pc, #0, 12
   1279c:	add	ip, ip, #118784	; 0x1d000
   127a0:	ldr	pc, [ip, #2332]!	; 0x91c

000127a4 <coda_cursor_read_string@plt>:
   127a4:	add	ip, pc, #0, 12
   127a8:	add	ip, ip, #118784	; 0x1d000
   127ac:	ldr	pc, [ip, #2324]!	; 0x914

000127b0 <coda_cursor_goto_parent@plt>:
   127b0:	add	ip, pc, #0, 12
   127b4:	add	ip, ip, #118784	; 0x1d000
   127b8:	ldr	pc, [ip, #2316]!	; 0x90c

000127bc <coda_type_get_num_record_fields@plt>:
   127bc:	add	ip, pc, #0, 12
   127c0:	add	ip, ip, #118784	; 0x1d000
   127c4:	ldr	pc, [ip, #2308]!	; 0x904

000127c8 <exit@plt>:
   127c8:	add	ip, pc, #0, 12
   127cc:	add	ip, ip, #118784	; 0x1d000
   127d0:	ldr	pc, [ip, #2300]!	; 0x8fc

000127d4 <coda_type_get_read_type@plt>:
   127d4:	add	ip, pc, #0, 12
   127d8:	add	ip, ip, #118784	; 0x1d000
   127dc:	ldr	pc, [ip, #2292]!	; 0x8f4

000127e0 <coda_cursor_get_string_length@plt>:
   127e0:	add	ip, pc, #0, 12
   127e4:	add	ip, ip, #118784	; 0x1d000
   127e8:	ldr	pc, [ip, #2284]!	; 0x8ec

000127ec <coda_cursor_read_uint64@plt>:
   127ec:	add	ip, pc, #0, 12
   127f0:	add	ip, ip, #118784	; 0x1d000
   127f4:	ldr	pc, [ip, #2276]!	; 0x8e4

000127f8 <coda_cursor_read_double@plt>:
   127f8:	add	ip, pc, #0, 12
   127fc:	add	ip, ip, #118784	; 0x1d000
   12800:	ldr	pc, [ip, #2268]!	; 0x8dc

00012804 <coda_isNaN@plt>:
   12804:	add	ip, pc, #0, 12
   12808:	add	ip, ip, #118784	; 0x1d000
   1280c:	ldr	pc, [ip, #2260]!	; 0x8d4

00012810 <fprintf@plt>:
   12810:	add	ip, pc, #0, 12
   12814:	add	ip, ip, #118784	; 0x1d000
   12818:	ldr	pc, [ip, #2252]!	; 0x8cc

0001281c <coda_cursor_goto_next_array_element@plt>:
   1281c:	add	ip, pc, #0, 12
   12820:	add	ip, ip, #118784	; 0x1d000
   12824:	ldr	pc, [ip, #2244]!	; 0x8c4

00012828 <coda_open_as@plt>:
   12828:	add	ip, pc, #0, 12
   1282c:	add	ip, ip, #118784	; 0x1d000
   12830:	ldr	pc, [ip, #2236]!	; 0x8bc

00012834 <coda_init@plt>:
   12834:	add	ip, pc, #0, 12
   12838:	add	ip, ip, #118784	; 0x1d000
   1283c:	ldr	pc, [ip, #2228]!	; 0x8b4

00012840 <coda_set_option_perform_conversions@plt>:
   12840:	add	ip, pc, #0, 12
   12844:	add	ip, ip, #118784	; 0x1d000
   12848:	ldr	pc, [ip, #2220]!	; 0x8ac

0001284c <coda_cursor_goto_attributes@plt>:
   1284c:	add	ip, pc, #0, 12
   12850:	add	ip, ip, #118784	; 0x1d000
   12854:	ldr	pc, [ip, #2212]!	; 0x8a4

00012858 <coda_cursor_read_char@plt>:
   12858:	add	ip, pc, #0, 12
   1285c:	add	ip, ip, #118784	; 0x1d000
   12860:	ldr	pc, [ip, #2204]!	; 0x89c

00012864 <memset@plt>:
   12864:	add	ip, pc, #0, 12
   12868:	add	ip, ip, #118784	; 0x1d000
   1286c:	ldr	pc, [ip, #2196]!	; 0x894

00012870 <strncpy@plt>:
   12870:	add	ip, pc, #0, 12
   12874:	add	ip, ip, #118784	; 0x1d000
   12878:	ldr	pc, [ip, #2188]!	; 0x88c

0001287c <coda_type_get_special_type@plt>:
   1287c:	add	ip, pc, #0, 12
   12880:	add	ip, ip, #118784	; 0x1d000
   12884:	ldr	pc, [ip, #2180]!	; 0x884

00012888 <coda_type_get_record_union_status@plt>:
   12888:	add	ip, pc, #0, 12
   1288c:	add	ip, ip, #118784	; 0x1d000
   12890:	ldr	pc, [ip, #2172]!	; 0x87c

00012894 <coda_cursor_read_complex_double_split@plt>:
   12894:	add	ip, pc, #0, 12
   12898:	add	ip, ip, #118784	; 0x1d000
   1289c:	ldr	pc, [ip, #2164]!	; 0x874

000128a0 <coda_type_get_array_base_type@plt>:
   128a0:	add	ip, pc, #0, 12
   128a4:	add	ip, ip, #118784	; 0x1d000
   128a8:	ldr	pc, [ip, #2156]!	; 0x86c

000128ac <fclose@plt>:
   128ac:	add	ip, pc, #0, 12
   128b0:	add	ip, ip, #118784	; 0x1d000
   128b4:	ldr	pc, [ip, #2148]!	; 0x864

000128b8 <coda_type_get_string_length@plt>:
   128b8:	add	ip, pc, #0, 12
   128bc:	add	ip, ip, #118784	; 0x1d000
   128c0:	ldr	pc, [ip, #2140]!	; 0x85c

000128c4 <coda_type_get_native_type_name@plt>:
   128c4:	add	ip, pc, #0, 12
   128c8:	add	ip, ip, #118784	; 0x1d000
   128cc:	ldr	pc, [ip, #2132]!	; 0x854

000128d0 <coda_cursor_get_array_dim@plt>:
   128d0:	add	ip, pc, #0, 12
   128d4:	add	ip, ip, #118784	; 0x1d000
   128d8:	ldr	pc, [ip, #2124]!	; 0x84c

000128dc <coda_cursor_has_ascii_content@plt>:
   128dc:	add	ip, pc, #0, 12
   128e0:	add	ip, ip, #118784	; 0x1d000
   128e4:	ldr	pc, [ip, #2116]!	; 0x844

000128e8 <coda_close@plt>:
   128e8:	add	ip, pc, #0, 12
   128ec:	add	ip, ip, #118784	; 0x1d000
   128f0:	ldr	pc, [ip, #2108]!	; 0x83c

000128f4 <coda_cursor_read_int64@plt>:
   128f4:	add	ip, pc, #0, 12
   128f8:	add	ip, ip, #118784	; 0x1d000
   128fc:	ldr	pc, [ip, #2100]!	; 0x834

00012900 <vfprintf@plt>:
   12900:	add	ip, pc, #0, 12
   12904:	add	ip, ip, #118784	; 0x1d000
   12908:	ldr	pc, [ip, #2092]!	; 0x82c

0001290c <coda_cursor_goto@plt>:
   1290c:	add	ip, pc, #0, 12
   12910:	add	ip, ip, #118784	; 0x1d000
   12914:	ldr	pc, [ip, #2084]!	; 0x824

00012918 <coda_type_get_record_field_index_from_name@plt>:
   12918:	add	ip, pc, #0, 12
   1291c:	add	ip, ip, #118784	; 0x1d000
   12920:	ldr	pc, [ip, #2076]!	; 0x81c

00012924 <coda_cursor_read_complex_double_pair@plt>:
   12924:	add	ip, pc, #0, 12
   12928:	add	ip, ip, #118784	; 0x1d000
   1292c:	ldr	pc, [ip, #2068]!	; 0x814

00012930 <coda_cursor_goto_next_record_field@plt>:
   12930:	add	ip, pc, #0, 12
   12934:	add	ip, ip, #118784	; 0x1d000
   12938:	ldr	pc, [ip, #2060]!	; 0x80c

0001293c <coda_type_get_array_dim@plt>:
   1293c:	add	ip, pc, #0, 12
   12940:	add	ip, ip, #118784	; 0x1d000
   12944:	ldr	pc, [ip, #2052]!	; 0x804

00012948 <coda_cursor_get_bit_size@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #118784	; 0x1d000
   12950:	ldr	pc, [ip, #2044]!	; 0x7fc

00012954 <atoi@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #118784	; 0x1d000
   1295c:	ldr	pc, [ip, #2036]!	; 0x7f4

00012960 <coda_errno_to_string@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #118784	; 0x1d000
   12968:	ldr	pc, [ip, #2028]!	; 0x7ec

0001296c <coda_cursor_use_base_type_of_special_type@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #118784	; 0x1d000
   12974:	ldr	pc, [ip, #2020]!	; 0x7e4

00012978 <coda_cursor_get_available_union_field_index@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #118784	; 0x1d000
   12980:	ldr	pc, [ip, #2012]!	; 0x7dc

00012984 <coda_cursor_read_int32@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #118784	; 0x1d000
   1298c:	ldr	pc, [ip, #2004]!	; 0x7d4

00012990 <coda_cursor_get_file_bit_offset@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #118784	; 0x1d000
   12998:	ldr	pc, [ip, #1996]!	; 0x7cc

0001299c <coda_get_libcoda_version@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #118784	; 0x1d000
   129a4:	ldr	pc, [ip, #1988]!	; 0x7c4

000129a8 <coda_get_errno@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #118784	; 0x1d000
   129b0:	ldr	pc, [ip, #1980]!	; 0x7bc

000129b4 <coda_type_get_special_base_type@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #118784	; 0x1d000
   129bc:	ldr	pc, [ip, #1972]!	; 0x7b4

000129c0 <coda_type_get_record_field_name@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #118784	; 0x1d000
   129c8:	ldr	pc, [ip, #1964]!	; 0x7ac

000129cc <abort@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #118784	; 0x1d000
   129d4:	ldr	pc, [ip, #1956]!	; 0x7a4

000129d8 <coda_cursor_read_bits@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #118784	; 0x1d000
   129e0:	ldr	pc, [ip, #1948]!	; 0x79c

000129e4 <coda_str64@plt>:
   129e4:	add	ip, pc, #0, 12
   129e8:	add	ip, ip, #118784	; 0x1d000
   129ec:	ldr	pc, [ip, #1940]!	; 0x794

000129f0 <__assert_fail@plt>:
   129f0:	add	ip, pc, #0, 12
   129f4:	add	ip, ip, #118784	; 0x1d000
   129f8:	ldr	pc, [ip, #1932]!	; 0x78c

000129fc <coda_type_get_class@plt>:
   129fc:	add	ip, pc, #0, 12
   12a00:	add	ip, ip, #118784	; 0x1d000
   12a04:	ldr	pc, [ip, #1924]!	; 0x784

Disassembly of section .text:

00012a08 <_start@@Base>:
   12a08:	mov	fp, #0
   12a0c:	mov	lr, #0
   12a10:	pop	{r1}		; (ldr r1, [sp], #4)
   12a14:	mov	r2, sp
   12a18:	push	{r2}		; (str r2, [sp, #-4]!)
   12a1c:	push	{r0}		; (str r0, [sp, #-4]!)
   12a20:	ldr	ip, [pc, #16]	; 12a38 <_start@@Base+0x30>
   12a24:	push	{ip}		; (str ip, [sp, #-4]!)
   12a28:	ldr	r0, [pc, #12]	; 12a3c <_start@@Base+0x34>
   12a2c:	ldr	r3, [pc, #12]	; 12a40 <_start@@Base+0x38>
   12a30:	bl	1278c <__libc_start_main@plt>
   12a34:	bl	129cc <abort@plt>
   12a38:	andeq	sp, r1, r8, lsl #23
   12a3c:	andeq	sl, r1, r8, lsr #30
   12a40:	andeq	sp, r1, r8, lsr #22
   12a44:	ldr	r3, [pc, #20]	; 12a60 <_start@@Base+0x58>
   12a48:	ldr	r2, [pc, #20]	; 12a64 <_start@@Base+0x5c>
   12a4c:	add	r3, pc, r3
   12a50:	ldr	r2, [r3, r2]
   12a54:	cmp	r2, #0
   12a58:	bxeq	lr
   12a5c:	b	12798 <__gmon_start__@plt>
   12a60:	andeq	sp, r1, ip, lsr #11
   12a64:	andeq	r0, r0, ip, lsl #3
   12a68:	ldr	r0, [pc, #24]	; 12a88 <_start@@Base+0x80>
   12a6c:	ldr	r3, [pc, #24]	; 12a8c <_start@@Base+0x84>
   12a70:	cmp	r3, r0
   12a74:	bxeq	lr
   12a78:	ldr	r3, [pc, #16]	; 12a90 <_start@@Base+0x88>
   12a7c:	cmp	r3, #0
   12a80:	bxeq	lr
   12a84:	bx	r3
   12a88:	andeq	r0, r3, r4, lsr #3
   12a8c:	andeq	r0, r3, r4, lsr #3
   12a90:	andeq	r0, r0, r0
   12a94:	ldr	r0, [pc, #36]	; 12ac0 <_start@@Base+0xb8>
   12a98:	ldr	r1, [pc, #36]	; 12ac4 <_start@@Base+0xbc>
   12a9c:	sub	r1, r1, r0
   12aa0:	asr	r1, r1, #2
   12aa4:	add	r1, r1, r1, lsr #31
   12aa8:	asrs	r1, r1, #1
   12aac:	bxeq	lr
   12ab0:	ldr	r3, [pc, #16]	; 12ac8 <_start@@Base+0xc0>
   12ab4:	cmp	r3, #0
   12ab8:	bxeq	lr
   12abc:	bx	r3
   12ac0:	andeq	r0, r3, r4, lsr #3
   12ac4:	andeq	r0, r3, r4, lsr #3
   12ac8:	andeq	r0, r0, r0
   12acc:	push	{r4, lr}
   12ad0:	ldr	r4, [pc, #24]	; 12af0 <_start@@Base+0xe8>
   12ad4:	ldrb	r3, [r4]
   12ad8:	cmp	r3, #0
   12adc:	popne	{r4, pc}
   12ae0:	bl	12a68 <_start@@Base+0x60>
   12ae4:	mov	r3, #1
   12ae8:	strb	r3, [r4]
   12aec:	pop	{r4, pc}
   12af0:			; <UNDEFINED> instruction: 0x000301b0
   12af4:	b	12a94 <_start@@Base+0x8c>

00012af8 <export_data_element_to_ascii@@Base>:
   12af8:	push	{fp, lr}
   12afc:	mov	fp, sp
   12b00:	sub	sp, sp, #16
   12b04:	movw	r0, #408	; 0x198
   12b08:	movt	r0, #3
   12b0c:	ldr	r0, [r0]
   12b10:	cmp	r0, #0
   12b14:	beq	12b2c <export_data_element_to_ascii@@Base+0x34>
   12b18:	movw	r0, #408	; 0x198
   12b1c:	movt	r0, #3
   12b20:	movw	r1, #0
   12b24:	str	r1, [r0]
   12b28:	b	12b48 <export_data_element_to_ascii@@Base+0x50>
   12b2c:	movw	r0, #4232	; 0x1088
   12b30:	movt	r0, #3
   12b34:	ldr	r0, [r0]
   12b38:	movw	r1, #62873	; 0xf599
   12b3c:	movt	r1, #1
   12b40:	bl	12810 <fprintf@plt>
   12b44:	str	r0, [fp, #-4]
   12b48:	movw	r0, #4632	; 0x1218
   12b4c:	movt	r0, #3
   12b50:	ldr	r0, [r0]
   12b54:	cmp	r0, #0
   12b58:	beq	12b90 <export_data_element_to_ascii@@Base+0x98>
   12b5c:	movw	r0, #4232	; 0x1088
   12b60:	movt	r0, #3
   12b64:	ldr	r0, [r0]
   12b68:	movw	r1, #2
   12b6c:	movw	r2, #0
   12b70:	bl	189e8 <print_full_field_name@@Base>
   12b74:	movw	r0, #4232	; 0x1088
   12b78:	movt	r0, #3
   12b7c:	ldr	r0, [r0]
   12b80:	movw	r1, #62873	; 0xf599
   12b84:	movt	r1, #1
   12b88:	bl	12810 <fprintf@plt>
   12b8c:	str	r0, [sp, #8]
   12b90:	movw	r0, #4264	; 0x10a8
   12b94:	movt	r0, #3
   12b98:	ldr	r0, [r0]
   12b9c:	cmp	r0, #0
   12ba0:	ble	12bd0 <export_data_element_to_ascii@@Base+0xd8>
   12ba4:	movw	r0, #4264	; 0x10a8
   12ba8:	movt	r0, #3
   12bac:	ldr	r1, [r0]
   12bb0:	add	r0, r0, r1, lsl #3
   12bb4:	ldr	r1, [r0, #296]	; 0x128
   12bb8:	ldr	r0, [r0, #300]	; 0x12c
   12bbc:	orr	r0, r1, r0
   12bc0:	cmp	r0, #0
   12bc4:	bne	12bd0 <export_data_element_to_ascii@@Base+0xd8>
   12bc8:	b	12bcc <export_data_element_to_ascii@@Base+0xd4>
   12bcc:	b	12bf0 <export_data_element_to_ascii@@Base+0xf8>
   12bd0:	movw	r0, #4232	; 0x1088
   12bd4:	movt	r0, #3
   12bd8:	ldr	r0, [r0]
   12bdc:	movw	r1, #0
   12be0:	str	r1, [sp, #4]
   12be4:	ldr	r2, [sp, #4]
   12be8:	ldr	r3, [sp, #4]
   12bec:	bl	12bf8 <export_data_element_to_ascii@@Base+0x100>
   12bf0:	mov	sp, fp
   12bf4:	pop	{fp, pc}
   12bf8:	push	{fp, lr}
   12bfc:	mov	fp, sp
   12c00:	sub	sp, sp, #112	; 0x70
   12c04:	movw	ip, #480	; 0x1e0
   12c08:	movt	ip, #3
   12c0c:	add	ip, ip, #8
   12c10:	str	r0, [fp, #-4]
   12c14:	str	r1, [fp, #-8]
   12c18:	str	r2, [fp, #-12]
   12c1c:	str	r3, [fp, #-16]
   12c20:	ldr	r0, [fp, #-8]
   12c24:	movw	r1, #480	; 0x1e0
   12c28:	movt	r1, #3
   12c2c:	add	r0, r1, r0, lsl #2
   12c30:	add	r0, r0, #8
   12c34:	ldr	r0, [r0]
   12c38:	sub	r1, fp, #20
   12c3c:	str	ip, [sp, #28]
   12c40:	bl	129fc <coda_type_get_class@plt>
   12c44:	cmp	r0, #0
   12c48:	beq	12c58 <export_data_element_to_ascii@@Base+0x160>
   12c4c:	movw	r0, #44732	; 0xaebc
   12c50:	movt	r0, #1
   12c54:	blx	r0
   12c58:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c5c:	cmp	r0, #0
   12c60:	str	r0, [sp, #24]
   12c64:	beq	1300c <export_data_element_to_ascii@@Base+0x514>
   12c68:	b	12c6c <export_data_element_to_ascii@@Base+0x174>
   12c6c:	ldr	r0, [sp, #24]
   12c70:	cmp	r0, #1
   12c74:	bne	130f8 <export_data_element_to_ascii@@Base+0x600>
   12c78:	b	12c7c <export_data_element_to_ascii@@Base+0x184>
   12c7c:	movw	r0, #480	; 0x1e0
   12c80:	movt	r0, #3
   12c84:	add	r0, r0, #800	; 0x320
   12c88:	ldr	r1, [fp, #-12]
   12c8c:	movw	r2, #80	; 0x50
   12c90:	mul	r1, r1, r2
   12c94:	add	r0, r0, r1
   12c98:	str	r0, [fp, #-24]	; 0xffffffe8
   12c9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ca0:	ldr	r0, [r0]
   12ca4:	str	r0, [sp, #44]	; 0x2c
   12ca8:	ldr	r0, [fp, #-12]
   12cac:	cmp	r0, #0
   12cb0:	bne	12cc0 <export_data_element_to_ascii@@Base+0x1c8>
   12cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12cb8:	movw	r1, #0
   12cbc:	str	r1, [r0, #44]	; 0x2c
   12cc0:	movw	r0, #4264	; 0x10a8
   12cc4:	movt	r0, #3
   12cc8:	ldr	r0, [r0, #104]	; 0x68
   12ccc:	ldr	r1, [sp, #44]	; 0x2c
   12cd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12cd4:	ldr	r2, [r2, #4]
   12cd8:	add	r1, r1, r2
   12cdc:	cmp	r0, r1
   12ce0:	movw	r0, #0
   12ce4:	movge	r0, #1
   12ce8:	and	r0, r0, #1
   12cec:	str	r0, [fp, #-32]	; 0xffffffe0
   12cf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12cf4:	cmp	r0, #0
   12cf8:	beq	12d50 <export_data_element_to_ascii@@Base+0x258>
   12cfc:	ldr	r0, [fp, #-12]
   12d00:	movw	r1, #480	; 0x1e0
   12d04:	movt	r1, #3
   12d08:	ldr	r1, [r1, #3360]	; 0xd20
   12d0c:	sub	r1, r1, #1
   12d10:	cmp	r0, r1
   12d14:	bge	12d50 <export_data_element_to_ascii@@Base+0x258>
   12d18:	movw	r0, #480	; 0x1e0
   12d1c:	movt	r0, #3
   12d20:	add	r0, r0, #800	; 0x320
   12d24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d28:	ldr	r1, [r1, #44]	; 0x2c
   12d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d30:	ldr	r2, [r2, #40]	; 0x28
   12d34:	mul	r1, r1, r2
   12d38:	ldr	r2, [fp, #-12]
   12d3c:	add	r2, r2, #1
   12d40:	movw	r3, #80	; 0x50
   12d44:	mul	r2, r2, r3
   12d48:	add	r0, r0, r2
   12d4c:	str	r1, [r0, #44]	; 0x2c
   12d50:	movw	r0, #1
   12d54:	str	r0, [fp, #-28]	; 0xffffffe4
   12d58:	movw	r0, #0
   12d5c:	str	r0, [sp, #40]	; 0x28
   12d60:	ldr	r0, [sp, #40]	; 0x28
   12d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12d68:	ldr	r1, [r1, #4]
   12d6c:	cmp	r0, r1
   12d70:	bge	12e4c <export_data_element_to_ascii@@Base+0x354>
   12d74:	movw	r0, #4264	; 0x10a8
   12d78:	movt	r0, #3
   12d7c:	add	r0, r0, #72	; 0x48
   12d80:	ldr	r1, [sp, #44]	; 0x2c
   12d84:	ldr	r2, [sp, #40]	; 0x28
   12d88:	add	r1, r1, r2
   12d8c:	movw	r2, #4264	; 0x10a8
   12d90:	movt	r2, #3
   12d94:	add	r1, r2, r1, lsl #2
   12d98:	add	r1, r1, #72	; 0x48
   12d9c:	ldr	r1, [r1]
   12da0:	cmp	r1, #0
   12da4:	str	r0, [sp, #20]
   12da8:	beq	12de4 <export_data_element_to_ascii@@Base+0x2ec>
   12dac:	ldr	r0, [sp, #44]	; 0x2c
   12db0:	ldr	r1, [sp, #40]	; 0x28
   12db4:	add	r0, r0, r1
   12db8:	movw	r2, #4264	; 0x10a8
   12dbc:	movt	r2, #3
   12dc0:	add	r0, r2, r0, lsl #2
   12dc4:	ldr	r0, [r0, #108]	; 0x6c
   12dc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dcc:	ldr	r2, [r2, #44]	; 0x2c
   12dd0:	ldr	r0, [r0, r2, lsl #2]
   12dd4:	add	r2, sp, #48	; 0x30
   12dd8:	add	r1, r2, r1, lsl #2
   12ddc:	str	r0, [r1]
   12de0:	b	12e0c <export_data_element_to_ascii@@Base+0x314>
   12de4:	ldr	r0, [sp, #44]	; 0x2c
   12de8:	ldr	r1, [sp, #40]	; 0x28
   12dec:	add	r0, r0, r1
   12df0:	movw	r2, #4264	; 0x10a8
   12df4:	movt	r2, #3
   12df8:	add	r0, r2, r0, lsl #2
   12dfc:	ldr	r0, [r0, #4]
   12e00:	add	r2, sp, #48	; 0x30
   12e04:	add	r1, r2, r1, lsl #2
   12e08:	str	r0, [r1]
   12e0c:	ldr	r0, [sp, #40]	; 0x28
   12e10:	add	r1, sp, #48	; 0x30
   12e14:	ldr	r0, [r1, r0, lsl #2]
   12e18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e1c:	mul	r0, r1, r0
   12e20:	str	r0, [fp, #-28]	; 0xffffffe4
   12e24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e28:	add	r0, r0, #48	; 0x30
   12e2c:	ldr	r1, [sp, #40]	; 0x28
   12e30:	add	r0, r0, r1, lsl #2
   12e34:	movw	r1, #0
   12e38:	str	r1, [r0]
   12e3c:	ldr	r0, [sp, #40]	; 0x28
   12e40:	add	r0, r0, #1
   12e44:	str	r0, [sp, #40]	; 0x28
   12e48:	b	12d60 <export_data_element_to_ascii@@Base+0x268>
   12e4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e50:	cmp	r0, #0
   12e54:	bne	12e5c <export_data_element_to_ascii@@Base+0x364>
   12e58:	b	13104 <export_data_element_to_ascii@@Base+0x60c>
   12e5c:	movw	r0, #480	; 0x1e0
   12e60:	movt	r0, #3
   12e64:	add	r0, r0, #144	; 0x90
   12e68:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   12e6c:	cmp	r0, #0
   12e70:	beq	12e80 <export_data_element_to_ascii@@Base+0x388>
   12e74:	movw	r0, #44732	; 0xaebc
   12e78:	movt	r0, #1
   12e7c:	blx	r0
   12e80:	movw	r0, #0
   12e84:	str	r0, [sp, #40]	; 0x28
   12e88:	ldr	r0, [sp, #40]	; 0x28
   12e8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12e90:	cmp	r0, r1
   12e94:	bge	12ff4 <export_data_element_to_ascii@@Base+0x4fc>
   12e98:	ldr	r0, [fp, #-4]
   12e9c:	ldr	r1, [fp, #-8]
   12ea0:	add	r1, r1, #1
   12ea4:	ldr	r2, [fp, #-12]
   12ea8:	add	r2, r2, #1
   12eac:	ldr	r3, [fp, #-16]
   12eb0:	bl	12bf8 <export_data_element_to_ascii@@Base+0x100>
   12eb4:	ldr	r0, [sp, #40]	; 0x28
   12eb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12ebc:	sub	r1, r1, #1
   12ec0:	cmp	r0, r1
   12ec4:	bge	12fe0 <export_data_element_to_ascii@@Base+0x4e8>
   12ec8:	movw	r0, #480	; 0x1e0
   12ecc:	movt	r0, #3
   12ed0:	add	r0, r0, #144	; 0x90
   12ed4:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   12ed8:	cmp	r0, #0
   12edc:	beq	12eec <export_data_element_to_ascii@@Base+0x3f4>
   12ee0:	movw	r0, #44732	; 0xaebc
   12ee4:	movt	r0, #1
   12ee8:	blx	r0
   12eec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12ef0:	cmp	r0, #0
   12ef4:	beq	12f40 <export_data_element_to_ascii@@Base+0x448>
   12ef8:	ldr	r0, [fp, #-12]
   12efc:	movw	r1, #480	; 0x1e0
   12f00:	movt	r1, #3
   12f04:	ldr	r1, [r1, #3360]	; 0xd20
   12f08:	sub	r1, r1, #1
   12f0c:	cmp	r0, r1
   12f10:	bge	12f40 <export_data_element_to_ascii@@Base+0x448>
   12f14:	movw	r0, #480	; 0x1e0
   12f18:	movt	r0, #3
   12f1c:	add	r0, r0, #800	; 0x320
   12f20:	ldr	r1, [fp, #-12]
   12f24:	add	r1, r1, #1
   12f28:	movw	r2, #80	; 0x50
   12f2c:	mul	r1, r1, r2
   12f30:	add	r0, r0, r1
   12f34:	ldr	r1, [r0, #44]	; 0x2c
   12f38:	add	r1, r1, #1
   12f3c:	str	r1, [r0, #44]	; 0x2c
   12f40:	movw	r0, #4248	; 0x1098
   12f44:	movt	r0, #3
   12f48:	ldr	r0, [r0]
   12f4c:	cmp	r0, #0
   12f50:	beq	12fdc <export_data_element_to_ascii@@Base+0x4e4>
   12f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f58:	ldr	r0, [r0, #4]
   12f5c:	sub	r0, r0, #1
   12f60:	str	r0, [sp, #36]	; 0x24
   12f64:	ldr	r0, [sp, #36]	; 0x24
   12f68:	cmp	r0, #0
   12f6c:	blt	12fd8 <export_data_element_to_ascii@@Base+0x4e0>
   12f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f74:	ldr	r1, [sp, #36]	; 0x24
   12f78:	add	r0, r0, r1, lsl #2
   12f7c:	ldr	r1, [r0, #48]	; 0x30
   12f80:	add	r1, r1, #1
   12f84:	str	r1, [r0, #48]	; 0x30
   12f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f8c:	ldr	r1, [sp, #36]	; 0x24
   12f90:	add	r0, r0, r1, lsl #2
   12f94:	ldr	r0, [r0, #48]	; 0x30
   12f98:	add	r2, sp, #48	; 0x30
   12f9c:	add	r1, r2, r1, lsl #2
   12fa0:	ldr	r1, [r1]
   12fa4:	cmp	r0, r1
   12fa8:	bne	12fd0 <export_data_element_to_ascii@@Base+0x4d8>
   12fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fb0:	add	r0, r0, #48	; 0x30
   12fb4:	ldr	r1, [sp, #36]	; 0x24
   12fb8:	sub	r2, r1, #1
   12fbc:	str	r2, [sp, #36]	; 0x24
   12fc0:	add	r0, r0, r1, lsl #2
   12fc4:	movw	r1, #0
   12fc8:	str	r1, [r0]
   12fcc:	b	12fd4 <export_data_element_to_ascii@@Base+0x4dc>
   12fd0:	b	12fd8 <export_data_element_to_ascii@@Base+0x4e0>
   12fd4:	b	12f64 <export_data_element_to_ascii@@Base+0x46c>
   12fd8:	b	12fdc <export_data_element_to_ascii@@Base+0x4e4>
   12fdc:	b	12fe0 <export_data_element_to_ascii@@Base+0x4e8>
   12fe0:	b	12fe4 <export_data_element_to_ascii@@Base+0x4ec>
   12fe4:	ldr	r0, [sp, #40]	; 0x28
   12fe8:	add	r0, r0, #1
   12fec:	str	r0, [sp, #40]	; 0x28
   12ff0:	b	12e88 <export_data_element_to_ascii@@Base+0x390>
   12ff4:	movw	r0, #480	; 0x1e0
   12ff8:	movt	r0, #3
   12ffc:	add	r0, r0, #144	; 0x90
   13000:	bl	127b0 <coda_cursor_goto_parent@plt>
   13004:	str	r0, [sp, #16]
   13008:	b	13104 <export_data_element_to_ascii@@Base+0x60c>
   1300c:	movw	r0, #480	; 0x1e0
   13010:	movt	r0, #3
   13014:	add	r1, r0, #144	; 0x90
   13018:	movw	r2, #3492	; 0xda4
   1301c:	add	r0, r0, r2
   13020:	ldr	r2, [fp, #-16]
   13024:	movw	r3, #480	; 0x1e0
   13028:	movt	r3, #3
   1302c:	add	r2, r3, r2, lsl #2
   13030:	movw	r3, #3492	; 0xda4
   13034:	add	r2, r2, r3
   13038:	ldr	r2, [r2]
   1303c:	str	r0, [sp, #12]
   13040:	mov	r0, r1
   13044:	mov	r1, r2
   13048:	add	r2, sp, #32
   1304c:	bl	125f4 <coda_cursor_get_record_field_available_status@plt>
   13050:	cmp	r0, #0
   13054:	beq	13064 <export_data_element_to_ascii@@Base+0x56c>
   13058:	movw	r0, #44732	; 0xaebc
   1305c:	movt	r0, #1
   13060:	blx	r0
   13064:	ldr	r0, [sp, #32]
   13068:	cmp	r0, #0
   1306c:	beq	130f4 <export_data_element_to_ascii@@Base+0x5fc>
   13070:	movw	r0, #480	; 0x1e0
   13074:	movt	r0, #3
   13078:	add	r1, r0, #144	; 0x90
   1307c:	movw	r2, #3492	; 0xda4
   13080:	add	r0, r0, r2
   13084:	ldr	r2, [fp, #-16]
   13088:	movw	r3, #480	; 0x1e0
   1308c:	movt	r3, #3
   13090:	add	r2, r3, r2, lsl #2
   13094:	movw	r3, #3492	; 0xda4
   13098:	add	r2, r2, r3
   1309c:	ldr	r2, [r2]
   130a0:	str	r0, [sp, #8]
   130a4:	mov	r0, r1
   130a8:	mov	r1, r2
   130ac:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   130b0:	cmp	r0, #0
   130b4:	beq	130c4 <export_data_element_to_ascii@@Base+0x5cc>
   130b8:	movw	r0, #44732	; 0xaebc
   130bc:	movt	r0, #1
   130c0:	blx	r0
   130c4:	ldr	r0, [fp, #-4]
   130c8:	ldr	r1, [fp, #-8]
   130cc:	add	r1, r1, #1
   130d0:	ldr	r2, [fp, #-12]
   130d4:	ldr	r3, [fp, #-16]
   130d8:	add	r3, r3, #1
   130dc:	bl	12bf8 <export_data_element_to_ascii@@Base+0x100>
   130e0:	movw	r0, #480	; 0x1e0
   130e4:	movt	r0, #3
   130e8:	add	r0, r0, #144	; 0x90
   130ec:	bl	127b0 <coda_cursor_goto_parent@plt>
   130f0:	str	r0, [sp, #4]
   130f4:	b	13104 <export_data_element_to_ascii@@Base+0x60c>
   130f8:	ldr	r0, [fp, #-4]
   130fc:	ldr	r1, [fp, #-8]
   13100:	bl	1310c <export_data_element_to_ascii@@Base+0x614>
   13104:	mov	sp, fp
   13108:	pop	{fp, pc}
   1310c:	push	{r4, r5, fp, lr}
   13110:	add	fp, sp, #8
   13114:	sub	sp, sp, #376	; 0x178
   13118:	str	r0, [fp, #-12]
   1311c:	str	r1, [fp, #-16]
   13120:	movw	r0, #4248	; 0x1098
   13124:	movt	r0, #3
   13128:	ldr	r0, [r0]
   1312c:	cmp	r0, #0
   13130:	beq	1313c <export_data_element_to_ascii@@Base+0x644>
   13134:	ldr	r0, [fp, #-12]
   13138:	bl	13ad8 <export_data_element_to_ascii@@Base+0xfe0>
   1313c:	movw	r0, #480	; 0x1e0
   13140:	movt	r0, #3
   13144:	add	r0, r0, #8
   13148:	ldr	r1, [fp, #-16]
   1314c:	movw	r2, #480	; 0x1e0
   13150:	movt	r2, #3
   13154:	add	r1, r2, r1, lsl #2
   13158:	add	r1, r1, #8
   1315c:	ldr	r1, [r1]
   13160:	str	r0, [sp, #164]	; 0xa4
   13164:	mov	r0, r1
   13168:	sub	r1, fp, #20
   1316c:	bl	129fc <coda_type_get_class@plt>
   13170:	cmp	r0, #0
   13174:	beq	13184 <export_data_element_to_ascii@@Base+0x68c>
   13178:	movw	r0, #44732	; 0xaebc
   1317c:	movt	r0, #1
   13180:	blx	r0
   13184:	ldr	r0, [fp, #-20]	; 0xffffffec
   13188:	cmp	r0, #2
   1318c:	str	r0, [sp, #160]	; 0xa0
   13190:	bcc	13a9c <export_data_element_to_ascii@@Base+0xfa4>
   13194:	b	13198 <export_data_element_to_ascii@@Base+0x6a0>
   13198:	ldr	r0, [sp, #160]	; 0xa0
   1319c:	sub	r1, r0, #2
   131a0:	cmp	r1, #4
   131a4:	bcc	131bc <export_data_element_to_ascii@@Base+0x6c4>
   131a8:	b	131ac <export_data_element_to_ascii@@Base+0x6b4>
   131ac:	ldr	r0, [sp, #160]	; 0xa0
   131b0:	cmp	r0, #6
   131b4:	beq	13894 <export_data_element_to_ascii@@Base+0xd9c>
   131b8:	b	13abc <export_data_element_to_ascii@@Base+0xfc4>
   131bc:	movw	r0, #480	; 0x1e0
   131c0:	movt	r0, #3
   131c4:	add	r0, r0, #8
   131c8:	ldr	r1, [fp, #-16]
   131cc:	movw	r2, #480	; 0x1e0
   131d0:	movt	r2, #3
   131d4:	add	r1, r2, r1, lsl #2
   131d8:	add	r1, r1, #8
   131dc:	ldr	r1, [r1]
   131e0:	str	r0, [sp, #156]	; 0x9c
   131e4:	mov	r0, r1
   131e8:	sub	r1, fp, #24
   131ec:	bl	127d4 <coda_type_get_read_type@plt>
   131f0:	cmp	r0, #0
   131f4:	beq	13204 <export_data_element_to_ascii@@Base+0x70c>
   131f8:	movw	r0, #44732	; 0xaebc
   131fc:	movt	r0, #1
   13200:	blx	r0
   13204:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13208:	add	r0, r0, #1
   1320c:	cmp	r0, #13
   13210:	str	r0, [sp, #152]	; 0x98
   13214:	bhi	13890 <export_data_element_to_ascii@@Base+0xd98>
   13218:	add	r0, pc, #8
   1321c:	ldr	r1, [sp, #152]	; 0x98
   13220:	ldr	r0, [r0, r1, lsl #2]
   13224:	mov	pc, r0
   13228:	andeq	r3, r1, r0, ror r8
   1322c:	andeq	r3, r1, ip, asr #13
   13230:	andeq	r3, r1, r0, lsl r7
   13234:	andeq	r3, r1, ip, asr #13
   13238:	andeq	r3, r1, r0, lsl r7
   1323c:	andeq	r3, r1, ip, asr #13
   13240:	andeq	r3, r1, r0, lsl r7
   13244:	andeq	r3, r1, r4, asr r7
   13248:	andeq	r3, r1, r8, lsr #15
   1324c:	strdeq	r3, [r1], -ip
   13250:	strdeq	r3, [r1], -ip
   13254:	andeq	r3, r1, r0, ror #4
   13258:	ldrdeq	r3, [r1], -r4
   1325c:	ldrdeq	r3, [r1], -r4
   13260:	movw	r0, #480	; 0x1e0
   13264:	movt	r0, #3
   13268:	add	r0, r0, #144	; 0x90
   1326c:	sub	r1, fp, #25
   13270:	bl	12858 <coda_cursor_read_char@plt>
   13274:	cmp	r0, #0
   13278:	beq	13288 <export_data_element_to_ascii@@Base+0x790>
   1327c:	movw	r0, #44732	; 0xaebc
   13280:	movt	r0, #1
   13284:	blx	r0
   13288:	movw	r0, #4636	; 0x121c
   1328c:	movt	r0, #3
   13290:	ldr	r0, [r0]
   13294:	cmp	r0, #0
   13298:	beq	132b8 <export_data_element_to_ascii@@Base+0x7c0>
   1329c:	ldr	r0, [fp, #-12]
   132a0:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   132a4:	movw	r1, #56216	; 0xdb98
   132a8:	movt	r1, #1
   132ac:	bl	12810 <fprintf@plt>
   132b0:	str	r0, [sp, #148]	; 0x94
   132b4:	b	132d0 <export_data_element_to_ascii@@Base+0x7d8>
   132b8:	ldr	r0, [fp, #-12]
   132bc:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   132c0:	movw	r1, #56221	; 0xdb9d
   132c4:	movt	r1, #1
   132c8:	bl	12810 <fprintf@plt>
   132cc:	str	r0, [sp, #144]	; 0x90
   132d0:	b	13890 <export_data_element_to_ascii@@Base+0xd98>
   132d4:	movw	r0, #480	; 0x1e0
   132d8:	movt	r0, #3
   132dc:	add	r0, r0, #144	; 0x90
   132e0:	sub	r1, fp, #32
   132e4:	bl	127e0 <coda_cursor_get_string_length@plt>
   132e8:	cmp	r0, #0
   132ec:	beq	132fc <export_data_element_to_ascii@@Base+0x804>
   132f0:	movw	r0, #44732	; 0xaebc
   132f4:	movt	r0, #1
   132f8:	blx	r0
   132fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13300:	add	r0, r0, #1
   13304:	bl	12780 <malloc@plt>
   13308:	str	r0, [fp, #-36]	; 0xffffffdc
   1330c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13310:	movw	lr, #0
   13314:	cmp	r0, lr
   13318:	bne	13350 <export_data_element_to_ascii@@Base+0x858>
   1331c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13320:	add	r2, r0, #1
   13324:	mvn	r0, #0
   13328:	movw	r1, #56224	; 0xdba0
   1332c:	movt	r1, #1
   13330:	movw	r3, #56277	; 0xdbd5
   13334:	movt	r3, #1
   13338:	movw	ip, #126	; 0x7e
   1333c:	str	ip, [sp]
   13340:	bl	1260c <coda_set_error@plt>
   13344:	movw	r0, #44732	; 0xaebc
   13348:	movt	r0, #1
   1334c:	blx	r0
   13350:	movw	r0, #480	; 0x1e0
   13354:	movt	r0, #3
   13358:	add	r0, r0, #144	; 0x90
   1335c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13360:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13364:	add	r2, r2, #1
   13368:	bl	127a4 <coda_cursor_read_string@plt>
   1336c:	cmp	r0, #0
   13370:	beq	13380 <export_data_element_to_ascii@@Base+0x888>
   13374:	movw	r0, #44732	; 0xaebc
   13378:	movt	r0, #1
   1337c:	blx	r0
   13380:	movw	r0, #4636	; 0x121c
   13384:	movt	r0, #3
   13388:	ldr	r0, [r0]
   1338c:	cmp	r0, #0
   13390:	beq	133b0 <export_data_element_to_ascii@@Base+0x8b8>
   13394:	ldr	r0, [fp, #-12]
   13398:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1339c:	movw	r1, #58308	; 0xe3c4
   133a0:	movt	r1, #1
   133a4:	bl	12810 <fprintf@plt>
   133a8:	str	r0, [sp, #140]	; 0x8c
   133ac:	b	133c8 <export_data_element_to_ascii@@Base+0x8d0>
   133b0:	ldr	r0, [fp, #-12]
   133b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   133b8:	movw	r1, #58242	; 0xe382
   133bc:	movt	r1, #1
   133c0:	bl	12810 <fprintf@plt>
   133c4:	str	r0, [sp, #136]	; 0x88
   133c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   133cc:	bl	12654 <free@plt>
   133d0:	b	13890 <export_data_element_to_ascii@@Base+0xd98>
   133d4:	movw	r0, #480	; 0x1e0
   133d8:	movt	r0, #3
   133dc:	add	r0, r0, #144	; 0x90
   133e0:	sub	r1, fp, #48	; 0x30
   133e4:	bl	12948 <coda_cursor_get_bit_size@plt>
   133e8:	cmp	r0, #0
   133ec:	beq	133fc <export_data_element_to_ascii@@Base+0x904>
   133f0:	movw	r0, #44732	; 0xaebc
   133f4:	movt	r0, #1
   133f8:	blx	r0
   133fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13400:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13404:	lsr	r2, r0, #3
   13408:	orr	r2, r2, r1, lsl #29
   1340c:	asr	r1, r1, #3
   13410:	and	r0, r0, #7
   13414:	adds	r3, r2, #1
   13418:	adc	ip, r1, #0
   1341c:	cmp	r0, #0
   13420:	movne	r2, r3
   13424:	cmp	r0, #0
   13428:	movne	r1, ip
   1342c:	str	r2, [fp, #-56]	; 0xffffffc8
   13430:	str	r1, [fp, #-52]	; 0xffffffcc
   13434:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13438:	bl	12780 <malloc@plt>
   1343c:	str	r0, [fp, #-60]	; 0xffffffc4
   13440:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13444:	movw	r1, #0
   13448:	cmp	r0, r1
   1344c:	bne	13480 <export_data_element_to_ascii@@Base+0x988>
   13450:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13454:	mvn	r0, #0
   13458:	movw	r1, #56224	; 0xdba0
   1345c:	movt	r1, #1
   13460:	movw	r3, #56277	; 0xdbd5
   13464:	movt	r3, #1
   13468:	movw	ip, #163	; 0xa3
   1346c:	str	ip, [sp]
   13470:	bl	1260c <coda_set_error@plt>
   13474:	movw	r0, #44732	; 0xaebc
   13478:	movt	r0, #1
   1347c:	blx	r0
   13480:	movw	r0, #480	; 0x1e0
   13484:	movt	r0, #3
   13488:	add	r0, r0, #144	; 0x90
   1348c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   13490:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13494:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13498:	mov	ip, sp
   1349c:	str	r3, [ip, #4]
   134a0:	str	r2, [ip]
   134a4:	movw	r2, #480	; 0x1e0
   134a8:	movt	r2, #3
   134ac:	add	r2, r2, #144	; 0x90
   134b0:	mov	r3, #0
   134b4:	str	r0, [sp, #132]	; 0x84
   134b8:	mov	r0, r2
   134bc:	mov	r2, r3
   134c0:	bl	129d8 <coda_cursor_read_bits@plt>
   134c4:	cmp	r0, #0
   134c8:	beq	134d8 <export_data_element_to_ascii@@Base+0x9e0>
   134cc:	movw	r0, #44732	; 0xaebc
   134d0:	movt	r0, #1
   134d4:	blx	r0
   134d8:	movw	r0, #0
   134dc:	str	r0, [fp, #-64]	; 0xffffffc0
   134e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   134e4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   134e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   134ec:	subs	r1, r0, r1
   134f0:	rscs	r0, r2, r0, asr #31
   134f4:	str	r1, [sp, #128]	; 0x80
   134f8:	str	r0, [sp, #124]	; 0x7c
   134fc:	bge	136c0 <export_data_element_to_ascii@@Base+0xbc8>
   13500:	b	13504 <export_data_element_to_ascii@@Base+0xa0c>
   13504:	ldr	r0, [fp, #-60]	; 0xffffffc4
   13508:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1350c:	ldrb	r0, [r0, r1]
   13510:	strb	r0, [fp, #-65]	; 0xffffffbf
   13514:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13518:	mov	r1, r0
   1351c:	cmp	r0, #7
   13520:	str	r1, [sp, #120]	; 0x78
   13524:	beq	1359c <export_data_element_to_ascii@@Base+0xaa4>
   13528:	b	1352c <export_data_element_to_ascii@@Base+0xa34>
   1352c:	ldr	r0, [sp, #120]	; 0x78
   13530:	cmp	r0, #8
   13534:	beq	135b4 <export_data_element_to_ascii@@Base+0xabc>
   13538:	b	1353c <export_data_element_to_ascii@@Base+0xa44>
   1353c:	ldr	r0, [sp, #120]	; 0x78
   13540:	cmp	r0, #9
   13544:	beq	135cc <export_data_element_to_ascii@@Base+0xad4>
   13548:	b	1354c <export_data_element_to_ascii@@Base+0xa54>
   1354c:	ldr	r0, [sp, #120]	; 0x78
   13550:	cmp	r0, #10
   13554:	beq	135e4 <export_data_element_to_ascii@@Base+0xaec>
   13558:	b	1355c <export_data_element_to_ascii@@Base+0xa64>
   1355c:	ldr	r0, [sp, #120]	; 0x78
   13560:	cmp	r0, #11
   13564:	beq	135fc <export_data_element_to_ascii@@Base+0xb04>
   13568:	b	1356c <export_data_element_to_ascii@@Base+0xa74>
   1356c:	ldr	r0, [sp, #120]	; 0x78
   13570:	cmp	r0, #12
   13574:	beq	13614 <export_data_element_to_ascii@@Base+0xb1c>
   13578:	b	1357c <export_data_element_to_ascii@@Base+0xa84>
   1357c:	ldr	r0, [sp, #120]	; 0x78
   13580:	cmp	r0, #13
   13584:	beq	1362c <export_data_element_to_ascii@@Base+0xb34>
   13588:	b	1358c <export_data_element_to_ascii@@Base+0xa94>
   1358c:	ldr	r0, [sp, #120]	; 0x78
   13590:	cmp	r0, #92	; 0x5c
   13594:	beq	13644 <export_data_element_to_ascii@@Base+0xb4c>
   13598:	b	1365c <export_data_element_to_ascii@@Base+0xb64>
   1359c:	ldr	r0, [fp, #-12]
   135a0:	movw	r1, #56361	; 0xdc29
   135a4:	movt	r1, #1
   135a8:	bl	12810 <fprintf@plt>
   135ac:	str	r0, [sp, #116]	; 0x74
   135b0:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   135b4:	ldr	r0, [fp, #-12]
   135b8:	movw	r1, #56364	; 0xdc2c
   135bc:	movt	r1, #1
   135c0:	bl	12810 <fprintf@plt>
   135c4:	str	r0, [sp, #112]	; 0x70
   135c8:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   135cc:	ldr	r0, [fp, #-12]
   135d0:	movw	r1, #56367	; 0xdc2f
   135d4:	movt	r1, #1
   135d8:	bl	12810 <fprintf@plt>
   135dc:	str	r0, [sp, #108]	; 0x6c
   135e0:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   135e4:	ldr	r0, [fp, #-12]
   135e8:	movw	r1, #56370	; 0xdc32
   135ec:	movt	r1, #1
   135f0:	bl	12810 <fprintf@plt>
   135f4:	str	r0, [sp, #104]	; 0x68
   135f8:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   135fc:	ldr	r0, [fp, #-12]
   13600:	movw	r1, #56373	; 0xdc35
   13604:	movt	r1, #1
   13608:	bl	12810 <fprintf@plt>
   1360c:	str	r0, [sp, #100]	; 0x64
   13610:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   13614:	ldr	r0, [fp, #-12]
   13618:	movw	r1, #56376	; 0xdc38
   1361c:	movt	r1, #1
   13620:	bl	12810 <fprintf@plt>
   13624:	str	r0, [sp, #96]	; 0x60
   13628:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   1362c:	ldr	r0, [fp, #-12]
   13630:	movw	r1, #56379	; 0xdc3b
   13634:	movt	r1, #1
   13638:	bl	12810 <fprintf@plt>
   1363c:	str	r0, [sp, #92]	; 0x5c
   13640:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   13644:	ldr	r0, [fp, #-12]
   13648:	movw	r1, #56382	; 0xdc3e
   1364c:	movt	r1, #1
   13650:	bl	12810 <fprintf@plt>
   13654:	str	r0, [sp, #88]	; 0x58
   13658:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   1365c:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   13660:	cmp	r0, #32
   13664:	blt	13690 <export_data_element_to_ascii@@Base+0xb98>
   13668:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1366c:	cmp	r0, #126	; 0x7e
   13670:	bgt	13690 <export_data_element_to_ascii@@Base+0xb98>
   13674:	ldr	r0, [fp, #-12]
   13678:	ldrb	r2, [fp, #-65]	; 0xffffffbf
   1367c:	movw	r1, #56221	; 0xdb9d
   13680:	movt	r1, #1
   13684:	bl	12810 <fprintf@plt>
   13688:	str	r0, [sp, #84]	; 0x54
   1368c:	b	136a8 <export_data_element_to_ascii@@Base+0xbb0>
   13690:	ldr	r0, [fp, #-12]
   13694:	ldrb	r2, [fp, #-65]	; 0xffffffbf
   13698:	movw	r1, #56385	; 0xdc41
   1369c:	movt	r1, #1
   136a0:	bl	12810 <fprintf@plt>
   136a4:	str	r0, [sp, #80]	; 0x50
   136a8:	b	136ac <export_data_element_to_ascii@@Base+0xbb4>
   136ac:	b	136b0 <export_data_element_to_ascii@@Base+0xbb8>
   136b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   136b4:	add	r0, r0, #1
   136b8:	str	r0, [fp, #-64]	; 0xffffffc0
   136bc:	b	134e0 <export_data_element_to_ascii@@Base+0x9e8>
   136c0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   136c4:	bl	12654 <free@plt>
   136c8:	b	13890 <export_data_element_to_ascii@@Base+0xd98>
   136cc:	movw	r0, #480	; 0x1e0
   136d0:	movt	r0, #3
   136d4:	add	r0, r0, #144	; 0x90
   136d8:	sub	r1, fp, #72	; 0x48
   136dc:	bl	12984 <coda_cursor_read_int32@plt>
   136e0:	cmp	r0, #0
   136e4:	beq	136f4 <export_data_element_to_ascii@@Base+0xbfc>
   136e8:	movw	r0, #44732	; 0xaebc
   136ec:	movt	r0, #1
   136f0:	blx	r0
   136f4:	ldr	r0, [fp, #-12]
   136f8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   136fc:	movw	r1, #58062	; 0xe2ce
   13700:	movt	r1, #1
   13704:	bl	12810 <fprintf@plt>
   13708:	str	r0, [sp, #76]	; 0x4c
   1370c:	b	13890 <export_data_element_to_ascii@@Base+0xd98>
   13710:	movw	r0, #480	; 0x1e0
   13714:	movt	r0, #3
   13718:	add	r0, r0, #144	; 0x90
   1371c:	sub	r1, fp, #76	; 0x4c
   13720:	bl	12678 <coda_cursor_read_uint32@plt>
   13724:	cmp	r0, #0
   13728:	beq	13738 <export_data_element_to_ascii@@Base+0xc40>
   1372c:	movw	r0, #44732	; 0xaebc
   13730:	movt	r0, #1
   13734:	blx	r0
   13738:	ldr	r0, [fp, #-12]
   1373c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13740:	movw	r1, #56391	; 0xdc47
   13744:	movt	r1, #1
   13748:	bl	12810 <fprintf@plt>
   1374c:	str	r0, [sp, #72]	; 0x48
   13750:	b	13890 <export_data_element_to_ascii@@Base+0xd98>
   13754:	movw	r0, #480	; 0x1e0
   13758:	movt	r0, #3
   1375c:	add	r0, r0, #144	; 0x90
   13760:	sub	r1, fp, #88	; 0x58
   13764:	bl	128f4 <coda_cursor_read_int64@plt>
   13768:	cmp	r0, #0
   1376c:	beq	1377c <export_data_element_to_ascii@@Base+0xc84>
   13770:	movw	r0, #44732	; 0xaebc
   13774:	movt	r0, #1
   13778:	blx	r0
   1377c:	sub	r2, fp, #109	; 0x6d
   13780:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13784:	ldr	r1, [fp, #-84]	; 0xffffffac
   13788:	bl	129e4 <coda_str64@plt>
   1378c:	sub	r2, fp, #109	; 0x6d
   13790:	ldr	r0, [fp, #-12]
   13794:	movw	r1, #58242	; 0xe382
   13798:	movt	r1, #1
   1379c:	bl	12810 <fprintf@plt>
   137a0:	str	r0, [sp, #68]	; 0x44
   137a4:	b	13890 <export_data_element_to_ascii@@Base+0xd98>
   137a8:	movw	r0, #480	; 0x1e0
   137ac:	movt	r0, #3
   137b0:	add	r0, r0, #144	; 0x90
   137b4:	sub	r1, fp, #120	; 0x78
   137b8:	bl	127ec <coda_cursor_read_uint64@plt>
   137bc:	cmp	r0, #0
   137c0:	beq	137d0 <export_data_element_to_ascii@@Base+0xcd8>
   137c4:	movw	r0, #44732	; 0xaebc
   137c8:	movt	r0, #1
   137cc:	blx	r0
   137d0:	sub	r2, fp, #141	; 0x8d
   137d4:	ldr	r0, [fp, #-120]	; 0xffffff88
   137d8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   137dc:	bl	12648 <coda_str64u@plt>
   137e0:	sub	r2, fp, #141	; 0x8d
   137e4:	ldr	r0, [fp, #-12]
   137e8:	movw	r1, #58242	; 0xe382
   137ec:	movt	r1, #1
   137f0:	bl	12810 <fprintf@plt>
   137f4:	str	r0, [sp, #64]	; 0x40
   137f8:	b	13890 <export_data_element_to_ascii@@Base+0xd98>
   137fc:	movw	r0, #480	; 0x1e0
   13800:	movt	r0, #3
   13804:	add	r0, r0, #144	; 0x90
   13808:	sub	r1, fp, #152	; 0x98
   1380c:	bl	127f8 <coda_cursor_read_double@plt>
   13810:	cmp	r0, #0
   13814:	beq	13824 <export_data_element_to_ascii@@Base+0xd2c>
   13818:	movw	r0, #44732	; 0xaebc
   1381c:	movt	r0, #1
   13820:	blx	r0
   13824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13828:	cmp	r0, #8
   1382c:	bne	13850 <export_data_element_to_ascii@@Base+0xd58>
   13830:	ldr	r0, [fp, #-12]
   13834:	vldr	d16, [fp, #-152]	; 0xffffff68
   13838:	movw	r1, #56395	; 0xdc4b
   1383c:	movt	r1, #1
   13840:	vmov	r2, r3, d16
   13844:	bl	12810 <fprintf@plt>
   13848:	str	r0, [sp, #60]	; 0x3c
   1384c:	b	1386c <export_data_element_to_ascii@@Base+0xd74>
   13850:	ldr	r0, [fp, #-12]
   13854:	vldr	d16, [fp, #-152]	; 0xffffff68
   13858:	movw	r1, #56400	; 0xdc50
   1385c:	movt	r1, #1
   13860:	vmov	r2, r3, d16
   13864:	bl	12810 <fprintf@plt>
   13868:	str	r0, [sp, #56]	; 0x38
   1386c:	b	13890 <export_data_element_to_ascii@@Base+0xd98>
   13870:	movw	r0, #56775	; 0xddc7
   13874:	movt	r0, #1
   13878:	movw	r1, #56277	; 0xdbd5
   1387c:	movt	r1, #1
   13880:	movw	r2, #294	; 0x126
   13884:	movw	r3, #56406	; 0xdc56
   13888:	movt	r3, #1
   1388c:	bl	129f0 <__assert_fail@plt>
   13890:	b	13abc <export_data_element_to_ascii@@Base+0xfc4>
   13894:	movw	r0, #480	; 0x1e0
   13898:	movt	r0, #3
   1389c:	add	r0, r0, #8
   138a0:	ldr	r1, [fp, #-16]
   138a4:	movw	r2, #480	; 0x1e0
   138a8:	movt	r2, #3
   138ac:	add	r1, r2, r1, lsl #2
   138b0:	add	r1, r1, #8
   138b4:	ldr	r1, [r1]
   138b8:	str	r0, [sp, #52]	; 0x34
   138bc:	mov	r0, r1
   138c0:	sub	r1, fp, #156	; 0x9c
   138c4:	bl	1287c <coda_type_get_special_type@plt>
   138c8:	cmp	r0, #0
   138cc:	beq	138dc <export_data_element_to_ascii@@Base+0xde4>
   138d0:	movw	r0, #44732	; 0xaebc
   138d4:	movt	r0, #1
   138d8:	blx	r0
   138dc:	ldr	r0, [fp, #-156]	; 0xffffff64
   138e0:	cmp	r0, #0
   138e4:	str	r0, [sp, #48]	; 0x30
   138e8:	beq	13914 <export_data_element_to_ascii@@Base+0xe1c>
   138ec:	b	138f0 <export_data_element_to_ascii@@Base+0xdf8>
   138f0:	ldr	r0, [sp, #48]	; 0x30
   138f4:	sub	r1, r0, #1
   138f8:	cmp	r1, #2
   138fc:	bcc	13918 <export_data_element_to_ascii@@Base+0xe20>
   13900:	b	13904 <export_data_element_to_ascii@@Base+0xe0c>
   13904:	ldr	r0, [sp, #48]	; 0x30
   13908:	cmp	r0, #3
   1390c:	beq	13a30 <export_data_element_to_ascii@@Base+0xf38>
   13910:	b	13a98 <export_data_element_to_ascii@@Base+0xfa0>
   13914:	b	13a98 <export_data_element_to_ascii@@Base+0xfa0>
   13918:	movw	r0, #480	; 0x1e0
   1391c:	movt	r0, #3
   13920:	add	r0, r0, #144	; 0x90
   13924:	sub	r1, fp, #168	; 0xa8
   13928:	bl	127f8 <coda_cursor_read_double@plt>
   1392c:	cmp	r0, #0
   13930:	beq	13940 <export_data_element_to_ascii@@Base+0xe48>
   13934:	movw	r0, #44732	; 0xaebc
   13938:	movt	r0, #1
   1393c:	blx	r0
   13940:	ldr	r0, [fp, #-156]	; 0xffffff64
   13944:	cmp	r0, #2
   13948:	bne	13a10 <export_data_element_to_ascii@@Base+0xf18>
   1394c:	movw	r0, #468	; 0x1d4
   13950:	movt	r0, #3
   13954:	ldr	r0, [r0]
   13958:	cmp	r0, #0
   1395c:	beq	13a10 <export_data_element_to_ascii@@Base+0xf18>
   13960:	vldr	d0, [fp, #-168]	; 0xffffff58
   13964:	bl	12804 <coda_isNaN@plt>
   13968:	cmp	r0, #0
   1396c:	bne	13980 <export_data_element_to_ascii@@Base+0xe88>
   13970:	vldr	d0, [fp, #-168]	; 0xffffff58
   13974:	bl	126b4 <coda_isInf@plt>
   13978:	cmp	r0, #0
   1397c:	beq	13998 <export_data_element_to_ascii@@Base+0xea0>
   13980:	add	r0, sp, #189	; 0xbd
   13984:	movw	r1, #56441	; 0xdc79
   13988:	movt	r1, #1
   1398c:	bl	12744 <strcpy@plt>
   13990:	str	r0, [sp, #44]	; 0x2c
   13994:	b	139c4 <export_data_element_to_ascii@@Base+0xecc>
   13998:	add	r1, sp, #189	; 0xbd
   1399c:	vldr	d0, [fp, #-168]	; 0xffffff58
   139a0:	movw	r0, #56468	; 0xdc94
   139a4:	movt	r0, #1
   139a8:	bl	12630 <coda_time_double_to_string@plt>
   139ac:	cmp	r0, #0
   139b0:	beq	139c0 <export_data_element_to_ascii@@Base+0xec8>
   139b4:	movw	r0, #44732	; 0xaebc
   139b8:	movt	r0, #1
   139bc:	blx	r0
   139c0:	b	139c4 <export_data_element_to_ascii@@Base+0xecc>
   139c4:	movw	r0, #4636	; 0x121c
   139c8:	movt	r0, #3
   139cc:	ldr	r0, [r0]
   139d0:	cmp	r0, #0
   139d4:	beq	139f4 <export_data_element_to_ascii@@Base+0xefc>
   139d8:	add	r2, sp, #189	; 0xbd
   139dc:	ldr	r0, [fp, #-12]
   139e0:	movw	r1, #58308	; 0xe3c4
   139e4:	movt	r1, #1
   139e8:	bl	12810 <fprintf@plt>
   139ec:	str	r0, [sp, #40]	; 0x28
   139f0:	b	13a0c <export_data_element_to_ascii@@Base+0xf14>
   139f4:	add	r2, sp, #189	; 0xbd
   139f8:	ldr	r0, [fp, #-12]
   139fc:	movw	r1, #58242	; 0xe382
   13a00:	movt	r1, #1
   13a04:	bl	12810 <fprintf@plt>
   13a08:	str	r0, [sp, #36]	; 0x24
   13a0c:	b	13a2c <export_data_element_to_ascii@@Base+0xf34>
   13a10:	ldr	r0, [fp, #-12]
   13a14:	vldr	d16, [fp, #-168]	; 0xffffff58
   13a18:	movw	r1, #56400	; 0xdc50
   13a1c:	movt	r1, #1
   13a20:	vmov	r2, r3, d16
   13a24:	bl	12810 <fprintf@plt>
   13a28:	str	r0, [sp, #32]
   13a2c:	b	13a98 <export_data_element_to_ascii@@Base+0xfa0>
   13a30:	movw	r0, #480	; 0x1e0
   13a34:	movt	r0, #3
   13a38:	add	r0, r0, #144	; 0x90
   13a3c:	add	r1, sp, #168	; 0xa8
   13a40:	bl	12924 <coda_cursor_read_complex_double_pair@plt>
   13a44:	cmp	r0, #0
   13a48:	beq	13a58 <export_data_element_to_ascii@@Base+0xf60>
   13a4c:	movw	r0, #44732	; 0xaebc
   13a50:	movt	r0, #1
   13a54:	blx	r0
   13a58:	ldr	r0, [fp, #-12]
   13a5c:	vldr	d16, [sp, #168]	; 0xa8
   13a60:	movw	r1, #4236	; 0x108c
   13a64:	movt	r1, #3
   13a68:	ldr	r1, [r1]
   13a6c:	vldr	d17, [sp, #176]	; 0xb0
   13a70:	movw	r2, #56495	; 0xdcaf
   13a74:	movt	r2, #1
   13a78:	str	r1, [sp, #28]
   13a7c:	mov	r1, r2
   13a80:	vmov	r2, r3, d16
   13a84:	ldr	ip, [sp, #28]
   13a88:	str	ip, [sp]
   13a8c:	vstr	d17, [sp, #8]
   13a90:	bl	12810 <fprintf@plt>
   13a94:	str	r0, [sp, #24]
   13a98:	b	13abc <export_data_element_to_ascii@@Base+0xfc4>
   13a9c:	movw	r0, #56775	; 0xddc7
   13aa0:	movt	r0, #1
   13aa4:	movw	r1, #56277	; 0xdbd5
   13aa8:	movt	r1, #1
   13aac:	movw	r2, #368	; 0x170
   13ab0:	movw	r3, #56406	; 0xdc56
   13ab4:	movt	r3, #1
   13ab8:	bl	129f0 <__assert_fail@plt>
   13abc:	ldr	r0, [fp, #-12]
   13ac0:	movw	r1, #62873	; 0xf599
   13ac4:	movt	r1, #1
   13ac8:	bl	12810 <fprintf@plt>
   13acc:	str	r0, [sp, #20]
   13ad0:	sub	sp, fp, #8
   13ad4:	pop	{r4, r5, fp, pc}
   13ad8:	push	{fp, lr}
   13adc:	mov	fp, sp
   13ae0:	sub	sp, sp, #32
   13ae4:	str	r0, [fp, #-4]
   13ae8:	movw	r0, #0
   13aec:	str	r0, [fp, #-8]
   13af0:	str	r0, [fp, #-12]
   13af4:	ldr	r0, [fp, #-12]
   13af8:	movw	r1, #480	; 0x1e0
   13afc:	movt	r1, #3
   13b00:	ldr	r1, [r1, #136]	; 0x88
   13b04:	cmp	r0, r1
   13b08:	bge	13c08 <export_data_element_to_ascii@@Base+0x1110>
   13b0c:	movw	r0, #480	; 0x1e0
   13b10:	movt	r0, #3
   13b14:	add	r0, r0, #8
   13b18:	ldr	r1, [fp, #-12]
   13b1c:	movw	r2, #480	; 0x1e0
   13b20:	movt	r2, #3
   13b24:	add	r1, r2, r1, lsl #2
   13b28:	add	r1, r1, #8
   13b2c:	ldr	r1, [r1]
   13b30:	str	r0, [sp, #8]
   13b34:	mov	r0, r1
   13b38:	add	r1, sp, #16
   13b3c:	bl	129fc <coda_type_get_class@plt>
   13b40:	cmp	r0, #0
   13b44:	beq	13b54 <export_data_element_to_ascii@@Base+0x105c>
   13b48:	movw	r0, #44732	; 0xaebc
   13b4c:	movt	r0, #1
   13b50:	blx	r0
   13b54:	ldr	r0, [sp, #16]
   13b58:	cmp	r0, #1
   13b5c:	bne	13bf4 <export_data_element_to_ascii@@Base+0x10fc>
   13b60:	movw	r0, #0
   13b64:	str	r0, [sp, #12]
   13b68:	movw	r0, #480	; 0x1e0
   13b6c:	movt	r0, #3
   13b70:	add	r0, r0, #800	; 0x320
   13b74:	ldr	r1, [sp, #12]
   13b78:	ldr	r2, [fp, #-8]
   13b7c:	movw	r3, #80	; 0x50
   13b80:	mul	r2, r2, r3
   13b84:	add	r0, r0, r2
   13b88:	ldr	r0, [r0, #4]
   13b8c:	cmp	r1, r0
   13b90:	bge	13be8 <export_data_element_to_ascii@@Base+0x10f0>
   13b94:	ldr	r0, [fp, #-4]
   13b98:	ldr	r1, [fp, #-8]
   13b9c:	add	r1, r1, r1, lsl #2
   13ba0:	movw	r2, #480	; 0x1e0
   13ba4:	movt	r2, #3
   13ba8:	add	r1, r2, r1, lsl #4
   13bac:	add	r1, r1, #848	; 0x350
   13bb0:	ldr	r2, [sp, #12]
   13bb4:	add	r1, r1, r2, lsl #2
   13bb8:	ldr	r2, [r1]
   13bbc:	movw	r1, #4236	; 0x108c
   13bc0:	movt	r1, #3
   13bc4:	ldr	r3, [r1]
   13bc8:	movw	r1, #56502	; 0xdcb6
   13bcc:	movt	r1, #1
   13bd0:	bl	12810 <fprintf@plt>
   13bd4:	str	r0, [sp, #4]
   13bd8:	ldr	r0, [sp, #12]
   13bdc:	add	r0, r0, #1
   13be0:	str	r0, [sp, #12]
   13be4:	b	13b68 <export_data_element_to_ascii@@Base+0x1070>
   13be8:	ldr	r0, [fp, #-8]
   13bec:	add	r0, r0, #1
   13bf0:	str	r0, [fp, #-8]
   13bf4:	b	13bf8 <export_data_element_to_ascii@@Base+0x1100>
   13bf8:	ldr	r0, [fp, #-12]
   13bfc:	add	r0, r0, #1
   13c00:	str	r0, [fp, #-12]
   13c04:	b	13af4 <export_data_element_to_ascii@@Base+0xffc>
   13c08:	mov	sp, fp
   13c0c:	pop	{fp, pc}

00013c10 <print_debug_data@@Base>:
   13c10:	push	{r4, r5, fp, lr}
   13c14:	add	fp, sp, #8
   13c18:	sub	sp, sp, #568	; 0x238
   13c1c:	str	r0, [fp, #-12]
   13c20:	str	r1, [fp, #-16]
   13c24:	str	r2, [fp, #-20]	; 0xffffffec
   13c28:	ldr	r0, [fp, #-12]
   13c2c:	movw	r1, #0
   13c30:	cmp	r0, r1
   13c34:	bne	13c54 <print_debug_data@@Base+0x44>
   13c38:	movw	r0, #480	; 0x1e0
   13c3c:	movt	r0, #3
   13c40:	ldr	r0, [r0]
   13c44:	sub	r1, fp, #24
   13c48:	bl	12618 <coda_open@plt>
   13c4c:	str	r0, [sp, #24]
   13c50:	b	13c7c <print_debug_data@@Base+0x6c>
   13c54:	movw	r0, #480	; 0x1e0
   13c58:	movt	r0, #3
   13c5c:	ldr	r0, [r0]
   13c60:	ldr	r1, [fp, #-12]
   13c64:	ldr	r2, [fp, #-16]
   13c68:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c6c:	sub	ip, fp, #24
   13c70:	str	ip, [sp]
   13c74:	bl	12828 <coda_open_as@plt>
   13c78:	str	r0, [sp, #24]
   13c7c:	ldr	r0, [sp, #24]
   13c80:	cmp	r0, #0
   13c84:	beq	13d04 <print_debug_data@@Base+0xf4>
   13c88:	bl	129a8 <coda_get_errno@plt>
   13c8c:	ldr	r0, [r0]
   13c90:	cmn	r0, #21
   13c94:	bne	13d04 <print_debug_data@@Base+0xf4>
   13c98:	movw	r0, #0
   13c9c:	bl	12660 <coda_set_option_use_mmap@plt>
   13ca0:	ldr	lr, [fp, #-12]
   13ca4:	movw	r1, #0
   13ca8:	cmp	lr, r1
   13cac:	str	r0, [sp, #20]
   13cb0:	bne	13cd0 <print_debug_data@@Base+0xc0>
   13cb4:	movw	r0, #480	; 0x1e0
   13cb8:	movt	r0, #3
   13cbc:	ldr	r0, [r0]
   13cc0:	sub	r1, fp, #24
   13cc4:	bl	12618 <coda_open@plt>
   13cc8:	str	r0, [sp, #24]
   13ccc:	b	13cf8 <print_debug_data@@Base+0xe8>
   13cd0:	movw	r0, #480	; 0x1e0
   13cd4:	movt	r0, #3
   13cd8:	ldr	r0, [r0]
   13cdc:	ldr	r1, [fp, #-12]
   13ce0:	ldr	r2, [fp, #-16]
   13ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ce8:	sub	ip, fp, #24
   13cec:	str	ip, [sp]
   13cf0:	bl	12828 <coda_open_as@plt>
   13cf4:	str	r0, [sp, #24]
   13cf8:	movw	r0, #1
   13cfc:	bl	12660 <coda_set_option_use_mmap@plt>
   13d00:	str	r0, [sp, #16]
   13d04:	ldr	r0, [sp, #24]
   13d08:	cmp	r0, #0
   13d0c:	beq	13d1c <print_debug_data@@Base+0x10c>
   13d10:	movw	r0, #44732	; 0xaebc
   13d14:	movt	r0, #1
   13d18:	blx	r0
   13d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d20:	add	r1, sp, #28
   13d24:	bl	126fc <coda_get_product_format@plt>
   13d28:	cmp	r0, #0
   13d2c:	beq	13d3c <print_debug_data@@Base+0x12c>
   13d30:	movw	r0, #44732	; 0xaebc
   13d34:	movt	r0, #1
   13d38:	blx	r0
   13d3c:	ldr	r0, [sp, #28]
   13d40:	cmp	r0, #0
   13d44:	movw	r0, #1
   13d48:	str	r0, [sp, #12]
   13d4c:	beq	13d78 <print_debug_data@@Base+0x168>
   13d50:	ldr	r0, [sp, #28]
   13d54:	cmp	r0, #1
   13d58:	movw	r0, #1
   13d5c:	str	r0, [sp, #12]
   13d60:	beq	13d78 <print_debug_data@@Base+0x168>
   13d64:	ldr	r0, [sp, #28]
   13d68:	cmp	r0, #2
   13d6c:	movw	r0, #0
   13d70:	moveq	r0, #1
   13d74:	str	r0, [sp, #12]
   13d78:	ldr	r0, [sp, #12]
   13d7c:	and	r0, r0, #1
   13d80:	movw	r1, #412	; 0x19c
   13d84:	movt	r1, #3
   13d88:	str	r0, [r1]
   13d8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d90:	add	r0, sp, #32
   13d94:	bl	12738 <coda_cursor_set_product@plt>
   13d98:	cmp	r0, #0
   13d9c:	beq	13dac <print_debug_data@@Base+0x19c>
   13da0:	movw	r0, #44732	; 0xaebc
   13da4:	movt	r0, #1
   13da8:	blx	r0
   13dac:	movw	r0, #4256	; 0x10a0
   13db0:	movt	r0, #3
   13db4:	ldr	r0, [r0]
   13db8:	movw	r1, #0
   13dbc:	cmp	r0, r1
   13dc0:	beq	13df8 <print_debug_data@@Base+0x1e8>
   13dc4:	movw	r0, #4256	; 0x10a0
   13dc8:	movt	r0, #3
   13dcc:	ldr	r1, [r0]
   13dd0:	add	r0, sp, #32
   13dd4:	bl	1290c <coda_cursor_goto@plt>
   13dd8:	str	r0, [sp, #24]
   13ddc:	ldr	r0, [sp, #24]
   13de0:	cmp	r0, #0
   13de4:	beq	13df4 <print_debug_data@@Base+0x1e4>
   13de8:	movw	r0, #44732	; 0xaebc
   13dec:	movt	r0, #1
   13df0:	blx	r0
   13df4:	b	13df8 <print_debug_data@@Base+0x1e8>
   13df8:	movw	r0, #0
   13dfc:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   13e00:	add	lr, sp, #32
   13e04:	str	r0, [sp, #8]
   13e08:	mov	r0, lr
   13e0c:	movw	r1, #0
   13e10:	bl	13e28 <print_debug_data@@Base+0x218>
   13e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e18:	bl	128e8 <coda_close@plt>
   13e1c:	str	r0, [sp, #4]
   13e20:	sub	sp, fp, #8
   13e24:	pop	{r4, r5, fp, pc}
   13e28:	push	{r4, r5, fp, lr}
   13e2c:	add	fp, sp, #8
   13e30:	sub	sp, sp, #1184	; 0x4a0
   13e34:	str	r0, [fp, #-12]
   13e38:	str	r1, [fp, #-16]
   13e3c:	ldr	r0, [fp, #-12]
   13e40:	sub	r1, fp, #24
   13e44:	bl	126d8 <coda_cursor_has_attributes@plt>
   13e48:	cmp	r0, #0
   13e4c:	beq	13e5c <print_debug_data@@Base+0x24c>
   13e50:	movw	r0, #44732	; 0xaebc
   13e54:	movt	r0, #1
   13e58:	blx	r0
   13e5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e60:	cmp	r0, #0
   13e64:	beq	13ee0 <print_debug_data@@Base+0x2d0>
   13e68:	ldr	r0, [fp, #-12]
   13e6c:	bl	1284c <coda_cursor_goto_attributes@plt>
   13e70:	cmp	r0, #0
   13e74:	beq	13e84 <print_debug_data@@Base+0x274>
   13e78:	movw	r0, #44732	; 0xaebc
   13e7c:	movt	r0, #1
   13e80:	blx	r0
   13e84:	movw	r0, #56508	; 0xdcbc
   13e88:	movt	r0, #1
   13e8c:	bl	14dac <print_debug_data@@Base+0x119c>
   13e90:	movw	lr, #436	; 0x1b4
   13e94:	movt	lr, #3
   13e98:	ldr	r1, [lr]
   13e9c:	add	r1, r1, #1
   13ea0:	str	r1, [lr]
   13ea4:	ldr	r1, [fp, #-12]
   13ea8:	ldr	lr, [fp, #-16]
   13eac:	str	r0, [sp, #220]	; 0xdc
   13eb0:	mov	r0, r1
   13eb4:	mov	r1, lr
   13eb8:	bl	13e28 <print_debug_data@@Base+0x218>
   13ebc:	movw	r0, #436	; 0x1b4
   13ec0:	movt	r0, #3
   13ec4:	ldr	r1, [r0]
   13ec8:	mvn	lr, #0
   13ecc:	add	r1, r1, lr
   13ed0:	str	r1, [r0]
   13ed4:	ldr	r0, [fp, #-12]
   13ed8:	bl	127b0 <coda_cursor_goto_parent@plt>
   13edc:	str	r0, [sp, #216]	; 0xd8
   13ee0:	ldr	r0, [fp, #-12]
   13ee4:	sub	r1, fp, #20
   13ee8:	bl	126e4 <coda_cursor_get_type_class@plt>
   13eec:	cmp	r0, #0
   13ef0:	beq	13f00 <print_debug_data@@Base+0x2f0>
   13ef4:	movw	r0, #44732	; 0xaebc
   13ef8:	movt	r0, #1
   13efc:	blx	r0
   13f00:	ldr	r0, [fp, #-20]	; 0xffffffec
   13f04:	cmp	r0, #6
   13f08:	str	r0, [sp, #212]	; 0xd4
   13f0c:	bhi	14da4 <print_debug_data@@Base+0x1194>
   13f10:	add	r0, pc, #8
   13f14:	ldr	r1, [sp, #212]	; 0xd4
   13f18:	ldr	r0, [r0, r1, lsl #2]
   13f1c:	mov	pc, r0
   13f20:	andeq	r3, r1, ip, lsr pc
   13f24:	andeq	r4, r1, ip, ror #6
   13f28:	andeq	r4, r1, r8, asr #13
   13f2c:	andeq	r4, r1, r8, asr #13
   13f30:	andeq	r4, r1, r8, asr #13
   13f34:	andeq	r4, r1, r8, asr #13
   13f38:	muleq	r1, r4, fp
   13f3c:	ldr	r0, [fp, #-12]
   13f40:	sub	r1, fp, #28
   13f44:	bl	1263c <coda_cursor_get_num_elements@plt>
   13f48:	cmp	r0, #0
   13f4c:	beq	13f5c <print_debug_data@@Base+0x34c>
   13f50:	movw	r0, #44732	; 0xaebc
   13f54:	movt	r0, #1
   13f58:	blx	r0
   13f5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f60:	cmp	r0, #0
   13f64:	ble	14368 <print_debug_data@@Base+0x758>
   13f68:	ldr	r0, [fp, #-12]
   13f6c:	sub	r1, fp, #32
   13f70:	bl	1269c <coda_cursor_get_type@plt>
   13f74:	cmp	r0, #0
   13f78:	beq	13f88 <print_debug_data@@Base+0x378>
   13f7c:	movw	r0, #44732	; 0xaebc
   13f80:	movt	r0, #1
   13f84:	blx	r0
   13f88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f8c:	sub	r1, fp, #36	; 0x24
   13f90:	bl	12888 <coda_type_get_record_union_status@plt>
   13f94:	cmp	r0, #0
   13f98:	beq	13fa8 <print_debug_data@@Base+0x398>
   13f9c:	movw	r0, #44732	; 0xaebc
   13fa0:	movt	r0, #1
   13fa4:	blx	r0
   13fa8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13fac:	cmp	r0, #0
   13fb0:	beq	14170 <print_debug_data@@Base+0x560>
   13fb4:	ldr	r0, [fp, #-12]
   13fb8:	sub	r1, fp, #40	; 0x28
   13fbc:	bl	12978 <coda_cursor_get_available_union_field_index@plt>
   13fc0:	cmp	r0, #0
   13fc4:	beq	13fd4 <print_debug_data@@Base+0x3c4>
   13fc8:	movw	r0, #44732	; 0xaebc
   13fcc:	movt	r0, #1
   13fd0:	blx	r0
   13fd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13fd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13fdc:	sub	r2, fp, #44	; 0x2c
   13fe0:	bl	129c0 <coda_type_get_record_field_name@plt>
   13fe4:	cmp	r0, #0
   13fe8:	beq	13ff8 <print_debug_data@@Base+0x3e8>
   13fec:	movw	r0, #44732	; 0xaebc
   13ff0:	movt	r0, #1
   13ff4:	blx	r0
   13ff8:	ldr	r0, [fp, #-12]
   13ffc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14000:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   14004:	cmp	r0, #0
   14008:	beq	14018 <print_debug_data@@Base+0x408>
   1400c:	movw	r0, #44732	; 0xaebc
   14010:	movt	r0, #1
   14014:	blx	r0
   14018:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1401c:	movw	r0, #58302	; 0xe3be
   14020:	movt	r0, #1
   14024:	bl	14dac <print_debug_data@@Base+0x119c>
   14028:	movw	r1, #412	; 0x19c
   1402c:	movt	r1, #3
   14030:	ldr	r1, [r1]
   14034:	cmp	r1, #0
   14038:	str	r0, [sp, #208]	; 0xd0
   1403c:	beq	140d4 <print_debug_data@@Base+0x4c4>
   14040:	ldr	r0, [fp, #-12]
   14044:	sub	r1, fp, #56	; 0x38
   14048:	bl	12990 <coda_cursor_get_file_bit_offset@plt>
   1404c:	cmp	r0, #0
   14050:	beq	14060 <print_debug_data@@Base+0x450>
   14054:	movw	r0, #44732	; 0xaebc
   14058:	movt	r0, #1
   1405c:	blx	r0
   14060:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14064:	cmp	r0, #0
   14068:	blt	140d0 <print_debug_data@@Base+0x4c0>
   1406c:	b	14070 <print_debug_data@@Base+0x460>
   14070:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14074:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14078:	lsr	r0, r0, #3
   1407c:	orr	r0, r0, r1, lsl #29
   14080:	asr	r1, r1, #3
   14084:	sub	r2, fp, #77	; 0x4d
   14088:	str	r2, [sp, #204]	; 0xcc
   1408c:	bl	129e4 <coda_str64@plt>
   14090:	movw	r0, #56522	; 0xdcca
   14094:	movt	r0, #1
   14098:	ldr	r1, [sp, #204]	; 0xcc
   1409c:	bl	14e14 <print_debug_data@@Base+0x1204>
   140a0:	ldrb	r1, [fp, #-56]	; 0xffffffc8
   140a4:	tst	r1, #7
   140a8:	str	r0, [sp, #200]	; 0xc8
   140ac:	beq	140cc <print_debug_data@@Base+0x4bc>
   140b0:	b	140b4 <print_debug_data@@Base+0x4a4>
   140b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   140b8:	and	r1, r0, #7
   140bc:	movw	r0, #56526	; 0xdcce
   140c0:	movt	r0, #1
   140c4:	bl	14e14 <print_debug_data@@Base+0x1204>
   140c8:	str	r0, [sp, #196]	; 0xc4
   140cc:	b	140d0 <print_debug_data@@Base+0x4c0>
   140d0:	b	140d4 <print_debug_data@@Base+0x4c4>
   140d4:	movw	r0, #62873	; 0xf599
   140d8:	movt	r0, #1
   140dc:	bl	14e14 <print_debug_data@@Base+0x1204>
   140e0:	movw	lr, #436	; 0x1b4
   140e4:	movt	lr, #3
   140e8:	ldr	r1, [lr]
   140ec:	add	r1, r1, #1
   140f0:	str	r1, [lr]
   140f4:	movw	r1, #416	; 0x1a0
   140f8:	movt	r1, #3
   140fc:	ldr	r1, [r1]
   14100:	cmp	r1, #0
   14104:	str	r0, [sp, #192]	; 0xc0
   14108:	blt	14124 <print_debug_data@@Base+0x514>
   1410c:	ldr	r0, [fp, #-16]
   14110:	movw	r1, #416	; 0x1a0
   14114:	movt	r1, #3
   14118:	ldr	r1, [r1]
   1411c:	cmp	r0, r1
   14120:	bge	14138 <print_debug_data@@Base+0x528>
   14124:	ldr	r0, [fp, #-12]
   14128:	ldr	r1, [fp, #-16]
   1412c:	add	r1, r1, #1
   14130:	bl	13e28 <print_debug_data@@Base+0x218>
   14134:	b	14148 <print_debug_data@@Base+0x538>
   14138:	movw	r0, #56530	; 0xdcd2
   1413c:	movt	r0, #1
   14140:	bl	14dac <print_debug_data@@Base+0x119c>
   14144:	str	r0, [sp, #188]	; 0xbc
   14148:	movw	r0, #436	; 0x1b4
   1414c:	movt	r0, #3
   14150:	ldr	r1, [r0]
   14154:	mvn	r2, #0
   14158:	add	r1, r1, r2
   1415c:	str	r1, [r0]
   14160:	ldr	r0, [fp, #-12]
   14164:	bl	127b0 <coda_cursor_goto_parent@plt>
   14168:	str	r0, [sp, #184]	; 0xb8
   1416c:	b	14364 <print_debug_data@@Base+0x754>
   14170:	ldr	r0, [fp, #-12]
   14174:	bl	12750 <coda_cursor_goto_first_record_field@plt>
   14178:	cmp	r0, #0
   1417c:	beq	1418c <print_debug_data@@Base+0x57c>
   14180:	movw	r0, #44732	; 0xaebc
   14184:	movt	r0, #1
   14188:	blx	r0
   1418c:	movw	r0, #0
   14190:	str	r0, [fp, #-40]	; 0xffffffd8
   14194:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14198:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1419c:	cmp	r0, r1
   141a0:	bge	14358 <print_debug_data@@Base+0x748>
   141a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   141a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   141ac:	sub	r2, fp, #84	; 0x54
   141b0:	bl	129c0 <coda_type_get_record_field_name@plt>
   141b4:	cmp	r0, #0
   141b8:	beq	141c8 <print_debug_data@@Base+0x5b8>
   141bc:	movw	r0, #44732	; 0xaebc
   141c0:	movt	r0, #1
   141c4:	blx	r0
   141c8:	ldr	r1, [fp, #-84]	; 0xffffffac
   141cc:	movw	r0, #58302	; 0xe3be
   141d0:	movt	r0, #1
   141d4:	bl	14dac <print_debug_data@@Base+0x119c>
   141d8:	movw	r1, #412	; 0x19c
   141dc:	movt	r1, #3
   141e0:	ldr	r1, [r1]
   141e4:	cmp	r1, #0
   141e8:	str	r0, [sp, #180]	; 0xb4
   141ec:	beq	14284 <print_debug_data@@Base+0x674>
   141f0:	ldr	r0, [fp, #-12]
   141f4:	sub	r1, fp, #96	; 0x60
   141f8:	bl	12990 <coda_cursor_get_file_bit_offset@plt>
   141fc:	cmp	r0, #0
   14200:	beq	14210 <print_debug_data@@Base+0x600>
   14204:	movw	r0, #44732	; 0xaebc
   14208:	movt	r0, #1
   1420c:	blx	r0
   14210:	ldr	r0, [fp, #-92]	; 0xffffffa4
   14214:	cmp	r0, #0
   14218:	blt	14280 <print_debug_data@@Base+0x670>
   1421c:	b	14220 <print_debug_data@@Base+0x610>
   14220:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14224:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14228:	lsr	r0, r0, #3
   1422c:	orr	r0, r0, r1, lsl #29
   14230:	asr	r1, r1, #3
   14234:	sub	r2, fp, #117	; 0x75
   14238:	str	r2, [sp, #176]	; 0xb0
   1423c:	bl	129e4 <coda_str64@plt>
   14240:	movw	r0, #56522	; 0xdcca
   14244:	movt	r0, #1
   14248:	ldr	r1, [sp, #176]	; 0xb0
   1424c:	bl	14e14 <print_debug_data@@Base+0x1204>
   14250:	ldrb	r1, [fp, #-96]	; 0xffffffa0
   14254:	tst	r1, #7
   14258:	str	r0, [sp, #172]	; 0xac
   1425c:	beq	1427c <print_debug_data@@Base+0x66c>
   14260:	b	14264 <print_debug_data@@Base+0x654>
   14264:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14268:	and	r1, r0, #7
   1426c:	movw	r0, #56526	; 0xdcce
   14270:	movt	r0, #1
   14274:	bl	14e14 <print_debug_data@@Base+0x1204>
   14278:	str	r0, [sp, #168]	; 0xa8
   1427c:	b	14280 <print_debug_data@@Base+0x670>
   14280:	b	14284 <print_debug_data@@Base+0x674>
   14284:	movw	r0, #62873	; 0xf599
   14288:	movt	r0, #1
   1428c:	bl	14e14 <print_debug_data@@Base+0x1204>
   14290:	movw	lr, #436	; 0x1b4
   14294:	movt	lr, #3
   14298:	ldr	r1, [lr]
   1429c:	add	r1, r1, #1
   142a0:	str	r1, [lr]
   142a4:	movw	r1, #416	; 0x1a0
   142a8:	movt	r1, #3
   142ac:	ldr	r1, [r1]
   142b0:	cmp	r1, #0
   142b4:	str	r0, [sp, #164]	; 0xa4
   142b8:	blt	142d4 <print_debug_data@@Base+0x6c4>
   142bc:	ldr	r0, [fp, #-16]
   142c0:	movw	r1, #416	; 0x1a0
   142c4:	movt	r1, #3
   142c8:	ldr	r1, [r1]
   142cc:	cmp	r0, r1
   142d0:	bge	142e8 <print_debug_data@@Base+0x6d8>
   142d4:	ldr	r0, [fp, #-12]
   142d8:	ldr	r1, [fp, #-16]
   142dc:	add	r1, r1, #1
   142e0:	bl	13e28 <print_debug_data@@Base+0x218>
   142e4:	b	142f8 <print_debug_data@@Base+0x6e8>
   142e8:	movw	r0, #56530	; 0xdcd2
   142ec:	movt	r0, #1
   142f0:	bl	14dac <print_debug_data@@Base+0x119c>
   142f4:	str	r0, [sp, #160]	; 0xa0
   142f8:	movw	r0, #436	; 0x1b4
   142fc:	movt	r0, #3
   14300:	ldr	r1, [r0]
   14304:	mvn	r2, #0
   14308:	add	r1, r1, r2
   1430c:	str	r1, [r0]
   14310:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14314:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14318:	sub	r1, r1, #1
   1431c:	cmp	r0, r1
   14320:	bge	14344 <print_debug_data@@Base+0x734>
   14324:	ldr	r0, [fp, #-12]
   14328:	bl	12930 <coda_cursor_goto_next_record_field@plt>
   1432c:	cmp	r0, #0
   14330:	beq	14340 <print_debug_data@@Base+0x730>
   14334:	movw	r0, #44732	; 0xaebc
   14338:	movt	r0, #1
   1433c:	blx	r0
   14340:	b	14344 <print_debug_data@@Base+0x734>
   14344:	b	14348 <print_debug_data@@Base+0x738>
   14348:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1434c:	add	r0, r0, #1
   14350:	str	r0, [fp, #-40]	; 0xffffffd8
   14354:	b	14194 <print_debug_data@@Base+0x584>
   14358:	ldr	r0, [fp, #-12]
   1435c:	bl	127b0 <coda_cursor_goto_parent@plt>
   14360:	str	r0, [sp, #156]	; 0x9c
   14364:	b	14368 <print_debug_data@@Base+0x758>
   14368:	b	14da4 <print_debug_data@@Base+0x1194>
   1436c:	sub	r2, fp, #152	; 0x98
   14370:	ldr	r0, [fp, #-12]
   14374:	sub	r1, fp, #156	; 0x9c
   14378:	bl	128d0 <coda_cursor_get_array_dim@plt>
   1437c:	cmp	r0, #0
   14380:	beq	14390 <print_debug_data@@Base+0x780>
   14384:	movw	r0, #44732	; 0xaebc
   14388:	movt	r0, #1
   1438c:	blx	r0
   14390:	ldr	r0, [fp, #-156]	; 0xffffff64
   14394:	cmp	r0, #0
   14398:	blt	146c4 <print_debug_data@@Base+0xab4>
   1439c:	movw	r0, #1
   143a0:	str	r0, [fp, #-160]	; 0xffffff60
   143a4:	movw	r0, #0
   143a8:	str	r0, [fp, #-196]	; 0xffffff3c
   143ac:	ldr	r0, [fp, #-196]	; 0xffffff3c
   143b0:	ldr	r1, [fp, #-156]	; 0xffffff64
   143b4:	cmp	r0, r1
   143b8:	bge	143f8 <print_debug_data@@Base+0x7e8>
   143bc:	ldr	r0, [fp, #-196]	; 0xffffff3c
   143c0:	sub	r1, fp, #152	; 0x98
   143c4:	ldr	r0, [r1, r0, lsl #2]
   143c8:	ldr	r1, [fp, #-160]	; 0xffffff60
   143cc:	mul	r0, r1, r0
   143d0:	str	r0, [fp, #-160]	; 0xffffff60
   143d4:	ldr	r0, [fp, #-196]	; 0xffffff3c
   143d8:	sub	r1, fp, #192	; 0xc0
   143dc:	add	r0, r1, r0, lsl #2
   143e0:	movw	r1, #0
   143e4:	str	r1, [r0]
   143e8:	ldr	r0, [fp, #-196]	; 0xffffff3c
   143ec:	add	r0, r0, #1
   143f0:	str	r0, [fp, #-196]	; 0xffffff3c
   143f4:	b	143ac <print_debug_data@@Base+0x79c>
   143f8:	ldr	r0, [fp, #-160]	; 0xffffff60
   143fc:	cmp	r0, #0
   14400:	ble	146c0 <print_debug_data@@Base+0xab0>
   14404:	ldr	r0, [fp, #-12]
   14408:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   1440c:	cmp	r0, #0
   14410:	beq	14420 <print_debug_data@@Base+0x810>
   14414:	movw	r0, #44732	; 0xaebc
   14418:	movt	r0, #1
   1441c:	blx	r0
   14420:	movw	r0, #0
   14424:	str	r0, [fp, #-196]	; 0xffffff3c
   14428:	ldr	r0, [fp, #-196]	; 0xffffff3c
   1442c:	ldr	r1, [fp, #-160]	; 0xffffff60
   14430:	cmp	r0, r1
   14434:	bge	146b4 <print_debug_data@@Base+0xaa4>
   14438:	movw	r0, #56964	; 0xde84
   1443c:	movt	r0, #1
   14440:	bl	14dac <print_debug_data@@Base+0x119c>
   14444:	movw	lr, #0
   14448:	str	lr, [fp, #-200]	; 0xffffff38
   1444c:	str	r0, [sp, #152]	; 0x98
   14450:	ldr	r0, [fp, #-200]	; 0xffffff38
   14454:	ldr	r1, [fp, #-156]	; 0xffffff64
   14458:	cmp	r0, r1
   1445c:	bge	144b8 <print_debug_data@@Base+0x8a8>
   14460:	ldr	r0, [fp, #-200]	; 0xffffff38
   14464:	sub	r1, fp, #192	; 0xc0
   14468:	add	r0, r1, r0, lsl #2
   1446c:	ldr	r1, [r0]
   14470:	movw	r0, #56527	; 0xdccf
   14474:	movt	r0, #1
   14478:	bl	14e14 <print_debug_data@@Base+0x1204>
   1447c:	ldr	r1, [fp, #-200]	; 0xffffff38
   14480:	ldr	lr, [fp, #-156]	; 0xffffff64
   14484:	sub	lr, lr, #1
   14488:	cmp	r1, lr
   1448c:	str	r0, [sp, #148]	; 0x94
   14490:	bge	144a4 <print_debug_data@@Base+0x894>
   14494:	movw	r0, #56952	; 0xde78
   14498:	movt	r0, #1
   1449c:	bl	14e14 <print_debug_data@@Base+0x1204>
   144a0:	str	r0, [sp, #144]	; 0x90
   144a4:	b	144a8 <print_debug_data@@Base+0x898>
   144a8:	ldr	r0, [fp, #-200]	; 0xffffff38
   144ac:	add	r0, r0, #1
   144b0:	str	r0, [fp, #-200]	; 0xffffff38
   144b4:	b	14450 <print_debug_data@@Base+0x840>
   144b8:	movw	r0, #58187	; 0xe34b
   144bc:	movt	r0, #1
   144c0:	bl	14e14 <print_debug_data@@Base+0x1204>
   144c4:	movw	lr, #412	; 0x19c
   144c8:	movt	lr, #3
   144cc:	ldr	lr, [lr]
   144d0:	cmp	lr, #0
   144d4:	str	r0, [sp, #140]	; 0x8c
   144d8:	beq	14570 <print_debug_data@@Base+0x960>
   144dc:	ldr	r0, [fp, #-12]
   144e0:	sub	r1, fp, #208	; 0xd0
   144e4:	bl	12990 <coda_cursor_get_file_bit_offset@plt>
   144e8:	cmp	r0, #0
   144ec:	beq	144fc <print_debug_data@@Base+0x8ec>
   144f0:	movw	r0, #44732	; 0xaebc
   144f4:	movt	r0, #1
   144f8:	blx	r0
   144fc:	ldr	r0, [fp, #-204]	; 0xffffff34
   14500:	cmp	r0, #0
   14504:	blt	1456c <print_debug_data@@Base+0x95c>
   14508:	b	1450c <print_debug_data@@Base+0x8fc>
   1450c:	ldr	r0, [fp, #-208]	; 0xffffff30
   14510:	ldr	r1, [fp, #-204]	; 0xffffff34
   14514:	lsr	r0, r0, #3
   14518:	orr	r0, r0, r1, lsl #29
   1451c:	asr	r1, r1, #3
   14520:	sub	r2, fp, #229	; 0xe5
   14524:	str	r2, [sp, #136]	; 0x88
   14528:	bl	129e4 <coda_str64@plt>
   1452c:	movw	r0, #56522	; 0xdcca
   14530:	movt	r0, #1
   14534:	ldr	r1, [sp, #136]	; 0x88
   14538:	bl	14e14 <print_debug_data@@Base+0x1204>
   1453c:	ldrb	r1, [fp, #-208]	; 0xffffff30
   14540:	tst	r1, #7
   14544:	str	r0, [sp, #132]	; 0x84
   14548:	beq	14568 <print_debug_data@@Base+0x958>
   1454c:	b	14550 <print_debug_data@@Base+0x940>
   14550:	ldr	r0, [fp, #-208]	; 0xffffff30
   14554:	and	r1, r0, #7
   14558:	movw	r0, #56526	; 0xdcce
   1455c:	movt	r0, #1
   14560:	bl	14e14 <print_debug_data@@Base+0x1204>
   14564:	str	r0, [sp, #128]	; 0x80
   14568:	b	1456c <print_debug_data@@Base+0x95c>
   1456c:	b	14570 <print_debug_data@@Base+0x960>
   14570:	movw	r0, #62873	; 0xf599
   14574:	movt	r0, #1
   14578:	bl	14e14 <print_debug_data@@Base+0x1204>
   1457c:	movw	lr, #436	; 0x1b4
   14580:	movt	lr, #3
   14584:	ldr	r1, [lr]
   14588:	add	r1, r1, #1
   1458c:	str	r1, [lr]
   14590:	movw	r1, #416	; 0x1a0
   14594:	movt	r1, #3
   14598:	ldr	r1, [r1]
   1459c:	cmp	r1, #0
   145a0:	str	r0, [sp, #124]	; 0x7c
   145a4:	blt	145c0 <print_debug_data@@Base+0x9b0>
   145a8:	ldr	r0, [fp, #-16]
   145ac:	movw	r1, #416	; 0x1a0
   145b0:	movt	r1, #3
   145b4:	ldr	r1, [r1]
   145b8:	cmp	r0, r1
   145bc:	bge	145d4 <print_debug_data@@Base+0x9c4>
   145c0:	ldr	r0, [fp, #-12]
   145c4:	ldr	r1, [fp, #-16]
   145c8:	add	r1, r1, #1
   145cc:	bl	13e28 <print_debug_data@@Base+0x218>
   145d0:	b	145e4 <print_debug_data@@Base+0x9d4>
   145d4:	movw	r0, #56530	; 0xdcd2
   145d8:	movt	r0, #1
   145dc:	bl	14dac <print_debug_data@@Base+0x119c>
   145e0:	str	r0, [sp, #120]	; 0x78
   145e4:	movw	r0, #436	; 0x1b4
   145e8:	movt	r0, #3
   145ec:	ldr	r1, [r0]
   145f0:	mvn	r2, #0
   145f4:	add	r1, r1, r2
   145f8:	str	r1, [r0]
   145fc:	ldr	r0, [fp, #-156]	; 0xffffff64
   14600:	sub	r0, r0, #1
   14604:	str	r0, [fp, #-200]	; 0xffffff38
   14608:	ldr	r0, [fp, #-200]	; 0xffffff38
   1460c:	cmp	r0, #0
   14610:	blt	1466c <print_debug_data@@Base+0xa5c>
   14614:	ldr	r0, [fp, #-200]	; 0xffffff38
   14618:	sub	r1, fp, #192	; 0xc0
   1461c:	ldr	r2, [r1, r0, lsl #2]
   14620:	add	r2, r2, #1
   14624:	str	r2, [r1, r0, lsl #2]
   14628:	ldr	r0, [fp, #-200]	; 0xffffff38
   1462c:	ldr	r1, [r1, r0, lsl #2]
   14630:	sub	r2, fp, #152	; 0x98
   14634:	add	r0, r2, r0, lsl #2
   14638:	ldr	r0, [r0]
   1463c:	cmp	r1, r0
   14640:	bne	14664 <print_debug_data@@Base+0xa54>
   14644:	ldr	r0, [fp, #-200]	; 0xffffff38
   14648:	sub	r1, r0, #1
   1464c:	str	r1, [fp, #-200]	; 0xffffff38
   14650:	sub	r1, fp, #192	; 0xc0
   14654:	add	r0, r1, r0, lsl #2
   14658:	movw	r1, #0
   1465c:	str	r1, [r0]
   14660:	b	14668 <print_debug_data@@Base+0xa58>
   14664:	b	1466c <print_debug_data@@Base+0xa5c>
   14668:	b	14608 <print_debug_data@@Base+0x9f8>
   1466c:	ldr	r0, [fp, #-196]	; 0xffffff3c
   14670:	ldr	r1, [fp, #-160]	; 0xffffff60
   14674:	sub	r1, r1, #1
   14678:	cmp	r0, r1
   1467c:	bge	146a0 <print_debug_data@@Base+0xa90>
   14680:	ldr	r0, [fp, #-12]
   14684:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   14688:	cmp	r0, #0
   1468c:	beq	1469c <print_debug_data@@Base+0xa8c>
   14690:	movw	r0, #44732	; 0xaebc
   14694:	movt	r0, #1
   14698:	blx	r0
   1469c:	b	146a0 <print_debug_data@@Base+0xa90>
   146a0:	b	146a4 <print_debug_data@@Base+0xa94>
   146a4:	ldr	r0, [fp, #-196]	; 0xffffff3c
   146a8:	add	r0, r0, #1
   146ac:	str	r0, [fp, #-196]	; 0xffffff3c
   146b0:	b	14428 <print_debug_data@@Base+0x818>
   146b4:	ldr	r0, [fp, #-12]
   146b8:	bl	127b0 <coda_cursor_goto_parent@plt>
   146bc:	str	r0, [sp, #116]	; 0x74
   146c0:	b	146c4 <print_debug_data@@Base+0xab4>
   146c4:	b	14da4 <print_debug_data@@Base+0x1194>
   146c8:	ldr	r0, [fp, #-12]
   146cc:	sub	r1, fp, #240	; 0xf0
   146d0:	bl	128dc <coda_cursor_has_ascii_content@plt>
   146d4:	cmp	r0, #0
   146d8:	beq	146e8 <print_debug_data@@Base+0xad8>
   146dc:	movw	r0, #44732	; 0xaebc
   146e0:	movt	r0, #1
   146e4:	blx	r0
   146e8:	ldr	r0, [fp, #-240]	; 0xffffff10
   146ec:	cmp	r0, #0
   146f0:	beq	147d0 <print_debug_data@@Base+0xbc0>
   146f4:	ldr	r0, [fp, #-12]
   146f8:	sub	r1, fp, #244	; 0xf4
   146fc:	bl	127e0 <coda_cursor_get_string_length@plt>
   14700:	cmp	r0, #0
   14704:	beq	14714 <print_debug_data@@Base+0xb04>
   14708:	movw	r0, #44732	; 0xaebc
   1470c:	movt	r0, #1
   14710:	blx	r0
   14714:	ldr	r0, [fp, #-244]	; 0xffffff0c
   14718:	add	r0, r0, #1
   1471c:	bl	12780 <malloc@plt>
   14720:	str	r0, [fp, #-248]	; 0xffffff08
   14724:	ldr	r0, [fp, #-248]	; 0xffffff08
   14728:	movw	lr, #0
   1472c:	cmp	r0, lr
   14730:	bne	14768 <print_debug_data@@Base+0xb58>
   14734:	ldr	r0, [fp, #-244]	; 0xffffff0c
   14738:	add	r2, r0, #1
   1473c:	mvn	r0, #0
   14740:	movw	r1, #56224	; 0xdba0
   14744:	movt	r1, #1
   14748:	movw	r3, #56535	; 0xdcd7
   1474c:	movt	r3, #1
   14750:	movw	ip, #410	; 0x19a
   14754:	str	ip, [sp]
   14758:	bl	1260c <coda_set_error@plt>
   1475c:	movw	r0, #44732	; 0xaebc
   14760:	movt	r0, #1
   14764:	blx	r0
   14768:	ldr	r0, [fp, #-12]
   1476c:	ldr	r1, [fp, #-248]	; 0xffffff08
   14770:	ldr	r2, [fp, #-244]	; 0xffffff0c
   14774:	add	r2, r2, #1
   14778:	bl	127a4 <coda_cursor_read_string@plt>
   1477c:	cmp	r0, #0
   14780:	beq	14790 <print_debug_data@@Base+0xb80>
   14784:	movw	r0, #44732	; 0xaebc
   14788:	movt	r0, #1
   1478c:	blx	r0
   14790:	movw	r0, #58038	; 0xe2b6
   14794:	movt	r0, #1
   14798:	bl	14dac <print_debug_data@@Base+0x119c>
   1479c:	ldr	lr, [fp, #-248]	; 0xffffff08
   147a0:	ldr	r1, [fp, #-244]	; 0xffffff0c
   147a4:	str	r0, [sp, #112]	; 0x70
   147a8:	mov	r0, lr
   147ac:	bl	14e78 <print_debug_data@@Base+0x1268>
   147b0:	ldr	r1, [fp, #-244]	; 0xffffff0c
   147b4:	movw	r0, #56619	; 0xdd2b
   147b8:	movt	r0, #1
   147bc:	bl	14e14 <print_debug_data@@Base+0x1204>
   147c0:	ldr	r1, [fp, #-248]	; 0xffffff08
   147c4:	str	r0, [sp, #108]	; 0x6c
   147c8:	mov	r0, r1
   147cc:	bl	12654 <free@plt>
   147d0:	ldr	r0, [fp, #-12]
   147d4:	sub	r1, fp, #236	; 0xec
   147d8:	bl	12774 <coda_cursor_get_read_type@plt>
   147dc:	cmp	r0, #0
   147e0:	beq	147f0 <print_debug_data@@Base+0xbe0>
   147e4:	movw	r0, #44732	; 0xaebc
   147e8:	movt	r0, #1
   147ec:	blx	r0
   147f0:	ldr	r0, [fp, #-236]	; 0xffffff14
   147f4:	add	r0, r0, #1
   147f8:	cmp	r0, #13
   147fc:	str	r0, [sp, #104]	; 0x68
   14800:	bhi	14b90 <print_debug_data@@Base+0xf80>
   14804:	add	r0, pc, #8
   14808:	ldr	r1, [sp, #104]	; 0x68
   1480c:	ldr	r0, [r0, r1, lsl #2]
   14810:	mov	pc, r0
   14814:	andeq	r4, r1, ip, asr fp
   14818:	andeq	r4, r1, r8, ror #19
   1481c:	andeq	r4, r1, r0, lsr #20
   14820:	andeq	r4, r1, r8, ror #19
   14824:	andeq	r4, r1, r0, lsr #20
   14828:	andeq	r4, r1, r8, ror #19
   1482c:	andeq	r4, r1, r0, lsr #20
   14830:	andeq	r4, r1, r8, asr sl
   14834:	andeq	r4, r1, r8, lsr #21
   14838:	strdeq	r4, [r1], -r8
   1483c:	strdeq	r4, [r1], -r8
   14840:	andeq	r4, r1, ip, asr fp
   14844:	andeq	r4, r1, ip, asr fp
   14848:	andeq	r4, r1, ip, asr #16
   1484c:	ldr	r0, [fp, #-12]
   14850:	sub	r1, fp, #256	; 0x100
   14854:	bl	12948 <coda_cursor_get_bit_size@plt>
   14858:	cmp	r0, #0
   1485c:	beq	1486c <print_debug_data@@Base+0xc5c>
   14860:	movw	r0, #44732	; 0xaebc
   14864:	movt	r0, #1
   14868:	blx	r0
   1486c:	ldr	r0, [fp, #-256]	; 0xffffff00
   14870:	ldr	r1, [fp, #-252]	; 0xffffff04
   14874:	lsr	r2, r0, #3
   14878:	orr	r2, r2, r1, lsl #29
   1487c:	asr	r1, r1, #3
   14880:	and	r0, r0, #7
   14884:	adds	r3, r2, #1
   14888:	adc	ip, r1, #0
   1488c:	cmp	r0, #0
   14890:	movne	r2, r3
   14894:	cmp	r0, #0
   14898:	movne	r1, ip
   1489c:	str	r2, [fp, #-264]	; 0xfffffef8
   148a0:	str	r1, [fp, #-260]	; 0xfffffefc
   148a4:	ldr	r0, [fp, #-264]	; 0xfffffef8
   148a8:	bl	12780 <malloc@plt>
   148ac:	str	r0, [fp, #-268]	; 0xfffffef4
   148b0:	ldr	r0, [fp, #-268]	; 0xfffffef4
   148b4:	movw	r1, #0
   148b8:	cmp	r0, r1
   148bc:	bne	148f0 <print_debug_data@@Base+0xce0>
   148c0:	ldr	r2, [fp, #-264]	; 0xfffffef8
   148c4:	mvn	r0, #0
   148c8:	movw	r1, #56224	; 0xdba0
   148cc:	movt	r1, #1
   148d0:	movw	r3, #56535	; 0xdcd7
   148d4:	movt	r3, #1
   148d8:	movw	ip, #447	; 0x1bf
   148dc:	str	ip, [sp]
   148e0:	bl	1260c <coda_set_error@plt>
   148e4:	movw	r0, #44732	; 0xaebc
   148e8:	movt	r0, #1
   148ec:	blx	r0
   148f0:	ldr	r0, [fp, #-12]
   148f4:	ldr	r1, [fp, #-268]	; 0xfffffef4
   148f8:	ldr	r2, [fp, #-256]	; 0xffffff00
   148fc:	ldr	r3, [fp, #-252]	; 0xffffff04
   14900:	mov	ip, sp
   14904:	str	r3, [ip, #4]
   14908:	str	r2, [ip]
   1490c:	mov	r2, #0
   14910:	str	r2, [sp, #100]	; 0x64
   14914:	ldr	r3, [sp, #100]	; 0x64
   14918:	bl	129d8 <coda_cursor_read_bits@plt>
   1491c:	cmp	r0, #0
   14920:	beq	14930 <print_debug_data@@Base+0xd20>
   14924:	movw	r0, #44732	; 0xaebc
   14928:	movt	r0, #1
   1492c:	blx	r0
   14930:	movw	r0, #58038	; 0xe2b6
   14934:	movt	r0, #1
   14938:	bl	14dac <print_debug_data@@Base+0x119c>
   1493c:	ldr	lr, [fp, #-268]	; 0xfffffef4
   14940:	ldr	r1, [fp, #-264]	; 0xfffffef8
   14944:	str	r0, [sp, #96]	; 0x60
   14948:	mov	r0, lr
   1494c:	bl	14e78 <print_debug_data@@Base+0x1268>
   14950:	movw	r0, #56635	; 0xdd3b
   14954:	movt	r0, #1
   14958:	bl	14e14 <print_debug_data@@Base+0x1204>
   1495c:	ldr	r1, [fp, #-256]	; 0xffffff00
   14960:	ldr	lr, [fp, #-252]	; 0xffffff04
   14964:	lsr	r1, r1, #3
   14968:	orr	r1, r1, lr, lsl #29
   1496c:	asr	lr, lr, #3
   14970:	sub	r2, fp, #256	; 0x100
   14974:	sub	r2, r2, #33	; 0x21
   14978:	str	r0, [sp, #92]	; 0x5c
   1497c:	mov	r0, r1
   14980:	mov	r1, lr
   14984:	str	r2, [sp, #88]	; 0x58
   14988:	bl	129e4 <coda_str64@plt>
   1498c:	movw	r0, #58242	; 0xe382
   14990:	movt	r0, #1
   14994:	ldr	r1, [sp, #88]	; 0x58
   14998:	bl	14e14 <print_debug_data@@Base+0x1204>
   1499c:	ldrb	r1, [fp, #-256]	; 0xffffff00
   149a0:	tst	r1, #7
   149a4:	str	r0, [sp, #84]	; 0x54
   149a8:	beq	149c8 <print_debug_data@@Base+0xdb8>
   149ac:	b	149b0 <print_debug_data@@Base+0xda0>
   149b0:	ldr	r0, [fp, #-256]	; 0xffffff00
   149b4:	and	r1, r0, #7
   149b8:	movw	r0, #56526	; 0xdcce
   149bc:	movt	r0, #1
   149c0:	bl	14e14 <print_debug_data@@Base+0x1204>
   149c4:	str	r0, [sp, #80]	; 0x50
   149c8:	movw	r0, #60225	; 0xeb41
   149cc:	movt	r0, #1
   149d0:	bl	14e14 <print_debug_data@@Base+0x1204>
   149d4:	ldr	lr, [fp, #-268]	; 0xfffffef4
   149d8:	str	r0, [sp, #76]	; 0x4c
   149dc:	mov	r0, lr
   149e0:	bl	12654 <free@plt>
   149e4:	b	14b90 <print_debug_data@@Base+0xf80>
   149e8:	ldr	r0, [fp, #-12]
   149ec:	sub	r1, fp, #296	; 0x128
   149f0:	bl	12984 <coda_cursor_read_int32@plt>
   149f4:	cmp	r0, #0
   149f8:	beq	14a08 <print_debug_data@@Base+0xdf8>
   149fc:	movw	r0, #44732	; 0xaebc
   14a00:	movt	r0, #1
   14a04:	blx	r0
   14a08:	ldr	r1, [fp, #-296]	; 0xfffffed8
   14a0c:	movw	r0, #56644	; 0xdd44
   14a10:	movt	r0, #1
   14a14:	bl	14dac <print_debug_data@@Base+0x119c>
   14a18:	str	r0, [sp, #72]	; 0x48
   14a1c:	b	14b90 <print_debug_data@@Base+0xf80>
   14a20:	ldr	r0, [fp, #-12]
   14a24:	sub	r1, fp, #300	; 0x12c
   14a28:	bl	12678 <coda_cursor_read_uint32@plt>
   14a2c:	cmp	r0, #0
   14a30:	beq	14a40 <print_debug_data@@Base+0xe30>
   14a34:	movw	r0, #44732	; 0xaebc
   14a38:	movt	r0, #1
   14a3c:	blx	r0
   14a40:	ldr	r1, [fp, #-300]	; 0xfffffed4
   14a44:	movw	r0, #56649	; 0xdd49
   14a48:	movt	r0, #1
   14a4c:	bl	14dac <print_debug_data@@Base+0x119c>
   14a50:	str	r0, [sp, #68]	; 0x44
   14a54:	b	14b90 <print_debug_data@@Base+0xf80>
   14a58:	ldr	r0, [fp, #-12]
   14a5c:	sub	r1, fp, #312	; 0x138
   14a60:	bl	128f4 <coda_cursor_read_int64@plt>
   14a64:	cmp	r0, #0
   14a68:	beq	14a78 <print_debug_data@@Base+0xe68>
   14a6c:	movw	r0, #44732	; 0xaebc
   14a70:	movt	r0, #1
   14a74:	blx	r0
   14a78:	sub	lr, fp, #256	; 0x100
   14a7c:	sub	r2, lr, #77	; 0x4d
   14a80:	ldr	r0, [fp, #-312]	; 0xfffffec8
   14a84:	ldr	r1, [fp, #-308]	; 0xfffffecc
   14a88:	bl	129e4 <coda_str64@plt>
   14a8c:	sub	lr, fp, #256	; 0x100
   14a90:	sub	r1, lr, #77	; 0x4d
   14a94:	movw	r0, #58439	; 0xe447
   14a98:	movt	r0, #1
   14a9c:	bl	14dac <print_debug_data@@Base+0x119c>
   14aa0:	str	r0, [sp, #64]	; 0x40
   14aa4:	b	14b90 <print_debug_data@@Base+0xf80>
   14aa8:	ldr	r0, [fp, #-12]
   14aac:	sub	r1, fp, #344	; 0x158
   14ab0:	bl	127ec <coda_cursor_read_uint64@plt>
   14ab4:	cmp	r0, #0
   14ab8:	beq	14ac8 <print_debug_data@@Base+0xeb8>
   14abc:	movw	r0, #44732	; 0xaebc
   14ac0:	movt	r0, #1
   14ac4:	blx	r0
   14ac8:	sub	lr, fp, #256	; 0x100
   14acc:	sub	r2, lr, #109	; 0x6d
   14ad0:	ldr	r0, [fp, #-344]	; 0xfffffea8
   14ad4:	ldr	r1, [fp, #-340]	; 0xfffffeac
   14ad8:	bl	12648 <coda_str64u@plt>
   14adc:	sub	lr, fp, #256	; 0x100
   14ae0:	sub	r1, lr, #109	; 0x6d
   14ae4:	movw	r0, #58439	; 0xe447
   14ae8:	movt	r0, #1
   14aec:	bl	14dac <print_debug_data@@Base+0x119c>
   14af0:	str	r0, [sp, #60]	; 0x3c
   14af4:	b	14b90 <print_debug_data@@Base+0xf80>
   14af8:	ldr	r0, [fp, #-12]
   14afc:	sub	r1, fp, #376	; 0x178
   14b00:	bl	127f8 <coda_cursor_read_double@plt>
   14b04:	cmp	r0, #0
   14b08:	beq	14b18 <print_debug_data@@Base+0xf08>
   14b0c:	movw	r0, #44732	; 0xaebc
   14b10:	movt	r0, #1
   14b14:	blx	r0
   14b18:	ldr	r0, [fp, #-236]	; 0xffffff14
   14b1c:	cmp	r0, #8
   14b20:	bne	14b40 <print_debug_data@@Base+0xf30>
   14b24:	vldr	d16, [fp, #-376]	; 0xfffffe88
   14b28:	movw	r0, #56654	; 0xdd4e
   14b2c:	movt	r0, #1
   14b30:	vmov	r2, r3, d16
   14b34:	bl	14dac <print_debug_data@@Base+0x119c>
   14b38:	str	r0, [sp, #56]	; 0x38
   14b3c:	b	14b58 <print_debug_data@@Base+0xf48>
   14b40:	vldr	d16, [fp, #-376]	; 0xfffffe88
   14b44:	movw	r0, #56720	; 0xdd90
   14b48:	movt	r0, #1
   14b4c:	vmov	r2, r3, d16
   14b50:	bl	14dac <print_debug_data@@Base+0x119c>
   14b54:	str	r0, [sp, #52]	; 0x34
   14b58:	b	14b90 <print_debug_data@@Base+0xf80>
   14b5c:	ldr	r0, [fp, #-240]	; 0xffffff10
   14b60:	cmp	r0, #0
   14b64:	beq	14b6c <print_debug_data@@Base+0xf5c>
   14b68:	b	14b8c <print_debug_data@@Base+0xf7c>
   14b6c:	movw	r0, #56660	; 0xdd54
   14b70:	movt	r0, #1
   14b74:	movw	r1, #56535	; 0xdcd7
   14b78:	movt	r1, #1
   14b7c:	movw	r2, #548	; 0x224
   14b80:	movw	r3, #56678	; 0xdd66
   14b84:	movt	r3, #1
   14b88:	bl	129f0 <__assert_fail@plt>
   14b8c:	b	14b90 <print_debug_data@@Base+0xf80>
   14b90:	b	14da4 <print_debug_data@@Base+0x1194>
   14b94:	ldr	r0, [fp, #-12]
   14b98:	sub	r1, fp, #380	; 0x17c
   14b9c:	bl	12720 <coda_cursor_get_special_type@plt>
   14ba0:	cmp	r0, #0
   14ba4:	beq	14bb4 <print_debug_data@@Base+0xfa4>
   14ba8:	movw	r0, #44732	; 0xaebc
   14bac:	movt	r0, #1
   14bb0:	blx	r0
   14bb4:	ldr	r0, [fp, #-380]	; 0xfffffe84
   14bb8:	cmp	r0, #0
   14bbc:	beq	14c10 <print_debug_data@@Base+0x1000>
   14bc0:	ldr	r0, [fp, #-12]
   14bc4:	add	r1, sp, #288	; 0x120
   14bc8:	mov	r2, r1
   14bcc:	str	r0, [sp, #48]	; 0x30
   14bd0:	mov	r0, r2
   14bd4:	ldr	r2, [sp, #48]	; 0x30
   14bd8:	str	r1, [sp, #44]	; 0x2c
   14bdc:	mov	r1, r2
   14be0:	movw	r2, #520	; 0x208
   14be4:	bl	126a8 <memcpy@plt>
   14be8:	ldr	r0, [sp, #44]	; 0x2c
   14bec:	bl	1296c <coda_cursor_use_base_type_of_special_type@plt>
   14bf0:	cmp	r0, #0
   14bf4:	beq	14c04 <print_debug_data@@Base+0xff4>
   14bf8:	movw	r0, #44732	; 0xaebc
   14bfc:	movt	r0, #1
   14c00:	blx	r0
   14c04:	ldr	r1, [fp, #-16]
   14c08:	add	r0, sp, #288	; 0x120
   14c0c:	bl	13e28 <print_debug_data@@Base+0x218>
   14c10:	ldr	r0, [fp, #-380]	; 0xfffffe84
   14c14:	bl	12594 <coda_type_get_special_type_name@plt>
   14c18:	movw	lr, #56714	; 0xdd8a
   14c1c:	movt	lr, #1
   14c20:	str	r0, [sp, #40]	; 0x28
   14c24:	mov	r0, lr
   14c28:	ldr	r1, [sp, #40]	; 0x28
   14c2c:	bl	14dac <print_debug_data@@Base+0x119c>
   14c30:	ldr	r1, [fp, #-380]	; 0xfffffe84
   14c34:	cmp	r1, #3
   14c38:	str	r0, [sp, #36]	; 0x24
   14c3c:	str	r1, [sp, #32]
   14c40:	bhi	14da0 <print_debug_data@@Base+0x1190>
   14c44:	add	r0, pc, #8
   14c48:	ldr	r1, [sp, #32]
   14c4c:	ldr	r0, [r0, r1, lsl #2]
   14c50:	mov	pc, r0
   14c54:	andeq	r4, r1, r4, ror #24
   14c58:	andeq	r4, r1, r8, ror ip
   14c5c:			; <UNDEFINED> instruction: 0x00014cb4
   14c60:	andeq	r4, r1, ip, asr sp
   14c64:	movw	r0, #62873	; 0xf599
   14c68:	movt	r0, #1
   14c6c:	bl	14e14 <print_debug_data@@Base+0x1204>
   14c70:	str	r0, [sp, #28]
   14c74:	b	14da0 <print_debug_data@@Base+0x1190>
   14c78:	ldr	r0, [fp, #-12]
   14c7c:	add	r1, sp, #280	; 0x118
   14c80:	bl	127f8 <coda_cursor_read_double@plt>
   14c84:	cmp	r0, #0
   14c88:	beq	14c98 <print_debug_data@@Base+0x1088>
   14c8c:	movw	r0, #44732	; 0xaebc
   14c90:	movt	r0, #1
   14c94:	blx	r0
   14c98:	vldr	d16, [sp, #280]	; 0x118
   14c9c:	movw	r0, #56720	; 0xdd90
   14ca0:	movt	r0, #1
   14ca4:	vmov	r2, r3, d16
   14ca8:	bl	14e14 <print_debug_data@@Base+0x1204>
   14cac:	str	r0, [sp, #24]
   14cb0:	b	14da0 <print_debug_data@@Base+0x1190>
   14cb4:	ldr	r0, [fp, #-12]
   14cb8:	add	r1, sp, #272	; 0x110
   14cbc:	bl	127f8 <coda_cursor_read_double@plt>
   14cc0:	cmp	r0, #0
   14cc4:	beq	14cd4 <print_debug_data@@Base+0x10c4>
   14cc8:	movw	r0, #44732	; 0xaebc
   14ccc:	movt	r0, #1
   14cd0:	blx	r0
   14cd4:	vldr	d0, [sp, #272]	; 0x110
   14cd8:	bl	12804 <coda_isNaN@plt>
   14cdc:	cmp	r0, #0
   14ce0:	bne	14cf4 <print_debug_data@@Base+0x10e4>
   14ce4:	vldr	d0, [sp, #272]	; 0x110
   14ce8:	bl	126b4 <coda_isInf@plt>
   14cec:	cmp	r0, #0
   14cf0:	beq	14d10 <print_debug_data@@Base+0x1100>
   14cf4:	vldr	d16, [sp, #272]	; 0x110
   14cf8:	movw	r0, #56719	; 0xdd8f
   14cfc:	movt	r0, #1
   14d00:	vmov	r2, r3, d16
   14d04:	bl	14e14 <print_debug_data@@Base+0x1204>
   14d08:	str	r0, [sp, #20]
   14d0c:	b	14d58 <print_debug_data@@Base+0x1148>
   14d10:	add	r1, sp, #245	; 0xf5
   14d14:	vldr	d0, [sp, #272]	; 0x110
   14d18:	movw	r0, #56468	; 0xdc94
   14d1c:	movt	r0, #1
   14d20:	bl	12630 <coda_time_double_to_string@plt>
   14d24:	cmp	r0, #0
   14d28:	beq	14d40 <print_debug_data@@Base+0x1130>
   14d2c:	movw	r0, #56727	; 0xdd97
   14d30:	movt	r0, #1
   14d34:	bl	14e14 <print_debug_data@@Base+0x1204>
   14d38:	str	r0, [sp, #16]
   14d3c:	b	14d54 <print_debug_data@@Base+0x1144>
   14d40:	add	r1, sp, #245	; 0xf5
   14d44:	movw	r0, #58438	; 0xe446
   14d48:	movt	r0, #1
   14d4c:	bl	14e14 <print_debug_data@@Base+0x1204>
   14d50:	str	r0, [sp, #12]
   14d54:	b	14d58 <print_debug_data@@Base+0x1148>
   14d58:	b	14da0 <print_debug_data@@Base+0x1190>
   14d5c:	ldr	r0, [fp, #-12]
   14d60:	add	r1, sp, #232	; 0xe8
   14d64:	add	r2, sp, #224	; 0xe0
   14d68:	bl	12894 <coda_cursor_read_complex_double_split@plt>
   14d6c:	cmp	r0, #0
   14d70:	beq	14d80 <print_debug_data@@Base+0x1170>
   14d74:	movw	r0, #44732	; 0xaebc
   14d78:	movt	r0, #1
   14d7c:	blx	r0
   14d80:	vldr	d16, [sp, #232]	; 0xe8
   14d84:	vldr	d17, [sp, #224]	; 0xe0
   14d88:	movw	r0, #56754	; 0xddb2
   14d8c:	movt	r0, #1
   14d90:	vmov	r2, r3, d16
   14d94:	vstr	d17, [sp]
   14d98:	bl	14e14 <print_debug_data@@Base+0x1204>
   14d9c:	str	r0, [sp, #8]
   14da0:	b	14da4 <print_debug_data@@Base+0x1194>
   14da4:	sub	sp, fp, #8
   14da8:	pop	{r4, r5, fp, pc}
   14dac:	sub	sp, sp, #12
   14db0:	push	{fp, lr}
   14db4:	mov	fp, sp
   14db8:	sub	sp, sp, #20
   14dbc:	str	r3, [fp, #16]
   14dc0:	str	r2, [fp, #12]
   14dc4:	str	r1, [fp, #8]
   14dc8:	str	r0, [fp, #-4]
   14dcc:	bl	15040 <print_debug_data@@Base+0x1430>
   14dd0:	add	r0, fp, #8
   14dd4:	str	r0, [sp, #8]
   14dd8:	movw	r0, #4232	; 0x1088
   14ddc:	movt	r0, #3
   14de0:	ldr	r0, [r0]
   14de4:	ldr	r1, [fp, #-4]
   14de8:	ldr	r2, [sp, #8]
   14dec:	bl	12900 <vfprintf@plt>
   14df0:	str	r0, [fp, #-8]
   14df4:	add	r0, sp, #8
   14df8:	ldr	r1, [fp, #-8]
   14dfc:	str	r0, [sp, #4]
   14e00:	mov	r0, r1
   14e04:	mov	sp, fp
   14e08:	pop	{fp, lr}
   14e0c:	add	sp, sp, #12
   14e10:	bx	lr
   14e14:	sub	sp, sp, #12
   14e18:	push	{fp, lr}
   14e1c:	mov	fp, sp
   14e20:	sub	sp, sp, #20
   14e24:	str	r3, [fp, #16]
   14e28:	str	r2, [fp, #12]
   14e2c:	str	r1, [fp, #8]
   14e30:	str	r0, [fp, #-4]
   14e34:	add	r0, fp, #8
   14e38:	str	r0, [sp, #8]
   14e3c:	movw	r0, #4232	; 0x1088
   14e40:	movt	r0, #3
   14e44:	ldr	r0, [r0]
   14e48:	ldr	r1, [fp, #-4]
   14e4c:	ldr	r2, [sp, #8]
   14e50:	bl	12900 <vfprintf@plt>
   14e54:	str	r0, [fp, #-8]
   14e58:	add	r0, sp, #8
   14e5c:	ldr	r1, [fp, #-8]
   14e60:	str	r0, [sp, #4]
   14e64:	mov	r0, r1
   14e68:	mov	sp, fp
   14e6c:	pop	{fp, lr}
   14e70:	add	sp, sp, #12
   14e74:	bx	lr
   14e78:	push	{fp, lr}
   14e7c:	mov	fp, sp
   14e80:	sub	sp, sp, #64	; 0x40
   14e84:	str	r0, [fp, #-4]
   14e88:	str	r1, [fp, #-8]
   14e8c:	movw	r0, #0
   14e90:	str	r0, [fp, #-12]
   14e94:	ldr	r0, [fp, #-12]
   14e98:	ldr	r1, [fp, #-8]
   14e9c:	cmp	r0, r1
   14ea0:	bge	15038 <print_debug_data@@Base+0x1428>
   14ea4:	ldr	r0, [fp, #-4]
   14ea8:	ldr	r1, [fp, #-12]
   14eac:	ldrb	r0, [r0, r1]
   14eb0:	strb	r0, [fp, #-13]
   14eb4:	ldrb	r0, [fp, #-13]
   14eb8:	mov	r1, r0
   14ebc:	cmp	r0, #7
   14ec0:	str	r1, [fp, #-20]	; 0xffffffec
   14ec4:	beq	14f3c <print_debug_data@@Base+0x132c>
   14ec8:	b	14ecc <print_debug_data@@Base+0x12bc>
   14ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ed0:	cmp	r0, #8
   14ed4:	beq	14f50 <print_debug_data@@Base+0x1340>
   14ed8:	b	14edc <print_debug_data@@Base+0x12cc>
   14edc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ee0:	cmp	r0, #9
   14ee4:	beq	14f64 <print_debug_data@@Base+0x1354>
   14ee8:	b	14eec <print_debug_data@@Base+0x12dc>
   14eec:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ef0:	cmp	r0, #10
   14ef4:	beq	14f78 <print_debug_data@@Base+0x1368>
   14ef8:	b	14efc <print_debug_data@@Base+0x12ec>
   14efc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f00:	cmp	r0, #11
   14f04:	beq	14f8c <print_debug_data@@Base+0x137c>
   14f08:	b	14f0c <print_debug_data@@Base+0x12fc>
   14f0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f10:	cmp	r0, #12
   14f14:	beq	14fa0 <print_debug_data@@Base+0x1390>
   14f18:	b	14f1c <print_debug_data@@Base+0x130c>
   14f1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f20:	cmp	r0, #13
   14f24:	beq	14fb4 <print_debug_data@@Base+0x13a4>
   14f28:	b	14f2c <print_debug_data@@Base+0x131c>
   14f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f30:	cmp	r0, #92	; 0x5c
   14f34:	beq	14fc8 <print_debug_data@@Base+0x13b8>
   14f38:	b	14fdc <print_debug_data@@Base+0x13cc>
   14f3c:	movw	r0, #56361	; 0xdc29
   14f40:	movt	r0, #1
   14f44:	bl	14e14 <print_debug_data@@Base+0x1204>
   14f48:	str	r0, [fp, #-24]	; 0xffffffe8
   14f4c:	b	15024 <print_debug_data@@Base+0x1414>
   14f50:	movw	r0, #56364	; 0xdc2c
   14f54:	movt	r0, #1
   14f58:	bl	14e14 <print_debug_data@@Base+0x1204>
   14f5c:	str	r0, [fp, #-28]	; 0xffffffe4
   14f60:	b	15024 <print_debug_data@@Base+0x1414>
   14f64:	movw	r0, #56367	; 0xdc2f
   14f68:	movt	r0, #1
   14f6c:	bl	14e14 <print_debug_data@@Base+0x1204>
   14f70:	str	r0, [sp, #32]
   14f74:	b	15024 <print_debug_data@@Base+0x1414>
   14f78:	movw	r0, #56370	; 0xdc32
   14f7c:	movt	r0, #1
   14f80:	bl	14e14 <print_debug_data@@Base+0x1204>
   14f84:	str	r0, [sp, #28]
   14f88:	b	15024 <print_debug_data@@Base+0x1414>
   14f8c:	movw	r0, #56373	; 0xdc35
   14f90:	movt	r0, #1
   14f94:	bl	14e14 <print_debug_data@@Base+0x1204>
   14f98:	str	r0, [sp, #24]
   14f9c:	b	15024 <print_debug_data@@Base+0x1414>
   14fa0:	movw	r0, #56376	; 0xdc38
   14fa4:	movt	r0, #1
   14fa8:	bl	14e14 <print_debug_data@@Base+0x1204>
   14fac:	str	r0, [sp, #20]
   14fb0:	b	15024 <print_debug_data@@Base+0x1414>
   14fb4:	movw	r0, #56379	; 0xdc3b
   14fb8:	movt	r0, #1
   14fbc:	bl	14e14 <print_debug_data@@Base+0x1204>
   14fc0:	str	r0, [sp, #16]
   14fc4:	b	15024 <print_debug_data@@Base+0x1414>
   14fc8:	movw	r0, #56382	; 0xdc3e
   14fcc:	movt	r0, #1
   14fd0:	bl	14e14 <print_debug_data@@Base+0x1204>
   14fd4:	str	r0, [sp, #12]
   14fd8:	b	15024 <print_debug_data@@Base+0x1414>
   14fdc:	ldrb	r0, [fp, #-13]
   14fe0:	cmp	r0, #32
   14fe4:	blt	1500c <print_debug_data@@Base+0x13fc>
   14fe8:	ldrb	r0, [fp, #-13]
   14fec:	cmp	r0, #126	; 0x7e
   14ff0:	bgt	1500c <print_debug_data@@Base+0x13fc>
   14ff4:	ldrb	r1, [fp, #-13]
   14ff8:	movw	r0, #56221	; 0xdb9d
   14ffc:	movt	r0, #1
   15000:	bl	14e14 <print_debug_data@@Base+0x1204>
   15004:	str	r0, [sp, #8]
   15008:	b	15020 <print_debug_data@@Base+0x1410>
   1500c:	ldrb	r1, [fp, #-13]
   15010:	movw	r0, #56385	; 0xdc41
   15014:	movt	r0, #1
   15018:	bl	14e14 <print_debug_data@@Base+0x1204>
   1501c:	str	r0, [sp, #4]
   15020:	b	15024 <print_debug_data@@Base+0x1414>
   15024:	b	15028 <print_debug_data@@Base+0x1418>
   15028:	ldr	r0, [fp, #-12]
   1502c:	add	r0, r0, #1
   15030:	str	r0, [fp, #-12]
   15034:	b	14e94 <print_debug_data@@Base+0x1284>
   15038:	mov	sp, fp
   1503c:	pop	{fp, pc}
   15040:	push	{fp, lr}
   15044:	mov	fp, sp
   15048:	sub	sp, sp, #8
   1504c:	movw	r0, #436	; 0x1b4
   15050:	movt	r0, #3
   15054:	ldr	r0, [r0]
   15058:	cmp	r0, #0
   1505c:	blt	15064 <print_debug_data@@Base+0x1454>
   15060:	b	15084 <print_debug_data@@Base+0x1474>
   15064:	movw	r0, #56765	; 0xddbd
   15068:	movt	r0, #1
   1506c:	movw	r1, #56535	; 0xdcd7
   15070:	movt	r1, #1
   15074:	movw	r2, #44	; 0x2c
   15078:	movw	r3, #56777	; 0xddc9
   1507c:	movt	r3, #1
   15080:	bl	129f0 <__assert_fail@plt>
   15084:	movw	r0, #436	; 0x1b4
   15088:	movt	r0, #3
   1508c:	ldr	r0, [r0]
   15090:	str	r0, [sp, #4]
   15094:	ldr	r0, [sp, #4]
   15098:	cmp	r0, #0
   1509c:	ble	150d0 <print_debug_data@@Base+0x14c0>
   150a0:	movw	r0, #4232	; 0x1088
   150a4:	movt	r0, #3
   150a8:	ldr	r0, [r0]
   150ac:	movw	r1, #56465	; 0xdc91
   150b0:	movt	r1, #1
   150b4:	bl	12810 <fprintf@plt>
   150b8:	str	r0, [sp]
   150bc:	ldr	r0, [sp, #4]
   150c0:	mvn	r1, #0
   150c4:	add	r0, r0, r1
   150c8:	str	r0, [sp, #4]
   150cc:	b	15094 <print_debug_data@@Base+0x1484>
   150d0:	mov	sp, fp
   150d4:	pop	{fp, pc}

000150d8 <dim_info_init@@Base>:
   150d8:	movw	r0, #0
   150dc:	movw	r1, #4264	; 0x10a8
   150e0:	movt	r1, #3
   150e4:	str	r0, [r1]
   150e8:	str	r0, [r1, #68]	; 0x44
   150ec:	mvn	r0, #0
   150f0:	str	r0, [r1, #104]	; 0x68
   150f4:	bx	lr

000150f8 <dim_info_done@@Base>:
   150f8:	bx	lr

000150fc <print_all_distinct_dims@@Base>:
   150fc:	push	{fp, lr}
   15100:	mov	fp, sp
   15104:	sub	sp, sp, #80	; 0x50
   15108:	str	r0, [fp, #-4]
   1510c:	ldr	r0, [fp, #-4]
   15110:	movw	r1, #4264	; 0x10a8
   15114:	movt	r1, #3
   15118:	ldr	r1, [r1]
   1511c:	cmp	r0, r1
   15120:	bge	15128 <print_all_distinct_dims@@Base+0x2c>
   15124:	b	15148 <print_all_distinct_dims@@Base+0x4c>
   15128:	movw	r0, #56795	; 0xdddb
   1512c:	movt	r0, #1
   15130:	movw	r1, #56822	; 0xddf6
   15134:	movt	r1, #1
   15138:	movw	r2, #50	; 0x32
   1513c:	movw	r3, #56904	; 0xde48
   15140:	movt	r3, #1
   15144:	bl	129f0 <__assert_fail@plt>
   15148:	movw	r0, #4264	; 0x10a8
   1514c:	movt	r0, #3
   15150:	add	r0, r0, #72	; 0x48
   15154:	ldr	r1, [fp, #-4]
   15158:	movw	r2, #4264	; 0x10a8
   1515c:	movt	r2, #3
   15160:	add	r1, r2, r1, lsl #2
   15164:	add	r1, r1, #72	; 0x48
   15168:	ldr	r1, [r1]
   1516c:	cmp	r1, #0
   15170:	str	r0, [fp, #-16]
   15174:	bne	1517c <print_all_distinct_dims@@Base+0x80>
   15178:	b	154c8 <print_all_distinct_dims@@Base+0x3cc>
   1517c:	ldr	r0, [fp, #-4]
   15180:	movw	r1, #4264	; 0x10a8
   15184:	movt	r1, #3
   15188:	add	r0, r1, r0, lsl #2
   1518c:	ldr	r0, [r0, #4]
   15190:	add	r0, r0, #1
   15194:	lsl	r0, r0, #2
   15198:	bl	12780 <malloc@plt>
   1519c:	str	r0, [fp, #-8]
   151a0:	ldr	r0, [fp, #-8]
   151a4:	movw	r1, #0
   151a8:	cmp	r0, r1
   151ac:	bne	151f8 <print_all_distinct_dims@@Base+0xfc>
   151b0:	ldr	r0, [fp, #-4]
   151b4:	movw	r1, #4264	; 0x10a8
   151b8:	movt	r1, #3
   151bc:	add	r0, r1, r0, lsl #2
   151c0:	ldr	r0, [r0, #4]
   151c4:	add	r0, r0, #1
   151c8:	lsl	r2, r0, #2
   151cc:	mvn	r0, #0
   151d0:	movw	r1, #56224	; 0xdba0
   151d4:	movt	r1, #1
   151d8:	movw	r3, #56822	; 0xddf6
   151dc:	movt	r3, #1
   151e0:	movw	ip, #61	; 0x3d
   151e4:	str	ip, [sp]
   151e8:	bl	1260c <coda_set_error@plt>
   151ec:	movw	r0, #44732	; 0xaebc
   151f0:	movt	r0, #1
   151f4:	blx	r0
   151f8:	ldr	r0, [fp, #-8]
   151fc:	ldr	r1, [fp, #-4]
   15200:	movw	r2, #4264	; 0x10a8
   15204:	movt	r2, #3
   15208:	add	r1, r2, r1, lsl #2
   1520c:	ldr	r1, [r1, #4]
   15210:	add	r1, r1, #1
   15214:	lsl	r2, r1, #2
   15218:	movw	r1, #0
   1521c:	and	r1, r1, #255	; 0xff
   15220:	bl	12864 <memset@plt>
   15224:	movw	r0, #0
   15228:	str	r0, [fp, #-12]
   1522c:	ldr	r0, [fp, #-12]
   15230:	ldr	r1, [fp, #-4]
   15234:	movw	r2, #4264	; 0x10a8
   15238:	movt	r2, #3
   1523c:	add	r1, r2, r1, lsl #2
   15240:	ldr	r1, [r1, #140]	; 0x8c
   15244:	add	r1, r2, r1, lsl #3
   15248:	ldr	r2, [r1, #232]	; 0xe8
   1524c:	ldr	r1, [r1, #236]	; 0xec
   15250:	subs	r2, r0, r2
   15254:	rscs	r0, r1, r0, asr #31
   15258:	str	r2, [fp, #-20]	; 0xffffffec
   1525c:	str	r0, [fp, #-24]	; 0xffffffe8
   15260:	bge	152d4 <print_all_distinct_dims@@Base+0x1d8>
   15264:	b	15268 <print_all_distinct_dims@@Base+0x16c>
   15268:	ldr	r0, [fp, #-4]
   1526c:	movw	r1, #4264	; 0x10a8
   15270:	movt	r1, #3
   15274:	add	r0, r1, r0, lsl #2
   15278:	ldr	r0, [r0, #108]	; 0x6c
   1527c:	ldr	r1, [fp, #-12]
   15280:	add	r0, r0, r1, lsl #2
   15284:	ldr	r0, [r0]
   15288:	cmp	r0, #0
   1528c:	blt	152c0 <print_all_distinct_dims@@Base+0x1c4>
   15290:	ldr	r0, [fp, #-8]
   15294:	ldr	r1, [fp, #-4]
   15298:	movw	r2, #4264	; 0x10a8
   1529c:	movt	r2, #3
   152a0:	add	r1, r2, r1, lsl #2
   152a4:	ldr	r1, [r1, #108]	; 0x6c
   152a8:	ldr	r2, [fp, #-12]
   152ac:	ldr	r1, [r1, r2, lsl #2]
   152b0:	add	r0, r0, r1, lsl #2
   152b4:	ldr	r1, [r0]
   152b8:	add	r1, r1, #1
   152bc:	str	r1, [r0]
   152c0:	b	152c4 <print_all_distinct_dims@@Base+0x1c8>
   152c4:	ldr	r0, [fp, #-12]
   152c8:	add	r0, r0, #1
   152cc:	str	r0, [fp, #-12]
   152d0:	b	1522c <print_all_distinct_dims@@Base+0x130>
   152d4:	movw	r0, #4264	; 0x10a8
   152d8:	movt	r0, #3
   152dc:	add	r0, r0, #36	; 0x24
   152e0:	ldr	r1, [fp, #-4]
   152e4:	add	r1, r1, #1
   152e8:	movw	r2, #56938	; 0xde6a
   152ec:	movt	r2, #1
   152f0:	str	r0, [fp, #-28]	; 0xffffffe4
   152f4:	mov	r0, r2
   152f8:	bl	125e8 <printf@plt>
   152fc:	ldr	r1, [fp, #-4]
   15300:	movw	r2, #4264	; 0x10a8
   15304:	movt	r2, #3
   15308:	add	r1, r2, r1, lsl #2
   1530c:	add	r1, r1, #36	; 0x24
   15310:	ldr	r1, [r1]
   15314:	str	r1, [fp, #-12]
   15318:	str	r0, [fp, #-32]	; 0xffffffe0
   1531c:	movw	r0, #4264	; 0x10a8
   15320:	movt	r0, #3
   15324:	add	r0, r0, #4
   15328:	ldr	r1, [fp, #-12]
   1532c:	ldr	r2, [fp, #-4]
   15330:	movw	r3, #4264	; 0x10a8
   15334:	movt	r3, #3
   15338:	add	r2, r3, r2, lsl #2
   1533c:	add	r2, r2, #4
   15340:	ldr	r2, [r2]
   15344:	cmp	r1, r2
   15348:	str	r0, [fp, #-36]	; 0xffffffdc
   1534c:	bge	15390 <print_all_distinct_dims@@Base+0x294>
   15350:	ldr	r0, [fp, #-8]
   15354:	ldr	r1, [fp, #-12]
   15358:	add	r0, r0, r1, lsl #2
   1535c:	ldr	r0, [r0]
   15360:	cmp	r0, #0
   15364:	ble	1537c <print_all_distinct_dims@@Base+0x280>
   15368:	ldr	r1, [fp, #-12]
   1536c:	movw	r0, #56950	; 0xde76
   15370:	movt	r0, #1
   15374:	bl	125e8 <printf@plt>
   15378:	str	r0, [sp, #40]	; 0x28
   1537c:	b	15380 <print_all_distinct_dims@@Base+0x284>
   15380:	ldr	r0, [fp, #-12]
   15384:	add	r0, r0, #1
   15388:	str	r0, [fp, #-12]
   1538c:	b	1531c <print_all_distinct_dims@@Base+0x220>
   15390:	movw	r0, #4264	; 0x10a8
   15394:	movt	r0, #3
   15398:	add	r0, r0, #36	; 0x24
   1539c:	ldr	r1, [fp, #-4]
   153a0:	movw	r2, #4264	; 0x10a8
   153a4:	movt	r2, #3
   153a8:	add	r1, r2, r1, lsl #2
   153ac:	ldr	r1, [r1, #4]
   153b0:	movw	r3, #56954	; 0xde7a
   153b4:	movt	r3, #1
   153b8:	str	r0, [sp, #36]	; 0x24
   153bc:	mov	r0, r3
   153c0:	str	r2, [sp, #32]
   153c4:	bl	125e8 <printf@plt>
   153c8:	movw	r1, #56958	; 0xde7e
   153cc:	movt	r1, #1
   153d0:	str	r0, [sp, #28]
   153d4:	mov	r0, r1
   153d8:	bl	125e8 <printf@plt>
   153dc:	ldr	r1, [fp, #-4]
   153e0:	ldr	r2, [sp, #32]
   153e4:	add	r1, r2, r1, lsl #2
   153e8:	add	r1, r1, #36	; 0x24
   153ec:	ldr	r1, [r1]
   153f0:	str	r1, [fp, #-12]
   153f4:	str	r0, [sp, #24]
   153f8:	movw	r0, #4264	; 0x10a8
   153fc:	movt	r0, #3
   15400:	add	r0, r0, #4
   15404:	ldr	r1, [fp, #-12]
   15408:	ldr	r2, [fp, #-4]
   1540c:	movw	r3, #4264	; 0x10a8
   15410:	movt	r3, #3
   15414:	add	r2, r3, r2, lsl #2
   15418:	add	r2, r2, #4
   1541c:	ldr	r2, [r2]
   15420:	cmp	r1, r2
   15424:	str	r0, [sp, #20]
   15428:	bge	15478 <print_all_distinct_dims@@Base+0x37c>
   1542c:	ldr	r0, [fp, #-8]
   15430:	ldr	r1, [fp, #-12]
   15434:	add	r0, r0, r1, lsl #2
   15438:	ldr	r0, [r0]
   1543c:	cmp	r0, #0
   15440:	ble	15464 <print_all_distinct_dims@@Base+0x368>
   15444:	ldr	r0, [fp, #-8]
   15448:	ldr	r1, [fp, #-12]
   1544c:	add	r0, r0, r1, lsl #2
   15450:	ldr	r1, [r0]
   15454:	movw	r0, #56950	; 0xde76
   15458:	movt	r0, #1
   1545c:	bl	125e8 <printf@plt>
   15460:	str	r0, [sp, #16]
   15464:	b	15468 <print_all_distinct_dims@@Base+0x36c>
   15468:	ldr	r0, [fp, #-12]
   1546c:	add	r0, r0, #1
   15470:	str	r0, [fp, #-12]
   15474:	b	153f8 <print_all_distinct_dims@@Base+0x2fc>
   15478:	ldr	r0, [fp, #-8]
   1547c:	ldr	r1, [fp, #-4]
   15480:	movw	r2, #4264	; 0x10a8
   15484:	movt	r2, #3
   15488:	add	r1, r2, r1, lsl #2
   1548c:	ldr	r1, [r1, #4]
   15490:	add	r0, r0, r1, lsl #2
   15494:	ldr	r1, [r0]
   15498:	movw	r0, #56954	; 0xde7a
   1549c:	movt	r0, #1
   154a0:	bl	125e8 <printf@plt>
   154a4:	movw	r1, #62873	; 0xf599
   154a8:	movt	r1, #1
   154ac:	str	r0, [sp, #12]
   154b0:	mov	r0, r1
   154b4:	bl	125e8 <printf@plt>
   154b8:	ldr	r1, [fp, #-8]
   154bc:	str	r0, [sp, #8]
   154c0:	mov	r0, r1
   154c4:	bl	12654 <free@plt>
   154c8:	mov	sp, fp
   154cc:	pop	{fp, pc}

000154d0 <dim_enter_array@@Base>:
   154d0:	push	{r4, r5, r6, r7, fp, lr}
   154d4:	add	fp, sp, #16
   154d8:	sub	sp, sp, #232	; 0xe8
   154dc:	movw	r0, #480	; 0x1e0
   154e0:	movt	r0, #3
   154e4:	add	r0, r0, #8
   154e8:	movw	r1, #480	; 0x1e0
   154ec:	movt	r1, #3
   154f0:	ldr	r2, [r1, #3360]	; 0xd20
   154f4:	add	r2, r2, r2, lsl #2
   154f8:	add	r2, r1, r2, lsl #4
   154fc:	add	r2, r2, #800	; 0x320
   15500:	str	r2, [fp, #-24]	; 0xffffffe8
   15504:	ldr	r2, [r1, #136]	; 0x88
   15508:	add	r1, r1, r2, lsl #2
   1550c:	add	r1, r1, #8
   15510:	ldr	r1, [r1]
   15514:	str	r0, [sp, #120]	; 0x78
   15518:	mov	r0, r1
   1551c:	sub	r1, fp, #20
   15520:	bl	129fc <coda_type_get_class@plt>
   15524:	cmp	r0, #0
   15528:	beq	15538 <dim_enter_array@@Base+0x68>
   1552c:	movw	r0, #44732	; 0xaebc
   15530:	movt	r0, #1
   15534:	blx	r0
   15538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1553c:	sub	r0, r0, #1
   15540:	cmp	r0, #5
   15544:	str	r0, [sp, #116]	; 0x74
   15548:	bhi	157ac <dim_enter_array@@Base+0x2dc>
   1554c:	add	r0, pc, #8
   15550:	ldr	r1, [sp, #116]	; 0x74
   15554:	ldr	r0, [r0, r1, lsl #2]
   15558:	mov	pc, r0
   1555c:	andeq	r5, r1, r4, ror r5
   15560:	andeq	r5, r1, ip, lsr #15
   15564:	andeq	r5, r1, ip, lsr #15
   15568:	andeq	r5, r1, ip, lsr #13
   1556c:	andeq	r5, r1, r0, lsl r7
   15570:	andeq	r5, r1, r4, lsl r6
   15574:	sub	r2, fp, #88	; 0x58
   15578:	movw	r0, #480	; 0x1e0
   1557c:	movt	r0, #3
   15580:	add	r0, r0, #8
   15584:	movw	r1, #480	; 0x1e0
   15588:	movt	r1, #3
   1558c:	ldr	r3, [r1, #136]	; 0x88
   15590:	add	r1, r1, r3, lsl #2
   15594:	add	r1, r1, #8
   15598:	ldr	r1, [r1]
   1559c:	str	r0, [sp, #112]	; 0x70
   155a0:	mov	r0, r1
   155a4:	sub	r1, fp, #92	; 0x5c
   155a8:	bl	1293c <coda_type_get_array_dim@plt>
   155ac:	cmp	r0, #0
   155b0:	beq	155c0 <dim_enter_array@@Base+0xf0>
   155b4:	movw	r0, #44732	; 0xaebc
   155b8:	movt	r0, #1
   155bc:	blx	r0
   155c0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   155c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   155c8:	str	r0, [r1, #4]
   155cc:	movw	r0, #0
   155d0:	str	r0, [fp, #-56]	; 0xffffffc8
   155d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155d8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   155dc:	cmp	r0, r1
   155e0:	bge	15610 <dim_enter_array@@Base+0x140>
   155e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155e8:	sub	r1, fp, #88	; 0x58
   155ec:	ldr	r1, [r1, r0, lsl #2]
   155f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   155f4:	add	r2, r2, #8
   155f8:	add	r0, r2, r0, lsl #2
   155fc:	str	r1, [r0]
   15600:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15604:	add	r0, r0, #1
   15608:	str	r0, [fp, #-56]	; 0xffffffc8
   1560c:	b	155d4 <dim_enter_array@@Base+0x104>
   15610:	b	157cc <dim_enter_array@@Base+0x2fc>
   15614:	movw	r0, #480	; 0x1e0
   15618:	movt	r0, #3
   1561c:	add	r0, r0, #8
   15620:	movw	r1, #480	; 0x1e0
   15624:	movt	r1, #3
   15628:	ldr	r2, [r1, #136]	; 0x88
   1562c:	add	r1, r1, r2, lsl #2
   15630:	add	r1, r1, #8
   15634:	ldr	r1, [r1]
   15638:	str	r0, [sp, #108]	; 0x6c
   1563c:	mov	r0, r1
   15640:	sub	r1, fp, #96	; 0x60
   15644:	bl	1287c <coda_type_get_special_type@plt>
   15648:	cmp	r0, #0
   1564c:	beq	1565c <dim_enter_array@@Base+0x18c>
   15650:	movw	r0, #44732	; 0xaebc
   15654:	movt	r0, #1
   15658:	blx	r0
   1565c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   15660:	cmp	r0, #3
   15664:	bne	15688 <dim_enter_array@@Base+0x1b8>
   15668:	b	1566c <dim_enter_array@@Base+0x19c>
   1566c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15670:	movw	r1, #1
   15674:	str	r1, [r0, #4]
   15678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1567c:	movw	r1, #2
   15680:	str	r1, [r0, #8]
   15684:	b	156a8 <dim_enter_array@@Base+0x1d8>
   15688:	movw	r0, #56775	; 0xddc7
   1568c:	movt	r0, #1
   15690:	movw	r1, #56822	; 0xddf6
   15694:	movt	r1, #1
   15698:	movw	r2, #349	; 0x15d
   1569c:	movw	r3, #56966	; 0xde86
   156a0:	movt	r3, #1
   156a4:	bl	129f0 <__assert_fail@plt>
   156a8:	b	157cc <dim_enter_array@@Base+0x2fc>
   156ac:	movw	r0, #480	; 0x1e0
   156b0:	movt	r0, #3
   156b4:	add	r0, r0, #8
   156b8:	movw	r1, #480	; 0x1e0
   156bc:	movt	r1, #3
   156c0:	ldr	r2, [r1, #136]	; 0x88
   156c4:	add	r1, r1, r2, lsl #2
   156c8:	add	r1, r1, #8
   156cc:	ldr	r1, [r1]
   156d0:	str	r0, [sp, #104]	; 0x68
   156d4:	mov	r0, r1
   156d8:	sub	r1, fp, #100	; 0x64
   156dc:	bl	128b8 <coda_type_get_string_length@plt>
   156e0:	cmp	r0, #0
   156e4:	beq	156f4 <dim_enter_array@@Base+0x224>
   156e8:	movw	r0, #44732	; 0xaebc
   156ec:	movt	r0, #1
   156f0:	blx	r0
   156f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   156f8:	movw	r1, #1
   156fc:	str	r1, [r0, #4]
   15700:	ldr	r0, [fp, #-100]	; 0xffffff9c
   15704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15708:	str	r0, [r1, #8]
   1570c:	b	157cc <dim_enter_array@@Base+0x2fc>
   15710:	movw	r0, #480	; 0x1e0
   15714:	movt	r0, #3
   15718:	add	r0, r0, #8
   1571c:	movw	r1, #480	; 0x1e0
   15720:	movt	r1, #3
   15724:	ldr	r2, [r1, #136]	; 0x88
   15728:	add	r1, r1, r2, lsl #2
   1572c:	add	r1, r1, #8
   15730:	ldr	r1, [r1]
   15734:	str	r0, [sp, #100]	; 0x64
   15738:	mov	r0, r1
   1573c:	sub	r1, fp, #112	; 0x70
   15740:	bl	126c0 <coda_type_get_bit_size@plt>
   15744:	cmp	r0, #0
   15748:	beq	15758 <dim_enter_array@@Base+0x288>
   1574c:	movw	r0, #44732	; 0xaebc
   15750:	movt	r0, #1
   15754:	blx	r0
   15758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1575c:	mov	r1, #1
   15760:	str	r1, [r0, #4]
   15764:	ldr	r0, [fp, #-108]	; 0xffffff94
   15768:	cmp	r0, #0
   1576c:	blt	1579c <dim_enter_array@@Base+0x2cc>
   15770:	b	15774 <dim_enter_array@@Base+0x2a4>
   15774:	ldr	r0, [fp, #-112]	; 0xffffff90
   15778:	ldr	r1, [fp, #-108]	; 0xffffff94
   1577c:	lsr	r2, r0, #3
   15780:	orr	r1, r2, r1, lsl #29
   15784:	add	r2, r1, #1
   15788:	tst	r0, #7
   1578c:	movne	r1, r2
   15790:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15794:	str	r1, [r0, #8]
   15798:	b	157a8 <dim_enter_array@@Base+0x2d8>
   1579c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157a0:	mvn	r1, #0
   157a4:	str	r1, [r0, #8]
   157a8:	b	157cc <dim_enter_array@@Base+0x2fc>
   157ac:	movw	r0, #56775	; 0xddc7
   157b0:	movt	r0, #1
   157b4:	movw	r1, #56822	; 0xddf6
   157b8:	movt	r1, #1
   157bc:	movw	r2, #386	; 0x182
   157c0:	movw	r3, #56966	; 0xde86
   157c4:	movt	r3, #1
   157c8:	bl	129f0 <__assert_fail@plt>
   157cc:	movw	r0, #476	; 0x1dc
   157d0:	movt	r0, #3
   157d4:	ldr	r0, [r0]
   157d8:	cmp	r0, #0
   157dc:	bne	15804 <dim_enter_array@@Base+0x334>
   157e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157e4:	mvn	r1, #0
   157e8:	str	r1, [r0]
   157ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157f0:	movw	r1, #0
   157f4:	str	r1, [r0, #40]	; 0x28
   157f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157fc:	str	r1, [r0, #44]	; 0x2c
   15800:	b	1627c <dim_enter_array@@Base+0xdac>
   15804:	movw	r0, #4264	; 0x10a8
   15808:	movt	r0, #3
   1580c:	ldr	r1, [r0]
   15810:	str	r1, [fp, #-52]	; 0xffffffcc
   15814:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15818:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1581c:	str	r1, [r2]
   15820:	ldr	r0, [r0]
   15824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15828:	ldr	r1, [r1, #4]
   1582c:	add	r0, r0, r1
   15830:	cmp	r0, #8
   15834:	bgt	1583c <dim_enter_array@@Base+0x36c>
   15838:	b	1585c <dim_enter_array@@Base+0x38c>
   1583c:	movw	r0, #56989	; 0xde9d
   15840:	movt	r0, #1
   15844:	movw	r1, #56822	; 0xddf6
   15848:	movt	r1, #1
   1584c:	movw	r2, #402	; 0x192
   15850:	movw	r3, #56966	; 0xde86
   15854:	movt	r3, #1
   15858:	bl	129f0 <__assert_fail@plt>
   1585c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15860:	ldr	r0, [r0, #4]
   15864:	movw	r1, #4264	; 0x10a8
   15868:	movt	r1, #3
   1586c:	ldr	r2, [r1]
   15870:	add	r0, r2, r0
   15874:	str	r0, [r1]
   15878:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1587c:	cmp	r0, #0
   15880:	ble	158c0 <dim_enter_array@@Base+0x3f0>
   15884:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15888:	movw	r1, #4264	; 0x10a8
   1588c:	movt	r1, #3
   15890:	add	r0, r1, r0, lsl #3
   15894:	ldr	r2, [r0, #232]	; 0xe8
   15898:	ldr	r0, [r0, #236]	; 0xec
   1589c:	str	r0, [fp, #-28]	; 0xffffffe4
   158a0:	str	r2, [fp, #-32]	; 0xffffffe0
   158a4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   158a8:	add	r0, r1, r0, lsl #3
   158ac:	ldr	r1, [r0, #296]	; 0x128
   158b0:	ldr	r0, [r0, #300]	; 0x12c
   158b4:	str	r0, [fp, #-36]	; 0xffffffdc
   158b8:	str	r1, [fp, #-40]	; 0xffffffd8
   158bc:	b	158d8 <dim_enter_array@@Base+0x408>
   158c0:	mov	r0, #0
   158c4:	str	r0, [fp, #-28]	; 0xffffffe4
   158c8:	mov	r1, #1
   158cc:	str	r1, [fp, #-32]	; 0xffffffe0
   158d0:	str	r0, [fp, #-36]	; 0xffffffdc
   158d4:	str	r1, [fp, #-40]	; 0xffffffd8
   158d8:	mov	r0, #0
   158dc:	str	r0, [fp, #-44]	; 0xffffffd4
   158e0:	str	r0, [fp, #-48]	; 0xffffffd0
   158e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   158e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   158ec:	subs	r0, r0, #1
   158f0:	sbcs	r1, r1, #0
   158f4:	str	r0, [sp, #96]	; 0x60
   158f8:	str	r1, [sp, #92]	; 0x5c
   158fc:	blt	1599c <dim_enter_array@@Base+0x4cc>
   15900:	b	15904 <dim_enter_array@@Base+0x434>
   15904:	movw	r0, #0
   15908:	str	r0, [fp, #-56]	; 0xffffffc8
   1590c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15914:	ldr	r1, [r1, #4]
   15918:	cmp	r0, r1
   1591c:	bge	15998 <dim_enter_array@@Base+0x4c8>
   15920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15924:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15928:	add	r0, r0, r1, lsl #2
   1592c:	ldr	r0, [r0, #8]
   15930:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15934:	add	r1, r2, r1
   15938:	movw	r2, #4264	; 0x10a8
   1593c:	movt	r2, #3
   15940:	add	r1, r2, r1, lsl #2
   15944:	str	r0, [r1, #4]
   15948:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1594c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15950:	add	r0, r0, r1
   15954:	add	r0, r2, r0, lsl #2
   15958:	mov	r1, #0
   1595c:	str	r1, [r0, #72]	; 0x48
   15960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15964:	add	r0, r0, #8
   15968:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1596c:	add	r0, r0, r1, lsl #2
   15970:	ldr	r0, [r0]
   15974:	cmn	r0, #1
   15978:	bne	15984 <dim_enter_array@@Base+0x4b4>
   1597c:	movw	r0, #1
   15980:	str	r0, [fp, #-44]	; 0xffffffd4
   15984:	b	15988 <dim_enter_array@@Base+0x4b8>
   15988:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1598c:	add	r0, r0, #1
   15990:	str	r0, [fp, #-56]	; 0xffffffc8
   15994:	b	1590c <dim_enter_array@@Base+0x43c>
   15998:	b	15a18 <dim_enter_array@@Base+0x548>
   1599c:	movw	r0, #0
   159a0:	str	r0, [fp, #-56]	; 0xffffffc8
   159a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   159a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159ac:	ldr	r1, [r1, #4]
   159b0:	cmp	r0, r1
   159b4:	bge	15a14 <dim_enter_array@@Base+0x544>
   159b8:	movw	r0, #4264	; 0x10a8
   159bc:	movt	r0, #3
   159c0:	add	r0, r0, #72	; 0x48
   159c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   159c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   159cc:	add	r1, r1, r2
   159d0:	movw	r2, #4264	; 0x10a8
   159d4:	movt	r2, #3
   159d8:	add	r1, r2, r1, lsl #2
   159dc:	mov	r3, #0
   159e0:	str	r3, [r1, #4]
   159e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   159e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   159ec:	add	r1, r1, r3
   159f0:	add	r1, r2, r1, lsl #2
   159f4:	add	r1, r1, #72	; 0x48
   159f8:	movw	r2, #0
   159fc:	str	r2, [r1]
   15a00:	str	r0, [sp, #88]	; 0x58
   15a04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15a08:	add	r0, r0, #1
   15a0c:	str	r0, [fp, #-56]	; 0xffffffc8
   15a10:	b	159a4 <dim_enter_array@@Base+0x4d4>
   15a14:	b	15a18 <dim_enter_array@@Base+0x548>
   15a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a1c:	cmp	r0, #0
   15a20:	beq	15d4c <dim_enter_array@@Base+0x87c>
   15a24:	movw	r0, #0
   15a28:	str	r0, [fp, #-56]	; 0xffffffc8
   15a2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15a30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15a34:	ldr	r1, [r1, #4]
   15a38:	cmp	r0, r1
   15a3c:	bge	15bd4 <dim_enter_array@@Base+0x704>
   15a40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a44:	add	r0, r0, #8
   15a48:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15a4c:	add	r0, r0, r1, lsl #2
   15a50:	ldr	r0, [r0]
   15a54:	cmn	r0, #1
   15a58:	bne	15b74 <dim_enter_array@@Base+0x6a4>
   15a5c:	movw	r0, #4264	; 0x10a8
   15a60:	movt	r0, #3
   15a64:	add	r0, r0, #108	; 0x6c
   15a68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15a6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15a70:	add	r2, r1, r2
   15a74:	movw	r3, #4264	; 0x10a8
   15a78:	movt	r3, #3
   15a7c:	add	r2, r3, r2, lsl #2
   15a80:	str	r1, [r2, #140]	; 0x8c
   15a84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15a88:	lsl	r1, r1, #2
   15a8c:	str	r0, [sp, #84]	; 0x54
   15a90:	mov	r0, r1
   15a94:	str	r3, [sp, #80]	; 0x50
   15a98:	bl	12780 <malloc@plt>
   15a9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15aa0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15aa4:	add	r1, r1, r2
   15aa8:	ldr	r2, [sp, #80]	; 0x50
   15aac:	add	r3, r2, #108	; 0x6c
   15ab0:	str	r0, [r3, r1, lsl #2]
   15ab4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15ab8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15abc:	add	r0, r0, r1
   15ac0:	add	r0, r3, r0, lsl #2
   15ac4:	ldr	r0, [r0]
   15ac8:	movw	r1, #0
   15acc:	cmp	r0, r1
   15ad0:	bne	15b08 <dim_enter_array@@Base+0x638>
   15ad4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ad8:	lsl	r2, r0, #2
   15adc:	mvn	r0, #0
   15ae0:	movw	r1, #56224	; 0xdba0
   15ae4:	movt	r1, #1
   15ae8:	movw	r3, #56822	; 0xddf6
   15aec:	movt	r3, #1
   15af0:	movw	ip, #456	; 0x1c8
   15af4:	str	ip, [sp]
   15af8:	bl	1260c <coda_set_error@plt>
   15afc:	movw	r0, #44732	; 0xaebc
   15b00:	movt	r0, #1
   15b04:	blx	r0
   15b08:	movw	r0, #0
   15b0c:	str	r0, [fp, #-116]	; 0xffffff8c
   15b10:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15b14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15b1c:	subs	r1, r0, r1
   15b20:	rscs	r0, r2, r0, asr #31
   15b24:	str	r1, [sp, #76]	; 0x4c
   15b28:	str	r0, [sp, #72]	; 0x48
   15b2c:	bge	15b70 <dim_enter_array@@Base+0x6a0>
   15b30:	b	15b34 <dim_enter_array@@Base+0x664>
   15b34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15b38:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15b3c:	add	r0, r0, r1
   15b40:	movw	r1, #4264	; 0x10a8
   15b44:	movt	r1, #3
   15b48:	add	r0, r1, r0, lsl #2
   15b4c:	ldr	r0, [r0, #108]	; 0x6c
   15b50:	ldr	r1, [fp, #-116]	; 0xffffff8c
   15b54:	add	r0, r0, r1, lsl #2
   15b58:	mvn	r1, #0
   15b5c:	str	r1, [r0]
   15b60:	ldr	r0, [fp, #-116]	; 0xffffff8c
   15b64:	add	r0, r0, #1
   15b68:	str	r0, [fp, #-116]	; 0xffffff8c
   15b6c:	b	15b10 <dim_enter_array@@Base+0x640>
   15b70:	b	15bc0 <dim_enter_array@@Base+0x6f0>
   15b74:	movw	r0, #4264	; 0x10a8
   15b78:	movt	r0, #3
   15b7c:	add	r0, r0, #108	; 0x6c
   15b80:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15b88:	add	r1, r1, r2
   15b8c:	movw	r2, #4264	; 0x10a8
   15b90:	movt	r2, #3
   15b94:	add	r1, r2, r1, lsl #2
   15b98:	mov	r3, #0
   15b9c:	str	r3, [r1, #140]	; 0x8c
   15ba0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15ba8:	add	r1, r1, r3
   15bac:	add	r1, r2, r1, lsl #2
   15bb0:	add	r1, r1, #108	; 0x6c
   15bb4:	movw	r2, #0
   15bb8:	str	r2, [r1]
   15bbc:	str	r0, [sp, #68]	; 0x44
   15bc0:	b	15bc4 <dim_enter_array@@Base+0x6f4>
   15bc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bc8:	add	r0, r0, #1
   15bcc:	str	r0, [fp, #-56]	; 0xffffffc8
   15bd0:	b	15a2c <dim_enter_array@@Base+0x55c>
   15bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15bd8:	movw	r1, #0
   15bdc:	str	r1, [r0, #44]	; 0x2c
   15be0:	mov	r0, r1
   15be4:	str	r1, [sp, #64]	; 0x40
   15be8:	ldr	r2, [sp, #64]	; 0x40
   15bec:	bl	16284 <dim_enter_array@@Base+0xdb4>
   15bf0:	movw	r0, #0
   15bf4:	str	r0, [fp, #-56]	; 0xffffffc8
   15bf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15c00:	ldr	r1, [r1, #4]
   15c04:	cmp	r0, r1
   15c08:	bge	15d48 <dim_enter_array@@Base+0x878>
   15c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c10:	add	r0, r0, #8
   15c14:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15c18:	add	r0, r0, r1, lsl #2
   15c1c:	ldr	r0, [r0]
   15c20:	cmn	r0, #1
   15c24:	bne	15d34 <dim_enter_array@@Base+0x864>
   15c28:	movw	r0, #4264	; 0x10a8
   15c2c:	movt	r0, #3
   15c30:	add	r0, r0, #36	; 0x24
   15c34:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15c38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15c3c:	add	r1, r1, r2
   15c40:	movw	r2, #4264	; 0x10a8
   15c44:	movt	r2, #3
   15c48:	add	r1, r2, r1, lsl #2
   15c4c:	ldr	r2, [r1, #4]
   15c50:	add	r1, r1, #36	; 0x24
   15c54:	ldr	r1, [r1]
   15c58:	cmp	r2, r1
   15c5c:	str	r0, [sp, #60]	; 0x3c
   15c60:	beq	15ca0 <dim_enter_array@@Base+0x7d0>
   15c64:	movw	r0, #4264	; 0x10a8
   15c68:	movt	r0, #3
   15c6c:	add	r0, r0, #72	; 0x48
   15c70:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15c74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15c78:	add	r1, r1, r2
   15c7c:	movw	r2, #4264	; 0x10a8
   15c80:	movt	r2, #3
   15c84:	add	r1, r2, r1, lsl #2
   15c88:	add	r1, r1, #72	; 0x48
   15c8c:	movw	r2, #1
   15c90:	str	r2, [r1]
   15c94:	str	r2, [fp, #-48]	; 0xffffffd0
   15c98:	str	r0, [sp, #56]	; 0x38
   15c9c:	b	15d30 <dim_enter_array@@Base+0x860>
   15ca0:	movw	r0, #4264	; 0x10a8
   15ca4:	movt	r0, #3
   15ca8:	add	r0, r0, #140	; 0x8c
   15cac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15cb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15cb4:	add	r1, r1, r2
   15cb8:	movw	r2, #4264	; 0x10a8
   15cbc:	movt	r2, #3
   15cc0:	add	r1, r2, r1, lsl #2
   15cc4:	mov	r3, #0
   15cc8:	str	r3, [r1, #72]	; 0x48
   15ccc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15cd0:	ldr	ip, [fp, #-56]	; 0xffffffc8
   15cd4:	add	r1, r1, ip
   15cd8:	add	ip, r2, #108	; 0x6c
   15cdc:	ldr	r1, [ip, r1, lsl #2]
   15ce0:	str	r0, [sp, #52]	; 0x34
   15ce4:	mov	r0, r1
   15ce8:	str	ip, [sp, #48]	; 0x30
   15cec:	str	r2, [sp, #44]	; 0x2c
   15cf0:	str	r3, [sp, #40]	; 0x28
   15cf4:	bl	12654 <free@plt>
   15cf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15cfc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15d00:	add	r0, r0, r1
   15d04:	ldr	r1, [sp, #40]	; 0x28
   15d08:	ldr	r2, [sp, #48]	; 0x30
   15d0c:	str	r1, [r2, r0, lsl #2]
   15d10:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15d14:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d18:	add	r0, r0, r3
   15d1c:	ldr	r3, [sp, #44]	; 0x2c
   15d20:	add	r0, r3, r0, lsl #2
   15d24:	add	r0, r0, #140	; 0x8c
   15d28:	movw	ip, #0
   15d2c:	str	ip, [r0]
   15d30:	b	15d34 <dim_enter_array@@Base+0x864>
   15d34:	b	15d38 <dim_enter_array@@Base+0x868>
   15d38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d3c:	add	r0, r0, #1
   15d40:	str	r0, [fp, #-56]	; 0xffffffc8
   15d44:	b	15bf8 <dim_enter_array@@Base+0x728>
   15d48:	b	15d4c <dim_enter_array@@Base+0x87c>
   15d4c:	movw	r0, #4264	; 0x10a8
   15d50:	movt	r0, #3
   15d54:	movw	r1, #0
   15d58:	str	r1, [r0, #68]	; 0x44
   15d5c:	mvn	r2, #0
   15d60:	str	r2, [r0, #104]	; 0x68
   15d64:	str	r1, [fp, #-56]	; 0xffffffc8
   15d68:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d6c:	movw	r1, #4264	; 0x10a8
   15d70:	movt	r1, #3
   15d74:	ldr	r1, [r1]
   15d78:	cmp	r0, r1
   15d7c:	bge	15ddc <dim_enter_array@@Base+0x90c>
   15d80:	movw	r0, #4264	; 0x10a8
   15d84:	movt	r0, #3
   15d88:	add	r0, r0, #72	; 0x48
   15d8c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15d90:	movw	r2, #4264	; 0x10a8
   15d94:	movt	r2, #3
   15d98:	add	r1, r2, r1, lsl #2
   15d9c:	add	r1, r1, #72	; 0x48
   15da0:	ldr	r1, [r1]
   15da4:	cmp	r1, #0
   15da8:	str	r0, [sp, #36]	; 0x24
   15dac:	beq	15dc8 <dim_enter_array@@Base+0x8f8>
   15db0:	movw	r0, #1
   15db4:	movw	r1, #4264	; 0x10a8
   15db8:	movt	r1, #3
   15dbc:	str	r0, [r1, #68]	; 0x44
   15dc0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15dc4:	str	r0, [r1, #104]	; 0x68
   15dc8:	b	15dcc <dim_enter_array@@Base+0x8fc>
   15dcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15dd0:	add	r0, r0, #1
   15dd4:	str	r0, [fp, #-56]	; 0xffffffc8
   15dd8:	b	15d68 <dim_enter_array@@Base+0x898>
   15ddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15de0:	movw	r1, #1
   15de4:	str	r1, [r0, #40]	; 0x28
   15de8:	movw	r0, #0
   15dec:	str	r0, [fp, #-56]	; 0xffffffc8
   15df0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15df4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15df8:	ldr	r1, [r1, #4]
   15dfc:	cmp	r0, r1
   15e00:	bge	15ee0 <dim_enter_array@@Base+0xa10>
   15e04:	movw	r0, #4264	; 0x10a8
   15e08:	movt	r0, #3
   15e0c:	add	r0, r0, #4
   15e10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15e18:	add	r1, r1, r2
   15e1c:	movw	r2, #4264	; 0x10a8
   15e20:	movt	r2, #3
   15e24:	add	r1, r2, r1, lsl #2
   15e28:	add	r1, r1, #4
   15e2c:	ldr	r1, [r1]
   15e30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e34:	ldr	r3, [r2, #40]	; 0x28
   15e38:	mul	r1, r3, r1
   15e3c:	str	r1, [r2, #40]	; 0x28
   15e40:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15e44:	cmp	r1, #0
   15e48:	str	r0, [sp, #32]
   15e4c:	bne	15e8c <dim_enter_array@@Base+0x9bc>
   15e50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15e58:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15e5c:	movw	r3, #4264	; 0x10a8
   15e60:	movt	r3, #3
   15e64:	add	ip, r3, r2, lsl #2
   15e68:	ldr	ip, [ip, #4]
   15e6c:	asr	lr, ip, #31
   15e70:	umull	r4, r5, r0, ip
   15e74:	mla	r0, r0, lr, r5
   15e78:	mla	r0, r1, ip, r0
   15e7c:	add	r1, r3, r2, lsl #3
   15e80:	str	r4, [r1, #240]	; 0xf0
   15e84:	str	r0, [r1, #244]	; 0xf4
   15e88:	b	15ecc <dim_enter_array@@Base+0x9fc>
   15e8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15e90:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15e94:	add	r0, r0, r1
   15e98:	movw	r1, #4264	; 0x10a8
   15e9c:	movt	r1, #3
   15ea0:	add	r2, r1, r0, lsl #3
   15ea4:	ldr	r3, [r2, #232]	; 0xe8
   15ea8:	ldr	ip, [r2, #236]	; 0xec
   15eac:	add	r0, r1, r0, lsl #2
   15eb0:	ldr	r0, [r0, #4]
   15eb4:	asr	r1, r0, #31
   15eb8:	umull	lr, r4, r3, r0
   15ebc:	mla	r1, r3, r1, r4
   15ec0:	mla	r0, ip, r0, r1
   15ec4:	str	lr, [r2, #240]	; 0xf0
   15ec8:	str	r0, [r2, #244]	; 0xf4
   15ecc:	b	15ed0 <dim_enter_array@@Base+0xa00>
   15ed0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ed4:	add	r0, r0, #1
   15ed8:	str	r0, [fp, #-56]	; 0xffffffc8
   15edc:	b	15df0 <dim_enter_array@@Base+0x920>
   15ee0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15ee4:	cmp	r0, #0
   15ee8:	beq	16094 <dim_enter_array@@Base+0xbc4>
   15eec:	movw	r0, #0
   15ef0:	str	r0, [fp, #-56]	; 0xffffffc8
   15ef4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ef8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15efc:	ldr	r1, [r1, #4]
   15f00:	cmp	r0, r1
   15f04:	bge	15f3c <dim_enter_array@@Base+0xa6c>
   15f08:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15f0c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15f10:	add	r0, r0, r1
   15f14:	movw	r1, #4264	; 0x10a8
   15f18:	movt	r1, #3
   15f1c:	add	r0, r1, r0, lsl #3
   15f20:	mov	r1, #0
   15f24:	str	r1, [r0, #308]	; 0x134
   15f28:	str	r1, [r0, #304]	; 0x130
   15f2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15f30:	add	r0, r0, #1
   15f34:	str	r0, [fp, #-56]	; 0xffffffc8
   15f38:	b	15ef4 <dim_enter_array@@Base+0xa24>
   15f3c:	movw	r0, #0
   15f40:	str	r0, [fp, #-120]	; 0xffffff88
   15f44:	ldr	r0, [fp, #-120]	; 0xffffff88
   15f48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15f4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15f50:	subs	r1, r0, r1
   15f54:	rscs	r0, r2, r0, asr #31
   15f58:	str	r1, [sp, #28]
   15f5c:	str	r0, [sp, #24]
   15f60:	bge	16090 <dim_enter_array@@Base+0xbc0>
   15f64:	b	15f68 <dim_enter_array@@Base+0xa98>
   15f68:	movw	r0, #1
   15f6c:	str	r0, [sp, #124]	; 0x7c
   15f70:	movw	r0, #0
   15f74:	str	r0, [fp, #-56]	; 0xffffffc8
   15f78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15f7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f80:	ldr	r1, [r1, #4]
   15f84:	cmp	r0, r1
   15f88:	bge	1607c <dim_enter_array@@Base+0xbac>
   15f8c:	movw	r0, #4264	; 0x10a8
   15f90:	movt	r0, #3
   15f94:	add	r0, r0, #72	; 0x48
   15f98:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15f9c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15fa0:	add	r1, r1, r2
   15fa4:	movw	r2, #4264	; 0x10a8
   15fa8:	movt	r2, #3
   15fac:	add	r1, r2, r1, lsl #2
   15fb0:	add	r1, r1, #72	; 0x48
   15fb4:	ldr	r1, [r1]
   15fb8:	cmp	r1, #0
   15fbc:	str	r0, [sp, #20]
   15fc0:	beq	15ffc <dim_enter_array@@Base+0xb2c>
   15fc4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15fc8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15fcc:	add	r0, r0, r1
   15fd0:	movw	r1, #4264	; 0x10a8
   15fd4:	movt	r1, #3
   15fd8:	add	r0, r1, r0, lsl #2
   15fdc:	ldr	r0, [r0, #108]	; 0x6c
   15fe0:	ldr	r1, [fp, #-120]	; 0xffffff88
   15fe4:	add	r0, r0, r1, lsl #2
   15fe8:	ldr	r0, [r0]
   15fec:	ldr	r1, [sp, #124]	; 0x7c
   15ff0:	mul	r0, r1, r0
   15ff4:	str	r0, [sp, #124]	; 0x7c
   15ff8:	b	16038 <dim_enter_array@@Base+0xb68>
   15ffc:	movw	r0, #4264	; 0x10a8
   16000:	movt	r0, #3
   16004:	add	r0, r0, #4
   16008:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1600c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16010:	add	r1, r1, r2
   16014:	movw	r2, #4264	; 0x10a8
   16018:	movt	r2, #3
   1601c:	add	r1, r2, r1, lsl #2
   16020:	add	r1, r1, #4
   16024:	ldr	r1, [r1]
   16028:	ldr	r2, [sp, #124]	; 0x7c
   1602c:	mul	r1, r2, r1
   16030:	str	r1, [sp, #124]	; 0x7c
   16034:	str	r0, [sp, #16]
   16038:	ldr	r0, [sp, #124]	; 0x7c
   1603c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16040:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16044:	add	r1, r1, r2
   16048:	movw	r2, #4264	; 0x10a8
   1604c:	movt	r2, #3
   16050:	add	r1, r2, r1, lsl #3
   16054:	ldr	r2, [r1, #304]	; 0x130
   16058:	ldr	r3, [r1, #308]	; 0x134
   1605c:	adds	r2, r2, r0
   16060:	adc	r0, r3, r0, asr #31
   16064:	str	r2, [r1, #304]	; 0x130
   16068:	str	r0, [r1, #308]	; 0x134
   1606c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16070:	add	r0, r0, #1
   16074:	str	r0, [fp, #-56]	; 0xffffffc8
   16078:	b	15f78 <dim_enter_array@@Base+0xaa8>
   1607c:	b	16080 <dim_enter_array@@Base+0xbb0>
   16080:	ldr	r0, [fp, #-120]	; 0xffffff88
   16084:	add	r0, r0, #1
   16088:	str	r0, [fp, #-120]	; 0xffffff88
   1608c:	b	15f44 <dim_enter_array@@Base+0xa74>
   16090:	b	1613c <dim_enter_array@@Base+0xc6c>
   16094:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16098:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1609c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   160a0:	movw	r3, #4264	; 0x10a8
   160a4:	movt	r3, #3
   160a8:	add	ip, r3, r2, lsl #2
   160ac:	ldr	ip, [ip, #4]
   160b0:	asr	lr, ip, #31
   160b4:	umull	r4, r5, r0, ip
   160b8:	mla	r0, r0, lr, r5
   160bc:	mla	r0, r1, ip, r0
   160c0:	add	r1, r3, r2, lsl #3
   160c4:	str	r4, [r1, #304]	; 0x130
   160c8:	str	r0, [r1, #308]	; 0x134
   160cc:	movw	r0, #1
   160d0:	str	r0, [fp, #-56]	; 0xffffffc8
   160d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   160d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160dc:	ldr	r1, [r1, #4]
   160e0:	cmp	r0, r1
   160e4:	bge	16138 <dim_enter_array@@Base+0xc68>
   160e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   160ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
   160f0:	add	r0, r0, r1
   160f4:	movw	r1, #4264	; 0x10a8
   160f8:	movt	r1, #3
   160fc:	add	r2, r1, r0, lsl #3
   16100:	ldr	r3, [r2, #296]	; 0x128
   16104:	ldr	ip, [r2, #300]	; 0x12c
   16108:	add	r0, r1, r0, lsl #2
   1610c:	ldr	r0, [r0, #4]
   16110:	asr	r1, r0, #31
   16114:	umull	lr, r4, r3, r0
   16118:	mla	r1, r3, r1, r4
   1611c:	mla	r0, ip, r0, r1
   16120:	str	lr, [r2, #304]	; 0x130
   16124:	str	r0, [r2, #308]	; 0x134
   16128:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1612c:	add	r0, r0, #1
   16130:	str	r0, [fp, #-56]	; 0xffffffc8
   16134:	b	160d4 <dim_enter_array@@Base+0xc04>
   16138:	b	1613c <dim_enter_array@@Base+0xc6c>
   1613c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16140:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16144:	ldr	r1, [r1, #4]
   16148:	add	r0, r0, r1
   1614c:	movw	r1, #4264	; 0x10a8
   16150:	movt	r1, #3
   16154:	add	r0, r1, r0, lsl #3
   16158:	ldr	r1, [r0, #296]	; 0x128
   1615c:	ldr	r0, [r0, #300]	; 0x12c
   16160:	subs	r1, r1, #1
   16164:	sbcs	r0, r0, #0
   16168:	str	r1, [sp, #12]
   1616c:	str	r0, [sp, #8]
   16170:	blt	1627c <dim_enter_array@@Base+0xdac>
   16174:	b	16178 <dim_enter_array@@Base+0xca8>
   16178:	movw	r0, #4264	; 0x10a8
   1617c:	movt	r0, #3
   16180:	ldr	r1, [r0]
   16184:	sub	r1, r1, #1
   16188:	add	r2, r0, r1, lsl #2
   1618c:	ldr	r2, [r2, #4]
   16190:	asr	r3, r2, #31
   16194:	add	r0, r0, r1, lsl #3
   16198:	str	r2, [r0, #176]	; 0xb0
   1619c:	str	r3, [r0, #180]	; 0xb4
   161a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161a4:	ldr	r0, [r0, #4]
   161a8:	sub	r0, r0, #2
   161ac:	str	r0, [fp, #-56]	; 0xffffffc8
   161b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   161b4:	cmp	r0, #0
   161b8:	blt	16210 <dim_enter_array@@Base+0xd40>
   161bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   161c0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   161c4:	add	r0, r0, r1
   161c8:	movw	r1, #4264	; 0x10a8
   161cc:	movt	r1, #3
   161d0:	add	r2, r1, r0, lsl #2
   161d4:	ldr	r2, [r2, #4]
   161d8:	asr	r3, r2, #31
   161dc:	add	r0, r1, r0, lsl #3
   161e0:	ldr	r1, [r0, #184]	; 0xb8
   161e4:	ldr	ip, [r0, #188]	; 0xbc
   161e8:	umull	lr, r4, r2, r1
   161ec:	mla	r2, r2, ip, r4
   161f0:	mla	r1, r3, r1, r2
   161f4:	str	lr, [r0, #176]	; 0xb0
   161f8:	str	r1, [r0, #180]	; 0xb4
   161fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16200:	mvn	r1, #0
   16204:	add	r0, r0, r1
   16208:	str	r0, [fp, #-56]	; 0xffffffc8
   1620c:	b	161b0 <dim_enter_array@@Base+0xce0>
   16210:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16214:	sub	r0, r0, #1
   16218:	str	r0, [fp, #-56]	; 0xffffffc8
   1621c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16220:	cmp	r0, #0
   16224:	blt	16278 <dim_enter_array@@Base+0xda8>
   16228:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1622c:	movw	r1, #4264	; 0x10a8
   16230:	movt	r1, #3
   16234:	add	r1, r1, #176	; 0xb0
   16238:	mov	r2, r1
   1623c:	ldr	r0, [r2, r0, lsl #3]!
   16240:	ldr	r2, [r2, #4]
   16244:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16248:	ldr	r3, [r1, r3, lsl #3]!
   1624c:	ldr	ip, [r1, #4]
   16250:	umull	lr, r4, r3, r0
   16254:	mla	r2, r3, r2, r4
   16258:	mla	r0, ip, r0, r2
   1625c:	str	lr, [r1]
   16260:	str	r0, [r1, #4]
   16264:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16268:	mvn	r1, #0
   1626c:	add	r0, r0, r1
   16270:	str	r0, [fp, #-56]	; 0xffffffc8
   16274:	b	1621c <dim_enter_array@@Base+0xd4c>
   16278:	b	1627c <dim_enter_array@@Base+0xdac>
   1627c:	sub	sp, fp, #16
   16280:	pop	{r4, r5, r6, r7, fp, pc}
   16284:	push	{fp, lr}
   16288:	mov	fp, sp
   1628c:	sub	sp, sp, #208	; 0xd0
   16290:	movw	r3, #480	; 0x1e0
   16294:	movt	r3, #3
   16298:	add	r3, r3, #144	; 0x90
   1629c:	str	r0, [fp, #-4]
   162a0:	str	r1, [fp, #-8]
   162a4:	str	r2, [fp, #-12]
   162a8:	mov	r0, r3
   162ac:	sub	r1, fp, #16
   162b0:	bl	126e4 <coda_cursor_get_type_class@plt>
   162b4:	cmp	r0, #0
   162b8:	beq	162c8 <dim_enter_array@@Base+0xdf8>
   162bc:	movw	r0, #44732	; 0xaebc
   162c0:	movt	r0, #1
   162c4:	blx	r0
   162c8:	ldr	r0, [fp, #-16]
   162cc:	cmp	r0, #0
   162d0:	str	r0, [sp, #88]	; 0x58
   162d4:	beq	16798 <dim_enter_array@@Base+0x12c8>
   162d8:	b	162dc <dim_enter_array@@Base+0xe0c>
   162dc:	ldr	r0, [sp, #88]	; 0x58
   162e0:	cmp	r0, #1
   162e4:	beq	16300 <dim_enter_array@@Base+0xe30>
   162e8:	b	162ec <dim_enter_array@@Base+0xe1c>
   162ec:	ldr	r0, [sp, #88]	; 0x58
   162f0:	sub	r1, r0, #4
   162f4:	cmp	r1, #2
   162f8:	bcc	169c4 <dim_enter_array@@Base+0x14f4>
   162fc:	b	16bf0 <dim_enter_array@@Base+0x1720>
   16300:	movw	r0, #480	; 0x1e0
   16304:	movt	r0, #3
   16308:	add	r1, r0, #800	; 0x320
   1630c:	ldr	r2, [fp, #-8]
   16310:	movw	r3, #80	; 0x50
   16314:	mul	r2, r2, r3
   16318:	add	r1, r1, r2
   1631c:	str	r1, [fp, #-20]	; 0xffffffec
   16320:	ldr	r1, [fp, #-20]	; 0xffffffec
   16324:	ldr	r1, [r1]
   16328:	str	r1, [fp, #-24]	; 0xffffffe8
   1632c:	ldr	r1, [fp, #-8]
   16330:	ldr	r0, [r0, #3360]	; 0xd20
   16334:	cmp	r1, r0
   16338:	bne	1657c <dim_enter_array@@Base+0x10ac>
   1633c:	movw	r0, #480	; 0x1e0
   16340:	movt	r0, #3
   16344:	add	r0, r0, #144	; 0x90
   16348:	sub	r2, fp, #56	; 0x38
   1634c:	sub	r1, fp, #60	; 0x3c
   16350:	bl	128d0 <coda_cursor_get_array_dim@plt>
   16354:	cmp	r0, #0
   16358:	beq	16368 <dim_enter_array@@Base+0xe98>
   1635c:	movw	r0, #44732	; 0xaebc
   16360:	movt	r0, #1
   16364:	blx	r0
   16368:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1636c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16370:	ldr	r1, [r1, #4]
   16374:	cmp	r0, r1
   16378:	bne	16380 <dim_enter_array@@Base+0xeb0>
   1637c:	b	163a0 <dim_enter_array@@Base+0xed0>
   16380:	movw	r0, #57099	; 0xdf0b
   16384:	movt	r0, #1
   16388:	movw	r1, #56822	; 0xddf6
   1638c:	movt	r1, #1
   16390:	movw	r2, #125	; 0x7d
   16394:	movw	r3, #57132	; 0xdf2c
   16398:	movt	r3, #1
   1639c:	bl	129f0 <__assert_fail@plt>
   163a0:	movw	r0, #0
   163a4:	str	r0, [fp, #-64]	; 0xffffffc0
   163a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   163ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   163b0:	ldr	r1, [r1, #4]
   163b4:	cmp	r0, r1
   163b8:	bge	16578 <dim_enter_array@@Base+0x10a8>
   163bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   163c0:	add	r0, r0, #8
   163c4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   163c8:	add	r0, r0, r1, lsl #2
   163cc:	ldr	r0, [r0]
   163d0:	cmn	r0, #1
   163d4:	bne	16564 <dim_enter_array@@Base+0x1094>
   163d8:	movw	r0, #4264	; 0x10a8
   163dc:	movt	r0, #3
   163e0:	add	r0, r0, #4
   163e4:	ldr	r1, [fp, #-64]	; 0xffffffc0
   163e8:	sub	r2, fp, #56	; 0x38
   163ec:	ldr	r2, [r2, r1, lsl #2]
   163f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   163f4:	add	r1, r3, r1
   163f8:	movw	r3, #4264	; 0x10a8
   163fc:	movt	r3, #3
   16400:	add	r1, r3, r1, lsl #2
   16404:	ldr	r1, [r1, #108]	; 0x6c
   16408:	ldr	ip, [fp, #-20]	; 0xffffffec
   1640c:	ldr	ip, [ip, #44]	; 0x2c
   16410:	str	r2, [r1, ip, lsl #2]
   16414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16418:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1641c:	add	r1, r1, r2
   16420:	add	r1, r3, r1, lsl #2
   16424:	add	r1, r1, #4
   16428:	ldr	r1, [r1]
   1642c:	cmn	r1, #1
   16430:	str	r0, [sp, #84]	; 0x54
   16434:	bne	1648c <dim_enter_array@@Base+0xfbc>
   16438:	movw	r0, #4264	; 0x10a8
   1643c:	movt	r0, #3
   16440:	add	r0, r0, #36	; 0x24
   16444:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16448:	sub	r2, fp, #56	; 0x38
   1644c:	ldr	r3, [r2, r1, lsl #2]
   16450:	ldr	ip, [fp, #-24]	; 0xffffffe8
   16454:	add	r1, ip, r1
   16458:	movw	ip, #4264	; 0x10a8
   1645c:	movt	ip, #3
   16460:	add	r1, ip, r1, lsl #2
   16464:	str	r3, [r1, #4]
   16468:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1646c:	ldr	r2, [r2, r1, lsl #2]
   16470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16474:	add	r1, r3, r1
   16478:	add	r1, ip, r1, lsl #2
   1647c:	add	r1, r1, #36	; 0x24
   16480:	str	r2, [r1]
   16484:	str	r0, [sp, #80]	; 0x50
   16488:	b	16560 <dim_enter_array@@Base+0x1090>
   1648c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16490:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16494:	add	r0, r0, r1
   16498:	movw	r2, #4264	; 0x10a8
   1649c:	movt	r2, #3
   164a0:	add	r0, r2, r0, lsl #2
   164a4:	ldr	r0, [r0, #4]
   164a8:	sub	r2, fp, #56	; 0x38
   164ac:	add	r1, r2, r1, lsl #2
   164b0:	ldr	r1, [r1]
   164b4:	cmp	r0, r1
   164b8:	bge	164f4 <dim_enter_array@@Base+0x1024>
   164bc:	movw	r0, #4264	; 0x10a8
   164c0:	movt	r0, #3
   164c4:	add	r0, r0, #4
   164c8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   164cc:	sub	r2, fp, #56	; 0x38
   164d0:	ldr	r2, [r2, r1, lsl #2]
   164d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   164d8:	add	r1, r3, r1
   164dc:	movw	r3, #4264	; 0x10a8
   164e0:	movt	r3, #3
   164e4:	add	r1, r3, r1, lsl #2
   164e8:	add	r1, r1, #4
   164ec:	str	r2, [r1]
   164f0:	str	r0, [sp, #76]	; 0x4c
   164f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   164fc:	add	r0, r0, r1
   16500:	movw	r2, #4264	; 0x10a8
   16504:	movt	r2, #3
   16508:	add	r0, r2, r0, lsl #2
   1650c:	ldr	r0, [r0, #36]	; 0x24
   16510:	sub	r2, fp, #56	; 0x38
   16514:	add	r1, r2, r1, lsl #2
   16518:	ldr	r1, [r1]
   1651c:	cmp	r0, r1
   16520:	ble	1655c <dim_enter_array@@Base+0x108c>
   16524:	movw	r0, #4264	; 0x10a8
   16528:	movt	r0, #3
   1652c:	add	r0, r0, #36	; 0x24
   16530:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16534:	sub	r2, fp, #56	; 0x38
   16538:	ldr	r2, [r2, r1, lsl #2]
   1653c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16540:	add	r1, r3, r1
   16544:	movw	r3, #4264	; 0x10a8
   16548:	movt	r3, #3
   1654c:	add	r1, r3, r1, lsl #2
   16550:	add	r1, r1, #36	; 0x24
   16554:	str	r2, [r1]
   16558:	str	r0, [sp, #72]	; 0x48
   1655c:	b	16560 <dim_enter_array@@Base+0x1090>
   16560:	b	16564 <dim_enter_array@@Base+0x1094>
   16564:	b	16568 <dim_enter_array@@Base+0x1098>
   16568:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1656c:	add	r0, r0, #1
   16570:	str	r0, [fp, #-64]	; 0xffffffc0
   16574:	b	163a8 <dim_enter_array@@Base+0xed8>
   16578:	b	16794 <dim_enter_array@@Base+0x12c4>
   1657c:	ldr	r0, [fp, #-8]
   16580:	cmp	r0, #0
   16584:	bne	16594 <dim_enter_array@@Base+0x10c4>
   16588:	ldr	r0, [fp, #-20]	; 0xffffffec
   1658c:	movw	r1, #0
   16590:	str	r1, [r0, #44]	; 0x2c
   16594:	movw	r0, #480	; 0x1e0
   16598:	movt	r0, #3
   1659c:	add	r0, r0, #800	; 0x320
   165a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   165a4:	ldr	r1, [r1, #44]	; 0x2c
   165a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   165ac:	ldr	r2, [r2, #40]	; 0x28
   165b0:	mul	r1, r1, r2
   165b4:	ldr	r2, [fp, #-8]
   165b8:	add	r2, r2, #1
   165bc:	movw	r3, #80	; 0x50
   165c0:	mul	r2, r2, r3
   165c4:	add	r0, r0, r2
   165c8:	str	r1, [r0, #44]	; 0x2c
   165cc:	movw	r0, #1
   165d0:	str	r0, [fp, #-68]	; 0xffffffbc
   165d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165d8:	str	r0, [fp, #-72]	; 0xffffffb8
   165dc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   165e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   165e8:	ldr	r2, [r2, #4]
   165ec:	add	r1, r1, r2
   165f0:	cmp	r0, r1
   165f4:	bge	166a4 <dim_enter_array@@Base+0x11d4>
   165f8:	movw	r0, #4264	; 0x10a8
   165fc:	movt	r0, #3
   16600:	add	r0, r0, #72	; 0x48
   16604:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16608:	movw	r2, #4264	; 0x10a8
   1660c:	movt	r2, #3
   16610:	add	r1, r2, r1, lsl #2
   16614:	add	r1, r1, #72	; 0x48
   16618:	ldr	r1, [r1]
   1661c:	cmp	r1, #0
   16620:	str	r0, [sp, #68]	; 0x44
   16624:	beq	1665c <dim_enter_array@@Base+0x118c>
   16628:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1662c:	movw	r1, #4264	; 0x10a8
   16630:	movt	r1, #3
   16634:	add	r0, r1, r0, lsl #2
   16638:	ldr	r0, [r0, #108]	; 0x6c
   1663c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16640:	ldr	r1, [r1, #44]	; 0x2c
   16644:	add	r0, r0, r1, lsl #2
   16648:	ldr	r0, [r0]
   1664c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16650:	mul	r0, r1, r0
   16654:	str	r0, [fp, #-68]	; 0xffffffbc
   16658:	b	16690 <dim_enter_array@@Base+0x11c0>
   1665c:	movw	r0, #4264	; 0x10a8
   16660:	movt	r0, #3
   16664:	add	r0, r0, #4
   16668:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1666c:	movw	r2, #4264	; 0x10a8
   16670:	movt	r2, #3
   16674:	add	r1, r2, r1, lsl #2
   16678:	add	r1, r1, #4
   1667c:	ldr	r1, [r1]
   16680:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16684:	mul	r1, r2, r1
   16688:	str	r1, [fp, #-68]	; 0xffffffbc
   1668c:	str	r0, [sp, #64]	; 0x40
   16690:	b	16694 <dim_enter_array@@Base+0x11c4>
   16694:	ldr	r0, [fp, #-72]	; 0xffffffb8
   16698:	add	r0, r0, #1
   1669c:	str	r0, [fp, #-72]	; 0xffffffb8
   166a0:	b	165dc <dim_enter_array@@Base+0x110c>
   166a4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   166a8:	cmp	r0, #0
   166ac:	ble	16790 <dim_enter_array@@Base+0x12c0>
   166b0:	movw	r0, #480	; 0x1e0
   166b4:	movt	r0, #3
   166b8:	add	r0, r0, #144	; 0x90
   166bc:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   166c0:	cmp	r0, #0
   166c4:	beq	166d4 <dim_enter_array@@Base+0x1204>
   166c8:	movw	r0, #44732	; 0xaebc
   166cc:	movt	r0, #1
   166d0:	blx	r0
   166d4:	movw	r0, #0
   166d8:	str	r0, [fp, #-76]	; 0xffffffb4
   166dc:	ldr	r0, [fp, #-76]	; 0xffffffb4
   166e0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   166e4:	cmp	r0, r1
   166e8:	bge	1677c <dim_enter_array@@Base+0x12ac>
   166ec:	ldr	r0, [fp, #-4]
   166f0:	add	r0, r0, #1
   166f4:	ldr	r1, [fp, #-8]
   166f8:	add	r1, r1, #1
   166fc:	ldr	r2, [fp, #-12]
   16700:	bl	16284 <dim_enter_array@@Base+0xdb4>
   16704:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16708:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1670c:	sub	r1, r1, #1
   16710:	cmp	r0, r1
   16714:	bge	16768 <dim_enter_array@@Base+0x1298>
   16718:	movw	r0, #480	; 0x1e0
   1671c:	movt	r0, #3
   16720:	add	r0, r0, #144	; 0x90
   16724:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   16728:	cmp	r0, #0
   1672c:	beq	1673c <dim_enter_array@@Base+0x126c>
   16730:	movw	r0, #44732	; 0xaebc
   16734:	movt	r0, #1
   16738:	blx	r0
   1673c:	movw	r0, #480	; 0x1e0
   16740:	movt	r0, #3
   16744:	add	r0, r0, #800	; 0x320
   16748:	ldr	r1, [fp, #-8]
   1674c:	add	r1, r1, #1
   16750:	movw	r2, #80	; 0x50
   16754:	mul	r1, r1, r2
   16758:	add	r0, r0, r1
   1675c:	ldr	r1, [r0, #44]	; 0x2c
   16760:	add	r1, r1, #1
   16764:	str	r1, [r0, #44]	; 0x2c
   16768:	b	1676c <dim_enter_array@@Base+0x129c>
   1676c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   16770:	add	r0, r0, #1
   16774:	str	r0, [fp, #-76]	; 0xffffffb4
   16778:	b	166dc <dim_enter_array@@Base+0x120c>
   1677c:	movw	r0, #480	; 0x1e0
   16780:	movt	r0, #3
   16784:	add	r0, r0, #144	; 0x90
   16788:	bl	127b0 <coda_cursor_goto_parent@plt>
   1678c:	str	r0, [sp, #60]	; 0x3c
   16790:	b	16794 <dim_enter_array@@Base+0x12c4>
   16794:	b	16c10 <dim_enter_array@@Base+0x1740>
   16798:	movw	r0, #480	; 0x1e0
   1679c:	movt	r0, #3
   167a0:	add	r1, r0, #144	; 0x90
   167a4:	movw	r2, #3492	; 0xda4
   167a8:	add	r0, r0, r2
   167ac:	ldr	r2, [fp, #-12]
   167b0:	movw	r3, #480	; 0x1e0
   167b4:	movt	r3, #3
   167b8:	add	r2, r3, r2, lsl #2
   167bc:	movw	r3, #3492	; 0xda4
   167c0:	add	r2, r2, r3
   167c4:	ldr	r2, [r2]
   167c8:	str	r0, [sp, #56]	; 0x38
   167cc:	mov	r0, r1
   167d0:	mov	r1, r2
   167d4:	sub	r2, fp, #80	; 0x50
   167d8:	bl	125f4 <coda_cursor_get_record_field_available_status@plt>
   167dc:	cmp	r0, #0
   167e0:	beq	167f0 <dim_enter_array@@Base+0x1320>
   167e4:	movw	r0, #44732	; 0xaebc
   167e8:	movt	r0, #1
   167ec:	blx	r0
   167f0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   167f4:	cmp	r0, #0
   167f8:	beq	16880 <dim_enter_array@@Base+0x13b0>
   167fc:	movw	r0, #480	; 0x1e0
   16800:	movt	r0, #3
   16804:	add	r1, r0, #144	; 0x90
   16808:	movw	r2, #3492	; 0xda4
   1680c:	add	r0, r0, r2
   16810:	ldr	r2, [fp, #-12]
   16814:	movw	r3, #480	; 0x1e0
   16818:	movt	r3, #3
   1681c:	add	r2, r3, r2, lsl #2
   16820:	movw	r3, #3492	; 0xda4
   16824:	add	r2, r2, r3
   16828:	ldr	r2, [r2]
   1682c:	str	r0, [sp, #52]	; 0x34
   16830:	mov	r0, r1
   16834:	mov	r1, r2
   16838:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   1683c:	cmp	r0, #0
   16840:	beq	16850 <dim_enter_array@@Base+0x1380>
   16844:	movw	r0, #44732	; 0xaebc
   16848:	movt	r0, #1
   1684c:	blx	r0
   16850:	ldr	r0, [fp, #-4]
   16854:	add	r0, r0, #1
   16858:	ldr	r1, [fp, #-8]
   1685c:	ldr	r2, [fp, #-12]
   16860:	add	r2, r2, #1
   16864:	bl	16284 <dim_enter_array@@Base+0xdb4>
   16868:	movw	r0, #480	; 0x1e0
   1686c:	movt	r0, #3
   16870:	add	r0, r0, #144	; 0x90
   16874:	bl	127b0 <coda_cursor_goto_parent@plt>
   16878:	str	r0, [sp, #48]	; 0x30
   1687c:	b	169c0 <dim_enter_array@@Base+0x14f0>
   16880:	movw	r0, #480	; 0x1e0
   16884:	movt	r0, #3
   16888:	add	r1, r0, #800	; 0x320
   1688c:	ldr	r0, [r0, #3360]	; 0xd20
   16890:	movw	r2, #80	; 0x50
   16894:	mul	r0, r0, r2
   16898:	add	r0, r1, r0
   1689c:	str	r0, [fp, #-84]	; 0xffffffac
   168a0:	ldr	r0, [fp, #-84]	; 0xffffffac
   168a4:	ldr	r0, [r0]
   168a8:	str	r0, [fp, #-88]	; 0xffffffa8
   168ac:	movw	r0, #0
   168b0:	str	r0, [fp, #-92]	; 0xffffffa4
   168b4:	ldr	r0, [fp, #-92]	; 0xffffffa4
   168b8:	ldr	r1, [fp, #-84]	; 0xffffffac
   168bc:	ldr	r1, [r1, #4]
   168c0:	cmp	r0, r1
   168c4:	bge	169bc <dim_enter_array@@Base+0x14ec>
   168c8:	ldr	r0, [fp, #-84]	; 0xffffffac
   168cc:	add	r0, r0, #8
   168d0:	ldr	r1, [fp, #-92]	; 0xffffffa4
   168d4:	add	r0, r0, r1, lsl #2
   168d8:	ldr	r0, [r0]
   168dc:	cmn	r0, #1
   168e0:	bne	169a8 <dim_enter_array@@Base+0x14d8>
   168e4:	movw	r0, #4264	; 0x10a8
   168e8:	movt	r0, #3
   168ec:	add	r0, r0, #4
   168f0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   168f4:	ldr	r2, [fp, #-92]	; 0xffffffa4
   168f8:	add	r1, r1, r2
   168fc:	movw	r2, #4264	; 0x10a8
   16900:	movt	r2, #3
   16904:	add	r1, r2, r1, lsl #2
   16908:	ldr	r1, [r1, #108]	; 0x6c
   1690c:	ldr	r3, [fp, #-84]	; 0xffffffac
   16910:	ldr	r3, [r3, #44]	; 0x2c
   16914:	mov	ip, #0
   16918:	str	ip, [r1, r3, lsl #2]
   1691c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16920:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16924:	add	r1, r1, r3
   16928:	add	r1, r2, r1, lsl #2
   1692c:	add	r1, r1, #4
   16930:	ldr	r1, [r1]
   16934:	cmn	r1, #1
   16938:	str	r0, [sp, #44]	; 0x2c
   1693c:	bne	16974 <dim_enter_array@@Base+0x14a4>
   16940:	movw	r0, #4264	; 0x10a8
   16944:	movt	r0, #3
   16948:	add	r0, r0, #4
   1694c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16950:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16954:	add	r1, r1, r2
   16958:	movw	r2, #4264	; 0x10a8
   1695c:	movt	r2, #3
   16960:	add	r1, r2, r1, lsl #2
   16964:	add	r1, r1, #4
   16968:	movw	r2, #0
   1696c:	str	r2, [r1]
   16970:	str	r0, [sp, #40]	; 0x28
   16974:	movw	r0, #4264	; 0x10a8
   16978:	movt	r0, #3
   1697c:	add	r0, r0, #36	; 0x24
   16980:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16984:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16988:	add	r1, r1, r2
   1698c:	movw	r2, #4264	; 0x10a8
   16990:	movt	r2, #3
   16994:	add	r1, r2, r1, lsl #2
   16998:	add	r1, r1, #36	; 0x24
   1699c:	movw	r2, #0
   169a0:	str	r2, [r1]
   169a4:	str	r0, [sp, #36]	; 0x24
   169a8:	b	169ac <dim_enter_array@@Base+0x14dc>
   169ac:	ldr	r0, [fp, #-92]	; 0xffffffa4
   169b0:	add	r0, r0, #1
   169b4:	str	r0, [fp, #-92]	; 0xffffffa4
   169b8:	b	168b4 <dim_enter_array@@Base+0x13e4>
   169bc:	b	169c0 <dim_enter_array@@Base+0x14f0>
   169c0:	b	16c10 <dim_enter_array@@Base+0x1740>
   169c4:	ldr	r0, [fp, #-8]
   169c8:	movw	r1, #480	; 0x1e0
   169cc:	movt	r1, #3
   169d0:	ldr	r1, [r1, #3360]	; 0xd20
   169d4:	cmp	r0, r1
   169d8:	bne	169e0 <dim_enter_array@@Base+0x1510>
   169dc:	b	16a00 <dim_enter_array@@Base+0x1530>
   169e0:	movw	r0, #57175	; 0xdf57
   169e4:	movt	r0, #1
   169e8:	movw	r1, #56822	; 0xddf6
   169ec:	movt	r1, #1
   169f0:	movw	r2, #252	; 0xfc
   169f4:	movw	r3, #57132	; 0xdf2c
   169f8:	movt	r3, #1
   169fc:	bl	129f0 <__assert_fail@plt>
   16a00:	ldr	r0, [fp, #-16]
   16a04:	cmp	r0, #4
   16a08:	bne	16a48 <dim_enter_array@@Base+0x1578>
   16a0c:	movw	r0, #480	; 0x1e0
   16a10:	movt	r0, #3
   16a14:	add	r0, r0, #144	; 0x90
   16a18:	add	r1, sp, #92	; 0x5c
   16a1c:	bl	127e0 <coda_cursor_get_string_length@plt>
   16a20:	cmp	r0, #0
   16a24:	beq	16a34 <dim_enter_array@@Base+0x1564>
   16a28:	movw	r0, #44732	; 0xaebc
   16a2c:	movt	r0, #1
   16a30:	blx	r0
   16a34:	ldr	r0, [sp, #92]	; 0x5c
   16a38:	asr	r1, r0, #31
   16a3c:	str	r0, [sp, #96]	; 0x60
   16a40:	str	r1, [sp, #100]	; 0x64
   16a44:	b	16a74 <dim_enter_array@@Base+0x15a4>
   16a48:	movw	r0, #480	; 0x1e0
   16a4c:	movt	r0, #3
   16a50:	add	r0, r0, #144	; 0x90
   16a54:	add	r1, sp, #96	; 0x60
   16a58:	bl	12588 <coda_cursor_get_byte_size@plt>
   16a5c:	cmp	r0, #0
   16a60:	beq	16a70 <dim_enter_array@@Base+0x15a0>
   16a64:	movw	r0, #44732	; 0xaebc
   16a68:	movt	r0, #1
   16a6c:	blx	r0
   16a70:	b	16a74 <dim_enter_array@@Base+0x15a4>
   16a74:	movw	r0, #4264	; 0x10a8
   16a78:	movt	r0, #3
   16a7c:	add	r0, r0, #4
   16a80:	ldr	r1, [fp, #-8]
   16a84:	add	r1, r1, r1, lsl #2
   16a88:	movw	r2, #480	; 0x1e0
   16a8c:	movt	r2, #3
   16a90:	add	r1, r2, r1, lsl #4
   16a94:	add	r1, r1, #800	; 0x320
   16a98:	str	r1, [fp, #-96]	; 0xffffffa0
   16a9c:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16aa0:	ldr	r1, [r1]
   16aa4:	str	r1, [fp, #-100]	; 0xffffff9c
   16aa8:	ldr	r1, [sp, #96]	; 0x60
   16aac:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16ab0:	movw	r3, #4264	; 0x10a8
   16ab4:	movt	r3, #3
   16ab8:	add	r2, r3, r2, lsl #2
   16abc:	ldr	r2, [r2, #108]	; 0x6c
   16ac0:	ldr	ip, [fp, #-96]	; 0xffffffa0
   16ac4:	ldr	ip, [ip, #44]	; 0x2c
   16ac8:	str	r1, [r2, ip, lsl #2]
   16acc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16ad0:	add	r1, r3, r1, lsl #2
   16ad4:	add	r1, r1, #4
   16ad8:	ldr	r1, [r1]
   16adc:	cmn	r1, #1
   16ae0:	str	r0, [sp, #32]
   16ae4:	bne	16b28 <dim_enter_array@@Base+0x1658>
   16ae8:	movw	r0, #4264	; 0x10a8
   16aec:	movt	r0, #3
   16af0:	add	r0, r0, #36	; 0x24
   16af4:	ldr	r1, [sp, #96]	; 0x60
   16af8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16afc:	movw	r3, #4264	; 0x10a8
   16b00:	movt	r3, #3
   16b04:	add	r2, r3, r2, lsl #2
   16b08:	str	r1, [r2, #4]
   16b0c:	ldr	r1, [sp, #96]	; 0x60
   16b10:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16b14:	add	r2, r3, r2, lsl #2
   16b18:	add	r2, r2, #36	; 0x24
   16b1c:	str	r1, [r2]
   16b20:	str	r0, [sp, #28]
   16b24:	b	16bec <dim_enter_array@@Base+0x171c>
   16b28:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16b2c:	movw	r1, #4264	; 0x10a8
   16b30:	movt	r1, #3
   16b34:	add	r0, r1, r0, lsl #2
   16b38:	ldr	r0, [r0, #4]
   16b3c:	ldr	r1, [sp, #96]	; 0x60
   16b40:	ldr	r2, [sp, #100]	; 0x64
   16b44:	subs	r1, r0, r1
   16b48:	rscs	r0, r2, r0, asr #31
   16b4c:	str	r1, [sp, #24]
   16b50:	str	r0, [sp, #20]
   16b54:	bge	16b88 <dim_enter_array@@Base+0x16b8>
   16b58:	b	16b5c <dim_enter_array@@Base+0x168c>
   16b5c:	movw	r0, #4264	; 0x10a8
   16b60:	movt	r0, #3
   16b64:	add	r0, r0, #4
   16b68:	ldr	r1, [sp, #96]	; 0x60
   16b6c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16b70:	movw	r3, #4264	; 0x10a8
   16b74:	movt	r3, #3
   16b78:	add	r2, r3, r2, lsl #2
   16b7c:	add	r2, r2, #4
   16b80:	str	r1, [r2]
   16b84:	str	r0, [sp, #16]
   16b88:	ldr	r0, [fp, #-100]	; 0xffffff9c
   16b8c:	movw	r1, #4264	; 0x10a8
   16b90:	movt	r1, #3
   16b94:	add	r0, r1, r0, lsl #2
   16b98:	ldr	r0, [r0, #36]	; 0x24
   16b9c:	ldr	r1, [sp, #96]	; 0x60
   16ba0:	ldr	r2, [sp, #100]	; 0x64
   16ba4:	subs	r1, r1, r0
   16ba8:	sbcs	r0, r2, r0, asr #31
   16bac:	str	r1, [sp, #12]
   16bb0:	str	r0, [sp, #8]
   16bb4:	bge	16be8 <dim_enter_array@@Base+0x1718>
   16bb8:	b	16bbc <dim_enter_array@@Base+0x16ec>
   16bbc:	movw	r0, #4264	; 0x10a8
   16bc0:	movt	r0, #3
   16bc4:	add	r0, r0, #36	; 0x24
   16bc8:	ldr	r1, [sp, #96]	; 0x60
   16bcc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16bd0:	movw	r3, #4264	; 0x10a8
   16bd4:	movt	r3, #3
   16bd8:	add	r2, r3, r2, lsl #2
   16bdc:	add	r2, r2, #36	; 0x24
   16be0:	str	r1, [r2]
   16be4:	str	r0, [sp, #4]
   16be8:	b	16bec <dim_enter_array@@Base+0x171c>
   16bec:	b	16c10 <dim_enter_array@@Base+0x1740>
   16bf0:	movw	r0, #56775	; 0xddc7
   16bf4:	movt	r0, #1
   16bf8:	movw	r1, #56822	; 0xddf6
   16bfc:	movt	r1, #1
   16c00:	movw	r2, #294	; 0x126
   16c04:	movw	r3, #57132	; 0xdf2c
   16c08:	movt	r3, #1
   16c0c:	bl	129f0 <__assert_fail@plt>
   16c10:	mov	sp, fp
   16c14:	pop	{fp, pc}

00016c18 <dim_leave_array@@Base>:
   16c18:	push	{fp, lr}
   16c1c:	mov	fp, sp
   16c20:	sub	sp, sp, #40	; 0x28
   16c24:	movw	r0, #480	; 0x1e0
   16c28:	movt	r0, #3
   16c2c:	ldr	r0, [r0, #3360]	; 0xd20
   16c30:	cmp	r0, #0
   16c34:	blt	16c3c <dim_leave_array@@Base+0x24>
   16c38:	b	16c5c <dim_leave_array@@Base+0x44>
   16c3c:	movw	r0, #57046	; 0xded6
   16c40:	movt	r0, #1
   16c44:	movw	r1, #56822	; 0xddf6
   16c48:	movt	r1, #1
   16c4c:	movw	r2, #579	; 0x243
   16c50:	movw	r3, #57076	; 0xdef4
   16c54:	movt	r3, #1
   16c58:	bl	129f0 <__assert_fail@plt>
   16c5c:	movw	r0, #480	; 0x1e0
   16c60:	movt	r0, #3
   16c64:	add	r1, r0, #800	; 0x320
   16c68:	ldr	r0, [r0, #3360]	; 0xd20
   16c6c:	movw	r2, #80	; 0x50
   16c70:	mul	r0, r0, r2
   16c74:	add	r0, r1, r0
   16c78:	str	r0, [fp, #-4]
   16c7c:	ldr	r0, [fp, #-4]
   16c80:	ldr	r0, [r0]
   16c84:	str	r0, [fp, #-8]
   16c88:	ldr	r0, [fp, #-4]
   16c8c:	ldr	r0, [r0, #4]
   16c90:	movw	r1, #4264	; 0x10a8
   16c94:	movt	r1, #3
   16c98:	ldr	r2, [r1]
   16c9c:	sub	r0, r2, r0
   16ca0:	str	r0, [r1]
   16ca4:	movw	r0, #0
   16ca8:	str	r0, [fp, #-12]
   16cac:	ldr	r0, [fp, #-12]
   16cb0:	ldr	r1, [fp, #-4]
   16cb4:	ldr	r1, [r1, #4]
   16cb8:	cmp	r0, r1
   16cbc:	bge	16d44 <dim_leave_array@@Base+0x12c>
   16cc0:	movw	r0, #4264	; 0x10a8
   16cc4:	movt	r0, #3
   16cc8:	add	r0, r0, #72	; 0x48
   16ccc:	ldr	r1, [fp, #-8]
   16cd0:	ldr	r2, [fp, #-12]
   16cd4:	add	r1, r1, r2
   16cd8:	movw	r2, #4264	; 0x10a8
   16cdc:	movt	r2, #3
   16ce0:	add	r1, r2, r1, lsl #2
   16ce4:	add	r1, r1, #72	; 0x48
   16ce8:	ldr	r1, [r1]
   16cec:	cmp	r1, #0
   16cf0:	str	r0, [fp, #-16]
   16cf4:	beq	16d30 <dim_leave_array@@Base+0x118>
   16cf8:	movw	r0, #4264	; 0x10a8
   16cfc:	movt	r0, #3
   16d00:	add	r0, r0, #108	; 0x6c
   16d04:	ldr	r1, [fp, #-8]
   16d08:	ldr	r2, [fp, #-12]
   16d0c:	add	r1, r1, r2
   16d10:	movw	r2, #4264	; 0x10a8
   16d14:	movt	r2, #3
   16d18:	add	r1, r2, r1, lsl #2
   16d1c:	add	r1, r1, #108	; 0x6c
   16d20:	ldr	r1, [r1]
   16d24:	str	r0, [sp, #20]
   16d28:	mov	r0, r1
   16d2c:	bl	12654 <free@plt>
   16d30:	b	16d34 <dim_leave_array@@Base+0x11c>
   16d34:	ldr	r0, [fp, #-12]
   16d38:	add	r0, r0, #1
   16d3c:	str	r0, [fp, #-12]
   16d40:	b	16cac <dim_leave_array@@Base+0x94>
   16d44:	movw	r0, #4264	; 0x10a8
   16d48:	movt	r0, #3
   16d4c:	movw	r1, #0
   16d50:	str	r1, [r0, #68]	; 0x44
   16d54:	mvn	r2, #0
   16d58:	str	r2, [r0, #104]	; 0x68
   16d5c:	str	r1, [fp, #-12]
   16d60:	ldr	r0, [fp, #-12]
   16d64:	movw	r1, #4264	; 0x10a8
   16d68:	movt	r1, #3
   16d6c:	ldr	r1, [r1]
   16d70:	cmp	r0, r1
   16d74:	bge	16dd4 <dim_leave_array@@Base+0x1bc>
   16d78:	movw	r0, #4264	; 0x10a8
   16d7c:	movt	r0, #3
   16d80:	add	r0, r0, #72	; 0x48
   16d84:	ldr	r1, [fp, #-12]
   16d88:	movw	r2, #4264	; 0x10a8
   16d8c:	movt	r2, #3
   16d90:	add	r1, r2, r1, lsl #2
   16d94:	add	r1, r1, #72	; 0x48
   16d98:	ldr	r1, [r1]
   16d9c:	cmp	r1, #0
   16da0:	str	r0, [sp, #16]
   16da4:	beq	16dc0 <dim_leave_array@@Base+0x1a8>
   16da8:	movw	r0, #1
   16dac:	movw	r1, #4264	; 0x10a8
   16db0:	movt	r1, #3
   16db4:	str	r0, [r1, #68]	; 0x44
   16db8:	ldr	r0, [fp, #-12]
   16dbc:	str	r0, [r1, #104]	; 0x68
   16dc0:	b	16dc4 <dim_leave_array@@Base+0x1ac>
   16dc4:	ldr	r0, [fp, #-12]
   16dc8:	add	r0, r0, #1
   16dcc:	str	r0, [fp, #-12]
   16dd0:	b	16d60 <dim_leave_array@@Base+0x148>
   16dd4:	ldr	r0, [fp, #-8]
   16dd8:	ldr	r1, [fp, #-4]
   16ddc:	ldr	r1, [r1, #4]
   16de0:	add	r0, r0, r1
   16de4:	movw	r1, #4264	; 0x10a8
   16de8:	movt	r1, #3
   16dec:	add	r0, r1, r0, lsl #3
   16df0:	ldr	r1, [r0, #296]	; 0x128
   16df4:	ldr	r0, [r0, #300]	; 0x12c
   16df8:	subs	r1, r1, #1
   16dfc:	sbcs	r0, r0, #0
   16e00:	str	r1, [sp, #12]
   16e04:	str	r0, [sp, #8]
   16e08:	blt	16e8c <dim_leave_array@@Base+0x274>
   16e0c:	b	16e10 <dim_leave_array@@Base+0x1f8>
   16e10:	ldr	r0, [fp, #-8]
   16e14:	sub	r0, r0, #1
   16e18:	str	r0, [fp, #-12]
   16e1c:	ldr	r0, [fp, #-12]
   16e20:	cmp	r0, #0
   16e24:	blt	16e88 <dim_leave_array@@Base+0x270>
   16e28:	ldr	r0, [fp, #-8]
   16e2c:	movw	r1, #4264	; 0x10a8
   16e30:	movt	r1, #3
   16e34:	add	r1, r1, #176	; 0xb0
   16e38:	mov	r2, r1
   16e3c:	ldr	r0, [r2, r0, lsl #3]!
   16e40:	ldr	r3, [r2, #4]
   16e44:	ldr	r2, [fp, #-12]
   16e48:	ldr	r2, [r1, r2, lsl #3]!
   16e4c:	ldr	ip, [r1, #4]
   16e50:	str	r0, [sp, #4]
   16e54:	mov	r0, r2
   16e58:	str	r1, [sp]
   16e5c:	mov	r1, ip
   16e60:	ldr	r2, [sp, #4]
   16e64:	bl	1d91c <main@@Base+0x29f4>
   16e68:	ldr	r2, [sp]
   16e6c:	str	r1, [r2, #4]
   16e70:	str	r0, [r2]
   16e74:	ldr	r0, [fp, #-12]
   16e78:	mvn	r1, #0
   16e7c:	add	r0, r0, r1
   16e80:	str	r0, [fp, #-12]
   16e84:	b	16e1c <dim_leave_array@@Base+0x204>
   16e88:	b	16e8c <dim_leave_array@@Base+0x274>
   16e8c:	mov	sp, fp
   16e90:	pop	{fp, pc}

00016e94 <dim_record_field_available@@Base>:
   16e94:	push	{fp, lr}
   16e98:	mov	fp, sp
   16e9c:	sub	sp, sp, #8
   16ea0:	movw	r0, #0
   16ea4:	str	r0, [sp, #4]
   16ea8:	ldr	r1, [sp, #4]
   16eac:	ldr	r2, [sp, #4]
   16eb0:	bl	16ebc <dim_record_field_available@@Base+0x28>
   16eb4:	mov	sp, fp
   16eb8:	pop	{fp, pc}
   16ebc:	push	{fp, lr}
   16ec0:	mov	fp, sp
   16ec4:	sub	sp, sp, #80	; 0x50
   16ec8:	movw	r3, #480	; 0x1e0
   16ecc:	movt	r3, #3
   16ed0:	add	r3, r3, #144	; 0x90
   16ed4:	str	r0, [fp, #-8]
   16ed8:	str	r1, [fp, #-12]
   16edc:	str	r2, [fp, #-16]
   16ee0:	mov	r0, r3
   16ee4:	sub	r1, fp, #20
   16ee8:	bl	126e4 <coda_cursor_get_type_class@plt>
   16eec:	cmp	r0, #0
   16ef0:	beq	16f00 <dim_record_field_available@@Base+0x6c>
   16ef4:	movw	r0, #44732	; 0xaebc
   16ef8:	movt	r0, #1
   16efc:	blx	r0
   16f00:	ldr	r0, [fp, #-20]	; 0xffffffec
   16f04:	cmp	r0, #0
   16f08:	str	r0, [sp, #32]
   16f0c:	beq	171dc <dim_record_field_available@@Base+0x348>
   16f10:	b	16f14 <dim_record_field_available@@Base+0x80>
   16f14:	ldr	r0, [sp, #32]
   16f18:	cmp	r0, #1
   16f1c:	bne	17314 <dim_record_field_available@@Base+0x480>
   16f20:	b	16f24 <dim_record_field_available@@Base+0x90>
   16f24:	movw	r0, #480	; 0x1e0
   16f28:	movt	r0, #3
   16f2c:	add	r1, r0, #800	; 0x320
   16f30:	ldr	r2, [fp, #-12]
   16f34:	movw	r3, #80	; 0x50
   16f38:	mul	r2, r2, r3
   16f3c:	add	r1, r1, r2
   16f40:	str	r1, [fp, #-24]	; 0xffffffe8
   16f44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f48:	ldr	r1, [r1]
   16f4c:	str	r1, [fp, #-32]	; 0xffffffe0
   16f50:	ldr	r1, [fp, #-12]
   16f54:	ldr	r0, [r0, #3360]	; 0xd20
   16f58:	cmp	r1, r0
   16f5c:	bge	16f64 <dim_record_field_available@@Base+0xd0>
   16f60:	b	16f84 <dim_record_field_available@@Base+0xf0>
   16f64:	movw	r0, #57215	; 0xdf7f
   16f68:	movt	r0, #1
   16f6c:	movw	r1, #56822	; 0xddf6
   16f70:	movt	r1, #1
   16f74:	movw	r2, #638	; 0x27e
   16f78:	movw	r3, #57254	; 0xdfa6
   16f7c:	movt	r3, #1
   16f80:	bl	129f0 <__assert_fail@plt>
   16f84:	ldr	r0, [fp, #-12]
   16f88:	cmp	r0, #0
   16f8c:	bne	16f9c <dim_record_field_available@@Base+0x108>
   16f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f94:	movw	r1, #0
   16f98:	str	r1, [r0, #44]	; 0x2c
   16f9c:	ldr	r0, [fp, #-12]
   16fa0:	movw	r1, #480	; 0x1e0
   16fa4:	movt	r1, #3
   16fa8:	ldr	r1, [r1, #3360]	; 0xd20
   16fac:	cmp	r0, r1
   16fb0:	bge	16fec <dim_record_field_available@@Base+0x158>
   16fb4:	movw	r0, #480	; 0x1e0
   16fb8:	movt	r0, #3
   16fbc:	add	r0, r0, #800	; 0x320
   16fc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fc4:	ldr	r1, [r1, #44]	; 0x2c
   16fc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16fcc:	ldr	r2, [r2, #40]	; 0x28
   16fd0:	mul	r1, r1, r2
   16fd4:	ldr	r2, [fp, #-12]
   16fd8:	add	r2, r2, #1
   16fdc:	movw	r3, #80	; 0x50
   16fe0:	mul	r2, r2, r3
   16fe4:	add	r0, r0, r2
   16fe8:	str	r1, [r0, #44]	; 0x2c
   16fec:	movw	r0, #1
   16ff0:	str	r0, [fp, #-28]	; 0xffffffe4
   16ff4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ff8:	str	r0, [fp, #-36]	; 0xffffffdc
   16ffc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17000:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17004:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17008:	ldr	r2, [r2, #4]
   1700c:	add	r1, r1, r2
   17010:	cmp	r0, r1
   17014:	bge	170c4 <dim_record_field_available@@Base+0x230>
   17018:	movw	r0, #4264	; 0x10a8
   1701c:	movt	r0, #3
   17020:	add	r0, r0, #72	; 0x48
   17024:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17028:	movw	r2, #4264	; 0x10a8
   1702c:	movt	r2, #3
   17030:	add	r1, r2, r1, lsl #2
   17034:	add	r1, r1, #72	; 0x48
   17038:	ldr	r1, [r1]
   1703c:	cmp	r1, #0
   17040:	str	r0, [sp, #28]
   17044:	beq	1707c <dim_record_field_available@@Base+0x1e8>
   17048:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1704c:	movw	r1, #4264	; 0x10a8
   17050:	movt	r1, #3
   17054:	add	r0, r1, r0, lsl #2
   17058:	ldr	r0, [r0, #108]	; 0x6c
   1705c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17060:	ldr	r1, [r1, #44]	; 0x2c
   17064:	add	r0, r0, r1, lsl #2
   17068:	ldr	r0, [r0]
   1706c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17070:	mul	r0, r1, r0
   17074:	str	r0, [fp, #-28]	; 0xffffffe4
   17078:	b	170b0 <dim_record_field_available@@Base+0x21c>
   1707c:	movw	r0, #4264	; 0x10a8
   17080:	movt	r0, #3
   17084:	add	r0, r0, #4
   17088:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1708c:	movw	r2, #4264	; 0x10a8
   17090:	movt	r2, #3
   17094:	add	r1, r2, r1, lsl #2
   17098:	add	r1, r1, #4
   1709c:	ldr	r1, [r1]
   170a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   170a4:	mul	r1, r2, r1
   170a8:	str	r1, [fp, #-28]	; 0xffffffe4
   170ac:	str	r0, [sp, #24]
   170b0:	b	170b4 <dim_record_field_available@@Base+0x220>
   170b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   170b8:	add	r0, r0, #1
   170bc:	str	r0, [fp, #-36]	; 0xffffffdc
   170c0:	b	16ffc <dim_record_field_available@@Base+0x168>
   170c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   170c8:	cmp	r0, #0
   170cc:	ble	171d8 <dim_record_field_available@@Base+0x344>
   170d0:	movw	r0, #480	; 0x1e0
   170d4:	movt	r0, #3
   170d8:	add	r0, r0, #144	; 0x90
   170dc:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   170e0:	cmp	r0, #0
   170e4:	beq	170f4 <dim_record_field_available@@Base+0x260>
   170e8:	movw	r0, #44732	; 0xaebc
   170ec:	movt	r0, #1
   170f0:	blx	r0
   170f4:	movw	r0, #0
   170f8:	str	r0, [sp, #40]	; 0x28
   170fc:	ldr	r0, [sp, #40]	; 0x28
   17100:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17104:	cmp	r0, r1
   17108:	bge	171c4 <dim_record_field_available@@Base+0x330>
   1710c:	ldr	r0, [fp, #-8]
   17110:	add	r0, r0, #1
   17114:	ldr	r1, [fp, #-12]
   17118:	add	r1, r1, #1
   1711c:	ldr	r2, [fp, #-16]
   17120:	bl	16ebc <dim_record_field_available@@Base+0x28>
   17124:	cmp	r0, #0
   17128:	beq	1714c <dim_record_field_available@@Base+0x2b8>
   1712c:	movw	r0, #480	; 0x1e0
   17130:	movt	r0, #3
   17134:	add	r0, r0, #144	; 0x90
   17138:	bl	127b0 <coda_cursor_goto_parent@plt>
   1713c:	movw	lr, #1
   17140:	str	lr, [fp, #-4]
   17144:	str	r0, [sp, #20]
   17148:	b	1733c <dim_record_field_available@@Base+0x4a8>
   1714c:	ldr	r0, [sp, #40]	; 0x28
   17150:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17154:	sub	r1, r1, #1
   17158:	cmp	r0, r1
   1715c:	bge	171b0 <dim_record_field_available@@Base+0x31c>
   17160:	movw	r0, #480	; 0x1e0
   17164:	movt	r0, #3
   17168:	add	r0, r0, #144	; 0x90
   1716c:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   17170:	cmp	r0, #0
   17174:	beq	17184 <dim_record_field_available@@Base+0x2f0>
   17178:	movw	r0, #44732	; 0xaebc
   1717c:	movt	r0, #1
   17180:	blx	r0
   17184:	movw	r0, #480	; 0x1e0
   17188:	movt	r0, #3
   1718c:	add	r0, r0, #800	; 0x320
   17190:	ldr	r1, [fp, #-12]
   17194:	add	r1, r1, #1
   17198:	movw	r2, #80	; 0x50
   1719c:	mul	r1, r1, r2
   171a0:	add	r0, r0, r1
   171a4:	ldr	r1, [r0, #44]	; 0x2c
   171a8:	add	r1, r1, #1
   171ac:	str	r1, [r0, #44]	; 0x2c
   171b0:	b	171b4 <dim_record_field_available@@Base+0x320>
   171b4:	ldr	r0, [sp, #40]	; 0x28
   171b8:	add	r0, r0, #1
   171bc:	str	r0, [sp, #40]	; 0x28
   171c0:	b	170fc <dim_record_field_available@@Base+0x268>
   171c4:	movw	r0, #480	; 0x1e0
   171c8:	movt	r0, #3
   171cc:	add	r0, r0, #144	; 0x90
   171d0:	bl	127b0 <coda_cursor_goto_parent@plt>
   171d4:	str	r0, [sp, #16]
   171d8:	b	17334 <dim_record_field_available@@Base+0x4a0>
   171dc:	movw	r0, #480	; 0x1e0
   171e0:	movt	r0, #3
   171e4:	add	r1, r0, #144	; 0x90
   171e8:	movw	r2, #3492	; 0xda4
   171ec:	add	r0, r0, r2
   171f0:	ldr	r2, [fp, #-16]
   171f4:	movw	r3, #480	; 0x1e0
   171f8:	movt	r3, #3
   171fc:	add	r2, r3, r2, lsl #2
   17200:	movw	r3, #3492	; 0xda4
   17204:	add	r2, r2, r3
   17208:	ldr	r2, [r2]
   1720c:	str	r0, [sp, #12]
   17210:	mov	r0, r1
   17214:	mov	r1, r2
   17218:	add	r2, sp, #36	; 0x24
   1721c:	bl	125f4 <coda_cursor_get_record_field_available_status@plt>
   17220:	cmp	r0, #0
   17224:	beq	17234 <dim_record_field_available@@Base+0x3a0>
   17228:	movw	r0, #44732	; 0xaebc
   1722c:	movt	r0, #1
   17230:	blx	r0
   17234:	ldr	r0, [sp, #36]	; 0x24
   17238:	cmp	r0, #0
   1723c:	beq	17310 <dim_record_field_available@@Base+0x47c>
   17240:	ldr	r0, [fp, #-16]
   17244:	movw	r1, #480	; 0x1e0
   17248:	movt	r1, #3
   1724c:	ldr	r1, [r1, #3748]	; 0xea4
   17250:	sub	r1, r1, #1
   17254:	cmp	r0, r1
   17258:	bne	17268 <dim_record_field_available@@Base+0x3d4>
   1725c:	movw	r0, #1
   17260:	str	r0, [fp, #-4]
   17264:	b	1733c <dim_record_field_available@@Base+0x4a8>
   17268:	movw	r0, #480	; 0x1e0
   1726c:	movt	r0, #3
   17270:	add	r1, r0, #144	; 0x90
   17274:	movw	r2, #3492	; 0xda4
   17278:	add	r0, r0, r2
   1727c:	ldr	r2, [fp, #-16]
   17280:	movw	r3, #480	; 0x1e0
   17284:	movt	r3, #3
   17288:	add	r2, r3, r2, lsl #2
   1728c:	movw	r3, #3492	; 0xda4
   17290:	add	r2, r2, r3
   17294:	ldr	r2, [r2]
   17298:	str	r0, [sp, #8]
   1729c:	mov	r0, r1
   172a0:	mov	r1, r2
   172a4:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   172a8:	cmp	r0, #0
   172ac:	beq	172bc <dim_record_field_available@@Base+0x428>
   172b0:	movw	r0, #44732	; 0xaebc
   172b4:	movt	r0, #1
   172b8:	blx	r0
   172bc:	ldr	r0, [fp, #-8]
   172c0:	add	r0, r0, #1
   172c4:	ldr	r1, [fp, #-12]
   172c8:	ldr	r2, [fp, #-16]
   172cc:	add	r2, r2, #1
   172d0:	bl	16ebc <dim_record_field_available@@Base+0x28>
   172d4:	movw	r1, #480	; 0x1e0
   172d8:	movt	r1, #3
   172dc:	add	r1, r1, #144	; 0x90
   172e0:	str	r0, [sp, #36]	; 0x24
   172e4:	mov	r0, r1
   172e8:	bl	127b0 <coda_cursor_goto_parent@plt>
   172ec:	ldr	r1, [sp, #36]	; 0x24
   172f0:	cmp	r1, #0
   172f4:	str	r0, [sp, #4]
   172f8:	beq	17308 <dim_record_field_available@@Base+0x474>
   172fc:	movw	r0, #1
   17300:	str	r0, [fp, #-4]
   17304:	b	1733c <dim_record_field_available@@Base+0x4a8>
   17308:	b	1730c <dim_record_field_available@@Base+0x478>
   1730c:	b	17310 <dim_record_field_available@@Base+0x47c>
   17310:	b	17334 <dim_record_field_available@@Base+0x4a0>
   17314:	movw	r0, #56775	; 0xddc7
   17318:	movt	r0, #1
   1731c:	movw	r1, #56822	; 0xddf6
   17320:	movt	r1, #1
   17324:	movw	r2, #729	; 0x2d9
   17328:	movw	r3, #57254	; 0xdfa6
   1732c:	movt	r3, #1
   17330:	bl	129f0 <__assert_fail@plt>
   17334:	movw	r0, #0
   17338:	str	r0, [fp, #-4]
   1733c:	ldr	r0, [fp, #-4]
   17340:	mov	sp, fp
   17344:	pop	{fp, pc}

00017348 <codadump_filter_create@@Base>:
   17348:	push	{fp, lr}
   1734c:	mov	fp, sp
   17350:	sub	sp, sp, #8
   17354:	str	r0, [sp, #4]
   17358:	movw	r0, #0
   1735c:	str	r0, [sp]
   17360:	ldr	r0, [sp, #4]
   17364:	mov	r1, sp
   17368:	bl	17378 <codadump_filter_create@@Base+0x30>
   1736c:	ldr	r0, [sp]
   17370:	mov	sp, fp
   17374:	pop	{fp, pc}
   17378:	push	{fp, lr}
   1737c:	mov	fp, sp
   17380:	sub	sp, sp, #16
   17384:	str	r0, [fp, #-4]
   17388:	str	r1, [sp, #8]
   1738c:	movw	r0, #0
   17390:	str	r0, [sp, #4]
   17394:	ldr	r1, [fp, #-4]
   17398:	str	r1, [sp]
   1739c:	ldr	r1, [fp, #-4]
   173a0:	cmp	r1, r0
   173a4:	bne	173ac <codadump_filter_create@@Base+0x64>
   173a8:	b	17404 <codadump_filter_create@@Base+0xbc>
   173ac:	b	173b0 <codadump_filter_create@@Base+0x68>
   173b0:	ldr	r0, [sp]
   173b4:	ldrb	r0, [r0]
   173b8:	cmp	r0, #0
   173bc:	beq	17404 <codadump_filter_create@@Base+0xbc>
   173c0:	ldr	r0, [sp]
   173c4:	add	r1, sp, #4
   173c8:	mov	r2, sp
   173cc:	bl	17608 <codadump_filter_get_next_filter@@Base+0x54>
   173d0:	ldr	r0, [sp, #4]
   173d4:	movw	r1, #0
   173d8:	cmp	r0, r1
   173dc:	bne	173ec <codadump_filter_create@@Base+0xa4>
   173e0:	ldr	r0, [sp, #8]
   173e4:	bl	1740c <codadump_filter_remove@@Base>
   173e8:	b	17404 <codadump_filter_create@@Base+0xbc>
   173ec:	ldr	r0, [sp, #8]
   173f0:	ldr	r1, [sp, #4]
   173f4:	bl	17a68 <codadump_filter_get_next_filter@@Base+0x4b4>
   173f8:	movw	r0, #0
   173fc:	str	r0, [sp, #4]
   17400:	b	173b0 <codadump_filter_create@@Base+0x68>
   17404:	mov	sp, fp
   17408:	pop	{fp, pc}

0001740c <codadump_filter_remove@@Base>:
   1740c:	push	{fp, lr}
   17410:	mov	fp, sp
   17414:	sub	sp, sp, #8
   17418:	str	r0, [sp, #4]
   1741c:	ldr	r0, [sp, #4]
   17420:	movw	r1, #0
   17424:	cmp	r0, r1
   17428:	beq	17430 <codadump_filter_remove@@Base+0x24>
   1742c:	b	17450 <codadump_filter_remove@@Base+0x44>
   17430:	movw	r0, #57307	; 0xdfdb
   17434:	movt	r0, #1
   17438:	movw	r1, #57322	; 0xdfea
   1743c:	movt	r1, #1
   17440:	movw	r2, #192	; 0xc0
   17444:	movw	r3, #57407	; 0xe03f
   17448:	movt	r3, #1
   1744c:	bl	129f0 <__assert_fail@plt>
   17450:	ldr	r0, [sp, #4]
   17454:	ldr	r0, [r0]
   17458:	movw	r1, #0
   1745c:	cmp	r0, r1
   17460:	beq	17504 <codadump_filter_remove@@Base+0xf8>
   17464:	ldr	r0, [sp, #4]
   17468:	ldr	r0, [r0]
   1746c:	ldr	r0, [r0, #8]
   17470:	movw	r1, #0
   17474:	cmp	r0, r1
   17478:	beq	1748c <codadump_filter_remove@@Base+0x80>
   1747c:	ldr	r0, [sp, #4]
   17480:	ldr	r0, [r0]
   17484:	add	r0, r0, #8
   17488:	bl	1740c <codadump_filter_remove@@Base>
   1748c:	ldr	r0, [sp, #4]
   17490:	ldr	r0, [r0]
   17494:	ldr	r0, [r0, #4]
   17498:	movw	r1, #0
   1749c:	cmp	r0, r1
   174a0:	beq	174b4 <codadump_filter_remove@@Base+0xa8>
   174a4:	ldr	r0, [sp, #4]
   174a8:	ldr	r0, [r0]
   174ac:	add	r0, r0, #4
   174b0:	bl	1740c <codadump_filter_remove@@Base>
   174b4:	ldr	r0, [sp, #4]
   174b8:	ldr	r0, [r0]
   174bc:	ldr	r0, [r0]
   174c0:	movw	r1, #0
   174c4:	cmp	r0, r1
   174c8:	beq	174ec <codadump_filter_remove@@Base+0xe0>
   174cc:	ldr	r0, [sp, #4]
   174d0:	ldr	r0, [r0]
   174d4:	ldr	r0, [r0]
   174d8:	bl	12654 <free@plt>
   174dc:	ldr	r0, [sp, #4]
   174e0:	ldr	r0, [r0]
   174e4:	movw	lr, #0
   174e8:	str	lr, [r0]
   174ec:	ldr	r0, [sp, #4]
   174f0:	ldr	r0, [r0]
   174f4:	bl	12654 <free@plt>
   174f8:	ldr	r0, [sp, #4]
   174fc:	movw	lr, #0
   17500:	str	lr, [r0]
   17504:	mov	sp, fp
   17508:	pop	{fp, pc}

0001750c <codadump_filter_get_fieldname@@Base>:
   1750c:	push	{fp, lr}
   17510:	mov	fp, sp
   17514:	sub	sp, sp, #8
   17518:	str	r0, [sp, #4]
   1751c:	ldr	r0, [sp, #4]
   17520:	movw	r1, #0
   17524:	cmp	r0, r1
   17528:	beq	17530 <codadump_filter_get_fieldname@@Base+0x24>
   1752c:	b	17550 <codadump_filter_get_fieldname@@Base+0x44>
   17530:	movw	r0, #57307	; 0xdfdb
   17534:	movt	r0, #1
   17538:	movw	r1, #57322	; 0xdfea
   1753c:	movt	r1, #1
   17540:	movw	r2, #216	; 0xd8
   17544:	movw	r3, #57455	; 0xe06f
   17548:	movt	r3, #1
   1754c:	bl	129f0 <__assert_fail@plt>
   17550:	ldr	r0, [sp, #4]
   17554:	ldr	r0, [r0]
   17558:	mov	sp, fp
   1755c:	pop	{fp, pc}

00017560 <codadump_filter_get_subfilter@@Base>:
   17560:	push	{fp, lr}
   17564:	mov	fp, sp
   17568:	sub	sp, sp, #8
   1756c:	str	r0, [sp, #4]
   17570:	ldr	r0, [sp, #4]
   17574:	movw	r1, #0
   17578:	cmp	r0, r1
   1757c:	beq	17584 <codadump_filter_get_subfilter@@Base+0x24>
   17580:	b	175a4 <codadump_filter_get_subfilter@@Base+0x44>
   17584:	movw	r0, #57307	; 0xdfdb
   17588:	movt	r0, #1
   1758c:	movw	r1, #57322	; 0xdfea
   17590:	movt	r1, #1
   17594:	movw	r2, #223	; 0xdf
   17598:	movw	r3, #57516	; 0xe0ac
   1759c:	movt	r3, #1
   175a0:	bl	129f0 <__assert_fail@plt>
   175a4:	ldr	r0, [sp, #4]
   175a8:	ldr	r0, [r0, #4]
   175ac:	mov	sp, fp
   175b0:	pop	{fp, pc}

000175b4 <codadump_filter_get_next_filter@@Base>:
   175b4:	push	{fp, lr}
   175b8:	mov	fp, sp
   175bc:	sub	sp, sp, #8
   175c0:	str	r0, [sp, #4]
   175c4:	ldr	r0, [sp, #4]
   175c8:	movw	r1, #0
   175cc:	cmp	r0, r1
   175d0:	beq	175d8 <codadump_filter_get_next_filter@@Base+0x24>
   175d4:	b	175f8 <codadump_filter_get_next_filter@@Base+0x44>
   175d8:	movw	r0, #57307	; 0xdfdb
   175dc:	movt	r0, #1
   175e0:	movw	r1, #57322	; 0xdfea
   175e4:	movt	r1, #1
   175e8:	movw	r2, #230	; 0xe6
   175ec:	movw	r3, #57582	; 0xe0ee
   175f0:	movt	r3, #1
   175f4:	bl	129f0 <__assert_fail@plt>
   175f8:	ldr	r0, [sp, #4]
   175fc:	ldr	r0, [r0, #8]
   17600:	mov	sp, fp
   17604:	pop	{fp, pc}
   17608:	push	{fp, lr}
   1760c:	mov	fp, sp
   17610:	sub	sp, sp, #40	; 0x28
   17614:	str	r0, [fp, #-4]
   17618:	str	r1, [fp, #-8]
   1761c:	str	r2, [fp, #-12]
   17620:	movw	r0, #0
   17624:	str	r0, [fp, #-16]
   17628:	ldr	r1, [fp, #-4]
   1762c:	cmp	r1, r0
   17630:	beq	17638 <codadump_filter_get_next_filter@@Base+0x84>
   17634:	b	17658 <codadump_filter_get_next_filter@@Base+0xa4>
   17638:	movw	r0, #57650	; 0xe132
   1763c:	movt	r0, #1
   17640:	movw	r1, #57322	; 0xdfea
   17644:	movt	r1, #1
   17648:	movw	r2, #44	; 0x2c
   1764c:	movw	r3, #57670	; 0xe146
   17650:	movt	r3, #1
   17654:	bl	129f0 <__assert_fail@plt>
   17658:	ldr	r0, [fp, #-8]
   1765c:	movw	r1, #0
   17660:	cmp	r0, r1
   17664:	beq	1766c <codadump_filter_get_next_filter@@Base+0xb8>
   17668:	b	1768c <codadump_filter_get_next_filter@@Base+0xd8>
   1766c:	movw	r0, #57307	; 0xdfdb
   17670:	movt	r0, #1
   17674:	movw	r1, #57322	; 0xdfea
   17678:	movt	r1, #1
   1767c:	movw	r2, #45	; 0x2d
   17680:	movw	r3, #57670	; 0xe146
   17684:	movt	r3, #1
   17688:	bl	129f0 <__assert_fail@plt>
   1768c:	ldr	r0, [fp, #-12]
   17690:	movw	r1, #0
   17694:	cmp	r0, r1
   17698:	beq	176a0 <codadump_filter_get_next_filter@@Base+0xec>
   1769c:	b	176c0 <codadump_filter_get_next_filter@@Base+0x10c>
   176a0:	movw	r0, #57734	; 0xe186
   176a4:	movt	r0, #1
   176a8:	movw	r1, #57322	; 0xdfea
   176ac:	movt	r1, #1
   176b0:	movw	r2, #46	; 0x2e
   176b4:	movw	r3, #57670	; 0xe146
   176b8:	movt	r3, #1
   176bc:	bl	129f0 <__assert_fail@plt>
   176c0:	b	176c4 <codadump_filter_get_next_filter@@Base+0x110>
   176c4:	ldr	r0, [fp, #-4]
   176c8:	ldrb	r0, [r0]
   176cc:	cmp	r0, #32
   176d0:	movw	r0, #1
   176d4:	str	r0, [sp, #16]
   176d8:	beq	1770c <codadump_filter_get_next_filter@@Base+0x158>
   176dc:	ldr	r0, [fp, #-4]
   176e0:	ldrb	r0, [r0]
   176e4:	cmp	r0, #9
   176e8:	movw	r0, #1
   176ec:	str	r0, [sp, #16]
   176f0:	beq	1770c <codadump_filter_get_next_filter@@Base+0x158>
   176f4:	ldr	r0, [fp, #-4]
   176f8:	ldrb	r0, [r0]
   176fc:	cmp	r0, #10
   17700:	movw	r0, #0
   17704:	moveq	r0, #1
   17708:	str	r0, [sp, #16]
   1770c:	ldr	r0, [sp, #16]
   17710:	tst	r0, #1
   17714:	beq	17728 <codadump_filter_get_next_filter@@Base+0x174>
   17718:	ldr	r0, [fp, #-4]
   1771c:	add	r0, r0, #1
   17720:	str	r0, [fp, #-4]
   17724:	b	176c4 <codadump_filter_get_next_filter@@Base+0x110>
   17728:	b	1772c <codadump_filter_get_next_filter@@Base+0x178>
   1772c:	ldr	r0, [fp, #-4]
   17730:	ldr	r1, [fp, #-16]
   17734:	add	r0, r0, r1
   17738:	ldrb	r0, [r0]
   1773c:	cmp	r0, #0
   17740:	movw	r0, #0
   17744:	str	r0, [sp, #12]
   17748:	beq	177ac <codadump_filter_get_next_filter@@Base+0x1f8>
   1774c:	ldr	r0, [fp, #-4]
   17750:	ldr	r1, [fp, #-16]
   17754:	add	r0, r0, r1
   17758:	ldrb	r0, [r0]
   1775c:	cmp	r0, #46	; 0x2e
   17760:	movw	r0, #0
   17764:	str	r0, [sp, #12]
   17768:	beq	177ac <codadump_filter_get_next_filter@@Base+0x1f8>
   1776c:	ldr	r0, [fp, #-4]
   17770:	ldr	r1, [fp, #-16]
   17774:	add	r0, r0, r1
   17778:	ldrb	r0, [r0]
   1777c:	cmp	r0, #59	; 0x3b
   17780:	movw	r0, #0
   17784:	str	r0, [sp, #12]
   17788:	beq	177ac <codadump_filter_get_next_filter@@Base+0x1f8>
   1778c:	ldr	r0, [fp, #-4]
   17790:	ldr	r1, [fp, #-16]
   17794:	add	r0, r0, r1
   17798:	ldrb	r0, [r0]
   1779c:	cmp	r0, #44	; 0x2c
   177a0:	movw	r0, #0
   177a4:	movne	r0, #1
   177a8:	str	r0, [sp, #12]
   177ac:	ldr	r0, [sp, #12]
   177b0:	tst	r0, #1
   177b4:	beq	177c8 <codadump_filter_get_next_filter@@Base+0x214>
   177b8:	ldr	r0, [fp, #-16]
   177bc:	add	r0, r0, #1
   177c0:	str	r0, [fp, #-16]
   177c4:	b	1772c <codadump_filter_get_next_filter@@Base+0x178>
   177c8:	ldr	r0, [fp, #-16]
   177cc:	cmp	r0, #0
   177d0:	ble	17a54 <codadump_filter_get_next_filter@@Base+0x4a0>
   177d4:	ldr	r0, [fp, #-16]
   177d8:	str	r0, [sp, #20]
   177dc:	movw	r0, #12
   177e0:	bl	12780 <malloc@plt>
   177e4:	ldr	lr, [fp, #-8]
   177e8:	str	r0, [lr]
   177ec:	ldr	r0, [fp, #-8]
   177f0:	ldr	r0, [r0]
   177f4:	movw	lr, #0
   177f8:	cmp	r0, lr
   177fc:	bne	17830 <codadump_filter_get_next_filter@@Base+0x27c>
   17800:	mvn	r0, #0
   17804:	movw	r1, #56224	; 0xdba0
   17808:	movt	r1, #1
   1780c:	movw	r2, #12
   17810:	movw	r3, #57322	; 0xdfea
   17814:	movt	r3, #1
   17818:	movw	ip, #69	; 0x45
   1781c:	str	ip, [sp]
   17820:	bl	1260c <coda_set_error@plt>
   17824:	movw	r0, #44732	; 0xaebc
   17828:	movt	r0, #1
   1782c:	blx	r0
   17830:	ldr	r0, [fp, #-16]
   17834:	add	r0, r0, #1
   17838:	bl	12780 <malloc@plt>
   1783c:	ldr	lr, [fp, #-8]
   17840:	ldr	lr, [lr]
   17844:	str	r0, [lr]
   17848:	ldr	r0, [fp, #-8]
   1784c:	ldr	r0, [r0]
   17850:	ldr	r0, [r0]
   17854:	movw	lr, #0
   17858:	cmp	r0, lr
   1785c:	bne	17894 <codadump_filter_get_next_filter@@Base+0x2e0>
   17860:	ldr	r0, [fp, #-16]
   17864:	add	r2, r0, #1
   17868:	mvn	r0, #0
   1786c:	movw	r1, #57747	; 0xe193
   17870:	movt	r1, #1
   17874:	movw	r3, #57322	; 0xdfea
   17878:	movt	r3, #1
   1787c:	movw	ip, #76	; 0x4c
   17880:	str	ip, [sp]
   17884:	bl	1260c <coda_set_error@plt>
   17888:	movw	r0, #44732	; 0xaebc
   1788c:	movt	r0, #1
   17890:	blx	r0
   17894:	ldr	r0, [fp, #-8]
   17898:	ldr	r0, [r0]
   1789c:	ldr	r0, [r0]
   178a0:	ldr	r1, [fp, #-4]
   178a4:	ldr	r2, [fp, #-16]
   178a8:	bl	12870 <strncpy@plt>
   178ac:	ldr	r1, [fp, #-8]
   178b0:	ldr	r1, [r1]
   178b4:	movw	r2, #0
   178b8:	str	r2, [r1, #4]
   178bc:	ldr	r1, [fp, #-8]
   178c0:	ldr	r1, [r1]
   178c4:	str	r2, [r1, #8]
   178c8:	str	r0, [sp, #8]
   178cc:	ldr	r0, [fp, #-8]
   178d0:	ldr	r0, [r0]
   178d4:	ldr	r0, [r0]
   178d8:	ldr	r1, [fp, #-16]
   178dc:	sub	r1, r1, #1
   178e0:	add	r0, r0, r1
   178e4:	ldrb	r0, [r0]
   178e8:	cmp	r0, #32
   178ec:	movw	r0, #1
   178f0:	str	r0, [sp, #4]
   178f4:	beq	17950 <codadump_filter_get_next_filter@@Base+0x39c>
   178f8:	ldr	r0, [fp, #-8]
   178fc:	ldr	r0, [r0]
   17900:	ldr	r0, [r0]
   17904:	ldr	r1, [fp, #-16]
   17908:	sub	r1, r1, #1
   1790c:	add	r0, r0, r1
   17910:	ldrb	r0, [r0]
   17914:	cmp	r0, #9
   17918:	movw	r0, #1
   1791c:	str	r0, [sp, #4]
   17920:	beq	17950 <codadump_filter_get_next_filter@@Base+0x39c>
   17924:	ldr	r0, [fp, #-8]
   17928:	ldr	r0, [r0]
   1792c:	ldr	r0, [r0]
   17930:	ldr	r1, [fp, #-16]
   17934:	sub	r1, r1, #1
   17938:	add	r0, r0, r1
   1793c:	ldrb	r0, [r0]
   17940:	cmp	r0, #10
   17944:	movw	r0, #0
   17948:	moveq	r0, #1
   1794c:	str	r0, [sp, #4]
   17950:	ldr	r0, [sp, #4]
   17954:	tst	r0, #1
   17958:	beq	17970 <codadump_filter_get_next_filter@@Base+0x3bc>
   1795c:	ldr	r0, [fp, #-16]
   17960:	mvn	r1, #0
   17964:	add	r0, r0, r1
   17968:	str	r0, [fp, #-16]
   1796c:	b	178cc <codadump_filter_get_next_filter@@Base+0x318>
   17970:	ldr	r0, [fp, #-8]
   17974:	ldr	r0, [r0]
   17978:	ldr	r0, [r0]
   1797c:	ldr	r1, [fp, #-16]
   17980:	add	r0, r0, r1
   17984:	movw	r1, #0
   17988:	strb	r1, [r0]
   1798c:	ldr	r0, [fp, #-4]
   17990:	ldr	r1, [sp, #20]
   17994:	add	r0, r0, r1
   17998:	ldrb	r0, [r0]
   1799c:	cmp	r0, #46	; 0x2e
   179a0:	bne	179ec <codadump_filter_get_next_filter@@Base+0x438>
   179a4:	ldr	r0, [fp, #-4]
   179a8:	ldr	r1, [sp, #20]
   179ac:	add	r1, r1, #1
   179b0:	add	r0, r0, r1
   179b4:	ldr	r1, [fp, #-8]
   179b8:	ldr	r1, [r1]
   179bc:	add	r1, r1, #4
   179c0:	ldr	r2, [fp, #-12]
   179c4:	bl	17608 <codadump_filter_get_next_filter@@Base+0x54>
   179c8:	ldr	r0, [fp, #-8]
   179cc:	ldr	r0, [r0]
   179d0:	ldr	r0, [r0, #4]
   179d4:	movw	r1, #0
   179d8:	cmp	r0, r1
   179dc:	bne	179e8 <codadump_filter_get_next_filter@@Base+0x434>
   179e0:	ldr	r0, [fp, #-8]
   179e4:	bl	1740c <codadump_filter_remove@@Base>
   179e8:	b	17a50 <codadump_filter_get_next_filter@@Base+0x49c>
   179ec:	ldr	r0, [fp, #-4]
   179f0:	ldr	r1, [sp, #20]
   179f4:	add	r0, r0, r1
   179f8:	ldrb	r0, [r0]
   179fc:	cmp	r0, #59	; 0x3b
   17a00:	beq	17a1c <codadump_filter_get_next_filter@@Base+0x468>
   17a04:	ldr	r0, [fp, #-4]
   17a08:	ldr	r1, [sp, #20]
   17a0c:	add	r0, r0, r1
   17a10:	ldrb	r0, [r0]
   17a14:	cmp	r0, #44	; 0x2c
   17a18:	bne	17a38 <codadump_filter_get_next_filter@@Base+0x484>
   17a1c:	ldr	r0, [fp, #-4]
   17a20:	ldr	r1, [sp, #20]
   17a24:	add	r1, r1, #1
   17a28:	add	r0, r0, r1
   17a2c:	ldr	r1, [fp, #-12]
   17a30:	str	r0, [r1]
   17a34:	b	17a4c <codadump_filter_get_next_filter@@Base+0x498>
   17a38:	ldr	r0, [fp, #-4]
   17a3c:	ldr	r1, [sp, #20]
   17a40:	add	r0, r0, r1
   17a44:	ldr	r1, [fp, #-12]
   17a48:	str	r0, [r1]
   17a4c:	b	17a50 <codadump_filter_get_next_filter@@Base+0x49c>
   17a50:	b	17a60 <codadump_filter_get_next_filter@@Base+0x4ac>
   17a54:	ldr	r0, [fp, #-8]
   17a58:	movw	r1, #0
   17a5c:	str	r1, [r0]
   17a60:	mov	sp, fp
   17a64:	pop	{fp, pc}
   17a68:	push	{fp, lr}
   17a6c:	mov	fp, sp
   17a70:	sub	sp, sp, #8
   17a74:	str	r0, [sp, #4]
   17a78:	str	r1, [sp]
   17a7c:	ldr	r0, [sp, #4]
   17a80:	movw	r1, #0
   17a84:	cmp	r0, r1
   17a88:	beq	17a90 <codadump_filter_get_next_filter@@Base+0x4dc>
   17a8c:	b	17ab0 <codadump_filter_get_next_filter@@Base+0x4fc>
   17a90:	movw	r0, #57307	; 0xdfdb
   17a94:	movt	r0, #1
   17a98:	movw	r1, #57322	; 0xdfea
   17a9c:	movt	r1, #1
   17aa0:	movw	r2, #117	; 0x75
   17aa4:	movw	r3, #57799	; 0xe1c7
   17aa8:	movt	r3, #1
   17aac:	bl	129f0 <__assert_fail@plt>
   17ab0:	ldr	r0, [sp]
   17ab4:	movw	r1, #0
   17ab8:	cmp	r0, r1
   17abc:	bne	17ac4 <codadump_filter_get_next_filter@@Base+0x510>
   17ac0:	b	17bc0 <codadump_filter_get_next_filter@@Base+0x60c>
   17ac4:	ldr	r0, [sp, #4]
   17ac8:	ldr	r0, [r0]
   17acc:	movw	r1, #0
   17ad0:	cmp	r0, r1
   17ad4:	bne	17ae8 <codadump_filter_get_next_filter@@Base+0x534>
   17ad8:	ldr	r0, [sp]
   17adc:	ldr	r1, [sp, #4]
   17ae0:	str	r0, [r1]
   17ae4:	b	17bc0 <codadump_filter_get_next_filter@@Base+0x60c>
   17ae8:	ldr	r0, [sp, #4]
   17aec:	ldr	r0, [r0]
   17af0:	ldr	r0, [r0]
   17af4:	ldr	r1, [sp]
   17af8:	ldr	r1, [r1]
   17afc:	bl	125d0 <strcmp@plt>
   17b00:	cmp	r0, #0
   17b04:	bne	17b7c <codadump_filter_get_next_filter@@Base+0x5c8>
   17b08:	ldr	r0, [sp, #4]
   17b0c:	ldr	r0, [r0]
   17b10:	ldr	r0, [r0, #4]
   17b14:	movw	r1, #0
   17b18:	cmp	r0, r1
   17b1c:	beq	17b70 <codadump_filter_get_next_filter@@Base+0x5bc>
   17b20:	ldr	r0, [sp]
   17b24:	ldr	r0, [r0, #4]
   17b28:	movw	r1, #0
   17b2c:	cmp	r0, r1
   17b30:	beq	17b5c <codadump_filter_get_next_filter@@Base+0x5a8>
   17b34:	ldr	r0, [sp, #4]
   17b38:	ldr	r0, [r0]
   17b3c:	add	r0, r0, #4
   17b40:	ldr	r1, [sp]
   17b44:	ldr	r1, [r1, #4]
   17b48:	bl	17a68 <codadump_filter_get_next_filter@@Base+0x4b4>
   17b4c:	ldr	r0, [sp]
   17b50:	movw	r1, #0
   17b54:	str	r1, [r0, #4]
   17b58:	b	17b6c <codadump_filter_get_next_filter@@Base+0x5b8>
   17b5c:	ldr	r0, [sp, #4]
   17b60:	ldr	r0, [r0]
   17b64:	add	r0, r0, #4
   17b68:	bl	1740c <codadump_filter_remove@@Base>
   17b6c:	b	17b70 <codadump_filter_get_next_filter@@Base+0x5bc>
   17b70:	mov	r0, sp
   17b74:	bl	1740c <codadump_filter_remove@@Base>
   17b78:	b	17bc0 <codadump_filter_get_next_filter@@Base+0x60c>
   17b7c:	ldr	r0, [sp, #4]
   17b80:	ldr	r0, [r0]
   17b84:	ldr	r0, [r0, #8]
   17b88:	movw	r1, #0
   17b8c:	cmp	r0, r1
   17b90:	beq	17bac <codadump_filter_get_next_filter@@Base+0x5f8>
   17b94:	ldr	r0, [sp, #4]
   17b98:	ldr	r0, [r0]
   17b9c:	add	r0, r0, #8
   17ba0:	ldr	r1, [sp]
   17ba4:	bl	17a68 <codadump_filter_get_next_filter@@Base+0x4b4>
   17ba8:	b	17bbc <codadump_filter_get_next_filter@@Base+0x608>
   17bac:	ldr	r0, [sp]
   17bb0:	ldr	r1, [sp, #4]
   17bb4:	ldr	r1, [r1]
   17bb8:	str	r0, [r1, #8]
   17bbc:	b	17bc0 <codadump_filter_get_next_filter@@Base+0x60c>
   17bc0:	mov	sp, fp
   17bc4:	pop	{fp, pc}

00017bc8 <print_json_data@@Base>:
   17bc8:	push	{r4, r5, fp, lr}
   17bcc:	add	fp, sp, #8
   17bd0:	sub	sp, sp, #552	; 0x228
   17bd4:	str	r0, [fp, #-12]
   17bd8:	ldr	r0, [fp, #-12]
   17bdc:	movw	r1, #440	; 0x1b8
   17be0:	movt	r1, #3
   17be4:	str	r0, [r1]
   17be8:	movw	r0, #480	; 0x1e0
   17bec:	movt	r0, #3
   17bf0:	ldr	r0, [r0]
   17bf4:	sub	r1, fp, #16
   17bf8:	bl	12618 <coda_open@plt>
   17bfc:	str	r0, [sp, #20]
   17c00:	ldr	r0, [sp, #20]
   17c04:	cmp	r0, #0
   17c08:	beq	17c50 <print_json_data@@Base+0x88>
   17c0c:	bl	129a8 <coda_get_errno@plt>
   17c10:	ldr	r0, [r0]
   17c14:	cmn	r0, #21
   17c18:	bne	17c50 <print_json_data@@Base+0x88>
   17c1c:	movw	r0, #0
   17c20:	bl	12660 <coda_set_option_use_mmap@plt>
   17c24:	movw	lr, #480	; 0x1e0
   17c28:	movt	lr, #3
   17c2c:	ldr	lr, [lr]
   17c30:	str	r0, [sp, #16]
   17c34:	mov	r0, lr
   17c38:	sub	r1, fp, #16
   17c3c:	bl	12618 <coda_open@plt>
   17c40:	str	r0, [sp, #20]
   17c44:	movw	r0, #1
   17c48:	bl	12660 <coda_set_option_use_mmap@plt>
   17c4c:	str	r0, [sp, #12]
   17c50:	ldr	r0, [sp, #20]
   17c54:	cmp	r0, #0
   17c58:	beq	17c68 <print_json_data@@Base+0xa0>
   17c5c:	movw	r0, #44732	; 0xaebc
   17c60:	movt	r0, #1
   17c64:	blx	r0
   17c68:	ldr	r1, [fp, #-16]
   17c6c:	add	r0, sp, #24
   17c70:	bl	12738 <coda_cursor_set_product@plt>
   17c74:	cmp	r0, #0
   17c78:	beq	17c88 <print_json_data@@Base+0xc0>
   17c7c:	movw	r0, #44732	; 0xaebc
   17c80:	movt	r0, #1
   17c84:	blx	r0
   17c88:	movw	r0, #4256	; 0x10a0
   17c8c:	movt	r0, #3
   17c90:	ldr	r0, [r0]
   17c94:	movw	r1, #0
   17c98:	cmp	r0, r1
   17c9c:	beq	17cd4 <print_json_data@@Base+0x10c>
   17ca0:	movw	r0, #4256	; 0x10a0
   17ca4:	movt	r0, #3
   17ca8:	ldr	r1, [r0]
   17cac:	add	r0, sp, #24
   17cb0:	bl	1290c <coda_cursor_goto@plt>
   17cb4:	str	r0, [sp, #20]
   17cb8:	ldr	r0, [sp, #20]
   17cbc:	cmp	r0, #0
   17cc0:	beq	17cd0 <print_json_data@@Base+0x108>
   17cc4:	movw	r0, #44732	; 0xaebc
   17cc8:	movt	r0, #1
   17ccc:	blx	r0
   17cd0:	b	17cd4 <print_json_data@@Base+0x10c>
   17cd4:	movw	r0, #0
   17cd8:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   17cdc:	add	lr, sp, #24
   17ce0:	str	r0, [sp, #8]
   17ce4:	mov	r0, lr
   17ce8:	bl	17d14 <print_json_data@@Base+0x14c>
   17cec:	movw	r0, #62873	; 0xf599
   17cf0:	movt	r0, #1
   17cf4:	bl	187e0 <print_json_data@@Base+0xc18>
   17cf8:	ldr	lr, [fp, #-16]
   17cfc:	str	r0, [sp, #4]
   17d00:	mov	r0, lr
   17d04:	bl	128e8 <coda_close@plt>
   17d08:	str	r0, [sp]
   17d0c:	sub	sp, fp, #8
   17d10:	pop	{r4, r5, fp, pc}
   17d14:	push	{r4, r5, fp, lr}
   17d18:	add	fp, sp, #8
   17d1c:	sub	sp, sp, #440	; 0x1b8
   17d20:	str	r0, [fp, #-12]
   17d24:	movw	r0, #0
   17d28:	str	r0, [fp, #-20]	; 0xffffffec
   17d2c:	movw	r0, #440	; 0x1b8
   17d30:	movt	r0, #3
   17d34:	ldr	r0, [r0]
   17d38:	cmp	r0, #0
   17d3c:	beq	17dc8 <print_json_data@@Base+0x200>
   17d40:	ldr	r0, [fp, #-12]
   17d44:	sub	r1, fp, #20
   17d48:	bl	126d8 <coda_cursor_has_attributes@plt>
   17d4c:	cmp	r0, #0
   17d50:	beq	17d60 <print_json_data@@Base+0x198>
   17d54:	movw	r0, #44732	; 0xaebc
   17d58:	movt	r0, #1
   17d5c:	blx	r0
   17d60:	ldr	r0, [fp, #-20]	; 0xffffffec
   17d64:	cmp	r0, #0
   17d68:	beq	17dc4 <print_json_data@@Base+0x1fc>
   17d6c:	movw	r0, #57854	; 0xe1fe
   17d70:	movt	r0, #1
   17d74:	bl	187e0 <print_json_data@@Base+0xc18>
   17d78:	ldr	lr, [fp, #-12]
   17d7c:	str	r0, [sp, #156]	; 0x9c
   17d80:	mov	r0, lr
   17d84:	bl	1284c <coda_cursor_goto_attributes@plt>
   17d88:	cmp	r0, #0
   17d8c:	beq	17d9c <print_json_data@@Base+0x1d4>
   17d90:	movw	r0, #44732	; 0xaebc
   17d94:	movt	r0, #1
   17d98:	blx	r0
   17d9c:	ldr	r0, [fp, #-12]
   17da0:	bl	17d14 <print_json_data@@Base+0x14c>
   17da4:	ldr	r0, [fp, #-12]
   17da8:	bl	127b0 <coda_cursor_goto_parent@plt>
   17dac:	movw	lr, #57863	; 0xe207
   17db0:	movt	lr, #1
   17db4:	str	r0, [sp, #152]	; 0x98
   17db8:	mov	r0, lr
   17dbc:	bl	187e0 <print_json_data@@Base+0xc18>
   17dc0:	str	r0, [sp, #148]	; 0x94
   17dc4:	b	17dc8 <print_json_data@@Base+0x200>
   17dc8:	ldr	r0, [fp, #-12]
   17dcc:	sub	r1, fp, #16
   17dd0:	bl	126e4 <coda_cursor_get_type_class@plt>
   17dd4:	cmp	r0, #0
   17dd8:	beq	17de8 <print_json_data@@Base+0x220>
   17ddc:	movw	r0, #44732	; 0xaebc
   17de0:	movt	r0, #1
   17de4:	blx	r0
   17de8:	ldr	r0, [fp, #-16]
   17dec:	cmp	r0, #6
   17df0:	str	r0, [sp, #144]	; 0x90
   17df4:	bhi	187bc <print_json_data@@Base+0xbf4>
   17df8:	add	r0, pc, #8
   17dfc:	ldr	r1, [sp, #144]	; 0x90
   17e00:	ldr	r0, [r0, r1, lsl #2]
   17e04:	mov	pc, r0
   17e08:	andeq	r7, r1, r4, lsr #28
   17e0c:	andeq	r8, r1, r8, lsl #1
   17e10:	andeq	r8, r1, r0, ror #3
   17e14:	andeq	r8, r1, r0, ror #3
   17e18:	andeq	r8, r1, r0, ror #3
   17e1c:	andeq	r8, r1, r0, ror #3
   17e20:	andeq	r8, r1, ip, lsr #12
   17e24:	movw	r0, #57872	; 0xe210
   17e28:	movt	r0, #1
   17e2c:	bl	187e0 <print_json_data@@Base+0xc18>
   17e30:	ldr	lr, [fp, #-12]
   17e34:	str	r0, [sp, #140]	; 0x8c
   17e38:	mov	r0, lr
   17e3c:	sub	r1, fp, #24
   17e40:	bl	1263c <coda_cursor_get_num_elements@plt>
   17e44:	cmp	r0, #0
   17e48:	beq	17e58 <print_json_data@@Base+0x290>
   17e4c:	movw	r0, #44732	; 0xaebc
   17e50:	movt	r0, #1
   17e54:	blx	r0
   17e58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e5c:	cmp	r0, #0
   17e60:	ble	18074 <print_json_data@@Base+0x4ac>
   17e64:	ldr	r0, [fp, #-12]
   17e68:	sub	r1, fp, #28
   17e6c:	bl	1269c <coda_cursor_get_type@plt>
   17e70:	cmp	r0, #0
   17e74:	beq	17e84 <print_json_data@@Base+0x2bc>
   17e78:	movw	r0, #44732	; 0xaebc
   17e7c:	movt	r0, #1
   17e80:	blx	r0
   17e84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17e88:	sub	r1, fp, #32
   17e8c:	bl	12888 <coda_type_get_record_union_status@plt>
   17e90:	cmp	r0, #0
   17e94:	beq	17ea4 <print_json_data@@Base+0x2dc>
   17e98:	movw	r0, #44732	; 0xaebc
   17e9c:	movt	r0, #1
   17ea0:	blx	r0
   17ea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17ea8:	cmp	r0, #0
   17eac:	beq	17f44 <print_json_data@@Base+0x37c>
   17eb0:	ldr	r0, [fp, #-12]
   17eb4:	sub	r1, fp, #36	; 0x24
   17eb8:	bl	12978 <coda_cursor_get_available_union_field_index@plt>
   17ebc:	cmp	r0, #0
   17ec0:	beq	17ed0 <print_json_data@@Base+0x308>
   17ec4:	movw	r0, #44732	; 0xaebc
   17ec8:	movt	r0, #1
   17ecc:	blx	r0
   17ed0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17ed4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17ed8:	sub	r2, fp, #40	; 0x28
   17edc:	bl	129c0 <coda_type_get_record_field_name@plt>
   17ee0:	cmp	r0, #0
   17ee4:	beq	17ef4 <print_json_data@@Base+0x32c>
   17ee8:	movw	r0, #44732	; 0xaebc
   17eec:	movt	r0, #1
   17ef0:	blx	r0
   17ef4:	ldr	r0, [fp, #-12]
   17ef8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17efc:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   17f00:	cmp	r0, #0
   17f04:	beq	17f14 <print_json_data@@Base+0x34c>
   17f08:	movw	r0, #44732	; 0xaebc
   17f0c:	movt	r0, #1
   17f10:	blx	r0
   17f14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f18:	movw	r0, #57874	; 0xe212
   17f1c:	movt	r0, #1
   17f20:	bl	187e0 <print_json_data@@Base+0xc18>
   17f24:	ldr	r1, [fp, #-12]
   17f28:	str	r0, [sp, #136]	; 0x88
   17f2c:	mov	r0, r1
   17f30:	bl	17d14 <print_json_data@@Base+0x14c>
   17f34:	ldr	r0, [fp, #-12]
   17f38:	bl	127b0 <coda_cursor_goto_parent@plt>
   17f3c:	str	r0, [sp, #132]	; 0x84
   17f40:	b	18070 <print_json_data@@Base+0x4a8>
   17f44:	movw	r0, #1
   17f48:	str	r0, [fp, #-44]	; 0xffffffd4
   17f4c:	ldr	r0, [fp, #-12]
   17f50:	bl	12750 <coda_cursor_goto_first_record_field@plt>
   17f54:	cmp	r0, #0
   17f58:	beq	17f68 <print_json_data@@Base+0x3a0>
   17f5c:	movw	r0, #44732	; 0xaebc
   17f60:	movt	r0, #1
   17f64:	blx	r0
   17f68:	movw	r0, #0
   17f6c:	str	r0, [fp, #-36]	; 0xffffffdc
   17f70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f78:	cmp	r0, r1
   17f7c:	bge	18064 <print_json_data@@Base+0x49c>
   17f80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17f84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17f88:	sub	r2, fp, #52	; 0x34
   17f8c:	bl	125dc <coda_type_get_record_field_hidden_status@plt>
   17f90:	cmp	r0, #0
   17f94:	beq	17fa4 <print_json_data@@Base+0x3dc>
   17f98:	movw	r0, #44732	; 0xaebc
   17f9c:	movt	r0, #1
   17fa0:	blx	r0
   17fa4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17fa8:	cmp	r0, #0
   17fac:	bne	1801c <print_json_data@@Base+0x454>
   17fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17fb4:	cmp	r0, #0
   17fb8:	bne	17fd0 <print_json_data@@Base+0x408>
   17fbc:	movw	r0, #56952	; 0xde78
   17fc0:	movt	r0, #1
   17fc4:	bl	187e0 <print_json_data@@Base+0xc18>
   17fc8:	str	r0, [sp, #128]	; 0x80
   17fcc:	b	17fd8 <print_json_data@@Base+0x410>
   17fd0:	movw	r0, #0
   17fd4:	str	r0, [fp, #-44]	; 0xffffffd4
   17fd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17fdc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17fe0:	sub	r2, fp, #48	; 0x30
   17fe4:	bl	129c0 <coda_type_get_record_field_name@plt>
   17fe8:	cmp	r0, #0
   17fec:	beq	17ffc <print_json_data@@Base+0x434>
   17ff0:	movw	r0, #44732	; 0xaebc
   17ff4:	movt	r0, #1
   17ff8:	blx	r0
   17ffc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   18000:	movw	r0, #57874	; 0xe212
   18004:	movt	r0, #1
   18008:	bl	187e0 <print_json_data@@Base+0xc18>
   1800c:	ldr	r1, [fp, #-12]
   18010:	str	r0, [sp, #124]	; 0x7c
   18014:	mov	r0, r1
   18018:	bl	17d14 <print_json_data@@Base+0x14c>
   1801c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18020:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18024:	sub	r1, r1, #1
   18028:	cmp	r0, r1
   1802c:	bge	18050 <print_json_data@@Base+0x488>
   18030:	ldr	r0, [fp, #-12]
   18034:	bl	12930 <coda_cursor_goto_next_record_field@plt>
   18038:	cmp	r0, #0
   1803c:	beq	1804c <print_json_data@@Base+0x484>
   18040:	movw	r0, #44732	; 0xaebc
   18044:	movt	r0, #1
   18048:	blx	r0
   1804c:	b	18050 <print_json_data@@Base+0x488>
   18050:	b	18054 <print_json_data@@Base+0x48c>
   18054:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18058:	add	r0, r0, #1
   1805c:	str	r0, [fp, #-36]	; 0xffffffdc
   18060:	b	17f70 <print_json_data@@Base+0x3a8>
   18064:	ldr	r0, [fp, #-12]
   18068:	bl	127b0 <coda_cursor_goto_parent@plt>
   1806c:	str	r0, [sp, #120]	; 0x78
   18070:	b	18074 <print_json_data@@Base+0x4ac>
   18074:	movw	r0, #57880	; 0xe218
   18078:	movt	r0, #1
   1807c:	bl	187e0 <print_json_data@@Base+0xc18>
   18080:	str	r0, [sp, #116]	; 0x74
   18084:	b	187bc <print_json_data@@Base+0xbf4>
   18088:	movw	r0, #58056	; 0xe2c8
   1808c:	movt	r0, #1
   18090:	bl	187e0 <print_json_data@@Base+0xc18>
   18094:	sub	r2, fp, #84	; 0x54
   18098:	ldr	lr, [fp, #-12]
   1809c:	str	r0, [sp, #112]	; 0x70
   180a0:	mov	r0, lr
   180a4:	sub	r1, fp, #88	; 0x58
   180a8:	bl	128d0 <coda_cursor_get_array_dim@plt>
   180ac:	cmp	r0, #0
   180b0:	beq	180c0 <print_json_data@@Base+0x4f8>
   180b4:	movw	r0, #44732	; 0xaebc
   180b8:	movt	r0, #1
   180bc:	blx	r0
   180c0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   180c4:	cmp	r0, #0
   180c8:	blt	181cc <print_json_data@@Base+0x604>
   180cc:	movw	r0, #1
   180d0:	str	r0, [fp, #-92]	; 0xffffffa4
   180d4:	movw	r0, #0
   180d8:	str	r0, [fp, #-96]	; 0xffffffa0
   180dc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   180e0:	ldr	r1, [fp, #-88]	; 0xffffffa8
   180e4:	cmp	r0, r1
   180e8:	bge	18118 <print_json_data@@Base+0x550>
   180ec:	ldr	r0, [fp, #-96]	; 0xffffffa0
   180f0:	sub	r1, fp, #84	; 0x54
   180f4:	add	r0, r1, r0, lsl #2
   180f8:	ldr	r0, [r0]
   180fc:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18100:	mul	r0, r1, r0
   18104:	str	r0, [fp, #-92]	; 0xffffffa4
   18108:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1810c:	add	r0, r0, #1
   18110:	str	r0, [fp, #-96]	; 0xffffffa0
   18114:	b	180dc <print_json_data@@Base+0x514>
   18118:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1811c:	cmp	r0, #0
   18120:	ble	181c8 <print_json_data@@Base+0x600>
   18124:	ldr	r0, [fp, #-12]
   18128:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   1812c:	cmp	r0, #0
   18130:	beq	18140 <print_json_data@@Base+0x578>
   18134:	movw	r0, #44732	; 0xaebc
   18138:	movt	r0, #1
   1813c:	blx	r0
   18140:	movw	r0, #0
   18144:	str	r0, [fp, #-96]	; 0xffffffa0
   18148:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1814c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   18150:	cmp	r0, r1
   18154:	bge	181bc <print_json_data@@Base+0x5f4>
   18158:	ldr	r0, [fp, #-12]
   1815c:	bl	17d14 <print_json_data@@Base+0x14c>
   18160:	ldr	r0, [fp, #-96]	; 0xffffffa0
   18164:	ldr	lr, [fp, #-92]	; 0xffffffa4
   18168:	sub	lr, lr, #1
   1816c:	cmp	r0, lr
   18170:	bge	181a8 <print_json_data@@Base+0x5e0>
   18174:	movw	r0, #56952	; 0xde78
   18178:	movt	r0, #1
   1817c:	bl	187e0 <print_json_data@@Base+0xc18>
   18180:	ldr	lr, [fp, #-12]
   18184:	str	r0, [sp, #108]	; 0x6c
   18188:	mov	r0, lr
   1818c:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   18190:	cmp	r0, #0
   18194:	beq	181a4 <print_json_data@@Base+0x5dc>
   18198:	movw	r0, #44732	; 0xaebc
   1819c:	movt	r0, #1
   181a0:	blx	r0
   181a4:	b	181a8 <print_json_data@@Base+0x5e0>
   181a8:	b	181ac <print_json_data@@Base+0x5e4>
   181ac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   181b0:	add	r0, r0, #1
   181b4:	str	r0, [fp, #-96]	; 0xffffffa0
   181b8:	b	18148 <print_json_data@@Base+0x580>
   181bc:	ldr	r0, [fp, #-12]
   181c0:	bl	127b0 <coda_cursor_goto_parent@plt>
   181c4:	str	r0, [sp, #104]	; 0x68
   181c8:	b	181cc <print_json_data@@Base+0x604>
   181cc:	movw	r0, #58305	; 0xe3c1
   181d0:	movt	r0, #1
   181d4:	bl	187e0 <print_json_data@@Base+0xc18>
   181d8:	str	r0, [sp, #100]	; 0x64
   181dc:	b	187bc <print_json_data@@Base+0xbf4>
   181e0:	ldr	r0, [fp, #-12]
   181e4:	sub	r1, fp, #100	; 0x64
   181e8:	bl	12774 <coda_cursor_get_read_type@plt>
   181ec:	cmp	r0, #0
   181f0:	beq	18200 <print_json_data@@Base+0x638>
   181f4:	movw	r0, #44732	; 0xaebc
   181f8:	movt	r0, #1
   181fc:	blx	r0
   18200:	ldr	r0, [fp, #-100]	; 0xffffff9c
   18204:	add	r0, r0, #1
   18208:	cmp	r0, #13
   1820c:	str	r0, [sp, #96]	; 0x60
   18210:	bhi	18628 <print_json_data@@Base+0xa60>
   18214:	add	r0, pc, #8
   18218:	ldr	r1, [sp, #96]	; 0x60
   1821c:	ldr	r0, [r0, r1, lsl #2]
   18220:	mov	pc, r0
   18224:	andeq	r8, r1, r8, lsl r6
   18228:			; <UNDEFINED> instruction: 0x000184b4
   1822c:	andeq	r8, r1, ip, ror #9
   18230:			; <UNDEFINED> instruction: 0x000184b4
   18234:	andeq	r8, r1, ip, ror #9
   18238:			; <UNDEFINED> instruction: 0x000184b4
   1823c:	andeq	r8, r1, ip, ror #9
   18240:	andeq	r8, r1, r4, lsr #10
   18244:	andeq	r8, r1, ip, ror #10
   18248:			; <UNDEFINED> instruction: 0x000185b4
   1824c:			; <UNDEFINED> instruction: 0x000185b4
   18250:	andeq	r8, r1, ip, asr r2
   18254:			; <UNDEFINED> instruction: 0x000182b0
   18258:	muleq	r1, r0, r3
   1825c:	ldr	r0, [fp, #-12]
   18260:	sub	r1, fp, #101	; 0x65
   18264:	bl	12858 <coda_cursor_read_char@plt>
   18268:	cmp	r0, #0
   1826c:	beq	1827c <print_json_data@@Base+0x6b4>
   18270:	movw	r0, #44732	; 0xaebc
   18274:	movt	r0, #1
   18278:	blx	r0
   1827c:	movw	r0, #58038	; 0xe2b6
   18280:	movt	r0, #1
   18284:	bl	187e0 <print_json_data@@Base+0xc18>
   18288:	sub	lr, fp, #101	; 0x65
   1828c:	str	r0, [sp, #92]	; 0x5c
   18290:	mov	r0, lr
   18294:	movw	r1, #1
   18298:	bl	18844 <print_json_data@@Base+0xc7c>
   1829c:	movw	r0, #58038	; 0xe2b6
   182a0:	movt	r0, #1
   182a4:	bl	187e0 <print_json_data@@Base+0xc18>
   182a8:	str	r0, [sp, #88]	; 0x58
   182ac:	b	18628 <print_json_data@@Base+0xa60>
   182b0:	ldr	r0, [fp, #-12]
   182b4:	sub	r1, fp, #108	; 0x6c
   182b8:	bl	127e0 <coda_cursor_get_string_length@plt>
   182bc:	cmp	r0, #0
   182c0:	beq	182d0 <print_json_data@@Base+0x708>
   182c4:	movw	r0, #44732	; 0xaebc
   182c8:	movt	r0, #1
   182cc:	blx	r0
   182d0:	ldr	r0, [fp, #-108]	; 0xffffff94
   182d4:	add	r0, r0, #1
   182d8:	bl	12780 <malloc@plt>
   182dc:	str	r0, [fp, #-112]	; 0xffffff90
   182e0:	ldr	r0, [fp, #-112]	; 0xffffff90
   182e4:	movw	lr, #0
   182e8:	cmp	r0, lr
   182ec:	bne	18324 <print_json_data@@Base+0x75c>
   182f0:	ldr	r0, [fp, #-108]	; 0xffffff94
   182f4:	add	r2, r0, #1
   182f8:	mvn	r0, #0
   182fc:	movw	r1, #56224	; 0xdba0
   18300:	movt	r1, #1
   18304:	movw	r3, #57882	; 0xe21a
   18308:	movt	r3, #1
   1830c:	movw	ip, #303	; 0x12f
   18310:	str	ip, [sp]
   18314:	bl	1260c <coda_set_error@plt>
   18318:	movw	r0, #44732	; 0xaebc
   1831c:	movt	r0, #1
   18320:	blx	r0
   18324:	ldr	r0, [fp, #-12]
   18328:	ldr	r1, [fp, #-112]	; 0xffffff90
   1832c:	ldr	r2, [fp, #-108]	; 0xffffff94
   18330:	add	r2, r2, #1
   18334:	bl	127a4 <coda_cursor_read_string@plt>
   18338:	cmp	r0, #0
   1833c:	beq	1834c <print_json_data@@Base+0x784>
   18340:	movw	r0, #44732	; 0xaebc
   18344:	movt	r0, #1
   18348:	blx	r0
   1834c:	movw	r0, #58038	; 0xe2b6
   18350:	movt	r0, #1
   18354:	bl	187e0 <print_json_data@@Base+0xc18>
   18358:	ldr	lr, [fp, #-112]	; 0xffffff90
   1835c:	ldr	r1, [fp, #-108]	; 0xffffff94
   18360:	str	r0, [sp, #84]	; 0x54
   18364:	mov	r0, lr
   18368:	bl	18844 <print_json_data@@Base+0xc7c>
   1836c:	ldr	r1, [fp, #-108]	; 0xffffff94
   18370:	movw	r0, #58038	; 0xe2b6
   18374:	movt	r0, #1
   18378:	bl	187e0 <print_json_data@@Base+0xc18>
   1837c:	ldr	r1, [fp, #-112]	; 0xffffff90
   18380:	str	r0, [sp, #80]	; 0x50
   18384:	mov	r0, r1
   18388:	bl	12654 <free@plt>
   1838c:	b	18628 <print_json_data@@Base+0xa60>
   18390:	ldr	r0, [fp, #-12]
   18394:	sub	r1, fp, #120	; 0x78
   18398:	bl	12948 <coda_cursor_get_bit_size@plt>
   1839c:	cmp	r0, #0
   183a0:	beq	183b0 <print_json_data@@Base+0x7e8>
   183a4:	movw	r0, #44732	; 0xaebc
   183a8:	movt	r0, #1
   183ac:	blx	r0
   183b0:	ldr	r0, [fp, #-120]	; 0xffffff88
   183b4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   183b8:	lsr	r2, r0, #3
   183bc:	orr	r2, r2, r1, lsl #29
   183c0:	asr	r1, r1, #3
   183c4:	and	r0, r0, #7
   183c8:	adds	r3, r2, #1
   183cc:	adc	ip, r1, #0
   183d0:	cmp	r0, #0
   183d4:	movne	r2, r3
   183d8:	cmp	r0, #0
   183dc:	movne	r1, ip
   183e0:	str	r2, [fp, #-128]	; 0xffffff80
   183e4:	str	r1, [fp, #-124]	; 0xffffff84
   183e8:	ldr	r0, [fp, #-128]	; 0xffffff80
   183ec:	bl	12780 <malloc@plt>
   183f0:	str	r0, [fp, #-132]	; 0xffffff7c
   183f4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   183f8:	movw	r1, #0
   183fc:	cmp	r0, r1
   18400:	bne	18434 <print_json_data@@Base+0x86c>
   18404:	ldr	r2, [fp, #-128]	; 0xffffff80
   18408:	mvn	r0, #0
   1840c:	movw	r1, #56224	; 0xdba0
   18410:	movt	r1, #1
   18414:	movw	r3, #57882	; 0xe21a
   18418:	movt	r3, #1
   1841c:	movw	ip, #334	; 0x14e
   18420:	str	ip, [sp]
   18424:	bl	1260c <coda_set_error@plt>
   18428:	movw	r0, #44732	; 0xaebc
   1842c:	movt	r0, #1
   18430:	blx	r0
   18434:	ldr	r0, [fp, #-12]
   18438:	ldr	r1, [fp, #-132]	; 0xffffff7c
   1843c:	ldr	r2, [fp, #-120]	; 0xffffff88
   18440:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18444:	mov	ip, sp
   18448:	str	r3, [ip, #4]
   1844c:	str	r2, [ip]
   18450:	mov	r2, #0
   18454:	str	r2, [sp, #76]	; 0x4c
   18458:	ldr	r3, [sp, #76]	; 0x4c
   1845c:	bl	129d8 <coda_cursor_read_bits@plt>
   18460:	cmp	r0, #0
   18464:	beq	18474 <print_json_data@@Base+0x8ac>
   18468:	movw	r0, #44732	; 0xaebc
   1846c:	movt	r0, #1
   18470:	blx	r0
   18474:	movw	r0, #58038	; 0xe2b6
   18478:	movt	r0, #1
   1847c:	bl	187e0 <print_json_data@@Base+0xc18>
   18480:	ldr	lr, [fp, #-132]	; 0xffffff7c
   18484:	ldr	r1, [fp, #-128]	; 0xffffff80
   18488:	str	r0, [sp, #72]	; 0x48
   1848c:	mov	r0, lr
   18490:	bl	18844 <print_json_data@@Base+0xc7c>
   18494:	movw	r0, #58038	; 0xe2b6
   18498:	movt	r0, #1
   1849c:	bl	187e0 <print_json_data@@Base+0xc18>
   184a0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   184a4:	str	r0, [sp, #68]	; 0x44
   184a8:	mov	r0, r1
   184ac:	bl	12654 <free@plt>
   184b0:	b	18628 <print_json_data@@Base+0xa60>
   184b4:	ldr	r0, [fp, #-12]
   184b8:	sub	r1, fp, #136	; 0x88
   184bc:	bl	12984 <coda_cursor_read_int32@plt>
   184c0:	cmp	r0, #0
   184c4:	beq	184d4 <print_json_data@@Base+0x90c>
   184c8:	movw	r0, #44732	; 0xaebc
   184cc:	movt	r0, #1
   184d0:	blx	r0
   184d4:	ldr	r1, [fp, #-136]	; 0xffffff78
   184d8:	movw	r0, #58062	; 0xe2ce
   184dc:	movt	r0, #1
   184e0:	bl	187e0 <print_json_data@@Base+0xc18>
   184e4:	str	r0, [sp, #64]	; 0x40
   184e8:	b	18628 <print_json_data@@Base+0xa60>
   184ec:	ldr	r0, [fp, #-12]
   184f0:	sub	r1, fp, #140	; 0x8c
   184f4:	bl	12678 <coda_cursor_read_uint32@plt>
   184f8:	cmp	r0, #0
   184fc:	beq	1850c <print_json_data@@Base+0x944>
   18500:	movw	r0, #44732	; 0xaebc
   18504:	movt	r0, #1
   18508:	blx	r0
   1850c:	ldr	r1, [fp, #-140]	; 0xffffff74
   18510:	movw	r0, #56391	; 0xdc47
   18514:	movt	r0, #1
   18518:	bl	187e0 <print_json_data@@Base+0xc18>
   1851c:	str	r0, [sp, #60]	; 0x3c
   18520:	b	18628 <print_json_data@@Base+0xa60>
   18524:	ldr	r0, [fp, #-12]
   18528:	sub	r1, fp, #152	; 0x98
   1852c:	bl	128f4 <coda_cursor_read_int64@plt>
   18530:	cmp	r0, #0
   18534:	beq	18544 <print_json_data@@Base+0x97c>
   18538:	movw	r0, #44732	; 0xaebc
   1853c:	movt	r0, #1
   18540:	blx	r0
   18544:	sub	r2, fp, #173	; 0xad
   18548:	ldr	r0, [fp, #-152]	; 0xffffff68
   1854c:	ldr	r1, [fp, #-148]	; 0xffffff6c
   18550:	bl	129e4 <coda_str64@plt>
   18554:	sub	r1, fp, #173	; 0xad
   18558:	movw	r0, #58242	; 0xe382
   1855c:	movt	r0, #1
   18560:	bl	187e0 <print_json_data@@Base+0xc18>
   18564:	str	r0, [sp, #56]	; 0x38
   18568:	b	18628 <print_json_data@@Base+0xa60>
   1856c:	ldr	r0, [fp, #-12]
   18570:	sub	r1, fp, #184	; 0xb8
   18574:	bl	127ec <coda_cursor_read_uint64@plt>
   18578:	cmp	r0, #0
   1857c:	beq	1858c <print_json_data@@Base+0x9c4>
   18580:	movw	r0, #44732	; 0xaebc
   18584:	movt	r0, #1
   18588:	blx	r0
   1858c:	sub	r2, fp, #205	; 0xcd
   18590:	ldr	r0, [fp, #-184]	; 0xffffff48
   18594:	ldr	r1, [fp, #-180]	; 0xffffff4c
   18598:	bl	12648 <coda_str64u@plt>
   1859c:	sub	r1, fp, #205	; 0xcd
   185a0:	movw	r0, #58242	; 0xe382
   185a4:	movt	r0, #1
   185a8:	bl	187e0 <print_json_data@@Base+0xc18>
   185ac:	str	r0, [sp, #52]	; 0x34
   185b0:	b	18628 <print_json_data@@Base+0xa60>
   185b4:	ldr	r0, [fp, #-12]
   185b8:	sub	r1, fp, #216	; 0xd8
   185bc:	bl	127f8 <coda_cursor_read_double@plt>
   185c0:	cmp	r0, #0
   185c4:	beq	185d4 <print_json_data@@Base+0xa0c>
   185c8:	movw	r0, #44732	; 0xaebc
   185cc:	movt	r0, #1
   185d0:	blx	r0
   185d4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   185d8:	cmp	r0, #8
   185dc:	bne	185fc <print_json_data@@Base+0xa34>
   185e0:	vldr	d16, [fp, #-216]	; 0xffffff28
   185e4:	movw	r0, #56395	; 0xdc4b
   185e8:	movt	r0, #1
   185ec:	vmov	r2, r3, d16
   185f0:	bl	187e0 <print_json_data@@Base+0xc18>
   185f4:	str	r0, [sp, #48]	; 0x30
   185f8:	b	18614 <print_json_data@@Base+0xa4c>
   185fc:	vldr	d16, [fp, #-216]	; 0xffffff28
   18600:	movw	r0, #56400	; 0xdc50
   18604:	movt	r0, #1
   18608:	vmov	r2, r3, d16
   1860c:	bl	187e0 <print_json_data@@Base+0xc18>
   18610:	str	r0, [sp, #44]	; 0x2c
   18614:	b	18628 <print_json_data@@Base+0xa60>
   18618:	movw	r0, #57965	; 0xe26d
   1861c:	movt	r0, #1
   18620:	bl	187e0 <print_json_data@@Base+0xc18>
   18624:	str	r0, [sp, #40]	; 0x28
   18628:	b	187bc <print_json_data@@Base+0xbf4>
   1862c:	ldr	r0, [fp, #-12]
   18630:	sub	r1, fp, #220	; 0xdc
   18634:	bl	12720 <coda_cursor_get_special_type@plt>
   18638:	cmp	r0, #0
   1863c:	beq	1864c <print_json_data@@Base+0xa84>
   18640:	movw	r0, #44732	; 0xaebc
   18644:	movt	r0, #1
   18648:	blx	r0
   1864c:	ldr	r0, [fp, #-220]	; 0xffffff24
   18650:	cmp	r0, #3
   18654:	str	r0, [sp, #36]	; 0x24
   18658:	bhi	187b8 <print_json_data@@Base+0xbf0>
   1865c:	add	r0, pc, #8
   18660:	ldr	r1, [sp, #36]	; 0x24
   18664:	ldr	r0, [r0, r1, lsl #2]
   18668:	mov	pc, r0
   1866c:	andeq	r8, r1, ip, ror r6
   18670:	muleq	r1, r0, r6
   18674:	andeq	r8, r1, ip, asr #13
   18678:	andeq	r8, r1, r4, ror r7
   1867c:	movw	r0, #57965	; 0xe26d
   18680:	movt	r0, #1
   18684:	bl	187e0 <print_json_data@@Base+0xc18>
   18688:	str	r0, [sp, #32]
   1868c:	b	187b8 <print_json_data@@Base+0xbf0>
   18690:	ldr	r0, [fp, #-12]
   18694:	add	r1, sp, #216	; 0xd8
   18698:	bl	127f8 <coda_cursor_read_double@plt>
   1869c:	cmp	r0, #0
   186a0:	beq	186b0 <print_json_data@@Base+0xae8>
   186a4:	movw	r0, #44732	; 0xaebc
   186a8:	movt	r0, #1
   186ac:	blx	r0
   186b0:	vldr	d16, [sp, #216]	; 0xd8
   186b4:	movw	r0, #56400	; 0xdc50
   186b8:	movt	r0, #1
   186bc:	vmov	r2, r3, d16
   186c0:	bl	187e0 <print_json_data@@Base+0xc18>
   186c4:	str	r0, [sp, #28]
   186c8:	b	187b8 <print_json_data@@Base+0xbf0>
   186cc:	ldr	r0, [fp, #-12]
   186d0:	add	r1, sp, #208	; 0xd0
   186d4:	bl	127f8 <coda_cursor_read_double@plt>
   186d8:	cmp	r0, #0
   186dc:	beq	186ec <print_json_data@@Base+0xb24>
   186e0:	movw	r0, #44732	; 0xaebc
   186e4:	movt	r0, #1
   186e8:	blx	r0
   186ec:	vldr	d0, [sp, #208]	; 0xd0
   186f0:	bl	12804 <coda_isNaN@plt>
   186f4:	cmp	r0, #0
   186f8:	bne	1870c <print_json_data@@Base+0xb44>
   186fc:	vldr	d0, [sp, #208]	; 0xd0
   18700:	bl	126b4 <coda_isInf@plt>
   18704:	cmp	r0, #0
   18708:	beq	18728 <print_json_data@@Base+0xb60>
   1870c:	vldr	d16, [sp, #208]	; 0xd0
   18710:	movw	r0, #56400	; 0xdc50
   18714:	movt	r0, #1
   18718:	vmov	r2, r3, d16
   1871c:	bl	187e0 <print_json_data@@Base+0xc18>
   18720:	str	r0, [sp, #24]
   18724:	b	18770 <print_json_data@@Base+0xba8>
   18728:	add	r1, sp, #181	; 0xb5
   1872c:	vldr	d0, [sp, #208]	; 0xd0
   18730:	movw	r0, #57970	; 0xe272
   18734:	movt	r0, #1
   18738:	bl	12630 <coda_time_double_to_string@plt>
   1873c:	cmp	r0, #0
   18740:	beq	18758 <print_json_data@@Base+0xb90>
   18744:	movw	r0, #57999	; 0xe28f
   18748:	movt	r0, #1
   1874c:	bl	187e0 <print_json_data@@Base+0xc18>
   18750:	str	r0, [sp, #20]
   18754:	b	1876c <print_json_data@@Base+0xba4>
   18758:	add	r1, sp, #181	; 0xb5
   1875c:	movw	r0, #58308	; 0xe3c4
   18760:	movt	r0, #1
   18764:	bl	187e0 <print_json_data@@Base+0xc18>
   18768:	str	r0, [sp, #16]
   1876c:	b	18770 <print_json_data@@Base+0xba8>
   18770:	b	187b8 <print_json_data@@Base+0xbf0>
   18774:	ldr	r0, [fp, #-12]
   18778:	add	r1, sp, #168	; 0xa8
   1877c:	add	r2, sp, #160	; 0xa0
   18780:	bl	12894 <coda_cursor_read_complex_double_split@plt>
   18784:	cmp	r0, #0
   18788:	beq	18798 <print_json_data@@Base+0xbd0>
   1878c:	movw	r0, #44732	; 0xaebc
   18790:	movt	r0, #1
   18794:	blx	r0
   18798:	vldr	d16, [sp, #168]	; 0xa8
   1879c:	vldr	d17, [sp, #160]	; 0xa0
   187a0:	movw	r0, #58026	; 0xe2aa
   187a4:	movt	r0, #1
   187a8:	vmov	r2, r3, d16
   187ac:	vstr	d17, [sp]
   187b0:	bl	187e0 <print_json_data@@Base+0xc18>
   187b4:	str	r0, [sp, #12]
   187b8:	b	187bc <print_json_data@@Base+0xbf4>
   187bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   187c0:	cmp	r0, #0
   187c4:	beq	187d8 <print_json_data@@Base+0xc10>
   187c8:	movw	r0, #57880	; 0xe218
   187cc:	movt	r0, #1
   187d0:	bl	187e0 <print_json_data@@Base+0xc18>
   187d4:	str	r0, [sp, #8]
   187d8:	sub	sp, fp, #8
   187dc:	pop	{r4, r5, fp, pc}
   187e0:	sub	sp, sp, #12
   187e4:	push	{fp, lr}
   187e8:	mov	fp, sp
   187ec:	sub	sp, sp, #20
   187f0:	str	r3, [fp, #16]
   187f4:	str	r2, [fp, #12]
   187f8:	str	r1, [fp, #8]
   187fc:	str	r0, [fp, #-4]
   18800:	add	r0, fp, #8
   18804:	str	r0, [sp, #8]
   18808:	movw	r0, #4232	; 0x1088
   1880c:	movt	r0, #3
   18810:	ldr	r0, [r0]
   18814:	ldr	r1, [fp, #-4]
   18818:	ldr	r2, [sp, #8]
   1881c:	bl	12900 <vfprintf@plt>
   18820:	str	r0, [fp, #-8]
   18824:	add	r0, sp, #8
   18828:	ldr	r1, [fp, #-8]
   1882c:	str	r0, [sp, #4]
   18830:	mov	r0, r1
   18834:	mov	sp, fp
   18838:	pop	{fp, lr}
   1883c:	add	sp, sp, #12
   18840:	bx	lr
   18844:	push	{fp, lr}
   18848:	mov	fp, sp
   1884c:	sub	sp, sp, #56	; 0x38
   18850:	str	r0, [fp, #-4]
   18854:	str	r1, [fp, #-8]
   18858:	movw	r0, #0
   1885c:	str	r0, [fp, #-12]
   18860:	ldr	r0, [fp, #-12]
   18864:	ldr	r1, [fp, #-8]
   18868:	cmp	r0, r1
   1886c:	bge	189e0 <print_json_data@@Base+0xe18>
   18870:	ldr	r0, [fp, #-4]
   18874:	ldr	r1, [fp, #-12]
   18878:	ldrb	r0, [r0, r1]
   1887c:	strb	r0, [fp, #-13]
   18880:	ldrb	r0, [fp, #-13]
   18884:	mov	r1, r0
   18888:	cmp	r0, #8
   1888c:	str	r1, [fp, #-20]	; 0xffffffec
   18890:	beq	188f8 <print_json_data@@Base+0xd30>
   18894:	b	18898 <print_json_data@@Base+0xcd0>
   18898:	ldr	r0, [fp, #-20]	; 0xffffffec
   1889c:	cmp	r0, #9
   188a0:	beq	18948 <print_json_data@@Base+0xd80>
   188a4:	b	188a8 <print_json_data@@Base+0xce0>
   188a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   188ac:	cmp	r0, #10
   188b0:	beq	18920 <print_json_data@@Base+0xd58>
   188b4:	b	188b8 <print_json_data@@Base+0xcf0>
   188b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   188bc:	cmp	r0, #12
   188c0:	beq	1890c <print_json_data@@Base+0xd44>
   188c4:	b	188c8 <print_json_data@@Base+0xd00>
   188c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   188cc:	cmp	r0, #13
   188d0:	beq	18934 <print_json_data@@Base+0xd6c>
   188d4:	b	188d8 <print_json_data@@Base+0xd10>
   188d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   188dc:	cmp	r0, #34	; 0x22
   188e0:	beq	1895c <print_json_data@@Base+0xd94>
   188e4:	b	188e8 <print_json_data@@Base+0xd20>
   188e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   188ec:	cmp	r0, #92	; 0x5c
   188f0:	beq	18970 <print_json_data@@Base+0xda8>
   188f4:	b	18984 <print_json_data@@Base+0xdbc>
   188f8:	movw	r0, #56364	; 0xdc2c
   188fc:	movt	r0, #1
   18900:	bl	187e0 <print_json_data@@Base+0xc18>
   18904:	str	r0, [fp, #-24]	; 0xffffffe8
   18908:	b	189cc <print_json_data@@Base+0xe04>
   1890c:	movw	r0, #56376	; 0xdc38
   18910:	movt	r0, #1
   18914:	bl	187e0 <print_json_data@@Base+0xc18>
   18918:	str	r0, [sp, #28]
   1891c:	b	189cc <print_json_data@@Base+0xe04>
   18920:	movw	r0, #56370	; 0xdc32
   18924:	movt	r0, #1
   18928:	bl	187e0 <print_json_data@@Base+0xc18>
   1892c:	str	r0, [sp, #24]
   18930:	b	189cc <print_json_data@@Base+0xe04>
   18934:	movw	r0, #56379	; 0xdc3b
   18938:	movt	r0, #1
   1893c:	bl	187e0 <print_json_data@@Base+0xc18>
   18940:	str	r0, [sp, #20]
   18944:	b	189cc <print_json_data@@Base+0xe04>
   18948:	movw	r0, #56367	; 0xdc2f
   1894c:	movt	r0, #1
   18950:	bl	187e0 <print_json_data@@Base+0xc18>
   18954:	str	r0, [sp, #16]
   18958:	b	189cc <print_json_data@@Base+0xe04>
   1895c:	movw	r0, #58037	; 0xe2b5
   18960:	movt	r0, #1
   18964:	bl	187e0 <print_json_data@@Base+0xc18>
   18968:	str	r0, [sp, #12]
   1896c:	b	189cc <print_json_data@@Base+0xe04>
   18970:	movw	r0, #56382	; 0xdc3e
   18974:	movt	r0, #1
   18978:	bl	187e0 <print_json_data@@Base+0xc18>
   1897c:	str	r0, [sp, #8]
   18980:	b	189cc <print_json_data@@Base+0xe04>
   18984:	ldrb	r0, [fp, #-13]
   18988:	cmp	r0, #32
   1898c:	blt	189b4 <print_json_data@@Base+0xdec>
   18990:	ldrb	r0, [fp, #-13]
   18994:	cmp	r0, #126	; 0x7e
   18998:	bgt	189b4 <print_json_data@@Base+0xdec>
   1899c:	ldrb	r1, [fp, #-13]
   189a0:	movw	r0, #56221	; 0xdb9d
   189a4:	movt	r0, #1
   189a8:	bl	187e0 <print_json_data@@Base+0xc18>
   189ac:	str	r0, [sp, #4]
   189b0:	b	189c8 <print_json_data@@Base+0xe00>
   189b4:	ldrb	r1, [fp, #-13]
   189b8:	movw	r0, #58040	; 0xe2b8
   189bc:	movt	r0, #1
   189c0:	bl	187e0 <print_json_data@@Base+0xc18>
   189c4:	str	r0, [sp]
   189c8:	b	189cc <print_json_data@@Base+0xe04>
   189cc:	b	189d0 <print_json_data@@Base+0xe08>
   189d0:	ldr	r0, [fp, #-12]
   189d4:	add	r0, r0, #1
   189d8:	str	r0, [fp, #-12]
   189dc:	b	18860 <print_json_data@@Base+0xc98>
   189e0:	mov	sp, fp
   189e4:	pop	{fp, pc}

000189e8 <print_full_field_name@@Base>:
   189e8:	push	{fp, lr}
   189ec:	mov	fp, sp
   189f0:	sub	sp, sp, #112	; 0x70
   189f4:	str	r0, [fp, #-4]
   189f8:	str	r1, [fp, #-8]
   189fc:	str	r2, [fp, #-12]
   18a00:	ldr	r0, [fp, #-8]
   18a04:	cmp	r0, #1
   18a08:	bne	18c08 <print_full_field_name@@Base+0x220>
   18a0c:	movw	r0, #0
   18a10:	str	r0, [fp, #-20]	; 0xffffffec
   18a14:	str	r0, [fp, #-24]	; 0xffffffe8
   18a18:	str	r0, [fp, #-16]
   18a1c:	ldr	r0, [fp, #-16]
   18a20:	movw	r1, #480	; 0x1e0
   18a24:	movt	r1, #3
   18a28:	ldr	r1, [r1, #136]	; 0x88
   18a2c:	cmp	r0, r1
   18a30:	bge	18ba4 <print_full_field_name@@Base+0x1bc>
   18a34:	movw	r0, #480	; 0x1e0
   18a38:	movt	r0, #3
   18a3c:	add	r0, r0, #8
   18a40:	ldr	r1, [fp, #-16]
   18a44:	movw	r2, #480	; 0x1e0
   18a48:	movt	r2, #3
   18a4c:	add	r1, r2, r1, lsl #2
   18a50:	add	r1, r1, #8
   18a54:	ldr	r1, [r1]
   18a58:	str	r0, [fp, #-40]	; 0xffffffd8
   18a5c:	mov	r0, r1
   18a60:	sub	r1, fp, #28
   18a64:	bl	129fc <coda_type_get_class@plt>
   18a68:	cmp	r0, #0
   18a6c:	beq	18a7c <print_full_field_name@@Base+0x94>
   18a70:	movw	r0, #44732	; 0xaebc
   18a74:	movt	r0, #1
   18a78:	blx	r0
   18a7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18a80:	cmp	r0, #0
   18a84:	str	r0, [fp, #-44]	; 0xffffffd4
   18a88:	beq	18aa0 <print_full_field_name@@Base+0xb8>
   18a8c:	b	18a90 <print_full_field_name@@Base+0xa8>
   18a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   18a94:	cmp	r0, #1
   18a98:	beq	18af8 <print_full_field_name@@Base+0x110>
   18a9c:	b	18b8c <print_full_field_name@@Base+0x1a4>
   18aa0:	movw	r0, #3620	; 0xe24
   18aa4:	movw	r1, #480	; 0x1e0
   18aa8:	movt	r1, #3
   18aac:	add	r0, r1, r0
   18ab0:	ldr	r1, [fp, #-4]
   18ab4:	ldr	r2, [fp, #-20]	; 0xffffffec
   18ab8:	movw	r3, #480	; 0x1e0
   18abc:	movt	r3, #3
   18ac0:	add	r2, r3, r2, lsl #2
   18ac4:	movw	r3, #3620	; 0xe24
   18ac8:	add	r2, r2, r3
   18acc:	ldr	r2, [r2]
   18ad0:	str	r0, [fp, #-48]	; 0xffffffd0
   18ad4:	mov	r0, r1
   18ad8:	movw	r1, #58047	; 0xe2bf
   18adc:	movt	r1, #1
   18ae0:	bl	12810 <fprintf@plt>
   18ae4:	ldr	r1, [fp, #-20]	; 0xffffffec
   18ae8:	add	r1, r1, #1
   18aec:	str	r1, [fp, #-20]	; 0xffffffec
   18af0:	str	r0, [fp, #-52]	; 0xffffffcc
   18af4:	b	18b90 <print_full_field_name@@Base+0x1a8>
   18af8:	ldr	r0, [fp, #-16]
   18afc:	cmp	r0, #0
   18b00:	bne	18b18 <print_full_field_name@@Base+0x130>
   18b04:	ldr	r0, [fp, #-4]
   18b08:	movw	r1, #58051	; 0xe2c3
   18b0c:	movt	r1, #1
   18b10:	bl	12810 <fprintf@plt>
   18b14:	str	r0, [sp, #56]	; 0x38
   18b18:	movw	r0, #480	; 0x1e0
   18b1c:	movt	r0, #3
   18b20:	add	r0, r0, #800	; 0x320
   18b24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b28:	movw	r2, #80	; 0x50
   18b2c:	mul	r1, r1, r2
   18b30:	add	r0, r0, r1
   18b34:	ldr	r0, [r0, #4]
   18b38:	cmp	r0, #0
   18b3c:	ble	18b7c <print_full_field_name@@Base+0x194>
   18b40:	ldr	r0, [fp, #-4]
   18b44:	movw	r1, #58056	; 0xe2c8
   18b48:	movt	r1, #1
   18b4c:	bl	12810 <fprintf@plt>
   18b50:	ldr	r1, [fp, #-4]
   18b54:	ldr	lr, [fp, #-24]	; 0xffffffe8
   18b58:	str	r0, [sp, #52]	; 0x34
   18b5c:	mov	r0, r1
   18b60:	mov	r1, lr
   18b64:	bl	18e90 <print_full_field_name@@Base+0x4a8>
   18b68:	ldr	r0, [fp, #-4]
   18b6c:	movw	r1, #58305	; 0xe3c1
   18b70:	movt	r1, #1
   18b74:	bl	12810 <fprintf@plt>
   18b78:	str	r0, [sp, #48]	; 0x30
   18b7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b80:	add	r0, r0, #1
   18b84:	str	r0, [fp, #-24]	; 0xffffffe8
   18b88:	b	18b90 <print_full_field_name@@Base+0x1a8>
   18b8c:	b	18b90 <print_full_field_name@@Base+0x1a8>
   18b90:	b	18b94 <print_full_field_name@@Base+0x1ac>
   18b94:	ldr	r0, [fp, #-16]
   18b98:	add	r0, r0, #1
   18b9c:	str	r0, [fp, #-16]
   18ba0:	b	18a1c <print_full_field_name@@Base+0x34>
   18ba4:	ldr	r0, [fp, #-12]
   18ba8:	cmp	r0, #0
   18bac:	beq	18c04 <print_full_field_name@@Base+0x21c>
   18bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bb4:	movw	r1, #480	; 0x1e0
   18bb8:	movt	r1, #3
   18bbc:	ldr	r1, [r1, #3360]	; 0xd20
   18bc0:	cmp	r0, r1
   18bc4:	bge	18c04 <print_full_field_name@@Base+0x21c>
   18bc8:	ldr	r0, [fp, #-4]
   18bcc:	movw	r1, #58056	; 0xe2c8
   18bd0:	movt	r1, #1
   18bd4:	bl	12810 <fprintf@plt>
   18bd8:	ldr	r1, [fp, #-4]
   18bdc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   18be0:	str	r0, [sp, #44]	; 0x2c
   18be4:	mov	r0, r1
   18be8:	mov	r1, lr
   18bec:	bl	18e90 <print_full_field_name@@Base+0x4a8>
   18bf0:	ldr	r0, [fp, #-4]
   18bf4:	movw	r1, #58305	; 0xe3c1
   18bf8:	movt	r1, #1
   18bfc:	bl	12810 <fprintf@plt>
   18c00:	str	r0, [sp, #40]	; 0x28
   18c04:	b	18e88 <print_full_field_name@@Base+0x4a0>
   18c08:	movw	r0, #0
   18c0c:	str	r0, [fp, #-16]
   18c10:	ldr	r0, [fp, #-16]
   18c14:	movw	r1, #480	; 0x1e0
   18c18:	movt	r1, #3
   18c1c:	ldr	r1, [r1, #3748]	; 0xea4
   18c20:	cmp	r0, r1
   18c24:	bge	18ca0 <print_full_field_name@@Base+0x2b8>
   18c28:	ldr	r0, [fp, #-16]
   18c2c:	cmp	r0, #0
   18c30:	ble	18c48 <print_full_field_name@@Base+0x260>
   18c34:	ldr	r0, [fp, #-4]
   18c38:	movw	r1, #58053	; 0xe2c5
   18c3c:	movt	r1, #1
   18c40:	bl	12810 <fprintf@plt>
   18c44:	str	r0, [sp, #36]	; 0x24
   18c48:	movw	r0, #3620	; 0xe24
   18c4c:	movw	r1, #480	; 0x1e0
   18c50:	movt	r1, #3
   18c54:	add	r0, r1, r0
   18c58:	ldr	r1, [fp, #-4]
   18c5c:	ldr	r2, [fp, #-16]
   18c60:	movw	r3, #480	; 0x1e0
   18c64:	movt	r3, #3
   18c68:	add	r2, r3, r2, lsl #2
   18c6c:	movw	r3, #3620	; 0xe24
   18c70:	add	r2, r2, r3
   18c74:	ldr	r2, [r2]
   18c78:	str	r0, [sp, #32]
   18c7c:	mov	r0, r1
   18c80:	movw	r1, #58242	; 0xe382
   18c84:	movt	r1, #1
   18c88:	bl	12810 <fprintf@plt>
   18c8c:	str	r0, [sp, #28]
   18c90:	ldr	r0, [fp, #-16]
   18c94:	add	r0, r0, #1
   18c98:	str	r0, [fp, #-16]
   18c9c:	b	18c10 <print_full_field_name@@Base+0x228>
   18ca0:	ldr	r0, [fp, #-8]
   18ca4:	cmp	r0, #2
   18ca8:	bne	18e84 <print_full_field_name@@Base+0x49c>
   18cac:	movw	r0, #0
   18cb0:	str	r0, [fp, #-32]	; 0xffffffe0
   18cb4:	str	r0, [fp, #-16]
   18cb8:	ldr	r0, [fp, #-16]
   18cbc:	movw	r1, #480	; 0x1e0
   18cc0:	movt	r1, #3
   18cc4:	ldr	r1, [r1, #136]	; 0x88
   18cc8:	cmp	r0, r1
   18ccc:	bge	18dd0 <print_full_field_name@@Base+0x3e8>
   18cd0:	movw	r0, #480	; 0x1e0
   18cd4:	movt	r0, #3
   18cd8:	add	r0, r0, #8
   18cdc:	ldr	r1, [fp, #-16]
   18ce0:	movw	r2, #480	; 0x1e0
   18ce4:	movt	r2, #3
   18ce8:	add	r1, r2, r1, lsl #2
   18cec:	add	r1, r1, #8
   18cf0:	ldr	r1, [r1]
   18cf4:	str	r0, [sp, #24]
   18cf8:	mov	r0, r1
   18cfc:	sub	r1, fp, #36	; 0x24
   18d00:	bl	129fc <coda_type_get_class@plt>
   18d04:	cmp	r0, #0
   18d08:	beq	18d18 <print_full_field_name@@Base+0x330>
   18d0c:	movw	r0, #44732	; 0xaebc
   18d10:	movt	r0, #1
   18d14:	blx	r0
   18d18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18d1c:	cmp	r0, #1
   18d20:	bne	18dbc <print_full_field_name@@Base+0x3d4>
   18d24:	movw	r0, #480	; 0x1e0
   18d28:	movt	r0, #3
   18d2c:	add	r0, r0, #800	; 0x320
   18d30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18d34:	movw	r2, #80	; 0x50
   18d38:	mul	r1, r1, r2
   18d3c:	add	r0, r0, r1
   18d40:	ldr	r0, [r0, #4]
   18d44:	cmp	r0, #0
   18d48:	ble	18db8 <print_full_field_name@@Base+0x3d0>
   18d4c:	movw	r0, #480	; 0x1e0
   18d50:	movt	r0, #3
   18d54:	add	r0, r0, #800	; 0x320
   18d58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18d5c:	movw	r2, #80	; 0x50
   18d60:	mul	r1, r1, r2
   18d64:	add	r0, r0, r1
   18d68:	ldr	r0, [r0]
   18d6c:	cmp	r0, #0
   18d70:	bne	18d8c <print_full_field_name@@Base+0x3a4>
   18d74:	ldr	r0, [fp, #-4]
   18d78:	movw	r1, #58055	; 0xe2c7
   18d7c:	movt	r1, #1
   18d80:	bl	12810 <fprintf@plt>
   18d84:	str	r0, [sp, #20]
   18d88:	b	18da0 <print_full_field_name@@Base+0x3b8>
   18d8c:	ldr	r0, [fp, #-4]
   18d90:	movw	r1, #56952	; 0xde78
   18d94:	movt	r1, #1
   18d98:	bl	12810 <fprintf@plt>
   18d9c:	str	r0, [sp, #16]
   18da0:	ldr	r0, [fp, #-4]
   18da4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18da8:	bl	18e90 <print_full_field_name@@Base+0x4a8>
   18dac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18db0:	add	r0, r0, #1
   18db4:	str	r0, [fp, #-32]	; 0xffffffe0
   18db8:	b	18dbc <print_full_field_name@@Base+0x3d4>
   18dbc:	b	18dc0 <print_full_field_name@@Base+0x3d8>
   18dc0:	ldr	r0, [fp, #-16]
   18dc4:	add	r0, r0, #1
   18dc8:	str	r0, [fp, #-16]
   18dcc:	b	18cb8 <print_full_field_name@@Base+0x2d0>
   18dd0:	ldr	r0, [fp, #-12]
   18dd4:	cmp	r0, #0
   18dd8:	beq	18e60 <print_full_field_name@@Base+0x478>
   18ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18de0:	movw	r1, #480	; 0x1e0
   18de4:	movt	r1, #3
   18de8:	ldr	r1, [r1, #3360]	; 0xd20
   18dec:	cmp	r0, r1
   18df0:	bge	18e60 <print_full_field_name@@Base+0x478>
   18df4:	movw	r0, #480	; 0x1e0
   18df8:	movt	r0, #3
   18dfc:	add	r0, r0, #800	; 0x320
   18e00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18e04:	movw	r2, #80	; 0x50
   18e08:	mul	r1, r1, r2
   18e0c:	add	r0, r0, r1
   18e10:	ldr	r0, [r0]
   18e14:	cmp	r0, #0
   18e18:	bne	18e34 <print_full_field_name@@Base+0x44c>
   18e1c:	ldr	r0, [fp, #-4]
   18e20:	movw	r1, #58055	; 0xe2c7
   18e24:	movt	r1, #1
   18e28:	bl	12810 <fprintf@plt>
   18e2c:	str	r0, [sp, #12]
   18e30:	b	18e48 <print_full_field_name@@Base+0x460>
   18e34:	ldr	r0, [fp, #-4]
   18e38:	movw	r1, #56952	; 0xde78
   18e3c:	movt	r1, #1
   18e40:	bl	12810 <fprintf@plt>
   18e44:	str	r0, [sp, #8]
   18e48:	ldr	r0, [fp, #-4]
   18e4c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18e50:	bl	18e90 <print_full_field_name@@Base+0x4a8>
   18e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e58:	add	r0, r0, #1
   18e5c:	str	r0, [fp, #-32]	; 0xffffffe0
   18e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e64:	cmp	r0, #0
   18e68:	ble	18e80 <print_full_field_name@@Base+0x498>
   18e6c:	ldr	r0, [fp, #-4]
   18e70:	movw	r1, #58305	; 0xe3c1
   18e74:	movt	r1, #1
   18e78:	bl	12810 <fprintf@plt>
   18e7c:	str	r0, [sp, #4]
   18e80:	b	18e84 <print_full_field_name@@Base+0x49c>
   18e84:	b	18e88 <print_full_field_name@@Base+0x4a0>
   18e88:	mov	sp, fp
   18e8c:	pop	{fp, pc}
   18e90:	push	{fp, lr}
   18e94:	mov	fp, sp
   18e98:	sub	sp, sp, #56	; 0x38
   18e9c:	movw	r2, #480	; 0x1e0
   18ea0:	movt	r2, #3
   18ea4:	add	r2, r2, #800	; 0x320
   18ea8:	str	r0, [fp, #-4]
   18eac:	str	r1, [fp, #-8]
   18eb0:	ldr	r0, [fp, #-8]
   18eb4:	movw	r1, #80	; 0x50
   18eb8:	mul	r0, r0, r1
   18ebc:	add	r0, r2, r0
   18ec0:	str	r0, [fp, #-12]
   18ec4:	movw	r0, #0
   18ec8:	str	r0, [fp, #-16]
   18ecc:	ldr	r0, [fp, #-16]
   18ed0:	ldr	r1, [fp, #-12]
   18ed4:	ldr	r1, [r1, #4]
   18ed8:	cmp	r0, r1
   18edc:	bge	19074 <print_full_field_name@@Base+0x68c>
   18ee0:	ldr	r0, [fp, #-16]
   18ee4:	cmp	r0, #0
   18ee8:	ble	18f00 <print_full_field_name@@Base+0x518>
   18eec:	ldr	r0, [fp, #-4]
   18ef0:	movw	r1, #56952	; 0xde78
   18ef4:	movt	r1, #1
   18ef8:	bl	12810 <fprintf@plt>
   18efc:	str	r0, [fp, #-20]	; 0xffffffec
   18f00:	movw	r0, #476	; 0x1dc
   18f04:	movt	r0, #3
   18f08:	ldr	r0, [r0]
   18f0c:	cmp	r0, #0
   18f10:	beq	19000 <print_full_field_name@@Base+0x618>
   18f14:	movw	r0, #4264	; 0x10a8
   18f18:	movt	r0, #3
   18f1c:	add	r0, r0, #72	; 0x48
   18f20:	ldr	r1, [fp, #-12]
   18f24:	ldr	r1, [r1]
   18f28:	ldr	r2, [fp, #-16]
   18f2c:	add	r1, r1, r2
   18f30:	movw	r2, #4264	; 0x10a8
   18f34:	movt	r2, #3
   18f38:	add	r1, r2, r1, lsl #2
   18f3c:	add	r1, r1, #72	; 0x48
   18f40:	ldr	r1, [r1]
   18f44:	cmp	r1, #0
   18f48:	str	r0, [fp, #-24]	; 0xffffffe8
   18f4c:	beq	18fb0 <print_full_field_name@@Base+0x5c8>
   18f50:	movw	r0, #4264	; 0x10a8
   18f54:	movt	r0, #3
   18f58:	add	r0, r0, #4
   18f5c:	ldr	r1, [fp, #-4]
   18f60:	ldr	r2, [fp, #-12]
   18f64:	ldr	r2, [r2]
   18f68:	ldr	r3, [fp, #-16]
   18f6c:	add	r2, r2, r3
   18f70:	movw	r3, #4264	; 0x10a8
   18f74:	movt	r3, #3
   18f78:	add	r2, r3, r2, lsl #2
   18f7c:	ldr	r3, [r2, #36]	; 0x24
   18f80:	add	r2, r2, #4
   18f84:	ldr	r2, [r2]
   18f88:	str	r0, [sp, #28]
   18f8c:	mov	r0, r1
   18f90:	movw	r1, #58058	; 0xe2ca
   18f94:	movt	r1, #1
   18f98:	str	r2, [sp, #24]
   18f9c:	mov	r2, r3
   18fa0:	ldr	r3, [sp, #24]
   18fa4:	bl	12810 <fprintf@plt>
   18fa8:	str	r0, [sp, #20]
   18fac:	b	18ffc <print_full_field_name@@Base+0x614>
   18fb0:	movw	r0, #4264	; 0x10a8
   18fb4:	movt	r0, #3
   18fb8:	add	r0, r0, #4
   18fbc:	ldr	r1, [fp, #-4]
   18fc0:	ldr	r2, [fp, #-12]
   18fc4:	ldr	r2, [r2]
   18fc8:	ldr	r3, [fp, #-16]
   18fcc:	add	r2, r2, r3
   18fd0:	movw	r3, #4264	; 0x10a8
   18fd4:	movt	r3, #3
   18fd8:	add	r2, r3, r2, lsl #2
   18fdc:	add	r2, r2, #4
   18fe0:	ldr	r2, [r2]
   18fe4:	str	r0, [sp, #16]
   18fe8:	mov	r0, r1
   18fec:	movw	r1, #58062	; 0xe2ce
   18ff0:	movt	r1, #1
   18ff4:	bl	12810 <fprintf@plt>
   18ff8:	str	r0, [sp, #12]
   18ffc:	b	19060 <print_full_field_name@@Base+0x678>
   19000:	ldr	r0, [fp, #-12]
   19004:	add	r0, r0, #8
   19008:	ldr	r1, [fp, #-16]
   1900c:	add	r0, r0, r1, lsl #2
   19010:	ldr	r0, [r0]
   19014:	cmn	r0, #1
   19018:	bne	19034 <print_full_field_name@@Base+0x64c>
   1901c:	ldr	r0, [fp, #-4]
   19020:	movw	r1, #58066	; 0xe2d2
   19024:	movt	r1, #1
   19028:	bl	12810 <fprintf@plt>
   1902c:	str	r0, [sp, #8]
   19030:	b	1905c <print_full_field_name@@Base+0x674>
   19034:	ldr	r0, [fp, #-4]
   19038:	ldr	r1, [fp, #-12]
   1903c:	add	r1, r1, #8
   19040:	ldr	r2, [fp, #-16]
   19044:	add	r1, r1, r2, lsl #2
   19048:	ldr	r2, [r1]
   1904c:	movw	r1, #58062	; 0xe2ce
   19050:	movt	r1, #1
   19054:	bl	12810 <fprintf@plt>
   19058:	str	r0, [sp, #4]
   1905c:	b	19060 <print_full_field_name@@Base+0x678>
   19060:	b	19064 <print_full_field_name@@Base+0x67c>
   19064:	ldr	r0, [fp, #-16]
   19068:	add	r0, r0, #1
   1906c:	str	r0, [fp, #-16]
   19070:	b	18ecc <print_full_field_name@@Base+0x4e4>
   19074:	mov	sp, fp
   19078:	pop	{fp, pc}

0001907c <traverse_info_init@@Base>:
   1907c:	movw	r0, #480	; 0x1e0
   19080:	movt	r0, #3
   19084:	movw	r1, #0
   19088:	str	r1, [r0, #4]
   1908c:	str	r1, [r0, #136]	; 0x88
   19090:	str	r1, [r0, #3360]	; 0xd20
   19094:	str	r1, [r0, #3748]	; 0xea4
   19098:	bx	lr

0001909c <traverse_info_done@@Base>:
   1909c:	push	{fp, lr}
   190a0:	mov	fp, sp
   190a4:	sub	sp, sp, #8
   190a8:	movw	r0, #480	; 0x1e0
   190ac:	movt	r0, #3
   190b0:	ldr	r0, [r0, #4]
   190b4:	movw	r1, #0
   190b8:	cmp	r0, r1
   190bc:	beq	190d4 <traverse_info_done@@Base+0x38>
   190c0:	movw	r0, #480	; 0x1e0
   190c4:	movt	r0, #3
   190c8:	ldr	r0, [r0, #4]
   190cc:	bl	128e8 <coda_close@plt>
   190d0:	str	r0, [sp, #4]
   190d4:	movw	r0, #480	; 0x1e0
   190d8:	movt	r0, #3
   190dc:	ldr	r0, [r0, #664]	; 0x298
   190e0:	movw	r1, #0
   190e4:	cmp	r0, r1
   190e8:	beq	190fc <traverse_info_done@@Base+0x60>
   190ec:	movw	r0, #480	; 0x1e0
   190f0:	movt	r0, #3
   190f4:	add	r0, r0, #664	; 0x298
   190f8:	bl	1740c <codadump_filter_remove@@Base>
   190fc:	mov	sp, fp
   19100:	pop	{fp, pc}

00019104 <traverse_product@@Base>:
   19104:	push	{fp, lr}
   19108:	mov	fp, sp
   1910c:	sub	sp, sp, #24
   19110:	movw	r0, #480	; 0x1e0
   19114:	movt	r0, #3
   19118:	add	r1, r0, #4
   1911c:	ldr	r0, [r0]
   19120:	bl	12618 <coda_open@plt>
   19124:	str	r0, [fp, #-4]
   19128:	ldr	r0, [fp, #-4]
   1912c:	cmp	r0, #0
   19130:	beq	19178 <traverse_product@@Base+0x74>
   19134:	bl	129a8 <coda_get_errno@plt>
   19138:	ldr	r0, [r0]
   1913c:	cmn	r0, #21
   19140:	bne	19178 <traverse_product@@Base+0x74>
   19144:	movw	r0, #0
   19148:	bl	12660 <coda_set_option_use_mmap@plt>
   1914c:	movw	lr, #480	; 0x1e0
   19150:	movt	lr, #3
   19154:	add	r1, lr, #4
   19158:	ldr	lr, [lr]
   1915c:	str	r0, [fp, #-8]
   19160:	mov	r0, lr
   19164:	bl	12618 <coda_open@plt>
   19168:	str	r0, [fp, #-4]
   1916c:	movw	r0, #1
   19170:	bl	12660 <coda_set_option_use_mmap@plt>
   19174:	str	r0, [sp, #12]
   19178:	ldr	r0, [fp, #-4]
   1917c:	cmp	r0, #0
   19180:	beq	19190 <traverse_product@@Base+0x8c>
   19184:	movw	r0, #44732	; 0xaebc
   19188:	movt	r0, #1
   1918c:	blx	r0
   19190:	movw	r0, #480	; 0x1e0
   19194:	movt	r0, #3
   19198:	add	r1, r0, #144	; 0x90
   1919c:	ldr	r0, [r0, #4]
   191a0:	str	r0, [sp, #8]
   191a4:	mov	r0, r1
   191a8:	ldr	r1, [sp, #8]
   191ac:	bl	12738 <coda_cursor_set_product@plt>
   191b0:	cmp	r0, #0
   191b4:	beq	191c4 <traverse_product@@Base+0xc0>
   191b8:	movw	r0, #44732	; 0xaebc
   191bc:	movt	r0, #1
   191c0:	blx	r0
   191c4:	movw	r0, #480	; 0x1e0
   191c8:	movt	r0, #3
   191cc:	add	r1, r0, #144	; 0x90
   191d0:	add	r0, r0, #8
   191d4:	movw	r2, #480	; 0x1e0
   191d8:	movt	r2, #3
   191dc:	ldr	r3, [r2, #136]	; 0x88
   191e0:	add	r2, r2, r3, lsl #2
   191e4:	add	r2, r2, #8
   191e8:	str	r0, [sp, #4]
   191ec:	mov	r0, r1
   191f0:	mov	r1, r2
   191f4:	bl	1269c <coda_cursor_get_type@plt>
   191f8:	cmp	r0, #0
   191fc:	beq	1920c <traverse_product@@Base+0x108>
   19200:	movw	r0, #44732	; 0xaebc
   19204:	movt	r0, #1
   19208:	blx	r0
   1920c:	bl	1923c <traverse_product@@Base+0x138>
   19210:	movw	lr, #480	; 0x1e0
   19214:	movt	lr, #3
   19218:	ldr	r0, [lr, #4]
   1921c:	bl	128e8 <coda_close@plt>
   19220:	movw	lr, #480	; 0x1e0
   19224:	movt	lr, #3
   19228:	movw	r1, #0
   1922c:	str	r1, [lr, #4]
   19230:	str	r0, [sp]
   19234:	mov	sp, fp
   19238:	pop	{fp, pc}
   1923c:	push	{fp, lr}
   19240:	mov	fp, sp
   19244:	sub	sp, sp, #104	; 0x68
   19248:	movw	r0, #480	; 0x1e0
   1924c:	movt	r0, #3
   19250:	add	r0, r0, #8
   19254:	movw	r1, #480	; 0x1e0
   19258:	movt	r1, #3
   1925c:	ldr	r2, [r1, #136]	; 0x88
   19260:	add	r1, r1, r2, lsl #2
   19264:	add	r1, r1, #8
   19268:	ldr	r1, [r1]
   1926c:	str	r0, [fp, #-32]	; 0xffffffe0
   19270:	mov	r0, r1
   19274:	sub	r1, fp, #4
   19278:	bl	129fc <coda_type_get_class@plt>
   1927c:	cmp	r0, #0
   19280:	beq	19290 <traverse_product@@Base+0x18c>
   19284:	movw	r0, #44732	; 0xaebc
   19288:	movt	r0, #1
   1928c:	blx	r0
   19290:	ldr	r0, [fp, #-4]
   19294:	cmp	r0, #6
   19298:	str	r0, [fp, #-36]	; 0xffffffdc
   1929c:	bhi	19884 <traverse_product@@Base+0x780>
   192a0:	add	r0, pc, #8
   192a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   192a8:	ldr	r0, [r0, r1, lsl #2]
   192ac:	mov	pc, r0
   192b0:	andeq	r9, r1, ip, asr #5
   192b4:	strdeq	r9, [r1], -r8
   192b8:	andeq	r9, r1, r8, lsr #13
   192bc:	andeq	r9, r1, r8, lsr #13
   192c0:	andeq	r9, r1, r8, lsr #13
   192c4:	andeq	r9, r1, r8, lsr #13
   192c8:	andeq	r9, r1, r8, asr r7
   192cc:	movw	r0, #480	; 0x1e0
   192d0:	movt	r0, #3
   192d4:	ldr	r0, [r0, #136]	; 0x88
   192d8:	cmp	r0, #31
   192dc:	blt	192e4 <traverse_product@@Base+0x1e0>
   192e0:	b	19884 <traverse_product@@Base+0x780>
   192e4:	movw	r0, #480	; 0x1e0
   192e8:	movt	r0, #3
   192ec:	add	r0, r0, #8
   192f0:	movw	r1, #480	; 0x1e0
   192f4:	movt	r1, #3
   192f8:	ldr	r2, [r1, #3748]	; 0xea4
   192fc:	add	r2, r2, #1
   19300:	str	r2, [r1, #3748]	; 0xea4
   19304:	ldr	r2, [r1, #136]	; 0x88
   19308:	add	r1, r1, r2, lsl #2
   1930c:	add	r1, r1, #8
   19310:	ldr	r1, [r1]
   19314:	str	r0, [fp, #-40]	; 0xffffffd8
   19318:	mov	r0, r1
   1931c:	sub	r1, fp, #8
   19320:	bl	127bc <coda_type_get_num_record_fields@plt>
   19324:	cmp	r0, #0
   19328:	beq	19338 <traverse_product@@Base+0x234>
   1932c:	movw	r0, #44732	; 0xaebc
   19330:	movt	r0, #1
   19334:	blx	r0
   19338:	movw	r0, #480	; 0x1e0
   1933c:	movt	r0, #3
   19340:	add	r0, r0, #664	; 0x298
   19344:	movw	r1, #480	; 0x1e0
   19348:	movt	r1, #3
   1934c:	ldr	r2, [r1, #136]	; 0x88
   19350:	add	r2, r2, #1
   19354:	str	r2, [r1, #136]	; 0x88
   19358:	ldr	r2, [r1, #796]	; 0x31c
   1935c:	add	r1, r1, r2, lsl #2
   19360:	add	r1, r1, #664	; 0x298
   19364:	ldr	r1, [r1]
   19368:	movw	r2, #0
   1936c:	cmp	r1, r2
   19370:	str	r0, [fp, #-44]	; 0xffffffd4
   19374:	beq	19598 <traverse_product@@Base+0x494>
   19378:	movw	r0, #480	; 0x1e0
   1937c:	movt	r0, #3
   19380:	add	r0, r0, #664	; 0x298
   19384:	movw	r1, #480	; 0x1e0
   19388:	movt	r1, #3
   1938c:	ldr	r2, [r1, #796]	; 0x31c
   19390:	add	r1, r1, r2, lsl #2
   19394:	add	r1, r1, #664	; 0x298
   19398:	ldr	r1, [r1]
   1939c:	str	r1, [fp, #-16]
   193a0:	str	r0, [fp, #-48]	; 0xffffffd0
   193a4:	movw	r0, #480	; 0x1e0
   193a8:	movt	r0, #3
   193ac:	add	r0, r0, #664	; 0x298
   193b0:	movw	r1, #480	; 0x1e0
   193b4:	movt	r1, #3
   193b8:	ldr	r2, [r1, #796]	; 0x31c
   193bc:	add	r1, r1, r2, lsl #2
   193c0:	add	r1, r1, #664	; 0x298
   193c4:	ldr	r1, [r1]
   193c8:	movw	r2, #0
   193cc:	cmp	r1, r2
   193d0:	str	r0, [sp, #52]	; 0x34
   193d4:	beq	19568 <traverse_product@@Base+0x464>
   193d8:	movw	r0, #480	; 0x1e0
   193dc:	movt	r0, #3
   193e0:	add	r0, r0, #664	; 0x298
   193e4:	movw	r1, #480	; 0x1e0
   193e8:	movt	r1, #3
   193ec:	ldr	r2, [r1, #796]	; 0x31c
   193f0:	add	r1, r1, r2, lsl #2
   193f4:	add	r1, r1, #664	; 0x298
   193f8:	ldr	r1, [r1]
   193fc:	str	r0, [sp, #48]	; 0x30
   19400:	mov	r0, r1
   19404:	bl	1750c <codadump_filter_get_fieldname@@Base>
   19408:	str	r0, [fp, #-20]	; 0xffffffec
   1940c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19410:	movw	r1, #0
   19414:	cmp	r0, r1
   19418:	beq	19420 <traverse_product@@Base+0x31c>
   1941c:	b	19440 <traverse_product@@Base+0x33c>
   19420:	movw	r0, #58068	; 0xe2d4
   19424:	movt	r0, #1
   19428:	movw	r1, #58081	; 0xe2e1
   1942c:	movt	r1, #1
   19430:	movw	r2, #393	; 0x189
   19434:	movw	r3, #58168	; 0xe338
   19438:	movt	r3, #1
   1943c:	bl	129f0 <__assert_fail@plt>
   19440:	movw	r0, #480	; 0x1e0
   19444:	movt	r0, #3
   19448:	add	r0, r0, #8
   1944c:	movw	r1, #480	; 0x1e0
   19450:	movt	r1, #3
   19454:	ldr	r2, [r1, #136]	; 0x88
   19458:	sub	r2, r2, #1
   1945c:	add	r1, r1, r2, lsl #2
   19460:	add	r1, r1, #8
   19464:	ldr	r1, [r1]
   19468:	ldr	r2, [fp, #-20]	; 0xffffffec
   1946c:	str	r0, [sp, #44]	; 0x2c
   19470:	mov	r0, r1
   19474:	mov	r1, r2
   19478:	sub	r2, fp, #12
   1947c:	bl	12918 <coda_type_get_record_field_index_from_name@plt>
   19480:	cmp	r0, #0
   19484:	beq	194d0 <traverse_product@@Base+0x3cc>
   19488:	bl	129a8 <coda_get_errno@plt>
   1948c:	ldr	r0, [r0]
   19490:	cmn	r0, #102	; 0x66
   19494:	bne	194c4 <traverse_product@@Base+0x3c0>
   19498:	movw	r0, #424	; 0x1a8
   1949c:	movt	r0, #3
   194a0:	ldr	r0, [r0]
   194a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   194a8:	movw	r1, #58189	; 0xe34d
   194ac:	movt	r1, #1
   194b0:	bl	12810 <fprintf@plt>
   194b4:	movw	r1, #1
   194b8:	str	r0, [sp, #40]	; 0x28
   194bc:	mov	r0, r1
   194c0:	bl	127c8 <exit@plt>
   194c4:	movw	r0, #44732	; 0xaebc
   194c8:	movt	r0, #1
   194cc:	blx	r0
   194d0:	movw	r0, #480	; 0x1e0
   194d4:	movt	r0, #3
   194d8:	add	r0, r0, #664	; 0x298
   194dc:	movw	r1, #480	; 0x1e0
   194e0:	movt	r1, #3
   194e4:	ldr	r2, [r1, #796]	; 0x31c
   194e8:	add	r3, r1, #664	; 0x298
   194ec:	ldr	r2, [r3, r2, lsl #2]
   194f0:	str	r0, [sp, #36]	; 0x24
   194f4:	mov	r0, r2
   194f8:	str	r3, [sp, #32]
   194fc:	str	r1, [sp, #28]
   19500:	bl	17560 <codadump_filter_get_subfilter@@Base>
   19504:	ldr	r1, [sp, #28]
   19508:	ldr	r2, [r1, #796]	; 0x31c
   1950c:	ldr	r3, [sp, #32]
   19510:	add	r2, r3, r2, lsl #2
   19514:	str	r0, [r2, #4]
   19518:	ldr	r0, [r1, #796]	; 0x31c
   1951c:	add	r0, r0, #1
   19520:	str	r0, [r1, #796]	; 0x31c
   19524:	ldr	r0, [fp, #-12]
   19528:	mov	r1, #1
   1952c:	bl	1988c <traverse_product@@Base+0x788>
   19530:	ldr	r0, [sp, #28]
   19534:	ldr	r1, [r0, #796]	; 0x31c
   19538:	sub	r1, r1, #1
   1953c:	str	r1, [r0, #796]	; 0x31c
   19540:	ldr	r1, [r0, #796]	; 0x31c
   19544:	ldr	r2, [sp, #32]
   19548:	ldr	r0, [r2, r1, lsl #2]
   1954c:	bl	175b4 <codadump_filter_get_next_filter@@Base>
   19550:	ldr	r1, [sp, #28]
   19554:	ldr	r2, [r1, #796]	; 0x31c
   19558:	ldr	r3, [sp, #32]
   1955c:	add	r2, r3, r2, lsl #2
   19560:	str	r0, [r2]
   19564:	b	193a4 <traverse_product@@Base+0x2a0>
   19568:	movw	r0, #480	; 0x1e0
   1956c:	movt	r0, #3
   19570:	add	r0, r0, #664	; 0x298
   19574:	ldr	r1, [fp, #-16]
   19578:	movw	r2, #480	; 0x1e0
   1957c:	movt	r2, #3
   19580:	ldr	r3, [r2, #796]	; 0x31c
   19584:	add	r2, r2, r3, lsl #2
   19588:	add	r2, r2, #664	; 0x298
   1958c:	str	r1, [r2]
   19590:	str	r0, [sp, #24]
   19594:	b	195d0 <traverse_product@@Base+0x4cc>
   19598:	movw	r0, #0
   1959c:	str	r0, [fp, #-12]
   195a0:	ldr	r0, [fp, #-12]
   195a4:	ldr	r1, [fp, #-8]
   195a8:	cmp	r0, r1
   195ac:	bge	195cc <traverse_product@@Base+0x4c8>
   195b0:	ldr	r0, [fp, #-12]
   195b4:	movw	r1, #0
   195b8:	bl	1988c <traverse_product@@Base+0x788>
   195bc:	ldr	r0, [fp, #-12]
   195c0:	add	r0, r0, #1
   195c4:	str	r0, [fp, #-12]
   195c8:	b	195a0 <traverse_product@@Base+0x49c>
   195cc:	b	195d0 <traverse_product@@Base+0x4cc>
   195d0:	movw	r0, #480	; 0x1e0
   195d4:	movt	r0, #3
   195d8:	ldr	r1, [r0, #136]	; 0x88
   195dc:	mvn	r2, #0
   195e0:	add	r1, r1, r2
   195e4:	str	r1, [r0, #136]	; 0x88
   195e8:	ldr	r1, [r0, #3748]	; 0xea4
   195ec:	add	r1, r1, r2
   195f0:	str	r1, [r0, #3748]	; 0xea4
   195f4:	b	19884 <traverse_product@@Base+0x780>
   195f8:	movw	r0, #480	; 0x1e0
   195fc:	movt	r0, #3
   19600:	ldr	r0, [r0, #136]	; 0x88
   19604:	cmp	r0, #31
   19608:	blt	19610 <traverse_product@@Base+0x50c>
   1960c:	b	19884 <traverse_product@@Base+0x780>
   19610:	movw	r0, #480	; 0x1e0
   19614:	movt	r0, #3
   19618:	add	r0, r0, #8
   1961c:	str	r0, [sp, #20]
   19620:	bl	154d0 <dim_enter_array@@Base>
   19624:	movw	r0, #480	; 0x1e0
   19628:	movt	r0, #3
   1962c:	ldr	lr, [r0, #3360]	; 0xd20
   19630:	add	lr, lr, #1
   19634:	str	lr, [r0, #3360]	; 0xd20
   19638:	ldr	lr, [r0, #136]	; 0x88
   1963c:	add	lr, lr, #1
   19640:	str	lr, [r0, #136]	; 0x88
   19644:	ldr	lr, [r0, #136]	; 0x88
   19648:	add	r0, r0, lr, lsl #2
   1964c:	ldr	lr, [r0, #4]
   19650:	add	r1, r0, #8
   19654:	mov	r0, lr
   19658:	bl	128a0 <coda_type_get_array_base_type@plt>
   1965c:	cmp	r0, #0
   19660:	beq	19670 <traverse_product@@Base+0x56c>
   19664:	movw	r0, #44732	; 0xaebc
   19668:	movt	r0, #1
   1966c:	blx	r0
   19670:	bl	1923c <traverse_product@@Base+0x138>
   19674:	movw	lr, #27672	; 0x6c18
   19678:	movt	lr, #1
   1967c:	movw	r0, #480	; 0x1e0
   19680:	movt	r0, #3
   19684:	ldr	r1, [r0, #136]	; 0x88
   19688:	mvn	r2, #0
   1968c:	add	r1, r1, r2
   19690:	str	r1, [r0, #136]	; 0x88
   19694:	ldr	r1, [r0, #3360]	; 0xd20
   19698:	add	r1, r1, r2
   1969c:	str	r1, [r0, #3360]	; 0xd20
   196a0:	blx	lr
   196a4:	b	19884 <traverse_product@@Base+0x780>
   196a8:	movw	r0, #480	; 0x1e0
   196ac:	movt	r0, #3
   196b0:	add	r0, r0, #8
   196b4:	movw	r1, #480	; 0x1e0
   196b8:	movt	r1, #3
   196bc:	ldr	r2, [r1, #136]	; 0x88
   196c0:	add	r1, r1, r2, lsl #2
   196c4:	add	r1, r1, #8
   196c8:	ldr	r1, [r1]
   196cc:	str	r0, [sp, #16]
   196d0:	mov	r0, r1
   196d4:	sub	r1, fp, #24
   196d8:	bl	127d4 <coda_type_get_read_type@plt>
   196dc:	cmp	r0, #0
   196e0:	beq	196f0 <traverse_product@@Base+0x5ec>
   196e4:	movw	r0, #44732	; 0xaebc
   196e8:	movt	r0, #1
   196ec:	blx	r0
   196f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   196f4:	sub	r0, r0, #11
   196f8:	cmp	r0, #1
   196fc:	bhi	19750 <traverse_product@@Base+0x64c>
   19700:	b	19704 <traverse_product@@Base+0x600>
   19704:	movw	r0, #21712	; 0x54d0
   19708:	movt	r0, #1
   1970c:	blx	r0
   19710:	movw	r0, #480	; 0x1e0
   19714:	movt	r0, #3
   19718:	ldr	lr, [r0, #3360]	; 0xd20
   1971c:	add	lr, lr, #1
   19720:	str	lr, [r0, #3360]	; 0xd20
   19724:	bl	19aac <traverse_product@@Base+0x9a8>
   19728:	movw	r0, #27672	; 0x6c18
   1972c:	movt	r0, #1
   19730:	movw	lr, #480	; 0x1e0
   19734:	movt	lr, #3
   19738:	ldr	r1, [lr, #3360]	; 0xd20
   1973c:	mvn	r2, #0
   19740:	add	r1, r1, r2
   19744:	str	r1, [lr, #3360]	; 0xd20
   19748:	blx	r0
   1974c:	b	19754 <traverse_product@@Base+0x650>
   19750:	bl	19aac <traverse_product@@Base+0x9a8>
   19754:	b	19884 <traverse_product@@Base+0x780>
   19758:	bl	125b8 <coda_get_option_bypass_special_types@plt>
   1975c:	cmp	r0, #0
   19760:	beq	197ac <traverse_product@@Base+0x6a8>
   19764:	movw	r0, #480	; 0x1e0
   19768:	movt	r0, #3
   1976c:	add	r0, r0, #8
   19770:	movw	r1, #480	; 0x1e0
   19774:	movt	r1, #3
   19778:	ldr	r2, [r1, #136]	; 0x88
   1977c:	add	r1, r1, r2, lsl #2
   19780:	ldr	r2, [r1, #8]!
   19784:	str	r0, [sp, #12]
   19788:	mov	r0, r2
   1978c:	bl	129b4 <coda_type_get_special_base_type@plt>
   19790:	cmp	r0, #0
   19794:	beq	197a4 <traverse_product@@Base+0x6a0>
   19798:	movw	r0, #44732	; 0xaebc
   1979c:	movt	r0, #1
   197a0:	blx	r0
   197a4:	bl	1923c <traverse_product@@Base+0x138>
   197a8:	b	19884 <traverse_product@@Base+0x780>
   197ac:	movw	r0, #480	; 0x1e0
   197b0:	movt	r0, #3
   197b4:	add	r0, r0, #8
   197b8:	movw	r1, #480	; 0x1e0
   197bc:	movt	r1, #3
   197c0:	ldr	r2, [r1, #136]	; 0x88
   197c4:	add	r1, r1, r2, lsl #2
   197c8:	add	r1, r1, #8
   197cc:	ldr	r1, [r1]
   197d0:	str	r0, [sp, #8]
   197d4:	mov	r0, r1
   197d8:	sub	r1, fp, #28
   197dc:	bl	1287c <coda_type_get_special_type@plt>
   197e0:	cmp	r0, #0
   197e4:	beq	197f4 <traverse_product@@Base+0x6f0>
   197e8:	movw	r0, #44732	; 0xaebc
   197ec:	movt	r0, #1
   197f0:	blx	r0
   197f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   197f8:	cmp	r0, #0
   197fc:	str	r0, [sp, #4]
   19800:	beq	1982c <traverse_product@@Base+0x728>
   19804:	b	19808 <traverse_product@@Base+0x704>
   19808:	ldr	r0, [sp, #4]
   1980c:	sub	r1, r0, #1
   19810:	cmp	r1, #2
   19814:	bcc	19830 <traverse_product@@Base+0x72c>
   19818:	b	1981c <traverse_product@@Base+0x718>
   1981c:	ldr	r0, [sp, #4]
   19820:	cmp	r0, #3
   19824:	beq	19838 <traverse_product@@Base+0x734>
   19828:	b	19880 <traverse_product@@Base+0x77c>
   1982c:	b	19884 <traverse_product@@Base+0x780>
   19830:	bl	19aac <traverse_product@@Base+0x9a8>
   19834:	b	19880 <traverse_product@@Base+0x77c>
   19838:	movw	r0, #21712	; 0x54d0
   1983c:	movt	r0, #1
   19840:	blx	r0
   19844:	movw	r0, #480	; 0x1e0
   19848:	movt	r0, #3
   1984c:	ldr	lr, [r0, #3360]	; 0xd20
   19850:	add	lr, lr, #1
   19854:	str	lr, [r0, #3360]	; 0xd20
   19858:	bl	19aac <traverse_product@@Base+0x9a8>
   1985c:	movw	r0, #27672	; 0x6c18
   19860:	movt	r0, #1
   19864:	movw	lr, #480	; 0x1e0
   19868:	movt	lr, #3
   1986c:	ldr	r1, [lr, #3360]	; 0xd20
   19870:	mvn	r2, #0
   19874:	add	r1, r1, r2
   19878:	str	r1, [lr, #3360]	; 0xd20
   1987c:	blx	r0
   19880:	b	19884 <traverse_product@@Base+0x780>
   19884:	mov	sp, fp
   19888:	pop	{fp, pc}
   1988c:	push	{fp, lr}
   19890:	mov	fp, sp
   19894:	sub	sp, sp, #48	; 0x30
   19898:	movw	r2, #480	; 0x1e0
   1989c:	movt	r2, #3
   198a0:	add	r2, r2, #8
   198a4:	str	r0, [fp, #-4]
   198a8:	str	r1, [fp, #-8]
   198ac:	ldr	r0, [fp, #-4]
   198b0:	movw	r1, #480	; 0x1e0
   198b4:	movt	r1, #3
   198b8:	ldr	r3, [r1, #3748]	; 0xea4
   198bc:	add	r3, r1, r3, lsl #2
   198c0:	str	r0, [r3, #3488]	; 0xda0
   198c4:	ldr	r0, [r1, #136]	; 0x88
   198c8:	sub	r0, r0, #1
   198cc:	add	r0, r1, r0, lsl #2
   198d0:	add	r0, r0, #8
   198d4:	ldr	r0, [r0]
   198d8:	ldr	r1, [fp, #-4]
   198dc:	sub	r3, fp, #12
   198e0:	str	r2, [fp, #-20]	; 0xffffffec
   198e4:	mov	r2, r3
   198e8:	bl	125dc <coda_type_get_record_field_hidden_status@plt>
   198ec:	cmp	r0, #0
   198f0:	beq	19900 <traverse_product@@Base+0x7fc>
   198f4:	movw	r0, #44732	; 0xaebc
   198f8:	movt	r0, #1
   198fc:	blx	r0
   19900:	ldr	r0, [fp, #-12]
   19904:	cmp	r0, #0
   19908:	beq	1991c <traverse_product@@Base+0x818>
   1990c:	ldr	r0, [fp, #-8]
   19910:	cmp	r0, #0
   19914:	bne	1991c <traverse_product@@Base+0x818>
   19918:	b	19aa4 <traverse_product@@Base+0x9a0>
   1991c:	movw	r0, #476	; 0x1dc
   19920:	movt	r0, #3
   19924:	ldr	r0, [r0]
   19928:	cmp	r0, #0
   1992c:	beq	199e4 <traverse_product@@Base+0x8e0>
   19930:	movw	r0, #480	; 0x1e0
   19934:	movt	r0, #3
   19938:	add	r0, r0, #8
   1993c:	movw	r1, #480	; 0x1e0
   19940:	movt	r1, #3
   19944:	ldr	r2, [r1, #136]	; 0x88
   19948:	sub	r2, r2, #1
   1994c:	add	r1, r1, r2, lsl #2
   19950:	add	r1, r1, #8
   19954:	ldr	r1, [r1]
   19958:	ldr	r2, [fp, #-4]
   1995c:	str	r0, [sp, #24]
   19960:	mov	r0, r1
   19964:	mov	r1, r2
   19968:	sub	r2, fp, #16
   1996c:	bl	126cc <coda_type_get_record_field_available_status@plt>
   19970:	cmp	r0, #0
   19974:	beq	19984 <traverse_product@@Base+0x880>
   19978:	movw	r0, #44732	; 0xaebc
   1997c:	movt	r0, #1
   19980:	blx	r0
   19984:	ldr	r0, [fp, #-16]
   19988:	cmn	r0, #1
   1998c:	bne	199ac <traverse_product@@Base+0x8a8>
   19990:	movw	r0, #28308	; 0x6e94
   19994:	movt	r0, #1
   19998:	blx	r0
   1999c:	cmp	r0, #0
   199a0:	bne	199a8 <traverse_product@@Base+0x8a4>
   199a4:	b	19aa4 <traverse_product@@Base+0x9a0>
   199a8:	b	199ac <traverse_product@@Base+0x8a8>
   199ac:	movw	r0, #3364	; 0xd24
   199b0:	movw	r1, #480	; 0x1e0
   199b4:	movt	r1, #3
   199b8:	add	r0, r1, r0
   199bc:	ldr	r1, [fp, #-16]
   199c0:	movw	r2, #480	; 0x1e0
   199c4:	movt	r2, #3
   199c8:	ldr	r3, [r2, #136]	; 0x88
   199cc:	sub	r3, r3, #1
   199d0:	add	r2, r2, r3, lsl #2
   199d4:	movw	r3, #3364	; 0xd24
   199d8:	add	r2, r2, r3
   199dc:	str	r1, [r2]
   199e0:	str	r0, [sp, #20]
   199e4:	movw	r0, #3620	; 0xe24
   199e8:	movw	r1, #480	; 0x1e0
   199ec:	movt	r1, #3
   199f0:	add	r0, r1, r0
   199f4:	movw	r1, #480	; 0x1e0
   199f8:	movt	r1, #3
   199fc:	ldr	r2, [r1, #136]	; 0x88
   19a00:	add	r2, r1, r2, lsl #2
   19a04:	ldr	r2, [r2, #4]
   19a08:	ldr	r3, [fp, #-4]
   19a0c:	ldr	ip, [r1, #3748]	; 0xea4
   19a10:	sub	ip, ip, #1
   19a14:	add	r1, r1, ip, lsl #2
   19a18:	movw	ip, #3620	; 0xe24
   19a1c:	add	r1, r1, ip
   19a20:	str	r0, [sp, #16]
   19a24:	mov	r0, r2
   19a28:	str	r1, [sp, #12]
   19a2c:	mov	r1, r3
   19a30:	ldr	r2, [sp, #12]
   19a34:	bl	129c0 <coda_type_get_record_field_name@plt>
   19a38:	cmp	r0, #0
   19a3c:	beq	19a4c <traverse_product@@Base+0x948>
   19a40:	movw	r0, #44732	; 0xaebc
   19a44:	movt	r0, #1
   19a48:	blx	r0
   19a4c:	movw	r0, #480	; 0x1e0
   19a50:	movt	r0, #3
   19a54:	add	r0, r0, #8
   19a58:	movw	r1, #480	; 0x1e0
   19a5c:	movt	r1, #3
   19a60:	ldr	r2, [r1, #136]	; 0x88
   19a64:	add	r1, r1, r2, lsl #2
   19a68:	ldr	r2, [r1, #4]
   19a6c:	ldr	r3, [fp, #-4]
   19a70:	add	r1, r1, #8
   19a74:	str	r0, [sp, #8]
   19a78:	mov	r0, r2
   19a7c:	str	r1, [sp, #4]
   19a80:	mov	r1, r3
   19a84:	ldr	r2, [sp, #4]
   19a88:	bl	12690 <coda_type_get_record_field_type@plt>
   19a8c:	cmp	r0, #0
   19a90:	beq	19aa0 <traverse_product@@Base+0x99c>
   19a94:	movw	r0, #44732	; 0xaebc
   19a98:	movt	r0, #1
   19a9c:	blx	r0
   19aa0:	bl	1923c <traverse_product@@Base+0x138>
   19aa4:	mov	sp, fp
   19aa8:	pop	{fp, pc}
   19aac:	push	{fp, lr}
   19ab0:	mov	fp, sp
   19ab4:	sub	sp, sp, #80	; 0x50
   19ab8:	movw	r0, #4252	; 0x109c
   19abc:	movt	r0, #3
   19ac0:	ldr	r0, [r0]
   19ac4:	cmp	r0, #0
   19ac8:	bne	19e4c <traverse_product@@Base+0xd48>
   19acc:	movw	r0, #428	; 0x1ac
   19ad0:	movt	r0, #3
   19ad4:	ldr	r0, [r0]
   19ad8:	movw	r1, #1
   19adc:	movw	r2, #0
   19ae0:	bl	189e8 <print_full_field_name@@Base>
   19ae4:	movw	r0, #4240	; 0x1090
   19ae8:	movt	r0, #3
   19aec:	ldr	r0, [r0]
   19af0:	cmp	r0, #0
   19af4:	beq	19cc0 <traverse_product@@Base+0xbbc>
   19af8:	movw	r0, #480	; 0x1e0
   19afc:	movt	r0, #3
   19b00:	add	r0, r0, #8
   19b04:	movw	r1, #480	; 0x1e0
   19b08:	movt	r1, #3
   19b0c:	ldr	r2, [r1, #136]	; 0x88
   19b10:	add	r1, r1, r2, lsl #2
   19b14:	add	r1, r1, #8
   19b18:	ldr	r1, [r1]
   19b1c:	str	r0, [fp, #-28]	; 0xffffffe4
   19b20:	mov	r0, r1
   19b24:	sub	r1, fp, #4
   19b28:	bl	129fc <coda_type_get_class@plt>
   19b2c:	cmp	r0, #0
   19b30:	beq	19b40 <traverse_product@@Base+0xa3c>
   19b34:	movw	r0, #44732	; 0xaebc
   19b38:	movt	r0, #1
   19b3c:	blx	r0
   19b40:	ldr	r0, [fp, #-4]
   19b44:	cmp	r0, #6
   19b48:	bne	19bbc <traverse_product@@Base+0xab8>
   19b4c:	movw	r0, #480	; 0x1e0
   19b50:	movt	r0, #3
   19b54:	add	r0, r0, #8
   19b58:	movw	r1, #480	; 0x1e0
   19b5c:	movt	r1, #3
   19b60:	ldr	r2, [r1, #136]	; 0x88
   19b64:	add	r1, r1, r2, lsl #2
   19b68:	add	r1, r1, #8
   19b6c:	ldr	r1, [r1]
   19b70:	str	r0, [fp, #-32]	; 0xffffffe0
   19b74:	mov	r0, r1
   19b78:	sub	r1, fp, #8
   19b7c:	bl	1287c <coda_type_get_special_type@plt>
   19b80:	cmp	r0, #0
   19b84:	beq	19b94 <traverse_product@@Base+0xa90>
   19b88:	movw	r0, #44732	; 0xaebc
   19b8c:	movt	r0, #1
   19b90:	blx	r0
   19b94:	ldr	r0, [fp, #-8]
   19b98:	bl	12594 <coda_type_get_special_type_name@plt>
   19b9c:	movw	lr, #58241	; 0xe381
   19ba0:	movt	lr, #1
   19ba4:	str	r0, [fp, #-36]	; 0xffffffdc
   19ba8:	mov	r0, lr
   19bac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19bb0:	bl	125e8 <printf@plt>
   19bb4:	str	r0, [sp, #40]	; 0x28
   19bb8:	b	19cbc <traverse_product@@Base+0xbb8>
   19bbc:	movw	r0, #480	; 0x1e0
   19bc0:	movt	r0, #3
   19bc4:	add	r0, r0, #8
   19bc8:	movw	r1, #480	; 0x1e0
   19bcc:	movt	r1, #3
   19bd0:	ldr	r2, [r1, #136]	; 0x88
   19bd4:	add	r1, r1, r2, lsl #2
   19bd8:	add	r1, r1, #8
   19bdc:	ldr	r1, [r1]
   19be0:	str	r0, [sp, #36]	; 0x24
   19be4:	mov	r0, r1
   19be8:	sub	r1, fp, #12
   19bec:	bl	127d4 <coda_type_get_read_type@plt>
   19bf0:	cmp	r0, #0
   19bf4:	beq	19c04 <traverse_product@@Base+0xb00>
   19bf8:	movw	r0, #44732	; 0xaebc
   19bfc:	movt	r0, #1
   19c00:	blx	r0
   19c04:	ldr	r0, [fp, #-12]
   19c08:	bl	128c4 <coda_type_get_native_type_name@plt>
   19c0c:	movw	lr, #58241	; 0xe381
   19c10:	movt	lr, #1
   19c14:	str	r0, [sp, #32]
   19c18:	mov	r0, lr
   19c1c:	ldr	r1, [sp, #32]
   19c20:	bl	125e8 <printf@plt>
   19c24:	ldr	r1, [fp, #-12]
   19c28:	cmp	r1, #11
   19c2c:	str	r0, [sp, #28]
   19c30:	beq	19c40 <traverse_product@@Base+0xb3c>
   19c34:	ldr	r0, [fp, #-12]
   19c38:	cmp	r0, #12
   19c3c:	bne	19cb8 <traverse_product@@Base+0xbb4>
   19c40:	movw	r0, #56964	; 0xde84
   19c44:	movt	r0, #1
   19c48:	bl	125e8 <printf@plt>
   19c4c:	movw	lr, #480	; 0x1e0
   19c50:	movt	lr, #3
   19c54:	ldr	lr, [lr, #3360]	; 0xd20
   19c58:	cmp	lr, #0
   19c5c:	str	r0, [sp, #24]
   19c60:	ble	19c68 <traverse_product@@Base+0xb64>
   19c64:	b	19c88 <traverse_product@@Base+0xb84>
   19c68:	movw	r0, #58245	; 0xe385
   19c6c:	movt	r0, #1
   19c70:	movw	r1, #58081	; 0xe2e1
   19c74:	movt	r1, #1
   19c78:	movw	r2, #238	; 0xee
   19c7c:	movw	r3, #58274	; 0xe3a2
   19c80:	movt	r3, #1
   19c84:	bl	129f0 <__assert_fail@plt>
   19c88:	movw	r0, #428	; 0x1ac
   19c8c:	movt	r0, #3
   19c90:	ldr	r0, [r0]
   19c94:	movw	r1, #480	; 0x1e0
   19c98:	movt	r1, #3
   19c9c:	ldr	r1, [r1, #3360]	; 0xd20
   19ca0:	sub	r1, r1, #1
   19ca4:	bl	18e90 <print_full_field_name@@Base+0x4a8>
   19ca8:	movw	r0, #58187	; 0xe34b
   19cac:	movt	r0, #1
   19cb0:	bl	125e8 <printf@plt>
   19cb4:	str	r0, [sp, #20]
   19cb8:	b	19cbc <traverse_product@@Base+0xbb8>
   19cbc:	b	19cc0 <traverse_product@@Base+0xbbc>
   19cc0:	movw	r0, #472	; 0x1d8
   19cc4:	movt	r0, #3
   19cc8:	ldr	r0, [r0]
   19ccc:	cmp	r0, #0
   19cd0:	beq	19d54 <traverse_product@@Base+0xc50>
   19cd4:	movw	r0, #480	; 0x1e0
   19cd8:	movt	r0, #3
   19cdc:	add	r0, r0, #8
   19ce0:	movw	r1, #480	; 0x1e0
   19ce4:	movt	r1, #3
   19ce8:	ldr	r2, [r1, #136]	; 0x88
   19cec:	add	r1, r1, r2, lsl #2
   19cf0:	add	r1, r1, #8
   19cf4:	ldr	r1, [r1]
   19cf8:	str	r0, [sp, #16]
   19cfc:	mov	r0, r1
   19d00:	sub	r1, fp, #16
   19d04:	bl	12708 <coda_type_get_unit@plt>
   19d08:	cmp	r0, #0
   19d0c:	beq	19d1c <traverse_product@@Base+0xc18>
   19d10:	movw	r0, #44732	; 0xaebc
   19d14:	movt	r0, #1
   19d18:	blx	r0
   19d1c:	ldr	r0, [fp, #-16]
   19d20:	movw	r1, #0
   19d24:	cmp	r0, r1
   19d28:	beq	19d50 <traverse_product@@Base+0xc4c>
   19d2c:	ldr	r0, [fp, #-16]
   19d30:	ldrb	r0, [r0]
   19d34:	cmp	r0, #0
   19d38:	beq	19d50 <traverse_product@@Base+0xc4c>
   19d3c:	ldr	r1, [fp, #-16]
   19d40:	movw	r0, #58301	; 0xe3bd
   19d44:	movt	r0, #1
   19d48:	bl	125e8 <printf@plt>
   19d4c:	str	r0, [sp, #12]
   19d50:	b	19d54 <traverse_product@@Base+0xc50>
   19d54:	movw	r0, #4244	; 0x1094
   19d58:	movt	r0, #3
   19d5c:	ldr	r0, [r0]
   19d60:	cmp	r0, #0
   19d64:	beq	19de8 <traverse_product@@Base+0xce4>
   19d68:	movw	r0, #480	; 0x1e0
   19d6c:	movt	r0, #3
   19d70:	add	r0, r0, #8
   19d74:	movw	r1, #480	; 0x1e0
   19d78:	movt	r1, #3
   19d7c:	ldr	r2, [r1, #136]	; 0x88
   19d80:	add	r1, r1, r2, lsl #2
   19d84:	add	r1, r1, #8
   19d88:	ldr	r1, [r1]
   19d8c:	str	r0, [sp, #8]
   19d90:	mov	r0, r1
   19d94:	sub	r1, fp, #20
   19d98:	bl	12714 <coda_type_get_description@plt>
   19d9c:	cmp	r0, #0
   19da0:	beq	19db0 <traverse_product@@Base+0xcac>
   19da4:	movw	r0, #44732	; 0xaebc
   19da8:	movt	r0, #1
   19dac:	blx	r0
   19db0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19db4:	movw	r1, #0
   19db8:	cmp	r0, r1
   19dbc:	beq	19de4 <traverse_product@@Base+0xce0>
   19dc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   19dc4:	ldrb	r0, [r0]
   19dc8:	cmp	r0, #0
   19dcc:	beq	19de4 <traverse_product@@Base+0xce0>
   19dd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   19dd4:	movw	r0, #58307	; 0xe3c3
   19dd8:	movt	r0, #1
   19ddc:	bl	125e8 <printf@plt>
   19de0:	str	r0, [sp, #4]
   19de4:	b	19de8 <traverse_product@@Base+0xce4>
   19de8:	movw	r0, #62873	; 0xf599
   19dec:	movt	r0, #1
   19df0:	bl	125e8 <printf@plt>
   19df4:	movw	lr, #460	; 0x1cc
   19df8:	movt	lr, #3
   19dfc:	ldr	lr, [lr]
   19e00:	cmp	lr, #0
   19e04:	str	r0, [sp]
   19e08:	beq	19e48 <traverse_product@@Base+0xd44>
   19e0c:	movw	r0, #0
   19e10:	str	r0, [fp, #-24]	; 0xffffffe8
   19e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e18:	movw	r1, #4264	; 0x10a8
   19e1c:	movt	r1, #3
   19e20:	ldr	r1, [r1]
   19e24:	cmp	r0, r1
   19e28:	bge	19e44 <traverse_product@@Base+0xd40>
   19e2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e30:	bl	150fc <print_all_distinct_dims@@Base>
   19e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e38:	add	r0, r0, #1
   19e3c:	str	r0, [fp, #-24]	; 0xffffffe8
   19e40:	b	19e14 <traverse_product@@Base+0xd10>
   19e44:	b	19e48 <traverse_product@@Base+0xd44>
   19e48:	b	19e70 <traverse_product@@Base+0xd6c>
   19e4c:	movw	r0, #4252	; 0x109c
   19e50:	movt	r0, #3
   19e54:	ldr	r0, [r0]
   19e58:	cmp	r0, #1
   19e5c:	bne	19e6c <traverse_product@@Base+0xd68>
   19e60:	movw	r0, #11000	; 0x2af8
   19e64:	movt	r0, #1
   19e68:	blx	r0
   19e6c:	b	19e70 <traverse_product@@Base+0xd6c>
   19e70:	mov	sp, fp
   19e74:	pop	{fp, pc}

00019e78 <print_yaml_data@@Base>:
   19e78:	push	{r4, r5, fp, lr}
   19e7c:	add	fp, sp, #8
   19e80:	sub	sp, sp, #552	; 0x228
   19e84:	str	r0, [fp, #-12]
   19e88:	ldr	r0, [fp, #-12]
   19e8c:	movw	r1, #444	; 0x1bc
   19e90:	movt	r1, #3
   19e94:	str	r0, [r1]
   19e98:	movw	r0, #480	; 0x1e0
   19e9c:	movt	r0, #3
   19ea0:	ldr	r0, [r0]
   19ea4:	sub	r1, fp, #16
   19ea8:	bl	12618 <coda_open@plt>
   19eac:	str	r0, [sp, #20]
   19eb0:	ldr	r0, [sp, #20]
   19eb4:	cmp	r0, #0
   19eb8:	beq	19f00 <print_yaml_data@@Base+0x88>
   19ebc:	bl	129a8 <coda_get_errno@plt>
   19ec0:	ldr	r0, [r0]
   19ec4:	cmn	r0, #21
   19ec8:	bne	19f00 <print_yaml_data@@Base+0x88>
   19ecc:	movw	r0, #0
   19ed0:	bl	12660 <coda_set_option_use_mmap@plt>
   19ed4:	movw	lr, #480	; 0x1e0
   19ed8:	movt	lr, #3
   19edc:	ldr	lr, [lr]
   19ee0:	str	r0, [sp, #16]
   19ee4:	mov	r0, lr
   19ee8:	sub	r1, fp, #16
   19eec:	bl	12618 <coda_open@plt>
   19ef0:	str	r0, [sp, #20]
   19ef4:	movw	r0, #1
   19ef8:	bl	12660 <coda_set_option_use_mmap@plt>
   19efc:	str	r0, [sp, #12]
   19f00:	ldr	r0, [sp, #20]
   19f04:	cmp	r0, #0
   19f08:	beq	19f18 <print_yaml_data@@Base+0xa0>
   19f0c:	movw	r0, #44732	; 0xaebc
   19f10:	movt	r0, #1
   19f14:	blx	r0
   19f18:	ldr	r1, [fp, #-16]
   19f1c:	add	r0, sp, #24
   19f20:	bl	12738 <coda_cursor_set_product@plt>
   19f24:	cmp	r0, #0
   19f28:	beq	19f38 <print_yaml_data@@Base+0xc0>
   19f2c:	movw	r0, #44732	; 0xaebc
   19f30:	movt	r0, #1
   19f34:	blx	r0
   19f38:	movw	r0, #4256	; 0x10a0
   19f3c:	movt	r0, #3
   19f40:	ldr	r0, [r0]
   19f44:	movw	r1, #0
   19f48:	cmp	r0, r1
   19f4c:	beq	19f84 <print_yaml_data@@Base+0x10c>
   19f50:	movw	r0, #4256	; 0x10a0
   19f54:	movt	r0, #3
   19f58:	ldr	r1, [r0]
   19f5c:	add	r0, sp, #24
   19f60:	bl	1290c <coda_cursor_goto@plt>
   19f64:	str	r0, [sp, #20]
   19f68:	ldr	r0, [sp, #20]
   19f6c:	cmp	r0, #0
   19f70:	beq	19f80 <print_yaml_data@@Base+0x108>
   19f74:	movw	r0, #44732	; 0xaebc
   19f78:	movt	r0, #1
   19f7c:	blx	r0
   19f80:	b	19f84 <print_yaml_data@@Base+0x10c>
   19f84:	movw	r0, #0
   19f88:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   19f8c:	add	lr, sp, #24
   19f90:	str	r0, [sp, #8]
   19f94:	mov	r0, lr
   19f98:	movw	r1, #0
   19f9c:	bl	19fb4 <print_yaml_data@@Base+0x13c>
   19fa0:	ldr	r0, [fp, #-16]
   19fa4:	bl	128e8 <coda_close@plt>
   19fa8:	str	r0, [sp, #4]
   19fac:	sub	sp, fp, #8
   19fb0:	pop	{r4, r5, fp, pc}
   19fb4:	push	{r4, r5, fp, lr}
   19fb8:	add	fp, sp, #8
   19fbc:	sub	sp, sp, #448	; 0x1c0
   19fc0:	str	r0, [fp, #-12]
   19fc4:	str	r1, [fp, #-16]
   19fc8:	movw	r0, #0
   19fcc:	str	r0, [fp, #-24]	; 0xffffffe8
   19fd0:	movw	r0, #444	; 0x1bc
   19fd4:	movt	r0, #3
   19fd8:	ldr	r0, [r0]
   19fdc:	cmp	r0, #0
   19fe0:	beq	1a0d0 <print_yaml_data@@Base+0x258>
   19fe4:	ldr	r0, [fp, #-12]
   19fe8:	sub	r1, fp, #24
   19fec:	bl	126d8 <coda_cursor_has_attributes@plt>
   19ff0:	cmp	r0, #0
   19ff4:	beq	1a004 <print_yaml_data@@Base+0x18c>
   19ff8:	movw	r0, #44732	; 0xaebc
   19ffc:	movt	r0, #1
   1a000:	blx	r0
   1a004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a008:	cmp	r0, #0
   1a00c:	beq	1a0cc <print_yaml_data@@Base+0x254>
   1a010:	ldr	r0, [fp, #-16]
   1a014:	cmp	r0, #0
   1a018:	beq	1a030 <print_yaml_data@@Base+0x1b8>
   1a01c:	movw	r0, #62873	; 0xf599
   1a020:	movt	r0, #1
   1a024:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a028:	str	r0, [sp, #156]	; 0x9c
   1a02c:	bl	1ac18 <print_yaml_data@@Base+0xda0>
   1a030:	movw	r0, #58313	; 0xe3c9
   1a034:	movt	r0, #1
   1a038:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a03c:	ldr	lr, [fp, #-12]
   1a040:	str	r0, [sp, #152]	; 0x98
   1a044:	mov	r0, lr
   1a048:	bl	1284c <coda_cursor_goto_attributes@plt>
   1a04c:	cmp	r0, #0
   1a050:	beq	1a060 <print_yaml_data@@Base+0x1e8>
   1a054:	movw	r0, #44732	; 0xaebc
   1a058:	movt	r0, #1
   1a05c:	blx	r0
   1a060:	movw	r0, #448	; 0x1c0
   1a064:	movt	r0, #3
   1a068:	ldr	r1, [r0]
   1a06c:	add	r1, r1, #1
   1a070:	str	r1, [r0]
   1a074:	ldr	r0, [fp, #-12]
   1a078:	movw	r1, #1
   1a07c:	bl	19fb4 <print_yaml_data@@Base+0x13c>
   1a080:	movw	r0, #448	; 0x1c0
   1a084:	movt	r0, #3
   1a088:	ldr	r1, [r0]
   1a08c:	mvn	lr, #0
   1a090:	add	r1, r1, lr
   1a094:	str	r1, [r0]
   1a098:	ldr	r0, [fp, #-12]
   1a09c:	bl	127b0 <coda_cursor_goto_parent@plt>
   1a0a0:	movw	r1, #58320	; 0xe3d0
   1a0a4:	movt	r1, #1
   1a0a8:	str	r0, [sp, #148]	; 0x94
   1a0ac:	mov	r0, r1
   1a0b0:	bl	1acb0 <print_yaml_data@@Base+0xe38>
   1a0b4:	movw	r1, #448	; 0x1c0
   1a0b8:	movt	r1, #3
   1a0bc:	ldr	lr, [r1]
   1a0c0:	add	lr, lr, #1
   1a0c4:	str	lr, [r1]
   1a0c8:	str	r0, [sp, #144]	; 0x90
   1a0cc:	b	1a0d0 <print_yaml_data@@Base+0x258>
   1a0d0:	ldr	r0, [fp, #-12]
   1a0d4:	sub	r1, fp, #20
   1a0d8:	bl	126e4 <coda_cursor_get_type_class@plt>
   1a0dc:	cmp	r0, #0
   1a0e0:	beq	1a0f0 <print_yaml_data@@Base+0x278>
   1a0e4:	movw	r0, #44732	; 0xaebc
   1a0e8:	movt	r0, #1
   1a0ec:	blx	r0
   1a0f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a0f4:	cmp	r0, #6
   1a0f8:	str	r0, [sp, #140]	; 0x8c
   1a0fc:	bhi	1ab88 <print_yaml_data@@Base+0xd10>
   1a100:	add	r0, pc, #8
   1a104:	ldr	r1, [sp, #140]	; 0x8c
   1a108:	ldr	r0, [r0, r1, lsl #2]
   1a10c:	mov	pc, r0
   1a110:	andeq	sl, r1, ip, lsr #2
   1a114:	andeq	sl, r1, r0, lsl r4
   1a118:	andeq	sl, r1, ip, lsr #11
   1a11c:	andeq	sl, r1, ip, lsr #11
   1a120:	andeq	sl, r1, ip, lsr #11
   1a124:	andeq	sl, r1, ip, lsr #11
   1a128:	strdeq	sl, [r1], -r8
   1a12c:	ldr	r0, [fp, #-12]
   1a130:	sub	r1, fp, #28
   1a134:	bl	1263c <coda_cursor_get_num_elements@plt>
   1a138:	cmp	r0, #0
   1a13c:	beq	1a14c <print_yaml_data@@Base+0x2d4>
   1a140:	movw	r0, #44732	; 0xaebc
   1a144:	movt	r0, #1
   1a148:	blx	r0
   1a14c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a150:	cmp	r0, #0
   1a154:	ble	1a3fc <print_yaml_data@@Base+0x584>
   1a158:	ldr	r0, [fp, #-16]
   1a15c:	cmp	r0, #0
   1a160:	beq	1a174 <print_yaml_data@@Base+0x2fc>
   1a164:	movw	r0, #62873	; 0xf599
   1a168:	movt	r0, #1
   1a16c:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a170:	str	r0, [sp, #136]	; 0x88
   1a174:	ldr	r0, [fp, #-12]
   1a178:	sub	r1, fp, #32
   1a17c:	bl	1269c <coda_cursor_get_type@plt>
   1a180:	cmp	r0, #0
   1a184:	beq	1a194 <print_yaml_data@@Base+0x31c>
   1a188:	movw	r0, #44732	; 0xaebc
   1a18c:	movt	r0, #1
   1a190:	blx	r0
   1a194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a198:	sub	r1, fp, #36	; 0x24
   1a19c:	bl	12888 <coda_type_get_record_union_status@plt>
   1a1a0:	cmp	r0, #0
   1a1a4:	beq	1a1b4 <print_yaml_data@@Base+0x33c>
   1a1a8:	movw	r0, #44732	; 0xaebc
   1a1ac:	movt	r0, #1
   1a1b0:	blx	r0
   1a1b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a1b8:	cmp	r0, #0
   1a1bc:	beq	1a294 <print_yaml_data@@Base+0x41c>
   1a1c0:	ldr	r0, [fp, #-12]
   1a1c4:	sub	r1, fp, #40	; 0x28
   1a1c8:	bl	12978 <coda_cursor_get_available_union_field_index@plt>
   1a1cc:	cmp	r0, #0
   1a1d0:	beq	1a1e0 <print_yaml_data@@Base+0x368>
   1a1d4:	movw	r0, #44732	; 0xaebc
   1a1d8:	movt	r0, #1
   1a1dc:	blx	r0
   1a1e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1e4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a1e8:	sub	r2, fp, #44	; 0x2c
   1a1ec:	bl	129c0 <coda_type_get_record_field_name@plt>
   1a1f0:	cmp	r0, #0
   1a1f4:	beq	1a204 <print_yaml_data@@Base+0x38c>
   1a1f8:	movw	r0, #44732	; 0xaebc
   1a1fc:	movt	r0, #1
   1a200:	blx	r0
   1a204:	ldr	r0, [fp, #-12]
   1a208:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a20c:	bl	1275c <coda_cursor_goto_record_field_by_index@plt>
   1a210:	cmp	r0, #0
   1a214:	beq	1a224 <print_yaml_data@@Base+0x3ac>
   1a218:	movw	r0, #44732	; 0xaebc
   1a21c:	movt	r0, #1
   1a220:	blx	r0
   1a224:	ldr	r0, [fp, #-16]
   1a228:	cmp	r0, #0
   1a22c:	beq	1a234 <print_yaml_data@@Base+0x3bc>
   1a230:	bl	1ac18 <print_yaml_data@@Base+0xda0>
   1a234:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a238:	movw	r0, #58327	; 0xe3d7
   1a23c:	movt	r0, #1
   1a240:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a244:	movw	r1, #448	; 0x1c0
   1a248:	movt	r1, #3
   1a24c:	ldr	lr, [r1]
   1a250:	add	lr, lr, #1
   1a254:	str	lr, [r1]
   1a258:	ldr	r1, [fp, #-12]
   1a25c:	str	r0, [sp, #132]	; 0x84
   1a260:	mov	r0, r1
   1a264:	movw	r1, #1
   1a268:	bl	19fb4 <print_yaml_data@@Base+0x13c>
   1a26c:	movw	r0, #448	; 0x1c0
   1a270:	movt	r0, #3
   1a274:	ldr	r1, [r0]
   1a278:	mvn	lr, #0
   1a27c:	add	r1, r1, lr
   1a280:	str	r1, [r0]
   1a284:	ldr	r0, [fp, #-12]
   1a288:	bl	127b0 <coda_cursor_goto_parent@plt>
   1a28c:	str	r0, [sp, #128]	; 0x80
   1a290:	b	1a3f8 <print_yaml_data@@Base+0x580>
   1a294:	movw	r0, #1
   1a298:	str	r0, [fp, #-48]	; 0xffffffd0
   1a29c:	ldr	r0, [fp, #-12]
   1a2a0:	bl	12750 <coda_cursor_goto_first_record_field@plt>
   1a2a4:	cmp	r0, #0
   1a2a8:	beq	1a2b8 <print_yaml_data@@Base+0x440>
   1a2ac:	movw	r0, #44732	; 0xaebc
   1a2b0:	movt	r0, #1
   1a2b4:	blx	r0
   1a2b8:	movw	r0, #0
   1a2bc:	str	r0, [fp, #-40]	; 0xffffffd8
   1a2c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a2c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a2c8:	cmp	r0, r1
   1a2cc:	bge	1a3ec <print_yaml_data@@Base+0x574>
   1a2d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a2d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a2d8:	sub	r2, fp, #56	; 0x38
   1a2dc:	bl	125dc <coda_type_get_record_field_hidden_status@plt>
   1a2e0:	cmp	r0, #0
   1a2e4:	beq	1a2f4 <print_yaml_data@@Base+0x47c>
   1a2e8:	movw	r0, #44732	; 0xaebc
   1a2ec:	movt	r0, #1
   1a2f0:	blx	r0
   1a2f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a2f8:	cmp	r0, #0
   1a2fc:	bne	1a3a4 <print_yaml_data@@Base+0x52c>
   1a300:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a304:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a308:	sub	r2, fp, #52	; 0x34
   1a30c:	bl	129c0 <coda_type_get_record_field_name@plt>
   1a310:	cmp	r0, #0
   1a314:	beq	1a324 <print_yaml_data@@Base+0x4ac>
   1a318:	movw	r0, #44732	; 0xaebc
   1a31c:	movt	r0, #1
   1a320:	blx	r0
   1a324:	ldr	r0, [fp, #-16]
   1a328:	cmp	r0, #0
   1a32c:	bne	1a33c <print_yaml_data@@Base+0x4c4>
   1a330:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a334:	cmp	r0, #0
   1a338:	bne	1a340 <print_yaml_data@@Base+0x4c8>
   1a33c:	bl	1ac18 <print_yaml_data@@Base+0xda0>
   1a340:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a344:	cmp	r0, #0
   1a348:	beq	1a354 <print_yaml_data@@Base+0x4dc>
   1a34c:	movw	r0, #0
   1a350:	str	r0, [fp, #-48]	; 0xffffffd0
   1a354:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a358:	movw	r0, #58327	; 0xe3d7
   1a35c:	movt	r0, #1
   1a360:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a364:	movw	r1, #448	; 0x1c0
   1a368:	movt	r1, #3
   1a36c:	ldr	lr, [r1]
   1a370:	add	lr, lr, #1
   1a374:	str	lr, [r1]
   1a378:	ldr	r1, [fp, #-12]
   1a37c:	str	r0, [sp, #124]	; 0x7c
   1a380:	mov	r0, r1
   1a384:	movw	r1, #1
   1a388:	bl	19fb4 <print_yaml_data@@Base+0x13c>
   1a38c:	movw	r0, #448	; 0x1c0
   1a390:	movt	r0, #3
   1a394:	ldr	r1, [r0]
   1a398:	mvn	lr, #0
   1a39c:	add	r1, r1, lr
   1a3a0:	str	r1, [r0]
   1a3a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a3ac:	sub	r1, r1, #1
   1a3b0:	cmp	r0, r1
   1a3b4:	bge	1a3d8 <print_yaml_data@@Base+0x560>
   1a3b8:	ldr	r0, [fp, #-12]
   1a3bc:	bl	12930 <coda_cursor_goto_next_record_field@plt>
   1a3c0:	cmp	r0, #0
   1a3c4:	beq	1a3d4 <print_yaml_data@@Base+0x55c>
   1a3c8:	movw	r0, #44732	; 0xaebc
   1a3cc:	movt	r0, #1
   1a3d0:	blx	r0
   1a3d4:	b	1a3d8 <print_yaml_data@@Base+0x560>
   1a3d8:	b	1a3dc <print_yaml_data@@Base+0x564>
   1a3dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a3e0:	add	r0, r0, #1
   1a3e4:	str	r0, [fp, #-40]	; 0xffffffd8
   1a3e8:	b	1a2c0 <print_yaml_data@@Base+0x448>
   1a3ec:	ldr	r0, [fp, #-12]
   1a3f0:	bl	127b0 <coda_cursor_goto_parent@plt>
   1a3f4:	str	r0, [sp, #120]	; 0x78
   1a3f8:	b	1a40c <print_yaml_data@@Base+0x594>
   1a3fc:	movw	r0, #58332	; 0xe3dc
   1a400:	movt	r0, #1
   1a404:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a408:	str	r0, [sp, #116]	; 0x74
   1a40c:	b	1ab88 <print_yaml_data@@Base+0xd10>
   1a410:	sub	r2, fp, #88	; 0x58
   1a414:	ldr	r0, [fp, #-12]
   1a418:	sub	r1, fp, #92	; 0x5c
   1a41c:	bl	128d0 <coda_cursor_get_array_dim@plt>
   1a420:	cmp	r0, #0
   1a424:	beq	1a434 <print_yaml_data@@Base+0x5bc>
   1a428:	movw	r0, #44732	; 0xaebc
   1a42c:	movt	r0, #1
   1a430:	blx	r0
   1a434:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a438:	cmp	r0, #0
   1a43c:	blt	1a598 <print_yaml_data@@Base+0x720>
   1a440:	movw	r0, #1
   1a444:	str	r0, [fp, #-96]	; 0xffffffa0
   1a448:	movw	r0, #0
   1a44c:	str	r0, [fp, #-100]	; 0xffffff9c
   1a450:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a454:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1a458:	cmp	r0, r1
   1a45c:	bge	1a48c <print_yaml_data@@Base+0x614>
   1a460:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a464:	sub	r1, fp, #88	; 0x58
   1a468:	add	r0, r1, r0, lsl #2
   1a46c:	ldr	r0, [r0]
   1a470:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a474:	mul	r0, r1, r0
   1a478:	str	r0, [fp, #-96]	; 0xffffffa0
   1a47c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a480:	add	r0, r0, #1
   1a484:	str	r0, [fp, #-100]	; 0xffffff9c
   1a488:	b	1a450 <print_yaml_data@@Base+0x5d8>
   1a48c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1a490:	cmp	r0, #0
   1a494:	ble	1a584 <print_yaml_data@@Base+0x70c>
   1a498:	movw	r0, #62873	; 0xf599
   1a49c:	movt	r0, #1
   1a4a0:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a4a4:	ldr	lr, [fp, #-12]
   1a4a8:	str	r0, [sp, #112]	; 0x70
   1a4ac:	mov	r0, lr
   1a4b0:	bl	1272c <coda_cursor_goto_first_array_element@plt>
   1a4b4:	cmp	r0, #0
   1a4b8:	beq	1a4c8 <print_yaml_data@@Base+0x650>
   1a4bc:	movw	r0, #44732	; 0xaebc
   1a4c0:	movt	r0, #1
   1a4c4:	blx	r0
   1a4c8:	movw	r0, #0
   1a4cc:	str	r0, [fp, #-100]	; 0xffffff9c
   1a4d0:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a4d4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a4d8:	cmp	r0, r1
   1a4dc:	bge	1a574 <print_yaml_data@@Base+0x6fc>
   1a4e0:	movw	r0, #58336	; 0xe3e0
   1a4e4:	movt	r0, #1
   1a4e8:	bl	1acb0 <print_yaml_data@@Base+0xe38>
   1a4ec:	movw	lr, #448	; 0x1c0
   1a4f0:	movt	lr, #3
   1a4f4:	ldr	r1, [lr]
   1a4f8:	add	r1, r1, #1
   1a4fc:	str	r1, [lr]
   1a500:	ldr	r1, [fp, #-12]
   1a504:	str	r0, [sp, #108]	; 0x6c
   1a508:	mov	r0, r1
   1a50c:	movw	r1, #0
   1a510:	bl	19fb4 <print_yaml_data@@Base+0x13c>
   1a514:	movw	r0, #448	; 0x1c0
   1a518:	movt	r0, #3
   1a51c:	ldr	r1, [r0]
   1a520:	mvn	lr, #0
   1a524:	add	r1, r1, lr
   1a528:	str	r1, [r0]
   1a52c:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a530:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1a534:	sub	r1, r1, #1
   1a538:	cmp	r0, r1
   1a53c:	bge	1a560 <print_yaml_data@@Base+0x6e8>
   1a540:	ldr	r0, [fp, #-12]
   1a544:	bl	1281c <coda_cursor_goto_next_array_element@plt>
   1a548:	cmp	r0, #0
   1a54c:	beq	1a55c <print_yaml_data@@Base+0x6e4>
   1a550:	movw	r0, #44732	; 0xaebc
   1a554:	movt	r0, #1
   1a558:	blx	r0
   1a55c:	b	1a560 <print_yaml_data@@Base+0x6e8>
   1a560:	b	1a564 <print_yaml_data@@Base+0x6ec>
   1a564:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1a568:	add	r0, r0, #1
   1a56c:	str	r0, [fp, #-100]	; 0xffffff9c
   1a570:	b	1a4d0 <print_yaml_data@@Base+0x658>
   1a574:	ldr	r0, [fp, #-12]
   1a578:	bl	127b0 <coda_cursor_goto_parent@plt>
   1a57c:	str	r0, [sp, #104]	; 0x68
   1a580:	b	1a594 <print_yaml_data@@Base+0x71c>
   1a584:	movw	r0, #58339	; 0xe3e3
   1a588:	movt	r0, #1
   1a58c:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a590:	str	r0, [sp, #100]	; 0x64
   1a594:	b	1a5a8 <print_yaml_data@@Base+0x730>
   1a598:	movw	r0, #58339	; 0xe3e3
   1a59c:	movt	r0, #1
   1a5a0:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a5a4:	str	r0, [sp, #96]	; 0x60
   1a5a8:	b	1ab88 <print_yaml_data@@Base+0xd10>
   1a5ac:	ldr	r0, [fp, #-12]
   1a5b0:	sub	r1, fp, #104	; 0x68
   1a5b4:	bl	12774 <coda_cursor_get_read_type@plt>
   1a5b8:	cmp	r0, #0
   1a5bc:	beq	1a5cc <print_yaml_data@@Base+0x754>
   1a5c0:	movw	r0, #44732	; 0xaebc
   1a5c4:	movt	r0, #1
   1a5c8:	blx	r0
   1a5cc:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a5d0:	add	r0, r0, #1
   1a5d4:	cmp	r0, #13
   1a5d8:	str	r0, [sp, #92]	; 0x5c
   1a5dc:	bhi	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a5e0:	add	r0, pc, #8
   1a5e4:	ldr	r1, [sp, #92]	; 0x5c
   1a5e8:	ldr	r0, [r0, r1, lsl #2]
   1a5ec:	mov	pc, r0
   1a5f0:	andeq	sl, r1, r4, ror #19
   1a5f4:	andeq	sl, r1, r0, lsl #17
   1a5f8:			; <UNDEFINED> instruction: 0x0001a8b8
   1a5fc:	andeq	sl, r1, r0, lsl #17
   1a600:			; <UNDEFINED> instruction: 0x0001a8b8
   1a604:	andeq	sl, r1, r0, lsl #17
   1a608:			; <UNDEFINED> instruction: 0x0001a8b8
   1a60c:	strdeq	sl, [r1], -r0
   1a610:	andeq	sl, r1, r8, lsr r9
   1a614:	andeq	sl, r1, r0, lsl #19
   1a618:	andeq	sl, r1, r0, lsl #19
   1a61c:	andeq	sl, r1, r8, lsr #12
   1a620:	andeq	sl, r1, ip, ror r6
   1a624:	andeq	sl, r1, ip, asr r7
   1a628:	ldr	r0, [fp, #-12]
   1a62c:	sub	r1, fp, #105	; 0x69
   1a630:	bl	12858 <coda_cursor_read_char@plt>
   1a634:	cmp	r0, #0
   1a638:	beq	1a648 <print_yaml_data@@Base+0x7d0>
   1a63c:	movw	r0, #44732	; 0xaebc
   1a640:	movt	r0, #1
   1a644:	blx	r0
   1a648:	movw	r0, #58038	; 0xe2b6
   1a64c:	movt	r0, #1
   1a650:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a654:	sub	lr, fp, #105	; 0x69
   1a658:	str	r0, [sp, #88]	; 0x58
   1a65c:	mov	r0, lr
   1a660:	movw	r1, #1
   1a664:	bl	1ad18 <print_yaml_data@@Base+0xea0>
   1a668:	movw	r0, #62872	; 0xf598
   1a66c:	movt	r0, #1
   1a670:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a674:	str	r0, [sp, #84]	; 0x54
   1a678:	b	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a67c:	ldr	r0, [fp, #-12]
   1a680:	sub	r1, fp, #112	; 0x70
   1a684:	bl	127e0 <coda_cursor_get_string_length@plt>
   1a688:	cmp	r0, #0
   1a68c:	beq	1a69c <print_yaml_data@@Base+0x824>
   1a690:	movw	r0, #44732	; 0xaebc
   1a694:	movt	r0, #1
   1a698:	blx	r0
   1a69c:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a6a0:	add	r0, r0, #1
   1a6a4:	bl	12780 <malloc@plt>
   1a6a8:	str	r0, [fp, #-116]	; 0xffffff8c
   1a6ac:	ldr	r0, [fp, #-116]	; 0xffffff8c
   1a6b0:	movw	lr, #0
   1a6b4:	cmp	r0, lr
   1a6b8:	bne	1a6f0 <print_yaml_data@@Base+0x878>
   1a6bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   1a6c0:	add	r2, r0, #1
   1a6c4:	mvn	r0, #0
   1a6c8:	movw	r1, #56224	; 0xdba0
   1a6cc:	movt	r1, #1
   1a6d0:	movw	r3, #58343	; 0xe3e7
   1a6d4:	movt	r3, #1
   1a6d8:	movw	ip, #361	; 0x169
   1a6dc:	str	ip, [sp]
   1a6e0:	bl	1260c <coda_set_error@plt>
   1a6e4:	movw	r0, #44732	; 0xaebc
   1a6e8:	movt	r0, #1
   1a6ec:	blx	r0
   1a6f0:	ldr	r0, [fp, #-12]
   1a6f4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1a6f8:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a6fc:	add	r2, r2, #1
   1a700:	bl	127a4 <coda_cursor_read_string@plt>
   1a704:	cmp	r0, #0
   1a708:	beq	1a718 <print_yaml_data@@Base+0x8a0>
   1a70c:	movw	r0, #44732	; 0xaebc
   1a710:	movt	r0, #1
   1a714:	blx	r0
   1a718:	movw	r0, #58038	; 0xe2b6
   1a71c:	movt	r0, #1
   1a720:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a724:	ldr	lr, [fp, #-116]	; 0xffffff8c
   1a728:	ldr	r1, [fp, #-112]	; 0xffffff90
   1a72c:	str	r0, [sp, #80]	; 0x50
   1a730:	mov	r0, lr
   1a734:	bl	1ad18 <print_yaml_data@@Base+0xea0>
   1a738:	ldr	r1, [fp, #-112]	; 0xffffff90
   1a73c:	movw	r0, #62872	; 0xf598
   1a740:	movt	r0, #1
   1a744:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a748:	ldr	r1, [fp, #-116]	; 0xffffff8c
   1a74c:	str	r0, [sp, #76]	; 0x4c
   1a750:	mov	r0, r1
   1a754:	bl	12654 <free@plt>
   1a758:	b	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a75c:	ldr	r0, [fp, #-12]
   1a760:	sub	r1, fp, #128	; 0x80
   1a764:	bl	12948 <coda_cursor_get_bit_size@plt>
   1a768:	cmp	r0, #0
   1a76c:	beq	1a77c <print_yaml_data@@Base+0x904>
   1a770:	movw	r0, #44732	; 0xaebc
   1a774:	movt	r0, #1
   1a778:	blx	r0
   1a77c:	ldr	r0, [fp, #-128]	; 0xffffff80
   1a780:	ldr	r1, [fp, #-124]	; 0xffffff84
   1a784:	lsr	r2, r0, #3
   1a788:	orr	r2, r2, r1, lsl #29
   1a78c:	asr	r1, r1, #3
   1a790:	and	r0, r0, #7
   1a794:	adds	r3, r2, #1
   1a798:	adc	ip, r1, #0
   1a79c:	cmp	r0, #0
   1a7a0:	movne	r2, r3
   1a7a4:	cmp	r0, #0
   1a7a8:	movne	r1, ip
   1a7ac:	str	r2, [fp, #-136]	; 0xffffff78
   1a7b0:	str	r1, [fp, #-132]	; 0xffffff7c
   1a7b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1a7b8:	bl	12780 <malloc@plt>
   1a7bc:	str	r0, [fp, #-140]	; 0xffffff74
   1a7c0:	ldr	r0, [fp, #-140]	; 0xffffff74
   1a7c4:	movw	r1, #0
   1a7c8:	cmp	r0, r1
   1a7cc:	bne	1a800 <print_yaml_data@@Base+0x988>
   1a7d0:	ldr	r2, [fp, #-136]	; 0xffffff78
   1a7d4:	mvn	r0, #0
   1a7d8:	movw	r1, #56224	; 0xdba0
   1a7dc:	movt	r1, #1
   1a7e0:	movw	r3, #58343	; 0xe3e7
   1a7e4:	movt	r3, #1
   1a7e8:	movw	ip, #392	; 0x188
   1a7ec:	str	ip, [sp]
   1a7f0:	bl	1260c <coda_set_error@plt>
   1a7f4:	movw	r0, #44732	; 0xaebc
   1a7f8:	movt	r0, #1
   1a7fc:	blx	r0
   1a800:	ldr	r0, [fp, #-12]
   1a804:	ldr	r1, [fp, #-140]	; 0xffffff74
   1a808:	ldr	r2, [fp, #-128]	; 0xffffff80
   1a80c:	ldr	r3, [fp, #-124]	; 0xffffff84
   1a810:	mov	ip, sp
   1a814:	str	r3, [ip, #4]
   1a818:	str	r2, [ip]
   1a81c:	mov	r2, #0
   1a820:	str	r2, [sp, #72]	; 0x48
   1a824:	ldr	r3, [sp, #72]	; 0x48
   1a828:	bl	129d8 <coda_cursor_read_bits@plt>
   1a82c:	cmp	r0, #0
   1a830:	beq	1a840 <print_yaml_data@@Base+0x9c8>
   1a834:	movw	r0, #44732	; 0xaebc
   1a838:	movt	r0, #1
   1a83c:	blx	r0
   1a840:	movw	r0, #58038	; 0xe2b6
   1a844:	movt	r0, #1
   1a848:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a84c:	ldr	lr, [fp, #-140]	; 0xffffff74
   1a850:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a854:	str	r0, [sp, #68]	; 0x44
   1a858:	mov	r0, lr
   1a85c:	bl	1ad18 <print_yaml_data@@Base+0xea0>
   1a860:	movw	r0, #62872	; 0xf598
   1a864:	movt	r0, #1
   1a868:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a86c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1a870:	str	r0, [sp, #64]	; 0x40
   1a874:	mov	r0, r1
   1a878:	bl	12654 <free@plt>
   1a87c:	b	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a880:	ldr	r0, [fp, #-12]
   1a884:	sub	r1, fp, #144	; 0x90
   1a888:	bl	12984 <coda_cursor_read_int32@plt>
   1a88c:	cmp	r0, #0
   1a890:	beq	1a8a0 <print_yaml_data@@Base+0xa28>
   1a894:	movw	r0, #44732	; 0xaebc
   1a898:	movt	r0, #1
   1a89c:	blx	r0
   1a8a0:	ldr	r1, [fp, #-144]	; 0xffffff70
   1a8a4:	movw	r0, #56644	; 0xdd44
   1a8a8:	movt	r0, #1
   1a8ac:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a8b0:	str	r0, [sp, #60]	; 0x3c
   1a8b4:	b	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a8b8:	ldr	r0, [fp, #-12]
   1a8bc:	sub	r1, fp, #148	; 0x94
   1a8c0:	bl	12678 <coda_cursor_read_uint32@plt>
   1a8c4:	cmp	r0, #0
   1a8c8:	beq	1a8d8 <print_yaml_data@@Base+0xa60>
   1a8cc:	movw	r0, #44732	; 0xaebc
   1a8d0:	movt	r0, #1
   1a8d4:	blx	r0
   1a8d8:	ldr	r1, [fp, #-148]	; 0xffffff6c
   1a8dc:	movw	r0, #56649	; 0xdd49
   1a8e0:	movt	r0, #1
   1a8e4:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a8e8:	str	r0, [sp, #56]	; 0x38
   1a8ec:	b	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a8f0:	ldr	r0, [fp, #-12]
   1a8f4:	sub	r1, fp, #160	; 0xa0
   1a8f8:	bl	128f4 <coda_cursor_read_int64@plt>
   1a8fc:	cmp	r0, #0
   1a900:	beq	1a910 <print_yaml_data@@Base+0xa98>
   1a904:	movw	r0, #44732	; 0xaebc
   1a908:	movt	r0, #1
   1a90c:	blx	r0
   1a910:	sub	r2, fp, #181	; 0xb5
   1a914:	ldr	r0, [fp, #-160]	; 0xffffff60
   1a918:	ldr	r1, [fp, #-156]	; 0xffffff64
   1a91c:	bl	129e4 <coda_str64@plt>
   1a920:	sub	r1, fp, #181	; 0xb5
   1a924:	movw	r0, #58439	; 0xe447
   1a928:	movt	r0, #1
   1a92c:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a930:	str	r0, [sp, #52]	; 0x34
   1a934:	b	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a938:	ldr	r0, [fp, #-12]
   1a93c:	sub	r1, fp, #192	; 0xc0
   1a940:	bl	127ec <coda_cursor_read_uint64@plt>
   1a944:	cmp	r0, #0
   1a948:	beq	1a958 <print_yaml_data@@Base+0xae0>
   1a94c:	movw	r0, #44732	; 0xaebc
   1a950:	movt	r0, #1
   1a954:	blx	r0
   1a958:	sub	r2, fp, #213	; 0xd5
   1a95c:	ldr	r0, [fp, #-192]	; 0xffffff40
   1a960:	ldr	r1, [fp, #-188]	; 0xffffff44
   1a964:	bl	12648 <coda_str64u@plt>
   1a968:	sub	r1, fp, #213	; 0xd5
   1a96c:	movw	r0, #58439	; 0xe447
   1a970:	movt	r0, #1
   1a974:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a978:	str	r0, [sp, #48]	; 0x30
   1a97c:	b	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a980:	ldr	r0, [fp, #-12]
   1a984:	sub	r1, fp, #224	; 0xe0
   1a988:	bl	127f8 <coda_cursor_read_double@plt>
   1a98c:	cmp	r0, #0
   1a990:	beq	1a9a0 <print_yaml_data@@Base+0xb28>
   1a994:	movw	r0, #44732	; 0xaebc
   1a998:	movt	r0, #1
   1a99c:	blx	r0
   1a9a0:	ldr	r0, [fp, #-104]	; 0xffffff98
   1a9a4:	cmp	r0, #8
   1a9a8:	bne	1a9c8 <print_yaml_data@@Base+0xb50>
   1a9ac:	vldr	d16, [fp, #-224]	; 0xffffff20
   1a9b0:	movw	r0, #56654	; 0xdd4e
   1a9b4:	movt	r0, #1
   1a9b8:	vmov	r2, r3, d16
   1a9bc:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a9c0:	str	r0, [sp, #44]	; 0x2c
   1a9c4:	b	1a9e0 <print_yaml_data@@Base+0xb68>
   1a9c8:	vldr	d16, [fp, #-224]	; 0xffffff20
   1a9cc:	movw	r0, #56720	; 0xdd90
   1a9d0:	movt	r0, #1
   1a9d4:	vmov	r2, r3, d16
   1a9d8:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a9dc:	str	r0, [sp, #40]	; 0x28
   1a9e0:	b	1a9f4 <print_yaml_data@@Base+0xb7c>
   1a9e4:	movw	r0, #58426	; 0xe43a
   1a9e8:	movt	r0, #1
   1a9ec:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1a9f0:	str	r0, [sp, #36]	; 0x24
   1a9f4:	b	1ab88 <print_yaml_data@@Base+0xd10>
   1a9f8:	ldr	r0, [fp, #-12]
   1a9fc:	add	r1, sp, #228	; 0xe4
   1aa00:	bl	12720 <coda_cursor_get_special_type@plt>
   1aa04:	cmp	r0, #0
   1aa08:	beq	1aa18 <print_yaml_data@@Base+0xba0>
   1aa0c:	movw	r0, #44732	; 0xaebc
   1aa10:	movt	r0, #1
   1aa14:	blx	r0
   1aa18:	ldr	r0, [sp, #228]	; 0xe4
   1aa1c:	cmp	r0, #3
   1aa20:	str	r0, [sp, #32]
   1aa24:	bhi	1ab84 <print_yaml_data@@Base+0xd0c>
   1aa28:	add	r0, pc, #8
   1aa2c:	ldr	r1, [sp, #32]
   1aa30:	ldr	r0, [r0, r1, lsl #2]
   1aa34:	mov	pc, r0
   1aa38:	andeq	sl, r1, r8, asr #20
   1aa3c:	andeq	sl, r1, ip, asr sl
   1aa40:	muleq	r1, r8, sl
   1aa44:	andeq	sl, r1, r0, asr #22
   1aa48:	movw	r0, #58426	; 0xe43a
   1aa4c:	movt	r0, #1
   1aa50:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1aa54:	str	r0, [sp, #28]
   1aa58:	b	1ab84 <print_yaml_data@@Base+0xd0c>
   1aa5c:	ldr	r0, [fp, #-12]
   1aa60:	add	r1, sp, #216	; 0xd8
   1aa64:	bl	127f8 <coda_cursor_read_double@plt>
   1aa68:	cmp	r0, #0
   1aa6c:	beq	1aa7c <print_yaml_data@@Base+0xc04>
   1aa70:	movw	r0, #44732	; 0xaebc
   1aa74:	movt	r0, #1
   1aa78:	blx	r0
   1aa7c:	vldr	d16, [sp, #216]	; 0xd8
   1aa80:	movw	r0, #56720	; 0xdd90
   1aa84:	movt	r0, #1
   1aa88:	vmov	r2, r3, d16
   1aa8c:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1aa90:	str	r0, [sp, #24]
   1aa94:	b	1ab84 <print_yaml_data@@Base+0xd0c>
   1aa98:	ldr	r0, [fp, #-12]
   1aa9c:	add	r1, sp, #208	; 0xd0
   1aaa0:	bl	127f8 <coda_cursor_read_double@plt>
   1aaa4:	cmp	r0, #0
   1aaa8:	beq	1aab8 <print_yaml_data@@Base+0xc40>
   1aaac:	movw	r0, #44732	; 0xaebc
   1aab0:	movt	r0, #1
   1aab4:	blx	r0
   1aab8:	vldr	d0, [sp, #208]	; 0xd0
   1aabc:	bl	12804 <coda_isNaN@plt>
   1aac0:	cmp	r0, #0
   1aac4:	bne	1aad8 <print_yaml_data@@Base+0xc60>
   1aac8:	vldr	d0, [sp, #208]	; 0xd0
   1aacc:	bl	126b4 <coda_isInf@plt>
   1aad0:	cmp	r0, #0
   1aad4:	beq	1aaf4 <print_yaml_data@@Base+0xc7c>
   1aad8:	vldr	d16, [sp, #208]	; 0xd0
   1aadc:	movw	r0, #56720	; 0xdd90
   1aae0:	movt	r0, #1
   1aae4:	vmov	r2, r3, d16
   1aae8:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1aaec:	str	r0, [sp, #20]
   1aaf0:	b	1ab3c <print_yaml_data@@Base+0xcc4>
   1aaf4:	add	r1, sp, #181	; 0xb5
   1aaf8:	vldr	d0, [sp, #208]	; 0xd0
   1aafc:	movw	r0, #57970	; 0xe272
   1ab00:	movt	r0, #1
   1ab04:	bl	12630 <coda_time_double_to_string@plt>
   1ab08:	cmp	r0, #0
   1ab0c:	beq	1ab24 <print_yaml_data@@Base+0xcac>
   1ab10:	movw	r0, #57999	; 0xe28f
   1ab14:	movt	r0, #1
   1ab18:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ab1c:	str	r0, [sp, #16]
   1ab20:	b	1ab38 <print_yaml_data@@Base+0xcc0>
   1ab24:	add	r1, sp, #181	; 0xb5
   1ab28:	movw	r0, #58439	; 0xe447
   1ab2c:	movt	r0, #1
   1ab30:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ab34:	str	r0, [sp, #12]
   1ab38:	b	1ab3c <print_yaml_data@@Base+0xcc4>
   1ab3c:	b	1ab84 <print_yaml_data@@Base+0xd0c>
   1ab40:	ldr	r0, [fp, #-12]
   1ab44:	add	r1, sp, #168	; 0xa8
   1ab48:	add	r2, sp, #160	; 0xa0
   1ab4c:	bl	12894 <coda_cursor_read_complex_double_split@plt>
   1ab50:	cmp	r0, #0
   1ab54:	beq	1ab64 <print_yaml_data@@Base+0xcec>
   1ab58:	movw	r0, #44732	; 0xaebc
   1ab5c:	movt	r0, #1
   1ab60:	blx	r0
   1ab64:	vldr	d16, [sp, #168]	; 0xa8
   1ab68:	vldr	d17, [sp, #160]	; 0xa0
   1ab6c:	movw	r0, #56755	; 0xddb3
   1ab70:	movt	r0, #1
   1ab74:	vmov	r2, r3, d16
   1ab78:	vstr	d17, [sp]
   1ab7c:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ab80:	str	r0, [sp, #8]
   1ab84:	b	1ab88 <print_yaml_data@@Base+0xd10>
   1ab88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab8c:	cmp	r0, #0
   1ab90:	beq	1abac <print_yaml_data@@Base+0xd34>
   1ab94:	movw	r0, #448	; 0x1c0
   1ab98:	movt	r0, #3
   1ab9c:	ldr	r1, [r0]
   1aba0:	mvn	r2, #0
   1aba4:	add	r1, r1, r2
   1aba8:	str	r1, [r0]
   1abac:	sub	sp, fp, #8
   1abb0:	pop	{r4, r5, fp, pc}
   1abb4:	sub	sp, sp, #12
   1abb8:	push	{fp, lr}
   1abbc:	mov	fp, sp
   1abc0:	sub	sp, sp, #20
   1abc4:	str	r3, [fp, #16]
   1abc8:	str	r2, [fp, #12]
   1abcc:	str	r1, [fp, #8]
   1abd0:	str	r0, [fp, #-4]
   1abd4:	add	r0, fp, #8
   1abd8:	str	r0, [sp, #8]
   1abdc:	movw	r0, #4232	; 0x1088
   1abe0:	movt	r0, #3
   1abe4:	ldr	r0, [r0]
   1abe8:	ldr	r1, [fp, #-4]
   1abec:	ldr	r2, [sp, #8]
   1abf0:	bl	12900 <vfprintf@plt>
   1abf4:	str	r0, [fp, #-8]
   1abf8:	add	r0, sp, #8
   1abfc:	ldr	r1, [fp, #-8]
   1ac00:	str	r0, [sp, #4]
   1ac04:	mov	r0, r1
   1ac08:	mov	sp, fp
   1ac0c:	pop	{fp, lr}
   1ac10:	add	sp, sp, #12
   1ac14:	bx	lr
   1ac18:	push	{fp, lr}
   1ac1c:	mov	fp, sp
   1ac20:	sub	sp, sp, #8
   1ac24:	movw	r0, #448	; 0x1c0
   1ac28:	movt	r0, #3
   1ac2c:	ldr	r0, [r0]
   1ac30:	cmp	r0, #0
   1ac34:	blt	1ac3c <print_yaml_data@@Base+0xdc4>
   1ac38:	b	1ac5c <print_yaml_data@@Base+0xde4>
   1ac3c:	movw	r0, #56765	; 0xddbd
   1ac40:	movt	r0, #1
   1ac44:	movw	r1, #58343	; 0xe3e7
   1ac48:	movt	r1, #1
   1ac4c:	movw	r2, #44	; 0x2c
   1ac50:	movw	r3, #56777	; 0xddc9
   1ac54:	movt	r3, #1
   1ac58:	bl	129f0 <__assert_fail@plt>
   1ac5c:	movw	r0, #448	; 0x1c0
   1ac60:	movt	r0, #3
   1ac64:	ldr	r0, [r0]
   1ac68:	str	r0, [sp, #4]
   1ac6c:	ldr	r0, [sp, #4]
   1ac70:	cmp	r0, #0
   1ac74:	ble	1aca8 <print_yaml_data@@Base+0xe30>
   1ac78:	movw	r0, #4232	; 0x1088
   1ac7c:	movt	r0, #3
   1ac80:	ldr	r0, [r0]
   1ac84:	movw	r1, #56465	; 0xdc91
   1ac88:	movt	r1, #1
   1ac8c:	bl	12810 <fprintf@plt>
   1ac90:	str	r0, [sp]
   1ac94:	ldr	r0, [sp, #4]
   1ac98:	mvn	r1, #0
   1ac9c:	add	r0, r0, r1
   1aca0:	str	r0, [sp, #4]
   1aca4:	b	1ac6c <print_yaml_data@@Base+0xdf4>
   1aca8:	mov	sp, fp
   1acac:	pop	{fp, pc}
   1acb0:	sub	sp, sp, #12
   1acb4:	push	{fp, lr}
   1acb8:	mov	fp, sp
   1acbc:	sub	sp, sp, #20
   1acc0:	str	r3, [fp, #16]
   1acc4:	str	r2, [fp, #12]
   1acc8:	str	r1, [fp, #8]
   1accc:	str	r0, [fp, #-4]
   1acd0:	bl	1ac18 <print_yaml_data@@Base+0xda0>
   1acd4:	add	r0, fp, #8
   1acd8:	str	r0, [sp, #8]
   1acdc:	movw	r0, #4232	; 0x1088
   1ace0:	movt	r0, #3
   1ace4:	ldr	r0, [r0]
   1ace8:	ldr	r1, [fp, #-4]
   1acec:	ldr	r2, [sp, #8]
   1acf0:	bl	12900 <vfprintf@plt>
   1acf4:	str	r0, [fp, #-8]
   1acf8:	add	r0, sp, #8
   1acfc:	ldr	r1, [fp, #-8]
   1ad00:	str	r0, [sp, #4]
   1ad04:	mov	r0, r1
   1ad08:	mov	sp, fp
   1ad0c:	pop	{fp, lr}
   1ad10:	add	sp, sp, #12
   1ad14:	bx	lr
   1ad18:	push	{fp, lr}
   1ad1c:	mov	fp, sp
   1ad20:	sub	sp, sp, #56	; 0x38
   1ad24:	str	r0, [fp, #-4]
   1ad28:	str	r1, [fp, #-8]
   1ad2c:	movw	r0, #0
   1ad30:	str	r0, [fp, #-12]
   1ad34:	ldr	r0, [fp, #-12]
   1ad38:	ldr	r1, [fp, #-8]
   1ad3c:	cmp	r0, r1
   1ad40:	bge	1aeb4 <print_yaml_data@@Base+0x103c>
   1ad44:	ldr	r0, [fp, #-4]
   1ad48:	ldr	r1, [fp, #-12]
   1ad4c:	ldrb	r0, [r0, r1]
   1ad50:	strb	r0, [fp, #-13]
   1ad54:	ldrb	r0, [fp, #-13]
   1ad58:	mov	r1, r0
   1ad5c:	cmp	r0, #8
   1ad60:	str	r1, [fp, #-20]	; 0xffffffec
   1ad64:	beq	1adcc <print_yaml_data@@Base+0xf54>
   1ad68:	b	1ad6c <print_yaml_data@@Base+0xef4>
   1ad6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad70:	cmp	r0, #9
   1ad74:	beq	1ae1c <print_yaml_data@@Base+0xfa4>
   1ad78:	b	1ad7c <print_yaml_data@@Base+0xf04>
   1ad7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad80:	cmp	r0, #10
   1ad84:	beq	1adf4 <print_yaml_data@@Base+0xf7c>
   1ad88:	b	1ad8c <print_yaml_data@@Base+0xf14>
   1ad8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad90:	cmp	r0, #12
   1ad94:	beq	1ade0 <print_yaml_data@@Base+0xf68>
   1ad98:	b	1ad9c <print_yaml_data@@Base+0xf24>
   1ad9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ada0:	cmp	r0, #13
   1ada4:	beq	1ae08 <print_yaml_data@@Base+0xf90>
   1ada8:	b	1adac <print_yaml_data@@Base+0xf34>
   1adac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1adb0:	cmp	r0, #34	; 0x22
   1adb4:	beq	1ae30 <print_yaml_data@@Base+0xfb8>
   1adb8:	b	1adbc <print_yaml_data@@Base+0xf44>
   1adbc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1adc0:	cmp	r0, #92	; 0x5c
   1adc4:	beq	1ae44 <print_yaml_data@@Base+0xfcc>
   1adc8:	b	1ae58 <print_yaml_data@@Base+0xfe0>
   1adcc:	movw	r0, #56364	; 0xdc2c
   1add0:	movt	r0, #1
   1add4:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1add8:	str	r0, [fp, #-24]	; 0xffffffe8
   1addc:	b	1aea0 <print_yaml_data@@Base+0x1028>
   1ade0:	movw	r0, #56376	; 0xdc38
   1ade4:	movt	r0, #1
   1ade8:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1adec:	str	r0, [sp, #28]
   1adf0:	b	1aea0 <print_yaml_data@@Base+0x1028>
   1adf4:	movw	r0, #56370	; 0xdc32
   1adf8:	movt	r0, #1
   1adfc:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ae00:	str	r0, [sp, #24]
   1ae04:	b	1aea0 <print_yaml_data@@Base+0x1028>
   1ae08:	movw	r0, #56379	; 0xdc3b
   1ae0c:	movt	r0, #1
   1ae10:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ae14:	str	r0, [sp, #20]
   1ae18:	b	1aea0 <print_yaml_data@@Base+0x1028>
   1ae1c:	movw	r0, #56367	; 0xdc2f
   1ae20:	movt	r0, #1
   1ae24:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ae28:	str	r0, [sp, #16]
   1ae2c:	b	1aea0 <print_yaml_data@@Base+0x1028>
   1ae30:	movw	r0, #58037	; 0xe2b5
   1ae34:	movt	r0, #1
   1ae38:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ae3c:	str	r0, [sp, #12]
   1ae40:	b	1aea0 <print_yaml_data@@Base+0x1028>
   1ae44:	movw	r0, #56382	; 0xdc3e
   1ae48:	movt	r0, #1
   1ae4c:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ae50:	str	r0, [sp, #8]
   1ae54:	b	1aea0 <print_yaml_data@@Base+0x1028>
   1ae58:	ldrb	r0, [fp, #-13]
   1ae5c:	cmp	r0, #32
   1ae60:	blt	1ae88 <print_yaml_data@@Base+0x1010>
   1ae64:	ldrb	r0, [fp, #-13]
   1ae68:	cmp	r0, #126	; 0x7e
   1ae6c:	bgt	1ae88 <print_yaml_data@@Base+0x1010>
   1ae70:	ldrb	r1, [fp, #-13]
   1ae74:	movw	r0, #56221	; 0xdb9d
   1ae78:	movt	r0, #1
   1ae7c:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ae80:	str	r0, [sp, #4]
   1ae84:	b	1ae9c <print_yaml_data@@Base+0x1024>
   1ae88:	ldrb	r1, [fp, #-13]
   1ae8c:	movw	r0, #58040	; 0xe2b8
   1ae90:	movt	r0, #1
   1ae94:	bl	1abb4 <print_yaml_data@@Base+0xd3c>
   1ae98:	str	r0, [sp]
   1ae9c:	b	1aea0 <print_yaml_data@@Base+0x1028>
   1aea0:	b	1aea4 <print_yaml_data@@Base+0x102c>
   1aea4:	ldr	r0, [fp, #-12]
   1aea8:	add	r0, r0, #1
   1aeac:	str	r0, [fp, #-12]
   1aeb0:	b	1ad34 <print_yaml_data@@Base+0xebc>
   1aeb4:	mov	sp, fp
   1aeb8:	pop	{fp, pc}

0001aebc <handle_coda_error@@Base>:
   1aebc:	push	{fp, lr}
   1aec0:	mov	fp, sp
   1aec4:	sub	sp, sp, #16
   1aec8:	movw	r0, #424	; 0x1a8
   1aecc:	movt	r0, #3
   1aed0:	ldr	r0, [r0]
   1aed4:	str	r0, [fp, #-4]
   1aed8:	bl	129a8 <coda_get_errno@plt>
   1aedc:	ldr	r0, [r0]
   1aee0:	bl	12960 <coda_errno_to_string@plt>
   1aee4:	ldr	lr, [fp, #-4]
   1aee8:	str	r0, [sp, #8]
   1aeec:	mov	r0, lr
   1aef0:	movw	r1, #58432	; 0xe440
   1aef4:	movt	r1, #1
   1aef8:	ldr	r2, [sp, #8]
   1aefc:	bl	12810 <fprintf@plt>
   1af00:	movw	r1, #424	; 0x1a8
   1af04:	movt	r1, #3
   1af08:	ldr	r1, [r1]
   1af0c:	str	r0, [sp, #4]
   1af10:	mov	r0, r1
   1af14:	bl	12624 <fflush@plt>
   1af18:	movw	r1, #1
   1af1c:	str	r0, [sp]
   1af20:	mov	r0, r1
   1af24:	bl	127c8 <exit@plt>

0001af28 <main@@Base>:
   1af28:	push	{fp, lr}
   1af2c:	mov	fp, sp
   1af30:	sub	sp, sp, #40	; 0x28
   1af34:	movw	r2, #0
   1af38:	str	r2, [fp, #-4]
   1af3c:	str	r0, [fp, #-8]
   1af40:	str	r1, [fp, #-12]
   1af44:	ldr	r0, [fp, #-8]
   1af48:	cmp	r0, #1
   1af4c:	beq	1af88 <main@@Base+0x60>
   1af50:	ldr	r0, [fp, #-12]
   1af54:	ldr	r0, [r0, #4]
   1af58:	movw	r1, #58443	; 0xe44b
   1af5c:	movt	r1, #1
   1af60:	bl	125d0 <strcmp@plt>
   1af64:	cmp	r0, #0
   1af68:	beq	1af88 <main@@Base+0x60>
   1af6c:	ldr	r0, [fp, #-12]
   1af70:	ldr	r0, [r0, #4]
   1af74:	movw	r1, #58446	; 0xe44e
   1af78:	movt	r1, #1
   1af7c:	bl	125d0 <strcmp@plt>
   1af80:	cmp	r0, #0
   1af84:	bne	1af94 <main@@Base+0x6c>
   1af88:	bl	1cf78 <main@@Base+0x2050>
   1af8c:	movw	r0, #0
   1af90:	bl	127c8 <exit@plt>
   1af94:	ldr	r0, [fp, #-12]
   1af98:	ldr	r0, [r0, #4]
   1af9c:	movw	r1, #58453	; 0xe455
   1afa0:	movt	r1, #1
   1afa4:	bl	125d0 <strcmp@plt>
   1afa8:	cmp	r0, #0
   1afac:	beq	1afcc <main@@Base+0xa4>
   1afb0:	ldr	r0, [fp, #-12]
   1afb4:	ldr	r0, [r0, #4]
   1afb8:	movw	r1, #58456	; 0xe458
   1afbc:	movt	r1, #1
   1afc0:	bl	125d0 <strcmp@plt>
   1afc4:	cmp	r0, #0
   1afc8:	bne	1afd8 <main@@Base+0xb0>
   1afcc:	bl	1d8c0 <main@@Base+0x2998>
   1afd0:	movw	r0, #0
   1afd4:	bl	127c8 <exit@plt>
   1afd8:	movw	r0, #1
   1afdc:	str	r0, [fp, #-16]
   1afe0:	ldr	r0, [fp, #-16]
   1afe4:	add	r0, r0, #1
   1afe8:	ldr	r1, [fp, #-8]
   1afec:	cmp	r0, r1
   1aff0:	bge	1b044 <main@@Base+0x11c>
   1aff4:	ldr	r0, [fp, #-12]
   1aff8:	ldr	r1, [fp, #-16]
   1affc:	add	r0, r0, r1, lsl #2
   1b000:	ldr	r0, [r0]
   1b004:	movw	r1, #58466	; 0xe462
   1b008:	movt	r1, #1
   1b00c:	bl	125d0 <strcmp@plt>
   1b010:	cmp	r0, #0
   1b014:	bne	1b044 <main@@Base+0x11c>
   1b018:	ldr	r0, [fp, #-12]
   1b01c:	ldr	r1, [fp, #-16]
   1b020:	add	r1, r1, #1
   1b024:	add	r0, r0, r1, lsl #2
   1b028:	ldr	r0, [r0]
   1b02c:	bl	126f0 <coda_set_definition_path@plt>
   1b030:	ldr	r1, [fp, #-16]
   1b034:	add	r1, r1, #2
   1b038:	str	r1, [fp, #-16]
   1b03c:	str	r0, [sp, #16]
   1b040:	b	1b0b8 <main@@Base+0x190>
   1b044:	movw	r0, #58469	; 0xe465
   1b048:	movt	r0, #1
   1b04c:	str	r0, [sp, #20]
   1b050:	ldr	r0, [fp, #-12]
   1b054:	ldr	r0, [r0]
   1b058:	ldr	r2, [sp, #20]
   1b05c:	movw	r1, #0
   1b060:	bl	1266c <coda_set_definition_path_conditional@plt>
   1b064:	cmp	r0, #0
   1b068:	beq	1b0b4 <main@@Base+0x18c>
   1b06c:	movw	r0, #424	; 0x1a8
   1b070:	movt	r0, #3
   1b074:	ldr	r0, [r0]
   1b078:	str	r0, [sp, #12]
   1b07c:	bl	129a8 <coda_get_errno@plt>
   1b080:	ldr	r0, [r0]
   1b084:	bl	12960 <coda_errno_to_string@plt>
   1b088:	ldr	lr, [sp, #12]
   1b08c:	str	r0, [sp, #8]
   1b090:	mov	r0, lr
   1b094:	movw	r1, #58432	; 0xe440
   1b098:	movt	r1, #1
   1b09c:	ldr	r2, [sp, #8]
   1b0a0:	bl	12810 <fprintf@plt>
   1b0a4:	movw	r1, #1
   1b0a8:	str	r0, [sp, #4]
   1b0ac:	mov	r0, r1
   1b0b0:	bl	127c8 <exit@plt>
   1b0b4:	b	1b0b8 <main@@Base+0x190>
   1b0b8:	ldr	r0, [fp, #-12]
   1b0bc:	ldr	r1, [fp, #-16]
   1b0c0:	add	r0, r0, r1, lsl #2
   1b0c4:	ldr	r0, [r0]
   1b0c8:	movw	r1, #58495	; 0xe47f
   1b0cc:	movt	r1, #1
   1b0d0:	bl	125d0 <strcmp@plt>
   1b0d4:	cmp	r0, #0
   1b0d8:	bne	1b114 <main@@Base+0x1ec>
   1b0dc:	movw	r0, #4252	; 0x109c
   1b0e0:	movt	r0, #3
   1b0e4:	mov	r1, #0
   1b0e8:	str	r1, [r0]
   1b0ec:	ldr	r0, [fp, #-16]
   1b0f0:	add	r0, r0, #1
   1b0f4:	str	r0, [fp, #-16]
   1b0f8:	ldr	r0, [fp, #-8]
   1b0fc:	ldr	r1, [fp, #-16]
   1b100:	sub	r0, r0, r1
   1b104:	ldr	r2, [fp, #-12]
   1b108:	add	r1, r2, r1, lsl #2
   1b10c:	bl	1b2c8 <main@@Base+0x3a0>
   1b110:	b	1b2bc <main@@Base+0x394>
   1b114:	ldr	r0, [fp, #-12]
   1b118:	ldr	r1, [fp, #-16]
   1b11c:	add	r0, r0, r1, lsl #2
   1b120:	ldr	r0, [r0]
   1b124:	movw	r1, #58500	; 0xe484
   1b128:	movt	r1, #1
   1b12c:	bl	125d0 <strcmp@plt>
   1b130:	cmp	r0, #0
   1b134:	bne	1b170 <main@@Base+0x248>
   1b138:	movw	r0, #4252	; 0x109c
   1b13c:	movt	r0, #3
   1b140:	mov	r1, #1
   1b144:	str	r1, [r0]
   1b148:	ldr	r0, [fp, #-16]
   1b14c:	add	r0, r0, #1
   1b150:	str	r0, [fp, #-16]
   1b154:	ldr	r0, [fp, #-8]
   1b158:	ldr	r1, [fp, #-16]
   1b15c:	sub	r0, r0, r1
   1b160:	ldr	r2, [fp, #-12]
   1b164:	add	r1, r2, r1, lsl #2
   1b168:	bl	1b838 <main@@Base+0x910>
   1b16c:	b	1b2b8 <main@@Base+0x390>
   1b170:	ldr	r0, [fp, #-12]
   1b174:	ldr	r1, [fp, #-16]
   1b178:	add	r0, r0, r1, lsl #2
   1b17c:	ldr	r0, [r0]
   1b180:	movw	r1, #58506	; 0xe48a
   1b184:	movt	r1, #1
   1b188:	bl	125d0 <strcmp@plt>
   1b18c:	cmp	r0, #0
   1b190:	bne	1b1cc <main@@Base+0x2a4>
   1b194:	movw	r0, #4252	; 0x109c
   1b198:	movt	r0, #3
   1b19c:	mov	r1, #3
   1b1a0:	str	r1, [r0]
   1b1a4:	ldr	r0, [fp, #-16]
   1b1a8:	add	r0, r0, #1
   1b1ac:	str	r0, [fp, #-16]
   1b1b0:	ldr	r0, [fp, #-8]
   1b1b4:	ldr	r1, [fp, #-16]
   1b1b8:	sub	r0, r0, r1
   1b1bc:	ldr	r2, [fp, #-12]
   1b1c0:	add	r1, r2, r1, lsl #2
   1b1c4:	bl	1bfcc <main@@Base+0x10a4>
   1b1c8:	b	1b2b4 <main@@Base+0x38c>
   1b1cc:	ldr	r0, [fp, #-12]
   1b1d0:	ldr	r1, [fp, #-16]
   1b1d4:	add	r0, r0, r1, lsl #2
   1b1d8:	ldr	r0, [r0]
   1b1dc:	movw	r1, #58511	; 0xe48f
   1b1e0:	movt	r1, #1
   1b1e4:	bl	125d0 <strcmp@plt>
   1b1e8:	cmp	r0, #0
   1b1ec:	bne	1b228 <main@@Base+0x300>
   1b1f0:	movw	r0, #4252	; 0x109c
   1b1f4:	movt	r0, #3
   1b1f8:	mov	r1, #4
   1b1fc:	str	r1, [r0]
   1b200:	ldr	r0, [fp, #-16]
   1b204:	add	r0, r0, #1
   1b208:	str	r0, [fp, #-16]
   1b20c:	ldr	r0, [fp, #-8]
   1b210:	ldr	r1, [fp, #-16]
   1b214:	sub	r0, r0, r1
   1b218:	ldr	r2, [fp, #-12]
   1b21c:	add	r1, r2, r1, lsl #2
   1b220:	bl	1c4b8 <main@@Base+0x1590>
   1b224:	b	1b2b0 <main@@Base+0x388>
   1b228:	ldr	r0, [fp, #-12]
   1b22c:	ldr	r1, [fp, #-16]
   1b230:	add	r0, r0, r1, lsl #2
   1b234:	ldr	r0, [r0]
   1b238:	movw	r1, #58516	; 0xe494
   1b23c:	movt	r1, #1
   1b240:	bl	125d0 <strcmp@plt>
   1b244:	cmp	r0, #0
   1b248:	bne	1b284 <main@@Base+0x35c>
   1b24c:	movw	r0, #4252	; 0x109c
   1b250:	movt	r0, #3
   1b254:	mov	r1, #5
   1b258:	str	r1, [r0]
   1b25c:	ldr	r0, [fp, #-16]
   1b260:	add	r0, r0, #1
   1b264:	str	r0, [fp, #-16]
   1b268:	ldr	r0, [fp, #-8]
   1b26c:	ldr	r1, [fp, #-16]
   1b270:	sub	r0, r0, r1
   1b274:	ldr	r2, [fp, #-12]
   1b278:	add	r1, r2, r1, lsl #2
   1b27c:	bl	1c9a4 <main@@Base+0x1a7c>
   1b280:	b	1b2ac <main@@Base+0x384>
   1b284:	movw	r0, #424	; 0x1a8
   1b288:	movt	r0, #3
   1b28c:	ldr	r0, [r0]
   1b290:	movw	r1, #58522	; 0xe49a
   1b294:	movt	r1, #1
   1b298:	bl	12810 <fprintf@plt>
   1b29c:	str	r0, [sp]
   1b2a0:	bl	1cf78 <main@@Base+0x2050>
   1b2a4:	movw	r0, #1
   1b2a8:	bl	127c8 <exit@plt>
   1b2ac:	b	1b2b0 <main@@Base+0x388>
   1b2b0:	b	1b2b4 <main@@Base+0x38c>
   1b2b4:	b	1b2b8 <main@@Base+0x390>
   1b2b8:	b	1b2bc <main@@Base+0x394>
   1b2bc:	movw	r0, #0
   1b2c0:	mov	sp, fp
   1b2c4:	pop	{fp, pc}
   1b2c8:	push	{fp, lr}
   1b2cc:	mov	fp, sp
   1b2d0:	sub	sp, sp, #56	; 0x38
   1b2d4:	str	r0, [fp, #-4]
   1b2d8:	str	r1, [fp, #-8]
   1b2dc:	movw	r0, #480	; 0x1e0
   1b2e0:	movt	r0, #3
   1b2e4:	movw	r1, #0
   1b2e8:	str	r1, [r0]
   1b2ec:	str	r1, [r0, #664]	; 0x298
   1b2f0:	movw	r0, #456	; 0x1c8
   1b2f4:	movt	r0, #3
   1b2f8:	movw	r2, #1
   1b2fc:	str	r2, [r0]
   1b300:	movw	r0, #476	; 0x1dc
   1b304:	movt	r0, #3
   1b308:	str	r1, [r0]
   1b30c:	str	r2, [fp, #-12]
   1b310:	str	r2, [fp, #-16]
   1b314:	movw	r0, #460	; 0x1cc
   1b318:	movt	r0, #3
   1b31c:	str	r1, [r0]
   1b320:	movw	r0, #4240	; 0x1090
   1b324:	movt	r0, #3
   1b328:	str	r1, [r0]
   1b32c:	movw	r0, #472	; 0x1d8
   1b330:	movt	r0, #3
   1b334:	str	r1, [r0]
   1b338:	movw	r0, #4244	; 0x1094
   1b33c:	movt	r0, #3
   1b340:	str	r1, [r0]
   1b344:	str	r1, [fp, #-20]	; 0xffffffec
   1b348:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b34c:	ldr	r1, [fp, #-4]
   1b350:	cmp	r0, r1
   1b354:	bge	1b700 <main@@Base+0x7d8>
   1b358:	ldr	r0, [fp, #-8]
   1b35c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b360:	add	r0, r0, r1, lsl #2
   1b364:	ldr	r0, [r0]
   1b368:	movw	r1, #62581	; 0xf475
   1b36c:	movt	r1, #1
   1b370:	bl	125d0 <strcmp@plt>
   1b374:	cmp	r0, #0
   1b378:	beq	1b3a0 <main@@Base+0x478>
   1b37c:	ldr	r0, [fp, #-8]
   1b380:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b384:	add	r0, r0, r1, lsl #2
   1b388:	ldr	r0, [r0]
   1b38c:	movw	r1, #62584	; 0xf478
   1b390:	movt	r1, #1
   1b394:	bl	125d0 <strcmp@plt>
   1b398:	cmp	r0, #0
   1b39c:	bne	1b3b4 <main@@Base+0x48c>
   1b3a0:	movw	r0, #476	; 0x1dc
   1b3a4:	movt	r0, #3
   1b3a8:	movw	r1, #1
   1b3ac:	str	r1, [r0]
   1b3b0:	b	1b6ec <main@@Base+0x7c4>
   1b3b4:	ldr	r0, [fp, #-8]
   1b3b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b3bc:	add	r0, r0, r1, lsl #2
   1b3c0:	ldr	r0, [r0]
   1b3c4:	movw	r1, #62595	; 0xf483
   1b3c8:	movt	r1, #1
   1b3cc:	bl	125d0 <strcmp@plt>
   1b3d0:	cmp	r0, #0
   1b3d4:	beq	1b3fc <main@@Base+0x4d4>
   1b3d8:	ldr	r0, [fp, #-8]
   1b3dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b3e0:	add	r0, r0, r1, lsl #2
   1b3e4:	ldr	r0, [r0]
   1b3e8:	movw	r1, #62598	; 0xf486
   1b3ec:	movt	r1, #1
   1b3f0:	bl	125d0 <strcmp@plt>
   1b3f4:	cmp	r0, #0
   1b3f8:	bne	1b408 <main@@Base+0x4e0>
   1b3fc:	movw	r0, #0
   1b400:	str	r0, [fp, #-16]
   1b404:	b	1b6e8 <main@@Base+0x7c0>
   1b408:	ldr	r0, [fp, #-8]
   1b40c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b410:	add	r0, r0, r1, lsl #2
   1b414:	ldr	r0, [r0]
   1b418:	movw	r1, #62620	; 0xf49c
   1b41c:	movt	r1, #1
   1b420:	bl	125d0 <strcmp@plt>
   1b424:	cmp	r0, #0
   1b428:	beq	1b450 <main@@Base+0x528>
   1b42c:	ldr	r0, [fp, #-8]
   1b430:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b434:	add	r0, r0, r1, lsl #2
   1b438:	ldr	r0, [r0]
   1b43c:	movw	r1, #62623	; 0xf49f
   1b440:	movt	r1, #1
   1b444:	bl	125d0 <strcmp@plt>
   1b448:	cmp	r0, #0
   1b44c:	bne	1b4f0 <main@@Base+0x5c8>
   1b450:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b454:	add	r0, r0, #1
   1b458:	ldr	r1, [fp, #-4]
   1b45c:	cmp	r0, r1
   1b460:	bge	1b4f0 <main@@Base+0x5c8>
   1b464:	ldr	r0, [fp, #-8]
   1b468:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b46c:	add	r1, r1, #1
   1b470:	add	r0, r0, r1, lsl #2
   1b474:	ldr	r0, [r0]
   1b478:	ldrb	r0, [r0]
   1b47c:	cmp	r0, #45	; 0x2d
   1b480:	beq	1b4f0 <main@@Base+0x5c8>
   1b484:	ldr	r0, [fp, #-8]
   1b488:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b48c:	add	r1, r1, #1
   1b490:	add	r0, r0, r1, lsl #2
   1b494:	ldr	r0, [r0]
   1b498:	bl	17348 <codadump_filter_create@@Base>
   1b49c:	movw	r1, #480	; 0x1e0
   1b4a0:	movt	r1, #3
   1b4a4:	str	r0, [r1, #664]	; 0x298
   1b4a8:	ldr	r0, [r1, #664]	; 0x298
   1b4ac:	movw	r1, #0
   1b4b0:	cmp	r0, r1
   1b4b4:	bne	1b4e0 <main@@Base+0x5b8>
   1b4b8:	movw	r0, #424	; 0x1a8
   1b4bc:	movt	r0, #3
   1b4c0:	ldr	r0, [r0]
   1b4c4:	movw	r1, #62632	; 0xf4a8
   1b4c8:	movt	r1, #1
   1b4cc:	bl	12810 <fprintf@plt>
   1b4d0:	str	r0, [fp, #-24]	; 0xffffffe8
   1b4d4:	bl	1cf78 <main@@Base+0x2050>
   1b4d8:	movw	r0, #1
   1b4dc:	bl	127c8 <exit@plt>
   1b4e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b4e4:	add	r0, r0, #1
   1b4e8:	str	r0, [fp, #-20]	; 0xffffffec
   1b4ec:	b	1b6e4 <main@@Base+0x7bc>
   1b4f0:	ldr	r0, [fp, #-8]
   1b4f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b4f8:	add	r0, r0, r1, lsl #2
   1b4fc:	ldr	r0, [r0]
   1b500:	movw	r1, #62673	; 0xf4d1
   1b504:	movt	r1, #1
   1b508:	bl	125d0 <strcmp@plt>
   1b50c:	cmp	r0, #0
   1b510:	beq	1b538 <main@@Base+0x610>
   1b514:	ldr	r0, [fp, #-8]
   1b518:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b51c:	add	r0, r0, r1, lsl #2
   1b520:	ldr	r0, [r0]
   1b524:	movw	r1, #62676	; 0xf4d4
   1b528:	movt	r1, #1
   1b52c:	bl	125d0 <strcmp@plt>
   1b530:	cmp	r0, #0
   1b534:	bne	1b54c <main@@Base+0x624>
   1b538:	movw	r0, #4240	; 0x1090
   1b53c:	movt	r0, #3
   1b540:	movw	r1, #1
   1b544:	str	r1, [r0]
   1b548:	b	1b6e0 <main@@Base+0x7b8>
   1b54c:	ldr	r0, [fp, #-8]
   1b550:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b554:	add	r0, r0, r1, lsl #2
   1b558:	ldr	r0, [r0]
   1b55c:	movw	r1, #62683	; 0xf4db
   1b560:	movt	r1, #1
   1b564:	bl	125d0 <strcmp@plt>
   1b568:	cmp	r0, #0
   1b56c:	beq	1b594 <main@@Base+0x66c>
   1b570:	ldr	r0, [fp, #-8]
   1b574:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b578:	add	r0, r0, r1, lsl #2
   1b57c:	ldr	r0, [r0]
   1b580:	movw	r1, #62686	; 0xf4de
   1b584:	movt	r1, #1
   1b588:	bl	125d0 <strcmp@plt>
   1b58c:	cmp	r0, #0
   1b590:	bne	1b5a8 <main@@Base+0x680>
   1b594:	movw	r0, #472	; 0x1d8
   1b598:	movt	r0, #3
   1b59c:	movw	r1, #1
   1b5a0:	str	r1, [r0]
   1b5a4:	b	1b6dc <main@@Base+0x7b4>
   1b5a8:	ldr	r0, [fp, #-8]
   1b5ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b5b0:	add	r0, r0, r1, lsl #2
   1b5b4:	ldr	r0, [r0]
   1b5b8:	movw	r1, #62693	; 0xf4e5
   1b5bc:	movt	r1, #1
   1b5c0:	bl	125d0 <strcmp@plt>
   1b5c4:	cmp	r0, #0
   1b5c8:	bne	1b5e0 <main@@Base+0x6b8>
   1b5cc:	movw	r0, #4244	; 0x1094
   1b5d0:	movt	r0, #3
   1b5d4:	movw	r1, #1
   1b5d8:	str	r1, [r0]
   1b5dc:	b	1b6d8 <main@@Base+0x7b0>
   1b5e0:	ldr	r0, [fp, #-8]
   1b5e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b5e8:	add	r0, r0, r1, lsl #2
   1b5ec:	ldr	r0, [r0]
   1b5f0:	movw	r1, #62707	; 0xf4f3
   1b5f4:	movt	r1, #1
   1b5f8:	bl	125d0 <strcmp@plt>
   1b5fc:	cmp	r0, #0
   1b600:	bne	1b624 <main@@Base+0x6fc>
   1b604:	movw	r0, #476	; 0x1dc
   1b608:	movt	r0, #3
   1b60c:	movw	r1, #1
   1b610:	str	r1, [r0]
   1b614:	movw	r0, #460	; 0x1cc
   1b618:	movt	r0, #3
   1b61c:	str	r1, [r0]
   1b620:	b	1b6d4 <main@@Base+0x7ac>
   1b624:	ldr	r0, [fp, #-8]
   1b628:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b62c:	add	r0, r0, r1, lsl #2
   1b630:	ldr	r0, [r0]
   1b634:	movw	r1, #62720	; 0xf500
   1b638:	movt	r1, #1
   1b63c:	bl	125d0 <strcmp@plt>
   1b640:	cmp	r0, #0
   1b644:	bne	1b654 <main@@Base+0x72c>
   1b648:	movw	r0, #0
   1b64c:	str	r0, [fp, #-12]
   1b650:	b	1b6d0 <main@@Base+0x7a8>
   1b654:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b658:	ldr	r1, [fp, #-4]
   1b65c:	sub	r1, r1, #1
   1b660:	cmp	r0, r1
   1b664:	bne	1b6a4 <main@@Base+0x77c>
   1b668:	ldr	r0, [fp, #-8]
   1b66c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b670:	add	r0, r0, r1, lsl #2
   1b674:	ldr	r0, [r0]
   1b678:	ldrb	r0, [r0]
   1b67c:	cmp	r0, #45	; 0x2d
   1b680:	beq	1b6a4 <main@@Base+0x77c>
   1b684:	ldr	r0, [fp, #-8]
   1b688:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b68c:	add	r0, r0, r1, lsl #2
   1b690:	ldr	r0, [r0]
   1b694:	movw	r1, #480	; 0x1e0
   1b698:	movt	r1, #3
   1b69c:	str	r0, [r1]
   1b6a0:	b	1b6cc <main@@Base+0x7a4>
   1b6a4:	movw	r0, #424	; 0x1a8
   1b6a8:	movt	r0, #3
   1b6ac:	ldr	r0, [r0]
   1b6b0:	movw	r1, #58522	; 0xe49a
   1b6b4:	movt	r1, #1
   1b6b8:	bl	12810 <fprintf@plt>
   1b6bc:	str	r0, [sp, #28]
   1b6c0:	bl	1cf78 <main@@Base+0x2050>
   1b6c4:	movw	r0, #1
   1b6c8:	bl	127c8 <exit@plt>
   1b6cc:	b	1b6d0 <main@@Base+0x7a8>
   1b6d0:	b	1b6d4 <main@@Base+0x7ac>
   1b6d4:	b	1b6d8 <main@@Base+0x7b0>
   1b6d8:	b	1b6dc <main@@Base+0x7b4>
   1b6dc:	b	1b6e0 <main@@Base+0x7b8>
   1b6e0:	b	1b6e4 <main@@Base+0x7bc>
   1b6e4:	b	1b6e8 <main@@Base+0x7c0>
   1b6e8:	b	1b6ec <main@@Base+0x7c4>
   1b6ec:	b	1b6f0 <main@@Base+0x7c8>
   1b6f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b6f4:	add	r0, r0, #1
   1b6f8:	str	r0, [fp, #-20]	; 0xffffffec
   1b6fc:	b	1b348 <main@@Base+0x420>
   1b700:	movw	r0, #480	; 0x1e0
   1b704:	movt	r0, #3
   1b708:	ldr	r0, [r0]
   1b70c:	movw	r1, #0
   1b710:	cmp	r0, r1
   1b714:	beq	1b730 <main@@Base+0x808>
   1b718:	movw	r0, #480	; 0x1e0
   1b71c:	movt	r0, #3
   1b720:	ldr	r0, [r0]
   1b724:	ldrb	r0, [r0]
   1b728:	cmp	r0, #0
   1b72c:	bne	1b758 <main@@Base+0x830>
   1b730:	movw	r0, #424	; 0x1a8
   1b734:	movt	r0, #3
   1b738:	ldr	r0, [r0]
   1b73c:	movw	r1, #58522	; 0xe49a
   1b740:	movt	r1, #1
   1b744:	bl	12810 <fprintf@plt>
   1b748:	str	r0, [sp, #24]
   1b74c:	bl	1cf78 <main@@Base+0x2050>
   1b750:	movw	r0, #1
   1b754:	bl	127c8 <exit@plt>
   1b758:	bl	12834 <coda_init@plt>
   1b75c:	cmp	r0, #0
   1b760:	beq	1b7ac <main@@Base+0x884>
   1b764:	movw	r0, #424	; 0x1a8
   1b768:	movt	r0, #3
   1b76c:	ldr	r0, [r0]
   1b770:	str	r0, [sp, #20]
   1b774:	bl	129a8 <coda_get_errno@plt>
   1b778:	ldr	r0, [r0]
   1b77c:	bl	12960 <coda_errno_to_string@plt>
   1b780:	ldr	lr, [sp, #20]
   1b784:	str	r0, [sp, #16]
   1b788:	mov	r0, lr
   1b78c:	movw	r1, #58432	; 0xe440
   1b790:	movt	r1, #1
   1b794:	ldr	r2, [sp, #16]
   1b798:	bl	12810 <fprintf@plt>
   1b79c:	movw	r1, #1
   1b7a0:	str	r0, [sp, #12]
   1b7a4:	mov	r0, r1
   1b7a8:	bl	127c8 <exit@plt>
   1b7ac:	ldr	r0, [fp, #-12]
   1b7b0:	cmp	r0, #0
   1b7b4:	movw	r0, #0
   1b7b8:	movne	r0, #1
   1b7bc:	mvn	r1, #0
   1b7c0:	eor	r0, r0, r1
   1b7c4:	and	r0, r0, #1
   1b7c8:	bl	12684 <coda_set_option_bypass_special_types@plt>
   1b7cc:	movw	r1, #0
   1b7d0:	str	r0, [sp, #8]
   1b7d4:	mov	r0, r1
   1b7d8:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   1b7dc:	ldr	r1, [fp, #-16]
   1b7e0:	str	r0, [sp, #4]
   1b7e4:	mov	r0, r1
   1b7e8:	bl	12840 <coda_set_option_perform_conversions@plt>
   1b7ec:	movw	r1, #36988	; 0x907c
   1b7f0:	movt	r1, #1
   1b7f4:	str	r0, [sp]
   1b7f8:	blx	r1
   1b7fc:	movw	r0, #20696	; 0x50d8
   1b800:	movt	r0, #1
   1b804:	blx	r0
   1b808:	movw	r0, #37124	; 0x9104
   1b80c:	movt	r0, #1
   1b810:	blx	r0
   1b814:	movw	r0, #20728	; 0x50f8
   1b818:	movt	r0, #1
   1b81c:	blx	r0
   1b820:	movw	r0, #37020	; 0x909c
   1b824:	movt	r0, #1
   1b828:	blx	r0
   1b82c:	bl	12768 <coda_done@plt>
   1b830:	mov	sp, fp
   1b834:	pop	{fp, pc}
   1b838:	push	{fp, lr}
   1b83c:	mov	fp, sp
   1b840:	sub	sp, sp, #64	; 0x40
   1b844:	str	r0, [fp, #-4]
   1b848:	str	r1, [fp, #-8]
   1b84c:	movw	r0, #480	; 0x1e0
   1b850:	movt	r0, #3
   1b854:	movw	r1, #0
   1b858:	str	r1, [r0]
   1b85c:	str	r1, [r0, #664]	; 0x298
   1b860:	movw	r0, #464	; 0x1d0
   1b864:	movt	r0, #3
   1b868:	str	r1, [r0]
   1b86c:	movw	r0, #4236	; 0x108c
   1b870:	movt	r0, #3
   1b874:	movw	r2, #56466	; 0xdc92
   1b878:	movt	r2, #1
   1b87c:	str	r2, [r0]
   1b880:	movw	r0, #428	; 0x1ac
   1b884:	movt	r0, #3
   1b888:	ldr	r0, [r0]
   1b88c:	movw	r2, #4232	; 0x1088
   1b890:	movt	r2, #3
   1b894:	str	r0, [r2]
   1b898:	movw	r0, #456	; 0x1c8
   1b89c:	movt	r0, #3
   1b8a0:	movw	r2, #1
   1b8a4:	str	r2, [r0]
   1b8a8:	movw	r0, #476	; 0x1dc
   1b8ac:	movt	r0, #3
   1b8b0:	str	r2, [r0]
   1b8b4:	str	r2, [fp, #-12]
   1b8b8:	str	r2, [fp, #-16]
   1b8bc:	movw	r0, #4248	; 0x1098
   1b8c0:	movt	r0, #3
   1b8c4:	str	r1, [r0]
   1b8c8:	movw	r0, #4632	; 0x1218
   1b8cc:	movt	r0, #3
   1b8d0:	str	r1, [r0]
   1b8d4:	movw	r0, #4636	; 0x121c
   1b8d8:	movt	r0, #3
   1b8dc:	str	r1, [r0]
   1b8e0:	movw	r0, #468	; 0x1d4
   1b8e4:	movt	r0, #3
   1b8e8:	str	r1, [r0]
   1b8ec:	str	r1, [fp, #-20]	; 0xffffffec
   1b8f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b8f4:	ldr	r1, [fp, #-4]
   1b8f8:	cmp	r0, r1
   1b8fc:	bge	1bde4 <main@@Base+0xebc>
   1b900:	ldr	r0, [fp, #-8]
   1b904:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b908:	add	r0, r0, r1, lsl #2
   1b90c:	ldr	r0, [r0]
   1b910:	movw	r1, #62595	; 0xf483
   1b914:	movt	r1, #1
   1b918:	bl	125d0 <strcmp@plt>
   1b91c:	cmp	r0, #0
   1b920:	beq	1b948 <main@@Base+0xa20>
   1b924:	ldr	r0, [fp, #-8]
   1b928:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b92c:	add	r0, r0, r1, lsl #2
   1b930:	ldr	r0, [r0]
   1b934:	movw	r1, #62598	; 0xf486
   1b938:	movt	r1, #1
   1b93c:	bl	125d0 <strcmp@plt>
   1b940:	cmp	r0, #0
   1b944:	bne	1b954 <main@@Base+0xa2c>
   1b948:	movw	r0, #0
   1b94c:	str	r0, [fp, #-16]
   1b950:	b	1bdd0 <main@@Base+0xea8>
   1b954:	ldr	r0, [fp, #-8]
   1b958:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b95c:	add	r0, r0, r1, lsl #2
   1b960:	ldr	r0, [r0]
   1b964:	movw	r1, #62620	; 0xf49c
   1b968:	movt	r1, #1
   1b96c:	bl	125d0 <strcmp@plt>
   1b970:	cmp	r0, #0
   1b974:	beq	1b99c <main@@Base+0xa74>
   1b978:	ldr	r0, [fp, #-8]
   1b97c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b980:	add	r0, r0, r1, lsl #2
   1b984:	ldr	r0, [r0]
   1b988:	movw	r1, #62623	; 0xf49f
   1b98c:	movt	r1, #1
   1b990:	bl	125d0 <strcmp@plt>
   1b994:	cmp	r0, #0
   1b998:	bne	1ba3c <main@@Base+0xb14>
   1b99c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b9a0:	add	r0, r0, #1
   1b9a4:	ldr	r1, [fp, #-4]
   1b9a8:	cmp	r0, r1
   1b9ac:	bge	1ba3c <main@@Base+0xb14>
   1b9b0:	ldr	r0, [fp, #-8]
   1b9b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9b8:	add	r1, r1, #1
   1b9bc:	add	r0, r0, r1, lsl #2
   1b9c0:	ldr	r0, [r0]
   1b9c4:	ldrb	r0, [r0]
   1b9c8:	cmp	r0, #45	; 0x2d
   1b9cc:	beq	1ba3c <main@@Base+0xb14>
   1b9d0:	ldr	r0, [fp, #-8]
   1b9d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b9d8:	add	r1, r1, #1
   1b9dc:	add	r0, r0, r1, lsl #2
   1b9e0:	ldr	r0, [r0]
   1b9e4:	bl	17348 <codadump_filter_create@@Base>
   1b9e8:	movw	r1, #480	; 0x1e0
   1b9ec:	movt	r1, #3
   1b9f0:	str	r0, [r1, #664]	; 0x298
   1b9f4:	ldr	r0, [r1, #664]	; 0x298
   1b9f8:	movw	r1, #0
   1b9fc:	cmp	r0, r1
   1ba00:	bne	1ba2c <main@@Base+0xb04>
   1ba04:	movw	r0, #424	; 0x1a8
   1ba08:	movt	r0, #3
   1ba0c:	ldr	r0, [r0]
   1ba10:	movw	r1, #62632	; 0xf4a8
   1ba14:	movt	r1, #1
   1ba18:	bl	12810 <fprintf@plt>
   1ba1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ba20:	bl	1cf78 <main@@Base+0x2050>
   1ba24:	movw	r0, #1
   1ba28:	bl	127c8 <exit@plt>
   1ba2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ba30:	add	r0, r0, #1
   1ba34:	str	r0, [fp, #-20]	; 0xffffffec
   1ba38:	b	1bdcc <main@@Base+0xea4>
   1ba3c:	ldr	r0, [fp, #-8]
   1ba40:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba44:	add	r0, r0, r1, lsl #2
   1ba48:	ldr	r0, [r0]
   1ba4c:	movw	r1, #62739	; 0xf513
   1ba50:	movt	r1, #1
   1ba54:	bl	125d0 <strcmp@plt>
   1ba58:	cmp	r0, #0
   1ba5c:	beq	1ba84 <main@@Base+0xb5c>
   1ba60:	ldr	r0, [fp, #-8]
   1ba64:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ba68:	add	r0, r0, r1, lsl #2
   1ba6c:	ldr	r0, [r0]
   1ba70:	movw	r1, #62742	; 0xf516
   1ba74:	movt	r1, #1
   1ba78:	bl	125d0 <strcmp@plt>
   1ba7c:	cmp	r0, #0
   1ba80:	bne	1ba98 <main@@Base+0xb70>
   1ba84:	movw	r0, #4248	; 0x1098
   1ba88:	movt	r0, #3
   1ba8c:	movw	r1, #1
   1ba90:	str	r1, [r0]
   1ba94:	b	1bdc8 <main@@Base+0xea0>
   1ba98:	ldr	r0, [fp, #-8]
   1ba9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1baa0:	add	r0, r0, r1, lsl #2
   1baa4:	ldr	r0, [r0]
   1baa8:	movw	r1, #62750	; 0xf51e
   1baac:	movt	r1, #1
   1bab0:	bl	125d0 <strcmp@plt>
   1bab4:	cmp	r0, #0
   1bab8:	beq	1bae0 <main@@Base+0xbb8>
   1babc:	ldr	r0, [fp, #-8]
   1bac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bac4:	add	r0, r0, r1, lsl #2
   1bac8:	ldr	r0, [r0]
   1bacc:	movw	r1, #62753	; 0xf521
   1bad0:	movt	r1, #1
   1bad4:	bl	125d0 <strcmp@plt>
   1bad8:	cmp	r0, #0
   1badc:	bne	1baf4 <main@@Base+0xbcc>
   1bae0:	movw	r0, #4632	; 0x1218
   1bae4:	movt	r0, #3
   1bae8:	movw	r1, #1
   1baec:	str	r1, [r0]
   1baf0:	b	1bdc4 <main@@Base+0xe9c>
   1baf4:	ldr	r0, [fp, #-8]
   1baf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bafc:	add	r0, r0, r1, lsl #2
   1bb00:	ldr	r0, [r0]
   1bb04:	movw	r1, #62761	; 0xf529
   1bb08:	movt	r1, #1
   1bb0c:	bl	125d0 <strcmp@plt>
   1bb10:	cmp	r0, #0
   1bb14:	beq	1bb3c <main@@Base+0xc14>
   1bb18:	ldr	r0, [fp, #-8]
   1bb1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb20:	add	r0, r0, r1, lsl #2
   1bb24:	ldr	r0, [r0]
   1bb28:	movw	r1, #62764	; 0xf52c
   1bb2c:	movt	r1, #1
   1bb30:	bl	125d0 <strcmp@plt>
   1bb34:	cmp	r0, #0
   1bb38:	bne	1bba0 <main@@Base+0xc78>
   1bb3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb40:	add	r0, r0, #1
   1bb44:	ldr	r1, [fp, #-4]
   1bb48:	cmp	r0, r1
   1bb4c:	bge	1bba0 <main@@Base+0xc78>
   1bb50:	ldr	r0, [fp, #-8]
   1bb54:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb58:	add	r1, r1, #1
   1bb5c:	add	r0, r0, r1, lsl #2
   1bb60:	ldr	r0, [r0]
   1bb64:	ldrb	r0, [r0]
   1bb68:	cmp	r0, #45	; 0x2d
   1bb6c:	beq	1bba0 <main@@Base+0xc78>
   1bb70:	ldr	r0, [fp, #-8]
   1bb74:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bb78:	add	r1, r1, #1
   1bb7c:	add	r0, r0, r1, lsl #2
   1bb80:	ldr	r0, [r0]
   1bb84:	movw	r1, #464	; 0x1d0
   1bb88:	movt	r1, #3
   1bb8c:	str	r0, [r1]
   1bb90:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bb94:	add	r0, r0, #1
   1bb98:	str	r0, [fp, #-20]	; 0xffffffec
   1bb9c:	b	1bdc0 <main@@Base+0xe98>
   1bba0:	ldr	r0, [fp, #-8]
   1bba4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bba8:	add	r0, r0, r1, lsl #2
   1bbac:	ldr	r0, [r0]
   1bbb0:	movw	r1, #62773	; 0xf535
   1bbb4:	movt	r1, #1
   1bbb8:	bl	125d0 <strcmp@plt>
   1bbbc:	cmp	r0, #0
   1bbc0:	beq	1bbe8 <main@@Base+0xcc0>
   1bbc4:	ldr	r0, [fp, #-8]
   1bbc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bbcc:	add	r0, r0, r1, lsl #2
   1bbd0:	ldr	r0, [r0]
   1bbd4:	movw	r1, #62776	; 0xf538
   1bbd8:	movt	r1, #1
   1bbdc:	bl	125d0 <strcmp@plt>
   1bbe0:	cmp	r0, #0
   1bbe4:	bne	1bbfc <main@@Base+0xcd4>
   1bbe8:	movw	r0, #4636	; 0x121c
   1bbec:	movt	r0, #3
   1bbf0:	movw	r1, #1
   1bbf4:	str	r1, [r0]
   1bbf8:	b	1bdbc <main@@Base+0xe94>
   1bbfc:	ldr	r0, [fp, #-8]
   1bc00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc04:	add	r0, r0, r1, lsl #2
   1bc08:	ldr	r0, [r0]
   1bc0c:	movw	r1, #62792	; 0xf548
   1bc10:	movt	r1, #1
   1bc14:	bl	125d0 <strcmp@plt>
   1bc18:	cmp	r0, #0
   1bc1c:	beq	1bc44 <main@@Base+0xd1c>
   1bc20:	ldr	r0, [fp, #-8]
   1bc24:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc28:	add	r0, r0, r1, lsl #2
   1bc2c:	ldr	r0, [r0]
   1bc30:	movw	r1, #62795	; 0xf54b
   1bc34:	movt	r1, #1
   1bc38:	bl	125d0 <strcmp@plt>
   1bc3c:	cmp	r0, #0
   1bc40:	bne	1bca8 <main@@Base+0xd80>
   1bc44:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bc48:	add	r0, r0, #1
   1bc4c:	ldr	r1, [fp, #-4]
   1bc50:	cmp	r0, r1
   1bc54:	bge	1bca8 <main@@Base+0xd80>
   1bc58:	ldr	r0, [fp, #-8]
   1bc5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc60:	add	r1, r1, #1
   1bc64:	add	r0, r0, r1, lsl #2
   1bc68:	ldr	r0, [r0]
   1bc6c:	ldrb	r0, [r0]
   1bc70:	cmp	r0, #45	; 0x2d
   1bc74:	beq	1bca8 <main@@Base+0xd80>
   1bc78:	ldr	r0, [fp, #-8]
   1bc7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bc80:	add	r1, r1, #1
   1bc84:	add	r0, r0, r1, lsl #2
   1bc88:	ldr	r0, [r0]
   1bc8c:	movw	r1, #4236	; 0x108c
   1bc90:	movt	r1, #3
   1bc94:	str	r0, [r1]
   1bc98:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bc9c:	add	r0, r0, #1
   1bca0:	str	r0, [fp, #-20]	; 0xffffffec
   1bca4:	b	1bdb8 <main@@Base+0xe90>
   1bca8:	ldr	r0, [fp, #-8]
   1bcac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bcb0:	add	r0, r0, r1, lsl #2
   1bcb4:	ldr	r0, [r0]
   1bcb8:	movw	r1, #62673	; 0xf4d1
   1bcbc:	movt	r1, #1
   1bcc0:	bl	125d0 <strcmp@plt>
   1bcc4:	cmp	r0, #0
   1bcc8:	beq	1bcf0 <main@@Base+0xdc8>
   1bccc:	ldr	r0, [fp, #-8]
   1bcd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bcd4:	add	r0, r0, r1, lsl #2
   1bcd8:	ldr	r0, [r0]
   1bcdc:	movw	r1, #62814	; 0xf55e
   1bce0:	movt	r1, #1
   1bce4:	bl	125d0 <strcmp@plt>
   1bce8:	cmp	r0, #0
   1bcec:	bne	1bd04 <main@@Base+0xddc>
   1bcf0:	movw	r0, #468	; 0x1d4
   1bcf4:	movt	r0, #3
   1bcf8:	movw	r1, #1
   1bcfc:	str	r1, [r0]
   1bd00:	b	1bdb4 <main@@Base+0xe8c>
   1bd04:	ldr	r0, [fp, #-8]
   1bd08:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd0c:	add	r0, r0, r1, lsl #2
   1bd10:	ldr	r0, [r0]
   1bd14:	movw	r1, #62720	; 0xf500
   1bd18:	movt	r1, #1
   1bd1c:	bl	125d0 <strcmp@plt>
   1bd20:	cmp	r0, #0
   1bd24:	bne	1bd34 <main@@Base+0xe0c>
   1bd28:	movw	r0, #0
   1bd2c:	str	r0, [fp, #-12]
   1bd30:	b	1bdb0 <main@@Base+0xe88>
   1bd34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd38:	ldr	r1, [fp, #-4]
   1bd3c:	sub	r1, r1, #1
   1bd40:	cmp	r0, r1
   1bd44:	bne	1bd84 <main@@Base+0xe5c>
   1bd48:	ldr	r0, [fp, #-8]
   1bd4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd50:	add	r0, r0, r1, lsl #2
   1bd54:	ldr	r0, [r0]
   1bd58:	ldrb	r0, [r0]
   1bd5c:	cmp	r0, #45	; 0x2d
   1bd60:	beq	1bd84 <main@@Base+0xe5c>
   1bd64:	ldr	r0, [fp, #-8]
   1bd68:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd6c:	add	r0, r0, r1, lsl #2
   1bd70:	ldr	r0, [r0]
   1bd74:	movw	r1, #480	; 0x1e0
   1bd78:	movt	r1, #3
   1bd7c:	str	r0, [r1]
   1bd80:	b	1bdac <main@@Base+0xe84>
   1bd84:	movw	r0, #424	; 0x1a8
   1bd88:	movt	r0, #3
   1bd8c:	ldr	r0, [r0]
   1bd90:	movw	r1, #58522	; 0xe49a
   1bd94:	movt	r1, #1
   1bd98:	bl	12810 <fprintf@plt>
   1bd9c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bda0:	bl	1cf78 <main@@Base+0x2050>
   1bda4:	movw	r0, #1
   1bda8:	bl	127c8 <exit@plt>
   1bdac:	b	1bdb0 <main@@Base+0xe88>
   1bdb0:	b	1bdb4 <main@@Base+0xe8c>
   1bdb4:	b	1bdb8 <main@@Base+0xe90>
   1bdb8:	b	1bdbc <main@@Base+0xe94>
   1bdbc:	b	1bdc0 <main@@Base+0xe98>
   1bdc0:	b	1bdc4 <main@@Base+0xe9c>
   1bdc4:	b	1bdc8 <main@@Base+0xea0>
   1bdc8:	b	1bdcc <main@@Base+0xea4>
   1bdcc:	b	1bdd0 <main@@Base+0xea8>
   1bdd0:	b	1bdd4 <main@@Base+0xeac>
   1bdd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bdd8:	add	r0, r0, #1
   1bddc:	str	r0, [fp, #-20]	; 0xffffffec
   1bde0:	b	1b8f0 <main@@Base+0x9c8>
   1bde4:	movw	r0, #480	; 0x1e0
   1bde8:	movt	r0, #3
   1bdec:	ldr	r0, [r0]
   1bdf0:	movw	r1, #0
   1bdf4:	cmp	r0, r1
   1bdf8:	beq	1be14 <main@@Base+0xeec>
   1bdfc:	movw	r0, #480	; 0x1e0
   1be00:	movt	r0, #3
   1be04:	ldr	r0, [r0]
   1be08:	ldrb	r0, [r0]
   1be0c:	cmp	r0, #0
   1be10:	bne	1be3c <main@@Base+0xf14>
   1be14:	movw	r0, #424	; 0x1a8
   1be18:	movt	r0, #3
   1be1c:	ldr	r0, [r0]
   1be20:	movw	r1, #58522	; 0xe49a
   1be24:	movt	r1, #1
   1be28:	bl	12810 <fprintf@plt>
   1be2c:	str	r0, [sp, #32]
   1be30:	bl	1cf78 <main@@Base+0x2050>
   1be34:	movw	r0, #1
   1be38:	bl	127c8 <exit@plt>
   1be3c:	bl	12834 <coda_init@plt>
   1be40:	cmp	r0, #0
   1be44:	beq	1be90 <main@@Base+0xf68>
   1be48:	movw	r0, #424	; 0x1a8
   1be4c:	movt	r0, #3
   1be50:	ldr	r0, [r0]
   1be54:	str	r0, [sp, #28]
   1be58:	bl	129a8 <coda_get_errno@plt>
   1be5c:	ldr	r0, [r0]
   1be60:	bl	12960 <coda_errno_to_string@plt>
   1be64:	ldr	lr, [sp, #28]
   1be68:	str	r0, [sp, #24]
   1be6c:	mov	r0, lr
   1be70:	movw	r1, #58432	; 0xe440
   1be74:	movt	r1, #1
   1be78:	ldr	r2, [sp, #24]
   1be7c:	bl	12810 <fprintf@plt>
   1be80:	movw	r1, #1
   1be84:	str	r0, [sp, #20]
   1be88:	mov	r0, r1
   1be8c:	bl	127c8 <exit@plt>
   1be90:	ldr	r0, [fp, #-12]
   1be94:	cmp	r0, #0
   1be98:	movw	r0, #0
   1be9c:	movne	r0, #1
   1bea0:	mvn	r1, #0
   1bea4:	eor	r0, r0, r1
   1bea8:	and	r0, r0, #1
   1beac:	bl	12684 <coda_set_option_bypass_special_types@plt>
   1beb0:	movw	r1, #0
   1beb4:	str	r0, [sp, #16]
   1beb8:	mov	r0, r1
   1bebc:	bl	125c4 <coda_set_option_perform_boundary_checks@plt>
   1bec0:	ldr	r1, [fp, #-16]
   1bec4:	str	r0, [sp, #12]
   1bec8:	mov	r0, r1
   1becc:	bl	12840 <coda_set_option_perform_conversions@plt>
   1bed0:	movw	r1, #36988	; 0x907c
   1bed4:	movt	r1, #1
   1bed8:	str	r0, [sp, #8]
   1bedc:	blx	r1
   1bee0:	movw	r0, #20696	; 0x50d8
   1bee4:	movt	r0, #1
   1bee8:	blx	r0
   1beec:	movw	r0, #464	; 0x1d0
   1bef0:	movt	r0, #3
   1bef4:	ldr	r0, [r0]
   1bef8:	movw	r1, #0
   1befc:	cmp	r0, r1
   1bf00:	beq	1bf70 <main@@Base+0x1048>
   1bf04:	movw	r0, #464	; 0x1d0
   1bf08:	movt	r0, #3
   1bf0c:	ldr	r0, [r0]
   1bf10:	movw	r1, #62831	; 0xf56f
   1bf14:	movt	r1, #1
   1bf18:	bl	12600 <fopen@plt>
   1bf1c:	movw	r1, #4232	; 0x1088
   1bf20:	movt	r1, #3
   1bf24:	str	r0, [r1]
   1bf28:	ldr	r0, [r1]
   1bf2c:	movw	r1, #0
   1bf30:	cmp	r0, r1
   1bf34:	bne	1bf6c <main@@Base+0x1044>
   1bf38:	movw	r0, #424	; 0x1a8
   1bf3c:	movt	r0, #3
   1bf40:	ldr	r0, [r0]
   1bf44:	movw	r1, #464	; 0x1d0
   1bf48:	movt	r1, #3
   1bf4c:	ldr	r2, [r1]
   1bf50:	movw	r1, #62833	; 0xf571
   1bf54:	movt	r1, #1
   1bf58:	bl	12810 <fprintf@plt>
   1bf5c:	movw	r1, #1
   1bf60:	str	r0, [sp, #4]
   1bf64:	mov	r0, r1
   1bf68:	bl	127c8 <exit@plt>
   1bf6c:	b	1bf70 <main@@Base+0x1048>
   1bf70:	movw	r0, #37124	; 0x9104
   1bf74:	movt	r0, #1
   1bf78:	blx	r0
   1bf7c:	movw	r0, #464	; 0x1d0
   1bf80:	movt	r0, #3
   1bf84:	ldr	r0, [r0]
   1bf88:	movw	lr, #0
   1bf8c:	cmp	r0, lr
   1bf90:	beq	1bfa8 <main@@Base+0x1080>
   1bf94:	movw	r0, #4232	; 0x1088
   1bf98:	movt	r0, #3
   1bf9c:	ldr	r0, [r0]
   1bfa0:	bl	128ac <fclose@plt>
   1bfa4:	str	r0, [sp]
   1bfa8:	movw	r0, #20728	; 0x50f8
   1bfac:	movt	r0, #1
   1bfb0:	blx	r0
   1bfb4:	movw	r0, #37020	; 0x909c
   1bfb8:	movt	r0, #1
   1bfbc:	blx	r0
   1bfc0:	bl	12768 <coda_done@plt>
   1bfc4:	mov	sp, fp
   1bfc8:	pop	{fp, pc}
   1bfcc:	push	{fp, lr}
   1bfd0:	mov	fp, sp
   1bfd4:	sub	sp, sp, #64	; 0x40
   1bfd8:	str	r0, [fp, #-4]
   1bfdc:	str	r1, [fp, #-8]
   1bfe0:	movw	r0, #480	; 0x1e0
   1bfe4:	movt	r0, #3
   1bfe8:	movw	r1, #0
   1bfec:	str	r1, [r0]
   1bff0:	movw	r0, #464	; 0x1d0
   1bff4:	movt	r0, #3
   1bff8:	str	r1, [r0]
   1bffc:	movw	r0, #4256	; 0x10a0
   1c000:	movt	r0, #3
   1c004:	str	r1, [r0]
   1c008:	movw	r0, #428	; 0x1ac
   1c00c:	movt	r0, #3
   1c010:	ldr	r0, [r0]
   1c014:	movw	r2, #4232	; 0x1088
   1c018:	movt	r2, #3
   1c01c:	str	r0, [r2]
   1c020:	movw	r0, #1
   1c024:	str	r0, [fp, #-12]
   1c028:	str	r0, [fp, #-16]
   1c02c:	str	r1, [fp, #-20]	; 0xffffffec
   1c030:	str	r1, [fp, #-24]	; 0xffffffe8
   1c034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c038:	ldr	r1, [fp, #-4]
   1c03c:	cmp	r0, r1
   1c040:	bge	1c314 <main@@Base+0x13ec>
   1c044:	ldr	r0, [fp, #-8]
   1c048:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c04c:	add	r0, r0, r1, lsl #2
   1c050:	ldr	r0, [r0]
   1c054:	movw	r1, #62875	; 0xf59b
   1c058:	movt	r1, #1
   1c05c:	bl	125d0 <strcmp@plt>
   1c060:	cmp	r0, #0
   1c064:	beq	1c08c <main@@Base+0x1164>
   1c068:	ldr	r0, [fp, #-8]
   1c06c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c070:	add	r0, r0, r1, lsl #2
   1c074:	ldr	r0, [r0]
   1c078:	movw	r1, #62878	; 0xf59e
   1c07c:	movt	r1, #1
   1c080:	bl	125d0 <strcmp@plt>
   1c084:	cmp	r0, #0
   1c088:	bne	1c098 <main@@Base+0x1170>
   1c08c:	movw	r0, #1
   1c090:	str	r0, [fp, #-20]	; 0xffffffec
   1c094:	b	1c300 <main@@Base+0x13d8>
   1c098:	ldr	r0, [fp, #-8]
   1c09c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0a0:	add	r0, r0, r1, lsl #2
   1c0a4:	ldr	r0, [r0]
   1c0a8:	movw	r1, #62595	; 0xf483
   1c0ac:	movt	r1, #1
   1c0b0:	bl	125d0 <strcmp@plt>
   1c0b4:	cmp	r0, #0
   1c0b8:	beq	1c0e0 <main@@Base+0x11b8>
   1c0bc:	ldr	r0, [fp, #-8]
   1c0c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0c4:	add	r0, r0, r1, lsl #2
   1c0c8:	ldr	r0, [r0]
   1c0cc:	movw	r1, #62598	; 0xf486
   1c0d0:	movt	r1, #1
   1c0d4:	bl	125d0 <strcmp@plt>
   1c0d8:	cmp	r0, #0
   1c0dc:	bne	1c0ec <main@@Base+0x11c4>
   1c0e0:	movw	r0, #0
   1c0e4:	str	r0, [fp, #-16]
   1c0e8:	b	1c2fc <main@@Base+0x13d4>
   1c0ec:	ldr	r0, [fp, #-8]
   1c0f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c0f4:	add	r0, r0, r1, lsl #2
   1c0f8:	ldr	r0, [r0]
   1c0fc:	movw	r1, #62761	; 0xf529
   1c100:	movt	r1, #1
   1c104:	bl	125d0 <strcmp@plt>
   1c108:	cmp	r0, #0
   1c10c:	beq	1c134 <main@@Base+0x120c>
   1c110:	ldr	r0, [fp, #-8]
   1c114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c118:	add	r0, r0, r1, lsl #2
   1c11c:	ldr	r0, [r0]
   1c120:	movw	r1, #62764	; 0xf52c
   1c124:	movt	r1, #1
   1c128:	bl	125d0 <strcmp@plt>
   1c12c:	cmp	r0, #0
   1c130:	bne	1c198 <main@@Base+0x1270>
   1c134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c138:	add	r0, r0, #1
   1c13c:	ldr	r1, [fp, #-4]
   1c140:	cmp	r0, r1
   1c144:	bge	1c198 <main@@Base+0x1270>
   1c148:	ldr	r0, [fp, #-8]
   1c14c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c150:	add	r1, r1, #1
   1c154:	add	r0, r0, r1, lsl #2
   1c158:	ldr	r0, [r0]
   1c15c:	ldrb	r0, [r0]
   1c160:	cmp	r0, #45	; 0x2d
   1c164:	beq	1c198 <main@@Base+0x1270>
   1c168:	ldr	r0, [fp, #-8]
   1c16c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c170:	add	r1, r1, #1
   1c174:	add	r0, r0, r1, lsl #2
   1c178:	ldr	r0, [r0]
   1c17c:	movw	r1, #464	; 0x1d0
   1c180:	movt	r1, #3
   1c184:	str	r0, [r1]
   1c188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c18c:	add	r0, r0, #1
   1c190:	str	r0, [fp, #-24]	; 0xffffffe8
   1c194:	b	1c2f8 <main@@Base+0x13d0>
   1c198:	ldr	r0, [fp, #-8]
   1c19c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c1a0:	add	r0, r0, r1, lsl #2
   1c1a4:	ldr	r0, [r0]
   1c1a8:	movw	r1, #62891	; 0xf5ab
   1c1ac:	movt	r1, #1
   1c1b0:	bl	125d0 <strcmp@plt>
   1c1b4:	cmp	r0, #0
   1c1b8:	beq	1c1e0 <main@@Base+0x12b8>
   1c1bc:	ldr	r0, [fp, #-8]
   1c1c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c1c4:	add	r0, r0, r1, lsl #2
   1c1c8:	ldr	r0, [r0]
   1c1cc:	movw	r1, #62894	; 0xf5ae
   1c1d0:	movt	r1, #1
   1c1d4:	bl	125d0 <strcmp@plt>
   1c1d8:	cmp	r0, #0
   1c1dc:	bne	1c244 <main@@Base+0x131c>
   1c1e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1e4:	add	r0, r0, #1
   1c1e8:	ldr	r1, [fp, #-4]
   1c1ec:	cmp	r0, r1
   1c1f0:	bge	1c244 <main@@Base+0x131c>
   1c1f4:	ldr	r0, [fp, #-8]
   1c1f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c1fc:	add	r1, r1, #1
   1c200:	add	r0, r0, r1, lsl #2
   1c204:	ldr	r0, [r0]
   1c208:	ldrb	r0, [r0]
   1c20c:	cmp	r0, #45	; 0x2d
   1c210:	beq	1c244 <main@@Base+0x131c>
   1c214:	ldr	r0, [fp, #-8]
   1c218:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c21c:	add	r1, r1, #1
   1c220:	add	r0, r0, r1, lsl #2
   1c224:	ldr	r0, [r0]
   1c228:	movw	r1, #4256	; 0x10a0
   1c22c:	movt	r1, #3
   1c230:	str	r0, [r1]
   1c234:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c238:	add	r0, r0, #1
   1c23c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c240:	b	1c2f4 <main@@Base+0x13cc>
   1c244:	ldr	r0, [fp, #-8]
   1c248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c24c:	add	r0, r0, r1, lsl #2
   1c250:	ldr	r0, [r0]
   1c254:	movw	r1, #62720	; 0xf500
   1c258:	movt	r1, #1
   1c25c:	bl	125d0 <strcmp@plt>
   1c260:	cmp	r0, #0
   1c264:	bne	1c274 <main@@Base+0x134c>
   1c268:	movw	r0, #0
   1c26c:	str	r0, [fp, #-12]
   1c270:	b	1c2f0 <main@@Base+0x13c8>
   1c274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c278:	ldr	r1, [fp, #-4]
   1c27c:	sub	r1, r1, #1
   1c280:	cmp	r0, r1
   1c284:	bne	1c2c4 <main@@Base+0x139c>
   1c288:	ldr	r0, [fp, #-8]
   1c28c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c290:	add	r0, r0, r1, lsl #2
   1c294:	ldr	r0, [r0]
   1c298:	ldrb	r0, [r0]
   1c29c:	cmp	r0, #45	; 0x2d
   1c2a0:	beq	1c2c4 <main@@Base+0x139c>
   1c2a4:	ldr	r0, [fp, #-8]
   1c2a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c2ac:	add	r0, r0, r1, lsl #2
   1c2b0:	ldr	r0, [r0]
   1c2b4:	movw	r1, #480	; 0x1e0
   1c2b8:	movt	r1, #3
   1c2bc:	str	r0, [r1]
   1c2c0:	b	1c2ec <main@@Base+0x13c4>
   1c2c4:	movw	r0, #424	; 0x1a8
   1c2c8:	movt	r0, #3
   1c2cc:	ldr	r0, [r0]
   1c2d0:	movw	r1, #58522	; 0xe49a
   1c2d4:	movt	r1, #1
   1c2d8:	bl	12810 <fprintf@plt>
   1c2dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1c2e0:	bl	1cf78 <main@@Base+0x2050>
   1c2e4:	movw	r0, #1
   1c2e8:	bl	127c8 <exit@plt>
   1c2ec:	b	1c2f0 <main@@Base+0x13c8>
   1c2f0:	b	1c2f4 <main@@Base+0x13cc>
   1c2f4:	b	1c2f8 <main@@Base+0x13d0>
   1c2f8:	b	1c2fc <main@@Base+0x13d4>
   1c2fc:	b	1c300 <main@@Base+0x13d8>
   1c300:	b	1c304 <main@@Base+0x13dc>
   1c304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c308:	add	r0, r0, #1
   1c30c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c310:	b	1c034 <main@@Base+0x110c>
   1c314:	movw	r0, #480	; 0x1e0
   1c318:	movt	r0, #3
   1c31c:	ldr	r0, [r0]
   1c320:	movw	r1, #0
   1c324:	cmp	r0, r1
   1c328:	beq	1c344 <main@@Base+0x141c>
   1c32c:	movw	r0, #480	; 0x1e0
   1c330:	movt	r0, #3
   1c334:	ldr	r0, [r0]
   1c338:	ldrb	r0, [r0]
   1c33c:	cmp	r0, #0
   1c340:	bne	1c36c <main@@Base+0x1444>
   1c344:	movw	r0, #424	; 0x1a8
   1c348:	movt	r0, #3
   1c34c:	ldr	r0, [r0]
   1c350:	movw	r1, #58522	; 0xe49a
   1c354:	movt	r1, #1
   1c358:	bl	12810 <fprintf@plt>
   1c35c:	str	r0, [sp, #32]
   1c360:	bl	1cf78 <main@@Base+0x2050>
   1c364:	movw	r0, #1
   1c368:	bl	127c8 <exit@plt>
   1c36c:	bl	12834 <coda_init@plt>
   1c370:	cmp	r0, #0
   1c374:	beq	1c3c0 <main@@Base+0x1498>
   1c378:	movw	r0, #424	; 0x1a8
   1c37c:	movt	r0, #3
   1c380:	ldr	r0, [r0]
   1c384:	str	r0, [sp, #28]
   1c388:	bl	129a8 <coda_get_errno@plt>
   1c38c:	ldr	r0, [r0]
   1c390:	bl	12960 <coda_errno_to_string@plt>
   1c394:	ldr	lr, [sp, #28]
   1c398:	str	r0, [sp, #24]
   1c39c:	mov	r0, lr
   1c3a0:	movw	r1, #58432	; 0xe440
   1c3a4:	movt	r1, #1
   1c3a8:	ldr	r2, [sp, #24]
   1c3ac:	bl	12810 <fprintf@plt>
   1c3b0:	movw	r1, #1
   1c3b4:	str	r0, [sp, #20]
   1c3b8:	mov	r0, r1
   1c3bc:	bl	127c8 <exit@plt>
   1c3c0:	ldr	r0, [fp, #-12]
   1c3c4:	cmp	r0, #0
   1c3c8:	movw	r0, #0
   1c3cc:	movne	r0, #1
   1c3d0:	mvn	r1, #0
   1c3d4:	eor	r0, r0, r1
   1c3d8:	and	r0, r0, #1
   1c3dc:	bl	12684 <coda_set_option_bypass_special_types@plt>
   1c3e0:	ldr	r1, [fp, #-16]
   1c3e4:	str	r0, [sp, #16]
   1c3e8:	mov	r0, r1
   1c3ec:	bl	12840 <coda_set_option_perform_conversions@plt>
   1c3f0:	movw	r1, #464	; 0x1d0
   1c3f4:	movt	r1, #3
   1c3f8:	ldr	r1, [r1]
   1c3fc:	movw	lr, #0
   1c400:	cmp	r1, lr
   1c404:	str	r0, [sp, #12]
   1c408:	beq	1c478 <main@@Base+0x1550>
   1c40c:	movw	r0, #464	; 0x1d0
   1c410:	movt	r0, #3
   1c414:	ldr	r0, [r0]
   1c418:	movw	r1, #62831	; 0xf56f
   1c41c:	movt	r1, #1
   1c420:	bl	12600 <fopen@plt>
   1c424:	movw	r1, #4232	; 0x1088
   1c428:	movt	r1, #3
   1c42c:	str	r0, [r1]
   1c430:	ldr	r0, [r1]
   1c434:	movw	r1, #0
   1c438:	cmp	r0, r1
   1c43c:	bne	1c474 <main@@Base+0x154c>
   1c440:	movw	r0, #424	; 0x1a8
   1c444:	movt	r0, #3
   1c448:	ldr	r0, [r0]
   1c44c:	movw	r1, #464	; 0x1d0
   1c450:	movt	r1, #3
   1c454:	ldr	r2, [r1]
   1c458:	movw	r1, #62833	; 0xf571
   1c45c:	movt	r1, #1
   1c460:	bl	12810 <fprintf@plt>
   1c464:	movw	r1, #1
   1c468:	str	r0, [sp, #8]
   1c46c:	mov	r0, r1
   1c470:	bl	127c8 <exit@plt>
   1c474:	b	1c478 <main@@Base+0x1550>
   1c478:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c47c:	bl	17bc8 <print_json_data@@Base>
   1c480:	movw	r0, #464	; 0x1d0
   1c484:	movt	r0, #3
   1c488:	ldr	r0, [r0]
   1c48c:	movw	lr, #0
   1c490:	cmp	r0, lr
   1c494:	beq	1c4ac <main@@Base+0x1584>
   1c498:	movw	r0, #4232	; 0x1088
   1c49c:	movt	r0, #3
   1c4a0:	ldr	r0, [r0]
   1c4a4:	bl	128ac <fclose@plt>
   1c4a8:	str	r0, [sp, #4]
   1c4ac:	bl	12768 <coda_done@plt>
   1c4b0:	mov	sp, fp
   1c4b4:	pop	{fp, pc}
   1c4b8:	push	{fp, lr}
   1c4bc:	mov	fp, sp
   1c4c0:	sub	sp, sp, #64	; 0x40
   1c4c4:	str	r0, [fp, #-4]
   1c4c8:	str	r1, [fp, #-8]
   1c4cc:	movw	r0, #480	; 0x1e0
   1c4d0:	movt	r0, #3
   1c4d4:	movw	r1, #0
   1c4d8:	str	r1, [r0]
   1c4dc:	movw	r0, #464	; 0x1d0
   1c4e0:	movt	r0, #3
   1c4e4:	str	r1, [r0]
   1c4e8:	movw	r0, #4256	; 0x10a0
   1c4ec:	movt	r0, #3
   1c4f0:	str	r1, [r0]
   1c4f4:	movw	r0, #428	; 0x1ac
   1c4f8:	movt	r0, #3
   1c4fc:	ldr	r0, [r0]
   1c500:	movw	r2, #4232	; 0x1088
   1c504:	movt	r2, #3
   1c508:	str	r0, [r2]
   1c50c:	movw	r0, #1
   1c510:	str	r0, [fp, #-12]
   1c514:	str	r0, [fp, #-16]
   1c518:	str	r1, [fp, #-20]	; 0xffffffec
   1c51c:	str	r1, [fp, #-24]	; 0xffffffe8
   1c520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c524:	ldr	r1, [fp, #-4]
   1c528:	cmp	r0, r1
   1c52c:	bge	1c800 <main@@Base+0x18d8>
   1c530:	ldr	r0, [fp, #-8]
   1c534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c538:	add	r0, r0, r1, lsl #2
   1c53c:	ldr	r0, [r0]
   1c540:	movw	r1, #62875	; 0xf59b
   1c544:	movt	r1, #1
   1c548:	bl	125d0 <strcmp@plt>
   1c54c:	cmp	r0, #0
   1c550:	beq	1c578 <main@@Base+0x1650>
   1c554:	ldr	r0, [fp, #-8]
   1c558:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c55c:	add	r0, r0, r1, lsl #2
   1c560:	ldr	r0, [r0]
   1c564:	movw	r1, #62878	; 0xf59e
   1c568:	movt	r1, #1
   1c56c:	bl	125d0 <strcmp@plt>
   1c570:	cmp	r0, #0
   1c574:	bne	1c584 <main@@Base+0x165c>
   1c578:	movw	r0, #1
   1c57c:	str	r0, [fp, #-20]	; 0xffffffec
   1c580:	b	1c7ec <main@@Base+0x18c4>
   1c584:	ldr	r0, [fp, #-8]
   1c588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c58c:	add	r0, r0, r1, lsl #2
   1c590:	ldr	r0, [r0]
   1c594:	movw	r1, #62595	; 0xf483
   1c598:	movt	r1, #1
   1c59c:	bl	125d0 <strcmp@plt>
   1c5a0:	cmp	r0, #0
   1c5a4:	beq	1c5cc <main@@Base+0x16a4>
   1c5a8:	ldr	r0, [fp, #-8]
   1c5ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c5b0:	add	r0, r0, r1, lsl #2
   1c5b4:	ldr	r0, [r0]
   1c5b8:	movw	r1, #62598	; 0xf486
   1c5bc:	movt	r1, #1
   1c5c0:	bl	125d0 <strcmp@plt>
   1c5c4:	cmp	r0, #0
   1c5c8:	bne	1c5d8 <main@@Base+0x16b0>
   1c5cc:	movw	r0, #0
   1c5d0:	str	r0, [fp, #-16]
   1c5d4:	b	1c7e8 <main@@Base+0x18c0>
   1c5d8:	ldr	r0, [fp, #-8]
   1c5dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c5e0:	add	r0, r0, r1, lsl #2
   1c5e4:	ldr	r0, [r0]
   1c5e8:	movw	r1, #62761	; 0xf529
   1c5ec:	movt	r1, #1
   1c5f0:	bl	125d0 <strcmp@plt>
   1c5f4:	cmp	r0, #0
   1c5f8:	beq	1c620 <main@@Base+0x16f8>
   1c5fc:	ldr	r0, [fp, #-8]
   1c600:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c604:	add	r0, r0, r1, lsl #2
   1c608:	ldr	r0, [r0]
   1c60c:	movw	r1, #62764	; 0xf52c
   1c610:	movt	r1, #1
   1c614:	bl	125d0 <strcmp@plt>
   1c618:	cmp	r0, #0
   1c61c:	bne	1c684 <main@@Base+0x175c>
   1c620:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c624:	add	r0, r0, #1
   1c628:	ldr	r1, [fp, #-4]
   1c62c:	cmp	r0, r1
   1c630:	bge	1c684 <main@@Base+0x175c>
   1c634:	ldr	r0, [fp, #-8]
   1c638:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c63c:	add	r1, r1, #1
   1c640:	add	r0, r0, r1, lsl #2
   1c644:	ldr	r0, [r0]
   1c648:	ldrb	r0, [r0]
   1c64c:	cmp	r0, #45	; 0x2d
   1c650:	beq	1c684 <main@@Base+0x175c>
   1c654:	ldr	r0, [fp, #-8]
   1c658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c65c:	add	r1, r1, #1
   1c660:	add	r0, r0, r1, lsl #2
   1c664:	ldr	r0, [r0]
   1c668:	movw	r1, #464	; 0x1d0
   1c66c:	movt	r1, #3
   1c670:	str	r0, [r1]
   1c674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c678:	add	r0, r0, #1
   1c67c:	str	r0, [fp, #-24]	; 0xffffffe8
   1c680:	b	1c7e4 <main@@Base+0x18bc>
   1c684:	ldr	r0, [fp, #-8]
   1c688:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c68c:	add	r0, r0, r1, lsl #2
   1c690:	ldr	r0, [r0]
   1c694:	movw	r1, #62891	; 0xf5ab
   1c698:	movt	r1, #1
   1c69c:	bl	125d0 <strcmp@plt>
   1c6a0:	cmp	r0, #0
   1c6a4:	beq	1c6cc <main@@Base+0x17a4>
   1c6a8:	ldr	r0, [fp, #-8]
   1c6ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6b0:	add	r0, r0, r1, lsl #2
   1c6b4:	ldr	r0, [r0]
   1c6b8:	movw	r1, #62894	; 0xf5ae
   1c6bc:	movt	r1, #1
   1c6c0:	bl	125d0 <strcmp@plt>
   1c6c4:	cmp	r0, #0
   1c6c8:	bne	1c730 <main@@Base+0x1808>
   1c6cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c6d0:	add	r0, r0, #1
   1c6d4:	ldr	r1, [fp, #-4]
   1c6d8:	cmp	r0, r1
   1c6dc:	bge	1c730 <main@@Base+0x1808>
   1c6e0:	ldr	r0, [fp, #-8]
   1c6e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c6e8:	add	r1, r1, #1
   1c6ec:	add	r0, r0, r1, lsl #2
   1c6f0:	ldr	r0, [r0]
   1c6f4:	ldrb	r0, [r0]
   1c6f8:	cmp	r0, #45	; 0x2d
   1c6fc:	beq	1c730 <main@@Base+0x1808>
   1c700:	ldr	r0, [fp, #-8]
   1c704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c708:	add	r1, r1, #1
   1c70c:	add	r0, r0, r1, lsl #2
   1c710:	ldr	r0, [r0]
   1c714:	movw	r1, #4256	; 0x10a0
   1c718:	movt	r1, #3
   1c71c:	str	r0, [r1]
   1c720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c724:	add	r0, r0, #1
   1c728:	str	r0, [fp, #-24]	; 0xffffffe8
   1c72c:	b	1c7e0 <main@@Base+0x18b8>
   1c730:	ldr	r0, [fp, #-8]
   1c734:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c738:	add	r0, r0, r1, lsl #2
   1c73c:	ldr	r0, [r0]
   1c740:	movw	r1, #62720	; 0xf500
   1c744:	movt	r1, #1
   1c748:	bl	125d0 <strcmp@plt>
   1c74c:	cmp	r0, #0
   1c750:	bne	1c760 <main@@Base+0x1838>
   1c754:	movw	r0, #0
   1c758:	str	r0, [fp, #-12]
   1c75c:	b	1c7dc <main@@Base+0x18b4>
   1c760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c764:	ldr	r1, [fp, #-4]
   1c768:	sub	r1, r1, #1
   1c76c:	cmp	r0, r1
   1c770:	bne	1c7b0 <main@@Base+0x1888>
   1c774:	ldr	r0, [fp, #-8]
   1c778:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c77c:	add	r0, r0, r1, lsl #2
   1c780:	ldr	r0, [r0]
   1c784:	ldrb	r0, [r0]
   1c788:	cmp	r0, #45	; 0x2d
   1c78c:	beq	1c7b0 <main@@Base+0x1888>
   1c790:	ldr	r0, [fp, #-8]
   1c794:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c798:	add	r0, r0, r1, lsl #2
   1c79c:	ldr	r0, [r0]
   1c7a0:	movw	r1, #480	; 0x1e0
   1c7a4:	movt	r1, #3
   1c7a8:	str	r0, [r1]
   1c7ac:	b	1c7d8 <main@@Base+0x18b0>
   1c7b0:	movw	r0, #424	; 0x1a8
   1c7b4:	movt	r0, #3
   1c7b8:	ldr	r0, [r0]
   1c7bc:	movw	r1, #58522	; 0xe49a
   1c7c0:	movt	r1, #1
   1c7c4:	bl	12810 <fprintf@plt>
   1c7c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1c7cc:	bl	1cf78 <main@@Base+0x2050>
   1c7d0:	movw	r0, #1
   1c7d4:	bl	127c8 <exit@plt>
   1c7d8:	b	1c7dc <main@@Base+0x18b4>
   1c7dc:	b	1c7e0 <main@@Base+0x18b8>
   1c7e0:	b	1c7e4 <main@@Base+0x18bc>
   1c7e4:	b	1c7e8 <main@@Base+0x18c0>
   1c7e8:	b	1c7ec <main@@Base+0x18c4>
   1c7ec:	b	1c7f0 <main@@Base+0x18c8>
   1c7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c7f4:	add	r0, r0, #1
   1c7f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7fc:	b	1c520 <main@@Base+0x15f8>
   1c800:	movw	r0, #480	; 0x1e0
   1c804:	movt	r0, #3
   1c808:	ldr	r0, [r0]
   1c80c:	movw	r1, #0
   1c810:	cmp	r0, r1
   1c814:	beq	1c830 <main@@Base+0x1908>
   1c818:	movw	r0, #480	; 0x1e0
   1c81c:	movt	r0, #3
   1c820:	ldr	r0, [r0]
   1c824:	ldrb	r0, [r0]
   1c828:	cmp	r0, #0
   1c82c:	bne	1c858 <main@@Base+0x1930>
   1c830:	movw	r0, #424	; 0x1a8
   1c834:	movt	r0, #3
   1c838:	ldr	r0, [r0]
   1c83c:	movw	r1, #58522	; 0xe49a
   1c840:	movt	r1, #1
   1c844:	bl	12810 <fprintf@plt>
   1c848:	str	r0, [sp, #32]
   1c84c:	bl	1cf78 <main@@Base+0x2050>
   1c850:	movw	r0, #1
   1c854:	bl	127c8 <exit@plt>
   1c858:	bl	12834 <coda_init@plt>
   1c85c:	cmp	r0, #0
   1c860:	beq	1c8ac <main@@Base+0x1984>
   1c864:	movw	r0, #424	; 0x1a8
   1c868:	movt	r0, #3
   1c86c:	ldr	r0, [r0]
   1c870:	str	r0, [sp, #28]
   1c874:	bl	129a8 <coda_get_errno@plt>
   1c878:	ldr	r0, [r0]
   1c87c:	bl	12960 <coda_errno_to_string@plt>
   1c880:	ldr	lr, [sp, #28]
   1c884:	str	r0, [sp, #24]
   1c888:	mov	r0, lr
   1c88c:	movw	r1, #58432	; 0xe440
   1c890:	movt	r1, #1
   1c894:	ldr	r2, [sp, #24]
   1c898:	bl	12810 <fprintf@plt>
   1c89c:	movw	r1, #1
   1c8a0:	str	r0, [sp, #20]
   1c8a4:	mov	r0, r1
   1c8a8:	bl	127c8 <exit@plt>
   1c8ac:	ldr	r0, [fp, #-12]
   1c8b0:	cmp	r0, #0
   1c8b4:	movw	r0, #0
   1c8b8:	movne	r0, #1
   1c8bc:	mvn	r1, #0
   1c8c0:	eor	r0, r0, r1
   1c8c4:	and	r0, r0, #1
   1c8c8:	bl	12684 <coda_set_option_bypass_special_types@plt>
   1c8cc:	ldr	r1, [fp, #-16]
   1c8d0:	str	r0, [sp, #16]
   1c8d4:	mov	r0, r1
   1c8d8:	bl	12840 <coda_set_option_perform_conversions@plt>
   1c8dc:	movw	r1, #464	; 0x1d0
   1c8e0:	movt	r1, #3
   1c8e4:	ldr	r1, [r1]
   1c8e8:	movw	lr, #0
   1c8ec:	cmp	r1, lr
   1c8f0:	str	r0, [sp, #12]
   1c8f4:	beq	1c964 <main@@Base+0x1a3c>
   1c8f8:	movw	r0, #464	; 0x1d0
   1c8fc:	movt	r0, #3
   1c900:	ldr	r0, [r0]
   1c904:	movw	r1, #62831	; 0xf56f
   1c908:	movt	r1, #1
   1c90c:	bl	12600 <fopen@plt>
   1c910:	movw	r1, #4232	; 0x1088
   1c914:	movt	r1, #3
   1c918:	str	r0, [r1]
   1c91c:	ldr	r0, [r1]
   1c920:	movw	r1, #0
   1c924:	cmp	r0, r1
   1c928:	bne	1c960 <main@@Base+0x1a38>
   1c92c:	movw	r0, #424	; 0x1a8
   1c930:	movt	r0, #3
   1c934:	ldr	r0, [r0]
   1c938:	movw	r1, #464	; 0x1d0
   1c93c:	movt	r1, #3
   1c940:	ldr	r2, [r1]
   1c944:	movw	r1, #62833	; 0xf571
   1c948:	movt	r1, #1
   1c94c:	bl	12810 <fprintf@plt>
   1c950:	movw	r1, #1
   1c954:	str	r0, [sp, #8]
   1c958:	mov	r0, r1
   1c95c:	bl	127c8 <exit@plt>
   1c960:	b	1c964 <main@@Base+0x1a3c>
   1c964:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c968:	bl	19e78 <print_yaml_data@@Base>
   1c96c:	movw	r0, #464	; 0x1d0
   1c970:	movt	r0, #3
   1c974:	ldr	r0, [r0]
   1c978:	movw	lr, #0
   1c97c:	cmp	r0, lr
   1c980:	beq	1c998 <main@@Base+0x1a70>
   1c984:	movw	r0, #4232	; 0x1088
   1c988:	movt	r0, #3
   1c98c:	ldr	r0, [r0]
   1c990:	bl	128ac <fclose@plt>
   1c994:	str	r0, [sp, #4]
   1c998:	bl	12768 <coda_done@plt>
   1c99c:	mov	sp, fp
   1c9a0:	pop	{fp, pc}
   1c9a4:	push	{fp, lr}
   1c9a8:	mov	fp, sp
   1c9ac:	sub	sp, sp, #64	; 0x40
   1c9b0:	str	r0, [fp, #-4]
   1c9b4:	str	r1, [fp, #-8]
   1c9b8:	movw	r0, #0
   1c9bc:	str	r0, [fp, #-12]
   1c9c0:	str	r0, [fp, #-16]
   1c9c4:	str	r0, [fp, #-20]	; 0xffffffec
   1c9c8:	movw	r1, #480	; 0x1e0
   1c9cc:	movt	r1, #3
   1c9d0:	str	r0, [r1]
   1c9d4:	movw	r1, #464	; 0x1d0
   1c9d8:	movt	r1, #3
   1c9dc:	str	r0, [r1]
   1c9e0:	movw	r1, #4256	; 0x10a0
   1c9e4:	movt	r1, #3
   1c9e8:	str	r0, [r1]
   1c9ec:	movw	r1, #428	; 0x1ac
   1c9f0:	movt	r1, #3
   1c9f4:	ldr	r1, [r1]
   1c9f8:	movw	r2, #4232	; 0x1088
   1c9fc:	movt	r2, #3
   1ca00:	str	r1, [r2]
   1ca04:	movw	r1, #1
   1ca08:	str	r1, [fp, #-24]	; 0xffffffe8
   1ca0c:	str	r0, [fp, #-28]	; 0xffffffe4
   1ca10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ca14:	ldr	r1, [fp, #-4]
   1ca18:	cmp	r0, r1
   1ca1c:	bge	1cde4 <main@@Base+0x1ebc>
   1ca20:	ldr	r0, [fp, #-8]
   1ca24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ca28:	add	r0, r0, r1, lsl #2
   1ca2c:	ldr	r0, [r0]
   1ca30:	movw	r1, #62595	; 0xf483
   1ca34:	movt	r1, #1
   1ca38:	bl	125d0 <strcmp@plt>
   1ca3c:	cmp	r0, #0
   1ca40:	beq	1ca68 <main@@Base+0x1b40>
   1ca44:	ldr	r0, [fp, #-8]
   1ca48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ca4c:	add	r0, r0, r1, lsl #2
   1ca50:	ldr	r0, [r0]
   1ca54:	movw	r1, #62901	; 0xf5b5
   1ca58:	movt	r1, #1
   1ca5c:	bl	125d0 <strcmp@plt>
   1ca60:	cmp	r0, #0
   1ca64:	bne	1ca74 <main@@Base+0x1b4c>
   1ca68:	movw	r0, #0
   1ca6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ca70:	b	1cdd0 <main@@Base+0x1ea8>
   1ca74:	ldr	r0, [fp, #-8]
   1ca78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ca7c:	add	r0, r0, r1, lsl #2
   1ca80:	ldr	r0, [r0]
   1ca84:	movw	r1, #62761	; 0xf529
   1ca88:	movt	r1, #1
   1ca8c:	bl	125d0 <strcmp@plt>
   1ca90:	cmp	r0, #0
   1ca94:	beq	1cabc <main@@Base+0x1b94>
   1ca98:	ldr	r0, [fp, #-8]
   1ca9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1caa0:	add	r0, r0, r1, lsl #2
   1caa4:	ldr	r0, [r0]
   1caa8:	movw	r1, #62764	; 0xf52c
   1caac:	movt	r1, #1
   1cab0:	bl	125d0 <strcmp@plt>
   1cab4:	cmp	r0, #0
   1cab8:	bne	1cb20 <main@@Base+0x1bf8>
   1cabc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cac0:	add	r0, r0, #1
   1cac4:	ldr	r1, [fp, #-4]
   1cac8:	cmp	r0, r1
   1cacc:	bge	1cb20 <main@@Base+0x1bf8>
   1cad0:	ldr	r0, [fp, #-8]
   1cad4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cad8:	add	r1, r1, #1
   1cadc:	add	r0, r0, r1, lsl #2
   1cae0:	ldr	r0, [r0]
   1cae4:	ldrb	r0, [r0]
   1cae8:	cmp	r0, #45	; 0x2d
   1caec:	beq	1cb20 <main@@Base+0x1bf8>
   1caf0:	ldr	r0, [fp, #-8]
   1caf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1caf8:	add	r1, r1, #1
   1cafc:	add	r0, r0, r1, lsl #2
   1cb00:	ldr	r0, [r0]
   1cb04:	movw	r1, #464	; 0x1d0
   1cb08:	movt	r1, #3
   1cb0c:	str	r0, [r1]
   1cb10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cb14:	add	r0, r0, #1
   1cb18:	str	r0, [fp, #-28]	; 0xffffffe4
   1cb1c:	b	1cdcc <main@@Base+0x1ea4>
   1cb20:	ldr	r0, [fp, #-8]
   1cb24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb28:	add	r0, r0, r1, lsl #2
   1cb2c:	ldr	r0, [r0]
   1cb30:	movw	r1, #62891	; 0xf5ab
   1cb34:	movt	r1, #1
   1cb38:	bl	125d0 <strcmp@plt>
   1cb3c:	cmp	r0, #0
   1cb40:	beq	1cb68 <main@@Base+0x1c40>
   1cb44:	ldr	r0, [fp, #-8]
   1cb48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb4c:	add	r0, r0, r1, lsl #2
   1cb50:	ldr	r0, [r0]
   1cb54:	movw	r1, #62894	; 0xf5ae
   1cb58:	movt	r1, #1
   1cb5c:	bl	125d0 <strcmp@plt>
   1cb60:	cmp	r0, #0
   1cb64:	bne	1cbcc <main@@Base+0x1ca4>
   1cb68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cb6c:	add	r0, r0, #1
   1cb70:	ldr	r1, [fp, #-4]
   1cb74:	cmp	r0, r1
   1cb78:	bge	1cbcc <main@@Base+0x1ca4>
   1cb7c:	ldr	r0, [fp, #-8]
   1cb80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb84:	add	r1, r1, #1
   1cb88:	add	r0, r0, r1, lsl #2
   1cb8c:	ldr	r0, [r0]
   1cb90:	ldrb	r0, [r0]
   1cb94:	cmp	r0, #45	; 0x2d
   1cb98:	beq	1cbcc <main@@Base+0x1ca4>
   1cb9c:	ldr	r0, [fp, #-8]
   1cba0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cba4:	add	r1, r1, #1
   1cba8:	add	r0, r0, r1, lsl #2
   1cbac:	ldr	r0, [r0]
   1cbb0:	movw	r1, #4256	; 0x10a0
   1cbb4:	movt	r1, #3
   1cbb8:	str	r0, [r1]
   1cbbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cbc0:	add	r0, r0, #1
   1cbc4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cbc8:	b	1cdc8 <main@@Base+0x1ea0>
   1cbcc:	ldr	r0, [fp, #-8]
   1cbd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cbd4:	add	r0, r0, r1, lsl #2
   1cbd8:	ldr	r0, [r0]
   1cbdc:	movw	r1, #62933	; 0xf5d5
   1cbe0:	movt	r1, #1
   1cbe4:	bl	125d0 <strcmp@plt>
   1cbe8:	cmp	r0, #0
   1cbec:	bne	1cc58 <main@@Base+0x1d30>
   1cbf0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cbf4:	add	r0, r0, #1
   1cbf8:	ldr	r1, [fp, #-4]
   1cbfc:	cmp	r0, r1
   1cc00:	bge	1cc58 <main@@Base+0x1d30>
   1cc04:	ldr	r0, [fp, #-8]
   1cc08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc0c:	add	r1, r1, #1
   1cc10:	add	r0, r0, r1, lsl #2
   1cc14:	ldr	r0, [r0]
   1cc18:	ldrb	r0, [r0]
   1cc1c:	cmp	r0, #45	; 0x2d
   1cc20:	beq	1cc58 <main@@Base+0x1d30>
   1cc24:	ldr	r0, [fp, #-8]
   1cc28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc2c:	add	r1, r1, #1
   1cc30:	add	r0, r0, r1, lsl #2
   1cc34:	ldr	r0, [r0]
   1cc38:	bl	12954 <atoi@plt>
   1cc3c:	movw	r1, #416	; 0x1a0
   1cc40:	movt	r1, #3
   1cc44:	str	r0, [r1]
   1cc48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cc4c:	add	r0, r0, #1
   1cc50:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc54:	b	1cdc4 <main@@Base+0x1e9c>
   1cc58:	ldr	r0, [fp, #-8]
   1cc5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc60:	add	r0, r0, r1, lsl #2
   1cc64:	ldr	r0, [r0]
   1cc68:	movw	r1, #62945	; 0xf5e1
   1cc6c:	movt	r1, #1
   1cc70:	bl	125d0 <strcmp@plt>
   1cc74:	cmp	r0, #0
   1cc78:	bne	1cd44 <main@@Base+0x1e1c>
   1cc7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cc80:	add	r0, r0, #3
   1cc84:	ldr	r1, [fp, #-4]
   1cc88:	cmp	r0, r1
   1cc8c:	bge	1cd44 <main@@Base+0x1e1c>
   1cc90:	ldr	r0, [fp, #-8]
   1cc94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc98:	add	r1, r1, #1
   1cc9c:	add	r0, r0, r1, lsl #2
   1cca0:	ldr	r0, [r0]
   1cca4:	ldrb	r0, [r0]
   1cca8:	cmp	r0, #45	; 0x2d
   1ccac:	beq	1cd44 <main@@Base+0x1e1c>
   1ccb0:	ldr	r0, [fp, #-8]
   1ccb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ccb8:	add	r1, r1, #2
   1ccbc:	add	r0, r0, r1, lsl #2
   1ccc0:	ldr	r0, [r0]
   1ccc4:	ldrb	r0, [r0]
   1ccc8:	cmp	r0, #45	; 0x2d
   1cccc:	beq	1cd44 <main@@Base+0x1e1c>
   1ccd0:	ldr	r0, [fp, #-8]
   1ccd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ccd8:	add	r1, r1, #3
   1ccdc:	add	r0, r0, r1, lsl #2
   1cce0:	ldr	r0, [r0]
   1cce4:	ldrb	r0, [r0]
   1cce8:	cmp	r0, #45	; 0x2d
   1ccec:	beq	1cd44 <main@@Base+0x1e1c>
   1ccf0:	ldr	r0, [fp, #-8]
   1ccf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ccf8:	add	r0, r0, r1, lsl #2
   1ccfc:	ldr	r0, [r0, #4]
   1cd00:	str	r0, [fp, #-12]
   1cd04:	ldr	r0, [fp, #-8]
   1cd08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd0c:	add	r0, r0, r1, lsl #2
   1cd10:	ldr	r0, [r0, #8]
   1cd14:	str	r0, [fp, #-16]
   1cd18:	ldr	r0, [fp, #-8]
   1cd1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd20:	add	r1, r1, #3
   1cd24:	add	r0, r0, r1, lsl #2
   1cd28:	ldr	r0, [r0]
   1cd2c:	bl	12954 <atoi@plt>
   1cd30:	str	r0, [fp, #-20]	; 0xffffffec
   1cd34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd38:	add	r0, r0, #3
   1cd3c:	str	r0, [fp, #-28]	; 0xffffffe4
   1cd40:	b	1cdc0 <main@@Base+0x1e98>
   1cd44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd48:	ldr	r1, [fp, #-4]
   1cd4c:	sub	r1, r1, #1
   1cd50:	cmp	r0, r1
   1cd54:	bne	1cd94 <main@@Base+0x1e6c>
   1cd58:	ldr	r0, [fp, #-8]
   1cd5c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd60:	add	r0, r0, r1, lsl #2
   1cd64:	ldr	r0, [r0]
   1cd68:	ldrb	r0, [r0]
   1cd6c:	cmp	r0, #45	; 0x2d
   1cd70:	beq	1cd94 <main@@Base+0x1e6c>
   1cd74:	ldr	r0, [fp, #-8]
   1cd78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cd7c:	add	r0, r0, r1, lsl #2
   1cd80:	ldr	r0, [r0]
   1cd84:	movw	r1, #480	; 0x1e0
   1cd88:	movt	r1, #3
   1cd8c:	str	r0, [r1]
   1cd90:	b	1cdbc <main@@Base+0x1e94>
   1cd94:	movw	r0, #424	; 0x1a8
   1cd98:	movt	r0, #3
   1cd9c:	ldr	r0, [r0]
   1cda0:	movw	r1, #58522	; 0xe49a
   1cda4:	movt	r1, #1
   1cda8:	bl	12810 <fprintf@plt>
   1cdac:	str	r0, [sp, #32]
   1cdb0:	bl	1cf78 <main@@Base+0x2050>
   1cdb4:	movw	r0, #1
   1cdb8:	bl	127c8 <exit@plt>
   1cdbc:	b	1cdc0 <main@@Base+0x1e98>
   1cdc0:	b	1cdc4 <main@@Base+0x1e9c>
   1cdc4:	b	1cdc8 <main@@Base+0x1ea0>
   1cdc8:	b	1cdcc <main@@Base+0x1ea4>
   1cdcc:	b	1cdd0 <main@@Base+0x1ea8>
   1cdd0:	b	1cdd4 <main@@Base+0x1eac>
   1cdd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cdd8:	add	r0, r0, #1
   1cddc:	str	r0, [fp, #-28]	; 0xffffffe4
   1cde0:	b	1ca10 <main@@Base+0x1ae8>
   1cde4:	movw	r0, #480	; 0x1e0
   1cde8:	movt	r0, #3
   1cdec:	ldr	r0, [r0]
   1cdf0:	movw	r1, #0
   1cdf4:	cmp	r0, r1
   1cdf8:	beq	1ce14 <main@@Base+0x1eec>
   1cdfc:	movw	r0, #480	; 0x1e0
   1ce00:	movt	r0, #3
   1ce04:	ldr	r0, [r0]
   1ce08:	ldrb	r0, [r0]
   1ce0c:	cmp	r0, #0
   1ce10:	bne	1ce3c <main@@Base+0x1f14>
   1ce14:	movw	r0, #424	; 0x1a8
   1ce18:	movt	r0, #3
   1ce1c:	ldr	r0, [r0]
   1ce20:	movw	r1, #58522	; 0xe49a
   1ce24:	movt	r1, #1
   1ce28:	bl	12810 <fprintf@plt>
   1ce2c:	str	r0, [sp, #28]
   1ce30:	bl	1cf78 <main@@Base+0x2050>
   1ce34:	movw	r0, #1
   1ce38:	bl	127c8 <exit@plt>
   1ce3c:	bl	12834 <coda_init@plt>
   1ce40:	cmp	r0, #0
   1ce44:	beq	1ce90 <main@@Base+0x1f68>
   1ce48:	movw	r0, #424	; 0x1a8
   1ce4c:	movt	r0, #3
   1ce50:	ldr	r0, [r0]
   1ce54:	str	r0, [sp, #24]
   1ce58:	bl	129a8 <coda_get_errno@plt>
   1ce5c:	ldr	r0, [r0]
   1ce60:	bl	12960 <coda_errno_to_string@plt>
   1ce64:	ldr	lr, [sp, #24]
   1ce68:	str	r0, [sp, #20]
   1ce6c:	mov	r0, lr
   1ce70:	movw	r1, #58432	; 0xe440
   1ce74:	movt	r1, #1
   1ce78:	ldr	r2, [sp, #20]
   1ce7c:	bl	12810 <fprintf@plt>
   1ce80:	movw	r1, #1
   1ce84:	str	r0, [sp, #16]
   1ce88:	mov	r0, r1
   1ce8c:	bl	127c8 <exit@plt>
   1ce90:	movw	r0, #0
   1ce94:	bl	12840 <coda_set_option_perform_conversions@plt>
   1ce98:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1ce9c:	str	r0, [sp, #12]
   1cea0:	mov	r0, lr
   1cea4:	bl	125a0 <coda_set_option_use_fast_size_expressions@plt>
   1cea8:	movw	lr, #464	; 0x1d0
   1ceac:	movt	lr, #3
   1ceb0:	ldr	lr, [lr]
   1ceb4:	movw	r1, #0
   1ceb8:	cmp	lr, r1
   1cebc:	str	r0, [sp, #8]
   1cec0:	beq	1cf30 <main@@Base+0x2008>
   1cec4:	movw	r0, #464	; 0x1d0
   1cec8:	movt	r0, #3
   1cecc:	ldr	r0, [r0]
   1ced0:	movw	r1, #62831	; 0xf56f
   1ced4:	movt	r1, #1
   1ced8:	bl	12600 <fopen@plt>
   1cedc:	movw	r1, #4232	; 0x1088
   1cee0:	movt	r1, #3
   1cee4:	str	r0, [r1]
   1cee8:	ldr	r0, [r1]
   1ceec:	movw	r1, #0
   1cef0:	cmp	r0, r1
   1cef4:	bne	1cf2c <main@@Base+0x2004>
   1cef8:	movw	r0, #424	; 0x1a8
   1cefc:	movt	r0, #3
   1cf00:	ldr	r0, [r0]
   1cf04:	movw	r1, #464	; 0x1d0
   1cf08:	movt	r1, #3
   1cf0c:	ldr	r2, [r1]
   1cf10:	movw	r1, #62833	; 0xf571
   1cf14:	movt	r1, #1
   1cf18:	bl	12810 <fprintf@plt>
   1cf1c:	movw	r1, #1
   1cf20:	str	r0, [sp, #4]
   1cf24:	mov	r0, r1
   1cf28:	bl	127c8 <exit@plt>
   1cf2c:	b	1cf30 <main@@Base+0x2008>
   1cf30:	ldr	r0, [fp, #-12]
   1cf34:	ldr	r1, [fp, #-16]
   1cf38:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cf3c:	bl	13c10 <print_debug_data@@Base>
   1cf40:	movw	r0, #464	; 0x1d0
   1cf44:	movt	r0, #3
   1cf48:	ldr	r0, [r0]
   1cf4c:	movw	r1, #0
   1cf50:	cmp	r0, r1
   1cf54:	beq	1cf6c <main@@Base+0x2044>
   1cf58:	movw	r0, #4232	; 0x1088
   1cf5c:	movt	r0, #3
   1cf60:	ldr	r0, [r0]
   1cf64:	bl	128ac <fclose@plt>
   1cf68:	str	r0, [sp]
   1cf6c:	bl	12768 <coda_done@plt>
   1cf70:	mov	sp, fp
   1cf74:	pop	{fp, pc}
   1cf78:	push	{fp, lr}
   1cf7c:	mov	fp, sp
   1cf80:	sub	sp, sp, #472	; 0x1d8
   1cf84:	movw	r0, #58548	; 0xe4b4
   1cf88:	movt	r0, #1
   1cf8c:	bl	125e8 <printf@plt>
   1cf90:	movw	lr, #58556	; 0xe4bc
   1cf94:	movt	lr, #1
   1cf98:	str	r0, [fp, #-4]
   1cf9c:	mov	r0, lr
   1cfa0:	bl	125e8 <printf@plt>
   1cfa4:	movw	lr, #58627	; 0xe503
   1cfa8:	movt	lr, #1
   1cfac:	str	r0, [fp, #-8]
   1cfb0:	mov	r0, lr
   1cfb4:	bl	125e8 <printf@plt>
   1cfb8:	movw	lr, #58672	; 0xe530
   1cfbc:	movt	lr, #1
   1cfc0:	str	r0, [fp, #-12]
   1cfc4:	mov	r0, lr
   1cfc8:	bl	125e8 <printf@plt>
   1cfcc:	movw	lr, #58695	; 0xe547
   1cfd0:	movt	lr, #1
   1cfd4:	str	r0, [fp, #-16]
   1cfd8:	mov	r0, lr
   1cfdc:	bl	125e8 <printf@plt>
   1cfe0:	movw	lr, #58723	; 0xe563
   1cfe4:	movt	lr, #1
   1cfe8:	str	r0, [fp, #-20]	; 0xffffffec
   1cfec:	mov	r0, lr
   1cff0:	bl	125e8 <printf@plt>
   1cff4:	movw	lr, #58779	; 0xe59b
   1cff8:	movt	lr, #1
   1cffc:	str	r0, [fp, #-24]	; 0xffffffe8
   1d000:	mov	r0, lr
   1d004:	bl	125e8 <printf@plt>
   1d008:	movw	lr, #58818	; 0xe5c2
   1d00c:	movt	lr, #1
   1d010:	str	r0, [fp, #-28]	; 0xffffffe4
   1d014:	mov	r0, lr
   1d018:	bl	125e8 <printf@plt>
   1d01c:	movw	lr, #58877	; 0xe5fd
   1d020:	movt	lr, #1
   1d024:	str	r0, [fp, #-32]	; 0xffffffe0
   1d028:	mov	r0, lr
   1d02c:	bl	125e8 <printf@plt>
   1d030:	movw	lr, #58925	; 0xe62d
   1d034:	movt	lr, #1
   1d038:	str	r0, [fp, #-36]	; 0xffffffdc
   1d03c:	mov	r0, lr
   1d040:	bl	125e8 <printf@plt>
   1d044:	movw	lr, #58998	; 0xe676
   1d048:	movt	lr, #1
   1d04c:	str	r0, [fp, #-40]	; 0xffffffd8
   1d050:	mov	r0, lr
   1d054:	bl	125e8 <printf@plt>
   1d058:	movw	lr, #59022	; 0xe68e
   1d05c:	movt	lr, #1
   1d060:	str	r0, [fp, #-44]	; 0xffffffd4
   1d064:	mov	r0, lr
   1d068:	bl	125e8 <printf@plt>
   1d06c:	movw	lr, #59064	; 0xe6b8
   1d070:	movt	lr, #1
   1d074:	str	r0, [fp, #-48]	; 0xffffffd0
   1d078:	mov	r0, lr
   1d07c:	bl	125e8 <printf@plt>
   1d080:	movw	lr, #59088	; 0xe6d0
   1d084:	movt	lr, #1
   1d088:	str	r0, [fp, #-52]	; 0xffffffcc
   1d08c:	mov	r0, lr
   1d090:	bl	125e8 <printf@plt>
   1d094:	movw	lr, #59131	; 0xe6fb
   1d098:	movt	lr, #1
   1d09c:	str	r0, [fp, #-56]	; 0xffffffc8
   1d0a0:	mov	r0, lr
   1d0a4:	bl	125e8 <printf@plt>
   1d0a8:	movw	lr, #59158	; 0xe716
   1d0ac:	movt	lr, #1
   1d0b0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d0b4:	mov	r0, lr
   1d0b8:	bl	125e8 <printf@plt>
   1d0bc:	movw	lr, #59208	; 0xe748
   1d0c0:	movt	lr, #1
   1d0c4:	str	r0, [fp, #-64]	; 0xffffffc0
   1d0c8:	mov	r0, lr
   1d0cc:	bl	125e8 <printf@plt>
   1d0d0:	movw	lr, #59234	; 0xe762
   1d0d4:	movt	lr, #1
   1d0d8:	str	r0, [fp, #-68]	; 0xffffffbc
   1d0dc:	mov	r0, lr
   1d0e0:	bl	125e8 <printf@plt>
   1d0e4:	movw	lr, #59305	; 0xe7a9
   1d0e8:	movt	lr, #1
   1d0ec:	str	r0, [fp, #-72]	; 0xffffffb8
   1d0f0:	mov	r0, lr
   1d0f4:	bl	125e8 <printf@plt>
   1d0f8:	movw	lr, #59347	; 0xe7d3
   1d0fc:	movt	lr, #1
   1d100:	str	r0, [fp, #-76]	; 0xffffffb4
   1d104:	mov	r0, lr
   1d108:	bl	125e8 <printf@plt>
   1d10c:	movw	lr, #59379	; 0xe7f3
   1d110:	movt	lr, #1
   1d114:	str	r0, [fp, #-80]	; 0xffffffb0
   1d118:	mov	r0, lr
   1d11c:	bl	125e8 <printf@plt>
   1d120:	movw	lr, #59460	; 0xe844
   1d124:	movt	lr, #1
   1d128:	str	r0, [fp, #-84]	; 0xffffffac
   1d12c:	mov	r0, lr
   1d130:	bl	125e8 <printf@plt>
   1d134:	movw	lr, #59539	; 0xe893
   1d138:	movt	lr, #1
   1d13c:	str	r0, [fp, #-88]	; 0xffffffa8
   1d140:	mov	r0, lr
   1d144:	bl	125e8 <printf@plt>
   1d148:	movw	lr, #62873	; 0xf599
   1d14c:	movt	lr, #1
   1d150:	str	r0, [fp, #-92]	; 0xffffffa4
   1d154:	mov	r0, lr
   1d158:	bl	125e8 <printf@plt>
   1d15c:	movw	lr, #59570	; 0xe8b2
   1d160:	movt	lr, #1
   1d164:	str	r0, [fp, #-96]	; 0xffffffa0
   1d168:	mov	r0, lr
   1d16c:	bl	125e8 <printf@plt>
   1d170:	movw	lr, #59643	; 0xe8fb
   1d174:	movt	lr, #1
   1d178:	str	r0, [fp, #-100]	; 0xffffff9c
   1d17c:	mov	r0, lr
   1d180:	bl	125e8 <printf@plt>
   1d184:	movw	lr, #58672	; 0xe530
   1d188:	movt	lr, #1
   1d18c:	str	r0, [fp, #-104]	; 0xffffff98
   1d190:	mov	r0, lr
   1d194:	bl	125e8 <printf@plt>
   1d198:	movw	lr, #58779	; 0xe59b
   1d19c:	movt	lr, #1
   1d1a0:	str	r0, [fp, #-108]	; 0xffffff94
   1d1a4:	mov	r0, lr
   1d1a8:	bl	125e8 <printf@plt>
   1d1ac:	movw	lr, #58818	; 0xe5c2
   1d1b0:	movt	lr, #1
   1d1b4:	str	r0, [fp, #-112]	; 0xffffff90
   1d1b8:	mov	r0, lr
   1d1bc:	bl	125e8 <printf@plt>
   1d1c0:	movw	lr, #58877	; 0xe5fd
   1d1c4:	movt	lr, #1
   1d1c8:	str	r0, [fp, #-116]	; 0xffffff8c
   1d1cc:	mov	r0, lr
   1d1d0:	bl	125e8 <printf@plt>
   1d1d4:	movw	lr, #58925	; 0xe62d
   1d1d8:	movt	lr, #1
   1d1dc:	str	r0, [fp, #-120]	; 0xffffff88
   1d1e0:	mov	r0, lr
   1d1e4:	bl	125e8 <printf@plt>
   1d1e8:	movw	lr, #59704	; 0xe938
   1d1ec:	movt	lr, #1
   1d1f0:	str	r0, [fp, #-124]	; 0xffffff84
   1d1f4:	mov	r0, lr
   1d1f8:	bl	125e8 <printf@plt>
   1d1fc:	movw	lr, #59729	; 0xe951
   1d200:	movt	lr, #1
   1d204:	str	r0, [fp, #-128]	; 0xffffff80
   1d208:	mov	r0, lr
   1d20c:	bl	125e8 <printf@plt>
   1d210:	movw	lr, #59795	; 0xe993
   1d214:	movt	lr, #1
   1d218:	str	r0, [fp, #-132]	; 0xffffff7c
   1d21c:	mov	r0, lr
   1d220:	bl	125e8 <printf@plt>
   1d224:	movw	lr, #59820	; 0xe9ac
   1d228:	movt	lr, #1
   1d22c:	str	r0, [fp, #-136]	; 0xffffff78
   1d230:	mov	r0, lr
   1d234:	bl	125e8 <printf@plt>
   1d238:	movw	lr, #59896	; 0xe9f8
   1d23c:	movt	lr, #1
   1d240:	str	r0, [fp, #-140]	; 0xffffff74
   1d244:	mov	r0, lr
   1d248:	bl	125e8 <printf@plt>
   1d24c:	movw	lr, #59933	; 0xea1d
   1d250:	movt	lr, #1
   1d254:	str	r0, [fp, #-144]	; 0xffffff70
   1d258:	mov	r0, lr
   1d25c:	bl	125e8 <printf@plt>
   1d260:	movw	lr, #59985	; 0xea51
   1d264:	movt	lr, #1
   1d268:	str	r0, [fp, #-148]	; 0xffffff6c
   1d26c:	mov	r0, lr
   1d270:	bl	125e8 <printf@plt>
   1d274:	movw	lr, #60018	; 0xea72
   1d278:	movt	lr, #1
   1d27c:	str	r0, [fp, #-152]	; 0xffffff68
   1d280:	mov	r0, lr
   1d284:	bl	125e8 <printf@plt>
   1d288:	movw	lr, #60094	; 0xeabe
   1d28c:	movt	lr, #1
   1d290:	str	r0, [fp, #-156]	; 0xffffff64
   1d294:	mov	r0, lr
   1d298:	bl	125e8 <printf@plt>
   1d29c:	movw	lr, #60151	; 0xeaf7
   1d2a0:	movt	lr, #1
   1d2a4:	str	r0, [fp, #-160]	; 0xffffff60
   1d2a8:	mov	r0, lr
   1d2ac:	bl	125e8 <printf@plt>
   1d2b0:	movw	lr, #60228	; 0xeb44
   1d2b4:	movt	lr, #1
   1d2b8:	str	r0, [fp, #-164]	; 0xffffff5c
   1d2bc:	mov	r0, lr
   1d2c0:	bl	125e8 <printf@plt>
   1d2c4:	movw	lr, #60262	; 0xeb66
   1d2c8:	movt	lr, #1
   1d2cc:	str	r0, [fp, #-168]	; 0xffffff58
   1d2d0:	mov	r0, lr
   1d2d4:	bl	125e8 <printf@plt>
   1d2d8:	movw	lr, #59347	; 0xe7d3
   1d2dc:	movt	lr, #1
   1d2e0:	str	r0, [fp, #-172]	; 0xffffff54
   1d2e4:	mov	r0, lr
   1d2e8:	bl	125e8 <printf@plt>
   1d2ec:	movw	lr, #59379	; 0xe7f3
   1d2f0:	movt	lr, #1
   1d2f4:	str	r0, [fp, #-176]	; 0xffffff50
   1d2f8:	mov	r0, lr
   1d2fc:	bl	125e8 <printf@plt>
   1d300:	movw	lr, #59460	; 0xe844
   1d304:	movt	lr, #1
   1d308:	str	r0, [fp, #-180]	; 0xffffff4c
   1d30c:	mov	r0, lr
   1d310:	bl	125e8 <printf@plt>
   1d314:	movw	lr, #59539	; 0xe893
   1d318:	movt	lr, #1
   1d31c:	str	r0, [fp, #-184]	; 0xffffff48
   1d320:	mov	r0, lr
   1d324:	bl	125e8 <printf@plt>
   1d328:	movw	lr, #62873	; 0xf599
   1d32c:	movt	lr, #1
   1d330:	str	r0, [fp, #-188]	; 0xffffff44
   1d334:	mov	r0, lr
   1d338:	bl	125e8 <printf@plt>
   1d33c:	movw	lr, #60342	; 0xebb6
   1d340:	movt	lr, #1
   1d344:	str	r0, [fp, #-192]	; 0xffffff40
   1d348:	mov	r0, lr
   1d34c:	bl	125e8 <printf@plt>
   1d350:	movw	lr, #60413	; 0xebfd
   1d354:	movt	lr, #1
   1d358:	str	r0, [fp, #-196]	; 0xffffff3c
   1d35c:	mov	r0, lr
   1d360:	bl	125e8 <printf@plt>
   1d364:	movw	lr, #60474	; 0xec3a
   1d368:	movt	lr, #1
   1d36c:	str	r0, [fp, #-200]	; 0xffffff38
   1d370:	mov	r0, lr
   1d374:	bl	125e8 <printf@plt>
   1d378:	movw	lr, #60497	; 0xec51
   1d37c:	movt	lr, #1
   1d380:	str	r0, [fp, #-204]	; 0xffffff34
   1d384:	mov	r0, lr
   1d388:	bl	125e8 <printf@plt>
   1d38c:	movw	lr, #60527	; 0xec6f
   1d390:	movt	lr, #1
   1d394:	str	r0, [fp, #-208]	; 0xffffff30
   1d398:	mov	r0, lr
   1d39c:	bl	125e8 <printf@plt>
   1d3a0:	movw	lr, #60599	; 0xecb7
   1d3a4:	movt	lr, #1
   1d3a8:	str	r0, [fp, #-212]	; 0xffffff2c
   1d3ac:	mov	r0, lr
   1d3b0:	bl	125e8 <printf@plt>
   1d3b4:	movw	lr, #58779	; 0xe59b
   1d3b8:	movt	lr, #1
   1d3bc:	str	r0, [fp, #-216]	; 0xffffff28
   1d3c0:	mov	r0, lr
   1d3c4:	bl	125e8 <printf@plt>
   1d3c8:	movw	lr, #58818	; 0xe5c2
   1d3cc:	movt	lr, #1
   1d3d0:	str	r0, [fp, #-220]	; 0xffffff24
   1d3d4:	mov	r0, lr
   1d3d8:	bl	125e8 <printf@plt>
   1d3dc:	movw	lr, #59896	; 0xe9f8
   1d3e0:	movt	lr, #1
   1d3e4:	str	r0, [fp, #-224]	; 0xffffff20
   1d3e8:	mov	r0, lr
   1d3ec:	bl	125e8 <printf@plt>
   1d3f0:	movw	lr, #59933	; 0xea1d
   1d3f4:	movt	lr, #1
   1d3f8:	str	r0, [fp, #-228]	; 0xffffff1c
   1d3fc:	mov	r0, lr
   1d400:	bl	125e8 <printf@plt>
   1d404:	movw	lr, #60675	; 0xed03
   1d408:	movt	lr, #1
   1d40c:	str	r0, [fp, #-232]	; 0xffffff18
   1d410:	mov	r0, lr
   1d414:	bl	125e8 <printf@plt>
   1d418:	movw	lr, #60706	; 0xed22
   1d41c:	movt	lr, #1
   1d420:	str	r0, [sp, #236]	; 0xec
   1d424:	mov	r0, lr
   1d428:	bl	125e8 <printf@plt>
   1d42c:	movw	lr, #60779	; 0xed6b
   1d430:	movt	lr, #1
   1d434:	str	r0, [sp, #232]	; 0xe8
   1d438:	mov	r0, lr
   1d43c:	bl	125e8 <printf@plt>
   1d440:	movw	lr, #59347	; 0xe7d3
   1d444:	movt	lr, #1
   1d448:	str	r0, [sp, #228]	; 0xe4
   1d44c:	mov	r0, lr
   1d450:	bl	125e8 <printf@plt>
   1d454:	movw	lr, #59379	; 0xe7f3
   1d458:	movt	lr, #1
   1d45c:	str	r0, [sp, #224]	; 0xe0
   1d460:	mov	r0, lr
   1d464:	bl	125e8 <printf@plt>
   1d468:	movw	lr, #59460	; 0xe844
   1d46c:	movt	lr, #1
   1d470:	str	r0, [sp, #220]	; 0xdc
   1d474:	mov	r0, lr
   1d478:	bl	125e8 <printf@plt>
   1d47c:	movw	lr, #59539	; 0xe893
   1d480:	movt	lr, #1
   1d484:	str	r0, [sp, #216]	; 0xd8
   1d488:	mov	r0, lr
   1d48c:	bl	125e8 <printf@plt>
   1d490:	movw	lr, #62873	; 0xf599
   1d494:	movt	lr, #1
   1d498:	str	r0, [sp, #212]	; 0xd4
   1d49c:	mov	r0, lr
   1d4a0:	bl	125e8 <printf@plt>
   1d4a4:	movw	lr, #60857	; 0xedb9
   1d4a8:	movt	lr, #1
   1d4ac:	str	r0, [sp, #208]	; 0xd0
   1d4b0:	mov	r0, lr
   1d4b4:	bl	125e8 <printf@plt>
   1d4b8:	movw	lr, #60928	; 0xee00
   1d4bc:	movt	lr, #1
   1d4c0:	str	r0, [sp, #204]	; 0xcc
   1d4c4:	mov	r0, lr
   1d4c8:	bl	125e8 <printf@plt>
   1d4cc:	movw	lr, #60989	; 0xee3d
   1d4d0:	movt	lr, #1
   1d4d4:	str	r0, [sp, #200]	; 0xc8
   1d4d8:	mov	r0, lr
   1d4dc:	bl	125e8 <printf@plt>
   1d4e0:	movw	lr, #60497	; 0xec51
   1d4e4:	movt	lr, #1
   1d4e8:	str	r0, [sp, #196]	; 0xc4
   1d4ec:	mov	r0, lr
   1d4f0:	bl	125e8 <printf@plt>
   1d4f4:	movw	lr, #60527	; 0xec6f
   1d4f8:	movt	lr, #1
   1d4fc:	str	r0, [sp, #192]	; 0xc0
   1d500:	mov	r0, lr
   1d504:	bl	125e8 <printf@plt>
   1d508:	movw	lr, #61012	; 0xee54
   1d50c:	movt	lr, #1
   1d510:	str	r0, [sp, #188]	; 0xbc
   1d514:	mov	r0, lr
   1d518:	bl	125e8 <printf@plt>
   1d51c:	movw	lr, #61089	; 0xeea1
   1d520:	movt	lr, #1
   1d524:	str	r0, [sp, #184]	; 0xb8
   1d528:	mov	r0, lr
   1d52c:	bl	125e8 <printf@plt>
   1d530:	movw	lr, #58779	; 0xe59b
   1d534:	movt	lr, #1
   1d538:	str	r0, [sp, #180]	; 0xb4
   1d53c:	mov	r0, lr
   1d540:	bl	125e8 <printf@plt>
   1d544:	movw	lr, #58818	; 0xe5c2
   1d548:	movt	lr, #1
   1d54c:	str	r0, [sp, #176]	; 0xb0
   1d550:	mov	r0, lr
   1d554:	bl	125e8 <printf@plt>
   1d558:	movw	lr, #59896	; 0xe9f8
   1d55c:	movt	lr, #1
   1d560:	str	r0, [sp, #172]	; 0xac
   1d564:	mov	r0, lr
   1d568:	bl	125e8 <printf@plt>
   1d56c:	movw	lr, #59933	; 0xea1d
   1d570:	movt	lr, #1
   1d574:	str	r0, [sp, #168]	; 0xa8
   1d578:	mov	r0, lr
   1d57c:	bl	125e8 <printf@plt>
   1d580:	movw	lr, #60675	; 0xed03
   1d584:	movt	lr, #1
   1d588:	str	r0, [sp, #164]	; 0xa4
   1d58c:	mov	r0, lr
   1d590:	bl	125e8 <printf@plt>
   1d594:	movw	lr, #60706	; 0xed22
   1d598:	movt	lr, #1
   1d59c:	str	r0, [sp, #160]	; 0xa0
   1d5a0:	mov	r0, lr
   1d5a4:	bl	125e8 <printf@plt>
   1d5a8:	movw	lr, #60779	; 0xed6b
   1d5ac:	movt	lr, #1
   1d5b0:	str	r0, [sp, #156]	; 0x9c
   1d5b4:	mov	r0, lr
   1d5b8:	bl	125e8 <printf@plt>
   1d5bc:	movw	lr, #59347	; 0xe7d3
   1d5c0:	movt	lr, #1
   1d5c4:	str	r0, [sp, #152]	; 0x98
   1d5c8:	mov	r0, lr
   1d5cc:	bl	125e8 <printf@plt>
   1d5d0:	movw	lr, #59379	; 0xe7f3
   1d5d4:	movt	lr, #1
   1d5d8:	str	r0, [sp, #148]	; 0x94
   1d5dc:	mov	r0, lr
   1d5e0:	bl	125e8 <printf@plt>
   1d5e4:	movw	lr, #59460	; 0xe844
   1d5e8:	movt	lr, #1
   1d5ec:	str	r0, [sp, #144]	; 0x90
   1d5f0:	mov	r0, lr
   1d5f4:	bl	125e8 <printf@plt>
   1d5f8:	movw	lr, #59539	; 0xe893
   1d5fc:	movt	lr, #1
   1d600:	str	r0, [sp, #140]	; 0x8c
   1d604:	mov	r0, lr
   1d608:	bl	125e8 <printf@plt>
   1d60c:	movw	lr, #62873	; 0xf599
   1d610:	movt	lr, #1
   1d614:	str	r0, [sp, #136]	; 0x88
   1d618:	mov	r0, lr
   1d61c:	bl	125e8 <printf@plt>
   1d620:	movw	lr, #61121	; 0xeec1
   1d624:	movt	lr, #1
   1d628:	str	r0, [sp, #132]	; 0x84
   1d62c:	mov	r0, lr
   1d630:	bl	125e8 <printf@plt>
   1d634:	movw	lr, #61194	; 0xef0a
   1d638:	movt	lr, #1
   1d63c:	str	r0, [sp, #128]	; 0x80
   1d640:	mov	r0, lr
   1d644:	bl	125e8 <printf@plt>
   1d648:	movw	lr, #61269	; 0xef55
   1d64c:	movt	lr, #1
   1d650:	str	r0, [sp, #124]	; 0x7c
   1d654:	mov	r0, lr
   1d658:	bl	125e8 <printf@plt>
   1d65c:	movw	lr, #61344	; 0xefa0
   1d660:	movt	lr, #1
   1d664:	str	r0, [sp, #120]	; 0x78
   1d668:	mov	r0, lr
   1d66c:	bl	125e8 <printf@plt>
   1d670:	movw	lr, #61391	; 0xefcf
   1d674:	movt	lr, #1
   1d678:	str	r0, [sp, #116]	; 0x74
   1d67c:	mov	r0, lr
   1d680:	bl	125e8 <printf@plt>
   1d684:	movw	lr, #61415	; 0xefe7
   1d688:	movt	lr, #1
   1d68c:	str	r0, [sp, #112]	; 0x70
   1d690:	mov	r0, lr
   1d694:	bl	125e8 <printf@plt>
   1d698:	movw	lr, #61464	; 0xf018
   1d69c:	movt	lr, #1
   1d6a0:	str	r0, [sp, #108]	; 0x6c
   1d6a4:	mov	r0, lr
   1d6a8:	bl	125e8 <printf@plt>
   1d6ac:	movw	lr, #59896	; 0xe9f8
   1d6b0:	movt	lr, #1
   1d6b4:	str	r0, [sp, #104]	; 0x68
   1d6b8:	mov	r0, lr
   1d6bc:	bl	125e8 <printf@plt>
   1d6c0:	movw	lr, #59933	; 0xea1d
   1d6c4:	movt	lr, #1
   1d6c8:	str	r0, [sp, #100]	; 0x64
   1d6cc:	mov	r0, lr
   1d6d0:	bl	125e8 <printf@plt>
   1d6d4:	movw	lr, #60675	; 0xed03
   1d6d8:	movt	lr, #1
   1d6dc:	str	r0, [sp, #96]	; 0x60
   1d6e0:	mov	r0, lr
   1d6e4:	bl	125e8 <printf@plt>
   1d6e8:	movw	lr, #60706	; 0xed22
   1d6ec:	movt	lr, #1
   1d6f0:	str	r0, [sp, #92]	; 0x5c
   1d6f4:	mov	r0, lr
   1d6f8:	bl	125e8 <printf@plt>
   1d6fc:	movw	lr, #60779	; 0xed6b
   1d700:	movt	lr, #1
   1d704:	str	r0, [sp, #88]	; 0x58
   1d708:	mov	r0, lr
   1d70c:	bl	125e8 <printf@plt>
   1d710:	movw	lr, #61518	; 0xf04e
   1d714:	movt	lr, #1
   1d718:	str	r0, [sp, #84]	; 0x54
   1d71c:	mov	r0, lr
   1d720:	bl	125e8 <printf@plt>
   1d724:	movw	lr, #61551	; 0xf06f
   1d728:	movt	lr, #1
   1d72c:	str	r0, [sp, #80]	; 0x50
   1d730:	mov	r0, lr
   1d734:	bl	125e8 <printf@plt>
   1d738:	movw	lr, #61630	; 0xf0be
   1d73c:	movt	lr, #1
   1d740:	str	r0, [sp, #76]	; 0x4c
   1d744:	mov	r0, lr
   1d748:	bl	125e8 <printf@plt>
   1d74c:	movw	lr, #61706	; 0xf10a
   1d750:	movt	lr, #1
   1d754:	str	r0, [sp, #72]	; 0x48
   1d758:	mov	r0, lr
   1d75c:	bl	125e8 <printf@plt>
   1d760:	movw	lr, #61770	; 0xf14a
   1d764:	movt	lr, #1
   1d768:	str	r0, [sp, #68]	; 0x44
   1d76c:	mov	r0, lr
   1d770:	bl	125e8 <printf@plt>
   1d774:	movw	lr, #61848	; 0xf198
   1d778:	movt	lr, #1
   1d77c:	str	r0, [sp, #64]	; 0x40
   1d780:	mov	r0, lr
   1d784:	bl	125e8 <printf@plt>
   1d788:	movw	lr, #62873	; 0xf599
   1d78c:	movt	lr, #1
   1d790:	str	r0, [sp, #60]	; 0x3c
   1d794:	mov	r0, lr
   1d798:	bl	125e8 <printf@plt>
   1d79c:	movw	lr, #61902	; 0xf1ce
   1d7a0:	movt	lr, #1
   1d7a4:	str	r0, [sp, #56]	; 0x38
   1d7a8:	mov	r0, lr
   1d7ac:	bl	125e8 <printf@plt>
   1d7b0:	movw	lr, #61927	; 0xf1e7
   1d7b4:	movt	lr, #1
   1d7b8:	str	r0, [sp, #52]	; 0x34
   1d7bc:	mov	r0, lr
   1d7c0:	bl	125e8 <printf@plt>
   1d7c4:	movw	lr, #62873	; 0xf599
   1d7c8:	movt	lr, #1
   1d7cc:	str	r0, [sp, #48]	; 0x30
   1d7d0:	mov	r0, lr
   1d7d4:	bl	125e8 <printf@plt>
   1d7d8:	movw	lr, #61958	; 0xf206
   1d7dc:	movt	lr, #1
   1d7e0:	str	r0, [sp, #44]	; 0x2c
   1d7e4:	mov	r0, lr
   1d7e8:	bl	125e8 <printf@plt>
   1d7ec:	movw	lr, #61986	; 0xf222
   1d7f0:	movt	lr, #1
   1d7f4:	str	r0, [sp, #40]	; 0x28
   1d7f8:	mov	r0, lr
   1d7fc:	bl	125e8 <printf@plt>
   1d800:	movw	lr, #62873	; 0xf599
   1d804:	movt	lr, #1
   1d808:	str	r0, [sp, #36]	; 0x24
   1d80c:	mov	r0, lr
   1d810:	bl	125e8 <printf@plt>
   1d814:	movw	lr, #62037	; 0xf255
   1d818:	movt	lr, #1
   1d81c:	str	r0, [sp, #32]
   1d820:	mov	r0, lr
   1d824:	bl	125e8 <printf@plt>
   1d828:	movw	lr, #62116	; 0xf2a4
   1d82c:	movt	lr, #1
   1d830:	str	r0, [sp, #28]
   1d834:	mov	r0, lr
   1d838:	bl	125e8 <printf@plt>
   1d83c:	movw	lr, #62190	; 0xf2ee
   1d840:	movt	lr, #1
   1d844:	str	r0, [sp, #24]
   1d848:	mov	r0, lr
   1d84c:	bl	125e8 <printf@plt>
   1d850:	movw	lr, #62234	; 0xf31a
   1d854:	movt	lr, #1
   1d858:	str	r0, [sp, #20]
   1d85c:	mov	r0, lr
   1d860:	bl	125e8 <printf@plt>
   1d864:	movw	lr, #62311	; 0xf367
   1d868:	movt	lr, #1
   1d86c:	str	r0, [sp, #16]
   1d870:	mov	r0, lr
   1d874:	bl	125e8 <printf@plt>
   1d878:	movw	lr, #62382	; 0xf3ae
   1d87c:	movt	lr, #1
   1d880:	str	r0, [sp, #12]
   1d884:	mov	r0, lr
   1d888:	bl	125e8 <printf@plt>
   1d88c:	movw	lr, #62446	; 0xf3ee
   1d890:	movt	lr, #1
   1d894:	str	r0, [sp, #8]
   1d898:	mov	r0, lr
   1d89c:	bl	125e8 <printf@plt>
   1d8a0:	movw	lr, #62873	; 0xf599
   1d8a4:	movt	lr, #1
   1d8a8:	str	r0, [sp, #4]
   1d8ac:	mov	r0, lr
   1d8b0:	bl	125e8 <printf@plt>
   1d8b4:	str	r0, [sp]
   1d8b8:	mov	sp, fp
   1d8bc:	pop	{fp, pc}
   1d8c0:	push	{fp, lr}
   1d8c4:	mov	fp, sp
   1d8c8:	sub	sp, sp, #16
   1d8cc:	bl	1299c <coda_get_libcoda_version@plt>
   1d8d0:	movw	lr, #62511	; 0xf42f
   1d8d4:	movt	lr, #1
   1d8d8:	str	r0, [fp, #-4]
   1d8dc:	mov	r0, lr
   1d8e0:	ldr	r1, [fp, #-4]
   1d8e4:	bl	125e8 <printf@plt>
   1d8e8:	movw	r1, #62532	; 0xf444
   1d8ec:	movt	r1, #1
   1d8f0:	str	r0, [sp, #8]
   1d8f4:	mov	r0, r1
   1d8f8:	bl	125e8 <printf@plt>
   1d8fc:	movw	r1, #62873	; 0xf599
   1d900:	movt	r1, #1
   1d904:	str	r0, [sp, #4]
   1d908:	mov	r0, r1
   1d90c:	bl	125e8 <printf@plt>
   1d910:	str	r0, [sp]
   1d914:	mov	sp, fp
   1d918:	pop	{fp, pc}
   1d91c:	cmp	r3, #0
   1d920:	cmpeq	r2, #0
   1d924:	bne	1d948 <main@@Base+0x2a20>
   1d928:	cmp	r1, #0
   1d92c:	movlt	r1, #-2147483648	; 0x80000000
   1d930:	movlt	r0, #0
   1d934:	blt	1d944 <main@@Base+0x2a1c>
   1d938:	cmpeq	r0, #0
   1d93c:	mvnne	r1, #-2147483648	; 0x80000000
   1d940:	mvnne	r0, #0
   1d944:	b	1d9f0 <main@@Base+0x2ac8>
   1d948:	sub	sp, sp, #8
   1d94c:	push	{sp, lr}
   1d950:	cmp	r1, #0
   1d954:	blt	1d974 <main@@Base+0x2a4c>
   1d958:	cmp	r3, #0
   1d95c:	blt	1d9a8 <main@@Base+0x2a80>
   1d960:	bl	1da00 <main@@Base+0x2ad8>
   1d964:	ldr	lr, [sp, #4]
   1d968:	add	sp, sp, #8
   1d96c:	pop	{r2, r3}
   1d970:	bx	lr
   1d974:	rsbs	r0, r0, #0
   1d978:	sbc	r1, r1, r1, lsl #1
   1d97c:	cmp	r3, #0
   1d980:	blt	1d9cc <main@@Base+0x2aa4>
   1d984:	bl	1da00 <main@@Base+0x2ad8>
   1d988:	ldr	lr, [sp, #4]
   1d98c:	add	sp, sp, #8
   1d990:	pop	{r2, r3}
   1d994:	rsbs	r0, r0, #0
   1d998:	sbc	r1, r1, r1, lsl #1
   1d99c:	rsbs	r2, r2, #0
   1d9a0:	sbc	r3, r3, r3, lsl #1
   1d9a4:	bx	lr
   1d9a8:	rsbs	r2, r2, #0
   1d9ac:	sbc	r3, r3, r3, lsl #1
   1d9b0:	bl	1da00 <main@@Base+0x2ad8>
   1d9b4:	ldr	lr, [sp, #4]
   1d9b8:	add	sp, sp, #8
   1d9bc:	pop	{r2, r3}
   1d9c0:	rsbs	r0, r0, #0
   1d9c4:	sbc	r1, r1, r1, lsl #1
   1d9c8:	bx	lr
   1d9cc:	rsbs	r2, r2, #0
   1d9d0:	sbc	r3, r3, r3, lsl #1
   1d9d4:	bl	1da00 <main@@Base+0x2ad8>
   1d9d8:	ldr	lr, [sp, #4]
   1d9dc:	add	sp, sp, #8
   1d9e0:	pop	{r2, r3}
   1d9e4:	rsbs	r2, r2, #0
   1d9e8:	sbc	r3, r3, r3, lsl #1
   1d9ec:	bx	lr
   1d9f0:	push	{r1, lr}
   1d9f4:	mov	r0, #8
   1d9f8:	bl	125ac <raise@plt>
   1d9fc:	pop	{r1, pc}
   1da00:	cmp	r1, r3
   1da04:	cmpeq	r0, r2
   1da08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da0c:	mov	r4, r0
   1da10:	movcc	r0, #0
   1da14:	mov	r5, r1
   1da18:	ldr	lr, [sp, #36]	; 0x24
   1da1c:	movcc	r1, r0
   1da20:	bcc	1db1c <main@@Base+0x2bf4>
   1da24:	cmp	r3, #0
   1da28:	clzeq	ip, r2
   1da2c:	clzne	ip, r3
   1da30:	addeq	ip, ip, #32
   1da34:	cmp	r5, #0
   1da38:	clzeq	r1, r4
   1da3c:	addeq	r1, r1, #32
   1da40:	clzne	r1, r5
   1da44:	sub	ip, ip, r1
   1da48:	sub	sl, ip, #32
   1da4c:	lsl	r9, r3, ip
   1da50:	rsb	fp, ip, #32
   1da54:	orr	r9, r9, r2, lsl sl
   1da58:	orr	r9, r9, r2, lsr fp
   1da5c:	lsl	r8, r2, ip
   1da60:	cmp	r5, r9
   1da64:	cmpeq	r4, r8
   1da68:	movcc	r0, #0
   1da6c:	movcc	r1, r0
   1da70:	bcc	1da8c <main@@Base+0x2b64>
   1da74:	mov	r0, #1
   1da78:	subs	r4, r4, r8
   1da7c:	lsl	r1, r0, sl
   1da80:	orr	r1, r1, r0, lsr fp
   1da84:	lsl	r0, r0, ip
   1da88:	sbc	r5, r5, r9
   1da8c:	cmp	ip, #0
   1da90:	beq	1db1c <main@@Base+0x2bf4>
   1da94:	lsr	r6, r8, #1
   1da98:	orr	r6, r6, r9, lsl #31
   1da9c:	lsr	r7, r9, #1
   1daa0:	mov	r2, ip
   1daa4:	b	1dac8 <main@@Base+0x2ba0>
   1daa8:	subs	r3, r4, r6
   1daac:	sbc	r8, r5, r7
   1dab0:	adds	r3, r3, r3
   1dab4:	adc	r8, r8, r8
   1dab8:	adds	r4, r3, #1
   1dabc:	adc	r5, r8, #0
   1dac0:	subs	r2, r2, #1
   1dac4:	beq	1dae4 <main@@Base+0x2bbc>
   1dac8:	cmp	r5, r7
   1dacc:	cmpeq	r4, r6
   1dad0:	bcs	1daa8 <main@@Base+0x2b80>
   1dad4:	adds	r4, r4, r4
   1dad8:	adc	r5, r5, r5
   1dadc:	subs	r2, r2, #1
   1dae0:	bne	1dac8 <main@@Base+0x2ba0>
   1dae4:	lsr	r3, r4, ip
   1dae8:	orr	r3, r3, r5, lsl fp
   1daec:	lsr	r2, r5, ip
   1daf0:	orr	r3, r3, r5, lsr sl
   1daf4:	adds	r0, r0, r4
   1daf8:	mov	r4, r3
   1dafc:	lsl	r3, r2, ip
   1db00:	orr	r3, r3, r4, lsl sl
   1db04:	lsl	ip, r4, ip
   1db08:	orr	r3, r3, r4, lsr fp
   1db0c:	adc	r1, r1, r5
   1db10:	subs	r0, r0, ip
   1db14:	mov	r5, r2
   1db18:	sbc	r1, r1, r3
   1db1c:	cmp	lr, #0
   1db20:	strdne	r4, [lr]
   1db24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001db28 <__libc_csu_init@@Base>:
   1db28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1db2c:	mov	r7, r0
   1db30:	ldr	r6, [pc, #72]	; 1db80 <__libc_csu_init@@Base+0x58>
   1db34:	ldr	r5, [pc, #72]	; 1db84 <__libc_csu_init@@Base+0x5c>
   1db38:	add	r6, pc, r6
   1db3c:	add	r5, pc, r5
   1db40:	sub	r6, r6, r5
   1db44:	mov	r8, r1
   1db48:	mov	r9, r2
   1db4c:	bl	12568 <coda_cursor_get_byte_size@plt-0x20>
   1db50:	asrs	r6, r6, #2
   1db54:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1db58:	mov	r4, #0
   1db5c:	add	r4, r4, #1
   1db60:	ldr	r3, [r5], #4
   1db64:	mov	r2, r9
   1db68:	mov	r1, r8
   1db6c:	mov	r0, r7
   1db70:	blx	r3
   1db74:	cmp	r6, r4
   1db78:	bne	1db5c <__libc_csu_init@@Base+0x34>
   1db7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1db80:			; <UNDEFINED> instruction: 0x000123b4
   1db84:	andeq	r2, r1, ip, lsr #7

0001db88 <__libc_csu_fini@@Base>:
   1db88:	bx	lr

Disassembly of section .fini:

0001db8c <.fini>:
   1db8c:	push	{r3, lr}
   1db90:	pop	{r3, pc}
