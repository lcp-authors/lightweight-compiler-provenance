
../compcert-repos/dvidelabs-flatcc-3b39ef7/src/cli/CMakeFiles/flatcc_cli.dir/flatcc_cli.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <usage>:
       0:	push	{fp, lr}
       4:	add	fp, sp, #4
       8:	sub	sp, sp, #8
       c:	str	r0, [fp, #-8]
      10:	ldr	r2, [pc, #76]	; 64 <usage+0x64>
      14:	ldr	r1, [pc, #76]	; 68 <usage+0x68>
      18:	ldr	r0, [fp, #-8]
      1c:	bl	0 <fprintf>
      20:	ldr	r2, [pc, #68]	; 6c <usage+0x6c>
      24:	ldr	r1, [pc, #68]	; 70 <usage+0x70>
      28:	ldr	r0, [fp, #-8]
      2c:	bl	0 <fprintf>
      30:	ldr	r3, [fp, #-8]
      34:	mov	r2, #35	; 0x23
      38:	mov	r1, #1
      3c:	ldr	r0, [pc, #48]	; 74 <usage+0x74>
      40:	bl	0 <fwrite>
      44:	ldr	r3, [fp, #-8]
      48:	ldr	r2, [pc, #40]	; 78 <usage+0x78>
      4c:	mov	r1, #1
      50:	ldr	r0, [pc, #36]	; 7c <usage+0x7c>
      54:	bl	0 <fwrite>
      58:	nop			; (mov r0, r0)
      5c:	sub	sp, fp, #4
      60:	pop	{fp, pc}
      64:	.word	0x00000000
      68:	.word	0x00000038
      6c:	.word	0x0000003c
      70:	.word	0x00000044
      74:	.word	0x00000054
      78:	.word	0x00000581
      7c:	.word	0x00000078

00000080 <help>:
      80:	push	{fp, lr}
      84:	add	fp, sp, #4
      88:	sub	sp, sp, #8
      8c:	str	r0, [fp, #-8]
      90:	ldr	r0, [fp, #-8]
      94:	bl	0 <usage>
      98:	ldr	r3, [fp, #-8]
      9c:	ldr	r2, [pc, #20]	; b8 <help+0x38>
      a0:	mov	r1, #1
      a4:	ldr	r0, [pc, #16]	; bc <help+0x3c>
      a8:	bl	0 <fwrite>
      ac:	nop			; (mov r0, r0)
      b0:	sub	sp, fp, #4
      b4:	pop	{fp, pc}
      b8:	.word	0x00000c44
      bc:	.word	0x000005fc

000000c0 <parse_bool_arg>:
      c0:	push	{fp, lr}
      c4:	add	fp, sp, #4
      c8:	sub	sp, sp, #8
      cc:	str	r0, [fp, #-8]
      d0:	ldr	r1, [pc, #144]	; 168 <parse_bool_arg+0xa8>
      d4:	ldr	r0, [fp, #-8]
      d8:	bl	0 <strcmp>
      dc:	mov	r3, r0
      e0:	cmp	r3, #0
      e4:	beq	100 <parse_bool_arg+0x40>
      e8:	ldr	r1, [pc, #124]	; 16c <parse_bool_arg+0xac>
      ec:	ldr	r0, [fp, #-8]
      f0:	bl	0 <strcmp>
      f4:	mov	r3, r0
      f8:	cmp	r3, #0
      fc:	bne	108 <parse_bool_arg+0x48>
     100:	mov	r3, #0
     104:	b	15c <parse_bool_arg+0x9c>
     108:	ldr	r1, [pc, #96]	; 170 <parse_bool_arg+0xb0>
     10c:	ldr	r0, [fp, #-8]
     110:	bl	0 <strcmp>
     114:	mov	r3, r0
     118:	cmp	r3, #0
     11c:	beq	138 <parse_bool_arg+0x78>
     120:	ldr	r1, [pc, #76]	; 174 <parse_bool_arg+0xb4>
     124:	ldr	r0, [fp, #-8]
     128:	bl	0 <strcmp>
     12c:	mov	r3, r0
     130:	cmp	r3, #0
     134:	bne	140 <parse_bool_arg+0x80>
     138:	mov	r3, #1
     13c:	b	15c <parse_bool_arg+0x9c>
     140:	ldr	r3, [pc, #48]	; 178 <parse_bool_arg+0xb8>
     144:	ldr	r3, [r3]
     148:	ldr	r2, [fp, #-8]
     14c:	ldr	r1, [pc, #40]	; 17c <parse_bool_arg+0xbc>
     150:	mov	r0, r3
     154:	bl	0 <fprintf>
     158:	mvn	r3, #0
     15c:	mov	r0, r3
     160:	sub	sp, fp, #4
     164:	pop	{fp, pc}
     168:	.word	0x00001244
     16c:	.word	0x00001248
     170:	.word	0x0000124c
     174:	.word	0x00001250
     178:	.word	0x00000000
     17c:	.word	0x00001254

00000180 <match_long_arg>:
     180:	push	{fp, lr}
     184:	add	fp, sp, #4
     188:	sub	sp, sp, #16
     18c:	str	r0, [fp, #-8]
     190:	str	r1, [fp, #-12]
     194:	str	r2, [fp, #-16]
     198:	ldr	r2, [fp, #-16]
     19c:	ldr	r1, [fp, #-12]
     1a0:	ldr	r0, [fp, #-8]
     1a4:	bl	0 <strncmp>
     1a8:	mov	r3, r0
     1ac:	cmp	r3, #0
     1b0:	bne	1d4 <match_long_arg+0x54>
     1b4:	ldr	r0, [fp, #-8]
     1b8:	bl	0 <strlen>
     1bc:	mov	r2, r0
     1c0:	ldr	r3, [fp, #-16]
     1c4:	cmp	r2, r3
     1c8:	bne	1d4 <match_long_arg+0x54>
     1cc:	mov	r3, #1
     1d0:	b	1d8 <match_long_arg+0x58>
     1d4:	mov	r3, #0
     1d8:	mov	r0, r3
     1dc:	sub	sp, fp, #4
     1e0:	pop	{fp, pc}

000001e4 <set_opt>:
     1e4:	push	{fp, lr}
     1e8:	add	fp, sp, #4
     1ec:	sub	sp, sp, #32
     1f0:	str	r0, [fp, #-24]	; 0xffffffe8
     1f4:	str	r1, [fp, #-28]	; 0xffffffe4
     1f8:	str	r2, [fp, #-32]	; 0xffffffe0
     1fc:	mov	r3, #0
     200:	str	r3, [fp, #-8]
     204:	ldr	r0, [fp, #-28]	; 0xffffffe4
     208:	bl	0 <strlen>
     20c:	str	r0, [fp, #-12]
     210:	mov	r1, #61	; 0x3d
     214:	ldr	r0, [fp, #-28]	; 0xffffffe4
     218:	bl	0 <strchr>
     21c:	str	r0, [fp, #-16]
     220:	ldr	r3, [fp, #-16]
     224:	cmp	r3, #0
     228:	beq	248 <set_opt+0x64>
     22c:	ldr	r3, [fp, #-16]
     230:	add	r3, r3, #1
     234:	str	r3, [fp, #-32]	; 0xffffffe0
     238:	ldr	r2, [fp, #-16]
     23c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     240:	sub	r3, r2, r3
     244:	str	r3, [fp, #-12]
     248:	ldr	r3, [fp, #-28]	; 0xffffffe4
     24c:	ldrb	r3, [r3]
     250:	cmp	r3, #104	; 0x68
     254:	beq	270 <set_opt+0x8c>
     258:	ldr	r1, [fp, #-28]	; 0xffffffe4
     25c:	ldr	r0, [pc, #2128]	; ab4 <set_opt+0x8d0>
     260:	bl	0 <strcmp>
     264:	mov	r3, r0
     268:	cmp	r3, #0
     26c:	bne	288 <set_opt+0xa4>
     270:	ldr	r3, [pc, #2112]	; ab8 <set_opt+0x8d4>
     274:	ldr	r3, [r3]
     278:	mov	r0, r3
     27c:	bl	80 <help>
     280:	mov	r0, #0
     284:	bl	0 <exit>
     288:	ldr	r1, [fp, #-28]	; 0xffffffe4
     28c:	ldr	r0, [pc, #2088]	; abc <set_opt+0x8d8>
     290:	bl	0 <strcmp>
     294:	mov	r3, r0
     298:	cmp	r3, #0
     29c:	bne	2d8 <set_opt+0xf4>
     2a0:	ldr	r3, [pc, #2072]	; ac0 <set_opt+0x8dc>
     2a4:	ldr	r3, [r3]
     2a8:	ldr	r2, [pc, #2068]	; ac4 <set_opt+0x8e0>
     2ac:	ldr	r1, [pc, #2068]	; ac8 <set_opt+0x8e4>
     2b0:	mov	r0, r3
     2b4:	bl	0 <fprintf>
     2b8:	ldr	r3, [pc, #2048]	; ac0 <set_opt+0x8dc>
     2bc:	ldr	r3, [r3]
     2c0:	ldr	r2, [pc, #2052]	; acc <set_opt+0x8e8>
     2c4:	ldr	r1, [pc, #2052]	; ad0 <set_opt+0x8ec>
     2c8:	mov	r0, r3
     2cc:	bl	0 <fprintf>
     2d0:	mov	r0, #0
     2d4:	bl	0 <exit>
     2d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     2dc:	ldr	r0, [pc, #2032]	; ad4 <set_opt+0x8f0>
     2e0:	bl	0 <strcmp>
     2e4:	mov	r3, r0
     2e8:	cmp	r3, #0
     2ec:	bne	304 <set_opt+0x120>
     2f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     2f4:	mov	r2, #1
     2f8:	str	r2, [r3, #108]	; 0x6c
     2fc:	mov	r3, #0
     300:	b	aa8 <set_opt+0x8c4>
     304:	ldr	r1, [fp, #-28]	; 0xffffffe4
     308:	ldr	r0, [pc, #1992]	; ad8 <set_opt+0x8f4>
     30c:	bl	0 <strcmp>
     310:	mov	r3, r0
     314:	cmp	r3, #0
     318:	bne	330 <set_opt+0x14c>
     31c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     320:	mov	r2, #1
     324:	str	r2, [r3, #180]	; 0xb4
     328:	mov	r3, #0
     32c:	b	aa8 <set_opt+0x8c4>
     330:	ldr	r1, [fp, #-28]	; 0xffffffe4
     334:	ldr	r0, [pc, #1952]	; adc <set_opt+0x8f8>
     338:	bl	0 <strcmp>
     33c:	mov	r3, r0
     340:	cmp	r3, #0
     344:	bne	35c <set_opt+0x178>
     348:	ldr	r3, [fp, #-24]	; 0xffffffe8
     34c:	mov	r2, #1
     350:	str	r2, [r3, #164]	; 0xa4
     354:	mov	r3, #0
     358:	b	aa8 <set_opt+0x8c4>
     35c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     360:	ldr	r0, [pc, #1912]	; ae0 <set_opt+0x8fc>
     364:	bl	0 <strcmp>
     368:	mov	r3, r0
     36c:	cmp	r3, #0
     370:	bne	388 <set_opt+0x1a4>
     374:	ldr	r3, [fp, #-24]	; 0xffffffe8
     378:	mov	r2, #1
     37c:	str	r2, [r3, #168]	; 0xa8
     380:	mov	r3, #0
     384:	b	aa8 <set_opt+0x8c4>
     388:	ldr	r1, [fp, #-28]	; 0xffffffe4
     38c:	ldr	r0, [pc, #1872]	; ae4 <set_opt+0x900>
     390:	bl	0 <strcmp>
     394:	mov	r3, r0
     398:	cmp	r3, #0
     39c:	bne	3c0 <set_opt+0x1dc>
     3a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3a4:	mov	r2, #1
     3a8:	str	r2, [r3, #164]	; 0xa4
     3ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
     3b0:	mov	r2, #1
     3b4:	str	r2, [r3, #168]	; 0xa8
     3b8:	mov	r3, #0
     3bc:	b	aa8 <set_opt+0x8c4>
     3c0:	ldr	r2, [fp, #-12]
     3c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
     3c8:	ldr	r0, [pc, #1816]	; ae8 <set_opt+0x904>
     3cc:	bl	180 <match_long_arg>
     3d0:	mov	r3, r0
     3d4:	cmp	r3, #0
     3d8:	beq	468 <set_opt+0x284>
     3dc:	ldr	r3, [pc, #1756]	; ac0 <set_opt+0x8dc>
     3e0:	ldr	r3, [r3]
     3e4:	mov	r2, #112	; 0x70
     3e8:	mov	r1, #1
     3ec:	ldr	r0, [pc, #1784]	; aec <set_opt+0x908>
     3f0:	bl	0 <fwrite>
     3f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     3f8:	cmp	r3, #0
     3fc:	bne	420 <set_opt+0x23c>
     400:	ldr	r3, [pc, #1720]	; ac0 <set_opt+0x8dc>
     404:	ldr	r3, [r3]
     408:	mov	r2, #44	; 0x2c
     40c:	mov	r1, #1
     410:	ldr	r0, [pc, #1752]	; af0 <set_opt+0x90c>
     414:	bl	0 <fwrite>
     418:	mvn	r0, #0
     41c:	bl	0 <exit>
     420:	ldr	r0, [fp, #-32]	; 0xffffffe0
     424:	bl	c0 <parse_bool_arg>
     428:	mov	r2, r0
     42c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     430:	str	r2, [r3, #184]	; 0xb8
     434:	ldr	r3, [fp, #-24]	; 0xffffffe8
     438:	ldr	r3, [r3, #184]	; 0xb8
     43c:	cmp	r3, #0
     440:	bge	44c <set_opt+0x268>
     444:	mvn	r0, #0
     448:	bl	0 <exit>
     44c:	ldr	r3, [fp, #-16]
     450:	cmp	r3, #0
     454:	beq	460 <set_opt+0x27c>
     458:	mov	r3, #0
     45c:	b	aa8 <set_opt+0x8c4>
     460:	mov	r3, #2
     464:	b	aa8 <set_opt+0x8c4>
     468:	ldr	r2, [fp, #-12]
     46c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     470:	ldr	r0, [pc, #1660]	; af4 <set_opt+0x910>
     474:	bl	180 <match_long_arg>
     478:	mov	r3, r0
     47c:	cmp	r3, #0
     480:	beq	4f8 <set_opt+0x314>
     484:	ldr	r3, [fp, #-32]	; 0xffffffe0
     488:	cmp	r3, #0
     48c:	bne	4b0 <set_opt+0x2cc>
     490:	ldr	r3, [pc, #1576]	; ac0 <set_opt+0x8dc>
     494:	ldr	r3, [r3]
     498:	mov	r2, #41	; 0x29
     49c:	mov	r1, #1
     4a0:	ldr	r0, [pc, #1616]	; af8 <set_opt+0x914>
     4a4:	bl	0 <fwrite>
     4a8:	mvn	r0, #0
     4ac:	bl	0 <exit>
     4b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
     4b4:	bl	c0 <parse_bool_arg>
     4b8:	mov	r2, r0
     4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4c0:	str	r2, [r3, #188]	; 0xbc
     4c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     4c8:	ldr	r3, [r3, #188]	; 0xbc
     4cc:	cmp	r3, #0
     4d0:	bge	4dc <set_opt+0x2f8>
     4d4:	mvn	r0, #0
     4d8:	bl	0 <exit>
     4dc:	ldr	r3, [fp, #-16]
     4e0:	cmp	r3, #0
     4e4:	beq	4f0 <set_opt+0x30c>
     4e8:	mov	r3, #0
     4ec:	b	aa8 <set_opt+0x8c4>
     4f0:	mov	r3, #2
     4f4:	b	aa8 <set_opt+0x8c4>
     4f8:	ldr	r2, [fp, #-12]
     4fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
     500:	ldr	r0, [pc, #1524]	; afc <set_opt+0x918>
     504:	bl	180 <match_long_arg>
     508:	mov	r3, r0
     50c:	cmp	r3, #0
     510:	beq	574 <set_opt+0x390>
     514:	ldr	r3, [fp, #-32]	; 0xffffffe0
     518:	cmp	r3, #0
     51c:	bne	540 <set_opt+0x35c>
     520:	ldr	r3, [pc, #1432]	; ac0 <set_opt+0x8dc>
     524:	ldr	r3, [r3]
     528:	mov	r2, #35	; 0x23
     52c:	mov	r1, #1
     530:	ldr	r0, [pc, #1480]	; b00 <set_opt+0x91c>
     534:	bl	0 <fwrite>
     538:	mvn	r0, #0
     53c:	bl	0 <exit>
     540:	ldr	r3, [fp, #-24]	; 0xffffffe8
     544:	ldr	r2, [fp, #-32]	; 0xffffffe0
     548:	str	r2, [r3, #116]	; 0x74
     54c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     550:	mov	r2, #1
     554:	str	r2, [r3, #112]	; 0x70
     558:	ldr	r3, [fp, #-16]
     55c:	cmp	r3, #0
     560:	beq	56c <set_opt+0x388>
     564:	mov	r3, #0
     568:	b	aa8 <set_opt+0x8c4>
     56c:	mov	r3, #2
     570:	b	aa8 <set_opt+0x8c4>
     574:	ldr	r2, [fp, #-12]
     578:	ldr	r1, [fp, #-28]	; 0xffffffe4
     57c:	ldr	r0, [pc, #1408]	; b04 <set_opt+0x920>
     580:	bl	180 <match_long_arg>
     584:	mov	r3, r0
     588:	cmp	r3, #0
     58c:	beq	5e4 <set_opt+0x400>
     590:	ldr	r3, [fp, #-32]	; 0xffffffe0
     594:	cmp	r3, #0
     598:	bne	5bc <set_opt+0x3d8>
     59c:	ldr	r3, [pc, #1308]	; ac0 <set_opt+0x8dc>
     5a0:	ldr	r3, [r3]
     5a4:	mov	r2, #37	; 0x25
     5a8:	mov	r1, #1
     5ac:	ldr	r0, [pc, #1364]	; b08 <set_opt+0x924>
     5b0:	bl	0 <fwrite>
     5b4:	mvn	r0, #0
     5b8:	bl	0 <exit>
     5bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     5c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     5c4:	str	r2, [r3, #120]	; 0x78
     5c8:	ldr	r3, [fp, #-16]
     5cc:	cmp	r3, #0
     5d0:	beq	5dc <set_opt+0x3f8>
     5d4:	mov	r3, #0
     5d8:	b	aa8 <set_opt+0x8c4>
     5dc:	mov	r3, #2
     5e0:	b	aa8 <set_opt+0x8c4>
     5e4:	ldr	r2, [fp, #-12]
     5e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     5ec:	ldr	r0, [pc, #1304]	; b0c <set_opt+0x928>
     5f0:	bl	180 <match_long_arg>
     5f4:	mov	r3, r0
     5f8:	cmp	r3, #0
     5fc:	beq	654 <set_opt+0x470>
     600:	ldr	r3, [fp, #-32]	; 0xffffffe0
     604:	cmp	r3, #0
     608:	bne	62c <set_opt+0x448>
     60c:	ldr	r3, [pc, #1196]	; ac0 <set_opt+0x8dc>
     610:	ldr	r3, [r3]
     614:	mov	r2, #35	; 0x23
     618:	mov	r1, #1
     61c:	ldr	r0, [pc, #1260]	; b10 <set_opt+0x92c>
     620:	bl	0 <fwrite>
     624:	mvn	r0, #0
     628:	bl	0 <exit>
     62c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     630:	ldr	r2, [fp, #-32]	; 0xffffffe0
     634:	str	r2, [r3, #124]	; 0x7c
     638:	ldr	r3, [fp, #-16]
     63c:	cmp	r3, #0
     640:	beq	64c <set_opt+0x468>
     644:	mov	r3, #0
     648:	b	aa8 <set_opt+0x8c4>
     64c:	mov	r3, #2
     650:	b	aa8 <set_opt+0x8c4>
     654:	ldr	r2, [fp, #-12]
     658:	ldr	r1, [fp, #-28]	; 0xffffffe4
     65c:	ldr	r0, [pc, #1200]	; b14 <set_opt+0x930>
     660:	bl	180 <match_long_arg>
     664:	mov	r3, r0
     668:	cmp	r3, #0
     66c:	beq	6c4 <set_opt+0x4e0>
     670:	ldr	r3, [fp, #-32]	; 0xffffffe0
     674:	cmp	r3, #0
     678:	bne	69c <set_opt+0x4b8>
     67c:	ldr	r3, [pc, #1084]	; ac0 <set_opt+0x8dc>
     680:	ldr	r3, [r3]
     684:	mov	r2, #41	; 0x29
     688:	mov	r1, #1
     68c:	ldr	r0, [pc, #1156]	; b18 <set_opt+0x934>
     690:	bl	0 <fwrite>
     694:	mvn	r0, #0
     698:	bl	0 <exit>
     69c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     6a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     6a4:	str	r2, [r3, #196]	; 0xc4
     6a8:	ldr	r3, [fp, #-16]
     6ac:	cmp	r3, #0
     6b0:	beq	6bc <set_opt+0x4d8>
     6b4:	mov	r3, #0
     6b8:	b	aa8 <set_opt+0x8c4>
     6bc:	mov	r3, #2
     6c0:	b	aa8 <set_opt+0x8c4>
     6c4:	ldr	r2, [fp, #-12]
     6c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
     6cc:	ldr	r0, [pc, #1096]	; b1c <set_opt+0x938>
     6d0:	bl	180 <match_long_arg>
     6d4:	mov	r3, r0
     6d8:	cmp	r3, #0
     6dc:	beq	734 <set_opt+0x550>
     6e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
     6e4:	cmp	r3, #0
     6e8:	bne	70c <set_opt+0x528>
     6ec:	ldr	r3, [pc, #972]	; ac0 <set_opt+0x8dc>
     6f0:	ldr	r3, [r3]
     6f4:	mov	r2, #28
     6f8:	mov	r1, #1
     6fc:	ldr	r0, [pc, #1052]	; b20 <set_opt+0x93c>
     700:	bl	0 <fwrite>
     704:	mvn	r0, #0
     708:	bl	0 <exit>
     70c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     710:	ldr	r2, [fp, #-32]	; 0xffffffe0
     714:	str	r2, [r3, #192]	; 0xc0
     718:	ldr	r3, [fp, #-16]
     71c:	cmp	r3, #0
     720:	beq	72c <set_opt+0x548>
     724:	mov	r3, #0
     728:	b	aa8 <set_opt+0x8c4>
     72c:	mov	r3, #2
     730:	b	aa8 <set_opt+0x8c4>
     734:	ldr	r3, [fp, #-28]	; 0xffffffe4
     738:	ldrb	r3, [r3]
     73c:	sub	r3, r3, #45	; 0x2d
     740:	cmp	r3, #74	; 0x4a
     744:	ldrls	pc, [pc, r3, lsl #2]
     748:	b	a84 <set_opt+0x8a0>
     74c:	.word	0x00000878
     750:	.word	0x00000a84
     754:	.word	0x00000a84
     758:	.word	0x00000a84
     75c:	.word	0x00000a84
     760:	.word	0x00000a84
     764:	.word	0x00000a84
     768:	.word	0x00000a84
     76c:	.word	0x00000a84
     770:	.word	0x00000a84
     774:	.word	0x00000a84
     778:	.word	0x00000a84
     77c:	.word	0x00000a84
     780:	.word	0x00000a84
     784:	.word	0x00000a84
     788:	.word	0x00000a84
     78c:	.word	0x00000a84
     790:	.word	0x00000a84
     794:	.word	0x00000a84
     798:	.word	0x00000a84
     79c:	.word	0x00000a84
     7a0:	.word	0x00000a84
     7a4:	.word	0x00000a84
     7a8:	.word	0x00000a84
     7ac:	.word	0x00000a84
     7b0:	.word	0x00000a84
     7b4:	.word	0x00000a84
     7b8:	.word	0x00000a84
     7bc:	.word	0x00000898
     7c0:	.word	0x00000a84
     7c4:	.word	0x00000a84
     7c8:	.word	0x00000a84
     7cc:	.word	0x00000a84
     7d0:	.word	0x00000a84
     7d4:	.word	0x00000a84
     7d8:	.word	0x00000a84
     7dc:	.word	0x00000a84
     7e0:	.word	0x00000a84
     7e4:	.word	0x00000a84
     7e8:	.word	0x00000a84
     7ec:	.word	0x00000a84
     7f0:	.word	0x00000a84
     7f4:	.word	0x00000a84
     7f8:	.word	0x00000a84
     7fc:	.word	0x00000a84
     800:	.word	0x00000a84
     804:	.word	0x00000a84
     808:	.word	0x00000a84
     80c:	.word	0x00000a84
     810:	.word	0x00000a84
     814:	.word	0x00000a84
     818:	.word	0x00000a84
     81c:	.word	0x00000a34
     820:	.word	0x00000a84
     824:	.word	0x000009f8
     828:	.word	0x00000a20
     82c:	.word	0x00000a84
     830:	.word	0x00000a84
     834:	.word	0x00000a84
     838:	.word	0x00000a84
     83c:	.word	0x00000a84
     840:	.word	0x00000a84
     844:	.word	0x00000a84
     848:	.word	0x00000a84
     84c:	.word	0x00000a84
     850:	.word	0x00000a84
     854:	.word	0x0000092c
     858:	.word	0x00000a84
     85c:	.word	0x00000a84
     860:	.word	0x00000a0c
     864:	.word	0x00000a84
     868:	.word	0x00000a84
     86c:	.word	0x00000a84
     870:	.word	0x000009e4
     874:	.word	0x000009d0
     878:	ldr	r3, [pc, #576]	; ac0 <set_opt+0x8dc>
     87c:	ldr	r3, [r3]
     880:	ldr	r2, [fp, #-28]	; 0xffffffe4
     884:	ldr	r1, [pc, #664]	; b24 <set_opt+0x940>
     888:	mov	r0, r3
     88c:	bl	0 <fprintf>
     890:	mvn	r0, #0
     894:	bl	0 <exit>
     898:	ldr	r3, [fp, #-28]	; 0xffffffe4
     89c:	add	r3, r3, #1
     8a0:	ldrb	r3, [r3]
     8a4:	cmp	r3, #0
     8a8:	beq	8c4 <set_opt+0x6e0>
     8ac:	mov	r3, #1
     8b0:	str	r3, [fp, #-8]
     8b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
     8b8:	add	r3, r3, #1
     8bc:	str	r3, [fp, #-32]	; 0xffffffe0
     8c0:	b	8f8 <set_opt+0x714>
     8c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
     8c8:	cmp	r3, #0
     8cc:	bne	8f0 <set_opt+0x70c>
     8d0:	ldr	r3, [pc, #488]	; ac0 <set_opt+0x8dc>
     8d4:	ldr	r3, [r3]
     8d8:	mov	r2, #28
     8dc:	mov	r1, #1
     8e0:	ldr	r0, [pc, #576]	; b28 <set_opt+0x944>
     8e4:	bl	0 <fwrite>
     8e8:	mvn	r0, #0
     8ec:	bl	0 <exit>
     8f0:	mov	r3, #2
     8f4:	str	r3, [fp, #-8]
     8f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     8fc:	ldr	r2, [r3, #200]	; 0xc8
     900:	ldr	r3, [fp, #-24]	; 0xffffffe8
     904:	ldr	r3, [r3, #208]	; 0xd0
     908:	add	r0, r3, #1
     90c:	ldr	r1, [fp, #-24]	; 0xffffffe8
     910:	str	r0, [r1, #208]	; 0xd0
     914:	lsl	r3, r3, #2
     918:	add	r3, r2, r3
     91c:	ldr	r2, [fp, #-32]	; 0xffffffe0
     920:	str	r2, [r3]
     924:	ldr	r3, [fp, #-8]
     928:	b	aa8 <set_opt+0x8c4>
     92c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     930:	ldr	r3, [r3, #216]	; 0xd8
     934:	cmp	r3, #0
     938:	beq	95c <set_opt+0x778>
     93c:	ldr	r3, [pc, #380]	; ac0 <set_opt+0x8dc>
     940:	ldr	r3, [r3]
     944:	mov	r2, #37	; 0x25
     948:	mov	r1, #1
     94c:	ldr	r0, [pc, #472]	; b2c <set_opt+0x948>
     950:	bl	0 <fwrite>
     954:	mvn	r0, #0
     958:	bl	0 <exit>
     95c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     960:	add	r3, r3, #1
     964:	ldrb	r3, [r3]
     968:	cmp	r3, #0
     96c:	beq	988 <set_opt+0x7a4>
     970:	mov	r3, #1
     974:	str	r3, [fp, #-8]
     978:	ldr	r3, [fp, #-28]	; 0xffffffe4
     97c:	add	r3, r3, #1
     980:	str	r3, [fp, #-32]	; 0xffffffe0
     984:	b	9bc <set_opt+0x7d8>
     988:	ldr	r3, [fp, #-32]	; 0xffffffe0
     98c:	cmp	r3, #0
     990:	bne	9b4 <set_opt+0x7d0>
     994:	ldr	r3, [pc, #292]	; ac0 <set_opt+0x8dc>
     998:	ldr	r3, [r3]
     99c:	mov	r2, #28
     9a0:	mov	r1, #1
     9a4:	ldr	r0, [pc, #388]	; b30 <set_opt+0x94c>
     9a8:	bl	0 <fwrite>
     9ac:	mvn	r0, #0
     9b0:	bl	0 <exit>
     9b4:	mov	r3, #2
     9b8:	str	r3, [fp, #-8]
     9bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     9c4:	str	r2, [r3, #216]	; 0xd8
     9c8:	ldr	r3, [fp, #-8]
     9cc:	b	aa8 <set_opt+0x8c4>
     9d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9d4:	mov	r2, #1
     9d8:	str	r2, [r3, #156]	; 0x9c
     9dc:	mov	r3, #0
     9e0:	b	aa8 <set_opt+0x8c4>
     9e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9e8:	mov	r2, #1
     9ec:	str	r2, [r3, #160]	; 0xa0
     9f0:	mov	r3, #0
     9f4:	b	aa8 <set_opt+0x8c4>
     9f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     9fc:	mov	r2, #1
     a00:	str	r2, [r3, #144]	; 0x90
     a04:	mov	r3, #0
     a08:	b	aa8 <set_opt+0x8c4>
     a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a10:	mov	r2, #1
     a14:	str	r2, [r3, #172]	; 0xac
     a18:	mov	r3, #0
     a1c:	b	aa8 <set_opt+0x8c4>
     a20:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a24:	mov	r2, #1
     a28:	str	r2, [r3, #112]	; 0x70
     a2c:	mov	r3, #0
     a30:	b	aa8 <set_opt+0x8c4>
     a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a38:	mov	r2, #1
     a3c:	str	r2, [r3, #152]	; 0x98
     a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a44:	mov	r2, #1
     a48:	str	r2, [r3, #156]	; 0x9c
     a4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a50:	mov	r2, #1
     a54:	str	r2, [r3, #160]	; 0xa0
     a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a5c:	mov	r2, #1
     a60:	str	r2, [r3, #144]	; 0x90
     a64:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a68:	mov	r2, #1
     a6c:	str	r2, [r3, #148]	; 0x94
     a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a74:	mov	r2, #1
     a78:	str	r2, [r3, #172]	; 0xac
     a7c:	mov	r3, #0
     a80:	b	aa8 <set_opt+0x8c4>
     a84:	ldr	r3, [pc, #52]	; ac0 <set_opt+0x8dc>
     a88:	ldr	r0, [r3]
     a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     a90:	ldrb	r3, [r3]
     a94:	mov	r2, r3
     a98:	ldr	r1, [pc, #148]	; b34 <set_opt+0x950>
     a9c:	bl	0 <fprintf>
     aa0:	mvn	r0, #0
     aa4:	bl	0 <exit>
     aa8:	mov	r0, r3
     aac:	sub	sp, fp, #4
     ab0:	pop	{fp, pc}
     ab4:	.word	0x00001298
     ab8:	.word	0x00000000
     abc:	.word	0x000012a0
	...
     ac8:	.word	0x00000038
     acc:	.word	0x0000003c
     ad0:	.word	0x00000044
     ad4:	.word	0x000012ac
     ad8:	.word	0x000012b4
     adc:	.word	0x000012bc
     ae0:	.word	0x000012cc
     ae4:	.word	0x000012dc
     ae8:	.word	0x000012e4
     aec:	.word	0x000012f8
     af0:	.word	0x0000136c
     af4:	.word	0x0000139c
     af8:	.word	0x000013ac
     afc:	.word	0x000013d8
     b00:	.word	0x000013e4
     b04:	.word	0x00001408
     b08:	.word	0x00001414
     b0c:	.word	0x0000143c
     b10:	.word	0x00001448
     b14:	.word	0x0000146c
     b18:	.word	0x0000147c
     b1c:	.word	0x000014a8
     b20:	.word	0x000014b0
     b24:	.word	0x000014d0
     b28:	.word	0x000014e8
     b2c:	.word	0x00001508
     b30:	.word	0x00001530
     b34:	.word	0x00001550

00000b38 <get_opt>:
     b38:	push	{fp, lr}
     b3c:	add	fp, sp, #4
     b40:	sub	sp, sp, #16
     b44:	str	r0, [fp, #-8]
     b48:	str	r1, [fp, #-12]
     b4c:	str	r2, [fp, #-16]
     b50:	ldr	r3, [fp, #-12]
     b54:	add	r3, r3, #1
     b58:	ldrb	r3, [r3]
     b5c:	cmp	r3, #45	; 0x2d
     b60:	bne	b94 <get_opt+0x5c>
     b64:	ldr	r3, [fp, #-12]
     b68:	add	r3, r3, #1
     b6c:	ldr	r2, [fp, #-16]
     b70:	mov	r1, r3
     b74:	ldr	r0, [fp, #-8]
     b78:	bl	1e4 <set_opt>
     b7c:	mov	r3, r0
     b80:	cmp	r3, #2
     b84:	moveq	r3, #1
     b88:	movne	r3, #0
     b8c:	uxtb	r3, r3
     b90:	b	c34 <get_opt+0xfc>
     b94:	ldr	r3, [fp, #-12]
     b98:	add	r3, r3, #1
     b9c:	str	r3, [fp, #-12]
     ba0:	ldr	r3, [fp, #-12]
     ba4:	ldrb	r3, [r3]
     ba8:	cmp	r3, #0
     bac:	bne	c20 <get_opt+0xe8>
     bb0:	ldr	r3, [pc, #136]	; c40 <get_opt+0x108>
     bb4:	ldr	r3, [r3]
     bb8:	mov	r2, #24
     bbc:	mov	r1, #1
     bc0:	ldr	r0, [pc, #124]	; c44 <get_opt+0x10c>
     bc4:	bl	0 <fwrite>
     bc8:	mvn	r0, #0
     bcc:	bl	0 <exit>
     bd0:	ldr	r2, [fp, #-16]
     bd4:	ldr	r1, [fp, #-12]
     bd8:	ldr	r0, [fp, #-8]
     bdc:	bl	1e4 <set_opt>
     be0:	mov	r3, r0
     be4:	cmp	r3, #1
     be8:	beq	c10 <get_opt+0xd8>
     bec:	cmp	r3, #2
     bf0:	beq	c18 <get_opt+0xe0>
     bf4:	cmp	r3, #0
     bf8:	beq	c00 <get_opt+0xc8>
     bfc:	b	c20 <get_opt+0xe8>
     c00:	ldr	r3, [fp, #-12]
     c04:	add	r3, r3, #1
     c08:	str	r3, [fp, #-12]
     c0c:	b	c20 <get_opt+0xe8>
     c10:	mov	r3, #0
     c14:	b	c34 <get_opt+0xfc>
     c18:	mov	r3, #1
     c1c:	b	c34 <get_opt+0xfc>
     c20:	ldr	r3, [fp, #-12]
     c24:	ldrb	r3, [r3]
     c28:	cmp	r3, #0
     c2c:	bne	bd0 <get_opt+0x98>
     c30:	mov	r3, #0
     c34:	mov	r0, r3
     c38:	sub	sp, fp, #4
     c3c:	pop	{fp, pc}
     c40:	.word	0x00000000
     c44:	.word	0x00001568

00000c48 <parse_opts>:
     c48:	push	{fp, lr}
     c4c:	add	fp, sp, #4
     c50:	sub	sp, sp, #32
     c54:	str	r0, [fp, #-24]	; 0xffffffe8
     c58:	str	r1, [fp, #-28]	; 0xffffffe4
     c5c:	str	r2, [fp, #-32]	; 0xffffffe0
     c60:	mov	r3, #1
     c64:	str	r3, [fp, #-8]
     c68:	b	d48 <parse_opts+0x100>
     c6c:	ldr	r3, [fp, #-8]
     c70:	lsl	r3, r3, #2
     c74:	ldr	r2, [fp, #-28]	; 0xffffffe4
     c78:	add	r3, r2, r3
     c7c:	ldr	r3, [r3]
     c80:	ldrb	r3, [r3]
     c84:	cmp	r3, #45	; 0x2d
     c88:	bne	d00 <parse_opts+0xb8>
     c8c:	ldr	r3, [fp, #-8]
     c90:	lsl	r3, r3, #2
     c94:	ldr	r2, [fp, #-28]	; 0xffffffe4
     c98:	add	r3, r2, r3
     c9c:	ldr	r3, [r3]
     ca0:	str	r3, [fp, #-12]
     ca4:	ldr	r3, [fp, #-8]
     ca8:	add	r2, r3, #1
     cac:	ldr	r3, [fp, #-24]	; 0xffffffe8
     cb0:	cmp	r2, r3
     cb4:	bge	cd4 <parse_opts+0x8c>
     cb8:	ldr	r3, [fp, #-8]
     cbc:	add	r3, r3, #1
     cc0:	lsl	r3, r3, #2
     cc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
     cc8:	add	r3, r2, r3
     ccc:	ldr	r3, [r3]
     cd0:	b	cd8 <parse_opts+0x90>
     cd4:	mov	r3, #0
     cd8:	str	r3, [fp, #-16]
     cdc:	ldr	r2, [fp, #-16]
     ce0:	ldr	r1, [fp, #-12]
     ce4:	ldr	r0, [fp, #-32]	; 0xffffffe0
     ce8:	bl	b38 <get_opt>
     cec:	mov	r2, r0
     cf0:	ldr	r3, [fp, #-8]
     cf4:	add	r3, r3, r2
     cf8:	str	r3, [fp, #-8]
     cfc:	b	d3c <parse_opts+0xf4>
     d00:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d04:	ldr	r2, [r3, #204]	; 0xcc
     d08:	ldr	r3, [fp, #-32]	; 0xffffffe0
     d0c:	ldr	r3, [r3, #212]	; 0xd4
     d10:	add	r0, r3, #1
     d14:	ldr	r1, [fp, #-32]	; 0xffffffe0
     d18:	str	r0, [r1, #212]	; 0xd4
     d1c:	lsl	r3, r3, #2
     d20:	add	r3, r2, r3
     d24:	ldr	r2, [fp, #-8]
     d28:	lsl	r2, r2, #2
     d2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
     d30:	add	r2, r1, r2
     d34:	ldr	r2, [r2]
     d38:	str	r2, [r3]
     d3c:	ldr	r3, [fp, #-8]
     d40:	add	r3, r3, #1
     d44:	str	r3, [fp, #-8]
     d48:	ldr	r2, [fp, #-8]
     d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     d50:	cmp	r2, r3
     d54:	blt	c6c <parse_opts+0x24>
     d58:	nop			; (mov r0, r0)
     d5c:	sub	sp, fp, #4
     d60:	pop	{fp, pc}

00000d64 <main>:
     d64:	push	{fp, lr}
     d68:	add	fp, sp, #4
     d6c:	sub	sp, sp, #256	; 0x100
     d70:	str	r0, [fp, #-256]	; 0xffffff00
     d74:	str	r1, [fp, #-260]	; 0xfffffefc
     d78:	mov	r3, #0
     d7c:	str	r3, [fp, #-8]
     d80:	mov	r3, #0
     d84:	str	r3, [fp, #-8]
     d88:	mov	r3, #0
     d8c:	str	r3, [fp, #-16]
     d90:	ldr	r3, [fp, #-256]	; 0xffffff00
     d94:	cmp	r3, #1
     d98:	bgt	db4 <main+0x50>
     d9c:	ldr	r3, [pc, #1108]	; 11f8 <main+0x494>
     da0:	ldr	r3, [r3]
     da4:	mov	r0, r3
     da8:	bl	0 <usage>
     dac:	mvn	r0, #0
     db0:	bl	0 <exit>
     db4:	sub	r3, fp, #252	; 0xfc
     db8:	mov	r0, r3
     dbc:	bl	0 <flatcc_init_options>
     dc0:	ldr	r3, [fp, #-256]	; 0xffffff00
     dc4:	lsl	r3, r3, #2
     dc8:	mov	r0, r3
     dcc:	bl	0 <malloc>
     dd0:	mov	r3, r0
     dd4:	str	r3, [fp, #-52]	; 0xffffffcc
     dd8:	ldr	r3, [fp, #-52]	; 0xffffffcc
     ddc:	cmp	r3, #0
     de0:	bne	e04 <main+0xa0>
     de4:	ldr	r3, [pc, #1036]	; 11f8 <main+0x494>
     de8:	ldr	r3, [r3]
     dec:	mov	r2, #26
     df0:	mov	r1, #1
     df4:	ldr	r0, [pc, #1024]	; 11fc <main+0x498>
     df8:	bl	0 <fwrite>
     dfc:	mvn	r0, #0
     e00:	bl	0 <exit>
     e04:	ldr	r3, [fp, #-256]	; 0xffffff00
     e08:	lsl	r3, r3, #2
     e0c:	mov	r0, r3
     e10:	bl	0 <malloc>
     e14:	mov	r3, r0
     e18:	str	r3, [fp, #-48]	; 0xffffffd0
     e1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
     e20:	cmp	r3, #0
     e24:	bne	e54 <main+0xf0>
     e28:	ldr	r3, [pc, #968]	; 11f8 <main+0x494>
     e2c:	ldr	r3, [r3]
     e30:	mov	r2, #26
     e34:	mov	r1, #1
     e38:	ldr	r0, [pc, #956]	; 11fc <main+0x498>
     e3c:	bl	0 <fwrite>
     e40:	ldr	r3, [fp, #-52]	; 0xffffffcc
     e44:	mov	r0, r3
     e48:	bl	0 <free>
     e4c:	mvn	r0, #0
     e50:	bl	0 <exit>
     e54:	sub	r3, fp, #252	; 0xfc
     e58:	mov	r2, r3
     e5c:	ldr	r1, [fp, #-260]	; 0xfffffefc
     e60:	ldr	r0, [fp, #-256]	; 0xffffff00
     e64:	bl	c48 <parse_opts>
     e68:	ldr	r3, [fp, #-96]	; 0xffffffa0
     e6c:	cmp	r3, #0
     e70:	beq	e88 <main+0x124>
     e74:	ldr	r3, [fp, #-108]	; 0xffffff94
     e78:	cmp	r3, #0
     e7c:	beq	e88 <main+0x124>
     e80:	mov	r3, #1
     e84:	b	e8c <main+0x128>
     e88:	mov	r3, #0
     e8c:	str	r3, [fp, #-104]	; 0xffffff98
     e90:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e94:	cmp	r3, #0
     e98:	bne	f38 <main+0x1d4>
     e9c:	ldr	r3, [fp, #-108]	; 0xffffff94
     ea0:	cmp	r3, #0
     ea4:	beq	eb4 <main+0x150>
     ea8:	ldr	r3, [fp, #-72]	; 0xffffffb8
     eac:	cmp	r3, #0
     eb0:	beq	ed0 <main+0x16c>
     eb4:	ldr	r3, [pc, #828]	; 11f8 <main+0x494>
     eb8:	ldr	r3, [r3]
     ebc:	mov	r2, #17
     ec0:	mov	r1, #1
     ec4:	ldr	r0, [pc, #820]	; 1200 <main+0x49c>
     ec8:	bl	0 <fwrite>
     ecc:	b	1188 <main+0x424>
     ed0:	sub	r0, fp, #252	; 0xfc
     ed4:	mov	r3, #0
     ed8:	mov	r2, #0
     edc:	mov	r1, #0
     ee0:	bl	0 <flatcc_create_context>
     ee4:	str	r0, [fp, #-8]
     ee8:	ldr	r3, [fp, #-8]
     eec:	cmp	r3, #0
     ef0:	bne	f10 <main+0x1ac>
     ef4:	ldr	r3, [pc, #764]	; 11f8 <main+0x494>
     ef8:	ldr	r3, [r3]
     efc:	mov	r2, #49	; 0x31
     f00:	mov	r1, #1
     f04:	ldr	r0, [pc, #760]	; 1204 <main+0x4a0>
     f08:	bl	0 <fwrite>
     f0c:	b	1188 <main+0x424>
     f10:	ldr	r0, [fp, #-8]
     f14:	bl	0 <flatcc_generate_files>
     f18:	mov	r3, r0
     f1c:	cmp	r3, #0
     f20:	bne	1174 <main+0x410>
     f24:	ldr	r0, [fp, #-8]
     f28:	bl	0 <flatcc_destroy_context>
     f2c:	mov	r3, #0
     f30:	str	r3, [fp, #-8]
     f34:	b	1190 <main+0x42c>
     f38:	ldr	r3, [fp, #-100]	; 0xffffff9c
     f3c:	cmp	r3, #0
     f40:	bne	f8c <main+0x228>
     f44:	ldr	r3, [fp, #-96]	; 0xffffffa0
     f48:	cmp	r3, #0
     f4c:	bne	f8c <main+0x228>
     f50:	ldr	r3, [fp, #-92]	; 0xffffffa4
     f54:	cmp	r3, #0
     f58:	bne	f8c <main+0x228>
     f5c:	ldr	r3, [fp, #-108]	; 0xffffff94
     f60:	cmp	r3, #0
     f64:	bne	f8c <main+0x228>
     f68:	ldr	r3, [fp, #-104]	; 0xffffff98
     f6c:	cmp	r3, #0
     f70:	bne	f8c <main+0x228>
     f74:	ldr	r3, [fp, #-88]	; 0xffffffa8
     f78:	cmp	r3, #0
     f7c:	bne	f8c <main+0x228>
     f80:	ldr	r3, [fp, #-84]	; 0xffffffac
     f84:	cmp	r3, #0
     f88:	beq	f94 <main+0x230>
     f8c:	mov	r3, #1
     f90:	b	f98 <main+0x234>
     f94:	mov	r3, #0
     f98:	str	r3, [fp, #-24]	; 0xffffffe8
     f9c:	ldr	r3, [fp, #-72]	; 0xffffffb8
     fa0:	cmp	r3, #0
     fa4:	bne	fd4 <main+0x270>
     fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fac:	cmp	r3, #0
     fb0:	beq	fcc <main+0x268>
     fb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
     fb8:	cmp	r3, #0
     fbc:	bne	fcc <main+0x268>
     fc0:	ldr	r3, [fp, #-92]	; 0xffffffa4
     fc4:	cmp	r3, #0
     fc8:	beq	fd4 <main+0x270>
     fcc:	mov	r3, #1
     fd0:	str	r3, [fp, #-100]	; 0xffffff9c
     fd4:	ldr	r3, [fp, #-72]	; 0xffffffb8
     fd8:	cmp	r3, #0
     fdc:	beq	103c <main+0x2d8>
     fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fe4:	cmp	r3, #0
     fe8:	beq	103c <main+0x2d8>
     fec:	ldr	r3, [fp, #-144]	; 0xffffff70
     ff0:	cmp	r3, #0
     ff4:	beq	1014 <main+0x2b0>
     ff8:	ldr	r3, [pc, #504]	; 11f8 <main+0x494>
     ffc:	ldr	r3, [r3]
    1000:	mov	r2, #57	; 0x39
    1004:	mov	r1, #1
    1008:	ldr	r0, [pc, #504]	; 1208 <main+0x4a4>
    100c:	bl	0 <fwrite>
    1010:	b	1188 <main+0x424>
    1014:	ldr	r3, [fp, #-128]	; 0xffffff80
    1018:	cmp	r3, #0
    101c:	beq	103c <main+0x2d8>
    1020:	ldr	r3, [pc, #464]	; 11f8 <main+0x494>
    1024:	ldr	r3, [r3]
    1028:	mov	r2, #58	; 0x3a
    102c:	mov	r1, #1
    1030:	ldr	r0, [pc, #468]	; 120c <main+0x4a8>
    1034:	bl	0 <fwrite>
    1038:	b	1188 <main+0x424>
    103c:	ldr	r3, [fp, #-132]	; 0xffffff7c
    1040:	cmp	r3, #0
    1044:	beq	1070 <main+0x30c>
    1048:	ldr	r3, [fp, #-136]	; 0xffffff78
    104c:	cmp	r3, #0
    1050:	bne	1070 <main+0x30c>
    1054:	ldr	r3, [pc, #412]	; 11f8 <main+0x494>
    1058:	ldr	r3, [r3]
    105c:	mov	r2, #44	; 0x2c
    1060:	mov	r1, #1
    1064:	ldr	r0, [pc, #420]	; 1210 <main+0x4ac>
    1068:	bl	0 <fwrite>
    106c:	b	1188 <main+0x424>
    1070:	ldr	r3, [fp, #-144]	; 0xffffff70
    1074:	cmp	r3, #0
    1078:	beq	10a4 <main+0x340>
    107c:	ldr	r3, [fp, #-128]	; 0xffffff80
    1080:	cmp	r3, #0
    1084:	beq	10a4 <main+0x340>
    1088:	ldr	r3, [pc, #360]	; 11f8 <main+0x494>
    108c:	ldr	r3, [r3]
    1090:	mov	r2, #38	; 0x26
    1094:	mov	r1, #1
    1098:	ldr	r0, [pc, #372]	; 1214 <main+0x4b0>
    109c:	bl	0 <fwrite>
    10a0:	b	1188 <main+0x424>
    10a4:	mov	r3, #0
    10a8:	str	r3, [fp, #-12]
    10ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
    10b0:	str	r3, [fp, #-20]	; 0xffffffec
    10b4:	b	1160 <main+0x3fc>
    10b8:	ldr	r3, [fp, #-20]	; 0xffffffec
    10bc:	ldr	r1, [r3]
    10c0:	sub	r0, fp, #252	; 0xfc
    10c4:	mov	r3, #0
    10c8:	mov	r2, #0
    10cc:	bl	0 <flatcc_create_context>
    10d0:	str	r0, [fp, #-8]
    10d4:	ldr	r3, [fp, #-8]
    10d8:	cmp	r3, #0
    10dc:	bne	10fc <main+0x398>
    10e0:	ldr	r3, [pc, #272]	; 11f8 <main+0x494>
    10e4:	ldr	r3, [r3]
    10e8:	mov	r2, #49	; 0x31
    10ec:	mov	r1, #1
    10f0:	ldr	r0, [pc, #268]	; 1204 <main+0x4a0>
    10f4:	bl	0 <fwrite>
    10f8:	b	1188 <main+0x424>
    10fc:	ldr	r3, [fp, #-20]	; 0xffffffec
    1100:	ldr	r3, [r3]
    1104:	mov	r1, r3
    1108:	ldr	r0, [fp, #-8]
    110c:	bl	0 <flatcc_parse_file>
    1110:	mov	r3, r0
    1114:	cmp	r3, #0
    1118:	bne	117c <main+0x418>
    111c:	ldr	r0, [fp, #-8]
    1120:	bl	0 <flatcc_generate_files>
    1124:	mov	r3, r0
    1128:	cmp	r3, #0
    112c:	bne	1184 <main+0x420>
    1130:	ldr	r0, [fp, #-8]
    1134:	bl	0 <flatcc_destroy_context>
    1138:	mov	r3, #0
    113c:	str	r3, [fp, #-8]
    1140:	mov	r3, #1
    1144:	str	r3, [fp, #-124]	; 0xffffff84
    1148:	ldr	r3, [fp, #-12]
    114c:	add	r3, r3, #1
    1150:	str	r3, [fp, #-12]
    1154:	ldr	r3, [fp, #-20]	; 0xffffffec
    1158:	add	r3, r3, #4
    115c:	str	r3, [fp, #-20]	; 0xffffffec
    1160:	ldr	r2, [fp, #-40]	; 0xffffffd8
    1164:	ldr	r3, [fp, #-12]
    1168:	cmp	r2, r3
    116c:	bgt	10b8 <main+0x354>
    1170:	b	1190 <main+0x42c>
    1174:	nop			; (mov r0, r0)
    1178:	b	1188 <main+0x424>
    117c:	nop			; (mov r0, r0)
    1180:	b	1188 <main+0x424>
    1184:	nop			; (mov r0, r0)
    1188:	mvn	r3, #0
    118c:	str	r3, [fp, #-16]
    1190:	ldr	r3, [fp, #-8]
    1194:	cmp	r3, #0
    1198:	beq	11ac <main+0x448>
    119c:	ldr	r0, [fp, #-8]
    11a0:	bl	0 <flatcc_destroy_context>
    11a4:	mov	r3, #0
    11a8:	str	r3, [fp, #-8]
    11ac:	ldr	r3, [fp, #-16]
    11b0:	cmp	r3, #0
    11b4:	beq	11d0 <main+0x46c>
    11b8:	ldr	r3, [pc, #56]	; 11f8 <main+0x494>
    11bc:	ldr	r3, [r3]
    11c0:	mov	r2, #14
    11c4:	mov	r1, #1
    11c8:	ldr	r0, [pc, #72]	; 1218 <main+0x4b4>
    11cc:	bl	0 <fwrite>
    11d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
    11d4:	mov	r0, r3
    11d8:	bl	0 <free>
    11dc:	ldr	r3, [fp, #-48]	; 0xffffffd0
    11e0:	mov	r0, r3
    11e4:	bl	0 <free>
    11e8:	ldr	r3, [fp, #-16]
    11ec:	mov	r0, r3
    11f0:	sub	sp, fp, #4
    11f4:	pop	{fp, pc}
    11f8:	.word	0x00000000
    11fc:	.word	0x00001584
    1200:	.word	0x000015a0
    1204:	.word	0x000015b4
    1208:	.word	0x000015e8
    120c:	.word	0x00001624
    1210:	.word	0x00001660
    1214:	.word	0x00001690
    1218:	.word	0x000016b8
