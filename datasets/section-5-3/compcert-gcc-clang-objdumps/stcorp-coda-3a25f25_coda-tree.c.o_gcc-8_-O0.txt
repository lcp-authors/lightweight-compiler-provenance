
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/coda_static.dir/libcoda/coda-tree.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_tree_node_new>:
       0:	str	fp, [sp, #-8]!
       4:	str	lr, [sp, #4]
       8:	add	fp, sp, #4
       c:	sub	sp, sp, #24
      10:	str	r0, [fp, #-16]
      14:	mov	r0, #28
      18:	bl	0 <malloc>
      1c:	mov	r3, r0
      20:	str	r3, [fp, #-8]
      24:	ldr	r3, [fp, #-8]
      28:	cmp	r3, #0
      2c:	bne	5c <coda_tree_node_new+0x5c>
      30:	mov	r3, #53	; 0x35
      34:	str	r3, [sp]
      38:	movw	r3, #0
      3c:	movt	r3, #0
      40:	mov	r2, #28
      44:	movw	r1, #0
      48:	movt	r1, #0
      4c:	mvn	r0, #0
      50:	bl	0 <coda_set_error>
      54:	mov	r3, #0
      58:	b	b4 <coda_tree_node_new+0xb4>
      5c:	ldr	r3, [fp, #-8]
      60:	ldr	r2, [fp, #-16]
      64:	str	r2, [r3]
      68:	ldr	r3, [fp, #-8]
      6c:	mov	r2, #0
      70:	str	r2, [r3, #4]
      74:	ldr	r3, [fp, #-8]
      78:	mov	r2, #0
      7c:	str	r2, [r3, #8]
      80:	ldr	r3, [fp, #-8]
      84:	mov	r2, #0
      88:	str	r2, [r3, #12]
      8c:	ldr	r3, [fp, #-8]
      90:	mov	r2, #0
      94:	str	r2, [r3, #16]
      98:	ldr	r3, [fp, #-8]
      9c:	mov	r2, #0
      a0:	str	r2, [r3, #20]
      a4:	ldr	r3, [fp, #-8]
      a8:	mov	r2, #0
      ac:	str	r2, [r3, #24]
      b0:	ldr	r3, [fp, #-8]
      b4:	mov	r0, r3
      b8:	sub	sp, fp, #4
      bc:	ldr	fp, [sp]
      c0:	add	sp, sp, #4
      c4:	pop	{pc}		; (ldr pc, [sp], #4)

000000c8 <coda_tree_node_delete>:
      c8:	str	fp, [sp, #-8]!
      cc:	str	lr, [sp, #4]
      d0:	add	fp, sp, #4
      d4:	sub	sp, sp, #16
      d8:	str	r0, [fp, #-16]
      dc:	str	r1, [fp, #-20]	; 0xffffffec
      e0:	ldr	r3, [fp, #-16]
      e4:	ldr	r3, [r3, #12]
      e8:	cmp	r3, #0
      ec:	beq	104 <coda_tree_node_delete+0x3c>
      f0:	ldr	r3, [fp, #-16]
      f4:	ldr	r3, [r3, #12]
      f8:	ldr	r1, [fp, #-20]	; 0xffffffec
      fc:	mov	r0, r3
     100:	bl	c8 <coda_tree_node_delete>
     104:	ldr	r3, [fp, #-16]
     108:	ldr	r3, [r3, #20]
     10c:	cmp	r3, #0
     110:	beq	124 <coda_tree_node_delete+0x5c>
     114:	ldr	r3, [fp, #-16]
     118:	ldr	r3, [r3, #20]
     11c:	mov	r0, r3
     120:	bl	0 <free>
     124:	ldr	r3, [fp, #-16]
     128:	ldr	r3, [r3, #24]
     12c:	cmp	r3, #0
     130:	beq	1b4 <coda_tree_node_delete+0xec>
     134:	mov	r3, #0
     138:	str	r3, [fp, #-8]
     13c:	b	190 <coda_tree_node_delete+0xc8>
     140:	ldr	r3, [fp, #-16]
     144:	ldr	r2, [r3, #24]
     148:	ldr	r3, [fp, #-8]
     14c:	lsl	r3, r3, #2
     150:	add	r3, r2, r3
     154:	ldr	r3, [r3]
     158:	cmp	r3, #0
     15c:	beq	184 <coda_tree_node_delete+0xbc>
     160:	ldr	r3, [fp, #-16]
     164:	ldr	r2, [r3, #24]
     168:	ldr	r3, [fp, #-8]
     16c:	lsl	r3, r3, #2
     170:	add	r3, r2, r3
     174:	ldr	r3, [r3]
     178:	ldr	r1, [fp, #-20]	; 0xffffffec
     17c:	mov	r0, r3
     180:	bl	c8 <coda_tree_node_delete>
     184:	ldr	r3, [fp, #-8]
     188:	add	r3, r3, #1
     18c:	str	r3, [fp, #-8]
     190:	ldr	r3, [fp, #-16]
     194:	ldr	r3, [r3, #16]
     198:	ldr	r2, [fp, #-8]
     19c:	cmp	r2, r3
     1a0:	blt	140 <coda_tree_node_delete+0x78>
     1a4:	ldr	r3, [fp, #-16]
     1a8:	ldr	r3, [r3, #24]
     1ac:	mov	r0, r3
     1b0:	bl	0 <free>
     1b4:	ldr	r3, [fp, #-16]
     1b8:	ldr	r3, [r3, #8]
     1bc:	cmp	r3, #0
     1c0:	beq	250 <coda_tree_node_delete+0x188>
     1c4:	ldr	r3, [fp, #-20]	; 0xffffffec
     1c8:	cmp	r3, #0
     1cc:	beq	240 <coda_tree_node_delete+0x178>
     1d0:	mov	r3, #0
     1d4:	str	r3, [fp, #-8]
     1d8:	b	22c <coda_tree_node_delete+0x164>
     1dc:	ldr	r3, [fp, #-16]
     1e0:	ldr	r2, [r3, #8]
     1e4:	ldr	r3, [fp, #-8]
     1e8:	lsl	r3, r3, #2
     1ec:	add	r3, r2, r3
     1f0:	ldr	r3, [r3]
     1f4:	cmp	r3, #0
     1f8:	beq	220 <coda_tree_node_delete+0x158>
     1fc:	ldr	r3, [fp, #-16]
     200:	ldr	r2, [r3, #8]
     204:	ldr	r3, [fp, #-8]
     208:	lsl	r3, r3, #2
     20c:	add	r3, r2, r3
     210:	ldr	r2, [r3]
     214:	ldr	r3, [fp, #-20]	; 0xffffffec
     218:	mov	r0, r2
     21c:	blx	r3
     220:	ldr	r3, [fp, #-8]
     224:	add	r3, r3, #1
     228:	str	r3, [fp, #-8]
     22c:	ldr	r3, [fp, #-16]
     230:	ldr	r3, [r3, #4]
     234:	ldr	r2, [fp, #-8]
     238:	cmp	r2, r3
     23c:	blt	1dc <coda_tree_node_delete+0x114>
     240:	ldr	r3, [fp, #-16]
     244:	ldr	r3, [r3, #8]
     248:	mov	r0, r3
     24c:	bl	0 <free>
     250:	ldr	r0, [fp, #-16]
     254:	bl	0 <free>
     258:	nop	{0}
     25c:	sub	sp, fp, #4
     260:	ldr	fp, [sp]
     264:	add	sp, sp, #4
     268:	pop	{pc}		; (ldr pc, [sp], #4)

0000026c <tree_node_add_item>:
     26c:	str	fp, [sp, #-8]!
     270:	str	lr, [sp, #4]
     274:	add	fp, sp, #4
     278:	sub	sp, sp, #24
     27c:	str	r0, [fp, #-16]
     280:	str	r1, [fp, #-20]	; 0xffffffec
     284:	ldr	r3, [fp, #-16]
     288:	ldr	r2, [r3, #8]
     28c:	ldr	r3, [fp, #-16]
     290:	ldr	r3, [r3, #4]
     294:	add	r3, r3, #1
     298:	lsl	r3, r3, #2
     29c:	mov	r1, r3
     2a0:	mov	r0, r2
     2a4:	bl	0 <realloc>
     2a8:	str	r0, [fp, #-8]
     2ac:	ldr	r3, [fp, #-8]
     2b0:	cmp	r3, #0
     2b4:	bne	2f0 <tree_node_add_item+0x84>
     2b8:	ldr	r3, [fp, #-16]
     2bc:	ldr	r3, [r3, #4]
     2c0:	add	r3, r3, #1
     2c4:	lsl	r2, r3, #2
     2c8:	mov	r3, #119	; 0x77
     2cc:	str	r3, [sp]
     2d0:	movw	r3, #0
     2d4:	movt	r3, #0
     2d8:	movw	r1, #0
     2dc:	movt	r1, #0
     2e0:	mvn	r0, #0
     2e4:	bl	0 <coda_set_error>
     2e8:	mvn	r3, #0
     2ec:	b	334 <tree_node_add_item+0xc8>
     2f0:	ldr	r3, [fp, #-16]
     2f4:	ldr	r2, [fp, #-8]
     2f8:	str	r2, [r3, #8]
     2fc:	ldr	r3, [fp, #-16]
     300:	ldr	r2, [r3, #8]
     304:	ldr	r3, [fp, #-16]
     308:	ldr	r3, [r3, #4]
     30c:	lsl	r3, r3, #2
     310:	add	r3, r2, r3
     314:	ldr	r2, [fp, #-20]	; 0xffffffec
     318:	str	r2, [r3]
     31c:	ldr	r3, [fp, #-16]
     320:	ldr	r3, [r3, #4]
     324:	add	r2, r3, #1
     328:	ldr	r3, [fp, #-16]
     32c:	str	r2, [r3, #4]
     330:	mov	r3, #0
     334:	mov	r0, r3
     338:	sub	sp, fp, #4
     33c:	ldr	fp, [sp]
     340:	add	sp, sp, #4
     344:	pop	{pc}		; (ldr pc, [sp], #4)

00000348 <tree_node_get_node_for_all>:
     348:	str	fp, [sp, #-8]!
     34c:	str	lr, [sp, #4]
     350:	add	fp, sp, #4
     354:	sub	sp, sp, #32
     358:	str	r0, [fp, #-24]	; 0xffffffe8
     35c:	str	r1, [fp, #-28]	; 0xffffffe4
     360:	str	r2, [fp, #-32]	; 0xffffffe0
     364:	ldr	r3, [fp, #-24]	; 0xffffffe8
     368:	ldr	r3, [r3, #12]
     36c:	cmp	r3, #0
     370:	bne	464 <tree_node_get_node_for_all+0x11c>
     374:	ldr	r3, [fp, #-32]	; 0xffffffe0
     378:	cmp	r3, #0
     37c:	beq	464 <tree_node_get_node_for_all+0x11c>
     380:	ldr	r3, [fp, #-24]	; 0xffffffe8
     384:	ldr	r3, [r3]
     388:	str	r3, [fp, #-8]
     38c:	sub	r3, fp, #12
     390:	mov	r1, r3
     394:	ldr	r0, [fp, #-8]
     398:	bl	0 <coda_type_get_class>
     39c:	ldr	r3, [fp, #-12]
     3a0:	cmp	r3, #6
     3a4:	bne	3e4 <tree_node_get_node_for_all+0x9c>
     3a8:	sub	r3, fp, #16
     3ac:	mov	r1, r3
     3b0:	ldr	r0, [fp, #-8]
     3b4:	bl	0 <coda_type_get_special_base_type>
     3b8:	mov	r3, r0
     3bc:	cmp	r3, #0
     3c0:	beq	3cc <tree_node_get_node_for_all+0x84>
     3c4:	mvn	r3, #0
     3c8:	b	478 <tree_node_get_node_for_all+0x130>
     3cc:	ldr	r3, [fp, #-16]
     3d0:	str	r3, [fp, #-8]
     3d4:	sub	r3, fp, #12
     3d8:	mov	r1, r3
     3dc:	ldr	r0, [fp, #-8]
     3e0:	bl	0 <coda_type_get_class>
     3e4:	ldr	r3, [fp, #-12]
     3e8:	cmp	r3, #1
     3ec:	beq	410 <tree_node_get_node_for_all+0xc8>
     3f0:	movw	r3, #0
     3f4:	movt	r3, #0
     3f8:	mov	r2, #149	; 0x95
     3fc:	movw	r1, #0
     400:	movt	r1, #0
     404:	movw	r0, #0
     408:	movt	r0, #0
     40c:	bl	0 <__assert_fail>
     410:	sub	r3, fp, #16
     414:	mov	r1, r3
     418:	ldr	r0, [fp, #-8]
     41c:	bl	0 <coda_type_get_array_base_type>
     420:	mov	r3, r0
     424:	cmp	r3, #0
     428:	beq	434 <tree_node_get_node_for_all+0xec>
     42c:	mvn	r3, #0
     430:	b	478 <tree_node_get_node_for_all+0x130>
     434:	ldr	r3, [fp, #-16]
     438:	mov	r0, r3
     43c:	bl	0 <coda_tree_node_new>
     440:	mov	r2, r0
     444:	ldr	r3, [fp, #-24]	; 0xffffffe8
     448:	str	r2, [r3, #12]
     44c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     450:	ldr	r3, [r3, #12]
     454:	cmp	r3, #0
     458:	bne	464 <tree_node_get_node_for_all+0x11c>
     45c:	mvn	r3, #0
     460:	b	478 <tree_node_get_node_for_all+0x130>
     464:	ldr	r3, [fp, #-24]	; 0xffffffe8
     468:	ldr	r2, [r3, #12]
     46c:	ldr	r3, [fp, #-28]	; 0xffffffe4
     470:	str	r2, [r3]
     474:	mov	r3, #0
     478:	mov	r0, r3
     47c:	sub	sp, fp, #4
     480:	ldr	fp, [sp]
     484:	add	sp, sp, #4
     488:	pop	{pc}		; (ldr pc, [sp], #4)

0000048c <tree_node_get_node_for_index>:
     48c:	str	fp, [sp, #-8]!
     490:	str	lr, [sp, #4]
     494:	add	fp, sp, #4
     498:	sub	sp, sp, #72	; 0x48
     49c:	str	r0, [fp, #-56]	; 0xffffffc8
     4a0:	str	r1, [fp, #-60]	; 0xffffffc4
     4a4:	str	r2, [fp, #-64]	; 0xffffffc0
     4a8:	str	r3, [fp, #-68]	; 0xffffffbc
     4ac:	mov	r3, #0
     4b0:	str	r3, [fp, #-8]
     4b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4b8:	ldr	r3, [r3, #16]
     4bc:	sub	r3, r3, #1
     4c0:	str	r3, [fp, #-12]
     4c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4c8:	ldr	r3, [r3, #16]
     4cc:	cmp	r3, #0
     4d0:	ble	560 <tree_node_get_node_for_index+0xd4>
     4d4:	b	550 <tree_node_get_node_for_index+0xc4>
     4d8:	ldr	r2, [fp, #-8]
     4dc:	ldr	r3, [fp, #-12]
     4e0:	add	r3, r2, r3
     4e4:	lsr	r2, r3, #31
     4e8:	add	r3, r2, r3
     4ec:	asr	r3, r3, #1
     4f0:	str	r3, [fp, #-28]	; 0xffffffe4
     4f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     4f8:	ldr	r2, [r3, #20]
     4fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
     500:	lsl	r3, r3, #2
     504:	add	r3, r2, r3
     508:	ldr	r3, [r3]
     50c:	ldr	r2, [fp, #-60]	; 0xffffffc4
     510:	cmp	r2, r3
     514:	bgt	520 <tree_node_get_node_for_index+0x94>
     518:	ldr	r3, [fp, #-28]	; 0xffffffe4
     51c:	str	r3, [fp, #-12]
     520:	ldr	r3, [fp, #-56]	; 0xffffffc8
     524:	ldr	r2, [r3, #20]
     528:	ldr	r3, [fp, #-28]	; 0xffffffe4
     52c:	lsl	r3, r3, #2
     530:	add	r3, r2, r3
     534:	ldr	r3, [r3]
     538:	ldr	r2, [fp, #-60]	; 0xffffffc4
     53c:	cmp	r2, r3
     540:	ble	550 <tree_node_get_node_for_index+0xc4>
     544:	ldr	r3, [fp, #-28]	; 0xffffffe4
     548:	add	r3, r3, #1
     54c:	str	r3, [fp, #-8]
     550:	ldr	r2, [fp, #-12]
     554:	ldr	r3, [fp, #-8]
     558:	cmp	r2, r3
     55c:	bne	4d8 <tree_node_get_node_for_index+0x4c>
     560:	ldr	r3, [fp, #-56]	; 0xffffffc8
     564:	ldr	r3, [r3, #16]
     568:	cmp	r3, #0
     56c:	ble	5b8 <tree_node_get_node_for_index+0x12c>
     570:	ldr	r3, [fp, #-56]	; 0xffffffc8
     574:	ldr	r2, [r3, #20]
     578:	ldr	r3, [fp, #-12]
     57c:	lsl	r3, r3, #2
     580:	add	r3, r2, r3
     584:	ldr	r3, [r3]
     588:	ldr	r2, [fp, #-60]	; 0xffffffc4
     58c:	cmp	r2, r3
     590:	bne	5b8 <tree_node_get_node_for_index+0x12c>
     594:	ldr	r3, [fp, #-56]	; 0xffffffc8
     598:	ldr	r2, [r3, #24]
     59c:	ldr	r3, [fp, #-12]
     5a0:	lsl	r3, r3, #2
     5a4:	add	r3, r2, r3
     5a8:	ldr	r2, [r3]
     5ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
     5b0:	str	r2, [r3]
     5b4:	b	904 <tree_node_get_node_for_index+0x478>
     5b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
     5bc:	cmp	r3, #0
     5c0:	beq	8f8 <tree_node_get_node_for_index+0x46c>
     5c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     5c8:	ldr	r3, [r3]
     5cc:	str	r3, [fp, #-20]	; 0xffffffec
     5d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     5d4:	ldr	r2, [r3, #20]
     5d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     5dc:	ldr	r3, [r3, #16]
     5e0:	add	r3, r3, #1
     5e4:	lsl	r3, r3, #2
     5e8:	mov	r1, r3
     5ec:	mov	r0, r2
     5f0:	bl	0 <realloc>
     5f4:	str	r0, [fp, #-32]	; 0xffffffe0
     5f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
     5fc:	cmp	r3, #0
     600:	bne	63c <tree_node_get_node_for_index+0x1b0>
     604:	ldr	r3, [fp, #-56]	; 0xffffffc8
     608:	ldr	r3, [r3, #16]
     60c:	add	r3, r3, #1
     610:	lsl	r2, r3, #2
     614:	mov	r3, #204	; 0xcc
     618:	str	r3, [sp]
     61c:	movw	r3, #0
     620:	movt	r3, #0
     624:	movw	r1, #0
     628:	movt	r1, #0
     62c:	mvn	r0, #0
     630:	bl	0 <coda_set_error>
     634:	mvn	r3, #0
     638:	b	908 <tree_node_get_node_for_index+0x47c>
     63c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     640:	ldr	r2, [fp, #-32]	; 0xffffffe0
     644:	str	r2, [r3, #20]
     648:	ldr	r3, [fp, #-56]	; 0xffffffc8
     64c:	ldr	r2, [r3, #24]
     650:	ldr	r3, [fp, #-56]	; 0xffffffc8
     654:	ldr	r3, [r3, #16]
     658:	add	r3, r3, #1
     65c:	lsl	r3, r3, #2
     660:	mov	r1, r3
     664:	mov	r0, r2
     668:	bl	0 <realloc>
     66c:	str	r0, [fp, #-36]	; 0xffffffdc
     670:	ldr	r3, [fp, #-36]	; 0xffffffdc
     674:	cmp	r3, #0
     678:	bne	6b4 <tree_node_get_node_for_index+0x228>
     67c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     680:	ldr	r3, [r3, #16]
     684:	add	r3, r3, #1
     688:	lsl	r2, r3, #2
     68c:	mov	r3, #212	; 0xd4
     690:	str	r3, [sp]
     694:	movw	r3, #0
     698:	movt	r3, #0
     69c:	movw	r1, #0
     6a0:	movt	r1, #0
     6a4:	mvn	r0, #0
     6a8:	bl	0 <coda_set_error>
     6ac:	mvn	r3, #0
     6b0:	b	908 <tree_node_get_node_for_index+0x47c>
     6b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
     6b8:	ldr	r2, [fp, #-36]	; 0xffffffdc
     6bc:	str	r2, [r3, #24]
     6c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
     6c4:	cmn	r3, #1
     6c8:	bne	6f0 <tree_node_get_node_for_index+0x264>
     6cc:	sub	r3, fp, #48	; 0x30
     6d0:	mov	r1, r3
     6d4:	ldr	r0, [fp, #-20]	; 0xffffffec
     6d8:	bl	0 <coda_type_get_attributes>
     6dc:	mov	r3, r0
     6e0:	cmp	r3, #0
     6e4:	beq	7a0 <tree_node_get_node_for_index+0x314>
     6e8:	mvn	r3, #0
     6ec:	b	908 <tree_node_get_node_for_index+0x47c>
     6f0:	sub	r3, fp, #52	; 0x34
     6f4:	mov	r1, r3
     6f8:	ldr	r0, [fp, #-20]	; 0xffffffec
     6fc:	bl	0 <coda_type_get_class>
     700:	ldr	r3, [fp, #-52]	; 0xffffffcc
     704:	cmp	r3, #6
     708:	bne	748 <tree_node_get_node_for_index+0x2bc>
     70c:	sub	r3, fp, #48	; 0x30
     710:	mov	r1, r3
     714:	ldr	r0, [fp, #-20]	; 0xffffffec
     718:	bl	0 <coda_type_get_special_base_type>
     71c:	mov	r3, r0
     720:	cmp	r3, #0
     724:	beq	730 <tree_node_get_node_for_index+0x2a4>
     728:	mvn	r3, #0
     72c:	b	908 <tree_node_get_node_for_index+0x47c>
     730:	ldr	r3, [fp, #-48]	; 0xffffffd0
     734:	str	r3, [fp, #-20]	; 0xffffffec
     738:	sub	r3, fp, #52	; 0x34
     73c:	mov	r1, r3
     740:	ldr	r0, [fp, #-20]	; 0xffffffec
     744:	bl	0 <coda_type_get_class>
     748:	ldr	r3, [fp, #-52]	; 0xffffffcc
     74c:	cmp	r3, #1
     750:	bne	778 <tree_node_get_node_for_index+0x2ec>
     754:	sub	r3, fp, #48	; 0x30
     758:	mov	r1, r3
     75c:	ldr	r0, [fp, #-20]	; 0xffffffec
     760:	bl	0 <coda_type_get_array_base_type>
     764:	mov	r3, r0
     768:	cmp	r3, #0
     76c:	beq	7a0 <tree_node_get_node_for_index+0x314>
     770:	mvn	r3, #0
     774:	b	79c <tree_node_get_node_for_index+0x310>
     778:	sub	r3, fp, #48	; 0x30
     77c:	mov	r2, r3
     780:	ldr	r1, [fp, #-60]	; 0xffffffc4
     784:	ldr	r0, [fp, #-20]	; 0xffffffec
     788:	bl	0 <coda_type_get_record_field_type>
     78c:	mov	r3, r0
     790:	cmp	r3, #0
     794:	beq	7a0 <tree_node_get_node_for_index+0x314>
     798:	mvn	r3, #0
     79c:	b	908 <tree_node_get_node_for_index+0x47c>
     7a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
     7a4:	mov	r0, r3
     7a8:	bl	0 <coda_tree_node_new>
     7ac:	str	r0, [fp, #-16]
     7b0:	ldr	r3, [fp, #-16]
     7b4:	cmp	r3, #0
     7b8:	bne	7c4 <tree_node_get_node_for_index+0x338>
     7bc:	mvn	r3, #0
     7c0:	b	908 <tree_node_get_node_for_index+0x47c>
     7c4:	ldr	r3, [fp, #-64]	; 0xffffffc0
     7c8:	ldr	r2, [fp, #-16]
     7cc:	str	r2, [r3]
     7d0:	mov	r3, #0
     7d4:	str	r3, [fp, #-24]	; 0xffffffe8
     7d8:	b	88c <tree_node_get_node_for_index+0x400>
     7dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
     7e0:	ldr	r2, [r3, #20]
     7e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     7e8:	lsl	r3, r3, #2
     7ec:	add	r3, r2, r3
     7f0:	ldr	r3, [r3]
     7f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
     7f8:	cmp	r2, r3
     7fc:	bge	880 <tree_node_get_node_for_index+0x3f4>
     800:	ldr	r3, [fp, #-56]	; 0xffffffc8
     804:	ldr	r2, [r3, #20]
     808:	ldr	r3, [fp, #-24]	; 0xffffffe8
     80c:	lsl	r3, r3, #2
     810:	add	r3, r2, r3
     814:	ldr	r3, [r3]
     818:	str	r3, [fp, #-40]	; 0xffffffd8
     81c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     820:	ldr	r2, [r3, #24]
     824:	ldr	r3, [fp, #-24]	; 0xffffffe8
     828:	lsl	r3, r3, #2
     82c:	add	r3, r2, r3
     830:	ldr	r3, [r3]
     834:	str	r3, [fp, #-44]	; 0xffffffd4
     838:	ldr	r3, [fp, #-56]	; 0xffffffc8
     83c:	ldr	r2, [r3, #20]
     840:	ldr	r3, [fp, #-24]	; 0xffffffe8
     844:	lsl	r3, r3, #2
     848:	add	r3, r2, r3
     84c:	ldr	r2, [fp, #-60]	; 0xffffffc4
     850:	str	r2, [r3]
     854:	ldr	r3, [fp, #-56]	; 0xffffffc8
     858:	ldr	r2, [r3, #24]
     85c:	ldr	r3, [fp, #-24]	; 0xffffffe8
     860:	lsl	r3, r3, #2
     864:	add	r3, r2, r3
     868:	ldr	r2, [fp, #-16]
     86c:	str	r2, [r3]
     870:	ldr	r3, [fp, #-40]	; 0xffffffd8
     874:	str	r3, [fp, #-60]	; 0xffffffc4
     878:	ldr	r3, [fp, #-44]	; 0xffffffd4
     87c:	str	r3, [fp, #-16]
     880:	ldr	r3, [fp, #-24]	; 0xffffffe8
     884:	add	r3, r3, #1
     888:	str	r3, [fp, #-24]	; 0xffffffe8
     88c:	ldr	r3, [fp, #-56]	; 0xffffffc8
     890:	ldr	r3, [r3, #16]
     894:	ldr	r2, [fp, #-24]	; 0xffffffe8
     898:	cmp	r2, r3
     89c:	blt	7dc <tree_node_get_node_for_index+0x350>
     8a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8a4:	ldr	r2, [r3, #20]
     8a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8ac:	ldr	r3, [r3, #16]
     8b0:	lsl	r3, r3, #2
     8b4:	add	r3, r2, r3
     8b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
     8bc:	str	r2, [r3]
     8c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8c4:	ldr	r2, [r3, #24]
     8c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8cc:	ldr	r3, [r3, #16]
     8d0:	lsl	r3, r3, #2
     8d4:	add	r3, r2, r3
     8d8:	ldr	r2, [fp, #-16]
     8dc:	str	r2, [r3]
     8e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8e4:	ldr	r3, [r3, #16]
     8e8:	add	r2, r3, #1
     8ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
     8f0:	str	r2, [r3, #16]
     8f4:	b	904 <tree_node_get_node_for_index+0x478>
     8f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
     8fc:	mov	r2, #0
     900:	str	r2, [r3]
     904:	mov	r3, #0
     908:	mov	r0, r3
     90c:	sub	sp, fp, #4
     910:	ldr	fp, [sp]
     914:	add	sp, sp, #4
     918:	pop	{pc}		; (ldr pc, [sp], #4)

0000091c <coda_tree_node_add_item_for_path>:
     91c:	str	fp, [sp, #-8]!
     920:	str	lr, [sp, #4]
     924:	add	fp, sp, #4
     928:	sub	sp, sp, #56	; 0x38
     92c:	str	r0, [fp, #-40]	; 0xffffffd8
     930:	str	r1, [fp, #-44]	; 0xffffffd4
     934:	str	r2, [fp, #-48]	; 0xffffffd0
     938:	str	r3, [fp, #-52]	; 0xffffffcc
     93c:	mov	r3, #0
     940:	str	r3, [fp, #-8]
     944:	ldr	r3, [fp, #-8]
     948:	ldr	r2, [fp, #-44]	; 0xffffffd4
     94c:	add	r3, r2, r3
     950:	ldrb	r3, [r3]
     954:	cmp	r3, #47	; 0x2f
     958:	bne	db0 <coda_tree_node_add_item_for_path+0x494>
     95c:	ldr	r3, [fp, #-8]
     960:	add	r3, r3, #1
     964:	ldr	r2, [fp, #-44]	; 0xffffffd4
     968:	add	r3, r2, r3
     96c:	ldrb	r3, [r3]
     970:	cmp	r3, #0
     974:	beq	9cc <coda_tree_node_add_item_for_path+0xb0>
     978:	ldr	r3, [fp, #-8]
     97c:	add	r3, r3, #1
     980:	ldr	r2, [fp, #-44]	; 0xffffffd4
     984:	add	r3, r2, r3
     988:	ldrb	r3, [r3]
     98c:	cmp	r3, #47	; 0x2f
     990:	beq	9cc <coda_tree_node_add_item_for_path+0xb0>
     994:	ldr	r3, [fp, #-8]
     998:	add	r3, r3, #1
     99c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     9a0:	add	r3, r2, r3
     9a4:	ldrb	r3, [r3]
     9a8:	cmp	r3, #91	; 0x5b
     9ac:	beq	9cc <coda_tree_node_add_item_for_path+0xb0>
     9b0:	ldr	r3, [fp, #-8]
     9b4:	add	r3, r3, #1
     9b8:	ldr	r2, [fp, #-44]	; 0xffffffd4
     9bc:	add	r3, r2, r3
     9c0:	ldrb	r3, [r3]
     9c4:	cmp	r3, #64	; 0x40
     9c8:	bne	db0 <coda_tree_node_add_item_for_path+0x494>
     9cc:	ldr	r3, [fp, #-8]
     9d0:	add	r3, r3, #1
     9d4:	str	r3, [fp, #-8]
     9d8:	b	db0 <coda_tree_node_add_item_for_path+0x494>
     9dc:	ldr	r3, [fp, #-8]
     9e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
     9e4:	add	r3, r2, r3
     9e8:	ldrb	r3, [r3]
     9ec:	cmp	r3, #64	; 0x40
     9f0:	bne	a2c <coda_tree_node_add_item_for_path+0x110>
     9f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
     9f8:	sub	r2, fp, #40	; 0x28
     9fc:	mov	r3, #1
     a00:	mvn	r1, #0
     a04:	bl	48c <tree_node_get_node_for_index>
     a08:	mov	r3, r0
     a0c:	cmp	r3, #0
     a10:	beq	a1c <coda_tree_node_add_item_for_path+0x100>
     a14:	mvn	r3, #0
     a18:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     a1c:	ldr	r3, [fp, #-8]
     a20:	add	r3, r3, #1
     a24:	str	r3, [fp, #-8]
     a28:	b	db0 <coda_tree_node_add_item_for_path+0x494>
     a2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
     a30:	ldr	r3, [r3]
     a34:	sub	r2, fp, #24
     a38:	mov	r1, r2
     a3c:	mov	r0, r3
     a40:	bl	0 <coda_type_get_class>
     a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
     a48:	cmp	r3, #6
     a4c:	bne	a90 <coda_tree_node_add_item_for_path+0x174>
     a50:	ldr	r3, [fp, #-40]	; 0xffffffd8
     a54:	ldr	r3, [r3]
     a58:	sub	r2, fp, #32
     a5c:	mov	r1, r2
     a60:	mov	r0, r3
     a64:	bl	0 <coda_type_get_special_base_type>
     a68:	mov	r3, r0
     a6c:	cmp	r3, #0
     a70:	beq	a7c <coda_tree_node_add_item_for_path+0x160>
     a74:	mvn	r3, #0
     a78:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
     a80:	sub	r2, fp, #24
     a84:	mov	r1, r2
     a88:	mov	r0, r3
     a8c:	bl	0 <coda_type_get_class>
     a90:	ldr	r3, [fp, #-8]
     a94:	ldr	r2, [fp, #-44]	; 0xffffffd4
     a98:	add	r3, r2, r3
     a9c:	ldrb	r3, [r3]
     aa0:	cmp	r3, #91	; 0x5b
     aa4:	bne	c54 <coda_tree_node_add_item_for_path+0x338>
     aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     aac:	cmp	r3, #1
     ab0:	beq	ae0 <coda_tree_node_add_item_for_path+0x1c4>
     ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ab8:	mov	r0, r3
     abc:	bl	0 <coda_type_get_class_name>
     ac0:	mov	r3, r0
     ac4:	str	r3, [sp]
     ac8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     acc:	ldr	r2, [fp, #-8]
     ad0:	movw	r1, #0
     ad4:	movt	r1, #0
     ad8:	mvn	r0, #99	; 0x63
     adc:	bl	0 <coda_set_error>
     ae0:	ldr	r3, [fp, #-8]
     ae4:	add	r3, r3, #1
     ae8:	str	r3, [fp, #-8]
     aec:	ldr	r3, [fp, #-8]
     af0:	str	r3, [fp, #-12]
     af4:	b	b04 <coda_tree_node_add_item_for_path+0x1e8>
     af8:	ldr	r3, [fp, #-12]
     afc:	add	r3, r3, #1
     b00:	str	r3, [fp, #-12]
     b04:	ldr	r3, [fp, #-12]
     b08:	ldr	r2, [fp, #-44]	; 0xffffffd4
     b0c:	add	r3, r2, r3
     b10:	ldrb	r3, [r3]
     b14:	cmp	r3, #0
     b18:	beq	b34 <coda_tree_node_add_item_for_path+0x218>
     b1c:	ldr	r3, [fp, #-12]
     b20:	ldr	r2, [fp, #-44]	; 0xffffffd4
     b24:	add	r3, r2, r3
     b28:	ldrb	r3, [r3]
     b2c:	cmp	r3, #93	; 0x5d
     b30:	bne	af8 <coda_tree_node_add_item_for_path+0x1dc>
     b34:	ldr	r3, [fp, #-12]
     b38:	ldr	r2, [fp, #-44]	; 0xffffffd4
     b3c:	add	r3, r2, r3
     b40:	ldrb	r3, [r3]
     b44:	cmp	r3, #0
     b48:	bne	b68 <coda_tree_node_add_item_for_path+0x24c>
     b4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     b50:	movw	r1, #0
     b54:	movt	r1, #0
     b58:	mvn	r0, #99	; 0x63
     b5c:	bl	0 <coda_set_error>
     b60:	mvn	r3, #0
     b64:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     b68:	ldr	r2, [fp, #-8]
     b6c:	ldr	r3, [fp, #-12]
     b70:	cmp	r2, r3
     b74:	bne	ba0 <coda_tree_node_add_item_for_path+0x284>
     b78:	ldr	r3, [fp, #-40]	; 0xffffffd8
     b7c:	sub	r1, fp, #40	; 0x28
     b80:	mov	r2, #1
     b84:	mov	r0, r3
     b88:	bl	348 <tree_node_get_node_for_all>
     b8c:	mov	r3, r0
     b90:	cmp	r3, #0
     b94:	beq	c44 <coda_tree_node_add_item_for_path+0x328>
     b98:	mvn	r3, #0
     b9c:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     ba0:	ldr	r3, [fp, #-8]
     ba4:	ldr	r2, [fp, #-44]	; 0xffffffd4
     ba8:	add	r0, r2, r3
     bac:	sub	r3, fp, #36	; 0x24
     bb0:	sub	r2, fp, #28
     bb4:	movw	r1, #0
     bb8:	movt	r1, #0
     bbc:	bl	0 <__isoc99_sscanf>
     bc0:	str	r0, [fp, #-20]	; 0xffffffec
     bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
     bc8:	cmp	r3, #1
     bcc:	bne	be8 <coda_tree_node_add_item_for_path+0x2cc>
     bd0:	ldr	r2, [fp, #-12]
     bd4:	ldr	r3, [fp, #-8]
     bd8:	sub	r2, r2, r3
     bdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
     be0:	cmp	r2, r3
     be4:	beq	c1c <coda_tree_node_add_item_for_path+0x300>
     be8:	ldr	r2, [fp, #-12]
     bec:	ldr	r3, [fp, #-8]
     bf0:	sub	r1, r2, r3
     bf4:	ldr	r3, [fp, #-8]
     bf8:	ldr	r2, [fp, #-44]	; 0xffffffd4
     bfc:	add	r3, r2, r3
     c00:	mov	r2, r1
     c04:	movw	r1, #0
     c08:	movt	r1, #0
     c0c:	mvn	r0, #99	; 0x63
     c10:	bl	0 <coda_set_error>
     c14:	mvn	r3, #0
     c18:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     c1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
     c20:	ldr	r1, [fp, #-28]	; 0xffffffe4
     c24:	sub	r2, fp, #40	; 0x28
     c28:	mov	r3, #1
     c2c:	bl	48c <tree_node_get_node_for_index>
     c30:	mov	r3, r0
     c34:	cmp	r3, #0
     c38:	beq	c44 <coda_tree_node_add_item_for_path+0x328>
     c3c:	mvn	r3, #0
     c40:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     c44:	ldr	r3, [fp, #-12]
     c48:	add	r3, r3, #1
     c4c:	str	r3, [fp, #-8]
     c50:	b	db0 <coda_tree_node_add_item_for_path+0x494>
     c54:	ldr	r3, [fp, #-8]
     c58:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c5c:	add	r3, r2, r3
     c60:	ldrb	r3, [r3]
     c64:	cmp	r3, #47	; 0x2f
     c68:	beq	c88 <coda_tree_node_add_item_for_path+0x36c>
     c6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
     c70:	movw	r1, #0
     c74:	movt	r1, #0
     c78:	mvn	r0, #99	; 0x63
     c7c:	bl	0 <coda_set_error>
     c80:	mvn	r3, #0
     c84:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c8c:	cmp	r3, #0
     c90:	beq	cc0 <coda_tree_node_add_item_for_path+0x3a4>
     c94:	ldr	r3, [fp, #-24]	; 0xffffffe8
     c98:	mov	r0, r3
     c9c:	bl	0 <coda_type_get_class_name>
     ca0:	mov	r3, r0
     ca4:	str	r3, [sp]
     ca8:	ldr	r3, [fp, #-44]	; 0xffffffd4
     cac:	ldr	r2, [fp, #-8]
     cb0:	movw	r1, #0
     cb4:	movt	r1, #0
     cb8:	mvn	r0, #99	; 0x63
     cbc:	bl	0 <coda_set_error>
     cc0:	ldr	r3, [fp, #-8]
     cc4:	add	r3, r3, #1
     cc8:	str	r3, [fp, #-8]
     ccc:	ldr	r3, [fp, #-8]
     cd0:	str	r3, [fp, #-16]
     cd4:	b	ce4 <coda_tree_node_add_item_for_path+0x3c8>
     cd8:	ldr	r3, [fp, #-16]
     cdc:	add	r3, r3, #1
     ce0:	str	r3, [fp, #-16]
     ce4:	ldr	r3, [fp, #-16]
     ce8:	ldr	r2, [fp, #-44]	; 0xffffffd4
     cec:	add	r3, r2, r3
     cf0:	ldrb	r3, [r3]
     cf4:	cmp	r3, #0
     cf8:	beq	d44 <coda_tree_node_add_item_for_path+0x428>
     cfc:	ldr	r3, [fp, #-16]
     d00:	ldr	r2, [fp, #-44]	; 0xffffffd4
     d04:	add	r3, r2, r3
     d08:	ldrb	r3, [r3]
     d0c:	cmp	r3, #47	; 0x2f
     d10:	beq	d44 <coda_tree_node_add_item_for_path+0x428>
     d14:	ldr	r3, [fp, #-16]
     d18:	ldr	r2, [fp, #-44]	; 0xffffffd4
     d1c:	add	r3, r2, r3
     d20:	ldrb	r3, [r3]
     d24:	cmp	r3, #91	; 0x5b
     d28:	beq	d44 <coda_tree_node_add_item_for_path+0x428>
     d2c:	ldr	r3, [fp, #-16]
     d30:	ldr	r2, [fp, #-44]	; 0xffffffd4
     d34:	add	r3, r2, r3
     d38:	ldrb	r3, [r3]
     d3c:	cmp	r3, #64	; 0x40
     d40:	bne	cd8 <coda_tree_node_add_item_for_path+0x3bc>
     d44:	ldr	r3, [fp, #-40]	; 0xffffffd8
     d48:	ldr	r0, [r3]
     d4c:	ldr	r3, [fp, #-8]
     d50:	ldr	r2, [fp, #-44]	; 0xffffffd4
     d54:	add	r1, r2, r3
     d58:	ldr	r2, [fp, #-16]
     d5c:	ldr	r3, [fp, #-8]
     d60:	sub	r2, r2, r3
     d64:	sub	r3, fp, #28
     d68:	bl	0 <coda_type_get_record_field_index_from_name_n>
     d6c:	mov	r3, r0
     d70:	cmp	r3, #0
     d74:	beq	d80 <coda_tree_node_add_item_for_path+0x464>
     d78:	mvn	r3, #0
     d7c:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     d80:	ldr	r0, [fp, #-40]	; 0xffffffd8
     d84:	ldr	r1, [fp, #-28]	; 0xffffffe4
     d88:	sub	r2, fp, #40	; 0x28
     d8c:	mov	r3, #1
     d90:	bl	48c <tree_node_get_node_for_index>
     d94:	mov	r3, r0
     d98:	cmp	r3, #0
     d9c:	beq	da8 <coda_tree_node_add_item_for_path+0x48c>
     da0:	mvn	r3, #0
     da4:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     da8:	ldr	r3, [fp, #-16]
     dac:	str	r3, [fp, #-8]
     db0:	ldr	r3, [fp, #-8]
     db4:	ldr	r2, [fp, #-44]	; 0xffffffd4
     db8:	add	r3, r2, r3
     dbc:	ldrb	r3, [r3]
     dc0:	cmp	r3, #0
     dc4:	bne	9dc <coda_tree_node_add_item_for_path+0xc0>
     dc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
     dcc:	ldr	r3, [r3]
     dd0:	sub	r2, fp, #24
     dd4:	mov	r1, r2
     dd8:	mov	r0, r3
     ddc:	bl	0 <coda_type_get_class>
     de0:	ldr	r3, [fp, #-52]	; 0xffffffcc
     de4:	cmp	r3, #0
     de8:	beq	e20 <coda_tree_node_add_item_for_path+0x504>
     dec:	ldr	r3, [fp, #-24]	; 0xffffffe8
     df0:	cmp	r3, #1
     df4:	beq	e04 <coda_tree_node_add_item_for_path+0x4e8>
     df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     dfc:	cmp	r3, #0
     e00:	bne	e20 <coda_tree_node_add_item_for_path+0x504>
     e04:	ldr	r2, [fp, #-44]	; 0xffffffd4
     e08:	movw	r1, #0
     e0c:	movt	r1, #0
     e10:	mvn	r0, #99	; 0x63
     e14:	bl	0 <coda_set_error>
     e18:	mvn	r3, #0
     e1c:	b	e34 <coda_tree_node_add_item_for_path+0x518>
     e20:	ldr	r3, [fp, #-40]	; 0xffffffd8
     e24:	ldr	r1, [fp, #-48]	; 0xffffffd0
     e28:	mov	r0, r3
     e2c:	bl	26c <tree_node_add_item>
     e30:	mov	r3, r0
     e34:	mov	r0, r3
     e38:	sub	sp, fp, #4
     e3c:	ldr	fp, [sp]
     e40:	add	sp, sp, #4
     e44:	pop	{pc}		; (ldr pc, [sp], #4)

00000e48 <get_item_for_cursor>:
     e48:	str	fp, [sp, #-8]!
     e4c:	str	lr, [sp, #4]
     e50:	add	fp, sp, #4
     e54:	sub	sp, sp, #32
     e58:	str	r0, [fp, #-24]	; 0xffffffe8
     e5c:	str	r1, [fp, #-28]	; 0xffffffe4
     e60:	str	r2, [fp, #-32]	; 0xffffffe0
     e64:	str	r3, [fp, #-36]	; 0xffffffdc
     e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
     e6c:	cmp	r3, #0
     e70:	bne	e88 <get_item_for_cursor+0x40>
     e74:	ldr	r3, [fp, #-36]	; 0xffffffdc
     e78:	mov	r2, #0
     e7c:	str	r2, [r3]
     e80:	mov	r3, #0
     e84:	b	108c <get_item_for_cursor+0x244>
     e88:	ldr	r3, [fp, #-32]	; 0xffffffe0
     e8c:	ldr	r3, [r3, #4]
     e90:	sub	r3, r3, #1
     e94:	ldr	r2, [fp, #-28]	; 0xffffffe4
     e98:	cmp	r2, r3
     e9c:	bge	103c <get_item_for_cursor+0x1f4>
     ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ea4:	ldr	r3, [r3, #16]
     ea8:	cmp	r3, #0
     eac:	ble	fe8 <get_item_for_cursor+0x1a0>
     eb0:	mov	r3, #0
     eb4:	str	r3, [fp, #-8]
     eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ebc:	ldr	r3, [r3, #16]
     ec0:	sub	r3, r3, #1
     ec4:	str	r3, [fp, #-12]
     ec8:	ldr	r3, [fp, #-28]	; 0xffffffe4
     ecc:	add	r3, r3, #1
     ed0:	ldr	r2, [fp, #-32]	; 0xffffffe0
     ed4:	lsl	r3, r3, #4
     ed8:	add	r3, r2, r3
     edc:	ldr	r3, [r3, #12]
     ee0:	str	r3, [fp, #-16]
     ee4:	b	f60 <get_item_for_cursor+0x118>
     ee8:	ldr	r2, [fp, #-8]
     eec:	ldr	r3, [fp, #-12]
     ef0:	add	r3, r2, r3
     ef4:	lsr	r2, r3, #31
     ef8:	add	r3, r2, r3
     efc:	asr	r3, r3, #1
     f00:	str	r3, [fp, #-20]	; 0xffffffec
     f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f08:	ldr	r2, [r3, #20]
     f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
     f10:	lsl	r3, r3, #2
     f14:	add	r3, r2, r3
     f18:	ldr	r3, [r3]
     f1c:	ldr	r2, [fp, #-16]
     f20:	cmp	r2, r3
     f24:	bgt	f30 <get_item_for_cursor+0xe8>
     f28:	ldr	r3, [fp, #-20]	; 0xffffffec
     f2c:	str	r3, [fp, #-12]
     f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f34:	ldr	r2, [r3, #20]
     f38:	ldr	r3, [fp, #-20]	; 0xffffffec
     f3c:	lsl	r3, r3, #2
     f40:	add	r3, r2, r3
     f44:	ldr	r3, [r3]
     f48:	ldr	r2, [fp, #-16]
     f4c:	cmp	r2, r3
     f50:	ble	f60 <get_item_for_cursor+0x118>
     f54:	ldr	r3, [fp, #-20]	; 0xffffffec
     f58:	add	r3, r3, #1
     f5c:	str	r3, [fp, #-8]
     f60:	ldr	r2, [fp, #-12]
     f64:	ldr	r3, [fp, #-8]
     f68:	cmp	r2, r3
     f6c:	bne	ee8 <get_item_for_cursor+0xa0>
     f70:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f74:	ldr	r2, [r3, #20]
     f78:	ldr	r3, [fp, #-12]
     f7c:	lsl	r3, r3, #2
     f80:	add	r3, r2, r3
     f84:	ldr	r3, [r3]
     f88:	ldr	r2, [fp, #-16]
     f8c:	cmp	r2, r3
     f90:	bne	fe8 <get_item_for_cursor+0x1a0>
     f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
     f98:	ldr	r2, [r3, #24]
     f9c:	ldr	r3, [fp, #-12]
     fa0:	lsl	r3, r3, #2
     fa4:	add	r3, r2, r3
     fa8:	ldr	r0, [r3]
     fac:	ldr	r3, [fp, #-28]	; 0xffffffe4
     fb0:	add	r1, r3, #1
     fb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     fb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
     fbc:	bl	e48 <get_item_for_cursor>
     fc0:	mov	r3, r0
     fc4:	cmp	r3, #0
     fc8:	beq	fd4 <get_item_for_cursor+0x18c>
     fcc:	mvn	r3, #0
     fd0:	b	108c <get_item_for_cursor+0x244>
     fd4:	ldr	r3, [fp, #-36]	; 0xffffffdc
     fd8:	cmp	r3, #0
     fdc:	beq	fe8 <get_item_for_cursor+0x1a0>
     fe0:	mov	r3, #0
     fe4:	b	108c <get_item_for_cursor+0x244>
     fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     fec:	ldr	r3, [r3, #12]
     ff0:	cmp	r3, #0
     ff4:	beq	107c <get_item_for_cursor+0x234>
     ff8:	ldr	r3, [fp, #-24]	; 0xffffffe8
     ffc:	ldr	r0, [r3, #12]
    1000:	ldr	r3, [fp, #-28]	; 0xffffffe4
    1004:	add	r1, r3, #1
    1008:	ldr	r3, [fp, #-36]	; 0xffffffdc
    100c:	ldr	r2, [fp, #-32]	; 0xffffffe0
    1010:	bl	e48 <get_item_for_cursor>
    1014:	mov	r3, r0
    1018:	cmp	r3, #0
    101c:	beq	1028 <get_item_for_cursor+0x1e0>
    1020:	mvn	r3, #0
    1024:	b	108c <get_item_for_cursor+0x244>
    1028:	ldr	r3, [fp, #-36]	; 0xffffffdc
    102c:	cmp	r3, #0
    1030:	beq	107c <get_item_for_cursor+0x234>
    1034:	mov	r3, #0
    1038:	b	108c <get_item_for_cursor+0x244>
    103c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1040:	ldr	r3, [r3, #4]
    1044:	cmp	r3, #0
    1048:	ble	107c <get_item_for_cursor+0x234>
    104c:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1050:	ldr	r2, [r3, #8]
    1054:	ldr	r3, [fp, #-24]	; 0xffffffe8
    1058:	ldr	r3, [r3, #4]
    105c:	sub	r3, r3, #-1073741823	; 0xc0000001
    1060:	lsl	r3, r3, #2
    1064:	add	r3, r2, r3
    1068:	ldr	r2, [r3]
    106c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1070:	str	r2, [r3]
    1074:	mov	r3, #0
    1078:	b	108c <get_item_for_cursor+0x244>
    107c:	ldr	r3, [fp, #-36]	; 0xffffffdc
    1080:	mov	r2, #0
    1084:	str	r2, [r3]
    1088:	mov	r3, #0
    108c:	mov	r0, r3
    1090:	sub	sp, fp, #4
    1094:	ldr	fp, [sp]
    1098:	add	sp, sp, #4
    109c:	pop	{pc}		; (ldr pc, [sp], #4)

000010a0 <coda_tree_node_get_item_for_cursor>:
    10a0:	str	fp, [sp, #-8]!
    10a4:	str	lr, [sp, #4]
    10a8:	add	fp, sp, #4
    10ac:	sub	sp, sp, #16
    10b0:	str	r0, [fp, #-8]
    10b4:	str	r1, [fp, #-12]
    10b8:	str	r2, [fp, #-16]
    10bc:	ldr	r3, [fp, #-16]
    10c0:	ldr	r2, [fp, #-12]
    10c4:	mov	r1, #0
    10c8:	ldr	r0, [fp, #-8]
    10cc:	bl	e48 <get_item_for_cursor>
    10d0:	mov	r3, r0
    10d4:	mov	r0, r3
    10d8:	sub	sp, fp, #4
    10dc:	ldr	fp, [sp]
    10e0:	add	sp, sp, #4
    10e4:	pop	{pc}		; (ldr pc, [sp], #4)
