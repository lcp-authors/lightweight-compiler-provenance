
../compcert-repos/stcorp-coda-3a25f25/CMakeFiles/codadd.dir/tools/codadd/codadd-xmlschema.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <generate_xmlschema>:
   0:	push	{fp, lr}
   4:	mov	fp, sp
   8:	sub	sp, sp, #120	; 0x78
   c:	str	r0, [fp, #-4]
  10:	str	r1, [fp, #-8]
  14:	str	r2, [fp, #-12]
  18:	str	r3, [fp, #-16]
  1c:	movw	r0, #0
  20:	movt	r0, #0
  24:	ldr	r0, [r0]
  28:	str	r0, [fp, #-20]	; 0xffffffec
  2c:	ldr	r0, [fp, #-8]
  30:	bl	0 <coda_data_dictionary_get_product_class>
  34:	str	r0, [fp, #-24]	; 0xffffffe8
  38:	ldr	r0, [fp, #-24]	; 0xffffffe8
  3c:	movw	r1, #0
  40:	cmp	r0, r1
  44:	bne	a0 <generate_xmlschema+0xa0>
  48:	movw	r0, #0
  4c:	movt	r0, #0
  50:	ldr	r0, [r0]
  54:	ldr	r1, [pc, #848]	; 3ac <generate_xmlschema+0x3ac>
  58:	ldr	r1, [pc, r1]
  5c:	str	r0, [fp, #-40]	; 0xffffffd8
  60:	str	r1, [fp, #-44]	; 0xffffffd4
  64:	bl	0 <__aeabi_read_tp>
  68:	ldr	r1, [fp, #-44]	; 0xffffffd4
  6c:	ldr	r0, [r0, r1]
  70:	bl	0 <coda_errno_to_string>
  74:	ldr	r1, [fp, #-40]	; 0xffffffd8
  78:	str	r0, [fp, #-48]	; 0xffffffd0
  7c:	mov	r0, r1
  80:	movw	r1, #0
  84:	movt	r1, #0
  88:	ldr	r2, [fp, #-48]	; 0xffffffd0
  8c:	bl	0 <fprintf>
  90:	movw	r1, #1
  94:	str	r0, [fp, #-52]	; 0xffffffcc
  98:	mov	r0, r1
  9c:	bl	0 <exit>
  a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
  a4:	ldr	r1, [fp, #-12]
  a8:	bl	0 <coda_product_class_get_product_type>
  ac:	str	r0, [fp, #-28]	; 0xffffffe4
  b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
  b4:	movw	r1, #0
  b8:	cmp	r0, r1
  bc:	bne	118 <generate_xmlschema+0x118>
  c0:	movw	r0, #0
  c4:	movt	r0, #0
  c8:	ldr	r0, [r0]
  cc:	ldr	r1, [pc, #724]	; 3a8 <generate_xmlschema+0x3a8>
  d0:	ldr	r1, [pc, r1]
  d4:	str	r0, [fp, #-56]	; 0xffffffc8
  d8:	str	r1, [sp, #60]	; 0x3c
  dc:	bl	0 <__aeabi_read_tp>
  e0:	ldr	r1, [sp, #60]	; 0x3c
  e4:	ldr	r0, [r0, r1]
  e8:	bl	0 <coda_errno_to_string>
  ec:	ldr	r1, [fp, #-56]	; 0xffffffc8
  f0:	str	r0, [sp, #56]	; 0x38
  f4:	mov	r0, r1
  f8:	movw	r1, #0
  fc:	movt	r1, #0
 100:	ldr	r2, [sp, #56]	; 0x38
 104:	bl	0 <fprintf>
 108:	movw	r1, #1
 10c:	str	r0, [sp, #52]	; 0x34
 110:	mov	r0, r1
 114:	bl	0 <exit>
 118:	ldr	r0, [fp, #-28]	; 0xffffffe4
 11c:	ldr	r1, [fp, #-16]
 120:	bl	0 <coda_product_type_get_product_definition_by_version>
 124:	str	r0, [fp, #-32]	; 0xffffffe0
 128:	ldr	r0, [fp, #-32]	; 0xffffffe0
 12c:	movw	r1, #0
 130:	cmp	r0, r1
 134:	bne	190 <generate_xmlschema+0x190>
 138:	movw	r0, #0
 13c:	movt	r0, #0
 140:	ldr	r0, [r0]
 144:	ldr	r1, [pc, #600]	; 3a4 <generate_xmlschema+0x3a4>
 148:	ldr	r1, [pc, r1]
 14c:	str	r0, [sp, #48]	; 0x30
 150:	str	r1, [sp, #44]	; 0x2c
 154:	bl	0 <__aeabi_read_tp>
 158:	ldr	r1, [sp, #44]	; 0x2c
 15c:	ldr	r0, [r0, r1]
 160:	bl	0 <coda_errno_to_string>
 164:	ldr	r1, [sp, #48]	; 0x30
 168:	str	r0, [sp, #40]	; 0x28
 16c:	mov	r0, r1
 170:	movw	r1, #0
 174:	movt	r1, #0
 178:	ldr	r2, [sp, #40]	; 0x28
 17c:	bl	0 <fprintf>
 180:	movw	r1, #1
 184:	str	r0, [sp, #36]	; 0x24
 188:	mov	r0, r1
 18c:	bl	0 <exit>
 190:	ldr	r0, [fp, #-32]	; 0xffffffe0
 194:	ldr	r0, [r0]
 198:	cmp	r0, #2
 19c:	beq	1c8 <generate_xmlschema+0x1c8>
 1a0:	movw	r0, #0
 1a4:	movt	r0, #0
 1a8:	ldr	r0, [r0]
 1ac:	movw	r1, #0
 1b0:	movt	r1, #0
 1b4:	bl	0 <fprintf>
 1b8:	movw	r1, #1
 1bc:	str	r0, [sp, #32]
 1c0:	mov	r0, r1
 1c4:	bl	0 <exit>
 1c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
 1cc:	ldr	r0, [r0, #28]
 1d0:	movw	r1, #0
 1d4:	cmp	r0, r1
 1d8:	bne	204 <generate_xmlschema+0x204>
 1dc:	movw	r0, #0
 1e0:	movt	r0, #0
 1e4:	ldr	r0, [r0]
 1e8:	movw	r1, #0
 1ec:	movt	r1, #0
 1f0:	bl	0 <fprintf>
 1f4:	movw	r1, #1
 1f8:	str	r0, [sp, #28]
 1fc:	mov	r0, r1
 200:	bl	0 <exit>
 204:	ldr	r0, [fp, #-4]
 208:	movw	r1, #0
 20c:	cmp	r0, r1
 210:	beq	268 <generate_xmlschema+0x268>
 214:	ldr	r0, [fp, #-4]
 218:	movw	r1, #0
 21c:	movt	r1, #0
 220:	bl	0 <fopen>
 224:	str	r0, [fp, #-20]	; 0xffffffec
 228:	ldr	r0, [fp, #-20]	; 0xffffffec
 22c:	movw	r1, #0
 230:	cmp	r0, r1
 234:	bne	264 <generate_xmlschema+0x264>
 238:	movw	r0, #0
 23c:	movt	r0, #0
 240:	ldr	r0, [r0]
 244:	ldr	r2, [fp, #-4]
 248:	movw	r1, #0
 24c:	movt	r1, #0
 250:	bl	0 <fprintf>
 254:	movw	r1, #1
 258:	str	r0, [sp, #24]
 25c:	mov	r0, r1
 260:	bl	0 <exit>
 264:	b	268 <generate_xmlschema+0x268>
 268:	ldr	r0, [fp, #-32]	; 0xffffffe0
 26c:	ldr	r0, [r0, #28]
 270:	ldr	r0, [r0, #8]
 274:	cmp	r0, #0
 278:	bne	280 <generate_xmlschema+0x280>
 27c:	b	2a0 <generate_xmlschema+0x2a0>
 280:	movw	r0, #0
 284:	movt	r0, #0
 288:	movw	r1, #0
 28c:	movt	r1, #0
 290:	movw	r2, #229	; 0xe5
 294:	movw	r3, #0
 298:	movt	r3, #0
 29c:	bl	0 <__assert_fail>
 2a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
 2a4:	ldr	r0, [r0, #28]
 2a8:	str	r0, [fp, #-36]	; 0xffffffdc
 2ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
 2b0:	ldr	r0, [r0, #48]	; 0x30
 2b4:	cmp	r0, #1
 2b8:	bne	2c0 <generate_xmlschema+0x2c0>
 2bc:	b	2e0 <generate_xmlschema+0x2e0>
 2c0:	movw	r0, #0
 2c4:	movt	r0, #0
 2c8:	movw	r1, #0
 2cc:	movt	r1, #0
 2d0:	movw	r2, #231	; 0xe7
 2d4:	movw	r3, #0
 2d8:	movt	r3, #0
 2dc:	bl	0 <__assert_fail>
 2e0:	ldr	r0, [fp, #-20]	; 0xffffffec
 2e4:	movw	r1, #0
 2e8:	movt	r1, #0
 2ec:	bl	0 <fprintf>
 2f0:	ldr	r1, [fp, #-20]	; 0xffffffec
 2f4:	str	r0, [sp, #20]
 2f8:	mov	r0, r1
 2fc:	movw	r1, #0
 300:	movt	r1, #0
 304:	bl	0 <fprintf>
 308:	ldr	r1, [fp, #-20]	; 0xffffffec
 30c:	ldr	lr, [fp, #-36]	; 0xffffffdc
 310:	ldr	lr, [lr, #52]	; 0x34
 314:	ldr	lr, [lr]
 318:	ldr	r2, [lr, #4]
 31c:	str	r0, [sp, #16]
 320:	mov	r0, r1
 324:	movw	r1, #0
 328:	movt	r1, #0
 32c:	bl	0 <fprintf>
 330:	ldr	r1, [fp, #-20]	; 0xffffffec
 334:	ldr	r2, [fp, #-36]	; 0xffffffdc
 338:	ldr	r2, [r2, #52]	; 0x34
 33c:	ldr	r2, [r2]
 340:	ldr	r2, [r2, #8]
 344:	str	r0, [sp, #12]
 348:	mov	r0, r1
 34c:	mov	r1, r2
 350:	bl	3b0 <print_xml_element>
 354:	ldr	r0, [fp, #-20]	; 0xffffffec
 358:	movw	r1, #0
 35c:	movt	r1, #0
 360:	bl	0 <fprintf>
 364:	ldr	r1, [fp, #-20]	; 0xffffffec
 368:	str	r0, [sp, #8]
 36c:	mov	r0, r1
 370:	movw	r1, #0
 374:	movt	r1, #0
 378:	bl	0 <fprintf>
 37c:	ldr	r1, [fp, #-4]
 380:	movw	r2, #0
 384:	cmp	r1, r2
 388:	str	r0, [sp, #4]
 38c:	beq	39c <generate_xmlschema+0x39c>
 390:	ldr	r0, [fp, #-20]	; 0xffffffec
 394:	bl	0 <fclose>
 398:	str	r0, [sp]
 39c:	mov	sp, fp
 3a0:	pop	{fp, pc}
 3a4:	.word	0x00000254
 3a8:	.word	0x000002d0
 3ac:	.word	0x0000034c

000003b0 <print_xml_element>:
 3b0:	push	{fp, lr}
 3b4:	mov	fp, sp
 3b8:	sub	sp, sp, #160	; 0xa0
 3bc:	str	r0, [fp, #-4]
 3c0:	str	r1, [fp, #-8]
 3c4:	ldr	r0, [fp, #-8]
 3c8:	sub	r1, fp, #12
 3cc:	bl	0 <coda_type_get_class>
 3d0:	ldr	r1, [fp, #-12]
 3d4:	cmp	r1, #0
 3d8:	str	r0, [fp, #-48]	; 0xffffffd0
 3dc:	bne	3e4 <print_xml_element+0x34>
 3e0:	b	404 <print_xml_element+0x54>
 3e4:	movw	r0, #0
 3e8:	movt	r0, #0
 3ec:	movw	r1, #0
 3f0:	movt	r1, #0
 3f4:	movw	r2, #96	; 0x60
 3f8:	movw	r3, #0
 3fc:	movt	r3, #0
 400:	bl	0 <__assert_fail>
 404:	ldr	r0, [fp, #-4]
 408:	movw	r1, #0
 40c:	movt	r1, #0
 410:	bl	0 <fprintf>
 414:	ldr	r1, [fp, #-8]
 418:	str	r0, [fp, #-52]	; 0xffffffcc
 41c:	mov	r0, r1
 420:	sub	r1, fp, #16
 424:	bl	0 <coda_type_get_num_record_fields>
 428:	movw	r1, #0
 42c:	str	r1, [fp, #-20]	; 0xffffffec
 430:	str	r0, [fp, #-56]	; 0xffffffc8
 434:	ldr	r0, [fp, #-20]	; 0xffffffec
 438:	ldr	r1, [fp, #-16]
 43c:	cmp	r0, r1
 440:	bge	778 <print_xml_element+0x3c8>
 444:	ldr	r0, [fp, #-8]
 448:	ldr	r1, [fp, #-20]	; 0xffffffec
 44c:	sub	r2, fp, #32
 450:	bl	0 <coda_type_get_record_field_real_name>
 454:	ldr	r1, [fp, #-8]
 458:	ldr	r2, [fp, #-20]	; 0xffffffec
 45c:	str	r0, [fp, #-60]	; 0xffffffc4
 460:	mov	r0, r1
 464:	mov	r1, r2
 468:	sub	r2, fp, #28
 46c:	bl	0 <coda_type_get_record_field_type>
 470:	ldr	r1, [fp, #-28]	; 0xffffffe4
 474:	str	r0, [fp, #-64]	; 0xffffffc0
 478:	mov	r0, r1
 47c:	sub	r1, fp, #24
 480:	bl	0 <coda_type_get_class>
 484:	ldr	r1, [fp, #-28]	; 0xffffffe4
 488:	str	r0, [fp, #-68]	; 0xffffffbc
 48c:	mov	r0, r1
 490:	sub	r1, fp, #36	; 0x24
 494:	bl	0 <coda_type_get_format>
 498:	ldr	r1, [fp, #-4]
 49c:	ldr	r2, [fp, #-32]	; 0xffffffe0
 4a0:	str	r0, [fp, #-72]	; 0xffffffb8
 4a4:	mov	r0, r1
 4a8:	movw	r1, #0
 4ac:	movt	r1, #0
 4b0:	bl	0 <fprintf>
 4b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
 4b8:	cmp	r1, #1
 4bc:	str	r0, [fp, #-76]	; 0xffffffb4
 4c0:	bne	520 <print_xml_element+0x170>
 4c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
 4c8:	cmp	r0, #2
 4cc:	bne	520 <print_xml_element+0x170>
 4d0:	ldr	r0, [fp, #-4]
 4d4:	movw	r1, #0
 4d8:	movt	r1, #0
 4dc:	bl	0 <fprintf>
 4e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
 4e4:	str	r0, [sp, #80]	; 0x50
 4e8:	mov	r0, r1
 4ec:	sub	r1, fp, #28
 4f0:	bl	0 <coda_type_get_array_base_type>
 4f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
 4f8:	str	r0, [sp, #76]	; 0x4c
 4fc:	mov	r0, r1
 500:	sub	r1, fp, #24
 504:	bl	0 <coda_type_get_class>
 508:	ldr	r1, [fp, #-28]	; 0xffffffe4
 50c:	str	r0, [sp, #72]	; 0x48
 510:	mov	r0, r1
 514:	sub	r1, fp, #36	; 0x24
 518:	bl	0 <coda_type_get_format>
 51c:	str	r0, [sp, #68]	; 0x44
 520:	ldr	r0, [fp, #-24]	; 0xffffffe8
 524:	cmp	r0, #6
 528:	bne	564 <print_xml_element+0x1b4>
 52c:	ldr	r0, [fp, #-28]	; 0xffffffe4
 530:	sub	r1, fp, #28
 534:	bl	0 <coda_type_get_special_base_type>
 538:	ldr	r1, [fp, #-28]	; 0xffffffe4
 53c:	str	r0, [sp, #64]	; 0x40
 540:	mov	r0, r1
 544:	sub	r1, fp, #24
 548:	bl	0 <coda_type_get_class>
 54c:	ldr	r1, [fp, #-28]	; 0xffffffe4
 550:	str	r0, [sp, #60]	; 0x3c
 554:	mov	r0, r1
 558:	sub	r1, fp, #36	; 0x24
 55c:	bl	0 <coda_type_get_format>
 560:	str	r0, [sp, #56]	; 0x38
 564:	ldr	r0, [fp, #-24]	; 0xffffffe8
 568:	cmp	r0, #0
 56c:	bne	59c <print_xml_element+0x1ec>
 570:	ldr	r0, [fp, #-4]
 574:	movw	r1, #0
 578:	movt	r1, #0
 57c:	bl	0 <fprintf>
 580:	ldr	r1, [fp, #-4]
 584:	ldr	lr, [fp, #-28]	; 0xffffffe4
 588:	str	r0, [sp, #52]	; 0x34
 58c:	mov	r0, r1
 590:	mov	r1, lr
 594:	bl	3b0 <print_xml_element>
 598:	b	754 <print_xml_element+0x3a4>
 59c:	ldr	r0, [fp, #-24]	; 0xffffffe8
 5a0:	sub	r0, r0, #1
 5a4:	cmp	r0, #3
 5a8:	str	r0, [sp, #48]	; 0x30
 5ac:	bhi	640 <print_xml_element+0x290>
 5b0:	add	r0, pc, #8
 5b4:	ldr	r1, [sp, #48]	; 0x30
 5b8:	ldr	r0, [r0, r1, lsl #2]
 5bc:	mov	pc, r0
 5c0:	.word	0x000005d0
 5c4:	.word	0x00000610
 5c8:	.word	0x00000620
 5cc:	.word	0x00000630
 5d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
 5d4:	cmp	r0, #2
 5d8:	beq	5e0 <print_xml_element+0x230>
 5dc:	b	600 <print_xml_element+0x250>
 5e0:	movw	r0, #0
 5e4:	movt	r0, #0
 5e8:	movw	r1, #0
 5ec:	movt	r1, #0
 5f0:	movw	r2, #138	; 0x8a
 5f4:	movw	r3, #0
 5f8:	movt	r3, #0
 5fc:	bl	0 <__assert_fail>
 600:	movw	r0, #0
 604:	movt	r0, #0
 608:	str	r0, [fp, #-40]	; 0xffffffd8
 60c:	b	660 <print_xml_element+0x2b0>
 610:	movw	r0, #0
 614:	movt	r0, #0
 618:	str	r0, [fp, #-40]	; 0xffffffd8
 61c:	b	660 <print_xml_element+0x2b0>
 620:	movw	r0, #0
 624:	movt	r0, #0
 628:	str	r0, [fp, #-40]	; 0xffffffd8
 62c:	b	660 <print_xml_element+0x2b0>
 630:	movw	r0, #0
 634:	movt	r0, #0
 638:	str	r0, [fp, #-40]	; 0xffffffd8
 63c:	b	660 <print_xml_element+0x2b0>
 640:	movw	r0, #0
 644:	movt	r0, #0
 648:	movw	r1, #0
 64c:	movt	r1, #0
 650:	movw	r2, #151	; 0x97
 654:	movw	r3, #0
 658:	movt	r3, #0
 65c:	bl	0 <__assert_fail>
 660:	ldr	r0, [fp, #-28]	; 0xffffffe4
 664:	sub	r1, fp, #44	; 0x2c
 668:	bl	0 <coda_type_has_attributes>
 66c:	ldr	r1, [fp, #-44]	; 0xffffffd4
 670:	cmp	r1, #0
 674:	str	r0, [sp, #44]	; 0x2c
 678:	beq	738 <print_xml_element+0x388>
 67c:	ldr	r0, [fp, #-4]
 680:	movw	r1, #0
 684:	movt	r1, #0
 688:	bl	0 <fprintf>
 68c:	ldr	r1, [fp, #-4]
 690:	str	r0, [sp, #40]	; 0x28
 694:	mov	r0, r1
 698:	movw	r1, #0
 69c:	movt	r1, #0
 6a0:	bl	0 <fprintf>
 6a4:	ldr	r1, [fp, #-4]
 6a8:	str	r0, [sp, #36]	; 0x24
 6ac:	mov	r0, r1
 6b0:	movw	r1, #0
 6b4:	movt	r1, #0
 6b8:	bl	0 <fprintf>
 6bc:	ldr	r1, [fp, #-4]
 6c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
 6c4:	str	r0, [sp, #32]
 6c8:	mov	r0, r1
 6cc:	movw	r1, #0
 6d0:	movt	r1, #0
 6d4:	bl	0 <fprintf>
 6d8:	ldr	r1, [fp, #-4]
 6dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
 6e0:	str	r0, [sp, #28]
 6e4:	mov	r0, r1
 6e8:	mov	r1, r2
 6ec:	bl	7bc <print_attributes>
 6f0:	ldr	r0, [fp, #-4]
 6f4:	movw	r1, #0
 6f8:	movt	r1, #0
 6fc:	bl	0 <fprintf>
 700:	ldr	r1, [fp, #-4]
 704:	str	r0, [sp, #24]
 708:	mov	r0, r1
 70c:	movw	r1, #0
 710:	movt	r1, #0
 714:	bl	0 <fprintf>
 718:	ldr	r1, [fp, #-4]
 71c:	str	r0, [sp, #20]
 720:	mov	r0, r1
 724:	movw	r1, #0
 728:	movt	r1, #0
 72c:	bl	0 <fprintf>
 730:	str	r0, [sp, #16]
 734:	b	750 <print_xml_element+0x3a0>
 738:	ldr	r0, [fp, #-4]
 73c:	ldr	r2, [fp, #-40]	; 0xffffffd8
 740:	movw	r1, #0
 744:	movt	r1, #0
 748:	bl	0 <fprintf>
 74c:	str	r0, [sp, #12]
 750:	b	754 <print_xml_element+0x3a4>
 754:	ldr	r0, [fp, #-4]
 758:	movw	r1, #0
 75c:	movt	r1, #0
 760:	bl	0 <fprintf>
 764:	str	r0, [sp, #8]
 768:	ldr	r0, [fp, #-20]	; 0xffffffec
 76c:	add	r0, r0, #1
 770:	str	r0, [fp, #-20]	; 0xffffffec
 774:	b	434 <print_xml_element+0x84>
 778:	ldr	r0, [fp, #-4]
 77c:	movw	r1, #0
 780:	movt	r1, #0
 784:	bl	0 <fprintf>
 788:	ldr	r1, [fp, #-4]
 78c:	ldr	lr, [fp, #-8]
 790:	str	r0, [sp, #4]
 794:	mov	r0, r1
 798:	mov	r1, lr
 79c:	bl	7bc <print_attributes>
 7a0:	ldr	r0, [fp, #-4]
 7a4:	movw	r1, #0
 7a8:	movt	r1, #0
 7ac:	bl	0 <fprintf>
 7b0:	str	r0, [sp]
 7b4:	mov	sp, fp
 7b8:	pop	{fp, pc}

000007bc <print_attributes>:
 7bc:	push	{fp, lr}
 7c0:	mov	fp, sp
 7c4:	sub	sp, sp, #88	; 0x58
 7c8:	str	r0, [fp, #-4]
 7cc:	str	r1, [fp, #-8]
 7d0:	ldr	r0, [fp, #-8]
 7d4:	sub	r1, fp, #12
 7d8:	bl	0 <coda_type_get_attributes>
 7dc:	ldr	r1, [fp, #-12]
 7e0:	str	r0, [fp, #-40]	; 0xffffffd8
 7e4:	mov	r0, r1
 7e8:	sub	r1, fp, #16
 7ec:	bl	0 <coda_type_get_num_record_fields>
 7f0:	movw	r1, #0
 7f4:	str	r1, [fp, #-20]	; 0xffffffec
 7f8:	str	r0, [sp, #44]	; 0x2c
 7fc:	ldr	r0, [fp, #-20]	; 0xffffffec
 800:	ldr	r1, [fp, #-16]
 804:	cmp	r0, r1
 808:	bge	968 <print_attributes+0x1ac>
 80c:	ldr	r0, [fp, #-12]
 810:	ldr	r1, [fp, #-20]	; 0xffffffec
 814:	sub	r2, fp, #32
 818:	bl	0 <coda_type_get_record_field_real_name>
 81c:	ldr	r1, [fp, #-12]
 820:	ldr	r2, [fp, #-20]	; 0xffffffec
 824:	str	r0, [sp, #40]	; 0x28
 828:	mov	r0, r1
 82c:	mov	r1, r2
 830:	sub	r2, fp, #36	; 0x24
 834:	bl	0 <coda_type_get_record_field_available_status>
 838:	ldr	r1, [fp, #-12]
 83c:	ldr	r2, [fp, #-20]	; 0xffffffec
 840:	str	r0, [sp, #36]	; 0x24
 844:	mov	r0, r1
 848:	mov	r1, r2
 84c:	sub	r2, fp, #28
 850:	bl	0 <coda_type_get_record_field_type>
 854:	ldr	r1, [fp, #-28]	; 0xffffffe4
 858:	str	r0, [sp, #32]
 85c:	mov	r0, r1
 860:	sub	r1, fp, #24
 864:	bl	0 <coda_type_get_class>
 868:	ldr	r1, [fp, #-4]
 86c:	ldr	r2, [fp, #-32]	; 0xffffffe0
 870:	str	r0, [sp, #28]
 874:	mov	r0, r1
 878:	movw	r1, #0
 87c:	movt	r1, #0
 880:	bl	0 <fprintf>
 884:	ldr	r1, [fp, #-36]	; 0xffffffdc
 888:	cmp	r1, #1
 88c:	str	r0, [sp, #24]
 890:	bne	8a8 <print_attributes+0xec>
 894:	ldr	r0, [fp, #-4]
 898:	movw	r1, #0
 89c:	movt	r1, #0
 8a0:	bl	0 <fprintf>
 8a4:	str	r0, [sp, #20]
 8a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
 8ac:	cmp	r0, #2
 8b0:	str	r0, [sp, #16]
 8b4:	beq	8dc <print_attributes+0x120>
 8b8:	b	8bc <print_attributes+0x100>
 8bc:	ldr	r0, [sp, #16]
 8c0:	cmp	r0, #3
 8c4:	beq	8f4 <print_attributes+0x138>
 8c8:	b	8cc <print_attributes+0x110>
 8cc:	ldr	r0, [sp, #16]
 8d0:	cmp	r0, #4
 8d4:	beq	90c <print_attributes+0x150>
 8d8:	b	924 <print_attributes+0x168>
 8dc:	ldr	r0, [fp, #-4]
 8e0:	movw	r1, #0
 8e4:	movt	r1, #0
 8e8:	bl	0 <fprintf>
 8ec:	str	r0, [sp, #12]
 8f0:	b	944 <print_attributes+0x188>
 8f4:	ldr	r0, [fp, #-4]
 8f8:	movw	r1, #0
 8fc:	movt	r1, #0
 900:	bl	0 <fprintf>
 904:	str	r0, [sp, #8]
 908:	b	944 <print_attributes+0x188>
 90c:	ldr	r0, [fp, #-4]
 910:	movw	r1, #0
 914:	movt	r1, #0
 918:	bl	0 <fprintf>
 91c:	str	r0, [sp, #4]
 920:	b	944 <print_attributes+0x188>
 924:	movw	r0, #0
 928:	movt	r0, #0
 92c:	movw	r1, #0
 930:	movt	r1, #0
 934:	movw	r2, #82	; 0x52
 938:	movw	r3, #0
 93c:	movt	r3, #0
 940:	bl	0 <__assert_fail>
 944:	ldr	r0, [fp, #-4]
 948:	movw	r1, #0
 94c:	movt	r1, #0
 950:	bl	0 <fprintf>
 954:	str	r0, [sp]
 958:	ldr	r0, [fp, #-20]	; 0xffffffec
 95c:	add	r0, r0, #1
 960:	str	r0, [fp, #-20]	; 0xffffffec
 964:	b	7fc <print_attributes+0x40>
 968:	mov	sp, fp
 96c:	pop	{fp, pc}
