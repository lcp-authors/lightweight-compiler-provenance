
../compcert-repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

000110a4 <.init>:
   110a4:	push	{r3, lr}
   110a8:	bl	111f0 <_start@@Base+0x3c>
   110ac:	pop	{r3, pc}

Disassembly of section .plt:

000110b0 <calloc@plt-0x14>:
   110b0:	push	{lr}		; (str lr, [sp, #-4]!)
   110b4:	ldr	lr, [pc, #4]	; 110c0 <calloc@plt-0x4>
   110b8:	add	lr, pc, lr
   110bc:	ldr	pc, [lr, #8]!
   110c0:	andeq	r1, r1, r0, asr #30

000110c4 <calloc@plt>:
   110c4:	add	ip, pc, #0, 12
   110c8:	add	ip, ip, #69632	; 0x11000
   110cc:	ldr	pc, [ip, #3904]!	; 0xf40

000110d0 <strcmp@plt>:
   110d0:	add	ip, pc, #0, 12
   110d4:	add	ip, ip, #69632	; 0x11000
   110d8:	ldr	pc, [ip, #3896]!	; 0xf38

000110dc <strtol@plt>:
   110dc:	add	ip, pc, #0, 12
   110e0:	add	ip, ip, #69632	; 0x11000
   110e4:	ldr	pc, [ip, #3888]!	; 0xf30

000110e8 <printf@plt>:
   110e8:	add	ip, pc, #0, 12
   110ec:	add	ip, ip, #69632	; 0x11000
   110f0:	ldr	pc, [ip, #3880]!	; 0xf28

000110f4 <__isoc99_fscanf@plt>:
   110f4:	add	ip, pc, #0, 12
   110f8:	add	ip, ip, #69632	; 0x11000
   110fc:	ldr	pc, [ip, #3872]!	; 0xf20

00011100 <fopen@plt>:
   11100:	add	ip, pc, #0, 12
   11104:	add	ip, ip, #69632	; 0x11000
   11108:	ldr	pc, [ip, #3864]!	; 0xf18

0001110c <free@plt>:
   1110c:	add	ip, pc, #0, 12
   11110:	add	ip, ip, #69632	; 0x11000
   11114:	ldr	pc, [ip, #3856]!	; 0xf10

00011118 <realloc@plt>:
   11118:	add	ip, pc, #0, 12
   1111c:	add	ip, ip, #69632	; 0x11000
   11120:	ldr	pc, [ip, #3848]!	; 0xf08

00011124 <strcpy@plt>:
   11124:	add	ip, pc, #0, 12
   11128:	add	ip, ip, #69632	; 0x11000
   1112c:	ldr	pc, [ip, #3840]!	; 0xf00

00011130 <puts@plt>:
   11130:	add	ip, pc, #0, 12
   11134:	add	ip, ip, #69632	; 0x11000
   11138:	ldr	pc, [ip, #3832]!	; 0xef8

0001113c <malloc@plt>:
   1113c:	add	ip, pc, #0, 12
   11140:	add	ip, ip, #69632	; 0x11000
   11144:	ldr	pc, [ip, #3824]!	; 0xef0

00011148 <__libc_start_main@plt>:
   11148:	add	ip, pc, #0, 12
   1114c:	add	ip, ip, #69632	; 0x11000
   11150:	ldr	pc, [ip, #3816]!	; 0xee8

00011154 <__gmon_start__@plt>:
   11154:	add	ip, pc, #0, 12
   11158:	add	ip, ip, #69632	; 0x11000
   1115c:	ldr	pc, [ip, #3808]!	; 0xee0

00011160 <strlen@plt>:
   11160:	add	ip, pc, #0, 12
   11164:	add	ip, ip, #69632	; 0x11000
   11168:	ldr	pc, [ip, #3800]!	; 0xed8

0001116c <setvbuf@plt>:
   1116c:	add	ip, pc, #0, 12
   11170:	add	ip, ip, #69632	; 0x11000
   11174:	ldr	pc, [ip, #3792]!	; 0xed0

00011178 <memset@plt>:
   11178:	add	ip, pc, #0, 12
   1117c:	add	ip, ip, #69632	; 0x11000
   11180:	ldr	pc, [ip, #3784]!	; 0xec8

00011184 <putchar@plt>:
   11184:	add	ip, pc, #0, 12
   11188:	add	ip, ip, #69632	; 0x11000
   1118c:	ldr	pc, [ip, #3776]!	; 0xec0

00011190 <fclose@plt>:
   11190:	add	ip, pc, #0, 12
   11194:	add	ip, ip, #69632	; 0x11000
   11198:	ldr	pc, [ip, #3768]!	; 0xeb8

0001119c <getline@plt>:
   1119c:	add	ip, pc, #0, 12
   111a0:	add	ip, ip, #69632	; 0x11000
   111a4:	ldr	pc, [ip, #3760]!	; 0xeb0

000111a8 <abort@plt>:
   111a8:	add	ip, pc, #0, 12
   111ac:	add	ip, ip, #69632	; 0x11000
   111b0:	ldr	pc, [ip, #3752]!	; 0xea8

Disassembly of section .text:

000111b4 <_start@@Base>:
   111b4:	mov	fp, #0
   111b8:	mov	lr, #0
   111bc:	pop	{r1}		; (ldr r1, [sp], #4)
   111c0:	mov	r2, sp
   111c4:	push	{r2}		; (str r2, [sp, #-4]!)
   111c8:	push	{r0}		; (str r0, [sp, #-4]!)
   111cc:	ldr	ip, [pc, #16]	; 111e4 <_start@@Base+0x30>
   111d0:	push	{ip}		; (str ip, [sp, #-4]!)
   111d4:	ldr	r0, [pc, #12]	; 111e8 <_start@@Base+0x34>
   111d8:	ldr	r3, [pc, #12]	; 111ec <_start@@Base+0x38>
   111dc:	bl	11148 <__libc_start_main@plt>
   111e0:	bl	111a8 <abort@plt>
   111e4:			; <UNDEFINED> instruction: 0x00012bb8
   111e8:			; <UNDEFINED> instruction: 0x000115b4
   111ec:	andeq	r2, r1, r8, asr fp
   111f0:	ldr	r3, [pc, #20]	; 1120c <_start@@Base+0x58>
   111f4:	ldr	r2, [pc, #20]	; 11210 <_start@@Base+0x5c>
   111f8:	add	r3, pc, r3
   111fc:	ldr	r2, [r3, r2]
   11200:	cmp	r2, #0
   11204:	bxeq	lr
   11208:	b	11154 <__gmon_start__@plt>
   1120c:	andeq	r1, r1, r0, lsl #28
   11210:	andeq	r0, r0, ip, asr r0
   11214:	ldr	r0, [pc, #24]	; 11234 <_start@@Base+0x80>
   11218:	ldr	r3, [pc, #24]	; 11238 <_start@@Base+0x84>
   1121c:	cmp	r3, r0
   11220:	bxeq	lr
   11224:	ldr	r3, [pc, #16]	; 1123c <_start@@Base+0x88>
   11228:	cmp	r3, #0
   1122c:	bxeq	lr
   11230:	bx	r3
   11234:	andeq	r3, r2, r8, rrx
   11238:	andeq	r3, r2, r8, rrx
   1123c:	andeq	r0, r0, r0
   11240:	ldr	r0, [pc, #36]	; 1126c <_start@@Base+0xb8>
   11244:	ldr	r1, [pc, #36]	; 11270 <_start@@Base+0xbc>
   11248:	sub	r1, r1, r0
   1124c:	asr	r1, r1, #2
   11250:	add	r1, r1, r1, lsr #31
   11254:	asrs	r1, r1, #1
   11258:	bxeq	lr
   1125c:	ldr	r3, [pc, #16]	; 11274 <_start@@Base+0xc0>
   11260:	cmp	r3, #0
   11264:	bxeq	lr
   11268:	bx	r3
   1126c:	andeq	r3, r2, r8, rrx
   11270:	andeq	r3, r2, r8, rrx
   11274:	andeq	r0, r0, r0
   11278:	push	{r4, lr}
   1127c:	ldr	r4, [pc, #24]	; 1129c <_start@@Base+0xe8>
   11280:	ldrb	r3, [r4]
   11284:	cmp	r3, #0
   11288:	popne	{r4, pc}
   1128c:	bl	11214 <_start@@Base+0x60>
   11290:	mov	r3, #1
   11294:	strb	r3, [r4]
   11298:	pop	{r4, pc}
   1129c:	andeq	r3, r2, ip, rrx
   112a0:	b	11240 <_start@@Base+0x8c>

000112a4 <proximas_n_chegadas@@Base>:
   112a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a8:	add	fp, sp, #28
   112ac:	sub	sp, sp, #4
   112b0:	mov	r5, r0
   112b4:	ldr	r0, [r2, #8]
   112b8:	ldr	r6, [r2]
   112bc:	mov	r8, r3
   112c0:	mov	sl, r2
   112c4:	mov	r4, r1
   112c8:	lsl	r0, r0, #2
   112cc:	bl	1113c <malloc@plt>
   112d0:	mov	r9, r0
   112d4:	cmp	r6, #0
   112d8:	beq	11300 <proximas_n_chegadas@@Base+0x5c>
   112dc:	mov	r7, r9
   112e0:	mov	r0, #200	; 0xc8
   112e4:	bl	1113c <malloc@plt>
   112e8:	str	r0, [r7], #4
   112ec:	ldr	r1, [r6]
   112f0:	bl	11124 <strcpy@plt>
   112f4:	ldr	r6, [r6, #4]
   112f8:	cmp	r6, #0
   112fc:	bne	112e0 <proximas_n_chegadas@@Base+0x3c>
   11300:	ldr	r0, [r5, #8]
   11304:	bl	11fc0 <heap_nova@@Base>
   11308:	ldr	r6, [r5]
   1130c:	mov	r7, r0
   11310:	cmp	r6, #0
   11314:	beq	1135c <proximas_n_chegadas@@Base+0xb8>
   11318:	ldr	r4, [r4]
   1131c:	mov	r1, #0
   11320:	mov	r2, #10
   11324:	ldr	r0, [r4], #4
   11328:	bl	110dc <strtol@plt>
   1132c:	ldr	r5, [r9, r0, lsl #2]
   11330:	ldr	r0, [r6]
   11334:	mov	r1, #0
   11338:	mov	r2, #10
   1133c:	bl	110dc <strtol@plt>
   11340:	mov	r2, r0
   11344:	mov	r0, r7
   11348:	mov	r1, r5
   1134c:	bl	120fc <heap_insere@@Base>
   11350:	ldr	r6, [r6, #4]
   11354:	cmp	r6, #0
   11358:	bne	11318 <proximas_n_chegadas@@Base+0x74>
   1135c:	ldr	r0, [sl, #8]
   11360:	cmp	r0, #1
   11364:	blt	11384 <proximas_n_chegadas@@Base+0xe0>
   11368:	mov	r4, #0
   1136c:	ldr	r0, [r9, r4, lsl #2]
   11370:	bl	1110c <free@plt>
   11374:	ldr	r0, [sl, #8]
   11378:	add	r4, r4, #1
   1137c:	cmp	r4, r0
   11380:	blt	1136c <proximas_n_chegadas@@Base+0xc8>
   11384:	mov	r0, r9
   11388:	bl	1110c <free@plt>
   1138c:	cmp	r8, #1
   11390:	blt	113d0 <proximas_n_chegadas@@Base+0x12c>
   11394:	movw	r5, #11220	; 0x2bd4
   11398:	mov	r4, #0
   1139c:	movt	r5, #1
   113a0:	mov	r0, r7
   113a4:	bl	12218 <heap_remove@@Base>
   113a8:	mov	r6, r0
   113ac:	add	r4, r4, #1
   113b0:	mov	r0, r5
   113b4:	mov	r1, r4
   113b8:	mov	r2, r6
   113bc:	bl	110e8 <printf@plt>
   113c0:	mov	r0, r6
   113c4:	bl	1110c <free@plt>
   113c8:	cmp	r8, r4
   113cc:	bne	113a0 <proximas_n_chegadas@@Base+0xfc>
   113d0:	mov	r0, r7
   113d4:	bl	1201c <heap_apaga@@Base>
   113d8:	mov	r0, #1
   113dc:	sub	sp, fp, #28
   113e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000113e4 <pesquisa_destinos@@Base>:
   113e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113e8:	add	fp, sp, #28
   113ec:	sub	sp, sp, #4
   113f0:	mov	r7, r2
   113f4:	mov	sl, r1
   113f8:	mov	r8, r0
   113fc:	bl	12464 <lista_nova@@Base>
   11400:	ldr	r4, [sl]
   11404:	mov	r9, r0
   11408:	mov	r6, #0
   1140c:	cmp	r4, #0
   11410:	bne	11428 <pesquisa_destinos@@Base+0x44>
   11414:	b	1143c <pesquisa_destinos@@Base+0x58>
   11418:	ldr	r4, [r4, #4]
   1141c:	add	r6, r6, #1
   11420:	cmp	r4, #0
   11424:	beq	1143c <pesquisa_destinos@@Base+0x58>
   11428:	ldr	r0, [r4]
   1142c:	mov	r1, r7
   11430:	bl	110d0 <strcmp@plt>
   11434:	cmp	r0, #0
   11438:	bne	11418 <pesquisa_destinos@@Base+0x34>
   1143c:	mov	r0, r8
   11440:	mov	r1, r6
   11444:	bl	11b5c <v_sucessores@@Base>
   11448:	mov	r6, r0
   1144c:	ldr	r0, [r0]
   11450:	cmp	r0, #1
   11454:	blt	114b4 <pesquisa_destinos@@Base+0xd0>
   11458:	mov	r7, #0
   1145c:	ldr	r4, [sl]
   11460:	mov	r0, r6
   11464:	mov	r1, r7
   11468:	bl	128dc <vetor_elemento@@Base>
   1146c:	cmp	r0, #1
   11470:	blt	11494 <pesquisa_destinos@@Base+0xb0>
   11474:	mov	r5, #0
   11478:	ldr	r4, [r4, #4]
   1147c:	mov	r0, r6
   11480:	mov	r1, r7
   11484:	bl	128dc <vetor_elemento@@Base>
   11488:	add	r5, r5, #1
   1148c:	cmp	r5, r0
   11490:	blt	11478 <pesquisa_destinos@@Base+0x94>
   11494:	ldr	r1, [r4]
   11498:	mov	r0, r9
   1149c:	mov	r2, #0
   114a0:	bl	1250c <lista_insere@@Base>
   114a4:	ldr	r0, [r6]
   114a8:	add	r7, r7, #1
   114ac:	cmp	r7, r0
   114b0:	blt	1145c <pesquisa_destinos@@Base+0x78>
   114b4:	mov	r0, r6
   114b8:	bl	12878 <vetor_apaga@@Base>
   114bc:	mov	r0, r9
   114c0:	sub	sp, fp, #28
   114c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114c8 <carrega_rotas@@Base>:
   114c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   114cc:	add	fp, sp, #24
   114d0:	sub	sp, sp, #8
   114d4:	cmp	r1, #0
   114d8:	beq	115a4 <carrega_rotas@@Base+0xdc>
   114dc:	mov	r4, r1
   114e0:	movw	r1, #11230	; 0x2bde
   114e4:	mov	r6, r0
   114e8:	movt	r1, #1
   114ec:	mov	r0, r4
   114f0:	bl	11100 <fopen@plt>
   114f4:	cmp	r0, #0
   114f8:	beq	11584 <carrega_rotas@@Base+0xbc>
   114fc:	mov	r5, r0
   11500:	mov	r0, r6
   11504:	bl	124dc <lista_tamanho@@Base>
   11508:	mov	r1, #0
   1150c:	bl	1182c <grafo_novo@@Base>
   11510:	cmp	r0, #0
   11514:	beq	11598 <carrega_rotas@@Base+0xd0>
   11518:	movw	r1, #11265	; 0x2c01
   1151c:	mov	r4, r0
   11520:	add	r2, sp, #4
   11524:	mov	r3, sp
   11528:	mov	r0, r5
   1152c:	movt	r1, #1
   11530:	bl	110f4 <__isoc99_fscanf@plt>
   11534:	cmp	r0, #2
   11538:	bne	11578 <carrega_rotas@@Base+0xb0>
   1153c:	movw	r8, #11265	; 0x2c01
   11540:	add	r7, sp, #4
   11544:	mov	r6, sp
   11548:	movt	r8, #1
   1154c:	ldr	r2, [sp]
   11550:	ldr	r1, [sp, #4]
   11554:	mov	r0, r4
   11558:	bl	11910 <grafo_adiciona@@Base>
   1155c:	mov	r0, r5
   11560:	mov	r1, r8
   11564:	mov	r2, r7
   11568:	mov	r3, r6
   1156c:	bl	110f4 <__isoc99_fscanf@plt>
   11570:	cmp	r0, #2
   11574:	beq	1154c <carrega_rotas@@Base+0x84>
   11578:	mov	r0, r5
   1157c:	bl	11190 <fclose@plt>
   11580:	b	115a8 <carrega_rotas@@Base+0xe0>
   11584:	movw	r0, #11232	; 0x2be0
   11588:	mov	r1, r4
   1158c:	movt	r0, #1
   11590:	bl	110e8 <printf@plt>
   11594:	b	115a4 <carrega_rotas@@Base+0xdc>
   11598:	movw	r0, #11408	; 0x2c90
   1159c:	movt	r0, #1
   115a0:	bl	11130 <puts@plt>
   115a4:	mov	r4, #0
   115a8:	mov	r0, r4
   115ac:	sub	sp, fp, #24
   115b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115b4 <main@@Base>:
   115b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115b8:	add	fp, sp, #28
   115bc:	sub	sp, sp, #28
   115c0:	movw	r0, #12392	; 0x3068
   115c4:	mov	r1, #0
   115c8:	mov	r2, #2
   115cc:	mov	r3, #0
   115d0:	mov	r8, #0
   115d4:	movt	r0, #2
   115d8:	ldr	r0, [r0]
   115dc:	bl	1116c <setvbuf@plt>
   115e0:	movw	r0, #11271	; 0x2c07
   115e4:	movw	r1, #11230	; 0x2bde
   115e8:	movt	r0, #1
   115ec:	movt	r1, #1
   115f0:	bl	11100 <fopen@plt>
   115f4:	mov	r5, r0
   115f8:	bl	12464 <lista_nova@@Base>
   115fc:	mov	r9, r0
   11600:	add	r0, sp, #24
   11604:	add	r1, sp, #20
   11608:	mov	r2, r5
   1160c:	str	r8, [sp, #24]
   11610:	str	r8, [sp, #20]
   11614:	bl	1119c <getline@plt>
   11618:	ldr	r4, [sp, #24]
   1161c:	cmn	r0, #1
   11620:	beq	11668 <main@@Base+0xb4>
   11624:	add	r6, sp, #24
   11628:	add	r7, sp, #20
   1162c:	mov	r0, r4
   11630:	bl	11160 <strlen@plt>
   11634:	add	r0, r4, r0
   11638:	mov	r2, #0
   1163c:	strb	r8, [r0, #-1]
   11640:	mov	r0, r9
   11644:	ldr	r1, [sp, #24]
   11648:	bl	1250c <lista_insere@@Base>
   1164c:	mov	r0, r6
   11650:	mov	r1, r7
   11654:	mov	r2, r5
   11658:	bl	1119c <getline@plt>
   1165c:	ldr	r4, [sp, #24]
   11660:	cmn	r0, #1
   11664:	bne	1162c <main@@Base+0x78>
   11668:	mov	r0, r4
   1166c:	bl	1110c <free@plt>
   11670:	mov	r0, r5
   11674:	bl	11190 <fclose@plt>
   11678:	movw	r1, #11286	; 0x2c16
   1167c:	mov	r0, r9
   11680:	movt	r1, #1
   11684:	bl	114c8 <carrega_rotas@@Base>
   11688:	str	r0, [sp]
   1168c:	movw	r0, #11440	; 0x2cb0
   11690:	movt	r0, #1
   11694:	bl	11130 <puts@plt>
   11698:	movw	r0, #11296	; 0x2c20
   1169c:	movw	r1, #11230	; 0x2bde
   116a0:	movt	r0, #1
   116a4:	movt	r1, #1
   116a8:	bl	11100 <fopen@plt>
   116ac:	mov	sl, r0
   116b0:	bl	12464 <lista_nova@@Base>
   116b4:	mov	r7, r0
   116b8:	bl	12464 <lista_nova@@Base>
   116bc:	movw	r1, #11309	; 0x2c2d
   116c0:	mov	r5, r0
   116c4:	add	r2, sp, #15
   116c8:	add	r3, sp, #5
   116cc:	mov	r0, sl
   116d0:	movt	r1, #1
   116d4:	bl	110f4 <__isoc99_fscanf@plt>
   116d8:	cmp	r0, #2
   116dc:	bne	1172c <main@@Base+0x178>
   116e0:	movw	r8, #11309	; 0x2c2d
   116e4:	add	r4, sp, #15
   116e8:	add	r6, sp, #5
   116ec:	movt	r8, #1
   116f0:	mov	r0, r7
   116f4:	mov	r1, r4
   116f8:	mov	r2, #0
   116fc:	bl	1250c <lista_insere@@Base>
   11700:	mov	r0, r5
   11704:	mov	r1, r6
   11708:	mov	r2, #0
   1170c:	bl	1250c <lista_insere@@Base>
   11710:	mov	r0, sl
   11714:	mov	r1, r8
   11718:	mov	r2, r4
   1171c:	mov	r3, r6
   11720:	bl	110f4 <__isoc99_fscanf@plt>
   11724:	cmp	r0, #2
   11728:	beq	116f0 <main@@Base+0x13c>
   1172c:	mov	r0, r7
   11730:	mov	r1, r5
   11734:	mov	r2, r9
   11738:	mov	r3, #5
   1173c:	bl	112a4 <proximas_n_chegadas@@Base>
   11740:	mov	r0, r7
   11744:	bl	12494 <lista_apaga@@Base>
   11748:	mov	r0, r5
   1174c:	bl	12494 <lista_apaga@@Base>
   11750:	mov	r0, sl
   11754:	bl	11190 <fclose@plt>
   11758:	movw	r0, #11472	; 0x2cd0
   1175c:	movt	r0, #1
   11760:	bl	11130 <puts@plt>
   11764:	ldr	r6, [sp]
   11768:	movw	r2, #11315	; 0x2c33
   1176c:	mov	r1, r9
   11770:	movt	r2, #1
   11774:	mov	r0, r6
   11778:	bl	113e4 <pesquisa_destinos@@Base>
   1177c:	cmp	r0, #0
   11780:	beq	117d0 <main@@Base+0x21c>
   11784:	mov	r5, r0
   11788:	bl	124dc <lista_tamanho@@Base>
   1178c:	movw	r1, #11315	; 0x2c33
   11790:	mov	r2, r0
   11794:	movw	r0, #11363	; 0x2c63
   11798:	movt	r0, #1
   1179c:	movt	r1, #1
   117a0:	bl	110e8 <printf@plt>
   117a4:	ldr	r4, [r5]
   117a8:	cmp	r4, #0
   117ac:	beq	117c4 <main@@Base+0x210>
   117b0:	ldr	r0, [r4]
   117b4:	bl	11130 <puts@plt>
   117b8:	ldr	r4, [r4, #4]
   117bc:	cmp	r4, #0
   117c0:	bne	117b0 <main@@Base+0x1fc>
   117c4:	mov	r0, r5
   117c8:	bl	12494 <lista_apaga@@Base>
   117cc:	b	117e4 <main@@Base+0x230>
   117d0:	movw	r0, #11326	; 0x2c3e
   117d4:	movw	r1, #11315	; 0x2c33
   117d8:	movt	r0, #1
   117dc:	movt	r1, #1
   117e0:	bl	110e8 <printf@plt>
   117e4:	mov	r0, r6
   117e8:	bl	1188c <grafo_apaga@@Base>
   117ec:	mov	r0, r9
   117f0:	bl	12494 <lista_apaga@@Base>
   117f4:	mov	r0, #0
   117f8:	sub	sp, fp, #28
   117fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011800 <cria_no@@Base>:
   11800:	push	{r4, sl, fp, lr}
   11804:	add	fp, sp, #8
   11808:	mov	r4, r0
   1180c:	mov	r0, #8
   11810:	bl	1113c <malloc@plt>
   11814:	cmp	r0, #0
   11818:	moveq	r0, #0
   1181c:	movne	r1, #0
   11820:	strne	r4, [r0]
   11824:	strne	r1, [r0, #4]
   11828:	pop	{r4, sl, fp, pc}

0001182c <grafo_novo@@Base>:
   1182c:	push	{r4, r5, r6, sl, fp, lr}
   11830:	add	fp, sp, #16
   11834:	mov	r5, r0
   11838:	mov	r0, #12
   1183c:	mov	r6, r1
   11840:	bl	1113c <malloc@plt>
   11844:	cmp	r0, #0
   11848:	beq	11880 <grafo_novo@@Base+0x54>
   1184c:	str	r6, [r0]
   11850:	mov	r4, r0
   11854:	str	r5, [r0, #4]
   11858:	mov	r0, r5
   1185c:	mov	r1, #8
   11860:	bl	110c4 <calloc@plt>
   11864:	cmp	r0, #0
   11868:	str	r0, [r4, #8]
   1186c:	beq	11878 <grafo_novo@@Base+0x4c>
   11870:	mov	r0, r4
   11874:	pop	{r4, r5, r6, sl, fp, pc}
   11878:	mov	r0, r4
   1187c:	bl	1110c <free@plt>
   11880:	mov	r4, #0
   11884:	mov	r0, r4
   11888:	pop	{r4, r5, r6, sl, fp, pc}

0001188c <grafo_apaga@@Base>:
   1188c:	cmp	r0, #0
   11890:	bxeq	lr
   11894:	push	{r4, r5, fp, lr}
   11898:	add	fp, sp, #8
   1189c:	mov	r4, r0
   118a0:	ldr	r0, [r0, #8]
   118a4:	cmp	r0, #0
   118a8:	beq	11904 <grafo_apaga@@Base+0x78>
   118ac:	ldr	r2, [r4, #4]
   118b0:	cmp	r2, #1
   118b4:	blt	11900 <grafo_apaga@@Base+0x74>
   118b8:	mov	r5, #0
   118bc:	add	r3, r0, r5, lsl #3
   118c0:	ldr	r1, [r3, #4]!
   118c4:	cmp	r1, #0
   118c8:	beq	118f4 <grafo_apaga@@Base+0x68>
   118cc:	ldr	r0, [r1, #4]
   118d0:	str	r0, [r3]
   118d4:	mov	r0, r1
   118d8:	bl	1110c <free@plt>
   118dc:	ldr	r0, [r4, #8]
   118e0:	add	r3, r0, r5, lsl #3
   118e4:	ldr	r1, [r3, #4]!
   118e8:	cmp	r1, #0
   118ec:	bne	118cc <grafo_apaga@@Base+0x40>
   118f0:	ldr	r2, [r4, #4]
   118f4:	add	r5, r5, #1
   118f8:	cmp	r5, r2
   118fc:	blt	118bc <grafo_apaga@@Base+0x30>
   11900:	bl	1110c <free@plt>
   11904:	mov	r0, r4
   11908:	pop	{r4, r5, fp, lr}
   1190c:	b	1110c <free@plt>

00011910 <grafo_adiciona@@Base>:
   11910:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11914:	add	fp, sp, #24
   11918:	cmp	r0, #0
   1191c:	beq	1195c <grafo_adiciona@@Base+0x4c>
   11920:	ldr	r8, [r0, #8]
   11924:	mov	r6, r0
   11928:	mov	r4, r2
   1192c:	mov	r5, r1
   11930:	add	r7, r8, r1, lsl #3
   11934:	ldr	r0, [r7, #4]!
   11938:	cmp	r0, #0
   1193c:	bne	11950 <grafo_adiciona@@Base+0x40>
   11940:	b	11960 <grafo_adiciona@@Base+0x50>
   11944:	ldr	r0, [r0, #4]
   11948:	cmp	r0, #0
   1194c:	beq	11960 <grafo_adiciona@@Base+0x50>
   11950:	ldr	r1, [r0]
   11954:	cmp	r1, r4
   11958:	bne	11944 <grafo_adiciona@@Base+0x34>
   1195c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11960:	mov	r0, #8
   11964:	bl	1113c <malloc@plt>
   11968:	str	r4, [r0]
   1196c:	ldr	r1, [r7]
   11970:	str	r1, [r0, #4]
   11974:	str	r0, [r7]
   11978:	ldr	r0, [r8, r5, lsl #3]
   1197c:	add	r0, r0, #1
   11980:	str	r0, [r8, r5, lsl #3]
   11984:	ldr	r0, [r6]
   11988:	cmp	r0, #0
   1198c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   11990:	mov	r0, #8
   11994:	bl	1113c <malloc@plt>
   11998:	str	r5, [r0]
   1199c:	add	r1, r8, r4, lsl #3
   119a0:	ldr	r2, [r1, #4]
   119a4:	str	r2, [r0, #4]
   119a8:	ldr	r2, [r8, r4, lsl #3]
   119ac:	add	r2, r2, #1
   119b0:	str	r2, [r8, r4, lsl #3]
   119b4:	str	r0, [r1, #4]
   119b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000119bc <grafo_aresta@@Base>:
   119bc:	mov	r3, r0
   119c0:	mov	r0, #0
   119c4:	cmp	r3, #0
   119c8:	beq	119f0 <grafo_aresta@@Base+0x34>
   119cc:	ldr	r3, [r3, #8]
   119d0:	add	r1, r3, r1, lsl #3
   119d4:	ldr	r1, [r1, #4]
   119d8:	cmp	r1, #0
   119dc:	bxeq	lr
   119e0:	ldr	r3, [r1]
   119e4:	cmp	r3, r2
   119e8:	bne	119d4 <grafo_aresta@@Base+0x18>
   119ec:	mov	r0, #1
   119f0:	bx	lr

000119f4 <grafo_remove@@Base>:
   119f4:	push	{r4, r5, r6, sl, fp, lr}
   119f8:	add	fp, sp, #16
   119fc:	cmp	r0, #0
   11a00:	beq	11a70 <grafo_remove@@Base+0x7c>
   11a04:	mov	r6, r0
   11a08:	ldr	r0, [r0, #8]
   11a0c:	mov	r4, r1
   11a10:	add	r1, r0, r1, lsl #3
   11a14:	ldr	r0, [r1, #4]!
   11a18:	cmp	r0, #0
   11a1c:	beq	11a70 <grafo_remove@@Base+0x7c>
   11a20:	mov	r5, r2
   11a24:	ldr	r2, [r0]
   11a28:	cmp	r2, r5
   11a2c:	bne	11a3c <grafo_remove@@Base+0x48>
   11a30:	ldr	r2, [r0, #4]
   11a34:	str	r2, [r1]
   11a38:	b	11a60 <grafo_remove@@Base+0x6c>
   11a3c:	mov	r1, r0
   11a40:	ldr	r0, [r0, #4]
   11a44:	cmp	r0, #0
   11a48:	beq	11a64 <grafo_remove@@Base+0x70>
   11a4c:	ldr	r2, [r0]
   11a50:	cmp	r2, r5
   11a54:	bne	11a3c <grafo_remove@@Base+0x48>
   11a58:	ldr	r2, [r0, #4]
   11a5c:	str	r2, [r1, #4]
   11a60:	bl	1110c <free@plt>
   11a64:	ldr	r0, [r6]
   11a68:	cmp	r0, #0
   11a6c:	beq	11a74 <grafo_remove@@Base+0x80>
   11a70:	pop	{r4, r5, r6, sl, fp, pc}
   11a74:	ldr	r0, [r6, #8]
   11a78:	add	r1, r0, r5, lsl #3
   11a7c:	ldr	r0, [r1, #4]!
   11a80:	ldr	r2, [r0]
   11a84:	cmp	r2, r4
   11a88:	bne	11a9c <grafo_remove@@Base+0xa8>
   11a8c:	ldr	r2, [r0, #4]
   11a90:	str	r2, [r1]
   11a94:	pop	{r4, r5, r6, sl, fp, lr}
   11a98:	b	1110c <free@plt>
   11a9c:	mov	r1, r0
   11aa0:	ldr	r0, [r0, #4]
   11aa4:	cmp	r0, #0
   11aa8:	popeq	{r4, r5, r6, sl, fp, pc}
   11aac:	ldr	r2, [r0]
   11ab0:	cmp	r2, r4
   11ab4:	bne	11a9c <grafo_remove@@Base+0xa8>
   11ab8:	ldr	r2, [r0, #4]
   11abc:	str	r2, [r1, #4]
   11ac0:	pop	{r4, r5, r6, sl, fp, lr}
   11ac4:	b	1110c <free@plt>

00011ac8 <grafo_imprime@@Base>:
   11ac8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11acc:	add	fp, sp, #24
   11ad0:	mov	r4, r0
   11ad4:	ldr	r0, [r0, #4]
   11ad8:	cmp	r0, #1
   11adc:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   11ae0:	movw	r9, #11504	; 0x2cf0
   11ae4:	movw	r8, #11268	; 0x2c04
   11ae8:	movw	r7, #11509	; 0x2cf5
   11aec:	mov	r5, #0
   11af0:	movt	r9, #1
   11af4:	movt	r8, #1
   11af8:	movt	r7, #1
   11afc:	ldr	r0, [r4, #8]
   11b00:	mov	r1, r5
   11b04:	add	r0, r0, r5, lsl #3
   11b08:	ldr	r6, [r0, #4]
   11b0c:	mov	r0, r9
   11b10:	bl	110e8 <printf@plt>
   11b14:	cmp	r6, #0
   11b18:	beq	11b40 <grafo_imprime@@Base+0x78>
   11b1c:	ldr	r1, [r6]
   11b20:	mov	r0, r8
   11b24:	b	11b30 <grafo_imprime@@Base+0x68>
   11b28:	ldr	r1, [r6]
   11b2c:	mov	r0, r7
   11b30:	bl	110e8 <printf@plt>
   11b34:	ldr	r6, [r6, #4]
   11b38:	cmp	r6, #0
   11b3c:	bne	11b28 <grafo_imprime@@Base+0x60>
   11b40:	mov	r0, #10
   11b44:	bl	11184 <putchar@plt>
   11b48:	ldr	r0, [r4, #4]
   11b4c:	add	r5, r5, #1
   11b50:	cmp	r5, r0
   11b54:	blt	11afc <grafo_imprime@@Base+0x34>
   11b58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011b5c <v_sucessores@@Base>:
   11b5c:	push	{r4, r5, r6, r7, fp, lr}
   11b60:	add	fp, sp, #16
   11b64:	mov	r4, #0
   11b68:	cmp	r0, #0
   11b6c:	beq	11be4 <v_sucessores@@Base+0x88>
   11b70:	mov	r5, r1
   11b74:	cmp	r1, #0
   11b78:	blt	11be4 <v_sucessores@@Base+0x88>
   11b7c:	mov	r6, r0
   11b80:	ldr	r0, [r0, #4]
   11b84:	cmp	r0, r5
   11b88:	ble	11be4 <v_sucessores@@Base+0x88>
   11b8c:	bl	12848 <vetor_novo@@Base>
   11b90:	mov	r4, r0
   11b94:	ldr	r0, [r6, #4]
   11b98:	cmp	r0, #1
   11b9c:	blt	11be4 <v_sucessores@@Base+0x88>
   11ba0:	mov	r7, #0
   11ba4:	ldr	r1, [r6, #8]
   11ba8:	add	r1, r1, r5, lsl #3
   11bac:	ldr	r1, [r1, #4]
   11bb0:	cmp	r1, #0
   11bb4:	beq	11bd8 <v_sucessores@@Base+0x7c>
   11bb8:	ldr	r2, [r1]
   11bbc:	cmp	r2, r7
   11bc0:	bne	11bac <v_sucessores@@Base+0x50>
   11bc4:	mov	r0, r4
   11bc8:	mov	r1, r7
   11bcc:	mvn	r2, #0
   11bd0:	bl	12904 <vetor_insere@@Base>
   11bd4:	ldr	r0, [r6, #4]
   11bd8:	add	r7, r7, #1
   11bdc:	cmp	r7, r0
   11be0:	blt	11ba4 <v_sucessores@@Base+0x48>
   11be4:	mov	r0, r4
   11be8:	pop	{r4, r5, r6, r7, fp, pc}

00011bec <v_antecessores@@Base>:
   11bec:	push	{r4, r5, r6, r7, fp, lr}
   11bf0:	add	fp, sp, #16
   11bf4:	mov	r4, #0
   11bf8:	cmp	r0, #0
   11bfc:	beq	11c74 <v_antecessores@@Base+0x88>
   11c00:	mov	r5, r1
   11c04:	cmp	r1, #0
   11c08:	blt	11c74 <v_antecessores@@Base+0x88>
   11c0c:	mov	r6, r0
   11c10:	ldr	r0, [r0, #4]
   11c14:	cmp	r0, r5
   11c18:	ble	11c74 <v_antecessores@@Base+0x88>
   11c1c:	bl	12848 <vetor_novo@@Base>
   11c20:	mov	r4, r0
   11c24:	ldr	r0, [r6, #4]
   11c28:	cmp	r0, #1
   11c2c:	blt	11c74 <v_antecessores@@Base+0x88>
   11c30:	mov	r7, #0
   11c34:	ldr	r1, [r6, #8]
   11c38:	add	r1, r1, r7, lsl #3
   11c3c:	ldr	r1, [r1, #4]
   11c40:	cmp	r1, #0
   11c44:	beq	11c68 <v_antecessores@@Base+0x7c>
   11c48:	ldr	r2, [r1]
   11c4c:	cmp	r2, r5
   11c50:	bne	11c3c <v_antecessores@@Base+0x50>
   11c54:	mov	r0, r4
   11c58:	mov	r1, r7
   11c5c:	mvn	r2, #0
   11c60:	bl	12904 <vetor_insere@@Base>
   11c64:	ldr	r0, [r6, #4]
   11c68:	add	r7, r7, #1
   11c6c:	cmp	r7, r0
   11c70:	blt	11c34 <v_antecessores@@Base+0x48>
   11c74:	mov	r0, r4
   11c78:	pop	{r4, r5, r6, r7, fp, pc}

00011c7c <dfs_helper@@Base>:
   11c7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11c80:	add	fp, sp, #24
   11c84:	sub	sp, sp, #8
   11c88:	ldr	r9, [fp, #8]
   11c8c:	mov	r4, r1
   11c90:	mov	r6, r0
   11c94:	mov	r0, #0
   11c98:	ldr	r1, [r9, r1, lsl #2]
   11c9c:	cmp	r1, #0
   11ca0:	bne	11d28 <dfs_helper@@Base+0xac>
   11ca4:	cmp	r4, r2
   11ca8:	mov	r5, r2
   11cac:	str	r3, [r9, r4, lsl #2]
   11cb0:	moveq	r0, r3
   11cb4:	subeq	sp, fp, #24
   11cb8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   11cbc:	ldr	r0, [r6, #4]
   11cc0:	cmp	r0, #1
   11cc4:	blt	11d20 <dfs_helper@@Base+0xa4>
   11cc8:	add	r8, r3, #1
   11ccc:	mov	r7, #0
   11cd0:	ldr	r1, [r6, #8]
   11cd4:	add	r1, r1, r4, lsl #3
   11cd8:	ldr	r1, [r1, #4]
   11cdc:	cmp	r1, #0
   11ce0:	beq	11d14 <dfs_helper@@Base+0x98>
   11ce4:	ldr	r2, [r1]
   11ce8:	cmp	r2, r7
   11cec:	bne	11cd8 <dfs_helper@@Base+0x5c>
   11cf0:	mov	r0, r6
   11cf4:	mov	r1, r7
   11cf8:	mov	r2, r5
   11cfc:	mov	r3, r8
   11d00:	str	r9, [sp]
   11d04:	bl	11c7c <dfs_helper@@Base>
   11d08:	cmp	r0, #0
   11d0c:	bne	11d28 <dfs_helper@@Base+0xac>
   11d10:	ldr	r0, [r6, #4]
   11d14:	add	r7, r7, #1
   11d18:	cmp	r7, r0
   11d1c:	blt	11cd0 <dfs_helper@@Base+0x54>
   11d20:	mov	r0, #0
   11d24:	str	r0, [r9, r4, lsl #2]
   11d28:	sub	sp, fp, #24
   11d2c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011d30 <grafo_dfs@@Base>:
   11d30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d34:	add	fp, sp, #24
   11d38:	sub	sp, sp, #8
   11d3c:	cmp	r0, #0
   11d40:	beq	11df8 <grafo_dfs@@Base+0xc8>
   11d44:	mov	r4, r0
   11d48:	ldr	r0, [r0, #4]
   11d4c:	mov	r7, r1
   11d50:	mov	r1, #4
   11d54:	mov	r8, r3
   11d58:	mov	r6, r2
   11d5c:	bl	110c4 <calloc@plt>
   11d60:	mov	r5, r0
   11d64:	str	r0, [sp]
   11d68:	mov	r0, r4
   11d6c:	mov	r1, r7
   11d70:	mov	r2, r6
   11d74:	mov	r3, #1
   11d78:	bl	11c7c <dfs_helper@@Base>
   11d7c:	cmp	r0, #0
   11d80:	beq	11e00 <grafo_dfs@@Base+0xd0>
   11d84:	mov	r1, #4
   11d88:	mov	r7, r0
   11d8c:	bl	110c4 <calloc@plt>
   11d90:	mov	r6, r0
   11d94:	cmp	r7, #1
   11d98:	blt	11de8 <grafo_dfs@@Base+0xb8>
   11d9c:	ldr	r0, [r4, #4]
   11da0:	mov	r1, #0
   11da4:	mov	r2, r1
   11da8:	add	r1, r1, #1
   11dac:	cmp	r0, #1
   11db0:	blt	11dd0 <grafo_dfs@@Base+0xa0>
   11db4:	mov	r3, #0
   11db8:	ldr	r4, [r5, r3, lsl #2]
   11dbc:	cmp	r4, r1
   11dc0:	beq	11ddc <grafo_dfs@@Base+0xac>
   11dc4:	add	r3, r3, #1
   11dc8:	cmp	r3, r0
   11dcc:	blt	11db8 <grafo_dfs@@Base+0x88>
   11dd0:	cmp	r1, r7
   11dd4:	bne	11da4 <grafo_dfs@@Base+0x74>
   11dd8:	b	11de8 <grafo_dfs@@Base+0xb8>
   11ddc:	str	r3, [r6, r2, lsl #2]
   11de0:	cmp	r1, r7
   11de4:	bne	11da4 <grafo_dfs@@Base+0x74>
   11de8:	mov	r0, r5
   11dec:	str	r7, [r8]
   11df0:	bl	1110c <free@plt>
   11df4:	b	11e10 <grafo_dfs@@Base+0xe0>
   11df8:	mov	r6, #0
   11dfc:	b	11e10 <grafo_dfs@@Base+0xe0>
   11e00:	mov	r0, r5
   11e04:	bl	1110c <free@plt>
   11e08:	mov	r6, #0
   11e0c:	str	r6, [r8]
   11e10:	mov	r0, r6
   11e14:	sub	sp, fp, #24
   11e18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011e1c <grafo_bfs@@Base>:
   11e1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e20:	add	fp, sp, #28
   11e24:	sub	sp, sp, #12
   11e28:	cmp	r0, #0
   11e2c:	beq	11f34 <grafo_bfs@@Base+0x118>
   11e30:	stmib	sp, {r2, r3}
   11e34:	mov	r8, r1
   11e38:	mov	sl, r0
   11e3c:	mov	r1, #4
   11e40:	ldr	r7, [r0, #4]
   11e44:	mov	r0, r7
   11e48:	bl	110c4 <calloc@plt>
   11e4c:	mov	r5, r0
   11e50:	mov	r0, r7
   11e54:	mov	r1, #4
   11e58:	bl	110c4 <calloc@plt>
   11e5c:	mov	r9, r0
   11e60:	cmp	r7, #1
   11e64:	blt	11e78 <grafo_bfs@@Base+0x5c>
   11e68:	lsl	r2, r7, #2
   11e6c:	mov	r0, r5
   11e70:	mov	r1, #255	; 0xff
   11e74:	bl	11178 <memset@plt>
   11e78:	str	r8, [r5, r8, lsl #2]
   11e7c:	str	r8, [r9]
   11e80:	mov	r0, #0
   11e84:	mov	r1, #1
   11e88:	b	11e90 <grafo_bfs@@Base+0x74>
   11e8c:	ldr	r8, [r9, r0, lsl #2]
   11e90:	add	r0, r0, #1
   11e94:	cmp	r7, #1
   11e98:	sdiv	r2, r0, r7
   11e9c:	mls	r0, r2, r7, r0
   11ea0:	blt	11f08 <grafo_bfs@@Base+0xec>
   11ea4:	ldr	r2, [sl, #8]
   11ea8:	mov	r3, #0
   11eac:	add	r2, r2, r8, lsl #3
   11eb0:	ldr	r6, [r2, #4]
   11eb4:	cmp	r6, #0
   11eb8:	mov	r2, r6
   11ebc:	beq	11efc <grafo_bfs@@Base+0xe0>
   11ec0:	ldr	r4, [r2]
   11ec4:	cmp	r4, r3
   11ec8:	beq	11edc <grafo_bfs@@Base+0xc0>
   11ecc:	ldr	r2, [r2, #4]
   11ed0:	cmp	r2, #0
   11ed4:	bne	11ec0 <grafo_bfs@@Base+0xa4>
   11ed8:	b	11efc <grafo_bfs@@Base+0xe0>
   11edc:	ldr	r2, [r5, r3, lsl #2]
   11ee0:	cmn	r2, #1
   11ee4:	bne	11efc <grafo_bfs@@Base+0xe0>
   11ee8:	str	r3, [r9, r1, lsl #2]
   11eec:	add	r1, r1, #1
   11ef0:	str	r8, [r5, r3, lsl #2]
   11ef4:	sdiv	r2, r1, r7
   11ef8:	mls	r1, r2, r7, r1
   11efc:	add	r3, r3, #1
   11f00:	cmp	r3, r7
   11f04:	bne	11eb4 <grafo_bfs@@Base+0x98>
   11f08:	cmp	r0, r1
   11f0c:	bne	11e8c <grafo_bfs@@Base+0x70>
   11f10:	ldr	r6, [sp, #4]
   11f14:	ldr	r4, [r5, r6, lsl #2]
   11f18:	cmp	r4, #0
   11f1c:	blt	11f3c <grafo_bfs@@Base+0x120>
   11f20:	cmp	r4, r6
   11f24:	bne	11f44 <grafo_bfs@@Base+0x128>
   11f28:	mov	r8, #2
   11f2c:	mov	r7, #1
   11f30:	b	11f64 <grafo_bfs@@Base+0x148>
   11f34:	mov	sl, #0
   11f38:	b	11fb4 <grafo_bfs@@Base+0x198>
   11f3c:	mov	r7, #0
   11f40:	b	11f9c <grafo_bfs@@Base+0x180>
   11f44:	mov	r7, #1
   11f48:	mov	r0, r4
   11f4c:	ldr	r1, [r5, r0, lsl #2]
   11f50:	add	r7, r7, #1
   11f54:	cmp	r1, r0
   11f58:	mov	r0, r1
   11f5c:	bne	11f4c <grafo_bfs@@Base+0x130>
   11f60:	add	r8, r7, #1
   11f64:	lsl	r0, r7, #2
   11f68:	bl	1113c <malloc@plt>
   11f6c:	mov	sl, r0
   11f70:	add	r0, r0, r7, lsl #2
   11f74:	cmp	r8, #2
   11f78:	str	r6, [r0, #-4]
   11f7c:	beq	11f9c <grafo_bfs@@Base+0x180>
   11f80:	sub	r0, r0, #8
   11f84:	sub	r1, r8, #2
   11f88:	ldr	r2, [r5, r4, lsl #2]
   11f8c:	str	r4, [r0], #-4
   11f90:	subs	r1, r1, #1
   11f94:	mov	r4, r2
   11f98:	bne	11f88 <grafo_bfs@@Base+0x16c>
   11f9c:	mov	r0, r9
   11fa0:	bl	1110c <free@plt>
   11fa4:	mov	r0, r5
   11fa8:	bl	1110c <free@plt>
   11fac:	ldr	r0, [sp, #8]
   11fb0:	str	r7, [r0]
   11fb4:	mov	r0, sl
   11fb8:	sub	sp, fp, #28
   11fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011fc0 <heap_nova@@Base>:
   11fc0:	push	{r4, r5, fp, lr}
   11fc4:	add	fp, sp, #8
   11fc8:	mov	r5, r0
   11fcc:	mov	r0, #12
   11fd0:	bl	1113c <malloc@plt>
   11fd4:	cmp	r0, #0
   11fd8:	beq	12010 <heap_nova@@Base+0x50>
   11fdc:	mov	r4, r0
   11fe0:	mov	r0, #0
   11fe4:	mov	r1, #4
   11fe8:	stm	r4, {r0, r5}
   11fec:	mov	r0, r5
   11ff0:	bl	110c4 <calloc@plt>
   11ff4:	cmp	r0, #0
   11ff8:	str	r0, [r4, #8]
   11ffc:	beq	12008 <heap_nova@@Base+0x48>
   12000:	mov	r0, r4
   12004:	pop	{r4, r5, fp, pc}
   12008:	mov	r0, r4
   1200c:	bl	1110c <free@plt>
   12010:	mov	r4, #0
   12014:	mov	r0, r4
   12018:	pop	{r4, r5, fp, pc}

0001201c <heap_apaga@@Base>:
   1201c:	cmp	r0, #0
   12020:	bxeq	lr
   12024:	push	{r4, r5, r6, sl, fp, lr}
   12028:	add	fp, sp, #16
   1202c:	ldr	r1, [r0]
   12030:	mov	r4, r0
   12034:	ldr	r0, [r0, #8]
   12038:	cmp	r1, #1
   1203c:	blt	1207c <heap_apaga@@Base+0x60>
   12040:	mov	r5, #0
   12044:	mov	r6, #0
   12048:	ldr	r0, [r0, r6, lsl #2]
   1204c:	ldr	r0, [r0, #4]
   12050:	bl	1110c <free@plt>
   12054:	ldr	r0, [r4, #8]
   12058:	ldr	r0, [r0, r6, lsl #2]
   1205c:	bl	1110c <free@plt>
   12060:	ldr	r0, [r4, #8]
   12064:	str	r5, [r0, r6, lsl #2]
   12068:	add	r6, r6, #1
   1206c:	ldr	r1, [r4]
   12070:	ldr	r0, [r4, #8]
   12074:	cmp	r6, r1
   12078:	blt	12048 <heap_apaga@@Base+0x2c>
   1207c:	bl	1110c <free@plt>
   12080:	mov	r0, r4
   12084:	pop	{r4, r5, r6, sl, fp, lr}
   12088:	b	1110c <free@plt>

0001208c <elemento_cria@@Base>:
   1208c:	push	{r4, r5, r6, r7, fp, lr}
   12090:	add	fp, sp, #16
   12094:	mov	r4, r0
   12098:	mov	r0, #8
   1209c:	mov	r7, r1
   120a0:	bl	1113c <malloc@plt>
   120a4:	mov	r5, #0
   120a8:	cmp	r0, #0
   120ac:	beq	120e4 <elemento_cria@@Base+0x58>
   120b0:	mov	r6, r0
   120b4:	mov	r0, r7
   120b8:	bl	11160 <strlen@plt>
   120bc:	add	r0, r0, #1
   120c0:	mov	r1, #1
   120c4:	bl	110c4 <calloc@plt>
   120c8:	cmp	r0, #0
   120cc:	str	r0, [r6, #4]
   120d0:	beq	120ec <elemento_cria@@Base+0x60>
   120d4:	mov	r1, r7
   120d8:	bl	11124 <strcpy@plt>
   120dc:	mov	r5, r6
   120e0:	str	r4, [r6]
   120e4:	mov	r0, r5
   120e8:	pop	{r4, r5, r6, r7, fp, pc}
   120ec:	mov	r0, r6
   120f0:	bl	1110c <free@plt>
   120f4:	mov	r0, r5
   120f8:	pop	{r4, r5, r6, r7, fp, pc}

000120fc <heap_insere@@Base>:
   120fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12100:	add	fp, sp, #24
   12104:	mov	r4, r0
   12108:	mov	r7, r1
   1210c:	ldr	r0, [r0]
   12110:	mov	r5, #0
   12114:	ldr	r1, [r4, #4]
   12118:	cmp	r0, r1
   1211c:	bge	121d0 <heap_insere@@Base+0xd4>
   12120:	mov	r0, #8
   12124:	mov	r8, r2
   12128:	bl	1113c <malloc@plt>
   1212c:	cmp	r0, #0
   12130:	beq	121d0 <heap_insere@@Base+0xd4>
   12134:	mov	r6, r0
   12138:	mov	r0, r7
   1213c:	bl	11160 <strlen@plt>
   12140:	add	r0, r0, #1
   12144:	mov	r1, #1
   12148:	bl	110c4 <calloc@plt>
   1214c:	cmp	r0, #0
   12150:	str	r0, [r6, #4]
   12154:	beq	121d8 <heap_insere@@Base+0xdc>
   12158:	mov	r1, r7
   1215c:	bl	11124 <strcpy@plt>
   12160:	str	r8, [r6]
   12164:	ldr	r0, [r4]
   12168:	ldr	r1, [r4, #8]
   1216c:	str	r6, [r1, r0, lsl #2]
   12170:	add	r1, r0, #1
   12174:	cmp	r0, #0
   12178:	str	r1, [r4]
   1217c:	beq	121cc <heap_insere@@Base+0xd0>
   12180:	ldr	r1, [r4, #8]
   12184:	ldr	r2, [r1, r0, lsl #2]
   12188:	cmp	r2, #0
   1218c:	subne	r3, r0, #1
   12190:	addne	r3, r3, r3, lsr #31
   12194:	asrne	r3, r3, #1
   12198:	ldrne	r7, [r1, r3, lsl #2]
   1219c:	cmpne	r7, #0
   121a0:	beq	121cc <heap_insere@@Base+0xd0>
   121a4:	ldr	r6, [r7]
   121a8:	ldr	r5, [r2]
   121ac:	cmp	r5, r6
   121b0:	bge	121cc <heap_insere@@Base+0xd0>
   121b4:	str	r2, [r1, r3, lsl #2]
   121b8:	cmp	r0, #2
   121bc:	ldr	r1, [r4, #8]
   121c0:	str	r7, [r1, r0, lsl #2]
   121c4:	mov	r0, r3
   121c8:	bhi	12180 <heap_insere@@Base+0x84>
   121cc:	mov	r5, #1
   121d0:	mov	r0, r5
   121d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   121d8:	mov	r0, r6
   121dc:	bl	1110c <free@plt>
   121e0:	mov	r0, r5
   121e4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000121e8 <menor_que@@Base>:
   121e8:	mov	r2, r0
   121ec:	mov	r0, #0
   121f0:	cmp	r2, #0
   121f4:	cmpne	r1, #0
   121f8:	bne	12200 <menor_que@@Base+0x18>
   121fc:	bx	lr
   12200:	ldr	r1, [r1]
   12204:	ldr	r2, [r2]
   12208:	mov	r0, #0
   1220c:	cmp	r2, r1
   12210:	movwlt	r0, #1
   12214:	bx	lr

00012218 <heap_remove@@Base>:
   12218:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1221c:	add	fp, sp, #24
   12220:	mov	r8, #0
   12224:	cmp	r0, #0
   12228:	beq	1231c <heap_remove@@Base+0x104>
   1222c:	mov	r5, r0
   12230:	ldr	r0, [r0]
   12234:	cmp	r0, #1
   12238:	blt	1231c <heap_remove@@Base+0x104>
   1223c:	ldr	r0, [r5, #8]
   12240:	ldr	r0, [r0]
   12244:	ldr	r8, [r0, #4]
   12248:	bl	1110c <free@plt>
   1224c:	ldr	r0, [r5]
   12250:	ldr	r1, [r5, #8]
   12254:	mov	r7, #0
   12258:	sub	lr, r0, #1
   1225c:	cmp	r0, #3
   12260:	str	lr, [r5]
   12264:	ldr	r2, [r1, lr, lsl #2]
   12268:	str	r2, [r1]
   1226c:	ldr	r1, [r5, #8]
   12270:	str	r7, [r1, lr, lsl #2]
   12274:	blt	1231c <heap_remove@@Base+0x104>
   12278:	mov	ip, #1
   1227c:	mov	r3, #1
   12280:	mov	r1, #0
   12284:	ldr	r6, [r5, #8]
   12288:	add	r2, r7, #2
   1228c:	cmp	r2, lr
   12290:	bge	122b8 <heap_remove@@Base+0xa0>
   12294:	mov	r4, r6
   12298:	mov	r7, r6
   1229c:	ldr	r0, [r4, r2, lsl #2]!
   122a0:	ldr	r9, [r7, r3, lsl #2]!
   122a4:	cmp	r0, #0
   122a8:	cmpne	r9, #0
   122ac:	bne	12308 <heap_remove@@Base+0xf0>
   122b0:	mov	r4, r7
   122b4:	b	122bc <heap_remove@@Base+0xa4>
   122b8:	add	r4, r6, r3, lsl #2
   122bc:	mov	r2, r3
   122c0:	ldr	r3, [r4]
   122c4:	cmp	r3, #0
   122c8:	ldrne	r0, [r6, r1, lsl #2]
   122cc:	cmpne	r0, #0
   122d0:	beq	1231c <heap_remove@@Base+0x104>
   122d4:	ldr	r6, [r0]
   122d8:	ldr	r7, [r3]
   122dc:	cmp	r7, r6
   122e0:	bge	1231c <heap_remove@@Base+0x104>
   122e4:	str	r0, [r4]
   122e8:	lsl	r7, r2, #1
   122ec:	ldr	r0, [r5, #8]
   122f0:	str	r3, [r0, r1, lsl #2]
   122f4:	orr	r3, ip, r2, lsl #1
   122f8:	mov	r1, r2
   122fc:	cmp	r3, lr
   12300:	blt	12284 <heap_remove@@Base+0x6c>
   12304:	b	1231c <heap_remove@@Base+0x104>
   12308:	ldr	r9, [r9]
   1230c:	ldr	r0, [r0]
   12310:	cmp	r0, r9
   12314:	bge	122b0 <heap_remove@@Base+0x98>
   12318:	b	122c0 <heap_remove@@Base+0xa8>
   1231c:	mov	r0, r8
   12320:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012324 <mostraHeap@@Base>:
   12324:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12328:	add	fp, sp, #28
   1232c:	sub	sp, sp, #4
   12330:	mov	r9, r0
   12334:	ldr	r0, [r0]
   12338:	cmp	r0, r1
   1233c:	ble	123e4 <mostraHeap@@Base+0xc0>
   12340:	mov	sl, r1
   12344:	mov	r7, #0
   12348:	cmp	r1, #1
   1234c:	blt	12370 <mostraHeap@@Base+0x4c>
   12350:	mov	r0, sl
   12354:	sub	r1, r0, #1
   12358:	add	r7, r7, #1
   1235c:	cmp	r0, #2
   12360:	add	r1, r1, r1, lsr #31
   12364:	asr	r1, r1, #1
   12368:	mov	r0, r1
   1236c:	bgt	12354 <mostraHeap@@Base+0x30>
   12370:	mov	r0, #1
   12374:	orr	r1, r0, sl, lsl #1
   12378:	mov	r0, r9
   1237c:	bl	12324 <mostraHeap@@Base>
   12380:	lsl	r8, sl, #1
   12384:	cmp	r7, #0
   12388:	beq	123b0 <mostraHeap@@Base+0x8c>
   1238c:	movw	r6, #11514	; 0x2cfa
   12390:	add	r4, r7, r7, lsl #1
   12394:	mov	r5, #0
   12398:	movt	r6, #1
   1239c:	mov	r0, r6
   123a0:	bl	110e8 <printf@plt>
   123a4:	add	r5, r5, #1
   123a8:	cmp	r5, r4
   123ac:	bcc	1239c <mostraHeap@@Base+0x78>
   123b0:	ldr	r0, [r9, #8]
   123b4:	ldr	r0, [r0, sl, lsl #2]
   123b8:	ldr	r2, [r0]
   123bc:	ldr	r1, [r0, #4]
   123c0:	movw	r0, #11520	; 0x2d00
   123c4:	movt	r0, #1
   123c8:	bl	110e8 <printf@plt>
   123cc:	add	r1, r8, #2
   123d0:	mov	r0, r9
   123d4:	bl	12324 <mostraHeap@@Base>
   123d8:	cmp	r7, #0
   123dc:	subne	sp, fp, #28
   123e0:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123e4:	mov	r0, #10
   123e8:	sub	sp, fp, #28
   123ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123f0:	b	11184 <putchar@plt>

000123f4 <novo_str@@Base>:
   123f4:	push	{r4, r5, r6, sl, fp, lr}
   123f8:	add	fp, sp, #16
   123fc:	mov	r6, r0
   12400:	mov	r0, #12
   12404:	bl	1113c <malloc@plt>
   12408:	mov	r5, #0
   1240c:	cmp	r0, #0
   12410:	beq	1244c <novo_str@@Base+0x58>
   12414:	mov	r4, r0
   12418:	mov	r0, r6
   1241c:	bl	11160 <strlen@plt>
   12420:	add	r0, r0, #1
   12424:	bl	1113c <malloc@plt>
   12428:	cmp	r0, #0
   1242c:	str	r0, [r4]
   12430:	beq	12454 <novo_str@@Base+0x60>
   12434:	mov	r1, r6
   12438:	bl	11124 <strcpy@plt>
   1243c:	mov	r0, #0
   12440:	mov	r5, r4
   12444:	str	r0, [r4, #4]
   12448:	str	r0, [r4, #8]
   1244c:	mov	r0, r5
   12450:	pop	{r4, r5, r6, sl, fp, pc}
   12454:	mov	r0, r4
   12458:	bl	1110c <free@plt>
   1245c:	mov	r0, r5
   12460:	pop	{r4, r5, r6, sl, fp, pc}

00012464 <lista_nova@@Base>:
   12464:	push	{fp, lr}
   12468:	mov	fp, sp
   1246c:	mov	r0, #12
   12470:	bl	1113c <malloc@plt>
   12474:	cmp	r0, #0
   12478:	movne	r1, #0
   1247c:	strne	r1, [r0]
   12480:	strne	r1, [r0, #4]
   12484:	strne	r1, [r0, #8]
   12488:	popne	{fp, pc}
   1248c:	mov	r0, #0
   12490:	pop	{fp, pc}

00012494 <lista_apaga@@Base>:
   12494:	cmp	r0, #0
   12498:	bxeq	lr
   1249c:	push	{r4, r5, fp, lr}
   124a0:	add	fp, sp, #8
   124a4:	mov	r4, r0
   124a8:	b	124c4 <lista_apaga@@Base+0x30>
   124ac:	ldr	r0, [r5, #4]
   124b0:	str	r0, [r4]
   124b4:	ldr	r0, [r5]
   124b8:	bl	1110c <free@plt>
   124bc:	mov	r0, r5
   124c0:	bl	1110c <free@plt>
   124c4:	ldr	r5, [r4]
   124c8:	cmp	r5, #0
   124cc:	bne	124ac <lista_apaga@@Base+0x18>
   124d0:	mov	r0, r4
   124d4:	pop	{r4, r5, fp, lr}
   124d8:	b	1110c <free@plt>

000124dc <lista_tamanho@@Base>:
   124dc:	cmp	r0, #0
   124e0:	ldrne	r0, [r0, #8]
   124e4:	mvneq	r0, #0
   124e8:	bx	lr

000124ec <lista_inicio@@Base>:
   124ec:	cmp	r0, #0
   124f0:	ldrne	r0, [r0]
   124f4:	moveq	r0, #0
   124f8:	bx	lr

000124fc <lista_fim@@Base>:
   124fc:	cmp	r0, #0
   12500:	ldrne	r0, [r0, #4]
   12504:	moveq	r0, #0
   12508:	bx	lr

0001250c <lista_insere@@Base>:
   1250c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12510:	add	fp, sp, #24
   12514:	cmp	r0, #0
   12518:	mov	r7, #0
   1251c:	movne	r6, r1
   12520:	cmpne	r1, #0
   12524:	bne	12530 <lista_insere@@Base+0x24>
   12528:	mov	r0, r7
   1252c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12530:	mov	r5, r0
   12534:	mov	r0, #12
   12538:	mov	r8, r2
   1253c:	bl	1113c <malloc@plt>
   12540:	cmp	r0, #0
   12544:	beq	12528 <lista_insere@@Base+0x1c>
   12548:	mov	r4, r0
   1254c:	mov	r0, r6
   12550:	bl	11160 <strlen@plt>
   12554:	add	r0, r0, #1
   12558:	bl	1113c <malloc@plt>
   1255c:	cmp	r0, #0
   12560:	str	r0, [r4]
   12564:	beq	125b4 <lista_insere@@Base+0xa8>
   12568:	mov	r1, r6
   1256c:	bl	11124 <strcpy@plt>
   12570:	mov	r0, #0
   12574:	cmp	r8, #0
   12578:	str	r0, [r4, #4]
   1257c:	str	r0, [r4, #8]
   12580:	ldr	r1, [r5, #8]
   12584:	ldr	r0, [r5]
   12588:	add	r1, r1, #1
   1258c:	str	r1, [r5, #8]
   12590:	beq	125c4 <lista_insere@@Base+0xb8>
   12594:	cmp	r0, r8
   12598:	beq	125dc <lista_insere@@Base+0xd0>
   1259c:	ldr	r0, [r8, #8]
   125a0:	str	r8, [r4, #4]
   125a4:	str	r0, [r4, #8]
   125a8:	str	r4, [r0, #4]
   125ac:	str	r4, [r8, #8]
   125b0:	b	125f4 <lista_insere@@Base+0xe8>
   125b4:	mov	r0, r4
   125b8:	bl	1110c <free@plt>
   125bc:	mov	r0, r7
   125c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   125c4:	cmp	r0, #0
   125c8:	beq	125ec <lista_insere@@Base+0xe0>
   125cc:	ldr	r0, [r5, #4]
   125d0:	str	r0, [r4, #8]
   125d4:	str	r4, [r0, #4]
   125d8:	b	125f0 <lista_insere@@Base+0xe4>
   125dc:	str	r8, [r4, #4]
   125e0:	str	r4, [r8, #8]
   125e4:	str	r4, [r5]
   125e8:	b	125f4 <lista_insere@@Base+0xe8>
   125ec:	str	r4, [r5]
   125f0:	str	r4, [r5, #4]
   125f4:	mov	r7, r4
   125f8:	mov	r0, r7
   125fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012600 <lista_remove@@Base>:
   12600:	push	{r4, r5, fp, lr}
   12604:	add	fp, sp, #8
   12608:	cmp	r0, #0
   1260c:	mov	r4, #0
   12610:	movne	r5, r1
   12614:	cmpne	r1, #0
   12618:	bne	12624 <lista_remove@@Base+0x24>
   1261c:	mov	r0, r4
   12620:	pop	{r4, r5, fp, pc}
   12624:	ldr	r1, [r0, #8]
   12628:	sub	r1, r1, #1
   1262c:	str	r1, [r0, #8]
   12630:	ldr	r1, [r5, #8]
   12634:	ldr	r4, [r5, #4]
   12638:	cmp	r1, #0
   1263c:	streq	r4, [r0]
   12640:	strne	r4, [r1, #4]
   12644:	ldrne	r4, [r5, #4]
   12648:	add	r2, r4, #8
   1264c:	cmp	r4, #0
   12650:	addeq	r2, r0, #4
   12654:	str	r1, [r2]
   12658:	ldr	r0, [r5]
   1265c:	bl	1110c <free@plt>
   12660:	mov	r0, r5
   12664:	bl	1110c <free@plt>
   12668:	mov	r0, r4
   1266c:	pop	{r4, r5, fp, pc}

00012670 <lista_pesquisa@@Base>:
   12670:	push	{r4, r5, r6, sl, fp, lr}
   12674:	add	fp, sp, #16
   12678:	cmp	r0, #0
   1267c:	mov	r4, #0
   12680:	movne	r5, r1
   12684:	cmpne	r1, #0
   12688:	bne	12694 <lista_pesquisa@@Base+0x24>
   1268c:	mov	r0, r4
   12690:	pop	{r4, r5, r6, sl, fp, pc}
   12694:	cmp	r2, #1
   12698:	bhi	1268c <lista_pesquisa@@Base+0x1c>
   1269c:	cmp	r2, #0
   126a0:	beq	126d8 <lista_pesquisa@@Base+0x68>
   126a4:	ldr	r6, [r0, #4]
   126a8:	cmp	r6, #0
   126ac:	bne	126c0 <lista_pesquisa@@Base+0x50>
   126b0:	b	1268c <lista_pesquisa@@Base+0x1c>
   126b4:	ldr	r6, [r6, #8]
   126b8:	cmp	r6, #0
   126bc:	beq	1268c <lista_pesquisa@@Base+0x1c>
   126c0:	ldr	r0, [r6]
   126c4:	mov	r1, r5
   126c8:	bl	110d0 <strcmp@plt>
   126cc:	cmp	r0, #0
   126d0:	bne	126b4 <lista_pesquisa@@Base+0x44>
   126d4:	b	12708 <lista_pesquisa@@Base+0x98>
   126d8:	ldr	r6, [r0]
   126dc:	cmp	r6, #0
   126e0:	bne	126f4 <lista_pesquisa@@Base+0x84>
   126e4:	b	1268c <lista_pesquisa@@Base+0x1c>
   126e8:	ldr	r6, [r6, #4]
   126ec:	cmp	r6, #0
   126f0:	beq	1268c <lista_pesquisa@@Base+0x1c>
   126f4:	ldr	r0, [r6]
   126f8:	mov	r1, r5
   126fc:	bl	110d0 <strcmp@plt>
   12700:	cmp	r0, #0
   12704:	bne	126e8 <lista_pesquisa@@Base+0x78>
   12708:	mov	r4, r6
   1270c:	mov	r0, r4
   12710:	pop	{r4, r5, r6, sl, fp, pc}

00012714 <lista_ordena@@Base>:
   12714:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12718:	add	fp, sp, #24
   1271c:	cmp	r0, #0
   12720:	beq	1279c <lista_ordena@@Base+0x88>
   12724:	ldr	r1, [r0, #8]
   12728:	mov	r8, #0
   1272c:	cmp	r1, #0
   12730:	beq	127a0 <lista_ordena@@Base+0x8c>
   12734:	ldr	r0, [r0]
   12738:	b	12750 <lista_ordena@@Base+0x3c>
   1273c:	ldr	r0, [r9]
   12740:	ldr	r1, [r7]
   12744:	str	r1, [r9]
   12748:	str	r0, [r7]
   1274c:	ldr	r0, [r5]
   12750:	mov	r5, r0
   12754:	ldr	r4, [r5, #4]!
   12758:	cmp	r4, #0
   1275c:	beq	127a0 <lista_ordena@@Base+0x8c>
   12760:	mov	r9, r0
   12764:	mov	r7, r0
   12768:	mov	r6, r4
   1276c:	ldr	r1, [r7]
   12770:	ldr	r0, [r6]
   12774:	bl	110d0 <strcmp@plt>
   12778:	cmp	r0, #0
   1277c:	movlt	r7, r6
   12780:	ldr	r6, [r6, #4]
   12784:	cmp	r6, #0
   12788:	bne	1276c <lista_ordena@@Base+0x58>
   1278c:	cmp	r7, r9
   12790:	mov	r0, r4
   12794:	bne	1273c <lista_ordena@@Base+0x28>
   12798:	b	12750 <lista_ordena@@Base+0x3c>
   1279c:	mvn	r8, #0
   127a0:	mov	r0, r8
   127a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000127a8 <lista_inverte@@Base>:
   127a8:	cmp	r0, #0
   127ac:	mvneq	r1, #0
   127b0:	moveq	r0, r1
   127b4:	bxeq	lr
   127b8:	ldr	r2, [r0, #8]
   127bc:	mov	r1, #0
   127c0:	cmp	r2, #2
   127c4:	blt	12840 <lista_inverte@@Base+0x98>
   127c8:	bne	127d4 <lista_inverte@@Base+0x2c>
   127cc:	ldr	r2, [r0]
   127d0:	b	1281c <lista_inverte@@Base+0x74>
   127d4:	push	{fp, lr}
   127d8:	mov	fp, sp
   127dc:	ldr	ip, [r0]
   127e0:	sub	r1, r2, #2
   127e4:	ldr	r3, [ip, #4]
   127e8:	mov	r2, r3
   127ec:	ldr	r3, [r3, #4]
   127f0:	subs	r1, r1, #1
   127f4:	ldr	lr, [r2, #8]
   127f8:	str	r3, [lr, #4]
   127fc:	ldr	r3, [r2, #4]
   12800:	str	lr, [r3, #8]
   12804:	str	ip, [r2, #4]
   12808:	str	r2, [ip, #8]
   1280c:	mov	ip, r2
   12810:	bne	127e8 <lista_inverte@@Base+0x40>
   12814:	str	r2, [r0]
   12818:	pop	{fp, lr}
   1281c:	ldr	r3, [r0, #4]
   12820:	mov	r1, #0
   12824:	ldr	ip, [r3, #8]
   12828:	str	ip, [r0, #4]
   1282c:	str	r1, [ip, #4]
   12830:	str	r2, [r3, #4]
   12834:	str	r1, [r3, #8]
   12838:	str	r3, [r2, #8]
   1283c:	str	r3, [r0]
   12840:	mov	r0, r1
   12844:	bx	lr

00012848 <vetor_novo@@Base>:
   12848:	push	{fp, lr}
   1284c:	mov	fp, sp
   12850:	mov	r0, #12
   12854:	bl	1113c <malloc@plt>
   12858:	cmp	r0, #0
   1285c:	movne	r1, #0
   12860:	strne	r1, [r0]
   12864:	strne	r1, [r0, #4]
   12868:	strne	r1, [r0, #8]
   1286c:	popne	{fp, pc}
   12870:	mov	r0, #0
   12874:	pop	{fp, pc}

00012878 <vetor_apaga@@Base>:
   12878:	cmp	r0, #0
   1287c:	bxeq	lr
   12880:	push	{r4, sl, fp, lr}
   12884:	add	fp, sp, #8
   12888:	mov	r4, r0
   1288c:	ldr	r0, [r0, #8]
   12890:	bl	1110c <free@plt>
   12894:	mov	r0, r4
   12898:	pop	{r4, sl, fp, lr}
   1289c:	b	1110c <free@plt>

000128a0 <vetor_atribui@@Base>:
   128a0:	mov	ip, r0
   128a4:	mvn	r0, #0
   128a8:	cmp	ip, #0
   128ac:	bxeq	lr
   128b0:	cmp	r1, #0
   128b4:	ldrge	r3, [ip]
   128b8:	cmpge	r3, r1
   128bc:	ldrgt	r0, [ip, #8]
   128c0:	strgt	r2, [r0, r1, lsl #2]
   128c4:	movgt	r0, r1
   128c8:	bx	lr

000128cc <vetor_tamanho@@Base>:
   128cc:	cmp	r0, #0
   128d0:	ldrne	r0, [r0]
   128d4:	mvneq	r0, #0
   128d8:	bx	lr

000128dc <vetor_elemento@@Base>:
   128dc:	mov	r2, r0
   128e0:	mov	r0, #-2147483648	; 0x80000000
   128e4:	cmp	r2, #0
   128e8:	bxeq	lr
   128ec:	cmp	r1, #0
   128f0:	ldrge	r3, [r2]
   128f4:	cmpge	r3, r1
   128f8:	ldrgt	r0, [r2, #8]
   128fc:	ldrgt	r0, [r0, r1, lsl #2]
   12900:	bx	lr

00012904 <vetor_insere@@Base>:
   12904:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12908:	add	fp, sp, #24
   1290c:	mvn	r7, #0
   12910:	cmp	r0, #0
   12914:	beq	129c4 <vetor_insere@@Base+0xc0>
   12918:	mov	r4, r2
   1291c:	cmn	r2, #1
   12920:	blt	129c4 <vetor_insere@@Base+0xc0>
   12924:	mov	r8, r1
   12928:	ldr	r1, [r0]
   1292c:	mov	r5, r0
   12930:	cmp	r1, r4
   12934:	blt	129c4 <vetor_insere@@Base+0xc0>
   12938:	ldr	r0, [r5, #4]
   1293c:	cmn	r4, #1
   12940:	moveq	r4, r1
   12944:	cmp	r1, r0
   12948:	bne	12984 <vetor_insere@@Base+0x80>
   1294c:	lsl	r0, r1, #1
   12950:	cmp	r1, #0
   12954:	movweq	r0, #1
   12958:	str	r0, [r5, #4]
   1295c:	lsl	r1, r0, #2
   12960:	ldr	r0, [r5, #8]
   12964:	bl	11118 <realloc@plt>
   12968:	cmp	r0, #0
   1296c:	str	r0, [r5, #8]
   12970:	beq	129c4 <vetor_insere@@Base+0xc0>
   12974:	ldr	r1, [r5]
   12978:	cmp	r1, r4
   1297c:	bgt	12990 <vetor_insere@@Base+0x8c>
   12980:	b	129b4 <vetor_insere@@Base+0xb0>
   12984:	ldr	r0, [r5, #8]
   12988:	cmp	r1, r4
   1298c:	ble	129b4 <vetor_insere@@Base+0xb0>
   12990:	add	r7, r0, r1, lsl #2
   12994:	mov	r2, r1
   12998:	mov	r3, r7
   1299c:	ldr	r6, [r3, #-4]!
   129a0:	sub	r2, r2, #1
   129a4:	cmp	r2, r4
   129a8:	str	r6, [r7]
   129ac:	mov	r7, r3
   129b0:	bgt	1299c <vetor_insere@@Base+0x98>
   129b4:	str	r8, [r0, r4, lsl #2]
   129b8:	add	r0, r1, #1
   129bc:	mov	r7, r4
   129c0:	str	r0, [r5]
   129c4:	mov	r0, r7
   129c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000129cc <vetor_remove@@Base>:
   129cc:	mvn	r2, #0
   129d0:	cmp	r0, #0
   129d4:	beq	129e8 <vetor_remove@@Base+0x1c>
   129d8:	cmp	r1, #0
   129dc:	ldrge	ip, [r0]
   129e0:	cmpge	ip, r1
   129e4:	bgt	129f0 <vetor_remove@@Base+0x24>
   129e8:	mov	r0, r2
   129ec:	bx	lr
   129f0:	push	{r4, r5, r6, r7, fp, lr}
   129f4:	add	fp, sp, #16
   129f8:	add	r4, r1, #1
   129fc:	cmp	r4, ip
   12a00:	bge	12a64 <vetor_remove@@Base+0x98>
   12a04:	mvn	r3, r1
   12a08:	add	lr, ip, r3
   12a0c:	ldr	r3, [r0, #8]
   12a10:	cmp	lr, #4
   12a14:	bcc	12a48 <vetor_remove@@Base+0x7c>
   12a18:	bic	r2, lr, #3
   12a1c:	add	r5, r3, r1, lsl #2
   12a20:	add	r1, r2, r1
   12a24:	add	r4, r4, r2
   12a28:	mov	r6, r2
   12a2c:	add	r7, r5, #4
   12a30:	subs	r6, r6, #4
   12a34:	vld1.32	{d16-d17}, [r7]
   12a38:	vst1.32	{d16-d17}, [r5]!
   12a3c:	bne	12a2c <vetor_remove@@Base+0x60>
   12a40:	cmp	lr, r2
   12a44:	beq	12a64 <vetor_remove@@Base+0x98>
   12a48:	ldr	r7, [r3, r4, lsl #2]
   12a4c:	mov	r2, r4
   12a50:	add	r4, r4, #1
   12a54:	cmp	ip, r4
   12a58:	str	r7, [r3, r1, lsl #2]
   12a5c:	mov	r1, r2
   12a60:	bne	12a48 <vetor_remove@@Base+0x7c>
   12a64:	sub	r1, ip, #1
   12a68:	mov	r2, #0
   12a6c:	str	r1, [r0]
   12a70:	pop	{r4, r5, r6, r7, fp, lr}
   12a74:	mov	r0, r2
   12a78:	bx	lr

00012a7c <vetor_pesquisa@@Base>:
   12a7c:	push	{fp, lr}
   12a80:	mov	fp, sp
   12a84:	mov	r2, r0
   12a88:	mvn	r0, #0
   12a8c:	cmp	r2, #0
   12a90:	beq	12ac4 <vetor_pesquisa@@Base+0x48>
   12a94:	ldr	ip, [r2]
   12a98:	cmp	ip, #1
   12a9c:	poplt	{fp, pc}
   12aa0:	ldr	lr, [r2, #8]
   12aa4:	mov	r2, #0
   12aa8:	ldr	r3, [lr, r2, lsl #2]
   12aac:	cmp	r3, r1
   12ab0:	moveq	r0, r2
   12ab4:	popeq	{fp, pc}
   12ab8:	add	r2, r2, #1
   12abc:	cmp	r2, ip
   12ac0:	blt	12aa8 <vetor_pesquisa@@Base+0x2c>
   12ac4:	pop	{fp, pc}

00012ac8 <vetor_ordena@@Base>:
   12ac8:	cmp	r0, #0
   12acc:	mvneq	r0, #0
   12ad0:	bxeq	lr
   12ad4:	ldr	ip, [r0]
   12ad8:	mov	r1, r0
   12adc:	mov	r0, #0
   12ae0:	cmp	ip, #2
   12ae4:	bxlt	lr
   12ae8:	push	{r4, r5, fp, lr}
   12aec:	add	fp, sp, #8
   12af0:	ldr	r0, [r1, #8]
   12af4:	mov	r1, #1
   12af8:	mov	lr, #0
   12afc:	ldr	r2, [r0, r1, lsl #2]
   12b00:	mov	r3, lr
   12b04:	ldr	r4, [r0, r3, lsl #2]
   12b08:	cmp	r2, r4
   12b0c:	bge	12b34 <vetor_ordena@@Base+0x6c>
   12b10:	add	r5, r0, r3, lsl #2
   12b14:	str	r4, [r5, #4]
   12b18:	sub	r4, r3, #1
   12b1c:	add	r3, r3, #1
   12b20:	cmp	r3, #1
   12b24:	mov	r3, r4
   12b28:	bgt	12b04 <vetor_ordena@@Base+0x3c>
   12b2c:	add	r3, r4, #1
   12b30:	b	12b38 <vetor_ordena@@Base+0x70>
   12b34:	add	r3, r3, #1
   12b38:	add	r1, r1, #1
   12b3c:	add	lr, lr, #1
   12b40:	str	r2, [r0, r3, lsl #2]
   12b44:	cmp	r1, ip
   12b48:	blt	12afc <vetor_ordena@@Base+0x34>
   12b4c:	mov	r0, #0
   12b50:	pop	{r4, r5, fp, lr}
   12b54:	bx	lr

00012b58 <__libc_csu_init@@Base>:
   12b58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b5c:	mov	r7, r0
   12b60:	ldr	r6, [pc, #72]	; 12bb0 <__libc_csu_init@@Base+0x58>
   12b64:	ldr	r5, [pc, #72]	; 12bb4 <__libc_csu_init@@Base+0x5c>
   12b68:	add	r6, pc, r6
   12b6c:	add	r5, pc, r5
   12b70:	sub	r6, r6, r5
   12b74:	mov	r8, r1
   12b78:	mov	r9, r2
   12b7c:	bl	110a4 <calloc@plt-0x20>
   12b80:	asrs	r6, r6, #2
   12b84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b88:	mov	r4, #0
   12b8c:	add	r4, r4, #1
   12b90:	ldr	r3, [r5], #4
   12b94:	mov	r2, r9
   12b98:	mov	r1, r8
   12b9c:	mov	r0, r7
   12ba0:	blx	r3
   12ba4:	cmp	r6, r4
   12ba8:	bne	12b8c <__libc_csu_init@@Base+0x34>
   12bac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bb0:	muleq	r1, ip, r3
   12bb4:	muleq	r1, r4, r3

00012bb8 <__libc_csu_fini@@Base>:
   12bb8:	bx	lr

Disassembly of section .fini:

00012bbc <.fini>:
   12bbc:	push	{r3, lr}
   12bc0:	pop	{r3, pc}
