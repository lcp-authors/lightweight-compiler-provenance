
../repos/stcorp-coda-3a25f25/CMakeFiles/coda.dir/libcoda/zlib/crc32.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <coda_get_crc_table>:
   0:	mov	ip, sp
   4:	sub	sp, sp, #8
   8:	str	ip, [sp]
   c:	str	lr, [sp, #4]
  10:	ldr	r0, [pc, #8]	; 20 <coda_get_crc_table+0x20>
  14:	ldr	lr, [sp, #4]
  18:	add	sp, sp, #8
  1c:	bx	lr
  20:	.word	0x00000000

00000024 <coda_crc32>:
  24:	mov	ip, sp
  28:	sub	sp, sp, #48	; 0x30
  2c:	str	ip, [sp]
  30:	str	lr, [sp, #4]
  34:	str	r4, [sp, #8]
  38:	str	r5, [sp, #12]
  3c:	str	r6, [sp, #16]
  40:	str	r7, [sp, #20]
  44:	str	r8, [sp, #24]
  48:	str	r9, [sp, #28]
  4c:	str	sl, [sp, #32]
  50:	cmp	r1, #0
  54:	bne	60 <coda_crc32+0x3c>
  58:	mov	r0, #0
  5c:	b	6b8 <coda_crc32+0x694>
  60:	mov	r3, #1
  64:	str	r3, [sp, #40]	; 0x28
  68:	ldrb	ip, [sp, #40]	; 0x28
  6c:	cmp	ip, #0
  70:	bne	3b8 <coda_crc32+0x394>
  74:	lsr	r3, r0, #24
  78:	and	ip, r3, #255	; 0xff
  7c:	lsr	r3, r0, #8
  80:	and	r3, r3, #65280	; 0xff00
  84:	add	ip, ip, r3
  88:	and	r3, r0, #65280	; 0xff00
  8c:	add	r3, ip, r3, lsl #8
  90:	add	r0, r3, r0, lsl #24
  94:	mvn	r5, r0
  98:	and	r3, r1, #3
  9c:	cmp	r3, #0
  a0:	movne	r3, #1
  a4:	moveq	r3, #0
  a8:	mov	ip, #0
  ac:	cmp	r2, #0
  b0:	movne	r0, r3
  b4:	moveq	r0, ip
  b8:	cmp	r0, #0
  bc:	beq	e4 <coda_crc32+0xc0>
  c0:	mov	r3, r1
  c4:	add	r1, r3, #1
  c8:	ldr	ip, [pc, #1580]	; 6fc <coda_crc32+0x6d8>
  cc:	ldrb	r3, [r3]
  d0:	eor	r3, r3, r5, lsr #24
  d4:	ldr	r3, [ip, r3, lsl #2]
  d8:	eor	r5, r3, r5, lsl #8
  dc:	sub	r2, r2, #1
  e0:	b	98 <coda_crc32+0x74>
  e4:	sub	r4, r1, #4
  e8:	cmp	r2, #32
  ec:	bcc	2fc <coda_crc32+0x2d8>
  f0:	add	r7, r4, #4
  f4:	ldr	ip, [r7]
  f8:	eor	r4, r5, ip
  fc:	ldr	r0, [pc, #1528]	; 6fc <coda_crc32+0x6d8>
 100:	and	r3, r4, #255	; 0xff
 104:	ldr	r1, [r0, r3, lsl #2]
 108:	ldr	ip, [pc, #1488]	; 6e0 <coda_crc32+0x6bc>
 10c:	lsr	r3, r4, #8
 110:	and	r3, r3, #255	; 0xff
 114:	ldr	r3, [ip, r3, lsl #2]
 118:	eor	r5, r1, r3
 11c:	ldr	r1, [pc, #1488]	; 6f4 <coda_crc32+0x6d0>
 120:	lsr	r3, r4, #16
 124:	and	r3, r3, #255	; 0xff
 128:	ldr	r3, [r1, r3, lsl #2]
 12c:	eor	r5, r5, r3
 130:	ldr	r3, [pc, #1456]	; 6e8 <coda_crc32+0x6c4>
 134:	lsr	r4, r4, #24
 138:	ldr	r4, [r3, r4, lsl #2]
 13c:	eor	r5, r5, r4
 140:	add	r6, r7, #4
 144:	ldr	r4, [r7, #4]
 148:	eor	r4, r5, r4
 14c:	and	r5, r4, #255	; 0xff
 150:	ldr	r5, [r0, r5, lsl #2]
 154:	lsr	r8, r4, #8
 158:	and	r8, r8, #255	; 0xff
 15c:	ldr	r8, [ip, r8, lsl #2]
 160:	eor	r8, r5, r8
 164:	lsr	r5, r4, #16
 168:	and	r5, r5, #255	; 0xff
 16c:	ldr	r5, [r1, r5, lsl #2]
 170:	eor	r5, r8, r5
 174:	lsr	r4, r4, #24
 178:	ldr	r4, [r3, r4, lsl #2]
 17c:	eor	r5, r5, r4
 180:	add	r4, r7, #8
 184:	ldr	r8, [r7, #8]
 188:	eor	r5, r5, r8
 18c:	and	r8, r5, #255	; 0xff
 190:	ldr	r9, [r0, r8, lsl #2]
 194:	lsr	r8, r5, #8
 198:	and	r8, r8, #255	; 0xff
 19c:	ldr	r8, [ip, r8, lsl #2]
 1a0:	eor	r9, r9, r8
 1a4:	lsr	r8, r5, #16
 1a8:	and	r8, r8, #255	; 0xff
 1ac:	ldr	r8, [r1, r8, lsl #2]
 1b0:	eor	r8, r9, r8
 1b4:	lsr	r5, r5, #24
 1b8:	ldr	r5, [r3, r5, lsl #2]
 1bc:	eor	r8, r8, r5
 1c0:	add	r5, r7, #12
 1c4:	ldr	r9, [r7, #12]
 1c8:	eor	r8, r8, r9
 1cc:	and	r9, r8, #255	; 0xff
 1d0:	ldr	sl, [r0, r9, lsl #2]
 1d4:	lsr	r9, r8, #8
 1d8:	and	r9, r9, #255	; 0xff
 1dc:	ldr	r9, [ip, r9, lsl #2]
 1e0:	eor	sl, sl, r9
 1e4:	lsr	r9, r8, #16
 1e8:	and	r9, r9, #255	; 0xff
 1ec:	ldr	r9, [r1, r9, lsl #2]
 1f0:	eor	r9, sl, r9
 1f4:	lsr	r8, r8, #24
 1f8:	ldr	r8, [r3, r8, lsl #2]
 1fc:	eor	r8, r9, r8
 200:	ldr	r7, [r7, #16]
 204:	eor	r7, r8, r7
 208:	and	r8, r7, #255	; 0xff
 20c:	ldr	r9, [r0, r8, lsl #2]
 210:	lsr	r8, r7, #8
 214:	and	r8, r8, #255	; 0xff
 218:	ldr	r8, [ip, r8, lsl #2]
 21c:	eor	r9, r9, r8
 220:	lsr	r8, r7, #16
 224:	and	r8, r8, #255	; 0xff
 228:	ldr	r8, [r1, r8, lsl #2]
 22c:	eor	r8, r9, r8
 230:	lsr	r7, r7, #24
 234:	ldr	r7, [r3, r7, lsl #2]
 238:	eor	r7, r8, r7
 23c:	ldr	r6, [r6, #16]
 240:	eor	r7, r7, r6
 244:	and	r6, r7, #255	; 0xff
 248:	ldr	r6, [r0, r6, lsl #2]
 24c:	lsr	r8, r7, #8
 250:	and	r8, r8, #255	; 0xff
 254:	ldr	r8, [ip, r8, lsl #2]
 258:	eor	r8, r6, r8
 25c:	lsr	r6, r7, #16
 260:	and	r6, r6, #255	; 0xff
 264:	ldr	r6, [r1, r6, lsl #2]
 268:	eor	r8, r8, r6
 26c:	lsr	r6, r7, #24
 270:	ldr	r6, [r3, r6, lsl #2]
 274:	eor	r7, r8, r6
 278:	ldr	r6, [r4, #16]
 27c:	eor	r7, r7, r6
 280:	and	r6, r7, #255	; 0xff
 284:	ldr	r8, [r0, r6, lsl #2]
 288:	lsr	r6, r7, #8
 28c:	and	r6, r6, #255	; 0xff
 290:	ldr	r6, [ip, r6, lsl #2]
 294:	eor	r6, r8, r6
 298:	lsr	r8, r7, #16
 29c:	and	r8, r8, #255	; 0xff
 2a0:	ldr	r8, [r1, r8, lsl #2]
 2a4:	eor	r8, r6, r8
 2a8:	lsr	r6, r7, #24
 2ac:	ldr	r6, [r3, r6, lsl #2]
 2b0:	eor	r6, r8, r6
 2b4:	add	r4, r4, #20
 2b8:	ldr	r5, [r5, #16]
 2bc:	eor	r6, r6, r5
 2c0:	and	r5, r6, #255	; 0xff
 2c4:	ldr	r5, [r0, r5, lsl #2]
 2c8:	lsr	r0, r6, #8
 2cc:	and	r0, r0, #255	; 0xff
 2d0:	ldr	ip, [ip, r0, lsl #2]
 2d4:	eor	ip, r5, ip
 2d8:	lsr	r0, r6, #16
 2dc:	and	r0, r0, #255	; 0xff
 2e0:	ldr	r1, [r1, r0, lsl #2]
 2e4:	eor	ip, ip, r1
 2e8:	lsr	r0, r6, #24
 2ec:	ldr	r3, [r3, r0, lsl #2]
 2f0:	eor	r5, ip, r3
 2f4:	sub	r2, r2, #32
 2f8:	b	e8 <coda_crc32+0xc4>
 2fc:	cmp	r2, #4
 300:	bcc	35c <coda_crc32+0x338>
 304:	add	r4, r4, #4
 308:	ldr	ip, [r4]
 30c:	eor	r5, r5, ip
 310:	ldr	r0, [pc, #996]	; 6fc <coda_crc32+0x6d8>
 314:	and	r3, r5, #255	; 0xff
 318:	ldr	r3, [r0, r3, lsl #2]
 31c:	ldr	r0, [pc, #956]	; 6e0 <coda_crc32+0x6bc>
 320:	lsr	r1, r5, #8
 324:	and	ip, r1, #255	; 0xff
 328:	ldr	ip, [r0, ip, lsl #2]
 32c:	eor	r1, r3, ip
 330:	ldr	ip, [pc, #956]	; 6f4 <coda_crc32+0x6d0>
 334:	lsr	r3, r5, #16
 338:	and	r3, r3, #255	; 0xff
 33c:	ldr	r3, [ip, r3, lsl #2]
 340:	eor	ip, r1, r3
 344:	ldr	r3, [pc, #924]	; 6e8 <coda_crc32+0x6c4>
 348:	lsr	r0, r5, #24
 34c:	ldr	r0, [r3, r0, lsl #2]
 350:	eor	r5, ip, r0
 354:	sub	r2, r2, #4
 358:	b	2fc <coda_crc32+0x2d8>
 35c:	add	ip, r4, #4
 360:	cmp	r2, #0
 364:	beq	390 <coda_crc32+0x36c>
 368:	mov	r0, ip
 36c:	add	ip, r0, #1
 370:	ldr	r3, [pc, #900]	; 6fc <coda_crc32+0x6d8>
 374:	ldrb	r0, [r0]
 378:	eor	r0, r0, r5, lsr #24
 37c:	ldr	r1, [r3, r0, lsl #2]
 380:	eor	r5, r1, r5, lsl #8
 384:	sub	r2, r2, #1
 388:	cmp	r2, #0
 38c:	bne	368 <coda_crc32+0x344>
 390:	mvn	ip, r5
 394:	lsr	r2, ip, #24
 398:	and	r0, r2, #255	; 0xff
 39c:	lsr	r1, ip, #8
 3a0:	and	r1, r1, #65280	; 0xff00
 3a4:	add	r0, r0, r1
 3a8:	and	r2, ip, #65280	; 0xff00
 3ac:	add	r0, r0, r2, lsl #8
 3b0:	add	r0, r0, ip, lsl #24
 3b4:	b	6b8 <coda_crc32+0x694>
 3b8:	mvn	r0, r0
 3bc:	and	r3, r1, #3
 3c0:	cmp	r3, #0
 3c4:	movne	r3, #1
 3c8:	moveq	r3, #0
 3cc:	mov	ip, #0
 3d0:	cmp	r2, #0
 3d4:	movne	ip, r3
 3d8:	moveq	ip, ip
 3dc:	cmp	ip, #0
 3e0:	beq	40c <coda_crc32+0x3e8>
 3e4:	mov	r3, r1
 3e8:	add	r1, r3, #1
 3ec:	ldr	ip, [pc, #760]	; 6ec <coda_crc32+0x6c8>
 3f0:	ldrb	r3, [r3]
 3f4:	eor	r3, r0, r3
 3f8:	and	r3, r3, #255	; 0xff
 3fc:	ldr	ip, [ip, r3, lsl #2]
 400:	eor	r0, ip, r0, lsr #8
 404:	sub	r2, r2, #1
 408:	b	3bc <coda_crc32+0x398>
 40c:	cmp	r2, #32
 410:	bcc	61c <coda_crc32+0x5f8>
 414:	add	r3, r1, #4
 418:	ldr	ip, [r1]
 41c:	eor	r7, r0, ip
 420:	ldr	r5, [pc, #712]	; 6f0 <coda_crc32+0x6cc>
 424:	and	ip, r7, #255	; 0xff
 428:	ldr	r4, [r5, ip, lsl #2]
 42c:	ldr	r0, [pc, #708]	; 6f8 <coda_crc32+0x6d4>
 430:	lsr	ip, r7, #8
 434:	and	ip, ip, #255	; 0xff
 438:	ldr	ip, [r0, ip, lsl #2]
 43c:	eor	r6, r4, ip
 440:	ldr	ip, [pc, #668]	; 6e4 <coda_crc32+0x6c0>
 444:	lsr	r4, r7, #16
 448:	and	r4, r4, #255	; 0xff
 44c:	ldr	r4, [ip, r4, lsl #2]
 450:	eor	r6, r6, r4
 454:	ldr	r4, [pc, #656]	; 6ec <coda_crc32+0x6c8>
 458:	lsr	r7, r7, #24
 45c:	ldr	r7, [r4, r7, lsl #2]
 460:	eor	r8, r6, r7
 464:	add	r7, r1, #8
 468:	ldr	r6, [r1, #4]
 46c:	eor	r6, r8, r6
 470:	and	r8, r6, #255	; 0xff
 474:	ldr	r9, [r5, r8, lsl #2]
 478:	lsr	r8, r6, #8
 47c:	and	r8, r8, #255	; 0xff
 480:	ldr	r8, [r0, r8, lsl #2]
 484:	eor	r9, r9, r8
 488:	lsr	r8, r6, #16
 48c:	and	r8, r8, #255	; 0xff
 490:	ldr	r8, [ip, r8, lsl #2]
 494:	eor	r8, r9, r8
 498:	lsr	r6, r6, #24
 49c:	ldr	r6, [r4, r6, lsl #2]
 4a0:	eor	r8, r8, r6
 4a4:	add	r6, r1, #12
 4a8:	ldr	r9, [r1, #8]
 4ac:	eor	r8, r8, r9
 4b0:	and	r9, r8, #255	; 0xff
 4b4:	ldr	sl, [r5, r9, lsl #2]
 4b8:	lsr	r9, r8, #8
 4bc:	and	r9, r9, #255	; 0xff
 4c0:	ldr	r9, [r0, r9, lsl #2]
 4c4:	eor	sl, sl, r9
 4c8:	lsr	r9, r8, #16
 4cc:	and	r9, r9, #255	; 0xff
 4d0:	ldr	r9, [ip, r9, lsl #2]
 4d4:	eor	r9, sl, r9
 4d8:	lsr	r8, r8, #24
 4dc:	ldr	r8, [r4, r8, lsl #2]
 4e0:	eor	r9, r9, r8
 4e4:	ldr	r8, [r1, #12]
 4e8:	eor	r8, r9, r8
 4ec:	and	r9, r8, #255	; 0xff
 4f0:	ldr	sl, [r5, r9, lsl #2]
 4f4:	lsr	r9, r8, #8
 4f8:	and	r9, r9, #255	; 0xff
 4fc:	ldr	r9, [r0, r9, lsl #2]
 500:	eor	sl, sl, r9
 504:	lsr	r9, r8, #16
 508:	and	r9, r9, #255	; 0xff
 50c:	ldr	r9, [ip, r9, lsl #2]
 510:	eor	r9, sl, r9
 514:	lsr	r8, r8, #24
 518:	ldr	r8, [r4, r8, lsl #2]
 51c:	eor	r8, r9, r8
 520:	ldr	r1, [r1, #16]
 524:	eor	r1, r8, r1
 528:	and	r8, r1, #255	; 0xff
 52c:	ldr	r9, [r5, r8, lsl #2]
 530:	lsr	r8, r1, #8
 534:	and	r8, r8, #255	; 0xff
 538:	ldr	r8, [r0, r8, lsl #2]
 53c:	eor	r9, r9, r8
 540:	lsr	r8, r1, #16
 544:	and	r8, r8, #255	; 0xff
 548:	ldr	r8, [ip, r8, lsl #2]
 54c:	eor	r8, r9, r8
 550:	lsr	r1, r1, #24
 554:	ldr	r1, [r4, r1, lsl #2]
 558:	eor	r1, r8, r1
 55c:	ldr	r3, [r3, #16]
 560:	eor	r1, r1, r3
 564:	and	r3, r1, #255	; 0xff
 568:	ldr	r3, [r5, r3, lsl #2]
 56c:	lsr	r8, r1, #8
 570:	and	r8, r8, #255	; 0xff
 574:	ldr	r8, [r0, r8, lsl #2]
 578:	eor	r8, r3, r8
 57c:	lsr	r3, r1, #16
 580:	and	r3, r3, #255	; 0xff
 584:	ldr	r3, [ip, r3, lsl #2]
 588:	eor	r3, r8, r3
 58c:	lsr	r1, r1, #24
 590:	ldr	r1, [r4, r1, lsl #2]
 594:	eor	r1, r3, r1
 598:	ldr	r3, [r7, #16]
 59c:	eor	r7, r1, r3
 5a0:	and	r3, r7, #255	; 0xff
 5a4:	ldr	r8, [r5, r3, lsl #2]
 5a8:	lsr	r3, r7, #8
 5ac:	and	r1, r3, #255	; 0xff
 5b0:	ldr	r1, [r0, r1, lsl #2]
 5b4:	eor	r3, r8, r1
 5b8:	lsr	r1, r7, #16
 5bc:	and	r1, r1, #255	; 0xff
 5c0:	ldr	r1, [ip, r1, lsl #2]
 5c4:	eor	r3, r3, r1
 5c8:	lsr	r1, r7, #24
 5cc:	ldr	r1, [r4, r1, lsl #2]
 5d0:	eor	r3, r3, r1
 5d4:	add	r1, r6, #20
 5d8:	ldr	r6, [r6, #16]
 5dc:	eor	r6, r3, r6
 5e0:	and	r3, r6, #255	; 0xff
 5e4:	ldr	r3, [r5, r3, lsl #2]
 5e8:	lsr	r5, r6, #8
 5ec:	and	r5, r5, #255	; 0xff
 5f0:	ldr	r0, [r0, r5, lsl #2]
 5f4:	eor	r0, r3, r0
 5f8:	lsr	r3, r6, #16
 5fc:	and	r3, r3, #255	; 0xff
 600:	ldr	r3, [ip, r3, lsl #2]
 604:	eor	r0, r0, r3
 608:	lsr	r3, r6, #24
 60c:	ldr	r3, [r4, r3, lsl #2]
 610:	eor	r0, r0, r3
 614:	sub	r2, r2, #32
 618:	b	40c <coda_crc32+0x3e8>
 61c:	cmp	r2, #4
 620:	bcc	680 <coda_crc32+0x65c>
 624:	mov	r3, r1
 628:	add	r1, r3, #4
 62c:	ldr	ip, [r3]
 630:	eor	r5, r0, ip
 634:	ldr	ip, [pc, #180]	; 6f0 <coda_crc32+0x6cc>
 638:	and	r3, r5, #255	; 0xff
 63c:	ldr	r4, [ip, r3, lsl #2]
 640:	ldr	r3, [pc, #176]	; 6f8 <coda_crc32+0x6d4>
 644:	lsr	ip, r5, #8
 648:	and	r0, ip, #255	; 0xff
 64c:	ldr	r0, [r3, r0, lsl #2]
 650:	eor	r0, r4, r0
 654:	ldr	ip, [pc, #136]	; 6e4 <coda_crc32+0x6c0>
 658:	lsr	r3, r5, #16
 65c:	and	r3, r3, #255	; 0xff
 660:	ldr	r3, [ip, r3, lsl #2]
 664:	eor	ip, r0, r3
 668:	ldr	r0, [pc, #124]	; 6ec <coda_crc32+0x6c8>
 66c:	lsr	r3, r5, #24
 670:	ldr	r3, [r0, r3, lsl #2]
 674:	eor	r0, ip, r3
 678:	sub	r2, r2, #4
 67c:	b	61c <coda_crc32+0x5f8>
 680:	cmp	r2, #0
 684:	beq	6b4 <coda_crc32+0x690>
 688:	mov	r3, r1
 68c:	add	r1, r3, #1
 690:	ldr	ip, [pc, #84]	; 6ec <coda_crc32+0x6c8>
 694:	ldrb	r3, [r3]
 698:	eor	r3, r0, r3
 69c:	and	r3, r3, #255	; 0xff
 6a0:	ldr	r3, [ip, r3, lsl #2]
 6a4:	eor	r0, r3, r0, lsr #8
 6a8:	sub	r2, r2, #1
 6ac:	cmp	r2, #0
 6b0:	bne	688 <coda_crc32+0x664>
 6b4:	mvn	r0, r0
 6b8:	ldr	r4, [sp, #8]
 6bc:	ldr	r5, [sp, #12]
 6c0:	ldr	r6, [sp, #16]
 6c4:	ldr	r7, [sp, #20]
 6c8:	ldr	r8, [sp, #24]
 6cc:	ldr	r9, [sp, #28]
 6d0:	ldr	sl, [sp, #32]
 6d4:	ldr	lr, [sp, #4]
 6d8:	add	sp, sp, #48	; 0x30
 6dc:	bx	lr
 6e0:	.word	0x00001400
 6e4:	.word	0x00000400
 6e8:	.word	0x00001c00
 6ec:	.word	0x00000000
 6f0:	.word	0x00000c00
 6f4:	.word	0x00001800
 6f8:	.word	0x00000800
 6fc:	.word	0x00001000

00000700 <gf2_matrix_times>:
 700:	mov	ip, sp
 704:	sub	sp, sp, #8
 708:	str	ip, [sp]
 70c:	str	lr, [sp, #4]
 710:	mov	r2, #0
 714:	cmp	r1, #0
 718:	beq	73c <gf2_matrix_times+0x3c>
 71c:	and	r3, r1, #1
 720:	cmp	r3, #0
 724:	beq	730 <gf2_matrix_times+0x30>
 728:	ldr	r3, [r0]
 72c:	eor	r2, r2, r3
 730:	lsr	r1, r1, #1
 734:	add	r0, r0, #4
 738:	b	714 <gf2_matrix_times+0x14>
 73c:	mov	r0, r2
 740:	ldr	lr, [sp, #4]
 744:	add	sp, sp, #8
 748:	bx	lr

0000074c <gf2_matrix_square>:
 74c:	mov	ip, sp
 750:	sub	sp, sp, #24
 754:	str	ip, [sp]
 758:	str	lr, [sp, #4]
 75c:	str	r4, [sp, #8]
 760:	str	r5, [sp, #12]
 764:	str	r6, [sp, #16]
 768:	mov	r4, r1
 76c:	mov	r5, r0
 770:	mov	r6, #0
 774:	ldr	r1, [r4, r6, lsl #2]
 778:	mov	r0, r4
 77c:	bl	700 <gf2_matrix_times>
 780:	str	r0, [r5, r6, lsl #2]
 784:	add	r6, r6, #1
 788:	cmp	r6, #32
 78c:	blt	774 <gf2_matrix_square+0x28>
 790:	ldr	r4, [sp, #8]
 794:	ldr	r5, [sp, #12]
 798:	ldr	r6, [sp, #16]
 79c:	ldr	lr, [sp, #4]
 7a0:	add	sp, sp, #24
 7a4:	bx	lr

000007a8 <crc32_combine_>:
 7a8:	mov	ip, sp
 7ac:	sub	sp, sp, #280	; 0x118
 7b0:	str	ip, [sp]
 7b4:	str	lr, [sp, #4]
 7b8:	str	r4, [sp, #8]
 7bc:	str	r5, [sp, #12]
 7c0:	str	r6, [sp, #16]
 7c4:	mov	r6, r2
 7c8:	mov	r5, r1
 7cc:	mov	r4, r0
 7d0:	cmp	r6, #0
 7d4:	ble	888 <crc32_combine_+0xe0>
 7d8:	movw	r3, #33568	; 0x8320
 7dc:	movt	r3, #60856	; 0xedb8
 7e0:	str	r3, [sp, #152]	; 0x98
 7e4:	mov	r0, #1
 7e8:	mov	r1, #1
 7ec:	add	ip, sp, #152	; 0x98
 7f0:	str	r0, [ip, r1, lsl #2]
 7f4:	lsl	r0, r0, #1
 7f8:	add	r1, r1, #1
 7fc:	cmp	r1, #32
 800:	blt	7ec <crc32_combine_+0x44>
 804:	add	r0, sp, #24
 808:	add	r1, sp, #152	; 0x98
 80c:	bl	74c <gf2_matrix_square>
 810:	add	r0, sp, #152	; 0x98
 814:	add	r1, sp, #24
 818:	bl	74c <gf2_matrix_square>
 81c:	add	r0, sp, #24
 820:	add	r1, sp, #152	; 0x98
 824:	bl	74c <gf2_matrix_square>
 828:	and	r2, r6, #1
 82c:	cmp	r2, #0
 830:	beq	844 <crc32_combine_+0x9c>
 834:	add	r0, sp, #24
 838:	mov	r1, r4
 83c:	bl	700 <gf2_matrix_times>
 840:	mov	r4, r0
 844:	asr	r6, r6, #1
 848:	cmp	r6, #0
 84c:	beq	884 <crc32_combine_+0xdc>
 850:	add	r0, sp, #152	; 0x98
 854:	add	r1, sp, #24
 858:	bl	74c <gf2_matrix_square>
 85c:	and	r2, r6, #1
 860:	cmp	r2, #0
 864:	beq	878 <crc32_combine_+0xd0>
 868:	add	r0, sp, #152	; 0x98
 86c:	mov	r1, r4
 870:	bl	700 <gf2_matrix_times>
 874:	mov	r4, r0
 878:	asr	r6, r6, #1
 87c:	cmp	r6, #0
 880:	bne	81c <crc32_combine_+0x74>
 884:	eor	r4, r4, r5
 888:	mov	r0, r4
 88c:	ldr	r4, [sp, #8]
 890:	ldr	r5, [sp, #12]
 894:	ldr	r6, [sp, #16]
 898:	ldr	lr, [sp, #4]
 89c:	add	sp, sp, #280	; 0x118
 8a0:	bx	lr

000008a4 <coda_crc32_combine>:
 8a4:	mov	ip, sp
 8a8:	sub	sp, sp, #8
 8ac:	str	ip, [sp]
 8b0:	str	lr, [sp, #4]
 8b4:	ldr	lr, [sp, #4]
 8b8:	add	sp, sp, #8
 8bc:	b	7a8 <crc32_combine_>

000008c0 <coda_crc32_combine64>:
 8c0:	mov	ip, sp
 8c4:	sub	sp, sp, #8
 8c8:	str	ip, [sp]
 8cc:	str	lr, [sp, #4]
 8d0:	ldr	lr, [sp, #4]
 8d4:	add	sp, sp, #8
 8d8:	b	7a8 <crc32_combine_>
