
../compcert-repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010ce8 <.init>:
   10ce8:	push	{r3, lr}
   10cec:	bl	10ff8 <_start@@Base+0x3c>
   10cf0:	pop	{r3, pc}

Disassembly of section .plt:

00010cf4 <strcmp@plt-0x14>:
   10cf4:	push	{lr}		; (str lr, [sp, #-4]!)
   10cf8:	ldr	lr, [pc, #4]	; 10d04 <strcmp@plt-0x4>
   10cfc:	add	lr, pc, lr
   10d00:	ldr	pc, [lr, #8]!
   10d04:	strdeq	r2, [r1], -ip

00010d08 <strcmp@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #764]!	; 0x2fc

00010d14 <printf@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d20 <fopen@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #748]!	; 0x2ec

00010d2c <free@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #740]!	; 0x2e4

00010d38 <fgets@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #732]!	; 0x2dc

00010d44 <memcpy@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #724]!	; 0x2d4

00010d50 <stpcpy@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #716]!	; 0x2cc

00010d5c <realloc@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #708]!	; 0x2c4

00010d68 <strcpy@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #700]!	; 0x2bc

00010d74 <puts@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #692]!	; 0x2b4

00010d80 <malloc@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #73728	; 0x12000
   10d88:	ldr	pc, [ip, #684]!	; 0x2ac

00010d8c <__libc_start_main@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #73728	; 0x12000
   10d94:	ldr	pc, [ip, #676]!	; 0x2a4

00010d98 <__gmon_start__@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #73728	; 0x12000
   10da0:	ldr	pc, [ip, #668]!	; 0x29c

00010da4 <strlen@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #73728	; 0x12000
   10dac:	ldr	pc, [ip, #660]!	; 0x294

00010db0 <putchar@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #73728	; 0x12000
   10db8:	ldr	pc, [ip, #652]!	; 0x28c

00010dbc <fclose@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #73728	; 0x12000
   10dc4:	ldr	pc, [ip, #644]!	; 0x284

00010dc8 <strtok@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #73728	; 0x12000
   10dd0:	ldr	pc, [ip, #636]!	; 0x27c

00010dd4 <abort@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #73728	; 0x12000
   10ddc:	ldr	pc, [ip, #628]!	; 0x274

Disassembly of section .text:

00010de0 <main@@Base>:
   10de0:	movw	r0, #8096	; 0x1fa0
   10de4:	movt	r0, #1
   10de8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10dec:	strd	r6, [sp, #8]
   10df0:	str	r8, [sp, #16]
   10df4:	str	lr, [sp, #20]
   10df8:	sub	sp, sp, #144	; 0x90
   10dfc:	bl	10d74 <puts@plt>
   10e00:	movw	ip, #8056	; 0x1f78
   10e04:	movt	ip, #1
   10e08:	ldrd	r0, [ip]
   10e0c:	add	r6, sp, #44	; 0x2c
   10e10:	add	r7, sp, #4
   10e14:	ldrd	r2, [ip, #8]
   10e18:	ldrd	r4, [ip, #16]
   10e1c:	strd	r0, [sp, #4]
   10e20:	ldrd	r0, [ip, #24]
   10e24:	strd	r2, [sp, #12]
   10e28:	ldrd	r2, [ip, #32]
   10e2c:	strd	r4, [sp, #20]
   10e30:	strd	r0, [sp, #28]
   10e34:	strd	r2, [sp, #36]	; 0x24
   10e38:	bl	1199c <bst_nova@@Base>
   10e3c:	mov	r5, r0
   10e40:	ldr	r1, [r7], #4
   10e44:	mov	r0, r5
   10e48:	bl	11ba4 <bst_insere@@Base>
   10e4c:	cmp	r6, r7
   10e50:	bne	10e40 <main@@Base+0x60>
   10e54:	ldr	r0, [r5]
   10e58:	movw	r4, #8140	; 0x1fcc
   10e5c:	movt	r4, #1
   10e60:	bl	11dd0 <bst_altura@@Base>
   10e64:	mov	r1, r0
   10e68:	movw	r0, #8100	; 0x1fa4
   10e6c:	movt	r0, #1
   10e70:	mov	r8, #0
   10e74:	bl	10d14 <printf@plt>
   10e78:	mov	r0, r5
   10e7c:	bl	11ec4 <bst_imprime@@Base>
   10e80:	movw	r0, #8120	; 0x1fb8
   10e84:	movt	r0, #1
   10e88:	bl	10d74 <puts@plt>
   10e8c:	bl	110ac <avl_nova@@Base>
   10e90:	mov	r5, r0
   10e94:	movw	r1, #8124	; 0x1fbc
   10e98:	movt	r1, #1
   10e9c:	movw	r0, #8128	; 0x1fc0
   10ea0:	movt	r0, #1
   10ea4:	bl	10d20 <fopen@plt>
   10ea8:	mov	r7, r0
   10eac:	b	10ef4 <main@@Base+0x114>
   10eb0:	bl	10dc8 <strtok@plt>
   10eb4:	mov	r1, r0
   10eb8:	mov	r0, r6
   10ebc:	bl	10d68 <strcpy@plt>
   10ec0:	mov	r1, r4
   10ec4:	mov	r0, #0
   10ec8:	bl	10dc8 <strtok@plt>
   10ecc:	mov	r1, r0
   10ed0:	mov	r0, r6
   10ed4:	bl	10d50 <stpcpy@plt>
   10ed8:	sub	r0, r0, r6
   10edc:	add	r3, sp, #144	; 0x90
   10ee0:	add	r3, r3, r0
   10ee4:	mov	r1, r6
   10ee8:	mov	r0, r5
   10eec:	strb	r8, [r3, #-101]	; 0xffffff9b
   10ef0:	bl	1152c <avl_insere@@Base>
   10ef4:	mov	r1, #100	; 0x64
   10ef8:	mov	r2, r7
   10efc:	mov	r0, r6
   10f00:	bl	10d38 <fgets@plt>
   10f04:	cmp	r0, #0
   10f08:	mov	r1, r4
   10f0c:	mov	r0, r6
   10f10:	bne	10eb0 <main@@Base+0xd0>
   10f14:	mov	r0, r7
   10f18:	bl	10dbc <fclose@plt>
   10f1c:	movw	r1, #8144	; 0x1fd0
   10f20:	movt	r1, #1
   10f24:	mov	r0, r5
   10f28:	bl	11304 <avl_pesquisa@@Base>
   10f2c:	subs	r3, r0, #0
   10f30:	beq	10f48 <main@@Base+0x168>
   10f34:	movw	r0, #8156	; 0x1fdc
   10f38:	movt	r0, #1
   10f3c:	ldr	r1, [r3]
   10f40:	ldr	r2, [r3, #16]
   10f44:	bl	10d14 <printf@plt>
   10f48:	movw	r1, #8168	; 0x1fe8
   10f4c:	movt	r1, #1
   10f50:	mov	r0, r5
   10f54:	bl	11304 <avl_pesquisa@@Base>
   10f58:	subs	r3, r0, #0
   10f5c:	beq	10f74 <main@@Base+0x194>
   10f60:	movw	r0, #8156	; 0x1fdc
   10f64:	movt	r0, #1
   10f68:	ldr	r1, [r3]
   10f6c:	ldr	r2, [r3, #16]
   10f70:	bl	10d14 <printf@plt>
   10f74:	mov	r0, r5
   10f78:	movw	r1, #8176	; 0x1ff0
   10f7c:	movt	r1, #1
   10f80:	bl	11304 <avl_pesquisa@@Base>
   10f84:	subs	r3, r0, #0
   10f88:	beq	10fa0 <main@@Base+0x1c0>
   10f8c:	movw	r0, #8156	; 0x1fdc
   10f90:	movt	r0, #1
   10f94:	ldr	r1, [r3]
   10f98:	ldr	r2, [r3, #16]
   10f9c:	bl	10d14 <printf@plt>
   10fa0:	mov	r0, #0
   10fa4:	add	sp, sp, #144	; 0x90
   10fa8:	ldrd	r4, [sp]
   10fac:	ldrd	r6, [sp, #8]
   10fb0:	ldr	r8, [sp, #16]
   10fb4:	add	sp, sp, #20
   10fb8:	pop	{pc}		; (ldr pc, [sp], #4)

00010fbc <_start@@Base>:
   10fbc:	mov	fp, #0
   10fc0:	mov	lr, #0
   10fc4:	pop	{r1}		; (ldr r1, [sp], #4)
   10fc8:	mov	r2, sp
   10fcc:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd0:	push	{r0}		; (str r0, [sp, #-4]!)
   10fd4:	ldr	ip, [pc, #16]	; 10fec <_start@@Base+0x30>
   10fd8:	push	{ip}		; (str ip, [sp, #-4]!)
   10fdc:	ldr	r0, [pc, #12]	; 10ff0 <_start@@Base+0x34>
   10fe0:	ldr	r3, [pc, #12]	; 10ff4 <_start@@Base+0x38>
   10fe4:	bl	10d8c <__libc_start_main@plt>
   10fe8:	bl	10dd4 <abort@plt>
   10fec:	andeq	r1, r1, r8, ror #30
   10ff0:	andeq	r0, r1, r0, ror #27
   10ff4:	andeq	r1, r1, r8, lsl #30
   10ff8:	ldr	r3, [pc, #20]	; 11014 <_start@@Base+0x58>
   10ffc:	ldr	r2, [pc, #20]	; 11018 <_start@@Base+0x5c>
   11000:	add	r3, pc, r3
   11004:	ldr	r2, [r3, r2]
   11008:	cmp	r2, #0
   1100c:	bxeq	lr
   11010:	b	10d98 <__gmon_start__@plt>
   11014:	strdeq	r1, [r1], -r8
   11018:	andeq	r0, r0, r4, asr r0
   1101c:	ldr	r0, [pc, #24]	; 1103c <_start@@Base+0x80>
   11020:	ldr	r3, [pc, #24]	; 11040 <_start@@Base+0x84>
   11024:	cmp	r3, r0
   11028:	bxeq	lr
   1102c:	ldr	r3, [pc, #16]	; 11044 <_start@@Base+0x88>
   11030:	cmp	r3, #0
   11034:	bxeq	lr
   11038:	bx	r3
   1103c:	andeq	r3, r2, r0, rrx
   11040:	andeq	r3, r2, r0, rrx
   11044:	andeq	r0, r0, r0
   11048:	ldr	r0, [pc, #36]	; 11074 <_start@@Base+0xb8>
   1104c:	ldr	r1, [pc, #36]	; 11078 <_start@@Base+0xbc>
   11050:	sub	r1, r1, r0
   11054:	asr	r1, r1, #2
   11058:	add	r1, r1, r1, lsr #31
   1105c:	asrs	r1, r1, #1
   11060:	bxeq	lr
   11064:	ldr	r3, [pc, #16]	; 1107c <_start@@Base+0xc0>
   11068:	cmp	r3, #0
   1106c:	bxeq	lr
   11070:	bx	r3
   11074:	andeq	r3, r2, r0, rrx
   11078:	andeq	r3, r2, r0, rrx
   1107c:	andeq	r0, r0, r0
   11080:	push	{r4, lr}
   11084:	ldr	r4, [pc, #24]	; 110a4 <_start@@Base+0xe8>
   11088:	ldrb	r3, [r4]
   1108c:	cmp	r3, #0
   11090:	popne	{r4, pc}
   11094:	bl	1101c <_start@@Base+0x60>
   11098:	mov	r3, #1
   1109c:	strb	r3, [r4]
   110a0:	pop	{r4, pc}
   110a4:	andeq	r3, r2, r0, rrx
   110a8:	b	11048 <_start@@Base+0x8c>

000110ac <avl_nova@@Base>:
   110ac:	mov	r0, #4
   110b0:	str	r4, [sp, #-8]!
   110b4:	str	lr, [sp, #4]
   110b8:	bl	10d80 <malloc@plt>
   110bc:	cmp	r0, #0
   110c0:	ldr	r4, [sp]
   110c4:	add	sp, sp, #4
   110c8:	movne	r3, #0
   110cc:	strne	r3, [r0]
   110d0:	pop	{pc}		; (ldr pc, [sp], #4)

000110d4 <avl_min@@Base>:
   110d4:	cmp	r0, #0
   110d8:	beq	110f8 <avl_min@@Base+0x24>
   110dc:	ldr	r2, [r0]
   110e0:	b	110e8 <avl_min@@Base+0x14>
   110e4:	mov	r2, r3
   110e8:	ldr	r3, [r2, #4]
   110ec:	cmp	r3, #0
   110f0:	bne	110e4 <avl_min@@Base+0x10>
   110f4:	ldr	r0, [r2]
   110f8:	bx	lr

000110fc <avl_max@@Base>:
   110fc:	cmp	r0, #0
   11100:	beq	11120 <avl_max@@Base+0x24>
   11104:	ldr	r2, [r0]
   11108:	b	11110 <avl_max@@Base+0x14>
   1110c:	mov	r2, r3
   11110:	ldr	r3, [r2, #8]
   11114:	cmp	r3, #0
   11118:	bne	1110c <avl_max@@Base+0x10>
   1111c:	ldr	r0, [r2]
   11120:	bx	lr

00011124 <avl_altura@@Base>:
   11124:	cmp	r0, #0
   11128:	ldrne	r0, [r0, #12]
   1112c:	mvneq	r0, #0
   11130:	bx	lr

00011134 <max@@Base>:
   11134:	cmp	r1, r0
   11138:	movge	r0, r1
   1113c:	bx	lr

00011140 <avl_novo_no@@Base>:
   11140:	strd	r4, [sp, #-16]!
   11144:	mov	r5, r0
   11148:	mov	r0, #20
   1114c:	str	r6, [sp, #8]
   11150:	str	lr, [sp, #12]
   11154:	bl	10d80 <malloc@plt>
   11158:	mov	r4, r0
   1115c:	mov	r0, r5
   11160:	bl	10da4 <strlen@plt>
   11164:	add	r6, r0, #1
   11168:	mov	r0, r6
   1116c:	bl	10d80 <malloc@plt>
   11170:	mov	r2, r6
   11174:	mov	r1, r5
   11178:	str	r0, [r4]
   1117c:	bl	10d44 <memcpy@plt>
   11180:	mov	r3, #0
   11184:	mov	r2, #1
   11188:	ldr	r6, [sp, #8]
   1118c:	mov	r0, r4
   11190:	str	r3, [r4, #4]
   11194:	str	r3, [r4, #8]
   11198:	str	r3, [r4, #12]
   1119c:	str	r2, [r4, #16]
   111a0:	ldrd	r4, [sp]
   111a4:	add	sp, sp, #12
   111a8:	pop	{pc}		; (ldr pc, [sp], #4)

000111ac <roda_direita@@Base>:
   111ac:	ldr	r2, [r0, #4]
   111b0:	ldr	r3, [r2, #8]
   111b4:	str	r0, [r2, #8]
   111b8:	cmp	r3, #0
   111bc:	str	r3, [r0, #4]
   111c0:	ldrne	r1, [r3, #12]
   111c4:	mvneq	r1, #0
   111c8:	ldr	r3, [r0, #8]
   111cc:	ldr	ip, [r2, #4]
   111d0:	cmp	r3, #0
   111d4:	ldrne	r3, [r3, #12]
   111d8:	mvneq	r3, #0
   111dc:	cmp	r3, r1
   111e0:	movlt	r3, r1
   111e4:	cmp	ip, #0
   111e8:	add	r3, r3, #1
   111ec:	mvneq	r1, #0
   111f0:	str	r3, [r0, #12]
   111f4:	mov	r0, r2
   111f8:	ldrne	r1, [ip, #12]
   111fc:	cmp	r3, r1
   11200:	movlt	r3, r1
   11204:	add	r3, r3, #1
   11208:	str	r3, [r2, #12]
   1120c:	bx	lr

00011210 <roda_esquerda@@Base>:
   11210:	ldr	r2, [r0, #8]
   11214:	ldr	r1, [r2, #4]
   11218:	str	r0, [r2, #4]
   1121c:	ldr	r3, [r0, #4]
   11220:	str	r1, [r0, #8]
   11224:	cmp	r3, #0
   11228:	ldrne	ip, [r3, #12]
   1122c:	mvneq	ip, #0
   11230:	cmp	r1, #0
   11234:	mvneq	r3, #0
   11238:	ldrne	r3, [r1, #12]
   1123c:	ldr	r1, [r2, #8]
   11240:	cmp	r3, ip
   11244:	movlt	r3, ip
   11248:	add	r3, r3, #1
   1124c:	cmp	r1, #0
   11250:	mvneq	r1, #0
   11254:	str	r3, [r0, #12]
   11258:	mov	r0, r2
   1125c:	ldrne	r1, [r1, #12]
   11260:	cmp	r3, r1
   11264:	movlt	r3, r1
   11268:	add	r3, r3, #1
   1126c:	str	r3, [r2, #12]
   11270:	bx	lr

00011274 <calc_balanceamento@@Base>:
   11274:	cmp	r0, #0
   11278:	beq	112a0 <calc_balanceamento@@Base+0x2c>
   1127c:	ldr	r3, [r0, #8]
   11280:	cmp	r3, #0
   11284:	ldrne	r2, [r3, #12]
   11288:	mvneq	r2, #0
   1128c:	ldr	r3, [r0, #4]
   11290:	cmp	r3, #0
   11294:	ldrne	r0, [r3, #12]
   11298:	mvneq	r0, #0
   1129c:	sub	r0, r2, r0
   112a0:	bx	lr

000112a4 <avl_pesquisa_impl@@Base>:
   112a4:	strd	r4, [sp, #-16]!
   112a8:	subs	r4, r0, #0
   112ac:	movne	r5, r1
   112b0:	str	r6, [sp, #8]
   112b4:	str	lr, [sp, #12]
   112b8:	bne	112d0 <avl_pesquisa_impl@@Base+0x2c>
   112bc:	b	112f0 <avl_pesquisa_impl@@Base+0x4c>
   112c0:	beq	112f0 <avl_pesquisa_impl@@Base+0x4c>
   112c4:	ldr	r4, [r4, #8]
   112c8:	cmp	r4, #0
   112cc:	beq	112f0 <avl_pesquisa_impl@@Base+0x4c>
   112d0:	mov	r0, r5
   112d4:	ldr	r1, [r4]
   112d8:	bl	10d08 <strcmp@plt>
   112dc:	cmp	r0, #0
   112e0:	bge	112c0 <avl_pesquisa_impl@@Base+0x1c>
   112e4:	ldr	r4, [r4, #4]
   112e8:	cmp	r4, #0
   112ec:	bne	112d0 <avl_pesquisa_impl@@Base+0x2c>
   112f0:	mov	r0, r4
   112f4:	ldrd	r4, [sp]
   112f8:	ldr	r6, [sp, #8]
   112fc:	add	sp, sp, #12
   11300:	pop	{pc}		; (ldr pc, [sp], #4)

00011304 <avl_pesquisa@@Base>:
   11304:	cmp	r1, #0
   11308:	cmpne	r0, #0
   1130c:	beq	11318 <avl_pesquisa@@Base+0x14>
   11310:	ldr	r0, [r0]
   11314:	b	112a4 <avl_pesquisa_impl@@Base>
   11318:	mov	r0, #0
   1131c:	bx	lr

00011320 <avl_insere_impl@@Base>:
   11320:	strd	r4, [sp, #-16]!
   11324:	subs	r4, r0, #0
   11328:	str	r6, [sp, #8]
   1132c:	str	lr, [sp, #12]
   11330:	beq	1146c <avl_insere_impl@@Base+0x14c>
   11334:	mov	r0, r1
   11338:	mov	r5, r1
   1133c:	ldr	r1, [r4]
   11340:	bl	10d08 <strcmp@plt>
   11344:	cmp	r0, #0
   11348:	blt	11450 <avl_insere_impl@@Base+0x130>
   1134c:	beq	113f0 <avl_insere_impl@@Base+0xd0>
   11350:	mov	r1, r5
   11354:	ldr	r0, [r4, #8]
   11358:	bl	11320 <avl_insere_impl@@Base>
   1135c:	ldr	r2, [r4, #4]
   11360:	str	r0, [r4, #8]
   11364:	cmp	r2, #0
   11368:	beq	114a0 <avl_insere_impl@@Base+0x180>
   1136c:	cmp	r0, #0
   11370:	ldr	r3, [r2, #12]
   11374:	beq	114d4 <avl_insere_impl@@Base+0x1b4>
   11378:	ldr	r1, [r0, #12]
   1137c:	cmp	r3, r1
   11380:	movlt	r3, r1
   11384:	add	r3, r3, #1
   11388:	str	r3, [r4, #12]
   1138c:	ldr	r3, [r0, #12]
   11390:	ldr	r1, [r2, #12]
   11394:	sub	r3, r3, r1
   11398:	cmp	r3, #1
   1139c:	bgt	11410 <avl_insere_impl@@Base+0xf0>
   113a0:	cmn	r3, #1
   113a4:	bge	113fc <avl_insere_impl@@Base+0xdc>
   113a8:	cmp	r2, #0
   113ac:	beq	113d8 <avl_insere_impl@@Base+0xb8>
   113b0:	ldmib	r2, {r1, r3}
   113b4:	cmp	r3, #0
   113b8:	beq	11514 <avl_insere_impl@@Base+0x1f4>
   113bc:	cmp	r1, #0
   113c0:	ldr	r3, [r3, #12]
   113c4:	beq	1150c <avl_insere_impl@@Base+0x1ec>
   113c8:	ldr	r1, [r1, #12]
   113cc:	sub	r3, r3, r1
   113d0:	cmp	r3, #0
   113d4:	bgt	11490 <avl_insere_impl@@Base+0x170>
   113d8:	mov	r0, r4
   113dc:	ldrd	r4, [sp]
   113e0:	ldr	r6, [sp, #8]
   113e4:	ldr	lr, [sp, #12]
   113e8:	add	sp, sp, #16
   113ec:	b	111ac <roda_direita@@Base>
   113f0:	ldr	r3, [r4, #16]
   113f4:	add	r3, r3, #1
   113f8:	str	r3, [r4, #16]
   113fc:	mov	r0, r4
   11400:	ldrd	r4, [sp]
   11404:	ldr	r6, [sp, #8]
   11408:	add	sp, sp, #12
   1140c:	pop	{pc}		; (ldr pc, [sp], #4)
   11410:	ldrd	r2, [r0, #4]
   11414:	cmp	r3, #0
   11418:	beq	114f4 <avl_insere_impl@@Base+0x1d4>
   1141c:	cmp	r2, #0
   11420:	ldr	r3, [r3, #12]
   11424:	beq	11504 <avl_insere_impl@@Base+0x1e4>
   11428:	ldr	r2, [r2, #12]
   1142c:	sub	r3, r3, r2
   11430:	cmp	r3, #0
   11434:	blt	11484 <avl_insere_impl@@Base+0x164>
   11438:	mov	r0, r4
   1143c:	ldrd	r4, [sp]
   11440:	ldr	r6, [sp, #8]
   11444:	ldr	lr, [sp, #12]
   11448:	add	sp, sp, #16
   1144c:	b	11210 <roda_esquerda@@Base>
   11450:	mov	r1, r5
   11454:	ldr	r0, [r4, #4]
   11458:	bl	11320 <avl_insere_impl@@Base>
   1145c:	mov	r2, r0
   11460:	ldr	r0, [r4, #8]
   11464:	str	r2, [r4, #4]
   11468:	b	11364 <avl_insere_impl@@Base+0x44>
   1146c:	mov	r0, r1
   11470:	ldrd	r4, [sp]
   11474:	ldr	r6, [sp, #8]
   11478:	ldr	lr, [sp, #12]
   1147c:	add	sp, sp, #16
   11480:	b	11140 <avl_novo_no@@Base>
   11484:	bl	111ac <roda_direita@@Base>
   11488:	str	r0, [r4, #8]
   1148c:	b	11438 <avl_insere_impl@@Base+0x118>
   11490:	mov	r0, r2
   11494:	bl	11210 <roda_esquerda@@Base>
   11498:	str	r0, [r4, #4]
   1149c:	b	113d8 <avl_insere_impl@@Base+0xb8>
   114a0:	cmp	r0, #0
   114a4:	beq	11524 <avl_insere_impl@@Base+0x204>
   114a8:	ldr	r3, [r0, #12]
   114ac:	orr	r3, r3, r3, asr #31
   114b0:	add	r3, r3, #1
   114b4:	str	r3, [r4, #12]
   114b8:	ldr	r3, [r0, #12]
   114bc:	add	r3, r3, #1
   114c0:	cmp	r3, #1
   114c4:	bgt	11410 <avl_insere_impl@@Base+0xf0>
   114c8:	cmn	r3, #1
   114cc:	bge	113fc <avl_insere_impl@@Base+0xdc>
   114d0:	b	113d8 <avl_insere_impl@@Base+0xb8>
   114d4:	orr	r3, r3, r3, asr #31
   114d8:	add	r3, r3, #1
   114dc:	str	r3, [r4, #12]
   114e0:	ldr	r3, [r2, #12]
   114e4:	mvn	r3, r3
   114e8:	cmp	r3, #1
   114ec:	bgt	11438 <avl_insere_impl@@Base+0x118>
   114f0:	b	113a0 <avl_insere_impl@@Base+0x80>
   114f4:	cmp	r2, #0
   114f8:	beq	11438 <avl_insere_impl@@Base+0x118>
   114fc:	mvn	r3, #0
   11500:	b	11428 <avl_insere_impl@@Base+0x108>
   11504:	mvn	r2, #0
   11508:	b	1142c <avl_insere_impl@@Base+0x10c>
   1150c:	mvn	r1, #0
   11510:	b	113cc <avl_insere_impl@@Base+0xac>
   11514:	cmp	r1, #0
   11518:	beq	113d8 <avl_insere_impl@@Base+0xb8>
   1151c:	mvn	r3, #0
   11520:	b	113c8 <avl_insere_impl@@Base+0xa8>
   11524:	str	r0, [r4, #12]
   11528:	b	113fc <avl_insere_impl@@Base+0xdc>

0001152c <avl_insere@@Base>:
   1152c:	clz	r3, r1
   11530:	cmp	r0, #0
   11534:	strd	r4, [sp, #-16]!
   11538:	lsr	r3, r3, #5
   1153c:	moveq	r4, #1
   11540:	str	r6, [sp, #8]
   11544:	str	lr, [sp, #12]
   11548:	movne	r4, r3
   1154c:	cmp	r4, #0
   11550:	bne	11578 <avl_insere@@Base+0x4c>
   11554:	mov	r5, r0
   11558:	ldr	r0, [r0]
   1155c:	bl	11320 <avl_insere_impl@@Base>
   11560:	str	r0, [r5]
   11564:	mov	r0, r4
   11568:	ldrd	r4, [sp]
   1156c:	ldr	r6, [sp, #8]
   11570:	add	sp, sp, #12
   11574:	pop	{pc}		; (ldr pc, [sp], #4)
   11578:	mvn	r4, #0
   1157c:	b	11564 <avl_insere@@Base+0x38>

00011580 <avl_no_valormin@@Base>:
   11580:	b	11588 <avl_no_valormin@@Base+0x8>
   11584:	mov	r0, r3
   11588:	ldr	r3, [r0, #4]
   1158c:	cmp	r3, #0
   11590:	bne	11584 <avl_no_valormin@@Base+0x4>
   11594:	bx	lr

00011598 <avl_no_valormax@@Base>:
   11598:	b	115a0 <avl_no_valormax@@Base+0x8>
   1159c:	mov	r0, r3
   115a0:	ldr	r3, [r0, #8]
   115a4:	cmp	r3, #0
   115a8:	bne	1159c <avl_no_valormax@@Base+0x4>
   115ac:	bx	lr

000115b0 <avl_remove_impl@@Base>:
   115b0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   115b4:	subs	r5, r0, #0
   115b8:	strd	r6, [sp, #8]
   115bc:	str	r8, [sp, #16]
   115c0:	str	lr, [sp, #20]
   115c4:	beq	116e4 <avl_remove_impl@@Base+0x134>
   115c8:	ldr	r7, [r5]
   115cc:	mov	r0, r1
   115d0:	mov	r6, r1
   115d4:	mov	r1, r7
   115d8:	bl	10d08 <strcmp@plt>
   115dc:	cmp	r0, #0
   115e0:	blt	11744 <avl_remove_impl@@Base+0x194>
   115e4:	ldr	r4, [r5, #8]
   115e8:	bne	1168c <avl_remove_impl@@Base+0xdc>
   115ec:	ldr	r6, [r5, #4]
   115f0:	cmp	r6, #0
   115f4:	beq	117c4 <avl_remove_impl@@Base+0x214>
   115f8:	cmp	r4, #0
   115fc:	bne	11648 <avl_remove_impl@@Base+0x98>
   11600:	ldr	r0, [r6]
   11604:	bl	10da4 <strlen@plt>
   11608:	add	r1, r0, #1
   1160c:	mov	r0, r7
   11610:	bl	10d5c <realloc@plt>
   11614:	str	r0, [r5]
   11618:	ldr	r1, [r6]
   1161c:	bl	10d68 <strcpy@plt>
   11620:	ldrd	r0, [r6]
   11624:	ldrd	r2, [r6, #8]
   11628:	stmib	r5, {r1, r2, r3}
   1162c:	bl	10d2c <free@plt>
   11630:	mov	r0, r6
   11634:	bl	10d2c <free@plt>
   11638:	ldr	r2, [r5, #4]
   1163c:	ldr	r0, [r5, #8]
   11640:	b	116a0 <avl_remove_impl@@Base+0xf0>
   11644:	mov	r4, r3
   11648:	ldr	r3, [r4, #4]
   1164c:	cmp	r3, #0
   11650:	bne	11644 <avl_remove_impl@@Base+0x94>
   11654:	ldr	r0, [r4]
   11658:	bl	10da4 <strlen@plt>
   1165c:	add	r1, r0, #1
   11660:	mov	r0, r7
   11664:	bl	10d5c <realloc@plt>
   11668:	str	r0, [r5]
   1166c:	ldr	r1, [r4]
   11670:	bl	10d68 <strcpy@plt>
   11674:	ldr	r1, [r4]
   11678:	ldr	r0, [r5, #8]
   1167c:	bl	115b0 <avl_remove_impl@@Base>
   11680:	str	r0, [r5, #8]
   11684:	ldr	r2, [r5, #4]
   11688:	b	116a0 <avl_remove_impl@@Base+0xf0>
   1168c:	mov	r1, r6
   11690:	mov	r0, r4
   11694:	bl	115b0 <avl_remove_impl@@Base>
   11698:	ldr	r2, [r5, #4]
   1169c:	str	r0, [r5, #8]
   116a0:	cmp	r2, #0
   116a4:	beq	11800 <avl_remove_impl@@Base+0x250>
   116a8:	cmp	r0, #0
   116ac:	ldr	r3, [r2, #12]
   116b0:	beq	117e0 <avl_remove_impl@@Base+0x230>
   116b4:	ldr	r1, [r0, #12]
   116b8:	cmp	r3, r1
   116bc:	movlt	r3, r1
   116c0:	add	r3, r3, #1
   116c4:	str	r3, [r5, #12]
   116c8:	ldr	r3, [r0, #12]
   116cc:	ldr	r1, [r2, #12]
   116d0:	sub	r3, r3, r1
   116d4:	cmp	r3, #1
   116d8:	bgt	11700 <avl_remove_impl@@Base+0x150>
   116dc:	cmn	r3, #1
   116e0:	blt	11760 <avl_remove_impl@@Base+0x1b0>
   116e4:	mov	r4, r5
   116e8:	mov	r0, r4
   116ec:	ldrd	r4, [sp]
   116f0:	ldrd	r6, [sp, #8]
   116f4:	ldr	r8, [sp, #16]
   116f8:	add	sp, sp, #20
   116fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11700:	ldrd	r2, [r0, #4]
   11704:	cmp	r3, #0
   11708:	beq	1183c <avl_remove_impl@@Base+0x28c>
   1170c:	cmp	r2, #0
   11710:	ldr	r3, [r3, #12]
   11714:	beq	11834 <avl_remove_impl@@Base+0x284>
   11718:	ldr	r2, [r2, #12]
   1171c:	sub	r3, r3, r2
   11720:	cmp	r3, #0
   11724:	blt	117b8 <avl_remove_impl@@Base+0x208>
   11728:	mov	r0, r5
   1172c:	ldrd	r4, [sp]
   11730:	ldrd	r6, [sp, #8]
   11734:	ldr	r8, [sp, #16]
   11738:	ldr	lr, [sp, #20]
   1173c:	add	sp, sp, #24
   11740:	b	11210 <roda_esquerda@@Base>
   11744:	mov	r1, r6
   11748:	ldr	r0, [r5, #4]
   1174c:	bl	115b0 <avl_remove_impl@@Base>
   11750:	mov	r2, r0
   11754:	ldr	r0, [r5, #8]
   11758:	str	r2, [r5, #4]
   1175c:	b	116a0 <avl_remove_impl@@Base+0xf0>
   11760:	cmp	r2, #0
   11764:	beq	1179c <avl_remove_impl@@Base+0x1ec>
   11768:	ldmib	r2, {r1, r3}
   1176c:	cmp	r3, #0
   11770:	beq	11854 <avl_remove_impl@@Base+0x2a4>
   11774:	cmp	r1, #0
   11778:	ldr	r3, [r3, #12]
   1177c:	beq	1184c <avl_remove_impl@@Base+0x29c>
   11780:	ldr	r1, [r1, #12]
   11784:	sub	r3, r3, r1
   11788:	cmp	r3, #0
   1178c:	ble	1179c <avl_remove_impl@@Base+0x1ec>
   11790:	mov	r0, r2
   11794:	bl	11210 <roda_esquerda@@Base>
   11798:	str	r0, [r5, #4]
   1179c:	mov	r0, r5
   117a0:	ldrd	r4, [sp]
   117a4:	ldrd	r6, [sp, #8]
   117a8:	ldr	r8, [sp, #16]
   117ac:	ldr	lr, [sp, #20]
   117b0:	add	sp, sp, #24
   117b4:	b	111ac <roda_direita@@Base>
   117b8:	bl	111ac <roda_direita@@Base>
   117bc:	str	r0, [r5, #8]
   117c0:	b	11728 <avl_remove_impl@@Base+0x178>
   117c4:	cmp	r4, #0
   117c8:	bne	1186c <avl_remove_impl@@Base+0x2bc>
   117cc:	mov	r0, r7
   117d0:	bl	10d2c <free@plt>
   117d4:	mov	r0, r5
   117d8:	bl	10d2c <free@plt>
   117dc:	b	116e8 <avl_remove_impl@@Base+0x138>
   117e0:	orr	r3, r3, r3, asr #31
   117e4:	add	r3, r3, #1
   117e8:	str	r3, [r5, #12]
   117ec:	ldr	r3, [r2, #12]
   117f0:	mvn	r3, r3
   117f4:	cmp	r3, #1
   117f8:	bgt	11728 <avl_remove_impl@@Base+0x178>
   117fc:	b	116dc <avl_remove_impl@@Base+0x12c>
   11800:	cmp	r0, #0
   11804:	beq	11864 <avl_remove_impl@@Base+0x2b4>
   11808:	ldr	r3, [r0, #12]
   1180c:	orr	r3, r3, r3, asr #31
   11810:	add	r3, r3, #1
   11814:	str	r3, [r5, #12]
   11818:	ldr	r3, [r0, #12]
   1181c:	add	r3, r3, #1
   11820:	cmp	r3, #1
   11824:	bgt	11700 <avl_remove_impl@@Base+0x150>
   11828:	cmn	r3, #1
   1182c:	bge	116e4 <avl_remove_impl@@Base+0x134>
   11830:	b	1179c <avl_remove_impl@@Base+0x1ec>
   11834:	mvn	r2, #0
   11838:	b	1171c <avl_remove_impl@@Base+0x16c>
   1183c:	cmp	r2, #0
   11840:	beq	11728 <avl_remove_impl@@Base+0x178>
   11844:	mvn	r3, #0
   11848:	b	11718 <avl_remove_impl@@Base+0x168>
   1184c:	mvn	r1, #0
   11850:	b	11784 <avl_remove_impl@@Base+0x1d4>
   11854:	cmp	r1, #0
   11858:	beq	1179c <avl_remove_impl@@Base+0x1ec>
   1185c:	mvn	r3, #0
   11860:	b	11780 <avl_remove_impl@@Base+0x1d0>
   11864:	str	r0, [r5, #12]
   11868:	b	116e4 <avl_remove_impl@@Base+0x134>
   1186c:	mov	r6, r4
   11870:	b	11600 <avl_remove_impl@@Base+0x50>

00011874 <avl_apaga@@Base>:
   11874:	str	r4, [sp, #-8]!
   11878:	subs	r4, r0, #0
   1187c:	str	lr, [sp, #4]
   11880:	beq	118c0 <avl_apaga@@Base+0x4c>
   11884:	ldr	r3, [r4]
   11888:	cmp	r3, #0
   1188c:	beq	118ac <avl_apaga@@Base+0x38>
   11890:	mov	r0, r3
   11894:	ldr	r1, [r3]
   11898:	bl	115b0 <avl_remove_impl@@Base>
   1189c:	cmp	r0, #0
   118a0:	mov	r3, r0
   118a4:	str	r0, [r4]
   118a8:	bne	11890 <avl_apaga@@Base+0x1c>
   118ac:	mov	r0, r4
   118b0:	ldr	r4, [sp]
   118b4:	ldr	lr, [sp, #4]
   118b8:	add	sp, sp, #8
   118bc:	b	10d2c <free@plt>
   118c0:	ldr	r4, [sp]
   118c4:	add	sp, sp, #4
   118c8:	pop	{pc}		; (ldr pc, [sp], #4)

000118cc <avl_remove@@Base>:
   118cc:	clz	r3, r1
   118d0:	cmp	r0, #0
   118d4:	strd	r4, [sp, #-16]!
   118d8:	lsr	r3, r3, #5
   118dc:	moveq	r4, #1
   118e0:	str	r6, [sp, #8]
   118e4:	str	lr, [sp, #12]
   118e8:	movne	r4, r3
   118ec:	cmp	r4, #0
   118f0:	bne	11918 <avl_remove@@Base+0x4c>
   118f4:	mov	r5, r0
   118f8:	ldr	r0, [r0]
   118fc:	bl	115b0 <avl_remove_impl@@Base>
   11900:	str	r0, [r5]
   11904:	mov	r0, r4
   11908:	ldrd	r4, [sp]
   1190c:	ldr	r6, [sp, #8]
   11910:	add	sp, sp, #12
   11914:	pop	{pc}		; (ldr pc, [sp], #4)
   11918:	mvn	r4, #0
   1191c:	b	11904 <avl_remove@@Base+0x38>

00011920 <avl_preordem_impl@@Base>:
   11920:	strd	r4, [sp, #-16]!
   11924:	subs	r4, r0, #0
   11928:	str	r6, [sp, #8]
   1192c:	str	lr, [sp, #12]
   11930:	beq	11960 <avl_preordem_impl@@Base+0x40>
   11934:	movw	r5, #8224	; 0x2020
   11938:	movt	r5, #1
   1193c:	mov	r0, r5
   11940:	ldr	r1, [r4]
   11944:	ldr	r2, [r4, #16]
   11948:	bl	10d14 <printf@plt>
   1194c:	ldr	r0, [r4, #4]
   11950:	bl	11920 <avl_preordem_impl@@Base>
   11954:	ldr	r4, [r4, #8]
   11958:	cmp	r4, #0
   1195c:	bne	1193c <avl_preordem_impl@@Base+0x1c>
   11960:	ldrd	r4, [sp]
   11964:	ldr	r6, [sp, #8]
   11968:	add	sp, sp, #12
   1196c:	pop	{pc}		; (ldr pc, [sp], #4)

00011970 <avl_imprime@@Base>:
   11970:	cmp	r0, #0
   11974:	bxeq	lr
   11978:	str	r4, [sp, #-8]!
   1197c:	ldr	r0, [r0]
   11980:	str	lr, [sp, #4]
   11984:	bl	11920 <avl_preordem_impl@@Base>
   11988:	mov	r0, #10
   1198c:	ldr	r4, [sp]
   11990:	ldr	lr, [sp, #4]
   11994:	add	sp, sp, #8
   11998:	b	10db0 <putchar@plt>

0001199c <bst_nova@@Base>:
   1199c:	mov	r0, #4
   119a0:	str	r4, [sp, #-8]!
   119a4:	str	lr, [sp, #4]
   119a8:	bl	10d80 <malloc@plt>
   119ac:	cmp	r0, #0
   119b0:	ldr	r4, [sp]
   119b4:	add	sp, sp, #4
   119b8:	movne	r3, #0
   119bc:	strne	r3, [r0]
   119c0:	pop	{pc}		; (ldr pc, [sp], #4)

000119c4 <bst_min@@Base>:
   119c4:	cmp	r0, #0
   119c8:	beq	119e8 <bst_min@@Base+0x24>
   119cc:	ldr	r2, [r0]
   119d0:	b	119d8 <bst_min@@Base+0x14>
   119d4:	mov	r2, r3
   119d8:	ldr	r3, [r2, #4]
   119dc:	cmp	r3, #0
   119e0:	bne	119d4 <bst_min@@Base+0x10>
   119e4:	ldr	r0, [r2]
   119e8:	bx	lr

000119ec <bst_max@@Base>:
   119ec:	cmp	r0, #0
   119f0:	beq	11a10 <bst_max@@Base+0x24>
   119f4:	ldr	r2, [r0]
   119f8:	b	11a00 <bst_max@@Base+0x14>
   119fc:	mov	r2, r3
   11a00:	ldr	r3, [r2, #8]
   11a04:	cmp	r3, #0
   11a08:	bne	119fc <bst_max@@Base+0x10>
   11a0c:	ldr	r0, [r2]
   11a10:	bx	lr

00011a14 <bst_novo_no@@Base>:
   11a14:	strd	r4, [sp, #-16]!
   11a18:	mov	r5, r0
   11a1c:	mov	r0, #12
   11a20:	str	r6, [sp, #8]
   11a24:	str	lr, [sp, #12]
   11a28:	bl	10d80 <malloc@plt>
   11a2c:	mov	r4, r0
   11a30:	mov	r0, r5
   11a34:	bl	10da4 <strlen@plt>
   11a38:	add	r6, r0, #1
   11a3c:	mov	r0, r6
   11a40:	bl	10d80 <malloc@plt>
   11a44:	mov	r2, r6
   11a48:	mov	r1, r5
   11a4c:	str	r0, [r4]
   11a50:	bl	10d44 <memcpy@plt>
   11a54:	mov	r3, #0
   11a58:	mov	r0, r4
   11a5c:	ldr	r6, [sp, #8]
   11a60:	str	r3, [r4, #4]
   11a64:	str	r3, [r4, #8]
   11a68:	ldrd	r4, [sp]
   11a6c:	add	sp, sp, #12
   11a70:	pop	{pc}		; (ldr pc, [sp], #4)

00011a74 <bst_no_valormin@@Base>:
   11a74:	b	11a7c <bst_no_valormin@@Base+0x8>
   11a78:	mov	r0, r3
   11a7c:	ldr	r3, [r0, #4]
   11a80:	cmp	r3, #0
   11a84:	bne	11a78 <bst_no_valormin@@Base+0x4>
   11a88:	bx	lr

00011a8c <bst_no_valormax@@Base>:
   11a8c:	b	11a94 <bst_no_valormax@@Base+0x8>
   11a90:	mov	r0, r3
   11a94:	ldr	r3, [r0, #8]
   11a98:	cmp	r3, #0
   11a9c:	bne	11a90 <bst_no_valormax@@Base+0x4>
   11aa0:	bx	lr

00011aa4 <bst_pesquisa_impl@@Base>:
   11aa4:	strd	r4, [sp, #-16]!
   11aa8:	subs	r4, r0, #0
   11aac:	movne	r5, r1
   11ab0:	str	r6, [sp, #8]
   11ab4:	str	lr, [sp, #12]
   11ab8:	bne	11ad0 <bst_pesquisa_impl@@Base+0x2c>
   11abc:	b	11af0 <bst_pesquisa_impl@@Base+0x4c>
   11ac0:	beq	11af0 <bst_pesquisa_impl@@Base+0x4c>
   11ac4:	ldr	r4, [r4, #8]
   11ac8:	cmp	r4, #0
   11acc:	beq	11af0 <bst_pesquisa_impl@@Base+0x4c>
   11ad0:	mov	r0, r5
   11ad4:	ldr	r1, [r4]
   11ad8:	bl	10d08 <strcmp@plt>
   11adc:	cmp	r0, #0
   11ae0:	bge	11ac0 <bst_pesquisa_impl@@Base+0x1c>
   11ae4:	ldr	r4, [r4, #4]
   11ae8:	cmp	r4, #0
   11aec:	bne	11ad0 <bst_pesquisa_impl@@Base+0x2c>
   11af0:	mov	r0, r4
   11af4:	ldrd	r4, [sp]
   11af8:	ldr	r6, [sp, #8]
   11afc:	add	sp, sp, #12
   11b00:	pop	{pc}		; (ldr pc, [sp], #4)

00011b04 <bst_pesquisa@@Base>:
   11b04:	cmp	r1, #0
   11b08:	cmpne	r0, #0
   11b0c:	beq	11b18 <bst_pesquisa@@Base+0x14>
   11b10:	ldr	r0, [r0]
   11b14:	b	11aa4 <bst_pesquisa_impl@@Base>
   11b18:	mov	r0, #0
   11b1c:	bx	lr

00011b20 <bst_insere_impl@@Base>:
   11b20:	strd	r4, [sp, #-16]!
   11b24:	subs	r4, r0, #0
   11b28:	str	r6, [sp, #8]
   11b2c:	str	lr, [sp, #12]
   11b30:	beq	11b8c <bst_insere_impl@@Base+0x6c>
   11b34:	mov	r0, r1
   11b38:	mov	r5, r1
   11b3c:	ldr	r1, [r4]
   11b40:	bl	10d08 <strcmp@plt>
   11b44:	cmp	r0, #0
   11b48:	blt	11b78 <bst_insere_impl@@Base+0x58>
   11b4c:	bne	11b64 <bst_insere_impl@@Base+0x44>
   11b50:	mov	r0, r4
   11b54:	ldrd	r4, [sp]
   11b58:	ldr	r6, [sp, #8]
   11b5c:	add	sp, sp, #12
   11b60:	pop	{pc}		; (ldr pc, [sp], #4)
   11b64:	mov	r1, r5
   11b68:	ldr	r0, [r4, #8]
   11b6c:	bl	11b20 <bst_insere_impl@@Base>
   11b70:	str	r0, [r4, #8]
   11b74:	b	11b50 <bst_insere_impl@@Base+0x30>
   11b78:	mov	r1, r5
   11b7c:	ldr	r0, [r4, #4]
   11b80:	bl	11b20 <bst_insere_impl@@Base>
   11b84:	str	r0, [r4, #4]
   11b88:	b	11b50 <bst_insere_impl@@Base+0x30>
   11b8c:	mov	r0, r1
   11b90:	ldrd	r4, [sp]
   11b94:	ldr	r6, [sp, #8]
   11b98:	ldr	lr, [sp, #12]
   11b9c:	add	sp, sp, #16
   11ba0:	b	11a14 <bst_novo_no@@Base>

00011ba4 <bst_insere@@Base>:
   11ba4:	clz	r3, r1
   11ba8:	cmp	r0, #0
   11bac:	strd	r4, [sp, #-16]!
   11bb0:	lsr	r3, r3, #5
   11bb4:	moveq	r4, #1
   11bb8:	str	r6, [sp, #8]
   11bbc:	str	lr, [sp, #12]
   11bc0:	movne	r4, r3
   11bc4:	cmp	r4, #0
   11bc8:	bne	11bf0 <bst_insere@@Base+0x4c>
   11bcc:	mov	r5, r0
   11bd0:	ldr	r0, [r0]
   11bd4:	bl	11b20 <bst_insere_impl@@Base>
   11bd8:	str	r0, [r5]
   11bdc:	mov	r0, r4
   11be0:	ldrd	r4, [sp]
   11be4:	ldr	r6, [sp, #8]
   11be8:	add	sp, sp, #12
   11bec:	pop	{pc}		; (ldr pc, [sp], #4)
   11bf0:	mvn	r4, #0
   11bf4:	b	11bdc <bst_insere@@Base+0x38>

00011bf8 <bst_remove_impl@@Base>:
   11bf8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11bfc:	subs	r5, r0, #0
   11c00:	strd	r6, [sp, #8]
   11c04:	str	r8, [sp, #16]
   11c08:	str	lr, [sp, #20]
   11c0c:	beq	11d2c <bst_remove_impl@@Base+0x134>
   11c10:	ldr	r6, [r5]
   11c14:	mov	r0, r1
   11c18:	mov	r7, r1
   11c1c:	mov	r1, r6
   11c20:	bl	10d08 <strcmp@plt>
   11c24:	cmp	r0, #0
   11c28:	blt	11d04 <bst_remove_impl@@Base+0x10c>
   11c2c:	ldr	r4, [r5, #8]
   11c30:	bne	11cd8 <bst_remove_impl@@Base+0xe0>
   11c34:	ldr	r7, [r5, #4]
   11c38:	cmp	r7, #0
   11c3c:	beq	11d1c <bst_remove_impl@@Base+0x124>
   11c40:	cmp	r4, #0
   11c44:	bne	11c94 <bst_remove_impl@@Base+0x9c>
   11c48:	ldr	r0, [r7]
   11c4c:	mov	r4, r5
   11c50:	bl	10da4 <strlen@plt>
   11c54:	add	r1, r0, #1
   11c58:	mov	r0, r6
   11c5c:	bl	10d5c <realloc@plt>
   11c60:	str	r0, [r5]
   11c64:	ldr	r1, [r7]
   11c68:	bl	10d68 <strcpy@plt>
   11c6c:	ldr	r6, [r7]
   11c70:	ldrd	r2, [r7, #4]
   11c74:	strd	r2, [r5, #4]
   11c78:	mov	r5, r7
   11c7c:	mov	r0, r6
   11c80:	bl	10d2c <free@plt>
   11c84:	mov	r0, r5
   11c88:	bl	10d2c <free@plt>
   11c8c:	b	11cec <bst_remove_impl@@Base+0xf4>
   11c90:	mov	r4, r3
   11c94:	ldr	r3, [r4, #4]
   11c98:	cmp	r3, #0
   11c9c:	bne	11c90 <bst_remove_impl@@Base+0x98>
   11ca0:	ldr	r0, [r4]
   11ca4:	bl	10da4 <strlen@plt>
   11ca8:	add	r1, r0, #1
   11cac:	mov	r0, r6
   11cb0:	bl	10d5c <realloc@plt>
   11cb4:	str	r0, [r5]
   11cb8:	ldr	r1, [r4]
   11cbc:	bl	10d68 <strcpy@plt>
   11cc0:	ldr	r1, [r4]
   11cc4:	mov	r4, r5
   11cc8:	ldr	r0, [r5, #8]
   11ccc:	bl	11bf8 <bst_remove_impl@@Base>
   11cd0:	str	r0, [r5, #8]
   11cd4:	b	11cec <bst_remove_impl@@Base+0xf4>
   11cd8:	mov	r0, r4
   11cdc:	mov	r1, r7
   11ce0:	mov	r4, r5
   11ce4:	bl	11bf8 <bst_remove_impl@@Base>
   11ce8:	str	r0, [r5, #8]
   11cec:	mov	r0, r4
   11cf0:	ldrd	r4, [sp]
   11cf4:	ldrd	r6, [sp, #8]
   11cf8:	ldr	r8, [sp, #16]
   11cfc:	add	sp, sp, #20
   11d00:	pop	{pc}		; (ldr pc, [sp], #4)
   11d04:	mov	r1, r7
   11d08:	ldr	r0, [r5, #4]
   11d0c:	mov	r4, r5
   11d10:	bl	11bf8 <bst_remove_impl@@Base>
   11d14:	str	r0, [r5, #4]
   11d18:	b	11cec <bst_remove_impl@@Base+0xf4>
   11d1c:	cmp	r4, #0
   11d20:	beq	11c7c <bst_remove_impl@@Base+0x84>
   11d24:	mov	r7, r4
   11d28:	b	11c48 <bst_remove_impl@@Base+0x50>
   11d2c:	mov	r4, r5
   11d30:	b	11cec <bst_remove_impl@@Base+0xf4>

00011d34 <bst_apaga@@Base>:
   11d34:	ldr	r3, [r0]
   11d38:	str	r4, [sp, #-8]!
   11d3c:	mov	r4, r0
   11d40:	str	lr, [sp, #4]
   11d44:	cmp	r3, #0
   11d48:	beq	11d68 <bst_apaga@@Base+0x34>
   11d4c:	mov	r0, r3
   11d50:	ldr	r1, [r3]
   11d54:	bl	11bf8 <bst_remove_impl@@Base>
   11d58:	cmp	r0, #0
   11d5c:	mov	r3, r0
   11d60:	str	r0, [r4]
   11d64:	bne	11d4c <bst_apaga@@Base+0x18>
   11d68:	mov	r0, r4
   11d6c:	ldr	r4, [sp]
   11d70:	ldr	lr, [sp, #4]
   11d74:	add	sp, sp, #8
   11d78:	b	10d2c <free@plt>

00011d7c <bst_remove@@Base>:
   11d7c:	clz	r3, r1
   11d80:	cmp	r0, #0
   11d84:	strd	r4, [sp, #-16]!
   11d88:	lsr	r3, r3, #5
   11d8c:	moveq	r4, #1
   11d90:	str	r6, [sp, #8]
   11d94:	str	lr, [sp, #12]
   11d98:	movne	r4, r3
   11d9c:	cmp	r4, #0
   11da0:	bne	11dc8 <bst_remove@@Base+0x4c>
   11da4:	mov	r5, r0
   11da8:	ldr	r0, [r0]
   11dac:	bl	11bf8 <bst_remove_impl@@Base>
   11db0:	str	r0, [r5]
   11db4:	mov	r0, r4
   11db8:	ldrd	r4, [sp]
   11dbc:	ldr	r6, [sp, #8]
   11dc0:	add	sp, sp, #12
   11dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   11dc8:	mvn	r4, #0
   11dcc:	b	11db4 <bst_remove@@Base+0x38>

00011dd0 <bst_altura@@Base>:
   11dd0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11dd4:	subs	r4, r0, #0
   11dd8:	strd	r6, [sp, #8]
   11ddc:	str	r8, [sp, #16]
   11de0:	str	lr, [sp, #20]
   11de4:	beq	11e70 <bst_altura@@Base+0xa0>
   11de8:	mov	r5, #0
   11dec:	ldmib	r4, {r4, r6}
   11df0:	mov	r7, r5
   11df4:	cmp	r6, #0
   11df8:	mov	r0, r4
   11dfc:	beq	11e24 <bst_altura@@Base+0x54>
   11e00:	bl	11dd0 <bst_altura@@Base>
   11e04:	mov	r8, r0
   11e08:	mov	r0, r6
   11e0c:	bl	11dd0 <bst_altura@@Base>
   11e10:	cmp	r8, r0
   11e14:	bgt	11e60 <bst_altura@@Base+0x90>
   11e18:	add	r5, r5, #1
   11e1c:	mov	r4, r6
   11e20:	b	11dec <bst_altura@@Base+0x1c>
   11e24:	cmp	r4, #0
   11e28:	beq	11e48 <bst_altura@@Base+0x78>
   11e2c:	bl	11dd0 <bst_altura@@Base>
   11e30:	mov	r8, r0
   11e34:	mov	r0, r6
   11e38:	bl	11dd0 <bst_altura@@Base>
   11e3c:	cmp	r0, r8
   11e40:	add	r5, r5, #1
   11e44:	blt	11dec <bst_altura@@Base+0x1c>
   11e48:	mov	r0, r7
   11e4c:	ldrd	r4, [sp]
   11e50:	ldrd	r6, [sp, #8]
   11e54:	ldr	r8, [sp, #16]
   11e58:	add	sp, sp, #20
   11e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11e60:	cmp	r4, #0
   11e64:	add	r5, r5, #1
   11e68:	bne	11dec <bst_altura@@Base+0x1c>
   11e6c:	b	11e48 <bst_altura@@Base+0x78>
   11e70:	mvn	r7, #0
   11e74:	b	11e48 <bst_altura@@Base+0x78>

00011e78 <bst_preordem_impl@@Base>:
   11e78:	strd	r4, [sp, #-16]!
   11e7c:	subs	r4, r0, #0
   11e80:	str	r6, [sp, #8]
   11e84:	str	lr, [sp, #12]
   11e88:	beq	11eb4 <bst_preordem_impl@@Base+0x3c>
   11e8c:	movw	r5, #8232	; 0x2028
   11e90:	movt	r5, #1
   11e94:	mov	r0, r5
   11e98:	ldr	r1, [r4]
   11e9c:	bl	10d14 <printf@plt>
   11ea0:	ldr	r0, [r4, #4]
   11ea4:	bl	11e78 <bst_preordem_impl@@Base>
   11ea8:	ldr	r4, [r4, #8]
   11eac:	cmp	r4, #0
   11eb0:	bne	11e94 <bst_preordem_impl@@Base+0x1c>
   11eb4:	ldrd	r4, [sp]
   11eb8:	ldr	r6, [sp, #8]
   11ebc:	add	sp, sp, #12
   11ec0:	pop	{pc}		; (ldr pc, [sp], #4)

00011ec4 <bst_imprime@@Base>:
   11ec4:	str	r4, [sp, #-8]!
   11ec8:	subs	r4, r0, #0
   11ecc:	str	lr, [sp, #4]
   11ed0:	beq	11efc <bst_imprime@@Base+0x38>
   11ed4:	movw	r0, #8236	; 0x202c
   11ed8:	movt	r0, #1
   11edc:	bl	10d14 <printf@plt>
   11ee0:	ldr	r0, [r4]
   11ee4:	bl	11e78 <bst_preordem_impl@@Base>
   11ee8:	mov	r0, #10
   11eec:	ldr	r4, [sp]
   11ef0:	ldr	lr, [sp, #4]
   11ef4:	add	sp, sp, #8
   11ef8:	b	10db0 <putchar@plt>
   11efc:	ldr	r4, [sp]
   11f00:	add	sp, sp, #4
   11f04:	pop	{pc}		; (ldr pc, [sp], #4)

00011f08 <__libc_csu_init@@Base>:
   11f08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f0c:	mov	r7, r0
   11f10:	ldr	r6, [pc, #72]	; 11f60 <__libc_csu_init@@Base+0x58>
   11f14:	ldr	r5, [pc, #72]	; 11f64 <__libc_csu_init@@Base+0x5c>
   11f18:	add	r6, pc, r6
   11f1c:	add	r5, pc, r5
   11f20:	sub	r6, r6, r5
   11f24:	mov	r8, r1
   11f28:	mov	r9, r2
   11f2c:	bl	10ce8 <strcmp@plt-0x20>
   11f30:	asrs	r6, r6, #2
   11f34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f38:	mov	r4, #0
   11f3c:	add	r4, r4, #1
   11f40:	ldr	r3, [r5], #4
   11f44:	mov	r2, r9
   11f48:	mov	r1, r8
   11f4c:	mov	r0, r7
   11f50:	blx	r3
   11f54:	cmp	r6, r4
   11f58:	bne	11f3c <__libc_csu_init@@Base+0x34>
   11f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f60:	strdeq	r0, [r1], -r4
   11f64:	andeq	r0, r1, ip, ror #31

00011f68 <__libc_csu_fini@@Base>:
   11f68:	bx	lr

Disassembly of section .fini:

00011f6c <.fini>:
   11f6c:	push	{r3, lr}
   11f70:	pop	{r3, pc}
