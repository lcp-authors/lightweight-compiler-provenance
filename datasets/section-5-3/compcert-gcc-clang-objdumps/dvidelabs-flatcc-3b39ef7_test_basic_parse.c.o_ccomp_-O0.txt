
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/CMakeFiles/test_basic_parse.dir/test_basic_parse.c.o:     file format elf32-littlearm


Disassembly of section .text:

00000000 <flatcc_json_parser_space>:
       0:	mov	ip, sp
       4:	sub	sp, sp, #8
       8:	str	ip, [sp]
       c:	str	lr, [sp, #4]
      10:	sub	ip, r2, r1
      14:	cmp	ip, #1
      18:	ble	5c <flatcc_json_parser_space+0x5c>
      1c:	ldrb	r3, [r1]
      20:	cmp	r3, #32
      24:	bgt	64 <flatcc_json_parser_space+0x64>
      28:	ldrb	r3, [r1]
      2c:	cmp	r3, #32
      30:	bne	48 <flatcc_json_parser_space+0x48>
      34:	ldrb	r3, [r1, #1]
      38:	cmp	r3, #32
      3c:	movgt	r3, #1
      40:	movle	r3, #0
      44:	b	4c <flatcc_json_parser_space+0x4c>
      48:	mov	r3, #0
      4c:	cmp	r3, #0
      50:	beq	5c <flatcc_json_parser_space+0x5c>
      54:	add	r1, r1, #1
      58:	b	64 <flatcc_json_parser_space+0x64>
      5c:	bl	0 <flatcc_json_parser_space_ext>
      60:	mov	r1, r0
      64:	mov	r0, r1
      68:	ldr	lr, [sp, #4]
      6c:	add	sp, sp, #8
      70:	bx	lr

00000074 <flatcc_json_parser_string_start>:
      74:	mov	ip, sp
      78:	sub	sp, sp, #8
      7c:	str	ip, [sp]
      80:	str	lr, [sp, #4]
      84:	cmp	r1, r2
      88:	beq	a0 <flatcc_json_parser_string_start+0x2c>
      8c:	ldrb	r3, [r1]
      90:	cmp	r3, #34	; 0x22
      94:	movne	r3, #1
      98:	moveq	r3, #0
      9c:	b	a4 <flatcc_json_parser_string_start+0x30>
      a0:	mov	r3, #1
      a4:	cmp	r3, #0
      a8:	beq	b8 <flatcc_json_parser_string_start+0x44>
      ac:	mov	r3, #16
      b0:	bl	0 <flatcc_json_parser_set_error>
      b4:	b	bc <flatcc_json_parser_string_start+0x48>
      b8:	add	r0, r1, #1
      bc:	ldr	lr, [sp, #4]
      c0:	add	sp, sp, #8
      c4:	bx	lr

000000c8 <flatcc_json_parser_string_end>:
      c8:	mov	ip, sp
      cc:	sub	sp, sp, #8
      d0:	str	ip, [sp]
      d4:	str	lr, [sp, #4]
      d8:	cmp	r1, r2
      dc:	beq	f4 <flatcc_json_parser_string_end+0x2c>
      e0:	ldrb	r3, [r1]
      e4:	cmp	r3, #34	; 0x22
      e8:	movne	r3, #1
      ec:	moveq	r3, #0
      f0:	b	f8 <flatcc_json_parser_string_end+0x30>
      f4:	mov	r3, #1
      f8:	cmp	r3, #0
      fc:	beq	10c <flatcc_json_parser_string_end+0x44>
     100:	mov	r3, #20
     104:	bl	0 <flatcc_json_parser_set_error>
     108:	b	110 <flatcc_json_parser_string_end+0x48>
     10c:	add	r0, r1, #1
     110:	ldr	lr, [sp, #4]
     114:	add	sp, sp, #8
     118:	bx	lr

0000011c <flatcc_json_parser_symbol_start>:
     11c:	mov	ip, sp
     120:	sub	sp, sp, #8
     124:	str	ip, [sp]
     128:	str	lr, [sp, #4]
     12c:	cmp	r1, r2
     130:	beq	174 <flatcc_json_parser_symbol_start+0x58>
     134:	ldrb	r3, [r1]
     138:	cmp	r3, #34	; 0x22
     13c:	beq	168 <flatcc_json_parser_symbol_start+0x4c>
     140:	ldrb	ip, [r1]
     144:	cmp	ip, #46	; 0x2e
     148:	bne	15c <flatcc_json_parser_symbol_start+0x40>
     14c:	mov	r3, #5
     150:	bl	0 <flatcc_json_parser_set_error>
     154:	mov	r1, r0
     158:	b	174 <flatcc_json_parser_symbol_start+0x58>
     15c:	mov	r3, #1
     160:	str	r3, [r0, #12]
     164:	b	174 <flatcc_json_parser_symbol_start+0x58>
     168:	add	r1, r1, #1
     16c:	mov	r2, #0
     170:	str	r2, [r0, #12]
     174:	mov	r0, r1
     178:	ldr	lr, [sp, #4]
     17c:	add	sp, sp, #8
     180:	bx	lr

00000184 <flatcc_json_parser_symbol_part_ext>:
     184:	mov	ip, sp
     188:	sub	sp, sp, #8
     18c:	str	ip, [sp]
     190:	str	lr, [sp, #4]
     194:	mov	r3, #0
     198:	mov	r2, #0
     19c:	sub	ip, r1, r0
     1a0:	cmp	ip, #8
     1a4:	bls	1ac <flatcc_json_parser_symbol_part_ext+0x28>
     1a8:	mov	ip, #8
     1ac:	cmp	ip, #9
     1b0:	bcs	238 <flatcc_json_parser_symbol_part_ext+0xb4>
     1b4:	add	pc, pc, ip, lsl #2
     1b8:	nop	{0}
     1bc:	b	238 <flatcc_json_parser_symbol_part_ext+0xb4>
     1c0:	b	230 <flatcc_json_parser_symbol_part_ext+0xac>
     1c4:	b	228 <flatcc_json_parser_symbol_part_ext+0xa4>
     1c8:	b	220 <flatcc_json_parser_symbol_part_ext+0x9c>
     1cc:	b	218 <flatcc_json_parser_symbol_part_ext+0x94>
     1d0:	b	208 <flatcc_json_parser_symbol_part_ext+0x84>
     1d4:	b	1f8 <flatcc_json_parser_symbol_part_ext+0x74>
     1d8:	b	1e8 <flatcc_json_parser_symbol_part_ext+0x64>
     1dc:	b	1e0 <flatcc_json_parser_symbol_part_ext+0x5c>
     1e0:	ldrb	r1, [r0, #7]
     1e4:	orr	r2, r2, r1
     1e8:	ldrb	ip, [r0, #6]
     1ec:	orr	r3, r3, ip, lsr #24
     1f0:	ldrb	ip, [r0, #6]
     1f4:	orr	r2, r2, ip, lsl #8
     1f8:	ldrb	ip, [r0, #5]
     1fc:	orr	r3, r3, ip, lsr #16
     200:	ldrb	ip, [r0, #5]
     204:	orr	r2, r2, ip, lsl #16
     208:	ldrb	r1, [r0, #4]
     20c:	orr	r3, r3, r1, lsr #8
     210:	ldrb	r1, [r0, #4]
     214:	orr	r2, r2, r1, lsl #24
     218:	ldrb	r1, [r0, #3]
     21c:	orr	r3, r3, r1
     220:	ldrb	ip, [r0, #2]
     224:	orr	r3, r3, ip, lsl #8
     228:	ldrb	ip, [r0, #1]
     22c:	orr	r3, r3, ip, lsl #16
     230:	ldrb	r1, [r0]
     234:	orr	r3, r3, r1, lsl #24
     238:	mov	r1, r3
     23c:	mov	r0, r2
     240:	ldr	lr, [sp, #4]
     244:	add	sp, sp, #8
     248:	bx	lr

0000024c <flatcc_json_parser_symbol_part>:
     24c:	mov	ip, sp
     250:	sub	sp, sp, #8
     254:	str	ip, [sp]
     258:	str	lr, [sp, #4]
     25c:	bl	184 <flatcc_json_parser_symbol_part_ext>
     260:	ldr	lr, [sp, #4]
     264:	add	sp, sp, #8
     268:	bx	lr

0000026c <flatcc_json_parser_symbol_end>:
     26c:	mov	ip, sp
     270:	sub	sp, sp, #16
     274:	str	ip, [sp]
     278:	str	lr, [sp, #4]
     27c:	str	r4, [sp, #8]
     280:	mov	r4, #0
     284:	ldr	ip, [r0, #12]
     288:	cmp	ip, #0
     28c:	beq	394 <flatcc_json_parser_symbol_end+0x128>
     290:	cmp	r1, r2
     294:	beq	2ac <flatcc_json_parser_symbol_end+0x40>
     298:	ldrb	r3, [r1]
     29c:	cmp	r3, #32
     2a0:	movgt	r3, #1
     2a4:	movle	r3, #0
     2a8:	b	2b0 <flatcc_json_parser_symbol_end+0x44>
     2ac:	mov	r3, #0
     2b0:	cmp	r3, #0
     2b4:	beq	380 <flatcc_json_parser_symbol_end+0x114>
     2b8:	ldrb	r3, [r1]
     2bc:	and	r3, r3, #255	; 0xff
     2c0:	and	ip, r3, #255	; 0xff
     2c4:	and	r4, r3, #255	; 0xff
     2c8:	cmp	ip, #95	; 0x5f
     2cc:	beq	2e0 <flatcc_json_parser_symbol_end+0x74>
     2d0:	cmp	ip, #46	; 0x2e
     2d4:	moveq	r3, #1
     2d8:	movne	r3, #0
     2dc:	b	2e4 <flatcc_json_parser_symbol_end+0x78>
     2e0:	mov	r3, #1
     2e4:	cmp	r3, #0
     2e8:	bne	300 <flatcc_json_parser_symbol_end+0x94>
     2ec:	and	r3, ip, #128	; 0x80
     2f0:	cmp	r3, #0
     2f4:	movne	r3, #1
     2f8:	moveq	r3, #0
     2fc:	b	304 <flatcc_json_parser_symbol_end+0x98>
     300:	mov	r3, #1
     304:	cmp	r3, #0
     308:	bne	338 <flatcc_json_parser_symbol_end+0xcc>
     30c:	cmp	ip, #48	; 0x30
     310:	blt	330 <flatcc_json_parser_symbol_end+0xc4>
     314:	cmp	ip, #57	; 0x39
     318:	movle	r3, #1
     31c:	movgt	r3, #0
     320:	cmp	r3, #0
     324:	movne	r3, #1
     328:	moveq	r3, #0
     32c:	b	33c <flatcc_json_parser_symbol_end+0xd0>
     330:	mov	r3, #0
     334:	b	33c <flatcc_json_parser_symbol_end+0xd0>
     338:	mov	r3, #1
     33c:	cmp	r3, #0
     340:	beq	34c <flatcc_json_parser_symbol_end+0xe0>
     344:	add	r1, r1, #1
     348:	b	290 <flatcc_json_parser_symbol_end+0x24>
     34c:	orr	r3, ip, #32
     350:	and	r3, r3, #255	; 0xff
     354:	cmp	r3, #97	; 0x61
     358:	bge	364 <flatcc_json_parser_symbol_end+0xf8>
     35c:	mov	ip, #0
     360:	b	370 <flatcc_json_parser_symbol_end+0x104>
     364:	cmp	r3, #122	; 0x7a
     368:	movle	ip, #1
     36c:	movgt	ip, #0
     370:	cmp	ip, #0
     374:	beq	380 <flatcc_json_parser_symbol_end+0x114>
     378:	add	r1, r1, #1
     37c:	b	290 <flatcc_json_parser_symbol_end+0x24>
     380:	cmp	r4, #46	; 0x2e
     384:	bne	418 <flatcc_json_parser_symbol_end+0x1ac>
     388:	mov	r3, #5
     38c:	bl	0 <flatcc_json_parser_set_error>
     390:	b	41c <flatcc_json_parser_symbol_end+0x1b0>
     394:	cmp	r1, r2
     398:	beq	3b0 <flatcc_json_parser_symbol_end+0x144>
     39c:	ldrb	r3, [r1]
     3a0:	cmp	r3, #34	; 0x22
     3a4:	movne	r3, #1
     3a8:	moveq	r3, #0
     3ac:	b	3b4 <flatcc_json_parser_symbol_end+0x148>
     3b0:	mov	r3, #0
     3b4:	cmp	r3, #0
     3b8:	beq	3e0 <flatcc_json_parser_symbol_end+0x174>
     3bc:	ldrb	r3, [r1]
     3c0:	cmp	r3, #92	; 0x5c
     3c4:	bne	3d8 <flatcc_json_parser_symbol_end+0x16c>
     3c8:	sub	ip, r2, r1
     3cc:	cmp	ip, #2
     3d0:	blt	3e0 <flatcc_json_parser_symbol_end+0x174>
     3d4:	add	r1, r1, #1
     3d8:	add	r1, r1, #1
     3dc:	b	394 <flatcc_json_parser_symbol_end+0x128>
     3e0:	cmp	r1, r2
     3e4:	beq	3fc <flatcc_json_parser_symbol_end+0x190>
     3e8:	ldrb	r3, [r1]
     3ec:	cmp	r3, #34	; 0x22
     3f0:	movne	r3, #1
     3f4:	moveq	r3, #0
     3f8:	b	400 <flatcc_json_parser_symbol_end+0x194>
     3fc:	mov	r3, #1
     400:	cmp	r3, #0
     404:	beq	414 <flatcc_json_parser_symbol_end+0x1a8>
     408:	mov	r3, #20
     40c:	bl	0 <flatcc_json_parser_set_error>
     410:	b	41c <flatcc_json_parser_symbol_end+0x1b0>
     414:	add	r1, r1, #1
     418:	mov	r0, r1
     41c:	ldr	r4, [sp, #8]
     420:	ldr	lr, [sp, #4]
     424:	add	sp, sp, #16
     428:	bx	lr

0000042c <flatcc_json_parser_coerce_uint32>:
     42c:	mov	ip, sp
     430:	sub	sp, sp, #24
     434:	str	ip, [sp]
     438:	str	lr, [sp, #4]
     43c:	str	r4, [sp, #8]
     440:	str	r5, [sp, #12]
     444:	str	r6, [sp, #16]
     448:	ldr	r6, [ip, #8]
     44c:	ldr	r4, [ip, #4]
     450:	ldr	r5, [ip]
     454:	cmp	r3, #0
     458:	beq	468 <flatcc_json_parser_coerce_uint32+0x3c>
     45c:	mov	r3, #8
     460:	bl	0 <flatcc_json_parser_set_error>
     464:	b	4a8 <flatcc_json_parser_coerce_uint32+0x7c>
     468:	mov	r3, r5
     46c:	mov	ip, #0
     470:	cmp	r4, ip
     474:	bne	488 <flatcc_json_parser_coerce_uint32+0x5c>
     478:	mvn	ip, #0
     47c:	cmp	r3, ip
     480:	bhi	494 <flatcc_json_parser_coerce_uint32+0x68>
     484:	b	4a0 <flatcc_json_parser_coerce_uint32+0x74>
     488:	mov	ip, #0
     48c:	cmp	r4, ip
     490:	bls	4a0 <flatcc_json_parser_coerce_uint32+0x74>
     494:	mov	r3, #7
     498:	bl	0 <flatcc_json_parser_set_error>
     49c:	b	4a8 <flatcc_json_parser_coerce_uint32+0x7c>
     4a0:	str	r5, [r6]
     4a4:	mov	r0, r1
     4a8:	ldr	r4, [sp, #8]
     4ac:	ldr	r5, [sp, #12]
     4b0:	ldr	r6, [sp, #16]
     4b4:	ldr	lr, [sp, #4]
     4b8:	add	sp, sp, #24
     4bc:	bx	lr

000004c0 <flatcc_json_parser_coerce_uint8>:
     4c0:	mov	ip, sp
     4c4:	sub	sp, sp, #24
     4c8:	str	ip, [sp]
     4cc:	str	lr, [sp, #4]
     4d0:	str	r4, [sp, #8]
     4d4:	str	r5, [sp, #12]
     4d8:	str	r6, [sp, #16]
     4dc:	ldr	r6, [ip, #8]
     4e0:	ldr	r5, [ip, #4]
     4e4:	ldr	r4, [ip]
     4e8:	cmp	r3, #0
     4ec:	beq	4fc <flatcc_json_parser_coerce_uint8+0x3c>
     4f0:	mov	r3, #8
     4f4:	bl	0 <flatcc_json_parser_set_error>
     4f8:	b	540 <flatcc_json_parser_coerce_uint8+0x80>
     4fc:	mov	r3, r4
     500:	mov	ip, #0
     504:	cmp	r5, ip
     508:	bne	51c <flatcc_json_parser_coerce_uint8+0x5c>
     50c:	mov	ip, #255	; 0xff
     510:	cmp	r3, ip
     514:	bhi	528 <flatcc_json_parser_coerce_uint8+0x68>
     518:	b	534 <flatcc_json_parser_coerce_uint8+0x74>
     51c:	mov	r3, #0
     520:	cmp	r5, r3
     524:	bls	534 <flatcc_json_parser_coerce_uint8+0x74>
     528:	mov	r3, #7
     52c:	bl	0 <flatcc_json_parser_set_error>
     530:	b	540 <flatcc_json_parser_coerce_uint8+0x80>
     534:	and	r3, r4, #255	; 0xff
     538:	strb	r3, [r6]
     53c:	mov	r0, r1
     540:	ldr	r4, [sp, #8]
     544:	ldr	r5, [sp, #12]
     548:	ldr	r6, [sp, #16]
     54c:	ldr	lr, [sp, #4]
     550:	add	sp, sp, #24
     554:	bx	lr

00000558 <flatcc_json_parser_coerce_int64>:
     558:	mov	ip, sp
     55c:	sub	sp, sp, #24
     560:	str	ip, [sp]
     564:	str	lr, [sp, #4]
     568:	str	r4, [sp, #8]
     56c:	str	r5, [sp, #12]
     570:	str	r6, [sp, #16]
     574:	str	r7, [sp, #20]
     578:	ldr	r6, [ip, #8]
     57c:	ldr	r5, [ip, #4]
     580:	ldr	r4, [ip]
     584:	cmp	r3, #0
     588:	beq	5e0 <flatcc_json_parser_coerce_int64+0x88>
     58c:	mov	r3, r5
     590:	mov	ip, #-2147483648	; 0x80000000
     594:	cmp	r3, ip
     598:	bne	5b0 <flatcc_json_parser_coerce_int64+0x58>
     59c:	mov	ip, r4
     5a0:	mov	r3, #0
     5a4:	cmp	ip, r3
     5a8:	bhi	5c0 <flatcc_json_parser_coerce_int64+0x68>
     5ac:	b	5cc <flatcc_json_parser_coerce_int64+0x74>
     5b0:	mov	r3, r5
     5b4:	mov	ip, #-2147483648	; 0x80000000
     5b8:	cmp	r3, ip
     5bc:	bls	5cc <flatcc_json_parser_coerce_int64+0x74>
     5c0:	mov	r3, #8
     5c4:	bl	0 <flatcc_json_parser_set_error>
     5c8:	b	628 <flatcc_json_parser_coerce_int64+0xd0>
     5cc:	rsbs	r3, r4, #0
     5d0:	rsc	r0, r5, #0
     5d4:	str	r3, [r6]
     5d8:	str	r0, [r6, #4]
     5dc:	b	624 <flatcc_json_parser_coerce_int64+0xcc>
     5e0:	mov	ip, r5
     5e4:	mov	r3, r4
     5e8:	mvn	r7, #-2147483648	; 0x80000000
     5ec:	cmp	ip, r7
     5f0:	bne	604 <flatcc_json_parser_coerce_int64+0xac>
     5f4:	mvn	ip, #0
     5f8:	cmp	r3, ip
     5fc:	bhi	610 <flatcc_json_parser_coerce_int64+0xb8>
     600:	b	61c <flatcc_json_parser_coerce_int64+0xc4>
     604:	mvn	r3, #-2147483648	; 0x80000000
     608:	cmp	ip, r3
     60c:	bls	61c <flatcc_json_parser_coerce_int64+0xc4>
     610:	mov	r3, #7
     614:	bl	0 <flatcc_json_parser_set_error>
     618:	b	628 <flatcc_json_parser_coerce_int64+0xd0>
     61c:	str	r4, [r6]
     620:	str	r5, [r6, #4]
     624:	mov	r0, r1
     628:	ldr	r4, [sp, #8]
     62c:	ldr	r5, [sp, #12]
     630:	ldr	r6, [sp, #16]
     634:	ldr	r7, [sp, #20]
     638:	ldr	lr, [sp, #4]
     63c:	add	sp, sp, #24
     640:	bx	lr

00000644 <flatcc_json_parser_uint32>:
     644:	mov	ip, sp
     648:	sub	sp, sp, #56	; 0x38
     64c:	str	ip, [sp, #12]
     650:	str	lr, [sp, #16]
     654:	str	r4, [sp, #24]
     658:	str	r5, [sp, #28]
     65c:	str	r6, [sp, #32]
     660:	str	r7, [sp, #36]	; 0x24
     664:	mov	r7, r3
     668:	mov	r5, r2
     66c:	mov	r6, r0
     670:	mov	r2, #0
     674:	mov	r0, #0
     678:	str	r0, [sp, #48]	; 0x30
     67c:	str	r2, [sp, #52]	; 0x34
     680:	mov	r3, #0
     684:	str	r3, [sp, #40]	; 0x28
     688:	mov	r4, r1
     68c:	mov	r3, #0
     690:	str	r3, [r7]
     694:	cmp	r1, r5
     698:	bne	6a4 <flatcc_json_parser_uint32+0x60>
     69c:	mov	r0, r1
     6a0:	b	6ec <flatcc_json_parser_uint32+0xa8>
     6a4:	add	r3, sp, #40	; 0x28
     6a8:	add	r2, sp, #48	; 0x30
     6ac:	str	r2, [sp]
     6b0:	mov	r2, r5
     6b4:	mov	r0, r6
     6b8:	bl	0 <flatcc_json_parser_integer>
     6bc:	cmp	r0, r4
     6c0:	beq	6ec <flatcc_json_parser_uint32+0xa8>
     6c4:	ldr	r3, [sp, #40]	; 0x28
     6c8:	ldr	ip, [sp, #48]	; 0x30
     6cc:	ldr	r2, [sp, #52]	; 0x34
     6d0:	str	r7, [sp, #8]
     6d4:	str	r2, [sp, #4]
     6d8:	str	ip, [sp]
     6dc:	mov	r2, r5
     6e0:	mov	r1, r0
     6e4:	mov	r0, r6
     6e8:	bl	42c <flatcc_json_parser_coerce_uint32>
     6ec:	ldr	r4, [sp, #24]
     6f0:	ldr	r5, [sp, #28]
     6f4:	ldr	r6, [sp, #32]
     6f8:	ldr	r7, [sp, #36]	; 0x24
     6fc:	ldr	lr, [sp, #16]
     700:	add	sp, sp, #56	; 0x38
     704:	bx	lr

00000708 <flatcc_json_parser_uint8>:
     708:	mov	ip, sp
     70c:	sub	sp, sp, #56	; 0x38
     710:	str	ip, [sp, #12]
     714:	str	lr, [sp, #16]
     718:	str	r4, [sp, #24]
     71c:	str	r5, [sp, #28]
     720:	str	r6, [sp, #32]
     724:	str	r7, [sp, #36]	; 0x24
     728:	mov	r7, r3
     72c:	mov	r5, r2
     730:	mov	r6, r0
     734:	mov	r2, #0
     738:	mov	r0, #0
     73c:	str	r0, [sp, #48]	; 0x30
     740:	str	r2, [sp, #52]	; 0x34
     744:	mov	r3, #0
     748:	str	r3, [sp, #40]	; 0x28
     74c:	mov	r4, r1
     750:	mov	r3, #0
     754:	strb	r3, [r7]
     758:	cmp	r1, r5
     75c:	bne	768 <flatcc_json_parser_uint8+0x60>
     760:	mov	r0, r1
     764:	b	7b0 <flatcc_json_parser_uint8+0xa8>
     768:	add	r3, sp, #40	; 0x28
     76c:	add	r2, sp, #48	; 0x30
     770:	str	r2, [sp]
     774:	mov	r2, r5
     778:	mov	r0, r6
     77c:	bl	0 <flatcc_json_parser_integer>
     780:	cmp	r0, r4
     784:	beq	7b0 <flatcc_json_parser_uint8+0xa8>
     788:	ldr	r3, [sp, #40]	; 0x28
     78c:	ldr	ip, [sp, #48]	; 0x30
     790:	ldr	r2, [sp, #52]	; 0x34
     794:	str	r7, [sp, #8]
     798:	str	r2, [sp, #4]
     79c:	str	ip, [sp]
     7a0:	mov	r2, r5
     7a4:	mov	r1, r0
     7a8:	mov	r0, r6
     7ac:	bl	4c0 <flatcc_json_parser_coerce_uint8>
     7b0:	ldr	r4, [sp, #24]
     7b4:	ldr	r5, [sp, #28]
     7b8:	ldr	r6, [sp, #32]
     7bc:	ldr	r7, [sp, #36]	; 0x24
     7c0:	ldr	lr, [sp, #16]
     7c4:	add	sp, sp, #56	; 0x38
     7c8:	bx	lr

000007cc <flatcc_json_parser_int64>:
     7cc:	mov	ip, sp
     7d0:	sub	sp, sp, #56	; 0x38
     7d4:	str	ip, [sp, #12]
     7d8:	str	lr, [sp, #16]
     7dc:	str	r4, [sp, #24]
     7e0:	str	r5, [sp, #28]
     7e4:	str	r6, [sp, #32]
     7e8:	str	r7, [sp, #36]	; 0x24
     7ec:	mov	r7, r3
     7f0:	mov	r4, r2
     7f4:	mov	r5, r0
     7f8:	mov	r2, #0
     7fc:	mov	r0, #0
     800:	str	r0, [sp, #48]	; 0x30
     804:	str	r2, [sp, #52]	; 0x34
     808:	mov	r2, #0
     80c:	str	r2, [sp, #40]	; 0x28
     810:	mov	r6, r1
     814:	mov	r3, #0
     818:	mov	r2, #0
     81c:	str	r2, [r7]
     820:	str	r3, [r7, #4]
     824:	cmp	r1, r4
     828:	bne	834 <flatcc_json_parser_int64+0x68>
     82c:	mov	r0, r1
     830:	b	87c <flatcc_json_parser_int64+0xb0>
     834:	add	r3, sp, #40	; 0x28
     838:	add	r2, sp, #48	; 0x30
     83c:	str	r2, [sp]
     840:	mov	r2, r4
     844:	mov	r0, r5
     848:	bl	0 <flatcc_json_parser_integer>
     84c:	cmp	r0, r6
     850:	beq	87c <flatcc_json_parser_int64+0xb0>
     854:	ldr	r3, [sp, #40]	; 0x28
     858:	ldr	ip, [sp, #48]	; 0x30
     85c:	ldr	r1, [sp, #52]	; 0x34
     860:	str	r7, [sp, #8]
     864:	str	r1, [sp, #4]
     868:	str	ip, [sp]
     86c:	mov	r2, r4
     870:	mov	r1, r0
     874:	mov	r0, r5
     878:	bl	558 <flatcc_json_parser_coerce_int64>
     87c:	ldr	r4, [sp, #24]
     880:	ldr	r5, [sp, #28]
     884:	ldr	r6, [sp, #32]
     888:	ldr	r7, [sp, #36]	; 0x24
     88c:	ldr	lr, [sp, #16]
     890:	add	sp, sp, #56	; 0x38
     894:	bx	lr

00000898 <test>:
     898:	mov	ip, sp
     89c:	sub	sp, sp, #104	; 0x68
     8a0:	str	ip, [sp, #4]
     8a4:	str	lr, [sp, #8]
     8a8:	str	r4, [sp, #16]
     8ac:	str	r5, [sp, #20]
     8b0:	str	r6, [sp, #24]
     8b4:	str	r7, [sp, #28]
     8b8:	str	r8, [sp, #32]
     8bc:	str	r9, [sp, #36]	; 0x24
     8c0:	str	sl, [sp, #40]	; 0x28
     8c4:	mov	r7, r3
     8c8:	mov	r8, r2
     8cc:	mov	r4, r1
     8d0:	mov	r6, r0
     8d4:	add	r5, sp, #56	; 0x38
     8d8:	mov	r1, #0
     8dc:	mov	r2, #44	; 0x2c
     8e0:	mov	r0, r5
     8e4:	bl	0 <memset>
     8e8:	mov	r0, #1
     8ec:	str	r0, [r5, #16]
     8f0:	str	r4, [r5, #4]
     8f4:	ldr	r1, [pc, #3740]	; 1798 <test+0xf00>
     8f8:	mov	r2, #0
     8fc:	mov	r3, #0
     900:	mov	r0, r6
     904:	bl	0 <flatcc_builder_start_buffer>
     908:	mov	r2, r8
     90c:	mov	r1, r4
     910:	mov	r0, r5
     914:	bl	0 <flatcc_json_parser_space>
     918:	mov	r4, r0
     91c:	cmp	r4, r8
     920:	bne	938 <test+0xa0>
     924:	ldr	r2, [pc, #3816]	; 1814 <test+0xf7c>
     928:	ldr	r0, [r2]
     92c:	ldr	r1, [pc, #3772]	; 17f0 <test+0xf58>
     930:	bl	0 <fprintf>
     934:	b	1748 <test+0xeb0>
     938:	cmp	r8, r4
     93c:	bls	954 <test+0xbc>
     940:	ldrb	r1, [r4]
     944:	cmp	r1, #123	; 0x7b
     948:	moveq	r2, #1
     94c:	movne	r2, #0
     950:	b	958 <test+0xc0>
     954:	mov	r2, #0
     958:	cmp	r2, #0
     95c:	bne	990 <test+0xf8>
     960:	ldr	r2, [pc, #3756]	; 1814 <test+0xf7c>
     964:	ldr	r0, [r2]
     968:	ldr	r1, [pc, #3680]	; 17d0 <test+0xf38>
     96c:	mov	r2, #123	; 0x7b
     970:	bl	0 <fprintf>
     974:	mov	r3, #17
     978:	mov	r2, r8
     97c:	mov	r1, r4
     980:	mov	r0, r5
     984:	bl	0 <flatcc_json_parser_set_error>
     988:	mov	r4, r0
     98c:	b	1748 <test+0xeb0>
     990:	add	r1, r4, #1
     994:	mov	r2, r8
     998:	mov	r0, r5
     99c:	bl	0 <flatcc_json_parser_space>
     9a0:	mov	r4, r0
     9a4:	cmp	r4, r8
     9a8:	bne	9c0 <test+0x128>
     9ac:	ldr	r0, [pc, #3680]	; 1814 <test+0xf7c>
     9b0:	ldr	r0, [r0]
     9b4:	ldr	r1, [pc, #3636]	; 17f0 <test+0xf58>
     9b8:	bl	0 <fprintf>
     9bc:	b	1748 <test+0xeb0>
     9c0:	mov	r1, #11
     9c4:	mov	r0, r6
     9c8:	bl	0 <flatcc_builder_start_table>
     9cc:	mov	r2, r8
     9d0:	mov	r1, r4
     9d4:	mov	r0, r5
     9d8:	bl	11c <flatcc_json_parser_symbol_start>
     9dc:	mov	r9, r0
     9e0:	mov	r1, r8
     9e4:	mov	r0, r9
     9e8:	bl	24c <flatcc_json_parser_symbol_part>
     9ec:	sub	ip, r8, r9
     9f0:	cmp	ip, #8
     9f4:	ble	a00 <test+0x168>
     9f8:	add	r4, r9, #8
     9fc:	b	a04 <test+0x16c>
     a00:	mov	r4, r8
     a04:	mov	r3, r1
     a08:	mov	r2, r0
     a0c:	bic	r2, r2, #255	; 0xff
     a10:	bic	r2, r2, #65280	; 0xff00
     a14:	ldr	ip, [pc, #3552]	; 17fc <test+0xf64>
     a18:	ldrb	ip, [ip]
     a1c:	lsl	sl, ip, #16
     a20:	ldr	ip, [pc, #3484]	; 17c4 <test+0xf2c>
     a24:	ldrb	ip, [ip]
     a28:	orr	sl, sl, ip, lsl #24
     a2c:	ldr	ip, [pc, #3536]	; 1804 <test+0xf6c>
     a30:	ldrb	ip, [ip]
     a34:	orr	sl, sl, ip, lsl #8
     a38:	ldr	ip, [pc, #3508]	; 17f4 <test+0xf5c>
     a3c:	ldrb	ip, [ip]
     a40:	orr	sl, sl, ip
     a44:	ldr	ip, [pc, #3536]	; 181c <test+0xf84>
     a48:	ldrb	ip, [ip]
     a4c:	orr	sl, sl, ip, lsr #8
     a50:	ldr	ip, [pc, #3412]	; 17ac <test+0xf14>
     a54:	ldrb	ip, [ip]
     a58:	orr	ip, sl, ip, lsr #16
     a5c:	cmp	r3, ip
     a60:	bne	a88 <test+0x1f0>
     a64:	ldr	r3, [pc, #3392]	; 17ac <test+0xf14>
     a68:	ldrb	r3, [r3]
     a6c:	lsl	r3, r3, #16
     a70:	ldr	ip, [pc, #3492]	; 181c <test+0xf84>
     a74:	ldrb	ip, [ip]
     a78:	orr	r3, r3, ip, lsl #24
     a7c:	cmp	r2, r3
     a80:	bcc	14a8 <test+0xc10>
     a84:	b	ad8 <test+0x240>
     a88:	ldr	ip, [pc, #3436]	; 17fc <test+0xf64>
     a8c:	ldrb	ip, [ip]
     a90:	lsl	r2, ip, #16
     a94:	ldr	ip, [pc, #3368]	; 17c4 <test+0xf2c>
     a98:	ldrb	ip, [ip]
     a9c:	orr	ip, r2, ip, lsl #24
     aa0:	ldr	r2, [pc, #3420]	; 1804 <test+0xf6c>
     aa4:	ldrb	r2, [r2]
     aa8:	orr	sl, ip, r2, lsl #8
     aac:	ldr	r2, [pc, #3392]	; 17f4 <test+0xf5c>
     ab0:	ldrb	ip, [r2]
     ab4:	orr	ip, sl, ip
     ab8:	ldr	r2, [pc, #3420]	; 181c <test+0xf84>
     abc:	ldrb	r2, [r2]
     ac0:	orr	r2, ip, r2, lsr #8
     ac4:	ldr	ip, [pc, #3296]	; 17ac <test+0xf14>
     ac8:	ldrb	ip, [ip]
     acc:	orr	r2, r2, ip, lsr #16
     ad0:	cmp	r3, r2
     ad4:	bcc	14a8 <test+0xc10>
     ad8:	mov	r3, r1
     adc:	mov	r2, #0
     ae0:	ldr	ip, [pc, #3364]	; 180c <test+0xf74>
     ae4:	ldrb	ip, [ip]
     ae8:	lsl	sl, ip, #16
     aec:	ldr	ip, [pc, #3260]	; 17b0 <test+0xf18>
     af0:	ldrb	ip, [ip]
     af4:	orr	sl, sl, ip, lsl #24
     af8:	ldr	ip, [pc, #3304]	; 17e8 <test+0xf50>
     afc:	ldrb	ip, [ip]
     b00:	orr	sl, sl, ip, lsl #8
     b04:	ldr	ip, [pc, #3228]	; 17a8 <test+0xf10>
     b08:	ldrb	ip, [ip]
     b0c:	orr	ip, sl, ip
     b10:	cmp	r3, ip
     b14:	bne	b28 <test+0x290>
     b18:	mov	ip, #0
     b1c:	cmp	r2, ip
     b20:	bcc	db4 <test+0x51c>
     b24:	b	b60 <test+0x2c8>
     b28:	ldr	ip, [pc, #3292]	; 180c <test+0xf74>
     b2c:	ldrb	ip, [ip]
     b30:	lsl	ip, ip, #16
     b34:	ldr	r2, [pc, #3188]	; 17b0 <test+0xf18>
     b38:	ldrb	r2, [r2]
     b3c:	orr	r2, ip, r2, lsl #24
     b40:	ldr	ip, [pc, #3232]	; 17e8 <test+0xf50>
     b44:	ldrb	ip, [ip]
     b48:	orr	r2, r2, ip, lsl #8
     b4c:	ldr	ip, [pc, #3156]	; 17a8 <test+0xf10>
     b50:	ldrb	ip, [ip]
     b54:	orr	r2, r2, ip
     b58:	cmp	r3, r2
     b5c:	bcc	db4 <test+0x51c>
     b60:	mov	ip, #0
     b64:	ldr	r2, [pc, #3232]	; 180c <test+0xf74>
     b68:	ldrb	r2, [r2]
     b6c:	lsl	r0, r2, #16
     b70:	ldr	r2, [pc, #3128]	; 17b0 <test+0xf18>
     b74:	ldrb	r2, [r2]
     b78:	orr	r2, r0, r2, lsl #24
     b7c:	ldr	r3, [pc, #3172]	; 17e8 <test+0xf50>
     b80:	ldrb	r0, [r3]
     b84:	orr	r0, r2, r0, lsl #8
     b88:	ldr	r2, [pc, #3096]	; 17a8 <test+0xf10>
     b8c:	ldrb	r2, [r2]
     b90:	orr	r3, r0, r2
     b94:	eor	r3, r1, r3
     b98:	orr	r2, r3, ip
     b9c:	cmp	r2, #0
     ba0:	moveq	r3, #1
     ba4:	movne	r3, #0
     ba8:	cmp	r3, #0
     bac:	beq	d98 <test+0x500>
     bb0:	add	r1, r9, #4
     bb4:	mov	r2, r8
     bb8:	mov	r0, r5
     bbc:	bl	26c <flatcc_json_parser_symbol_end>
     bc0:	mov	r2, r8
     bc4:	mov	r1, r0
     bc8:	mov	r0, r5
     bcc:	bl	0 <flatcc_json_parser_space>
     bd0:	mov	r4, r0
     bd4:	cmp	r4, r8
     bd8:	bne	bf0 <test+0x358>
     bdc:	ldr	r1, [pc, #3120]	; 1814 <test+0xf7c>
     be0:	ldr	r0, [r1]
     be4:	ldr	r1, [pc, #3076]	; 17f0 <test+0xf58>
     be8:	bl	0 <fprintf>
     bec:	b	1748 <test+0xeb0>
     bf0:	cmp	r8, r4
     bf4:	bls	c0c <test+0x374>
     bf8:	ldrb	r3, [r4]
     bfc:	cmp	r3, #58	; 0x3a
     c00:	moveq	ip, #1
     c04:	movne	ip, #0
     c08:	b	c10 <test+0x378>
     c0c:	mov	ip, #0
     c10:	cmp	ip, #0
     c14:	bne	c48 <test+0x3b0>
     c18:	ldr	r0, [pc, #3060]	; 1814 <test+0xf7c>
     c1c:	ldr	r0, [r0]
     c20:	ldr	r1, [pc, #2984]	; 17d0 <test+0xf38>
     c24:	mov	r2, #58	; 0x3a
     c28:	bl	0 <fprintf>
     c2c:	mov	r3, #17
     c30:	mov	r2, r8
     c34:	mov	r1, r4
     c38:	mov	r0, r5
     c3c:	bl	0 <flatcc_json_parser_set_error>
     c40:	mov	r4, r0
     c44:	b	1748 <test+0xeb0>
     c48:	add	r1, r4, #1
     c4c:	mov	r2, r8
     c50:	mov	r0, r5
     c54:	bl	0 <flatcc_json_parser_space>
     c58:	mov	r4, r0
     c5c:	cmp	r4, r8
     c60:	bne	c78 <test+0x3e0>
     c64:	ldr	ip, [pc, #2984]	; 1814 <test+0xf7c>
     c68:	ldr	r0, [ip]
     c6c:	ldr	r1, [pc, #2940]	; 17f0 <test+0xf58>
     c70:	bl	0 <fprintf>
     c74:	b	1748 <test+0xeb0>
     c78:	mov	r2, r8
     c7c:	mov	r1, r4
     c80:	mov	r0, r5
     c84:	bl	74 <flatcc_json_parser_string_start>
     c88:	mov	r1, r0
     c8c:	mov	r9, r1
     c90:	mov	r2, r8
     c94:	mov	r0, r5
     c98:	bl	0 <flatcc_json_parser_string_part>
     c9c:	mov	r4, r0
     ca0:	cmp	r4, r8
     ca4:	beq	1748 <test+0xeb0>
     ca8:	ldrb	r3, [r4]
     cac:	cmp	r3, #34	; 0x22
     cb0:	beq	d4c <test+0x4b4>
     cb4:	mov	r0, r6
     cb8:	bl	0 <flatcc_builder_start_string>
     cbc:	sub	r1, r4, r9
     cc0:	mov	r0, r6
     cc4:	bl	0 <flatcc_builder_extend_string>
     cc8:	cmp	r0, #0
     ccc:	beq	1748 <test+0xeb0>
     cd0:	sub	r2, r4, r9
     cd4:	mov	r1, r9
     cd8:	bl	0 <memcpy>
     cdc:	add	r3, sp, #48	; 0x30
     ce0:	mov	r2, r8
     ce4:	mov	r1, r4
     ce8:	mov	r0, r5
     cec:	bl	0 <flatcc_json_parser_string_escape>
     cf0:	mov	r9, r0
     cf4:	add	r1, sp, #49	; 0x31
     cf8:	ldrb	r2, [sp, #48]	; 0x30
     cfc:	mov	r0, r6
     d00:	bl	0 <flatcc_builder_append_string>
     d04:	mov	r2, r8
     d08:	mov	r1, r9
     d0c:	mov	r0, r5
     d10:	bl	0 <flatcc_json_parser_string_part>
     d14:	mov	r4, r0
     d18:	cmp	r4, r8
     d1c:	beq	1748 <test+0xeb0>
     d20:	sub	r2, r4, r9
     d24:	mov	r1, r9
     d28:	mov	r0, r6
     d2c:	bl	0 <flatcc_builder_append_string>
     d30:	ldrb	ip, [r4]
     d34:	cmp	ip, #34	; 0x22
     d38:	bne	cdc <test+0x444>
     d3c:	mov	r0, r6
     d40:	bl	0 <flatcc_builder_end_string>
     d44:	mov	r9, r0
     d48:	b	d60 <test+0x4c8>
     d4c:	sub	r2, r4, r9
     d50:	mov	r1, r9
     d54:	mov	r0, r6
     d58:	bl	0 <flatcc_builder_create_string>
     d5c:	mov	r9, r0
     d60:	cmp	r9, #0
     d64:	beq	1748 <test+0xeb0>
     d68:	mov	r1, #10
     d6c:	mov	r0, r6
     d70:	bl	0 <flatcc_builder_table_add_offset>
     d74:	cmp	r0, #0
     d78:	beq	1748 <test+0xeb0>
     d7c:	str	r9, [r0]
     d80:	mov	r2, r8
     d84:	mov	r1, r4
     d88:	mov	r0, r5
     d8c:	bl	c8 <flatcc_json_parser_string_end>
     d90:	mov	r4, r0
     d94:	b	1618 <test+0xd80>
     d98:	mov	r3, #13
     d9c:	mov	r2, r8
     da0:	mov	r1, r9
     da4:	mov	r0, r5
     da8:	bl	0 <flatcc_json_parser_set_error>
     dac:	mov	r4, r0
     db0:	b	1748 <test+0xeb0>
     db4:	mov	r2, r0
     db8:	mov	ip, r1
     dbc:	ldr	r3, [pc, #2612]	; 17f8 <test+0xf60>
     dc0:	ldrb	r3, [r3]
     dc4:	lsl	sl, r3, #16
     dc8:	ldr	r3, [pc, #2500]	; 1794 <test+0xefc>
     dcc:	ldrb	r3, [r3]
     dd0:	orr	sl, sl, r3, lsl #24
     dd4:	ldr	r3, [pc, #2520]	; 17b4 <test+0xf1c>
     dd8:	ldrb	r3, [r3]
     ddc:	orr	sl, sl, r3, lsl #8
     de0:	ldr	r3, [pc, #2520]	; 17c0 <test+0xf28>
     de4:	ldrb	r3, [r3]
     de8:	orr	sl, sl, r3
     dec:	ldr	r3, [pc, #2552]	; 17ec <test+0xf54>
     df0:	ldrb	r3, [r3]
     df4:	orr	sl, sl, r3, lsr #8
     df8:	ldr	r3, [pc, #2528]	; 17e0 <test+0xf48>
     dfc:	ldrb	r3, [r3]
     e00:	orr	sl, sl, r3, lsr #16
     e04:	ldr	r3, [pc, #2548]	; 1800 <test+0xf68>
     e08:	ldrb	r3, [r3]
     e0c:	orr	r3, sl, r3, lsr #24
     e10:	cmp	ip, r3
     e14:	bne	e54 <test+0x5bc>
     e18:	ldr	r3, [pc, #2496]	; 17e0 <test+0xf48>
     e1c:	ldrb	r3, [r3]
     e20:	lsl	ip, r3, #16
     e24:	ldr	r3, [pc, #2496]	; 17ec <test+0xf54>
     e28:	ldrb	r3, [r3]
     e2c:	orr	sl, ip, r3, lsl #24
     e30:	ldr	ip, [pc, #2504]	; 1800 <test+0xf68>
     e34:	ldrb	r3, [ip]
     e38:	orr	r3, sl, r3, lsl #8
     e3c:	ldr	ip, [pc, #2396]	; 17a0 <test+0xf08>
     e40:	ldrb	ip, [ip]
     e44:	orr	r3, r3, ip
     e48:	cmp	r2, r3
     e4c:	bcc	12f8 <test+0xa60>
     e50:	b	eb0 <test+0x618>
     e54:	ldr	r2, [pc, #2460]	; 17f8 <test+0xf60>
     e58:	ldrb	r2, [r2]
     e5c:	lsl	r2, r2, #16
     e60:	ldr	r3, [pc, #2348]	; 1794 <test+0xefc>
     e64:	ldrb	r3, [r3]
     e68:	orr	r2, r2, r3, lsl #24
     e6c:	ldr	r3, [pc, #2368]	; 17b4 <test+0xf1c>
     e70:	ldrb	r3, [r3]
     e74:	orr	r2, r2, r3, lsl #8
     e78:	ldr	r3, [pc, #2368]	; 17c0 <test+0xf28>
     e7c:	ldrb	r3, [r3]
     e80:	orr	r3, r2, r3
     e84:	ldr	r2, [pc, #2400]	; 17ec <test+0xf54>
     e88:	ldrb	r2, [r2]
     e8c:	orr	r3, r3, r2, lsr #8
     e90:	ldr	r2, [pc, #2376]	; 17e0 <test+0xf48>
     e94:	ldrb	r2, [r2]
     e98:	orr	r3, r3, r2, lsr #16
     e9c:	ldr	r2, [pc, #2396]	; 1800 <test+0xf68>
     ea0:	ldrb	r2, [r2]
     ea4:	orr	r2, r3, r2, lsr #24
     ea8:	cmp	ip, r2
     eac:	bcc	12f8 <test+0xa60>
     eb0:	ldr	r3, [pc, #2368]	; 17f8 <test+0xf60>
     eb4:	ldrb	r2, [r3]
     eb8:	lsl	r2, r2, #16
     ebc:	ldr	ip, [pc, #2256]	; 1794 <test+0xefc>
     ec0:	ldrb	r3, [ip]
     ec4:	orr	ip, r2, r3, lsl #24
     ec8:	ldr	r3, [pc, #2276]	; 17b4 <test+0xf1c>
     ecc:	ldrb	r2, [r3]
     ed0:	orr	ip, ip, r2, lsl #8
     ed4:	ldr	r3, [pc, #2276]	; 17c0 <test+0xf28>
     ed8:	ldrb	r2, [r3]
     edc:	orr	r2, ip, r2
     ee0:	ldr	r3, [pc, #2308]	; 17ec <test+0xf54>
     ee4:	ldrb	r3, [r3]
     ee8:	orr	r2, r2, r3, lsr #8
     eec:	ldr	r3, [pc, #2284]	; 17e0 <test+0xf48>
     ef0:	ldrb	ip, [r3]
     ef4:	orr	r2, r2, ip, lsr #16
     ef8:	ldr	ip, [pc, #2304]	; 1800 <test+0xf68>
     efc:	ldrb	r3, [ip]
     f00:	orr	r2, r2, r3, lsr #24
     f04:	eor	r3, r1, r2
     f08:	ldr	ip, [pc, #2256]	; 17e0 <test+0xf48>
     f0c:	ldrb	r2, [ip]
     f10:	lsl	r1, r2, #16
     f14:	ldr	r2, [pc, #2256]	; 17ec <test+0xf54>
     f18:	ldrb	ip, [r2]
     f1c:	orr	r1, r1, ip, lsl #24
     f20:	ldr	ip, [pc, #2264]	; 1800 <test+0xf68>
     f24:	ldrb	r2, [ip]
     f28:	orr	r1, r1, r2, lsl #8
     f2c:	ldr	r2, [pc, #2156]	; 17a0 <test+0xf08>
     f30:	ldrb	r2, [r2]
     f34:	orr	r1, r1, r2
     f38:	eor	r2, r0, r1
     f3c:	orr	r3, r3, r2
     f40:	cmp	r3, #0
     f44:	moveq	r1, #1
     f48:	movne	r1, #0
     f4c:	cmp	r1, #0
     f50:	beq	12dc <test+0xa44>
     f54:	mov	r1, r8
     f58:	mov	r0, r4
     f5c:	bl	24c <flatcc_json_parser_symbol_part>
     f60:	sub	r2, r8, r4
     f64:	mov	r2, r1
     f68:	mov	r0, #0
     f6c:	ldr	r3, [pc, #2196]	; 1808 <test+0xf70>
     f70:	ldrb	r3, [r3]
     f74:	lsl	r3, r3, #16
     f78:	ldr	ip, [pc, #2200]	; 1818 <test+0xf80>
     f7c:	ldrb	ip, [ip]
     f80:	orr	r3, r3, ip, lsl #24
     f84:	ldr	ip, [pc, #2064]	; 179c <test+0xf04>
     f88:	ldrb	ip, [ip]
     f8c:	orr	ip, r3, ip, lsl #8
     f90:	ldr	r3, [pc, #2108]	; 17d4 <test+0xf3c>
     f94:	ldrb	r3, [r3]
     f98:	orr	r3, ip, r3
     f9c:	cmp	r2, r3
     fa0:	bne	fb4 <test+0x71c>
     fa4:	mov	r2, #0
     fa8:	cmp	r0, r2
     fac:	bcc	1164 <test+0x8cc>
     fb0:	b	fec <test+0x754>
     fb4:	ldr	r3, [pc, #2124]	; 1808 <test+0xf70>
     fb8:	ldrb	r3, [r3]
     fbc:	lsl	ip, r3, #16
     fc0:	ldr	r3, [pc, #2128]	; 1818 <test+0xf80>
     fc4:	ldrb	r3, [r3]
     fc8:	orr	ip, ip, r3, lsl #24
     fcc:	ldr	r0, [pc, #1992]	; 179c <test+0xf04>
     fd0:	ldrb	r3, [r0]
     fd4:	orr	r0, ip, r3, lsl #8
     fd8:	ldr	r3, [pc, #2036]	; 17d4 <test+0xf3c>
     fdc:	ldrb	r3, [r3]
     fe0:	orr	r3, r0, r3
     fe4:	cmp	r2, r3
     fe8:	bcc	1164 <test+0x8cc>
     fec:	mov	r2, #0
     ff0:	ldr	ip, [pc, #2064]	; 1808 <test+0xf70>
     ff4:	ldrb	r3, [ip]
     ff8:	lsl	r0, r3, #16
     ffc:	ldr	ip, [pc, #2068]	; 1818 <test+0xf80>
    1000:	ldrb	ip, [ip]
    1004:	orr	r0, r0, ip, lsl #24
    1008:	ldr	r3, [pc, #1932]	; 179c <test+0xf04>
    100c:	ldrb	ip, [r3]
    1010:	orr	r3, r0, ip, lsl #8
    1014:	ldr	r0, [pc, #1976]	; 17d4 <test+0xf3c>
    1018:	ldrb	r0, [r0]
    101c:	orr	r3, r3, r0
    1020:	eor	ip, r1, r3
    1024:	orr	r3, ip, r2
    1028:	cmp	r3, #0
    102c:	moveq	r0, #1
    1030:	movne	r0, #0
    1034:	cmp	r0, #0
    1038:	beq	1148 <test+0x8b0>
    103c:	add	r1, r4, #4
    1040:	mov	r2, r8
    1044:	mov	r0, r5
    1048:	bl	26c <flatcc_json_parser_symbol_end>
    104c:	mov	r1, r0
    1050:	mov	r2, r8
    1054:	mov	r0, r5
    1058:	bl	0 <flatcc_json_parser_space>
    105c:	mov	r4, r0
    1060:	cmp	r4, r8
    1064:	bne	107c <test+0x7e4>
    1068:	ldr	r0, [pc, #1956]	; 1814 <test+0xf7c>
    106c:	ldr	r0, [r0]
    1070:	ldr	r1, [pc, #1912]	; 17f0 <test+0xf58>
    1074:	bl	0 <fprintf>
    1078:	b	1748 <test+0xeb0>
    107c:	cmp	r8, r4
    1080:	bls	1098 <test+0x800>
    1084:	ldrb	ip, [r4]
    1088:	cmp	ip, #58	; 0x3a
    108c:	moveq	r2, #1
    1090:	movne	r2, #0
    1094:	b	109c <test+0x804>
    1098:	mov	r2, #0
    109c:	cmp	r2, #0
    10a0:	bne	10d4 <test+0x83c>
    10a4:	ldr	r3, [pc, #1896]	; 1814 <test+0xf7c>
    10a8:	ldr	r0, [r3]
    10ac:	ldr	r1, [pc, #1820]	; 17d0 <test+0xf38>
    10b0:	mov	r2, #58	; 0x3a
    10b4:	bl	0 <fprintf>
    10b8:	mov	r3, #17
    10bc:	mov	r2, r8
    10c0:	mov	r1, r4
    10c4:	mov	r0, r5
    10c8:	bl	0 <flatcc_json_parser_set_error>
    10cc:	mov	r4, r0
    10d0:	b	1748 <test+0xeb0>
    10d4:	add	r1, r4, #1
    10d8:	mov	r2, r8
    10dc:	mov	r0, r5
    10e0:	bl	0 <flatcc_json_parser_space>
    10e4:	mov	r4, r0
    10e8:	cmp	r4, r8
    10ec:	bne	1104 <test+0x86c>
    10f0:	ldr	r0, [pc, #1820]	; 1814 <test+0xf7c>
    10f4:	ldr	r0, [r0]
    10f8:	ldr	r1, [pc, #1776]	; 17f0 <test+0xf58>
    10fc:	bl	0 <fprintf>
    1100:	b	1748 <test+0xeb0>
    1104:	mov	r1, #2
    1108:	mov	r2, #4
    110c:	mov	r3, #4
    1110:	mov	r0, r6
    1114:	bl	0 <flatcc_builder_table_add>
    1118:	cmp	r0, #0
    111c:	beq	1748 <test+0xeb0>
    1120:	mov	r9, r4
    1124:	mov	r3, r0
    1128:	mov	r2, r8
    112c:	mov	r1, r4
    1130:	mov	r0, r5
    1134:	bl	644 <flatcc_json_parser_uint32>
    1138:	mov	r4, r0
    113c:	cmp	r9, r4
    1140:	beq	1748 <test+0xeb0>
    1144:	b	1618 <test+0xd80>
    1148:	mov	r3, #13
    114c:	mov	r2, r8
    1150:	mov	r1, r4
    1154:	mov	r0, r5
    1158:	bl	0 <flatcc_json_parser_set_error>
    115c:	mov	r4, r0
    1160:	b	1748 <test+0xeb0>
    1164:	mov	ip, #0
    1168:	ldr	r3, [pc, #1640]	; 17d8 <test+0xf40>
    116c:	ldrb	r0, [r3]
    1170:	lsl	r0, r0, #16
    1174:	ldr	r3, [pc, #1684]	; 1810 <test+0xf78>
    1178:	ldrb	r3, [r3]
    117c:	orr	r2, r0, r3, lsl #24
    1180:	ldr	r0, [pc, #1620]	; 17dc <test+0xf44>
    1184:	ldrb	r3, [r0]
    1188:	orr	r3, r2, r3, lsl #8
    118c:	ldr	r0, [pc, #1588]	; 17c8 <test+0xf30>
    1190:	ldrb	r2, [r0]
    1194:	orr	r0, r3, r2
    1198:	eor	r3, r1, r0
    119c:	orr	r1, r3, ip
    11a0:	cmp	r1, #0
    11a4:	moveq	ip, #1
    11a8:	movne	ip, #0
    11ac:	cmp	ip, #0
    11b0:	beq	12c0 <test+0xa28>
    11b4:	add	r1, r4, #4
    11b8:	mov	r2, r8
    11bc:	mov	r0, r5
    11c0:	bl	26c <flatcc_json_parser_symbol_end>
    11c4:	mov	r1, r0
    11c8:	mov	r2, r8
    11cc:	mov	r0, r5
    11d0:	bl	0 <flatcc_json_parser_space>
    11d4:	mov	r4, r0
    11d8:	cmp	r4, r8
    11dc:	bne	11f4 <test+0x95c>
    11e0:	ldr	r3, [pc, #1580]	; 1814 <test+0xf7c>
    11e4:	ldr	r0, [r3]
    11e8:	ldr	r1, [pc, #1536]	; 17f0 <test+0xf58>
    11ec:	bl	0 <fprintf>
    11f0:	b	1748 <test+0xeb0>
    11f4:	cmp	r8, r4
    11f8:	bls	1210 <test+0x978>
    11fc:	ldrb	ip, [r4]
    1200:	cmp	ip, #58	; 0x3a
    1204:	moveq	r3, #1
    1208:	movne	r3, #0
    120c:	b	1214 <test+0x97c>
    1210:	mov	r3, #0
    1214:	cmp	r3, #0
    1218:	bne	124c <test+0x9b4>
    121c:	ldr	r1, [pc, #1520]	; 1814 <test+0xf7c>
    1220:	ldr	r0, [r1]
    1224:	ldr	r1, [pc, #1444]	; 17d0 <test+0xf38>
    1228:	mov	r2, #58	; 0x3a
    122c:	bl	0 <fprintf>
    1230:	mov	r3, #17
    1234:	mov	r2, r8
    1238:	mov	r1, r4
    123c:	mov	r0, r5
    1240:	bl	0 <flatcc_json_parser_set_error>
    1244:	mov	r4, r0
    1248:	b	1748 <test+0xeb0>
    124c:	add	r1, r4, #1
    1250:	mov	r2, r8
    1254:	mov	r0, r5
    1258:	bl	0 <flatcc_json_parser_space>
    125c:	mov	r4, r0
    1260:	cmp	r4, r8
    1264:	bne	127c <test+0x9e4>
    1268:	ldr	r2, [pc, #1444]	; 1814 <test+0xf7c>
    126c:	ldr	r0, [r2]
    1270:	ldr	r1, [pc, #1400]	; 17f0 <test+0xf58>
    1274:	bl	0 <fprintf>
    1278:	b	1748 <test+0xeb0>
    127c:	mov	r1, #3
    1280:	mov	r2, #8
    1284:	mov	r3, #8
    1288:	mov	r0, r6
    128c:	bl	0 <flatcc_builder_table_add>
    1290:	mov	r3, r0
    1294:	cmp	r3, #0
    1298:	beq	1748 <test+0xeb0>
    129c:	mov	r9, r4
    12a0:	mov	r2, r8
    12a4:	mov	r1, r4
    12a8:	mov	r0, r5
    12ac:	bl	7cc <flatcc_json_parser_int64>
    12b0:	mov	r4, r0
    12b4:	cmp	r9, r4
    12b8:	beq	1748 <test+0xeb0>
    12bc:	b	1618 <test+0xd80>
    12c0:	mov	r3, #13
    12c4:	mov	r2, r8
    12c8:	mov	r1, r4
    12cc:	mov	r0, r5
    12d0:	bl	0 <flatcc_json_parser_set_error>
    12d4:	mov	r4, r0
    12d8:	b	1748 <test+0xeb0>
    12dc:	mov	r3, #13
    12e0:	mov	r2, r8
    12e4:	mov	r1, r9
    12e8:	mov	r0, r5
    12ec:	bl	0 <flatcc_json_parser_set_error>
    12f0:	mov	r4, r0
    12f4:	b	1748 <test+0xeb0>
    12f8:	bic	r0, r0, #255	; 0xff
    12fc:	bic	r0, r0, #65280	; 0xff00
    1300:	ldr	r2, [pc, #1268]	; 17fc <test+0xf64>
    1304:	ldrb	r3, [r2]
    1308:	lsl	r3, r3, #16
    130c:	ldr	r2, [pc, #1200]	; 17c4 <test+0xf2c>
    1310:	ldrb	r2, [r2]
    1314:	orr	r3, r3, r2, lsl #24
    1318:	ldr	ip, [pc, #1252]	; 1804 <test+0xf6c>
    131c:	ldrb	r2, [ip]
    1320:	orr	r3, r3, r2, lsl #8
    1324:	ldr	ip, [pc, #1224]	; 17f4 <test+0xf5c>
    1328:	ldrb	r2, [ip]
    132c:	orr	r3, r3, r2
    1330:	ldr	ip, [pc, #1252]	; 181c <test+0xf84>
    1334:	ldrb	ip, [ip]
    1338:	orr	r3, r3, ip, lsr #8
    133c:	ldr	r2, [pc, #1128]	; 17ac <test+0xf14>
    1340:	ldrb	r2, [r2]
    1344:	orr	ip, r3, r2, lsr #16
    1348:	eor	r1, r1, ip
    134c:	ldr	r2, [pc, #1112]	; 17ac <test+0xf14>
    1350:	ldrb	r2, [r2]
    1354:	lsl	r2, r2, #16
    1358:	ldr	r3, [pc, #1212]	; 181c <test+0xf84>
    135c:	ldrb	r3, [r3]
    1360:	orr	r2, r2, r3, lsl #24
    1364:	eor	r2, r0, r2
    1368:	orr	r2, r1, r2
    136c:	cmp	r2, #0
    1370:	moveq	r0, #1
    1374:	movne	r0, #0
    1378:	cmp	r0, #0
    137c:	beq	148c <test+0xbf4>
    1380:	add	r1, r9, #6
    1384:	mov	r2, r8
    1388:	mov	r0, r5
    138c:	bl	26c <flatcc_json_parser_symbol_end>
    1390:	mov	r2, r8
    1394:	mov	r1, r0
    1398:	mov	r0, r5
    139c:	bl	0 <flatcc_json_parser_space>
    13a0:	mov	r4, r0
    13a4:	cmp	r4, r8
    13a8:	bne	13c0 <test+0xb28>
    13ac:	ldr	r2, [pc, #1120]	; 1814 <test+0xf7c>
    13b0:	ldr	r0, [r2]
    13b4:	ldr	r1, [pc, #1076]	; 17f0 <test+0xf58>
    13b8:	bl	0 <fprintf>
    13bc:	b	1748 <test+0xeb0>
    13c0:	cmp	r8, r4
    13c4:	bls	13dc <test+0xb44>
    13c8:	ldrb	ip, [r4]
    13cc:	cmp	ip, #58	; 0x3a
    13d0:	moveq	r3, #1
    13d4:	movne	r3, #0
    13d8:	b	13e0 <test+0xb48>
    13dc:	mov	r3, #0
    13e0:	cmp	r3, #0
    13e4:	bne	1418 <test+0xb80>
    13e8:	ldr	ip, [pc, #1060]	; 1814 <test+0xf7c>
    13ec:	ldr	r0, [ip]
    13f0:	ldr	r1, [pc, #984]	; 17d0 <test+0xf38>
    13f4:	mov	r2, #58	; 0x3a
    13f8:	bl	0 <fprintf>
    13fc:	mov	r3, #17
    1400:	mov	r2, r8
    1404:	mov	r1, r4
    1408:	mov	r0, r5
    140c:	bl	0 <flatcc_json_parser_set_error>
    1410:	mov	r4, r0
    1414:	b	1748 <test+0xeb0>
    1418:	add	r1, r4, #1
    141c:	mov	r2, r8
    1420:	mov	r0, r5
    1424:	bl	0 <flatcc_json_parser_space>
    1428:	mov	r4, r0
    142c:	cmp	r4, r8
    1430:	bne	1448 <test+0xbb0>
    1434:	ldr	r0, [pc, #984]	; 1814 <test+0xf7c>
    1438:	ldr	r0, [r0]
    143c:	ldr	r1, [pc, #940]	; 17f0 <test+0xf58>
    1440:	bl	0 <fprintf>
    1444:	b	1748 <test+0xeb0>
    1448:	mov	r1, #1
    144c:	mov	r2, #8
    1450:	mov	r3, #8
    1454:	mov	r0, r6
    1458:	bl	0 <flatcc_builder_table_add>
    145c:	mov	r3, r0
    1460:	cmp	r3, #0
    1464:	beq	1748 <test+0xeb0>
    1468:	mov	r9, r4
    146c:	mov	r2, r8
    1470:	mov	r1, r4
    1474:	mov	r0, r5
    1478:	bl	0 <flatcc_json_parser_double>
    147c:	mov	r4, r0
    1480:	cmp	r9, r4
    1484:	beq	1748 <test+0xeb0>
    1488:	b	1618 <test+0xd80>
    148c:	mov	r3, #13
    1490:	mov	r2, r8
    1494:	mov	r1, r9
    1498:	mov	r0, r5
    149c:	bl	0 <flatcc_json_parser_set_error>
    14a0:	mov	r4, r0
    14a4:	b	1748 <test+0xeb0>
    14a8:	and	r2, r0, #-16777216	; 0xff000000
    14ac:	ldr	r3, [pc, #792]	; 17cc <test+0xf34>
    14b0:	ldrb	r3, [r3]
    14b4:	lsl	r0, r3, #16
    14b8:	ldr	ip, [pc, #740]	; 17a4 <test+0xf0c>
    14bc:	ldrb	r3, [ip]
    14c0:	orr	r3, r0, r3, lsl #24
    14c4:	ldr	ip, [pc, #752]	; 17bc <test+0xf24>
    14c8:	ldrb	ip, [ip]
    14cc:	orr	ip, r3, ip, lsl #8
    14d0:	ldr	r3, [pc, #736]	; 17b8 <test+0xf20>
    14d4:	ldrb	r3, [r3]
    14d8:	orr	r3, ip, r3
    14dc:	ldr	ip, [pc, #828]	; 1820 <test+0xf88>
    14e0:	ldrb	r0, [ip]
    14e4:	orr	ip, r3, r0, lsr #8
    14e8:	eor	r1, r1, ip
    14ec:	ldr	r3, [pc, #812]	; 1820 <test+0xf88>
    14f0:	ldrb	r0, [r3]
    14f4:	eor	r3, r2, r0, lsl #24
    14f8:	orr	r3, r1, r3
    14fc:	cmp	r3, #0
    1500:	moveq	r2, #1
    1504:	movne	r2, #0
    1508:	cmp	r2, #0
    150c:	beq	1730 <test+0xe98>
    1510:	add	r1, r9, #5
    1514:	mov	r2, r8
    1518:	mov	r0, r5
    151c:	bl	26c <flatcc_json_parser_symbol_end>
    1520:	mov	r2, r8
    1524:	mov	r1, r0
    1528:	mov	r0, r5
    152c:	bl	0 <flatcc_json_parser_space>
    1530:	mov	r4, r0
    1534:	cmp	r4, r8
    1538:	bne	1550 <test+0xcb8>
    153c:	ldr	r0, [pc, #720]	; 1814 <test+0xf7c>
    1540:	ldr	r0, [r0]
    1544:	ldr	r1, [pc, #676]	; 17f0 <test+0xf58>
    1548:	bl	0 <fprintf>
    154c:	b	1748 <test+0xeb0>
    1550:	cmp	r8, r4
    1554:	bls	156c <test+0xcd4>
    1558:	ldrb	r1, [r4]
    155c:	cmp	r1, #58	; 0x3a
    1560:	moveq	r0, #1
    1564:	movne	r0, #0
    1568:	b	1570 <test+0xcd8>
    156c:	mov	r0, #0
    1570:	cmp	r0, #0
    1574:	bne	15a8 <test+0xd10>
    1578:	ldr	r1, [pc, #660]	; 1814 <test+0xf7c>
    157c:	ldr	r0, [r1]
    1580:	ldr	r1, [pc, #584]	; 17d0 <test+0xf38>
    1584:	mov	r2, #58	; 0x3a
    1588:	bl	0 <fprintf>
    158c:	mov	r3, #17
    1590:	mov	r2, r8
    1594:	mov	r1, r4
    1598:	mov	r0, r5
    159c:	bl	0 <flatcc_json_parser_set_error>
    15a0:	mov	r4, r0
    15a4:	b	1748 <test+0xeb0>
    15a8:	add	r1, r4, #1
    15ac:	mov	r2, r8
    15b0:	mov	r0, r5
    15b4:	bl	0 <flatcc_json_parser_space>
    15b8:	mov	r4, r0
    15bc:	cmp	r4, r8
    15c0:	bne	15d8 <test+0xd40>
    15c4:	ldr	r2, [pc, #584]	; 1814 <test+0xf7c>
    15c8:	ldr	r0, [r2]
    15cc:	ldr	r1, [pc, #540]	; 17f0 <test+0xf58>
    15d0:	bl	0 <fprintf>
    15d4:	b	1748 <test+0xeb0>
    15d8:	mov	r1, #0
    15dc:	mov	r2, #1
    15e0:	mov	r3, #1
    15e4:	mov	r0, r6
    15e8:	bl	0 <flatcc_builder_table_add>
    15ec:	mov	r3, r0
    15f0:	cmp	r3, #0
    15f4:	beq	1748 <test+0xeb0>
    15f8:	mov	r9, r4
    15fc:	mov	r2, r8
    1600:	mov	r1, r4
    1604:	mov	r0, r5
    1608:	bl	708 <flatcc_json_parser_uint8>
    160c:	mov	r4, r0
    1610:	cmp	r9, r4
    1614:	beq	1748 <test+0xeb0>
    1618:	mov	r2, r8
    161c:	mov	r1, r4
    1620:	mov	r0, r5
    1624:	bl	0 <flatcc_json_parser_space>
    1628:	mov	r4, r0
    162c:	cmp	r4, r8
    1630:	bne	1648 <test+0xdb0>
    1634:	ldr	r1, [pc, #472]	; 1814 <test+0xf7c>
    1638:	ldr	r0, [r1]
    163c:	ldr	r1, [pc, #428]	; 17f0 <test+0xf58>
    1640:	bl	0 <fprintf>
    1644:	b	1748 <test+0xeb0>
    1648:	ldrb	ip, [r4]
    164c:	cmp	ip, #44	; 0x2c
    1650:	bne	1690 <test+0xdf8>
    1654:	add	r1, r4, #1
    1658:	mov	r2, r8
    165c:	mov	r0, r5
    1660:	bl	0 <flatcc_json_parser_space>
    1664:	mov	r4, r0
    1668:	cmp	r4, r8
    166c:	bne	1684 <test+0xdec>
    1670:	ldr	r2, [pc, #412]	; 1814 <test+0xf7c>
    1674:	ldr	r0, [r2]
    1678:	ldr	r1, [pc, #368]	; 17f0 <test+0xf58>
    167c:	bl	0 <fprintf>
    1680:	b	1748 <test+0xeb0>
    1684:	ldrb	r0, [r4]
    1688:	cmp	r0, #125	; 0x7d
    168c:	bne	9cc <test+0x134>
    1690:	cmp	r8, r4
    1694:	bls	16ac <test+0xe14>
    1698:	ldrb	r2, [r4]
    169c:	cmp	r2, #125	; 0x7d
    16a0:	moveq	r0, #1
    16a4:	movne	r0, #0
    16a8:	b	16b0 <test+0xe18>
    16ac:	mov	r0, #0
    16b0:	cmp	r0, #0
    16b4:	bne	16e8 <test+0xe50>
    16b8:	ldr	ip, [pc, #340]	; 1814 <test+0xf7c>
    16bc:	ldr	r0, [ip]
    16c0:	ldr	r1, [pc, #264]	; 17d0 <test+0xf38>
    16c4:	mov	r2, #125	; 0x7d
    16c8:	bl	0 <fprintf>
    16cc:	mov	r3, #17
    16d0:	mov	r2, r8
    16d4:	mov	r1, r4
    16d8:	mov	r0, r5
    16dc:	bl	0 <flatcc_json_parser_set_error>
    16e0:	mov	r4, r0
    16e4:	b	1748 <test+0xeb0>
    16e8:	add	r4, r4, #1
    16ec:	mov	r0, r6
    16f0:	bl	0 <flatcc_builder_end_table>
    16f4:	mov	r1, r0
    16f8:	mov	r0, r6
    16fc:	bl	0 <flatcc_builder_end_buffer>
    1700:	mov	r2, r8
    1704:	mov	r1, r4
    1708:	mov	r0, r5
    170c:	bl	0 <flatcc_json_parser_space>
    1710:	mov	r4, r0
    1714:	cmp	r4, r8
    1718:	beq	1748 <test+0xeb0>
    171c:	ldr	r3, [pc, #240]	; 1814 <test+0xf7c>
    1720:	ldr	r0, [r3]
    1724:	ldr	r1, [pc, #248]	; 1824 <test+0xf8c>
    1728:	bl	0 <fprintf>
    172c:	b	1748 <test+0xeb0>
    1730:	mov	r3, #13
    1734:	mov	r2, r8
    1738:	mov	r1, r9
    173c:	mov	r0, r5
    1740:	bl	0 <flatcc_json_parser_set_error>
    1744:	mov	r4, r0
    1748:	ldr	ip, [r5, #24]
    174c:	cmp	ip, #0
    1750:	beq	1828 <test+0xf90>
    1754:	ldr	r0, [r5, #24]
    1758:	bl	0 <flatcc_json_parser_error_string>
    175c:	ldr	r3, [pc, #176]	; 1814 <test+0xf7c>
    1760:	ldr	ip, [r3]
    1764:	ldr	r1, [pc, #120]	; 17e4 <test+0xf4c>
    1768:	ldr	r2, [r5, #16]
    176c:	ldr	r3, [r5, #36]	; 0x24
    1770:	ldr	r8, [r5, #4]
    1774:	sub	r3, r3, r8
    1778:	add	r3, r3, #1
    177c:	str	r0, [sp]
    1780:	mov	r0, ip
    1784:	bl	0 <fprintf>
    1788:	mov	r0, r6
    178c:	bl	0 <flatcc_builder_reset>
    1790:	b	1838 <test+0xfa0>
    1794:	.word	0x0000007b
    1798:	.word	0x0000006b
    179c:	.word	0x00000068
    17a0:	.word	0x00000082
    17a4:	.word	0x00000015
    17a8:	.word	0x0000002c
    17ac:	.word	0x00000049
    17b0:	.word	0x00000029
    17b4:	.word	0x0000007d
    17b8:	.word	0x00000018
    17bc:	.word	0x00000017
    17c0:	.word	0x0000007e
    17c4:	.word	0x00000044
    17c8:	.word	0x00000003
    17cc:	.word	0x00000016
    17d0:	.word	0x0000002e
    17d4:	.word	0x00000069
    17d8:	.word	0x00000001
    17dc:	.word	0x00000002
    17e0:	.word	0x00000080
    17e4:	.word	0x00000070
    17e8:	.word	0x0000002b
    17ec:	.word	0x0000007f
    17f0:	.word	0x0000001b
    17f4:	.word	0x00000047
    17f8:	.word	0x0000007c
    17fc:	.word	0x00000045
    1800:	.word	0x00000081
    1804:	.word	0x00000046
    1808:	.word	0x00000067
    180c:	.word	0x0000002a
	...
    1818:	.word	0x00000066
    181c:	.word	0x00000048
    1820:	.word	0x00000019
    1824:	.word	0x0000004b
    1828:	ldr	r2, [pc, #64]	; 1870 <test+0xfd8>
    182c:	ldr	r0, [r2]
    1830:	ldr	r1, [pc, #52]	; 186c <test+0xfd4>
    1834:	bl	0 <fprintf>
    1838:	ldr	r2, [r5, #24]
    183c:	str	r2, [r7]
    1840:	mov	r0, r4
    1844:	ldr	r4, [sp, #16]
    1848:	ldr	r5, [sp, #20]
    184c:	ldr	r6, [sp, #24]
    1850:	ldr	r7, [sp, #28]
    1854:	ldr	r8, [sp, #32]
    1858:	ldr	r9, [sp, #36]	; 0x24
    185c:	ldr	sl, [sp, #40]	; 0x28
    1860:	ldr	lr, [sp, #8]
    1864:	add	sp, sp, #104	; 0x68
    1868:	bx	lr
    186c:	.word	0x00000005
    1870:	.word	0x00000000

00001874 <main>:
    1874:	mov	ip, sp
    1878:	sub	sp, sp, #248	; 0xf8
    187c:	str	ip, [sp]
    1880:	str	lr, [sp, #4]
    1884:	mvn	r0, #0
    1888:	str	r0, [sp, #8]
    188c:	add	r0, sp, #16
    1890:	bl	0 <flatcc_builder_init>
    1894:	add	r0, sp, #16
    1898:	ldr	r1, [pc, #32]	; 18c0 <main+0x4c>
    189c:	ldr	r2, [pc, #32]	; 18c4 <main+0x50>
    18a0:	add	r3, sp, #8
    18a4:	bl	898 <test>
    18a8:	add	r0, sp, #16
    18ac:	bl	0 <flatcc_builder_clear>
    18b0:	ldr	r0, [sp, #8]
    18b4:	ldr	lr, [sp, #4]
    18b8:	add	sp, sp, #248	; 0xf8
    18bc:	bx	lr
    18c0:	.word	0x00000000
    18c4:	.word	0x00000285
