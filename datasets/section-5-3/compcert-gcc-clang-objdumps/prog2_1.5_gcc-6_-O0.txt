
../compcert-repos/prog2/1.5:     file format elf32-littlearm


Disassembly of section .init:

000105e8 <.init>:
   105e8:	push	{r3, lr}
   105ec:	bl	106a4 <_start@@Base+0x3c>
   105f0:	pop	{r3, pc}

Disassembly of section .plt:

000105f4 <strcmp@plt-0x14>:
   105f4:	push	{lr}		; (str lr, [sp, #-4]!)
   105f8:	ldr	lr, [pc, #4]	; 10604 <strcmp@plt-0x4>
   105fc:	add	lr, pc, lr
   10600:	ldr	pc, [lr, #8]!
   10604:	strdeq	r0, [r1], -ip

00010608 <strcmp@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2556]!	; 0x9fc

00010614 <fopen@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #16, 20	; 0x10000
   1061c:	ldr	pc, [ip, #2548]!	; 0x9f4

00010620 <__libc_start_main@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #16, 20	; 0x10000
   10628:	ldr	pc, [ip, #2540]!	; 0x9ec

0001062c <__gmon_start__@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #16, 20	; 0x10000
   10634:	ldr	pc, [ip, #2532]!	; 0x9e4

00010638 <strlen@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #16, 20	; 0x10000
   10640:	ldr	pc, [ip, #2524]!	; 0x9dc

00010644 <fgetc@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #16, 20	; 0x10000
   1064c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010650 <fseek@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #16, 20	; 0x10000
   10658:	ldr	pc, [ip, #2508]!	; 0x9cc

0001065c <abort@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2500]!	; 0x9c4

Disassembly of section .text:

00010668 <_start@@Base>:
   10668:	mov	fp, #0
   1066c:	mov	lr, #0
   10670:	pop	{r1}		; (ldr r1, [sp], #4)
   10674:	mov	r2, sp
   10678:	push	{r2}		; (str r2, [sp, #-4]!)
   1067c:	push	{r0}		; (str r0, [sp, #-4]!)
   10680:	ldr	ip, [pc, #16]	; 10698 <_start@@Base+0x30>
   10684:	push	{ip}		; (str ip, [sp, #-4]!)
   10688:	ldr	r0, [pc, #12]	; 1069c <_start@@Base+0x34>
   1068c:	ldr	r3, [pc, #12]	; 106a0 <_start@@Base+0x38>
   10690:	bl	10620 <__libc_start_main@plt>
   10694:	bl	1065c <abort@plt>
   10698:	muleq	r1, ip, sl
   1069c:	muleq	r1, r0, r7
   106a0:	andeq	r0, r1, ip, lsr sl
   106a4:	ldr	r3, [pc, #20]	; 106c0 <_start@@Base+0x58>
   106a8:	ldr	r2, [pc, #20]	; 106c4 <_start@@Base+0x5c>
   106ac:	add	r3, pc, r3
   106b0:	ldr	r2, [r3, r2]
   106b4:	cmp	r2, #0
   106b8:	bxeq	lr
   106bc:	b	1062c <__gmon_start__@plt>
   106c0:	andeq	r0, r1, ip, asr #18
   106c4:	andeq	r0, r0, ip, lsr #32
   106c8:	ldr	r3, [pc, #28]	; 106ec <_start@@Base+0x84>
   106cc:	ldr	r0, [pc, #28]	; 106f0 <_start@@Base+0x88>
   106d0:	sub	r3, r3, r0
   106d4:	cmp	r3, #6
   106d8:	bxls	lr
   106dc:	ldr	r3, [pc, #16]	; 106f4 <_start@@Base+0x8c>
   106e0:	cmp	r3, #0
   106e4:	bxeq	lr
   106e8:	bx	r3
   106ec:	andeq	r1, r2, fp, lsr r0
   106f0:	andeq	r1, r2, r8, lsr r0
   106f4:	andeq	r0, r0, r0
   106f8:	ldr	r1, [pc, #36]	; 10724 <_start@@Base+0xbc>
   106fc:	ldr	r0, [pc, #36]	; 10728 <_start@@Base+0xc0>
   10700:	sub	r1, r1, r0
   10704:	asr	r1, r1, #2
   10708:	add	r1, r1, r1, lsr #31
   1070c:	asrs	r1, r1, #1
   10710:	bxeq	lr
   10714:	ldr	r3, [pc, #16]	; 1072c <_start@@Base+0xc4>
   10718:	cmp	r3, #0
   1071c:	bxeq	lr
   10720:	bx	r3
   10724:	andeq	r1, r2, r8, lsr r0
   10728:	andeq	r1, r2, r8, lsr r0
   1072c:	andeq	r0, r0, r0
   10730:	push	{r4, lr}
   10734:	ldr	r4, [pc, #24]	; 10754 <_start@@Base+0xec>
   10738:	ldrb	r3, [r4]
   1073c:	cmp	r3, #0
   10740:	popne	{r4, pc}
   10744:	bl	106c8 <_start@@Base+0x60>
   10748:	mov	r3, #1
   1074c:	strb	r3, [r4]
   10750:	pop	{r4, pc}
   10754:	andeq	r1, r2, r8, lsr r0
   10758:	ldr	r0, [pc, #40]	; 10788 <_start@@Base+0x120>
   1075c:	ldr	r3, [r0]
   10760:	cmp	r3, #0
   10764:	bne	1076c <_start@@Base+0x104>
   10768:	b	106f8 <_start@@Base+0x90>
   1076c:	ldr	r3, [pc, #24]	; 1078c <_start@@Base+0x124>
   10770:	cmp	r3, #0
   10774:	beq	10768 <_start@@Base+0x100>
   10778:	push	{r4, lr}
   1077c:	blx	r3
   10780:	pop	{r4, lr}
   10784:	b	106f8 <_start@@Base+0x90>
   10788:	andeq	r0, r2, r4, lsl pc
   1078c:	andeq	r0, r0, r0

00010790 <main@@Base>:
   10790:	push	{fp, lr}
   10794:	add	fp, sp, #4
   10798:	sub	sp, sp, #32
   1079c:	mov	r3, #0
   107a0:	str	r3, [fp, #-8]
   107a4:	mov	r3, #1
   107a8:	str	r3, [fp, #-12]
   107ac:	mov	r3, #0
   107b0:	str	r3, [fp, #-16]
   107b4:	mov	r3, #0
   107b8:	str	r3, [fp, #-20]	; 0xffffffec
   107bc:	mov	r3, #0
   107c0:	str	r3, [fp, #-24]	; 0xffffffe8
   107c4:	ldr	r1, [pc, #360]	; 10934 <main@@Base+0x1a4>
   107c8:	ldr	r0, [pc, #360]	; 10938 <main@@Base+0x1a8>
   107cc:	bl	10614 <fopen@plt>
   107d0:	str	r0, [fp, #-28]	; 0xffffffe4
   107d4:	b	10908 <main@@Base+0x178>
   107d8:	ldr	r3, [fp, #-12]
   107dc:	add	r3, r3, #1
   107e0:	str	r3, [fp, #-12]
   107e4:	b	10908 <main@@Base+0x178>
   107e8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   107ec:	cmp	r3, #115	; 0x73
   107f0:	bne	1081c <main@@Base+0x8c>
   107f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   107f8:	ldr	r0, [pc, #316]	; 1093c <main@@Base+0x1ac>
   107fc:	bl	10944 <IsIOFunction@@Base>
   10800:	mov	r3, r0
   10804:	cmp	r3, #0
   10808:	beq	10908 <main@@Base+0x178>
   1080c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10810:	add	r3, r3, #1
   10814:	str	r3, [fp, #-20]	; 0xffffffec
   10818:	b	10908 <main@@Base+0x178>
   1081c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   10820:	cmp	r3, #112	; 0x70
   10824:	bne	10850 <main@@Base+0xc0>
   10828:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1082c:	ldr	r0, [pc, #268]	; 10940 <main@@Base+0x1b0>
   10830:	bl	10944 <IsIOFunction@@Base>
   10834:	mov	r3, r0
   10838:	cmp	r3, #0
   1083c:	beq	10908 <main@@Base+0x178>
   10840:	ldr	r3, [fp, #-20]	; 0xffffffec
   10844:	add	r3, r3, #1
   10848:	str	r3, [fp, #-20]	; 0xffffffec
   1084c:	b	10908 <main@@Base+0x178>
   10850:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   10854:	cmp	r3, #47	; 0x2f
   10858:	bne	108a8 <main@@Base+0x118>
   1085c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10860:	bl	10644 <fgetc@plt>
   10864:	mov	r3, r0
   10868:	cmp	r3, #42	; 0x2a
   1086c:	bne	10894 <main@@Base+0x104>
   10870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10874:	cmp	r3, #0
   10878:	bne	10894 <main@@Base+0x104>
   1087c:	mov	r3, #1
   10880:	str	r3, [fp, #-24]	; 0xffffffe8
   10884:	ldr	r3, [fp, #-16]
   10888:	add	r3, r3, #1
   1088c:	str	r3, [fp, #-16]
   10890:	b	10908 <main@@Base+0x178>
   10894:	mov	r2, #1
   10898:	mvn	r1, #0
   1089c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   108a0:	bl	10650 <fseek@plt>
   108a4:	b	10908 <main@@Base+0x178>
   108a8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   108ac:	cmp	r3, #42	; 0x2a
   108b0:	bne	10908 <main@@Base+0x178>
   108b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   108b8:	bl	10644 <fgetc@plt>
   108bc:	mov	r3, r0
   108c0:	cmp	r3, #47	; 0x2f
   108c4:	bne	108f8 <main@@Base+0x168>
   108c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108cc:	cmp	r3, #0
   108d0:	beq	108f8 <main@@Base+0x168>
   108d4:	ldr	r3, [fp, #-16]
   108d8:	add	r3, r3, #1
   108dc:	str	r3, [fp, #-16]
   108e0:	ldr	r3, [fp, #-8]
   108e4:	add	r3, r3, #1
   108e8:	str	r3, [fp, #-8]
   108ec:	mov	r3, #0
   108f0:	str	r3, [fp, #-24]	; 0xffffffe8
   108f4:	b	10908 <main@@Base+0x178>
   108f8:	mov	r2, #1
   108fc:	mvn	r1, #0
   10900:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10904:	bl	10650 <fseek@plt>
   10908:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1090c:	bl	10644 <fgetc@plt>
   10910:	mov	r3, r0
   10914:	strb	r3, [fp, #-29]	; 0xffffffe3
   10918:	ldr	r3, [fp, #-16]
   1091c:	add	r3, r3, #1
   10920:	str	r3, [fp, #-16]
   10924:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   10928:	cmp	r3, #10
   1092c:	bne	107e8 <main@@Base+0x58>
   10930:	b	107d8 <main@@Base+0x48>
   10934:	andeq	r0, r1, ip, lsr #21
   10938:			; <UNDEFINED> instruction: 0x00010ab0
   1093c:	andeq	r0, r1, r4, asr #21
   10940:	andeq	r0, r1, ip, asr #21

00010944 <IsIOFunction@@Base>:
   10944:	push	{fp, lr}
   10948:	add	fp, sp, #4
   1094c:	sub	sp, sp, #24
   10950:	str	r0, [fp, #-24]	; 0xffffffe8
   10954:	str	r1, [fp, #-28]	; 0xffffffe4
   10958:	mov	r2, #1
   1095c:	mvn	r1, #0
   10960:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10964:	bl	10650 <fseek@plt>
   10968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1096c:	bl	10638 <strlen@plt>
   10970:	mov	r3, r0
   10974:	str	r3, [fp, #-12]
   10978:	mov	r3, #0
   1097c:	str	r3, [fp, #-20]	; 0xffffffec
   10980:	sub	r3, fp, #16
   10984:	mov	r2, #0
   10988:	strh	r2, [r3]
   1098c:	strb	r2, [r3, #2]
   10990:	mov	r3, #0
   10994:	str	r3, [fp, #-8]
   10998:	b	109cc <IsIOFunction@@Base+0x88>
   1099c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   109a0:	bl	10644 <fgetc@plt>
   109a4:	mov	r3, r0
   109a8:	uxtb	r1, r3
   109ac:	sub	r2, fp, #20
   109b0:	ldr	r3, [fp, #-8]
   109b4:	add	r3, r2, r3
   109b8:	mov	r2, r1
   109bc:	strb	r2, [r3]
   109c0:	ldr	r3, [fp, #-8]
   109c4:	add	r3, r3, #1
   109c8:	str	r3, [fp, #-8]
   109cc:	ldr	r2, [fp, #-8]
   109d0:	ldr	r3, [fp, #-12]
   109d4:	cmp	r2, r3
   109d8:	blt	1099c <IsIOFunction@@Base+0x58>
   109dc:	sub	r2, fp, #20
   109e0:	ldr	r3, [fp, #-8]
   109e4:	add	r3, r2, r3
   109e8:	mov	r2, #0
   109ec:	strb	r2, [r3]
   109f0:	ldr	r3, [fp, #-12]
   109f4:	rsb	r3, r3, #1
   109f8:	mov	r2, #1
   109fc:	mov	r1, r3
   10a00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10a04:	bl	10650 <fseek@plt>
   10a08:	sub	r3, fp, #20
   10a0c:	mov	r1, r3
   10a10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a14:	bl	10608 <strcmp@plt>
   10a18:	mov	r3, r0
   10a1c:	cmp	r3, #0
   10a20:	bne	10a2c <IsIOFunction@@Base+0xe8>
   10a24:	mov	r3, #1
   10a28:	b	10a30 <IsIOFunction@@Base+0xec>
   10a2c:	mov	r3, #0
   10a30:	mov	r0, r3
   10a34:	sub	sp, fp, #4
   10a38:	pop	{fp, pc}

00010a3c <__libc_csu_init@@Base>:
   10a3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a40:	mov	r7, r0
   10a44:	ldr	r6, [pc, #72]	; 10a94 <__libc_csu_init@@Base+0x58>
   10a48:	ldr	r5, [pc, #72]	; 10a98 <__libc_csu_init@@Base+0x5c>
   10a4c:	add	r6, pc, r6
   10a50:	add	r5, pc, r5
   10a54:	sub	r6, r6, r5
   10a58:	mov	r8, r1
   10a5c:	mov	r9, r2
   10a60:	bl	105e8 <strcmp@plt-0x20>
   10a64:	asrs	r6, r6, #2
   10a68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a6c:	mov	r4, #0
   10a70:	add	r4, r4, #1
   10a74:	ldr	r3, [r5], #4
   10a78:	mov	r2, r9
   10a7c:	mov	r1, r8
   10a80:	mov	r0, r7
   10a84:	blx	r3
   10a88:	cmp	r6, r4
   10a8c:	bne	10a70 <__libc_csu_init@@Base+0x34>
   10a90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a94:			; <UNDEFINED> instruction: 0x000104bc
   10a98:			; <UNDEFINED> instruction: 0x000104b4

00010a9c <__libc_csu_fini@@Base>:
   10a9c:	bx	lr

Disassembly of section .fini:

00010aa0 <.fini>:
   10aa0:	push	{r3, lr}
   10aa4:	pop	{r3, pc}
