
ubuntu-preinstalled/btrfs-image:     file format elf32-littlearm


Disassembly of section .init:

000086e8 <.init>:
    86e8:	push	{r3, lr}
    86ec:	bl	929c <_start@@Base+0x48>
    86f0:	pop	{r3, pc}

Disassembly of section .plt:

000086f4 <pthread_mutex_unlock@plt-0x14>:
    86f4:	push	{lr}		; (str lr, [sp, #-4]!)
    86f8:	ldr	lr, [pc, #4]	; 8704 <pthread_mutex_unlock@plt-0x4>
    86fc:	add	lr, pc, lr
    8700:	ldr	pc, [lr, #8]!
    8704:	andeq	r0, r6, r0, lsr r6

00008708 <pthread_mutex_unlock@plt>:
    8708:	add	ip, pc, #0, 12
    870c:	add	ip, ip, #96, 20	; 0x60000
    8710:	ldr	pc, [ip, #1584]!	; 0x630

00008714 <calloc@plt>:
    8714:			; <UNDEFINED> instruction: 0xe7fd4778
    8718:	add	ip, pc, #0, 12
    871c:	add	ip, ip, #96, 20	; 0x60000
    8720:	ldr	pc, [ip, #1572]!	; 0x624

00008724 <raise@plt>:
    8724:	add	ip, pc, #0, 12
    8728:	add	ip, ip, #96, 20	; 0x60000
    872c:	ldr	pc, [ip, #1564]!	; 0x61c

00008730 <pthread_cond_broadcast@plt>:
    8730:	add	ip, pc, #0, 12
    8734:	add	ip, ip, #96, 20	; 0x60000
    8738:	ldr	pc, [ip, #1556]!	; 0x614

0000873c <fsync@plt>:
    873c:	add	ip, pc, #0, 12
    8740:	add	ip, ip, #96, 20	; 0x60000
    8744:	ldr	pc, [ip, #1548]!	; 0x60c

00008748 <strcmp@plt>:
    8748:	add	ip, pc, #0, 12
    874c:	add	ip, ip, #96, 20	; 0x60000
    8750:	ldr	pc, [ip, #1540]!	; 0x604

00008754 <__cxa_finalize@plt>:
    8754:	add	ip, pc, #0, 12
    8758:	add	ip, ip, #96, 20	; 0x60000
    875c:	ldr	pc, [ip, #1532]!	; 0x5fc

00008760 <uuid_unparse@plt>:
    8760:	add	ip, pc, #0, 12
    8764:	add	ip, ip, #96, 20	; 0x60000
    8768:	ldr	pc, [ip, #1524]!	; 0x5f4

0000876c <posix_fadvise64@plt>:
    876c:	add	ip, pc, #0, 12
    8770:	add	ip, ip, #96, 20	; 0x60000
    8774:	ldr	pc, [ip, #1516]!	; 0x5ec

00008778 <blkid_probe_lookup_value@plt>:
    8778:	add	ip, pc, #0, 12
    877c:	add	ip, ip, #96, 20	; 0x60000
    8780:	ldr	pc, [ip, #1508]!	; 0x5e4

00008784 <read@plt>:
    8784:	add	ip, pc, #0, 12
    8788:	add	ip, ip, #96, 20	; 0x60000
    878c:	ldr	pc, [ip, #1500]!	; 0x5dc

00008790 <pthread_mutex_destroy@plt>:
    8790:			; <UNDEFINED> instruction: 0xe7fd4778
    8794:	add	ip, pc, #0, 12
    8798:	add	ip, ip, #96, 20	; 0x60000
    879c:	ldr	pc, [ip, #1488]!	; 0x5d0

000087a0 <fflush@plt>:
    87a0:	add	ip, pc, #0, 12
    87a4:	add	ip, ip, #96, 20	; 0x60000
    87a8:	ldr	pc, [ip, #1480]!	; 0x5c8

000087ac <unlinkat@plt>:
    87ac:	add	ip, pc, #0, 12
    87b0:	add	ip, ip, #96, 20	; 0x60000
    87b4:	ldr	pc, [ip, #1472]!	; 0x5c0

000087b8 <memmove@plt>:
    87b8:			; <UNDEFINED> instruction: 0xe7fd4778
    87bc:	add	ip, pc, #0, 12
    87c0:	add	ip, ip, #96, 20	; 0x60000
    87c4:	ldr	pc, [ip, #1460]!	; 0x5b4

000087c8 <free@plt>:
    87c8:			; <UNDEFINED> instruction: 0xe7fd4778
    87cc:	add	ip, pc, #0, 12
    87d0:	add	ip, ip, #96, 20	; 0x60000
    87d4:	ldr	pc, [ip, #1448]!	; 0x5a8

000087d8 <fgets@plt>:
    87d8:	add	ip, pc, #0, 12
    87dc:	add	ip, ip, #96, 20	; 0x60000
    87e0:	ldr	pc, [ip, #1440]!	; 0x5a0

000087e4 <fgetxattr@plt>:
    87e4:	add	ip, pc, #0, 12
    87e8:	add	ip, ip, #96, 20	; 0x60000
    87ec:	ldr	pc, [ip, #1432]!	; 0x598

000087f0 <pthread_mutex_lock@plt>:
    87f0:	add	ip, pc, #0, 12
    87f4:	add	ip, ip, #96, 20	; 0x60000
    87f8:	ldr	pc, [ip, #1424]!	; 0x590

000087fc <nanosleep@plt>:
    87fc:	add	ip, pc, #0, 12
    8800:	add	ip, ip, #96, 20	; 0x60000
    8804:	ldr	pc, [ip, #1416]!	; 0x588

00008808 <statfs@plt>:
    8808:	add	ip, pc, #0, 12
    880c:	add	ip, ip, #96, 20	; 0x60000
    8810:	ldr	pc, [ip, #1408]!	; 0x580

00008814 <strndup@plt>:
    8814:	add	ip, pc, #0, 12
    8818:	add	ip, ip, #96, 20	; 0x60000
    881c:	ldr	pc, [ip, #1400]!	; 0x578

00008820 <__vsnprintf_chk@plt>:
    8820:	add	ip, pc, #0, 12
    8824:	add	ip, ip, #96, 20	; 0x60000
    8828:	ldr	pc, [ip, #1392]!	; 0x570

0000882c <memcpy@plt>:
    882c:			; <UNDEFINED> instruction: 0xe7fd4778
    8830:	add	ip, pc, #0, 12
    8834:	add	ip, ip, #96, 20	; 0x60000
    8838:	ldr	pc, [ip, #1380]!	; 0x564

0000883c <__memset_chk@plt>:
    883c:	add	ip, pc, #0, 12
    8840:	add	ip, ip, #96, 20	; 0x60000
    8844:	ldr	pc, [ip, #1372]!	; 0x55c

00008848 <pthread_mutex_init@plt>:
    8848:	add	ip, pc, #0, 12
    884c:	add	ip, ip, #96, 20	; 0x60000
    8850:	ldr	pc, [ip, #1364]!	; 0x554

00008854 <time@plt>:
    8854:	add	ip, pc, #0, 12
    8858:	add	ip, ip, #96, 20	; 0x60000
    885c:	ldr	pc, [ip, #1356]!	; 0x54c

00008860 <ftruncate64@plt>:
    8860:	add	ip, pc, #0, 12
    8864:	add	ip, ip, #96, 20	; 0x60000
    8868:	ldr	pc, [ip, #1348]!	; 0x544

0000886c <uncompress@plt>:
    886c:	add	ip, pc, #0, 12
    8870:	add	ip, ip, #96, 20	; 0x60000
    8874:	ldr	pc, [ip, #1340]!	; 0x53c

00008878 <memcmp@plt>:
    8878:			; <UNDEFINED> instruction: 0xe7fd4778
    887c:	add	ip, pc, #0, 12
    8880:	add	ip, ip, #96, 20	; 0x60000
    8884:	ldr	pc, [ip, #1328]!	; 0x530

00008888 <__vprintf_chk@plt>:
    8888:	add	ip, pc, #0, 12
    888c:	add	ip, ip, #96, 20	; 0x60000
    8890:	ldr	pc, [ip, #1320]!	; 0x528

00008894 <jrand48@plt>:
    8894:			; <UNDEFINED> instruction: 0xe7fd4778
    8898:	add	ip, pc, #0, 12
    889c:	add	ip, ip, #96, 20	; 0x60000
    88a0:	ldr	pc, [ip, #1308]!	; 0x51c

000088a4 <blkid_put_cache@plt>:
    88a4:	add	ip, pc, #0, 12
    88a8:	add	ip, ip, #96, 20	; 0x60000
    88ac:	ldr	pc, [ip, #1300]!	; 0x514

000088b0 <uname@plt>:
    88b0:	add	ip, pc, #0, 12
    88b4:	add	ip, ip, #96, 20	; 0x60000
    88b8:	ldr	pc, [ip, #1292]!	; 0x50c

000088bc <blkid_probe_set_device@plt>:
    88bc:	add	ip, pc, #0, 12
    88c0:	add	ip, ip, #96, 20	; 0x60000
    88c4:	ldr	pc, [ip, #1284]!	; 0x504

000088c8 <strdup@plt>:
    88c8:			; <UNDEFINED> instruction: 0xe7fd4778
    88cc:	add	ip, pc, #0, 12
    88d0:	add	ip, ip, #96, 20	; 0x60000
    88d4:	ldr	pc, [ip, #1272]!	; 0x4f8

000088d8 <openat@plt>:
    88d8:	add	ip, pc, #0, 12
    88dc:	add	ip, ip, #96, 20	; 0x60000
    88e0:	ldr	pc, [ip, #1264]!	; 0x4f0

000088e4 <__stack_chk_fail@plt>:
    88e4:	add	ip, pc, #0, 12
    88e8:	add	ip, ip, #96, 20	; 0x60000
    88ec:	ldr	pc, [ip, #1256]!	; 0x4e8

000088f0 <pthread_cond_init@plt>:
    88f0:	add	ip, pc, #0, 12
    88f4:	add	ip, ip, #96, 20	; 0x60000
    88f8:	ldr	pc, [ip, #1248]!	; 0x4e0

000088fc <blkid_dev_iterate_begin@plt>:
    88fc:	add	ip, pc, #0, 12
    8900:	add	ip, ip, #96, 20	; 0x60000
    8904:	ldr	pc, [ip, #1240]!	; 0x4d8

00008908 <sysconf@plt>:
    8908:	add	ip, pc, #0, 12
    890c:	add	ip, ip, #96, 20	; 0x60000
    8910:	ldr	pc, [ip, #1232]!	; 0x4d0

00008914 <unlink@plt>:
    8914:	add	ip, pc, #0, 12
    8918:	add	ip, ip, #96, 20	; 0x60000
    891c:	ldr	pc, [ip, #1224]!	; 0x4c8

00008920 <realloc@plt>:
    8920:			; <UNDEFINED> instruction: 0xe7fd4778
    8924:	add	ip, pc, #0, 12
    8928:	add	ip, ip, #96, 20	; 0x60000
    892c:	ldr	pc, [ip, #1212]!	; 0x4bc

00008930 <localtime_r@plt>:
    8930:	add	ip, pc, #0, 12
    8934:	add	ip, ip, #96, 20	; 0x60000
    8938:	ldr	pc, [ip, #1204]!	; 0x4b4

0000893c <pthread_cond_destroy@plt>:
    893c:	add	ip, pc, #0, 12
    8940:	add	ip, ip, #96, 20	; 0x60000
    8944:	ldr	pc, [ip, #1196]!	; 0x4ac

00008948 <uuid_compare@plt>:
    8948:	add	ip, pc, #0, 12
    894c:	add	ip, ip, #96, 20	; 0x60000
    8950:	ldr	pc, [ip, #1188]!	; 0x4a4

00008954 <strcasecmp@plt>:
    8954:	add	ip, pc, #0, 12
    8958:	add	ip, ip, #96, 20	; 0x60000
    895c:	ldr	pc, [ip, #1180]!	; 0x49c

00008960 <geteuid@plt>:
    8960:	add	ip, pc, #0, 12
    8964:	add	ip, ip, #96, 20	; 0x60000
    8968:	ldr	pc, [ip, #1172]!	; 0x494

0000896c <perror@plt>:
    896c:	add	ip, pc, #0, 12
    8970:	add	ip, ip, #96, 20	; 0x60000
    8974:	ldr	pc, [ip, #1164]!	; 0x48c

00008978 <__xstat@plt>:
    8978:			; <UNDEFINED> instruction: 0xe7fd4778
    897c:	add	ip, pc, #0, 12
    8980:	add	ip, ip, #96, 20	; 0x60000
    8984:	ldr	pc, [ip, #1152]!	; 0x480

00008988 <blkid_dev_set_search@plt>:
    8988:	add	ip, pc, #0, 12
    898c:	add	ip, ip, #96, 20	; 0x60000
    8990:	ldr	pc, [ip, #1144]!	; 0x478

00008994 <__fxstat64@plt>:
    8994:			; <UNDEFINED> instruction: 0xe7fd4778
    8998:	add	ip, pc, #0, 12
    899c:	add	ip, ip, #96, 20	; 0x60000
    89a0:	ldr	pc, [ip, #1132]!	; 0x46c

000089a4 <__memcpy_chk@plt>:
    89a4:	add	ip, pc, #0, 12
    89a8:	add	ip, ip, #96, 20	; 0x60000
    89ac:	ldr	pc, [ip, #1124]!	; 0x464

000089b0 <fwrite@plt>:
    89b0:	add	ip, pc, #0, 12
    89b4:	add	ip, ip, #96, 20	; 0x60000
    89b8:	ldr	pc, [ip, #1116]!	; 0x45c

000089bc <strcat@plt>:
    89bc:			; <UNDEFINED> instruction: 0xe7fd4778
    89c0:	add	ip, pc, #0, 12
    89c4:	add	ip, ip, #96, 20	; 0x60000
    89c8:	ldr	pc, [ip, #1104]!	; 0x450

000089cc <ioctl@plt>:
    89cc:	add	ip, pc, #0, 12
    89d0:	add	ip, ip, #96, 20	; 0x60000
    89d4:	ldr	pc, [ip, #1096]!	; 0x448

000089d8 <lseek64@plt>:
    89d8:	add	ip, pc, #0, 12
    89dc:	add	ip, ip, #96, 20	; 0x60000
    89e0:	ldr	pc, [ip, #1088]!	; 0x440

000089e4 <strtoll@plt>:
    89e4:	add	ip, pc, #0, 12
    89e8:	add	ip, ip, #96, 20	; 0x60000
    89ec:	ldr	pc, [ip, #1080]!	; 0x438

000089f0 <__realpath_chk@plt>:
    89f0:	add	ip, pc, #0, 12
    89f4:	add	ip, ip, #96, 20	; 0x60000
    89f8:	ldr	pc, [ip, #1072]!	; 0x430

000089fc <readahead@plt>:
    89fc:	add	ip, pc, #0, 12
    8a00:	add	ip, ip, #96, 20	; 0x60000
    8a04:	ldr	pc, [ip, #1064]!	; 0x428

00008a08 <strcpy@plt>:
    8a08:	add	ip, pc, #0, 12
    8a0c:	add	ip, ip, #96, 20	; 0x60000
    8a10:	ldr	pc, [ip, #1056]!	; 0x420

00008a14 <gettimeofday@plt>:
    8a14:	add	ip, pc, #0, 12
    8a18:	add	ip, ip, #96, 20	; 0x60000
    8a1c:	ldr	pc, [ip, #1048]!	; 0x418

00008a20 <fread@plt>:
    8a20:	add	ip, pc, #0, 12
    8a24:	add	ip, ip, #96, 20	; 0x60000
    8a28:	ldr	pc, [ip, #1040]!	; 0x410

00008a2c <pread64@plt>:
    8a2c:	add	ip, pc, #0, 12
    8a30:	add	ip, ip, #96, 20	; 0x60000
    8a34:	ldr	pc, [ip, #1032]!	; 0x408

00008a38 <pthread_create@plt>:
    8a38:	add	ip, pc, #0, 12
    8a3c:	add	ip, ip, #96, 20	; 0x60000
    8a40:	ldr	pc, [ip, #1024]!	; 0x400

00008a44 <strtok_r@plt>:
    8a44:	add	ip, pc, #0, 12
    8a48:	add	ip, ip, #96, 20	; 0x60000
    8a4c:	ldr	pc, [ip, #1016]!	; 0x3f8

00008a50 <getmntent@plt>:
    8a50:	add	ip, pc, #0, 12
    8a54:	add	ip, ip, #96, 20	; 0x60000
    8a58:	ldr	pc, [ip, #1008]!	; 0x3f0

00008a5c <opendir@plt>:
    8a5c:	add	ip, pc, #0, 12
    8a60:	add	ip, ip, #96, 20	; 0x60000
    8a64:	ldr	pc, [ip, #1000]!	; 0x3e8

00008a68 <open64@plt>:
    8a68:	add	ip, pc, #0, 12
    8a6c:	add	ip, ip, #96, 20	; 0x60000
    8a70:	ldr	pc, [ip, #992]!	; 0x3e0

00008a74 <puts@plt>:
    8a74:			; <UNDEFINED> instruction: 0xe7fd4778
    8a78:	add	ip, pc, #0, 12
    8a7c:	add	ip, ip, #96, 20	; 0x60000
    8a80:	ldr	pc, [ip, #980]!	; 0x3d4

00008a84 <sysinfo@plt>:
    8a84:	add	ip, pc, #0, 12
    8a88:	add	ip, ip, #96, 20	; 0x60000
    8a8c:	ldr	pc, [ip, #972]!	; 0x3cc

00008a90 <malloc@plt>:
    8a90:			; <UNDEFINED> instruction: 0xe7fd4778
    8a94:	add	ip, pc, #0, 12
    8a98:	add	ip, ip, #96, 20	; 0x60000
    8a9c:	ldr	pc, [ip, #960]!	; 0x3c0

00008aa0 <__libc_start_main@plt>:
    8aa0:	add	ip, pc, #0, 12
    8aa4:	add	ip, ip, #96, 20	; 0x60000
    8aa8:	ldr	pc, [ip, #952]!	; 0x3b8

00008aac <strerror@plt>:
    8aac:	add	ip, pc, #0, 12
    8ab0:	add	ip, ip, #96, 20	; 0x60000
    8ab4:	ldr	pc, [ip, #944]!	; 0x3b0

00008ab8 <__fxstat@plt>:
    8ab8:			; <UNDEFINED> instruction: 0xe7fd4778
    8abc:	add	ip, pc, #0, 12
    8ac0:	add	ip, ip, #96, 20	; 0x60000
    8ac4:	ldr	pc, [ip, #932]!	; 0x3a4

00008ac8 <strftime@plt>:
    8ac8:	add	ip, pc, #0, 12
    8acc:	add	ip, ip, #96, 20	; 0x60000
    8ad0:	ldr	pc, [ip, #924]!	; 0x39c

00008ad4 <__vfprintf_chk@plt>:
    8ad4:	add	ip, pc, #0, 12
    8ad8:	add	ip, ip, #96, 20	; 0x60000
    8adc:	ldr	pc, [ip, #916]!	; 0x394

00008ae0 <backtrace@plt>:
    8ae0:	add	ip, pc, #0, 12
    8ae4:	add	ip, ip, #96, 20	; 0x60000
    8ae8:	ldr	pc, [ip, #908]!	; 0x38c

00008aec <blkid_dev_next@plt>:
    8aec:	add	ip, pc, #0, 12
    8af0:	add	ip, ip, #96, 20	; 0x60000
    8af4:	ldr	pc, [ip, #900]!	; 0x384

00008af8 <blkid_verify@plt>:
    8af8:	add	ip, pc, #0, 12
    8afc:	add	ip, ip, #96, 20	; 0x60000
    8b00:	ldr	pc, [ip, #892]!	; 0x37c

00008b04 <__ctype_tolower_loc@plt>:
    8b04:	add	ip, pc, #0, 12
    8b08:	add	ip, ip, #96, 20	; 0x60000
    8b0c:	ldr	pc, [ip, #884]!	; 0x374

00008b10 <__gmon_start__@plt>:
    8b10:	add	ip, pc, #0, 12
    8b14:	add	ip, ip, #96, 20	; 0x60000
    8b18:	ldr	pc, [ip, #876]!	; 0x36c

00008b1c <open@plt>:
    8b1c:	add	ip, pc, #0, 12
    8b20:	add	ip, ip, #96, 20	; 0x60000
    8b24:	ldr	pc, [ip, #868]!	; 0x364

00008b28 <timerfd_create@plt>:
    8b28:	add	ip, pc, #0, 12
    8b2c:	add	ip, ip, #96, 20	; 0x60000
    8b30:	ldr	pc, [ip, #860]!	; 0x35c

00008b34 <getopt_long@plt>:
    8b34:	add	ip, pc, #0, 12
    8b38:	add	ip, ip, #96, 20	; 0x60000
    8b3c:	ldr	pc, [ip, #852]!	; 0x354

00008b40 <__ctype_b_loc@plt>:
    8b40:	add	ip, pc, #0, 12
    8b44:	add	ip, ip, #96, 20	; 0x60000
    8b48:	ldr	pc, [ip, #844]!	; 0x34c

00008b4c <getpid@plt>:
    8b4c:	add	ip, pc, #0, 12
    8b50:	add	ip, ip, #96, 20	; 0x60000
    8b54:	ldr	pc, [ip, #836]!	; 0x344

00008b58 <exit@plt>:
    8b58:	add	ip, pc, #0, 12
    8b5c:	add	ip, ip, #96, 20	; 0x60000
    8b60:	ldr	pc, [ip, #828]!	; 0x33c

00008b64 <feof@plt>:
    8b64:	add	ip, pc, #0, 12
    8b68:	add	ip, ip, #96, 20	; 0x60000
    8b6c:	ldr	pc, [ip, #820]!	; 0x334

00008b70 <strlen@plt>:
    8b70:	add	ip, pc, #0, 12
    8b74:	add	ip, ip, #96, 20	; 0x60000
    8b78:	ldr	pc, [ip, #812]!	; 0x32c

00008b7c <strchr@plt>:
    8b7c:	add	ip, pc, #0, 12
    8b80:	add	ip, ip, #96, 20	; 0x60000
    8b84:	ldr	pc, [ip, #804]!	; 0x324

00008b88 <openat64@plt>:
    8b88:	add	ip, pc, #0, 12
    8b8c:	add	ip, ip, #96, 20	; 0x60000
    8b90:	ldr	pc, [ip, #796]!	; 0x31c

00008b94 <memrchr@plt>:
    8b94:	add	ip, pc, #0, 12
    8b98:	add	ip, ip, #96, 20	; 0x60000
    8b9c:	ldr	pc, [ip, #788]!	; 0x314

00008ba0 <__open64_2@plt>:
    8ba0:	add	ip, pc, #0, 12
    8ba4:	add	ip, ip, #96, 20	; 0x60000
    8ba8:	ldr	pc, [ip, #780]!	; 0x30c

00008bac <__errno_location@plt>:
    8bac:	add	ip, pc, #0, 12
    8bb0:	add	ip, ip, #96, 20	; 0x60000
    8bb4:	ldr	pc, [ip, #772]!	; 0x304

00008bb8 <__strcat_chk@plt>:
    8bb8:	add	ip, pc, #0, 12
    8bbc:	add	ip, ip, #96, 20	; 0x60000
    8bc0:	ldr	pc, [ip, #764]!	; 0x2fc

00008bc4 <__sprintf_chk@plt>:
    8bc4:	add	ip, pc, #0, 12
    8bc8:	add	ip, ip, #96, 20	; 0x60000
    8bcc:	ldr	pc, [ip, #756]!	; 0x2f4

00008bd0 <compressBound@plt>:
    8bd0:	add	ip, pc, #0, 12
    8bd4:	add	ip, ip, #96, 20	; 0x60000
    8bd8:	ldr	pc, [ip, #748]!	; 0x2ec

00008bdc <blkid_new_probe@plt>:
    8bdc:	add	ip, pc, #0, 12
    8be0:	add	ip, ip, #96, 20	; 0x60000
    8be4:	ldr	pc, [ip, #740]!	; 0x2e4

00008be8 <uuid_is_null@plt>:
    8be8:	add	ip, pc, #0, 12
    8bec:	add	ip, ip, #96, 20	; 0x60000
    8bf0:	ldr	pc, [ip, #732]!	; 0x2dc

00008bf4 <memset@plt>:
    8bf4:			; <UNDEFINED> instruction: 0xe7fd4778
    8bf8:	add	ip, pc, #0, 12
    8bfc:	add	ip, ip, #96, 20	; 0x60000
    8c00:	ldr	pc, [ip, #720]!	; 0x2d0

00008c04 <putchar@plt>:
    8c04:			; <UNDEFINED> instruction: 0xe7fd4778
    8c08:	add	ip, pc, #0, 12
    8c0c:	add	ip, ip, #96, 20	; 0x60000
    8c10:	ldr	pc, [ip, #708]!	; 0x2c4

00008c14 <strncpy@plt>:
    8c14:	add	ip, pc, #0, 12
    8c18:	add	ip, ip, #96, 20	; 0x60000
    8c1c:	ldr	pc, [ip, #700]!	; 0x2bc

00008c20 <pthread_cancel@plt>:
    8c20:	add	ip, pc, #0, 12
    8c24:	add	ip, ip, #96, 20	; 0x60000
    8c28:	ldr	pc, [ip, #692]!	; 0x2b4

00008c2c <fscanf@plt>:
    8c2c:	add	ip, pc, #0, 12
    8c30:	add	ip, ip, #96, 20	; 0x60000
    8c34:	ldr	pc, [ip, #684]!	; 0x2ac

00008c38 <strtoull@plt>:
    8c38:	add	ip, pc, #0, 12
    8c3c:	add	ip, ip, #96, 20	; 0x60000
    8c40:	ldr	pc, [ip, #676]!	; 0x2a4

00008c44 <fsetxattr@plt>:
    8c44:	add	ip, pc, #0, 12
    8c48:	add	ip, ip, #96, 20	; 0x60000
    8c4c:	ldr	pc, [ip, #668]!	; 0x29c

00008c50 <blkid_dev_iterate_end@plt>:
    8c50:	add	ip, pc, #0, 12
    8c54:	add	ip, ip, #96, 20	; 0x60000
    8c58:	ldr	pc, [ip, #660]!	; 0x294

00008c5c <pwrite64@plt>:
    8c5c:	add	ip, pc, #0, 12
    8c60:	add	ip, ip, #96, 20	; 0x60000
    8c64:	ldr	pc, [ip, #652]!	; 0x28c

00008c68 <__printf_chk@plt>:
    8c68:			; <UNDEFINED> instruction: 0xe7fd4778
    8c6c:	add	ip, pc, #0, 12
    8c70:	add	ip, ip, #96, 20	; 0x60000
    8c74:	ldr	pc, [ip, #640]!	; 0x280

00008c78 <fstatfs@plt>:
    8c78:	add	ip, pc, #0, 12
    8c7c:	add	ip, ip, #96, 20	; 0x60000
    8c80:	ldr	pc, [ip, #632]!	; 0x278

00008c84 <fileno@plt>:
    8c84:	add	ip, pc, #0, 12
    8c88:	add	ip, ip, #96, 20	; 0x60000
    8c8c:	ldr	pc, [ip, #624]!	; 0x270

00008c90 <uuid_generate@plt>:
    8c90:	add	ip, pc, #0, 12
    8c94:	add	ip, ip, #96, 20	; 0x60000
    8c98:	ldr	pc, [ip, #616]!	; 0x268

00008c9c <__fprintf_chk@plt>:
    8c9c:			; <UNDEFINED> instruction: 0xe7fd4778
    8ca0:	add	ip, pc, #0, 12
    8ca4:	add	ip, ip, #96, 20	; 0x60000
    8ca8:	ldr	pc, [ip, #604]!	; 0x25c

00008cac <access@plt>:
    8cac:	add	ip, pc, #0, 12
    8cb0:	add	ip, ip, #96, 20	; 0x60000
    8cb4:	ldr	pc, [ip, #596]!	; 0x254

00008cb8 <fclose@plt>:
    8cb8:	add	ip, pc, #0, 12
    8cbc:	add	ip, ip, #96, 20	; 0x60000
    8cc0:	ldr	pc, [ip, #588]!	; 0x24c

00008cc4 <pthread_exit@plt>:
    8cc4:	add	ip, pc, #0, 12
    8cc8:	add	ip, ip, #96, 20	; 0x60000
    8ccc:	ldr	pc, [ip, #580]!	; 0x244

00008cd0 <endmntent@plt>:
    8cd0:	add	ip, pc, #0, 12
    8cd4:	add	ip, ip, #96, 20	; 0x60000
    8cd8:	ldr	pc, [ip, #572]!	; 0x23c

00008cdc <__fread_chk@plt>:
    8cdc:	add	ip, pc, #0, 12
    8ce0:	add	ip, ip, #96, 20	; 0x60000
    8ce4:	ldr	pc, [ip, #564]!	; 0x234

00008ce8 <strtok@plt>:
    8ce8:	add	ip, pc, #0, 12
    8cec:	add	ip, ip, #96, 20	; 0x60000
    8cf0:	ldr	pc, [ip, #556]!	; 0x22c

00008cf4 <blkid_free_probe@plt>:
    8cf4:	add	ip, pc, #0, 12
    8cf8:	add	ip, ip, #96, 20	; 0x60000
    8cfc:	ldr	pc, [ip, #548]!	; 0x224

00008d00 <compress2@plt>:
    8d00:	add	ip, pc, #0, 12
    8d04:	add	ip, ip, #96, 20	; 0x60000
    8d08:	ldr	pc, [ip, #540]!	; 0x21c

00008d0c <strrchr@plt>:
    8d0c:	add	ip, pc, #0, 12
    8d10:	add	ip, ip, #96, 20	; 0x60000
    8d14:	ldr	pc, [ip, #532]!	; 0x214

00008d18 <pthread_join@plt>:
    8d18:	add	ip, pc, #0, 12
    8d1c:	add	ip, ip, #96, 20	; 0x60000
    8d20:	ldr	pc, [ip, #524]!	; 0x20c

00008d24 <statfs64@plt>:
    8d24:	add	ip, pc, #0, 12
    8d28:	add	ip, ip, #96, 20	; 0x60000
    8d2c:	ldr	pc, [ip, #516]!	; 0x204

00008d30 <fputc@plt>:
    8d30:			; <UNDEFINED> instruction: 0xe7fd4778
    8d34:	add	ip, pc, #0, 12
    8d38:	add	ip, ip, #96, 20	; 0x60000
    8d3c:	ldr	pc, [ip, #504]!	; 0x1f8

00008d40 <timerfd_settime@plt>:
    8d40:	add	ip, pc, #0, 12
    8d44:	add	ip, ip, #96, 20	; 0x60000
    8d48:	ldr	pc, [ip, #496]!	; 0x1f0

00008d4c <dirfd@plt>:
    8d4c:	add	ip, pc, #0, 12
    8d50:	add	ip, ip, #96, 20	; 0x60000
    8d54:	ldr	pc, [ip, #488]!	; 0x1e8

00008d58 <getppid@plt>:
    8d58:	add	ip, pc, #0, 12
    8d5c:	add	ip, ip, #96, 20	; 0x60000
    8d60:	ldr	pc, [ip, #480]!	; 0x1e0

00008d64 <atoi@plt>:
    8d64:	add	ip, pc, #0, 12
    8d68:	add	ip, ip, #96, 20	; 0x60000
    8d6c:	ldr	pc, [ip, #472]!	; 0x1d8

00008d70 <blkid_dev_devname@plt>:
    8d70:	add	ip, pc, #0, 12
    8d74:	add	ip, ip, #96, 20	; 0x60000
    8d78:	ldr	pc, [ip, #464]!	; 0x1d0

00008d7c <fopen64@plt>:
    8d7c:	add	ip, pc, #0, 12
    8d80:	add	ip, ip, #96, 20	; 0x60000
    8d84:	ldr	pc, [ip, #456]!	; 0x1c8

00008d88 <pthread_cond_wait@plt>:
    8d88:	add	ip, pc, #0, 12
    8d8c:	add	ip, ip, #96, 20	; 0x60000
    8d90:	ldr	pc, [ip, #448]!	; 0x1c0

00008d94 <setmntent@plt>:
    8d94:	add	ip, pc, #0, 12
    8d98:	add	ip, ip, #96, 20	; 0x60000
    8d9c:	ldr	pc, [ip, #440]!	; 0x1b8

00008da0 <__tls_get_addr@plt>:
    8da0:	add	ip, pc, #0, 12
    8da4:	add	ip, ip, #96, 20	; 0x60000
    8da8:	ldr	pc, [ip, #432]!	; 0x1b0

00008dac <fseek@plt>:
    8dac:	add	ip, pc, #0, 12
    8db0:	add	ip, ip, #96, 20	; 0x60000
    8db4:	ldr	pc, [ip, #424]!	; 0x1a8

00008db8 <strncat@plt>:
    8db8:	add	ip, pc, #0, 12
    8dbc:	add	ip, ip, #96, 20	; 0x60000
    8dc0:	ldr	pc, [ip, #416]!	; 0x1a0

00008dc4 <__xstat64@plt>:
    8dc4:			; <UNDEFINED> instruction: 0xe7fd4778
    8dc8:	add	ip, pc, #0, 12
    8dcc:	add	ip, ip, #96, 20	; 0x60000
    8dd0:	ldr	pc, [ip, #404]!	; 0x194

00008dd4 <blkid_get_cache@plt>:
    8dd4:	add	ip, pc, #0, 12
    8dd8:	add	ip, ip, #96, 20	; 0x60000
    8ddc:	ldr	pc, [ip, #396]!	; 0x18c

00008de0 <fputs@plt>:
    8de0:			; <UNDEFINED> instruction: 0xe7fd4778
    8de4:	add	ip, pc, #0, 12
    8de8:	add	ip, ip, #96, 20	; 0x60000
    8dec:	ldr	pc, [ip, #384]!	; 0x180

00008df0 <strncmp@plt>:
    8df0:	add	ip, pc, #0, 12
    8df4:	add	ip, ip, #96, 20	; 0x60000
    8df8:	ldr	pc, [ip, #376]!	; 0x178

00008dfc <pthread_cond_signal@plt>:
    8dfc:	add	ip, pc, #0, 12
    8e00:	add	ip, ip, #96, 20	; 0x60000
    8e04:	ldr	pc, [ip, #368]!	; 0x170

00008e08 <abort@plt>:
    8e08:	add	ip, pc, #0, 12
    8e0c:	add	ip, ip, #96, 20	; 0x60000
    8e10:	ldr	pc, [ip, #360]!	; 0x168

00008e14 <realpath@plt>:
    8e14:	add	ip, pc, #0, 12
    8e18:	add	ip, ip, #96, 20	; 0x60000
    8e1c:	ldr	pc, [ip, #352]!	; 0x160

00008e20 <close@plt>:
    8e20:	add	ip, pc, #0, 12
    8e24:	add	ip, ip, #96, 20	; 0x60000
    8e28:	ldr	pc, [ip, #344]!	; 0x158

00008e2c <blkid_probe_all@plt>:
    8e2c:	add	ip, pc, #0, 12
    8e30:	add	ip, ip, #96, 20	; 0x60000
    8e34:	ldr	pc, [ip, #336]!	; 0x150

00008e38 <closedir@plt>:
    8e38:	add	ip, pc, #0, 12
    8e3c:	add	ip, ip, #96, 20	; 0x60000
    8e40:	ldr	pc, [ip, #328]!	; 0x148

00008e44 <__snprintf_chk@plt>:
    8e44:	add	ip, pc, #0, 12
    8e48:	add	ip, ip, #96, 20	; 0x60000
    8e4c:	ldr	pc, [ip, #320]!	; 0x140

00008e50 <backtrace_symbols_fd@plt>:
    8e50:	add	ip, pc, #0, 12
    8e54:	add	ip, ip, #96, 20	; 0x60000
    8e58:	ldr	pc, [ip, #312]!	; 0x138

00008e5c <__assert_fail@plt>:
    8e5c:	add	ip, pc, #0, 12
    8e60:	add	ip, ip, #96, 20	; 0x60000
    8e64:	ldr	pc, [ip, #304]!	; 0x130

Disassembly of section .text:

00008e68 <main@@Base>:
    8e68:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8e6c:	movs	r5, #0
    8e6e:	ldr	r6, [pc, #896]	; (91f0 <main@@Base+0x388>)
    8e70:	sub	sp, #60	; 0x3c
    8e72:	ldr.w	r8, [pc, #896]	; 91f4 <main@@Base+0x38c>
    8e76:	mov	r4, r0
    8e78:	ldr.w	r9, [pc, #892]	; 91f8 <main@@Base+0x390>
    8e7c:	add	r6, pc
    8e7e:	add	r8, pc
    8e80:	mov	r7, r5
    8e82:	mov.w	fp, #1
    8e86:	mov	sl, r5
    8e88:	movs	r2, #0
    8e8a:	movs	r3, #0
    8e8c:	add	r9, pc
    8e8e:	str	r1, [sp, #40]	; 0x28
    8e90:	strd	r5, r5, [sp, #48]	; 0x30
    8e94:	strd	r2, r3, [sp, #32]
    8e98:	strd	r2, r3, [sp, #24]
    8e9c:	ldr	r1, [sp, #40]	; 0x28
    8e9e:	mov	r3, r6
    8ea0:	mov	r2, r8
    8ea2:	mov	r0, r4
    8ea4:	str.w	sl, [sp]
    8ea8:	blx	8b34 <getopt_long@plt>
    8eac:	cmp	r0, #0
    8eae:	blt.n	8f5e <main@@Base+0xf6>
    8eb0:	sub.w	r3, r0, #99	; 0x63
    8eb4:	cmp	r3, #20
    8eb6:	bhi.n	8f52 <main@@Base+0xea>
    8eb8:	tbb	[pc, r3]
    8ebc:	ldr	r3, [pc, #172]	; (8f6c <main@@Base+0x104>)
    8ebe:	ldr	r3, [pc, #300]	; (8fec <main@@Base+0x184>)
    8ec0:	ldr	r3, [pc, #300]	; (8ff0 <main@@Base+0x188>)
    8ec2:	ldr	r3, [pc, #300]	; (8ff0 <main@@Base+0x188>)
    8ec4:	ldr	r3, [pc, #300]	; (8ff4 <main@@Base+0x18c>)
    8ec6:	ldr	r3, [pc, #284]	; (8fe4 <main@@Base+0x17c>)
    8ec8:	ldr	r3, [pc, #52]	; (8f00 <main@@Base+0x98>)
    8eca:	ldr	r0, [pc, #300]	; (8ff8 <main@@Base+0x190>)
    8ecc:	asrs	r6, r7, #32
    8ece:	ldr	r3, [pc, #300]	; (8ffc <main@@Base+0x194>)
    8ed0:	lsls	r4, r0, #1
    8ed2:	movs	r5, #1
    8ed4:	b.n	8e9c <main@@Base+0x34>
    8ed6:	movs	r3, #1
    8ed8:	str	r3, [sp, #48]	; 0x30
    8eda:	b.n	8e9c <main@@Base+0x34>
    8edc:	ldr	r3, [pc, #796]	; (91fc <main@@Base+0x394>)
    8ede:	ldr.w	r3, [r9, r3]
    8ee2:	ldr	r0, [r3, #0]
    8ee4:	bl	1abc0 <arg_strtou64@@Base>
    8ee8:	strd	r0, r1, [sp, #24]
    8eec:	ldrd	r2, r3, [sp, #24]
    8ef0:	cmp	r3, #0
    8ef2:	it	eq
    8ef4:	cmpeq	r2, #33	; 0x21
    8ef6:	bcc.n	8e9c <main@@Base+0x34>
    8ef8:	ldr	r0, [pc, #772]	; (9200 <main@@Base+0x398>)
    8efa:	movs	r3, #32
    8efc:	str	r3, [sp, #0]
    8efe:	add	r0, pc
    8f00:	ldrd	r2, r3, [sp, #24]
    8f04:	bl	1a900 <__btrfs_error@@Base>
    8f08:	movs	r7, #1
    8f0a:	mov	r0, r7
    8f0c:	add	sp, #60	; 0x3c
    8f0e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8f12:	ldr	r3, [pc, #744]	; (91fc <main@@Base+0x394>)
    8f14:	ldr.w	r3, [r9, r3]
    8f18:	ldr	r0, [r3, #0]
    8f1a:	bl	1abc0 <arg_strtou64@@Base>
    8f1e:	strd	r0, r1, [sp, #32]
    8f22:	ldrd	r2, r3, [sp, #32]
    8f26:	cmp	r3, #0
    8f28:	it	eq
    8f2a:	cmpeq	r2, #10
    8f2c:	bcc.n	8e9c <main@@Base+0x34>
    8f2e:	ldr	r0, [pc, #724]	; (9204 <main@@Base+0x39c>)
    8f30:	add	r0, pc
    8f32:	bl	1a900 <__btrfs_error@@Base>
    8f36:	b.n	8f08 <main@@Base+0xa0>
    8f38:	cmp	r5, #0
    8f3a:	beq.n	8ed2 <main@@Base+0x6a>
    8f3c:	cmp	r5, #1
    8f3e:	it	eq
    8f40:	moveq	r5, #2
    8f42:	b.n	8e9c <main@@Base+0x34>
    8f44:	movs	r3, #1
    8f46:	str	r3, [sp, #52]	; 0x34
    8f48:	b.n	8e9c <main@@Base+0x34>
    8f4a:	movs	r7, #1
    8f4c:	mov.w	fp, #0
    8f50:	b.n	8e9c <main@@Base+0x34>
    8f52:	subs.w	r0, r0, #270	; 0x10e
    8f56:	it	ne
    8f58:	movne	r0, #1
    8f5a:	bl	9418 <_start@@Base+0x1c4>
    8f5e:	ldr	r0, [sp, #40]	; 0x28
    8f60:	bl	14488 <set_argv0@@Base>
    8f64:	ldr	r3, [pc, #672]	; (9208 <main@@Base+0x3a0>)
    8f66:	movs	r1, #2
    8f68:	ldr.w	r3, [r9, r3]
    8f6c:	ldr	r0, [r3, #0]
    8f6e:	str	r3, [sp, #44]	; 0x2c
    8f70:	subs	r0, r4, r0
    8f72:	bl	14504 <check_argc_min@@Base>
    8f76:	cbz	r0, 8f7c <main@@Base+0x114>
    8f78:	movs	r0, #1
    8f7a:	b.n	8f5a <main@@Base+0xf2>
    8f7c:	ldr	r3, [sp, #44]	; 0x2c
    8f7e:	ldr	r0, [r3, #0]
    8f80:	subs	r4, r4, r0
    8f82:	subs	r4, #1
    8f84:	cmp.w	fp, #0
    8f88:	beq.n	8f98 <main@@Base+0x130>
    8f8a:	ldr	r3, [sp, #48]	; 0x30
    8f8c:	cbz	r3, 8fc4 <main@@Base+0x15c>
    8f8e:	ldr	r0, [pc, #636]	; (920c <main@@Base+0x3a4>)
    8f90:	add	r0, pc
    8f92:	bl	1a900 <__btrfs_error@@Base>
    8f96:	b.n	8f78 <main@@Base+0x110>
    8f98:	ldr	r3, [sp, #52]	; 0x34
    8f9a:	orrs	r3, r5
    8f9c:	bne.n	8fa6 <main@@Base+0x13e>
    8f9e:	ldrd	r1, r2, [sp, #32]
    8fa2:	orrs	r2, r1
    8fa4:	beq.n	8fb0 <main@@Base+0x148>
    8fa6:	ldr	r0, [pc, #616]	; (9210 <main@@Base+0x3a8>)
    8fa8:	add	r0, pc
    8faa:	bl	1a900 <__btrfs_error@@Base>
    8fae:	movs	r3, #1
    8fb0:	cmp	r7, #0
    8fb2:	beq.w	91d8 <main@@Base+0x370>
    8fb6:	cmp	r4, #1
    8fb8:	bgt.n	8fc0 <main@@Base+0x158>
    8fba:	ldr	r0, [pc, #600]	; (9214 <main@@Base+0x3ac>)
    8fbc:	add	r0, pc
    8fbe:	b.n	8f92 <main@@Base+0x12a>
    8fc0:	cmp	r3, #0
    8fc2:	bne.n	8f78 <main@@Base+0x110>
    8fc4:	ldr	r3, [sp, #44]	; 0x2c
    8fc6:	ldr	r2, [sp, #40]	; 0x28
    8fc8:	ldr	r3, [r3, #0]
    8fca:	ldr.w	sl, [r2, r3, lsl #2]
    8fce:	add.w	r3, r2, r3, lsl #2
    8fd2:	ldr.w	r8, [r3, #4]
    8fd6:	cmp.w	fp, #0
    8fda:	beq.n	903e <main@@Base+0x1d6>
    8fdc:	ldr	r1, [pc, #568]	; (9218 <main@@Base+0x3b0>)
    8fde:	mov	r0, r8
    8fe0:	add	r1, pc
    8fe2:	blx	8748 <strcmp@plt>
    8fe6:	cbnz	r0, 903e <main@@Base+0x1d6>
    8fe8:	ldr	r3, [pc, #560]	; (921c <main@@Base+0x3b4>)
    8fea:	ldr.w	r3, [r9, r3]
    8fee:	ldr	r6, [r3, #0]
    8ff0:	ldrd	r2, r3, [sp, #32]
    8ff4:	orrs	r3, r2
    8ff6:	bne.w	91e4 <main@@Base+0x37c>
    8ffa:	ldrd	r2, r3, [sp, #32]
    8ffe:	strd	r2, r3, [sp, #24]
    9002:	mov	r0, sl
    9004:	bl	336d8 <check_mounted@@Base>
    9008:	subs	r3, r0, #0
    900a:	bge.n	90e0 <main@@Base+0x278>
    900c:	str	r3, [sp, #48]	; 0x30
    900e:	blx	8bac <__errno_location@plt>
    9012:	ldr	r3, [sp, #48]	; 0x30
    9014:	negs	r3, r3
    9016:	str	r3, [r0, #0]
    9018:	ldr	r0, [pc, #516]	; (9220 <main@@Base+0x3b8>)
    901a:	add	r0, pc
    901c:	bl	1a884 <__btrfs_warning@@Base>
    9020:	ldr	r3, [sp, #52]	; 0x34
    9022:	mov	r1, r6
    9024:	ldr	r2, [sp, #24]
    9026:	mov	r0, sl
    9028:	strd	r5, r3, [sp]
    902c:	ldr	r3, [sp, #32]
    902e:	bl	ad44 <_start@@Base+0x1af0>
    9032:	mov	r5, r0
    9034:	cmp	r0, #0
    9036:	beq.n	90ee <main@@Base+0x286>
    9038:	ldr	r1, [pc, #488]	; (9224 <main@@Base+0x3bc>)
    903a:	add	r1, pc
    903c:	b.n	90b8 <main@@Base+0x250>
    903e:	ldr	r1, [pc, #488]	; (9228 <main@@Base+0x3c0>)
    9040:	mov	r0, r8
    9042:	add	r1, pc
    9044:	blx	8d7c <fopen64@plt>
    9048:	mov	r6, r0
    904a:	cbnz	r0, 905c <main@@Base+0x1f4>
    904c:	ldr	r0, [pc, #476]	; (922c <main@@Base+0x3c4>)
    904e:	mov	r1, r8
    9050:	add	r0, pc
    9052:	bl	1a900 <__btrfs_error@@Base>
    9056:	movs	r0, #1
    9058:	blx	8b58 <exit@plt>
    905c:	ldrd	r2, r3, [sp, #32]
    9060:	orrs	r3, r2
    9062:	bne.n	9074 <main@@Base+0x20c>
    9064:	cmp.w	fp, #0
    9068:	bne.n	8ffa <main@@Base+0x192>
    906a:	ldrd	r2, r3, [sp, #24]
    906e:	orrs	r3, r2
    9070:	bne.n	909c <main@@Base+0x234>
    9072:	b.n	907c <main@@Base+0x214>
    9074:	ldrd	r2, r3, [sp, #24]
    9078:	orrs	r3, r2
    907a:	bne.n	9096 <main@@Base+0x22e>
    907c:	movs	r0, #84	; 0x54
    907e:	blx	8908 <sysconf@plt>
    9082:	cmp	r0, #1
    9084:	it	lt
    9086:	movlt	r0, #1
    9088:	cmp	r0, #32
    908a:	it	ge
    908c:	movge	r0, #32
    908e:	asrs	r3, r0, #31
    9090:	mov	r2, r0
    9092:	strd	r2, r3, [sp, #24]
    9096:	cmp.w	fp, #0
    909a:	bne.n	9002 <main@@Base+0x19a>
    909c:	movs	r3, #0
    909e:	ldr	r2, [sp, #48]	; 0x30
    90a0:	str	r3, [sp, #0]
    90a2:	mov	r1, r6
    90a4:	ldr	r3, [sp, #24]
    90a6:	mov	r0, sl
    90a8:	strd	r8, r7, [sp, #4]
    90ac:	bl	b23c <_start@@Base+0x1fe8>
    90b0:	mov	r5, r0
    90b2:	cbz	r0, 90f4 <main@@Base+0x28c>
    90b4:	ldr	r1, [pc, #376]	; (9230 <main@@Base+0x3c8>)
    90b6:	add	r1, pc
    90b8:	ldr	r0, [pc, #376]	; (9234 <main@@Base+0x3cc>)
    90ba:	mov	r2, r5
    90bc:	add	r0, pc
    90be:	bl	1a900 <__btrfs_error@@Base>
    90c2:	ldr	r3, [pc, #344]	; (921c <main@@Base+0x3b4>)
    90c4:	mov	r0, r6
    90c6:	ldr.w	r3, [r9, r3]
    90ca:	ldr	r3, [r3, #0]
    90cc:	cmp	r3, r6
    90ce:	bne.n	91b4 <main@@Base+0x34c>
    90d0:	blx	87a0 <fflush@plt>
    90d4:	bl	2b488 <btrfs_close_all_devices@@Base>
    90d8:	subs	r7, r5, #0
    90da:	it	ne
    90dc:	movne	r7, #1
    90de:	b.n	8f0a <main@@Base+0xa2>
    90e0:	beq.n	9020 <main@@Base+0x1b8>
    90e2:	ldr	r0, [pc, #340]	; (9238 <main@@Base+0x3d0>)
    90e4:	mov	r1, sl
    90e6:	add	r0, pc
    90e8:	bl	1a884 <__btrfs_warning@@Base>
    90ec:	b.n	9020 <main@@Base+0x1b8>
    90ee:	cmp.w	fp, #0
    90f2:	bne.n	90c2 <main@@Base+0x25a>
    90f4:	cmp	r7, #0
    90f6:	beq.n	91b0 <main@@Base+0x348>
    90f8:	movs	r2, #0
    90fa:	movs	r3, #18
    90fc:	mov	r0, r8
    90fe:	str	r3, [sp, #16]
    9100:	movs	r3, #0
    9102:	strd	r2, r3, [sp, #8]
    9106:	strd	r2, r3, [sp]
    910a:	bl	216b0 <open_ctree_fs_info@@Base>
    910e:	mov	r5, r0
    9110:	cbnz	r0, 911e <main@@Base+0x2b6>
    9112:	ldr	r0, [pc, #296]	; (923c <main@@Base+0x3d4>)
    9114:	mov	r1, r8
    9116:	add	r0, pc
    9118:	bl	1a900 <__btrfs_error@@Base>
    911c:	b.n	8f0a <main@@Base+0xa2>
    911e:	ldr.w	r1, [r0, #308]	; 0x134
    9122:	ldr.w	r3, [r1, #140]	; 0x8c
    9126:	ldr.w	r2, [r1, #136]	; 0x88
    912a:	asrs	r1, r4, #31
    912c:	cmp	r1, r3
    912e:	it	eq
    9130:	cmpeq	r4, r2
    9132:	beq.n	917e <main@@Base+0x316>
    9134:	ldr	r0, [pc, #264]	; (9240 <main@@Base+0x3d8>)
    9136:	str	r4, [sp, #0]
    9138:	add	r0, pc
    913a:	bl	1a900 <__btrfs_error@@Base>
    913e:	ldr	r0, [r5, #32]
    9140:	bl	9ab2 <_start@@Base+0x85e>
    9144:	movs	r5, #0
    9146:	b.n	90c2 <main@@Base+0x25a>
    9148:	ldr	r1, [sp, #44]	; 0x2c
    914a:	ldr	r0, [sp, #40]	; 0x28
    914c:	str	r2, [sp, #48]	; 0x30
    914e:	ldr	r1, [r1, #0]
    9150:	str	r3, [sp, #32]
    9152:	add	r1, r2
    9154:	ldr.w	r1, [r0, r1, lsl #2]
    9158:	mov	r0, r5
    915a:	bl	9720 <_start@@Base+0x4cc>
    915e:	ldr	r2, [sp, #48]	; 0x30
    9160:	ldr	r3, [sp, #32]
    9162:	adds	r2, #1
    9164:	adc.w	r3, r3, #0
    9168:	cbz	r0, 9182 <main@@Base+0x31a>
    916a:	mov	r2, r0
    916c:	ldr	r0, [pc, #212]	; (9244 <main@@Base+0x3dc>)
    916e:	mov	r1, r7
    9170:	add	r0, pc
    9172:	bl	1a900 <__btrfs_error@@Base>
    9176:	ldr	r0, [r5, #32]
    9178:	bl	9ab2 <_start@@Base+0x85e>
    917c:	b.n	9056 <main@@Base+0x1ee>
    917e:	movs	r2, #2
    9180:	movs	r3, #0
    9182:	cmp	r4, r2
    9184:	mov	r7, r2
    9186:	bge.n	9148 <main@@Base+0x2e0>
    9188:	ldr	r0, [r5, #32]
    918a:	movs	r4, #1
    918c:	bl	9ab2 <_start@@Base+0x85e>
    9190:	ldr	r3, [sp, #24]
    9192:	movs	r2, #0
    9194:	mov	r1, r6
    9196:	mov	r0, sl
    9198:	strd	r8, r4, [sp, #4]
    919c:	str	r4, [sp, #0]
    919e:	bl	b23c <_start@@Base+0x1fe8>
    91a2:	mov	r5, r0
    91a4:	cmp	r0, #0
    91a6:	beq.n	90c2 <main@@Base+0x25a>
    91a8:	mov	r1, r0
    91aa:	ldr	r0, [pc, #156]	; (9248 <main@@Base+0x3e0>)
    91ac:	add	r0, pc
    91ae:	b.n	9052 <main@@Base+0x1ea>
    91b0:	mov	r5, r7
    91b2:	b.n	90c2 <main@@Base+0x25a>
    91b4:	blx	8cb8 <fclose@plt>
    91b8:	cmp	r5, #0
    91ba:	beq.n	90d4 <main@@Base+0x26c>
    91bc:	cmp.w	fp, #0
    91c0:	beq.n	90d4 <main@@Base+0x26c>
    91c2:	mov	r0, r8
    91c4:	blx	8914 <unlink@plt>
    91c8:	cmp	r0, #0
    91ca:	beq.n	90d4 <main@@Base+0x26c>
    91cc:	ldr	r0, [pc, #124]	; (924c <main@@Base+0x3e4>)
    91ce:	mov	r1, r8
    91d0:	add	r0, pc
    91d2:	bl	1a900 <__btrfs_error@@Base>
    91d6:	b.n	90d4 <main@@Base+0x26c>
    91d8:	cmp	r4, #1
    91da:	beq.w	8fc0 <main@@Base+0x158>
    91de:	ldr	r0, [pc, #112]	; (9250 <main@@Base+0x3e8>)
    91e0:	add	r0, pc
    91e2:	b.n	8f92 <main@@Base+0x12a>
    91e4:	ldrd	r2, r3, [sp, #24]
    91e8:	orrs	r3, r2
    91ea:	bne.w	9002 <main@@Base+0x19a>
    91ee:	b.n	907c <main@@Base+0x214>
    91f0:			; <UNDEFINED> instruction: 0xf6e00005
    91f4:	ldr	r4, [pc, #364]	; (9364 <_start@@Base+0x110>)
    91f6:	movs	r3, r0
    91f8:	cdp2	0, 10, cr0, cr4, cr5, {0}
    91fc:	lsls	r0, r1, #11
    91fe:	movs	r0, r0
    9200:	ldr	r3, [pc, #916]	; (9598 <_start@@Base+0x344>)
    9202:	movs	r3, r0
    9204:	ldr	r3, [pc, #884]	; (957c <_start@@Base+0x328>)
    9206:	movs	r3, r0
    9208:	lsls	r0, r0, #10
    920a:	movs	r0, r0
    920c:	ldr	r3, [pc, #648]	; (9498 <_start@@Base+0x244>)
    920e:	movs	r3, r0
    9210:	ldr	r3, [pc, #756]	; (9508 <_start@@Base+0x2b4>)
    9212:	movs	r3, r0
    9214:	ldr	r3, [pc, #884]	; (958c <_start@@Base+0x338>)
    9216:	movs	r3, r0
    9218:	strb	r6, [r3, r7]
    921a:	movs	r3, r0
    921c:	lsls	r0, r6, #10
    921e:	movs	r0, r0
    9220:	ldr	r3, [pc, #980]	; (95f8 <_start@@Base+0x3a4>)
    9222:	movs	r3, r0
    9224:	ldr	r2, [pc, #576]	; (9468 <_start@@Base+0x214>)
    9226:	movs	r3, r0
    9228:	ldr	r3, [pc, #680]	; (94d4 <_start@@Base+0x280>)
    922a:	movs	r3, r0
    922c:	ldr	r3, [pc, #636]	; (94ac <_start@@Base+0x258>)
    922e:	movs	r3, r0
    9230:	ldr	r2, [pc, #108]	; (92a0 <_start@@Base+0x4c>)
    9232:	movs	r3, r0
    9234:	ldmdb	sl, {r2}
    9238:	ldr	r3, [pc, #308]	; (9370 <_start@@Base+0x11c>)
    923a:	movs	r3, r0
    923c:	ldr	r3, [pc, #300]	; (936c <_start@@Base+0x118>)
    923e:	movs	r3, r0
    9240:	ldr	r3, [pc, #260]	; (9348 <_start@@Base+0xf4>)
    9242:	movs	r3, r0
    9244:	ldr	r3, [pc, #188]	; (9304 <_start@@Base+0xb0>)
    9246:	movs	r3, r0
    9248:	ldr	r3, [pc, #120]	; (92c4 <_start@@Base+0x70>)
    924a:	movs	r3, r0
    924c:	ldr	r3, [pc, #92]	; (92ac <_start@@Base+0x58>)
    924e:	movs	r3, r0
    9250:	ldr	r1, [pc, #912]	; (95e4 <_start@@Base+0x390>)
    9252:	movs	r3, r0

00009254 <_start@@Base>:
    9254:	mov.w	fp, #0
    9258:	mov.w	lr, #0
    925c:	pop	{r1}
    925e:	mov	r2, sp
    9260:	push	{r2}
    9262:	push	{r0}
    9264:	ldr.w	sl, [pc, #36]	; 928c <_start@@Base+0x38>
    9268:	add	r3, pc, #32	; (adr r3, 928c <_start@@Base+0x38>)
    926a:	add	sl, r3
    926c:	ldr.w	ip, [pc, #32]	; 9290 <_start@@Base+0x3c>
    9270:	ldr.w	ip, [sl, ip]
    9274:	str.w	ip, [sp, #-4]!
    9278:	ldr	r3, [pc, #24]	; (9294 <_start@@Base+0x40>)
    927a:	ldr.w	r3, [sl, r3]
    927e:	ldr	r0, [pc, #24]	; (9298 <_start@@Base+0x44>)
    9280:	ldr.w	r0, [sl, r0]
    9284:	blx	8aa0 <__libc_start_main@plt>
    9288:	blx	8e08 <abort@plt>
    928c:			; <UNDEFINED> instruction: 0xfaa80005
    9290:	lsls	r4, r5, #9
    9292:	movs	r0, r0
    9294:	lsls	r0, r5, #10
    9296:	movs	r0, r0
    9298:	lsls	r0, r7, #10
    929a:	movs	r0, r0
    929c:	adds	r0, #20
    929e:	b.n	8de0 <fputs@plt>
    92a0:	movs	r0, #20
    92a2:	b.n	8de4 <fputs@plt+0x4>
    92a4:	adds	r0, #3
    92a6:	b.n	93c8 <_start@@Base+0x174>
    92a8:	movs	r0, #2
    92aa:	b.n	91d4 <main@@Base+0x36c>
    92ac:	movs	r0, r0
    92ae:	b.n	9956 <_start@@Base+0x702>
    92b0:	vrhadd.u16	d0, d14, d31
    92b4:	mrc2	10, 0, lr, cr5, cr15, {7}	; <UNPREDICTABLE>
    92b8:			; <UNDEFINED> instruction: 0xfa880005
    92bc:	lsls	r0, r3, #10
    92be:	movs	r0, r0
    92c0:	ldr	r0, [pc, #24]	; (92dc <_start@@Base+0x88>)
    92c2:	ldr	r3, [pc, #28]	; (92e0 <_start@@Base+0x8c>)
    92c4:	add	r0, pc
    92c6:	ldr	r2, [pc, #28]	; (92e4 <_start@@Base+0x90>)
    92c8:	add	r3, pc
    92ca:	cmp	r3, r0
    92cc:	add	r2, pc
    92ce:	beq.n	92d8 <_start@@Base+0x84>
    92d0:	ldr	r3, [pc, #20]	; (92e8 <_start@@Base+0x94>)
    92d2:	ldr	r3, [r2, r3]
    92d4:	cbz	r3, 92d8 <_start@@Base+0x84>
    92d6:	bx	r3
    92d8:	bx	lr
    92da:	nop
    92dc:	lsrs	r0, r7, #29
    92de:	movs	r6, r0
    92e0:	lsrs	r4, r6, #29
    92e2:	movs	r6, r0
    92e4:			; <UNDEFINED> instruction: 0xfa640005
    92e8:	lsls	r4, r6, #9
    92ea:	movs	r0, r0
    92ec:	ldr	r0, [pc, #32]	; (9310 <_start@@Base+0xbc>)
    92ee:	ldr	r1, [pc, #36]	; (9314 <_start@@Base+0xc0>)
    92f0:	add	r0, pc
    92f2:	ldr	r2, [pc, #36]	; (9318 <_start@@Base+0xc4>)
    92f4:	add	r1, pc
    92f6:	subs	r1, r1, r0
    92f8:	add	r2, pc
    92fa:	lsrs	r3, r1, #31
    92fc:	add.w	r1, r3, r1, asr #2
    9300:	asrs	r1, r1, #1
    9302:	beq.n	930c <_start@@Base+0xb8>
    9304:	ldr	r3, [pc, #20]	; (931c <_start@@Base+0xc8>)
    9306:	ldr	r3, [r2, r3]
    9308:	cbz	r3, 930c <_start@@Base+0xb8>
    930a:	bx	r3
    930c:	bx	lr
    930e:	nop
    9310:	lsrs	r4, r1, #29
    9312:	movs	r6, r0
    9314:	lsrs	r0, r1, #29
    9316:	movs	r6, r0
    9318:			; <UNDEFINED> instruction: 0xfa380005
    931c:	lsls	r0, r0, #11
    931e:	movs	r0, r0
    9320:	push	{r3, lr}
    9322:	ldr	r3, [pc, #40]	; (934c <_start@@Base+0xf8>)
    9324:	ldr	r2, [pc, #40]	; (9350 <_start@@Base+0xfc>)
    9326:	add	r3, pc
    9328:	add	r2, pc
    932a:	ldrb	r3, [r3, #0]
    932c:	cbnz	r3, 934a <_start@@Base+0xf6>
    932e:	ldr	r3, [pc, #36]	; (9354 <_start@@Base+0x100>)
    9330:	ldr	r3, [r2, r3]
    9332:	cbz	r3, 933e <_start@@Base+0xea>
    9334:	ldr	r3, [pc, #32]	; (9358 <_start@@Base+0x104>)
    9336:	add	r3, pc
    9338:	ldr	r0, [r3, #0]
    933a:	blx	8754 <__cxa_finalize@plt>
    933e:	bl	92c0 <_start@@Base+0x6c>
    9342:	ldr	r3, [pc, #24]	; (935c <_start@@Base+0x108>)
    9344:	movs	r2, #1
    9346:	add	r3, pc
    9348:	strb	r2, [r3, #0]
    934a:	pop	{r3, pc}
    934c:	lsrs	r6, r2, #28
    934e:	movs	r6, r0
    9350:			; <UNDEFINED> instruction: 0xfa080005
    9354:	lsls	r0, r6, #9
    9356:	movs	r0, r0
    9358:	stc2l	0, cr0, [sl], {5}
    935c:	lsrs	r6, r6, #27
    935e:	movs	r6, r0
    9360:	b.n	92ec <_start@@Base+0x98>
    9362:	nop
    9364:	movs	r0, r0
    9366:	movs	r0, r0
    9368:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    936c:	ldrd	r8, r9, [r1, #-32]
    9370:	ldrd	r4, r5, [r0, #-32]
    9374:	cbz	r2, 9394 <_start@@Base+0x140>
    9376:	cmp	r9, r5
    9378:	it	eq
    937a:	cmpeq	r8, r4
    937c:	bcc.n	93ac <_start@@Base+0x158>
    937e:	ldrd	r3, r2, [r0, #-8]
    9382:	adds	r6, r4, r3
    9384:	adc.w	r7, r5, r2
    9388:	cmp	r9, r7
    938a:	it	eq
    938c:	cmpeq	r8, r6
    938e:	bcs.n	939c <_start@@Base+0x148>
    9390:	movs	r0, #0
    9392:	b.n	93a8 <_start@@Base+0x154>
    9394:	cmp	r9, r5
    9396:	it	eq
    9398:	cmpeq	r8, r4
    939a:	bcc.n	93ac <_start@@Base+0x158>
    939c:	cmp	r5, r9
    939e:	it	eq
    93a0:	cmpeq	r4, r8
    93a2:	ite	cc
    93a4:	movcc	r0, #1
    93a6:	movcs	r0, #0
    93a8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    93ac:	mov.w	r0, #4294967295	; 0xffffffff
    93b0:	b.n	93a8 <_start@@Base+0x154>
    93b2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    93b6:	ldrd	r4, r5, [r1, #-36]	; 0x24
    93ba:	ldrd	sl, fp, [r0, #-36]	; 0x24
    93be:	cbz	r2, 9400 <_start@@Base+0x1ac>
    93c0:	cmp	r5, fp
    93c2:	it	eq
    93c4:	cmpeq	r4, sl
    93c6:	bcc.n	93ee <_start@@Base+0x19a>
    93c8:	ldrd	r3, r2, [r0, #-20]
    93cc:	adds.w	r8, sl, r3
    93d0:	adc.w	r9, fp, r2
    93d4:	cmp	r5, r9
    93d6:	it	eq
    93d8:	cmpeq	r4, r8
    93da:	bcs.n	93e6 <_start@@Base+0x192>
    93dc:	movs	r0, #0
    93de:	b.n	9414 <_start@@Base+0x1c0>
    93e0:	mov.w	r0, #4294967295	; 0xffffffff
    93e4:	b.n	9414 <_start@@Base+0x1c0>
    93e6:	cmp	fp, r5
    93e8:	it	eq
    93ea:	cmpeq	sl, r4
    93ec:	bcc.n	9408 <_start@@Base+0x1b4>
    93ee:	ldrd	r3, r2, [r1, #-20]
    93f2:	adds	r6, r4, r3
    93f4:	adc.w	r7, r5, r2
    93f8:	cmp	fp, r7
    93fa:	it	eq
    93fc:	cmpeq	sl, r6
    93fe:	bcc.n	93dc <_start@@Base+0x188>
    9400:	cmp	r5, fp
    9402:	it	eq
    9404:	cmpeq	r4, sl
    9406:	bcc.n	93e0 <_start@@Base+0x18c>
    9408:	cmp	fp, r5
    940a:	it	eq
    940c:	cmpeq	sl, r4
    940e:	ite	cc
    9410:	movcc	r0, #1
    9412:	movcs	r0, #0
    9414:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9418:	mov	r4, r0
    941a:	ldr	r0, [pc, #92]	; (9478 <_start@@Base+0x224>)
    941c:	push	{r3, lr}
    941e:	add	r0, pc
    9420:	blx	8a78 <puts@plt+0x4>
    9424:	ldr	r0, [pc, #84]	; (947c <_start@@Base+0x228>)
    9426:	add	r0, pc
    9428:	blx	8a78 <puts@plt+0x4>
    942c:	ldr	r0, [pc, #80]	; (9480 <_start@@Base+0x22c>)
    942e:	add	r0, pc
    9430:	blx	8a78 <puts@plt+0x4>
    9434:	ldr	r0, [pc, #76]	; (9484 <_start@@Base+0x230>)
    9436:	add	r0, pc
    9438:	blx	8a78 <puts@plt+0x4>
    943c:	ldr	r0, [pc, #72]	; (9488 <_start@@Base+0x234>)
    943e:	add	r0, pc
    9440:	blx	8a78 <puts@plt+0x4>
    9444:	ldr	r0, [pc, #68]	; (948c <_start@@Base+0x238>)
    9446:	add	r0, pc
    9448:	blx	8a78 <puts@plt+0x4>
    944c:	ldr	r0, [pc, #64]	; (9490 <_start@@Base+0x23c>)
    944e:	add	r0, pc
    9450:	blx	8a78 <puts@plt+0x4>
    9454:	ldr	r0, [pc, #60]	; (9494 <_start@@Base+0x240>)
    9456:	add	r0, pc
    9458:	blx	8a78 <puts@plt+0x4>
    945c:	movs	r0, #10
    945e:	blx	8c08 <putchar@plt+0x4>
    9462:	ldr	r0, [pc, #52]	; (9498 <_start@@Base+0x244>)
    9464:	add	r0, pc
    9466:	blx	8a78 <puts@plt+0x4>
    946a:	ldr	r0, [pc, #48]	; (949c <_start@@Base+0x248>)
    946c:	add	r0, pc
    946e:	blx	8a78 <puts@plt+0x4>
    9472:	mov	r0, r4
    9474:	blx	8b58 <exit@plt>
    9478:	adds	r7, #226	; 0xe2
    947a:	movs	r3, r0
    947c:	subs	r0, #5
    947e:	movs	r3, r0
    9480:	subs	r0, #30
    9482:	movs	r3, r0
    9484:	subs	r0, #58	; 0x3a
    9486:	movs	r3, r0
    9488:	subs	r0, #87	; 0x57
    948a:	movs	r3, r0
    948c:	subs	r0, #135	; 0x87
    948e:	movs	r3, r0
    9490:	subs	r0, #225	; 0xe1
    9492:	movs	r3, r0
    9494:	subs	r1, #54	; 0x36
    9496:	movs	r3, r0
    9498:	subs	r1, #77	; 0x4d
    949a:	movs	r3, r0
    949c:	subs	r1, #167	; 0xa7
    949e:	movs	r3, r0
    94a0:	push	{r4, lr}
    94a2:	mov	r4, r1
    94a4:	ldr	r1, [pc, #84]	; (94fc <_start@@Base+0x2a8>)
    94a6:	sub	sp, #24
    94a8:	ldr	r3, [pc, #84]	; (9500 <_start@@Base+0x2ac>)
    94aa:	add	r1, pc
    94ac:	ldr	r3, [r1, r3]
    94ae:	mov	r1, sp
    94b0:	ldr	r3, [r3, #0]
    94b2:	str	r3, [sp, #20]
    94b4:	mov.w	r3, #0
    94b8:	movs	r3, #25
    94ba:	muls	r2, r3
    94bc:	movs	r3, #17
    94be:	adds	r2, #101	; 0x65
    94c0:	bl	1a79e <read_extent_buffer@@Base>
    94c4:	ldr.w	r3, [sp, #13]
    94c8:	ldr.w	r2, [sp, #9]
    94cc:	str.w	r3, [r4, #13]
    94d0:	ldrb.w	r3, [sp, #8]
    94d4:	str.w	r2, [r4, #9]
    94d8:	ldr	r2, [pc, #40]	; (9504 <_start@@Base+0x2b0>)
    94da:	strb	r3, [r4, #8]
    94dc:	ldr	r3, [sp, #0]
    94de:	add	r2, pc
    94e0:	str	r3, [r4, #0]
    94e2:	ldr	r3, [sp, #4]
    94e4:	str	r3, [r4, #4]
    94e6:	ldr	r3, [pc, #24]	; (9500 <_start@@Base+0x2ac>)
    94e8:	ldr	r3, [r2, r3]
    94ea:	ldr	r2, [r3, #0]
    94ec:	ldr	r3, [sp, #20]
    94ee:	eors	r2, r3
    94f0:	beq.n	94f6 <_start@@Base+0x2a2>
    94f2:	blx	88e4 <__stack_chk_fail@plt>
    94f6:	add	sp, #24
    94f8:	pop	{r4, pc}
    94fa:	nop
    94fc:	strb.w	r0, [r6, #5]
    9500:	lsls	r4, r7, #9
    9502:	movs	r0, r0
    9504:	ldr.w	r0, [r2, r5]
    9508:	ldr	r2, [pc, #96]	; (956c <_start@@Base+0x318>)
    950a:	ldr	r3, [pc, #100]	; (9570 <_start@@Base+0x31c>)
    950c:	add	r2, pc
    950e:	push	{r4, r5, r6, r7, lr}
    9510:	sub	sp, #12
    9512:	ldr	r3, [r2, r3]
    9514:	add	r7, sp, #0
    9516:	mov	r4, r0
    9518:	movs	r0, #0
    951a:	mov	r6, r1
    951c:	ldr	r3, [r3, #0]
    951e:	str	r3, [r7, #4]
    9520:	mov.w	r3, #0
    9524:	bl	1b2bc <btrfs_csum_type_size@@Base>
    9528:	sub.w	r2, r6, #32
    952c:	add.w	r1, r4, #32
    9530:	adds	r3, r0, #7
    9532:	mov	r5, r0
    9534:	bic.w	r3, r3, #7
    9538:	mov.w	r0, #4294967295	; 0xffffffff
    953c:	sub.w	sp, sp, r3
    9540:	bl	1a87e <crc32c_le@@Base>
    9544:	mov	r2, r5
    9546:	mov	r1, sp
    9548:	mvns	r0, r0
    954a:	str	r0, [sp, #0]
    954c:	mov	r0, r4
    954e:	blx	8830 <memcpy@plt+0x4>
    9552:	ldr	r2, [pc, #32]	; (9574 <_start@@Base+0x320>)
    9554:	ldr	r3, [pc, #24]	; (9570 <_start@@Base+0x31c>)
    9556:	add	r2, pc
    9558:	ldr	r3, [r2, r3]
    955a:	ldr	r2, [r3, #0]
    955c:	ldr	r3, [r7, #4]
    955e:	eors	r2, r3
    9560:	beq.n	9566 <_start@@Base+0x312>
    9562:	blx	88e4 <__stack_chk_fail@plt>
    9566:	adds	r7, #12
    9568:	mov	sp, r7
    956a:	pop	{r4, r5, r6, r7, pc}
    956c:	strh.w	r0, [r4, r5]
    9570:	lsls	r4, r7, #9
    9572:	movs	r0, r0
    9574:			; <UNDEFINED> instruction: 0xf7da0005
    9578:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    957c:	addw	r5, r0, #1164	; 0x48c
    9580:	mov	r4, r0
    9582:	add.w	r8, r4, #1192	; 0x4a8
    9586:	mov	r0, r5
    9588:	mov	r6, r1
    958a:	blx	87f0 <pthread_mutex_lock@plt>
    958e:	movs	r3, #1
    9590:	mov	r0, r8
    9592:	str.w	r3, [r4, #1292]	; 0x50c
    9596:	blx	8730 <pthread_cond_broadcast@plt>
    959a:	mov	r0, r5
    959c:	blx	8708 <pthread_mutex_unlock@plt>
    95a0:	add.w	r9, r4, #1032	; 0x408
    95a4:	movs	r7, #0
    95a6:	cmp	r7, r6
    95a8:	blt.n	95c8 <_start@@Base+0x374>
    95aa:	mov	r0, r8
    95ac:	add.w	r4, r4, #1240	; 0x4d8
    95b0:	blx	893c <pthread_cond_destroy@plt>
    95b4:	mov	r0, r5
    95b6:	blx	8794 <pthread_mutex_destroy@plt+0x4>
    95ba:	mov	r0, r4
    95bc:	bl	172ca <rb_first@@Base>
    95c0:	mov	r5, r0
    95c2:	cbnz	r0, 95d6 <_start@@Base+0x382>
    95c4:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    95c8:	ldr.w	r0, [r9], #4
    95cc:	movs	r1, #0
    95ce:	blx	8d18 <pthread_join@plt>
    95d2:	adds	r7, #1
    95d4:	b.n	95a6 <_start@@Base+0x352>
    95d6:	mov	r1, r4
    95d8:	bl	17054 <rb_erase@@Base>
    95dc:	ldr	r0, [r5, #12]
    95de:	blx	87cc <free@plt+0x4>
    95e2:	ldr	r0, [r5, #16]
    95e4:	blx	87cc <free@plt+0x4>
    95e8:	mov	r0, r5
    95ea:	blx	87cc <free@plt+0x4>
    95ee:	b.n	95ba <_start@@Base+0x366>
    95f0:	ldr	r2, [pc, #276]	; (9708 <_start@@Base+0x4b4>)
    95f2:	ldr	r3, [pc, #280]	; (970c <_start@@Base+0x4b8>)
    95f4:	add	r2, pc
    95f6:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    95fa:	sub	sp, #128	; 0x80
    95fc:	ldr	r3, [r2, r3]
    95fe:	mov	r4, r1
    9600:	add	r1, sp, #16
    9602:	mov	r8, r0
    9604:	ldr	r3, [r3, #0]
    9606:	str	r3, [sp, #124]	; 0x7c
    9608:	mov.w	r3, #0
    960c:	str	r1, [sp, #12]
    960e:	bl	3cb4c <__libc_csu_fini@@Base+0x28>
    9612:	ldr	r1, [sp, #12]
    9614:	mov	r5, r0
    9616:	cbz	r0, 9622 <_start@@Base+0x3ce>
    9618:	ldr	r0, [pc, #244]	; (9710 <_start@@Base+0x4bc>)
    961a:	add	r0, pc
    961c:	bl	1a900 <__btrfs_error@@Base>
    9620:	b.n	96de <_start@@Base+0x48a>
    9622:	mov	r0, r8
    9624:	bl	15d64 <btrfs_device_size@@Base>
    9628:	ldr	r2, [pc, #216]	; (9704 <_start@@Base+0x4b0>)
    962a:	movs	r3, #0
    962c:	cmp	r3, r1
    962e:	mov	r6, r0
    9630:	it	eq
    9632:	cmpeq	r2, r0
    9634:	mov	r7, r1
    9636:	bcs.n	96de <_start@@Base+0x48a>
    9638:	movs	r3, #4
    963a:	mov.w	r1, #4096	; 0x1000
    963e:	mov	r0, r4
    9640:	strb.w	r3, [r4, #51]	; 0x33
    9644:	strb.w	r5, [r4, #48]	; 0x30
    9648:	strb.w	r5, [r4, #49]	; 0x31
    964c:	strb.w	r5, [r4, #50]	; 0x32
    9650:	strb.w	r5, [r4, #52]	; 0x34
    9654:	strb.w	r5, [r4, #53]	; 0x35
    9658:	strb.w	r5, [r4, #54]	; 0x36
    965c:	strb.w	r5, [r4, #55]	; 0x37
    9660:	bl	9508 <_start@@Base+0x2b4>
    9664:	mov.w	r2, #67108864	; 0x4000000
    9668:	movs	r3, #0
    966a:	mov	r1, r4
    966c:	strd	r2, r3, [sp]
    9670:	mov	r0, r8
    9672:	mov.w	r2, #4096	; 0x1000
    9676:	blx	8c5c <pwrite64@plt>
    967a:	cmp.w	r0, #4096	; 0x1000
    967e:	blt.n	96f2 <_start@@Base+0x49e>
    9680:	cmp	r7, #64	; 0x40
    9682:	it	eq
    9684:	cmpeq.w	r6, #4096	; 0x1000
    9688:	bcc.n	96de <_start@@Base+0x48a>
    968a:	movs	r3, #64	; 0x40
    968c:	mov.w	r1, #4096	; 0x1000
    9690:	mov	r0, r4
    9692:	strb.w	r3, [r4, #52]	; 0x34
    9696:	strb.w	r5, [r4, #48]	; 0x30
    969a:	strb.w	r5, [r4, #49]	; 0x31
    969e:	strb.w	r5, [r4, #50]	; 0x32
    96a2:	strb.w	r5, [r4, #51]	; 0x33
    96a6:	strb.w	r5, [r4, #53]	; 0x35
    96aa:	strb.w	r5, [r4, #54]	; 0x36
    96ae:	strb.w	r5, [r4, #55]	; 0x37
    96b2:	bl	9508 <_start@@Base+0x2b4>
    96b6:	movs	r2, #0
    96b8:	movs	r3, #64	; 0x40
    96ba:	mov	r1, r4
    96bc:	strd	r2, r3, [sp]
    96c0:	mov	r0, r8
    96c2:	mov.w	r2, #4096	; 0x1000
    96c6:	blx	8c5c <pwrite64@plt>
    96ca:	cmp.w	r0, #4096	; 0x1000
    96ce:	bge.n	96de <_start@@Base+0x48a>
    96d0:	movs	r1, #2
    96d2:	cmp	r0, #0
    96d4:	bge.n	96f6 <_start@@Base+0x4a2>
    96d6:	ldr	r0, [pc, #60]	; (9714 <_start@@Base+0x4c0>)
    96d8:	add	r0, pc
    96da:	bl	1a900 <__btrfs_error@@Base>
    96de:	ldr	r2, [pc, #56]	; (9718 <_start@@Base+0x4c4>)
    96e0:	ldr	r3, [pc, #40]	; (970c <_start@@Base+0x4b8>)
    96e2:	add	r2, pc
    96e4:	ldr	r3, [r2, r3]
    96e6:	ldr	r2, [r3, #0]
    96e8:	ldr	r3, [sp, #124]	; 0x7c
    96ea:	eors	r2, r3
    96ec:	beq.n	96fc <_start@@Base+0x4a8>
    96ee:	blx	88e4 <__stack_chk_fail@plt>
    96f2:	movs	r1, #1
    96f4:	b.n	96d2 <_start@@Base+0x47e>
    96f6:	ldr	r0, [pc, #36]	; (971c <_start@@Base+0x4c8>)
    96f8:	add	r0, pc
    96fa:	b.n	961c <_start@@Base+0x3c8>
    96fc:	add	sp, #128	; 0x80
    96fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    9702:	nop
    9704:	lsrs	r7, r7, #31
    9706:	lsls	r0, r0, #16
    9708:			; <UNDEFINED> instruction: 0xf73c0005
    970c:	lsls	r4, r7, #9
    970e:	movs	r0, r0
    9710:	subs	r0, #79	; 0x4f
    9712:	movs	r3, r0
    9714:	adds	r7, #213	; 0xd5
    9716:	movs	r3, r0
    9718:	movw	r0, #59397	; 0xe805
    971c:	adds	r7, #227	; 0xe3
    971e:	movs	r3, r0
    9720:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9724:	mov	r7, r1
    9726:	sub.w	sp, sp, #4256	; 0x10a0
    972a:	ldr	r1, [pc, #552]	; (9954 <_start@@Base+0x700>)
    972c:	sub	sp, #28
    972e:	mov	sl, r2
    9730:	ldr	r2, [pc, #548]	; (9958 <_start@@Base+0x704>)
    9732:	add	r4, sp, #88	; 0x58
    9734:	add	r1, pc
    9736:	sub.w	r9, r4, #8
    973a:	str	r0, [sp, #8]
    973c:	mov	fp, r3
    973e:	ldr	r2, [r1, r2]
    9740:	add.w	r3, sp, #4256	; 0x10a0
    9744:	mov	r0, r9
    9746:	movs	r5, #0
    9748:	ldr	r2, [r2, #0]
    974a:	str	r2, [r3, #20]
    974c:	mov.w	r2, #0
    9750:	adds	r3, #20
    9752:	movs	r3, #1
    9754:	str.w	sl, [r4, #-19]
    9758:	strd	r3, r5, [r4, #-28]
    975c:	movs	r3, #216	; 0xd8
    975e:	str.w	fp, [r4, #-15]
    9762:	sub.w	r6, r4, #28
    9766:	strb.w	r3, [r4, #-20]
    976a:	bl	1b2cc <btrfs_init_path@@Base>
    976e:	ldr	r1, [sp, #8]
    9770:	mov	r3, r9
    9772:	strd	r5, r5, [sp]
    9776:	mov	r2, r6
    9778:	mov	r0, r5
    977a:	ldr	r1, [r1, #32]
    977c:	bl	1d6c0 <btrfs_search_slot@@Base>
    9780:	mov	r1, r0
    9782:	cbz	r0, 97ac <_start@@Base+0x558>
    9784:	ldr	r0, [pc, #468]	; (995c <_start@@Base+0x708>)
    9786:	add	r0, pc
    9788:	bl	1a900 <__btrfs_error@@Base>
    978c:	mvn.w	r4, #4
    9790:	ldr	r1, [pc, #460]	; (9960 <_start@@Base+0x70c>)
    9792:	add.w	r3, sp, #4256	; 0x10a0
    9796:	ldr	r2, [pc, #448]	; (9958 <_start@@Base+0x704>)
    9798:	adds	r3, #20
    979a:	add	r1, pc
    979c:	ldr	r2, [r1, r2]
    979e:	ldr	r1, [r2, #0]
    97a0:	ldr	r2, [r3, #0]
    97a2:	eors	r1, r2
    97a4:	beq.w	9948 <_start@@Base+0x6f4>
    97a8:	blx	88e4 <__stack_chk_fail@plt>
    97ac:	ldr.w	r0, [r4, #-8]
    97b0:	movs	r2, #25
    97b2:	ldr.w	r3, [r9, #32]
    97b6:	add.w	r4, r0, #96	; 0x60
    97ba:	mla	r3, r2, r3, r4
    97be:	ldr.w	r8, [r3, #118]	; 0x76
    97c2:	add.w	r5, r8, #101	; 0x65
    97c6:	adds	r1, r4, r5
    97c8:	ldr	r2, [r4, r5]
    97ca:	ldr	r3, [r1, #4]
    97cc:	cmp	fp, r3
    97ce:	it	eq
    97d0:	cmpeq	sl, r2
    97d2:	beq.n	97e2 <_start@@Base+0x58e>
    97d4:	ldr	r0, [pc, #396]	; (9964 <_start@@Base+0x710>)
    97d6:	strd	sl, fp, [sp]
    97da:	add	r0, pc
    97dc:	bl	1a900 <__btrfs_error@@Base>
    97e0:	b.n	978c <_start@@Base+0x538>
    97e2:	ldr	r3, [r1, #36]	; 0x24
    97e4:	add	r6, sp, #184	; 0xb8
    97e6:	sub.w	r4, r6, #20
    97ea:	add.w	r2, r8, #167	; 0xa7
    97ee:	str	r0, [sp, #52]	; 0x34
    97f0:	str	r3, [sp, #44]	; 0x2c
    97f2:	ldr	r3, [r1, #40]	; 0x28
    97f4:	str	r3, [sp, #48]	; 0x30
    97f6:	ldr	r3, [r1, #24]
    97f8:	str	r3, [sp, #24]
    97fa:	ldr	r3, [r1, #28]
    97fc:	str	r3, [sp, #20]
    97fe:	ldr	r3, [r1, #32]
    9800:	str	r3, [sp, #16]
    9802:	ldr	r3, [r1, #8]
    9804:	str	r3, [sp, #36]	; 0x24
    9806:	ldr	r3, [r1, #12]
    9808:	str	r3, [sp, #40]	; 0x28
    980a:	ldr	r3, [r1, #16]
    980c:	str	r3, [sp, #28]
    980e:	ldr	r3, [r1, #20]
    9810:	str	r3, [sp, #32]
    9812:	add	r3, sp, #152	; 0x98
    9814:	subs	r5, r3, #4
    9816:	str	r3, [sp, #12]
    9818:	movs	r3, #16
    981a:	mov	r1, r5
    981c:	bl	1a79e <read_extent_buffer@@Base>
    9820:	movs	r3, #16
    9822:	add.w	r2, r8, #183	; 0xb7
    9826:	mov	r1, r4
    9828:	ldr	r0, [sp, #52]	; 0x34
    982a:	bl	1a79e <read_extent_buffer@@Base>
    982e:	mov	r0, r9
    9830:	bl	1b2dc <btrfs_release_path@@Base>
    9834:	ldr	r1, [pc, #304]	; (9968 <_start@@Base+0x714>)
    9836:	mov	r2, r7
    9838:	movs	r0, #1
    983a:	add	r1, pc
    983c:	strd	sl, fp, [sp]
    9840:	blx	8c6c <__printf_chk@plt+0x4>
    9844:	mov.w	r2, #384	; 0x180
    9848:	movs	r1, #66	; 0x42
    984a:	mov	r0, r7
    984c:	blx	8a68 <open64@plt>
    9850:	subs.w	r9, r0, #0
    9854:	bge.n	9872 <_start@@Base+0x61e>
    9856:	ldr	r0, [pc, #276]	; (996c <_start@@Base+0x718>)
    9858:	mov	r1, r7
    985a:	mvn.w	r4, #4
    985e:	add	r0, pc
    9860:	bl	1a900 <__btrfs_error@@Base>
    9864:	cmp.w	r9, #4294967295	; 0xffffffff
    9868:	beq.n	9790 <_start@@Base+0x53c>
    986a:	mov	r0, r9
    986c:	blx	8e20 <close@plt>
    9870:	b.n	9790 <_start@@Base+0x53c>
    9872:	ldr	r3, [sp, #8]
    9874:	subs	r7, r6, #4
    9876:	mov.w	r2, #4096	; 0x1000
    987a:	mov	r0, r7
    987c:	ldr.w	r1, [r3, #308]	; 0x134
    9880:	blx	8830 <memcpy@plt+0x4>
    9884:	ldr	r3, [sp, #44]	; 0x2c
    9886:	ldr	r2, [sp, #48]	; 0x30
    9888:	str.w	sl, [r6, #197]	; 0xc5
    988c:	str.w	r3, [r6, #233]	; 0xe9
    9890:	ldr	r3, [sp, #36]	; 0x24
    9892:	str.w	r2, [sp, #421]	; 0x1a5
    9896:	str.w	fp, [sp, #385]	; 0x181
    989a:	ldr	r2, [sp, #40]	; 0x28
    989c:	str.w	r3, [r6, #205]	; 0xcd
    98a0:	ldr	r3, [sp, #28]
    98a2:	str.w	r2, [sp, #393]	; 0x189
    98a6:	ldr	r2, [sp, #32]
    98a8:	str.w	r3, [r6, #213]	; 0xd5
    98ac:	addw	r6, sp, #447	; 0x1bf
    98b0:	ldr	r3, [sp, #24]
    98b2:	str.w	r2, [sp, #401]	; 0x191
    98b6:	ldr	r2, [sp, #12]
    98b8:	str.w	r3, [r7, #225]	; 0xe1
    98bc:	ldr	r3, [sp, #20]
    98be:	adds	r2, #12
    98c0:	str.w	r3, [r7, #229]	; 0xe5
    98c4:	ldr	r3, [sp, #16]
    98c6:	str.w	r3, [r7, #233]	; 0xe9
    98ca:	mov	r3, r5
    98cc:	adds	r6, #8
    98ce:	ldmia	r3!, {r0, r1}
    98d0:	cmp	r3, r2
    98d2:	str.w	r0, [r6, #-8]
    98d6:	mov	r5, r3
    98d8:	str.w	r1, [r6, #-4]
    98dc:	bne.n	98ca <_start@@Base+0x676>
    98de:	addw	r2, sp, #463	; 0x1cf
    98e2:	add	r5, sp, #180	; 0xb4
    98e4:	mov	r3, r4
    98e6:	adds	r2, #8
    98e8:	ldmia	r3!, {r0, r1}
    98ea:	cmp	r3, r5
    98ec:	str.w	r0, [r2, #-8]
    98f0:	mov	r4, r3
    98f2:	str.w	r1, [r2, #-4]
    98f6:	bne.n	98e4 <_start@@Base+0x690>
    98f8:	mov.w	r1, #4096	; 0x1000
    98fc:	mov	r0, r7
    98fe:	bl	9508 <_start@@Base+0x2b4>
    9902:	mov.w	r2, #65536	; 0x10000
    9906:	movs	r3, #0
    9908:	mov	r1, r7
    990a:	strd	r2, r3, [sp]
    990e:	mov	r0, r9
    9910:	mov.w	r2, #4096	; 0x1000
    9914:	blx	8c5c <pwrite64@plt>
    9918:	cmp.w	r0, #4096	; 0x1000
    991c:	mov	r4, r0
    991e:	beq.n	993e <_start@@Base+0x6ea>
    9920:	cmp	r0, #0
    9922:	bge.n	9938 <_start@@Base+0x6e4>
    9924:	blx	8bac <__errno_location@plt>
    9928:	str	r4, [r0, #0]
    992a:	ldr	r0, [pc, #68]	; (9970 <_start@@Base+0x71c>)
    992c:	add	r0, pc
    992e:	bl	1a900 <__btrfs_error@@Base>
    9932:	mvn.w	r4, #4
    9936:	b.n	986a <_start@@Base+0x616>
    9938:	ldr	r0, [pc, #56]	; (9974 <_start@@Base+0x720>)
    993a:	add	r0, pc
    993c:	b.n	992e <_start@@Base+0x6da>
    993e:	mov	r1, r7
    9940:	mov	r0, r9
    9942:	bl	95f0 <_start@@Base+0x39c>
    9946:	b.n	986a <_start@@Base+0x616>
    9948:	mov	r0, r4
    994a:	add.w	sp, sp, #4256	; 0x10a0
    994e:	add	sp, #28
    9950:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9954:			; <UNDEFINED> instruction: 0xf5fc0005
    9958:	lsls	r4, r7, #9
    995a:	movs	r0, r0
    995c:	adds	r7, #128	; 0x80
    995e:	movs	r3, r0
    9960:			; <UNDEFINED> instruction: 0xf5960005
    9964:	adds	r7, #66	; 0x42
    9966:	movs	r3, r0
    9968:	adds	r6, #255	; 0xff
    996a:	movs	r3, r0
    996c:	adds	r6, #255	; 0xff
    996e:	movs	r3, r0
    9970:	adds	r6, #71	; 0x47
    9972:	movs	r3, r0
    9974:	adds	r6, #85	; 0x55
    9976:	movs	r3, r0
    9978:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    997c:	mov	r5, r3
    997e:	ldr	r3, [sp, #48]	; 0x30
    9980:	mov	r4, r2
    9982:	ldr.w	fp, [sp, #52]	; 0x34
    9986:	str	r3, [sp, #4]
    9988:	ldrd	r2, r3, [r0, #280]	; 0x118
    998c:	cmp	r3, r5
    998e:	it	eq
    9990:	cmpeq	r2, r4
    9992:	bcs.n	999c <_start@@Base+0x748>
    9994:	movs	r0, #0
    9996:	add	sp, #12
    9998:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    999c:	ldr.w	sl, [r0, #216]	; 0xd8
    99a0:	cmp.w	sl, #0
    99a4:	beq.n	9994 <_start@@Base+0x740>
    99a6:	ldrd	r0, r1, [sl, #24]
    99aa:	cmp	r1, r5
    99ac:	it	eq
    99ae:	cmpeq	r0, r4
    99b0:	bcs.n	99c4 <_start@@Base+0x770>
    99b2:	ldr.w	r2, [sl, #4]
    99b6:	cbnz	r2, 9a18 <_start@@Base+0x7c4>
    99b8:	mov	r0, sl
    99ba:	bl	19534 <next_cache_extent@@Base>
    99be:	mov	r2, sl
    99c0:	mov	sl, r0
    99c2:	b.n	99e0 <_start@@Base+0x78c>
    99c4:	cmp	r5, r1
    99c6:	it	eq
    99c8:	cmpeq	r4, r0
    99ca:	bcc.n	99d0 <_start@@Base+0x77c>
    99cc:	movs	r0, #1
    99ce:	b.n	9996 <_start@@Base+0x742>
    99d0:	ldr.w	r2, [sl, #8]
    99d4:	cbnz	r2, 9a18 <_start@@Base+0x7c4>
    99d6:	mov	r0, sl
    99d8:	bl	19530 <prev_cache_extent@@Base>
    99dc:	mov	r2, r0
    99de:	cbz	r0, 99fc <_start@@Base+0x7a8>
    99e0:	ldrd	r1, r3, [r2, #24]
    99e4:	ldrd	r0, r2, [r2, #32]
    99e8:	adds	r6, r1, r0
    99ea:	adc.w	r7, r3, r2
    99ee:	cmp	r5, r7
    99f0:	it	eq
    99f2:	cmpeq	r4, r6
    99f4:	bcc.n	99cc <_start@@Base+0x778>
    99f6:	cmp.w	sl, #0
    99fa:	beq.n	9994 <_start@@Base+0x740>
    99fc:	ldr	r3, [sp, #4]
    99fe:	adds.w	r8, r4, r3
    9a02:	ldrd	r2, r3, [sl, #24]
    9a06:	adc.w	r9, r5, fp
    9a0a:	cmp	r3, r9
    9a0c:	it	eq
    9a0e:	cmpeq	r2, r8
    9a10:	ite	cc
    9a12:	movcc	r0, #1
    9a14:	movcs	r0, #0
    9a16:	b.n	9996 <_start@@Base+0x742>
    9a18:	mov	sl, r2
    9a1a:	b.n	99a0 <_start@@Base+0x74c>
    9a1c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9a20:	add.w	r6, r0, #220	; 0xdc
    9a24:	add.w	r8, r0, #224	; 0xe0
    9a28:	mov	r4, r0
    9a2a:	mov	r7, r1
    9a2c:	mov	r0, r6
    9a2e:	bl	172ca <rb_first@@Base>
    9a32:	mov	r5, r0
    9a34:	cbnz	r0, 9a74 <_start@@Base+0x820>
    9a36:	add.w	r6, r4, #140	; 0x8c
    9a3a:	add.w	r0, r4, #216	; 0xd8
    9a3e:	add.w	r8, r4, #168	; 0xa8
    9a42:	bl	19562 <free_extent_cache_tree@@Base>
    9a46:	mov	r0, r6
    9a48:	adds	r4, #8
    9a4a:	blx	87f0 <pthread_mutex_lock@plt>
    9a4e:	movs	r3, #1
    9a50:	mov	r0, r8
    9a52:	str.w	r3, [r4, #316]	; 0x13c
    9a56:	blx	8730 <pthread_cond_broadcast@plt>
    9a5a:	mov	r0, r6
    9a5c:	blx	8708 <pthread_mutex_unlock@plt>
    9a60:	cmp	r5, r7
    9a62:	blt.n	9a90 <_start@@Base+0x83c>
    9a64:	mov	r0, r8
    9a66:	blx	893c <pthread_cond_destroy@plt>
    9a6a:	mov	r0, r6
    9a6c:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9a70:	b.w	8790 <pthread_mutex_destroy@plt>
    9a74:	mov	r1, r6
    9a76:	sub.w	r9, r5, #32
    9a7a:	bl	17054 <rb_erase@@Base>
    9a7e:	add.w	r0, r5, #12
    9a82:	mov	r1, r8
    9a84:	bl	17054 <rb_erase@@Base>
    9a88:	mov	r0, r9
    9a8a:	blx	87cc <free@plt+0x4>
    9a8e:	b.n	9a2c <_start@@Base+0x7d8>
    9a90:	ldr.w	r0, [r4], #4
    9a94:	movs	r1, #0
    9a96:	blx	8d18 <pthread_join@plt>
    9a9a:	adds	r5, #1
    9a9c:	b.n	9a60 <_start@@Base+0x80c>
    9a9e:	cbz	r0, 9ab0 <_start@@Base+0x85c>
    9aa0:	cmn.w	r0, #4096	; 0x1000
    9aa4:	bhi.n	9aae <_start@@Base+0x85a>
    9aa6:	ldr	r0, [r0, #84]	; 0x54
    9aa8:	ubfx	r0, r0, #2, #1
    9aac:	bx	lr
    9aae:	movs	r0, #0
    9ab0:	bx	lr
    9ab2:	cbz	r0, 9abc <_start@@Base+0x868>
    9ab4:	ldr.w	r0, [r0, #464]	; 0x1d0
    9ab8:	b.w	20814 <close_ctree_fs_info@@Base>
    9abc:	bx	lr
    9abe:	ldr.w	ip, [pc, #80]	; 9b10 <_start@@Base+0x8bc>
    9ac2:	ldr	r5, [pc, #80]	; (9b14 <_start@@Base+0x8c0>)
    9ac4:	add	ip, pc
    9ac6:	ldr	r4, [pc, #80]	; (9b18 <_start@@Base+0x8c4>)
    9ac8:	push	{lr}
    9aca:	sub	sp, #92	; 0x5c
    9acc:	ldr.w	r5, [ip, r5]
    9ad0:	add	r4, pc
    9ad2:	ldr	r5, [r5, #0]
    9ad4:	str	r5, [sp, #84]	; 0x54
    9ad6:	mov.w	r5, #0
    9ada:	ldr	r5, [pc, #64]	; (9b1c <_start@@Base+0x8c8>)
    9adc:	ldr	r4, [r4, r5]
    9ade:	ldr	r5, [sp, #96]	; 0x60
    9ae0:	strd	r3, r2, [sp]
    9ae4:	mov	r3, r1
    9ae6:	ldr	r2, [pc, #56]	; (9b20 <_start@@Base+0x8cc>)
    9ae8:	movs	r1, #1
    9aea:	strd	r0, r5, [sp, #8]
    9aee:	ldr	r0, [r4, #0]
    9af0:	add	r4, sp, #20
    9af2:	add	r2, pc
    9af4:	blx	8ca0 <__fprintf_chk@plt+0x4>
    9af8:	movs	r1, #16
    9afa:	mov	r0, r4
    9afc:	blx	8ae0 <backtrace@plt>
    9b00:	movs	r2, #2
    9b02:	mov	r1, r0
    9b04:	mov	r0, r4
    9b06:	blx	8e50 <backtrace_symbols_fd@plt>
    9b0a:	blx	8e08 <abort@plt>
    9b0e:	nop
    9b10:			; <UNDEFINED> instruction: 0xf26c0005
    9b14:	lsls	r4, r7, #9
    9b16:	movs	r0, r0
    9b18:			; <UNDEFINED> instruction: 0xf2600005
    9b1c:	lsls	r4, r1, #10
    9b1e:	movs	r0, r0
    9b20:	adds	r4, #181	; 0xb5
    9b22:	movs	r3, r0
    9b24:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    9b28:	movs	r3, #0
    9b2a:	mov	r7, r0
    9b2c:	mov	r5, r1
    9b2e:	mov	r8, r2
    9b30:	mov	r4, r0
    9b32:	ldr	r6, [r4, #0]
    9b34:	cbnz	r6, 9b4c <_start@@Base+0x8f8>
    9b36:	strd	r3, r6, [r5]
    9b3a:	mov	r1, r7
    9b3c:	str	r6, [r5, #8]
    9b3e:	mov	r0, r5
    9b40:	str	r5, [r4, #0]
    9b42:	add	sp, #8
    9b44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    9b48:	b.w	16fae <rb_insert_color@@Base>
    9b4c:	movs	r2, #1
    9b4e:	mov	r1, r5
    9b50:	mov	r0, r6
    9b52:	blx	r8
    9b54:	cmp	r0, #0
    9b56:	bge.n	9b60 <_start@@Base+0x90c>
    9b58:	ldr	r4, [r4, #0]
    9b5a:	adds	r4, #8
    9b5c:	mov	r3, r6
    9b5e:	b.n	9b32 <_start@@Base+0x8de>
    9b60:	beq.n	9b68 <_start@@Base+0x914>
    9b62:	ldr	r4, [r4, #0]
    9b64:	adds	r4, #4
    9b66:	b.n	9b5c <_start@@Base+0x908>
    9b68:	ldr	r2, [pc, #20]	; (9b80 <_start@@Base+0x92c>)
    9b6a:	movs	r3, #1
    9b6c:	ldr	r1, [pc, #20]	; (9b84 <_start@@Base+0x930>)
    9b6e:	ldr	r0, [pc, #24]	; (9b88 <_start@@Base+0x934>)
    9b70:	add	r2, pc
    9b72:	str	r3, [sp, #0]
    9b74:	add	r1, pc
    9b76:	add	r0, pc
    9b78:	movs	r3, #207	; 0xcf
    9b7a:	bl	9abe <_start@@Base+0x86a>
    9b7e:	nop
    9b80:	sbcs	r5, r3
    9b82:	movs	r3, r0
    9b84:	adds	r4, #96	; 0x60
    9b86:	movs	r3, r0
    9b88:	strh	r7, [r7, #28]
    9b8a:	movs	r3, r0
    9b8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9b90:	sub	sp, #100	; 0x64
    9b92:	mov	r7, r3
    9b94:	mov	r6, r2
    9b96:	ldrd	r5, r3, [sp, #136]	; 0x88
    9b9a:	cmp	r7, #0
    9b9c:	ldr	r2, [pc, #272]	; (9cb0 <_start@@Base+0xa5c>)
    9b9e:	it	eq
    9ba0:	cmpeq.w	r6, #65536	; 0x10000
    9ba4:	ldr.w	r8, [pc, #268]	; 9cb4 <_start@@Base+0xa60>
    9ba8:	mov	r9, r0
    9baa:	str	r3, [sp, #20]
    9bac:	add	r2, pc
    9bae:	ldr	r3, [pc, #264]	; (9cb8 <_start@@Base+0xa64>)
    9bb0:	add	r8, pc
    9bb2:	ldr	r3, [r2, r3]
    9bb4:	ldr	r3, [r3, #0]
    9bb6:	str	r3, [sp, #92]	; 0x5c
    9bb8:	mov.w	r3, #0
    9bbc:	beq.n	9be2 <_start@@Base+0x98e>
    9bbe:	ldr.w	r4, [r0, #220]	; 0xdc
    9bc2:	add	r1, sp, #56	; 0x38
    9bc4:	strd	r6, r7, [sp, #24]
    9bc8:	cbnz	r4, 9bf6 <_start@@Base+0x9a2>
    9bca:	ldr	r2, [pc, #240]	; (9cbc <_start@@Base+0xa68>)
    9bcc:	ldr.w	r3, [r8, r2]
    9bd0:	ldr.w	r2, [r9]
    9bd4:	ldr	r3, [r3, #0]
    9bd6:	cmp	r2, r3
    9bd8:	beq.n	9be2 <_start@@Base+0x98e>
    9bda:	ldr	r0, [pc, #228]	; (9cc0 <_start@@Base+0xa6c>)
    9bdc:	add	r0, pc
    9bde:	bl	1a884 <__btrfs_warning@@Base>
    9be2:	ldr	r2, [pc, #224]	; (9cc4 <_start@@Base+0xa70>)
    9be4:	ldr	r3, [pc, #208]	; (9cb8 <_start@@Base+0xa64>)
    9be6:	add	r2, pc
    9be8:	ldr	r3, [r2, r3]
    9bea:	ldr	r2, [r3, #0]
    9bec:	ldr	r3, [sp, #92]	; 0x5c
    9bee:	eors	r2, r3
    9bf0:	beq.n	9ca4 <_start@@Base+0xa50>
    9bf2:	blx	88e4 <__stack_chk_fail@plt>
    9bf6:	movs	r2, #1
    9bf8:	mov	r0, r4
    9bfa:	bl	9368 <_start@@Base+0x114>
    9bfe:	cmp	r0, #0
    9c00:	bge.n	9c06 <_start@@Base+0x9b2>
    9c02:	ldr	r4, [r4, #8]
    9c04:	b.n	9bc8 <_start@@Base+0x974>
    9c06:	beq.n	9c64 <_start@@Base+0xa10>
    9c08:	ldr	r4, [r4, #4]
    9c0a:	b.n	9bc8 <_start@@Base+0x974>
    9c0c:	subs.w	ip, r6, r2
    9c10:	sbc.w	lr, r7, r3
    9c14:	ldrd	r2, r3, [r4, #-16]
    9c18:	orrs.w	r1, r2, r3
    9c1c:	beq.n	9c26 <_start@@Base+0x9d2>
    9c1e:	adds.w	r2, r2, ip
    9c22:	adc.w	r3, r3, lr
    9c26:	ldr	r1, [sp, #20]
    9c28:	strd	r2, r3, [r1]
    9c2c:	ldrd	r3, r2, [r4, #-8]
    9c30:	ldrd	r1, r0, [r4, #-32]
    9c34:	ldrd	r8, r9, [r5]
    9c38:	adds	r3, r3, r1
    9c3a:	adc.w	r2, r0, r2
    9c3e:	subs.w	sl, r3, r6
    9c42:	sbc.w	fp, r2, r7
    9c46:	cmp	r9, fp
    9c48:	it	eq
    9c4a:	cmpeq	r8, sl
    9c4c:	itt	cc
    9c4e:	movcc	sl, r8
    9c50:	movcc	fp, r9
    9c52:	strd	sl, fp, [r5]
    9c56:	ldrd	r3, r2, [r4, #-24]
    9c5a:	adds.w	r6, ip, r3
    9c5e:	adc.w	r7, lr, r2
    9c62:	b.n	9be2 <_start@@Base+0x98e>
    9c64:	ldrd	r2, r3, [r4, #-32]
    9c68:	cmp	r7, r3
    9c6a:	it	eq
    9c6c:	cmpeq	r6, r2
    9c6e:	bcc.n	9c8a <_start@@Base+0xa36>
    9c70:	ldrd	r1, r0, [r4, #-8]
    9c74:	adds	r1, r2, r1
    9c76:	str	r1, [sp, #8]
    9c78:	adc.w	r1, r3, r0
    9c7c:	str	r1, [sp, #12]
    9c7e:	ldrd	r0, r1, [sp, #8]
    9c82:	cmp	r1, r7
    9c84:	it	eq
    9c86:	cmpeq	r0, r6
    9c88:	bcs.n	9c0c <_start@@Base+0x9b8>
    9c8a:	ldr	r2, [pc, #60]	; (9cc8 <_start@@Base+0xa74>)
    9c8c:	movs	r3, #1
    9c8e:	ldr	r1, [pc, #60]	; (9ccc <_start@@Base+0xa78>)
    9c90:	ldr	r0, [pc, #60]	; (9cd0 <_start@@Base+0xa7c>)
    9c92:	add	r2, pc
    9c94:	str	r3, [sp, #0]
    9c96:	adds	r2, #12
    9c98:	add	r1, pc
    9c9a:	add	r0, pc
    9c9c:	mov.w	r3, #256	; 0x100
    9ca0:	bl	9abe <_start@@Base+0x86a>
    9ca4:	mov	r0, r6
    9ca6:	mov	r1, r7
    9ca8:	add	sp, #100	; 0x64
    9caa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9cae:	nop
    9cb0:			; <UNDEFINED> instruction: 0xf1840005
    9cb4:			; <UNDEFINED> instruction: 0xf1800005
    9cb8:	lsls	r4, r7, #9
    9cba:	movs	r0, r0
    9cbc:	lsls	r4, r4, #10
    9cbe:	movs	r0, r0
    9cc0:	adds	r4, #5
    9cc2:	movs	r3, r0
    9cc4:	adc.w	r0, sl, #5
    9cc8:	eors	r3, r7
    9cca:	movs	r3, r0
    9ccc:	adds	r3, #60	; 0x3c
    9cce:	movs	r3, r0
    9cd0:	strh	r3, [r3, #20]
    9cd2:	movs	r3, r0
    9cd4:	push	{r0, r1, r2, lr}
    9cd6:	cbnz	r0, 9cf2 <_start@@Base+0xa9e>
    9cd8:	ldr	r2, [pc, #32]	; (9cfc <_start@@Base+0xaa8>)
    9cda:	movs	r3, #1
    9cdc:	ldr	r1, [pc, #32]	; (9d00 <_start@@Base+0xaac>)
    9cde:	ldr	r0, [pc, #36]	; (9d04 <_start@@Base+0xab0>)
    9ce0:	add	r2, pc
    9ce2:	str	r3, [sp, #0]
    9ce4:	adds	r2, #32
    9ce6:	add	r1, pc
    9ce8:	add	r0, pc
    9cea:	mov.w	r3, #322	; 0x142
    9cee:	bl	9abe <_start@@Base+0x86a>
    9cf2:	lsls	r0, r0, #5
    9cf4:	adds	r0, #48	; 0x30
    9cf6:	add	sp, #12
    9cf8:	ldr.w	pc, [sp], #4
    9cfc:	ands	r5, r5
    9cfe:	movs	r3, r0
    9d00:	adds	r3, #30
    9d02:	movs	r3, r0
    9d04:	adds	r3, #38	; 0x26
    9d06:	movs	r3, r0
    9d08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9d0c:	mov	r5, r0
    9d0e:	vpush	{d8-d9}
    9d12:	add.w	fp, r5, #140	; 0x8c
    9d16:	ldr.w	r2, [pc, #1928]	; a4a0 <_start@@Base+0x124c>
    9d1a:	ldr.w	r3, [pc, #1928]	; a4a4 <_start@@Base+0x1250>
    9d1e:	add	r2, pc
    9d20:	sub	sp, #124	; 0x7c
    9d22:	ldr	r0, [r0, #4]
    9d24:	ldr	r3, [r2, r3]
    9d26:	ldr	r3, [r3, #0]
    9d28:	str	r3, [sp, #116]	; 0x74
    9d2a:	mov.w	r3, #0
    9d2e:	blx	8c84 <fileno@plt>
    9d32:	vmov	s16, r0
    9d36:	mov.w	r0, #1048576	; 0x100000
    9d3a:	blx	8a94 <malloc@plt+0x4>
    9d3e:	str	r0, [sp, #36]	; 0x24
    9d40:	cmp	r0, #0
    9d42:	bne.w	a224 <_start@@Base+0xfd0>
    9d46:	ldr.w	r0, [pc, #1888]	; a4a8 <_start@@Base+0x1254>
    9d4a:	add	r0, pc
    9d4c:	bl	1a900 <__btrfs_error@@Base>
    9d50:	mov	r0, fp
    9d52:	blx	87f0 <pthread_mutex_lock@plt>
    9d56:	ldr.w	r3, [r5, #328]	; 0x148
    9d5a:	cbnz	r3, 9d64 <_start@@Base+0xb10>
    9d5c:	mvn.w	r3, #11
    9d60:	str.w	r3, [r5, #328]	; 0x148
    9d64:	mov	r0, fp
    9d66:	blx	8708 <pthread_mutex_unlock@plt>
    9d6a:	movs	r0, #0
    9d6c:	blx	8cc4 <pthread_exit@plt>
    9d70:	ldr.w	r3, [r5, #324]	; 0x144
    9d74:	cbz	r3, 9d84 <_start@@Base+0xb30>
    9d76:	mov	r0, fp
    9d78:	blx	8708 <pthread_mutex_unlock@plt>
    9d7c:	ldr	r0, [sp, #36]	; 0x24
    9d7e:	blx	87cc <free@plt+0x4>
    9d82:	b.n	9d6a <_start@@Base+0xb16>
    9d84:	mov	r1, fp
    9d86:	mov	r0, r6
    9d88:	blx	8d88 <pthread_cond_wait@plt>
    9d8c:	b.n	a232 <_start@@Base+0xfde>
    9d8e:	ldrd	r4, r3, [sl, #32]
    9d92:	str	r3, [sp, #76]	; 0x4c
    9d94:	movs	r3, #0
    9d96:	b.n	a294 <_start@@Base+0x1040>
    9d98:	ldr	r4, [sp, #36]	; 0x24
    9d9a:	b.n	a296 <_start@@Base+0x1042>
    9d9c:	ldr.w	r3, [r4, #160]	; 0xa0
    9da0:	mov	r6, r1
    9da2:	mov	r8, r2
    9da4:	str	r2, [sp, #16]
    9da6:	str	r3, [sp, #56]	; 0x38
    9da8:	ldr	r3, [sp, #56]	; 0x38
    9daa:	ldr	r2, [sp, #16]
    9dac:	cmp	r3, r2
    9dae:	bhi.n	9e0e <_start@@Base+0xbba>
    9db0:	ldr.w	r3, [r5, #344]	; 0x158
    9db4:	cbz	r3, 9dd8 <_start@@Base+0xb84>
    9db6:	movs	r2, #0
    9db8:	strb.w	r2, [r4, #555]	; 0x22b
    9dbc:	strb.w	r2, [r4, #556]	; 0x22c
    9dc0:	strb.w	r2, [r4, #557]	; 0x22d
    9dc4:	strb.w	r2, [r4, #558]	; 0x22e
    9dc8:	strb.w	r2, [r4, #559]	; 0x22f
    9dcc:	strb.w	r2, [r4, #560]	; 0x230
    9dd0:	strb.w	r2, [r4, #561]	; 0x231
    9dd4:	strb.w	r2, [r4, #562]	; 0x232
    9dd8:	ldr	r1, [sp, #40]	; 0x28
    9dda:	movs	r3, #0
    9ddc:	ldr	r2, [sp, #44]	; 0x2c
    9dde:	str.w	r8, [r4, #160]	; 0xa0
    9de2:	orr.w	r2, r2, #4
    9de6:	str	r1, [r4, #56]	; 0x38
    9de8:	str	r2, [r4, #60]	; 0x3c
    9dea:	movs	r2, #1
    9dec:	strb.w	r3, [r4, #137]	; 0x89
    9df0:	strb.w	r2, [r4, #136]	; 0x88
    9df4:	strb.w	r3, [r4, #138]	; 0x8a
    9df8:	strb.w	r3, [r4, #139]	; 0x8b
    9dfc:	strb.w	r3, [r4, #140]	; 0x8c
    9e00:	strb.w	r3, [r4, #141]	; 0x8d
    9e04:	strb.w	r3, [r4, #142]	; 0x8e
    9e08:	strb.w	r3, [r4, #143]	; 0x8f
    9e0c:	b.n	a416 <_start@@Base+0x11c2>
    9e0e:	ldr.w	r3, [r1, #9]
    9e12:	movs	r2, #17
    9e14:	ldrb.w	r9, [r1, #8]
    9e18:	mov	r0, r6
    9e1a:	add.w	r7, r6, #17
    9e1e:	vmov	s17, r3
    9e22:	ldr.w	r3, [r1, #13]
    9e26:	str	r1, [sp, #24]
    9e28:	str	r3, [sp, #60]	; 0x3c
    9e2a:	blx	87bc <memmove@plt+0x4>
    9e2e:	ldr	r1, [sp, #24]
    9e30:	cmp.w	r9, #228	; 0xe4
    9e34:	add.w	r3, r1, #17
    9e38:	str	r3, [sp, #24]
    9e3a:	bne.n	9f08 <_start@@Base+0xcb4>
    9e3c:	movs	r3, #0
    9e3e:	movs	r2, #0
    9e40:	mov	r0, r7
    9e42:	strd	r2, r3, [sp, #96]	; 0x60
    9e46:	movs	r2, #80	; 0x50
    9e48:	ldrh.w	r9, [r1, #61]	; 0x3d
    9e4c:	ldr	r1, [sp, #24]
    9e4e:	blx	87bc <memmove@plt+0x4>
    9e52:	movs	r2, #0
    9e54:	strb.w	r2, [r6, #63]	; 0x3f
    9e58:	strb.w	r2, [r6, #64]	; 0x40
    9e5c:	ldr	r1, [r7, #24]
    9e5e:	and.w	r3, r1, #32
    9e62:	strd	r3, r2, [sp, #48]	; 0x30
    9e66:	ldrd	r0, r1, [sp, #48]	; 0x30
    9e6a:	orrs.w	r3, r0, r1
    9e6e:	ldr	r3, [sp, #60]	; 0x3c
    9e70:	beq.n	9ee6 <_start@@Base+0xc92>
    9e72:	add.w	r8, r8, #49	; 0x31
    9e76:	add.w	r7, r6, #49	; 0x31
    9e7a:	ldr.w	r2, [r4, #205]	; 0xcd
    9e7e:	mov	r0, r5
    9e80:	ldr.w	r1, [r4, #201]	; 0xc9
    9e84:	adds	r6, #81	; 0x51
    9e86:	str.w	r2, [r6, #-12]
    9e8a:	add	r2, sp, #88	; 0x58
    9e8c:	str.w	r1, [r6, #-16]
    9e90:	str	r2, [sp, #4]
    9e92:	add	r2, sp, #96	; 0x60
    9e94:	str	r2, [sp, #0]
    9e96:	vmov	r2, s17
    9e9a:	bl	9b8c <_start@@Base+0x938>
    9e9e:	ldrd	r2, r3, [sp, #96]	; 0x60
    9ea2:	adds	r3, #1
    9ea4:	addw	r3, r4, #267	; 0x10b
    9ea8:	it	eq
    9eaa:	cmpeq.w	r2, #4294967295	; 0xffffffff
    9eae:	addw	r2, r4, #283	; 0x11b
    9eb2:	itt	ne
    9eb4:	strne.w	r0, [r6, #-8]
    9eb8:	strne.w	r1, [r6, #-4]
    9ebc:	ldr.w	r1, [r3], #4
    9ec0:	cmp	r3, r2
    9ec2:	str.w	r1, [r6], #4
    9ec6:	bne.n	9ebc <_start@@Base+0xc68>
    9ec8:	mov	r0, r9
    9eca:	add.w	r8, r8, #80	; 0x50
    9ece:	bl	9cd4 <_start@@Base+0xa80>
    9ed2:	ldr	r3, [sp, #24]
    9ed4:	add.w	r6, r7, #80	; 0x50
    9ed8:	add	r3, r0
    9eda:	adds	r0, #17
    9edc:	mov	r1, r3
    9ede:	ldr	r3, [sp, #16]
    9ee0:	add	r3, r0
    9ee2:	str	r3, [sp, #16]
    9ee4:	b.n	9da8 <_start@@Base+0xb54>
    9ee6:	strb.w	r2, [r6, #62]	; 0x3e
    9eea:	movs	r1, #1
    9eec:	add.w	r8, r8, #17
    9ef0:	strb.w	r1, [r6, #61]	; 0x3d
    9ef4:	movs	r1, #2
    9ef6:	strb	r2, [r7, #25]
    9ef8:	strb	r1, [r7, #24]
    9efa:	strb	r2, [r7, #26]
    9efc:	strb	r2, [r7, #27]
    9efe:	strb	r2, [r7, #28]
    9f00:	strb	r2, [r7, #29]
    9f02:	strb	r2, [r7, #30]
    9f04:	strb	r2, [r7, #31]
    9f06:	b.n	9e7a <_start@@Base+0xc26>
    9f08:	ldr.w	r0, [pc, #1440]	; a4ac <_start@@Base+0x1258>
    9f0c:	mov	r1, r9
    9f0e:	add	r0, pc
    9f10:	bl	1a900 <__btrfs_error@@Base>
    9f14:	mvn.w	r3, #4
    9f18:	str	r3, [sp, #32]
    9f1a:	b.n	a420 <_start@@Base+0x11cc>
    9f1c:	cmp	r2, #0
    9f1e:	bne.w	a420 <_start@@Base+0x11cc>
    9f22:	ldr	r3, [sp, #76]	; 0x4c
    9f24:	ldr.w	r7, [r5, #248]	; 0xf8
    9f28:	mov	r0, r3
    9f2a:	str	r3, [sp, #40]	; 0x28
    9f2c:	mov	r1, r7
    9f2e:	bl	3c404 <btrfs_util_strerror@@Base+0x274>
    9f32:	cmp	r1, #0
    9f34:	bne.w	a420 <_start@@Base+0x11cc>
    9f38:	add.w	r1, r7, #96	; 0x60
    9f3c:	movs	r0, #1
    9f3e:	blx	8718 <calloc@plt+0x4>
    9f42:	mov	r6, r0
    9f44:	cmp	r0, #0
    9f46:	beq.w	a138 <_start@@Base+0xee4>
    9f4a:	mov	r9, r4
    9f4c:	str	r7, [r0, #76]	; 0x4c
    9f4e:	ldr	r3, [sp, #40]	; 0x28
    9f50:	cbz	r3, 9f7a <_start@@Base+0xd26>
    9f52:	ldrd	r2, r3, [sp, #24]
    9f56:	add.w	r7, r6, #96	; 0x60
    9f5a:	mov	r1, r9
    9f5c:	mov	r0, r7
    9f5e:	strd	r2, r3, [r6, #40]	; 0x28
    9f62:	ldr.w	r2, [r5, #248]	; 0xf8
    9f66:	blx	8830 <memcpy@plt+0x4>
    9f6a:	ldrd	r2, r3, [r6, #144]	; 0x90
    9f6e:	ldrd	r0, r1, [sp, #24]
    9f72:	cmp	r1, r3
    9f74:	it	eq
    9f76:	cmpeq	r0, r2
    9f78:	beq.n	9f82 <_start@@Base+0xd2e>
    9f7a:	mov	r0, r6
    9f7c:	blx	87cc <free@plt+0x4>
    9f80:	b.n	a420 <_start@@Base+0x11cc>
    9f82:	add.w	r1, r6, #128	; 0x80
    9f86:	add.w	r0, r5, #304	; 0x130
    9f8a:	movs	r2, #16
    9f8c:	blx	887c <memcmp@plt+0x4>
    9f90:	mov	r8, r0
    9f92:	cmp	r0, #0
    9f94:	bne.n	9f7a <_start@@Base+0xd26>
    9f96:	ldrd	r2, r3, [r6, #184]	; 0xb8
    9f9a:	cmp	r3, #0
    9f9c:	it	eq
    9f9e:	cmpeq	r2, #3
    9fa0:	bne.n	9fc8 <_start@@Base+0xd74>
    9fa2:	ldrb.w	r3, [r6, #196]	; 0xc4
    9fa6:	cbnz	r3, 9fc8 <_start@@Base+0xd74>
    9fa8:	add	r3, sp, #96	; 0x60
    9faa:	vmov	s17, r3
    9fae:	ldr.w	r3, [r6, #192]	; 0xc0
    9fb2:	cmp	r8, r3
    9fb4:	bcc.n	9fe4 <_start@@Base+0xd90>
    9fb6:	mov	r1, r7
    9fb8:	ldr	r2, [r6, #76]	; 0x4c
    9fba:	mov	r0, r9
    9fbc:	blx	8830 <memcpy@plt+0x4>
    9fc0:	ldr	r1, [r6, #76]	; 0x4c
    9fc2:	mov	r0, r9
    9fc4:	bl	9508 <_start@@Base+0x2b4>
    9fc8:	ldr.w	r3, [r5, #248]	; 0xf8
    9fcc:	ldr	r2, [sp, #40]	; 0x28
    9fce:	add	r9, r3
    9fd0:	subs	r2, r2, r3
    9fd2:	str	r2, [sp, #40]	; 0x28
    9fd4:	ldrd	r1, r2, [sp, #24]
    9fd8:	adds	r1, r1, r3
    9fda:	adc.w	r2, r2, #0
    9fde:	strd	r1, r2, [sp, #24]
    9fe2:	b.n	9f4e <_start@@Base+0xcfa>
    9fe4:	mov.w	r3, #4294967295	; 0xffffffff
    9fe8:	mov.w	r2, #4294967295	; 0xffffffff
    9fec:	vmov	r1, s17
    9ff0:	mov	r0, r6
    9ff2:	strd	r2, r3, [sp, #88]	; 0x58
    9ff6:	mov	r2, r8
    9ff8:	bl	94a0 <_start@@Base+0x24c>
    9ffc:	ldrb.w	r3, [sp, #104]	; 0x68
    a000:	cmp	r3, #228	; 0xe4
    a002:	bne.w	a118 <_start@@Base+0xec4>
    a006:	movs	r2, #0
    a008:	movs	r3, #0
    a00a:	mov	r0, r5
    a00c:	strd	r2, r3, [sp, #88]	; 0x58
    a010:	ldr.w	r2, [sp, #105]	; 0x69
    a014:	add	r3, sp, #80	; 0x50
    a016:	str	r3, [sp, #4]
    a018:	add	r3, sp, #88	; 0x58
    a01a:	str	r3, [sp, #0]
    a01c:	ldr.w	r3, [sp, #109]	; 0x6d
    a020:	bl	9b8c <_start@@Base+0x938>
    a024:	add.w	r3, r6, #197	; 0xc5
    a028:	movs	r2, #25
    a02a:	str	r3, [sp, #44]	; 0x2c
    a02c:	mla	r3, r2, r8, r3
    a030:	str	r3, [sp, #16]
    a032:	strd	r0, r1, [sp, #60]	; 0x3c
    a036:	ldrd	r0, r1, [sp, #80]	; 0x50
    a03a:	orrs.w	r3, r0, r1
    a03e:	bne.n	a08a <_start@@Base+0xe36>
    a040:	ldr	r3, [sp, #16]
    a042:	ldr.w	r1, [r3, #21]
    a046:	cmp	r1, #80	; 0x50
    a048:	beq.n	a08a <_start@@Base+0xe36>
    a04a:	ldr.w	r3, [r3, #17]
    a04e:	subs	r1, #80	; 0x50
    a050:	mov	ip, r8
    a052:	str	r2, [sp, #68]	; 0x44
    a054:	str	r3, [sp, #56]	; 0x38
    a056:	ldr.w	r3, [r6, #192]	; 0xc0
    a05a:	subs	r0, r3, #1
    a05c:	mla	r0, r2, r0, r7
    a060:	ldr.w	r0, [r0, #118]	; 0x76
    a064:	cmp	r3, ip
    a066:	bhi.n	a11e <_start@@Base+0xeca>
    a068:	add.w	r2, r0, #101	; 0x65
    a06c:	rsb	r3, r0, #80	; 0x50
    a070:	ldr	r0, [sp, #56]	; 0x38
    a072:	add	r1, r2
    a074:	add	r3, r0
    a076:	mov	r0, r6
    a078:	bl	1a810 <memmove_extent_buffer@@Base>
    a07c:	ldr	r1, [sp, #16]
    a07e:	movs	r3, #0
    a080:	movs	r2, #80	; 0x50
    a082:	strb	r3, [r1, #22]
    a084:	strb	r2, [r1, #21]
    a086:	strb	r3, [r1, #23]
    a088:	strb	r3, [r1, #24]
    a08a:	ldr	r3, [sp, #16]
    a08c:	mov.w	ip, #0
    a090:	ldr.w	r3, [r3, #17]
    a094:	add.w	r2, r3, #101	; 0x65
    a098:	add	r2, r7
    a09a:	ldr	r0, [r2, #24]
    a09c:	str.w	ip, [r2, #28]
    a0a0:	and.w	r0, r0, #39	; 0x27
    a0a4:	str	r0, [r2, #24]
    a0a6:	ldrd	r0, r1, [sp, #80]	; 0x50
    a0aa:	strb.w	ip, [r2, #46]	; 0x2e
    a0ae:	strb.w	ip, [r2, #47]	; 0x2f
    a0b2:	strd	r0, r1, [sp, #16]
    a0b6:	orrs	r1, r0
    a0b8:	ldr.w	r1, [r5, #256]	; 0x100
    a0bc:	ittt	eq
    a0be:	strbeq.w	ip, [r2, #45]	; 0x2d
    a0c2:	moveq	r0, #1
    a0c4:	strbeq.w	r0, [r2, #44]	; 0x2c
    a0c8:	add.w	r2, r3, #149	; 0x95
    a0cc:	add.w	ip, r7, r2
    a0d0:	str	r1, [r7, r2]
    a0d2:	ldr.w	r1, [r5, #260]	; 0x104
    a0d6:	str.w	r1, [ip, #4]
    a0da:	ldrd	r0, r1, [sp, #88]	; 0x58
    a0de:	adds	r1, #1
    a0e0:	iteee	eq
    a0e2:	cmpeq.w	r0, #4294967295	; 0xffffffff
    a0e6:	ldrne	r1, [sp, #60]	; 0x3c
    a0e8:	strne.w	r1, [ip, #8]
    a0ec:	ldrne	r1, [sp, #64]	; 0x40
    a0ee:	it	ne
    a0f0:	strne.w	r1, [ip, #12]
    a0f4:	ldrd	r0, r1, [sp, #16]
    a0f8:	orrs	r1, r0
    a0fa:	beq.n	a10a <_start@@Base+0xeb6>
    a0fc:	ldr	r1, [sp, #16]
    a0fe:	add	r3, r7
    a100:	str.w	r1, [r3, #189]	; 0xbd
    a104:	ldr	r1, [sp, #20]
    a106:	str.w	r1, [r3, #193]	; 0xc1
    a10a:	movs	r3, #16
    a10c:	add.w	r1, r5, #288	; 0x120
    a110:	add	r2, r3
    a112:	mov	r0, r6
    a114:	bl	1a7b4 <write_extent_buffer@@Base>
    a118:	add.w	r8, r8, #1
    a11c:	b.n	9fae <_start@@Base+0xd5a>
    a11e:	ldr	r2, [sp, #68]	; 0x44
    a120:	mov	lr, r2
    a122:	ldr	r2, [sp, #44]	; 0x2c
    a124:	mla	r2, lr, ip, r2
    a128:	add.w	ip, ip, #1
    a12c:	ldr.w	lr, [r2, #17]
    a130:	add	lr, r1
    a132:	str.w	lr, [r2, #17]
    a136:	b.n	a064 <_start@@Base+0xe10>
    a138:	mvn.w	r3, #11
    a13c:	b.n	9f18 <_start@@Base+0xcc4>
    a13e:	str	r3, [sp, #96]	; 0x60
    a140:	movs	r3, #0
    a142:	str	r3, [sp, #100]	; 0x64
    a144:	ldr	r3, [sp, #16]
    a146:	str	r3, [sp, #88]	; 0x58
    a148:	ldr	r3, [sp, #24]
    a14a:	str	r3, [sp, #92]	; 0x5c
    a14c:	ldrd	r0, r3, [sl, #16]
    a150:	adds	r0, r6, r0
    a152:	adc.w	r3, r7, r3
    a156:	cbnz	r2, a170 <_start@@Base+0xf1c>
    a158:	ldr.w	r2, [r5, #332]	; 0x14c
    a15c:	cbnz	r2, a170 <_start@@Base+0xf1c>
    a15e:	add	r2, sp, #88	; 0x58
    a160:	str	r2, [sp, #4]
    a162:	add	r2, sp, #96	; 0x60
    a164:	str	r2, [sp, #0]
    a166:	mov	r2, r0
    a168:	mov	r0, r5
    a16a:	bl	9b8c <_start@@Base+0x938>
    a16e:	mov	r3, r1
    a170:	strd	r0, r3, [sp]
    a174:	adds	r1, r4, r6
    a176:	ldr	r2, [sp, #96]	; 0x60
    a178:	vmov	r0, s16
    a17c:	str	r1, [sp, #40]	; 0x28
    a17e:	blx	8c5c <pwrite64@plt>
    a182:	ldrd	r8, r9, [sp, #96]	; 0x60
    a186:	asrs	r3, r0, #31
    a188:	mov	r2, r0
    a18a:	cmp	r3, r9
    a18c:	it	eq
    a18e:	cmpeq	r0, r8
    a190:	bne.w	a440 <_start@@Base+0x11ec>
    a194:	ldrd	r8, r9, [sp, #88]	; 0x58
    a198:	orrs.w	r1, r8, r9
    a19c:	ldr	r1, [sp, #40]	; 0x28
    a19e:	beq.n	a1ac <_start@@Base+0xf58>
    a1a0:	vmov	r0, s16
    a1a4:	strd	r8, r9, [sp]
    a1a8:	blx	8c5c <pwrite64@plt>
    a1ac:	ldrd	r2, r3, [sp, #96]	; 0x60
    a1b0:	mov.w	r9, r0, asr #31
    a1b4:	mov	r8, r0
    a1b6:	cmp	r9, r3
    a1b8:	it	eq
    a1ba:	cmpeq	r0, r2
    a1bc:	bne.w	a440 <_start@@Base+0x11ec>
    a1c0:	adds.w	r6, r8, r6
    a1c4:	ldr	r3, [sp, #76]	; 0x4c
    a1c6:	adc.w	r7, r9, r7
    a1ca:	subs	r0, r3, r0
    a1cc:	str	r0, [sp, #76]	; 0x4c
    a1ce:	ldr	r3, [sp, #76]	; 0x4c
    a1d0:	ldr.w	r2, [r5, #340]	; 0x154
    a1d4:	cmp	r3, #0
    a1d6:	bne.n	a13e <_start@@Base+0xeea>
    a1d8:	ldr.w	r3, [r5, #340]	; 0x154
    a1dc:	cbnz	r3, a1f6 <_start@@Base+0xfa2>
    a1de:	ldrd	r2, r3, [sl, #16]
    a1e2:	cmp	r3, #0
    a1e4:	it	eq
    a1e6:	cmpeq.w	r2, #65536	; 0x10000
    a1ea:	bne.n	a1f6 <_start@@Base+0xfa2>
    a1ec:	vmov	r0, s16
    a1f0:	mov	r1, r4
    a1f2:	bl	95f0 <_start@@Base+0x39c>
    a1f6:	ldr	r3, [sp, #32]
    a1f8:	cbz	r3, a206 <_start@@Base+0xfb2>
    a1fa:	ldr.w	r3, [r5, #328]	; 0x148
    a1fe:	cbnz	r3, a206 <_start@@Base+0xfb2>
    a200:	ldr	r3, [sp, #32]
    a202:	str.w	r3, [r5, #328]	; 0x148
    a206:	ldr.w	r3, [r5, #244]	; 0xf4
    a20a:	mov	r0, fp
    a20c:	subs	r3, #1
    a20e:	str.w	r3, [r5, #244]	; 0xf4
    a212:	blx	8708 <pthread_mutex_unlock@plt>
    a216:	ldr.w	r0, [sl, #32]
    a21a:	blx	87cc <free@plt+0x4>
    a21e:	mov	r0, sl
    a220:	blx	87cc <free@plt+0x4>
    a224:	mov	r0, fp
    a226:	add.w	r4, r5, #228	; 0xe4
    a22a:	blx	87f0 <pthread_mutex_lock@plt>
    a22e:	add.w	r6, r5, #168	; 0xa8
    a232:	ldr.w	r3, [r5, #248]	; 0xf8
    a236:	cmp	r3, #0
    a238:	beq.w	9d70 <_start@@Base+0xb1c>
    a23c:	ldr.w	sl, [r5, #228]	; 0xe4
    a240:	cmp	sl, r4
    a242:	beq.w	9d70 <_start@@Base+0xb1c>
    a246:	ldrd	r2, r3, [sl]
    a24a:	str	r3, [r2, #4]
    a24c:	str	r2, [r3, #0]
    a24e:	strd	sl, sl, [sl]
    a252:	ldr.w	r3, [r5, #320]	; 0x140
    a256:	cmp	r3, #1
    a258:	bne.w	9d8e <_start@@Base+0xb3a>
    a25c:	mov	r0, fp
    a25e:	mov.w	r3, #1048576	; 0x100000
    a262:	str	r3, [sp, #76]	; 0x4c
    a264:	blx	8708 <pthread_mutex_unlock@plt>
    a268:	ldrd	r2, r3, [sl, #32]
    a26c:	add	r1, sp, #76	; 0x4c
    a26e:	ldr	r0, [sp, #36]	; 0x24
    a270:	blx	886c <uncompress@plt>
    a274:	str	r0, [sp, #32]
    a276:	mov	r0, fp
    a278:	blx	87f0 <pthread_mutex_lock@plt>
    a27c:	ldr	r3, [sp, #32]
    a27e:	cmp	r3, #0
    a280:	beq.w	9d98 <_start@@Base+0xb44>
    a284:	ldr	r0, [pc, #552]	; (a4b0 <_start@@Base+0x125c>)
    a286:	mov	r1, r3
    a288:	add	r0, pc
    a28a:	bl	1a900 <__btrfs_error@@Base>
    a28e:	ldr	r4, [sp, #36]	; 0x24
    a290:	mvn.w	r3, #4
    a294:	str	r3, [sp, #32]
    a296:	ldr.w	r3, [r5, #340]	; 0x154
    a29a:	cmp	r3, #0
    a29c:	bne.w	a420 <_start@@Base+0x11cc>
    a2a0:	ldrd	r1, r2, [sl, #16]
    a2a4:	strd	r1, r2, [sp, #24]
    a2a8:	ldrd	r0, r1, [sp, #24]
    a2ac:	ldr.w	r2, [r5, #332]	; 0x14c
    a2b0:	cmp	r1, #0
    a2b2:	it	eq
    a2b4:	cmpeq.w	r0, #65536	; 0x10000
    a2b8:	bne.w	9f1c <_start@@Base+0xcc8>
    a2bc:	ldr	r1, [r4, #56]	; 0x38
    a2be:	str	r1, [sp, #40]	; 0x28
    a2c0:	ldr	r1, [r4, #60]	; 0x3c
    a2c2:	str	r1, [sp, #44]	; 0x2c
    a2c4:	addw	r1, r4, #811	; 0x32b
    a2c8:	cmp	r2, #0
    a2ca:	beq.w	9d9c <_start@@Base+0xb48>
    a2ce:	ldr	r0, [sp, #40]	; 0x28
    a2d0:	ldr	r2, [sp, #44]	; 0x2c
    a2d2:	ldr.w	r6, [r4, #144]	; 0x90
    a2d6:	str	r0, [r4, #56]	; 0x38
    a2d8:	orr.w	r2, r2, #2
    a2dc:	strb.w	r3, [r4, #811]	; 0x32b
    a2e0:	movs	r0, #1
    a2e2:	str	r2, [r4, #60]	; 0x3c
    a2e4:	movs	r2, #228	; 0xe4
    a2e6:	strb	r3, [r1, #2]
    a2e8:	strb	r3, [r1, #3]
    a2ea:	strb	r3, [r1, #4]
    a2ec:	strb	r3, [r1, #5]
    a2ee:	strb	r3, [r1, #6]
    a2f0:	strb	r3, [r1, #7]
    a2f2:	strb	r0, [r1, #1]
    a2f4:	strb.w	r2, [r4, #819]	; 0x333
    a2f8:	mov.w	r2, #4294967295	; 0xffffffff
    a2fc:	strb.w	r3, [r4, #820]	; 0x334
    a300:	strb.w	r3, [r4, #821]	; 0x335
    a304:	strb.w	r3, [r4, #822]	; 0x336
    a308:	strb.w	r3, [r4, #823]	; 0x337
    a30c:	strb.w	r3, [r4, #824]	; 0x338
    a310:	strb.w	r3, [r4, #825]	; 0x339
    a314:	strb.w	r3, [r4, #826]	; 0x33a
    a318:	strb.w	r3, [r4, #827]	; 0x33b
    a31c:	strb.w	r2, [r4, #828]	; 0x33c
    a320:	strb.w	r2, [r4, #829]	; 0x33d
    a324:	strb.w	r2, [r4, #830]	; 0x33e
    a328:	strb.w	r2, [r4, #831]	; 0x33f
    a32c:	strb.w	r2, [r4, #832]	; 0x340
    a330:	strb.w	r2, [r4, #833]	; 0x341
    a334:	strb.w	r2, [r4, #834]	; 0x342
    a338:	strb.w	r2, [r4, #835]	; 0x343
    a33c:	movs	r2, #2
    a33e:	strb.w	r3, [r4, #837]	; 0x345
    a342:	strb.w	r2, [r4, #836]	; 0x344
    a346:	strb.w	r3, [r4, #838]	; 0x346
    a34a:	ldr.w	r1, [r4, #201]	; 0xc9
    a34e:	strb.w	r2, [r4, #852]	; 0x354
    a352:	ldr.w	r2, [r4, #205]	; 0xcd
    a356:	strb.w	r3, [r4, #839]	; 0x347
    a35a:	strb.w	r3, [r4, #840]	; 0x348
    a35e:	strb.w	r3, [r4, #841]	; 0x349
    a362:	strb.w	r3, [r4, #842]	; 0x34a
    a366:	strb.w	r3, [r4, #843]	; 0x34b
    a36a:	strb.w	r3, [r4, #844]	; 0x34c
    a36e:	strb.w	r3, [r4, #845]	; 0x34d
    a372:	strb.w	r3, [r4, #847]	; 0x34f
    a376:	strb.w	r3, [r4, #848]	; 0x350
    a37a:	strb.w	r3, [r4, #849]	; 0x351
    a37e:	strb.w	r3, [r4, #850]	; 0x352
    a382:	strb.w	r3, [r4, #851]	; 0x353
    a386:	strb.w	r3, [r4, #853]	; 0x355
    a38a:	strb.w	r3, [r4, #854]	; 0x356
    a38e:	strb.w	r3, [r4, #855]	; 0x357
    a392:	strb.w	r3, [r4, #856]	; 0x358
    a396:	strb.w	r3, [r4, #857]	; 0x359
    a39a:	strb.w	r3, [r4, #858]	; 0x35a
    a39e:	strb.w	r3, [r4, #859]	; 0x35b
    a3a2:	strb.w	r3, [r4, #873]	; 0x369
    a3a6:	strb.w	r3, [r4, #874]	; 0x36a
    a3aa:	strb.w	r3, [r4, #875]	; 0x36b
    a3ae:	str.w	r1, [r4, #876]	; 0x36c
    a3b2:	addw	r1, r4, #283	; 0x11b
    a3b6:	str.w	r2, [r4, #880]	; 0x370
    a3ba:	add.w	r2, r4, #892	; 0x37c
    a3be:	strb.w	r0, [r4, #846]	; 0x34e
    a3c2:	str.w	r6, [r4, #860]	; 0x35c
    a3c6:	str.w	r6, [r4, #864]	; 0x360
    a3ca:	str.w	r6, [r4, #868]	; 0x364
    a3ce:	strb.w	r0, [r4, #872]	; 0x368
    a3d2:	strb.w	r3, [r4, #884]	; 0x374
    a3d6:	strb.w	r3, [r4, #885]	; 0x375
    a3da:	strb.w	r3, [r4, #886]	; 0x376
    a3de:	strb.w	r3, [r4, #887]	; 0x377
    a3e2:	strb.w	r3, [r4, #888]	; 0x378
    a3e6:	strb.w	r3, [r4, #889]	; 0x379
    a3ea:	strb.w	r3, [r4, #890]	; 0x37a
    a3ee:	strb.w	r3, [r4, #891]	; 0x37b
    a3f2:	addw	r3, r4, #267	; 0x10b
    a3f6:	ldr.w	r0, [r3], #4
    a3fa:	cmp	r3, r1
    a3fc:	str.w	r0, [r2], #4
    a400:	bne.n	a3f6 <_start@@Base+0x11a2>
    a402:	movs	r3, #0
    a404:	movs	r2, #97	; 0x61
    a406:	strb.w	r3, [r4, #161]	; 0xa1
    a40a:	strb.w	r2, [r4, #160]	; 0xa0
    a40e:	strb.w	r3, [r4, #162]	; 0xa2
    a412:	strb.w	r3, [r4, #163]	; 0xa3
    a416:	mov.w	r1, #4096	; 0x1000
    a41a:	mov	r0, r4
    a41c:	bl	9508 <_start@@Base+0x2b4>
    a420:	ldr.w	r3, [r5, #336]	; 0x150
    a424:	cbnz	r3, a464 <_start@@Base+0x1210>
    a426:	ldr	r3, [pc, #140]	; (a4b4 <_start@@Base+0x1260>)
    a428:	movs	r6, #0
    a42a:	mov	r7, r6
    a42c:	str	r6, [sp, #16]
    a42e:	add	r3, pc
    a430:	str	r6, [sp, #24]
    a432:	vmov	s17, r3
    a436:	ldr	r3, [pc, #128]	; (a4b8 <_start@@Base+0x1264>)
    a438:	add	r3, pc
    a43a:	vmov	s18, r3
    a43e:	b.n	a1ce <_start@@Base+0xf7a>
    a440:	cmp	r0, #0
    a442:	bge.n	a456 <_start@@Base+0x1202>
    a444:	vmov	r0, s18
    a448:	bl	1a900 <__btrfs_error@@Base>
    a44c:	blx	8bac <__errno_location@plt>
    a450:	ldr	r3, [r0, #0]
    a452:	str	r3, [sp, #32]
    a454:	b.n	a1ce <_start@@Base+0xf7a>
    a456:	vmov	r0, s17
    a45a:	bl	1a900 <__btrfs_error@@Base>
    a45e:	mvn.w	r3, #4
    a462:	b.n	a452 <_start@@Base+0x11fe>
    a464:	ldrd	r0, r1, [sl, #16]
    a468:	cmp	r1, #0
    a46a:	it	eq
    a46c:	cmpeq.w	r0, #65536	; 0x10000
    a470:	beq.w	a1d8 <_start@@Base+0xf84>
    a474:	ldr	r2, [sp, #76]	; 0x4c
    a476:	movs	r3, #0
    a478:	str	r3, [sp, #8]
    a47a:	strd	r2, r3, [sp]
    a47e:	mov	r2, r0
    a480:	mov	r3, r1
    a482:	ldr.w	r0, [r5, #348]	; 0x15c
    a486:	mov	r1, r4
    a488:	bl	1a47c <write_data_to_disk@@Base>
    a48c:	cmp	r0, #0
    a48e:	beq.w	a1d8 <_start@@Base+0xf84>
    a492:	ldr	r0, [pc, #40]	; (a4bc <_start@@Base+0x1268>)
    a494:	add	r0, pc
    a496:	bl	1a900 <__btrfs_error@@Base>
    a49a:	movs	r0, #1
    a49c:	blx	8b58 <exit@plt>
    a4a0:	ands.w	r0, r2, #5
    a4a4:	lsls	r4, r7, #9
    a4a6:	movs	r0, r0
    a4a8:	adds	r2, #213	; 0xd5
    a4aa:	movs	r3, r0
    a4ac:	adds	r1, #90	; 0x5a
    a4ae:	movs	r3, r0
    a4b0:	cmp	r5, #195	; 0xc3
    a4b2:	movs	r3, r0
    a4b4:	cmp	r4, #118	; 0x76
    a4b6:	movs	r3, r0
    a4b8:	cmp	r4, #78	; 0x4e
    a4ba:	movs	r3, r0
    a4bc:	cmp	r4, #28
    a4be:	movs	r3, r0
    a4c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a4c4:	mov	r4, r0
    a4c6:	vpush	{d8}
    a4ca:	mov	r5, r1
    a4cc:	ldr.w	r2, [pc, #1420]	; aa5c <_start@@Base+0x1808>
    a4d0:	ldr.w	r3, [pc, #1420]	; aa60 <_start@@Base+0x180c>
    a4d4:	add	r2, pc
    a4d6:	sub	sp, #76	; 0x4c
    a4d8:	ldr	r3, [r2, r3]
    a4da:	ldr	r3, [r3, #0]
    a4dc:	str	r3, [sp, #68]	; 0x44
    a4de:	mov.w	r3, #0
    a4e2:	add.w	r3, r0, #1280	; 0x500
    a4e6:	ldrd	sl, fp, [r3]
    a4ea:	orrs.w	r3, sl, fp
    a4ee:	beq.w	a8b2 <_start@@Base+0x165e>
    a4f2:	movs	r1, #48	; 0x30
    a4f4:	movs	r0, #1
    a4f6:	blx	8718 <calloc@plt+0x4>
    a4fa:	mov	r6, r0
    a4fc:	cbz	r0, a526 <_start@@Base+0x12d2>
    a4fe:	add.w	r3, r4, #1272	; 0x4f8
    a502:	strd	sl, fp, [r0, #24]
    a506:	str.w	sl, [r0, #36]	; 0x24
    a50a:	vmov	s17, sl
    a50e:	ldrd	r8, r9, [r3]
    a512:	strd	r8, r9, [r0, #16]
    a516:	mov	r0, sl
    a518:	blx	8a94 <malloc@plt+0x4>
    a51c:	str	r0, [r6, #32]
    a51e:	cbnz	r0, a52c <_start@@Base+0x12d8>
    a520:	mov	r0, r6
    a522:	blx	87cc <free@plt+0x4>
    a526:	mvn.w	r5, #11
    a52a:	b.n	a6f2 <_start@@Base+0x149e>
    a52c:	ldr.w	r3, [r4, #1296]	; 0x510
    a530:	cmp	r3, #0
    a532:	beq.n	a5d4 <_start@@Base+0x1380>
    a534:	ldr	r3, [r4, #0]
    a536:	mov	r2, r8
    a538:	movs	r7, #1
    a53a:	ldr.w	r3, [r3, #464]	; 0x1d0
    a53e:	strd	sl, fp, [sp]
    a542:	vmov	s16, r3
    a546:	mov	r3, r9
    a548:	vmov	r0, s16
    a54c:	bl	2ca3c <btrfs_num_copies@@Base>
    a550:	mov	r2, r8
    a552:	mov	r3, r9
    a554:	movs	r1, #0
    a556:	strd	sl, fp, [sp, #8]
    a55a:	str	r1, [sp, #16]
    a55c:	add	r1, sp, #48	; 0x30
    a55e:	str	r1, [sp, #32]
    a560:	str	r0, [sp, #28]
    a562:	ldr	r1, [sp, #28]
    a564:	cmp	r1, r7
    a566:	bge.n	a5c8 <_start@@Base+0x1374>
    a568:	ldrd	r2, r3, [sp, #8]
    a56c:	orrs	r3, r2
    a56e:	beq.n	a5d4 <_start@@Base+0x1380>
    a570:	ldr	r0, [r6, #32]
    a572:	blx	87cc <free@plt+0x4>
    a576:	mov	r0, r6
    a578:	blx	87cc <free@plt+0x4>
    a57c:	mvn.w	r5, #4
    a580:	b.n	a6f2 <_start@@Base+0x149e>
    a582:	ldrd	r0, r1, [sp, #8]
    a586:	strd	r3, r2, [sp, #36]	; 0x24
    a58a:	strd	r0, r1, [sp, #48]	; 0x30
    a58e:	ldr	r0, [sp, #32]
    a590:	ldr	r1, [r6, #32]
    a592:	str	r7, [sp, #4]
    a594:	str	r0, [sp, #0]
    a596:	ldr	r0, [sp, #16]
    a598:	add	r1, r0
    a59a:	vmov	r0, s16
    a59e:	bl	1f830 <read_extent_data@@Base>
    a5a2:	ldrd	r3, r2, [sp, #36]	; 0x24
    a5a6:	cmp	r0, #0
    a5a8:	blt.n	a5d0 <_start@@Base+0x137c>
    a5aa:	ldrd	r1, ip, [sp, #48]	; 0x30
    a5ae:	ldr	r0, [sp, #16]
    a5b0:	adds	r0, r0, r1
    a5b2:	str	r0, [sp, #16]
    a5b4:	ldr	r0, [sp, #8]
    a5b6:	adds	r2, r2, r1
    a5b8:	adc.w	r3, ip, r3
    a5bc:	subs	r1, r0, r1
    a5be:	str	r1, [sp, #8]
    a5c0:	ldr	r1, [sp, #12]
    a5c2:	sbc.w	r1, r1, ip
    a5c6:	str	r1, [sp, #12]
    a5c8:	ldrd	r0, r1, [sp, #8]
    a5cc:	orrs	r1, r0
    a5ce:	bne.n	a582 <_start@@Base+0x132e>
    a5d0:	adds	r7, #1
    a5d2:	b.n	a562 <_start@@Base+0x130e>
    a5d4:	cmp.w	r9, #0
    a5d8:	it	eq
    a5da:	cmpeq.w	r8, #65536	; 0x10000
    a5de:	bne.n	a60e <_start@@Base+0x13ba>
    a5e0:	ldr	r3, [r4, #0]
    a5e2:	vmov	r2, s17
    a5e6:	ldr.w	r3, [r3, #464]	; 0x1d0
    a5ea:	ldr.w	r3, [r3, #352]	; 0x160
    a5ee:	ldr	r3, [r3, #72]	; 0x48
    a5f0:	strd	r8, r9, [sp]
    a5f4:	ldr	r1, [r6, #32]
    a5f6:	ldr	r0, [r3, #24]
    a5f8:	blx	8a2c <pread64@plt>
    a5fc:	asrs	r1, r0, #31
    a5fe:	cmp	r1, fp
    a600:	it	eq
    a602:	cmpeq	r0, sl
    a604:	bcc.n	a6d2 <_start@@Base+0x147e>
    a606:	mov.w	sl, #0
    a60a:	mov.w	fp, #0
    a60e:	strd	sl, fp, [sp, #16]
    a612:	mov	sl, r8
    a614:	mov	fp, r9
    a616:	movs	r3, #0
    a618:	str	r3, [sp, #32]
    a61a:	add	r3, sp, #48	; 0x30
    a61c:	str	r3, [sp, #40]	; 0x28
    a61e:	ldr.w	r9, [r4, #1296]	; 0x510
    a622:	cmp.w	r9, #0
    a626:	beq.w	a850 <_start@@Base+0x15fc>
    a62a:	add.w	r3, r4, #1272	; 0x4f8
    a62e:	mov.w	r0, #4294967295	; 0xffffffff
    a632:	mov.w	r1, #4294967295	; 0xffffffff
    a636:	strd	r0, r1, [r3]
    a63a:	add.w	r3, r4, #1280	; 0x500
    a63e:	movs	r0, #0
    a640:	movs	r1, #0
    a642:	strd	r0, r1, [r3]
    a646:	addw	r7, r4, #1164	; 0x48c
    a64a:	mov	r0, r7
    a64c:	blx	87f0 <pthread_mutex_lock@plt>
    a650:	cbz	r6, a696 <_start@@Base+0x1442>
    a652:	ldr.w	r2, [r4, #1256]	; 0x4e8
    a656:	add.w	r3, r6, #8
    a65a:	addw	r1, r4, #1252	; 0x4e4
    a65e:	str.w	r3, [r4, #1256]	; 0x4e8
    a662:	strd	r1, r2, [r6, #8]
    a666:	str	r3, [r2, #0]
    a668:	ldr.w	r3, [r4, #1260]	; 0x4ec
    a66c:	adds	r3, #1
    a66e:	str.w	r3, [r4, #1260]	; 0x4ec
    a672:	ldr.w	r3, [r4, #1288]	; 0x508
    a676:	cmp	r3, #0
    a678:	ble.w	a8bc <_start@@Base+0x1668>
    a67c:	ldr.w	r3, [r4, #1248]	; 0x4e0
    a680:	addw	r2, r4, #1244	; 0x4dc
    a684:	str.w	r6, [r4, #1248]	; 0x4e0
    a688:	add.w	r0, r4, #1192	; 0x4a8
    a68c:	strd	r2, r3, [r6]
    a690:	str	r6, [r3, #0]
    a692:	blx	8dfc <pthread_cond_signal@plt>
    a696:	ldr.w	r3, [r4, #1260]	; 0x4ec
    a69a:	cmp	r3, #82	; 0x52
    a69c:	bhi.n	a6a4 <_start@@Base+0x1450>
    a69e:	cmp	r5, #0
    a6a0:	beq.w	a95e <_start@@Base+0x170a>
    a6a4:	ldr.w	r3, [r4, #1252]	; 0x4e4
    a6a8:	addw	r8, r4, #1252	; 0x4e4
    a6ac:	cmp	r8, r3
    a6ae:	beq.w	aa0e <_start@@Base+0x17ba>
    a6b2:	add	r6, sp, #48	; 0x30
    a6b4:	mov.w	r9, #0
    a6b8:	ldr.w	r2, [r4, #1260]	; 0x4ec
    a6bc:	ldr.w	r3, [r4, #1264]	; 0x4f0
    a6c0:	cmp	r2, r3
    a6c2:	bhi.w	a8c8 <_start@@Base+0x1674>
    a6c6:	ldr.w	r3, [r4, #1252]	; 0x4e4
    a6ca:	movs	r2, #0
    a6cc:	movs	r5, #12
    a6ce:	subs	r3, #8
    a6d0:	b.n	a91c <_start@@Base+0x16c8>
    a6d2:	ldr	r0, [r6, #32]
    a6d4:	blx	87cc <free@plt+0x4>
    a6d8:	mov	r0, r6
    a6da:	blx	87cc <free@plt+0x4>
    a6de:	ldr	r0, [pc, #900]	; (aa64 <_start@@Base+0x1810>)
    a6e0:	mov	r2, r8
    a6e2:	mov	r3, r9
    a6e4:	add	r0, pc
    a6e6:	bl	1a900 <__btrfs_error@@Base>
    a6ea:	blx	8bac <__errno_location@plt>
    a6ee:	ldr	r5, [r0, #0]
    a6f0:	negs	r5, r5
    a6f2:	ldr	r2, [pc, #884]	; (aa68 <_start@@Base+0x1814>)
    a6f4:	ldr	r3, [pc, #872]	; (aa60 <_start@@Base+0x180c>)
    a6f6:	add	r2, pc
    a6f8:	ldr	r3, [r2, r3]
    a6fa:	ldr	r2, [r3, #0]
    a6fc:	ldr	r3, [sp, #68]	; 0x44
    a6fe:	eors	r2, r3
    a700:	beq.w	aa40 <_start@@Base+0x17ec>
    a704:	blx	88e4 <__stack_chk_fail@plt>
    a708:	ldr	r3, [r6, #32]
    a70a:	ldr	r2, [sp, #32]
    a70c:	add.w	r8, r3, r2
    a710:	add.w	r3, r7, #96	; 0x60
    a714:	ldr	r2, [r7, #76]	; 0x4c
    a716:	mov	r1, r3
    a718:	mov	r0, r8
    a71a:	str	r3, [sp, #36]	; 0x24
    a71c:	blx	8830 <memcpy@plt+0x4>
    a720:	ldrd	r2, r3, [r7, #40]	; 0x28
    a724:	cmp	r3, #0
    a726:	it	eq
    a728:	cmpeq.w	r2, #65536	; 0x10000
    a72c:	beq.n	a78a <_start@@Base+0x1536>
    a72e:	ldr.w	r0, [r7, #192]	; 0xc0
    a732:	cbnz	r0, a744 <_start@@Base+0x14f0>
    a734:	ldr	r2, [r7, #76]	; 0x4c
    a736:	mov	r1, r0
    a738:	add.w	r0, r8, #101	; 0x65
    a73c:	subs	r2, #101	; 0x65
    a73e:	blx	8bf8 <memset@plt+0x4>
    a742:	b.n	a782 <_start@@Base+0x152e>
    a744:	ldrb.w	r1, [r7, #196]	; 0xc4
    a748:	cmp	r1, #0
    a74a:	bne.n	a840 <_start@@Base+0x15ec>
    a74c:	ldr	r2, [sp, #36]	; 0x24
    a74e:	mov.w	ip, #25
    a752:	mul.w	r3, ip, r0
    a756:	subs	r0, #1
    a758:	mla	r0, ip, r0, r2
    a75c:	ldr.w	r2, [r0, #118]	; 0x76
    a760:	add.w	r0, r3, #101	; 0x65
    a764:	add	r0, r8
    a766:	subs	r2, r2, r3
    a768:	blx	8bf8 <memset@plt+0x4>
    a76c:	str	r7, [sp, #28]
    a76e:	ldr.w	r3, [r7, #192]	; 0xc0
    a772:	str	r3, [sp, #44]	; 0x2c
    a774:	add.w	r3, r4, #1240	; 0x4d8
    a778:	vmov	s16, r3
    a77c:	ldr	r3, [sp, #44]	; 0x2c
    a77e:	cmp	r3, r9
    a780:	bne.n	a7b6 <_start@@Base+0x1562>
    a782:	ldr	r1, [r7, #76]	; 0x4c
    a784:	mov	r0, r8
    a786:	bl	9508 <_start@@Base+0x2b4>
    a78a:	mov	r0, r7
    a78c:	bl	1a0a4 <free_extent_buffer@@Base>
    a790:	ldr	r3, [sp, #8]
    a792:	ldr	r2, [sp, #8]
    a794:	adds.w	sl, sl, r3
    a798:	ldr	r3, [sp, #12]
    a79a:	adc.w	fp, fp, r3
    a79e:	ldr	r3, [sp, #32]
    a7a0:	add	r3, r2
    a7a2:	str	r3, [sp, #32]
    a7a4:	ldr	r3, [sp, #16]
    a7a6:	subs	r3, r3, r2
    a7a8:	ldr	r2, [sp, #12]
    a7aa:	str	r3, [sp, #16]
    a7ac:	ldr	r3, [sp, #20]
    a7ae:	sbc.w	r3, r3, r2
    a7b2:	str	r3, [sp, #20]
    a7b4:	b.n	a61e <_start@@Base+0x13ca>
    a7b6:	ldr	r1, [sp, #40]	; 0x28
    a7b8:	mov	r2, r9
    a7ba:	mov	r0, r7
    a7bc:	bl	94a0 <_start@@Base+0x24c>
    a7c0:	ldrb.w	r3, [sp, #56]	; 0x38
    a7c4:	cmp	r3, #120	; 0x78
    a7c6:	bne.n	a7de <_start@@Base+0x158a>
    a7c8:	ldr	r3, [sp, #28]
    a7ca:	movs	r1, #0
    a7cc:	ldr.w	r0, [r3, #214]	; 0xd6
    a7d0:	ldr.w	r2, [r3, #218]	; 0xda
    a7d4:	adds	r0, #101	; 0x65
    a7d6:	add	r0, r8
    a7d8:	blx	8bf8 <memset@plt+0x4>
    a7dc:	b.n	a80c <_start@@Base+0x15b8>
    a7de:	ldr.w	r0, [r4, #1300]	; 0x514
    a7e2:	cbz	r0, a81c <_start@@Base+0x15c8>
    a7e4:	cmp	r3, #84	; 0x54
    a7e6:	beq.n	a7f2 <_start@@Base+0x159e>
    a7e8:	bhi.n	a818 <_start@@Base+0x15c4>
    a7ea:	cmp	r3, #13
    a7ec:	bhi.n	a808 <_start@@Base+0x15b4>
    a7ee:	cmp	r3, #11
    a7f0:	bls.n	a80c <_start@@Base+0x15b8>
    a7f2:	ldr	r3, [sp, #40]	; 0x28
    a7f4:	mov	r2, r8
    a7f6:	vmov	r1, s16
    a7fa:	str.w	r9, [sp, #4]
    a7fe:	str	r3, [sp, #0]
    a800:	mov	r3, r7
    a802:	bl	cae4 <sanitize_name@@Base>
    a806:	b.n	a80c <_start@@Base+0x15b8>
    a808:	cmp	r3, #24
    a80a:	beq.n	a7f2 <_start@@Base+0x159e>
    a80c:	ldr	r3, [sp, #28]
    a80e:	add.w	r9, r9, #1
    a812:	adds	r3, #25
    a814:	str	r3, [sp, #28]
    a816:	b.n	a77c <_start@@Base+0x1528>
    a818:	cmp	r3, #96	; 0x60
    a81a:	beq.n	a7f2 <_start@@Base+0x159e>
    a81c:	cmp	r3, #108	; 0x6c
    a81e:	bne.n	a80c <_start@@Base+0x15b8>
    a820:	ldr	r2, [sp, #28]
    a822:	ldr	r3, [sp, #28]
    a824:	ldr.w	r0, [r2, #214]	; 0xd6
    a828:	adds	r3, #197	; 0xc5
    a82a:	ldr	r2, [sp, #36]	; 0x24
    a82c:	add	r2, r0
    a82e:	ldrb.w	r1, [r2, #121]	; 0x79
    a832:	cmp	r1, #0
    a834:	bne.n	a80c <_start@@Base+0x15b8>
    a836:	ldr.w	r2, [r3, #21]
    a83a:	adds	r0, #122	; 0x7a
    a83c:	subs	r2, #21
    a83e:	b.n	a7d6 <_start@@Base+0x1582>
    a840:	ldr	r2, [r7, #76]	; 0x4c
    a842:	add.w	r0, r0, r0, lsl #5
    a846:	adds	r0, #101	; 0x65
    a848:	movs	r1, #0
    a84a:	subs	r2, r2, r0
    a84c:	add	r0, r8
    a84e:	b.n	a73e <_start@@Base+0x14ea>
    a850:	ldrd	r2, r3, [sp, #16]
    a854:	orrs	r3, r2
    a856:	beq.w	a62a <_start@@Base+0x13d6>
    a85a:	ldr	r3, [r4, #0]
    a85c:	ldr.w	r0, [r3, #464]	; 0x1d0
    a860:	ldr.w	r3, [r0, #384]	; 0x180
    a864:	strd	r3, r9, [sp, #8]
    a868:	ldrd	r2, r3, [sp, #16]
    a86c:	ldrd	r7, r8, [sp, #8]
    a870:	cmp	r3, r8
    a872:	it	eq
    a874:	cmpeq	r2, r7
    a876:	it	cc
    a878:	strdcc	r2, r3, [sp, #8]
    a87c:	movs	r2, #0
    a87e:	movs	r3, #0
    a880:	strd	r2, r3, [sp]
    a884:	mov	r2, sl
    a886:	mov	r3, fp
    a888:	bl	20b0c <read_tree_block@@Base>
    a88c:	mov	r7, r0
    a88e:	bl	9a9e <_start@@Base+0x84a>
    a892:	cmp	r0, #0
    a894:	bne.w	a708 <_start@@Base+0x14b4>
    a898:	ldr	r0, [r6, #32]
    a89a:	blx	87cc <free@plt+0x4>
    a89e:	mov	r0, r6
    a8a0:	blx	87cc <free@plt+0x4>
    a8a4:	ldr	r0, [pc, #452]	; (aa6c <_start@@Base+0x1818>)
    a8a6:	mov	r2, sl
    a8a8:	mov	r3, fp
    a8aa:	add	r0, pc
    a8ac:	bl	1a900 <__btrfs_error@@Base>
    a8b0:	b.n	a57c <_start@@Base+0x1328>
    a8b2:	cmp	r1, #0
    a8b4:	beq.w	a6f2 <_start@@Base+0x149e>
    a8b8:	movs	r6, #0
    a8ba:	b.n	a646 <_start@@Base+0x13f2>
    a8bc:	ldr.w	r3, [r4, #1264]	; 0x4f0
    a8c0:	adds	r3, #1
    a8c2:	str.w	r3, [r4, #1264]	; 0x4f0
    a8c6:	b.n	a696 <_start@@Base+0x1442>
    a8c8:	ldr	r3, [pc, #396]	; (aa58 <_start@@Base+0x1804>)
    a8ca:	mov	r0, r7
    a8cc:	str.w	r9, [sp, #48]	; 0x30
    a8d0:	str	r3, [sp, #52]	; 0x34
    a8d2:	blx	8708 <pthread_mutex_unlock@plt>
    a8d6:	movs	r1, #0
    a8d8:	mov	r0, r6
    a8da:	blx	87fc <nanosleep@plt>
    a8de:	mov	r0, r7
    a8e0:	blx	87f0 <pthread_mutex_lock@plt>
    a8e4:	ldr.w	r5, [r4, #1304]	; 0x518
    a8e8:	cmp	r5, #0
    a8ea:	beq.w	a6b8 <_start@@Base+0x1464>
    a8ee:	blx	8bac <__errno_location@plt>
    a8f2:	negs	r3, r5
    a8f4:	str	r3, [r0, #0]
    a8f6:	ldr	r0, [pc, #376]	; (aa70 <_start@@Base+0x181c>)
    a8f8:	add	r0, pc
    a8fa:	bl	1a900 <__btrfs_error@@Base>
    a8fe:	b.n	a94e <_start@@Base+0x16fa>
    a900:	mla	r1, r5, r2, r4
    a904:	ldrd	r0, r6, [r3, #16]
    a908:	adds	r2, #1
    a90a:	str.w	r0, [r1, #29]
    a90e:	str.w	r6, [r1, #33]	; 0x21
    a912:	ldr	r0, [r3, #36]	; 0x24
    a914:	str.w	r0, [r1, #37]	; 0x25
    a918:	ldr	r3, [r3, #8]
    a91a:	subs	r3, #8
    a91c:	add.w	r1, r3, #8
    a920:	cmp	r8, r1
    a922:	bne.n	a900 <_start@@Base+0x16ac>
    a924:	str	r2, [r4, #24]
    a926:	add.w	r0, r4, #8
    a92a:	ldr	r3, [r4, #4]
    a92c:	movs	r2, #1
    a92e:	mov.w	r1, #1024	; 0x400
    a932:	blx	89b0 <fwrite@plt>
    a936:	cmp	r0, #1
    a938:	beq.n	a966 <_start@@Base+0x1712>
    a93a:	ldr	r0, [pc, #312]	; (aa74 <_start@@Base+0x1820>)
    a93c:	add	r0, pc
    a93e:	bl	1a900 <__btrfs_error@@Base>
    a942:	blx	8bac <__errno_location@plt>
    a946:	ldr	r5, [r0, #0]
    a948:	negs	r5, r5
    a94a:	cmp	r5, #0
    a94c:	beq.n	aa16 <_start@@Base+0x17c2>
    a94e:	blx	8bac <__errno_location@plt>
    a952:	negs	r3, r5
    a954:	str	r3, [r0, #0]
    a956:	ldr	r0, [pc, #288]	; (aa78 <_start@@Base+0x1824>)
    a958:	add	r0, pc
    a95a:	bl	1a900 <__btrfs_error@@Base>
    a95e:	mov	r0, r7
    a960:	blx	8708 <pthread_mutex_unlock@plt>
    a964:	b.n	a6f2 <_start@@Base+0x149e>
    a966:	ldrd	r3, r2, [r4, #16]
    a96a:	movs	r5, #0
    a96c:	mov	r9, r0
    a96e:	adds.w	sl, r3, #1024	; 0x400
    a972:	ldr	r3, [pc, #264]	; (aa7c <_start@@Base+0x1828>)
    a974:	adc.w	fp, r2, #0
    a978:	add	r3, pc
    a97a:	vmov	s17, r3
    a97e:	ldr.w	r6, [r4, #1252]	; 0x4e4
    a982:	cmp	r8, r6
    a984:	bne.n	a9b8 <_start@@Base+0x1764>
    a986:	cmp	r5, #0
    a988:	bne.n	a94e <_start@@Base+0x16fa>
    a98a:	ubfx	r2, sl, #0, #10
    a98e:	mov	r3, r5
    a990:	orrs	r3, r2
    a992:	beq.n	aa16 <_start@@Base+0x17c2>
    a994:	ldr	r0, [pc, #232]	; (aa80 <_start@@Base+0x182c>)
    a996:	rsb	r1, r2, #1024	; 0x400
    a99a:	adds.w	sl, sl, r1
    a99e:	ldr	r3, [r4, #4]
    a9a0:	add	r0, pc
    a9a2:	mov.w	r2, #1
    a9a6:	adc.w	fp, fp, #0
    a9aa:	blx	89b0 <fwrite@plt>
    a9ae:	cmp	r0, #1
    a9b0:	beq.n	aa16 <_start@@Base+0x17c2>
    a9b2:	ldr	r0, [pc, #208]	; (aa84 <_start@@Base+0x1830>)
    a9b4:	add	r0, pc
    a9b6:	b.n	a93e <_start@@Base+0x16ea>
    a9b8:	sub.w	r3, r6, #8
    a9bc:	vmov	s16, r3
    a9c0:	ldrd	r2, r3, [r6]
    a9c4:	str	r3, [r2, #4]
    a9c6:	str	r2, [r3, #0]
    a9c8:	ldr	r1, [r6, #28]
    a9ca:	strd	r6, r6, [r6]
    a9ce:	adds.w	sl, sl, r1
    a9d2:	adc.w	fp, fp, #0
    a9d6:	cbnz	r5, a9e4 <_start@@Base+0x1790>
    a9d8:	ldr	r3, [r4, #4]
    a9da:	movs	r2, #1
    a9dc:	ldr	r0, [r6, #24]
    a9de:	blx	89b0 <fwrite@plt>
    a9e2:	mov	r9, r0
    a9e4:	cmp.w	r9, #1
    a9e8:	beq.n	a9fe <_start@@Base+0x17aa>
    a9ea:	vmov	r0, s17
    a9ee:	mov.w	r9, #0
    a9f2:	bl	1a900 <__btrfs_error@@Base>
    a9f6:	blx	8bac <__errno_location@plt>
    a9fa:	ldr	r5, [r0, #0]
    a9fc:	negs	r5, r5
    a9fe:	ldr	r0, [r6, #24]
    aa00:	blx	87cc <free@plt+0x4>
    aa04:	vmov	r0, s16
    aa08:	blx	87cc <free@plt+0x4>
    aa0c:	b.n	a97e <_start@@Base+0x172a>
    aa0e:	mov.w	sl, #0
    aa12:	mov.w	fp, #0
    aa16:	add	r3, pc, #56	; (adr r3, aa50 <_start@@Base+0x17fc>)
    aa18:	ldrd	r2, r3, [r3]
    aa1c:	movs	r5, #0
    aa1e:	strd	sl, fp, [r4, #16]
    aa22:	str.w	r5, [r4, #1260]	; 0x4ec
    aa26:	strd	r2, r3, [r4, #8]
    aa2a:	ldr.w	r3, [r4, #1288]	; 0x508
    aa2e:	str.w	r5, [r4, #1264]	; 0x4f0
    aa32:	cmp	r3, r5
    aa34:	str	r5, [r4, #24]
    aa36:	ite	le
    aa38:	movle	r3, #0
    aa3a:	movgt	r3, #1
    aa3c:	strb	r3, [r4, #28]
    aa3e:	b.n	a95e <_start@@Base+0x170a>
    aa40:	mov	r0, r5
    aa42:	add	sp, #76	; 0x4c
    aa44:	vpop	{d8}
    aa48:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    aa4c:	nop.w
    aa50:	str	r3, [r1, #104]	; 0x68
    aa52:	strb	r5, [r2, #10]
    aa54:	movs	r5, #226	; 0xe2
    aa56:	pop	{r2, r3, r4, r6, pc}
    aa58:	str	r6, [sp, #512]	; 0x200
    aa5a:	lsls	r0, r3, #2
    aa5c:			; <UNDEFINED> instruction: 0xe85c0005
    aa60:	lsls	r4, r7, #9
    aa62:	movs	r0, r0
    aa64:	cmp	r1, #225	; 0xe1
    aa66:	movs	r3, r0
    aa68:	b.n	a6e0 <_start@@Base+0x148c>
    aa6a:	movs	r5, r0
    aa6c:	cmp	r0, #65	; 0x41
    aa6e:	movs	r3, r0
    aa70:	cmp	r0, #112	; 0x70
    aa72:	movs	r3, r0
    aa74:	movs	r7, #210	; 0xd2
    aa76:	movs	r3, r0
    aa78:	movs	r7, #244	; 0xf4
    aa7a:	movs	r3, r0
    aa7c:	movs	r7, #150	; 0x96
    aa7e:	movs	r3, r0
    aa80:	ldrb.w	r0, [sp, #5]
    aa84:	movs	r7, #122	; 0x7a
    aa86:	movs	r3, r0
    aa88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    aa8c:	sub	sp, #20
    aa8e:	mov	fp, r2
    aa90:	mov	r4, r0
    aa92:	ldr.w	sl, [sp, #56]	; 0x38
    aa96:	mov	r5, r1
    aa98:	ldr	r2, [sp, #60]	; 0x3c
    aa9a:	str	r3, [sp, #12]
    aa9c:	ldr.w	r3, [sl, #1296]	; 0x510
    aaa0:	cmp	r3, r2
    aaa2:	bne.n	aada <_start@@Base+0x1886>
    aaa4:	ldr.w	r3, [sl, #1280]	; 0x500
    aaa8:	mov.w	r0, #262144	; 0x40000
    aaac:	ldr	r1, [sp, #12]
    aaae:	ldr.w	r2, [sl, #1284]	; 0x504
    aab2:	adds.w	r8, r3, fp
    aab6:	adc.w	r9, r2, r1
    aaba:	movs	r1, #0
    aabc:	cmp	r1, r9
    aabe:	it	eq
    aac0:	cmpeq	r0, r8
    aac2:	bcc.n	aada <_start@@Base+0x1886>
    aac4:	ldr.w	r1, [sl, #1272]	; 0x4f8
    aac8:	ldr.w	r0, [sl, #1276]	; 0x4fc
    aacc:	adds	r6, r3, r1
    aace:	adc.w	r7, r2, r0
    aad2:	cmp	r7, r5
    aad4:	it	eq
    aad6:	cmpeq	r6, r4
    aad8:	beq.n	aaec <_start@@Base+0x1898>
    aada:	movs	r1, #0
    aadc:	mov	r0, sl
    aade:	bl	a4c0 <_start@@Base+0x126c>
    aae2:	cbnz	r0, ab26 <_start@@Base+0x18d2>
    aae4:	add.w	r3, sl, #1272	; 0x4f8
    aae8:	strd	r4, r5, [r3]
    aaec:	ldr.w	r1, [sl]
    aaf0:	movs	r2, #0
    aaf2:	movs	r3, #0
    aaf4:	strd	r2, r3, [sp]
    aaf8:	mov	r2, r4
    aafa:	mov	r3, r5
    aafc:	ldr.w	r0, [r1, #464]	; 0x1d0
    ab00:	bl	209bc <readahead_tree_block@@Base>
    ab04:	ldr.w	r2, [sl, #1280]	; 0x500
    ab08:	ldr.w	r3, [sl, #1284]	; 0x504
    ab0c:	ldr	r0, [sp, #12]
    ab0e:	adds.w	r2, r2, fp
    ab12:	str.w	r2, [sl, #1280]	; 0x500
    ab16:	adc.w	r0, r3, r0
    ab1a:	ldr	r3, [sp, #60]	; 0x3c
    ab1c:	str.w	r0, [sl, #1284]	; 0x504
    ab20:	movs	r0, #0
    ab22:	str.w	r3, [sl, #1296]	; 0x510
    ab26:	add	sp, #20
    ab28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ab2c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ab30:	mov	r7, r2
    ab32:	vpush	{d8}
    ab36:	mov	r8, r3
    ab38:	ldr	r2, [pc, #304]	; (ac6c <_start@@Base+0x1a18>)
    ab3a:	mov	r6, r0
    ab3c:	ldr	r3, [pc, #304]	; (ac70 <_start@@Base+0x1a1c>)
    ab3e:	mov	r4, r1
    ab40:	add	r2, pc
    ab42:	ldr.w	r9, [r0, #464]	; 0x1d0
    ab46:	sub	sp, #44	; 0x2c
    ab48:	ldr	r3, [r2, r3]
    ab4a:	ldr	r3, [r3, #0]
    ab4c:	str	r3, [sp, #36]	; 0x24
    ab4e:	mov.w	r3, #0
    ab52:	ldr.w	r2, [r9, #384]	; 0x180
    ab56:	movs	r3, #0
    ab58:	strd	r7, r3, [sp]
    ab5c:	ldr.w	r0, [r1, #144]	; 0x90
    ab60:	ldr.w	r1, [r1, #148]	; 0x94
    ab64:	bl	aa88 <_start@@Base+0x1834>
    ab68:	mov	r5, r0
    ab6a:	cbz	r0, ab94 <_start@@Base+0x1940>
    ab6c:	str	r0, [sp, #0]
    ab6e:	mov	fp, r5
    ab70:	ldr	r0, [pc, #256]	; (ac74 <_start@@Base+0x1a20>)
    ab72:	ldr.w	r2, [r4, #144]	; 0x90
    ab76:	ldr.w	r3, [r4, #148]	; 0x94
    ab7a:	add	r0, pc
    ab7c:	bl	1a900 <__btrfs_error@@Base>
    ab80:	ldr	r2, [pc, #244]	; (ac78 <_start@@Base+0x1a24>)
    ab82:	ldr	r3, [pc, #236]	; (ac70 <_start@@Base+0x1a1c>)
    ab84:	add	r2, pc
    ab86:	ldr	r3, [r2, r3]
    ab88:	ldr	r2, [r3, #0]
    ab8a:	ldr	r3, [sp, #36]	; 0x24
    ab8c:	eors	r2, r3
    ab8e:	beq.n	ac60 <_start@@Base+0x1a0c>
    ab90:	blx	88e4 <__stack_chk_fail@plt>
    ab94:	ldrb.w	sl, [r4, #196]	; 0xc4
    ab98:	cmp.w	sl, #0
    ab9c:	bne.n	abaa <_start@@Base+0x1956>
    ab9e:	cmp.w	r8, #0
    aba2:	bne.n	abaa <_start@@Base+0x1956>
    aba4:	mov.w	fp, #0
    aba8:	b.n	ab80 <_start@@Base+0x192c>
    abaa:	ldr.w	r3, [r4, #192]	; 0xc0
    abae:	movs	r5, #0
    abb0:	str	r3, [sp, #8]
    abb2:	add	r3, sp, #16
    abb4:	vmov	s16, r3
    abb8:	ldr	r3, [sp, #8]
    abba:	cmp	r5, r3
    abbc:	bge.n	aba4 <_start@@Base+0x1950>
    abbe:	cmp.w	sl, #0
    abc2:	bne.n	ac34 <_start@@Base+0x19e0>
    abc4:	vmov	r1, s16
    abc8:	mov	r2, r5
    abca:	mov	r0, r4
    abcc:	bl	94a0 <_start@@Base+0x24c>
    abd0:	ldrb.w	r3, [sp, #24]
    abd4:	cmp	r3, #132	; 0x84
    abd6:	beq.n	abdc <_start@@Base+0x1988>
    abd8:	adds	r5, #1
    abda:	b.n	abb8 <_start@@Base+0x1964>
    abdc:	movs	r3, #25
    abde:	movs	r1, #0
    abe0:	mla	r3, r3, r5, r4
    abe4:	movs	r2, #0
    abe6:	mov	r0, r9
    abe8:	ldr.w	r3, [r3, #214]	; 0xd6
    abec:	strd	r1, r2, [sp]
    abf0:	add	r3, r4
    abf2:	ldr.w	r2, [r3, #373]	; 0x175
    abf6:	ldr.w	r3, [r3, #377]	; 0x179
    abfa:	bl	20b0c <read_tree_block@@Base>
    abfe:	str	r0, [sp, #12]
    ac00:	bl	9a9e <_start@@Base+0x84a>
    ac04:	ldr	r1, [sp, #12]
    ac06:	cbnz	r0, ac16 <_start@@Base+0x19c2>
    ac08:	ldr	r0, [pc, #112]	; (ac7c <_start@@Base+0x1a28>)
    ac0a:	mvn.w	fp, #4
    ac0e:	add	r0, pc
    ac10:	bl	1a900 <__btrfs_error@@Base>
    ac14:	b.n	ab80 <_start@@Base+0x192c>
    ac16:	mov	r3, sl
    ac18:	mov	r2, r7
    ac1a:	str	r1, [sp, #12]
    ac1c:	mov	r0, r6
    ac1e:	bl	ab2c <_start@@Base+0x18d8>
    ac22:	ldr	r1, [sp, #12]
    ac24:	mov	fp, r0
    ac26:	mov	r0, r1
    ac28:	bl	1a0a4 <free_extent_buffer@@Base>
    ac2c:	cmp.w	fp, #0
    ac30:	beq.n	abd8 <_start@@Base+0x1984>
    ac32:	b.n	ab80 <_start@@Base+0x192c>
    ac34:	add.w	r3, r5, r5, lsl #5
    ac38:	movs	r0, #0
    ac3a:	add	r3, r4
    ac3c:	movs	r1, #0
    ac3e:	ldr.w	r2, [r3, #214]!
    ac42:	ldr	r3, [r3, #4]
    ac44:	strd	r0, r1, [sp]
    ac48:	mov	r0, r9
    ac4a:	bl	20b0c <read_tree_block@@Base>
    ac4e:	str	r0, [sp, #12]
    ac50:	bl	9a9e <_start@@Base+0x84a>
    ac54:	cmp	r0, #0
    ac56:	beq.n	ac08 <_start@@Base+0x19b4>
    ac58:	ldr	r1, [sp, #12]
    ac5a:	mov	r3, r8
    ac5c:	mov	r2, r7
    ac5e:	b.n	ac1c <_start@@Base+0x19c8>
    ac60:	mov	r0, fp
    ac62:	add	sp, #44	; 0x2c
    ac64:	vpop	{d8}
    ac68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ac6c:	b.n	b050 <_start@@Base+0x1dfc>
    ac6e:	movs	r5, r0
    ac70:	lsls	r4, r7, #9
    ac72:	movs	r0, r0
    ac74:	movs	r6, #12
    ac76:	movs	r3, r0
    ac78:	b.n	afd4 <_start@@Base+0x1d80>
    ac7a:	movs	r5, r0
    ac7c:	movs	r5, #158	; 0x9e
    ac7e:	movs	r3, r0
    ac80:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    ac84:	addw	r6, r0, #1164	; 0x48c
    ac88:	add.w	r7, r0, #1192	; 0x4a8
    ac8c:	mov	r5, r0
    ac8e:	mov	r0, r6
    ac90:	addw	r8, r5, #1244	; 0x4dc
    ac94:	blx	87f0 <pthread_mutex_lock@plt>
    ac98:	ldr.w	r4, [r5, #1244]	; 0x4dc
    ac9c:	cmp	r4, r8
    ac9e:	beq.n	acec <_start@@Base+0x1a98>
    aca0:	ldrd	r2, r3, [r4]
    aca4:	mov	r0, r6
    aca6:	str	r3, [r2, #4]
    aca8:	str	r2, [r3, #0]
    acaa:	strd	r4, r4, [r4]
    acae:	blx	8708 <pthread_mutex_unlock@plt>
    acb2:	ldr.w	r3, [r5, #1288]	; 0x508
    acb6:	cmp	r3, #0
    acb8:	ble.n	ad26 <_start@@Base+0x1ad2>
    acba:	ldr	r0, [r4, #24]
    acbc:	ldr.w	r8, [r4, #32]
    acc0:	blx	8bd0 <compressBound@plt>
    acc4:	str	r0, [r4, #36]	; 0x24
    acc6:	blx	8a94 <malloc@plt+0x4>
    acca:	str	r0, [r4, #32]
    accc:	cbnz	r0, ad08 <_start@@Base+0x1ab4>
    acce:	ldr	r0, [pc, #112]	; (ad40 <_start@@Base+0x1aec>)
    acd0:	add	r0, pc
    acd2:	bl	1a900 <__btrfs_error@@Base>
    acd6:	mov	r0, r6
    acd8:	blx	87f0 <pthread_mutex_lock@plt>
    acdc:	ldr.w	r3, [r5, #1304]	; 0x518
    ace0:	cbnz	r3, acf2 <_start@@Base+0x1a9e>
    ace2:	mvn.w	r3, #11
    ace6:	str.w	r3, [r5, #1304]	; 0x518
    acea:	b.n	acf2 <_start@@Base+0x1a9e>
    acec:	ldr.w	r3, [r5, #1292]	; 0x50c
    acf0:	cbz	r3, acfe <_start@@Base+0x1aaa>
    acf2:	mov	r0, r6
    acf4:	blx	8708 <pthread_mutex_unlock@plt>
    acf8:	movs	r0, #0
    acfa:	blx	8cc4 <pthread_exit@plt>
    acfe:	mov	r1, r6
    ad00:	mov	r0, r7
    ad02:	blx	8d88 <pthread_cond_wait@plt>
    ad06:	b.n	ac98 <_start@@Base+0x1a44>
    ad08:	ldr.w	r3, [r5, #1288]	; 0x508
    ad0c:	add.w	r1, r4, #36	; 0x24
    ad10:	mov	r2, r8
    ad12:	str	r3, [sp, #0]
    ad14:	ldr	r3, [r4, #24]
    ad16:	blx	8d00 <compress2@plt>
    ad1a:	cbz	r0, ad20 <_start@@Base+0x1acc>
    ad1c:	movs	r3, #1
    ad1e:	str	r3, [r4, #40]	; 0x28
    ad20:	mov	r0, r8
    ad22:	blx	87cc <free@plt+0x4>
    ad26:	mov	r0, r6
    ad28:	blx	87f0 <pthread_mutex_lock@plt>
    ad2c:	ldr.w	r3, [r5, #1264]	; 0x4f0
    ad30:	mov	r0, r6
    ad32:	adds	r3, #1
    ad34:	str.w	r3, [r5, #1264]	; 0x4f0
    ad38:	blx	8708 <pthread_mutex_unlock@plt>
    ad3c:	b.n	ac8e <_start@@Base+0x1a3a>
    ad3e:	nop
    ad40:	movs	r4, #250	; 0xfa
    ad42:	movs	r3, r0
    ad44:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ad48:	subw	sp, sp, #1452	; 0x5ac
    ad4c:	mov	r6, r3
    ad4e:	ldr.w	r3, [pc, #1192]	; b1f8 <_start@@Base+0x1fa4>
    ad52:	str	r2, [sp, #28]
    ad54:	mov.w	r9, #0
    ad58:	ldr.w	r2, [pc, #1184]	; b1fc <_start@@Base+0x1fa8>
    ad5c:	mov	r7, r1
    ad5e:	ldr.w	r8, [sp, #1488]	; 0x5d0
    ad62:	add	r2, pc
    ad64:	ldr.w	r5, [sp, #1492]	; 0x5d4
    ad68:	ldr	r3, [r2, r3]
    ad6a:	movs	r2, #0
    ad6c:	ldr	r3, [r3, #0]
    ad6e:	str.w	r3, [sp, #1444]	; 0x5a4
    ad72:	mov.w	r3, #0
    ad76:	movs	r3, #0
    ad78:	str.w	r9, [sp]
    ad7c:	bl	21774 <open_ctree@@Base>
    ad80:	mov	fp, r0
    ad82:	cbnz	r0, adae <_start@@Base+0x1b5a>
    ad84:	ldr.w	r0, [pc, #1144]	; b200 <_start@@Base+0x1fac>
    ad88:	mvn.w	r5, #4
    ad8c:	add	r0, pc
    ad8e:	bl	1a900 <__btrfs_error@@Base>
    ad92:	ldr.w	r2, [pc, #1136]	; b204 <_start@@Base+0x1fb0>
    ad96:	ldr.w	r3, [pc, #1120]	; b1f8 <_start@@Base+0x1fa4>
    ad9a:	add	r2, pc
    ad9c:	ldr	r3, [r2, r3]
    ad9e:	ldr	r2, [r3, #0]
    ada0:	ldr.w	r3, [sp, #1444]	; 0x5a4
    ada4:	eors	r2, r3
    ada6:	beq.w	b1e0 <_start@@Base+0x1f8c>
    adaa:	blx	88e4 <__stack_chk_fail@plt>
    adae:	add	r4, sp, #128	; 0x80
    adb0:	mov.w	r2, #1312	; 0x520
    adb4:	mov	r1, r9
    adb6:	mov	r0, r4
    adb8:	blx	8bf8 <memset@plt+0x4>
    adbc:	add.w	r1, sp, #1400	; 0x578
    adc0:	cmp.w	r8, #2
    adc4:	addw	r3, sp, #1372	; 0x55c
    adc8:	mov.w	r2, #4294967295	; 0xffffffff
    adcc:	str.w	r3, [r4, #1244]	; 0x4dc
    add0:	str.w	r3, [r4, #1248]	; 0x4e0
    add4:	addw	r3, sp, #1380	; 0x564
    add8:	strd	fp, r7, [r4]
    addc:	str.w	r3, [r4, #1252]	; 0x4e4
    ade0:	str.w	r3, [r4, #1256]	; 0x4e8
    ade4:	mov.w	r3, #4294967295	; 0xffffffff
    ade8:	str.w	r6, [r4, #1288]	; 0x508
    adec:	strd	r2, r3, [r1]
    adf0:	str.w	r8, [r4, #1300]	; 0x514
    adf4:	bne.n	adfa <_start@@Base+0x1ba6>
    adf6:	bl	1a87c <crc32c_optimization_init@@Base>
    adfa:	ldr	r3, [sp, #28]
    adfc:	movs	r6, #0
    adfe:	mov	r1, r6
    ae00:	add.w	r0, sp, #1320	; 0x528
    ae04:	str.w	r6, [r4, #1240]	; 0x4d8
    ae08:	str.w	r3, [r4, #1160]	; 0x488
    ae0c:	blx	88f0 <pthread_cond_init@plt>
    ae10:	addw	r0, sp, #1292	; 0x50c
    ae14:	mov	r1, r6
    ae16:	blx	8848 <pthread_mutex_init@plt>
    ae1a:	add	r3, pc, #980	; (adr r3, b1f0 <_start@@Base+0x1f9c>)
    ae1c:	ldrd	r2, r3, [r3]
    ae20:	str.w	r6, [r4, #1260]	; 0x4ec
    ae24:	str.w	r6, [r4, #1264]	; 0x4f0
    ae28:	strd	r2, r3, [r4, #8]
    ae2c:	movs	r3, #0
    ae2e:	movs	r2, #0
    ae30:	strd	r2, r3, [r4, #16]
    ae34:	ldr.w	r3, [r4, #1288]	; 0x508
    ae38:	str	r6, [r4, #24]
    ae3a:	cmp	r3, r6
    ae3c:	ite	le
    ae3e:	movle	r3, #0
    ae40:	movgt	r3, #1
    ae42:	strb	r3, [r4, #28]
    ae44:	ldr	r3, [sp, #28]
    ae46:	cbz	r3, ae58 <_start@@Base+0x1c04>
    ae48:	ldr.w	r8, [pc, #956]	; b208 <_start@@Base+0x1fb4>
    ae4c:	add.w	r7, sp, #1160	; 0x488
    ae50:	add	r8, pc
    ae52:	ldr	r3, [sp, #28]
    ae54:	cmp	r3, r6
    ae56:	bgt.n	aeb6 <_start@@Base+0x1c62>
    ae58:	movs	r3, #0
    ae5a:	mov.w	r2, #4096	; 0x1000
    ae5e:	strd	r4, r3, [sp]
    ae62:	mov.w	r0, #65536	; 0x10000
    ae66:	movs	r3, #0
    ae68:	movs	r1, #0
    ae6a:	bl	aa88 <_start@@Base+0x1834>
    ae6e:	mov	r6, r0
    ae70:	cmp	r0, #0
    ae72:	beq.n	aee8 <_start@@Base+0x1c94>
    ae74:	mov	r1, r0
    ae76:	ldr	r0, [pc, #916]	; (b20c <_start@@Base+0x1fb8>)
    ae78:	mov	r5, r6
    ae7a:	add	r0, pc
    ae7c:	bl	1a900 <__btrfs_error@@Base>
    ae80:	movs	r1, #1
    ae82:	add	r0, sp, #128	; 0x80
    ae84:	bl	a4c0 <_start@@Base+0x126c>
    ae88:	mov	r1, r0
    ae8a:	cbz	r0, ae9a <_start@@Base+0x1c46>
    ae8c:	cmp	r5, #0
    ae8e:	it	eq
    ae90:	moveq	r5, r0
    ae92:	ldr	r0, [pc, #892]	; (b210 <_start@@Base+0x1fbc>)
    ae94:	add	r0, pc
    ae96:	bl	1a900 <__btrfs_error@@Base>
    ae9a:	ldr	r1, [sp, #28]
    ae9c:	mov	r0, r4
    ae9e:	bl	9578 <_start@@Base+0x324>
    aea2:	add	r0, sp, #60	; 0x3c
    aea4:	bl	1b2dc <btrfs_release_path@@Base>
    aea8:	mov	r0, fp
    aeaa:	bl	9ab2 <_start@@Base+0x85e>
    aeae:	cmp	r5, #0
    aeb0:	it	eq
    aeb2:	moveq	r5, r0
    aeb4:	b.n	ad92 <_start@@Base+0x1b3e>
    aeb6:	mov	r0, r7
    aeb8:	mov	r3, r4
    aeba:	mov	r2, r8
    aebc:	movs	r1, #0
    aebe:	blx	8a38 <pthread_create@plt>
    aec2:	adds	r6, #1
    aec4:	adds	r7, #4
    aec6:	mov	r9, r0
    aec8:	cmp	r0, #0
    aeca:	beq.n	ae52 <_start@@Base+0x1bfe>
    aecc:	mov	r1, r6
    aece:	mov	r0, r4
    aed0:	bl	9578 <_start@@Base+0x324>
    aed4:	ldr	r0, [pc, #828]	; (b214 <_start@@Base+0x1fc0>)
    aed6:	mov	r1, r9
    aed8:	mov	r5, r9
    aeda:	add	r0, pc
    aedc:	bl	1a900 <__btrfs_error@@Base>
    aee0:	mov	r0, fp
    aee2:	bl	9ab2 <_start@@Base+0x85e>
    aee6:	b.n	ad92 <_start@@Base+0x1b3e>
    aee8:	add.w	sl, sp, #60	; 0x3c
    aeec:	mov	r0, sl
    aeee:	bl	1b2cc <btrfs_init_path@@Base>
    aef2:	cmp	r5, #0
    aef4:	beq.n	af94 <_start@@Base+0x1d40>
    aef6:	ldr.w	r3, [fp, #464]	; 0x1d0
    aefa:	mov	r2, r4
    aefc:	mov	r0, fp
    aefe:	ldr	r1, [r3, #32]
    af00:	movs	r3, #1
    af02:	ldr	r1, [r1, #0]
    af04:	bl	ab2c <_start@@Base+0x18d8>
    af08:	mov	r5, r0
    af0a:	cmp	r0, #0
    af0c:	bne.n	ae80 <_start@@Base+0x1c2c>
    af0e:	ldr.w	r3, [fp, #464]	; 0x1d0
    af12:	mov	r2, r4
    af14:	mov	r0, fp
    af16:	ldr	r1, [r3, #28]
    af18:	movs	r3, #1
    af1a:	ldr	r1, [r1, #0]
    af1c:	bl	ab2c <_start@@Base+0x18d8>
    af20:	mov	r5, r0
    af22:	cmp	r5, #0
    af24:	bne.n	ae80 <_start@@Base+0x1c2c>
    af26:	ldr.w	r1, [fp, #464]	; 0x1d0
    af2a:	ldr.w	r0, [r1, #308]	; 0x134
    af2e:	ldr	r2, [r0, #96]	; 0x60
    af30:	ldr	r3, [r0, #100]	; 0x64
    af32:	orrs	r3, r2
    af34:	bne.w	b11c <_start@@Base+0x1ec8>
    af38:	ldr.w	r3, [fp, #464]	; 0x1d0
    af3c:	add	r7, sp, #40	; 0x28
    af3e:	add	r6, sp, #60	; 0x3c
    af40:	movs	r5, #0
    af42:	movs	r2, #0
    af44:	mov	r0, r5
    af46:	ldr.w	r9, [r3, #28]
    af4a:	movs	r3, #0
    af4c:	strd	r2, r3, [r7]
    af50:	movs	r3, #108	; 0x6c
    af52:	mov	r2, r7
    af54:	strb	r3, [r7, #8]
    af56:	mov	r1, r9
    af58:	mov	r3, r6
    af5a:	strd	r5, r5, [sp]
    af5e:	strb.w	r5, [sp, #49]	; 0x31
    af62:	strb.w	r5, [sp, #50]	; 0x32
    af66:	strb.w	r5, [sp, #51]	; 0x33
    af6a:	strb.w	r5, [sp, #52]	; 0x34
    af6e:	strb.w	r5, [sp, #53]	; 0x35
    af72:	strb.w	r5, [sp, #54]	; 0x36
    af76:	strb.w	r5, [sp, #55]	; 0x37
    af7a:	strb.w	r5, [sp, #56]	; 0x38
    af7e:	bl	1d6c0 <btrfs_search_slot@@Base>
    af82:	subs	r1, r0, #0
    af84:	bge.w	b146 <_start@@Base+0x1ef2>
    af88:	ldr	r0, [pc, #652]	; (b218 <_start@@Base+0x1fc4>)
    af8a:	add	r0, pc
    af8c:	bl	1a900 <__btrfs_error@@Base>
    af90:	movs	r5, #0
    af92:	b.n	ae80 <_start@@Base+0x1c2c>
    af94:	ldr	r3, [r4, #0]
    af96:	add	r2, sp, #40	; 0x28
    af98:	mov.w	r9, #69632	; 0x11000
    af9c:	movs	r6, #0
    af9e:	mov	r0, r5
    afa0:	ldr.w	r3, [r3, #464]	; 0x1d0
    afa4:	ldr.w	r8, [r3, #24]
    afa8:	movs	r3, #168	; 0xa8
    afaa:	strd	r9, r6, [r2]
    afae:	strb	r3, [r2, #8]
    afb0:	mov	r3, sl
    afb2:	mov	r1, r8
    afb4:	strd	r5, r5, [sp]
    afb8:	strb.w	r5, [sp, #49]	; 0x31
    afbc:	strb.w	r5, [sp, #50]	; 0x32
    afc0:	strb.w	r5, [sp, #51]	; 0x33
    afc4:	strb.w	r5, [sp, #52]	; 0x34
    afc8:	strb.w	r5, [sp, #53]	; 0x35
    afcc:	strb.w	r5, [sp, #54]	; 0x36
    afd0:	strb.w	r5, [sp, #55]	; 0x37
    afd4:	strb.w	r5, [sp, #56]	; 0x38
    afd8:	bl	1d6c0 <btrfs_search_slot@@Base>
    afdc:	subs	r7, r0, #0
    afde:	bge.n	afee <_start@@Base+0x1d9a>
    afe0:	ldr	r0, [pc, #568]	; (b21c <_start@@Base+0x1fc8>)
    afe2:	mov	r1, r7
    afe4:	mov	r5, r7
    afe6:	add	r0, pc
    afe8:	bl	1a900 <__btrfs_error@@Base>
    afec:	b.n	ae80 <_start@@Base+0x1c2c>
    afee:	ldr.w	r7, [sl]
    aff2:	strd	r9, r6, [sp, #16]
    aff6:	mov	r6, sl
    aff8:	ldr.w	r3, [r7, #192]	; 0xc0
    affc:	ldr	r2, [r6, #32]
    affe:	cmp	r2, r3
    b000:	bcc.n	b030 <_start@@Base+0x1ddc>
    b002:	ldr.w	r0, [r8, #464]	; 0x1d0
    b006:	mov	r1, r6
    b008:	mov.w	r3, #0
    b00c:	strb.w	r3, [r6, #65]	; 0x41
    b010:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
    b014:	subs	r7, r0, #0
    b016:	bge.n	b02c <_start@@Base+0x1dd8>
    b018:	ldr	r0, [pc, #516]	; (b220 <_start@@Base+0x1fcc>)
    b01a:	mov	r1, r7
    b01c:	mov	r5, r7
    b01e:	add	r0, pc
    b020:	bl	1a900 <__btrfs_error@@Base>
    b024:	add	r0, sp, #60	; 0x3c
    b026:	bl	1b2dc <btrfs_release_path@@Base>
    b02a:	b.n	af22 <_start@@Base+0x1cce>
    b02c:	bne.n	b024 <_start@@Base+0x1dd0>
    b02e:	ldr	r7, [r6, #0]
    b030:	add	r1, sp, #40	; 0x28
    b032:	ldr	r2, [r6, #32]
    b034:	mov	r0, r7
    b036:	str	r1, [sp, #8]
    b038:	bl	94a0 <_start@@Base+0x24c>
    b03c:	ldr	r1, [sp, #8]
    b03e:	ldrd	r2, r3, [sp, #16]
    b042:	ldrd	r9, sl, [r1]
    b046:	cmp	sl, r3
    b048:	it	eq
    b04a:	cmpeq	r9, r2
    b04c:	bcc.n	b05a <_start@@Base+0x1e06>
    b04e:	ldrb	r3, [r1, #8]
    b050:	add.w	r2, r3, #88	; 0x58
    b054:	uxtb	r2, r2
    b056:	cmp	r2, #1
    b058:	bls.n	b062 <_start@@Base+0x1e0e>
    b05a:	ldr	r3, [r6, #32]
    b05c:	adds	r3, #1
    b05e:	str	r3, [r6, #32]
    b060:	b.n	aff8 <_start@@Base+0x1da4>
    b062:	cmp	r3, #169	; 0xa9
    b064:	bne.n	b092 <_start@@Base+0x1e3e>
    b066:	ldr.w	r2, [r8, #464]	; 0x1d0
    b06a:	movs	r1, #0
    b06c:	ldr.w	r2, [r2, #384]	; 0x180
    b070:	mov	r0, r2
    b072:	strd	r0, r1, [sp, #8]
    b076:	ldrd	r1, r2, [sp, #8]
    b07a:	orrs	r2, r1
    b07c:	bne.n	b0a0 <_start@@Base+0x1e4c>
    b07e:	ldr	r0, [pc, #420]	; (b224 <_start@@Base+0x1fd0>)
    b080:	mov	r2, r9
    b082:	str	r3, [sp, #0]
    b084:	mov	r3, sl
    b086:	add	r0, pc
    b088:	bl	1a900 <__btrfs_error@@Base>
    b08c:	mvn.w	r5, #4
    b090:	b.n	b024 <_start@@Base+0x1dd0>
    b092:	ldr.w	r2, [r1, #9]
    b096:	str	r2, [sp, #8]
    b098:	ldr.w	r2, [r1, #13]
    b09c:	str	r2, [sp, #12]
    b09e:	b.n	b076 <_start@@Base+0x1e22>
    b0a0:	ldr	r2, [r6, #32]
    b0a2:	add.w	r3, r7, #96	; 0x60
    b0a6:	movs	r1, #25
    b0a8:	mla	r2, r1, r2, r3
    b0ac:	add.w	r1, r2, #101	; 0x65
    b0b0:	ldr.w	r2, [r2, #122]	; 0x7a
    b0b4:	cmp	r2, #24
    b0b6:	bls.n	b100 <_start@@Base+0x1eac>
    b0b8:	ldr.w	r2, [r1, #17]
    b0bc:	add	r3, r2
    b0be:	ldr.w	r3, [r3, #117]	; 0x75
    b0c2:	and.w	r3, r3, #2
    b0c6:	str	r3, [sp, #32]
    b0c8:	movs	r3, #0
    b0ca:	str	r3, [sp, #36]	; 0x24
    b0cc:	ldrd	r2, r3, [sp, #32]
    b0d0:	orrs	r3, r2
    b0d2:	beq.n	b10a <_start@@Base+0x1eb6>
    b0d4:	movs	r3, #0
    b0d6:	mov	r0, r9
    b0d8:	str	r3, [sp, #4]
    b0da:	mov	r1, sl
    b0dc:	add	r3, sp, #128	; 0x80
    b0de:	str	r3, [sp, #0]
    b0e0:	ldrd	r2, r3, [sp, #8]
    b0e4:	bl	aa88 <_start@@Base+0x1834>
    b0e8:	cbz	r0, b10a <_start@@Base+0x1eb6>
    b0ea:	str	r0, [sp, #0]
    b0ec:	mov	r2, r9
    b0ee:	str	r0, [sp, #8]
    b0f0:	mov	r3, sl
    b0f2:	ldr	r0, [pc, #308]	; (b228 <_start@@Base+0x1fd4>)
    b0f4:	add	r0, pc
    b0f6:	bl	1a900 <__btrfs_error@@Base>
    b0fa:	ldr	r1, [sp, #8]
    b0fc:	mov	r5, r1
    b0fe:	b.n	b024 <_start@@Base+0x1dd0>
    b100:	ldr	r0, [pc, #296]	; (b22c <_start@@Base+0x1fd8>)
    b102:	add	r0, pc
    b104:	bl	1a900 <__btrfs_error@@Base>
    b108:	b.n	b08c <_start@@Base+0x1e38>
    b10a:	ldr	r3, [sp, #8]
    b10c:	adds.w	r3, r9, r3
    b110:	str	r3, [sp, #16]
    b112:	ldr	r3, [sp, #12]
    b114:	adc.w	r3, sl, r3
    b118:	str	r3, [sp, #20]
    b11a:	b.n	aff8 <_start@@Base+0x1da4>
    b11c:	ldr	r3, [r1, #60]	; 0x3c
    b11e:	cbz	r3, b124 <_start@@Base+0x1ed0>
    b120:	ldr	r1, [r3, #0]
    b122:	cbnz	r1, b132 <_start@@Base+0x1ede>
    b124:	ldr	r0, [pc, #264]	; (b230 <_start@@Base+0x1fdc>)
    b126:	mvn.w	r5, #4
    b12a:	add	r0, pc
    b12c:	bl	1a900 <__btrfs_error@@Base>
    b130:	b.n	ae80 <_start@@Base+0x1c2c>
    b132:	add	r2, sp, #128	; 0x80
    b134:	movs	r3, #1
    b136:	mov	r0, fp
    b138:	bl	ab2c <_start@@Base+0x18d8>
    b13c:	mov	r5, r0
    b13e:	cmp	r0, #0
    b140:	bne.w	ae80 <_start@@Base+0x1c2c>
    b144:	b.n	af38 <_start@@Base+0x1ce4>
    b146:	add	r3, sp, #128	; 0x80
    b148:	ldr.w	r8, [r6]
    b14c:	str	r5, [sp, #8]
    b14e:	mov.w	sl, #25
    b152:	mov	r5, r3
    b154:	ldr.w	r3, [r8, #192]	; 0xc0
    b158:	ldr	r2, [r6, #32]
    b15a:	cmp	r2, r3
    b15c:	bcc.n	b180 <_start@@Base+0x1f2c>
    b15e:	ldr	r3, [sp, #8]
    b160:	mov	r1, r6
    b162:	ldr.w	r0, [r9, #464]	; 0x1d0
    b166:	strb.w	r3, [r6, #65]	; 0x41
    b16a:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
    b16e:	subs	r1, r0, #0
    b170:	bge.n	b178 <_start@@Base+0x1f24>
    b172:	ldr	r0, [pc, #192]	; (b234 <_start@@Base+0x1fe0>)
    b174:	add	r0, pc
    b176:	b.n	af8c <_start@@Base+0x1d38>
    b178:	bne.w	af90 <_start@@Base+0x1d3c>
    b17c:	ldr.w	r8, [r6]
    b180:	ldr	r2, [r6, #32]
    b182:	mov	r1, r7
    b184:	mov	r0, r8
    b186:	bl	94a0 <_start@@Base+0x24c>
    b18a:	ldrb	r3, [r7, #8]
    b18c:	cmp	r3, #108	; 0x6c
    b18e:	ldr	r3, [r6, #32]
    b190:	beq.n	b198 <_start@@Base+0x1f44>
    b192:	adds	r3, #1
    b194:	str	r3, [r6, #32]
    b196:	b.n	b154 <_start@@Base+0x1f00>
    b198:	add.w	r1, r8, #96	; 0x60
    b19c:	mla	r2, sl, r3, r1
    b1a0:	ldr.w	r2, [r2, #118]	; 0x76
    b1a4:	adds	r2, #101	; 0x65
    b1a6:	add	r1, r2
    b1a8:	ldrb.w	ip, [r1, #20]
    b1ac:	cmp.w	ip, #1
    b1b0:	bne.n	b192 <_start@@Base+0x1f3e>
    b1b2:	mov	r3, r1
    b1b4:	ldr.w	r0, [r1, #21]!
    b1b8:	ldr.w	r2, [r3, #29]!
    b1bc:	ldr	r1, [r1, #4]
    b1be:	ldr	r3, [r3, #4]
    b1c0:	strd	r5, ip, [sp]
    b1c4:	bl	aa88 <_start@@Base+0x1834>
    b1c8:	mov	r1, r0
    b1ca:	cbz	r0, b1dc <_start@@Base+0x1f88>
    b1cc:	ldr	r0, [pc, #104]	; (b238 <_start@@Base+0x1fe4>)
    b1ce:	add	r0, pc
    b1d0:	bl	1a900 <__btrfs_error@@Base>
    b1d4:	mov	r0, r6
    b1d6:	bl	1b2dc <btrfs_release_path@@Base>
    b1da:	b.n	af90 <_start@@Base+0x1d3c>
    b1dc:	ldr	r3, [r6, #32]
    b1de:	b.n	b192 <_start@@Base+0x1f3e>
    b1e0:	mov	r0, r5
    b1e2:	addw	sp, sp, #1452	; 0x5ac
    b1e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b1ea:	nop
    b1ec:	nop.w
    b1f0:	str	r3, [r1, #104]	; 0x68
    b1f2:	strb	r5, [r2, #10]
    b1f4:	movs	r5, #226	; 0xe2
    b1f6:	pop	{r2, r3, r4, r6, pc}
    b1f8:	lsls	r4, r7, #9
    b1fa:	movs	r0, r0
    b1fc:	svc	206	; 0xce
    b1fe:	movs	r5, r0
    b200:	movs	r4, #97	; 0x61
    b202:	movs	r3, r0
    b204:	svc	150	; 0x96
    b206:	movs	r5, r0
    b208:	mcr2	15, 1, pc, cr13, cr15, {7}	; <UNPREDICTABLE>
    b20c:	movs	r3, #133	; 0x85
    b20e:	movs	r3, r0
    b210:	movs	r4, #180	; 0xb4
    b212:	movs	r3, r0
    b214:	movs	r4, #143	; 0x8f
    b216:	movs	r3, r0
    b218:	movs	r3, #123	; 0x7b
    b21a:	movs	r3, r0
    b21c:	movs	r2, #52	; 0x34
    b21e:	movs	r3, r0
    b220:	movs	r2, #22
    b222:	movs	r3, r0
    b224:	movs	r1, #200	; 0xc8
    b226:	movs	r3, r0
    b228:	movs	r1, #133	; 0x85
    b22a:	movs	r3, r0
    b22c:	movs	r1, #148	; 0x94
    b22e:	movs	r3, r0
    b230:	movs	r1, #172	; 0xac
    b232:	movs	r3, r0
    b234:	movs	r0, #192	; 0xc0
    b236:	movs	r3, r0
    b238:	movs	r1, #86	; 0x56
    b23a:	movs	r3, r0
    b23c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b240:	mov	r7, r2
    b242:	vpush	{d8-d10}
    b246:	mov	r4, r0
    b248:	ldr.w	r2, [pc, #1992]	; ba14 <_start@@Base+0x27c0>
    b24c:	add	r2, pc
    b24e:	vmov	s18, r1
    b252:	subw	sp, sp, #1940	; 0x794
    b256:	ldr.w	r1, [pc, #1984]	; ba18 <_start@@Base+0x27c4>
    b25a:	str	r3, [sp, #68]	; 0x44
    b25c:	add	r1, pc
    b25e:	ldr.w	r3, [sp, #2004]	; 0x7d4
    b262:	ldr.w	r8, [sp, #2008]	; 0x7d8
    b266:	vmov	s17, r3
    b26a:	ldr.w	r3, [pc, #1968]	; ba1c <_start@@Base+0x27c8>
    b26e:	add	r3, pc
    b270:	str	r3, [sp, #72]	; 0x48
    b272:	ldr.w	r3, [pc, #1964]	; ba20 <_start@@Base+0x27cc>
    b276:	ldr	r3, [r2, r3]
    b278:	ldr	r3, [r3, #0]
    b27a:	str.w	r3, [sp, #1932]	; 0x78c
    b27e:	mov.w	r3, #0
    b282:	blx	8748 <strcmp@plt>
    b286:	cbnz	r0, b2de <_start@@Base+0x208a>
    b288:	ldr.w	r3, [pc, #1944]	; ba24 <_start@@Base+0x27d0>
    b28c:	ldr	r2, [sp, #72]	; 0x48
    b28e:	ldr	r3, [r2, r3]
    b290:	ldr	r3, [r3, #0]
    b292:	str	r3, [sp, #44]	; 0x2c
    b294:	ldr.w	r3, [sp, #2000]	; 0x7d0
    b298:	cmp	r3, #0
    b29a:	beq.n	b318 <_start@@Base+0x20c4>
    b29c:	movs	r2, #0
    b29e:	movs	r3, #19
    b2a0:	vmov	r0, s17
    b2a4:	str	r3, [sp, #16]
    b2a6:	movs	r3, #0
    b2a8:	strd	r2, r3, [sp, #8]
    b2ac:	strd	r2, r3, [sp]
    b2b0:	bl	216b0 <open_ctree_fs_info@@Base>
    b2b4:	str	r0, [sp, #36]	; 0x24
    b2b6:	cbnz	r0, b31e <_start@@Base+0x20ca>
    b2b8:	ldr.w	r0, [pc, #1900]	; ba28 <_start@@Base+0x27d4>
    b2bc:	mvn.w	r4, #4
    b2c0:	add	r0, pc
    b2c2:	bl	1a900 <__btrfs_error@@Base>
    b2c6:	ldr	r2, [sp, #72]	; 0x48
    b2c8:	ldr.w	r3, [pc, #1880]	; ba24 <_start@@Base+0x27d0>
    b2cc:	ldr	r3, [r2, r3]
    b2ce:	ldr	r2, [sp, #44]	; 0x2c
    b2d0:	ldr	r3, [r3, #0]
    b2d2:	cmp	r3, r2
    b2d4:	beq.n	b2fc <_start@@Base+0x20a8>
    b2d6:	mov	r0, r2
    b2d8:	blx	8cb8 <fclose@plt>
    b2dc:	b.n	b2fc <_start@@Base+0x20a8>
    b2de:	ldr.w	r1, [pc, #1868]	; ba2c <_start@@Base+0x27d8>
    b2e2:	mov	r0, r4
    b2e4:	add	r1, pc
    b2e6:	blx	8d7c <fopen64@plt>
    b2ea:	str	r0, [sp, #44]	; 0x2c
    b2ec:	cmp	r0, #0
    b2ee:	bne.n	b294 <_start@@Base+0x2040>
    b2f0:	ldr.w	r0, [pc, #1852]	; ba30 <_start@@Base+0x27dc>
    b2f4:	add	r0, pc
    b2f6:	bl	1a900 <__btrfs_error@@Base>
    b2fa:	movs	r4, #1
    b2fc:	ldr.w	r2, [pc, #1844]	; ba34 <_start@@Base+0x27e0>
    b300:	ldr.w	r3, [pc, #1820]	; ba20 <_start@@Base+0x27cc>
    b304:	add	r2, pc
    b306:	ldr	r3, [r2, r3]
    b308:	ldr	r2, [r3, #0]
    b30a:	ldr.w	r3, [sp, #1932]	; 0x78c
    b30e:	eors	r2, r3
    b310:	beq.w	c6e0 <_start@@Base+0x348c>
    b314:	blx	88e4 <__stack_chk_fail@plt>
    b318:	ldr.w	r3, [sp, #2000]	; 0x7d0
    b31c:	str	r3, [sp, #36]	; 0x24
    b31e:	mov.w	r0, #1024	; 0x400
    b322:	blx	8a94 <malloc@plt+0x4>
    b326:	str	r0, [sp, #40]	; 0x28
    b328:	cbnz	r0, b34e <_start@@Base+0x20fa>
    b32a:	ldr.w	r0, [pc, #1804]	; ba38 <_start@@Base+0x27e4>
    b32e:	mvn.w	r4, #11
    b332:	add	r0, pc
    b334:	bl	1a900 <__btrfs_error@@Base>
    b338:	ldr.w	r3, [sp, #2000]	; 0x7d0
    b33c:	cmp	r3, #0
    b33e:	beq.n	b2c6 <_start@@Base+0x2072>
    b340:	ldr	r3, [sp, #36]	; 0x24
    b342:	cmp	r3, #0
    b344:	beq.n	b2c6 <_start@@Base+0x2072>
    b346:	ldr	r0, [r3, #32]
    b348:	bl	9ab2 <_start@@Base+0x85e>
    b34c:	b.n	b2c6 <_start@@Base+0x2072>
    b34e:	add	r5, sp, #552	; 0x228
    b350:	mov.w	r2, #352	; 0x160
    b354:	movs	r1, #0
    b356:	movs	r6, #0
    b358:	mov	r0, r5
    b35a:	blx	8bf8 <memset@plt+0x4>
    b35e:	movs	r1, #0
    b360:	add	r0, sp, #720	; 0x2d0
    b362:	blx	88f0 <pthread_cond_init@plt>
    b366:	movs	r1, #0
    b368:	add	r0, sp, #692	; 0x2b4
    b36a:	blx	8848 <pthread_mutex_init@plt>
    b36e:	add	r3, sp, #780	; 0x30c
    b370:	add	r0, sp, #768	; 0x300
    b372:	strd	r3, r3, [r5, #228]	; 0xe4
    b376:	add	r3, sp, #788	; 0x314
    b378:	strd	r3, r3, [r5, #236]	; 0xec
    b37c:	bl	19318 <cache_tree_init@@Base>
    b380:	ldr	r3, [sp, #44]	; 0x2c
    b382:	movs	r2, #0
    b384:	vstr	s18, [r5, #4]
    b388:	str.w	r7, [r5, #332]	; 0x14c
    b38c:	str	r3, [r5, #0]
    b38e:	ldr.w	r3, [sp, #2000]	; 0x7d0
    b392:	str.w	r6, [r5, #220]	; 0xdc
    b396:	strd	r8, r6, [r5, #340]	; 0x154
    b39a:	str.w	r3, [r5, #336]	; 0x150
    b39e:	ldr	r3, [sp, #36]	; 0x24
    b3a0:	str.w	r3, [r5, #348]	; 0x15c
    b3a4:	movs	r3, #0
    b3a6:	strd	r2, r3, [r5, #272]	; 0x110
    b3aa:	strd	r2, r3, [r5, #264]	; 0x108
    b3ae:	ldr	r3, [sp, #68]	; 0x44
    b3b0:	cbnz	r3, b3f4 <_start@@Base+0x21a0>
    b3b2:	orrs.w	r3, r7, r8
    b3b6:	ldr	r2, [sp, #72]	; 0x48
    b3b8:	str	r3, [sp, #216]	; 0xd8
    b3ba:	ldr.w	r3, [pc, #1640]	; ba24 <_start@@Base+0x27d0>
    b3be:	ldr	r3, [r2, r3]
    b3c0:	str	r3, [sp, #220]	; 0xdc
    b3c2:	bne.w	b808 <_start@@Base+0x25b4>
    b3c6:	ldr	r2, [sp, #220]	; 0xdc
    b3c8:	add	r5, sp, #552	; 0x228
    b3ca:	ldr	r3, [r5, #0]
    b3cc:	ldr	r2, [r2, #0]
    b3ce:	cmp	r3, r2
    b3d0:	beq.w	b7e8 <_start@@Base+0x2594>
    b3d4:	ldr	r0, [sp, #40]	; 0x28
    b3d6:	movs	r2, #1
    b3d8:	mov.w	r1, #1024	; 0x400
    b3dc:	blx	8a20 <fread@plt>
    b3e0:	cmp	r0, #0
    b3e2:	bgt.n	b43c <_start@@Base+0x21e8>
    b3e4:	ldr.w	r0, [pc, #1620]	; ba3c <_start@@Base+0x27e8>
    b3e8:	add	r0, pc
    b3ea:	bl	1a900 <__btrfs_error@@Base>
    b3ee:	mvn.w	r4, #4
    b3f2:	b.n	b4ac <_start@@Base+0x2258>
    b3f4:	ldr.w	sl, [pc, #1608]	; ba40 <_start@@Base+0x27ec>
    b3f8:	mov	r9, r5
    b3fa:	ldr	r3, [sp, #68]	; 0x44
    b3fc:	add	sl, pc
    b3fe:	str.w	r3, [r5, #136]	; 0x88
    b402:	ldr	r3, [sp, #68]	; 0x44
    b404:	cmp	r3, r6
    b406:	ble.n	b3b2 <_start@@Base+0x215e>
    b408:	add.w	r0, r5, #8
    b40c:	movs	r1, #0
    b40e:	mov	r3, r9
    b410:	mov	r2, sl
    b412:	blx	8a38 <pthread_create@plt>
    b416:	adds	r5, #4
    b418:	adds	r1, r6, #1
    b41a:	cbz	r0, b438 <_start@@Base+0x21e4>
    b41c:	negs	r4, r0
    b41e:	mov	r0, r9
    b420:	bl	9a1c <_start@@Base+0x7c8>
    b424:	ldr.w	r0, [pc, #1564]	; ba44 <_start@@Base+0x27f0>
    b428:	mov	r1, r4
    b42a:	add	r0, pc
    b42c:	bl	1a900 <__btrfs_error@@Base>
    b430:	ldr	r0, [sp, #40]	; 0x28
    b432:	blx	87cc <free@plt+0x4>
    b436:	b.n	b338 <_start@@Base+0x20e4>
    b438:	mov	r6, r1
    b43a:	b.n	b402 <_start@@Base+0x21ae>
    b43c:	ldr	r3, [sp, #40]	; 0x28
    b43e:	addw	r1, pc, #1480	; 0x5c8
    b442:	ldrd	r0, r1, [r1]
    b446:	ldrd	r2, r3, [r3]
    b44a:	strd	r0, r1, [sp, #232]	; 0xe8
    b44e:	cmp	r3, r1
    b450:	it	eq
    b452:	cmpeq	r2, r0
    b454:	bne.n	b464 <_start@@Base+0x2210>
    b456:	ldr	r3, [sp, #40]	; 0x28
    b458:	ldrd	r3, r4, [r3, #8]
    b45c:	strd	r3, r4, [sp, #24]
    b460:	orrs	r3, r4
    b462:	beq.n	b46c <_start@@Base+0x2218>
    b464:	ldr.w	r0, [pc, #1504]	; ba48 <_start@@Base+0x27f4>
    b468:	add	r0, pc
    b46a:	b.n	b3ea <_start@@Base+0x2196>
    b46c:	ldr	r3, [sp, #40]	; 0x28
    b46e:	mov.w	r9, #12
    b472:	ldr	r6, [sp, #216]	; 0xd8
    b474:	ldrb	r3, [r3, #20]
    b476:	mov	r4, r6
    b478:	str.w	r3, [r5, #320]	; 0x140
    b47c:	ldr	r3, [sp, #40]	; 0x28
    b47e:	add.w	r7, r3, #21
    b482:	ldr.w	r8, [r3, #16]
    b486:	cmp	r8, r6
    b488:	bne.n	b4c0 <_start@@Base+0x226c>
    b48a:	cmp	r4, #0
    b48c:	beq.w	c6da <_start@@Base+0x3486>
    b490:	ldr	r3, [r4, #4]
    b492:	ldr	r2, [r4, #0]
    b494:	cmp	r3, #0
    b496:	it	eq
    b498:	cmpeq.w	r2, #65536	; 0x10000
    b49c:	beq.n	b4f6 <_start@@Base+0x22a2>
    b49e:	ldr.w	r0, [pc, #1452]	; ba4c <_start@@Base+0x27f8>
    b4a2:	mvn.w	r4, #21
    b4a6:	add	r0, pc
    b4a8:	bl	1a900 <__btrfs_error@@Base>
    b4ac:	ldr.w	r0, [pc, #1440]	; ba50 <_start@@Base+0x27fc>
    b4b0:	add	r0, pc
    b4b2:	bl	1a900 <__btrfs_error@@Base>
    b4b6:	ldr	r1, [sp, #68]	; 0x44
    b4b8:	add	r0, sp, #552	; 0x228
    b4ba:	bl	9a1c <_start@@Base+0x7c8>
    b4be:	b.n	b430 <_start@@Base+0x21dc>
    b4c0:	ldr	r3, [sp, #40]	; 0x28
    b4c2:	mov	r4, r7
    b4c4:	mla	r3, r9, r6, r3
    b4c8:	ldr.w	r1, [r3, #25]
    b4cc:	ldr.w	r0, [r3, #21]
    b4d0:	cmp	r1, #0
    b4d2:	it	eq
    b4d4:	cmpeq.w	r0, #65536	; 0x10000
    b4d8:	beq.n	b490 <_start@@Base+0x223c>
    b4da:	ldr.w	r1, [r3, #29]
    b4de:	movs	r2, #1
    b4e0:	ldr	r0, [r5, #0]
    b4e2:	adds	r7, #12
    b4e4:	blx	8dac <fseek@plt>
    b4e8:	cbz	r0, b4f2 <_start@@Base+0x229e>
    b4ea:	ldr.w	r0, [pc, #1384]	; ba54 <_start@@Base+0x2800>
    b4ee:	add	r0, pc
    b4f0:	b.n	b3ea <_start@@Base+0x2196>
    b4f2:	adds	r6, #1
    b4f4:	b.n	b486 <_start@@Base+0x2232>
    b4f6:	ldr	r1, [r4, #8]
    b4f8:	mov	r0, r1
    b4fa:	str	r1, [sp, #56]	; 0x38
    b4fc:	blx	8a94 <malloc@plt+0x4>
    b500:	ldr	r1, [sp, #56]	; 0x38
    b502:	mov	r5, r0
    b504:	cbnz	r0, b516 <_start@@Base+0x22c2>
    b506:	ldr.w	r0, [pc, #1360]	; ba58 <_start@@Base+0x2804>
    b50a:	add	r0, pc
    b50c:	bl	1a900 <__btrfs_error@@Base>
    b510:	mvn.w	r4, #11
    b514:	b.n	b4ac <_start@@Base+0x2258>
    b516:	movs	r2, #1
    b518:	ldr	r3, [sp, #552]	; 0x228
    b51a:	blx	8a20 <fread@plt>
    b51e:	add	r6, sp, #552	; 0x228
    b520:	cmp	r0, #1
    b522:	beq.n	b536 <_start@@Base+0x22e2>
    b524:	ldr.w	r0, [pc, #1332]	; ba5c <_start@@Base+0x2808>
    b528:	add	r0, pc
    b52a:	bl	1a900 <__btrfs_error@@Base>
    b52e:	mov	r0, r5
    b530:	blx	87cc <free@plt+0x4>
    b534:	b.n	b3ee <_start@@Base+0x219a>
    b536:	ldr.w	r3, [r6, #320]	; 0x140
    b53a:	cmp	r3, #1
    b53c:	bne.n	b580 <_start@@Base+0x232c>
    b53e:	add	r7, sp, #376	; 0x178
    b540:	mov.w	r0, #4096	; 0x1000
    b544:	str	r0, [r7, #0]
    b546:	blx	8a94 <malloc@plt+0x4>
    b54a:	mov	r6, r0
    b54c:	cbnz	r0, b556 <_start@@Base+0x2302>
    b54e:	mov	r0, r5
    b550:	blx	87cc <free@plt+0x4>
    b554:	b.n	b510 <_start@@Base+0x22bc>
    b556:	mov	r1, r7
    b558:	ldr	r3, [r4, #8]
    b55a:	mov	r2, r5
    b55c:	blx	886c <uncompress@plt>
    b560:	mov	r1, r0
    b562:	cbz	r0, b578 <_start@@Base+0x2324>
    b564:	ldr.w	r0, [pc, #1272]	; ba60 <_start@@Base+0x280c>
    b568:	add	r0, pc
    b56a:	bl	1a900 <__btrfs_error@@Base>
    b56e:	mov	r0, r5
    b570:	blx	87cc <free@plt+0x4>
    b574:	mov	r0, r6
    b576:	b.n	b530 <_start@@Base+0x22dc>
    b578:	mov	r0, r5
    b57a:	mov	r5, r6
    b57c:	blx	87cc <free@plt+0x4>
    b580:	add	r0, sp, #692	; 0x2b4
    b582:	blx	87f0 <pthread_mutex_lock@plt>
    b586:	movs	r1, #0
    b588:	mov	r0, r5
    b58a:	bl	1fea0 <btrfs_check_super@@Base>
    b58e:	subs	r4, r0, #0
    b590:	bge.n	b59e <_start@@Base+0x234a>
    b592:	ldr.w	r0, [pc, #1232]	; ba64 <_start@@Base+0x2810>
    b596:	add	r0, pc
    b598:	bl	1a900 <__btrfs_error@@Base>
    b59c:	b.n	b4ac <_start@@Base+0x2258>
    b59e:	ldr.w	r8, [r5, #160]	; 0xa0
    b5a2:	movs	r4, #0
    b5a4:	addw	r7, r5, #811	; 0x32b
    b5a8:	add.w	sl, sp, #768	; 0x300
    b5ac:	mov	fp, r4
    b5ae:	cmp	r8, fp
    b5b0:	bls.n	b5d0 <_start@@Base+0x237c>
    b5b2:	add.w	r9, fp, #17
    b5b6:	cmp	r8, r9
    b5b8:	bcc.n	b692 <_start@@Base+0x243e>
    b5ba:	ldrb	r1, [r7, #8]
    b5bc:	cmp	r1, #228	; 0xe4
    b5be:	beq.n	b5ec <_start@@Base+0x2398>
    b5c0:	ldr.w	r0, [pc, #1188]	; ba68 <_start@@Base+0x2814>
    b5c4:	mov	r2, r9
    b5c6:	mvn.w	r4, #116	; 0x74
    b5ca:	add	r0, pc
    b5cc:	bl	1a900 <__btrfs_error@@Base>
    b5d0:	add	r0, sp, #768	; 0x300
    b5d2:	add	r6, sp, #552	; 0x228
    b5d4:	bl	1952c <last_cache_extent@@Base>
    b5d8:	cmp	r0, #0
    b5da:	bne.n	b65e <_start@@Base+0x240a>
    b5dc:	ldr.w	r0, [pc, #1164]	; ba6c <_start@@Base+0x2818>
    b5e0:	add	r0, pc
    b5e2:	bl	1a900 <__btrfs_error@@Base>
    b5e6:	mvn.w	r4, #116	; 0x74
    b5ea:	b.n	b67c <_start@@Base+0x2428>
    b5ec:	movs	r0, #1
    b5ee:	bl	9cd4 <_start@@Base+0xa80>
    b5f2:	add.w	r3, r9, r0
    b5f6:	mov	r6, r0
    b5f8:	cmp	r8, r3
    b5fa:	bcc.n	b696 <_start@@Base+0x2442>
    b5fc:	ldrh.w	r1, [r7, #61]	; 0x3d
    b600:	cbnz	r1, b614 <_start@@Base+0x23c0>
    b602:	ldr.w	r0, [pc, #1132]	; ba70 <_start@@Base+0x281c>
    b606:	mov	r2, r9
    b608:	mvn.w	r4, #4
    b60c:	add	r0, pc
    b60e:	bl	1a900 <__btrfs_error@@Base>
    b612:	b.n	b5d0 <_start@@Base+0x237c>
    b614:	mov	r0, r1
    b616:	bl	9cd4 <_start@@Base+0xa80>
    b61a:	add.w	fp, r9, r0
    b61e:	mov	r6, r0
    b620:	cmp	r8, fp
    b622:	bcc.n	b696 <_start@@Base+0x2442>
    b624:	ldr.w	r3, [r7, #41]	; 0x29
    b628:	and.w	r3, r3, #2
    b62c:	str	r3, [sp, #48]	; 0x30
    b62e:	movs	r3, #0
    b630:	str	r3, [sp, #52]	; 0x34
    b632:	ldrd	r2, r3, [sp, #48]	; 0x30
    b636:	orrs	r3, r2
    b638:	beq.n	b658 <_start@@Base+0x2404>
    b63a:	ldr.w	r0, [r7, #17]
    b63e:	ldr.w	r1, [r7, #21]
    b642:	ldr.w	r2, [r7, #9]
    b646:	ldr.w	r3, [r7, #13]
    b64a:	strd	r0, r1, [sp]
    b64e:	mov	r0, sl
    b650:	bl	19570 <add_merge_cache_extent@@Base>
    b654:	subs	r4, r0, #0
    b656:	blt.n	b5d0 <_start@@Base+0x237c>
    b658:	adds	r6, #17
    b65a:	add	r7, r6
    b65c:	b.n	b5ae <_start@@Base+0x235a>
    b65e:	ldrd	r3, r2, [r0, #24]
    b662:	ldrd	r1, r0, [r0, #32]
    b666:	adds	r3, r3, r1
    b668:	adc.w	r2, r0, r2
    b66c:	adds.w	r3, r3, #4294967295	; 0xffffffff
    b670:	adc.w	r2, r2, #4294967295	; 0xffffffff
    b674:	cmp	r4, #0
    b676:	strd	r3, r2, [r6, #280]	; 0x118
    b67a:	bge.n	b6a4 <_start@@Base+0x2450>
    b67c:	ldr	r0, [pc, #1012]	; (ba74 <_start@@Base+0x2820>)
    b67e:	add	r0, pc
    b680:	bl	1a900 <__btrfs_error@@Base>
    b684:	mov	r0, r5
    b686:	blx	87cc <free@plt+0x4>
    b68a:	add	r0, sp, #692	; 0x2b4
    b68c:	blx	8708 <pthread_mutex_unlock@plt>
    b690:	b.n	b4ac <_start@@Base+0x2258>
    b692:	mov	r9, fp
    b694:	movs	r6, #17
    b696:	ldr	r0, [pc, #992]	; (ba78 <_start@@Base+0x2824>)
    b698:	mov	r2, r9
    b69a:	mov	r1, r6
    b69c:	add	r0, pc
    b69e:	bl	1a900 <__btrfs_error@@Base>
    b6a2:	b.n	b5e6 <_start@@Base+0x2392>
    b6a4:	ldr.w	r3, [r5, #148]	; 0x94
    b6a8:	add	r4, sp, #856	; 0x358
    b6aa:	str.w	r3, [r6, #248]	; 0xf8
    b6ae:	movs	r3, #0
    b6b0:	ldr.w	r1, [r5, #188]	; 0xbc
    b6b4:	and.w	r2, r1, #1024	; 0x400
    b6b8:	orrs	r3, r2
    b6ba:	beq.n	b71e <_start@@Base+0x24ca>
    b6bc:	addw	r3, r5, #571	; 0x23b
    b6c0:	addw	r6, r5, #587	; 0x24b
    b6c4:	ldr	r0, [r3, #0]
    b6c6:	adds	r3, #8
    b6c8:	ldr.w	r1, [r3, #-4]
    b6cc:	cmp	r3, r6
    b6ce:	mov	r2, r4
    b6d0:	stmia	r2!, {r0, r1}
    b6d2:	mov	r4, r2
    b6d4:	bne.n	b6c4 <_start@@Base+0x2470>
    b6d6:	addw	r3, r5, #267	; 0x10b
    b6da:	add	r4, sp, #840	; 0x348
    b6dc:	addw	r6, r5, #283	; 0x11b
    b6e0:	ldr	r0, [r3, #0]
    b6e2:	adds	r3, #8
    b6e4:	ldr.w	r1, [r3, #-4]
    b6e8:	cmp	r3, r6
    b6ea:	mov	r2, r4
    b6ec:	stmia	r2!, {r0, r1}
    b6ee:	mov	r4, r2
    b6f0:	bne.n	b6e0 <_start@@Base+0x248c>
    b6f2:	ldr.w	r2, [r5, #201]	; 0xc9
    b6f6:	add	r4, sp, #552	; 0x228
    b6f8:	ldr.w	r3, [r5, #205]	; 0xcd
    b6fc:	mov	r0, r5
    b6fe:	strd	r2, r3, [r4, #256]	; 0x100
    b702:	blx	87cc <free@plt+0x4>
    b706:	add	r0, sp, #692	; 0x2b4
    b708:	blx	8708 <pthread_mutex_unlock@plt>
    b70c:	mov.w	r0, #1024	; 0x400
    b710:	blx	8a94 <malloc@plt+0x4>
    b714:	mov	fp, r0
    b716:	cbnz	r0, b72a <_start@@Base+0x24d6>
    b718:	ldr	r0, [pc, #864]	; (ba7c <_start@@Base+0x2828>)
    b71a:	add	r0, pc
    b71c:	b.n	b50c <_start@@Base+0x22b8>
    b71e:	add.w	r3, r5, #32
    b722:	ldmia	r3, {r0, r1, r2, r3}
    b724:	stmia.w	r4, {r0, r1, r2, r3}
    b728:	b.n	b6d6 <_start@@Base+0x2482>
    b72a:	mov.w	r0, #524288	; 0x80000
    b72e:	blx	8a94 <malloc@plt+0x4>
    b732:	mov	r6, r0
    b734:	cbnz	r0, b742 <_start@@Base+0x24ee>
    b736:	ldr	r0, [pc, #840]	; (ba80 <_start@@Base+0x282c>)
    b738:	add	r0, pc
    b73a:	bl	1a900 <__btrfs_error@@Base>
    b73e:	mov	r0, fp
    b740:	b.n	b550 <_start@@Base+0x22fc>
    b742:	ldr.w	r3, [r4, #320]	; 0x140
    b746:	cmp	r3, #1
    b748:	bne.n	b76a <_start@@Base+0x2516>
    b74a:	mov.w	r0, #524288	; 0x80000
    b74e:	blx	8a94 <malloc@plt+0x4>
    b752:	vmov	s16, r0
    b756:	cbnz	r0, b76e <_start@@Base+0x251a>
    b758:	ldr	r0, [pc, #808]	; (ba84 <_start@@Base+0x2830>)
    b75a:	add	r0, pc
    b75c:	bl	1a900 <__btrfs_error@@Base>
    b760:	mov	r0, fp
    b762:	blx	87cc <free@plt+0x4>
    b766:	mov	r0, r6
    b768:	b.n	b550 <_start@@Base+0x22fc>
    b76a:	vldr	s16, [pc, #676]	; ba10 <_start@@Base+0x27bc>
    b76e:	ldr	r3, [pc, #792]	; (ba88 <_start@@Base+0x2834>)
    b770:	add	r3, pc
    b772:	vmov	s20, r3
    b776:	ldr	r1, [sp, #24]
    b778:	movs	r2, #0
    b77a:	ldr	r0, [sp, #552]	; 0x228
    b77c:	add	r7, sp, #552	; 0x228
    b77e:	blx	8dac <fseek@plt>
    b782:	mov	r5, r0
    b784:	cbz	r0, b790 <_start@@Base+0x253c>
    b786:	ldr	r0, [pc, #772]	; (ba8c <_start@@Base+0x2838>)
    b788:	add	r0, pc
    b78a:	bl	1a900 <__btrfs_error@@Base>
    b78e:	b.n	b7ba <_start@@Base+0x2566>
    b790:	ldr	r3, [r7, #0]
    b792:	movs	r2, #1
    b794:	mov.w	r1, #1024	; 0x400
    b798:	mov	r0, fp
    b79a:	blx	8a20 <fread@plt>
    b79e:	subs	r4, r0, #0
    b7a0:	bne.n	b7c0 <_start@@Base+0x256c>
    b7a2:	ldr	r0, [r7, #0]
    b7a4:	blx	8b64 <feof@plt>
    b7a8:	cmp	r0, #0
    b7aa:	bne.w	bcf0 <_start@@Base+0x2a9c>
    b7ae:	ldr	r0, [pc, #736]	; (ba90 <_start@@Base+0x283c>)
    b7b0:	ldrd	r2, r3, [sp, #24]
    b7b4:	add	r0, pc
    b7b6:	bl	1a900 <__btrfs_error@@Base>
    b7ba:	mvn.w	r4, #4
    b7be:	b.n	b7ce <_start@@Base+0x257a>
    b7c0:	bge.n	b8c0 <_start@@Base+0x266c>
    b7c2:	ldr	r0, [pc, #720]	; (ba94 <_start@@Base+0x2840>)
    b7c4:	ldrd	r2, r3, [sp, #24]
    b7c8:	add	r0, pc
    b7ca:	bl	1a900 <__btrfs_error@@Base>
    b7ce:	vmov	r0, s16
    b7d2:	blx	87cc <free@plt+0x4>
    b7d6:	mov	r0, r6
    b7d8:	blx	87cc <free@plt+0x4>
    b7dc:	mov	r0, fp
    b7de:	blx	87cc <free@plt+0x4>
    b7e2:	cmp	r4, #0
    b7e4:	bne.w	b4ac <_start@@Base+0x2258>
    b7e8:	ldr	r2, [sp, #788]	; 0x314
    b7ea:	add	r3, sp, #788	; 0x314
    b7ec:	cmp	r2, r3
    b7ee:	beq.n	b808 <_start@@Base+0x25b4>
    b7f0:	ldr.w	r9, [pc, #676]	; ba98 <_start@@Base+0x2844>
    b7f4:	mov.w	sl, #0
    b7f8:	mov.w	fp, #64	; 0x40
    b7fc:	add	r9, pc
    b7fe:	ldr	r6, [sp, #788]	; 0x314
    b800:	add	r3, sp, #788	; 0x314
    b802:	cmp	r6, r3
    b804:	bne.w	bcf4 <_start@@Base+0x2aa0>
    b808:	ldr	r3, [sp, #220]	; 0xdc
    b80a:	ldr	r2, [sp, #44]	; 0x2c
    b80c:	ldr	r3, [r3, #0]
    b80e:	cmp	r3, r2
    b810:	bne.w	bdae <_start@@Base+0x2b5a>
    b814:	mov.w	sl, #0
    b818:	mov.w	fp, #0
    b81c:	mov.w	r9, #12
    b820:	ldr	r6, [sp, #880]	; 0x370
    b822:	add	r4, sp, #552	; 0x228
    b824:	cbnz	r6, b862 <_start@@Base+0x260e>
    b826:	ldr	r3, [sp, #44]	; 0x2c
    b828:	movs	r2, #1
    b82a:	ldr	r0, [sp, #40]	; 0x28
    b82c:	mov.w	r1, #1024	; 0x400
    b830:	blx	8a20 <fread@plt>
    b834:	cbz	r0, b862 <_start@@Base+0x260e>
    b836:	ldr	r3, [sp, #40]	; 0x28
    b838:	add	r1, pc, #460	; (adr r1, ba08 <_start@@Base+0x27b4>)
    b83a:	ldrd	r0, r1, [r1]
    b83e:	ldrd	r2, r3, [r3]
    b842:	cmp	r3, r1
    b844:	it	eq
    b846:	cmpeq	r2, r0
    b848:	bne.n	b85a <_start@@Base+0x2606>
    b84a:	ldr	r3, [sp, #40]	; 0x28
    b84c:	ldrd	r2, r3, [r3, #8]
    b850:	cmp	r3, fp
    b852:	it	eq
    b854:	cmpeq	r2, sl
    b856:	beq.w	bdce <_start@@Base+0x2b7a>
    b85a:	ldr	r0, [pc, #576]	; (ba9c <_start@@Base+0x2848>)
    b85c:	add	r0, pc
    b85e:	bl	1a900 <__btrfs_error@@Base>
    b862:	add	r5, sp, #692	; 0x2b4
    b864:	add	r6, sp, #552	; 0x228
    b866:	ldr.w	r8, [pc, #568]	; baa0 <_start@@Base+0x284c>
    b86a:	add	r7, sp, #376	; 0x178
    b86c:	mov	r0, r5
    b86e:	blx	87f0 <pthread_mutex_lock@plt>
    b872:	ldr.w	r4, [r6, #328]	; 0x148
    b876:	cbnz	r4, b882 <_start@@Base+0x262e>
    b878:	ldr.w	r3, [r6, #244]	; 0xf4
    b87c:	cmp	r3, #0
    b87e:	bne.w	c012 <_start@@Base+0x2dbe>
    b882:	add	r0, sp, #692	; 0x2b4
    b884:	blx	8708 <pthread_mutex_unlock@plt>
    b888:	ldr	r3, [sp, #216]	; 0xd8
    b88a:	orrs	r3, r4
    b88c:	bne.w	b4b6 <_start@@Base+0x2262>
    b890:	vmov	r0, s18
    b894:	blx	8c84 <fileno@plt>
    b898:	movs	r3, #131	; 0x83
    b89a:	vmov	r1, s17
    b89e:	movs	r2, #0
    b8a0:	str	r3, [sp, #0]
    b8a2:	movs	r3, #0
    b8a4:	bl	217c4 <open_ctree_fd@@Base>
    b8a8:	cmp	r0, #0
    b8aa:	bne.w	c030 <_start@@Base+0x2ddc>
    b8ae:	ldr	r0, [pc, #500]	; (baa4 <_start@@Base+0x2850>)
    b8b0:	mvn.w	r4, #4
    b8b4:	vmov	r1, s17
    b8b8:	add	r0, pc
    b8ba:	bl	1a900 <__btrfs_error@@Base>
    b8be:	b.n	b4b6 <_start@@Base+0x2262>
    b8c0:	ldrd	r2, r3, [fp]
    b8c4:	ldrd	r0, r1, [sp, #232]	; 0xe8
    b8c8:	cmp	r3, r1
    b8ca:	it	eq
    b8cc:	cmpeq	r2, r0
    b8ce:	bne.n	b8e0 <_start@@Base+0x268c>
    b8d0:	ldrd	r2, r3, [fp, #8]
    b8d4:	ldrd	r0, r1, [sp, #24]
    b8d8:	cmp	r1, r3
    b8da:	it	eq
    b8dc:	cmpeq	r0, r2
    b8de:	beq.n	b8e6 <_start@@Base+0x2692>
    b8e0:	ldr	r0, [pc, #452]	; (baa8 <_start@@Base+0x2854>)
    b8e2:	add	r0, pc
    b8e4:	b.n	b78a <_start@@Base+0x2536>
    b8e6:	ldrd	r2, r3, [r7, #280]	; 0x118
    b8ea:	ldrd	r0, r1, [sp, #24]
    b8ee:	cmp	r3, r1
    b8f0:	it	eq
    b8f2:	cmpeq	r2, r0
    b8f4:	bcc.w	bcf0 <_start@@Base+0x2a9c>
    b8f8:	ldr	r3, [sp, #24]
    b8fa:	str	r5, [sp, #64]	; 0x40
    b8fc:	adds.w	r3, r3, #1024	; 0x400
    b900:	str	r3, [sp, #24]
    b902:	ldr	r3, [sp, #28]
    b904:	adc.w	r3, r3, #0
    b908:	str	r3, [sp, #28]
    b90a:	ldr.w	r3, [fp, #16]
    b90e:	str	r3, [sp, #224]	; 0xe0
    b910:	ldr	r3, [sp, #224]	; 0xe0
    b912:	ldr	r2, [sp, #64]	; 0x40
    b914:	cmp	r3, r2
    b916:	bne.n	b948 <_start@@Base+0x26f4>
    b918:	ldr	r3, [sp, #24]
    b91a:	ubfx	r3, r3, #0, #10
    b91e:	str	r3, [sp, #112]	; 0x70
    b920:	movs	r3, #0
    b922:	str	r3, [sp, #116]	; 0x74
    b924:	ldrd	r3, r4, [sp, #112]	; 0x70
    b928:	orrs	r3, r4
    b92a:	beq.w	b776 <_start@@Base+0x2522>
    b92e:	ldr	r3, [sp, #24]
    b930:	ldr	r2, [sp, #28]
    b932:	bic.w	r3, r3, #1020	; 0x3fc
    b936:	bic.w	r3, r3, #3
    b93a:	adds.w	r3, r3, #1024	; 0x400
    b93e:	str	r3, [sp, #24]
    b940:	adc.w	r3, r2, #0
    b944:	str	r3, [sp, #28]
    b946:	b.n	b776 <_start@@Base+0x2522>
    b948:	ldr	r2, [sp, #64]	; 0x40
    b94a:	movs	r3, #12
    b94c:	mla	r3, r3, r2, fp
    b950:	ldr.w	r4, [r3, #29]
    b954:	cmp.w	r4, #524288	; 0x80000
    b958:	bls.n	b97a <_start@@Base+0x2726>
    b95a:	ldr	r0, [sp, #552]	; 0x228
    b95c:	movs	r2, #1
    b95e:	mov	r1, r4
    b960:	blx	8dac <fseek@plt>
    b964:	cmp	r0, #0
    b966:	bge.n	b9cc <_start@@Base+0x2778>
    b968:	ldr	r0, [pc, #320]	; (baac <_start@@Base+0x2858>)
    b96a:	add	r0, pc
    b96c:	bl	1a900 <__btrfs_error@@Base>
    b970:	blx	8bac <__errno_location@plt>
    b974:	ldr	r4, [r0, #0]
    b976:	negs	r4, r4
    b978:	b.n	b7ce <_start@@Base+0x257a>
    b97a:	ldr.w	r2, [r3, #21]
    b97e:	add	r5, sp, #552	; 0x228
    b980:	mov	r0, r5
    b982:	str	r2, [sp, #48]	; 0x30
    b984:	ldr.w	r3, [r3, #25]
    b988:	str	r4, [sp, #0]
    b98a:	str	r4, [sp, #240]	; 0xf0
    b98c:	str	r3, [sp, #52]	; 0x34
    b98e:	movs	r3, #0
    b990:	str	r3, [sp, #4]
    b992:	ldrd	r2, r3, [sp, #48]	; 0x30
    b996:	bl	9978 <_start@@Base+0x724>
    b99a:	cmp	r0, #0
    b99c:	beq.n	b95a <_start@@Base+0x2706>
    b99e:	ldrd	r2, r3, [sp, #48]	; 0x30
    b9a2:	cmp	r3, #0
    b9a4:	it	eq
    b9a6:	cmpeq.w	r2, #65536	; 0x10000
    b9aa:	beq.n	b95a <_start@@Base+0x2706>
    b9ac:	ldr.w	r2, [r5, #320]	; 0x140
    b9b0:	ldr	r3, [r5, #0]
    b9b2:	cmp	r2, #1
    b9b4:	bne.w	bab8 <_start@@Base+0x2864>
    b9b8:	vmov	r0, s16
    b9bc:	mov	r1, r4
    b9be:	blx	8a20 <fread@plt>
    b9c2:	cmp	r0, #1
    b9c4:	beq.n	b9e2 <_start@@Base+0x278e>
    b9c6:	ldr	r0, [pc, #232]	; (bab0 <_start@@Base+0x285c>)
    b9c8:	add	r0, pc
    b9ca:	b.n	b78a <_start@@Base+0x2536>
    b9cc:	ldrd	r2, r3, [sp, #24]
    b9d0:	adds	r2, r2, r4
    b9d2:	adc.w	r3, r3, #0
    b9d6:	strd	r2, r3, [sp, #24]
    b9da:	ldr	r3, [sp, #64]	; 0x40
    b9dc:	adds	r3, #1
    b9de:	str	r3, [sp, #64]	; 0x40
    b9e0:	b.n	b910 <_start@@Base+0x26bc>
    b9e2:	add	r1, sp, #272	; 0x110
    b9e4:	mov.w	r3, #524288	; 0x80000
    b9e8:	vmov	r2, s16
    b9ec:	mov	r0, r6
    b9ee:	str	r3, [r1, #0]
    b9f0:	mov	r3, r4
    b9f2:	blx	886c <uncompress@plt>
    b9f6:	mov	r1, r0
    b9f8:	cmp	r0, #0
    b9fa:	beq.n	bad0 <_start@@Base+0x287c>
    b9fc:	ldr	r0, [pc, #180]	; (bab4 <_start@@Base+0x2860>)
    b9fe:	add	r0, pc
    ba00:	bl	1a900 <__btrfs_error@@Base>
    ba04:	b.n	b7ba <_start@@Base+0x2566>
    ba06:	nop
    ba08:	str	r3, [r1, #104]	; 0x68
    ba0a:	strb	r5, [r2, #10]
    ba0c:	movs	r5, #226	; 0xe2
    ba0e:	pop	{r2, r3, r4, r6, pc}
    ba10:	movs	r0, r0
    ba12:	movs	r0, r0
    ba14:	bge.n	b9e0 <_start@@Base+0x278c>
    ba16:	movs	r5, r0
    ba18:	adds	r3, #98	; 0x62
    ba1a:	movs	r3, r0
    ba1c:	bge.n	b9a4 <_start@@Base+0x2750>
    ba1e:	movs	r5, r0
    ba20:	lsls	r4, r7, #9
    ba22:	movs	r0, r0
    ba24:	lsls	r4, r4, #10
    ba26:	movs	r0, r0
    ba28:	subs	r5, r5, #4
    ba2a:	movs	r3, r0
    ba2c:	ldrb	r6, [r2, #9]
    ba2e:	movs	r3, r0
    ba30:	movs	r0, #151	; 0x97
    ba32:	movs	r3, r0
    ba34:	bge.n	ba90 <_start@@Base+0x283c>
    ba36:	movs	r5, r0
    ba38:	movs	r0, #123	; 0x7b
    ba3a:	movs	r3, r0
    ba3c:	movs	r0, #19
    ba3e:	movs	r3, r0
    ba40:	stmdb	r9, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
    ba44:	subs	r1, r4, #6
    ba46:	movs	r3, r0
    ba48:	subs	r6, r5, #6
    ba4a:	movs	r3, r0
    ba4c:	subs	r5, r3, #6
    ba4e:	movs	r3, r0
    ba50:	movs	r2, #103	; 0x67
    ba52:	movs	r3, r0
    ba54:	subs	r5, r0, #5
    ba56:	movs	r3, r0
    ba58:	subs	r1, r3, #5
    ba5a:	movs	r3, r0
    ba5c:	subs	r0, r4, #5
    ba5e:	movs	r3, r0
    ba60:	subs	r3, r4, r3
    ba62:	movs	r3, r0
    ba64:	subs	r4, r1, #4
    ba66:	movs	r3, r0
    ba68:	subs	r3, r5, #3
    ba6a:	movs	r3, r0
    ba6c:	subs	r3, r7, #4
    ba6e:	movs	r3, r0
    ba70:	subs	r0, r3, #3
    ba72:	movs	r3, r0
    ba74:	subs	r4, r6, #3
    ba76:	movs	r3, r0
    ba78:	subs	r4, r4, #2
    ba7a:	movs	r3, r0
    ba7c:	adds	r3, r2, #2
    ba7e:	movs	r3, r0
    ba80:	subs	r4, r3, #1
    ba82:	movs	r3, r0
    ba84:	subs	r2, r7, #0
    ba86:	movs	r3, r0
    ba88:	bgt.n	bb0a <_start@@Base+0x28b6>
    ba8a:	vmull.u<illegal width 64>	<illegal reg q8.5>, d31, d27
    ba8e:	movs	r3, r0
    ba90:	adds	r5, r7, #7
    ba92:	movs	r3, r0
    ba94:	subs	r6, r5, #0
    ba96:	movs	r3, r0
    ba98:	subs	r6, r6, #4
    ba9a:	movs	r3, r0
    ba9c:	subs	r2, r7, r6
    ba9e:	movs	r3, r0
    baa0:	str	r6, [sp, #512]	; 0x200
    baa2:	lsls	r0, r3, #2
    baa4:	subs	r6, r3, #5
    baa6:	movs	r3, r0
    baa8:	subs	r4, r6, r4
    baaa:	movs	r3, r0
    baac:	adds	r5, r5, #2
    baae:	movs	r3, r0
    bab0:	adds	r2, r4, #1
    bab2:	movs	r3, r0
    bab4:	asrs	r5, r1, #25
    bab6:	movs	r3, r0
    bab8:	str	r3, [sp, #0]
    baba:	mov	r2, r4
    babc:	movs	r3, #1
    babe:	mov.w	r1, #524288	; 0x80000
    bac2:	mov	r0, r6
    bac4:	blx	8cdc <__fread_chk@plt>
    bac8:	cmp	r0, #1
    baca:	bne.w	b9c6 <_start@@Base+0x2772>
    bace:	str	r4, [sp, #272]	; 0x110
    bad0:	ldr	r3, [sp, #272]	; 0x110
    bad2:	movs	r0, #1
    bad4:	str	r3, [sp, #228]	; 0xe4
    bad6:	ldr	r3, [sp, #800]	; 0x320
    bad8:	add.w	r1, r3, #96	; 0x60
    badc:	str	r3, [sp, #56]	; 0x38
    bade:	blx	8718 <calloc@plt+0x4>
    bae2:	mov	r5, r0
    bae4:	cmp	r0, #0
    bae6:	beq.w	bcd8 <_start@@Base+0x2a84>
    baea:	movs	r3, #0
    baec:	movs	r2, #0
    baee:	strd	r2, r3, [r0, #40]	; 0x28
    baf2:	ldr	r3, [sp, #56]	; 0x38
    baf4:	str	r3, [r0, #76]	; 0x4c
    baf6:	movs	r3, #0
    baf8:	str	r3, [sp, #60]	; 0x3c
    bafa:	ldr.w	r3, [pc, #3060]	; c6f0 <_start@@Base+0x349c>
    bafe:	add	r3, pc
    bb00:	vmov	s19, r3
    bb04:	ldr	r3, [sp, #228]	; 0xe4
    bb06:	movs	r4, #0
    bb08:	ldr	r2, [sp, #60]	; 0x3c
    bb0a:	cmp	r3, r2
    bb0c:	bls.n	bb86 <_start@@Base+0x2932>
    bb0e:	ldrd	r8, r9, [sp, #48]	; 0x30
    bb12:	add	r0, sp, #552	; 0x228
    bb14:	ldr	r3, [sp, #60]	; 0x3c
    bb16:	adds.w	r8, r8, r3
    bb1a:	ldr	r3, [sp, #56]	; 0x38
    bb1c:	adc.w	r9, r9, #0
    bb20:	mov	r2, r8
    bb22:	strd	r3, r4, [sp]
    bb26:	mov	r3, r9
    bb28:	bl	9978 <_start@@Base+0x724>
    bb2c:	cbnz	r0, bb38 <_start@@Base+0x28e4>
    bb2e:	ldrd	r2, r3, [sp, #56]	; 0x38
    bb32:	add	r3, r2
    bb34:	str	r3, [sp, #60]	; 0x3c
    bb36:	b.n	bb04 <_start@@Base+0x28b0>
    bb38:	ldrd	r2, r3, [sp, #56]	; 0x38
    bb3c:	add.w	r7, r5, #96	; 0x60
    bb40:	adds	r1, r6, r3
    bb42:	mov	r0, r7
    bb44:	blx	8830 <memcpy@plt+0x4>
    bb48:	ldrd	r2, r3, [r5, #144]	; 0x90
    bb4c:	cmp	r9, r3
    bb4e:	it	eq
    bb50:	cmpeq	r8, r2
    bb52:	beq.n	bb64 <_start@@Base+0x2910>
    bb54:	ldr.w	r0, [pc, #2972]	; c6f4 <_start@@Base+0x34a0>
    bb58:	strd	r8, r9, [sp]
    bb5c:	add	r0, pc
    bb5e:	bl	1a900 <__btrfs_error@@Base>
    bb62:	b.n	bb82 <_start@@Base+0x292e>
    bb64:	add.w	r1, r5, #128	; 0x80
    bb68:	add	r0, sp, #856	; 0x358
    bb6a:	movs	r2, #16
    bb6c:	blx	887c <memcmp@plt+0x4>
    bb70:	mov	r4, r0
    bb72:	cbz	r0, bba6 <_start@@Base+0x2952>
    bb74:	ldr.w	r0, [pc, #2944]	; c6f8 <_start@@Base+0x34a4>
    bb78:	mov	r2, r8
    bb7a:	mov	r3, r9
    bb7c:	add	r0, pc
    bb7e:	bl	1a900 <__btrfs_error@@Base>
    bb82:	mvn.w	r4, #116	; 0x74
    bb86:	mov	r0, r5
    bb88:	blx	87cc <free@plt+0x4>
    bb8c:	cmp	r4, #0
    bb8e:	beq.w	bcde <_start@@Base+0x2a8a>
    bb92:	ldr	r3, [sp, #272]	; 0x110
    bb94:	ldr.w	r0, [pc, #2916]	; c6fc <_start@@Base+0x34a8>
    bb98:	str	r3, [sp, #0]
    bb9a:	add	r0, pc
    bb9c:	ldrd	r2, r3, [sp, #48]	; 0x30
    bba0:	bl	1a900 <__btrfs_error@@Base>
    bba4:	b.n	b7ce <_start@@Base+0x257a>
    bba6:	ldrd	r2, r3, [r5, #184]	; 0xb8
    bbaa:	cmp	r3, #0
    bbac:	it	eq
    bbae:	cmpeq	r2, #3
    bbb0:	beq.n	bbc2 <_start@@Base+0x296e>
    bbb2:	ldr.w	r0, [pc, #2892]	; c700 <_start@@Base+0x34ac>
    bbb6:	strd	r2, r3, [sp]
    bbba:	mov	r2, r8
    bbbc:	add	r0, pc
    bbbe:	mov	r3, r9
    bbc0:	b.n	bb5e <_start@@Base+0x290a>
    bbc2:	ldrb.w	r3, [r5, #196]	; 0xc4
    bbc6:	cmp	r3, #0
    bbc8:	bne.n	bb2e <_start@@Base+0x28da>
    bbca:	add	r3, sp, #376	; 0x178
    bbcc:	str	r3, [sp, #76]	; 0x4c
    bbce:	ldr.w	r3, [r5, #192]	; 0xc0
    bbd2:	cmp	r4, r3
    bbd4:	bcs.n	bb2e <_start@@Base+0x28da>
    bbd6:	ldr	r1, [sp, #76]	; 0x4c
    bbd8:	mov	r2, r4
    bbda:	mov	r0, r5
    bbdc:	bl	94a0 <_start@@Base+0x24c>
    bbe0:	ldr	r3, [sp, #76]	; 0x4c
    bbe2:	ldrb	r3, [r3, #8]
    bbe4:	cmp	r3, #228	; 0xe4
    bbe6:	bne.n	bccc <_start@@Base+0x2a78>
    bbe8:	movs	r0, #64	; 0x40
    bbea:	blx	8a94 <malloc@plt+0x4>
    bbee:	mov	r8, r0
    bbf0:	cbnz	r0, bc02 <_start@@Base+0x29ae>
    bbf2:	ldr.w	r0, [pc, #2832]	; c704 <_start@@Base+0x34b0>
    bbf6:	mvn.w	r4, #11
    bbfa:	add	r0, pc
    bbfc:	bl	1a900 <__btrfs_error@@Base>
    bc00:	b.n	bb86 <_start@@Base+0x2932>
    bc02:	movs	r2, #48	; 0x30
    bc04:	movs	r1, #0
    bc06:	adds	r0, #16
    bc08:	blx	8bf8 <memset@plt+0x4>
    bc0c:	add.w	r3, r5, #197	; 0xc5
    bc10:	movs	r2, #25
    bc12:	add.w	r1, r8, #44	; 0x2c
    bc16:	mla	r3, r2, r4, r3
    bc1a:	ldr.w	r9, [r3, #17]
    bc1e:	ldr	r3, [sp, #76]	; 0x4c
    bc20:	ldr.w	r2, [r3, #9]
    bc24:	ldr.w	r3, [r3, #13]
    bc28:	strd	r2, r3, [r8]
    bc2c:	add.w	r3, r7, r9
    bc30:	ldr.w	r2, [r3, #157]!
    bc34:	ldr	r3, [r3, #4]
    bc36:	strd	r2, r3, [r8, #8]
    bc3a:	add.w	r3, r9, #101	; 0x65
    bc3e:	adds	r2, r7, r3
    bc40:	str	r2, [sp, #80]	; 0x50
    bc42:	ldr	r2, [r7, r3]
    bc44:	ldr	r3, [sp, #80]	; 0x50
    bc46:	ldr	r3, [r3, #4]
    bc48:	strd	r2, r3, [r8, #24]
    bc4c:	add.w	r3, r8, #56	; 0x38
    bc50:	strd	r3, r3, [r8, #56]	; 0x38
    bc54:	mov	sl, r3
    bc56:	ldr	r3, [sp, #776]	; 0x308
    bc58:	cbnz	r3, bc68 <_start@@Base+0x2a14>
    bc5a:	vmov	r2, s20
    bc5e:	add	r0, sp, #776	; 0x308
    bc60:	bl	9b24 <_start@@Base+0x8d0>
    bc64:	b.w	c67a <_start@@Base+0x3426>
    bc68:	mov	r0, r3
    bc6a:	movs	r2, #1
    bc6c:	str	r3, [sp, #244]	; 0xf4
    bc6e:	bl	93b2 <_start@@Base+0x15e>
    bc72:	ldr	r3, [sp, #244]	; 0xf4
    bc74:	cmp	r0, #0
    bc76:	bge.n	bc7c <_start@@Base+0x2a28>
    bc78:	ldr	r3, [r3, #8]
    bc7a:	b.n	bc58 <_start@@Base+0x2a04>
    bc7c:	beq.w	c666 <_start@@Base+0x3412>
    bc80:	ldr	r3, [r3, #4]
    bc82:	b.n	bc58 <_start@@Base+0x2a04>
    bc84:	ldr.w	r1, [r8, #8]
    bc88:	adds	r1, r0, r1
    bc8a:	str	r1, [sp, #96]	; 0x60
    bc8c:	ldr.w	r1, [r8, #12]
    bc90:	adc.w	r1, ip, r1
    bc94:	str	r1, [sp, #100]	; 0x64
    bc96:	ldrd	r9, sl, [sp, #96]	; 0x60
    bc9a:	cmp	r3, sl
    bc9c:	it	eq
    bc9e:	cmpeq	r2, r9
    bca0:	bcc.w	c6ce <_start@@Base+0x347a>
    bca4:	add	r1, sp, #552	; 0x228
    bca6:	ldrd	r9, sl, [sp, #80]	; 0x50
    bcaa:	ldrd	r3, r2, [r1, #264]	; 0x108
    bcae:	adds	r3, r0, r3
    bcb0:	adc.w	r2, ip, r2
    bcb4:	orrs.w	lr, r9, sl
    bcb8:	bne.n	bcd0 <_start@@Base+0x2a7c>
    bcba:	strd	r3, r2, [r1, #264]	; 0x108
    bcbe:	add	r0, sp, #772	; 0x304
    bcc0:	vmov	r2, s19
    bcc4:	add.w	r1, r8, #32
    bcc8:	bl	9b24 <_start@@Base+0x8d0>
    bccc:	adds	r4, #1
    bcce:	b.n	bbce <_start@@Base+0x297a>
    bcd0:	adds	r3, r0, r3
    bcd2:	adc.w	r2, ip, r2
    bcd6:	b.n	bcba <_start@@Base+0x2a66>
    bcd8:	mvn.w	r4, #11
    bcdc:	b.n	bb92 <_start@@Base+0x293e>
    bcde:	ldr	r3, [sp, #24]
    bce0:	ldr	r2, [sp, #240]	; 0xf0
    bce2:	adds	r3, r3, r2
    bce4:	str	r3, [sp, #24]
    bce6:	ldr	r3, [sp, #28]
    bce8:	adc.w	r3, r3, #0
    bcec:	str	r3, [sp, #28]
    bcee:	b.n	b9da <_start@@Base+0x2786>
    bcf0:	movs	r4, #0
    bcf2:	b.n	b7ce <_start@@Base+0x257a>
    bcf4:	ldrd	r2, r3, [r6]
    bcf8:	str	r3, [r2, #4]
    bcfa:	str	r2, [r3, #0]
    bcfc:	ldrd	r2, r3, [r6, #-48]	; 0x30
    bd00:	ldrd	r1, r0, [r6, #-32]
    bd04:	cmp	r3, #0
    bd06:	strd	r6, r6, [r6]
    bd0a:	it	eq
    bd0c:	cmpeq.w	r2, #65537	; 0x10001
    bd10:	bcs.n	bd36 <_start@@Base+0x2ae2>
    bd12:	adds	r7, r2, r1
    bd14:	str	r7, [sp, #120]	; 0x78
    bd16:	adc.w	r7, r3, r0
    bd1a:	str	r7, [sp, #124]	; 0x7c
    bd1c:	ldrd	r4, r5, [sp, #120]	; 0x78
    bd20:	cmp	r5, #0
    bd22:	it	eq
    bd24:	cmpeq.w	r4, #65537	; 0x10001
    bd28:	bcc.n	bd44 <_start@@Base+0x2af0>
    bd2a:	mov	r0, r9
    bd2c:	bl	1a884 <__btrfs_warning@@Base>
    bd30:	movs	r2, #1
    bd32:	str	r2, [sp, #896]	; 0x380
    bd34:	b.n	bd80 <_start@@Base+0x2b2c>
    bd36:	movs	r5, #0
    bd38:	cmp	r5, r3
    bd3a:	mov.w	r4, #67108864	; 0x4000000
    bd3e:	it	eq
    bd40:	cmpeq	r4, r2
    bd42:	bcc.n	bd78 <_start@@Base+0x2b24>
    bd44:	adds	r7, r2, r1
    bd46:	str	r7, [sp, #128]	; 0x80
    bd48:	adc.w	r7, r3, r0
    bd4c:	str	r7, [sp, #132]	; 0x84
    bd4e:	ldrd	r4, r5, [sp, #128]	; 0x80
    bd52:	mov.w	r8, #0
    bd56:	mov.w	r7, #67108864	; 0x4000000
    bd5a:	cmp	r8, r5
    bd5c:	it	eq
    bd5e:	cmpeq	r7, r4
    bd60:	bcc.n	bd2a <_start@@Base+0x2ad6>
    bd62:	adds	r1, r2, r1
    bd64:	str	r1, [sp, #136]	; 0x88
    bd66:	adcs	r3, r0
    bd68:	str	r3, [sp, #140]	; 0x8c
    bd6a:	ldrd	r3, r4, [sp, #136]	; 0x88
    bd6e:	cmp	fp, r4
    bd70:	it	eq
    bd72:	cmpeq	sl, r3
    bd74:	bcs.n	bd80 <_start@@Base+0x2b2c>
    bd76:	b.n	bd2a <_start@@Base+0x2ad6>
    bd78:	cmp	fp, r3
    bd7a:	it	eq
    bd7c:	cmpeq	sl, r2
    bd7e:	bcs.n	bd62 <_start@@Base+0x2b0e>
    bd80:	ldrd	r2, r3, [sp, #824]	; 0x338
    bd84:	add	r7, sp, #552	; 0x228
    bd86:	sub.w	r1, r6, #12
    bd8a:	add	r0, sp, #776	; 0x308
    bd8c:	strd	r2, r3, [r6, #-48]	; 0x30
    bd90:	ldr.w	r2, [pc, #2420]	; c708 <_start@@Base+0x34b4>
    bd94:	add	r2, pc
    bd96:	bl	9b24 <_start@@Base+0x8d0>
    bd9a:	ldrd	r3, r2, [r7, #272]	; 0x110
    bd9e:	ldrd	r1, r0, [r6, #-32]
    bda2:	adds	r3, r3, r1
    bda4:	adc.w	r2, r0, r2
    bda8:	strd	r3, r2, [r7, #272]	; 0x110
    bdac:	b.n	b7fe <_start@@Base+0x25aa>
    bdae:	movs	r2, #0
    bdb0:	ldr	r0, [sp, #44]	; 0x2c
    bdb2:	mov	r1, r2
    bdb4:	blx	8dac <fseek@plt>
    bdb8:	cmp	r0, #0
    bdba:	beq.w	b814 <_start@@Base+0x25c0>
    bdbe:	ldr.w	r0, [pc, #2380]	; c70c <_start@@Base+0x34b8>
    bdc2:	movs	r4, #0
    bdc4:	add	r0, pc
    bdc6:	bl	1a900 <__btrfs_error@@Base>
    bdca:	b.w	b4b6 <_start@@Base+0x2262>
    bdce:	add	r5, sp, #692	; 0x2b4
    bdd0:	mov	r0, r5
    bdd2:	blx	87f0 <pthread_mutex_lock@plt>
    bdd6:	ldr	r3, [sp, #40]	; 0x28
    bdd8:	mov	r0, r5
    bdda:	ldrb	r3, [r3, #20]
    bddc:	str.w	r3, [r4, #320]	; 0x140
    bde0:	blx	8708 <pthread_mutex_unlock@plt>
    bde4:	ldr	r3, [sp, #40]	; 0x28
    bde6:	ldr	r2, [sp, #40]	; 0x28
    bde8:	ldr	r3, [r3, #8]
    bdea:	ldr	r2, [r2, #12]
    bdec:	adds.w	sl, r3, #1024	; 0x400
    bdf0:	ldr	r3, [sp, #40]	; 0x28
    bdf2:	adc.w	fp, r2, #0
    bdf6:	ldr	r7, [r3, #16]
    bdf8:	cmp	r7, r6
    bdfa:	bne.n	be44 <_start@@Base+0x2bf0>
    bdfc:	ubfx	r3, sl, #0, #10
    be00:	str	r3, [sp, #152]	; 0x98
    be02:	movs	r3, #0
    be04:	str	r3, [sp, #156]	; 0x9c
    be06:	ldrd	r3, r4, [sp, #152]	; 0x98
    be0a:	orrs	r3, r4
    be0c:	beq.w	b820 <_start@@Base+0x25cc>
    be10:	ldr	r3, [sp, #552]	; 0x228
    be12:	ubfx	r2, sl, #0, #10
    be16:	rsb	r2, r2, #1024	; 0x400
    be1a:	add	r0, sp, #908	; 0x38c
    be1c:	adds.w	sl, sl, r2
    be20:	movw	r1, #1023	; 0x3ff
    be24:	str	r3, [sp, #0]
    be26:	mov.w	r3, #1
    be2a:	adc.w	fp, fp, #0
    be2e:	blx	8cdc <__fread_chk@plt>
    be32:	cmp	r0, #1
    be34:	beq.w	b820 <_start@@Base+0x25cc>
    be38:	ldr.w	r0, [pc, #2260]	; c710 <_start@@Base+0x34bc>
    be3c:	add	r0, pc
    be3e:	bl	1a900 <__btrfs_error@@Base>
    be42:	b.n	beca <_start@@Base+0x2c76>
    be44:	movs	r1, #48	; 0x30
    be46:	movs	r0, #1
    be48:	blx	8718 <calloc@plt+0x4>
    be4c:	mov	r4, r0
    be4e:	cbnz	r0, be6c <_start@@Base+0x2c18>
    be50:	ldr.w	r0, [pc, #2240]	; c714 <_start@@Base+0x34c0>
    be54:	add	r0, pc
    be56:	bl	1a900 <__btrfs_error@@Base>
    be5a:	mvn.w	r5, #11
    be5e:	ldr.w	r0, [pc, #2232]	; c718 <_start@@Base+0x34c4>
    be62:	mov	r1, r5
    be64:	add	r0, pc
    be66:	bl	1a900 <__btrfs_error@@Base>
    be6a:	b.n	b862 <_start@@Base+0x260e>
    be6c:	ldr	r3, [sp, #40]	; 0x28
    be6e:	mla	r3, r9, r6, r3
    be72:	ldr.w	r1, [r3, #21]
    be76:	ldr.w	r2, [r3, #25]
    be7a:	strd	r1, r2, [r0, #16]
    be7e:	ldr.w	r1, [r3, #29]
    be82:	str	r1, [r0, #36]	; 0x24
    be84:	mov	r0, r1
    be86:	str	r1, [sp, #24]
    be88:	blx	8a94 <malloc@plt+0x4>
    be8c:	ldr	r1, [sp, #24]
    be8e:	str	r0, [r4, #32]
    be90:	cbnz	r0, bea4 <_start@@Base+0x2c50>
    be92:	ldr.w	r0, [pc, #2184]	; c71c <_start@@Base+0x34c8>
    be96:	add	r0, pc
    be98:	bl	1a900 <__btrfs_error@@Base>
    be9c:	mov	r0, r4
    be9e:	blx	87cc <free@plt+0x4>
    bea2:	b.n	be5a <_start@@Base+0x2c06>
    bea4:	movs	r2, #1
    bea6:	ldr	r3, [sp, #552]	; 0x228
    bea8:	blx	8a20 <fread@plt>
    beac:	add.w	r8, sp, #552	; 0x228
    beb0:	cmp	r0, #1
    beb2:	beq.n	bed0 <_start@@Base+0x2c7c>
    beb4:	ldr.w	r0, [pc, #2152]	; c720 <_start@@Base+0x34cc>
    beb8:	add	r0, pc
    beba:	bl	1a900 <__btrfs_error@@Base>
    bebe:	ldr	r0, [r4, #32]
    bec0:	blx	87cc <free@plt+0x4>
    bec4:	mov	r0, r4
    bec6:	blx	87cc <free@plt+0x4>
    beca:	mvn.w	r5, #4
    bece:	b.n	be5e <_start@@Base+0x2c0a>
    bed0:	ldr	r3, [r4, #36]	; 0x24
    bed2:	add	r0, sp, #692	; 0x2b4
    bed4:	adds.w	sl, sl, r3
    bed8:	adc.w	fp, fp, #0
    bedc:	blx	87f0 <pthread_mutex_lock@plt>
    bee0:	ldrd	r2, r3, [r4, #16]
    bee4:	cmp	r3, #0
    bee6:	it	eq
    bee8:	cmpeq.w	r2, #65536	; 0x10000
    beec:	bne.n	bfc4 <_start@@Base+0x2d70>
    beee:	ldr.w	r5, [r8, #248]	; 0xf8
    bef2:	cmp	r5, #0
    bef4:	bne.n	bfc4 <_start@@Base+0x2d70>
    bef6:	ldr.w	r3, [r8, #320]	; 0x140
    befa:	cmp	r3, #1
    befc:	bne.n	bfec <_start@@Base+0x2d98>
    befe:	mov.w	r0, #4096	; 0x1000
    bf02:	str	r0, [sp, #376]	; 0x178
    bf04:	blx	8a94 <malloc@plt+0x4>
    bf08:	add.w	r8, sp, #376	; 0x178
    bf0c:	mov	r5, r0
    bf0e:	cmp	r0, #0
    bf10:	beq.n	bfe6 <_start@@Base+0x2d92>
    bf12:	mov	r1, r8
    bf14:	ldrd	r2, r3, [r4, #32]
    bf18:	blx	886c <uncompress@plt>
    bf1c:	mov	r1, r0
    bf1e:	cbz	r0, bf52 <_start@@Base+0x2cfe>
    bf20:	ldr.w	r0, [pc, #2048]	; c724 <_start@@Base+0x34d0>
    bf24:	add	r0, pc
    bf26:	bl	1a900 <__btrfs_error@@Base>
    bf2a:	mov	r0, r5
    bf2c:	blx	87cc <free@plt+0x4>
    bf30:	mvn.w	r5, #4
    bf34:	ldr.w	r0, [pc, #2032]	; c728 <_start@@Base+0x34d4>
    bf38:	add	r0, pc
    bf3a:	bl	1a900 <__btrfs_error@@Base>
    bf3e:	add	r0, sp, #692	; 0x2b4
    bf40:	blx	8708 <pthread_mutex_unlock@plt>
    bf44:	ldr	r0, [r4, #32]
    bf46:	blx	87cc <free@plt+0x4>
    bf4a:	mov	r0, r4
    bf4c:	blx	87cc <free@plt+0x4>
    bf50:	b.n	be5e <_start@@Base+0x2c0a>
    bf52:	mov	r3, r5
    bf54:	ldr.w	r1, [r3, #148]	; 0x94
    bf58:	str	r1, [sp, #800]	; 0x320
    bf5a:	ldr.w	r2, [r3, #188]	; 0xbc
    bf5e:	and.w	r2, r2, #1024	; 0x400
    bf62:	str	r2, [sp, #144]	; 0x90
    bf64:	movs	r2, #0
    bf66:	str	r2, [sp, #148]	; 0x94
    bf68:	ldrd	r1, r2, [sp, #144]	; 0x90
    bf6c:	orrs	r2, r1
    bf6e:	add	r2, sp, #856	; 0x358
    bf70:	beq.n	bff0 <_start@@Base+0x2d9c>
    bf72:	addw	ip, r3, #571	; 0x23b
    bf76:	addw	r8, r3, #587	; 0x24b
    bf7a:	ldr.w	r0, [ip]
    bf7e:	add.w	ip, ip, #8
    bf82:	ldr.w	r1, [ip, #-4]
    bf86:	cmp	ip, r8
    bf88:	mov	lr, r2
    bf8a:	stmia.w	lr!, {r0, r1}
    bf8e:	mov	r2, lr
    bf90:	bne.n	bf7a <_start@@Base+0x2d26>
    bf92:	addw	r2, r3, #267	; 0x10b
    bf96:	add.w	lr, sp, #840	; 0x348
    bf9a:	addw	r8, r3, #283	; 0x11b
    bf9e:	ldr	r0, [r2, #0]
    bfa0:	adds	r2, #8
    bfa2:	ldr.w	r1, [r2, #-4]
    bfa6:	cmp	r2, r8
    bfa8:	mov	ip, lr
    bfaa:	stmia.w	ip!, {r0, r1}
    bfae:	mov	lr, ip
    bfb0:	bne.n	bf9e <_start@@Base+0x2d4a>
    bfb2:	ldr.w	r1, [r3, #201]	; 0xc9
    bfb6:	mov	r0, r5
    bfb8:	ldr.w	r2, [r3, #205]	; 0xcd
    bfbc:	strd	r1, r2, [sp, #808]	; 0x328
    bfc0:	blx	87cc <free@plt+0x4>
    bfc4:	ldr	r2, [sp, #784]	; 0x310
    bfc6:	add	r1, sp, #780	; 0x30c
    bfc8:	str	r4, [sp, #784]	; 0x310
    bfca:	add	r0, sp, #720	; 0x2d0
    bfcc:	adds	r6, #1
    bfce:	strd	r1, r2, [r4]
    bfd2:	str	r4, [r2, #0]
    bfd4:	ldr	r2, [sp, #796]	; 0x31c
    bfd6:	adds	r2, #1
    bfd8:	str	r2, [sp, #796]	; 0x31c
    bfda:	blx	8dfc <pthread_cond_signal@plt>
    bfde:	add	r0, sp, #692	; 0x2b4
    bfe0:	blx	8708 <pthread_mutex_unlock@plt>
    bfe4:	b.n	bdf8 <_start@@Base+0x2ba4>
    bfe6:	mvn.w	r5, #11
    bfea:	b.n	bf34 <_start@@Base+0x2ce0>
    bfec:	ldr	r3, [r4, #32]
    bfee:	b.n	bf54 <_start@@Base+0x2d00>
    bff0:	add.w	ip, r3, #32
    bff4:	add.w	r8, r3, #48	; 0x30
    bff8:	ldr.w	r0, [ip]
    bffc:	add.w	ip, ip, #8
    c000:	ldr.w	r1, [ip, #-4]
    c004:	cmp	ip, r8
    c006:	mov	lr, r2
    c008:	stmia.w	lr!, {r0, r1}
    c00c:	mov	r2, lr
    c00e:	bne.n	bff8 <_start@@Base+0x2da4>
    c010:	b.n	bf92 <_start@@Base+0x2d3e>
    c012:	mov	r0, r5
    c014:	strd	r4, r8, [r7]
    c018:	blx	8708 <pthread_mutex_unlock@plt>
    c01c:	mov	r1, r4
    c01e:	mov	r0, r7
    c020:	blx	87fc <nanosleep@plt>
    c024:	mov	r0, r5
    c026:	blx	87f0 <pthread_mutex_lock@plt>
    c02a:	ldr.w	r4, [r6, #328]	; 0x148
    c02e:	b.n	b876 <_start@@Base+0x2622>
    c030:	ldr.w	r3, [r0, #464]	; 0x1d0
    c034:	add	r1, sp, #272	; 0x110
    c036:	vmov	r0, s17
    c03a:	str	r3, [sp, #36]	; 0x24
    c03c:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
    c040:	cbz	r0, c062 <_start@@Base+0x2e0e>
    c042:	ldr.w	r0, [pc, #1768]	; c72c <_start@@Base+0x34d8>
    c046:	vmov	r1, s17
    c04a:	add	r0, pc
    c04c:	bl	1a900 <__btrfs_error@@Base>
    c050:	ldr	r3, [sp, #36]	; 0x24
    c052:	ldr	r0, [r3, #32]
    c054:	bl	9ab2 <_start@@Base+0x85e>
    c058:	ldr	r0, [sp, #40]	; 0x28
    c05a:	blx	87cc <free@plt+0x4>
    c05e:	b.w	b2fa <_start@@Base+0x20a6>
    c062:	vmov	r0, s18
    c066:	blx	8c84 <fileno@plt>
    c06a:	ldr	r3, [sp, #36]	; 0x24
    c06c:	ldr.w	r1, [r3, #308]	; 0x134
    c070:	ldr	r2, [r1, #96]	; 0x60
    c072:	ldr	r3, [r1, #100]	; 0x64
    c074:	orrs	r3, r2
    c076:	vmov	s17, r0
    c07a:	beq.n	c086 <_start@@Base+0x2e32>
    c07c:	ldr.w	r0, [pc, #1712]	; c730 <_start@@Base+0x34dc>
    c080:	add	r0, pc
    c082:	bl	1a884 <__btrfs_warning@@Base>
    c086:	ldr	r3, [sp, #36]	; 0x24
    c088:	movs	r1, #1
    c08a:	ldr	r0, [r3, #28]
    c08c:	bl	2e404 <btrfs_start_transaction@@Base>
    c090:	cmn.w	r0, #4096	; 0x1000
    c094:	mov	r8, r0
    c096:	bls.n	c0b2 <_start@@Base+0x2e5e>
    c098:	mov	r4, r0
    c09a:	mov	r1, r0
    c09c:	ldr.w	r0, [pc, #1684]	; c734 <_start@@Base+0x34e0>
    c0a0:	add	r0, pc
    c0a2:	bl	1a900 <__btrfs_error@@Base>
    c0a6:	ldr	r3, [sp, #36]	; 0x24
    c0a8:	ldr	r0, [r3, #32]
    c0aa:	bl	9ab2 <_start@@Base+0x85e>
    c0ae:	b.w	b4b6 <_start@@Base+0x2262>
    c0b2:	ldr	r1, [sp, #36]	; 0x24
    c0b4:	movs	r2, #0
    c0b6:	movs	r3, #0
    c0b8:	ldr.w	r7, [pc, #1660]	; c738 <_start@@Base+0x34e4>
    c0bc:	add.w	r0, r1, #228	; 0xe4
    c0c0:	movs	r4, #0
    c0c2:	bl	19460 <search_cache_extent@@Base>
    c0c6:	add	r7, pc
    c0c8:	mov	r6, r4
    c0ca:	mov	r5, r0
    c0cc:	cmp	r5, #0
    c0ce:	bne.n	c15e <_start@@Base+0x2f0a>
    c0d0:	ldr.w	fp, [r8]
    c0d4:	add	r7, sp, #484	; 0x1e4
    c0d6:	add	r6, sp, #376	; 0x178
    c0d8:	mov	r0, r7
    c0da:	ldr.w	r3, [fp, #308]	; 0x134
    c0de:	ldr.w	r9, [fp, #36]	; 0x24
    c0e2:	ldr.w	r2, [r3, #201]!
    c0e6:	ldr.w	sl, [r3, #4]
    c0ea:	vmov	s16, r2
    c0ee:	movs	r3, #0
    c0f0:	movs	r2, #1
    c0f2:	strb.w	r5, [sp, #385]	; 0x181
    c0f6:	strd	r2, r3, [r6]
    c0fa:	movs	r3, #204	; 0xcc
    c0fc:	strb.w	r5, [sp, #386]	; 0x182
    c100:	strb	r3, [r6, #8]
    c102:	strb.w	r5, [sp, #387]	; 0x183
    c106:	strb.w	r5, [sp, #388]	; 0x184
    c10a:	strb.w	r5, [sp, #389]	; 0x185
    c10e:	strb.w	r5, [sp, #390]	; 0x186
    c112:	strb.w	r5, [sp, #391]	; 0x187
    c116:	strb.w	r5, [sp, #392]	; 0x188
    c11a:	bl	1b2cc <btrfs_init_path@@Base>
    c11e:	mov.w	r3, #4294967295	; 0xffffffff
    c122:	movs	r1, #1
    c124:	mov	r2, r6
    c126:	strd	r3, r1, [sp]
    c12a:	mov	r0, r8
    c12c:	mov	r3, r7
    c12e:	mov	r1, r9
    c130:	bl	1d6c0 <btrfs_search_slot@@Base>
    c134:	subs	r4, r0, #0
    c136:	bge.n	c208 <_start@@Base+0x2fb4>
    c138:	blx	8bac <__errno_location@plt>
    c13c:	negs	r3, r4
    c13e:	str	r3, [r0, #0]
    c140:	ldr.w	r0, [pc, #1528]	; c73c <_start@@Base+0x34e8>
    c144:	add	r0, pc
    c146:	bl	1a900 <__btrfs_error@@Base>
    c14a:	blx	8bac <__errno_location@plt>
    c14e:	negs	r3, r4
    c150:	str	r3, [r0, #0]
    c152:	ldr.w	r0, [pc, #1516]	; c740 <_start@@Base+0x34ec>
    c156:	add	r0, pc
    c158:	bl	1a900 <__btrfs_error@@Base>
    c15c:	b.n	c24c <_start@@Base+0x2ff8>
    c15e:	ldrd	r2, r3, [r5, #24]
    c162:	ldr	r0, [sp, #36]	; 0x24
    c164:	bl	2233c <btrfs_lookup_block_group@@Base>
    c168:	cbnz	r0, c17e <_start@@Base+0x2f2a>
    c16a:	ldrd	r2, r3, [r5, #24]
    c16e:	mov	r0, r7
    c170:	bl	1a884 <__btrfs_warning@@Base>
    c174:	mov	r0, r5
    c176:	bl	19534 <next_cache_extent@@Base>
    c17a:	mov	r5, r0
    c17c:	b.n	c0cc <_start@@Base+0x2e78>
    c17e:	ldrd	sl, fp, [r5, #40]	; 0x28
    c182:	ldrd	r2, r3, [r0, #96]	; 0x60
    c186:	cmp	fp, r3
    c188:	it	eq
    c18a:	cmpeq	sl, r2
    c18c:	beq.n	c174 <_start@@Base+0x2f20>
    c18e:	strd	sl, fp, [r0, #96]	; 0x60
    c192:	movs	r1, #1
    c194:	ldrd	r2, r3, [r5, #24]
    c198:	and.w	r9, sl, #2040	; 0x7f8
    c19c:	str	r1, [sp, #8]
    c19e:	ldrd	r1, r0, [r5, #32]
    c1a2:	adds	r1, r2, r1
    c1a4:	adc.w	r0, r3, r0
    c1a8:	adds.w	r1, r1, #4294967295	; 0xffffffff
    c1ac:	adc.w	r0, r0, #4294967295	; 0xffffffff
    c1b0:	strd	r1, r0, [sp]
    c1b4:	ldr	r1, [sp, #36]	; 0x24
    c1b6:	add.w	r0, r1, #128	; 0x80
    c1ba:	bl	19d40 <set_extent_bits@@Base>
    c1be:	ldr	r3, [r5, #40]	; 0x28
    c1c0:	and.w	r3, r3, #1
    c1c4:	strd	r3, r4, [sp, #160]	; 0xa0
    c1c8:	ldrd	r2, r3, [sp, #160]	; 0xa0
    c1cc:	orrs	r3, r2
    c1ce:	itt	ne
    c1d0:	ldrne	r3, [sp, #36]	; 0x24
    c1d2:	strdne	r9, r4, [r3, #248]	; 0xf8
    c1d6:	ldr	r3, [r5, #40]	; 0x28
    c1d8:	and.w	r3, r3, #4
    c1dc:	strd	r3, r6, [sp, #168]	; 0xa8
    c1e0:	ldrd	r2, r3, [sp, #168]	; 0xa8
    c1e4:	orrs	r3, r2
    c1e6:	itt	ne
    c1e8:	ldrne	r3, [sp, #36]	; 0x24
    c1ea:	strdne	r9, r4, [r3, #256]	; 0x100
    c1ee:	ldr	r3, [r5, #40]	; 0x28
    c1f0:	and.w	r3, r3, #2
    c1f4:	strd	r3, r4, [sp, #176]	; 0xb0
    c1f8:	ldrd	r2, r3, [sp, #176]	; 0xb0
    c1fc:	orrs	r3, r2
    c1fe:	itt	ne
    c200:	ldrne	r3, [sp, #36]	; 0x24
    c202:	strdne	r9, r4, [r3, #264]	; 0x108
    c206:	b.n	c174 <_start@@Base+0x2f20>
    c208:	ldr	r3, [r7, #0]
    c20a:	ldr	r2, [r7, #32]
    c20c:	ldr.w	r1, [r3, #192]	; 0xc0
    c210:	cmp	r1, r2
    c212:	bhi.n	c296 <_start@@Base+0x3042>
    c214:	strb.w	r5, [r7, #65]	; 0x41
    c218:	mov	r1, r7
    c21a:	ldr.w	r0, [r9, #464]	; 0x1d0
    c21e:	str	r3, [sp, #48]	; 0x30
    c220:	str	r2, [sp, #24]
    c222:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
    c226:	ldr	r2, [sp, #24]
    c228:	ldr	r3, [sp, #48]	; 0x30
    c22a:	subs	r4, r0, #0
    c22c:	bge.n	c294 <_start@@Base+0x3040>
    c22e:	blx	8bac <__errno_location@plt>
    c232:	negs	r3, r4
    c234:	str	r3, [r0, #0]
    c236:	ldr.w	r0, [pc, #1292]	; c744 <_start@@Base+0x34f0>
    c23a:	add	r0, pc
    c23c:	bl	1a900 <__btrfs_error@@Base>
    c240:	add	r0, sp, #484	; 0x1e4
    c242:	bl	1b2dc <btrfs_release_path@@Base>
    c246:	cmp	r4, #0
    c248:	blt.w	c14a <_start@@Base+0x2ef6>
    c24c:	vmov	r2, s16
    c250:	movs	r5, #0
    c252:	mov	r3, sl
    c254:	mov	r0, fp
    c256:	strd	r5, r5, [sp]
    c25a:	bl	2d2d0 <btrfs_find_device@@Base>
    c25e:	str	r0, [sp, #48]	; 0x30
    c260:	cmp	r0, #0
    c262:	bne.n	c2e0 <_start@@Base+0x308c>
    c264:	ldr.w	r0, [pc, #1248]	; c748 <_start@@Base+0x34f4>
    c268:	mov	r3, sl
    c26a:	vmov	r2, s16
    c26e:	mvn.w	r4, #18
    c272:	add	r0, pc
    c274:	bl	1a900 <__btrfs_error@@Base>
    c278:	blx	8bac <__errno_location@plt>
    c27c:	negs	r3, r4
    c27e:	str	r3, [r0, #0]
    c280:	ldr.w	r0, [pc, #1224]	; c74c <_start@@Base+0x34f8>
    c284:	add	r0, pc
    c286:	bl	1a900 <__btrfs_error@@Base>
    c28a:	mov	r1, r4
    c28c:	mov	r0, r8
    c28e:	bl	2e7fc <btrfs_abort_transaction@@Base>
    c292:	b.n	c0a6 <_start@@Base+0x2e52>
    c294:	bne.n	c2dc <_start@@Base+0x3088>
    c296:	mov	r0, r3
    c298:	mov	r1, r6
    c29a:	bl	94a0 <_start@@Base+0x24c>
    c29e:	ldrb	r3, [r6, #8]
    c2a0:	cmp	r3, #204	; 0xcc
    c2a2:	bne.n	c240 <_start@@Base+0x2fec>
    c2a4:	movs	r3, #1
    c2a6:	str	r3, [sp, #0]
    c2a8:	ldr	r3, [r7, #32]
    c2aa:	mov	r2, r7
    c2ac:	mov	r1, r9
    c2ae:	mov	r0, r8
    c2b0:	bl	1e87c <btrfs_del_items@@Base>
    c2b4:	subs	r4, r0, #0
    c2b6:	bge.n	c208 <_start@@Base+0x2fb4>
    c2b8:	blx	8bac <__errno_location@plt>
    c2bc:	negs	r3, r4
    c2be:	str	r3, [r0, #0]
    c2c0:	ldr.w	r2, [r6, #9]
    c2c4:	ldr.w	r3, [r6, #13]
    c2c8:	ldr.w	r0, [pc, #1156]	; c750 <_start@@Base+0x34fc>
    c2cc:	strd	r2, r3, [sp]
    c2d0:	add	r0, pc
    c2d2:	ldrd	r2, r3, [r6]
    c2d6:	bl	1a900 <__btrfs_error@@Base>
    c2da:	b.n	c240 <_start@@Base+0x2fec>
    c2dc:	movs	r4, #0
    c2de:	b.n	c240 <_start@@Base+0x2fec>
    c2e0:	add.w	r0, fp, #228	; 0xe4
    c2e4:	movs	r2, #0
    c2e6:	movs	r3, #0
    c2e8:	bl	19460 <search_cache_extent@@Base>
    c2ec:	str	r5, [sp, #24]
    c2ee:	mov	r6, r0
    c2f0:	cmp	r6, #0
    c2f2:	bne.n	c384 <_start@@Base+0x3130>
    c2f4:	cmp	r4, #0
    c2f6:	blt.n	c278 <_start@@Base+0x3024>
    c2f8:	ldr.w	sl, [r8]
    c2fc:	add	r5, sp, #484	; 0x1e4
    c2fe:	add.w	r9, sp, #252	; 0xfc
    c302:	mov	r0, r5
    c304:	ldr.w	r7, [sl, #308]	; 0x134
    c308:	vldr	s16, [sl, #32]
    c30c:	bl	1b2cc <btrfs_init_path@@Base>
    c310:	mov.w	r2, #4294967295	; 0xffffffff
    c314:	mov	r0, r6
    c316:	ldr.w	r3, [r7, #201]!
    c31a:	strb.w	r2, [sp, #261]	; 0x105
    c31e:	strb.w	r2, [sp, #262]	; 0x106
    c322:	str	r3, [sp, #24]
    c324:	ldr	r3, [r7, #4]
    c326:	strb.w	r2, [sp, #263]	; 0x107
    c32a:	strb.w	r2, [sp, #264]	; 0x108
    c32e:	str	r3, [sp, #28]
    c330:	ldr	r3, [sp, #24]
    c332:	strb.w	r2, [sp, #265]	; 0x109
    c336:	strb.w	r2, [sp, #266]	; 0x10a
    c33a:	str.w	r3, [r9]
    c33e:	ldr	r3, [sp, #28]
    c340:	strb.w	r2, [sp, #267]	; 0x10b
    c344:	strb.w	r2, [sp, #268]	; 0x10c
    c348:	mov	r2, r9
    c34a:	str.w	r3, [r9, #4]
    c34e:	mvn.w	r3, #51	; 0x33
    c352:	strb.w	r3, [r9, #8]
    c356:	mov	r3, r5
    c358:	strd	r6, r6, [sp]
    c35c:	ldr.w	r1, [sl, #36]	; 0x24
    c360:	bl	1d6c0 <btrfs_search_slot@@Base>
    c364:	subs	r4, r0, #0
    c366:	bge.n	c458 <_start@@Base+0x3204>
    c368:	blx	8bac <__errno_location@plt>
    c36c:	negs	r3, r4
    c36e:	str	r3, [r0, #0]
    c370:	ldr	r0, [pc, #992]	; (c754 <_start@@Base+0x3500>)
    c372:	ldrd	r2, r3, [sp, #24]
    c376:	add	r0, pc
    c378:	bl	1a900 <__btrfs_error@@Base>
    c37c:	mov	r0, r5
    c37e:	bl	1b2dc <btrfs_release_path@@Base>
    c382:	b.n	c278 <_start@@Base+0x3024>
    c384:	ldr	r3, [r6, #40]	; 0x28
    c386:	ldrd	r5, r7, [r6, #32]
    c38a:	and.w	r1, r3, #8
    c38e:	str	r1, [sp, #184]	; 0xb8
    c390:	ldr	r1, [sp, #24]
    c392:	ldr	r2, [r6, #64]	; 0x40
    c394:	str	r1, [sp, #188]	; 0xbc
    c396:	ldrd	r0, r1, [sp, #184]	; 0xb8
    c39a:	orrs	r1, r0
    c39c:	beq.n	c3a6 <_start@@Base+0x3152>
    c39e:	asrs	r3, r2, #31
    c3a0:	mov	r0, r5
    c3a2:	mov	r1, r7
    c3a4:	b.n	c3c2 <_start@@Base+0x316e>
    c3a6:	and.w	r1, r3, #64	; 0x40
    c3aa:	str	r1, [sp, #192]	; 0xc0
    c3ac:	ldr	r1, [sp, #24]
    c3ae:	str	r1, [sp, #196]	; 0xc4
    c3b0:	ldrd	r0, r1, [sp, #192]	; 0xc0
    c3b4:	orrs	r1, r0
    c3b6:	beq.n	c3e0 <_start@@Base+0x318c>
    c3b8:	adds	r0, r5, r5
    c3ba:	mov.w	r3, r2, asr #31
    c3be:	adc.w	r1, r7, r7
    c3c2:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
    c3c6:	mov	r5, r0
    c3c8:	mov	r7, r1
    c3ca:	mov	fp, r6
    c3cc:	mov.w	r9, #0
    c3d0:	ldr	r3, [r6, #64]	; 0x40
    c3d2:	cmp	r9, r3
    c3d4:	blt.n	c40e <_start@@Base+0x31ba>
    c3d6:	mov	r0, r6
    c3d8:	bl	19534 <next_cache_extent@@Base>
    c3dc:	mov	r6, r0
    c3de:	b.n	c2f0 <_start@@Base+0x309c>
    c3e0:	and.w	r1, r3, #128	; 0x80
    c3e4:	str	r1, [sp, #200]	; 0xc8
    c3e6:	ldr	r1, [sp, #24]
    c3e8:	str	r1, [sp, #204]	; 0xcc
    c3ea:	ldrd	r0, r1, [sp, #200]	; 0xc8
    c3ee:	orrs	r1, r0
    c3f0:	beq.n	c3f6 <_start@@Base+0x31a2>
    c3f2:	subs	r2, #1
    c3f4:	b.n	c39e <_start@@Base+0x314a>
    c3f6:	and.w	r3, r3, #256	; 0x100
    c3fa:	str	r3, [sp, #208]	; 0xd0
    c3fc:	ldr	r3, [sp, #24]
    c3fe:	str	r3, [sp, #212]	; 0xd4
    c400:	ldrd	r0, r1, [sp, #208]	; 0xd0
    c404:	orrs.w	r3, r0, r1
    c408:	beq.n	c3ca <_start@@Base+0x3176>
    c40a:	subs	r2, #2
    c40c:	b.n	c39e <_start@@Base+0x314a>
    c40e:	ldrd	r2, r3, [fp, #80]	; 0x50
    c412:	mov	r0, r8
    c414:	strd	r5, r7, [sp]
    c418:	add.w	fp, fp, #16
    c41c:	ldr	r1, [sp, #48]	; 0x30
    c41e:	strd	r2, r3, [sp, #8]
    c422:	ldrd	r2, r3, [r6, #24]
    c426:	bl	2b814 <btrfs_insert_dev_extent@@Base>
    c42a:	subs	r4, r0, #0
    c42c:	bge.n	c452 <_start@@Base+0x31fe>
    c42e:	blx	8bac <__errno_location@plt>
    c432:	add.w	r6, r6, r9, lsl #4
    c436:	negs	r3, r4
    c438:	str	r3, [r0, #0]
    c43a:	ldrd	r2, r3, [r6, #80]	; 0x50
    c43e:	ldr	r0, [pc, #792]	; (c758 <_start@@Base+0x3504>)
    c440:	strd	r2, r3, [sp]
    c444:	add	r0, pc
    c446:	vmov	r2, s16
    c44a:	mov	r3, sl
    c44c:	bl	1a900 <__btrfs_error@@Base>
    c450:	b.n	c278 <_start@@Base+0x3024>
    c452:	add.w	r9, r9, #1
    c456:	b.n	c3d0 <_start@@Base+0x317c>
    c458:	bne.n	c472 <_start@@Base+0x321e>
    c45a:	ldr	r0, [pc, #768]	; (c75c <_start@@Base+0x3508>)
    c45c:	mvn.w	r4, #116	; 0x74
    c460:	ldrd	r2, r3, [sp, #24]
    c464:	add	r0, pc
    c466:	bl	1a900 <__btrfs_error@@Base>
    c46a:	mov	r0, r5
    c46c:	bl	1b2dc <btrfs_release_path@@Base>
    c470:	b.n	c278 <_start@@Base+0x3024>
    c472:	movs	r3, #204	; 0xcc
    c474:	mov	r1, r5
    c476:	str	r3, [sp, #0]
    c478:	ldrd	r2, r3, [sp, #24]
    c47c:	ldr.w	r0, [sl, #36]	; 0x24
    c480:	bl	1ed78 <btrfs_previous_item@@Base>
    c484:	subs	r4, r0, #0
    c486:	bgt.n	c50e <_start@@Base+0x32ba>
    c488:	bne.n	c512 <_start@@Base+0x32be>
    c48a:	mov	r1, r9
    c48c:	ldr	r2, [r5, #32]
    c48e:	ldr	r0, [r5, #0]
    c490:	add	r4, sp, #376	; 0x178
    c492:	bl	94a0 <_start@@Base+0x24c>
    c496:	ldr	r3, [r5, #0]
    c498:	ldr	r2, [r5, #32]
    c49a:	movs	r1, #25
    c49c:	adds	r3, #96	; 0x60
    c49e:	mov	r0, r5
    c4a0:	mla	r2, r1, r2, r3
    c4a4:	ldr.w	r2, [r2, #118]	; 0x76
    c4a8:	add	r3, r2
    c4aa:	ldr.w	r2, [r9, #13]
    c4ae:	ldr.w	r6, [r3, #125]!
    c4b2:	ldr	r1, [r3, #4]
    c4b4:	ldr.w	r3, [r9, #9]
    c4b8:	adds	r6, r6, r3
    c4ba:	adc.w	r9, r1, r2
    c4be:	bl	1b2dc <btrfs_release_path@@Base>
    c4c2:	str	r6, [r7, #8]
    c4c4:	mov	r1, r4
    c4c6:	str.w	r9, [r7, #12]
    c4ca:	ldrd	r2, r3, [sp, #816]	; 0x330
    c4ce:	vmov	r0, s17
    c4d2:	str	r2, [r7, #16]
    c4d4:	str	r3, [r7, #20]
    c4d6:	bl	3cb4c <__libc_csu_fini@@Base+0x28>
    c4da:	cmp	r0, #0
    c4dc:	bge.n	c52a <_start@@Base+0x32d6>
    c4de:	ldr	r0, [pc, #640]	; (c760 <_start@@Base+0x350c>)
    c4e0:	add	r0, pc
    c4e2:	bl	1a900 <__btrfs_error@@Base>
    c4e6:	blx	8bac <__errno_location@plt>
    c4ea:	ldr	r4, [r0, #0]
    c4ec:	negs	r4, r4
    c4ee:	cmp	r4, #0
    c4f0:	blt.w	c278 <_start@@Base+0x3024>
    c4f4:	ldr	r3, [sp, #36]	; 0x24
    c4f6:	mov	r0, r8
    c4f8:	ldr	r1, [r3, #28]
    c4fa:	bl	2e684 <btrfs_commit_transaction@@Base>
    c4fe:	mov	r4, r0
    c500:	cmp	r0, #0
    c502:	beq.w	c0a6 <_start@@Base+0x2e52>
    c506:	mov	r1, r0
    c508:	ldr	r0, [pc, #600]	; (c764 <_start@@Base+0x3510>)
    c50a:	add	r0, pc
    c50c:	b.n	c0a2 <_start@@Base+0x2e4e>
    c50e:	mvn.w	r4, #1
    c512:	blx	8bac <__errno_location@plt>
    c516:	negs	r3, r4
    c518:	str	r3, [r0, #0]
    c51a:	ldr	r0, [pc, #588]	; (c768 <_start@@Base+0x3514>)
    c51c:	ldrd	r2, r3, [sp, #24]
    c520:	add	r0, pc
    c522:	bl	1a900 <__btrfs_error@@Base>
    c526:	add	r0, sp, #484	; 0x1e4
    c528:	b.n	c37e <_start@@Base+0x312a>
    c52a:	ldr	r3, [r4, #16]
    c52c:	and.w	r3, r3, #61440	; 0xf000
    c530:	cmp.w	r3, #32768	; 0x8000
    c534:	bne.n	c54c <_start@@Base+0x32f8>
    c536:	vmov	r0, s17
    c53a:	mov	r2, r6
    c53c:	mov	r3, r9
    c53e:	blx	8860 <ftruncate64@plt>
    c542:	cmp	r0, #0
    c544:	bge.n	c54c <_start@@Base+0x32f8>
    c546:	ldr	r0, [pc, #548]	; (c76c <_start@@Base+0x3518>)
    c548:	add	r0, pc
    c54a:	b.n	c4e2 <_start@@Base+0x328e>
    c54c:	add	r5, sp, #484	; 0x1e4
    c54e:	movs	r7, #0
    c550:	movs	r2, #1
    c552:	strb.w	r7, [sp, #261]	; 0x105
    c556:	strd	r2, r7, [sp, #252]	; 0xfc
    c55a:	movs	r2, #216	; 0xd8
    c55c:	strb.w	r7, [sp, #262]	; 0x106
    c560:	strb.w	r2, [sp, #260]	; 0x104
    c564:	strb.w	r7, [sp, #263]	; 0x107
    c568:	strb.w	r7, [sp, #264]	; 0x108
    c56c:	strb.w	r7, [sp, #265]	; 0x109
    c570:	strb.w	r7, [sp, #266]	; 0x10a
    c574:	strb.w	r7, [sp, #267]	; 0x10b
    c578:	strb.w	r7, [sp, #268]	; 0x10c
    c57c:	add.w	sl, sp, #252	; 0xfc
    c580:	mov.w	r3, #4294967295	; 0xffffffff
    c584:	movs	r2, #1
    c586:	vmov	r1, s16
    c58a:	strd	r3, r2, [sp]
    c58e:	mov	r0, r8
    c590:	mov	r3, r5
    c592:	mov	r2, sl
    c594:	bl	1d6c0 <btrfs_search_slot@@Base>
    c598:	subs	r4, r0, #0
    c59a:	bge.n	c5c6 <_start@@Base+0x3372>
    c59c:	ldr	r0, [pc, #464]	; (c770 <_start@@Base+0x351c>)
    c59e:	mov	r1, r4
    c5a0:	add	r0, pc
    c5a2:	bl	1a900 <__btrfs_error@@Base>
    c5a6:	b.n	c278 <_start@@Base+0x3024>
    c5a8:	bne.n	c65e <_start@@Base+0x340a>
    c5aa:	ldr	r4, [r5, #0]
    c5ac:	ldr	r2, [r5, #32]
    c5ae:	mov	r1, sl
    c5b0:	mov	r0, r4
    c5b2:	bl	94a0 <_start@@Base+0x24c>
    c5b6:	ldrb.w	r3, [sl, #8]
    c5ba:	cmp	r3, #216	; 0xd8
    c5bc:	bhi.n	c65e <_start@@Base+0x340a>
    c5be:	ldr	r0, [r5, #32]
    c5c0:	beq.n	c5f6 <_start@@Base+0x33a2>
    c5c2:	adds	r0, #1
    c5c4:	str	r0, [r5, #32]
    c5c6:	ldr	r4, [r5, #0]
    c5c8:	ldr	r2, [r5, #32]
    c5ca:	ldr.w	r3, [r4, #192]	; 0xc0
    c5ce:	cmp	r2, r3
    c5d0:	bcc.n	c5ac <_start@@Base+0x3358>
    c5d2:	vmov	r3, s16
    c5d6:	mov	r1, r5
    c5d8:	strb.w	r7, [r5, #65]	; 0x41
    c5dc:	ldr.w	r0, [r3, #464]	; 0x1d0
    c5e0:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
    c5e4:	subs	r1, r0, #0
    c5e6:	bge.n	c5a8 <_start@@Base+0x3354>
    c5e8:	ldr	r0, [pc, #392]	; (c774 <_start@@Base+0x3520>)
    c5ea:	add	r0, pc
    c5ec:	bl	1a900 <__btrfs_error@@Base>
    c5f0:	movs	r0, #1
    c5f2:	blx	8b58 <exit@plt>
    c5f6:	add.w	ip, r4, #96	; 0x60
    c5fa:	movs	r3, #25
    c5fc:	mla	r3, r3, r0, ip
    c600:	ldr.w	lr, [r3, #118]	; 0x76
    c604:	add.w	lr, lr, #101	; 0x65
    c608:	add.w	r1, ip, lr
    c60c:	ldr.w	r2, [ip, lr]
    c610:	ldr	r3, [r1, #4]
    c612:	ldrd	fp, ip, [sp, #24]
    c616:	cmp	ip, r3
    c618:	it	eq
    c61a:	cmpeq	fp, r2
    c61c:	beq.n	c642 <_start@@Base+0x33ee>
    c61e:	vmov	r1, s16
    c622:	mov	r3, r0
    c624:	movs	r4, #1
    c626:	mov	r2, r5
    c628:	mov	r0, r8
    c62a:	str	r4, [sp, #0]
    c62c:	bl	1e87c <btrfs_del_items@@Base>
    c630:	mov	r1, r0
    c632:	cbz	r0, c63a <_start@@Base+0x33e6>
    c634:	ldr	r0, [pc, #320]	; (c778 <_start@@Base+0x3524>)
    c636:	add	r0, pc
    c638:	b.n	c5ec <_start@@Base+0x3398>
    c63a:	mov	r0, r5
    c63c:	bl	1b2dc <btrfs_release_path@@Base>
    c640:	b.n	c57c <_start@@Base+0x3328>
    c642:	str	r6, [r1, #8]
    c644:	mov	r0, r4
    c646:	str.w	r9, [r1, #12]
    c64a:	ldrd	r2, r3, [sp, #816]	; 0x330
    c64e:	str	r3, [r1, #20]
    c650:	str	r2, [r1, #16]
    c652:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
    c656:	ldr	r3, [r5, #32]
    c658:	adds	r3, #1
    c65a:	str	r3, [r5, #32]
    c65c:	b.n	c5c6 <_start@@Base+0x3372>
    c65e:	add	r0, sp, #484	; 0x1e4
    c660:	bl	1b2dc <btrfs_release_path@@Base>
    c664:	b.n	c4f4 <_start@@Base+0x32a0>
    c666:	ldr	r1, [sp, #788]	; 0x314
    c668:	str.w	sl, [r1, #4]
    c66c:	str.w	r1, [r8, #56]	; 0x38
    c670:	add	r1, sp, #788	; 0x314
    c672:	str.w	sl, [sp, #788]	; 0x314
    c676:	str.w	r1, [r8, #60]	; 0x3c
    c67a:	ldr	r3, [sp, #80]	; 0x50
    c67c:	add.w	lr, sp, #552	; 0x228
    c680:	ldrd	r0, ip, [r8, #24]
    c684:	ldr	r3, [r3, #24]
    c686:	and.w	r3, r3, #32
    c68a:	str	r3, [sp, #104]	; 0x68
    c68c:	movs	r3, #0
    c68e:	str	r3, [sp, #108]	; 0x6c
    c690:	ldrd	r2, r3, [sp, #104]	; 0x68
    c694:	orrs	r3, r2
    c696:	itttt	ne
    c698:	addne	r9, r7
    c69a:	ldrne.w	r2, [r9, #189]!
    c69e:	ldrne.w	r3, [r9, #4]
    c6a2:	strdne	r2, r3, [r8, #16]
    c6a6:	ldrd	r2, r3, [r8, #16]
    c6aa:	strd	r2, r3, [sp, #80]	; 0x50
    c6ae:	ldr	r3, [sp, #80]	; 0x50
    c6b0:	adds	r3, r3, r0
    c6b2:	str	r3, [sp, #88]	; 0x58
    c6b4:	ldr	r3, [sp, #84]	; 0x54
    c6b6:	adc.w	r3, r3, ip
    c6ba:	str	r3, [sp, #92]	; 0x5c
    c6bc:	ldrd	r9, sl, [sp, #88]	; 0x58
    c6c0:	ldrd	r2, r3, [lr, #272]	; 0x110
    c6c4:	cmp	r3, sl
    c6c6:	it	eq
    c6c8:	cmpeq	r2, r9
    c6ca:	bcs.w	bc84 <_start@@Base+0x2a30>
    c6ce:	mov	r2, r9
    c6d0:	mov	r3, sl
    c6d2:	strd	r2, r3, [lr, #272]	; 0x110
    c6d6:	b.w	bca4 <_start@@Base+0x2a50>
    c6da:	ldrd	r2, r3, [r4]
    c6de:	udf	#255	; 0xff
    c6e0:	mov	r0, r4
    c6e2:	addw	sp, sp, #1940	; 0x794
    c6e6:	vpop	{d8-d10}
    c6ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c6ee:	nop
    c6f0:	bhi.n	c7c2 <_start@@Base+0x356e>
    c6f2:			; <UNDEFINED> instruction: 0xffff1add
    c6f6:	movs	r3, r0
    c6f8:	subs	r1, r6, r3
    c6fa:	movs	r3, r0
    c6fc:	subs	r3, r0, r5
    c6fe:	movs	r3, r0
    c700:	subs	r4, r4, r3
    c702:	movs	r3, r0
    c704:	subs	r7, r7, r2
    c706:	movs	r3, r0
    c708:	bvs.n	c742 <_start@@Base+0x34ee>
    c70a:	vmlsl.u<illegal width 64>	<illegal reg q8.5>, d15, d31[0]
    c70e:	movs	r3, r0
    c710:	adds	r6, r4, r6
    c712:	movs	r3, r0
    c714:	adds	r6, r1, r5
    c716:	movs	r3, r0
    c718:	adds	r0, r3, r6
    c71a:	movs	r3, r0
    c71c:	asrs	r4, r6, #12
    c71e:	movs	r3, r0
    c720:	asrs	r0, r2, #23
    c722:	movs	r3, r0
    c724:	asrs	r7, r4, #4
    c726:	movs	r3, r0
    c728:	adds	r3, r1, r2
    c72a:	movs	r3, r0
    c72c:	asrs	r4, r4, #31
    c72e:	movs	r3, r0
    c730:	asrs	r1, r0, #31
    c732:	movs	r3, r0
    c734:	asrs	r5, r3, #31
    c736:	movs	r3, r0
    c738:	asrs	r4, r2, #31
    c73a:	movs	r3, r0
    c73c:	asrs	r4, r2, #30
    c73e:	movs	r3, r0
    c740:	asrs	r3, r1, #31
    c742:	movs	r3, r0
    c744:	asrs	r6, r3, #26
    c746:	movs	r3, r0
    c748:	asrs	r5, r3, #27
    c74a:	movs	r3, r0
    c74c:	asrs	r4, r7, #31
    c74e:	movs	r3, r0
    c750:	asrs	r6, r4, #24
    c752:	movs	r3, r0
    c754:	asrs	r4, r3, #24
    c756:	movs	r3, r0
    c758:	asrs	r4, r4, #20
    c75a:	movs	r3, r0
    c75c:	asrs	r1, r4, #21
    c75e:	movs	r3, r0
    c760:	asrs	r3, r2, #20
    c762:	movs	r3, r0
    c764:	asrs	r5, r2, #21
    c766:	movs	r3, r0
    c768:	asrs	r2, r6, #17
    c76a:	movs	r3, r0
    c76c:	asrs	r3, r1, #19
    c76e:	movs	r3, r0
    c770:	asrs	r6, r2, #18
    c772:	movs	r3, r0
    c774:	lsrs	r2, r1, #17
    c776:	movs	r3, r0
    c778:	asrs	r2, r2, #16
    c77a:	movs	r3, r0
    c77c:	push	{r4, r5, r6, lr}
    c77e:	mov	r5, r0
    c780:	blx	8a94 <malloc@plt+0x4>
    c784:	mov	r4, r0
    c786:	cbz	r0, c790 <_start@@Base+0x353c>
    c788:	add	r5, r0
    c78a:	mov	r6, r0
    c78c:	cmp	r5, r6
    c78e:	bne.n	c794 <_start@@Base+0x3540>
    c790:	mov	r0, r4
    c792:	pop	{r4, r5, r6, pc}
    c794:	movs	r0, #94	; 0x5e
    c796:	bl	3506c <rand_range@@Base>
    c79a:	add.w	r3, r0, #33	; 0x21
    c79e:	uxtb	r3, r3
    c7a0:	cmp	r3, #47	; 0x2f
    c7a2:	it	eq
    c7a4:	moveq	r3, #48	; 0x30
    c7a6:	strb.w	r3, [r6], #1
    c7aa:	b.n	c78c <_start@@Base+0x3538>
    c7ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c7b0:	mov	r6, r2
    c7b2:	ldr	r2, [pc, #584]	; (c9fc <_start@@Base+0x37a8>)
    c7b4:	sub	sp, #100	; 0x64
    c7b6:	ldr	r3, [pc, #584]	; (ca00 <_start@@Base+0x37ac>)
    c7b8:	mov	r7, r0
    c7ba:	add	r2, pc
    c7bc:	ldr	r5, [r0, #0]
    c7be:	ldr.w	sl, [pc, #580]	; ca04 <_start@@Base+0x37b0>
    c7c2:	mov	r9, r1
    c7c4:	ldr	r3, [r2, r3]
    c7c6:	add	sl, pc
    c7c8:	ldr	r3, [r3, #0]
    c7ca:	str	r3, [sp, #92]	; 0x5c
    c7cc:	mov.w	r3, #0
    c7d0:	cbnz	r5, c802 <_start@@Base+0x35ae>
    c7d2:	movs	r0, #24
    c7d4:	blx	8a94 <malloc@plt+0x4>
    c7d8:	mov	r4, r0
    c7da:	cbnz	r0, c822 <_start@@Base+0x35ce>
    c7dc:	ldr	r0, [pc, #552]	; (ca08 <_start@@Base+0x37b4>)
    c7de:	mov	r8, r5
    c7e0:	add	r0, pc
    c7e2:	bl	1a900 <__btrfs_error@@Base>
    c7e6:	mov	r0, r9
    c7e8:	blx	87cc <free@plt+0x4>
    c7ec:	ldr	r2, [pc, #540]	; (ca0c <_start@@Base+0x37b8>)
    c7ee:	ldr	r3, [pc, #528]	; (ca00 <_start@@Base+0x37ac>)
    c7f0:	add	r2, pc
    c7f2:	ldr	r3, [r2, r3]
    c7f4:	ldr	r2, [r3, #0]
    c7f6:	ldr	r3, [sp, #92]	; 0x5c
    c7f8:	eors	r2, r3
    c7fa:	beq.w	c9f2 <_start@@Base+0x379e>
    c7fe:	blx	88e4 <__stack_chk_fail@plt>
    c802:	ldr	r2, [r5, #20]
    c804:	mov	r0, r9
    c806:	ldr	r1, [r5, #12]
    c808:	cmp	r2, r6
    c80a:	it	cs
    c80c:	movcs	r2, r6
    c80e:	blx	887c <memcmp@plt+0x4>
    c812:	cmp	r0, #0
    c814:	bge.n	c81a <_start@@Base+0x35c6>
    c816:	ldr	r5, [r5, #8]
    c818:	b.n	c7d0 <_start@@Base+0x357c>
    c81a:	beq.w	c9e6 <_start@@Base+0x3792>
    c81e:	ldr	r5, [r5, #4]
    c820:	b.n	c7d0 <_start@@Base+0x357c>
    c822:	movs	r2, #24
    c824:	mov	r1, r5
    c826:	blx	8bf8 <memset@plt+0x4>
    c82a:	mov	r0, r6
    c82c:	str.w	r9, [r4, #12]
    c830:	str	r6, [r4, #20]
    c832:	blx	8a94 <malloc@plt+0x4>
    c836:	mov	r8, r0
    c838:	str	r0, [r4, #16]
    c83a:	cbnz	r0, c852 <_start@@Base+0x35fe>
    c83c:	ldr	r0, [pc, #464]	; (ca10 <_start@@Base+0x37bc>)
    c83e:	add	r0, pc
    c840:	bl	1a900 <__btrfs_error@@Base>
    c844:	mov	r0, r4
    c846:	blx	87cc <free@plt+0x4>
    c84a:	mov	r0, r9
    c84c:	blx	87cc <free@plt+0x4>
    c850:	b.n	c7ec <_start@@Base+0x3598>
    c852:	cmp	r6, #4
    c854:	bls.n	c932 <_start@@Base+0x36de>
    c856:	mov	r1, r9
    c858:	mov	r2, r6
    c85a:	mvn.w	r0, #1
    c85e:	sub.w	r8, r6, #4
    c862:	bl	1a87e <crc32c_le@@Base>
    c866:	movs	r1, #32
    c868:	mov	r2, r8
    c86a:	ldr.w	fp, [pc, #424]	; ca14 <_start@@Base+0x37c0>
    c86e:	add	fp, pc
    c870:	mov	r9, r0
    c872:	ldr	r0, [r4, #16]
    c874:	blx	8bf8 <memset@plt+0x4>
    c878:	ldr	r1, [r4, #16]
    c87a:	mov	r2, r8
    c87c:	mvn.w	r0, #1
    c880:	bl	1a87e <crc32c_le@@Base>
    c884:	ldr	r1, [r4, #16]
    c886:	mov	r3, r9
    c888:	movs	r2, #24
    c88a:	mov.w	ip, r3, lsr #24
    c88e:	ldr.w	ip, [fp, ip, lsl #2]
    c892:	eor.w	r3, ip, r3, lsl #8
    c896:	lsr.w	ip, r0, r2
    c89a:	subs	r2, #8
    c89c:	cmn.w	r2, #8
    c8a0:	uxtb.w	ip, ip
    c8a4:	eor.w	r3, ip, r3
    c8a8:	bne.n	c88a <_start@@Base+0x3636>
    c8aa:	subs	r2, r6, #5
    c8ac:	add	r1, r2
    c8ae:	movs	r2, #0
    c8b0:	lsr.w	r0, r3, r2
    c8b4:	adds	r2, #8
    c8b6:	cmp	r2, #32
    c8b8:	strb.w	r0, [r1, #1]!
    c8bc:	bne.n	c8b0 <_start@@Base+0x365c>
    c8be:	ldr	r3, [r4, #16]
    c8c0:	add.w	r2, r3, r8
    c8c4:	adds	r0, r3, r6
    c8c6:	ldrb.w	r1, [r2], #1
    c8ca:	sub.w	ip, r1, #32
    c8ce:	cmp.w	ip, #94	; 0x5e
    c8d2:	bhi.n	c8ec <_start@@Base+0x3698>
    c8d4:	cmp	r1, #47	; 0x2f
    c8d6:	beq.n	c8ec <_start@@Base+0x3698>
    c8d8:	cmp	r2, r0
    c8da:	bne.n	c8c6 <_start@@Base+0x3672>
    c8dc:	mov	r0, r3
    c8de:	ldr	r2, [r4, #20]
    c8e0:	ldr	r1, [r4, #12]
    c8e2:	str	r3, [sp, #20]
    c8e4:	blx	887c <memcmp@plt+0x4>
    c8e8:	ldr	r3, [sp, #20]
    c8ea:	cbnz	r0, c946 <_start@@Base+0x36f2>
    c8ec:	ldrb	r2, [r3, #0]
    c8ee:	cmp	r2, #126	; 0x7e
    c8f0:	bne.n	c920 <_start@@Base+0x36cc>
    c8f2:	adds	r3, #1
    c8f4:	movs	r2, #0
    c8f6:	adds	r2, #1
    c8f8:	cmp	r8, r2
    c8fa:	bls.n	c932 <_start@@Base+0x36de>
    c8fc:	mov	r0, r3
    c8fe:	ldrb.w	r1, [r3], #1
    c902:	cmp	r1, #126	; 0x7e
    c904:	beq.n	c8f6 <_start@@Base+0x36a2>
    c906:	adds	r1, #1
    c908:	strb	r1, [r0, #0]
    c90a:	ldr	r3, [r4, #16]
    c90c:	ldrb	r1, [r3, r2]
    c90e:	cmp	r1, #47	; 0x2f
    c910:	bne.n	c916 <_start@@Base+0x36c2>
    c912:	movs	r1, #48	; 0x30
    c914:	strb	r1, [r3, r2]
    c916:	ldr	r0, [r4, #16]
    c918:	movs	r1, #32
    c91a:	blx	8bf8 <memset@plt+0x4>
    c91e:	b.n	c878 <_start@@Base+0x3624>
    c920:	adds	r2, #1
    c922:	strb	r2, [r3, #0]
    c924:	ldr	r3, [r4, #16]
    c926:	ldrb	r2, [r3, #0]
    c928:	cmp	r2, #47	; 0x2f
    c92a:	bne.n	c878 <_start@@Base+0x3624>
    c92c:	movs	r2, #48	; 0x30
    c92e:	strb	r2, [r3, #0]
    c930:	b.n	c878 <_start@@Base+0x3624>
    c932:	ldr	r0, [pc, #228]	; (ca18 <_start@@Base+0x37c4>)
    c934:	mov.w	r8, #0
    c938:	ldr	r2, [r4, #12]
    c93a:	ldr	r1, [r4, #20]
    c93c:	add	r0, pc
    c93e:	bl	1a884 <__btrfs_warning@@Base>
    c942:	cmp	r8, r6
    c944:	bne.n	c962 <_start@@Base+0x370e>
    c946:	mov	r3, r7
    c948:	ldr	r6, [r3, #0]
    c94a:	cbnz	r6, c97e <_start@@Base+0x372a>
    c94c:	strd	r5, r6, [r4]
    c950:	mov	r1, r7
    c952:	str	r6, [r4, #8]
    c954:	mov	r0, r4
    c956:	str	r4, [r3, #0]
    c958:	bl	16fae <rb_insert_color@@Base>
    c95c:	ldr.w	r8, [r4, #16]
    c960:	b.n	c7ec <_start@@Base+0x3598>
    c962:	movs	r0, #94	; 0x5e
    c964:	bl	3506c <rand_range@@Base>
    c968:	ldr	r3, [r4, #16]
    c96a:	adds	r0, #33	; 0x21
    c96c:	uxtb	r0, r0
    c96e:	cmp	r0, #47	; 0x2f
    c970:	it	eq
    c972:	moveq	r0, #48	; 0x30
    c974:	strb.w	r0, [r3, r8]
    c978:	add.w	r8, r8, #1
    c97c:	b.n	c942 <_start@@Base+0x36ee>
    c97e:	ldr	r2, [r4, #20]
    c980:	ldr	r3, [r6, #20]
    c982:	ldr	r1, [r6, #12]
    c984:	cmp	r2, r3
    c986:	ldr	r0, [r4, #12]
    c988:	it	cs
    c98a:	movcs	r2, r3
    c98c:	blx	887c <memcmp@plt+0x4>
    c990:	cmp	r0, #0
    c992:	bge.n	c99c <_start@@Base+0x3748>
    c994:	add.w	r3, r6, #8
    c998:	mov	r5, r6
    c99a:	b.n	c948 <_start@@Base+0x36f4>
    c99c:	beq.n	c9a2 <_start@@Base+0x374e>
    c99e:	adds	r3, r6, #4
    c9a0:	b.n	c998 <_start@@Base+0x3744>
    c9a2:	ldr	r3, [pc, #120]	; (ca1c <_start@@Base+0x37c8>)
    c9a4:	add	r4, sp, #28
    c9a6:	ldr	r2, [pc, #120]	; (ca20 <_start@@Base+0x37cc>)
    c9a8:	movs	r1, #1
    c9aa:	ldr.w	r0, [sl, r3]
    c9ae:	add	r2, pc
    c9b0:	ldr	r3, [pc, #112]	; (ca24 <_start@@Base+0x37d0>)
    c9b2:	str	r1, [sp, #12]
    c9b4:	add	r3, pc
    c9b6:	str	r3, [sp, #8]
    c9b8:	ldr	r3, [pc, #108]	; (ca28 <_start@@Base+0x37d4>)
    c9ba:	add	r3, pc
    c9bc:	add.w	r3, r3, #1024	; 0x400
    c9c0:	str	r3, [sp, #4]
    c9c2:	movs	r3, #200	; 0xc8
    c9c4:	str	r3, [sp, #0]
    c9c6:	ldr	r3, [pc, #100]	; (ca2c <_start@@Base+0x37d8>)
    c9c8:	ldr	r0, [r0, #0]
    c9ca:	add	r3, pc
    c9cc:	blx	8ca0 <__fprintf_chk@plt+0x4>
    c9d0:	movs	r1, #16
    c9d2:	mov	r0, r4
    c9d4:	blx	8ae0 <backtrace@plt>
    c9d8:	movs	r2, #2
    c9da:	mov	r1, r0
    c9dc:	mov	r0, r4
    c9de:	blx	8e50 <backtrace_symbols_fd@plt>
    c9e2:	blx	8e08 <abort@plt>
    c9e6:	mov	r0, r9
    c9e8:	blx	87cc <free@plt+0x4>
    c9ec:	ldr.w	r8, [r5, #16]
    c9f0:	b.n	c7ec <_start@@Base+0x3598>
    c9f2:	mov	r0, r8
    c9f4:	add	sp, #100	; 0x64
    c9f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c9fa:	nop
    c9fc:	stmia	r5!, {r1, r2, r4, r5, r6}
    c9fe:	movs	r5, r0
    ca00:	lsls	r4, r7, #9
    ca02:	movs	r0, r0
    ca04:	stmia	r5!, {r1, r3, r5, r6}
    ca06:	movs	r5, r0
    ca08:	asrs	r3, r4, #21
    ca0a:	movs	r3, r0
    ca0c:	stmia	r5!, {r6}
    ca0e:	movs	r5, r0
    ca10:	asrs	r5, r0, #20
    ca12:	movs	r3, r0
    ca14:	asrs	r2, r4, #21
    ca16:	movs	r3, r0
    ca18:	asrs	r7, r5, #16
    ca1a:	movs	r3, r0
    ca1c:	lsls	r4, r1, #10
    ca1e:	movs	r0, r0
    ca20:	lsls	r1, r7, #23
    ca22:	movs	r3, r0
    ca24:	strb	r1, [r0, r6]
    ca26:	movs	r3, r0
    ca28:	asrs	r6, r2, #16
    ca2a:	movs	r3, r0
    ca2c:	asrs	r5, r6, #15
    ca2e:	movs	r3, r0
    ca30:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca34:	sub	sp, #20
    ca36:	mov	r6, r2
    ca38:	add.w	sl, r6, #96	; 0x60
    ca3c:	ldr	r2, [sp, #56]	; 0x38
    ca3e:	mov	r7, r0
    ca40:	mov	r9, r1
    ca42:	movs	r4, #0
    ca44:	str	r2, [sp, #8]
    ca46:	movs	r2, #25
    ca48:	mla	r3, r2, r3, sl
    ca4c:	ldr.w	r8, [r3, #118]	; 0x76
    ca50:	ldr.w	r2, [r3, #122]	; 0x7a
    ca54:	add.w	r8, r8, #101	; 0x65
    ca58:	str	r2, [sp, #4]
    ca5a:	ldr	r3, [sp, #4]
    ca5c:	cmp	r4, r3
    ca5e:	bcc.n	ca66 <_start@@Base+0x3812>
    ca60:	add	sp, #20
    ca62:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ca66:	ldr	r2, [sp, #8]
    ca68:	add.w	r5, r4, r8
    ca6c:	add.w	r3, sl, r5
    ca70:	cbz	r2, ca98 <_start@@Base+0x3844>
    ca72:	ldrh.w	fp, [r3, #16]
    ca76:	adds	r5, #18
    ca78:	adds	r4, #18
    ca7a:	cmp	r7, #2
    ca7c:	add	r4, fp
    ca7e:	mov	r0, fp
    ca80:	bne.n	cad8 <_start@@Base+0x3884>
    ca82:	blx	8a94 <malloc@plt+0x4>
    ca86:	mov	r1, r0
    ca88:	cbnz	r0, caa2 <_start@@Base+0x384e>
    ca8a:	ldr	r0, [pc, #84]	; (cae0 <_start@@Base+0x388c>)
    ca8c:	add	r0, pc
    ca8e:	add	sp, #20
    ca90:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca94:	b.w	1a900 <__btrfs_error@@Base>
    ca98:	ldrh.w	fp, [r3, #8]
    ca9c:	adds	r5, #10
    ca9e:	adds	r4, #10
    caa0:	b.n	ca7a <_start@@Base+0x3826>
    caa2:	mov	r2, r5
    caa4:	str	r0, [sp, #12]
    caa6:	mov	r3, fp
    caa8:	mov	r0, r6
    caaa:	bl	1a79e <read_extent_buffer@@Base>
    caae:	ldr	r1, [sp, #12]
    cab0:	mov	r2, fp
    cab2:	mov	r0, r9
    cab4:	bl	c7ac <_start@@Base+0x3558>
    cab8:	mov	r1, r0
    caba:	cmp	r0, #0
    cabc:	beq.n	ca8a <_start@@Base+0x3836>
    cabe:	str	r0, [sp, #12]
    cac0:	mov	r3, fp
    cac2:	mov	r2, r5
    cac4:	mov	r0, r6
    cac6:	bl	1a7b4 <write_extent_buffer@@Base>
    caca:	cmp	r7, #1
    cacc:	ldr	r1, [sp, #12]
    cace:	bne.n	ca5a <_start@@Base+0x3806>
    cad0:	mov	r0, r1
    cad2:	blx	87cc <free@plt+0x4>
    cad6:	b.n	ca5a <_start@@Base+0x3806>
    cad8:	bl	c77c <_start@@Base+0x3528>
    cadc:	b.n	cab8 <_start@@Base+0x3864>
    cade:	nop
    cae0:	asrs	r7, r6, #10
    cae2:	movs	r3, r0

0000cae4 <sanitize_name@@Base>:
    cae4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cae8:	mov	r7, r0
    caea:	vpush	{d8}
    caee:	mov	sl, r1
    caf0:	movs	r0, #1
    caf2:	vmov	s16, r2
    caf6:	ldr	r2, [r3, #76]	; 0x4c
    caf8:	sub	sp, #28
    cafa:	ldrd	r8, r9, [r3, #40]	; 0x28
    cafe:	add.w	r1, r2, #96	; 0x60
    cb02:	str	r3, [sp, #16]
    cb04:	str	r2, [sp, #12]
    cb06:	ldrd	fp, r6, [sp, #72]	; 0x48
    cb0a:	blx	8718 <calloc@plt+0x4>
    cb0e:	ldrd	r2, r3, [sp, #12]
    cb12:	mov	r4, r0
    cb14:	cbnz	r0, cb28 <sanitize_name@@Base+0x44>
    cb16:	ldr	r0, [pc, #292]	; (cc3c <sanitize_name@@Base+0x158>)
    cb18:	add	r0, pc
    cb1a:	add	sp, #28
    cb1c:	vpop	{d8}
    cb20:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cb24:	b.w	1a900 <__btrfs_error@@Base>
    cb28:	add.w	r5, r0, #96	; 0x60
    cb2c:	add.w	r1, r3, #96	; 0x60
    cb30:	strd	r8, r9, [r0, #40]	; 0x28
    cb34:	str	r2, [r0, #76]	; 0x4c
    cb36:	mov	r0, r5
    cb38:	blx	8830 <memcpy@plt+0x4>
    cb3c:	ldrb.w	r3, [fp, #8]
    cb40:	cmp	r3, #24
    cb42:	beq.n	cc18 <sanitize_name@@Base+0x134>
    cb44:	bhi.n	cb6a <sanitize_name@@Base+0x86>
    cb46:	cmp	r3, #12
    cb48:	beq.n	cc02 <sanitize_name@@Base+0x11e>
    cb4a:	cmp	r3, #13
    cb4c:	beq.n	cc14 <sanitize_name@@Base+0x130>
    cb4e:	vmov	r0, s16
    cb52:	mov	r1, r5
    cb54:	ldr	r2, [r4, #76]	; 0x4c
    cb56:	blx	8830 <memcpy@plt+0x4>
    cb5a:	mov	r0, r4
    cb5c:	add	sp, #28
    cb5e:	vpop	{d8}
    cb62:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cb66:	b.w	87c8 <free@plt>
    cb6a:	cmp	r3, #84	; 0x54
    cb6c:	beq.n	cb72 <sanitize_name@@Base+0x8e>
    cb6e:	cmp	r3, #96	; 0x60
    cb70:	bne.n	cb4e <sanitize_name@@Base+0x6a>
    cb72:	movs	r3, #25
    cb74:	mla	r6, r3, r6, r5
    cb78:	ldr.w	r8, [r6, #118]	; 0x76
    cb7c:	ldr.w	r3, [r6, #122]	; 0x7a
    cb80:	movs	r6, #0
    cb82:	add.w	r8, r8, #101	; 0x65
    cb86:	str	r3, [sp, #12]
    cb88:	ldr	r3, [sp, #12]
    cb8a:	cmp	r3, r6
    cb8c:	bls.n	cb4e <sanitize_name@@Base+0x6a>
    cb8e:	add.w	r2, r5, r8
    cb92:	cmp	r7, #2
    cb94:	add.w	r9, r8, #30
    cb98:	ldrh.w	r3, [r2, #27]
    cb9c:	ldrh.w	fp, [r2, #25]
    cba0:	add	fp, r3
    cba2:	mov	r0, r3
    cba4:	add.w	fp, fp, #30
    cba8:	str	r3, [sp, #16]
    cbaa:	bne.n	cbfc <sanitize_name@@Base+0x118>
    cbac:	blx	8a94 <malloc@plt+0x4>
    cbb0:	ldr	r3, [sp, #16]
    cbb2:	mov	r1, r0
    cbb4:	cbnz	r0, cbc0 <sanitize_name@@Base+0xdc>
    cbb6:	ldr	r0, [pc, #136]	; (cc40 <sanitize_name@@Base+0x15c>)
    cbb8:	add	r0, pc
    cbba:	bl	1a900 <__btrfs_error@@Base>
    cbbe:	b.n	cb4e <sanitize_name@@Base+0x6a>
    cbc0:	mov	r2, r9
    cbc2:	str	r0, [sp, #20]
    cbc4:	mov	r0, r4
    cbc6:	str	r3, [sp, #16]
    cbc8:	bl	1a79e <read_extent_buffer@@Base>
    cbcc:	ldr	r3, [sp, #16]
    cbce:	ldr	r1, [sp, #20]
    cbd0:	mov	r0, sl
    cbd2:	mov	r2, r3
    cbd4:	bl	c7ac <_start@@Base+0x3558>
    cbd8:	ldr	r3, [sp, #16]
    cbda:	mov	r1, r0
    cbdc:	cmp	r0, #0
    cbde:	beq.n	cbb6 <sanitize_name@@Base+0xd2>
    cbe0:	str	r0, [sp, #16]
    cbe2:	mov	r2, r9
    cbe4:	mov	r0, r4
    cbe6:	add	r6, fp
    cbe8:	bl	1a7b4 <write_extent_buffer@@Base>
    cbec:	cmp	r7, #1
    cbee:	ldr	r1, [sp, #16]
    cbf0:	add	r8, fp
    cbf2:	bne.n	cb88 <sanitize_name@@Base+0xa4>
    cbf4:	mov	r0, r1
    cbf6:	blx	87cc <free@plt+0x4>
    cbfa:	b.n	cb88 <sanitize_name@@Base+0xa4>
    cbfc:	bl	c77c <_start@@Base+0x3528>
    cc00:	b.n	cbd8 <sanitize_name@@Base+0xf4>
    cc02:	movs	r3, #0
    cc04:	str	r3, [sp, #0]
    cc06:	mov	r2, r4
    cc08:	mov	r3, r6
    cc0a:	mov	r1, sl
    cc0c:	mov	r0, r7
    cc0e:	bl	ca30 <_start@@Base+0x37dc>
    cc12:	b.n	cb4e <sanitize_name@@Base+0x6a>
    cc14:	movs	r3, #1
    cc16:	b.n	cc04 <sanitize_name@@Base+0x120>
    cc18:	movs	r3, #25
    cc1a:	mov	r0, r4
    cc1c:	mla	r6, r3, r6, r5
    cc20:	ldr.w	r1, [r6, #118]	; 0x76
    cc24:	adds	r1, #101	; 0x65
    cc26:	adds	r3, r5, r1
    cc28:	ldrh.w	r2, [r3, #27]
    cc2c:	ldrh.w	r3, [r3, #25]
    cc30:	adds	r2, #30
    cc32:	add	r2, r1
    cc34:	movs	r1, #0
    cc36:	bl	1a826 <memset_extent_buffer@@Base>
    cc3a:	b.n	cb4e <sanitize_name@@Base+0x6a>
    cc3c:	asrs	r3, r5, #8
    cc3e:	movs	r3, r0
    cc40:	asrs	r3, r1, #6
    cc42:	movs	r3, r0
    cc44:	ldr	r2, [pc, #60]	; (cc84 <sanitize_name@@Base+0x1a0>)
    cc46:	movs	r1, #16
    cc48:	ldr	r3, [pc, #60]	; (cc88 <sanitize_name@@Base+0x1a4>)
    cc4a:	push	{r4, lr}
    cc4c:	add	r2, pc
    cc4e:	sub	sp, #72	; 0x48
    cc50:	add	r4, sp, #4
    cc52:	ldr	r3, [r2, r3]
    cc54:	mov	r0, r4
    cc56:	ldr	r3, [r3, #0]
    cc58:	str	r3, [sp, #68]	; 0x44
    cc5a:	mov.w	r3, #0
    cc5e:	blx	8ae0 <backtrace@plt>
    cc62:	movs	r2, #2
    cc64:	mov	r1, r0
    cc66:	mov	r0, r4
    cc68:	blx	8e50 <backtrace_symbols_fd@plt>
    cc6c:	ldr	r2, [pc, #28]	; (cc8c <sanitize_name@@Base+0x1a8>)
    cc6e:	ldr	r3, [pc, #24]	; (cc88 <sanitize_name@@Base+0x1a4>)
    cc70:	add	r2, pc
    cc72:	ldr	r3, [r2, r3]
    cc74:	ldr	r2, [r3, #0]
    cc76:	ldr	r3, [sp, #68]	; 0x44
    cc78:	eors	r2, r3
    cc7a:	beq.n	cc80 <sanitize_name@@Base+0x19c>
    cc7c:	blx	88e4 <__stack_chk_fail@plt>
    cc80:	add	sp, #72	; 0x48
    cc82:	pop	{r4, pc}
    cc84:	stmia	r0!, {r2, r5, r6, r7}
    cc86:	movs	r5, r0
    cc88:	lsls	r4, r7, #9
    cc8a:	movs	r0, r0
    cc8c:	stmia	r0!, {r6, r7}
    cc8e:	movs	r5, r0

0000cc90 <btrfs_delete_one_dir_name@@Base>:
    cc90:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    cc94:	mov	r6, r3
    cc96:	ldr.w	ip, [r2]
    cc9a:	movs	r7, #25
    cc9c:	mov	r8, r1
    cc9e:	mov	r5, r2
    cca0:	add.w	lr, ip, #96	; 0x60
    cca4:	add	r3, lr
    cca6:	ldrh.w	r4, [r3, #27]
    ccaa:	ldrh.w	r3, [r3, #25]
    ccae:	add	r4, r3
    ccb0:	ldr	r3, [r2, #32]
    ccb2:	adds	r4, #30
    ccb4:	mla	r7, r7, r3, lr
    ccb8:	add.w	lr, r7, #101	; 0x65
    ccbc:	ldr.w	r7, [r7, #122]	; 0x7a
    ccc0:	cmp	r4, r7
    ccc2:	bcc.n	ccd2 <btrfs_delete_one_dir_name@@Base+0x42>
    ccc4:	movs	r4, #1
    ccc6:	str	r4, [sp, #0]
    ccc8:	bl	1e87c <btrfs_del_items@@Base>
    cccc:	add	sp, #8
    ccce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ccd2:	ldr.w	r3, [lr, #17]
    ccd6:	adds	r2, r4, r6
    ccd8:	mov	r0, ip
    ccda:	mov	r1, r6
    ccdc:	add	r3, r7
    ccde:	adds	r3, #101	; 0x65
    cce0:	subs	r3, r3, r2
    cce2:	bl	1a810 <memmove_extent_buffer@@Base>
    cce6:	subs	r2, r7, r4
    cce8:	movs	r3, #1
    ccea:	mov	r1, r5
    ccec:	mov	r0, r8
    ccee:	bl	1d300 <btrfs_truncate_item@@Base>
    ccf2:	movs	r0, #0
    ccf4:	b.n	cccc <btrfs_delete_one_dir_name@@Base+0x3c>

0000ccf6 <btrfs_match_dir_item_name@@Base>:
    ccf6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ccfa:	mov	r4, r1
    ccfc:	ldr.w	fp, [r4]
    cd00:	mov	r7, r3
    cd02:	ldr	r3, [r4, #32]
    cd04:	mov	r1, r2
    cd06:	add.w	r9, fp, #96	; 0x60
    cd0a:	movs	r2, #25
    cd0c:	ldr.w	r8, [pc, #188]	; cdcc <btrfs_match_dir_item_name@@Base+0xd6>
    cd10:	sub	sp, #20
    cd12:	mla	r3, r2, r3, r9
    cd16:	add	r8, pc
    cd18:	add.w	r5, r3, #101	; 0x65
    cd1c:	ldr.w	r4, [r3, #118]	; 0x76
    cd20:	adds	r4, #101	; 0x65
    cd22:	add.w	r2, r9, r4
    cd26:	ldrh.w	r3, [r2, #27]
    cd2a:	ldrh.w	r2, [r2, #25]
    cd2e:	cmp	r3, #255	; 0xff
    cd30:	bls.n	cd4a <btrfs_match_dir_item_name@@Base+0x54>
    cd32:	ldr	r3, [pc, #156]	; (cdd0 <btrfs_match_dir_item_name@@Base+0xda>)
    cd34:	movs	r1, #1
    cd36:	ldr.w	r0, [r8, r3]
    cd3a:	mov	r3, r2
    cd3c:	ldr	r2, [pc, #148]	; (cdd4 <btrfs_match_dir_item_name@@Base+0xde>)
    cd3e:	ldr	r0, [r0, #0]
    cd40:	add	r2, pc
    cd42:	blx	8ca0 <__fprintf_chk@plt+0x4>
    cd46:	movs	r4, #0
    cd48:	b.n	cdc2 <btrfs_match_dir_item_name@@Base+0xcc>
    cd4a:	ldr.w	r0, [r0, #464]	; 0x1d0
    cd4e:	adds	r6, r2, r3
    cd50:	ldr.w	r0, [r0, #384]	; 0x180
    cd54:	subs	r0, #156	; 0x9c
    cd56:	cmp	r6, r0
    cd58:	bhi.n	cd8e <btrfs_match_dir_item_name@@Base+0x98>
    cd5a:	ldr.w	sl, [r5, #21]
    cd5e:	movs	r6, #0
    cd60:	cmp	r6, sl
    cd62:	bcs.n	cd46 <btrfs_match_dir_item_name@@Base+0x50>
    cd64:	add.w	r2, r9, r4
    cd68:	ldrh.w	r3, [r2, #27]
    cd6c:	ldrh.w	r5, [r2, #25]
    cd70:	sub.w	r2, sl, r6
    cd74:	add	r5, r3
    cd76:	adds	r5, #30
    cd78:	cmp	r2, r5
    cd7a:	bcs.n	cda4 <btrfs_match_dir_item_name@@Base+0xae>
    cd7c:	ldr	r3, [pc, #80]	; (cdd0 <btrfs_match_dir_item_name@@Base+0xda>)
    cd7e:	ldr	r0, [pc, #88]	; (cdd8 <btrfs_match_dir_item_name@@Base+0xe2>)
    cd80:	ldr.w	r3, [r8, r3]
    cd84:	add	r0, pc
    cd86:	ldr	r1, [r3, #0]
    cd88:	blx	8de4 <fputs@plt+0x4>
    cd8c:	b.n	cd46 <btrfs_match_dir_item_name@@Base+0x50>
    cd8e:	ldr	r1, [pc, #64]	; (cdd0 <btrfs_match_dir_item_name@@Base+0xda>)
    cd90:	ldr.w	r0, [r8, r1]
    cd94:	movs	r1, #1
    cd96:	str	r2, [sp, #0]
    cd98:	ldr	r2, [pc, #64]	; (cddc <btrfs_match_dir_item_name@@Base+0xe6>)
    cd9a:	ldr	r0, [r0, #0]
    cd9c:	add	r2, pc
    cd9e:	blx	8ca0 <__fprintf_chk@plt+0x4>
    cda2:	b.n	cd46 <btrfs_match_dir_item_name@@Base+0x50>
    cda4:	cmp	r3, r7
    cda6:	beq.n	cdae <btrfs_match_dir_item_name@@Base+0xb8>
    cda8:	add	r6, r5
    cdaa:	add	r4, r5
    cdac:	b.n	cd60 <btrfs_match_dir_item_name@@Base+0x6a>
    cdae:	add.w	r2, r4, #30
    cdb2:	mov	r3, r7
    cdb4:	mov	r0, fp
    cdb6:	str	r1, [sp, #12]
    cdb8:	bl	1a78c <memcmp_extent_buffer@@Base>
    cdbc:	ldr	r1, [sp, #12]
    cdbe:	cmp	r0, #0
    cdc0:	bne.n	cda8 <btrfs_match_dir_item_name@@Base+0xb2>
    cdc2:	mov	r0, r4
    cdc4:	add	sp, #20
    cdc6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cdca:	nop
    cdcc:	stmia	r0!, {r1, r3, r4}
    cdce:	movs	r5, r0
    cdd0:	lsls	r4, r1, #10
    cdd2:	movs	r0, r0
    cdd4:	asrs	r4, r3, #18
    cdd6:	movs	r3, r0
    cdd8:	asrs	r2, r4, #18
    cdda:	movs	r3, r0
    cddc:	asrs	r7, r3, #17
    cdde:	movs	r3, r0
    cde0:	ldr.w	ip, [pc, #292]	; cf08 <btrfs_match_dir_item_name@@Base+0x212>
    cde4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    cde8:	add	ip, pc
    cdea:	ldr	r4, [pc, #288]	; (cf0c <btrfs_match_dir_item_name@@Base+0x216>)
    cdec:	sub	sp, #24
    cdee:	mov.w	r9, #1
    cdf2:	mov	r8, r1
    cdf4:	ldrd	r6, sl, [sp, #56]	; 0x38
    cdf8:	mov	r5, r2
    cdfa:	ldr.w	r4, [ip, r4]
    cdfe:	ldr	r7, [pc, #272]	; (cf10 <btrfs_match_dir_item_name@@Base+0x21a>)
    ce00:	ldr	r4, [r4, #0]
    ce02:	str	r4, [sp, #20]
    ce04:	mov.w	r4, #0
    ce08:	add	r4, sp, #16
    ce0a:	str.w	r9, [sp, #4]
    ce0e:	add	r7, pc
    ce10:	str	r4, [sp, #0]
    ce12:	str	r6, [sp, #16]
    ce14:	bl	1e490 <btrfs_insert_empty_items@@Base>
    ce18:	cmn.w	r0, #17
    ce1c:	mov	r4, r0
    ce1e:	bne.n	ce96 <btrfs_match_dir_item_name@@Base+0x1a0>
    ce20:	ldr	r3, [sp, #64]	; 0x40
    ce22:	mov	r2, sl
    ce24:	mov	r1, r5
    ce26:	mov	r0, r8
    ce28:	bl	ccf6 <btrfs_match_dir_item_name@@Base>
    ce2c:	cmp	r0, #0
    ce2e:	bne.n	ce9a <btrfs_match_dir_item_name@@Base+0x1a4>
    ce30:	mov	r2, r6
    ce32:	mov	r1, r5
    ce34:	mov	r0, r8
    ce36:	bl	1d4b4 <btrfs_extend_item@@Base>
    ce3a:	subs	r4, r0, #0
    ce3c:	ble.n	ce96 <btrfs_match_dir_item_name@@Base+0x1a0>
    ce3e:	ldr	r3, [pc, #212]	; (cf14 <btrfs_match_dir_item_name@@Base+0x21e>)
    ce40:	mov	r1, r9
    ce42:	ldr	r2, [pc, #212]	; (cf18 <btrfs_match_dir_item_name@@Base+0x222>)
    ce44:	ldr	r0, [r7, r3]
    ce46:	add	r2, pc
    ce48:	ldr	r3, [pc, #208]	; (cf1c <btrfs_match_dir_item_name@@Base+0x226>)
    ce4a:	str.w	r9, [sp, #12]
    ce4e:	add	r3, pc
    ce50:	str	r3, [sp, #8]
    ce52:	ldr	r3, [pc, #204]	; (cf20 <btrfs_match_dir_item_name@@Base+0x22a>)
    ce54:	add	r3, pc
    ce56:	str	r3, [sp, #4]
    ce58:	movs	r3, #46	; 0x2e
    ce5a:	str	r3, [sp, #0]
    ce5c:	ldr	r3, [pc, #196]	; (cf24 <btrfs_match_dir_item_name@@Base+0x22e>)
    ce5e:	ldr	r0, [r0, #0]
    ce60:	add	r3, pc
    ce62:	blx	8ca0 <__fprintf_chk@plt+0x4>
    ce66:	bl	cc44 <sanitize_name@@Base+0x160>
    ce6a:	ldr	r3, [pc, #168]	; (cf14 <btrfs_match_dir_item_name@@Base+0x21e>)
    ce6c:	movs	r1, #1
    ce6e:	ldr	r2, [pc, #184]	; (cf28 <btrfs_match_dir_item_name@@Base+0x232>)
    ce70:	ldr	r0, [r7, r3]
    ce72:	add	r2, pc
    ce74:	ldr	r3, [pc, #180]	; (cf2c <btrfs_match_dir_item_name@@Base+0x236>)
    ce76:	str	r1, [sp, #12]
    ce78:	add	r3, pc
    ce7a:	str	r3, [sp, #8]
    ce7c:	ldr	r3, [pc, #176]	; (cf30 <btrfs_match_dir_item_name@@Base+0x23a>)
    ce7e:	add	r3, pc
    ce80:	str	r3, [sp, #4]
    ce82:	movs	r3, #50	; 0x32
    ce84:	str	r3, [sp, #0]
    ce86:	ldr	r3, [pc, #172]	; (cf34 <btrfs_match_dir_item_name@@Base+0x23e>)
    ce88:	ldr	r0, [r0, #0]
    ce8a:	add	r3, pc
    ce8c:	blx	8ca0 <__fprintf_chk@plt+0x4>
    ce90:	bl	cc44 <sanitize_name@@Base+0x160>
    ce94:	b.n	cea0 <btrfs_match_dir_item_name@@Base+0x1aa>
    ce96:	cmp	r4, #0
    ce98:	bge.n	ce9e <btrfs_match_dir_item_name@@Base+0x1a8>
    ce9a:	mov	r0, r4
    ce9c:	b.n	ceec <btrfs_match_dir_item_name@@Base+0x1f6>
    ce9e:	bne.n	ce6a <btrfs_match_dir_item_name@@Base+0x174>
    cea0:	ldr	r2, [r5, #0]
    cea2:	movs	r1, #25
    cea4:	ldr	r3, [r5, #32]
    cea6:	mla	r3, r1, r3, r2
    ceaa:	ldr.w	r0, [r3, #214]	; 0xd6
    ceae:	add.w	r4, r0, #101	; 0x65
    ceb2:	ldr.w	r0, [r3, #218]	; 0xda
    ceb6:	cmp	r6, r0
    ceb8:	bls.n	cee8 <btrfs_match_dir_item_name@@Base+0x1f2>
    ceba:	ldr	r3, [pc, #88]	; (cf14 <btrfs_match_dir_item_name@@Base+0x21e>)
    cebc:	movs	r1, #1
    cebe:	ldr	r2, [pc, #120]	; (cf38 <btrfs_match_dir_item_name@@Base+0x242>)
    cec0:	ldr	r0, [r7, r3]
    cec2:	add	r2, pc
    cec4:	ldr	r3, [pc, #116]	; (cf3c <btrfs_match_dir_item_name@@Base+0x246>)
    cec6:	str	r1, [sp, #12]
    cec8:	add	r3, pc
    ceca:	str	r3, [sp, #8]
    cecc:	ldr	r3, [pc, #112]	; (cf40 <btrfs_match_dir_item_name@@Base+0x24a>)
    cece:	add	r3, pc
    ced0:	str	r3, [sp, #4]
    ced2:	movs	r3, #54	; 0x36
    ced4:	str	r3, [sp, #0]
    ced6:	ldr	r3, [pc, #108]	; (cf44 <btrfs_match_dir_item_name@@Base+0x24e>)
    ced8:	ldr	r0, [r0, #0]
    ceda:	add	r3, pc
    cedc:	blx	8ca0 <__fprintf_chk@plt+0x4>
    cee0:	bl	cc44 <sanitize_name@@Base+0x160>
    cee4:	blx	8e08 <abort@plt>
    cee8:	subs	r0, r0, r6
    ceea:	add	r0, r4
    ceec:	ldr	r2, [pc, #88]	; (cf48 <btrfs_match_dir_item_name@@Base+0x252>)
    ceee:	ldr	r3, [pc, #28]	; (cf0c <btrfs_match_dir_item_name@@Base+0x216>)
    cef0:	add	r2, pc
    cef2:	ldr	r3, [r2, r3]
    cef4:	ldr	r2, [r3, #0]
    cef6:	ldr	r3, [sp, #20]
    cef8:	eors	r2, r3
    cefa:	beq.n	cf00 <btrfs_match_dir_item_name@@Base+0x20a>
    cefc:	blx	88e4 <__stack_chk_fail@plt>
    cf00:	add	sp, #24
    cf02:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    cf06:	nop
    cf08:	it	mi
    cf0a:	movmi	r5, r0
    cf0c:	lsls	r4, r7, #9
    cf0e:	movs	r0, r0
    cf10:	ittt	cs
    cf12:	movcs	r5, r0
    cf14:	lslcs	r4, r1, #10
    cf16:	movcs	r0, r0
    cf18:	asrs	r2, r0, #16
    cf1a:	movs	r3, r0
    cf1c:	subs	r7, #123	; 0x7b
    cf1e:	movs	r3, r0
    cf20:	asrs	r3, r4, #17
    cf22:	movs	r3, r0
    cf24:	asrs	r5, r3, #15
    cf26:	movs	r3, r0
    cf28:	asrs	r6, r2, #15
    cf2a:	movs	r3, r0
    cf2c:	subs	r7, #81	; 0x51
    cf2e:	movs	r3, r0
    cf30:	asrs	r1, r7, #16
    cf32:	movs	r3, r0
    cf34:	asrs	r3, r6, #14
    cf36:	movs	r3, r0
    cf38:	lsls	r5, r4, #3
    cf3a:	movs	r3, r0
    cf3c:	asrs	r6, r6, #14
    cf3e:	movs	r3, r0
    cf40:	asrs	r1, r5, #15
    cf42:	movs	r3, r0
    cf44:	asrs	r3, r4, #13
    cf46:	movs	r3, r0
    cf48:	bkpt	0x0040
    cf4a:	movs	r5, r0

0000cf4c <btrfs_insert_xattr_item@@Base>:
    cf4c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cf50:	mov	r5, r3
    cf52:	vpush	{d8}
    cf56:	mov	r7, r2
    cf58:	ldr	r2, [pc, #320]	; (d09c <btrfs_insert_xattr_item@@Base+0x150>)
    cf5a:	mov	r9, r0
    cf5c:	mov	sl, r1
    cf5e:	mvn.w	r0, #1
    cf62:	add	r2, pc
    cf64:	mov	r1, r7
    cf66:	sub	sp, #76	; 0x4c
    cf68:	movs	r4, #0
    cf6a:	ldr.w	fp, [pc, #308]	; d0a0 <btrfs_insert_xattr_item@@Base+0x154>
    cf6e:	ldr	r3, [sp, #120]	; 0x78
    cf70:	ldrh.w	r8, [sp, #124]	; 0x7c
    cf74:	add	fp, pc
    cf76:	vmov	s16, r3
    cf7a:	ldr	r3, [pc, #296]	; (d0a4 <btrfs_insert_xattr_item@@Base+0x158>)
    cf7c:	ldr	r3, [r2, r3]
    cf7e:	mov	r2, r5
    cf80:	ldr	r3, [r3, #0]
    cf82:	str	r3, [sp, #68]	; 0x44
    cf84:	mov.w	r3, #0
    cf88:	ldr	r3, [sp, #128]	; 0x80
    cf8a:	str	r3, [sp, #28]
    cf8c:	ldr	r3, [sp, #132]	; 0x84
    cf8e:	str	r3, [sp, #32]
    cf90:	movs	r3, #24
    cf92:	strb.w	r3, [sp, #36]	; 0x24
    cf96:	bl	1a87e <crc32c_le@@Base>
    cf9a:	str.w	r4, [sp, #41]	; 0x29
    cf9e:	str.w	r0, [sp, #37]	; 0x25
    cfa2:	bl	1b2d4 <btrfs_alloc_path@@Base>
    cfa6:	mov	r6, r0
    cfa8:	cmp	r0, #0
    cfaa:	beq.n	d08c <btrfs_insert_xattr_item@@Base+0x140>
    cfac:	add.w	r3, r8, #30
    cfb0:	mov	r2, r0
    cfb2:	add	r3, r5
    cfb4:	mov	r0, r9
    cfb6:	str	r3, [sp, #0]
    cfb8:	mov	r1, sl
    cfba:	add	r3, sp, #28
    cfbc:	strd	r7, r5, [sp, #4]
    cfc0:	bl	cde0 <btrfs_match_dir_item_name@@Base+0xea>
    cfc4:	cmn.w	r0, #4096	; 0x1000
    cfc8:	mov	r9, r0
    cfca:	bls.n	cffe <btrfs_insert_xattr_item@@Base+0xb2>
    cfcc:	ldr	r3, [pc, #216]	; (d0a8 <btrfs_insert_xattr_item@@Base+0x15c>)
    cfce:	movs	r1, #1
    cfd0:	ldr	r2, [pc, #216]	; (d0ac <btrfs_insert_xattr_item@@Base+0x160>)
    cfd2:	ldr.w	r0, [fp, r3]
    cfd6:	add	r2, pc
    cfd8:	ldr	r3, [pc, #212]	; (d0b0 <btrfs_insert_xattr_item@@Base+0x164>)
    cfda:	str	r1, [sp, #12]
    cfdc:	add	r3, pc
    cfde:	str	r3, [sp, #8]
    cfe0:	ldr	r3, [pc, #208]	; (d0b4 <btrfs_insert_xattr_item@@Base+0x168>)
    cfe2:	add	r3, pc
    cfe4:	adds	r3, #21
    cfe6:	str	r3, [sp, #4]
    cfe8:	movs	r3, #89	; 0x59
    cfea:	str	r3, [sp, #0]
    cfec:	ldr	r3, [pc, #200]	; (d0b8 <btrfs_insert_xattr_item@@Base+0x16c>)
    cfee:	ldr	r0, [r0, #0]
    cff0:	add	r3, pc
    cff2:	blx	8ca0 <__fprintf_chk@plt+0x4>
    cff6:	bl	cc44 <sanitize_name@@Base+0x160>
    cffa:	blx	8e08 <abort@plt>
    cffe:	ldr	r0, [r6, #0]
    d000:	add	r1, sp, #48	; 0x30
    d002:	movs	r2, #0
    d004:	movs	r3, #0
    d006:	strd	r2, r3, [sp, #48]	; 0x30
    d00a:	movs	r3, #17
    d00c:	mov	r2, r9
    d00e:	str	r0, [sp, #20]
    d010:	strb.w	r4, [sp, #57]	; 0x39
    d014:	strb.w	r4, [sp, #58]	; 0x3a
    d018:	strb.w	r4, [sp, #59]	; 0x3b
    d01c:	strb.w	r4, [sp, #60]	; 0x3c
    d020:	strb.w	r4, [sp, #61]	; 0x3d
    d024:	strb.w	r4, [sp, #62]	; 0x3e
    d028:	strb.w	r4, [sp, #63]	; 0x3f
    d02c:	strb.w	r4, [sp, #64]	; 0x40
    d030:	strb.w	r4, [sp, #56]	; 0x38
    d034:	bl	1a7b4 <write_extent_buffer@@Base>
    d038:	ldr	r0, [sp, #20]
    d03a:	movs	r2, #8
    d03c:	mov	r1, r7
    d03e:	add.w	r3, r0, #96	; 0x60
    d042:	add	r3, r9
    d044:	strb	r2, [r3, #29]
    d046:	add.w	r2, r9, #30
    d04a:	add.w	sl, r2, r5
    d04e:	strh.w	r5, [r3, #27]
    d052:	strh.w	r8, [r3, #25]
    d056:	mov	r3, r5
    d058:	bl	1a7b4 <write_extent_buffer@@Base>
    d05c:	vmov	r1, s16
    d060:	mov	r3, r8
    d062:	mov	r2, sl
    d064:	ldr	r0, [sp, #20]
    d066:	bl	1a7b4 <write_extent_buffer@@Base>
    d06a:	ldr	r0, [r6, #0]
    d06c:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
    d070:	mov	r0, r6
    d072:	bl	1b302 <btrfs_free_path@@Base>
    d076:	mov	r0, r4
    d078:	ldr	r2, [pc, #64]	; (d0bc <btrfs_insert_xattr_item@@Base+0x170>)
    d07a:	ldr	r3, [pc, #40]	; (d0a4 <btrfs_insert_xattr_item@@Base+0x158>)
    d07c:	add	r2, pc
    d07e:	ldr	r3, [r2, r3]
    d080:	ldr	r2, [r3, #0]
    d082:	ldr	r3, [sp, #68]	; 0x44
    d084:	eors	r2, r3
    d086:	beq.n	d092 <btrfs_insert_xattr_item@@Base+0x146>
    d088:	blx	88e4 <__stack_chk_fail@plt>
    d08c:	mvn.w	r0, #11
    d090:	b.n	d078 <btrfs_insert_xattr_item@@Base+0x12c>
    d092:	add	sp, #76	; 0x4c
    d094:	vpop	{d8}
    d098:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d09c:	pop	{r1, r2, r3, r6, r7, pc}
    d09e:	movs	r5, r0
    d0a0:	pop	{r2, r3, r4, r5, r7, pc}
    d0a2:	movs	r5, r0
    d0a4:	lsls	r4, r7, #9
    d0a6:	movs	r0, r0
    d0a8:	lsls	r4, r1, #10
    d0aa:	movs	r0, r0
    d0ac:	vaddl.u16	q8, d1, d2
    d0b0:	asrs	r2, r1, #11
    d0b2:	movs	r3, r0
    d0b4:	asrs	r5, r2, #11
    d0b6:	movs	r3, r0
    d0b8:	asrs	r5, r1, #9
    d0ba:	movs	r3, r0
    d0bc:	pop	{r2, r4, r5, r7}
    d0be:	movs	r5, r0

0000d0c0 <btrfs_insert_dir_item@@Base>:
    d0c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d0c4:	sub	sp, #92	; 0x5c
    d0c6:	mov	r5, r3
    d0c8:	mov	r8, r2
    d0ca:	ldr	r3, [sp, #144]	; 0x90
    d0cc:	mov	sl, r0
    d0ce:	ldr	r2, [pc, #404]	; (d264 <btrfs_insert_dir_item@@Base+0x1a4>)
    d0d0:	mov	r9, r1
    d0d2:	mvn.w	r0, #1
    d0d6:	mov	r1, r8
    d0d8:	str	r3, [sp, #24]
    d0da:	add	r2, pc
    d0dc:	ldr	r3, [sp, #148]	; 0x94
    d0de:	movs	r4, #0
    d0e0:	ldr	r6, [sp, #136]	; 0x88
    d0e2:	ldrb.w	fp, [sp, #140]	; 0x8c
    d0e6:	str	r3, [sp, #28]
    d0e8:	ldr	r3, [pc, #380]	; (d268 <btrfs_insert_dir_item@@Base+0x1a8>)
    d0ea:	ldr	r3, [r2, r3]
    d0ec:	mov	r2, r5
    d0ee:	ldr	r3, [r3, #0]
    d0f0:	str	r3, [sp, #84]	; 0x54
    d0f2:	mov.w	r3, #0
    d0f6:	ldr	r3, [sp, #128]	; 0x80
    d0f8:	str	r3, [sp, #44]	; 0x2c
    d0fa:	ldr	r3, [sp, #132]	; 0x84
    d0fc:	str	r3, [sp, #48]	; 0x30
    d0fe:	movs	r3, #84	; 0x54
    d100:	strb.w	r3, [sp, #52]	; 0x34
    d104:	bl	1a87e <crc32c_le@@Base>
    d108:	str.w	r4, [sp, #57]	; 0x39
    d10c:	str.w	r0, [sp, #53]	; 0x35
    d110:	bl	1b2d4 <btrfs_alloc_path@@Base>
    d114:	mov	r7, r0
    d116:	cmp	r0, #0
    d118:	beq.w	d256 <btrfs_insert_dir_item@@Base+0x196>
    d11c:	add.w	r3, r5, #30
    d120:	mov	r2, r0
    d122:	str	r3, [sp, #20]
    d124:	mov	r1, r9
    d126:	str	r3, [sp, #0]
    d128:	mov	r0, sl
    d12a:	add	r3, sp, #44	; 0x2c
    d12c:	strd	r8, r5, [sp, #4]
    d130:	bl	cde0 <btrfs_match_dir_item_name@@Base+0xea>
    d134:	cmn.w	r0, #4096	; 0x1000
    d138:	mov	r2, r0
    d13a:	bls.n	d164 <btrfs_insert_dir_item@@Base+0xa4>
    d13c:	cmn.w	r0, #17
    d140:	beq.n	d1b6 <btrfs_insert_dir_item@@Base+0xf6>
    d142:	mov	r5, r0
    d144:	mov	r0, r7
    d146:	cmp	r5, #0
    d148:	it	ne
    d14a:	movne	r4, r5
    d14c:	bl	1b302 <btrfs_free_path@@Base>
    d150:	ldr	r2, [pc, #280]	; (d26c <btrfs_insert_dir_item@@Base+0x1ac>)
    d152:	ldr	r3, [pc, #276]	; (d268 <btrfs_insert_dir_item@@Base+0x1a8>)
    d154:	add	r2, pc
    d156:	ldr	r3, [r2, r3]
    d158:	ldr	r2, [r3, #0]
    d15a:	ldr	r3, [sp, #84]	; 0x54
    d15c:	eors	r2, r3
    d15e:	beq.n	d25c <btrfs_insert_dir_item@@Base+0x19c>
    d160:	blx	88e4 <__stack_chk_fail@plt>
    d164:	ldr.w	r3, [r6, #13]
    d168:	ldr.w	r1, [r6, #9]
    d16c:	ldr	r0, [r7, #0]
    d16e:	str.w	r3, [sp, #77]	; 0x4d
    d172:	ldrb	r3, [r6, #8]
    d174:	str.w	r1, [sp, #73]	; 0x49
    d178:	ldr	r1, [r6, #0]
    d17a:	strb.w	r3, [sp, #72]	; 0x48
    d17e:	ldr	r3, [r6, #4]
    d180:	str	r2, [sp, #36]	; 0x24
    d182:	str	r0, [sp, #32]
    d184:	strd	r1, r3, [sp, #64]	; 0x40
    d188:	add	r1, sp, #64	; 0x40
    d18a:	movs	r3, #17
    d18c:	bl	1a7b4 <write_extent_buffer@@Base>
    d190:	ldr	r0, [sp, #32]
    d192:	ldr	r2, [sp, #36]	; 0x24
    d194:	mov	r1, r8
    d196:	add.w	r3, r0, #96	; 0x60
    d19a:	add	r3, r2
    d19c:	adds	r2, #30
    d19e:	strb.w	fp, [r3, #29]
    d1a2:	strb	r4, [r3, #25]
    d1a4:	strb	r4, [r3, #26]
    d1a6:	strh.w	r5, [r3, #27]
    d1aa:	mov	r3, r5
    d1ac:	bl	1a7b4 <write_extent_buffer@@Base>
    d1b0:	ldr	r0, [sp, #32]
    d1b2:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
    d1b6:	ldr.w	r3, [r9, #464]	; 0x1d0
    d1ba:	ldr	r3, [r3, #28]
    d1bc:	cmp	r3, r9
    d1be:	beq.n	d250 <btrfs_insert_dir_item@@Base+0x190>
    d1c0:	mov	r0, r7
    d1c2:	bl	1b2dc <btrfs_release_path@@Base>
    d1c6:	movs	r3, #96	; 0x60
    d1c8:	strb.w	r3, [sp, #52]	; 0x34
    d1cc:	mov	r1, r9
    d1ce:	ldr	r3, [sp, #24]
    d1d0:	mov	r2, r7
    d1d2:	mov	r0, sl
    d1d4:	strd	r8, r5, [sp, #4]
    d1d8:	str.w	r3, [sp, #53]	; 0x35
    d1dc:	ldr	r3, [sp, #28]
    d1de:	str.w	r3, [sp, #57]	; 0x39
    d1e2:	ldr	r3, [sp, #20]
    d1e4:	str	r3, [sp, #0]
    d1e6:	add	r3, sp, #44	; 0x2c
    d1e8:	bl	cde0 <btrfs_match_dir_item_name@@Base+0xea>
    d1ec:	cmn.w	r0, #4096	; 0x1000
    d1f0:	mov	r9, r0
    d1f2:	bls.n	d1fa <btrfs_insert_dir_item@@Base+0x13a>
    d1f4:	mov	r4, r0
    d1f6:	movs	r5, #0
    d1f8:	b.n	d144 <btrfs_insert_dir_item@@Base+0x84>
    d1fa:	ldr.w	r3, [r6, #13]
    d1fe:	add	r1, sp, #64	; 0x40
    d200:	ldr	r0, [r7, #0]
    d202:	movs	r4, #0
    d204:	ldr.w	r2, [r6, #9]
    d208:	str.w	r3, [sp, #77]	; 0x4d
    d20c:	ldrb	r3, [r6, #8]
    d20e:	str.w	r2, [sp, #73]	; 0x49
    d212:	ldr	r2, [r6, #0]
    d214:	strb.w	r3, [sp, #72]	; 0x48
    d218:	ldr	r3, [r6, #4]
    d21a:	str	r0, [sp, #20]
    d21c:	strd	r2, r3, [sp, #64]	; 0x40
    d220:	mov	r2, r9
    d222:	movs	r3, #17
    d224:	bl	1a7b4 <write_extent_buffer@@Base>
    d228:	ldr	r0, [sp, #20]
    d22a:	add.w	r2, r9, #30
    d22e:	mov	r1, r8
    d230:	add.w	r3, r0, #96	; 0x60
    d234:	add	r3, r9
    d236:	strb.w	fp, [r3, #29]
    d23a:	strb	r4, [r3, #25]
    d23c:	strb	r4, [r3, #26]
    d23e:	strh.w	r5, [r3, #27]
    d242:	mov	r3, r5
    d244:	bl	1a7b4 <write_extent_buffer@@Base>
    d248:	ldr	r0, [sp, #20]
    d24a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
    d24e:	b.n	d1f6 <btrfs_insert_dir_item@@Base+0x136>
    d250:	movs	r4, #0
    d252:	mov	r5, r4
    d254:	b.n	d144 <btrfs_insert_dir_item@@Base+0x84>
    d256:	mvn.w	r4, #11
    d25a:	b.n	d150 <btrfs_insert_dir_item@@Base+0x90>
    d25c:	mov	r0, r4
    d25e:	add	sp, #92	; 0x5c
    d260:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d264:	pop	{r1, r2, r4, r6}
    d266:	movs	r5, r0
    d268:	lsls	r4, r7, #9
    d26a:	movs	r0, r0
    d26c:	cbnz	r4, d2e6 <btrfs_lookup_dir_item@@Base+0x76>
    d26e:	movs	r5, r0

0000d270 <btrfs_lookup_dir_item@@Base>:
    d270:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d274:	mov	r4, r2
    d276:	sub	sp, #60	; 0x3c
    d278:	ldr	r2, [pc, #208]	; (d34c <btrfs_lookup_dir_item@@Base+0xdc>)
    d27a:	ldr	r3, [pc, #212]	; (d350 <btrfs_lookup_dir_item@@Base+0xe0>)
    d27c:	mov	fp, r0
    d27e:	ldrd	r8, r9, [sp, #104]	; 0x68
    d282:	add	r2, pc
    d284:	ldrd	r6, r7, [sp, #96]	; 0x60
    d288:	mov	r5, r1
    d28a:	ldr	r3, [r2, r3]
    d28c:	mvn.w	r0, #1
    d290:	mov	r1, r8
    d292:	mov	r2, r9
    d294:	ldr	r3, [r3, #0]
    d296:	str	r3, [sp, #52]	; 0x34
    d298:	mov.w	r3, #0
    d29c:	ldr.w	sl, [sp, #112]	; 0x70
    d2a0:	movs	r3, #84	; 0x54
    d2a2:	strd	r6, r7, [sp, #12]
    d2a6:	strb.w	r3, [sp, #20]
    d2aa:	bl	1a87e <crc32c_le@@Base>
    d2ae:	movs	r3, #0
    d2b0:	str.w	r3, [sp, #25]
    d2b4:	subs.w	r3, sl, r3
    d2b8:	add	r2, sp, #12
    d2ba:	mov	r1, r5
    d2bc:	it	ne
    d2be:	movne	r3, #1
    d2c0:	str	r3, [sp, #4]
    d2c2:	mov.w	r3, sl, asr #31
    d2c6:	str	r3, [sp, #0]
    d2c8:	mov	r3, r4
    d2ca:	str.w	r0, [sp, #21]
    d2ce:	mov	r0, fp
    d2d0:	bl	1d6c0 <btrfs_search_slot@@Base>
    d2d4:	cmp	r0, #0
    d2d6:	blt.n	d2e0 <btrfs_lookup_dir_item@@Base+0x70>
    d2d8:	beq.n	d2f8 <btrfs_lookup_dir_item@@Base+0x88>
    d2da:	ldr	r3, [r4, #32]
    d2dc:	cbnz	r3, d2f4 <btrfs_lookup_dir_item@@Base+0x84>
    d2de:	movs	r0, #0
    d2e0:	ldr	r2, [pc, #112]	; (d354 <btrfs_lookup_dir_item@@Base+0xe4>)
    d2e2:	ldr	r3, [pc, #108]	; (d350 <btrfs_lookup_dir_item@@Base+0xe0>)
    d2e4:	add	r2, pc
    d2e6:	ldr	r3, [r2, r3]
    d2e8:	ldr	r2, [r3, #0]
    d2ea:	ldr	r3, [sp, #52]	; 0x34
    d2ec:	eors	r2, r3
    d2ee:	beq.n	d346 <btrfs_lookup_dir_item@@Base+0xd6>
    d2f0:	blx	88e4 <__stack_chk_fail@plt>
    d2f4:	subs	r3, #1
    d2f6:	str	r3, [r4, #32]
    d2f8:	ldr	r3, [r4, #32]
    d2fa:	movs	r2, #25
    d2fc:	ldr	r0, [r4, #0]
    d2fe:	add	r1, sp, #32
    d300:	muls	r2, r3
    d302:	movs	r3, #17
    d304:	adds	r2, #101	; 0x65
    d306:	bl	1a79e <read_extent_buffer@@Base>
    d30a:	ldrd	r2, r3, [sp, #32]
    d30e:	ldr.w	r0, [sp, #41]	; 0x29
    d312:	cmp	r7, r3
    d314:	ldr.w	r1, [sp, #45]	; 0x2d
    d318:	it	eq
    d31a:	cmpeq	r6, r2
    d31c:	ldrb.w	ip, [sp, #40]	; 0x28
    d320:	bne.n	d2de <btrfs_lookup_dir_item@@Base+0x6e>
    d322:	cmp.w	ip, #84	; 0x54
    d326:	bne.n	d2de <btrfs_lookup_dir_item@@Base+0x6e>
    d328:	ldr.w	r3, [sp, #25]
    d32c:	ldr.w	r2, [sp, #21]
    d330:	cmp	r3, r1
    d332:	it	eq
    d334:	cmpeq	r2, r0
    d336:	bne.n	d2de <btrfs_lookup_dir_item@@Base+0x6e>
    d338:	mov	r3, r9
    d33a:	mov	r2, r8
    d33c:	mov	r1, r4
    d33e:	mov	r0, r5
    d340:	bl	ccf6 <btrfs_match_dir_item_name@@Base>
    d344:	b.n	d2e0 <btrfs_lookup_dir_item@@Base+0x70>
    d346:	add	sp, #60	; 0x3c
    d348:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d34c:	hlt	0x002e
    d34e:	movs	r5, r0
    d350:	lsls	r4, r7, #9
    d352:	movs	r0, r0
    d354:	rev16	r4, r1
    d356:	movs	r5, r0

0000d358 <btrfs_lookup_dir_index@@Base>:
    d358:	ldr.w	ip, [pc, #128]	; d3dc <btrfs_lookup_dir_index@@Base+0x84>
    d35c:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    d360:	mov	r4, r2
    d362:	ldr	r2, [pc, #124]	; (d3e0 <btrfs_lookup_dir_index@@Base+0x88>)
    d364:	add	ip, pc
    d366:	sub	sp, #32
    d368:	mov	r5, r1
    d36a:	ldr.w	r2, [ip, r2]
    d36e:	ldr	r3, [sp, #80]	; 0x50
    d370:	ldr	r2, [r2, #0]
    d372:	str	r2, [sp, #28]
    d374:	mov.w	r2, #0
    d378:	movs	r2, #96	; 0x60
    d37a:	strb.w	r2, [sp, #16]
    d37e:	ldr	r2, [sp, #72]	; 0x48
    d380:	ldrd	r8, r9, [sp, #56]	; 0x38
    d384:	ldr	r6, [sp, #64]	; 0x40
    d386:	str.w	r2, [sp, #17]
    d38a:	ldr	r2, [sp, #76]	; 0x4c
    d38c:	strd	r8, r9, [sp, #8]
    d390:	str.w	r2, [sp, #21]
    d394:	subs	r2, r3, #0
    d396:	mov.w	r3, r3, asr #31
    d39a:	str	r3, [sp, #0]
    d39c:	it	ne
    d39e:	movne	r2, #1
    d3a0:	mov	r3, r4
    d3a2:	str	r2, [sp, #4]
    d3a4:	add	r2, sp, #8
    d3a6:	bl	1d6c0 <btrfs_search_slot@@Base>
    d3aa:	cmp	r0, #0
    d3ac:	blt.n	d3bc <btrfs_lookup_dir_index@@Base+0x64>
    d3ae:	bne.n	d3d0 <btrfs_lookup_dir_index@@Base+0x78>
    d3b0:	ldr	r3, [sp, #68]	; 0x44
    d3b2:	mov	r2, r6
    d3b4:	mov	r1, r4
    d3b6:	mov	r0, r5
    d3b8:	bl	ccf6 <btrfs_match_dir_item_name@@Base>
    d3bc:	ldr	r2, [pc, #36]	; (d3e4 <btrfs_lookup_dir_index@@Base+0x8c>)
    d3be:	ldr	r3, [pc, #32]	; (d3e0 <btrfs_lookup_dir_index@@Base+0x88>)
    d3c0:	add	r2, pc
    d3c2:	ldr	r3, [r2, r3]
    d3c4:	ldr	r2, [r3, #0]
    d3c6:	ldr	r3, [sp, #28]
    d3c8:	eors	r2, r3
    d3ca:	beq.n	d3d6 <btrfs_lookup_dir_index@@Base+0x7e>
    d3cc:	blx	88e4 <__stack_chk_fail@plt>
    d3d0:	mvn.w	r0, #1
    d3d4:	b.n	d3bc <btrfs_lookup_dir_index@@Base+0x64>
    d3d6:	add	sp, #32
    d3d8:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    d3dc:	cbnz	r4, d412 <btrfs_find_free_objectid@@Base+0x2a>
    d3de:	movs	r5, r0
    d3e0:	lsls	r4, r7, #9
    d3e2:	movs	r0, r0
    d3e4:	cbnz	r0, d404 <btrfs_find_free_objectid@@Base+0x1c>
    d3e6:	movs	r5, r0

0000d3e8 <btrfs_find_free_objectid@@Base>:
    d3e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d3ec:	mov	sl, r0
    d3ee:	vpush	{d8}
    d3f2:	mov	r5, r1
    d3f4:	ldr	r3, [pc, #444]	; (d5b4 <btrfs_find_free_objectid@@Base+0x1cc>)
    d3f6:	ldr	r2, [pc, #448]	; (d5b8 <btrfs_find_free_objectid@@Base+0x1d0>)
    d3f8:	add	r3, pc
    d3fa:	sub	sp, #140	; 0x8c
    d3fc:	add	r2, pc
    d3fe:	str	r3, [sp, #20]
    d400:	ldr	r3, [pc, #440]	; (d5bc <btrfs_find_free_objectid@@Base+0x1d4>)
    d402:	ldr.w	r8, [sp, #184]	; 0xb8
    d406:	ldr	r3, [r2, r3]
    d408:	ldr	r3, [r3, #0]
    d40a:	str	r3, [sp, #132]	; 0x84
    d40c:	mov.w	r3, #0
    d410:	bl	1b2d4 <btrfs_alloc_path@@Base>
    d414:	mov	r4, r0
    d416:	cmp	r0, #0
    d418:	beq.w	d59e <btrfs_find_free_objectid@@Base+0x1b6>
    d41c:	ldrd	r6, r7, [r5, #504]	; 0x1f8
    d420:	mov.w	r9, #0
    d424:	strb.w	r9, [sp, #37]	; 0x25
    d428:	cmp	r7, #0
    d42a:	strb.w	r9, [sp, #38]	; 0x26
    d42e:	it	eq
    d430:	cmpeq.w	r6, #256	; 0x100
    d434:	strb.w	r9, [sp, #39]	; 0x27
    d438:	strb.w	r9, [sp, #40]	; 0x28
    d43c:	itt	cc
    d43e:	movcc.w	r6, #256	; 0x100
    d442:	movcc	r7, #0
    d444:	strb.w	r9, [sp, #41]	; 0x29
    d448:	strd	r6, r7, [sp, #28]
    d44c:	strb.w	r9, [sp, #42]	; 0x2a
    d450:	strb.w	r9, [sp, #43]	; 0x2b
    d454:	strb.w	r9, [sp, #44]	; 0x2c
    d458:	strb.w	r9, [sp, #36]	; 0x24
    d45c:	bl	1b2cc <btrfs_init_path@@Base>
    d460:	mov	r3, r4
    d462:	add	r2, sp, #28
    d464:	mov	r1, r5
    d466:	mov	r0, sl
    d468:	strd	r9, r9, [sp]
    d46c:	bl	1d6c0 <btrfs_search_slot@@Base>
    d470:	subs	r3, r0, #0
    d472:	blt.w	d580 <btrfs_find_free_objectid@@Base+0x198>
    d476:	ldr	r3, [r4, #32]
    d478:	cmp	r3, r9
    d47a:	mov.w	r9, #0
    d47e:	itt	gt
    d480:	addgt.w	r3, r3, #4294967295	; 0xffffffff
    d484:	strgt	r3, [r4, #32]
    d486:	add	r3, sp, #48	; 0x30
    d488:	mov	fp, r9
    d48a:	mov	sl, r9
    d48c:	vmov	s16, r3
    d490:	ldr	r0, [r4, #0]
    d492:	ldr	r2, [r4, #32]
    d494:	ldr.w	r3, [r0, #192]	; 0xc0
    d498:	cmp	r2, r3
    d49a:	bcc.n	d52c <btrfs_find_free_objectid@@Base+0x144>
    d49c:	movs	r3, #0
    d49e:	mov	r1, r4
    d4a0:	strb.w	r3, [r4, #65]	; 0x41
    d4a4:	ldr.w	r0, [r5, #464]	; 0x1d0
    d4a8:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
    d4ac:	subs	r3, r0, #0
    d4ae:	beq.n	d490 <btrfs_find_free_objectid@@Base+0xa8>
    d4b0:	blt.n	d580 <btrfs_find_free_objectid@@Base+0x198>
    d4b2:	cmp.w	r9, #0
    d4b6:	bne.n	d516 <btrfs_find_free_objectid@@Base+0x12e>
    d4b8:	strd	r6, r7, [r8]
    d4bc:	ldrd	r2, r3, [r8]
    d4c0:	mov	r0, r4
    d4c2:	strd	r2, r3, [r5, #504]	; 0x1f8
    d4c6:	bl	1b302 <btrfs_free_path@@Base>
    d4ca:	ldrd	r2, r3, [r8]
    d4ce:	cmp	r3, r7
    d4d0:	it	eq
    d4d2:	cmpeq	r2, r6
    d4d4:	bcs.n	d5a4 <btrfs_find_free_objectid@@Base+0x1bc>
    d4d6:	ldr	r2, [sp, #20]
    d4d8:	add	r4, sp, #68	; 0x44
    d4da:	ldr	r3, [pc, #228]	; (d5c0 <btrfs_find_free_objectid@@Base+0x1d8>)
    d4dc:	movs	r1, #1
    d4de:	ldr	r0, [r2, r3]
    d4e0:	ldr	r3, [pc, #224]	; (d5c4 <btrfs_find_free_objectid@@Base+0x1dc>)
    d4e2:	ldr	r2, [pc, #228]	; (d5c8 <btrfs_find_free_objectid@@Base+0x1e0>)
    d4e4:	add	r3, pc
    d4e6:	str	r3, [sp, #8]
    d4e8:	ldr	r3, [pc, #224]	; (d5cc <btrfs_find_free_objectid@@Base+0x1e4>)
    d4ea:	add	r2, pc
    d4ec:	str	r1, [sp, #12]
    d4ee:	add	r3, pc
    d4f0:	str	r3, [sp, #4]
    d4f2:	movs	r3, #98	; 0x62
    d4f4:	str	r3, [sp, #0]
    d4f6:	ldr	r3, [pc, #216]	; (d5d0 <btrfs_find_free_objectid@@Base+0x1e8>)
    d4f8:	ldr	r0, [r0, #0]
    d4fa:	add	r3, pc
    d4fc:	blx	8ca0 <__fprintf_chk@plt+0x4>
    d500:	movs	r1, #16
    d502:	mov	r0, r4
    d504:	blx	8ae0 <backtrace@plt>
    d508:	movs	r2, #2
    d50a:	mov	r1, r0
    d50c:	mov	r0, r4
    d50e:	blx	8e50 <backtrace_symbols_fd@plt>
    d512:	blx	8e08 <abort@plt>
    d516:	cmp	sl, r7
    d518:	mov	r2, fp
    d51a:	it	eq
    d51c:	cmpeq	fp, r6
    d51e:	mov	r3, sl
    d520:	itt	cc
    d522:	movcc	r2, r6
    d524:	movcc	r3, r7
    d526:	strd	r2, r3, [r8]
    d52a:	b.n	d4bc <btrfs_find_free_objectid@@Base+0xd4>
    d52c:	movs	r3, #25
    d52e:	vmov	r1, s16
    d532:	muls	r2, r3
    d534:	movs	r3, #17
    d536:	adds	r2, #101	; 0x65
    d538:	bl	1a79e <read_extent_buffer@@Base>
    d53c:	ldrd	r2, r3, [sp, #48]	; 0x30
    d540:	cmp	r3, r7
    d542:	it	eq
    d544:	cmpeq	r2, r6
    d546:	bcc.n	d56c <btrfs_find_free_objectid@@Base+0x184>
    d548:	cmp.w	r9, #0
    d54c:	beq.n	d56c <btrfs_find_free_objectid@@Base+0x184>
    d54e:	cmp	sl, r7
    d550:	mov	r0, fp
    d552:	it	eq
    d554:	cmpeq	fp, r6
    d556:	mov	r1, sl
    d558:	itt	cc
    d55a:	movcc	r0, r6
    d55c:	movcc	r1, r7
    d55e:	cmp	r1, r3
    d560:	it	eq
    d562:	cmpeq	r0, r2
    d564:	bcs.n	d56c <btrfs_find_free_objectid@@Base+0x184>
    d566:	strd	r0, r1, [r8]
    d56a:	b.n	d4bc <btrfs_find_free_objectid@@Base+0xd4>
    d56c:	adds.w	fp, r2, #1
    d570:	mov.w	r9, #1
    d574:	adc.w	sl, r3, #0
    d578:	ldr	r3, [r4, #32]
    d57a:	adds	r3, #1
    d57c:	str	r3, [r4, #32]
    d57e:	b.n	d490 <btrfs_find_free_objectid@@Base+0xa8>
    d580:	mov	r0, r4
    d582:	str	r3, [sp, #20]
    d584:	bl	1b302 <btrfs_free_path@@Base>
    d588:	ldr	r3, [sp, #20]
    d58a:	ldr	r1, [pc, #72]	; (d5d4 <btrfs_find_free_objectid@@Base+0x1ec>)
    d58c:	ldr	r2, [pc, #44]	; (d5bc <btrfs_find_free_objectid@@Base+0x1d4>)
    d58e:	add	r1, pc
    d590:	ldr	r2, [r1, r2]
    d592:	ldr	r1, [r2, #0]
    d594:	ldr	r2, [sp, #132]	; 0x84
    d596:	eors	r1, r2
    d598:	beq.n	d5a8 <btrfs_find_free_objectid@@Base+0x1c0>
    d59a:	blx	88e4 <__stack_chk_fail@plt>
    d59e:	mvn.w	r3, #11
    d5a2:	b.n	d58a <btrfs_find_free_objectid@@Base+0x1a2>
    d5a4:	movs	r3, #0
    d5a6:	b.n	d58a <btrfs_find_free_objectid@@Base+0x1a2>
    d5a8:	mov	r0, r3
    d5aa:	add	sp, #140	; 0x8c
    d5ac:	vpop	{d8}
    d5b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d5b4:	cbnz	r0, d5c6 <btrfs_find_free_objectid@@Base+0x1de>
    d5b6:	movs	r5, r0
    d5b8:	cbnz	r4, d5c8 <btrfs_find_free_objectid@@Base+0x1e0>
    d5ba:	movs	r5, r0
    d5bc:	lsls	r4, r7, #9
    d5be:	movs	r0, r0
    d5c0:	lsls	r4, r1, #10
    d5c2:	movs	r0, r0
    d5c4:	lsrs	r4, r1, #24
    d5c6:	movs	r3, r0
    d5c8:			; <UNDEFINED> instruction: 0xfabd0002
    d5cc:	lsrs	r3, r3, #24
    d5ce:	movs	r3, r0
    d5d0:	lsrs	r2, r5, #23
    d5d2:	movs	r3, r0
    d5d4:			; <UNDEFINED> instruction: 0xb7a2
    d5d6:	movs	r5, r0
    d5d8:	push	{r4, r5, lr}
    d5da:	ldrd	r4, r5, [r0, #40]	; 0x28
    d5de:	ldrd	r0, r1, [r1, #40]	; 0x28
    d5e2:	cmp	r1, r5
    d5e4:	it	eq
    d5e6:	cmpeq	r0, r4
    d5e8:	bcc.n	d5fe <btrfs_find_free_objectid@@Base+0x216>
    d5ea:	cmp	r5, r1
    d5ec:	it	eq
    d5ee:	cmpeq	r4, r0
    d5f0:	ite	cc
    d5f2:	movcc.w	r0, #4294967295	; 0xffffffff
    d5f6:	movcs	r0, #0
    d5f8:	cbz	r2, d5fc <btrfs_find_free_objectid@@Base+0x214>
    d5fa:	negs	r0, r0
    d5fc:	pop	{r4, r5, pc}
    d5fe:	movs	r0, #1
    d600:	b.n	d5f8 <btrfs_find_free_objectid@@Base+0x210>
    d602:	push	{r4, r5, lr}
    d604:	ldrd	r4, r5, [r0, #56]	; 0x38
    d608:	ldrd	r0, r1, [r1, #56]	; 0x38
    d60c:	cmp	r1, r5
    d60e:	it	eq
    d610:	cmpeq	r0, r4
    d612:	bcc.n	d628 <btrfs_find_free_objectid@@Base+0x240>
    d614:	cmp	r5, r1
    d616:	it	eq
    d618:	cmpeq	r4, r0
    d61a:	ite	cc
    d61c:	movcc.w	r0, #4294967295	; 0xffffffff
    d620:	movcs	r0, #0
    d622:	cbz	r2, d626 <btrfs_find_free_objectid@@Base+0x23e>
    d624:	negs	r0, r0
    d626:	pop	{r4, r5, pc}
    d628:	movs	r0, #1
    d62a:	b.n	d622 <btrfs_find_free_objectid@@Base+0x23a>
    d62c:	push	{r4, r5, lr}
    d62e:	ldrd	r4, r5, [r0, #72]	; 0x48
    d632:	ldrd	r0, r1, [r1, #72]	; 0x48
    d636:	cmp	r1, r5
    d638:	it	eq
    d63a:	cmpeq	r0, r4
    d63c:	bcc.n	d652 <btrfs_find_free_objectid@@Base+0x26a>
    d63e:	cmp	r5, r1
    d640:	it	eq
    d642:	cmpeq	r4, r0
    d644:	ite	cc
    d646:	movcc.w	r0, #4294967295	; 0xffffffff
    d64a:	movcs	r0, #0
    d64c:	cbz	r2, d650 <btrfs_find_free_objectid@@Base+0x268>
    d64e:	negs	r0, r0
    d650:	pop	{r4, r5, pc}
    d652:	movs	r0, #1
    d654:	b.n	d64c <btrfs_find_free_objectid@@Base+0x264>
    d656:	push	{r4, r5, lr}
    d658:	ldrd	r4, r5, [r0, #96]	; 0x60
    d65c:	ldrd	r0, r1, [r1, #96]	; 0x60
    d660:	cmp	r1, r5
    d662:	it	eq
    d664:	cmpeq	r0, r4
    d666:	bcc.n	d67c <btrfs_find_free_objectid@@Base+0x294>
    d668:	cmp	r5, r1
    d66a:	it	eq
    d66c:	cmpeq	r4, r0
    d66e:	ite	cc
    d670:	movcc.w	r0, #4294967295	; 0xffffffff
    d674:	movcs	r0, #0
    d676:	cbz	r2, d67a <btrfs_find_free_objectid@@Base+0x292>
    d678:	negs	r0, r0
    d67a:	pop	{r4, r5, pc}
    d67c:	movs	r0, #1
    d67e:	b.n	d676 <btrfs_find_free_objectid@@Base+0x28e>
    d680:	push	{r4, r5, lr}
    d682:	ldrd	r4, r5, [r0, #104]	; 0x68
    d686:	ldrd	r0, r1, [r1, #104]	; 0x68
    d68a:	cmp	r1, r5
    d68c:	it	eq
    d68e:	cmpeq	r0, r4
    d690:	bcc.n	d6a6 <btrfs_find_free_objectid@@Base+0x2be>
    d692:	cmp	r5, r1
    d694:	it	eq
    d696:	cmpeq	r4, r0
    d698:	ite	cc
    d69a:	movcc.w	r0, #4294967295	; 0xffffffff
    d69e:	movcs	r0, #0
    d6a0:	cbz	r2, d6a4 <btrfs_find_free_objectid@@Base+0x2bc>
    d6a2:	negs	r0, r0
    d6a4:	pop	{r4, r5, pc}
    d6a6:	movs	r0, #1
    d6a8:	b.n	d6a0 <btrfs_find_free_objectid@@Base+0x2b8>
    d6aa:	push	{r4, r5, lr}
    d6ac:	mov	r4, r2
    d6ae:	mov	r5, r3
    d6b0:	orrs.w	r3, r4, r5
    d6b4:	beq.n	d6ca <btrfs_find_free_objectid@@Base+0x2e2>
    d6b6:	ldrd	r4, r5, [r2, #40]	; 0x28
    d6ba:	ldrd	r2, r3, [r0, #40]	; 0x28
    d6be:	cmp	r5, r3
    d6c0:	itte	eq
    d6c2:	cmpeq	r4, r2
    d6c4:	moveq	r0, #1
    d6c6:	movne	r0, #0
    d6c8:	pop	{r4, r5, pc}
    d6ca:	movs	r0, #0
    d6cc:	b.n	d6c8 <btrfs_find_free_objectid@@Base+0x2e0>
    d6ce:	push	{r3, r4, r5, lr}
    d6d0:	mov	r2, r0
    d6d2:	mov	r3, r1
    d6d4:	mov	r5, r0
    d6d6:	movs	r1, #0
    d6d8:	ldr	r4, [r2, #0]
    d6da:	cbnz	r4, d6f2 <btrfs_find_free_objectid@@Base+0x30a>
    d6dc:	add.w	r0, r3, #24
    d6e0:	strd	r1, r4, [r3, #24]
    d6e4:	str	r4, [r3, #32]
    d6e6:	mov	r1, r5
    d6e8:	str	r0, [r2, #0]
    d6ea:	bl	16fae <rb_insert_color@@Base>
    d6ee:	mov	r0, r4
    d6f0:	pop	{r3, r4, r5, pc}
    d6f2:	sub.w	r1, r4, #24
    d6f6:	movs	r2, #0
    d6f8:	mov	r0, r3
    d6fa:	bl	d5d8 <btrfs_find_free_objectid@@Base+0x1f0>
    d6fe:	cmp	r0, #0
    d700:	bge.n	d70a <btrfs_find_free_objectid@@Base+0x322>
    d702:	add.w	r2, r4, #8
    d706:	mov	r1, r4
    d708:	b.n	d6d8 <btrfs_find_free_objectid@@Base+0x2f0>
    d70a:	beq.n	d710 <btrfs_find_free_objectid@@Base+0x328>
    d70c:	adds	r2, r4, #4
    d70e:	b.n	d706 <btrfs_find_free_objectid@@Base+0x31e>
    d710:	mvn.w	r0, #16
    d714:	b.n	d6f0 <btrfs_find_free_objectid@@Base+0x308>
    d716:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}
    d71a:	mov	r5, r0
    d71c:	mov	r0, r2
    d71e:	ldr	r2, [pc, #144]	; (d7b0 <btrfs_find_free_objectid@@Base+0x3c8>)
    d720:	mov	r1, r3
    d722:	ldr	r3, [pc, #144]	; (d7b4 <btrfs_find_free_objectid@@Base+0x3cc>)
    d724:	add	r2, pc
    d726:	ldr	r3, [r2, r3]
    d728:	ldr	r3, [r3, #0]
    d72a:	str	r3, [sp, #4]
    d72c:	mov.w	r3, #0
    d730:	orrs.w	r3, r0, r1
    d734:	bne.n	d74c <btrfs_find_free_objectid@@Base+0x364>
    d736:	movs	r0, #0
    d738:	ldr	r2, [pc, #124]	; (d7b8 <btrfs_find_free_objectid@@Base+0x3d0>)
    d73a:	ldr	r3, [pc, #120]	; (d7b4 <btrfs_find_free_objectid@@Base+0x3cc>)
    d73c:	add	r2, pc
    d73e:	ldr	r3, [r2, r3]
    d740:	ldr	r2, [r3, #0]
    d742:	ldr	r3, [sp, #4]
    d744:	eors	r2, r3
    d746:	beq.n	d7aa <btrfs_find_free_objectid@@Base+0x3c2>
    d748:	blx	88e4 <__stack_chk_fail@plt>
    d74c:	ldrd	r2, r3, [r5, #40]	; 0x28
    d750:	ldrd	r6, r7, [r0, #40]	; 0x28
    d754:	cmp	r3, r7
    d756:	it	eq
    d758:	cmpeq	r2, r6
    d75a:	bne.n	d760 <btrfs_find_free_objectid@@Base+0x378>
    d75c:	movs	r0, #1
    d75e:	b.n	d738 <btrfs_find_free_objectid@@Base+0x350>
    d760:	mov	r8, sp
    d762:	mov	r1, r0
    d764:	mov	r0, r8
    d766:	movs	r3, #0
    d768:	str	r3, [sp, #0]
    d76a:	bl	d6ce <btrfs_find_free_objectid@@Base+0x2e6>
    d76e:	mov	r0, r8
    d770:	bl	172ca <rb_first@@Base>
    d774:	mov	r4, r0
    d776:	cmp	r0, #0
    d778:	beq.n	d736 <btrfs_find_free_objectid@@Base+0x34e>
    d77a:	ldr	r6, [r4, #104]	; 0x68
    d77c:	add.w	sl, r4, #104	; 0x68
    d780:	cmp	sl, r6
    d782:	bne.n	d78e <btrfs_find_free_objectid@@Base+0x3a6>
    d784:	mov	r1, r8
    d786:	mov	r0, r4
    d788:	bl	17054 <rb_erase@@Base>
    d78c:	b.n	d76e <btrfs_find_free_objectid@@Base+0x386>
    d78e:	ldr	r1, [r6, #16]
    d790:	ldrd	r2, r3, [r5, #40]	; 0x28
    d794:	ldrd	fp, ip, [r1, #40]	; 0x28
    d798:	cmp	ip, r3
    d79a:	it	eq
    d79c:	cmpeq	fp, r2
    d79e:	beq.n	d75c <btrfs_find_free_objectid@@Base+0x374>
    d7a0:	mov	r0, r8
    d7a2:	bl	d6ce <btrfs_find_free_objectid@@Base+0x2e6>
    d7a6:	ldr	r6, [r6, #0]
    d7a8:	b.n	d780 <btrfs_find_free_objectid@@Base+0x398>
    d7aa:	add	sp, #8
    d7ac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}
    d7b0:			; <UNDEFINED> instruction: 0xb60c
    d7b2:	movs	r5, r0
    d7b4:	lsls	r4, r7, #9
    d7b6:	movs	r0, r0
    d7b8:	push	{r2, r4, r5, r6, r7, lr}
    d7ba:	movs	r5, r0
    d7bc:	ldr	r3, [pc, #28]	; (d7dc <btrfs_find_free_objectid@@Base+0x3f4>)
    d7be:	movs	r2, #20
    d7c0:	push	{r4, lr}
    d7c2:	add	r3, pc
    d7c4:	mla	r0, r2, r0, r3
    d7c8:	ldr	r4, [r0, #16]
    d7ca:	subs	r4, r4, r1
    d7cc:	subs	r4, #1
    d7ce:	bcs.n	d7d2 <btrfs_find_free_objectid@@Base+0x3ea>
    d7d0:	pop	{r4, pc}
    d7d2:	movs	r0, #32
    d7d4:	blx	8c08 <putchar@plt+0x4>
    d7d8:	b.n	d7cc <btrfs_find_free_objectid@@Base+0x3e4>
    d7da:	nop
    d7dc:			; <UNDEFINED> instruction: 0xb842
    d7de:	movs	r5, r0
    d7e0:	push	{r4, lr}
    d7e2:	mov	r4, r3
    d7e4:	bl	33988 <pretty_size_mode@@Base>
    d7e8:	ldr	r1, [pc, #16]	; (d7fc <btrfs_find_free_objectid@@Base+0x414>)
    d7ea:	mov	r2, r4
    d7ec:	ldmia.w	sp!, {r4, lr}
    d7f0:	add	r1, pc
    d7f2:	mov	r3, r0
    d7f4:	movs	r0, #1
    d7f6:	b.w	8c68 <__printf_chk@plt>
    d7fa:	nop
    d7fc:	lsrs	r2, r6, #12
    d7fe:	movs	r3, r0
    d800:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d804:	mov	r9, r0
    d806:	ldr	r4, [r0, #0]
    d808:	mov	r7, r1
    d80a:	mov	r8, r2
    d80c:	cbz	r4, d838 <btrfs_find_free_objectid@@Base+0x450>
    d80e:	ldr	r2, [r4, #16]
    d810:	ldr	r5, [r4, #8]
    d812:	add	r5, r2
    d814:	ldr	r2, [r4, #24]
    d816:	add	r5, r2
    d818:	adds	r0, r5, r7
    d81a:	movs	r1, #1
    d81c:	adds	r0, #9
    d81e:	lsls	r0, r0, #3
    d820:	blx	8718 <calloc@plt+0x4>
    d824:	mov	r6, r0
    d826:	cbnz	r0, d83c <btrfs_find_free_objectid@@Base+0x454>
    d828:	ldr	r0, [pc, #104]	; (d894 <btrfs_find_free_objectid@@Base+0x4ac>)
    d82a:	add	r0, pc
    d82c:	bl	1a900 <__btrfs_error@@Base>
    d830:	mvn.w	r0, #11
    d834:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d838:	mov	r5, r4
    d83a:	b.n	d818 <btrfs_find_free_objectid@@Base+0x430>
    d83c:	cbz	r4, d884 <btrfs_find_free_objectid@@Base+0x49c>
    d83e:	ldrd	r2, r3, [r4, #8]
    d842:	add.w	fp, r4, #72	; 0x48
    d846:	mov.w	sl, r8, lsl #3
    d84a:	mov	r1, fp
    d84c:	strd	r2, r3, [r0, #8]
    d850:	ldrd	r2, r3, [r4, #16]
    d854:	strd	r2, r3, [r0, #16]
    d858:	ldrd	r2, r3, [r4, #24]
    d85c:	strd	r2, r3, [r0, #24]
    d860:	add.w	r3, r0, #72	; 0x48
    d864:	mov	r2, sl
    d866:	mov	r0, r3
    d868:	blx	8830 <memcpy@plt+0x4>
    d86c:	sub.w	r2, r5, r8
    d870:	add.w	r1, fp, sl
    d874:	lsls	r2, r2, #3
    d876:	mov	r3, r0
    d878:	add.w	r0, r8, r7
    d87c:	add.w	r0, r3, r0, lsl #3
    d880:	blx	8830 <memcpy@plt+0x4>
    d884:	mov	r0, r4
    d886:	blx	87cc <free@plt+0x4>
    d88a:	movs	r0, #0
    d88c:	str.w	r6, [r9]
    d890:	b.n	d834 <btrfs_find_free_objectid@@Base+0x44c>
    d892:	nop
    d894:	lsls	r7, r5, #20
    d896:	movs	r3, r0
    d898:	push	{r4, lr}
    d89a:	sub	sp, #152	; 0x98
    d89c:	ldr	r4, [pc, #72]	; (d8e8 <btrfs_find_free_objectid@@Base+0x500>)
    d89e:	ldr	r1, [pc, #76]	; (d8ec <btrfs_find_free_objectid@@Base+0x504>)
    d8a0:	add	r4, pc
    d8a2:	ldr	r1, [r4, r1]
    d8a4:	mov	r4, sp
    d8a6:	ldr	r1, [r1, #0]
    d8a8:	str	r1, [sp, #148]	; 0x94
    d8aa:	mov.w	r1, #0
    d8ae:	strd	r2, r3, [sp, #40]	; 0x28
    d8b2:	mov	r3, r0
    d8b4:	cbnz	r3, d8ca <btrfs_find_free_objectid@@Base+0x4e2>
    d8b6:	ldr	r1, [pc, #56]	; (d8f0 <btrfs_find_free_objectid@@Base+0x508>)
    d8b8:	ldr	r2, [pc, #48]	; (d8ec <btrfs_find_free_objectid@@Base+0x504>)
    d8ba:	add	r1, pc
    d8bc:	ldr	r2, [r1, r2]
    d8be:	ldr	r1, [r2, #0]
    d8c0:	ldr	r2, [sp, #148]	; 0x94
    d8c2:	eors	r1, r2
    d8c4:	beq.n	d8e2 <btrfs_find_free_objectid@@Base+0x4fa>
    d8c6:	blx	88e4 <__stack_chk_fail@plt>
    d8ca:	movs	r2, #0
    d8cc:	mov	r1, r3
    d8ce:	mov	r0, r4
    d8d0:	bl	d5d8 <btrfs_find_free_objectid@@Base+0x1f0>
    d8d4:	cmp	r0, #0
    d8d6:	bge.n	d8dc <btrfs_find_free_objectid@@Base+0x4f4>
    d8d8:	ldr	r3, [r3, #8]
    d8da:	b.n	d8b4 <btrfs_find_free_objectid@@Base+0x4cc>
    d8dc:	beq.n	d8b6 <btrfs_find_free_objectid@@Base+0x4ce>
    d8de:	ldr	r3, [r3, #4]
    d8e0:	b.n	d8b4 <btrfs_find_free_objectid@@Base+0x4cc>
    d8e2:	mov	r0, r3
    d8e4:	add	sp, #152	; 0x98
    d8e6:	pop	{r4, pc}
    d8e8:	push	{r4, r7}
    d8ea:	movs	r5, r0
    d8ec:	lsls	r4, r7, #9
    d8ee:	movs	r0, r0
    d8f0:	push	{r1, r2, r4, r5, r6}
    d8f2:	movs	r5, r0
    d8f4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d8f8:	movs	r1, #144	; 0x90
    d8fa:	mov	r8, r0
    d8fc:	movs	r0, #1
    d8fe:	mov	r7, r2
    d900:	mov	r6, r3
    d902:	blx	8718 <calloc@plt+0x4>
    d906:	mov	r4, r0
    d908:	cbnz	r0, d91c <btrfs_find_free_objectid@@Base+0x534>
    d90a:	ldr	r0, [pc, #124]	; (d988 <btrfs_find_free_objectid@@Base+0x5a0>)
    d90c:	mvn.w	r4, #11
    d910:	add	r0, pc
    d912:	bl	1a900 <__btrfs_error@@Base>
    d916:	mov	r0, r4
    d918:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d91c:	add.w	r3, r0, #128	; 0x80
    d920:	movs	r2, #0
    d922:	strd	r3, r3, [r0, #128]	; 0x80
    d926:	add.w	r3, r0, #136	; 0x88
    d92a:	strd	r3, r3, [r0, #136]	; 0x88
    d92e:	mov	r3, r8
    d930:	strd	r7, r6, [r0, #40]	; 0x28
    d934:	ldr	r5, [r3, #0]
    d936:	cbnz	r5, d94a <btrfs_find_free_objectid@@Base+0x562>
    d938:	strd	r2, r5, [r4]
    d93c:	mov	r1, r8
    d93e:	str	r5, [r4, #8]
    d940:	mov	r0, r4
    d942:	str	r4, [r3, #0]
    d944:	bl	16fae <rb_insert_color@@Base>
    d948:	b.n	d916 <btrfs_find_free_objectid@@Base+0x52e>
    d94a:	movs	r2, #0
    d94c:	mov	r1, r5
    d94e:	mov	r0, r4
    d950:	bl	d5d8 <btrfs_find_free_objectid@@Base+0x1f0>
    d954:	cmp	r0, #0
    d956:	bge.n	d960 <btrfs_find_free_objectid@@Base+0x578>
    d958:	add.w	r3, r5, #8
    d95c:	mov	r2, r5
    d95e:	b.n	d934 <btrfs_find_free_objectid@@Base+0x54c>
    d960:	beq.n	d966 <btrfs_find_free_objectid@@Base+0x57e>
    d962:	adds	r3, r5, #4
    d964:	b.n	d95c <btrfs_find_free_objectid@@Base+0x574>
    d966:	blx	8bac <__errno_location@plt>
    d96a:	movs	r3, #17
    d96c:	mov	r2, r7
    d96e:	str	r3, [r0, #0]
    d970:	mov	r3, r6
    d972:	ldr	r0, [pc, #24]	; (d98c <btrfs_find_free_objectid@@Base+0x5a4>)
    d974:	add	r0, pc
    d976:	bl	1a900 <__btrfs_error@@Base>
    d97a:	mov	r0, r4
    d97c:	blx	87cc <free@plt+0x4>
    d980:	mvn.w	r4, #16
    d984:	b.n	d916 <btrfs_find_free_objectid@@Base+0x52e>
    d986:	nop
    d988:	lsrs	r6, r2, #8
    d98a:	movs	r3, r0
    d98c:	lsrs	r3, r1, #7
    d98e:	movs	r3, r0
    d990:	ldr.w	ip, [pc, #104]	; d9fc <btrfs_find_free_objectid@@Base+0x614>
    d994:	push	{r4, r5, lr}
    d996:	add	ip, pc
    d998:	ldr	r5, [pc, #100]	; (da00 <btrfs_find_free_objectid@@Base+0x618>)
    d99a:	sub	sp, #92	; 0x5c
    d99c:	ldr	r4, [pc, #100]	; (da04 <btrfs_find_free_objectid@@Base+0x61c>)
    d99e:	ldr.w	r5, [ip, r5]
    d9a2:	add	r4, pc
    d9a4:	ldr	r5, [r5, #0]
    d9a6:	str	r5, [sp, #84]	; 0x54
    d9a8:	mov.w	r5, #0
    d9ac:	cbnz	r3, d9e2 <btrfs_find_free_objectid@@Base+0x5fa>
    d9ae:	ldr	r5, [pc, #88]	; (da08 <btrfs_find_free_objectid@@Base+0x620>)
    d9b0:	ldr	r4, [r4, r5]
    d9b2:	strd	r2, r1, [sp]
    d9b6:	movs	r1, #1
    d9b8:	strd	r0, r3, [sp, #8]
    d9bc:	ldr	r2, [pc, #76]	; (da0c <btrfs_find_free_objectid@@Base+0x624>)
    d9be:	ldr	r3, [pc, #80]	; (da10 <btrfs_find_free_objectid@@Base+0x628>)
    d9c0:	ldr	r0, [r4, #0]
    d9c2:	add	r4, sp, #20
    d9c4:	add	r3, pc
    d9c6:	add	r2, pc
    d9c8:	blx	8ca0 <__fprintf_chk@plt+0x4>
    d9cc:	movs	r1, #16
    d9ce:	mov	r0, r4
    d9d0:	blx	8ae0 <backtrace@plt>
    d9d4:	movs	r2, #2
    d9d6:	mov	r1, r0
    d9d8:	mov	r0, r4
    d9da:	blx	8e50 <backtrace_symbols_fd@plt>
    d9de:	blx	8e08 <abort@plt>
    d9e2:	ldr	r2, [pc, #48]	; (da14 <btrfs_find_free_objectid@@Base+0x62c>)
    d9e4:	ldr	r3, [pc, #24]	; (da00 <btrfs_find_free_objectid@@Base+0x618>)
    d9e6:	add	r2, pc
    d9e8:	ldr	r3, [r2, r3]
    d9ea:	ldr	r2, [r3, #0]
    d9ec:	ldr	r3, [sp, #84]	; 0x54
    d9ee:	eors	r2, r3
    d9f0:	beq.n	d9f6 <btrfs_find_free_objectid@@Base+0x60e>
    d9f2:	blx	88e4 <__stack_chk_fail@plt>
    d9f6:	add	sp, #92	; 0x5c
    d9f8:	pop	{r4, r5, pc}
    d9fa:	nop
    d9fc:	cbz	r2, da66 <btrfs_find_free_objectid@@Base+0x67e>
    d9fe:	movs	r5, r0
    da00:	lsls	r4, r7, #9
    da02:	movs	r0, r0
    da04:	cbz	r6, da6a <btrfs_find_free_objectid@@Base+0x682>
    da06:	movs	r5, r0
    da08:	lsls	r4, r1, #10
    da0a:	movs	r0, r0
    da0c:	lsrs	r6, r4, #6
    da0e:	movs	r3, r0
    da10:	lsrs	r7, r3, #6
    da12:	movs	r3, r0
    da14:	cbz	r2, da6a <btrfs_find_free_objectid@@Base+0x682>
    da16:	movs	r5, r0
    da18:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    da1c:	mov	r5, r0
    da1e:	bl	172ca <rb_first@@Base>
    da22:	ldr	r6, [pc, #112]	; (da94 <btrfs_find_free_objectid@@Base+0x6ac>)
    da24:	ldr	r7, [pc, #112]	; (da98 <btrfs_find_free_objectid@@Base+0x6b0>)
    da26:	mov	r4, r0
    da28:	cbnz	r4, da2e <btrfs_find_free_objectid@@Base+0x646>
    da2a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    da2e:	mov	r1, r5
    da30:	mov	r0, r4
    da32:	bl	17054 <rb_erase@@Base>
    da36:	add.w	r8, r4, #128	; 0x80
    da3a:	ldr.w	r0, [r4, #128]	; 0x80
    da3e:	cmp	r0, r8
    da40:	bne.n	da5e <btrfs_find_free_objectid@@Base+0x676>
    da42:	add.w	r8, r4, #136	; 0x88
    da46:	ldr.w	r0, [r4, #136]	; 0x88
    da4a:	cmp	r0, r8
    da4c:	bne.n	da74 <btrfs_find_free_objectid@@Base+0x68c>
    da4e:	mov	r0, r4
    da50:	blx	87cc <free@plt+0x4>
    da54:	mov	r0, r5
    da56:	bl	172ca <rb_first@@Base>
    da5a:	mov	r4, r0
    da5c:	b.n	da28 <btrfs_find_free_objectid@@Base+0x640>
    da5e:	ldrd	r2, r3, [r0]
    da62:	str	r3, [r2, #4]
    da64:	str	r2, [r3, #0]
    da66:	ldrd	r2, r3, [r0, #8]
    da6a:	str	r3, [r2, #4]
    da6c:	str	r2, [r3, #0]
    da6e:	blx	87cc <free@plt+0x4>
    da72:	b.n	da3a <btrfs_find_free_objectid@@Base+0x652>
    da74:	ldrd	r1, r2, [r0, #-8]
    da78:	str	r2, [r1, #4]
    da7a:	str	r1, [r2, #0]
    da7c:	ldrd	r1, r2, [r0]
    da80:	strd	r6, r7, [r0, #-8]
    da84:	str	r2, [r1, #4]
    da86:	str	r1, [r2, #0]
    da88:	strd	r6, r7, [r0]
    da8c:	subs	r0, #8
    da8e:	blx	87cc <free@plt+0x4>
    da92:	b.n	da46 <btrfs_find_free_objectid@@Base+0x65e>
    da94:	lsls	r0, r0, #4
    da96:	movs	r0, r2
    da98:	lsls	r0, r0, #8
    da9a:	movs	r0, r4
    da9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    daa0:	mov	r7, r2
    daa2:	vpush	{d8-d9}
    daa6:	mov	r4, r1
    daa8:	vmov	s16, r0
    daac:	ldrd	r2, r3, [r1, #8]
    dab0:	sub	sp, #92	; 0x5c
    dab2:	strd	r2, r3, [sp, #56]	; 0x38
    dab6:	ldrd	r2, r3, [r1, #16]
    daba:	strd	r2, r3, [sp, #48]	; 0x30
    dabe:	ldrd	r2, r3, [r1, #24]
    dac2:	strd	r2, r3, [sp, #64]	; 0x40
    dac6:	ldrd	r2, r3, [r1, #32]
    daca:	strd	r2, r3, [sp, #80]	; 0x50
    dace:	ldr	r3, [r1, #56]	; 0x38
    dad0:	str	r3, [sp, #76]	; 0x4c
    dad2:	ldr	r3, [r1, #60]	; 0x3c
    dad4:	str	r3, [sp, #72]	; 0x48
    dad6:	movs	r3, #0
    dad8:	str	r3, [r7, #0]
    dada:	ldr	r3, [pc, #716]	; (dda8 <btrfs_find_free_objectid@@Base+0x9c0>)
    dadc:	add	r3, pc
    dade:	vmov	s19, r3
    dae2:	vmov	r0, s16
    dae6:	mov	r2, r4
    dae8:	ldr	r1, [pc, #696]	; (dda4 <btrfs_find_free_objectid@@Base+0x9bc>)
    daea:	blx	89cc <ioctl@plt>
    daee:	subs.w	fp, r0, #0
    daf2:	bge.n	db10 <btrfs_find_free_objectid@@Base+0x728>
    daf4:	blx	8bac <__errno_location@plt>
    daf8:	ldr	r0, [r0, #0]
    dafa:	cmp	r0, #2
    dafc:	beq.w	dd9c <btrfs_find_free_objectid@@Base+0x9b4>
    db00:	rsb	fp, r0, #0
    db04:	mov	r0, fp
    db06:	add	sp, #92	; 0x5c
    db08:	vpop	{d8-d9}
    db0c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    db10:	ldr	r3, [r4, #64]	; 0x40
    db12:	cmp	r3, #0
    db14:	beq.n	db04 <btrfs_find_free_objectid@@Base+0x71c>
    db16:	movs	r3, #0
    db18:	str	r3, [sp, #16]
    db1a:	mov	r5, r3
    db1c:	ldr	r3, [pc, #652]	; (ddac <btrfs_find_free_objectid@@Base+0x9c4>)
    db1e:	add	r3, pc
    db20:	vmov	s17, r3
    db24:	ldr	r3, [pc, #648]	; (ddb0 <btrfs_find_free_objectid@@Base+0x9c8>)
    db26:	add	r3, pc
    db28:	vmov	s18, r3
    db2c:	ldr	r3, [r4, #64]	; 0x40
    db2e:	ldr	r2, [sp, #16]
    db30:	cmp	r2, r3
    db32:	bcc.n	db54 <btrfs_find_free_objectid@@Base+0x76c>
    db34:	ldrd	r0, r1, [r4, #24]
    db38:	mov.w	r3, #4096	; 0x1000
    db3c:	str	r3, [r4, #64]	; 0x40
    db3e:	adds	r3, r1, #1
    db40:	it	eq
    db42:	cmpeq.w	r0, #4294967295	; 0xffffffff
    db46:	beq.n	db04 <btrfs_find_free_objectid@@Base+0x71c>
    db48:	adds	r2, r0, #1
    db4a:	adc.w	r3, r1, #0
    db4e:	strd	r2, r3, [r4, #24]
    db52:	b.n	dae2 <btrfs_find_free_objectid@@Base+0x6fa>
    db54:	add.w	r6, r4, #104	; 0x68
    db58:	ldrd	r0, r1, [sp, #56]	; 0x38
    db5c:	add.w	r8, r6, r5
    db60:	adds	r5, #32
    db62:	ldr.w	r3, [r8, #8]
    db66:	ldr.w	r9, [r8, #16]
    db6a:	ldr.w	sl, [r8, #20]
    db6e:	str	r3, [sp, #8]
    db70:	ldr.w	r3, [r8, #12]
    db74:	str	r3, [sp, #12]
    db76:	ldr.w	r3, [r8, #24]
    db7a:	uxtb	r3, r3
    db7c:	str	r3, [sp, #20]
    db7e:	ldrd	r2, r3, [sp, #8]
    db82:	cmp	r3, r1
    db84:	it	eq
    db86:	cmpeq	r2, r0
    db88:	bcc.w	dc94 <btrfs_find_free_objectid@@Base+0x8ac>
    db8c:	ldrd	r2, r3, [sp, #48]	; 0x30
    db90:	ldrd	r0, r1, [sp, #8]
    db94:	cmp	r3, r1
    db96:	it	eq
    db98:	cmpeq	r2, r0
    db9a:	bcc.n	dc94 <btrfs_find_free_objectid@@Base+0x8ac>
    db9c:	ldr	r3, [sp, #20]
    db9e:	ldr	r2, [sp, #76]	; 0x4c
    dba0:	cmp	r3, r2
    dba2:	bcc.n	dc94 <btrfs_find_free_objectid@@Base+0x8ac>
    dba4:	ldr	r3, [sp, #72]	; 0x48
    dba6:	ldr	r2, [sp, #20]
    dba8:	cmp	r3, r2
    dbaa:	bcc.n	dc94 <btrfs_find_free_objectid@@Base+0x8ac>
    dbac:	ldrd	r2, r3, [sp, #64]	; 0x40
    dbb0:	cmp	sl, r3
    dbb2:	it	eq
    dbb4:	cmpeq	r9, r2
    dbb6:	bcc.n	dc94 <btrfs_find_free_objectid@@Base+0x8ac>
    dbb8:	ldrd	r2, r3, [sp, #80]	; 0x50
    dbbc:	cmp	r3, sl
    dbbe:	it	eq
    dbc0:	cmpeq	r2, r9
    dbc2:	bcc.n	dc94 <btrfs_find_free_objectid@@Base+0x8ac>
    dbc4:	ldr	r3, [sp, #20]
    dbc6:	subs	r3, #240	; 0xf0
    dbc8:	cmp	r3, #6
    dbca:	bhi.n	db04 <btrfs_find_free_objectid@@Base+0x71c>
    dbcc:	add	r2, pc, #8	; (adr r2, dbd8 <btrfs_find_free_objectid@@Base+0x7f0>)
    dbce:	ldr.w	r3, [r2, r3, lsl #2]
    dbd2:	add	r2, r3
    dbd4:	bx	r2
    dbd6:	nop
    dbd8:	movs	r5, r3
    dbda:	movs	r0, r0
    dbdc:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    dbe0:	lsls	r7, r5, #1
    dbe2:	movs	r0, r0
    dbe4:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    dbe8:	lsls	r3, r3, #3
    dbea:	movs	r0, r0
    dbec:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    dbf0:	lsls	r1, r5, #4
    dbf2:	movs	r0, r0
    dbf4:	add	r6, r5
    dbf6:	movs	r3, #0
    dbf8:	ldr	r2, [r6, #16]
    dbfa:	and.w	r1, r2, #1
    dbfe:	strd	r1, r3, [sp, #24]
    dc02:	ldrd	r0, r1, [sp, #24]
    dc06:	orrs	r1, r0
    dc08:	bne.n	dc1a <btrfs_find_free_objectid@@Base+0x832>
    dc0a:	vmov	r0, s18
    dc0e:	bl	1a884 <__btrfs_warning@@Base>
    dc12:	cmp.w	fp, #0
    dc16:	beq.n	dc94 <btrfs_find_free_objectid@@Base+0x8ac>
    dc18:	b.n	db04 <btrfs_find_free_objectid@@Base+0x71c>
    dc1a:	and.w	r1, r2, #2
    dc1e:	strd	r1, r3, [sp, #32]
    dc22:	ldrd	r0, r1, [sp, #32]
    dc26:	orrs	r1, r0
    dc28:	beq.n	dc30 <btrfs_find_free_objectid@@Base+0x848>
    dc2a:	vmov	r0, s17
    dc2e:	b.n	dc0e <btrfs_find_free_objectid@@Base+0x826>
    dc30:	and.w	r2, r2, #4
    dc34:	strd	r2, r3, [sp, #40]	; 0x28
    dc38:	ldrd	r2, r3, [sp, #40]	; 0x28
    dc3c:	orrs	r3, r2
    dc3e:	beq.n	dc12 <btrfs_find_free_objectid@@Base+0x82a>
    dc40:	vmov	r0, s19
    dc44:	b.n	dc0e <btrfs_find_free_objectid@@Base+0x826>
    dc46:	ldr	r0, [r7, #0]
    dc48:	mov	r2, r9
    dc4a:	mov	r3, sl
    dc4c:	bl	d898 <btrfs_find_free_objectid@@Base+0x4b0>
    dc50:	cbnz	r0, dc60 <btrfs_find_free_objectid@@Base+0x878>
    dc52:	mov	r2, r9
    dc54:	mov	r3, sl
    dc56:	mov	r0, r7
    dc58:	bl	d8f4 <btrfs_find_free_objectid@@Base+0x50c>
    dc5c:	cmp	r0, #0
    dc5e:	beq.n	dcfc <btrfs_find_free_objectid@@Base+0x914>
    dc60:	cmn.w	r0, #4096	; 0x1000
    dc64:	bhi.n	dcfc <btrfs_find_free_objectid@@Base+0x914>
    dc66:	adds	r3, r6, r5
    dc68:	ldr	r1, [r6, r5]
    dc6a:	ldr	r2, [r3, #4]
    dc6c:	strd	r1, r2, [r0, #48]	; 0x30
    dc70:	ldr	r1, [r3, #8]
    dc72:	ldr	r2, [r3, #12]
    dc74:	strd	r1, r2, [r0, #56]	; 0x38
    dc78:	ldr	r1, [r3, #16]
    dc7a:	ldr	r2, [r3, #20]
    dc7c:	strd	r1, r2, [r0, #64]	; 0x40
    dc80:	ldr	r2, [r3, #28]
    dc82:	ldr	r1, [r3, #24]
    dc84:	strd	r1, r2, [r0, #72]	; 0x48
    dc88:	ldr	r2, [r3, #32]
    dc8a:	ldr	r3, [r3, #36]	; 0x24
    dc8c:	strd	r2, r3, [r0, #80]	; 0x50
    dc90:	mov.w	fp, #0
    dc94:	ldr.w	r3, [r8, #28]
    dc98:	strd	r9, sl, [r4, #24]
    dc9c:	add	r5, r3
    dc9e:	ldr	r3, [sp, #20]
    dca0:	str	r3, [r4, #56]	; 0x38
    dca2:	ldrd	r2, r3, [sp, #8]
    dca6:	strd	r2, r3, [r4, #8]
    dcaa:	ldr	r3, [sp, #16]
    dcac:	adds	r3, #1
    dcae:	str	r3, [sp, #16]
    dcb0:	b.n	db2c <btrfs_find_free_objectid@@Base+0x744>
    dcb2:	ldr	r0, [r7, #0]
    dcb4:	mov	r2, r9
    dcb6:	mov	r3, sl
    dcb8:	bl	d898 <btrfs_find_free_objectid@@Base+0x4b0>
    dcbc:	cbnz	r0, dcca <btrfs_find_free_objectid@@Base+0x8e2>
    dcbe:	mov	r2, r9
    dcc0:	mov	r3, sl
    dcc2:	mov	r0, r7
    dcc4:	bl	d8f4 <btrfs_find_free_objectid@@Base+0x50c>
    dcc8:	cbz	r0, dcfc <btrfs_find_free_objectid@@Base+0x914>
    dcca:	cmn.w	r0, #4096	; 0x1000
    dcce:	bhi.n	dcfc <btrfs_find_free_objectid@@Base+0x914>
    dcd0:	adds	r3, r6, r5
    dcd2:	ldr	r1, [r6, r5]
    dcd4:	ldr	r2, [r3, #4]
    dcd6:	strd	r1, r2, [r0, #88]	; 0x58
    dcda:	ldr	r1, [r3, #8]
    dcdc:	ldr	r2, [r3, #12]
    dcde:	strd	r1, r2, [r0, #96]	; 0x60
    dce2:	ldr	r1, [r3, #16]
    dce4:	ldr	r2, [r3, #20]
    dce6:	strd	r1, r2, [r0, #104]	; 0x68
    dcea:	ldr	r2, [r3, #28]
    dcec:	ldr	r1, [r3, #24]
    dcee:	strd	r1, r2, [r0, #112]	; 0x70
    dcf2:	ldr	r2, [r3, #32]
    dcf4:	ldr	r3, [r3, #36]	; 0x24
    dcf6:	strd	r2, r3, [r0, #120]	; 0x78
    dcfa:	b.n	dc90 <btrfs_find_free_objectid@@Base+0x8a8>
    dcfc:	mov	fp, r0
    dcfe:	b.n	dc12 <btrfs_find_free_objectid@@Base+0x82a>
    dd00:	ldrd	r2, r3, [sp, #8]
    dd04:	cmp	sl, r3
    dd06:	it	eq
    dd08:	cmpeq	r9, r2
    dd0a:	bcs.n	dc12 <btrfs_find_free_objectid@@Base+0x82a>
    dd0c:	ldr.w	fp, [r7]
    dd10:	mov	r2, r9
    dd12:	mov	r3, sl
    dd14:	mov	r0, fp
    dd16:	bl	d898 <btrfs_find_free_objectid@@Base+0x4b0>
    dd1a:	mov	r6, r0
    dd1c:	cbnz	r0, dd3a <btrfs_find_free_objectid@@Base+0x952>
    dd1e:	uxth.w	r3, sl
    dd22:	strd	r9, r3, [sp]
    dd26:	mov	r3, r0
    dd28:	ldr	r0, [pc, #136]	; (ddb4 <btrfs_find_free_objectid@@Base+0x9cc>)
    dd2a:	mov.w	r2, sl, lsr #16
    dd2e:	add	r0, pc
    dd30:	bl	1a900 <__btrfs_error@@Base>
    dd34:	mvn.w	fp, #1
    dd38:	b.n	db04 <btrfs_find_free_objectid@@Base+0x71c>
    dd3a:	mov	r0, fp
    dd3c:	ldrd	r2, r3, [sp, #8]
    dd40:	bl	d898 <btrfs_find_free_objectid@@Base+0x4b0>
    dd44:	mov	fp, r0
    dd46:	cbnz	r0, dd5e <btrfs_find_free_objectid@@Base+0x976>
    dd48:	ldrh.w	r3, [sp, #12]
    dd4c:	ldr	r2, [sp, #8]
    dd4e:	strd	r2, r3, [sp]
    dd52:	ldr	r3, [sp, #12]
    dd54:	lsrs	r2, r3, #16
    dd56:	mov	r3, r0
    dd58:	ldr	r0, [pc, #92]	; (ddb8 <btrfs_find_free_objectid@@Base+0x9d0>)
    dd5a:	add	r0, pc
    dd5c:	b.n	dd30 <btrfs_find_free_objectid@@Base+0x948>
    dd5e:	movs	r0, #24
    dd60:	blx	8a94 <malloc@plt+0x4>
    dd64:	cbnz	r0, dd74 <btrfs_find_free_objectid@@Base+0x98c>
    dd66:	ldr	r0, [pc, #84]	; (ddbc <btrfs_find_free_objectid@@Base+0x9d4>)
    dd68:	mvn.w	fp, #11
    dd6c:	add	r0, pc
    dd6e:	bl	1a900 <__btrfs_error@@Base>
    dd72:	b.n	db04 <btrfs_find_free_objectid@@Base+0x71c>
    dd74:	strd	fp, r6, [r0, #16]
    dd78:	adds	r6, #128	; 0x80
    dd7a:	ldr	r3, [r6, #4]
    dd7c:	add.w	r1, r0, #8
    dd80:	str	r0, [r6, #4]
    dd82:	strd	r6, r3, [r0]
    dd86:	str	r0, [r3, #0]
    dd88:	add.w	r3, fp, #136	; 0x88
    dd8c:	ldr.w	r2, [fp, #140]	; 0x8c
    dd90:	str.w	r1, [fp, #140]	; 0x8c
    dd94:	strd	r3, r2, [r0, #8]
    dd98:	str	r1, [r2, #0]
    dd9a:	b.n	dc90 <btrfs_find_free_objectid@@Base+0x8a8>
    dd9c:	mvn.w	fp, #24
    dda0:	b.n	db04 <btrfs_find_free_objectid@@Base+0x71c>
    dda2:	nop
    dda4:	str	r4, [sp, #68]	; 0x44
    dda6:	beq.n	ddaa <btrfs_find_free_objectid@@Base+0x9c2>
    dda8:	lsrs	r4, r3, #4
    ddaa:	movs	r3, r0
    ddac:	lsrs	r2, r5, #2
    ddae:	movs	r3, r0
    ddb0:	lsrs	r3, r6, #1
    ddb2:	movs	r3, r0
    ddb4:	lsls	r7, r6, #27
    ddb6:	movs	r3, r0
    ddb8:	lsls	r3, r1, #27
    ddba:	movs	r3, r0
    ddbc:	lsls	r2, r7, #22
    ddbe:	movs	r3, r0
    ddc0:	push	{r4, r5, r6, r7, lr}
    ddc2:	mov	r5, r1
    ddc4:	ldr	r1, [pc, #168]	; (de70 <btrfs_find_free_objectid@@Base+0xa88>)
    ddc6:	sub.w	sp, sp, #4096	; 0x1000
    ddca:	ldr	r2, [pc, #168]	; (de74 <btrfs_find_free_objectid@@Base+0xa8c>)
    ddcc:	sub	sp, #12
    ddce:	add	r1, pc
    ddd0:	add.w	r3, sp, #4096	; 0x1000
    ddd4:	adds	r3, #4
    ddd6:	mov.w	r6, #4096	; 0x1000
    ddda:	ldr	r2, [r1, r2]
    dddc:	mov	r4, r0
    ddde:	movs	r1, #0
    dde0:	add	r7, sp, #8
    dde2:	ldr	r2, [r2, #0]
    dde4:	str	r2, [r3, #0]
    dde6:	mov.w	r2, #0
    ddea:	mov	r3, sp
    ddec:	mov	r2, r6
    ddee:	mov	r0, r3
    ddf0:	blx	8bf8 <memset@plt+0x4>
    ddf4:	movs	r1, #0
    ddf6:	movs	r2, #246	; 0xf6
    ddf8:	mov	r3, r0
    ddfa:	movs	r0, #8
    ddfc:	strd	r0, r1, [r7, #-8]
    de00:	mov.w	r0, #4294967295	; 0xffffffff
    de04:	mov.w	r1, #4294967295	; 0xffffffff
    de08:	strd	r0, r1, [r3, #16]
    de0c:	strd	r0, r1, [r3, #32]
    de10:	strd	r0, r1, [r3, #48]	; 0x30
    de14:	movs	r1, #240	; 0xf0
    de16:	mov	r0, r4
    de18:	strd	r1, r2, [r3, #56]	; 0x38
    de1c:	mov	r2, r5
    de1e:	mov	r1, r3
    de20:	str	r6, [r3, #64]	; 0x40
    de22:	bl	da9c <btrfs_find_free_objectid@@Base+0x6b4>
    de26:	cmn.w	r0, #25
    de2a:	mov	r4, r0
    de2c:	bne.n	de50 <btrfs_find_free_objectid@@Base+0xa68>
    de2e:	ldr	r0, [pc, #72]	; (de78 <btrfs_find_free_objectid@@Base+0xa90>)
    de30:	add	r0, pc
    de32:	bl	1a900 <__btrfs_error@@Base>
    de36:	ldr	r1, [pc, #68]	; (de7c <btrfs_find_free_objectid@@Base+0xa94>)
    de38:	add.w	r3, sp, #4096	; 0x1000
    de3c:	ldr	r2, [pc, #52]	; (de74 <btrfs_find_free_objectid@@Base+0xa8c>)
    de3e:	adds	r3, #4
    de40:	add	r1, pc
    de42:	ldr	r2, [r1, r2]
    de44:	ldr	r1, [r2, #0]
    de46:	ldr	r2, [r3, #0]
    de48:	eors	r1, r2
    de4a:	beq.n	de66 <btrfs_find_free_objectid@@Base+0xa7e>
    de4c:	blx	88e4 <__stack_chk_fail@plt>
    de50:	cmp	r0, #0
    de52:	bge.n	de36 <btrfs_find_free_objectid@@Base+0xa4e>
    de54:	negs	r0, r0
    de56:	blx	8aac <strerror@plt>
    de5a:	mov	r1, r0
    de5c:	ldr	r0, [pc, #32]	; (de80 <btrfs_find_free_objectid@@Base+0xa98>)
    de5e:	add	r0, pc
    de60:	bl	1a900 <__btrfs_error@@Base>
    de64:	b.n	de36 <btrfs_find_free_objectid@@Base+0xa4e>
    de66:	mov	r0, r4
    de68:	add.w	sp, sp, #4096	; 0x1000
    de6c:	add	sp, #12
    de6e:	pop	{r4, r5, r6, r7, pc}
    de70:	add	r7, sp, #392	; 0x188
    de72:	movs	r5, r0
    de74:	lsls	r4, r7, #9
    de76:	movs	r0, r0
    de78:	lsls	r6, r2, #24
    de7a:	movs	r3, r0
    de7c:	add	r6, sp, #960	; 0x3c0
    de7e:	movs	r5, r0
    de80:	lsls	r7, r1, #24
    de82:	movs	r3, r0

0000de84 <btrfs_qgroup_setup_print_column@@Base>:
    de84:	cmp	r0, #7
    de86:	ldr	r1, [pc, #68]	; (decc <btrfs_qgroup_setup_print_column@@Base+0x48>)
    de88:	push	{r4, lr}
    de8a:	mov	r4, r0
    de8c:	ldr	r0, [pc, #64]	; (ded0 <btrfs_qgroup_setup_print_column@@Base+0x4c>)
    de8e:	ite	hi
    de90:	movhi	r3, #0
    de92:	movls	r3, #1
    de94:	add	r1, pc
    de96:	add	r0, pc
    de98:	movs	r2, #143	; 0x8f
    de9a:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    de9e:	cmp	r4, #6
    dea0:	bls.n	deba <btrfs_qgroup_setup_print_column@@Base+0x36>
    dea2:	ldr	r3, [pc, #48]	; (ded4 <btrfs_qgroup_setup_print_column@@Base+0x50>)
    dea4:	movs	r2, #1
    dea6:	add	r3, pc
    dea8:	str	r2, [r3, #8]
    deaa:	str	r2, [r3, #28]
    deac:	str	r2, [r3, #48]	; 0x30
    deae:	str	r2, [r3, #68]	; 0x44
    deb0:	str	r2, [r3, #88]	; 0x58
    deb2:	str	r2, [r3, #108]	; 0x6c
    deb4:	str.w	r2, [r3, #128]	; 0x80
    deb8:	pop	{r4, pc}
    deba:	ldr	r0, [pc, #28]	; (ded8 <btrfs_qgroup_setup_print_column@@Base+0x54>)
    debc:	movs	r3, #20
    debe:	add	r0, pc
    dec0:	mla	r4, r3, r4, r0
    dec4:	movs	r3, #1
    dec6:	str	r3, [r4, #8]
    dec8:	b.n	deb8 <btrfs_qgroup_setup_print_column@@Base+0x34>
    deca:	nop
    decc:	lsls	r1, r4, #31
    dece:	movs	r3, r0
    ded0:	lsls	r6, r5, #23
    ded2:	movs	r3, r0
    ded4:	cbz	r6, deee <btrfs_qgroup_setup_units@@Base+0x12>
    ded6:	movs	r5, r0
    ded8:	cbz	r6, deec <btrfs_qgroup_setup_units@@Base+0x10>
    deda:	movs	r5, r0

0000dedc <btrfs_qgroup_setup_units@@Base>:
    dedc:	ldr	r3, [pc, #12]	; (deec <btrfs_qgroup_setup_units@@Base+0x10>)
    dede:	add	r3, pc
    dee0:	str	r0, [r3, #32]
    dee2:	str	r0, [r3, #52]	; 0x34
    dee4:	str	r0, [r3, #72]	; 0x48
    dee6:	str	r0, [r3, #92]	; 0x5c
    dee8:	bx	lr
    deea:	nop
    deec:	cbz	r6, def8 <btrfs_qgroup_alloc_comparer_set@@Base+0x8>
    deee:	movs	r5, r0

0000def0 <btrfs_qgroup_alloc_comparer_set@@Base>:
    def0:	push	{r3, lr}
    def2:	movs	r1, #88	; 0x58
    def4:	movs	r0, #1
    def6:	blx	8718 <calloc@plt+0x4>
    defa:	cbnz	r0, df0a <btrfs_qgroup_alloc_comparer_set@@Base+0x1a>
    defc:	ldr	r0, [pc, #16]	; (df10 <btrfs_qgroup_alloc_comparer_set@@Base+0x20>)
    defe:	add	r0, pc
    df00:	bl	1a900 <__btrfs_error@@Base>
    df04:	movs	r0, #1
    df06:	blx	8b58 <exit@plt>
    df0a:	movs	r2, #10
    df0c:	str	r2, [r0, #0]
    df0e:	pop	{r3, pc}
    df10:	lsls	r0, r5, #16
    df12:	movs	r3, r0

0000df14 <btrfs_qgroup_setup_comparer@@Base>:
    df14:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    df18:	mov	r6, r1
    df1a:	ldr	r4, [r0, #0]
    df1c:	mov	r7, r0
    df1e:	ldr	r1, [pc, #188]	; (dfdc <btrfs_qgroup_setup_comparer@@Base+0xc8>)
    df20:	mov	r8, r2
    df22:	subs	r3, r4, #0
    df24:	ldr	r0, [pc, #184]	; (dfe0 <btrfs_qgroup_setup_comparer@@Base+0xcc>)
    df26:	add	r1, pc
    df28:	movw	r2, #457	; 0x1c9
    df2c:	it	ne
    df2e:	movne	r3, #1
    df30:	adds	r1, #32
    df32:	add	r0, pc
    df34:	str	r1, [sp, #4]
    df36:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    df3a:	cmp	r6, #4
    df3c:	ldr	r0, [pc, #164]	; (dfe4 <btrfs_qgroup_setup_comparer@@Base+0xd0>)
    df3e:	mov.w	r2, #458	; 0x1ca
    df42:	ite	hi
    df44:	movhi	r3, #0
    df46:	movls	r3, #1
    df48:	ldr	r1, [sp, #4]
    df4a:	add	r0, pc
    df4c:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    df50:	ldrd	r9, r5, [r4]
    df54:	ldr	r0, [pc, #144]	; (dfe8 <btrfs_qgroup_setup_comparer@@Base+0xd4>)
    df56:	movw	r2, #459	; 0x1cb
    df5a:	cmp	r5, r9
    df5c:	ldr	r1, [sp, #4]
    df5e:	add	r0, pc
    df60:	ite	gt
    df62:	movgt	r3, #0
    df64:	movle	r3, #1
    df66:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    df6a:	cmp	r5, r9
    df6c:	bne.n	dfa6 <btrfs_qgroup_setup_comparer@@Base+0x92>
    df6e:	adds	r5, #11
    df70:	mov	r0, r4
    df72:	lsls	r1, r5, #3
    df74:	blx	8924 <realloc@plt+0x4>
    df78:	mov	r5, r0
    df7a:	cbnz	r0, df8c <btrfs_qgroup_setup_comparer@@Base+0x78>
    df7c:	mov	r0, r4
    df7e:	blx	87cc <free@plt+0x4>
    df82:	mvn.w	r0, #11
    df86:	add	sp, #12
    df88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    df8c:	ldr	r0, [r0, #0]
    df8e:	movs	r2, #80	; 0x50
    df90:	movs	r1, #0
    df92:	mov	r4, r5
    df94:	adds	r0, #1
    df96:	add.w	r0, r5, r0, lsl #3
    df9a:	blx	8bf8 <memset@plt+0x4>
    df9e:	ldr	r3, [r5, #0]
    dfa0:	adds	r3, #10
    dfa2:	str	r3, [r5, #0]
    dfa4:	str	r5, [r7, #0]
    dfa6:	ldr	r5, [r4, #4]
    dfa8:	movw	r2, #481	; 0x1e1
    dfac:	ldr	r1, [pc, #60]	; (dfec <btrfs_qgroup_setup_comparer@@Base+0xd8>)
    dfae:	ldr	r0, [pc, #64]	; (dff0 <btrfs_qgroup_setup_comparer@@Base+0xdc>)
    dfb0:	add.w	r7, r4, r5, lsl #3
    dfb4:	add	r1, pc
    dfb6:	add	r0, pc
    dfb8:	adds	r1, #32
    dfba:	ldr	r3, [r7, #8]
    dfbc:	adds	r5, #1
    dfbe:	clz	r3, r3
    dfc2:	lsrs	r3, r3, #5
    dfc4:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    dfc8:	ldr	r3, [pc, #40]	; (dff4 <btrfs_qgroup_setup_comparer@@Base+0xe0>)
    dfca:	movs	r0, #0
    dfcc:	add	r3, pc
    dfce:	ldr.w	r3, [r3, r6, lsl #2]
    dfd2:	strd	r3, r8, [r7, #8]
    dfd6:	str	r5, [r4, #4]
    dfd8:	b.n	df86 <btrfs_qgroup_setup_comparer@@Base+0x72>
    dfda:	nop
    dfdc:	lsls	r7, r1, #29
    dfde:	movs	r3, r0
    dfe0:	lsls	r4, r7, #21
    dfe2:	movs	r3, r0
    dfe4:	lsls	r0, r6, #21
    dfe6:	movs	r3, r0
    dfe8:	lsls	r5, r7, #21
    dfea:	movs	r3, r0
    dfec:	lsls	r1, r0, #27
    dfee:	movs	r3, r0
    dff0:	lsls	r7, r7, #20
    dff2:	movs	r3, r0
    dff4:	add	r5, pc, #704	; (adr r5, e2b8 <btrfs_show_qgroups@@Base+0xa0>)
    dff6:	movs	r5, r0

0000dff8 <btrfs_qgroup_alloc_filter_set@@Base>:
    dff8:	push	{r3, lr}
    dffa:	movs	r1, #72	; 0x48
    dffc:	movs	r0, #1
    dffe:	blx	8718 <calloc@plt+0x4>
    e002:	cbnz	r0, e012 <btrfs_qgroup_alloc_filter_set@@Base+0x1a>
    e004:	ldr	r0, [pc, #16]	; (e018 <btrfs_qgroup_alloc_filter_set@@Base+0x20>)
    e006:	add	r0, pc
    e008:	bl	1a900 <__btrfs_error@@Base>
    e00c:	movs	r0, #1
    e00e:	blx	8b58 <exit@plt>
    e012:	movs	r2, #4
    e014:	str	r2, [r0, #0]
    e016:	pop	{r3, pc}
    e018:	lsls	r0, r4, #12
    e01a:	movs	r3, r0

0000e01c <btrfs_qgroup_setup_filter@@Base>:
    e01c:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    e020:	mov	r8, r1
    e022:	ldr	r4, [r0, #0]
    e024:	mov	r9, r0
    e026:	ldr	r1, [pc, #216]	; (e100 <btrfs_qgroup_setup_filter@@Base+0xe4>)
    e028:	mov	r6, r3
    e02a:	ldr	r0, [pc, #216]	; (e104 <btrfs_qgroup_setup_filter@@Base+0xe8>)
    e02c:	subs	r3, r4, #0
    e02e:	add	r1, pc
    e030:	mov	r7, r2
    e032:	it	ne
    e034:	movne	r3, #1
    e036:	adds	r1, #60	; 0x3c
    e038:	add	r0, pc
    e03a:	mov.w	r2, #836	; 0x344
    e03e:	str	r1, [sp, #4]
    e040:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    e044:	cmp.w	r8, #1
    e048:	ldr	r0, [pc, #188]	; (e108 <btrfs_qgroup_setup_filter@@Base+0xec>)
    e04a:	ldr	r1, [sp, #4]
    e04c:	movw	r2, #837	; 0x345
    e050:	ite	hi
    e052:	movhi	r3, #0
    e054:	movls	r3, #1
    e056:	add	r0, pc
    e058:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    e05c:	ldrd	sl, r5, [r4]
    e060:	ldr	r0, [pc, #168]	; (e10c <btrfs_qgroup_setup_filter@@Base+0xf0>)
    e062:	movw	r2, #838	; 0x346
    e066:	cmp	r5, sl
    e068:	ldr	r1, [sp, #4]
    e06a:	add	r0, pc
    e06c:	ite	gt
    e06e:	movgt	r3, #0
    e070:	movle	r3, #1
    e072:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    e076:	cmp	r5, sl
    e078:	bne.n	e0ba <btrfs_qgroup_setup_filter@@Base+0x9e>
    e07a:	lsls	r5, r5, #4
    e07c:	mov	r0, r4
    e07e:	add.w	r1, r5, #72	; 0x48
    e082:	blx	8924 <realloc@plt+0x4>
    e086:	mov	r5, r0
    e088:	cbnz	r0, e09e <btrfs_qgroup_setup_filter@@Base+0x82>
    e08a:	ldr	r0, [pc, #132]	; (e110 <btrfs_qgroup_setup_filter@@Base+0xf4>)
    e08c:	add	r0, pc
    e08e:	bl	1a900 <__btrfs_error@@Base>
    e092:	mov	r0, r4
    e094:	blx	87cc <free@plt+0x4>
    e098:	movs	r0, #1
    e09a:	blx	8b58 <exit@plt>
    e09e:	ldr	r0, [r0, #0]
    e0a0:	movs	r2, #64	; 0x40
    e0a2:	movs	r1, #0
    e0a4:	mov	r4, r5
    e0a6:	add.w	r0, r5, r0, lsl #4
    e0aa:	adds	r0, #8
    e0ac:	blx	8bf8 <memset@plt+0x4>
    e0b0:	ldr	r3, [r5, #0]
    e0b2:	adds	r3, #4
    e0b4:	str	r3, [r5, #0]
    e0b6:	str.w	r5, [r9]
    e0ba:	ldr	r5, [r4, #4]
    e0bc:	mov.w	r2, #860	; 0x35c
    e0c0:	ldr	r1, [pc, #80]	; (e114 <btrfs_qgroup_setup_filter@@Base+0xf8>)
    e0c2:	ldr	r0, [pc, #84]	; (e118 <btrfs_qgroup_setup_filter@@Base+0xfc>)
    e0c4:	add.w	r9, r4, r5, lsl #4
    e0c8:	add	r1, pc
    e0ca:	adds	r1, #60	; 0x3c
    e0cc:	add	r0, pc
    e0ce:	ldr.w	r3, [r9, #8]
    e0d2:	adds	r5, #1
    e0d4:	clz	r3, r3
    e0d8:	lsrs	r3, r3, #5
    e0da:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    e0de:	ldr	r1, [pc, #60]	; (e11c <btrfs_qgroup_setup_filter@@Base+0x100>)
    e0e0:	movs	r0, #0
    e0e2:	add	r1, pc
    e0e4:	add.w	r8, r1, r8, lsl #2
    e0e8:	ldr.w	r3, [r8, #20]
    e0ec:	str.w	r3, [r9, #8]
    e0f0:	add.w	r3, r4, r5, lsl #4
    e0f4:	strd	r7, r6, [r3]
    e0f8:	str	r5, [r4, #4]
    e0fa:	add	sp, #8
    e0fc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e100:	lsls	r7, r0, #25
    e102:	movs	r3, r0
    e104:	lsls	r6, r6, #17
    e106:	movs	r3, r0
    e108:	lsls	r1, r1, #19
    e10a:	movs	r3, r0
    e10c:	lsls	r6, r2, #19
    e10e:	movs	r3, r0
    e110:	lsls	r2, r3, #10
    e112:	movs	r3, r0
    e114:	lsls	r5, r5, #22
    e116:	movs	r3, r0
    e118:	lsls	r0, r2, #18
    e11a:	movs	r3, r0
    e11c:	add	r4, pc, #616	; (adr r4, e388 <btrfs_show_qgroups@@Base+0x170>)
    e11e:	movs	r5, r0

0000e120 <btrfs_qgroup_query@@Base>:
    e120:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e124:	sub.w	sp, sp, #4096	; 0x1000
    e128:	sub	sp, #16
    e12a:	ldr	r1, [pc, #224]	; (e20c <btrfs_qgroup_query@@Base+0xec>)
    e12c:	mov	r7, r2
    e12e:	mov	r6, r3
    e130:	ldr	r2, [pc, #220]	; (e210 <btrfs_qgroup_query@@Base+0xf0>)
    e132:	add.w	r3, sp, #4128	; 0x1020
    e136:	add	r1, pc
    e138:	add	r4, sp, #8
    e13a:	ldr	r5, [r3, #16]
    e13c:	adds	r3, #16
    e13e:	ldr	r2, [r1, r2]
    e140:	add.w	r3, sp, #4096	; 0x1000
    e144:	add.w	r8, sp, #16
    e148:	mov.w	sl, #4096	; 0x1000
    e14c:	ldr	r2, [r2, #0]
    e14e:	str	r2, [r3, #12]
    e150:	mov.w	r2, #0
    e154:	mov	r9, r0
    e156:	mov	r2, sl
    e158:	mov	r0, r4
    e15a:	movs	r1, #0
    e15c:	adds	r3, #12
    e15e:	blx	8bf8 <memset@plt+0x4>
    e162:	movs	r0, #8
    e164:	movs	r1, #0
    e166:	mov.w	r2, #4294967295	; 0xffffffff
    e16a:	strd	r0, r1, [r8, #-8]
    e16e:	mov.w	r3, #4294967295	; 0xffffffff
    e172:	strd	r7, r6, [r8, #16]
    e176:	mov	r1, r4
    e178:	strd	r2, r3, [r8, #40]	; 0x28
    e17c:	movs	r2, #242	; 0xf2
    e17e:	movs	r3, #244	; 0xf4
    e180:	strd	r7, r6, [r8, #24]
    e184:	strd	r2, r3, [r8, #48]	; 0x30
    e188:	mov	r0, r9
    e18a:	str.w	sl, [r8, #56]	; 0x38
    e18e:	sub.w	r8, r8, #12
    e192:	mov	r2, r8
    e194:	bl	da9c <btrfs_find_free_objectid@@Base+0x6b4>
    e198:	subs	r4, r0, #0
    e19a:	blt.n	e1e0 <btrfs_qgroup_query@@Base+0xc0>
    e19c:	mov	r0, r8
    e19e:	bl	172ca <rb_first@@Base>
    e1a2:	mov	r4, r0
    e1a4:	cbz	r0, e1fa <btrfs_qgroup_query@@Base+0xda>
    e1a6:	ldrd	r2, r3, [r0, #40]	; 0x28
    e1aa:	add.w	r7, r0, #48	; 0x30
    e1ae:	mov	r6, r5
    e1b0:	adds	r4, #88	; 0x58
    e1b2:	adds	r5, #48	; 0x30
    e1b4:	strd	r2, r3, [r6], #8
    e1b8:	ldmia	r7!, {r0, r1, r2, r3}
    e1ba:	stmia	r6!, {r0, r1, r2, r3}
    e1bc:	ldmia	r7!, {r0, r1, r2, r3}
    e1be:	stmia	r6!, {r0, r1, r2, r3}
    e1c0:	ldmia.w	r7, {r0, r1}
    e1c4:	stmia.w	r6, {r0, r1}
    e1c8:	ldmia	r4!, {r0, r1, r2, r3}
    e1ca:	stmia	r5!, {r0, r1, r2, r3}
    e1cc:	ldmia	r4!, {r0, r1, r2, r3}
    e1ce:	stmia	r5!, {r0, r1, r2, r3}
    e1d0:	ldmia.w	r4, {r0, r1}
    e1d4:	movs	r4, #0
    e1d6:	stmia.w	r5, {r0, r1}
    e1da:	mov	r0, r8
    e1dc:	bl	da18 <btrfs_find_free_objectid@@Base+0x630>
    e1e0:	ldr	r1, [pc, #48]	; (e214 <btrfs_qgroup_query@@Base+0xf4>)
    e1e2:	add.w	r3, sp, #4096	; 0x1000
    e1e6:	ldr	r2, [pc, #40]	; (e210 <btrfs_qgroup_query@@Base+0xf0>)
    e1e8:	adds	r3, #12
    e1ea:	add	r1, pc
    e1ec:	ldr	r2, [r1, r2]
    e1ee:	ldr	r1, [r2, #0]
    e1f0:	ldr	r2, [r3, #0]
    e1f2:	eors	r1, r2
    e1f4:	beq.n	e200 <btrfs_qgroup_query@@Base+0xe0>
    e1f6:	blx	88e4 <__stack_chk_fail@plt>
    e1fa:	mvn.w	r4, #60	; 0x3c
    e1fe:	b.n	e1da <btrfs_qgroup_query@@Base+0xba>
    e200:	mov	r0, r4
    e202:	add.w	sp, sp, #4096	; 0x1000
    e206:	add	sp, #16
    e208:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e20c:	add	r3, sp, #1000	; 0x3e8
    e20e:	movs	r5, r0
    e210:	lsls	r4, r7, #9
    e212:	movs	r0, r0
    e214:	add	r3, sp, #280	; 0x118
    e216:	movs	r5, r0

0000e218 <btrfs_show_qgroups@@Base>:
    e218:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e21c:	mov	fp, r1
    e21e:	vpush	{d8}
    e222:	ldr.w	r3, [pc, #1460]	; e7d8 <btrfs_show_qgroups@@Base+0x5c0>
    e226:	sub	sp, #164	; 0xa4
    e228:	add	r6, sp, #48	; 0x30
    e22a:	str	r2, [sp, #20]
    e22c:	ldr.w	r2, [pc, #1452]	; e7dc <btrfs_show_qgroups@@Base+0x5c4>
    e230:	mov	r1, r6
    e232:	add	r2, pc
    e234:	ldr	r3, [r2, r3]
    e236:	ldr	r3, [r3, #0]
    e238:	str	r3, [sp, #156]	; 0x9c
    e23a:	mov.w	r3, #0
    e23e:	bl	ddc0 <btrfs_find_free_objectid@@Base+0x9d8>
    e242:	str	r0, [sp, #16]
    e244:	cmp	r0, #0
    e246:	bne.n	e32a <btrfs_show_qgroups@@Base+0x112>
    e248:	ldr.w	r9, [pc, #1428]	; e7e0 <btrfs_show_qgroups@@Base+0x5c8>
    e24c:	mov	r4, fp
    e24e:	ldr.w	sl, [pc, #1428]	; e7e4 <btrfs_show_qgroups@@Base+0x5cc>
    e252:	mov	r5, r0
    e254:	ldr.w	r7, [fp, #4]
    e258:	add	r9, pc
    e25a:	ldr.w	r8, [sp, #48]	; 0x30
    e25e:	add	sl, pc
    e260:	str	r0, [sp, #52]	; 0x34
    e262:	cmp	r5, r7
    e264:	blt.n	e344 <btrfs_show_qgroups@@Base+0x12c>
    e266:	mov	r0, r6
    e268:	bl	172da <rb_last@@Base>
    e26c:	ldr.w	r3, [pc, #1400]	; e7e8 <btrfs_show_qgroups@@Base+0x5d0>
    e270:	add	r3, pc
    e272:	adds	r3, #86	; 0x56
    e274:	vmov	s17, r3
    e278:	mov	r4, r0
    e27a:	cmp	r4, #0
    e27c:	bne.n	e364 <btrfs_show_qgroups@@Base+0x14c>
    e27e:	ldr.w	r3, [pc, #1388]	; e7ec <btrfs_show_qgroups@@Base+0x5d4>
    e282:	ldr.w	r6, [pc, #1388]	; e7f0 <btrfs_show_qgroups@@Base+0x5d8>
    e286:	ldr.w	r7, [pc, #1388]	; e7f4 <btrfs_show_qgroups@@Base+0x5dc>
    e28a:	add	r3, pc
    e28c:	add	r6, pc
    e28e:	str	r3, [sp, #20]
    e290:	add	r7, pc
    e292:	mov	r5, r3
    e294:	ldr	r3, [r5, #8]
    e296:	cbz	r3, e2b6 <btrfs_show_qgroups@@Base+0x9e>
    e298:	subs	r3, r4, #5
    e29a:	ldr	r2, [r5, #16]
    e29c:	cmp	r3, #1
    e29e:	ldr	r3, [r5, #0]
    e2a0:	bls.n	e2a8 <btrfs_show_qgroups@@Base+0x90>
    e2a2:	cmp	r4, #0
    e2a4:	bne.w	e5c4 <btrfs_show_qgroups@@Base+0x3ac>
    e2a8:	mov	r1, r6
    e2aa:	movs	r0, #1
    e2ac:	blx	8c6c <__printf_chk@plt+0x4>
    e2b0:	movs	r0, #32
    e2b2:	blx	8c08 <putchar@plt+0x4>
    e2b6:	adds	r4, #1
    e2b8:	adds	r5, #20
    e2ba:	cmp	r4, #7
    e2bc:	bne.n	e294 <btrfs_show_qgroups@@Base+0x7c>
    e2be:	movs	r0, #10
    e2c0:	movs	r6, #0
    e2c2:	blx	8c08 <putchar@plt+0x4>
    e2c6:	ldr	r4, [sp, #20]
    e2c8:	ldr	r3, [r4, #8]
    e2ca:	cbz	r3, e2fc <btrfs_show_qgroups@@Base+0xe4>
    e2cc:	subs	r3, r6, #5
    e2ce:	ldr	r5, [r4, #16]
    e2d0:	cmp	r3, #1
    e2d2:	ldr	r0, [r4, #0]
    e2d4:	bls.n	e2dc <btrfs_show_qgroups@@Base+0xc4>
    e2d6:	cmp	r6, #0
    e2d8:	bne.w	e5d8 <btrfs_show_qgroups@@Base+0x3c0>
    e2dc:	blx	8b70 <strlen@plt>
    e2e0:	mov	r7, r0
    e2e2:	subs	r7, #1
    e2e4:	bcs.w	e5c8 <btrfs_show_qgroups@@Base+0x3b0>
    e2e8:	ldr	r0, [r4, #0]
    e2ea:	blx	8b70 <strlen@plt>
    e2ee:	subs	r5, r5, r0
    e2f0:	subs	r5, #1
    e2f2:	bcs.w	e5d0 <btrfs_show_qgroups@@Base+0x3b8>
    e2f6:	movs	r0, #32
    e2f8:	blx	8c08 <putchar@plt+0x4>
    e2fc:	adds	r6, #1
    e2fe:	adds	r4, #20
    e300:	cmp	r6, #7
    e302:	bne.n	e2c8 <btrfs_show_qgroups@@Base+0xb0>
    e304:	movs	r0, #10
    e306:	blx	8c08 <putchar@plt+0x4>
    e30a:	add	r0, sp, #52	; 0x34
    e30c:	bl	172ca <rb_first@@Base>
    e310:	ldr.w	r3, [pc, #1252]	; e7f8 <btrfs_show_qgroups@@Base+0x5e0>
    e314:	add	r3, pc
    e316:	adds	r3, #111	; 0x6f
    e318:	vmov	s17, r3
    e31c:	mov	r4, r0
    e31e:	cmp	r4, #0
    e320:	bne.w	e600 <btrfs_show_qgroups@@Base+0x3e8>
    e324:	add	r0, sp, #48	; 0x30
    e326:	bl	da18 <btrfs_find_free_objectid@@Base+0x630>
    e32a:	ldr.w	r2, [pc, #1232]	; e7fc <btrfs_show_qgroups@@Base+0x5e4>
    e32e:	ldr.w	r3, [pc, #1192]	; e7d8 <btrfs_show_qgroups@@Base+0x5c0>
    e332:	add	r2, pc
    e334:	ldr	r3, [r2, r3]
    e336:	ldr	r2, [r3, #0]
    e338:	ldr	r3, [sp, #156]	; 0x9c
    e33a:	eors	r2, r3
    e33c:	beq.w	e7cc <btrfs_show_qgroups@@Base+0x5b4>
    e340:	blx	88e4 <__stack_chk_fail@plt>
    e344:	ldr	r3, [r4, #8]
    e346:	cmp	r3, r9
    e348:	beq.n	e34e <btrfs_show_qgroups@@Base+0x136>
    e34a:	cmp	r3, sl
    e34c:	bne.n	e35e <btrfs_show_qgroups@@Base+0x146>
    e34e:	ldrd	r2, r3, [r4, #16]
    e352:	mov	r0, r8
    e354:	bl	d898 <btrfs_find_free_objectid@@Base+0x4b0>
    e358:	movs	r1, #0
    e35a:	str	r1, [r4, #20]
    e35c:	str	r0, [r4, #16]
    e35e:	adds	r5, #1
    e360:	adds	r4, #16
    e362:	b.n	e262 <btrfs_show_qgroups@@Base+0x4a>
    e364:	ldr.w	r3, [fp, #4]
    e368:	cbnz	r3, e3b6 <btrfs_show_qgroups@@Base+0x19e>
    e36a:	add	r5, sp, #52	; 0x34
    e36c:	ldr.w	r2, [pc, #1168]	; e800 <btrfs_show_qgroups@@Base+0x5e8>
    e370:	movs	r3, #0
    e372:	mov	sl, r5
    e374:	add	r2, pc
    e376:	str	r2, [sp, #40]	; 0x28
    e378:	ldr	r6, [r5, #0]
    e37a:	cbnz	r6, e3bc <btrfs_show_qgroups@@Base+0x1a4>
    e37c:	add.w	r0, r4, #12
    e380:	strd	r3, r6, [r4, #12]
    e384:	str	r6, [r4, #20]
    e386:	mov	r1, sl
    e388:	str	r0, [r5, #0]
    e38a:	bl	16fae <rb_insert_color@@Base>
    e38e:	b.n	e3f8 <btrfs_show_qgroups@@Base+0x1e0>
    e390:	adds	r5, #1
    e392:	ldr.w	r3, [fp, #4]
    e396:	cmp	r5, r3
    e398:	bge.n	e36a <btrfs_show_qgroups@@Base+0x152>
    e39a:	ldr	r1, [r6, #8]
    e39c:	cmp	r1, #0
    e39e:	beq.n	e36a <btrfs_show_qgroups@@Base+0x152>
    e3a0:	ldrd	r2, r3, [r6, #16]!
    e3a4:	mov	r0, r4
    e3a6:	blx	r1
    e3a8:	cmp	r0, #0
    e3aa:	bne.n	e390 <btrfs_show_qgroups@@Base+0x178>
    e3ac:	mov	r0, r4
    e3ae:	bl	17316 <rb_prev@@Base>
    e3b2:	mov	r4, r0
    e3b4:	b.n	e27a <btrfs_show_qgroups@@Base+0x62>
    e3b6:	mov	r6, fp
    e3b8:	movs	r5, #0
    e3ba:	b.n	e392 <btrfs_show_qgroups@@Base+0x17a>
    e3bc:	ldr	r3, [sp, #20]
    e3be:	sub.w	r1, r6, #12
    e3c2:	cbnz	r3, e3da <btrfs_show_qgroups@@Base+0x1c2>
    e3c4:	movs	r2, #0
    e3c6:	mov	r0, r4
    e3c8:	bl	d5d8 <btrfs_find_free_objectid@@Base+0x1f0>
    e3cc:	cmp	r0, #0
    e3ce:	blt.w	e7c4 <btrfs_show_qgroups@@Base+0x5ac>
    e3d2:	beq.n	e3f8 <btrfs_show_qgroups@@Base+0x1e0>
    e3d4:	ldr	r5, [r5, #0]
    e3d6:	adds	r5, #4
    e3d8:	b.n	e7c8 <btrfs_show_qgroups@@Base+0x5b0>
    e3da:	ldr	r3, [sp, #20]
    e3dc:	ldr	r3, [r3, #4]
    e3de:	cmp	r3, #0
    e3e0:	beq.n	e3c4 <btrfs_show_qgroups@@Base+0x1ac>
    e3e2:	ldr.w	r8, [sp, #20]
    e3e6:	movs	r7, #0
    e3e8:	mov	r9, r7
    e3ea:	ldr	r3, [sp, #20]
    e3ec:	ldr	r3, [r3, #4]
    e3ee:	cmp	r7, r3
    e3f0:	blt.n	e438 <btrfs_show_qgroups@@Base+0x220>
    e3f2:	cmp.w	r9, #0
    e3f6:	beq.n	e3c4 <btrfs_show_qgroups@@Base+0x1ac>
    e3f8:	ldr.w	r3, [pc, #1032]	; e804 <btrfs_show_qgroups@@Base+0x5ec>
    e3fc:	movs	r7, #0
    e3fe:	ldr.w	r8, [pc, #1032]	; e808 <btrfs_show_qgroups@@Base+0x5f0>
    e402:	add	r3, pc
    e404:	add	r8, pc
    e406:	vmov	s16, r3
    e40a:	ldr.w	r3, [r8, #8]
    e40e:	cmp	r3, #0
    e410:	beq.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e412:	movs	r3, #1
    e414:	vmov	r1, s17
    e418:	vmov	r0, s16
    e41c:	mov.w	r2, #936	; 0x3a8
    e420:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    e424:	subs	r3, r7, #1
    e426:	ldr.w	r5, [r8, #12]
    e42a:	cmp	r3, #5
    e42c:	bhi.n	e464 <btrfs_show_qgroups@@Base+0x24c>
    e42e:	tbb	[pc, r3]
    e432:	bx	r7
    e434:	str	r5, [r2, #52]	; 0x34
    e436:	ldr	r1, [sp, #452]	; 0x1c4
    e438:	ldr.w	r3, [r8, #8]
    e43c:	cmp	r3, #0
    e43e:	beq.n	e3f2 <btrfs_show_qgroups@@Base+0x1da>
    e440:	ldr.w	r2, [r8, #12]
    e444:	mov	r0, r4
    e446:	str	r1, [sp, #44]	; 0x2c
    e448:	blx	r3
    e44a:	cmp	r0, #0
    e44c:	bne.w	e7c0 <btrfs_show_qgroups@@Base+0x5a8>
    e450:	ldr.w	r3, [r8, #8]!
    e454:	adds	r7, #1
    e456:	ldr	r2, [sp, #40]	; 0x28
    e458:	ldr	r1, [sp, #44]	; 0x2c
    e45a:	cmp	r3, r2
    e45c:	it	eq
    e45e:	moveq.w	r9, #1
    e462:	b.n	e3ea <btrfs_show_qgroups@@Base+0x1d2>
    e464:	ldrd	r1, r3, [r4, #40]	; 0x28
    e468:	add	r5, sp, #56	; 0x38
    e46a:	mov	r0, r5
    e46c:	uxth	r2, r3
    e46e:	lsrs	r3, r3, #16
    e470:	str	r3, [sp, #0]
    e472:	movs	r3, #0
    e474:	str	r3, [sp, #4]
    e476:	ldr	r3, [pc, #916]	; (e80c <btrfs_show_qgroups@@Base+0x5f4>)
    e478:	strd	r1, r2, [sp, #8]
    e47c:	movs	r2, #100	; 0x64
    e47e:	add	r3, pc
    e480:	movs	r1, #1
    e482:	blx	8bc4 <__sprintf_chk@plt>
    e486:	mov	r0, r5
    e488:	blx	8b70 <strlen@plt>
    e48c:	ldr	r3, [pc, #896]	; (e810 <btrfs_show_qgroups@@Base+0x5f8>)
    e48e:	add	r3, pc
    e490:	ldr	r2, [r3, #16]
    e492:	cmp	r0, r2
    e494:	ble.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e496:	str	r0, [r3, #16]
    e498:	adds	r7, #1
    e49a:	add.w	r8, r8, #20
    e49e:	cmp	r7, #7
    e4a0:	bne.n	e40a <btrfs_show_qgroups@@Base+0x1f2>
    e4a2:	b.n	e3ac <btrfs_show_qgroups@@Base+0x194>
    e4a4:	mov	r2, r5
    e4a6:	ldrd	r0, r1, [r4, #56]	; 0x38
    e4aa:	bl	33988 <pretty_size_mode@@Base>
    e4ae:	blx	8b70 <strlen@plt>
    e4b2:	ldr	r3, [pc, #864]	; (e814 <btrfs_show_qgroups@@Base+0x5fc>)
    e4b4:	add	r3, pc
    e4b6:	ldr	r2, [r3, #36]	; 0x24
    e4b8:	cmp	r0, r2
    e4ba:	ble.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e4bc:	str	r0, [r3, #36]	; 0x24
    e4be:	b.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e4c0:	mov	r2, r5
    e4c2:	ldrd	r0, r1, [r4, #72]	; 0x48
    e4c6:	bl	33988 <pretty_size_mode@@Base>
    e4ca:	blx	8b70 <strlen@plt>
    e4ce:	ldr	r3, [pc, #840]	; (e818 <btrfs_show_qgroups@@Base+0x600>)
    e4d0:	add	r3, pc
    e4d2:	ldr	r2, [r3, #56]	; 0x38
    e4d4:	cmp	r0, r2
    e4d6:	ble.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e4d8:	str	r0, [r3, #56]	; 0x38
    e4da:	b.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e4dc:	mov	r2, r5
    e4de:	ldrd	r0, r1, [r4, #96]	; 0x60
    e4e2:	bl	33988 <pretty_size_mode@@Base>
    e4e6:	blx	8b70 <strlen@plt>
    e4ea:	ldr	r3, [pc, #816]	; (e81c <btrfs_show_qgroups@@Base+0x604>)
    e4ec:	add	r3, pc
    e4ee:	ldr	r2, [r3, #76]	; 0x4c
    e4f0:	cmp	r0, r2
    e4f2:	ble.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e4f4:	str	r0, [r3, #76]	; 0x4c
    e4f6:	b.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e4f8:	mov	r2, r5
    e4fa:	ldrd	r0, r1, [r4, #104]	; 0x68
    e4fe:	bl	33988 <pretty_size_mode@@Base>
    e502:	blx	8b70 <strlen@plt>
    e506:	ldr	r3, [pc, #792]	; (e820 <btrfs_show_qgroups@@Base+0x608>)
    e508:	add	r3, pc
    e50a:	ldr	r2, [r3, #96]	; 0x60
    e50c:	cmp	r0, r2
    e50e:	ble.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e510:	str	r0, [r3, #96]	; 0x60
    e512:	b.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e514:	ldr	r3, [pc, #780]	; (e824 <btrfs_show_qgroups@@Base+0x60c>)
    e516:	mov	r9, r4
    e518:	ldr.w	r6, [r9, #128]!
    e51c:	add.w	sl, sp, #56	; 0x38
    e520:	add	r3, pc
    e522:	movs	r5, #0
    e524:	cmp	r9, r6
    e526:	bne.n	e536 <btrfs_show_qgroups@@Base+0x31e>
    e528:	ldr	r3, [pc, #764]	; (e828 <btrfs_show_qgroups@@Base+0x610>)
    e52a:	add	r3, pc
    e52c:	ldr	r2, [r3, #116]	; 0x74
    e52e:	cmp	r5, r2
    e530:	ble.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e532:	str	r5, [r3, #116]	; 0x74
    e534:	b.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e536:	ldr	r2, [r6, #16]
    e538:	str	r3, [sp, #40]	; 0x28
    e53a:	ldrd	r0, r2, [r2, #40]	; 0x28
    e53e:	uxth	r1, r2
    e540:	lsrs	r2, r2, #16
    e542:	strd	r0, r1, [sp, #8]
    e546:	movs	r1, #1
    e548:	str	r2, [sp, #0]
    e54a:	mov	r0, sl
    e54c:	movs	r2, #0
    e54e:	str	r2, [sp, #4]
    e550:	movs	r2, #100	; 0x64
    e552:	blx	8bc4 <__sprintf_chk@plt>
    e556:	ldr	r6, [r6, #0]
    e558:	ldr	r3, [sp, #40]	; 0x28
    e55a:	cmp	r6, r9
    e55c:	add	r5, r0
    e55e:	it	ne
    e560:	addne	r5, #1
    e562:	b.n	e524 <btrfs_show_qgroups@@Base+0x30c>
    e564:	mov	r9, r4
    e566:	ldr	r3, [pc, #708]	; (e82c <btrfs_show_qgroups@@Base+0x614>)
    e568:	ldr.w	r5, [r9, #136]!
    e56c:	add.w	sl, sp, #56	; 0x38
    e570:	add	r3, pc
    e572:	movs	r6, #0
    e574:	subs	r5, #8
    e576:	add.w	r2, r5, #8
    e57a:	cmp	r9, r2
    e57c:	bne.n	e590 <btrfs_show_qgroups@@Base+0x378>
    e57e:	ldr	r3, [pc, #688]	; (e830 <btrfs_show_qgroups@@Base+0x618>)
    e580:	add	r3, pc
    e582:	ldr.w	r2, [r3, #136]	; 0x88
    e586:	cmp	r6, r2
    e588:	it	gt
    e58a:	strgt.w	r6, [r3, #136]	; 0x88
    e58e:	b.n	e498 <btrfs_show_qgroups@@Base+0x280>
    e590:	ldr	r2, [r5, #20]
    e592:	str	r3, [sp, #40]	; 0x28
    e594:	ldrd	r0, r2, [r2, #40]	; 0x28
    e598:	uxth	r1, r2
    e59a:	lsrs	r2, r2, #16
    e59c:	strd	r0, r1, [sp, #8]
    e5a0:	movs	r1, #1
    e5a2:	str	r2, [sp, #0]
    e5a4:	mov	r0, sl
    e5a6:	movs	r2, #0
    e5a8:	str	r2, [sp, #4]
    e5aa:	movs	r2, #100	; 0x64
    e5ac:	blx	8bc4 <__sprintf_chk@plt>
    e5b0:	ldr	r2, [r5, #8]
    e5b2:	ldr	r5, [r5, #8]
    e5b4:	cmp	r2, r9
    e5b6:	ldr	r3, [sp, #40]	; 0x28
    e5b8:	sub.w	r5, r5, #8
    e5bc:	add	r6, r0
    e5be:	it	ne
    e5c0:	addne	r6, #1
    e5c2:	b.n	e576 <btrfs_show_qgroups@@Base+0x35e>
    e5c4:	mov	r1, r7
    e5c6:	b.n	e2aa <btrfs_show_qgroups@@Base+0x92>
    e5c8:	movs	r0, #45	; 0x2d
    e5ca:	blx	8c08 <putchar@plt+0x4>
    e5ce:	b.n	e2e2 <btrfs_show_qgroups@@Base+0xca>
    e5d0:	movs	r0, #32
    e5d2:	blx	8c08 <putchar@plt+0x4>
    e5d6:	b.n	e2f0 <btrfs_show_qgroups@@Base+0xd8>
    e5d8:	blx	8b70 <strlen@plt>
    e5dc:	subs	r5, r5, r0
    e5de:	subs	r5, #1
    e5e0:	bcs.n	e5f8 <btrfs_show_qgroups@@Base+0x3e0>
    e5e2:	ldr	r0, [r4, #0]
    e5e4:	blx	8b70 <strlen@plt>
    e5e8:	mov	r5, r0
    e5ea:	subs	r5, #1
    e5ec:	bcc.w	e2f6 <btrfs_show_qgroups@@Base+0xde>
    e5f0:	movs	r0, #45	; 0x2d
    e5f2:	blx	8c08 <putchar@plt+0x4>
    e5f6:	b.n	e5ea <btrfs_show_qgroups@@Base+0x3d2>
    e5f8:	movs	r0, #32
    e5fa:	blx	8c08 <putchar@plt+0x4>
    e5fe:	b.n	e5de <btrfs_show_qgroups@@Base+0x3c6>
    e600:	ldr	r3, [pc, #560]	; (e834 <btrfs_show_qgroups@@Base+0x61c>)
    e602:	mov.w	r9, #0
    e606:	ldr	r7, [sp, #20]
    e608:	add	r3, pc
    e60a:	vmov	s16, r3
    e60e:	ldr	r3, [r7, #8]
    e610:	cmp	r3, #0
    e612:	beq.w	e772 <btrfs_show_qgroups@@Base+0x55a>
    e616:	movs	r3, #1
    e618:	vmov	r1, s17
    e61c:	vmov	r0, s16
    e620:	movs	r2, #217	; 0xd9
    e622:	bl	d990 <btrfs_find_free_objectid@@Base+0x5a8>
    e626:	add.w	r3, r9, #4294967295	; 0xffffffff
    e62a:	ldrd	r6, r5, [r7, #12]
    e62e:	cmp	r3, #5
    e630:	bhi.n	e63c <btrfs_show_qgroups@@Base+0x424>
    e632:	tbb	[pc, r3]
    e636:	subs	r7, r2, #0
    e638:	ldr	r5, [r2, #84]	; 0x54
    e63a:	strh	r3, [r4, #16]
    e63c:	ldrd	r1, r2, [r4, #28]
    e640:	movs	r0, #1
    e642:	uxth	r3, r2
    e644:	strd	r1, r3, [sp]
    e648:	ldr	r1, [pc, #492]	; (e838 <btrfs_show_qgroups@@Base+0x620>)
    e64a:	lsrs	r2, r2, #16
    e64c:	movs	r3, #0
    e64e:	add	r1, pc
    e650:	blx	8c6c <__printf_chk@plt+0x4>
    e654:	mov	r1, r0
    e656:	movs	r0, #0
    e658:	bl	d7bc <btrfs_find_free_objectid@@Base+0x3d4>
    e65c:	movs	r0, #32
    e65e:	blx	8c08 <putchar@plt+0x4>
    e662:	b.n	e772 <btrfs_show_qgroups@@Base+0x55a>
    e664:	ldrd	r0, r1, [r4, #44]	; 0x2c
    e668:	mov	r3, r5
    e66a:	mov	r2, r6
    e66c:	bl	d7e0 <btrfs_find_free_objectid@@Base+0x3f8>
    e670:	b.n	e65c <btrfs_show_qgroups@@Base+0x444>
    e672:	ldrd	r0, r1, [r4, #60]	; 0x3c
    e676:	mov	r3, r5
    e678:	mov	r2, r6
    e67a:	b.n	e66c <btrfs_show_qgroups@@Base+0x454>
    e67c:	ldr.w	sl, [pc, #444]	; e83c <btrfs_show_qgroups@@Base+0x624>
    e680:	mov	r6, r4
    e682:	ldr.w	fp, [pc, #444]	; e840 <btrfs_show_qgroups@@Base+0x628>
    e686:	movs	r5, #0
    e688:	ldr.w	r8, [r6, #116]!
    e68c:	add	sl, pc
    e68e:	add	fp, pc
    e690:	cmp	r6, r8
    e692:	bne.n	e6ac <btrfs_show_qgroups@@Base+0x494>
    e694:	ldr	r3, [r4, #116]	; 0x74
    e696:	cmp	r6, r3
    e698:	bne.n	e6a6 <btrfs_show_qgroups@@Base+0x48e>
    e69a:	ldr	r1, [pc, #424]	; (e844 <btrfs_show_qgroups@@Base+0x62c>)
    e69c:	movs	r0, #1
    e69e:	add	r1, pc
    e6a0:	blx	8c6c <__printf_chk@plt+0x4>
    e6a4:	add	r5, r0
    e6a6:	mov	r1, r5
    e6a8:	movs	r0, #5
    e6aa:	b.n	e658 <btrfs_show_qgroups@@Base+0x440>
    e6ac:	ldr.w	r3, [r8, #16]
    e6b0:	movs	r0, #1
    e6b2:	ldrd	r1, r2, [r3, #40]	; 0x28
    e6b6:	uxth	r3, r2
    e6b8:	lsrs	r2, r2, #16
    e6ba:	strd	r1, r3, [sp]
    e6be:	movs	r3, #0
    e6c0:	mov	r1, sl
    e6c2:	blx	8c6c <__printf_chk@plt+0x4>
    e6c6:	ldr.w	r3, [r8]
    e6ca:	cmp	r3, r6
    e6cc:	add	r5, r0
    e6ce:	beq.n	e6da <btrfs_show_qgroups@@Base+0x4c2>
    e6d0:	mov	r1, fp
    e6d2:	movs	r0, #1
    e6d4:	blx	8c6c <__printf_chk@plt+0x4>
    e6d8:	add	r5, r0
    e6da:	ldr.w	r8, [r8]
    e6de:	b.n	e690 <btrfs_show_qgroups@@Base+0x478>
    e6e0:	ldr	r3, [r4, #76]	; 0x4c
    e6e2:	and.w	r3, r3, #1
    e6e6:	str	r3, [sp, #24]
    e6e8:	movs	r3, #0
    e6ea:	str	r3, [sp, #28]
    e6ec:	ldrd	r2, r3, [sp, #24]
    e6f0:	orrs	r3, r2
    e6f2:	beq.n	e6fe <btrfs_show_qgroups@@Base+0x4e6>
    e6f4:	ldrd	r0, r1, [r4, #84]	; 0x54
    e6f8:	mov	r3, r5
    e6fa:	mov	r2, r6
    e6fc:	b.n	e66c <btrfs_show_qgroups@@Base+0x454>
    e6fe:	ldr	r3, [pc, #328]	; (e848 <btrfs_show_qgroups@@Base+0x630>)
    e700:	mov	r2, r5
    e702:	ldr	r1, [pc, #328]	; (e84c <btrfs_show_qgroups@@Base+0x634>)
    e704:	add	r3, pc
    e706:	add	r1, pc
    e708:	movs	r0, #1
    e70a:	blx	8c6c <__printf_chk@plt+0x4>
    e70e:	b.n	e65c <btrfs_show_qgroups@@Base+0x444>
    e710:	ldr	r3, [r4, #76]	; 0x4c
    e712:	and.w	r3, r3, #2
    e716:	str	r3, [sp, #32]
    e718:	movs	r3, #0
    e71a:	str	r3, [sp, #36]	; 0x24
    e71c:	ldrd	r2, r3, [sp, #32]
    e720:	orrs	r3, r2
    e722:	beq.n	e72e <btrfs_show_qgroups@@Base+0x516>
    e724:	ldrd	r0, r1, [r4, #92]	; 0x5c
    e728:	mov	r3, r5
    e72a:	mov	r2, r6
    e72c:	b.n	e66c <btrfs_show_qgroups@@Base+0x454>
    e72e:	ldr	r3, [pc, #288]	; (e850 <btrfs_show_qgroups@@Base+0x638>)
    e730:	mov	r2, r5
    e732:	ldr	r1, [pc, #288]	; (e854 <btrfs_show_qgroups@@Base+0x63c>)
    e734:	add	r3, pc
    e736:	add	r1, pc
    e738:	b.n	e708 <btrfs_show_qgroups@@Base+0x4f0>
    e73a:	mov	r8, r4
    e73c:	ldr.w	sl, [pc, #280]	; e858 <btrfs_show_qgroups@@Base+0x640>
    e740:	ldr.w	r5, [r8, #124]!
    e744:	movs	r6, #0
    e746:	ldr.w	fp, [pc, #276]	; e85c <btrfs_show_qgroups@@Base+0x644>
    e74a:	add	sl, pc
    e74c:	subs	r5, #8
    e74e:	add	fp, pc
    e750:	add.w	r3, r5, #8
    e754:	cmp	r8, r3
    e756:	bne.n	e790 <btrfs_show_qgroups@@Base+0x578>
    e758:	ldr	r3, [r4, #124]	; 0x7c
    e75a:	cmp	r8, r3
    e75c:	bne.n	e76a <btrfs_show_qgroups@@Base+0x552>
    e75e:	ldr	r1, [pc, #256]	; (e860 <btrfs_show_qgroups@@Base+0x648>)
    e760:	movs	r0, #1
    e762:	add	r1, pc
    e764:	blx	8c6c <__printf_chk@plt+0x4>
    e768:	add	r6, r0
    e76a:	mov	r1, r6
    e76c:	movs	r0, #6
    e76e:	bl	d7bc <btrfs_find_free_objectid@@Base+0x3d4>
    e772:	add.w	r9, r9, #1
    e776:	adds	r7, #20
    e778:	cmp.w	r9, #7
    e77c:	bne.w	e60e <btrfs_show_qgroups@@Base+0x3f6>
    e780:	movs	r0, #10
    e782:	blx	8c08 <putchar@plt+0x4>
    e786:	mov	r0, r4
    e788:	bl	172ea <rb_next@@Base>
    e78c:	mov	r4, r0
    e78e:	b.n	e31e <btrfs_show_qgroups@@Base+0x106>
    e790:	ldr	r3, [r5, #20]
    e792:	movs	r0, #1
    e794:	ldrd	r1, r2, [r3, #40]	; 0x28
    e798:	uxth	r3, r2
    e79a:	lsrs	r2, r2, #16
    e79c:	strd	r1, r3, [sp]
    e7a0:	movs	r3, #0
    e7a2:	mov	r1, sl
    e7a4:	blx	8c6c <__printf_chk@plt+0x4>
    e7a8:	ldr	r3, [r5, #8]
    e7aa:	cmp	r3, r8
    e7ac:	add	r6, r0
    e7ae:	beq.n	e7ba <btrfs_show_qgroups@@Base+0x5a2>
    e7b0:	mov	r1, fp
    e7b2:	movs	r0, #1
    e7b4:	blx	8c6c <__printf_chk@plt+0x4>
    e7b8:	add	r6, r0
    e7ba:	ldr	r5, [r5, #8]
    e7bc:	subs	r5, #8
    e7be:	b.n	e750 <btrfs_show_qgroups@@Base+0x538>
    e7c0:	bge.w	e3d4 <btrfs_show_qgroups@@Base+0x1bc>
    e7c4:	ldr	r5, [r5, #0]
    e7c6:	adds	r5, #8
    e7c8:	mov	r3, r6
    e7ca:	b.n	e378 <btrfs_show_qgroups@@Base+0x160>
    e7cc:	ldr	r0, [sp, #16]
    e7ce:	add	sp, #164	; 0xa4
    e7d0:	vpop	{d8}
    e7d4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e7d8:	lsls	r4, r7, #9
    e7da:	movs	r0, r0
    e7dc:	add	r2, sp, #1016	; 0x3f8
    e7de:	movs	r5, r0
    e7e0:	bl	ffcca7e2 <__bss_end__@@Base+0xffc6015a>
    e7e4:	bl	ffc587e6 <__bss_end__@@Base+0xffbee15e>
    e7e8:	lsls	r5, r0, #16
    e7ea:	movs	r3, r0
    e7ec:	add	r5, sp, #488	; 0x1e8
    e7ee:	movs	r5, r0
    e7f0:	lsls	r1, r5, #12
    e7f2:	movs	r3, r0
    e7f4:	lsls	r2, r2, #2
    e7f6:	movs	r3, r0
    e7f8:	lsls	r1, r4, #13
    e7fa:	movs	r3, r0
    e7fc:	add	r1, sp, #1016	; 0x3f8
    e7fe:	movs	r5, r0
    e800:	bl	270802 <__bss_end__@@Base+0x20617a>
    e804:	lsls	r2, r1, #6
    e806:	movs	r3, r0
    e808:	add	r4, sp, #0
    e80a:	movs	r5, r0
    e80c:	vaddl.u<illegal width 64>	q0, d14, d2
    e810:	add	r3, sp, #472	; 0x1d8
    e812:	movs	r5, r0
    e814:	add	r3, sp, #320	; 0x140
    e816:	movs	r5, r0
    e818:	add	r3, sp, #208	; 0xd0
    e81a:	movs	r5, r0
    e81c:	add	r3, sp, #96	; 0x60
    e81e:	movs	r5, r0
    e820:	add	r2, sp, #1008	; 0x3f0
    e822:	movs	r5, r0
    e824:	vhadd.u16	d0, d12, d2
    e828:	add	r2, sp, #872	; 0x368
    e82a:	movs	r5, r0
    e82c:	cdp2	0, 12, cr0, cr12, cr2, {0}
    e830:	add	r2, sp, #528	; 0x210
    e832:	movs	r5, r0
    e834:	vaddl.u8	q0, d4, d2
    e838:	stc2l	0, cr0, [lr, #8]!
    e83c:	ldc2	0, cr0, [r0, #8]!
    e840:	vhadd.u32	d0, d12, d2
    e844:	vhadd.u16	d0, d14, d2
    e848:	asrs	r7, r2, #14
    e84a:	movs	r3, r0
    e84c:	ldc2	0, cr0, [ip], {2}
    e850:	asrs	r7, r4, #13
    e852:	movs	r3, r0
    e854:	umlal	r0, r0, ip, r2
    e858:	ldc2l	0, cr0, [r2], #8
    e85c:	cdp2	0, 6, cr0, cr12, cr2, {0}
    e860:	cdp2	0, 5, cr0, cr10, cr2, {0}

0000e864 <btrfs_qgroup_parse_sort_string@@Base>:
    e864:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e868:	mov	r7, r1
    e86a:	blx	88cc <strdup@plt+0x4>
    e86e:	mov	r5, r0
    e870:	cmp	r0, #0
    e872:	beq.n	e8f8 <btrfs_qgroup_parse_sort_string@@Base+0x94>
    e874:	ldr	r1, [pc, #160]	; (e918 <btrfs_qgroup_parse_sort_string@@Base+0xb4>)
    e876:	ldr.w	r8, [pc, #164]	; e91c <btrfs_qgroup_parse_sort_string@@Base+0xb8>
    e87a:	add	r1, pc
    e87c:	ldr.w	r9, [pc, #160]	; e920 <btrfs_qgroup_parse_sort_string@@Base+0xbc>
    e880:	blx	8ce8 <strtok@plt>
    e884:	add	r8, pc
    e886:	add	r9, pc
    e888:	mov	r4, r0
    e88a:	cbz	r4, e8ba <btrfs_qgroup_parse_sort_string@@Base+0x56>
    e88c:	add.w	fp, r8, #160	; 0xa0
    e890:	add.w	sl, r4, #1
    e894:	mov	r6, fp
    e896:	b.n	e8b0 <btrfs_qgroup_parse_sort_string@@Base+0x4c>
    e898:	mov	r1, r4
    e89a:	mov	r0, r3
    e89c:	str	r3, [sp, #4]
    e89e:	blx	8748 <strcmp@plt>
    e8a2:	cbz	r0, e8c8 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    e8a4:	ldr	r3, [sp, #4]
    e8a6:	mov	r1, sl
    e8a8:	mov	r0, r3
    e8aa:	blx	8748 <strcmp@plt>
    e8ae:	cbz	r0, e8c8 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    e8b0:	ldr.w	r3, [r6], #4
    e8b4:	cmp	r3, #0
    e8b6:	bne.n	e898 <btrfs_qgroup_parse_sort_string@@Base+0x34>
    e8b8:	movs	r4, #1
    e8ba:	mov	r0, r5
    e8bc:	blx	87cc <free@plt+0x4>
    e8c0:	mov	r0, r4
    e8c2:	add	sp, #12
    e8c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e8c8:	ldrb	r3, [r4, #0]
    e8ca:	cmp	r3, #43	; 0x2b
    e8cc:	bne.n	e8d4 <btrfs_qgroup_parse_sort_string@@Base+0x70>
    e8ce:	adds	r4, #1
    e8d0:	movs	r2, #0
    e8d2:	b.n	e8dc <btrfs_qgroup_parse_sort_string@@Base+0x78>
    e8d4:	cmp	r3, #45	; 0x2d
    e8d6:	bne.n	e8d0 <btrfs_qgroup_parse_sort_string@@Base+0x6c>
    e8d8:	adds	r4, #1
    e8da:	movs	r2, #1
    e8dc:	movs	r6, #0
    e8de:	ldr.w	r1, [fp], #4
    e8e2:	mov	r0, r4
    e8e4:	str	r2, [sp, #4]
    e8e6:	blx	8748 <strcmp@plt>
    e8ea:	ldr	r2, [sp, #4]
    e8ec:	mov	sl, r0
    e8ee:	cbz	r0, e8fe <btrfs_qgroup_parse_sort_string@@Base+0x9a>
    e8f0:	adds	r6, #1
    e8f2:	cmp	r6, #5
    e8f4:	bne.n	e8de <btrfs_qgroup_parse_sort_string@@Base+0x7a>
    e8f6:	b.n	e8b8 <btrfs_qgroup_parse_sort_string@@Base+0x54>
    e8f8:	mvn.w	r4, #11
    e8fc:	b.n	e8c0 <btrfs_qgroup_parse_sort_string@@Base+0x5c>
    e8fe:	mov	r1, r6
    e900:	mov	r0, r7
    e902:	bl	df14 <btrfs_qgroup_setup_comparer@@Base>
    e906:	subs	r4, r0, #0
    e908:	blt.n	e8ba <btrfs_qgroup_parse_sort_string@@Base+0x56>
    e90a:	mov	r1, r9
    e90c:	mov	r0, sl
    e90e:	blx	8ce8 <strtok@plt>
    e912:	mov	r4, r0
    e914:	b.n	e88a <btrfs_qgroup_parse_sort_string@@Base+0x26>
    e916:	nop
    e918:	stc2l	0, cr0, [r0, #-8]
    e91c:	add	r7, pc, #512	; (adr r7, eb20 <list_sort@@Base+0x7c>)
    e91e:	movs	r5, r0
    e920:	ldc2	0, cr0, [r4, #-8]!

0000e924 <qgroup_inherit_size@@Base>:
    e924:	ldr	r3, [r0, #24]
    e926:	ldr	r2, [r0, #16]
    e928:	adds	r2, r3, r2
    e92a:	ldr	r3, [r0, #8]
    e92c:	adds	r3, #9
    e92e:	add.w	r0, r3, r2, lsl #1
    e932:	lsls	r0, r0, #3
    e934:	bx	lr

0000e936 <qgroup_inherit_add_group@@Base>:
    e936:	push	{r4, r5, r6, lr}
    e938:	mov	r6, r0
    e93a:	mov	r0, r1
    e93c:	bl	33e3c <parse_qgroupid@@Base>
    e940:	mov	r4, r0
    e942:	mov	r5, r1
    e944:	orrs.w	r3, r4, r5
    e948:	bne.n	e958 <qgroup_inherit_add_group@@Base+0x22>
    e94a:	ldr	r0, [pc, #56]	; (e984 <qgroup_inherit_add_group@@Base+0x4e>)
    e94c:	add	r0, pc
    e94e:	bl	1a900 <__btrfs_error@@Base>
    e952:	mvn.w	r0, #21
    e956:	pop	{r4, r5, r6, pc}
    e958:	ldr	r2, [r6, #0]
    e95a:	cbz	r2, e95e <qgroup_inherit_add_group@@Base+0x28>
    e95c:	ldr	r2, [r2, #8]
    e95e:	movs	r1, #1
    e960:	mov	r0, r6
    e962:	bl	d800 <btrfs_find_free_objectid@@Base+0x418>
    e966:	cmp	r0, #0
    e968:	bne.n	e956 <qgroup_inherit_add_group@@Base+0x20>
    e96a:	ldr	r3, [r6, #0]
    e96c:	ldrd	r2, r1, [r3, #8]
    e970:	adds	r6, r2, #1
    e972:	adc.w	r1, r1, #0
    e976:	strd	r6, r1, [r3, #8]
    e97a:	add.w	r3, r3, r2, lsl #3
    e97e:	strd	r4, r5, [r3, #72]	; 0x48
    e982:	b.n	e956 <qgroup_inherit_add_group@@Base+0x20>
    e984:	ldc2l	0, cr0, [r4], #-8

0000e988 <qgroup_inherit_add_copy@@Base>:
    e988:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    e98c:	mov	r6, r1
    e98e:	mov	sl, r0
    e990:	movs	r1, #58	; 0x3a
    e992:	mov	r0, r6
    e994:	mov	r5, r2
    e996:	blx	8b7c <strchr@plt>
    e99a:	mov	r4, r0
    e99c:	cbnz	r0, e9ae <qgroup_inherit_add_copy@@Base+0x26>
    e99e:	ldr	r0, [pc, #152]	; (ea38 <qgroup_inherit_add_copy@@Base+0xb0>)
    e9a0:	add	r0, pc
    e9a2:	bl	1a900 <__btrfs_error@@Base>
    e9a6:	mvn.w	r0, #21
    e9aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    e9ae:	mov	r8, r0
    e9b0:	movs	r3, #0
    e9b2:	mov	r0, r6
    e9b4:	strb.w	r3, [r8], #1
    e9b8:	bl	33e3c <parse_qgroupid@@Base>
    e9bc:	mov	r6, r0
    e9be:	mov	r0, r8
    e9c0:	mov	r7, r1
    e9c2:	bl	33e3c <parse_qgroupid@@Base>
    e9c6:	movs	r3, #58	; 0x3a
    e9c8:	strb	r3, [r4, #0]
    e9ca:	orrs.w	r3, r6, r7
    e9ce:	mov	r8, r0
    e9d0:	mov	r9, r1
    e9d2:	beq.n	e99e <qgroup_inherit_add_copy@@Base+0x16>
    e9d4:	orrs.w	r3, r8, r9
    e9d8:	beq.n	e99e <qgroup_inherit_add_copy@@Base+0x16>
    e9da:	ldr.w	r4, [sl]
    e9de:	cbz	r4, e9ea <qgroup_inherit_add_copy@@Base+0x62>
    e9e0:	ldr	r2, [r4, #16]
    e9e2:	ldr	r4, [r4, #8]
    e9e4:	muls	r2, r5
    e9e6:	add.w	r4, r4, r2, lsl #1
    e9ea:	mov	r2, r4
    e9ec:	movs	r1, #2
    e9ee:	mov	r0, sl
    e9f0:	bl	d800 <btrfs_find_free_objectid@@Base+0x418>
    e9f4:	cmp	r0, #0
    e9f6:	bne.n	e9aa <qgroup_inherit_add_copy@@Base+0x22>
    e9f8:	ldr.w	r3, [sl]
    e9fc:	add.w	r3, r3, r4, lsl #3
    ea00:	strd	r6, r7, [r3, #72]	; 0x48
    ea04:	ldr.w	r2, [sl]
    ea08:	add.w	r2, r2, r4, lsl #3
    ea0c:	strd	r8, r9, [r2, #80]	; 0x50
    ea10:	ldr.w	r3, [sl]
    ea14:	cbnz	r5, ea26 <qgroup_inherit_add_copy@@Base+0x9e>
    ea16:	ldrd	r2, r1, [r3, #16]
    ea1a:	adds	r2, #1
    ea1c:	adc.w	r1, r1, #0
    ea20:	strd	r2, r1, [r3, #16]
    ea24:	b.n	e9aa <qgroup_inherit_add_copy@@Base+0x22>
    ea26:	ldrd	r2, r1, [r3, #24]
    ea2a:	adds	r2, #1
    ea2c:	adc.w	r1, r1, #0
    ea30:	strd	r2, r1, [r3, #24]
    ea34:	b.n	e9aa <qgroup_inherit_add_copy@@Base+0x22>
    ea36:	nop
    ea38:	mrrc2	0, 0, r0, r2, cr2
    ea3c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    ea40:	mov	r5, r2
    ea42:	ldr	r2, [pc, #84]	; (ea98 <qgroup_inherit_add_copy@@Base+0x110>)
    ea44:	mov	r4, r3
    ea46:	ldr	r3, [pc, #84]	; (ea9c <qgroup_inherit_add_copy@@Base+0x114>)
    ea48:	add	r6, sp, #4
    ea4a:	add	r2, pc
    ea4c:	mov	r7, r0
    ea4e:	mov	r8, r1
    ea50:	ldr	r3, [r2, r3]
    ea52:	ldr	r3, [r3, #0]
    ea54:	str	r3, [sp, #12]
    ea56:	mov.w	r3, #0
    ea5a:	cbz	r5, ea60 <qgroup_inherit_add_copy@@Base+0xd8>
    ea5c:	cbnz	r4, ea78 <qgroup_inherit_add_copy@@Base+0xf0>
    ea5e:	mov	r4, r5
    ea60:	ldr	r2, [pc, #60]	; (eaa0 <qgroup_inherit_add_copy@@Base+0x118>)
    ea62:	ldr	r3, [pc, #56]	; (ea9c <qgroup_inherit_add_copy@@Base+0x114>)
    ea64:	add	r2, pc
    ea66:	str	r4, [r6, #0]
    ea68:	ldr	r0, [sp, #4]
    ea6a:	ldr	r3, [r2, r3]
    ea6c:	ldr	r2, [r3, #0]
    ea6e:	ldr	r3, [sp, #12]
    ea70:	eors	r2, r3
    ea72:	beq.n	ea90 <qgroup_inherit_add_copy@@Base+0x108>
    ea74:	blx	88e4 <__stack_chk_fail@plt>
    ea78:	mov	r2, r4
    ea7a:	mov	r1, r5
    ea7c:	mov	r0, r7
    ea7e:	blx	r8
    ea80:	cmp	r0, #0
    ea82:	itete	le
    ea84:	strle	r5, [r6, #0]
    ea86:	strgt	r4, [r6, #0]
    ea88:	ldrle	r5, [r5, #0]
    ea8a:	ldrgt	r4, [r4, #0]
    ea8c:	ldr	r6, [r6, #0]
    ea8e:	b.n	ea5a <qgroup_inherit_add_copy@@Base+0xd2>
    ea90:	add	sp, #16
    ea92:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    ea96:	nop
    ea98:	add	r2, pc, #920	; (adr r2, ee34 <list_sort@@Base+0x390>)
    ea9a:	movs	r5, r0
    ea9c:	lsls	r4, r7, #9
    ea9e:	movs	r0, r0
    eaa0:	add	r2, pc, #816	; (adr r2, edd4 <list_sort@@Base+0x330>)
    eaa2:	movs	r5, r0

0000eaa4 <list_sort@@Base>:
    eaa4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    eaa8:	mov	r7, r2
    eaaa:	ldr	r2, [pc, #268]	; (ebb8 <list_sort@@Base+0x114>)
    eaac:	sub	sp, #100	; 0x64
    eaae:	ldr	r3, [pc, #268]	; (ebbc <list_sort@@Base+0x118>)
    eab0:	mov	r8, r0
    eab2:	add	r2, pc
    eab4:	mov	r4, r1
    eab6:	ldr	r3, [r2, r3]
    eab8:	ldr	r3, [r3, #0]
    eaba:	str	r3, [sp, #92]	; 0x5c
    eabc:	mov.w	r3, #0
    eac0:	ldr	r3, [r1, #0]
    eac2:	cmp	r1, r3
    eac4:	beq.n	eb18 <list_sort@@Base+0x74>
    eac6:	add.w	r9, sp, #8
    eaca:	movs	r2, #84	; 0x54
    eacc:	movs	r1, #0
    eace:	ldr.w	fp, [pc, #240]	; ebc0 <list_sort@@Base+0x11c>
    ead2:	mov	r0, r9
    ead4:	movs	r5, #0
    ead6:	blx	8bf8 <memset@plt+0x4>
    eada:	ldr	r3, [r4, #4]
    eadc:	add	fp, pc
    eade:	str	r5, [r3, #0]
    eae0:	ldr	r3, [r4, #0]
    eae2:	cbnz	r3, eb2c <list_sort@@Base+0x88>
    eae4:	mov	r6, r3
    eae6:	cmp	r6, r5
    eae8:	bne.n	eb7a <list_sort@@Base+0xd6>
    eaea:	add	r2, sp, #96	; 0x60
    eaec:	mov	r5, r4
    eaee:	add.w	r6, r2, r6, lsl #2
    eaf2:	ldr.w	r6, [r6, #-88]
    eaf6:	cbz	r6, eafe <list_sort@@Base+0x5a>
    eaf8:	cmp	r3, #0
    eafa:	bne.n	eb8e <list_sort@@Base+0xea>
    eafc:	mov	r3, r6
    eafe:	str	r3, [r5, #0]
    eb00:	ldr	r2, [r5, #0]
    eb02:	mov	r0, r8
    eb04:	mov	r1, r2
    eb06:	blx	r7
    eb08:	ldr	r3, [r5, #0]
    eb0a:	str	r5, [r3, #4]
    eb0c:	ldr	r5, [r5, #0]
    eb0e:	ldr	r3, [r5, #0]
    eb10:	cmp	r3, #0
    eb12:	bne.n	eb00 <list_sort@@Base+0x5c>
    eb14:	str	r4, [r5, #0]
    eb16:	str	r5, [r4, #4]
    eb18:	ldr	r2, [pc, #168]	; (ebc4 <list_sort@@Base+0x120>)
    eb1a:	ldr	r3, [pc, #160]	; (ebbc <list_sort@@Base+0x118>)
    eb1c:	add	r2, pc
    eb1e:	ldr	r3, [r2, r3]
    eb20:	ldr	r2, [r3, #0]
    eb22:	ldr	r3, [sp, #92]	; 0x5c
    eb24:	eors	r2, r3
    eb26:	beq.n	ebb0 <list_sort@@Base+0x10c>
    eb28:	blx	88e4 <__stack_chk_fail@plt>
    eb2c:	ldr	r2, [r3, #0]
    eb2e:	mov	sl, r9
    eb30:	str	r2, [sp, #0]
    eb32:	movs	r2, #0
    eb34:	mov	r6, r2
    eb36:	str	r2, [r3, #0]
    eb38:	ldr.w	r2, [sl], #4
    eb3c:	cbnz	r2, eb62 <list_sort@@Base+0xbe>
    eb3e:	cmp	r6, r5
    eb40:	ble.n	eb54 <list_sort@@Base+0xb0>
    eb42:	cmp	r6, #20
    eb44:	bne.n	eb76 <list_sort@@Base+0xd2>
    eb46:	mov	r0, fp
    eb48:	str	r3, [sp, #4]
    eb4a:	blx	8a78 <puts@plt+0x4>
    eb4e:	ldr	r3, [sp, #4]
    eb50:	movs	r5, #19
    eb52:	mov	r6, r5
    eb54:	add	r2, sp, #96	; 0x60
    eb56:	add.w	r6, r2, r6, lsl #2
    eb5a:	str.w	r3, [r6, #-88]
    eb5e:	ldr	r3, [sp, #0]
    eb60:	b.n	eae2 <list_sort@@Base+0x3e>
    eb62:	mov	r1, r7
    eb64:	mov	r0, r8
    eb66:	bl	ea3c <qgroup_inherit_add_copy@@Base+0xb4>
    eb6a:	adds	r6, #1
    eb6c:	movs	r2, #0
    eb6e:	str.w	r2, [sl, #-4]
    eb72:	mov	r3, r0
    eb74:	b.n	eb38 <list_sort@@Base+0x94>
    eb76:	mov	r5, r6
    eb78:	b.n	eb54 <list_sort@@Base+0xb0>
    eb7a:	ldr.w	r2, [r9, r6, lsl #2]
    eb7e:	cbz	r2, eb8a <list_sort@@Base+0xe6>
    eb80:	mov	r1, r7
    eb82:	mov	r0, r8
    eb84:	bl	ea3c <qgroup_inherit_add_copy@@Base+0xb4>
    eb88:	mov	r3, r0
    eb8a:	adds	r6, #1
    eb8c:	b.n	eae6 <list_sort@@Base+0x42>
    eb8e:	mov	r2, r3
    eb90:	mov	r1, r6
    eb92:	mov	r0, r8
    eb94:	str	r3, [sp, #0]
    eb96:	blx	r7
    eb98:	ldr	r3, [sp, #0]
    eb9a:	cmp	r0, #0
    eb9c:	itete	le
    eb9e:	strle	r6, [r5, #0]
    eba0:	strgt	r3, [r5, #0]
    eba2:	strle	r5, [r6, #4]
    eba4:	strgt	r5, [r3, #4]
    eba6:	ite	le
    eba8:	ldrle	r6, [r6, #0]
    ebaa:	ldrgt	r3, [r3, #0]
    ebac:	ldr	r5, [r5, #0]
    ebae:	b.n	eaf6 <list_sort@@Base+0x52>
    ebb0:	add	sp, #100	; 0x64
    ebb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ebb6:	nop
    ebb8:	add	r2, pc, #504	; (adr r2, edb4 <list_sort@@Base+0x310>)
    ebba:	movs	r5, r0
    ebbc:	lsls	r4, r7, #9
    ebbe:	movs	r0, r0
    ebc0:	ldc2	0, cr0, [ip], {2}
    ebc4:	add	r2, pc, #80	; (adr r2, ec18 <list_sort@@Base+0x174>)
    ebc6:	movs	r5, r0
    ebc8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ebcc:	mov	r8, r1
    ebce:	ldr	r1, [pc, #392]	; (ed58 <list_sort@@Base+0x2b4>)
    ebd0:	mov	r5, r2
    ebd2:	ldr	r2, [pc, #392]	; (ed5c <list_sort@@Base+0x2b8>)
    ebd4:	subs	r4, r3, #0
    ebd6:	add	r1, pc
    ebd8:	sub	sp, #24
    ebda:	mov.w	r9, #0
    ebde:	mov	r0, r8
    ebe0:	ldr	r2, [r1, r2]
    ebe2:	add	r1, sp, #16
    ebe4:	ldr.w	sl, [pc, #376]	; ed60 <list_sort@@Base+0x2bc>
    ebe8:	ldr	r2, [r2, #0]
    ebea:	str	r2, [sp, #20]
    ebec:	mov.w	r2, #0
    ebf0:	ite	ne
    ebf2:	movne	r2, #2
    ebf4:	moveq	r2, r9
    ebf6:	str.w	r9, [sp, #16]
    ebfa:	bl	33fb4 <open_file_or_dir3@@Base>
    ebfe:	add	sl, pc
    ec00:	adds	r3, r0, #1
    ec02:	mov	r7, r0
    ec04:	bne.n	ec4a <list_sort@@Base+0x1a6>
    ec06:	blx	8bac <__errno_location@plt>
    ec0a:	mov	r1, r8
    ec0c:	mov	r6, r9
    ec0e:	ldr	r4, [r0, #0]
    ec10:	ldr	r0, [pc, #336]	; (ed64 <list_sort@@Base+0x2c0>)
    ec12:	negs	r4, r4
    ec14:	add	r0, pc
    ec16:	bl	1a900 <__btrfs_error@@Base>
    ec1a:	movs	r5, #0
    ec1c:	mov	r0, r6
    ec1e:	blx	87cc <free@plt+0x4>
    ec22:	mov	r0, r5
    ec24:	blx	87cc <free@plt+0x4>
    ec28:	cmp	r7, #0
    ec2a:	blt.n	ec34 <list_sort@@Base+0x190>
    ec2c:	ldr	r1, [sp, #16]
    ec2e:	mov	r0, r7
    ec30:	bl	341e8 <close_file_or_dir@@Base>
    ec34:	ldr	r2, [pc, #304]	; (ed68 <list_sort@@Base+0x2c4>)
    ec36:	ldr	r3, [pc, #292]	; (ed5c <list_sort@@Base+0x2b8>)
    ec38:	add	r2, pc
    ec3a:	ldr	r3, [r2, r3]
    ec3c:	ldr	r2, [r3, #0]
    ec3e:	ldr	r3, [sp, #20]
    ec40:	eors	r2, r3
    ec42:	beq.w	ed50 <list_sort@@Base+0x2ac>
    ec46:	blx	88e4 <__stack_chk_fail@plt>
    ec4a:	mov	r0, r5
    ec4c:	blx	8b70 <strlen@plt>
    ec50:	adds	r0, #7
    ec52:	blx	8a94 <malloc@plt+0x4>
    ec56:	mov	r6, r0
    ec58:	cmp	r0, #0
    ec5a:	beq.n	ed44 <list_sort@@Base+0x2a0>
    ec5c:	ldr	r3, [pc, #268]	; (ed6c <list_sort@@Base+0x2c8>)
    ec5e:	add	r3, pc
    ec60:	ldr	r0, [r3, #0]
    ec62:	ldrh	r3, [r3, #4]
    ec64:	str	r0, [r6, #0]
    ec66:	mov	r0, r5
    ec68:	strh	r3, [r6, #4]
    ec6a:	blx	8b70 <strlen@plt>
    ec6e:	mov	r1, r5
    ec70:	mov	r2, r0
    ec72:	adds	r0, r6, #6
    ec74:	blx	8830 <memcpy@plt+0x4>
    ec78:	mov	r0, r5
    ec7a:	blx	8b70 <strlen@plt>
    ec7e:	add	r0, r6
    ec80:	strb.w	r9, [r0, #6]
    ec84:	cbz	r4, ecc8 <list_sort@@Base+0x224>
    ec86:	ldr	r1, [pc, #232]	; (ed70 <list_sort@@Base+0x2cc>)
    ec88:	mov	r0, r4
    ec8a:	add	r1, pc
    ec8c:	blx	8748 <strcmp@plt>
    ec90:	cbz	r0, ecbc <list_sort@@Base+0x218>
    ec92:	ldr	r1, [pc, #224]	; (ed74 <list_sort@@Base+0x2d0>)
    ec94:	mov	r0, r4
    ec96:	add	r1, pc
    ec98:	blx	8748 <strcmp@plt>
    ec9c:	cbz	r0, ecc2 <list_sort@@Base+0x21e>
    ec9e:	mov	r0, r4
    eca0:	movs	r5, #0
    eca2:	blx	8b70 <strlen@plt>
    eca6:	mov	r2, r4
    eca8:	mov	r1, r6
    ecaa:	str	r5, [sp, #0]
    ecac:	mov	r3, r0
    ecae:	mov	r0, r7
    ecb0:	blx	8c44 <fsetxattr@plt>
    ecb4:	cmp	r0, r5
    ecb6:	blt.n	ecd8 <list_sort@@Base+0x234>
    ecb8:	mov	r4, r5
    ecba:	b.n	ec1c <list_sort@@Base+0x178>
    ecbc:	ldr	r4, [pc, #184]	; (ed78 <list_sort@@Base+0x2d4>)
    ecbe:	add	r4, pc
    ecc0:	b.n	ec9e <list_sort@@Base+0x1fa>
    ecc2:	ldr	r4, [pc, #184]	; (ed7c <list_sort@@Base+0x2d8>)
    ecc4:	add	r4, pc
    ecc6:	b.n	ec9e <list_sort@@Base+0x1fa>
    ecc8:	mov	r3, r4
    ecca:	mov	r2, r4
    eccc:	mov	r1, r6
    ecce:	mov	r0, r7
    ecd0:	blx	87e4 <fgetxattr@plt>
    ecd4:	subs	r3, r0, #0
    ecd6:	bge.n	ecfc <list_sort@@Base+0x258>
    ecd8:	blx	8bac <__errno_location@plt>
    ecdc:	ldr	r3, [r0, #0]
    ecde:	cmp	r3, #61	; 0x3d
    ece0:	beq.n	ed4c <list_sort@@Base+0x2a8>
    ece2:	cbnz	r4, ecf6 <list_sort@@Base+0x252>
    ece4:	ldr	r1, [pc, #152]	; (ed80 <list_sort@@Base+0x2dc>)
    ece6:	add	r1, pc
    ece8:	ldr	r0, [pc, #152]	; (ed84 <list_sort@@Base+0x2e0>)
    ecea:	mov	r2, r8
    ecec:	negs	r4, r3
    ecee:	add	r0, pc
    ecf0:	bl	1a900 <__btrfs_error@@Base>
    ecf4:	b.n	ec1a <list_sort@@Base+0x176>
    ecf6:	ldr	r1, [pc, #144]	; (ed88 <list_sort@@Base+0x2e4>)
    ecf8:	add	r1, pc
    ecfa:	b.n	ece8 <list_sort@@Base+0x244>
    ecfc:	str	r3, [sp, #12]
    ecfe:	blx	8a94 <malloc@plt+0x4>
    ed02:	mov	r5, r0
    ed04:	cbz	r0, ed46 <list_sort@@Base+0x2a2>
    ed06:	ldr	r3, [sp, #12]
    ed08:	mov	r2, r0
    ed0a:	mov	r1, r6
    ed0c:	mov	r0, r7
    ed0e:	blx	87e4 <fgetxattr@plt>
    ed12:	ldr	r3, [sp, #12]
    ed14:	cmp	r0, #0
    ed16:	bge.n	ed2c <list_sort@@Base+0x288>
    ed18:	blx	8bac <__errno_location@plt>
    ed1c:	mov	r1, r8
    ed1e:	ldr	r4, [r0, #0]
    ed20:	ldr	r0, [pc, #104]	; (ed8c <list_sort@@Base+0x2e8>)
    ed22:	negs	r4, r4
    ed24:	add	r0, pc
    ed26:	bl	1a900 <__btrfs_error@@Base>
    ed2a:	b.n	ec1c <list_sort@@Base+0x178>
    ed2c:	ldr	r2, [pc, #96]	; (ed90 <list_sort@@Base+0x2ec>)
    ed2e:	movs	r1, #1
    ed30:	ldr.w	r2, [sl, r2]
    ed34:	str	r5, [sp, #0]
    ed36:	mov	r0, r2
    ed38:	ldr	r2, [pc, #88]	; (ed94 <list_sort@@Base+0x2f0>)
    ed3a:	ldr	r0, [r0, #0]
    ed3c:	add	r2, pc
    ed3e:	blx	8ca0 <__fprintf_chk@plt+0x4>
    ed42:	b.n	ec1c <list_sort@@Base+0x178>
    ed44:	mov	r5, r0
    ed46:	mvn.w	r4, #11
    ed4a:	b.n	ec1c <list_sort@@Base+0x178>
    ed4c:	movs	r5, #0
    ed4e:	b.n	ecb8 <list_sort@@Base+0x214>
    ed50:	mov	r0, r4
    ed52:	add	sp, #24
    ed54:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ed58:	add	r1, pc, #360	; (adr r1, eec4 <list_sort@@Base+0x420>)
    ed5a:	movs	r5, r0
    ed5c:	lsls	r4, r7, #9
    ed5e:	movs	r0, r0
    ed60:	add	r1, pc, #200	; (adr r1, ee2c <list_sort@@Base+0x388>)
    ed62:	movs	r5, r0
    ed64:	smlad	r0, r2, r2, r0
    ed68:	add	r0, pc, #992	; (adr r0, f14c <ulist_del@@Base+0x10>)
    ed6a:	movs	r5, r0
    ed6c:			; <UNDEFINED> instruction: 0xfaee0002
    ed70:			; <UNDEFINED> instruction: 0xfac90002
    ed74:	lsrs	r5, r0, #24
    ed76:	movs	r3, r0
    ed78:	stc2l	0, cr0, [r8], #8
    ed7c:	stc2l	0, cr0, [r2], #8
    ed80:	svc	65	; 0x41
    ed82:	movs	r2, r0
    ed84:			; <UNDEFINED> instruction: 0xfa680002
    ed88:	ldr	r6, [pc, #572]	; (efc8 <ulist_release@@Base+0x12>)
    ed8a:	movs	r3, r0
    ed8c:			; <UNDEFINED> instruction: 0xfa560002
    ed90:	lsls	r0, r6, #10
    ed92:	movs	r0, r0
    ed94:			; <UNDEFINED> instruction: 0xfa630002
    ed98:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    ed9a:	mov	r5, r1
    ed9c:	ldr	r1, [pc, #268]	; (eeac <list_sort@@Base+0x408>)
    ed9e:	mov	r4, r3
    eda0:	ldr	r2, [pc, #268]	; (eeb0 <list_sort@@Base+0x40c>)
    eda2:	add	r1, pc
    eda4:	ldr	r2, [r1, r2]
    eda6:	ldr	r2, [r2, #0]
    eda8:	str	r2, [sp, #12]
    edaa:	mov.w	r2, #0
    edae:	cmp	r3, #0
    edb0:	beq.n	ee42 <list_sort@@Base+0x39e>
    edb2:	ldr	r1, [pc, #256]	; (eeb4 <list_sort@@Base+0x410>)
    edb4:	mov	r0, r3
    edb6:	add	r1, pc
    edb8:	blx	8748 <strcmp@plt>
    edbc:	cbnz	r0, ee04 <list_sort@@Base+0x360>
    edbe:	movs	r3, #1
    edc0:	strb.w	r3, [sp, #11]
    edc4:	ldrb.w	r1, [sp, #11]
    edc8:	mov	r0, r5
    edca:	bl	35ff0 <btrfs_util_set_subvolume_read_only@@Base>
    edce:	mov	r4, r0
    edd0:	cbz	r0, ee24 <list_sort@@Base+0x380>
    edd2:	blx	8bac <__errno_location@plt>
    edd6:	mov	r5, r0
    edd8:	ldr	r0, [r0, #0]
    edda:	blx	8aac <strerror@plt>
    edde:	mov	r6, r0
    ede0:	mov	r0, r4
    ede2:	bl	3c190 <btrfs_util_strerror@@Base>
    ede6:	mov	r1, r0
    ede8:	cbz	r0, ee38 <list_sort@@Base+0x394>
    edea:	str	r0, [sp, #4]
    edec:	mov	r0, r6
    edee:	blx	8748 <strcmp@plt>
    edf2:	ldr	r1, [sp, #4]
    edf4:	cbz	r0, ee38 <list_sort@@Base+0x394>
    edf6:	ldr	r0, [pc, #192]	; (eeb8 <list_sort@@Base+0x414>)
    edf8:	add	r0, pc
    edfa:	bl	1a900 <__btrfs_error@@Base>
    edfe:	ldr	r0, [r5, #0]
    ee00:	negs	r0, r0
    ee02:	b.n	ee24 <list_sort@@Base+0x380>
    ee04:	ldr	r1, [pc, #180]	; (eebc <list_sort@@Base+0x418>)
    ee06:	mov	r0, r4
    ee08:	add	r1, pc
    ee0a:	blx	8748 <strcmp@plt>
    ee0e:	cbnz	r0, ee16 <list_sort@@Base+0x372>
    ee10:	strb.w	r0, [sp, #11]
    ee14:	b.n	edc4 <list_sort@@Base+0x320>
    ee16:	ldr	r0, [pc, #168]	; (eec0 <list_sort@@Base+0x41c>)
    ee18:	mov	r1, r4
    ee1a:	add	r0, pc
    ee1c:	bl	1a900 <__btrfs_error@@Base>
    ee20:	mvn.w	r0, #21
    ee24:	ldr	r2, [pc, #156]	; (eec4 <list_sort@@Base+0x420>)
    ee26:	ldr	r3, [pc, #136]	; (eeb0 <list_sort@@Base+0x40c>)
    ee28:	add	r2, pc
    ee2a:	ldr	r3, [r2, r3]
    ee2c:	ldr	r2, [r3, #0]
    ee2e:	ldr	r3, [sp, #12]
    ee30:	eors	r2, r3
    ee32:	beq.n	eea8 <list_sort@@Base+0x404>
    ee34:	blx	88e4 <__stack_chk_fail@plt>
    ee38:	ldr	r0, [pc, #140]	; (eec8 <list_sort@@Base+0x424>)
    ee3a:	add	r0, pc
    ee3c:	bl	1a900 <__btrfs_error@@Base>
    ee40:	b.n	edfe <list_sort@@Base+0x35a>
    ee42:	mov	r0, r5
    ee44:	add.w	r1, sp, #11
    ee48:	bl	35f44 <btrfs_util_get_subvolume_read_only@@Base>
    ee4c:	mov	r5, r0
    ee4e:	cbz	r0, ee8a <list_sort@@Base+0x3e6>
    ee50:	blx	8bac <__errno_location@plt>
    ee54:	mov	r4, r0
    ee56:	ldr	r0, [r0, #0]
    ee58:	blx	8aac <strerror@plt>
    ee5c:	mov	r6, r0
    ee5e:	mov	r0, r5
    ee60:	bl	3c190 <btrfs_util_strerror@@Base>
    ee64:	mov	r1, r0
    ee66:	cbz	r0, ee80 <list_sort@@Base+0x3dc>
    ee68:	str	r0, [sp, #4]
    ee6a:	mov	r0, r6
    ee6c:	blx	8748 <strcmp@plt>
    ee70:	ldr	r1, [sp, #4]
    ee72:	cbz	r0, ee80 <list_sort@@Base+0x3dc>
    ee74:	ldr	r0, [pc, #84]	; (eecc <list_sort@@Base+0x428>)
    ee76:	add	r0, pc
    ee78:	bl	1a900 <__btrfs_error@@Base>
    ee7c:	ldr	r0, [r4, #0]
    ee7e:	b.n	ee00 <list_sort@@Base+0x35c>
    ee80:	ldr	r0, [pc, #76]	; (eed0 <list_sort@@Base+0x42c>)
    ee82:	add	r0, pc
    ee84:	bl	1a900 <__btrfs_error@@Base>
    ee88:	b.n	ee7c <list_sort@@Base+0x3d8>
    ee8a:	ldrb.w	r3, [sp, #11]
    ee8e:	cbnz	r3, eea2 <list_sort@@Base+0x3fe>
    ee90:	ldr	r2, [pc, #64]	; (eed4 <list_sort@@Base+0x430>)
    ee92:	add	r2, pc
    ee94:	ldr	r1, [pc, #64]	; (eed8 <list_sort@@Base+0x434>)
    ee96:	movs	r0, #1
    ee98:	add	r1, pc
    ee9a:	blx	8c6c <__printf_chk@plt+0x4>
    ee9e:	movs	r0, #0
    eea0:	b.n	ee24 <list_sort@@Base+0x380>
    eea2:	ldr	r2, [pc, #56]	; (eedc <list_sort@@Base+0x438>)
    eea4:	add	r2, pc
    eea6:	b.n	ee94 <list_sort@@Base+0x3f0>
    eea8:	add	sp, #16
    eeaa:	pop	{r4, r5, r6, pc}
    eeac:	ldr	r7, [sp, #568]	; 0x238
    eeae:	movs	r5, r0
    eeb0:	lsls	r4, r7, #9
    eeb2:	movs	r0, r0
    eeb4:	ldr??.w	r0, [fp, #2]
    eeb8:	ldrh	r3, [r3, #32]
    eeba:	movs	r4, r0
    eebc:	vld1.8	{d0[0]}, [lr], r2
    eec0:	vld1.8	{d0[0]}, [r2], r2
    eec4:	ldr	r7, [sp, #32]
    eec6:	movs	r5, r0
    eec8:	strh	r2, [r6, r4]
    eeca:	movs	r3, r0
    eecc:	ldrh	r5, [r3, #28]
    eece:	movs	r4, r0
    eed0:	strh	r2, [r5, r3]
    eed2:	movs	r3, r0
    eed4:	vld4.8	{d0-d3}, [r4], r2
    eed8:	vst4.8	{d16-d19}, [r3], r2
    eedc:	vst4.8	{d0-d3}, [sp], r2
    eee0:	mov	r0, r1
    eee2:	ldr	r1, [pc, #96]	; (ef44 <list_sort@@Base+0x4a0>)
    eee4:	ldr	r2, [pc, #96]	; (ef48 <list_sort@@Base+0x4a4>)
    eee6:	add	r1, pc
    eee8:	push	{r4, r5, lr}
    eeea:	sub	sp, #276	; 0x114
    eeec:	ldr	r2, [r1, r2]
    eeee:	mov	r1, r3
    eef0:	ldr	r5, [pc, #88]	; (ef4c <list_sort@@Base+0x4a8>)
    eef2:	ldr	r2, [r2, #0]
    eef4:	str	r2, [sp, #268]	; 0x10c
    eef6:	mov.w	r2, #0
    eefa:	add	r5, pc
    eefc:	cbz	r3, ef18 <list_sort@@Base+0x474>
    eefe:	bl	33b1a <set_label@@Base>
    ef02:	mov	r4, r0
    ef04:	ldr	r2, [pc, #72]	; (ef50 <list_sort@@Base+0x4ac>)
    ef06:	ldr	r3, [pc, #64]	; (ef48 <list_sort@@Base+0x4a4>)
    ef08:	add	r2, pc
    ef0a:	ldr	r3, [r2, r3]
    ef0c:	ldr	r2, [r3, #0]
    ef0e:	ldr	r3, [sp, #268]	; 0x10c
    ef10:	eors	r2, r3
    ef12:	beq.n	ef3c <list_sort@@Base+0x498>
    ef14:	blx	88e4 <__stack_chk_fail@plt>
    ef18:	add	r3, sp, #12
    ef1a:	str	r3, [sp, #4]
    ef1c:	mov	r1, r3
    ef1e:	bl	33aec <get_label@@Base>
    ef22:	ldr	r3, [sp, #4]
    ef24:	mov	r4, r0
    ef26:	cmp	r0, #0
    ef28:	bne.n	ef04 <list_sort@@Base+0x460>
    ef2a:	ldr	r2, [pc, #40]	; (ef54 <list_sort@@Base+0x4b0>)
    ef2c:	movs	r1, #1
    ef2e:	ldr	r0, [r5, r2]
    ef30:	ldr	r2, [pc, #36]	; (ef58 <list_sort@@Base+0x4b4>)
    ef32:	ldr	r0, [r0, #0]
    ef34:	add	r2, pc
    ef36:	blx	8ca0 <__fprintf_chk@plt+0x4>
    ef3a:	b.n	ef04 <list_sort@@Base+0x460>
    ef3c:	mov	r0, r4
    ef3e:	add	sp, #276	; 0x114
    ef40:	pop	{r4, r5, pc}
    ef42:	nop
    ef44:	ldr	r6, [sp, #296]	; 0x128
    ef46:	movs	r5, r0
    ef48:	lsls	r4, r7, #9
    ef4a:	movs	r0, r0
    ef4c:	ldr	r6, [sp, #216]	; 0xd8
    ef4e:	movs	r5, r0
    ef50:	ldr	r6, [sp, #160]	; 0xa0
    ef52:	movs	r5, r0
    ef54:	lsls	r0, r6, #10
    ef56:	movs	r0, r0
    ef58:	strh.w	r0, [lr, #2]
    ef5c:	ldr	r2, [pc, #60]	; (ef9c <list_sort@@Base+0x4f8>)
    ef5e:	movs	r1, #16
    ef60:	ldr	r3, [pc, #60]	; (efa0 <list_sort@@Base+0x4fc>)
    ef62:	push	{r4, lr}
    ef64:	add	r2, pc
    ef66:	sub	sp, #72	; 0x48
    ef68:	add	r4, sp, #4
    ef6a:	ldr	r3, [r2, r3]
    ef6c:	mov	r0, r4
    ef6e:	ldr	r3, [r3, #0]
    ef70:	str	r3, [sp, #68]	; 0x44
    ef72:	mov.w	r3, #0
    ef76:	blx	8ae0 <backtrace@plt>
    ef7a:	movs	r2, #2
    ef7c:	mov	r1, r0
    ef7e:	mov	r0, r4
    ef80:	blx	8e50 <backtrace_symbols_fd@plt>
    ef84:	ldr	r2, [pc, #28]	; (efa4 <list_sort@@Base+0x500>)
    ef86:	ldr	r3, [pc, #24]	; (efa0 <list_sort@@Base+0x4fc>)
    ef88:	add	r2, pc
    ef8a:	ldr	r3, [r2, r3]
    ef8c:	ldr	r2, [r3, #0]
    ef8e:	ldr	r3, [sp, #68]	; 0x44
    ef90:	eors	r2, r3
    ef92:	beq.n	ef98 <list_sort@@Base+0x4f4>
    ef94:	blx	88e4 <__stack_chk_fail@plt>
    ef98:	add	sp, #72	; 0x48
    ef9a:	pop	{r4, pc}
    ef9c:	ldr	r5, [sp, #816]	; 0x330
    ef9e:	movs	r5, r0
    efa0:	lsls	r4, r7, #9
    efa2:	movs	r0, r0
    efa4:	ldr	r5, [sp, #672]	; 0x2a0
    efa6:	movs	r5, r0

0000efa8 <ulist_init@@Base>:
    efa8:	adds	r3, r0, #4
    efaa:	strd	r3, r3, [r0, #4]
    efae:	movs	r3, #0
    efb0:	str	r3, [r0, #12]
    efb2:	str	r3, [r0, #0]
    efb4:	bx	lr

0000efb6 <ulist_release@@Base>:
    efb6:	push	{r4, r5, r6, lr}
    efb8:	mov	r5, r0
    efba:	mov	r4, r0
    efbc:	ldr.w	r0, [r5, #4]!
    efc0:	ldr.w	r6, [r0], #-16
    efc4:	subs	r6, #16
    efc6:	add.w	r3, r0, #16
    efca:	cmp	r5, r3
    efcc:	bne.n	efd8 <ulist_release@@Base+0x22>
    efce:	movs	r3, #0
    efd0:	strd	r5, r5, [r4, #4]
    efd4:	str	r3, [r4, #12]
    efd6:	pop	{r4, r5, r6, pc}
    efd8:	blx	87cc <free@plt+0x4>
    efdc:	ldr	r3, [r6, #16]
    efde:	mov	r0, r6
    efe0:	sub.w	r6, r3, #16
    efe4:	b.n	efc6 <ulist_release@@Base+0x10>

0000efe6 <ulist_reinit@@Base>:
    efe6:	push	{r4, lr}
    efe8:	mov	r4, r0
    efea:	bl	efb6 <ulist_release@@Base>
    efee:	mov	r0, r4
    eff0:	ldmia.w	sp!, {r4, lr}
    eff4:	b.w	efa8 <ulist_init@@Base>

0000eff8 <ulist_alloc@@Base>:
    eff8:	push	{r4, lr}
    effa:	movs	r0, #16
    effc:	blx	8a94 <malloc@plt+0x4>
    f000:	mov	r4, r0
    f002:	cbz	r0, f008 <ulist_alloc@@Base+0x10>
    f004:	bl	efa8 <ulist_init@@Base>
    f008:	mov	r0, r4
    f00a:	pop	{r4, pc}

0000f00c <ulist_free@@Base>:
    f00c:	push	{r4, lr}
    f00e:	mov	r4, r0
    f010:	cbz	r0, f020 <ulist_free@@Base+0x14>
    f012:	bl	efb6 <ulist_release@@Base>
    f016:	mov	r0, r4
    f018:	ldmia.w	sp!, {r4, lr}
    f01c:	b.w	87c8 <free@plt>
    f020:	pop	{r4, pc}

0000f022 <ulist_add_merge@@Base>:
    f022:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f026:	sub	sp, #20
    f028:	mov	r6, r0
    f02a:	ldr	r7, [pc, #220]	; (f108 <ulist_add_merge@@Base+0xe6>)
    f02c:	ldr	r0, [sp, #56]	; 0x38
    f02e:	mov	r8, r2
    f030:	ldr	r5, [r6, #12]
    f032:	mov	r9, r3
    f034:	add	r7, pc
    f036:	cbnz	r5, f048 <ulist_add_merge@@Base+0x26>
    f038:	movs	r0, #40	; 0x28
    f03a:	blx	8a94 <malloc@plt+0x4>
    f03e:	mov	r4, r0
    f040:	cbnz	r0, f064 <ulist_add_merge@@Base+0x42>
    f042:	mvn.w	r0, #11
    f046:	b.n	f102 <ulist_add_merge@@Base+0xe0>
    f048:	ldrd	r2, r3, [r5, #-24]
    f04c:	cmp	r3, r9
    f04e:	it	eq
    f050:	cmpeq	r2, r8
    f052:	bcs.n	f058 <ulist_add_merge@@Base+0x36>
    f054:	ldr	r5, [r5, #4]
    f056:	b.n	f036 <ulist_add_merge@@Base+0x14>
    f058:	cmp	r9, r3
    f05a:	it	eq
    f05c:	cmpeq	r8, r2
    f05e:	bcs.n	f0f6 <ulist_add_merge@@Base+0xd4>
    f060:	ldr	r5, [r5, #8]
    f062:	b.n	f036 <ulist_add_merge@@Base+0x14>
    f064:	ldrd	r2, r3, [sp, #48]	; 0x30
    f068:	add.w	ip, r6, #12
    f06c:	strd	r8, r9, [r4]
    f070:	strd	r2, r3, [r4, #8]
    f074:	mov	r2, ip
    f076:	ldr	r3, [r2, #0]
    f078:	cbnz	r3, f0a6 <ulist_add_merge@@Base+0x84>
    f07a:	add.w	r0, r4, #24
    f07e:	strd	r5, r3, [r4, #24]
    f082:	str	r3, [r4, #32]
    f084:	mov	r1, ip
    f086:	str	r0, [r2, #0]
    f088:	bl	16fae <rb_insert_color@@Base>
    f08c:	ldr	r3, [r6, #8]
    f08e:	add.w	r2, r4, #16
    f092:	adds	r1, r6, #4
    f094:	str	r2, [r6, #8]
    f096:	movs	r0, #1
    f098:	strd	r1, r3, [r4, #16]
    f09c:	str	r2, [r3, #0]
    f09e:	ldr	r3, [r6, #0]
    f0a0:	adds	r3, #1
    f0a2:	str	r3, [r6, #0]
    f0a4:	b.n	f102 <ulist_add_merge@@Base+0xe0>
    f0a6:	ldrd	r0, r1, [r3, #-24]
    f0aa:	cmp	r1, r9
    f0ac:	it	eq
    f0ae:	cmpeq	r0, r8
    f0b0:	bcs.n	f0b8 <ulist_add_merge@@Base+0x96>
    f0b2:	adds	r2, r3, #4
    f0b4:	mov	r5, r3
    f0b6:	b.n	f076 <ulist_add_merge@@Base+0x54>
    f0b8:	cmp	r9, r1
    f0ba:	it	eq
    f0bc:	cmpeq	r8, r0
    f0be:	bcs.n	f0c6 <ulist_add_merge@@Base+0xa4>
    f0c0:	add.w	r2, r3, #8
    f0c4:	b.n	f0b4 <ulist_add_merge@@Base+0x92>
    f0c6:	ldr	r3, [pc, #68]	; (f10c <ulist_add_merge@@Base+0xea>)
    f0c8:	movs	r1, #1
    f0ca:	ldr	r2, [pc, #68]	; (f110 <ulist_add_merge@@Base+0xee>)
    f0cc:	ldr	r0, [r7, r3]
    f0ce:	movs	r3, #0
    f0d0:	str	r3, [sp, #12]
    f0d2:	add	r2, pc
    f0d4:	ldr	r3, [pc, #60]	; (f114 <ulist_add_merge@@Base+0xf2>)
    f0d6:	add	r3, pc
    f0d8:	str	r3, [sp, #8]
    f0da:	ldr	r3, [pc, #60]	; (f118 <ulist_add_merge@@Base+0xf6>)
    f0dc:	add	r3, pc
    f0de:	str	r3, [sp, #4]
    f0e0:	movs	r3, #211	; 0xd3
    f0e2:	str	r3, [sp, #0]
    f0e4:	ldr	r3, [pc, #52]	; (f11c <ulist_add_merge@@Base+0xfa>)
    f0e6:	ldr	r0, [r0, #0]
    f0e8:	add	r3, pc
    f0ea:	blx	8ca0 <__fprintf_chk@plt+0x4>
    f0ee:	bl	ef5c <list_sort@@Base+0x4b8>
    f0f2:	blx	8e08 <abort@plt>
    f0f6:	cbz	r0, f102 <ulist_add_merge@@Base+0xe0>
    f0f8:	ldrd	r2, r3, [r5, #-16]
    f0fc:	strd	r2, r3, [r0]
    f100:	movs	r0, #0
    f102:	add	sp, #20
    f104:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f108:	ldr	r4, [sp, #1008]	; 0x3f0
    f10a:	movs	r5, r0
    f10c:	lsls	r4, r1, #10
    f10e:	movs	r0, r0
    f110:			; <UNDEFINED> instruction: 0xf29a0002
    f114:			; <UNDEFINED> instruction: 0xf7a60002
    f118:			; <UNDEFINED> instruction: 0xf7b80002
    f11c:			; <UNDEFINED> instruction: 0xf77e0002

0000f120 <ulist_add@@Base>:
    f120:	push	{r4, r5, lr}
    f122:	sub	sp, #20
    f124:	ldr	r1, [sp, #40]	; 0x28
    f126:	ldrd	r4, r5, [sp, #32]
    f12a:	str	r1, [sp, #12]
    f12c:	movs	r1, #0
    f12e:	strd	r4, r5, [sp]
    f132:	str	r1, [sp, #8]
    f134:	bl	f022 <ulist_add_merge@@Base>
    f138:	add	sp, #20
    f13a:	pop	{r4, r5, pc}

0000f13c <ulist_del@@Base>:
    f13c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    f140:	mov	r5, r0
    f142:	ldr	r4, [r5, #12]
    f144:	mov	r0, r2
    f146:	ldr.w	r8, [pc, #152]	; f1e0 <ulist_del@@Base+0xa4>
    f14a:	mov	r1, r3
    f14c:	add	r8, pc
    f14e:	cbnz	r4, f154 <ulist_del@@Base+0x18>
    f150:	movs	r0, #1
    f152:	b.n	f176 <ulist_del@@Base+0x3a>
    f154:	ldrd	r2, r3, [r4, #-24]
    f158:	cmp	r3, r1
    f15a:	it	eq
    f15c:	cmpeq	r2, r0
    f15e:	bcs.n	f164 <ulist_del@@Base+0x28>
    f160:	ldr	r4, [r4, #4]
    f162:	b.n	f14e <ulist_del@@Base+0x12>
    f164:	cmp	r1, r3
    f166:	it	eq
    f168:	cmpeq	r0, r2
    f16a:	bcs.n	f17c <ulist_del@@Base+0x40>
    f16c:	ldr	r4, [r4, #8]
    f16e:	b.n	f14e <ulist_del@@Base+0x12>
    f170:	movs	r0, #0
    f172:	subs	r3, #1
    f174:	str	r3, [r5, #0]
    f176:	add	sp, #16
    f178:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f17c:	ldrd	r6, r7, [r4, #-16]
    f180:	ldrd	r2, r3, [sp, #40]	; 0x28
    f184:	cmp	r7, r3
    f186:	it	eq
    f188:	cmpeq	r6, r2
    f18a:	bne.n	f150 <ulist_del@@Base+0x14>
    f18c:	add.w	r1, r5, #12
    f190:	mov	r0, r4
    f192:	bl	17054 <rb_erase@@Base>
    f196:	ldrd	r2, r3, [r4, #-8]
    f19a:	sub.w	r6, r4, #24
    f19e:	str	r3, [r2, #4]
    f1a0:	mov	r0, r6
    f1a2:	str	r2, [r3, #0]
    f1a4:	blx	87cc <free@plt+0x4>
    f1a8:	ldr	r3, [r5, #0]
    f1aa:	cmp	r3, #0
    f1ac:	bne.n	f170 <ulist_del@@Base+0x34>
    f1ae:	ldr	r3, [pc, #52]	; (f1e4 <ulist_del@@Base+0xa8>)
    f1b0:	movs	r1, #1
    f1b2:	ldr	r2, [pc, #52]	; (f1e8 <ulist_del@@Base+0xac>)
    f1b4:	ldr.w	r0, [r8, r3]
    f1b8:	add	r2, pc
    f1ba:	ldr	r3, [pc, #48]	; (f1ec <ulist_del@@Base+0xb0>)
    f1bc:	str	r1, [sp, #12]
    f1be:	add	r3, pc
    f1c0:	str	r3, [sp, #8]
    f1c2:	ldr	r3, [pc, #44]	; (f1f0 <ulist_del@@Base+0xb4>)
    f1c4:	add	r3, pc
    f1c6:	adds	r3, #16
    f1c8:	str	r3, [sp, #4]
    f1ca:	movs	r3, #140	; 0x8c
    f1cc:	str	r3, [sp, #0]
    f1ce:	ldr	r3, [pc, #36]	; (f1f4 <ulist_del@@Base+0xb8>)
    f1d0:	ldr	r0, [r0, #0]
    f1d2:	add	r3, pc
    f1d4:	blx	8ca0 <__fprintf_chk@plt+0x4>
    f1d8:	bl	ef5c <list_sort@@Base+0x4b8>
    f1dc:	blx	8e08 <abort@plt>
    f1e0:	ldr	r3, [sp, #912]	; 0x390
    f1e2:	movs	r5, r0
    f1e4:	lsls	r4, r1, #10
    f1e6:	movs	r0, r0
    f1e8:	ble.n	f1ca <ulist_del@@Base+0x8e>
    f1ea:	movs	r2, r0
    f1ec:	movt	r0, #14338	; 0x3802
    f1f0:			; <UNDEFINED> instruction: 0xf6d00002
    f1f4:			; <UNDEFINED> instruction: 0xf6940002

0000f1f8 <ulist_next@@Base>:
    f1f8:	ldr	r3, [r0, #4]
    f1fa:	adds	r2, r0, #4
    f1fc:	cmp	r2, r3
    f1fe:	beq.n	f212 <ulist_next@@Base+0x1a>
    f200:	ldr	r0, [r1, #0]
    f202:	cbz	r0, f20a <ulist_next@@Base+0x12>
    f204:	ldr	r3, [r0, #0]
    f206:	cmp	r2, r3
    f208:	beq.n	f212 <ulist_next@@Base+0x1a>
    f20a:	str	r3, [r1, #0]
    f20c:	ldr	r0, [r1, #0]
    f20e:	subs	r0, #16
    f210:	bx	lr
    f212:	movs	r0, #0
    f214:	bx	lr
    f216:	nop
    f218:	ldrd	r2, r3, [r0]
    f21c:	str	r3, [r2, #4]
    f21e:	str	r2, [r3, #0]
    f220:	ldr	r2, [pc, #8]	; (f22c <ulist_next@@Base+0x34>)
    f222:	ldr	r3, [pc, #12]	; (f230 <ulist_next@@Base+0x38>)
    f224:	strd	r2, r3, [r0]
    f228:	bx	lr
    f22a:	nop
    f22c:	lsls	r0, r0, #4
    f22e:	movs	r0, r2
    f230:	lsls	r0, r0, #8
    f232:	movs	r0, r4
    f234:	mov	r3, r1
    f236:	ldr	r1, [pc, #44]	; (f264 <ulist_next@@Base+0x6c>)
    f238:	mov	r2, r0
    f23a:	add	r1, pc
    f23c:	push	{r4, r5, lr}
    f23e:	ldr	r0, [r1, #0]
    f240:	cbz	r0, f25c <ulist_next@@Base+0x64>
    f242:	ldrd	r4, r5, [r0, #-96]	; 0x60
    f246:	cmp	r3, r5
    f248:	it	eq
    f24a:	cmpeq	r2, r4
    f24c:	bcs.n	f252 <ulist_next@@Base+0x5a>
    f24e:	ldr	r0, [r0, #8]
    f250:	b.n	f240 <ulist_next@@Base+0x48>
    f252:	cmp	r5, r3
    f254:	it	eq
    f256:	cmpeq	r4, r2
    f258:	bcc.n	f25e <ulist_next@@Base+0x66>
    f25a:	subs	r0, #96	; 0x60
    f25c:	pop	{r4, r5, pc}
    f25e:	ldr	r0, [r0, #4]
    f260:	b.n	f240 <ulist_next@@Base+0x48>
    f262:	nop
    f264:	push	{r1, r3}
    f266:	movs	r5, r0
    f268:	subs	r0, #32
    f26a:	b.w	87c8 <free@plt>
    f26e:	ldr	r3, [pc, #92]	; (f2cc <ulist_next@@Base+0xd4>)
    f270:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f274:	add	r3, pc
    f276:	mov	r4, r0
    f278:	mov	r5, r1
    f27a:	ldr	r3, [r3, #24]
    f27c:	cbz	r3, f2a8 <ulist_next@@Base+0xb0>
    f27e:	ldrd	r0, r1, [r3, #-32]
    f282:	cmp	r5, r1
    f284:	it	eq
    f286:	cmpeq	r4, r0
    f288:	bcs.n	f28e <ulist_next@@Base+0x96>
    f28a:	ldr	r3, [r3, #8]
    f28c:	b.n	f27c <ulist_next@@Base+0x84>
    f28e:	cmp	r1, r5
    f290:	it	eq
    f292:	cmpeq	r0, r4
    f294:	bcs.n	f29a <ulist_next@@Base+0xa2>
    f296:	ldr	r3, [r3, #4]
    f298:	b.n	f27c <ulist_next@@Base+0x84>
    f29a:	sub.w	r4, r3, #32
    f29e:	mov	r0, r3
    f2a0:	bl	17316 <rb_prev@@Base>
    f2a4:	mov	r3, r4
    f2a6:	cbnz	r0, f2ae <ulist_next@@Base+0xb6>
    f2a8:	mov	r0, r3
    f2aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f2ae:	ldrd	r6, r7, [r0, #-32]
    f2b2:	sub.w	r8, r0, #32
    f2b6:	ldrd	r4, r5, [r3]
    f2ba:	cmp	r7, r5
    f2bc:	it	eq
    f2be:	cmpeq	r6, r4
    f2c0:	bne.n	f2a8 <ulist_next@@Base+0xb0>
    f2c2:	bl	17316 <rb_prev@@Base>
    f2c6:	mov	r3, r8
    f2c8:	b.n	f2a6 <ulist_next@@Base+0xae>
    f2ca:	nop
    f2cc:	cbz	r0, f344 <ulist_next@@Base+0x14c>
    f2ce:	movs	r5, r0
    f2d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f2d4:	mov	r1, r3
    f2d6:	sub	sp, #28
    f2d8:	mov	r5, r0
    f2da:	mov	r0, r2
    f2dc:	mov	r6, r2
    f2de:	mov	r7, r3
    f2e0:	bl	f26e <ulist_next@@Base+0x76>
    f2e4:	cbnz	r0, f2f4 <ulist_next@@Base+0xfc>
    f2e6:	ldr	r0, [pc, #208]	; (f3b8 <ulist_next@@Base+0x1c0>)
    f2e8:	mov	r2, r6
    f2ea:	mov	r3, r7
    f2ec:	add	r0, pc
    f2ee:	bl	1a900 <__btrfs_error@@Base>
    f2f2:	b.n	f312 <ulist_next@@Base+0x11a>
    f2f4:	mov	r4, r0
    f2f6:	ldrd	r8, r9, [r4], #32
    f2fa:	cmp	r9, r7
    f2fc:	it	eq
    f2fe:	cmpeq	r8, r6
    f300:	beq.n	f31c <ulist_next@@Base+0x124>
    f302:	ldr	r0, [pc, #184]	; (f3bc <ulist_next@@Base+0x1c4>)
    f304:	mov	r2, r8
    f306:	mov	r3, r9
    f308:	strd	r6, r7, [sp]
    f30c:	add	r0, pc
    f30e:	bl	1a900 <__btrfs_error@@Base>
    f312:	mvn.w	r0, #4
    f316:	add	sp, #28
    f318:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f31c:	str	r0, [sp, #20]
    f31e:	mov	r0, r4
    f320:	bl	17316 <rb_prev@@Base>
    f324:	ldr	r1, [sp, #20]
    f326:	cbz	r0, f33a <ulist_next@@Base+0x142>
    f328:	ldrd	r2, r3, [r0, #-32]
    f32c:	cmp	r3, r9
    f32e:	it	eq
    f330:	cmpeq	r2, r8
    f332:	bne.n	f33a <ulist_next@@Base+0x142>
    f334:	ldr	r0, [pc, #136]	; (f3c0 <ulist_next@@Base+0x1c8>)
    f336:	add	r0, pc
    f338:	b.n	f2ee <ulist_next@@Base+0xf6>
    f33a:	mov.w	sl, #0
    f33e:	mov.w	fp, #0
    f342:	ldrd	r2, r3, [r1, #24]
    f346:	orrs.w	r0, r2, r3
    f34a:	beq.n	f372 <ulist_next@@Base+0x17a>
    f34c:	cmp	r3, #0
    f34e:	it	eq
    f350:	cmpeq	r2, #5
    f352:	beq.n	f35e <ulist_next@@Base+0x166>
    f354:	cmp.w	r2, #256	; 0x100
    f358:	sbcs.w	r1, r3, #0
    f35c:	blt.n	f38e <ulist_next@@Base+0x196>
    f35e:	movs	r1, #0
    f360:	mov	r0, r5
    f362:	str	r1, [sp, #8]
    f364:	strd	sl, fp, [sp]
    f368:	bl	f120 <ulist_add@@Base>
    f36c:	cmp	r0, #0
    f36e:	bge.n	f38e <ulist_next@@Base+0x196>
    f370:	b.n	f316 <ulist_next@@Base+0x11e>
    f372:	ldrd	r2, r3, [r1, #16]
    f376:	ldrd	r8, r9, [r1]
    f37a:	cmp	r3, r9
    f37c:	it	eq
    f37e:	cmpeq	r2, r8
    f380:	bne.n	f3ae <ulist_next@@Base+0x1b6>
    f382:	mvn.w	r2, #7
    f386:	mov.w	r3, #4294967295	; 0xffffffff
    f38a:	strd	r2, r3, [r1, #24]
    f38e:	mov	r0, r4
    f390:	bl	172ea <rb_next@@Base>
    f394:	mov	r4, r0
    f396:	cmp	r0, #0
    f398:	beq.n	f316 <ulist_next@@Base+0x11e>
    f39a:	ldrd	r2, r3, [r0, #-32]
    f39e:	sub.w	r1, r0, #32
    f3a2:	cmp	r3, r7
    f3a4:	it	eq
    f3a6:	cmpeq	r2, r6
    f3a8:	beq.n	f342 <ulist_next@@Base+0x14a>
    f3aa:	movs	r0, #0
    f3ac:	b.n	f316 <ulist_next@@Base+0x11e>
    f3ae:	mov	r0, r5
    f3b0:	bl	f2d0 <ulist_next@@Base+0xd8>
    f3b4:	b.n	f36c <ulist_next@@Base+0x174>
    f3b6:	nop
    f3b8:	rsb	r0, fp, #8519680	; 0x820000
    f3bc:	rsbs	r0, r0, #8519680	; 0x820000
    f3c0:	rsbs	r0, fp, #8519680	; 0x820000
    f3c4:	ldr	r2, [pc, #80]	; (f418 <ulist_next@@Base+0x220>)
    f3c6:	ldr	r3, [pc, #84]	; (f41c <ulist_next@@Base+0x224>)
    f3c8:	push	{r0, r1, r4, r5, r6, lr}
    f3ca:	add	r2, pc
    f3cc:	ldr	r4, [pc, #80]	; (f420 <ulist_next@@Base+0x228>)
    f3ce:	ldr	r3, [r2, r3]
    f3d0:	add	r4, pc
    f3d2:	ldr	r3, [r3, #0]
    f3d4:	str	r3, [sp, #4]
    f3d6:	mov.w	r3, #0
    f3da:	ldr	r3, [r4, #28]
    f3dc:	cbz	r3, f3f8 <ulist_next@@Base+0x200>
    f3de:	mov	r6, sp
    f3e0:	movs	r3, #0
    f3e2:	str	r3, [sp, #0]
    f3e4:	ldr	r0, [r4, #28]
    f3e6:	mov	r1, r6
    f3e8:	bl	f1f8 <ulist_next@@Base>
    f3ec:	mov	r5, r0
    f3ee:	cbnz	r0, f40c <ulist_next@@Base+0x214>
    f3f0:	ldr	r0, [r4, #28]
    f3f2:	bl	f00c <ulist_free@@Base>
    f3f6:	str	r5, [r4, #28]
    f3f8:	ldr	r2, [pc, #40]	; (f424 <ulist_next@@Base+0x22c>)
    f3fa:	ldr	r3, [pc, #32]	; (f41c <ulist_next@@Base+0x224>)
    f3fc:	add	r2, pc
    f3fe:	ldr	r3, [r2, r3]
    f400:	ldr	r2, [r3, #0]
    f402:	ldr	r3, [sp, #4]
    f404:	eors	r2, r3
    f406:	beq.n	f414 <ulist_next@@Base+0x21c>
    f408:	blx	88e4 <__stack_chk_fail@plt>
    f40c:	ldr	r0, [r5, #8]
    f40e:	blx	87cc <free@plt+0x4>
    f412:	b.n	f3e4 <ulist_next@@Base+0x1ec>
    f414:	add	sp, #8
    f416:	pop	{r4, r5, r6, pc}
    f418:	ldr	r1, [sp, #408]	; 0x198
    f41a:	movs	r5, r0
    f41c:	lsls	r4, r7, #9
    f41e:	movs	r0, r0
    f420:	sxtb	r4, r6
    f422:	movs	r5, r0
    f424:	ldr	r1, [sp, #208]	; 0xd0
    f426:	movs	r5, r0
    f428:	ldr.w	ip, [pc, #76]	; f478 <ulist_next@@Base+0x280>
    f42c:	ldr	r5, [pc, #76]	; (f47c <ulist_next@@Base+0x284>)
    f42e:	add	ip, pc
    f430:	ldr	r4, [pc, #76]	; (f480 <ulist_next@@Base+0x288>)
    f432:	push	{lr}
    f434:	sub	sp, #92	; 0x5c
    f436:	ldr.w	r5, [ip, r5]
    f43a:	add	r4, pc
    f43c:	ldr	r5, [r5, #0]
    f43e:	str	r5, [sp, #84]	; 0x54
    f440:	mov.w	r5, #0
    f444:	ldr	r5, [pc, #60]	; (f484 <ulist_next@@Base+0x28c>)
    f446:	ldr	r4, [r4, r5]
    f448:	ldr	r5, [sp, #96]	; 0x60
    f44a:	strd	r3, r2, [sp]
    f44e:	mov	r3, r1
    f450:	ldr	r2, [pc, #52]	; (f488 <ulist_next@@Base+0x290>)
    f452:	movs	r1, #1
    f454:	strd	r0, r5, [sp, #8]
    f458:	ldr	r0, [r4, #0]
    f45a:	add	r4, sp, #20
    f45c:	add	r2, pc
    f45e:	blx	8ca0 <__fprintf_chk@plt+0x4>
    f462:	movs	r1, #16
    f464:	mov	r0, r4
    f466:	blx	8ae0 <backtrace@plt>
    f46a:	movs	r2, #2
    f46c:	mov	r1, r0
    f46e:	mov	r0, r4
    f470:	blx	8e50 <backtrace_symbols_fd@plt>
    f474:	blx	8e08 <abort@plt>
    f478:	ldr	r1, [sp, #8]
    f47a:	movs	r5, r0
    f47c:	lsls	r4, r7, #9
    f47e:	movs	r0, r0
    f480:	ldr	r0, [sp, #984]	; 0x3d8
    f482:	movs	r5, r0
    f484:	lsls	r4, r1, #10
    f486:	movs	r0, r0
    f488:	blt.n	f522 <ulist_next@@Base+0x32a>
    f48a:	movs	r2, r0
    f48c:	push	{r0, r1, r2, lr}
    f48e:	cbz	r3, f4a0 <ulist_next@@Base+0x2a8>
    f490:	movs	r3, #1
    f492:	str	r3, [sp, #0]
    f494:	mov	r3, r2
    f496:	mov	r2, r1
    f498:	ldr	r1, [pc, #12]	; (f4a8 <ulist_next@@Base+0x2b0>)
    f49a:	add	r1, pc
    f49c:	bl	f428 <ulist_next@@Base+0x230>
    f4a0:	add	sp, #12
    f4a2:	ldr.w	pc, [sp], #4
    f4a6:	nop
    f4a8:			; <UNDEFINED> instruction: 0xf4a40002
    f4ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f4b0:	vpush	{d8-d9}
    f4b4:	sub	sp, #76	; 0x4c
    f4b6:	strd	r2, r3, [sp, #24]
    f4ba:	ldr.w	r2, [pc, #1040]	; f8cc <ulist_next@@Base+0x6d4>
    f4be:	ldr.w	r3, [pc, #1040]	; f8d0 <ulist_next@@Base+0x6d8>
    f4c2:	add	r2, pc
    f4c4:	str	r0, [sp, #52]	; 0x34
    f4c6:	movs	r0, #0
    f4c8:	ldr	r3, [r2, r3]
    f4ca:	ldr	r3, [r3, #0]
    f4cc:	str	r3, [sp, #68]	; 0x44
    f4ce:	mov.w	r3, #0
    f4d2:	bl	eff8 <ulist_alloc@@Base>
    f4d6:	mov	r4, r0
    f4d8:	ldr	r0, [pc, #1016]	; (f8d4 <ulist_next@@Base+0x6dc>)
    f4da:	add	r0, pc
    f4dc:	adds	r0, #24
    f4de:	bl	172ca <rb_first@@Base>
    f4e2:	ldr	r3, [pc, #1012]	; (f8d8 <ulist_next@@Base+0x6e0>)
    f4e4:	add	r3, pc
    f4e6:	adds	r3, #17
    f4e8:	vmov	s18, r3
    f4ec:	mov	fp, r0
    f4ee:	mov	r0, r4
    f4f0:	cmp.w	fp, #0
    f4f4:	bne.n	f512 <ulist_next@@Base+0x31a>
    f4f6:	bl	f00c <ulist_free@@Base>
    f4fa:	mov	r0, fp
    f4fc:	ldr	r2, [pc, #988]	; (f8dc <ulist_next@@Base+0x6e4>)
    f4fe:	ldr	r3, [pc, #976]	; (f8d0 <ulist_next@@Base+0x6d8>)
    f500:	add	r2, pc
    f502:	ldr	r3, [r2, r3]
    f504:	ldr	r2, [r3, #0]
    f506:	ldr	r3, [sp, #68]	; 0x44
    f508:	eors	r2, r3
    f50a:	beq.w	f8c0 <ulist_next@@Base+0x6c8>
    f50e:	blx	88e4 <__stack_chk_fail@plt>
    f512:	ldr	r6, [pc, #972]	; (f8e0 <ulist_next@@Base+0x6e8>)
    f514:	bl	efe6 <ulist_reinit@@Base>
    f518:	ldr	r7, [pc, #968]	; (f8e4 <ulist_next@@Base+0x6ec>)
    f51a:	sub.w	r5, fp, #32
    f51e:	ldr.w	sl, [pc, #968]	; f8e8 <ulist_next@@Base+0x6f0>
    f522:	add	r6, pc
    f524:	ldrd	r2, r3, [fp, #-24]
    f528:	add	r7, pc
    f52a:	ldrd	r8, r9, [fp, #-32]
    f52e:	add	sl, pc
    f530:	strd	r2, r3, [sp, #16]
    f534:	ldrd	r2, r3, [r5]
    f538:	mov	r1, r6
    f53a:	mov	r0, r7
    f53c:	cmp	r3, r9
    f53e:	it	eq
    f540:	cmpeq	r2, r8
    f542:	movw	r2, #545	; 0x221
    f546:	ite	ne
    f548:	movne	r3, #1
    f54a:	moveq	r3, #0
    f54c:	bl	f48c <ulist_next@@Base+0x294>
    f550:	ldrd	r2, r3, [r5, #8]
    f554:	ldrd	r0, r1, [sp, #16]
    f558:	cmp	r3, r1
    f55a:	mov	r1, r6
    f55c:	it	eq
    f55e:	cmpeq	r2, r0
    f560:	movw	r2, #546	; 0x222
    f564:	mov	r0, sl
    f566:	ite	ne
    f568:	movne	r3, #1
    f56a:	moveq	r3, #0
    f56c:	bl	f48c <ulist_next@@Base+0x294>
    f570:	ldrd	r2, r3, [r5, #24]
    f574:	orrs.w	r1, r2, r3
    f578:	beq.n	f65c <ulist_next@@Base+0x464>
    f57a:	cmp	r3, #0
    f57c:	it	eq
    f57e:	cmpeq	r2, #5
    f580:	beq.n	f638 <ulist_next@@Base+0x440>
    f582:	cmp.w	r2, #256	; 0x100
    f586:	sbcs.w	r1, r3, #0
    f58a:	bge.n	f638 <ulist_next@@Base+0x440>
    f58c:	mov	r0, fp
    f58e:	bl	172ea <rb_next@@Base>
    f592:	mov	fp, r0
    f594:	cmp	r0, #0
    f596:	bne.n	f668 <ulist_next@@Base+0x470>
    f598:	ldrd	r2, r3, [sp, #24]
    f59c:	orrs	r3, r2
    f59e:	beq.n	f60e <ulist_next@@Base+0x416>
    f5a0:	ldr	r5, [pc, #840]	; (f8ec <ulist_next@@Base+0x6f4>)
    f5a2:	movs	r3, #0
    f5a4:	str	r3, [sp, #60]	; 0x3c
    f5a6:	add	r5, pc
    f5a8:	add	r1, sp, #60	; 0x3c
    f5aa:	mov	r0, r4
    f5ac:	bl	f1f8 <ulist_next@@Base>
    f5b0:	cbz	r0, f60e <ulist_next@@Base+0x416>
    f5b2:	ldrd	r6, r7, [r0]
    f5b6:	movw	r2, #1465	; 0x5b9
    f5ba:	vmov	r1, s18
    f5be:	mov	r0, r5
    f5c0:	orrs.w	r3, r6, r7
    f5c4:	ite	eq
    f5c6:	moveq	r3, #1
    f5c8:	movne	r3, #0
    f5ca:	bl	f48c <ulist_next@@Base+0x294>
    f5ce:	ldrd	r2, r3, [sp, #24]
    f5d2:	cmp	r3, r7
    f5d4:	it	eq
    f5d6:	cmpeq	r2, r6
    f5d8:	bne.n	f5a8 <ulist_next@@Base+0x3b0>
    f5da:	ldr	r3, [r4, #0]
    f5dc:	add	r5, sp, #64	; 0x40
    f5de:	ldr	r6, [pc, #784]	; (f8f0 <ulist_next@@Base+0x6f8>)
    f5e0:	movs	r0, #1
    f5e2:	ldr	r1, [pc, #784]	; (f8f4 <ulist_next@@Base+0x6fc>)
    f5e4:	str	r3, [sp, #8]
    f5e6:	add	r6, pc
    f5e8:	ldrd	r2, r3, [sp, #16]
    f5ec:	add	r1, pc
    f5ee:	strd	r2, r3, [sp]
    f5f2:	mov	r3, r9
    f5f4:	mov	r2, r8
    f5f6:	blx	8c6c <__printf_chk@plt+0x4>
    f5fa:	movs	r3, #0
    f5fc:	str	r3, [sp, #64]	; 0x40
    f5fe:	mov	r1, r5
    f600:	mov	r0, r4
    f602:	bl	f1f8 <ulist_next@@Base>
    f606:	cbnz	r0, f67c <ulist_next@@Base+0x484>
    f608:	movs	r0, #10
    f60a:	blx	8c08 <putchar@plt+0x4>
    f60e:	ldr	r3, [sp, #52]	; 0x34
    f610:	cmp	r3, #0
    f612:	beq.w	f4ee <ulist_next@@Base+0x2f6>
    f616:	movs	r0, #0
    f618:	bl	eff8 <ulist_alloc@@Base>
    f61c:	mov	r7, r0
    f61e:	movs	r0, #0
    f620:	bl	eff8 <ulist_alloc@@Base>
    f624:	mov	r5, r0
    f626:	cbz	r7, f62a <ulist_next@@Base+0x432>
    f628:	cbnz	r0, f68a <ulist_next@@Base+0x492>
    f62a:	mov	r0, r7
    f62c:	bl	f00c <ulist_free@@Base>
    f630:	mov	r0, r5
    f632:	bl	f00c <ulist_free@@Base>
    f636:	b.n	f64e <ulist_next@@Base+0x456>
    f638:	movs	r1, #0
    f63a:	movs	r0, #0
    f63c:	str	r1, [sp, #8]
    f63e:	movs	r1, #0
    f640:	strd	r0, r1, [sp]
    f644:	mov	r0, r4
    f646:	bl	f120 <ulist_add@@Base>
    f64a:	cmp	r0, #0
    f64c:	bge.n	f58c <ulist_next@@Base+0x394>
    f64e:	ldr	r0, [pc, #680]	; (f8f8 <ulist_next@@Base+0x700>)
    f650:	add	r0, pc
    f652:	bl	1a900 <__btrfs_error@@Base>
    f656:	mvn.w	r0, #11
    f65a:	b.n	f4fc <ulist_next@@Base+0x304>
    f65c:	ldrd	r2, r3, [r5, #16]
    f660:	mov	r0, r4
    f662:	bl	f2d0 <ulist_next@@Base+0xd8>
    f666:	b.n	f64a <ulist_next@@Base+0x452>
    f668:	ldrd	r2, r3, [r0, #-32]
    f66c:	sub.w	r5, r0, #32
    f670:	cmp	r3, r9
    f672:	it	eq
    f674:	cmpeq	r2, r8
    f676:	beq.w	f534 <ulist_next@@Base+0x33c>
    f67a:	b.n	f598 <ulist_next@@Base+0x3a0>
    f67c:	ldrd	r2, r3, [r0]
    f680:	mov	r1, r6
    f682:	movs	r0, #1
    f684:	blx	8c6c <__printf_chk@plt+0x4>
    f688:	b.n	f5fe <ulist_next@@Base+0x406>
    f68a:	movs	r3, #0
    f68c:	str	r3, [sp, #60]	; 0x3c
    f68e:	ldr	r3, [pc, #620]	; (f8fc <ulist_next@@Base+0x704>)
    f690:	add	r3, pc
    f692:	adds	r3, #35	; 0x23
    f694:	vmov	s17, r3
    f698:	ldr.w	sl, [pc, #612]	; f900 <ulist_next@@Base+0x708>
    f69c:	add	sl, pc
    f69e:	add.w	r8, sp, #60	; 0x3c
    f6a2:	mov	r0, r4
    f6a4:	mov	r1, r8
    f6a6:	bl	f1f8 <ulist_next@@Base>
    f6aa:	cbnz	r0, f6fa <ulist_next@@Base+0x502>
    f6ac:	ldr	r3, [r4, #0]
    f6ae:	mov.w	sl, #0
    f6b2:	str	r0, [sp, #60]	; 0x3c
    f6b4:	mov	r9, r3
    f6b6:	ldr	r3, [pc, #588]	; (f904 <ulist_next@@Base+0x70c>)
    f6b8:	add	r3, pc
    f6ba:	str	r3, [sp, #32]
    f6bc:	mov	r1, r8
    f6be:	mov	r0, r7
    f6c0:	bl	f1f8 <ulist_next@@Base>
    f6c4:	cmp	r0, #0
    f6c6:	bne.w	f83c <ulist_next@@Base+0x644>
    f6ca:	ldr	r6, [pc, #572]	; (f908 <ulist_next@@Base+0x710>)
    f6cc:	ldr	r1, [r4, #0]
    f6ce:	add	r6, pc
    f6d0:	adds	r1, #1
    f6d2:	ldrd	r2, r3, [r6]
    f6d6:	adds	r2, r2, r1
    f6d8:	adc.w	r3, r3, r1, asr #31
    f6dc:	strd	r2, r3, [r6]
    f6e0:	mov	r3, r0
    f6e2:	mov	r0, r7
    f6e4:	str	r3, [sp, #16]
    f6e6:	bl	f00c <ulist_free@@Base>
    f6ea:	mov	r0, r5
    f6ec:	bl	f00c <ulist_free@@Base>
    f6f0:	ldr	r3, [sp, #16]
    f6f2:	cmp	r3, #0
    f6f4:	beq.w	f4ee <ulist_next@@Base+0x2f6>
    f6f8:	b.n	f64e <ulist_next@@Base+0x456>
    f6fa:	ldrd	r8, r9, [r0]
    f6fe:	mov.w	r2, #422	; 0x1a6
    f702:	vmov	r1, s17
    f706:	mov	r0, sl
    f708:	orrs.w	r3, r8, r9
    f70c:	ite	eq
    f70e:	moveq	r3, #1
    f710:	movne	r3, #0
    f712:	bl	f48c <ulist_next@@Base+0x294>
    f716:	mov	r0, r8
    f718:	mov	r1, r9
    f71a:	bl	f234 <ulist_next@@Base+0x3c>
    f71e:	mov	r6, r0
    f720:	cmp	r0, #0
    f722:	beq.n	f69e <ulist_next@@Base+0x4a6>
    f724:	cmp.w	r9, #0
    f728:	it	eq
    f72a:	cmpeq.w	r8, #5
    f72e:	beq.w	f838 <ulist_next@@Base+0x640>
    f732:	cmp.w	r8, #256	; 0x100
    f736:	sbcs.w	r3, r9, #0
    f73a:	ite	ge
    f73c:	movge	r3, #1
    f73e:	movlt	r3, #0
    f740:	ldr	r1, [pc, #456]	; (f90c <ulist_next@@Base+0x714>)
    f742:	eor.w	r3, r3, #1
    f746:	ldr	r0, [pc, #456]	; (f910 <ulist_next@@Base+0x718>)
    f748:	mov.w	r2, #432	; 0x1b0
    f74c:	add	r1, pc
    f74e:	mov.w	r8, #0
    f752:	adds	r1, #35	; 0x23
    f754:	add	r0, pc
    f756:	bl	f48c <ulist_next@@Base+0x294>
    f75a:	str.w	r8, [sp, #8]
    f75e:	strd	r6, r8, [sp]
    f762:	mov	r0, r7
    f764:	ldrd	r2, r3, [r6]
    f768:	bl	f120 <ulist_add@@Base>
    f76c:	subs	r3, r0, #0
    f76e:	blt.n	f6e2 <ulist_next@@Base+0x4ea>
    f770:	mov	r0, r5
    f772:	bl	efe6 <ulist_reinit@@Base>
    f776:	str.w	r8, [sp, #8]
    f77a:	strd	r6, r8, [sp]
    f77e:	mov	r0, r5
    f780:	ldrd	r2, r3, [r6]
    f784:	bl	f120 <ulist_add@@Base>
    f788:	subs	r3, r0, #0
    f78a:	blt.n	f6e2 <ulist_next@@Base+0x4ea>
    f78c:	ldr	r3, [pc, #388]	; (f914 <ulist_next@@Base+0x71c>)
    f78e:	str.w	r8, [sp, #64]	; 0x40
    f792:	add	r3, pc
    f794:	adds	r3, #35	; 0x23
    f796:	vmov	s16, r3
    f79a:	add	r1, sp, #64	; 0x40
    f79c:	mov	r0, r5
    f79e:	bl	f1f8 <ulist_next@@Base>
    f7a2:	cmp	r0, #0
    f7a4:	beq.w	f698 <ulist_next@@Base+0x4a0>
    f7a8:	ldr	r3, [pc, #364]	; (f918 <ulist_next@@Base+0x720>)
    f7aa:	ldr	r6, [r0, #8]
    f7ac:	add	r3, pc
    f7ae:	ldr.w	sl, [pc, #364]	; f91c <ulist_next@@Base+0x724>
    f7b2:	ldrd	r0, r1, [r3]
    f7b6:	add	sl, pc
    f7b8:	ldrd	r2, r3, [r6, #128]	; 0x80
    f7bc:	ldr.w	r8, [r6, #108]	; 0x6c
    f7c0:	cmp	r3, r1
    f7c2:	it	eq
    f7c4:	cmpeq	r2, r0
    f7c6:	it	cc
    f7c8:	strdcc	r0, r1, [r6, #128]	; 0x80
    f7cc:	ldrd	r3, r2, [r6, #128]	; 0x80
    f7d0:	adds	r3, #1
    f7d2:	adc.w	r2, r2, #0
    f7d6:	strd	r3, r2, [r6, #128]	; 0x80
    f7da:	add.w	r3, r6, #108	; 0x6c
    f7de:	cmp	r8, r3
    f7e0:	beq.n	f79a <ulist_next@@Base+0x5a2>
    f7e2:	ldr.w	r9, [r8, #16]
    f7e6:	mov	r0, sl
    f7e8:	vmov	r1, s16
    f7ec:	ldrd	r2, r3, [r9]
    f7f0:	strd	r2, r3, [sp, #32]
    f7f4:	clz	r3, r6
    f7f8:	mov.w	r2, #458	; 0x1ca
    f7fc:	lsrs	r3, r3, #5
    f7fe:	bl	f48c <ulist_next@@Base+0x294>
    f802:	movs	r1, #0
    f804:	ldrd	r2, r3, [sp, #32]
    f808:	mov	r0, r7
    f80a:	str	r1, [sp, #8]
    f80c:	strd	r9, r1, [sp]
    f810:	bl	f120 <ulist_add@@Base>
    f814:	subs	r3, r0, #0
    f816:	blt.w	f6e2 <ulist_next@@Base+0x4ea>
    f81a:	movs	r1, #0
    f81c:	ldrd	r2, r3, [sp, #32]
    f820:	mov	r0, r5
    f822:	str	r1, [sp, #8]
    f824:	strd	r9, r1, [sp]
    f828:	bl	f120 <ulist_add@@Base>
    f82c:	subs	r3, r0, #0
    f82e:	blt.w	f6e2 <ulist_next@@Base+0x4ea>
    f832:	ldr.w	r8, [r8]
    f836:	b.n	f7da <ulist_next@@Base+0x5e2>
    f838:	ldr	r3, [sp, #52]	; 0x34
    f83a:	b.n	f740 <ulist_next@@Base+0x548>
    f83c:	ldr.w	ip, [r0, #8]
    f840:	ldr	r3, [sp, #32]
    f842:	ldrd	r0, r1, [ip, #128]	; 0x80
    f846:	ldrd	r2, r3, [r3]
    f84a:	cmp	r1, r3
    f84c:	it	eq
    f84e:	cmpeq	r0, r2
    f850:	bcc.w	f6bc <ulist_next@@Base+0x4c4>
    f854:	subs	r6, r0, r2
    f856:	str	r6, [sp, #40]	; 0x28
    f858:	sbc.w	r6, r1, r3
    f85c:	cmp	r1, r3
    f85e:	it	eq
    f860:	cmpeq	r0, r2
    f862:	str	r6, [sp, #44]	; 0x2c
    f864:	beq.w	f6bc <ulist_next@@Base+0x4c4>
    f868:	ldrd	r3, r2, [ip, #64]	; 0x40
    f86c:	ldr	r1, [sp, #16]
    f86e:	adds	r3, r3, r1
    f870:	ldr	r1, [sp, #20]
    f872:	adc.w	r2, r1, r2
    f876:	ldr	r1, [sp, #16]
    f878:	strd	r3, r2, [ip, #64]	; 0x40
    f87c:	ldrd	r3, r2, [ip, #72]	; 0x48
    f880:	adds	r3, r3, r1
    f882:	ldr	r1, [sp, #20]
    f884:	adc.w	r2, r1, r2
    f888:	strd	r3, r2, [ip, #72]	; 0x48
    f88c:	ldrd	r2, r3, [sp, #40]	; 0x28
    f890:	cmp	sl, r3
    f892:	it	eq
    f894:	cmpeq	r9, r2
    f896:	bne.w	f6bc <ulist_next@@Base+0x4c4>
    f89a:	ldrd	r3, r2, [ip, #80]	; 0x50
    f89e:	ldr	r1, [sp, #16]
    f8a0:	adds	r3, r3, r1
    f8a2:	ldr	r1, [sp, #20]
    f8a4:	adc.w	r2, r1, r2
    f8a8:	ldr	r1, [sp, #16]
    f8aa:	strd	r3, r2, [ip, #80]	; 0x50
    f8ae:	ldrd	r3, r2, [ip, #88]	; 0x58
    f8b2:	adds	r3, r3, r1
    f8b4:	ldr	r1, [sp, #20]
    f8b6:	adc.w	r2, r1, r2
    f8ba:	strd	r3, r2, [ip, #88]	; 0x58
    f8be:	b.n	f6bc <ulist_next@@Base+0x4c4>
    f8c0:	add	sp, #76	; 0x4c
    f8c2:	vpop	{d8-d9}
    f8c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f8ca:	nop
    f8cc:	ldr	r0, [sp, #440]	; 0x1b8
    f8ce:	movs	r5, r0
    f8d0:	lsls	r4, r7, #9
    f8d2:	movs	r0, r0
    f8d4:	cbz	r2, f8f2 <ulist_next@@Base+0x6fa>
    f8d6:	movs	r5, r0
    f8d8:	str??.w	r0, [r9, r2]
    f8dc:	ldr	r0, [sp, #192]	; 0xc0
    f8de:	movs	r5, r0
    f8e0:	strh.w	r0, [fp, r2]
    f8e4:	bic.w	r0, ip, #8519680	; 0x820000
    f8e8:	bics.w	r0, ip, #8519680	; 0x820000
    f8ec:			; <UNDEFINED> instruction: 0xf3e00002
    f8f0:	ubfx	r0, r1, #0, #3
    f8f4:	usat16	r0, #2, sp
    f8f8:			; <UNDEFINED> instruction: 0xf37b0002
    f8fc:			; <UNDEFINED> instruction: 0xf6bd0002
    f900:			; <UNDEFINED> instruction: 0xf2ea0002
    f904:	ldr	r2, [sp, #16]
    f906:	movs	r5, r0
    f908:	ldr	r1, [sp, #952]	; 0x3b8
    f90a:	movs	r5, r0
    f90c:	addw	r0, r1, #2050	; 0x802
    f910:			; <UNDEFINED> instruction: 0xf2590002
    f914:	subs.w	r0, fp, #8519680	; 0x820000
    f918:	ldr	r1, [sp, #64]	; 0x40
    f91a:	movs	r5, r0
    f91c:	addw	r0, lr, #2
    f920:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f924:	mov	r5, r3
    f926:	ldr	r3, [pc, #292]	; (fa4c <ulist_next@@Base+0x854>)
    f928:	mov	r6, r0
    f92a:	ldrd	r8, r9, [sp, #40]	; 0x28
    f92e:	mov	r7, r1
    f930:	add	r3, pc
    f932:	mov	r4, r2
    f934:	ldr.w	sl, [r3, #24]
    f938:	cmp.w	sl, #0
    f93c:	beq.n	f97e <ulist_next@@Base+0x786>
    f93e:	ldrd	r2, r3, [sl, #-32]
    f942:	cmp	r7, r3
    f944:	it	eq
    f946:	cmpeq	r6, r2
    f948:	bcc.n	f9ee <ulist_next@@Base+0x7f6>
    f94a:	cmp	r3, r7
    f94c:	it	eq
    f94e:	cmpeq	r2, r6
    f950:	bcc.n	fa44 <ulist_next@@Base+0x84c>
    f952:	ldrd	r2, r3, [sl, #-16]
    f956:	cmp	r9, r3
    f958:	it	eq
    f95a:	cmpeq	r8, r2
    f95c:	bcc.n	f9ee <ulist_next@@Base+0x7f6>
    f95e:	cmp	r3, r9
    f960:	it	eq
    f962:	cmpeq	r2, r8
    f964:	bcc.n	fa44 <ulist_next@@Base+0x84c>
    f966:	ldrd	r2, r3, [sl, #-8]
    f96a:	cmp	r5, r3
    f96c:	it	eq
    f96e:	cmpeq	r4, r2
    f970:	bcc.n	f9ee <ulist_next@@Base+0x7f6>
    f972:	cmp	r3, r5
    f974:	it	eq
    f976:	cmpeq	r2, r4
    f978:	bcc.n	fa44 <ulist_next@@Base+0x84c>
    f97a:	sub.w	sl, sl, #32
    f97e:	orrs.w	r3, r8, r9
    f982:	beq.n	f9f4 <ulist_next@@Base+0x7fc>
    f984:	orrs.w	r3, r4, r5
    f988:	ite	ne
    f98a:	movne	r3, #1
    f98c:	moveq	r3, #0
    f98e:	ldr	r1, [pc, #192]	; (fa50 <ulist_next@@Base+0x858>)
    f990:	mov.w	r2, #302	; 0x12e
    f994:	ldr	r0, [pc, #188]	; (fa54 <ulist_next@@Base+0x85c>)
    f996:	add	r1, pc
    f998:	adds	r1, #54	; 0x36
    f99a:	add	r0, pc
    f99c:	bl	f48c <ulist_next@@Base+0x294>
    f9a0:	cmp.w	sl, #0
    f9a4:	bne.n	fa40 <ulist_next@@Base+0x848>
    f9a6:	movs	r1, #48	; 0x30
    f9a8:	movs	r0, #1
    f9aa:	blx	8718 <calloc@plt+0x4>
    f9ae:	mov	fp, r0
    f9b0:	cbz	r0, f9e8 <ulist_next@@Base+0x7f0>
    f9b2:	ldrd	r2, r3, [sp, #48]	; 0x30
    f9b6:	strd	r6, r7, [r0]
    f9ba:	strd	r4, r5, [r0, #24]
    f9be:	strd	r2, r3, [r0, #8]
    f9c2:	ldr	r3, [pc, #148]	; (fa58 <ulist_next@@Base+0x860>)
    f9c4:	strd	r8, r9, [r0, #16]
    f9c8:	add	r3, pc
    f9ca:	adds	r3, #24
    f9cc:	ldr	r1, [r3, #0]
    f9ce:	cbnz	r1, f9f8 <ulist_next@@Base+0x800>
    f9d0:	strd	sl, r1, [fp, #32]
    f9d4:	add.w	r0, fp, #32
    f9d8:	str.w	r1, [fp, #40]	; 0x28
    f9dc:	ldr	r1, [pc, #124]	; (fa5c <ulist_next@@Base+0x864>)
    f9de:	str	r0, [r3, #0]
    f9e0:	add	r1, pc
    f9e2:	adds	r1, #24
    f9e4:	bl	16fae <rb_insert_color@@Base>
    f9e8:	mov	r0, fp
    f9ea:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f9ee:	ldr.w	sl, [sl, #8]
    f9f2:	b.n	f938 <ulist_next@@Base+0x740>
    f9f4:	movs	r3, #0
    f9f6:	b.n	f98e <ulist_next@@Base+0x796>
    f9f8:	ldrd	r2, r3, [r1, #-32]
    f9fc:	cmp	r7, r3
    f9fe:	it	eq
    fa00:	cmpeq	r6, r2
    fa02:	bcc.n	fa38 <ulist_next@@Base+0x840>
    fa04:	cmp	r3, r7
    fa06:	it	eq
    fa08:	cmpeq	r2, r6
    fa0a:	bcc.n	fa34 <ulist_next@@Base+0x83c>
    fa0c:	ldrd	r2, r3, [r1, #-16]
    fa10:	cmp	r9, r3
    fa12:	it	eq
    fa14:	cmpeq	r8, r2
    fa16:	bcc.n	fa38 <ulist_next@@Base+0x840>
    fa18:	cmp	r3, r9
    fa1a:	it	eq
    fa1c:	cmpeq	r2, r8
    fa1e:	bcc.n	fa34 <ulist_next@@Base+0x83c>
    fa20:	ldrd	r2, r3, [r1, #-8]
    fa24:	cmp	r5, r3
    fa26:	it	eq
    fa28:	cmpeq	r4, r2
    fa2a:	bcc.n	fa38 <ulist_next@@Base+0x840>
    fa2c:	cmp	r3, r5
    fa2e:	it	eq
    fa30:	cmpeq	r2, r4
    fa32:	bcs.n	f9e8 <ulist_next@@Base+0x7f0>
    fa34:	adds	r3, r1, #4
    fa36:	b.n	fa3c <ulist_next@@Base+0x844>
    fa38:	add.w	r3, r1, #8
    fa3c:	mov	sl, r1
    fa3e:	b.n	f9cc <ulist_next@@Base+0x7d4>
    fa40:	mov	fp, sl
    fa42:	b.n	f9e8 <ulist_next@@Base+0x7f0>
    fa44:	ldr.w	sl, [sl, #4]
    fa48:	b.n	f938 <ulist_next@@Base+0x740>
    fa4a:	nop
    fa4c:	add	r5, sp, #80	; 0x50
    fa4e:	movs	r5, r0
    fa50:			; <UNDEFINED> instruction: 0xf3b70002
    fa54:	orn	r0, r1, #2
    fa58:	add	r4, sp, #496	; 0x1f0
    fa5a:	movs	r5, r0
    fa5c:	add	r4, sp, #400	; 0x190
    fa5e:	movs	r5, r0
    fa60:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fa64:	movs	r6, #0
    fa66:	vpush	{d8}
    fa6a:	mov	r4, r6
    fa6c:	ldr	r3, [pc, #864]	; (fdd0 <ulist_next@@Base+0xbd8>)
    fa6e:	ldr	r2, [pc, #868]	; (fdd4 <ulist_next@@Base+0xbdc>)
    fa70:	add	r3, pc
    fa72:	sub	sp, #180	; 0xb4
    fa74:	add	r2, pc
    fa76:	str	r3, [sp, #32]
    fa78:	ldr	r3, [pc, #860]	; (fdd8 <ulist_next@@Base+0xbe0>)
    fa7a:	str	r0, [sp, #56]	; 0x38
    fa7c:	ldr	r3, [r2, r3]
    fa7e:	ldr	r3, [r3, #0]
    fa80:	str	r3, [sp, #172]	; 0xac
    fa82:	mov.w	r3, #0
    fa86:	ldr	r3, [r0, #24]
    fa88:	str	r3, [sp, #36]	; 0x24
    fa8a:	add	r3, sp, #104	; 0x68
    fa8c:	str	r3, [sp, #16]
    fa8e:	mov	r0, r3
    fa90:	bl	1b2cc <btrfs_init_path@@Base>
    fa94:	ldr	r3, [sp, #16]
    fa96:	ldr	r1, [sp, #36]	; 0x24
    fa98:	add	r2, sp, #64	; 0x40
    fa9a:	mov	r0, r6
    fa9c:	strd	r6, r6, [sp]
    faa0:	strd	r6, r6, [sp, #64]	; 0x40
    faa4:	strb.w	r6, [sp, #72]	; 0x48
    faa8:	strb.w	r6, [sp, #73]	; 0x49
    faac:	strb.w	r6, [sp, #74]	; 0x4a
    fab0:	strb.w	r6, [sp, #75]	; 0x4b
    fab4:	strb.w	r6, [sp, #76]	; 0x4c
    fab8:	strb.w	r6, [sp, #77]	; 0x4d
    fabc:	strb.w	r6, [sp, #78]	; 0x4e
    fac0:	strb.w	r6, [sp, #79]	; 0x4f
    fac4:	strb.w	r6, [sp, #80]	; 0x50
    fac8:	bl	1d6c0 <btrfs_search_slot@@Base>
    facc:	subs	r7, r0, #0
    face:	bge.n	fae6 <ulist_next@@Base+0x8ee>
    fad0:	ldr	r3, [pc, #776]	; (fddc <ulist_next@@Base+0xbe4>)
    fad2:	ldr	r2, [sp, #32]
    fad4:	ldr	r0, [r2, r3]
    fad6:	mov	r3, r7
    fad8:	ldr	r2, [pc, #772]	; (fde0 <ulist_next@@Base+0xbe8>)
    fada:	add	r2, pc
    fadc:	movs	r1, #1
    fade:	ldr	r0, [r0, #0]
    fae0:	blx	8ca0 <__fprintf_chk@plt+0x4>
    fae4:	b.n	fc9c <ulist_next@@Base+0xaa4>
    fae6:	movs	r3, #1
    fae8:	strb.w	r3, [sp, #168]	; 0xa8
    faec:	ldr	r3, [pc, #756]	; (fde4 <ulist_next@@Base+0xbec>)
    faee:	mov	sl, r6
    faf0:	mov	fp, r6
    faf2:	str	r6, [sp, #24]
    faf4:	add	r3, pc
    faf6:	adds	r3, #93	; 0x5d
    faf8:	vmov	s16, r3
    fafc:	ldr	r7, [sp, #104]	; 0x68
    fafe:	mov.w	r8, #197	; 0xc5
    fb02:	ldr.w	r3, [r7, #192]	; 0xc0
    fb06:	str	r3, [sp, #60]	; 0x3c
    fb08:	movs	r3, #0
    fb0a:	str	r3, [sp, #28]
    fb0c:	ldr	r3, [pc, #728]	; (fde8 <ulist_next@@Base+0xbf0>)
    fb0e:	add	r3, pc
    fb10:	vmov	s17, r3
    fb14:	ldr	r3, [sp, #60]	; 0x3c
    fb16:	ldr	r2, [sp, #28]
    fb18:	cmp	r3, r2
    fb1a:	bgt.n	fb44 <ulist_next@@Base+0x94c>
    fb1c:	ldr	r3, [sp, #36]	; 0x24
    fb1e:	add	r1, sp, #104	; 0x68
    fb20:	movs	r5, #0
    fb22:	strb.w	r5, [sp, #169]	; 0xa9
    fb26:	ldr.w	r0, [r3, #464]	; 0x1d0
    fb2a:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
    fb2e:	subs	r7, r0, #0
    fb30:	beq.n	fafc <ulist_next@@Base+0x904>
    fb32:	bge.w	fdbe <ulist_next@@Base+0xbc6>
    fb36:	ldr	r3, [pc, #676]	; (fddc <ulist_next@@Base+0xbe4>)
    fb38:	ldr	r2, [sp, #32]
    fb3a:	ldr	r0, [r2, r3]
    fb3c:	mov	r3, r7
    fb3e:	ldr	r2, [pc, #684]	; (fdec <ulist_next@@Base+0xbf4>)
    fb40:	add	r2, pc
    fb42:	b.n	fadc <ulist_next@@Base+0x8e4>
    fb44:	sub.w	r2, r8, #96	; 0x60
    fb48:	movs	r3, #17
    fb4a:	add	r1, sp, #84	; 0x54
    fb4c:	mov	r0, r7
    fb4e:	bl	1a79e <read_extent_buffer@@Base>
    fb52:	ldr	r3, [sp, #84]	; 0x54
    fb54:	ldrb.w	r5, [sp, #92]	; 0x5c
    fb58:	ldr.w	r6, [sp, #93]	; 0x5d
    fb5c:	str	r3, [sp, #16]
    fb5e:	ldr	r3, [sp, #88]	; 0x58
    fb60:	ldr.w	r9, [sp, #97]	; 0x61
    fb64:	str.w	r6, [sp, #73]	; 0x49
    fb68:	str	r3, [sp, #20]
    fb6a:	ldrd	r2, r3, [sp, #16]
    fb6e:	str.w	r9, [sp, #77]	; 0x4d
    fb72:	strb.w	r5, [sp, #72]	; 0x48
    fb76:	strd	r2, r3, [sp, #64]	; 0x40
    fb7a:	add.w	r3, r5, #88	; 0x58
    fb7e:	uxtb	r3, r3
    fb80:	cmp	r3, #1
    fb82:	bhi.w	fd10 <ulist_next@@Base+0xb18>
    fb86:	ldr	r2, [pc, #616]	; (fdf0 <ulist_next@@Base+0xbf8>)
    fb88:	cmp	r5, #169	; 0xa9
    fb8a:	add.w	sl, r7, r8
    fb8e:	it	ne
    fb90:	strne.w	r9, [sp, #24]
    fb94:	add	r2, pc
    fb96:	it	ne
    fb98:	movne	r4, r6
    fb9a:	ldr.w	r5, [sl, #17]
    fb9e:	add.w	r6, r7, #96	; 0x60
    fba2:	ldr	r3, [r2, #32]
    fba4:	ldr.w	fp, [sl, #21]
    fba8:	add.w	r3, r3, #1
    fbac:	str	r3, [r2, #32]
    fbae:	ittet	eq
    fbb0:	ldreq	r3, [sp, #56]	; 0x38
    fbb2:	moveq	r2, #1
    fbb4:	movne	r2, #0
    fbb6:	ldreq.w	r4, [r3, #384]	; 0x180
    fbba:	itt	eq
    fbbc:	moveq	r3, #0
    fbbe:	streq	r3, [sp, #24]
    fbc0:	add.w	r3, r5, #101	; 0x65
    fbc4:	adds	r1, r6, r3
    fbc6:	ldr	r1, [r1, #16]
    fbc8:	and.w	r1, r1, #2
    fbcc:	str	r1, [sp, #40]	; 0x28
    fbce:	movs	r1, #0
    fbd0:	str	r1, [sp, #44]	; 0x2c
    fbd2:	ldrd	r0, r1, [sp, #40]	; 0x28
    fbd6:	orrs	r1, r0
    fbd8:	beq.n	fc50 <ulist_next@@Base+0xa58>
    fbda:	cmp	r2, #0
    fbdc:	bne.n	fc50 <ulist_next@@Base+0xa58>
    fbde:	adds	r5, #143	; 0x8f
    fbe0:	add	fp, r3
    fbe2:	cmp	fp, r5
    fbe4:	bhi.n	fc56 <ulist_next@@Base+0xa5e>
    fbe6:	ldr.w	r3, [sl, #17]
    fbea:	ldrb.w	r2, [sp, #72]	; 0x48
    fbee:	adds	r3, #101	; 0x65
    fbf0:	add	r6, r3
    fbf2:	ldr	r3, [r6, #16]
    fbf4:	and.w	r3, r3, #2
    fbf8:	str	r3, [sp, #48]	; 0x30
    fbfa:	movs	r3, #0
    fbfc:	str	r3, [sp, #52]	; 0x34
    fbfe:	ldrd	r0, r1, [sp, #48]	; 0x30
    fc02:	orrs.w	r3, r0, r1
    fc06:	beq.n	fd06 <ulist_next@@Base+0xb0e>
    fc08:	cmp	r2, #169	; 0xa9
    fc0a:	beq.n	fd0a <ulist_next@@Base+0xb12>
    fc0c:	ldrb.w	r6, [r6, #41]	; 0x29
    fc10:	cmp	r6, #0
    fc12:	beq.w	fd96 <ulist_next@@Base+0xb9e>
    fc16:	movs	r1, #16
    fc18:	movs	r0, #1
    fc1a:	blx	8718 <calloc@plt+0x4>
    fc1e:	mov	r5, r0
    fc20:	cbz	r0, fc4c <ulist_next@@Base+0xa54>
    fc22:	ldr	r1, [pc, #464]	; (fdf4 <ulist_next@@Base+0xbfc>)
    fc24:	ldr	r3, [sp, #24]
    fc26:	add	r1, pc
    fc28:	str	r4, [r0, #8]
    fc2a:	str	r6, [r0, #0]
    fc2c:	str	r3, [r0, #12]
    fc2e:	movs	r3, #0
    fc30:	str	r3, [sp, #8]
    fc32:	strd	r0, r3, [sp]
    fc36:	ldrd	r2, r3, [sp, #16]
    fc3a:	ldr	r0, [r1, #28]
    fc3c:	bl	f120 <ulist_add@@Base>
    fc40:	cmp	r0, #0
    fc42:	bge.w	fd96 <ulist_next@@Base+0xb9e>
    fc46:	mov	r0, r5
    fc48:	blx	87cc <free@plt+0x4>
    fc4c:	movs	r7, #12
    fc4e:	b.n	fca2 <ulist_next@@Base+0xaaa>
    fc50:	add.w	r5, r3, #24
    fc54:	b.n	fbe0 <ulist_next@@Base+0x9e8>
    fc56:	adds	r1, r6, r5
    fc58:	ldrb.w	r9, [r6, r5]
    fc5c:	mov	r3, r1
    fc5e:	sub.w	r0, r9, #176	; 0xb0
    fc62:	ldr.w	r2, [r3, #1]!
    fc66:	ldr	r3, [r3, #4]
    fc68:	cmp	r0, #8
    fc6a:	bhi.n	fc9a <ulist_next@@Base+0xaa2>
    fc6c:	tbb	[pc, r0]
    fc70:	asrs	r0, r5, #20
    fc72:	asrs	r4, r4, #20
    fc74:	asrs	r5, r2, #20
    fc76:	asrs	r5, r0, #20
    fc78:	movs	r5, r0
    fc7a:	mov	r1, r2
    fc7c:	movs	r2, #0
    fc7e:	mov	ip, r3
    fc80:	mov	r3, r2
    fc82:	ldr	r0, [sp, #24]
    fc84:	strd	r1, ip, [sp]
    fc88:	str	r4, [sp, #8]
    fc8a:	str	r0, [sp, #12]
    fc8c:	ldrd	r0, r1, [sp, #16]
    fc90:	bl	f920 <ulist_next@@Base+0x728>
    fc94:	cbnz	r0, fcc6 <ulist_next@@Base+0xace>
    fc96:	movs	r7, #12
    fc98:	b.n	fc9c <ulist_next@@Base+0xaa4>
    fc9a:	movs	r7, #1
    fc9c:	add	r0, sp, #104	; 0x68
    fc9e:	bl	1b2dc <btrfs_release_path@@Base>
    fca2:	ldr	r2, [pc, #340]	; (fdf8 <ulist_next@@Base+0xc00>)
    fca4:	ldr	r3, [pc, #304]	; (fdd8 <ulist_next@@Base+0xbe0>)
    fca6:	add	r2, pc
    fca8:	ldr	r3, [r2, r3]
    fcaa:	ldr	r2, [r3, #0]
    fcac:	ldr	r3, [sp, #172]	; 0xac
    fcae:	eors	r2, r3
    fcb0:	beq.w	fdc2 <ulist_next@@Base+0xbca>
    fcb4:	blx	88e4 <__stack_chk_fail@plt>
    fcb8:	mov	r3, r1
    fcba:	ldr.w	r2, [r3, #1]!
    fcbe:	ldr	r3, [r3, #4]
    fcc0:	movs	r1, #0
    fcc2:	mov	ip, r1
    fcc4:	b.n	fc82 <ulist_next@@Base+0xa8a>
    fcc6:	cmp.w	r9, #176	; 0xb0
    fcca:	beq.n	fcf8 <ulist_next@@Base+0xb00>
    fccc:	cmp.w	r9, #182	; 0xb6
    fcd0:	beq.n	fcf8 <ulist_next@@Base+0xb00>
    fcd2:	cmp.w	r9, #184	; 0xb8
    fcd6:	beq.n	fcfe <ulist_next@@Base+0xb06>
    fcd8:	cmp.w	r9, #178	; 0xb2
    fcdc:	beq.n	fd02 <ulist_next@@Base+0xb0a>
    fcde:	ldr	r2, [pc, #284]	; (fdfc <ulist_next@@Base+0xc04>)
    fce0:	movs	r3, #1
    fce2:	ldr	r1, [pc, #284]	; (fe00 <ulist_next@@Base+0xc08>)
    fce4:	ldr	r0, [pc, #284]	; (fe04 <ulist_next@@Base+0xc0c>)
    fce6:	add	r2, pc
    fce8:	str	r3, [sp, #0]
    fcea:	adds	r2, #64	; 0x40
    fcec:	add	r1, pc
    fcee:	add	r0, pc
    fcf0:	movw	r3, #1818	; 0x71a
    fcf4:	bl	f428 <ulist_next@@Base+0x230>
    fcf8:	movs	r3, #9
    fcfa:	add	r5, r3
    fcfc:	b.n	fbe2 <ulist_next@@Base+0x9ea>
    fcfe:	movs	r3, #13
    fd00:	b.n	fcfa <ulist_next@@Base+0xb02>
    fd02:	movs	r3, #29
    fd04:	b.n	fcfa <ulist_next@@Base+0xb02>
    fd06:	cmp	r2, #169	; 0xa9
    fd08:	bne.n	fd96 <ulist_next@@Base+0xb9e>
    fd0a:	ldr.w	r6, [sp, #73]	; 0x49
    fd0e:	b.n	fc10 <ulist_next@@Base+0xa18>
    fd10:	add.w	r3, r5, #80	; 0x50
    fd14:	uxtb	r3, r3
    fd16:	cmp	r3, #8
    fd18:	bhi.n	fd92 <ulist_next@@Base+0xb9a>
    fd1a:	ldrd	r2, r3, [sp, #16]
    fd1e:	subs	r5, #176	; 0xb0
    fd20:	vmov	r1, s16
    fd24:	cmp	fp, r3
    fd26:	vmov	r0, s17
    fd2a:	it	eq
    fd2c:	cmpeq	sl, r2
    fd2e:	movw	r2, #1229	; 0x4cd
    fd32:	ite	ne
    fd34:	movne	r3, #1
    fd36:	moveq	r3, #0
    fd38:	bl	f48c <ulist_next@@Base+0x294>
    fd3c:	cmp	r5, #8
    fd3e:	bhi.n	fc9a <ulist_next@@Base+0xaa2>
    fd40:	add	r3, pc, #8	; (adr r3, fd4c <ulist_next@@Base+0xb54>)
    fd42:	ldr.w	r2, [r3, r5, lsl #2]
    fd46:	add	r3, r2
    fd48:	bx	r3
    fd4a:	nop
    fd4c:	lsls	r5, r5, #1
    fd4e:	movs	r0, r0
    fd50:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    fd54:	lsls	r3, r3, #1
    fd56:	movs	r0, r0
    fd58:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    fd5c:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    fd60:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    fd64:	movs	r5, r4
    fd66:	movs	r0, r0
    fd68:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    fd6c:	movs	r5, r4
    fd6e:	movs	r0, r0
    fd70:	mov	r3, r6
    fd72:	movs	r6, #0
    fd74:	mov	r2, r9
    fd76:	mov	r9, r6
    fd78:	ldr	r1, [sp, #24]
    fd7a:	mov	r0, sl
    fd7c:	strd	r3, r2, [sp]
    fd80:	mov	r2, r6
    fd82:	mov	r3, r9
    fd84:	str	r4, [sp, #8]
    fd86:	str	r1, [sp, #12]
    fd88:	mov	r1, fp
    fd8a:	bl	f920 <ulist_next@@Base+0x728>
    fd8e:	cmp	r0, #0
    fd90:	beq.n	fc96 <ulist_next@@Base+0xa9e>
    fd92:	strd	sl, fp, [sp, #16]
    fd96:	ldr	r3, [sp, #28]
    fd98:	add.w	r8, r8, #25
    fd9c:	ldrd	sl, fp, [sp, #16]
    fda0:	adds	r3, #1
    fda2:	str	r3, [sp, #28]
    fda4:	b.n	fb14 <ulist_next@@Base+0x91c>
    fda6:	add.w	r3, r7, r8
    fdaa:	ldr.w	r3, [r3, #17]
    fdae:	add	r3, r7
    fdb0:	ldr.w	r6, [r3, #197]!
    fdb4:	ldr.w	r9, [r3, #4]
    fdb8:	movs	r3, #0
    fdba:	mov	r2, r3
    fdbc:	b.n	fd78 <ulist_next@@Base+0xb80>
    fdbe:	mov	r7, r5
    fdc0:	b.n	fc9c <ulist_next@@Base+0xaa4>
    fdc2:	mov	r0, r7
    fdc4:	add	sp, #180	; 0xb4
    fdc6:	vpop	{d8}
    fdca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fdce:	nop
    fdd0:	str	r2, [sp, #768]	; 0x300
    fdd2:	movs	r5, r0
    fdd4:	str	r2, [sp, #752]	; 0x2f0
    fdd6:	movs	r5, r0
    fdd8:	lsls	r4, r7, #9
    fdda:	movs	r0, r0
    fddc:	lsls	r4, r1, #10
    fdde:	movs	r0, r0
    fde0:	vhadd.s<illegal width 64>	d0, d0, d2
    fde4:			; <UNDEFINED> instruction: 0xf2590002
    fde8:	vhadd.s16	d0, d13, d2
    fdec:	vhadd.s8	d0, d2, d2
    fdf0:	add	r2, sp, #704	; 0x2c0
    fdf2:	movs	r5, r0
    fdf4:	add	r2, sp, #120	; 0x78
    fdf6:	movs	r5, r0
    fdf8:	str	r0, [sp, #552]	; 0x228
    fdfa:	movs	r5, r0
    fdfc:	orn	r0, r7, #2
    fe00:	bcc.n	fe34 <ulist_next@@Base+0xc3c>
    fe02:	movs	r2, r0
    fe04:	movs	r2, #71	; 0x47
    fe06:	movs	r3, r0
    fe08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fe0c:	mov	r7, r1
    fe0e:	ldr	r4, [pc, #352]	; (ff70 <ulist_next@@Base+0xd78>)
    fe10:	sub	sp, #44	; 0x2c
    fe12:	ldr	r1, [pc, #352]	; (ff74 <ulist_next@@Base+0xd7c>)
    fe14:	mov.w	sl, #0
    fe18:	add	r4, pc
    fe1a:	mov.w	fp, #0
    fe1e:	mov	r6, r0
    fe20:	mov	r8, r2
    fe22:	ldr	r1, [r4, r1]
    fe24:	mov	r9, r3
    fe26:	ldr	r1, [r1, #0]
    fe28:	str	r1, [sp, #36]	; 0x24
    fe2a:	mov.w	r1, #0
    fe2e:	strd	sl, fp, [sp]
    fe32:	bl	20b0c <read_tree_block@@Base>
    fe36:	mov	r4, r0
    fe38:	cmp	r0, #0
    fe3a:	beq.w	ff62 <ulist_next@@Base+0xd6a>
    fe3e:	cmn.w	r0, #4096	; 0x1000
    fe42:	bhi.w	ff62 <ulist_next@@Base+0xd6a>
    fe46:	ldr	r3, [r0, #84]	; 0x54
    fe48:	lsls	r3, r3, #29
    fe4a:	bpl.w	ff62 <ulist_next@@Base+0xd6a>
    fe4e:	ldrd	r2, r3, [sp, #88]	; 0x58
    fe52:	cmp	r9, r3
    fe54:	it	eq
    fe56:	cmpeq	r8, r2
    fe58:	bne.n	feb2 <ulist_next@@Base+0xcba>
    fe5a:	ldrb.w	r5, [r4, #196]	; 0xc4
    fe5e:	ldr.w	r8, [r4, #192]	; 0xc0
    fe62:	cmp	r5, #0
    fe64:	beq.n	ff5c <ulist_next@@Base+0xd64>
    fe66:	ldr.w	r9, [pc, #272]	; ff78 <ulist_next@@Base+0xd80>
    fe6a:	movs	r5, #0
    fe6c:	mov	fp, r5
    fe6e:	mov	sl, r5
    fe70:	add	r9, pc
    fe72:	cmp	r5, r8
    fe74:	bge.n	fefc <ulist_next@@Base+0xd04>
    fe76:	ldr.w	r2, [r9, #36]	; 0x24
    fe7a:	ldrd	r3, r1, [r2]
    fe7e:	adds	r3, #1
    fe80:	adc.w	r1, r1, #0
    fe84:	strd	r3, r1, [r2]
    fe88:	add.w	r3, r5, r5, lsl #5
    fe8c:	ldrd	r0, r1, [sp, #88]	; 0x58
    fe90:	add	r3, r4
    fe92:	adds	r5, #1
    fe94:	ldr.w	r2, [r3, #214]!
    fe98:	ldr	r3, [r3, #4]
    fe9a:	strd	r0, r1, [sp, #8]
    fe9e:	mov	r0, r6
    fea0:	ldr.w	r1, [r6, #384]	; 0x180
    fea4:	strd	r1, sl, [sp]
    fea8:	mov	r1, r7
    feaa:	bl	fe08 <ulist_next@@Base+0xc10>
    feae:	mov	fp, r0
    feb0:	b.n	fe72 <ulist_next@@Base+0xc7a>
    feb2:	ldrd	r2, r3, [sp, #80]	; 0x50
    feb6:	mov	r0, r8
    feb8:	mov	r1, r9
    feba:	strd	r2, r3, [sp, #8]
    febe:	ldrd	r2, r3, [sp, #88]	; 0x58
    fec2:	strd	r2, r3, [sp]
    fec6:	mov	r2, sl
    fec8:	mov	r3, fp
    feca:	bl	f920 <ulist_next@@Base+0x728>
    fece:	cmp	r0, #0
    fed0:	bne.n	fe5a <ulist_next@@Base+0xc62>
    fed2:	mov.w	fp, #12
    fed6:	b.n	ff02 <ulist_next@@Base+0xd0a>
    fed8:	mul.w	r9, r6, r5
    fedc:	movs	r3, #17
    fede:	mov	r1, r7
    fee0:	mov	r0, r4
    fee2:	add.w	r2, r9, #101	; 0x65
    fee6:	bl	1a79e <read_extent_buffer@@Base>
    feea:	ldrb.w	r3, [sp, #24]
    feee:	cmp	r3, #108	; 0x6c
    fef0:	beq.n	ff16 <ulist_next@@Base+0xd1e>
    fef2:	adds	r5, #1
    fef4:	cmp	r5, r8
    fef6:	blt.n	fed8 <ulist_next@@Base+0xce0>
    fef8:	mov.w	fp, #0
    fefc:	mov	r0, r4
    fefe:	bl	1a0a4 <free_extent_buffer@@Base>
    ff02:	ldr	r2, [pc, #120]	; (ff7c <ulist_next@@Base+0xd84>)
    ff04:	ldr	r3, [pc, #108]	; (ff74 <ulist_next@@Base+0xd7c>)
    ff06:	add	r2, pc
    ff08:	ldr	r3, [r2, r3]
    ff0a:	ldr	r2, [r3, #0]
    ff0c:	ldr	r3, [sp, #36]	; 0x24
    ff0e:	eors	r2, r3
    ff10:	beq.n	ff68 <ulist_next@@Base+0xd70>
    ff12:	blx	88e4 <__stack_chk_fail@plt>
    ff16:	add	r9, r4
    ff18:	ldr.w	r2, [r9, #214]	; 0xd6
    ff1c:	add	r2, r4
    ff1e:	add.w	r3, r2, #197	; 0xc5
    ff22:	ldrb.w	r2, [r2, #217]	; 0xd9
    ff26:	cmp	r2, #0
    ff28:	beq.n	fef2 <ulist_next@@Base+0xcfa>
    ff2a:	mov	r2, r3
    ff2c:	ldr.w	r0, [r2, #21]!
    ff30:	ldr	r1, [r2, #4]
    ff32:	orrs.w	r2, r0, r1
    ff36:	beq.n	fef2 <ulist_next@@Base+0xcfa>
    ff38:	ldr.w	r2, [r3, #29]!
    ff3c:	ldr	r3, [r3, #4]
    ff3e:	strd	r2, r3, [sp, #8]
    ff42:	ldrd	r2, r3, [sp, #88]	; 0x58
    ff46:	strd	r2, r3, [sp]
    ff4a:	movs	r2, #0
    ff4c:	movs	r3, #0
    ff4e:	bl	f920 <ulist_next@@Base+0x728>
    ff52:	cmp	r0, #0
    ff54:	bne.n	fef2 <ulist_next@@Base+0xcfa>
    ff56:	mov.w	fp, #12
    ff5a:	b.n	fefc <ulist_next@@Base+0xd04>
    ff5c:	add	r7, sp, #16
    ff5e:	movs	r6, #25
    ff60:	b.n	fef4 <ulist_next@@Base+0xcfc>
    ff62:	mvn.w	fp, #4
    ff66:	b.n	ff02 <ulist_next@@Base+0xd0a>
    ff68:	mov	r0, fp
    ff6a:	add	sp, #44	; 0x2c
    ff6c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ff70:	ldrh	r0, [r3, #56]	; 0x38
    ff72:	movs	r5, r0
    ff74:	lsls	r4, r7, #9
    ff76:	movs	r0, r0
    ff78:	add	r7, pc, #848	; (adr r7, 102cc <report_qgroups@@Base+0x214>)
    ff7a:	movs	r5, r0
    ff7c:	ldrh	r2, [r5, #48]	; 0x30
    ff7e:	movs	r5, r0
    ff80:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ff84:	mov	r4, r0
    ff86:	vpush	{d8}
    ff8a:	ldr	r2, [pc, #264]	; (10094 <ulist_next@@Base+0xe9c>)
    ff8c:	ldr	r3, [pc, #264]	; (10098 <ulist_next@@Base+0xea0>)
    ff8e:	add	r2, pc
    ff90:	ldr	r5, [pc, #264]	; (1009c <ulist_next@@Base+0xea4>)
    ff92:	sub	sp, #60	; 0x3c
    ff94:	ldr	r3, [r2, r3]
    ff96:	add	r5, pc
    ff98:	adds	r5, #106	; 0x6a
    ff9a:	ldr	r3, [r3, #0]
    ff9c:	str	r3, [sp, #52]	; 0x34
    ff9e:	mov.w	r3, #0
    ffa2:	movs	r3, #0
    ffa4:	str	r3, [sp, #28]
    ffa6:	ldr	r3, [pc, #248]	; (100a0 <ulist_next@@Base+0xea8>)
    ffa8:	add	r3, pc
    ffaa:	str	r3, [sp, #20]
    ffac:	ldr	r3, [sp, #20]
    ffae:	add	r1, sp, #28
    ffb0:	ldr	r0, [r3, #28]
    ffb2:	bl	f1f8 <ulist_next@@Base>
    ffb6:	cmp	r0, #0
    ffb8:	beq.n	10054 <ulist_next@@Base+0xe5c>
    ffba:	ldr	r3, [pc, #232]	; (100a4 <ulist_next@@Base+0xeac>)
    ffbc:	ldrd	r7, r6, [r0]
    ffc0:	add	r3, pc
    ffc2:	ldr.w	r9, [r0, #8]
    ffc6:	vmov	s16, r3
    ffca:	mov	sl, r7
    ffcc:	mov	fp, r6
    ffce:	mov	r1, fp
    ffd0:	mov	r0, sl
    ffd2:	bl	f26e <ulist_next@@Base+0x76>
    ffd6:	movw	r2, #590	; 0x24e
    ffda:	mov	r1, r5
    ffdc:	clz	r3, r0
    ffe0:	mov	r8, r0
    ffe2:	vmov	r0, s16
    ffe6:	lsrs	r3, r3, #5
    ffe8:	bl	f48c <ulist_next@@Base+0x294>
    ffec:	ldrd	r2, r3, [r8, #24]
    fff0:	orrs.w	r1, r2, r3
    fff4:	bne.n	10008 <ulist_next@@Base+0xe10>
    fff6:	ldrd	r2, r3, [r8, #16]
    fffa:	cmp	fp, r3
    fffc:	it	eq
    fffe:	cmpeq	sl, r2
   10000:	beq.n	ffac <ulist_next@@Base+0xdb4>
   10002:	mov	sl, r2
   10004:	mov	fp, r3
   10006:	b.n	ffce <ulist_next@@Base+0xdd6>
   10008:	mov.w	r1, #4294967295	; 0xffffffff
   1000c:	cmp	r3, r1
   1000e:	mvn.w	r0, #7
   10012:	it	eq
   10014:	cmpeq	r2, r0
   10016:	beq.n	ffac <ulist_next@@Base+0xdb4>
   10018:	add	r1, sp, #32
   1001a:	mov	r0, r4
   1001c:	strd	r2, r3, [sp, #32]
   10020:	mov.w	r2, #4294967295	; 0xffffffff
   10024:	movs	r3, #132	; 0x84
   10026:	strb.w	r2, [sp, #41]	; 0x29
   1002a:	strb.w	r3, [sp, #40]	; 0x28
   1002e:	strb.w	r2, [sp, #42]	; 0x2a
   10032:	strb.w	r2, [sp, #43]	; 0x2b
   10036:	strb.w	r2, [sp, #44]	; 0x2c
   1003a:	strb.w	r2, [sp, #45]	; 0x2d
   1003e:	strb.w	r2, [sp, #46]	; 0x2e
   10042:	strb.w	r2, [sp, #47]	; 0x2f
   10046:	strb.w	r2, [sp, #48]	; 0x30
   1004a:	bl	20e8e <btrfs_read_fs_root@@Base>
   1004e:	mov	r1, r0
   10050:	cbnz	r0, 10068 <ulist_next@@Base+0xe70>
   10052:	movs	r0, #2
   10054:	ldr	r2, [pc, #80]	; (100a8 <ulist_next@@Base+0xeb0>)
   10056:	ldr	r3, [pc, #64]	; (10098 <ulist_next@@Base+0xea0>)
   10058:	add	r2, pc
   1005a:	ldr	r3, [r2, r3]
   1005c:	ldr	r2, [r3, #0]
   1005e:	ldr	r3, [sp, #52]	; 0x34
   10060:	eors	r2, r3
   10062:	beq.n	1008a <ulist_next@@Base+0xe92>
   10064:	blx	88e4 <__stack_chk_fail@plt>
   10068:	cmn.w	r0, #4096	; 0x1000
   1006c:	bhi.n	10052 <ulist_next@@Base+0xe5a>
   1006e:	strd	r7, r6, [sp, #8]
   10072:	mov	r0, r4
   10074:	ldrd	r2, r3, [r9, #8]
   10078:	strd	r2, r3, [sp]
   1007c:	mov	r2, r7
   1007e:	mov	r3, r6
   10080:	bl	fe08 <ulist_next@@Base+0xc10>
   10084:	cmp	r0, #0
   10086:	beq.n	ffac <ulist_next@@Base+0xdb4>
   10088:	b.n	10054 <ulist_next@@Base+0xe5c>
   1008a:	add	sp, #60	; 0x3c
   1008c:	vpop	{d8}
   10090:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10094:	ldrh	r2, [r4, #44]	; 0x2c
   10096:	movs	r5, r0
   10098:	lsls	r4, r7, #9
   1009a:	movs	r0, r0
   1009c:	ldc	0, cr0, [r7, #8]!
   100a0:	add	r6, pc, #624	; (adr r6, 10314 <report_qgroups@@Base+0x25c>)
   100a2:	movs	r5, r0
   100a4:	eors.w	r0, pc, r2
   100a8:	ldrh	r0, [r3, #38]	; 0x26
   100aa:	movs	r5, r0

000100ac <qgroup_set_item_count_ptr@@Base>:
   100ac:	ldr	r3, [pc, #4]	; (100b4 <qgroup_set_item_count_ptr@@Base+0x8>)
   100ae:	add	r3, pc
   100b0:	str	r0, [r3, #36]	; 0x24
   100b2:	bx	lr
   100b4:	add	r5, pc, #600	; (adr r5, 10310 <report_qgroups@@Base+0x258>)
   100b6:	movs	r5, r0

000100b8 <report_qgroups@@Base>:
   100b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   100bc:	mov	r5, r0
   100be:	ldr	r4, [pc, #552]	; (102e8 <report_qgroups@@Base+0x230>)
   100c0:	sub	sp, #60	; 0x3c
   100c2:	ldr	r3, [pc, #552]	; (102ec <report_qgroups@@Base+0x234>)
   100c4:	add	r4, pc
   100c6:	ldr	r3, [r4, r3]
   100c8:	ldr	r3, [r3, #0]
   100ca:	cbnz	r3, 100e0 <report_qgroups@@Base+0x28>
   100cc:	ldr	r3, [pc, #544]	; (102f0 <report_qgroups@@Base+0x238>)
   100ce:	add	r3, pc
   100d0:	ldrb	r3, [r3, #8]
   100d2:	lsls	r3, r3, #31
   100d4:	bpl.n	100e0 <report_qgroups@@Base+0x28>
   100d6:	cbz	r0, 10114 <report_qgroups@@Base+0x5c>
   100d8:	ldr	r0, [pc, #536]	; (102f4 <report_qgroups@@Base+0x23c>)
   100da:	add	r0, pc
   100dc:	blx	8a78 <puts@plt+0x4>
   100e0:	ldr	r6, [pc, #532]	; (102f8 <report_qgroups@@Base+0x240>)
   100e2:	add	r6, pc
   100e4:	ldrb	r3, [r6, #8]
   100e6:	and.w	r3, r3, #3
   100ea:	cmp	r3, #2
   100ec:	bne.n	10124 <report_qgroups@@Base+0x6c>
   100ee:	ldr	r0, [pc, #524]	; (102fc <report_qgroups@@Base+0x244>)
   100f0:	add	r0, pc
   100f2:	blx	8a78 <puts@plt+0x4>
   100f6:	ldrb	r3, [r6, #8]
   100f8:	and.w	r3, r3, #3
   100fc:	cmp	r3, #2
   100fe:	bne.n	1010e <report_qgroups@@Base+0x56>
   10100:	ldr	r3, [pc, #508]	; (10300 <report_qgroups@@Base+0x248>)
   10102:	ldr	r0, [pc, #512]	; (10304 <report_qgroups@@Base+0x24c>)
   10104:	ldr	r3, [r4, r3]
   10106:	add	r0, pc
   10108:	ldr	r1, [r3, #0]
   1010a:	blx	8de4 <fputs@plt+0x4>
   1010e:	mov.w	r8, #1
   10112:	b.n	10128 <report_qgroups@@Base+0x70>
   10114:	ldr	r0, [pc, #496]	; (10308 <report_qgroups@@Base+0x250>)
   10116:	add	r0, pc
   10118:	blx	8a78 <puts@plt+0x4>
   1011c:	mov	r0, r5
   1011e:	add	sp, #60	; 0x3c
   10120:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10124:	mov.w	r8, #0
   10128:	ldr	r0, [pc, #480]	; (1030c <report_qgroups@@Base+0x254>)
   1012a:	movs	r7, #0
   1012c:	ldr.w	r9, [pc, #480]	; 10310 <report_qgroups@@Base+0x258>
   10130:	add	r0, pc
   10132:	ldr.w	sl, [pc, #480]	; 10314 <report_qgroups@@Base+0x25c>
   10136:	bl	172ca <rb_first@@Base>
   1013a:	ldr	r6, [pc, #476]	; (10318 <report_qgroups@@Base+0x260>)
   1013c:	add	r9, pc
   1013e:	add	sl, pc
   10140:	add	r6, pc
   10142:	mov	r4, r0
   10144:	cbnz	r4, 1015a <report_qgroups@@Base+0xa2>
   10146:	cmp	r7, #0
   10148:	beq.w	102e4 <report_qgroups@@Base+0x22c>
   1014c:	cmp.w	r8, #0
   10150:	ite	ne
   10152:	movne	r5, #0
   10154:	mvneq.w	r5, #116	; 0x74
   10158:	b.n	1011c <report_qgroups@@Base+0x64>
   1015a:	ldrd	r2, r0, [r4, #-16]
   1015e:	ldrd	r3, r1, [r4, #-48]	; 0x30
   10162:	subs	r3, r2, r3
   10164:	str	r3, [sp, #24]
   10166:	sbc.w	r3, r0, r1
   1016a:	ldrd	r2, r0, [r4, #-32]
   1016e:	str	r3, [sp, #28]
   10170:	ldrd	r3, r1, [r4, #-64]	; 0x40
   10174:	subs	r3, r2, r3
   10176:	str	r3, [sp, #32]
   10178:	ldr	r2, [sp, #32]
   1017a:	sbc.w	r3, r0, r1
   1017e:	str	r3, [sp, #36]	; 0x24
   10180:	ldr	r3, [sp, #24]
   10182:	orrs	r3, r2
   10184:	ldr	r2, [sp, #36]	; 0x24
   10186:	str	r3, [sp, #40]	; 0x28
   10188:	ldr	r3, [sp, #28]
   1018a:	orrs	r3, r2
   1018c:	str	r3, [sp, #44]	; 0x2c
   1018e:	cbnz	r5, 101ac <report_qgroups@@Base+0xf4>
   10190:	ldrd	r2, r3, [sp, #40]	; 0x28
   10194:	orrs	r3, r2
   10196:	beq.w	102da <report_qgroups@@Base+0x222>
   1019a:	ldr.w	r3, [r4, #-88]
   1019e:	cbnz	r3, 101ac <report_qgroups@@Base+0xf4>
   101a0:	ldrh.w	r2, [r4, #-90]
   101a4:	mov	r3, r5
   101a6:	orrs	r3, r2
   101a8:	beq.w	102b6 <report_qgroups@@Base+0x1fe>
   101ac:	ldrd	fp, ip, [sp, #40]	; 0x28
   101b0:	ldrd	r0, r3, [r4, #-96]	; 0x60
   101b4:	orrs.w	r1, fp, ip
   101b8:	mov.w	r2, r3, lsr #16
   101bc:	uxth	r3, r3
   101be:	bne.w	102cc <report_qgroups@@Base+0x214>
   101c2:	ldr	r1, [pc, #344]	; (1031c <report_qgroups@@Base+0x264>)
   101c4:	add	r1, pc
   101c6:	strd	r0, r3, [sp]
   101ca:	movs	r3, #0
   101cc:	str	r1, [sp, #8]
   101ce:	movs	r0, #1
   101d0:	mov	r1, sl
   101d2:	blx	8c6c <__printf_chk@plt+0x4>
   101d6:	ldrd	r2, r3, [r4, #-24]
   101da:	str	r6, [sp, #8]
   101dc:	movs	r0, #1
   101de:	ldr	r1, [pc, #320]	; (10320 <report_qgroups@@Base+0x268>)
   101e0:	strd	r2, r3, [sp, #16]
   101e4:	ldrd	r2, r3, [r4, #-32]
   101e8:	add	r1, pc
   101ea:	str	r1, [sp, #52]	; 0x34
   101ec:	strd	r2, r3, [sp]
   101f0:	mov	r3, r6
   101f2:	ldr	r2, [pc, #304]	; (10324 <report_qgroups@@Base+0x26c>)
   101f4:	add	r2, pc
   101f6:	blx	8c6c <__printf_chk@plt+0x4>
   101fa:	ldrd	r2, r3, [r4, #-56]	; 0x38
   101fe:	str	r6, [sp, #8]
   10200:	movs	r0, #1
   10202:	ldr	r1, [sp, #52]	; 0x34
   10204:	strd	r2, r3, [sp, #16]
   10208:	ldrd	r2, r3, [r4, #-64]	; 0x40
   1020c:	strd	r2, r3, [sp]
   10210:	mov	r3, r6
   10212:	ldr	r2, [pc, #276]	; (10328 <report_qgroups@@Base+0x270>)
   10214:	add	r2, pc
   10216:	blx	8c6c <__printf_chk@plt+0x4>
   1021a:	ldrd	r2, r3, [sp, #32]
   1021e:	orrs	r3, r2
   10220:	beq.n	10240 <report_qgroups@@Base+0x188>
   10222:	ldrd	r2, r3, [sp, #32]
   10226:	movs	r0, #1
   10228:	ldr	r1, [pc, #256]	; (1032c <report_qgroups@@Base+0x274>)
   1022a:	str	r6, [sp, #8]
   1022c:	strd	r2, r3, [sp, #16]
   10230:	add	r1, pc
   10232:	strd	r2, r3, [sp]
   10236:	mov	r3, r6
   10238:	ldr	r2, [pc, #244]	; (10330 <report_qgroups@@Base+0x278>)
   1023a:	add	r2, pc
   1023c:	blx	8c6c <__printf_chk@plt+0x4>
   10240:	ldrd	r2, r3, [r4, #-8]
   10244:	movs	r0, #1
   10246:	ldr.w	fp, [pc, #236]	; 10334 <report_qgroups@@Base+0x27c>
   1024a:	ldr	r1, [pc, #236]	; (10338 <report_qgroups@@Base+0x280>)
   1024c:	add	fp, pc
   1024e:	strd	r2, r3, [sp, #16]
   10252:	str.w	fp, [sp, #8]
   10256:	add	r1, pc
   10258:	ldrd	r2, r3, [r4, #-16]
   1025c:	str	r1, [sp, #52]	; 0x34
   1025e:	strd	r2, r3, [sp]
   10262:	mov	r3, fp
   10264:	ldr	r2, [pc, #212]	; (1033c <report_qgroups@@Base+0x284>)
   10266:	add	r2, pc
   10268:	blx	8c6c <__printf_chk@plt+0x4>
   1026c:	ldrd	r2, r3, [r4, #-40]	; 0x28
   10270:	str.w	fp, [sp, #8]
   10274:	movs	r0, #1
   10276:	ldr	r1, [sp, #52]	; 0x34
   10278:	strd	r2, r3, [sp, #16]
   1027c:	ldrd	r2, r3, [r4, #-48]	; 0x30
   10280:	strd	r2, r3, [sp]
   10284:	mov	r3, fp
   10286:	ldr	r2, [pc, #184]	; (10340 <report_qgroups@@Base+0x288>)
   10288:	add	r2, pc
   1028a:	blx	8c6c <__printf_chk@plt+0x4>
   1028e:	ldrd	r2, r3, [sp, #24]
   10292:	orrs	r3, r2
   10294:	beq.n	102d2 <report_qgroups@@Base+0x21a>
   10296:	ldrd	r2, r3, [sp, #24]
   1029a:	movs	r0, #1
   1029c:	ldr	r1, [pc, #164]	; (10344 <report_qgroups@@Base+0x28c>)
   1029e:	str.w	fp, [sp, #8]
   102a2:	strd	r2, r3, [sp, #16]
   102a6:	add	r1, pc
   102a8:	strd	r2, r3, [sp]
   102ac:	mov	r3, fp
   102ae:	ldr	r2, [pc, #152]	; (10348 <report_qgroups@@Base+0x290>)
   102b0:	add	r2, pc
   102b2:	blx	8c6c <__printf_chk@plt+0x4>
   102b6:	ldr.w	r2, [r9, #4]
   102ba:	add.w	r3, r4, #40	; 0x28
   102be:	movs	r7, #1
   102c0:	str.w	r3, [r9, #4]
   102c4:	strd	r9, r2, [r4, #40]	; 0x28
   102c8:	str	r3, [r2, #0]
   102ca:	b.n	102da <report_qgroups@@Base+0x222>
   102cc:	ldr	r1, [pc, #124]	; (1034c <report_qgroups@@Base+0x294>)
   102ce:	add	r1, pc
   102d0:	b.n	101c6 <report_qgroups@@Base+0x10e>
   102d2:	ldrd	r2, r3, [sp, #40]	; 0x28
   102d6:	orrs	r3, r2
   102d8:	bne.n	102b6 <report_qgroups@@Base+0x1fe>
   102da:	mov	r0, r4
   102dc:	bl	172ea <rb_next@@Base>
   102e0:	mov	r4, r0
   102e2:	b.n	10144 <report_qgroups@@Base+0x8c>
   102e4:	mov	r5, r7
   102e6:	b.n	1011c <report_qgroups@@Base+0x64>
   102e8:	ldrh	r4, [r5, #34]	; 0x22
   102ea:	movs	r5, r0
   102ec:	lsls	r4, r3, #10
   102ee:	movs	r0, r0
   102f0:	add	r5, pc, #472	; (adr r5, 104cc <qgroup_verify_all@@Base+0xe0>)
   102f2:	movs	r5, r0
   102f4:			; <UNDEFINED> instruction: 0xe99f0002
   102f8:	add	r5, pc, #392	; (adr r5, 10484 <qgroup_verify_all@@Base+0x98>)
   102fa:	movs	r5, r0
   102fc:	and.w	r0, r4, r2
   10300:	lsls	r4, r1, #10
   10302:	movs	r0, r0
   10304:	bics.w	r0, ip, r2
   10308:			; <UNDEFINED> instruction: 0xe9a70002
   1030c:	add	r5, pc, #80	; (adr r5, 10360 <free_qgroup_counts@@Base+0x10>)
   1030e:	movs	r5, r0
   10310:	ldrh	r0, [r1, #60]	; 0x3c
   10312:	movs	r5, r0
   10314:	bic.w	r0, r8, r2
   10318:	orr.w	r0, sl, r2
   1031c:	b.n	102e4 <report_qgroups@@Base+0x22c>
   1031e:	movs	r2, r0
   10320:			; <UNDEFINED> instruction: 0xe9b20002
   10324:			; <UNDEFINED> instruction: 0xe9a10002
   10328:			; <UNDEFINED> instruction: 0xe9a60002
   1032c:			; <UNDEFINED> instruction: 0xe9960002
   10330:			; <UNDEFINED> instruction: 0xe9860002
   10334:			; <UNDEFINED> instruction: 0xe99a0002
   10338:	strd	r0, r0, [r4, #-8]
   1033c:	stmdb	pc!, {r1}
   10340:	ldmdb	r2!, {r1}
   10344:	stmdb	r0!, {r1}
   10348:	ldmdb	r0, {r1}
   1034c:	b.n	1028a <report_qgroups@@Base+0x1d2>
   1034e:	movs	r2, r0

00010350 <free_qgroup_counts@@Base>:
   10350:	ldr	r0, [pc, #144]	; (103e4 <free_qgroup_counts@@Base+0x94>)
   10352:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10356:	add	r0, pc
   10358:	bl	172ca <rb_first@@Base>
   1035c:	ldr	r6, [pc, #136]	; (103e8 <free_qgroup_counts@@Base+0x98>)
   1035e:	add	r6, pc
   10360:	mov	r4, r0
   10362:	cbnz	r4, 10368 <free_qgroup_counts@@Base+0x18>
   10364:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10368:	add.w	r0, r4, #40	; 0x28
   1036c:	mov	r5, r4
   1036e:	bl	f218 <ulist_next@@Base+0x20>
   10372:	ldr.w	r1, [r5, #12]!
   10376:	sub.w	r7, r4, #96	; 0x60
   1037a:	ldr.w	r8, [r1]
   1037e:	cmp	r1, r5
   10380:	bne.n	103aa <free_qgroup_counts@@Base+0x5a>
   10382:	mov	r5, r4
   10384:	ldr.w	r1, [r5, #20]!
   10388:	ldr.w	r8, [r1]
   1038c:	cmp	r1, r5
   1038e:	bne.n	103c6 <free_qgroup_counts@@Base+0x76>
   10390:	mov	r0, r4
   10392:	bl	172ea <rb_next@@Base>
   10396:	mov	r1, r6
   10398:	mov	r5, r0
   1039a:	mov	r0, r4
   1039c:	bl	17054 <rb_erase@@Base>
   103a0:	mov	r0, r7
   103a2:	blx	87cc <free@plt+0x4>
   103a6:	mov	r4, r5
   103a8:	b.n	10362 <free_qgroup_counts@@Base+0x12>
   103aa:	mov	r0, r1
   103ac:	bl	f218 <ulist_next@@Base+0x20>
   103b0:	add.w	r0, r1, #8
   103b4:	bl	f218 <ulist_next@@Base+0x20>
   103b8:	mov	r0, r1
   103ba:	blx	87cc <free@plt+0x4>
   103be:	mov	r1, r8
   103c0:	ldr.w	r8, [r8]
   103c4:	b.n	1037e <free_qgroup_counts@@Base+0x2e>
   103c6:	mov	r0, r1
   103c8:	bl	f218 <ulist_next@@Base+0x20>
   103cc:	add.w	r0, r1, #8
   103d0:	bl	f218 <ulist_next@@Base+0x20>
   103d4:	mov	r0, r1
   103d6:	blx	87cc <free@plt+0x4>
   103da:	mov	r1, r8
   103dc:	ldr.w	r8, [r8]
   103e0:	b.n	1038c <free_qgroup_counts@@Base+0x3c>
   103e2:	nop
   103e4:	add	r2, pc, #952	; (adr r2, 107a0 <qgroup_verify_all@@Base+0x3b4>)
   103e6:	movs	r5, r0
   103e8:	add	r2, pc, #920	; (adr r2, 10784 <qgroup_verify_all@@Base+0x398>)
   103ea:	movs	r5, r0

000103ec <qgroup_verify_all@@Base>:
   103ec:	ldr	r2, [pc, #956]	; (107ac <qgroup_verify_all@@Base+0x3c0>)
   103ee:	ldr	r3, [pc, #960]	; (107b0 <qgroup_verify_all@@Base+0x3c4>)
   103f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   103f4:	add	r2, pc
   103f6:	ldrb.w	r4, [r0, #364]	; 0x16c
   103fa:	mov	r9, r0
   103fc:	ldr.w	r8, [pc, #948]	; 107b4 <qgroup_verify_all@@Base+0x3c8>
   10400:	sub	sp, #196	; 0xc4
   10402:	ldr	r3, [r2, r3]
   10404:	ands.w	r0, r4, #16
   10408:	add	r8, pc
   1040a:	ldr	r3, [r3, #0]
   1040c:	str	r3, [sp, #188]	; 0xbc
   1040e:	mov.w	r3, #0
   10412:	beq.w	1079e <qgroup_verify_all@@Base+0x3b2>
   10416:	movs	r0, #0
   10418:	bl	eff8 <ulist_alloc@@Base>
   1041c:	ldr	r3, [pc, #920]	; (107b8 <qgroup_verify_all@@Base+0x3cc>)
   1041e:	add	r3, pc
   10420:	str	r0, [r3, #28]
   10422:	cbnz	r0, 1044c <qgroup_verify_all@@Base+0x60>
   10424:	ldr	r3, [pc, #916]	; (107bc <qgroup_verify_all@@Base+0x3d0>)
   10426:	movs	r4, #12
   10428:	ldr	r0, [pc, #916]	; (107c0 <qgroup_verify_all@@Base+0x3d4>)
   1042a:	ldr.w	r3, [r8, r3]
   1042e:	add	r0, pc
   10430:	ldr	r1, [r3, #0]
   10432:	blx	8de4 <fputs@plt+0x4>
   10436:	ldr	r2, [pc, #908]	; (107c4 <qgroup_verify_all@@Base+0x3d8>)
   10438:	ldr	r3, [pc, #884]	; (107b0 <qgroup_verify_all@@Base+0x3c4>)
   1043a:	add	r2, pc
   1043c:	ldr	r3, [r2, r3]
   1043e:	ldr	r2, [r3, #0]
   10440:	ldr	r3, [sp, #188]	; 0xbc
   10442:	eors	r2, r3
   10444:	beq.w	107a2 <qgroup_verify_all@@Base+0x3b6>
   10448:	blx	88e4 <__stack_chk_fail@plt>
   1044c:	ldr.w	r3, [r9, #44]	; 0x2c
   10450:	mov.w	fp, #0
   10454:	mov.w	sl, #2
   10458:	mov	r6, fp
   1045a:	str	r3, [sp, #40]	; 0x28
   1045c:	ldr	r3, [pc, #872]	; (107c8 <qgroup_verify_all@@Base+0x3dc>)
   1045e:	add	r3, pc
   10460:	str	r3, [sp, #52]	; 0x34
   10462:	add	r3, sp, #120	; 0x78
   10464:	str	r3, [sp, #8]
   10466:	mov	r0, r3
   10468:	bl	1b2cc <btrfs_init_path@@Base>
   1046c:	ldr	r3, [sp, #8]
   1046e:	strb.w	r6, [sp, #69]	; 0x45
   10472:	strb.w	r6, [sp, #70]	; 0x46
   10476:	strb.w	r6, [sp, #71]	; 0x47
   1047a:	strb.w	r6, [sp, #72]	; 0x48
   1047e:	strb.w	r6, [sp, #73]	; 0x49
   10482:	strb.w	r6, [sp, #74]	; 0x4a
   10486:	strb.w	r6, [sp, #75]	; 0x4b
   1048a:	strb.w	r6, [sp, #76]	; 0x4c
   1048e:	cmp.w	fp, #0
   10492:	bne.n	10520 <qgroup_verify_all@@Base+0x134>
   10494:	movs	r2, #246	; 0xf6
   10496:	mov	r1, fp
   10498:	strd	r2, r1, [sp, #60]	; 0x3c
   1049c:	movs	r0, #0
   1049e:	movs	r2, #0
   104a0:	ldr	r1, [sp, #40]	; 0x28
   104a2:	strd	r2, r2, [sp]
   104a6:	add	r2, sp, #60	; 0x3c
   104a8:	strb.w	r6, [sp, #68]	; 0x44
   104ac:	bl	1d6c0 <btrfs_search_slot@@Base>
   104b0:	subs	r4, r0, #0
   104b2:	blt.n	10526 <qgroup_verify_all@@Base+0x13a>
   104b4:	ldr	r3, [pc, #788]	; (107cc <qgroup_verify_all@@Base+0x3e0>)
   104b6:	add	r3, pc
   104b8:	str	r3, [sp, #36]	; 0x24
   104ba:	ldr	r3, [sp, #120]	; 0x78
   104bc:	str	r3, [sp, #20]
   104be:	ldr.w	r3, [r3, #192]	; 0xc0
   104c2:	str	r3, [sp, #44]	; 0x2c
   104c4:	ldr	r3, [sp, #20]
   104c6:	adds	r3, #197	; 0xc5
   104c8:	str	r3, [sp, #28]
   104ca:	movs	r3, #0
   104cc:	str	r3, [sp, #24]
   104ce:	ldr	r3, [pc, #768]	; (107d0 <qgroup_verify_all@@Base+0x3e4>)
   104d0:	add	r3, pc
   104d2:	str	r3, [sp, #32]
   104d4:	ldr	r3, [sp, #44]	; 0x2c
   104d6:	ldr	r2, [sp, #24]
   104d8:	cmp	r3, r2
   104da:	bgt.n	10562 <qgroup_verify_all@@Base+0x176>
   104dc:	ldr	r3, [sp, #40]	; 0x28
   104de:	add	r4, sp, #120	; 0x78
   104e0:	strb.w	r6, [sp, #185]	; 0xb9
   104e4:	mov	r1, r4
   104e6:	ldr.w	r0, [r3, #464]	; 0x1d0
   104ea:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   104ee:	cmp	r0, #0
   104f0:	beq.n	104ba <qgroup_verify_all@@Base+0xce>
   104f2:	mov	r0, r4
   104f4:	mov.w	fp, #1
   104f8:	bl	1b2dc <btrfs_release_path@@Base>
   104fc:	cmp	sl, fp
   104fe:	bne.n	1051c <qgroup_verify_all@@Base+0x130>
   10500:	mov	r0, r9
   10502:	bl	fa60 <ulist_next@@Base+0x868>
   10506:	mov	r4, r0
   10508:	cmp	r0, #0
   1050a:	beq.w	10778 <qgroup_verify_all@@Base+0x38c>
   1050e:	ldr	r3, [pc, #684]	; (107bc <qgroup_verify_all@@Base+0x3d0>)
   10510:	ldr	r2, [pc, #704]	; (107d4 <qgroup_verify_all@@Base+0x3e8>)
   10512:	ldr.w	r0, [r8, r3]
   10516:	add	r2, pc
   10518:	mov	r3, r4
   1051a:	b.n	10546 <qgroup_verify_all@@Base+0x15a>
   1051c:	mov	sl, fp
   1051e:	b.n	10462 <qgroup_verify_all@@Base+0x76>
   10520:	movs	r2, #0
   10522:	mov	r1, r2
   10524:	b.n	10498 <qgroup_verify_all@@Base+0xac>
   10526:	ldr	r3, [pc, #660]	; (107bc <qgroup_verify_all@@Base+0x3d0>)
   10528:	movs	r1, #1
   1052a:	ldr	r2, [pc, #684]	; (107d8 <qgroup_verify_all@@Base+0x3ec>)
   1052c:	ldr.w	r0, [r8, r3]
   10530:	add	r2, pc
   10532:	mov	r3, r4
   10534:	ldr	r0, [r0, #0]
   10536:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1053a:	ldr	r3, [pc, #640]	; (107bc <qgroup_verify_all@@Base+0x3d0>)
   1053c:	ldr	r2, [pc, #668]	; (107dc <qgroup_verify_all@@Base+0x3f0>)
   1053e:	add	r2, pc
   10540:	ldr.w	r0, [r8, r3]
   10544:	mov	r3, r4
   10546:	ldr	r0, [r0, #0]
   10548:	movs	r1, #1
   1054a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1054e:	bl	f3c4 <ulist_next@@Base+0x1cc>
   10552:	ldr	r0, [pc, #652]	; (107e0 <qgroup_verify_all@@Base+0x3f4>)
   10554:	ldr	r1, [pc, #652]	; (107e4 <qgroup_verify_all@@Base+0x3f8>)
   10556:	add	r0, pc
   10558:	add	r1, pc
   1055a:	adds	r0, #24
   1055c:	bl	1ad82 <rb_free_nodes@@Base>
   10560:	b.n	10436 <qgroup_verify_all@@Base+0x4a>
   10562:	ldr	r3, [sp, #24]
   10564:	movs	r2, #25
   10566:	add	r7, sp, #100	; 0x64
   10568:	ldr	r0, [sp, #20]
   1056a:	muls	r2, r3
   1056c:	mov	r1, r7
   1056e:	movs	r3, #17
   10570:	adds	r2, #101	; 0x65
   10572:	bl	1a79e <read_extent_buffer@@Base>
   10576:	ldr.w	r3, [sp, #109]	; 0x6d
   1057a:	ldrd	r0, r1, [sp, #100]	; 0x64
   1057e:	str	r3, [sp, #8]
   10580:	ldr.w	r3, [sp, #113]	; 0x71
   10584:	strd	r0, r1, [sp, #60]	; 0x3c
   10588:	str	r3, [sp, #12]
   1058a:	ldr	r3, [sp, #8]
   1058c:	str.w	r3, [sp, #69]	; 0x45
   10590:	ldr	r3, [sp, #12]
   10592:	str.w	r3, [sp, #73]	; 0x49
   10596:	ldrb.w	r3, [sp, #108]	; 0x6c
   1059a:	strb.w	r3, [sp, #68]	; 0x44
   1059e:	cmp.w	fp, #0
   105a2:	beq.n	10614 <qgroup_verify_all@@Base+0x228>
   105a4:	cmp	r3, #246	; 0xf6
   105a6:	bne.n	105f2 <qgroup_verify_all@@Base+0x206>
   105a8:	ldrd	r3, r4, [sp, #8]
   105ac:	cmp	r4, r1
   105ae:	it	eq
   105b0:	cmpeq	r3, r0
   105b2:	bcc.n	105f2 <qgroup_verify_all@@Base+0x206>
   105b4:	bl	f234 <ulist_next@@Base+0x3c>
   105b8:	mov	r5, r0
   105ba:	ldrd	r0, r1, [sp, #8]
   105be:	bl	f234 <ulist_next@@Base+0x3c>
   105c2:	mov	r4, r0
   105c4:	cbz	r5, 10600 <qgroup_verify_all@@Base+0x214>
   105c6:	cbz	r0, 10600 <qgroup_verify_all@@Base+0x214>
   105c8:	movs	r1, #24
   105ca:	movs	r0, #1
   105cc:	blx	8718 <calloc@plt+0x4>
   105d0:	cbz	r0, 1060e <qgroup_verify_all@@Base+0x222>
   105d2:	strd	r4, r5, [r0, #16]
   105d6:	adds	r5, #108	; 0x6c
   105d8:	ldr	r3, [r5, #4]
   105da:	add.w	r1, r0, #8
   105de:	str	r0, [r5, #4]
   105e0:	adds	r4, #116	; 0x74
   105e2:	strd	r5, r3, [r0]
   105e6:	str	r0, [r3, #0]
   105e8:	ldr	r2, [r4, #4]
   105ea:	str	r1, [r4, #4]
   105ec:	strd	r4, r2, [r0, #8]
   105f0:	str	r1, [r2, #0]
   105f2:	ldr	r3, [sp, #24]
   105f4:	adds	r3, #1
   105f6:	str	r3, [sp, #24]
   105f8:	ldr	r3, [sp, #28]
   105fa:	adds	r3, #25
   105fc:	str	r3, [sp, #28]
   105fe:	b.n	104d4 <qgroup_verify_all@@Base+0xe8>
   10600:	mvn.w	r4, #1
   10604:	ldr	r0, [pc, #480]	; (107e8 <qgroup_verify_all@@Base+0x3fc>)
   10606:	add	r0, pc
   10608:	bl	1a900 <__btrfs_error@@Base>
   1060c:	b.n	1053a <qgroup_verify_all@@Base+0x14e>
   1060e:	mvn.w	r4, #11
   10612:	b.n	10604 <qgroup_verify_all@@Base+0x218>
   10614:	cmp	r3, #240	; 0xf0
   10616:	bne.n	10646 <qgroup_verify_all@@Base+0x25a>
   10618:	ldr	r3, [sp, #28]
   1061a:	ldr	r2, [sp, #20]
   1061c:	ldr	r1, [sp, #32]
   1061e:	ldr.w	r3, [r3, #17]
   10622:	add	r3, r2
   10624:	ldrb	r1, [r1, #8]
   10626:	ldr.w	r2, [r3, #213]	; 0xd5
   1062a:	bic.w	r1, r1, #3
   1062e:	ubfx	r2, r2, #1, #2
   10632:	orrs	r2, r1
   10634:	ldr	r1, [sp, #32]
   10636:	strb	r2, [r1, #8]
   10638:	ldr.w	r2, [r3, #221]	; 0xdd
   1063c:	ldr.w	r3, [r3, #225]	; 0xe1
   10640:	str	r2, [r1, #16]
   10642:	str	r3, [r1, #20]
   10644:	b.n	105f2 <qgroup_verify_all@@Base+0x206>
   10646:	cmp	r3, #242	; 0xf2
   10648:	bne.n	105f2 <qgroup_verify_all@@Base+0x206>
   1064a:	ldr	r3, [sp, #20]
   1064c:	movs	r1, #144	; 0x90
   1064e:	movs	r0, #1
   10650:	adds	r3, #96	; 0x60
   10652:	str	r3, [sp, #48]	; 0x30
   10654:	ldr	r3, [sp, #28]
   10656:	ldr.w	r5, [r3, #17]
   1065a:	blx	8718 <calloc@plt+0x4>
   1065e:	adds	r5, #101	; 0x65
   10660:	mov	r4, r0
   10662:	cmp	r0, #0
   10664:	beq.n	10764 <qgroup_verify_all@@Base+0x378>
   10666:	ldrd	r2, r3, [sp, #8]
   1066a:	mov	ip, r0
   1066c:	strd	r2, r3, [ip], #12
   10670:	ldmia	r7!, {r0, r1, r2, r3}
   10672:	stmia.w	ip!, {r0, r1, r2, r3}
   10676:	ldr	r3, [r7, #0]
   10678:	strb.w	r3, [ip]
   1067c:	ldr	r3, [sp, #48]	; 0x30
   1067e:	add	r3, r5
   10680:	ldr	r2, [r3, #8]
   10682:	mov	r5, r3
   10684:	ldr	r3, [r3, #12]
   10686:	strd	r2, r3, [r4, #32]
   1068a:	ldr	r2, [r5, #16]
   1068c:	ldr	r3, [r5, #20]
   1068e:	strd	r2, r3, [r4, #40]	; 0x28
   10692:	ldr	r2, [r5, #24]
   10694:	ldr	r3, [r5, #28]
   10696:	strd	r2, r3, [r4, #48]	; 0x30
   1069a:	ldr	r2, [r5, #32]
   1069c:	ldr	r3, [r5, #36]	; 0x24
   1069e:	mov	r5, fp
   106a0:	strd	r2, r3, [r4, #56]	; 0x38
   106a4:	add.w	r3, r4, #108	; 0x6c
   106a8:	strd	r3, r3, [r4, #108]	; 0x6c
   106ac:	add.w	r3, r4, #116	; 0x74
   106b0:	strd	r3, r3, [r4, #116]	; 0x74
   106b4:	add.w	r3, r4, #136	; 0x88
   106b8:	ldr	r2, [sp, #52]	; 0x34
   106ba:	strd	r3, r3, [r4, #136]	; 0x88
   106be:	ldr	r7, [r2, #0]
   106c0:	cmp	r7, #0
   106c2:	bne.n	10736 <qgroup_verify_all@@Base+0x34a>
   106c4:	ldr	r1, [sp, #36]	; 0x24
   106c6:	ldr	r0, [sp, #36]	; 0x24
   106c8:	strd	r5, r7, [r4, #96]	; 0x60
   106cc:	ldr	r1, [r1, #4]
   106ce:	str	r7, [r4, #104]	; 0x68
   106d0:	adds	r1, #1
   106d2:	str	r1, [r0, #4]
   106d4:	add.w	r0, r4, #96	; 0x60
   106d8:	ldr	r1, [sp, #36]	; 0x24
   106da:	str	r0, [r2, #0]
   106dc:	bl	16fae <rb_insert_color@@Base>
   106e0:	ldr.w	r2, [sp, #69]	; 0x45
   106e4:	ldr.w	r3, [sp, #73]	; 0x49
   106e8:	add	r1, sp, #80	; 0x50
   106ea:	mov	r0, r9
   106ec:	strd	r2, r3, [sp, #80]	; 0x50
   106f0:	mov.w	r2, #4294967295	; 0xffffffff
   106f4:	movs	r3, #132	; 0x84
   106f6:	strb.w	r2, [sp, #89]	; 0x59
   106fa:	strb.w	r3, [sp, #88]	; 0x58
   106fe:	strb.w	r2, [sp, #90]	; 0x5a
   10702:	strb.w	r2, [sp, #91]	; 0x5b
   10706:	strb.w	r2, [sp, #92]	; 0x5c
   1070a:	strb.w	r2, [sp, #93]	; 0x5d
   1070e:	strb.w	r2, [sp, #94]	; 0x5e
   10712:	strb.w	r2, [sp, #95]	; 0x5f
   10716:	strb.w	r2, [sp, #96]	; 0x60
   1071a:	bl	20d8c <btrfs_read_fs_root_no_cache@@Base>
   1071e:	cmp	r0, #0
   10720:	beq.w	105f2 <qgroup_verify_all@@Base+0x206>
   10724:	cmn.w	r0, #4096	; 0x1000
   10728:	bhi.w	105f2 <qgroup_verify_all@@Base+0x206>
   1072c:	movs	r3, #1
   1072e:	str	r3, [r4, #8]
   10730:	bl	1fa72 <btrfs_free_fs_root@@Base>
   10734:	b.n	105f2 <qgroup_verify_all@@Base+0x206>
   10736:	ldrd	r0, r1, [r7, #-96]	; 0x60
   1073a:	ldrd	r2, r3, [sp, #8]
   1073e:	cmp	r3, r1
   10740:	it	eq
   10742:	cmpeq	r2, r0
   10744:	bcs.n	1074e <qgroup_verify_all@@Base+0x362>
   10746:	add.w	r2, r7, #8
   1074a:	mov	r5, r7
   1074c:	b.n	106be <qgroup_verify_all@@Base+0x2d2>
   1074e:	ldrd	r2, r3, [sp, #8]
   10752:	cmp	r1, r3
   10754:	it	eq
   10756:	cmpeq	r0, r2
   10758:	bcs.n	1075e <qgroup_verify_all@@Base+0x372>
   1075a:	adds	r2, r7, #4
   1075c:	b.n	1074a <qgroup_verify_all@@Base+0x35e>
   1075e:	mov	r0, r4
   10760:	blx	87cc <free@plt+0x4>
   10764:	ldr	r3, [pc, #84]	; (107bc <qgroup_verify_all@@Base+0x3d0>)
   10766:	movs	r4, #12
   10768:	ldr	r0, [pc, #128]	; (107ec <qgroup_verify_all@@Base+0x400>)
   1076a:	ldr.w	r3, [r8, r3]
   1076e:	add	r0, pc
   10770:	ldr	r1, [r3, #0]
   10772:	blx	8de4 <fputs@plt+0x4>
   10776:	b.n	1053a <qgroup_verify_all@@Base+0x14e>
   10778:	mov	r0, r9
   1077a:	bl	ff80 <ulist_next@@Base+0xd88>
   1077e:	mov	r4, r0
   10780:	cbz	r0, 10790 <qgroup_verify_all@@Base+0x3a4>
   10782:	ldr	r3, [pc, #56]	; (107bc <qgroup_verify_all@@Base+0x3d0>)
   10784:	ldr	r2, [pc, #104]	; (107f0 <qgroup_verify_all@@Base+0x404>)
   10786:	ldr.w	r0, [r8, r3]
   1078a:	add	r2, pc
   1078c:	mov	r3, r4
   1078e:	b.n	10546 <qgroup_verify_all@@Base+0x15a>
   10790:	movs	r2, #0
   10792:	movs	r3, #0
   10794:	mov	r0, sl
   10796:	bl	f4ac <ulist_next@@Base+0x2b4>
   1079a:	mov	r4, r0
   1079c:	b.n	1054e <qgroup_verify_all@@Base+0x162>
   1079e:	mov	r4, r0
   107a0:	b.n	10436 <qgroup_verify_all@@Base+0x4a>
   107a2:	mov	r0, r4
   107a4:	add	sp, #196	; 0xc4
   107a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   107aa:	nop
   107ac:	ldrh	r4, [r7, #8]
   107ae:	movs	r5, r0
   107b0:	lsls	r4, r7, #9
   107b2:	movs	r0, r0
   107b4:	ldrh	r0, [r5, #8]
   107b6:	movs	r5, r0
   107b8:	add	r2, pc, #152	; (adr r2, 10854 <print_extent_state@@Base+0x60>)
   107ba:	movs	r5, r0
   107bc:	lsls	r4, r1, #10
   107be:	movs	r0, r0
   107c0:	b.n	10748 <qgroup_verify_all@@Base+0x35c>
   107c2:	movs	r2, r0
   107c4:	ldrh	r6, [r6, #6]
   107c6:	movs	r5, r0
   107c8:	add	r1, pc, #920	; (adr r1, 10b64 <repair_qgroups@@Base+0x2bc>)
   107ca:	movs	r5, r0
   107cc:	add	r1, pc, #568	; (adr r1, 10a08 <repair_qgroups@@Base+0x160>)
   107ce:	movs	r5, r0
   107d0:	add	r1, pc, #464	; (adr r1, 109a4 <repair_qgroups@@Base+0xfc>)
   107d2:	movs	r5, r0
   107d4:	b.n	1067c <qgroup_verify_all@@Base+0x290>
   107d6:	movs	r2, r0
   107d8:	b.n	10190 <report_qgroups@@Base+0xd8>
   107da:	movs	r2, r0
   107dc:	b.n	105e8 <qgroup_verify_all@@Base+0x1fc>
   107de:	movs	r2, r0
   107e0:	add	r0, pc, #952	; (adr r0, 10b9c <repair_qgroups@@Base+0x2f4>)
   107e2:	movs	r5, r0
   107e4:	stc	15, cr15, [sp, #-1020]	; 0xfffffc04
   107e8:	b.n	1041c <qgroup_verify_all@@Base+0x30>
   107ea:	movs	r2, r0
   107ec:	b.n	1016c <report_qgroups@@Base+0xb4>
   107ee:	movs	r2, r0
   107f0:	b.n	101fe <report_qgroups@@Base+0x146>
   107f2:	movs	r2, r0

000107f4 <print_extent_state@@Base>:
   107f4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   107f8:	mov	r6, r0
   107fa:	movs	r0, #0
   107fc:	mov	r7, r3
   107fe:	mov	r8, r2
   10800:	bl	eff8 <ulist_alloc@@Base>
   10804:	ldr	r3, [pc, #124]	; (10884 <print_extent_state@@Base+0x90>)
   10806:	ldr	r5, [pc, #128]	; (10888 <print_extent_state@@Base+0x94>)
   10808:	add	r3, pc
   1080a:	add	r5, pc
   1080c:	str	r0, [r3, #28]
   1080e:	cbnz	r0, 10826 <print_extent_state@@Base+0x32>
   10810:	ldr	r3, [pc, #120]	; (1088c <print_extent_state@@Base+0x98>)
   10812:	movs	r4, #12
   10814:	ldr	r0, [pc, #120]	; (10890 <print_extent_state@@Base+0x9c>)
   10816:	ldr	r3, [r5, r3]
   10818:	add	r0, pc
   1081a:	ldr	r1, [r3, #0]
   1081c:	blx	8de4 <fputs@plt+0x4>
   10820:	mov	r0, r4
   10822:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10826:	mov	r0, r6
   10828:	bl	fa60 <ulist_next@@Base+0x868>
   1082c:	mov	r4, r0
   1082e:	cbz	r0, 10856 <print_extent_state@@Base+0x62>
   10830:	ldr	r3, [pc, #88]	; (1088c <print_extent_state@@Base+0x98>)
   10832:	ldr	r2, [pc, #96]	; (10894 <print_extent_state@@Base+0xa0>)
   10834:	add	r2, pc
   10836:	ldr	r0, [r5, r3]
   10838:	mov	r3, r4
   1083a:	ldr	r0, [r0, #0]
   1083c:	movs	r1, #1
   1083e:	blx	8ca0 <__fprintf_chk@plt+0x4>
   10842:	bl	f3c4 <ulist_next@@Base+0x1cc>
   10846:	ldr	r0, [pc, #80]	; (10898 <print_extent_state@@Base+0xa4>)
   10848:	ldr	r1, [pc, #80]	; (1089c <print_extent_state@@Base+0xa8>)
   1084a:	add	r0, pc
   1084c:	add	r1, pc
   1084e:	adds	r0, #24
   10850:	bl	1ad82 <rb_free_nodes@@Base>
   10854:	b.n	10820 <print_extent_state@@Base+0x2c>
   10856:	mov	r0, r6
   10858:	bl	ff80 <ulist_next@@Base+0xd88>
   1085c:	mov	r4, r0
   1085e:	cbz	r0, 1086c <print_extent_state@@Base+0x78>
   10860:	ldr	r3, [pc, #40]	; (1088c <print_extent_state@@Base+0x98>)
   10862:	ldr	r2, [pc, #60]	; (108a0 <print_extent_state@@Base+0xac>)
   10864:	ldr	r0, [r5, r3]
   10866:	add	r2, pc
   10868:	mov	r3, r4
   1086a:	b.n	1083a <print_extent_state@@Base+0x46>
   1086c:	ldr	r0, [pc, #52]	; (108a4 <print_extent_state@@Base+0xb0>)
   1086e:	add	r0, pc
   10870:	blx	8a78 <puts@plt+0x4>
   10874:	mov	r0, r4
   10876:	mov	r2, r8
   10878:	mov	r3, r7
   1087a:	bl	f4ac <ulist_next@@Base+0x2b4>
   1087e:	mov	r4, r0
   10880:	b.n	10842 <print_extent_state@@Base+0x4e>
   10882:	nop
   10884:	ldr	r6, [sp, #240]	; 0xf0
   10886:	movs	r5, r0
   10888:	strh	r6, [r4, #40]	; 0x28
   1088a:	movs	r5, r0
   1088c:	lsls	r4, r1, #10
   1088e:	movs	r0, r0
   10890:	b.n	11044 <repair_qgroups@@Base+0x79c>
   10892:	movs	r2, r0
   10894:	b.n	10100 <report_qgroups@@Base+0x48>
   10896:	movs	r2, r0
   10898:	ldr	r5, [sp, #1000]	; 0x3e8
   1089a:	movs	r5, r0
   1089c:			; <UNDEFINED> instruction: 0xea19ffff
   108a0:	b.n	100f6 <report_qgroups@@Base+0x3e>
   108a2:	movs	r2, r0
   108a4:	b.n	10128 <report_qgroups@@Base+0x70>
   108a6:	movs	r2, r0

000108a8 <repair_qgroups@@Base>:
   108a8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   108ac:	mov	r6, r1
   108ae:	vpush	{d8}
   108b2:	ldr	r1, [pc, #620]	; (10b20 <repair_qgroups@@Base+0x278>)
   108b4:	ldr	r2, [pc, #620]	; (10b24 <repair_qgroups@@Base+0x27c>)
   108b6:	add	r1, pc
   108b8:	ldr	r3, [pc, #620]	; (10b28 <repair_qgroups@@Base+0x280>)
   108ba:	sub	sp, #124	; 0x7c
   108bc:	add	r3, pc
   108be:	str	r0, [sp, #16]
   108c0:	ldr	r2, [r1, r2]
   108c2:	ldr	r2, [r2, #0]
   108c4:	str	r2, [sp, #116]	; 0x74
   108c6:	mov.w	r2, #0
   108ca:	movs	r2, #0
   108cc:	str	r2, [r6, #0]
   108ce:	ldr	r2, [pc, #604]	; (10b2c <repair_qgroups@@Base+0x284>)
   108d0:	ldr	r3, [r3, r2]
   108d2:	ldr	r3, [r3, #0]
   108d4:	cbnz	r3, 108ee <repair_qgroups@@Base+0x46>
   108d6:	movs	r4, #0
   108d8:	ldr	r2, [pc, #596]	; (10b30 <repair_qgroups@@Base+0x288>)
   108da:	ldr	r3, [pc, #584]	; (10b24 <repair_qgroups@@Base+0x27c>)
   108dc:	add	r2, pc
   108de:	ldr	r3, [r2, r3]
   108e0:	ldr	r2, [r3, #0]
   108e2:	ldr	r3, [sp, #116]	; 0x74
   108e4:	eors	r2, r3
   108e6:	beq.w	10b12 <repair_qgroups@@Base+0x26a>
   108ea:	blx	88e4 <__stack_chk_fail@plt>
   108ee:	ldr	r3, [pc, #580]	; (10b34 <repair_qgroups@@Base+0x28c>)
   108f0:	add	r3, pc
   108f2:	str	r3, [sp, #20]
   108f4:	ldr	r5, [r3, #0]
   108f6:	ldr	r3, [pc, #576]	; (10b38 <repair_qgroups@@Base+0x290>)
   108f8:	add	r3, pc
   108fa:	ldr.w	r2, [r5], #-136
   108fe:	vmov	s16, r3
   10902:	ldr	r3, [pc, #568]	; (10b3c <repair_qgroups@@Base+0x294>)
   10904:	sub.w	r8, r2, #136	; 0x88
   10908:	add	r3, pc
   1090a:	vmov	s17, r3
   1090e:	ldr	r2, [sp, #20]
   10910:	add.w	r3, r5, #136	; 0x88
   10914:	str	r3, [sp, #12]
   10916:	cmp	r3, r2
   10918:	bne.n	10956 <repair_qgroups@@Base+0xae>
   1091a:	ldr	r3, [r6, #0]
   1091c:	cbnz	r3, 10928 <repair_qgroups@@Base+0x80>
   1091e:	ldr	r3, [pc, #544]	; (10b40 <repair_qgroups@@Base+0x298>)
   10920:	add	r3, pc
   10922:	ldrb	r3, [r3, #8]
   10924:	lsls	r3, r3, #30
   10926:	beq.n	108d6 <repair_qgroups@@Base+0x2e>
   10928:	ldr	r3, [sp, #16]
   1092a:	ldr	r0, [pc, #536]	; (10b44 <repair_qgroups@@Base+0x29c>)
   1092c:	ldr.w	r8, [r3, #44]	; 0x2c
   10930:	add	r0, pc
   10932:	blx	8a78 <puts@plt+0x4>
   10936:	movs	r1, #1
   10938:	mov	r0, r8
   1093a:	bl	2e404 <btrfs_start_transaction@@Base>
   1093e:	cmn.w	r0, #4096	; 0x1000
   10942:	mov	r5, r0
   10944:	bls.w	10a60 <repair_qgroups@@Base+0x1b8>
   10948:	mov	r4, r0
   1094a:	cmp	r4, #0
   1094c:	bne.n	108d8 <repair_qgroups@@Base+0x30>
   1094e:	ldr	r3, [r6, #0]
   10950:	adds	r3, #1
   10952:	str	r3, [r6, #0]
   10954:	b.n	108d8 <repair_qgroups@@Base+0x30>
   10956:	ldr	r3, [sp, #16]
   10958:	mov.w	r9, #0
   1095c:	ldrd	r1, r2, [r5]
   10960:	movs	r0, #1
   10962:	ldr.w	fp, [r3, #44]	; 0x2c
   10966:	uxth	r3, r2
   10968:	lsrs	r2, r2, #16
   1096a:	strd	r1, r3, [sp]
   1096e:	mov	r3, r9
   10970:	vmov	r1, s16
   10974:	blx	8c6c <__printf_chk@plt+0x4>
   10978:	movs	r1, #1
   1097a:	mov	r0, fp
   1097c:	bl	2e404 <btrfs_start_transaction@@Base>
   10980:	cmn.w	r0, #4096	; 0x1000
   10984:	mov	r7, r0
   10986:	bls.n	109ae <repair_qgroups@@Base+0x106>
   10988:	mov	r4, r0
   1098a:	cmp	r4, #0
   1098c:	bne.n	108d8 <repair_qgroups@@Base+0x30>
   1098e:	ldr	r3, [r6, #0]
   10990:	adds	r3, #1
   10992:	str	r3, [r6, #0]
   10994:	ldrd	r2, r3, [r5, #136]	; 0x88
   10998:	str	r3, [r2, #4]
   1099a:	str	r2, [r3, #0]
   1099c:	ldr	r3, [sp, #12]
   1099e:	strd	r3, r3, [r5, #136]	; 0x88
   109a2:	mov	r5, r8
   109a4:	ldr.w	r3, [r8, #136]	; 0x88
   109a8:	sub.w	r8, r3, #136	; 0x88
   109ac:	b.n	1090e <repair_qgroups@@Base+0x66>
   109ae:	add.w	sl, sp, #48	; 0x30
   109b2:	mov	r0, sl
   109b4:	bl	1b2cc <btrfs_init_path@@Base>
   109b8:	movs	r3, #242	; 0xf2
   109ba:	strd	r9, r9, [sp, #28]
   109be:	mov	r1, fp
   109c0:	strb.w	r3, [sp, #36]	; 0x24
   109c4:	mov	r0, r7
   109c6:	ldrd	r2, r3, [r5]
   109ca:	str.w	r2, [sp, #37]	; 0x25
   109ce:	add	r2, sp, #28
   109d0:	str.w	r3, [sp, #41]	; 0x29
   109d4:	movs	r3, #1
   109d6:	strd	r9, r3, [sp]
   109da:	mov	r3, sl
   109dc:	bl	1d6c0 <btrfs_search_slot@@Base>
   109e0:	mov	r4, r0
   109e2:	cbz	r0, 10a12 <repair_qgroups@@Base+0x16a>
   109e4:	ldrd	r1, r2, [r5]
   109e8:	vmov	r0, s17
   109ec:	uxth	r3, r2
   109ee:	lsrs	r2, r2, #16
   109f0:	strd	r1, r3, [sp]
   109f4:	mov	r3, r9
   109f6:	bl	1a900 <__btrfs_error@@Base>
   109fa:	cmp	r4, #0
   109fc:	it	gt
   109fe:	mvngt.w	r4, #1
   10a02:	mov	r1, fp
   10a04:	mov	r0, r7
   10a06:	bl	2e684 <btrfs_commit_transaction@@Base>
   10a0a:	mov	r0, sl
   10a0c:	bl	1b2dc <btrfs_release_path@@Base>
   10a10:	b.n	1098a <repair_qgroups@@Base+0xe2>
   10a12:	ldr	r2, [sp, #48]	; 0x30
   10a14:	movs	r1, #25
   10a16:	ldr	r3, [sp, #80]	; 0x50
   10a18:	adds	r2, #96	; 0x60
   10a1a:	ldr	r0, [r7, #12]
   10a1c:	mla	r3, r1, r3, r2
   10a20:	ldr	r1, [r7, #8]
   10a22:	ldr.w	r3, [r3, #118]	; 0x76
   10a26:	adds	r3, #101	; 0x65
   10a28:	add.w	ip, r2, r3
   10a2c:	str	r1, [r2, r3]
   10a2e:	str.w	r0, [ip, #4]
   10a32:	ldr	r0, [sp, #48]	; 0x30
   10a34:	ldrd	r2, r1, [r5, #64]	; 0x40
   10a38:	add.w	ip, r0, #96	; 0x60
   10a3c:	add	r3, ip
   10a3e:	str	r2, [r3, #8]
   10a40:	str	r1, [r3, #12]
   10a42:	ldrd	r1, r2, [r5, #72]	; 0x48
   10a46:	str	r1, [r3, #16]
   10a48:	str	r2, [r3, #20]
   10a4a:	ldrd	r1, r2, [r5, #80]	; 0x50
   10a4e:	str	r1, [r3, #24]
   10a50:	str	r2, [r3, #28]
   10a52:	ldrd	r1, r2, [r5, #88]	; 0x58
   10a56:	str	r1, [r3, #32]
   10a58:	str	r2, [r3, #36]	; 0x24
   10a5a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   10a5e:	b.n	10a02 <repair_qgroups@@Base+0x15a>
   10a60:	add	r7, sp, #48	; 0x30
   10a62:	mov.w	r9, #1
   10a66:	mov	r0, r7
   10a68:	bl	1b2cc <btrfs_init_path@@Base>
   10a6c:	movs	r3, #0
   10a6e:	movs	r2, #240	; 0xf0
   10a70:	strd	r3, r3, [sp, #28]
   10a74:	strb.w	r2, [sp, #36]	; 0x24
   10a78:	mov	r1, r8
   10a7a:	strb.w	r3, [sp, #37]	; 0x25
   10a7e:	add	r2, sp, #28
   10a80:	strb.w	r3, [sp, #38]	; 0x26
   10a84:	mov	r0, r5
   10a86:	strb.w	r3, [sp, #39]	; 0x27
   10a8a:	strb.w	r3, [sp, #40]	; 0x28
   10a8e:	strb.w	r3, [sp, #41]	; 0x29
   10a92:	strb.w	r3, [sp, #42]	; 0x2a
   10a96:	strb.w	r3, [sp, #43]	; 0x2b
   10a9a:	strb.w	r3, [sp, #44]	; 0x2c
   10a9e:	strd	r3, r9, [sp]
   10aa2:	mov	r3, r7
   10aa4:	bl	1d6c0 <btrfs_search_slot@@Base>
   10aa8:	mov	r4, r0
   10aaa:	cbz	r0, 10acc <repair_qgroups@@Base+0x224>
   10aac:	ldr	r0, [pc, #152]	; (10b48 <repair_qgroups@@Base+0x2a0>)
   10aae:	add	r0, pc
   10ab0:	bl	1a900 <__btrfs_error@@Base>
   10ab4:	cmp	r4, #0
   10ab6:	it	gt
   10ab8:	mvngt.w	r4, #1
   10abc:	mov	r1, r8
   10abe:	mov	r0, r5
   10ac0:	bl	2e684 <btrfs_commit_transaction@@Base>
   10ac4:	mov	r0, r7
   10ac6:	bl	1b2dc <btrfs_release_path@@Base>
   10aca:	b.n	1094a <repair_qgroups@@Base+0xa2>
   10acc:	ldr	r0, [sp, #48]	; 0x30
   10ace:	movs	r1, #25
   10ad0:	ldr	r2, [sp, #80]	; 0x50
   10ad2:	add.w	r3, r0, #96	; 0x60
   10ad6:	mla	r2, r1, r2, r3
   10ada:	ldr.w	r2, [r2, #118]	; 0x76
   10ade:	adds	r2, #101	; 0x65
   10ae0:	add	r3, r2
   10ae2:	strb.w	r9, [r3, #16]
   10ae6:	strb	r4, [r3, #17]
   10ae8:	strb	r4, [r3, #18]
   10aea:	strb	r4, [r3, #19]
   10aec:	strb	r4, [r3, #20]
   10aee:	strb	r4, [r3, #21]
   10af0:	strb	r4, [r3, #22]
   10af2:	strb	r4, [r3, #23]
   10af4:	strb	r4, [r3, #24]
   10af6:	strb	r4, [r3, #25]
   10af8:	strb	r4, [r3, #26]
   10afa:	strb	r4, [r3, #27]
   10afc:	strb	r4, [r3, #28]
   10afe:	strb	r4, [r3, #29]
   10b00:	strb	r4, [r3, #30]
   10b02:	strb	r4, [r3, #31]
   10b04:	ldrd	r1, r2, [r5, #8]
   10b08:	str	r1, [r3, #8]
   10b0a:	str	r2, [r3, #12]
   10b0c:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   10b10:	b.n	10abc <repair_qgroups@@Base+0x214>
   10b12:	mov	r0, r4
   10b14:	add	sp, #124	; 0x7c
   10b16:	vpop	{d8}
   10b1a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10b1e:	nop
   10b20:	strh	r2, [r7, #34]	; 0x22
   10b22:	movs	r5, r0
   10b24:	lsls	r4, r7, #9
   10b26:	movs	r0, r0
   10b28:	strh	r4, [r6, #34]	; 0x22
   10b2a:	movs	r5, r0
   10b2c:	lsls	r4, r3, #10
   10b2e:	movs	r0, r0
   10b30:	strh	r4, [r2, #34]	; 0x22
   10b32:	movs	r5, r0
   10b34:	strh	r4, [r2, #62]	; 0x3e
   10b36:	movs	r5, r0
   10b38:	b.n	112e0 <repair_qgroups@@Base+0xa38>
   10b3a:	movs	r2, r0
   10b3c:	b.n	112f6 <repair_qgroups@@Base+0xa4e>
   10b3e:	movs	r2, r0
   10b40:	ldr	r5, [sp, #144]	; 0x90
   10b42:	movs	r5, r0
   10b44:	b.n	1130a <repair_qgroups@@Base+0xa62>
   10b46:	movs	r2, r0
   10b48:	b.n	11046 <repair_qgroups@@Base+0x79e>
   10b4a:	movs	r2, r0
   10b4c:	push	{r4, lr}
   10b4e:	cbnz	r0, 10b52 <repair_qgroups@@Base+0x2aa>
   10b50:	pop	{r4, pc}
   10b52:	ldr	r4, [r0, #16]
   10b54:	blx	87cc <free@plt+0x4>
   10b58:	mov	r0, r4
   10b5a:	b.n	10b4e <repair_qgroups@@Base+0x2a6>
   10b5c:	ldr	r2, [pc, #92]	; (10bbc <repair_qgroups@@Base+0x314>)
   10b5e:	ldr	r3, [pc, #96]	; (10bc0 <repair_qgroups@@Base+0x318>)
   10b60:	add	r2, pc
   10b62:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   10b66:	mov	r5, r0
   10b68:	ldr	r3, [r2, r3]
   10b6a:	mov	r8, sp
   10b6c:	movs	r6, #0
   10b6e:	movs	r7, #0
   10b70:	ldr	r3, [r3, #0]
   10b72:	str	r3, [sp, #4]
   10b74:	mov.w	r3, #0
   10b78:	movs	r3, #0
   10b7a:	str	r3, [sp, #0]
   10b7c:	mov	r1, r8
   10b7e:	mov	r0, r5
   10b80:	bl	f1f8 <ulist_next@@Base>
   10b84:	mov	r4, r0
   10b86:	cbnz	r0, 10ba2 <repair_qgroups@@Base+0x2fa>
   10b88:	mov	r0, r5
   10b8a:	bl	f00c <ulist_free@@Base>
   10b8e:	ldr	r2, [pc, #52]	; (10bc4 <repair_qgroups@@Base+0x31c>)
   10b90:	ldr	r3, [pc, #44]	; (10bc0 <repair_qgroups@@Base+0x318>)
   10b92:	add	r2, pc
   10b94:	ldr	r3, [r2, r3]
   10b96:	ldr	r2, [r3, #0]
   10b98:	ldr	r3, [sp, #4]
   10b9a:	eors	r2, r3
   10b9c:	beq.n	10bb6 <repair_qgroups@@Base+0x30e>
   10b9e:	blx	88e4 <__stack_chk_fail@plt>
   10ba2:	ldrd	r0, r1, [r4, #8]
   10ba6:	orrs.w	r3, r0, r1
   10baa:	beq.n	10b7c <repair_qgroups@@Base+0x2d4>
   10bac:	bl	10b4c <repair_qgroups@@Base+0x2a4>
   10bb0:	strd	r6, r7, [r4, #8]
   10bb4:	b.n	10b7c <repair_qgroups@@Base+0x2d4>
   10bb6:	add	sp, #8
   10bb8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10bbc:	strh	r0, [r2, #14]
   10bbe:	movs	r5, r0
   10bc0:	lsls	r4, r7, #9
   10bc2:	movs	r0, r0
   10bc4:	strh	r6, [r3, #12]
   10bc6:	movs	r5, r0
   10bc8:	push	{r4, lr}
   10bca:	mov	r4, r1
   10bcc:	ldr	r1, [pc, #84]	; (10c24 <repair_qgroups@@Base+0x37c>)
   10bce:	sub	sp, #24
   10bd0:	ldr	r3, [pc, #84]	; (10c28 <repair_qgroups@@Base+0x380>)
   10bd2:	add	r1, pc
   10bd4:	ldr	r3, [r1, r3]
   10bd6:	mov	r1, sp
   10bd8:	ldr	r3, [r3, #0]
   10bda:	str	r3, [sp, #20]
   10bdc:	mov.w	r3, #0
   10be0:	movs	r3, #25
   10be2:	muls	r2, r3
   10be4:	movs	r3, #17
   10be6:	adds	r2, #101	; 0x65
   10be8:	bl	1a79e <read_extent_buffer@@Base>
   10bec:	ldr.w	r3, [sp, #13]
   10bf0:	ldr.w	r2, [sp, #9]
   10bf4:	str.w	r3, [r4, #13]
   10bf8:	ldrb.w	r3, [sp, #8]
   10bfc:	str.w	r2, [r4, #9]
   10c00:	ldr	r2, [pc, #40]	; (10c2c <repair_qgroups@@Base+0x384>)
   10c02:	strb	r3, [r4, #8]
   10c04:	ldr	r3, [sp, #0]
   10c06:	add	r2, pc
   10c08:	str	r3, [r4, #0]
   10c0a:	ldr	r3, [sp, #4]
   10c0c:	str	r3, [r4, #4]
   10c0e:	ldr	r3, [pc, #24]	; (10c28 <repair_qgroups@@Base+0x380>)
   10c10:	ldr	r3, [r2, r3]
   10c12:	ldr	r2, [r3, #0]
   10c14:	ldr	r3, [sp, #20]
   10c16:	eors	r2, r3
   10c18:	beq.n	10c1e <repair_qgroups@@Base+0x376>
   10c1a:	blx	88e4 <__stack_chk_fail@plt>
   10c1e:	add	sp, #24
   10c20:	pop	{r4, pc}
   10c22:	nop
   10c24:	strh	r6, [r3, #10]
   10c26:	movs	r5, r0
   10c28:	lsls	r4, r7, #9
   10c2a:	movs	r0, r0
   10c2c:	strh	r2, [r5, #8]
   10c2e:	movs	r5, r0
   10c30:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c34:	adds	r1, #96	; 0x60
   10c36:	add	r2, r1
   10c38:	ldrd	r8, r9, [sp, #48]	; 0x30
   10c3c:	ldr.w	fp, [sp, #56]	; 0x38
   10c40:	mov	sl, r0
   10c42:	ldrb	r3, [r2, #16]
   10c44:	cmp	r3, #0
   10c46:	bne.n	10cc0 <repair_qgroups@@Base+0x418>
   10c48:	ldrb	r3, [r2, #17]
   10c4a:	cmp	r3, #0
   10c4c:	bne.n	10cc0 <repair_qgroups@@Base+0x418>
   10c4e:	ldrh	r3, [r2, #18]
   10c50:	cbnz	r3, 10cc0 <repair_qgroups@@Base+0x418>
   10c52:	mov	r3, r2
   10c54:	ldr.w	r1, [r3, #37]!
   10c58:	ldr	r3, [r3, #4]
   10c5a:	str	r1, [sp, #0]
   10c5c:	str	r3, [sp, #4]
   10c5e:	ldrd	r4, r5, [sp]
   10c62:	ldr.w	r3, [r2, #45]!
   10c66:	cmp	r9, r5
   10c68:	it	eq
   10c6a:	cmpeq	r8, r4
   10c6c:	ldr	r1, [r2, #4]
   10c6e:	bcc.n	10cc6 <repair_qgroups@@Base+0x41e>
   10c70:	ldr	r2, [sp, #0]
   10c72:	adds	r6, r3, r2
   10c74:	ldr	r3, [sp, #4]
   10c76:	adc.w	r7, r1, r3
   10c7a:	cmp	r9, r7
   10c7c:	it	eq
   10c7e:	cmpeq	r8, r6
   10c80:	bcs.n	10cc6 <repair_qgroups@@Base+0x41e>
   10c82:	ldr	r3, [sp, #4]
   10c84:	subs.w	r4, r8, r2
   10c88:	sbc.w	r5, r9, r3
   10c8c:	movs	r0, #24
   10c8e:	blx	8a94 <malloc@plt+0x4>
   10c92:	cbz	r0, 10cca <repair_qgroups@@Base+0x422>
   10c94:	ldr.w	r3, [fp]
   10c98:	str	r3, [r0, #16]
   10c9a:	ldrd	r2, r3, [sl]
   10c9e:	strd	r2, r3, [r0]
   10ca2:	ldr.w	r3, [sl, #9]
   10ca6:	ldr.w	r2, [sl, #13]
   10caa:	adds	r3, r3, r4
   10cac:	str.w	r0, [fp]
   10cb0:	adc.w	r2, r5, r2
   10cb4:	strd	r3, r2, [r0, #8]
   10cb8:	movs	r0, #0
   10cba:	add	sp, #12
   10cbc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cc0:	movs	r4, #0
   10cc2:	mov	r5, r4
   10cc4:	b.n	10c8c <repair_qgroups@@Base+0x3e4>
   10cc6:	movs	r0, #1
   10cc8:	b.n	10cba <repair_qgroups@@Base+0x412>
   10cca:	mvn.w	r0, #11
   10cce:	b.n	10cba <repair_qgroups@@Base+0x412>
   10cd0:	ldr	r2, [pc, #60]	; (10d10 <repair_qgroups@@Base+0x468>)
   10cd2:	movs	r1, #16
   10cd4:	ldr	r3, [pc, #60]	; (10d14 <repair_qgroups@@Base+0x46c>)
   10cd6:	push	{r4, lr}
   10cd8:	add	r2, pc
   10cda:	sub	sp, #72	; 0x48
   10cdc:	add	r4, sp, #4
   10cde:	ldr	r3, [r2, r3]
   10ce0:	mov	r0, r4
   10ce2:	ldr	r3, [r3, #0]
   10ce4:	str	r3, [sp, #68]	; 0x44
   10ce6:	mov.w	r3, #0
   10cea:	blx	8ae0 <backtrace@plt>
   10cee:	movs	r2, #2
   10cf0:	mov	r1, r0
   10cf2:	mov	r0, r4
   10cf4:	blx	8e50 <backtrace_symbols_fd@plt>
   10cf8:	ldr	r2, [pc, #28]	; (10d18 <repair_qgroups@@Base+0x470>)
   10cfa:	ldr	r3, [pc, #24]	; (10d14 <repair_qgroups@@Base+0x46c>)
   10cfc:	add	r2, pc
   10cfe:	ldr	r3, [r2, r3]
   10d00:	ldr	r2, [r3, #0]
   10d02:	ldr	r3, [sp, #68]	; 0x44
   10d04:	eors	r2, r3
   10d06:	beq.n	10d0c <repair_qgroups@@Base+0x464>
   10d08:	blx	88e4 <__stack_chk_fail@plt>
   10d0c:	add	sp, #72	; 0x48
   10d0e:	pop	{r4, pc}
   10d10:	strh	r0, [r3, #2]
   10d12:	movs	r5, r0
   10d14:	lsls	r4, r7, #9
   10d16:	movs	r0, r0
   10d18:	strh	r4, [r6, #0]
   10d1a:	movs	r5, r0
   10d1c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10d20:	mov	r8, r0
   10d22:	movs	r0, #64	; 0x40
   10d24:	ldr	r5, [sp, #32]
   10d26:	ldrd	r6, r7, [sp, #40]	; 0x28
   10d2a:	mov	sl, r2
   10d2c:	mov	r9, r3
   10d2e:	blx	8a94 <malloc@plt+0x4>
   10d32:	mov	r4, r0
   10d34:	cbz	r0, 10d94 <repair_qgroups@@Base+0x4ec>
   10d36:	strd	sl, r9, [r0, #8]
   10d3a:	adds	r0, #16
   10d3c:	cbz	r5, 10d78 <repair_qgroups@@Base+0x4d0>
   10d3e:	mov	ip, r0
   10d40:	ldmia	r5!, {r0, r1, r2, r3}
   10d42:	stmia.w	ip!, {r0, r1, r2, r3}
   10d46:	ldr	r3, [r5, #0]
   10d48:	strb.w	r3, [ip]
   10d4c:	ldr	r3, [sp, #36]	; 0x24
   10d4e:	movs	r1, #0
   10d50:	mov	r0, r1
   10d52:	str	r1, [r4, #44]	; 0x2c
   10d54:	strd	r6, r7, [r4, #48]	; 0x30
   10d58:	str	r3, [r4, #36]	; 0x24
   10d5a:	ldr	r3, [sp, #56]	; 0x38
   10d5c:	str	r3, [r4, #40]	; 0x28
   10d5e:	ldrd	r2, r3, [sp, #48]	; 0x30
   10d62:	strd	r2, r3, [r4, #56]	; 0x38
   10d66:	ldr.w	r3, [r8, #4]
   10d6a:	str.w	r4, [r8, #4]
   10d6e:	strd	r8, r3, [r4]
   10d72:	str	r4, [r3, #0]
   10d74:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10d78:	orrs.w	r3, r6, r7
   10d7c:	mov.w	r2, #17
   10d80:	mov	r1, r5
   10d82:	beq.n	10d8a <repair_qgroups@@Base+0x4e2>
   10d84:	blx	8bf8 <memset@plt+0x4>
   10d88:	b.n	10d4c <repair_qgroups@@Base+0x4a4>
   10d8a:	blx	8bf8 <memset@plt+0x4>
   10d8e:	add.w	r8, r8, #8
   10d92:	b.n	10d4c <repair_qgroups@@Base+0x4a4>
   10d94:	mvn.w	r0, #11
   10d98:	b.n	10d74 <repair_qgroups@@Base+0x4cc>
   10d9a:	push	{r0, r1, r2, r3, r4, lr}
   10d9c:	ldr	r4, [pc, #36]	; (10dc4 <repair_qgroups@@Base+0x51c>)
   10d9e:	ldr	r5, [pc, #40]	; (10dc8 <repair_qgroups@@Base+0x520>)
   10da0:	add	r4, pc
   10da2:	ldr	r4, [r4, r5]
   10da4:	ldr	r5, [sp, #24]
   10da6:	strd	r3, r2, [sp]
   10daa:	mov	r3, r1
   10dac:	ldr	r2, [pc, #28]	; (10dcc <repair_qgroups@@Base+0x524>)
   10dae:	movs	r1, #1
   10db0:	strd	r0, r5, [sp, #8]
   10db4:	add	r2, pc
   10db6:	ldr	r0, [r4, #0]
   10db8:	blx	8ca0 <__fprintf_chk@plt+0x4>
   10dbc:	bl	10cd0 <repair_qgroups@@Base+0x428>
   10dc0:	blx	8e08 <abort@plt>
   10dc4:	ldrb	r0, [r2, #30]
   10dc6:	movs	r5, r0
   10dc8:	lsls	r4, r1, #10
   10dca:	movs	r0, r0
   10dcc:	stmia	r1!, {r0, r1, r4, r5, r6, r7}
   10dce:	movs	r2, r0
   10dd0:	push	{r0, r1, r2, lr}
   10dd2:	movs	r3, #1
   10dd4:	ldr	r2, [pc, #20]	; (10dec <repair_qgroups@@Base+0x544>)
   10dd6:	ldr	r1, [pc, #24]	; (10df0 <repair_qgroups@@Base+0x548>)
   10dd8:	ldr	r0, [pc, #24]	; (10df4 <repair_qgroups@@Base+0x54c>)
   10dda:	add	r2, pc
   10ddc:	str	r3, [sp, #0]
   10dde:	add	r1, pc
   10de0:	add	r0, pc
   10de2:	movw	r3, #1818	; 0x71a
   10de6:	bl	10d9a <repair_qgroups@@Base+0x4f2>
   10dea:	nop
   10dec:	b.n	1104c <repair_qgroups@@Base+0x7a4>
   10dee:	movs	r2, r0
   10df0:	stmia	r2!, {r3, r5}
   10df2:	movs	r2, r0
   10df4:	asrs	r5, r2, #5
   10df6:	movs	r3, r0
   10df8:	push	{r0, r1, r2, r3, r4, lr}
   10dfa:	ldr	r3, [pc, #40]	; (10e24 <repair_qgroups@@Base+0x57c>)
   10dfc:	ldr	r4, [pc, #40]	; (10e28 <repair_qgroups@@Base+0x580>)
   10dfe:	add	r3, pc
   10e00:	ldr	r4, [r3, r4]
   10e02:	movs	r3, #0
   10e04:	strd	r2, r1, [sp]
   10e08:	movs	r1, #1
   10e0a:	strd	r0, r3, [sp, #8]
   10e0e:	ldr	r2, [pc, #28]	; (10e2c <repair_qgroups@@Base+0x584>)
   10e10:	ldr	r3, [pc, #28]	; (10e30 <repair_qgroups@@Base+0x588>)
   10e12:	add	r2, pc
   10e14:	ldr	r0, [r4, #0]
   10e16:	add	r3, pc
   10e18:	blx	8ca0 <__fprintf_chk@plt+0x4>
   10e1c:	bl	10cd0 <repair_qgroups@@Base+0x428>
   10e20:	blx	8e08 <abort@plt>
   10e24:	ldrb	r2, [r6, #28]
   10e26:	movs	r5, r0
   10e28:	lsls	r4, r1, #10
   10e2a:	movs	r0, r0
   10e2c:	bpl.n	10ee4 <repair_qgroups@@Base+0x63c>
   10e2e:	movs	r2, r0
   10e30:	svc	178	; 0xb2
   10e32:	movs	r2, r0
   10e34:	push	{r0, r1, r2, lr}
   10e36:	cbz	r3, 10e48 <repair_qgroups@@Base+0x5a0>
   10e38:	movs	r3, #1
   10e3a:	str	r3, [sp, #0]
   10e3c:	mov	r3, r2
   10e3e:	mov	r2, r1
   10e40:	ldr	r1, [pc, #12]	; (10e50 <repair_qgroups@@Base+0x5a8>)
   10e42:	add	r1, pc
   10e44:	bl	10d9a <repair_qgroups@@Base+0x4f2>
   10e48:	add	sp, #12
   10e4a:	ldr.w	pc, [sp], #4
   10e4e:	nop
   10e50:	svc	134	; 0x86
   10e52:	movs	r2, r0
   10e54:	push	{r4, r5, lr}
   10e56:	sub	sp, #20
   10e58:	ldr	r4, [pc, #36]	; (10e80 <repair_qgroups@@Base+0x5d8>)
   10e5a:	ldr	r5, [pc, #40]	; (10e84 <repair_qgroups@@Base+0x5dc>)
   10e5c:	add	r4, pc
   10e5e:	ldr	r4, [r4, r5]
   10e60:	strd	r2, r1, [sp]
   10e64:	movs	r1, #1
   10e66:	strd	r0, r3, [sp, #8]
   10e6a:	ldr	r2, [pc, #28]	; (10e88 <repair_qgroups@@Base+0x5e0>)
   10e6c:	ldr	r3, [pc, #28]	; (10e8c <repair_qgroups@@Base+0x5e4>)
   10e6e:	ldr	r0, [r4, #0]
   10e70:	add	r2, pc
   10e72:	add	r3, pc
   10e74:	blx	8ca0 <__fprintf_chk@plt+0x4>
   10e78:	add	sp, #20
   10e7a:	ldmia.w	sp!, {r4, r5, lr}
   10e7e:	b.n	10cd0 <repair_qgroups@@Base+0x428>
   10e80:	ldrb	r4, [r2, #27]
   10e82:	movs	r5, r0
   10e84:	lsls	r4, r1, #10
   10e86:	movs	r0, r0
   10e88:	bcc.n	10e3c <repair_qgroups@@Base+0x594>
   10e8a:	movs	r2, r0
   10e8c:	svc	86	; 0x56
   10e8e:	movs	r2, r0
   10e90:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   10e94:	mov	r5, r0
   10e96:	ldr	r4, [r0, #0]
   10e98:	mov	r9, r1
   10e9a:	cmp	r4, r5
   10e9c:	bne.n	10ea2 <repair_qgroups@@Base+0x5fa>
   10e9e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   10ea2:	ldr	r0, [r4, #0]
   10ea4:	ldr.w	r8, [r0]
   10ea8:	cmp	r0, r5
   10eaa:	bne.n	10eb0 <repair_qgroups@@Base+0x608>
   10eac:	ldr	r4, [r4, #0]
   10eae:	b.n	10e9a <repair_qgroups@@Base+0x5f2>
   10eb0:	cmp.w	r9, #1
   10eb4:	bne.n	10f30 <repair_qgroups@@Base+0x688>
   10eb6:	ldr	r2, [r4, #36]	; 0x24
   10eb8:	ldr	r3, [r0, #36]	; 0x24
   10eba:	cmp	r2, r3
   10ebc:	bne.n	10f44 <repair_qgroups@@Base+0x69c>
   10ebe:	ldrd	r6, r7, [r4, #8]
   10ec2:	ldrd	r2, r3, [r0, #8]
   10ec6:	cmp	r7, r3
   10ec8:	it	eq
   10eca:	cmpeq	r6, r2
   10ecc:	bne.n	10f44 <repair_qgroups@@Base+0x69c>
   10ece:	ldrb	r2, [r4, #24]
   10ed0:	ldrb	r3, [r0, #24]
   10ed2:	cmp	r2, r3
   10ed4:	bne.n	10f44 <repair_qgroups@@Base+0x69c>
   10ed6:	ldrd	r6, r7, [r4, #16]
   10eda:	ldrd	r2, r3, [r0, #16]
   10ede:	cmp	r7, r3
   10ee0:	it	eq
   10ee2:	cmpeq	r6, r2
   10ee4:	bne.n	10f44 <repair_qgroups@@Base+0x69c>
   10ee6:	ldr.w	r7, [r4, #29]
   10eea:	ldr.w	r3, [r0, #29]
   10eee:	ldr.w	r6, [r4, #25]
   10ef2:	ldr.w	r2, [r0, #25]
   10ef6:	cmp	r7, r3
   10ef8:	it	eq
   10efa:	cmpeq	r6, r2
   10efc:	bne.n	10f44 <repair_qgroups@@Base+0x69c>
   10efe:	ldrd	r6, r7, [r4, #48]	; 0x30
   10f02:	ldrd	r2, r3, [r0, #48]	; 0x30
   10f06:	cmp	r7, r3
   10f08:	it	eq
   10f0a:	cmpeq	r6, r2
   10f0c:	bne.n	10f44 <repair_qgroups@@Base+0x69c>
   10f0e:	ldr	r3, [r4, #44]	; 0x2c
   10f10:	cbz	r3, 10f50 <repair_qgroups@@Base+0x6a8>
   10f12:	ldr	r2, [r3, #16]
   10f14:	cbnz	r2, 10f4c <repair_qgroups@@Base+0x6a4>
   10f16:	ldr	r2, [r0, #44]	; 0x2c
   10f18:	str	r2, [r3, #16]
   10f1a:	ldr	r2, [r0, #40]	; 0x28
   10f1c:	ldr	r3, [r4, #40]	; 0x28
   10f1e:	add	r3, r2
   10f20:	str	r3, [r4, #40]	; 0x28
   10f22:	ldrd	r2, r3, [r0]
   10f26:	str	r3, [r2, #4]
   10f28:	str	r2, [r3, #0]
   10f2a:	blx	87cc <free@plt+0x4>
   10f2e:	b.n	10f44 <repair_qgroups@@Base+0x69c>
   10f30:	ldrd	r6, r7, [r4, #48]	; 0x30
   10f34:	orrs.w	r3, r6, r7
   10f38:	beq.n	10f44 <repair_qgroups@@Base+0x69c>
   10f3a:	ldrd	r2, r3, [r0, #48]	; 0x30
   10f3e:	orrs.w	r1, r2, r3
   10f42:	bne.n	10f06 <repair_qgroups@@Base+0x65e>
   10f44:	mov	r0, r8
   10f46:	ldr.w	r8, [r8]
   10f4a:	b.n	10ea8 <repair_qgroups@@Base+0x600>
   10f4c:	mov	r3, r2
   10f4e:	b.n	10f10 <repair_qgroups@@Base+0x668>
   10f50:	ldr	r3, [r0, #44]	; 0x2c
   10f52:	str	r3, [r4, #44]	; 0x2c
   10f54:	b.n	10f1a <repair_qgroups@@Base+0x672>
   10f56:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f5a:	movs	r6, #0
   10f5c:	vpush	{d8}
   10f60:	mov	r5, r0
   10f62:	sub	sp, #204	; 0xcc
   10f64:	strd	r2, r3, [sp, #32]
   10f68:	ldr	r3, [sp, #248]	; 0xf8
   10f6a:	ldr.w	r2, [pc, #2924]	; 11ad8 <repair_qgroups@@Base+0x1230>
   10f6e:	str	r1, [sp, #44]	; 0x2c
   10f70:	vmov	s17, r3
   10f74:	ldr	r3, [sp, #252]	; 0xfc
   10f76:	add	r2, pc
   10f78:	str	r3, [sp, #76]	; 0x4c
   10f7a:	ldr	r3, [sp, #256]	; 0x100
   10f7c:	str	r3, [sp, #72]	; 0x48
   10f7e:	ldr.w	r3, [pc, #2908]	; 11adc <repair_qgroups@@Base+0x1234>
   10f82:	ldr	r3, [r2, r3]
   10f84:	mov.w	r2, #4294967295	; 0xffffffff
   10f88:	ldr	r3, [r3, #0]
   10f8a:	str	r3, [sp, #196]	; 0xc4
   10f8c:	mov.w	r3, #0
   10f90:	add	r3, sp, #172	; 0xac
   10f92:	strd	r3, r3, [sp, #172]	; 0xac
   10f96:	add	r3, sp, #180	; 0xb4
   10f98:	strd	r3, r3, [sp, #180]	; 0xb4
   10f9c:	add	r3, sp, #188	; 0xbc
   10f9e:	strd	r3, r3, [sp, #188]	; 0xbc
   10fa2:	ldrd	r3, r4, [sp, #32]
   10fa6:	strb.w	r2, [sp, #121]	; 0x79
   10faa:	strb.w	r2, [sp, #122]	; 0x7a
   10fae:	strd	r3, r4, [sp, #112]	; 0x70
   10fb2:	ldr.w	r3, [r1, #308]	; 0x134
   10fb6:	strb.w	r2, [sp, #123]	; 0x7b
   10fba:	strb.w	r2, [sp, #124]	; 0x7c
   10fbe:	strb.w	r2, [sp, #125]	; 0x7d
   10fc2:	strb.w	r2, [sp, #126]	; 0x7e
   10fc6:	strb.w	r2, [sp, #127]	; 0x7f
   10fca:	strb.w	r2, [sp, #128]	; 0x80
   10fce:	str	r6, [sp, #92]	; 0x5c
   10fd0:	ldr.w	r1, [r3, #188]	; 0xbc
   10fd4:	mov	r3, r6
   10fd6:	and.w	r2, r1, #256	; 0x100
   10fda:	orrs	r3, r2
   10fdc:	ite	ne
   10fde:	movne	r3, #169	; 0xa9
   10fe0:	moveq	r3, #168	; 0xa8
   10fe2:	strb.w	r3, [sp, #120]	; 0x78
   10fe6:	bl	1b2d4 <btrfs_alloc_path@@Base>
   10fea:	mov	r4, r0
   10fec:	cmp	r0, #0
   10fee:	beq.w	11abc <repair_qgroups@@Base+0x1214>
   10ff2:	ldr	r1, [sp, #44]	; 0x2c
   10ff4:	add	r7, sp, #112	; 0x70
   10ff6:	mov	r3, r0
   10ff8:	strd	r6, r6, [sp]
   10ffc:	mov	r2, r7
   10ffe:	mov	r0, r5
   11000:	ldr	r1, [r1, #24]
   11002:	bl	1d6c0 <btrfs_search_slot@@Base>
   11006:	subs.w	r8, r0, #0
   1100a:	blt.w	111a0 <repair_qgroups@@Base+0x8f8>
   1100e:	ldr.w	r5, [pc, #2768]	; 11ae0 <repair_qgroups@@Base+0x1238>
   11012:	movw	r2, #762	; 0x2fa
   11016:	ldr.w	r0, [pc, #2764]	; 11ae4 <repair_qgroups@@Base+0x123c>
   1101a:	it	eq
   1101c:	moveq	r3, #1
   1101e:	add	r5, pc
   11020:	it	ne
   11022:	movne	r3, r6
   11024:	add.w	r1, r5, #29
   11028:	add	r0, pc
   1102a:	bl	10e34 <repair_qgroups@@Base+0x58c>
   1102e:	ldr	r2, [r4, #32]
   11030:	cmp	r2, #0
   11032:	beq.w	11492 <repair_qgroups@@Base+0xbea>
   11036:	subs	r2, #1
   11038:	ldr	r0, [r4, #0]
   1103a:	mov	r1, r7
   1103c:	str	r2, [r4, #32]
   1103e:	bl	10bc8 <repair_qgroups@@Base+0x320>
   11042:	ldrd	r2, r3, [sp, #112]	; 0x70
   11046:	ldrd	r0, r1, [sp, #32]
   1104a:	cmp	r1, r3
   1104c:	it	eq
   1104e:	cmpeq	r0, r2
   11050:	bne.w	11492 <repair_qgroups@@Base+0xbea>
   11054:	ldrb.w	r3, [sp, #120]	; 0x78
   11058:	adds	r3, #88	; 0x58
   1105a:	uxtb	r3, r3
   1105c:	cmp	r3, #1
   1105e:	bhi.w	11492 <repair_qgroups@@Base+0xbea>
   11062:	ldr.w	sl, [r4]
   11066:	movs	r3, #25
   11068:	ldr.w	r9, [r4, #32]
   1106c:	adds	r5, #47	; 0x2f
   1106e:	add.w	fp, sl, #96	; 0x60
   11072:	ldr.w	r0, [pc, #2676]	; 11ae8 <repair_qgroups@@Base+0x1240>
   11076:	movw	r2, #559	; 0x22f
   1107a:	mov	r1, r5
   1107c:	mla	r3, r3, r9, fp
   11080:	add	r0, pc
   11082:	add.w	r7, r3, #101	; 0x65
   11086:	ldr.w	r3, [r3, #122]	; 0x7a
   1108a:	cmp	r3, #23
   1108c:	str	r3, [sp, #48]	; 0x30
   1108e:	ite	hi
   11090:	movhi	r3, #0
   11092:	movls	r3, #1
   11094:	bl	10e34 <repair_qgroups@@Base+0x58c>
   11098:	ldr.w	r8, [r7, #17]
   1109c:	mov	r0, sl
   1109e:	add	r1, sp, #152	; 0x98
   110a0:	add.w	r3, r8, #101	; 0x65
   110a4:	str	r3, [sp, #64]	; 0x40
   110a6:	add.w	r2, fp, r3
   110aa:	add.w	sl, r8, #125	; 0x7d
   110ae:	ldr	r3, [r2, #0]
   110b0:	ldr	r7, [r2, #16]
   110b2:	str	r3, [sp, #56]	; 0x38
   110b4:	ldr	r3, [r2, #4]
   110b6:	mov	r2, r9
   110b8:	str	r3, [sp, #60]	; 0x3c
   110ba:	bl	10bc8 <repair_qgroups@@Base+0x320>
   110be:	ldr	r3, [sp, #48]	; 0x30
   110c0:	mov	r2, r3
   110c2:	ldr	r3, [sp, #64]	; 0x40
   110c4:	add.w	r9, r2, r3
   110c8:	ldrb.w	r3, [sp, #160]	; 0xa0
   110cc:	cmp	r3, #168	; 0xa8
   110ce:	bne.n	11124 <repair_qgroups@@Base+0x87c>
   110d0:	and.w	r2, r7, #2
   110d4:	mov	r3, r6
   110d6:	orrs	r3, r2
   110d8:	beq.n	1112e <repair_qgroups@@Base+0x886>
   110da:	add	sl, fp
   110dc:	ldr.w	r0, [pc, #2572]	; 11aec <repair_qgroups@@Base+0x1244>
   110e0:	mov.w	r2, #576	; 0x240
   110e4:	mov	r1, r5
   110e6:	ldrb.w	r6, [sl, #17]
   110ea:	add.w	sl, r8, #143	; 0x8f
   110ee:	cmp	r9, sl
   110f0:	add	r0, pc
   110f2:	ite	cs
   110f4:	movcs	r3, #0
   110f6:	movcc	r3, #1
   110f8:	bl	10e34 <repair_qgroups@@Base+0x58c>
   110fc:	ldr.w	r5, [pc, #2544]	; 11af0 <repair_qgroups@@Base+0x1248>
   11100:	ldr.w	r7, [pc, #2544]	; 11af4 <repair_qgroups@@Base+0x124c>
   11104:	add	r5, pc
   11106:	adds	r5, #47	; 0x2f
   11108:	add	r7, pc
   1110a:	cmp	r9, sl
   1110c:	bhi.n	1114e <repair_qgroups@@Base+0x8a6>
   1110e:	ldr	r3, [sp, #44]	; 0x2c
   11110:	ldr.w	r5, [pc, #2532]	; 11af8 <repair_qgroups@@Base+0x1250>
   11114:	ldr.w	r7, [pc, #2532]	; 11afc <repair_qgroups@@Base+0x1254>
   11118:	ldr	r3, [r3, #24]
   1111a:	add	r5, pc
   1111c:	adds	r5, #65	; 0x41
   1111e:	add	r7, pc
   11120:	str	r3, [sp, #48]	; 0x30
   11122:	b.n	1133a <repair_qgroups@@Base+0xa92>
   11124:	cmp	r3, #169	; 0xa9
   11126:	bne.n	1112e <repair_qgroups@@Base+0x886>
   11128:	ldr.w	r6, [sp, #161]	; 0xa1
   1112c:	b.n	110fc <repair_qgroups@@Base+0x854>
   1112e:	ldr.w	r1, [pc, #2512]	; 11b00 <repair_qgroups@@Base+0x1258>
   11132:	mvns	r3, r7
   11134:	ldr.w	r0, [pc, #2508]	; 11b04 <repair_qgroups@@Base+0x125c>
   11138:	and.w	r3, r3, #1
   1113c:	add	r1, pc
   1113e:	mov.w	r2, #580	; 0x244
   11142:	adds	r1, #47	; 0x2f
   11144:	add	r0, pc
   11146:	bl	10e34 <repair_qgroups@@Base+0x58c>
   1114a:	movs	r6, #0
   1114c:	b.n	110fc <repair_qgroups@@Base+0x854>
   1114e:	add.w	r0, fp, sl
   11152:	ldrb.w	r8, [fp, sl]
   11156:	mov	r1, r0
   11158:	ldr.w	r2, [r1, #1]!
   1115c:	ldr	r3, [r1, #4]
   1115e:	sub.w	r1, r8, #176	; 0xb0
   11162:	cmp	r1, #8
   11164:	bhi.w	1129c <repair_qgroups@@Base+0x9f4>
   11168:	tbb	[pc, r1]
   1116c:	ldr	r0, [sp, #300]	; 0x12c
   1116e:	ldr	r0, [sp, #392]	; 0x188
   11170:	ldr	r0, [sp, #608]	; 0x260
   11172:	ldr	r0, [sp, #20]
   11174:	movs	r5, r6
   11176:	movs	r1, #1
   11178:	str	r1, [sp, #24]
   1117a:	ldrd	r0, r1, [sp, #32]
   1117e:	strd	r2, r3, [sp, #8]
   11182:	adds	r3, r6, #1
   11184:	movs	r2, #0
   11186:	str	r3, [sp, #4]
   11188:	movs	r3, #0
   1118a:	str	r3, [sp, #0]
   1118c:	movs	r3, #0
   1118e:	strd	r0, r1, [sp, #16]
   11192:	add	r0, sp, #172	; 0xac
   11194:	bl	10d1c <repair_qgroups@@Base+0x474>
   11198:	mov	r8, r0
   1119a:	cmp	r0, #0
   1119c:	beq.w	112c6 <repair_qgroups@@Base+0xa1e>
   111a0:	mov	r0, r4
   111a2:	add	r4, sp, #172	; 0xac
   111a4:	bl	1b302 <btrfs_free_path@@Base>
   111a8:	ldr	r0, [sp, #172]	; 0xac
   111aa:	cmp	r0, r4
   111ac:	bne.w	11aac <repair_qgroups@@Base+0x1204>
   111b0:	cmp.w	r8, #0
   111b4:	bge.n	111bc <repair_qgroups@@Base+0x914>
   111b6:	ldr	r0, [sp, #92]	; 0x5c
   111b8:	bl	10b4c <repair_qgroups@@Base+0x2a4>
   111bc:	ldr.w	r2, [pc, #2376]	; 11b08 <repair_qgroups@@Base+0x1260>
   111c0:	ldr.w	r3, [pc, #2328]	; 11adc <repair_qgroups@@Base+0x1234>
   111c4:	add	r2, pc
   111c6:	ldr	r3, [r2, r3]
   111c8:	ldr	r2, [r3, #0]
   111ca:	ldr	r3, [sp, #196]	; 0xc4
   111cc:	eors	r2, r3
   111ce:	beq.w	11aca <repair_qgroups@@Base+0x1222>
   111d2:	blx	88e4 <__stack_chk_fail@plt>
   111d6:	ldr.w	r1, [r0, #9]
   111da:	strd	r2, r3, [sp, #8]
   111de:	movs	r3, #0
   111e0:	movs	r2, #0
   111e2:	strd	r3, r3, [sp]
   111e6:	str	r1, [sp, #24]
   111e8:	movs	r3, #0
   111ea:	ldrd	r0, r1, [sp, #32]
   111ee:	strd	r0, r1, [sp, #16]
   111f2:	add	r0, sp, #172	; 0xac
   111f4:	bl	10d1c <repair_qgroups@@Base+0x474>
   111f8:	mov	r8, r0
   111fa:	cmp	r0, #0
   111fc:	bne.n	111a0 <repair_qgroups@@Base+0x8f8>
   111fe:	movs	r3, #13
   11200:	b.n	1126a <repair_qgroups@@Base+0x9c2>
   11202:	mov.w	r1, #4294967295	; 0xffffffff
   11206:	cmp	r3, r1
   11208:	mvn.w	r0, #8
   1120c:	it	eq
   1120e:	cmpeq	r2, r0
   11210:	beq.n	112c6 <repair_qgroups@@Base+0xa1e>
   11212:	movs	r1, #1
   11214:	str	r1, [sp, #24]
   11216:	ldrd	r0, r1, [sp, #32]
   1121a:	strd	r0, r1, [sp, #16]
   1121e:	movs	r1, #0
   11220:	movs	r0, #0
   11222:	strd	r0, r1, [sp, #8]
   11226:	adds	r1, r6, #1
   11228:	str	r1, [sp, #4]
   1122a:	movs	r1, #0
   1122c:	str	r1, [sp, #0]
   1122e:	b.n	11192 <repair_qgroups@@Base+0x8ea>
   11230:	add.w	r3, sl, #1
   11234:	add	r3, fp
   11236:	ldr	r1, [r3, #8]
   11238:	ldr	r2, [r3, #12]
   1123a:	ldr.w	ip, [r3, #24]
   1123e:	strd	r1, r2, [sp, #132]	; 0x84
   11242:	movs	r2, #108	; 0x6c
   11244:	strb.w	r2, [sp, #140]	; 0x8c
   11248:	ldr	r1, [r3, #16]
   1124a:	ldr	r2, [r3, #20]
   1124c:	str.w	r1, [sp, #141]	; 0x8d
   11250:	str.w	r2, [sp, #145]	; 0x91
   11254:	mvn.w	r2, #8
   11258:	ldr	r1, [r3, #4]
   1125a:	ldr	r0, [r3, #0]
   1125c:	mov.w	r3, #4294967295	; 0xffffffff
   11260:	cmp	r1, r3
   11262:	it	eq
   11264:	cmpeq	r0, r2
   11266:	bne.n	1126e <repair_qgroups@@Base+0x9c6>
   11268:	movs	r3, #29
   1126a:	add	sl, r3
   1126c:	b.n	1110a <repair_qgroups@@Base+0x862>
   1126e:	ldrd	r2, r3, [sp, #32]
   11272:	str.w	ip, [sp, #24]
   11276:	strd	r2, r3, [sp, #16]
   1127a:	movs	r2, #0
   1127c:	movs	r3, #0
   1127e:	strd	r2, r3, [sp, #8]
   11282:	movs	r3, #0
   11284:	mov	r2, r0
   11286:	str	r3, [sp, #4]
   11288:	add	r0, sp, #172	; 0xac
   1128a:	add	r3, sp, #132	; 0x84
   1128c:	str	r3, [sp, #0]
   1128e:	mov	r3, r1
   11290:	bl	10d1c <repair_qgroups@@Base+0x474>
   11294:	mov	r8, r0
   11296:	cmp	r0, #0
   11298:	beq.n	11268 <repair_qgroups@@Base+0x9c0>
   1129a:	b.n	111a0 <repair_qgroups@@Base+0x8f8>
   1129c:	movs	r3, #1
   1129e:	movw	r2, #630	; 0x276
   112a2:	mov	r1, r5
   112a4:	mov	r0, r7
   112a6:	bl	10e54 <repair_qgroups@@Base+0x5ac>
   112aa:	cmp.w	r8, #176	; 0xb0
   112ae:	beq.n	112c6 <repair_qgroups@@Base+0xa1e>
   112b0:	cmp.w	r8, #182	; 0xb6
   112b4:	beq.n	112c6 <repair_qgroups@@Base+0xa1e>
   112b6:	cmp.w	r8, #184	; 0xb8
   112ba:	beq.n	111fe <repair_qgroups@@Base+0x956>
   112bc:	cmp.w	r8, #178	; 0xb2
   112c0:	beq.n	11268 <repair_qgroups@@Base+0x9c0>
   112c2:	bl	10dd0 <repair_qgroups@@Base+0x528>
   112c6:	movs	r3, #9
   112c8:	b.n	1126a <repair_qgroups@@Base+0x9c2>
   112ca:	ldr	r3, [sp, #48]	; 0x30
   112cc:	mov	r1, r4
   112ce:	strb.w	r9, [r4, #65]	; 0x41
   112d2:	ldr.w	r0, [r3, #464]	; 0x1d0
   112d6:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   112da:	subs.w	r8, r0, #0
   112de:	blt.w	111a0 <repair_qgroups@@Base+0x8f8>
   112e2:	beq.n	11352 <repair_qgroups@@Base+0xaaa>
   112e4:	b.n	11374 <repair_qgroups@@Base+0xacc>
   112e6:	ldrb.w	r3, [sp, #160]	; 0xa0
   112ea:	cmp	r3, #175	; 0xaf
   112ec:	bls.n	11342 <repair_qgroups@@Base+0xa9a>
   112ee:	cmp	r3, #184	; 0xb8
   112f0:	bhi.n	11374 <repair_qgroups@@Base+0xacc>
   112f2:	subs	r3, #176	; 0xb0
   112f4:	cmp	r3, #8
   112f6:	bhi.w	11482 <repair_qgroups@@Base+0xbda>
   112fa:	tbb	[pc, r3]
   112fe:	stmia	r2!, {r4, r5, r6}
   11300:	stmia	r2!, {r0, r1, r3, r7}
   11302:	stmia	r2!, {r1, r6, r7}
   11304:	stmia	r2!, {r0, r2}
   11306:	lsls	r0, r3, #1
   11308:	movs	r3, #1
   1130a:	str	r3, [sp, #24]
   1130c:	ldrd	r2, r3, [sp, #32]
   11310:	strd	r2, r3, [sp, #16]
   11314:	ldr.w	r3, [sp, #165]	; 0xa5
   11318:	ldr.w	r2, [sp, #161]	; 0xa1
   1131c:	strd	r2, r3, [sp, #8]
   11320:	adds	r3, r6, #1
   11322:	str	r3, [sp, #4]
   11324:	movs	r3, #0
   11326:	str	r3, [sp, #0]
   11328:	movs	r2, #0
   1132a:	movs	r3, #0
   1132c:	add	r0, sp, #172	; 0xac
   1132e:	bl	10d1c <repair_qgroups@@Base+0x474>
   11332:	mov	r8, r0
   11334:	cmp	r0, #0
   11336:	bne.w	111a0 <repair_qgroups@@Base+0x8f8>
   1133a:	add.w	sl, sp, #152	; 0x98
   1133e:	mov.w	r9, #0
   11342:	ldr	r2, [r4, #0]
   11344:	ldr	r3, [r4, #32]
   11346:	adds	r3, #1
   11348:	str	r3, [r4, #32]
   1134a:	ldr.w	r2, [r2, #192]	; 0xc0
   1134e:	cmp	r3, r2
   11350:	bcs.n	112ca <repair_qgroups@@Base+0xa22>
   11352:	ldr.w	fp, [r4, #32]
   11356:	mov	r1, sl
   11358:	ldr.w	r8, [r4]
   1135c:	mov	r2, fp
   1135e:	mov	r0, r8
   11360:	bl	10bc8 <repair_qgroups@@Base+0x320>
   11364:	ldrd	r2, r3, [sp, #32]
   11368:	ldrd	r0, r1, [sp, #152]	; 0x98
   1136c:	cmp	r3, r1
   1136e:	it	eq
   11370:	cmpeq	r2, r0
   11372:	beq.n	112e6 <repair_qgroups@@Base+0xa3e>
   11374:	mov	r0, r4
   11376:	ldr.w	r6, [pc, #1940]	; 11b0c <repair_qgroups@@Base+0x1264>
   1137a:	bl	1b2dc <btrfs_release_path@@Base>
   1137e:	ldr.w	fp, [pc, #1936]	; 11b10 <repair_qgroups@@Base+0x1268>
   11382:	add	r6, pc
   11384:	adds	r6, #82	; 0x52
   11386:	add	fp, pc
   11388:	ldr	r5, [sp, #180]	; 0xb4
   1138a:	add	r3, sp, #180	; 0xb4
   1138c:	cmp	r5, r3
   1138e:	bne.w	1149c <repair_qgroups@@Base+0xbf4>
   11392:	add	r0, sp, #172	; 0xac
   11394:	movs	r1, #1
   11396:	bl	10e90 <repair_qgroups@@Base+0x5e8>
   1139a:	movs	r0, #0
   1139c:	bl	eff8 <ulist_alloc@@Base>
   113a0:	mov	r7, r0
   113a2:	cmp	r0, #0
   113a4:	bne.w	11670 <repair_qgroups@@Base+0xdc8>
   113a8:	mvn.w	r8, #11
   113ac:	b.n	111a0 <repair_qgroups@@Base+0x8f8>
   113ae:	add.w	r8, r8, #96	; 0x60
   113b2:	movs	r2, #25
   113b4:	mla	r2, r2, fp, r8
   113b8:	ldr.w	r0, [r2, #118]	; 0x76
   113bc:	add	r8, r0
   113be:	ldr.w	r3, [r8, #101]	; 0x65
   113c2:	str	r3, [sp, #24]
   113c4:	ldrd	r2, r3, [sp, #32]
   113c8:	strd	r2, r3, [sp, #16]
   113cc:	ldr.w	r3, [sp, #165]	; 0xa5
   113d0:	ldr.w	r2, [sp, #161]	; 0xa1
   113d4:	strd	r2, r3, [sp, #8]
   113d8:	movs	r3, #0
   113da:	str	r3, [sp, #4]
   113dc:	b.n	11326 <repair_qgroups@@Base+0xa7e>
   113de:	ldr.w	r3, [sp, #165]	; 0xa5
   113e2:	mov.w	r1, #4294967295	; 0xffffffff
   113e6:	ldr.w	r2, [sp, #161]	; 0xa1
   113ea:	mvn.w	r0, #8
   113ee:	cmp	r3, r1
   113f0:	it	eq
   113f2:	cmpeq	r2, r0
   113f4:	beq.n	1133a <repair_qgroups@@Base+0xa92>
   113f6:	movs	r1, #1
   113f8:	str	r1, [sp, #24]
   113fa:	ldrd	r0, r1, [sp, #32]
   113fe:	strd	r0, r1, [sp, #16]
   11402:	movs	r1, #0
   11404:	movs	r0, #0
   11406:	strd	r0, r1, [sp, #8]
   1140a:	adds	r1, r6, #1
   1140c:	str	r1, [sp, #4]
   1140e:	movs	r1, #0
   11410:	str	r1, [sp, #0]
   11412:	b.n	1132c <repair_qgroups@@Base+0xa84>
   11414:	add.w	r8, r8, #96	; 0x60
   11418:	movs	r2, #25
   1141a:	mov.w	r1, #4294967295	; 0xffffffff
   1141e:	mla	fp, r2, fp, r8
   11422:	ldr.w	r0, [fp, #118]	; 0x76
   11426:	adds	r0, #101	; 0x65
   11428:	add	r8, r0
   1142a:	mvn.w	r0, #8
   1142e:	ldr.w	r2, [r8, #8]
   11432:	ldr.w	r3, [r8, #12]
   11436:	ldr.w	ip, [r8, #24]
   1143a:	strd	r2, r3, [sp, #152]	; 0x98
   1143e:	movs	r3, #108	; 0x6c
   11440:	strb.w	r3, [sp, #160]	; 0xa0
   11444:	ldr.w	r2, [r8, #16]
   11448:	ldr.w	r3, [r8, #20]
   1144c:	str.w	r2, [sp, #161]	; 0xa1
   11450:	str.w	r3, [sp, #165]	; 0xa5
   11454:	ldr.w	r3, [r8, #4]
   11458:	ldr.w	r2, [r8]
   1145c:	cmp	r3, r1
   1145e:	it	eq
   11460:	cmpeq	r2, r0
   11462:	beq.w	1133a <repair_qgroups@@Base+0xa92>
   11466:	ldrd	r0, r1, [sp, #32]
   1146a:	str.w	ip, [sp, #24]
   1146e:	strd	r0, r1, [sp, #16]
   11472:	movs	r1, #0
   11474:	movs	r0, #0
   11476:	strd	r0, r1, [sp, #8]
   1147a:	movs	r1, #0
   1147c:	str	r1, [sp, #4]
   1147e:	add	r1, sp, #152	; 0x98
   11480:	b.n	11410 <repair_qgroups@@Base+0xb68>
   11482:	movs	r3, #1
   11484:	movw	r2, #714	; 0x2ca
   11488:	mov	r1, r5
   1148a:	mov	r0, r7
   1148c:	bl	10e54 <repair_qgroups@@Base+0x5ac>
   11490:	b.n	1133a <repair_qgroups@@Base+0xa92>
   11492:	movs	r2, #0
   11494:	movs	r3, #0
   11496:	strd	r2, r3, [sp, #56]	; 0x38
   1149a:	b.n	11374 <repair_qgroups@@Base+0xacc>
   1149c:	ldr	r3, [r5, #8]
   1149e:	cbnz	r3, 114b6 <repair_qgroups@@Base+0xc0e>
   114a0:	ldr.w	r1, [pc, #1648]	; 11b14 <repair_qgroups@@Base+0x126c>
   114a4:	mov.w	r2, #456	; 0x1c8
   114a8:	ldr.w	r0, [pc, #1644]	; 11b18 <repair_qgroups@@Base+0x1270>
   114ac:	add	r1, pc
   114ae:	adds	r1, #82	; 0x52
   114b0:	add	r0, pc
   114b2:	bl	10df8 <repair_qgroups@@Base+0x550>
   114b6:	ldrd	r8, r9, [r5, #48]	; 0x30
   114ba:	orrs.w	r3, r8, r9
   114be:	beq.n	114d4 <repair_qgroups@@Base+0xc2c>
   114c0:	ldr.w	r1, [pc, #1624]	; 11b1c <repair_qgroups@@Base+0x1274>
   114c4:	movw	r2, #457	; 0x1c9
   114c8:	ldr.w	r0, [pc, #1620]	; 11b20 <repair_qgroups@@Base+0x1278>
   114cc:	add	r1, pc
   114ce:	adds	r1, #82	; 0x52
   114d0:	add	r0, pc
   114d2:	b.n	114b2 <repair_qgroups@@Base+0xc0a>
   114d4:	ldrb	r3, [r5, #24]
   114d6:	cbz	r3, 114ec <repair_qgroups@@Base+0xc44>
   114d8:	ldr.w	r1, [pc, #1608]	; 11b24 <repair_qgroups@@Base+0x127c>
   114dc:	mov.w	r2, #458	; 0x1ca
   114e0:	ldr.w	r0, [pc, #1604]	; 11b28 <repair_qgroups@@Base+0x1280>
   114e4:	add	r1, pc
   114e6:	adds	r1, #82	; 0x52
   114e8:	add	r0, pc
   114ea:	b.n	114b2 <repair_qgroups@@Base+0xc0a>
   114ec:	ldrd	sl, r7, [r5, #56]	; 0x38
   114f0:	movw	r2, #459	; 0x1cb
   114f4:	mov	r1, r6
   114f6:	mov	r0, fp
   114f8:	orrs.w	r3, sl, r7
   114fc:	ite	eq
   114fe:	moveq	r3, #1
   11500:	movne	r3, #0
   11502:	bl	10e34 <repair_qgroups@@Base+0x58c>
   11506:	mov	r3, r7
   11508:	ldr	r0, [sp, #44]	; 0x2c
   1150a:	mov	r2, sl
   1150c:	strd	r8, r9, [sp]
   11510:	bl	20b0c <read_tree_block@@Base>
   11514:	mov	r7, r0
   11516:	cbz	r0, 11554 <repair_qgroups@@Base+0xcac>
   11518:	cmn.w	r0, #4096	; 0x1000
   1151c:	bhi.n	11554 <repair_qgroups@@Base+0xcac>
   1151e:	ldr	r3, [r0, #84]	; 0x54
   11520:	lsls	r2, r3, #29
   11522:	bpl.n	11554 <repair_qgroups@@Base+0xcac>
   11524:	ldrb.w	r2, [r0, #196]	; 0xc4
   11528:	cbz	r2, 11560 <repair_qgroups@@Base+0xcb8>
   1152a:	movs	r3, #17
   1152c:	movs	r2, #101	; 0x65
   1152e:	add	r1, sp, #152	; 0x98
   11530:	bl	1a79e <read_extent_buffer@@Base>
   11534:	ldr.w	r3, [sp, #165]	; 0xa5
   11538:	ldr.w	r2, [sp, #161]	; 0xa1
   1153c:	str.w	r3, [r5, #29]
   11540:	str.w	r2, [r5, #25]
   11544:	ldrb.w	r3, [sp, #160]	; 0xa0
   11548:	strb	r3, [r5, #24]
   1154a:	ldr	r3, [sp, #152]	; 0x98
   1154c:	str	r3, [r5, #16]
   1154e:	ldr	r3, [sp, #156]	; 0x9c
   11550:	str	r3, [r5, #20]
   11552:	b.n	11568 <repair_qgroups@@Base+0xcc0>
   11554:	mov	r0, r7
   11556:	bl	1a0a4 <free_extent_buffer@@Base>
   1155a:	mvn.w	r8, #4
   1155e:	b.n	111a0 <repair_qgroups@@Base+0x8f8>
   11560:	add.w	r1, r5, #16
   11564:	bl	10bc8 <repair_qgroups@@Base+0x320>
   11568:	mov	r0, r7
   1156a:	bl	1a0a4 <free_extent_buffer@@Base>
   1156e:	ldrd	r2, r3, [r5]
   11572:	str	r3, [r2, #4]
   11574:	str	r2, [r3, #0]
   11576:	ldr	r3, [sp, #172]	; 0xac
   11578:	str	r5, [r3, #4]
   1157a:	str	r3, [r5, #0]
   1157c:	add	r3, sp, #172	; 0xac
   1157e:	str	r5, [sp, #172]	; 0xac
   11580:	str	r3, [r5, #4]
   11582:	b.n	11388 <repair_qgroups@@Base+0xae0>
   11584:	ldrd	r2, r3, [r5]
   11588:	str	r3, [r2, #4]
   1158a:	str	r2, [r3, #0]
   1158c:	ldr	r3, [sp, #172]	; 0xac
   1158e:	str	r5, [r3, #4]
   11590:	str	r3, [r5, #0]
   11592:	add	r3, sp, #172	; 0xac
   11594:	str	r3, [r5, #4]
   11596:	ldrd	r2, r3, [r5, #48]	; 0x30
   1159a:	str	r5, [sp, #172]	; 0xac
   1159c:	strd	r2, r3, [sp, #64]	; 0x40
   115a0:	orrs	r3, r2
   115a2:	beq.n	115b8 <repair_qgroups@@Base+0xd10>
   115a4:	ldr.w	r1, [pc, #1412]	; 11b2c <repair_qgroups@@Base+0x1284>
   115a8:	movw	r2, #381	; 0x17d
   115ac:	ldr.w	r0, [pc, #1408]	; 11b30 <repair_qgroups@@Base+0x1288>
   115b0:	add	r1, pc
   115b2:	adds	r1, #101	; 0x65
   115b4:	add	r0, pc
   115b6:	b.n	114b2 <repair_qgroups@@Base+0xc0a>
   115b8:	ldr	r3, [r5, #40]	; 0x28
   115ba:	cbnz	r3, 115d0 <repair_qgroups@@Base+0xd28>
   115bc:	ldr.w	r1, [pc, #1396]	; 11b34 <repair_qgroups@@Base+0x128c>
   115c0:	mov.w	r2, #382	; 0x17e
   115c4:	ldr.w	r0, [pc, #1392]	; 11b38 <repair_qgroups@@Base+0x1290>
   115c8:	add	r1, pc
   115ca:	adds	r1, #101	; 0x65
   115cc:	add	r0, pc
   115ce:	b.n	114b2 <repair_qgroups@@Base+0xc0a>
   115d0:	ldr	r3, [r5, #8]
   115d2:	add	r1, sp, #132	; 0x84
   115d4:	ldr	r6, [r5, #36]	; 0x24
   115d6:	mov.w	r2, #4294967295	; 0xffffffff
   115da:	ldr	r0, [sp, #44]	; 0x2c
   115dc:	str	r3, [sp, #132]	; 0x84
   115de:	ldr	r3, [r5, #12]
   115e0:	strb.w	r2, [sp, #141]	; 0x8d
   115e4:	strb.w	r2, [sp, #142]	; 0x8e
   115e8:	str	r3, [sp, #136]	; 0x88
   115ea:	movs	r3, #132	; 0x84
   115ec:	strb.w	r2, [sp, #143]	; 0x8f
   115f0:	strb.w	r3, [sp, #140]	; 0x8c
   115f4:	strb.w	r2, [sp, #144]	; 0x90
   115f8:	strb.w	r2, [sp, #145]	; 0x91
   115fc:	strb.w	r2, [sp, #146]	; 0x92
   11600:	strb.w	r2, [sp, #147]	; 0x93
   11604:	strb.w	r2, [sp, #148]	; 0x94
   11608:	bl	20e8e <btrfs_read_fs_root@@Base>
   1160c:	cmn.w	r0, #4096	; 0x1000
   11610:	mov	r9, r0
   11612:	bls.w	117b6 <repair_qgroups@@Base+0xf0e>
   11616:	mov	r8, r0
   11618:	movs	r3, #0
   1161a:	mov	r0, r4
   1161c:	strb.w	r3, [r4, #65]	; 0x41
   11620:	bl	1b2dc <btrfs_release_path@@Base>
   11624:	cmn.w	r8, #2
   11628:	beq.n	11670 <repair_qgroups@@Base+0xdc8>
   1162a:	cmp.w	r8, #0
   1162e:	bne.n	1167c <repair_qgroups@@Base+0xdd4>
   11630:	add	r1, sp, #96	; 0x60
   11632:	mov	r0, r7
   11634:	str.w	r8, [sp, #96]	; 0x60
   11638:	bl	f1f8 <ulist_next@@Base>
   1163c:	cbz	r0, 11646 <repair_qgroups@@Base+0xd9e>
   1163e:	ldrd	r2, r3, [r0]
   11642:	strd	r2, r3, [sp, #64]	; 0x40
   11646:	ldrd	r2, r3, [sp, #64]	; 0x40
   1164a:	strd	r2, r3, [r5, #48]	; 0x30
   1164e:	cbz	r0, 11652 <repair_qgroups@@Base+0xdaa>
   11650:	ldr	r0, [r0, #8]
   11652:	add	r6, sp, #96	; 0x60
   11654:	add.w	r8, r5, #64	; 0x40
   11658:	str	r0, [r5, #44]	; 0x2c
   1165a:	mov	r1, r6
   1165c:	mov	r0, r7
   1165e:	bl	f1f8 <ulist_next@@Base>
   11662:	mov	r9, r0
   11664:	cmp	r0, #0
   11666:	bne.w	1197a <repair_qgroups@@Base+0x10d2>
   1166a:	mov	r0, r7
   1166c:	bl	efe6 <ulist_reinit@@Base>
   11670:	ldr	r5, [sp, #188]	; 0xbc
   11672:	add	r3, sp, #188	; 0xbc
   11674:	cmp	r5, r3
   11676:	bne.n	11584 <repair_qgroups@@Base+0xcdc>
   11678:	mov.w	r8, #0
   1167c:	mov	r0, r7
   1167e:	bl	f00c <ulist_free@@Base>
   11682:	cmp.w	r8, #0
   11686:	bne.w	111a0 <repair_qgroups@@Base+0x8f8>
   1168a:	add	r0, sp, #172	; 0xac
   1168c:	movs	r1, #2
   1168e:	bl	10e90 <repair_qgroups@@Base+0x5e8>
   11692:	ldr	r2, [sp, #180]	; 0xb4
   11694:	ldr.w	r1, [pc, #1188]	; 11b3c <repair_qgroups@@Base+0x1294>
   11698:	add	r3, sp, #180	; 0xb4
   1169a:	subs	r3, r2, r3
   1169c:	ldr.w	r0, [pc, #1184]	; 11b40 <repair_qgroups@@Base+0x1298>
   116a0:	add	r1, pc
   116a2:	movw	r2, #801	; 0x321
   116a6:	add.w	r1, r1, #29
   116aa:	it	ne
   116ac:	movne	r3, #1
   116ae:	add	r0, pc
   116b0:	str	r1, [sp, #48]	; 0x30
   116b2:	bl	10e34 <repair_qgroups@@Base+0x58c>
   116b6:	ldr	r2, [sp, #188]	; 0xbc
   116b8:	add	r3, sp, #188	; 0xbc
   116ba:	ldr.w	r0, [pc, #1160]	; 11b44 <repair_qgroups@@Base+0x129c>
   116be:	subs	r3, r2, r3
   116c0:	ldr	r1, [sp, #48]	; 0x30
   116c2:	add	r0, pc
   116c4:	movw	r2, #802	; 0x322
   116c8:	it	ne
   116ca:	movne	r3, #1
   116cc:	ldr.w	r6, [pc, #1144]	; 11b48 <repair_qgroups@@Base+0x12a0>
   116d0:	bl	10e34 <repair_qgroups@@Base+0x58c>
   116d4:	ldr.w	r3, [pc, #1140]	; 11b4c <repair_qgroups@@Base+0x12a4>
   116d8:	add	r6, pc
   116da:	add	r3, pc
   116dc:	adds	r6, #29
   116de:	vmov	s16, r3
   116e2:	ldr	r5, [sp, #172]	; 0xac
   116e4:	add	r3, sp, #172	; 0xac
   116e6:	cmp	r5, r3
   116e8:	beq.w	111a0 <repair_qgroups@@Base+0x8f8>
   116ec:	ldr	r3, [r5, #40]	; 0x28
   116ee:	cmp	r3, #0
   116f0:	bge.n	11702 <repair_qgroups@@Base+0xe5a>
   116f2:	vmov	r0, s16
   116f6:	movs	r3, #1
   116f8:	movw	r2, #806	; 0x326
   116fc:	mov	r1, r6
   116fe:	bl	10e54 <repair_qgroups@@Base+0x5ac>
   11702:	ldr	r3, [sp, #76]	; 0x4c
   11704:	cbz	r3, 11738 <repair_qgroups@@Base+0xe90>
   11706:	ldr	r3, [r5, #40]	; 0x28
   11708:	cbz	r3, 11738 <repair_qgroups@@Base+0xe90>
   1170a:	ldrd	r2, r3, [r5, #8]
   1170e:	orrs.w	r1, r2, r3
   11712:	beq.n	11738 <repair_qgroups@@Base+0xe90>
   11714:	ldrd	r0, r1, [r5, #48]	; 0x30
   11718:	orrs.w	r7, r0, r1
   1171c:	bne.n	11738 <repair_qgroups@@Base+0xe90>
   1171e:	mov.w	ip, #0
   11722:	strd	r0, r1, [sp]
   11726:	str.w	ip, [sp, #8]
   1172a:	ldr	r0, [sp, #76]	; 0x4c
   1172c:	bl	f120 <ulist_add@@Base>
   11730:	subs.w	r8, r0, #0
   11734:	blt.w	111a0 <repair_qgroups@@Base+0x8f8>
   11738:	ldr	r3, [r5, #40]	; 0x28
   1173a:	cmp	r3, #0
   1173c:	beq.w	11a9c <repair_qgroups@@Base+0x11f4>
   11740:	ldrd	r2, r3, [r5, #48]	; 0x30
   11744:	orrs.w	r1, r2, r3
   11748:	beq.w	11a9c <repair_qgroups@@Base+0x11f4>
   1174c:	ldr	r0, [sp, #72]	; 0x48
   1174e:	ldr	r1, [r5, #44]	; 0x2c
   11750:	cmp	r0, #0
   11752:	beq.w	11a34 <repair_qgroups@@Base+0x118c>
   11756:	cmp	r1, #0
   11758:	bne.w	11a34 <repair_qgroups@@Base+0x118c>
   1175c:	ldr.w	sl, [r5, #36]	; 0x24
   11760:	cmp.w	sl, #0
   11764:	bne.w	11a34 <repair_qgroups@@Base+0x118c>
   11768:	movs	r0, #0
   1176a:	movs	r1, #0
   1176c:	strd	r0, r1, [sp]
   11770:	ldr	r0, [sp, #44]	; 0x2c
   11772:	bl	20b0c <read_tree_block@@Base>
   11776:	mov	r9, r0
   11778:	cmp	r0, #0
   1177a:	beq.w	119be <repair_qgroups@@Base+0x1116>
   1177e:	cmn.w	r0, #4096	; 0x1000
   11782:	bhi.w	119be <repair_qgroups@@Base+0x1116>
   11786:	ldr	r3, [r0, #84]	; 0x54
   11788:	lsls	r3, r3, #29
   1178a:	bpl.w	119be <repair_qgroups@@Base+0x1116>
   1178e:	ldr	r3, [sp, #72]	; 0x48
   11790:	add.w	fp, sp, #152	; 0x98
   11794:	ldrd	r2, r3, [r3]
   11798:	strd	r2, r3, [sp, #48]	; 0x30
   1179c:	ldr.w	r3, [r0, #192]	; 0xc0
   117a0:	str	r3, [sp, #56]	; 0x38
   117a2:	add.w	r3, r0, #197	; 0xc5
   117a6:	str	r3, [sp, #64]	; 0x40
   117a8:	ldr	r3, [sp, #56]	; 0x38
   117aa:	cmp	r3, sl
   117ac:	bgt.w	119c2 <repair_qgroups@@Base+0x111a>
   117b0:	mov.w	r8, #0
   117b4:	b.n	11a22 <repair_qgroups@@Base+0x117a>
   117b6:	ldrb.w	r3, [r0, #246]	; 0xf6
   117ba:	movs	r0, #0
   117bc:	adds	r3, #1
   117be:	cmp	r6, r3
   117c0:	beq.w	11976 <repair_qgroups@@Base+0x10ce>
   117c4:	strb.w	r6, [r4, #65]	; 0x41
   117c8:	add.w	r2, r5, #16
   117cc:	mov	r3, r4
   117ce:	mov	r1, r9
   117d0:	strd	r0, r0, [sp]
   117d4:	bl	1d6c0 <btrfs_search_slot@@Base>
   117d8:	subs.w	r8, r0, #0
   117dc:	blt.w	11618 <repair_qgroups@@Base+0xd70>
   117e0:	ldr.w	r3, [r4, r6, lsl #2]
   117e4:	cbz	r3, 1180c <repair_qgroups@@Base+0xf64>
   117e6:	movs	r3, #0
   117e8:	str	r3, [sp, #100]	; 0x64
   117ea:	cbz	r6, 1182c <repair_qgroups@@Base+0xf84>
   117ec:	ldr.w	r2, [r4, r6, lsl #2]
   117f0:	movs	r0, #0
   117f2:	movs	r1, #0
   117f4:	str	r3, [sp, #8]
   117f6:	strd	r0, r1, [sp]
   117fa:	mov	r0, r7
   117fc:	ldrd	r2, r3, [r2, #40]	; 0x28
   11800:	bl	f120 <ulist_add@@Base>
   11804:	and.w	r6, r0, r0, asr #31
   11808:	mov	r8, r6
   1180a:	b.n	11618 <repair_qgroups@@Base+0xd70>
   1180c:	cbnz	r6, 11828 <repair_qgroups@@Base+0xf80>
   1180e:	ldr	r1, [pc, #832]	; (11b50 <repair_qgroups@@Base+0x12a8>)
   11810:	movs	r3, #1
   11812:	ldr	r0, [pc, #832]	; (11b54 <repair_qgroups@@Base+0x12ac>)
   11814:	mov.w	r2, #342	; 0x156
   11818:	add	r1, pc
   1181a:	mov.w	r8, #1
   1181e:	adds	r1, #125	; 0x7d
   11820:	add	r0, pc
   11822:	bl	10e54 <repair_qgroups@@Base+0x5ac>
   11826:	b.n	11618 <repair_qgroups@@Base+0xd70>
   11828:	subs	r6, #1
   1182a:	b.n	117e0 <repair_qgroups@@Base+0xf38>
   1182c:	ldrd	r2, r3, [r5, #56]	; 0x38
   11830:	strd	r2, r3, [sp, #80]	; 0x50
   11834:	ldr	r3, [r4, #0]
   11836:	ldr	r2, [r4, #32]
   11838:	ldr.w	r3, [r3, #192]	; 0xc0
   1183c:	cmp	r2, r3
   1183e:	bcc.w	11972 <repair_qgroups@@Base+0x10ca>
   11842:	strb.w	r6, [r4, #65]	; 0x41
   11846:	mov	r1, r4
   11848:	ldr.w	r0, [r9, #464]	; 0x1d0
   1184c:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   11850:	mov	r8, r0
   11852:	movs	r3, #0
   11854:	movs	r2, #0
   11856:	strd	r2, r3, [sp, #48]	; 0x30
   1185a:	add	r3, sp, #152	; 0x98
   1185c:	vmov	s16, r3
   11860:	b.n	118a4 <repair_qgroups@@Base+0xffc>
   11862:	add	r3, sp, #100	; 0x64
   11864:	str	r3, [sp, #8]
   11866:	ldr	r3, [sp, #72]	; 0x48
   11868:	ldrd	r0, r1, [r3]
   1186c:	strd	r0, r1, [sp]
   11870:	mov	r1, sl
   11872:	vmov	r0, s16
   11876:	bl	10c30 <repair_qgroups@@Base+0x388>
   1187a:	subs.w	r8, r0, #0
   1187e:	blt.n	11950 <repair_qgroups@@Base+0x10a8>
   11880:	beq.n	11924 <repair_qgroups@@Base+0x107c>
   11882:	ldr	r2, [r4, #0]
   11884:	ldr	r3, [r4, #32]
   11886:	adds	r3, #1
   11888:	str	r3, [r4, #32]
   1188a:	ldr.w	r2, [r2, #192]	; 0xc0
   1188e:	cmp	r3, r2
   11890:	bcc.n	118ac <repair_qgroups@@Base+0x1004>
   11892:	movs	r3, #0
   11894:	mov	r1, r4
   11896:	strb.w	r3, [r4, #65]	; 0x41
   1189a:	ldr.w	r0, [r9, #464]	; 0x1d0
   1189e:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   118a2:	mov	r8, r0
   118a4:	cmp.w	r8, #0
   118a8:	bne.w	11ac4 <repair_qgroups@@Base+0x121c>
   118ac:	ldrd	r2, r3, [sp, #48]	; 0x30
   118b0:	ldrd	r0, r1, [sp, #56]	; 0x38
   118b4:	cmp	r3, r1
   118b6:	it	eq
   118b8:	cmpeq	r2, r0
   118ba:	bcs.n	11808 <repair_qgroups@@Base+0xf60>
   118bc:	ldr.w	sl, [r4]
   118c0:	ldr.w	fp, [r4, #32]
   118c4:	vmov	r1, s16
   118c8:	mov	r0, sl
   118ca:	mov	r2, fp
   118cc:	bl	10bc8 <repair_qgroups@@Base+0x320>
   118d0:	ldrd	r0, r1, [sp, #152]	; 0x98
   118d4:	ldr	r3, [r5, #20]
   118d6:	ldr	r2, [r5, #16]
   118d8:	cmp	r1, r3
   118da:	it	eq
   118dc:	cmpeq	r0, r2
   118de:	bne.n	11808 <repair_qgroups@@Base+0xf60>
   118e0:	ldrb.w	r3, [sp, #160]	; 0xa0
   118e4:	cmp	r3, #108	; 0x6c
   118e6:	bne.n	11808 <repair_qgroups@@Base+0xf60>
   118e8:	add.w	r3, sl, #96	; 0x60
   118ec:	movs	r2, #25
   118ee:	mla	fp, r2, fp, r3
   118f2:	ldr.w	r2, [fp, #118]	; 0x76
   118f6:	ldrd	fp, ip, [sp, #80]	; 0x50
   118fa:	adds	r2, #101	; 0x65
   118fc:	add	r3, r2
   118fe:	ldr.w	r0, [r3, #21]!
   11902:	ldr	r1, [r3, #4]
   11904:	cmp	ip, r1
   11906:	it	eq
   11908:	cmpeq	fp, r0
   1190a:	bne.n	11882 <repair_qgroups@@Base+0xfda>
   1190c:	movs	r3, #0
   1190e:	str	r3, [sp, #100]	; 0x64
   11910:	ldr	r3, [sp, #48]	; 0x30
   11912:	adds	r3, #1
   11914:	str	r3, [sp, #48]	; 0x30
   11916:	ldr	r3, [sp, #52]	; 0x34
   11918:	adc.w	r3, r3, #0
   1191c:	str	r3, [sp, #52]	; 0x34
   1191e:	ldr	r3, [sp, #72]	; 0x48
   11920:	cmp	r3, #0
   11922:	bne.n	11862 <repair_qgroups@@Base+0xfba>
   11924:	ldrd	r0, r1, [sl, #40]	; 0x28
   11928:	movs	r2, #0
   1192a:	movs	r3, #0
   1192c:	strd	r2, r3, [sp, #104]	; 0x68
   11930:	add	r2, sp, #104	; 0x68
   11932:	str	r2, [sp, #8]
   11934:	ldr	r2, [sp, #100]	; 0x64
   11936:	movs	r3, #0
   11938:	str	r3, [sp, #12]
   1193a:	strd	r2, r3, [sp]
   1193e:	mov	r2, r0
   11940:	mov	r3, r1
   11942:	mov	r0, r7
   11944:	bl	f022 <ulist_add_merge@@Base>
   11948:	ldr	r3, [sp, #104]	; 0x68
   1194a:	subs.w	r8, r0, #0
   1194e:	bge.n	1195a <repair_qgroups@@Base+0x10b2>
   11950:	ldr	r0, [sp, #100]	; 0x64
   11952:	mov	r6, r8
   11954:	bl	10b4c <repair_qgroups@@Base+0x2a4>
   11958:	b.n	11808 <repair_qgroups@@Base+0xf60>
   1195a:	bne.n	1196c <repair_qgroups@@Base+0x10c4>
   1195c:	ldr	r2, [sp, #72]	; 0x48
   1195e:	cbz	r2, 1196c <repair_qgroups@@Base+0x10c4>
   11960:	mov	r2, r3
   11962:	ldr	r3, [r3, #16]
   11964:	cmp	r3, #0
   11966:	bne.n	11960 <repair_qgroups@@Base+0x10b8>
   11968:	ldr	r3, [sp, #100]	; 0x64
   1196a:	str	r3, [r2, #16]
   1196c:	movs	r3, #0
   1196e:	str	r3, [sp, #100]	; 0x64
   11970:	b.n	11882 <repair_qgroups@@Base+0xfda>
   11972:	mov	r8, r6
   11974:	b.n	11852 <repair_qgroups@@Base+0xfaa>
   11976:	mov	r8, r0
   11978:	b.n	11618 <repair_qgroups@@Base+0xd70>
   1197a:	movs	r0, #64	; 0x40
   1197c:	blx	8a94 <malloc@plt+0x4>
   11980:	mov	r3, r0
   11982:	cbz	r0, 119b8 <repair_qgroups@@Base+0x1110>
   11984:	mov	r2, r5
   11986:	mov	lr, r0
   11988:	ldr	r0, [r2, #0]
   1198a:	adds	r2, #8
   1198c:	ldr.w	r1, [r2, #-4]
   11990:	cmp	r2, r8
   11992:	mov	ip, lr
   11994:	stmia.w	ip!, {r0, r1}
   11998:	mov	lr, ip
   1199a:	bne.n	11988 <repair_qgroups@@Base+0x10e0>
   1199c:	ldrd	r0, r1, [r9]
   119a0:	strd	r0, r1, [r3, #48]	; 0x30
   119a4:	add	r1, sp, #172	; 0xac
   119a6:	ldr.w	r2, [r9, #8]
   119aa:	str	r2, [r3, #44]	; 0x2c
   119ac:	ldr	r2, [sp, #176]	; 0xb0
   119ae:	str	r3, [sp, #176]	; 0xb0
   119b0:	strd	r1, r2, [r3]
   119b4:	str	r3, [r2, #0]
   119b6:	b.n	1165a <repair_qgroups@@Base+0xdb2>
   119b8:	mvn.w	r8, #11
   119bc:	b.n	1167c <repair_qgroups@@Base+0xdd4>
   119be:	mov	r0, r9
   119c0:	b.n	11556 <repair_qgroups@@Base+0xcae>
   119c2:	mov	r2, sl
   119c4:	mov	r1, fp
   119c6:	mov	r0, r9
   119c8:	bl	10bc8 <repair_qgroups@@Base+0x320>
   119cc:	ldrb.w	r2, [sp, #160]	; 0xa0
   119d0:	cmp	r2, #108	; 0x6c
   119d2:	beq.n	119da <repair_qgroups@@Base+0x1132>
   119d4:	add.w	sl, sl, #1
   119d8:	b.n	117a8 <repair_qgroups@@Base+0xf00>
   119da:	ldr	r3, [sp, #64]	; 0x40
   119dc:	movs	r2, #25
   119de:	add.w	r1, r9, #96	; 0x60
   119e2:	mla	r2, r2, sl, r3
   119e6:	ldr.w	r2, [r2, #17]
   119ea:	adds	r2, #101	; 0x65
   119ec:	add	r1, r2
   119ee:	ldrb	r0, [r1, #20]
   119f0:	cmp	r0, #0
   119f2:	beq.n	119d4 <repair_qgroups@@Base+0x112c>
   119f4:	ldr.w	r3, [r1, #21]!
   119f8:	mov	r7, r3
   119fa:	ldr	r3, [r1, #4]
   119fc:	ldrd	r0, r1, [sp, #32]
   11a00:	cmp	r1, r3
   11a02:	it	eq
   11a04:	cmpeq	r0, r7
   11a06:	bne.n	119d4 <repair_qgroups@@Base+0x112c>
   11a08:	add	r1, sp, #92	; 0x5c
   11a0a:	str	r1, [sp, #8]
   11a0c:	ldrd	r0, r1, [sp, #48]	; 0x30
   11a10:	strd	r0, r1, [sp]
   11a14:	mov	r1, r9
   11a16:	mov	r0, fp
   11a18:	bl	10c30 <repair_qgroups@@Base+0x388>
   11a1c:	subs.w	r8, r0, #0
   11a20:	bge.n	119d4 <repair_qgroups@@Base+0x112c>
   11a22:	mov	r0, r9
   11a24:	bl	1a0a4 <free_extent_buffer@@Base>
   11a28:	cmp.w	r8, #0
   11a2c:	bne.w	111a0 <repair_qgroups@@Base+0x8f8>
   11a30:	ldr	r3, [sp, #92]	; 0x5c
   11a32:	str	r3, [r5, #44]	; 0x2c
   11a34:	ldrd	r0, r1, [r5, #48]	; 0x30
   11a38:	movs	r3, #0
   11a3a:	ldr.w	ip, [r5, #44]	; 0x2c
   11a3e:	ldr	r2, [sp, #92]	; 0x5c
   11a40:	str	r3, [sp, #12]
   11a42:	strd	ip, r3, [sp]
   11a46:	strd	r2, r3, [sp, #152]	; 0x98
   11a4a:	add	r2, sp, #152	; 0x98
   11a4c:	mov	r3, r1
   11a4e:	str	r2, [sp, #8]
   11a50:	mov	r2, r0
   11a52:	vmov	r0, s17
   11a56:	bl	f022 <ulist_add_merge@@Base>
   11a5a:	ldr.w	r9, [sp, #152]	; 0x98
   11a5e:	str.w	r9, [sp, #92]	; 0x5c
   11a62:	subs.w	r8, r0, #0
   11a66:	blt.w	111a0 <repair_qgroups@@Base+0x8f8>
   11a6a:	bne.n	11a98 <repair_qgroups@@Base+0x11f0>
   11a6c:	ldr	r3, [sp, #72]	; 0x48
   11a6e:	cbz	r3, 11a98 <repair_qgroups@@Base+0x11f0>
   11a70:	ldr	r1, [pc, #228]	; (11b58 <repair_qgroups@@Base+0x12b0>)
   11a72:	clz	r3, r9
   11a76:	ldr	r0, [pc, #228]	; (11b5c <repair_qgroups@@Base+0x12b4>)
   11a78:	movw	r2, #841	; 0x349
   11a7c:	add	r1, pc
   11a7e:	lsrs	r3, r3, #5
   11a80:	adds	r1, #29
   11a82:	add	r0, pc
   11a84:	bl	10e34 <repair_qgroups@@Base+0x58c>
   11a88:	mov	r3, r9
   11a8a:	ldr.w	r9, [r9, #16]
   11a8e:	cmp.w	r9, #0
   11a92:	bne.n	11a88 <repair_qgroups@@Base+0x11e0>
   11a94:	ldr	r2, [r5, #44]	; 0x2c
   11a96:	str	r2, [r3, #16]
   11a98:	movs	r3, #0
   11a9a:	str	r3, [sp, #92]	; 0x5c
   11a9c:	ldrd	r2, r3, [r5]
   11aa0:	mov	r0, r5
   11aa2:	str	r3, [r2, #4]
   11aa4:	str	r2, [r3, #0]
   11aa6:	blx	87cc <free@plt+0x4>
   11aaa:	b.n	116e2 <repair_qgroups@@Base+0xe3a>
   11aac:	ldrd	r2, r3, [r0]
   11ab0:	str	r3, [r2, #4]
   11ab2:	str	r2, [r3, #0]
   11ab4:	blx	87cc <free@plt+0x4>
   11ab8:	b.w	111a8 <repair_qgroups@@Base+0x900>
   11abc:	mvn.w	r8, #11
   11ac0:	b.w	111bc <repair_qgroups@@Base+0x914>
   11ac4:	bgt.w	11808 <repair_qgroups@@Base+0xf60>
   11ac8:	b.n	11950 <repair_qgroups@@Base+0x10a8>
   11aca:	mov	r0, r8
   11acc:	add	sp, #204	; 0xcc
   11ace:	vpop	{d8}
   11ad2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ad6:	nop
   11ad8:	ldrb	r2, [r7, #22]
   11ada:	movs	r5, r0
   11adc:	lsls	r4, r7, #9
   11ade:	movs	r0, r0
   11ae0:	udf	#234	; 0xea
   11ae2:	movs	r2, r0
   11ae4:	ble.n	11a3c <repair_qgroups@@Base+0x1194>
   11ae6:	movs	r2, r0
   11ae8:	ble.n	11ba2 <repair_qgroups@@Base+0x12fa>
   11aea:	movs	r2, r0
   11aec:	udf	#14
   11aee:	movs	r2, r0
   11af0:	udf	#4
   11af2:	movs	r2, r0
   11af4:	lsrs	r5, r5, #24
   11af6:	movs	r3, r0
   11af8:	ble.n	11ad8 <repair_qgroups@@Base+0x1230>
   11afa:	movs	r2, r0
   11afc:	lsrs	r7, r2, #24
   11afe:	movs	r3, r0
   11b00:	ble.n	11a9c <repair_qgroups@@Base+0x11f4>
   11b02:	movs	r2, r0
   11b04:	bgt.n	11a66 <repair_qgroups@@Base+0x11be>
   11b06:	movs	r2, r0
   11b08:	ldrb	r4, [r5, #13]
   11b0a:	movs	r5, r0
   11b0c:	blt.n	11a1c <repair_qgroups@@Base+0x1174>
   11b0e:	movs	r2, r0
   11b10:	bge.n	11a9a <repair_qgroups@@Base+0x11f2>
   11b12:	movs	r2, r0
   11b14:	bge.n	11bd0 <repair_qgroups@@Base+0x1328>
   11b16:	movs	r2, r0
   11b18:	bls.n	11be6 <repair_qgroups@@Base+0x133e>
   11b1a:	movs	r2, r0
   11b1c:	bge.n	11b98 <repair_qgroups@@Base+0x12f0>
   11b1e:	movs	r2, r0
   11b20:	bls.n	11bc8 <repair_qgroups@@Base+0x1320>
   11b22:	movs	r2, r0
   11b24:	bge.n	11b70 <repair_qgroups@@Base+0x12c8>
   11b26:	movs	r2, r0
   11b28:	bls.n	11bba <repair_qgroups@@Base+0x1312>
   11b2a:	movs	r2, r0
   11b2c:	bls.n	11be0 <repair_qgroups@@Base+0x1338>
   11b2e:	movs	r2, r0
   11b30:	bhi.n	11c10 <repair_qgroups@@Base+0x1368>
   11b32:	movs	r2, r0
   11b34:	bls.n	11bb8 <repair_qgroups@@Base+0x1310>
   11b36:	movs	r2, r0
   11b38:	bhi.n	11a64 <repair_qgroups@@Base+0x11bc>
   11b3a:	movs	r2, r0
   11b3c:	bhi.n	11c10 <repair_qgroups@@Base+0x1368>
   11b3e:	movs	r2, r0
   11b40:	bvc.n	11abe <repair_qgroups@@Base+0x1216>
   11b42:	movs	r2, r0
   11b44:	bvc.n	11af4 <repair_qgroups@@Base+0x124c>
   11b46:	movs	r2, r0
   11b48:	bhi.n	11bac <repair_qgroups@@Base+0x1304>
   11b4a:	movs	r2, r0
   11b4c:	bvc.n	11b28 <repair_qgroups@@Base+0x1280>
   11b4e:	movs	r2, r0
   11b50:	bvs.n	11b34 <repair_qgroups@@Base+0x128c>
   11b52:	movs	r2, r0
   11b54:	lsls	r5, r2, #28
   11b56:	movs	r3, r0
   11b58:	bmi.n	11a74 <repair_qgroups@@Base+0x11cc>
   11b5a:	movs	r2, r0
   11b5c:	bmi.n	11c06 <repair_qgroups@@Base+0x135e>
   11b5e:	movs	r2, r0
   11b60:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b64:	mov	fp, r2
   11b66:	ldr	r2, [pc, #164]	; (11c0c <repair_qgroups@@Base+0x1364>)
   11b68:	mov	r4, r3
   11b6a:	ldr	r3, [pc, #164]	; (11c10 <repair_qgroups@@Base+0x1368>)
   11b6c:	sub	sp, #28
   11b6e:	add	r2, pc
   11b70:	mov	r7, r0
   11b72:	movs	r0, #0
   11b74:	ldr.w	r9, [sp, #64]	; 0x40
   11b78:	ldr	r3, [r2, r3]
   11b7a:	mov	r8, r1
   11b7c:	ldr	r3, [r3, #0]
   11b7e:	str	r3, [sp, #20]
   11b80:	mov.w	r3, #0
   11b84:	bl	eff8 <ulist_alloc@@Base>
   11b88:	mov	r5, r0
   11b8a:	cbz	r0, 11b9e <repair_qgroups@@Base+0x12f6>
   11b8c:	movs	r0, #0
   11b8e:	bl	eff8 <ulist_alloc@@Base>
   11b92:	str.w	r0, [r9]
   11b96:	cbnz	r0, 11ba4 <repair_qgroups@@Base+0x12fc>
   11b98:	mov	r0, r5
   11b9a:	bl	f00c <ulist_free@@Base>
   11b9e:	mvn.w	r4, #11
   11ba2:	b.n	11bd8 <repair_qgroups@@Base+0x1330>
   11ba4:	add.w	sl, sp, #16
   11ba8:	movs	r6, #0
   11baa:	str	r6, [sp, #16]
   11bac:	str	r6, [sp, #8]
   11bae:	mov	r2, fp
   11bb0:	ldr.w	r3, [r9]
   11bb4:	mov	r1, r8
   11bb6:	mov	r0, r7
   11bb8:	strd	r5, r3, [sp]
   11bbc:	mov	r3, r4
   11bbe:	bl	10f56 <repair_qgroups@@Base+0x6ae>
   11bc2:	subs	r4, r0, #0
   11bc4:	bge.n	11bec <repair_qgroups@@Base+0x1344>
   11bc6:	adds	r3, r4, #2
   11bc8:	beq.n	11bec <repair_qgroups@@Base+0x1344>
   11bca:	mov	r0, r5
   11bcc:	bl	f00c <ulist_free@@Base>
   11bd0:	ldr.w	r0, [r9]
   11bd4:	bl	f00c <ulist_free@@Base>
   11bd8:	ldr	r2, [pc, #56]	; (11c14 <repair_qgroups@@Base+0x136c>)
   11bda:	ldr	r3, [pc, #52]	; (11c10 <repair_qgroups@@Base+0x1368>)
   11bdc:	add	r2, pc
   11bde:	ldr	r3, [r2, r3]
   11be0:	ldr	r2, [r3, #0]
   11be2:	ldr	r3, [sp, #20]
   11be4:	eors	r2, r3
   11be6:	beq.n	11c02 <repair_qgroups@@Base+0x135a>
   11be8:	blx	88e4 <__stack_chk_fail@plt>
   11bec:	mov	r1, sl
   11bee:	mov	r0, r5
   11bf0:	bl	f1f8 <ulist_next@@Base>
   11bf4:	mov	r4, r0
   11bf6:	cbz	r0, 11bfe <repair_qgroups@@Base+0x1356>
   11bf8:	ldrd	fp, r4, [r0]
   11bfc:	b.n	11bac <repair_qgroups@@Base+0x1304>
   11bfe:	mov	r0, r5
   11c00:	b.n	11bd4 <repair_qgroups@@Base+0x132c>
   11c02:	mov	r0, r4
   11c04:	add	sp, #28
   11c06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c0a:	nop
   11c0c:	strb	r2, [r0, #7]
   11c0e:	movs	r5, r0
   11c10:	lsls	r4, r7, #9
   11c12:	movs	r0, r0
   11c14:	strb	r4, [r2, #5]
   11c16:	movs	r5, r0

00011c18 <btrfs_find_all_roots@@Base>:
   11c18:	push	{r4}
   11c1a:	ldr	r4, [sp, #12]
   11c1c:	str	r4, [sp, #4]
   11c1e:	ldr.w	r4, [sp], #4
   11c22:	b.n	11b60 <repair_qgroups@@Base+0x12b8>

00011c24 <inode_item_info@@Base>:
   11c24:	ldr.w	ip, [pc, #68]	; 11c6c <inode_item_info@@Base+0x48>
   11c28:	push	{r4, lr}
   11c2a:	add	ip, pc
   11c2c:	ldr	r4, [pc, #64]	; (11c70 <inode_item_info@@Base+0x4c>)
   11c2e:	sub	sp, #40	; 0x28
   11c30:	ldr.w	r4, [ip, r4]
   11c34:	ldr	r4, [r4, #0]
   11c36:	str	r4, [sp, #36]	; 0x24
   11c38:	mov.w	r4, #0
   11c3c:	strd	r2, r3, [sp]
   11c40:	add	r4, sp, #16
   11c42:	mov	r2, r0
   11c44:	mov	r3, r1
   11c46:	str	r4, [sp, #12]
   11c48:	ldrd	r0, r1, [sp, #48]	; 0x30
   11c4c:	movs	r4, #1
   11c4e:	str	r4, [sp, #8]
   11c50:	bl	1ebf4 <btrfs_find_item@@Base>
   11c54:	ldr	r2, [pc, #28]	; (11c74 <inode_item_info@@Base+0x50>)
   11c56:	ldr	r3, [pc, #24]	; (11c70 <inode_item_info@@Base+0x4c>)
   11c58:	add	r2, pc
   11c5a:	ldr	r3, [r2, r3]
   11c5c:	ldr	r2, [r3, #0]
   11c5e:	ldr	r3, [sp, #36]	; 0x24
   11c60:	eors	r2, r3
   11c62:	beq.n	11c68 <inode_item_info@@Base+0x44>
   11c64:	blx	88e4 <__stack_chk_fail@plt>
   11c68:	add	sp, #40	; 0x28
   11c6a:	pop	{r4, pc}
   11c6c:	strb	r6, [r0, #4]
   11c6e:	movs	r5, r0
   11c70:	lsls	r4, r7, #9
   11c72:	movs	r0, r0
   11c74:	strb	r0, [r3, #3]
   11c76:	movs	r5, r0

00011c78 <btrfs_find_one_extref@@Base>:
   11c78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c7c:	mov	r6, r2
   11c7e:	ldr	r2, [pc, #204]	; (11d4c <btrfs_find_one_extref@@Base+0xd4>)
   11c80:	mov	r7, r3
   11c82:	ldr	r3, [pc, #204]	; (11d50 <btrfs_find_one_extref@@Base+0xd8>)
   11c84:	sub	sp, #60	; 0x3c
   11c86:	add	r2, pc
   11c88:	mov.w	sl, #0
   11c8c:	ldrd	r4, r9, [sp, #104]	; 0x68
   11c90:	mov	r1, r0
   11c92:	ldr	r3, [r2, r3]
   11c94:	mov	r8, r0
   11c96:	mov	r0, sl
   11c98:	add	r2, sp, #12
   11c9a:	ldr	r3, [r3, #0]
   11c9c:	str	r3, [sp, #52]	; 0x34
   11c9e:	mov.w	r3, #0
   11ca2:	movs	r3, #13
   11ca4:	strb.w	r3, [sp, #20]
   11ca8:	ldr	r3, [sp, #96]	; 0x60
   11caa:	strd	sl, sl, [sp]
   11cae:	ldr	r5, [sp, #112]	; 0x70
   11cb0:	str.w	r3, [sp, #21]
   11cb4:	ldr	r3, [sp, #100]	; 0x64
   11cb6:	strd	r6, r7, [sp, #12]
   11cba:	str.w	r3, [sp, #25]
   11cbe:	mov	r3, r4
   11cc0:	bl	1d6c0 <btrfs_search_slot@@Base>
   11cc4:	cmp	r0, #0
   11cc6:	blt.n	11cee <btrfs_find_one_extref@@Base+0x76>
   11cc8:	ldr.w	fp, [r4]
   11ccc:	ldr	r2, [r4, #32]
   11cce:	ldr.w	r3, [fp, #192]	; 0xc0
   11cd2:	cmp	r3, r2
   11cd4:	bhi.n	11d02 <btrfs_find_one_extref@@Base+0x8a>
   11cd6:	strb.w	sl, [r4, #65]	; 0x41
   11cda:	mov	r1, r4
   11cdc:	ldr.w	r0, [r8, #464]	; 0x1d0
   11ce0:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   11ce4:	cmp	r0, #0
   11ce6:	beq.n	11cc8 <btrfs_find_one_extref@@Base+0x50>
   11ce8:	ble.n	11cee <btrfs_find_one_extref@@Base+0x76>
   11cea:	mvn.w	r0, #1
   11cee:	ldr	r2, [pc, #100]	; (11d54 <btrfs_find_one_extref@@Base+0xdc>)
   11cf0:	ldr	r3, [pc, #92]	; (11d50 <btrfs_find_one_extref@@Base+0xd8>)
   11cf2:	add	r2, pc
   11cf4:	ldr	r3, [r2, r3]
   11cf6:	ldr	r2, [r3, #0]
   11cf8:	ldr	r3, [sp, #52]	; 0x34
   11cfa:	eors	r2, r3
   11cfc:	beq.n	11d46 <btrfs_find_one_extref@@Base+0xce>
   11cfe:	blx	88e4 <__stack_chk_fail@plt>
   11d02:	add	r1, sp, #32
   11d04:	mov	r0, fp
   11d06:	bl	10bc8 <repair_qgroups@@Base+0x320>
   11d0a:	ldrd	r2, r3, [sp, #32]
   11d0e:	cmp	r7, r3
   11d10:	it	eq
   11d12:	cmpeq	r6, r2
   11d14:	bne.n	11cea <btrfs_find_one_extref@@Base+0x72>
   11d16:	ldrb.w	r3, [sp, #40]	; 0x28
   11d1a:	cmp	r3, #13
   11d1c:	bne.n	11cea <btrfs_find_one_extref@@Base+0x72>
   11d1e:	ldr	r3, [r4, #32]
   11d20:	movs	r0, #25
   11d22:	mla	r3, r0, r3, fp
   11d26:	ldr.w	r3, [r3, #214]	; 0xd6
   11d2a:	adds	r3, #101	; 0x65
   11d2c:	str.w	r3, [r9]
   11d30:	cbz	r5, 11d42 <btrfs_find_one_extref@@Base+0xca>
   11d32:	ldr.w	r2, [sp, #41]	; 0x29
   11d36:	movs	r0, #0
   11d38:	ldr.w	r3, [sp, #45]	; 0x2d
   11d3c:	strd	r2, r3, [r5]
   11d40:	b.n	11cee <btrfs_find_one_extref@@Base+0x76>
   11d42:	mov	r0, r5
   11d44:	b.n	11cee <btrfs_find_one_extref@@Base+0x76>
   11d46:	add	sp, #60	; 0x3c
   11d48:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d4c:	strb	r2, [r5, #2]
   11d4e:	movs	r5, r0
   11d50:	lsls	r4, r7, #9
   11d52:	movs	r0, r0
   11d54:	strb	r6, [r7, #0]
   11d56:	movs	r5, r0

00011d58 <btrfs_ref_to_path@@Base>:
   11d58:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d5c:	mov	r7, r0
   11d5e:	ldr	r0, [pc, #304]	; (11e90 <btrfs_ref_to_path@@Base+0x138>)
   11d60:	sub	sp, #68	; 0x44
   11d62:	mov	r5, r1
   11d64:	ldr	r1, [pc, #300]	; (11e94 <btrfs_ref_to_path@@Base+0x13c>)
   11d66:	add	r0, pc
   11d68:	mov	ip, r2
   11d6a:	mov	r2, r3
   11d6c:	ldrd	r6, r3, [sp, #120]	; 0x78
   11d70:	ldr	r1, [r0, r1]
   11d72:	adds.w	r9, r3, #4294967295	; 0xffffffff
   11d76:	ldr.w	r8, [sp, #104]	; 0x68
   11d7a:	ldr	r1, [r1, #0]
   11d7c:	str	r1, [sp, #60]	; 0x3c
   11d7e:	mov.w	r1, #0
   11d82:	mov	r0, r3
   11d84:	mov.w	r1, #0
   11d88:	adc.w	sl, r1, #4294967295	; 0xffffffff
   11d8c:	orrs	r1, r0
   11d8e:	mov	r4, r8
   11d90:	ittt	ne
   11d92:	addne	r3, r3, r6
   11d94:	movne	r1, #0
   11d96:	strbne.w	r1, [r3, #-1]
   11d9a:	add	r3, sp, #40	; 0x28
   11d9c:	str	r3, [sp, #36]	; 0x24
   11d9e:	subs.w	r0, r9, ip
   11da2:	sbc.w	r1, sl, #0
   11da6:	cmp	r0, #0
   11da8:	sbcs.w	r3, r1, #0
   11dac:	strd	r0, r1, [sp, #16]
   11db0:	blt.n	11dbe <btrfs_ref_to_path@@Base+0x66>
   11db2:	ldr	r1, [sp, #16]
   11db4:	mov	r3, ip
   11db6:	mov	r0, r4
   11db8:	adds	r1, r6, r1
   11dba:	bl	1a79e <read_extent_buffer@@Base>
   11dbe:	cmp	r4, r8
   11dc0:	beq.n	11dc8 <btrfs_ref_to_path@@Base+0x70>
   11dc2:	mov	r0, r4
   11dc4:	bl	1a0a4 <free_extent_buffer@@Base>
   11dc8:	ldr	r3, [sp, #36]	; 0x24
   11dca:	movs	r4, #0
   11dcc:	mov	r1, r5
   11dce:	mov	r0, r7
   11dd0:	str	r3, [sp, #12]
   11dd2:	movs	r3, #12
   11dd4:	str	r3, [sp, #8]
   11dd6:	movs	r3, #0
   11dd8:	strd	r3, r4, [sp]
   11ddc:	ldrd	r2, r3, [sp, #112]	; 0x70
   11de0:	bl	1ebf4 <btrfs_find_item@@Base>
   11de4:	subs	r4, r0, #0
   11de6:	bgt.n	11e5e <btrfs_ref_to_path@@Base+0x106>
   11de8:	bne.n	11e62 <btrfs_ref_to_path@@Base+0x10a>
   11dea:	ldr.w	r3, [sp, #49]	; 0x31
   11dee:	str	r3, [sp, #24]
   11df0:	ldr.w	r3, [sp, #53]	; 0x35
   11df4:	str	r3, [sp, #28]
   11df6:	ldrd	r0, r1, [sp, #24]
   11dfa:	ldrd	r2, r3, [sp, #112]	; 0x70
   11dfe:	cmp	r3, r1
   11e00:	it	eq
   11e02:	cmpeq	r2, r0
   11e04:	beq.n	11e62 <btrfs_ref_to_path@@Base+0x10a>
   11e06:	ldr	r4, [r5, #0]
   11e08:	mov	r0, r5
   11e0a:	ldr.w	fp, [r5, #32]
   11e0e:	cmp	r8, r4
   11e10:	ittt	ne
   11e12:	ldrne	r3, [r4, #80]	; 0x50
   11e14:	addne	r3, #1
   11e16:	strne	r3, [r4, #80]	; 0x50
   11e18:	bl	1b2dc <btrfs_release_path@@Base>
   11e1c:	add.w	r1, r4, #96	; 0x60
   11e20:	movs	r3, #25
   11e22:	mla	fp, r3, fp, r1
   11e26:	ldr.w	r2, [fp, #118]	; 0x76
   11e2a:	add.w	r3, r2, #101	; 0x65
   11e2e:	adds	r2, #111	; 0x6f
   11e30:	add	r1, r3
   11e32:	ldr	r3, [sp, #16]
   11e34:	adds.w	r9, r3, #4294967295	; 0xffffffff
   11e38:	ldr	r3, [sp, #20]
   11e3a:	ldrh.w	ip, [r1, #8]
   11e3e:	adc.w	sl, r3, #4294967295	; 0xffffffff
   11e42:	cmp.w	r9, #0
   11e46:	sbcs.w	r3, sl, #0
   11e4a:	blt.n	11e54 <btrfs_ref_to_path@@Base+0xfc>
   11e4c:	add.w	r3, r6, r9
   11e50:	movs	r1, #47	; 0x2f
   11e52:	strb	r1, [r3, #0]
   11e54:	ldrd	r0, r1, [sp, #24]
   11e58:	strd	r0, r1, [sp, #112]	; 0x70
   11e5c:	b.n	11d9e <btrfs_ref_to_path@@Base+0x46>
   11e5e:	mvn.w	r4, #1
   11e62:	mov	r0, r5
   11e64:	bl	1b2dc <btrfs_release_path@@Base>
   11e68:	cbz	r4, 11e80 <btrfs_ref_to_path@@Base+0x128>
   11e6a:	mov	r0, r4
   11e6c:	ldr	r2, [pc, #40]	; (11e98 <btrfs_ref_to_path@@Base+0x140>)
   11e6e:	ldr	r3, [pc, #36]	; (11e94 <btrfs_ref_to_path@@Base+0x13c>)
   11e70:	add	r2, pc
   11e72:	ldr	r3, [r2, r3]
   11e74:	ldr	r2, [r3, #0]
   11e76:	ldr	r3, [sp, #60]	; 0x3c
   11e78:	eors	r2, r3
   11e7a:	beq.n	11e88 <btrfs_ref_to_path@@Base+0x130>
   11e7c:	blx	88e4 <__stack_chk_fail@plt>
   11e80:	ldr	r3, [sp, #16]
   11e82:	add	r3, r6
   11e84:	mov	r0, r3
   11e86:	b.n	11e6c <btrfs_ref_to_path@@Base+0x114>
   11e88:	add	sp, #68	; 0x44
   11e8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e8e:	nop
   11e90:	ldr	r2, [r1, #124]	; 0x7c
   11e92:	movs	r5, r0
   11e94:	lsls	r4, r7, #9
   11e96:	movs	r0, r0
   11e98:	ldr	r0, [r0, #108]	; 0x6c
   11e9a:	movs	r5, r0
   11e9c:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   11ea0:	sub	sp, #24
   11ea2:	mov	r9, r1
   11ea4:	mov	r8, r0
   11ea6:	ldr	r4, [sp, #52]	; 0x34
   11ea8:	ldr	r1, [r4, #8]
   11eaa:	ldr	r6, [r1, #8]
   11eac:	add.w	r5, r1, r6, lsl #2
   11eb0:	ldr	r1, [r1, #0]
   11eb2:	adds	r5, #20
   11eb4:	strd	r8, r9, [sp, #8]
   11eb8:	cmp	r1, #4
   11eba:	it	cc
   11ebc:	movcc	r1, #4
   11ebe:	subs	r1, #4
   11ec0:	strd	r5, r1, [sp, #16]
   11ec4:	ldr	r1, [sp, #48]	; 0x30
   11ec6:	str	r1, [sp, #0]
   11ec8:	ldrd	r1, r0, [r4]
   11ecc:	bl	11d58 <btrfs_ref_to_path@@Base>
   11ed0:	cmn.w	r0, #4096	; 0x1000
   11ed4:	bhi.n	11efa <btrfs_ref_to_path@@Base+0x1a2>
   11ed6:	cmp	r5, r0
   11ed8:	ldr	r2, [r4, #8]
   11eda:	bcs.n	11f00 <btrfs_ref_to_path@@Base+0x1a8>
   11edc:	adds	r6, #2
   11ede:	movs	r3, #0
   11ee0:	add.w	r1, r2, r6, lsl #3
   11ee4:	str.w	r0, [r2, r6, lsl #3]
   11ee8:	subs	r0, r0, r5
   11eea:	str	r3, [r1, #4]
   11eec:	ldr	r1, [r4, #8]
   11eee:	ldr	r2, [r1, #8]
   11ef0:	adds	r2, #1
   11ef2:	str	r2, [r1, #8]
   11ef4:	ldr	r2, [r4, #8]
   11ef6:	str	r0, [r2, #0]
   11ef8:	mov	r0, r3
   11efa:	add	sp, #24
   11efc:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   11f00:	ldr	r3, [r2, #12]
   11f02:	subs	r0, r5, r0
   11f04:	adds	r3, #1
   11f06:	str	r3, [r2, #12]
   11f08:	ldr	r3, [r4, #8]
   11f0a:	ldr	r5, [r3, #4]
   11f0c:	add	r0, r5
   11f0e:	str	r0, [r3, #4]
   11f10:	ldr	r3, [r4, #8]
   11f12:	movs	r0, #0
   11f14:	str	r0, [r3, #0]
   11f16:	b.n	11efa <btrfs_ref_to_path@@Base+0x1a2>

00011f18 <extent_from_logical@@Base>:
   11f18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11f1c:	mov	r8, r2
   11f1e:	ldr	r2, [pc, #380]	; (1209c <extent_from_logical@@Base+0x184>)
   11f20:	mov	r9, r3
   11f22:	ldr	r3, [pc, #380]	; (120a0 <extent_from_logical@@Base+0x188>)
   11f24:	sub	sp, #40	; 0x28
   11f26:	add	r2, pc
   11f28:	mov	r7, r0
   11f2a:	ldrd	r5, r6, [sp, #72]	; 0x48
   11f2e:	ldr	r3, [r2, r3]
   11f30:	ldr.w	sl, [sp, #80]	; 0x50
   11f34:	ldr	r3, [r3, #0]
   11f36:	str	r3, [sp, #36]	; 0x24
   11f38:	mov.w	r3, #0
   11f3c:	ldr.w	r3, [r0, #308]	; 0x134
   11f40:	movs	r0, #0
   11f42:	ldr.w	r1, [r3, #188]	; 0xbc
   11f46:	mov	r3, r0
   11f48:	strd	r0, r0, [sp]
   11f4c:	and.w	r2, r1, #256	; 0x100
   11f50:	ldr	r1, [r7, #24]
   11f52:	orrs	r3, r2
   11f54:	mov.w	r2, #4294967295	; 0xffffffff
   11f58:	strb.w	r2, [sp, #25]
   11f5c:	ite	ne
   11f5e:	movne	r3, #169	; 0xa9
   11f60:	moveq	r3, #168	; 0xa8
   11f62:	strb.w	r2, [sp, #26]
   11f66:	strb.w	r3, [sp, #24]
   11f6a:	mov	r3, r5
   11f6c:	strb.w	r2, [sp, #27]
   11f70:	strb.w	r2, [sp, #28]
   11f74:	strb.w	r2, [sp, #29]
   11f78:	strb.w	r2, [sp, #30]
   11f7c:	strb.w	r2, [sp, #31]
   11f80:	strb.w	r2, [sp, #32]
   11f84:	add	r2, sp, #16
   11f86:	strd	r8, r9, [sp, #16]
   11f8a:	bl	1d6c0 <btrfs_search_slot@@Base>
   11f8e:	subs	r4, r0, #0
   11f90:	blt.n	11fa8 <extent_from_logical@@Base+0x90>
   11f92:	ldr	r0, [r7, #24]
   11f94:	movs	r2, #0
   11f96:	movs	r3, #0
   11f98:	mov	r1, r5
   11f9a:	bl	1ee1c <btrfs_previous_extent_item@@Base>
   11f9e:	subs	r4, r0, #0
   11fa0:	beq.n	11fbc <extent_from_logical@@Base+0xa4>
   11fa2:	ble.n	11fa8 <extent_from_logical@@Base+0x90>
   11fa4:	mvn.w	r4, #1
   11fa8:	ldr	r2, [pc, #248]	; (120a4 <extent_from_logical@@Base+0x18c>)
   11faa:	ldr	r3, [pc, #244]	; (120a0 <extent_from_logical@@Base+0x188>)
   11fac:	add	r2, pc
   11fae:	ldr	r3, [r2, r3]
   11fb0:	ldr	r2, [r3, #0]
   11fb2:	ldr	r3, [sp, #36]	; 0x24
   11fb4:	eors	r2, r3
   11fb6:	beq.n	12094 <extent_from_logical@@Base+0x17c>
   11fb8:	blx	88e4 <__stack_chk_fail@plt>
   11fbc:	ldr	r2, [r5, #32]
   11fbe:	mov	r1, r6
   11fc0:	ldr	r0, [r5, #0]
   11fc2:	bl	10bc8 <repair_qgroups@@Base+0x320>
   11fc6:	ldrb	r3, [r6, #8]
   11fc8:	cmp	r3, #169	; 0xa9
   11fca:	bne.n	1204a <extent_from_logical@@Base+0x132>
   11fcc:	ldr.w	r1, [r7, #384]	; 0x180
   11fd0:	movs	r0, #0
   11fd2:	ldr	r3, [r6, #4]
   11fd4:	ldr	r2, [r6, #0]
   11fd6:	cmp	r9, r3
   11fd8:	it	eq
   11fda:	cmpeq	r8, r2
   11fdc:	bcc.n	11fa4 <extent_from_logical@@Base+0x8c>
   11fde:	adds	r1, r2, r1
   11fe0:	str	r1, [sp, #8]
   11fe2:	adcs	r3, r0
   11fe4:	str	r3, [sp, #12]
   11fe6:	ldrd	r2, r3, [sp, #8]
   11fea:	cmp	r9, r3
   11fec:	it	eq
   11fee:	cmpeq	r8, r2
   11ff0:	bcs.n	11fa4 <extent_from_logical@@Base+0x8c>
   11ff2:	ldr	r6, [r5, #0]
   11ff4:	movs	r2, #25
   11ff6:	ldr	r3, [r5, #32]
   11ff8:	adds	r6, #96	; 0x60
   11ffa:	ldr	r1, [pc, #172]	; (120a8 <extent_from_logical@@Base+0x190>)
   11ffc:	ldr	r0, [pc, #172]	; (120ac <extent_from_logical@@Base+0x194>)
   11ffe:	mla	r3, r2, r3, r6
   12002:	add	r1, pc
   12004:	adds	r1, #148	; 0x94
   12006:	add	r0, pc
   12008:	movw	r2, #1178	; 0x49a
   1200c:	str	r1, [sp, #8]
   1200e:	add.w	r5, r3, #101	; 0x65
   12012:	ldr.w	r3, [r3, #122]	; 0x7a
   12016:	cmp	r3, #23
   12018:	ite	hi
   1201a:	movhi	r3, #0
   1201c:	movls	r3, #1
   1201e:	bl	10e34 <repair_qgroups@@Base+0x58c>
   12022:	ldr.w	r3, [r5, #17]
   12026:	ldr	r1, [sp, #8]
   12028:	add	r6, r3
   1202a:	ldr.w	r5, [r6, #117]	; 0x75
   1202e:	cmp.w	sl, #0
   12032:	beq.n	12080 <extent_from_logical@@Base+0x168>
   12034:	and.w	r2, r5, #2
   12038:	movs	r0, #0
   1203a:	mov	r3, r0
   1203c:	orrs	r3, r2
   1203e:	beq.n	1205c <extent_from_logical@@Base+0x144>
   12040:	movs	r2, #2
   12042:	movs	r3, #0
   12044:	strd	r2, r3, [sl]
   12048:	b.n	11fa8 <extent_from_logical@@Base+0x90>
   1204a:	cmp	r3, #168	; 0xa8
   1204c:	iteet	ne
   1204e:	movne	r1, #0
   12050:	ldreq.w	r1, [r6, #9]
   12054:	ldreq.w	r0, [r6, #13]
   12058:	movne	r0, r1
   1205a:	b.n	11fd2 <extent_from_logical@@Base+0xba>
   1205c:	and.w	r2, r5, #1
   12060:	mov	r3, r0
   12062:	orrs	r3, r2
   12064:	beq.n	1206a <extent_from_logical@@Base+0x152>
   12066:	movs	r2, #1
   12068:	b.n	12042 <extent_from_logical@@Base+0x12a>
   1206a:	ldr	r0, [pc, #68]	; (120b0 <extent_from_logical@@Base+0x198>)
   1206c:	mov	r2, r1
   1206e:	ldr	r1, [pc, #68]	; (120b4 <extent_from_logical@@Base+0x19c>)
   12070:	movs	r3, #1
   12072:	add	r0, pc
   12074:	str	r3, [sp, #0]
   12076:	add	r1, pc
   12078:	movw	r3, #1194	; 0x4aa
   1207c:	bl	10d9a <repair_qgroups@@Base+0x4f2>
   12080:	ldr	r0, [pc, #52]	; (120b8 <extent_from_logical@@Base+0x1a0>)
   12082:	movs	r3, #1
   12084:	movw	r2, #1197	; 0x4ad
   12088:	mvn.w	r4, #4
   1208c:	add	r0, pc
   1208e:	bl	10e54 <repair_qgroups@@Base+0x5ac>
   12092:	b.n	11fa8 <extent_from_logical@@Base+0x90>
   12094:	mov	r0, r4
   12096:	add	sp, #40	; 0x28
   12098:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1209c:	ldr	r2, [r1, #96]	; 0x60
   1209e:	movs	r5, r0
   120a0:	lsls	r4, r7, #9
   120a2:	movs	r0, r0
   120a4:	ldr	r4, [r0, #88]	; 0x58
   120a6:	movs	r5, r0
   120a8:	ldmia	r7!, {r1, r2}
   120aa:	movs	r2, r0
   120ac:	ldmia	r5!, {r0, r2, r4, r6, r7}
   120ae:	movs	r2, r0
   120b0:	cdp2	0, 12, cr0, cr3, cr2, {0}
   120b4:	ldmia	r5!, {r1, r4, r6}
   120b6:	movs	r2, r0
   120b8:	cdp2	0, 10, cr0, cr9, cr2, {0}

000120bc <tree_backref_for_extent@@Base>:
   120bc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120c0:	mov	r5, r3
   120c2:	ldr	r3, [r0, #0]
   120c4:	sub	sp, #20
   120c6:	mov	r4, r0
   120c8:	adds	r3, #1
   120ca:	strd	r1, r2, [sp, #8]
   120ce:	beq.n	12128 <tree_backref_for_extent@@Base+0x6c>
   120d0:	ldr.w	sl, [pc, #228]	; 121b8 <tree_backref_for_extent@@Base+0xfc>
   120d4:	ldr.w	fp, [pc, #228]	; 121bc <tree_backref_for_extent@@Base+0x100>
   120d8:	add	sl, pc
   120da:	add.w	sl, sl, #168	; 0xa8
   120de:	add	fp, pc
   120e0:	ldr	r3, [sp, #8]
   120e2:	add.w	r6, r3, #96	; 0x60
   120e6:	ldr	r3, [r4, #0]
   120e8:	cbz	r3, 12130 <tree_backref_for_extent@@Base+0x74>
   120ea:	ldr	r3, [sp, #56]	; 0x38
   120ec:	add.w	r9, r5, r3
   120f0:	ldr	r3, [r4, #0]
   120f2:	add.w	r8, r6, r3
   120f6:	ldrb	r7, [r6, r3]
   120f8:	cmp	r7, #176	; 0xb0
   120fa:	bne.n	12178 <tree_backref_for_extent@@Base+0xbc>
   120fc:	movs	r2, #9
   120fe:	add	r3, r2
   12100:	str	r3, [r4, #0]
   12102:	cmp	r9, r3
   12104:	bcs.n	1211a <tree_backref_for_extent@@Base+0x5e>
   12106:	ldr	r1, [pc, #184]	; (121c0 <tree_backref_for_extent@@Base+0x104>)
   12108:	movs	r3, #1
   1210a:	ldr	r0, [pc, #184]	; (121c4 <tree_backref_for_extent@@Base+0x108>)
   1210c:	movw	r2, #1247	; 0x4df
   12110:	add	r1, pc
   12112:	adds	r1, #168	; 0xa8
   12114:	add	r0, pc
   12116:	bl	10e54 <repair_qgroups@@Base+0x5ac>
   1211a:	cmp	r7, #176	; 0xb0
   1211c:	ldr	r3, [r4, #0]
   1211e:	beq.n	12190 <tree_backref_for_extent@@Base+0xd4>
   12120:	cmp	r7, #182	; 0xb6
   12122:	beq.n	12190 <tree_backref_for_extent@@Base+0xd4>
   12124:	cmp	r9, r3
   12126:	bne.n	120e0 <tree_backref_for_extent@@Base+0x24>
   12128:	movs	r0, #1
   1212a:	add	sp, #20
   1212c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12130:	adds	r2, r6, r5
   12132:	ldr	r2, [r2, #16]
   12134:	and.w	r2, r2, #2
   12138:	strd	r2, r3, [sp]
   1213c:	ldrd	r2, r3, [sp]
   12140:	orrs	r3, r2
   12142:	beq.n	1214c <tree_backref_for_extent@@Base+0x90>
   12144:	ldr	r3, [sp, #12]
   12146:	ldrb	r3, [r3, #8]
   12148:	cmp	r3, #169	; 0xa9
   1214a:	bne.n	12160 <tree_backref_for_extent@@Base+0xa4>
   1214c:	add.w	r3, r5, #24
   12150:	ldr	r2, [sp, #56]	; 0x38
   12152:	str	r3, [r4, #0]
   12154:	adds	r2, r5, r2
   12156:	cmp	r3, r2
   12158:	bcc.n	120ea <tree_backref_for_extent@@Base+0x2e>
   1215a:	mvn.w	r0, #1
   1215e:	b.n	1212a <tree_backref_for_extent@@Base+0x6e>
   12160:	cmp	r3, #168	; 0xa8
   12162:	beq.n	12172 <tree_backref_for_extent@@Base+0xb6>
   12164:	movs	r3, #1
   12166:	movw	r2, #1229	; 0x4cd
   1216a:	mov	r1, sl
   1216c:	mov	r0, fp
   1216e:	bl	10e54 <repair_qgroups@@Base+0x5ac>
   12172:	add.w	r3, r5, #42	; 0x2a
   12176:	b.n	12150 <tree_backref_for_extent@@Base+0x94>
   12178:	cmp	r7, #182	; 0xb6
   1217a:	beq.n	120fc <tree_backref_for_extent@@Base+0x40>
   1217c:	cmp	r7, #184	; 0xb8
   1217e:	beq.n	12188 <tree_backref_for_extent@@Base+0xcc>
   12180:	cmp	r7, #178	; 0xb2
   12182:	beq.n	1218c <tree_backref_for_extent@@Base+0xd0>
   12184:	bl	10dd0 <repair_qgroups@@Base+0x528>
   12188:	movs	r2, #13
   1218a:	b.n	120fe <tree_backref_for_extent@@Base+0x42>
   1218c:	movs	r2, #29
   1218e:	b.n	120fe <tree_backref_for_extent@@Base+0x42>
   12190:	ldr.w	r1, [r8, #1]!
   12194:	add	r5, r6
   12196:	ldr	r0, [sp, #60]	; 0x3c
   12198:	cmp	r9, r3
   1219a:	ldr.w	r2, [r8, #4]
   1219e:	str	r1, [r0, #0]
   121a0:	str	r2, [r0, #4]
   121a2:	ldr	r2, [sp, #64]	; 0x40
   121a4:	ldrb.w	r1, [r5, #41]	; 0x29
   121a8:	strb	r1, [r2, #0]
   121aa:	bne.n	121b2 <tree_backref_for_extent@@Base+0xf6>
   121ac:	mov.w	r3, #4294967295	; 0xffffffff
   121b0:	str	r3, [r4, #0]
   121b2:	movs	r0, #0
   121b4:	b.n	1212a <tree_backref_for_extent@@Base+0x6e>
   121b6:	nop
   121b8:	ldmia	r6!, {r4, r5}
   121ba:	movs	r2, r0
   121bc:	ldmia	r5, {r2, r3, r4, r5, r6, r7}
   121be:	movs	r2, r0
   121c0:	ldmia	r5, {r3, r4, r5, r6, r7}
   121c2:	movs	r2, r0
   121c4:	ldmia	r5, {r0, r3, r5, r6, r7}
   121c6:	movs	r2, r0

000121c8 <iterate_extent_inodes@@Base>:
   121c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121cc:	movs	r5, #0
   121ce:	vpush	{d8}
   121d2:	vmov	s16, r0
   121d6:	mov	r0, r5
   121d8:	sub	sp, #60	; 0x3c
   121da:	str	r3, [sp, #16]
   121dc:	ldr	r3, [sp, #116]	; 0x74
   121de:	str	r2, [sp, #36]	; 0x24
   121e0:	ldr	r2, [pc, #240]	; (122d4 <iterate_extent_inodes@@Base+0x10c>)
   121e2:	str	r3, [sp, #28]
   121e4:	ldr	r3, [sp, #120]	; 0x78
   121e6:	add	r2, pc
   121e8:	str	r3, [sp, #32]
   121ea:	ldr	r3, [pc, #236]	; (122d8 <iterate_extent_inodes@@Base+0x110>)
   121ec:	ldr	r3, [r2, r3]
   121ee:	ldr	r3, [r3, #0]
   121f0:	str	r3, [sp, #52]	; 0x34
   121f2:	mov.w	r3, #0
   121f6:	str	r5, [sp, #40]	; 0x28
   121f8:	bl	eff8 <ulist_alloc@@Base>
   121fc:	mov	r4, r0
   121fe:	cmp	r0, #0
   12200:	beq.n	122c2 <iterate_extent_inodes@@Base+0xfa>
   12202:	add	r3, sp, #104	; 0x68
   12204:	str	r0, [sp, #0]
   12206:	strd	r5, r3, [sp, #4]
   1220a:	mov	r0, r5
   1220c:	vmov	r1, s16
   12210:	ldr	r2, [sp, #36]	; 0x24
   12212:	ldr	r3, [sp, #16]
   12214:	bl	10f56 <repair_qgroups@@Base+0x6ae>
   12218:	subs.w	r9, r0, #0
   1221c:	bge.n	1223e <iterate_extent_inodes@@Base+0x76>
   1221e:	cmn.w	r9, #2
   12222:	beq.n	1223e <iterate_extent_inodes@@Base+0x76>
   12224:	mov	r0, r4
   12226:	bl	10b5c <repair_qgroups@@Base+0x2b4>
   1222a:	ldr	r2, [pc, #176]	; (122dc <iterate_extent_inodes@@Base+0x114>)
   1222c:	ldr	r3, [pc, #168]	; (122d8 <iterate_extent_inodes@@Base+0x110>)
   1222e:	add	r2, pc
   12230:	ldr	r3, [r2, r3]
   12232:	ldr	r2, [r3, #0]
   12234:	ldr	r3, [sp, #52]	; 0x34
   12236:	eors	r2, r3
   12238:	beq.n	122c8 <iterate_extent_inodes@@Base+0x100>
   1223a:	blx	88e4 <__stack_chk_fail@plt>
   1223e:	add.w	r8, sp, #44	; 0x2c
   12242:	add.w	sl, sp, #40	; 0x28
   12246:	movs	r3, #0
   12248:	str	r3, [sp, #44]	; 0x2c
   1224a:	mov	r1, r8
   1224c:	mov	r0, r4
   1224e:	bl	f1f8 <ulist_next@@Base>
   12252:	mov	r5, r0
   12254:	cbnz	r0, 1225a <iterate_extent_inodes@@Base+0x92>
   12256:	mov	r9, r0
   12258:	b.n	12224 <iterate_extent_inodes@@Base+0x5c>
   1225a:	str.w	sl, [sp]
   1225e:	movs	r0, #0
   12260:	vmov	r1, s16
   12264:	ldrd	r2, r3, [r5]
   12268:	bl	11b60 <repair_qgroups@@Base+0x12b8>
   1226c:	cbnz	r0, 122be <iterate_extent_inodes@@Base+0xf6>
   1226e:	add.w	fp, sp, #48	; 0x30
   12272:	str	r0, [sp, #48]	; 0x30
   12274:	ldr	r0, [sp, #40]	; 0x28
   12276:	mov	r1, fp
   12278:	bl	f1f8 <ulist_next@@Base>
   1227c:	cbnz	r0, 1228e <iterate_extent_inodes@@Base+0xc6>
   1227e:	mov	r9, r0
   12280:	ldr	r0, [sp, #40]	; 0x28
   12282:	bl	f00c <ulist_free@@Base>
   12286:	cmp.w	r9, #0
   1228a:	beq.n	1224a <iterate_extent_inodes@@Base+0x82>
   1228c:	b.n	12224 <iterate_extent_inodes@@Base+0x5c>
   1228e:	ldrd	r2, r3, [r0]
   12292:	ldr	r6, [r5, #8]
   12294:	strd	r2, r3, [sp, #16]
   12298:	cmp	r6, #0
   1229a:	beq.n	12274 <iterate_extent_inodes@@Base+0xac>
   1229c:	ldr	r3, [sp, #32]
   1229e:	ldr	r7, [sp, #28]
   122a0:	str	r3, [sp, #8]
   122a2:	ldrd	r2, r3, [sp, #16]
   122a6:	strd	r2, r3, [sp]
   122aa:	ldrd	r2, r3, [r6, #8]
   122ae:	ldrd	r0, r1, [r6]
   122b2:	blx	r7
   122b4:	mov	r9, r0
   122b6:	cmp	r0, #0
   122b8:	bne.n	12280 <iterate_extent_inodes@@Base+0xb8>
   122ba:	ldr	r6, [r6, #16]
   122bc:	b.n	12298 <iterate_extent_inodes@@Base+0xd0>
   122be:	mov	r9, r0
   122c0:	b.n	12224 <iterate_extent_inodes@@Base+0x5c>
   122c2:	mvn.w	r9, #11
   122c6:	b.n	1222a <iterate_extent_inodes@@Base+0x62>
   122c8:	mov	r0, r9
   122ca:	add	sp, #60	; 0x3c
   122cc:	vpop	{d8}
   122d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   122d4:	ldr	r2, [r1, #52]	; 0x34
   122d6:	movs	r5, r0
   122d8:	lsls	r4, r7, #9
   122da:	movs	r0, r0
   122dc:	ldr	r2, [r0, #48]	; 0x30
   122de:	movs	r5, r0

000122e0 <iterate_inodes_from_logical@@Base>:
   122e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   122e4:	mov	r7, r2
   122e6:	ldr	r2, [pc, #144]	; (12378 <iterate_inodes_from_logical@@Base+0x98>)
   122e8:	mov	r8, r3
   122ea:	ldr	r3, [pc, #144]	; (1237c <iterate_inodes_from_logical@@Base+0x9c>)
   122ec:	sub	sp, #56	; 0x38
   122ee:	add	r2, pc
   122f0:	mov	r5, r0
   122f2:	mov	r6, r1
   122f4:	ldrd	r9, sl, [sp, #88]	; 0x58
   122f8:	ldr	r3, [r2, r3]
   122fa:	movs	r2, #0
   122fc:	ldr	r3, [r3, #0]
   122fe:	str	r3, [sp, #52]	; 0x34
   12300:	mov.w	r3, #0
   12304:	movs	r3, #0
   12306:	strd	r2, r3, [sp, #24]
   1230a:	mov	r2, r0
   1230c:	add	r3, sp, #24
   1230e:	mov	r0, r7
   12310:	str	r3, [sp, #8]
   12312:	add	r3, sp, #32
   12314:	strd	r8, r3, [sp]
   12318:	mov	r3, r1
   1231a:	bl	11f18 <extent_from_logical@@Base>
   1231e:	mov	r4, r0
   12320:	mov	r0, r8
   12322:	bl	1b2dc <btrfs_release_path@@Base>
   12326:	cmp	r4, #0
   12328:	blt.n	12354 <iterate_inodes_from_logical@@Base+0x74>
   1232a:	ldr	r1, [sp, #24]
   1232c:	movs	r0, #0
   1232e:	mov	r3, r0
   12330:	and.w	r2, r1, #2
   12334:	orrs	r3, r2
   12336:	bne.n	12368 <iterate_inodes_from_logical@@Base+0x88>
   12338:	ldrd	r2, r3, [sp, #32]
   1233c:	str	r0, [sp, #8]
   1233e:	mov	r0, r7
   12340:	subs	r5, r5, r2
   12342:	strd	r9, sl, [sp, #12]
   12346:	sbc.w	r6, r6, r3
   1234a:	strd	r5, r6, [sp]
   1234e:	bl	121c8 <iterate_extent_inodes@@Base>
   12352:	mov	r4, r0
   12354:	ldr	r2, [pc, #40]	; (12380 <iterate_inodes_from_logical@@Base+0xa0>)
   12356:	ldr	r3, [pc, #36]	; (1237c <iterate_inodes_from_logical@@Base+0x9c>)
   12358:	add	r2, pc
   1235a:	ldr	r3, [r2, r3]
   1235c:	ldr	r2, [r3, #0]
   1235e:	ldr	r3, [sp, #52]	; 0x34
   12360:	eors	r2, r3
   12362:	beq.n	1236e <iterate_inodes_from_logical@@Base+0x8e>
   12364:	blx	88e4 <__stack_chk_fail@plt>
   12368:	mvn.w	r4, #21
   1236c:	b.n	12354 <iterate_inodes_from_logical@@Base+0x74>
   1236e:	mov	r0, r4
   12370:	add	sp, #56	; 0x38
   12372:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   12376:	nop
   12378:	ldr	r2, [r0, #36]	; 0x24
   1237a:	movs	r5, r0
   1237c:	lsls	r4, r7, #9
   1237e:	movs	r0, r0
   12380:	ldr	r0, [r3, #28]
   12382:	movs	r5, r0

00012384 <paths_from_inode@@Base>:
   12384:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12388:	mov.w	r8, #0
   1238c:	vpush	{d8-d9}
   12390:	mov.w	r9, #0
   12394:	ldr	r3, [pc, #552]	; (125c0 <paths_from_inode@@Base+0x23c>)
   12396:	vmov	s17, r0
   1239a:	sub	sp, #84	; 0x54
   1239c:	vmov	s18, r1
   123a0:	str	r2, [sp, #24]
   123a2:	ldr	r2, [pc, #544]	; (125c4 <paths_from_inode@@Base+0x240>)
   123a4:	add	r2, pc
   123a6:	ldr	r3, [r2, r3]
   123a8:	ldr	r3, [r3, #0]
   123aa:	str	r3, [sp, #76]	; 0x4c
   123ac:	mov.w	r3, #0
   123b0:	ldr	r3, [sp, #24]
   123b2:	ldr	r3, [r3, #4]
   123b4:	vmov	s16, r3
   123b8:	ldr	r3, [sp, #24]
   123ba:	ldr	r4, [r3, #0]
   123bc:	movs	r3, #0
   123be:	str	r3, [sp, #28]
   123c0:	add	r3, sp, #56	; 0x38
   123c2:	str	r3, [sp, #40]	; 0x28
   123c4:	ldr	r3, [sp, #40]	; 0x28
   123c6:	mov	r1, r4
   123c8:	vmov	r2, s17
   123cc:	vmov	r0, s16
   123d0:	str	r3, [sp, #12]
   123d2:	movs	r3, #12
   123d4:	strd	r8, r9, [sp]
   123d8:	str	r3, [sp, #8]
   123da:	vmov	r3, s18
   123de:	bl	1ebf4 <btrfs_find_item@@Base>
   123e2:	subs	r6, r0, #0
   123e4:	blt.w	1251c <paths_from_inode@@Base+0x198>
   123e8:	ldr	r3, [sp, #28]
   123ea:	beq.n	12488 <paths_from_inode@@Base+0x104>
   123ec:	cmp	r3, #0
   123ee:	ite	ne
   123f0:	movne.w	fp, #0
   123f4:	mvneq.w	fp, #1
   123f8:	mov	r0, r4
   123fa:	bl	1b2dc <btrfs_release_path@@Base>
   123fe:	cmp.w	fp, #0
   12402:	beq.w	12526 <paths_from_inode@@Base+0x1a2>
   12406:	cmn.w	fp, #2
   1240a:	bne.n	12472 <paths_from_inode@@Base+0xee>
   1240c:	mov.w	r9, #0
   12410:	mov.w	r8, #0
   12414:	movs	r3, #0
   12416:	movs	r2, #0
   12418:	strd	r2, r3, [sp, #56]	; 0x38
   1241c:	add	r3, sp, #56	; 0x38
   1241e:	str	r3, [sp, #32]
   12420:	add	r3, sp, #52	; 0x34
   12422:	str	r3, [sp, #36]	; 0x24
   12424:	ldr	r3, [sp, #32]
   12426:	vmov	r0, s16
   1242a:	str	r3, [sp, #16]
   1242c:	ldr	r3, [sp, #36]	; 0x24
   1242e:	strd	r4, r3, [sp, #8]
   12432:	ldrd	r2, r3, [sp, #56]	; 0x38
   12436:	strd	r2, r3, [sp]
   1243a:	vmov	r2, s17
   1243e:	vmov	r3, s18
   12442:	bl	11c78 <btrfs_find_one_extref@@Base>
   12446:	subs.w	fp, r0, #0
   1244a:	blt.n	1245c <paths_from_inode@@Base+0xd8>
   1244c:	beq.n	1252c <paths_from_inode@@Base+0x1a8>
   1244e:	cmp.w	r8, #0
   12452:	ite	ne
   12454:	movne.w	fp, #0
   12458:	mvneq.w	fp, #1
   1245c:	mov	r0, r4
   1245e:	bl	1b2dc <btrfs_release_path@@Base>
   12462:	cmn.w	fp, #2
   12466:	bne.n	12472 <paths_from_inode@@Base+0xee>
   12468:	cmp.w	r9, #0
   1246c:	it	ne
   1246e:	movne.w	fp, #0
   12472:	ldr	r2, [pc, #340]	; (125c8 <paths_from_inode@@Base+0x244>)
   12474:	ldr	r3, [pc, #328]	; (125c0 <paths_from_inode@@Base+0x23c>)
   12476:	add	r2, pc
   12478:	ldr	r3, [r2, r3]
   1247a:	ldr	r2, [r3, #0]
   1247c:	ldr	r3, [sp, #76]	; 0x4c
   1247e:	eors	r2, r3
   12480:	beq.w	125b2 <paths_from_inode@@Base+0x22e>
   12484:	blx	88e4 <__stack_chk_fail@plt>
   12488:	ldr	r0, [r4, #0]
   1248a:	adds	r3, #1
   1248c:	ldr.w	r8, [sp, #65]	; 0x41
   12490:	ldr.w	r9, [sp, #69]	; 0x45
   12494:	ldr	r7, [r4, #32]
   12496:	str	r3, [sp, #28]
   12498:	bl	1a7dc <btrfs_clone_extent_buffer@@Base>
   1249c:	mov	r5, r0
   1249e:	cmp	r0, #0
   124a0:	beq.n	12520 <paths_from_inode@@Base+0x19c>
   124a2:	ldr	r3, [r0, #80]	; 0x50
   124a4:	mov	sl, r6
   124a6:	adds	r3, #1
   124a8:	str	r3, [r0, #80]	; 0x50
   124aa:	mov	r0, r4
   124ac:	bl	1b2dc <btrfs_release_path@@Base>
   124b0:	add.w	r3, r5, #96	; 0x60
   124b4:	movs	r2, #25
   124b6:	str	r3, [sp, #32]
   124b8:	mla	r7, r2, r7, r3
   124bc:	add.w	r3, r7, #101	; 0x65
   124c0:	str	r3, [sp, #36]	; 0x24
   124c2:	ldr.w	r7, [r7, #118]	; 0x76
   124c6:	adds	r7, #101	; 0x65
   124c8:	ldr	r3, [sp, #36]	; 0x24
   124ca:	ldr.w	r3, [r3, #21]
   124ce:	cmp	sl, r3
   124d0:	bcc.n	124f2 <paths_from_inode@@Base+0x16e>
   124d2:	mov	fp, r6
   124d4:	mov	r0, r5
   124d6:	bl	1a0a4 <free_extent_buffer@@Base>
   124da:	cmp.w	fp, #0
   124de:	bne.n	123f8 <paths_from_inode@@Base+0x74>
   124e0:	orrs.w	r3, r8, r9
   124e4:	beq.w	123c4 <paths_from_inode@@Base+0x40>
   124e8:	adds.w	r8, r8, #1
   124ec:	adc.w	r9, r9, #0
   124f0:	b.n	123c4 <paths_from_inode@@Base+0x40>
   124f2:	ldr	r3, [sp, #32]
   124f4:	mov	r0, r8
   124f6:	mov	r1, r9
   124f8:	add	r3, r7
   124fa:	ldrh	r2, [r3, #8]
   124fc:	ldr	r3, [sp, #24]
   124fe:	str	r2, [sp, #44]	; 0x2c
   12500:	strd	r5, r3, [sp]
   12504:	add.w	r3, r7, #10
   12508:	bl	11e9c <btrfs_ref_to_path@@Base+0x144>
   1250c:	mov	fp, r0
   1250e:	cmp	r0, #0
   12510:	bne.n	124d4 <paths_from_inode@@Base+0x150>
   12512:	ldr	r2, [sp, #44]	; 0x2c
   12514:	adds	r2, #10
   12516:	add	r7, r2
   12518:	add	sl, r2
   1251a:	b.n	124c8 <paths_from_inode@@Base+0x144>
   1251c:	mov	fp, r6
   1251e:	b.n	123f8 <paths_from_inode@@Base+0x74>
   12520:	mvn.w	fp, #11
   12524:	b.n	123f8 <paths_from_inode@@Base+0x74>
   12526:	mov.w	r9, #1
   1252a:	b.n	12410 <paths_from_inode@@Base+0x8c>
   1252c:	ldr	r0, [r4, #0]
   1252e:	add.w	r8, r8, #1
   12532:	ldr	r5, [r4, #32]
   12534:	bl	1a7dc <btrfs_clone_extent_buffer@@Base>
   12538:	mov	r6, r0
   1253a:	cmp	r0, #0
   1253c:	beq.n	125ac <paths_from_inode@@Base+0x228>
   1253e:	ldr	r2, [r0, #80]	; 0x50
   12540:	adds	r2, #1
   12542:	str	r2, [r0, #80]	; 0x50
   12544:	mov	r0, r4
   12546:	bl	1b2dc <btrfs_release_path@@Base>
   1254a:	ldr	r7, [r4, #0]
   1254c:	movs	r3, #25
   1254e:	adds	r7, #96	; 0x60
   12550:	mla	sl, r3, r5, r7
   12554:	ldr.w	r3, [sl, #118]	; 0x76
   12558:	ldr.w	r5, [sl, #122]	; 0x7a
   1255c:	add.w	sl, r6, #96	; 0x60
   12560:	adds	r3, #101	; 0x65
   12562:	str	r3, [sp, #28]
   12564:	cmp	r5, fp
   12566:	bls.n	1258a <paths_from_inode@@Base+0x206>
   12568:	ldr	r3, [sp, #28]
   1256a:	ldr	r2, [sp, #24]
   1256c:	add	r3, fp
   1256e:	str	r3, [sp, #52]	; 0x34
   12570:	add.w	r1, sl, r3
   12574:	adds	r3, #18
   12576:	ldrh.w	ip, [r1, #16]
   1257a:	ldr	r0, [r1, #0]
   1257c:	ldr	r1, [r1, #4]
   1257e:	strd	r6, r2, [sp]
   12582:	mov	r2, ip
   12584:	bl	11e9c <btrfs_ref_to_path@@Base+0x144>
   12588:	cbz	r0, 125a0 <paths_from_inode@@Base+0x21c>
   1258a:	mov	r0, r6
   1258c:	bl	1a0a4 <free_extent_buffer@@Base>
   12590:	ldr	r3, [sp, #56]	; 0x38
   12592:	ldr	r2, [sp, #60]	; 0x3c
   12594:	adds	r3, #1
   12596:	adc.w	r2, r2, #0
   1259a:	strd	r3, r2, [sp, #56]	; 0x38
   1259e:	b.n	12424 <paths_from_inode@@Base+0xa0>
   125a0:	ldr	r3, [sp, #52]	; 0x34
   125a2:	add	r3, r7
   125a4:	ldrh	r3, [r3, #16]
   125a6:	adds	r3, #18
   125a8:	add	fp, r3
   125aa:	b.n	12564 <paths_from_inode@@Base+0x1e0>
   125ac:	mvn.w	fp, #11
   125b0:	b.n	1245c <paths_from_inode@@Base+0xd8>
   125b2:	mov	r0, fp
   125b4:	add	sp, #84	; 0x54
   125b6:	vpop	{d8-d9}
   125ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125be:	nop
   125c0:	lsls	r4, r7, #9
   125c2:	movs	r0, r0
   125c4:	ldr	r4, [r1, #24]
   125c6:	movs	r5, r0
   125c8:	ldr	r2, [r7, #8]
   125ca:	movs	r5, r0

000125cc <init_data_container@@Base>:
   125cc:	cmp	r0, #16
   125ce:	push	{r4, lr}
   125d0:	mov	r4, r0
   125d2:	it	cc
   125d4:	movcc	r0, #16
   125d6:	blx	8a94 <malloc@plt+0x4>
   125da:	cbz	r0, 125fa <init_data_container@@Base+0x2e>
   125dc:	cmp	r4, #15
   125de:	mov.w	r3, #0
   125e2:	itete	hi
   125e4:	subhi	r4, #16
   125e6:	rsbls	r4, r4, #16
   125ea:	strdhi	r4, r3, [r0]
   125ee:	strdls	r3, r4, [r0]
   125f2:	movs	r3, #0
   125f4:	strd	r3, r3, [r0, #8]
   125f8:	pop	{r4, pc}
   125fa:	mvn.w	r0, #11
   125fe:	b.n	125f8 <init_data_container@@Base+0x2c>

00012600 <init_ipath@@Base>:
   12600:	push	{r4, r5, r6, lr}
   12602:	mov	r5, r1
   12604:	mov	r6, r2
   12606:	bl	125cc <init_data_container@@Base>
   1260a:	cmn.w	r0, #4096	; 0x1000
   1260e:	mov	r4, r0
   12610:	bhi.n	12624 <init_ipath@@Base+0x24>
   12612:	movs	r0, #12
   12614:	blx	8a94 <malloc@plt+0x4>
   12618:	cbnz	r0, 12628 <init_ipath@@Base+0x28>
   1261a:	mov	r0, r4
   1261c:	mvn.w	r4, #11
   12620:	blx	87cc <free@plt+0x4>
   12624:	mov	r0, r4
   12626:	pop	{r4, r5, r6, pc}
   12628:	strd	r5, r4, [r0, #4]
   1262c:	mov	r4, r0
   1262e:	str	r6, [r0, #0]
   12630:	b.n	12624 <init_ipath@@Base+0x24>

00012632 <free_ipath@@Base>:
   12632:	push	{r4, lr}
   12634:	mov	r4, r0
   12636:	cbz	r0, 12648 <free_ipath@@Base+0x16>
   12638:	ldr	r0, [r0, #8]
   1263a:	blx	87cc <free@plt+0x4>
   1263e:	mov	r0, r4
   12640:	ldmia.w	sp!, {r4, lr}
   12644:	b.w	87c8 <free@plt>
   12648:	pop	{r4, pc}
   1264a:	nop

0001264c <table_create@@Base>:
   1264c:	push	{r3, r4, r5, lr}
   1264e:	mov	r4, r1
   12650:	muls	r1, r0
   12652:	mov	r5, r0
   12654:	movs	r0, #1
   12656:	adds	r1, #2
   12658:	lsls	r1, r1, #2
   1265a:	blx	8718 <calloc@plt+0x4>
   1265e:	cbz	r0, 12664 <table_create@@Base+0x18>
   12660:	strd	r5, r4, [r0]
   12664:	pop	{r3, r4, r5, pc}

00012666 <table_vprintf@@Base>:
   12666:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   12668:	mov	r4, r0
   1266a:	ldr	r7, [r0, #0]
   1266c:	movs	r0, #100	; 0x64
   1266e:	mov	r6, r3
   12670:	mla	r7, r7, r2, r1
   12674:	movs	r1, #1
   12676:	blx	8718 <calloc@plt+0x4>
   1267a:	mov	r5, r0
   1267c:	cbz	r0, 1269e <table_vprintf@@Base+0x38>
   1267e:	add.w	r4, r4, r7, lsl #2
   12682:	ldr	r0, [r4, #8]
   12684:	cbz	r0, 1268a <table_vprintf@@Base+0x24>
   12686:	blx	87cc <free@plt+0x4>
   1268a:	ldr	r3, [sp, #32]
   1268c:	movs	r2, #1
   1268e:	str	r5, [r4, #8]
   12690:	movs	r1, #99	; 0x63
   12692:	mov	r0, r5
   12694:	strd	r6, r3, [sp]
   12698:	movs	r3, #100	; 0x64
   1269a:	blx	8820 <__vsnprintf_chk@plt>
   1269e:	mov	r0, r5
   126a0:	add	sp, #12
   126a2:	pop	{r4, r5, r6, r7, pc}

000126a4 <table_printf@@Base>:
   126a4:	push	{r3}
   126a6:	push	{r4, lr}
   126a8:	sub	sp, #20
   126aa:	ldr.w	lr, [pc, #68]	; 126f0 <table_printf@@Base+0x4c>
   126ae:	add	r4, sp, #28
   126b0:	ldr.w	ip, [pc, #64]	; 126f4 <table_printf@@Base+0x50>
   126b4:	add	lr, pc
   126b6:	ldr.w	r3, [r4], #4
   126ba:	ldr.w	ip, [lr, ip]
   126be:	ldr.w	ip, [ip]
   126c2:	str.w	ip, [sp, #12]
   126c6:	mov.w	ip, #0
   126ca:	str	r4, [sp, #0]
   126cc:	str	r4, [sp, #8]
   126ce:	bl	12666 <table_vprintf@@Base>
   126d2:	ldr	r2, [pc, #36]	; (126f8 <table_printf@@Base+0x54>)
   126d4:	ldr	r3, [pc, #28]	; (126f4 <table_printf@@Base+0x50>)
   126d6:	add	r2, pc
   126d8:	ldr	r3, [r2, r3]
   126da:	ldr	r2, [r3, #0]
   126dc:	ldr	r3, [sp, #12]
   126de:	eors	r2, r3
   126e0:	beq.n	126e6 <table_printf@@Base+0x42>
   126e2:	blx	88e4 <__stack_chk_fail@plt>
   126e6:	add	sp, #20
   126e8:	ldmia.w	sp!, {r4, lr}
   126ec:	add	sp, #4
   126ee:	bx	lr
   126f0:	str	r4, [r7, #100]	; 0x64
   126f2:	movs	r5, r0
   126f4:	lsls	r4, r7, #9
   126f6:	movs	r0, r0
   126f8:	str	r2, [r3, #100]	; 0x64
   126fa:	movs	r5, r0

000126fc <table_dump@@Base>:
   126fc:	ldr	r2, [pc, #296]	; (12828 <table_dump@@Base+0x12c>)
   126fe:	ldr	r3, [pc, #300]	; (1282c <table_dump@@Base+0x130>)
   12700:	add	r2, pc
   12702:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12706:	sub	sp, #28
   12708:	ldr	r3, [r2, r3]
   1270a:	add	r7, sp, #0
   1270c:	movs	r5, #0
   1270e:	mov	r4, r0
   12710:	ldr	r3, [r3, #0]
   12712:	str	r3, [r7, #20]
   12714:	mov.w	r3, #0
   12718:	ldr	r3, [r0, #0]
   1271a:	mov	lr, r5
   1271c:	lsls	r2, r3, #2
   1271e:	adds	r1, r2, #7
   12720:	bic.w	r1, r1, #7
   12724:	sub.w	sp, sp, r1
   12728:	ldr	r1, [r0, #4]
   1272a:	mov	fp, sp
   1272c:	sub.w	r6, fp, #4
   12730:	str	r1, [r7, #12]
   12732:	cmp	r5, r3
   12734:	blt.n	1275e <table_dump@@Base+0x62>
   12736:	ldr.w	r8, [pc, #248]	; 12830 <table_dump@@Base+0x134>
   1273a:	movs	r6, #0
   1273c:	ldr.w	r9, [pc, #244]	; 12834 <table_dump@@Base+0x138>
   12740:	add	r8, pc
   12742:	add	r9, pc
   12744:	ldr	r3, [r4, #4]
   12746:	cmp	r6, r3
   12748:	blt.n	12816 <table_dump@@Base+0x11a>
   1274a:	ldr	r2, [pc, #236]	; (12838 <table_dump@@Base+0x13c>)
   1274c:	ldr	r3, [pc, #220]	; (1282c <table_dump@@Base+0x130>)
   1274e:	add	r2, pc
   12750:	ldr	r3, [r2, r3]
   12752:	ldr	r2, [r3, #0]
   12754:	ldr	r3, [r7, #20]
   12756:	eors	r2, r3
   12758:	beq.n	12820 <table_dump@@Base+0x124>
   1275a:	blx	88e4 <__stack_chk_fail@plt>
   1275e:	add.w	r9, r4, r5, lsl #2
   12762:	mov.w	r8, #0
   12766:	str.w	lr, [r6, #4]!
   1276a:	ldr	r1, [r7, #12]
   1276c:	cmp	r8, r1
   1276e:	blt.n	12774 <table_dump@@Base+0x78>
   12770:	adds	r5, #1
   12772:	b.n	12732 <table_dump@@Base+0x36>
   12774:	ldr.w	sl, [r9, #8]
   12778:	cmp.w	sl, #0
   1277c:	beq.n	127a6 <table_dump@@Base+0xaa>
   1277e:	mov	r0, sl
   12780:	strd	r2, r3, [r7, #4]
   12784:	blx	8b70 <strlen@plt>
   12788:	ldrd	r2, r3, [r7, #4]
   1278c:	mov.w	lr, #0
   12790:	subs	r0, #1
   12792:	beq.n	127a6 <table_dump@@Base+0xaa>
   12794:	ldrb.w	ip, [sl]
   12798:	cmp.w	ip, #42	; 0x2a
   1279c:	beq.n	127a6 <table_dump@@Base+0xaa>
   1279e:	ldr	r1, [r6, #0]
   127a0:	cmp	r1, r0
   127a2:	it	lt
   127a4:	strlt	r0, [r6, #0]
   127a6:	add.w	r8, r8, #1
   127aa:	add	r9, r2
   127ac:	b.n	1276a <table_dump@@Base+0x6e>
   127ae:	mla	r3, r3, r6, r5
   127b2:	ldr.w	r2, [fp, r5, lsl #2]
   127b6:	adds	r3, #2
   127b8:	ldr.w	r3, [r4, r3, lsl #2]
   127bc:	cbz	r3, 127c2 <table_dump@@Base+0xc6>
   127be:	ldrb	r1, [r3, #0]
   127c0:	cbnz	r1, 127ce <table_dump@@Base+0xd2>
   127c2:	mov	r3, r8
   127c4:	mov	r1, r9
   127c6:	movs	r0, #1
   127c8:	blx	8c6c <__printf_chk@plt+0x4>
   127cc:	b.n	127da <table_dump@@Base+0xde>
   127ce:	cmp	r1, #42	; 0x2a
   127d0:	bne.n	1280a <table_dump@@Base+0x10e>
   127d2:	ldrb	r1, [r3, #1]
   127d4:	cbz	r1, 12810 <table_dump@@Base+0x114>
   127d6:	subs	r2, #1
   127d8:	bcs.n	127fa <table_dump@@Base+0xfe>
   127da:	ldr	r3, [r4, #0]
   127dc:	subs	r3, #1
   127de:	cmp	r5, r3
   127e0:	beq.n	127e8 <table_dump@@Base+0xec>
   127e2:	movs	r0, #32
   127e4:	blx	8c08 <putchar@plt+0x4>
   127e8:	adds	r5, #1
   127ea:	ldr	r3, [r4, #0]
   127ec:	cmp	r5, r3
   127ee:	blt.n	127ae <table_dump@@Base+0xb2>
   127f0:	movs	r0, #10
   127f2:	adds	r6, #1
   127f4:	blx	8c08 <putchar@plt+0x4>
   127f8:	b.n	12744 <table_dump@@Base+0x48>
   127fa:	ldrb	r0, [r3, #1]
   127fc:	str	r2, [r7, #8]
   127fe:	str	r3, [r7, #12]
   12800:	blx	8c08 <putchar@plt+0x4>
   12804:	ldrd	r2, r3, [r7, #8]
   12808:	b.n	127d6 <table_dump@@Base+0xda>
   1280a:	cmp	r1, #60	; 0x3c
   1280c:	it	eq
   1280e:	negeq	r2, r2
   12810:	adds	r3, #1
   12812:	mov	r1, sl
   12814:	b.n	127c6 <table_dump@@Base+0xca>
   12816:	ldr.w	sl, [pc, #36]	; 1283c <table_dump@@Base+0x140>
   1281a:	movs	r5, #0
   1281c:	add	sl, pc
   1281e:	b.n	127ea <table_dump@@Base+0xee>
   12820:	adds	r7, #28
   12822:	mov	sp, r7
   12824:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12828:	str	r0, [r6, #96]	; 0x60
   1282a:	movs	r5, r0
   1282c:	lsls	r4, r7, #9
   1282e:	movs	r0, r0
   12830:	stmia	r2!, {r1, r2, r5, r6}
   12832:	movs	r2, r0
   12834:	cbnz	r0, 128b0 <task_start@@Base+0x2a>
   12836:	movs	r2, r0
   12838:	str	r2, [r4, #92]	; 0x5c
   1283a:	movs	r5, r0
   1283c:	cbnz	r6, 12880 <task_init@@Base+0x14>
   1283e:	movs	r2, r0

00012840 <table_free@@Base>:
   12840:	push	{r3, r4, r5, r6, r7, lr}
   12842:	add.w	r7, r0, #8
   12846:	ldrd	r5, r3, [r0]
   1284a:	mov	r4, r0
   1284c:	movs	r6, #0
   1284e:	muls	r5, r3
   12850:	cmp	r6, r5
   12852:	blt.n	1285e <table_free@@Base+0x1e>
   12854:	mov	r0, r4
   12856:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   1285a:	b.w	87c8 <free@plt>
   1285e:	ldr.w	r0, [r7], #4
   12862:	cbz	r0, 12868 <table_free@@Base+0x28>
   12864:	blx	87cc <free@plt+0x4>
   12868:	adds	r6, #1
   1286a:	b.n	12850 <table_free@@Base+0x10>

0001286c <task_init@@Base>:
   1286c:	push	{r4, r5, r6, lr}
   1286e:	mov	r5, r0
   12870:	mov	r4, r1
   12872:	movs	r0, #1
   12874:	movs	r1, #32
   12876:	mov	r6, r2
   12878:	blx	8718 <calloc@plt+0x4>
   1287c:	cbz	r0, 12884 <task_init@@Base+0x18>
   1287e:	strd	r6, r5, [r0, #20]
   12882:	str	r4, [r0, #28]
   12884:	pop	{r4, r5, r6, pc}

00012886 <task_start@@Base>:
   12886:	push	{r4, r5, r6, lr}
   12888:	mov	r6, r1
   1288a:	mov	r5, r2
   1288c:	mov	r4, r0
   1288e:	cbz	r0, 128be <task_start@@Base+0x38>
   12890:	ldr	r3, [r0, #24]
   12892:	cbz	r3, 128be <task_start@@Base+0x38>
   12894:	cbz	r1, 1289e <task_start@@Base+0x18>
   12896:	movs	r0, #0
   12898:	blx	8854 <time@plt>
   1289c:	str	r0, [r6, #0]
   1289e:	cbz	r5, 128a8 <task_start@@Base+0x22>
   128a0:	movs	r2, #0
   128a2:	movs	r3, #0
   128a4:	strd	r2, r3, [r5]
   128a8:	ldrd	r3, r2, [r4, #20]
   128ac:	add.w	r0, r4, #16
   128b0:	movs	r1, #0
   128b2:	blx	8a38 <pthread_create@plt>
   128b6:	cbz	r0, 128bc <task_start@@Base+0x36>
   128b8:	movs	r3, #0
   128ba:	str	r3, [r4, #16]
   128bc:	pop	{r4, r5, r6, pc}
   128be:	mov.w	r0, #4294967295	; 0xffffffff
   128c2:	b.n	128bc <task_start@@Base+0x36>

000128c4 <task_stop@@Base>:
   128c4:	push	{r4, lr}
   128c6:	mov	r4, r0
   128c8:	cbz	r0, 128f6 <task_stop@@Base+0x32>
   128ca:	ldr	r0, [r0, #16]
   128cc:	cbz	r0, 128de <task_stop@@Base+0x1a>
   128ce:	blx	8c20 <pthread_cancel@plt>
   128d2:	ldr	r0, [r4, #16]
   128d4:	movs	r1, #0
   128d6:	blx	8d18 <pthread_join@plt>
   128da:	movs	r3, #0
   128dc:	str	r3, [r4, #16]
   128de:	ldr	r0, [r4, #0]
   128e0:	cbz	r0, 128ea <task_stop@@Base+0x26>
   128e2:	blx	8e20 <close@plt>
   128e6:	movs	r3, #0
   128e8:	str	r3, [r4, #0]
   128ea:	ldr	r3, [r4, #28]
   128ec:	cbz	r3, 128f6 <task_stop@@Base+0x32>
   128ee:	ldr	r0, [r4, #20]
   128f0:	ldmia.w	sp!, {r4, lr}
   128f4:	bx	r3
   128f6:	pop	{r4, pc}

000128f8 <task_deinit@@Base>:
   128f8:	cbz	r0, 128fe <task_deinit@@Base+0x6>
   128fa:	b.w	87c8 <free@plt>
   128fe:	bx	lr

00012900 <task_period_start@@Base>:
   12900:	ldr	r2, [pc, #128]	; (12984 <task_period_start@@Base+0x84>)
   12902:	ldr	r3, [pc, #132]	; (12988 <task_period_start@@Base+0x88>)
   12904:	add	r2, pc
   12906:	push	{r4, r5, lr}
   12908:	sub	sp, #28
   1290a:	ldr	r3, [r2, r3]
   1290c:	mov	r5, r1
   1290e:	mov	r4, r0
   12910:	ldr	r3, [r3, #0]
   12912:	str	r3, [sp, #20]
   12914:	mov.w	r3, #0
   12918:	cbz	r0, 12972 <task_period_start@@Base+0x72>
   1291a:	movs	r1, #0
   1291c:	movs	r0, #1
   1291e:	blx	8b28 <timerfd_create@plt>
   12922:	mov	r3, r0
   12924:	adds	r3, #1
   12926:	str	r0, [r4, #0]
   12928:	bne.n	12942 <task_period_start@@Base+0x42>
   1292a:	movs	r0, #0
   1292c:	str	r0, [r4, #0]
   1292e:	ldr	r2, [pc, #92]	; (1298c <task_period_start@@Base+0x8c>)
   12930:	ldr	r3, [pc, #84]	; (12988 <task_period_start@@Base+0x88>)
   12932:	add	r2, pc
   12934:	ldr	r3, [r2, r3]
   12936:	ldr	r2, [r3, #0]
   12938:	ldr	r3, [sp, #20]
   1293a:	eors	r2, r3
   1293c:	beq.n	12978 <task_period_start@@Base+0x78>
   1293e:	blx	88e4 <__stack_chk_fail@plt>
   12942:	movs	r2, #0
   12944:	movs	r3, #0
   12946:	strd	r2, r3, [r4, #8]
   1294a:	mov.w	r1, #1000	; 0x3e8
   1294e:	ldr	r2, [pc, #44]	; (1297c <task_period_start@@Base+0x7c>)
   12950:	umull	r2, r3, r5, r2
   12954:	lsrs	r2, r3, #6
   12956:	ldr	r3, [pc, #40]	; (12980 <task_period_start@@Base+0x80>)
   12958:	str	r2, [sp, #4]
   1295a:	mls	r1, r1, r2, r5
   1295e:	muls	r1, r3
   12960:	movs	r3, #0
   12962:	strd	r1, r2, [sp, #8]
   12966:	add	r2, sp, #4
   12968:	str	r1, [sp, #16]
   1296a:	mov	r1, r3
   1296c:	blx	8d40 <timerfd_settime@plt>
   12970:	b.n	1292e <task_period_start@@Base+0x2e>
   12972:	mov.w	r0, #4294967295	; 0xffffffff
   12976:	b.n	1292e <task_period_start@@Base+0x2e>
   12978:	add	sp, #28
   1297a:	pop	{r4, r5, pc}
   1297c:	ldr	r5, [pc, #844]	; (12ccc <btrfs_add_link@@Base+0x118>)
   1297e:	asrs	r2, r4, #1
   12980:	negs	r0, r0
   12982:	movs	r7, r1
   12984:	str	r4, [r5, #64]	; 0x40
   12986:	movs	r5, r0
   12988:	lsls	r4, r7, #9
   1298a:	movs	r0, r0
   1298c:	str	r6, [r7, #60]	; 0x3c
   1298e:	movs	r5, r0

00012990 <task_period_wait@@Base>:
   12990:	push	{r0, r1, r2, r3, r4, lr}
   12992:	mov	r4, r0
   12994:	ldr	r2, [pc, #88]	; (129f0 <task_period_wait@@Base+0x60>)
   12996:	ldr	r3, [pc, #92]	; (129f4 <task_period_wait@@Base+0x64>)
   12998:	add	r2, pc
   1299a:	ldr	r3, [r2, r3]
   1299c:	ldr	r3, [r3, #0]
   1299e:	str	r3, [sp, #12]
   129a0:	mov.w	r3, #0
   129a4:	cbz	r0, 129d6 <task_period_wait@@Base+0x46>
   129a6:	ldr	r0, [r0, #0]
   129a8:	cbz	r0, 129d6 <task_period_wait@@Base+0x46>
   129aa:	movs	r2, #8
   129ac:	mov	r1, sp
   129ae:	blx	8784 <read@plt>
   129b2:	adds	r0, #1
   129b4:	beq.n	129d6 <task_period_wait@@Base+0x46>
   129b6:	ldrd	r2, r3, [sp]
   129ba:	orrs.w	r1, r2, r3
   129be:	beq.n	129d6 <task_period_wait@@Base+0x46>
   129c0:	adds.w	r1, r2, #4294967295	; 0xffffffff
   129c4:	adc.w	r0, r3, #4294967295	; 0xffffffff
   129c8:	ldrd	r3, r2, [r4, #8]
   129cc:	adds	r3, r3, r1
   129ce:	adc.w	r2, r0, r2
   129d2:	strd	r3, r2, [r4, #8]
   129d6:	ldr	r2, [pc, #32]	; (129f8 <task_period_wait@@Base+0x68>)
   129d8:	ldr	r3, [pc, #24]	; (129f4 <task_period_wait@@Base+0x64>)
   129da:	add	r2, pc
   129dc:	ldr	r3, [r2, r3]
   129de:	ldr	r2, [r3, #0]
   129e0:	ldr	r3, [sp, #12]
   129e2:	eors	r2, r3
   129e4:	beq.n	129ea <task_period_wait@@Base+0x5a>
   129e6:	blx	88e4 <__stack_chk_fail@plt>
   129ea:	add	sp, #16
   129ec:	pop	{r4, pc}
   129ee:	nop
   129f0:	str	r0, [r3, #56]	; 0x38
   129f2:	movs	r5, r0
   129f4:	lsls	r4, r7, #9
   129f6:	movs	r0, r0
   129f8:	str	r6, [r2, #52]	; 0x34
   129fa:	movs	r5, r0

000129fc <task_period_stop@@Base>:
   129fc:	push	{r4, lr}
   129fe:	mov	r4, r0
   12a00:	cbz	r0, 12a1c <task_period_stop@@Base+0x20>
   12a02:	ldr	r0, [r0, #0]
   12a04:	cbz	r0, 12a1c <task_period_stop@@Base+0x20>
   12a06:	movs	r3, #0
   12a08:	mov	r2, r3
   12a0a:	mov	r1, r3
   12a0c:	blx	8d40 <timerfd_settime@plt>
   12a10:	ldr	r0, [r4, #0]
   12a12:	blx	8e20 <close@plt>
   12a16:	mov.w	r3, #4294967295	; 0xffffffff
   12a1a:	str	r3, [r4, #0]
   12a1c:	pop	{r4, pc}
   12a1e:	nop
   12a20:	push	{r4, lr}
   12a22:	mov	r4, r1
   12a24:	ldr	r1, [pc, #84]	; (12a7c <task_period_stop@@Base+0x80>)
   12a26:	sub	sp, #24
   12a28:	ldr	r3, [pc, #84]	; (12a80 <task_period_stop@@Base+0x84>)
   12a2a:	add	r1, pc
   12a2c:	ldr	r3, [r1, r3]
   12a2e:	mov	r1, sp
   12a30:	ldr	r3, [r3, #0]
   12a32:	str	r3, [sp, #20]
   12a34:	mov.w	r3, #0
   12a38:	movs	r3, #25
   12a3a:	muls	r2, r3
   12a3c:	movs	r3, #17
   12a3e:	adds	r2, #101	; 0x65
   12a40:	bl	1a79e <read_extent_buffer@@Base>
   12a44:	ldr.w	r3, [sp, #13]
   12a48:	ldr.w	r2, [sp, #9]
   12a4c:	str.w	r3, [r4, #13]
   12a50:	ldrb.w	r3, [sp, #8]
   12a54:	str.w	r2, [r4, #9]
   12a58:	ldr	r2, [pc, #40]	; (12a84 <task_period_stop@@Base+0x88>)
   12a5a:	strb	r3, [r4, #8]
   12a5c:	ldr	r3, [sp, #0]
   12a5e:	add	r2, pc
   12a60:	str	r3, [r4, #0]
   12a62:	ldr	r3, [sp, #4]
   12a64:	str	r3, [r4, #4]
   12a66:	ldr	r3, [pc, #24]	; (12a80 <task_period_stop@@Base+0x84>)
   12a68:	ldr	r3, [r2, r3]
   12a6a:	ldr	r2, [r3, #0]
   12a6c:	ldr	r3, [sp, #20]
   12a6e:	eors	r2, r3
   12a70:	beq.n	12a76 <task_period_stop@@Base+0x7a>
   12a72:	blx	88e4 <__stack_chk_fail@plt>
   12a76:	add	sp, #24
   12a78:	pop	{r4, pc}
   12a7a:	nop
   12a7c:	str	r6, [r0, #48]	; 0x30
   12a7e:	movs	r5, r0
   12a80:	lsls	r4, r7, #9
   12a82:	movs	r0, r0
   12a84:	str	r2, [r2, #44]	; 0x2c
   12a86:	movs	r5, r0

00012a88 <check_dir_conflict@@Base>:
   12a88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   12a8c:	mov	sl, r2
   12a8e:	ldr	r2, [pc, #280]	; (12ba8 <check_dir_conflict@@Base+0x120>)
   12a90:	sub	sp, #56	; 0x38
   12a92:	ldr	r3, [pc, #280]	; (12bac <check_dir_conflict@@Base+0x124>)
   12a94:	mov	r8, r0
   12a96:	add	r2, pc
   12a98:	ldrd	r6, r7, [sp, #88]	; 0x58
   12a9c:	mov	r9, r1
   12a9e:	ldr	r3, [r2, r3]
   12aa0:	ldr	r3, [r3, #0]
   12aa2:	str	r3, [sp, #52]	; 0x34
   12aa4:	mov.w	r3, #0
   12aa8:	bl	1b2d4 <btrfs_alloc_path@@Base>
   12aac:	mov	r5, r0
   12aae:	cmp	r0, #0
   12ab0:	beq.n	12b98 <check_dir_conflict@@Base+0x110>
   12ab2:	movs	r0, #0
   12ab4:	movs	r3, #1
   12ab6:	add	r2, sp, #32
   12ab8:	strb.w	r3, [sp, #40]	; 0x28
   12abc:	mov	r1, r8
   12abe:	mov	r3, r5
   12ac0:	strd	r0, r0, [sp]
   12ac4:	strd	r6, r7, [sp, #32]
   12ac8:	strb.w	r0, [sp, #41]	; 0x29
   12acc:	strb.w	r0, [sp, #42]	; 0x2a
   12ad0:	strb.w	r0, [sp, #43]	; 0x2b
   12ad4:	strb.w	r0, [sp, #44]	; 0x2c
   12ad8:	strb.w	r0, [sp, #45]	; 0x2d
   12adc:	strb.w	r0, [sp, #46]	; 0x2e
   12ae0:	strb.w	r0, [sp, #47]	; 0x2f
   12ae4:	strb.w	r0, [sp, #48]	; 0x30
   12ae8:	bl	1d6c0 <btrfs_search_slot@@Base>
   12aec:	subs	r4, r0, #0
   12aee:	blt.n	12b30 <check_dir_conflict@@Base+0xa8>
   12af0:	bne.n	12b8c <check_dir_conflict@@Base+0x104>
   12af2:	ldr	r3, [r5, #0]
   12af4:	movs	r1, #25
   12af6:	ldr	r2, [r5, #32]
   12af8:	adds	r3, #96	; 0x60
   12afa:	mla	r2, r1, r2, r3
   12afe:	ldr.w	r2, [r2, #118]	; 0x76
   12b02:	add	r3, r2
   12b04:	ldr.w	r3, [r3, #153]	; 0x99
   12b08:	lsls	r3, r3, #17
   12b0a:	bpl.n	12b92 <check_dir_conflict@@Base+0x10a>
   12b0c:	mov	r0, r5
   12b0e:	bl	1b2dc <btrfs_release_path@@Base>
   12b12:	mov	r2, r5
   12b14:	mov	r1, r8
   12b16:	mov	r0, r4
   12b18:	strd	sl, r4, [sp, #12]
   12b1c:	str.w	r9, [sp, #8]
   12b20:	strd	r6, r7, [sp]
   12b24:	bl	d270 <btrfs_lookup_dir_item@@Base>
   12b28:	cmn.w	r0, #4096	; 0x1000
   12b2c:	bls.n	12b4a <check_dir_conflict@@Base+0xc2>
   12b2e:	mov	r4, r0
   12b30:	mov	r0, r5
   12b32:	bl	1b302 <btrfs_free_path@@Base>
   12b36:	ldr	r2, [pc, #120]	; (12bb0 <check_dir_conflict@@Base+0x128>)
   12b38:	ldr	r3, [pc, #112]	; (12bac <check_dir_conflict@@Base+0x124>)
   12b3a:	add	r2, pc
   12b3c:	ldr	r3, [r2, r3]
   12b3e:	ldr	r2, [r3, #0]
   12b40:	ldr	r3, [sp, #52]	; 0x34
   12b42:	eors	r2, r3
   12b44:	beq.n	12b9e <check_dir_conflict@@Base+0x116>
   12b46:	blx	88e4 <__stack_chk_fail@plt>
   12b4a:	cbnz	r0, 12b86 <check_dir_conflict@@Base+0xfe>
   12b4c:	mov	r0, r5
   12b4e:	bl	1b2dc <btrfs_release_path@@Base>
   12b52:	ldrd	r2, r3, [sp, #96]	; 0x60
   12b56:	mov	r1, r8
   12b58:	mov	r0, r4
   12b5a:	str	r4, [sp, #24]
   12b5c:	strd	r2, r3, [sp, #16]
   12b60:	mov	r2, r5
   12b62:	strd	r9, sl, [sp, #8]
   12b66:	strd	r6, r7, [sp]
   12b6a:	bl	d358 <btrfs_lookup_dir_index@@Base>
   12b6e:	cmn.w	r0, #4096	; 0x1000
   12b72:	bls.n	12b82 <check_dir_conflict@@Base+0xfa>
   12b74:	cmn.w	r0, #2
   12b78:	it	eq
   12b7a:	moveq	r0, r4
   12b7c:	cmn.w	r0, #4096	; 0x1000
   12b80:	bhi.n	12b2e <check_dir_conflict@@Base+0xa6>
   12b82:	cmp	r0, #0
   12b84:	beq.n	12b30 <check_dir_conflict@@Base+0xa8>
   12b86:	mvn.w	r4, #16
   12b8a:	b.n	12b30 <check_dir_conflict@@Base+0xa8>
   12b8c:	mvn.w	r4, #1
   12b90:	b.n	12b30 <check_dir_conflict@@Base+0xa8>
   12b92:	mvn.w	r4, #19
   12b96:	b.n	12b30 <check_dir_conflict@@Base+0xa8>
   12b98:	mvn.w	r4, #11
   12b9c:	b.n	12b36 <check_dir_conflict@@Base+0xae>
   12b9e:	mov	r0, r4
   12ba0:	add	sp, #56	; 0x38
   12ba2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   12ba6:	nop
   12ba8:	str	r2, [r3, #40]	; 0x28
   12baa:	movs	r5, r0
   12bac:	lsls	r4, r7, #9
   12bae:	movs	r0, r0
   12bb0:	str	r6, [r6, #28]
   12bb2:	movs	r5, r0

00012bb4 <btrfs_add_link@@Base>:
   12bb4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bb8:	sub	sp, #92	; 0x5c
   12bba:	mov	r4, r3
   12bbc:	mov	r6, r2
   12bbe:	ldr	r3, [sp, #148]	; 0x94
   12bc0:	mov	r8, r0
   12bc2:	ldr	r2, [pc, #772]	; (12ec8 <btrfs_add_link@@Base+0x314>)
   12bc4:	mov	r7, r1
   12bc6:	ldr.w	sl, [sp, #136]	; 0x88
   12bca:	str	r3, [sp, #32]
   12bcc:	add	r2, pc
   12bce:	ldr	r3, [pc, #764]	; (12ecc <btrfs_add_link@@Base+0x318>)
   12bd0:	ldr	r3, [r2, r3]
   12bd2:	ldr	r3, [r3, #0]
   12bd4:	str	r3, [sp, #84]	; 0x54
   12bd6:	mov.w	r3, #0
   12bda:	bl	1b2d4 <btrfs_alloc_path@@Base>
   12bde:	mov	r5, r0
   12be0:	cmp	r0, #0
   12be2:	beq.w	12eae <btrfs_add_link@@Base+0x2fa>
   12be6:	ldr	r3, [sp, #32]
   12be8:	cbz	r3, 12bf8 <btrfs_add_link@@Base+0x44>
   12bea:	ldrd	r2, r3, [r3]
   12bee:	strd	r2, r3, [sp, #24]
   12bf2:	orrs	r3, r2
   12bf4:	bne.w	12cfc <btrfs_add_link@@Base+0x148>
   12bf8:	bl	1b2d4 <btrfs_alloc_path@@Base>
   12bfc:	mov	r9, r0
   12bfe:	cbnz	r0, 12c3c <btrfs_add_link@@Base+0x88>
   12c00:	mvn.w	fp, #11
   12c04:	movs	r3, #0
   12c06:	movs	r4, #0
   12c08:	strd	r3, r4, [sp, #24]
   12c0c:	mov	r0, r5
   12c0e:	bl	1b302 <btrfs_free_path@@Base>
   12c12:	cmp.w	fp, #0
   12c16:	bne.n	12c26 <btrfs_add_link@@Base+0x72>
   12c18:	ldr	r3, [sp, #32]
   12c1a:	cbz	r3, 12c26 <btrfs_add_link@@Base+0x72>
   12c1c:	mov	r1, r3
   12c1e:	ldrd	r2, r3, [sp, #24]
   12c22:	strd	r2, r3, [r1]
   12c26:	ldr	r2, [pc, #680]	; (12ed0 <btrfs_add_link@@Base+0x31c>)
   12c28:	ldr	r3, [pc, #672]	; (12ecc <btrfs_add_link@@Base+0x318>)
   12c2a:	add	r2, pc
   12c2c:	ldr	r3, [r2, r3]
   12c2e:	ldr	r2, [r3, #0]
   12c30:	ldr	r3, [sp, #84]	; 0x54
   12c32:	eors	r2, r3
   12c34:	beq.w	12ebe <btrfs_add_link@@Base+0x30a>
   12c38:	blx	88e4 <__stack_chk_fail@plt>
   12c3c:	ldr	r3, [sp, #128]	; 0x80
   12c3e:	mov.w	r1, #4294967295	; 0xffffffff
   12c42:	movs	r2, #96	; 0x60
   12c44:	movs	r0, #0
   12c46:	strb.w	r2, [sp, #52]	; 0x34
   12c4a:	add	r2, sp, #44	; 0x2c
   12c4c:	str	r3, [sp, #44]	; 0x2c
   12c4e:	ldr	r3, [sp, #132]	; 0x84
   12c50:	strb.w	r1, [sp, #53]	; 0x35
   12c54:	strb.w	r1, [sp, #54]	; 0x36
   12c58:	str	r3, [sp, #48]	; 0x30
   12c5a:	mov	r3, r9
   12c5c:	strb.w	r1, [sp, #55]	; 0x37
   12c60:	strb.w	r1, [sp, #56]	; 0x38
   12c64:	strb.w	r1, [sp, #57]	; 0x39
   12c68:	strb.w	r1, [sp, #58]	; 0x3a
   12c6c:	strb.w	r1, [sp, #59]	; 0x3b
   12c70:	strb.w	r1, [sp, #60]	; 0x3c
   12c74:	mov	r1, r7
   12c76:	strd	r0, r0, [sp]
   12c7a:	bl	1d6c0 <btrfs_search_slot@@Base>
   12c7e:	subs.w	fp, r0, #0
   12c82:	blt.n	12c9e <btrfs_add_link@@Base+0xea>
   12c84:	ldr.w	r2, [r9, #32]
   12c88:	cbnz	r2, 12ca8 <btrfs_add_link@@Base+0xf4>
   12c8a:	mov	r1, r9
   12c8c:	mov	r0, r7
   12c8e:	bl	1ea6c <btrfs_prev_leaf@@Base>
   12c92:	subs.w	fp, r0, #0
   12c96:	blt.n	12c9e <btrfs_add_link@@Base+0xea>
   12c98:	beq.n	12cae <btrfs_add_link@@Base+0xfa>
   12c9a:	mvn.w	fp, #4
   12c9e:	movs	r2, #2
   12ca0:	movs	r3, #0
   12ca2:	strd	r2, r3, [sp, #24]
   12ca6:	b.n	12cee <btrfs_add_link@@Base+0x13a>
   12ca8:	subs	r2, #1
   12caa:	str.w	r2, [r9, #32]
   12cae:	ldr.w	r2, [r9, #32]
   12cb2:	add	r1, sp, #64	; 0x40
   12cb4:	ldr.w	r0, [r9]
   12cb8:	bl	12a20 <task_period_stop@@Base+0x24>
   12cbc:	ldrd	r0, r1, [sp, #64]	; 0x40
   12cc0:	ldrd	r2, r3, [sp, #128]	; 0x80
   12cc4:	cmp	r3, r1
   12cc6:	it	eq
   12cc8:	cmpeq	r2, r0
   12cca:	bne.w	12e34 <btrfs_add_link@@Base+0x280>
   12cce:	ldrb.w	r2, [sp, #72]	; 0x48
   12cd2:	cmp	r2, #96	; 0x60
   12cd4:	bne.w	12e34 <btrfs_add_link@@Base+0x280>
   12cd8:	ldr.w	r2, [sp, #73]	; 0x49
   12cdc:	mov.w	fp, #0
   12ce0:	ldr.w	r1, [sp, #77]	; 0x4d
   12ce4:	adds	r3, r2, #1
   12ce6:	str	r3, [sp, #24]
   12ce8:	adc.w	r3, r1, #0
   12cec:	str	r3, [sp, #28]
   12cee:	mov	r0, r9
   12cf0:	bl	1b302 <btrfs_free_path@@Base>
   12cf4:	cmp.w	fp, #0
   12cf8:	bne.w	12eb4 <btrfs_add_link@@Base+0x300>
   12cfc:	ldrd	r2, r3, [sp, #24]
   12d00:	mov	r1, sl
   12d02:	mov	r0, r7
   12d04:	strd	r2, r3, [sp, #8]
   12d08:	ldrd	r2, r3, [sp, #128]	; 0x80
   12d0c:	strd	r2, r3, [sp]
   12d10:	ldr	r2, [sp, #140]	; 0x8c
   12d12:	bl	12a88 <check_dir_conflict@@Base>
   12d16:	subs.w	fp, r0, #0
   12d1a:	bge.n	12d2c <btrfs_add_link@@Base+0x178>
   12d1c:	ldr	r3, [sp, #156]	; 0x9c
   12d1e:	cmp	r3, #0
   12d20:	beq.w	12c0c <btrfs_add_link@@Base+0x58>
   12d24:	cmn.w	fp, #17
   12d28:	bne.w	12c0c <btrfs_add_link@@Base+0x58>
   12d2c:	ldr	r3, [sp, #152]	; 0x98
   12d2e:	cbz	r3, 12d66 <btrfs_add_link@@Base+0x1b2>
   12d30:	ldrd	r2, r3, [sp, #24]
   12d34:	mov	r1, r7
   12d36:	mov	r0, r8
   12d38:	strd	r6, r4, [sp]
   12d3c:	strd	r2, r3, [sp, #16]
   12d40:	ldrd	r2, r3, [sp, #128]	; 0x80
   12d44:	strd	r2, r3, [sp, #8]
   12d48:	mov	r2, sl
   12d4a:	ldr	r3, [sp, #140]	; 0x8c
   12d4c:	bl	310fc <btrfs_insert_inode_ref@@Base>
   12d50:	subs.w	fp, r0, #0
   12d54:	bge.n	12e3a <btrfs_add_link@@Base+0x286>
   12d56:	ldr	r3, [sp, #156]	; 0x9c
   12d58:	cmp	r3, #0
   12d5a:	beq.w	12c0c <btrfs_add_link@@Base+0x58>
   12d5e:	cmn.w	fp, #17
   12d62:	bne.w	12c0c <btrfs_add_link@@Base+0x58>
   12d66:	ldrd	r2, r3, [sp, #24]
   12d6a:	mov	r1, r7
   12d6c:	mov	r0, r8
   12d6e:	strd	r6, r4, [sp, #64]	; 0x40
   12d72:	mov.w	r9, #1
   12d76:	movs	r4, #0
   12d78:	strd	r2, r3, [sp, #16]
   12d7c:	add.w	r6, sp, #73	; 0x49
   12d80:	ldrb.w	r3, [sp, #144]	; 0x90
   12d84:	strb.w	r9, [sp, #72]	; 0x48
   12d88:	strb.w	r4, [sp, #73]	; 0x49
   12d8c:	str	r3, [sp, #12]
   12d8e:	add	r3, sp, #64	; 0x40
   12d90:	str	r3, [sp, #36]	; 0x24
   12d92:	str	r3, [sp, #8]
   12d94:	ldrd	r2, r3, [sp, #128]	; 0x80
   12d98:	strb.w	r4, [sp, #74]	; 0x4a
   12d9c:	strb.w	r4, [sp, #75]	; 0x4b
   12da0:	strd	r2, r3, [sp]
   12da4:	mov	r2, sl
   12da6:	ldr	r3, [sp, #140]	; 0x8c
   12da8:	strb.w	r4, [sp, #76]	; 0x4c
   12dac:	strb.w	r4, [sp, #77]	; 0x4d
   12db0:	strb.w	r4, [sp, #78]	; 0x4e
   12db4:	strb.w	r4, [sp, #79]	; 0x4f
   12db8:	strb.w	r4, [sp, #80]	; 0x50
   12dbc:	bl	d0c0 <btrfs_insert_dir_item@@Base>
   12dc0:	subs.w	fp, r0, #0
   12dc4:	blt.w	12c0c <btrfs_add_link@@Base+0x58>
   12dc8:	ldrd	r2, r3, [sp, #128]	; 0x80
   12dcc:	mov	r1, r7
   12dce:	strb	r4, [r6, #1]
   12dd0:	mov	r0, r8
   12dd2:	strb	r4, [r6, #2]
   12dd4:	strd	r2, r3, [sp, #64]	; 0x40
   12dd8:	mov	r3, r5
   12dda:	strb	r4, [r6, #3]
   12ddc:	strb	r4, [r6, #4]
   12dde:	strb	r4, [r6, #5]
   12de0:	strb	r4, [r6, #6]
   12de2:	strb	r4, [r6, #7]
   12de4:	ldr	r2, [sp, #36]	; 0x24
   12de6:	strd	r9, r9, [sp]
   12dea:	strb.w	r9, [sp, #72]	; 0x48
   12dee:	strb.w	r4, [sp, #73]	; 0x49
   12df2:	bl	1d6c0 <btrfs_search_slot@@Base>
   12df6:	mov	fp, r0
   12df8:	cmp	r0, #0
   12dfa:	bne.w	12c0c <btrfs_add_link@@Base+0x58>
   12dfe:	ldr	r3, [r5, #0]
   12e00:	movs	r0, #25
   12e02:	ldr	r1, [r5, #32]
   12e04:	adds	r3, #96	; 0x60
   12e06:	ldr	r2, [sp, #140]	; 0x8c
   12e08:	mla	r1, r0, r1, r3
   12e0c:	lsl.w	r4, r2, r9
   12e10:	ldr.w	r1, [r1, #118]	; 0x76
   12e14:	adds	r1, #101	; 0x65
   12e16:	add	r3, r1
   12e18:	ldr	r0, [r3, #16]
   12e1a:	ldr	r1, [r3, #20]
   12e1c:	adds	r0, r0, r4
   12e1e:	str	r0, [r3, #16]
   12e20:	adc.w	r1, r1, r4, asr #31
   12e24:	str	r1, [r3, #20]
   12e26:	ldr	r0, [r5, #0]
   12e28:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   12e2c:	mov	r0, r5
   12e2e:	bl	1b2dc <btrfs_release_path@@Base>
   12e32:	b.n	12c0c <btrfs_add_link@@Base+0x58>
   12e34:	mov.w	fp, #0
   12e38:	b.n	12c9e <btrfs_add_link@@Base+0xea>
   12e3a:	bne.n	12d66 <btrfs_add_link@@Base+0x1b2>
   12e3c:	movs	r1, #1
   12e3e:	add	r2, sp, #64	; 0x40
   12e40:	strb.w	r1, [sp, #72]	; 0x48
   12e44:	mov	r3, r5
   12e46:	strd	r1, r1, [sp]
   12e4a:	mov	r0, r8
   12e4c:	mov	r1, r7
   12e4e:	strb.w	fp, [sp, #73]	; 0x49
   12e52:	strb.w	fp, [sp, #74]	; 0x4a
   12e56:	strb.w	fp, [sp, #75]	; 0x4b
   12e5a:	strb.w	fp, [sp, #76]	; 0x4c
   12e5e:	strb.w	fp, [sp, #77]	; 0x4d
   12e62:	strb.w	fp, [sp, #78]	; 0x4e
   12e66:	strb.w	fp, [sp, #79]	; 0x4f
   12e6a:	strb.w	fp, [sp, #80]	; 0x50
   12e6e:	strd	r6, r4, [sp, #64]	; 0x40
   12e72:	bl	1d6c0 <btrfs_search_slot@@Base>
   12e76:	subs.w	fp, r0, #0
   12e7a:	beq.n	12e86 <btrfs_add_link@@Base+0x2d2>
   12e7c:	ble.w	12c0c <btrfs_add_link@@Base+0x58>
   12e80:	mvn.w	fp, #1
   12e84:	b.n	12c0c <btrfs_add_link@@Base+0x58>
   12e86:	ldr	r3, [r5, #0]
   12e88:	movs	r1, #25
   12e8a:	ldr	r2, [r5, #32]
   12e8c:	adds	r3, #96	; 0x60
   12e8e:	mla	r2, r1, r2, r3
   12e92:	ldr.w	r2, [r2, #118]	; 0x76
   12e96:	adds	r2, #101	; 0x65
   12e98:	add	r3, r2
   12e9a:	ldr	r2, [r3, #40]	; 0x28
   12e9c:	adds	r2, #1
   12e9e:	str	r2, [r3, #40]	; 0x28
   12ea0:	ldr	r0, [r5, #0]
   12ea2:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   12ea6:	mov	r0, r5
   12ea8:	bl	1b2dc <btrfs_release_path@@Base>
   12eac:	b.n	12d66 <btrfs_add_link@@Base+0x1b2>
   12eae:	mvn.w	fp, #11
   12eb2:	b.n	12c26 <btrfs_add_link@@Base+0x72>
   12eb4:	movs	r3, #0
   12eb6:	movs	r4, #0
   12eb8:	strd	r3, r4, [sp, #24]
   12ebc:	b.n	12c0c <btrfs_add_link@@Base+0x58>
   12ebe:	mov	r0, fp
   12ec0:	add	sp, #92	; 0x5c
   12ec2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ec6:	nop
   12ec8:	str	r4, [r4, #20]
   12eca:	movs	r5, r0
   12ecc:	lsls	r4, r7, #9
   12ece:	movs	r0, r0
   12ed0:	str	r6, [r0, #16]
   12ed2:	movs	r5, r0

00012ed4 <btrfs_add_orphan_item@@Base>:
   12ed4:	push	{r4, r5, lr}
   12ed6:	sub	sp, #44	; 0x2c
   12ed8:	ldr	r4, [pc, #84]	; (12f30 <btrfs_add_orphan_item@@Base+0x5c>)
   12eda:	mov.w	r5, #4294967295	; 0xffffffff
   12ede:	ldr	r3, [pc, #84]	; (12f34 <btrfs_add_orphan_item@@Base+0x60>)
   12ee0:	add	r4, pc
   12ee2:	ldr	r3, [r4, r3]
   12ee4:	mvn.w	r4, #4
   12ee8:	ldr	r3, [r3, #0]
   12eea:	str	r3, [sp, #36]	; 0x24
   12eec:	mov.w	r3, #0
   12ef0:	movs	r3, #48	; 0x30
   12ef2:	strb.w	r3, [sp, #24]
   12ef6:	ldr	r3, [sp, #56]	; 0x38
   12ef8:	strd	r4, r5, [sp, #16]
   12efc:	str.w	r3, [sp, #25]
   12f00:	ldr	r3, [sp, #60]	; 0x3c
   12f02:	str.w	r3, [sp, #29]
   12f06:	movs	r3, #0
   12f08:	str	r3, [sp, #12]
   12f0a:	movs	r3, #1
   12f0c:	str	r3, [sp, #4]
   12f0e:	add	r3, sp, #12
   12f10:	str	r3, [sp, #0]
   12f12:	add	r3, sp, #16
   12f14:	bl	1e490 <btrfs_insert_empty_items@@Base>
   12f18:	ldr	r2, [pc, #28]	; (12f38 <btrfs_add_orphan_item@@Base+0x64>)
   12f1a:	ldr	r3, [pc, #24]	; (12f34 <btrfs_add_orphan_item@@Base+0x60>)
   12f1c:	add	r2, pc
   12f1e:	ldr	r3, [r2, r3]
   12f20:	ldr	r2, [r3, #0]
   12f22:	ldr	r3, [sp, #36]	; 0x24
   12f24:	eors	r2, r3
   12f26:	beq.n	12f2c <btrfs_add_orphan_item@@Base+0x58>
   12f28:	blx	88e4 <__stack_chk_fail@plt>
   12f2c:	add	sp, #44	; 0x2c
   12f2e:	pop	{r4, r5, pc}
   12f30:	ldrsh	r0, [r2, r1]
   12f32:	movs	r5, r0
   12f34:	lsls	r4, r7, #9
   12f36:	movs	r0, r0
   12f38:	ldrsh	r4, [r2, r0]
   12f3a:	movs	r5, r0

00012f3c <btrfs_unlink@@Base>:
   12f3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f40:	sub	sp, #76	; 0x4c
   12f42:	mov	r6, r0
   12f44:	mov	sl, r1
   12f46:	strd	r2, r3, [sp, #40]	; 0x28
   12f4a:	ldr	r2, [pc, #896]	; (132cc <btrfs_unlink@@Base+0x390>)
   12f4c:	ldr	r3, [pc, #896]	; (132d0 <btrfs_unlink@@Base+0x394>)
   12f4e:	add	r2, pc
   12f50:	ldrd	r7, r5, [sp, #128]	; 0x80
   12f54:	ldr	r3, [r2, r3]
   12f56:	ldr	r3, [r3, #0]
   12f58:	str	r3, [sp, #68]	; 0x44
   12f5a:	mov.w	r3, #0
   12f5e:	bl	1b2d4 <btrfs_alloc_path@@Base>
   12f62:	mov	r4, r0
   12f64:	cmp	r0, #0
   12f66:	beq.w	132b2 <btrfs_unlink@@Base+0x376>
   12f6a:	ldrd	r2, r3, [sp, #112]	; 0x70
   12f6e:	mov.w	r9, #0
   12f72:	mov	r1, sl
   12f74:	str.w	r9, [sp, #24]
   12f78:	str	r5, [sp, #0]
   12f7a:	strd	r2, r3, [sp, #16]
   12f7e:	mov	r2, r0
   12f80:	ldr	r3, [sp, #40]	; 0x28
   12f82:	mov	r0, r6
   12f84:	str	r3, [sp, #8]
   12f86:	ldr	r3, [sp, #44]	; 0x2c
   12f88:	str	r3, [sp, #12]
   12f8a:	mov	r3, r7
   12f8c:	bl	30d70 <btrfs_lookup_inode_ref@@Base>
   12f90:	cmn.w	r0, #4096	; 0x1000
   12f94:	mov	fp, r0
   12f96:	bhi.n	13074 <btrfs_unlink@@Base+0x138>
   12f98:	mov	r0, r4
   12f9a:	bl	1b2dc <btrfs_release_path@@Base>
   12f9e:	ldrd	r2, r3, [sp, #112]	; 0x70
   12fa2:	mov	r1, sl
   12fa4:	mov	r0, r9
   12fa6:	strd	r5, r9, [sp, #12]
   12faa:	strd	r2, r3, [sp]
   12fae:	mov	r2, r4
   12fb0:	str	r7, [sp, #8]
   12fb2:	bl	d270 <btrfs_lookup_dir_item@@Base>
   12fb6:	cmn.w	r0, #4096	; 0x1000
   12fba:	mov	r3, r0
   12fbc:	str	r0, [sp, #36]	; 0x24
   12fbe:	bls.n	12fc4 <btrfs_unlink@@Base+0x88>
   12fc0:	mov	fp, r3
   12fc2:	b.n	13074 <btrfs_unlink@@Base+0x138>
   12fc4:	mov	r0, r4
   12fc6:	bl	1b2dc <btrfs_release_path@@Base>
   12fca:	ldrd	r2, r3, [sp, #120]	; 0x78
   12fce:	mov	r1, sl
   12fd0:	mov	r0, r9
   12fd2:	str.w	r9, [sp, #24]
   12fd6:	strd	r2, r3, [sp, #16]
   12fda:	ldrd	r2, r3, [sp, #112]	; 0x70
   12fde:	strd	r7, r5, [sp, #8]
   12fe2:	strd	r2, r3, [sp]
   12fe6:	mov	r2, r4
   12fe8:	bl	d358 <btrfs_lookup_dir_index@@Base>
   12fec:	cmn.w	r0, #4096	; 0x1000
   12ff0:	mov	r8, r0
   12ff2:	bls.n	12ffc <btrfs_unlink@@Base+0xc0>
   12ff4:	cmn.w	r0, #2
   12ff8:	bne.n	1306c <btrfs_unlink@@Base+0x130>
   12ffa:	mov	r8, r9
   12ffc:	ldr	r3, [sp, #36]	; 0x24
   12ffe:	mov	r0, r4
   13000:	orr.w	r9, fp, r3
   13004:	orr.w	r9, r8, r9
   13008:	bl	1b2dc <btrfs_release_path@@Base>
   1300c:	cmp.w	r9, #0
   13010:	beq.n	13066 <btrfs_unlink@@Base+0x12a>
   13012:	cmp.w	fp, #0
   13016:	beq.w	132b8 <btrfs_unlink@@Base+0x37c>
   1301a:	ldr	r3, [sp, #40]	; 0x28
   1301c:	movs	r2, #0
   1301e:	movs	r1, #1
   13020:	strb.w	r2, [sp, #57]	; 0x39
   13024:	strb.w	r1, [sp, #56]	; 0x38
   13028:	mov	r0, r6
   1302a:	str	r3, [sp, #48]	; 0x30
   1302c:	ldr	r3, [sp, #44]	; 0x2c
   1302e:	strb.w	r2, [sp, #58]	; 0x3a
   13032:	strb.w	r2, [sp, #59]	; 0x3b
   13036:	str	r3, [sp, #52]	; 0x34
   13038:	mov.w	r3, #4294967295	; 0xffffffff
   1303c:	strb.w	r2, [sp, #60]	; 0x3c
   13040:	strb.w	r2, [sp, #61]	; 0x3d
   13044:	strb.w	r2, [sp, #62]	; 0x3e
   13048:	strb.w	r2, [sp, #63]	; 0x3f
   1304c:	strb.w	r2, [sp, #64]	; 0x40
   13050:	add	r2, sp, #48	; 0x30
   13052:	str	r1, [sp, #4]
   13054:	mov	r1, sl
   13056:	str	r3, [sp, #0]
   13058:	mov	r3, r4
   1305a:	bl	1d6c0 <btrfs_search_slot@@Base>
   1305e:	subs.w	fp, r0, #0
   13062:	beq.n	13090 <btrfs_unlink@@Base+0x154>
   13064:	ble.n	13074 <btrfs_unlink@@Base+0x138>
   13066:	mvn.w	fp, #1
   1306a:	b.n	13074 <btrfs_unlink@@Base+0x138>
   1306c:	cmn.w	r0, #4096	; 0x1000
   13070:	bls.n	12ffc <btrfs_unlink@@Base+0xc0>
   13072:	mov	fp, r0
   13074:	mov	r0, r4
   13076:	bl	1b302 <btrfs_free_path@@Base>
   1307a:	ldr	r2, [pc, #600]	; (132d4 <btrfs_unlink@@Base+0x398>)
   1307c:	ldr	r3, [pc, #592]	; (132d0 <btrfs_unlink@@Base+0x394>)
   1307e:	add	r2, pc
   13080:	ldr	r3, [r2, r3]
   13082:	ldr	r2, [r3, #0]
   13084:	ldr	r3, [sp, #68]	; 0x44
   13086:	eors	r2, r3
   13088:	beq.w	132c2 <btrfs_unlink@@Base+0x386>
   1308c:	blx	88e4 <__stack_chk_fail@plt>
   13090:	ldr	r3, [r4, #0]
   13092:	movs	r1, #25
   13094:	ldr	r2, [r4, #32]
   13096:	adds	r3, #96	; 0x60
   13098:	mla	r2, r1, r2, r3
   1309c:	ldr.w	r2, [r2, #118]	; 0x76
   130a0:	adds	r2, #101	; 0x65
   130a2:	add	r3, r2
   130a4:	ldr.w	r9, [r3, #40]	; 0x28
   130a8:	cmp.w	r9, #0
   130ac:	beq.n	130b2 <btrfs_unlink@@Base+0x176>
   130ae:	add.w	r9, r9, #4294967295	; 0xffffffff
   130b2:	str.w	r9, [r3, #40]	; 0x28
   130b6:	ldr	r0, [r4, #0]
   130b8:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   130bc:	mov	r0, r4
   130be:	bl	1b2dc <btrfs_release_path@@Base>
   130c2:	cmp.w	r9, #0
   130c6:	bne.n	130f0 <btrfs_unlink@@Base+0x1b4>
   130c8:	ldr	r3, [sp, #136]	; 0x88
   130ca:	cbz	r3, 130f0 <btrfs_unlink@@Base+0x1b4>
   130cc:	ldr	r3, [sp, #40]	; 0x28
   130ce:	mov	r2, r4
   130d0:	mov	r1, sl
   130d2:	mov	r0, r6
   130d4:	str	r3, [sp, #0]
   130d6:	ldr	r3, [sp, #44]	; 0x2c
   130d8:	str	r3, [sp, #4]
   130da:	bl	12ed4 <btrfs_add_orphan_item@@Base>
   130de:	subs.w	fp, r0, #0
   130e2:	blt.n	13074 <btrfs_unlink@@Base+0x138>
   130e4:	ldr	r0, [r4, #0]
   130e6:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   130ea:	mov	r0, r4
   130ec:	bl	1b2dc <btrfs_release_path@@Base>
   130f0:	add	r3, sp, #120	; 0x78
   130f2:	str	r3, [sp, #16]
   130f4:	ldrd	r2, r3, [sp, #112]	; 0x70
   130f8:	mov	r1, sl
   130fa:	mov	r0, r6
   130fc:	strd	r2, r3, [sp, #8]
   13100:	mov	r2, r7
   13102:	ldr	r3, [sp, #40]	; 0x28
   13104:	str	r3, [sp, #0]
   13106:	ldr	r3, [sp, #44]	; 0x2c
   13108:	str	r3, [sp, #4]
   1310a:	mov	r3, r5
   1310c:	bl	312d8 <btrfs_del_inode_ref@@Base>
   13110:	subs.w	fp, r0, #0
   13114:	blt.n	13074 <btrfs_unlink@@Base+0x138>
   13116:	cmp.w	r8, #0
   1311a:	beq.n	131e4 <btrfs_unlink@@Base+0x2a8>
   1311c:	mov.w	r3, #4294967295	; 0xffffffff
   13120:	str	r3, [sp, #24]
   13122:	ldrd	r2, r3, [sp, #120]	; 0x78
   13126:	mov	r1, sl
   13128:	mov	r0, r6
   1312a:	strd	r7, r5, [sp, #8]
   1312e:	strd	r2, r3, [sp, #16]
   13132:	ldrd	r2, r3, [sp, #112]	; 0x70
   13136:	strd	r2, r3, [sp]
   1313a:	mov	r2, r4
   1313c:	bl	d358 <btrfs_lookup_dir_index@@Base>
   13140:	cmn.w	r0, #4096	; 0x1000
   13144:	mov	r3, r0
   13146:	bhi.w	12fc0 <btrfs_unlink@@Base+0x84>
   1314a:	cmp	r0, #0
   1314c:	beq.n	13066 <btrfs_unlink@@Base+0x12a>
   1314e:	mov	r2, r4
   13150:	mov	r1, sl
   13152:	mov	r0, r6
   13154:	bl	cc90 <btrfs_delete_one_dir_name@@Base>
   13158:	mov	fp, r0
   1315a:	cmp	r0, #0
   1315c:	bne.n	13074 <btrfs_unlink@@Base+0x138>
   1315e:	mov	r0, r4
   13160:	bl	1b2dc <btrfs_release_path@@Base>
   13164:	ldrd	r2, r3, [sp, #112]	; 0x70
   13168:	mov	r1, sl
   1316a:	mov	r0, r6
   1316c:	strb.w	fp, [sp, #57]	; 0x39
   13170:	strd	r2, r3, [sp, #48]	; 0x30
   13174:	movs	r2, #1
   13176:	mov	r3, r4
   13178:	strb.w	r2, [sp, #56]	; 0x38
   1317c:	strd	r2, r2, [sp]
   13180:	add	r2, sp, #48	; 0x30
   13182:	strb.w	fp, [sp, #58]	; 0x3a
   13186:	strb.w	fp, [sp, #59]	; 0x3b
   1318a:	strb.w	fp, [sp, #60]	; 0x3c
   1318e:	strb.w	fp, [sp, #61]	; 0x3d
   13192:	strb.w	fp, [sp, #62]	; 0x3e
   13196:	strb.w	fp, [sp, #63]	; 0x3f
   1319a:	strb.w	fp, [sp, #64]	; 0x40
   1319e:	bl	1d6c0 <btrfs_search_slot@@Base>
   131a2:	mov	fp, r0
   131a4:	cmp	r0, #0
   131a6:	bne.w	13074 <btrfs_unlink@@Base+0x138>
   131aa:	ldr	r1, [r4, #0]
   131ac:	movs	r2, #25
   131ae:	ldr	r3, [r4, #32]
   131b0:	mov.w	r9, r5, asr #31
   131b4:	adds	r1, #96	; 0x60
   131b6:	mla	r3, r2, r3, r1
   131ba:	ldr.w	r3, [r3, #118]	; 0x76
   131be:	adds	r3, #101	; 0x65
   131c0:	add	r1, r3
   131c2:	ldr	r3, [r1, #20]
   131c4:	ldr	r2, [r1, #16]
   131c6:	cmp	r3, r9
   131c8:	it	eq
   131ca:	cmpeq	r2, r5
   131cc:	bcc.n	131d4 <btrfs_unlink@@Base+0x298>
   131ce:	subs	r2, r2, r5
   131d0:	sbc.w	r3, r3, r9
   131d4:	str	r2, [r1, #16]
   131d6:	str	r3, [r1, #20]
   131d8:	ldr	r0, [r4, #0]
   131da:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   131de:	mov	r0, r4
   131e0:	bl	1b2dc <btrfs_release_path@@Base>
   131e4:	ldr	r3, [sp, #36]	; 0x24
   131e6:	cmp	r3, #0
   131e8:	beq.w	13074 <btrfs_unlink@@Base+0x138>
   131ec:	mov.w	r3, #4294967295	; 0xffffffff
   131f0:	strd	r5, r3, [sp, #12]
   131f4:	ldrd	r2, r3, [sp, #112]	; 0x70
   131f8:	mov	r1, sl
   131fa:	mov	r0, r6
   131fc:	str	r7, [sp, #8]
   131fe:	strd	r2, r3, [sp]
   13202:	mov	r2, r4
   13204:	bl	d270 <btrfs_lookup_dir_item@@Base>
   13208:	cmn.w	r0, #4096	; 0x1000
   1320c:	mov	r3, r0
   1320e:	bhi.w	12fc0 <btrfs_unlink@@Base+0x84>
   13212:	cmp	r0, #0
   13214:	beq.w	13066 <btrfs_unlink@@Base+0x12a>
   13218:	mov	r2, r4
   1321a:	mov	r1, sl
   1321c:	mov	r0, r6
   1321e:	bl	cc90 <btrfs_delete_one_dir_name@@Base>
   13222:	subs.w	fp, r0, #0
   13226:	blt.w	13074 <btrfs_unlink@@Base+0x138>
   1322a:	mov	r0, r4
   1322c:	bl	1b2dc <btrfs_release_path@@Base>
   13230:	ldrd	r2, r3, [sp, #112]	; 0x70
   13234:	movs	r1, #1
   13236:	mov	r0, r6
   13238:	strb.w	r1, [sp, #56]	; 0x38
   1323c:	strd	r2, r3, [sp, #48]	; 0x30
   13240:	movs	r2, #0
   13242:	strd	r1, r1, [sp]
   13246:	mov	r3, r4
   13248:	strb.w	r2, [sp, #57]	; 0x39
   1324c:	mov	r1, sl
   1324e:	strb.w	r2, [sp, #58]	; 0x3a
   13252:	strb.w	r2, [sp, #59]	; 0x3b
   13256:	strb.w	r2, [sp, #60]	; 0x3c
   1325a:	strb.w	r2, [sp, #61]	; 0x3d
   1325e:	strb.w	r2, [sp, #62]	; 0x3e
   13262:	strb.w	r2, [sp, #63]	; 0x3f
   13266:	strb.w	r2, [sp, #64]	; 0x40
   1326a:	add	r2, sp, #48	; 0x30
   1326c:	bl	1d6c0 <btrfs_search_slot@@Base>
   13270:	mov	fp, r0
   13272:	cmp	r0, #0
   13274:	bne.w	13074 <btrfs_unlink@@Base+0x138>
   13278:	ldr	r1, [r4, #0]
   1327a:	movs	r2, #25
   1327c:	ldr	r3, [r4, #32]
   1327e:	asrs	r7, r5, #31
   13280:	adds	r1, #96	; 0x60
   13282:	mla	r3, r2, r3, r1
   13286:	ldr.w	r3, [r3, #118]	; 0x76
   1328a:	adds	r3, #101	; 0x65
   1328c:	add	r1, r3
   1328e:	ldr	r3, [r1, #20]
   13290:	ldr	r2, [r1, #16]
   13292:	cmp	r3, r7
   13294:	it	eq
   13296:	cmpeq	r2, r5
   13298:	bcc.n	132a0 <btrfs_unlink@@Base+0x364>
   1329a:	subs	r2, r2, r5
   1329c:	sbc.w	r3, r3, r7
   132a0:	str	r2, [r1, #16]
   132a2:	str	r3, [r1, #20]
   132a4:	ldr	r0, [r4, #0]
   132a6:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   132aa:	mov	r0, r4
   132ac:	bl	1b2dc <btrfs_release_path@@Base>
   132b0:	b.n	13074 <btrfs_unlink@@Base+0x138>
   132b2:	mvn.w	fp, #11
   132b6:	b.n	1307a <btrfs_unlink@@Base+0x13e>
   132b8:	cmp.w	r8, #0
   132bc:	bne.w	1311c <btrfs_unlink@@Base+0x1e0>
   132c0:	b.n	131ec <btrfs_unlink@@Base+0x2b0>
   132c2:	mov	r0, fp
   132c4:	add	sp, #76	; 0x4c
   132c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132ca:	nop
   132cc:	ldrb	r2, [r4, r7]
   132ce:	movs	r5, r0
   132d0:	lsls	r4, r7, #9
   132d2:	movs	r0, r0
   132d4:	ldrb	r2, [r6, r2]
   132d6:	movs	r5, r0

000132d8 <btrfs_new_inode@@Base>:
   132d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   132dc:	mov	r9, r2
   132de:	ldr	r2, [pc, #124]	; (1335c <btrfs_new_inode@@Base+0x84>)
   132e0:	mov	r8, r3
   132e2:	ldr	r3, [pc, #124]	; (13360 <btrfs_new_inode@@Base+0x88>)
   132e4:	sub	sp, #180	; 0xb4
   132e6:	add	r2, pc
   132e8:	add	r6, sp, #12
   132ea:	mov	r5, r0
   132ec:	mov	r7, r1
   132ee:	ldr	r3, [r2, r3]
   132f0:	movs	r1, #0
   132f2:	mov	r0, r6
   132f4:	movs	r2, #160	; 0xa0
   132f6:	ldr	r3, [r3, #0]
   132f8:	str	r3, [sp, #172]	; 0xac
   132fa:	mov.w	r3, #0
   132fe:	blx	8bf8 <memset@plt+0x4>
   13302:	movs	r0, #0
   13304:	movs	r4, #0
   13306:	blx	8854 <time@plt>
   1330a:	ldr	r3, [r5, #8]
   1330c:	mov	r2, r9
   1330e:	mov	r1, r7
   13310:	str	r6, [sp, #0]
   13312:	str	r3, [sp, #12]
   13314:	ldr	r3, [r5, #12]
   13316:	strd	r4, r4, [sp, #56]	; 0x38
   1331a:	strd	r4, r4, [sp, #28]
   1331e:	str	r3, [sp, #16]
   13320:	ldr	r3, [sp, #208]	; 0xd0
   13322:	str	r4, [sp, #52]	; 0x34
   13324:	str	r4, [sp, #132]	; 0x84
   13326:	str	r3, [sp, #64]	; 0x40
   13328:	str	r4, [sp, #156]	; 0x9c
   1332a:	str	r4, [sp, #144]	; 0x90
   1332c:	asrs	r3, r0, #31
   1332e:	strd	r0, r3, [sp, #124]	; 0x7c
   13332:	strd	r0, r3, [sp, #148]	; 0x94
   13336:	strd	r0, r3, [sp, #136]	; 0x88
   1333a:	mov	r3, r8
   1333c:	mov	r0, r5
   1333e:	bl	30cf4 <btrfs_insert_inode@@Base>
   13342:	ldr	r2, [pc, #32]	; (13364 <btrfs_new_inode@@Base+0x8c>)
   13344:	ldr	r3, [pc, #24]	; (13360 <btrfs_new_inode@@Base+0x88>)
   13346:	add	r2, pc
   13348:	ldr	r3, [r2, r3]
   1334a:	ldr	r2, [r3, #0]
   1334c:	ldr	r3, [sp, #172]	; 0xac
   1334e:	eors	r2, r3
   13350:	beq.n	13356 <btrfs_new_inode@@Base+0x7e>
   13352:	blx	88e4 <__stack_chk_fail@plt>
   13356:	add	sp, #180	; 0xb4
   13358:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1335c:	ldrh	r2, [r1, r1]
   1335e:	movs	r5, r0
   13360:	lsls	r4, r7, #9
   13362:	movs	r0, r0
   13364:	ldr	r2, [r5, r7]
   13366:	movs	r5, r0

00013368 <btrfs_change_inode_flags@@Base>:
   13368:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1336c:	mov	r9, r2
   1336e:	ldr	r2, [pc, #180]	; (13424 <btrfs_change_inode_flags@@Base+0xbc>)
   13370:	mov	r4, r3
   13372:	ldr	r3, [pc, #180]	; (13428 <btrfs_change_inode_flags@@Base+0xc0>)
   13374:	sub	sp, #44	; 0x2c
   13376:	add	r2, pc
   13378:	mov	r8, r0
   1337a:	str	r1, [sp, #12]
   1337c:	ldr	r3, [r2, r3]
   1337e:	ldrd	r7, r6, [sp, #72]	; 0x48
   13382:	ldr	r3, [r3, #0]
   13384:	str	r3, [sp, #36]	; 0x24
   13386:	mov.w	r3, #0
   1338a:	bl	1b2d4 <btrfs_alloc_path@@Base>
   1338e:	mov	r5, r0
   13390:	cmp	r0, #0
   13392:	beq.n	13416 <btrfs_change_inode_flags@@Base+0xae>
   13394:	movs	r2, #0
   13396:	movs	r3, #1
   13398:	strb.w	r2, [sp, #25]
   1339c:	strd	r2, r3, [sp]
   133a0:	strb.w	r3, [sp, #24]
   133a4:	mov	r3, r0
   133a6:	strb.w	r2, [sp, #26]
   133aa:	mov	r0, r8
   133ac:	strb.w	r2, [sp, #27]
   133b0:	strb.w	r2, [sp, #28]
   133b4:	strb.w	r2, [sp, #29]
   133b8:	strb.w	r2, [sp, #30]
   133bc:	strb.w	r2, [sp, #31]
   133c0:	strb.w	r2, [sp, #32]
   133c4:	add	r2, sp, #16
   133c6:	ldr	r1, [sp, #12]
   133c8:	strd	r9, r4, [sp, #16]
   133cc:	bl	1d6c0 <btrfs_search_slot@@Base>
   133d0:	subs	r4, r0, #0
   133d2:	bgt.n	13410 <btrfs_change_inode_flags@@Base+0xa8>
   133d4:	bne.n	133f6 <btrfs_change_inode_flags@@Base+0x8e>
   133d6:	ldr	r3, [r5, #0]
   133d8:	movs	r1, #25
   133da:	ldr	r2, [r5, #32]
   133dc:	adds	r3, #96	; 0x60
   133de:	mla	r2, r1, r2, r3
   133e2:	ldr.w	r2, [r2, #118]	; 0x76
   133e6:	add	r3, r2
   133e8:	str.w	r7, [r3, #165]	; 0xa5
   133ec:	str.w	r6, [r3, #169]	; 0xa9
   133f0:	ldr	r0, [r5, #0]
   133f2:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   133f6:	mov	r0, r5
   133f8:	bl	1b302 <btrfs_free_path@@Base>
   133fc:	ldr	r2, [pc, #44]	; (1342c <btrfs_change_inode_flags@@Base+0xc4>)
   133fe:	ldr	r3, [pc, #40]	; (13428 <btrfs_change_inode_flags@@Base+0xc0>)
   13400:	add	r2, pc
   13402:	ldr	r3, [r2, r3]
   13404:	ldr	r2, [r3, #0]
   13406:	ldr	r3, [sp, #36]	; 0x24
   13408:	eors	r2, r3
   1340a:	beq.n	1341c <btrfs_change_inode_flags@@Base+0xb4>
   1340c:	blx	88e4 <__stack_chk_fail@plt>
   13410:	mvn.w	r4, #1
   13414:	b.n	133f6 <btrfs_change_inode_flags@@Base+0x8e>
   13416:	mvn.w	r4, #11
   1341a:	b.n	133fc <btrfs_change_inode_flags@@Base+0x94>
   1341c:	mov	r0, r4
   1341e:	add	sp, #44	; 0x2c
   13420:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   13424:	ldr	r2, [r7, r6]
   13426:	movs	r5, r0
   13428:	lsls	r4, r7, #9
   1342a:	movs	r0, r0
   1342c:	ldr	r0, [r6, r4]
   1342e:	movs	r5, r0

00013430 <btrfs_mkdir@@Base>:
   13430:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13434:	mov	sl, r2
   13436:	ldr	r2, [pc, #284]	; (13554 <btrfs_mkdir@@Base+0x124>)
   13438:	mov	fp, r3
   1343a:	ldr	r3, [pc, #284]	; (13558 <btrfs_mkdir@@Base+0x128>)
   1343c:	sub	sp, #76	; 0x4c
   1343e:	add	r2, pc
   13440:	mov	r7, r0
   13442:	str	r1, [sp, #36]	; 0x24
   13444:	ldr	r3, [r2, r3]
   13446:	movs	r2, #0
   13448:	ldrd	r8, r9, [sp, #112]	; 0x70
   1344c:	ldr	r3, [r3, #0]
   1344e:	str	r3, [sp, #68]	; 0x44
   13450:	mov.w	r3, #0
   13454:	ldr	r6, [sp, #120]	; 0x78
   13456:	movs	r3, #0
   13458:	strd	r2, r3, [sp, #40]	; 0x28
   1345c:	bl	1b2d4 <btrfs_alloc_path@@Base>
   13460:	mov	r5, r0
   13462:	cmp	r0, #0
   13464:	beq.n	13546 <btrfs_mkdir@@Base+0x116>
   13466:	ldr	r1, [sp, #36]	; 0x24
   13468:	cbz	r6, 13478 <btrfs_mkdir@@Base+0x48>
   1346a:	ldrd	r2, r3, [r6]
   1346e:	orrs.w	r0, r2, r3
   13472:	it	ne
   13474:	strdne	r2, r3, [sp, #40]	; 0x28
   13478:	movs	r0, #0
   1347a:	mov	r2, r5
   1347c:	strd	fp, r0, [sp, #12]
   13480:	str.w	sl, [sp, #8]
   13484:	strd	r8, r9, [sp]
   13488:	str	r1, [sp, #36]	; 0x24
   1348a:	bl	d270 <btrfs_lookup_dir_item@@Base>
   1348e:	ldr	r1, [sp, #36]	; 0x24
   13490:	cmn.w	r0, #4096	; 0x1000
   13494:	mov	r4, r0
   13496:	bhi.n	134c0 <btrfs_mkdir@@Base+0x90>
   13498:	cbz	r0, 134e6 <btrfs_mkdir@@Base+0xb6>
   1349a:	mov	r2, r0
   1349c:	movs	r3, #17
   1349e:	ldr	r0, [r5, #0]
   134a0:	add	r1, sp, #48	; 0x30
   134a2:	bl	1a79e <read_extent_buffer@@Base>
   134a6:	ldrd	r2, r3, [sp, #48]	; 0x30
   134aa:	strd	r2, r3, [sp, #40]	; 0x28
   134ae:	ldr	r2, [r5, #0]
   134b0:	add	r4, r2
   134b2:	ldrb.w	r3, [r4, #125]	; 0x7d
   134b6:	cmp	r3, #2
   134b8:	ite	eq
   134ba:	moveq	r4, #0
   134bc:	mvnne.w	r4, #16
   134c0:	mov	r0, r5
   134c2:	bl	1b302 <btrfs_free_path@@Base>
   134c6:	cbnz	r4, 134d2 <btrfs_mkdir@@Base+0xa2>
   134c8:	cbz	r6, 134d2 <btrfs_mkdir@@Base+0xa2>
   134ca:	ldrd	r2, r3, [sp, #40]	; 0x28
   134ce:	strd	r2, r3, [r6]
   134d2:	ldr	r2, [pc, #136]	; (1355c <btrfs_mkdir@@Base+0x12c>)
   134d4:	ldr	r3, [pc, #128]	; (13558 <btrfs_mkdir@@Base+0x128>)
   134d6:	add	r2, pc
   134d8:	ldr	r3, [r2, r3]
   134da:	ldr	r2, [r3, #0]
   134dc:	ldr	r3, [sp, #68]	; 0x44
   134de:	eors	r2, r3
   134e0:	beq.n	1354c <btrfs_mkdir@@Base+0x11c>
   134e2:	blx	88e4 <__stack_chk_fail@plt>
   134e6:	ldrd	r2, r3, [sp, #40]	; 0x28
   134ea:	orrs	r3, r2
   134ec:	beq.n	1352e <btrfs_mkdir@@Base+0xfe>
   134ee:	ldr	r3, [sp, #124]	; 0x7c
   134f0:	mov	r0, r7
   134f2:	str	r1, [sp, #36]	; 0x24
   134f4:	orr.w	r3, r3, #16384	; 0x4000
   134f8:	str	r3, [sp, #0]
   134fa:	ldrd	r2, r3, [sp, #40]	; 0x28
   134fe:	bl	132d8 <btrfs_new_inode@@Base>
   13502:	mov	r4, r0
   13504:	cmp	r0, #0
   13506:	bne.n	134c0 <btrfs_mkdir@@Base+0x90>
   13508:	movs	r3, #1
   1350a:	str	r0, [sp, #28]
   1350c:	strd	r0, r3, [sp, #20]
   13510:	movs	r3, #2
   13512:	ldr	r1, [sp, #36]	; 0x24
   13514:	mov	r0, r7
   13516:	strd	fp, r3, [sp, #12]
   1351a:	str.w	sl, [sp, #8]
   1351e:	ldrd	r2, r3, [sp, #40]	; 0x28
   13522:	strd	r8, r9, [sp]
   13526:	bl	12bb4 <btrfs_add_link@@Base>
   1352a:	mov	r4, r0
   1352c:	b.n	134c0 <btrfs_mkdir@@Base+0x90>
   1352e:	add	r3, sp, #40	; 0x28
   13530:	mov	r2, r8
   13532:	str	r3, [sp, #0]
   13534:	mov	r3, r9
   13536:	str	r1, [sp, #36]	; 0x24
   13538:	bl	d3e8 <btrfs_find_free_objectid@@Base>
   1353c:	ldr	r1, [sp, #36]	; 0x24
   1353e:	mov	r4, r0
   13540:	cmp	r0, #0
   13542:	beq.n	134ee <btrfs_mkdir@@Base+0xbe>
   13544:	b.n	134c0 <btrfs_mkdir@@Base+0x90>
   13546:	mvn.w	r4, #11
   1354a:	b.n	134d2 <btrfs_mkdir@@Base+0xa2>
   1354c:	mov	r0, r4
   1354e:	add	sp, #76	; 0x4c
   13550:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13554:	ldr	r2, [r6, r3]
   13556:	movs	r5, r0
   13558:	lsls	r4, r7, #9
   1355a:	movs	r0, r0
   1355c:	ldr	r2, [r3, r1]
   1355e:	movs	r5, r0

00013560 <btrfs_mksubvol@@Base>:
   13560:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13564:	mov	r5, r0
   13566:	vpush	{d8}
   1356a:	mov	r0, r1
   1356c:	vmov	s16, r1
   13570:	sub	sp, #436	; 0x1b4
   13572:	strd	r2, r3, [sp, #56]	; 0x38
   13576:	ldrb.w	r3, [sp, #480]	; 0x1e0
   1357a:	ldr	r2, [pc, #808]	; (138a4 <btrfs_mksubvol@@Base+0x344>)
   1357c:	str	r3, [sp, #76]	; 0x4c
   1357e:	add	r2, pc
   13580:	ldr	r3, [pc, #804]	; (138a8 <btrfs_mksubvol@@Base+0x348>)
   13582:	ldr	r3, [r2, r3]
   13584:	ldr	r3, [r3, #0]
   13586:	str	r3, [sp, #428]	; 0x1ac
   13588:	mov.w	r3, #0
   1358c:	blx	8b70 <strlen@plt>
   13590:	mov	r4, r0
   13592:	str	r0, [sp, #40]	; 0x28
   13594:	cmp	r0, #0
   13596:	beq.w	13892 <btrfs_mksubvol@@Base+0x332>
   1359a:	cmp	r0, #255	; 0xff
   1359c:	bgt.w	13892 <btrfs_mksubvol@@Base+0x332>
   135a0:	ldr.w	r3, [r5, #464]	; 0x1d0
   135a4:	add.w	r8, sp, #104	; 0x68
   135a8:	ldr.w	r9, [r5, #176]	; 0xb0
   135ac:	add	r6, sp, #84	; 0x54
   135ae:	ldr.w	sl, [r5, #180]	; 0xb4
   135b2:	mov	r0, r8
   135b4:	str	r3, [sp, #64]	; 0x40
   135b6:	movs	r7, #0
   135b8:	ldr	r3, [r3, #28]
   135ba:	vmov	s17, r3
   135be:	bl	1b2cc <btrfs_init_path@@Base>
   135c2:	mov.w	r2, #4294967295	; 0xffffffff
   135c6:	movs	r3, #96	; 0x60
   135c8:	strd	r9, sl, [r6]
   135cc:	mov	r1, r5
   135ce:	strb	r3, [r6, #8]
   135d0:	mov	r0, r7
   135d2:	strb.w	r2, [sp, #93]	; 0x5d
   135d6:	mov	r3, r8
   135d8:	strb.w	r2, [sp, #94]	; 0x5e
   135dc:	strb.w	r2, [sp, #95]	; 0x5f
   135e0:	strb.w	r2, [sp, #96]	; 0x60
   135e4:	strb.w	r2, [sp, #97]	; 0x61
   135e8:	strb.w	r2, [sp, #98]	; 0x62
   135ec:	strb.w	r2, [sp, #99]	; 0x63
   135f0:	strb.w	r2, [sp, #100]	; 0x64
   135f4:	mov	r2, r6
   135f6:	strd	r7, r7, [sp]
   135fa:	bl	1d6c0 <btrfs_search_slot@@Base>
   135fe:	cmp	r0, #0
   13600:	bgt.n	1362c <btrfs_mksubvol@@Base+0xcc>
   13602:	str	r0, [sp, #0]
   13604:	mov	r2, r9
   13606:	ldr	r0, [pc, #676]	; (138ac <btrfs_mksubvol@@Base+0x34c>)
   13608:	mov	r3, sl
   1360a:	add	r0, pc
   1360c:	bl	1a900 <__btrfs_error@@Base>
   13610:	add	r0, sp, #104	; 0x68
   13612:	bl	1b2cc <btrfs_init_path@@Base>
   13616:	ldr	r2, [pc, #664]	; (138b0 <btrfs_mksubvol@@Base+0x350>)
   13618:	ldr	r3, [pc, #652]	; (138a8 <btrfs_mksubvol@@Base+0x348>)
   1361a:	add	r2, pc
   1361c:	ldr	r3, [r2, r3]
   1361e:	ldr	r2, [r3, #0]
   13620:	ldr	r3, [sp, #428]	; 0x1ac
   13622:	eors	r2, r3
   13624:	beq.w	13896 <btrfs_mksubvol@@Base+0x336>
   13628:	blx	88e4 <__stack_chk_fail@plt>
   1362c:	ldr.w	r2, [r8, #32]
   13630:	cmp	r2, #0
   13632:	bgt.n	13664 <btrfs_mksubvol@@Base+0x104>
   13634:	movs	r3, #2
   13636:	str	r3, [sp, #48]	; 0x30
   13638:	movs	r3, #0
   1363a:	add	r2, sp, #104	; 0x68
   1363c:	str	r3, [sp, #52]	; 0x34
   1363e:	str	r2, [sp, #44]	; 0x2c
   13640:	mov	r0, r2
   13642:	bl	1b2dc <btrfs_release_path@@Base>
   13646:	movs	r1, #1
   13648:	mov	r0, r5
   1364a:	bl	2e404 <btrfs_start_transaction@@Base>
   1364e:	ldr	r2, [sp, #44]	; 0x2c
   13650:	cmn.w	r0, #4096	; 0x1000
   13654:	mov	r8, r0
   13656:	bls.n	13698 <btrfs_mksubvol@@Base+0x138>
   13658:	ldr	r0, [pc, #600]	; (138b4 <btrfs_mksubvol@@Base+0x354>)
   1365a:	add	r0, pc
   1365c:	bl	1a900 <__btrfs_error@@Base>
   13660:	movs	r7, #0
   13662:	b.n	13610 <btrfs_mksubvol@@Base+0xb0>
   13664:	subs	r2, #1
   13666:	ldr.w	r0, [r8]
   1366a:	mov	r1, r6
   1366c:	str.w	r2, [r8, #32]
   13670:	bl	12a20 <task_period_stop@@Base+0x24>
   13674:	ldrd	r2, r3, [r6]
   13678:	cmp	r3, sl
   1367a:	it	eq
   1367c:	cmpeq	r2, r9
   1367e:	bne.n	13634 <btrfs_mksubvol@@Base+0xd4>
   13680:	ldrb	r3, [r6, #8]
   13682:	cmp	r3, #96	; 0x60
   13684:	bne.n	13634 <btrfs_mksubvol@@Base+0xd4>
   13686:	ldr.w	r3, [r6, #9]
   1368a:	ldr.w	r2, [r6, #13]
   1368e:	adds	r3, #1
   13690:	str	r3, [sp, #48]	; 0x30
   13692:	adc.w	r3, r2, #0
   13696:	b.n	1363a <btrfs_mksubvol@@Base+0xda>
   13698:	add.w	r6, sp, #93	; 0x5d
   1369c:	add.w	fp, sp, #84	; 0x54
   136a0:	movs	r7, #0
   136a2:	movs	r3, #1
   136a4:	strd	r9, sl, [fp]
   136a8:	mov	r1, r5
   136aa:	strb.w	r3, [fp, #8]
   136ae:	strb	r7, [r6, #0]
   136b0:	strb	r7, [r6, #1]
   136b2:	strb	r7, [r6, #2]
   136b4:	strb	r7, [r6, #3]
   136b6:	strb	r7, [r6, #4]
   136b8:	strb	r7, [r6, #5]
   136ba:	strb	r7, [r6, #6]
   136bc:	strb	r7, [r6, #7]
   136be:	str	r3, [sp, #0]
   136c0:	mov	r3, fp
   136c2:	str	r2, [sp, #68]	; 0x44
   136c4:	bl	30c48 <btrfs_lookup_inode@@Base>
   136c8:	ldr	r2, [sp, #68]	; 0x44
   136ca:	str	r0, [sp, #44]	; 0x2c
   136cc:	cbz	r0, 136da <btrfs_mksubvol@@Base+0x17a>
   136ce:	str	r0, [sp, #0]
   136d0:	mov	r2, r9
   136d2:	ldr	r0, [pc, #484]	; (138b8 <btrfs_mksubvol@@Base+0x358>)
   136d4:	mov	r3, sl
   136d6:	add	r0, pc
   136d8:	b.n	1360c <btrfs_mksubvol@@Base+0xac>
   136da:	ldr	r7, [r2, #0]
   136dc:	add.w	r3, r7, #96	; 0x60
   136e0:	str	r3, [sp, #68]	; 0x44
   136e2:	ldr	r1, [sp, #68]	; 0x44
   136e4:	ldr	r3, [r2, #32]
   136e6:	movs	r2, #25
   136e8:	mla	r3, r2, r3, r1
   136ec:	vmov	r1, s16
   136f0:	mov	r2, r4
   136f2:	ldr.w	r3, [r3, #118]	; 0x76
   136f6:	str	r3, [sp, #72]	; 0x48
   136f8:	ldr	r3, [sp, #56]	; 0x38
   136fa:	str.w	r3, [fp]
   136fe:	ldr	r3, [sp, #60]	; 0x3c
   13700:	str.w	r3, [fp, #4]
   13704:	mov.w	r3, #4294967295	; 0xffffffff
   13708:	strb	r3, [r6, #0]
   1370a:	strb	r3, [r6, #1]
   1370c:	strb	r3, [r6, #2]
   1370e:	strb	r3, [r6, #3]
   13710:	strb	r3, [r6, #4]
   13712:	strb	r3, [r6, #5]
   13714:	strb	r3, [r6, #6]
   13716:	strb	r3, [r6, #7]
   13718:	add	r6, sp, #172	; 0xac
   1371a:	movs	r3, #132	; 0x84
   1371c:	strb.w	r3, [fp, #8]
   13720:	mov	r0, r6
   13722:	mov.w	r3, #256	; 0x100
   13726:	blx	89a4 <__memcpy_chk@plt>
   1372a:	ldr	r3, [sp, #76]	; 0x4c
   1372c:	cbz	r3, 13790 <btrfs_mksubvol@@Base+0x230>
   1372e:	ldr.w	fp, [pc, #396]	; 138bc <btrfs_mksubvol@@Base+0x35c>
   13732:	mov	r4, r6
   13734:	add	fp, pc
   13736:	ldr	r3, [sp, #48]	; 0x30
   13738:	mov	r2, r4
   1373a:	mov	r1, r5
   1373c:	mov	r0, r8
   1373e:	strd	r9, sl, [sp]
   13742:	str	r3, [sp, #16]
   13744:	ldr	r3, [sp, #52]	; 0x34
   13746:	str	r3, [sp, #20]
   13748:	movs	r3, #2
   1374a:	str	r3, [sp, #12]
   1374c:	add	r3, sp, #84	; 0x54
   1374e:	str	r3, [sp, #8]
   13750:	ldr	r3, [sp, #40]	; 0x28
   13752:	bl	d0c0 <btrfs_insert_dir_item@@Base>
   13756:	cmn.w	r0, #17
   1375a:	mov	r6, r0
   1375c:	bne.n	137b0 <btrfs_mksubvol@@Base+0x250>
   1375e:	ldr	r3, [sp, #44]	; 0x2c
   13760:	movs	r2, #1
   13762:	mov	r0, r4
   13764:	str	r3, [sp, #8]
   13766:	vmov	r3, s16
   1376a:	strd	fp, r3, [sp]
   1376e:	mov.w	r3, #256	; 0x100
   13772:	mov	r1, r3
   13774:	blx	8e44 <__snprintf_chk@plt>
   13778:	subs	r3, r0, #1
   1377a:	str	r0, [sp, #40]	; 0x28
   1377c:	cmp	r3, #254	; 0xfe
   1377e:	bhi.w	13660 <btrfs_mksubvol@@Base+0x100>
   13782:	ldr	r3, [sp, #44]	; 0x2c
   13784:	adds	r3, #1
   13786:	str	r3, [sp, #44]	; 0x2c
   13788:	cmp.w	r3, #1024	; 0x400
   1378c:	bne.n	13736 <btrfs_mksubvol@@Base+0x1d6>
   1378e:	b.n	13660 <btrfs_mksubvol@@Base+0x100>
   13790:	ldr	r3, [sp, #48]	; 0x30
   13792:	mov	r2, r6
   13794:	mov	r1, r5
   13796:	mov	r0, r8
   13798:	strd	r9, sl, [sp]
   1379c:	str	r3, [sp, #16]
   1379e:	ldr	r3, [sp, #52]	; 0x34
   137a0:	str	r3, [sp, #20]
   137a2:	movs	r3, #2
   137a4:	strd	fp, r3, [sp, #8]
   137a8:	mov	r3, r4
   137aa:	bl	d0c0 <btrfs_insert_dir_item@@Base>
   137ae:	mov	r6, r0
   137b0:	cmp	r6, #0
   137b2:	bne.w	13660 <btrfs_mksubvol@@Base+0x100>
   137b6:	ldr	r3, [sp, #72]	; 0x48
   137b8:	add	r4, sp, #172	; 0xac
   137ba:	ldr	r2, [sp, #68]	; 0x44
   137bc:	adds	r3, #101	; 0x65
   137be:	add	r2, r3
   137c0:	mov	r3, r2
   137c2:	ldr	r0, [r2, #16]
   137c4:	ldr	r1, [r2, #20]
   137c6:	ldr	r2, [sp, #40]	; 0x28
   137c8:	lsls	r2, r2, #1
   137ca:	adds	r0, r0, r2
   137cc:	str	r0, [r3, #16]
   137ce:	adc.w	r1, r1, r2, asr #31
   137d2:	mov	r0, r7
   137d4:	str	r1, [r3, #20]
   137d6:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   137da:	add	r0, sp, #104	; 0x68
   137dc:	bl	1b2dc <btrfs_release_path@@Base>
   137e0:	ldr	r3, [sp, #40]	; 0x28
   137e2:	ldr.w	r2, [r5, #447]	; 0x1bf
   137e6:	mov	r0, r8
   137e8:	vmov	r1, s17
   137ec:	str	r3, [sp, #36]	; 0x24
   137ee:	ldr	r3, [sp, #48]	; 0x30
   137f0:	str	r4, [sp, #32]
   137f2:	strd	r9, sl, [sp, #16]
   137f6:	str	r3, [sp, #24]
   137f8:	ldr	r3, [sp, #52]	; 0x34
   137fa:	str	r3, [sp, #28]
   137fc:	ldr.w	r3, [r5, #451]	; 0x1c3
   13800:	strd	r2, r3, [sp, #8]
   13804:	movs	r3, #144	; 0x90
   13806:	str	r3, [sp, #0]
   13808:	ldrd	r2, r3, [sp, #56]	; 0x38
   1380c:	bl	2b0b0 <btrfs_add_root_ref@@Base>
   13810:	ldr.w	r2, [r5, #447]	; 0x1bf
   13814:	ldr.w	r3, [r5, #451]	; 0x1c3
   13818:	cbz	r0, 13828 <btrfs_mksubvol@@Base+0x2c8>
   1381a:	str	r0, [sp, #0]
   1381c:	ldr	r0, [pc, #160]	; (138c0 <btrfs_mksubvol@@Base+0x360>)
   1381e:	add	r0, pc
   13820:	bl	1a900 <__btrfs_error@@Base>
   13824:	mov	r7, r6
   13826:	b.n	13610 <btrfs_mksubvol@@Base+0xb0>
   13828:	ldr	r1, [sp, #40]	; 0x28
   1382a:	mov	r0, r8
   1382c:	strd	r9, sl, [sp, #16]
   13830:	strd	r4, r1, [sp, #32]
   13834:	ldr	r1, [sp, #48]	; 0x30
   13836:	str	r1, [sp, #24]
   13838:	ldr	r1, [sp, #52]	; 0x34
   1383a:	str	r1, [sp, #28]
   1383c:	ldr	r1, [sp, #56]	; 0x38
   1383e:	str	r1, [sp, #8]
   13840:	ldr	r1, [sp, #60]	; 0x3c
   13842:	str	r1, [sp, #12]
   13844:	movs	r1, #156	; 0x9c
   13846:	str	r1, [sp, #0]
   13848:	vmov	r1, s17
   1384c:	bl	2b0b0 <btrfs_add_root_ref@@Base>
   13850:	cbz	r0, 13862 <btrfs_mksubvol@@Base+0x302>
   13852:	str	r0, [sp, #0]
   13854:	ldr	r0, [pc, #108]	; (138c4 <btrfs_mksubvol@@Base+0x364>)
   13856:	ldr.w	r2, [r5, #447]	; 0x1bf
   1385a:	ldr.w	r3, [r5, #451]	; 0x1c3
   1385e:	add	r0, pc
   13860:	b.n	13820 <btrfs_mksubvol@@Base+0x2c0>
   13862:	mov	r1, r5
   13864:	mov	r0, r8
   13866:	bl	2e684 <btrfs_commit_transaction@@Base>
   1386a:	mov	r1, r0
   1386c:	cbz	r0, 13878 <btrfs_mksubvol@@Base+0x318>
   1386e:	ldr	r0, [pc, #88]	; (138c8 <btrfs_mksubvol@@Base+0x368>)
   13870:	add	r0, pc
   13872:	bl	1a900 <__btrfs_error@@Base>
   13876:	b.n	13824 <btrfs_mksubvol@@Base+0x2c4>
   13878:	ldr	r0, [sp, #64]	; 0x40
   1387a:	add	r1, sp, #84	; 0x54
   1387c:	bl	20e8e <btrfs_read_fs_root@@Base>
   13880:	cmn.w	r0, #4096	; 0x1000
   13884:	mov	r7, r0
   13886:	bls.w	13610 <btrfs_mksubvol@@Base+0xb0>
   1388a:	mov	r1, r0
   1388c:	ldr	r0, [pc, #60]	; (138cc <btrfs_mksubvol@@Base+0x36c>)
   1388e:	add	r0, pc
   13890:	b.n	13872 <btrfs_mksubvol@@Base+0x312>
   13892:	movs	r7, #0
   13894:	b.n	13616 <btrfs_mksubvol@@Base+0xb6>
   13896:	mov	r0, r7
   13898:	add	sp, #436	; 0x1b4
   1389a:	vpop	{d8}
   1389e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138a2:	nop
   138a4:	ldrsb	r2, [r6, r6]
   138a6:	movs	r5, r0
   138a8:	lsls	r4, r7, #9
   138aa:	movs	r0, r0
   138ac:	cbnz	r6, 138de <btrfs_mksubvol@@Base+0x37e>
   138ae:	movs	r2, r0
   138b0:	ldrsb	r6, [r2, r4]
   138b2:	movs	r5, r0
   138b4:	cbnz	r1, 138de <btrfs_mksubvol@@Base+0x37e>
   138b6:	movs	r2, r0
   138b8:	cbnz	r1, 138ca <btrfs_mksubvol@@Base+0x36a>
   138ba:	movs	r2, r0
   138bc:	cbnz	r1, 138c0 <btrfs_mksubvol@@Base+0x360>
   138be:	movs	r2, r0
   138c0:			; <UNDEFINED> instruction: 0xb81c
   138c2:	movs	r2, r0
   138c4:			; <UNDEFINED> instruction: 0xb804
   138c6:	movs	r2, r0
   138c8:			; <UNDEFINED> instruction: 0xb816
   138ca:	movs	r2, r0
   138cc:			; <UNDEFINED> instruction: 0xb816
   138ce:	movs	r2, r0
   138d0:	push	{r4, lr}
   138d2:	mov	r4, r1
   138d4:	ldr	r1, [pc, #84]	; (1392c <btrfs_mksubvol@@Base+0x3cc>)
   138d6:	sub	sp, #24
   138d8:	ldr	r3, [pc, #84]	; (13930 <btrfs_mksubvol@@Base+0x3d0>)
   138da:	add	r1, pc
   138dc:	ldr	r3, [r1, r3]
   138de:	mov	r1, sp
   138e0:	ldr	r3, [r3, #0]
   138e2:	str	r3, [sp, #20]
   138e4:	mov.w	r3, #0
   138e8:	movs	r3, #25
   138ea:	muls	r2, r3
   138ec:	movs	r3, #17
   138ee:	adds	r2, #101	; 0x65
   138f0:	bl	1a79e <read_extent_buffer@@Base>
   138f4:	ldr.w	r3, [sp, #13]
   138f8:	ldr.w	r2, [sp, #9]
   138fc:	str.w	r3, [r4, #13]
   13900:	ldrb.w	r3, [sp, #8]
   13904:	str.w	r2, [r4, #9]
   13908:	ldr	r2, [pc, #40]	; (13934 <btrfs_mksubvol@@Base+0x3d4>)
   1390a:	strb	r3, [r4, #8]
   1390c:	ldr	r3, [sp, #0]
   1390e:	add	r2, pc
   13910:	str	r3, [r4, #0]
   13912:	ldr	r3, [sp, #4]
   13914:	str	r3, [r4, #4]
   13916:	ldr	r3, [pc, #24]	; (13930 <btrfs_mksubvol@@Base+0x3d0>)
   13918:	ldr	r3, [r2, r3]
   1391a:	ldr	r2, [r3, #0]
   1391c:	ldr	r3, [sp, #20]
   1391e:	eors	r2, r3
   13920:	beq.n	13926 <btrfs_mksubvol@@Base+0x3c6>
   13922:	blx	88e4 <__stack_chk_fail@plt>
   13926:	add	sp, #24
   13928:	pop	{r4, pc}
   1392a:	nop
   1392c:	strb	r6, [r2, r1]
   1392e:	movs	r5, r0
   13930:	lsls	r4, r7, #9
   13932:	movs	r0, r0
   13934:	strb	r2, [r4, r0]
   13936:	movs	r5, r0

00013938 <btrfs_get_extent@@Base>:
   13938:	ldr.w	ip, [pc, #380]	; 13ab8 <btrfs_get_extent@@Base+0x180>
   1393c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13940:	mov	r4, r2
   13942:	ldr	r2, [pc, #376]	; (13abc <btrfs_get_extent@@Base+0x184>)
   13944:	add	ip, pc
   13946:	sub	sp, #76	; 0x4c
   13948:	mov	r5, r1
   1394a:	mov.w	r9, #108	; 0x6c
   1394e:	ldr.w	r2, [ip, r2]
   13952:	ldr	r3, [sp, #136]	; 0x88
   13954:	ldr	r2, [r2, #0]
   13956:	str	r2, [sp, #68]	; 0x44
   13958:	mov.w	r2, #0
   1395c:	ldr	r2, [sp, #120]	; 0x78
   1395e:	ldrd	r6, r7, [sp, #112]	; 0x70
   13962:	ldrd	r8, sl, [sp, #128]	; 0x80
   13966:	str.w	r2, [sp, #37]	; 0x25
   1396a:	ldr	r2, [sp, #124]	; 0x7c
   1396c:	strd	r6, r7, [sp, #28]
   13970:	strb.w	r9, [sp, #36]	; 0x24
   13974:	str.w	r2, [sp, #41]	; 0x29
   13978:	subs	r2, r3, #0
   1397a:	it	ne
   1397c:	movne	r2, #1
   1397e:	strd	r3, r2, [sp]
   13982:	add	r2, sp, #28
   13984:	mov	r3, r4
   13986:	bl	1d6c0 <btrfs_search_slot@@Base>
   1398a:	subs.w	fp, r0, #0
   1398e:	ble.w	13aa2 <btrfs_get_extent@@Base+0x16a>
   13992:	mov	r2, r6
   13994:	mov	r3, r7
   13996:	mov	r1, r4
   13998:	mov	r0, r5
   1399a:	str.w	r9, [sp]
   1399e:	bl	1ed78 <btrfs_previous_item@@Base>
   139a2:	subs.w	fp, r0, #0
   139a6:	blt.n	13a8e <btrfs_get_extent@@Base+0x156>
   139a8:	beq.n	13a36 <btrfs_get_extent@@Base+0xfe>
   139aa:	ldr	r2, [r4, #0]
   139ac:	ldr	r3, [r4, #32]
   139ae:	adds	r3, #1
   139b0:	str	r3, [r4, #32]
   139b2:	ldr.w	r2, [r2, #192]	; 0xc0
   139b6:	cmp	r3, r2
   139b8:	bcc.n	139d0 <btrfs_get_extent@@Base+0x98>
   139ba:	movs	r3, #0
   139bc:	mov	r1, r4
   139be:	strb.w	r3, [r4, #65]	; 0x41
   139c2:	ldr.w	r0, [r5, #464]	; 0x1d0
   139c6:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   139ca:	mov	fp, r0
   139cc:	cmp	r0, #0
   139ce:	bne.n	13a8e <btrfs_get_extent@@Base+0x156>
   139d0:	ldr	r2, [r4, #32]
   139d2:	add	r1, sp, #48	; 0x30
   139d4:	ldr	r0, [r4, #0]
   139d6:	bl	138d0 <btrfs_mksubvol@@Base+0x370>
   139da:	ldrd	r2, r3, [sp, #48]	; 0x30
   139de:	cmp	r3, r7
   139e0:	it	eq
   139e2:	cmpeq	r2, r6
   139e4:	bne.n	13aa4 <btrfs_get_extent@@Base+0x16c>
   139e6:	ldrb.w	r3, [sp, #56]	; 0x38
   139ea:	cmp	r3, #108	; 0x6c
   139ec:	bne.n	13aa4 <btrfs_get_extent@@Base+0x16c>
   139ee:	ldr	r1, [sp, #120]	; 0x78
   139f0:	ldr.w	r3, [sp, #61]	; 0x3d
   139f4:	adds.w	r1, r1, r8
   139f8:	str	r1, [sp, #16]
   139fa:	ldr	r1, [sp, #124]	; 0x7c
   139fc:	ldr.w	r2, [sp, #57]	; 0x39
   13a00:	adc.w	r1, r1, sl
   13a04:	str	r1, [sp, #20]
   13a06:	ldrd	r0, r1, [sp, #16]
   13a0a:	cmp	r3, r1
   13a0c:	ldr	r3, [r4, #32]
   13a0e:	it	eq
   13a10:	cmpeq	r2, r0
   13a12:	ite	cs
   13a14:	movcs.w	fp, #1
   13a18:	movcc.w	fp, #0
   13a1c:	cmp	r3, #0
   13a1e:	bne.n	13a8e <btrfs_get_extent@@Base+0x156>
   13a20:	mov	r1, r4
   13a22:	mov	r0, r5
   13a24:	bl	1ea6c <btrfs_prev_leaf@@Base>
   13a28:	cmp	r0, #0
   13a2a:	bne.n	13aaa <btrfs_get_extent@@Base+0x172>
   13a2c:	ldr	r3, [r4, #0]
   13a2e:	ldr.w	r3, [r3, #192]	; 0xc0
   13a32:	str	r3, [r4, #32]
   13a34:	b.n	13a8e <btrfs_get_extent@@Base+0x156>
   13a36:	ldr	r2, [r4, #32]
   13a38:	add	r1, sp, #48	; 0x30
   13a3a:	ldr	r0, [r4, #0]
   13a3c:	bl	138d0 <btrfs_mksubvol@@Base+0x370>
   13a40:	ldrd	r2, r3, [sp, #48]	; 0x30
   13a44:	cmp	r3, r7
   13a46:	it	eq
   13a48:	cmpeq	r2, r6
   13a4a:	bne.n	139aa <btrfs_get_extent@@Base+0x72>
   13a4c:	ldrb.w	r3, [sp, #56]	; 0x38
   13a50:	cmp	r3, #108	; 0x6c
   13a52:	bne.n	139aa <btrfs_get_extent@@Base+0x72>
   13a54:	ldr	r3, [r4, #0]
   13a56:	movs	r1, #25
   13a58:	ldr	r2, [r4, #32]
   13a5a:	adds	r3, #96	; 0x60
   13a5c:	mla	r2, r1, r2, r3
   13a60:	ldr.w	r1, [sp, #61]	; 0x3d
   13a64:	ldr.w	r2, [r2, #118]	; 0x76
   13a68:	add	r3, r2
   13a6a:	ldr.w	r2, [r3, #109]!
   13a6e:	ldr	r0, [r3, #4]
   13a70:	ldr.w	r3, [sp, #57]	; 0x39
   13a74:	adds	r3, r2, r3
   13a76:	str	r3, [sp, #8]
   13a78:	adc.w	r3, r0, r1
   13a7c:	str	r3, [sp, #12]
   13a7e:	ldrd	r0, r1, [sp, #8]
   13a82:	ldrd	r2, r3, [sp, #120]	; 0x78
   13a86:	cmp	r3, r1
   13a88:	it	eq
   13a8a:	cmpeq	r2, r0
   13a8c:	bcs.n	139aa <btrfs_get_extent@@Base+0x72>
   13a8e:	ldr	r2, [pc, #48]	; (13ac0 <btrfs_get_extent@@Base+0x188>)
   13a90:	ldr	r3, [pc, #40]	; (13abc <btrfs_get_extent@@Base+0x184>)
   13a92:	add	r2, pc
   13a94:	ldr	r3, [r2, r3]
   13a96:	ldr	r2, [r3, #0]
   13a98:	ldr	r3, [sp, #68]	; 0x44
   13a9a:	eors	r2, r3
   13a9c:	beq.n	13aae <btrfs_get_extent@@Base+0x176>
   13a9e:	blx	88e4 <__stack_chk_fail@plt>
   13aa2:	bne.n	13a8e <btrfs_get_extent@@Base+0x156>
   13aa4:	mov.w	fp, #1
   13aa8:	b.n	13a8e <btrfs_get_extent@@Base+0x156>
   13aaa:	mov	fp, r0
   13aac:	b.n	13a8e <btrfs_get_extent@@Base+0x156>
   13aae:	mov	r0, fp
   13ab0:	add	sp, #76	; 0x4c
   13ab2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ab6:	nop
   13ab8:	strh	r4, [r5, r7]
   13aba:	movs	r5, r0
   13abc:	lsls	r4, r7, #9
   13abe:	movs	r0, r0
   13ac0:	strh	r6, [r3, r2]
   13ac2:	movs	r5, r0

00013ac4 <btrfs_punch_hole@@Base>:
   13ac4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13ac8:	sub	sp, #40	; 0x28
   13aca:	mov	sl, r0
   13acc:	mov	r5, r2
   13ace:	ldrd	r8, r9, [sp, #80]	; 0x50
   13ad2:	mov	r7, r3
   13ad4:	str	r1, [sp, #36]	; 0x24
   13ad6:	bl	1b2d4 <btrfs_alloc_path@@Base>
   13ada:	mov	r4, r0
   13adc:	cbz	r0, 13b3a <btrfs_punch_hole@@Base+0x76>
   13ade:	ldrd	r2, r3, [sp, #72]	; 0x48
   13ae2:	movs	r0, #0
   13ae4:	ldr	r1, [sp, #36]	; 0x24
   13ae6:	str	r0, [sp, #24]
   13ae8:	strd	r2, r3, [sp, #8]
   13aec:	mov	r2, r4
   13aee:	strd	r8, r9, [sp, #16]
   13af2:	strd	r5, r7, [sp]
   13af6:	bl	13938 <btrfs_get_extent@@Base>
   13afa:	subs	r6, r0, #0
   13afc:	blt.n	13b26 <btrfs_punch_hole@@Base+0x62>
   13afe:	beq.n	13b34 <btrfs_punch_hole@@Base+0x70>
   13b00:	movs	r2, #0
   13b02:	movs	r3, #0
   13b04:	strd	r2, r3, [sp, #16]
   13b08:	mov	r0, sl
   13b0a:	strd	r2, r3, [sp, #8]
   13b0e:	ldrd	r2, r3, [sp, #72]	; 0x48
   13b12:	ldr	r1, [sp, #36]	; 0x24
   13b14:	strd	r8, r9, [sp, #24]
   13b18:	strd	r2, r3, [sp]
   13b1c:	mov	r2, r5
   13b1e:	mov	r3, r7
   13b20:	bl	31552 <btrfs_insert_file_extent@@Base>
   13b24:	mov	r6, r0
   13b26:	mov	r0, r4
   13b28:	bl	1b302 <btrfs_free_path@@Base>
   13b2c:	mov	r0, r6
   13b2e:	add	sp, #40	; 0x28
   13b30:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13b34:	mvn.w	r6, #16
   13b38:	b.n	13b26 <btrfs_punch_hole@@Base+0x62>
   13b3a:	mvn.w	r6, #11
   13b3e:	b.n	13b2c <btrfs_punch_hole@@Base+0x68>

00013b40 <btrfs_read_file@@Base>:
   13b40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b44:	mov	r6, r0
   13b46:	vpush	{d8}
   13b4a:	sub	sp, #180	; 0xb4
   13b4c:	ldr.w	r8, [r0, #464]	; 0x1d0
   13b50:	strd	r2, r3, [sp, #8]
   13b54:	ldr	r3, [sp, #236]	; 0xec
   13b56:	ldr	r2, [pc, #856]	; (13eb0 <btrfs_read_file@@Base+0x370>)
   13b58:	ldr.w	r4, [r8, #388]	; 0x184
   13b5c:	vmov	s16, r3
   13b60:	ldr	r3, [pc, #848]	; (13eb4 <btrfs_read_file@@Base+0x374>)
   13b62:	add	r2, pc
   13b64:	ldrd	sl, fp, [sp, #224]	; 0xe0
   13b68:	ldr	r3, [r2, r3]
   13b6a:	movs	r2, #0
   13b6c:	ldr	r3, [r3, #0]
   13b6e:	str	r3, [sp, #172]	; 0xac
   13b70:	mov.w	r3, #0
   13b74:	ldr.w	r3, [r8, #308]	; 0x134
   13b78:	ldr.w	r3, [r3, #188]	; 0xbc
   13b7c:	str	r3, [sp, #68]	; 0x44
   13b7e:	adds.w	r3, r4, #4294967295	; 0xffffffff
   13b82:	adc.w	r2, r2, #4294967295	; 0xffffffff
   13b86:	and.w	r0, r3, sl
   13b8a:	and.w	r1, r2, fp
   13b8e:	orrs.w	r3, r0, r1
   13b92:	bne.n	13b9c <btrfs_read_file@@Base+0x5c>
   13b94:	ldr	r3, [sp, #232]	; 0xe8
   13b96:	subs	r5, r4, #1
   13b98:	ands	r5, r3
   13b9a:	beq.n	13bc4 <btrfs_read_file@@Base+0x84>
   13b9c:	ldr	r2, [pc, #792]	; (13eb8 <btrfs_read_file@@Base+0x378>)
   13b9e:	mov	r1, r4
   13ba0:	ldr	r0, [pc, #792]	; (13ebc <btrfs_read_file@@Base+0x37c>)
   13ba2:	mvn.w	r4, #21
   13ba6:	add	r2, pc
   13ba8:	add	r0, pc
   13baa:	bl	1a884 <__btrfs_warning@@Base>
   13bae:	ldr	r2, [pc, #784]	; (13ec0 <btrfs_read_file@@Base+0x380>)
   13bb0:	ldr	r3, [pc, #768]	; (13eb4 <btrfs_read_file@@Base+0x374>)
   13bb2:	add	r2, pc
   13bb4:	ldr	r3, [r2, r3]
   13bb6:	ldr	r2, [r3, #0]
   13bb8:	ldr	r3, [sp, #172]	; 0xac
   13bba:	eors	r2, r3
   13bbc:	beq.w	13ea2 <btrfs_read_file@@Base+0x362>
   13bc0:	blx	88e4 <__stack_chk_fail@plt>
   13bc4:	add.w	r9, sp, #104	; 0x68
   13bc8:	movs	r7, #108	; 0x6c
   13bca:	mov	r0, r9
   13bcc:	bl	1b2cc <btrfs_init_path@@Base>
   13bd0:	ldr	r3, [sp, #8]
   13bd2:	add	r2, sp, #84	; 0x54
   13bd4:	mov	r1, r6
   13bd6:	mov	r0, r5
   13bd8:	strd	r5, r5, [sp]
   13bdc:	str	r3, [sp, #84]	; 0x54
   13bde:	ldr	r3, [sp, #12]
   13be0:	str.w	sl, [sp, #93]	; 0x5d
   13be4:	str.w	fp, [sp, #97]	; 0x61
   13be8:	str	r3, [sp, #88]	; 0x58
   13bea:	mov	r3, r9
   13bec:	strb.w	r7, [sp, #92]	; 0x5c
   13bf0:	bl	1d6c0 <btrfs_search_slot@@Base>
   13bf4:	subs	r4, r0, #0
   13bf6:	blt.w	13d8c <btrfs_read_file@@Base+0x24c>
   13bfa:	beq.n	13c10 <btrfs_read_file@@Base+0xd0>
   13bfc:	ldrd	r2, r3, [sp, #8]
   13c00:	mov	r1, r9
   13c02:	mov	r0, r6
   13c04:	str	r7, [sp, #0]
   13c06:	bl	1ed78 <btrfs_previous_item@@Base>
   13c0a:	subs	r4, r0, #0
   13c0c:	bgt.w	13e9c <btrfs_read_file@@Base+0x35c>
   13c10:	ldr	r2, [sp, #232]	; 0xe8
   13c12:	movs	r1, #0
   13c14:	vmov	r0, s16
   13c18:	movs	r5, #0
   13c1a:	blx	8bf8 <memset@plt+0x4>
   13c1e:	ldr	r3, [sp, #232]	; 0xe8
   13c20:	adds.w	r2, sl, r3
   13c24:	adc.w	r3, fp, r3, asr #31
   13c28:	strd	r2, r3, [sp, #40]	; 0x28
   13c2c:	ldr	r7, [sp, #136]	; 0x88
   13c2e:	add	r1, sp, #84	; 0x54
   13c30:	ldr	r0, [sp, #104]	; 0x68
   13c32:	mov	r2, r7
   13c34:	str	r0, [sp, #52]	; 0x34
   13c36:	bl	138d0 <btrfs_mksubvol@@Base+0x370>
   13c3a:	ldrd	r2, r3, [sp, #84]	; 0x54
   13c3e:	ldrd	r0, r1, [sp, #8]
   13c42:	cmp	r1, r3
   13c44:	it	eq
   13c46:	cmpeq	r0, r2
   13c48:	bcc.n	13cdc <btrfs_read_file@@Base+0x19c>
   13c4a:	ldrb.w	r1, [sp, #92]	; 0x5c
   13c4e:	cmp	r1, #108	; 0x6c
   13c50:	bne.w	13e0e <btrfs_read_file@@Base+0x2ce>
   13c54:	ldrd	r0, r1, [sp, #8]
   13c58:	cmp	r3, r1
   13c5a:	it	eq
   13c5c:	cmpeq	r2, r0
   13c5e:	bne.w	13e0e <btrfs_read_file@@Base+0x2ce>
   13c62:	ldrd	r0, r1, [sp, #40]	; 0x28
   13c66:	ldr.w	r3, [sp, #97]	; 0x61
   13c6a:	ldr.w	r2, [sp, #93]	; 0x5d
   13c6e:	cmp	r3, r1
   13c70:	it	eq
   13c72:	cmpeq	r2, r0
   13c74:	bcs.n	13cdc <btrfs_read_file@@Base+0x19c>
   13c76:	ldr	r0, [sp, #52]	; 0x34
   13c78:	movs	r1, #25
   13c7a:	add.w	ip, r0, #96	; 0x60
   13c7e:	mla	r7, r1, r7, ip
   13c82:	ldr.w	r1, [r7, #118]	; 0x76
   13c86:	add.w	r7, r1, #101	; 0x65
   13c8a:	add	ip, r7
   13c8c:	str	r1, [sp, #52]	; 0x34
   13c8e:	ldrb.w	r7, [ip, #16]
   13c92:	cmp	r7, #0
   13c94:	bne.w	13e96 <btrfs_read_file@@Base+0x356>
   13c98:	ldrb.w	r7, [ip, #20]
   13c9c:	cmp	r7, #0
   13c9e:	bne.n	13d9a <btrfs_read_file@@Base+0x25a>
   13ca0:	ldr.w	r7, [ip, #8]
   13ca4:	ldr.w	lr, [ip, #12]
   13ca8:	adds	r1, r2, r7
   13caa:	str	r1, [sp, #56]	; 0x38
   13cac:	adc.w	r3, r3, lr
   13cb0:	str	r3, [sp, #60]	; 0x3c
   13cb2:	ldrd	r2, r3, [sp, #56]	; 0x38
   13cb6:	cmp	fp, r3
   13cb8:	it	eq
   13cba:	cmpeq	sl, r2
   13cbc:	bcs.w	13e0e <btrfs_read_file@@Base+0x2ce>
   13cc0:	ldr	r2, [sp, #52]	; 0x34
   13cc2:	mov	r3, r7
   13cc4:	vmov	r1, s16
   13cc8:	subs	r7, #1
   13cca:	adds	r2, #122	; 0x7a
   13ccc:	adds	r5, #1
   13cce:	bl	1a79e <read_extent_buffer@@Base>
   13cd2:	ldr.w	r3, [r8, #388]	; 0x184
   13cd6:	subs	r3, #1
   13cd8:	orrs	r3, r7
   13cda:	add	r5, r3
   13cdc:	ldr	r1, [sp, #68]	; 0x44
   13cde:	movs	r7, #0
   13ce0:	mov	r3, r7
   13ce2:	and.w	r2, r1, #512	; 0x200
   13ce6:	orrs	r3, r2
   13ce8:	beq.n	13d8c <btrfs_read_file@@Base+0x24c>
   13cea:	mov	r0, r9
   13cec:	bl	1b2dc <btrfs_release_path@@Base>
   13cf0:	ldr	r3, [sp, #8]
   13cf2:	mov	r2, r9
   13cf4:	mov	r1, r6
   13cf6:	mov	r0, r7
   13cf8:	str	r7, [sp, #0]
   13cfa:	str	r3, [sp, #84]	; 0x54
   13cfc:	ldr	r3, [sp, #12]
   13cfe:	strb.w	r7, [sp, #93]	; 0x5d
   13d02:	strb.w	r7, [sp, #94]	; 0x5e
   13d06:	str	r3, [sp, #88]	; 0x58
   13d08:	movs	r3, #1
   13d0a:	strb.w	r3, [sp, #92]	; 0x5c
   13d0e:	add	r3, sp, #84	; 0x54
   13d10:	strb.w	r7, [sp, #95]	; 0x5f
   13d14:	strb.w	r7, [sp, #96]	; 0x60
   13d18:	strb.w	r7, [sp, #97]	; 0x61
   13d1c:	strb.w	r7, [sp, #98]	; 0x62
   13d20:	strb.w	r7, [sp, #99]	; 0x63
   13d24:	strb.w	r7, [sp, #100]	; 0x64
   13d28:	bl	30c48 <btrfs_lookup_inode@@Base>
   13d2c:	subs	r4, r0, #0
   13d2e:	blt.n	13d8c <btrfs_read_file@@Base+0x24c>
   13d30:	bne.w	13e9c <btrfs_read_file@@Base+0x35c>
   13d34:	ldr	r3, [sp, #104]	; 0x68
   13d36:	movs	r1, #25
   13d38:	ldr	r2, [sp, #136]	; 0x88
   13d3a:	adds	r3, #96	; 0x60
   13d3c:	ldr.w	r5, [r8, #388]	; 0x184
   13d40:	mla	r2, r1, r2, r3
   13d44:	subs	r5, #1
   13d46:	ldr.w	r2, [r2, #118]	; 0x76
   13d4a:	add	r3, r2
   13d4c:	ldr.w	r2, [r3, #117]!
   13d50:	adds.w	r2, r2, #4294967295	; 0xffffffff
   13d54:	ldr	r1, [r3, #4]
   13d56:	ldr	r3, [sp, #232]	; 0xe8
   13d58:	adc.w	r0, r1, #4294967295	; 0xffffffff
   13d5c:	orr.w	r1, r2, r5
   13d60:	subs.w	r1, r1, sl
   13d64:	sbc.w	r0, r0, fp
   13d68:	adds	r1, #1
   13d6a:	str	r1, [sp, #32]
   13d6c:	adc.w	r1, r0, r7
   13d70:	str	r1, [sp, #36]	; 0x24
   13d72:	asrs	r6, r3, #31
   13d74:	ldrd	r0, r1, [sp, #32]
   13d78:	mov	r5, r3
   13d7a:	mov	r2, r3
   13d7c:	mov	r3, r6
   13d7e:	cmp	r6, r1
   13d80:	it	eq
   13d82:	cmpeq	r5, r0
   13d84:	it	cc
   13d86:	strdcc	r2, r3, [sp, #32]
   13d8a:	ldr	r5, [sp, #32]
   13d8c:	add	r0, sp, #104	; 0x68
   13d8e:	cmp	r4, #0
   13d90:	it	eq
   13d92:	moveq	r4, r5
   13d94:	bl	1b2dc <btrfs_release_path@@Base>
   13d98:	b.n	13bae <btrfs_read_file@@Base+0x6e>
   13d9a:	mov	r0, ip
   13d9c:	ldr.w	r1, [r0, #45]!
   13da0:	adds	r1, r1, r2
   13da2:	str	r1, [sp, #16]
   13da4:	ldr	r4, [r0, #4]
   13da6:	adc.w	r1, r4, r3
   13daa:	str	r1, [sp, #20]
   13dac:	ldrd	r0, r1, [sp, #16]
   13db0:	cmp	fp, r1
   13db2:	it	eq
   13db4:	cmpeq	sl, r0
   13db6:	bcs.n	13e0e <btrfs_read_file@@Base+0x2ce>
   13db8:	cmp	fp, r3
   13dba:	mov	r0, fp
   13dbc:	it	eq
   13dbe:	cmpeq	sl, r2
   13dc0:	mov	lr, sl
   13dc2:	it	cc
   13dc4:	movcc	r0, r3
   13dc6:	ldr	r3, [sp, #40]	; 0x28
   13dc8:	it	cc
   13dca:	movcc	lr, r2
   13dcc:	ldrd	r1, r2, [sp, #40]	; 0x28
   13dd0:	str	r3, [sp, #52]	; 0x34
   13dd2:	ldr	r3, [sp, #44]	; 0x2c
   13dd4:	str	r3, [sp, #64]	; 0x40
   13dd6:	ldrd	r3, r4, [sp, #16]
   13dda:	cmp	r4, r2
   13ddc:	it	eq
   13dde:	cmpeq	r3, r1
   13de0:	itttt	cc
   13de2:	ldrcc	r3, [sp, #16]
   13de4:	strcc	r3, [sp, #52]	; 0x34
   13de6:	ldrcc	r3, [sp, #20]
   13de8:	strcc	r3, [sp, #64]	; 0x40
   13dea:	ldr	r3, [sp, #52]	; 0x34
   13dec:	subs.w	r3, r3, lr
   13df0:	str	r3, [sp, #24]
   13df2:	ldr	r3, [sp, #64]	; 0x40
   13df4:	sbc.w	r3, r3, r0
   13df8:	cmp	r7, #2
   13dfa:	str	r3, [sp, #28]
   13dfc:	beq.n	13e0a <btrfs_read_file@@Base+0x2ca>
   13dfe:	mov	r0, ip
   13e00:	ldr.w	r2, [r0, #29]!
   13e04:	ldr	r3, [r0, #4]
   13e06:	orrs	r3, r2
   13e08:	bne.n	13e38 <btrfs_read_file@@Base+0x2f8>
   13e0a:	ldr	r3, [sp, #24]
   13e0c:	add	r5, r3
   13e0e:	ldr	r2, [sp, #104]	; 0x68
   13e10:	movs	r7, #0
   13e12:	ldr	r3, [sp, #136]	; 0x88
   13e14:	adds	r3, #1
   13e16:	str	r3, [sp, #136]	; 0x88
   13e18:	ldr.w	r2, [r2, #192]	; 0xc0
   13e1c:	cmp	r3, r2
   13e1e:	bcc.n	13e92 <btrfs_read_file@@Base+0x352>
   13e20:	ldr.w	r0, [r6, #464]	; 0x1d0
   13e24:	add	r1, sp, #104	; 0x68
   13e26:	strb.w	r7, [sp, #169]	; 0xa9
   13e2a:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   13e2e:	subs	r4, r0, #0
   13e30:	ble.w	13c2c <btrfs_read_file@@Base+0xec>
   13e34:	mov	r4, r7
   13e36:	b.n	13cdc <btrfs_read_file@@Base+0x19c>
   13e38:	mov	r3, ip
   13e3a:	ldr.w	r4, [ip, #21]!
   13e3e:	ldr.w	r2, [r3, #37]!
   13e42:	movs	r7, #0
   13e44:	str	r2, [sp, #52]	; 0x34
   13e46:	ldrd	r1, r2, [sp, #24]
   13e4a:	ldr	r0, [r3, #4]
   13e4c:	ldr.w	r3, [ip, #4]
   13e50:	strd	r1, r2, [sp, #72]	; 0x48
   13e54:	sub.w	r1, lr, sl
   13e58:	ldr	r2, [sp, #52]	; 0x34
   13e5a:	str	r7, [sp, #4]
   13e5c:	add	r7, sp, #72	; 0x48
   13e5e:	adds	r2, r2, r4
   13e60:	str	r7, [sp, #0]
   13e62:	adc.w	r3, r0, r3
   13e66:	vmov	r0, s16
   13e6a:	add	r1, r0
   13e6c:	mov	r0, r8
   13e6e:	bl	1f830 <read_extent_data@@Base>
   13e72:	subs	r4, r0, #0
   13e74:	blt.w	13cdc <btrfs_read_file@@Base+0x19c>
   13e78:	ldrd	r2, r3, [sp, #72]	; 0x48
   13e7c:	ldrd	r0, r1, [sp, #24]
   13e80:	cmp	r3, r1
   13e82:	it	eq
   13e84:	cmpeq	r2, r0
   13e86:	beq.n	13e8e <btrfs_read_file@@Base+0x34e>
   13e88:	mvn.w	r4, #4
   13e8c:	b.n	13bae <btrfs_read_file@@Base+0x6e>
   13e8e:	add	r5, r2
   13e90:	b.n	13e0e <btrfs_read_file@@Base+0x2ce>
   13e92:	mov	r4, r7
   13e94:	b.n	13c2c <btrfs_read_file@@Base+0xec>
   13e96:	mvn.w	r4, #24
   13e9a:	b.n	13cdc <btrfs_read_file@@Base+0x19c>
   13e9c:	mvn.w	r4, #1
   13ea0:	b.n	13d8c <btrfs_read_file@@Base+0x24c>
   13ea2:	mov	r0, r4
   13ea4:	add	sp, #180	; 0xb4
   13ea6:	vpop	{d8}
   13eaa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13eae:	nop
   13eb0:	str	r6, [r1, r7]
   13eb2:	movs	r5, r0
   13eb4:	lsls	r4, r7, #9
   13eb6:	movs	r0, r0
   13eb8:	push	{r4, r6, lr}
   13eba:	movs	r2, r0
   13ebc:	push	{r3, r4, lr}
   13ebe:	movs	r2, r0
   13ec0:	str	r6, [r7, r5]
   13ec2:	movs	r5, r0

00013ec4 <btrfs_find_root_search@@Base>:
   13ec4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ec8:	sub	sp, #180	; 0xb4
   13eca:	mov	sl, r2
   13ecc:	ldr	r2, [pc, #644]	; (14154 <btrfs_find_root_search@@Base+0x290>)
   13ece:	str	r3, [sp, #56]	; 0x38
   13ed0:	mov	r7, r1
   13ed2:	ldr	r3, [pc, #644]	; (14158 <btrfs_find_root_search@@Base+0x294>)
   13ed4:	add	r2, pc
   13ed6:	movs	r1, #0
   13ed8:	mov	r6, r0
   13eda:	add	r3, pc
   13edc:	str	r3, [sp, #60]	; 0x3c
   13ede:	ldr	r3, [pc, #636]	; (1415c <btrfs_find_root_search@@Base+0x298>)
   13ee0:	ldr	r3, [r2, r3]
   13ee2:	ldr	r3, [r3, #0]
   13ee4:	str	r3, [sp, #172]	; 0xac
   13ee6:	mov.w	r3, #0
   13eea:	ldr.w	r3, [r0, #308]	; 0x134
   13eee:	strd	r1, r1, [sp, #88]	; 0x58
   13ef2:	strd	r1, r1, [sp, #96]	; 0x60
   13ef6:	ldr.w	r3, [r3, #148]	; 0x94
   13efa:	strd	r1, r1, [sp, #36]	; 0x24
   13efe:	strd	r1, r1, [sp, #80]	; 0x50
   13f02:	str	r3, [sp, #44]	; 0x2c
   13f04:	ldrb.w	r3, [r0, #364]	; 0x16c
   13f08:	ubfx	r0, r3, #5, #1
   13f0c:	orr.w	r3, r3, #32
   13f10:	str	r0, [sp, #72]	; 0x48
   13f12:	strb.w	r3, [r6, #364]	; 0x16c
   13f16:	ldrd	r2, r3, [r7]
   13f1a:	add	r1, sp, #88	; 0x58
   13f1c:	mov	r0, r6
   13f1e:	cmp	r3, #0
   13f20:	it	eq
   13f22:	cmpeq	r2, #3
   13f24:	add	r2, sp, #96	; 0x60
   13f26:	ittee	ne
   13f28:	movne	r4, #4
   13f2a:	movne	r5, #0
   13f2c:	moveq	r3, #2
   13f2e:	moveq	r4, #0
   13f30:	ite	ne
   13f32:	strdne	r4, r5, [sp]
   13f36:	strdeq	r3, r4, [sp]
   13f3a:	bl	2cb24 <btrfs_next_bg@@Base>
   13f3e:	cbz	r0, 13f6c <btrfs_find_root_search@@Base+0xa8>
   13f40:	adds	r3, r0, #2
   13f42:	ite	ne
   13f44:	movne	r4, r0
   13f46:	moveq	r4, #0
   13f48:	ldrb.w	r3, [r6, #364]	; 0x16c
   13f4c:	ldr	r2, [sp, #72]	; 0x48
   13f4e:	bfi	r3, r2, #5, #1
   13f52:	ldr	r2, [pc, #524]	; (14160 <btrfs_find_root_search@@Base+0x29c>)
   13f54:	strb.w	r3, [r6, #364]	; 0x16c
   13f58:	ldr	r3, [pc, #512]	; (1415c <btrfs_find_root_search@@Base+0x298>)
   13f5a:	add	r2, pc
   13f5c:	ldr	r3, [r2, r3]
   13f5e:	ldr	r2, [r3, #0]
   13f60:	ldr	r3, [sp, #172]	; 0xac
   13f62:	eors	r2, r3
   13f64:	beq.w	1414c <btrfs_find_root_search@@Base+0x288>
   13f68:	blx	88e4 <__stack_chk_fail@plt>
   13f6c:	ldrd	r3, r4, [sp, #88]	; 0x58
   13f70:	strd	r3, r4, [sp, #24]
   13f74:	ldr	r3, [sp, #44]	; 0x2c
   13f76:	str	r3, [sp, #76]	; 0x4c
   13f78:	ldr	r2, [sp, #96]	; 0x60
   13f7a:	ldr	r3, [sp, #88]	; 0x58
   13f7c:	adds	r3, r3, r2
   13f7e:	ldr	r2, [sp, #92]	; 0x5c
   13f80:	str	r3, [sp, #64]	; 0x40
   13f82:	ldr	r3, [sp, #100]	; 0x64
   13f84:	adc.w	r3, r2, r3
   13f88:	str	r3, [sp, #68]	; 0x44
   13f8a:	ldrd	r1, r2, [sp, #64]	; 0x40
   13f8e:	ldrd	r3, r4, [sp, #24]
   13f92:	cmp	r4, r2
   13f94:	it	eq
   13f96:	cmpeq	r3, r1
   13f98:	bcs.n	13f16 <btrfs_find_root_search@@Base+0x52>
   13f9a:	ldr	r3, [sp, #80]	; 0x50
   13f9c:	mov	r0, r6
   13f9e:	str	r3, [sp, #0]
   13fa0:	ldr	r3, [sp, #84]	; 0x54
   13fa2:	str	r3, [sp, #4]
   13fa4:	ldrd	r2, r3, [sp, #24]
   13fa8:	bl	20b0c <read_tree_block@@Base>
   13fac:	mov	r5, r0
   13fae:	cbnz	r0, 13fc2 <btrfs_find_root_search@@Base+0xfe>
   13fb0:	ldr	r3, [sp, #24]
   13fb2:	ldr	r2, [sp, #76]	; 0x4c
   13fb4:	adds	r3, r3, r2
   13fb6:	str	r3, [sp, #24]
   13fb8:	ldr	r3, [sp, #28]
   13fba:	adc.w	r3, r3, #0
   13fbe:	str	r3, [sp, #28]
   13fc0:	b.n	13f78 <btrfs_find_root_search@@Base+0xb4>
   13fc2:	cmn.w	r0, #4096	; 0x1000
   13fc6:	bhi.n	13fb0 <btrfs_find_root_search@@Base+0xec>
   13fc8:	ldrd	r2, r3, [r7]
   13fcc:	ldr.w	r1, [r5, #188]	; 0xbc
   13fd0:	ldr.w	r0, [r0, #184]	; 0xb8
   13fd4:	cmp	r1, r3
   13fd6:	it	eq
   13fd8:	cmpeq	r0, r2
   13fda:	bne.w	14148 <btrfs_find_root_search@@Base+0x284>
   13fde:	ldrb.w	r3, [r5, #196]	; 0xc4
   13fe2:	str	r3, [sp, #32]
   13fe4:	ldr	r2, [sp, #32]
   13fe6:	ldrb	r3, [r7, #16]
   13fe8:	cmp	r3, r2
   13fea:	bhi.w	14148 <btrfs_find_root_search@@Base+0x284>
   13fee:	ldr.w	r3, [r5, #176]	; 0xb0
   13ff2:	str	r3, [sp, #16]
   13ff4:	ldr.w	r3, [r5, #180]	; 0xb4
   13ff8:	str	r3, [sp, #20]
   13ffa:	ldrd	r0, r1, [sp, #16]
   13ffe:	ldrd	r2, r3, [r7, #8]
   14002:	cmp	r1, r3
   14004:	it	eq
   14006:	cmpeq	r0, r2
   14008:	bcc.w	14148 <btrfs_find_root_search@@Base+0x284>
   1400c:	ldrd	r3, r4, [r5, #40]	; 0x28
   14010:	mov	r2, r0
   14012:	mov	r0, sl
   14014:	strd	r3, r4, [sp, #48]	; 0x30
   14018:	mov	r3, r1
   1401a:	bl	19460 <search_cache_extent@@Base>
   1401e:	mov	fp, r0
   14020:	cbz	r0, 14032 <btrfs_find_root_search@@Base+0x16e>
   14022:	ldrd	r2, r3, [r0, #24]
   14026:	ldrd	r0, r1, [sp, #16]
   1402a:	cmp	r1, r3
   1402c:	it	eq
   1402e:	cmpeq	r0, r2
   14030:	beq.n	140c4 <btrfs_find_root_search@@Base+0x200>
   14032:	movs	r0, #56	; 0x38
   14034:	blx	8a94 <malloc@plt+0x4>
   14038:	cbnz	r0, 1407a <btrfs_find_root_search@@Base+0x1b6>
   1403a:	ldr	r2, [sp, #60]	; 0x3c
   1403c:	add	r4, sp, #108	; 0x6c
   1403e:	ldr	r3, [pc, #292]	; (14164 <btrfs_find_root_search@@Base+0x2a0>)
   14040:	movs	r1, #1
   14042:	ldr	r0, [r2, r3]
   14044:	ldr	r3, [pc, #288]	; (14168 <btrfs_find_root_search@@Base+0x2a4>)
   14046:	ldr	r2, [pc, #292]	; (1416c <btrfs_find_root_search@@Base+0x2a8>)
   14048:	add	r3, pc
   1404a:	str	r3, [sp, #8]
   1404c:	ldr	r3, [pc, #288]	; (14170 <btrfs_find_root_search@@Base+0x2ac>)
   1404e:	add	r2, pc
   14050:	str	r1, [sp, #12]
   14052:	add	r3, pc
   14054:	str	r3, [sp, #4]
   14056:	movs	r3, #58	; 0x3a
   14058:	str	r3, [sp, #0]
   1405a:	ldr	r3, [pc, #280]	; (14174 <btrfs_find_root_search@@Base+0x2b0>)
   1405c:	ldr	r0, [r0, #0]
   1405e:	add	r3, pc
   14060:	blx	8ca0 <__fprintf_chk@plt+0x4>
   14064:	movs	r1, #16
   14066:	mov	r0, r4
   14068:	blx	8ae0 <backtrace@plt>
   1406c:	movs	r2, #2
   1406e:	mov	r1, r0
   14070:	mov	r0, r4
   14072:	blx	8e50 <backtrace_symbols_fd@plt>
   14076:	blx	8e08 <abort@plt>
   1407a:	ldrd	r3, r4, [sp, #16]
   1407e:	mov	fp, r0
   14080:	adds	r0, #48	; 0x30
   14082:	strd	r3, r4, [r0, #-24]
   14086:	movs	r3, #1
   14088:	movs	r4, #0
   1408a:	strd	r3, r4, [r0, #-16]
   1408e:	ldr	r3, [sp, #36]	; 0x24
   14090:	str.w	r3, [r0, #-32]
   14094:	ldr	r3, [sp, #40]	; 0x28
   14096:	str.w	r3, [r0, #-28]
   1409a:	ldr	r3, [sp, #36]	; 0x24
   1409c:	str.w	r3, [r0, #-8]
   140a0:	ldr	r3, [sp, #40]	; 0x28
   140a2:	str.w	r3, [r0, #-4]
   140a6:	bl	19318 <cache_tree_init@@Base>
   140aa:	mov	r1, fp
   140ac:	mov	r0, sl
   140ae:	bl	1931e <insert_cache_extent@@Base>
   140b2:	subs	r4, r0, #0
   140b4:	bge.n	140c6 <btrfs_find_root_search@@Base+0x202>
   140b6:	mov	r0, r5
   140b8:	bl	1a0a4 <free_extent_buffer@@Base>
   140bc:	cmp	r4, #0
   140be:	beq.w	13fb0 <btrfs_find_root_search@@Base+0xec>
   140c2:	b.n	13f48 <btrfs_find_root_search@@Base+0x84>
   140c4:	movs	r4, #0
   140c6:	ldrd	r2, r3, [fp, #40]	; 0x28
   140ca:	mov.w	r9, #0
   140ce:	ldrb.w	r8, [sp, #32]
   140d2:	cmp	r3, r9
   140d4:	it	eq
   140d6:	cmpeq	r2, r8
   140d8:	bcs.n	1410a <btrfs_find_root_search@@Base+0x246>
   140da:	add.w	r0, fp, #48	; 0x30
   140de:	bl	19562 <free_extent_cache_tree@@Base>
   140e2:	strd	r8, r9, [fp, #40]	; 0x28
   140e6:	ldr	r3, [sp, #44]	; 0x2c
   140e8:	add.w	r0, fp, #48	; 0x30
   140ec:	mov.w	r8, #0
   140f0:	strd	r3, r8, [sp]
   140f4:	ldrd	r2, r3, [sp, #48]	; 0x30
   140f8:	bl	1932c <add_cache_extent@@Base>
   140fc:	subs	r4, r0, #0
   140fe:	bge.n	14106 <btrfs_find_root_search@@Base+0x242>
   14100:	cmn.w	r4, #17
   14104:	bne.n	140b6 <btrfs_find_root_search@@Base+0x1f2>
   14106:	mov	r4, r8
   14108:	b.n	14112 <btrfs_find_root_search@@Base+0x24e>
   1410a:	cmp	r9, r3
   1410c:	it	eq
   1410e:	cmpeq	r8, r2
   14110:	beq.n	140e6 <btrfs_find_root_search@@Base+0x222>
   14112:	ldrd	r2, r3, [r7, #24]
   14116:	ldrd	r0, r1, [sp, #16]
   1411a:	cmp	r1, r3
   1411c:	it	eq
   1411e:	cmpeq	r0, r2
   14120:	bne.n	140b6 <btrfs_find_root_search@@Base+0x1f2>
   14122:	ldrb	r3, [r7, #17]
   14124:	ldr	r2, [sp, #32]
   14126:	cmp	r3, r2
   14128:	bne.n	140b6 <btrfs_find_root_search@@Base+0x1f2>
   1412a:	ldr	r3, [r7, #32]
   1412c:	cmp	r3, #0
   1412e:	bne.n	140b6 <btrfs_find_root_search@@Base+0x1f2>
   14130:	ldr	r3, [sp, #56]	; 0x38
   14132:	cbz	r3, 14144 <btrfs_find_root_search@@Base+0x280>
   14134:	ldrd	r2, r3, [sp, #48]	; 0x30
   14138:	add.w	r0, fp, #48	; 0x30
   1413c:	bl	19460 <search_cache_extent@@Base>
   14140:	ldr	r3, [sp, #56]	; 0x38
   14142:	str	r0, [r3, #0]
   14144:	movs	r4, #1
   14146:	b.n	140b6 <btrfs_find_root_search@@Base+0x1f2>
   14148:	movs	r4, #0
   1414a:	b.n	140b6 <btrfs_find_root_search@@Base+0x1f2>
   1414c:	mov	r0, r4
   1414e:	add	sp, #180	; 0xb4
   14150:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14154:	ldr	r6, [pc, #368]	; (142c8 <btrfs_find_root_search@@Base+0x404>)
   14156:	movs	r5, r0
   14158:	ldr	r6, [pc, #344]	; (142b4 <btrfs_find_root_search@@Base+0x3f0>)
   1415a:	movs	r5, r0
   1415c:	lsls	r4, r7, #9
   1415e:	movs	r0, r0
   14160:	ldr	r5, [pc, #856]	; (144bc <check_argc_exact@@Base+0x14>)
   14162:	movs	r5, r0
   14164:	lsls	r4, r1, #10
   14166:	movs	r0, r0
   14168:	sub	sp, #296	; 0x128
   1416a:	movs	r2, r0
   1416c:	ldrh	r1, [r3, #58]	; 0x3a
   1416e:	movs	r2, r0
   14170:	sub	sp, #300	; 0x12c
   14172:	movs	r2, r0
   14174:	sub	sp, #160	; 0xa0
   14176:	movs	r2, r0
   14178:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1417c:	sub	sp, #20
   1417e:	ldr	r7, [pc, #500]	; (14374 <btrfs_find_root_search@@Base+0x4b0>)
   14180:	mov	r5, r0
   14182:	ldrb.w	r8, [sp, #60]	; 0x3c
   14186:	mov	r6, r1
   14188:	add	r7, pc
   1418a:	str	r2, [sp, #8]
   1418c:	ldr	r4, [sp, #64]	; 0x40
   1418e:	eor.w	r8, r8, #1
   14192:	ldrb.w	r2, [sp, #56]	; 0x38
   14196:	cbz	r3, 1419c <btrfs_find_root_search@@Base+0x2d8>
   14198:	orr.w	r8, r8, #22
   1419c:	cbz	r2, 141a2 <btrfs_find_root_search@@Base+0x2de>
   1419e:	orr.w	r8, r8, #8
   141a2:	cmp	r5, #0
   141a4:	beq.w	14360 <btrfs_find_root_search@@Base+0x49c>
   141a8:	ldr	r3, [r5, #0]
   141aa:	cmp	r3, #0
   141ac:	beq.w	14360 <btrfs_find_root_search@@Base+0x49c>
   141b0:	ands.w	r9, r8, #8
   141b4:	beq.n	141e4 <btrfs_find_root_search@@Base+0x320>
   141b6:	ldr	r0, [pc, #448]	; (14378 <btrfs_find_root_search@@Base+0x4b4>)
   141b8:	add	r0, pc
   141ba:	mov	r1, r4
   141bc:	blx	8de4 <fputs@plt+0x4>
   141c0:	ldr.w	fp, [r5]
   141c4:	movs	r1, #10
   141c6:	mov	r0, fp
   141c8:	blx	8b7c <strchr@plt>
   141cc:	cbnz	r0, 141ea <btrfs_find_root_search@@Base+0x326>
   141ce:	mov	r1, r4
   141d0:	mov	r0, fp
   141d2:	blx	8de4 <fputs@plt+0x4>
   141d6:	tst.w	r8, #1
   141da:	bne.n	14222 <btrfs_find_root_search@@Base+0x35e>
   141dc:	movs	r0, #0
   141de:	add	sp, #20
   141e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141e4:	ldr	r0, [pc, #404]	; (1437c <btrfs_find_root_search@@Base+0x4b8>)
   141e6:	add	r0, pc
   141e8:	b.n	141ba <btrfs_find_root_search@@Base+0x2f6>
   141ea:	cmp.w	r9, #0
   141ee:	beq.n	1421a <btrfs_find_root_search@@Base+0x356>
   141f0:	ldr.w	sl, [pc, #396]	; 14380 <btrfs_find_root_search@@Base+0x4bc>
   141f4:	add	sl, pc
   141f6:	add.w	fp, fp, #4294967295	; 0xffffffff
   141fa:	ldrb.w	r0, [fp, #1]!
   141fe:	cmp	r0, #0
   14200:	beq.n	141d6 <btrfs_find_root_search@@Base+0x312>
   14202:	mov	r1, r4
   14204:	blx	8d34 <fputc@plt+0x4>
   14208:	ldrb.w	r3, [fp]
   1420c:	cmp	r3, #10
   1420e:	bne.n	141fa <btrfs_find_root_search@@Base+0x336>
   14210:	mov	r1, r4
   14212:	mov	r0, sl
   14214:	blx	8de4 <fputs@plt+0x4>
   14218:	b.n	141fa <btrfs_find_root_search@@Base+0x336>
   1421a:	ldr.w	sl, [pc, #360]	; 14384 <btrfs_find_root_search@@Base+0x4c0>
   1421e:	add	sl, pc
   14220:	b.n	141f6 <btrfs_find_root_search@@Base+0x332>
   14222:	ldr	r3, [r5, #4]
   14224:	cbnz	r3, 1423a <btrfs_find_root_search@@Base+0x376>
   14226:	ldr	r2, [pc, #352]	; (14388 <btrfs_find_root_search@@Base+0x4c4>)
   14228:	mov	r3, r6
   1422a:	movs	r1, #1
   1422c:	mov	r0, r4
   1422e:	add	r2, pc
   14230:	blx	8ca0 <__fprintf_chk@plt+0x4>
   14234:	mvn.w	r0, #1
   14238:	b.n	141de <btrfs_find_root_search@@Base+0x31a>
   1423a:	mov	r1, r4
   1423c:	movs	r0, #10
   1423e:	blx	8d34 <fputc@plt+0x4>
   14242:	cmp.w	r9, #0
   14246:	bne.n	14292 <btrfs_find_root_search@@Base+0x3ce>
   14248:	mov	r1, r4
   1424a:	movs	r0, #10
   1424c:	blx	8d34 <fputc@plt+0x4>
   14250:	movs	r6, #4
   14252:	ldr	r3, [r5, #4]
   14254:	movs	r1, #1
   14256:	ldr	r2, [pc, #308]	; (1438c <btrfs_find_root_search@@Base+0x4c8>)
   14258:	mov	r0, r4
   1425a:	str	r3, [sp, #4]
   1425c:	add	r2, pc
   1425e:	ldr	r3, [pc, #304]	; (14390 <btrfs_find_root_search@@Base+0x4cc>)
   14260:	add	r3, pc
   14262:	str	r3, [sp, #0]
   14264:	mov	r3, r6
   14266:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1426a:	ldr	r3, [r5, #8]
   1426c:	cmp	r3, #0
   1426e:	beq.n	141dc <btrfs_find_root_search@@Base+0x318>
   14270:	tst.w	r8, #2
   14274:	beq.n	141dc <btrfs_find_root_search@@Base+0x318>
   14276:	ldrb	r3, [r3, #0]
   14278:	cbz	r3, 14282 <btrfs_find_root_search@@Base+0x3be>
   1427a:	mov	r1, r4
   1427c:	movs	r0, #10
   1427e:	blx	8d34 <fputc@plt+0x4>
   14282:	ldr.w	fp, [pc, #272]	; 14394 <btrfs_find_root_search@@Base+0x4d0>
   14286:	adds	r5, #8
   14288:	ldr.w	sl, [pc, #268]	; 14398 <btrfs_find_root_search@@Base+0x4d4>
   1428c:	add	fp, pc
   1428e:	add	sl, pc
   14290:	b.n	142a8 <btrfs_find_root_search@@Base+0x3e4>
   14292:	movs	r6, #8
   14294:	b.n	14252 <btrfs_find_root_search@@Base+0x38e>
   14296:	strd	sl, r3, [sp]
   1429a:	mov	r2, fp
   1429c:	mov	r3, r6
   1429e:	movs	r1, #1
   142a0:	mov	r0, r4
   142a2:	mov	r5, r9
   142a4:	blx	8ca0 <__fprintf_chk@plt+0x4>
   142a8:	mov	r9, r5
   142aa:	ldr.w	r3, [r9], #4
   142ae:	cmp	r3, #0
   142b0:	beq.n	141dc <btrfs_find_root_search@@Base+0x318>
   142b2:	ldrb	r2, [r3, #0]
   142b4:	cmp	r2, #0
   142b6:	bne.n	14296 <btrfs_find_root_search@@Base+0x3d2>
   142b8:	tst.w	r8, #4
   142bc:	beq.n	141dc <btrfs_find_root_search@@Base+0x318>
   142be:	ldr.w	sl, [pc, #220]	; 1439c <btrfs_find_root_search@@Base+0x4d8>
   142c2:	mov	r1, r4
   142c4:	ldr.w	fp, [pc, #216]	; 143a0 <btrfs_find_root_search@@Base+0x4dc>
   142c8:	movs	r0, #10
   142ca:	blx	8d34 <fputc@plt+0x4>
   142ce:	add	sl, pc
   142d0:	ldr	r3, [pc, #208]	; (143a4 <btrfs_find_root_search@@Base+0x4e0>)
   142d2:	add	fp, pc
   142d4:	add	r3, pc
   142d6:	str	r3, [sp, #12]
   142d8:	ldr.w	r8, [r5, #4]!
   142dc:	cmp.w	r8, #0
   142e0:	beq.w	141dc <btrfs_find_root_search@@Base+0x318>
   142e4:	mov	r1, sl
   142e6:	mov	r0, r8
   142e8:	blx	8748 <strcmp@plt>
   142ec:	cbnz	r0, 1434a <btrfs_find_root_search@@Base+0x486>
   142ee:	mov	r1, r4
   142f0:	movs	r0, #10
   142f2:	blx	8d34 <fputc@plt+0x4>
   142f6:	ldr.w	r9, [pc, #176]	; 143a8 <btrfs_find_root_search@@Base+0x4e4>
   142fa:	ldr	r2, [pc, #176]	; (143ac <btrfs_find_root_search@@Base+0x4e8>)
   142fc:	mov	r3, r6
   142fe:	add	r9, pc
   14300:	movs	r1, #1
   14302:	add	r2, pc
   14304:	mov	r0, r4
   14306:	str.w	r9, [sp]
   1430a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1430e:	ldr	r3, [pc, #160]	; (143b0 <btrfs_find_root_search@@Base+0x4ec>)
   14310:	ldr	r2, [pc, #160]	; (143b4 <btrfs_find_root_search@@Base+0x4f0>)
   14312:	movs	r1, #1
   14314:	mov	r0, r4
   14316:	ldr.w	r8, [r7, r3]
   1431a:	add	r2, pc
   1431c:	add.w	r3, r8, #4
   14320:	strd	r9, r3, [sp]
   14324:	mov	r3, r6
   14326:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1432a:	ldr	r3, [sp, #8]
   1432c:	lsls	r3, r3, #28
   1432e:	bpl.n	14340 <btrfs_find_root_search@@Base+0x47c>
   14330:	ldr	r2, [pc, #132]	; (143b8 <btrfs_find_root_search@@Base+0x4f4>)
   14332:	add.w	r3, r8, #16
   14336:	movs	r1, #1
   14338:	mov	r0, r4
   1433a:	add	r2, pc
   1433c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   14340:	mov	r1, r4
   14342:	movs	r0, #10
   14344:	blx	8d34 <fputc@plt+0x4>
   14348:	b.n	142d8 <btrfs_find_root_search@@Base+0x414>
   1434a:	ldr	r3, [sp, #12]
   1434c:	mov	r2, fp
   1434e:	movs	r1, #1
   14350:	mov	r0, r4
   14352:	str.w	r8, [sp, #4]
   14356:	str	r3, [sp, #0]
   14358:	mov	r3, r6
   1435a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1435e:	b.n	142d8 <btrfs_find_root_search@@Base+0x414>
   14360:	ldr	r2, [pc, #88]	; (143bc <btrfs_find_root_search@@Base+0x4f8>)
   14362:	mov	r3, r6
   14364:	movs	r1, #1
   14366:	mov	r0, r4
   14368:	add	r2, pc
   1436a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1436e:	mov.w	r0, #4294967295	; 0xffffffff
   14372:	b.n	141de <btrfs_find_root_search@@Base+0x31a>
   14374:	ldr	r3, [pc, #672]	; (14618 <usage_command@@Base+0x3c>)
   14376:	movs	r5, r0
   14378:	add	r7, sp, #516	; 0x204
   1437a:	movs	r2, r0
   1437c:	add	r7, sp, #288	; 0x120
   1437e:	movs	r2, r0
   14380:	add	r7, sp, #276	; 0x114
   14382:	movs	r2, r0
   14384:	add	r7, sp, #96	; 0x60
   14386:	movs	r2, r0
   14388:	add	r7, sp, #64	; 0x40
   1438a:	movs	r2, r0
   1438c:	add	r7, sp, #4
   1438e:	movs	r2, r0
   14390:	add	r7, pc, #280	; (adr r7, 144ac <check_argc_exact@@Base+0x4>)
   14392:	movs	r2, r0
   14394:	add	r6, sp, #836	; 0x344
   14396:	movs	r2, r0
   14398:	add	r7, pc, #96	; (adr r7, 143fc <btrfs_find_root_search@@Base+0x538>)
   1439a:	movs	r2, r0
   1439c:	add	r6, sp, #600	; 0x258
   1439e:	movs	r2, r0
   143a0:	add	r6, sp, #556	; 0x22c
   143a2:	movs	r2, r0
   143a4:	add	r6, pc, #840	; (adr r6, 146f0 <usage@@Base+0x20>)
   143a6:	movs	r2, r0
   143a8:	add	r6, pc, #672	; (adr r6, 1464c <usage_unknown_option@@Base+0x24>)
   143aa:	movs	r2, r0
   143ac:	add	r6, sp, #452	; 0x1c4
   143ae:	movs	r2, r0
   143b0:	lsls	r4, r5, #10
   143b2:	movs	r0, r0
   143b4:	add	r6, sp, #436	; 0x1b4
   143b6:	movs	r2, r0
   143b8:	lsls	r3, r5, #6
   143ba:	movs	r3, r0
   143bc:	add	r6, sp, #284	; 0x11c
   143be:	movs	r2, r0
   143c0:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   143c4:	movs	r4, #0
   143c6:	add.w	r8, r0, #8
   143ca:	mov	r6, r1
   143cc:	mov	r7, r2
   143ce:	mov	r9, r4
   143d0:	mov.w	sl, #1
   143d4:	ldr.w	r5, [r8], #4
   143d8:	cbnz	r5, 143e0 <btrfs_find_root_search@@Base+0x51c>
   143da:	add	sp, #16
   143dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   143e0:	ldr	r3, [r5, #16]
   143e2:	lsls	r3, r3, #31
   143e4:	bmi.n	1442a <btrfs_find_root_search@@Base+0x566>
   143e6:	cbz	r6, 143f6 <btrfs_find_root_search@@Base+0x532>
   143e8:	cmp.w	r9, #0
   143ec:	beq.n	143f6 <btrfs_find_root_search@@Base+0x532>
   143ee:	mov	r1, r7
   143f0:	movs	r0, #10
   143f2:	blx	8d34 <fputc@plt+0x4>
   143f6:	ldr	r3, [r5, #12]
   143f8:	cbnz	r3, 14430 <btrfs_find_root_search@@Base+0x56c>
   143fa:	cbz	r4, 14404 <btrfs_find_root_search@@Base+0x540>
   143fc:	mov	r1, r7
   143fe:	movs	r0, #10
   14400:	blx	8d34 <fputc@plt+0x4>
   14404:	ldr	r2, [r5, #16]
   14406:	str	r7, [sp, #8]
   14408:	ubfx	r3, r2, #1, #1
   1440c:	strd	sl, r3, [sp]
   14410:	mov	r3, r6
   14412:	ldr	r1, [r5, #0]
   14414:	ldr	r0, [r5, #8]
   14416:	bl	14178 <btrfs_find_root_search@@Base+0x2b4>
   1441a:	ldr	r4, [r5, #16]
   1441c:	ands.w	r4, r4, #2
   14420:	beq.n	1442a <btrfs_find_root_search@@Base+0x566>
   14422:	movs	r0, #10
   14424:	movs	r4, #0
   14426:	blx	8c08 <putchar@plt+0x4>
   1442a:	add.w	r9, r9, #1
   1442e:	b.n	143d4 <btrfs_find_root_search@@Base+0x510>
   14430:	cbnz	r6, 14440 <btrfs_find_root_search@@Base+0x57c>
   14432:	cmp.w	r9, #0
   14436:	beq.n	14440 <btrfs_find_root_search@@Base+0x57c>
   14438:	mov	r1, r7
   1443a:	movs	r0, #10
   1443c:	blx	8d34 <fputc@plt+0x4>
   14440:	ldr	r0, [r5, #12]
   14442:	mov	r2, r7
   14444:	mov	r1, r6
   14446:	bl	143c0 <btrfs_find_root_search@@Base+0x4fc>
   1444a:	cmp	r6, #0
   1444c:	it	eq
   1444e:	moveq	r4, #1
   14450:	b.n	1442a <btrfs_find_root_search@@Base+0x566>

00014452 <fixup_argv0@@Base>:
   14452:	push	{r0, r1, r4, r5, r6, lr}
   14454:	mov	r4, r0
   14456:	ldr	r5, [pc, #40]	; (14480 <fixup_argv0@@Base+0x2e>)
   14458:	mov	r6, r1
   1445a:	add	r5, pc
   1445c:	mov	r0, r5
   1445e:	blx	8b70 <strlen@plt>
   14462:	ldr	r3, [pc, #32]	; (14484 <fixup_argv0@@Base+0x32>)
   14464:	movs	r2, #1
   14466:	str	r6, [sp, #4]
   14468:	add	r3, pc
   1446a:	str	r3, [sp, #0]
   1446c:	mov.w	r3, #4294967295	; 0xffffffff
   14470:	rsb	r1, r0, #4096	; 0x1000
   14474:	add	r0, r5
   14476:	blx	8e44 <__snprintf_chk@plt>
   1447a:	str	r5, [r4, #0]
   1447c:	add	sp, #8
   1447e:	pop	{r4, r5, r6, pc}
   14480:	ldr	r4, [pc, #456]	; (1464c <usage_unknown_option@@Base+0x24>)
   14482:	movs	r5, r0
   14484:	lsls	r6, r7, #1
   14486:	movs	r3, r0

00014488 <set_argv0@@Base>:
   14488:	push	{r3, lr}
   1448a:	mov.w	r2, #4096	; 0x1000
   1448e:	ldr	r3, [pc, #20]	; (144a4 <set_argv0@@Base+0x1c>)
   14490:	ldr	r1, [r0, #0]
   14492:	add	r3, pc
   14494:	mov	r0, r3
   14496:	blx	8c14 <strncpy@plt>
   1449a:	movs	r2, #0
   1449c:	strb.w	r2, [r0, #4095]	; 0xfff
   144a0:	pop	{r3, pc}
   144a2:	nop
   144a4:	ldr	r4, [pc, #232]	; (14590 <clean_args_no_options_relaxed@@Base+0x14>)
   144a6:	movs	r5, r0

000144a8 <check_argc_exact@@Base>:
   144a8:	ldr	r3, [pc, #64]	; (144ec <check_argc_exact@@Base+0x44>)
   144aa:	cmp	r0, r1
   144ac:	push	{r4, r5, lr}
   144ae:	add	r3, pc
   144b0:	sub	sp, #20
   144b2:	mov	r5, r0
   144b4:	mov	r4, r1
   144b6:	beq.n	144da <check_argc_exact@@Base+0x32>
   144b8:	ldr	r2, [pc, #52]	; (144f0 <check_argc_exact@@Base+0x48>)
   144ba:	cmp	r1, #1
   144bc:	ldr	r3, [r3, r2]
   144be:	ldr	r0, [r3, #0]
   144c0:	bgt.n	144e4 <check_argc_exact@@Base+0x3c>
   144c2:	ldr	r3, [pc, #48]	; (144f4 <check_argc_exact@@Base+0x4c>)
   144c4:	add	r3, pc
   144c6:	ldr	r2, [pc, #48]	; (144f8 <check_argc_exact@@Base+0x50>)
   144c8:	movs	r1, #1
   144ca:	strd	r3, r5, [sp, #4]
   144ce:	ldr	r3, [pc, #44]	; (144fc <check_argc_exact@@Base+0x54>)
   144d0:	add	r2, pc
   144d2:	str	r4, [sp, #0]
   144d4:	add	r3, pc
   144d6:	blx	8ca0 <__fprintf_chk@plt+0x4>
   144da:	subs	r0, r5, r4
   144dc:	it	ne
   144de:	movne	r0, #1
   144e0:	add	sp, #20
   144e2:	pop	{r4, r5, pc}
   144e4:	ldr	r3, [pc, #24]	; (14500 <check_argc_exact@@Base+0x58>)
   144e6:	add	r3, pc
   144e8:	b.n	144c6 <check_argc_exact@@Base+0x1e>
   144ea:	nop
   144ec:	ldr	r0, [pc, #520]	; (146f8 <usage@@Base+0x28>)
   144ee:	movs	r5, r0
   144f0:	lsls	r4, r1, #10
   144f2:	movs	r0, r0
   144f4:	add	r4, pc, #904	; (adr r4, 14880 <usage_command_group_short@@Base+0x130>)
   144f6:	movs	r2, r0
   144f8:	add	r4, sp, #968	; 0x3c8
   144fa:	movs	r2, r0
   144fc:	ldr	r3, [pc, #992]	; (148e0 <usage_command_group@@Base+0x58>)
   144fe:	movs	r5, r0
   14500:	movs	r2, r0
   14502:	movs	r3, r0

00014504 <check_argc_min@@Base>:
   14504:	ldr	r3, [pc, #40]	; (14530 <check_argc_min@@Base+0x2c>)
   14506:	cmp	r0, r1
   14508:	push	{r0, r1, r4, lr}
   1450a:	add	r3, pc
   1450c:	bge.n	1452c <check_argc_min@@Base+0x28>
   1450e:	ldr	r2, [pc, #36]	; (14534 <check_argc_min@@Base+0x30>)
   14510:	ldr	r4, [r3, r2]
   14512:	ldr	r3, [pc, #36]	; (14538 <check_argc_min@@Base+0x34>)
   14514:	ldr	r2, [pc, #36]	; (1453c <check_argc_min@@Base+0x38>)
   14516:	strd	r0, r1, [sp]
   1451a:	add	r3, pc
   1451c:	ldr	r0, [r4, #0]
   1451e:	add	r2, pc
   14520:	movs	r1, #1
   14522:	blx	8ca0 <__fprintf_chk@plt+0x4>
   14526:	movs	r0, #1
   14528:	add	sp, #8
   1452a:	pop	{r4, pc}
   1452c:	movs	r0, #0
   1452e:	b.n	14528 <check_argc_min@@Base+0x24>
   14530:	ldr	r0, [pc, #152]	; (145cc <output_format_name@@Base+0x24>)
   14532:	movs	r5, r0
   14534:	lsls	r4, r1, #10
   14536:	movs	r0, r0
   14538:	ldr	r3, [pc, #712]	; (14804 <usage_command_group_short@@Base+0xb4>)
   1453a:	movs	r5, r0
   1453c:	add	r4, sp, #840	; 0x348
   1453e:	movs	r2, r0

00014540 <check_argc_max@@Base>:
   14540:	ldr	r3, [pc, #40]	; (1456c <check_argc_max@@Base+0x2c>)
   14542:	cmp	r0, r1
   14544:	push	{r0, r1, r4, lr}
   14546:	add	r3, pc
   14548:	ble.n	14568 <check_argc_max@@Base+0x28>
   1454a:	ldr	r2, [pc, #36]	; (14570 <check_argc_max@@Base+0x30>)
   1454c:	ldr	r4, [r3, r2]
   1454e:	ldr	r3, [pc, #36]	; (14574 <check_argc_max@@Base+0x34>)
   14550:	ldr	r2, [pc, #36]	; (14578 <check_argc_max@@Base+0x38>)
   14552:	strd	r0, r1, [sp]
   14556:	add	r3, pc
   14558:	ldr	r0, [r4, #0]
   1455a:	add	r2, pc
   1455c:	movs	r1, #1
   1455e:	blx	8ca0 <__fprintf_chk@plt+0x4>
   14562:	movs	r0, #1
   14564:	add	sp, #8
   14566:	pop	{r4, pc}
   14568:	movs	r0, #0
   1456a:	b.n	14564 <check_argc_max@@Base+0x24>
   1456c:			; <UNDEFINED> instruction: 0x47ea
   1456e:	movs	r5, r0
   14570:	lsls	r4, r1, #10
   14572:	movs	r0, r0
   14574:	ldr	r3, [pc, #472]	; (14750 <usage_command_group_short@@Base>)
   14576:	movs	r5, r0
   14578:	add	r4, sp, #820	; 0x334
   1457a:	movs	r2, r0

0001457c <clean_args_no_options_relaxed@@Base>:
   1457c:	push	{r4, lr}
   1457e:	cmp	r1, #1
   14580:	ldr	r4, [pc, #24]	; (1459c <clean_args_no_options_relaxed@@Base+0x20>)
   14582:	add	r4, pc
   14584:	ble.n	1459a <clean_args_no_options_relaxed@@Base+0x1e>
   14586:	ldr	r1, [pc, #24]	; (145a0 <clean_args_no_options_relaxed@@Base+0x24>)
   14588:	ldr	r0, [r2, #4]
   1458a:	add	r1, pc
   1458c:	blx	8748 <strcmp@plt>
   14590:	cbnz	r0, 1459a <clean_args_no_options_relaxed@@Base+0x1e>
   14592:	ldr	r3, [pc, #16]	; (145a4 <clean_args_no_options_relaxed@@Base+0x28>)
   14594:	movs	r2, #2
   14596:	ldr	r3, [r4, r3]
   14598:	str	r2, [r3, #0]
   1459a:	pop	{r4, pc}
   1459c:			; <UNDEFINED> instruction: 0x47ae
   1459e:	movs	r5, r0
   145a0:	add	r0, pc, #204	; (adr r0, 14670 <usage_unknown_option@@Base+0x48>)
   145a2:	movs	r2, r0
   145a4:	lsls	r0, r0, #10
	...

000145a8 <output_format_name@@Base>:
   145a8:	ldr	r3, [pc, #36]	; (145d0 <output_format_name@@Base+0x28>)
   145aa:	cmp	r0, #4
   145ac:	add	r3, pc
   145ae:	beq.n	145c4 <output_format_name@@Base+0x1c>
   145b0:	cmp	r0, #8
   145b2:	bne.n	145c8 <output_format_name@@Base+0x20>
   145b4:	movs	r2, #1
   145b6:	movs	r0, #12
   145b8:	muls	r0, r2
   145ba:	ldr	r2, [pc, #24]	; (145d4 <output_format_name@@Base+0x2c>)
   145bc:	ldr	r3, [r3, r2]
   145be:	adds	r0, #4
   145c0:	add	r0, r3
   145c2:	bx	lr
   145c4:	movs	r2, #0
   145c6:	b.n	145b6 <output_format_name@@Base+0xe>
   145c8:	ldr	r0, [pc, #12]	; (145d8 <output_format_name@@Base+0x30>)
   145ca:	add	r0, pc
   145cc:	bx	lr
   145ce:	nop
   145d0:	blxns	r0
   145d2:	movs	r5, r0
   145d4:	lsls	r4, r5, #10
   145d6:	movs	r0, r0
   145d8:	add	r4, sp, #580	; 0x244
   145da:	movs	r2, r0

000145dc <usage_command@@Base>:
   145dc:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   145de:	mov	r4, r0
   145e0:	ldr	r5, [pc, #56]	; (1461c <usage_command@@Base+0x40>)
   145e2:	mov	r6, r2
   145e4:	mov	r3, r1
   145e6:	ldr	r0, [r0, #8]
   145e8:	add	r5, pc
   145ea:	ldr	r1, [r4, #0]
   145ec:	ldr	r2, [r4, #16]
   145ee:	cbz	r6, 14612 <usage_command@@Base+0x36>
   145f0:	ldr	r4, [pc, #44]	; (14620 <usage_command@@Base+0x44>)
   145f2:	ldr	r4, [r5, r4]
   145f4:	movs	r5, #0
   145f6:	ldr	r4, [r4, #0]
   145f8:	strd	r5, r5, [sp]
   145fc:	str	r4, [sp, #8]
   145fe:	bl	14178 <btrfs_find_root_search@@Base+0x2b4>
   14602:	cbnz	r0, 14616 <usage_command@@Base+0x3a>
   14604:	mov	r1, r4
   14606:	movs	r0, #10
   14608:	add	sp, #16
   1460a:	ldmia.w	sp!, {r4, r5, r6, lr}
   1460e:	b.w	8d30 <fputc@plt>
   14612:	ldr	r4, [pc, #16]	; (14624 <usage_command@@Base+0x48>)
   14614:	b.n	145f2 <usage_command@@Base+0x16>
   14616:	add	sp, #16
   14618:	pop	{r4, r5, r6, pc}
   1461a:	nop
   1461c:	bx	r9
   1461e:	movs	r5, r0
   14620:	lsls	r4, r1, #10
   14622:	movs	r0, r0
   14624:	lsls	r0, r6, #10
	...

00014628 <usage_unknown_option@@Base>:
   14628:	push	{r0, r1, r7, lr}
   1462a:	mov	r6, r0
   1462c:	ldr	r3, [r0, #8]
   1462e:	mov	r8, r1
   14630:	ldr	r7, [pc, #124]	; (146b0 <usage_unknown_option@@Base+0x88>)
   14632:	ldr	r2, [r3, #0]
   14634:	movs	r3, #0
   14636:	mov	r4, r3
   14638:	add	r7, pc
   1463a:	mov	r1, r3
   1463c:	ldrb	r3, [r2, r4]
   1463e:	cmp	r3, #60	; 0x3c
   14640:	bne.n	14696 <usage_unknown_option@@Base+0x6e>
   14642:	subs	r4, #1
   14644:	ldr	r3, [pc, #108]	; (146b4 <usage_unknown_option@@Base+0x8c>)
   14646:	movs	r1, #1
   14648:	ldr	r5, [r7, r3]
   1464a:	mov	r3, r4
   1464c:	str	r2, [sp, #0]
   1464e:	ldr	r2, [pc, #104]	; (146b8 <usage_unknown_option@@Base+0x90>)
   14650:	ldr	r0, [r5, #0]
   14652:	add	r2, pc
   14654:	blx	8ca0 <__fprintf_chk@plt+0x4>
   14658:	ldr	r3, [pc, #96]	; (146bc <usage_unknown_option@@Base+0x94>)
   1465a:	ldr	r3, [r7, r3]
   1465c:	ldr	r3, [r3, #0]
   1465e:	cbnz	r3, 146aa <usage_unknown_option@@Base+0x82>
   14660:	ldr	r3, [pc, #92]	; (146c0 <usage_unknown_option@@Base+0x98>)
   14662:	ldr	r2, [pc, #96]	; (146c4 <usage_unknown_option@@Base+0x9c>)
   14664:	ldr	r3, [r7, r3]
   14666:	add	r2, pc
   14668:	ldr	r3, [r3, #0]
   1466a:	add.w	r3, r3, #1073741824	; 0x40000000
   1466e:	subs	r3, #1
   14670:	ldr.w	r3, [r8, r3, lsl #2]
   14674:	movs	r1, #1
   14676:	ldr	r0, [r5, #0]
   14678:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1467c:	ldr	r3, [r6, #8]
   1467e:	ldr	r2, [pc, #72]	; (146c8 <usage_unknown_option@@Base+0xa0>)
   14680:	movs	r1, #1
   14682:	ldr	r3, [r3, #0]
   14684:	add	r2, pc
   14686:	str	r3, [sp, #0]
   14688:	mov	r3, r4
   1468a:	ldr	r0, [r5, #0]
   1468c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   14690:	movs	r0, #1
   14692:	blx	8b58 <exit@plt>
   14696:	cmp	r3, #91	; 0x5b
   14698:	beq.n	14642 <usage_unknown_option@@Base+0x1a>
   1469a:	cmp	r1, #32
   1469c:	bne.n	146a2 <usage_unknown_option@@Base+0x7a>
   1469e:	cmp	r3, #45	; 0x2d
   146a0:	beq.n	14642 <usage_unknown_option@@Base+0x1a>
   146a2:	adds	r4, #1
   146a4:	cmp	r3, #0
   146a6:	bne.n	1463a <usage_unknown_option@@Base+0x12>
   146a8:	b.n	14644 <usage_unknown_option@@Base+0x1c>
   146aa:	ldr	r2, [pc, #32]	; (146cc <usage_unknown_option@@Base+0xa4>)
   146ac:	add	r2, pc
   146ae:	b.n	14674 <usage_unknown_option@@Base+0x4c>
   146b0:	mov	r8, pc
   146b2:	movs	r5, r0
   146b4:	lsls	r4, r1, #10
   146b6:	movs	r0, r0
   146b8:	add	r4, sp, #68	; 0x44
   146ba:	movs	r2, r0
   146bc:	lsls	r0, r1, #10
   146be:	movs	r0, r0
   146c0:	lsls	r0, r0, #10
   146c2:	movs	r0, r0
   146c4:	add	r4, sp, #16
   146c6:	movs	r2, r0
   146c8:	add	r4, sp, #84	; 0x54
   146ca:	movs	r2, r0
   146cc:	add	r3, sp, #864	; 0x360
   146ce:	movs	r2, r0

000146d0 <usage@@Base>:
   146d0:	push	{r0, r1, r2, r3, r4, lr}
   146d2:	ldr	r3, [pc, #44]	; (14700 <usage@@Base+0x30>)
   146d4:	ldr	r2, [pc, #44]	; (14704 <usage@@Base+0x34>)
   146d6:	add	r3, pc
   146d8:	ldr	r3, [r3, r2]
   146da:	movs	r2, #0
   146dc:	mov	r1, r2
   146de:	ldr	r4, [r3, #0]
   146e0:	movs	r3, #1
   146e2:	strd	r2, r2, [sp]
   146e6:	str	r4, [sp, #8]
   146e8:	ldr	r0, [r0, #8]
   146ea:	bl	14178 <btrfs_find_root_search@@Base+0x2b4>
   146ee:	cbnz	r0, 146f8 <usage@@Base+0x28>
   146f0:	mov	r1, r4
   146f2:	movs	r0, #10
   146f4:	blx	8d34 <fputc@plt+0x4>
   146f8:	movs	r0, #1
   146fa:	blx	8b58 <exit@plt>
   146fe:	nop
   14700:	mov	r2, fp
   14702:	movs	r5, r0
   14704:	lsls	r4, r1, #10
	...

00014708 <clean_args_no_options@@Base>:
   14708:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1470c:	mov	r4, r0
   1470e:	ldr	r7, [pc, #56]	; (14748 <clean_args_no_options@@Base+0x40>)
   14710:	mov	r5, r1
   14712:	ldr.w	r8, [pc, #56]	; 1474c <clean_args_no_options@@Base+0x44>
   14716:	mov	r6, r2
   14718:	add	r7, pc
   1471a:	mov.w	r9, #0
   1471e:	add	r8, pc
   14720:	mov	r3, r7
   14722:	mov	r2, r8
   14724:	mov	r1, r6
   14726:	mov	r0, r5
   14728:	str.w	r9, [sp]
   1472c:	blx	8b34 <getopt_long@plt>
   14730:	cmp	r0, #0
   14732:	blt.n	14740 <clean_args_no_options@@Base+0x38>
   14734:	ldr	r1, [r4, #8]
   14736:	cmp	r1, #0
   14738:	beq.n	14720 <clean_args_no_options@@Base+0x18>
   1473a:	mov	r0, r4
   1473c:	bl	146d0 <usage@@Base>
   14740:	add	sp, #12
   14742:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   14746:	nop
   14748:	add	r5, sp, #592	; 0x250
   1474a:	movs	r2, r0
   1474c:	add	r2, pc, #544	; (adr r2, 14970 <help_ambiguous_token@@Base+0x14>)
   1474e:	movs	r2, r0

00014750 <usage_command_group_short@@Base>:
   14750:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   14754:	mov	r5, r0
   14756:	ldr	r7, [pc, #248]	; (14850 <usage_command_group_short@@Base+0x100>)
   14758:	ldr	r3, [pc, #248]	; (14854 <usage_command_group_short@@Base+0x104>)
   1475a:	add	r7, pc
   1475c:	ldr	r6, [r0, #0]
   1475e:	ldr	r3, [r7, r3]
   14760:	ldr	r4, [r3, #0]
   14762:	cmp	r6, #0
   14764:	bne.n	147e4 <usage_command_group_short@@Base+0x94>
   14766:	mov	r1, r4
   14768:	movs	r0, #10
   1476a:	blx	8d34 <fputc@plt+0x4>
   1476e:	ldr	r0, [pc, #232]	; (14858 <usage_command_group_short@@Base+0x108>)
   14770:	mov	r1, r4
   14772:	ldr.w	r8, [pc, #232]	; 1485c <usage_command_group_short@@Base+0x10c>
   14776:	add	r0, pc
   14778:	adds	r5, #8
   1477a:	blx	8de4 <fputs@plt+0x4>
   1477e:	add	r8, pc
   14780:	mov	r6, r5
   14782:	ldr.w	r3, [r6], #4
   14786:	cmp	r3, #0
   14788:	bne.n	14810 <usage_command_group_short@@Base+0xc0>
   1478a:	ldr	r0, [pc, #212]	; (14860 <usage_command_group_short@@Base+0x110>)
   1478c:	mov	r1, r4
   1478e:	ldr	r6, [pc, #212]	; (14864 <usage_command_group_short@@Base+0x114>)
   14790:	add	r0, pc
   14792:	blx	8de4 <fputs@plt+0x4>
   14796:	add	r6, pc
   14798:	ldr.w	r3, [r5], #4
   1479c:	cmp	r3, #0
   1479e:	bne.n	1482e <usage_command_group_short@@Base+0xde>
   147a0:	mov	r1, r4
   147a2:	movs	r0, #10
   147a4:	blx	8d34 <fputc@plt+0x4>
   147a8:	ldr	r3, [pc, #188]	; (14868 <usage_command_group_short@@Base+0x118>)
   147aa:	ldr	r0, [pc, #192]	; (1486c <usage_command_group_short@@Base+0x11c>)
   147ac:	ldr	r4, [r7, r3]
   147ae:	add	r0, pc
   147b0:	ldr	r1, [r4, #0]
   147b2:	blx	8de4 <fputs@plt+0x4>
   147b6:	ldr	r0, [pc, #184]	; (14870 <usage_command_group_short@@Base+0x120>)
   147b8:	ldr	r1, [r4, #0]
   147ba:	add	r0, pc
   147bc:	blx	8de4 <fputs@plt+0x4>
   147c0:	ldr	r0, [pc, #176]	; (14874 <usage_command_group_short@@Base+0x124>)
   147c2:	ldr	r1, [r4, #0]
   147c4:	add	r0, pc
   147c6:	blx	8de4 <fputs@plt+0x4>
   147ca:	ldr	r0, [pc, #172]	; (14878 <usage_command_group_short@@Base+0x128>)
   147cc:	ldr	r1, [r4, #0]
   147ce:	add	r0, pc
   147d0:	blx	8de4 <fputs@plt+0x4>
   147d4:	ldr	r0, [pc, #164]	; (1487c <usage_command_group_short@@Base+0x12c>)
   147d6:	ldr	r1, [r4, #0]
   147d8:	add	r0, pc
   147da:	add	sp, #8
   147dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   147e0:	b.w	8de0 <fputs@plt>
   147e4:	ldr	r3, [r6, #0]
   147e6:	cmp	r3, #0
   147e8:	beq.n	14766 <usage_command_group_short@@Base+0x16>
   147ea:	ldr	r2, [pc, #148]	; (14880 <usage_command_group_short@@Base+0x130>)
   147ec:	movs	r1, #1
   147ee:	mov	r0, r4
   147f0:	ldr.w	r8, [pc, #144]	; 14884 <usage_command_group_short@@Base+0x134>
   147f4:	add	r2, pc
   147f6:	blx	8ca0 <__fprintf_chk@plt+0x4>
   147fa:	add	r8, pc
   147fc:	ldr.w	r3, [r6, #4]!
   14800:	cmp	r3, #0
   14802:	beq.n	14766 <usage_command_group_short@@Base+0x16>
   14804:	mov	r2, r8
   14806:	movs	r1, #1
   14808:	mov	r0, r4
   1480a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1480e:	b.n	147fc <usage_command_group_short@@Base+0xac>
   14810:	ldr	r2, [r3, #16]
   14812:	lsls	r1, r2, #31
   14814:	bmi.n	14782 <usage_command_group_short@@Base+0x32>
   14816:	ldr	r1, [r3, #12]
   14818:	cmp	r1, #0
   1481a:	beq.n	14782 <usage_command_group_short@@Base+0x32>
   1481c:	ldr	r2, [r1, #4]
   1481e:	mov	r0, r4
   14820:	movs	r1, #1
   14822:	str	r2, [sp, #0]
   14824:	mov	r2, r8
   14826:	ldr	r3, [r3, #0]
   14828:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1482c:	b.n	14782 <usage_command_group_short@@Base+0x32>
   1482e:	ldr	r2, [r3, #16]
   14830:	lsls	r2, r2, #31
   14832:	bmi.n	14798 <usage_command_group_short@@Base+0x48>
   14834:	ldr	r2, [r3, #12]
   14836:	cmp	r2, #0
   14838:	bne.n	14798 <usage_command_group_short@@Base+0x48>
   1483a:	ldr	r2, [r3, #8]
   1483c:	movs	r1, #1
   1483e:	mov	r0, r4
   14840:	ldr	r2, [r2, #4]
   14842:	str	r2, [sp, #0]
   14844:	mov	r2, r6
   14846:	ldr	r3, [r3, #0]
   14848:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1484c:	b.n	14798 <usage_command_group_short@@Base+0x48>
   1484e:	nop
   14850:	cmp	lr, sl
   14852:	movs	r5, r0
   14854:	lsls	r0, r6, #10
   14856:	movs	r0, r0
   14858:	add	r3, sp, #300	; 0x12c
   1485a:	movs	r2, r0
   1485c:	add	r3, sp, #424	; 0x1a8
   1485e:	movs	r2, r0
   14860:	add	r3, sp, #404	; 0x194
   14862:	movs	r2, r0
   14864:	add	r3, sp, #328	; 0x148
   14866:	movs	r2, r0
   14868:	lsls	r4, r1, #10
   1486a:	movs	r0, r0
   1486c:	add	r3, sp, #332	; 0x14c
   1486e:	movs	r2, r0
   14870:	add	r3, sp, #536	; 0x218
   14872:	movs	r2, r0
   14874:	add	r3, sp, #780	; 0x30c
   14876:	movs	r2, r0
   14878:	add	r3, sp, #1008	; 0x3f0
   1487a:	movs	r2, r0
   1487c:	add	r4, sp, #204	; 0xcc
   1487e:	movs	r2, r0
   14880:	add	r2, sp, #888	; 0x378
   14882:	movs	r2, r0
   14884:	add	r2, sp, #908	; 0x38c
   14886:	movs	r2, r0

00014888 <usage_command_group@@Base>:
   14888:	ldr	r3, [pc, #120]	; (14904 <usage_command_group@@Base+0x7c>)
   1488a:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1488e:	add	r3, pc
   14890:	ldr	r5, [r0, #0]
   14892:	mov	r6, r0
   14894:	mov	r7, r1
   14896:	cbz	r2, 148c2 <usage_command_group@@Base+0x3a>
   14898:	ldr	r2, [pc, #108]	; (14908 <usage_command_group@@Base+0x80>)
   1489a:	ldr	r3, [r3, r2]
   1489c:	ldr	r4, [r3, #0]
   1489e:	cbnz	r5, 148c6 <usage_command_group@@Base+0x3e>
   148a0:	mov	r1, r4
   148a2:	movs	r0, #10
   148a4:	blx	8d34 <fputc@plt+0x4>
   148a8:	mov	r2, r4
   148aa:	mov	r1, r7
   148ac:	mov	r0, r6
   148ae:	bl	143c0 <btrfs_find_root_search@@Base+0x4fc>
   148b2:	mov	r1, r4
   148b4:	movs	r0, #10
   148b6:	blx	8d34 <fputc@plt+0x4>
   148ba:	ldr	r3, [r6, #4]
   148bc:	cbnz	r3, 148f2 <usage_command_group@@Base+0x6a>
   148be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   148c2:	ldr	r2, [pc, #72]	; (1490c <usage_command_group@@Base+0x84>)
   148c4:	b.n	1489a <usage_command_group@@Base+0x12>
   148c6:	ldr	r3, [r5, #0]
   148c8:	cmp	r3, #0
   148ca:	beq.n	148a0 <usage_command_group@@Base+0x18>
   148cc:	ldr	r2, [pc, #64]	; (14910 <usage_command_group@@Base+0x88>)
   148ce:	movs	r1, #1
   148d0:	mov	r0, r4
   148d2:	ldr.w	r8, [pc, #64]	; 14914 <usage_command_group@@Base+0x8c>
   148d6:	add	r2, pc
   148d8:	blx	8ca0 <__fprintf_chk@plt+0x4>
   148dc:	add	r8, pc
   148de:	ldr.w	r3, [r5, #4]!
   148e2:	cmp	r3, #0
   148e4:	beq.n	148a0 <usage_command_group@@Base+0x18>
   148e6:	mov	r2, r8
   148e8:	movs	r1, #1
   148ea:	mov	r0, r4
   148ec:	blx	8ca0 <__fprintf_chk@plt+0x4>
   148f0:	b.n	148de <usage_command_group@@Base+0x56>
   148f2:	ldr	r2, [pc, #36]	; (14918 <usage_command_group@@Base+0x90>)
   148f4:	mov	r0, r4
   148f6:	movs	r1, #1
   148f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   148fc:	add	r2, pc
   148fe:	b.w	8c9c <__fprintf_chk@plt>
   14902:	nop
   14904:	add	sl, r4
   14906:	movs	r5, r0
   14908:	lsls	r4, r1, #10
   1490a:	movs	r0, r0
   1490c:	lsls	r0, r6, #10
   1490e:	movs	r0, r0
   14910:	add	r1, sp, #1008	; 0x3f0
   14912:	movs	r2, r0
   14914:	add	r2, sp, #4
   14916:	movs	r2, r0
   14918:	add	r3, sp, #648	; 0x288
   1491a:	movs	r2, r0

0001491c <help_unknown_token@@Base>:
   1491c:	ldr	r3, [pc, #44]	; (1494c <help_unknown_token@@Base+0x30>)
   1491e:	mov	r4, r1
   14920:	push	{r0, r1, r2, lr}
   14922:	add	r3, pc
   14924:	ldr	r2, [pc, #40]	; (14950 <help_unknown_token@@Base+0x34>)
   14926:	movs	r1, #1
   14928:	ldr	r5, [r3, r2]
   1492a:	ldr	r3, [pc, #40]	; (14954 <help_unknown_token@@Base+0x38>)
   1492c:	ldr	r2, [pc, #40]	; (14958 <help_unknown_token@@Base+0x3c>)
   1492e:	add	r3, pc
   14930:	str	r0, [sp, #0]
   14932:	add	r2, pc
   14934:	ldr	r0, [r5, #0]
   14936:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1493a:	mov	r0, r4
   1493c:	movs	r2, #1
   1493e:	movs	r1, #0
   14940:	bl	14888 <usage_command_group@@Base>
   14944:	movs	r0, #1
   14946:	blx	8b58 <exit@plt>
   1494a:	nop
   1494c:	add	r6, r1
   1494e:	movs	r5, r0
   14950:	lsls	r4, r1, #10
   14952:	movs	r0, r0
   14954:			; <UNDEFINED> instruction: 0x479e
   14956:	movs	r5, r0
   14958:	add	r3, sp, #108	; 0x6c
   1495a:	movs	r2, r0

0001495c <help_ambiguous_token@@Base>:
   1495c:	ldr	r3, [pc, #84]	; (149b4 <help_ambiguous_token@@Base+0x58>)
   1495e:	mov	r4, r1
   14960:	ldr	r2, [pc, #84]	; (149b8 <help_ambiguous_token@@Base+0x5c>)
   14962:	mov	r5, r0
   14964:	add	r3, pc
   14966:	ldr.w	r8, [pc, #84]	; 149bc <help_ambiguous_token@@Base+0x60>
   1496a:	push	{r0, r1, r7, lr}
   1496c:	movs	r1, #1
   1496e:	ldr	r7, [r3, r2]
   14970:	adds	r4, #8
   14972:	ldr	r3, [pc, #76]	; (149c0 <help_ambiguous_token@@Base+0x64>)
   14974:	add	r8, pc
   14976:	ldr	r2, [pc, #76]	; (149c4 <help_ambiguous_token@@Base+0x68>)
   14978:	str	r0, [sp, #0]
   1497a:	add	r3, pc
   1497c:	add	r2, pc
   1497e:	ldr	r0, [r7, #0]
   14980:	blx	8ca0 <__fprintf_chk@plt+0x4>
   14984:	ldr	r0, [pc, #64]	; (149c8 <help_ambiguous_token@@Base+0x6c>)
   14986:	ldr	r1, [r7, #0]
   14988:	add	r0, pc
   1498a:	blx	8de4 <fputs@plt+0x4>
   1498e:	ldr.w	r6, [r4], #4
   14992:	cbnz	r6, 1499a <help_ambiguous_token@@Base+0x3e>
   14994:	movs	r0, #1
   14996:	blx	8b58 <exit@plt>
   1499a:	ldr	r0, [r6, #0]
   1499c:	mov	r1, r5
   1499e:	bl	34fc4 <prefixcmp@@Base>
   149a2:	cmp	r0, #0
   149a4:	bne.n	1498e <help_ambiguous_token@@Base+0x32>
   149a6:	ldr	r3, [r6, #0]
   149a8:	mov	r2, r8
   149aa:	ldr	r0, [r7, #0]
   149ac:	movs	r1, #1
   149ae:	blx	8ca0 <__fprintf_chk@plt+0x4>
   149b2:	b.n	1498e <help_ambiguous_token@@Base+0x32>
   149b4:	mvns	r4, r1
   149b6:	movs	r5, r0
   149b8:	lsls	r4, r1, #10
   149ba:	movs	r0, r0
   149bc:	add	r3, sp, #164	; 0xa4
   149be:	movs	r2, r0
   149c0:	bx	sl
   149c2:	movs	r5, r0
   149c4:	add	r2, sp, #932	; 0x3a4
   149c6:	movs	r2, r0
   149c8:	add	r2, sp, #988	; 0x3dc
   149ca:	movs	r2, r0

000149cc <help_command_group@@Base>:
   149cc:	cmp	r1, #1
   149ce:	push	{r4, lr}
   149d0:	mov	r4, r0
   149d2:	ble.n	149f0 <help_command_group@@Base+0x24>
   149d4:	ldr	r1, [pc, #28]	; (149f4 <help_command_group@@Base+0x28>)
   149d6:	ldr	r0, [r2, #4]
   149d8:	add	r1, pc
   149da:	blx	8748 <strcmp@plt>
   149de:	clz	r1, r0
   149e2:	lsrs	r1, r1, #5
   149e4:	mov	r0, r4
   149e6:	movs	r2, #0
   149e8:	ldmia.w	sp!, {r4, lr}
   149ec:	b.w	14888 <usage_command_group@@Base>
   149f0:	movs	r1, #0
   149f2:	b.n	149e4 <help_command_group@@Base+0x18>
   149f4:	add	r2, sp, #808	; 0x328
   149f6:	movs	r2, r0
   149f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149fc:	sub.w	sp, sp, #4096	; 0x1000
   14a00:	sub	sp, #20
   14a02:	mov	r4, r1
   14a04:	ldr	r1, [pc, #448]	; (14bc8 <help_command_group@@Base+0x1fc>)
   14a06:	mov	r5, r2
   14a08:	mov	r9, r3
   14a0a:	ldr	r2, [pc, #448]	; (14bcc <help_command_group@@Base+0x200>)
   14a0c:	add.w	r3, sp, #4128	; 0x1020
   14a10:	add	r1, pc
   14a12:	add	r6, sp, #16
   14a14:	adds	r3, #24
   14a16:	ldr	r2, [r1, r2]
   14a18:	mov	fp, r0
   14a1a:	ldr	r7, [r3, #0]
   14a1c:	add.w	r3, sp, #4096	; 0x1000
   14a20:	ldr	r2, [r2, #0]
   14a22:	str	r2, [r3, #12]
   14a24:	mov.w	r2, #0
   14a28:	mov	r0, r6
   14a2a:	movw	r2, #4092	; 0xffc
   14a2e:	movs	r1, #0
   14a30:	adds	r3, #12
   14a32:	str.w	r1, [r6, #-4]
   14a36:	sub.w	sl, r6, #4
   14a3a:	blx	8bf8 <memset@plt+0x4>
   14a3e:	mov	r8, r4
   14a40:	mov	r2, r5
   14a42:	cmp.w	fp, #0
   14a46:	beq.n	14a7e <help_command_group@@Base+0xb2>
   14a48:	add.w	r1, r4, #4096	; 0x1000
   14a4c:	mov	r0, r4
   14a4e:	bl	16d54 <path_cat_out@@Base>
   14a52:	subs	r4, r0, #0
   14a54:	bge.n	14a96 <help_command_group@@Base+0xca>
   14a56:	ldr	r0, [pc, #376]	; (14bd0 <help_command_group@@Base+0x204>)
   14a58:	mov	r2, r5
   14a5a:	mov	r1, r9
   14a5c:	add	r0, pc
   14a5e:	bl	1a900 <__btrfs_error@@Base>
   14a62:	ldr	r1, [pc, #368]	; (14bd4 <help_command_group@@Base+0x208>)
   14a64:	add.w	r3, sp, #4096	; 0x1000
   14a68:	ldr	r2, [pc, #352]	; (14bcc <help_command_group@@Base+0x200>)
   14a6a:	adds	r3, #12
   14a6c:	add	r1, pc
   14a6e:	ldr	r2, [r1, r2]
   14a70:	ldr	r1, [r2, #0]
   14a72:	ldr	r2, [r3, #0]
   14a74:	eors	r1, r2
   14a76:	beq.w	14bba <help_command_group@@Base+0x1ee>
   14a7a:	blx	88e4 <__stack_chk_fail@plt>
   14a7e:	mov	r1, r4
   14a80:	mov	r0, sl
   14a82:	bl	16d54 <path_cat_out@@Base>
   14a86:	subs	r4, r0, #0
   14a88:	bge.n	14a94 <help_command_group@@Base+0xc8>
   14a8a:	ldr	r0, [pc, #332]	; (14bd8 <help_command_group@@Base+0x20c>)
   14a8c:	mov	r2, r5
   14a8e:	mov	r1, r9
   14a90:	add	r0, pc
   14a92:	b.n	14a5e <help_command_group@@Base+0x92>
   14a94:	mov	r8, sl
   14a96:	ldr	r1, [pc, #324]	; (14bdc <help_command_group@@Base+0x210>)
   14a98:	mov	r2, r9
   14a9a:	movs	r0, #1
   14a9c:	ldr.w	sl, [pc, #320]	; 14be0 <help_command_group@@Base+0x214>
   14aa0:	add	r1, pc
   14aa2:	movs	r4, #0
   14aa4:	blx	8c6c <__printf_chk@plt+0x4>
   14aa8:	mov	r0, r8
   14aaa:	blx	8b70 <strlen@plt>
   14aae:	add	sl, pc
   14ab0:	add.w	r9, r8, r0
   14ab4:	cmp	r8, r9
   14ab6:	bne.n	14ac6 <help_command_group@@Base+0xfa>
   14ab8:	cmp	r7, #0
   14aba:	bne.n	14b9a <help_command_group@@Base+0x1ce>
   14abc:	movs	r0, #10
   14abe:	movs	r4, #0
   14ac0:	blx	8c08 <putchar@plt+0x4>
   14ac4:	b.n	14a62 <help_command_group@@Base+0x96>
   14ac6:	ldrb.w	r5, [r8], #1
   14aca:	cmp	r5, #32
   14acc:	bhi.n	14af6 <help_command_group@@Base+0x12a>
   14ace:	cmp	r5, #6
   14ad0:	bls.n	14afa <help_command_group@@Base+0x12e>
   14ad2:	subs	r3, r5, #7
   14ad4:	cmp	r3, #25
   14ad6:	bhi.n	14afa <help_command_group@@Base+0x12e>
   14ad8:	tbb	[pc, r3]
   14adc:	cmp	r5, #37	; 0x25
   14ade:	subs	r4, #70	; 0x46
   14ae0:	adds	r7, #75	; 0x4b
   14ae2:	lsrs	r1, r0, #29
   14ae4:	lsrs	r7, r1, #28
   14ae6:	lsrs	r7, r1, #28
   14ae8:	lsrs	r7, r1, #28
   14aea:	lsrs	r7, r1, #28
   14aec:	lsrs	r7, r1, #28
   14aee:	lsrs	r7, r1, #28
   14af0:	lsrs	r2, r6, #28
   14af2:	lsrs	r7, r1, #28
   14af4:	str	r7, [r1, r0]
   14af6:	cmp	r5, #92	; 0x5c
   14af8:	beq.n	14b86 <help_command_group@@Base+0x1ba>
   14afa:	blx	8b40 <__ctype_b_loc@plt>
   14afe:	ldr	r3, [r0, #0]
   14b00:	ldrh.w	r3, [r3, r5, lsl #1]
   14b04:	lsls	r3, r3, #17
   14b06:	bmi.n	14b90 <help_command_group@@Base+0x1c4>
   14b08:	ubfx	r3, r5, #3, #3
   14b0c:	lsrs	r2, r5, #6
   14b0e:	and.w	r5, r5, #7
   14b12:	adds	r3, #48	; 0x30
   14b14:	adds	r5, #48	; 0x30
   14b16:	adds	r2, #48	; 0x30
   14b18:	mov	r1, sl
   14b1a:	movs	r0, #1
   14b1c:	str	r5, [sp, #0]
   14b1e:	adds	r4, #4
   14b20:	blx	8c6c <__printf_chk@plt+0x4>
   14b24:	b.n	14ab4 <help_command_group@@Base+0xe8>
   14b26:	movs	r0, #92	; 0x5c
   14b28:	blx	8c08 <putchar@plt+0x4>
   14b2c:	movs	r0, #97	; 0x61
   14b2e:	blx	8c08 <putchar@plt+0x4>
   14b32:	adds	r4, #2
   14b34:	b.n	14ab4 <help_command_group@@Base+0xe8>
   14b36:	movs	r0, #92	; 0x5c
   14b38:	blx	8c08 <putchar@plt+0x4>
   14b3c:	movs	r0, #98	; 0x62
   14b3e:	b.n	14b2e <help_command_group@@Base+0x162>
   14b40:	movs	r0, #92	; 0x5c
   14b42:	blx	8c08 <putchar@plt+0x4>
   14b46:	movs	r0, #101	; 0x65
   14b48:	b.n	14b2e <help_command_group@@Base+0x162>
   14b4a:	movs	r0, #92	; 0x5c
   14b4c:	blx	8c08 <putchar@plt+0x4>
   14b50:	movs	r0, #102	; 0x66
   14b52:	b.n	14b2e <help_command_group@@Base+0x162>
   14b54:	movs	r0, #92	; 0x5c
   14b56:	blx	8c08 <putchar@plt+0x4>
   14b5a:	movs	r0, #110	; 0x6e
   14b5c:	b.n	14b2e <help_command_group@@Base+0x162>
   14b5e:	movs	r0, #92	; 0x5c
   14b60:	blx	8c08 <putchar@plt+0x4>
   14b64:	movs	r0, #114	; 0x72
   14b66:	b.n	14b2e <help_command_group@@Base+0x162>
   14b68:	movs	r0, #92	; 0x5c
   14b6a:	blx	8c08 <putchar@plt+0x4>
   14b6e:	movs	r0, #116	; 0x74
   14b70:	b.n	14b2e <help_command_group@@Base+0x162>
   14b72:	movs	r0, #92	; 0x5c
   14b74:	blx	8c08 <putchar@plt+0x4>
   14b78:	movs	r0, #118	; 0x76
   14b7a:	b.n	14b2e <help_command_group@@Base+0x162>
   14b7c:	movs	r0, #92	; 0x5c
   14b7e:	blx	8c08 <putchar@plt+0x4>
   14b82:	movs	r0, #32
   14b84:	b.n	14b2e <help_command_group@@Base+0x162>
   14b86:	mov	r0, r5
   14b88:	blx	8c08 <putchar@plt+0x4>
   14b8c:	mov	r0, r5
   14b8e:	b.n	14b2e <help_command_group@@Base+0x162>
   14b90:	mov	r0, r5
   14b92:	adds	r4, #1
   14b94:	blx	8c08 <putchar@plt+0x4>
   14b98:	b.n	14ab4 <help_command_group@@Base+0xe8>
   14b9a:	adds	r4, #1
   14b9c:	movs	r0, #32
   14b9e:	blx	8c08 <putchar@plt+0x4>
   14ba2:	cmp	r4, #31
   14ba4:	ble.n	14b9a <help_command_group@@Base+0x1ce>
   14ba6:	add.w	r2, sp, #4128	; 0x1020
   14baa:	mov	r1, r7
   14bac:	adds	r2, #28
   14bae:	movs	r0, #1
   14bb0:	str.w	r2, [r6, #-8]
   14bb4:	blx	8888 <__vprintf_chk@plt>
   14bb8:	b.n	14abc <help_command_group@@Base+0xf0>
   14bba:	mov	r0, r4
   14bbc:	add.w	sp, sp, #4096	; 0x1000
   14bc0:	add	sp, #20
   14bc2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14bc6:	nop
   14bc8:	orrs	r0, r4
   14bca:	movs	r5, r0
   14bcc:	lsls	r4, r7, #9
   14bce:	movs	r0, r0
   14bd0:	add	r2, sp, #480	; 0x1e0
   14bd2:	movs	r2, r0
   14bd4:	cmn	r4, r0
   14bd6:	movs	r5, r0
   14bd8:	add	r2, sp, #272	; 0x110
   14bda:	movs	r2, r0
   14bdc:	add	r2, sp, #296	; 0x128
   14bde:	movs	r2, r0
   14be0:	add	r2, sp, #264	; 0x108
   14be2:	movs	r2, r0
   14be4:	push	{r4, r5, lr}
   14be6:	sub	sp, #28
   14be8:	strd	r2, r3, [sp, #8]
   14bec:	mov	r2, r0
   14bee:	ldr	r3, [pc, #28]	; (14c0c <help_command_group@@Base+0x240>)
   14bf0:	movs	r0, #0
   14bf2:	ldrd	r4, r5, [sp, #40]	; 0x28
   14bf6:	add	r3, pc
   14bf8:	str	r3, [sp, #0]
   14bfa:	ldr	r3, [pc, #20]	; (14c10 <help_command_group@@Base+0x244>)
   14bfc:	ldr	r1, [sp, #48]	; 0x30
   14bfe:	add	r3, pc
   14c00:	strd	r4, r5, [sp, #16]
   14c04:	bl	149f8 <help_command_group@@Base+0x2c>
   14c08:	add	sp, #28
   14c0a:	pop	{r4, r5, pc}
   14c0c:	add	r1, sp, #64	; 0x40
   14c0e:	movs	r2, r0
   14c10:	add	r0, sp, #1000	; 0x3e8
   14c12:	movs	r2, r0
   14c14:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   14c16:	strd	r2, r3, [sp, #16]
   14c1a:	ldrd	r2, r3, [sp, #32]
   14c1e:	ldr	r1, [sp, #40]	; 0x28
   14c20:	strd	r2, r3, [sp, #8]
   14c24:	mov	r2, r0
   14c26:	ldr	r3, [pc, #20]	; (14c3c <help_command_group@@Base+0x270>)
   14c28:	movs	r0, #0
   14c2a:	add	r3, pc
   14c2c:	str	r3, [sp, #0]
   14c2e:	ldr	r3, [pc, #16]	; (14c40 <help_command_group@@Base+0x274>)
   14c30:	add	r3, pc
   14c32:	bl	149f8 <help_command_group@@Base+0x2c>
   14c36:	add	sp, #28
   14c38:	ldr.w	pc, [sp], #4
   14c3c:	add	r0, sp, #988	; 0x3dc
   14c3e:	movs	r2, r0
   14c40:	add	r0, sp, #940	; 0x3ac
   14c42:	movs	r2, r0
   14c44:	push	{r0, r1, r2, r3, r4, lr}
   14c46:	strd	r2, r3, [sp, #8]
   14c4a:	mov	r2, r0
   14c4c:	ldr	r3, [pc, #20]	; (14c64 <help_command_group@@Base+0x298>)
   14c4e:	movs	r0, #0
   14c50:	ldr	r1, [sp, #24]
   14c52:	add	r3, pc
   14c54:	str	r3, [sp, #0]
   14c56:	ldr	r3, [pc, #16]	; (14c68 <help_command_group@@Base+0x29c>)
   14c58:	add	r3, pc
   14c5a:	bl	149f8 <help_command_group@@Base+0x2c>
   14c5e:	add	sp, #20
   14c60:	ldr.w	pc, [sp], #4
   14c64:	add	r0, sp, #924	; 0x39c
   14c66:	movs	r2, r0
   14c68:	add	r0, sp, #876	; 0x36c
   14c6a:	movs	r2, r0
   14c6c:	push	{r0, r1, r2, r3, r4, lr}
   14c6e:	strd	r2, r3, [sp, #8]
   14c72:	mov	r2, r0
   14c74:	ldr	r3, [pc, #20]	; (14c8c <help_command_group@@Base+0x2c0>)
   14c76:	movs	r0, #0
   14c78:	ldr	r1, [sp, #24]
   14c7a:	add	r3, pc
   14c7c:	str	r3, [sp, #0]
   14c7e:	ldr	r3, [pc, #16]	; (14c90 <help_command_group@@Base+0x2c4>)
   14c80:	add	r3, pc
   14c82:	bl	149f8 <help_command_group@@Base+0x2c>
   14c86:	add	sp, #20
   14c88:	ldr.w	pc, [sp], #4
   14c8c:	add	r0, sp, #840	; 0x348
   14c8e:	movs	r2, r0
   14c90:	add	r0, sp, #780	; 0x30c
   14c92:	movs	r2, r0
   14c94:	push	{r0, r1, r2, lr}
   14c96:	mov	r3, r1
   14c98:	str	r3, [sp, #4]
   14c9a:	mov	r1, r2
   14c9c:	ldr	r3, [pc, #20]	; (14cb4 <help_command_group@@Base+0x2e8>)
   14c9e:	mov	r2, r0
   14ca0:	movs	r0, #0
   14ca2:	add	r3, pc
   14ca4:	str	r3, [sp, #0]
   14ca6:	ldr	r3, [pc, #16]	; (14cb8 <help_command_group@@Base+0x2ec>)
   14ca8:	add	r3, pc
   14caa:	bl	149f8 <help_command_group@@Base+0x2c>
   14cae:	add	sp, #12
   14cb0:	ldr.w	pc, [sp], #4
   14cb4:	add	r0, sp, #772	; 0x304
   14cb6:	movs	r2, r0
   14cb8:	add	r0, sp, #696	; 0x2b8
   14cba:	movs	r2, r0
   14cbc:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   14cbe:	strd	r2, r3, [sp, #12]
   14cc2:	mov	r2, r0
   14cc4:	strd	r1, r3, [sp, #4]
   14cc8:	movs	r0, #0
   14cca:	ldr	r3, [pc, #20]	; (14ce0 <help_command_group@@Base+0x314>)
   14ccc:	ldr	r1, [sp, #32]
   14cce:	add	r3, pc
   14cd0:	str	r3, [sp, #0]
   14cd2:	ldr	r3, [pc, #16]	; (14ce4 <help_command_group@@Base+0x318>)
   14cd4:	add	r3, pc
   14cd6:	bl	149f8 <help_command_group@@Base+0x2c>
   14cda:	add	sp, #28
   14cdc:	ldr.w	pc, [sp], #4
   14ce0:	add	r0, sp, #668	; 0x29c
   14ce2:	movs	r2, r0
   14ce4:	add	r0, sp, #604	; 0x25c
   14ce6:	movs	r2, r0
   14ce8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   14cec:	sub.w	sp, sp, #4128	; 0x1020
   14cf0:	sub	sp, #24
   14cf2:	mov	r6, r3
   14cf4:	add.w	r3, sp, #4192	; 0x1060
   14cf8:	ldr	r4, [pc, #164]	; (14da0 <help_command_group@@Base+0x3d4>)
   14cfa:	adds	r3, #8
   14cfc:	mov	r5, r0
   14cfe:	mov	r7, r2
   14d00:	ldr	r0, [pc, #160]	; (14da4 <help_command_group@@Base+0x3d8>)
   14d02:	ldr	r2, [r3, #0]
   14d04:	add.w	r3, sp, #4192	; 0x1060
   14d08:	add	r4, pc
   14d0a:	adds	r3, #24
   14d0c:	add.w	r8, sp, #52	; 0x34
   14d10:	ldr	r1, [r3, #0]
   14d12:	ldr	r0, [r4, r0]
   14d14:	add.w	r3, sp, #4128	; 0x1020
   14d18:	adds	r3, #20
   14d1a:	ldr	r0, [r0, #0]
   14d1c:	str	r0, [r3, #0]
   14d1e:	mov.w	r0, #0
   14d22:	mov	r0, r8
   14d24:	strd	r1, r2, [sp, #40]	; 0x28
   14d28:	bl	16d54 <path_cat_out@@Base>
   14d2c:	ldrd	r1, r2, [sp, #40]	; 0x28
   14d30:	subs	r4, r0, #0
   14d32:	bge.n	14d5a <help_command_group@@Base+0x38e>
   14d34:	ldr	r1, [pc, #112]	; (14da8 <help_command_group@@Base+0x3dc>)
   14d36:	ldr	r0, [pc, #116]	; (14dac <help_command_group@@Base+0x3e0>)
   14d38:	add	r1, pc
   14d3a:	add	r0, pc
   14d3c:	bl	1a900 <__btrfs_error@@Base>
   14d40:	ldr	r1, [pc, #108]	; (14db0 <help_command_group@@Base+0x3e4>)
   14d42:	add.w	r3, sp, #4128	; 0x1020
   14d46:	ldr	r2, [pc, #92]	; (14da4 <help_command_group@@Base+0x3d8>)
   14d48:	adds	r3, #20
   14d4a:	add	r1, pc
   14d4c:	ldr	r2, [r1, r2]
   14d4e:	ldr	r1, [r2, #0]
   14d50:	ldr	r2, [r3, #0]
   14d52:	eors	r1, r2
   14d54:	beq.n	14d94 <help_command_group@@Base+0x3c8>
   14d56:	blx	88e4 <__stack_chk_fail@plt>
   14d5a:	add.w	r3, sp, #4192	; 0x1060
   14d5e:	movs	r0, #0
   14d60:	adds	r3, #16
   14d62:	ldrd	r2, r3, [r3]
   14d66:	str.w	r8, [sp, #24]
   14d6a:	strd	r2, r3, [sp, #32]
   14d6e:	add.w	r3, sp, #4160	; 0x1040
   14d72:	adds	r3, #16
   14d74:	ldrd	r2, r3, [r3]
   14d78:	strd	r7, r6, [sp, #8]
   14d7c:	strd	r2, r3, [sp, #16]
   14d80:	mov	r2, r5
   14d82:	ldr	r3, [pc, #48]	; (14db4 <help_command_group@@Base+0x3e8>)
   14d84:	add	r3, pc
   14d86:	str	r3, [sp, #0]
   14d88:	ldr	r3, [pc, #44]	; (14db8 <help_command_group@@Base+0x3ec>)
   14d8a:	add	r3, pc
   14d8c:	bl	149f8 <help_command_group@@Base+0x2c>
   14d90:	mov	r4, r0
   14d92:	b.n	14d40 <help_command_group@@Base+0x374>
   14d94:	mov	r0, r4
   14d96:	add.w	sp, sp, #4128	; 0x1020
   14d9a:	add	sp, #24
   14d9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   14da0:	ands	r0, r5
   14da2:	movs	r5, r0
   14da4:	lsls	r4, r7, #9
   14da6:	movs	r0, r0
   14da8:	add	r0, sp, #344	; 0x158
   14daa:	movs	r2, r0
   14dac:	add	r7, pc, #616	; (adr r7, 15018 <help_command_group@@Base+0x64c>)
   14dae:	movs	r2, r0
   14db0:	subs	r7, #230	; 0xe6
   14db2:	movs	r5, r0
   14db4:	add	r0, sp, #64	; 0x40
   14db6:	movs	r2, r0
   14db8:	add	r0, sp, #16
   14dba:	movs	r2, r0
   14dbc:	push	{r4, r5, lr}
   14dbe:	sub	sp, #28
   14dc0:	strd	r2, r3, [sp, #8]
   14dc4:	mov	r2, r0
   14dc6:	ldr	r3, [pc, #28]	; (14de4 <help_command_group@@Base+0x418>)
   14dc8:	movs	r0, #0
   14dca:	ldrd	r4, r5, [sp, #40]	; 0x28
   14dce:	add	r3, pc
   14dd0:	str	r3, [sp, #0]
   14dd2:	ldr	r3, [pc, #20]	; (14de8 <help_command_group@@Base+0x41c>)
   14dd4:	ldr	r1, [sp, #48]	; 0x30
   14dd6:	add	r3, pc
   14dd8:	strd	r4, r5, [sp, #16]
   14ddc:	bl	149f8 <help_command_group@@Base+0x2c>
   14de0:	add	sp, #28
   14de2:	pop	{r4, r5, pc}
   14de4:	add	r7, pc, #224	; (adr r7, 14ec8 <help_command_group@@Base+0x4fc>)
   14de6:	movs	r2, r0
   14de8:	strh	r4, [r2, #22]
   14dea:	movs	r2, r0
   14dec:	ldr	r3, [pc, #20]	; (14e04 <help_command_group@@Base+0x438>)
   14dee:	push	{r0, r1, r2, lr}
   14df0:	add	r3, pc
   14df2:	mov	r2, r0
   14df4:	movs	r0, #0
   14df6:	str	r0, [sp, #0]
   14df8:	bl	149f8 <help_command_group@@Base+0x2c>
   14dfc:	add	sp, #12
   14dfe:	ldr.w	pc, [sp], #4
   14e02:	nop
   14e04:	adds	r3, #173	; 0xad
   14e06:	movs	r4, r0
   14e08:	ldr	r3, [pc, #20]	; (14e20 <help_command_group@@Base+0x454>)
   14e0a:	push	{r0, r1, r2, lr}
   14e0c:	add	r3, pc
   14e0e:	mov	r2, r0
   14e10:	movs	r0, #0
   14e12:	str	r0, [sp, #0]
   14e14:	bl	149f8 <help_command_group@@Base+0x2c>
   14e18:	add	sp, #12
   14e1a:	ldr.w	pc, [sp], #4
   14e1e:	nop
   14e20:	adds	r3, #161	; 0xa1
   14e22:	movs	r4, r0
   14e24:	push	{r0, r1, r2, lr}
   14e26:	mov	r3, r1
   14e28:	str	r3, [sp, #4]
   14e2a:	mov	r1, r2
   14e2c:	ldr	r3, [pc, #20]	; (14e44 <help_command_group@@Base+0x478>)
   14e2e:	mov	r2, r0
   14e30:	movs	r0, #0
   14e32:	add	r3, pc
   14e34:	str	r3, [sp, #0]
   14e36:	ldr	r3, [pc, #16]	; (14e48 <help_command_group@@Base+0x47c>)
   14e38:	add	r3, pc
   14e3a:	bl	149f8 <help_command_group@@Base+0x2c>
   14e3e:	add	sp, #12
   14e40:	ldr.w	pc, [sp], #4
   14e44:	add	r7, pc, #580	; (adr r7, 1508c <help_command_group@@Base+0x6c0>)
   14e46:	movs	r2, r0
   14e48:	add	r7, pc, #628	; (adr r7, 150c0 <help_command_group@@Base+0x6f4>)
   14e4a:	movs	r2, r0
   14e4c:	push	{r4, r5, r6, r7, lr}
   14e4e:	mov	r6, r0
   14e50:	ldr	r0, [pc, #120]	; (14ecc <help_command_group@@Base+0x500>)
   14e52:	mov	r5, r1
   14e54:	mov	r1, r2
   14e56:	ldr	r2, [pc, #120]	; (14ed0 <help_command_group@@Base+0x504>)
   14e58:	add	r0, pc
   14e5a:	sub.w	sp, sp, #4096	; 0x1000
   14e5e:	sub	sp, #28
   14e60:	ldr	r2, [r0, r2]
   14e62:	add.w	r3, sp, #4096	; 0x1000
   14e66:	add	r7, sp, #20
   14e68:	adds	r3, #20
   14e6a:	ldr	r2, [r2, #0]
   14e6c:	str	r2, [r3, #0]
   14e6e:	mov.w	r2, #0
   14e72:	mov	r2, r5
   14e74:	mov	r0, r7
   14e76:	str	r1, [sp, #12]
   14e78:	bl	16d54 <path_cat_out@@Base>
   14e7c:	ldr	r1, [sp, #12]
   14e7e:	subs	r4, r0, #0
   14e80:	bge.n	14eaa <help_command_group@@Base+0x4de>
   14e82:	ldr	r1, [pc, #80]	; (14ed4 <help_command_group@@Base+0x508>)
   14e84:	mov	r2, r5
   14e86:	ldr	r0, [pc, #80]	; (14ed8 <help_command_group@@Base+0x50c>)
   14e88:	add	r1, pc
   14e8a:	add	r0, pc
   14e8c:	bl	1a900 <__btrfs_error@@Base>
   14e90:	ldr	r1, [pc, #72]	; (14edc <help_command_group@@Base+0x510>)
   14e92:	add.w	r3, sp, #4096	; 0x1000
   14e96:	ldr	r2, [pc, #56]	; (14ed0 <help_command_group@@Base+0x504>)
   14e98:	adds	r3, #20
   14e9a:	add	r1, pc
   14e9c:	ldr	r2, [r1, r2]
   14e9e:	ldr	r1, [r2, #0]
   14ea0:	ldr	r2, [r3, #0]
   14ea2:	eors	r1, r2
   14ea4:	beq.n	14ec2 <help_command_group@@Base+0x4f6>
   14ea6:	blx	88e4 <__stack_chk_fail@plt>
   14eaa:	ldr	r3, [pc, #52]	; (14ee0 <help_command_group@@Base+0x514>)
   14eac:	mov	r2, r6
   14eae:	movs	r0, #0
   14eb0:	str	r7, [sp, #4]
   14eb2:	add	r3, pc
   14eb4:	str	r3, [sp, #0]
   14eb6:	ldr	r3, [pc, #44]	; (14ee4 <help_command_group@@Base+0x518>)
   14eb8:	add	r3, pc
   14eba:	bl	149f8 <help_command_group@@Base+0x2c>
   14ebe:	mov	r4, r0
   14ec0:	b.n	14e90 <help_command_group@@Base+0x4c4>
   14ec2:	mov	r0, r4
   14ec4:	add.w	sp, sp, #4096	; 0x1000
   14ec8:	add	sp, #28
   14eca:	pop	{r4, r5, r6, r7, pc}
   14ecc:	subs	r6, #216	; 0xd8
   14ece:	movs	r5, r0
   14ed0:	lsls	r4, r7, #9
   14ed2:	movs	r0, r0
   14ed4:	add	r7, pc, #268	; (adr r7, 14fe4 <help_command_group@@Base+0x618>)
   14ed6:	movs	r2, r0
   14ed8:	add	r6, pc, #296	; (adr r6, 15004 <help_command_group@@Base+0x638>)
   14eda:	movs	r2, r0
   14edc:	subs	r6, #150	; 0x96
   14ede:	movs	r5, r0
   14ee0:	add	r7, pc, #68	; (adr r7, 14f28 <help_command_group@@Base+0x55c>)
   14ee2:	movs	r2, r0
   14ee4:	add	r7, pc, #76	; (adr r7, 14f34 <help_command_group@@Base+0x568>)
   14ee6:	movs	r2, r0
   14ee8:	push	{r0, r1, r2, lr}
   14eea:	mov	r3, r1
   14eec:	str	r3, [sp, #4]
   14eee:	mov	r1, r2
   14ef0:	ldr	r3, [pc, #20]	; (14f08 <help_command_group@@Base+0x53c>)
   14ef2:	mov	r2, r0
   14ef4:	movs	r0, #0
   14ef6:	add	r3, pc
   14ef8:	str	r3, [sp, #0]
   14efa:	ldr	r3, [pc, #16]	; (14f0c <help_command_group@@Base+0x540>)
   14efc:	add	r3, pc
   14efe:	bl	149f8 <help_command_group@@Base+0x2c>
   14f02:	add	sp, #12
   14f04:	ldr.w	pc, [sp], #4
   14f08:	add	r6, pc, #820	; (adr r6, 15240 <btrfs_process_fs_features@@Base+0xc>)
   14f0a:	movs	r2, r0
   14f0c:	add	r6, pc, #856	; (adr r6, 15268 <btrfs_process_fs_features@@Base+0x34>)
   14f0e:	movs	r2, r0
   14f10:	ldr	r3, [pc, #20]	; (14f28 <help_command_group@@Base+0x55c>)
   14f12:	push	{r0, r1, r2, lr}
   14f14:	add	r3, pc
   14f16:	mov	r2, r0
   14f18:	movs	r0, #0
   14f1a:	str	r0, [sp, #0]
   14f1c:	bl	149f8 <help_command_group@@Base+0x2c>
   14f20:	add	sp, #12
   14f22:	ldr.w	pc, [sp], #4
   14f26:	nop
   14f28:	add	r6, pc, #792	; (adr r6, 15244 <btrfs_process_fs_features@@Base+0x10>)
   14f2a:	movs	r2, r0
   14f2c:	ldr	r3, [pc, #20]	; (14f44 <help_command_group@@Base+0x578>)
   14f2e:	push	{r0, r1, r2, lr}
   14f30:	add	r3, pc
   14f32:	mov	r2, r0
   14f34:	movs	r0, #0
   14f36:	str	r0, [sp, #0]
   14f38:	bl	149f8 <help_command_group@@Base+0x2c>
   14f3c:	add	sp, #12
   14f3e:	ldr.w	pc, [sp], #4
   14f42:	nop
   14f44:	add	r6, pc, #708	; (adr r6, 1520c <btrfs_parse_features_to_string@@Base+0x30>)
   14f46:	movs	r2, r0
   14f48:	push	{r4, r5, lr}
   14f4a:	sub	sp, #28
   14f4c:	strd	r2, r3, [sp, #8]
   14f50:	mov	r2, r0
   14f52:	ldr	r3, [pc, #28]	; (14f70 <help_command_group@@Base+0x5a4>)
   14f54:	movs	r0, #0
   14f56:	ldrd	r4, r5, [sp, #40]	; 0x28
   14f5a:	add	r3, pc
   14f5c:	str	r3, [sp, #0]
   14f5e:	ldr	r3, [pc, #20]	; (14f74 <help_command_group@@Base+0x5a8>)
   14f60:	ldr	r1, [sp, #48]	; 0x30
   14f62:	add	r3, pc
   14f64:	strd	r4, r5, [sp, #16]
   14f68:	bl	149f8 <help_command_group@@Base+0x2c>
   14f6c:	add	sp, #28
   14f6e:	pop	{r4, r5, pc}
   14f70:	add	r6, pc, #592	; (adr r6, 151c4 <help_command_group@@Base+0x7f8>)
   14f72:	movs	r2, r0
   14f74:	add	r6, pc, #536	; (adr r6, 15190 <help_command_group@@Base+0x7c4>)
   14f76:	movs	r2, r0
   14f78:	ldr	r3, [pc, #20]	; (14f90 <help_command_group@@Base+0x5c4>)
   14f7a:	push	{r0, r1, r2, lr}
   14f7c:	add	r3, pc
   14f7e:	mov	r2, r0
   14f80:	movs	r0, #0
   14f82:	str	r0, [sp, #0]
   14f84:	bl	149f8 <help_command_group@@Base+0x2c>
   14f88:	add	sp, #12
   14f8a:	ldr.w	pc, [sp], #4
   14f8e:	nop
   14f90:	add	r6, pc, #540	; (adr r6, 151b0 <help_command_group@@Base+0x7e4>)
   14f92:	movs	r2, r0
   14f94:	ldr	r3, [pc, #20]	; (14fac <help_command_group@@Base+0x5e0>)
   14f96:	push	{r0, r1, r2, lr}
   14f98:	add	r3, pc
   14f9a:	mov	r2, r0
   14f9c:	movs	r0, #0
   14f9e:	str	r0, [sp, #0]
   14fa0:	bl	149f8 <help_command_group@@Base+0x2c>
   14fa4:	add	sp, #12
   14fa6:	ldr.w	pc, [sp], #4
   14faa:	nop
   14fac:	add	r6, pc, #452	; (adr r6, 15174 <help_command_group@@Base+0x7a8>)
   14fae:	movs	r2, r0
   14fb0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   14fb4:	mov	r6, r2
   14fb6:	ldr	r2, [pc, #116]	; (1502c <help_command_group@@Base+0x660>)
   14fb8:	sub	sp, #120	; 0x78
   14fba:	mov	r5, r3
   14fbc:	ldr	r3, [pc, #112]	; (15030 <help_command_group@@Base+0x664>)
   14fbe:	add	r2, pc
   14fc0:	ldr.w	sl, [sp, #152]	; 0x98
   14fc4:	add	r7, sp, #36	; 0x24
   14fc6:	add.w	r8, sp, #76	; 0x4c
   14fca:	ldr	r3, [r2, r3]
   14fcc:	mov	r4, r0
   14fce:	mov	r0, r1
   14fd0:	mov	r1, r7
   14fd2:	ldr	r3, [r3, #0]
   14fd4:	str	r3, [sp, #116]	; 0x74
   14fd6:	mov.w	r3, #0
   14fda:	ldr.w	r9, [sp, #168]	; 0xa8
   14fde:	blx	8760 <uuid_unparse@plt>
   14fe2:	mov	r1, r8
   14fe4:	mov	r0, sl
   14fe6:	blx	8760 <uuid_unparse@plt>
   14fea:	ldrd	r2, r3, [sp, #160]	; 0xa0
   14fee:	mov	r1, r9
   14ff0:	movs	r0, #1
   14ff2:	str.w	r8, [sp, #16]
   14ff6:	strd	r2, r3, [sp, #24]
   14ffa:	mov	r2, r4
   14ffc:	ldr	r3, [pc, #52]	; (15034 <help_command_group@@Base+0x668>)
   14ffe:	strd	r6, r5, [sp, #8]
   15002:	add	r3, pc
   15004:	str	r3, [sp, #0]
   15006:	ldr	r3, [pc, #48]	; (15038 <help_command_group@@Base+0x66c>)
   15008:	str	r7, [sp, #4]
   1500a:	add	r3, pc
   1500c:	bl	149f8 <help_command_group@@Base+0x2c>
   15010:	ldr	r2, [pc, #40]	; (1503c <help_command_group@@Base+0x670>)
   15012:	ldr	r3, [pc, #28]	; (15030 <help_command_group@@Base+0x664>)
   15014:	add	r2, pc
   15016:	ldr	r3, [r2, r3]
   15018:	ldr	r2, [r3, #0]
   1501a:	ldr	r3, [sp, #116]	; 0x74
   1501c:	eors	r2, r3
   1501e:	beq.n	15024 <help_command_group@@Base+0x658>
   15020:	blx	88e4 <__stack_chk_fail@plt>
   15024:	add	sp, #120	; 0x78
   15026:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1502a:	nop
   1502c:	subs	r5, #114	; 0x72
   1502e:	movs	r5, r0
   15030:	lsls	r4, r7, #9
   15032:	movs	r0, r0
   15034:	add	r6, pc, #56	; (adr r6, 15070 <help_command_group@@Base+0x6a4>)
   15036:	movs	r2, r0
   15038:	adds	r2, #97	; 0x61
   1503a:	movs	r4, r0
   1503c:	subs	r5, #28
   1503e:	movs	r5, r0
   15040:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15044:	mov	r6, r2
   15046:	ldr	r2, [pc, #88]	; (150a0 <help_command_group@@Base+0x6d4>)
   15048:	mov	r5, r3
   1504a:	ldr	r3, [pc, #88]	; (150a4 <help_command_group@@Base+0x6d8>)
   1504c:	sub	sp, #64	; 0x40
   1504e:	add	r2, pc
   15050:	add	r7, sp, #20
   15052:	mov	r4, r0
   15054:	mov	r0, r1
   15056:	ldr	r3, [r2, r3]
   15058:	mov	r1, r7
   1505a:	ldr.w	r8, [sp, #88]	; 0x58
   1505e:	ldr	r3, [r3, #0]
   15060:	str	r3, [sp, #60]	; 0x3c
   15062:	mov.w	r3, #0
   15066:	blx	8760 <uuid_unparse@plt>
   1506a:	ldr	r3, [pc, #60]	; (150a8 <help_command_group@@Base+0x6dc>)
   1506c:	mov	r2, r4
   1506e:	mov	r1, r8
   15070:	movs	r0, #1
   15072:	add	r3, pc
   15074:	str	r3, [sp, #0]
   15076:	ldr	r3, [pc, #52]	; (150ac <help_command_group@@Base+0x6e0>)
   15078:	strd	r6, r5, [sp, #8]
   1507c:	add	r3, pc
   1507e:	str	r7, [sp, #4]
   15080:	bl	149f8 <help_command_group@@Base+0x2c>
   15084:	ldr	r2, [pc, #40]	; (150b0 <help_command_group@@Base+0x6e4>)
   15086:	ldr	r3, [pc, #28]	; (150a4 <help_command_group@@Base+0x6d8>)
   15088:	add	r2, pc
   1508a:	ldr	r3, [r2, r3]
   1508c:	ldr	r2, [r3, #0]
   1508e:	ldr	r3, [sp, #60]	; 0x3c
   15090:	eors	r2, r3
   15092:	beq.n	15098 <help_command_group@@Base+0x6cc>
   15094:	blx	88e4 <__stack_chk_fail@plt>
   15098:	add	sp, #64	; 0x40
   1509a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1509e:	nop
   150a0:	subs	r4, #226	; 0xe2
   150a2:	movs	r5, r0
   150a4:	lsls	r4, r7, #9
   150a6:	movs	r0, r0
   150a8:	add	r5, pc, #884	; (adr r5, 15420 <btrfs_parse_fs_features@@Base+0xd4>)
   150aa:	movs	r2, r0
   150ac:	add	r5, pc, #816	; (adr r5, 153e0 <btrfs_parse_fs_features@@Base+0x94>)
   150ae:	movs	r2, r0
   150b0:	subs	r4, #168	; 0xa8
   150b2:	movs	r5, r0
   150b4:	ldr	r2, [pc, #112]	; (15128 <help_command_group@@Base+0x75c>)
   150b6:	ldr	r3, [pc, #116]	; (1512c <help_command_group@@Base+0x760>)
   150b8:	add	r2, pc
   150ba:	push	{r4, r5, lr}
   150bc:	sub	sp, #68	; 0x44
   150be:	ldr	r3, [r2, r3]
   150c0:	mov	r5, r1
   150c2:	mov	r4, r0
   150c4:	ldr	r3, [r3, #0]
   150c6:	str	r3, [sp, #60]	; 0x3c
   150c8:	mov.w	r3, #0
   150cc:	add	r3, sp, #16
   150ce:	str	r3, [sp, #12]
   150d0:	mov	r1, r3
   150d2:	blx	8930 <localtime_r@plt>
   150d6:	ldr	r3, [sp, #12]
   150d8:	cbnz	r0, 15102 <help_command_group@@Base+0x736>
   150da:	ldrd	r2, r3, [r4]
   150de:	ldr	r0, [pc, #80]	; (15130 <help_command_group@@Base+0x764>)
   150e0:	str	r3, [sp, #0]
   150e2:	add	r0, pc
   150e4:	asrs	r3, r2, #31
   150e6:	bl	1a900 <__btrfs_error@@Base>
   150ea:	mvn.w	r0, #21
   150ee:	ldr	r2, [pc, #68]	; (15134 <help_command_group@@Base+0x768>)
   150f0:	ldr	r3, [pc, #56]	; (1512c <help_command_group@@Base+0x760>)
   150f2:	add	r2, pc
   150f4:	ldr	r3, [r2, r3]
   150f6:	ldr	r2, [r3, #0]
   150f8:	ldr	r3, [sp, #60]	; 0x3c
   150fa:	eors	r2, r3
   150fc:	beq.n	15122 <help_command_group@@Base+0x756>
   150fe:	blx	88e4 <__stack_chk_fail@plt>
   15102:	ldr	r2, [pc, #52]	; (15138 <help_command_group@@Base+0x76c>)
   15104:	movs	r1, #63	; 0x3f
   15106:	mov	r0, r5
   15108:	add	r2, pc
   1510a:	blx	8ac8 <strftime@plt>
   1510e:	cbnz	r0, 1511e <help_command_group@@Base+0x752>
   15110:	ldrd	r2, r3, [r4]
   15114:	ldr	r0, [pc, #36]	; (1513c <help_command_group@@Base+0x770>)
   15116:	str	r3, [sp, #0]
   15118:	add	r0, pc
   1511a:	asrs	r3, r2, #31
   1511c:	b.n	150e6 <help_command_group@@Base+0x71a>
   1511e:	movs	r0, #0
   15120:	b.n	150ee <help_command_group@@Base+0x722>
   15122:	add	sp, #68	; 0x44
   15124:	pop	{r4, r5, pc}
   15126:	nop
   15128:	subs	r4, #120	; 0x78
   1512a:	movs	r5, r0
   1512c:	lsls	r4, r7, #9
   1512e:	movs	r0, r0
   15130:	add	r5, pc, #520	; (adr r5, 1533c <btrfs_list_all_fs_features@@Base+0xc0>)
   15132:	movs	r2, r0
   15134:	subs	r4, #62	; 0x3e
   15136:	movs	r5, r0
   15138:	add	r5, pc, #560	; (adr r5, 1536c <btrfs_parse_fs_features@@Base+0x20>)
   1513a:	movs	r2, r0
   1513c:	add	r5, pc, #528	; (adr r5, 15350 <btrfs_parse_fs_features@@Base+0x4>)
   1513e:	movs	r2, r0
   15140:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15144:	mov	r6, r2
   15146:	ldr	r2, [pc, #128]	; (151c8 <help_command_group@@Base+0x7fc>)
   15148:	mov	r5, r3
   1514a:	ldr	r3, [pc, #128]	; (151cc <help_command_group@@Base+0x800>)
   1514c:	sub	sp, #220	; 0xdc
   1514e:	add	r2, pc
   15150:	add	r7, sp, #20
   15152:	mov	r4, r0
   15154:	mov	r0, r1
   15156:	ldr	r3, [r2, r3]
   15158:	mov	r1, r7
   1515a:	ldr.w	r9, [sp, #248]	; 0xf8
   1515e:	ldr	r3, [r3, #0]
   15160:	str	r3, [sp, #212]	; 0xd4
   15162:	mov.w	r3, #0
   15166:	bl	150b4 <help_command_group@@Base+0x6e8>
   1516a:	cmp	r0, #0
   1516c:	bge.n	15186 <help_command_group@@Base+0x7ba>
   1516e:	mvn.w	r0, #21
   15172:	ldr	r2, [pc, #92]	; (151d0 <help_command_group@@Base+0x804>)
   15174:	ldr	r3, [pc, #84]	; (151cc <help_command_group@@Base+0x800>)
   15176:	add	r2, pc
   15178:	ldr	r3, [r2, r3]
   1517a:	ldr	r2, [r3, #0]
   1517c:	ldr	r3, [sp, #212]	; 0xd4
   1517e:	eors	r2, r3
   15180:	beq.n	151c0 <help_command_group@@Base+0x7f4>
   15182:	blx	88e4 <__stack_chk_fail@plt>
   15186:	add.w	r8, sp, #84	; 0x54
   1518a:	mov	r0, r6
   1518c:	mov	r1, r8
   1518e:	bl	150b4 <help_command_group@@Base+0x6e8>
   15192:	cmp	r0, #0
   15194:	blt.n	1516e <help_command_group@@Base+0x7a2>
   15196:	add	r6, sp, #148	; 0x94
   15198:	mov	r0, r5
   1519a:	mov	r1, r6
   1519c:	bl	150b4 <help_command_group@@Base+0x6e8>
   151a0:	cmp	r0, #0
   151a2:	blt.n	1516e <help_command_group@@Base+0x7a2>
   151a4:	ldr	r3, [pc, #44]	; (151d4 <help_command_group@@Base+0x808>)
   151a6:	mov	r2, r4
   151a8:	mov	r1, r9
   151aa:	strd	r8, r6, [sp, #8]
   151ae:	add	r3, pc
   151b0:	str	r3, [sp, #0]
   151b2:	ldr	r3, [pc, #36]	; (151d8 <help_command_group@@Base+0x80c>)
   151b4:	movs	r0, #0
   151b6:	str	r7, [sp, #4]
   151b8:	add	r3, pc
   151ba:	bl	149f8 <help_command_group@@Base+0x2c>
   151be:	b.n	15172 <help_command_group@@Base+0x7a6>
   151c0:	add	sp, #220	; 0xdc
   151c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   151c6:	nop
   151c8:	subs	r3, #226	; 0xe2
   151ca:	movs	r5, r0
   151cc:	lsls	r4, r7, #9
   151ce:	movs	r0, r0
   151d0:	subs	r3, #186	; 0xba
   151d2:	movs	r5, r0
   151d4:	add	r5, pc, #188	; (adr r5, 15294 <btrfs_list_all_fs_features@@Base+0x18>)
   151d6:	movs	r2, r0
   151d8:	add	r5, pc, #120	; (adr r5, 15254 <btrfs_process_fs_features@@Base+0x20>)
   151da:	movs	r2, r0

000151dc <btrfs_parse_features_to_string@@Base>:
   151dc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151e0:	mov	r5, r0
   151e2:	ldr.w	r8, [pc, #72]	; 1522c <btrfs_parse_features_to_string@@Base+0x50>
   151e6:	mov	r9, r2
   151e8:	ldr.w	fp, [pc, #68]	; 15230 <btrfs_parse_features_to_string@@Base+0x54>
   151ec:	mov	sl, r3
   151ee:	add	r8, pc
   151f0:	movs	r4, #0
   151f2:	add	fp, pc
   151f4:	strb	r4, [r0, #0]
   151f6:	ldrd	r2, r3, [r8, #8]
   151fa:	and.w	r6, r9, r2
   151fe:	and.w	r7, sl, r3
   15202:	orrs.w	r3, r6, r7
   15206:	beq.n	1521e <btrfs_parse_features_to_string@@Base+0x42>
   15208:	ldrb	r3, [r5, #0]
   1520a:	cbz	r3, 15214 <btrfs_parse_features_to_string@@Base+0x38>
   1520c:	mov	r1, fp
   1520e:	mov	r0, r5
   15210:	blx	89c0 <strcat@plt+0x4>
   15214:	ldr.w	r1, [r8]
   15218:	mov	r0, r5
   1521a:	blx	89c0 <strcat@plt+0x4>
   1521e:	adds	r4, #1
   15220:	add.w	r8, r8, #48	; 0x30
   15224:	cmp	r4, #7
   15226:	bne.n	151f6 <btrfs_parse_features_to_string@@Base+0x1a>
   15228:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1522c:	adds	r3, #254	; 0xfe
   1522e:	movs	r5, r0
   15230:	stmia	r0!, {r1, r2}
   15232:	movs	r2, r0

00015234 <btrfs_process_fs_features@@Base>:
   15234:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   15238:	mov	r6, r0
   1523a:	ldr	r4, [pc, #56]	; (15274 <btrfs_process_fs_features@@Base+0x40>)
   1523c:	mov	r7, r1
   1523e:	ldr.w	sl, [pc, #56]	; 15278 <btrfs_process_fs_features@@Base+0x44>
   15242:	movs	r5, #0
   15244:	add	r4, pc
   15246:	add	sl, pc
   15248:	ldrd	r2, r3, [r4, #8]
   1524c:	and.w	r8, r6, r2
   15250:	and.w	r9, r7, r3
   15254:	orrs.w	r3, r8, r9
   15258:	beq.n	15266 <btrfs_process_fs_features@@Base+0x32>
   1525a:	ldr	r3, [r4, #44]	; 0x2c
   1525c:	mov	r1, sl
   1525e:	ldr	r2, [r4, #0]
   15260:	movs	r0, #1
   15262:	blx	8c6c <__printf_chk@plt+0x4>
   15266:	adds	r5, #1
   15268:	adds	r4, #48	; 0x30
   1526a:	cmp	r5, #7
   1526c:	bne.n	15248 <btrfs_process_fs_features@@Base+0x14>
   1526e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   15272:	nop
   15274:	adds	r3, #168	; 0xa8
   15276:	movs	r5, r0
   15278:	add	r4, pc, #712	; (adr r4, 15544 <get_running_kernel_version@@Base+0xe4>)
   1527a:	movs	r2, r0

0001527c <btrfs_list_all_fs_features@@Base>:
   1527c:	ldr	r3, [pc, #168]	; (15328 <btrfs_list_all_fs_features@@Base+0xac>)
   1527e:	ldr	r2, [pc, #172]	; (1532c <btrfs_list_all_fs_features@@Base+0xb0>)
   15280:	add	r3, pc
   15282:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15286:	mov	r7, r0
   15288:	ldr	r5, [r3, r2]
   1528a:	sub	sp, #28
   1528c:	ldr	r0, [pc, #160]	; (15330 <btrfs_list_all_fs_features@@Base+0xb4>)
   1528e:	mov	r8, r1
   15290:	ldr	r4, [pc, #160]	; (15334 <btrfs_list_all_fs_features@@Base+0xb8>)
   15292:	movs	r6, #0
   15294:	ldr	r1, [r5, #0]
   15296:	add	r0, pc
   15298:	blx	8de4 <fputs@plt+0x4>
   1529c:	ldr.w	r9, [pc, #152]	; 15338 <btrfs_list_all_fs_features@@Base+0xbc>
   152a0:	ldr.w	sl, [pc, #152]	; 1533c <btrfs_list_all_fs_features@@Base+0xc0>
   152a4:	add	r4, pc
   152a6:	ldr.w	fp, [pc, #152]	; 15340 <btrfs_list_all_fs_features@@Base+0xc4>
   152aa:	add	r9, pc
   152ac:	add	sl, pc
   152ae:	add	fp, pc
   152b0:	ldrd	r2, r3, [r4, #8]
   152b4:	and.w	r1, r2, r7
   152b8:	str	r1, [sp, #16]
   152ba:	and.w	r1, r3, r8
   152be:	str	r1, [sp, #20]
   152c0:	ldrd	r0, r1, [sp, #16]
   152c4:	orrs	r1, r0
   152c6:	bne.n	15318 <btrfs_list_all_fs_features@@Base+0x9c>
   152c8:	strd	r2, r3, [sp, #8]
   152cc:	movs	r1, #1
   152ce:	ldr	r3, [r4, #44]	; 0x2c
   152d0:	mov	r2, r9
   152d2:	str	r3, [sp, #0]
   152d4:	ldr	r3, [r4, #0]
   152d6:	ldr	r0, [r5, #0]
   152d8:	blx	8ca0 <__fprintf_chk@plt+0x4>
   152dc:	ldr	r3, [r4, #24]
   152de:	cbz	r3, 152ee <btrfs_list_all_fs_features@@Base+0x72>
   152e0:	ldr	r2, [pc, #96]	; (15344 <btrfs_list_all_fs_features@@Base+0xc8>)
   152e2:	movs	r1, #1
   152e4:	ldr	r3, [r4, #20]
   152e6:	ldr	r0, [r5, #0]
   152e8:	add	r2, pc
   152ea:	blx	8ca0 <__fprintf_chk@plt+0x4>
   152ee:	ldr	r3, [r4, #32]
   152f0:	cbz	r3, 15300 <btrfs_list_all_fs_features@@Base+0x84>
   152f2:	ldr	r2, [pc, #84]	; (15348 <btrfs_list_all_fs_features@@Base+0xcc>)
   152f4:	movs	r1, #1
   152f6:	ldr	r3, [r4, #28]
   152f8:	ldr	r0, [r5, #0]
   152fa:	add	r2, pc
   152fc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   15300:	ldr	r3, [r4, #40]	; 0x28
   15302:	cbz	r3, 15310 <btrfs_list_all_fs_features@@Base+0x94>
   15304:	ldr	r3, [r4, #36]	; 0x24
   15306:	mov	r2, fp
   15308:	ldr	r0, [r5, #0]
   1530a:	movs	r1, #1
   1530c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   15310:	ldr	r1, [r5, #0]
   15312:	mov	r0, sl
   15314:	blx	8de4 <fputs@plt+0x4>
   15318:	adds	r6, #1
   1531a:	adds	r4, #48	; 0x30
   1531c:	cmp	r6, #6
   1531e:	bne.n	152b0 <btrfs_list_all_fs_features@@Base+0x34>
   15320:	add	sp, #28
   15322:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15326:	nop
   15328:	subs	r2, #176	; 0xb0
   1532a:	movs	r5, r0
   1532c:	lsls	r4, r1, #10
   1532e:	movs	r0, r0
   15330:	add	r4, pc, #544	; (adr r4, 15554 <btrfs_check_nodesize@@Base+0xc>)
   15332:	movs	r2, r0
   15334:	adds	r3, #72	; 0x48
   15336:	movs	r5, r0
   15338:	add	r4, pc, #592	; (adr r4, 1558c <btrfs_check_nodesize@@Base+0x44>)
   1533a:	movs	r2, r0
   1533c:	cmp	r3, #48	; 0x30
   1533e:	movs	r4, r0
   15340:	add	r4, pc, #736	; (adr r4, 15624 <btrfs_check_nodesize@@Base+0xdc>)
   15342:	movs	r2, r0
   15344:	add	r4, pc, #416	; (adr r4, 154e8 <get_running_kernel_version@@Base+0x88>)
   15346:	movs	r2, r0
   15348:	add	r4, pc, #392	; (adr r4, 154d4 <get_running_kernel_version@@Base+0x74>)
   1534a:	movs	r2, r0

0001534c <btrfs_parse_fs_features@@Base>:
   1534c:	ldr	r2, [pc, #188]	; (1540c <btrfs_parse_fs_features@@Base+0xc0>)
   1534e:	ldr	r3, [pc, #192]	; (15410 <btrfs_parse_fs_features@@Base+0xc4>)
   15350:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15354:	add	r2, pc
   15356:	sub	sp, #20
   15358:	mov	r5, r1
   1535a:	add	r7, sp, #8
   1535c:	ldr	r1, [pc, #180]	; (15414 <btrfs_parse_fs_features@@Base+0xc8>)
   1535e:	ldr	r3, [r2, r3]
   15360:	add	r1, pc
   15362:	mov	r2, r7
   15364:	ldr	r3, [r3, #0]
   15366:	str	r3, [sp, #12]
   15368:	mov.w	r3, #0
   1536c:	movs	r3, #0
   1536e:	str	r3, [sp, #8]
   15370:	blx	8a44 <strtok_r@plt>
   15374:	ldr.w	r9, [pc, #160]	; 15418 <btrfs_parse_fs_features@@Base+0xcc>
   15378:	add	r9, pc
   1537a:	mov	r4, r0
   1537c:	cbnz	r4, 15392 <btrfs_parse_fs_features@@Base+0x46>
   1537e:	ldr	r2, [pc, #156]	; (1541c <btrfs_parse_fs_features@@Base+0xd0>)
   15380:	ldr	r3, [pc, #140]	; (15410 <btrfs_parse_fs_features@@Base+0xc4>)
   15382:	add	r2, pc
   15384:	ldr	r3, [r2, r3]
   15386:	ldr	r2, [r3, #0]
   15388:	ldr	r3, [sp, #12]
   1538a:	eors	r2, r3
   1538c:	beq.n	15404 <btrfs_parse_fs_features@@Base+0xb8>
   1538e:	blx	88e4 <__stack_chk_fail@plt>
   15392:	ldr	r6, [pc, #140]	; (15420 <btrfs_parse_fs_features@@Base+0xd4>)
   15394:	add.w	r8, r4, #1
   15398:	mov.w	fp, #0
   1539c:	add	r6, pc
   1539e:	add.w	sl, r6, #336	; 0x150
   153a2:	ldrb	r2, [r4, #0]
   153a4:	ldr	r3, [r6, #0]
   153a6:	cmp	r2, #94	; 0x5e
   153a8:	bne.n	153ea <btrfs_parse_fs_features@@Base+0x9e>
   153aa:	mov	r0, r3
   153ac:	mov	r1, r8
   153ae:	str	r3, [sp, #4]
   153b0:	blx	8748 <strcmp@plt>
   153b4:	ldr	r3, [sp, #4]
   153b6:	cbnz	r0, 153ea <btrfs_parse_fs_features@@Base+0x9e>
   153b8:	ldrd	r0, r1, [r6, #8]
   153bc:	ldrd	r2, r3, [r5]
   153c0:	bic.w	r2, r2, r0
   153c4:	bic.w	r3, r3, r1
   153c8:	mov.w	fp, #1
   153cc:	strd	r2, r3, [r5]
   153d0:	adds	r6, #48	; 0x30
   153d2:	cmp	sl, r6
   153d4:	bne.n	153a2 <btrfs_parse_fs_features@@Base+0x56>
   153d6:	cmp.w	fp, #0
   153da:	beq.n	1537e <btrfs_parse_fs_features@@Base+0x32>
   153dc:	mov	r2, r7
   153de:	mov	r1, r9
   153e0:	movs	r0, #0
   153e2:	blx	8a44 <strtok_r@plt>
   153e6:	mov	r4, r0
   153e8:	b.n	1537c <btrfs_parse_fs_features@@Base+0x30>
   153ea:	mov	r1, r4
   153ec:	mov	r0, r3
   153ee:	blx	8748 <strcmp@plt>
   153f2:	cmp	r0, #0
   153f4:	bne.n	153d0 <btrfs_parse_fs_features@@Base+0x84>
   153f6:	ldrd	r2, r3, [r5]
   153fa:	ldrd	r0, r1, [r6, #8]
   153fe:	orrs	r2, r0
   15400:	orrs	r3, r1
   15402:	b.n	153c8 <btrfs_parse_fs_features@@Base+0x7c>
   15404:	mov	r0, r4
   15406:	add	sp, #20
   15408:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1540c:	subs	r1, #220	; 0xdc
   1540e:	movs	r5, r0
   15410:	lsls	r4, r7, #9
   15412:	movs	r0, r0
   15414:	str	r2, [sp, #360]	; 0x168
   15416:	movs	r2, r0
   15418:	str	r2, [sp, #264]	; 0x108
   1541a:	movs	r2, r0
   1541c:	subs	r1, #174	; 0xae
   1541e:	movs	r5, r0
   15420:	adds	r2, #80	; 0x50
   15422:	movs	r5, r0

00015424 <print_kernel_version@@Base>:
   15424:	push	{r0, r1, r2, r4, r5, lr}
   15426:	uxtb	r5, r1
   15428:	ldr	r2, [pc, #44]	; (15458 <print_kernel_version@@Base+0x34>)
   1542a:	ubfx	r3, r1, #8, #8
   1542e:	str	r3, [sp, #0]
   15430:	lsrs	r3, r1, #16
   15432:	add	r2, pc
   15434:	movs	r1, #1
   15436:	mov	r4, r0
   15438:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1543c:	cbz	r5, 15452 <print_kernel_version@@Base+0x2e>
   1543e:	ldr	r2, [pc, #28]	; (1545c <print_kernel_version@@Base+0x38>)
   15440:	mov	r3, r5
   15442:	movs	r1, #1
   15444:	mov	r0, r4
   15446:	add	r2, pc
   15448:	add	sp, #12
   1544a:	ldmia.w	sp!, {r4, r5, lr}
   1544e:	b.w	8c9c <__fprintf_chk@plt>
   15452:	add	sp, #12
   15454:	pop	{r4, r5, pc}
   15456:	nop
   15458:	add	r3, pc, #260	; (adr r3, 15560 <btrfs_check_nodesize@@Base+0x18>)
   1545a:	movs	r2, r0
   1545c:	blt.n	1539c <btrfs_parse_fs_features@@Base+0x50>
   1545e:	movs	r2, r0

00015460 <get_running_kernel_version@@Base>:
   15460:	ldr	r2, [pc, #204]	; (15530 <get_running_kernel_version@@Base+0xd0>)
   15462:	ldr	r3, [pc, #208]	; (15534 <get_running_kernel_version@@Base+0xd4>)
   15464:	push	{r4, r5, r6, r7, lr}
   15466:	add	r2, pc
   15468:	sub	sp, #404	; 0x194
   1546a:	add	r6, sp, #4
   1546c:	ldr	r3, [r2, r3]
   1546e:	mov	r5, sp
   15470:	mov	r0, r6
   15472:	ldr	r3, [r3, #0]
   15474:	str	r3, [sp, #396]	; 0x18c
   15476:	mov.w	r3, #0
   1547a:	movs	r3, #0
   1547c:	str	r3, [r5, #0]
   1547e:	blx	88b0 <uname@plt>
   15482:	ldr	r1, [pc, #180]	; (15538 <get_running_kernel_version@@Base+0xd8>)
   15484:	mov	r0, r6
   15486:	add	r1, pc
   15488:	blx	8748 <strcmp@plt>
   1548c:	mov	r4, r0
   1548e:	cbz	r0, 154a0 <get_running_kernel_version@@Base+0x40>
   15490:	ldr	r0, [pc, #168]	; (1553c <get_running_kernel_version@@Base+0xdc>)
   15492:	mov	r1, r6
   15494:	add	r0, pc
   15496:	bl	1a900 <__btrfs_error@@Base>
   1549a:	movs	r0, #1
   1549c:	blx	8b58 <exit@plt>
   154a0:	add.w	r7, sp, #134	; 0x86
   154a4:	movs	r1, #45	; 0x2d
   154a6:	mov	r0, r7
   154a8:	blx	8b7c <strchr@plt>
   154ac:	cbz	r0, 154b0 <get_running_kernel_version@@Base+0x50>
   154ae:	strb	r4, [r0, #0]
   154b0:	ldr	r6, [pc, #140]	; (15540 <get_running_kernel_version@@Base+0xe0>)
   154b2:	mov	r2, r5
   154b4:	mov	r0, r7
   154b6:	add	r6, pc
   154b8:	mov	r1, r6
   154ba:	blx	8a44 <strtok_r@plt>
   154be:	mov	r4, r0
   154c0:	bl	34fa0 <string_is_numerical@@Base>
   154c4:	cbnz	r0, 154de <get_running_kernel_version@@Base+0x7e>
   154c6:	mov.w	r4, #4294967295	; 0xffffffff
   154ca:	ldr	r2, [pc, #120]	; (15544 <get_running_kernel_version@@Base+0xe4>)
   154cc:	ldr	r3, [pc, #100]	; (15534 <get_running_kernel_version@@Base+0xd4>)
   154ce:	add	r2, pc
   154d0:	ldr	r3, [r2, r3]
   154d2:	ldr	r2, [r3, #0]
   154d4:	ldr	r3, [sp, #396]	; 0x18c
   154d6:	eors	r2, r3
   154d8:	beq.n	15528 <get_running_kernel_version@@Base+0xc8>
   154da:	blx	88e4 <__stack_chk_fail@plt>
   154de:	mov	r0, r4
   154e0:	blx	8d64 <atoi@plt>
   154e4:	mov	r2, r5
   154e6:	mov	r1, r6
   154e8:	mov	r4, r0
   154ea:	movs	r0, #0
   154ec:	blx	8a44 <strtok_r@plt>
   154f0:	mov	r7, r0
   154f2:	bl	34fa0 <string_is_numerical@@Base>
   154f6:	cmp	r0, #0
   154f8:	beq.n	154c6 <get_running_kernel_version@@Base+0x66>
   154fa:	mov	r0, r7
   154fc:	blx	8d64 <atoi@plt>
   15500:	mov	r2, r5
   15502:	mov	r1, r6
   15504:	lsls	r3, r0, #8
   15506:	movs	r0, #0
   15508:	orr.w	r4, r3, r4, lsl #16
   1550c:	blx	8a44 <strtok_r@plt>
   15510:	mov	r5, r0
   15512:	cmp	r0, #0
   15514:	beq.n	154ca <get_running_kernel_version@@Base+0x6a>
   15516:	bl	34fa0 <string_is_numerical@@Base>
   1551a:	cmp	r0, #0
   1551c:	beq.n	154ca <get_running_kernel_version@@Base+0x6a>
   1551e:	mov	r0, r5
   15520:	blx	8d64 <atoi@plt>
   15524:	orrs	r4, r0
   15526:	b.n	154ca <get_running_kernel_version@@Base+0x6a>
   15528:	mov	r0, r4
   1552a:	add	sp, #404	; 0x194
   1552c:	pop	{r4, r5, r6, r7, pc}
   1552e:	nop
   15530:	subs	r0, #202	; 0xca
   15532:	movs	r5, r0
   15534:	lsls	r4, r7, #9
   15536:	movs	r0, r0
   15538:	add	r2, pc, #972	; (adr r2, 15908 <fmt_start@@Base+0x4c>)
   1553a:	movs	r2, r0
   1553c:	add	r2, pc, #940	; (adr r2, 158ec <fmt_start@@Base+0x30>)
   1553e:	movs	r2, r0
   15540:	ldrb	r3, [r3, #5]
   15542:	movs	r2, r0
   15544:	subs	r0, #98	; 0x62
   15546:	movs	r5, r0

00015548 <btrfs_check_nodesize@@Base>:
   15548:	cmp	r0, r1
   1554a:	push	{r4, r6, r7, lr}
   1554c:	mov	r4, r0
   1554e:	bcs.n	15562 <btrfs_check_nodesize@@Base+0x1a>
   15550:	mov	r2, r1
   15552:	mov	r1, r0
   15554:	ldr	r0, [pc, #72]	; (155a0 <btrfs_check_nodesize@@Base+0x58>)
   15556:	add	r0, pc
   15558:	bl	1a900 <__btrfs_error@@Base>
   1555c:	mov.w	r0, #4294967295	; 0xffffffff
   15560:	pop	{r4, r6, r7, pc}
   15562:	cmp.w	r0, #65536	; 0x10000
   15566:	bls.n	15574 <btrfs_check_nodesize@@Base+0x2c>
   15568:	mov	r1, r0
   1556a:	ldr	r0, [pc, #56]	; (155a4 <btrfs_check_nodesize@@Base+0x5c>)
   1556c:	mov.w	r2, #65536	; 0x10000
   15570:	add	r0, pc
   15572:	b.n	15558 <btrfs_check_nodesize@@Base+0x10>
   15574:	subs	r3, r1, #1
   15576:	ands	r0, r3
   15578:	beq.n	15584 <btrfs_check_nodesize@@Base+0x3c>
   1557a:	ldr	r0, [pc, #44]	; (155a8 <btrfs_check_nodesize@@Base+0x60>)
   1557c:	mov	r2, r1
   1557e:	mov	r1, r4
   15580:	add	r0, pc
   15582:	b.n	15558 <btrfs_check_nodesize@@Base+0x10>
   15584:	and.w	r6, r2, #4
   15588:	mov	r7, r0
   1558a:	orrs.w	r3, r6, r7
   1558e:	beq.n	15560 <btrfs_check_nodesize@@Base+0x18>
   15590:	cmp	r4, r1
   15592:	beq.n	15560 <btrfs_check_nodesize@@Base+0x18>
   15594:	ldr	r0, [pc, #20]	; (155ac <btrfs_check_nodesize@@Base+0x64>)
   15596:	mov	r2, r1
   15598:	mov	r1, r4
   1559a:	add	r0, pc
   1559c:	b.n	15558 <btrfs_check_nodesize@@Base+0x10>
   1559e:	nop
   155a0:	add	r2, pc, #256	; (adr r2, 156a4 <fmt_end@@Base+0x2c>)
   155a2:	movs	r2, r0
   155a4:	add	r2, pc, #304	; (adr r2, 156d8 <fmt_end@@Base+0x60>)
   155a6:	movs	r2, r0
   155a8:	add	r2, pc, #388	; (adr r2, 15730 <fmt_end_list_value@@Base+0x4>)
   155aa:	movs	r2, r0
   155ac:	add	r2, pc, #444	; (adr r2, 1576c <fmt_start_value@@Base+0x18>)
   155ae:	movs	r2, r0
   155b0:	push	{r4, lr}
   155b2:	mov	r4, r0
   155b4:	subs	r4, #1
   155b6:	bcs.n	155ba <btrfs_check_nodesize@@Base+0x72>
   155b8:	pop	{r4, pc}
   155ba:	movs	r0, #32
   155bc:	blx	8c08 <putchar@plt+0x4>
   155c0:	movs	r0, #32
   155c2:	blx	8c08 <putchar@plt+0x4>
   155c6:	b.n	155b4 <btrfs_check_nodesize@@Base+0x6c>
   155c8:	push	{r4, lr}
   155ca:	mov	r4, r0
   155cc:	subs	r4, #1
   155ce:	bcs.n	155d2 <btrfs_check_nodesize@@Base+0x8a>
   155d0:	pop	{r4, pc}
   155d2:	movs	r0, #32
   155d4:	blx	8c08 <putchar@plt+0x4>
   155d8:	b.n	155cc <btrfs_check_nodesize@@Base+0x84>
   155da:	ldr	r3, [pc, #92]	; (15638 <btrfs_check_nodesize@@Base+0xf0>)
   155dc:	ldr	r2, [pc, #92]	; (1563c <btrfs_check_nodesize@@Base+0xf4>)
   155de:	add	r3, pc
   155e0:	push	{r4, lr}
   155e2:	mov	r4, r0
   155e4:	ldr	r3, [r3, r2]
   155e6:	ldr	r3, [r3, #0]
   155e8:	cmp	r3, #8
   155ea:	bne.n	1560c <btrfs_check_nodesize@@Base+0xc4>
   155ec:	ldr	r3, [r0, #8]
   155ee:	adds	r3, #8
   155f0:	ldr.w	r3, [r0, r3, lsl #2]
   155f4:	cbnz	r3, 1560e <btrfs_check_nodesize@@Base+0xc6>
   155f6:	movs	r0, #10
   155f8:	blx	8c08 <putchar@plt+0x4>
   155fc:	ldr	r0, [r4, #8]
   155fe:	bl	155b0 <btrfs_check_nodesize@@Base+0x68>
   15602:	ldr	r3, [r4, #8]
   15604:	movs	r2, #1
   15606:	adds	r3, #8
   15608:	str.w	r2, [r4, r3, lsl #2]
   1560c:	pop	{r4, pc}
   1560e:	cmp	r3, #1
   15610:	bne.n	15628 <btrfs_check_nodesize@@Base+0xe0>
   15612:	ldr	r0, [pc, #44]	; (15640 <btrfs_check_nodesize@@Base+0xf8>)
   15614:	add	r0, pc
   15616:	blx	8a78 <puts@plt+0x4>
   1561a:	ldr	r0, [r4, #8]
   1561c:	bl	155b0 <btrfs_check_nodesize@@Base+0x68>
   15620:	ldr	r3, [r4, #8]
   15622:	movs	r2, #2
   15624:	adds	r3, #8
   15626:	b.n	15608 <btrfs_check_nodesize@@Base+0xc0>
   15628:	ldr	r0, [pc, #24]	; (15644 <btrfs_check_nodesize@@Base+0xfc>)
   1562a:	add	r0, pc
   1562c:	blx	8a78 <puts@plt+0x4>
   15630:	ldr	r0, [r4, #8]
   15632:	ldmia.w	sp!, {r4, lr}
   15636:	b.n	155b0 <btrfs_check_nodesize@@Base+0x68>
   15638:	adds	r7, #82	; 0x52
   1563a:	movs	r5, r0
   1563c:	lsls	r0, r7, #9
   1563e:	movs	r0, r0
   15640:	ldrh	r6, [r4, #60]	; 0x3c
   15642:	movs	r2, r0
   15644:	ldrh	r0, [r2, #60]	; 0x3c
   15646:	movs	r2, r0
   15648:	push	{r4, lr}
   1564a:	ldr	r4, [r0, #4]
   1564c:	ldr	r1, [pc, #32]	; (15670 <btrfs_check_nodesize@@Base+0x128>)
   1564e:	mov	r0, r4
   15650:	add	r1, pc
   15652:	blx	8748 <strcmp@plt>
   15656:	cbz	r0, 1566e <btrfs_check_nodesize@@Base+0x126>
   15658:	ldr	r1, [pc, #24]	; (15674 <btrfs_check_nodesize@@Base+0x12c>)
   1565a:	mov	r0, r4
   1565c:	add	r1, pc
   1565e:	blx	8748 <strcmp@plt>
   15662:	cbz	r0, 1566e <btrfs_check_nodesize@@Base+0x126>
   15664:	ldmia.w	sp!, {r4, lr}
   15668:	movs	r0, #34	; 0x22
   1566a:	b.w	8c04 <putchar@plt>
   1566e:	pop	{r4, pc}
   15670:	add	r3, pc, #364	; (adr r3, 157e0 <fmt_print_start_group@@Base+0x1c>)
   15672:	movs	r2, r0
   15674:	ble.n	156f0 <fmt_start_list_value@@Base>
   15676:	movs	r2, r0

00015678 <fmt_end@@Base>:
   15678:	push	{r3, r4, r5, lr}
   1567a:	mov	r4, r0
   1567c:	ldr	r3, [r0, #8]
   1567e:	ldr	r5, [pc, #88]	; (156d8 <fmt_end@@Base+0x60>)
   15680:	cmp	r3, #1
   15682:	add	r5, pc
   15684:	beq.n	15694 <fmt_end@@Base+0x1c>
   15686:	ldr	r3, [pc, #84]	; (156dc <fmt_end@@Base+0x64>)
   15688:	ldr	r0, [pc, #84]	; (156e0 <fmt_end@@Base+0x68>)
   1568a:	ldr	r3, [r5, r3]
   1568c:	add	r0, pc
   1568e:	ldr	r1, [r3, #0]
   15690:	blx	8de4 <fputs@plt+0x4>
   15694:	ldr	r3, [pc, #76]	; (156e4 <fmt_end@@Base+0x6c>)
   15696:	ldr	r3, [r5, r3]
   15698:	ldr	r3, [r3, #0]
   1569a:	lsls	r2, r3, #29
   1569c:	bpl.n	156a8 <fmt_end@@Base+0x30>
   1569e:	ldmia.w	sp!, {r3, r4, r5, lr}
   156a2:	movs	r0, #10
   156a4:	b.w	8c04 <putchar@plt>
   156a8:	lsls	r3, r3, #28
   156aa:	bpl.n	156d6 <fmt_end@@Base+0x5e>
   156ac:	ldr	r3, [r4, #8]
   156ae:	cmp	r3, #0
   156b0:	bgt.n	156c0 <fmt_end@@Base+0x48>
   156b2:	ldr	r0, [pc, #52]	; (156e8 <fmt_end@@Base+0x70>)
   156b4:	add	r0, pc
   156b6:	blx	8a78 <puts@plt+0x4>
   156ba:	movs	r0, #1
   156bc:	blx	8b58 <exit@plt>
   156c0:	subs	r3, #1
   156c2:	mov	r0, r4
   156c4:	str	r3, [r4, #8]
   156c6:	bl	155da <btrfs_check_nodesize@@Base+0x92>
   156ca:	ldr	r0, [pc, #32]	; (156ec <fmt_end@@Base+0x74>)
   156cc:	ldmia.w	sp!, {r3, r4, r5, lr}
   156d0:	add	r0, pc
   156d2:	b.w	8a74 <puts@plt>
   156d6:	pop	{r3, r4, r5, pc}
   156d8:	adds	r6, #174	; 0xae
   156da:	movs	r5, r0
   156dc:	lsls	r4, r1, #10
   156de:	movs	r0, r0
   156e0:	add	r3, pc, #144	; (adr r3, 15774 <fmt_start_value@@Base+0x20>)
   156e2:	movs	r2, r0
   156e4:	lsls	r0, r7, #9
   156e6:	movs	r0, r0
   156e8:	add	r3, pc, #80	; (adr r3, 1573c <fmt_end_list_value@@Base+0x10>)
   156ea:	movs	r2, r0
   156ec:	add	r3, pc, #136	; (adr r3, 15778 <fmt_start_value@@Base+0x24>)
   156ee:	movs	r2, r0

000156f0 <fmt_start_list_value@@Base>:
   156f0:	ldr	r3, [pc, #48]	; (15724 <fmt_start_list_value@@Base+0x34>)
   156f2:	ldr	r2, [pc, #52]	; (15728 <fmt_start_list_value@@Base+0x38>)
   156f4:	add	r3, pc
   156f6:	push	{r4, lr}
   156f8:	mov	r4, r0
   156fa:	ldr	r3, [r3, r2]
   156fc:	ldr	r3, [r3, #0]
   156fe:	cmp	r3, #4
   15700:	bne.n	1570a <fmt_start_list_value@@Base+0x1a>
   15702:	ldmia.w	sp!, {r4, lr}
   15706:	ldr	r0, [r0, #4]
   15708:	b.n	155c8 <btrfs_check_nodesize@@Base+0x80>
   1570a:	cmp	r3, #8
   1570c:	bne.n	15722 <fmt_start_list_value@@Base+0x32>
   1570e:	bl	155da <btrfs_check_nodesize@@Base+0x92>
   15712:	ldr	r0, [r4, #8]
   15714:	bl	155b0 <btrfs_check_nodesize@@Base+0x68>
   15718:	ldmia.w	sp!, {r4, lr}
   1571c:	movs	r0, #34	; 0x22
   1571e:	b.w	8c04 <putchar@plt>
   15722:	pop	{r4, pc}
   15724:	adds	r6, #60	; 0x3c
   15726:	movs	r5, r0
   15728:	lsls	r0, r7, #9
	...

0001572c <fmt_end_list_value@@Base>:
   1572c:	ldr	r3, [pc, #28]	; (1574c <fmt_end_list_value@@Base+0x20>)
   1572e:	ldr	r2, [pc, #32]	; (15750 <fmt_end_list_value@@Base+0x24>)
   15730:	add	r3, pc
   15732:	ldr	r3, [r3, r2]
   15734:	ldr	r3, [r3, #0]
   15736:	cmp	r3, #4
   15738:	bne.n	15740 <fmt_end_list_value@@Base+0x14>
   1573a:	movs	r0, #10
   1573c:	b.w	8c04 <putchar@plt>
   15740:	cmp	r3, #8
   15742:	bne.n	15748 <fmt_end_list_value@@Base+0x1c>
   15744:	movs	r0, #34	; 0x22
   15746:	b.n	1573c <fmt_end_list_value@@Base+0x10>
   15748:	bx	lr
   1574a:	nop
   1574c:	adds	r6, #0
   1574e:	movs	r5, r0
   15750:	lsls	r0, r7, #9
	...

00015754 <fmt_start_value@@Base>:
   15754:	ldr	r3, [pc, #64]	; (15798 <fmt_start_value@@Base+0x44>)
   15756:	mov	r0, r1
   15758:	ldr	r2, [pc, #64]	; (1579c <fmt_start_value@@Base+0x48>)
   1575a:	add	r3, pc
   1575c:	push	{r4, lr}
   1575e:	ldr	r3, [r3, r2]
   15760:	ldr	r3, [r3, #0]
   15762:	cmp	r3, #4
   15764:	bne.n	1578e <fmt_start_value@@Base+0x3a>
   15766:	ldr	r4, [r1, #4]
   15768:	ldr	r1, [pc, #52]	; (157a0 <fmt_start_value@@Base+0x4c>)
   1576a:	mov	r0, r4
   1576c:	add	r1, pc
   1576e:	blx	8748 <strcmp@plt>
   15772:	cbnz	r0, 1577e <fmt_start_value@@Base+0x2a>
   15774:	ldmia.w	sp!, {r4, lr}
   15778:	movs	r0, #10
   1577a:	b.w	8c04 <putchar@plt>
   1577e:	ldr	r1, [pc, #36]	; (157a4 <fmt_start_value@@Base+0x50>)
   15780:	mov	r0, r4
   15782:	add	r1, pc
   15784:	blx	8748 <strcmp@plt>
   15788:	cmp	r0, #0
   1578a:	beq.n	15774 <fmt_start_value@@Base+0x20>
   1578c:	pop	{r4, pc}
   1578e:	cmp	r3, #8
   15790:	bne.n	1578c <fmt_start_value@@Base+0x38>
   15792:	ldmia.w	sp!, {r4, lr}
   15796:	b.n	15648 <btrfs_check_nodesize@@Base+0x100>
   15798:	adds	r5, #214	; 0xd6
   1579a:	movs	r5, r0
   1579c:	lsls	r0, r7, #9
   1579e:	movs	r0, r0
   157a0:	add	r2, pc, #252	; (adr r2, 158a0 <fmt_print_end_group@@Base+0x54>)
   157a2:	movs	r2, r0
   157a4:	bgt.n	157d4 <fmt_print_start_group@@Base+0x10>
   157a6:	movs	r2, r0

000157a8 <fmt_end_value@@Base>:
   157a8:	ldr	r3, [pc, #16]	; (157bc <fmt_end_value@@Base+0x14>)
   157aa:	mov	r0, r1
   157ac:	ldr	r2, [pc, #16]	; (157c0 <fmt_end_value@@Base+0x18>)
   157ae:	add	r3, pc
   157b0:	ldr	r3, [r3, r2]
   157b2:	ldr	r3, [r3, #0]
   157b4:	cmp	r3, #8
   157b6:	bne.n	157ba <fmt_end_value@@Base+0x12>
   157b8:	b.n	15648 <btrfs_check_nodesize@@Base+0x100>
   157ba:	bx	lr
   157bc:	adds	r5, #130	; 0x82
   157be:	movs	r5, r0
   157c0:	lsls	r0, r7, #9
	...

000157c4 <fmt_print_start_group@@Base>:
   157c4:	ldr	r3, [pc, #108]	; (15834 <fmt_print_start_group@@Base+0x70>)
   157c6:	push	{r4, r5, r6, lr}
   157c8:	mov	r4, r2
   157ca:	ldr	r2, [pc, #108]	; (15838 <fmt_print_start_group@@Base+0x74>)
   157cc:	add	r3, pc
   157ce:	mov	r5, r0
   157d0:	mov	r6, r1
   157d2:	ldr	r3, [r3, r2]
   157d4:	ldr	r3, [r3, #0]
   157d6:	cmp	r3, #8
   157d8:	bne.n	15832 <fmt_print_start_group@@Base+0x6e>
   157da:	bl	155da <btrfs_check_nodesize@@Base+0x92>
   157de:	ldr	r3, [r5, #8]
   157e0:	cmp	r3, #14
   157e2:	ble.n	157f6 <fmt_print_start_group@@Base+0x32>
   157e4:	ldr	r1, [pc, #84]	; (1583c <fmt_print_start_group@@Base+0x78>)
   157e6:	movs	r2, #16
   157e8:	add	r1, pc
   157ea:	movs	r0, #1
   157ec:	blx	8c6c <__printf_chk@plt+0x4>
   157f0:	movs	r0, #1
   157f2:	blx	8b58 <exit@plt>
   157f6:	adds	r2, r3, #1
   157f8:	cmp	r4, #1
   157fa:	add.w	r1, r5, r2
   157fe:	add.w	r3, r3, #9
   15802:	str	r2, [r5, #8]
   15804:	strb	r4, [r1, #16]
   15806:	mov.w	r1, #0
   1580a:	str.w	r1, [r5, r3, lsl #2]
   1580e:	bne.n	15820 <fmt_print_start_group@@Base+0x5c>
   15810:	ldr	r1, [pc, #44]	; (15840 <fmt_print_start_group@@Base+0x7c>)
   15812:	mov	r2, r6
   15814:	add	r1, pc
   15816:	ldmia.w	sp!, {r4, r5, r6, lr}
   1581a:	movs	r0, #1
   1581c:	b.w	8c68 <__printf_chk@plt>
   15820:	cmp	r4, #2
   15822:	bne.n	1582c <fmt_print_start_group@@Base+0x68>
   15824:	ldr	r1, [pc, #28]	; (15844 <fmt_print_start_group@@Base+0x80>)
   15826:	mov	r2, r6
   15828:	add	r1, pc
   1582a:	b.n	15816 <fmt_print_start_group@@Base+0x52>
   1582c:	ldr	r1, [pc, #24]	; (15848 <fmt_print_start_group@@Base+0x84>)
   1582e:	add	r1, pc
   15830:	b.n	157ea <fmt_print_start_group@@Base+0x26>
   15832:	pop	{r4, r5, r6, pc}
   15834:	adds	r5, #100	; 0x64
   15836:	movs	r5, r0
   15838:	lsls	r0, r7, #9
   1583a:	movs	r0, r0
   1583c:	add	r2, pc, #48	; (adr r2, 15870 <fmt_print_end_group@@Base+0x24>)
   1583e:	movs	r2, r0
   15840:	add	r2, pc, #48	; (adr r2, 15874 <fmt_print_end_group@@Base+0x28>)
   15842:	movs	r2, r0
   15844:	add	r2, pc, #0	; (adr r2, 15848 <fmt_print_start_group@@Base+0x84>)
   15846:	movs	r2, r0
   15848:	add	r2, pc, #8	; (adr r2, 15854 <fmt_print_end_group@@Base+0x8>)
   1584a:	movs	r2, r0

0001584c <fmt_print_end_group@@Base>:
   1584c:	push	{r3, r4, r5, lr}
   1584e:	mov	r4, r0
   15850:	ldr	r3, [pc, #88]	; (158ac <fmt_print_end_group@@Base+0x60>)
   15852:	ldr	r2, [pc, #92]	; (158b0 <fmt_print_end_group@@Base+0x64>)
   15854:	add	r3, pc
   15856:	ldr	r3, [r3, r2]
   15858:	ldr	r3, [r3, #0]
   1585a:	cmp	r3, #8
   1585c:	bne.n	158aa <fmt_print_end_group@@Base+0x5e>
   1585e:	ldr	r3, [r0, #8]
   15860:	adds	r2, r0, r3
   15862:	cmp	r3, #0
   15864:	ldrb	r5, [r2, #16]
   15866:	bgt.n	15876 <fmt_print_end_group@@Base+0x2a>
   15868:	ldr	r0, [pc, #72]	; (158b4 <fmt_print_end_group@@Base+0x68>)
   1586a:	add	r0, pc
   1586c:	blx	8a78 <puts@plt+0x4>
   15870:	movs	r0, #1
   15872:	blx	8b58 <exit@plt>
   15876:	subs	r3, #1
   15878:	str	r3, [r0, #8]
   1587a:	movs	r0, #10
   1587c:	blx	8c08 <putchar@plt+0x4>
   15880:	ldr	r0, [r4, #8]
   15882:	bl	155b0 <btrfs_check_nodesize@@Base+0x68>
   15886:	cmp	r5, #1
   15888:	bne.n	15894 <fmt_print_end_group@@Base+0x48>
   1588a:	movs	r0, #125	; 0x7d
   1588c:	ldmia.w	sp!, {r3, r4, r5, lr}
   15890:	b.w	8c04 <putchar@plt>
   15894:	cmp	r5, #2
   15896:	bne.n	1589c <fmt_print_end_group@@Base+0x50>
   15898:	movs	r0, #93	; 0x5d
   1589a:	b.n	1588c <fmt_print_end_group@@Base+0x40>
   1589c:	ldr	r1, [pc, #24]	; (158b8 <fmt_print_end_group@@Base+0x6c>)
   1589e:	movs	r0, #1
   158a0:	ldr	r2, [r4, #8]
   158a2:	add	r1, pc
   158a4:	blx	8c6c <__printf_chk@plt+0x4>
   158a8:	b.n	15870 <fmt_print_end_group@@Base+0x24>
   158aa:	pop	{r3, r4, r5, pc}
   158ac:	adds	r4, #220	; 0xdc
   158ae:	movs	r5, r0
   158b0:	lsls	r0, r7, #9
   158b2:	movs	r0, r0
   158b4:	add	r1, pc, #376	; (adr r1, 15a30 <fmt_print@@Base+0x100>)
   158b6:	movs	r2, r0
   158b8:	add	r1, pc, #568	; (adr r1, 15af4 <fmt_print@@Base+0x1c4>)
   158ba:	movs	r2, r0

000158bc <fmt_start@@Base>:
   158bc:	push	{r4, r5, r6, lr}
   158be:	mov	r4, r0
   158c0:	ldr	r0, [pc, #92]	; (15920 <fmt_start@@Base+0x64>)
   158c2:	movs	r5, #1
   158c4:	strd	r2, r3, [r4]
   158c8:	ldr	r3, [pc, #88]	; (15924 <fmt_start@@Base+0x68>)
   158ca:	add	r0, pc
   158cc:	str	r1, [r4, #12]
   158ce:	str	r5, [r4, #8]
   158d0:	ldr	r3, [r0, r3]
   158d2:	ldr	r3, [r3, #0]
   158d4:	lsls	r3, r3, #28
   158d6:	bpl.n	1591e <fmt_start@@Base+0x62>
   158d8:	movs	r0, #123	; 0x7b
   158da:	ldr	r6, [pc, #76]	; (15928 <fmt_start@@Base+0x6c>)
   158dc:	blx	8c08 <putchar@plt+0x4>
   158e0:	ldr	r3, [r4, #8]
   158e2:	add	r6, pc
   158e4:	mov	r0, r4
   158e6:	adds	r2, r4, r3
   158e8:	adds	r3, #8
   158ea:	mov	r1, r6
   158ec:	strb	r5, [r2, #16]
   158ee:	movs	r2, #0
   158f0:	str.w	r2, [r4, r3, lsl #2]
   158f4:	mov	r2, r5
   158f6:	bl	157c4 <fmt_print_start_group@@Base>
   158fa:	mov	r0, r4
   158fc:	bl	155da <btrfs_check_nodesize@@Base+0x92>
   15900:	ldr	r1, [pc, #40]	; (1592c <fmt_start@@Base+0x70>)
   15902:	mov	r0, r5
   15904:	add	r1, pc
   15906:	blx	8c6c <__printf_chk@plt+0x4>
   1590a:	ldr	r3, [r4, #8]
   1590c:	mov	r1, r6
   1590e:	mov	r0, r4
   15910:	adds	r3, #8
   15912:	str.w	r5, [r4, r3, lsl #2]
   15916:	ldmia.w	sp!, {r4, r5, r6, lr}
   1591a:	b.w	1584c <fmt_print_end_group@@Base>
   1591e:	pop	{r4, r5, r6, pc}
   15920:	adds	r4, #102	; 0x66
   15922:	movs	r5, r0
   15924:	lsls	r0, r7, #9
   15926:	movs	r0, r0
   15928:	add	r1, pc, #484	; (adr r1, 15b10 <fmt_print@@Base+0x1e0>)
   1592a:	movs	r2, r0
   1592c:	add	r1, pc, #384	; (adr r1, 15ab0 <fmt_print@@Base+0x180>)
   1592e:	movs	r2, r0

00015930 <fmt_print@@Base>:
   15930:	push	{r1, r2, r3}
   15932:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15936:	mov	r5, r0
   15938:	sub	sp, #332	; 0x14c
   1593a:	ldr	r0, [pc, #572]	; (15b78 <fmt_print@@Base+0x248>)
   1593c:	add	r3, sp, #356	; 0x164
   1593e:	ldr	r1, [pc, #572]	; (15b7c <fmt_print@@Base+0x24c>)
   15940:	add	r0, pc
   15942:	ldr	r4, [r5, #12]
   15944:	ldr.w	r2, [r3], #4
   15948:	add	r6, sp, #16
   1594a:	ldr	r1, [r0, r1]
   1594c:	ldr	r7, [pc, #560]	; (15b80 <fmt_print@@Base+0x250>)
   1594e:	ldr	r1, [r1, #0]
   15950:	str	r1, [sp, #324]	; 0x144
   15952:	mov.w	r1, #0
   15956:	str	r3, [r6, #0]
   15958:	add	r7, pc
   1595a:	ldr	r1, [r4, #0]
   1595c:	cbnz	r1, 1596e <fmt_print@@Base+0x3e>
   1595e:	ldr	r1, [pc, #548]	; (15b84 <fmt_print@@Base+0x254>)
   15960:	movs	r0, #1
   15962:	add	r1, pc
   15964:	blx	8c6c <__printf_chk@plt+0x4>
   15968:	movs	r0, #1
   1596a:	blx	8b58 <exit@plt>
   1596e:	mov	r0, r2
   15970:	str	r2, [sp, #12]
   15972:	blx	8748 <strcmp@plt>
   15976:	cmp	r0, #0
   15978:	beq.w	15aea <fmt_print@@Base+0x1ba>
   1597c:	ldr	r2, [sp, #12]
   1597e:	adds	r4, #16
   15980:	b.n	1595a <fmt_print@@Base+0x2a>
   15982:	cmp	r3, #8
   15984:	bne.w	15b36 <fmt_print@@Base+0x206>
   15988:	ldr	r7, [r4, #4]
   1598a:	ldr	r1, [pc, #508]	; (15b88 <fmt_print@@Base+0x258>)
   1598c:	mov	r0, r7
   1598e:	add	r1, pc
   15990:	blx	8748 <strcmp@plt>
   15994:	cbnz	r0, 159a2 <fmt_print@@Base+0x72>
   15996:	movs	r2, #2
   15998:	ldr	r1, [r4, #12]
   1599a:	mov	r0, r5
   1599c:	bl	157c4 <fmt_print_start_group@@Base>
   159a0:	b.n	15b36 <fmt_print@@Base+0x206>
   159a2:	ldr	r1, [pc, #488]	; (15b8c <fmt_print@@Base+0x25c>)
   159a4:	mov	r0, r7
   159a6:	add	r1, pc
   159a8:	blx	8748 <strcmp@plt>
   159ac:	cbnz	r0, 159b2 <fmt_print@@Base+0x82>
   159ae:	movs	r2, #1
   159b0:	b.n	15998 <fmt_print@@Base+0x68>
   159b2:	mov	r0, r5
   159b4:	bl	155da <btrfs_check_nodesize@@Base+0x92>
   159b8:	ldr	r1, [pc, #468]	; (15b90 <fmt_print@@Base+0x260>)
   159ba:	ldr	r2, [r4, #12]
   159bc:	movs	r0, #1
   159be:	add	r1, pc
   159c0:	blx	8c6c <__printf_chk@plt+0x4>
   159c4:	b.n	15b36 <fmt_print@@Base+0x206>
   159c6:	ldr	r1, [pc, #460]	; (15b94 <fmt_print@@Base+0x264>)
   159c8:	mov	r0, r7
   159ca:	add	r1, pc
   159cc:	blx	8748 <strcmp@plt>
   159d0:	cbnz	r0, 15a04 <fmt_print@@Base+0xd4>
   159d2:	ldr	r3, [r6, #0]
   159d4:	adds	r2, r3, #4
   159d6:	str	r2, [r6, #0]
   159d8:	ldr	r6, [r3, #0]
   159da:	mov	r0, r6
   159dc:	blx	8be8 <uuid_is_null@plt>
   159e0:	cbz	r0, 159ea <fmt_print@@Base+0xba>
   159e2:	movs	r0, #45	; 0x2d
   159e4:	blx	8c08 <putchar@plt+0x4>
   159e8:	b.n	15b52 <fmt_print@@Base+0x222>
   159ea:	add	r2, sp, #68	; 0x44
   159ec:	mov	r0, r6
   159ee:	str	r2, [sp, #12]
   159f0:	mov	r1, r2
   159f2:	blx	8760 <uuid_unparse@plt>
   159f6:	ldr	r1, [pc, #416]	; (15b98 <fmt_print@@Base+0x268>)
   159f8:	ldr	r2, [sp, #12]
   159fa:	add	r1, pc
   159fc:	movs	r0, #1
   159fe:	blx	8c6c <__printf_chk@plt+0x4>
   15a02:	b.n	15b52 <fmt_print@@Base+0x222>
   15a04:	ldr	r1, [pc, #404]	; (15b9c <fmt_print@@Base+0x26c>)
   15a06:	mov	r0, r7
   15a08:	add	r1, pc
   15a0a:	blx	8748 <strcmp@plt>
   15a0e:	cbnz	r0, 15a44 <fmt_print@@Base+0x114>
   15a10:	ldr	r3, [r6, #0]
   15a12:	add	r0, sp, #20
   15a14:	adds	r2, r3, #4
   15a16:	str	r2, [r6, #0]
   15a18:	ldr	r3, [r3, #0]
   15a1a:	str	r3, [r0, #0]
   15a1c:	cmp	r3, #0
   15a1e:	beq.n	159e2 <fmt_print@@Base+0xb2>
   15a20:	add	r3, sp, #24
   15a22:	add	r6, sp, #68	; 0x44
   15a24:	str	r3, [sp, #12]
   15a26:	mov	r1, r3
   15a28:	blx	8930 <localtime_r@plt>
   15a2c:	ldr	r2, [pc, #368]	; (15ba0 <fmt_print@@Base+0x270>)
   15a2e:	mov.w	r1, #256	; 0x100
   15a32:	ldr	r3, [sp, #12]
   15a34:	add	r2, pc
   15a36:	mov	r0, r6
   15a38:	blx	8ac8 <strftime@plt>
   15a3c:	ldr	r1, [pc, #356]	; (15ba4 <fmt_print@@Base+0x274>)
   15a3e:	mov	r2, r6
   15a40:	add	r1, pc
   15a42:	b.n	159fc <fmt_print@@Base+0xcc>
   15a44:	ldr	r1, [pc, #352]	; (15ba8 <fmt_print@@Base+0x278>)
   15a46:	mov	r0, r7
   15a48:	add	r1, pc
   15a4a:	blx	8748 <strcmp@plt>
   15a4e:	cmp	r0, #0
   15a50:	beq.n	15b52 <fmt_print@@Base+0x222>
   15a52:	ldr	r1, [pc, #344]	; (15bac <fmt_print@@Base+0x27c>)
   15a54:	mov	r0, r7
   15a56:	add	r1, pc
   15a58:	blx	8748 <strcmp@plt>
   15a5c:	cmp	r0, #0
   15a5e:	beq.n	15b52 <fmt_print@@Base+0x222>
   15a60:	ldr	r1, [pc, #332]	; (15bb0 <fmt_print@@Base+0x280>)
   15a62:	mov	r0, r7
   15a64:	add	r1, pc
   15a66:	blx	8748 <strcmp@plt>
   15a6a:	cbnz	r0, 15a8c <fmt_print@@Base+0x15c>
   15a6c:	ldr	r1, [r6, #0]
   15a6e:	movs	r0, #1
   15a70:	adds	r1, #7
   15a72:	bic.w	r1, r1, #7
   15a76:	ldrd	r2, r3, [r1, #8]
   15a7a:	strd	r2, r3, [sp]
   15a7e:	ldrd	r2, r3, [r1]
   15a82:	ldr	r1, [pc, #304]	; (15bb4 <fmt_print@@Base+0x284>)
   15a84:	add	r1, pc
   15a86:	blx	8c6c <__printf_chk@plt+0x4>
   15a8a:	b.n	15b52 <fmt_print@@Base+0x222>
   15a8c:	ldr	r1, [pc, #296]	; (15bb8 <fmt_print@@Base+0x288>)
   15a8e:	mov	r0, r7
   15a90:	add	r1, pc
   15a92:	blx	8748 <strcmp@plt>
   15a96:	cbnz	r0, 15abc <fmt_print@@Base+0x18c>
   15a98:	ldr	r3, [r6, #0]
   15a9a:	adds	r3, #7
   15a9c:	bic.w	r3, r3, #7
   15aa0:	mov	r2, r3
   15aa2:	ldrd	r0, r1, [r2], #12
   15aa6:	str	r2, [r6, #0]
   15aa8:	orrs.w	r2, r0, r1
   15aac:	beq.n	159e2 <fmt_print@@Base+0xb2>
   15aae:	ldr	r2, [r3, #8]
   15ab0:	bl	33988 <pretty_size_mode@@Base>
   15ab4:	ldr	r1, [pc, #260]	; (15bbc <fmt_print@@Base+0x28c>)
   15ab6:	add	r1, pc
   15ab8:	mov	r2, r0
   15aba:	b.n	159fc <fmt_print@@Base+0xcc>
   15abc:	ldr	r1, [pc, #256]	; (15bc0 <fmt_print@@Base+0x290>)
   15abe:	mov	r0, r7
   15ac0:	add	r1, pc
   15ac2:	blx	8748 <strcmp@plt>
   15ac6:	cbnz	r0, 15ae2 <fmt_print@@Base+0x1b2>
   15ac8:	ldr	r3, [r6, #0]
   15aca:	adds	r3, #7
   15acc:	bic.w	r3, r3, #7
   15ad0:	ldr	r2, [r3, #8]
   15ad2:	ldrd	r0, r1, [r3]
   15ad6:	bl	33988 <pretty_size_mode@@Base>
   15ada:	ldr	r1, [pc, #232]	; (15bc4 <fmt_print@@Base+0x294>)
   15adc:	add	r1, pc
   15ade:	mov	r2, r0
   15ae0:	b.n	159fc <fmt_print@@Base+0xcc>
   15ae2:	ldr	r1, [pc, #228]	; (15bc8 <fmt_print@@Base+0x298>)
   15ae4:	mov	r2, r7
   15ae6:	add	r1, pc
   15ae8:	b.n	159fc <fmt_print@@Base+0xcc>
   15aea:	ldr	r3, [pc, #224]	; (15bcc <fmt_print@@Base+0x29c>)
   15aec:	ldr	r3, [r7, r3]
   15aee:	ldr	r3, [r3, #0]
   15af0:	cmp	r3, #4
   15af2:	bne.w	15982 <fmt_print@@Base+0x52>
   15af6:	ldr	r3, [r4, #8]
   15af8:	movs	r0, #10
   15afa:	ldrb.w	r8, [r3]
   15afe:	blx	8c08 <putchar@plt+0x4>
   15b02:	ldr	r0, [r5, #4]
   15b04:	bl	155c8 <btrfs_check_nodesize@@Base+0x80>
   15b08:	ldr	r2, [r4, #8]
   15b0a:	mov	r0, r2
   15b0c:	str	r2, [sp, #12]
   15b0e:	blx	8b70 <strlen@plt>
   15b12:	ldr	r1, [pc, #188]	; (15bd0 <fmt_print@@Base+0x2a0>)
   15b14:	ldr	r2, [sp, #12]
   15b16:	add	r1, pc
   15b18:	mov	r7, r0
   15b1a:	movs	r0, #1
   15b1c:	blx	8c6c <__printf_chk@plt+0x4>
   15b20:	cmp.w	r8, #0
   15b24:	beq.n	15b2e <fmt_print@@Base+0x1fe>
   15b26:	movs	r0, #58	; 0x3a
   15b28:	adds	r7, #1
   15b2a:	blx	8c08 <putchar@plt+0x4>
   15b2e:	ldr	r0, [r5, #0]
   15b30:	subs	r0, r0, r7
   15b32:	bl	155c8 <btrfs_check_nodesize@@Base+0x80>
   15b36:	mov	r1, r4
   15b38:	mov	r0, r5
   15b3a:	bl	15754 <fmt_start_value@@Base>
   15b3e:	ldr	r7, [r4, #4]
   15b40:	ldrb	r3, [r7, #0]
   15b42:	cmp	r3, #37	; 0x25
   15b44:	bne.w	159c6 <fmt_print@@Base+0x96>
   15b48:	ldr	r2, [r6, #0]
   15b4a:	mov	r1, r7
   15b4c:	movs	r0, #1
   15b4e:	blx	8888 <__vprintf_chk@plt>
   15b52:	mov	r1, r4
   15b54:	mov	r0, r5
   15b56:	bl	157a8 <fmt_end_value@@Base>
   15b5a:	ldr	r2, [pc, #120]	; (15bd4 <fmt_print@@Base+0x2a4>)
   15b5c:	ldr	r3, [pc, #28]	; (15b7c <fmt_print@@Base+0x24c>)
   15b5e:	add	r2, pc
   15b60:	ldr	r3, [r2, r3]
   15b62:	ldr	r2, [r3, #0]
   15b64:	ldr	r3, [sp, #324]	; 0x144
   15b66:	eors	r2, r3
   15b68:	beq.n	15b6e <fmt_print@@Base+0x23e>
   15b6a:	blx	88e4 <__stack_chk_fail@plt>
   15b6e:	add	sp, #332	; 0x14c
   15b70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   15b74:	add	sp, #12
   15b76:	bx	lr
   15b78:	adds	r3, #240	; 0xf0
   15b7a:	movs	r5, r0
   15b7c:	lsls	r4, r7, #9
   15b7e:	movs	r0, r0
   15b80:	adds	r3, #216	; 0xd8
   15b82:	movs	r5, r0
   15b84:	add	r1, pc, #388	; (adr r1, 15d0c <fmt_print@@Base+0x3dc>)
   15b86:	movs	r2, r0
   15b88:	add	r0, pc, #116	; (adr r0, 15c00 <fmt_print@@Base+0x2d0>)
   15b8a:	movs	r2, r0
   15b8c:	bls.n	15b74 <fmt_print@@Base+0x244>
   15b8e:	movs	r2, r0
   15b90:	add	r0, pc, #724	; (adr r0, 15e68 <btrfs_prepare_device@@Base+0x98>)
   15b92:	movs	r2, r0
   15b94:	add	r6, pc, #604	; (adr r6, 15df4 <btrfs_prepare_device@@Base+0x24>)
   15b96:	movs	r2, r0
   15b98:			; <UNDEFINED> instruction: 0xeaed0002
   15b9c:	add	r0, pc, #456	; (adr r0, 15d68 <btrfs_device_size@@Base+0x4>)
   15b9e:	movs	r2, r0
   15ba0:	add	r0, pc, #320	; (adr r0, 15ce4 <fmt_print@@Base+0x3b4>)
   15ba2:	movs	r2, r0
   15ba4:			; <UNDEFINED> instruction: 0xeaa70002
   15ba8:	ldr	r7, [sp, #396]	; 0x18c
   15baa:	movs	r2, r0
   15bac:	bls.n	15c34 <fmt_print@@Base+0x304>
   15bae:	movs	r2, r0
   15bb0:	ldrh	r6, [r7, #28]
   15bb2:	movs	r2, r0
   15bb4:	ldrh	r0, [r7, #12]
   15bb6:	movs	r2, r0
   15bb8:	add	r0, pc, #12	; (adr r0, 15bc8 <fmt_print@@Base+0x298>)
   15bba:	movs	r2, r0
   15bbc:	bics.w	r0, r1, r2
   15bc0:	adds	r1, r3, #2
   15bc2:	movs	r4, r0
   15bc4:	and.w	r0, fp, r2
   15bc8:	ldr	r7, [sp, #744]	; 0x2e8
   15bca:	movs	r2, r0
   15bcc:	lsls	r0, r7, #9
   15bce:	movs	r0, r0
   15bd0:	ldrd	r0, r0, [r1, #8]
   15bd4:	adds	r1, #210	; 0xd2
   15bd6:	movs	r5, r0
   15bd8:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   15bdc:	mov	r6, r0
   15bde:	ldr	r5, [sp, #32]
   15be0:	mov	r8, r2
   15be2:	mov	r7, r3
   15be4:	mov	r0, r5
   15be6:	blx	8a94 <malloc@plt+0x4>
   15bea:	mov	r4, r0
   15bec:	cbz	r0, 15c1c <fmt_print@@Base+0x2ec>
   15bee:	mov	r2, r5
   15bf0:	movs	r1, #0
   15bf2:	blx	8bf8 <memset@plt+0x4>
   15bf6:	mov	r2, r5
   15bf8:	mov	r1, r4
   15bfa:	mov	r0, r6
   15bfc:	strd	r8, r7, [sp]
   15c00:	blx	8c5c <pwrite64@plt>
   15c04:	cmp	r0, r5
   15c06:	mov	r0, r4
   15c08:	ite	eq
   15c0a:	moveq	r5, #0
   15c0c:	mvnne.w	r5, #4
   15c10:	blx	87cc <free@plt+0x4>
   15c14:	mov	r0, r5
   15c16:	add	sp, #8
   15c18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15c1c:	mvn.w	r5, #11
   15c20:	b.n	15c14 <fmt_print@@Base+0x2e4>
   15c22:	ldr	r1, [pc, #292]	; (15d48 <fmt_print@@Base+0x418>)
   15c24:	ldr	r2, [pc, #292]	; (15d4c <fmt_print@@Base+0x41c>)
   15c26:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15c2a:	add	r1, pc
   15c2c:	sub.w	sp, sp, #8192	; 0x2000
   15c30:	mov	r7, r0
   15c32:	sub	sp, #36	; 0x24
   15c34:	ldr	r2, [r1, r2]
   15c36:	add	r5, sp, #32
   15c38:	add.w	r3, sp, #8192	; 0x2000
   15c3c:	ldr	r2, [r2, #0]
   15c3e:	str	r2, [r3, #28]
   15c40:	mov.w	r2, #0
   15c44:	adds	r3, #28
   15c46:	movs	r3, #0
   15c48:	str.w	r3, [r5, #-12]
   15c4c:	str.w	r3, [r5, #-8]
   15c50:	blx	8bdc <blkid_new_probe@plt>
   15c54:	sub.w	r8, r5, #12
   15c58:	sub.w	r4, r5, #8
   15c5c:	mov	r6, r0
   15c5e:	cmp	r0, #0
   15c60:	beq.n	15d34 <fmt_print@@Base+0x404>
   15c62:	movs	r3, #0
   15c64:	movs	r2, #0
   15c66:	mov	r1, r7
   15c68:	strd	r2, r3, [sp]
   15c6c:	blx	88bc <blkid_probe_set_device@plt>
   15c70:	mov	r3, r0
   15c72:	cmp	r0, #0
   15c74:	bne.n	15d2e <fmt_print@@Base+0x3fe>
   15c76:	ldr	r1, [pc, #216]	; (15d50 <fmt_print@@Base+0x420>)
   15c78:	mov	r2, r8
   15c7a:	mov	r0, r6
   15c7c:	add	r1, pc
   15c7e:	blx	8778 <blkid_probe_lookup_value@plt>
   15c82:	mov	r2, r0
   15c84:	cbz	r0, 15ca8 <fmt_print@@Base+0x378>
   15c86:	movs	r4, #1
   15c88:	mov	r0, r6
   15c8a:	blx	8cf4 <blkid_free_probe@plt>
   15c8e:	ldr	r1, [pc, #196]	; (15d54 <fmt_print@@Base+0x424>)
   15c90:	add.w	r3, sp, #8192	; 0x2000
   15c94:	ldr	r2, [pc, #180]	; (15d4c <fmt_print@@Base+0x41c>)
   15c96:	adds	r3, #28
   15c98:	add	r1, pc
   15c9a:	ldr	r2, [r1, r2]
   15c9c:	ldr	r1, [r2, #0]
   15c9e:	ldr	r2, [r3, #0]
   15ca0:	eors	r1, r2
   15ca2:	beq.n	15d3a <fmt_print@@Base+0x40a>
   15ca4:	blx	88e4 <__stack_chk_fail@plt>
   15ca8:	ldr	r1, [pc, #172]	; (15d58 <fmt_print@@Base+0x428>)
   15caa:	mov	r3, r4
   15cac:	mov	r0, r6
   15cae:	add	r1, pc
   15cb0:	blx	8778 <blkid_probe_lookup_value@plt>
   15cb4:	mov	r1, r0
   15cb6:	cmp	r0, #0
   15cb8:	bne.n	15c86 <fmt_print@@Base+0x356>
   15cba:	ldr	r3, [r4, #0]
   15cbc:	cmp	r3, #0
   15cbe:	beq.n	15c86 <fmt_print@@Base+0x356>
   15cc0:	ldr.w	r0, [r8]
   15cc4:	cmp	r0, #0
   15cc6:	beq.n	15c86 <fmt_print@@Base+0x356>
   15cc8:	movs	r2, #10
   15cca:	blx	89e4 <strtoll@plt>
   15cce:	ldr	r3, [r4, #0]
   15cd0:	cmp.w	r3, #8192	; 0x2000
   15cd4:	itt	hi
   15cd6:	movhi.w	r3, #8192	; 0x2000
   15cda:	strhi	r3, [r4, #0]
   15cdc:	subs	r4, r5, #4
   15cde:	ldr.w	r2, [r5, #-8]
   15ce2:	mov.w	r3, #8192	; 0x2000
   15ce6:	str	r2, [sp, #12]
   15ce8:	mov	r9, r0
   15cea:	mov	r8, r1
   15cec:	mov	r0, r4
   15cee:	movs	r1, #0
   15cf0:	blx	883c <__memset_chk@plt>
   15cf4:	mov	r1, r4
   15cf6:	ldr	r2, [sp, #12]
   15cf8:	mov	r0, r7
   15cfa:	strd	r9, r8, [sp]
   15cfe:	blx	8c5c <pwrite64@plt>
   15d02:	subs	r4, r0, #0
   15d04:	bge.n	15d1a <fmt_print@@Base+0x3ea>
   15d06:	ldr	r0, [pc, #84]	; (15d5c <fmt_print@@Base+0x42c>)
   15d08:	add	r0, pc
   15d0a:	bl	1a900 <__btrfs_error@@Base>
   15d0e:	mov.w	r4, #4294967295	; 0xffffffff
   15d12:	mov	r0, r7
   15d14:	blx	873c <fsync@plt>
   15d18:	b.n	15c88 <fmt_print@@Base+0x358>
   15d1a:	ldr.w	r2, [r5, #-8]
   15d1e:	cmp	r4, r2
   15d20:	beq.n	15d12 <fmt_print@@Base+0x3e2>
   15d22:	ldr	r0, [pc, #60]	; (15d60 <fmt_print@@Base+0x430>)
   15d24:	mov	r1, r4
   15d26:	add	r0, pc
   15d28:	bl	1a900 <__btrfs_error@@Base>
   15d2c:	b.n	15d0e <fmt_print@@Base+0x3de>
   15d2e:	mov.w	r4, #4294967295	; 0xffffffff
   15d32:	b.n	15c88 <fmt_print@@Base+0x358>
   15d34:	mov.w	r4, #4294967295	; 0xffffffff
   15d38:	b.n	15c8e <fmt_print@@Base+0x35e>
   15d3a:	mov	r0, r4
   15d3c:	add.w	sp, sp, #8192	; 0x2000
   15d40:	add	sp, #36	; 0x24
   15d42:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15d46:	nop
   15d48:	adds	r1, #6
   15d4a:	movs	r5, r0
   15d4c:	lsls	r4, r7, #9
   15d4e:	movs	r0, r0
   15d50:	ldr	r6, [sp, #416]	; 0x1a0
   15d52:	movs	r2, r0
   15d54:	adds	r0, #152	; 0x98
   15d56:	movs	r5, r0
   15d58:	ldr	r6, [sp, #276]	; 0x114
   15d5a:	movs	r2, r0
   15d5c:	ldr	r5, [sp, #972]	; 0x3cc
   15d5e:	movs	r2, r0
   15d60:	ldr	r5, [sp, #996]	; 0x3e4
   15d62:	movs	r2, r0

00015d64 <btrfs_device_size@@Base>:
   15d64:	push	{r0, r1, r2, r3, r4, lr}
   15d66:	ldr	r2, [pc, #92]	; (15dc4 <btrfs_device_size@@Base+0x60>)
   15d68:	ldr	r3, [pc, #92]	; (15dc8 <btrfs_device_size@@Base+0x64>)
   15d6a:	add	r2, pc
   15d6c:	ldr	r3, [r2, r3]
   15d6e:	ldr	r3, [r3, #0]
   15d70:	str	r3, [sp, #12]
   15d72:	mov.w	r3, #0
   15d76:	ldr	r3, [r1, #16]
   15d78:	and.w	r3, r3, #61440	; 0xf000
   15d7c:	cmp.w	r3, #32768	; 0x8000
   15d80:	bne.n	15d9a <btrfs_device_size@@Base+0x36>
   15d82:	ldrd	r0, r1, [r1, #48]	; 0x30
   15d86:	ldr	r2, [pc, #68]	; (15dcc <btrfs_device_size@@Base+0x68>)
   15d88:	ldr	r3, [pc, #60]	; (15dc8 <btrfs_device_size@@Base+0x64>)
   15d8a:	add	r2, pc
   15d8c:	ldr	r3, [r2, r3]
   15d8e:	ldr	r2, [r3, #0]
   15d90:	ldr	r3, [sp, #12]
   15d92:	eors	r2, r3
   15d94:	beq.n	15db8 <btrfs_device_size@@Base+0x54>
   15d96:	blx	88e4 <__stack_chk_fail@plt>
   15d9a:	cmp.w	r3, #24576	; 0x6000
   15d9e:	bne.n	15db2 <btrfs_device_size@@Base+0x4e>
   15da0:	ldr	r1, [pc, #28]	; (15dc0 <btrfs_device_size@@Base+0x5c>)
   15da2:	mov	r2, sp
   15da4:	blx	89cc <ioctl@plt>
   15da8:	cmp	r0, #0
   15daa:	blt.n	15db2 <btrfs_device_size@@Base+0x4e>
   15dac:	ldrd	r0, r1, [sp]
   15db0:	b.n	15d86 <btrfs_device_size@@Base+0x22>
   15db2:	movs	r0, #0
   15db4:	movs	r1, #0
   15db6:	b.n	15d86 <btrfs_device_size@@Base+0x22>
   15db8:	add	sp, #20
   15dba:	ldr.w	pc, [sp], #4
   15dbe:	nop
   15dc0:	asrs	r2, r6, #9
   15dc2:	strh	r4, [r0, #0]
   15dc4:	cmp	r7, #198	; 0xc6
   15dc6:	movs	r5, r0
   15dc8:	lsls	r4, r7, #9
   15dca:	movs	r0, r0
   15dcc:	cmp	r7, #166	; 0xa6
   15dce:	movs	r5, r0

00015dd0 <btrfs_prepare_device@@Base>:
   15dd0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dd4:	sub	sp, #180	; 0xb4
   15dd6:	ldr	r3, [pc, #588]	; (16024 <btrfs_prepare_device@@Base+0x254>)
   15dd8:	mov	r7, r1
   15dda:	str	r2, [sp, #40]	; 0x28
   15ddc:	add	r1, sp, #48	; 0x30
   15dde:	ldr	r2, [pc, #584]	; (16028 <btrfs_prepare_device@@Base+0x258>)
   15de0:	mov	r6, r0
   15de2:	ldrd	r8, r9, [sp, #216]	; 0xd8
   15de6:	add	r2, pc
   15de8:	ldr	r3, [r2, r3]
   15dea:	ldr	r3, [r3, #0]
   15dec:	str	r3, [sp, #172]	; 0xac
   15dee:	mov.w	r3, #0
   15df2:	str	r1, [sp, #32]
   15df4:	bl	3cb4c <__libc_csu_fini@@Base+0x28>
   15df8:	ldr	r1, [sp, #32]
   15dfa:	cmp	r0, #0
   15dfc:	bge.n	15e20 <btrfs_prepare_device@@Base+0x50>
   15dfe:	ldr	r0, [pc, #556]	; (1602c <btrfs_prepare_device@@Base+0x25c>)
   15e00:	mov	r1, r7
   15e02:	add	r0, pc
   15e04:	bl	1a900 <__btrfs_error@@Base>
   15e08:	movs	r0, #1
   15e0a:	ldr	r2, [pc, #548]	; (16030 <btrfs_prepare_device@@Base+0x260>)
   15e0c:	ldr	r3, [pc, #532]	; (16024 <btrfs_prepare_device@@Base+0x254>)
   15e0e:	add	r2, pc
   15e10:	ldr	r3, [r2, r3]
   15e12:	ldr	r2, [r3, #0]
   15e14:	ldr	r3, [sp, #172]	; 0xac
   15e16:	eors	r2, r3
   15e18:	beq.w	1601e <btrfs_prepare_device@@Base+0x24e>
   15e1c:	blx	88e4 <__stack_chk_fail@plt>
   15e20:	mov	r0, r6
   15e22:	bl	15d64 <btrfs_device_size@@Base>
   15e26:	mov	r4, r0
   15e28:	mov	r5, r1
   15e2a:	orrs.w	r3, r4, r5
   15e2e:	bne.n	15e38 <btrfs_prepare_device@@Base+0x68>
   15e30:	ldr	r0, [pc, #512]	; (16034 <btrfs_prepare_device@@Base+0x264>)
   15e32:	mov	r1, r7
   15e34:	add	r0, pc
   15e36:	b.n	15e04 <btrfs_prepare_device@@Base+0x34>
   15e38:	orrs.w	r3, r8, r9
   15e3c:	beq.n	15e4a <btrfs_prepare_device@@Base+0x7a>
   15e3e:	cmp	r9, r1
   15e40:	it	eq
   15e42:	cmpeq	r8, r0
   15e44:	itt	cc
   15e46:	movcc	r4, r8
   15e48:	movcc	r5, r9
   15e4a:	ldr	r3, [sp, #224]	; 0xe0
   15e4c:	lsls	r1, r3, #30
   15e4e:	bpl.n	15f04 <btrfs_prepare_device@@Base+0x134>
   15e50:	movs	r2, #0
   15e52:	movs	r3, #0
   15e54:	movw	r1, #4727	; 0x1277
   15e58:	strd	r2, r3, [sp, #152]	; 0x98
   15e5c:	strd	r2, r3, [sp, #160]	; 0xa0
   15e60:	mov	r0, r6
   15e62:	add	r2, sp, #152	; 0x98
   15e64:	blx	89cc <ioctl@plt>
   15e68:	cmp	r0, #0
   15e6a:	bge.n	15e76 <btrfs_prepare_device@@Base+0xa6>
   15e6c:	blx	8bac <__errno_location@plt>
   15e70:	ldr	r3, [r0, #0]
   15e72:	cmp	r3, #0
   15e74:	bne.n	15f04 <btrfs_prepare_device@@Base+0x134>
   15e76:	ldr	r3, [sp, #224]	; 0xe0
   15e78:	lsls	r2, r3, #29
   15e7a:	bpl.n	15e96 <btrfs_prepare_device@@Base+0xc6>
   15e7c:	mov.w	r2, #512	; 0x200
   15e80:	mov	r1, r5
   15e82:	mov	r0, r4
   15e84:	bl	33988 <pretty_size_mode@@Base>
   15e88:	ldr	r1, [pc, #428]	; (16038 <btrfs_prepare_device@@Base+0x268>)
   15e8a:	mov	r2, r7
   15e8c:	add	r1, pc
   15e8e:	mov	r3, r0
   15e90:	movs	r0, #1
   15e92:	blx	8c6c <__printf_chk@plt+0x4>
   15e96:	add	r2, sp, #152	; 0x98
   15e98:	mov	r8, r4
   15e9a:	mov	r9, r5
   15e9c:	movs	r3, #0
   15e9e:	strd	r3, r3, [sp, #32]
   15ea2:	ldr	r3, [sp, #32]
   15ea4:	movs	r1, #0
   15ea6:	cmp	r1, r9
   15ea8:	mov.w	r0, #1073741824	; 0x40000000
   15eac:	it	eq
   15eae:	cmpeq	r0, r8
   15eb0:	movw	r1, #4727	; 0x1277
   15eb4:	str	r3, [sp, #152]	; 0x98
   15eb6:	mov	r0, r6
   15eb8:	ldr	r3, [sp, #36]	; 0x24
   15eba:	mov	fp, r8
   15ebc:	mov	sl, r9
   15ebe:	itt	cc
   15ec0:	movcc.w	fp, #1073741824	; 0x40000000
   15ec4:	movcc.w	sl, #0
   15ec8:	str	r2, [sp, #44]	; 0x2c
   15eca:	strd	r3, fp, [sp, #156]	; 0x9c
   15ece:	str.w	sl, [sp, #164]	; 0xa4
   15ed2:	blx	89cc <ioctl@plt>
   15ed6:	ldr	r2, [sp, #44]	; 0x2c
   15ed8:	cmp	r0, #0
   15eda:	bge.n	15ee6 <btrfs_prepare_device@@Base+0x116>
   15edc:	blx	8bac <__errno_location@plt>
   15ee0:	ldr	r2, [sp, #44]	; 0x2c
   15ee2:	ldr	r3, [r0, #0]
   15ee4:	cbnz	r3, 15f04 <btrfs_prepare_device@@Base+0x134>
   15ee6:	ldr	r3, [sp, #32]
   15ee8:	subs.w	r8, r8, fp
   15eec:	sbc.w	r9, r9, sl
   15ef0:	adds.w	r3, r3, fp
   15ef4:	str	r3, [sp, #32]
   15ef6:	ldr	r3, [sp, #36]	; 0x24
   15ef8:	adc.w	r3, r3, sl
   15efc:	str	r3, [sp, #36]	; 0x24
   15efe:	orrs.w	r3, r8, r9
   15f02:	bne.n	15ea2 <btrfs_prepare_device@@Base+0xd2>
   15f04:	movs	r1, #0
   15f06:	cmp	r1, r5
   15f08:	mov.w	r0, #2097152	; 0x200000
   15f0c:	it	eq
   15f0e:	cmpeq	r0, r4
   15f10:	mov	r3, r4
   15f12:	mov.w	r2, #0
   15f16:	it	cc
   15f18:	movcc	r3, r0
   15f1a:	mov	r0, r6
   15f1c:	str	r3, [sp, #0]
   15f1e:	movs	r3, #0
   15f20:	bl	15bd8 <fmt_print@@Base+0x2a8>
   15f24:	mov.w	r8, #0
   15f28:	mov.w	sl, #12
   15f2c:	mov.w	r9, #16384	; 0x4000
   15f30:	mov	fp, r0
   15f32:	cmp.w	fp, #0
   15f36:	bne.n	15f72 <btrfs_prepare_device@@Base+0x1a2>
   15f38:	cmp.w	r8, #3
   15f3c:	bne.n	15f8a <btrfs_prepare_device@@Base+0x1ba>
   15f3e:	ldr	r3, [sp, #224]	; 0xe0
   15f40:	lsls	r3, r3, #31
   15f42:	bpl.n	16002 <btrfs_prepare_device@@Base+0x232>
   15f44:	subs.w	r3, r4, #2097152	; 0x200000
   15f48:	str	r3, [sp, #16]
   15f4a:	adc.w	r3, r5, #4294967295	; 0xffffffff
   15f4e:	str	r3, [sp, #20]
   15f50:	ldrd	r2, r3, [sp, #16]
   15f54:	mov	r0, r6
   15f56:	cmp	r5, r3
   15f58:	it	eq
   15f5a:	cmpeq	r4, r2
   15f5c:	it	cc
   15f5e:	strdcc	r4, r5, [sp, #16]
   15f62:	ldr	r3, [sp, #16]
   15f64:	subs	r3, r4, r3
   15f66:	str	r3, [sp, #0]
   15f68:	ldrd	r2, r3, [sp, #16]
   15f6c:	bl	15bd8 <fmt_print@@Base+0x2a8>
   15f70:	mov	fp, r0
   15f72:	cmp.w	fp, #0
   15f76:	bge.n	16002 <btrfs_prepare_device@@Base+0x232>
   15f78:	blx	8bac <__errno_location@plt>
   15f7c:	rsb	r3, fp, #0
   15f80:	mov	r1, r7
   15f82:	str	r3, [r0, #0]
   15f84:	ldr	r0, [pc, #180]	; (1603c <btrfs_prepare_device@@Base+0x26c>)
   15f86:	add	r0, pc
   15f88:	b.n	15e04 <btrfs_prepare_device@@Base+0x34>
   15f8a:	cmp.w	r8, #0
   15f8e:	beq.n	15ff6 <btrfs_prepare_device@@Base+0x226>
   15f90:	mul.w	r3, sl, r8
   15f94:	sub.w	r1, r3, #32
   15f98:	rsb	r2, r3, #32
   15f9c:	lsl.w	r1, r9, r1
   15fa0:	lsr.w	r2, r9, r2
   15fa4:	orrs	r1, r2
   15fa6:	lsl.w	r3, r9, r3
   15faa:	str	r1, [sp, #12]
   15fac:	str	r3, [sp, #8]
   15fae:	ldrd	r0, r1, [sp, #8]
   15fb2:	mov	r2, r4
   15fb4:	mov	r3, r5
   15fb6:	add.w	r8, r8, #1
   15fba:	cmp	r1, r5
   15fbc:	ldr	r1, [sp, #8]
   15fbe:	it	eq
   15fc0:	cmpeq	r0, r4
   15fc2:	it	cc
   15fc4:	ldrdcc	r2, r3, [sp, #8]
   15fc8:	adds.w	r1, r1, #4096	; 0x1000
   15fcc:	str	r1, [sp, #24]
   15fce:	ldr	r1, [sp, #12]
   15fd0:	adc.w	r1, r1, #0
   15fd4:	str	r1, [sp, #28]
   15fd6:	ldrd	r0, r1, [sp, #24]
   15fda:	cmp	r5, r1
   15fdc:	it	eq
   15fde:	cmpeq	r4, r0
   15fe0:	it	cc
   15fe2:	strdcc	r4, r5, [sp, #24]
   15fe6:	ldr	r1, [sp, #24]
   15fe8:	mov	r0, r6
   15fea:	subs	r1, r1, r2
   15fec:	str	r1, [sp, #0]
   15fee:	bl	15bd8 <fmt_print@@Base+0x2a8>
   15ff2:	mov	fp, r0
   15ff4:	b.n	15f32 <btrfs_prepare_device@@Base+0x162>
   15ff6:	mov.w	r2, #65536	; 0x10000
   15ffa:	movs	r3, #0
   15ffc:	strd	r2, r3, [sp, #8]
   16000:	b.n	15fae <btrfs_prepare_device@@Base+0x1de>
   16002:	mov	r0, r6
   16004:	bl	15c22 <fmt_print@@Base+0x2f2>
   16008:	cmp	r0, #0
   1600a:	bge.n	16014 <btrfs_prepare_device@@Base+0x244>
   1600c:	ldr	r0, [pc, #48]	; (16040 <btrfs_prepare_device@@Base+0x270>)
   1600e:	mov	r1, r7
   16010:	add	r0, pc
   16012:	b.n	15e04 <btrfs_prepare_device@@Base+0x34>
   16014:	ldr	r3, [sp, #40]	; 0x28
   16016:	movs	r0, #0
   16018:	strd	r4, r5, [r3]
   1601c:	b.n	15e0a <btrfs_prepare_device@@Base+0x3a>
   1601e:	add	sp, #180	; 0xb4
   16020:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16024:	lsls	r4, r7, #9
   16026:	movs	r0, r0
   16028:	cmp	r7, #74	; 0x4a
   1602a:	movs	r5, r0
   1602c:	ldr	r5, [sp, #312]	; 0x138
   1602e:	movs	r2, r0
   16030:	cmp	r7, #34	; 0x22
   16032:	movs	r5, r0
   16034:	ldr	r5, [sp, #200]	; 0xc8
   16036:	movs	r2, r0
   16038:	ldr	r4, [sp, #996]	; 0x3e4
   1603a:	movs	r2, r0
   1603c:	ldr	r4, [sp, #160]	; 0xa0
   1603e:	movs	r2, r0
   16040:	ldr	r3, [sp, #756]	; 0x2f4
   16042:	movs	r2, r0

00016044 <disk_size@@Base>:
   16044:	ldr	r2, [pc, #76]	; (16094 <disk_size@@Base+0x50>)
   16046:	ldr	r3, [pc, #80]	; (16098 <disk_size@@Base+0x54>)
   16048:	add	r2, pc
   1604a:	push	{r4, lr}
   1604c:	sub	sp, #96	; 0x60
   1604e:	ldr	r3, [r2, r3]
   16050:	mov	r1, sp
   16052:	ldr	r3, [r3, #0]
   16054:	str	r3, [sp, #92]	; 0x5c
   16056:	mov.w	r3, #0
   1605a:	blx	8d24 <statfs64@plt>
   1605e:	cmp	r0, #0
   16060:	blt.n	1608a <disk_size@@Base+0x46>
   16062:	ldr	r2, [sp, #4]
   16064:	ldrd	r4, r3, [sp, #8]
   16068:	asrs	r1, r2, #31
   1606a:	muls	r3, r2
   1606c:	mla	r3, r4, r1, r3
   16070:	umull	r0, r1, r4, r2
   16074:	add	r1, r3
   16076:	ldr	r2, [pc, #36]	; (1609c <disk_size@@Base+0x58>)
   16078:	ldr	r3, [pc, #28]	; (16098 <disk_size@@Base+0x54>)
   1607a:	add	r2, pc
   1607c:	ldr	r3, [r2, r3]
   1607e:	ldr	r2, [r3, #0]
   16080:	ldr	r3, [sp, #92]	; 0x5c
   16082:	eors	r2, r3
   16084:	beq.n	16090 <disk_size@@Base+0x4c>
   16086:	blx	88e4 <__stack_chk_fail@plt>
   1608a:	movs	r0, #0
   1608c:	movs	r1, #0
   1608e:	b.n	16076 <disk_size@@Base+0x32>
   16090:	add	sp, #96	; 0x60
   16092:	pop	{r4, pc}
   16094:	cmp	r4, #232	; 0xe8
   16096:	movs	r5, r0
   16098:	lsls	r4, r7, #9
   1609a:	movs	r0, r0
   1609c:	cmp	r4, #182	; 0xb6
   1609e:	movs	r5, r0

000160a0 <get_partition_size@@Base>:
   160a0:	push	{r0, r1, r2, r3, r4, lr}
   160a2:	movs	r1, #0
   160a4:	ldr	r2, [pc, #80]	; (160f8 <get_partition_size@@Base+0x58>)
   160a6:	ldr	r3, [pc, #84]	; (160fc <get_partition_size@@Base+0x5c>)
   160a8:	add	r2, pc
   160aa:	ldr	r3, [r2, r3]
   160ac:	ldr	r3, [r3, #0]
   160ae:	str	r3, [sp, #12]
   160b0:	mov.w	r3, #0
   160b4:	blx	8a68 <open64@plt>
   160b8:	subs	r4, r0, #0
   160ba:	blt.n	160ce <get_partition_size@@Base+0x2e>
   160bc:	ldr	r1, [pc, #52]	; (160f4 <get_partition_size@@Base+0x54>)
   160be:	mov	r2, sp
   160c0:	blx	89cc <ioctl@plt>
   160c4:	cmp	r0, #0
   160c6:	mov	r0, r4
   160c8:	bge.n	160d4 <get_partition_size@@Base+0x34>
   160ca:	blx	8e20 <close@plt>
   160ce:	movs	r0, #0
   160d0:	movs	r1, #0
   160d2:	b.n	160dc <get_partition_size@@Base+0x3c>
   160d4:	blx	8e20 <close@plt>
   160d8:	ldrd	r0, r1, [sp]
   160dc:	ldr	r2, [pc, #32]	; (16100 <get_partition_size@@Base+0x60>)
   160de:	ldr	r3, [pc, #28]	; (160fc <get_partition_size@@Base+0x5c>)
   160e0:	add	r2, pc
   160e2:	ldr	r3, [r2, r3]
   160e4:	ldr	r2, [r3, #0]
   160e6:	ldr	r3, [sp, #12]
   160e8:	eors	r2, r3
   160ea:	beq.n	160f0 <get_partition_size@@Base+0x50>
   160ec:	blx	88e4 <__stack_chk_fail@plt>
   160f0:	add	sp, #16
   160f2:	pop	{r4, pc}
   160f4:	asrs	r2, r6, #9
   160f6:	strh	r4, [r0, #0]
   160f8:	cmp	r4, #136	; 0x88
   160fa:	movs	r5, r0
   160fc:	lsls	r4, r7, #9
   160fe:	movs	r0, r0
   16100:	cmp	r4, #80	; 0x50
   16102:	movs	r5, r0
   16104:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16108:	sub.w	sp, sp, #8192	; 0x2000
   1610c:	sub	sp, #36	; 0x24
   1610e:	mov	r5, r1
   16110:	add.w	r3, sp, #8256	; 0x2040
   16114:	ldr	r1, [pc, #476]	; (162f4 <get_partition_size@@Base+0x254>)
   16116:	mov	r4, r2
   16118:	ldr	r2, [pc, #476]	; (162f8 <get_partition_size@@Base+0x258>)
   1611a:	ldrd	r8, r9, [r3, #8]
   1611e:	add	r1, pc
   16120:	adds	r3, #8
   16122:	ldr	r7, [pc, #472]	; (162fc <get_partition_size@@Base+0x25c>)
   16124:	cmp.w	r9, #0
   16128:	add.w	r3, sp, #8192	; 0x2000
   1612c:	ldr	r2, [r1, r2]
   1612e:	it	eq
   16130:	cmpeq.w	r8, #5
   16134:	add	r7, pc
   16136:	add.w	r3, r3, #28
   1613a:	mov	r6, r0
   1613c:	ldr	r2, [r2, #0]
   1613e:	str	r2, [r3, #0]
   16140:	mov.w	r2, #0
   16144:	bne.n	1617a <get_partition_size@@Base+0xda>
   16146:	ldr	r3, [r4, #0]
   16148:	cbnz	r3, 1616a <get_partition_size@@Base+0xca>
   1614a:	mvn.w	fp, #74	; 0x4a
   1614e:	ldr	r1, [pc, #432]	; (16300 <get_partition_size@@Base+0x260>)
   16150:	add.w	r3, sp, #8192	; 0x2000
   16154:	ldr	r2, [pc, #416]	; (162f8 <get_partition_size@@Base+0x258>)
   16156:	adds	r3, #28
   16158:	add	r1, pc
   1615a:	ldr	r2, [r1, r2]
   1615c:	ldr	r1, [r2, #0]
   1615e:	ldr	r2, [r3, #0]
   16160:	eors	r1, r2
   16162:	beq.w	162de <get_partition_size@@Base+0x23e>
   16166:	blx	88e4 <__stack_chk_fail@plt>
   1616a:	mov.w	fp, #0
   1616e:	strb.w	fp, [r5]
   16172:	ldr	r2, [r4, #0]
   16174:	subs	r2, #1
   16176:	str	r2, [r4, #0]
   16178:	b.n	1614e <get_partition_size@@Base+0xae>
   1617a:	add	r3, sp, #32
   1617c:	mov.w	r2, #4096	; 0x1000
   16180:	sub.w	sl, r3, #8
   16184:	movs	r1, #0
   16186:	str	r3, [sp, #16]
   16188:	mov	r0, sl
   1618a:	blx	8bf8 <memset@plt+0x4>
   1618e:	ldr	r1, [sp, #16]
   16190:	movs	r2, #1
   16192:	movs	r3, #0
   16194:	mov	r0, r6
   16196:	strd	r8, r9, [sl, #8]
   1619a:	strd	r2, r3, [r1, #-8]
   1619e:	mov.w	r2, #4294967295	; 0xffffffff
   161a2:	movs	r3, #144	; 0x90
   161a4:	ldr	r1, [pc, #324]	; (162ec <get_partition_size@@Base+0x24c>)
   161a6:	strd	r3, r3, [sl, #56]	; 0x38
   161aa:	mov.w	r3, #4294967295	; 0xffffffff
   161ae:	strd	r2, r3, [sl, #32]
   161b2:	strd	r2, r3, [sl, #48]	; 0x30
   161b6:	mov	r2, sl
   161b8:	movs	r3, #1
   161ba:	strd	r8, r9, [sl, #16]
   161be:	str.w	r3, [sl, #64]	; 0x40
   161c2:	blx	89cc <ioctl@plt>
   161c6:	movs	r3, #1
   161c8:	subs.w	fp, r0, #0
   161cc:	bge.n	161e8 <get_partition_size@@Base+0x148>
   161ce:	ldr	r2, [pc, #308]	; (16304 <get_partition_size@@Base+0x264>)
   161d0:	mov	r1, r3
   161d2:	ldr	r0, [r7, r2]
   161d4:	ldr	r2, [pc, #304]	; (16308 <get_partition_size@@Base+0x268>)
   161d6:	str.w	fp, [sp, #8]
   161da:	strd	r8, r9, [sp]
   161de:	add	r2, pc
   161e0:	ldr	r0, [r0, #0]
   161e2:	blx	8ca0 <__fprintf_chk@plt+0x4>
   161e6:	b.n	1614e <get_partition_size@@Base+0xae>
   161e8:	ldr.w	r2, [sl, #64]	; 0x40
   161ec:	cbnz	r2, 16208 <get_partition_size@@Base+0x168>
   161ee:	ldr	r2, [pc, #276]	; (16304 <get_partition_size@@Base+0x264>)
   161f0:	mov	r1, r3
   161f2:	mvn.w	fp, #1
   161f6:	ldr	r0, [r7, r2]
   161f8:	ldr	r2, [pc, #272]	; (1630c <get_partition_size@@Base+0x26c>)
   161fa:	strd	r8, r9, [sp]
   161fe:	add	r2, pc
   16200:	ldr	r0, [r0, #0]
   16202:	blx	8ca0 <__fprintf_chk@plt+0x4>
   16206:	b.n	1614e <get_partition_size@@Base+0xae>
   16208:	ldrd	r2, r3, [sl, #120]	; 0x78
   1620c:	cmp	r3, #0
   1620e:	it	eq
   16210:	cmpeq	r2, #5
   16212:	beq.n	1623e <get_partition_size@@Base+0x19e>
   16214:	strd	r2, r3, [sp]
   16218:	mov	r1, r5
   1621a:	mov	r2, r4
   1621c:	mov	r0, r6
   1621e:	bl	16104 <get_partition_size@@Base+0x64>
   16222:	mov	fp, r0
   16224:	cmp	r0, #0
   16226:	bne.n	1614e <get_partition_size@@Base+0xae>
   16228:	ldr	r3, [r4, #0]
   1622a:	cmp	r3, #0
   1622c:	beq.n	1614a <get_partition_size@@Base+0xaa>
   1622e:	ldr	r1, [pc, #224]	; (16310 <get_partition_size@@Base+0x270>)
   16230:	mov	r0, r5
   16232:	add	r1, pc
   16234:	blx	89c0 <strcat@plt+0x4>
   16238:	ldr	r3, [r4, #0]
   1623a:	subs	r3, #1
   1623c:	str	r3, [r4, #0]
   1623e:	ldrd	r8, r9, [sl, #136]	; 0x88
   16242:	cmp.w	r9, #0
   16246:	it	eq
   16248:	cmpeq.w	r8, #256	; 0x100
   1624c:	beq.n	162ba <get_partition_size@@Base+0x21a>
   1624e:	add.w	fp, sp, #4128	; 0x1020
   16252:	mov.w	r2, #4096	; 0x1000
   16256:	sub.w	r3, fp, #8
   1625a:	movs	r1, #0
   1625c:	mov	r0, r3
   1625e:	blx	8bf8 <memset@plt+0x4>
   16262:	mov	r3, r0
   16264:	ldrd	r0, r1, [sl, #120]	; 0x78
   16268:	mov	r2, r3
   1626a:	strd	r8, r9, [r3, #8]
   1626e:	strd	r0, r1, [fp, #-8]
   16272:	mov	r0, r6
   16274:	ldr	r1, [pc, #120]	; (162f0 <get_partition_size@@Base+0x250>)
   16276:	blx	89cc <ioctl@plt>
   1627a:	subs.w	fp, r0, #0
   1627e:	bge.n	16294 <get_partition_size@@Base+0x1f4>
   16280:	ldr	r3, [pc, #128]	; (16304 <get_partition_size@@Base+0x264>)
   16282:	movs	r1, #1
   16284:	ldr	r2, [pc, #140]	; (16314 <get_partition_size@@Base+0x274>)
   16286:	ldr	r0, [r7, r3]
   16288:	add	r2, pc
   1628a:	mov	r3, fp
   1628c:	ldr	r0, [r0, #0]
   1628e:	blx	8ca0 <__fprintf_chk@plt+0x4>
   16292:	b.n	1614e <get_partition_size@@Base+0xae>
   16294:	add.w	r1, sp, #4128	; 0x1020
   16298:	adds	r1, #8
   1629a:	str	r1, [sp, #20]
   1629c:	mov	r0, r1
   1629e:	blx	8b70 <strlen@plt>
   162a2:	ldr	r3, [r4, #0]
   162a4:	cmp	r0, r3
   162a6:	mov	r6, r0
   162a8:	bhi.w	1614a <get_partition_size@@Base+0xaa>
   162ac:	ldr	r1, [sp, #20]
   162ae:	mov	r0, r5
   162b0:	blx	89c0 <strcat@plt+0x4>
   162b4:	ldr	r0, [r4, #0]
   162b6:	subs	r0, r0, r6
   162b8:	str	r0, [r4, #0]
   162ba:	ldrh.w	r6, [sl, #152]	; 0x98
   162be:	ldr	r3, [r4, #0]
   162c0:	cmp	r3, r6
   162c2:	bcc.w	1614a <get_partition_size@@Base+0xaa>
   162c6:	ldr	r1, [sp, #16]
   162c8:	mov	r2, r6
   162ca:	mov	r0, r5
   162cc:	mov.w	fp, #0
   162d0:	adds	r1, #146	; 0x92
   162d2:	blx	8db8 <strncat@plt>
   162d6:	ldr	r3, [r4, #0]
   162d8:	subs	r3, r3, r6
   162da:	str	r3, [r4, #0]
   162dc:	b.n	1614e <get_partition_size@@Base+0xae>
   162de:	mov	r0, fp
   162e0:	add.w	sp, sp, #8192	; 0x2000
   162e4:	add	sp, #36	; 0x24
   162e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   162ea:	nop
   162ec:	str	r4, [sp, #68]	; 0x44
   162ee:	beq.n	162f2 <get_partition_size@@Base+0x252>
   162f0:	str	r4, [sp, #72]	; 0x48
   162f2:	beq.n	162f6 <get_partition_size@@Base+0x256>
   162f4:	cmp	r4, #18
   162f6:	movs	r5, r0
   162f8:	lsls	r4, r7, #9
   162fa:	movs	r0, r0
   162fc:	cmp	r3, #252	; 0xfc
   162fe:	movs	r5, r0
   16300:	cmp	r3, #216	; 0xd8
   16302:	movs	r5, r0
   16304:	lsls	r4, r1, #10
   16306:	movs	r0, r0
   16308:	ldr	r2, [sp, #52]	; 0x34
   1630a:	movs	r2, r0
   1630c:	ldr	r2, [sp, #180]	; 0xb4
   1630e:	movs	r2, r0
   16310:	ldr	r2, [sp, #108]	; 0x6c
   16312:	movs	r2, r0
   16314:	ldr	r1, [sp, #796]	; 0x31c
   16316:	movs	r2, r0

00016318 <btrfs_subvolid_resolve@@Base>:
   16318:	push	{r0, r1, r2, r3, r4, lr}
   1631a:	cbz	r2, 16338 <btrfs_subvolid_resolve@@Base+0x20>
   1631c:	subs	r2, #1
   1631e:	movs	r4, #0
   16320:	str	r2, [sp, #12]
   16322:	strb	r4, [r1, #0]
   16324:	strb	r4, [r1, r2]
   16326:	ldrd	r2, r3, [sp, #24]
   1632a:	strd	r2, r3, [sp]
   1632e:	add	r2, sp, #12
   16330:	bl	16104 <get_partition_size@@Base+0x64>
   16334:	add	sp, #16
   16336:	pop	{r4, pc}
   16338:	mvn.w	r0, #74	; 0x4a
   1633c:	b.n	16334 <btrfs_subvolid_resolve@@Base+0x1c>

0001633e <subvol_uuid_search_add@@Base>:
   1633e:	add.w	ip, r0, #8
   16342:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16346:	mov	r5, r0
   16348:	mov	r4, r1
   1634a:	mov	r0, ip
   1634c:	movs	r6, #0
   1634e:	ldr	r1, [r0, #0]
   16350:	cmp	r1, #0
   16352:	bne.n	16402 <subvol_uuid_search_add@@Base+0xc4>
   16354:	strd	r6, r1, [r4]
   16358:	str	r1, [r4, #8]
   1635a:	mov	r1, ip
   1635c:	str	r4, [r0, #0]
   1635e:	mov	r0, r4
   16360:	bl	16fae <rb_insert_color@@Base>
   16364:	add.w	r7, r5, #20
   16368:	movs	r2, #0
   1636a:	mov	r3, r7
   1636c:	ldr	r6, [r3, #0]
   1636e:	cmp	r6, #0
   16370:	bne.n	1642a <subvol_uuid_search_add@@Base+0xec>
   16372:	add.w	r0, r4, #36	; 0x24
   16376:	strd	r2, r6, [r4, #36]	; 0x24
   1637a:	str	r6, [r4, #44]	; 0x2c
   1637c:	mov	r1, r7
   1637e:	str	r0, [r3, #0]
   16380:	bl	16fae <rb_insert_color@@Base>
   16384:	add.w	r8, r4, #56	; 0x38
   16388:	add.w	r2, r4, #55	; 0x37
   1638c:	add.w	r1, r4, #71	; 0x47
   16390:	movs	r3, #0
   16392:	ldrb.w	r0, [r2, #1]!
   16396:	cbnz	r0, 1639a <subvol_uuid_search_add@@Base+0x5c>
   16398:	adds	r3, #1
   1639a:	cmp	r2, r1
   1639c:	bne.n	16392 <subvol_uuid_search_add@@Base+0x54>
   1639e:	cmp	r3, #16
   163a0:	beq.n	163c2 <subvol_uuid_search_add@@Base+0x84>
   163a2:	add.w	r7, r5, #12
   163a6:	movs	r2, #0
   163a8:	mov	r3, r7
   163aa:	ldr	r6, [r3, #0]
   163ac:	cmp	r6, #0
   163ae:	bne.n	1644e <subvol_uuid_search_add@@Base+0x110>
   163b0:	add.w	r0, r4, #12
   163b4:	strd	r2, r6, [r4, #12]
   163b8:	str	r6, [r4, #20]
   163ba:	mov	r1, r7
   163bc:	str	r0, [r3, #0]
   163be:	bl	16fae <rb_insert_color@@Base>
   163c2:	add.w	r7, r4, #88	; 0x58
   163c6:	add.w	r2, r4, #87	; 0x57
   163ca:	add.w	r1, r4, #103	; 0x67
   163ce:	movs	r3, #0
   163d0:	ldrb.w	r0, [r2, #1]!
   163d4:	cbnz	r0, 163d8 <subvol_uuid_search_add@@Base+0x9a>
   163d6:	adds	r3, #1
   163d8:	cmp	r2, r1
   163da:	bne.n	163d0 <subvol_uuid_search_add@@Base+0x92>
   163dc:	cmp	r3, #16
   163de:	beq.n	1649c <subvol_uuid_search_add@@Base+0x15e>
   163e0:	adds	r5, #16
   163e2:	movs	r2, #0
   163e4:	mov	r3, r5
   163e6:	ldr	r6, [r3, #0]
   163e8:	cmp	r6, #0
   163ea:	bne.n	16474 <subvol_uuid_search_add@@Base+0x136>
   163ec:	add.w	r0, r4, #24
   163f0:	strd	r2, r6, [r4, #24]
   163f4:	str	r6, [r4, #32]
   163f6:	mov	r1, r5
   163f8:	str	r0, [r3, #0]
   163fa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   163fe:	b.w	16fae <rb_insert_color@@Base>
   16402:	ldrd	r0, r7, [r4, #48]	; 0x30
   16406:	ldr	r6, [r1, #48]	; 0x30
   16408:	subs	r2, r6, r0
   1640a:	ldr	r0, [r1, #52]	; 0x34
   1640c:	sbc.w	r3, r0, r7
   16410:	cmp	r2, #0
   16412:	sbcs.w	r0, r3, #0
   16416:	bge.n	16420 <subvol_uuid_search_add@@Base+0xe2>
   16418:	add.w	r0, r1, #8
   1641c:	mov	r6, r1
   1641e:	b.n	1634e <subvol_uuid_search_add@@Base+0x10>
   16420:	orrs.w	r0, r2, r3
   16424:	beq.n	16364 <subvol_uuid_search_add@@Base+0x26>
   16426:	adds	r0, r1, #4
   16428:	b.n	1641c <subvol_uuid_search_add@@Base+0xde>
   1642a:	ldr.w	r1, [r4, #136]	; 0x88
   1642e:	ldr	r0, [r6, #100]	; 0x64
   16430:	blx	8748 <strcmp@plt>
   16434:	cmp	r0, #0
   16436:	mov.w	r3, r0, asr #31
   1643a:	mov	r2, r0
   1643c:	bge.n	16446 <subvol_uuid_search_add@@Base+0x108>
   1643e:	add.w	r3, r6, #8
   16442:	mov	r2, r6
   16444:	b.n	1636c <subvol_uuid_search_add@@Base+0x2e>
   16446:	orrs	r3, r2
   16448:	beq.n	16384 <subvol_uuid_search_add@@Base+0x46>
   1644a:	adds	r3, r6, #4
   1644c:	b.n	16442 <subvol_uuid_search_add@@Base+0x104>
   1644e:	movs	r2, #16
   16450:	add.w	r0, r6, #44	; 0x2c
   16454:	mov	r1, r8
   16456:	blx	887c <memcmp@plt+0x4>
   1645a:	cmp	r0, #0
   1645c:	mov.w	r3, r0, asr #31
   16460:	mov	r2, r0
   16462:	bge.n	1646c <subvol_uuid_search_add@@Base+0x12e>
   16464:	add.w	r3, r6, #8
   16468:	mov	r2, r6
   1646a:	b.n	163aa <subvol_uuid_search_add@@Base+0x6c>
   1646c:	orrs	r3, r2
   1646e:	beq.n	163c2 <subvol_uuid_search_add@@Base+0x84>
   16470:	adds	r3, r6, #4
   16472:	b.n	16468 <subvol_uuid_search_add@@Base+0x12a>
   16474:	add.w	r0, r6, #64	; 0x40
   16478:	movs	r2, #16
   1647a:	mov	r1, r7
   1647c:	blx	887c <memcmp@plt+0x4>
   16480:	asrs	r3, r0, #31
   16482:	cbnz	r0, 164a0 <subvol_uuid_search_add@@Base+0x162>
   16484:	ldrd	r2, r3, [r6, #96]	; 0x60
   16488:	ldrd	r0, r1, [r4, #120]	; 0x78
   1648c:	cmp	r3, r1
   1648e:	it	eq
   16490:	cmpeq	r2, r0
   16492:	bcc.n	164a8 <subvol_uuid_search_add@@Base+0x16a>
   16494:	cmp	r1, r3
   16496:	it	eq
   16498:	cmpeq	r0, r2
   1649a:	bcc.n	164b0 <subvol_uuid_search_add@@Base+0x172>
   1649c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   164a0:	cmp	r0, #0
   164a2:	sbcs.w	r3, r3, #0
   164a6:	bge.n	164b0 <subvol_uuid_search_add@@Base+0x172>
   164a8:	add.w	r3, r6, #8
   164ac:	mov	r2, r6
   164ae:	b.n	163e6 <subvol_uuid_search_add@@Base+0xa8>
   164b0:	adds	r3, r6, #4
   164b2:	b.n	164ac <subvol_uuid_search_add@@Base+0x16e>

000164b4 <subvol_uuid_search2@@Base>:
   164b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   164b8:	mov	r4, r0
   164ba:	vpush	{d8-d9}
   164be:	ldr.w	ip, [pc, #1180]	; 1695c <subvol_uuid_search2@@Base+0x4a8>
   164c2:	ldr.w	r0, [pc, #1180]	; 16960 <subvol_uuid_search2@@Base+0x4ac>
   164c6:	add	ip, pc
   164c8:	ldr.w	r5, [pc, #1176]	; 16964 <subvol_uuid_search2@@Base+0x4b0>
   164cc:	sub.w	sp, sp, #4576	; 0x11e0
   164d0:	sub	sp, #20
   164d2:	add	r5, pc
   164d4:	add.w	r1, sp, #4640	; 0x1220
   164d8:	add.w	sl, sp, #48	; 0x30
   164dc:	adds	r1, #8
   164de:	strd	r2, r3, [sl, #-8]
   164e2:	ldr.w	r8, [r1]
   164e6:	add.w	r1, sp, #4640	; 0x1220
   164ea:	adds	r1, #24
   164ec:	ldr.w	r0, [ip, r0]
   164f0:	vldr	s16, [r1]
   164f4:	add.w	r1, sp, #4640	; 0x1220
   164f8:	adds	r1, #28
   164fa:	ldr.w	fp, [r1]
   164fe:	add.w	r1, sp, #4576	; 0x11e0
   16502:	ldr	r0, [r0, #0]
   16504:	str	r0, [r1, #12]
   16506:	mov.w	r0, #0
   1650a:	ldr	r0, [r4, #4]
   1650c:	adds	r1, #12
   1650e:	cmp	r0, #0
   16510:	bne.w	16642 <subvol_uuid_search2@@Base+0x18e>
   16514:	cmp.w	fp, #2
   16518:	mov	r9, r2
   1651a:	str	r3, [sp, #16]
   1651c:	bne.n	16526 <subvol_uuid_search2@@Base+0x72>
   1651e:	ldr	r4, [r4, #16]
   16520:	cbnz	r4, 16546 <subvol_uuid_search2@@Base+0x92>
   16522:	mov	sl, r4
   16524:	b.n	1658c <subvol_uuid_search2@@Base+0xd8>
   16526:	cmp.w	fp, #1
   1652a:	bne.n	16530 <subvol_uuid_search2@@Base+0x7c>
   1652c:	ldr	r4, [r4, #12]
   1652e:	b.n	16520 <subvol_uuid_search2@@Base+0x6c>
   16530:	cmp.w	fp, #0
   16534:	bne.n	1653a <subvol_uuid_search2@@Base+0x86>
   16536:	ldr	r4, [r4, #8]
   16538:	b.n	16520 <subvol_uuid_search2@@Base+0x6c>
   1653a:	cmp.w	fp, #3
   1653e:	bne.w	16938 <subvol_uuid_search2@@Base+0x484>
   16542:	ldr	r4, [r4, #20]
   16544:	b.n	16520 <subvol_uuid_search2@@Base+0x6c>
   16546:	cmp.w	fp, #2
   1654a:	bne.n	165a8 <subvol_uuid_search2@@Base+0xf4>
   1654c:	add.w	r0, r4, #64	; 0x40
   16550:	movs	r2, #16
   16552:	mov	r1, r8
   16554:	sub.w	sl, r4, #24
   16558:	blx	887c <memcmp@plt+0x4>
   1655c:	asrs	r3, r0, #31
   1655e:	cmp	r0, #0
   16560:	bne.w	1693c <subvol_uuid_search2@@Base+0x488>
   16564:	add.w	r3, sp, #4640	; 0x1220
   16568:	ldrd	r0, r1, [r4, #96]	; 0x60
   1656c:	adds	r3, #16
   1656e:	ldrd	r2, r3, [r3]
   16572:	cmp	r1, r3
   16574:	it	eq
   16576:	cmpeq	r0, r2
   16578:	bcc.n	16536 <subvol_uuid_search2@@Base+0x82>
   1657a:	add.w	r3, sp, #4640	; 0x1220
   1657e:	adds	r3, #16
   16580:	ldrd	r2, r3, [r3]
   16584:	cmp	r3, r1
   16586:	it	eq
   16588:	cmpeq	r2, r0
   1658a:	bcc.n	165e8 <subvol_uuid_search2@@Base+0x134>
   1658c:	ldr	r1, [pc, #984]	; (16968 <subvol_uuid_search2@@Base+0x4b4>)
   1658e:	add.w	r3, sp, #4576	; 0x11e0
   16592:	ldr	r2, [pc, #972]	; (16960 <subvol_uuid_search2@@Base+0x4ac>)
   16594:	adds	r3, #12
   16596:	add	r1, pc
   16598:	ldr	r2, [r1, r2]
   1659a:	ldr	r1, [r2, #0]
   1659c:	ldr	r2, [r3, #0]
   1659e:	eors	r1, r2
   165a0:	beq.w	16948 <subvol_uuid_search2@@Base+0x494>
   165a4:	blx	88e4 <__stack_chk_fail@plt>
   165a8:	cmp.w	fp, #1
   165ac:	bne.n	165c4 <subvol_uuid_search2@@Base+0x110>
   165ae:	add.w	r0, r4, #44	; 0x2c
   165b2:	movs	r2, #16
   165b4:	mov	r1, r8
   165b6:	sub.w	sl, r4, #12
   165ba:	blx	887c <memcmp@plt+0x4>
   165be:	asrs	r7, r0, #31
   165c0:	mov	r6, r0
   165c2:	b.n	165da <subvol_uuid_search2@@Base+0x126>
   165c4:	cmp.w	fp, #0
   165c8:	bne.n	165ec <subvol_uuid_search2@@Base+0x138>
   165ca:	ldrd	r3, r2, [r4, #48]	; 0x30
   165ce:	mov	sl, r4
   165d0:	subs.w	r6, r3, r9
   165d4:	ldr	r3, [sp, #16]
   165d6:	sbc.w	r7, r2, r3
   165da:	cmp	r6, #0
   165dc:	sbcs.w	r3, r7, #0
   165e0:	blt.n	16536 <subvol_uuid_search2@@Base+0x82>
   165e2:	orrs.w	r3, r6, r7
   165e6:	beq.n	1658c <subvol_uuid_search2@@Base+0xd8>
   165e8:	ldr	r4, [r4, #4]
   165ea:	b.n	16520 <subvol_uuid_search2@@Base+0x6c>
   165ec:	cmp.w	fp, #3
   165f0:	bne.n	16602 <subvol_uuid_search2@@Base+0x14e>
   165f2:	vmov	r1, s16
   165f6:	sub.w	sl, r4, #36	; 0x24
   165fa:	ldr	r0, [r4, #100]	; 0x64
   165fc:	blx	8748 <strcmp@plt>
   16600:	b.n	165be <subvol_uuid_search2@@Base+0x10a>
   16602:	ldr	r3, [pc, #872]	; (1696c <subvol_uuid_search2@@Base+0x4b8>)
   16604:	add	r4, sp, #488	; 0x1e8
   16606:	ldr	r2, [pc, #872]	; (16970 <subvol_uuid_search2@@Base+0x4bc>)
   16608:	movs	r1, #1
   1660a:	ldr	r0, [r5, r3]
   1660c:	add	r2, pc
   1660e:	ldr	r3, [pc, #868]	; (16974 <subvol_uuid_search2@@Base+0x4c0>)
   16610:	str	r1, [sp, #12]
   16612:	add	r3, pc
   16614:	str	r3, [sp, #8]
   16616:	ldr	r3, [pc, #864]	; (16978 <subvol_uuid_search2@@Base+0x4c4>)
   16618:	add	r3, pc
   1661a:	str	r3, [sp, #4]
   1661c:	mov.w	r3, #402	; 0x192
   16620:	str	r3, [sp, #0]
   16622:	ldr	r3, [pc, #856]	; (1697c <subvol_uuid_search2@@Base+0x4c8>)
   16624:	ldr	r0, [r0, #0]
   16626:	add	r3, pc
   16628:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1662c:	movs	r1, #16
   1662e:	mov	r0, r4
   16630:	blx	8ae0 <backtrace@plt>
   16634:	movs	r2, #2
   16636:	mov	r1, r0
   16638:	mov	r0, r4
   1663a:	blx	8e50 <backtrace_symbols_fd@plt>
   1663e:	blx	8e08 <abort@plt>
   16642:	cmp.w	fp, #3
   16646:	bhi.w	1692c <subvol_uuid_search2@@Base+0x478>
   1664a:	tbb	[pc, fp]
   1664e:	ldmia	r3, {r2, r3}
   16650:	bcs.n	16658 <subvol_uuid_search2@@Base+0x1a4>
   16652:	ldr	r0, [r4, #0]
   16654:	sub.w	r2, sl, #8
   16658:	mov	r1, r8
   1665a:	bl	1abba <btrfs_lookup_uuid_received_subvol_item@@Base>
   1665e:	mov	r6, r0
   16660:	cmp	r6, #0
   16662:	bne.w	168b8 <subvol_uuid_search2@@Base+0x404>
   16666:	ldr	r3, [r4, #0]
   16668:	add	r6, sp, #488	; 0x1e8
   1666a:	add	r7, sp, #496	; 0x1f0
   1666c:	mov.w	r8, #4096	; 0x1000
   16670:	movs	r1, #0
   16672:	mov	r0, r6
   16674:	vmov	s17, r3
   16678:	ldrd	r2, r3, [sl, #-8]
   1667c:	strd	r2, r3, [sp, #16]
   16680:	mov	r2, r8
   16682:	blx	8bf8 <memset@plt+0x4>
   16686:	movs	r2, #1
   16688:	movs	r3, #0
   1668a:	strd	r2, r3, [r7, #-8]
   1668e:	ldrd	r2, r3, [sp, #16]
   16692:	movs	r7, #0
   16694:	str.w	r8, [r6, #64]	; 0x40
   16698:	strd	r2, r3, [r6, #8]
   1669c:	strd	r2, r3, [r6, #16]
   166a0:	mov.w	r2, #4294967295	; 0xffffffff
   166a4:	movs	r3, #132	; 0x84
   166a6:	strd	r3, r3, [r6, #56]	; 0x38
   166aa:	mov.w	r3, #4294967295	; 0xffffffff
   166ae:	strd	r2, r3, [r6, #32]
   166b2:	strd	r2, r3, [r6, #48]	; 0x30
   166b6:	add	r2, sp, #48	; 0x30
   166b8:	mov	r3, r7
   166ba:	vmov	s18, r2
   166be:	vmov	r0, s17
   166c2:	mov	r2, r6
   166c4:	ldr	r1, [pc, #656]	; (16958 <subvol_uuid_search2@@Base+0x4a4>)
   166c6:	str	r3, [sp, #28]
   166c8:	blx	89cc <ioctl@plt>
   166cc:	ldr	r3, [sp, #28]
   166ce:	cmp	r0, #0
   166d0:	bge.w	16832 <subvol_uuid_search2@@Base+0x37e>
   166d4:	ldr	r3, [pc, #660]	; (1696c <subvol_uuid_search2@@Base+0x4b8>)
   166d6:	movs	r1, #1
   166d8:	ldr	r2, [pc, #676]	; (16980 <subvol_uuid_search2@@Base+0x4cc>)
   166da:	ldr	r3, [r5, r3]
   166dc:	add	r2, pc
   166de:	ldr	r0, [r3, #0]
   166e0:	blx	8ca0 <__fprintf_chk@plt+0x4>
   166e4:	movw	r3, #439	; 0x1b7
   166e8:	cmp	r7, r3
   166ea:	add	r5, sp, #48	; 0x30
   166ec:	bne.n	16702 <subvol_uuid_search2@@Base+0x24e>
   166ee:	ldrd	r2, r3, [r5, #160]	; 0xa0
   166f2:	ldr.w	r1, [r5, #243]	; 0xf3
   166f6:	ldr.w	r0, [r5, #239]	; 0xef
   166fa:	cmp	r3, r1
   166fc:	it	eq
   166fe:	cmpeq	r2, r0
   16700:	beq.n	1670e <subvol_uuid_search2@@Base+0x25a>
   16702:	add.w	r0, r5, #239	; 0xef
   16706:	movs	r2, #200	; 0xc8
   16708:	movs	r1, #0
   1670a:	blx	8bf8 <memset@plt+0x4>
   1670e:	movs	r1, #144	; 0x90
   16710:	movs	r0, #1
   16712:	blx	8718 <calloc@plt+0x4>
   16716:	mov	sl, r0
   16718:	cmp	r0, #0
   1671a:	beq.w	16932 <subvol_uuid_search2@@Base+0x47e>
   1671e:	ldrd	r6, r7, [r5, #-8]
   16722:	add.w	r2, r5, #247	; 0xf7
   16726:	add.w	lr, r0, #56	; 0x38
   1672a:	addw	r8, r5, #263	; 0x107
   1672e:	strd	r6, r7, [r0, #48]	; 0x30
   16732:	ldr	r0, [r2, #0]
   16734:	adds	r2, #8
   16736:	ldr.w	r1, [r2, #-4]
   1673a:	cmp	r2, r8
   1673c:	mov	ip, lr
   1673e:	stmia.w	ip!, {r0, r1}
   16742:	mov	lr, ip
   16744:	bne.n	16732 <subvol_uuid_search2@@Base+0x27e>
   16746:	addw	r2, r5, #279	; 0x117
   1674a:	add.w	lr, sl, #88	; 0x58
   1674e:	addw	r8, r5, #295	; 0x127
   16752:	ldr	r0, [r2, #0]
   16754:	adds	r2, #8
   16756:	ldr.w	r1, [r2, #-4]
   1675a:	cmp	r2, r8
   1675c:	mov	ip, lr
   1675e:	stmia.w	ip!, {r0, r1}
   16762:	mov	lr, ip
   16764:	bne.n	16752 <subvol_uuid_search2@@Base+0x29e>
   16766:	addw	r2, r5, #263	; 0x107
   1676a:	add.w	lr, sl, #72	; 0x48
   1676e:	addw	r8, r5, #279	; 0x117
   16772:	ldr	r0, [r2, #0]
   16774:	adds	r2, #8
   16776:	ldr.w	r1, [r2, #-4]
   1677a:	cmp	r2, r8
   1677c:	mov	ip, lr
   1677e:	stmia.w	ip!, {r0, r1}
   16782:	mov	lr, ip
   16784:	bne.n	16772 <subvol_uuid_search2@@Base+0x2be>
   16786:	ldr.w	r1, [r5, #295]	; 0x127
   1678a:	cmp.w	fp, #3
   1678e:	ldr.w	r2, [r5, #299]	; 0x12b
   16792:	strd	r1, r2, [sl, #104]	; 0x68
   16796:	ldr.w	r1, [r5, #303]	; 0x12f
   1679a:	ldr.w	r2, [r5, #307]	; 0x133
   1679e:	strd	r1, r2, [sl, #112]	; 0x70
   167a2:	ldr.w	r1, [r5, #311]	; 0x137
   167a6:	ldr.w	r2, [r5, #315]	; 0x13b
   167aa:	strd	r1, r2, [sl, #120]	; 0x78
   167ae:	ldr.w	r1, [r5, #319]	; 0x13f
   167b2:	ldr.w	r2, [r5, #323]	; 0x143
   167b6:	strd	r1, r2, [sl, #128]	; 0x80
   167ba:	bne.w	16900 <subvol_uuid_search2@@Base+0x44c>
   167be:	vmov	r0, s16
   167c2:	blx	88cc <strdup@plt+0x4>
   167c6:	str.w	r0, [sl, #136]	; 0x88
   167ca:	cmp	r0, #0
   167cc:	bne.w	1658c <subvol_uuid_search2@@Base+0xd8>
   167d0:	mvn.w	r6, #11
   167d4:	ldr.w	r0, [sl, #136]	; 0x88
   167d8:	blx	87cc <free@plt+0x4>
   167dc:	mov	r0, sl
   167de:	blx	87cc <free@plt+0x4>
   167e2:	b.n	168b8 <subvol_uuid_search2@@Base+0x404>
   167e4:	ldr	r0, [r4, #0]
   167e6:	sub.w	r2, sl, #8
   167ea:	mov	r1, r8
   167ec:	bl	1abb4 <btrfs_lookup_uuid_subvol_item@@Base>
   167f0:	b.n	1665e <subvol_uuid_search2@@Base+0x1aa>
   167f2:	vmov	r1, s16
   167f6:	movs	r2, #0
   167f8:	ldr	r0, [r4, #0]
   167fa:	blx	8b88 <openat64@plt>
   167fe:	subs	r7, r0, #0
   16800:	bge.n	16820 <subvol_uuid_search2@@Base+0x36c>
   16802:	blx	8bac <__errno_location@plt>
   16806:	ldr	r3, [pc, #356]	; (1696c <subvol_uuid_search2@@Base+0x4b8>)
   16808:	ldr	r2, [pc, #376]	; (16984 <subvol_uuid_search2@@Base+0x4d0>)
   1680a:	movs	r1, #1
   1680c:	add	r2, pc
   1680e:	ldr	r6, [r0, #0]
   16810:	ldr	r0, [r5, r3]
   16812:	vmov	r3, s16
   16816:	negs	r6, r6
   16818:	ldr	r0, [r0, #0]
   1681a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1681e:	b.n	16660 <subvol_uuid_search2@@Base+0x1ac>
   16820:	sub.w	r1, sl, #8
   16824:	bl	18b44 <btrfs_list_get_path_rootid@@Base>
   16828:	mov	r6, r0
   1682a:	mov	r0, r7
   1682c:	blx	8e20 <close@plt>
   16830:	b.n	16660 <subvol_uuid_search2@@Base+0x1ac>
   16832:	ldr	r2, [r6, #64]	; 0x40
   16834:	str	r2, [sp, #32]
   16836:	cbz	r2, 1688a <subvol_uuid_search2@@Base+0x3d6>
   16838:	add	r2, sp, #592	; 0x250
   1683a:	mov.w	sl, #0
   1683e:	str	r2, [sp, #36]	; 0x24
   16840:	str.w	sl, [sp, #28]
   16844:	ldr	r1, [sp, #28]
   16846:	ldr	r2, [sp, #36]	; 0x24
   16848:	add.w	ip, r1, #32
   1684c:	add	r2, r1
   1684e:	ldr.w	r8, [r2, #28]
   16852:	ldr	r0, [r2, #8]
   16854:	add.w	r1, r8, ip
   16858:	str	r1, [sp, #28]
   1685a:	ldr	r1, [r2, #12]
   1685c:	ldrd	r8, r9, [sp, #16]
   16860:	strd	r0, r1, [r6, #8]
   16864:	ldr	r1, [r2, #24]
   16866:	str	r1, [r6, #56]	; 0x38
   16868:	ldr	r0, [r2, #16]
   1686a:	ldr	r1, [r2, #20]
   1686c:	strd	r0, r1, [r6, #24]
   16870:	ldr	r1, [r2, #12]
   16872:	ldr	r0, [r2, #8]
   16874:	cmp	r9, r1
   16876:	it	eq
   16878:	cmpeq	r8, r0
   1687a:	bcs.n	16896 <subvol_uuid_search2@@Base+0x3e2>
   1687c:	ldrd	r1, r2, [r6, #24]
   16880:	adds	r0, r2, #1
   16882:	it	eq
   16884:	cmpeq.w	r1, #4294967295	; 0xffffffff
   16888:	bne.n	168dc <subvol_uuid_search2@@Base+0x428>
   1688a:	cmp	r3, #0
   1688c:	bne.w	166e4 <subvol_uuid_search2@@Base+0x230>
   16890:	mvn.w	r6, #1
   16894:	b.n	168b8 <subvol_uuid_search2@@Base+0x404>
   16896:	bne.n	168d0 <subvol_uuid_search2@@Base+0x41c>
   16898:	ldr	r1, [r2, #24]
   1689a:	cmp	r1, #132	; 0x84
   1689c:	bne.n	168d0 <subvol_uuid_search2@@Base+0x41c>
   1689e:	ldr	r7, [r2, #28]
   168a0:	cmp.w	r7, #440	; 0x1b8
   168a4:	bcc.n	168bc <subvol_uuid_search2@@Base+0x408>
   168a6:	ldr	r3, [pc, #196]	; (1696c <subvol_uuid_search2@@Base+0x4b8>)
   168a8:	mvn.w	r6, #74	; 0x4a
   168ac:	ldr	r0, [pc, #216]	; (16988 <subvol_uuid_search2@@Base+0x4d4>)
   168ae:	ldr	r3, [r5, r3]
   168b0:	add	r0, pc
   168b2:	ldr	r1, [r3, #0]
   168b4:	blx	8de4 <fputs@plt+0x4>
   168b8:	mov	sl, r6
   168ba:	b.n	1658c <subvol_uuid_search2@@Base+0xd8>
   168bc:	ldr	r1, [sp, #36]	; 0x24
   168be:	movw	r3, #439	; 0x1b7
   168c2:	vmov	r0, s18
   168c6:	mov	r2, r7
   168c8:	add	r1, ip
   168ca:	blx	89a4 <__memcpy_chk@plt>
   168ce:	movs	r3, #1
   168d0:	ldr	r2, [sp, #32]
   168d2:	add.w	sl, sl, #1
   168d6:	cmp	r2, sl
   168d8:	bne.n	16844 <subvol_uuid_search2@@Base+0x390>
   168da:	b.n	1687c <subvol_uuid_search2@@Base+0x3c8>
   168dc:	adds	r0, r1, #1
   168de:	adc.w	r2, r2, #0
   168e2:	strd	r0, r2, [r6, #24]
   168e6:	ldr	r2, [r6, #56]	; 0x38
   168e8:	cmp	r2, #132	; 0x84
   168ea:	bne.n	1688a <subvol_uuid_search2@@Base+0x3d6>
   168ec:	ldrd	r0, r1, [r6, #8]
   168f0:	ldrd	r8, r9, [sp, #16]
   168f4:	cmp	r9, r1
   168f6:	it	eq
   168f8:	cmpeq	r8, r0
   168fa:	beq.w	166be <subvol_uuid_search2@@Base+0x20a>
   168fe:	b.n	1688a <subvol_uuid_search2@@Base+0x3d6>
   16900:	mov.w	r0, #4096	; 0x1000
   16904:	blx	8a94 <malloc@plt+0x4>
   16908:	mov	r1, r0
   1690a:	str.w	r0, [sl, #136]	; 0x88
   1690e:	cmp	r0, #0
   16910:	beq.w	167d0 <subvol_uuid_search2@@Base+0x31c>
   16914:	strd	r6, r7, [sp]
   16918:	mov.w	r2, #4096	; 0x1000
   1691c:	ldr	r0, [r4, #0]
   1691e:	bl	16318 <btrfs_subvolid_resolve@@Base>
   16922:	mov	r6, r0
   16924:	cmp	r0, #0
   16926:	beq.w	1658c <subvol_uuid_search2@@Base+0xd8>
   1692a:	b.n	167d4 <subvol_uuid_search2@@Base+0x320>
   1692c:	mvn.w	r6, #21
   16930:	b.n	168b8 <subvol_uuid_search2@@Base+0x404>
   16932:	mvn.w	r6, #11
   16936:	b.n	168b8 <subvol_uuid_search2@@Base+0x404>
   16938:	mov	sl, r0
   1693a:	b.n	1658c <subvol_uuid_search2@@Base+0xd8>
   1693c:	cmp	r0, #0
   1693e:	sbcs.w	r3, r3, #0
   16942:	bge.w	165e8 <subvol_uuid_search2@@Base+0x134>
   16946:	b.n	16536 <subvol_uuid_search2@@Base+0x82>
   16948:	mov	r0, sl
   1694a:	add.w	sp, sp, #4576	; 0x11e0
   1694e:	add	sp, #20
   16950:	vpop	{d8-d9}
   16954:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16958:	str	r4, [sp, #68]	; 0x44
   1695a:	beq.n	1695e <subvol_uuid_search2@@Base+0x4aa>
   1695c:	cmp	r0, #106	; 0x6a
   1695e:	movs	r5, r0
   16960:	lsls	r4, r7, #9
   16962:	movs	r0, r0
   16964:	cmp	r0, #94	; 0x5e
   16966:	movs	r5, r0
   16968:	movs	r7, #154	; 0x9a
   1696a:	movs	r5, r0
   1696c:	lsls	r4, r1, #10
   1696e:	movs	r0, r0
   16970:	ldr	r3, [r3, #24]
   16972:	movs	r2, r0
   16974:	cbnz	r3, 16980 <subvol_uuid_search2@@Base+0x4cc>
   16976:	movs	r2, r0
   16978:	str	r7, [sp, #428]	; 0x1ac
   1697a:	movs	r2, r0
   1697c:	str	r6, [sp, #352]	; 0x160
   1697e:	movs	r2, r0
   16980:	str	r5, [sp, #808]	; 0x328
   16982:	movs	r2, r0
   16984:	str	r4, [sp, #508]	; 0x1fc
   16986:	movs	r2, r0
   16988:	str	r4, [sp, #112]	; 0x70
   1698a:	movs	r2, r0

0001698c <subvol_uuid_search@@Base>:
   1698c:	push	{r4, r5, lr}
   1698e:	sub	sp, #28
   16990:	ldr	r1, [sp, #60]	; 0x3c
   16992:	ldrd	r4, r5, [sp, #48]	; 0x30
   16996:	str	r1, [sp, #20]
   16998:	ldr	r1, [sp, #56]	; 0x38
   1699a:	strd	r4, r5, [sp, #8]
   1699e:	str	r1, [sp, #16]
   169a0:	ldr	r1, [sp, #40]	; 0x28
   169a2:	str	r1, [sp, #0]
   169a4:	bl	164b4 <subvol_uuid_search2@@Base>
   169a8:	cmn.w	r0, #4096	; 0x1000
   169ac:	it	hi
   169ae:	movhi	r0, #0
   169b0:	add	sp, #28
   169b2:	pop	{r4, r5, pc}

000169b4 <subvol_uuid_search_init@@Base>:
   169b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   169b8:	mov	r9, r1
   169ba:	vpush	{d8}
   169be:	movs	r6, #0
   169c0:	ldr	r1, [pc, #820]	; (16cf8 <subvol_uuid_search_init@@Base+0x344>)
   169c2:	mov.w	r5, #4096	; 0x1000
   169c6:	ldr	r2, [pc, #820]	; (16cfc <subvol_uuid_search_init@@Base+0x348>)
   169c8:	mov.w	sl, #4294967295	; 0xffffffff
   169cc:	add	r1, pc
   169ce:	ldr	r3, [pc, #816]	; (16d00 <subvol_uuid_search_init@@Base+0x34c>)
   169d0:	sub.w	sp, sp, #4608	; 0x1200
   169d4:	vmov	s16, r0
   169d8:	sub	sp, #4
   169da:	add	r3, pc
   169dc:	add	r4, sp, #504	; 0x1f8
   169de:	add	r7, sp, #512	; 0x200
   169e0:	str	r3, [sp, #12]
   169e2:	add.w	r3, sp, #4576	; 0x11e0
   169e6:	ldr	r2, [r1, r2]
   169e8:	add	r0, sp, #64	; 0x40
   169ea:	movs	r1, #0
   169ec:	adds	r3, #28
   169ee:	ldr	r2, [r2, #0]
   169f0:	str	r2, [r3, #0]
   169f2:	mov.w	r2, #0
   169f6:	movw	r2, #439	; 0x1b7
   169fa:	blx	8bf8 <memset@plt+0x4>
   169fe:	mov	r2, r5
   16a00:	mov	r1, r6
   16a02:	vstr	s16, [r9]
   16a06:	mov	r0, r4
   16a08:	strd	r6, r6, [r9, #8]
   16a0c:	strd	r6, r6, [r9, #16]
   16a10:	mov.w	fp, #4294967295	; 0xffffffff
   16a14:	blx	8bf8 <memset@plt+0x4>
   16a18:	movs	r2, #1
   16a1a:	movs	r3, #0
   16a1c:	vmov	r0, s16
   16a20:	strd	r2, r3, [r7, #-8]
   16a24:	movs	r2, #9
   16a26:	movs	r3, #0
   16a28:	ldr	r1, [pc, #712]	; (16cf4 <subvol_uuid_search_init@@Base+0x340>)
   16a2a:	strd	r2, r3, [r4, #8]
   16a2e:	movs	r7, #1
   16a30:	strd	r2, r3, [r4, #16]
   16a34:	mov	r2, r4
   16a36:	movs	r3, #132	; 0x84
   16a38:	strd	sl, fp, [r4, #32]
   16a3c:	strd	r3, r3, [r4, #56]	; 0x38
   16a40:	strd	sl, fp, [r4, #48]	; 0x30
   16a44:	str	r7, [r4, #64]	; 0x40
   16a46:	blx	89cc <ioctl@plt>
   16a4a:	subs	r3, r0, #0
   16a4c:	str	r3, [sp, #8]
   16a4e:	blt.n	16ad8 <subvol_uuid_search_init@@Base+0x124>
   16a50:	ldr.w	r8, [r4, #64]	; 0x40
   16a54:	cmp.w	r8, #0
   16a58:	beq.n	16a7c <subvol_uuid_search_init@@Base+0xc8>
   16a5a:	str.w	r7, [r9, #4]
   16a5e:	str	r6, [sp, #8]
   16a60:	ldr	r1, [pc, #672]	; (16d04 <subvol_uuid_search_init@@Base+0x350>)
   16a62:	add.w	r3, sp, #4576	; 0x11e0
   16a66:	ldr	r2, [pc, #660]	; (16cfc <subvol_uuid_search_init@@Base+0x348>)
   16a68:	adds	r3, #28
   16a6a:	add	r1, pc
   16a6c:	ldr	r2, [r1, r2]
   16a6e:	ldr	r1, [r2, #0]
   16a70:	ldr	r2, [r3, #0]
   16a72:	eors	r1, r2
   16a74:	beq.w	16ce2 <subvol_uuid_search_init@@Base+0x32e>
   16a78:	blx	88e4 <__stack_chk_fail@plt>
   16a7c:	mov	r2, r5
   16a7e:	mov	r1, r8
   16a80:	mov	r0, r4
   16a82:	blx	8bf8 <memset@plt+0x4>
   16a86:	str	r5, [r4, #64]	; 0x40
   16a88:	mov	r5, r8
   16a8a:	movs	r3, #0
   16a8c:	movs	r2, #1
   16a8e:	movs	r1, #132	; 0x84
   16a90:	strd	r2, r3, [r4]
   16a94:	movs	r3, #144	; 0x90
   16a96:	strd	sl, fp, [r4, #16]
   16a9a:	strd	r1, r3, [r4, #56]	; 0x38
   16a9e:	add	r3, sp, #608	; 0x260
   16aa0:	strd	sl, fp, [r4, #32]
   16aa4:	strd	sl, fp, [r4, #48]	; 0x30
   16aa8:	str.w	r8, [sp, #52]	; 0x34
   16aac:	strd	r8, r8, [sp, #28]
   16ab0:	strd	r8, r8, [sp, #44]	; 0x2c
   16ab4:	strd	r8, r8, [sp, #36]	; 0x24
   16ab8:	str	r3, [sp, #60]	; 0x3c
   16aba:	vmov	r0, s16
   16abe:	mov	r2, r4
   16ac0:	ldr	r1, [pc, #560]	; (16cf4 <subvol_uuid_search_init@@Base+0x340>)
   16ac2:	blx	89cc <ioctl@plt>
   16ac6:	subs	r3, r0, #0
   16ac8:	str	r3, [sp, #8]
   16aca:	bge.n	16aec <subvol_uuid_search_init@@Base+0x138>
   16acc:	ldr	r2, [sp, #12]
   16ace:	ldr	r3, [pc, #568]	; (16d08 <subvol_uuid_search_init@@Base+0x354>)
   16ad0:	ldr	r3, [r2, r3]
   16ad2:	ldr	r2, [pc, #568]	; (16d0c <subvol_uuid_search_init@@Base+0x358>)
   16ad4:	add	r2, pc
   16ad6:	b.n	16ae2 <subvol_uuid_search_init@@Base+0x12e>
   16ad8:	ldr	r2, [sp, #12]
   16ada:	ldr	r3, [pc, #556]	; (16d08 <subvol_uuid_search_init@@Base+0x354>)
   16adc:	ldr	r3, [r2, r3]
   16ade:	ldr	r2, [pc, #560]	; (16d10 <subvol_uuid_search_init@@Base+0x35c>)
   16ae0:	add	r2, pc
   16ae2:	ldr	r0, [r3, #0]
   16ae4:	movs	r1, #1
   16ae6:	blx	8ca0 <__fprintf_chk@plt+0x4>
   16aea:	b.n	16a60 <subvol_uuid_search_init@@Base+0xac>
   16aec:	ldr	r3, [r4, #64]	; 0x40
   16aee:	cmp	r3, #0
   16af0:	beq.n	16a60 <subvol_uuid_search_init@@Base+0xac>
   16af2:	mov.w	fp, #0
   16af6:	add	r7, sp, #64	; 0x40
   16af8:	mov	sl, fp
   16afa:	addw	r3, r7, #263	; 0x107
   16afe:	str	r3, [sp, #56]	; 0x38
   16b00:	ldr	r3, [r4, #64]	; 0x40
   16b02:	cmp	r3, sl
   16b04:	bhi.n	16b28 <subvol_uuid_search_init@@Base+0x174>
   16b06:	ldrd	r0, r1, [r4, #24]
   16b0a:	mov.w	r3, #4096	; 0x1000
   16b0e:	str	r3, [r4, #64]	; 0x40
   16b10:	adds	r2, r1, #1
   16b12:	it	eq
   16b14:	cmpeq.w	r0, #4294967295	; 0xffffffff
   16b18:	beq.w	16cba <subvol_uuid_search_init@@Base+0x306>
   16b1c:	adds	r2, r0, #1
   16b1e:	adc.w	r3, r1, #0
   16b22:	strd	r2, r3, [r4, #24]
   16b26:	b.n	16aba <subvol_uuid_search_init@@Base+0x106>
   16b28:	ldr	r3, [sp, #60]	; 0x3c
   16b2a:	add.w	r6, r3, fp
   16b2e:	add.w	r3, fp, #32
   16b32:	str	r3, [sp, #24]
   16b34:	ldr	r3, [r6, #12]
   16b36:	ldr	r2, [r6, #8]
   16b38:	cmp	r3, #0
   16b3a:	it	eq
   16b3c:	cmpeq	r2, #5
   16b3e:	beq.n	16b60 <subvol_uuid_search_init@@Base+0x1ac>
   16b40:	subs.w	r1, r2, #256	; 0x100
   16b44:	str	r1, [sp, #16]
   16b46:	adc.w	r1, r3, #4294967295	; 0xffffffff
   16b4a:	str	r1, [sp, #20]
   16b4c:	ldrd	fp, ip, [sp, #16]
   16b50:	mov.w	r1, #4294967295	; 0xffffffff
   16b54:	mvn.w	r0, #510	; 0x1fe
   16b58:	cmp	ip, r1
   16b5a:	it	eq
   16b5c:	cmpeq	fp, r0
   16b5e:	bcs.n	16bb6 <subvol_uuid_search_init@@Base+0x202>
   16b60:	ldr	r1, [r6, #24]
   16b62:	cmp	r1, #132	; 0x84
   16b64:	bne.n	16bd8 <subvol_uuid_search_init@@Base+0x224>
   16b66:	ldr	r3, [r6, #28]
   16b68:	cmp.w	r3, #438	; 0x1b6
   16b6c:	bls.w	16cb4 <subvol_uuid_search_init@@Base+0x300>
   16b70:	ldr	r3, [sp, #24]
   16b72:	add.w	r8, sp, #608	; 0x260
   16b76:	movw	r2, #439	; 0x1b7
   16b7a:	mov	r0, r7
   16b7c:	add	r8, r3
   16b7e:	mov	r1, r8
   16b80:	blx	8830 <memcpy@plt+0x4>
   16b84:	ldr.w	r3, [r8, #295]	; 0x127
   16b88:	ldr.w	r5, [r8, #319]	; 0x13f
   16b8c:	str	r3, [sp, #36]	; 0x24
   16b8e:	ldr.w	r3, [r8, #299]	; 0x12b
   16b92:	str	r3, [sp, #40]	; 0x28
   16b94:	ldr.w	r3, [r8, #303]	; 0x12f
   16b98:	str	r3, [sp, #44]	; 0x2c
   16b9a:	ldr.w	r3, [r8, #307]	; 0x133
   16b9e:	str	r3, [sp, #48]	; 0x30
   16ba0:	ldr.w	r3, [r8, #311]	; 0x137
   16ba4:	str	r3, [sp, #28]
   16ba6:	ldr.w	r3, [r8, #315]	; 0x13b
   16baa:	str	r3, [sp, #32]
   16bac:	ldr.w	r3, [r8, #323]	; 0x143
   16bb0:	mov.w	r8, #1
   16bb4:	str	r3, [sp, #52]	; 0x34
   16bb6:	ldr	r3, [r6, #28]
   16bb8:	add.w	sl, sl, #1
   16bbc:	ldr	r2, [sp, #24]
   16bbe:	add	r2, r3
   16bc0:	ldr	r3, [r6, #12]
   16bc2:	mov	fp, r2
   16bc4:	ldr	r2, [r6, #8]
   16bc6:	strd	r2, r3, [r4, #8]
   16bca:	ldr	r3, [r6, #20]
   16bcc:	ldr	r2, [r6, #16]
   16bce:	strd	r2, r3, [r4, #24]
   16bd2:	ldr	r3, [r6, #24]
   16bd4:	str	r3, [r4, #56]	; 0x38
   16bd6:	b.n	16b00 <subvol_uuid_search_init@@Base+0x14c>
   16bd8:	cmp.w	r8, #0
   16bdc:	beq.n	16bb6 <subvol_uuid_search_init@@Base+0x202>
   16bde:	vmov	r0, s16
   16be2:	bl	1909c <btrfs_list_path_for_root@@Base>
   16be6:	mov	r8, r0
   16be8:	cbnz	r0, 16bf4 <subvol_uuid_search_init@@Base+0x240>
   16bea:	ldr	r0, [pc, #296]	; (16d14 <subvol_uuid_search_init@@Base+0x360>)
   16bec:	add	r0, pc
   16bee:	blx	88cc <strdup@plt+0x4>
   16bf2:	mov	r8, r0
   16bf4:	cmn.w	r8, #4096	; 0x1000
   16bf8:	bls.n	16c1a <subvol_uuid_search_init@@Base+0x266>
   16bfa:	ldr	r2, [sp, #12]
   16bfc:	ldr	r3, [pc, #264]	; (16d08 <subvol_uuid_search_init@@Base+0x354>)
   16bfe:	ldr	r1, [r6, #8]
   16c00:	str.w	r8, [sp, #8]
   16c04:	ldr	r3, [r2, r3]
   16c06:	ldr	r2, [r6, #12]
   16c08:	strd	r1, r2, [sp]
   16c0c:	movs	r1, #1
   16c0e:	ldr	r2, [pc, #264]	; (16d18 <subvol_uuid_search_init@@Base+0x364>)
   16c10:	ldr	r0, [r3, #0]
   16c12:	add	r2, pc
   16c14:	blx	8ca0 <__fprintf_chk@plt+0x4>
   16c18:	b.n	16a60 <subvol_uuid_search_init@@Base+0xac>
   16c1a:	movs	r1, #144	; 0x90
   16c1c:	movs	r0, #1
   16c1e:	blx	8718 <calloc@plt+0x4>
   16c22:	ldr	r2, [r6, #12]
   16c24:	ldr	r1, [r6, #8]
   16c26:	add.w	lr, r0, #56	; 0x38
   16c2a:	strd	r1, r2, [r0, #48]	; 0x30
   16c2e:	add.w	r2, r7, #247	; 0xf7
   16c32:	mov	r3, r0
   16c34:	ldr	r1, [r2, #4]
   16c36:	mov	ip, lr
   16c38:	ldr	r0, [r2, #0]
   16c3a:	adds	r2, #8
   16c3c:	stmia.w	ip!, {r0, r1}
   16c40:	mov	lr, ip
   16c42:	ldr	r1, [sp, #56]	; 0x38
   16c44:	cmp	r2, r1
   16c46:	bne.n	16c34 <subvol_uuid_search_init@@Base+0x280>
   16c48:	addw	r1, r7, #279	; 0x117
   16c4c:	addw	r2, r7, #263	; 0x107
   16c50:	add.w	lr, r3, #72	; 0x48
   16c54:	mov	fp, r1
   16c56:	ldr	r0, [r2, #0]
   16c58:	adds	r2, #8
   16c5a:	ldr.w	r1, [r2, #-4]
   16c5e:	cmp	r2, fp
   16c60:	mov	ip, lr
   16c62:	stmia.w	ip!, {r0, r1}
   16c66:	mov	lr, ip
   16c68:	bne.n	16c56 <subvol_uuid_search_init@@Base+0x2a2>
   16c6a:	addw	r1, r7, #295	; 0x127
   16c6e:	addw	r2, r7, #279	; 0x117
   16c72:	add.w	lr, r3, #88	; 0x58
   16c76:	mov	fp, r1
   16c78:	ldr	r0, [r2, #0]
   16c7a:	adds	r2, #8
   16c7c:	ldr.w	r1, [r2, #-4]
   16c80:	cmp	r2, fp
   16c82:	mov	ip, lr
   16c84:	stmia.w	ip!, {r0, r1}
   16c88:	mov	lr, ip
   16c8a:	bne.n	16c78 <subvol_uuid_search_init@@Base+0x2c4>
   16c8c:	ldr	r2, [sp, #36]	; 0x24
   16c8e:	mov	r1, r3
   16c90:	mov	r0, r9
   16c92:	str	r2, [r3, #104]	; 0x68
   16c94:	ldr	r2, [sp, #40]	; 0x28
   16c96:	str	r2, [r3, #108]	; 0x6c
   16c98:	ldr	r2, [sp, #44]	; 0x2c
   16c9a:	str	r2, [r3, #112]	; 0x70
   16c9c:	ldr	r2, [sp, #48]	; 0x30
   16c9e:	str	r2, [r3, #116]	; 0x74
   16ca0:	ldr	r2, [sp, #28]
   16ca2:	str	r2, [r3, #120]	; 0x78
   16ca4:	ldr	r2, [sp, #32]
   16ca6:	strd	r2, r5, [r3, #124]	; 0x7c
   16caa:	ldr	r2, [sp, #52]	; 0x34
   16cac:	strd	r2, r8, [r3, #132]	; 0x84
   16cb0:	bl	1633e <subvol_uuid_search_add@@Base>
   16cb4:	mov.w	r8, #0
   16cb8:	b.n	16bb6 <subvol_uuid_search_init@@Base+0x202>
   16cba:	ldrd	r0, r1, [r4, #8]
   16cbe:	adds	r3, r1, #1
   16cc0:	it	eq
   16cc2:	cmpeq.w	r0, #4294967295	; 0xffffffff
   16cc6:	beq.w	16a60 <subvol_uuid_search_init@@Base+0xac>
   16cca:	adds	r2, r0, #1
   16ccc:	adc.w	r3, r1, #0
   16cd0:	strd	r2, r3, [r4, #8]
   16cd4:	movs	r3, #0
   16cd6:	movs	r2, #0
   16cd8:	strd	r2, r3, [r4, #24]
   16cdc:	movs	r3, #0
   16cde:	str	r3, [r4, #56]	; 0x38
   16ce0:	b.n	16aba <subvol_uuid_search_init@@Base+0x106>
   16ce2:	ldr	r0, [sp, #8]
   16ce4:	add.w	sp, sp, #4608	; 0x1200
   16ce8:	add	sp, #4
   16cea:	vpop	{d8}
   16cee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16cf2:	nop
   16cf4:	str	r4, [sp, #68]	; 0x44
   16cf6:	beq.n	16cfa <subvol_uuid_search_init@@Base+0x346>
   16cf8:	movs	r3, #100	; 0x64
   16cfa:	movs	r5, r0
   16cfc:	lsls	r4, r7, #9
   16cfe:	movs	r0, r0
   16d00:	movs	r3, #86	; 0x56
   16d02:	movs	r5, r0
   16d04:	movs	r2, #198	; 0xc6
   16d06:	movs	r5, r0
   16d08:	lsls	r4, r1, #10
   16d0a:	movs	r0, r0
   16d0c:	str	r1, [sp, #840]	; 0x348
   16d0e:	movs	r2, r0
   16d10:	str	r2, [sp, #216]	; 0xd8
   16d12:	movs	r2, r0
   16d14:	ldrb	r2, [r7, #22]
   16d16:	movs	r2, r0
   16d18:	str	r1, [sp, #212]	; 0xd4
   16d1a:	movs	r2, r0

00016d1c <subvol_uuid_search_finit@@Base>:
   16d1c:	push	{r4, r5, r6, lr}
   16d1e:	mov	r5, r0
   16d20:	ldr	r3, [r0, #4]
   16d22:	cbz	r3, 16d3a <subvol_uuid_search_finit@@Base+0x1e>
   16d24:	add.w	r6, r0, #8
   16d28:	mov	r0, r6
   16d2a:	bl	172ca <rb_first@@Base>
   16d2e:	mov	r4, r0
   16d30:	cbnz	r0, 16d3c <subvol_uuid_search_finit@@Base+0x20>
   16d32:	strd	r0, r0, [r5, #8]
   16d36:	strd	r0, r0, [r5, #16]
   16d3a:	pop	{r4, r5, r6, pc}
   16d3c:	ldr.w	r0, [r4, #136]	; 0x88
   16d40:	blx	87cc <free@plt+0x4>
   16d44:	mov	r0, r4
   16d46:	mov	r1, r6
   16d48:	bl	17054 <rb_erase@@Base>
   16d4c:	mov	r0, r4
   16d4e:	blx	87cc <free@plt+0x4>
   16d52:	b.n	16d28 <subvol_uuid_search_finit@@Base+0xc>

00016d54 <path_cat_out@@Base>:
   16d54:	push	{r4, r5, r6, r7, lr}
   16d56:	mov	r7, r0
   16d58:	sub	sp, #20
   16d5a:	mov	r0, r1
   16d5c:	mov	r6, r2
   16d5e:	mov	r5, r1
   16d60:	blx	8b70 <strlen@plt>
   16d64:	mov	r4, r0
   16d66:	mov	r0, r6
   16d68:	blx	8b70 <strlen@plt>
   16d6c:	movw	r2, #4093	; 0xffd
   16d70:	adds	r1, r4, r0
   16d72:	mov	r3, r0
   16d74:	cmp	r1, r2
   16d76:	bgt.n	16db8 <path_cat_out@@Base+0x64>
   16d78:	cbz	r4, 16d88 <path_cat_out@@Base+0x34>
   16d7a:	adds	r2, r5, r4
   16d7c:	ldrb.w	r2, [r2, #-1]
   16d80:	cmp	r2, #47	; 0x2f
   16d82:	it	eq
   16d84:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   16d88:	cbz	r0, 16db4 <path_cat_out@@Base+0x60>
   16d8a:	adds	r2, r6, r0
   16d8c:	ldrb.w	r2, [r2, #-1]
   16d90:	cmp	r2, #47	; 0x2f
   16d92:	bne.n	16d96 <path_cat_out@@Base+0x42>
   16d94:	subs	r3, r0, #1
   16d96:	strd	r3, r6, [sp, #8]
   16d9a:	mov.w	r2, #4294967295	; 0xffffffff
   16d9e:	ldr	r3, [pc, #32]	; (16dc0 <path_cat_out@@Base+0x6c>)
   16da0:	movs	r1, #1
   16da2:	mov	r0, r7
   16da4:	strd	r4, r5, [sp]
   16da8:	add	r3, pc
   16daa:	blx	8bc4 <__sprintf_chk@plt>
   16dae:	movs	r0, #0
   16db0:	add	sp, #20
   16db2:	pop	{r4, r5, r6, r7, pc}
   16db4:	mov	r3, r0
   16db6:	b.n	16d96 <path_cat_out@@Base+0x42>
   16db8:	mvn.w	r0, #35	; 0x23
   16dbc:	b.n	16db0 <path_cat_out@@Base+0x5c>
   16dbe:	nop
   16dc0:	ldrh	r1, [r2, #62]	; 0x3e
   16dc2:	movs	r2, r0

00016dc4 <path_cat3_out@@Base>:
   16dc4:	stmdb	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   16dc8:	mov	sl, r0
   16dca:	sub	sp, #24
   16dcc:	mov	r0, r1
   16dce:	mov	r8, r2
   16dd0:	mov	r9, r3
   16dd2:	mov	r7, r1
   16dd4:	blx	8b70 <strlen@plt>
   16dd8:	mov	r4, r0
   16dda:	mov	r0, r8
   16ddc:	blx	8b70 <strlen@plt>
   16de0:	mov	r6, r0
   16de2:	mov	fp, r0
   16de4:	mov	r0, r9
   16de6:	blx	8b70 <strlen@plt>
   16dea:	adds	r2, r4, r6
   16dec:	movw	r1, #4092	; 0xffc
   16df0:	add	r2, r0
   16df2:	mov	r3, r0
   16df4:	cmp	r2, r1
   16df6:	bgt.n	16e56 <path_cat3_out@@Base+0x92>
   16df8:	cbz	r4, 16e08 <path_cat3_out@@Base+0x44>
   16dfa:	adds	r2, r7, r4
   16dfc:	ldrb.w	r2, [r2, #-1]
   16e00:	cmp	r2, #47	; 0x2f
   16e02:	it	eq
   16e04:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   16e08:	cbz	r6, 16e4e <path_cat3_out@@Base+0x8a>
   16e0a:	add.w	r2, r8, r6
   16e0e:	ldrb.w	r2, [r2, #-1]
   16e12:	cmp	r2, #47	; 0x2f
   16e14:	bne.n	16e1a <path_cat3_out@@Base+0x56>
   16e16:	add.w	fp, r6, #4294967295	; 0xffffffff
   16e1a:	cbz	r0, 16e52 <path_cat3_out@@Base+0x8e>
   16e1c:	add.w	r2, r9, r0
   16e20:	ldrb.w	r2, [r2, #-1]
   16e24:	cmp	r2, #47	; 0x2f
   16e26:	bne.n	16e2a <path_cat3_out@@Base+0x66>
   16e28:	subs	r3, r0, #1
   16e2a:	strd	r3, r9, [sp, #16]
   16e2e:	mov.w	r2, #4294967295	; 0xffffffff
   16e32:	ldr	r3, [pc, #40]	; (16e5c <path_cat3_out@@Base+0x98>)
   16e34:	movs	r1, #1
   16e36:	mov	r0, sl
   16e38:	strd	fp, r8, [sp, #8]
   16e3c:	add	r3, pc
   16e3e:	strd	r4, r7, [sp]
   16e42:	blx	8bc4 <__sprintf_chk@plt>
   16e46:	movs	r0, #0
   16e48:	add	sp, #24
   16e4a:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   16e4e:	mov	fp, r6
   16e50:	b.n	16e1a <path_cat3_out@@Base+0x56>
   16e52:	mov	r3, r0
   16e54:	b.n	16e2a <path_cat3_out@@Base+0x66>
   16e56:	mvn.w	r0, #35	; 0x23
   16e5a:	b.n	16e48 <path_cat3_out@@Base+0x84>
   16e5c:	ldrh	r0, [r7, #56]	; 0x38
   16e5e:	movs	r2, r0
   16e60:	push	{r4, lr}
   16e62:	orrs	r3, r1
   16e64:	ldr	r4, [r0, #0]
   16e66:	str	r4, [r1, #0]
   16e68:	bics.w	r4, r4, #3
   16e6c:	str	r3, [r0, #0]
   16e6e:	beq.n	16e7c <path_cat3_out@@Base+0xb8>
   16e70:	ldr	r3, [r4, #8]
   16e72:	cmp	r0, r3
   16e74:	ite	eq
   16e76:	streq	r1, [r4, #8]
   16e78:	strne	r1, [r4, #4]
   16e7a:	pop	{r4, pc}
   16e7c:	str	r1, [r2, #0]
   16e7e:	b.n	16e7a <path_cat3_out@@Base+0xb6>

00016e80 <__rb_erase_color@@Base>:
   16e80:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   16e84:	mov	r6, r2
   16e86:	mov	r4, r0
   16e88:	mov	r7, r1
   16e8a:	movs	r2, #0
   16e8c:	ldr	r5, [r4, #4]
   16e8e:	cmp	r5, r2
   16e90:	beq.n	16f34 <__rb_erase_color@@Base+0xb4>
   16e92:	ldr	r3, [r5, #0]
   16e94:	ands.w	r3, r3, #1
   16e98:	bne.n	16eba <__rb_erase_color@@Base+0x3a>
   16e9a:	ldr.w	r8, [r5, #8]
   16e9e:	mov	r1, r5
   16ea0:	orr.w	r2, r4, #1
   16ea4:	mov	r0, r4
   16ea6:	str.w	r8, [r4, #4]
   16eaa:	str	r4, [r5, #8]
   16eac:	mov	r5, r8
   16eae:	str.w	r2, [r8]
   16eb2:	mov	r2, r7
   16eb4:	bl	16e60 <path_cat3_out@@Base+0x9c>
   16eb8:	blx	r6
   16eba:	ldr	r3, [r5, #4]
   16ebc:	cbz	r3, 16ec4 <__rb_erase_color@@Base+0x44>
   16ebe:	ldr	r2, [r3, #0]
   16ec0:	lsls	r2, r2, #31
   16ec2:	bpl.n	16f08 <__rb_erase_color@@Base+0x88>
   16ec4:	ldr.w	r8, [r5, #8]
   16ec8:	cmp.w	r8, #0
   16ecc:	beq.n	16ed6 <__rb_erase_color@@Base+0x56>
   16ece:	ldr.w	r3, [r8]
   16ed2:	lsls	r3, r3, #31
   16ed4:	bpl.n	16ee8 <__rb_erase_color@@Base+0x68>
   16ed6:	str	r4, [r5, #0]
   16ed8:	ldr	r3, [r4, #0]
   16eda:	lsls	r2, r3, #31
   16edc:	bmi.n	16fa2 <__rb_erase_color@@Base+0x122>
   16ede:	orr.w	r3, r3, #1
   16ee2:	str	r3, [r4, #0]
   16ee4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   16ee8:	ldr.w	r3, [r8, #4]
   16eec:	str	r3, [r5, #8]
   16eee:	str.w	r5, [r8, #4]
   16ef2:	str.w	r8, [r4, #4]
   16ef6:	cbz	r3, 16efe <__rb_erase_color@@Base+0x7e>
   16ef8:	orr.w	r2, r5, #1
   16efc:	str	r2, [r3, #0]
   16efe:	mov	r0, r5
   16f00:	mov	r1, r8
   16f02:	blx	r6
   16f04:	mov	r3, r5
   16f06:	mov	r5, r8
   16f08:	ldr	r2, [r5, #8]
   16f0a:	str	r2, [r4, #4]
   16f0c:	str	r4, [r5, #8]
   16f0e:	orr.w	r1, r5, #1
   16f12:	str	r1, [r3, #0]
   16f14:	cbz	r2, 16f20 <__rb_erase_color@@Base+0xa0>
   16f16:	ldr	r3, [r2, #0]
   16f18:	and.w	r3, r3, #1
   16f1c:	orrs	r3, r4
   16f1e:	str	r3, [r2, #0]
   16f20:	movs	r3, #1
   16f22:	mov	r2, r7
   16f24:	mov	r1, r5
   16f26:	mov	r0, r4
   16f28:	bl	16e60 <path_cat3_out@@Base+0x9c>
   16f2c:	mov	r3, r6
   16f2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   16f32:	bx	r3
   16f34:	ldr	r5, [r4, #8]
   16f36:	ldr	r3, [r5, #0]
   16f38:	ands.w	r3, r3, #1
   16f3c:	bne.n	16f5e <__rb_erase_color@@Base+0xde>
   16f3e:	ldr.w	r8, [r5, #4]
   16f42:	mov	r1, r5
   16f44:	orr.w	r2, r4, #1
   16f48:	mov	r0, r4
   16f4a:	str.w	r8, [r4, #8]
   16f4e:	str	r4, [r5, #4]
   16f50:	mov	r5, r8
   16f52:	str.w	r2, [r8]
   16f56:	mov	r2, r7
   16f58:	bl	16e60 <path_cat3_out@@Base+0x9c>
   16f5c:	blx	r6
   16f5e:	ldr	r3, [r5, #8]
   16f60:	cbz	r3, 16f68 <__rb_erase_color@@Base+0xe8>
   16f62:	ldr	r2, [r3, #0]
   16f64:	lsls	r0, r2, #31
   16f66:	bpl.n	16f9a <__rb_erase_color@@Base+0x11a>
   16f68:	ldr.w	r8, [r5, #4]
   16f6c:	cmp.w	r8, #0
   16f70:	beq.n	16ed6 <__rb_erase_color@@Base+0x56>
   16f72:	ldr.w	r3, [r8]
   16f76:	lsls	r1, r3, #31
   16f78:	bmi.n	16ed6 <__rb_erase_color@@Base+0x56>
   16f7a:	ldr.w	r3, [r8, #8]
   16f7e:	str	r3, [r5, #4]
   16f80:	str.w	r5, [r8, #8]
   16f84:	str.w	r8, [r4, #8]
   16f88:	cbz	r3, 16f90 <__rb_erase_color@@Base+0x110>
   16f8a:	orr.w	r2, r5, #1
   16f8e:	str	r2, [r3, #0]
   16f90:	mov	r0, r5
   16f92:	mov	r1, r8
   16f94:	blx	r6
   16f96:	mov	r3, r5
   16f98:	mov	r5, r8
   16f9a:	ldr	r2, [r5, #4]
   16f9c:	str	r2, [r4, #8]
   16f9e:	str	r4, [r5, #4]
   16fa0:	b.n	16f0e <__rb_erase_color@@Base+0x8e>
   16fa2:	bics.w	r3, r3, #3
   16fa6:	beq.n	16ee4 <__rb_erase_color@@Base+0x64>
   16fa8:	mov	r2, r4
   16faa:	mov	r4, r3
   16fac:	b.n	16e8c <__rb_erase_color@@Base+0xc>

00016fae <rb_insert_color@@Base>:
   16fae:	push	{r4, r5, r6}
   16fb0:	mov	r3, r0
   16fb2:	ldr	r4, [r0, #0]
   16fb4:	mov	r2, r1
   16fb6:	cbnz	r4, 16fc0 <rb_insert_color@@Base+0x12>
   16fb8:	movs	r2, #1
   16fba:	str	r2, [r3, #0]
   16fbc:	pop	{r4, r5, r6}
   16fbe:	bx	lr
   16fc0:	ldr	r0, [r4, #0]
   16fc2:	lsls	r5, r0, #31
   16fc4:	bmi.n	16fbc <rb_insert_color@@Base+0xe>
   16fc6:	ldr	r5, [r0, #4]
   16fc8:	cmp	r4, r5
   16fca:	beq.n	17016 <rb_insert_color@@Base+0x68>
   16fcc:	cbz	r5, 16fe8 <rb_insert_color@@Base+0x3a>
   16fce:	ldr	r1, [r5, #0]
   16fd0:	lsls	r1, r1, #31
   16fd2:	bmi.n	16fe8 <rb_insert_color@@Base+0x3a>
   16fd4:	orr.w	r3, r0, #1
   16fd8:	str	r3, [r5, #0]
   16fda:	str	r3, [r4, #0]
   16fdc:	mov	r3, r0
   16fde:	ldr	r4, [r0, #0]
   16fe0:	bic.w	r4, r4, #3
   16fe4:	str	r4, [r0, #0]
   16fe6:	b.n	16fb6 <rb_insert_color@@Base+0x8>
   16fe8:	ldr	r5, [r4, #4]
   16fea:	cmp	r5, r3
   16fec:	bne.n	17002 <rb_insert_color@@Base+0x54>
   16fee:	ldr	r1, [r3, #8]
   16ff0:	str	r1, [r4, #4]
   16ff2:	str	r4, [r3, #8]
   16ff4:	cbz	r1, 16ffc <rb_insert_color@@Base+0x4e>
   16ff6:	orr.w	r5, r4, #1
   16ffa:	str	r5, [r1, #0]
   16ffc:	str	r3, [r4, #0]
   16ffe:	mov	r4, r3
   17000:	ldr	r5, [r3, #4]
   17002:	str	r5, [r0, #8]
   17004:	str	r0, [r4, #4]
   17006:	cbz	r5, 1700e <rb_insert_color@@Base+0x60>
   17008:	orr.w	r3, r0, #1
   1700c:	str	r3, [r5, #0]
   1700e:	movs	r3, #0
   17010:	mov	r1, r4
   17012:	pop	{r4, r5, r6}
   17014:	b.n	16e60 <path_cat3_out@@Base+0x9c>
   17016:	ldr	r1, [r0, #8]
   17018:	cbz	r1, 17028 <rb_insert_color@@Base+0x7a>
   1701a:	ldr	r6, [r1, #0]
   1701c:	lsls	r6, r6, #31
   1701e:	bmi.n	17028 <rb_insert_color@@Base+0x7a>
   17020:	orr.w	r3, r0, #1
   17024:	str	r3, [r1, #0]
   17026:	b.n	16fda <rb_insert_color@@Base+0x2c>
   17028:	ldr	r4, [r5, #8]
   1702a:	cmp	r4, r3
   1702c:	bne.n	17042 <rb_insert_color@@Base+0x94>
   1702e:	ldr	r1, [r3, #4]
   17030:	str	r1, [r5, #8]
   17032:	str	r5, [r3, #4]
   17034:	cbz	r1, 1703c <rb_insert_color@@Base+0x8e>
   17036:	orr.w	r4, r5, #1
   1703a:	str	r4, [r1, #0]
   1703c:	str	r3, [r5, #0]
   1703e:	mov	r5, r3
   17040:	ldr	r4, [r3, #8]
   17042:	str	r4, [r0, #4]
   17044:	str	r0, [r5, #8]
   17046:	cbz	r4, 1704e <rb_insert_color@@Base+0xa0>
   17048:	orr.w	r3, r0, #1
   1704c:	str	r3, [r4, #0]
   1704e:	movs	r3, #0
   17050:	mov	r1, r5
   17052:	b.n	17012 <rb_insert_color@@Base+0x64>

00017054 <rb_erase@@Base>:
   17054:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   17058:	mov	r2, r1
   1705a:	mov	r4, r0
   1705c:	ldrd	r1, r0, [r0, #4]
   17060:	cbnz	r0, 1708c <rb_erase@@Base+0x38>
   17062:	ldr	r5, [r4, #0]
   17064:	bic.w	r3, r5, #3
   17068:	mov	r0, r3
   1706a:	cbz	r3, 1707e <rb_erase@@Base+0x2a>
   1706c:	ldr	r6, [r3, #8]
   1706e:	cmp	r4, r6
   17070:	ite	eq
   17072:	streq	r1, [r3, #8]
   17074:	strne	r1, [r3, #4]
   17076:	cbz	r1, 17082 <rb_erase@@Base+0x2e>
   17078:	str	r5, [r1, #0]
   1707a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1707e:	str	r1, [r2, #0]
   17080:	b.n	17076 <rb_erase@@Base+0x22>
   17082:	lsls	r5, r5, #31
   17084:	bpl.n	1707a <rb_erase@@Base+0x26>
   17086:	cmp	r3, #0
   17088:	bne.n	17108 <rb_erase@@Base+0xb4>
   1708a:	b.n	1707a <rb_erase@@Base+0x26>
   1708c:	cbnz	r1, 170a8 <rb_erase@@Base+0x54>
   1708e:	ldr	r3, [r4, #0]
   17090:	str	r3, [r0, #0]
   17092:	bics.w	r3, r3, #3
   17096:	beq.n	170a4 <rb_erase@@Base+0x50>
   17098:	ldr	r2, [r3, #8]
   1709a:	cmp	r4, r2
   1709c:	ite	eq
   1709e:	streq	r0, [r3, #8]
   170a0:	strne	r0, [r3, #4]
   170a2:	b.n	1707a <rb_erase@@Base+0x26>
   170a4:	str	r0, [r2, #0]
   170a6:	b.n	1707a <rb_erase@@Base+0x26>
   170a8:	ldr	r3, [r1, #8]
   170aa:	cbnz	r3, 170de <rb_erase@@Base+0x8a>
   170ac:	ldr	r6, [r1, #4]
   170ae:	mov	r3, r1
   170b0:	mov	r0, r1
   170b2:	ldr	r5, [r4, #8]
   170b4:	str	r5, [r3, #8]
   170b6:	ldr	r1, [r5, #0]
   170b8:	and.w	r1, r1, #1
   170bc:	orrs	r1, r3
   170be:	str	r1, [r5, #0]
   170c0:	ldr	r1, [r4, #0]
   170c2:	bics.w	r5, r1, #3
   170c6:	beq.n	170fc <rb_erase@@Base+0xa8>
   170c8:	ldr	r7, [r5, #8]
   170ca:	cmp	r4, r7
   170cc:	ite	eq
   170ce:	streq	r3, [r5, #8]
   170d0:	strne	r3, [r5, #4]
   170d2:	cbz	r6, 17100 <rb_erase@@Base+0xac>
   170d4:	orr.w	r0, r0, #1
   170d8:	str	r1, [r3, #0]
   170da:	str	r0, [r6, #0]
   170dc:	b.n	1707a <rb_erase@@Base+0x26>
   170de:	mov	r0, r1
   170e0:	ldr	r5, [r3, #8]
   170e2:	cbnz	r5, 170f6 <rb_erase@@Base+0xa2>
   170e4:	ldr	r6, [r3, #4]
   170e6:	str	r6, [r0, #8]
   170e8:	str	r1, [r3, #4]
   170ea:	ldr	r5, [r1, #0]
   170ec:	and.w	r5, r5, #1
   170f0:	orrs	r5, r3
   170f2:	str	r5, [r1, #0]
   170f4:	b.n	170b2 <rb_erase@@Base+0x5e>
   170f6:	mov	r0, r3
   170f8:	mov	r3, r5
   170fa:	b.n	170e0 <rb_erase@@Base+0x8c>
   170fc:	str	r3, [r2, #0]
   170fe:	b.n	170d2 <rb_erase@@Base+0x7e>
   17100:	ldr	r4, [r3, #0]
   17102:	str	r1, [r3, #0]
   17104:	lsls	r4, r4, #31
   17106:	bpl.n	1707a <rb_erase@@Base+0x26>
   17108:	movs	r1, #0
   1710a:	ldr	r4, [r0, #4]
   1710c:	cmp	r4, r1
   1710e:	beq.n	17186 <rb_erase@@Base+0x132>
   17110:	ldr	r3, [r4, #0]
   17112:	ands.w	r3, r3, #1
   17116:	bne.n	1712c <rb_erase@@Base+0xd8>
   17118:	ldr	r5, [r4, #8]
   1711a:	orr.w	r1, r0, #1
   1711e:	str	r5, [r0, #4]
   17120:	str	r0, [r4, #8]
   17122:	str	r1, [r5, #0]
   17124:	mov	r1, r4
   17126:	bl	16e60 <path_cat3_out@@Base+0x9c>
   1712a:	mov	r4, r5
   1712c:	ldr	r3, [r4, #4]
   1712e:	cbz	r3, 17136 <rb_erase@@Base+0xe2>
   17130:	ldr	r1, [r3, #0]
   17132:	lsls	r1, r1, #31
   17134:	bpl.n	17180 <rb_erase@@Base+0x12c>
   17136:	ldr	r1, [r4, #8]
   17138:	cbz	r1, 17140 <rb_erase@@Base+0xec>
   1713a:	ldr	r3, [r1, #0]
   1713c:	lsls	r7, r3, #31
   1713e:	bpl.n	17150 <rb_erase@@Base+0xfc>
   17140:	str	r0, [r4, #0]
   17142:	ldr	r3, [r0, #0]
   17144:	lsls	r1, r3, #31
   17146:	bmi.n	171ba <rb_erase@@Base+0x166>
   17148:	orr.w	r3, r3, #1
   1714c:	str	r3, [r0, #0]
   1714e:	b.n	1707a <rb_erase@@Base+0x26>
   17150:	ldr	r3, [r1, #4]
   17152:	str	r3, [r4, #8]
   17154:	str	r4, [r1, #4]
   17156:	str	r1, [r0, #4]
   17158:	cbz	r3, 17160 <rb_erase@@Base+0x10c>
   1715a:	orr.w	r5, r4, #1
   1715e:	str	r5, [r3, #0]
   17160:	ldr	r5, [r1, #8]
   17162:	orr.w	r3, r1, #1
   17166:	str	r5, [r0, #4]
   17168:	str	r0, [r1, #8]
   1716a:	str	r3, [r4, #0]
   1716c:	cbz	r5, 17178 <rb_erase@@Base+0x124>
   1716e:	ldr	r3, [r5, #0]
   17170:	and.w	r3, r3, #1
   17174:	orrs	r3, r0
   17176:	str	r3, [r5, #0]
   17178:	movs	r3, #1
   1717a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1717e:	b.n	16e60 <path_cat3_out@@Base+0x9c>
   17180:	mov	r1, r4
   17182:	mov	r4, r3
   17184:	b.n	17160 <rb_erase@@Base+0x10c>
   17186:	ldr	r1, [r0, #8]
   17188:	ldr	r3, [r1, #0]
   1718a:	ands.w	r3, r3, #1
   1718e:	bne.n	171a2 <rb_erase@@Base+0x14e>
   17190:	ldr	r4, [r1, #4]
   17192:	orr.w	r5, r0, #1
   17196:	str	r4, [r0, #8]
   17198:	str	r0, [r1, #4]
   1719a:	str	r5, [r4, #0]
   1719c:	bl	16e60 <path_cat3_out@@Base+0x9c>
   171a0:	mov	r1, r4
   171a2:	ldr	r3, [r1, #8]
   171a4:	cbz	r3, 171ac <rb_erase@@Base+0x158>
   171a6:	ldr	r4, [r3, #0]
   171a8:	lsls	r6, r4, #31
   171aa:	bpl.n	171f6 <rb_erase@@Base+0x1a2>
   171ac:	ldr	r4, [r1, #4]
   171ae:	cbz	r4, 171b6 <rb_erase@@Base+0x162>
   171b0:	ldr	r3, [r4, #0]
   171b2:	lsls	r5, r3, #31
   171b4:	bpl.n	171c8 <rb_erase@@Base+0x174>
   171b6:	str	r0, [r1, #0]
   171b8:	b.n	17142 <rb_erase@@Base+0xee>
   171ba:	bics.w	r3, r3, #3
   171be:	beq.w	1707a <rb_erase@@Base+0x26>
   171c2:	mov	r1, r0
   171c4:	mov	r0, r3
   171c6:	b.n	1710a <rb_erase@@Base+0xb6>
   171c8:	ldr	r3, [r4, #8]
   171ca:	str	r3, [r1, #4]
   171cc:	str	r1, [r4, #8]
   171ce:	str	r4, [r0, #8]
   171d0:	cbz	r3, 171d8 <rb_erase@@Base+0x184>
   171d2:	orr.w	r5, r1, #1
   171d6:	str	r5, [r3, #0]
   171d8:	ldr	r5, [r4, #4]
   171da:	orr.w	r3, r4, #1
   171de:	str	r5, [r0, #8]
   171e0:	str	r0, [r4, #4]
   171e2:	str	r3, [r1, #0]
   171e4:	cbz	r5, 171f0 <rb_erase@@Base+0x19c>
   171e6:	ldr	r3, [r5, #0]
   171e8:	and.w	r3, r3, #1
   171ec:	orrs	r3, r0
   171ee:	str	r3, [r5, #0]
   171f0:	movs	r3, #1
   171f2:	mov	r1, r4
   171f4:	b.n	1717a <rb_erase@@Base+0x126>
   171f6:	mov	r4, r1
   171f8:	mov	r1, r3
   171fa:	b.n	171d8 <rb_erase@@Base+0x184>

000171fc <__rb_insert_augmented@@Base>:
   171fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   17200:	mov	r6, r0
   17202:	ldr	r4, [r0, #0]
   17204:	mov	r9, r1
   17206:	mov	r8, r2
   17208:	cbnz	r4, 17212 <__rb_insert_augmented@@Base+0x16>
   1720a:	movs	r3, #1
   1720c:	str	r3, [r6, #0]
   1720e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   17212:	ldr	r5, [r4, #0]
   17214:	lsls	r0, r5, #31
   17216:	bmi.n	1720e <__rb_insert_augmented@@Base+0x12>
   17218:	ldr	r7, [r5, #4]
   1721a:	cmp	r4, r7
   1721c:	beq.n	1727c <__rb_insert_augmented@@Base+0x80>
   1721e:	cbz	r7, 1723a <__rb_insert_augmented@@Base+0x3e>
   17220:	ldr	r3, [r7, #0]
   17222:	lsls	r1, r3, #31
   17224:	bmi.n	1723a <__rb_insert_augmented@@Base+0x3e>
   17226:	orr.w	r3, r5, #1
   1722a:	str	r3, [r7, #0]
   1722c:	str	r3, [r4, #0]
   1722e:	ldr	r4, [r5, #0]
   17230:	mov	r6, r5
   17232:	bic.w	r4, r4, #3
   17236:	str	r4, [r5, #0]
   17238:	b.n	17208 <__rb_insert_augmented@@Base+0xc>
   1723a:	ldr	r3, [r4, #4]
   1723c:	cmp	r3, r6
   1723e:	bne.n	1725a <__rb_insert_augmented@@Base+0x5e>
   17240:	ldr	r3, [r6, #8]
   17242:	str	r3, [r4, #4]
   17244:	str	r4, [r6, #8]
   17246:	cbz	r3, 1724e <__rb_insert_augmented@@Base+0x52>
   17248:	orr.w	r2, r4, #1
   1724c:	str	r2, [r3, #0]
   1724e:	mov	r0, r4
   17250:	str	r6, [r4, #0]
   17252:	mov	r1, r6
   17254:	mov	r4, r6
   17256:	blx	r8
   17258:	ldr	r3, [r6, #4]
   1725a:	str	r3, [r5, #8]
   1725c:	str	r5, [r4, #4]
   1725e:	cbz	r3, 17266 <__rb_insert_augmented@@Base+0x6a>
   17260:	orr.w	r2, r5, #1
   17264:	str	r2, [r3, #0]
   17266:	movs	r3, #0
   17268:	mov	r2, r9
   1726a:	mov	r1, r4
   1726c:	mov	r0, r5
   1726e:	bl	16e60 <path_cat3_out@@Base+0x9c>
   17272:	mov	r0, r5
   17274:	mov	r3, r8
   17276:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1727a:	bx	r3
   1727c:	ldr	r3, [r5, #8]
   1727e:	cbz	r3, 17290 <__rb_insert_augmented@@Base+0x94>
   17280:	ldr	r2, [r3, #0]
   17282:	lsls	r2, r2, #31
   17284:	bmi.n	17290 <__rb_insert_augmented@@Base+0x94>
   17286:	orr.w	r2, r5, #1
   1728a:	str	r2, [r3, #0]
   1728c:	str	r2, [r4, #0]
   1728e:	b.n	1722e <__rb_insert_augmented@@Base+0x32>
   17290:	ldr	r3, [r7, #8]
   17292:	cmp	r3, r6
   17294:	bne.n	172b0 <__rb_insert_augmented@@Base+0xb4>
   17296:	ldr	r3, [r6, #4]
   17298:	str	r3, [r7, #8]
   1729a:	str	r7, [r6, #4]
   1729c:	cbz	r3, 172a4 <__rb_insert_augmented@@Base+0xa8>
   1729e:	orr.w	r2, r7, #1
   172a2:	str	r2, [r3, #0]
   172a4:	mov	r0, r7
   172a6:	str	r6, [r7, #0]
   172a8:	mov	r1, r6
   172aa:	mov	r7, r6
   172ac:	blx	r8
   172ae:	ldr	r3, [r6, #8]
   172b0:	str	r3, [r5, #4]
   172b2:	str	r5, [r7, #8]
   172b4:	cbz	r3, 172bc <__rb_insert_augmented@@Base+0xc0>
   172b6:	orr.w	r2, r5, #1
   172ba:	str	r2, [r3, #0]
   172bc:	movs	r3, #0
   172be:	mov	r2, r9
   172c0:	mov	r1, r7
   172c2:	mov	r0, r5
   172c4:	bl	16e60 <path_cat3_out@@Base+0x9c>
   172c8:	b.n	17272 <__rb_insert_augmented@@Base+0x76>

000172ca <rb_first@@Base>:
   172ca:	ldr	r0, [r0, #0]
   172cc:	cbz	r0, 172d8 <rb_first@@Base+0xe>
   172ce:	mov	r3, r0
   172d0:	ldr	r0, [r0, #8]
   172d2:	cmp	r0, #0
   172d4:	bne.n	172ce <rb_first@@Base+0x4>
   172d6:	mov	r0, r3
   172d8:	bx	lr

000172da <rb_last@@Base>:
   172da:	ldr	r0, [r0, #0]
   172dc:	cbz	r0, 172e8 <rb_last@@Base+0xe>
   172de:	mov	r3, r0
   172e0:	ldr	r0, [r0, #4]
   172e2:	cmp	r0, #0
   172e4:	bne.n	172de <rb_last@@Base+0x4>
   172e6:	mov	r0, r3
   172e8:	bx	lr

000172ea <rb_next@@Base>:
   172ea:	ldr	r3, [r0, #0]
   172ec:	cmp	r0, r3
   172ee:	beq.n	17312 <rb_next@@Base+0x28>
   172f0:	ldr	r3, [r0, #4]
   172f2:	cbz	r3, 172fe <rb_next@@Base+0x14>
   172f4:	mov	r0, r3
   172f6:	ldr	r3, [r3, #8]
   172f8:	cmp	r3, #0
   172fa:	bne.n	172f4 <rb_next@@Base+0xa>
   172fc:	bx	lr
   172fe:	ldr	r3, [r0, #0]
   17300:	mov	r2, r0
   17302:	bic.w	r3, r3, #3
   17306:	mov	r0, r3
   17308:	cbz	r3, 17314 <rb_next@@Base+0x2a>
   1730a:	ldr	r3, [r3, #4]
   1730c:	cmp	r3, r2
   1730e:	beq.n	172fe <rb_next@@Base+0x14>
   17310:	bx	lr
   17312:	movs	r0, #0
   17314:	bx	lr

00017316 <rb_prev@@Base>:
   17316:	ldr	r3, [r0, #0]
   17318:	cmp	r0, r3
   1731a:	beq.n	1733e <rb_prev@@Base+0x28>
   1731c:	ldr	r3, [r0, #8]
   1731e:	cbz	r3, 1732a <rb_prev@@Base+0x14>
   17320:	mov	r0, r3
   17322:	ldr	r3, [r3, #4]
   17324:	cmp	r3, #0
   17326:	bne.n	17320 <rb_prev@@Base+0xa>
   17328:	bx	lr
   1732a:	ldr	r3, [r0, #0]
   1732c:	mov	r2, r0
   1732e:	bic.w	r3, r3, #3
   17332:	mov	r0, r3
   17334:	cbz	r3, 17340 <rb_prev@@Base+0x2a>
   17336:	ldr	r3, [r3, #8]
   17338:	cmp	r3, r2
   1733a:	beq.n	1732a <rb_prev@@Base+0x14>
   1733c:	bx	lr
   1733e:	movs	r0, #0
   17340:	bx	lr

00017342 <rb_replace_node@@Base>:
   17342:	mov	r3, r1
   17344:	ldr	r1, [r0, #0]
   17346:	bics.w	r1, r1, #3
   1734a:	beq.n	1737a <rb_replace_node@@Base+0x38>
   1734c:	ldr	r2, [r1, #8]
   1734e:	cmp	r0, r2
   17350:	ite	eq
   17352:	streq	r3, [r1, #8]
   17354:	strne	r3, [r1, #4]
   17356:	ldr	r1, [r0, #8]
   17358:	cbz	r1, 17364 <rb_replace_node@@Base+0x22>
   1735a:	ldr	r2, [r1, #0]
   1735c:	and.w	r2, r2, #1
   17360:	orrs	r2, r3
   17362:	str	r2, [r1, #0]
   17364:	ldr	r1, [r0, #4]
   17366:	cbz	r1, 17372 <rb_replace_node@@Base+0x30>
   17368:	ldr	r2, [r1, #0]
   1736a:	and.w	r2, r2, #1
   1736e:	orrs	r2, r3
   17370:	str	r2, [r1, #0]
   17372:	ldmia	r0, {r0, r1, r2}
   17374:	stmia.w	r3, {r0, r1, r2}
   17378:	bx	lr
   1737a:	str	r3, [r2, #0]
   1737c:	b.n	17356 <rb_replace_node@@Base+0x14>

0001737e <rb_next_postorder@@Base>:
   1737e:	mov	r2, r0
   17380:	cbz	r0, 173a4 <rb_next_postorder@@Base+0x26>
   17382:	ldr	r3, [r0, #0]
   17384:	bics.w	r0, r3, #3
   17388:	beq.n	173a4 <rb_next_postorder@@Base+0x26>
   1738a:	ldr	r3, [r0, #8]
   1738c:	cmp	r3, r2
   1738e:	bne.n	173a4 <rb_next_postorder@@Base+0x26>
   17390:	ldr	r3, [r0, #4]
   17392:	cbz	r3, 173a4 <rb_next_postorder@@Base+0x26>
   17394:	mov	r0, r3
   17396:	ldr	r3, [r3, #8]
   17398:	cmp	r3, #0
   1739a:	bne.n	17394 <rb_next_postorder@@Base+0x16>
   1739c:	ldr	r3, [r0, #4]
   1739e:	cmp	r3, #0
   173a0:	bne.n	17394 <rb_next_postorder@@Base+0x16>
   173a2:	bx	lr
   173a4:	bx	lr

000173a6 <rb_first_postorder@@Base>:
   173a6:	ldr	r0, [r0, #0]
   173a8:	cbz	r0, 173ba <rb_first_postorder@@Base+0x14>
   173aa:	mov	r3, r0
   173ac:	ldr	r0, [r0, #8]
   173ae:	cmp	r0, #0
   173b0:	bne.n	173aa <rb_first_postorder@@Base+0x4>
   173b2:	ldr	r0, [r3, #4]
   173b4:	cmp	r0, #0
   173b6:	bne.n	173aa <rb_first_postorder@@Base+0x4>
   173b8:	mov	r0, r3
   173ba:	bx	lr
   173bc:	push	{r4, r5, lr}
   173be:	ldrd	r4, r5, [r0, #24]
   173c2:	ldrd	r0, r1, [r1, #24]
   173c6:	cmp	r1, r5
   173c8:	it	eq
   173ca:	cmpeq	r0, r4
   173cc:	bcc.n	173e2 <rb_first_postorder@@Base+0x3c>
   173ce:	cmp	r5, r1
   173d0:	it	eq
   173d2:	cmpeq	r4, r0
   173d4:	ite	cc
   173d6:	movcc.w	r0, #4294967295	; 0xffffffff
   173da:	movcs	r0, #0
   173dc:	cbz	r2, 173e0 <rb_first_postorder@@Base+0x3a>
   173de:	negs	r0, r0
   173e0:	pop	{r4, r5, pc}
   173e2:	movs	r0, #1
   173e4:	b.n	173dc <rb_first_postorder@@Base+0x36>
   173e6:	push	{r4, r5, lr}
   173e8:	ldrd	r4, r5, [r0, #72]	; 0x48
   173ec:	ldrd	r0, r1, [r1, #72]	; 0x48
   173f0:	cmp	r1, r5
   173f2:	it	eq
   173f4:	cmpeq	r0, r4
   173f6:	bcc.n	1740c <rb_first_postorder@@Base+0x66>
   173f8:	cmp	r5, r1
   173fa:	it	eq
   173fc:	cmpeq	r4, r0
   173fe:	ite	cc
   17400:	movcc.w	r0, #4294967295	; 0xffffffff
   17404:	movcs	r0, #0
   17406:	cbz	r2, 1740a <rb_first_postorder@@Base+0x64>
   17408:	negs	r0, r0
   1740a:	pop	{r4, r5, pc}
   1740c:	movs	r0, #1
   1740e:	b.n	17406 <rb_first_postorder@@Base+0x60>
   17410:	push	{r4, r5, lr}
   17412:	ldrd	r4, r5, [r0, #80]	; 0x50
   17416:	ldrd	r0, r1, [r1, #80]	; 0x50
   1741a:	cmp	r1, r5
   1741c:	it	eq
   1741e:	cmpeq	r0, r4
   17420:	bcc.n	17436 <rb_first_postorder@@Base+0x90>
   17422:	cmp	r5, r1
   17424:	it	eq
   17426:	cmpeq	r4, r0
   17428:	ite	cc
   1742a:	movcc.w	r0, #4294967295	; 0xffffffff
   1742e:	movcs	r0, #0
   17430:	cbz	r2, 17434 <rb_first_postorder@@Base+0x8e>
   17432:	negs	r0, r0
   17434:	pop	{r4, r5, pc}
   17436:	movs	r0, #1
   17438:	b.n	17430 <rb_first_postorder@@Base+0x8a>
   1743a:	ldrd	r0, r1, [r0, #24]
   1743e:	cmp	r1, r3
   17440:	itte	eq
   17442:	cmpeq	r0, r2
   17444:	moveq	r0, #1
   17446:	movne	r0, #0
   17448:	bx	lr
   1744a:	ldrd	r2, r3, [r0, #32]
   1744e:	orrs	r3, r2
   17450:	ite	ne
   17452:	movne	r0, #1
   17454:	moveq	r0, #0
   17456:	bx	lr
   17458:	ldr	r0, [r0, #40]	; 0x28
   1745a:	ands	r0, r2
   1745c:	bx	lr
   1745e:	ldrd	r0, r1, [r0, #72]	; 0x48
   17462:	cmp	r1, r3
   17464:	it	eq
   17466:	cmpeq	r0, r2
   17468:	ite	cs
   1746a:	movcs	r0, #1
   1746c:	movcc	r0, #0
   1746e:	bx	lr
   17470:	ldrd	r0, r1, [r0, #72]	; 0x48
   17474:	cmp	r3, r1
   17476:	it	eq
   17478:	cmpeq	r2, r0
   1747a:	ite	cs
   1747c:	movcs	r0, #1
   1747e:	movcc	r0, #0
   17480:	bx	lr
   17482:	ldrd	r0, r1, [r0, #72]	; 0x48
   17486:	cmp	r1, r3
   17488:	itte	eq
   1748a:	cmpeq	r0, r2
   1748c:	moveq	r0, #1
   1748e:	movne	r0, #0
   17490:	bx	lr
   17492:	ldrd	r0, r1, [r0, #80]	; 0x50
   17496:	cmp	r1, r3
   17498:	it	eq
   1749a:	cmpeq	r0, r2
   1749c:	ite	cs
   1749e:	movcs	r0, #1
   174a0:	movcc	r0, #0
   174a2:	bx	lr
   174a4:	ldrd	r0, r1, [r0, #80]	; 0x50
   174a8:	cmp	r3, r1
   174aa:	it	eq
   174ac:	cmpeq	r2, r0
   174ae:	ite	cs
   174b0:	movcs	r0, #1
   174b2:	movcc	r0, #0
   174b4:	bx	lr
   174b6:	ldrd	r0, r1, [r0, #80]	; 0x50
   174ba:	cmp	r1, r3
   174bc:	itte	eq
   174be:	cmpeq	r0, r2
   174c0:	moveq	r0, #1
   174c2:	movne	r0, #0
   174c4:	bx	lr
   174c6:	ldrd	r0, r1, [r0, #64]	; 0x40
   174ca:	cmp	r1, r3
   174cc:	itte	eq
   174ce:	cmpeq	r0, r2
   174d0:	moveq	r0, #1
   174d2:	movne	r0, #0
   174d4:	bx	lr
   174d6:	ldr.w	r0, [r0, #152]	; 0x98
   174da:	bx	lr
   174dc:	ldr	r2, [pc, #60]	; (1751c <rb_first_postorder@@Base+0x176>)
   174de:	movs	r1, #16
   174e0:	ldr	r3, [pc, #60]	; (17520 <rb_first_postorder@@Base+0x17a>)
   174e2:	push	{r4, lr}
   174e4:	add	r2, pc
   174e6:	sub	sp, #72	; 0x48
   174e8:	add	r4, sp, #4
   174ea:	ldr	r3, [r2, r3]
   174ec:	mov	r0, r4
   174ee:	ldr	r3, [r3, #0]
   174f0:	str	r3, [sp, #68]	; 0x44
   174f2:	mov.w	r3, #0
   174f6:	blx	8ae0 <backtrace@plt>
   174fa:	movs	r2, #2
   174fc:	mov	r1, r0
   174fe:	mov	r0, r4
   17500:	blx	8e50 <backtrace_symbols_fd@plt>
   17504:	ldr	r2, [pc, #28]	; (17524 <rb_first_postorder@@Base+0x17e>)
   17506:	ldr	r3, [pc, #24]	; (17520 <rb_first_postorder@@Base+0x17a>)
   17508:	add	r2, pc
   1750a:	ldr	r3, [r2, r3]
   1750c:	ldr	r2, [r3, #0]
   1750e:	ldr	r3, [sp, #68]	; 0x44
   17510:	eors	r2, r3
   17512:	beq.n	17518 <rb_first_postorder@@Base+0x172>
   17514:	blx	88e4 <__stack_chk_fail@plt>
   17518:	add	sp, #72	; 0x48
   1751a:	pop	{r4, pc}
   1751c:	adds	r4, r1, r1
   1751e:	movs	r5, r0
   17520:	lsls	r4, r7, #9
   17522:	movs	r0, r0
   17524:	adds	r0, r5, r0
   17526:	movs	r5, r0
   17528:	push	{r4, lr}
   1752a:	mov	r4, r0
   1752c:	ldr.w	r0, [r0, #144]	; 0x90
   17530:	blx	87cc <free@plt+0x4>
   17534:	ldr.w	r0, [r4, #140]	; 0x8c
   17538:	blx	87cc <free@plt+0x4>
   1753c:	ldr.w	r0, [r4, #148]	; 0x94
   17540:	blx	87cc <free@plt+0x4>
   17544:	mov	r0, r4
   17546:	ldmia.w	sp!, {r4, lr}
   1754a:	b.w	87c8 <free@plt>
   1754e:	mov	r1, r2
   17550:	adds	r0, #108	; 0x6c
   17552:	push	{r3, lr}
   17554:	blx	8948 <uuid_compare@plt>
   17558:	clz	r0, r0
   1755c:	lsrs	r0, r0, #5
   1755e:	pop	{r3, pc}
   17560:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17564:	mov	r6, r0
   17566:	mov	r0, r2
   17568:	ldr	r2, [pc, #188]	; (17628 <rb_first_postorder@@Base+0x282>)
   1756a:	mov	r1, r3
   1756c:	ldr	r3, [pc, #188]	; (1762c <rb_first_postorder@@Base+0x286>)
   1756e:	add	r2, pc
   17570:	ldr.w	r7, [r6, #148]	; 0x94
   17574:	ldr.w	r8, [pc, #184]	; 17630 <rb_first_postorder@@Base+0x28a>
   17578:	sub	sp, #20
   1757a:	ldr	r3, [r2, r3]
   1757c:	add	r8, pc
   1757e:	ldr	r3, [r3, #0]
   17580:	str	r3, [sp, #12]
   17582:	mov.w	r3, #0
   17586:	cmp	r7, #0
   17588:	beq.n	1760a <rb_first_postorder@@Base+0x264>
   1758a:	ldrd	r2, r3, [r6, #64]	; 0x40
   1758e:	cmp	r3, r1
   17590:	it	eq
   17592:	cmpeq	r2, r0
   17594:	beq.n	1760a <rb_first_postorder@@Base+0x264>
   17596:	ldr	r2, [pc, #156]	; (17634 <rb_first_postorder@@Base+0x28e>)
   17598:	mov	r3, sp
   1759a:	mov	fp, sp
   1759c:	add	r2, pc
   1759e:	ldr	r1, [r2, #4]
   175a0:	ldr	r0, [r2, #0]
   175a2:	ldrh	r2, [r2, #8]
   175a4:	stmia	r3!, {r0, r1}
   175a6:	mov	r0, fp
   175a8:	strh	r2, [r3, #0]
   175aa:	blx	8b70 <strlen@plt>
   175ae:	mov	r5, r0
   175b0:	mov	r0, r7
   175b2:	blx	8b70 <strlen@plt>
   175b6:	add.w	r9, r5, r0
   175ba:	mov	sl, r0
   175bc:	add.w	r0, r9, #2
   175c0:	blx	8a94 <malloc@plt+0x4>
   175c4:	mov	r4, r0
   175c6:	cbnz	r0, 175de <rb_first_postorder@@Base+0x238>
   175c8:	ldr	r3, [pc, #108]	; (17638 <rb_first_postorder@@Base+0x292>)
   175ca:	ldr	r0, [pc, #112]	; (1763c <rb_first_postorder@@Base+0x296>)
   175cc:	ldr.w	r3, [r8, r3]
   175d0:	add	r0, pc
   175d2:	ldr	r1, [r3, #0]
   175d4:	blx	8de4 <fputs@plt+0x4>
   175d8:	movs	r0, #1
   175da:	blx	8b58 <exit@plt>
   175de:	adds	r0, r5, #1
   175e0:	add	r9, r4
   175e2:	mov	r2, sl
   175e4:	mov	r1, r7
   175e6:	add	r0, r4
   175e8:	blx	8830 <memcpy@plt+0x4>
   175ec:	movs	r3, #0
   175ee:	mov	r2, r5
   175f0:	strb.w	r3, [r9, #1]
   175f4:	mov	r1, fp
   175f6:	movs	r3, #47	; 0x2f
   175f8:	mov	r0, r4
   175fa:	strb	r3, [r4, r5]
   175fc:	blx	8830 <memcpy@plt+0x4>
   17600:	mov	r0, r7
   17602:	blx	87cc <free@plt+0x4>
   17606:	str.w	r4, [r6, #148]	; 0x94
   1760a:	ldr	r2, [pc, #52]	; (17640 <rb_first_postorder@@Base+0x29a>)
   1760c:	ldr	r3, [pc, #28]	; (1762c <rb_first_postorder@@Base+0x286>)
   1760e:	add	r2, pc
   17610:	ldr	r3, [r2, r3]
   17612:	ldr	r2, [r3, #0]
   17614:	ldr	r3, [sp, #12]
   17616:	eors	r2, r3
   17618:	beq.n	1761e <rb_first_postorder@@Base+0x278>
   1761a:	blx	88e4 <__stack_chk_fail@plt>
   1761e:	movs	r0, #1
   17620:	add	sp, #20
   17622:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17626:	nop
   17628:	asrs	r2, r0, #31
   1762a:	movs	r5, r0
   1762c:	lsls	r4, r7, #9
   1762e:	movs	r0, r0
   17630:	asrs	r4, r6, #30
   17632:	movs	r5, r0
   17634:	ldrh	r5, [r1, #0]
   17636:	movs	r2, r0
   17638:	lsls	r4, r1, #10
   1763a:	movs	r0, r0
   1763c:	strh	r7, [r7, #60]	; 0x3c
   1763e:	movs	r2, r0
   17640:	asrs	r2, r4, #28
   17642:	movs	r5, r0
   17644:	push	{r4, lr}
   17646:	mov	r4, r2
   17648:	ldr.w	r1, [r1, #148]	; 0x94
   1764c:	ldr.w	r0, [r0, #148]	; 0x94
   17650:	blx	8748 <strcmp@plt>
   17654:	cmp	r0, #0
   17656:	bgt.n	17666 <rb_first_postorder@@Base+0x2c0>
   17658:	ite	ne
   1765a:	movne.w	r0, #4294967295	; 0xffffffff
   1765e:	moveq	r0, #0
   17660:	cbz	r4, 17664 <rb_first_postorder@@Base+0x2be>
   17662:	negs	r0, r0
   17664:	pop	{r4, pc}
   17666:	movs	r0, #1
   17668:	b.n	17660 <rb_first_postorder@@Base+0x2ba>
   1766a:	push	{r4, lr}
   1766c:	sub	sp, #168	; 0xa8
   1766e:	ldr	r4, [pc, #76]	; (176bc <rb_first_postorder@@Base+0x316>)
   17670:	ldr	r1, [pc, #76]	; (176c0 <rb_first_postorder@@Base+0x31a>)
   17672:	add	r4, pc
   17674:	ldr	r1, [r4, r1]
   17676:	mov	r4, sp
   17678:	ldr	r1, [r1, #0]
   1767a:	str	r1, [sp, #164]	; 0xa4
   1767c:	mov.w	r1, #0
   17680:	strd	r2, r3, [sp, #24]
   17684:	mov	r3, r0
   17686:	cbnz	r3, 1769c <rb_first_postorder@@Base+0x2f6>
   17688:	ldr	r1, [pc, #56]	; (176c4 <rb_first_postorder@@Base+0x31e>)
   1768a:	ldr	r2, [pc, #52]	; (176c0 <rb_first_postorder@@Base+0x31a>)
   1768c:	add	r1, pc
   1768e:	ldr	r2, [r1, r2]
   17690:	ldr	r1, [r2, #0]
   17692:	ldr	r2, [sp, #164]	; 0xa4
   17694:	eors	r1, r2
   17696:	beq.n	176b4 <rb_first_postorder@@Base+0x30e>
   17698:	blx	88e4 <__stack_chk_fail@plt>
   1769c:	movs	r2, #0
   1769e:	mov	r1, r3
   176a0:	mov	r0, r4
   176a2:	bl	173bc <rb_first_postorder@@Base+0x16>
   176a6:	cmp	r0, #0
   176a8:	bge.n	176ae <rb_first_postorder@@Base+0x308>
   176aa:	ldr	r3, [r3, #8]
   176ac:	b.n	17686 <rb_first_postorder@@Base+0x2e0>
   176ae:	beq.n	17688 <rb_first_postorder@@Base+0x2e2>
   176b0:	ldr	r3, [r3, #4]
   176b2:	b.n	17686 <rb_first_postorder@@Base+0x2e0>
   176b4:	mov	r0, r3
   176b6:	add	sp, #168	; 0xa8
   176b8:	pop	{r4, pc}
   176ba:	nop
   176bc:	asrs	r6, r7, #26
   176be:	movs	r5, r0
   176c0:	lsls	r4, r7, #9
   176c2:	movs	r0, r0
   176c4:	asrs	r4, r4, #26
   176c6:	movs	r5, r0
   176c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   176cc:	sub	sp, #20
   176ce:	mov	r9, r0
   176d0:	ldr	r0, [r0, #0]
   176d2:	strd	r2, r3, [sp]
   176d6:	bl	1766a <rb_first_postorder@@Base+0x2c4>
   176da:	ldr.w	fp, [pc, #656]	; 1796c <rb_first_postorder@@Base+0x5c6>
   176de:	ldrd	r6, r7, [sp, #64]	; 0x40
   176e2:	add	fp, pc
   176e4:	ldrd	sl, r8, [sp, #88]	; 0x58
   176e8:	ldr	r5, [sp, #124]	; 0x7c
   176ea:	mov	r4, r0
   176ec:	cmp	r0, #0
   176ee:	beq.w	17826 <rb_first_postorder@@Base+0x480>
   176f2:	ldrd	r2, r3, [r0, #24]
   176f6:	ldrd	r0, r1, [sp]
   176fa:	cmp	r1, r3
   176fc:	it	eq
   176fe:	cmpeq	r0, r2
   17700:	bne.w	17826 <rb_first_postorder@@Base+0x480>
   17704:	cmp.w	sl, #0
   17708:	beq.n	1774a <rb_first_postorder@@Base+0x3a4>
   1770a:	cmp.w	r8, #0
   1770e:	beq.n	1774a <rb_first_postorder@@Base+0x3a4>
   17710:	ldr.w	r0, [r4, #144]	; 0x90
   17714:	blx	87cc <free@plt+0x4>
   17718:	add.w	r0, r8, #1
   1771c:	blx	8a94 <malloc@plt+0x4>
   17720:	str.w	r0, [r4, #144]	; 0x90
   17724:	cbnz	r0, 17738 <rb_first_postorder@@Base+0x392>
   17726:	ldr	r3, [pc, #584]	; (17970 <rb_first_postorder@@Base+0x5ca>)
   17728:	ldr	r0, [pc, #584]	; (17974 <rb_first_postorder@@Base+0x5ce>)
   1772a:	ldr.w	r3, [fp, r3]
   1772e:	add	r0, pc
   17730:	ldr	r1, [r3, #0]
   17732:	blx	8de4 <fputs@plt+0x4>
   17736:	b.n	1783a <rb_first_postorder@@Base+0x494>
   17738:	mov	r2, r8
   1773a:	mov	r1, sl
   1773c:	blx	8c14 <strncpy@plt>
   17740:	ldr.w	r3, [r4, #144]	; 0x90
   17744:	movs	r2, #0
   17746:	strb.w	r2, [r3, r8]
   1774a:	ldrd	r2, r3, [sp, #56]	; 0x38
   1774e:	orrs	r3, r2
   17750:	itt	ne
   17752:	ldrdne	r2, r3, [sp, #56]	; 0x38
   17756:	strdne	r2, r3, [r4, #48]	; 0x30
   1775a:	orrs.w	r3, r6, r7
   1775e:	ldrd	r2, r3, [sp, #72]	; 0x48
   17762:	it	ne
   17764:	strdne	r6, r7, [r4, #32]
   17768:	orrs	r3, r2
   1776a:	itt	ne
   1776c:	ldrdne	r2, r3, [sp, #72]	; 0x48
   17770:	strdne	r2, r3, [r4, #40]	; 0x28
   17774:	ldrd	r2, r3, [sp, #80]	; 0x50
   17778:	orrs	r3, r2
   1777a:	itt	ne
   1777c:	ldrdne	r2, r3, [sp, #80]	; 0x50
   17780:	strdne	r2, r3, [r4, #56]	; 0x38
   17784:	ldrd	r2, r3, [sp, #104]	; 0x68
   17788:	orrs	r3, r2
   1778a:	itt	ne
   1778c:	ldrdne	r2, r3, [sp, #104]	; 0x68
   17790:	strdne	r2, r3, [r4, #72]	; 0x48
   17794:	ldrd	r2, r3, [sp, #96]	; 0x60
   17798:	orrs	r3, r2
   1779a:	beq.n	17812 <rb_first_postorder@@Base+0x46c>
   1779c:	ldrd	r2, r3, [sp, #96]	; 0x60
   177a0:	strd	r2, r3, [r4, #80]	; 0x50
   177a4:	ldr	r3, [sp, #112]	; 0x70
   177a6:	cbz	r3, 177aa <rb_first_postorder@@Base+0x404>
   177a8:	str	r3, [r4, #88]	; 0x58
   177aa:	ldr	r3, [sp, #116]	; 0x74
   177ac:	cbz	r3, 177cc <rb_first_postorder@@Base+0x426>
   177ae:	add.w	r2, r4, #92	; 0x5c
   177b2:	add.w	ip, r3, #16
   177b6:	mov	r7, r3
   177b8:	mov	r3, r7
   177ba:	adds	r2, #8
   177bc:	ldmia	r3!, {r0, r1}
   177be:	cmp	r3, ip
   177c0:	str.w	r0, [r2, #-8]
   177c4:	mov	r7, r3
   177c6:	str.w	r1, [r2, #-4]
   177ca:	bne.n	177b8 <rb_first_postorder@@Base+0x412>
   177cc:	ldr	r3, [sp, #120]	; 0x78
   177ce:	cbz	r3, 177ee <rb_first_postorder@@Base+0x448>
   177d0:	add.w	r2, r4, #108	; 0x6c
   177d4:	add.w	r7, r3, #16
   177d8:	mov	r6, r3
   177da:	mov	r3, r6
   177dc:	adds	r2, #8
   177de:	ldmia	r3!, {r0, r1}
   177e0:	cmp	r3, r7
   177e2:	str.w	r0, [r2, #-8]
   177e6:	mov	r6, r3
   177e8:	str.w	r1, [r2, #-4]
   177ec:	bne.n	177da <rb_first_postorder@@Base+0x434>
   177ee:	cbz	r5, 1780a <rb_first_postorder@@Base+0x464>
   177f0:	adds	r4, #124	; 0x7c
   177f2:	add.w	r2, r5, #16
   177f6:	mov	r3, r5
   177f8:	adds	r4, #8
   177fa:	ldmia	r3!, {r0, r1}
   177fc:	cmp	r3, r2
   177fe:	str.w	r0, [r4, #-8]
   17802:	mov	r5, r3
   17804:	str.w	r1, [r4, #-4]
   17808:	bne.n	177f6 <rb_first_postorder@@Base+0x450>
   1780a:	movs	r0, #0
   1780c:	add	sp, #20
   1780e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17812:	ldrd	r2, r3, [r4, #80]	; 0x50
   17816:	orrs	r3, r2
   17818:	bne.n	177a4 <rb_first_postorder@@Base+0x3fe>
   1781a:	orrs.w	r3, r6, r7
   1781e:	it	ne
   17820:	strdne	r6, r7, [r4, #80]	; 0x50
   17824:	b.n	177a4 <rb_first_postorder@@Base+0x3fe>
   17826:	movs	r1, #160	; 0xa0
   17828:	movs	r0, #1
   1782a:	blx	8718 <calloc@plt+0x4>
   1782e:	mov	r4, r0
   17830:	cbnz	r0, 17840 <rb_first_postorder@@Base+0x49a>
   17832:	ldr	r0, [pc, #324]	; (17978 <rb_first_postorder@@Base+0x5d2>)
   17834:	add	r0, pc
   17836:	blx	8a78 <puts@plt+0x4>
   1783a:	movs	r0, #1
   1783c:	blx	8b58 <exit@plt>
   17840:	ldrd	r2, r3, [sp]
   17844:	strd	r2, r3, [r0, #24]
   17848:	cmp.w	sl, #0
   1784c:	beq.n	17882 <rb_first_postorder@@Base+0x4dc>
   1784e:	cmp.w	r8, #0
   17852:	beq.n	17882 <rb_first_postorder@@Base+0x4dc>
   17854:	add.w	r0, r8, #1
   17858:	blx	8a94 <malloc@plt+0x4>
   1785c:	str.w	r0, [r4, #144]	; 0x90
   17860:	cbnz	r0, 17870 <rb_first_postorder@@Base+0x4ca>
   17862:	ldr	r3, [pc, #268]	; (17970 <rb_first_postorder@@Base+0x5ca>)
   17864:	ldr	r0, [pc, #276]	; (1797c <rb_first_postorder@@Base+0x5d6>)
   17866:	ldr.w	r3, [fp, r3]
   1786a:	add	r0, pc
   1786c:	ldr	r1, [r3, #0]
   1786e:	b.n	17732 <rb_first_postorder@@Base+0x38c>
   17870:	mov	r2, r8
   17872:	mov	r1, sl
   17874:	str	r0, [sp, #12]
   17876:	blx	8c14 <strncpy@plt>
   1787a:	ldr	r3, [sp, #12]
   1787c:	movs	r2, #0
   1787e:	strb.w	r2, [r3, r8]
   17882:	ldrd	r2, r3, [sp, #56]	; 0x38
   17886:	orrs	r3, r2
   17888:	itt	ne
   1788a:	ldrdne	r2, r3, [sp, #56]	; 0x38
   1788e:	strdne	r2, r3, [r4, #48]	; 0x30
   17892:	ldrd	r2, r3, [sp, #80]	; 0x50
   17896:	orrs	r3, r2
   17898:	itt	ne
   1789a:	ldrdne	r2, r3, [sp, #80]	; 0x50
   1789e:	strdne	r2, r3, [r4, #56]	; 0x38
   178a2:	orrs.w	r3, r6, r7
   178a6:	ldrd	r2, r3, [sp, #72]	; 0x48
   178aa:	it	ne
   178ac:	strdne	r6, r7, [r4, #32]
   178b0:	orrs	r3, r2
   178b2:	itt	ne
   178b4:	ldrdne	r2, r3, [sp, #72]	; 0x48
   178b8:	strdne	r2, r3, [r4, #40]	; 0x28
   178bc:	ldrd	r2, r3, [sp, #104]	; 0x68
   178c0:	orrs	r3, r2
   178c2:	itt	ne
   178c4:	ldrdne	r2, r3, [sp, #104]	; 0x68
   178c8:	strdne	r2, r3, [r4, #72]	; 0x48
   178cc:	ldrd	r2, r3, [sp, #96]	; 0x60
   178d0:	orrs	r3, r2
   178d2:	beq.n	17926 <rb_first_postorder@@Base+0x580>
   178d4:	ldrd	r2, r3, [sp, #96]	; 0x60
   178d8:	strd	r2, r3, [r4, #80]	; 0x50
   178dc:	ldr	r3, [sp, #112]	; 0x70
   178de:	cbz	r3, 178e2 <rb_first_postorder@@Base+0x53c>
   178e0:	str	r3, [r4, #88]	; 0x58
   178e2:	ldr	r3, [sp, #116]	; 0x74
   178e4:	cbz	r3, 178f0 <rb_first_postorder@@Base+0x54a>
   178e6:	ldmia	r3, {r0, r1, r2, r3}
   178e8:	add.w	ip, r4, #92	; 0x5c
   178ec:	stmia.w	ip, {r0, r1, r2, r3}
   178f0:	ldr	r3, [sp, #120]	; 0x78
   178f2:	cbz	r3, 178fe <rb_first_postorder@@Base+0x558>
   178f4:	ldmia	r3, {r0, r1, r2, r3}
   178f6:	add.w	r7, r4, #108	; 0x6c
   178fa:	stmia.w	r7, {r0, r1, r2, r3}
   178fe:	cbz	r5, 1790c <rb_first_postorder@@Base+0x566>
   17900:	ldmia.w	r5, {r0, r1, r2, r3}
   17904:	add.w	r6, r4, #124	; 0x7c
   17908:	stmia.w	r6, {r0, r1, r2, r3}
   1790c:	mov	r2, r9
   1790e:	movs	r1, #0
   17910:	ldr	r3, [r2, #0]
   17912:	cbnz	r3, 1793a <rb_first_postorder@@Base+0x594>
   17914:	strd	r1, r3, [r4]
   17918:	mov	r0, r4
   1791a:	str	r3, [r4, #8]
   1791c:	mov	r1, r9
   1791e:	str	r4, [r2, #0]
   17920:	bl	16fae <rb_insert_color@@Base>
   17924:	b.n	1780a <rb_first_postorder@@Base+0x464>
   17926:	ldrd	r2, r3, [r4, #80]	; 0x50
   1792a:	orrs	r3, r2
   1792c:	bne.n	178dc <rb_first_postorder@@Base+0x536>
   1792e:	orrs.w	r3, r6, r7
   17932:	it	ne
   17934:	strdne	r6, r7, [r4, #80]	; 0x50
   17938:	b.n	178dc <rb_first_postorder@@Base+0x536>
   1793a:	movs	r2, #0
   1793c:	mov	r1, r3
   1793e:	mov	r0, r4
   17940:	bl	173bc <rb_first_postorder@@Base+0x16>
   17944:	cmp	r0, #0
   17946:	bge.n	17950 <rb_first_postorder@@Base+0x5aa>
   17948:	add.w	r2, r3, #8
   1794c:	mov	r1, r3
   1794e:	b.n	17910 <rb_first_postorder@@Base+0x56a>
   17950:	beq.n	17956 <rb_first_postorder@@Base+0x5b0>
   17952:	adds	r2, r3, #4
   17954:	b.n	1794c <rb_first_postorder@@Base+0x5a6>
   17956:	blx	8bac <__errno_location@plt>
   1795a:	movs	r3, #17
   1795c:	str	r3, [r0, #0]
   1795e:	ldr	r0, [pc, #32]	; (17980 <rb_first_postorder@@Base+0x5da>)
   17960:	ldrd	r2, r3, [sp]
   17964:	add	r0, pc
   17966:	bl	1a900 <__btrfs_error@@Base>
   1796a:	b.n	1783a <rb_first_postorder@@Base+0x494>
   1796c:	asrs	r6, r1, #25
   1796e:	movs	r5, r0
   17970:	lsls	r4, r1, #10
   17972:	movs	r0, r0
   17974:	strh	r1, [r4, #50]	; 0x32
   17976:	movs	r2, r0
   17978:	ldr	r2, [r6, #44]	; 0x2c
   1797a:	movs	r2, r0
   1797c:	strh	r5, [r4, #40]	; 0x28
   1797e:	movs	r2, r0
   17980:	strh	r7, [r1, #34]	; 0x22
   17982:	movs	r2, r0
   17984:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17988:	sub	sp, #20
   1798a:	movs	r6, #0
   1798c:	mov	r9, r1
   1798e:	mov	r5, r1
   17990:	mov	r4, r6
   17992:	mov.w	sl, #47	; 0x2f
   17996:	mov	fp, r6
   17998:	str	r0, [sp, #8]
   1799a:	strd	r2, r3, [sp]
   1799e:	ldrd	r2, r3, [r5, #48]	; 0x30
   179a2:	orrs	r3, r2
   179a4:	bne.n	179b6 <rb_first_postorder@@Base+0x610>
   179a6:	mov	r0, r4
   179a8:	blx	87cc <free@plt+0x4>
   179ac:	mvn.w	r0, #1
   179b0:	add	sp, #20
   179b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   179b6:	ldr.w	r8, [r5, #140]	; 0x8c
   179ba:	mov	r0, r8
   179bc:	blx	8b70 <strlen@plt>
   179c0:	mov	r7, r0
   179c2:	cmp	r4, #0
   179c4:	beq.n	17a4c <rb_first_postorder@@Base+0x6a6>
   179c6:	adds	r0, #2
   179c8:	add	r0, r6
   179ca:	blx	8a94 <malloc@plt+0x4>
   179ce:	mov	r8, r0
   179d0:	cbnz	r0, 179e0 <rb_first_postorder@@Base+0x63a>
   179d2:	ldr	r0, [pc, #140]	; (17a60 <rb_first_postorder@@Base+0x6ba>)
   179d4:	add	r0, pc
   179d6:	blx	896c <perror@plt>
   179da:	movs	r0, #1
   179dc:	blx	8b58 <exit@plt>
   179e0:	adds	r3, r7, #1
   179e2:	mov	r2, r6
   179e4:	add	r0, r3
   179e6:	mov	r1, r4
   179e8:	str	r3, [sp, #12]
   179ea:	blx	8830 <memcpy@plt+0x4>
   179ee:	mov	r2, r7
   179f0:	strb.w	sl, [r8, r7]
   179f4:	mov	r0, r8
   179f6:	ldr.w	r1, [r5, #140]	; 0x8c
   179fa:	blx	8830 <memcpy@plt+0x4>
   179fe:	add.w	r0, r8, r6
   17a02:	add	r7, r0
   17a04:	mov	r0, r4
   17a06:	mov	r4, r8
   17a08:	strb.w	fp, [r7, #1]
   17a0c:	blx	87cc <free@plt+0x4>
   17a10:	ldr	r3, [sp, #12]
   17a12:	add	r6, r3
   17a14:	ldrd	r2, r3, [r9, #64]	; 0x40
   17a18:	ldrd	r0, r1, [sp]
   17a1c:	orrs	r3, r2
   17a1e:	itt	eq
   17a20:	ldrdeq	r2, r3, [r5, #48]	; 0x30
   17a24:	strdeq	r2, r3, [r9, #64]	; 0x40
   17a28:	ldrd	r2, r3, [r5, #48]	; 0x30
   17a2c:	cmp	r3, r1
   17a2e:	it	eq
   17a30:	cmpeq	r2, r0
   17a32:	beq.n	17a58 <rb_first_postorder@@Base+0x6b2>
   17a34:	cmp	r3, #0
   17a36:	it	eq
   17a38:	cmpeq	r2, #5
   17a3a:	beq.n	17a58 <rb_first_postorder@@Base+0x6b2>
   17a3c:	ldr	r1, [sp, #8]
   17a3e:	ldr	r0, [r1, #0]
   17a40:	bl	1766a <rb_first_postorder@@Base+0x2c4>
   17a44:	mov	r5, r0
   17a46:	cmp	r0, #0
   17a48:	bne.n	1799e <rb_first_postorder@@Base+0x5f8>
   17a4a:	b.n	179a6 <rb_first_postorder@@Base+0x600>
   17a4c:	mov	r0, r8
   17a4e:	mov	r6, r7
   17a50:	blx	88cc <strdup@plt+0x4>
   17a54:	mov	r4, r0
   17a56:	b.n	17a14 <rb_first_postorder@@Base+0x66e>
   17a58:	movs	r0, #0
   17a5a:	str.w	r4, [r9, #148]	; 0x94
   17a5e:	b.n	179b0 <rb_first_postorder@@Base+0x60a>
   17a60:	strh	r3, [r1, #32]
   17a62:	movs	r2, r0
   17a64:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   17a68:	mov	r4, r1
   17a6a:	ldr	r1, [pc, #260]	; (17b70 <rb_first_postorder@@Base+0x7ca>)
   17a6c:	sub.w	sp, sp, #4096	; 0x1000
   17a70:	ldr	r2, [pc, #256]	; (17b74 <rb_first_postorder@@Base+0x7ce>)
   17a72:	sub	sp, #16
   17a74:	add	r1, pc
   17a76:	ldr.w	r6, [r4, #140]	; 0x8c
   17a7a:	add.w	r3, sp, #4096	; 0x1000
   17a7e:	mov	r5, r0
   17a80:	ldr	r2, [r1, r2]
   17a82:	adds	r3, #12
   17a84:	ldr	r2, [r2, #0]
   17a86:	str	r2, [r3, #0]
   17a88:	mov.w	r2, #0
   17a8c:	cmp	r6, #0
   17a8e:	bne.n	17b4a <rb_first_postorder@@Base+0x7a4>
   17a90:	ldrd	r8, r9, [r4, #48]	; 0x30
   17a94:	orrs.w	r3, r8, r9
   17a98:	beq.n	17ad8 <rb_first_postorder@@Base+0x732>
   17a9a:	add	r7, sp, #8
   17a9c:	mov.w	r2, #4096	; 0x1000
   17aa0:	mov	r1, r6
   17aa2:	add.w	sl, sp, #16
   17aa6:	mov	r0, r7
   17aa8:	blx	8bf8 <memset@plt+0x4>
   17aac:	ldrd	r2, r3, [r4, #56]	; 0x38
   17ab0:	mov	r0, r5
   17ab2:	ldr	r1, [pc, #184]	; (17b6c <rb_first_postorder@@Base+0x7c6>)
   17ab4:	strd	r8, r9, [sl, #-8]
   17ab8:	strd	r2, r3, [r7, #8]
   17abc:	mov	r2, r7
   17abe:	blx	89cc <ioctl@plt>
   17ac2:	subs	r5, r0, #0
   17ac4:	bge.n	17b04 <rb_first_postorder@@Base+0x75e>
   17ac6:	blx	8bac <__errno_location@plt>
   17aca:	ldr	r3, [r0, #0]
   17acc:	cmp	r3, #2
   17ace:	bne.n	17ade <rb_first_postorder@@Base+0x738>
   17ad0:	movs	r2, #0
   17ad2:	movs	r3, #0
   17ad4:	strd	r2, r3, [r4, #48]	; 0x30
   17ad8:	mvn.w	r5, #1
   17adc:	b.n	17aea <rb_first_postorder@@Base+0x744>
   17ade:	ldr	r0, [pc, #152]	; (17b78 <rb_first_postorder@@Base+0x7d2>)
   17ae0:	ldrd	r2, r3, [r4, #48]	; 0x30
   17ae4:	add	r0, pc
   17ae6:	bl	1a900 <__btrfs_error@@Base>
   17aea:	ldr	r1, [pc, #144]	; (17b7c <rb_first_postorder@@Base+0x7d6>)
   17aec:	add.w	r3, sp, #4096	; 0x1000
   17af0:	ldr	r2, [pc, #128]	; (17b74 <rb_first_postorder@@Base+0x7ce>)
   17af2:	adds	r3, #12
   17af4:	add	r1, pc
   17af6:	ldr	r2, [r1, r2]
   17af8:	ldr	r1, [r2, #0]
   17afa:	ldr	r2, [r3, #0]
   17afc:	eors	r1, r2
   17afe:	beq.n	17b60 <rb_first_postorder@@Base+0x7ba>
   17b00:	blx	88e4 <__stack_chk_fail@plt>
   17b04:	ldr.w	r8, [r4, #144]	; 0x90
   17b08:	ldrb	r3, [r7, #16]
   17b0a:	mov	r0, r8
   17b0c:	cbz	r3, 17b4e <rb_first_postorder@@Base+0x7a8>
   17b0e:	blx	8b70 <strlen@plt>
   17b12:	add	r1, sp, #24
   17b14:	str	r1, [sp, #4]
   17b16:	mov	r5, r0
   17b18:	mov	r0, r1
   17b1a:	blx	8b70 <strlen@plt>
   17b1e:	add	r0, r5
   17b20:	adds	r0, #1
   17b22:	blx	8a94 <malloc@plt+0x4>
   17b26:	ldr	r1, [sp, #4]
   17b28:	mov	r5, r0
   17b2a:	str.w	r0, [r4, #140]	; 0x8c
   17b2e:	cbnz	r0, 17b3e <rb_first_postorder@@Base+0x798>
   17b30:	ldr	r0, [pc, #76]	; (17b80 <rb_first_postorder@@Base+0x7da>)
   17b32:	add	r0, pc
   17b34:	blx	896c <perror@plt>
   17b38:	movs	r0, #1
   17b3a:	blx	8b58 <exit@plt>
   17b3e:	blx	8a08 <strcpy@plt>
   17b42:	mov	r1, r8
   17b44:	mov	r0, r5
   17b46:	blx	89c0 <strcat@plt+0x4>
   17b4a:	movs	r5, #0
   17b4c:	b.n	17aea <rb_first_postorder@@Base+0x744>
   17b4e:	blx	88cc <strdup@plt+0x4>
   17b52:	str.w	r0, [r4, #140]	; 0x8c
   17b56:	cmp	r0, #0
   17b58:	bne.n	17b4a <rb_first_postorder@@Base+0x7a4>
   17b5a:	ldr	r0, [pc, #40]	; (17b84 <rb_first_postorder@@Base+0x7de>)
   17b5c:	add	r0, pc
   17b5e:	b.n	17b34 <rb_first_postorder@@Base+0x78e>
   17b60:	mov	r0, r5
   17b62:	add.w	sp, sp, #4096	; 0x1000
   17b66:	add	sp, #16
   17b68:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   17b6c:	str	r4, [sp, #72]	; 0x48
   17b6e:	beq.n	17b72 <rb_first_postorder@@Base+0x7cc>
   17b70:	asrs	r4, r7, #10
   17b72:	movs	r5, r0
   17b74:	lsls	r4, r7, #9
   17b76:	movs	r0, r0
   17b78:	strh	r1, [r1, #24]
   17b7a:	movs	r2, r0
   17b7c:	asrs	r4, r7, #8
   17b7e:	movs	r5, r0
   17b80:	strh	r5, [r5, #20]
   17b82:	movs	r2, r0
   17b84:	strh	r1, [r7, #20]
   17b86:	movs	r2, r0
   17b88:	push	{r3, r4, r5, lr}
   17b8a:	mov	r5, r0
   17b8c:	mov	r0, r1
   17b8e:	bl	172ca <rb_first@@Base>
   17b92:	mov	r4, r0
   17b94:	cbnz	r0, 17b98 <rb_first_postorder@@Base+0x7f2>
   17b96:	pop	{r3, r4, r5, pc}
   17b98:	mov	r1, r4
   17b9a:	mov	r0, r5
   17b9c:	bl	17a64 <rb_first_postorder@@Base+0x6be>
   17ba0:	cbz	r0, 17ba6 <rb_first_postorder@@Base+0x800>
   17ba2:	adds	r3, r0, #2
   17ba4:	bne.n	17b96 <rb_first_postorder@@Base+0x7f0>
   17ba6:	mov	r0, r4
   17ba8:	bl	172ea <rb_next@@Base>
   17bac:	b.n	17b92 <rb_first_postorder@@Base+0x7ec>
   17bae:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17bb2:	mov	r6, r1
   17bb4:	vpush	{d8}
   17bb8:	ldr	r1, [pc, #748]	; (17ea8 <rb_first_postorder@@Base+0xb02>)
   17bba:	ldr	r2, [pc, #752]	; (17eac <rb_first_postorder@@Base+0xb06>)
   17bbc:	add	r1, pc
   17bbe:	vmov	s16, r0
   17bc2:	sub.w	sp, sp, #4288	; 0x10c0
   17bc6:	sub	sp, #28
   17bc8:	ldr	r2, [r1, r2]
   17bca:	add	r4, sp, #160	; 0xa0
   17bcc:	add.w	r3, sp, #4288	; 0x10c0
   17bd0:	add	r5, sp, #184	; 0xb8
   17bd2:	ldr	r2, [r2, #0]
   17bd4:	str	r2, [r3, #20]
   17bd6:	mov.w	r2, #0
   17bda:	movs	r1, #0
   17bdc:	mov.w	r2, #4096	; 0x1000
   17be0:	mov	r0, r4
   17be2:	str	r1, [r6, #0]
   17be4:	adds	r3, #20
   17be6:	blx	8bf8 <memset@plt+0x4>
   17bea:	movs	r2, #1
   17bec:	movs	r3, #0
   17bee:	strd	r2, r3, [r5, #-24]
   17bf2:	movs	r2, #132	; 0x84
   17bf4:	movs	r3, #144	; 0x90
   17bf6:	strd	r2, r3, [r4, #56]	; 0x38
   17bfa:	movs	r2, #5
   17bfc:	movs	r3, #0
   17bfe:	strd	r2, r3, [r4, #8]
   17c02:	mvn.w	r2, #255	; 0xff
   17c06:	mov.w	r3, #4294967295	; 0xffffffff
   17c0a:	strd	r2, r3, [r4, #16]
   17c0e:	mov.w	r2, #4294967295	; 0xffffffff
   17c12:	mov.w	r3, #4294967295	; 0xffffffff
   17c16:	strd	r2, r3, [r4, #32]
   17c1a:	strd	r2, r3, [r4, #48]	; 0x30
   17c1e:	vmov	r0, s16
   17c22:	mov	r2, r4
   17c24:	ldr	r1, [pc, #636]	; (17ea4 <rb_first_postorder@@Base+0xafe>)
   17c26:	mov.w	r3, #4096	; 0x1000
   17c2a:	str	r3, [r4, #64]	; 0x40
   17c2c:	blx	89cc <ioctl@plt>
   17c30:	cmp	r0, #0
   17c32:	blt.n	17c3e <rb_first_postorder@@Base+0x898>
   17c34:	ldr	r3, [r4, #64]	; 0x40
   17c36:	cmp	r3, #0
   17c38:	bne.w	17e86 <rb_first_postorder@@Base+0xae0>
   17c3c:	movs	r0, #0
   17c3e:	ldr	r1, [pc, #624]	; (17eb0 <rb_first_postorder@@Base+0xb0a>)
   17c40:	add.w	r3, sp, #4288	; 0x10c0
   17c44:	ldr	r2, [pc, #612]	; (17eac <rb_first_postorder@@Base+0xb06>)
   17c46:	adds	r3, #20
   17c48:	add	r1, pc
   17c4a:	ldr	r2, [r1, r2]
   17c4c:	ldr	r1, [r2, #0]
   17c4e:	ldr	r2, [r3, #0]
   17c50:	eors	r1, r2
   17c52:	beq.w	17e94 <rb_first_postorder@@Base+0xaee>
   17c56:	blx	88e4 <__stack_chk_fail@plt>
   17c5a:	ldr	r3, [sp, #104]	; 0x68
   17c5c:	add	r5, sp, #128	; 0x80
   17c5e:	adds	r3, #80	; 0x50
   17c60:	mov	lr, r5
   17c62:	add	r3, r2
   17c64:	add.w	r8, r3, #32
   17c68:	ldr	r0, [r3, #0]
   17c6a:	adds	r3, #8
   17c6c:	ldr.w	r1, [r3, #-4]
   17c70:	cmp	r3, r8
   17c72:	mov	ip, lr
   17c74:	stmia.w	ip!, {r0, r1}
   17c78:	mov	lr, ip
   17c7a:	bne.n	17c68 <rb_first_postorder@@Base+0x8c2>
   17c7c:	ldr.w	r8, [r5, #24]
   17c80:	add.w	r9, r2, #32
   17c84:	cmp.w	r8, #144	; 0x90
   17c88:	bne.n	17d42 <rb_first_postorder@@Base+0x99c>
   17c8a:	ldr	r3, [sp, #124]	; 0x7c
   17c8c:	movs	r0, #0
   17c8e:	movs	r1, #0
   17c90:	movs	r2, #0
   17c92:	add	r3, r9
   17c94:	strd	r2, r2, [sp, #64]	; 0x40
   17c98:	strd	r2, r2, [sp, #56]	; 0x38
   17c9c:	strd	r0, r1, [sp, #48]	; 0x30
   17ca0:	strd	r0, r1, [sp, #40]	; 0x28
   17ca4:	ldrh	r2, [r3, #16]
   17ca6:	str	r2, [sp, #36]	; 0x24
   17ca8:	add.w	r2, r3, #18
   17cac:	str	r2, [sp, #32]
   17cae:	ldr	r2, [r3, #0]
   17cb0:	ldr	r3, [r3, #4]
   17cb2:	strd	r0, r1, [sp, #16]
   17cb6:	strd	r0, r1, [sp, #8]
   17cba:	strd	r2, r3, [sp, #24]
   17cbe:	ldrd	r2, r3, [r5, #16]
   17cc2:	strd	r2, r3, [sp]
   17cc6:	ldrd	r2, r3, [r5, #8]
   17cca:	mov	r0, r6
   17ccc:	bl	176c8 <rb_first_postorder@@Base+0x322>
   17cd0:	ldrd	r0, r1, [r5, #8]
   17cd4:	adds	r7, #1
   17cd6:	ldr	r2, [r5, #28]
   17cd8:	str.w	r8, [r4, #56]	; 0x38
   17cdc:	strd	r0, r1, [r4, #8]
   17ce0:	add	r2, r9
   17ce2:	ldrd	r0, r1, [r5, #16]
   17ce6:	strd	r0, r1, [r4, #24]
   17cea:	ldr	r3, [r4, #64]	; 0x40
   17cec:	cmp	r7, r3
   17cee:	bcc.n	17c5a <rb_first_postorder@@Base+0x8b4>
   17cf0:	ldrd	r3, r2, [r4, #24]
   17cf4:	adds	r3, #1
   17cf6:	str	r3, [sp, #72]	; 0x48
   17cf8:	adc.w	r3, r2, #0
   17cfc:	str	r3, [sp, #76]	; 0x4c
   17cfe:	ldrd	r2, r3, [sp, #72]	; 0x48
   17d02:	strd	r2, r3, [r4, #24]
   17d06:	orrs	r3, r2
   17d08:	bne.n	17c1e <rb_first_postorder@@Base+0x878>
   17d0a:	ldr	r3, [r4, #56]	; 0x38
   17d0c:	adds	r3, #1
   17d0e:	str	r3, [r4, #56]	; 0x38
   17d10:	cmp	r3, #144	; 0x90
   17d12:	bls.n	17c1e <rb_first_postorder@@Base+0x878>
   17d14:	movs	r3, #132	; 0x84
   17d16:	str	r3, [r4, #56]	; 0x38
   17d18:	ldrd	r3, r2, [r4, #8]
   17d1c:	adds	r3, #1
   17d1e:	str	r3, [sp, #80]	; 0x50
   17d20:	adc.w	r3, r2, #0
   17d24:	str	r3, [sp, #84]	; 0x54
   17d26:	ldrd	r2, r3, [sp, #80]	; 0x50
   17d2a:	ldrd	r0, r1, [sp, #80]	; 0x50
   17d2e:	strd	r2, r3, [r4, #8]
   17d32:	ldrd	r2, r3, [r4, #16]
   17d36:	cmp	r3, r1
   17d38:	it	eq
   17d3a:	cmpeq	r2, r0
   17d3c:	bcs.w	17c1e <rb_first_postorder@@Base+0x878>
   17d40:	b.n	17c3c <rb_first_postorder@@Base+0x896>
   17d42:	cmp.w	r8, #132	; 0x84
   17d46:	bne.n	17cd0 <rb_first_postorder@@Base+0x92a>
   17d48:	ldrd	r2, r3, [r5, #8]
   17d4c:	cmp	r3, #0
   17d4e:	it	eq
   17d50:	cmpeq.w	r2, #256	; 0x100
   17d54:	strd	r2, r3, [sp, #88]	; 0x58
   17d58:	bcs.n	17d62 <rb_first_postorder@@Base+0x9bc>
   17d5a:	cmp	r3, #0
   17d5c:	it	eq
   17d5e:	cmpeq	r2, #5
   17d60:	bne.n	17cd0 <rb_first_postorder@@Base+0x92a>
   17d62:	add	r3, sp, #264	; 0x108
   17d64:	add	r3, r9
   17d66:	ldr.w	r2, [r3, #160]	; 0xa0
   17d6a:	str	r2, [sp, #116]	; 0x74
   17d6c:	ldr.w	r2, [r3, #164]	; 0xa4
   17d70:	str	r2, [sp, #120]	; 0x78
   17d72:	ldr.w	r2, [r3, #208]	; 0xd0
   17d76:	str	r2, [sp, #108]	; 0x6c
   17d78:	ldr.w	r2, [r3, #212]	; 0xd4
   17d7c:	str	r2, [sp, #112]	; 0x70
   17d7e:	ldr	r2, [r5, #28]
   17d80:	cmp	r2, #239	; 0xef
   17d82:	bls.n	17e52 <rb_first_postorder@@Base+0xaac>
   17d84:	ldr.w	r2, [r3, #303]	; 0x12f
   17d88:	add.w	sl, sp, #4256	; 0x10a0
   17d8c:	ldr.w	ip, [r3, #339]	; 0x153
   17d90:	add.w	sl, sl, #4
   17d94:	addw	fp, r3, #263	; 0x107
   17d98:	str	r2, [sp, #96]	; 0x60
   17d9a:	ldr.w	r2, [r3, #307]	; 0x133
   17d9e:	str	r2, [sp, #100]	; 0x64
   17da0:	add.w	r2, r3, #247	; 0xf7
   17da4:	ldr	r0, [r2, #0]
   17da6:	adds	r2, #8
   17da8:	ldr.w	r1, [r2, #-4]
   17dac:	cmp	r2, fp
   17dae:	mov	lr, sl
   17db0:	stmia.w	lr!, {r0, r1}
   17db4:	mov	sl, lr
   17db6:	bne.n	17da4 <rb_first_postorder@@Base+0x9fe>
   17db8:	add.w	sl, sp, #4256	; 0x10a0
   17dbc:	addw	r2, r3, #263	; 0x107
   17dc0:	add.w	sl, sl, #20
   17dc4:	addw	fp, r3, #279	; 0x117
   17dc8:	ldr	r0, [r2, #0]
   17dca:	adds	r2, #8
   17dcc:	ldr.w	r1, [r2, #-4]
   17dd0:	cmp	r2, fp
   17dd2:	mov	lr, sl
   17dd4:	stmia.w	lr!, {r0, r1}
   17dd8:	mov	sl, lr
   17dda:	bne.n	17dc8 <rb_first_postorder@@Base+0xa22>
   17ddc:	add.w	lr, sp, #4288	; 0x10c0
   17de0:	addw	r2, r3, #279	; 0x117
   17de4:	add.w	lr, lr, #4
   17de8:	addw	r3, r3, #295	; 0x127
   17dec:	ldr	r0, [r2, #0]
   17dee:	adds	r2, #8
   17df0:	ldr.w	r1, [r2, #-4]
   17df4:	cmp	r2, r3
   17df6:	mov	sl, lr
   17df8:	stmia.w	sl!, {r0, r1}
   17dfc:	mov	lr, sl
   17dfe:	bne.n	17dec <rb_first_postorder@@Base+0xa46>
   17e00:	add.w	r3, sp, #4288	; 0x10c0
   17e04:	movs	r0, #0
   17e06:	adds	r3, #4
   17e08:	str	r3, [sp, #68]	; 0x44
   17e0a:	add.w	r3, sp, #4256	; 0x10a0
   17e0e:	movs	r1, #0
   17e10:	adds	r3, #20
   17e12:	str	r3, [sp, #64]	; 0x40
   17e14:	add.w	r3, sp, #4256	; 0x10a0
   17e18:	strd	r0, r1, [sp, #24]
   17e1c:	adds	r3, #4
   17e1e:	strd	ip, r3, [sp, #56]	; 0x38
   17e22:	ldr	r3, [sp, #116]	; 0x74
   17e24:	str	r3, [sp, #48]	; 0x30
   17e26:	ldr	r3, [sp, #120]	; 0x78
   17e28:	str	r3, [sp, #52]	; 0x34
   17e2a:	ldr	r3, [sp, #96]	; 0x60
   17e2c:	str	r3, [sp, #40]	; 0x28
   17e2e:	ldr	r3, [sp, #100]	; 0x64
   17e30:	str	r3, [sp, #44]	; 0x2c
   17e32:	movs	r3, #0
   17e34:	strd	r3, r3, [sp, #32]
   17e38:	ldr	r3, [sp, #108]	; 0x6c
   17e3a:	str	r3, [sp, #16]
   17e3c:	ldr	r3, [sp, #112]	; 0x70
   17e3e:	str	r3, [sp, #20]
   17e40:	ldrd	r2, r3, [r5, #16]
   17e44:	strd	r0, r1, [sp]
   17e48:	strd	r2, r3, [sp, #8]
   17e4c:	ldrd	r2, r3, [sp, #88]	; 0x58
   17e50:	b.n	17cca <rb_first_postorder@@Base+0x924>
   17e52:	add.w	r0, sp, #4256	; 0x10a0
   17e56:	movs	r2, #16
   17e58:	movs	r1, #0
   17e5a:	adds	r0, #4
   17e5c:	blx	8bf8 <memset@plt+0x4>
   17e60:	add.w	r0, sp, #4256	; 0x10a0
   17e64:	movs	r2, #16
   17e66:	movs	r1, #0
   17e68:	adds	r0, #20
   17e6a:	blx	8bf8 <memset@plt+0x4>
   17e6e:	add.w	r0, sp, #4288	; 0x10c0
   17e72:	adds	r0, #4
   17e74:	movs	r2, #16
   17e76:	movs	r1, #0
   17e78:	blx	8bf8 <memset@plt+0x4>
   17e7c:	mov.w	ip, #0
   17e80:	strd	ip, ip, [sp, #96]	; 0x60
   17e84:	b.n	17e00 <rb_first_postorder@@Base+0xa5a>
   17e86:	movs	r7, #0
   17e88:	add	r3, sp, #184	; 0xb8
   17e8a:	mov	r2, r7
   17e8c:	str	r3, [sp, #104]	; 0x68
   17e8e:	add	r3, sp, #264	; 0x108
   17e90:	str	r3, [sp, #124]	; 0x7c
   17e92:	b.n	17cea <rb_first_postorder@@Base+0x944>
   17e94:	add.w	sp, sp, #4288	; 0x10c0
   17e98:	add	sp, #28
   17e9a:	vpop	{d8}
   17e9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17ea2:	nop
   17ea4:	str	r4, [sp, #68]	; 0x44
   17ea6:	beq.n	17eaa <rb_first_postorder@@Base+0xb04>
   17ea8:	asrs	r4, r6, #5
   17eaa:	movs	r5, r0
   17eac:	lsls	r4, r7, #9
   17eae:	movs	r0, r0
   17eb0:	asrs	r0, r5, #3
   17eb2:	movs	r5, r0
   17eb4:	push	{r4, r5, r6, lr}
   17eb6:	mov	r5, r0
   17eb8:	mov	r6, r1
   17eba:	bl	17bae <rb_first_postorder@@Base+0x808>
   17ebe:	mov	r4, r0
   17ec0:	cbnz	r0, 17ecc <rb_first_postorder@@Base+0xb26>
   17ec2:	mov	r1, r6
   17ec4:	mov	r0, r5
   17ec6:	ldmia.w	sp!, {r4, r5, r6, lr}
   17eca:	b.n	17b88 <rb_first_postorder@@Base+0x7e2>
   17ecc:	ldr	r0, [pc, #8]	; (17ed8 <rb_first_postorder@@Base+0xb32>)
   17ece:	add	r0, pc
   17ed0:	bl	1a900 <__btrfs_error@@Base>
   17ed4:	mov	r0, r4
   17ed6:	pop	{r4, r5, r6, pc}
   17ed8:	ldrb	r5, [r2, #29]
   17eda:	movs	r2, r0
   17edc:	push	{r0, r1, r2, r3, r4, lr}
   17ede:	ldr	r3, [pc, #40]	; (17f08 <rb_first_postorder@@Base+0xb62>)
   17ee0:	ldr	r4, [pc, #40]	; (17f0c <rb_first_postorder@@Base+0xb66>)
   17ee2:	add	r3, pc
   17ee4:	ldr	r4, [r3, r4]
   17ee6:	movs	r3, #0
   17ee8:	strd	r2, r1, [sp]
   17eec:	movs	r1, #1
   17eee:	strd	r0, r3, [sp, #8]
   17ef2:	ldr	r2, [pc, #28]	; (17f10 <rb_first_postorder@@Base+0xb6a>)
   17ef4:	ldr	r3, [pc, #28]	; (17f14 <rb_first_postorder@@Base+0xb6e>)
   17ef6:	add	r2, pc
   17ef8:	ldr	r0, [r4, #0]
   17efa:	add	r3, pc
   17efc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   17f00:	bl	174dc <rb_first_postorder@@Base+0x136>
   17f04:	blx	8e08 <abort@plt>
   17f08:	lsrs	r6, r1, #25
   17f0a:	movs	r5, r0
   17f0c:	lsls	r4, r1, #10
   17f0e:	movs	r0, r0
   17f10:	str	r6, [r6, #68]	; 0x44
   17f12:	movs	r2, r0
   17f14:	ldrb	r6, [r0, #29]
   17f16:	movs	r2, r0
   17f18:	push	{r4, lr}
   17f1a:	subs	r1, #1
   17f1c:	ldr	r4, [pc, #288]	; (18040 <rb_first_postorder@@Base+0xc9a>)
   17f1e:	sub	sp, #328	; 0x148
   17f20:	ldr	r2, [pc, #288]	; (18044 <rb_first_postorder@@Base+0xc9e>)
   17f22:	add	r4, pc
   17f24:	ldr	r3, [pc, #288]	; (18048 <rb_first_postorder@@Base+0xca2>)
   17f26:	ldr	r2, [r4, r2]
   17f28:	add	r3, pc
   17f2a:	ldr	r2, [r2, #0]
   17f2c:	str	r2, [sp, #324]	; 0x144
   17f2e:	mov.w	r2, #0
   17f32:	cmp	r1, #8
   17f34:	bhi.n	17f44 <rb_first_postorder@@Base+0xb9e>
   17f36:	tbb	[pc, r1]
   17f3a:	subs	r6, r2, r4
   17f3c:	movs	r5, #32
   17f3e:	ldrb	r2, [r5, r0]
   17f40:	ldr	r0, [pc, #380]	; (180c0 <btrfs_list_setup_print_column@@Base+0x30>)
   17f42:	lsls	r2, r4, #1
   17f44:	ldr	r1, [pc, #260]	; (1804c <rb_first_postorder@@Base+0xca6>)
   17f46:	ldrd	r2, r3, [r0, #24]
   17f4a:	add	r1, pc
   17f4c:	movs	r0, #1
   17f4e:	blx	8c6c <__printf_chk@plt+0x4>
   17f52:	ldr	r2, [pc, #252]	; (18050 <rb_first_postorder@@Base+0xcaa>)
   17f54:	ldr	r3, [pc, #236]	; (18044 <rb_first_postorder@@Base+0xc9e>)
   17f56:	add	r2, pc
   17f58:	ldr	r3, [r2, r3]
   17f5a:	ldr	r2, [r3, #0]
   17f5c:	ldr	r3, [sp, #324]	; 0x144
   17f5e:	eors	r2, r3
   17f60:	beq.n	1803a <rb_first_postorder@@Base+0xc94>
   17f62:	blx	88e4 <__stack_chk_fail@plt>
   17f66:	ldr	r1, [pc, #236]	; (18054 <rb_first_postorder@@Base+0xcae>)
   17f68:	ldrd	r2, r3, [r0, #72]	; 0x48
   17f6c:	add	r1, pc
   17f6e:	b.n	17f4c <rb_first_postorder@@Base+0xba6>
   17f70:	ldr	r1, [pc, #228]	; (18058 <rb_first_postorder@@Base+0xcb2>)
   17f72:	ldrd	r2, r3, [r0, #80]	; 0x50
   17f76:	add	r1, pc
   17f78:	b.n	17f4c <rb_first_postorder@@Base+0xba6>
   17f7a:	ldr	r1, [pc, #224]	; (1805c <rb_first_postorder@@Base+0xcb6>)
   17f7c:	ldrd	r2, r3, [r0, #48]	; 0x30
   17f80:	add	r1, pc
   17f82:	b.n	17f4c <rb_first_postorder@@Base+0xba6>
   17f84:	ldr	r1, [pc, #216]	; (18060 <rb_first_postorder@@Base+0xcba>)
   17f86:	ldrd	r2, r3, [r0, #64]	; 0x40
   17f8a:	add	r1, pc
   17f8c:	b.n	17f4c <rb_first_postorder@@Base+0xba6>
   17f8e:	ldr	r3, [r0, #88]	; 0x58
   17f90:	add	r4, sp, #68	; 0x44
   17f92:	cbz	r3, 17fbe <rb_first_postorder@@Base+0xc18>
   17f94:	add	r3, sp, #24
   17f96:	adds	r0, #88	; 0x58
   17f98:	str	r3, [sp, #20]
   17f9a:	mov	r1, r3
   17f9c:	blx	8930 <localtime_r@plt>
   17fa0:	ldr	r2, [pc, #192]	; (18064 <rb_first_postorder@@Base+0xcbe>)
   17fa2:	ldr	r3, [sp, #20]
   17fa4:	mov.w	r1, #256	; 0x100
   17fa8:	add	r2, pc
   17faa:	mov	r0, r4
   17fac:	blx	8ac8 <strftime@plt>
   17fb0:	ldr	r1, [pc, #180]	; (18068 <rb_first_postorder@@Base+0xcc2>)
   17fb2:	mov	r2, r4
   17fb4:	add	r1, pc
   17fb6:	movs	r0, #1
   17fb8:	blx	8c6c <__printf_chk@plt+0x4>
   17fbc:	b.n	17f52 <rb_first_postorder@@Base+0xbac>
   17fbe:	ldr	r1, [pc, #172]	; (1806c <rb_first_postorder@@Base+0xcc6>)
   17fc0:	mov	r0, r4
   17fc2:	add	r1, pc
   17fc4:	blx	8a08 <strcpy@plt>
   17fc8:	b.n	17fb0 <rb_first_postorder@@Base+0xc0a>
   17fca:	add.w	r4, r0, #92	; 0x5c
   17fce:	mov	r0, r4
   17fd0:	blx	8be8 <uuid_is_null@plt>
   17fd4:	cbz	r0, 17fe8 <rb_first_postorder@@Base+0xc42>
   17fd6:	ldr	r1, [pc, #152]	; (18070 <rb_first_postorder@@Base+0xcca>)
   17fd8:	add	r0, sp, #68	; 0x44
   17fda:	add	r1, pc
   17fdc:	blx	8a08 <strcpy@plt>
   17fe0:	ldr	r1, [pc, #144]	; (18074 <rb_first_postorder@@Base+0xcce>)
   17fe2:	add	r2, sp, #68	; 0x44
   17fe4:	add	r1, pc
   17fe6:	b.n	17fb6 <rb_first_postorder@@Base+0xc10>
   17fe8:	add	r1, sp, #68	; 0x44
   17fea:	mov	r0, r4
   17fec:	blx	8760 <uuid_unparse@plt>
   17ff0:	b.n	17fe0 <rb_first_postorder@@Base+0xc3a>
   17ff2:	add.w	r4, r0, #108	; 0x6c
   17ff6:	b.n	17fce <rb_first_postorder@@Base+0xc28>
   17ff8:	add.w	r4, r0, #124	; 0x7c
   17ffc:	b.n	17fce <rb_first_postorder@@Base+0xc28>
   17ffe:	ldr.w	r2, [r0, #148]	; 0x94
   18002:	cbnz	r2, 18034 <rb_first_postorder@@Base+0xc8e>
   18004:	ldr	r2, [pc, #112]	; (18078 <rb_first_postorder@@Base+0xcd2>)
   18006:	movs	r1, #1
   18008:	ldr	r0, [r3, r2]
   1800a:	ldr	r3, [pc, #112]	; (1807c <rb_first_postorder@@Base+0xcd6>)
   1800c:	ldr	r2, [pc, #112]	; (18080 <rb_first_postorder@@Base+0xcda>)
   1800e:	add	r3, pc
   18010:	str	r3, [sp, #8]
   18012:	ldr	r3, [pc, #112]	; (18084 <rb_first_postorder@@Base+0xcde>)
   18014:	add	r2, pc
   18016:	str	r1, [sp, #12]
   18018:	add	r3, pc
   1801a:	str	r3, [sp, #4]
   1801c:	movw	r3, #1380	; 0x564
   18020:	str	r3, [sp, #0]
   18022:	ldr	r3, [pc, #100]	; (18088 <rb_first_postorder@@Base+0xce2>)
   18024:	ldr	r0, [r0, #0]
   18026:	add	r3, pc
   18028:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1802c:	bl	174dc <rb_first_postorder@@Base+0x136>
   18030:	blx	8e08 <abort@plt>
   18034:	ldr	r1, [pc, #84]	; (1808c <rb_first_postorder@@Base+0xce6>)
   18036:	add	r1, pc
   18038:	b.n	17fb6 <rb_first_postorder@@Base+0xc10>
   1803a:	add	sp, #328	; 0x148
   1803c:	pop	{r4, pc}
   1803e:	nop
   18040:	lsrs	r6, r1, #24
   18042:	movs	r5, r0
   18044:	lsls	r4, r7, #9
   18046:	movs	r0, r0
   18048:	lsrs	r0, r1, #24
   1804a:	movs	r5, r0
   1804c:	stmia	r2!, {r1, r2, r4, r5, r7}
   1804e:	movs	r2, r0
   18050:	lsrs	r2, r3, #23
   18052:	movs	r5, r0
   18054:	stmia	r2!, {r2, r4, r7}
   18056:	movs	r2, r0
   18058:	stmia	r2!, {r1, r3, r7}
   1805a:	movs	r2, r0
   1805c:	stmia	r2!, {r7}
   1805e:	movs	r2, r0
   18060:	stmia	r2!, {r1, r2, r4, r5, r6}
   18062:	movs	r2, r0
   18064:	ldrb	r5, [r4, #26]
   18066:	movs	r2, r0
   18068:	stmia	r5!, {r0, r1, r4, r5}
   1806a:	movs	r2, r0
   1806c:	str	r4, [r7, #92]	; 0x5c
   1806e:	movs	r2, r0
   18070:	str	r4, [r4, #92]	; 0x5c
   18072:	movs	r2, r0
   18074:	ldrb	r5, [r6, #25]
   18076:	movs	r2, r0
   18078:	lsls	r4, r1, #10
   1807a:	movs	r0, r0
   1807c:	ldrb	r1, [r2, #25]
   1807e:	movs	r2, r0
   18080:	ldr	r7, [pc, #588]	; (182d0 <btrfs_list_setup_filter@@Base+0xb0>)
   18082:	movs	r2, r0
   18084:	strh	r1, [r4, #2]
   18086:	movs	r2, r0
   18088:	ldrb	r2, [r3, #24]
   1808a:	movs	r2, r0
   1808c:	stmia	r4!, {r0, r4, r5, r7}
   1808e:	movs	r2, r0

00018090 <btrfs_list_setup_print_column@@Base>:
   18090:	cmp	r0, #10
   18092:	push	{r3, lr}
   18094:	bls.n	180a6 <btrfs_list_setup_print_column@@Base+0x16>
   18096:	ldr	r1, [pc, #56]	; (180d0 <btrfs_list_setup_print_column@@Base+0x40>)
   18098:	movs	r2, #126	; 0x7e
   1809a:	ldr	r0, [pc, #56]	; (180d4 <btrfs_list_setup_print_column@@Base+0x44>)
   1809c:	add	r1, pc
   1809e:	adds	r1, #23
   180a0:	add	r0, pc
   180a2:	bl	17edc <rb_first_postorder@@Base+0xb36>
   180a6:	beq.n	180b8 <btrfs_list_setup_print_column@@Base+0x28>
   180a8:	ldr	r3, [pc, #44]	; (180d8 <btrfs_list_setup_print_column@@Base+0x48>)
   180aa:	movs	r2, #12
   180ac:	add	r3, pc
   180ae:	mla	r0, r2, r0, r3
   180b2:	movs	r3, #1
   180b4:	str	r3, [r0, #8]
   180b6:	pop	{r3, pc}
   180b8:	ldr	r2, [pc, #32]	; (180dc <btrfs_list_setup_print_column@@Base+0x4c>)
   180ba:	movs	r3, #0
   180bc:	movs	r1, #1
   180be:	add	r2, pc
   180c0:	adds	r3, #1
   180c2:	str	r1, [r2, #8]
   180c4:	cmp	r3, #10
   180c6:	add.w	r2, r2, #12
   180ca:	bne.n	180c0 <btrfs_list_setup_print_column@@Base+0x30>
   180cc:	b.n	180b6 <btrfs_list_setup_print_column@@Base+0x26>
   180ce:	nop
   180d0:	ldrb	r5, [r3, #31]
   180d2:	movs	r2, r0
   180d4:	ldrb	r0, [r2, #23]
   180d6:	movs	r2, r0
   180d8:	movs	r0, #116	; 0x74
   180da:	movs	r5, r0
   180dc:	movs	r0, #98	; 0x62
   180de:	movs	r5, r0

000180e0 <btrfs_list_alloc_comparer_set@@Base>:
   180e0:	push	{r4, lr}
   180e2:	movs	r1, #72	; 0x48
   180e4:	ldr	r4, [pc, #36]	; (1810c <btrfs_list_alloc_comparer_set@@Base+0x2c>)
   180e6:	movs	r0, #1
   180e8:	add	r4, pc
   180ea:	blx	8718 <calloc@plt+0x4>
   180ee:	cbnz	r0, 18104 <btrfs_list_alloc_comparer_set@@Base+0x24>
   180f0:	ldr	r3, [pc, #28]	; (18110 <btrfs_list_alloc_comparer_set@@Base+0x30>)
   180f2:	ldr	r0, [pc, #32]	; (18114 <btrfs_list_alloc_comparer_set@@Base+0x34>)
   180f4:	ldr	r3, [r4, r3]
   180f6:	add	r0, pc
   180f8:	ldr	r1, [r3, #0]
   180fa:	blx	8de4 <fputs@plt+0x4>
   180fe:	movs	r0, #1
   18100:	blx	8b58 <exit@plt>
   18104:	movs	r2, #8
   18106:	str	r2, [r0, #0]
   18108:	pop	{r4, pc}
   1810a:	nop
   1810c:	lsrs	r0, r1, #17
   1810e:	movs	r5, r0
   18110:	lsls	r4, r1, #10
   18112:	movs	r0, r0
   18114:	ldrb	r1, [r3, #18]
   18116:	movs	r2, r0

00018118 <btrfs_list_get_default_subvolume@@Base>:
   18118:	push	{r4, r5, r6, r7, lr}
   1811a:	mov	r5, r1
   1811c:	ldr	r1, [pc, #184]	; (181d8 <btrfs_list_get_default_subvolume@@Base+0xc0>)
   1811e:	sub.w	sp, sp, #4096	; 0x1000
   18122:	ldr	r2, [pc, #184]	; (181dc <btrfs_list_get_default_subvolume@@Base+0xc4>)
   18124:	sub	sp, #12
   18126:	add	r1, pc
   18128:	add.w	r3, sp, #4096	; 0x1000
   1812c:	add	r7, sp, #8
   1812e:	adds	r3, #4
   18130:	ldr	r2, [r1, r2]
   18132:	mov	r4, sp
   18134:	mov	r6, r0
   18136:	mov	r0, r4
   18138:	ldr	r2, [r2, #0]
   1813a:	str	r2, [r3, #0]
   1813c:	mov.w	r2, #0
   18140:	movs	r1, #0
   18142:	mov.w	r2, #4096	; 0x1000
   18146:	blx	8bf8 <memset@plt+0x4>
   1814a:	movs	r2, #1
   1814c:	movs	r3, #0
   1814e:	ldr	r1, [pc, #132]	; (181d4 <btrfs_list_get_default_subvolume@@Base+0xbc>)
   18150:	strd	r2, r3, [r7, #-8]
   18154:	mov	r0, r6
   18156:	movs	r2, #6
   18158:	movs	r3, #1
   1815a:	str	r3, [r7, #56]	; 0x38
   1815c:	movs	r3, #0
   1815e:	strd	r2, r3, [r7, #8]
   18162:	strd	r2, r3, [r4, #8]
   18166:	mov.w	r2, #4294967295	; 0xffffffff
   1816a:	movs	r3, #84	; 0x54
   1816c:	strd	r3, r3, [r7, #48]	; 0x30
   18170:	mov.w	r3, #4294967295	; 0xffffffff
   18174:	strd	r2, r3, [r7, #24]
   18178:	strd	r2, r3, [r7, #40]	; 0x28
   1817c:	mov	r2, r4
   1817e:	blx	89cc <ioctl@plt>
   18182:	cmp	r0, #0
   18184:	blt.n	181ac <btrfs_list_get_default_subvolume@@Base+0x94>
   18186:	ldr	r3, [r7, #56]	; 0x38
   18188:	cbz	r3, 181c6 <btrfs_list_get_default_subvolume@@Base+0xae>
   1818a:	ldr	r3, [r7, #120]	; 0x78
   1818c:	cmp	r3, #84	; 0x54
   1818e:	bne.n	181c6 <btrfs_list_get_default_subvolume@@Base+0xae>
   18190:	ldr	r0, [pc, #76]	; (181e0 <btrfs_list_get_default_subvolume@@Base+0xc8>)
   18192:	add.w	r1, sp, #166	; 0xa6
   18196:	ldrh.w	r2, [r7, #155]	; 0x9b
   1819a:	add	r0, pc
   1819c:	blx	8df0 <strncmp@plt>
   181a0:	cbnz	r0, 181c6 <btrfs_list_get_default_subvolume@@Base+0xae>
   181a2:	ldrd	r2, r3, [r7, #128]	; 0x80
   181a6:	movs	r0, #0
   181a8:	strd	r2, r3, [r5]
   181ac:	ldr	r1, [pc, #52]	; (181e4 <btrfs_list_get_default_subvolume@@Base+0xcc>)
   181ae:	add.w	r3, sp, #4096	; 0x1000
   181b2:	ldr	r2, [pc, #40]	; (181dc <btrfs_list_get_default_subvolume@@Base+0xc4>)
   181b4:	adds	r3, #4
   181b6:	add	r1, pc
   181b8:	ldr	r2, [r1, r2]
   181ba:	ldr	r1, [r2, #0]
   181bc:	ldr	r2, [r3, #0]
   181be:	eors	r1, r2
   181c0:	beq.n	181cc <btrfs_list_get_default_subvolume@@Base+0xb4>
   181c2:	blx	88e4 <__stack_chk_fail@plt>
   181c6:	movs	r2, #0
   181c8:	movs	r3, #0
   181ca:	b.n	181a6 <btrfs_list_get_default_subvolume@@Base+0x8e>
   181cc:	add.w	sp, sp, #4096	; 0x1000
   181d0:	add	sp, #12
   181d2:	pop	{r4, r5, r6, r7, pc}
   181d4:	str	r4, [sp, #68]	; 0x44
   181d6:	beq.n	181da <btrfs_list_get_default_subvolume@@Base+0xc2>
   181d8:	lsrs	r2, r1, #16
   181da:	movs	r5, r0
   181dc:	lsls	r4, r7, #9
   181de:	movs	r0, r0
   181e0:	ldrb	r6, [r7, #19]
   181e2:	movs	r2, r0
   181e4:	lsrs	r2, r7, #13
   181e6:	movs	r5, r0

000181e8 <btrfs_list_alloc_filter_set@@Base>:
   181e8:	push	{r4, lr}
   181ea:	mov.w	r1, #432	; 0x1b0
   181ee:	ldr	r4, [pc, #36]	; (18214 <btrfs_list_alloc_filter_set@@Base+0x2c>)
   181f0:	movs	r0, #1
   181f2:	add	r4, pc
   181f4:	blx	8718 <calloc@plt+0x4>
   181f8:	cbnz	r0, 1820e <btrfs_list_alloc_filter_set@@Base+0x26>
   181fa:	ldr	r3, [pc, #28]	; (18218 <btrfs_list_alloc_filter_set@@Base+0x30>)
   181fc:	ldr	r0, [pc, #28]	; (1821c <btrfs_list_alloc_filter_set@@Base+0x34>)
   181fe:	ldr	r3, [r4, r3]
   18200:	add	r0, pc
   18202:	ldr	r1, [r3, #0]
   18204:	blx	8de4 <fputs@plt+0x4>
   18208:	movs	r0, #1
   1820a:	blx	8b58 <exit@plt>
   1820e:	movs	r2, #26
   18210:	str	r2, [r0, #0]
   18212:	pop	{r4, pc}
   18214:	lsrs	r6, r7, #12
   18216:	movs	r5, r0
   18218:	lsls	r4, r1, #10
   1821a:	movs	r0, r0
   1821c:	ldrb	r7, [r1, #14]
   1821e:	movs	r2, r0

00018220 <btrfs_list_setup_filter@@Base>:
   18220:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18224:	mov	r9, r0
   18226:	ldr	r4, [r0, #0]
   18228:	mov	r6, r1
   1822a:	ldr.w	sl, [pc, #208]	; 182fc <btrfs_list_setup_filter@@Base+0xdc>
   1822e:	mov	r8, r2
   18230:	mov	r7, r3
   18232:	add	sl, pc
   18234:	cbnz	r4, 18248 <btrfs_list_setup_filter@@Base+0x28>
   18236:	ldr	r1, [pc, #200]	; (18300 <btrfs_list_setup_filter@@Base+0xe0>)
   18238:	movw	r2, #1210	; 0x4ba
   1823c:	ldr	r0, [pc, #196]	; (18304 <btrfs_list_setup_filter@@Base+0xe4>)
   1823e:	add	r1, pc
   18240:	adds	r1, #53	; 0x35
   18242:	add	r0, pc
   18244:	bl	17edc <rb_first_postorder@@Base+0xb36>
   18248:	cmp	r1, #12
   1824a:	bls.n	1825c <btrfs_list_setup_filter@@Base+0x3c>
   1824c:	ldr	r1, [pc, #184]	; (18308 <btrfs_list_setup_filter@@Base+0xe8>)
   1824e:	movw	r2, #1211	; 0x4bb
   18252:	ldr	r0, [pc, #184]	; (1830c <btrfs_list_setup_filter@@Base+0xec>)
   18254:	add	r1, pc
   18256:	adds	r1, #53	; 0x35
   18258:	add	r0, pc
   1825a:	b.n	18244 <btrfs_list_setup_filter@@Base+0x24>
   1825c:	ldrd	r3, r1, [r4]
   18260:	cmp	r1, r3
   18262:	ble.n	18274 <btrfs_list_setup_filter@@Base+0x54>
   18264:	ldr	r1, [pc, #168]	; (18310 <btrfs_list_setup_filter@@Base+0xf0>)
   18266:	movw	r2, #1212	; 0x4bc
   1826a:	ldr	r0, [pc, #168]	; (18314 <btrfs_list_setup_filter@@Base+0xf4>)
   1826c:	add	r1, pc
   1826e:	adds	r1, #53	; 0x35
   18270:	add	r0, pc
   18272:	b.n	18244 <btrfs_list_setup_filter@@Base+0x24>
   18274:	bne.n	182be <btrfs_list_setup_filter@@Base+0x9e>
   18276:	adds	r1, #27
   18278:	mov	r0, r4
   1827a:	lsls	r1, r1, #4
   1827c:	blx	8924 <realloc@plt+0x4>
   18280:	mov	r5, r0
   18282:	cbnz	r0, 182a0 <btrfs_list_setup_filter@@Base+0x80>
   18284:	ldr	r3, [pc, #144]	; (18318 <btrfs_list_setup_filter@@Base+0xf8>)
   18286:	ldr	r0, [pc, #148]	; (1831c <btrfs_list_setup_filter@@Base+0xfc>)
   18288:	ldr.w	r3, [sl, r3]
   1828c:	add	r0, pc
   1828e:	ldr	r1, [r3, #0]
   18290:	blx	8de4 <fputs@plt+0x4>
   18294:	mov	r0, r4
   18296:	blx	87cc <free@plt+0x4>
   1829a:	movs	r0, #1
   1829c:	blx	8b58 <exit@plt>
   182a0:	ldr	r0, [r0, #0]
   182a2:	mov.w	r2, #416	; 0x1a0
   182a6:	movs	r1, #0
   182a8:	mov	r4, r5
   182aa:	adds	r0, #1
   182ac:	add.w	r0, r5, r0, lsl #4
   182b0:	blx	8bf8 <memset@plt+0x4>
   182b4:	ldr	r3, [r5, #0]
   182b6:	adds	r3, #26
   182b8:	str	r3, [r5, #0]
   182ba:	str.w	r5, [r9]
   182be:	ldr	r0, [r4, #4]
   182c0:	add.w	r3, r4, r0, lsl #4
   182c4:	lsls	r1, r0, #4
   182c6:	ldr	r2, [r3, #16]
   182c8:	cbz	r2, 182da <btrfs_list_setup_filter@@Base+0xba>
   182ca:	ldr	r1, [pc, #84]	; (18320 <btrfs_list_setup_filter@@Base+0x100>)
   182cc:	movw	r2, #1234	; 0x4d2
   182d0:	ldr	r0, [pc, #80]	; (18324 <btrfs_list_setup_filter@@Base+0x104>)
   182d2:	add	r1, pc
   182d4:	adds	r1, #53	; 0x35
   182d6:	add	r0, pc
   182d8:	b.n	18244 <btrfs_list_setup_filter@@Base+0x24>
   182da:	cmp	r6, #12
   182dc:	add	r1, r4
   182de:	add.w	r0, r0, #1
   182e2:	itt	eq
   182e4:	moveq	r2, #1
   182e6:	streq	r2, [r4, #8]
   182e8:	ldr	r2, [pc, #60]	; (18328 <btrfs_list_setup_filter@@Base+0x108>)
   182ea:	add	r2, pc
   182ec:	ldr.w	r2, [r2, r6, lsl #2]
   182f0:	str	r2, [r3, #16]
   182f2:	strd	r8, r7, [r1, #24]
   182f6:	str	r0, [r4, #4]
   182f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   182fc:	lsrs	r6, r7, #11
   182fe:	movs	r5, r0
   18300:	ldrb	r3, [r7, #24]
   18302:	movs	r2, r0
   18304:	str	r4, [r5, #36]	; 0x24
   18306:	movs	r2, r0
   18308:	ldrb	r5, [r4, #24]
   1830a:	movs	r2, r0
   1830c:	ldrb	r0, [r1, #17]
   1830e:	movs	r2, r0
   18310:	ldrb	r5, [r1, #24]
   18312:	movs	r2, r0
   18314:	str	r0, [r2, #44]	; 0x2c
   18316:	movs	r2, r0
   18318:	lsls	r4, r1, #10
   1831a:	movs	r0, r0
   1831c:	ldrb	r3, [r0, #12]
   1831e:	movs	r2, r0
   18320:	ldrb	r7, [r4, #22]
   18322:	movs	r2, r0
   18324:	str	r6, [r0, #40]	; 0x28
   18326:	movs	r2, r0
   18328:	lsls	r2, r2, #17
   1832a:	movs	r5, r0

0001832c <btrfs_list_find_updated_files@@Base>:
   1832c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18330:	mov	r7, r2
   18332:	vpush	{d8-d9}
   18336:	mov	r6, r3
   18338:	ldr	r1, [pc, #904]	; (186c4 <btrfs_list_find_updated_files@@Base+0x398>)
   1833a:	mov.w	r9, #4096	; 0x1000
   1833e:	ldr	r2, [pc, #904]	; (186c8 <btrfs_list_find_updated_files@@Base+0x39c>)
   18340:	add	r1, pc
   18342:	vmov	s16, r0
   18346:	sub.w	sp, sp, #12480	; 0x30c0
   1834a:	sub	sp, #20
   1834c:	ldr	r2, [r1, r2]
   1834e:	add.w	r3, sp, #12480	; 0x30c0
   18352:	add.w	r8, sp, #200	; 0xc8
   18356:	ldr	r2, [r2, #0]
   18358:	str	r2, [r3, #12]
   1835a:	mov.w	r2, #0
   1835e:	adds	r3, #12
   18360:	add	r3, sp, #144	; 0x90
   18362:	movs	r2, #53	; 0x35
   18364:	movs	r1, #0
   18366:	str	r3, [sp, #40]	; 0x28
   18368:	mov	r0, r3
   1836a:	add	r4, sp, #208	; 0xd0
   1836c:	blx	8bf8 <memset@plt+0x4>
   18370:	mov	r2, r9
   18372:	movs	r1, #0
   18374:	mov	r0, r8
   18376:	blx	8bf8 <memset@plt+0x4>
   1837a:	movs	r3, #108	; 0x6c
   1837c:	str.w	r3, [r8, #60]	; 0x3c
   18380:	add.w	r3, sp, #12544	; 0x3100
   18384:	adds	r3, #8
   18386:	add.w	r5, sp, #4288	; 0x10c0
   1838a:	adds	r5, #16
   1838c:	strd	r7, r6, [r4, #-8]
   18390:	sub.w	fp, r5, #8
   18394:	ldrd	r3, r4, [r3]
   18398:	mov	r2, r9
   1839a:	movs	r1, #0
   1839c:	mov	r0, fp
   1839e:	mov.w	r6, #4294967295	; 0xffffffff
   183a2:	mov.w	r7, #4294967295	; 0xffffffff
   183a6:	strd	r3, r4, [r8, #40]	; 0x28
   183aa:	strd	r6, r7, [r8, #16]
   183ae:	movs	r4, #0
   183b0:	strd	r6, r7, [r8, #32]
   183b4:	strd	r6, r7, [r8, #48]	; 0x30
   183b8:	str.w	r9, [r8, #64]	; 0x40
   183bc:	blx	8bf8 <memset@plt+0x4>
   183c0:	vmov	r0, s16
   183c4:	mov	r2, fp
   183c6:	ldr	r1, [pc, #756]	; (186bc <btrfs_list_find_updated_files@@Base+0x390>)
   183c8:	mov.w	r3, #256	; 0x100
   183cc:	strd	r3, r4, [fp, #8]
   183d0:	blx	89cc <ioctl@plt>
   183d4:	movs	r4, #0
   183d6:	mov.w	r3, #256	; 0x100
   183da:	cmp	r0, #0
   183dc:	bge.n	1845e <btrfs_list_find_updated_files@@Base+0x132>
   183de:	ldr	r0, [pc, #748]	; (186cc <btrfs_list_find_updated_files@@Base+0x3a0>)
   183e0:	mov	r2, r3
   183e2:	mov	r3, r4
   183e4:	add	r0, pc
   183e6:	bl	1a900 <__btrfs_error@@Base>
   183ea:	movs	r3, #0
   183ec:	movs	r4, #0
   183ee:	strd	r3, r4, [sp, #56]	; 0x38
   183f2:	movs	r3, #0
   183f4:	movs	r2, #0
   183f6:	strd	r2, r3, [sp, #72]	; 0x48
   183fa:	movs	r4, #0
   183fc:	strd	r2, r3, [sp, #88]	; 0x58
   18400:	mov	r7, r4
   18402:	ldr	r3, [pc, #716]	; (186d0 <btrfs_list_find_updated_files@@Base+0x3a4>)
   18404:	add	r3, pc
   18406:	vmov	s18, r3
   1840a:	vmov	r0, s16
   1840e:	mov	r2, r8
   18410:	ldr	r1, [pc, #684]	; (186c0 <btrfs_list_find_updated_files@@Base+0x394>)
   18412:	blx	89cc <ioctl@plt>
   18416:	subs	r3, r0, #0
   18418:	vmov	s17, r3
   1841c:	bge.w	1858c <btrfs_list_find_updated_files@@Base+0x260>
   18420:	ldr	r0, [pc, #688]	; (186d4 <btrfs_list_find_updated_files@@Base+0x3a8>)
   18422:	add	r0, pc
   18424:	bl	1a900 <__btrfs_error@@Base>
   18428:	mov	r0, r7
   1842a:	blx	87cc <free@plt+0x4>
   1842e:	mov	r0, r4
   18430:	blx	87cc <free@plt+0x4>
   18434:	ldr	r1, [pc, #672]	; (186d8 <btrfs_list_find_updated_files@@Base+0x3ac>)
   18436:	ldrd	r2, r3, [sp, #56]	; 0x38
   1843a:	movs	r0, #1
   1843c:	add	r1, pc
   1843e:	blx	8c6c <__printf_chk@plt+0x4>
   18442:	ldr	r1, [pc, #664]	; (186dc <btrfs_list_find_updated_files@@Base+0x3b0>)
   18444:	ldr	r2, [pc, #640]	; (186c8 <btrfs_list_find_updated_files@@Base+0x39c>)
   18446:	add.w	r3, sp, #12480	; 0x30c0
   1844a:	add	r1, pc
   1844c:	adds	r3, #12
   1844e:	ldr	r2, [r1, r2]
   18450:	ldr	r1, [r2, #0]
   18452:	ldr	r2, [r3, #0]
   18454:	eors	r1, r2
   18456:	beq.w	18936 <btrfs_list_find_updated_files@@Base+0x60a>
   1845a:	blx	88e4 <__stack_chk_fail@plt>
   1845e:	add.w	sl, sp, #8384	; 0x20c0
   18462:	mov	r2, r9
   18464:	add.w	sl, sl, #16
   18468:	movs	r1, #0
   1846a:	sub.w	r4, sl, #8
   1846e:	mov	r0, r4
   18470:	blx	8bf8 <memset@plt+0x4>
   18474:	ldrd	r2, r3, [r5, #-8]
   18478:	movs	r0, #1
   1847a:	movs	r1, #0
   1847c:	strd	r0, r1, [sl, #-8]
   18480:	strd	r2, r3, [r4, #8]
   18484:	strd	r2, r3, [r4, #16]
   18488:	movs	r3, #132	; 0x84
   1848a:	movs	r2, #0
   1848c:	strd	r3, r3, [r4, #56]	; 0x38
   18490:	movs	r3, #0
   18492:	strd	r2, r3, [sp, #56]	; 0x38
   18496:	ldr	r3, [sp, #40]	; 0x28
   18498:	strd	r6, r7, [r4, #32]
   1849c:	sub.w	r5, r3, #32
   184a0:	strd	r6, r7, [r4, #48]	; 0x30
   184a4:	str.w	r9, [r4, #64]	; 0x40
   184a8:	vmov	r0, s16
   184ac:	mov	r2, r4
   184ae:	ldr	r1, [pc, #528]	; (186c0 <btrfs_list_find_updated_files@@Base+0x394>)
   184b0:	blx	89cc <ioctl@plt>
   184b4:	cmp	r0, #0
   184b6:	bge.n	184c2 <btrfs_list_find_updated_files@@Base+0x196>
   184b8:	ldr	r0, [pc, #548]	; (186e0 <btrfs_list_find_updated_files@@Base+0x3b4>)
   184ba:	add	r0, pc
   184bc:	bl	1a900 <__btrfs_error@@Base>
   184c0:	b.n	183ea <btrfs_list_find_updated_files@@Base+0xbe>
   184c2:	ldr.w	ip, [r4, #64]	; 0x40
   184c6:	cmp.w	ip, #0
   184ca:	beq.n	183f2 <btrfs_list_find_updated_files@@Base+0xc6>
   184cc:	movs	r7, #0
   184ce:	add.w	r3, sl, #96	; 0x60
   184d2:	mov	r6, r7
   184d4:	str	r3, [sp, #40]	; 0x28
   184d6:	add.w	r3, sp, #8448	; 0x2100
   184da:	adds	r3, #48	; 0x30
   184dc:	str	r3, [sp, #48]	; 0x30
   184de:	ldr	r3, [sp, #40]	; 0x28
   184e0:	mov	lr, r5
   184e2:	add	r3, r6
   184e4:	add.w	r9, r3, #32
   184e8:	ldr	r0, [r3, #0]
   184ea:	adds	r3, #8
   184ec:	ldr.w	r1, [r3, #-4]
   184f0:	cmp	r3, r9
   184f2:	mov	r2, lr
   184f4:	stmia	r2!, {r0, r1}
   184f6:	mov	lr, r2
   184f8:	bne.n	184e8 <btrfs_list_find_updated_files@@Base+0x1bc>
   184fa:	ldrd	r0, r1, [r5, #16]
   184fe:	add.w	lr, r6, #32
   18502:	ldrd	r2, r3, [r5, #8]
   18506:	ldr.w	r9, [r5, #24]
   1850a:	strd	r0, r1, [r4, #24]
   1850e:	ldrd	r0, r1, [fp]
   18512:	ldr	r6, [r5, #28]
   18514:	cmp	r1, r3
   18516:	strd	r2, r3, [r4, #8]
   1851a:	it	eq
   1851c:	cmpeq	r0, r2
   1851e:	add	r6, lr
   18520:	str.w	r9, [r4, #56]	; 0x38
   18524:	bcs.n	1855a <btrfs_list_find_updated_files@@Base+0x22e>
   18526:	ldrd	r0, r1, [r4, #24]
   1852a:	adds	r6, r1, #1
   1852c:	it	eq
   1852e:	cmpeq.w	r0, #4294967295	; 0xffffffff
   18532:	beq.w	183f2 <btrfs_list_find_updated_files@@Base+0xc6>
   18536:	adds	r2, r0, #1
   18538:	adc.w	r3, r1, #0
   1853c:	strd	r2, r3, [r4, #24]
   18540:	ldr	r3, [r4, #56]	; 0x38
   18542:	cmp	r3, #132	; 0x84
   18544:	bne.w	183f2 <btrfs_list_find_updated_files@@Base+0xc6>
   18548:	ldrd	r0, r1, [r4, #8]
   1854c:	ldrd	r2, r3, [fp]
   18550:	cmp	r1, r3
   18552:	it	eq
   18554:	cmpeq	r0, r2
   18556:	beq.n	184a8 <btrfs_list_find_updated_files@@Base+0x17c>
   18558:	b.n	183f2 <btrfs_list_find_updated_files@@Base+0xc6>
   1855a:	cmp	r3, r1
   1855c:	it	eq
   1855e:	cmpeq	r2, r0
   18560:	bne.n	18584 <btrfs_list_find_updated_files@@Base+0x258>
   18562:	cmp.w	r9, #132	; 0x84
   18566:	bne.n	18584 <btrfs_list_find_updated_files@@Base+0x258>
   18568:	ldr	r3, [sp, #48]	; 0x30
   1856a:	ldrd	r0, r1, [sp, #56]	; 0x38
   1856e:	add	lr, r3
   18570:	ldr.w	r2, [lr, #160]	; 0xa0
   18574:	ldr.w	r3, [lr, #164]	; 0xa4
   18578:	cmp	r1, r3
   1857a:	it	eq
   1857c:	cmpeq	r0, r2
   1857e:	it	cc
   18580:	strdcc	r2, r3, [sp, #56]	; 0x38
   18584:	adds	r7, #1
   18586:	cmp	r7, ip
   18588:	bne.n	184de <btrfs_list_find_updated_files@@Base+0x1b2>
   1858a:	b.n	18526 <btrfs_list_find_updated_files@@Base+0x1fa>
   1858c:	ldr.w	r3, [r8, #64]	; 0x40
   18590:	cmp	r3, #0
   18592:	beq.w	18428 <btrfs_list_find_updated_files@@Base+0xfc>
   18596:	movs	r3, #0
   18598:	str	r3, [sp, #84]	; 0x54
   1859a:	mov	r5, r3
   1859c:	add	r3, sp, #304	; 0x130
   1859e:	str	r3, [sp, #108]	; 0x6c
   185a0:	ldr.w	r3, [r8, #64]	; 0x40
   185a4:	ldr	r2, [sp, #84]	; 0x54
   185a6:	cmp	r3, r2
   185a8:	bhi.n	185ce <btrfs_list_find_updated_files@@Base+0x2a2>
   185aa:	ldrd	r0, r1, [r8, #24]
   185ae:	mov.w	r3, #4096	; 0x1000
   185b2:	str.w	r3, [r8, #64]	; 0x40
   185b6:	adds	r2, r1, #1
   185b8:	it	eq
   185ba:	cmpeq.w	r0, #4294967295	; 0xffffffff
   185be:	beq.w	188e4 <btrfs_list_find_updated_files@@Base+0x5b8>
   185c2:	adds	r2, r0, #1
   185c4:	adc.w	r3, r1, #0
   185c8:	strd	r2, r3, [r8, #24]
   185cc:	b.n	1840a <btrfs_list_find_updated_files@@Base+0xde>
   185ce:	ldr	r3, [sp, #108]	; 0x6c
   185d0:	add.w	sl, sp, #112	; 0x70
   185d4:	add	r3, r5
   185d6:	mov	r6, sl
   185d8:	add.w	ip, r3, #32
   185dc:	ldr	r0, [r3, #0]
   185de:	adds	r3, #8
   185e0:	ldr.w	r1, [r3, #-4]
   185e4:	cmp	r3, ip
   185e6:	mov	r2, r6
   185e8:	stmia	r2!, {r0, r1}
   185ea:	mov	r6, r2
   185ec:	bne.n	185dc <btrfs_list_find_updated_files@@Base+0x2b0>
   185ee:	add.w	r3, r5, #32
   185f2:	str	r3, [sp, #104]	; 0x68
   185f4:	ldr.w	r3, [sl, #28]
   185f8:	str	r3, [sp, #96]	; 0x60
   185fa:	cmp	r3, #0
   185fc:	beq.n	186ac <btrfs_list_find_updated_files@@Base+0x380>
   185fe:	ldrd	r2, r3, [sp, #104]	; 0x68
   18602:	adds	r5, r3, r2
   18604:	ldr.w	r3, [sl, #24]
   18608:	str	r3, [sp, #100]	; 0x64
   1860a:	ldrd	r2, r3, [sl, #8]
   1860e:	strd	r2, r3, [sp, #40]	; 0x28
   18612:	ldr	r3, [sp, #100]	; 0x64
   18614:	cmp	r3, #108	; 0x6c
   18616:	bne.w	188a6 <btrfs_list_find_updated_files@@Base+0x57a>
   1861a:	ldr	r3, [r5, #0]
   1861c:	add.w	r1, sp, #12544	; 0x3100
   18620:	adds	r1, #8
   18622:	str	r3, [sp, #48]	; 0x30
   18624:	ldr	r3, [r5, #4]
   18626:	ldrd	r0, r1, [r1]
   1862a:	str	r3, [sp, #52]	; 0x34
   1862c:	ldrd	r2, r3, [sp, #48]	; 0x30
   18630:	cmp	r3, r1
   18632:	it	eq
   18634:	cmpeq	r2, r0
   18636:	bcc.w	188a6 <btrfs_list_find_updated_files@@Base+0x57a>
   1863a:	ldrd	r2, r3, [sp, #72]	; 0x48
   1863e:	ldrd	r0, r1, [sp, #40]	; 0x28
   18642:	cmp	r3, r1
   18644:	it	eq
   18646:	cmpeq	r2, r0
   18648:	bne.n	186b0 <btrfs_list_find_updated_files@@Base+0x384>
   1864a:	cmp	r4, #0
   1864c:	bne.w	187c2 <btrfs_list_find_updated_files@@Base+0x496>
   18650:	mov.w	r2, #4096	; 0x1000
   18654:	movs	r1, #0
   18656:	mov	r0, fp
   18658:	blx	8bf8 <memset@plt+0x4>
   1865c:	ldrd	r3, r4, [sp, #40]	; 0x28
   18660:	movs	r1, #12
   18662:	mov.w	r2, #4294967295	; 0xffffffff
   18666:	str.w	r1, [fp, #60]	; 0x3c
   1866a:	strd	r3, r4, [fp, #8]
   1866e:	strd	r3, r4, [fp, #16]
   18672:	mov.w	r3, #4294967295	; 0xffffffff
   18676:	str.w	r1, [fp, #56]	; 0x38
   1867a:	strd	r2, r3, [fp, #32]
   1867e:	strd	r2, r3, [fp, #48]	; 0x30
   18682:	movs	r3, #1
   18684:	vmov	r0, s16
   18688:	mov	r2, fp
   1868a:	ldr	r1, [pc, #52]	; (186c0 <btrfs_list_find_updated_files@@Base+0x394>)
   1868c:	str.w	r3, [fp, #64]	; 0x40
   18690:	blx	89cc <ioctl@plt>
   18694:	cmp	r0, #0
   18696:	bge.n	186e8 <btrfs_list_find_updated_files@@Base+0x3bc>
   18698:	ldr	r0, [pc, #72]	; (186e4 <btrfs_list_find_updated_files@@Base+0x3b8>)
   1869a:	add	r0, pc
   1869c:	bl	1a900 <__btrfs_error@@Base>
   186a0:	ldrd	r3, r4, [sp, #40]	; 0x28
   186a4:	strd	r3, r4, [sp, #72]	; 0x48
   186a8:	movs	r4, #0
   186aa:	b.n	188a6 <btrfs_list_find_updated_files@@Base+0x57a>
   186ac:	add	r5, sp, #144	; 0x90
   186ae:	b.n	18604 <btrfs_list_find_updated_files@@Base+0x2d8>
   186b0:	cmp	r4, #0
   186b2:	beq.n	18650 <btrfs_list_find_updated_files@@Base+0x324>
   186b4:	mov	r0, r4
   186b6:	blx	87cc <free@plt+0x4>
   186ba:	b.n	18650 <btrfs_list_find_updated_files@@Base+0x324>
   186bc:	str	r4, [sp, #72]	; 0x48
   186be:	beq.n	186c2 <btrfs_list_find_updated_files@@Base+0x396>
   186c0:	str	r4, [sp, #68]	; 0x44
   186c2:	beq.n	186c6 <btrfs_list_find_updated_files@@Base+0x39a>
   186c4:	lsrs	r0, r6, #7
   186c6:	movs	r5, r0
   186c8:	lsls	r4, r7, #9
   186ca:	movs	r0, r0
   186cc:	ldrb	r5, [r3, #11]
   186ce:	movs	r2, r0
   186d0:	ldrb	r0, [r5, #12]
   186d2:	movs	r2, r0
   186d4:	ldrb	r1, [r0, #8]
   186d6:	movs	r2, r0
   186d8:	ldrb	r2, [r3, #13]
   186da:	movs	r2, r0
   186dc:	lsrs	r6, r4, #3
   186de:	movs	r5, r0
   186e0:	ldrb	r1, [r5, #5]
   186e2:	movs	r2, r0
   186e4:	strb	r1, [r1, #30]
   186e6:	movs	r2, r0
   186e8:	ldr.w	r3, [fp, #64]	; 0x40
   186ec:	cmp	r3, #0
   186ee:	beq.n	186a0 <btrfs_list_find_updated_files@@Base+0x374>
   186f0:	ldr.w	r3, [fp, #128]	; 0x80
   186f4:	cmp	r3, #12
   186f6:	bne.n	186a0 <btrfs_list_find_updated_files@@Base+0x374>
   186f8:	ldrd	r3, r4, [fp, #120]	; 0x78
   186fc:	add.w	r0, sp, #4288	; 0x10c0
   18700:	adds	r0, #16
   18702:	ldrh.w	r1, [fp, #144]	; 0x90
   18706:	adds	r0, #138	; 0x8a
   18708:	strd	r3, r4, [sp, #64]	; 0x40
   1870c:	blx	8814 <strndup@plt>
   18710:	ldrd	r3, r4, [sp, #64]	; 0x40
   18714:	ldrd	r1, r2, [sp, #88]	; 0x58
   18718:	cmp	r4, r2
   1871a:	it	eq
   1871c:	cmpeq	r3, r1
   1871e:	mov	r6, r0
   18720:	bne.n	18728 <btrfs_list_find_updated_files@@Base+0x3fc>
   18722:	cmp	r7, #0
   18724:	bne.w	1886a <btrfs_list_find_updated_files@@Base+0x53e>
   18728:	add.w	r4, sp, #8384	; 0x20c0
   1872c:	mov.w	r2, #4096	; 0x1000
   18730:	adds	r4, #8
   18732:	movs	r1, #0
   18734:	mov	r0, r4
   18736:	blx	8bf8 <memset@plt+0x4>
   1873a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1873e:	vmov	r0, s16
   18742:	ldr	r1, [pc, #516]	; (18948 <btrfs_list_find_updated_files@@Base+0x61c>)
   18744:	strd	r2, r3, [r4, #8]
   18748:	mov	r2, r4
   1874a:	blx	89cc <ioctl@plt>
   1874e:	subs.w	r9, r0, #0
   18752:	bge.n	18798 <btrfs_list_find_updated_files@@Base+0x46c>
   18754:	ldr	r0, [pc, #500]	; (1894c <btrfs_list_find_updated_files@@Base+0x620>)
   18756:	ldrd	r2, r3, [sp, #64]	; 0x40
   1875a:	add	r0, pc
   1875c:	bl	1a900 <__btrfs_error@@Base>
   18760:	mov	r0, r9
   18762:	blx	8b70 <strlen@plt>
   18766:	mov	r4, r0
   18768:	mov	r0, r6
   1876a:	blx	8b70 <strlen@plt>
   1876e:	add	r0, r4
   18770:	adds	r0, #1
   18772:	blx	8a94 <malloc@plt+0x4>
   18776:	mov	r4, r0
   18778:	cbz	r0, 18788 <btrfs_list_find_updated_files@@Base+0x45c>
   1877a:	mov	r1, r9
   1877c:	blx	8a08 <strcpy@plt>
   18780:	mov	r1, r6
   18782:	mov	r0, r4
   18784:	blx	89c0 <strcat@plt+0x4>
   18788:	cbz	r7, 18794 <btrfs_list_find_updated_files@@Base+0x468>
   1878a:	cmp	r9, r7
   1878c:	beq.n	187ae <btrfs_list_find_updated_files@@Base+0x482>
   1878e:	mov	r0, r7
   18790:	blx	87cc <free@plt+0x4>
   18794:	mov	r7, r9
   18796:	b.n	187ae <btrfs_list_find_updated_files@@Base+0x482>
   18798:	ldrb.w	r9, [r4, #16]
   1879c:	cmp.w	r9, #0
   187a0:	bne.n	1884c <btrfs_list_find_updated_files@@Base+0x520>
   187a2:	mov	r0, r6
   187a4:	blx	88cc <strdup@plt+0x4>
   187a8:	mov	r4, r0
   187aa:	cmp	r7, #0
   187ac:	bne.n	1878e <btrfs_list_find_updated_files@@Base+0x462>
   187ae:	mov	r0, r6
   187b0:	blx	87cc <free@plt+0x4>
   187b4:	cmp	r4, #0
   187b6:	beq.w	188d2 <btrfs_list_find_updated_files@@Base+0x5a6>
   187ba:	ldrd	r2, r3, [sp, #64]	; 0x40
   187be:	strd	r2, r3, [sp, #88]	; 0x58
   187c2:	ldrd	r2, r3, [sl, #16]
   187c6:	ldrb	r6, [r5, #20]
   187c8:	ldrb.w	r9, [r5, #16]
   187cc:	strd	r2, r3, [sp, #64]	; 0x40
   187d0:	subs	r3, r6, #1
   187d2:	cmp	r3, #1
   187d4:	bhi.n	1886e <btrfs_list_find_updated_files@@Base+0x542>
   187d6:	ldr.w	r3, [r5, #45]	; 0x2d
   187da:	ldr.w	r0, [r5, #21]
   187de:	ldr.w	r1, [r5, #25]
   187e2:	ldr.w	lr, [r5, #37]	; 0x25
   187e6:	ldr.w	ip, [r5, #41]	; 0x29
   187ea:	str	r3, [sp, #72]	; 0x48
   187ec:	ldr.w	r5, [r5, #49]	; 0x31
   187f0:	ldrd	r2, r3, [sp, #48]	; 0x30
   187f4:	strd	r0, r1, [sp, #16]
   187f8:	movs	r0, #1
   187fa:	vmov	r1, s18
   187fe:	strd	r2, r3, [sp, #32]
   18802:	ldr	r3, [sp, #72]	; 0x48
   18804:	strd	lr, ip, [sp, #24]
   18808:	strd	r3, r5, [sp, #8]
   1880c:	ldrd	r2, r3, [sp, #64]	; 0x40
   18810:	strd	r2, r3, [sp]
   18814:	ldrd	r2, r3, [sp, #40]	; 0x28
   18818:	blx	8c6c <__printf_chk@plt+0x4>
   1881c:	cmp.w	r9, #0
   18820:	beq.n	1890e <btrfs_list_find_updated_files@@Base+0x5e2>
   18822:	ldr	r1, [pc, #300]	; (18950 <btrfs_list_find_updated_files@@Base+0x624>)
   18824:	movs	r0, #1
   18826:	add	r1, pc
   18828:	blx	8c6c <__printf_chk@plt+0x4>
   1882c:	cmp	r6, #2
   1882e:	bne.n	18918 <btrfs_list_find_updated_files@@Base+0x5ec>
   18830:	ldr	r2, [pc, #288]	; (18954 <btrfs_list_find_updated_files@@Base+0x628>)
   18832:	add	r2, pc
   18834:	ldr	r1, [pc, #288]	; (18958 <btrfs_list_find_updated_files@@Base+0x62c>)
   18836:	add	r1, pc
   18838:	movs	r0, #1
   1883a:	blx	8c6c <__printf_chk@plt+0x4>
   1883e:	ldr	r1, [pc, #284]	; (1895c <btrfs_list_find_updated_files@@Base+0x630>)
   18840:	mov	r2, r4
   18842:	movs	r0, #1
   18844:	add	r1, pc
   18846:	blx	8c6c <__printf_chk@plt+0x4>
   1884a:	b.n	1889e <btrfs_list_find_updated_files@@Base+0x572>
   1884c:	add.w	r0, sp, #8384	; 0x20c0
   18850:	adds	r0, #24
   18852:	blx	88cc <strdup@plt+0x4>
   18856:	mov	r9, r0
   18858:	cmp	r0, #0
   1885a:	bne.n	18760 <btrfs_list_find_updated_files@@Base+0x434>
   1885c:	ldr	r0, [pc, #256]	; (18960 <btrfs_list_find_updated_files@@Base+0x634>)
   1885e:	mvn.w	r9, #11
   18862:	add	r0, pc
   18864:	blx	896c <perror@plt>
   18868:	b.n	18760 <btrfs_list_find_updated_files@@Base+0x434>
   1886a:	mov	r9, r7
   1886c:	b.n	18760 <btrfs_list_find_updated_files@@Base+0x434>
   1886e:	cbnz	r6, 18880 <btrfs_list_find_updated_files@@Base+0x554>
   18870:	ldr	r3, [r5, #8]
   18872:	mov	lr, r6
   18874:	mov	ip, r6
   18876:	mov	r0, r6
   18878:	mov	r1, r6
   1887a:	str	r3, [sp, #72]	; 0x48
   1887c:	ldr	r5, [r5, #12]
   1887e:	b.n	187f0 <btrfs_list_find_updated_files@@Base+0x4c4>
   18880:	ldrd	r2, r3, [sp, #48]	; 0x30
   18884:	mov	r1, r6
   18886:	ldr	r0, [pc, #220]	; (18964 <btrfs_list_find_updated_files@@Base+0x638>)
   18888:	strd	r2, r3, [sp, #8]
   1888c:	add	r0, pc
   1888e:	ldrd	r2, r3, [sp, #64]	; 0x40
   18892:	strd	r2, r3, [sp]
   18896:	ldrd	r2, r3, [sp, #40]	; 0x28
   1889a:	bl	1a900 <__btrfs_error@@Base>
   1889e:	ldrd	r2, r3, [sp, #40]	; 0x28
   188a2:	strd	r2, r3, [sp, #72]	; 0x48
   188a6:	ldr	r2, [sp, #104]	; 0x68
   188a8:	ldr	r3, [sp, #96]	; 0x60
   188aa:	add	r3, r2
   188ac:	mov	r5, r3
   188ae:	ldrd	r2, r3, [sp, #40]	; 0x28
   188b2:	strd	r2, r3, [r8, #8]
   188b6:	ldrd	r2, r3, [sl, #16]
   188ba:	strd	r2, r3, [r8, #24]
   188be:	ldr	r3, [sp, #100]	; 0x64
   188c0:	str.w	r3, [r8, #56]	; 0x38
   188c4:	ldr	r3, [sp, #84]	; 0x54
   188c6:	adds	r3, #1
   188c8:	str	r3, [sp, #84]	; 0x54
   188ca:	b.n	185a0 <btrfs_list_find_updated_files@@Base+0x274>
   188cc:	ldr	r2, [pc, #152]	; (18968 <btrfs_list_find_updated_files@@Base+0x63c>)
   188ce:	add	r2, pc
   188d0:	b.n	18920 <btrfs_list_find_updated_files@@Base+0x5f4>
   188d2:	ldrd	r2, r3, [sp, #40]	; 0x28
   188d6:	strd	r2, r3, [sp, #72]	; 0x48
   188da:	ldrd	r2, r3, [sp, #64]	; 0x40
   188de:	strd	r2, r3, [sp, #88]	; 0x58
   188e2:	b.n	188a6 <btrfs_list_find_updated_files@@Base+0x57a>
   188e4:	ldrd	r0, r1, [r8, #8]
   188e8:	adds	r3, r1, #1
   188ea:	it	eq
   188ec:	cmpeq.w	r0, #4294967295	; 0xffffffff
   188f0:	beq.w	18428 <btrfs_list_find_updated_files@@Base+0xfc>
   188f4:	adds	r2, r0, #1
   188f6:	adc.w	r3, r1, #0
   188fa:	strd	r2, r3, [r8, #8]
   188fe:	movs	r3, #0
   18900:	movs	r2, #0
   18902:	strd	r2, r3, [r8, #24]
   18906:	movs	r3, #0
   18908:	str.w	r3, [r8, #56]	; 0x38
   1890c:	b.n	1840a <btrfs_list_find_updated_files@@Base+0xde>
   1890e:	cmp	r6, #2
   18910:	bne.n	18926 <btrfs_list_find_updated_files@@Base+0x5fa>
   18912:	ldr	r2, [pc, #88]	; (1896c <btrfs_list_find_updated_files@@Base+0x640>)
   18914:	add	r2, pc
   18916:	b.n	18834 <btrfs_list_find_updated_files@@Base+0x508>
   18918:	cmp	r6, #0
   1891a:	bne.n	1883e <btrfs_list_find_updated_files@@Base+0x512>
   1891c:	ldr	r2, [pc, #80]	; (18970 <btrfs_list_find_updated_files@@Base+0x644>)
   1891e:	add	r2, pc
   18920:	ldr	r1, [pc, #80]	; (18974 <btrfs_list_find_updated_files@@Base+0x648>)
   18922:	add	r1, pc
   18924:	b.n	18838 <btrfs_list_find_updated_files@@Base+0x50c>
   18926:	cmp	r6, #0
   18928:	beq.n	188cc <btrfs_list_find_updated_files@@Base+0x5a0>
   1892a:	ldr	r1, [pc, #76]	; (18978 <btrfs_list_find_updated_files@@Base+0x64c>)
   1892c:	movs	r0, #1
   1892e:	add	r1, pc
   18930:	blx	8c6c <__printf_chk@plt+0x4>
   18934:	b.n	1883e <btrfs_list_find_updated_files@@Base+0x512>
   18936:	vmov	r0, s17
   1893a:	add.w	sp, sp, #12480	; 0x30c0
   1893e:	add	sp, #20
   18940:	vpop	{d8-d9}
   18944:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18948:	str	r4, [sp, #72]	; 0x48
   1894a:	beq.n	1894e <btrfs_list_find_updated_files@@Base+0x622>
   1894c:	strb	r7, [r4, #29]
   1894e:	movs	r2, r0
   18950:	add	r6, pc, #460	; (adr r6, 18b20 <btrfs_list_parse_filter_string@@Base+0x20>)
   18952:	movs	r2, r0
   18954:	strb	r5, [r1, #26]
   18956:	movs	r2, r0
   18958:	strb	r7, [r0, #29]
   1895a:	movs	r2, r0
   1895c:	ldr	r4, [r5, #40]	; 0x28
   1895e:	movs	r2, r0
   18960:	strb	r5, [r7, #21]
   18962:	movs	r2, r0
   18964:	strb	r6, [r3, #25]
   18966:	movs	r2, r0
   18968:	str	r0, [r3, #12]
   1896a:	movs	r2, r0
   1896c:	str	r2, [r2, #8]
   1896e:	movs	r2, r0
   18970:	strb	r1, [r4, #22]
   18972:	movs	r2, r0
   18974:	strb	r6, [r4, #25]
   18976:	movs	r2, r0
   18978:	strb	r3, [r4, #25]
   1897a:	movs	r2, r0

0001897c <btrfs_list_parse_sort_string@@Base>:
   1897c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18980:	mov	r4, r1
   18982:	ldr.w	sl, [pc, #324]	; 18ac8 <btrfs_list_parse_sort_string@@Base+0x14c>
   18986:	ldr.w	fp, [pc, #324]	; 18acc <btrfs_list_parse_sort_string@@Base+0x150>
   1898a:	ldr	r7, [pc, #324]	; (18ad0 <btrfs_list_parse_sort_string@@Base+0x154>)
   1898c:	add	sl, pc
   1898e:	ldr	r3, [pc, #324]	; (18ad4 <btrfs_list_parse_sort_string@@Base+0x158>)
   18990:	add	fp, pc
   18992:	add	r7, pc
   18994:	add	r3, pc
   18996:	str	r3, [sp, #0]
   18998:	mov	r1, sl
   1899a:	blx	8ce8 <strtok@plt>
   1899e:	mov	r9, r0
   189a0:	cbz	r0, 189d4 <btrfs_list_parse_sort_string@@Base+0x58>
   189a2:	ldr	r3, [sp, #0]
   189a4:	add.w	r8, r0, #1
   189a8:	add.w	r5, r3, #132	; 0x84
   189ac:	mov	r6, r5
   189ae:	b.n	189c8 <btrfs_list_parse_sort_string@@Base+0x4c>
   189b0:	mov	r1, r9
   189b2:	mov	r0, r2
   189b4:	str	r2, [sp, #4]
   189b6:	blx	8748 <strcmp@plt>
   189ba:	cbz	r0, 189da <btrfs_list_parse_sort_string@@Base+0x5e>
   189bc:	ldr	r2, [sp, #4]
   189be:	mov	r1, r8
   189c0:	mov	r0, r2
   189c2:	blx	8748 <strcmp@plt>
   189c6:	cbz	r0, 189da <btrfs_list_parse_sort_string@@Base+0x5e>
   189c8:	ldr.w	r2, [r6], #4
   189cc:	cmp	r2, #0
   189ce:	bne.n	189b0 <btrfs_list_parse_sort_string@@Base+0x34>
   189d0:	mov.w	r0, #4294967295	; 0xffffffff
   189d4:	add	sp, #12
   189d6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   189da:	ldrb.w	r2, [r9]
   189de:	cmp	r2, #43	; 0x2b
   189e0:	bne.n	189ea <btrfs_list_parse_sort_string@@Base+0x6e>
   189e2:	add.w	r9, r9, #1
   189e6:	movs	r6, #0
   189e8:	b.n	189f4 <btrfs_list_parse_sort_string@@Base+0x78>
   189ea:	cmp	r2, #45	; 0x2d
   189ec:	bne.n	189e6 <btrfs_list_parse_sort_string@@Base+0x6a>
   189ee:	add.w	r9, r9, #1
   189f2:	movs	r6, #1
   189f4:	mov.w	r8, #0
   189f8:	ldr.w	r1, [r5], #4
   189fc:	mov	r0, r9
   189fe:	blx	8748 <strcmp@plt>
   18a02:	cbz	r0, 18a12 <btrfs_list_parse_sort_string@@Base+0x96>
   18a04:	add.w	r8, r8, #1
   18a08:	cmp.w	r8, #4
   18a0c:	bne.n	189f8 <btrfs_list_parse_sort_string@@Base+0x7c>
   18a0e:	mov.w	r8, #4294967295	; 0xffffffff
   18a12:	ldr	r5, [r4, #0]
   18a14:	cbnz	r5, 18a26 <btrfs_list_parse_sort_string@@Base+0xaa>
   18a16:	ldr	r1, [pc, #192]	; (18ad8 <btrfs_list_parse_sort_string@@Base+0x15c>)
   18a18:	movs	r2, #251	; 0xfb
   18a1a:	ldr	r0, [pc, #192]	; (18adc <btrfs_list_parse_sort_string@@Base+0x160>)
   18a1c:	add	r1, pc
   18a1e:	adds	r1, #77	; 0x4d
   18a20:	add	r0, pc
   18a22:	bl	17edc <rb_first_postorder@@Base+0xb36>
   18a26:	cmp.w	r8, #3
   18a2a:	bls.n	18a3a <btrfs_list_parse_sort_string@@Base+0xbe>
   18a2c:	ldr	r1, [pc, #176]	; (18ae0 <btrfs_list_parse_sort_string@@Base+0x164>)
   18a2e:	movs	r2, #252	; 0xfc
   18a30:	ldr	r0, [pc, #176]	; (18ae4 <btrfs_list_parse_sort_string@@Base+0x168>)
   18a32:	add	r1, pc
   18a34:	adds	r1, #77	; 0x4d
   18a36:	add	r0, pc
   18a38:	b.n	18a22 <btrfs_list_parse_sort_string@@Base+0xa6>
   18a3a:	ldrd	r3, r1, [r5]
   18a3e:	cmp	r1, r3
   18a40:	ble.n	18a50 <btrfs_list_parse_sort_string@@Base+0xd4>
   18a42:	ldr	r1, [pc, #164]	; (18ae8 <btrfs_list_parse_sort_string@@Base+0x16c>)
   18a44:	movs	r2, #253	; 0xfd
   18a46:	ldr	r0, [pc, #164]	; (18aec <btrfs_list_parse_sort_string@@Base+0x170>)
   18a48:	add	r1, pc
   18a4a:	adds	r1, #77	; 0x4d
   18a4c:	add	r0, pc
   18a4e:	b.n	18a22 <btrfs_list_parse_sort_string@@Base+0xa6>
   18a50:	bne.n	18a9a <btrfs_list_parse_sort_string@@Base+0x11e>
   18a52:	adds	r1, #9
   18a54:	mov	r0, r5
   18a56:	lsls	r1, r1, #3
   18a58:	blx	8924 <realloc@plt+0x4>
   18a5c:	mov	r9, r0
   18a5e:	cbnz	r0, 18a7a <btrfs_list_parse_sort_string@@Base+0xfe>
   18a60:	ldr	r3, [pc, #140]	; (18af0 <btrfs_list_parse_sort_string@@Base+0x174>)
   18a62:	ldr	r0, [pc, #144]	; (18af4 <btrfs_list_parse_sort_string@@Base+0x178>)
   18a64:	ldr	r3, [r7, r3]
   18a66:	add	r0, pc
   18a68:	ldr	r1, [r3, #0]
   18a6a:	blx	8de4 <fputs@plt+0x4>
   18a6e:	mov	r0, r5
   18a70:	blx	87cc <free@plt+0x4>
   18a74:	movs	r0, #1
   18a76:	blx	8b58 <exit@plt>
   18a7a:	ldr	r0, [r0, #0]
   18a7c:	movs	r2, #64	; 0x40
   18a7e:	movs	r1, #0
   18a80:	mov	r5, r9
   18a82:	adds	r0, #1
   18a84:	add.w	r0, r9, r0, lsl #3
   18a88:	blx	8bf8 <memset@plt+0x4>
   18a8c:	ldr.w	r2, [r9]
   18a90:	adds	r2, #8
   18a92:	str.w	r2, [r9]
   18a96:	str.w	r9, [r4]
   18a9a:	ldr	r3, [r5, #4]
   18a9c:	add.w	r1, r5, r3, lsl #3
   18aa0:	ldr	r0, [r1, #8]
   18aa2:	cbz	r0, 18ab4 <btrfs_list_parse_sort_string@@Base+0x138>
   18aa4:	ldr	r1, [pc, #80]	; (18af8 <btrfs_list_parse_sort_string@@Base+0x17c>)
   18aa6:	movw	r2, #275	; 0x113
   18aaa:	ldr	r0, [pc, #80]	; (18afc <btrfs_list_parse_sort_string@@Base+0x180>)
   18aac:	add	r1, pc
   18aae:	adds	r1, #77	; 0x4d
   18ab0:	add	r0, pc
   18ab2:	b.n	18a22 <btrfs_list_parse_sort_string@@Base+0xa6>
   18ab4:	add.w	r8, fp, r8, lsl #2
   18ab8:	adds	r3, #1
   18aba:	ldr.w	r2, [r8, #52]	; 0x34
   18abe:	strd	r2, r6, [r1, #8]
   18ac2:	str	r3, [r5, #4]
   18ac4:	b.n	18998 <btrfs_list_parse_sort_string@@Base+0x1c>
   18ac6:	nop
   18ac8:	ldrb	r6, [r5, r0]
   18aca:	movs	r2, r0
   18acc:	stc2	0, cr0, [ip, #16]!
   18ad0:	lsls	r6, r3, #14
   18ad2:	movs	r5, r0
   18ad4:	asrs	r4, r1, #30
   18ad6:	movs	r5, r0
   18ad8:	strb	r5, [r3, #25]
   18ada:	movs	r2, r0
   18adc:	ldrh	r6, [r1, r2]
   18ade:	movs	r2, r0
   18ae0:	strb	r7, [r0, #25]
   18ae2:	movs	r2, r0
   18ae4:	strb	r1, [r7, #21]
   18ae6:	movs	r2, r0
   18ae8:	strb	r1, [r6, #24]
   18aea:	movs	r2, r0
   18aec:	ldrh	r7, [r1, r2]
   18aee:	movs	r2, r0
   18af0:	lsls	r4, r1, #10
   18af2:	movs	r0, r0
   18af4:	strb	r1, [r5, #12]
   18af6:	movs	r2, r0
   18af8:	strb	r5, [r1, #23]
   18afa:	movs	r2, r0
   18afc:	ldrh	r5, [r0, r1]
   18afe:	movs	r2, r0

00018b00 <btrfs_list_parse_filter_string@@Base>:
   18b00:	push	{r3, r4, r5, lr}
   18b02:	mov	r3, r0
   18b04:	mov	r5, r2
   18b06:	ldrb.w	r2, [r3], #1
   18b0a:	mov	r4, r1
   18b0c:	cmp	r2, #43	; 0x2b
   18b0e:	beq.n	18b20 <btrfs_list_parse_filter_string@@Base+0x20>
   18b10:	cmp	r2, #45	; 0x2d
   18b12:	beq.n	18b36 <btrfs_list_parse_filter_string@@Base+0x36>
   18b14:	bl	1abc0 <arg_strtou64@@Base>
   18b18:	mov	r3, r1
   18b1a:	mov	r2, r0
   18b1c:	mov	r1, r5
   18b1e:	b.n	18b2c <btrfs_list_parse_filter_string@@Base+0x2c>
   18b20:	mov	r0, r3
   18b22:	bl	1abc0 <arg_strtou64@@Base>
   18b26:	mov	r3, r1
   18b28:	adds	r1, r5, #2
   18b2a:	mov	r2, r0
   18b2c:	mov	r0, r4
   18b2e:	bl	18220 <btrfs_list_setup_filter@@Base>
   18b32:	movs	r0, #0
   18b34:	pop	{r3, r4, r5, pc}
   18b36:	mov	r0, r3
   18b38:	bl	1abc0 <arg_strtou64@@Base>
   18b3c:	mov	r3, r1
   18b3e:	mov	r2, r0
   18b40:	adds	r1, r5, #1
   18b42:	b.n	18b2c <btrfs_list_parse_filter_string@@Base+0x2c>

00018b44 <btrfs_list_get_path_rootid@@Base>:
   18b44:	push	{r4, lr}
   18b46:	bl	1ac68 <lookup_path_rootid@@Base>
   18b4a:	subs	r4, r0, #0
   18b4c:	bge.n	18b56 <btrfs_list_get_path_rootid@@Base+0x12>
   18b4e:	ldr	r0, [pc, #12]	; (18b5c <btrfs_list_get_path_rootid@@Base+0x18>)
   18b50:	add	r0, pc
   18b52:	bl	1a900 <__btrfs_error@@Base>
   18b56:	mov	r0, r4
   18b58:	pop	{r4, pc}
   18b5a:	nop
   18b5c:	strb	r6, [r7, #17]
   18b5e:	movs	r2, r0

00018b60 <btrfs_list_subvols_print@@Base>:
   18b60:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18b64:	sub	sp, #76	; 0x4c
   18b66:	mov	r9, r2
   18b68:	mov	r7, r3
   18b6a:	ldrd	r3, r2, [sp, #112]	; 0x70
   18b6e:	mov	r8, r1
   18b70:	ldr	r1, [pc, #828]	; (18eb0 <btrfs_list_subvols_print@@Base+0x350>)
   18b72:	mov.w	sl, #0
   18b76:	mov.w	fp, #0
   18b7a:	mov	r4, r0
   18b7c:	str	r2, [sp, #12]
   18b7e:	add	r1, pc
   18b80:	ldr	r2, [pc, #816]	; (18eb4 <btrfs_list_subvols_print@@Base+0x354>)
   18b82:	ldr	r2, [r1, r2]
   18b84:	ldr	r2, [r2, #0]
   18b86:	str	r2, [sp, #68]	; 0x44
   18b88:	mov.w	r2, #0
   18b8c:	strd	sl, fp, [sp, #40]	; 0x28
   18b90:	cmp	r3, #0
   18b92:	bne.n	18c6e <btrfs_list_subvols_print@@Base+0x10e>
   18b94:	add	r5, sp, #32
   18b96:	mov	r0, r4
   18b98:	mov	r1, r5
   18b9a:	bl	17eb4 <rb_first_postorder@@Base+0xb0e>
   18b9e:	mov	r6, r0
   18ba0:	cmp	r0, #0
   18ba2:	bne.n	18c7a <btrfs_list_subvols_print@@Base+0x11a>
   18ba4:	ldrd	r3, r4, [sp, #40]	; 0x28
   18ba8:	str	r0, [sp, #36]	; 0x24
   18baa:	mov	r0, r5
   18bac:	strd	r3, r4, [sp, #16]
   18bb0:	bl	172da <rb_last@@Base>
   18bb4:	ldr	r3, [pc, #768]	; (18eb8 <btrfs_list_subvols_print@@Base+0x358>)
   18bb6:	add	r3, pc
   18bb8:	str	r3, [sp, #24]
   18bba:	mov	r4, r0
   18bbc:	cmp	r4, #0
   18bbe:	bne.n	18c90 <btrfs_list_subvols_print@@Base+0x130>
   18bc0:	cmp	r7, #1
   18bc2:	bne.n	18c48 <btrfs_list_subvols_print@@Base+0xe8>
   18bc4:	ldr	r5, [pc, #756]	; (18ebc <btrfs_list_subvols_print@@Base+0x35c>)
   18bc6:	ldr.w	r9, [pc, #760]	; 18ec0 <btrfs_list_subvols_print@@Base+0x360>
   18bca:	add	r5, pc
   18bcc:	add	r9, pc
   18bce:	mov	r8, r5
   18bd0:	ldr.w	r3, [r8, #8]
   18bd4:	cbz	r3, 18be2 <btrfs_list_subvols_print@@Base+0x82>
   18bd6:	ldr.w	r2, [r8]
   18bda:	mov	r1, r9
   18bdc:	movs	r0, #1
   18bde:	blx	8c6c <__printf_chk@plt+0x4>
   18be2:	cmp	r4, #9
   18be4:	bne.n	18bec <btrfs_list_subvols_print@@Base+0x8c>
   18be6:	movs	r0, #10
   18be8:	blx	8c08 <putchar@plt+0x4>
   18bec:	adds	r4, #1
   18bee:	add.w	r8, r8, #12
   18bf2:	cmp	r4, #10
   18bf4:	bne.n	18bd0 <btrfs_list_subvols_print@@Base+0x70>
   18bf6:	ldr.w	r9, [pc, #716]	; 18ec4 <btrfs_list_subvols_print@@Base+0x364>
   18bfa:	mov.w	r8, #0
   18bfe:	ldr.w	sl, [pc, #712]	; 18ec8 <btrfs_list_subvols_print@@Base+0x368>
   18c02:	add	r9, pc
   18c04:	add	sl, pc
   18c06:	add.w	fp, sp, #48	; 0x30
   18c0a:	movs	r2, #20
   18c0c:	movs	r1, #0
   18c0e:	mov	r0, fp
   18c10:	blx	8bf8 <memset@plt+0x4>
   18c14:	ldr	r3, [r5, #8]
   18c16:	cbz	r3, 18c30 <btrfs_list_subvols_print@@Base+0xd0>
   18c18:	ldr	r0, [r5, #0]
   18c1a:	blx	8b70 <strlen@plt>
   18c1e:	mov	r4, r0
   18c20:	subs	r4, #1
   18c22:	bcs.w	18db8 <btrfs_list_subvols_print@@Base+0x258>
   18c26:	mov	r2, fp
   18c28:	mov	r1, sl
   18c2a:	movs	r0, #1
   18c2c:	blx	8c6c <__printf_chk@plt+0x4>
   18c30:	cmp.w	r8, #9
   18c34:	bne.n	18c3c <btrfs_list_subvols_print@@Base+0xdc>
   18c36:	movs	r0, #10
   18c38:	blx	8c08 <putchar@plt+0x4>
   18c3c:	add.w	r8, r8, #1
   18c40:	adds	r5, #12
   18c42:	cmp.w	r8, #10
   18c46:	bne.n	18c06 <btrfs_list_subvols_print@@Base+0xa6>
   18c48:	add	r0, sp, #36	; 0x24
   18c4a:	ldr.w	r9, [pc, #640]	; 18ecc <btrfs_list_subvols_print@@Base+0x36c>
   18c4e:	bl	172ca <rb_first@@Base>
   18c52:	ldr.w	sl, [pc, #636]	; 18ed0 <btrfs_list_subvols_print@@Base+0x370>
   18c56:	add	r9, pc
   18c58:	add	sl, pc
   18c5a:	mov	r4, r0
   18c5c:	cmp	r4, #0
   18c5e:	bne.w	18dc4 <btrfs_list_subvols_print@@Base+0x264>
   18c62:	ldr	r1, [pc, #624]	; (18ed4 <btrfs_list_subvols_print@@Base+0x374>)
   18c64:	add	r0, sp, #32
   18c66:	add	r1, pc
   18c68:	bl	1ad82 <rb_free_nodes@@Base>
   18c6c:	b.n	18c7a <btrfs_list_subvols_print@@Base+0x11a>
   18c6e:	add	r1, sp, #40	; 0x28
   18c70:	bl	18b44 <btrfs_list_get_path_rootid@@Base>
   18c74:	mov	r6, r0
   18c76:	cmp	r0, #0
   18c78:	beq.n	18b94 <btrfs_list_subvols_print@@Base+0x34>
   18c7a:	ldr	r2, [pc, #604]	; (18ed8 <btrfs_list_subvols_print@@Base+0x378>)
   18c7c:	ldr	r3, [pc, #564]	; (18eb4 <btrfs_list_subvols_print@@Base+0x354>)
   18c7e:	add	r2, pc
   18c80:	ldr	r3, [r2, r3]
   18c82:	ldr	r2, [r3, #0]
   18c84:	ldr	r3, [sp, #68]	; 0x44
   18c86:	eors	r2, r3
   18c88:	beq.w	18ea6 <btrfs_list_subvols_print@@Base+0x346>
   18c8c:	blx	88e4 <__stack_chk_fail@plt>
   18c90:	ldrd	r2, r3, [sp, #16]
   18c94:	add	r0, sp, #32
   18c96:	mov	r1, r4
   18c98:	bl	17984 <rb_first_postorder@@Base+0x5de>
   18c9c:	adds	r0, #2
   18c9e:	bne.n	18cbe <btrfs_list_subvols_print@@Base+0x15e>
   18ca0:	ldrd	r2, r3, [r4, #24]
   18ca4:	cmp	r3, #0
   18ca6:	it	eq
   18ca8:	cmpeq	r2, #5
   18caa:	beq.n	18ce8 <btrfs_list_subvols_print@@Base+0x188>
   18cac:	ldr	r0, [pc, #556]	; (18edc <btrfs_list_subvols_print@@Base+0x37c>)
   18cae:	add	r0, pc
   18cb0:	blx	88cc <strdup@plt+0x4>
   18cb4:	movs	r3, #1
   18cb6:	str.w	r0, [r4, #148]	; 0x94
   18cba:	str.w	r3, [r4, #152]	; 0x98
   18cbe:	cmp.w	r8, #0
   18cc2:	bne.n	18cf8 <btrfs_list_subvols_print@@Base+0x198>
   18cc4:	add	r5, sp, #36	; 0x24
   18cc6:	movs	r3, #0
   18cc8:	ldr.w	sl, [r5]
   18ccc:	cmp.w	sl, #0
   18cd0:	bne.n	18d3a <btrfs_list_subvols_print@@Base+0x1da>
   18cd2:	add.w	r0, r4, #12
   18cd6:	strd	r3, sl, [r4, #12]
   18cda:	str.w	sl, [r4, #20]
   18cde:	add	r1, sp, #36	; 0x24
   18ce0:	str	r0, [r5, #0]
   18ce2:	bl	16fae <rb_insert_color@@Base>
   18ce6:	b.n	18d04 <btrfs_list_subvols_print@@Base+0x1a4>
   18ce8:	ldr	r0, [pc, #500]	; (18ee0 <btrfs_list_subvols_print@@Base+0x380>)
   18cea:	add	r0, pc
   18cec:	blx	88cc <strdup@plt+0x4>
   18cf0:	movs	r3, #0
   18cf2:	str.w	r0, [r4, #148]	; 0x94
   18cf6:	b.n	18cba <btrfs_list_subvols_print@@Base+0x15a>
   18cf8:	ldr.w	r2, [r8, #8]
   18cfc:	ldr.w	r3, [r4, #152]	; 0x98
   18d00:	cbz	r2, 18d0e <btrfs_list_subvols_print@@Base+0x1ae>
   18d02:	cbnz	r3, 18d12 <btrfs_list_subvols_print@@Base+0x1b2>
   18d04:	mov	r0, r4
   18d06:	bl	17316 <rb_prev@@Base>
   18d0a:	mov	r4, r0
   18d0c:	b.n	18bbc <btrfs_list_subvols_print@@Base+0x5c>
   18d0e:	cmp	r3, #0
   18d10:	bne.n	18d04 <btrfs_list_subvols_print@@Base+0x1a4>
   18d12:	mov	r5, r8
   18d14:	mov.w	sl, #0
   18d18:	ldr.w	r3, [r8, #4]
   18d1c:	cmp	sl, r3
   18d1e:	bge.n	18cc4 <btrfs_list_subvols_print@@Base+0x164>
   18d20:	ldr	r1, [r5, #16]
   18d22:	cmp	r1, #0
   18d24:	beq.n	18cc4 <btrfs_list_subvols_print@@Base+0x164>
   18d26:	ldrd	r2, r3, [r5, #24]
   18d2a:	mov	r0, r4
   18d2c:	blx	r1
   18d2e:	adds	r5, #16
   18d30:	cmp	r0, #0
   18d32:	beq.n	18d04 <btrfs_list_subvols_print@@Base+0x1a4>
   18d34:	add.w	sl, sl, #1
   18d38:	b.n	18d18 <btrfs_list_subvols_print@@Base+0x1b8>
   18d3a:	sub.w	r1, sl, #12
   18d3e:	cmp.w	r9, #0
   18d42:	beq.n	18d68 <btrfs_list_subvols_print@@Base+0x208>
   18d44:	ldr.w	r3, [r9, #4]
   18d48:	cbz	r3, 18d68 <btrfs_list_subvols_print@@Base+0x208>
   18d4a:	movs	r3, #0
   18d4c:	str.w	r9, [sp, #8]
   18d50:	mov	fp, r3
   18d52:	str	r3, [sp, #4]
   18d54:	ldr.w	r3, [r9, #4]
   18d58:	ldr	r2, [sp, #4]
   18d5a:	cmp	r2, r3
   18d5c:	blt.n	18d7c <btrfs_list_subvols_print@@Base+0x21c>
   18d5e:	cmp.w	fp, #0
   18d62:	bne.n	18d04 <btrfs_list_subvols_print@@Base+0x1a4>
   18d64:	mov	r2, fp
   18d66:	b.n	18d6a <btrfs_list_subvols_print@@Base+0x20a>
   18d68:	movs	r2, #0
   18d6a:	mov	r0, r4
   18d6c:	bl	173bc <rb_first_postorder@@Base+0x16>
   18d70:	cmp	r0, #0
   18d72:	bge.n	18db0 <btrfs_list_subvols_print@@Base+0x250>
   18d74:	ldr	r5, [r5, #0]
   18d76:	adds	r5, #8
   18d78:	mov	r3, sl
   18d7a:	b.n	18cc8 <btrfs_list_subvols_print@@Base+0x168>
   18d7c:	ldr	r3, [sp, #8]
   18d7e:	ldr	r3, [r3, #8]
   18d80:	cmp	r3, #0
   18d82:	beq.n	18d5e <btrfs_list_subvols_print@@Base+0x1fe>
   18d84:	ldr	r2, [sp, #8]
   18d86:	mov	r0, r4
   18d88:	str	r1, [sp, #28]
   18d8a:	ldr	r2, [r2, #12]
   18d8c:	blx	r3
   18d8e:	cmp	r0, #0
   18d90:	bne.w	18ea0 <btrfs_list_subvols_print@@Base+0x340>
   18d94:	ldr	r2, [sp, #8]
   18d96:	ldr	r1, [sp, #28]
   18d98:	ldr.w	r3, [r2, #8]!
   18d9c:	str	r2, [sp, #8]
   18d9e:	ldr	r2, [sp, #24]
   18da0:	cmp	r3, r2
   18da2:	it	eq
   18da4:	moveq.w	fp, #1
   18da8:	ldr	r3, [sp, #4]
   18daa:	adds	r3, #1
   18dac:	str	r3, [sp, #4]
   18dae:	b.n	18d54 <btrfs_list_subvols_print@@Base+0x1f4>
   18db0:	beq.n	18d04 <btrfs_list_subvols_print@@Base+0x1a4>
   18db2:	ldr	r5, [r5, #0]
   18db4:	adds	r5, #4
   18db6:	b.n	18d78 <btrfs_list_subvols_print@@Base+0x218>
   18db8:	movs	r2, #20
   18dba:	mov	r1, r9
   18dbc:	mov	r0, fp
   18dbe:	blx	8bb8 <__strcat_chk@plt>
   18dc2:	b.n	18c20 <btrfs_list_subvols_print@@Base+0xc0>
   18dc4:	ldrd	r2, r3, [r4, #12]
   18dc8:	sub.w	r5, r4, #12
   18dcc:	cmp	r3, #0
   18dce:	it	eq
   18dd0:	cmpeq	r2, #5
   18dd2:	beq.n	18e20 <btrfs_list_subvols_print@@Base+0x2c0>
   18dd4:	cmp	r7, #1
   18dd6:	beq.n	18e2a <btrfs_list_subvols_print@@Base+0x2ca>
   18dd8:	cmp	r7, #2
   18dda:	beq.n	18e6a <btrfs_list_subvols_print@@Base+0x30a>
   18ddc:	cbnz	r7, 18e20 <btrfs_list_subvols_print@@Base+0x2c0>
   18dde:	ldr.w	fp, [pc, #260]	; 18ee4 <btrfs_list_subvols_print@@Base+0x384>
   18de2:	mov	r8, r7
   18de4:	add	fp, pc
   18de6:	ldr.w	r3, [fp, #8]
   18dea:	cbz	r3, 18e0c <btrfs_list_subvols_print@@Base+0x2ac>
   18dec:	ldr.w	r2, [fp]
   18df0:	mov	r1, sl
   18df2:	movs	r0, #1
   18df4:	blx	8c6c <__printf_chk@plt+0x4>
   18df8:	mov	r1, r8
   18dfa:	mov	r0, r5
   18dfc:	bl	17f18 <rb_first_postorder@@Base+0xb72>
   18e00:	cmp.w	r8, #9
   18e04:	beq.n	18e0c <btrfs_list_subvols_print@@Base+0x2ac>
   18e06:	movs	r0, #32
   18e08:	blx	8c08 <putchar@plt+0x4>
   18e0c:	add.w	r8, r8, #1
   18e10:	add.w	fp, fp, #12
   18e14:	cmp.w	r8, #10
   18e18:	bne.n	18de6 <btrfs_list_subvols_print@@Base+0x286>
   18e1a:	movs	r0, #10
   18e1c:	blx	8c08 <putchar@plt+0x4>
   18e20:	mov	r0, r4
   18e22:	bl	172ea <rb_next@@Base>
   18e26:	mov	r4, r0
   18e28:	b.n	18c5c <btrfs_list_subvols_print@@Base+0xfc>
   18e2a:	ldr.w	r8, [pc, #188]	; 18ee8 <btrfs_list_subvols_print@@Base+0x388>
   18e2e:	mov.w	fp, #0
   18e32:	add	r8, pc
   18e34:	ldr.w	r3, [r8, #8]
   18e38:	cbz	r3, 18e5a <btrfs_list_subvols_print@@Base+0x2fa>
   18e3a:	mov	r1, fp
   18e3c:	mov	r0, r5
   18e3e:	bl	17f18 <rb_first_postorder@@Base+0xb72>
   18e42:	cmp.w	fp, #9
   18e46:	beq.n	18e5a <btrfs_list_subvols_print@@Base+0x2fa>
   18e48:	movs	r0, #9
   18e4a:	blx	8c08 <putchar@plt+0x4>
   18e4e:	cmp.w	fp, #4
   18e52:	bne.n	18e5a <btrfs_list_subvols_print@@Base+0x2fa>
   18e54:	movs	r0, #9
   18e56:	blx	8c08 <putchar@plt+0x4>
   18e5a:	add.w	fp, fp, #1
   18e5e:	add.w	r8, r8, #12
   18e62:	cmp.w	fp, #10
   18e66:	bne.n	18e34 <btrfs_list_subvols_print@@Base+0x2d4>
   18e68:	b.n	18e1a <btrfs_list_subvols_print@@Base+0x2ba>
   18e6a:	ldr.w	fp, [pc, #128]	; 18eec <btrfs_list_subvols_print@@Base+0x38c>
   18e6e:	mov.w	r8, #0
   18e72:	add	fp, pc
   18e74:	ldr.w	r3, [fp, #8]
   18e78:	cbz	r3, 18e90 <btrfs_list_subvols_print@@Base+0x330>
   18e7a:	ldr	r3, [sp, #12]
   18e7c:	cbz	r3, 18e88 <btrfs_list_subvols_print@@Base+0x328>
   18e7e:	mov	r2, r3
   18e80:	mov	r1, r9
   18e82:	movs	r0, #1
   18e84:	blx	8c6c <__printf_chk@plt+0x4>
   18e88:	mov	r1, r8
   18e8a:	mov	r0, r5
   18e8c:	bl	17f18 <rb_first_postorder@@Base+0xb72>
   18e90:	add.w	r8, r8, #1
   18e94:	add.w	fp, fp, #12
   18e98:	cmp.w	r8, #10
   18e9c:	bne.n	18e74 <btrfs_list_subvols_print@@Base+0x314>
   18e9e:	b.n	18e1a <btrfs_list_subvols_print@@Base+0x2ba>
   18ea0:	blt.w	18d74 <btrfs_list_subvols_print@@Base+0x214>
   18ea4:	b.n	18db2 <btrfs_list_subvols_print@@Base+0x252>
   18ea6:	mov	r0, r6
   18ea8:	add	sp, #76	; 0x4c
   18eaa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18eae:	nop
   18eb0:	lsls	r2, r6, #6
   18eb2:	movs	r5, r0
   18eb4:	lsls	r4, r7, #9
   18eb6:	movs	r0, r0
   18eb8:			; <UNDEFINED> instruction: 0xe803ffff
   18ebc:	asrs	r6, r2, #21
   18ebe:	movs	r5, r0
   18ec0:	strb	r6, [r6, #16]
   18ec2:	movs	r2, r0
   18ec4:	ldr	r4, [r7, r6]
   18ec6:	movs	r2, r0
   18ec8:	strb	r6, [r7, #15]
   18eca:	movs	r2, r0
   18ecc:			; <UNDEFINED> instruction: 0xb891
   18ece:	movs	r2, r0
   18ed0:	strb	r6, [r5, #14]
   18ed2:	movs	r2, r0
   18ed4:	ldmia.w	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   18ed8:	lsls	r2, r6, #2
   18eda:	movs	r5, r0
   18edc:	strb	r3, [r0, #13]
   18ede:	movs	r2, r0
   18ee0:	strb	r7, [r1, #12]
   18ee2:	movs	r2, r0
   18ee4:	asrs	r4, r7, #12
   18ee6:	movs	r5, r0
   18ee8:	asrs	r6, r5, #11
   18eea:	movs	r5, r0
   18eec:	asrs	r6, r5, #10
   18eee:	movs	r5, r0

00018ef0 <btrfs_get_toplevel_subvol@@Base>:
   18ef0:	ldr	r2, [pc, #152]	; (18f8c <btrfs_get_toplevel_subvol@@Base+0x9c>)
   18ef2:	ldr	r3, [pc, #156]	; (18f90 <btrfs_get_toplevel_subvol@@Base+0xa0>)
   18ef4:	add	r2, pc
   18ef6:	push	{r4, r5, r6, r7, lr}
   18ef8:	sub	sp, #28
   18efa:	ldr	r3, [r2, r3]
   18efc:	mov	r5, r1
   18efe:	add	r1, sp, #8
   18f00:	mov	r7, r0
   18f02:	ldr	r3, [r3, #0]
   18f04:	str	r3, [sp, #20]
   18f06:	mov.w	r3, #0
   18f0a:	bl	18b44 <btrfs_list_get_path_rootid@@Base>
   18f0e:	mov	r4, r0
   18f10:	cbnz	r0, 18f6a <btrfs_get_toplevel_subvol@@Base+0x7a>
   18f12:	add	r6, sp, #4
   18f14:	mov	r0, r7
   18f16:	mov	r1, r6
   18f18:	bl	17eb4 <rb_first_postorder@@Base+0xb0e>
   18f1c:	mov	r4, r0
   18f1e:	cbnz	r0, 18f6a <btrfs_get_toplevel_subvol@@Base+0x7a>
   18f20:	mov	r0, r6
   18f22:	bl	172ca <rb_first@@Base>
   18f26:	ldrd	r2, r3, [r0, #24]
   18f2a:	mov	r1, r0
   18f2c:	cmp	r3, #0
   18f2e:	it	eq
   18f30:	cmpeq	r2, #5
   18f32:	bne.n	18f7e <btrfs_get_toplevel_subvol@@Base+0x8e>
   18f34:	ldr	r7, [pc, #92]	; (18f94 <btrfs_get_toplevel_subvol@@Base+0xa4>)
   18f36:	movs	r2, #140	; 0x8c
   18f38:	mov	r0, r5
   18f3a:	add	r7, pc
   18f3c:	blx	8830 <memcpy@plt+0x4>
   18f40:	mov	r0, r7
   18f42:	blx	88cc <strdup@plt+0x4>
   18f46:	str.w	r0, [r5, #140]	; 0x8c
   18f4a:	ldr	r0, [pc, #76]	; (18f98 <btrfs_get_toplevel_subvol@@Base+0xa8>)
   18f4c:	add	r0, pc
   18f4e:	blx	88cc <strdup@plt+0x4>
   18f52:	str.w	r0, [r5, #144]	; 0x90
   18f56:	mov	r0, r7
   18f58:	blx	88cc <strdup@plt+0x4>
   18f5c:	ldr	r1, [pc, #60]	; (18f9c <btrfs_get_toplevel_subvol@@Base+0xac>)
   18f5e:	add	r1, pc
   18f60:	str.w	r0, [r5, #148]	; 0x94
   18f64:	mov	r0, r6
   18f66:	bl	1ad82 <rb_free_nodes@@Base>
   18f6a:	ldr	r2, [pc, #52]	; (18fa0 <btrfs_get_toplevel_subvol@@Base+0xb0>)
   18f6c:	ldr	r3, [pc, #32]	; (18f90 <btrfs_get_toplevel_subvol@@Base+0xa0>)
   18f6e:	add	r2, pc
   18f70:	ldr	r3, [r2, r3]
   18f72:	ldr	r2, [r3, #0]
   18f74:	ldr	r3, [sp, #20]
   18f76:	eors	r2, r3
   18f78:	beq.n	18f84 <btrfs_get_toplevel_subvol@@Base+0x94>
   18f7a:	blx	88e4 <__stack_chk_fail@plt>
   18f7e:	mvn.w	r4, #1
   18f82:	b.n	18f6a <btrfs_get_toplevel_subvol@@Base+0x7a>
   18f84:	mov	r0, r4
   18f86:	add	sp, #28
   18f88:	pop	{r4, r5, r6, r7, pc}
   18f8a:	nop
   18f8c:	cdp2	0, 3, cr0, cr12, cr4, {0}
   18f90:	lsls	r4, r7, #9
   18f92:	movs	r0, r0
   18f94:	ldr	r3, [r2, #80]	; 0x50
   18f96:	movs	r2, r0
   18f98:	ldr	r5, [r3, #100]	; 0x64
   18f9a:	movs	r2, r0
   18f9c:	b.n	18b2e <btrfs_list_parse_filter_string@@Base+0x2e>
   18f9e:	vqrdmulh.s<illegal width 64>	<illegal reg q15.5>, <illegal reg q15.5>, d2[0]
   18fa2:	movs	r4, r0

00018fa4 <btrfs_get_subvol@@Base>:
   18fa4:	ldr	r2, [pc, #228]	; (1908c <btrfs_get_subvol@@Base+0xe8>)
   18fa6:	ldr	r3, [pc, #232]	; (19090 <btrfs_get_subvol@@Base+0xec>)
   18fa8:	add	r2, pc
   18faa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   18fae:	sub	sp, #28
   18fb0:	ldr	r3, [r2, r3]
   18fb2:	mov	r6, r1
   18fb4:	add	r1, sp, #8
   18fb6:	mov	r4, r0
   18fb8:	ldr	r3, [r3, #0]
   18fba:	str	r3, [sp, #20]
   18fbc:	mov.w	r3, #0
   18fc0:	bl	18b44 <btrfs_list_get_path_rootid@@Base>
   18fc4:	mov	r5, r0
   18fc6:	cmp	r0, #0
   18fc8:	bne.n	1904e <btrfs_get_subvol@@Base+0xaa>
   18fca:	add	r7, sp, #4
   18fcc:	mov	r0, r4
   18fce:	mov	r1, r7
   18fd0:	bl	17eb4 <rb_first_postorder@@Base+0xb0e>
   18fd4:	mov	r5, r0
   18fd6:	cbnz	r0, 1904e <btrfs_get_subvol@@Base+0xaa>
   18fd8:	mov	r0, r7
   18fda:	add.w	r9, r6, #92	; 0x5c
   18fde:	bl	172ca <rb_first@@Base>
   18fe2:	mov	r4, r0
   18fe4:	cbz	r4, 19044 <btrfs_get_subvol@@Base+0xa0>
   18fe6:	ldrd	r2, r3, [sp, #8]
   18fea:	mov	r1, r4
   18fec:	mov	r0, r7
   18fee:	bl	17984 <rb_first_postorder@@Base+0x5de>
   18ff2:	cmn.w	r0, #2
   18ff6:	mov	r8, r0
   18ff8:	bne.n	19006 <btrfs_get_subvol@@Base+0x62>
   18ffa:	mov	r0, r4
   18ffc:	bl	172ea <rb_next@@Base>
   19000:	mov	r4, r0
   19002:	mov	r5, r8
   19004:	b.n	18fe4 <btrfs_get_subvol@@Base+0x40>
   19006:	movs	r2, #0
   19008:	mov	r1, r4
   1900a:	mov	r0, r6
   1900c:	bl	173bc <rb_first_postorder@@Base+0x16>
   19010:	cbnz	r0, 19062 <btrfs_get_subvol@@Base+0xbe>
   19012:	movs	r2, #140	; 0x8c
   19014:	mov	r1, r4
   19016:	mov	r0, r6
   19018:	blx	8830 <memcpy@plt+0x4>
   1901c:	ldr.w	r0, [r4, #140]	; 0x8c
   19020:	cbnz	r0, 1907c <btrfs_get_subvol@@Base+0xd8>
   19022:	str.w	r0, [r6, #140]	; 0x8c
   19026:	ldr.w	r0, [r4, #144]	; 0x90
   1902a:	cbz	r0, 19030 <btrfs_get_subvol@@Base+0x8c>
   1902c:	blx	88cc <strdup@plt+0x4>
   19030:	str.w	r0, [r6, #144]	; 0x90
   19034:	ldr.w	r0, [r4, #148]	; 0x94
   19038:	cbz	r0, 1903e <btrfs_get_subvol@@Base+0x9a>
   1903a:	blx	88cc <strdup@plt+0x4>
   1903e:	movs	r5, #0
   19040:	str.w	r0, [r6, #148]	; 0x94
   19044:	ldr	r1, [pc, #76]	; (19094 <btrfs_get_subvol@@Base+0xf0>)
   19046:	mov	r0, r7
   19048:	add	r1, pc
   1904a:	bl	1ad82 <rb_free_nodes@@Base>
   1904e:	ldr	r2, [pc, #72]	; (19098 <btrfs_get_subvol@@Base+0xf4>)
   19050:	ldr	r3, [pc, #60]	; (19090 <btrfs_get_subvol@@Base+0xec>)
   19052:	add	r2, pc
   19054:	ldr	r3, [r2, r3]
   19056:	ldr	r2, [r3, #0]
   19058:	ldr	r3, [sp, #20]
   1905a:	eors	r2, r3
   1905c:	beq.n	19082 <btrfs_get_subvol@@Base+0xde>
   1905e:	blx	88e4 <__stack_chk_fail@plt>
   19062:	add.w	r1, r4, #92	; 0x5c
   19066:	mov	r0, r9
   19068:	blx	8948 <uuid_compare@plt>
   1906c:	cmp	r0, #0
   1906e:	beq.n	19012 <btrfs_get_subvol@@Base+0x6e>
   19070:	mov	r0, r4
   19072:	mov	r8, r5
   19074:	bl	172ea <rb_next@@Base>
   19078:	mov	r4, r0
   1907a:	b.n	19002 <btrfs_get_subvol@@Base+0x5e>
   1907c:	blx	88cc <strdup@plt+0x4>
   19080:	b.n	19022 <btrfs_get_subvol@@Base+0x7e>
   19082:	mov	r0, r5
   19084:	add	sp, #28
   19086:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1908a:	nop
   1908c:	stc2	0, cr0, [r8, #16]
   19090:	lsls	r4, r7, #9
   19092:	movs	r0, r0
   19094:	b.n	18a52 <btrfs_list_parse_sort_string@@Base+0xd6>
   19096:			; <UNDEFINED> instruction: 0xfffffcde
   1909a:	movs	r4, r0

0001909c <btrfs_list_path_for_root@@Base>:
   1909c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   190a0:	mov	r6, r2
   190a2:	ldr	r2, [pc, #168]	; (1914c <btrfs_list_path_for_root@@Base+0xb0>)
   190a4:	mov	r7, r3
   190a6:	ldr	r3, [pc, #168]	; (19150 <btrfs_list_path_for_root@@Base+0xb4>)
   190a8:	sub	sp, #28
   190aa:	add	r2, pc
   190ac:	add	r1, sp, #8
   190ae:	mov	r5, r0
   190b0:	ldr	r3, [r2, r3]
   190b2:	ldr	r3, [r3, #0]
   190b4:	str	r3, [sp, #20]
   190b6:	mov.w	r3, #0
   190ba:	bl	18b44 <btrfs_list_get_path_rootid@@Base>
   190be:	mov	r9, r0
   190c0:	cbz	r0, 190d8 <btrfs_list_path_for_root@@Base+0x3c>
   190c2:	mov	r4, r0
   190c4:	ldr	r2, [pc, #140]	; (19154 <btrfs_list_path_for_root@@Base+0xb8>)
   190c6:	ldr	r3, [pc, #136]	; (19150 <btrfs_list_path_for_root@@Base+0xb4>)
   190c8:	add	r2, pc
   190ca:	ldr	r3, [r2, r3]
   190cc:	ldr	r2, [r3, #0]
   190ce:	ldr	r3, [sp, #20]
   190d0:	eors	r2, r3
   190d2:	beq.n	19144 <btrfs_list_path_for_root@@Base+0xa8>
   190d4:	blx	88e4 <__stack_chk_fail@plt>
   190d8:	add.w	r8, sp, #4
   190dc:	mov	r0, r5
   190de:	mov	r1, r8
   190e0:	bl	17bae <rb_first_postorder@@Base+0x808>
   190e4:	subs	r4, r0, #0
   190e6:	blt.n	190c4 <btrfs_list_path_for_root@@Base+0x28>
   190e8:	mov	r1, r8
   190ea:	mov	r0, r5
   190ec:	bl	17b88 <rb_first_postorder@@Base+0x7e2>
   190f0:	subs	r4, r0, #0
   190f2:	blt.n	190c4 <btrfs_list_path_for_root@@Base+0x28>
   190f4:	mov	r0, r8
   190f6:	mov	r4, r9
   190f8:	bl	172da <rb_last@@Base>
   190fc:	mov	r5, r0
   190fe:	cbnz	r5, 1910c <btrfs_list_path_for_root@@Base+0x70>
   19100:	ldr	r1, [pc, #84]	; (19158 <btrfs_list_path_for_root@@Base+0xbc>)
   19102:	mov	r0, r8
   19104:	add	r1, pc
   19106:	bl	1ad82 <rb_free_nodes@@Base>
   1910a:	b.n	190c4 <btrfs_list_path_for_root@@Base+0x28>
   1910c:	ldrd	r2, r3, [sp, #8]
   19110:	mov	r1, r5
   19112:	mov	r0, r8
   19114:	bl	17984 <rb_first_postorder@@Base+0x5de>
   19118:	ldrd	r2, r3, [r5, #24]
   1911c:	adds	r0, #2
   1911e:	bne.n	1912c <btrfs_list_path_for_root@@Base+0x90>
   19120:	cmp	r3, r7
   19122:	it	eq
   19124:	cmpeq	r2, r6
   19126:	bne.n	1913a <btrfs_list_path_for_root@@Base+0x9e>
   19128:	movs	r4, #0
   1912a:	b.n	19100 <btrfs_list_path_for_root@@Base+0x64>
   1912c:	cmp	r3, r7
   1912e:	ittt	eq
   19130:	cmpeq	r2, r6
   19132:	ldreq.w	r4, [r5, #148]	; 0x94
   19136:	streq.w	r9, [r5, #148]	; 0x94
   1913a:	mov	r0, r5
   1913c:	bl	17316 <rb_prev@@Base>
   19140:	mov	r5, r0
   19142:	b.n	190fe <btrfs_list_path_for_root@@Base+0x62>
   19144:	mov	r0, r4
   19146:	add	sp, #28
   19148:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1914c:	stc2	0, cr0, [r6], {4}
   19150:	lsls	r4, r7, #9
   19152:	movs	r0, r0
   19154:	stc2l	0, cr0, [r8], #-16
   19158:	b.n	1899e <btrfs_list_parse_sort_string@@Base+0x22>
   1915a:	vtbl.8	d30, {d15-d16}, d29
   1915e:	mvns	r0, r6
   19160:	ldrd	r2, r3, [r0, #24]
   19164:	ldrd	ip, r0, [r0, #32]
   19168:	ldrd	r4, r5, [r1, #8]
   1916c:	adds.w	r8, r2, ip
   19170:	adc.w	r9, r3, r0
   19174:	cmp	r5, r9
   19176:	it	eq
   19178:	cmpeq	r4, r8
   1917a:	bcs.n	19198 <btrfs_list_path_for_root@@Base+0xfc>
   1917c:	ldrd	r0, r1, [r1, #16]
   19180:	adds	r6, r4, r0
   19182:	adc.w	r7, r5, r1
   19186:	cmp	r3, r7
   19188:	it	eq
   1918a:	cmpeq	r2, r6
   1918c:	ite	cs
   1918e:	movcs.w	r0, #4294967295	; 0xffffffff
   19192:	movcc	r0, #0
   19194:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   19198:	movs	r0, #1
   1919a:	b.n	19194 <btrfs_list_path_for_root@@Base+0xf8>
   1919c:	ldr	r2, [pc, #64]	; (191e0 <btrfs_list_path_for_root@@Base+0x144>)
   1919e:	ldr	r3, [pc, #68]	; (191e4 <btrfs_list_path_for_root@@Base+0x148>)
   191a0:	add	r2, pc
   191a2:	push	{lr}
   191a4:	sub	sp, #36	; 0x24
   191a6:	ldr	r3, [r2, r3]
   191a8:	ldr	r3, [r3, #0]
   191aa:	str	r3, [sp, #28]
   191ac:	mov.w	r3, #0
   191b0:	ldrd	r2, r3, [r1, #24]
   191b4:	strd	r2, r3, [sp, #8]
   191b8:	ldrd	r2, r3, [r1, #32]
   191bc:	mov	r1, sp
   191be:	strd	r2, r3, [sp, #16]
   191c2:	bl	1915c <btrfs_list_path_for_root@@Base+0xc0>
   191c6:	ldr	r2, [pc, #32]	; (191e8 <btrfs_list_path_for_root@@Base+0x14c>)
   191c8:	ldr	r3, [pc, #24]	; (191e4 <btrfs_list_path_for_root@@Base+0x148>)
   191ca:	add	r2, pc
   191cc:	ldr	r3, [r2, r3]
   191ce:	ldr	r2, [r3, #0]
   191d0:	ldr	r3, [sp, #28]
   191d2:	eors	r2, r3
   191d4:	beq.n	191da <btrfs_list_path_for_root@@Base+0x13e>
   191d6:	blx	88e4 <__stack_chk_fail@plt>
   191da:	add	sp, #36	; 0x24
   191dc:	ldr.w	pc, [sp], #4
   191e0:			; <UNDEFINED> instruction: 0xfb900004
   191e4:	lsls	r4, r7, #9
   191e6:	movs	r0, r0
   191e8:	smmls	r0, r6, r4, r0
   191ec:	b.w	87c8 <free@plt>
   191f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   191f4:	ldrd	r2, r3, [r0, #16]
   191f8:	ldrd	r8, r9, [r1]
   191fc:	cmp	r3, r9
   191fe:	it	eq
   19200:	cmpeq	r2, r8
   19202:	bcc.n	1924c <btrfs_list_path_for_root@@Base+0x1b0>
   19204:	cmp	r9, r3
   19206:	it	eq
   19208:	cmpeq	r8, r2
   1920a:	bcc.n	19246 <btrfs_list_path_for_root@@Base+0x1aa>
   1920c:	ldrd	r2, r3, [r0, #24]
   19210:	ldrd	ip, r0, [r0, #32]
   19214:	ldrd	r8, r9, [r1, #8]
   19218:	adds.w	r6, r2, ip
   1921c:	adc.w	r7, r3, r0
   19220:	cmp	r9, r7
   19222:	it	eq
   19224:	cmpeq	r8, r6
   19226:	bcs.n	1924c <btrfs_list_path_for_root@@Base+0x1b0>
   19228:	ldrd	r0, r1, [r1, #16]
   1922c:	adds.w	r4, r8, r0
   19230:	adc.w	r5, r9, r1
   19234:	cmp	r3, r5
   19236:	it	eq
   19238:	cmpeq	r2, r4
   1923a:	ite	cs
   1923c:	movcs.w	r0, #4294967295	; 0xffffffff
   19240:	movcc	r0, #0
   19242:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   19246:	mov.w	r0, #4294967295	; 0xffffffff
   1924a:	b.n	19242 <btrfs_list_path_for_root@@Base+0x1a6>
   1924c:	movs	r0, #1
   1924e:	b.n	19242 <btrfs_list_path_for_root@@Base+0x1a6>
   19250:	ldr	r2, [pc, #72]	; (1929c <btrfs_list_path_for_root@@Base+0x200>)
   19252:	ldr	r3, [pc, #76]	; (192a0 <btrfs_list_path_for_root@@Base+0x204>)
   19254:	add	r2, pc
   19256:	push	{lr}
   19258:	sub	sp, #36	; 0x24
   1925a:	ldr	r3, [r2, r3]
   1925c:	ldr	r3, [r3, #0]
   1925e:	str	r3, [sp, #28]
   19260:	mov.w	r3, #0
   19264:	ldrd	r2, r3, [r1, #16]
   19268:	strd	r2, r3, [sp]
   1926c:	ldrd	r2, r3, [r1, #24]
   19270:	strd	r2, r3, [sp, #8]
   19274:	ldrd	r2, r3, [r1, #32]
   19278:	mov	r1, sp
   1927a:	strd	r2, r3, [sp, #16]
   1927e:	bl	191f0 <btrfs_list_path_for_root@@Base+0x154>
   19282:	ldr	r2, [pc, #32]	; (192a4 <btrfs_list_path_for_root@@Base+0x208>)
   19284:	ldr	r3, [pc, #24]	; (192a0 <btrfs_list_path_for_root@@Base+0x204>)
   19286:	add	r2, pc
   19288:	ldr	r3, [r2, r3]
   1928a:	ldr	r2, [r3, #0]
   1928c:	ldr	r3, [sp, #28]
   1928e:	eors	r2, r3
   19290:	beq.n	19296 <btrfs_list_path_for_root@@Base+0x1fa>
   19292:	blx	88e4 <__stack_chk_fail@plt>
   19296:	add	sp, #36	; 0x24
   19298:	ldr.w	pc, [sp], #4
   1929c:			; <UNDEFINED> instruction: 0xfadc0004
   192a0:	lsls	r4, r7, #9
   192a2:	movs	r0, r0
   192a4:			; <UNDEFINED> instruction: 0xfaaa0004
   192a8:	ldr.w	ip, [pc, #80]	; 192fc <btrfs_list_path_for_root@@Base+0x260>
   192ac:	ldr	r4, [pc, #80]	; (19300 <btrfs_list_path_for_root@@Base+0x264>)
   192ae:	add	ip, pc
   192b0:	ldr	r3, [pc, #80]	; (19304 <btrfs_list_path_for_root@@Base+0x268>)
   192b2:	push	{lr}
   192b4:	sub	sp, #92	; 0x5c
   192b6:	ldr.w	r4, [ip, r4]
   192ba:	add	r3, pc
   192bc:	ldr	r4, [r4, #0]
   192be:	str	r4, [sp, #84]	; 0x54
   192c0:	mov.w	r4, #0
   192c4:	ldr	r4, [pc, #64]	; (19308 <btrfs_list_path_for_root@@Base+0x26c>)
   192c6:	ldr	r4, [r3, r4]
   192c8:	ldr	r3, [pc, #64]	; (1930c <btrfs_list_path_for_root@@Base+0x270>)
   192ca:	strd	r0, r2, [sp, #8]
   192ce:	add	r3, pc
   192d0:	ldr	r2, [pc, #60]	; (19310 <btrfs_list_path_for_root@@Base+0x274>)
   192d2:	strd	r1, r3, [sp]
   192d6:	movs	r1, #1
   192d8:	ldr	r3, [pc, #56]	; (19314 <btrfs_list_path_for_root@@Base+0x278>)
   192da:	add	r2, pc
   192dc:	ldr	r0, [r4, #0]
   192de:	add	r4, sp, #20
   192e0:	add	r3, pc
   192e2:	blx	8ca0 <__fprintf_chk@plt+0x4>
   192e6:	movs	r1, #16
   192e8:	mov	r0, r4
   192ea:	blx	8ae0 <backtrace@plt>
   192ee:	movs	r2, #2
   192f0:	mov	r1, r0
   192f2:	mov	r0, r4
   192f4:	blx	8e50 <backtrace_symbols_fd@plt>
   192f8:	blx	8e08 <abort@plt>
   192fc:			; <UNDEFINED> instruction: 0xfa820004
   19300:	lsls	r4, r7, #9
   19302:	movs	r0, r0
   19304:			; <UNDEFINED> instruction: 0xfa760004
   19308:	lsls	r4, r1, #10
   1930a:	movs	r0, r0
   1930c:	ldr	r5, [r5, #100]	; 0x64
   1930e:	movs	r2, r0
   19310:	subs	r4, #205	; 0xcd
   19312:	movs	r2, r0
   19314:	ldr	r0, [r0, #96]	; 0x60
   19316:	movs	r2, r0

00019318 <cache_tree_init@@Base>:
   19318:	movs	r3, #0
   1931a:	str	r3, [r0, #0]
   1931c:	bx	lr

0001931e <insert_cache_extent@@Base>:
   1931e:	ldr	r2, [pc, #8]	; (19328 <insert_cache_extent@@Base+0xa>)
   19320:	add	r2, pc
   19322:	b.w	1acfc <rb_insert@@Base>
   19326:	nop
   19328:	mrc2	15, 3, pc, cr9, cr15, {7}

0001932c <add_cache_extent@@Base>:
   1932c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   19330:	mov	r5, r0
   19332:	movs	r0, #40	; 0x28
   19334:	mov	r7, r2
   19336:	mov	r6, r3
   19338:	blx	8a94 <malloc@plt+0x4>
   1933c:	ldr.w	r8, [pc, #72]	; 19388 <add_cache_extent@@Base+0x5c>
   19340:	add	r8, pc
   19342:	mov	r4, r0
   19344:	cbz	r0, 19372 <add_cache_extent@@Base+0x46>
   19346:	movs	r2, #0
   19348:	movs	r3, #0
   1934a:	strd	r2, r3, [r0, #16]
   1934e:	mov	r1, r0
   19350:	ldrd	r2, r3, [sp, #24]
   19354:	strd	r7, r6, [r0, #24]
   19358:	strd	r2, r3, [r0, #32]
   1935c:	mov	r0, r5
   1935e:	bl	1931e <insert_cache_extent@@Base>
   19362:	mov	r5, r0
   19364:	cbz	r0, 1936c <add_cache_extent@@Base+0x40>
   19366:	mov	r0, r4
   19368:	blx	87cc <free@plt+0x4>
   1936c:	mov	r0, r5
   1936e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   19372:	ldr	r3, [pc, #24]	; (1938c <add_cache_extent@@Base+0x60>)
   19374:	ldr	r0, [pc, #24]	; (19390 <add_cache_extent@@Base+0x64>)
   19376:	ldr.w	r3, [r8, r3]
   1937a:	add	r0, pc
   1937c:	ldr	r1, [r3, #0]
   1937e:	blx	8de4 <fputs@plt+0x4>
   19382:	movs	r0, #1
   19384:	blx	8b58 <exit@plt>
   19388:	ldr??.w	r0, [r0, #4]
   1938c:	lsls	r4, r1, #10
   1938e:	movs	r0, r0
   19390:	ldr	r5, [r2, #32]
   19392:	movs	r2, r0

00019394 <insert_cache_extent2@@Base>:
   19394:	ldr	r2, [pc, #4]	; (1939c <insert_cache_extent2@@Base+0x8>)
   19396:	add	r2, pc
   19398:	b.w	1acfc <rb_insert@@Base>
   1939c:	mrc2	15, 5, pc, cr7, cr15, {7}

000193a0 <lookup_cache_extent@@Base>:
   193a0:	ldr.w	ip, [pc, #72]	; 193ec <lookup_cache_extent@@Base+0x4c>
   193a4:	ldr	r1, [pc, #72]	; (193f0 <lookup_cache_extent@@Base+0x50>)
   193a6:	add	ip, pc
   193a8:	push	{lr}
   193aa:	sub	sp, #36	; 0x24
   193ac:	ldr.w	r1, [ip, r1]
   193b0:	ldr	r1, [r1, #0]
   193b2:	str	r1, [sp, #28]
   193b4:	mov.w	r1, #0
   193b8:	strd	r2, r3, [sp, #8]
   193bc:	ldrd	r2, r3, [sp, #40]	; 0x28
   193c0:	mov	r1, sp
   193c2:	strd	r2, r3, [sp, #16]
   193c6:	movs	r3, #0
   193c8:	ldr	r2, [pc, #40]	; (193f4 <lookup_cache_extent@@Base+0x54>)
   193ca:	add	r2, pc
   193cc:	bl	1ad44 <rb_search@@Base>
   193d0:	ldr	r2, [pc, #36]	; (193f8 <lookup_cache_extent@@Base+0x58>)
   193d2:	ldr	r3, [pc, #28]	; (193f0 <lookup_cache_extent@@Base+0x50>)
   193d4:	add	r2, pc
   193d6:	ldr	r3, [r2, r3]
   193d8:	ldr	r2, [r3, #0]
   193da:	ldr	r3, [sp, #28]
   193dc:	eors	r2, r3
   193de:	beq.n	193e4 <lookup_cache_extent@@Base+0x44>
   193e0:	blx	88e4 <__stack_chk_fail@plt>
   193e4:	add	sp, #36	; 0x24
   193e6:	ldr.w	pc, [sp], #4
   193ea:	nop
   193ec:	vst1.8	{d0[0]}, [sl], r4
   193f0:	lsls	r4, r7, #9
   193f2:	movs	r0, r0
   193f4:	stc2	15, cr15, [pc, #1020]	; 197f4 <add_merge_cache_extent@@Base+0x284>
   193f8:	ldr??.w	r0, [ip, r4]

000193fc <lookup_cache_extent2@@Base>:
   193fc:	ldr.w	ip, [pc, #80]	; 19450 <lookup_cache_extent2@@Base+0x54>
   19400:	ldr	r1, [pc, #80]	; (19454 <lookup_cache_extent2@@Base+0x58>)
   19402:	add	ip, pc
   19404:	push	{lr}
   19406:	sub	sp, #36	; 0x24
   19408:	ldr.w	r1, [ip, r1]
   1940c:	ldr	r1, [r1, #0]
   1940e:	str	r1, [sp, #28]
   19410:	mov.w	r1, #0
   19414:	strd	r2, r3, [sp]
   19418:	ldrd	r2, r3, [sp, #40]	; 0x28
   1941c:	mov	r1, sp
   1941e:	strd	r2, r3, [sp, #8]
   19422:	ldrd	r2, r3, [sp, #48]	; 0x30
   19426:	strd	r2, r3, [sp, #16]
   1942a:	movs	r3, #0
   1942c:	ldr	r2, [pc, #40]	; (19458 <lookup_cache_extent2@@Base+0x5c>)
   1942e:	add	r2, pc
   19430:	bl	1ad44 <rb_search@@Base>
   19434:	ldr	r2, [pc, #36]	; (1945c <lookup_cache_extent2@@Base+0x60>)
   19436:	ldr	r3, [pc, #28]	; (19454 <lookup_cache_extent2@@Base+0x58>)
   19438:	add	r2, pc
   1943a:	ldr	r3, [r2, r3]
   1943c:	ldr	r2, [r3, #0]
   1943e:	ldr	r3, [sp, #28]
   19440:	eors	r2, r3
   19442:	beq.n	19448 <lookup_cache_extent2@@Base+0x4c>
   19444:	blx	88e4 <__stack_chk_fail@plt>
   19448:	add	sp, #36	; 0x24
   1944a:	ldr.w	pc, [sp], #4
   1944e:	nop
   19450:	vld4.8	{d0-d3}, [lr], r4
   19454:	lsls	r4, r7, #9
   19456:	movs	r0, r0
   19458:	ldc2	15, cr15, [pc, #1020]!	; 19858 <add_merge_cache_extent@@Base+0x2e8>
   1945c:	ldr??.w	r0, [r8, #4]

00019460 <search_cache_extent@@Base>:
   19460:	ldr.w	ip, [pc, #76]	; 194b0 <search_cache_extent@@Base+0x50>
   19464:	ldr	r1, [pc, #76]	; (194b4 <search_cache_extent@@Base+0x54>)
   19466:	add	ip, pc
   19468:	push	{lr}
   1946a:	sub	sp, #44	; 0x2c
   1946c:	ldr.w	r1, [ip, r1]
   19470:	ldr	r1, [r1, #0]
   19472:	str	r1, [sp, #36]	; 0x24
   19474:	mov.w	r1, #0
   19478:	strd	r2, r3, [sp, #16]
   1947c:	movs	r2, #1
   1947e:	movs	r3, #0
   19480:	strd	r2, r3, [sp, #24]
   19484:	add	r1, sp, #8
   19486:	ldr	r2, [pc, #48]	; (194b8 <search_cache_extent@@Base+0x58>)
   19488:	add	r3, sp, #4
   1948a:	add	r2, pc
   1948c:	bl	1ad44 <rb_search@@Base>
   19490:	cbnz	r0, 19494 <search_cache_extent@@Base+0x34>
   19492:	ldr	r0, [sp, #4]
   19494:	ldr	r2, [pc, #36]	; (194bc <search_cache_extent@@Base+0x5c>)
   19496:	ldr	r3, [pc, #28]	; (194b4 <search_cache_extent@@Base+0x54>)
   19498:	add	r2, pc
   1949a:	ldr	r3, [r2, r3]
   1949c:	ldr	r2, [r3, #0]
   1949e:	ldr	r3, [sp, #36]	; 0x24
   194a0:	eors	r2, r3
   194a2:	beq.n	194a8 <search_cache_extent@@Base+0x48>
   194a4:	blx	88e4 <__stack_chk_fail@plt>
   194a8:	add	sp, #44	; 0x2c
   194aa:	ldr.w	pc, [sp], #4
   194ae:	nop
   194b0:	str.w	r0, [sl, #4]
   194b4:	lsls	r4, r7, #9
   194b6:	movs	r0, r0
   194b8:	stc2l	15, cr15, [pc], {255}	; 0xff
   194bc:	ldrb.w	r0, [r8, #4]

000194c0 <search_cache_extent2@@Base>:
   194c0:	ldr.w	ip, [pc, #84]	; 19518 <search_cache_extent2@@Base+0x58>
   194c4:	ldr	r1, [pc, #84]	; (1951c <search_cache_extent2@@Base+0x5c>)
   194c6:	add	ip, pc
   194c8:	push	{lr}
   194ca:	sub	sp, #44	; 0x2c
   194cc:	ldr.w	r1, [ip, r1]
   194d0:	ldr	r1, [r1, #0]
   194d2:	str	r1, [sp, #36]	; 0x24
   194d4:	mov.w	r1, #0
   194d8:	strd	r2, r3, [sp, #8]
   194dc:	ldrd	r2, r3, [sp, #48]	; 0x30
   194e0:	add	r1, sp, #8
   194e2:	strd	r2, r3, [sp, #16]
   194e6:	movs	r2, #1
   194e8:	movs	r3, #0
   194ea:	strd	r2, r3, [sp, #24]
   194ee:	ldr	r2, [pc, #48]	; (19520 <search_cache_extent2@@Base+0x60>)
   194f0:	add	r3, sp, #4
   194f2:	add	r2, pc
   194f4:	bl	1ad44 <rb_search@@Base>
   194f8:	cbnz	r0, 194fc <search_cache_extent2@@Base+0x3c>
   194fa:	ldr	r0, [sp, #4]
   194fc:	ldr	r2, [pc, #36]	; (19524 <search_cache_extent2@@Base+0x64>)
   194fe:	ldr	r3, [pc, #28]	; (1951c <search_cache_extent2@@Base+0x5c>)
   19500:	add	r2, pc
   19502:	ldr	r3, [r2, r3]
   19504:	ldr	r2, [r3, #0]
   19506:	ldr	r3, [sp, #36]	; 0x24
   19508:	eors	r2, r3
   1950a:	beq.n	19510 <search_cache_extent2@@Base+0x50>
   1950c:	blx	88e4 <__stack_chk_fail@plt>
   19510:	add	sp, #44	; 0x2c
   19512:	ldr.w	pc, [sp], #4
   19516:	nop
   19518:	str??.w	r0, [sl, r4]
   1951c:	lsls	r4, r7, #9
   1951e:	movs	r0, r0
   19520:	ldc2l	15, cr15, [fp], #1020	; 0x3fc
   19524:	ldrh.w	r0, [r0, r4]

00019528 <first_cache_extent@@Base>:
   19528:	b.w	172ca <rb_first@@Base>

0001952c <last_cache_extent@@Base>:
   1952c:	b.w	172da <rb_last@@Base>

00019530 <prev_cache_extent@@Base>:
   19530:	b.w	17316 <rb_prev@@Base>

00019534 <next_cache_extent@@Base>:
   19534:	b.w	172ea <rb_next@@Base>

00019538 <remove_cache_extent@@Base>:
   19538:	mov	r3, r1
   1953a:	mov	r1, r0
   1953c:	mov	r0, r3
   1953e:	b.w	17054 <rb_erase@@Base>

00019542 <cache_tree_free_extents@@Base>:
   19542:	push	{r4, r5, r6, lr}
   19544:	mov	r5, r0
   19546:	mov	r6, r1
   19548:	mov	r0, r5
   1954a:	bl	19528 <first_cache_extent@@Base>
   1954e:	mov	r4, r0
   19550:	cbnz	r0, 19554 <cache_tree_free_extents@@Base+0x12>
   19552:	pop	{r4, r5, r6, pc}
   19554:	mov	r0, r5
   19556:	mov	r1, r4
   19558:	bl	19538 <remove_cache_extent@@Base>
   1955c:	mov	r0, r4
   1955e:	blx	r6
   19560:	b.n	19548 <cache_tree_free_extents@@Base+0x6>

00019562 <free_extent_cache_tree@@Base>:
   19562:	ldr	r1, [pc, #8]	; (1956c <free_extent_cache_tree@@Base+0xa>)
   19564:	add	r1, pc
   19566:	b.w	19542 <cache_tree_free_extents@@Base>
   1956a:	nop
   1956c:	stc2	15, cr15, [r5], {255}	; 0xff

00019570 <add_merge_cache_extent@@Base>:
   19570:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19574:	sub	sp, #36	; 0x24
   19576:	ldr	r4, [r0, #0]
   19578:	mov	r5, r0
   1957a:	ldr	r1, [sp, #72]	; 0x48
   1957c:	mov	sl, r2
   1957e:	mov	fp, r3
   19580:	str	r1, [sp, #0]
   19582:	ldr	r1, [sp, #76]	; 0x4c
   19584:	str	r1, [sp, #4]
   19586:	cmp	r4, #0
   19588:	beq.w	196e2 <add_merge_cache_extent@@Base+0x172>
   1958c:	bl	19460 <search_cache_extent@@Base>
   19590:	mov	r7, r0
   19592:	cbnz	r0, 195a4 <add_merge_cache_extent@@Base+0x34>
   19594:	mov	r0, r5
   19596:	bl	1952c <last_cache_extent@@Base>
   1959a:	mov	r4, r0
   1959c:	cmp	r0, #0
   1959e:	bne.n	19614 <add_merge_cache_extent@@Base+0xa4>
   195a0:	movs	r7, #0
   195a2:	b.n	19652 <add_merge_cache_extent@@Base+0xe2>
   195a4:	ldrd	r2, r3, [r0, #24]
   195a8:	cmp	r3, fp
   195aa:	it	eq
   195ac:	cmpeq	r2, sl
   195ae:	bcc.n	195de <add_merge_cache_extent@@Base+0x6e>
   195b0:	bl	19530 <prev_cache_extent@@Base>
   195b4:	mov	r4, r0
   195b6:	mov	r0, r7
   195b8:	ldr	r3, [sp, #0]
   195ba:	adds.w	r3, sl, r3
   195be:	str	r3, [sp, #8]
   195c0:	ldr	r3, [sp, #4]
   195c2:	adc.w	r3, fp, r3
   195c6:	str	r3, [sp, #12]
   195c8:	ldrd	r6, r7, [sp, #8]
   195cc:	ldrd	r2, r3, [r0, #24]
   195d0:	cmp	r3, r7
   195d2:	it	eq
   195d4:	cmpeq	r2, r6
   195d6:	bcc.w	196ea <add_merge_cache_extent@@Base+0x17a>
   195da:	cbz	r4, 1961c <add_merge_cache_extent@@Base+0xac>
   195dc:	b.n	195e8 <add_merge_cache_extent@@Base+0x78>
   195de:	bl	19534 <next_cache_extent@@Base>
   195e2:	mov	r4, r7
   195e4:	cmp	r0, #0
   195e6:	bne.n	195b8 <add_merge_cache_extent@@Base+0x48>
   195e8:	ldrd	r2, r1, [r4, #32]
   195ec:	ldrd	r3, r7, [r4, #24]
   195f0:	adds	r3, r3, r2
   195f2:	str	r3, [sp, #16]
   195f4:	adc.w	r3, r7, r1
   195f8:	str	r3, [sp, #20]
   195fa:	ldrd	r2, r3, [sp, #16]
   195fe:	cmp	fp, r3
   19600:	it	eq
   19602:	cmpeq	sl, r2
   19604:	bcs.n	19618 <add_merge_cache_extent@@Base+0xa8>
   19606:	ldr	r0, [pc, #248]	; (19700 <add_merge_cache_extent@@Base+0x190>)
   19608:	movs	r2, #1
   1960a:	mov.w	r1, #306	; 0x132
   1960e:	add	r0, pc
   19610:	bl	192a8 <btrfs_list_path_for_root@@Base+0x20c>
   19614:	mov	r0, r7
   19616:	b.n	195e8 <add_merge_cache_extent@@Base+0x78>
   19618:	cmp	r0, #0
   1961a:	beq.n	195a0 <add_merge_cache_extent@@Base+0x30>
   1961c:	ldr	r1, [sp, #0]
   1961e:	ldrd	r2, r3, [r0, #24]
   19622:	adds.w	r8, sl, r1
   19626:	ldr	r1, [sp, #4]
   19628:	adc.w	r9, fp, r1
   1962c:	cmp	r9, r3
   1962e:	it	eq
   19630:	cmpeq	r8, r2
   19632:	bne.n	195a0 <add_merge_cache_extent@@Base+0x30>
   19634:	ldrd	r3, r2, [r0, #32]
   19638:	movs	r7, #1
   1963a:	strd	sl, fp, [r0, #24]
   1963e:	adds.w	r3, r8, r3
   19642:	adc.w	r2, r9, r2
   19646:	subs.w	r3, r3, sl
   1964a:	sbc.w	r2, r2, fp
   1964e:	strd	r3, r2, [r0, #32]
   19652:	cbz	r4, 196a8 <add_merge_cache_extent@@Base+0x138>
   19654:	ldrd	ip, lr, [r4, #24]
   19658:	ldr	r3, [r4, #32]
   1965a:	adds.w	r3, ip, r3
   1965e:	str	r3, [sp, #24]
   19660:	ldr	r3, [r4, #36]	; 0x24
   19662:	adc.w	r3, lr, r3
   19666:	str	r3, [sp, #28]
   19668:	ldrd	r2, r3, [sp, #24]
   1966c:	cmp	r3, fp
   1966e:	it	eq
   19670:	cmpeq	r2, sl
   19672:	bne.n	196e6 <add_merge_cache_extent@@Base+0x176>
   19674:	cbz	r7, 196c6 <add_merge_cache_extent@@Base+0x156>
   19676:	ldrd	r3, r2, [r0, #24]
   1967a:	ldr	r1, [r0, #32]
   1967c:	adds	r3, r3, r1
   1967e:	ldr	r1, [r0, #36]	; 0x24
   19680:	adc.w	r2, r1, r2
   19684:	subs.w	r3, r3, ip
   19688:	sbc.w	r2, r2, lr
   1968c:	strd	r3, r2, [r0, #32]
   19690:	ldrd	r2, r3, [r4, #24]
   19694:	mov	r1, r4
   19696:	strd	r2, r3, [r0, #24]
   1969a:	mov	r0, r5
   1969c:	bl	19538 <remove_cache_extent@@Base>
   196a0:	mov	r0, r4
   196a2:	blx	87cc <free@plt+0x4>
   196a6:	mov	r4, r7
   196a8:	orrs.w	r3, r7, r4
   196ac:	bne.n	196f6 <add_merge_cache_extent@@Base+0x186>
   196ae:	ldr	r3, [sp, #0]
   196b0:	mov	r2, sl
   196b2:	mov	r0, r5
   196b4:	str	r3, [sp, #72]	; 0x48
   196b6:	ldr	r3, [sp, #4]
   196b8:	str	r3, [sp, #76]	; 0x4c
   196ba:	mov	r3, fp
   196bc:	add	sp, #36	; 0x24
   196be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   196c2:	b.w	1932c <add_cache_extent@@Base>
   196c6:	ldr	r3, [sp, #0]
   196c8:	adds.w	r1, sl, r3
   196cc:	ldr	r3, [sp, #4]
   196ce:	adc.w	r2, fp, r3
   196d2:	subs.w	r1, r1, ip
   196d6:	sbc.w	r2, r2, lr
   196da:	strd	r1, r2, [r4, #32]
   196de:	movs	r4, #1
   196e0:	b.n	196a8 <add_merge_cache_extent@@Base+0x138>
   196e2:	mov	r7, r4
   196e4:	b.n	196a8 <add_merge_cache_extent@@Base+0x138>
   196e6:	movs	r4, #0
   196e8:	b.n	196a8 <add_merge_cache_extent@@Base+0x138>
   196ea:	ldr	r0, [pc, #24]	; (19704 <add_merge_cache_extent@@Base+0x194>)
   196ec:	movs	r2, #1
   196ee:	movw	r1, #305	; 0x131
   196f2:	add	r0, pc
   196f4:	b.n	19610 <add_merge_cache_extent@@Base+0xa0>
   196f6:	movs	r0, #0
   196f8:	add	sp, #36	; 0x24
   196fa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   196fe:	nop
   19700:	ldr	r1, [r4, #44]	; 0x2c
   19702:	movs	r2, r0
   19704:	ldr	r6, [r4, #32]
   19706:	movs	r2, r0
   19708:	ldrd	r3, r2, [r0, #48]	; 0x30
   1970c:	push	{r4, lr}
   1970e:	adds	r3, #1
   19710:	ldrd	r1, r4, [r0, #40]	; 0x28
   19714:	adc.w	r2, r2, #0
   19718:	subs	r3, r3, r1
   1971a:	sbc.w	r2, r2, r4
   1971e:	strd	r1, r4, [r0, #24]
   19722:	strd	r3, r2, [r0, #32]
   19726:	pop	{r4, pc}
   19728:	push	{r3, lr}
   1972a:	movs	r0, #72	; 0x48
   1972c:	blx	8a94 <malloc@plt+0x4>
   19730:	cbz	r0, 19748 <add_merge_cache_extent@@Base+0x1d8>
   19732:	movs	r2, #0
   19734:	movs	r3, #0
   19736:	mov.w	ip, #1
   1973a:	movs	r1, #0
   1973c:	strd	r2, r3, [r0, #16]
   19740:	strd	ip, r1, [r0, #56]	; 0x38
   19744:	strd	r2, r3, [r0, #64]	; 0x40
   19748:	pop	{r3, pc}
   1974a:	push	{r3, r4, r5, r6, r7, lr}
   1974c:	mov	r4, r0
   1974e:	ldr	r7, [sp, #24]
   19750:	movs	r0, #1
   19752:	mov	r6, r2
   19754:	mov	r5, r3
   19756:	add.w	r1, r7, #96	; 0x60
   1975a:	blx	8718 <calloc@plt+0x4>
   1975e:	cbz	r0, 1979e <add_merge_cache_extent@@Base+0x22e>
   19760:	movs	r3, #1
   19762:	movs	r1, #0
   19764:	mov.w	r2, #4294967295	; 0xffffffff
   19768:	strd	r3, r1, [r0, #80]	; 0x50
   1976c:	str	r4, [r0, #92]	; 0x5c
   1976e:	mov.w	r3, #4294967295	; 0xffffffff
   19772:	adds	r4, #64	; 0x40
   19774:	str	r3, [r0, #88]	; 0x58
   19776:	strd	r6, r5, [r0, #40]	; 0x28
   1977a:	mov.w	r3, #4294967295	; 0xffffffff
   1977e:	str	r7, [r0, #76]	; 0x4c
   19780:	strd	r2, r3, [r0, #48]	; 0x30
   19784:	add.w	r3, r0, #68	; 0x44
   19788:	strd	r6, r5, [r0, #24]
   1978c:	strd	r3, r3, [r0, #68]	; 0x44
   19790:	add.w	r3, r0, #60	; 0x3c
   19794:	strd	r7, r1, [r0, #32]
   19798:	str	r4, [r0, #56]	; 0x38
   1979a:	strd	r3, r3, [r0, #60]	; 0x3c
   1979e:	pop	{r3, r4, r5, r6, r7, pc}
   197a0:	ldr.w	ip, [pc, #104]	; 1980c <add_merge_cache_extent@@Base+0x29c>
   197a4:	push	{r4, r5, lr}
   197a6:	add	ip, pc
   197a8:	ldr	r5, [pc, #100]	; (19810 <add_merge_cache_extent@@Base+0x2a0>)
   197aa:	sub	sp, #92	; 0x5c
   197ac:	ldr	r4, [pc, #100]	; (19814 <add_merge_cache_extent@@Base+0x2a4>)
   197ae:	ldr.w	r5, [ip, r5]
   197b2:	add	r4, pc
   197b4:	ldr	r5, [r5, #0]
   197b6:	str	r5, [sp, #84]	; 0x54
   197b8:	mov.w	r5, #0
   197bc:	cbz	r3, 197f2 <add_merge_cache_extent@@Base+0x282>
   197be:	ldr	r5, [pc, #88]	; (19818 <add_merge_cache_extent@@Base+0x2a8>)
   197c0:	ldr	r4, [r4, r5]
   197c2:	strd	r2, r1, [sp]
   197c6:	movs	r1, #1
   197c8:	strd	r0, r3, [sp, #8]
   197cc:	ldr	r2, [pc, #76]	; (1981c <add_merge_cache_extent@@Base+0x2ac>)
   197ce:	ldr	r3, [pc, #80]	; (19820 <add_merge_cache_extent@@Base+0x2b0>)
   197d0:	ldr	r0, [r4, #0]
   197d2:	add	r4, sp, #20
   197d4:	add	r3, pc
   197d6:	add	r2, pc
   197d8:	blx	8ca0 <__fprintf_chk@plt+0x4>
   197dc:	movs	r1, #16
   197de:	mov	r0, r4
   197e0:	blx	8ae0 <backtrace@plt>
   197e4:	movs	r2, #2
   197e6:	mov	r1, r0
   197e8:	mov	r0, r4
   197ea:	blx	8e50 <backtrace_symbols_fd@plt>
   197ee:	blx	8e08 <abort@plt>
   197f2:	ldr	r2, [pc, #48]	; (19824 <add_merge_cache_extent@@Base+0x2b4>)
   197f4:	ldr	r3, [pc, #24]	; (19810 <add_merge_cache_extent@@Base+0x2a0>)
   197f6:	add	r2, pc
   197f8:	ldr	r3, [r2, r3]
   197fa:	ldr	r2, [r3, #0]
   197fc:	ldr	r3, [sp, #84]	; 0x54
   197fe:	eors	r2, r3
   19800:	beq.n	19806 <add_merge_cache_extent@@Base+0x296>
   19802:	blx	88e4 <__stack_chk_fail@plt>
   19806:	add	sp, #92	; 0x5c
   19808:	pop	{r4, r5, pc}
   1980a:	nop
   1980c:			; <UNDEFINED> instruction: 0xf58a0004
   19810:	lsls	r4, r7, #9
   19812:	movs	r0, r0
   19814:	sbcs.w	r0, lr, #8650752	; 0x840000
   19818:	lsls	r4, r1, #10
   1981a:	movs	r0, r0
   1981c:	adds	r7, #209	; 0xd1
   1981e:	movs	r2, r0
   19820:	ldr	r6, [r7, #20]
   19822:	movs	r2, r0
   19824:			; <UNDEFINED> instruction: 0xf53a0004
   19828:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1982c:	mov	r4, r2
   1982e:	ldrd	r2, r3, [r1, #40]	; 0x28
   19832:	mov	r5, r1
   19834:	ldrd	r6, r8, [sp, #24]
   19838:	mov	r7, r0
   1983a:	mov	r0, r4
   1983c:	strd	r2, r3, [r4, #40]	; 0x28
   19840:	adds.w	r2, r6, #4294967295	; 0xffffffff
   19844:	adc.w	r3, r8, #4294967295	; 0xffffffff
   19848:	strd	r2, r3, [r4, #48]	; 0x30
   1984c:	ldr	r3, [r1, #60]	; 0x3c
   1984e:	str	r3, [r4, #60]	; 0x3c
   19850:	bl	19708 <add_merge_cache_extent@@Base+0x198>
   19854:	mov	r0, r5
   19856:	strd	r6, r8, [r5, #40]	; 0x28
   1985a:	bl	19708 <add_merge_cache_extent@@Base+0x198>
   1985e:	mov	r1, r4
   19860:	mov	r0, r7
   19862:	bl	1931e <insert_cache_extent@@Base>
   19866:	ldr	r1, [pc, #20]	; (1987c <add_merge_cache_extent@@Base+0x30c>)
   19868:	movs	r2, #185	; 0xb9
   1986a:	add	r1, pc
   1986c:	mov	r3, r0
   1986e:	ldr	r0, [pc, #16]	; (19880 <add_merge_cache_extent@@Base+0x310>)
   19870:	add	r0, pc
   19872:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19876:	movs	r0, #0
   19878:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1987c:	ldr	r4, [r5, #36]	; 0x24
   1987e:	movs	r2, r0
   19880:	str	r5, [r1, r0]
   19882:	movs	r2, r0
   19884:	ldr	r1, [pc, #124]	; (19904 <add_merge_cache_extent@@Base+0x394>)
   19886:	movw	r2, #649	; 0x289
   1988a:	push	{r3, r4, r5, lr}
   1988c:	mov	r4, r0
   1988e:	ldr	r5, [r0, #56]	; 0x38
   19890:	add	r1, pc
   19892:	ldr	r3, [r0, #80]	; 0x50
   19894:	adds	r1, #12
   19896:	ldr	r0, [pc, #112]	; (19908 <add_merge_cache_extent@@Base+0x398>)
   19898:	add	r0, pc
   1989a:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   1989e:	cbz	r5, 198fe <add_merge_cache_extent@@Base+0x38e>
   198a0:	ldrd	r2, r3, [r5, #16]
   198a4:	movs	r1, #0
   198a6:	ldr	r0, [r4, #76]	; 0x4c
   198a8:	cmp	r3, r1
   198aa:	it	eq
   198ac:	cmpeq	r2, r0
   198ae:	ite	cc
   198b0:	movcc	r3, #1
   198b2:	movcs	r3, #0
   198b4:	ldr	r1, [pc, #84]	; (1990c <add_merge_cache_extent@@Base+0x39c>)
   198b6:	movw	r2, #650	; 0x28a
   198ba:	ldr	r0, [pc, #84]	; (19910 <add_merge_cache_extent@@Base+0x3a0>)
   198bc:	add	r1, pc
   198be:	adds	r1, #12
   198c0:	add	r0, pc
   198c2:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   198c6:	ldrd	r1, r2, [r4, #60]	; 0x3c
   198ca:	add.w	r3, r4, #60	; 0x3c
   198ce:	str	r2, [r1, #4]
   198d0:	str	r1, [r2, #0]
   198d2:	strd	r3, r3, [r4, #60]	; 0x3c
   198d6:	ldr	r3, [r4, #84]	; 0x54
   198d8:	lsls	r3, r3, #20
   198da:	bmi.n	198f4 <add_merge_cache_extent@@Base+0x384>
   198dc:	mov	r1, r4
   198de:	adds	r0, r5, #4
   198e0:	bl	19538 <remove_cache_extent@@Base>
   198e4:	ldrd	r2, r3, [r5, #16]
   198e8:	ldr	r1, [r4, #76]	; 0x4c
   198ea:	subs	r2, r2, r1
   198ec:	sbc.w	r3, r3, #0
   198f0:	strd	r2, r3, [r5, #16]
   198f4:	mov	r0, r4
   198f6:	ldmia.w	sp!, {r3, r4, r5, lr}
   198fa:	b.w	87c8 <free@plt>
   198fe:	mov	r3, r5
   19900:	b.n	198b4 <add_merge_cache_extent@@Base+0x344>
   19902:	nop
   19904:	ldr	r6, [r0, #36]	; 0x24
   19906:	movs	r2, r0
   19908:	ldr	r6, [r0, #12]
   1990a:	movs	r2, r0
   1990c:	ldr	r2, [r3, #32]
   1990e:	movs	r2, r0
   19910:	ldr	r7, [r4, #8]
   19912:	movs	r2, r0
   19914:	push	{r3, r4, r5, lr}
   19916:	mov	r4, r0
   19918:	ldr	r5, [r0, #56]	; 0x38
   1991a:	movs	r2, #67	; 0x43
   1991c:	ldr	r1, [pc, #32]	; (19940 <add_merge_cache_extent@@Base+0x3d0>)
   1991e:	subs	r5, #1
   19920:	str	r5, [r0, #56]	; 0x38
   19922:	ldr	r0, [pc, #32]	; (19944 <add_merge_cache_extent@@Base+0x3d4>)
   19924:	add	r1, pc
   19926:	lsrs	r3, r5, #31
   19928:	adds	r1, #37	; 0x25
   1992a:	add	r0, pc
   1992c:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19930:	cbnz	r5, 1993c <add_merge_cache_extent@@Base+0x3cc>
   19932:	mov	r0, r4
   19934:	ldmia.w	sp!, {r3, r4, r5, lr}
   19938:	b.w	87c8 <free@plt>
   1993c:	pop	{r3, r4, r5, pc}
   1993e:	nop
   19940:	ldr	r2, [r6, #24]
   19942:	movs	r2, r0
   19944:	ldr	r0, [r4, #4]
   19946:	movs	r2, r0
   19948:	b.n	19914 <add_merge_cache_extent@@Base+0x3a4>
   1994a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1994e:	mov	r5, r0
   19950:	ldr	r3, [r1, #60]	; 0x3c
   19952:	mov	r4, r1
   19954:	tst.w	r3, #10
   19958:	bne.n	199e0 <add_merge_cache_extent@@Base+0x470>
   1995a:	mov	r0, r1
   1995c:	bl	19530 <prev_cache_extent@@Base>
   19960:	mov	sl, r0
   19962:	cbz	r0, 199a0 <add_merge_cache_extent@@Base+0x430>
   19964:	ldrd	r3, r2, [r4, #40]	; 0x28
   19968:	adds.w	r8, r3, #4294967295	; 0xffffffff
   1996c:	adc.w	r9, r2, #4294967295	; 0xffffffff
   19970:	ldrd	r2, r3, [r0, #48]	; 0x30
   19974:	cmp	r3, r9
   19976:	it	eq
   19978:	cmpeq	r2, r8
   1997a:	bne.n	199a0 <add_merge_cache_extent@@Base+0x430>
   1997c:	ldr	r2, [r0, #60]	; 0x3c
   1997e:	ldr	r3, [r4, #60]	; 0x3c
   19980:	cmp	r2, r3
   19982:	bne.n	199a0 <add_merge_cache_extent@@Base+0x430>
   19984:	ldrd	r2, r3, [r0, #40]	; 0x28
   19988:	mov	r0, r4
   1998a:	strd	r2, r3, [r4, #40]	; 0x28
   1998e:	bl	19708 <add_merge_cache_extent@@Base+0x198>
   19992:	mov	r0, r5
   19994:	mov	r1, sl
   19996:	bl	19538 <remove_cache_extent@@Base>
   1999a:	mov	r0, sl
   1999c:	bl	19914 <add_merge_cache_extent@@Base+0x3a4>
   199a0:	mov	r0, r4
   199a2:	bl	19534 <next_cache_extent@@Base>
   199a6:	cbz	r0, 199e0 <add_merge_cache_extent@@Base+0x470>
   199a8:	ldrd	r3, r2, [r4, #48]	; 0x30
   199ac:	adds	r6, r3, #1
   199ae:	adc.w	r7, r2, #0
   199b2:	ldrd	r2, r3, [r0, #40]	; 0x28
   199b6:	cmp	r3, r7
   199b8:	it	eq
   199ba:	cmpeq	r2, r6
   199bc:	bne.n	199e0 <add_merge_cache_extent@@Base+0x470>
   199be:	ldr	r2, [r0, #60]	; 0x3c
   199c0:	ldr	r3, [r4, #60]	; 0x3c
   199c2:	cmp	r2, r3
   199c4:	bne.n	199e0 <add_merge_cache_extent@@Base+0x470>
   199c6:	ldrd	r2, r3, [r4, #40]	; 0x28
   199ca:	strd	r2, r3, [r0, #40]	; 0x28
   199ce:	bl	19708 <add_merge_cache_extent@@Base+0x198>
   199d2:	mov	r0, r5
   199d4:	mov	r1, r4
   199d6:	bl	19538 <remove_cache_extent@@Base>
   199da:	mov	r0, r4
   199dc:	bl	19914 <add_merge_cache_extent@@Base+0x3a4>
   199e0:	movs	r0, #0
   199e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   199e6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   199ea:	mov	r5, r0
   199ec:	ldrd	r8, r9, [sp, #32]
   199f0:	mov	r4, r1
   199f2:	ldr.w	sl, [pc, #96]	; 19a54 <add_merge_cache_extent@@Base+0x4e4>
   199f6:	mov	r7, r3
   199f8:	cmp	r9, r3
   199fa:	ldr	r0, [pc, #92]	; (19a58 <add_merge_cache_extent@@Base+0x4e8>)
   199fc:	add	sl, pc
   199fe:	it	eq
   19a00:	cmpeq	r8, r2
   19a02:	add.w	sl, sl, #61	; 0x3d
   19a06:	mov	r6, r2
   19a08:	ite	cc
   19a0a:	movcc	r3, #1
   19a0c:	movcs	r3, #0
   19a0e:	mov	r1, sl
   19a10:	add	r0, pc
   19a12:	movs	r2, #158	; 0x9e
   19a14:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19a18:	ldr	r2, [sp, #40]	; 0x28
   19a1a:	ldr	r3, [r4, #60]	; 0x3c
   19a1c:	mov	r0, r4
   19a1e:	strd	r6, r7, [r4, #40]	; 0x28
   19a22:	orrs	r3, r2
   19a24:	strd	r8, r9, [r4, #48]	; 0x30
   19a28:	str	r3, [r4, #60]	; 0x3c
   19a2a:	bl	19708 <add_merge_cache_extent@@Base+0x198>
   19a2e:	mov	r1, r4
   19a30:	mov	r0, r5
   19a32:	bl	1931e <insert_cache_extent@@Base>
   19a36:	movs	r2, #164	; 0xa4
   19a38:	mov	r1, sl
   19a3a:	mov	r3, r0
   19a3c:	ldr	r0, [pc, #28]	; (19a5c <add_merge_cache_extent@@Base+0x4ec>)
   19a3e:	add	r0, pc
   19a40:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19a44:	mov	r1, r4
   19a46:	mov	r0, r5
   19a48:	bl	1994a <add_merge_cache_extent@@Base+0x3da>
   19a4c:	movs	r0, #0
   19a4e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   19a52:	nop
   19a54:	ldr	r2, [r3, #12]
   19a56:	movs	r2, r0
   19a58:	str	r2, [r1, #120]	; 0x78
   19a5a:	movs	r2, r0
   19a5c:	ldr	r6, [pc, #252]	; (19b5c <extent_buffer_bitmap_set@@Base+0x26>)
   19a5e:	movs	r2, r0
   19a60:	push	{r3, r4, r5, lr}
   19a62:	mov	r4, r1
   19a64:	ldr	r3, [r1, #60]	; 0x3c
   19a66:	and.w	r5, r2, r3
   19a6a:	bic.w	r2, r3, r2
   19a6e:	str	r2, [r1, #60]	; 0x3c
   19a70:	cbnz	r2, 19a80 <add_merge_cache_extent@@Base+0x510>
   19a72:	bl	19538 <remove_cache_extent@@Base>
   19a76:	mov	r0, r4
   19a78:	bl	19914 <add_merge_cache_extent@@Base+0x3a4>
   19a7c:	mov	r0, r5
   19a7e:	pop	{r3, r4, r5, pc}
   19a80:	bl	1994a <add_merge_cache_extent@@Base+0x3da>
   19a84:	b.n	19a7c <add_merge_cache_extent@@Base+0x50c>
   19a86:	push	{r0, r1, r4, r5, r6, lr}
   19a88:	mov	r6, r1
   19a8a:	mov	r4, r0
   19a8c:	cbz	r0, 19ae8 <add_merge_cache_extent@@Base+0x578>
   19a8e:	cmn.w	r0, #4096	; 0x1000
   19a92:	bhi.n	19ae8 <add_merge_cache_extent@@Base+0x578>
   19a94:	ldr	r5, [r0, #80]	; 0x50
   19a96:	movw	r2, #665	; 0x299
   19a9a:	ldr	r1, [pc, #80]	; (19aec <add_merge_cache_extent@@Base+0x57c>)
   19a9c:	subs	r5, #1
   19a9e:	str	r5, [r0, #80]	; 0x50
   19aa0:	ldr	r0, [pc, #76]	; (19af0 <add_merge_cache_extent@@Base+0x580>)
   19aa2:	add	r1, pc
   19aa4:	lsrs	r3, r5, #31
   19aa6:	adds	r1, #74	; 0x4a
   19aa8:	add	r0, pc
   19aaa:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19aae:	cbnz	r5, 19ae8 <add_merge_cache_extent@@Base+0x578>
   19ab0:	ldr	r3, [r4, #84]	; 0x54
   19ab2:	lsls	r2, r3, #31
   19ab4:	bpl.n	19ac6 <add_merge_cache_extent@@Base+0x556>
   19ab6:	ldr	r3, [r4, #76]	; 0x4c
   19ab8:	ldr	r0, [pc, #56]	; (19af4 <add_merge_cache_extent@@Base+0x584>)
   19aba:	str	r3, [sp, #0]
   19abc:	add	r0, pc
   19abe:	ldrd	r2, r3, [r4, #40]	; 0x28
   19ac2:	bl	1a884 <__btrfs_warning@@Base>
   19ac6:	ldrd	r1, r2, [r4, #68]	; 0x44
   19aca:	add.w	r3, r4, #68	; 0x44
   19ace:	str	r2, [r1, #4]
   19ad0:	str	r1, [r2, #0]
   19ad2:	strd	r3, r3, [r4, #68]	; 0x44
   19ad6:	ldr	r3, [r4, #84]	; 0x54
   19ad8:	lsls	r3, r3, #20
   19ada:	bmi.n	19ade <add_merge_cache_extent@@Base+0x56e>
   19adc:	cbz	r6, 19ae8 <add_merge_cache_extent@@Base+0x578>
   19ade:	mov	r0, r4
   19ae0:	add	sp, #8
   19ae2:	ldmia.w	sp!, {r4, r5, r6, lr}
   19ae6:	b.n	19884 <add_merge_cache_extent@@Base+0x314>
   19ae8:	add	sp, #8
   19aea:	pop	{r4, r5, r6, pc}
   19aec:	ldr	r4, [r6, #0]
   19aee:	movs	r2, r0
   19af0:	str	r6, [r7, #108]	; 0x6c
   19af2:	movs	r2, r0
   19af4:	str	r7, [r6, #108]	; 0x6c
   19af6:	movs	r2, r0

00019af8 <extent_io_tree_init@@Base>:
   19af8:	push	{r4, lr}
   19afa:	mov	r4, r0
   19afc:	bl	19318 <cache_tree_init@@Base>
   19b00:	adds	r0, r4, #4
   19b02:	bl	19318 <cache_tree_init@@Base>
   19b06:	add.w	r3, r4, #8
   19b0a:	movs	r2, #0
   19b0c:	strd	r3, r3, [r4, #8]
   19b10:	movs	r3, #0
   19b12:	strd	r2, r3, [r4, #16]
   19b16:	bl	350dc <total_memory@@Base>
   19b1a:	movs	r3, #0
   19b1c:	str	r3, [r4, #28]
   19b1e:	lsrs	r0, r0, #2
   19b20:	str	r0, [r4, #24]
   19b22:	pop	{r4, pc}

00019b24 <extent_io_tree_init_cache_max@@Base>:
   19b24:	push	{r4, r5, r6, lr}
   19b26:	mov	r4, r0
   19b28:	mov	r6, r2
   19b2a:	mov	r5, r3
   19b2c:	bl	19af8 <extent_io_tree_init@@Base>
   19b30:	strd	r6, r5, [r4, #24]
   19b34:	pop	{r4, r5, r6, pc}

00019b36 <extent_buffer_bitmap_set@@Base>:
   19b36:	adds	r0, #96	; 0x60
   19b38:	add.w	r1, r1, r2, lsr #3
   19b3c:	push	{r4, r5, r6, lr}
   19b3e:	add	r1, r0
   19b40:	movs	r4, #255	; 0xff
   19b42:	and.w	r0, r2, #7
   19b46:	lsls	r4, r0
   19b48:	rsb	r5, r0, #8
   19b4c:	mov	r0, r3
   19b4e:	uxtb	r4, r4
   19b50:	cmp	r5, r0
   19b52:	bls.n	19b6e <extent_buffer_bitmap_set@@Base+0x38>
   19b54:	cbz	r0, 19b6c <extent_buffer_bitmap_set@@Base+0x36>
   19b56:	add	r2, r3
   19b58:	movs	r3, #255	; 0xff
   19b5a:	negs	r2, r2
   19b5c:	and.w	r2, r2, #7
   19b60:	asr.w	r2, r3, r2
   19b64:	ands	r4, r2
   19b66:	ldrb	r2, [r1, #0]
   19b68:	orrs	r4, r2
   19b6a:	strb	r4, [r1, #0]
   19b6c:	pop	{r4, r5, r6, pc}
   19b6e:	ldrb	r6, [r1, #0]
   19b70:	subs	r0, r0, r5
   19b72:	movs	r5, #8
   19b74:	orrs	r4, r6
   19b76:	strb.w	r4, [r1], #1
   19b7a:	movs	r4, #255	; 0xff
   19b7c:	b.n	19b50 <extent_buffer_bitmap_set@@Base+0x1a>

00019b7e <extent_buffer_bitmap_clear@@Base>:
   19b7e:	adds	r0, #96	; 0x60
   19b80:	add.w	r1, r1, r2, lsr #3
   19b84:	push	{r4, r5, r6, lr}
   19b86:	add	r1, r0
   19b88:	and.w	r4, r2, #7
   19b8c:	movs	r0, #255	; 0xff
   19b8e:	lsls	r0, r4
   19b90:	rsb	r5, r4, #8
   19b94:	mov	r4, r3
   19b96:	uxtb	r0, r0
   19b98:	cmp	r5, r4
   19b9a:	bls.n	19bb8 <extent_buffer_bitmap_clear@@Base+0x3a>
   19b9c:	cbz	r4, 19bb6 <extent_buffer_bitmap_clear@@Base+0x38>
   19b9e:	add	r2, r3
   19ba0:	movs	r3, #255	; 0xff
   19ba2:	negs	r2, r2
   19ba4:	and.w	r2, r2, #7
   19ba8:	asr.w	r2, r3, r2
   19bac:	ands	r0, r2
   19bae:	ldrb	r2, [r1, #0]
   19bb0:	bic.w	r0, r2, r0
   19bb4:	strb	r0, [r1, #0]
   19bb6:	pop	{r4, r5, r6, pc}
   19bb8:	ldrb	r6, [r1, #0]
   19bba:	subs	r4, r4, r5
   19bbc:	movs	r5, #8
   19bbe:	bic.w	r0, r6, r0
   19bc2:	strb.w	r0, [r1], #1
   19bc6:	movs	r0, #255	; 0xff
   19bc8:	b.n	19b98 <extent_buffer_bitmap_clear@@Base+0x1a>

00019bca <clear_extent_bits@@Base>:
   19bca:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19bce:	mov	r7, r3
   19bd0:	ldr	r3, [pc, #348]	; (19d30 <clear_extent_bits@@Base+0x166>)
   19bd2:	mov.w	r8, #0
   19bd6:	vpush	{d8}
   19bda:	mov	r9, r0
   19bdc:	add	r3, pc
   19bde:	mov	r6, r2
   19be0:	adds	r3, #102	; 0x66
   19be2:	mov	r4, r8
   19be4:	vmov	s16, r3
   19be8:	ldr	r3, [pc, #328]	; (19d34 <clear_extent_bits@@Base+0x16a>)
   19bea:	sub	sp, #12
   19bec:	add	r3, pc
   19bee:	vmov	s17, r3
   19bf2:	cbnz	r4, 19c00 <clear_extent_bits@@Base+0x36>
   19bf4:	bl	19728 <add_merge_cache_extent@@Base+0x1b8>
   19bf8:	mov	r4, r0
   19bfa:	cmp	r0, #0
   19bfc:	beq.w	19d28 <clear_extent_bits@@Base+0x15e>
   19c00:	mov	r2, r6
   19c02:	mov	r3, r7
   19c04:	mov	r0, r9
   19c06:	bl	19460 <search_cache_extent@@Base>
   19c0a:	mov	r5, r0
   19c0c:	cmp	r0, #0
   19c0e:	beq.w	19d20 <clear_extent_bits@@Base+0x156>
   19c12:	ldrd	r2, r3, [r0, #40]	; 0x28
   19c16:	ldrd	r0, r1, [sp, #56]	; 0x38
   19c1a:	cmp	r1, r3
   19c1c:	it	eq
   19c1e:	cmpeq	r0, r2
   19c20:	bcc.n	19d20 <clear_extent_bits@@Base+0x156>
   19c22:	cmp	r3, r7
   19c24:	ldrd	sl, fp, [r5, #48]	; 0x30
   19c28:	it	eq
   19c2a:	cmpeq	r2, r6
   19c2c:	bcs.n	19ca4 <clear_extent_bits@@Base+0xda>
   19c2e:	mov	r2, r4
   19c30:	mov	r1, r5
   19c32:	mov	r0, r9
   19c34:	strd	r6, r7, [sp]
   19c38:	bl	19828 <add_merge_cache_extent@@Base+0x2b8>
   19c3c:	vmov	r1, s16
   19c40:	movw	r2, #311	; 0x137
   19c44:	cmn.w	r0, #17
   19c48:	mov	r4, r0
   19c4a:	vmov	r0, s17
   19c4e:	ite	ne
   19c50:	movne	r3, #0
   19c52:	moveq	r3, #1
   19c54:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19c58:	cmp	r4, #0
   19c5a:	bne.n	19cf2 <clear_extent_bits@@Base+0x128>
   19c5c:	ldrd	r2, r3, [r5, #48]	; 0x30
   19c60:	ldrd	r0, r1, [sp, #56]	; 0x38
   19c64:	cmp	r1, r3
   19c66:	it	eq
   19c68:	cmpeq	r0, r2
   19c6a:	bcc.n	19c9e <clear_extent_bits@@Base+0xd4>
   19c6c:	ldr	r2, [sp, #64]	; 0x40
   19c6e:	mov	r1, r5
   19c70:	mov	r0, r9
   19c72:	bl	19a60 <add_merge_cache_extent@@Base+0x4f0>
   19c76:	cmp.w	fp, #4294967295	; 0xffffffff
   19c7a:	it	eq
   19c7c:	cmpeq.w	sl, #4294967295	; 0xffffffff
   19c80:	orr.w	r8, r8, r0
   19c84:	beq.n	19cf2 <clear_extent_bits@@Base+0x128>
   19c86:	adds.w	r6, sl, #1
   19c8a:	adc.w	r7, fp, #0
   19c8e:	ldrd	r2, r3, [sp, #56]	; 0x38
   19c92:	cmp	r3, r7
   19c94:	it	eq
   19c96:	cmpeq	r2, r6
   19c98:	bcs.n	19bf2 <clear_extent_bits@@Base+0x28>
   19c9a:	cbz	r4, 19cf2 <clear_extent_bits@@Base+0x128>
   19c9c:	b.n	19d20 <clear_extent_bits@@Base+0x156>
   19c9e:	ldrd	r6, r7, [r5, #40]	; 0x28
   19ca2:	b.n	19c8e <clear_extent_bits@@Base+0xc4>
   19ca4:	ldrd	r2, r3, [sp, #56]	; 0x38
   19ca8:	cmp	r3, fp
   19caa:	it	eq
   19cac:	cmpeq	r2, sl
   19cae:	bcs.n	19cfe <clear_extent_bits@@Base+0x134>
   19cb0:	ldr	r3, [sp, #56]	; 0x38
   19cb2:	mov	r1, r5
   19cb4:	mov	r0, r9
   19cb6:	adds	r2, r3, #1
   19cb8:	ldr	r3, [sp, #60]	; 0x3c
   19cba:	adc.w	r3, r3, #0
   19cbe:	strd	r2, r3, [sp]
   19cc2:	mov	r2, r4
   19cc4:	bl	19828 <add_merge_cache_extent@@Base+0x2b8>
   19cc8:	ldr	r1, [pc, #108]	; (19d38 <clear_extent_bits@@Base+0x16e>)
   19cca:	movw	r2, #333	; 0x14d
   19cce:	add	r1, pc
   19cd0:	adds	r1, #102	; 0x66
   19cd2:	adds	r0, #17
   19cd4:	ldr	r0, [pc, #100]	; (19d3c <clear_extent_bits@@Base+0x172>)
   19cd6:	it	ne
   19cd8:	movne	r3, #0
   19cda:	add	r0, pc
   19cdc:	it	eq
   19cde:	moveq	r3, #1
   19ce0:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19ce4:	ldr	r2, [sp, #64]	; 0x40
   19ce6:	mov	r1, r4
   19ce8:	mov	r0, r9
   19cea:	bl	19a60 <add_merge_cache_extent@@Base+0x4f0>
   19cee:	orr.w	r8, r8, r0
   19cf2:	mov	r0, r8
   19cf4:	add	sp, #12
   19cf6:	vpop	{d8}
   19cfa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19cfe:	adds.w	r6, sl, #1
   19d02:	ldr	r2, [sp, #64]	; 0x40
   19d04:	mov	r1, r5
   19d06:	mov	r0, r9
   19d08:	adc.w	r7, fp, #0
   19d0c:	bl	19a60 <add_merge_cache_extent@@Base+0x4f0>
   19d10:	cmp.w	fp, #4294967295	; 0xffffffff
   19d14:	it	eq
   19d16:	cmpeq.w	sl, #4294967295	; 0xffffffff
   19d1a:	orr.w	r8, r8, r0
   19d1e:	bne.n	19c8e <clear_extent_bits@@Base+0xc4>
   19d20:	mov	r0, r4
   19d22:	bl	19914 <add_merge_cache_extent@@Base+0x3a4>
   19d26:	b.n	19cf2 <clear_extent_bits@@Base+0x128>
   19d28:	mvn.w	r8, #11
   19d2c:	b.n	19cf2 <clear_extent_bits@@Base+0x128>
   19d2e:	nop
   19d30:	str	r2, [r7, #108]	; 0x6c
   19d32:	movs	r2, r0
   19d34:	str	r0, [r7, #92]	; 0x5c
   19d36:	movs	r2, r0
   19d38:	str	r0, [r1, #96]	; 0x60
   19d3a:	movs	r2, r0
   19d3c:	str	r2, [r1, #80]	; 0x50
   19d3e:	movs	r2, r0

00019d40 <set_extent_bits@@Base>:
   19d40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19d44:	mov	r7, r3
   19d46:	ldr	r3, [pc, #516]	; (19f4c <set_extent_bits@@Base+0x20c>)
   19d48:	mov	r9, r0
   19d4a:	vpush	{d8}
   19d4e:	mov	r6, r2
   19d50:	add	r3, pc
   19d52:	mov.w	r8, #0
   19d56:	adds	r3, #120	; 0x78
   19d58:	vmov	s16, r3
   19d5c:	ldr	r3, [pc, #496]	; (19f50 <set_extent_bits@@Base+0x210>)
   19d5e:	sub	sp, #28
   19d60:	add	r3, pc
   19d62:	ldrd	sl, fp, [sp, #72]	; 0x48
   19d66:	vmov	s17, r3
   19d6a:	cmp.w	r8, #0
   19d6e:	bne.n	19d7c <set_extent_bits@@Base+0x3c>
   19d70:	bl	19728 <add_merge_cache_extent@@Base+0x1b8>
   19d74:	mov	r8, r0
   19d76:	cmp	r0, #0
   19d78:	beq.w	19f44 <set_extent_bits@@Base+0x204>
   19d7c:	mov	r2, r6
   19d7e:	mov	r3, r7
   19d80:	mov	r0, r9
   19d82:	bl	19460 <search_cache_extent@@Base>
   19d86:	mov	r5, r0
   19d88:	cbnz	r0, 19dc8 <set_extent_bits@@Base+0x88>
   19d8a:	ldr	r3, [sp, #80]	; 0x50
   19d8c:	mov	r2, r6
   19d8e:	mov	r1, r8
   19d90:	mov	r0, r9
   19d92:	strd	sl, fp, [sp]
   19d96:	str	r3, [sp, #8]
   19d98:	mov	r3, r7
   19d9a:	bl	199e6 <add_merge_cache_extent@@Base+0x476>
   19d9e:	ldr	r1, [pc, #436]	; (19f54 <set_extent_bits@@Base+0x214>)
   19da0:	mov.w	r2, #382	; 0x17e
   19da4:	add	r1, pc
   19da6:	adds	r1, #120	; 0x78
   19da8:	cmn.w	r0, #17
   19dac:	mov	r4, r0
   19dae:	ldr	r0, [pc, #424]	; (19f58 <set_extent_bits@@Base+0x218>)
   19db0:	ite	ne
   19db2:	movne	r3, #0
   19db4:	moveq	r3, #1
   19db6:	add	r0, pc
   19db8:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19dbc:	mov	r0, r4
   19dbe:	add	sp, #28
   19dc0:	vpop	{d8}
   19dc4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19dc8:	ldrd	r2, r3, [r0, #40]	; 0x28
   19dcc:	ldrd	r0, r1, [r0, #48]	; 0x30
   19dd0:	cmp	r7, r3
   19dd2:	it	eq
   19dd4:	cmpeq	r6, r2
   19dd6:	strd	r0, r1, [sp, #16]
   19dda:	bne.n	19e24 <set_extent_bits@@Base+0xe4>
   19ddc:	cmp	fp, r1
   19dde:	it	eq
   19de0:	cmpeq	sl, r0
   19de2:	bcc.w	19efe <set_extent_bits@@Base+0x1be>
   19de6:	ldr	r3, [r5, #60]	; 0x3c
   19de8:	mov	r1, r5
   19dea:	ldr	r2, [sp, #80]	; 0x50
   19dec:	mov	r0, r9
   19dee:	orrs	r3, r2
   19df0:	str	r3, [r5, #60]	; 0x3c
   19df2:	bl	1994a <add_merge_cache_extent@@Base+0x3da>
   19df6:	ldrd	r3, r4, [sp, #16]
   19dfa:	adds	r4, #1
   19dfc:	it	eq
   19dfe:	cmpeq.w	r3, #4294967295	; 0xffffffff
   19e02:	beq.n	19e1c <set_extent_bits@@Base+0xdc>
   19e04:	ldr	r3, [sp, #16]
   19e06:	adds	r6, r3, #1
   19e08:	ldr	r3, [sp, #20]
   19e0a:	adc.w	r7, r3, #0
   19e0e:	cmp	fp, r7
   19e10:	it	eq
   19e12:	cmpeq	sl, r6
   19e14:	bcs.n	19d6a <set_extent_bits@@Base+0x2a>
   19e16:	cmp.w	r8, #0
   19e1a:	beq.n	19e86 <set_extent_bits@@Base+0x146>
   19e1c:	mov	r0, r8
   19e1e:	bl	19914 <add_merge_cache_extent@@Base+0x3a4>
   19e22:	b.n	19e86 <set_extent_bits@@Base+0x146>
   19e24:	cmp	r3, r7
   19e26:	it	eq
   19e28:	cmpeq	r2, r6
   19e2a:	bcs.n	19e9e <set_extent_bits@@Base+0x15e>
   19e2c:	mov	r2, r8
   19e2e:	mov	r1, r5
   19e30:	mov	r0, r9
   19e32:	strd	r6, r7, [sp]
   19e36:	bl	19828 <add_merge_cache_extent@@Base+0x2b8>
   19e3a:	ldr	r1, [pc, #288]	; (19f5c <set_extent_bits@@Base+0x21c>)
   19e3c:	movw	r2, #423	; 0x1a7
   19e40:	add	r1, pc
   19e42:	adds	r1, #120	; 0x78
   19e44:	cmn.w	r0, #17
   19e48:	mov	r4, r0
   19e4a:	ldr	r0, [pc, #276]	; (19f60 <set_extent_bits@@Base+0x220>)
   19e4c:	ite	ne
   19e4e:	movne	r3, #0
   19e50:	moveq	r3, #1
   19e52:	add	r0, pc
   19e54:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19e58:	cmp	r4, #0
   19e5a:	bne.n	19dbc <set_extent_bits@@Base+0x7c>
   19e5c:	ldrd	r2, r3, [r5, #48]	; 0x30
   19e60:	cmp	fp, r3
   19e62:	it	eq
   19e64:	cmpeq	sl, r2
   19e66:	bcc.n	19e96 <set_extent_bits@@Base+0x156>
   19e68:	ldr	r3, [r5, #60]	; 0x3c
   19e6a:	mov	r1, r5
   19e6c:	ldr	r2, [sp, #80]	; 0x50
   19e6e:	mov	r0, r9
   19e70:	orrs	r3, r2
   19e72:	str	r3, [r5, #60]	; 0x3c
   19e74:	bl	1994a <add_merge_cache_extent@@Base+0x3da>
   19e78:	ldrd	r2, r3, [sp, #16]
   19e7c:	adds	r3, #1
   19e7e:	it	eq
   19e80:	cmpeq.w	r2, #4294967295	; 0xffffffff
   19e84:	bne.n	19e8a <set_extent_bits@@Base+0x14a>
   19e86:	movs	r4, #0
   19e88:	b.n	19dbc <set_extent_bits@@Base+0x7c>
   19e8a:	ldr	r3, [sp, #16]
   19e8c:	adds	r6, r3, #1
   19e8e:	ldr	r3, [sp, #20]
   19e90:	adc.w	r7, r3, #0
   19e94:	b.n	19e9a <set_extent_bits@@Base+0x15a>
   19e96:	ldrd	r6, r7, [r5, #40]	; 0x28
   19e9a:	mov	r8, r4
   19e9c:	b.n	19e0e <set_extent_bits@@Base+0xce>
   19e9e:	cmp	r7, r3
   19ea0:	it	eq
   19ea2:	cmpeq	r6, r2
   19ea4:	bcs.n	19efe <set_extent_bits@@Base+0x1be>
   19ea6:	cmp	fp, r3
   19ea8:	it	eq
   19eaa:	cmpeq	sl, r2
   19eac:	bcc.n	19ef6 <set_extent_bits@@Base+0x1b6>
   19eae:	adds.w	r5, r2, #4294967295	; 0xffffffff
   19eb2:	adc.w	r3, r3, #4294967295	; 0xffffffff
   19eb6:	str	r3, [sp, #16]
   19eb8:	ldr	r3, [sp, #80]	; 0x50
   19eba:	mov	r2, r6
   19ebc:	mov	r1, r8
   19ebe:	mov	r0, r9
   19ec0:	str	r5, [sp, #0]
   19ec2:	str	r3, [sp, #8]
   19ec4:	ldr	r3, [sp, #16]
   19ec6:	str	r3, [sp, #4]
   19ec8:	mov	r3, r7
   19eca:	bl	199e6 <add_merge_cache_extent@@Base+0x476>
   19ece:	vmov	r1, s16
   19ed2:	mov.w	r2, #454	; 0x1c6
   19ed6:	cmn.w	r0, #17
   19eda:	mov	r4, r0
   19edc:	vmov	r0, s17
   19ee0:	ite	ne
   19ee2:	movne	r3, #0
   19ee4:	moveq	r3, #1
   19ee6:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19eea:	cmp	r4, #0
   19eec:	bne.w	19dbc <set_extent_bits@@Base+0x7c>
   19ef0:	ldr	r3, [sp, #16]
   19ef2:	adds	r6, r5, #1
   19ef4:	b.n	19e90 <set_extent_bits@@Base+0x150>
   19ef6:	mov	r5, sl
   19ef8:	str.w	fp, [sp, #16]
   19efc:	b.n	19eb8 <set_extent_bits@@Base+0x178>
   19efe:	adds.w	r2, sl, #1
   19f02:	mov	r1, r5
   19f04:	adc.w	r3, fp, #0
   19f08:	mov	r0, r9
   19f0a:	strd	r2, r3, [sp]
   19f0e:	mov	r2, r8
   19f10:	bl	19828 <add_merge_cache_extent@@Base+0x2b8>
   19f14:	ldr	r1, [pc, #76]	; (19f64 <set_extent_bits@@Base+0x224>)
   19f16:	mov.w	r2, #468	; 0x1d4
   19f1a:	add	r1, pc
   19f1c:	adds	r1, #120	; 0x78
   19f1e:	cmn.w	r0, #17
   19f22:	mov	r4, r0
   19f24:	ldr	r0, [pc, #64]	; (19f68 <set_extent_bits@@Base+0x228>)
   19f26:	ite	ne
   19f28:	movne	r3, #0
   19f2a:	moveq	r3, #1
   19f2c:	add	r0, pc
   19f2e:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   19f32:	ldr	r3, [r5, #60]	; 0x3c
   19f34:	ldr	r2, [sp, #80]	; 0x50
   19f36:	mov	r1, r8
   19f38:	mov	r0, r9
   19f3a:	orrs	r3, r2
   19f3c:	str	r3, [r5, #60]	; 0x3c
   19f3e:	bl	1994a <add_merge_cache_extent@@Base+0x3da>
   19f42:	b.n	19dbc <set_extent_bits@@Base+0x7c>
   19f44:	mvn.w	r4, #11
   19f48:	b.n	19dbc <set_extent_bits@@Base+0x7c>
   19f4a:	nop
   19f4c:	str	r6, [r0, #88]	; 0x58
   19f4e:	movs	r2, r0
   19f50:	str	r4, [r0, #72]	; 0x48
   19f52:	movs	r2, r0
   19f54:	str	r2, [r6, #80]	; 0x50
   19f56:	movs	r2, r0
   19f58:	str	r6, [r5, #64]	; 0x40
   19f5a:	movs	r2, r0
   19f5c:	str	r6, [r2, #72]	; 0x48
   19f5e:	movs	r2, r0
   19f60:	str	r2, [r2, #56]	; 0x38
   19f62:	movs	r2, r0
   19f64:	str	r4, [r7, #56]	; 0x38
   19f66:	movs	r2, r0
   19f68:	str	r0, [r7, #40]	; 0x28
   19f6a:	movs	r2, r0

00019f6c <set_extent_dirty@@Base>:
   19f6c:	push	{r4, r5, lr}
   19f6e:	sub	sp, #20
   19f70:	movs	r1, #1
   19f72:	ldrd	r4, r5, [sp, #32]
   19f76:	str	r1, [sp, #8]
   19f78:	strd	r4, r5, [sp]
   19f7c:	bl	19d40 <set_extent_bits@@Base>
   19f80:	add	sp, #20
   19f82:	pop	{r4, r5, pc}

00019f84 <clear_extent_dirty@@Base>:
   19f84:	push	{r4, r5, lr}
   19f86:	sub	sp, #20
   19f88:	movs	r1, #1
   19f8a:	ldrd	r4, r5, [sp, #32]
   19f8e:	str	r1, [sp, #8]
   19f90:	strd	r4, r5, [sp]
   19f94:	bl	19bca <clear_extent_bits@@Base>
   19f98:	add	sp, #20
   19f9a:	pop	{r4, r5, pc}

00019f9c <find_first_extent_bit@@Base>:
   19f9c:	push	{r3, r4, r5, r6, r7, lr}
   19f9e:	mov	r6, r2
   19fa0:	ldr	r4, [sp, #32]
   19fa2:	mov	r7, r3
   19fa4:	bl	19460 <search_cache_extent@@Base>
   19fa8:	cbz	r0, 19fda <find_first_extent_bit@@Base+0x3e>
   19faa:	ldrd	r2, r3, [r0, #48]	; 0x30
   19fae:	cmp	r3, r7
   19fb0:	it	eq
   19fb2:	cmpeq	r2, r6
   19fb4:	bcc.n	19fd4 <find_first_extent_bit@@Base+0x38>
   19fb6:	ldr	r3, [r0, #60]	; 0x3c
   19fb8:	tst	r4, r3
   19fba:	beq.n	19fd4 <find_first_extent_bit@@Base+0x38>
   19fbc:	ldrd	r4, r5, [r0, #40]	; 0x28
   19fc0:	ldr	r3, [sp, #24]
   19fc2:	strd	r4, r5, [r3]
   19fc6:	ldr	r3, [sp, #28]
   19fc8:	ldrd	r0, r1, [r0, #48]	; 0x30
   19fcc:	strd	r0, r1, [r3]
   19fd0:	movs	r0, #0
   19fd2:	pop	{r3, r4, r5, r6, r7, pc}
   19fd4:	bl	19534 <next_cache_extent@@Base>
   19fd8:	b.n	19fa8 <find_first_extent_bit@@Base+0xc>
   19fda:	movs	r0, #1
   19fdc:	b.n	19fd2 <find_first_extent_bit@@Base+0x36>

00019fde <test_range_bit@@Base>:
   19fde:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   19fe2:	mov	r4, r2
   19fe4:	ldrd	r8, r9, [sp, #32]
   19fe8:	mov	r5, r3
   19fea:	ldr	r7, [sp, #44]	; 0x2c
   19fec:	bl	19460 <search_cache_extent@@Base>
   19ff0:	movs	r6, #0
   19ff2:	cbnz	r0, 1a032 <test_range_bit@@Base+0x54>
   19ff4:	mov	r0, r6
   19ff6:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   19ffa:	cmp	r9, r3
   19ffc:	it	eq
   19ffe:	cmpeq	r8, r2
   1a000:	bcc.n	19ff4 <test_range_bit@@Base+0x16>
   1a002:	ldr	r3, [r0, #60]	; 0x3c
   1a004:	ldr	r2, [sp, #40]	; 0x28
   1a006:	tst	r2, r3
   1a008:	beq.n	1a02c <test_range_bit@@Base+0x4e>
   1a00a:	movs	r6, #1
   1a00c:	cmp	r7, #0
   1a00e:	beq.n	19ff4 <test_range_bit@@Base+0x16>
   1a010:	ldrd	r3, r2, [r0, #48]	; 0x30
   1a014:	adds	r4, r3, #1
   1a016:	adc.w	r5, r2, #0
   1a01a:	cmp	r9, r5
   1a01c:	it	eq
   1a01e:	cmpeq	r8, r4
   1a020:	bcc.n	19ff4 <test_range_bit@@Base+0x16>
   1a022:	bl	19534 <next_cache_extent@@Base>
   1a026:	cbnz	r0, 1a032 <test_range_bit@@Base+0x54>
   1a028:	cbnz	r7, 1a04a <test_range_bit@@Base+0x6c>
   1a02a:	b.n	19ff4 <test_range_bit@@Base+0x16>
   1a02c:	cmp	r7, #0
   1a02e:	beq.n	1a010 <test_range_bit@@Base+0x32>
   1a030:	b.n	1a04a <test_range_bit@@Base+0x6c>
   1a032:	cmp	r9, r5
   1a034:	it	eq
   1a036:	cmpeq	r8, r4
   1a038:	bcc.n	19ff4 <test_range_bit@@Base+0x16>
   1a03a:	ldrd	r2, r3, [r0, #40]	; 0x28
   1a03e:	cmp	r7, #0
   1a040:	beq.n	19ffa <test_range_bit@@Base+0x1c>
   1a042:	cmp	r5, r3
   1a044:	it	eq
   1a046:	cmpeq	r4, r2
   1a048:	bcs.n	1a002 <test_range_bit@@Base+0x24>
   1a04a:	movs	r6, #0
   1a04c:	b.n	19ff4 <test_range_bit@@Base+0x16>

0001a04e <set_state_private@@Base>:
   1a04e:	push	{r3, r4, r5, lr}
   1a050:	mov	r4, r2
   1a052:	mov	r5, r3
   1a054:	bl	19460 <search_cache_extent@@Base>
   1a058:	cbz	r0, 1a072 <set_state_private@@Base+0x24>
   1a05a:	ldrd	r2, r3, [r0, #40]	; 0x28
   1a05e:	cmp	r3, r5
   1a060:	it	eq
   1a062:	cmpeq	r2, r4
   1a064:	bne.n	1a072 <set_state_private@@Base+0x24>
   1a066:	ldrd	r2, r3, [sp, #16]
   1a06a:	strd	r2, r3, [r0, #64]	; 0x40
   1a06e:	movs	r0, #0
   1a070:	pop	{r3, r4, r5, pc}
   1a072:	mvn.w	r0, #1
   1a076:	b.n	1a070 <set_state_private@@Base+0x22>

0001a078 <get_state_private@@Base>:
   1a078:	push	{r3, r4, r5, lr}
   1a07a:	mov	r4, r2
   1a07c:	mov	r5, r3
   1a07e:	bl	19460 <search_cache_extent@@Base>
   1a082:	cbz	r0, 1a09e <get_state_private@@Base+0x26>
   1a084:	ldrd	r2, r3, [r0, #40]	; 0x28
   1a088:	cmp	r3, r5
   1a08a:	it	eq
   1a08c:	cmpeq	r2, r4
   1a08e:	bne.n	1a09e <get_state_private@@Base+0x26>
   1a090:	ldrd	r0, r1, [r0, #64]	; 0x40
   1a094:	ldr	r3, [sp, #16]
   1a096:	strd	r0, r1, [r3]
   1a09a:	movs	r0, #0
   1a09c:	pop	{r3, r4, r5, pc}
   1a09e:	mvn.w	r0, #1
   1a0a2:	b.n	1a09c <get_state_private@@Base+0x24>

0001a0a4 <free_extent_buffer@@Base>:
   1a0a4:	movs	r1, #0
   1a0a6:	b.n	19a86 <add_merge_cache_extent@@Base+0x516>

0001a0a8 <free_extent_buffer_nocache@@Base>:
   1a0a8:	movs	r1, #1
   1a0aa:	b.n	19a86 <add_merge_cache_extent@@Base+0x516>

0001a0ac <extent_io_tree_cleanup@@Base>:
   1a0ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1a0b0:	add.w	r8, r0, #8
   1a0b4:	ldr.w	r9, [pc, #84]	; 1a10c <extent_io_tree_cleanup@@Base+0x60>
   1a0b8:	sub	sp, #20
   1a0ba:	ldr	r5, [pc, #84]	; (1a110 <extent_io_tree_cleanup@@Base+0x64>)
   1a0bc:	mov	r4, r0
   1a0be:	add	r9, pc
   1a0c0:	add	r5, pc
   1a0c2:	ldr	r3, [r4, #8]
   1a0c4:	cmp	r3, r8
   1a0c6:	bne.n	1a0d8 <extent_io_tree_cleanup@@Base+0x2c>
   1a0c8:	ldr	r1, [pc, #72]	; (1a114 <extent_io_tree_cleanup@@Base+0x68>)
   1a0ca:	mov	r0, r4
   1a0cc:	add	r1, pc
   1a0ce:	add	sp, #20
   1a0d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1a0d4:	b.w	19542 <cache_tree_free_extents@@Base>
   1a0d8:	ldr	r2, [r3, #20]
   1a0da:	sub.w	r7, r3, #60	; 0x3c
   1a0de:	cbz	r2, 1a102 <extent_io_tree_cleanup@@Base+0x56>
   1a0e0:	ldr	r2, [pc, #52]	; (1a118 <extent_io_tree_cleanup@@Base+0x6c>)
   1a0e2:	ldr	r6, [r5, r2]
   1a0e4:	ldr	r2, [r3, #16]
   1a0e6:	str	r2, [sp, #8]
   1a0e8:	mov	r2, r9
   1a0ea:	ldrd	r0, r1, [r3, #-20]
   1a0ee:	strd	r0, r1, [sp]
   1a0f2:	movs	r1, #1
   1a0f4:	ldr	r0, [r6, #0]
   1a0f6:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1a0fa:	mov	r0, r7
   1a0fc:	bl	1a0a8 <free_extent_buffer_nocache@@Base>
   1a100:	b.n	1a0c2 <extent_io_tree_cleanup@@Base+0x16>
   1a102:	mov	r0, r7
   1a104:	bl	19884 <add_merge_cache_extent@@Base+0x314>
   1a108:	b.n	1a0c2 <extent_io_tree_cleanup@@Base+0x16>
   1a10a:	nop
   1a10c:	str	r5, [r6, #16]
   1a10e:	movs	r2, r0
   1a110:	ldcl	0, cr0, [r0], #-16
   1a114:	ldr??.w	pc, [r9, #255]!
   1a118:	lsls	r4, r1, #10
	...

0001a11c <find_extent_buffer@@Base>:
   1a11c:	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, lr}
   1a120:	mov	r4, r0
   1a122:	ldr	r6, [sp, #32]
   1a124:	movs	r7, #0
   1a126:	adds	r0, #4
   1a128:	mov	r8, r2
   1a12a:	mov	r9, r3
   1a12c:	strd	r6, r7, [sp]
   1a130:	bl	193a0 <lookup_cache_extent@@Base>
   1a134:	cbz	r0, 1a16c <find_extent_buffer@@Base+0x50>
   1a136:	ldrd	r2, r3, [r0, #24]
   1a13a:	cmp	r3, r9
   1a13c:	it	eq
   1a13e:	cmpeq	r2, r8
   1a140:	bne.n	1a172 <find_extent_buffer@@Base+0x56>
   1a142:	ldrd	r2, r3, [r0, #32]
   1a146:	cmp	r7, r3
   1a148:	it	eq
   1a14a:	cmpeq	r6, r2
   1a14c:	bne.n	1a172 <find_extent_buffer@@Base+0x56>
   1a14e:	ldrd	r1, r2, [r0, #60]	; 0x3c
   1a152:	add.w	r3, r0, #60	; 0x3c
   1a156:	adds	r4, #8
   1a158:	str	r2, [r1, #4]
   1a15a:	str	r1, [r2, #0]
   1a15c:	ldr	r2, [r4, #4]
   1a15e:	str	r3, [r4, #4]
   1a160:	strd	r4, r2, [r0, #60]	; 0x3c
   1a164:	str	r3, [r2, #0]
   1a166:	ldr	r3, [r0, #80]	; 0x50
   1a168:	adds	r3, #1
   1a16a:	str	r3, [r0, #80]	; 0x50
   1a16c:	add	sp, #8
   1a16e:	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
   1a172:	movs	r0, #0
   1a174:	b.n	1a16c <find_extent_buffer@@Base+0x50>

0001a176 <find_first_extent_buffer@@Base>:
   1a176:	push	{r4, lr}
   1a178:	mov	r4, r0
   1a17a:	adds	r0, #4
   1a17c:	bl	19460 <search_cache_extent@@Base>
   1a180:	cbz	r0, 1a1a0 <find_first_extent_buffer@@Base+0x2a>
   1a182:	ldrd	r1, r2, [r0, #60]	; 0x3c
   1a186:	add.w	r3, r0, #60	; 0x3c
   1a18a:	adds	r4, #8
   1a18c:	str	r2, [r1, #4]
   1a18e:	str	r1, [r2, #0]
   1a190:	ldr	r2, [r4, #4]
   1a192:	str	r3, [r4, #4]
   1a194:	strd	r4, r2, [r0, #60]	; 0x3c
   1a198:	str	r3, [r2, #0]
   1a19a:	ldr	r3, [r0, #80]	; 0x50
   1a19c:	adds	r3, #1
   1a19e:	str	r3, [r0, #80]	; 0x50
   1a1a0:	pop	{r4, pc}

0001a1a2 <alloc_extent_buffer@@Base>:
   1a1a2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a1a6:	sub	sp, #20
   1a1a8:	add.w	sl, r0, #68	; 0x44
   1a1ac:	mov	r5, r0
   1a1ae:	ldr.w	fp, [sp, #56]	; 0x38
   1a1b2:	movs	r7, #0
   1a1b4:	mov	r0, sl
   1a1b6:	mov	r8, r2
   1a1b8:	mov	r9, r3
   1a1ba:	mov	r6, fp
   1a1bc:	strd	r6, r7, [sp]
   1a1c0:	bl	193a0 <lookup_cache_extent@@Base>
   1a1c4:	mov	r4, r0
   1a1c6:	cbz	r0, 1a20c <alloc_extent_buffer@@Base+0x6a>
   1a1c8:	ldrd	r2, r3, [r0, #24]
   1a1cc:	cmp	r3, r9
   1a1ce:	it	eq
   1a1d0:	cmpeq	r2, r8
   1a1d2:	bne.n	1a206 <alloc_extent_buffer@@Base+0x64>
   1a1d4:	ldrd	r2, r3, [r0, #32]
   1a1d8:	cmp	r7, r3
   1a1da:	it	eq
   1a1dc:	cmpeq	fp, r2
   1a1de:	bne.n	1a206 <alloc_extent_buffer@@Base+0x64>
   1a1e0:	ldrd	r1, r2, [r0, #60]	; 0x3c
   1a1e4:	add.w	r3, r0, #60	; 0x3c
   1a1e8:	adds	r5, #72	; 0x48
   1a1ea:	str	r2, [r1, #4]
   1a1ec:	str	r1, [r2, #0]
   1a1ee:	ldr	r2, [r5, #4]
   1a1f0:	str	r3, [r5, #4]
   1a1f2:	strd	r5, r2, [r0, #60]	; 0x3c
   1a1f6:	str	r3, [r2, #0]
   1a1f8:	ldr	r3, [r0, #80]	; 0x50
   1a1fa:	adds	r3, #1
   1a1fc:	str	r3, [r0, #80]	; 0x50
   1a1fe:	mov	r0, r4
   1a200:	add	sp, #20
   1a202:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a206:	mov	r0, r4
   1a208:	bl	1a0a4 <free_extent_buffer@@Base>
   1a20c:	mov	r2, r8
   1a20e:	mov	r3, r9
   1a210:	mov	r0, r5
   1a212:	str.w	fp, [sp]
   1a216:	bl	1974a <add_merge_cache_extent@@Base+0x1da>
   1a21a:	mov	r4, r0
   1a21c:	cmp	r0, #0
   1a21e:	beq.n	1a1fe <alloc_extent_buffer@@Base+0x5c>
   1a220:	mov	r1, r0
   1a222:	mov	r0, sl
   1a224:	bl	1931e <insert_cache_extent@@Base>
   1a228:	cbz	r0, 1a234 <alloc_extent_buffer@@Base+0x92>
   1a22a:	mov	r0, r4
   1a22c:	movs	r4, #0
   1a22e:	blx	87cc <free@plt+0x4>
   1a232:	b.n	1a1fe <alloc_extent_buffer@@Base+0x5c>
   1a234:	ldr	r2, [r5, #76]	; 0x4c
   1a236:	add.w	r3, r4, #60	; 0x3c
   1a23a:	add.w	r8, r5, #72	; 0x48
   1a23e:	str	r3, [r5, #76]	; 0x4c
   1a240:	strd	r8, r2, [r4, #60]	; 0x3c
   1a244:	str	r3, [r2, #0]
   1a246:	ldrd	r3, r2, [r5, #80]	; 0x50
   1a24a:	adds	r3, r6, r3
   1a24c:	str	r3, [sp, #8]
   1a24e:	adc.w	r3, r7, r2
   1a252:	str	r3, [sp, #12]
   1a254:	ldrd	r2, r3, [sp, #8]
   1a258:	ldrd	r0, r1, [sp, #8]
   1a25c:	strd	r2, r3, [r5, #80]	; 0x50
   1a260:	ldrd	r2, r3, [r5, #88]	; 0x58
   1a264:	cmp	r1, r3
   1a266:	it	eq
   1a268:	cmpeq	r0, r2
   1a26a:	bcc.n	1a1fe <alloc_extent_buffer@@Base+0x5c>
   1a26c:	ldr	r0, [r5, #72]	; 0x48
   1a26e:	movs	r7, #9
   1a270:	ldr.w	r6, [r0], #-60
   1a274:	subs	r6, #60	; 0x3c
   1a276:	add.w	r3, r0, #60	; 0x3c
   1a27a:	cmp	r8, r3
   1a27c:	beq.n	1a1fe <alloc_extent_buffer@@Base+0x5c>
   1a27e:	ldr	r3, [r0, #80]	; 0x50
   1a280:	cbnz	r3, 1a286 <alloc_extent_buffer@@Base+0xe4>
   1a282:	bl	19884 <add_merge_cache_extent@@Base+0x314>
   1a286:	ldrd	r0, r3, [r5, #88]	; 0x58
   1a28a:	movs	r2, #10
   1a28c:	umull	r0, r1, r0, r7
   1a290:	mla	r1, r7, r3, r1
   1a294:	movs	r3, #0
   1a296:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   1a29a:	ldrd	r2, r3, [r5, #80]	; 0x50
   1a29e:	cmp	r1, r3
   1a2a0:	it	eq
   1a2a2:	cmpeq	r0, r2
   1a2a4:	bcs.n	1a1fe <alloc_extent_buffer@@Base+0x5c>
   1a2a6:	ldr	r3, [r6, #60]	; 0x3c
   1a2a8:	mov	r0, r6
   1a2aa:	sub.w	r6, r3, #60	; 0x3c
   1a2ae:	b.n	1a276 <alloc_extent_buffer@@Base+0xd4>

0001a2b0 <alloc_dummy_extent_buffer@@Base>:
   1a2b0:	push	{r0, r1, r2, lr}
   1a2b2:	ldr	r1, [sp, #16]
   1a2b4:	str	r1, [sp, #0]
   1a2b6:	bl	1974a <add_merge_cache_extent@@Base+0x1da>
   1a2ba:	cbz	r0, 1a2c8 <alloc_dummy_extent_buffer@@Base+0x18>
   1a2bc:	movs	r3, #0
   1a2be:	str	r3, [r0, #56]	; 0x38
   1a2c0:	ldr	r3, [r0, #84]	; 0x54
   1a2c2:	orr.w	r3, r3, #2048	; 0x800
   1a2c6:	str	r3, [r0, #84]	; 0x54
   1a2c8:	add	sp, #12
   1a2ca:	ldr.w	pc, [sp], #4

0001a2ce <read_extent_from_disk@@Base>:
   1a2ce:	push	{r0, r1, r4, r6, r7, lr}
   1a2d0:	add.w	r3, r0, #96	; 0x60
   1a2d4:	ldrd	r6, r7, [r0, #48]	; 0x30
   1a2d8:	add	r1, r3
   1a2da:	mov	r4, r2
   1a2dc:	strd	r6, r7, [sp]
   1a2e0:	ldr	r0, [r0, #88]	; 0x58
   1a2e2:	blx	8a2c <pread64@plt>
   1a2e6:	cmp	r0, #0
   1a2e8:	bge.n	1a2f6 <read_extent_from_disk@@Base+0x28>
   1a2ea:	blx	8bac <__errno_location@plt>
   1a2ee:	ldr	r0, [r0, #0]
   1a2f0:	negs	r0, r0
   1a2f2:	add	sp, #8
   1a2f4:	pop	{r4, r6, r7, pc}
   1a2f6:	cmp	r0, r4
   1a2f8:	ite	eq
   1a2fa:	moveq	r0, #0
   1a2fc:	mvnne.w	r0, #4
   1a300:	b.n	1a2f2 <read_extent_from_disk@@Base+0x24>

0001a302 <write_extent_to_disk@@Base>:
   1a302:	push	{r0, r1, r4, lr}
   1a304:	add.w	r1, r0, #96	; 0x60
   1a308:	ldrd	r2, r3, [r0, #48]	; 0x30
   1a30c:	mov	r4, r0
   1a30e:	strd	r2, r3, [sp]
   1a312:	ldr	r2, [r0, #76]	; 0x4c
   1a314:	ldr	r0, [r0, #88]	; 0x58
   1a316:	blx	8c5c <pwrite64@plt>
   1a31a:	cmp	r0, #0
   1a31c:	blt.n	1a32a <write_extent_to_disk@@Base+0x28>
   1a31e:	ldr	r3, [r4, #76]	; 0x4c
   1a320:	cmp	r3, r0
   1a322:	ite	eq
   1a324:	moveq	r0, #0
   1a326:	mvnne.w	r0, #4
   1a32a:	add	sp, #8
   1a32c:	pop	{r4, pc}

0001a32e <read_data_from_disk@@Base>:
   1a32e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a332:	mov	r5, r2
   1a334:	ldr	r2, [pc, #292]	; (1a45c <read_data_from_disk@@Base+0x12e>)
   1a336:	mov	r8, r3
   1a338:	ldr	r3, [pc, #292]	; (1a460 <read_data_from_disk@@Base+0x132>)
   1a33a:	sub	sp, #68	; 0x44
   1a33c:	add	r2, pc
   1a33e:	ldr	r7, [pc, #292]	; (1a464 <read_data_from_disk@@Base+0x136>)
   1a340:	str	r1, [sp, #24]
   1a342:	mov	r9, r0
   1a344:	ldr	r3, [r2, r3]
   1a346:	add	r7, pc
   1a348:	ldrd	sl, fp, [sp, #104]	; 0x68
   1a34c:	ldr	r3, [r3, #0]
   1a34e:	str	r3, [sp, #60]	; 0x3c
   1a350:	mov.w	r3, #0
   1a354:	movs	r3, #0
   1a356:	mov	r6, r3
   1a358:	str	r3, [sp, #44]	; 0x2c
   1a35a:	str	r3, [sp, #28]
   1a35c:	add	r3, sp, #44	; 0x2c
   1a35e:	str	r3, [sp, #32]
   1a360:	add	r3, sp, #48	; 0x30
   1a362:	str	r3, [sp, #36]	; 0x24
   1a364:	orrs.w	r3, sl, fp
   1a368:	bne.n	1a36e <read_data_from_disk@@Base+0x40>
   1a36a:	movs	r4, #0
   1a36c:	b.n	1a3a8 <read_data_from_disk@@Base+0x7a>
   1a36e:	ldr	r3, [sp, #28]
   1a370:	mov	r2, r5
   1a372:	movs	r1, #0
   1a374:	mov	r0, r9
   1a376:	strd	sl, fp, [sp, #48]	; 0x30
   1a37a:	str	r3, [sp, #12]
   1a37c:	ldr	r3, [sp, #112]	; 0x70
   1a37e:	str	r3, [sp, #8]
   1a380:	ldr	r3, [sp, #32]
   1a382:	str	r3, [sp, #4]
   1a384:	ldr	r3, [sp, #36]	; 0x24
   1a386:	str	r3, [sp, #0]
   1a388:	mov	r3, r8
   1a38a:	bl	2d2b0 <btrfs_map_block@@Base>
   1a38e:	cbz	r0, 1a3bc <read_data_from_disk@@Base+0x8e>
   1a390:	ldr	r3, [pc, #212]	; (1a468 <read_data_from_disk@@Base+0x13a>)
   1a392:	movs	r1, #1
   1a394:	ldr	r2, [pc, #212]	; (1a46c <read_data_from_disk@@Base+0x13e>)
   1a396:	ldr	r3, [r7, r3]
   1a398:	add	r2, pc
   1a39a:	strd	r5, r8, [sp]
   1a39e:	ldr	r0, [r3, #0]
   1a3a0:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1a3a4:	mvn.w	r4, #4
   1a3a8:	ldr	r2, [pc, #196]	; (1a470 <read_data_from_disk@@Base+0x142>)
   1a3aa:	ldr	r3, [pc, #180]	; (1a460 <read_data_from_disk@@Base+0x132>)
   1a3ac:	add	r2, pc
   1a3ae:	ldr	r3, [r2, r3]
   1a3b0:	ldr	r2, [r3, #0]
   1a3b2:	ldr	r3, [sp, #60]	; 0x3c
   1a3b4:	eors	r2, r3
   1a3b6:	beq.n	1a454 <read_data_from_disk@@Base+0x126>
   1a3b8:	blx	88e4 <__stack_chk_fail@plt>
   1a3bc:	ldr	r1, [sp, #44]	; 0x2c
   1a3be:	ldrd	r2, r3, [sp, #48]	; 0x30
   1a3c2:	ldr	r0, [r1, #8]
   1a3c4:	cmp	fp, r3
   1a3c6:	it	eq
   1a3c8:	cmpeq	sl, r2
   1a3ca:	ldr	r4, [r0, #24]
   1a3cc:	itt	cc
   1a3ce:	movcc	r2, sl
   1a3d0:	movcc	r3, fp
   1a3d2:	strd	r2, r3, [sp, #48]	; 0x30
   1a3d6:	cmp	r4, #0
   1a3d8:	bgt.n	1a3e2 <read_data_from_disk@@Base+0xb4>
   1a3da:	mov	r0, r1
   1a3dc:	blx	87cc <free@plt+0x4>
   1a3e0:	b.n	1a3a4 <read_data_from_disk@@Base+0x76>
   1a3e2:	ldrd	r0, r1, [r1, #16]
   1a3e6:	ldr	r3, [sp, #24]
   1a3e8:	strd	r0, r1, [sp]
   1a3ec:	adds	r1, r3, r6
   1a3ee:	mov	r0, r4
   1a3f0:	blx	8a2c <pread64@plt>
   1a3f4:	mov	r4, r0
   1a3f6:	ldr	r0, [sp, #44]	; 0x2c
   1a3f8:	blx	87cc <free@plt+0x4>
   1a3fc:	cmp	r4, #0
   1a3fe:	bge.n	1a418 <read_data_from_disk@@Base+0xea>
   1a400:	ldr	r3, [pc, #100]	; (1a468 <read_data_from_disk@@Base+0x13a>)
   1a402:	movs	r1, #1
   1a404:	ldr	r2, [pc, #108]	; (1a474 <read_data_from_disk@@Base+0x146>)
   1a406:	ldr	r3, [r7, r3]
   1a408:	add	r2, pc
   1a40a:	str	r4, [sp, #8]
   1a40c:	strd	r5, r8, [sp]
   1a410:	ldr	r0, [r3, #0]
   1a412:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1a416:	b.n	1a3a8 <read_data_from_disk@@Base+0x7a>
   1a418:	ldrd	r0, r1, [sp, #48]	; 0x30
   1a41c:	asrs	r3, r4, #31
   1a41e:	cmp	r3, r1
   1a420:	it	eq
   1a422:	cmpeq	r4, r0
   1a424:	beq.n	1a442 <read_data_from_disk@@Base+0x114>
   1a426:	ldr	r3, [pc, #64]	; (1a468 <read_data_from_disk@@Base+0x13a>)
   1a428:	ldr	r2, [pc, #76]	; (1a478 <read_data_from_disk@@Base+0x14a>)
   1a42a:	ldr	r3, [r7, r3]
   1a42c:	add	r2, pc
   1a42e:	strd	r0, r1, [sp, #16]
   1a432:	movs	r1, #1
   1a434:	str	r4, [sp, #8]
   1a436:	strd	r5, r8, [sp]
   1a43a:	ldr	r0, [r3, #0]
   1a43c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1a440:	b.n	1a3a4 <read_data_from_disk@@Base+0x76>
   1a442:	subs.w	sl, sl, r4
   1a446:	sbc.w	fp, fp, r3
   1a44a:	adds	r5, r5, r4
   1a44c:	adc.w	r8, r8, r3
   1a450:	adds	r6, r6, r4
   1a452:	b.n	1a364 <read_data_from_disk@@Base+0x36>
   1a454:	mov	r0, r4
   1a456:	add	sp, #68	; 0x44
   1a458:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a45c:	ldrd	r0, r0, [r4, #16]!
   1a460:	lsls	r4, r7, #9
   1a462:	movs	r0, r0
   1a464:	strd	r0, r0, [sl, #16]!
   1a468:	lsls	r4, r1, #10
   1a46a:	movs	r0, r0
   1a46c:	ldrsh	r2, [r0, r2]
   1a46e:	movs	r2, r0
   1a470:			; <UNDEFINED> instruction: 0xe9840004
   1a474:	ldrsh	r6, [r5, r0]
   1a476:	movs	r2, r0
   1a478:	ldrsh	r1, [r4, r0]
   1a47a:	movs	r2, r0

0001a47c <write_data_to_disk@@Base>:
   1a47c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a480:	mov	r6, r2
   1a482:	vpush	{d8}
   1a486:	mov	r7, r3
   1a488:	ldr	r2, [pc, #600]	; (1a6e4 <write_data_to_disk@@Base+0x268>)
   1a48a:	mov	r8, r0
   1a48c:	ldr	r3, [pc, #600]	; (1a6e8 <write_data_to_disk@@Base+0x26c>)
   1a48e:	add	r2, pc
   1a490:	ldr.w	r9, [pc, #600]	; 1a6ec <write_data_to_disk@@Base+0x270>
   1a494:	sub	sp, #68	; 0x44
   1a496:	add	r9, pc
   1a498:	str	r1, [sp, #32]
   1a49a:	ldr	r3, [r2, r3]
   1a49c:	ldr	r3, [r3, #0]
   1a49e:	str	r3, [sp, #60]	; 0x3c
   1a4a0:	mov.w	r3, #0
   1a4a4:	movs	r3, #0
   1a4a6:	strd	r3, r3, [sp, #40]	; 0x28
   1a4aa:	str	r3, [sp, #20]
   1a4ac:	ldr	r3, [pc, #576]	; (1a6f0 <write_data_to_disk@@Base+0x274>)
   1a4ae:	add	r3, pc
   1a4b0:	adds	r3, #136	; 0x88
   1a4b2:	vmov	s16, r3
   1a4b6:	ldr	r3, [pc, #572]	; (1a6f4 <write_data_to_disk@@Base+0x278>)
   1a4b8:	add	r3, pc
   1a4ba:	vmov	s17, r3
   1a4be:	ldrd	r3, r4, [sp, #112]	; 0x70
   1a4c2:	orrs	r3, r4
   1a4c4:	bne.n	1a4ca <write_data_to_disk@@Base+0x4e>
   1a4c6:	movs	r4, #0
   1a4c8:	b.n	1a59e <write_data_to_disk@@Base+0x122>
   1a4ca:	ldrd	r3, r4, [sp, #112]	; 0x70
   1a4ce:	mov	r2, r6
   1a4d0:	movs	r1, #1
   1a4d2:	mov	r0, r8
   1a4d4:	strd	r3, r4, [sp, #48]	; 0x30
   1a4d8:	add	r3, sp, #44	; 0x2c
   1a4da:	str	r3, [sp, #12]
   1a4dc:	ldr	r3, [sp, #120]	; 0x78
   1a4de:	str	r3, [sp, #8]
   1a4e0:	add	r3, sp, #40	; 0x28
   1a4e2:	str	r3, [sp, #4]
   1a4e4:	add	r3, sp, #48	; 0x30
   1a4e6:	str	r3, [sp, #0]
   1a4e8:	mov	r3, r7
   1a4ea:	bl	2d2b0 <btrfs_map_block@@Base>
   1a4ee:	mov	sl, r0
   1a4f0:	cbz	r0, 1a50e <write_data_to_disk@@Base+0x92>
   1a4f2:	ldr	r3, [pc, #516]	; (1a6f8 <write_data_to_disk@@Base+0x27c>)
   1a4f4:	movs	r1, #1
   1a4f6:	ldr	r2, [pc, #516]	; (1a6fc <write_data_to_disk@@Base+0x280>)
   1a4f8:	ldr.w	r3, [r9, r3]
   1a4fc:	add	r2, pc
   1a4fe:	strd	r6, r7, [sp]
   1a502:	ldr	r0, [r3, #0]
   1a504:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1a508:	mvn.w	r4, #4
   1a50c:	b.n	1a59e <write_data_to_disk@@Base+0x122>
   1a50e:	ldr.w	fp, [sp, #44]	; 0x2c
   1a512:	cmp.w	fp, #0
   1a516:	bne.n	1a53e <write_data_to_disk@@Base+0xc2>
   1a518:	ldr	r3, [sp, #32]
   1a51a:	ldr	r2, [sp, #20]
   1a51c:	add.w	fp, r3, r2
   1a520:	ldr	r3, [sp, #40]	; 0x28
   1a522:	ldr	r2, [r3, #4]
   1a524:	cmp	r2, sl
   1a526:	ble.n	1a60a <write_data_to_disk@@Base+0x18e>
   1a528:	add.w	r2, r3, sl, lsl #4
   1a52c:	ldr	r2, [r2, #8]
   1a52e:	ldr	r0, [r2, #24]
   1a530:	cmp	r0, #0
   1a532:	bgt.w	1a658 <write_data_to_disk@@Base+0x1dc>
   1a536:	mov	r0, r3
   1a538:	blx	87cc <free@plt+0x4>
   1a53c:	b.n	1a508 <write_data_to_disk@@Base+0x8c>
   1a53e:	ldrd	r3, r4, [sp, #48]	; 0x30
   1a542:	mov	r5, r0
   1a544:	strd	r3, r4, [sp, #24]
   1a548:	ldrd	r2, r3, [sp, #24]
   1a54c:	ldr.w	r4, [r8, #384]	; 0x180
   1a550:	cmp	r3, r0
   1a552:	it	eq
   1a554:	cmpeq	r2, r4
   1a556:	itt	cc
   1a558:	movcc	r4, r2
   1a55a:	movcc	r5, r3
   1a55c:	ldrd	r2, r3, [sp, #112]	; 0x70
   1a560:	cmp	r3, r5
   1a562:	it	eq
   1a564:	cmpeq	r2, r4
   1a566:	it	cc
   1a568:	movcc	r4, r2
   1a56a:	add.w	r2, r4, #96	; 0x60
   1a56e:	it	cc
   1a570:	movcc	r5, r3
   1a572:	str	r2, [sp, #36]	; 0x24
   1a574:	mov	r0, r2
   1a576:	strd	r4, r5, [sp, #48]	; 0x30
   1a57a:	blx	8a94 <malloc@plt+0x4>
   1a57e:	ldr	r2, [sp, #36]	; 0x24
   1a580:	mov	sl, r0
   1a582:	cbnz	r0, 1a5b4 <write_data_to_disk@@Base+0x138>
   1a584:	ldr	r3, [pc, #368]	; (1a6f8 <write_data_to_disk@@Base+0x27c>)
   1a586:	mvn.w	r4, #11
   1a58a:	ldr	r0, [pc, #372]	; (1a700 <write_data_to_disk@@Base+0x284>)
   1a58c:	ldr.w	r3, [r9, r3]
   1a590:	add	r0, pc
   1a592:	ldr	r1, [r3, #0]
   1a594:	blx	8de4 <fputs@plt+0x4>
   1a598:	ldr	r0, [sp, #44]	; 0x2c
   1a59a:	blx	87cc <free@plt+0x4>
   1a59e:	ldr	r2, [pc, #356]	; (1a704 <write_data_to_disk@@Base+0x288>)
   1a5a0:	ldr	r3, [pc, #324]	; (1a6e8 <write_data_to_disk@@Base+0x26c>)
   1a5a2:	add	r2, pc
   1a5a4:	ldr	r3, [r2, r3]
   1a5a6:	ldr	r2, [r3, #0]
   1a5a8:	ldr	r3, [sp, #60]	; 0x3c
   1a5aa:	eors	r2, r3
   1a5ac:	beq.w	1a6d6 <write_data_to_disk@@Base+0x25a>
   1a5b0:	blx	88e4 <__stack_chk_fail@plt>
   1a5b4:	movs	r1, #0
   1a5b6:	blx	8bf8 <memset@plt+0x4>
   1a5ba:	ldr	r3, [sp, #32]
   1a5bc:	ldr	r1, [sp, #20]
   1a5be:	mov	r2, r4
   1a5c0:	str.w	r4, [sl, #76]	; 0x4c
   1a5c4:	add.w	r0, sl, #96	; 0x60
   1a5c8:	adds	r1, r3, r1
   1a5ca:	strd	r6, r7, [sl, #40]	; 0x28
   1a5ce:	blx	8830 <memcpy@plt+0x4>
   1a5d2:	ldrd	r3, r4, [sp, #24]
   1a5d6:	ldr	r2, [sp, #40]	; 0x28
   1a5d8:	mov	r1, sl
   1a5da:	mov	r0, r8
   1a5dc:	str.w	fp, [sp, #8]
   1a5e0:	strd	r3, r4, [sp]
   1a5e4:	bl	2dc18 <write_raid56_with_parity@@Base>
   1a5e8:	vmov	r1, s16
   1a5ec:	movw	r2, #922	; 0x39a
   1a5f0:	mov	r3, r0
   1a5f2:	vmov	r0, s17
   1a5f6:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   1a5fa:	mov	r0, sl
   1a5fc:	blx	87cc <free@plt+0x4>
   1a600:	ldr	r0, [sp, #44]	; 0x2c
   1a602:	blx	87cc <free@plt+0x4>
   1a606:	movs	r3, #0
   1a608:	str	r3, [sp, #44]	; 0x2c
   1a60a:	ldrd	r2, r3, [sp, #112]	; 0x70
   1a60e:	ldrd	r4, r5, [sp, #48]	; 0x30
   1a612:	ldr	r1, [pc, #244]	; (1a708 <write_data_to_disk@@Base+0x28c>)
   1a614:	cmp	r3, r5
   1a616:	ldr	r0, [pc, #244]	; (1a70c <write_data_to_disk@@Base+0x290>)
   1a618:	it	eq
   1a61a:	cmpeq	r2, r4
   1a61c:	add	r1, pc
   1a61e:	add.w	r1, r1, #136	; 0x88
   1a622:	add	r0, pc
   1a624:	ite	cc
   1a626:	movcc	r3, #1
   1a628:	movcs	r3, #0
   1a62a:	movw	r2, #954	; 0x3ba
   1a62e:	bl	197a0 <add_merge_cache_extent@@Base+0x230>
   1a632:	ldr	r3, [sp, #112]	; 0x70
   1a634:	ldr	r0, [sp, #40]	; 0x28
   1a636:	subs	r3, r3, r4
   1a638:	str	r3, [sp, #112]	; 0x70
   1a63a:	ldr	r3, [sp, #116]	; 0x74
   1a63c:	sbc.w	r3, r3, r5
   1a640:	str	r3, [sp, #116]	; 0x74
   1a642:	ldr	r3, [sp, #20]
   1a644:	adds	r6, r6, r4
   1a646:	adc.w	r7, r5, r7
   1a64a:	adds	r3, r3, r4
   1a64c:	str	r3, [sp, #20]
   1a64e:	blx	87cc <free@plt+0x4>
   1a652:	movs	r3, #0
   1a654:	str	r3, [sp, #40]	; 0x28
   1a656:	b.n	1a4be <write_data_to_disk@@Base+0x42>
   1a658:	add.w	sl, sl, #1
   1a65c:	mov	r1, fp
   1a65e:	add.w	r3, r3, sl, lsl #4
   1a662:	ldrd	r3, r4, [r3]
   1a666:	strd	r3, r4, [sp, #24]
   1a66a:	ldrd	r2, r3, [sp, #48]	; 0x30
   1a66e:	ldrd	r4, r5, [sp, #112]	; 0x70
   1a672:	cmp	r5, r3
   1a674:	it	eq
   1a676:	cmpeq	r4, r2
   1a678:	itt	cc
   1a67a:	movcc	r2, r4
   1a67c:	movcc	r3, r5
   1a67e:	ldrd	r4, r5, [sp, #24]
   1a682:	strd	r2, r3, [sp, #48]	; 0x30
   1a686:	strd	r4, r5, [sp]
   1a68a:	blx	8c5c <pwrite64@plt>
   1a68e:	ldrd	r2, r3, [sp, #48]	; 0x30
   1a692:	asrs	r5, r0, #31
   1a694:	cmp	r5, r3
   1a696:	it	eq
   1a698:	cmpeq	r0, r2
   1a69a:	beq.w	1a520 <write_data_to_disk@@Base+0xa4>
   1a69e:	ldr	r3, [pc, #88]	; (1a6f8 <write_data_to_disk@@Base+0x27c>)
   1a6a0:	cmp	r0, #0
   1a6a2:	ldr.w	r3, [r9, r3]
   1a6a6:	ldr	r5, [r3, #0]
   1a6a8:	bge.n	1a6c8 <write_data_to_disk@@Base+0x24c>
   1a6aa:	blx	8bac <__errno_location@plt>
   1a6ae:	ldr	r2, [pc, #96]	; (1a710 <write_data_to_disk@@Base+0x294>)
   1a6b0:	movs	r1, #1
   1a6b2:	add	r2, pc
   1a6b4:	ldr	r3, [r0, #0]
   1a6b6:	mov	r4, r0
   1a6b8:	mov	r0, r5
   1a6ba:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1a6be:	ldr	r0, [sp, #40]	; 0x28
   1a6c0:	ldr	r4, [r4, #0]
   1a6c2:	blx	87cc <free@plt+0x4>
   1a6c6:	b.n	1a59e <write_data_to_disk@@Base+0x122>
   1a6c8:	ldr	r0, [pc, #72]	; (1a714 <write_data_to_disk@@Base+0x298>)
   1a6ca:	mov	r1, r5
   1a6cc:	add	r0, pc
   1a6ce:	blx	8de4 <fputs@plt+0x4>
   1a6d2:	ldr	r0, [sp, #40]	; 0x28
   1a6d4:	b.n	1a538 <write_data_to_disk@@Base+0xbc>
   1a6d6:	mov	r0, r4
   1a6d8:	add	sp, #68	; 0x44
   1a6da:	vpop	{d8}
   1a6de:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a6e2:	nop
   1a6e4:	stmia.w	r2!, {r2}
   1a6e8:	lsls	r4, r7, #9
   1a6ea:	movs	r0, r0
   1a6ec:	ldmia.w	sl, {r2}
   1a6f0:	ldrsh	r0, [r5, r0]
   1a6f2:	movs	r2, r0
   1a6f4:	mvns	r5, r0
   1a6f6:	movs	r2, r0
   1a6f8:	lsls	r4, r1, #10
   1a6fa:	movs	r0, r0
   1a6fc:	ldrb	r6, [r3, r4]
   1a6fe:	movs	r2, r0
   1a700:	ldrb	r0, [r5, r3]
   1a702:	movs	r2, r0
   1a704:	b.n	1a624 <write_data_to_disk@@Base+0x1a8>
   1a706:	movs	r4, r0
   1a708:	ldrb	r2, [r7, r2]
   1a70a:	movs	r2, r0
   1a70c:	ldrb	r6, [r3, r2]
   1a70e:	movs	r2, r0
   1a710:	ldrh	r5, [r4, r7]
   1a712:	movs	r2, r0
   1a714:	ldrh	r7, [r4, r7]
   1a716:	movs	r2, r0

0001a718 <set_extent_buffer_dirty@@Base>:
   1a718:	push	{r0, r1, r4, r6, r7, lr}
   1a71a:	mov	r4, r0
   1a71c:	ldr	r3, [r0, #84]	; 0x54
   1a71e:	lsls	r2, r3, #31
   1a720:	bmi.n	1a74c <set_extent_buffer_dirty@@Base+0x34>
   1a722:	orr.w	r3, r3, #1
   1a726:	str	r3, [r0, #84]	; 0x54
   1a728:	ldrd	r2, r3, [r0, #40]	; 0x28
   1a72c:	ldr	r1, [r0, #76]	; 0x4c
   1a72e:	adds.w	r6, r2, #4294967295	; 0xffffffff
   1a732:	adc.w	r7, r3, #4294967295	; 0xffffffff
   1a736:	adds	r6, r6, r1
   1a738:	adc.w	r7, r7, #0
   1a73c:	strd	r6, r7, [sp]
   1a740:	ldr	r0, [r0, #56]	; 0x38
   1a742:	bl	19f6c <set_extent_dirty@@Base>
   1a746:	ldr	r3, [r4, #80]	; 0x50
   1a748:	adds	r3, #1
   1a74a:	str	r3, [r4, #80]	; 0x50
   1a74c:	movs	r0, #0
   1a74e:	add	sp, #8
   1a750:	pop	{r4, r6, r7, pc}

0001a752 <clear_extent_buffer_dirty@@Base>:
   1a752:	push	{r0, r1, r4, r6, r7, lr}
   1a754:	mov	r4, r0
   1a756:	ldr	r3, [r0, #84]	; 0x54
   1a758:	lsls	r2, r3, #31
   1a75a:	bpl.n	1a786 <clear_extent_buffer_dirty@@Base+0x34>
   1a75c:	bic.w	r3, r3, #1
   1a760:	str	r3, [r0, #84]	; 0x54
   1a762:	ldrd	r2, r3, [r0, #40]	; 0x28
   1a766:	ldr	r1, [r0, #76]	; 0x4c
   1a768:	adds.w	r6, r2, #4294967295	; 0xffffffff
   1a76c:	adc.w	r7, r3, #4294967295	; 0xffffffff
   1a770:	adds	r6, r6, r1
   1a772:	adc.w	r7, r7, #0
   1a776:	strd	r6, r7, [sp]
   1a77a:	ldr	r0, [r0, #56]	; 0x38
   1a77c:	bl	19f84 <clear_extent_dirty@@Base>
   1a780:	mov	r0, r4
   1a782:	bl	1a0a4 <free_extent_buffer@@Base>
   1a786:	movs	r0, #0
   1a788:	add	sp, #8
   1a78a:	pop	{r4, r6, r7, pc}

0001a78c <memcmp_extent_buffer@@Base>:
   1a78c:	push	{r5}
   1a78e:	adds	r0, #96	; 0x60
   1a790:	mov	r5, r2
   1a792:	mov	r2, r3
   1a794:	add	r0, r5
   1a796:	ldr.w	r5, [sp], #4
   1a79a:	b.w	8878 <memcmp@plt>

0001a79e <read_extent_buffer@@Base>:
   1a79e:	adds	r0, #96	; 0x60
   1a7a0:	push	{r5}
   1a7a2:	mov	r5, r1
   1a7a4:	mov	r1, r2
   1a7a6:	mov	r2, r3
   1a7a8:	add	r1, r0
   1a7aa:	mov	r0, r5
   1a7ac:	ldr.w	r5, [sp], #4
   1a7b0:	b.w	882c <memcpy@plt>

0001a7b4 <write_extent_buffer@@Base>:
   1a7b4:	push	{r5}
   1a7b6:	adds	r0, #96	; 0x60
   1a7b8:	mov	r5, r2
   1a7ba:	mov	r2, r3
   1a7bc:	add	r0, r5
   1a7be:	ldr.w	r5, [sp], #4
   1a7c2:	b.w	882c <memcpy@plt>

0001a7c6 <copy_extent_buffer@@Base>:
   1a7c6:	push	{r6}
   1a7c8:	adds	r0, #96	; 0x60
   1a7ca:	adds	r1, #96	; 0x60
   1a7cc:	mov	r6, r2
   1a7ce:	add	r1, r3
   1a7d0:	ldr	r2, [sp, #4]
   1a7d2:	add	r0, r6
   1a7d4:	ldr.w	r6, [sp], #4
   1a7d8:	b.w	882c <memcpy@plt>

0001a7dc <btrfs_clone_extent_buffer@@Base>:
   1a7dc:	push	{r0, r1, r2, r4, r5, lr}
   1a7de:	mov	r5, r0
   1a7e0:	ldr	r3, [r0, #76]	; 0x4c
   1a7e2:	str	r3, [sp, #0]
   1a7e4:	ldrd	r2, r3, [r0, #40]	; 0x28
   1a7e8:	ldr	r0, [r0, #92]	; 0x5c
   1a7ea:	bl	1974a <add_merge_cache_extent@@Base+0x1da>
   1a7ee:	mov	r4, r0
   1a7f0:	cbz	r0, 1a80a <btrfs_clone_extent_buffer@@Base+0x2e>
   1a7f2:	movs	r3, #0
   1a7f4:	str	r3, [r0, #56]	; 0x38
   1a7f6:	ldr	r2, [r5, #76]	; 0x4c
   1a7f8:	mov	r1, r5
   1a7fa:	str	r2, [sp, #0]
   1a7fc:	mov	r2, r3
   1a7fe:	bl	1a7c6 <copy_extent_buffer@@Base>
   1a802:	ldr	r3, [r4, #84]	; 0x54
   1a804:	orr.w	r3, r3, #2048	; 0x800
   1a808:	str	r3, [r4, #84]	; 0x54
   1a80a:	mov	r0, r4
   1a80c:	add	sp, #12
   1a80e:	pop	{r4, r5, pc}

0001a810 <memmove_extent_buffer@@Base>:
   1a810:	adds	r0, #96	; 0x60
   1a812:	push	{r5}
   1a814:	mov	r5, r1
   1a816:	mov	r1, r2
   1a818:	mov	r2, r3
   1a81a:	add	r1, r0
   1a81c:	add	r0, r5
   1a81e:	ldr.w	r5, [sp], #4
   1a822:	b.w	87b8 <memmove@plt>

0001a826 <memset_extent_buffer@@Base>:
   1a826:	push	{r5}
   1a828:	adds	r0, #96	; 0x60
   1a82a:	mov	r5, r2
   1a82c:	mov	r2, r3
   1a82e:	add	r0, r5
   1a830:	ldr.w	r5, [sp], #4
   1a834:	b.w	8bf4 <memset@plt>

0001a838 <extent_buffer_test_bit@@Base>:
   1a838:	cmp	r2, #0
   1a83a:	mov	r3, r2
   1a83c:	it	lt
   1a83e:	addlt	r3, r2, #7
   1a840:	add	r1, r0
   1a842:	and.w	r2, r2, #7
   1a846:	add.w	r0, r1, r3, asr #3
   1a84a:	ldrb.w	r0, [r0, #96]	; 0x60
   1a84e:	asrs	r0, r2
   1a850:	and.w	r0, r0, #1
   1a854:	bx	lr
   1a856:	nop

0001a858 <__crc32c_le@@Base>:
   1a858:	push	{r4, lr}
   1a85a:	add	r2, r1
   1a85c:	ldr	r4, [pc, #24]	; (1a878 <__crc32c_le@@Base+0x20>)
   1a85e:	add	r4, pc
   1a860:	cmp	r1, r2
   1a862:	bne.n	1a866 <__crc32c_le@@Base+0xe>
   1a864:	pop	{r4, pc}
   1a866:	ldrb.w	r3, [r1], #1
   1a86a:	eors	r3, r0
   1a86c:	uxtb	r3, r3
   1a86e:	ldr.w	r3, [r4, r3, lsl #2]
   1a872:	eor.w	r0, r3, r0, lsr #8
   1a876:	b.n	1a860 <__crc32c_le@@Base+0x8>
   1a878:	ldrh	r6, [r2, r4]
   1a87a:	movs	r2, r0

0001a87c <crc32c_optimization_init@@Base>:
   1a87c:	bx	lr

0001a87e <crc32c_le@@Base>:
   1a87e:	b.w	1a858 <__crc32c_le@@Base>
   1a882:	nop

0001a884 <__btrfs_warning@@Base>:
   1a884:	push	{r0, r1, r2, r3}
   1a886:	push	{r4, r5, lr}
   1a888:	sub	sp, #20
   1a88a:	add	r4, sp, #32
   1a88c:	ldr	r1, [pc, #88]	; (1a8e8 <__btrfs_warning@@Base+0x64>)
   1a88e:	ldr	r3, [pc, #92]	; (1a8ec <__btrfs_warning@@Base+0x68>)
   1a890:	ldr.w	r2, [r4], #4
   1a894:	add	r1, pc
   1a896:	add	r3, pc
   1a898:	ldr	r0, [pc, #84]	; (1a8f0 <__btrfs_warning@@Base+0x6c>)
   1a89a:	str	r2, [sp, #4]
   1a89c:	add	r0, pc
   1a89e:	ldr	r2, [pc, #84]	; (1a8f4 <__btrfs_warning@@Base+0x70>)
   1a8a0:	ldr	r2, [r1, r2]
   1a8a2:	ldr	r1, [pc, #84]	; (1a8f8 <__btrfs_warning@@Base+0x74>)
   1a8a4:	ldr	r2, [r2, #0]
   1a8a6:	str	r2, [sp, #12]
   1a8a8:	mov.w	r2, #0
   1a8ac:	ldr	r5, [r3, r1]
   1a8ae:	ldr	r1, [r5, #0]
   1a8b0:	blx	8de4 <fputs@plt+0x4>
   1a8b4:	ldr	r2, [sp, #4]
   1a8b6:	mov	r3, r4
   1a8b8:	movs	r1, #1
   1a8ba:	ldr	r0, [r5, #0]
   1a8bc:	str	r4, [sp, #8]
   1a8be:	blx	8ad4 <__vfprintf_chk@plt>
   1a8c2:	ldr	r1, [r5, #0]
   1a8c4:	movs	r0, #10
   1a8c6:	blx	8d34 <fputc@plt+0x4>
   1a8ca:	ldr	r2, [pc, #48]	; (1a8fc <__btrfs_warning@@Base+0x78>)
   1a8cc:	ldr	r3, [pc, #36]	; (1a8f4 <__btrfs_warning@@Base+0x70>)
   1a8ce:	add	r2, pc
   1a8d0:	ldr	r3, [r2, r3]
   1a8d2:	ldr	r2, [r3, #0]
   1a8d4:	ldr	r3, [sp, #12]
   1a8d6:	eors	r2, r3
   1a8d8:	beq.n	1a8de <__btrfs_warning@@Base+0x5a>
   1a8da:	blx	88e4 <__stack_chk_fail@plt>
   1a8de:	add	sp, #20
   1a8e0:	ldmia.w	sp!, {r4, r5, lr}
   1a8e4:	add	sp, #16
   1a8e6:	bx	lr
   1a8e8:	b.n	1a224 <alloc_extent_buffer@@Base+0x82>
   1a8ea:	movs	r4, r0
   1a8ec:	b.n	1a224 <alloc_extent_buffer@@Base+0x82>
   1a8ee:	movs	r4, r0
   1a8f0:	ldrsh	r0, [r3, r3]
   1a8f2:	movs	r2, r0
   1a8f4:	lsls	r4, r7, #9
   1a8f6:	movs	r0, r0
   1a8f8:	lsls	r4, r1, #10
   1a8fa:	movs	r0, r0
   1a8fc:	b.n	1a1c4 <alloc_extent_buffer@@Base+0x22>
   1a8fe:	movs	r4, r0

0001a900 <__btrfs_error@@Base>:
   1a900:	push	{r0, r1, r2, r3}
   1a902:	push	{r4, r5, lr}
   1a904:	sub	sp, #20
   1a906:	add	r4, sp, #32
   1a908:	ldr	r1, [pc, #88]	; (1a964 <__btrfs_error@@Base+0x64>)
   1a90a:	ldr	r3, [pc, #92]	; (1a968 <__btrfs_error@@Base+0x68>)
   1a90c:	ldr.w	r2, [r4], #4
   1a910:	add	r1, pc
   1a912:	add	r3, pc
   1a914:	ldr	r0, [pc, #84]	; (1a96c <__btrfs_error@@Base+0x6c>)
   1a916:	str	r2, [sp, #4]
   1a918:	add	r0, pc
   1a91a:	ldr	r2, [pc, #84]	; (1a970 <__btrfs_error@@Base+0x70>)
   1a91c:	ldr	r2, [r1, r2]
   1a91e:	ldr	r1, [pc, #84]	; (1a974 <__btrfs_error@@Base+0x74>)
   1a920:	ldr	r2, [r2, #0]
   1a922:	str	r2, [sp, #12]
   1a924:	mov.w	r2, #0
   1a928:	ldr	r5, [r3, r1]
   1a92a:	ldr	r1, [r5, #0]
   1a92c:	blx	8de4 <fputs@plt+0x4>
   1a930:	ldr	r2, [sp, #4]
   1a932:	mov	r3, r4
   1a934:	movs	r1, #1
   1a936:	ldr	r0, [r5, #0]
   1a938:	str	r4, [sp, #8]
   1a93a:	blx	8ad4 <__vfprintf_chk@plt>
   1a93e:	ldr	r1, [r5, #0]
   1a940:	movs	r0, #10
   1a942:	blx	8d34 <fputc@plt+0x4>
   1a946:	ldr	r2, [pc, #48]	; (1a978 <__btrfs_error@@Base+0x78>)
   1a948:	ldr	r3, [pc, #36]	; (1a970 <__btrfs_error@@Base+0x70>)
   1a94a:	add	r2, pc
   1a94c:	ldr	r3, [r2, r3]
   1a94e:	ldr	r2, [r3, #0]
   1a950:	ldr	r3, [sp, #12]
   1a952:	eors	r2, r3
   1a954:	beq.n	1a95a <__btrfs_error@@Base+0x5a>
   1a956:	blx	88e4 <__stack_chk_fail@plt>
   1a95a:	add	sp, #20
   1a95c:	ldmia.w	sp!, {r4, r5, lr}
   1a960:	add	sp, #16
   1a962:	bx	lr
   1a964:	b.n	1a1a8 <alloc_extent_buffer@@Base+0x6>
   1a966:	movs	r4, r0
   1a968:	b.n	1a1a8 <alloc_extent_buffer@@Base+0x6>
   1a96a:	movs	r4, r0
   1a96c:	ldrsh	r6, [r4, r1]
   1a96e:	movs	r2, r0
   1a970:	lsls	r4, r7, #9
   1a972:	movs	r0, r0
   1a974:	lsls	r4, r1, #10
   1a976:	movs	r0, r0
   1a978:	b.n	1b148 <rb_free_nodes@@Base+0x3c6>
   1a97a:	movs	r4, r0

0001a97c <__btrfs_warning_on@@Base>:
   1a97c:	push	{r1, r2, r3}
   1a97e:	push	{r4, lr}
   1a980:	sub	sp, #20
   1a982:	ldr	r1, [pc, #92]	; (1a9e0 <__btrfs_warning_on@@Base+0x64>)
   1a984:	ldr	r2, [sp, #28]
   1a986:	add	r1, pc
   1a988:	ldr	r3, [pc, #88]	; (1a9e4 <__btrfs_warning_on@@Base+0x68>)
   1a98a:	str	r2, [sp, #4]
   1a98c:	add	r3, pc
   1a98e:	ldr	r2, [pc, #88]	; (1a9e8 <__btrfs_warning_on@@Base+0x6c>)
   1a990:	ldr	r2, [r1, r2]
   1a992:	ldr	r2, [r2, #0]
   1a994:	str	r2, [sp, #12]
   1a996:	mov.w	r2, #0
   1a99a:	cbz	r0, 1a9c2 <__btrfs_warning_on@@Base+0x46>
   1a99c:	ldr	r1, [pc, #76]	; (1a9ec <__btrfs_warning_on@@Base+0x70>)
   1a99e:	ldr	r0, [pc, #80]	; (1a9f0 <__btrfs_warning_on@@Base+0x74>)
   1a9a0:	ldr	r4, [r3, r1]
   1a9a2:	add	r0, pc
   1a9a4:	ldr	r1, [r4, #0]
   1a9a6:	blx	8de4 <fputs@plt+0x4>
   1a9aa:	add	r3, sp, #32
   1a9ac:	ldr	r2, [sp, #4]
   1a9ae:	movs	r1, #1
   1a9b0:	ldr	r0, [r4, #0]
   1a9b2:	str	r3, [sp, #8]
   1a9b4:	blx	8ad4 <__vfprintf_chk@plt>
   1a9b8:	ldr	r1, [r4, #0]
   1a9ba:	movs	r0, #10
   1a9bc:	blx	8d34 <fputc@plt+0x4>
   1a9c0:	movs	r0, #1
   1a9c2:	ldr	r2, [pc, #48]	; (1a9f4 <__btrfs_warning_on@@Base+0x78>)
   1a9c4:	ldr	r3, [pc, #32]	; (1a9e8 <__btrfs_warning_on@@Base+0x6c>)
   1a9c6:	add	r2, pc
   1a9c8:	ldr	r3, [r2, r3]
   1a9ca:	ldr	r2, [r3, #0]
   1a9cc:	ldr	r3, [sp, #12]
   1a9ce:	eors	r2, r3
   1a9d0:	beq.n	1a9d6 <__btrfs_warning_on@@Base+0x5a>
   1a9d2:	blx	88e4 <__stack_chk_fail@plt>
   1a9d6:	add	sp, #20
   1a9d8:	ldmia.w	sp!, {r4, lr}
   1a9dc:	add	sp, #12
   1a9de:	bx	lr
   1a9e0:	b.n	1b138 <rb_free_nodes@@Base+0x3b6>
   1a9e2:	movs	r4, r0
   1a9e4:	b.n	1b130 <rb_free_nodes@@Base+0x3ae>
   1a9e6:	movs	r4, r0
   1a9e8:	lsls	r4, r7, #9
   1a9ea:	movs	r0, r0
   1a9ec:	lsls	r4, r1, #10
   1a9ee:	movs	r0, r0
   1a9f0:	ldrb	r2, [r2, r7]
   1a9f2:	movs	r2, r0
   1a9f4:	b.n	1b0cc <rb_free_nodes@@Base+0x34a>
   1a9f6:	movs	r4, r0

0001a9f8 <__btrfs_error_on@@Base>:
   1a9f8:	push	{r1, r2, r3}
   1a9fa:	push	{r4, lr}
   1a9fc:	sub	sp, #20
   1a9fe:	ldr	r1, [pc, #92]	; (1aa5c <__btrfs_error_on@@Base+0x64>)
   1aa00:	ldr	r2, [sp, #28]
   1aa02:	add	r1, pc
   1aa04:	ldr	r3, [pc, #88]	; (1aa60 <__btrfs_error_on@@Base+0x68>)
   1aa06:	str	r2, [sp, #4]
   1aa08:	add	r3, pc
   1aa0a:	ldr	r2, [pc, #88]	; (1aa64 <__btrfs_error_on@@Base+0x6c>)
   1aa0c:	ldr	r2, [r1, r2]
   1aa0e:	ldr	r2, [r2, #0]
   1aa10:	str	r2, [sp, #12]
   1aa12:	mov.w	r2, #0
   1aa16:	cbz	r0, 1aa3e <__btrfs_error_on@@Base+0x46>
   1aa18:	ldr	r1, [pc, #76]	; (1aa68 <__btrfs_error_on@@Base+0x70>)
   1aa1a:	ldr	r0, [pc, #80]	; (1aa6c <__btrfs_error_on@@Base+0x74>)
   1aa1c:	ldr	r4, [r3, r1]
   1aa1e:	add	r0, pc
   1aa20:	ldr	r1, [r4, #0]
   1aa22:	blx	8de4 <fputs@plt+0x4>
   1aa26:	add	r3, sp, #32
   1aa28:	ldr	r2, [sp, #4]
   1aa2a:	movs	r1, #1
   1aa2c:	ldr	r0, [r4, #0]
   1aa2e:	str	r3, [sp, #8]
   1aa30:	blx	8ad4 <__vfprintf_chk@plt>
   1aa34:	ldr	r1, [r4, #0]
   1aa36:	movs	r0, #10
   1aa38:	blx	8d34 <fputc@plt+0x4>
   1aa3c:	movs	r0, #1
   1aa3e:	ldr	r2, [pc, #48]	; (1aa70 <__btrfs_error_on@@Base+0x78>)
   1aa40:	ldr	r3, [pc, #32]	; (1aa64 <__btrfs_error_on@@Base+0x6c>)
   1aa42:	add	r2, pc
   1aa44:	ldr	r3, [r2, r3]
   1aa46:	ldr	r2, [r3, #0]
   1aa48:	ldr	r3, [sp, #12]
   1aa4a:	eors	r2, r3
   1aa4c:	beq.n	1aa52 <__btrfs_error_on@@Base+0x5a>
   1aa4e:	blx	88e4 <__stack_chk_fail@plt>
   1aa52:	add	sp, #20
   1aa54:	ldmia.w	sp!, {r4, lr}
   1aa58:	add	sp, #12
   1aa5a:	bx	lr
   1aa5c:	b.n	1b0bc <rb_free_nodes@@Base+0x33a>
   1aa5e:	movs	r4, r0
   1aa60:	b.n	1b0b4 <rb_free_nodes@@Base+0x332>
   1aa62:	movs	r4, r0
   1aa64:	lsls	r4, r7, #9
   1aa66:	movs	r0, r0
   1aa68:	lsls	r4, r1, #10
   1aa6a:	movs	r0, r0
   1aa6c:	ldrb	r0, [r4, r5]
   1aa6e:	movs	r2, r0
   1aa70:	b.n	1b050 <rb_free_nodes@@Base+0x2ce>
   1aa72:	movs	r4, r0

0001aa74 <btrfs_uuid_to_key@@Base>:
   1aa74:	ldr	r2, [r0, #0]
   1aa76:	ldr	r3, [r0, #4]
   1aa78:	str	r2, [r1, #0]
   1aa7a:	str	r3, [r1, #4]
   1aa7c:	ldr	r2, [r0, #8]
   1aa7e:	ldr	r3, [r0, #12]
   1aa80:	str.w	r2, [r1, #9]
   1aa84:	str.w	r3, [r1, #13]
   1aa88:	bx	lr
   1aa8a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1aa8e:	mov	r9, r0
   1aa90:	mov	r0, r1
   1aa92:	ldr	r1, [pc, #260]	; (1ab98 <btrfs_uuid_to_key@@Base+0x124>)
   1aa94:	mov	r7, r2
   1aa96:	sub.w	sp, sp, #4128	; 0x1020
   1aa9a:	ldr	r2, [pc, #256]	; (1ab9c <btrfs_uuid_to_key@@Base+0x128>)
   1aa9c:	sub	sp, #24
   1aa9e:	add	r1, pc
   1aaa0:	add	r6, sp, #56	; 0x38
   1aaa2:	add	r5, sp, #28
   1aaa4:	sub.w	r4, r6, #8
   1aaa8:	ldr	r2, [r1, r2]
   1aaaa:	mov	r8, r3
   1aaac:	add.w	r3, sp, #4128	; 0x1020
   1aab0:	mov	r1, r5
   1aab2:	ldr	r2, [r2, #0]
   1aab4:	str	r2, [r3, #20]
   1aab6:	mov.w	r2, #0
   1aaba:	adds	r3, #20
   1aabc:	strb.w	r7, [sp, #36]	; 0x24
   1aac0:	bl	1aa74 <btrfs_uuid_to_key@@Base>
   1aac4:	mov.w	r2, #4096	; 0x1000
   1aac8:	movs	r1, #0
   1aaca:	mov	r0, r4
   1aacc:	ldr.w	sl, [pc, #208]	; 1aba0 <btrfs_uuid_to_key@@Base+0x12c>
   1aad0:	blx	8bf8 <memset@plt+0x4>
   1aad4:	movs	r2, #9
   1aad6:	movs	r3, #0
   1aad8:	strd	r2, r3, [r6, #-8]
   1aadc:	ldrd	r2, r3, [r6, #-28]
   1aae0:	mov	r0, r9
   1aae2:	strd	r7, r7, [r4, #56]	; 0x38
   1aae6:	movs	r7, #1
   1aae8:	ldr	r1, [pc, #168]	; (1ab94 <btrfs_uuid_to_key@@Base+0x120>)
   1aaea:	add	sl, pc
   1aaec:	strd	r2, r3, [r4, #8]
   1aaf0:	strd	r2, r3, [r4, #16]
   1aaf4:	ldr.w	r2, [r6, #-19]
   1aaf8:	ldr.w	r3, [r6, #-15]
   1aafc:	str	r7, [r4, #64]	; 0x40
   1aafe:	strd	r2, r3, [r4, #24]
   1ab02:	strd	r2, r3, [r4, #32]
   1ab06:	mov.w	r2, #4294967295	; 0xffffffff
   1ab0a:	mov.w	r3, #4294967295	; 0xffffffff
   1ab0e:	strd	r2, r3, [r4, #48]	; 0x30
   1ab12:	mov	r2, r4
   1ab14:	blx	89cc <ioctl@plt>
   1ab18:	cmp	r0, #0
   1ab1a:	bge.n	1ab4a <btrfs_uuid_to_key@@Base+0xd6>
   1ab1c:	ldr	r3, [pc, #132]	; (1aba4 <btrfs_uuid_to_key@@Base+0x130>)
   1ab1e:	ldr.w	r3, [sl, r3]
   1ab22:	str	r0, [sp, #16]
   1ab24:	ldr.w	r1, [r6, #-19]
   1ab28:	ldr.w	r2, [r6, #-15]
   1ab2c:	strd	r1, r2, [sp, #8]
   1ab30:	ldrd	r1, r2, [r6, #-28]
   1ab34:	strd	r1, r2, [sp]
   1ab38:	mov	r1, r7
   1ab3a:	ldr	r2, [pc, #108]	; (1aba8 <btrfs_uuid_to_key@@Base+0x134>)
   1ab3c:	ldr	r0, [r3, #0]
   1ab3e:	add	r2, pc
   1ab40:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1ab44:	mvn.w	r0, #1
   1ab48:	b.n	1ab70 <btrfs_uuid_to_key@@Base+0xfc>
   1ab4a:	ldr	r3, [r4, #64]	; 0x40
   1ab4c:	cmp	r3, #0
   1ab4e:	beq.n	1ab44 <btrfs_uuid_to_key@@Base+0xd0>
   1ab50:	ldr.w	r2, [r4, #132]	; 0x84
   1ab54:	ands.w	r0, r2, #7
   1ab58:	bne.n	1ab5c <btrfs_uuid_to_key@@Base+0xe8>
   1ab5a:	cbnz	r2, 1ab68 <btrfs_uuid_to_key@@Base+0xf4>
   1ab5c:	ldr	r1, [pc, #76]	; (1abac <btrfs_uuid_to_key@@Base+0x138>)
   1ab5e:	movs	r0, #1
   1ab60:	add	r1, pc
   1ab62:	blx	8c6c <__printf_chk@plt+0x4>
   1ab66:	b.n	1ab44 <btrfs_uuid_to_key@@Base+0xd0>
   1ab68:	ldrd	r2, r3, [r4, #136]	; 0x88
   1ab6c:	strd	r2, r3, [r8]
   1ab70:	ldr	r1, [pc, #60]	; (1abb0 <btrfs_uuid_to_key@@Base+0x13c>)
   1ab72:	add.w	r3, sp, #4128	; 0x1020
   1ab76:	ldr	r2, [pc, #36]	; (1ab9c <btrfs_uuid_to_key@@Base+0x128>)
   1ab78:	adds	r3, #20
   1ab7a:	add	r1, pc
   1ab7c:	ldr	r2, [r1, r2]
   1ab7e:	ldr	r1, [r2, #0]
   1ab80:	ldr	r2, [r3, #0]
   1ab82:	eors	r1, r2
   1ab84:	beq.n	1ab8a <btrfs_uuid_to_key@@Base+0x116>
   1ab86:	blx	88e4 <__stack_chk_fail@plt>
   1ab8a:	add.w	sp, sp, #4128	; 0x1020
   1ab8e:	add	sp, #24
   1ab90:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1ab94:	str	r4, [sp, #68]	; 0x44
   1ab96:	beq.n	1ab9a <btrfs_uuid_to_key@@Base+0x126>
   1ab98:	b.n	1b0c0 <rb_free_nodes@@Base+0x33e>
   1ab9a:	movs	r4, r0
   1ab9c:	lsls	r4, r7, #9
   1ab9e:	movs	r0, r0
   1aba0:	b.n	1b030 <rb_free_nodes@@Base+0x2ae>
   1aba2:	movs	r4, r0
   1aba4:	lsls	r4, r1, #10
   1aba6:	movs	r0, r0
   1aba8:	ldrb	r0, [r1, r1]
   1abaa:	movs	r2, r0
   1abac:	ldrb	r4, [r7, r1]
   1abae:	movs	r2, r0
   1abb0:	b.n	1af20 <rb_free_nodes@@Base+0x19e>
   1abb2:	movs	r4, r0

0001abb4 <btrfs_lookup_uuid_subvol_item@@Base>:
   1abb4:	mov	r3, r2
   1abb6:	movs	r2, #251	; 0xfb
   1abb8:	b.n	1aa8a <btrfs_uuid_to_key@@Base+0x16>

0001abba <btrfs_lookup_uuid_received_subvol_item@@Base>:
   1abba:	mov	r3, r2
   1abbc:	movs	r2, #252	; 0xfc
   1abbe:	b.n	1aa8a <btrfs_uuid_to_key@@Base+0x16>

0001abc0 <arg_strtou64@@Base>:
   1abc0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1abc2:	add	r1, sp, #8
   1abc4:	ldr	r2, [pc, #128]	; (1ac48 <arg_strtou64@@Base+0x88>)
   1abc6:	ldr	r3, [pc, #132]	; (1ac4c <arg_strtou64@@Base+0x8c>)
   1abc8:	add	r2, pc
   1abca:	str	r0, [sp, #4]
   1abcc:	ldr	r6, [pc, #128]	; (1ac50 <arg_strtou64@@Base+0x90>)
   1abce:	ldr	r3, [r2, r3]
   1abd0:	movs	r2, #0
   1abd2:	add	r6, pc
   1abd4:	ldr	r3, [r3, #0]
   1abd6:	str	r3, [sp, #12]
   1abd8:	mov.w	r3, #0
   1abdc:	str	r2, [sp, #8]
   1abde:	blx	8c38 <strtoull@plt>
   1abe2:	ldrd	r3, r2, [sp, #4]
   1abe6:	mov	r4, r0
   1abe8:	mov	r5, r1
   1abea:	cbz	r2, 1ac06 <arg_strtou64@@Base+0x46>
   1abec:	ldrb	r2, [r2, #0]
   1abee:	cbz	r2, 1ac06 <arg_strtou64@@Base+0x46>
   1abf0:	ldr	r2, [pc, #96]	; (1ac54 <arg_strtou64@@Base+0x94>)
   1abf2:	ldr	r0, [r6, r2]
   1abf4:	ldr	r2, [pc, #96]	; (1ac58 <arg_strtou64@@Base+0x98>)
   1abf6:	add	r2, pc
   1abf8:	ldr	r0, [r0, #0]
   1abfa:	movs	r1, #1
   1abfc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1ac00:	movs	r0, #1
   1ac02:	blx	8b58 <exit@plt>
   1ac06:	ldrb	r2, [r3, #0]
   1ac08:	cmp	r2, #45	; 0x2d
   1ac0a:	bne.n	1ac16 <arg_strtou64@@Base+0x56>
   1ac0c:	ldr	r2, [pc, #68]	; (1ac54 <arg_strtou64@@Base+0x94>)
   1ac0e:	ldr	r0, [r6, r2]
   1ac10:	ldr	r2, [pc, #72]	; (1ac5c <arg_strtou64@@Base+0x9c>)
   1ac12:	add	r2, pc
   1ac14:	b.n	1abf8 <arg_strtou64@@Base+0x38>
   1ac16:	adds	r2, r5, #1
   1ac18:	it	eq
   1ac1a:	cmpeq.w	r4, #4294967295	; 0xffffffff
   1ac1e:	bne.n	1ac2a <arg_strtou64@@Base+0x6a>
   1ac20:	ldr	r2, [pc, #48]	; (1ac54 <arg_strtou64@@Base+0x94>)
   1ac22:	ldr	r0, [r6, r2]
   1ac24:	ldr	r2, [pc, #56]	; (1ac60 <arg_strtou64@@Base+0xa0>)
   1ac26:	add	r2, pc
   1ac28:	b.n	1abf8 <arg_strtou64@@Base+0x38>
   1ac2a:	ldr	r2, [pc, #56]	; (1ac64 <arg_strtou64@@Base+0xa4>)
   1ac2c:	ldr	r3, [pc, #28]	; (1ac4c <arg_strtou64@@Base+0x8c>)
   1ac2e:	add	r2, pc
   1ac30:	ldr	r3, [r2, r3]
   1ac32:	ldr	r2, [r3, #0]
   1ac34:	ldr	r3, [sp, #12]
   1ac36:	eors	r2, r3
   1ac38:	beq.n	1ac3e <arg_strtou64@@Base+0x7e>
   1ac3a:	blx	88e4 <__stack_chk_fail@plt>
   1ac3e:	mov	r0, r4
   1ac40:	mov	r1, r5
   1ac42:	add	sp, #16
   1ac44:	pop	{r4, r5, r6, pc}
   1ac46:	nop
   1ac48:	b.n	1af1c <rb_free_nodes@@Base+0x19a>
   1ac4a:	movs	r4, r0
   1ac4c:	lsls	r4, r7, #9
   1ac4e:	movs	r0, r0
   1ac50:	b.n	1af10 <rb_free_nodes@@Base+0x18e>
   1ac52:	movs	r4, r0
   1ac54:	lsls	r4, r1, #10
   1ac56:	movs	r0, r0
   1ac58:	ldrb	r7, [r1, r0]
   1ac5a:	movs	r2, r0
   1ac5c:	ldrb	r4, [r3, r0]
   1ac5e:	movs	r2, r0
   1ac60:	ldrb	r7, [r5, r0]
   1ac62:	movs	r2, r0
   1ac64:	b.n	1ae6c <rb_free_nodes@@Base+0xea>
   1ac66:	movs	r4, r0

0001ac68 <lookup_path_rootid@@Base>:
   1ac68:	push	{r4, r5, r6, lr}
   1ac6a:	mov	r4, r1
   1ac6c:	ldr	r1, [pc, #128]	; (1acf0 <lookup_path_rootid@@Base+0x88>)
   1ac6e:	sub.w	sp, sp, #4096	; 0x1000
   1ac72:	ldr	r2, [pc, #128]	; (1acf4 <lookup_path_rootid@@Base+0x8c>)
   1ac74:	sub	sp, #8
   1ac76:	add	r1, pc
   1ac78:	add.w	r3, sp, #4096	; 0x1000
   1ac7c:	adds	r3, #4
   1ac7e:	add	r6, sp, #8
   1ac80:	ldr	r2, [r1, r2]
   1ac82:	mov	r5, r0
   1ac84:	movs	r1, #0
   1ac86:	ldr	r2, [r2, #0]
   1ac88:	str	r2, [r3, #0]
   1ac8a:	mov.w	r2, #0
   1ac8e:	sub.w	r3, r6, #8
   1ac92:	mov.w	r2, #4096	; 0x1000
   1ac96:	mov	r0, r3
   1ac98:	blx	8bf8 <memset@plt+0x4>
   1ac9c:	movs	r1, #0
   1ac9e:	mov	r3, r0
   1aca0:	mov.w	r0, #256	; 0x100
   1aca4:	mov	r2, r3
   1aca6:	strd	r0, r1, [r3, #8]
   1acaa:	ldr	r1, [pc, #64]	; (1acec <lookup_path_rootid@@Base+0x84>)
   1acac:	mov	r0, r5
   1acae:	blx	89cc <ioctl@plt>
   1acb2:	cmp	r0, #0
   1acb4:	bge.n	1acd8 <lookup_path_rootid@@Base+0x70>
   1acb6:	blx	8bac <__errno_location@plt>
   1acba:	ldr	r0, [r0, #0]
   1acbc:	negs	r0, r0
   1acbe:	ldr	r1, [pc, #56]	; (1acf8 <lookup_path_rootid@@Base+0x90>)
   1acc0:	add.w	r3, sp, #4096	; 0x1000
   1acc4:	ldr	r2, [pc, #44]	; (1acf4 <lookup_path_rootid@@Base+0x8c>)
   1acc6:	adds	r3, #4
   1acc8:	add	r1, pc
   1acca:	ldr	r2, [r1, r2]
   1accc:	ldr	r1, [r2, #0]
   1acce:	ldr	r2, [r3, #0]
   1acd0:	eors	r1, r2
   1acd2:	beq.n	1ace4 <lookup_path_rootid@@Base+0x7c>
   1acd4:	blx	88e4 <__stack_chk_fail@plt>
   1acd8:	ldrd	r2, r3, [r6, #-8]
   1acdc:	movs	r0, #0
   1acde:	strd	r2, r3, [r4]
   1ace2:	b.n	1acbe <lookup_path_rootid@@Base+0x56>
   1ace4:	add.w	sp, sp, #4096	; 0x1000
   1ace8:	add	sp, #8
   1acea:	pop	{r4, r5, r6, pc}
   1acec:	str	r4, [sp, #72]	; 0x48
   1acee:	beq.n	1acf2 <lookup_path_rootid@@Base+0x8a>
   1acf0:	b.n	1ae68 <rb_free_nodes@@Base+0xe6>
   1acf2:	movs	r4, r0
   1acf4:	lsls	r4, r7, #9
   1acf6:	movs	r0, r0
   1acf8:	b.n	1adcc <rb_free_nodes@@Base+0x4a>
   1acfa:	movs	r4, r0

0001acfc <rb_insert@@Base>:
   1acfc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ad00:	movs	r3, #0
   1ad02:	mov	r7, r0
   1ad04:	mov	r6, r1
   1ad06:	mov	r8, r2
   1ad08:	mov	r4, r0
   1ad0a:	ldr	r5, [r4, #0]
   1ad0c:	cbnz	r5, 1ad24 <rb_insert@@Base+0x28>
   1ad0e:	mov	r0, r6
   1ad10:	strd	r3, r5, [r6]
   1ad14:	str	r5, [r6, #8]
   1ad16:	mov	r1, r7
   1ad18:	str	r6, [r4, #0]
   1ad1a:	bl	16fae <rb_insert_color@@Base>
   1ad1e:	mov	r0, r5
   1ad20:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ad24:	mov	r1, r6
   1ad26:	mov	r0, r5
   1ad28:	blx	r8
   1ad2a:	cmp	r0, #0
   1ad2c:	bge.n	1ad36 <rb_insert@@Base+0x3a>
   1ad2e:	ldr	r4, [r4, #0]
   1ad30:	adds	r4, #8
   1ad32:	mov	r3, r5
   1ad34:	b.n	1ad0a <rb_insert@@Base+0xe>
   1ad36:	beq.n	1ad3e <rb_insert@@Base+0x42>
   1ad38:	ldr	r4, [r4, #0]
   1ad3a:	adds	r4, #4
   1ad3c:	b.n	1ad32 <rb_insert@@Base+0x36>
   1ad3e:	mvn.w	r0, #16
   1ad42:	b.n	1ad20 <rb_insert@@Base+0x24>

0001ad44 <rb_search@@Base>:
   1ad44:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ad48:	movs	r5, #0
   1ad4a:	ldr	r4, [r0, #0]
   1ad4c:	mov	r8, r1
   1ad4e:	mov	r7, r2
   1ad50:	mov	r6, r3
   1ad52:	mov	r0, r5
   1ad54:	cbnz	r4, 1ad6a <rb_search@@Base+0x26>
   1ad56:	cbz	r6, 1ad64 <rb_search@@Base+0x20>
   1ad58:	cbz	r0, 1ad62 <rb_search@@Base+0x1e>
   1ad5a:	cmp	r5, #0
   1ad5c:	ble.n	1ad62 <rb_search@@Base+0x1e>
   1ad5e:	bl	172ea <rb_next@@Base>
   1ad62:	str	r0, [r6, #0]
   1ad64:	mov	r0, r4
   1ad66:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ad6a:	mov	r1, r8
   1ad6c:	mov	r0, r4
   1ad6e:	blx	r7
   1ad70:	subs	r5, r0, #0
   1ad72:	bge.n	1ad7c <rb_search@@Base+0x38>
   1ad74:	ldr	r3, [r4, #8]
   1ad76:	mov	r0, r4
   1ad78:	mov	r4, r3
   1ad7a:	b.n	1ad54 <rb_search@@Base+0x10>
   1ad7c:	beq.n	1ad64 <rb_search@@Base+0x20>
   1ad7e:	ldr	r3, [r4, #4]
   1ad80:	b.n	1ad76 <rb_search@@Base+0x32>

0001ad82 <rb_free_nodes@@Base>:
   1ad82:	push	{r4, r5, r6, lr}
   1ad84:	mov	r5, r0
   1ad86:	mov	r6, r1
   1ad88:	mov	r0, r5
   1ad8a:	bl	172ca <rb_first@@Base>
   1ad8e:	mov	r4, r0
   1ad90:	cbnz	r0, 1ad94 <rb_free_nodes@@Base+0x12>
   1ad92:	pop	{r4, r5, r6, pc}
   1ad94:	mov	r1, r5
   1ad96:	bl	17054 <rb_erase@@Base>
   1ad9a:	mov	r0, r4
   1ad9c:	blx	r6
   1ad9e:	b.n	1ad88 <rb_free_nodes@@Base+0x6>
   1ada0:	movs	r3, #25
   1ada2:	mla	r1, r3, r1, r0
   1ada6:	ldr.w	r0, [r1, #214]	; 0xd6
   1adaa:	ldr.w	r3, [r1, #218]	; 0xda
   1adae:	add	r0, r3
   1adb0:	bx	lr
   1adb2:	add.w	r2, r2, r2, lsl #5
   1adb6:	movs	r3, #17
   1adb8:	adds	r2, #101	; 0x65
   1adba:	b.w	1a7b4 <write_extent_buffer@@Base>
   1adbe:	movs	r3, #25
   1adc0:	muls	r2, r3
   1adc2:	movs	r3, #17
   1adc4:	adds	r2, #101	; 0x65
   1adc6:	b.w	1a7b4 <write_extent_buffer@@Base>
   1adca:	movs	r3, #25
   1adcc:	muls	r2, r3
   1adce:	movs	r3, #17
   1add0:	adds	r2, #101	; 0x65
   1add2:	b.w	1a79e <read_extent_buffer@@Base>
   1add6:	add.w	r2, r2, r2, lsl #5
   1adda:	movs	r3, #17
   1addc:	adds	r2, #101	; 0x65
   1adde:	b.w	1a79e <read_extent_buffer@@Base>
   1ade2:	ldr	r2, [pc, #64]	; (1ae24 <rb_free_nodes@@Base+0xa2>)
   1ade4:	movs	r1, #16
   1ade6:	ldr	r3, [pc, #64]	; (1ae28 <rb_free_nodes@@Base+0xa6>)
   1ade8:	push	{r4, lr}
   1adea:	add	r2, pc
   1adec:	sub	sp, #72	; 0x48
   1adee:	add	r4, sp, #4
   1adf0:	ldr	r3, [r2, r3]
   1adf2:	mov	r0, r4
   1adf4:	ldr	r3, [r3, #0]
   1adf6:	str	r3, [sp, #68]	; 0x44
   1adf8:	mov.w	r3, #0
   1adfc:	blx	8ae0 <backtrace@plt>
   1ae00:	movs	r2, #2
   1ae02:	mov	r1, r0
   1ae04:	mov	r0, r4
   1ae06:	blx	8e50 <backtrace_symbols_fd@plt>
   1ae0a:	ldr	r2, [pc, #32]	; (1ae2c <rb_free_nodes@@Base+0xaa>)
   1ae0c:	ldr	r3, [pc, #24]	; (1ae28 <rb_free_nodes@@Base+0xa6>)
   1ae0e:	add	r2, pc
   1ae10:	ldr	r3, [r2, r3]
   1ae12:	ldr	r2, [r3, #0]
   1ae14:	ldr	r3, [sp, #68]	; 0x44
   1ae16:	eors	r2, r3
   1ae18:	beq.n	1ae1e <rb_free_nodes@@Base+0x9c>
   1ae1a:	blx	88e4 <__stack_chk_fail@plt>
   1ae1e:	add	sp, #72	; 0x48
   1ae20:	pop	{r4, pc}
   1ae22:	nop
   1ae24:	svc	70	; 0x46
   1ae26:	movs	r4, r0
   1ae28:	lsls	r4, r7, #9
   1ae2a:	movs	r0, r0
   1ae2c:	svc	34	; 0x22
   1ae2e:	movs	r4, r0
   1ae30:	cbz	r0, 1ae42 <rb_free_nodes@@Base+0xc0>
   1ae32:	cmn.w	r0, #4096	; 0x1000
   1ae36:	bhi.n	1ae40 <rb_free_nodes@@Base+0xbe>
   1ae38:	ldr	r0, [r0, #84]	; 0x54
   1ae3a:	ubfx	r0, r0, #2, #1
   1ae3e:	bx	lr
   1ae40:	movs	r0, #0
   1ae42:	bx	lr
   1ae44:	ldr.w	r3, [r1, #192]	; 0xc0
   1ae48:	cbnz	r3, 1ae50 <rb_free_nodes@@Base+0xce>
   1ae4a:	ldr	r0, [r0, #0]
   1ae4c:	subs	r0, #101	; 0x65
   1ae4e:	bx	lr
   1ae50:	subs	r3, #1
   1ae52:	movs	r2, #25
   1ae54:	mla	r1, r2, r3, r1
   1ae58:	ldr.w	r0, [r1, #214]	; 0xd6
   1ae5c:	bx	lr
   1ae5e:	push	{r0, r1, r2, r3, r4, lr}
   1ae60:	ldr	r4, [pc, #36]	; (1ae88 <rb_free_nodes@@Base+0x106>)
   1ae62:	ldr	r5, [pc, #40]	; (1ae8c <rb_free_nodes@@Base+0x10a>)
   1ae64:	add	r4, pc
   1ae66:	ldr	r4, [r4, r5]
   1ae68:	strd	r2, r1, [sp]
   1ae6c:	movs	r1, #1
   1ae6e:	strd	r0, r3, [sp, #8]
   1ae72:	ldr	r2, [pc, #28]	; (1ae90 <rb_free_nodes@@Base+0x10e>)
   1ae74:	ldr	r3, [pc, #28]	; (1ae94 <rb_free_nodes@@Base+0x112>)
   1ae76:	add	r2, pc
   1ae78:	ldr	r0, [r4, #0]
   1ae7a:	add	r3, pc
   1ae7c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1ae80:	bl	1ade2 <rb_free_nodes@@Base+0x60>
   1ae84:	blx	8e08 <abort@plt>
   1ae88:	udf	#204	; 0xcc
   1ae8a:	movs	r4, r0
   1ae8c:	lsls	r4, r1, #10
   1ae8e:	movs	r0, r0
   1ae90:	movs	r1, #49	; 0x31
   1ae92:	movs	r2, r0
   1ae94:	ldr	r4, [r6, r7]
   1ae96:	movs	r2, r0
   1ae98:	push	{r3, lr}
   1ae9a:	cbz	r3, 1aea0 <rb_free_nodes@@Base+0x11e>
   1ae9c:	bl	1ae5e <rb_free_nodes@@Base+0xdc>
   1aea0:	pop	{r3, pc}
   1aea2:	push	{r4, r5, lr}
   1aea4:	sub	sp, #20
   1aea6:	ldr	r4, [pc, #40]	; (1aed0 <rb_free_nodes@@Base+0x14e>)
   1aea8:	ldr	r5, [pc, #40]	; (1aed4 <rb_free_nodes@@Base+0x152>)
   1aeaa:	add	r4, pc
   1aeac:	ldr	r4, [r4, r5]
   1aeae:	strd	r2, r1, [sp]
   1aeb2:	movs	r1, #1
   1aeb4:	strd	r0, r3, [sp, #8]
   1aeb8:	ldr	r2, [pc, #28]	; (1aed8 <rb_free_nodes@@Base+0x156>)
   1aeba:	ldr	r3, [pc, #32]	; (1aedc <rb_free_nodes@@Base+0x15a>)
   1aebc:	ldr	r0, [r4, #0]
   1aebe:	add	r2, pc
   1aec0:	add	r3, pc
   1aec2:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1aec6:	add	sp, #20
   1aec8:	ldmia.w	sp!, {r4, r5, lr}
   1aecc:	b.n	1ade2 <rb_free_nodes@@Base+0x60>
   1aece:	nop
   1aed0:	udf	#134	; 0x86
   1aed2:	movs	r4, r0
   1aed4:	lsls	r4, r1, #10
   1aed6:	movs	r0, r0
   1aed8:	adds	r3, #138	; 0x8a
   1aeda:	movs	r2, r0
   1aedc:	ldr	r6, [r5, r6]
   1aede:	movs	r2, r0
   1aee0:	cbz	r3, 1aee6 <rb_free_nodes@@Base+0x164>
   1aee2:	movs	r3, #1
   1aee4:	b.n	1aea2 <rb_free_nodes@@Base+0x120>
   1aee6:	bx	lr
   1aee8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aeec:	mov	r8, r3
   1aeee:	ldrd	r6, r3, [sp, #56]	; 0x38
   1aef2:	mov	r7, r0
   1aef4:	mov	fp, r1
   1aef6:	ldr	r0, [pc, #204]	; (1afc4 <rb_free_nodes@@Base+0x242>)
   1aef8:	ldr	r1, [pc, #204]	; (1afc8 <rb_free_nodes@@Base+0x246>)
   1aefa:	ldr.w	r4, [r2, r3, lsl #2]
   1aefe:	add	r0, pc
   1af00:	add	r1, pc
   1af02:	mov.w	r2, #1624	; 0x658
   1af06:	clz	r3, r4
   1af0a:	str	r1, [sp, #4]
   1af0c:	ldrd	sl, r9, [sp, #48]	; 0x30
   1af10:	lsrs	r3, r3, #5
   1af12:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1af16:	ldr.w	r5, [r4, #192]	; 0xc0
   1af1a:	ldr	r1, [sp, #4]
   1af1c:	cmp	r5, r6
   1af1e:	bge.n	1af2e <rb_free_nodes@@Base+0x1ac>
   1af20:	ldr	r0, [pc, #168]	; (1afcc <rb_free_nodes@@Base+0x24a>)
   1af22:	movs	r3, #1
   1af24:	movw	r2, #1628	; 0x65c
   1af28:	add	r0, pc
   1af2a:	bl	1ae5e <rb_free_nodes@@Base+0xdc>
   1af2e:	ldr.w	r3, [fp]
   1af32:	ldr.w	r2, [r3, #384]	; 0x180
   1af36:	ldr	r3, [pc, #136]	; (1afc0 <rb_free_nodes@@Base+0x23e>)
   1af38:	subs	r2, #101	; 0x65
   1af3a:	umull	r2, r3, r2, r3
   1af3e:	cmp.w	r5, r3, lsr #3
   1af42:	bne.n	1af50 <rb_free_nodes@@Base+0x1ce>
   1af44:	ldr	r0, [pc, #136]	; (1afd0 <rb_free_nodes@@Base+0x24e>)
   1af46:	movs	r3, #1
   1af48:	movw	r2, #1630	; 0x65e
   1af4c:	add	r0, pc
   1af4e:	b.n	1af2a <rb_free_nodes@@Base+0x1a8>
   1af50:	cmp	r5, r6
   1af52:	add.w	r1, r6, r6, lsl #5
   1af56:	add.w	fp, r1, #101	; 0x65
   1af5a:	ble.n	1af6c <rb_free_nodes@@Base+0x1ea>
   1af5c:	subs	r3, r5, r6
   1af5e:	adds	r1, #134	; 0x86
   1af60:	mov	r2, fp
   1af62:	mov	r0, r4
   1af64:	add.w	r3, r3, r3, lsl #5
   1af68:	bl	1a810 <memmove_extent_buffer@@Base>
   1af6c:	mov	r2, r6
   1af6e:	add.w	r6, r4, #96	; 0x60
   1af72:	add	r6, fp
   1af74:	mov	r1, r8
   1af76:	mov	r0, r4
   1af78:	adds	r5, #1
   1af7a:	bl	1adb2 <rb_free_nodes@@Base+0x30>
   1af7e:	str.w	sl, [r6, #17]
   1af82:	str.w	r9, [r6, #21]
   1af86:	ldrd	r2, r3, [r7]
   1af8a:	ldr	r1, [pc, #72]	; (1afd4 <rb_free_nodes@@Base+0x252>)
   1af8c:	orrs	r3, r2
   1af8e:	ldr	r0, [pc, #72]	; (1afd8 <rb_free_nodes@@Base+0x256>)
   1af90:	add	r1, pc
   1af92:	mov.w	r2, #1640	; 0x668
   1af96:	ite	eq
   1af98:	moveq	r3, #1
   1af9a:	movne	r3, #0
   1af9c:	add	r0, pc
   1af9e:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1afa2:	ldrd	r2, r3, [r7]
   1afa6:	mov	r0, r4
   1afa8:	str.w	r2, [r6, #25]
   1afac:	str.w	r3, [r6, #29]
   1afb0:	str.w	r5, [r4, #192]	; 0xc0
   1afb4:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1afb8:	movs	r0, #0
   1afba:	add	sp, #12
   1afbc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afc0:	strh	r1, [r4, #30]
   1afc2:	subs	r6, #15
   1afc4:	ldr	r0, [r7, r5]
   1afc6:	movs	r2, r0
   1afc8:	str	r4, [r7, #4]
   1afca:	movs	r2, r0
   1afcc:	strb	r5, [r1, #0]
   1afce:	movs	r2, r0
   1afd0:	ldr	r1, [r5, #124]	; 0x7c
   1afd2:	movs	r2, r0
   1afd4:	ldrsh	r4, [r5, r7]
   1afd6:	movs	r2, r0
   1afd8:	ldr	r6, [r5, r3]
   1afda:	movs	r2, r0
   1afdc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1afe0:	mov	r6, r0
   1afe2:	mov	r4, r2
   1afe4:	ldr.w	r0, [r3, #176]	; 0xb0
   1afe8:	mov	r7, r1
   1afea:	mov	r5, r3
   1afec:	ldr.w	r1, [r3, #180]	; 0xb4
   1aff0:	sub	sp, #20
   1aff2:	ldrd	r2, r3, [r6]
   1aff6:	cmp	r1, r3
   1aff8:	ldr	r3, [pc, #196]	; (1b0c0 <rb_free_nodes@@Base+0x33e>)
   1affa:	it	eq
   1affc:	cmpeq	r0, r2
   1affe:	ldr	r0, [pc, #196]	; (1b0c4 <rb_free_nodes@@Base+0x342>)
   1b000:	add	r3, pc
   1b002:	movw	r2, #1494	; 0x5d6
   1b006:	add.w	r1, r3, #11
   1b00a:	add	r0, pc
   1b00c:	ite	ne
   1b00e:	movne	r3, #1
   1b010:	moveq	r3, #0
   1b012:	str	r1, [sp, #12]
   1b014:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b018:	ldr.w	r3, [r4, #180]	; 0xb4
   1b01c:	ldrd	r8, r9, [r6]
   1b020:	ldr.w	r2, [r4, #176]	; 0xb0
   1b024:	cmp	r3, r9
   1b026:	ldr	r0, [pc, #160]	; (1b0c8 <rb_free_nodes@@Base+0x346>)
   1b028:	it	eq
   1b02a:	cmpeq	r2, r8
   1b02c:	ldr	r1, [sp, #12]
   1b02e:	movw	r2, #1495	; 0x5d7
   1b032:	add	r0, pc
   1b034:	ite	ne
   1b036:	movne	r3, #1
   1b038:	moveq	r3, #0
   1b03a:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b03e:	ldr	r3, [r7, #0]
   1b040:	ldr.w	r8, [r4, #192]	; 0xc0
   1b044:	ldr.w	r2, [r3, #384]	; 0x180
   1b048:	ldr	r3, [pc, #112]	; (1b0bc <rb_free_nodes@@Base+0x33a>)
   1b04a:	subs	r2, #101	; 0x65
   1b04c:	umull	r2, r3, r2, r3
   1b050:	rsb	r7, r8, r3, lsr #3
   1b054:	cmp	r7, #0
   1b056:	ble.n	1b0b8 <rb_free_nodes@@Base+0x336>
   1b058:	ldr.w	r6, [r5, #192]	; 0xc0
   1b05c:	cmp	r6, #3
   1b05e:	ble.n	1b0b8 <rb_free_nodes@@Base+0x336>
   1b060:	asrs	r3, r6, #1
   1b062:	adds	r3, #1
   1b064:	cmp	r6, r3
   1b066:	ble.n	1b0b8 <rb_free_nodes@@Base+0x336>
   1b068:	cmp	r7, r3
   1b06a:	mov.w	r2, #101	; 0x65
   1b06e:	mov	r0, r4
   1b070:	it	ge
   1b072:	movge	r7, r3
   1b074:	subs	r6, r6, r7
   1b076:	add.w	r9, r7, r7, lsl #5
   1b07a:	add.w	r3, r8, r8, lsl #5
   1b07e:	add.w	r1, r9, r2
   1b082:	add	r7, r8
   1b084:	bl	1a810 <memmove_extent_buffer@@Base>
   1b088:	add.w	r3, r6, r6, lsl #5
   1b08c:	adds	r3, #101	; 0x65
   1b08e:	movs	r2, #101	; 0x65
   1b090:	mov	r1, r5
   1b092:	mov	r0, r4
   1b094:	str.w	r9, [sp]
   1b098:	bl	1a7c6 <copy_extent_buffer@@Base>
   1b09c:	mov	r0, r5
   1b09e:	str.w	r6, [r5, #192]	; 0xc0
   1b0a2:	str.w	r7, [r4, #192]	; 0xc0
   1b0a6:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1b0aa:	mov	r0, r4
   1b0ac:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1b0b0:	movs	r0, #0
   1b0b2:	add	sp, #20
   1b0b4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b0b8:	movs	r0, #1
   1b0ba:	b.n	1b0b2 <rb_free_nodes@@Base+0x330>
   1b0bc:	strh	r1, [r4, #30]
   1b0be:	subs	r6, #15
   1b0c0:	ldrsh	r4, [r7, r5]
   1b0c2:	movs	r2, r0
   1b0c4:	ldr	r4, [r2, r2]
   1b0c6:	movs	r2, r0
   1b0c8:	ldr	r3, [r3, r2]
   1b0ca:	movs	r2, r0
   1b0cc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b0d0:	mov	r5, r2
   1b0d2:	ldr.w	r9, [r2, #192]	; 0xc0
   1b0d6:	mov	r4, r3
   1b0d8:	ldr.w	r2, [r1, #384]	; 0x180
   1b0dc:	mov	sl, r0
   1b0de:	ldr.w	r6, [r3, #192]	; 0xc0
   1b0e2:	sub	sp, #20
   1b0e4:	ldr	r3, [pc, #236]	; (1b1d4 <rb_free_nodes@@Base+0x452>)
   1b0e6:	subs	r2, #101	; 0x65
   1b0e8:	ldr.w	r1, [r4, #180]	; 0xb4
   1b0ec:	ldr.w	r0, [r4, #176]	; 0xb0
   1b0f0:	umull	r2, r3, r2, r3
   1b0f4:	ldr	r7, [sp, #56]	; 0x38
   1b0f6:	rsb	r8, r9, r3, lsr #3
   1b0fa:	ldrd	r2, r3, [sl]
   1b0fe:	cmp	r1, r3
   1b100:	ldr	r1, [pc, #212]	; (1b1d8 <rb_free_nodes@@Base+0x456>)
   1b102:	it	eq
   1b104:	cmpeq	r0, r2
   1b106:	ldr	r0, [pc, #212]	; (1b1dc <rb_free_nodes@@Base+0x45a>)
   1b108:	add	r1, pc
   1b10a:	movw	r2, #1430	; 0x596
   1b10e:	ite	ne
   1b110:	movne	r3, #1
   1b112:	moveq	r3, #0
   1b114:	adds	r1, #30
   1b116:	add	r0, pc
   1b118:	str	r1, [sp, #12]
   1b11a:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b11e:	ldrd	r2, r3, [sl]
   1b122:	ldr.w	ip, [r5, #180]	; 0xb4
   1b126:	ldr.w	fp, [r5, #176]	; 0xb0
   1b12a:	cmp	ip, r3
   1b12c:	ldr	r0, [pc, #176]	; (1b1e0 <rb_free_nodes@@Base+0x45e>)
   1b12e:	it	eq
   1b130:	cmpeq	fp, r2
   1b132:	ldr	r1, [sp, #12]
   1b134:	add	r0, pc
   1b136:	movw	r2, #1431	; 0x597
   1b13a:	ite	ne
   1b13c:	movne	r3, #1
   1b13e:	moveq	r3, #0
   1b140:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b144:	cbnz	r7, 1b160 <rb_free_nodes@@Base+0x3de>
   1b146:	cmp	r6, #8
   1b148:	bgt.n	1b14e <rb_free_nodes@@Base+0x3cc>
   1b14a:	movs	r7, #1
   1b14c:	b.n	1b1ca <rb_free_nodes@@Base+0x448>
   1b14e:	cmp.w	r8, #0
   1b152:	ble.n	1b14a <rb_free_nodes@@Base+0x3c8>
   1b154:	sub.w	r3, r6, #8
   1b158:	cmp	r8, r3
   1b15a:	it	ge
   1b15c:	movge	r8, r3
   1b15e:	b.n	1b182 <rb_free_nodes@@Base+0x400>
   1b160:	cmp.w	r8, #0
   1b164:	ble.n	1b1ca <rb_free_nodes@@Base+0x448>
   1b166:	cmp	r8, r6
   1b168:	it	ge
   1b16a:	movge	r8, r6
   1b16c:	cmp	r6, r8
   1b16e:	ble.n	1b182 <rb_free_nodes@@Base+0x400>
   1b170:	sub.w	r3, r6, r8
   1b174:	cmp	r3, #7
   1b176:	bgt.n	1b182 <rb_free_nodes@@Base+0x400>
   1b178:	cmp.w	r8, #8
   1b17c:	ble.n	1b1ca <rb_free_nodes@@Base+0x448>
   1b17e:	sub.w	r8, r8, #8
   1b182:	add.w	r2, r9, r9, lsl #5
   1b186:	movs	r3, #101	; 0x65
   1b188:	add.w	sl, r8, r8, lsl #5
   1b18c:	add	r2, r3
   1b18e:	mov	r1, r4
   1b190:	mov	r0, r5
   1b192:	str.w	sl, [sp]
   1b196:	sub.w	r7, r6, r8
   1b19a:	bl	1a7c6 <copy_extent_buffer@@Base>
   1b19e:	cmp	r6, r8
   1b1a0:	ble.n	1b1b2 <rb_free_nodes@@Base+0x430>
   1b1a2:	add.w	r3, r7, r7, lsl #5
   1b1a6:	add.w	r2, sl, #101	; 0x65
   1b1aa:	movs	r1, #101	; 0x65
   1b1ac:	mov	r0, r4
   1b1ae:	bl	1a810 <memmove_extent_buffer@@Base>
   1b1b2:	str.w	r7, [r4, #192]	; 0xc0
   1b1b6:	mov	r0, r4
   1b1b8:	add	r8, r9
   1b1ba:	str.w	r8, [r5, #192]	; 0xc0
   1b1be:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1b1c2:	mov	r0, r5
   1b1c4:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1b1c8:	movs	r7, #0
   1b1ca:	mov	r0, r7
   1b1cc:	add	sp, #20
   1b1ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b1d2:	nop
   1b1d4:	strh	r1, [r4, #30]
   1b1d6:	subs	r6, #15
   1b1d8:	ldrsh	r4, [r6, r1]
   1b1da:	movs	r2, r0
   1b1dc:	ldrsb	r0, [r1, r6]
   1b1de:	movs	r2, r0
   1b1e0:	ldrsb	r1, [r3, r6]
   1b1e2:	movs	r2, r0
   1b1e4:	push	{r3, r4, r5, r6, r7, lr}
   1b1e6:	mov	r6, r0
   1b1e8:	mov	r4, r1
   1b1ea:	mov	r5, r2
   1b1ec:	cbz	r2, 1b228 <rb_free_nodes@@Base+0x4a6>
   1b1ee:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1b1f2:	ldr.w	r3, [r6, #192]	; 0xc0
   1b1f6:	mov.w	ip, #25
   1b1fa:	ldr	r1, [pc, #48]	; (1b22c <rb_free_nodes@@Base+0x4aa>)
   1b1fc:	add	r1, pc
   1b1fe:	adds	r1, #45	; 0x2d
   1b200:	mul.w	r7, ip, r2
   1b204:	adds	r2, r4, r2
   1b206:	cmp	r2, r3
   1b208:	it	ge
   1b20a:	movge	r2, r3
   1b20c:	subs	r2, #1
   1b20e:	mla	r3, ip, r2, r6
   1b212:	ldr.w	r2, [r3, #214]	; 0xd6
   1b216:	subs	r2, r7, r2
   1b218:	adds	r5, r2, r0
   1b21a:	ldr	r0, [pc, #20]	; (1b230 <rb_free_nodes@@Base+0x4ae>)
   1b21c:	mov.w	r2, #1752	; 0x6d8
   1b220:	lsrs	r3, r5, #31
   1b222:	add	r0, pc
   1b224:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b228:	mov	r0, r5
   1b22a:	pop	{r3, r4, r5, r6, r7, pc}
   1b22c:	ldrb	r0, [r0, r6]
   1b22e:	movs	r2, r0
   1b230:	ldrsb	r2, [r3, r3]
   1b232:	movs	r2, r0
   1b234:	push	{r4, lr}
   1b236:	mov	r4, r1
   1b238:	ldr	r1, [pc, #76]	; (1b288 <rb_free_nodes@@Base+0x506>)
   1b23a:	sub	sp, #24
   1b23c:	ldr	r3, [pc, #76]	; (1b28c <rb_free_nodes@@Base+0x50a>)
   1b23e:	add	r1, pc
   1b240:	ldr	r3, [r1, r3]
   1b242:	mov	r1, sp
   1b244:	ldr	r3, [r3, #0]
   1b246:	str	r3, [sp, #20]
   1b248:	mov.w	r3, #0
   1b24c:	bl	1adca <rb_free_nodes@@Base+0x48>
   1b250:	ldr.w	r3, [sp, #13]
   1b254:	ldr.w	r2, [sp, #9]
   1b258:	str.w	r3, [r4, #13]
   1b25c:	ldrb.w	r3, [sp, #8]
   1b260:	str.w	r2, [r4, #9]
   1b264:	ldr	r2, [pc, #40]	; (1b290 <rb_free_nodes@@Base+0x50e>)
   1b266:	strb	r3, [r4, #8]
   1b268:	ldr	r3, [sp, #0]
   1b26a:	add	r2, pc
   1b26c:	str	r3, [r4, #0]
   1b26e:	ldr	r3, [sp, #4]
   1b270:	str	r3, [r4, #4]
   1b272:	ldr	r3, [pc, #24]	; (1b28c <rb_free_nodes@@Base+0x50a>)
   1b274:	ldr	r3, [r2, r3]
   1b276:	ldr	r2, [r3, #0]
   1b278:	ldr	r3, [sp, #20]
   1b27a:	eors	r2, r3
   1b27c:	beq.n	1b282 <rb_free_nodes@@Base+0x500>
   1b27e:	blx	88e4 <__stack_chk_fail@plt>
   1b282:	add	sp, #24
   1b284:	pop	{r4, pc}
   1b286:	nop
   1b288:	bge.n	1b270 <rb_free_nodes@@Base+0x4ee>
   1b28a:	movs	r4, r0
   1b28c:	lsls	r4, r7, #9
   1b28e:	movs	r0, r0
   1b290:	bge.n	1b220 <rb_free_nodes@@Base+0x49e>
   1b292:	movs	r4, r0

0001b294 <btrfs_super_csum_size@@Base>:
   1b294:	ldrh.w	r2, [r0, #196]	; 0xc4
   1b298:	ldr	r3, [pc, #8]	; (1b2a4 <btrfs_super_csum_size@@Base+0x10>)
   1b29a:	add	r3, pc
   1b29c:	add.w	r3, r3, r2, lsl #4
   1b2a0:	ldrh	r0, [r3, #62]	; 0x3e
   1b2a2:	bx	lr
   1b2a4:	ldrb	r2, [r4, r3]
   1b2a6:	movs	r2, r0

0001b2a8 <btrfs_super_csum_name@@Base>:
   1b2a8:	ldr	r3, [pc, #8]	; (1b2b4 <btrfs_super_csum_name@@Base+0xc>)
   1b2aa:	add	r3, pc
   1b2ac:	add.w	r0, r3, r0, lsl #4
   1b2b0:	adds	r0, #64	; 0x40
   1b2b2:	bx	lr
   1b2b4:	ldrb	r2, [r2, r3]
   1b2b6:	movs	r2, r0

0001b2b8 <btrfs_super_num_csums@@Base>:
   1b2b8:	movs	r0, #4
   1b2ba:	bx	lr

0001b2bc <btrfs_csum_type_size@@Base>:
   1b2bc:	ldr	r3, [pc, #8]	; (1b2c8 <btrfs_csum_type_size@@Base+0xc>)
   1b2be:	add	r3, pc
   1b2c0:	add.w	r0, r3, r0, lsl #4
   1b2c4:	ldrh	r0, [r0, #62]	; 0x3e
   1b2c6:	bx	lr
   1b2c8:	ldrb	r6, [r7, r2]
   1b2ca:	movs	r2, r0

0001b2cc <btrfs_init_path@@Base>:
   1b2cc:	movs	r2, #68	; 0x44
   1b2ce:	movs	r1, #0
   1b2d0:	b.w	8bf4 <memset@plt>

0001b2d4 <btrfs_alloc_path@@Base>:
   1b2d4:	movs	r1, #68	; 0x44
   1b2d6:	movs	r0, #1
   1b2d8:	b.w	8714 <calloc@plt>

0001b2dc <btrfs_release_path@@Base>:
   1b2dc:	push	{r4, r5, r6, lr}
   1b2de:	subs	r5, r0, #4
   1b2e0:	add.w	r6, r0, #28
   1b2e4:	mov	r4, r0
   1b2e6:	ldr.w	r0, [r5, #4]!
   1b2ea:	cbz	r0, 1b2f0 <btrfs_release_path@@Base+0x14>
   1b2ec:	bl	1a0a4 <free_extent_buffer@@Base>
   1b2f0:	cmp	r5, r6
   1b2f2:	bne.n	1b2e6 <btrfs_release_path@@Base+0xa>
   1b2f4:	mov	r0, r4
   1b2f6:	movs	r2, #68	; 0x44
   1b2f8:	ldmia.w	sp!, {r4, r5, r6, lr}
   1b2fc:	movs	r1, #0
   1b2fe:	b.w	8bf4 <memset@plt>

0001b302 <btrfs_free_path@@Base>:
   1b302:	push	{r4, lr}
   1b304:	mov	r4, r0
   1b306:	cbz	r0, 1b316 <btrfs_free_path@@Base+0x14>
   1b308:	bl	1b2dc <btrfs_release_path@@Base>
   1b30c:	mov	r0, r4
   1b30e:	ldmia.w	sp!, {r4, lr}
   1b312:	b.w	87c8 <free@plt>
   1b316:	pop	{r4, pc}

0001b318 <add_root_to_dirty_list@@Base>:
   1b318:	ldr.w	r3, [r0, #492]	; 0x1ec
   1b31c:	cbz	r3, 1b344 <add_root_to_dirty_list@@Base+0x2c>
   1b31e:	ldr.w	r3, [r0, #520]	; 0x208
   1b322:	add.w	r2, r0, #520	; 0x208
   1b326:	cmp	r2, r3
   1b328:	bne.n	1b344 <add_root_to_dirty_list@@Base+0x2c>
   1b32a:	ldr.w	r3, [r0, #464]	; 0x1d0
   1b32e:	ldr.w	r1, [r3, #336]	; 0x150
   1b332:	str	r2, [r1, #4]
   1b334:	str.w	r1, [r0, #520]	; 0x208
   1b338:	add.w	r1, r3, #336	; 0x150
   1b33c:	str.w	r1, [r0, #524]	; 0x20c
   1b340:	str.w	r2, [r3, #336]	; 0x150
   1b344:	bx	lr
   1b346:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b34a:	sub	sp, #76	; 0x4c
   1b34c:	mov	r7, r3
   1b34e:	ldr	r3, [pc, #468]	; (1b524 <add_root_to_dirty_list@@Base+0x20c>)
   1b350:	str	r2, [sp, #36]	; 0x24
   1b352:	mov	r5, r1
   1b354:	ldr	r2, [pc, #464]	; (1b528 <add_root_to_dirty_list@@Base+0x210>)
   1b356:	mov	fp, r0
   1b358:	ldr	r1, [pc, #464]	; (1b52c <add_root_to_dirty_list@@Base+0x214>)
   1b35a:	add.w	r8, sp, #48	; 0x30
   1b35e:	add	r2, pc
   1b360:	ldr	r0, [pc, #460]	; (1b530 <add_root_to_dirty_list@@Base+0x218>)
   1b362:	add	r1, pc
   1b364:	ldr	r3, [r2, r3]
   1b366:	adds	r1, #126	; 0x7e
   1b368:	add	r0, pc
   1b36a:	movw	r2, #1553	; 0x611
   1b36e:	ldr	r3, [r3, #0]
   1b370:	str	r3, [sp, #68]	; 0x44
   1b372:	mov.w	r3, #0
   1b376:	ldr	r3, [sp, #36]	; 0x24
   1b378:	str	r1, [sp, #44]	; 0x2c
   1b37a:	add.w	r3, r3, r7, lsl #2
   1b37e:	str	r3, [sp, #40]	; 0x28
   1b380:	ldr	r3, [sp, #36]	; 0x24
   1b382:	ldr.w	r3, [r3, r7, lsl #2]
   1b386:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1b38a:	ldr	r3, [sp, #40]	; 0x28
   1b38c:	ldr	r0, [pc, #420]	; (1b534 <add_root_to_dirty_list@@Base+0x21c>)
   1b38e:	movw	r2, #1554	; 0x612
   1b392:	ldr	r1, [sp, #44]	; 0x2c
   1b394:	ldr.w	sl, [r3, #-4]
   1b398:	add	r0, pc
   1b39a:	ldr	r3, [r5, #0]
   1b39c:	subs.w	r3, r3, sl
   1b3a0:	it	ne
   1b3a2:	movne	r3, #1
   1b3a4:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1b3a8:	cmp	r7, #1
   1b3aa:	mov.w	r2, #0
   1b3ae:	mov	r1, r8
   1b3b0:	mov	r0, sl
   1b3b2:	bne.n	1b408 <add_root_to_dirty_list@@Base+0xf0>
   1b3b4:	bl	1adca <rb_free_nodes@@Base+0x48>
   1b3b8:	movs	r2, #0
   1b3ba:	movs	r3, #0
   1b3bc:	strd	r2, r3, [sp, #24]
   1b3c0:	mov	r0, fp
   1b3c2:	ldr	r3, [r5, #0]
   1b3c4:	ldr.w	r1, [r5, #464]	; 0x1d0
   1b3c8:	ldrd	r2, r3, [r3, #40]	; 0x28
   1b3cc:	strd	r8, r7, [sp, #8]
   1b3d0:	strd	r2, r3, [sp, #16]
   1b3d4:	ldr.w	r2, [r5, #447]	; 0x1bf
   1b3d8:	ldr.w	r3, [r5, #451]	; 0x1c3
   1b3dc:	strd	r2, r3, [sp]
   1b3e0:	ldr.w	r2, [r1, #384]	; 0x180
   1b3e4:	mov	r1, r5
   1b3e6:	bl	25eec <btrfs_alloc_free_block@@Base>
   1b3ea:	cmn.w	r0, #4096	; 0x1000
   1b3ee:	mov	r4, r0
   1b3f0:	bls.n	1b40e <add_root_to_dirty_list@@Base+0xf6>
   1b3f2:	ldr	r2, [pc, #324]	; (1b538 <add_root_to_dirty_list@@Base+0x220>)
   1b3f4:	ldr	r3, [pc, #300]	; (1b524 <add_root_to_dirty_list@@Base+0x20c>)
   1b3f6:	add	r2, pc
   1b3f8:	ldr	r3, [r2, r3]
   1b3fa:	ldr	r2, [r3, #0]
   1b3fc:	ldr	r3, [sp, #68]	; 0x44
   1b3fe:	eors	r2, r3
   1b400:	beq.w	1b51c <add_root_to_dirty_list@@Base+0x204>
   1b404:	blx	88e4 <__stack_chk_fail@plt>
   1b408:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1b40c:	b.n	1b3b8 <add_root_to_dirty_list@@Base+0xa0>
   1b40e:	movs	r2, #0
   1b410:	movs	r3, #101	; 0x65
   1b412:	mov	r1, r2
   1b414:	movs	r6, #0
   1b416:	bl	1a826 <memset_extent_buffer@@Base>
   1b41a:	movs	r3, #1
   1b41c:	strb.w	r3, [r4, #192]	; 0xc0
   1b420:	ldr	r3, [r4, #40]	; 0x28
   1b422:	strb.w	r6, [r4, #193]	; 0xc1
   1b426:	strb.w	r6, [r4, #194]	; 0xc2
   1b42a:	str.w	r3, [r4, #144]	; 0x90
   1b42e:	ldr	r3, [r4, #44]	; 0x2c
   1b430:	strb.w	r6, [r4, #195]	; 0xc3
   1b434:	strb.w	r7, [r4, #196]	; 0xc4
   1b438:	str.w	r3, [r4, #148]	; 0x94
   1b43c:	ldrd	r2, r3, [fp, #8]
   1b440:	str.w	r2, [r4, #176]	; 0xb0
   1b444:	str.w	r3, [r4, #180]	; 0xb4
   1b448:	ldr.w	r2, [r4, #152]	; 0x98
   1b44c:	ldr.w	r3, [r4, #156]	; 0x9c
   1b450:	bic.w	r3, r3, #4278190080	; 0xff000000
   1b454:	str.w	r2, [r4, #152]	; 0x98
   1b458:	orr.w	r3, r3, #16777216	; 0x1000000
   1b45c:	str.w	r3, [r4, #156]	; 0x9c
   1b460:	ldr.w	r2, [r5, #447]	; 0x1bf
   1b464:	ldr.w	r3, [r5, #451]	; 0x1c3
   1b468:	str.w	r2, [r4, #184]	; 0xb8
   1b46c:	str.w	r3, [r4, #188]	; 0xbc
   1b470:	ldr.w	r0, [r5, #464]	; 0x1d0
   1b474:	ldr.w	r2, [r5, #200]	; 0xc8
   1b478:	ldr.w	r3, [r5, #204]	; 0xcc
   1b47c:	ldr.w	r1, [r0, #384]	; 0x180
   1b480:	adds	r2, r2, r1
   1b482:	str.w	r2, [r5, #200]	; 0xc8
   1b486:	adc.w	r3, r3, #0
   1b48a:	str.w	r3, [r5, #204]	; 0xcc
   1b48e:	ldr.w	r1, [r0, #352]	; 0x160
   1b492:	movs	r3, #16
   1b494:	movs	r2, #32
   1b496:	mov	r0, r4
   1b498:	add	r1, r3
   1b49a:	bl	1a7b4 <write_extent_buffer@@Base>
   1b49e:	movs	r3, #16
   1b4a0:	ldr.w	r1, [r5, #464]	; 0x1d0
   1b4a4:	movs	r2, #64	; 0x40
   1b4a6:	mov	r0, r4
   1b4a8:	bl	1a7b4 <write_extent_buffer@@Base>
   1b4ac:	mov	r1, r8
   1b4ae:	mov	r2, r6
   1b4b0:	mov	r0, r4
   1b4b2:	bl	1adb2 <rb_free_nodes@@Base+0x30>
   1b4b6:	ldrd	r2, r3, [sl, #40]	; 0x28
   1b4ba:	ldr	r1, [pc, #128]	; (1b53c <add_root_to_dirty_list@@Base+0x224>)
   1b4bc:	ldr	r0, [pc, #128]	; (1b540 <add_root_to_dirty_list@@Base+0x228>)
   1b4be:	str.w	r2, [r4, #214]	; 0xd6
   1b4c2:	add	r1, pc
   1b4c4:	str.w	r3, [r4, #218]	; 0xda
   1b4c8:	adds	r1, #126	; 0x7e
   1b4ca:	ldrd	r2, r3, [fp, #8]
   1b4ce:	add	r0, pc
   1b4d0:	ldr.w	r9, [sl, #180]	; 0xb4
   1b4d4:	ldr.w	r8, [sl, #176]	; 0xb0
   1b4d8:	cmp	r3, r9
   1b4da:	it	eq
   1b4dc:	cmpeq	r2, r8
   1b4de:	movw	r2, #1589	; 0x635
   1b4e2:	ite	ne
   1b4e4:	movne	r3, #1
   1b4e6:	moveq	r3, r6
   1b4e8:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b4ec:	mov	r0, r4
   1b4ee:	str.w	r8, [r4, #222]	; 0xde
   1b4f2:	str.w	r9, [r4, #226]	; 0xe2
   1b4f6:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1b4fa:	ldr	r0, [r5, #0]
   1b4fc:	str	r4, [r5, #0]
   1b4fe:	bl	1a0a4 <free_extent_buffer@@Base>
   1b502:	mov	r0, r5
   1b504:	bl	1b318 <add_root_to_dirty_list@@Base>
   1b508:	ldr	r3, [r4, #80]	; 0x50
   1b50a:	mov	r0, r6
   1b50c:	adds	r3, #1
   1b50e:	str	r3, [r4, #80]	; 0x50
   1b510:	ldr	r3, [sp, #36]	; 0x24
   1b512:	str.w	r4, [r3, r7, lsl #2]
   1b516:	ldr	r3, [sp, #40]	; 0x28
   1b518:	str	r6, [r3, #32]
   1b51a:	b.n	1b3f2 <add_root_to_dirty_list@@Base+0xda>
   1b51c:	add	sp, #76	; 0x4c
   1b51e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b522:	nop
   1b524:	lsls	r4, r7, #9
   1b526:	movs	r0, r0
   1b528:	bls.n	1b4d0 <add_root_to_dirty_list@@Base+0x1b8>
   1b52a:	movs	r4, r0
   1b52c:	ldrb	r2, [r3, r0]
   1b52e:	movs	r2, r0
   1b530:	strb	r7, [r1, r4]
   1b532:	movs	r2, r0
   1b534:	strb	r1, [r6, r5]
   1b536:	movs	r2, r0
   1b538:	bls.n	1b5b0 <btrfs_copy_root@@Base+0x6c>
   1b53a:	movs	r4, r0
   1b53c:	ldrh	r2, [r7, r2]
   1b53e:	movs	r2, r0
   1b540:	strb	r6, [r3, r1]
   1b542:	movs	r2, r0

0001b544 <btrfs_copy_root@@Base>:
   1b544:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b548:	sub	sp, #68	; 0x44
   1b54a:	mov	r4, r2
   1b54c:	ldr	r2, [pc, #460]	; (1b71c <btrfs_copy_root@@Base+0x1d8>)
   1b54e:	str	r3, [sp, #36]	; 0x24
   1b550:	mov	r8, r0
   1b552:	ldr	r3, [pc, #460]	; (1b720 <btrfs_copy_root@@Base+0x1dc>)
   1b554:	add	r2, pc
   1b556:	mov.w	r0, #544	; 0x220
   1b55a:	ldrd	sl, fp, [sp, #104]	; 0x68
   1b55e:	mov	r9, r1
   1b560:	ldr	r3, [r2, r3]
   1b562:	ldr	r3, [r3, #0]
   1b564:	str	r3, [sp, #60]	; 0x3c
   1b566:	mov.w	r3, #0
   1b56a:	blx	8a94 <malloc@plt+0x4>
   1b56e:	mov	r5, r0
   1b570:	cmp	r0, #0
   1b572:	beq.w	1b70e <btrfs_copy_root@@Base+0x1ca>
   1b576:	mov.w	r2, #544	; 0x220
   1b57a:	mov	r1, r9
   1b57c:	blx	8830 <memcpy@plt+0x4>
   1b580:	ldr.w	r3, [r9, #488]	; 0x1e8
   1b584:	str.w	sl, [r5, #447]	; 0x1bf
   1b588:	str.w	fp, [r5, #451]	; 0x1c3
   1b58c:	cbz	r3, 1b5a8 <btrfs_copy_root@@Base+0x64>
   1b58e:	ldr.w	r3, [r9, #464]	; 0x1d0
   1b592:	ldr.w	r3, [r3, #304]	; 0x130
   1b596:	ldrd	r0, r1, [r3, #8]
   1b59a:	ldrd	r2, r3, [r8, #8]
   1b59e:	cmp	r1, r3
   1b5a0:	itet	eq
   1b5a2:	cmpeq	r0, r2
   1b5a4:	movne	r3, #1
   1b5a6:	moveq	r3, #0
   1b5a8:	ldr	r1, [pc, #376]	; (1b724 <btrfs_copy_root@@Base+0x1e0>)
   1b5aa:	movs	r2, #142	; 0x8e
   1b5ac:	ldr	r0, [pc, #376]	; (1b728 <btrfs_copy_root@@Base+0x1e4>)
   1b5ae:	add	r1, pc
   1b5b0:	add	r1, r2
   1b5b2:	add	r0, pc
   1b5b4:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b5b8:	ldr.w	r3, [r9, #488]	; 0x1e8
   1b5bc:	cbz	r3, 1b5d0 <btrfs_copy_root@@Base+0x8c>
   1b5be:	ldrd	r2, r3, [r9, #480]	; 0x1e0
   1b5c2:	ldrd	r6, r7, [r8, #8]
   1b5c6:	cmp	r7, r3
   1b5c8:	itet	eq
   1b5ca:	cmpeq	r6, r2
   1b5cc:	movne	r3, #1
   1b5ce:	moveq	r3, #0
   1b5d0:	ldr	r1, [pc, #344]	; (1b72c <btrfs_copy_root@@Base+0x1e8>)
   1b5d2:	movs	r2, #144	; 0x90
   1b5d4:	ldr	r0, [pc, #344]	; (1b730 <btrfs_copy_root@@Base+0x1ec>)
   1b5d6:	add	r7, sp, #40	; 0x28
   1b5d8:	add	r1, pc
   1b5da:	adds	r1, #142	; 0x8e
   1b5dc:	add	r0, pc
   1b5de:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b5e2:	ldrb.w	r6, [r4, #196]	; 0xc4
   1b5e6:	cbnz	r6, 1b638 <btrfs_copy_root@@Base+0xf4>
   1b5e8:	mov	r2, r6
   1b5ea:	mov	r1, r7
   1b5ec:	mov	r0, r4
   1b5ee:	bl	1adca <rb_free_nodes@@Base+0x48>
   1b5f2:	movs	r2, #0
   1b5f4:	movs	r3, #0
   1b5f6:	strd	r2, r3, [sp, #24]
   1b5fa:	mov	r1, r5
   1b5fc:	ldrd	r2, r3, [r4, #40]	; 0x28
   1b600:	mov	r0, r8
   1b602:	strd	r7, r6, [sp, #8]
   1b606:	strd	sl, fp, [sp]
   1b60a:	strd	r2, r3, [sp, #16]
   1b60e:	ldr	r2, [r4, #76]	; 0x4c
   1b610:	bl	25eec <btrfs_alloc_free_block@@Base>
   1b614:	cmn.w	r0, #4096	; 0x1000
   1b618:	mov	r6, r0
   1b61a:	bls.n	1b644 <btrfs_copy_root@@Base+0x100>
   1b61c:	mov	r0, r5
   1b61e:	mov	r4, r6
   1b620:	blx	87cc <free@plt+0x4>
   1b624:	ldr	r2, [pc, #268]	; (1b734 <btrfs_copy_root@@Base+0x1f0>)
   1b626:	ldr	r3, [pc, #248]	; (1b720 <btrfs_copy_root@@Base+0x1dc>)
   1b628:	add	r2, pc
   1b62a:	ldr	r3, [r2, r3]
   1b62c:	ldr	r2, [r3, #0]
   1b62e:	ldr	r3, [sp, #60]	; 0x3c
   1b630:	eors	r2, r3
   1b632:	beq.n	1b714 <btrfs_copy_root@@Base+0x1d0>
   1b634:	blx	88e4 <__stack_chk_fail@plt>
   1b638:	movs	r2, #0
   1b63a:	mov	r1, r7
   1b63c:	mov	r0, r4
   1b63e:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1b642:	b.n	1b5f2 <btrfs_copy_root@@Base+0xae>
   1b644:	ldr	r3, [r0, #76]	; 0x4c
   1b646:	mov	r1, r4
   1b648:	str	r3, [sp, #0]
   1b64a:	movs	r3, #0
   1b64c:	mov	r2, r3
   1b64e:	bl	1a7c6 <copy_extent_buffer@@Base>
   1b652:	ldr	r3, [r6, #40]	; 0x28
   1b654:	mov.w	r1, #4294967295	; 0xffffffff
   1b658:	cmp	fp, r1
   1b65a:	mvn.w	r0, #7
   1b65e:	it	eq
   1b660:	cmpeq	sl, r0
   1b662:	str.w	r3, [r6, #144]	; 0x90
   1b666:	mov	r0, r6
   1b668:	ldr	r3, [r6, #44]	; 0x2c
   1b66a:	str.w	r3, [r6, #148]	; 0x94
   1b66e:	ldrd	r2, r3, [r8, #8]
   1b672:	itt	ne
   1b674:	strne.w	sl, [r6, #184]	; 0xb8
   1b678:	strne.w	fp, [r6, #188]	; 0xbc
   1b67c:	str.w	r2, [r6, #176]	; 0xb0
   1b680:	str.w	r3, [r6, #180]	; 0xb4
   1b684:	ldr.w	r2, [r6, #156]	; 0x9c
   1b688:	ldr.w	r3, [r6, #152]	; 0x98
   1b68c:	bic.w	r2, r2, #4278190080	; 0xff000000
   1b690:	bic.w	r3, r3, #3
   1b694:	orr.w	r2, r2, #16777216	; 0x1000000
   1b698:	str.w	r3, [r6, #152]	; 0x98
   1b69c:	it	eq
   1b69e:	orreq.w	r3, r3, #2
   1b6a2:	str.w	r2, [r6, #156]	; 0x9c
   1b6a6:	mov.w	r2, #32
   1b6aa:	it	eq
   1b6ac:	streq.w	r3, [r6, #152]	; 0x98
   1b6b0:	ldr.w	r3, [r9, #464]	; 0x1d0
   1b6b4:	ldr.w	r1, [r3, #352]	; 0x160
   1b6b8:	movs	r3, #16
   1b6ba:	add	r1, r3
   1b6bc:	bl	1a7b4 <write_extent_buffer@@Base>
   1b6c0:	ldrd	r2, r3, [r8, #8]
   1b6c4:	ldr.w	r1, [r4, #180]	; 0xb4
   1b6c8:	ldr.w	r0, [r4, #176]	; 0xb0
   1b6cc:	cmp	r3, r1
   1b6ce:	ldr	r1, [pc, #104]	; (1b738 <btrfs_copy_root@@Base+0x1f4>)
   1b6d0:	it	eq
   1b6d2:	cmpeq	r2, r0
   1b6d4:	ldr	r0, [pc, #100]	; (1b73c <btrfs_copy_root@@Base+0x1f8>)
   1b6d6:	add	r1, pc
   1b6d8:	mov.w	r2, #173	; 0xad
   1b6dc:	ite	cc
   1b6de:	movcc	r3, #1
   1b6e0:	movcs	r3, #0
   1b6e2:	adds	r1, #142	; 0x8e
   1b6e4:	add	r0, pc
   1b6e6:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b6ea:	movs	r3, #0
   1b6ec:	mov	r2, r6
   1b6ee:	mov	r1, r5
   1b6f0:	mov	r0, r8
   1b6f2:	bl	23da8 <btrfs_inc_ref@@Base>
   1b6f6:	mov	r4, r0
   1b6f8:	mov	r0, r5
   1b6fa:	blx	87cc <free@plt+0x4>
   1b6fe:	cmp	r4, #0
   1b700:	bne.n	1b624 <btrfs_copy_root@@Base+0xe0>
   1b702:	mov	r0, r6
   1b704:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1b708:	ldr	r3, [sp, #36]	; 0x24
   1b70a:	str	r6, [r3, #0]
   1b70c:	b.n	1b624 <btrfs_copy_root@@Base+0xe0>
   1b70e:	mvn.w	r4, #11
   1b712:	b.n	1b624 <btrfs_copy_root@@Base+0xe0>
   1b714:	mov	r0, r4
   1b716:	add	sp, #68	; 0x44
   1b718:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b71c:	bvc.n	1b6d8 <btrfs_copy_root@@Base+0x194>
   1b71e:	movs	r4, r0
   1b720:	lsls	r4, r7, #9
   1b722:	movs	r0, r0
   1b724:	ldr	r6, [r1, r7]
   1b726:	movs	r2, r0
   1b728:	strh	r6, [r2, r6]
   1b72a:	movs	r2, r0
   1b72c:	ldr	r4, [r4, r6]
   1b72e:	movs	r2, r0
   1b730:	strh	r4, [r7, r6]
   1b732:	movs	r2, r0
   1b734:	bvc.n	1b748 <__btrfs_cow_block@@Base+0x8>
   1b736:	movs	r4, r0
   1b738:	ldr	r6, [r4, r2]
   1b73a:	movs	r2, r0
   1b73c:	strh	r7, [r1, r4]
   1b73e:	movs	r2, r0

0001b740 <__btrfs_cow_block@@Base>:
   1b740:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b744:	sub	sp, #100	; 0x64
   1b746:	mov	r5, r2
   1b748:	ldr.w	r2, [pc, #1368]	; 1bca4 <__btrfs_cow_block@@Base+0x564>
   1b74c:	str	r3, [sp, #48]	; 0x30
   1b74e:	mov	sl, r0
   1b750:	ldrd	fp, r3, [sp, #136]	; 0x88
   1b754:	add	r2, pc
   1b756:	mov	r4, r1
   1b758:	str	r3, [sp, #52]	; 0x34
   1b75a:	ldr.w	r3, [pc, #1356]	; 1bca8 <__btrfs_cow_block@@Base+0x568>
   1b75e:	ldr	r3, [r2, r3]
   1b760:	ldr	r3, [r3, #0]
   1b762:	str	r3, [sp, #92]	; 0x5c
   1b764:	mov.w	r3, #0
   1b768:	ldr.w	r3, [r1, #488]	; 0x1e8
   1b76c:	cbz	r3, 1b788 <__btrfs_cow_block@@Base+0x48>
   1b76e:	ldr.w	r3, [r1, #464]	; 0x1d0
   1b772:	ldr.w	r3, [r3, #304]	; 0x130
   1b776:	ldrd	r0, r1, [r3, #8]
   1b77a:	ldrd	r2, r3, [sl, #8]
   1b77e:	cmp	r1, r3
   1b780:	itet	eq
   1b782:	cmpeq	r0, r2
   1b784:	movne	r3, #1
   1b786:	moveq	r3, #0
   1b788:	ldr.w	r1, [pc, #1312]	; 1bcac <__btrfs_cow_block@@Base+0x56c>
   1b78c:	movw	r2, #311	; 0x137
   1b790:	ldr.w	r0, [pc, #1308]	; 1bcb0 <__btrfs_cow_block@@Base+0x570>
   1b794:	add	r1, pc
   1b796:	adds	r1, #158	; 0x9e
   1b798:	add	r0, pc
   1b79a:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b79e:	ldr.w	r3, [r4, #488]	; 0x1e8
   1b7a2:	cbz	r3, 1b7b6 <__btrfs_cow_block@@Base+0x76>
   1b7a4:	ldrd	r8, r9, [sl, #8]
   1b7a8:	ldrd	r6, r7, [r4, #480]	; 0x1e0
   1b7ac:	cmp	r9, r7
   1b7ae:	itet	eq
   1b7b0:	cmpeq	r8, r6
   1b7b2:	movne	r3, #1
   1b7b4:	moveq	r3, #0
   1b7b6:	ldr.w	r1, [pc, #1276]	; 1bcb4 <__btrfs_cow_block@@Base+0x574>
   1b7ba:	movw	r2, #313	; 0x139
   1b7be:	ldr.w	r0, [pc, #1272]	; 1bcb8 <__btrfs_cow_block@@Base+0x578>
   1b7c2:	add	r6, sp, #72	; 0x48
   1b7c4:	add	r1, pc
   1b7c6:	adds	r1, #158	; 0x9e
   1b7c8:	add	r0, pc
   1b7ca:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b7ce:	ldrb.w	r7, [r5, #196]	; 0xc4
   1b7d2:	cbnz	r7, 1b82a <__btrfs_cow_block@@Base+0xea>
   1b7d4:	mov	r2, r7
   1b7d6:	mov	r1, r6
   1b7d8:	mov	r0, r5
   1b7da:	bl	1adca <rb_free_nodes@@Base+0x48>
   1b7de:	ldrd	r2, r3, [sp, #152]	; 0x98
   1b7e2:	mov	r1, r4
   1b7e4:	strd	r6, r7, [sp, #8]
   1b7e8:	mov	r0, sl
   1b7ea:	strd	r2, r3, [sp, #24]
   1b7ee:	ldrd	r2, r3, [sp, #144]	; 0x90
   1b7f2:	strd	r2, r3, [sp, #16]
   1b7f6:	ldr.w	r2, [r4, #447]	; 0x1bf
   1b7fa:	ldr.w	r3, [r4, #451]	; 0x1c3
   1b7fe:	strd	r2, r3, [sp]
   1b802:	ldr	r2, [r5, #76]	; 0x4c
   1b804:	bl	25eec <btrfs_alloc_free_block@@Base>
   1b808:	cmn.w	r0, #4096	; 0x1000
   1b80c:	mov	r6, r0
   1b80e:	bls.n	1b836 <__btrfs_cow_block@@Base+0xf6>
   1b810:	ldr.w	r2, [pc, #1192]	; 1bcbc <__btrfs_cow_block@@Base+0x57c>
   1b814:	ldr.w	r3, [pc, #1168]	; 1bca8 <__btrfs_cow_block@@Base+0x568>
   1b818:	add	r2, pc
   1b81a:	ldr	r3, [r2, r3]
   1b81c:	ldr	r2, [r3, #0]
   1b81e:	ldr	r3, [sp, #92]	; 0x5c
   1b820:	eors	r2, r3
   1b822:	beq.w	1bc9e <__btrfs_cow_block@@Base+0x55e>
   1b826:	blx	88e4 <__stack_chk_fail@plt>
   1b82a:	movs	r2, #0
   1b82c:	mov	r1, r6
   1b82e:	mov	r0, r5
   1b830:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1b834:	b.n	1b7de <__btrfs_cow_block@@Base+0x9e>
   1b836:	ldr	r3, [r0, #76]	; 0x4c
   1b838:	mov	r1, r5
   1b83a:	str	r3, [sp, #0]
   1b83c:	movs	r3, #0
   1b83e:	mov	r2, r3
   1b840:	bl	1a7c6 <copy_extent_buffer@@Base>
   1b844:	ldr	r3, [r6, #40]	; 0x28
   1b846:	ldr.w	ip, [r6, #152]	; 0x98
   1b84a:	mov.w	r1, #4294967295	; 0xffffffff
   1b84e:	mvn.w	r0, #7
   1b852:	str.w	r3, [r6, #144]	; 0x90
   1b856:	bic.w	ip, ip, #3
   1b85a:	ldr	r3, [r6, #44]	; 0x2c
   1b85c:	str.w	r3, [r6, #148]	; 0x94
   1b860:	ldrd	r2, r3, [sl, #8]
   1b864:	str.w	ip, [r6, #152]	; 0x98
   1b868:	str.w	r3, [r6, #180]	; 0xb4
   1b86c:	ldr.w	r3, [r6, #156]	; 0x9c
   1b870:	str.w	r2, [r6, #176]	; 0xb0
   1b874:	bic.w	r3, r3, #4278190080	; 0xff000000
   1b878:	orr.w	r3, r3, #16777216	; 0x1000000
   1b87c:	str.w	r3, [r6, #156]	; 0x9c
   1b880:	ldr.w	r3, [r4, #451]	; 0x1c3
   1b884:	ldr.w	r2, [r4, #447]	; 0x1bf
   1b888:	cmp	r3, r1
   1b88a:	iteet	eq
   1b88c:	cmpeq	r2, r0
   1b88e:	strne.w	r3, [r6, #188]	; 0xbc
   1b892:	strne.w	r2, [r6, #184]	; 0xb8
   1b896:	orreq.w	ip, ip, #2
   1b89a:	it	eq
   1b89c:	streq.w	ip, [r6, #152]	; 0x98
   1b8a0:	movs	r2, #32
   1b8a2:	ldr.w	r3, [r4, #464]	; 0x1d0
   1b8a6:	mov	r0, r6
   1b8a8:	ldr.w	r1, [r3, #352]	; 0x160
   1b8ac:	movs	r3, #16
   1b8ae:	add	r1, r3
   1b8b0:	bl	1a7b4 <write_extent_buffer@@Base>
   1b8b4:	ldr	r3, [r5, #84]	; 0x54
   1b8b6:	lsls	r3, r3, #21
   1b8b8:	bmi.w	1b9f6 <__btrfs_cow_block@@Base+0x2b6>
   1b8bc:	ldrd	r2, r3, [sl, #8]
   1b8c0:	ldr.w	r1, [r5, #180]	; 0xb4
   1b8c4:	ldr.w	r0, [r5, #176]	; 0xb0
   1b8c8:	cmp	r3, r1
   1b8ca:	it	eq
   1b8cc:	cmpeq	r2, r0
   1b8ce:	ite	cc
   1b8d0:	movcc	r3, #1
   1b8d2:	movcs	r3, #0
   1b8d4:	ldr	r1, [pc, #1000]	; (1bcc0 <__btrfs_cow_block@@Base+0x580>)
   1b8d6:	mov.w	r2, #342	; 0x156
   1b8da:	ldr	r0, [pc, #1000]	; (1bcc4 <__btrfs_cow_block@@Base+0x584>)
   1b8dc:	add	r1, pc
   1b8de:	adds	r1, #158	; 0x9e
   1b8e0:	add	r0, pc
   1b8e2:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1b8e6:	ldr.w	r3, [r4, #488]	; 0x1e8
   1b8ea:	cmp	r3, #0
   1b8ec:	beq.w	1b9fa <__btrfs_cow_block@@Base+0x2ba>
   1b8f0:	ldr	r3, [r4, #0]
   1b8f2:	cmp	r5, r3
   1b8f4:	beq.w	1b9fa <__btrfs_cow_block@@Base+0x2ba>
   1b8f8:	ldr	r3, [r4, #4]
   1b8fa:	cmp	r5, r3
   1b8fc:	beq.n	1b9fa <__btrfs_cow_block@@Base+0x2ba>
   1b8fe:	ldr.w	r3, [r5, #180]	; 0xb4
   1b902:	ldr.w	r1, [r4, #212]	; 0xd4
   1b906:	ldr.w	r2, [r5, #176]	; 0xb0
   1b90a:	ldr.w	r0, [r4, #208]	; 0xd0
   1b90e:	cmp	r1, r3
   1b910:	it	eq
   1b912:	cmpeq	r0, r2
   1b914:	bcs.n	1b924 <__btrfs_cow_block@@Base+0x1e4>
   1b916:	ldr.w	r1, [r5, #152]	; 0x98
   1b91a:	movs	r3, #0
   1b91c:	and.w	r2, r1, #2
   1b920:	orrs	r3, r2
   1b922:	beq.n	1b9fa <__btrfs_cow_block@@Base+0x2ba>
   1b924:	ldrb.w	r2, [r5, #196]	; 0xc4
   1b928:	add	r3, sp, #64	; 0x40
   1b92a:	ldr.w	r1, [sl]
   1b92e:	mov	r0, sl
   1b930:	str	r3, [sp, #16]
   1b932:	add	r3, sp, #56	; 0x38
   1b934:	str	r3, [sp, #12]
   1b936:	movs	r3, #1
   1b938:	str	r3, [sp, #8]
   1b93a:	movs	r3, #0
   1b93c:	strd	r2, r3, [sp]
   1b940:	ldrd	r2, r3, [r5, #40]	; 0x28
   1b944:	bl	23a14 <btrfs_lookup_extent_info@@Base>
   1b948:	ldr	r1, [pc, #892]	; (1bcc8 <__btrfs_cow_block@@Base+0x588>)
   1b94a:	movs	r2, #239	; 0xef
   1b94c:	add	r1, pc
   1b94e:	adds	r1, #176	; 0xb0
   1b950:	str	r1, [sp, #40]	; 0x28
   1b952:	mov	r3, r0
   1b954:	ldr	r0, [pc, #884]	; (1bccc <__btrfs_cow_block@@Base+0x58c>)
   1b956:	add	r0, pc
   1b958:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1b95c:	ldrd	r2, r3, [sp, #56]	; 0x38
   1b960:	ldr	r0, [pc, #876]	; (1bcd0 <__btrfs_cow_block@@Base+0x590>)
   1b962:	orrs	r3, r2
   1b964:	ldr	r1, [sp, #40]	; 0x28
   1b966:	add	r0, pc
   1b968:	mov.w	r2, #240	; 0xf0
   1b96c:	ite	eq
   1b96e:	moveq	r3, #1
   1b970:	movne	r3, #0
   1b972:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1b976:	ldr.w	r3, [r5, #184]	; 0xb8
   1b97a:	ldr	r2, [sp, #64]	; 0x40
   1b97c:	str	r3, [sp, #40]	; 0x28
   1b97e:	and.w	r8, r2, #256	; 0x100
   1b982:	ldr.w	r3, [r5, #188]	; 0xbc
   1b986:	str	r3, [sp, #44]	; 0x2c
   1b988:	movs	r3, #0
   1b98a:	mov	r9, r3
   1b98c:	orrs.w	r2, r8, r9
   1b990:	bne.n	1b9a8 <__btrfs_cow_block@@Base+0x268>
   1b992:	ldrd	r0, r1, [sp, #40]	; 0x28
   1b996:	mov.w	r3, #4294967295	; 0xffffffff
   1b99a:	mvn.w	r2, #7
   1b99e:	cmp	r1, r3
   1b9a0:	itte	eq
   1b9a2:	cmpeq	r0, r2
   1b9a4:	moveq	r3, #1
   1b9a6:	movne	r3, r9
   1b9a8:	ldr	r1, [pc, #808]	; (1bcd4 <__btrfs_cow_block@@Base+0x594>)
   1b9aa:	movs	r2, #251	; 0xfb
   1b9ac:	ldr	r0, [pc, #808]	; (1bcd8 <__btrfs_cow_block@@Base+0x598>)
   1b9ae:	add	r1, pc
   1b9b0:	adds	r1, #176	; 0xb0
   1b9b2:	add	r0, pc
   1b9b4:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1b9b8:	ldrd	r2, r3, [sp, #56]	; 0x38
   1b9bc:	cmp	r3, #0
   1b9be:	it	eq
   1b9c0:	cmpeq	r2, #2
   1b9c2:	bcc.w	1bb8e <__btrfs_cow_block@@Base+0x44e>
   1b9c6:	ldrd	r0, r1, [sp, #40]	; 0x28
   1b9ca:	ldr.w	r3, [r4, #451]	; 0x1c3
   1b9ce:	ldr.w	r2, [r4, #447]	; 0x1bf
   1b9d2:	cmp	r1, r3
   1b9d4:	mov.w	r1, #4294967295	; 0xffffffff
   1b9d8:	it	eq
   1b9da:	cmpeq	r0, r2
   1b9dc:	mvn.w	r0, #7
   1b9e0:	beq.n	1ba32 <__btrfs_cow_block@@Base+0x2f2>
   1b9e2:	cmp	r3, r1
   1b9e4:	it	eq
   1b9e6:	cmpeq	r2, r0
   1b9e8:	bne.w	1bb8a <__btrfs_cow_block@@Base+0x44a>
   1b9ec:	orrs.w	r3, r8, r9
   1b9f0:	bne.w	1bb6c <__btrfs_cow_block@@Base+0x42c>
   1b9f4:	b.n	1ba3a <__btrfs_cow_block@@Base+0x2fa>
   1b9f6:	movs	r3, #0
   1b9f8:	b.n	1b8d4 <__btrfs_cow_block@@Base+0x194>
   1b9fa:	movs	r2, #1
   1b9fc:	movs	r3, #0
   1b9fe:	strd	r2, r3, [sp, #56]	; 0x38
   1ba02:	mov.w	r1, #4294967295	; 0xffffffff
   1ba06:	ldr.w	r3, [r4, #451]	; 0x1c3
   1ba0a:	mvn.w	r0, #7
   1ba0e:	ldr.w	r2, [r4, #447]	; 0x1bf
   1ba12:	cmp	r3, r1
   1ba14:	it	eq
   1ba16:	cmpeq	r2, r0
   1ba18:	beq.n	1ba22 <__btrfs_cow_block@@Base+0x2e2>
   1ba1a:	ldr.w	r3, [r5, #156]	; 0x9c
   1ba1e:	lsrs	r3, r3, #24
   1ba20:	bne.n	1ba2e <__btrfs_cow_block@@Base+0x2ee>
   1ba22:	mov.w	r2, #256	; 0x100
   1ba26:	movs	r3, #0
   1ba28:	strd	r2, r3, [sp, #64]	; 0x40
   1ba2c:	b.n	1b976 <__btrfs_cow_block@@Base+0x236>
   1ba2e:	movs	r2, #0
   1ba30:	b.n	1ba26 <__btrfs_cow_block@@Base+0x2e6>
   1ba32:	orrs.w	r3, r8, r9
   1ba36:	bne.w	1bb60 <__btrfs_cow_block@@Base+0x420>
   1ba3a:	movs	r3, #1
   1ba3c:	mov	r2, r5
   1ba3e:	mov	r1, r4
   1ba40:	mov	r0, sl
   1ba42:	bl	23da8 <btrfs_inc_ref@@Base>
   1ba46:	ldr.w	r8, [pc, #660]	; 1bcdc <__btrfs_cow_block@@Base+0x59c>
   1ba4a:	ldr.w	r9, [pc, #660]	; 1bce0 <__btrfs_cow_block@@Base+0x5a0>
   1ba4e:	movw	r2, #259	; 0x103
   1ba52:	add	r8, pc
   1ba54:	add.w	r8, r8, #176	; 0xb0
   1ba58:	add	r9, pc
   1ba5a:	mov	r1, r8
   1ba5c:	mov	r3, r0
   1ba5e:	mov	r0, r9
   1ba60:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1ba64:	ldr.w	r3, [r4, #451]	; 0x1c3
   1ba68:	ldr.w	r2, [r4, #447]	; 0x1bf
   1ba6c:	mov.w	r1, #4294967295	; 0xffffffff
   1ba70:	cmp	r3, r1
   1ba72:	mvn.w	r0, #7
   1ba76:	it	eq
   1ba78:	cmpeq	r2, r0
   1ba7a:	bne.n	1bab0 <__btrfs_cow_block@@Base+0x370>
   1ba7c:	movs	r3, #0
   1ba7e:	mov	r2, r5
   1ba80:	mov	r1, r4
   1ba82:	mov	r0, sl
   1ba84:	bl	23db6 <btrfs_dec_ref@@Base>
   1ba88:	mov.w	r2, #264	; 0x108
   1ba8c:	mov	r1, r8
   1ba8e:	mov	r3, r0
   1ba90:	mov	r0, r9
   1ba92:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1ba96:	movs	r3, #1
   1ba98:	mov	r2, r6
   1ba9a:	mov	r1, r4
   1ba9c:	mov	r0, sl
   1ba9e:	bl	23da8 <btrfs_inc_ref@@Base>
   1baa2:	mov.w	r2, #266	; 0x10a
   1baa6:	mov	r1, r8
   1baa8:	mov	r3, r0
   1baaa:	mov	r0, r9
   1baac:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1bab0:	mov.w	r2, #256	; 0x100
   1bab4:	movs	r3, #0
   1bab6:	strd	r2, r3, [sp, #8]
   1baba:	mov	r0, sl
   1babc:	ldrb.w	r3, [r5, #196]	; 0xc4
   1bac0:	str	r3, [sp, #0]
   1bac2:	ldrd	r2, r3, [r5, #40]	; 0x28
   1bac6:	bl	23bc4 <btrfs_set_block_flags@@Base>
   1baca:	ldr	r1, [pc, #536]	; (1bce4 <__btrfs_cow_block@@Base+0x5a4>)
   1bacc:	mov.w	r2, #282	; 0x11a
   1bad0:	add	r1, pc
   1bad2:	adds	r1, #176	; 0xb0
   1bad4:	mov	r3, r0
   1bad6:	ldr	r0, [pc, #528]	; (1bce8 <__btrfs_cow_block@@Base+0x5a8>)
   1bad8:	add	r0, pc
   1bada:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1bade:	ldr	r3, [r4, #0]
   1bae0:	uxtb.w	r8, r7
   1bae4:	mov.w	r9, #0
   1bae8:	cmp	r3, r5
   1baea:	bne.w	1bbfa <__btrfs_cow_block@@Base+0x4ba>
   1baee:	str	r6, [r4, #0]
   1baf0:	movs	r2, #0
   1baf2:	ldr	r3, [r6, #80]	; 0x50
   1baf4:	adds	r3, #1
   1baf6:	str	r3, [r6, #80]	; 0x50
   1baf8:	movs	r3, #0
   1bafa:	ldr.w	r0, [r4, #447]	; 0x1bf
   1bafe:	ldr.w	r1, [r4, #451]	; 0x1c3
   1bb02:	strd	r2, r3, [sp, #32]
   1bb06:	strd	r2, r3, [sp, #8]
   1bb0a:	ldr	r3, [r5, #76]	; 0x4c
   1bb0c:	strd	r0, r1, [sp, #16]
   1bb10:	mov	r1, r4
   1bb12:	mov	r0, sl
   1bb14:	strd	r8, r9, [sp, #24]
   1bb18:	str	r3, [sp, #0]
   1bb1a:	movs	r3, #0
   1bb1c:	str	r3, [sp, #4]
   1bb1e:	ldrd	r2, r3, [r5, #40]	; 0x28
   1bb22:	bl	240d4 <btrfs_free_extent@@Base>
   1bb26:	mov	r0, r5
   1bb28:	bl	1a0a4 <free_extent_buffer@@Base>
   1bb2c:	mov	r0, r4
   1bb2e:	bl	1b318 <add_root_to_dirty_list@@Base>
   1bb32:	ldr	r2, [r5, #68]	; 0x44
   1bb34:	add.w	r3, r5, #68	; 0x44
   1bb38:	cmp	r3, r2
   1bb3a:	beq.n	1bb4c <__btrfs_cow_block@@Base+0x40c>
   1bb3c:	ldr	r1, [r5, #72]	; 0x48
   1bb3e:	mov	r0, r5
   1bb40:	str	r1, [r2, #4]
   1bb42:	str	r2, [r1, #0]
   1bb44:	strd	r3, r3, [r5, #68]	; 0x44
   1bb48:	bl	1a0a4 <free_extent_buffer@@Base>
   1bb4c:	mov	r0, r5
   1bb4e:	bl	1a0a4 <free_extent_buffer@@Base>
   1bb52:	mov	r0, r6
   1bb54:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1bb58:	ldr	r3, [sp, #52]	; 0x34
   1bb5a:	movs	r0, #0
   1bb5c:	str	r6, [r3, #0]
   1bb5e:	b.n	1b810 <__btrfs_cow_block@@Base+0xd0>
   1bb60:	ldrd	r2, r3, [sp, #40]	; 0x28
   1bb64:	cmp	r3, r1
   1bb66:	it	eq
   1bb68:	cmpeq	r2, r0
   1bb6a:	bne.n	1bb8a <__btrfs_cow_block@@Base+0x44a>
   1bb6c:	movs	r3, #1
   1bb6e:	mov	r2, r6
   1bb70:	mov	r1, r4
   1bb72:	mov	r0, sl
   1bb74:	bl	23da8 <btrfs_inc_ref@@Base>
   1bb78:	ldr	r1, [pc, #368]	; (1bcec <__btrfs_cow_block@@Base+0x5ac>)
   1bb7a:	mov.w	r2, #276	; 0x114
   1bb7e:	add	r1, pc
   1bb80:	adds	r1, #176	; 0xb0
   1bb82:	mov	r3, r0
   1bb84:	ldr	r0, [pc, #360]	; (1bcf0 <__btrfs_cow_block@@Base+0x5b0>)
   1bb86:	add	r0, pc
   1bb88:	b.n	1bada <__btrfs_cow_block@@Base+0x39a>
   1bb8a:	movs	r3, #0
   1bb8c:	b.n	1bb6e <__btrfs_cow_block@@Base+0x42e>
   1bb8e:	orrs.w	r3, r8, r9
   1bb92:	beq.n	1bbf2 <__btrfs_cow_block@@Base+0x4b2>
   1bb94:	ldr.w	r3, [r4, #451]	; 0x1c3
   1bb98:	mov.w	r1, #4294967295	; 0xffffffff
   1bb9c:	ldr.w	r2, [r4, #447]	; 0x1bf
   1bba0:	mvn.w	r0, #7
   1bba4:	cmp	r3, r1
   1bba6:	mov	r1, r4
   1bba8:	it	eq
   1bbaa:	cmpeq	r2, r0
   1bbac:	mov	r2, r6
   1bbae:	mov	r0, sl
   1bbb0:	ldr.w	r9, [pc, #320]	; 1bcf4 <__btrfs_cow_block@@Base+0x5b4>
   1bbb4:	ite	eq
   1bbb6:	moveq	r3, #1
   1bbb8:	movne	r3, #0
   1bbba:	bl	23da8 <btrfs_inc_ref@@Base>
   1bbbe:	ldr.w	r8, [pc, #312]	; 1bcf8 <__btrfs_cow_block@@Base+0x5b8>
   1bbc2:	add	r9, pc
   1bbc4:	movw	r2, #291	; 0x123
   1bbc8:	add.w	r9, r9, #176	; 0xb0
   1bbcc:	add	r8, pc
   1bbce:	mov	r1, r9
   1bbd0:	mov	r3, r0
   1bbd2:	mov	r0, r8
   1bbd4:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1bbd8:	movs	r3, #1
   1bbda:	mov	r2, r5
   1bbdc:	mov	r1, r4
   1bbde:	mov	r0, sl
   1bbe0:	bl	23db6 <btrfs_dec_ref@@Base>
   1bbe4:	movw	r2, #293	; 0x125
   1bbe8:	mov	r1, r9
   1bbea:	mov	r3, r0
   1bbec:	mov	r0, r8
   1bbee:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1bbf2:	mov	r0, r5
   1bbf4:	bl	20994 <clean_tree_block@@Base>
   1bbf8:	b.n	1bade <__btrfs_cow_block@@Base+0x39e>
   1bbfa:	ldr	r3, [sp, #48]	; 0x30
   1bbfc:	add.w	fp, fp, fp, lsl #5
   1bc00:	ldrd	r1, r2, [r6, #40]	; 0x28
   1bc04:	add	r3, fp
   1bc06:	ldr	r7, [pc, #244]	; (1bcfc <__btrfs_cow_block@@Base+0x5bc>)
   1bc08:	add.w	fp, r3, #197	; 0xc5
   1bc0c:	ldr	r0, [pc, #240]	; (1bd00 <__btrfs_cow_block@@Base+0x5c0>)
   1bc0e:	str.w	r1, [r3, #214]	; 0xd6
   1bc12:	add	r7, pc
   1bc14:	str.w	r2, [r3, #218]	; 0xda
   1bc18:	adds	r7, #158	; 0x9e
   1bc1a:	ldrd	r2, r3, [sl, #8]
   1bc1e:	add	r0, pc
   1bc20:	mov	r1, r7
   1bc22:	orrs	r3, r2
   1bc24:	mov.w	r2, #358	; 0x166
   1bc28:	ite	eq
   1bc2a:	moveq	r3, #1
   1bc2c:	movne	r3, #0
   1bc2e:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1bc32:	ldrd	r2, r3, [sl, #8]
   1bc36:	ldr	r0, [sp, #48]	; 0x30
   1bc38:	str.w	r2, [fp, #25]
   1bc3c:	str.w	r3, [fp, #29]
   1bc40:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1bc44:	ldr	r3, [sp, #48]	; 0x30
   1bc46:	ldr.w	r0, [r3, #176]	; 0xb0
   1bc4a:	ldr.w	r1, [r3, #180]	; 0xb4
   1bc4e:	ldrd	r2, r3, [sl, #8]
   1bc52:	cmp	r3, r1
   1bc54:	mov	r1, r7
   1bc56:	it	eq
   1bc58:	cmpeq	r2, r0
   1bc5a:	ldr	r0, [pc, #168]	; (1bd04 <__btrfs_cow_block@@Base+0x5c4>)
   1bc5c:	mov.w	r2, #362	; 0x16a
   1bc60:	ite	ne
   1bc62:	movne	r3, #1
   1bc64:	moveq	r3, #0
   1bc66:	add	r0, pc
   1bc68:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1bc6c:	ldr.w	r0, [r4, #447]	; 0x1bf
   1bc70:	ldr.w	r1, [r4, #451]	; 0x1c3
   1bc74:	movs	r2, #0
   1bc76:	movs	r3, #0
   1bc78:	strd	r2, r3, [sp, #32]
   1bc7c:	strd	r2, r3, [sp, #8]
   1bc80:	ldr	r3, [r5, #76]	; 0x4c
   1bc82:	strd	r0, r1, [sp, #16]
   1bc86:	mov	r1, r4
   1bc88:	mov	r0, sl
   1bc8a:	strd	r8, r9, [sp, #24]
   1bc8e:	str	r3, [sp, #0]
   1bc90:	movs	r3, #0
   1bc92:	str	r3, [sp, #4]
   1bc94:	ldrd	r2, r3, [r5, #40]	; 0x28
   1bc98:	bl	240d4 <btrfs_free_extent@@Base>
   1bc9c:	b.n	1bb32 <__btrfs_cow_block@@Base+0x3f2>
   1bc9e:	add	sp, #100	; 0x64
   1bca0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bca4:	bpl.n	1bc60 <__btrfs_cow_block@@Base+0x520>
   1bca6:	movs	r4, r0
   1bca8:	lsls	r4, r7, #9
   1bcaa:	movs	r0, r0
   1bcac:	ldrsb	r0, [r5, r7]
   1bcae:	movs	r2, r0
   1bcb0:	str	r0, [r6, r6]
   1bcb2:	movs	r2, r0
   1bcb4:	ldrsb	r0, [r7, r6]
   1bcb6:	movs	r2, r0
   1bcb8:	str	r0, [r2, r7]
   1bcba:	movs	r2, r0
   1bcbc:	bpl.n	1bcf0 <__btrfs_cow_block@@Base+0x5b0>
   1bcbe:	movs	r4, r0
   1bcc0:	ldrsb	r0, [r4, r2]
   1bcc2:	movs	r2, r0
   1bcc4:	str	r5, [r5, r3]
   1bcc6:	movs	r2, r0
   1bcc8:	ldrsb	r0, [r6, r0]
   1bcca:	movs	r2, r0
   1bccc:	cmp	r7, #39	; 0x27
   1bcce:	movs	r2, r0
   1bcd0:	str	r0, [r0, #52]	; 0x34
   1bcd2:	movs	r2, r0
   1bcd4:	strb	r6, [r1, r7]
   1bcd6:	movs	r2, r0
   1bcd8:	str	r7, [r5, r1]
   1bcda:	movs	r2, r0
   1bcdc:	strb	r2, [r5, r4]
   1bcde:	movs	r2, r0
   1bce0:	cmp	r6, #37	; 0x25
   1bce2:	movs	r2, r0
   1bce4:	strb	r4, [r5, r2]
   1bce6:	movs	r2, r0
   1bce8:	cmp	r5, #165	; 0xa5
   1bcea:	movs	r2, r0
   1bcec:	strh	r6, [r7, r7]
   1bcee:	movs	r2, r0
   1bcf0:	cmp	r4, #247	; 0xf7
   1bcf2:	movs	r2, r0
   1bcf4:	strh	r2, [r7, r6]
   1bcf6:	movs	r2, r0
   1bcf8:	cmp	r4, #177	; 0xb1
   1bcfa:	movs	r2, r0
   1bcfc:	strh	r2, [r5, r5]
   1bcfe:	movs	r2, r0
   1bd00:	ldr	r4, [pc, #432]	; (1beb4 <btrfs_check_node@@Base+0x10>)
   1bd02:	movs	r2, r0
   1bd04:	ldr	r6, [pc, #40]	; (1bd30 <btrfs_cow_block@@Base+0x28>)
   1bd06:	movs	r2, r0

0001bd08 <btrfs_cow_block@@Base>:
   1bd08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1bd0c:	mov	r4, r2
   1bd0e:	ldr.w	r2, [r1, #464]	; 0x1d0
   1bd12:	mov	r6, r0
   1bd14:	ldrd	r8, r9, [r0, #8]
   1bd18:	mov	r5, r1
   1bd1a:	sub	sp, #24
   1bd1c:	mov	r7, r3
   1bd1e:	ldrd	r0, r1, [r2, #232]	; 0xe8
   1bd22:	ldr	r3, [pc, #184]	; (1bddc <btrfs_cow_block@@Base+0xd4>)
   1bd24:	cmp	r9, r1
   1bd26:	ldr.w	sl, [sp, #60]	; 0x3c
   1bd2a:	it	eq
   1bd2c:	cmpeq	r8, r0
   1bd2e:	add	r3, pc
   1bd30:	beq.n	1bd5e <btrfs_cow_block@@Base+0x56>
   1bd32:	ldr	r2, [pc, #172]	; (1bde0 <btrfs_cow_block@@Base+0xd8>)
   1bd34:	ldr	r3, [r3, r2]
   1bd36:	ldr	r2, [pc, #172]	; (1bde4 <btrfs_cow_block@@Base+0xdc>)
   1bd38:	strd	r0, r1, [sp, #8]
   1bd3c:	movs	r1, #1
   1bd3e:	add	r2, pc
   1bd40:	strd	r8, r9, [sp]
   1bd44:	ldr	r0, [r3, #0]
   1bd46:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1bd4a:	ldr	r1, [pc, #156]	; (1bde8 <btrfs_cow_block@@Base+0xe0>)
   1bd4c:	ldr	r0, [pc, #156]	; (1bdec <btrfs_cow_block@@Base+0xe4>)
   1bd4e:	movs	r3, #1
   1bd50:	add	r1, pc
   1bd52:	movw	r2, #407	; 0x197
   1bd56:	adds	r1, #195	; 0xc3
   1bd58:	add	r0, pc
   1bd5a:	bl	1aea2 <rb_free_nodes@@Base+0x120>
   1bd5e:	ldrd	r2, r3, [r6, #8]
   1bd62:	ldr.w	r1, [r4, #180]	; 0xb4
   1bd66:	ldr.w	r0, [r4, #176]	; 0xb0
   1bd6a:	cmp	r1, r3
   1bd6c:	it	eq
   1bd6e:	cmpeq	r0, r2
   1bd70:	bne.n	1bdb2 <btrfs_cow_block@@Base+0xaa>
   1bd72:	ldr.w	lr, [r4, #152]	; 0x98
   1bd76:	mov.w	ip, #0
   1bd7a:	mov	r3, ip
   1bd7c:	and.w	r2, lr, #1
   1bd80:	orrs	r3, r2
   1bd82:	bne.n	1bdb2 <btrfs_cow_block@@Base+0xaa>
   1bd84:	ldr.w	r3, [r5, #451]	; 0x1c3
   1bd88:	mov.w	r1, #4294967295	; 0xffffffff
   1bd8c:	ldr.w	r2, [r5, #447]	; 0x1bf
   1bd90:	mvn.w	r0, #7
   1bd94:	cmp	r3, r1
   1bd96:	it	eq
   1bd98:	cmpeq	r2, r0
   1bd9a:	beq.n	1bda6 <btrfs_cow_block@@Base+0x9e>
   1bd9c:	and.w	r2, lr, #2
   1bda0:	mov	r3, ip
   1bda2:	orrs	r3, r2
   1bda4:	bne.n	1bdb2 <btrfs_cow_block@@Base+0xaa>
   1bda6:	movs	r0, #0
   1bda8:	str.w	r4, [sl]
   1bdac:	add	sp, #24
   1bdae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1bdb2:	movs	r2, #0
   1bdb4:	movs	r3, #0
   1bdb6:	strd	r2, r3, [sp, #16]
   1bdba:	mov	r1, r5
   1bdbc:	ldrd	r3, r2, [r4, #40]	; 0x28
   1bdc0:	mov	r0, r6
   1bdc2:	str.w	sl, [sp, #4]
   1bdc6:	and.w	r3, r3, #3221225472	; 0xc0000000
   1bdca:	strd	r3, r2, [sp, #8]
   1bdce:	mov	r2, r4
   1bdd0:	ldr	r3, [sp, #56]	; 0x38
   1bdd2:	str	r3, [sp, #0]
   1bdd4:	mov	r3, r7
   1bdd6:	bl	1b740 <__btrfs_cow_block@@Base>
   1bdda:	b.n	1bdac <btrfs_cow_block@@Base+0xa4>
   1bddc:	beq.n	1bde4 <btrfs_cow_block@@Base+0xdc>
   1bdde:	movs	r4, r0
   1bde0:	lsls	r4, r1, #10
   1bde2:	movs	r0, r0
   1bde4:	ldr	r5, [pc, #400]	; (1bf78 <btrfs_check_node@@Base+0xd4>)
   1bde6:	movs	r2, r0
   1bde8:	strh	r4, [r5, r0]
   1bdea:	movs	r2, r0
   1bdec:	str	r5, [r3, #28]
   1bdee:	movs	r2, r0

0001bdf0 <btrfs_comp_cpu_keys@@Base>:
   1bdf0:	push	{r4, r5, lr}
   1bdf2:	ldr	r3, [r1, #4]
   1bdf4:	ldr	r5, [r0, #4]
   1bdf6:	ldr	r4, [r0, #0]
   1bdf8:	ldr	r2, [r1, #0]
   1bdfa:	cmp	r3, r5
   1bdfc:	it	eq
   1bdfe:	cmpeq	r2, r4
   1be00:	bcc.n	1be42 <btrfs_comp_cpu_keys@@Base+0x52>
   1be02:	cmp	r5, r3
   1be04:	it	eq
   1be06:	cmpeq	r4, r2
   1be08:	bcc.n	1be3c <btrfs_comp_cpu_keys@@Base+0x4c>
   1be0a:	ldrb	r2, [r0, #8]
   1be0c:	ldrb	r3, [r1, #8]
   1be0e:	cmp	r2, r3
   1be10:	bhi.n	1be42 <btrfs_comp_cpu_keys@@Base+0x52>
   1be12:	bcc.n	1be3c <btrfs_comp_cpu_keys@@Base+0x4c>
   1be14:	ldr.w	r5, [r0, #13]
   1be18:	ldr.w	r3, [r1, #13]
   1be1c:	ldr.w	r4, [r0, #9]
   1be20:	ldr.w	r2, [r1, #9]
   1be24:	cmp	r3, r5
   1be26:	it	eq
   1be28:	cmpeq	r2, r4
   1be2a:	bcc.n	1be42 <btrfs_comp_cpu_keys@@Base+0x52>
   1be2c:	cmp	r5, r3
   1be2e:	it	eq
   1be30:	cmpeq	r4, r2
   1be32:	ite	cc
   1be34:	movcc.w	r0, #4294967295	; 0xffffffff
   1be38:	movcs	r0, #0
   1be3a:	pop	{r4, r5, pc}
   1be3c:	mov.w	r0, #4294967295	; 0xffffffff
   1be40:	b.n	1be3a <btrfs_comp_cpu_keys@@Base+0x4a>
   1be42:	movs	r0, #1
   1be44:	b.n	1be3a <btrfs_comp_cpu_keys@@Base+0x4a>
   1be46:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1be48:	ldr	r2, [pc, #76]	; (1be98 <btrfs_comp_cpu_keys@@Base+0xa8>)
   1be4a:	ldr	r3, [pc, #80]	; (1be9c <btrfs_comp_cpu_keys@@Base+0xac>)
   1be4c:	add	r2, pc
   1be4e:	ldr	r3, [r2, r3]
   1be50:	ldr	r3, [r3, #0]
   1be52:	str	r3, [sp, #20]
   1be54:	mov.w	r3, #0
   1be58:	ldr.w	r3, [r0, #13]
   1be5c:	ldr.w	r2, [r0, #9]
   1be60:	str.w	r3, [sp, #13]
   1be64:	ldrb	r3, [r0, #8]
   1be66:	str.w	r2, [sp, #9]
   1be6a:	ldr	r2, [r0, #0]
   1be6c:	strb.w	r3, [sp, #8]
   1be70:	ldr	r3, [r0, #4]
   1be72:	mov	r0, sp
   1be74:	strd	r2, r3, [sp]
   1be78:	bl	1bdf0 <btrfs_comp_cpu_keys@@Base>
   1be7c:	ldr	r2, [pc, #32]	; (1bea0 <btrfs_comp_cpu_keys@@Base+0xb0>)
   1be7e:	ldr	r3, [pc, #28]	; (1be9c <btrfs_comp_cpu_keys@@Base+0xac>)
   1be80:	add	r2, pc
   1be82:	ldr	r3, [r2, r3]
   1be84:	ldr	r2, [r3, #0]
   1be86:	ldr	r3, [sp, #20]
   1be88:	eors	r2, r3
   1be8a:	beq.n	1be90 <btrfs_comp_cpu_keys@@Base+0xa0>
   1be8c:	blx	88e4 <__stack_chk_fail@plt>
   1be90:	add	sp, #28
   1be92:	ldr.w	pc, [sp], #4
   1be96:	nop
   1be98:	ldmia	r6, {r2, r5, r6, r7}
   1be9a:	movs	r4, r0
   1be9c:	lsls	r4, r7, #9
   1be9e:	movs	r0, r0
   1bea0:	ldmia	r6!, {r4, r5, r7}
   1bea2:	movs	r4, r0

0001bea4 <btrfs_check_node@@Base>:
   1bea4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bea8:	mov	r4, r2
   1beaa:	ldr	r2, [pc, #340]	; (1c000 <btrfs_check_node@@Base+0x15c>)
   1beac:	sub	sp, #92	; 0x5c
   1beae:	ldr	r3, [pc, #340]	; (1c004 <btrfs_check_node@@Base+0x160>)
   1beb0:	mov	r7, r0
   1beb2:	add	r2, pc
   1beb4:	ldr.w	r8, [r4, #192]	; 0xc0
   1beb8:	mov	r5, r1
   1beba:	ldr	r3, [r2, r3]
   1bebc:	ldr	r3, [r3, #0]
   1bebe:	str	r3, [sp, #84]	; 0x54
   1bec0:	mov.w	r3, #0
   1bec4:	cmp.w	r8, #0
   1bec8:	beq.n	1bf64 <btrfs_check_node@@Base+0xc0>
   1beca:	ldr.w	r2, [r0, #384]	; 0x180
   1bece:	ldr	r3, [pc, #300]	; (1bffc <btrfs_check_node@@Base+0x158>)
   1bed0:	subs	r2, #101	; 0x65
   1bed2:	umull	r2, r3, r2, r3
   1bed6:	cmp.w	r8, r3, lsr #3
   1beda:	bhi.n	1bf64 <btrfs_check_node@@Base+0xc0>
   1bedc:	cbnz	r1, 1befa <btrfs_check_node@@Base+0x56>
   1bede:	sub.w	sl, r8, #2
   1bee2:	add.w	r9, sp, #44	; 0x2c
   1bee6:	add.w	fp, sp, #64	; 0x40
   1beea:	movs	r6, #0
   1beec:	cmp.w	r8, #1
   1bef0:	beq.n	1bef6 <btrfs_check_node@@Base+0x52>
   1bef2:	cmp	sl, r6
   1bef4:	bhi.n	1bf1e <btrfs_check_node@@Base+0x7a>
   1bef6:	movs	r6, #0
   1bef8:	b.n	1bfb4 <btrfs_check_node@@Base+0x110>
   1befa:	ldrb	r3, [r1, #8]
   1befc:	cmp	r3, #0
   1befe:	beq.n	1bede <btrfs_check_node@@Base+0x3a>
   1bf00:	add	r1, sp, #44	; 0x2c
   1bf02:	movs	r2, #0
   1bf04:	mov	r0, r4
   1bf06:	str	r1, [sp, #20]
   1bf08:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1bf0c:	ldr	r1, [sp, #20]
   1bf0e:	movs	r2, #17
   1bf10:	mov	r0, r5
   1bf12:	blx	887c <memcmp@plt+0x4>
   1bf16:	cmp	r0, #0
   1bf18:	beq.n	1bede <btrfs_check_node@@Base+0x3a>
   1bf1a:	movs	r6, #2
   1bf1c:	b.n	1bf66 <btrfs_check_node@@Base+0xc2>
   1bf1e:	mov	r2, r6
   1bf20:	adds	r6, #1
   1bf22:	mov	r1, r9
   1bf24:	mov	r0, r4
   1bf26:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1bf2a:	mov	r2, r6
   1bf2c:	mov	r1, fp
   1bf2e:	mov	r0, r4
   1bf30:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1bf34:	ldr.w	r3, [sp, #77]	; 0x4d
   1bf38:	ldr.w	r2, [sp, #73]	; 0x49
   1bf3c:	add	r1, sp, #24
   1bf3e:	mov	r0, r9
   1bf40:	str.w	r3, [sp, #37]	; 0x25
   1bf44:	ldrb.w	r3, [sp, #72]	; 0x48
   1bf48:	str.w	r2, [sp, #33]	; 0x21
   1bf4c:	strb.w	r3, [sp, #32]
   1bf50:	ldrd	r2, r3, [sp, #64]	; 0x40
   1bf54:	strd	r2, r3, [sp, #24]
   1bf58:	bl	1be46 <btrfs_comp_cpu_keys@@Base+0x56>
   1bf5c:	cmp	r0, #0
   1bf5e:	blt.n	1beec <btrfs_check_node@@Base+0x48>
   1bf60:	movs	r6, #3
   1bf62:	b.n	1bf66 <btrfs_check_node@@Base+0xc2>
   1bf64:	movs	r6, #1
   1bf66:	ldr.w	r3, [r4, #188]	; 0xbc
   1bf6a:	ldr.w	r2, [r4, #184]	; 0xb8
   1bf6e:	cmp	r3, #0
   1bf70:	it	eq
   1bf72:	cmpeq	r2, #2
   1bf74:	bne.n	1bfb4 <btrfs_check_node@@Base+0x110>
   1bf76:	add.w	r8, sp, #33	; 0x21
   1bf7a:	cbz	r5, 1bfc8 <btrfs_check_node@@Base+0x124>
   1bf7c:	ldr.w	r3, [r5, #13]
   1bf80:	ldr.w	r2, [r5, #9]
   1bf84:	str.w	r3, [r8, #4]
   1bf88:	ldrb	r3, [r5, #8]
   1bf8a:	str.w	r2, [sp, #33]	; 0x21
   1bf8e:	ldr	r2, [r5, #0]
   1bf90:	strb.w	r3, [sp, #32]
   1bf94:	ldr	r3, [r5, #4]
   1bf96:	strd	r2, r3, [sp, #24]
   1bf9a:	ldrb.w	r3, [r4, #196]	; 0xc4
   1bf9e:	add	r1, sp, #24
   1bfa0:	mov	r0, r7
   1bfa2:	str	r3, [sp, #8]
   1bfa4:	ldr	r3, [r4, #76]	; 0x4c
   1bfa6:	str	r3, [sp, #0]
   1bfa8:	movs	r3, #0
   1bfaa:	str	r3, [sp, #4]
   1bfac:	ldrd	r2, r3, [r4, #40]	; 0x28
   1bfb0:	bl	30a70 <btrfs_add_corrupt_extent_record@@Base>
   1bfb4:	ldr	r2, [pc, #80]	; (1c008 <btrfs_check_node@@Base+0x164>)
   1bfb6:	ldr	r3, [pc, #76]	; (1c004 <btrfs_check_node@@Base+0x160>)
   1bfb8:	add	r2, pc
   1bfba:	ldr	r3, [r2, r3]
   1bfbc:	ldr	r2, [r3, #0]
   1bfbe:	ldr	r3, [sp, #84]	; 0x54
   1bfc0:	eors	r2, r3
   1bfc2:	beq.n	1bff4 <btrfs_check_node@@Base+0x150>
   1bfc4:	blx	88e4 <__stack_chk_fail@plt>
   1bfc8:	mov	r2, r5
   1bfca:	add	r1, sp, #64	; 0x40
   1bfcc:	mov	r0, r4
   1bfce:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1bfd2:	ldr.w	r3, [sp, #77]	; 0x4d
   1bfd6:	ldr.w	r2, [sp, #73]	; 0x49
   1bfda:	str.w	r3, [r8, #4]
   1bfde:	ldrb.w	r3, [sp, #72]	; 0x48
   1bfe2:	str.w	r2, [sp, #33]	; 0x21
   1bfe6:	strb.w	r3, [sp, #32]
   1bfea:	ldrd	r2, r3, [sp, #64]	; 0x40
   1bfee:	strd	r2, r3, [sp, #24]
   1bff2:	b.n	1bf9a <btrfs_check_node@@Base+0xf6>
   1bff4:	mov	r0, r6
   1bff6:	add	sp, #92	; 0x5c
   1bff8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bffc:	strh	r1, [r4, #30]
   1bffe:	subs	r6, #15
   1c000:	ldmia	r6, {r1, r2, r3, r4, r5, r6}
   1c002:	movs	r4, r0
   1c004:	lsls	r4, r7, #9
   1c006:	movs	r0, r0
   1c008:	ldmia	r5, {r3, r4, r5, r6}
   1c00a:	movs	r4, r0

0001c00c <btrfs_bin_search@@Base>:
   1c00c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1c010:	mov	r6, r1
   1c012:	ldr.w	r5, [r0, #192]	; 0xc0
   1c016:	mov	r7, r3
   1c018:	mov	r9, r2
   1c01a:	cbnz	r2, 1c030 <btrfs_bin_search@@Base+0x24>
   1c01c:	add.w	r8, r0, #96	; 0x60
   1c020:	mov.w	sl, #25
   1c024:	cmp	r9, r5
   1c026:	blt.n	1c062 <btrfs_bin_search@@Base+0x56>
   1c028:	movs	r0, #1
   1c02a:	str.w	r9, [r7]
   1c02e:	b.n	1c08a <btrfs_bin_search@@Base+0x7e>
   1c030:	add.w	r8, r0, #96	; 0x60
   1c034:	mov.w	r9, #0
   1c038:	cmp	r9, r5
   1c03a:	bge.n	1c028 <btrfs_bin_search@@Base+0x1c>
   1c03c:	add.w	r4, r9, r5
   1c040:	mov	r1, r6
   1c042:	add.w	r4, r4, r4, lsr #31
   1c046:	asrs	r4, r4, #1
   1c048:	add.w	r0, r4, r4, lsl #5
   1c04c:	adds	r0, #101	; 0x65
   1c04e:	add	r0, r8
   1c050:	bl	1be46 <btrfs_comp_cpu_keys@@Base+0x56>
   1c054:	cmp	r0, #0
   1c056:	bge.n	1c08e <btrfs_bin_search@@Base+0x82>
   1c058:	add.w	r9, r4, #1
   1c05c:	mov	r4, r5
   1c05e:	mov	r5, r4
   1c060:	b.n	1c038 <btrfs_bin_search@@Base+0x2c>
   1c062:	add.w	r4, r9, r5
   1c066:	mov	r1, r6
   1c068:	add.w	r4, r4, r4, lsr #31
   1c06c:	asrs	r4, r4, #1
   1c06e:	mla	r0, sl, r4, r8
   1c072:	adds	r0, #101	; 0x65
   1c074:	bl	1be46 <btrfs_comp_cpu_keys@@Base+0x56>
   1c078:	cmp	r0, #0
   1c07a:	bge.n	1c086 <btrfs_bin_search@@Base+0x7a>
   1c07c:	add.w	r9, r4, #1
   1c080:	mov	r4, r5
   1c082:	mov	r5, r4
   1c084:	b.n	1c024 <btrfs_bin_search@@Base+0x18>
   1c086:	bne.n	1c082 <btrfs_bin_search@@Base+0x76>
   1c088:	str	r4, [r7, #0]
   1c08a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1c08e:	bne.n	1c05e <btrfs_bin_search@@Base+0x52>
   1c090:	b.n	1c088 <btrfs_bin_search@@Base+0x7c>

0001c092 <read_node_slot@@Base>:
   1c092:	push	{r4, r5, r6, r7, lr}
   1c094:	subs	r6, r2, #0
   1c096:	sub	sp, #20
   1c098:	mov	r5, r1
   1c09a:	blt.n	1c100 <read_node_slot@@Base+0x6e>
   1c09c:	ldr.w	r3, [r1, #192]	; 0xc0
   1c0a0:	cmp	r6, r3
   1c0a2:	bcs.n	1c100 <read_node_slot@@Base+0x6e>
   1c0a4:	ldrb.w	r7, [r1, #196]	; 0xc4
   1c0a8:	cbz	r7, 1c100 <read_node_slot@@Base+0x6e>
   1c0aa:	add.w	r3, r6, r6, lsl #5
   1c0ae:	add	r3, r1
   1c0b0:	adds	r3, #197	; 0xc5
   1c0b2:	mov	r1, r3
   1c0b4:	ldr.w	r4, [r3, #25]!
   1c0b8:	ldr.w	r2, [r1, #17]!
   1c0bc:	ldr	r3, [r3, #4]
   1c0be:	strd	r4, r3, [sp]
   1c0c2:	ldr	r3, [r1, #4]
   1c0c4:	bl	20b0c <read_tree_block@@Base>
   1c0c8:	mov	r4, r0
   1c0ca:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1c0ce:	cbz	r0, 1c0fa <read_node_slot@@Base+0x68>
   1c0d0:	ldrb.w	r3, [r4, #196]	; 0xc4
   1c0d4:	subs	r7, #1
   1c0d6:	cmp	r3, r7
   1c0d8:	beq.n	1c102 <read_node_slot@@Base+0x70>
   1c0da:	str	r3, [sp, #8]
   1c0dc:	ldrb.w	r3, [r5, #196]	; 0xc4
   1c0e0:	ldr	r0, [pc, #36]	; (1c108 <read_node_slot@@Base+0x76>)
   1c0e2:	ldr.w	r2, [r5, #144]	; 0x90
   1c0e6:	add	r0, pc
   1c0e8:	strd	r6, r3, [sp]
   1c0ec:	ldr.w	r3, [r5, #148]	; 0x94
   1c0f0:	bl	1a900 <__btrfs_error@@Base>
   1c0f4:	mov	r0, r4
   1c0f6:	bl	1a0a4 <free_extent_buffer@@Base>
   1c0fa:	mvn.w	r4, #4
   1c0fe:	b.n	1c102 <read_node_slot@@Base+0x70>
   1c100:	movs	r4, #0
   1c102:	mov	r0, r4
   1c104:	add	sp, #20
   1c106:	pop	{r4, r5, r6, r7, pc}
   1c108:	ldr	r1, [pc, #852]	; (1c460 <btrfs_set_item_key_unsafe@@Base+0x74>)
   1c10a:	movs	r2, r0

0001c10c <reada_for_search@@Base>:
   1c10c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c110:	sub	sp, #92	; 0x5c
   1c112:	ldr	r4, [pc, #452]	; (1c2d8 <reada_for_search@@Base+0x1cc>)
   1c114:	cmp	r2, #1
   1c116:	str	r1, [sp, #32]
   1c118:	mov	r9, r0
   1c11a:	ldr	r1, [pc, #448]	; (1c2dc <reada_for_search@@Base+0x1d0>)
   1c11c:	add	r4, pc
   1c11e:	ldr	r1, [r4, r1]
   1c120:	ldr	r1, [r1, #0]
   1c122:	str	r1, [sp, #84]	; 0x54
   1c124:	mov.w	r1, #0
   1c128:	bne.n	1c166 <reada_for_search@@Base+0x5a>
   1c12a:	ldr	r2, [sp, #32]
   1c12c:	ldr	r2, [r2, #4]
   1c12e:	str	r2, [sp, #24]
   1c130:	cbz	r2, 1c166 <reada_for_search@@Base+0x5a>
   1c132:	ldr	r2, [sp, #32]
   1c134:	mov	r6, r3
   1c136:	ldr	r3, [sp, #24]
   1c138:	ldrsb.w	r2, [r2, #64]	; 0x40
   1c13c:	adds	r3, #96	; 0x60
   1c13e:	str	r3, [sp, #36]	; 0x24
   1c140:	add.w	r3, r6, r6, lsl #5
   1c144:	str	r2, [sp, #56]	; 0x38
   1c146:	ldr	r2, [sp, #36]	; 0x24
   1c148:	add	r3, r2
   1c14a:	ldr.w	sl, [r3, #118]!
   1c14e:	ldr.w	fp, [r3, #4]
   1c152:	mov	r2, sl
   1c154:	ldr.w	r3, [r0, #384]	; 0x180
   1c158:	str	r3, [sp, #0]
   1c15a:	mov	r3, fp
   1c15c:	bl	1f6b0 <btrfs_find_tree_block@@Base>
   1c160:	cbz	r0, 1c17c <reada_for_search@@Base+0x70>
   1c162:	bl	1a0a4 <free_extent_buffer@@Base>
   1c166:	ldr	r2, [pc, #376]	; (1c2e0 <reada_for_search@@Base+0x1d4>)
   1c168:	ldr	r3, [pc, #368]	; (1c2dc <reada_for_search@@Base+0x1d0>)
   1c16a:	add	r2, pc
   1c16c:	ldr	r3, [r2, r3]
   1c16e:	ldr	r2, [r3, #0]
   1c170:	ldr	r3, [sp, #84]	; 0x54
   1c172:	eors	r2, r3
   1c174:	beq.w	1c2d2 <reada_for_search@@Base+0x1c6>
   1c178:	blx	88e4 <__stack_chk_fail@plt>
   1c17c:	ldr	r3, [sp, #24]
   1c17e:	movs	r4, #0
   1c180:	ldr.w	r3, [r3, #192]	; 0xc0
   1c184:	strd	sl, fp, [sp, #8]
   1c188:	str	r0, [sp, #28]
   1c18a:	str	r3, [sp, #60]	; 0x3c
   1c18c:	movs	r3, #0
   1c18e:	strd	r3, r4, [sp, #16]
   1c192:	ldr	r3, [sp, #56]	; 0x38
   1c194:	cmp	r3, #0
   1c196:	bge.n	1c232 <reada_for_search@@Base+0x126>
   1c198:	cmp	r6, #0
   1c19a:	beq.n	1c166 <reada_for_search@@Base+0x5a>
   1c19c:	subs	r6, #1
   1c19e:	ldr	r3, [sp, #32]
   1c1a0:	ldrsb.w	r3, [r3, #64]	; 0x40
   1c1a4:	cmp	r3, #0
   1c1a6:	blt.n	1c23e <reada_for_search@@Base+0x132>
   1c1a8:	ldr	r2, [sp, #36]	; 0x24
   1c1aa:	add.w	r3, r6, r6, lsl #5
   1c1ae:	adds	r3, #101	; 0x65
   1c1b0:	add	r3, r2
   1c1b2:	mov	r2, r3
   1c1b4:	ldr.w	r4, [r2, #17]!
   1c1b8:	ldr	r5, [r2, #4]
   1c1ba:	cmp	r5, fp
   1c1bc:	it	eq
   1c1be:	cmpeq	r4, sl
   1c1c0:	bcs.n	1c262 <reada_for_search@@Base+0x156>
   1c1c2:	subs.w	r2, sl, r4
   1c1c6:	str	r2, [sp, #40]	; 0x28
   1c1c8:	sbc.w	r2, fp, r5
   1c1cc:	str	r2, [sp, #44]	; 0x2c
   1c1ce:	ldrd	r7, r8, [sp, #40]	; 0x28
   1c1d2:	movs	r2, #0
   1c1d4:	mov.w	r1, #32768	; 0x8000
   1c1d8:	cmp	r2, r8
   1c1da:	it	eq
   1c1dc:	cmpeq	r1, r7
   1c1de:	bcs.n	1c28e <reada_for_search@@Base+0x182>
   1c1e0:	ldrd	r1, r2, [sp, #8]
   1c1e4:	cmp	r2, r5
   1c1e6:	it	eq
   1c1e8:	cmpeq	r1, r4
   1c1ea:	bcc.n	1c26e <reada_for_search@@Base+0x162>
   1c1ec:	ldr	r3, [sp, #28]
   1c1ee:	adds	r3, #1
   1c1f0:	str	r3, [sp, #28]
   1c1f2:	ldr	r3, [sp, #32]
   1c1f4:	ldrsb.w	r3, [r3, #64]	; 0x40
   1c1f8:	cmp	r3, #1
   1c1fa:	bgt.n	1c2b6 <reada_for_search@@Base+0x1aa>
   1c1fc:	ldrd	r0, r1, [sp, #16]
   1c200:	movs	r3, #0
   1c202:	mov.w	r2, #262144	; 0x40000
   1c206:	cmp	r3, r1
   1c208:	it	eq
   1c20a:	cmpeq	r2, r0
   1c20c:	bcc.n	1c166 <reada_for_search@@Base+0x5a>
   1c20e:	ldr	r3, [sp, #28]
   1c210:	cmp	r3, #32
   1c212:	bhi.n	1c166 <reada_for_search@@Base+0x5a>
   1c214:	cmp	r5, fp
   1c216:	ldrd	r2, r3, [sp, #8]
   1c21a:	it	eq
   1c21c:	cmpeq	r4, sl
   1c21e:	itt	cc
   1c220:	movcc	sl, r4
   1c222:	movcc	fp, r5
   1c224:	cmp	r3, r5
   1c226:	it	eq
   1c228:	cmpeq	r2, r4
   1c22a:	bcs.n	1c192 <reada_for_search@@Base+0x86>
   1c22c:	strd	r4, r5, [sp, #8]
   1c230:	b.n	1c192 <reada_for_search@@Base+0x86>
   1c232:	beq.n	1c19e <reada_for_search@@Base+0x92>
   1c234:	ldr	r3, [sp, #60]	; 0x3c
   1c236:	adds	r6, #1
   1c238:	cmp	r6, r3
   1c23a:	bcc.n	1c19e <reada_for_search@@Base+0x92>
   1c23c:	b.n	1c166 <reada_for_search@@Base+0x5a>
   1c23e:	ldrd	r3, r4, [sp, #128]	; 0x80
   1c242:	orrs	r3, r4
   1c244:	beq.n	1c1a8 <reada_for_search@@Base+0x9c>
   1c246:	ldr	r0, [sp, #24]
   1c248:	add	r1, sp, #64	; 0x40
   1c24a:	mov	r2, r6
   1c24c:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1c250:	ldrd	r2, r3, [sp, #64]	; 0x40
   1c254:	ldrd	r0, r1, [sp, #128]	; 0x80
   1c258:	cmp	r1, r3
   1c25a:	it	eq
   1c25c:	cmpeq	r0, r2
   1c25e:	beq.n	1c1a8 <reada_for_search@@Base+0x9c>
   1c260:	b.n	1c166 <reada_for_search@@Base+0x5a>
   1c262:	ldrd	r1, r2, [sp, #8]
   1c266:	cmp	r2, r5
   1c268:	it	eq
   1c26a:	cmpeq	r1, r4
   1c26c:	bcs.n	1c28e <reada_for_search@@Base+0x182>
   1c26e:	ldr	r2, [sp, #8]
   1c270:	mov.w	r1, #32768	; 0x8000
   1c274:	subs	r2, r4, r2
   1c276:	str	r2, [sp, #48]	; 0x30
   1c278:	ldr	r2, [sp, #12]
   1c27a:	sbc.w	r2, r5, r2
   1c27e:	str	r2, [sp, #52]	; 0x34
   1c280:	ldrd	r7, r8, [sp, #48]	; 0x30
   1c284:	movs	r2, #0
   1c286:	cmp	r2, r8
   1c288:	it	eq
   1c28a:	cmpeq	r1, r7
   1c28c:	bcc.n	1c1ec <reada_for_search@@Base+0xe0>
   1c28e:	ldr.w	r2, [r3, #25]!
   1c292:	mov	r0, r9
   1c294:	ldr	r3, [r3, #4]
   1c296:	strd	r2, r3, [sp]
   1c29a:	mov	r2, r4
   1c29c:	mov	r3, r5
   1c29e:	bl	209bc <readahead_tree_block@@Base>
   1c2a2:	ldrd	r1, r2, [sp, #16]
   1c2a6:	ldr.w	r3, [r9, #384]	; 0x180
   1c2aa:	adds	r1, r1, r3
   1c2ac:	adc.w	r2, r2, #0
   1c2b0:	strd	r1, r2, [sp, #16]
   1c2b4:	b.n	1c1ec <reada_for_search@@Base+0xe0>
   1c2b6:	ldrd	r0, r1, [sp, #16]
   1c2ba:	movs	r3, #0
   1c2bc:	mov.w	r2, #1048576	; 0x100000
   1c2c0:	cmp	r3, r1
   1c2c2:	it	eq
   1c2c4:	cmpeq	r2, r0
   1c2c6:	bcc.w	1c166 <reada_for_search@@Base+0x5a>
   1c2ca:	ldr	r3, [sp, #28]
   1c2cc:	cmp	r3, #129	; 0x81
   1c2ce:	bne.n	1c214 <reada_for_search@@Base+0x108>
   1c2d0:	b.n	1c166 <reada_for_search@@Base+0x5a>
   1c2d2:	add	sp, #92	; 0x5c
   1c2d4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2d8:	ldmia	r4, {r2, r4}
   1c2da:	movs	r4, r0
   1c2dc:	lsls	r4, r7, #9
   1c2de:	movs	r0, r0
   1c2e0:	ldmia	r3!, {r1, r2, r6, r7}
   1c2e2:	movs	r4, r0

0001c2e4 <btrfs_fixup_low_keys@@Base>:
   1c2e4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c2e8:	add.w	r4, r1, r3, lsl #2
   1c2ec:	mov	r6, r2
   1c2ee:	mov	r5, r3
   1c2f0:	cmp	r5, #7
   1c2f2:	ble.n	1c2f8 <btrfs_fixup_low_keys@@Base+0x14>
   1c2f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c2f8:	ldr	r0, [r4, #0]
   1c2fa:	mov	r8, r4
   1c2fc:	ldr	r7, [r4, #32]
   1c2fe:	cmp	r0, #0
   1c300:	beq.n	1c2f4 <btrfs_fixup_low_keys@@Base+0x10>
   1c302:	mov	r2, r7
   1c304:	mov	r1, r6
   1c306:	bl	1adb2 <rb_free_nodes@@Base+0x30>
   1c30a:	ldr.w	r0, [r8]
   1c30e:	adds	r4, #4
   1c310:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1c314:	cmp	r7, #0
   1c316:	bne.n	1c2f4 <btrfs_fixup_low_keys@@Base+0x10>
   1c318:	adds	r5, #1
   1c31a:	b.n	1c2f0 <btrfs_fixup_low_keys@@Base+0xc>

0001c31c <btrfs_set_item_key_safe@@Base>:
   1c31c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1c320:	mov	r5, r2
   1c322:	ldr	r2, [pc, #188]	; (1c3e0 <btrfs_set_item_key_safe@@Base+0xc4>)
   1c324:	sub	sp, #28
   1c326:	ldr	r3, [pc, #188]	; (1c3e4 <btrfs_set_item_key_safe@@Base+0xc8>)
   1c328:	mov	r9, r0
   1c32a:	add	r2, pc
   1c32c:	ldr	r4, [r1, #32]
   1c32e:	ldr.w	r8, [r1]
   1c332:	mov	r7, r1
   1c334:	ldr	r3, [r2, r3]
   1c336:	cmp	r4, #0
   1c338:	mov	r6, sp
   1c33a:	ldr	r3, [r3, #0]
   1c33c:	str	r3, [sp, #20]
   1c33e:	mov.w	r3, #0
   1c342:	bgt.n	1c382 <btrfs_set_item_key_safe@@Base+0x66>
   1c344:	ldr.w	r3, [r8, #192]	; 0xc0
   1c348:	subs	r3, #1
   1c34a:	cmp	r3, r4
   1c34c:	bhi.n	1c3b0 <btrfs_set_item_key_safe@@Base+0x94>
   1c34e:	ldr.w	r3, [r5, #13]
   1c352:	mov	r0, r8
   1c354:	ldr.w	r2, [r5, #9]
   1c358:	mov	r1, r6
   1c35a:	str.w	r3, [sp, #13]
   1c35e:	ldrb	r3, [r5, #8]
   1c360:	str.w	r2, [sp, #9]
   1c364:	ldr	r2, [r5, #0]
   1c366:	strb.w	r3, [sp, #8]
   1c36a:	ldr	r3, [r5, #4]
   1c36c:	strd	r2, r3, [sp]
   1c370:	mov	r2, r4
   1c372:	bl	1adbe <rb_free_nodes@@Base+0x3c>
   1c376:	mov	r0, r8
   1c378:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1c37c:	cbz	r4, 1c3c8 <btrfs_set_item_key_safe@@Base+0xac>
   1c37e:	movs	r4, #0
   1c380:	b.n	1c39c <btrfs_set_item_key_safe@@Base+0x80>
   1c382:	subs	r2, r4, #1
   1c384:	mov	r1, r6
   1c386:	mov	r0, r8
   1c388:	bl	1adca <rb_free_nodes@@Base+0x48>
   1c38c:	mov	r1, r5
   1c38e:	mov	r0, r6
   1c390:	bl	1be46 <btrfs_comp_cpu_keys@@Base+0x56>
   1c394:	cmp	r0, #0
   1c396:	blt.n	1c344 <btrfs_set_item_key_safe@@Base+0x28>
   1c398:	mov.w	r4, #4294967295	; 0xffffffff
   1c39c:	ldr	r2, [pc, #72]	; (1c3e8 <btrfs_set_item_key_safe@@Base+0xcc>)
   1c39e:	ldr	r3, [pc, #68]	; (1c3e4 <btrfs_set_item_key_safe@@Base+0xc8>)
   1c3a0:	add	r2, pc
   1c3a2:	ldr	r3, [r2, r3]
   1c3a4:	ldr	r2, [r3, #0]
   1c3a6:	ldr	r3, [sp, #20]
   1c3a8:	eors	r2, r3
   1c3aa:	beq.n	1c3d6 <btrfs_set_item_key_safe@@Base+0xba>
   1c3ac:	blx	88e4 <__stack_chk_fail@plt>
   1c3b0:	adds	r2, r4, #1
   1c3b2:	mov	r1, r6
   1c3b4:	mov	r0, r8
   1c3b6:	bl	1adca <rb_free_nodes@@Base+0x48>
   1c3ba:	mov	r1, r5
   1c3bc:	mov	r0, r6
   1c3be:	bl	1be46 <btrfs_comp_cpu_keys@@Base+0x56>
   1c3c2:	cmp	r0, #0
   1c3c4:	bgt.n	1c34e <btrfs_set_item_key_safe@@Base+0x32>
   1c3c6:	b.n	1c398 <btrfs_set_item_key_safe@@Base+0x7c>
   1c3c8:	movs	r3, #1
   1c3ca:	mov	r2, r6
   1c3cc:	mov	r1, r7
   1c3ce:	mov	r0, r9
   1c3d0:	bl	1c2e4 <btrfs_fixup_low_keys@@Base>
   1c3d4:	b.n	1c39c <btrfs_set_item_key_safe@@Base+0x80>
   1c3d6:	mov	r0, r4
   1c3d8:	add	sp, #28
   1c3da:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1c3de:	nop
   1c3e0:	ldmia	r2, {r1, r2}
   1c3e2:	movs	r4, r0
   1c3e4:	lsls	r4, r7, #9
   1c3e6:	movs	r0, r0
   1c3e8:	ldmia	r1!, {r4, r7}
   1c3ea:	movs	r4, r0

0001c3ec <btrfs_set_item_key_unsafe@@Base>:
   1c3ec:	push	{r4, r5, r6, r7, lr}
   1c3ee:	mov	r4, r1
   1c3f0:	ldr	r1, [pc, #108]	; (1c460 <btrfs_set_item_key_unsafe@@Base+0x74>)
   1c3f2:	sub	sp, #36	; 0x24
   1c3f4:	ldr	r3, [pc, #108]	; (1c464 <btrfs_set_item_key_unsafe@@Base+0x78>)
   1c3f6:	add	r6, sp, #8
   1c3f8:	add	r1, pc
   1c3fa:	ldr	r7, [r4, #32]
   1c3fc:	mov	r5, r0
   1c3fe:	ldr	r0, [r4, #0]
   1c400:	ldr	r3, [r1, r3]
   1c402:	ldr	r3, [r3, #0]
   1c404:	str	r3, [sp, #28]
   1c406:	mov.w	r3, #0
   1c40a:	ldr.w	r3, [r2, #13]
   1c40e:	ldr.w	r1, [r2, #9]
   1c412:	str	r0, [sp, #4]
   1c414:	str.w	r3, [sp, #21]
   1c418:	ldrb	r3, [r2, #8]
   1c41a:	str.w	r1, [sp, #17]
   1c41e:	ldr	r1, [r2, #0]
   1c420:	strb.w	r3, [sp, #16]
   1c424:	ldr	r3, [r2, #4]
   1c426:	mov	r2, r7
   1c428:	strd	r1, r3, [sp, #8]
   1c42c:	mov	r1, r6
   1c42e:	bl	1adbe <rb_free_nodes@@Base+0x3c>
   1c432:	ldr	r0, [sp, #4]
   1c434:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1c438:	cbnz	r7, 1c446 <btrfs_set_item_key_unsafe@@Base+0x5a>
   1c43a:	movs	r3, #1
   1c43c:	mov	r2, r6
   1c43e:	mov	r1, r4
   1c440:	mov	r0, r5
   1c442:	bl	1c2e4 <btrfs_fixup_low_keys@@Base>
   1c446:	ldr	r2, [pc, #32]	; (1c468 <btrfs_set_item_key_unsafe@@Base+0x7c>)
   1c448:	ldr	r3, [pc, #24]	; (1c464 <btrfs_set_item_key_unsafe@@Base+0x78>)
   1c44a:	add	r2, pc
   1c44c:	ldr	r3, [r2, r3]
   1c44e:	ldr	r2, [r3, #0]
   1c450:	ldr	r3, [sp, #28]
   1c452:	eors	r2, r3
   1c454:	beq.n	1c45a <btrfs_set_item_key_unsafe@@Base+0x6e>
   1c456:	blx	88e4 <__stack_chk_fail@plt>
   1c45a:	add	sp, #36	; 0x24
   1c45c:	pop	{r4, r5, r6, r7, pc}
   1c45e:	nop
   1c460:	ldmia	r1!, {r3, r4, r5}
   1c462:	movs	r4, r0
   1c464:	lsls	r4, r7, #9
   1c466:	movs	r0, r0
   1c468:	ldmia	r0!, {r1, r2, r5, r6, r7}
   1c46a:	movs	r4, r0

0001c46c <btrfs_leaf_free_space@@Base>:
   1c46c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1c470:	mov	r4, r0
   1c472:	ldr	r3, [r0, #92]	; 0x5c
   1c474:	ldr	r7, [pc, #104]	; (1c4e0 <btrfs_leaf_free_space@@Base+0x74>)
   1c476:	ldr.w	r6, [r0, #192]	; 0xc0
   1c47a:	add	r7, pc
   1c47c:	cbz	r3, 1c48a <btrfs_leaf_free_space@@Base+0x1e>
   1c47e:	ldr.w	r3, [r3, #384]	; 0x180
   1c482:	ldr	r2, [r0, #76]	; 0x4c
   1c484:	subs	r3, r3, r2
   1c486:	it	ne
   1c488:	movne	r3, #1
   1c48a:	ldr	r1, [pc, #88]	; (1c4e4 <btrfs_leaf_free_space@@Base+0x78>)
   1c48c:	movw	r2, #1767	; 0x6e7
   1c490:	ldr	r0, [pc, #84]	; (1c4e8 <btrfs_leaf_free_space@@Base+0x7c>)
   1c492:	add	r1, pc
   1c494:	adds	r1, #211	; 0xd3
   1c496:	add	r0, pc
   1c498:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1c49c:	ldr	r3, [r4, #76]	; 0x4c
   1c49e:	mov	r2, r6
   1c4a0:	movs	r1, #0
   1c4a2:	mov	r0, r4
   1c4a4:	sub.w	r8, r3, #101	; 0x65
   1c4a8:	bl	1b1e4 <rb_free_nodes@@Base+0x462>
   1c4ac:	subs.w	r5, r8, r0
   1c4b0:	bpl.n	1c4d8 <btrfs_leaf_free_space@@Base+0x6c>
   1c4b2:	ldr	r3, [pc, #56]	; (1c4ec <btrfs_leaf_free_space@@Base+0x80>)
   1c4b4:	mov	r2, r6
   1c4b6:	movs	r1, #0
   1c4b8:	mov	r0, r4
   1c4ba:	ldr	r3, [r7, r3]
   1c4bc:	ldr	r7, [r3, #0]
   1c4be:	bl	1b1e4 <rb_free_nodes@@Base+0x462>
   1c4c2:	ldr	r2, [pc, #44]	; (1c4f0 <btrfs_leaf_free_space@@Base+0x84>)
   1c4c4:	mov	r3, r5
   1c4c6:	movs	r1, #1
   1c4c8:	str.w	r8, [sp]
   1c4cc:	add	r2, pc
   1c4ce:	strd	r0, r6, [sp, #4]
   1c4d2:	mov	r0, r7
   1c4d4:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1c4d8:	mov	r0, r5
   1c4da:	add	sp, #16
   1c4dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c4e0:	ldmia	r0!, {r1, r2, r4, r5, r7}
   1c4e2:	movs	r4, r0
   1c4e4:	ldr	r2, [pc, #936]	; (1c890 <btrfs_check_leaf@@Base+0x39c>)
   1c4e6:	movs	r2, r0
   1c4e8:	mov	r3, lr
   1c4ea:	movs	r2, r0
   1c4ec:	lsls	r4, r1, #10
   1c4ee:	movs	r0, r0
   1c4f0:	mov	r3, lr
   1c4f2:	movs	r2, r0

0001c4f4 <btrfs_check_leaf@@Base>:
   1c4f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4f8:	mov	r4, r2
   1c4fa:	ldr	r2, [pc, #640]	; (1c77c <btrfs_check_leaf@@Base+0x288>)
   1c4fc:	sub	sp, #84	; 0x54
   1c4fe:	ldr	r3, [pc, #640]	; (1c780 <btrfs_check_leaf@@Base+0x28c>)
   1c500:	mov	r8, r0
   1c502:	add	r2, pc
   1c504:	ldr.w	sl, [r4, #192]	; 0xc0
   1c508:	ldr	r7, [pc, #632]	; (1c784 <btrfs_check_leaf@@Base+0x290>)
   1c50a:	mov	r6, r1
   1c50c:	ldr	r3, [r2, r3]
   1c50e:	ldr	r2, [r4, #76]	; 0x4c
   1c510:	add	r7, pc
   1c512:	ldr	r3, [r3, #0]
   1c514:	str	r3, [sp, #76]	; 0x4c
   1c516:	mov.w	r3, #0
   1c51a:	movs	r3, #25
   1c51c:	mul.w	r3, r3, sl
   1c520:	cmp	r3, r2
   1c522:	bls.n	1c58a <btrfs_check_leaf@@Base+0x96>
   1c524:	ldr	r3, [pc, #608]	; (1c788 <btrfs_check_leaf@@Base+0x294>)
   1c526:	movs	r1, #1
   1c528:	movs	r5, #1
   1c52a:	ldr	r0, [r7, r3]
   1c52c:	ldrd	r2, r3, [r4, #40]	; 0x28
   1c530:	strd	r2, r3, [sp]
   1c534:	ldr	r2, [pc, #596]	; (1c78c <btrfs_check_leaf@@Base+0x298>)
   1c536:	ldr	r0, [r0, #0]
   1c538:	add	r2, pc
   1c53a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1c53e:	ldr.w	r3, [r4, #188]	; 0xbc
   1c542:	ldr.w	r2, [r4, #184]	; 0xb8
   1c546:	cmp	r3, #0
   1c548:	it	eq
   1c54a:	cmpeq	r2, #2
   1c54c:	bne.n	1c5ec <btrfs_check_leaf@@Base+0xf8>
   1c54e:	add	r1, sp, #36	; 0x24
   1c550:	cmp	r6, #0
   1c552:	beq.w	1c766 <btrfs_check_leaf@@Base+0x272>
   1c556:	ldr.w	r3, [r6, #13]
   1c55a:	ldr.w	r2, [r6, #9]
   1c55e:	str.w	r3, [sp, #49]	; 0x31
   1c562:	ldrb	r3, [r6, #8]
   1c564:	str.w	r2, [sp, #45]	; 0x2d
   1c568:	ldr	r2, [r6, #0]
   1c56a:	strb.w	r3, [sp, #44]	; 0x2c
   1c56e:	ldr	r3, [r6, #4]
   1c570:	strd	r2, r3, [sp, #36]	; 0x24
   1c574:	ldr	r2, [r4, #76]	; 0x4c
   1c576:	movs	r3, #0
   1c578:	mov	r0, r8
   1c57a:	str	r3, [sp, #8]
   1c57c:	strd	r2, r3, [sp]
   1c580:	ldrd	r2, r3, [r4, #40]	; 0x28
   1c584:	bl	30a70 <btrfs_add_corrupt_extent_record@@Base>
   1c588:	b.n	1c5ec <btrfs_check_leaf@@Base+0xf8>
   1c58a:	ldrb.w	r5, [r4, #196]	; 0xc4
   1c58e:	cbz	r5, 1c5b0 <btrfs_check_leaf@@Base+0xbc>
   1c590:	ldr	r3, [pc, #500]	; (1c788 <btrfs_check_leaf@@Base+0x294>)
   1c592:	movs	r5, #4
   1c594:	ldr.w	r1, [r4, #144]	; 0x90
   1c598:	ldr.w	r2, [r4, #148]	; 0x94
   1c59c:	ldr	r3, [r7, r3]
   1c59e:	strd	r1, r2, [sp]
   1c5a2:	movs	r1, #1
   1c5a4:	ldr	r2, [pc, #488]	; (1c790 <btrfs_check_leaf@@Base+0x29c>)
   1c5a6:	ldr	r0, [r3, #0]
   1c5a8:	add	r2, pc
   1c5aa:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1c5ae:	b.n	1c53e <btrfs_check_leaf@@Base+0x4a>
   1c5b0:	mov	r0, r4
   1c5b2:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1c5b6:	cmp	r0, #0
   1c5b8:	bge.n	1c5e4 <btrfs_check_leaf@@Base+0xf0>
   1c5ba:	ldr	r3, [pc, #460]	; (1c788 <btrfs_check_leaf@@Base+0x294>)
   1c5bc:	mov	r0, r4
   1c5be:	ldr.w	r9, [r4, #144]	; 0x90
   1c5c2:	ldr	r3, [r7, r3]
   1c5c4:	ldr.w	r7, [r4, #148]	; 0x94
   1c5c8:	ldr	r5, [r3, #0]
   1c5ca:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1c5ce:	ldr	r2, [pc, #452]	; (1c794 <btrfs_check_leaf@@Base+0x2a0>)
   1c5d0:	movs	r1, #1
   1c5d2:	strd	r9, r7, [sp]
   1c5d6:	add	r2, pc
   1c5d8:	str	r0, [sp, #8]
   1c5da:	mov	r0, r5
   1c5dc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1c5e0:	movs	r5, #5
   1c5e2:	b.n	1c53e <btrfs_check_leaf@@Base+0x4a>
   1c5e4:	cmp.w	sl, #0
   1c5e8:	bne.n	1c602 <btrfs_check_leaf@@Base+0x10e>
   1c5ea:	movs	r5, #0
   1c5ec:	ldr	r2, [pc, #424]	; (1c798 <btrfs_check_leaf@@Base+0x2a4>)
   1c5ee:	ldr	r3, [pc, #400]	; (1c780 <btrfs_check_leaf@@Base+0x28c>)
   1c5f0:	add	r2, pc
   1c5f2:	ldr	r3, [r2, r3]
   1c5f4:	ldr	r2, [r3, #0]
   1c5f6:	ldr	r3, [sp, #76]	; 0x4c
   1c5f8:	eors	r2, r3
   1c5fa:	beq.w	1c774 <btrfs_check_leaf@@Base+0x280>
   1c5fe:	blx	88e4 <__stack_chk_fail@plt>
   1c602:	add.w	r9, sp, #56	; 0x38
   1c606:	mov	r2, r5
   1c608:	mov	r0, r4
   1c60a:	mov	r1, r9
   1c60c:	bl	1adca <rb_free_nodes@@Base+0x48>
   1c610:	cmp	r6, #0
   1c612:	beq.w	1c750 <btrfs_check_leaf@@Base+0x25c>
   1c616:	ldrb	r5, [r6, #8]
   1c618:	cmp	r5, #0
   1c61a:	beq.w	1c752 <btrfs_check_leaf@@Base+0x25e>
   1c61e:	movs	r2, #17
   1c620:	mov	r1, r9
   1c622:	mov	r0, r6
   1c624:	blx	887c <memcmp@plt+0x4>
   1c628:	mov	r5, r0
   1c62a:	cmp	r0, #0
   1c62c:	beq.w	1c752 <btrfs_check_leaf@@Base+0x25e>
   1c630:	ldr	r3, [pc, #340]	; (1c788 <btrfs_check_leaf@@Base+0x294>)
   1c632:	movs	r5, #2
   1c634:	ldr.w	r1, [r4, #144]	; 0x90
   1c638:	ldr.w	r2, [r4, #148]	; 0x94
   1c63c:	ldr	r3, [r7, r3]
   1c63e:	strd	r1, r2, [sp]
   1c642:	movs	r1, #1
   1c644:	ldr	r2, [pc, #340]	; (1c79c <btrfs_check_leaf@@Base+0x2a8>)
   1c646:	ldr	r0, [r3, #0]
   1c648:	add	r2, pc
   1c64a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1c64e:	b.n	1c53e <btrfs_check_leaf@@Base+0x4a>
   1c650:	mov	r2, r5
   1c652:	mov	r1, r9
   1c654:	mov	r0, r4
   1c656:	bl	1adca <rb_free_nodes@@Base+0x48>
   1c65a:	adds	r2, r5, #1
   1c65c:	mov	r1, fp
   1c65e:	mov	r0, r4
   1c660:	str	r2, [sp, #24]
   1c662:	bl	1b234 <rb_free_nodes@@Base+0x4b2>
   1c666:	mov	r1, fp
   1c668:	mov	r0, r9
   1c66a:	bl	1be46 <btrfs_comp_cpu_keys@@Base+0x56>
   1c66e:	ldr	r2, [sp, #24]
   1c670:	cmp	r0, #0
   1c672:	blt.n	1c68c <btrfs_check_leaf@@Base+0x198>
   1c674:	ldr	r3, [pc, #272]	; (1c788 <btrfs_check_leaf@@Base+0x294>)
   1c676:	movs	r1, #1
   1c678:	ldr	r0, [r7, r3]
   1c67a:	mov	r3, r5
   1c67c:	str	r2, [sp, #0]
   1c67e:	movs	r5, #3
   1c680:	ldr	r2, [pc, #284]	; (1c7a0 <btrfs_check_leaf@@Base+0x2ac>)
   1c682:	ldr	r0, [r0, #0]
   1c684:	add	r2, pc
   1c686:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1c68a:	b.n	1c53e <btrfs_check_leaf@@Base+0x4a>
   1c68c:	movs	r3, #25
   1c68e:	mov	r1, r2
   1c690:	mla	r3, r3, r5, r4
   1c694:	mov	r0, r4
   1c696:	str	r2, [sp, #24]
   1c698:	ldr.w	r3, [r3, #214]	; 0xd6
   1c69c:	str	r3, [sp, #28]
   1c69e:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1c6a2:	ldr	r3, [sp, #28]
   1c6a4:	ldr	r2, [sp, #24]
   1c6a6:	cmp	r0, r3
   1c6a8:	beq.n	1c6c0 <btrfs_check_leaf@@Base+0x1cc>
   1c6aa:	ldr	r2, [pc, #220]	; (1c788 <btrfs_check_leaf@@Base+0x294>)
   1c6ac:	movs	r1, #1
   1c6ae:	ldr	r5, [r7, r2]
   1c6b0:	ldr	r2, [pc, #240]	; (1c7a4 <btrfs_check_leaf@@Base+0x2b0>)
   1c6b2:	str	r0, [sp, #0]
   1c6b4:	ldr	r0, [r5, #0]
   1c6b6:	add	r2, pc
   1c6b8:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1c6bc:	movs	r5, #6
   1c6be:	b.n	1c53e <btrfs_check_leaf@@Base+0x4a>
   1c6c0:	cbnz	r5, 1c6e8 <btrfs_check_leaf@@Base+0x1f4>
   1c6c2:	ldr.w	r2, [r4, #218]	; 0xda
   1c6c6:	ldr.w	r3, [r4, #214]	; 0xd6
   1c6ca:	add	r3, r2
   1c6cc:	ldr.w	r2, [r8, #384]	; 0x180
   1c6d0:	subs	r2, #101	; 0x65
   1c6d2:	cmp	r2, r3
   1c6d4:	beq.n	1c6e6 <btrfs_check_leaf@@Base+0x1f2>
   1c6d6:	ldr	r1, [pc, #176]	; (1c788 <btrfs_check_leaf@@Base+0x294>)
   1c6d8:	ldr	r0, [r7, r1]
   1c6da:	movs	r1, #1
   1c6dc:	str	r2, [sp, #0]
   1c6de:	ldr	r2, [pc, #200]	; (1c7a8 <btrfs_check_leaf@@Base+0x2b4>)
   1c6e0:	ldr	r0, [r0, #0]
   1c6e2:	add	r2, pc
   1c6e4:	b.n	1c6b8 <btrfs_check_leaf@@Base+0x1c4>
   1c6e6:	movs	r2, #1
   1c6e8:	mov	r5, r2
   1c6ea:	cmp.w	sl, #1
   1c6ee:	bls.n	1c6f6 <btrfs_check_leaf@@Base+0x202>
   1c6f0:	ldr	r3, [sp, #20]
   1c6f2:	cmp	r3, r5
   1c6f4:	bhi.n	1c650 <btrfs_check_leaf@@Base+0x15c>
   1c6f6:	movs	r5, #0
   1c6f8:	mov	r1, r5
   1c6fa:	mov	r0, r4
   1c6fc:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1c700:	ldr.w	r3, [r8, #384]	; 0x180
   1c704:	subs	r3, #101	; 0x65
   1c706:	cmp	r0, r3
   1c708:	bls.n	1c75e <btrfs_check_leaf@@Base+0x26a>
   1c70a:	movs	r2, #0
   1c70c:	mov	r1, r9
   1c70e:	mov	r0, r4
   1c710:	bl	1adca <rb_free_nodes@@Base+0x48>
   1c714:	mov	r0, r9
   1c716:	bl	280ac <btrfs_print_key@@Base>
   1c71a:	ldr	r3, [pc, #144]	; (1c7ac <btrfs_check_leaf@@Base+0x2b8>)
   1c71c:	ldr	r3, [r7, r3]
   1c71e:	ldr	r0, [r3, #0]
   1c720:	blx	87a0 <fflush@plt>
   1c724:	ldr	r3, [pc, #96]	; (1c788 <btrfs_check_leaf@@Base+0x294>)
   1c726:	mov	r1, r5
   1c728:	mov	r0, r4
   1c72a:	ldr	r3, [r7, r3]
   1c72c:	ldr	r7, [r3, #0]
   1c72e:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1c732:	ldr.w	r3, [r8, #384]	; 0x180
   1c736:	movs	r2, #0
   1c738:	movs	r1, #1
   1c73a:	subs	r3, #101	; 0x65
   1c73c:	strd	r3, r2, [sp, #8]
   1c740:	strd	r0, r2, [sp]
   1c744:	mov	r0, r7
   1c746:	ldr	r2, [pc, #104]	; (1c7b0 <btrfs_check_leaf@@Base+0x2bc>)
   1c748:	add	r2, pc
   1c74a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1c74e:	b.n	1c6bc <btrfs_check_leaf@@Base+0x1c8>
   1c750:	mov	r5, r6
   1c752:	add.w	r3, sl, #4294967295	; 0xffffffff
   1c756:	add.w	fp, sp, #36	; 0x24
   1c75a:	str	r3, [sp, #20]
   1c75c:	b.n	1c6ea <btrfs_check_leaf@@Base+0x1f6>
   1c75e:	adds	r5, #1
   1c760:	cmp	r5, sl
   1c762:	bne.n	1c6f8 <btrfs_check_leaf@@Base+0x204>
   1c764:	b.n	1c5ea <btrfs_check_leaf@@Base+0xf6>
   1c766:	mov	r2, r6
   1c768:	mov	r0, r4
   1c76a:	str	r1, [sp, #20]
   1c76c:	bl	1b234 <rb_free_nodes@@Base+0x4b2>
   1c770:	ldr	r1, [sp, #20]
   1c772:	b.n	1c574 <btrfs_check_leaf@@Base+0x80>
   1c774:	mov	r0, r5
   1c776:	add	sp, #84	; 0x54
   1c778:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c77c:	ldmia	r0!, {r1, r2, r3, r5}
   1c77e:	movs	r4, r0
   1c780:	lsls	r4, r7, #9
   1c782:	movs	r0, r0
   1c784:	ldmia	r0!, {r5}
   1c786:	movs	r4, r0
   1c788:	lsls	r4, r1, #10
   1c78a:	movs	r0, r0
   1c78c:	mov	r6, r8
   1c78e:	movs	r2, r0
   1c790:	cmp	ip, lr
   1c792:	movs	r2, r0
   1c794:	cmp	pc, fp
   1c796:	movs	r2, r0
   1c798:	stmia	r7!, {r6}
   1c79a:	movs	r4, r0
   1c79c:	cmp	r8, r2
   1c79e:	movs	r2, r0
   1c7a0:	cmp	r4, lr
   1c7a2:	movs	r2, r0
   1c7a4:	cmp	r2, fp
   1c7a6:	movs	r2, r0
   1c7a8:	cmp	r7, r8
   1c7aa:	movs	r2, r0
   1c7ac:	lsls	r0, r6, #10
   1c7ae:	movs	r0, r0
   1c7b0:	add	ip, pc
   1c7b2:	movs	r2, r0
   1c7b4:	push	{r4, r5, r6, r7, lr}
   1c7b6:	mov	r5, r2
   1c7b8:	ldr	r2, [pc, #100]	; (1c820 <btrfs_check_leaf@@Base+0x32c>)
   1c7ba:	sub	sp, #28
   1c7bc:	ldr	r3, [pc, #100]	; (1c824 <btrfs_check_leaf@@Base+0x330>)
   1c7be:	mov	r6, r0
   1c7c0:	add	r2, pc
   1c7c2:	mov	r4, r1
   1c7c4:	ldr	r3, [r2, r3]
   1c7c6:	ldr	r3, [r3, #0]
   1c7c8:	str	r3, [sp, #20]
   1c7ca:	mov.w	r3, #0
   1c7ce:	add.w	r3, r1, r5, lsl #2
   1c7d2:	ldr	r0, [r3, #4]
   1c7d4:	cbz	r0, 1c7e2 <btrfs_check_leaf@@Base+0x2ee>
   1c7d6:	mov	r7, sp
   1c7d8:	ldr	r2, [r3, #36]	; 0x24
   1c7da:	mov	r1, r7
   1c7dc:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1c7e0:	mov	r0, r7
   1c7e2:	cbnz	r5, 1c80c <btrfs_check_leaf@@Base+0x318>
   1c7e4:	mov	r1, r0
   1c7e6:	ldr	r2, [r4, #0]
   1c7e8:	mov	r0, r6
   1c7ea:	bl	1c4f4 <btrfs_check_leaf@@Base>
   1c7ee:	ldr	r2, [pc, #56]	; (1c828 <btrfs_check_leaf@@Base+0x334>)
   1c7f0:	cmp	r0, #0
   1c7f2:	ldr	r3, [pc, #48]	; (1c824 <btrfs_check_leaf@@Base+0x330>)
   1c7f4:	add	r2, pc
   1c7f6:	ite	ne
   1c7f8:	mvnne.w	r0, #4
   1c7fc:	moveq	r0, #0
   1c7fe:	ldr	r3, [r2, r3]
   1c800:	ldr	r2, [r3, #0]
   1c802:	ldr	r3, [sp, #20]
   1c804:	eors	r2, r3
   1c806:	beq.n	1c81a <btrfs_check_leaf@@Base+0x326>
   1c808:	blx	88e4 <__stack_chk_fail@plt>
   1c80c:	mov	r1, r0
   1c80e:	ldr.w	r2, [r4, r5, lsl #2]
   1c812:	mov	r0, r6
   1c814:	bl	1bea4 <btrfs_check_node@@Base>
   1c818:	b.n	1c7ee <btrfs_check_leaf@@Base+0x2fa>
   1c81a:	add	sp, #28
   1c81c:	pop	{r4, r5, r6, r7, pc}
   1c81e:	nop
   1c820:	stmia	r5!, {r4, r5, r6}
   1c822:	movs	r4, r0
   1c824:	lsls	r4, r7, #9
   1c826:	movs	r0, r0
   1c828:	stmia	r5!, {r2, r3, r4, r5}
   1c82a:	movs	r4, r0
   1c82c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c830:	mov	r5, r2
   1c832:	vpush	{d8}
   1c836:	mov	r7, r3
   1c838:	ldr	r2, [pc, #596]	; (1ca90 <btrfs_check_leaf@@Base+0x59c>)
   1c83a:	mov	r9, r0
   1c83c:	ldr	r3, [pc, #596]	; (1ca94 <btrfs_check_leaf@@Base+0x5a0>)
   1c83e:	add	r2, pc
   1c840:	ldr.w	r8, [r5, #4]
   1c844:	sub	sp, #68	; 0x44
   1c846:	str	r1, [sp, #16]
   1c848:	ldr	r3, [r2, r3]
   1c84a:	ldr	r3, [r3, #0]
   1c84c:	str	r3, [sp, #60]	; 0x3c
   1c84e:	mov.w	r3, #0
   1c852:	cmp.w	r8, #0
   1c856:	beq.n	1c8d0 <btrfs_check_leaf@@Base+0x3dc>
   1c858:	ldr.w	r3, [r8, #192]	; 0xc0
   1c85c:	ldr	r2, [r5, #36]	; 0x24
   1c85e:	subs	r3, #1
   1c860:	cmp	r3, r2
   1c862:	bls.n	1c8d0 <btrfs_check_leaf@@Base+0x3dc>
   1c864:	ldr.w	sl, [r1, #464]	; 0x1d0
   1c868:	adds	r3, r2, #1
   1c86a:	mov	r1, r8
   1c86c:	ldr	r6, [r5, #0]
   1c86e:	mov	r2, r3
   1c870:	vmov	s16, r3
   1c874:	mov	r0, sl
   1c876:	bl	1c092 <read_node_slot@@Base>
   1c87a:	mov	r4, r0
   1c87c:	str	r0, [sp, #36]	; 0x24
   1c87e:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1c882:	cbnz	r0, 1c8a4 <btrfs_check_leaf@@Base+0x3b0>
   1c884:	cmn.w	r4, #4096	; 0x1000
   1c888:	it	ls
   1c88a:	mvnls.w	r4, #4
   1c88e:	ldr	r2, [pc, #520]	; (1ca98 <btrfs_check_leaf@@Base+0x5a4>)
   1c890:	ldr	r3, [pc, #512]	; (1ca94 <btrfs_check_leaf@@Base+0x5a0>)
   1c892:	add	r2, pc
   1c894:	ldr	r3, [r2, r3]
   1c896:	ldr	r2, [r3, #0]
   1c898:	ldr	r3, [sp, #60]	; 0x3c
   1c89a:	eors	r2, r3
   1c89c:	beq.w	1ca84 <btrfs_check_leaf@@Base+0x590>
   1c8a0:	blx	88e4 <__stack_chk_fail@plt>
   1c8a4:	mov	r0, r4
   1c8a6:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1c8aa:	cmp	r0, r7
   1c8ac:	bge.n	1c8b2 <btrfs_check_leaf@@Base+0x3be>
   1c8ae:	ldr	r0, [sp, #36]	; 0x24
   1c8b0:	b.n	1c8cc <btrfs_check_leaf@@Base+0x3d8>
   1c8b2:	add	r3, sp, #36	; 0x24
   1c8b4:	vstr	s16, [sp]
   1c8b8:	str	r3, [sp, #4]
   1c8ba:	mov	r0, r9
   1c8bc:	ldr	r2, [sp, #36]	; 0x24
   1c8be:	mov	r3, r8
   1c8c0:	ldr	r1, [sp, #16]
   1c8c2:	bl	1bd08 <btrfs_cow_block@@Base>
   1c8c6:	mov	r4, r0
   1c8c8:	ldr	r0, [sp, #36]	; 0x24
   1c8ca:	cbz	r4, 1c8d4 <btrfs_check_leaf@@Base+0x3e0>
   1c8cc:	bl	1a0a4 <free_extent_buffer@@Base>
   1c8d0:	movs	r4, #1
   1c8d2:	b.n	1c88e <btrfs_check_leaf@@Base+0x39a>
   1c8d4:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1c8d8:	cmp	r7, r0
   1c8da:	bgt.n	1c8ae <btrfs_check_leaf@@Base+0x3ba>
   1c8dc:	ldr.w	r3, [r6, #192]	; 0xc0
   1c8e0:	str	r3, [sp, #12]
   1c8e2:	cmp	r3, #0
   1c8e4:	beq.n	1c8ae <btrfs_check_leaf@@Base+0x3ba>
   1c8e6:	ldr	r3, [sp, #112]	; 0x70
   1c8e8:	adds	r7, #25
   1c8ea:	mov	fp, r4
   1c8ec:	mov	r1, r4
   1c8ee:	rsb	lr, r3, #1
   1c8f2:	ldr	r3, [sp, #12]
   1c8f4:	mov.w	r9, #25
   1c8f8:	subs	r2, r3, #1
   1c8fa:	cmp	r2, lr
   1c8fc:	bcs.w	1ca42 <btrfs_check_leaf@@Base+0x54e>
   1c900:	cmp.w	fp, #0
   1c904:	beq.n	1c8ae <btrfs_check_leaf@@Base+0x3ba>
   1c906:	ldr	r3, [sp, #112]	; 0x70
   1c908:	cbnz	r3, 1c924 <btrfs_check_leaf@@Base+0x430>
   1c90a:	ldr	r3, [sp, #12]
   1c90c:	cmp	r3, fp
   1c90e:	bne.n	1c924 <btrfs_check_leaf@@Base+0x430>
   1c910:	ldr	r1, [pc, #392]	; (1ca9c <btrfs_check_leaf@@Base+0x5a8>)
   1c912:	movs	r3, #1
   1c914:	ldr	r0, [pc, #392]	; (1caa0 <btrfs_check_leaf@@Base+0x5ac>)
   1c916:	movw	r2, #1874	; 0x752
   1c91a:	add	r1, pc
   1c91c:	adds	r1, #233	; 0xe9
   1c91e:	add	r0, pc
   1c920:	bl	1aea2 <rb_free_nodes@@Base+0x120>
   1c924:	ldr	r3, [sp, #36]	; 0x24
   1c926:	mov	r0, r6
   1c928:	add.w	sl, sl, #384	; 0x180
   1c92c:	vmov	s15, r3
   1c930:	ldr.w	r3, [r3, #192]	; 0xc0
   1c934:	str	r3, [sp, #20]
   1c936:	ldr	r3, [sp, #12]
   1c938:	sub.w	r9, r3, fp
   1c93c:	mov	r1, r9
   1c93e:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1c942:	mov	r1, r6
   1c944:	mov	r7, r0
   1c946:	mov	r0, sl
   1c948:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1c94c:	vmov	r1, s15
   1c950:	subs	r2, r7, r0
   1c952:	strd	r2, r0, [sp, #24]
   1c956:	mov	r0, sl
   1c958:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1c95c:	ldr	r3, [sp, #28]
   1c95e:	subs	r7, r3, r7
   1c960:	ldr	r3, [sp, #16]
   1c962:	ldr.w	r3, [r3, #464]	; 0x1d0
   1c966:	ldr.w	r3, [r3, #384]	; 0x180
   1c96a:	subs	r3, #101	; 0x65
   1c96c:	add.w	r2, r0, #101	; 0x65
   1c970:	subs	r3, r3, r0
   1c972:	adds	r1, r2, r7
   1c974:	vmov	r0, s15
   1c978:	bl	1a810 <memmove_extent_buffer@@Base>
   1c97c:	ldr	r3, [sp, #16]
   1c97e:	mov	r1, r6
   1c980:	mov	r0, sl
   1c982:	ldr.w	r3, [r3, #464]	; 0x1d0
   1c986:	ldr.w	r2, [r3, #384]	; 0x180
   1c98a:	add	r2, r7
   1c98c:	str	r2, [sp, #28]
   1c98e:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1c992:	ldr	r3, [sp, #24]
   1c994:	movs	r7, #25
   1c996:	ldr	r2, [sp, #28]
   1c998:	mul.w	sl, r7, fp
   1c99c:	mov	r1, r6
   1c99e:	str	r3, [sp, #0]
   1c9a0:	add.w	r3, r0, #101	; 0x65
   1c9a4:	ldr	r0, [sp, #36]	; 0x24
   1c9a6:	bl	1a7c6 <copy_extent_buffer@@Base>
   1c9aa:	ldr	r3, [sp, #20]
   1c9ac:	movs	r2, #101	; 0x65
   1c9ae:	ldr	r0, [sp, #36]	; 0x24
   1c9b0:	add.w	r1, sl, r2
   1c9b4:	muls	r3, r7
   1c9b6:	bl	1a810 <memmove_extent_buffer@@Base>
   1c9ba:	ldr	r0, [sp, #36]	; 0x24
   1c9bc:	mul.w	r3, r7, r9
   1c9c0:	movs	r2, #101	; 0x65
   1c9c2:	mov	r1, r6
   1c9c4:	str.w	sl, [sp]
   1c9c8:	adds	r3, #101	; 0x65
   1c9ca:	bl	1a7c6 <copy_extent_buffer@@Base>
   1c9ce:	ldr	r3, [sp, #20]
   1c9d0:	ldr	r2, [sp, #16]
   1c9d2:	movs	r1, #0
   1c9d4:	add.w	r0, r3, fp
   1c9d8:	ldr	r3, [sp, #36]	; 0x24
   1c9da:	adds	r3, #197	; 0xc5
   1c9dc:	str.w	r0, [r3, #-5]
   1c9e0:	ldr.w	r2, [r2, #464]	; 0x1d0
   1c9e4:	ldr.w	r2, [r2, #384]	; 0x180
   1c9e8:	subs	r2, #101	; 0x65
   1c9ea:	cmp	r1, r0
   1c9ec:	bne.n	1ca6c <btrfs_check_leaf@@Base+0x578>
   1c9ee:	str.w	r9, [r6, #192]	; 0xc0
   1c9f2:	cmp.w	r9, #0
   1c9f6:	beq.n	1c9fe <btrfs_check_leaf@@Base+0x50a>
   1c9f8:	mov	r0, r6
   1c9fa:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1c9fe:	ldr	r0, [sp, #36]	; 0x24
   1ca00:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1ca04:	add	r1, sp, #40	; 0x28
   1ca06:	ldr	r0, [sp, #36]	; 0x24
   1ca08:	movs	r2, #0
   1ca0a:	str	r1, [sp, #16]
   1ca0c:	bl	1adca <rb_free_nodes@@Base+0x48>
   1ca10:	vmov	r2, s16
   1ca14:	mov	r0, r8
   1ca16:	ldr	r1, [sp, #16]
   1ca18:	bl	1adb2 <rb_free_nodes@@Base+0x30>
   1ca1c:	mov	r0, r8
   1ca1e:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1ca22:	ldr	r3, [r5, #32]
   1ca24:	cmp	r9, r3
   1ca26:	bhi.n	1ca7c <btrfs_check_leaf@@Base+0x588>
   1ca28:	ldr	r2, [sp, #12]
   1ca2a:	ldr	r0, [r5, #0]
   1ca2c:	subs	r3, r3, r2
   1ca2e:	add	r3, fp
   1ca30:	str	r3, [r5, #32]
   1ca32:	bl	1a0a4 <free_extent_buffer@@Base>
   1ca36:	ldr	r3, [sp, #36]	; 0x24
   1ca38:	str	r3, [r5, #0]
   1ca3a:	ldr	r3, [r5, #36]	; 0x24
   1ca3c:	adds	r3, #1
   1ca3e:	str	r3, [r5, #36]	; 0x24
   1ca40:	b.n	1c88e <btrfs_check_leaf@@Base+0x39a>
   1ca42:	mla	ip, r9, r2, r6
   1ca46:	ldr	r3, [r5, #32]
   1ca48:	cmp	r3, r2
   1ca4a:	it	eq
   1ca4c:	addeq	r1, r1, r7
   1ca4e:	ldr.w	ip, [ip, #218]	; 0xda
   1ca52:	add.w	ip, ip, #25
   1ca56:	add	r1, ip
   1ca58:	cmp	r1, r0
   1ca5a:	bhi.w	1c900 <btrfs_check_leaf@@Base+0x40c>
   1ca5e:	add.w	fp, fp, #1
   1ca62:	cmp	r2, #0
   1ca64:	beq.w	1c906 <btrfs_check_leaf@@Base+0x412>
   1ca68:	subs	r2, #1
   1ca6a:	b.n	1c8fa <btrfs_check_leaf@@Base+0x406>
   1ca6c:	ldr.w	r7, [r3, #21]
   1ca70:	adds	r1, #1
   1ca72:	adds	r3, #25
   1ca74:	subs	r2, r2, r7
   1ca76:	str.w	r2, [r3, #-8]
   1ca7a:	b.n	1c9ea <btrfs_check_leaf@@Base+0x4f6>
   1ca7c:	ldr	r0, [sp, #36]	; 0x24
   1ca7e:	bl	1a0a4 <free_extent_buffer@@Base>
   1ca82:	b.n	1c88e <btrfs_check_leaf@@Base+0x39a>
   1ca84:	mov	r0, r4
   1ca86:	add	sp, #68	; 0x44
   1ca88:	vpop	{d8}
   1ca8c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca90:	stmia	r4!, {r1, r4, r5, r6, r7}
   1ca92:	movs	r4, r0
   1ca94:	lsls	r4, r7, #9
   1ca96:	movs	r0, r0
   1ca98:	stmia	r4!, {r1, r2, r3, r4, r7}
   1ca9a:	movs	r4, r0
   1ca9c:	mov	r2, ip
   1ca9e:	movs	r2, r0
   1caa0:	ldrsb	r7, [r2, r0]
   1caa2:	movs	r2, r0
   1caa4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1caa8:	mov	sl, r3
   1caaa:	vpush	{d8}
   1caae:	mov	r4, r2
   1cab0:	ldr	r3, [pc, #744]	; (1cd9c <btrfs_check_leaf@@Base+0x8a8>)
   1cab2:	mov	r5, r0
   1cab4:	ldr	r2, [pc, #744]	; (1cda0 <btrfs_check_leaf@@Base+0x8ac>)
   1cab6:	mov	r8, r1
   1cab8:	add	r3, pc
   1caba:	ldr	r7, [r4, #36]	; 0x24
   1cabc:	sub	sp, #76	; 0x4c
   1cabe:	add	r2, pc
   1cac0:	str	r3, [sp, #20]
   1cac2:	ldr	r3, [pc, #736]	; (1cda4 <btrfs_check_leaf@@Base+0x8b0>)
   1cac4:	ldr.w	fp, [sp, #120]	; 0x78
   1cac8:	ldr	r3, [r2, r3]
   1caca:	ldr	r3, [r3, #0]
   1cacc:	str	r3, [sp, #68]	; 0x44
   1cace:	mov.w	r3, #0
   1cad2:	cbz	r7, 1cb1a <btrfs_check_leaf@@Base+0x626>
   1cad4:	ldr	r1, [r4, #4]
   1cad6:	cbz	r1, 1cb1a <btrfs_check_leaf@@Base+0x626>
   1cad8:	ldr	r6, [r4, #0]
   1cada:	ldr.w	r3, [r6, #192]	; 0xc0
   1cade:	str	r3, [sp, #12]
   1cae0:	cbz	r3, 1cb1a <btrfs_check_leaf@@Base+0x626>
   1cae2:	ldr.w	r9, [r8, #464]	; 0x1d0
   1cae6:	subs	r7, #1
   1cae8:	mov	r2, r7
   1caea:	mov	r0, r9
   1caec:	bl	1c092 <read_node_slot@@Base>
   1caf0:	str	r0, [sp, #44]	; 0x2c
   1caf2:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1caf6:	cmp	r0, sl
   1caf8:	bge.n	1cafe <btrfs_check_leaf@@Base+0x60a>
   1cafa:	ldr	r0, [sp, #44]	; 0x2c
   1cafc:	b.n	1cb16 <btrfs_check_leaf@@Base+0x622>
   1cafe:	add	r3, sp, #44	; 0x2c
   1cb00:	ldr	r2, [sp, #44]	; 0x2c
   1cb02:	strd	r7, r3, [sp]
   1cb06:	mov	r1, r8
   1cb08:	ldr	r3, [r4, #4]
   1cb0a:	mov	r0, r5
   1cb0c:	bl	1bd08 <btrfs_cow_block@@Base>
   1cb10:	mov	r7, r0
   1cb12:	ldr	r0, [sp, #44]	; 0x2c
   1cb14:	cbz	r7, 1cb1e <btrfs_check_leaf@@Base+0x62a>
   1cb16:	bl	1a0a4 <free_extent_buffer@@Base>
   1cb1a:	movs	r7, #1
   1cb1c:	b.n	1cd18 <btrfs_check_leaf@@Base+0x824>
   1cb1e:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1cb22:	cmp	sl, r0
   1cb24:	bgt.n	1cafa <btrfs_check_leaf@@Base+0x606>
   1cb26:	cmp.w	fp, #0
   1cb2a:	bne.w	1cd2c <btrfs_check_leaf@@Base+0x838>
   1cb2e:	ldr	r3, [sp, #12]
   1cb30:	add.w	ip, r3, #4294967295	; 0xffffffff
   1cb34:	movs	r2, #0
   1cb36:	add.w	r1, r6, #197	; 0xc5
   1cb3a:	add.w	sl, sl, #25
   1cb3e:	mov	r5, r2
   1cb40:	cmp	r5, ip
   1cb42:	bne.w	1cd32 <btrfs_check_leaf@@Base+0x83e>
   1cb46:	cmp	r5, #0
   1cb48:	beq.n	1cafa <btrfs_check_leaf@@Base+0x606>
   1cb4a:	cmp.w	fp, #0
   1cb4e:	bne.n	1cb6c <btrfs_check_leaf@@Base+0x678>
   1cb50:	ldr.w	r3, [r6, #192]	; 0xc0
   1cb54:	cmp	r3, r5
   1cb56:	bne.n	1cb6c <btrfs_check_leaf@@Base+0x678>
   1cb58:	ldr	r1, [pc, #588]	; (1cda8 <btrfs_check_leaf@@Base+0x8b4>)
   1cb5a:	movs	r3, #1
   1cb5c:	ldr	r0, [pc, #588]	; (1cdac <btrfs_check_leaf@@Base+0x8b8>)
   1cb5e:	movw	r2, #2018	; 0x7e2
   1cb62:	add	r1, pc
   1cb64:	adds	r1, #249	; 0xf9
   1cb66:	add	r0, pc
   1cb68:	bl	1aea2 <rb_free_nodes@@Base+0x120>
   1cb6c:	mov.w	sl, #25
   1cb70:	ldr	r0, [sp, #44]	; 0x2c
   1cb72:	mul.w	r3, sl, r5
   1cb76:	mov	r1, r6
   1cb78:	str	r3, [sp, #16]
   1cb7a:	ldr.w	r2, [r0, #192]	; 0xc0
   1cb7e:	str	r3, [sp, #0]
   1cb80:	movs	r3, #101	; 0x65
   1cb82:	mul.w	r2, sl, r2
   1cb86:	add	r2, r3
   1cb88:	bl	1a7c6 <copy_extent_buffer@@Base>
   1cb8c:	subs	r3, r5, #1
   1cb8e:	ldr.w	fp, [sp, #44]	; 0x2c
   1cb92:	mla	r3, sl, r3, r6
   1cb96:	add.w	r2, r3, #197	; 0xc5
   1cb9a:	str	r2, [sp, #28]
   1cb9c:	ldr.w	r2, [r3, #214]	; 0xd6
   1cba0:	ldr.w	r3, [r8, #464]	; 0x1d0
   1cba4:	ldr.w	r3, [r3, #384]	; 0x180
   1cba8:	subs	r3, #101	; 0x65
   1cbaa:	strd	r3, r2, [sp, #32]
   1cbae:	subs	r1, r3, r2
   1cbb0:	add.w	r3, r9, #384	; 0x180
   1cbb4:	str	r1, [sp, #24]
   1cbb6:	mov	r1, fp
   1cbb8:	mov	r0, r3
   1cbba:	vmov	s16, r3
   1cbbe:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1cbc2:	ldr	r3, [sp, #32]
   1cbc4:	ldr	r2, [sp, #36]	; 0x24
   1cbc6:	rsb	r3, r3, #101	; 0x65
   1cbca:	adds	r1, r3, r2
   1cbcc:	ldr	r3, [sp, #24]
   1cbce:	str	r3, [sp, #0]
   1cbd0:	add.w	r3, r2, #101	; 0x65
   1cbd4:	adds	r2, r1, r0
   1cbd6:	mov	r0, fp
   1cbd8:	mov	r1, r6
   1cbda:	bl	1a7c6 <copy_extent_buffer@@Base>
   1cbde:	ldr.w	r9, [sp, #44]	; 0x2c
   1cbe2:	ldr	r1, [pc, #460]	; (1cdb0 <btrfs_check_leaf@@Base+0x8bc>)
   1cbe4:	movw	r2, #2035	; 0x7f3
   1cbe8:	ldr	r0, [pc, #456]	; (1cdb4 <btrfs_check_leaf@@Base+0x8c0>)
   1cbea:	ldr.w	fp, [r9, #192]	; 0xc0
   1cbee:	add	r1, pc
   1cbf0:	adds	r1, #249	; 0xf9
   1cbf2:	add	r0, pc
   1cbf4:	clz	r3, fp
   1cbf8:	lsrs	r3, r3, #5
   1cbfa:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1cbfe:	add.w	r3, fp, #4294967295	; 0xffffffff
   1cc02:	add.w	r0, fp, r5
   1cc06:	mov	r2, fp
   1cc08:	mla	r3, sl, r3, r9
   1cc0c:	ldr.w	r1, [r3, #214]	; 0xd6
   1cc10:	add.w	r3, r9, #197	; 0xc5
   1cc14:	str	r3, [sp, #24]
   1cc16:	adds	r1, #101	; 0x65
   1cc18:	cmp	r0, r2
   1cc1a:	bhi.w	1cd4e <btrfs_check_leaf@@Base+0x85a>
   1cc1e:	ldr	r3, [sp, #12]
   1cc20:	str.w	r0, [r9, #192]	; 0xc0
   1cc24:	cmp	r3, r5
   1cc26:	bcs.n	1cc54 <btrfs_check_leaf@@Base+0x760>
   1cc28:	ldr	r2, [sp, #20]
   1cc2a:	movs	r1, #1
   1cc2c:	ldr	r3, [pc, #392]	; (1cdb8 <btrfs_check_leaf@@Base+0x8c4>)
   1cc2e:	ldr	r0, [r2, r3]
   1cc30:	ldr	r3, [sp, #12]
   1cc32:	ldr	r2, [pc, #392]	; (1cdbc <btrfs_check_leaf@@Base+0x8c8>)
   1cc34:	str	r3, [sp, #0]
   1cc36:	add	r2, pc
   1cc38:	mov	r3, r5
   1cc3a:	ldr	r0, [r0, #0]
   1cc3c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1cc40:	ldr	r1, [pc, #380]	; (1cdc0 <btrfs_check_leaf@@Base+0x8cc>)
   1cc42:	ldr	r0, [pc, #384]	; (1cdc4 <btrfs_check_leaf@@Base+0x8d0>)
   1cc44:	movs	r3, #1
   1cc46:	add	r1, pc
   1cc48:	movw	r2, #2052	; 0x804
   1cc4c:	adds	r1, #249	; 0xf9
   1cc4e:	add	r0, pc
   1cc50:	bl	1aea2 <rb_free_nodes@@Base+0x120>
   1cc54:	ldr	r3, [sp, #12]
   1cc56:	cmp	r3, r5
   1cc58:	bls.n	1cc9c <btrfs_check_leaf@@Base+0x7a8>
   1cc5a:	ldr	r3, [sp, #28]
   1cc5c:	mov	r1, r6
   1cc5e:	vmov	r0, s16
   1cc62:	ldr.w	sl, [r3, #17]
   1cc66:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1cc6a:	ldr.w	r3, [r8, #464]	; 0x1d0
   1cc6e:	ldr.w	r1, [r3, #384]	; 0x180
   1cc72:	sub.w	r1, r1, sl
   1cc76:	sub.w	r3, sl, r0
   1cc7a:	add.w	r2, r0, #101	; 0x65
   1cc7e:	add	r1, r0
   1cc80:	mov	r0, r6
   1cc82:	bl	1a810 <memmove_extent_buffer@@Base>
   1cc86:	ldr.w	r3, [r6, #192]	; 0xc0
   1cc8a:	movs	r2, #25
   1cc8c:	movs	r1, #101	; 0x65
   1cc8e:	subs	r3, r3, r5
   1cc90:	mov	r0, r6
   1cc92:	muls	r3, r2
   1cc94:	ldr	r2, [sp, #16]
   1cc96:	adds	r2, #101	; 0x65
   1cc98:	bl	1a810 <memmove_extent_buffer@@Base>
   1cc9c:	ldr	r3, [sp, #12]
   1cc9e:	add.w	ip, r6, #197	; 0xc5
   1cca2:	movs	r2, #0
   1cca4:	movs	r0, #25
   1cca6:	sub.w	r9, r3, r5
   1ccaa:	str.w	r9, [r6, #192]	; 0xc0
   1ccae:	ldr.w	r3, [r8, #464]	; 0x1d0
   1ccb2:	ldr.w	r3, [r3, #384]	; 0x180
   1ccb6:	subs	r3, #101	; 0x65
   1ccb8:	cmp	r9, r2
   1ccba:	bne.n	1cd6c <btrfs_check_leaf@@Base+0x878>
   1ccbc:	ldr	r0, [sp, #44]	; 0x2c
   1ccbe:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1ccc2:	cmp.w	r9, #0
   1ccc6:	beq.n	1ccce <btrfs_check_leaf@@Base+0x7da>
   1ccc8:	mov	r0, r6
   1ccca:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1ccce:	add.w	r9, sp, #48	; 0x30
   1ccd2:	movs	r2, #0
   1ccd4:	mov	r0, r6
   1ccd6:	mov	r1, r9
   1ccd8:	bl	1adca <rb_free_nodes@@Base+0x48>
   1ccdc:	movs	r3, #1
   1ccde:	mov	r2, r9
   1cce0:	mov	r1, r4
   1cce2:	mov	r0, r8
   1cce4:	bl	1c2e4 <btrfs_fixup_low_keys@@Base>
   1cce8:	ldr	r3, [r4, #32]
   1ccea:	cmp	r5, r3
   1ccec:	ble.n	1cd80 <btrfs_check_leaf@@Base+0x88c>
   1ccee:	add	r3, fp
   1ccf0:	ldr	r0, [r4, #0]
   1ccf2:	str	r3, [r4, #32]
   1ccf4:	bl	1a0a4 <free_extent_buffer@@Base>
   1ccf8:	ldr	r3, [sp, #44]	; 0x2c
   1ccfa:	str	r3, [r4, #0]
   1ccfc:	ldr	r3, [r4, #36]	; 0x24
   1ccfe:	subs	r3, #1
   1cd00:	str	r3, [r4, #36]	; 0x24
   1cd02:	ldr	r3, [r4, #32]
   1cd04:	mov.w	r2, #2096	; 0x830
   1cd08:	ldr	r1, [pc, #188]	; (1cdc8 <btrfs_check_leaf@@Base+0x8d4>)
   1cd0a:	ldr	r0, [pc, #192]	; (1cdcc <btrfs_check_leaf@@Base+0x8d8>)
   1cd0c:	add	r1, pc
   1cd0e:	lsrs	r3, r3, #31
   1cd10:	adds	r1, #249	; 0xf9
   1cd12:	add	r0, pc
   1cd14:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1cd18:	ldr	r2, [pc, #180]	; (1cdd0 <btrfs_check_leaf@@Base+0x8dc>)
   1cd1a:	ldr	r3, [pc, #136]	; (1cda4 <btrfs_check_leaf@@Base+0x8b0>)
   1cd1c:	add	r2, pc
   1cd1e:	ldr	r3, [r2, r3]
   1cd20:	ldr	r2, [r3, #0]
   1cd22:	ldr	r3, [sp, #68]	; 0x44
   1cd24:	eors	r2, r3
   1cd26:	beq.n	1cd8e <btrfs_check_leaf@@Base+0x89a>
   1cd28:	blx	88e4 <__stack_chk_fail@plt>
   1cd2c:	ldr.w	ip, [sp, #12]
   1cd30:	b.n	1cb34 <btrfs_check_leaf@@Base+0x640>
   1cd32:	ldr	r3, [r4, #32]
   1cd34:	adds	r1, #25
   1cd36:	cmp	r3, r5
   1cd38:	ldr.w	r3, [r1, #-4]
   1cd3c:	it	eq
   1cd3e:	addeq	r2, sl
   1cd40:	adds	r3, #25
   1cd42:	add	r2, r3
   1cd44:	cmp	r2, r0
   1cd46:	bhi.w	1cb46 <btrfs_check_leaf@@Base+0x652>
   1cd4a:	adds	r5, #1
   1cd4c:	b.n	1cb40 <btrfs_check_leaf@@Base+0x64c>
   1cd4e:	ldr	r3, [sp, #24]
   1cd50:	mla	ip, sl, r2, r3
   1cd54:	ldr.w	r3, [r8, #464]	; 0x1d0
   1cd58:	adds	r2, #1
   1cd5a:	ldr.w	r3, [r3, #384]	; 0x180
   1cd5e:	ldr.w	lr, [ip, #17]
   1cd62:	subs	r3, r1, r3
   1cd64:	add	r3, lr
   1cd66:	str.w	r3, [ip, #17]
   1cd6a:	b.n	1cc18 <btrfs_check_leaf@@Base+0x724>
   1cd6c:	mla	r1, r0, r2, ip
   1cd70:	adds	r2, #1
   1cd72:	ldr.w	lr, [r1, #21]
   1cd76:	sub.w	r3, r3, lr
   1cd7a:	str.w	r3, [r1, #17]
   1cd7e:	b.n	1ccb8 <btrfs_check_leaf@@Base+0x7c4>
   1cd80:	ldr	r0, [sp, #44]	; 0x2c
   1cd82:	bl	1a0a4 <free_extent_buffer@@Base>
   1cd86:	ldr	r3, [r4, #32]
   1cd88:	subs	r5, r3, r5
   1cd8a:	str	r5, [r4, #32]
   1cd8c:	b.n	1cd02 <btrfs_check_leaf@@Base+0x80e>
   1cd8e:	mov	r0, r7
   1cd90:	add	sp, #76	; 0x4c
   1cd92:	vpop	{d8}
   1cd96:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cd9a:	nop
   1cd9c:	stmia	r2!, {r3, r4, r5, r6}
   1cd9e:	movs	r4, r0
   1cda0:	stmia	r2!, {r1, r4, r5, r6}
   1cda2:	movs	r4, r0
   1cda4:	lsls	r4, r7, #9
   1cda6:	movs	r0, r0
   1cda8:	add	r2, r3
   1cdaa:	movs	r2, r0
   1cdac:	strh	r7, [r1, r7]
   1cdae:	movs	r2, r0
   1cdb0:	bics	r6, r1
   1cdb2:	movs	r2, r0
   1cdb4:	eors	r0, r7
   1cdb6:	movs	r2, r0
   1cdb8:	lsls	r4, r1, #10
   1cdba:	movs	r0, r0
   1cdbc:	eors	r2, r1
   1cdbe:	movs	r2, r0
   1cdc0:	orrs	r6, r6
   1cdc2:	movs	r2, r0
   1cdc4:	strh	r7, [r4, r3]
   1cdc6:	movs	r2, r0
   1cdc8:	negs	r0, r6
   1cdca:	movs	r2, r0
   1cdcc:	subs	r7, #131	; 0x83
   1cdce:	movs	r2, r0
   1cdd0:	stmia	r0!, {r2, r4}
   1cdd2:	movs	r4, r0
   1cdd4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cdd8:	mov	r5, r3
   1cdda:	vpush	{d8}
   1cdde:	mov	r6, r1
   1cde0:	ldr.w	r3, [pc, #1264]	; 1d2d4 <btrfs_check_leaf@@Base+0xde0>
   1cde4:	sub	sp, #116	; 0x74
   1cde6:	str	r2, [sp, #48]	; 0x30
   1cde8:	ldr.w	r2, [pc, #1260]	; 1d2d8 <btrfs_check_leaf@@Base+0xde4>
   1cdec:	str	r0, [sp, #44]	; 0x2c
   1cdee:	add	r2, pc
   1cdf0:	ldr	r3, [r2, r3]
   1cdf2:	ldr	r3, [r3, #0]
   1cdf4:	str	r3, [sp, #108]	; 0x6c
   1cdf6:	mov.w	r3, #0
   1cdfa:	ldr	r3, [sp, #164]	; 0xa4
   1cdfc:	cbz	r3, 1ce22 <btrfs_check_leaf@@Base+0x92e>
   1cdfe:	ldr	r2, [r5, #0]
   1ce00:	movs	r1, #25
   1ce02:	ldr	r3, [r5, #32]
   1ce04:	mla	r3, r1, r3, r2
   1ce08:	ldr.w	r2, [r3, #218]	; 0xda
   1ce0c:	ldr	r3, [sp, #160]	; 0xa0
   1ce0e:	add	r3, r1
   1ce10:	add	r2, r3
   1ce12:	ldr.w	r3, [r6, #464]	; 0x1d0
   1ce16:	ldr.w	r3, [r3, #384]	; 0x180
   1ce1a:	subs	r3, #101	; 0x65
   1ce1c:	cmp	r2, r3
   1ce1e:	bhi.w	1d2c0 <btrfs_check_leaf@@Base+0xdcc>
   1ce22:	ldr	r3, [sp, #160]	; 0xa0
   1ce24:	cmp	r3, #0
   1ce26:	bne.n	1cefc <btrfs_check_leaf@@Base+0xa08>
   1ce28:	ldr	r3, [r5, #4]
   1ce2a:	cbnz	r3, 1ce40 <btrfs_check_leaf@@Base+0x94c>
   1ce2c:	ldr	r0, [sp, #44]	; 0x2c
   1ce2e:	movs	r3, #1
   1ce30:	mov	r2, r5
   1ce32:	mov	r1, r6
   1ce34:	bl	1b346 <add_root_to_dirty_list@@Base+0x2e>
   1ce38:	mov	r9, r0
   1ce3a:	cmp	r0, #0
   1ce3c:	bne.w	1cf44 <btrfs_check_leaf@@Base+0xa50>
   1ce40:	movs	r3, #0
   1ce42:	str	r3, [sp, #52]	; 0x34
   1ce44:	mov	r9, r3
   1ce46:	add	r3, sp, #68	; 0x44
   1ce48:	vmov	s16, r3
   1ce4c:	ldr.w	r3, [pc, #1164]	; 1d2dc <btrfs_check_leaf@@Base+0xde8>
   1ce50:	add	r3, pc
   1ce52:	addw	r3, r3, #275	; 0x113
   1ce56:	vmov	s17, r3
   1ce5a:	ldr.w	r8, [r5]
   1ce5e:	ldr.w	fp, [r5, #32]
   1ce62:	ldr.w	r3, [r8, #192]	; 0xc0
   1ce66:	str	r3, [sp, #32]
   1ce68:	adds	r3, #1
   1ce6a:	cmp.w	fp, r3, lsr #1
   1ce6e:	mov.w	sl, r3, lsr #1
   1ce72:	blt.w	1cfb2 <btrfs_check_leaf@@Base+0xabe>
   1ce76:	ldr	r3, [sp, #32]
   1ce78:	cmp	r3, #1
   1ce7a:	bne.n	1cf5a <btrfs_check_leaf@@Base+0xa66>
   1ce7c:	ldr	r3, [sp, #32]
   1ce7e:	cmp	fp, r3
   1ce80:	bcc.n	1cf7e <btrfs_check_leaf@@Base+0xa8a>
   1ce82:	ldr	r3, [sp, #48]	; 0x30
   1ce84:	movs	r7, #0
   1ce86:	ldr.w	r2, [r3, #9]
   1ce8a:	ldr.w	r3, [r3, #13]
   1ce8e:	str.w	r2, [sp, #77]	; 0x4d
   1ce92:	str.w	r3, [sp, #81]	; 0x51
   1ce96:	ldr	r3, [sp, #48]	; 0x30
   1ce98:	ldrb	r3, [r3, #8]
   1ce9a:	strb.w	r3, [sp, #76]	; 0x4c
   1ce9e:	ldr	r3, [sp, #48]	; 0x30
   1cea0:	ldr	r2, [r3, #0]
   1cea2:	ldr	r3, [r3, #4]
   1cea4:	strd	r2, r3, [sp, #68]	; 0x44
   1cea8:	movs	r2, #0
   1ceaa:	movs	r3, #0
   1ceac:	strd	r2, r3, [sp, #24]
   1ceb0:	ldrd	r2, r3, [r8, #40]	; 0x28
   1ceb4:	vstr	s16, [sp, #8]
   1ceb8:	ldr.w	r1, [r6, #464]	; 0x1d0
   1cebc:	strd	r2, r3, [sp, #16]
   1cec0:	movs	r3, #0
   1cec2:	ldr.w	r2, [r6, #447]	; 0x1bf
   1cec6:	str	r3, [sp, #12]
   1cec8:	ldr.w	r3, [r6, #451]	; 0x1c3
   1cecc:	ldr	r0, [sp, #44]	; 0x2c
   1cece:	strd	r2, r3, [sp]
   1ced2:	ldr.w	r2, [r1, #384]	; 0x180
   1ced6:	mov	r1, r6
   1ced8:	bl	25eec <btrfs_alloc_free_block@@Base>
   1cedc:	cmn.w	r0, #4096	; 0x1000
   1cee0:	mov	r4, r0
   1cee2:	bls.w	1d01a <btrfs_check_leaf@@Base+0xb26>
   1cee6:	ldr	r1, [pc, #1016]	; (1d2e0 <btrfs_check_leaf@@Base+0xdec>)
   1cee8:	movs	r3, #1
   1ceea:	ldr	r0, [pc, #1016]	; (1d2e4 <btrfs_check_leaf@@Base+0xdf0>)
   1ceec:	mov.w	r2, #2272	; 0x8e0
   1cef0:	add	r1, pc
   1cef2:	add.w	r1, r1, #264	; 0x108
   1cef6:	add	r0, pc
   1cef8:	bl	1ae5e <rb_free_nodes@@Base+0xdc>
   1cefc:	ldr	r3, [sp, #48]	; 0x30
   1cefe:	ldrb	r3, [r3, #8]
   1cf00:	cmp	r3, #84	; 0x54
   1cf02:	beq.n	1ce28 <btrfs_check_leaf@@Base+0x934>
   1cf04:	ldr	r3, [sp, #160]	; 0xa0
   1cf06:	movs	r4, #0
   1cf08:	ldr	r0, [sp, #44]	; 0x2c
   1cf0a:	mov	r2, r5
   1cf0c:	mov	r1, r6
   1cf0e:	str	r4, [sp, #0]
   1cf10:	bl	1c82c <btrfs_check_leaf@@Base+0x338>
   1cf14:	subs.w	r9, r0, #0
   1cf18:	blt.n	1cf44 <btrfs_check_leaf@@Base+0xa50>
   1cf1a:	bne.n	1cf30 <btrfs_check_leaf@@Base+0xa3c>
   1cf1c:	ldr	r0, [r5, #0]
   1cf1e:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1cf22:	ldr	r3, [sp, #160]	; 0xa0
   1cf24:	cmp	r0, r3
   1cf26:	blt.w	1ce28 <btrfs_check_leaf@@Base+0x934>
   1cf2a:	mov.w	r9, #0
   1cf2e:	b.n	1cf44 <btrfs_check_leaf@@Base+0xa50>
   1cf30:	ldr	r3, [sp, #160]	; 0xa0
   1cf32:	mov	r2, r5
   1cf34:	ldr	r0, [sp, #44]	; 0x2c
   1cf36:	mov	r1, r6
   1cf38:	str	r4, [sp, #0]
   1cf3a:	bl	1caa4 <btrfs_check_leaf@@Base+0x5b0>
   1cf3e:	subs.w	r9, r0, #0
   1cf42:	bge.n	1cf1c <btrfs_check_leaf@@Base+0xa28>
   1cf44:	ldr	r2, [pc, #928]	; (1d2e8 <btrfs_check_leaf@@Base+0xdf4>)
   1cf46:	ldr	r3, [pc, #908]	; (1d2d4 <btrfs_check_leaf@@Base+0xde0>)
   1cf48:	add	r2, pc
   1cf4a:	ldr	r3, [r2, r3]
   1cf4c:	ldr	r2, [r3, #0]
   1cf4e:	ldr	r3, [sp, #108]	; 0x6c
   1cf50:	eors	r2, r3
   1cf52:	beq.w	1d2c6 <btrfs_check_leaf@@Base+0xdd2>
   1cf56:	blx	88e4 <__stack_chk_fail@plt>
   1cf5a:	ldr	r3, [sp, #32]
   1cf5c:	mov	r1, sl
   1cf5e:	mov	r0, r8
   1cf60:	sub.w	r2, r3, sl
   1cf64:	bl	1b1e4 <rb_free_nodes@@Base+0x462>
   1cf68:	ldr	r3, [sp, #160]	; 0xa0
   1cf6a:	add	r0, r3
   1cf6c:	ldr.w	r3, [r6, #464]	; 0x1d0
   1cf70:	ldr.w	r3, [r3, #384]	; 0x180
   1cf74:	subs	r3, #101	; 0x65
   1cf76:	cmp	r0, r3
   1cf78:	bhi.n	1ce7c <btrfs_check_leaf@@Base+0x988>
   1cf7a:	movs	r7, #1
   1cf7c:	b.n	1cfa4 <btrfs_check_leaf@@Base+0xab0>
   1cf7e:	ldr	r3, [sp, #32]
   1cf80:	mov	r1, fp
   1cf82:	mov	r0, r8
   1cf84:	mov	sl, fp
   1cf86:	sub.w	r2, r3, fp
   1cf8a:	bl	1b1e4 <rb_free_nodes@@Base+0x462>
   1cf8e:	ldr	r3, [sp, #160]	; 0xa0
   1cf90:	add	r0, r3
   1cf92:	ldr.w	r3, [r6, #464]	; 0x1d0
   1cf96:	ldr.w	r3, [r3, #384]	; 0x180
   1cf9a:	subs	r3, #101	; 0x65
   1cf9c:	cmp	r0, r3
   1cf9e:	ite	hi
   1cfa0:	movhi	r7, #2
   1cfa2:	movls	r7, #1
   1cfa4:	vmov	r1, s16
   1cfa8:	mov	r2, sl
   1cfaa:	mov	r0, r8
   1cfac:	bl	1adca <rb_free_nodes@@Base+0x48>
   1cfb0:	b.n	1cea8 <btrfs_check_leaf@@Base+0x9b4>
   1cfb2:	mov	r2, sl
   1cfb4:	movs	r1, #0
   1cfb6:	mov	r0, r8
   1cfb8:	bl	1b1e4 <rb_free_nodes@@Base+0x462>
   1cfbc:	ldr	r3, [sp, #160]	; 0xa0
   1cfbe:	add	r0, r3
   1cfc0:	ldr.w	r3, [r6, #464]	; 0x1d0
   1cfc4:	ldr.w	r3, [r3, #384]	; 0x180
   1cfc8:	subs	r3, #101	; 0x65
   1cfca:	cmp	r0, r3
   1cfcc:	bls.n	1cf7a <btrfs_check_leaf@@Base+0xa86>
   1cfce:	ldr	r3, [sp, #164]	; 0xa4
   1cfd0:	cbnz	r3, 1d00a <btrfs_check_leaf@@Base+0xb16>
   1cfd2:	ldr	r3, [sp, #160]	; 0xa0
   1cfd4:	cbz	r3, 1d00a <btrfs_check_leaf@@Base+0xb16>
   1cfd6:	cmp.w	fp, #0
   1cfda:	beq.w	1ce82 <btrfs_check_leaf@@Base+0x98e>
   1cfde:	ldr	r3, [sp, #32]
   1cfe0:	cmp	fp, r3
   1cfe2:	beq.n	1d016 <btrfs_check_leaf@@Base+0xb22>
   1cfe4:	sub.w	r2, r3, fp
   1cfe8:	mov	r1, fp
   1cfea:	mov	r0, r8
   1cfec:	mov	sl, fp
   1cfee:	bl	1b1e4 <rb_free_nodes@@Base+0x462>
   1cff2:	ldr	r3, [sp, #160]	; 0xa0
   1cff4:	add	r0, r3
   1cff6:	ldr.w	r3, [r6, #464]	; 0x1d0
   1cffa:	ldr.w	r3, [r3, #384]	; 0x180
   1cffe:	subs	r3, #101	; 0x65
   1d000:	cmp	r0, r3
   1d002:	ite	ls
   1d004:	movls	r7, #1
   1d006:	movhi	r7, #2
   1d008:	b.n	1cfa4 <btrfs_check_leaf@@Base+0xab0>
   1d00a:	cmp.w	fp, #0
   1d00e:	bne.n	1cfde <btrfs_check_leaf@@Base+0xaea>
   1d010:	movs	r7, #1
   1d012:	mov	sl, r7
   1d014:	b.n	1cfa4 <btrfs_check_leaf@@Base+0xab0>
   1d016:	mov	sl, fp
   1d018:	b.n	1cf7a <btrfs_check_leaf@@Base+0xa86>
   1d01a:	movs	r2, #0
   1d01c:	movs	r3, #101	; 0x65
   1d01e:	mov	r1, r2
   1d020:	bl	1a826 <memset_extent_buffer@@Base>
   1d024:	ldr	r3, [r4, #40]	; 0x28
   1d026:	mov	r0, r4
   1d028:	str.w	r3, [r4, #144]	; 0x90
   1d02c:	ldr	r3, [r4, #44]	; 0x2c
   1d02e:	str.w	r3, [r4, #148]	; 0x94
   1d032:	ldr	r3, [sp, #44]	; 0x2c
   1d034:	ldrd	r2, r3, [r3, #8]
   1d038:	str.w	r2, [r4, #176]	; 0xb0
   1d03c:	str.w	r3, [r4, #180]	; 0xb4
   1d040:	ldr.w	r2, [r4, #152]	; 0x98
   1d044:	ldr.w	r3, [r4, #156]	; 0x9c
   1d048:	bic.w	r3, r3, #4278190080	; 0xff000000
   1d04c:	str.w	r2, [r4, #152]	; 0x98
   1d050:	orr.w	r3, r3, #16777216	; 0x1000000
   1d054:	str.w	r3, [r4, #156]	; 0x9c
   1d058:	ldr.w	r2, [r6, #447]	; 0x1bf
   1d05c:	ldr.w	r3, [r6, #451]	; 0x1c3
   1d060:	str.w	r2, [r4, #184]	; 0xb8
   1d064:	movs	r2, #32
   1d066:	str.w	r3, [r4, #188]	; 0xbc
   1d06a:	mov.w	r3, #0
   1d06e:	strb.w	r3, [r4, #196]	; 0xc4
   1d072:	ldr.w	r3, [r6, #464]	; 0x1d0
   1d076:	ldr.w	r1, [r3, #352]	; 0x160
   1d07a:	movs	r3, #16
   1d07c:	add	r1, r3
   1d07e:	bl	1a7b4 <write_extent_buffer@@Base>
   1d082:	ldr.w	r1, [r6, #464]	; 0x1d0
   1d086:	movs	r3, #16
   1d088:	movs	r2, #64	; 0x40
   1d08a:	mov	r0, r4
   1d08c:	bl	1a7b4 <write_extent_buffer@@Base>
   1d090:	ldr.w	r1, [r6, #464]	; 0x1d0
   1d094:	ldr.w	r2, [r6, #200]	; 0xc8
   1d098:	ldr.w	r3, [r6, #204]	; 0xcc
   1d09c:	ldr.w	r1, [r1, #384]	; 0x180
   1d0a0:	adds	r2, r2, r1
   1d0a2:	str.w	r2, [r6, #200]	; 0xc8
   1d0a6:	adc.w	r3, r3, #0
   1d0aa:	str.w	r3, [r6, #204]	; 0xcc
   1d0ae:	cmp	r7, #0
   1d0b0:	bne.n	1d156 <btrfs_check_leaf@@Base+0xc62>
   1d0b2:	ldrd	r2, r3, [r4, #40]	; 0x28
   1d0b6:	cmp	fp, sl
   1d0b8:	ldr	r0, [sp, #44]	; 0x2c
   1d0ba:	add.w	r1, r6, #464	; 0x1d0
   1d0be:	strb.w	r7, [r4, #192]	; 0xc0
   1d0c2:	add.w	r0, r0, #8
   1d0c6:	strd	r2, r3, [sp, #32]
   1d0ca:	strb.w	r7, [r4, #193]	; 0xc1
   1d0ce:	strb.w	r7, [r4, #194]	; 0xc2
   1d0d2:	strb.w	r7, [r4, #195]	; 0xc3
   1d0d6:	blt.n	1d112 <btrfs_check_leaf@@Base+0xc1e>
   1d0d8:	movs	r3, #1
   1d0da:	str	r3, [sp, #12]
   1d0dc:	ldr	r3, [r5, #36]	; 0x24
   1d0de:	adds	r3, #1
   1d0e0:	str	r3, [sp, #8]
   1d0e2:	ldrd	r2, r3, [sp, #32]
   1d0e6:	strd	r2, r3, [sp]
   1d0ea:	mov	r2, r5
   1d0ec:	vmov	r3, s16
   1d0f0:	bl	1aee8 <rb_free_nodes@@Base+0x166>
   1d0f4:	cmp	r0, #0
   1d0f6:	it	ne
   1d0f8:	movne	r9, r0
   1d0fa:	ldr	r0, [r5, #0]
   1d0fc:	bl	1a0a4 <free_extent_buffer@@Base>
   1d100:	ldr	r3, [r5, #36]	; 0x24
   1d102:	str	r4, [r5, #0]
   1d104:	adds	r3, #1
   1d106:	str	r7, [r5, #32]
   1d108:	str	r3, [r5, #36]	; 0x24
   1d10a:	mov	r0, r4
   1d10c:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1d110:	b.n	1cf44 <btrfs_check_leaf@@Base+0xa50>
   1d112:	ldr	r3, [r5, #36]	; 0x24
   1d114:	mov.w	r8, #1
   1d118:	str.w	r8, [sp, #12]
   1d11c:	str	r3, [sp, #8]
   1d11e:	ldrd	r2, r3, [sp, #32]
   1d122:	strd	r2, r3, [sp]
   1d126:	mov	r2, r5
   1d128:	vmov	r3, s16
   1d12c:	bl	1aee8 <rb_free_nodes@@Base+0x166>
   1d130:	cmp	r0, #0
   1d132:	it	ne
   1d134:	movne	r9, r0
   1d136:	ldr	r0, [r5, #0]
   1d138:	bl	1a0a4 <free_extent_buffer@@Base>
   1d13c:	ldr	r3, [r5, #36]	; 0x24
   1d13e:	str	r4, [r5, #0]
   1d140:	str	r7, [r5, #32]
   1d142:	cmp	r3, #0
   1d144:	bne.n	1d10a <btrfs_check_leaf@@Base+0xc16>
   1d146:	vmov	r2, s16
   1d14a:	mov	r3, r8
   1d14c:	mov	r1, r5
   1d14e:	mov	r0, r6
   1d150:	bl	1c2e4 <btrfs_fixup_low_keys@@Base>
   1d154:	b.n	1d10a <btrfs_check_leaf@@Base+0xc16>
   1d156:	ldr	r3, [sp, #32]
   1d158:	mov	r1, sl
   1d15a:	mov	r0, r8
   1d15c:	sub.w	r9, r3, sl
   1d160:	str.w	r9, [r4, #192]	; 0xc0
   1d164:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1d168:	mov	r1, r8
   1d16a:	str	r0, [sp, #32]
   1d16c:	ldr.w	r0, [r6, #464]	; 0x1d0
   1d170:	add.w	r0, r0, #384	; 0x180
   1d174:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1d178:	ldr	r3, [sp, #32]
   1d17a:	movs	r2, #25
   1d17c:	mov	r1, r8
   1d17e:	subs	r3, r3, r0
   1d180:	str	r3, [sp, #60]	; 0x3c
   1d182:	mul.w	r3, r2, sl
   1d186:	str	r0, [sp, #56]	; 0x38
   1d188:	mul.w	r2, r2, r9
   1d18c:	mov	r0, r4
   1d18e:	adds	r3, #101	; 0x65
   1d190:	str	r2, [sp, #0]
   1d192:	movs	r2, #101	; 0x65
   1d194:	bl	1a7c6 <copy_extent_buffer@@Base>
   1d198:	ldr.w	r0, [r6, #464]	; 0x1d0
   1d19c:	ldr	r3, [sp, #56]	; 0x38
   1d19e:	mov	r1, r8
   1d1a0:	add.w	r0, r0, #384	; 0x180
   1d1a4:	ldr	r2, [r0, #0]
   1d1a6:	add	r2, r3
   1d1a8:	ldr	r3, [sp, #32]
   1d1aa:	subs	r2, r2, r3
   1d1ac:	str	r2, [sp, #32]
   1d1ae:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1d1b2:	ldr	r3, [sp, #60]	; 0x3c
   1d1b4:	ldr	r2, [sp, #32]
   1d1b6:	mov	r1, r8
   1d1b8:	str	r3, [sp, #0]
   1d1ba:	add.w	r3, r0, #101	; 0x65
   1d1be:	mov	r0, r4
   1d1c0:	bl	1a7c6 <copy_extent_buffer@@Base>
   1d1c4:	mov	r1, sl
   1d1c6:	mov	r0, r8
   1d1c8:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1d1cc:	ldr.w	r3, [r6, #464]	; 0x1d0
   1d1d0:	add.w	r2, r4, #197	; 0xc5
   1d1d4:	ldr.w	r3, [r3, #384]	; 0x180
   1d1d8:	subs	r3, #101	; 0x65
   1d1da:	subs	r0, r3, r0
   1d1dc:	movs	r3, #0
   1d1de:	cmp	r9, r3
   1d1e0:	bgt.n	1d2a8 <btrfs_check_leaf@@Base+0xdb4>
   1d1e2:	add	r3, sp, #88	; 0x58
   1d1e4:	movs	r2, #0
   1d1e6:	mov	r0, r4
   1d1e8:	str.w	sl, [r8, #192]	; 0xc0
   1d1ec:	mov	r1, r3
   1d1ee:	str	r3, [sp, #32]
   1d1f0:	bl	1adca <rb_free_nodes@@Base+0x48>
   1d1f4:	movs	r2, #1
   1d1f6:	str	r2, [sp, #12]
   1d1f8:	ldr	r2, [r5, #36]	; 0x24
   1d1fa:	ldr	r3, [sp, #32]
   1d1fc:	adds	r2, #1
   1d1fe:	str	r2, [sp, #8]
   1d200:	ldrd	r0, r1, [r4, #40]	; 0x28
   1d204:	mov	r2, r5
   1d206:	strd	r0, r1, [sp]
   1d20a:	add.w	r1, r6, #464	; 0x1d0
   1d20e:	ldr	r0, [sp, #44]	; 0x2c
   1d210:	adds	r0, #8
   1d212:	bl	1aee8 <rb_free_nodes@@Base+0x166>
   1d216:	mov	r9, r0
   1d218:	mov	r0, r4
   1d21a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1d21e:	mov	r0, r8
   1d220:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1d224:	ldr	r3, [r5, #32]
   1d226:	ldr	r0, [pc, #196]	; (1d2ec <btrfs_check_leaf@@Base+0xdf8>)
   1d228:	movw	r2, #2154	; 0x86a
   1d22c:	subs.w	r3, r3, fp
   1d230:	vmov	r1, s17
   1d234:	add	r0, pc
   1d236:	it	ne
   1d238:	movne	r3, #1
   1d23a:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d23e:	cmp	fp, sl
   1d240:	blt.n	1d2b8 <btrfs_check_leaf@@Base+0xdc4>
   1d242:	ldr	r0, [r5, #0]
   1d244:	bl	1a0a4 <free_extent_buffer@@Base>
   1d248:	ldr	r3, [r5, #32]
   1d24a:	str	r4, [r5, #0]
   1d24c:	sub.w	r3, r3, sl
   1d250:	str	r3, [r5, #32]
   1d252:	ldr	r3, [r5, #36]	; 0x24
   1d254:	adds	r3, #1
   1d256:	str	r3, [r5, #36]	; 0x24
   1d258:	ldr	r3, [r5, #32]
   1d25a:	movw	r2, #2165	; 0x875
   1d25e:	ldr	r4, [pc, #144]	; (1d2f0 <btrfs_check_leaf@@Base+0xdfc>)
   1d260:	ldr	r0, [pc, #144]	; (1d2f4 <btrfs_check_leaf@@Base+0xe00>)
   1d262:	add	r4, pc
   1d264:	lsrs	r3, r3, #31
   1d266:	addw	r1, r4, #275	; 0x113
   1d26a:	add	r0, pc
   1d26c:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d270:	ldr	r0, [pc, #132]	; (1d2f8 <btrfs_check_leaf@@Base+0xe04>)
   1d272:	add.w	r1, r4, #264	; 0x108
   1d276:	mov	r3, r9
   1d278:	add	r0, pc
   1d27a:	movw	r2, #2325	; 0x915
   1d27e:	str	r1, [sp, #32]
   1d280:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d284:	cmp	r7, #2
   1d286:	bne.w	1cf44 <btrfs_check_leaf@@Base+0xa50>
   1d28a:	ldr	r3, [sp, #52]	; 0x34
   1d28c:	movw	r2, #2328	; 0x918
   1d290:	ldr	r0, [pc, #104]	; (1d2fc <btrfs_check_leaf@@Base+0xe08>)
   1d292:	subs	r3, #0
   1d294:	ldr	r1, [sp, #32]
   1d296:	add	r0, pc
   1d298:	it	ne
   1d29a:	movne	r3, #1
   1d29c:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d2a0:	ldr	r3, [sp, #52]	; 0x34
   1d2a2:	adds	r3, #1
   1d2a4:	str	r3, [sp, #52]	; 0x34
   1d2a6:	b.n	1ce5a <btrfs_check_leaf@@Base+0x966>
   1d2a8:	ldr.w	r1, [r2, #17]
   1d2ac:	adds	r3, #1
   1d2ae:	adds	r2, #25
   1d2b0:	add	r1, r0
   1d2b2:	str.w	r1, [r2, #-8]
   1d2b6:	b.n	1d1de <btrfs_check_leaf@@Base+0xcea>
   1d2b8:	mov	r0, r4
   1d2ba:	bl	1a0a4 <free_extent_buffer@@Base>
   1d2be:	b.n	1d258 <btrfs_check_leaf@@Base+0xd64>
   1d2c0:	mvn.w	r9, #74	; 0x4a
   1d2c4:	b.n	1cf44 <btrfs_check_leaf@@Base+0xa50>
   1d2c6:	mov	r0, r9
   1d2c8:	add	sp, #116	; 0x74
   1d2ca:	vpop	{d8}
   1d2ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2d2:	nop
   1d2d4:	lsls	r4, r7, #9
   1d2d6:	movs	r0, r0
   1d2d8:	ittt	mi
   1d2da:	movmi	r4, r0
   1d2dc:	asrmi	r4, r5
   1d2de:	movmi	r2, r0
   1d2e0:	lsls	r4, r1
   1d2e2:	movs	r2, r0
   1d2e4:	str	r7, [r7, r0]
   1d2e6:	movs	r2, r0
   1d2e8:	pop	{r3, r5, r6, r7, pc}
   1d2ea:	movs	r4, r0
   1d2ec:	subs	r2, #116	; 0x74
   1d2ee:	movs	r2, r0
   1d2f0:	subs	r5, #26
   1d2f2:	movs	r2, r0
   1d2f4:	subs	r2, #43	; 0x2b
   1d2f6:	movs	r2, r0
   1d2f8:	asrs	r5, r0, #24
   1d2fa:	movs	r2, r0
   1d2fc:	subs	r2, #41	; 0x29
   1d2fe:	movs	r2, r0

0001d300 <btrfs_truncate_item@@Base>:
   1d300:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d304:	sub	sp, #60	; 0x3c
   1d306:	mov	r6, r2
   1d308:	ldr	r2, [pc, #392]	; (1d494 <btrfs_truncate_item@@Base+0x194>)
   1d30a:	str	r3, [sp, #24]
   1d30c:	mov.w	sl, #25
   1d310:	ldr	r3, [pc, #388]	; (1d498 <btrfs_truncate_item@@Base+0x198>)
   1d312:	add	r2, pc
   1d314:	ldr	r4, [r1, #0]
   1d316:	mov	r9, r0
   1d318:	ldr	r7, [r1, #32]
   1d31a:	mov	r8, r1
   1d31c:	ldr	r3, [r2, r3]
   1d31e:	ldr	r3, [r3, #0]
   1d320:	str	r3, [sp, #52]	; 0x34
   1d322:	mov.w	r3, #0
   1d326:	add.w	r3, r4, #96	; 0x60
   1d32a:	str	r3, [sp, #16]
   1d32c:	mla	r3, sl, r7, r3
   1d330:	add.w	r2, r3, #101	; 0x65
   1d334:	str	r2, [sp, #12]
   1d336:	ldr.w	r5, [r3, #122]	; 0x7a
   1d33a:	cmp	r6, r5
   1d33c:	beq.w	1d478 <btrfs_truncate_item@@Base+0x178>
   1d340:	ldr.w	r0, [r0, #464]	; 0x1d0
   1d344:	mov	r1, r4
   1d346:	ldr.w	fp, [r4, #192]	; 0xc0
   1d34a:	add.w	r0, r0, #384	; 0x180
   1d34e:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1d352:	ldr	r3, [sp, #12]
   1d354:	ldr	r1, [pc, #324]	; (1d49c <btrfs_truncate_item@@Base+0x19c>)
   1d356:	mov.w	r2, #2480	; 0x9b0
   1d35a:	ldr.w	r3, [r3, #17]
   1d35e:	add	r1, pc
   1d360:	add.w	r1, r1, #290	; 0x122
   1d364:	str	r1, [sp, #28]
   1d366:	str	r3, [sp, #20]
   1d368:	subs	r3, r5, r6
   1d36a:	str	r3, [sp, #8]
   1d36c:	lsrs	r3, r7, #31
   1d36e:	str	r0, [sp, #4]
   1d370:	ldr	r0, [pc, #300]	; (1d4a0 <btrfs_truncate_item@@Base+0x1a0>)
   1d372:	add	r0, pc
   1d374:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d378:	cmp	r7, fp
   1d37a:	ldr	r0, [pc, #296]	; (1d4a4 <btrfs_truncate_item@@Base+0x1a4>)
   1d37c:	movw	r2, #2481	; 0x9b1
   1d380:	ite	cc
   1d382:	movcc	r3, #0
   1d384:	movcs	r3, #1
   1d386:	add	r0, pc
   1d388:	ldr	r1, [sp, #28]
   1d38a:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d38e:	add.w	r0, r4, #197	; 0xc5
   1d392:	mov	r3, r7
   1d394:	cmp	r3, fp
   1d396:	bcc.n	1d3ec <btrfs_truncate_item@@Base+0xec>
   1d398:	ldr	r3, [sp, #4]
   1d39a:	add.w	sl, r3, #101	; 0x65
   1d39e:	ldr	r3, [sp, #8]
   1d3a0:	add.w	fp, r3, sl
   1d3a4:	ldr	r3, [sp, #24]
   1d3a6:	cbz	r3, 1d400 <btrfs_truncate_item@@Base+0x100>
   1d3a8:	ldr	r3, [sp, #20]
   1d3aa:	mov	r1, fp
   1d3ac:	ldr	r2, [sp, #4]
   1d3ae:	mov	r0, r4
   1d3b0:	add	r3, r6
   1d3b2:	subs	r3, r3, r2
   1d3b4:	mov	r2, sl
   1d3b6:	bl	1a810 <memmove_extent_buffer@@Base>
   1d3ba:	ldr	r3, [sp, #12]
   1d3bc:	mov	r0, r4
   1d3be:	str.w	r6, [r3, #21]
   1d3c2:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1d3c6:	mov	r0, r4
   1d3c8:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1d3cc:	cmp	r0, #0
   1d3ce:	bge.n	1d478 <btrfs_truncate_item@@Base+0x178>
   1d3d0:	mov	r0, r4
   1d3d2:	bl	284a8 <btrfs_print_leaf@@Base>
   1d3d6:	ldr	r1, [pc, #208]	; (1d4a8 <btrfs_truncate_item@@Base+0x1a8>)
   1d3d8:	ldr	r0, [pc, #208]	; (1d4ac <btrfs_truncate_item@@Base+0x1ac>)
   1d3da:	movs	r3, #1
   1d3dc:	add	r1, pc
   1d3de:	movw	r2, #2542	; 0x9ee
   1d3e2:	add.w	r1, r1, #290	; 0x122
   1d3e6:	add	r0, pc
   1d3e8:	bl	1ae5e <rb_free_nodes@@Base+0xdc>
   1d3ec:	mla	r1, sl, r3, r0
   1d3f0:	ldr	r2, [sp, #8]
   1d3f2:	adds	r3, #1
   1d3f4:	ldr.w	ip, [r1, #17]
   1d3f8:	add	r2, ip
   1d3fa:	str.w	r2, [r1, #17]
   1d3fe:	b.n	1d394 <btrfs_truncate_item@@Base+0x94>
   1d400:	add	r1, sp, #32
   1d402:	mov	r2, r7
   1d404:	mov	r0, r4
   1d406:	bl	1adca <rb_free_nodes@@Base+0x48>
   1d40a:	ldrb.w	r3, [sp, #40]	; 0x28
   1d40e:	cmp	r3, #108	; 0x6c
   1d410:	bne.n	1d42e <btrfs_truncate_item@@Base+0x12e>
   1d412:	ldr	r3, [sp, #12]
   1d414:	ldr.w	r1, [r3, #17]
   1d418:	ldr	r3, [sp, #16]
   1d41a:	adds	r1, #101	; 0x65
   1d41c:	subs	r2, r1, r5
   1d41e:	add	r2, r6
   1d420:	add	r3, r2
   1d422:	ldrb	r3, [r3, #20]
   1d424:	cbnz	r3, 1d42e <btrfs_truncate_item@@Base+0x12e>
   1d426:	movs	r3, #21
   1d428:	mov	r0, r4
   1d42a:	bl	1a810 <memmove_extent_buffer@@Base>
   1d42e:	ldr	r2, [sp, #4]
   1d430:	mov	r1, fp
   1d432:	ldr	r3, [sp, #20]
   1d434:	mov	r0, r4
   1d436:	add	r5, sp, #32
   1d438:	subs	r3, r3, r2
   1d43a:	mov	r2, sl
   1d43c:	bl	1a810 <memmove_extent_buffer@@Base>
   1d440:	ldr.w	r2, [sp, #41]	; 0x29
   1d444:	ldr.w	r3, [sp, #45]	; 0x2d
   1d448:	mov	r0, r4
   1d44a:	mov	r1, r2
   1d44c:	mov	r2, r3
   1d44e:	ldr	r3, [sp, #8]
   1d450:	adds	r1, r1, r3
   1d452:	str.w	r1, [sp, #41]	; 0x29
   1d456:	adc.w	r2, r2, #0
   1d45a:	mov	r1, r5
   1d45c:	str.w	r2, [sp, #45]	; 0x2d
   1d460:	mov	r2, r7
   1d462:	bl	1adbe <rb_free_nodes@@Base+0x3c>
   1d466:	cmp	r7, #0
   1d468:	bne.n	1d3ba <btrfs_truncate_item@@Base+0xba>
   1d46a:	movs	r3, #1
   1d46c:	mov	r2, r5
   1d46e:	mov	r1, r8
   1d470:	mov	r0, r9
   1d472:	bl	1c2e4 <btrfs_fixup_low_keys@@Base>
   1d476:	b.n	1d3ba <btrfs_truncate_item@@Base+0xba>
   1d478:	ldr	r2, [pc, #52]	; (1d4b0 <btrfs_truncate_item@@Base+0x1b0>)
   1d47a:	ldr	r3, [pc, #28]	; (1d498 <btrfs_truncate_item@@Base+0x198>)
   1d47c:	add	r2, pc
   1d47e:	ldr	r3, [r2, r3]
   1d480:	ldr	r2, [r3, #0]
   1d482:	ldr	r3, [sp, #52]	; 0x34
   1d484:	eors	r2, r3
   1d486:	beq.n	1d48c <btrfs_truncate_item@@Base+0x18c>
   1d488:	blx	88e4 <__stack_chk_fail@plt>
   1d48c:	movs	r0, #0
   1d48e:	add	sp, #60	; 0x3c
   1d490:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d494:	rev	r6, r3
   1d496:	movs	r4, r0
   1d498:	lsls	r4, r7, #9
   1d49a:	movs	r0, r0
   1d49c:	subs	r4, #30
   1d49e:	movs	r2, r0
   1d4a0:	subs	r1, #94	; 0x5e
   1d4a2:	movs	r2, r0
   1d4a4:	subs	r1, #83	; 0x53
   1d4a6:	movs	r2, r0
   1d4a8:	subs	r3, #160	; 0xa0
   1d4aa:	movs	r2, r0
   1d4ac:	ldr	r3, [pc, #316]	; (1d5ec <btrfs_extend_item@@Base+0x138>)
   1d4ae:	movs	r2, r0
   1d4b0:			; <UNDEFINED> instruction: 0xb8b4
   1d4b2:	movs	r4, r0

0001d4b4 <btrfs_extend_item@@Base>:
   1d4b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d4b8:	mov	r5, r1
   1d4ba:	ldr	r4, [r1, #0]
   1d4bc:	sub	sp, #20
   1d4be:	ldr.w	r0, [r0, #464]	; 0x1d0
   1d4c2:	mov	r6, r2
   1d4c4:	ldr.w	fp, [pc, #256]	; 1d5c8 <btrfs_extend_item@@Base+0x114>
   1d4c8:	mov	r1, r4
   1d4ca:	add.w	r0, r0, #384	; 0x180
   1d4ce:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1d4d2:	ldr.w	sl, [r4, #192]	; 0xc0
   1d4d6:	add	fp, pc
   1d4d8:	mov	r7, r0
   1d4da:	mov	r0, r4
   1d4dc:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1d4e0:	cmp	r0, r6
   1d4e2:	bcs.n	1d500 <btrfs_extend_item@@Base+0x4c>
   1d4e4:	mov	r0, r4
   1d4e6:	bl	284a8 <btrfs_print_leaf@@Base>
   1d4ea:	ldr	r1, [pc, #224]	; (1d5cc <btrfs_extend_item@@Base+0x118>)
   1d4ec:	ldr	r0, [pc, #224]	; (1d5d0 <btrfs_extend_item@@Base+0x11c>)
   1d4ee:	movs	r3, #1
   1d4f0:	add	r1, pc
   1d4f2:	movw	r2, #2567	; 0xa07
   1d4f6:	add.w	r1, r1, #310	; 0x136
   1d4fa:	add	r0, pc
   1d4fc:	bl	1ae5e <rb_free_nodes@@Base+0xdc>
   1d500:	ldr	r5, [r5, #32]
   1d502:	mov	r0, r4
   1d504:	ldr.w	r8, [pc, #204]	; 1d5d4 <btrfs_extend_item@@Base+0x120>
   1d508:	mov	r1, r5
   1d50a:	add	r8, pc
   1d50c:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1d510:	add.w	r8, r8, #310	; 0x136
   1d514:	lsrs	r3, r5, #31
   1d516:	movw	r2, #2572	; 0xa0c
   1d51a:	mov	r1, r8
   1d51c:	mov	r9, r0
   1d51e:	ldr	r0, [pc, #184]	; (1d5d8 <btrfs_extend_item@@Base+0x124>)
   1d520:	add	r0, pc
   1d522:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d526:	cmp	r5, sl
   1d528:	str	r5, [sp, #12]
   1d52a:	bcs.n	1d582 <btrfs_extend_item@@Base+0xce>
   1d52c:	add.w	r1, r4, #197	; 0xc5
   1d530:	movs	r0, #25
   1d532:	cmp	r5, sl
   1d534:	bne.n	1d5ae <btrfs_extend_item@@Base+0xfa>
   1d536:	add.w	r2, r7, #101	; 0x65
   1d53a:	sub.w	r3, r9, r7
   1d53e:	subs	r1, r2, r6
   1d540:	mov	r0, r4
   1d542:	bl	1a810 <memmove_extent_buffer@@Base>
   1d546:	ldr	r2, [sp, #12]
   1d548:	movs	r3, #25
   1d54a:	mov	r0, r4
   1d54c:	mla	r3, r3, r2, r4
   1d550:	ldr.w	r2, [r3, #218]	; 0xda
   1d554:	add	r6, r2
   1d556:	str.w	r6, [r3, #218]	; 0xda
   1d55a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1d55e:	mov	r0, r4
   1d560:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1d564:	cmp	r0, #0
   1d566:	bge.n	1d5c0 <btrfs_extend_item@@Base+0x10c>
   1d568:	mov	r0, r4
   1d56a:	bl	284a8 <btrfs_print_leaf@@Base>
   1d56e:	ldr	r1, [pc, #108]	; (1d5dc <btrfs_extend_item@@Base+0x128>)
   1d570:	ldr	r0, [pc, #108]	; (1d5e0 <btrfs_extend_item@@Base+0x12c>)
   1d572:	movs	r3, #1
   1d574:	add	r1, pc
   1d576:	movw	r2, #2604	; 0xa2c
   1d57a:	add.w	r1, r1, #310	; 0x136
   1d57e:	add	r0, pc
   1d580:	b.n	1d4fc <btrfs_extend_item@@Base+0x48>
   1d582:	mov	r0, r4
   1d584:	bl	284a8 <btrfs_print_leaf@@Base>
   1d588:	ldr	r3, [pc, #88]	; (1d5e4 <btrfs_extend_item@@Base+0x130>)
   1d58a:	ldr	r2, [pc, #92]	; (1d5e8 <btrfs_extend_item@@Base+0x134>)
   1d58c:	movs	r1, #1
   1d58e:	ldr.w	r0, [fp, r3]
   1d592:	add	r2, pc
   1d594:	mov	r3, r5
   1d596:	str.w	sl, [sp]
   1d59a:	ldr	r0, [r0, #0]
   1d59c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1d5a0:	ldr	r0, [pc, #72]	; (1d5ec <btrfs_extend_item@@Base+0x138>)
   1d5a2:	movs	r3, #1
   1d5a4:	mov.w	r2, #2576	; 0xa10
   1d5a8:	add	r0, pc
   1d5aa:	mov	r1, r8
   1d5ac:	b.n	1d4fc <btrfs_extend_item@@Base+0x48>
   1d5ae:	mla	r2, r0, r5, r1
   1d5b2:	adds	r5, #1
   1d5b4:	ldr.w	r3, [r2, #17]
   1d5b8:	subs	r3, r3, r6
   1d5ba:	str.w	r3, [r2, #17]
   1d5be:	b.n	1d532 <btrfs_extend_item@@Base+0x7e>
   1d5c0:	movs	r0, #0
   1d5c2:	add	sp, #20
   1d5c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d5c8:			; <UNDEFINED> instruction: 0xb85a
   1d5ca:	movs	r4, r0
   1d5cc:	subs	r2, #140	; 0x8c
   1d5ce:	movs	r2, r0
   1d5d0:	ldr	r2, [pc, #236]	; (1d6c0 <btrfs_search_slot@@Base>)
   1d5d2:	movs	r2, r0
   1d5d4:	subs	r2, #114	; 0x72
   1d5d6:	movs	r2, r0
   1d5d8:	adds	r7, #176	; 0xb0
   1d5da:	movs	r2, r0
   1d5dc:	subs	r2, #8
   1d5de:	movs	r2, r0
   1d5e0:	ldr	r1, [pc, #732]	; (1d8c0 <btrfs_search_slot@@Base+0x200>)
   1d5e2:	movs	r2, r0
   1d5e4:	lsls	r4, r1, #10
   1d5e6:	movs	r0, r0
   1d5e8:	adds	r7, #87	; 0x57
   1d5ea:	movs	r2, r0
   1d5ec:	ldr	r1, [pc, #564]	; (1d824 <btrfs_search_slot@@Base+0x164>)
   1d5ee:	movs	r2, r0

0001d5f0 <btrfs_del_ptr@@Base>:
   1d5f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1d5f4:	mov	r8, r2
   1d5f6:	ldr	r2, [pc, #180]	; (1d6ac <btrfs_del_ptr@@Base+0xbc>)
   1d5f8:	mov	r5, r3
   1d5fa:	ldr	r3, [pc, #180]	; (1d6b0 <btrfs_del_ptr@@Base+0xc0>)
   1d5fc:	sub	sp, #28
   1d5fe:	add	r2, pc
   1d600:	ldr.w	r4, [r1, r8, lsl #2]
   1d604:	mov	r6, r0
   1d606:	mov	r7, r1
   1d608:	ldr	r3, [r2, r3]
   1d60a:	ldr	r3, [r3, #0]
   1d60c:	str	r3, [sp, #20]
   1d60e:	mov.w	r3, #0
   1d612:	ldr.w	r3, [r4, #192]	; 0xc0
   1d616:	add.w	r9, r3, #4294967295	; 0xffffffff
   1d61a:	cmp	r9, r5
   1d61c:	bls.n	1d636 <btrfs_del_ptr@@Base+0x46>
   1d61e:	subs	r3, r3, r5
   1d620:	add.w	r1, r5, r5, lsl #5
   1d624:	add.w	r2, r1, #134	; 0x86
   1d628:	mov	r0, r4
   1d62a:	add.w	r3, r3, r3, lsl #5
   1d62e:	adds	r1, #101	; 0x65
   1d630:	subs	r3, #33	; 0x21
   1d632:	bl	1a810 <memmove_extent_buffer@@Base>
   1d636:	str.w	r9, [r4, #192]	; 0xc0
   1d63a:	cmp.w	r9, #0
   1d63e:	bne.n	1d682 <btrfs_del_ptr@@Base+0x92>
   1d640:	ldr	r3, [r6, #0]
   1d642:	cmp	r3, r4
   1d644:	bne.n	1d682 <btrfs_del_ptr@@Base+0x92>
   1d646:	ldrb.w	r3, [r4, #196]	; 0xc4
   1d64a:	movw	r2, #2775	; 0xad7
   1d64e:	ldr	r1, [pc, #100]	; (1d6b4 <btrfs_del_ptr@@Base+0xc4>)
   1d650:	subs	r3, #1
   1d652:	ldr	r0, [pc, #100]	; (1d6b8 <btrfs_del_ptr@@Base+0xc8>)
   1d654:	add	r1, pc
   1d656:	add.w	r1, r1, #328	; 0x148
   1d65a:	add	r0, pc
   1d65c:	it	ne
   1d65e:	movne	r3, #1
   1d660:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d664:	strb.w	r9, [r4, #196]	; 0xc4
   1d668:	mov	r0, r4
   1d66a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1d66e:	ldr	r2, [pc, #76]	; (1d6bc <btrfs_del_ptr@@Base+0xcc>)
   1d670:	ldr	r3, [pc, #60]	; (1d6b0 <btrfs_del_ptr@@Base+0xc0>)
   1d672:	add	r2, pc
   1d674:	ldr	r3, [r2, r3]
   1d676:	ldr	r2, [r3, #0]
   1d678:	ldr	r3, [sp, #20]
   1d67a:	eors	r2, r3
   1d67c:	beq.n	1d6a2 <btrfs_del_ptr@@Base+0xb2>
   1d67e:	blx	88e4 <__stack_chk_fail@plt>
   1d682:	cmp	r5, #0
   1d684:	bne.n	1d668 <btrfs_del_ptr@@Base+0x78>
   1d686:	mov	r2, r5
   1d688:	mov	r5, sp
   1d68a:	mov	r1, r5
   1d68c:	mov	r0, r4
   1d68e:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1d692:	add.w	r3, r8, #1
   1d696:	mov	r2, r5
   1d698:	mov	r1, r7
   1d69a:	mov	r0, r6
   1d69c:	bl	1c2e4 <btrfs_fixup_low_keys@@Base>
   1d6a0:	b.n	1d668 <btrfs_del_ptr@@Base+0x78>
   1d6a2:	movs	r0, #0
   1d6a4:	add	sp, #28
   1d6a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1d6aa:	nop
   1d6ac:			; <UNDEFINED> instruction: 0xb732
   1d6ae:	movs	r4, r0
   1d6b0:	lsls	r4, r7, #9
   1d6b2:	movs	r0, r0
   1d6b4:	subs	r1, #40	; 0x28
   1d6b6:	movs	r2, r0
   1d6b8:	adds	r6, #174	; 0xae
   1d6ba:	movs	r2, r0
   1d6bc:			; <UNDEFINED> instruction: 0xb6be
   1d6be:	movs	r4, r0

0001d6c0 <btrfs_search_slot@@Base>:
   1d6c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d6c4:	mov	fp, r3
   1d6c6:	vpush	{d8-d9}
   1d6ca:	mov	sl, r0
   1d6cc:	ldr.w	r3, [pc, #1208]	; 1db88 <btrfs_search_slot@@Base+0x4c8>
   1d6d0:	mov	r4, r1
   1d6d2:	sub	sp, #140	; 0x8c
   1d6d4:	str	r2, [sp, #56]	; 0x38
   1d6d6:	ldr.w	r2, [pc, #1204]	; 1db8c <btrfs_search_slot@@Base+0x4cc>
   1d6da:	add	r2, pc
   1d6dc:	ldr	r3, [r2, r3]
   1d6de:	ldr	r3, [r3, #0]
   1d6e0:	str	r3, [sp, #132]	; 0x84
   1d6e2:	mov.w	r3, #0
   1d6e6:	ldrsb.w	r3, [fp, #64]	; 0x40
   1d6ea:	str	r3, [sp, #88]	; 0x58
   1d6ec:	ldr.w	r3, [r1, #464]	; 0x1d0
   1d6f0:	vmov	s16, r3
   1d6f4:	ldrb.w	r3, [fp, #65]	; 0x41
   1d6f8:	str	r3, [sp, #60]	; 0x3c
   1d6fa:	cmp	r3, #0
   1d6fc:	beq.n	1d7aa <btrfs_search_slot@@Base+0xea>
   1d6fe:	ldr	r3, [sp, #192]	; 0xc0
   1d700:	cmp	r3, #0
   1d702:	ite	le
   1d704:	movle	r3, #0
   1d706:	movgt	r3, #1
   1d708:	ldr.w	r1, [pc, #1156]	; 1db90 <btrfs_search_slot@@Base+0x4d0>
   1d70c:	movw	r2, #1173	; 0x495
   1d710:	ldr.w	r0, [pc, #1152]	; 1db94 <btrfs_search_slot@@Base+0x4d4>
   1d714:	add	r1, pc
   1d716:	add.w	r1, r1, #342	; 0x156
   1d71a:	add	r0, pc
   1d71c:	str	r1, [sp, #40]	; 0x28
   1d71e:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1d722:	ldr.w	r3, [fp]
   1d726:	movw	r2, #1174	; 0x496
   1d72a:	ldr.w	r0, [pc, #1132]	; 1db98 <btrfs_search_slot@@Base+0x4d8>
   1d72e:	subs	r3, #0
   1d730:	ldr	r1, [sp, #40]	; 0x28
   1d732:	add	r0, pc
   1d734:	it	ne
   1d736:	movne	r3, #1
   1d738:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1d73c:	ldr	r3, [sp, #192]	; 0xc0
   1d73e:	ldr	r2, [sp, #196]	; 0xc4
   1d740:	subs	r3, #0
   1d742:	it	ne
   1d744:	movne	r3, #1
   1d746:	cmp	r2, #0
   1d748:	it	ne
   1d74a:	movne	r3, #0
   1d74c:	vmov	s19, r3
   1d750:	ldr	r3, [r4, #0]
   1d752:	ldr	r2, [r3, #80]	; 0x50
   1d754:	str	r3, [sp, #96]	; 0x60
   1d756:	adds	r2, #1
   1d758:	str	r2, [r3, #80]	; 0x50
   1d75a:	ldr.w	r3, [pc, #1088]	; 1db9c <btrfs_search_slot@@Base+0x4dc>
   1d75e:	add	r3, pc
   1d760:	str	r3, [sp, #92]	; 0x5c
   1d762:	ldr	r2, [sp, #96]	; 0x60
   1d764:	cmp	r2, #0
   1d766:	beq.w	1d948 <btrfs_search_slot@@Base+0x288>
   1d76a:	ldr	r3, [sp, #196]	; 0xc4
   1d76c:	ldrb.w	r5, [r2, #196]	; 0xc4
   1d770:	cbz	r3, 1d7ae <btrfs_search_slot@@Base+0xee>
   1d772:	add.w	r3, fp, r5, lsl #2
   1d776:	add	r1, sp, #96	; 0x60
   1d778:	str	r1, [sp, #4]
   1d77a:	mov	r0, sl
   1d77c:	ldr	r1, [r3, #36]	; 0x24
   1d77e:	str	r1, [sp, #0]
   1d780:	mov	r1, r4
   1d782:	ldr	r3, [r3, #4]
   1d784:	bl	1bd08 <btrfs_cow_block@@Base>
   1d788:	mov	r9, r0
   1d78a:	cbz	r0, 1d7ae <btrfs_search_slot@@Base+0xee>
   1d78c:	ldr	r0, [sp, #96]	; 0x60
   1d78e:	bl	1a0a4 <free_extent_buffer@@Base>
   1d792:	ldr.w	r2, [pc, #1036]	; 1dba0 <btrfs_search_slot@@Base+0x4e0>
   1d796:	ldr	r3, [pc, #1008]	; (1db88 <btrfs_search_slot@@Base+0x4c8>)
   1d798:	add	r2, pc
   1d79a:	ldr	r3, [r2, r3]
   1d79c:	ldr	r2, [r3, #0]
   1d79e:	ldr	r3, [sp, #132]	; 0x84
   1d7a0:	eors	r2, r3
   1d7a2:	beq.w	1e22e <btrfs_search_slot@@Base+0xb6e>
   1d7a6:	blx	88e4 <__stack_chk_fail@plt>
   1d7aa:	ldr	r3, [sp, #60]	; 0x3c
   1d7ac:	b.n	1d708 <btrfs_search_slot@@Base+0x48>
   1d7ae:	ldr	r3, [sp, #92]	; 0x5c
   1d7b0:	movw	r2, #1194	; 0x4aa
   1d7b4:	ldr	r0, [pc, #1004]	; (1dba4 <btrfs_search_slot@@Base+0x4e4>)
   1d7b6:	add.w	r1, r3, #342	; 0x156
   1d7ba:	vmov	r3, s19
   1d7be:	add	r0, pc
   1d7c0:	str	r1, [sp, #40]	; 0x28
   1d7c2:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d7c6:	ldr	r3, [sp, #96]	; 0x60
   1d7c8:	ldrb.w	r3, [r3, #196]	; 0xc4
   1d7cc:	cmp	r3, r5
   1d7ce:	beq.n	1d7e0 <btrfs_search_slot@@Base+0x120>
   1d7d0:	ldr	r0, [pc, #980]	; (1dba8 <btrfs_search_slot@@Base+0x4e8>)
   1d7d2:	movs	r3, #1
   1d7d4:	ldr	r1, [sp, #40]	; 0x28
   1d7d6:	movw	r2, #1196	; 0x4ac
   1d7da:	add	r0, pc
   1d7dc:	bl	1aea2 <rb_free_nodes@@Base+0x120>
   1d7e0:	ldr	r3, [sp, #96]	; 0x60
   1d7e2:	ldrb.w	r2, [r3, #196]	; 0xc4
   1d7e6:	str.w	r3, [fp, r2, lsl #2]
   1d7ea:	add.w	r8, fp, r2, lsl #2
   1d7ee:	ldrb.w	r3, [fp, #67]	; 0x43
   1d7f2:	strd	r2, r2, [sp, #40]	; 0x28
   1d7f6:	cmp	r3, #0
   1d7f8:	beq.n	1d864 <btrfs_search_slot@@Base+0x1a4>
   1d7fa:	ldr	r2, [sp, #44]	; 0x2c
   1d7fc:	add	r3, sp, #100	; 0x64
   1d7fe:	ldr	r1, [sp, #56]	; 0x38
   1d800:	ldr	r0, [sp, #96]	; 0x60
   1d802:	bl	1c00c <btrfs_bin_search@@Base>
   1d806:	ldr	r2, [sp, #44]	; 0x2c
   1d808:	ldr	r3, [sp, #100]	; 0x64
   1d80a:	mov	r9, r0
   1d80c:	cmp	r2, #0
   1d80e:	bne.n	1d87a <btrfs_search_slot@@Base+0x1ba>
   1d810:	str.w	r3, [fp, #32]
   1d814:	ldr	r3, [sp, #192]	; 0xc0
   1d816:	cmp	r3, #0
   1d818:	ble.n	1d792 <btrfs_search_slot@@Base+0xd2>
   1d81a:	ldr	r0, [sp, #96]	; 0x60
   1d81c:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1d820:	ldr	r3, [sp, #192]	; 0xc0
   1d822:	cmp	r0, r3
   1d824:	bge.n	1d792 <btrfs_search_slot@@Base+0xd2>
   1d826:	clz	r3, r9
   1d82a:	mov	r1, r4
   1d82c:	ldr	r2, [sp, #56]	; 0x38
   1d82e:	mov	r0, sl
   1d830:	lsrs	r3, r3, #5
   1d832:	str	r3, [sp, #4]
   1d834:	ldr	r3, [sp, #192]	; 0xc0
   1d836:	str	r3, [sp, #0]
   1d838:	mov	r3, fp
   1d83a:	bl	1cdd4 <btrfs_check_leaf@@Base+0x8e0>
   1d83e:	ldr	r1, [pc, #876]	; (1dbac <btrfs_search_slot@@Base+0x4ec>)
   1d840:	movw	r2, #1246	; 0x4de
   1d844:	add	r1, pc
   1d846:	add.w	r1, r1, #342	; 0x156
   1d84a:	cmp	r0, #0
   1d84c:	mov	r4, r0
   1d84e:	ldr	r0, [pc, #864]	; (1dbb0 <btrfs_search_slot@@Base+0x4f0>)
   1d850:	ite	le
   1d852:	movle	r3, #0
   1d854:	movgt	r3, #1
   1d856:	add	r0, pc
   1d858:	cmp	r4, #0
   1d85a:	it	ne
   1d85c:	movne	r9, r4
   1d85e:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d862:	b.n	1d792 <btrfs_search_slot@@Base+0xd2>
   1d864:	vmov	r0, s16
   1d868:	mov	r1, fp
   1d86a:	ldr	r2, [sp, #44]	; 0x2c
   1d86c:	bl	1c7b4 <btrfs_check_leaf@@Base+0x2c0>
   1d870:	cmp	r0, #0
   1d872:	beq.n	1d7fa <btrfs_search_slot@@Base+0x13a>
   1d874:	mov.w	r9, #4294967295	; 0xffffffff
   1d878:	b.n	1d792 <btrfs_search_slot@@Base+0xd2>
   1d87a:	cbz	r0, 1d886 <btrfs_search_slot@@Base+0x1c6>
   1d87c:	cmp	r3, #0
   1d87e:	itt	gt
   1d880:	addgt.w	r3, r3, #4294967295	; 0xffffffff
   1d884:	strgt	r3, [sp, #100]	; 0x64
   1d886:	ldr	r3, [sp, #100]	; 0x64
   1d888:	str	r3, [sp, #48]	; 0x30
   1d88a:	str.w	r3, [r8, #32]
   1d88e:	ldrb.w	r3, [fp, #66]	; 0x42
   1d892:	cbnz	r3, 1d89c <btrfs_search_slot@@Base+0x1dc>
   1d894:	ldr	r3, [sp, #192]	; 0xc0
   1d896:	cmp	r3, #0
   1d898:	ble.w	1dcea <btrfs_search_slot@@Base+0x62a>
   1d89c:	vmov	r3, s16
   1d8a0:	ldr.w	r2, [r3, #384]	; 0x180
   1d8a4:	ldr	r3, [pc, #732]	; (1db84 <btrfs_search_slot@@Base+0x4c4>)
   1d8a6:	subs	r2, #101	; 0x65
   1d8a8:	umull	r2, r3, r2, r3
   1d8ac:	ldr	r2, [sp, #96]	; 0x60
   1d8ae:	ldr.w	r2, [r2, #192]	; 0xc0
   1d8b2:	lsrs	r3, r3, #3
   1d8b4:	subs	r3, #3
   1d8b6:	cmp	r3, r2
   1d8b8:	bhi.w	1dcea <btrfs_search_slot@@Base+0x62a>
   1d8bc:	ldr	r3, [sp, #40]	; 0x28
   1d8be:	ldr	r7, [pc, #756]	; (1dbb4 <btrfs_search_slot@@Base+0x4f4>)
   1d8c0:	ldr.w	r6, [fp, r3, lsl #2]
   1d8c4:	add	r7, pc
   1d8c6:	ldrd	r2, r3, [sl, #8]
   1d8ca:	ldr.w	r1, [r6, #180]	; 0xb4
   1d8ce:	ldr.w	r0, [r6, #176]	; 0xb0
   1d8d2:	cmp	r1, r3
   1d8d4:	add.w	r1, r7, #360	; 0x168
   1d8d8:	it	eq
   1d8da:	cmpeq	r0, r2
   1d8dc:	ldr	r0, [pc, #728]	; (1dbb8 <btrfs_search_slot@@Base+0x4f8>)
   1d8de:	movw	r2, #1668	; 0x684
   1d8e2:	ite	ne
   1d8e4:	movne	r3, #1
   1d8e6:	moveq	r3, #0
   1d8e8:	add	r0, pc
   1d8ea:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1d8ee:	ldr	r3, [r4, #0]
   1d8f0:	cmp	r6, r3
   1d8f2:	bne.n	1d94e <btrfs_search_slot@@Base+0x28e>
   1d8f4:	ldr	r3, [sp, #44]	; 0x2c
   1d8f6:	mov	r2, fp
   1d8f8:	mov	r1, r4
   1d8fa:	mov	r0, sl
   1d8fc:	adds	r3, #1
   1d8fe:	bl	1b346 <add_root_to_dirty_list@@Base+0x2e>
   1d902:	mov	r9, r0
   1d904:	cmp	r0, #0
   1d906:	beq.w	1da7c <btrfs_search_slot@@Base+0x3bc>
   1d90a:	ldr	r1, [pc, #688]	; (1dbbc <btrfs_search_slot@@Base+0x4fc>)
   1d90c:	cmp.w	r9, #0
   1d910:	ldr	r0, [pc, #684]	; (1dbc0 <btrfs_search_slot@@Base+0x500>)
   1d912:	movw	r2, #1211	; 0x4bb
   1d916:	add	r1, pc
   1d918:	ite	le
   1d91a:	movle	r3, #0
   1d91c:	movgt	r3, #1
   1d91e:	add.w	r1, r1, #342	; 0x156
   1d922:	add	r0, pc
   1d924:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1d928:	cmp.w	r9, #0
   1d92c:	bne.w	1d792 <btrfs_search_slot@@Base+0xd2>
   1d930:	ldr	r3, [sp, #40]	; 0x28
   1d932:	ldr.w	r3, [fp, r3, lsl #2]
   1d936:	str	r3, [sp, #96]	; 0x60
   1d938:	ldr.w	r3, [r8, #32]
   1d93c:	str	r3, [sp, #100]	; 0x64
   1d93e:	ldr	r3, [sp, #60]	; 0x3c
   1d940:	ldr	r2, [sp, #44]	; 0x2c
   1d942:	cmp	r3, r2
   1d944:	bne.w	1e1f2 <btrfs_search_slot@@Base+0xb32>
   1d948:	mov.w	r9, #1
   1d94c:	b.n	1d792 <btrfs_search_slot@@Base+0xd2>
   1d94e:	movs	r3, #0
   1d950:	strd	r3, r3, [sp, #104]	; 0x68
   1d954:	ldr.w	r3, [r8, #32]
   1d958:	ldr.w	r9, [r4, #464]	; 0x1d0
   1d95c:	str	r3, [sp, #48]	; 0x30
   1d95e:	ldr	r3, [sp, #40]	; 0x28
   1d960:	ldr.w	r5, [fp, r3, lsl #2]
   1d964:	ldrd	r2, r3, [sl, #8]
   1d968:	ldr.w	r1, [r5, #180]	; 0xb4
   1d96c:	ldr.w	r0, [r5, #176]	; 0xb0
   1d970:	cmp	r1, r3
   1d972:	addw	r1, r7, #371	; 0x173
   1d976:	it	eq
   1d978:	cmpeq	r0, r2
   1d97a:	ldr	r0, [pc, #584]	; (1dbc4 <btrfs_search_slot@@Base+0x504>)
   1d97c:	mov.w	r2, #932	; 0x3a4
   1d980:	ite	ne
   1d982:	movne	r3, #1
   1d984:	moveq	r3, #0
   1d986:	add	r0, pc
   1d988:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1d98c:	ldr	r3, [sp, #44]	; 0x2c
   1d98e:	cmp	r3, #6
   1d990:	ble.n	1d99a <btrfs_search_slot@@Base+0x2da>
   1d992:	ldr	r3, [sp, #40]	; 0x28
   1d994:	ldr.w	r6, [fp, r3, lsl #2]
   1d998:	b.n	1da7c <btrfs_search_slot@@Base+0x3bc>
   1d99a:	ldr.w	r6, [r8, #4]
   1d99e:	cmp	r6, #0
   1d9a0:	beq.n	1d992 <btrfs_search_slot@@Base+0x2d2>
   1d9a2:	ldr.w	r3, [r8, #36]	; 0x24
   1d9a6:	mov	r1, r6
   1d9a8:	mov	r0, r9
   1d9aa:	subs	r7, r3, #1
   1d9ac:	str	r3, [sp, #52]	; 0x34
   1d9ae:	mov	r2, r7
   1d9b0:	bl	1c092 <read_node_slot@@Base>
   1d9b4:	mov	r2, r0
   1d9b6:	str	r0, [sp, #108]	; 0x6c
   1d9b8:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1d9bc:	cmp	r0, #0
   1d9be:	beq.w	1dad8 <btrfs_search_slot@@Base+0x418>
   1d9c2:	ldr.w	r3, [r2, #192]	; 0xc0
   1d9c6:	ldr.w	r0, [r9, #384]	; 0x180
   1d9ca:	str	r3, [sp, #64]	; 0x40
   1d9cc:	subs	r0, #101	; 0x65
   1d9ce:	ldr	r3, [pc, #436]	; (1db84 <btrfs_search_slot@@Base+0x4c4>)
   1d9d0:	umull	r0, r1, r0, r3
   1d9d4:	lsrs	r3, r1, #3
   1d9d6:	ldr	r1, [sp, #64]	; 0x40
   1d9d8:	subs	r3, #1
   1d9da:	cmp	r1, r3
   1d9dc:	bcs.n	1dad2 <btrfs_search_slot@@Base+0x412>
   1d9de:	add	r3, sp, #108	; 0x6c
   1d9e0:	mov	r1, r4
   1d9e2:	strd	r7, r3, [sp]
   1d9e6:	mov	r0, sl
   1d9e8:	mov	r3, r6
   1d9ea:	bl	1bd08 <btrfs_cow_block@@Base>
   1d9ee:	cmp	r0, #0
   1d9f0:	bne.n	1dad2 <btrfs_search_slot@@Base+0x412>
   1d9f2:	str	r0, [sp, #0]
   1d9f4:	mov	r3, r5
   1d9f6:	ldr	r2, [sp, #108]	; 0x6c
   1d9f8:	add.w	r0, sl, #8
   1d9fc:	ldr.w	r1, [r4, #464]	; 0x1d0
   1da00:	bl	1b0cc <rb_free_nodes@@Base+0x34a>
   1da04:	mov	r2, r0
   1da06:	cmp	r0, #0
   1da08:	bne.n	1dad2 <btrfs_search_slot@@Base+0x412>
   1da0a:	ldr	r3, [sp, #48]	; 0x30
   1da0c:	mov	r0, r5
   1da0e:	ldr	r1, [sp, #64]	; 0x40
   1da10:	add	r3, r1
   1da12:	add	r1, sp, #112	; 0x70
   1da14:	str	r1, [sp, #48]	; 0x30
   1da16:	mov	r7, r3
   1da18:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1da1c:	ldrd	r1, r2, [sp, #48]	; 0x30
   1da20:	mov	r0, r6
   1da22:	bl	1adb2 <rb_free_nodes@@Base+0x30>
   1da26:	mov	r0, r6
   1da28:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1da2c:	ldr	r0, [sp, #108]	; 0x6c
   1da2e:	ldr.w	r3, [r0, #192]	; 0xc0
   1da32:	cmp	r7, r3
   1da34:	bcs.n	1da4e <btrfs_search_slot@@Base+0x38e>
   1da36:	ldr	r3, [sp, #40]	; 0x28
   1da38:	str.w	r0, [fp, r3, lsl #2]
   1da3c:	ldr.w	r3, [r8, #36]	; 0x24
   1da40:	subs	r3, #1
   1da42:	str.w	r3, [r8, #36]	; 0x24
   1da46:	mov	r0, r5
   1da48:	str.w	r7, [r8, #32]
   1da4c:	b.n	1da54 <btrfs_search_slot@@Base+0x394>
   1da4e:	subs	r7, r7, r3
   1da50:	str.w	r7, [r8, #32]
   1da54:	bl	1a0a4 <free_extent_buffer@@Base>
   1da58:	ldr	r3, [sp, #40]	; 0x28
   1da5a:	ldr.w	r6, [fp, r3, lsl #2]
   1da5e:	ldr.w	r3, [r4, #464]	; 0x1d0
   1da62:	ldr.w	r1, [r6, #192]	; 0xc0
   1da66:	ldr.w	r2, [r3, #384]	; 0x180
   1da6a:	ldr	r3, [pc, #280]	; (1db84 <btrfs_search_slot@@Base+0x4c4>)
   1da6c:	subs	r2, #101	; 0x65
   1da6e:	umull	r2, r3, r2, r3
   1da72:	lsrs	r3, r3, #3
   1da74:	subs	r3, #3
   1da76:	cmp	r1, r3
   1da78:	bcc.w	1dce4 <btrfs_search_slot@@Base+0x624>
   1da7c:	ldr.w	r3, [r6, #192]	; 0xc0
   1da80:	add.w	r9, sp, #112	; 0x70
   1da84:	mov	r0, r6
   1da86:	adds	r7, r3, #1
   1da88:	mov	r1, r9
   1da8a:	str	r3, [sp, #48]	; 0x30
   1da8c:	lsrs	r7, r7, #1
   1da8e:	mov	r2, r7
   1da90:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1da94:	ldr.w	r1, [r4, #464]	; 0x1d0
   1da98:	movs	r2, #0
   1da9a:	movs	r3, #0
   1da9c:	strd	r2, r3, [sp, #24]
   1daa0:	mov	r0, sl
   1daa2:	ldrd	r2, r3, [r6, #40]	; 0x28
   1daa6:	strd	r2, r3, [sp, #16]
   1daaa:	ldr	r3, [sp, #44]	; 0x2c
   1daac:	strd	r9, r3, [sp, #8]
   1dab0:	ldr.w	r2, [r4, #447]	; 0x1bf
   1dab4:	ldr.w	r3, [r4, #451]	; 0x1c3
   1dab8:	strd	r2, r3, [sp]
   1dabc:	ldr.w	r2, [r1, #384]	; 0x180
   1dac0:	mov	r1, r4
   1dac2:	bl	25eec <btrfs_alloc_free_block@@Base>
   1dac6:	cmn.w	r0, #4096	; 0x1000
   1daca:	mov	r5, r0
   1dacc:	bls.n	1dbc8 <btrfs_search_slot@@Base+0x508>
   1dace:	mov	r9, r0
   1dad0:	b.n	1d90a <btrfs_search_slot@@Base+0x24a>
   1dad2:	ldr	r0, [sp, #108]	; 0x6c
   1dad4:	bl	1a0a4 <free_extent_buffer@@Base>
   1dad8:	ldr	r7, [sp, #52]	; 0x34
   1dada:	mov	r1, r6
   1dadc:	mov	r0, r9
   1dade:	adds	r7, #1
   1dae0:	mov	r2, r7
   1dae2:	bl	1c092 <read_node_slot@@Base>
   1dae6:	mov	r2, r0
   1dae8:	str	r0, [sp, #104]	; 0x68
   1daea:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1daee:	cmp	r0, #0
   1daf0:	beq.w	1d992 <btrfs_search_slot@@Base+0x2d2>
   1daf4:	ldr.w	r3, [r4, #464]	; 0x1d0
   1daf8:	ldr.w	ip, [r2, #192]	; 0xc0
   1dafc:	ldr.w	r0, [r3, #384]	; 0x180
   1db00:	ldr	r3, [pc, #128]	; (1db84 <btrfs_search_slot@@Base+0x4c4>)
   1db02:	subs	r0, #101	; 0x65
   1db04:	umull	r0, r1, r0, r3
   1db08:	lsrs	r3, r1, #3
   1db0a:	subs	r3, #1
   1db0c:	cmp	ip, r3
   1db0e:	bcs.n	1db7a <btrfs_search_slot@@Base+0x4ba>
   1db10:	add	r3, sp, #104	; 0x68
   1db12:	mov	r1, r4
   1db14:	strd	r7, r3, [sp]
   1db18:	mov	r0, sl
   1db1a:	mov	r3, r6
   1db1c:	bl	1bd08 <btrfs_cow_block@@Base>
   1db20:	cbnz	r0, 1db7a <btrfs_search_slot@@Base+0x4ba>
   1db22:	ldr	r2, [sp, #104]	; 0x68
   1db24:	add.w	r1, r4, #464	; 0x1d0
   1db28:	add.w	r0, sl, #8
   1db2c:	mov	r3, r5
   1db2e:	bl	1afdc <rb_free_nodes@@Base+0x25a>
   1db32:	mov	r2, r0
   1db34:	cbnz	r0, 1db7a <btrfs_search_slot@@Base+0x4ba>
   1db36:	add	r1, sp, #112	; 0x70
   1db38:	ldr	r0, [sp, #104]	; 0x68
   1db3a:	str	r1, [sp, #52]	; 0x34
   1db3c:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1db40:	mov	r2, r7
   1db42:	ldr	r1, [sp, #52]	; 0x34
   1db44:	mov	r0, r6
   1db46:	bl	1adb2 <rb_free_nodes@@Base+0x30>
   1db4a:	mov	r0, r6
   1db4c:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1db50:	ldr.w	r3, [r5, #192]	; 0xc0
   1db54:	ldr	r2, [sp, #48]	; 0x30
   1db56:	cmp	r3, r2
   1db58:	bhi.n	1db76 <btrfs_search_slot@@Base+0x4b6>
   1db5a:	ldr	r3, [sp, #104]	; 0x68
   1db5c:	ldr	r2, [sp, #40]	; 0x28
   1db5e:	str.w	r3, [fp, r2, lsl #2]
   1db62:	ldr.w	r3, [r8, #36]	; 0x24
   1db66:	adds	r3, #1
   1db68:	str.w	r3, [r8, #36]	; 0x24
   1db6c:	ldr	r3, [sp, #48]	; 0x30
   1db6e:	ldr.w	r7, [r5, #192]	; 0xc0
   1db72:	subs	r7, r3, r7
   1db74:	b.n	1da46 <btrfs_search_slot@@Base+0x386>
   1db76:	ldr	r0, [sp, #104]	; 0x68
   1db78:	b.n	1da54 <btrfs_search_slot@@Base+0x394>
   1db7a:	ldr	r0, [sp, #104]	; 0x68
   1db7c:	bl	1a0a4 <free_extent_buffer@@Base>
   1db80:	b.n	1d992 <btrfs_search_slot@@Base+0x2d2>
   1db82:	nop
   1db84:	strh	r1, [r4, #30]
   1db86:	subs	r6, #15
   1db88:	lsls	r4, r7, #9
   1db8a:	movs	r0, r0
   1db8c:			; <UNDEFINED> instruction: 0xb656
   1db8e:	movs	r4, r0
   1db90:	subs	r0, #104	; 0x68
   1db92:	movs	r2, r0
   1db94:	adds	r6, #18
   1db96:	movs	r2, r0
   1db98:	adds	r6, #22
   1db9a:	movs	r2, r0
   1db9c:	subs	r0, #30
   1db9e:	movs	r2, r0
   1dba0:	push	{r3, r4, r7, lr}
   1dba2:	movs	r4, r0
   1dba4:	adds	r5, #158	; 0x9e
   1dba6:	movs	r2, r0
   1dba8:	bx	fp
   1dbaa:	movs	r2, r0
   1dbac:	adds	r7, #56	; 0x38
   1dbae:	movs	r2, r0
   1dbb0:	adds	r5, #114	; 0x72
   1dbb2:	movs	r2, r0
   1dbb4:	adds	r6, #184	; 0xb8
   1dbb6:	movs	r2, r0
   1dbb8:	adds	r4, #132	; 0x84
   1dbba:	movs	r2, r0
   1dbbc:	adds	r6, #102	; 0x66
   1dbbe:	movs	r2, r0
   1dbc0:	adds	r4, #166	; 0xa6
   1dbc2:	movs	r2, r0
   1dbc4:	adds	r4, #19
   1dbc6:	movs	r2, r0
   1dbc8:	movs	r2, #0
   1dbca:	movs	r3, #101	; 0x65
   1dbcc:	mov	r1, r2
   1dbce:	bl	1a826 <memset_extent_buffer@@Base>
   1dbd2:	ldrb.w	r3, [r6, #196]	; 0xc4
   1dbd6:	mov	r0, r5
   1dbd8:	strb.w	r3, [r5, #196]	; 0xc4
   1dbdc:	ldr	r3, [r5, #40]	; 0x28
   1dbde:	str.w	r3, [r5, #144]	; 0x90
   1dbe2:	ldr	r3, [r5, #44]	; 0x2c
   1dbe4:	str.w	r3, [r5, #148]	; 0x94
   1dbe8:	ldrd	r2, r3, [sl, #8]
   1dbec:	str.w	r2, [r5, #176]	; 0xb0
   1dbf0:	str.w	r3, [r5, #180]	; 0xb4
   1dbf4:	ldr.w	r2, [r5, #152]	; 0x98
   1dbf8:	ldr.w	r3, [r5, #156]	; 0x9c
   1dbfc:	bic.w	r3, r3, #4278190080	; 0xff000000
   1dc00:	str.w	r2, [r5, #152]	; 0x98
   1dc04:	orr.w	r3, r3, #16777216	; 0x1000000
   1dc08:	str.w	r3, [r5, #156]	; 0x9c
   1dc0c:	ldr.w	r2, [r4, #447]	; 0x1bf
   1dc10:	ldr.w	r3, [r4, #451]	; 0x1c3
   1dc14:	str.w	r2, [r5, #184]	; 0xb8
   1dc18:	movs	r2, #32
   1dc1a:	str.w	r3, [r5, #188]	; 0xbc
   1dc1e:	ldr.w	r3, [r4, #464]	; 0x1d0
   1dc22:	ldr.w	r1, [r3, #352]	; 0x160
   1dc26:	movs	r3, #16
   1dc28:	add	r1, r3
   1dc2a:	bl	1a7b4 <write_extent_buffer@@Base>
   1dc2e:	ldr.w	r1, [r4, #464]	; 0x1d0
   1dc32:	movs	r3, #16
   1dc34:	movs	r2, #64	; 0x40
   1dc36:	mov	r0, r5
   1dc38:	bl	1a7b4 <write_extent_buffer@@Base>
   1dc3c:	ldr.w	r1, [r4, #464]	; 0x1d0
   1dc40:	ldr.w	r2, [r4, #200]	; 0xc8
   1dc44:	mov	r0, r5
   1dc46:	ldr.w	r3, [r4, #204]	; 0xcc
   1dc4a:	ldr.w	r1, [r1, #384]	; 0x180
   1dc4e:	adds	r2, r2, r1
   1dc50:	str.w	r2, [r4, #200]	; 0xc8
   1dc54:	adc.w	r3, r3, #0
   1dc58:	str.w	r3, [r4, #204]	; 0xcc
   1dc5c:	ldr	r3, [sp, #48]	; 0x30
   1dc5e:	mov	r1, r6
   1dc60:	subs	r3, r3, r7
   1dc62:	str	r3, [sp, #48]	; 0x30
   1dc64:	ldr	r2, [sp, #48]	; 0x30
   1dc66:	add.w	r3, r7, r7, lsl #5
   1dc6a:	adds	r3, #101	; 0x65
   1dc6c:	add.w	r2, r2, r2, lsl #5
   1dc70:	str	r2, [sp, #0]
   1dc72:	movs	r2, #101	; 0x65
   1dc74:	bl	1a7c6 <copy_extent_buffer@@Base>
   1dc78:	ldr	r3, [sp, #48]	; 0x30
   1dc7a:	mov	r0, r6
   1dc7c:	str.w	r3, [r5, #192]	; 0xc0
   1dc80:	str.w	r7, [r6, #192]	; 0xc0
   1dc84:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1dc88:	mov	r0, r5
   1dc8a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1dc8e:	ldr	r3, [sp, #44]	; 0x2c
   1dc90:	add.w	r1, r4, #464	; 0x1d0
   1dc94:	add.w	r0, sl, #8
   1dc98:	adds	r3, #1
   1dc9a:	str	r3, [sp, #12]
   1dc9c:	ldr.w	r3, [r8, #36]	; 0x24
   1dca0:	adds	r3, #1
   1dca2:	str	r3, [sp, #8]
   1dca4:	ldrd	r2, r3, [r5, #40]	; 0x28
   1dca8:	strd	r2, r3, [sp]
   1dcac:	mov	r3, r9
   1dcae:	mov	r2, fp
   1dcb0:	bl	1aee8 <rb_free_nodes@@Base+0x166>
   1dcb4:	ldr.w	r3, [r8, #32]
   1dcb8:	cmp	r7, r3
   1dcba:	mov	r9, r0
   1dcbc:	bgt.n	1dcdc <btrfs_search_slot@@Base+0x61c>
   1dcbe:	subs	r7, r3, r7
   1dcc0:	mov	r0, r6
   1dcc2:	str.w	r7, [r8, #32]
   1dcc6:	bl	1a0a4 <free_extent_buffer@@Base>
   1dcca:	ldr	r3, [sp, #40]	; 0x28
   1dccc:	str.w	r5, [fp, r3, lsl #2]
   1dcd0:	ldr.w	r3, [r8, #36]	; 0x24
   1dcd4:	adds	r3, #1
   1dcd6:	str.w	r3, [r8, #36]	; 0x24
   1dcda:	b.n	1d90a <btrfs_search_slot@@Base+0x24a>
   1dcdc:	mov	r0, r5
   1dcde:	bl	1a0a4 <free_extent_buffer@@Base>
   1dce2:	b.n	1d90a <btrfs_search_slot@@Base+0x24a>
   1dce4:	mov.w	r9, #0
   1dce8:	b.n	1d90a <btrfs_search_slot@@Base+0x24a>
   1dcea:	ldr	r3, [sp, #192]	; 0xc0
   1dcec:	cmp	r3, #0
   1dcee:	bge.w	1d93e <btrfs_search_slot@@Base+0x27e>
   1dcf2:	movs	r3, #0
   1dcf4:	strd	r3, r3, [sp, #104]	; 0x68
   1dcf8:	ldr	r3, [sp, #40]	; 0x28
   1dcfa:	ldr.w	r6, [r4, #464]	; 0x1d0
   1dcfe:	ldr.w	r5, [fp, r3, lsl #2]
   1dd02:	ldrd	r2, r3, [sl, #8]
   1dd06:	ldr.w	r1, [r5, #180]	; 0xb4
   1dd0a:	ldr.w	r0, [r5, #176]	; 0xb0
   1dd0e:	cmp	r1, r3
   1dd10:	ldr.w	r1, [pc, #1092]	; 1e158 <btrfs_search_slot@@Base+0xa98>
   1dd14:	it	eq
   1dd16:	cmpeq	r0, r2
   1dd18:	ldr.w	r0, [pc, #1088]	; 1e15c <btrfs_search_slot@@Base+0xa9c>
   1dd1c:	add	r1, pc
   1dd1e:	movw	r2, #734	; 0x2de
   1dd22:	ite	ne
   1dd24:	movne	r3, #1
   1dd26:	moveq	r3, #0
   1dd28:	addw	r1, r1, #393	; 0x189
   1dd2c:	add	r0, pc
   1dd2e:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1dd32:	ldr	r3, [sp, #44]	; 0x2c
   1dd34:	cmp	r3, #6
   1dd36:	bgt.n	1dd46 <btrfs_search_slot@@Base+0x686>
   1dd38:	ldr.w	r7, [r8, #4]
   1dd3c:	adds	r3, #1
   1dd3e:	vmov	s18, r3
   1dd42:	cmp	r7, #0
   1dd44:	bne.n	1de1c <btrfs_search_slot@@Base+0x75c>
   1dd46:	ldr.w	r3, [r5, #192]	; 0xc0
   1dd4a:	cmp	r3, #1
   1dd4c:	bne.w	1e11c <btrfs_search_slot@@Base+0xa5c>
   1dd50:	movs	r2, #0
   1dd52:	mov	r1, r5
   1dd54:	mov	r0, r6
   1dd56:	ldr.w	r6, [pc, #1032]	; 1e160 <btrfs_search_slot@@Base+0xaa0>
   1dd5a:	bl	1c092 <read_node_slot@@Base>
   1dd5e:	mov.w	r9, #0
   1dd62:	add	r6, pc
   1dd64:	addw	r6, r6, #393	; 0x189
   1dd68:	mov	r7, r0
   1dd6a:	str	r0, [sp, #112]	; 0x70
   1dd6c:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1dd70:	movw	r2, #755	; 0x2f3
   1dd74:	mov	r1, r6
   1dd76:	clz	r3, r0
   1dd7a:	ldr	r0, [pc, #1000]	; (1e164 <btrfs_search_slot@@Base+0xaa4>)
   1dd7c:	lsrs	r3, r3, #5
   1dd7e:	add	r0, pc
   1dd80:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1dd84:	add	r3, sp, #112	; 0x70
   1dd86:	mov	r2, r7
   1dd88:	mov	r1, r4
   1dd8a:	str	r3, [sp, #4]
   1dd8c:	mov	r0, sl
   1dd8e:	mov	r3, r5
   1dd90:	str.w	r9, [sp]
   1dd94:	bl	1bd08 <btrfs_cow_block@@Base>
   1dd98:	movw	r2, #757	; 0x2f5
   1dd9c:	mov	r1, r6
   1dd9e:	mov	r3, r0
   1dda0:	ldr	r0, [pc, #964]	; (1e168 <btrfs_search_slot@@Base+0xaa8>)
   1dda2:	add	r0, pc
   1dda4:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1dda8:	ldr	r3, [sp, #112]	; 0x70
   1ddaa:	mov	r0, r4
   1ddac:	str	r3, [r4, #0]
   1ddae:	bl	1b318 <add_root_to_dirty_list@@Base>
   1ddb2:	ldr	r3, [sp, #40]	; 0x28
   1ddb4:	mov	r0, r5
   1ddb6:	str.w	r9, [fp, r3, lsl #2]
   1ddba:	bl	20994 <clean_tree_block@@Base>
   1ddbe:	mov	r0, r5
   1ddc0:	bl	1a0a4 <free_extent_buffer@@Base>
   1ddc4:	ldr	r1, [r5, #76]	; 0x4c
   1ddc6:	ldr.w	r2, [r4, #200]	; 0xc8
   1ddca:	ldrb.w	r0, [sp, #44]	; 0x2c
   1ddce:	ldr.w	r3, [r4, #204]	; 0xcc
   1ddd2:	subs	r2, r2, r1
   1ddd4:	mov.w	r1, #0
   1ddd8:	str.w	r2, [r4, #200]	; 0xc8
   1dddc:	sbc.w	r3, r3, #0
   1dde0:	movs	r2, #0
   1dde2:	str.w	r3, [r4, #204]	; 0xcc
   1dde6:	movs	r3, #0
   1dde8:	strd	r0, r1, [sp, #24]
   1ddec:	strd	r2, r3, [sp, #32]
   1ddf0:	ldr.w	r0, [r4, #447]	; 0x1bf
   1ddf4:	ldr.w	r1, [r4, #451]	; 0x1c3
   1ddf8:	strd	r2, r3, [sp, #8]
   1ddfc:	strd	r0, r1, [sp, #16]
   1de00:	mov	r1, r4
   1de02:	ldr	r3, [r5, #76]	; 0x4c
   1de04:	mov	r0, sl
   1de06:	strd	r3, r9, [sp]
   1de0a:	ldrd	r2, r3, [r5, #40]	; 0x28
   1de0e:	bl	240d4 <btrfs_free_extent@@Base>
   1de12:	mov	r9, r0
   1de14:	mov	r0, r5
   1de16:	bl	1a0a4 <free_extent_buffer@@Base>
   1de1a:	b.n	1e114 <btrfs_search_slot@@Base+0xa54>
   1de1c:	ldr.w	r2, [r6, #384]	; 0x180
   1de20:	ldr	r3, [pc, #816]	; (1e154 <btrfs_search_slot@@Base+0xa94>)
   1de22:	subs	r2, #101	; 0x65
   1de24:	umull	r0, r1, r2, r3
   1de28:	ldr.w	r2, [r5, #192]	; 0xc0
   1de2c:	cmp.w	r2, r1, lsr #5
   1de30:	bhi.w	1e11c <btrfs_search_slot@@Base+0xa5c>
   1de34:	ldr	r3, [sp, #48]	; 0x30
   1de36:	mov	r1, r7
   1de38:	mov	r0, r6
   1de3a:	add.w	r3, r3, r3, lsl #5
   1de3e:	add	r3, r5
   1de40:	ldr.w	r2, [r3, #214]!
   1de44:	ldr	r3, [r3, #4]
   1de46:	str	r2, [sp, #64]	; 0x40
   1de48:	str	r3, [sp, #68]	; 0x44
   1de4a:	ldr.w	r3, [r8, #36]	; 0x24
   1de4e:	add.w	r9, r3, #4294967295	; 0xffffffff
   1de52:	str	r3, [sp, #52]	; 0x34
   1de54:	mov	r2, r9
   1de56:	bl	1c092 <read_node_slot@@Base>
   1de5a:	mov	r2, r0
   1de5c:	str	r0, [sp, #108]	; 0x6c
   1de5e:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1de62:	cmp	r0, #0
   1de64:	bne.w	1e0ec <btrfs_search_slot@@Base+0xa2c>
   1de68:	ldr	r3, [sp, #52]	; 0x34
   1de6a:	mov	r1, r7
   1de6c:	mov	r0, r6
   1de6e:	adds	r3, #1
   1de70:	mov	r2, r3
   1de72:	vmov	s17, r3
   1de76:	bl	1c092 <read_node_slot@@Base>
   1de7a:	mov	r2, r0
   1de7c:	str	r0, [sp, #104]	; 0x68
   1de7e:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1de82:	cbz	r0, 1de9e <btrfs_search_slot@@Base+0x7de>
   1de84:	add	r3, sp, #104	; 0x68
   1de86:	vstr	s17, [sp]
   1de8a:	str	r3, [sp, #4]
   1de8c:	mov	r1, r4
   1de8e:	mov	r3, r7
   1de90:	mov	r0, sl
   1de92:	bl	1bd08 <btrfs_cow_block@@Base>
   1de96:	mov	r9, r0
   1de98:	cmp	r0, #0
   1de9a:	bne.w	1e104 <btrfs_search_slot@@Base+0xa44>
   1de9e:	ldr	r2, [sp, #108]	; 0x6c
   1dea0:	cmp	r2, #0
   1dea2:	bne.w	1e132 <btrfs_search_slot@@Base+0xa72>
   1dea6:	mov	r6, r2
   1dea8:	ldr	r3, [sp, #104]	; 0x68
   1deaa:	cmp	r3, #0
   1deac:	beq.n	1df60 <btrfs_search_slot@@Base+0x8a0>
   1deae:	movs	r2, #1
   1deb0:	add.w	r0, sl, #8
   1deb4:	str	r2, [sp, #0]
   1deb6:	mov	r2, r5
   1deb8:	ldr.w	r1, [r4, #464]	; 0x1d0
   1debc:	bl	1b0cc <rb_free_nodes@@Base+0x34a>
   1dec0:	cmp	r0, #0
   1dec2:	bge.n	1decc <btrfs_search_slot@@Base+0x80c>
   1dec4:	cmn.w	r0, #28
   1dec8:	it	ne
   1deca:	movne	r6, r0
   1decc:	ldr	r0, [sp, #104]	; 0x68
   1dece:	ldr.w	r9, [r0, #192]	; 0xc0
   1ded2:	cmp.w	r9, #0
   1ded6:	bne.w	1e184 <btrfs_search_slot@@Base+0xac4>
   1deda:	ldrd	r2, r3, [r0, #40]	; 0x28
   1dede:	strd	r2, r3, [sp, #72]	; 0x48
   1dee2:	ldr	r3, [r0, #76]	; 0x4c
   1dee4:	str	r3, [sp, #80]	; 0x50
   1dee6:	bl	20994 <clean_tree_block@@Base>
   1deea:	ldr	r0, [sp, #104]	; 0x68
   1deec:	bl	1a0a4 <free_extent_buffer@@Base>
   1def0:	vmov	r3, s17
   1def4:	vmov	r2, s18
   1def8:	mov	r1, fp
   1defa:	mov	r0, r4
   1defc:	str.w	r9, [sp, #104]	; 0x68
   1df00:	bl	1d5f0 <btrfs_del_ptr@@Base>
   1df04:	ldr	r1, [sp, #104]	; 0x68
   1df06:	ldr.w	r2, [r4, #200]	; 0xc8
   1df0a:	ldr.w	r3, [r4, #204]	; 0xcc
   1df0e:	ldr	r1, [r1, #76]	; 0x4c
   1df10:	cmp	r0, #0
   1df12:	it	ne
   1df14:	movne	r6, r0
   1df16:	ldrb.w	r0, [sp, #44]	; 0x2c
   1df1a:	subs	r2, r2, r1
   1df1c:	mov.w	r1, #0
   1df20:	str.w	r2, [r4, #200]	; 0xc8
   1df24:	sbc.w	r3, r3, #0
   1df28:	movs	r2, #0
   1df2a:	str.w	r3, [r4, #204]	; 0xcc
   1df2e:	movs	r3, #0
   1df30:	strd	r0, r1, [sp, #24]
   1df34:	strd	r2, r3, [sp, #32]
   1df38:	ldr.w	r0, [r4, #447]	; 0x1bf
   1df3c:	ldr.w	r1, [r4, #451]	; 0x1c3
   1df40:	strd	r2, r3, [sp, #8]
   1df44:	ldr	r3, [sp, #80]	; 0x50
   1df46:	strd	r0, r1, [sp, #16]
   1df4a:	mov	r1, r4
   1df4c:	mov	r0, sl
   1df4e:	strd	r3, r9, [sp]
   1df52:	ldrd	r2, r3, [sp, #72]	; 0x48
   1df56:	bl	240d4 <btrfs_free_extent@@Base>
   1df5a:	cmp	r0, #0
   1df5c:	it	ne
   1df5e:	movne	r6, r0
   1df60:	ldr.w	r3, [r5, #192]	; 0xc0
   1df64:	cmp	r3, #1
   1df66:	bne.n	1dfe4 <btrfs_search_slot@@Base+0x924>
   1df68:	ldr.w	r9, [sp, #108]	; 0x6c
   1df6c:	mov.w	r2, #848	; 0x350
   1df70:	ldr	r1, [pc, #504]	; (1e16c <btrfs_search_slot@@Base+0xaac>)
   1df72:	clz	r3, r9
   1df76:	ldr	r0, [pc, #504]	; (1e170 <btrfs_search_slot@@Base+0xab0>)
   1df78:	add	r1, pc
   1df7a:	lsrs	r3, r3, #5
   1df7c:	addw	r1, r1, #393	; 0x189
   1df80:	add	r0, pc
   1df82:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1df86:	add.w	r3, sl, #8
   1df8a:	add.w	r1, r4, #464	; 0x1d0
   1df8e:	mov	r2, r5
   1df90:	vmov	s17, r3
   1df94:	mov	r3, r9
   1df96:	vmov	r0, s17
   1df9a:	bl	1afdc <rb_free_nodes@@Base+0x25a>
   1df9e:	subs.w	r9, r0, #0
   1dfa2:	blt.w	1e104 <btrfs_search_slot@@Base+0xa44>
   1dfa6:	cmp.w	r9, #1
   1dfaa:	bne.n	1dfc8 <btrfs_search_slot@@Base+0x908>
   1dfac:	str.w	r9, [sp]
   1dfb0:	mov	r3, r5
   1dfb2:	vmov	r0, s17
   1dfb6:	ldr	r2, [sp, #108]	; 0x6c
   1dfb8:	ldr.w	r1, [r4, #464]	; 0x1d0
   1dfbc:	bl	1b0cc <rb_free_nodes@@Base+0x34a>
   1dfc0:	subs.w	r9, r0, #0
   1dfc4:	it	lt
   1dfc6:	movlt	r6, r9
   1dfc8:	add.w	r1, r9, #4294967295	; 0xffffffff
   1dfcc:	ldr	r0, [pc, #420]	; (1e174 <btrfs_search_slot@@Base+0xab4>)
   1dfce:	negs	r3, r1
   1dfd0:	movw	r2, #859	; 0x35b
   1dfd4:	adcs	r3, r1
   1dfd6:	ldr	r1, [pc, #416]	; (1e178 <btrfs_search_slot@@Base+0xab8>)
   1dfd8:	add	r0, pc
   1dfda:	add	r1, pc
   1dfdc:	addw	r1, r1, #393	; 0x189
   1dfe0:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1dfe4:	ldr.w	r3, [r5, #192]	; 0xc0
   1dfe8:	mov	r9, r6
   1dfea:	str	r3, [sp, #72]	; 0x48
   1dfec:	cmp	r3, #0
   1dfee:	bne.w	1e1a2 <btrfs_search_slot@@Base+0xae2>
   1dff2:	ldrd	r2, r3, [r5, #40]	; 0x28
   1dff6:	mov	r0, r5
   1dff8:	ldr	r7, [r5, #76]	; 0x4c
   1dffa:	strd	r2, r3, [sp, #80]	; 0x50
   1dffe:	bl	20994 <clean_tree_block@@Base>
   1e002:	mov	r0, r5
   1e004:	bl	1a0a4 <free_extent_buffer@@Base>
   1e008:	vmov	r2, s18
   1e00c:	ldr	r3, [sp, #52]	; 0x34
   1e00e:	mov	r1, fp
   1e010:	mov	r0, r4
   1e012:	bl	1d5f0 <btrfs_del_ptr@@Base>
   1e016:	ldr.w	r2, [r4, #200]	; 0xc8
   1e01a:	ldr.w	r3, [r4, #204]	; 0xcc
   1e01e:	movs	r1, #0
   1e020:	cmp	r0, #0
   1e022:	ite	ne
   1e024:	movne	r9, r0
   1e026:	moveq	r9, r6
   1e028:	ldrb.w	r0, [sp, #44]	; 0x2c
   1e02c:	subs	r2, r2, r7
   1e02e:	str.w	r2, [r4, #200]	; 0xc8
   1e032:	sbc.w	r3, r3, #0
   1e036:	movs	r2, #0
   1e038:	str.w	r3, [r4, #204]	; 0xcc
   1e03c:	movs	r3, #0
   1e03e:	strd	r0, r1, [sp, #24]
   1e042:	strd	r2, r3, [sp, #32]
   1e046:	ldr.w	r0, [r4, #447]	; 0x1bf
   1e04a:	ldr.w	r1, [r4, #451]	; 0x1c3
   1e04e:	strd	r2, r3, [sp, #8]
   1e052:	movs	r3, #0
   1e054:	str	r7, [sp, #0]
   1e056:	strd	r0, r1, [sp, #16]
   1e05a:	mov	r1, r4
   1e05c:	str	r3, [sp, #4]
   1e05e:	mov	r0, sl
   1e060:	ldrd	r2, r3, [sp, #80]	; 0x50
   1e064:	bl	240d4 <btrfs_free_extent@@Base>
   1e068:	ldr	r5, [sp, #72]	; 0x48
   1e06a:	cmp	r0, #0
   1e06c:	it	ne
   1e06e:	movne	r9, r0
   1e070:	ldr	r2, [sp, #108]	; 0x6c
   1e072:	cbz	r2, 1e0a2 <btrfs_search_slot@@Base+0x9e2>
   1e074:	ldr.w	r3, [r2, #192]	; 0xc0
   1e078:	ldr	r1, [sp, #48]	; 0x30
   1e07a:	cmp	r3, r1
   1e07c:	bls.w	1e1c0 <btrfs_search_slot@@Base+0xb00>
   1e080:	ldr	r3, [r2, #80]	; 0x50
   1e082:	adds	r3, #1
   1e084:	str	r3, [r2, #80]	; 0x50
   1e086:	ldr	r3, [sp, #40]	; 0x28
   1e088:	str.w	r2, [fp, r3, lsl #2]
   1e08c:	ldr.w	r3, [r8, #36]	; 0x24
   1e090:	str.w	r1, [r8, #32]
   1e094:	subs	r3, #1
   1e096:	str.w	r3, [r8, #36]	; 0x24
   1e09a:	cbz	r5, 1e0a2 <btrfs_search_slot@@Base+0x9e2>
   1e09c:	mov	r0, r5
   1e09e:	bl	1a0a4 <free_extent_buffer@@Base>
   1e0a2:	ldrb.w	r3, [fp, #67]	; 0x43
   1e0a6:	cbnz	r3, 1e0b4 <btrfs_search_slot@@Base+0x9f4>
   1e0a8:	ldr	r2, [sp, #44]	; 0x2c
   1e0aa:	mov	r1, fp
   1e0ac:	ldr.w	r0, [r4, #464]	; 0x1d0
   1e0b0:	bl	1c7b4 <btrfs_check_leaf@@Base+0x2c0>
   1e0b4:	ldr	r3, [sp, #40]	; 0x28
   1e0b6:	ldr.w	r2, [r8, #32]
   1e0ba:	ldr.w	r3, [fp, r3, lsl #2]
   1e0be:	add.w	r2, r2, r2, lsl #5
   1e0c2:	add	r3, r2
   1e0c4:	ldr.w	r0, [r3, #214]!
   1e0c8:	ldr	r1, [r3, #4]
   1e0ca:	ldrd	r2, r3, [sp, #64]	; 0x40
   1e0ce:	cmp	r3, r1
   1e0d0:	it	eq
   1e0d2:	cmpeq	r2, r0
   1e0d4:	beq.n	1e104 <btrfs_search_slot@@Base+0xa44>
   1e0d6:	ldr	r1, [pc, #164]	; (1e17c <btrfs_search_slot@@Base+0xabc>)
   1e0d8:	movs	r3, #1
   1e0da:	ldr	r0, [pc, #164]	; (1e180 <btrfs_search_slot@@Base+0xac0>)
   1e0dc:	mov.w	r2, #904	; 0x388
   1e0e0:	add	r1, pc
   1e0e2:	addw	r1, r1, #393	; 0x189
   1e0e6:	add	r0, pc
   1e0e8:	bl	1ae5e <rb_free_nodes@@Base+0xdc>
   1e0ec:	add	r3, sp, #108	; 0x6c
   1e0ee:	mov	r1, r4
   1e0f0:	strd	r9, r3, [sp]
   1e0f4:	mov	r0, sl
   1e0f6:	mov	r3, r7
   1e0f8:	bl	1bd08 <btrfs_cow_block@@Base>
   1e0fc:	mov	r9, r0
   1e0fe:	cmp	r0, #0
   1e100:	beq.w	1de68 <btrfs_search_slot@@Base+0x7a8>
   1e104:	ldr	r0, [sp, #104]	; 0x68
   1e106:	cbz	r0, 1e10c <btrfs_search_slot@@Base+0xa4c>
   1e108:	bl	1a0a4 <free_extent_buffer@@Base>
   1e10c:	ldr	r0, [sp, #108]	; 0x6c
   1e10e:	cmp	r0, #0
   1e110:	bne.w	1de16 <btrfs_search_slot@@Base+0x756>
   1e114:	cmp.w	r9, #0
   1e118:	bne.w	1d792 <btrfs_search_slot@@Base+0xd2>
   1e11c:	ldr	r3, [sp, #40]	; 0x28
   1e11e:	ldr.w	r3, [fp, r3, lsl #2]
   1e122:	str	r3, [sp, #96]	; 0x60
   1e124:	cmp	r3, #0
   1e126:	bne.n	1e1ca <btrfs_search_slot@@Base+0xb0a>
   1e128:	mov	r0, fp
   1e12a:	bl	1b2dc <btrfs_release_path@@Base>
   1e12e:	b.w	1d750 <btrfs_search_slot@@Base+0x90>
   1e132:	ldr.w	r3, [r2, #192]	; 0xc0
   1e136:	add.w	r0, sl, #8
   1e13a:	ldr	r1, [sp, #48]	; 0x30
   1e13c:	add	r1, r3
   1e13e:	movs	r3, #1
   1e140:	str	r1, [sp, #48]	; 0x30
   1e142:	str	r3, [sp, #0]
   1e144:	mov	r3, r5
   1e146:	ldr.w	r1, [r4, #464]	; 0x1d0
   1e14a:	bl	1b0cc <rb_free_nodes@@Base+0x34a>
   1e14e:	and.w	r6, r0, r0, asr #31
   1e152:	b.n	1dea8 <btrfs_search_slot@@Base+0x7e8>
   1e154:	strh	r1, [r4, #30]
   1e156:	subs	r6, #15
   1e158:	adds	r2, #96	; 0x60
   1e15a:	movs	r2, r0
   1e15c:	adds	r0, #109	; 0x6d
   1e15e:	movs	r2, r0
   1e160:	adds	r2, #26
   1e162:	movs	r2, r0
   1e164:	adds	r0, #83	; 0x53
   1e166:	movs	r2, r0
   1e168:	lsrs	r3, r3, #11
   1e16a:	movs	r2, r0
   1e16c:	adds	r0, #4
   1e16e:	movs	r2, r0
   1e170:	cmp	r6, #112	; 0x70
   1e172:	movs	r2, r0
   1e174:	cmp	r6, #30
   1e176:	movs	r2, r0
   1e178:	cmp	r7, #162	; 0xa2
   1e17a:	movs	r2, r0
   1e17c:	cmp	r6, #156	; 0x9c
   1e17e:	movs	r2, r0
   1e180:	subs	r6, #79	; 0x4f
   1e182:	movs	r2, r0
   1e184:	add	r1, sp, #112	; 0x70
   1e186:	movs	r2, #0
   1e188:	str	r1, [sp, #72]	; 0x48
   1e18a:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1e18e:	mov	r0, r7
   1e190:	vmov	r2, s17
   1e194:	ldr	r1, [sp, #72]	; 0x48
   1e196:	bl	1adb2 <rb_free_nodes@@Base+0x30>
   1e19a:	mov	r0, r7
   1e19c:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1e1a0:	b.n	1df60 <btrfs_search_slot@@Base+0x8a0>
   1e1a2:	add	r1, sp, #112	; 0x70
   1e1a4:	mov	r0, r5
   1e1a6:	movs	r2, #0
   1e1a8:	str	r1, [sp, #72]	; 0x48
   1e1aa:	bl	1add6 <rb_free_nodes@@Base+0x54>
   1e1ae:	mov	r0, r7
   1e1b0:	ldr	r2, [sp, #52]	; 0x34
   1e1b2:	ldr	r1, [sp, #72]	; 0x48
   1e1b4:	bl	1adb2 <rb_free_nodes@@Base+0x30>
   1e1b8:	mov	r0, r7
   1e1ba:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1e1be:	b.n	1e070 <btrfs_search_slot@@Base+0x9b0>
   1e1c0:	ldr	r2, [sp, #48]	; 0x30
   1e1c2:	subs	r3, r2, r3
   1e1c4:	str.w	r3, [r8, #32]
   1e1c8:	b.n	1e0a2 <btrfs_search_slot@@Base+0x9e2>
   1e1ca:	ldr.w	r2, [r8, #32]
   1e1ce:	ldr	r1, [pc, #108]	; (1e23c <btrfs_search_slot@@Base+0xb7c>)
   1e1d0:	ldr	r0, [pc, #108]	; (1e240 <btrfs_search_slot@@Base+0xb80>)
   1e1d2:	str	r2, [sp, #100]	; 0x64
   1e1d4:	add	r1, pc
   1e1d6:	ldr.w	r3, [r3, #192]	; 0xc0
   1e1da:	add.w	r1, r1, #342	; 0x156
   1e1de:	add	r0, pc
   1e1e0:	subs	r2, r3, #1
   1e1e2:	negs	r3, r2
   1e1e4:	adcs	r3, r2
   1e1e6:	movw	r2, #1227	; 0x4cb
   1e1ea:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1e1ee:	b.w	1d93e <btrfs_search_slot@@Base+0x27e>
   1e1f2:	ldr	r3, [sp, #88]	; 0x58
   1e1f4:	cbz	r3, 1e20e <btrfs_search_slot@@Base+0xb4e>
   1e1f6:	ldr	r3, [sp, #56]	; 0x38
   1e1f8:	mov	r1, fp
   1e1fa:	vmov	r0, s16
   1e1fe:	ldr	r2, [r3, #0]
   1e200:	ldr	r3, [r3, #4]
   1e202:	strd	r2, r3, [sp]
   1e206:	ldr	r3, [sp, #100]	; 0x64
   1e208:	ldr	r2, [sp, #44]	; 0x2c
   1e20a:	bl	1c10c <reada_for_search@@Base>
   1e20e:	vmov	r0, s16
   1e212:	ldrd	r1, r2, [sp, #96]	; 0x60
   1e216:	bl	1c092 <read_node_slot@@Base>
   1e21a:	str	r0, [sp, #96]	; 0x60
   1e21c:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1e220:	cmp	r0, #0
   1e222:	bne.w	1d762 <btrfs_search_slot@@Base+0xa2>
   1e226:	mvn.w	r9, #4
   1e22a:	b.w	1d792 <btrfs_search_slot@@Base+0xd2>
   1e22e:	mov	r0, r9
   1e230:	add	sp, #140	; 0x8c
   1e232:	vpop	{d8-d9}
   1e236:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e23a:	nop
   1e23c:	cmp	r5, #168	; 0xa8
   1e23e:	movs	r2, r0
   1e240:	cmp	r4, #34	; 0x22
   1e242:	movs	r2, r0

0001e244 <btrfs_split_item@@Base>:
   1e244:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e248:	sub	sp, #76	; 0x4c
   1e24a:	mov	r4, r2
   1e24c:	ldr	r2, [pc, #536]	; (1e468 <btrfs_split_item@@Base+0x224>)
   1e24e:	str	r3, [sp, #12]
   1e250:	add.w	r8, sp, #28
   1e254:	ldr	r3, [pc, #532]	; (1e46c <btrfs_split_item@@Base+0x228>)
   1e256:	add	r2, pc
   1e258:	ldr	r5, [r4, #0]
   1e25a:	mov	r6, r0
   1e25c:	mov	r7, r1
   1e25e:	mov	r1, r8
   1e260:	ldr	r3, [r2, r3]
   1e262:	mov	r0, r5
   1e264:	ldr	r2, [r4, #32]
   1e266:	ldr	r3, [r3, #0]
   1e268:	str	r3, [sp, #68]	; 0x44
   1e26a:	mov.w	r3, #0
   1e26e:	bl	1b234 <rb_free_nodes@@Base+0x4b2>
   1e272:	mov	r0, r5
   1e274:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1e278:	cmp	r0, #24
   1e27a:	bhi.n	1e310 <btrfs_split_item@@Base+0xcc>
   1e27c:	ldr	r3, [r4, #32]
   1e27e:	mov.w	r9, #25
   1e282:	mov	r0, r4
   1e284:	mov.w	sl, #0
   1e288:	mla	r3, r9, r3, r5
   1e28c:	ldr.w	fp, [r3, #218]	; 0xda
   1e290:	bl	1b2dc <btrfs_release_path@@Base>
   1e294:	movs	r3, #1
   1e296:	mov	r2, r8
   1e298:	strb.w	r3, [r4, #66]	; 0x42
   1e29c:	mov	r1, r7
   1e29e:	str	r3, [sp, #4]
   1e2a0:	mov	r0, r6
   1e2a2:	mov	r3, r4
   1e2a4:	str.w	sl, [sp]
   1e2a8:	bl	1d6c0 <btrfs_search_slot@@Base>
   1e2ac:	strb.w	sl, [r4, #66]	; 0x42
   1e2b0:	cmp	r0, #0
   1e2b2:	bne.w	1e45c <btrfs_split_item@@Base+0x218>
   1e2b6:	ldr	r3, [r4, #32]
   1e2b8:	ldr	r2, [r4, #0]
   1e2ba:	mla	r3, r9, r3, r2
   1e2be:	ldr.w	r3, [r3, #218]	; 0xda
   1e2c2:	cmp	r3, fp
   1e2c4:	bne.w	1e45c <btrfs_split_item@@Base+0x218>
   1e2c8:	mov	r3, r4
   1e2ca:	mov	r2, r8
   1e2cc:	mov	r1, r7
   1e2ce:	strd	r0, r0, [sp]
   1e2d2:	mov	r0, r6
   1e2d4:	bl	1cdd4 <btrfs_check_leaf@@Base+0x8e0>
   1e2d8:	ldr	r1, [pc, #404]	; (1e470 <btrfs_split_item@@Base+0x22c>)
   1e2da:	movw	r2, #2390	; 0x956
   1e2de:	add	r1, pc
   1e2e0:	addw	r1, r1, #407	; 0x197
   1e2e4:	str	r1, [sp, #16]
   1e2e6:	mov	r3, r0
   1e2e8:	ldr	r0, [pc, #392]	; (1e474 <btrfs_split_item@@Base+0x230>)
   1e2ea:	add	r0, pc
   1e2ec:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1e2f0:	mov	r0, r5
   1e2f2:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1e2f6:	ldr	r1, [sp, #16]
   1e2f8:	movw	r2, #2392	; 0x958
   1e2fc:	cmp	r0, #24
   1e2fe:	ldr	r0, [pc, #376]	; (1e478 <btrfs_split_item@@Base+0x234>)
   1e300:	it	hi
   1e302:	movhi	r3, #0
   1e304:	add	r0, pc
   1e306:	it	ls
   1e308:	movls	r3, #1
   1e30a:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1e30e:	ldr	r5, [r4, #0]
   1e310:	ldr	r3, [r4, #32]
   1e312:	mov.w	sl, #25
   1e316:	mul.w	r3, sl, r3
   1e31a:	adds	r3, #101	; 0x65
   1e31c:	str	r3, [sp, #20]
   1e31e:	ldr	r2, [sp, #20]
   1e320:	add.w	r3, r5, #96	; 0x60
   1e324:	add	r3, r2
   1e326:	ldr.w	r6, [r3, #21]
   1e32a:	ldr.w	r2, [r3, #17]
   1e32e:	mov	r0, r6
   1e330:	str	r2, [sp, #16]
   1e332:	blx	8a94 <malloc@plt+0x4>
   1e336:	ldr	r1, [pc, #324]	; (1e47c <btrfs_split_item@@Base+0x238>)
   1e338:	movw	r2, #2402	; 0x962
   1e33c:	add	r1, pc
   1e33e:	addw	r1, r1, #407	; 0x197
   1e342:	clz	r3, r0
   1e346:	mov	r9, r0
   1e348:	ldr	r0, [pc, #308]	; (1e480 <btrfs_split_item@@Base+0x23c>)
   1e34a:	lsrs	r3, r3, #5
   1e34c:	add	r0, pc
   1e34e:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1e352:	ldr	r2, [sp, #16]
   1e354:	mov	r1, r9
   1e356:	mov	r0, r5
   1e358:	adds	r2, #101	; 0x65
   1e35a:	mov	r3, r6
   1e35c:	bl	1a79e <read_extent_buffer@@Base>
   1e360:	ldr	r1, [r4, #32]
   1e362:	ldr	r5, [r4, #0]
   1e364:	add.w	fp, r1, #1
   1e368:	mla	r1, r1, sl, sl
   1e36c:	ldr.w	r8, [r5, #192]	; 0xc0
   1e370:	cmp	fp, r8
   1e372:	add.w	r7, r1, #101	; 0x65
   1e376:	bcs.n	1e38a <btrfs_split_item@@Base+0x146>
   1e378:	sub.w	r3, r8, fp
   1e37c:	adds	r1, #126	; 0x7e
   1e37e:	mov	r2, r7
   1e380:	mov	r0, r5
   1e382:	mul.w	r3, sl, r3
   1e386:	bl	1a810 <memmove_extent_buffer@@Base>
   1e38a:	ldr	r3, [sp, #12]
   1e38c:	add	r1, sp, #48	; 0x30
   1e38e:	mov	r0, r5
   1e390:	add.w	r8, r8, #1
   1e394:	ldr.w	r2, [r3, #9]
   1e398:	ldr.w	r3, [r3, #13]
   1e39c:	str.w	r2, [sp, #57]	; 0x39
   1e3a0:	str.w	r3, [sp, #61]	; 0x3d
   1e3a4:	ldr	r3, [sp, #12]
   1e3a6:	ldrb	r3, [r3, #8]
   1e3a8:	strb.w	r3, [sp, #56]	; 0x38
   1e3ac:	ldr	r3, [sp, #12]
   1e3ae:	ldr	r2, [r3, #0]
   1e3b0:	ldr	r3, [r3, #4]
   1e3b2:	strd	r2, r3, [sp, #48]	; 0x30
   1e3b6:	mov	r2, fp
   1e3b8:	bl	1adbe <rb_free_nodes@@Base+0x3c>
   1e3bc:	add.w	r2, r5, #96	; 0x60
   1e3c0:	ldr	r3, [sp, #16]
   1e3c2:	add	r7, r2
   1e3c4:	ldr	r1, [sp, #16]
   1e3c6:	mov	r0, r5
   1e3c8:	str.w	r3, [r7, #17]
   1e3cc:	ldr	r3, [sp, #112]	; 0x70
   1e3ce:	sub.w	sl, r6, r3
   1e3d2:	ldr	r3, [sp, #20]
   1e3d4:	add	r6, r1
   1e3d6:	ldr	r1, [sp, #112]	; 0x70
   1e3d8:	add	r3, r2
   1e3da:	str.w	sl, [r7, #21]
   1e3de:	subs	r6, r6, r1
   1e3e0:	str.w	r1, [r3, #21]
   1e3e4:	movs	r1, #25
   1e3e6:	str.w	r6, [r3, #17]
   1e3ea:	str.w	r8, [r5, #192]	; 0xc0
   1e3ee:	ldr	r3, [r4, #32]
   1e3f0:	mla	r3, r1, r3, r2
   1e3f4:	mov	r1, r9
   1e3f6:	ldr.w	r2, [r3, #118]	; 0x76
   1e3fa:	ldr	r3, [sp, #112]	; 0x70
   1e3fc:	adds	r2, #101	; 0x65
   1e3fe:	bl	1a7b4 <write_extent_buffer@@Base>
   1e402:	ldr.w	r2, [r7, #17]
   1e406:	ldr	r1, [sp, #112]	; 0x70
   1e408:	mov	r3, sl
   1e40a:	adds	r2, #101	; 0x65
   1e40c:	mov	r0, r5
   1e40e:	add	r1, r9
   1e410:	bl	1a7b4 <write_extent_buffer@@Base>
   1e414:	mov	r0, r5
   1e416:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1e41a:	mov	r0, r5
   1e41c:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1e420:	cmp	r0, #0
   1e422:	bge.n	1e440 <btrfs_split_item@@Base+0x1fc>
   1e424:	mov	r0, r5
   1e426:	bl	284a8 <btrfs_print_leaf@@Base>
   1e42a:	ldr	r1, [pc, #88]	; (1e484 <btrfs_split_item@@Base+0x240>)
   1e42c:	ldr	r0, [pc, #88]	; (1e488 <btrfs_split_item@@Base+0x244>)
   1e42e:	movs	r3, #1
   1e430:	add	r1, pc
   1e432:	movw	r2, #2446	; 0x98e
   1e436:	addw	r1, r1, #407	; 0x197
   1e43a:	add	r0, pc
   1e43c:	bl	1ae5e <rb_free_nodes@@Base+0xdc>
   1e440:	mov	r0, r9
   1e442:	blx	87cc <free@plt+0x4>
   1e446:	movs	r0, #0
   1e448:	ldr	r2, [pc, #64]	; (1e48c <btrfs_split_item@@Base+0x248>)
   1e44a:	ldr	r3, [pc, #32]	; (1e46c <btrfs_split_item@@Base+0x228>)
   1e44c:	add	r2, pc
   1e44e:	ldr	r3, [r2, r3]
   1e450:	ldr	r2, [r3, #0]
   1e452:	ldr	r3, [sp, #68]	; 0x44
   1e454:	eors	r2, r3
   1e456:	beq.n	1e462 <btrfs_split_item@@Base+0x21e>
   1e458:	blx	88e4 <__stack_chk_fail@plt>
   1e45c:	mvn.w	r0, #10
   1e460:	b.n	1e448 <btrfs_split_item@@Base+0x204>
   1e462:	add	sp, #76	; 0x4c
   1e464:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e468:	add	r2, sp, #872	; 0x368
   1e46a:	movs	r4, r0
   1e46c:	lsls	r4, r7, #9
   1e46e:	movs	r0, r0
   1e470:	cmp	r4, #158	; 0x9e
   1e472:	movs	r2, r0
   1e474:	lsls	r3, r2, #22
   1e476:	movs	r2, r0
   1e478:	cmp	r3, #25
   1e47a:	movs	r2, r0
   1e47c:	cmp	r4, #64	; 0x40
   1e47e:	movs	r2, r0
   1e480:	cmp	r3, #9
   1e482:	movs	r2, r0
   1e484:	cmp	r3, #76	; 0x4c
   1e486:	movs	r2, r0
   1e488:	subs	r2, #251	; 0xfb
   1e48a:	movs	r2, r0
   1e48c:	add	r0, sp, #912	; 0x390
   1e48e:	movs	r4, r0

0001e490 <btrfs_insert_empty_items@@Base>:
   1e490:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e494:	sub	sp, #60	; 0x3c
   1e496:	mov	fp, r3
   1e498:	mov.w	r8, #0
   1e49c:	ldr	r3, [sp, #96]	; 0x60
   1e49e:	strd	r1, r2, [sp, #16]
   1e4a2:	ldr	r2, [pc, #616]	; (1e70c <btrfs_insert_empty_items@@Base+0x27c>)
   1e4a4:	str	r3, [sp, #24]
   1e4a6:	ldr	r3, [pc, #616]	; (1e710 <btrfs_insert_empty_items@@Base+0x280>)
   1e4a8:	add	r2, pc
   1e4aa:	add	r3, pc
   1e4ac:	str	r3, [sp, #28]
   1e4ae:	ldr	r3, [pc, #612]	; (1e714 <btrfs_insert_empty_items@@Base+0x284>)
   1e4b0:	ldr	r3, [r2, r3]
   1e4b2:	ldr	r3, [r3, #0]
   1e4b4:	str	r3, [sp, #52]	; 0x34
   1e4b6:	mov.w	r3, #0
   1e4ba:	mov	r3, r8
   1e4bc:	ldr	r2, [sp, #100]	; 0x64
   1e4be:	cmp	r3, r2
   1e4c0:	blt.n	1e4de <btrfs_insert_empty_items@@Base+0x4e>
   1e4c2:	ldr	r3, [sp, #16]
   1e4c4:	ldr	r3, [r3, #0]
   1e4c6:	cbnz	r3, 1e4ea <btrfs_insert_empty_items@@Base+0x5a>
   1e4c8:	ldr	r1, [pc, #588]	; (1e718 <btrfs_insert_empty_items@@Base+0x288>)
   1e4ca:	movs	r3, #1
   1e4cc:	ldr	r0, [pc, #588]	; (1e71c <btrfs_insert_empty_items@@Base+0x28c>)
   1e4ce:	movw	r2, #2636	; 0xa4c
   1e4d2:	add	r1, pc
   1e4d4:	add.w	r1, r1, #424	; 0x1a8
   1e4d8:	add	r0, pc
   1e4da:	bl	1ae5e <rb_free_nodes@@Base+0xdc>
   1e4de:	ldr	r2, [sp, #24]
   1e4e0:	ldr.w	r2, [r2, r3, lsl #2]
   1e4e4:	adds	r3, #1
   1e4e6:	add	r8, r2
   1e4e8:	b.n	1e4bc <btrfs_insert_empty_items@@Base+0x2c>
   1e4ea:	ldr	r3, [sp, #100]	; 0x64
   1e4ec:	movs	r2, #25
   1e4ee:	ldr	r1, [sp, #16]
   1e4f0:	mov.w	r9, #1
   1e4f4:	mla	r5, r2, r3, r8
   1e4f8:	ldr	r3, [sp, #20]
   1e4fa:	mov	r2, fp
   1e4fc:	strd	r5, r9, [sp]
   1e500:	bl	1d6c0 <btrfs_search_slot@@Base>
   1e504:	cmp	r0, #0
   1e506:	beq.w	1e6ea <btrfs_insert_empty_items@@Base+0x25a>
   1e50a:	blt.w	1e6ee <btrfs_insert_empty_items@@Base+0x25e>
   1e50e:	ldr	r3, [sp, #20]
   1e510:	ldr	r4, [r3, #0]
   1e512:	ldr.w	r3, [r4, #192]	; 0xc0
   1e516:	mov	r1, r4
   1e518:	str	r3, [sp, #12]
   1e51a:	ldr	r3, [sp, #16]
   1e51c:	ldr.w	r0, [r3, #464]	; 0x1d0
   1e520:	add.w	r0, r0, #384	; 0x180
   1e524:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1e528:	mov	r6, r0
   1e52a:	mov	r0, r4
   1e52c:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1e530:	cmp	r0, r5
   1e532:	bcs.n	1e56c <btrfs_insert_empty_items@@Base+0xdc>
   1e534:	mov	r0, r4
   1e536:	bl	284a8 <btrfs_print_leaf@@Base>
   1e53a:	ldr	r2, [sp, #28]
   1e53c:	ldr	r3, [pc, #480]	; (1e720 <btrfs_insert_empty_items@@Base+0x290>)
   1e53e:	mov	r0, r4
   1e540:	ldr	r3, [r2, r3]
   1e542:	ldr	r6, [r3, #0]
   1e544:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1e548:	ldr	r2, [pc, #472]	; (1e724 <btrfs_insert_empty_items@@Base+0x294>)
   1e54a:	mov	r3, r5
   1e54c:	mov	r1, r9
   1e54e:	add	r2, pc
   1e550:	str	r0, [sp, #0]
   1e552:	mov	r0, r6
   1e554:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1e558:	ldr	r1, [pc, #460]	; (1e728 <btrfs_insert_empty_items@@Base+0x298>)
   1e55a:	ldr	r0, [pc, #464]	; (1e72c <btrfs_insert_empty_items@@Base+0x29c>)
   1e55c:	mov	r3, r9
   1e55e:	add	r1, pc
   1e560:	movw	r2, #2655	; 0xa5f
   1e564:	add.w	r1, r1, #424	; 0x1a8
   1e568:	add	r0, pc
   1e56a:	b.n	1e4da <btrfs_insert_empty_items@@Base+0x4a>
   1e56c:	ldr	r3, [sp, #20]
   1e56e:	movw	r2, #2659	; 0xa63
   1e572:	ldr.w	sl, [pc, #444]	; 1e730 <btrfs_insert_empty_items@@Base+0x2a0>
   1e576:	ldr	r0, [pc, #444]	; (1e734 <btrfs_insert_empty_items@@Base+0x2a4>)
   1e578:	ldr	r5, [r3, #32]
   1e57a:	add	sl, pc
   1e57c:	add.w	sl, sl, #424	; 0x1a8
   1e580:	add	r0, pc
   1e582:	lsrs	r3, r5, #31
   1e584:	mov	r1, sl
   1e586:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1e58a:	ldr	r3, [sp, #12]
   1e58c:	cmp	r5, r3
   1e58e:	bcs.n	1e5d6 <btrfs_insert_empty_items@@Base+0x146>
   1e590:	mov	r1, r5
   1e592:	mov	r0, r4
   1e594:	bl	1ada0 <rb_free_nodes@@Base+0x1e>
   1e598:	cmp	r6, r0
   1e59a:	mov	r7, r0
   1e59c:	bhi.n	1e656 <btrfs_insert_empty_items@@Base+0x1c6>
   1e59e:	add.w	ip, r4, #197	; 0xc5
   1e5a2:	mov	r2, r5
   1e5a4:	movs	r3, #25
   1e5a6:	ldr	r1, [sp, #12]
   1e5a8:	cmp	r2, r1
   1e5aa:	bne.n	1e682 <btrfs_insert_empty_items@@Base+0x1f2>
   1e5ac:	subs	r0, r1, r5
   1e5ae:	ldr	r1, [sp, #100]	; 0x64
   1e5b0:	mul.w	r2, r3, r5
   1e5b4:	add	r1, r5
   1e5b6:	muls	r1, r3
   1e5b8:	adds	r2, #101	; 0x65
   1e5ba:	muls	r3, r0
   1e5bc:	mov	r0, r4
   1e5be:	adds	r1, #101	; 0x65
   1e5c0:	bl	1a810 <memmove_extent_buffer@@Base>
   1e5c4:	add.w	r2, r6, #101	; 0x65
   1e5c8:	subs	r3, r7, r6
   1e5ca:	sub.w	r1, r2, r8
   1e5ce:	mov	r0, r4
   1e5d0:	mov	r6, r7
   1e5d2:	bl	1a810 <memmove_extent_buffer@@Base>
   1e5d6:	mov.w	r9, #25
   1e5da:	add	r1, sp, #32
   1e5dc:	mla	r9, r9, r5, r4
   1e5e0:	mov	r7, fp
   1e5e2:	mov.w	r8, #0
   1e5e6:	ldr	r3, [sp, #100]	; 0x64
   1e5e8:	add.w	sl, r9, #25
   1e5ec:	cmp	r8, r3
   1e5ee:	blt.n	1e696 <btrfs_insert_empty_items@@Base+0x206>
   1e5f0:	ldr	r3, [sp, #12]
   1e5f2:	mov	r0, r4
   1e5f4:	ldr	r2, [sp, #100]	; 0x64
   1e5f6:	add	r3, r2
   1e5f8:	str.w	r3, [r4, #192]	; 0xc0
   1e5fc:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1e600:	cbnz	r5, 1e632 <btrfs_insert_empty_items@@Base+0x1a2>
   1e602:	ldr.w	r3, [fp, #13]
   1e606:	ldr.w	r2, [fp, #9]
   1e60a:	ldrd	r0, r1, [sp, #16]
   1e60e:	str.w	r3, [sp, #45]	; 0x2d
   1e612:	ldrb.w	r3, [fp, #8]
   1e616:	str.w	r2, [sp, #41]	; 0x29
   1e61a:	ldr.w	r2, [fp]
   1e61e:	strb.w	r3, [sp, #40]	; 0x28
   1e622:	ldr.w	r3, [fp, #4]
   1e626:	strd	r2, r3, [sp, #32]
   1e62a:	add	r2, sp, #32
   1e62c:	movs	r3, #1
   1e62e:	bl	1c2e4 <btrfs_fixup_low_keys@@Base>
   1e632:	mov	r0, r4
   1e634:	bl	1c46c <btrfs_leaf_free_space@@Base>
   1e638:	cmp	r0, #0
   1e63a:	bge.n	1e702 <btrfs_insert_empty_items@@Base+0x272>
   1e63c:	mov	r0, r4
   1e63e:	bl	284a8 <btrfs_print_leaf@@Base>
   1e642:	ldr	r1, [pc, #244]	; (1e738 <btrfs_insert_empty_items@@Base+0x2a8>)
   1e644:	ldr	r0, [pc, #244]	; (1e73c <btrfs_insert_empty_items@@Base+0x2ac>)
   1e646:	movs	r3, #1
   1e648:	add	r1, pc
   1e64a:	movw	r2, #2714	; 0xa9a
   1e64e:	add.w	r1, r1, #424	; 0x1a8
   1e652:	add	r0, pc
   1e654:	b.n	1e4da <btrfs_insert_empty_items@@Base+0x4a>
   1e656:	mov	r0, r4
   1e658:	bl	284a8 <btrfs_print_leaf@@Base>
   1e65c:	ldr	r2, [sp, #28]
   1e65e:	ldr	r3, [pc, #192]	; (1e720 <btrfs_insert_empty_items@@Base+0x290>)
   1e660:	mov	r1, r9
   1e662:	ldr	r0, [r2, r3]
   1e664:	mov	r3, r5
   1e666:	ldr	r2, [pc, #216]	; (1e740 <btrfs_insert_empty_items@@Base+0x2b0>)
   1e668:	strd	r7, r6, [sp]
   1e66c:	add	r2, pc
   1e66e:	ldr	r0, [r0, #0]
   1e670:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1e674:	ldr	r0, [pc, #204]	; (1e744 <btrfs_insert_empty_items@@Base+0x2b4>)
   1e676:	mov	r3, r9
   1e678:	movw	r2, #2668	; 0xa6c
   1e67c:	add	r0, pc
   1e67e:	mov	r1, sl
   1e680:	b.n	1e4da <btrfs_insert_empty_items@@Base+0x4a>
   1e682:	mla	r0, r3, r2, ip
   1e686:	adds	r2, #1
   1e688:	ldr.w	r1, [r0, #17]
   1e68c:	sub.w	r1, r1, r8
   1e690:	str.w	r1, [r0, #17]
   1e694:	b.n	1e5a6 <btrfs_insert_empty_items@@Base+0x116>
   1e696:	ldr.w	r3, [r7, #13]
   1e69a:	mov	r0, r4
   1e69c:	ldr.w	r2, [r7, #9]
   1e6a0:	adds	r7, #17
   1e6a2:	str	r1, [sp, #28]
   1e6a4:	str.w	r3, [sp, #45]	; 0x2d
   1e6a8:	ldrb.w	r3, [r7, #-9]
   1e6ac:	str.w	r2, [sp, #41]	; 0x29
   1e6b0:	ldr.w	r2, [r7, #-17]
   1e6b4:	strb.w	r3, [sp, #40]	; 0x28
   1e6b8:	ldr.w	r3, [r7, #-13]
   1e6bc:	strd	r2, r3, [sp, #32]
   1e6c0:	add.w	r2, r5, r8
   1e6c4:	bl	1adbe <rb_free_nodes@@Base+0x3c>
   1e6c8:	ldr	r3, [sp, #24]
   1e6ca:	ldr	r1, [sp, #28]
   1e6cc:	ldr.w	r3, [r3, r8, lsl #2]
   1e6d0:	subs	r3, r6, r3
   1e6d2:	str.w	r3, [r9, #214]	; 0xd6
   1e6d6:	ldr	r3, [sp, #24]
   1e6d8:	ldr.w	r3, [r3, r8, lsl #2]
   1e6dc:	add.w	r8, r8, #1
   1e6e0:	subs	r6, r6, r3
   1e6e2:	str.w	r3, [r9, #218]	; 0xda
   1e6e6:	mov	r9, sl
   1e6e8:	b.n	1e5e6 <btrfs_insert_empty_items@@Base+0x156>
   1e6ea:	mvn.w	r0, #16
   1e6ee:	ldr	r2, [pc, #88]	; (1e748 <btrfs_insert_empty_items@@Base+0x2b8>)
   1e6f0:	ldr	r3, [pc, #32]	; (1e714 <btrfs_insert_empty_items@@Base+0x284>)
   1e6f2:	add	r2, pc
   1e6f4:	ldr	r3, [r2, r3]
   1e6f6:	ldr	r2, [r3, #0]
   1e6f8:	ldr	r3, [sp, #52]	; 0x34
   1e6fa:	eors	r2, r3
   1e6fc:	beq.n	1e706 <btrfs_insert_empty_items@@Base+0x276>
   1e6fe:	blx	88e4 <__stack_chk_fail@plt>
   1e702:	movs	r0, #0
   1e704:	b.n	1e6ee <btrfs_insert_empty_items@@Base+0x25e>
   1e706:	add	sp, #60	; 0x3c
   1e708:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e70c:	add	r0, sp, #544	; 0x220
   1e70e:	movs	r4, r0
   1e710:	add	r0, sp, #536	; 0x218
   1e712:	movs	r4, r0
   1e714:	lsls	r4, r7, #9
   1e716:	movs	r0, r0
   1e718:	cmp	r2, #170	; 0xaa
   1e71a:	movs	r2, r0
   1e71c:	subs	r2, #93	; 0x5d
   1e71e:	movs	r2, r0
   1e720:	lsls	r4, r1, #10
   1e722:	movs	r0, r0
   1e724:	cmp	r1, #12
   1e726:	movs	r2, r0
   1e728:	cmp	r2, #30
   1e72a:	movs	r2, r0
   1e72c:	subs	r1, #205	; 0xcd
   1e72e:	movs	r2, r0
   1e730:	cmp	r2, #2
   1e732:	movs	r2, r0
   1e734:	movs	r7, #80	; 0x50
   1e736:	movs	r2, r0
   1e738:	cmp	r1, #52	; 0x34
   1e73a:	movs	r2, r0
   1e73c:	subs	r0, #227	; 0xe3
   1e73e:	movs	r2, r0
   1e740:	cmp	r0, #20
   1e742:	movs	r2, r0
   1e744:	subs	r0, #185	; 0xb9
   1e746:	movs	r2, r0
   1e748:	add	r6, pc, #248	; (adr r6, 1e844 <btrfs_insert_item@@Base+0xf8>)
   1e74a:	movs	r4, r0

0001e74c <btrfs_insert_item@@Base>:
   1e74c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1e750:	mov	r8, r2
   1e752:	ldr	r2, [pc, #132]	; (1e7d8 <btrfs_insert_item@@Base+0x8c>)
   1e754:	mov	r6, r3
   1e756:	ldr	r3, [pc, #132]	; (1e7dc <btrfs_insert_item@@Base+0x90>)
   1e758:	sub	sp, #24
   1e75a:	add	r2, pc
   1e75c:	mov	r5, r0
   1e75e:	str	r1, [sp, #12]
   1e760:	ldr	r3, [r2, r3]
   1e762:	ldr	r7, [sp, #48]	; 0x30
   1e764:	ldr	r3, [r3, #0]
   1e766:	str	r3, [sp, #20]
   1e768:	mov.w	r3, #0
   1e76c:	bl	1b2d4 <btrfs_alloc_path@@Base>
   1e770:	mov	r4, r0
   1e772:	cbz	r0, 1e7c8 <btrfs_insert_item@@Base+0x7c>
   1e774:	movs	r3, #1
   1e776:	mov	r2, r0
   1e778:	str	r3, [sp, #4]
   1e77a:	mov	r0, r5
   1e77c:	add	r3, sp, #16
   1e77e:	ldr	r1, [sp, #12]
   1e780:	str	r3, [sp, #0]
   1e782:	mov	r3, r8
   1e784:	str	r7, [sp, #16]
   1e786:	bl	1e490 <btrfs_insert_empty_items@@Base>
   1e78a:	mov	r5, r0
   1e78c:	cbnz	r0, 1e7ae <btrfs_insert_item@@Base+0x62>
   1e78e:	ldr	r0, [r4, #0]
   1e790:	movs	r2, #25
   1e792:	ldr	r3, [r4, #32]
   1e794:	mov	r1, r6
   1e796:	str	r0, [sp, #12]
   1e798:	mla	r3, r2, r3, r0
   1e79c:	ldr.w	r2, [r3, #214]	; 0xd6
   1e7a0:	mov	r3, r7
   1e7a2:	adds	r2, #101	; 0x65
   1e7a4:	bl	1a7b4 <write_extent_buffer@@Base>
   1e7a8:	ldr	r0, [sp, #12]
   1e7aa:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1e7ae:	mov	r0, r4
   1e7b0:	bl	1b302 <btrfs_free_path@@Base>
   1e7b4:	ldr	r2, [pc, #40]	; (1e7e0 <btrfs_insert_item@@Base+0x94>)
   1e7b6:	ldr	r3, [pc, #36]	; (1e7dc <btrfs_insert_item@@Base+0x90>)
   1e7b8:	add	r2, pc
   1e7ba:	ldr	r3, [r2, r3]
   1e7bc:	ldr	r2, [r3, #0]
   1e7be:	ldr	r3, [sp, #20]
   1e7c0:	eors	r2, r3
   1e7c2:	beq.n	1e7ce <btrfs_insert_item@@Base+0x82>
   1e7c4:	blx	88e4 <__stack_chk_fail@plt>
   1e7c8:	mvn.w	r5, #11
   1e7cc:	b.n	1e7b4 <btrfs_insert_item@@Base+0x68>
   1e7ce:	mov	r0, r5
   1e7d0:	add	sp, #24
   1e7d2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1e7d6:	nop
   1e7d8:	add	r5, pc, #856	; (adr r5, 1eb34 <btrfs_next_sibling_tree_block@@Base+0x40>)
   1e7da:	movs	r4, r0
   1e7dc:	lsls	r4, r7, #9
   1e7de:	movs	r0, r0
   1e7e0:	add	r5, pc, #480	; (adr r5, 1e9c4 <btrfs_del_items@@Base+0x148>)
   1e7e2:	movs	r4, r0
   1e7e4:	push	{r4, r5, r6, r7, lr}
   1e7e6:	mov	r6, r0
   1e7e8:	mov	r7, r2
   1e7ea:	ldr.w	r0, [r3, #176]	; 0xb0
   1e7ee:	mov	r4, r1
   1e7f0:	mov	r5, r3
   1e7f2:	ldr.w	r1, [r3, #180]	; 0xb4
   1e7f6:	sub	sp, #44	; 0x2c
   1e7f8:	ldrd	r2, r3, [r6, #8]
   1e7fc:	cmp	r3, r1
   1e7fe:	ldr	r1, [pc, #116]	; (1e874 <btrfs_insert_item@@Base+0x128>)
   1e800:	it	eq
   1e802:	cmpeq	r2, r0
   1e804:	ldr	r0, [pc, #112]	; (1e878 <btrfs_insert_item@@Base+0x12c>)
   1e806:	add	r1, pc
   1e808:	movw	r2, #2805	; 0xaf5
   1e80c:	ite	ne
   1e80e:	movne	r3, #1
   1e810:	moveq	r3, #0
   1e812:	addw	r1, r1, #449	; 0x1c1
   1e816:	add	r0, pc
   1e818:	bl	1aee0 <rb_free_nodes@@Base+0x15e>
   1e81c:	ldr	r3, [r7, #36]	; 0x24
   1e81e:	movs	r2, #1
   1e820:	mov	r1, r7
   1e822:	mov	r0, r4
   1e824:	bl	1d5f0 <btrfs_del_ptr@@Base>
   1e828:	cbnz	r0, 1e870 <btrfs_insert_item@@Base+0x124>
   1e82a:	ldr	r1, [r5, #76]	; 0x4c
   1e82c:	ldr.w	r2, [r4, #200]	; 0xc8
   1e830:	ldr.w	r3, [r4, #204]	; 0xcc
   1e834:	subs	r2, r2, r1
   1e836:	ldr.w	r7, [r4, #447]	; 0x1bf
   1e83a:	str.w	r2, [r4, #200]	; 0xc8
   1e83e:	sbc.w	r3, r3, #0
   1e842:	movs	r2, #0
   1e844:	str.w	r3, [r4, #204]	; 0xcc
   1e848:	ldr.w	r1, [r4, #451]	; 0x1c3
   1e84c:	movs	r3, #0
   1e84e:	strd	r2, r3, [sp, #32]
   1e852:	strd	r2, r3, [sp, #24]
   1e856:	strd	r2, r3, [sp, #8]
   1e85a:	ldr	r3, [r5, #76]	; 0x4c
   1e85c:	strd	r7, r1, [sp, #16]
   1e860:	mov	r1, r4
   1e862:	strd	r3, r0, [sp]
   1e866:	mov	r0, r6
   1e868:	ldrd	r2, r3, [r5, #40]	; 0x28
   1e86c:	bl	240d4 <btrfs_free_extent@@Base>
   1e870:	add	sp, #44	; 0x2c
   1e872:	pop	{r4, r5, r6, r7, pc}
   1e874:	movs	r7, #118	; 0x76
   1e876:	movs	r2, r0
   1e878:	movs	r6, #139	; 0x8b
   1e87a:	movs	r2, r0

0001e87c <btrfs_del_items@@Base>:
   1e87c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e880:	mov	r6, r2
   1e882:	ldr	r2, [pc, #468]	; (1ea58 <btrfs_del_items@@Base+0x1dc>)
   1e884:	mov	r8, r3
   1e886:	ldr	r3, [pc, #468]	; (1ea5c <btrfs_del_items@@Base+0x1e0>)
   1e888:	sub	sp, #52	; 0x34
   1e88a:	add	r2, pc
   1e88c:	ldr	r5, [r6, #0]
   1e88e:	mov	sl, r0
   1e890:	mov	r7, r1
   1e892:	ldr	r3, [r2, r3]
   1e894:	ldr	r3, [r3, #0]
   1e896:	str	r3, [sp, #44]	; 0x2c
   1e898:	mov.w	r3, #0
   1e89c:	ldr	r3, [sp, #88]	; 0x58
   1e89e:	add.w	r9, r8, r3
   1e8a2:	add.w	r3, r5, #96	; 0x60
   1e8a6:	str	r3, [sp, #20]
   1e8a8:	movs	r3, #25
   1e8aa:	mul.w	r3, r3, r8
   1e8ae:	adds	r2, r5, r3
   1e8b0:	str	r3, [sp, #12]
   1e8b2:	movs	r3, #0
   1e8b4:	mov	fp, r3
   1e8b6:	ldr	r0, [sp, #88]	; 0x58
   1e8b8:	add.w	r1, r2, #25
   1e8bc:	cmp	r3, r0
   1e8be:	blt.n	1e938 <btrfs_del_items@@Base+0xbc>
   1e8c0:	ldr.w	r4, [r5, #192]	; 0xc0
   1e8c4:	str.w	r9, [sp, #16]
   1e8c8:	cmp	r9, r4
   1e8ca:	beq.n	1e920 <btrfs_del_items@@Base+0xa4>
   1e8cc:	ldr.w	r0, [r7, #464]	; 0x1d0
   1e8d0:	mov	r1, r5
   1e8d2:	add.w	r0, r0, #384	; 0x180
   1e8d6:	bl	1ae44 <rb_free_nodes@@Base+0xc2>
   1e8da:	ldr	r3, [sp, #20]
   1e8dc:	add.w	r1, r9, #4294967295	; 0xffffffff
   1e8e0:	mov.w	ip, #25
   1e8e4:	mla	r1, ip, r1, r3
   1e8e8:	ldr.w	r3, [r1, #118]	; 0x76
   1e8ec:	add.w	r2, r0, #101	; 0x65
   1e8f0:	subs	r3, r3, r0
   1e8f2:	add.w	r1, r2, fp
   1e8f6:	mov	r0, r5
   1e8f8:	bl	1a810 <memmove_extent_buffer@@Base>
   1e8fc:	add.w	r0, r5, #197	; 0xc5
   1e900:	movs	r3, #25
   1e902:	cmp	r4, r9
   1e904:	bhi.n	1e944 <btrfs_del_items@@Base+0xc8>
   1e906:	ldr	r2, [sp, #88]	; 0x58
   1e908:	mov	r0, r5
   1e90a:	add.w	r1, r2, r8
   1e90e:	ldr	r2, [sp, #16]
   1e910:	subs	r1, r4, r1
   1e912:	muls	r2, r3
   1e914:	muls	r3, r1
   1e916:	ldr	r1, [sp, #12]
   1e918:	adds	r2, #101	; 0x65
   1e91a:	adds	r1, #101	; 0x65
   1e91c:	bl	1a810 <memmove_extent_buffer@@Base>
   1e920:	ldr	r3, [sp, #88]	; 0x58
   1e922:	subs	r2, r4, r3
   1e924:	str.w	r2, [r5, #192]	; 0xc0
   1e928:	cbnz	r2, 1e980 <btrfs_del_items@@Base+0x104>
   1e92a:	ldr	r3, [r7, #0]
   1e92c:	cmp	r3, r5
   1e92e:	bne.n	1e958 <btrfs_del_items@@Base+0xdc>
   1e930:	strb.w	r2, [r5, #196]	; 0xc4
   1e934:	movs	r4, #0
   1e936:	b.n	1e96c <btrfs_del_items@@Base+0xf0>
   1e938:	ldr.w	r2, [r2, #218]	; 0xda
   1e93c:	adds	r3, #1
   1e93e:	add	fp, r2
   1e940:	mov	r2, r1
   1e942:	b.n	1e8b6 <btrfs_del_items@@Base+0x3a>
   1e944:	mla	r1, r3, r9, r0
   1e948:	add.w	r9, r9, #1
   1e94c:	ldr.w	r2, [r1, #17]
   1e950:	add	r2, fp
   1e952:	str.w	r2, [r1, #17]
   1e956:	b.n	1e902 <btrfs_del_items@@Base+0x86>
   1e958:	mov	r0, r5
   1e95a:	bl	20994 <clean_tree_block@@Base>
   1e95e:	mov	r3, r5
   1e960:	mov	r2, r6
   1e962:	mov	r1, r7
   1e964:	mov	r0, sl
   1e966:	bl	1e7e4 <btrfs_insert_item@@Base+0x98>
   1e96a:	mov	r4, r0
   1e96c:	ldr	r2, [pc, #240]	; (1ea60 <btrfs_del_items@@Base+0x1e4>)
   1e96e:	ldr	r3, [pc, #236]	; (1ea5c <btrfs_del_items@@Base+0x1e0>)
   1e970:	add	r2, pc
   1e972:	ldr	r3, [r2, r3]
   1e974:	ldr	r2, [r3, #0]
   1e976:	ldr	r3, [sp, #44]	; 0x2c
   1e978:	eors	r2, r3
   1e97a:	beq.n	1ea50 <btrfs_del_items@@Base+0x1d4>
   1e97c:	blx	88e4 <__stack_chk_fail@plt>
   1e980:	movs	r1, #0
   1e982:	mov	r0, r5
   1e984:	bl	1b1e4 <rb_free_nodes@@Base+0x462>
   1e988:	mov	r9, r0
   1e98a:	cmp.w	r8, #0
   1e98e:	bne.n	1e9a8 <btrfs_del_items@@Base+0x12c>
   1e990:	add	r4, sp, #24
   1e992:	mov	r2, r8
   1e994:	mov	r0, r5
   1e996:	mov	r1, r4
   1e998:	bl	1adca <rb_free_nodes@@Base+0x48>
   1e99c:	movs	r3, #1
   1e99e:	mov	r2, r4
   1e9a0:	mov	r1, r6
   1e9a2:	mov	r0, r7
   1e9a4:	bl	1c2e4 <btrfs_fixup_low_keys@@Base>
   1e9a8:	ldr.w	r3, [r7, #464]	; 0x1d0
   1e9ac:	ldr.w	r3, [r3, #384]	; 0x180
   1e9b0:	subs	r3, #101	; 0x65
   1e9b2:	cmp.w	r9, r3, lsr #2
   1e9b6:	bcs.n	1ea48 <btrfs_del_items@@Base+0x1cc>
   1e9b8:	ldr	r3, [r5, #80]	; 0x50
   1e9ba:	mov	r2, r6
   1e9bc:	ldr.w	r8, [r6, #36]	; 0x24
   1e9c0:	mov	r1, r7
   1e9c2:	adds	r3, #1
   1e9c4:	mov	r0, sl
   1e9c6:	str	r3, [r5, #80]	; 0x50
   1e9c8:	movs	r3, #1
   1e9ca:	str	r3, [sp, #0]
   1e9cc:	bl	1caa4 <btrfs_check_leaf@@Base+0x5b0>
   1e9d0:	subs	r4, r0, #0
   1e9d2:	bge.n	1ea3e <btrfs_del_items@@Base+0x1c2>
   1e9d4:	cmn.w	r4, #28
   1e9d8:	it	eq
   1e9da:	moveq	r4, #0
   1e9dc:	ldr	r3, [r6, #0]
   1e9de:	cmp	r3, r5
   1e9e0:	bne.n	1ea02 <btrfs_del_items@@Base+0x186>
   1e9e2:	ldr.w	r3, [r5, #192]	; 0xc0
   1e9e6:	cbz	r3, 1ea02 <btrfs_del_items@@Base+0x186>
   1e9e8:	movs	r3, #1
   1e9ea:	mov	r2, r6
   1e9ec:	mov	r1, r7
   1e9ee:	mov	r0, sl
   1e9f0:	str	r3, [sp, #0]
   1e9f2:	bl	1c82c <btrfs_check_leaf@@Base+0x338>
   1e9f6:	cmp	r0, #0
   1e9f8:	bge.n	1ea02 <btrfs_del_items@@Base+0x186>
   1e9fa:	cmn.w	r0, #28
   1e9fe:	it	ne
   1ea00:	movne	r4, r0
   1ea02:	ldr.w	r3, [r5, #192]	; 0xc0
   1ea06:	mov	r0, r5
   1ea08:	cbnz	r3, 1ea42 <btrfs_del_items@@Base+0x1c6>
   1ea0a:	bl	20994 <clean_tree_block@@Base>
   1ea0e:	mov	r3, r5
   1ea10:	mov	r2, r6
   1ea12:	mov	r1, r7
   1ea14:	mov	r0, sl
   1ea16:	str.w	r8, [r6, #36]	; 0x24
   1ea1a:	bl	1e7e4 <btrfs_insert_item@@Base+0x98>
   1ea1e:	ldr	r1, [pc, #68]	; (1ea64 <btrfs_del_items@@Base+0x1e8>)
   1ea20:	movw	r2, #2909	; 0xb5d
   1ea24:	add	r1, pc
   1ea26:	add.w	r1, r1, #464	; 0x1d0
   1ea2a:	mov	r4, r0
   1ea2c:	mov	r3, r0
   1ea2e:	ldr	r0, [pc, #56]	; (1ea68 <btrfs_del_items@@Base+0x1ec>)
   1ea30:	add	r0, pc
   1ea32:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1ea36:	mov	r0, r5
   1ea38:	bl	1a0a4 <free_extent_buffer@@Base>
   1ea3c:	b.n	1e96c <btrfs_del_items@@Base+0xf0>
   1ea3e:	movs	r4, #0
   1ea40:	b.n	1e9dc <btrfs_del_items@@Base+0x160>
   1ea42:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1ea46:	b.n	1ea36 <btrfs_del_items@@Base+0x1ba>
   1ea48:	mov	r0, r5
   1ea4a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1ea4e:	b.n	1e934 <btrfs_del_items@@Base+0xb8>
   1ea50:	mov	r0, r4
   1ea52:	add	sp, #52	; 0x34
   1ea54:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ea58:	add	r4, pc, #664	; (adr r4, 1ecf4 <btrfs_search_slot_for_read@@Base+0x24>)
   1ea5a:	movs	r4, r0
   1ea5c:	lsls	r4, r7, #9
   1ea5e:	movs	r0, r0
   1ea60:	add	r3, pc, #768	; (adr r3, 1ed64 <btrfs_search_slot_for_read@@Base+0x94>)
   1ea62:	movs	r4, r0
   1ea64:	movs	r5, #88	; 0x58
   1ea66:	movs	r2, r0
   1ea68:	cdp2	0, 4, cr0, cr13, cr1, {0}

0001ea6c <btrfs_prev_leaf@@Base>:
   1ea6c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1ea70:	adds	r3, r1, #4
   1ea72:	mov	r5, r1
   1ea74:	movs	r6, #1
   1ea76:	mov	r9, r3
   1ea78:	ldr.w	r1, [r3], #4
   1ea7c:	cbz	r1, 1ea88 <btrfs_prev_leaf@@Base+0x1c>
   1ea7e:	ldr	r7, [r3, #28]
   1ea80:	cbnz	r7, 1ea8c <btrfs_prev_leaf@@Base+0x20>
   1ea82:	adds	r6, #1
   1ea84:	cmp	r6, #8
   1ea86:	bne.n	1ea78 <btrfs_prev_leaf@@Base+0xc>
   1ea88:	movs	r0, #1
   1ea8a:	b.n	1eaac <btrfs_prev_leaf@@Base+0x40>
   1ea8c:	ldr.w	r8, [r0, #464]	; 0x1d0
   1ea90:	subs	r7, #1
   1ea92:	mov	r2, r7
   1ea94:	mov	r0, r8
   1ea96:	bl	1c092 <read_node_slot@@Base>
   1ea9a:	mov	r4, r0
   1ea9c:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1eaa0:	cbnz	r0, 1eab0 <btrfs_prev_leaf@@Base+0x44>
   1eaa2:	cmn.w	r4, #4096	; 0x1000
   1eaa6:	bhi.n	1eaec <btrfs_prev_leaf@@Base+0x80>
   1eaa8:	mvn.w	r0, #4
   1eaac:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1eab0:	add.w	r3, r6, #8
   1eab4:	str.w	r7, [r5, r3, lsl #2]
   1eab8:	add.w	r5, r5, r6, lsl #2
   1eabc:	ldr.w	r0, [r5, #-4]
   1eac0:	bl	1a0a4 <free_extent_buffer@@Base>
   1eac4:	ldr.w	r2, [r4, #192]	; 0xc0
   1eac8:	cbz	r2, 1eacc <btrfs_prev_leaf@@Base+0x60>
   1eaca:	subs	r2, #1
   1eacc:	cmp	r5, r9
   1eace:	str.w	r4, [r5, #-4]
   1ead2:	str	r2, [r5, #28]
   1ead4:	beq.n	1eaf0 <btrfs_prev_leaf@@Base+0x84>
   1ead6:	mov	r1, r4
   1ead8:	mov	r0, r8
   1eada:	bl	1c092 <read_node_slot@@Base>
   1eade:	subs	r5, #4
   1eae0:	mov	r4, r0
   1eae2:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1eae6:	cmp	r0, #0
   1eae8:	bne.n	1eabc <btrfs_prev_leaf@@Base+0x50>
   1eaea:	b.n	1eaa2 <btrfs_prev_leaf@@Base+0x36>
   1eaec:	mov	r0, r4
   1eaee:	b.n	1eaac <btrfs_prev_leaf@@Base+0x40>
   1eaf0:	movs	r0, #0
   1eaf2:	b.n	1eaac <btrfs_prev_leaf@@Base+0x40>

0001eaf4 <btrfs_next_sibling_tree_block@@Base>:
   1eaf4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eaf8:	mov	r5, r1
   1eafa:	ldrb.w	r3, [r1, #65]	; 0x41
   1eafe:	mov	r7, r0
   1eb00:	ldr	r1, [pc, #232]	; (1ebec <btrfs_next_sibling_tree_block@@Base+0xf8>)
   1eb02:	movw	r2, #2996	; 0xbb4
   1eb06:	cmp	r3, #6
   1eb08:	ldr	r0, [pc, #228]	; (1ebf0 <btrfs_next_sibling_tree_block@@Base+0xfc>)
   1eb0a:	add	r1, pc
   1eb0c:	add.w	r4, r3, #1
   1eb10:	add.w	r1, r1, #480	; 0x1e0
   1eb14:	add	r0, pc
   1eb16:	ite	ls
   1eb18:	movls	r3, #0
   1eb1a:	movhi	r3, #1
   1eb1c:	bl	1ae98 <rb_free_nodes@@Base+0x116>
   1eb20:	add.w	r2, r5, #32
   1eb24:	ldr.w	r6, [r5, r4, lsl #2]
   1eb28:	cmp	r6, #0
   1eb2a:	beq.n	1ebe2 <btrfs_next_sibling_tree_block@@Base+0xee>
   1eb2c:	ldr.w	r3, [r2, r4, lsl #2]
   1eb30:	add.w	r8, r3, #1
   1eb34:	ldr.w	r3, [r6, #192]	; 0xc0
   1eb38:	cmp	r8, r3
   1eb3a:	bcc.n	1ebaa <btrfs_next_sibling_tree_block@@Base+0xb6>
   1eb3c:	adds	r4, #1
   1eb3e:	cmp	r4, #8
   1eb40:	beq.n	1ebe2 <btrfs_next_sibling_tree_block@@Base+0xee>
   1eb42:	cmp	r4, #7
   1eb44:	ble.n	1eb24 <btrfs_next_sibling_tree_block@@Base+0x30>
   1eb46:	movs	r6, #0
   1eb48:	add.w	r3, r4, #8
   1eb4c:	add.w	sl, r5, r4, lsl #2
   1eb50:	mov.w	fp, #0
   1eb54:	mov.w	r9, #0
   1eb58:	str.w	r8, [r5, r3, lsl #2]
   1eb5c:	mov.w	r8, #0
   1eb60:	ldr.w	r0, [sl, #-4]
   1eb64:	subs	r4, #1
   1eb66:	bl	1a0a4 <free_extent_buffer@@Base>
   1eb6a:	str.w	r6, [sl, #-4]
   1eb6e:	str.w	fp, [sl, #28]
   1eb72:	ldrb.w	r3, [r5, #65]	; 0x41
   1eb76:	cmp	r3, r4
   1eb78:	beq.n	1ebe6 <btrfs_next_sibling_tree_block@@Base+0xf2>
   1eb7a:	ldrsb.w	r3, [r5, #64]	; 0x40
   1eb7e:	cbz	r3, 1eb90 <btrfs_next_sibling_tree_block@@Base+0x9c>
   1eb80:	movs	r3, #0
   1eb82:	mov	r2, r4
   1eb84:	mov	r1, r5
   1eb86:	mov	r0, r7
   1eb88:	strd	r8, r9, [sp]
   1eb8c:	bl	1c10c <reada_for_search@@Base>
   1eb90:	mov	r1, r6
   1eb92:	movs	r2, #0
   1eb94:	mov	r0, r7
   1eb96:	sub.w	sl, sl, #4
   1eb9a:	bl	1c092 <read_node_slot@@Base>
   1eb9e:	mov	r6, r0
   1eba0:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1eba4:	cmp	r0, #0
   1eba6:	bne.n	1eb60 <btrfs_next_sibling_tree_block@@Base+0x6c>
   1eba8:	b.n	1ebd8 <btrfs_next_sibling_tree_block@@Base+0xe4>
   1ebaa:	ldrsb.w	r3, [r5, #64]	; 0x40
   1ebae:	cbz	r3, 1ebc4 <btrfs_next_sibling_tree_block@@Base+0xd0>
   1ebb0:	movs	r2, #0
   1ebb2:	movs	r3, #0
   1ebb4:	mov	r1, r5
   1ebb6:	strd	r2, r3, [sp]
   1ebba:	mov	r0, r7
   1ebbc:	mov	r3, r8
   1ebbe:	mov	r2, r4
   1ebc0:	bl	1c10c <reada_for_search@@Base>
   1ebc4:	mov	r1, r6
   1ebc6:	mov	r2, r8
   1ebc8:	mov	r0, r7
   1ebca:	bl	1c092 <read_node_slot@@Base>
   1ebce:	mov	r6, r0
   1ebd0:	bl	1ae30 <rb_free_nodes@@Base+0xae>
   1ebd4:	cmp	r0, #0
   1ebd6:	bne.n	1eb48 <btrfs_next_sibling_tree_block@@Base+0x54>
   1ebd8:	mvn.w	r0, #4
   1ebdc:	add	sp, #12
   1ebde:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ebe2:	movs	r0, #1
   1ebe4:	b.n	1ebdc <btrfs_next_sibling_tree_block@@Base+0xe8>
   1ebe6:	movs	r0, #0
   1ebe8:	b.n	1ebdc <btrfs_next_sibling_tree_block@@Base+0xe8>
   1ebea:	nop
   1ebec:	movs	r4, #114	; 0x72
   1ebee:	movs	r2, r0
   1ebf0:	movs	r3, #189	; 0xbd
   1ebf2:	movs	r2, r0

0001ebf4 <btrfs_find_item@@Base>:
   1ebf4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1ebf8:	mov	r8, r0
   1ebfa:	ldr	r4, [pc, #200]	; (1ecc4 <btrfs_find_item@@Base+0xd0>)
   1ebfc:	sub	sp, #36	; 0x24
   1ebfe:	ldr	r0, [pc, #200]	; (1ecc8 <btrfs_find_item@@Base+0xd4>)
   1ec00:	mov	r6, r1
   1ec02:	add	r4, pc
   1ec04:	ldr	r7, [sp, #76]	; 0x4c
   1ec06:	ldr	r0, [r4, r0]
   1ec08:	ldr	r0, [r0, #0]
   1ec0a:	str	r0, [sp, #28]
   1ec0c:	mov.w	r0, #0
   1ec10:	strd	r2, r3, [sp, #8]
   1ec14:	ldr	r3, [sp, #64]	; 0x40
   1ec16:	ldrb.w	r0, [sp, #72]	; 0x48
   1ec1a:	str.w	r3, [sp, #17]
   1ec1e:	ldr	r3, [sp, #68]	; 0x44
   1ec20:	strb.w	r0, [sp, #16]
   1ec24:	str.w	r3, [sp, #21]
   1ec28:	cbnz	r1, 1ec38 <btrfs_find_item@@Base+0x44>
   1ec2a:	bl	1b2d4 <btrfs_alloc_path@@Base>
   1ec2e:	mov	r5, r0
   1ec30:	cbnz	r0, 1ec3a <btrfs_find_item@@Base+0x46>
   1ec32:	mvn.w	r4, #11
   1ec36:	b.n	1eca2 <btrfs_find_item@@Base+0xae>
   1ec38:	mov	r5, r1
   1ec3a:	mov.w	r9, #0
   1ec3e:	add	r2, sp, #8
   1ec40:	mov	r3, r5
   1ec42:	mov	r1, r8
   1ec44:	mov	r0, r9
   1ec46:	strd	r9, r9, [sp]
   1ec4a:	bl	1d6c0 <btrfs_search_slot@@Base>
   1ec4e:	subs	r4, r0, #0
   1ec50:	blt.n	1ec98 <btrfs_find_item@@Base+0xa4>
   1ec52:	cbz	r7, 1ec98 <btrfs_find_item@@Base+0xa4>
   1ec54:	ldr	r0, [r5, #0]
   1ec56:	cbz	r4, 1ec76 <btrfs_find_item@@Base+0x82>
   1ec58:	ldr.w	r3, [r0, #192]	; 0xc0
   1ec5c:	ldr	r2, [r5, #32]
   1ec5e:	cmp	r2, r3
   1ec60:	bcc.n	1ec76 <btrfs_find_item@@Base+0x82>
   1ec62:	strb.w	r9, [r5, #65]	; 0x41
   1ec66:	mov	r1, r5
   1ec68:	ldr.w	r0, [r8, #464]	; 0x1d0
   1ec6c:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   1ec70:	mov	r4, r0
   1ec72:	cbnz	r0, 1ec98 <btrfs_find_item@@Base+0xa4>
   1ec74:	ldr	r0, [r5, #0]
   1ec76:	ldr	r2, [r5, #32]
   1ec78:	mov	r1, r7
   1ec7a:	bl	1b234 <rb_free_nodes@@Base+0x4b2>
   1ec7e:	ldrb	r2, [r7, #8]
   1ec80:	ldrb.w	r3, [sp, #16]
   1ec84:	cmp	r2, r3
   1ec86:	bne.n	1ecb6 <btrfs_find_item@@Base+0xc2>
   1ec88:	ldrd	r2, r3, [sp, #8]
   1ec8c:	ldr	r1, [r7, #4]
   1ec8e:	ldr	r0, [r7, #0]
   1ec90:	cmp	r1, r3
   1ec92:	ite	eq
   1ec94:	cmpeq	r0, r2
   1ec96:	movne	r4, #1
   1ec98:	cmp	r5, r6
   1ec9a:	beq.n	1eca2 <btrfs_find_item@@Base+0xae>
   1ec9c:	mov	r0, r5
   1ec9e:	bl	1b302 <btrfs_free_path@@Base>
   1eca2:	ldr	r2, [pc, #40]	; (1eccc <btrfs_find_item@@Base+0xd8>)
   1eca4:	ldr	r3, [pc, #32]	; (1ecc8 <btrfs_find_item@@Base+0xd4>)
   1eca6:	add	r2, pc
   1eca8:	ldr	r3, [r2, r3]
   1ecaa:	ldr	r2, [r3, #0]
   1ecac:	ldr	r3, [sp, #28]
   1ecae:	eors	r2, r3
   1ecb0:	beq.n	1ecba <btrfs_find_item@@Base+0xc6>
   1ecb2:	blx	88e4 <__stack_chk_fail@plt>
   1ecb6:	movs	r4, #1
   1ecb8:	b.n	1ec98 <btrfs_find_item@@Base+0xa4>
   1ecba:	mov	r0, r4
   1ecbc:	add	sp, #36	; 0x24
   1ecbe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1ecc2:	nop
   1ecc4:	add	r1, pc, #184	; (adr r1, 1ed80 <btrfs_previous_item@@Base+0x8>)
   1ecc6:	movs	r4, r0
   1ecc8:	lsls	r4, r7, #9
   1ecca:	movs	r0, r0
   1eccc:	add	r0, pc, #552	; (adr r0, 1eef8 <btrfs_next_extent_item@@Base+0x38>)
   1ecce:	movs	r4, r0

0001ecd0 <btrfs_search_slot_for_read@@Base>:
   1ecd0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1ecd4:	mov	r5, r0
   1ecd6:	ldr.w	r8, [sp, #40]	; 0x28
   1ecda:	mov	r6, r1
   1ecdc:	mov	r4, r2
   1ecde:	mov	r9, r3
   1ece0:	movs	r7, #0
   1ece2:	mov	r3, r4
   1ece4:	mov	r2, r6
   1ece6:	mov	r1, r5
   1ece8:	movs	r0, #0
   1ecea:	strd	r7, r7, [sp]
   1ecee:	bl	1d6c0 <btrfs_search_slot@@Base>
   1ecf2:	cmp	r0, #0
   1ecf4:	ble.n	1ed0a <btrfs_search_slot_for_read@@Base+0x3a>
   1ecf6:	ldr	r3, [r4, #32]
   1ecf8:	cmp.w	r9, #0
   1ecfc:	beq.n	1ed3c <btrfs_search_slot_for_read@@Base+0x6c>
   1ecfe:	ldr	r2, [r4, #0]
   1ed00:	ldr.w	r2, [r2, #192]	; 0xc0
   1ed04:	cmp	r3, r2
   1ed06:	bcs.n	1ed10 <btrfs_search_slot_for_read@@Base+0x40>
   1ed08:	movs	r0, #0
   1ed0a:	add	sp, #12
   1ed0c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1ed10:	strb.w	r7, [r4, #65]	; 0x41
   1ed14:	mov	r1, r4
   1ed16:	ldr.w	r0, [r5, #464]	; 0x1d0
   1ed1a:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   1ed1e:	cmp	r0, #0
   1ed20:	ble.n	1ed0a <btrfs_search_slot_for_read@@Base+0x3a>
   1ed22:	cmp.w	r8, #0
   1ed26:	bne.n	1ed2c <btrfs_search_slot_for_read@@Base+0x5c>
   1ed28:	movs	r0, #1
   1ed2a:	b.n	1ed0a <btrfs_search_slot_for_read@@Base+0x3a>
   1ed2c:	mov	r0, r4
   1ed2e:	mov.w	r9, #0
   1ed32:	bl	1b2dc <btrfs_release_path@@Base>
   1ed36:	mov.w	r8, #0
   1ed3a:	b.n	1ece2 <btrfs_search_slot_for_read@@Base+0x12>
   1ed3c:	cbnz	r3, 1ed70 <btrfs_search_slot_for_read@@Base+0xa0>
   1ed3e:	mov	r1, r4
   1ed40:	mov	r0, r5
   1ed42:	bl	1ea6c <btrfs_prev_leaf@@Base>
   1ed46:	cmp	r0, #0
   1ed48:	blt.n	1ed0a <btrfs_search_slot_for_read@@Base+0x3a>
   1ed4a:	bne.n	1ed5e <btrfs_search_slot_for_read@@Base+0x8e>
   1ed4c:	ldr	r2, [r4, #0]
   1ed4e:	ldr	r3, [r4, #32]
   1ed50:	ldr.w	r2, [r2, #192]	; 0xc0
   1ed54:	cmp	r3, r2
   1ed56:	bne.n	1ed08 <btrfs_search_slot_for_read@@Base+0x38>
   1ed58:	subs	r3, #1
   1ed5a:	str	r3, [r4, #32]
   1ed5c:	b.n	1ed0a <btrfs_search_slot_for_read@@Base+0x3a>
   1ed5e:	cmp.w	r8, #0
   1ed62:	beq.n	1ed28 <btrfs_search_slot_for_read@@Base+0x58>
   1ed64:	mov	r0, r4
   1ed66:	mov.w	r9, #1
   1ed6a:	bl	1b2dc <btrfs_release_path@@Base>
   1ed6e:	b.n	1ed36 <btrfs_search_slot_for_read@@Base+0x66>
   1ed70:	subs	r3, #1
   1ed72:	mov	r0, r9
   1ed74:	str	r3, [r4, #32]
   1ed76:	b.n	1ed0a <btrfs_search_slot_for_read@@Base+0x3a>

0001ed78 <btrfs_previous_item@@Base>:
   1ed78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1ed7c:	mov	r6, r2
   1ed7e:	ldr	r2, [pc, #144]	; (1ee10 <btrfs_previous_item@@Base+0x98>)
   1ed80:	mov	r7, r3
   1ed82:	ldr	r3, [pc, #144]	; (1ee14 <btrfs_previous_item@@Base+0x9c>)
   1ed84:	sub	sp, #28
   1ed86:	add	r2, pc
   1ed88:	mov	r5, r0
   1ed8a:	ldr.w	r8, [sp, #56]	; 0x38
   1ed8e:	mov	r4, r1
   1ed90:	ldr	r3, [r2, r3]
   1ed92:	mov	r9, sp
   1ed94:	ldr	r3, [r3, #0]
   1ed96:	str	r3, [sp, #20]
   1ed98:	mov.w	r3, #0
   1ed9c:	ldr	r3, [r4, #32]
   1ed9e:	cbnz	r3, 1edbe <btrfs_previous_item@@Base+0x46>
   1eda0:	mov	r1, r4
   1eda2:	mov	r0, r5
   1eda4:	bl	1ea6c <btrfs_prev_leaf@@Base>
   1eda8:	cbz	r0, 1edc2 <btrfs_previous_item@@Base+0x4a>
   1edaa:	ldr	r2, [pc, #108]	; (1ee18 <btrfs_previous_item@@Base+0xa0>)
   1edac:	ldr	r3, [pc, #100]	; (1ee14 <btrfs_previous_item@@Base+0x9c>)
   1edae:	add	r2, pc
   1edb0:	ldr	r3, [r2, r3]
   1edb2:	ldr	r2, [r3, #0]
   1edb4:	ldr	r3, [sp, #20]
   1edb6:	eors	r2, r3
   1edb8:	beq.n	1ee08 <btrfs_previous_item@@Base+0x90>
   1edba:	blx	88e4 <__stack_chk_fail@plt>
   1edbe:	subs	r3, #1
   1edc0:	str	r3, [r4, #32]
   1edc2:	ldr	r0, [r4, #0]
   1edc4:	ldr.w	r2, [r0, #192]	; 0xc0
   1edc8:	cbnz	r2, 1edce <btrfs_previous_item@@Base+0x56>
   1edca:	movs	r0, #1
   1edcc:	b.n	1edaa <btrfs_previous_item@@Base+0x32>
   1edce:	ldr	r3, [r4, #32]
   1edd0:	mov	r1, r9
   1edd2:	cmp	r3, r2
   1edd4:	itt	eq
   1edd6:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1edda:	streq	r3, [r4, #32]
   1eddc:	ldr	r2, [r4, #32]
   1edde:	bl	1b234 <rb_free_nodes@@Base+0x4b2>
   1ede2:	ldrd	r0, r1, [sp]
   1ede6:	cmp	r1, r7
   1ede8:	it	eq
   1edea:	cmpeq	r0, r6
   1edec:	bcc.n	1edca <btrfs_previous_item@@Base+0x52>
   1edee:	ldrb.w	r3, [sp, #8]
   1edf2:	cmp	r3, r8
   1edf4:	beq.n	1ee04 <btrfs_previous_item@@Base+0x8c>
   1edf6:	cmp	r1, r7
   1edf8:	it	eq
   1edfa:	cmpeq	r0, r6
   1edfc:	bne.n	1ed9c <btrfs_previous_item@@Base+0x24>
   1edfe:	cmp	r3, r8
   1ee00:	bge.n	1ed9c <btrfs_previous_item@@Base+0x24>
   1ee02:	b.n	1edca <btrfs_previous_item@@Base+0x52>
   1ee04:	movs	r0, #0
   1ee06:	b.n	1edaa <btrfs_previous_item@@Base+0x32>
   1ee08:	add	sp, #28
   1ee0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1ee0e:	nop
   1ee10:	ldr	r7, [sp, #680]	; 0x2a8
   1ee12:	movs	r4, r0
   1ee14:	lsls	r4, r7, #9
   1ee16:	movs	r0, r0
   1ee18:	ldr	r7, [sp, #520]	; 0x208
   1ee1a:	movs	r4, r0

0001ee1c <btrfs_previous_extent_item@@Base>:
   1ee1c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1ee20:	mov	r6, r2
   1ee22:	ldr	r2, [pc, #144]	; (1eeb4 <btrfs_previous_extent_item@@Base+0x98>)
   1ee24:	mov	r7, r3
   1ee26:	ldr	r3, [pc, #144]	; (1eeb8 <btrfs_previous_extent_item@@Base+0x9c>)
   1ee28:	sub	sp, #24
   1ee2a:	add	r2, pc
   1ee2c:	mov	r5, r0
   1ee2e:	mov	r4, r1
   1ee30:	mov	r8, sp
   1ee32:	ldr	r3, [r2, r3]
   1ee34:	ldr	r3, [r3, #0]
   1ee36:	str	r3, [sp, #20]
   1ee38:	mov.w	r3, #0
   1ee3c:	ldr	r3, [r4, #32]
   1ee3e:	cbnz	r3, 1ee5e <btrfs_previous_extent_item@@Base+0x42>
   1ee40:	mov	r1, r4
   1ee42:	mov	r0, r5
   1ee44:	bl	1ea6c <btrfs_prev_leaf@@Base>
   1ee48:	cbz	r0, 1ee62 <btrfs_previous_extent_item@@Base+0x46>
   1ee4a:	ldr	r2, [pc, #112]	; (1eebc <btrfs_previous_extent_item@@Base+0xa0>)
   1ee4c:	ldr	r3, [pc, #104]	; (1eeb8 <btrfs_previous_extent_item@@Base+0x9c>)
   1ee4e:	add	r2, pc
   1ee50:	ldr	r3, [r2, r3]
   1ee52:	ldr	r2, [r3, #0]
   1ee54:	ldr	r3, [sp, #20]
   1ee56:	eors	r2, r3
   1ee58:	beq.n	1eeae <btrfs_previous_extent_item@@Base+0x92>
   1ee5a:	blx	88e4 <__stack_chk_fail@plt>
   1ee5e:	subs	r3, #1
   1ee60:	str	r3, [r4, #32]
   1ee62:	ldr	r0, [r4, #0]
   1ee64:	ldr.w	r2, [r0, #192]	; 0xc0
   1ee68:	cbnz	r2, 1ee6e <btrfs_previous_extent_item@@Base+0x52>
   1ee6a:	movs	r0, #1
   1ee6c:	b.n	1ee4a <btrfs_previous_extent_item@@Base+0x2e>
   1ee6e:	ldr	r3, [r4, #32]
   1ee70:	mov	r1, r8
   1ee72:	cmp	r3, r2
   1ee74:	itt	eq
   1ee76:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1ee7a:	streq	r3, [r4, #32]
   1ee7c:	ldr	r2, [r4, #32]
   1ee7e:	bl	1b234 <rb_free_nodes@@Base+0x4b2>
   1ee82:	ldrd	r0, r1, [sp]
   1ee86:	cmp	r1, r7
   1ee88:	it	eq
   1ee8a:	cmpeq	r0, r6
   1ee8c:	bcc.n	1ee6a <btrfs_previous_extent_item@@Base+0x4e>
   1ee8e:	ldrb.w	r2, [sp, #8]
   1ee92:	add.w	r3, r2, #88	; 0x58
   1ee96:	uxtb	r3, r3
   1ee98:	cmp	r3, #1
   1ee9a:	bls.n	1eeaa <btrfs_previous_extent_item@@Base+0x8e>
   1ee9c:	cmp	r1, r7
   1ee9e:	it	eq
   1eea0:	cmpeq	r0, r6
   1eea2:	bne.n	1ee3c <btrfs_previous_extent_item@@Base+0x20>
   1eea4:	cmp	r2, #167	; 0xa7
   1eea6:	bhi.n	1ee3c <btrfs_previous_extent_item@@Base+0x20>
   1eea8:	b.n	1ee6a <btrfs_previous_extent_item@@Base+0x4e>
   1eeaa:	movs	r0, #0
   1eeac:	b.n	1ee4a <btrfs_previous_extent_item@@Base+0x2e>
   1eeae:	add	sp, #24
   1eeb0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1eeb4:	ldr	r7, [sp, #24]
   1eeb6:	movs	r4, r0
   1eeb8:	lsls	r4, r7, #9
   1eeba:	movs	r0, r0
   1eebc:	ldr	r6, [sp, #904]	; 0x388
   1eebe:	movs	r4, r0

0001eec0 <btrfs_next_extent_item@@Base>:
   1eec0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1eec4:	mov	r6, r2
   1eec6:	ldr	r2, [pc, #132]	; (1ef4c <btrfs_next_extent_item@@Base+0x8c>)
   1eec8:	mov	r7, r3
   1eeca:	ldr	r3, [pc, #132]	; (1ef50 <btrfs_next_extent_item@@Base+0x90>)
   1eecc:	sub	sp, #28
   1eece:	add	r2, pc
   1eed0:	mov	r5, r0
   1eed2:	mov	r4, r1
   1eed4:	mov.w	r8, #0
   1eed8:	ldr	r3, [r2, r3]
   1eeda:	mov	r9, sp
   1eedc:	ldr	r3, [r3, #0]
   1eede:	str	r3, [sp, #20]
   1eee0:	mov.w	r3, #0
   1eee4:	ldr	r2, [r4, #0]
   1eee6:	ldr	r3, [r4, #32]
   1eee8:	adds	r3, #1
   1eeea:	str	r3, [r4, #32]
   1eeec:	ldr.w	r2, [r2, #192]	; 0xc0
   1eef0:	cmp	r3, r2
   1eef2:	bcs.n	1ef0e <btrfs_next_extent_item@@Base+0x4e>
   1eef4:	ldr	r2, [r4, #32]
   1eef6:	mov	r1, r9
   1eef8:	ldr	r0, [r4, #0]
   1eefa:	bl	1b234 <rb_free_nodes@@Base+0x4b2>
   1eefe:	ldrd	r2, r3, [sp]
   1ef02:	cmp	r7, r3
   1ef04:	it	eq
   1ef06:	cmpeq	r6, r2
   1ef08:	bcs.n	1ef34 <btrfs_next_extent_item@@Base+0x74>
   1ef0a:	movs	r0, #1
   1ef0c:	b.n	1ef20 <btrfs_next_extent_item@@Base+0x60>
   1ef0e:	strb.w	r8, [r4, #65]	; 0x41
   1ef12:	mov	r1, r4
   1ef14:	ldr.w	r0, [r5, #464]	; 0x1d0
   1ef18:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   1ef1c:	cmp	r0, #0
   1ef1e:	beq.n	1eef4 <btrfs_next_extent_item@@Base+0x34>
   1ef20:	ldr	r2, [pc, #48]	; (1ef54 <btrfs_next_extent_item@@Base+0x94>)
   1ef22:	ldr	r3, [pc, #44]	; (1ef50 <btrfs_next_extent_item@@Base+0x90>)
   1ef24:	add	r2, pc
   1ef26:	ldr	r3, [r2, r3]
   1ef28:	ldr	r2, [r3, #0]
   1ef2a:	ldr	r3, [sp, #20]
   1ef2c:	eors	r2, r3
   1ef2e:	beq.n	1ef44 <btrfs_next_extent_item@@Base+0x84>
   1ef30:	blx	88e4 <__stack_chk_fail@plt>
   1ef34:	ldrb.w	r3, [sp, #8]
   1ef38:	adds	r3, #88	; 0x58
   1ef3a:	uxtb	r3, r3
   1ef3c:	cmp	r3, #1
   1ef3e:	bhi.n	1eee4 <btrfs_next_extent_item@@Base+0x24>
   1ef40:	movs	r0, #0
   1ef42:	b.n	1ef20 <btrfs_next_extent_item@@Base+0x60>
   1ef44:	add	sp, #28
   1ef46:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1ef4a:	nop
   1ef4c:	ldr	r6, [sp, #392]	; 0x188
   1ef4e:	movs	r4, r0
   1ef50:	lsls	r4, r7, #9
   1ef52:	movs	r0, r0
   1ef54:	ldr	r6, [sp, #48]	; 0x30
   1ef56:	movs	r4, r0

0001ef58 <btrfs_uuid_tree_add@@Base>:
   1ef58:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef5c:	mov	sl, r2
   1ef5e:	ldr	r2, [pc, #408]	; (1f0f8 <btrfs_uuid_tree_add@@Base+0x1a0>)
   1ef60:	sub	sp, #60	; 0x3c
   1ef62:	ldr	r3, [pc, #408]	; (1f0fc <btrfs_uuid_tree_add@@Base+0x1a4>)
   1ef64:	mov	r8, r0
   1ef66:	add	r2, pc
   1ef68:	mov	r9, r1
   1ef6a:	ldr	r3, [r2, r3]
   1ef6c:	ldr	r3, [r3, #0]
   1ef6e:	str	r3, [sp, #52]	; 0x34
   1ef70:	mov.w	r3, #0
   1ef74:	ldr	r3, [r0, #0]
   1ef76:	ldr	r7, [r3, #52]	; 0x34
   1ef78:	cbnz	r7, 1efa4 <btrfs_uuid_tree_add@@Base+0x4c>
   1ef7a:	ldr	r1, [pc, #388]	; (1f100 <btrfs_uuid_tree_add@@Base+0x1a8>)
   1ef7c:	mvn.w	r4, #21
   1ef80:	ldr	r0, [pc, #384]	; (1f104 <btrfs_uuid_tree_add@@Base+0x1ac>)
   1ef82:	add	r1, pc
   1ef84:	add.w	r1, r1, #510	; 0x1fe
   1ef88:	add	r0, pc
   1ef8a:	bl	1a884 <__btrfs_warning@@Base>
   1ef8e:	ldr	r2, [pc, #376]	; (1f108 <btrfs_uuid_tree_add@@Base+0x1b0>)
   1ef90:	ldr	r3, [pc, #360]	; (1f0fc <btrfs_uuid_tree_add@@Base+0x1a4>)
   1ef92:	add	r2, pc
   1ef94:	ldr	r3, [r2, r3]
   1ef96:	ldr	r2, [r3, #0]
   1ef98:	ldr	r3, [sp, #52]	; 0x34
   1ef9a:	eors	r2, r3
   1ef9c:	beq.w	1f0f0 <btrfs_uuid_tree_add@@Base+0x198>
   1efa0:	blx	88e4 <__stack_chk_fail@plt>
   1efa4:	bl	1b2d4 <btrfs_alloc_path@@Base>
   1efa8:	mov	r5, r0
   1efaa:	cmp	r0, #0
   1efac:	beq.n	1f02a <btrfs_uuid_tree_add@@Base+0xd2>
   1efae:	add	r2, sp, #32
   1efb0:	mov	r0, r9
   1efb2:	str	r2, [sp, #16]
   1efb4:	mov	r1, r2
   1efb6:	bl	1aa74 <btrfs_uuid_to_key@@Base>
   1efba:	movs	r0, #0
   1efbc:	ldr	r2, [sp, #16]
   1efbe:	mov	r3, r5
   1efc0:	mov	r1, r7
   1efc2:	strd	r0, r0, [sp]
   1efc6:	strb.w	sl, [sp, #40]	; 0x28
   1efca:	bl	1d6c0 <btrfs_search_slot@@Base>
   1efce:	subs	r4, r0, #0
   1efd0:	blt.n	1f02e <btrfs_uuid_tree_add@@Base+0xd6>
   1efd2:	bne.n	1f024 <btrfs_uuid_tree_add@@Base+0xcc>
   1efd4:	ldr	r0, [r5, #0]
   1efd6:	movs	r2, #25
   1efd8:	ldr	r3, [r5, #32]
   1efda:	mla	r3, r2, r3, r0
   1efde:	ldr.w	r6, [r3, #218]	; 0xda
   1efe2:	ldr.w	fp, [r3, #214]	; 0xd6
   1efe6:	lsls	r2, r6, #29
   1efe8:	add.w	fp, fp, #101	; 0x65
   1efec:	bne.n	1f01a <btrfs_uuid_tree_add@@Base+0xc2>
   1efee:	add	r1, sp, #24
   1eff0:	cbz	r6, 1f024 <btrfs_uuid_tree_add@@Base+0xcc>
   1eff2:	movs	r3, #8
   1eff4:	mov	r2, fp
   1eff6:	strd	r0, r1, [sp, #16]
   1effa:	bl	1a79e <read_extent_buffer@@Base>
   1effe:	ldrd	r2, r3, [sp, #24]
   1f002:	ldrd	r0, r1, [sp, #96]	; 0x60
   1f006:	cmp	r1, r3
   1f008:	it	eq
   1f00a:	cmpeq	r0, r2
   1f00c:	beq.n	1f02e <btrfs_uuid_tree_add@@Base+0xd6>
   1f00e:	ldrd	r0, r1, [sp, #16]
   1f012:	add.w	fp, fp, #8
   1f016:	subs	r6, #8
   1f018:	b.n	1eff0 <btrfs_uuid_tree_add@@Base+0x98>
   1f01a:	ldr	r0, [pc, #240]	; (1f10c <btrfs_uuid_tree_add@@Base+0x1b4>)
   1f01c:	mov	r1, r6
   1f01e:	add	r0, pc
   1f020:	bl	1a884 <__btrfs_warning@@Base>
   1f024:	mvn.w	r4, #1
   1f028:	b.n	1f02e <btrfs_uuid_tree_add@@Base+0xd6>
   1f02a:	mvn.w	r4, #11
   1f02e:	mov	r0, r5
   1f030:	bl	1b302 <btrfs_free_path@@Base>
   1f034:	adds	r3, r4, #2
   1f036:	bne.n	1ef8e <btrfs_uuid_tree_add@@Base+0x36>
   1f038:	add	r3, sp, #32
   1f03a:	mov	r0, r9
   1f03c:	str	r3, [sp, #16]
   1f03e:	mov	r1, r3
   1f040:	strb.w	sl, [sp, #40]	; 0x28
   1f044:	bl	1aa74 <btrfs_uuid_to_key@@Base>
   1f048:	bl	1b2d4 <btrfs_alloc_path@@Base>
   1f04c:	mov	r5, r0
   1f04e:	cmp	r0, #0
   1f050:	beq.n	1f0ea <btrfs_uuid_tree_add@@Base+0x192>
   1f052:	movs	r2, #1
   1f054:	ldr	r3, [sp, #16]
   1f056:	str	r2, [sp, #4]
   1f058:	add	r6, sp, #24
   1f05a:	mov	r2, r0
   1f05c:	mov	r1, r7
   1f05e:	mov	r0, r8
   1f060:	str	r6, [sp, #0]
   1f062:	mov.w	r9, #8
   1f066:	str.w	r9, [sp, #24]
   1f06a:	bl	1e490 <btrfs_insert_empty_items@@Base>
   1f06e:	subs	r4, r0, #0
   1f070:	blt.n	1f09e <btrfs_uuid_tree_add@@Base+0x146>
   1f072:	ldr	r4, [r5, #0]
   1f074:	movs	r2, #25
   1f076:	ldr	r3, [r5, #32]
   1f078:	mla	r3, r2, r3, r4
   1f07c:	ldr.w	r2, [r3, #214]	; 0xd6
   1f080:	adds	r2, #101	; 0x65
   1f082:	ldrd	r0, r1, [sp, #96]	; 0x60
   1f086:	movs	r3, #8
   1f088:	strd	r0, r1, [sp, #24]
   1f08c:	mov	r0, r4
   1f08e:	mov	r1, r6
   1f090:	bl	1a7b4 <write_extent_buffer@@Base>
   1f094:	mov	r0, r4
   1f096:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   1f09a:	movs	r4, #0
   1f09c:	b.n	1f0e2 <btrfs_uuid_tree_add@@Base+0x18a>
   1f09e:	cmn.w	r4, #17
   1f0a2:	bne.n	1f0c6 <btrfs_uuid_tree_add@@Base+0x16e>
   1f0a4:	mov	r2, r9
   1f0a6:	mov	r1, r5
   1f0a8:	mov	r0, r7
   1f0aa:	bl	1d4b4 <btrfs_extend_item@@Base>
   1f0ae:	ldr	r4, [r5, #0]
   1f0b0:	ldr	r3, [r5, #32]
   1f0b2:	movs	r2, #25
   1f0b4:	mla	r3, r2, r3, r4
   1f0b8:	ldr.w	r2, [r3, #218]	; 0xda
   1f0bc:	ldr.w	r3, [r3, #214]	; 0xd6
   1f0c0:	add	r2, r3
   1f0c2:	adds	r2, #93	; 0x5d
   1f0c4:	b.n	1f082 <btrfs_uuid_tree_add@@Base+0x12a>
   1f0c6:	ldr.w	r2, [sp, #41]	; 0x29
   1f0ca:	ldr.w	r3, [sp, #45]	; 0x2d
   1f0ce:	ldr	r0, [pc, #64]	; (1f110 <btrfs_uuid_tree_add@@Base+0x1b8>)
   1f0d0:	strd	sl, r4, [sp, #8]
   1f0d4:	strd	r2, r3, [sp]
   1f0d8:	add	r0, pc
   1f0da:	ldrd	r2, r3, [sp, #32]
   1f0de:	bl	1a884 <__btrfs_warning@@Base>
   1f0e2:	mov	r0, r5
   1f0e4:	bl	1b302 <btrfs_free_path@@Base>
   1f0e8:	b.n	1ef8e <btrfs_uuid_tree_add@@Base+0x36>
   1f0ea:	mvn.w	r4, #11
   1f0ee:	b.n	1f0e2 <btrfs_uuid_tree_add@@Base+0x18a>
   1f0f0:	mov	r0, r4
   1f0f2:	add	sp, #60	; 0x3c
   1f0f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f0f8:	ldr	r5, [sp, #808]	; 0x328
   1f0fa:	movs	r4, r0
   1f0fc:	lsls	r4, r7, #9
   1f0fe:	movs	r0, r0
   1f100:	subs	r2, r7, #7
   1f102:	movs	r2, r0
   1f104:	subs	r3, r6, #5
   1f106:	movs	r2, r0
   1f108:	ldr	r5, [sp, #632]	; 0x278
   1f10a:	movs	r4, r0
   1f10c:	subs	r6, r7, #3
   1f10e:	movs	r2, r0
   1f110:	subs	r5, r4, #1
   1f112:	movs	r2, r0
   1f114:	movs	r0, r0
   1f116:	movs	r0, r0
   1f118:	push	{r4, r5, lr}
   1f11a:	ldrd	r4, r5, [r1]
   1f11e:	ldrd	r2, r3, [r0, #-56]	; 0x38
   1f122:	cmp	r3, r5
   1f124:	it	eq
   1f126:	cmpeq	r2, r4
   1f128:	bcc.n	1f13a <btrfs_uuid_tree_add@@Base+0x1e2>
   1f12a:	cmp	r5, r3
   1f12c:	it	eq
   1f12e:	cmpeq	r4, r2
   1f130:	ite	cc
   1f132:	movcc.w	r0, #4294967295	; 0xffffffff
   1f136:	movcs	r0, #0
   1f138:	pop	{r4, r5, pc}
   1f13a:	movs	r0, #1
   1f13c:	b.n	1f138 <btrfs_uuid_tree_add@@Base+0x1e0>

0001f13e <btrfs_fs_roots_compare_roots@@Base>:
   1f13e:	subs	r1, #56	; 0x38
   1f140:	b.n	1f118 <btrfs_uuid_tree_add@@Base+0x1c0>
   1f142:	movs	r2, #0
   1f144:	addw	r3, r0, #2859	; 0xb2b
   1f148:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1f14c:	mov.w	r8, #0
   1f150:	ldr	r6, [r0, #72]	; 0x48
   1f152:	mov.w	r9, #0
   1f156:	ldr	r7, [r0, #76]	; 0x4c
   1f158:	mov	r0, r2
   1f15a:	ldr	r5, [r3, #12]
   1f15c:	ldr	r4, [r3, #8]
   1f15e:	cmp	r5, r7
   1f160:	it	eq
   1f162:	cmpeq	r4, r6
   1f164:	beq.n	1f174 <btrfs_fs_roots_compare_roots@@Base+0x36>
   1f166:	cmp	r9, r5
   1f168:	it	eq
   1f16a:	cmpeq	r8, r4
   1f16c:	ittt	cc
   1f16e:	movcc	r0, r2
   1f170:	movcc	r8, r4
   1f172:	movcc	r9, r5
   1f174:	adds	r2, #1
   1f176:	adds	r3, #168	; 0xa8
   1f178:	cmp	r2, #4
   1f17a:	bne.n	1f15a <btrfs_fs_roots_compare_roots@@Base+0x1c>
   1f17c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1f180:	ldr	r2, [pc, #60]	; (1f1c0 <btrfs_fs_roots_compare_roots@@Base+0x82>)
   1f182:	movs	r1, #16
   1f184:	ldr	r3, [pc, #60]	; (1f1c4 <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1f186:	push	{r4, lr}
   1f188:	add	r2, pc
   1f18a:	sub	sp, #72	; 0x48
   1f18c:	add	r4, sp, #4
   1f18e:	ldr	r3, [r2, r3]
   1f190:	mov	r0, r4
   1f192:	ldr	r3, [r3, #0]
   1f194:	str	r3, [sp, #68]	; 0x44
   1f196:	mov.w	r3, #0
   1f19a:	blx	8ae0 <backtrace@plt>
   1f19e:	movs	r2, #2
   1f1a0:	mov	r1, r0
   1f1a2:	mov	r0, r4
   1f1a4:	blx	8e50 <backtrace_symbols_fd@plt>
   1f1a8:	ldr	r2, [pc, #28]	; (1f1c8 <btrfs_fs_roots_compare_roots@@Base+0x8a>)
   1f1aa:	ldr	r3, [pc, #24]	; (1f1c4 <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1f1ac:	add	r2, pc
   1f1ae:	ldr	r3, [r2, r3]
   1f1b0:	ldr	r2, [r3, #0]
   1f1b2:	ldr	r3, [sp, #68]	; 0x44
   1f1b4:	eors	r2, r3
   1f1b6:	beq.n	1f1bc <btrfs_fs_roots_compare_roots@@Base+0x7e>
   1f1b8:	blx	88e4 <__stack_chk_fail@plt>
   1f1bc:	add	sp, #72	; 0x48
   1f1be:	pop	{r4, pc}
   1f1c0:	ldr	r3, [sp, #672]	; 0x2a0
   1f1c2:	movs	r4, r0
   1f1c4:	lsls	r4, r7, #9
   1f1c6:	movs	r0, r0
   1f1c8:	ldr	r3, [sp, #528]	; 0x210
   1f1ca:	movs	r4, r0
   1f1cc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f1d0:	mov	r5, r0
   1f1d2:	ldr.w	sl, [r1, #144]	; 0x90
   1f1d6:	mov	r4, r1
   1f1d8:	ldr.w	fp, [r1, #148]	; 0x94
   1f1dc:	ldr.w	r8, [r0, #352]	; 0x160
   1f1e0:	ldr.w	r2, [r0, #384]	; 0x180
   1f1e4:	ldrd	r0, r1, [r1, #40]	; 0x28
   1f1e8:	cmp	r1, fp
   1f1ea:	it	eq
   1f1ec:	cmpeq	r0, sl
   1f1ee:	bne.n	1f278 <btrfs_fs_roots_compare_roots@@Base+0x13a>
   1f1f0:	ldrb.w	r1, [r4, #196]	; 0xc4
   1f1f4:	cmp	r1, #7
   1f1f6:	bhi.n	1f27e <btrfs_fs_roots_compare_roots@@Base+0x140>
   1f1f8:	ldr.w	r0, [r4, #192]	; 0xc0
   1f1fc:	subs	r2, #101	; 0x65
   1f1fe:	cbnz	r1, 1f216 <btrfs_fs_roots_compare_roots@@Base+0xd8>
   1f200:	ldr	r3, [pc, #136]	; (1f28c <btrfs_fs_roots_compare_roots@@Base+0x14e>)
   1f202:	umull	r2, r3, r2, r3
   1f206:	lsrs	r3, r3, #3
   1f208:	cmp	r0, r3
   1f20a:	bhi.n	1f210 <btrfs_fs_roots_compare_roots@@Base+0xd2>
   1f20c:	cbnz	r0, 1f272 <btrfs_fs_roots_compare_roots@@Base+0x134>
   1f20e:	cbz	r1, 1f272 <btrfs_fs_roots_compare_roots@@Base+0x134>
   1f210:	mvn.w	r0, #3
   1f214:	b.n	1f266 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1f216:	ldr	r3, [pc, #120]	; (1f290 <btrfs_fs_roots_compare_roots@@Base+0x152>)
   1f218:	b.n	1f202 <btrfs_fs_roots_compare_roots@@Base+0xc4>
   1f21a:	ldr.w	r3, [r5, #352]	; 0x160
   1f21e:	cmp	r3, r8
   1f220:	bne.n	1f26a <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1f222:	ldr.w	r3, [r5, #308]	; 0x134
   1f226:	mov	r7, r9
   1f228:	ldr.w	r3, [r3, #188]	; 0xbc
   1f22c:	and.w	r6, r3, #1024	; 0x400
   1f230:	orrs.w	r3, r6, r7
   1f234:	beq.n	1f26a <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1f236:	movs	r3, #16
   1f238:	add.w	r1, r8, r3
   1f23c:	movs	r2, #32
   1f23e:	mov	r0, r4
   1f240:	bl	1a78c <memcmp_extent_buffer@@Base>
   1f244:	ldrb.w	r3, [r5, #364]	; 0x16c
   1f248:	ands.w	r3, r3, #64	; 0x40
   1f24c:	clz	r0, r0
   1f250:	mov.w	r0, r0, lsr #5
   1f254:	bne.n	1f284 <btrfs_fs_roots_compare_roots@@Base+0x146>
   1f256:	cbnz	r0, 1f288 <btrfs_fs_roots_compare_roots@@Base+0x14a>
   1f258:	ldr.w	r8, [r8, #92]	; 0x5c
   1f25c:	cmp.w	r8, #0
   1f260:	bne.n	1f21a <btrfs_fs_roots_compare_roots@@Base+0xdc>
   1f262:	mvn.w	r0, #1
   1f266:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f26a:	movs	r3, #16
   1f26c:	movs	r2, #32
   1f26e:	mov	r1, r8
   1f270:	b.n	1f23e <btrfs_fs_roots_compare_roots@@Base+0x100>
   1f272:	mov.w	r9, #0
   1f276:	b.n	1f25c <btrfs_fs_roots_compare_roots@@Base+0x11e>
   1f278:	mov.w	r0, #4294967295	; 0xffffffff
   1f27c:	b.n	1f266 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1f27e:	mvn.w	r0, #2
   1f282:	b.n	1f266 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1f284:	movs	r0, #0
   1f286:	b.n	1f266 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1f288:	mov	r0, r3
   1f28a:	b.n	1f266 <btrfs_fs_roots_compare_roots@@Base+0x128>
   1f28c:	strh	r7, [r3, #40]	; 0x28
   1f28e:	str	r3, [r5, r7]
   1f290:	strh	r1, [r4, #30]
   1f292:	subs	r6, #15
   1f294:	b.w	87c8 <free@plt>
   1f298:	cbz	r0, 1f2aa <btrfs_fs_roots_compare_roots@@Base+0x16c>
   1f29a:	cmn.w	r0, #4096	; 0x1000
   1f29e:	bhi.n	1f2a8 <btrfs_fs_roots_compare_roots@@Base+0x16a>
   1f2a0:	ldr	r0, [r0, #84]	; 0x54
   1f2a2:	ubfx	r0, r0, #2, #1
   1f2a6:	bx	lr
   1f2a8:	movs	r0, #0
   1f2aa:	bx	lr
   1f2ac:	push	{r4, r5, r6, r7, lr}
   1f2ae:	mov	r1, r3
   1f2b0:	ldr	r6, [pc, #100]	; (1f318 <btrfs_fs_roots_compare_roots@@Base+0x1da>)
   1f2b2:	sub	sp, #28
   1f2b4:	mov	r4, r0
   1f2b6:	mov	r0, r2
   1f2b8:	orrs.w	r3, r0, r1
   1f2bc:	add	r6, pc
   1f2be:	ldr	r5, [sp, #48]	; 0x30
   1f2c0:	beq.n	1f306 <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1f2c2:	ldr.w	r3, [r4, #180]	; 0xb4
   1f2c6:	ldr.w	r2, [r4, #176]	; 0xb0
   1f2ca:	cmp	r1, r3
   1f2cc:	it	eq
   1f2ce:	cmpeq	r0, r2
   1f2d0:	beq.n	1f306 <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1f2d2:	ldr	r7, [pc, #72]	; (1f31c <btrfs_fs_roots_compare_roots@@Base+0x1de>)
   1f2d4:	ldr	r6, [r6, r7]
   1f2d6:	strd	r2, r3, [sp, #16]
   1f2da:	ldrd	r2, r3, [r4, #40]	; 0x28
   1f2de:	strd	r0, r1, [sp, #8]
   1f2e2:	movs	r1, #1
   1f2e4:	strd	r2, r3, [sp]
   1f2e8:	ldr	r2, [pc, #52]	; (1f320 <btrfs_fs_roots_compare_roots@@Base+0x1e2>)
   1f2ea:	ldr	r0, [r6, #0]
   1f2ec:	add	r2, pc
   1f2ee:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f2f2:	ldr	r3, [r4, #84]	; 0x54
   1f2f4:	cbz	r5, 1f30a <btrfs_fs_roots_compare_roots@@Base+0x1cc>
   1f2f6:	ldr	r0, [pc, #44]	; (1f324 <btrfs_fs_roots_compare_roots@@Base+0x1e6>)
   1f2f8:	orr.w	r3, r3, #1024	; 0x400
   1f2fc:	ldr	r1, [r6, #0]
   1f2fe:	add	r0, pc
   1f300:	str	r3, [r4, #84]	; 0x54
   1f302:	blx	8de4 <fputs@plt+0x4>
   1f306:	movs	r0, #0
   1f308:	b.n	1f312 <btrfs_fs_roots_compare_roots@@Base+0x1d4>
   1f30a:	movs	r0, #1
   1f30c:	bic.w	r3, r3, #4
   1f310:	str	r3, [r4, #84]	; 0x54
   1f312:	add	sp, #28
   1f314:	pop	{r4, r5, r6, r7, pc}
   1f316:	nop
   1f318:	ldr	r2, [sp, #464]	; 0x1d0
   1f31a:	movs	r4, r0
   1f31c:	lsls	r4, r1, #10
   1f31e:	movs	r0, r0
   1f320:	subs	r2, r4, #2
   1f322:	movs	r2, r0
   1f324:	subs	r5, r1, #3
   1f326:	movs	r2, r0
   1f328:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f32c:	mov	r5, r2
   1f32e:	ldr	r2, [pc, #244]	; (1f424 <btrfs_fs_roots_compare_roots@@Base+0x2e6>)
   1f330:	sub	sp, #128	; 0x80
   1f332:	ldr	r3, [pc, #244]	; (1f428 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1f334:	movs	r6, #0
   1f336:	add	r2, pc
   1f338:	ldr.w	r8, [pc, #240]	; 1f42c <btrfs_fs_roots_compare_roots@@Base+0x2ee>
   1f33c:	mov	r7, r0
   1f33e:	mov	r4, r1
   1f340:	ldr	r3, [r2, r3]
   1f342:	mov	r1, r6
   1f344:	add	r0, sp, #48	; 0x30
   1f346:	movs	r2, #33	; 0x21
   1f348:	ldr	r3, [r3, #0]
   1f34a:	str	r3, [sp, #124]	; 0x7c
   1f34c:	mov.w	r3, #0
   1f350:	str	r6, [sp, #44]	; 0x2c
   1f352:	blx	8bf8 <memset@plt+0x4>
   1f356:	add	r0, sp, #88	; 0x58
   1f358:	movs	r2, #33	; 0x21
   1f35a:	mov	r1, r6
   1f35c:	add	r8, pc
   1f35e:	str	r6, [sp, #84]	; 0x54
   1f360:	blx	8bf8 <memset@plt+0x4>
   1f364:	cmp	r5, #0
   1f366:	beq.n	1f3e8 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1f368:	ldr	r3, [pc, #196]	; (1f430 <btrfs_fs_roots_compare_roots@@Base+0x2f2>)
   1f36a:	movs	r1, #1
   1f36c:	adds	r5, #4
   1f36e:	ldr.w	r6, [r8, r3]
   1f372:	ldrd	r2, r3, [r4, #40]	; 0x28
   1f376:	strd	r2, r3, [sp]
   1f37a:	ldr	r2, [pc, #184]	; (1f434 <btrfs_fs_roots_compare_roots@@Base+0x2f6>)
   1f37c:	ldr	r0, [r6, #0]
   1f37e:	add	r2, pc
   1f380:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f384:	cmp	r5, #3
   1f386:	bhi.n	1f3e8 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1f388:	tbb	[pc, r5]
   1f38c:	subs	r0, #63	; 0x3f
   1f38e:	subs	r2, r0, #0
   1f390:	add	r5, sp, #28
   1f392:	mov	r0, r4
   1f394:	add	r4, sp, #84	; 0x54
   1f396:	movs	r2, #32
   1f398:	movs	r3, #16
   1f39a:	mov	r1, r5
   1f39c:	bl	1a79e <read_extent_buffer@@Base>
   1f3a0:	mov	r1, r4
   1f3a2:	mov	r0, r5
   1f3a4:	blx	8760 <uuid_unparse@plt>
   1f3a8:	add	r3, sp, #44	; 0x2c
   1f3aa:	ldr	r0, [r7, #0]
   1f3ac:	mov	r1, r3
   1f3ae:	str	r3, [sp, #20]
   1f3b0:	adds	r0, #16
   1f3b2:	blx	8760 <uuid_unparse@plt>
   1f3b6:	ldr	r2, [pc, #128]	; (1f438 <btrfs_fs_roots_compare_roots@@Base+0x2fa>)
   1f3b8:	ldr	r3, [sp, #20]
   1f3ba:	add	r2, pc
   1f3bc:	str	r4, [sp, #0]
   1f3be:	ldr	r0, [r6, #0]
   1f3c0:	movs	r1, #1
   1f3c2:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f3c6:	b.n	1f3e8 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1f3c8:	ldr.w	r2, [r4, #144]	; 0x90
   1f3cc:	movs	r1, #1
   1f3ce:	ldr.w	r3, [r4, #148]	; 0x94
   1f3d2:	strd	r2, r3, [sp, #8]
   1f3d6:	ldrd	r2, r3, [r4, #40]	; 0x28
   1f3da:	strd	r2, r3, [sp]
   1f3de:	ldr	r2, [pc, #92]	; (1f43c <btrfs_fs_roots_compare_roots@@Base+0x2fe>)
   1f3e0:	ldr	r0, [r6, #0]
   1f3e2:	add	r2, pc
   1f3e4:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f3e8:	ldr	r2, [pc, #84]	; (1f440 <btrfs_fs_roots_compare_roots@@Base+0x302>)
   1f3ea:	ldr	r3, [pc, #60]	; (1f428 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1f3ec:	add	r2, pc
   1f3ee:	ldr	r3, [r2, r3]
   1f3f0:	ldr	r2, [r3, #0]
   1f3f2:	ldr	r3, [sp, #124]	; 0x7c
   1f3f4:	eors	r2, r3
   1f3f6:	beq.n	1f41c <btrfs_fs_roots_compare_roots@@Base+0x2de>
   1f3f8:	blx	88e4 <__stack_chk_fail@plt>
   1f3fc:	ldr	r2, [pc, #68]	; (1f444 <btrfs_fs_roots_compare_roots@@Base+0x306>)
   1f3fe:	movs	r3, #8
   1f400:	str	r3, [sp, #0]
   1f402:	add	r2, pc
   1f404:	ldrb.w	r3, [r4, #196]	; 0xc4
   1f408:	b.n	1f3be <btrfs_fs_roots_compare_roots@@Base+0x280>
   1f40a:	ldr	r2, [pc, #60]	; (1f448 <btrfs_fs_roots_compare_roots@@Base+0x30a>)
   1f40c:	movs	r1, #1
   1f40e:	ldr.w	r3, [r4, #192]	; 0xc0
   1f412:	ldr	r0, [r6, #0]
   1f414:	add	r2, pc
   1f416:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f41a:	b.n	1f3e8 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1f41c:	add	sp, #128	; 0x80
   1f41e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f422:	nop
   1f424:	ldr	r1, [sp, #1000]	; 0x3e8
   1f426:	movs	r4, r0
   1f428:	lsls	r4, r7, #9
   1f42a:	movs	r0, r0
   1f42c:	ldr	r1, [sp, #848]	; 0x350
   1f42e:	movs	r4, r0
   1f430:	lsls	r4, r1, #10
   1f432:	movs	r0, r0
   1f434:	subs	r7, r4, #1
   1f436:	movs	r2, r0
   1f438:	subs	r1, r0, #1
   1f43a:	movs	r2, r0
   1f43c:	subs	r2, r7, #0
   1f43e:	movs	r2, r0
   1f440:	ldr	r1, [sp, #272]	; 0x110
   1f442:	movs	r4, r0
   1f444:	subs	r1, r0, #1
   1f446:	movs	r2, r0
   1f448:	subs	r3, r0, #1
   1f44a:	movs	r2, r0
   1f44c:	push	{r0, r1, r2, r3, r4, lr}
   1f44e:	ldr	r3, [pc, #40]	; (1f478 <btrfs_fs_roots_compare_roots@@Base+0x33a>)
   1f450:	ldr	r4, [pc, #40]	; (1f47c <btrfs_fs_roots_compare_roots@@Base+0x33e>)
   1f452:	add	r3, pc
   1f454:	ldr	r4, [r3, r4]
   1f456:	movs	r3, #0
   1f458:	strd	r2, r1, [sp]
   1f45c:	movs	r1, #1
   1f45e:	strd	r0, r3, [sp, #8]
   1f462:	ldr	r2, [pc, #28]	; (1f480 <btrfs_fs_roots_compare_roots@@Base+0x342>)
   1f464:	ldr	r3, [pc, #28]	; (1f484 <btrfs_fs_roots_compare_roots@@Base+0x346>)
   1f466:	add	r2, pc
   1f468:	ldr	r0, [r4, #0]
   1f46a:	add	r3, pc
   1f46c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f470:	bl	1f180 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1f474:	blx	8e08 <abort@plt>
   1f478:	ldr	r0, [sp, #888]	; 0x378
   1f47a:	movs	r4, r0
   1f47c:	lsls	r4, r1, #10
   1f47e:	movs	r0, r0
   1f480:	vhadd.s8	d0, d6, d1
   1f484:	subs	r3, r0, #0
   1f486:	movs	r2, r0
   1f488:	push	{r0, r1, r2, r3, r4, lr}
   1f48a:	ldr	r4, [pc, #40]	; (1f4b4 <btrfs_fs_roots_compare_roots@@Base+0x376>)
   1f48c:	ldr	r5, [pc, #40]	; (1f4b8 <btrfs_fs_roots_compare_roots@@Base+0x37a>)
   1f48e:	add	r4, pc
   1f490:	ldr	r4, [r4, r5]
   1f492:	strd	r2, r1, [sp]
   1f496:	movs	r1, #1
   1f498:	strd	r0, r3, [sp, #8]
   1f49c:	ldr	r2, [pc, #28]	; (1f4bc <btrfs_fs_roots_compare_roots@@Base+0x37e>)
   1f49e:	ldr	r3, [pc, #32]	; (1f4c0 <btrfs_fs_roots_compare_roots@@Base+0x382>)
   1f4a0:	add	r2, pc
   1f4a2:	ldr	r0, [r4, #0]
   1f4a4:	add	r3, pc
   1f4a6:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f4aa:	bl	1f180 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1f4ae:	blx	8e08 <abort@plt>
   1f4b2:	nop
   1f4b4:	ldr	r0, [sp, #648]	; 0x288
   1f4b6:	movs	r4, r0
   1f4b8:	lsls	r4, r1, #10
   1f4ba:	movs	r0, r0
   1f4bc:	blt.n	1f4ce <btrfs_csum_data@@Base>
   1f4be:	movs	r1, r0
   1f4c0:	adds	r1, r1, #7
   1f4c2:	movs	r2, r0
   1f4c4:	push	{r3, lr}
   1f4c6:	cbz	r3, 1f4cc <btrfs_fs_roots_compare_roots@@Base+0x38e>
   1f4c8:	bl	1f488 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1f4cc:	pop	{r3, pc}

0001f4ce <btrfs_csum_data@@Base>:
   1f4ce:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f4d2:	mov	r4, r2
   1f4d4:	ldr.w	r8, [pc, #120]	; 1f550 <btrfs_csum_data@@Base+0x82>
   1f4d8:	mov	r7, r0
   1f4da:	mov	r5, r1
   1f4dc:	movs	r2, #32
   1f4de:	movs	r1, #0
   1f4e0:	mov	r0, r4
   1f4e2:	add	r8, pc
   1f4e4:	mov	r6, r3
   1f4e6:	blx	8bf8 <memset@plt+0x4>
   1f4ea:	cmp	r7, #3
   1f4ec:	bhi.n	1f52e <btrfs_csum_data@@Base+0x60>
   1f4ee:	tbb	[pc, r7]
   1f4f2:	lsrs	r2, r0, #4
   1f4f4:	asrs	r0, r2, #28
   1f4f6:	mov	r2, r4
   1f4f8:	mov	r1, r6
   1f4fa:	mov	r0, r5
   1f4fc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1f500:	b.w	36f14 <hash_crc32c@@Base>
   1f504:	mov	r2, r4
   1f506:	mov	r1, r6
   1f508:	mov	r0, r5
   1f50a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1f50e:	b.w	36f2c <hash_xxhash@@Base>
   1f512:	mov	r2, r4
   1f514:	mov	r1, r6
   1f516:	mov	r0, r5
   1f518:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1f51c:	b.w	36f7c <hash_sha256@@Base>
   1f520:	mov	r2, r4
   1f522:	mov	r1, r6
   1f524:	mov	r0, r5
   1f526:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1f52a:	b.w	36fd8 <hash_blake2b@@Base>
   1f52e:	ldr	r3, [pc, #36]	; (1f554 <btrfs_csum_data@@Base+0x86>)
   1f530:	movs	r1, #1
   1f532:	ldr	r2, [pc, #36]	; (1f558 <btrfs_csum_data@@Base+0x8a>)
   1f534:	ldr.w	r0, [r8, r3]
   1f538:	add	r2, pc
   1f53a:	mov	r3, r7
   1f53c:	ldr	r0, [r0, #0]
   1f53e:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f542:	ldr	r1, [pc, #24]	; (1f55c <btrfs_csum_data@@Base+0x8e>)
   1f544:	ldr	r0, [pc, #24]	; (1f560 <btrfs_csum_data@@Base+0x92>)
   1f546:	movs	r2, #157	; 0x9d
   1f548:	add	r1, pc
   1f54a:	add	r0, pc
   1f54c:	bl	1f44c <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1f550:	ldr	r0, [sp, #312]	; 0x138
   1f552:	movs	r4, r0
   1f554:	lsls	r4, r1, #10
   1f556:	movs	r0, r0
   1f558:	adds	r7, r7, #4
   1f55a:	movs	r2, r0
   1f55c:	movs	r6, #25
   1f55e:	movs	r2, r0
   1f560:	asrs	r4, r3, #29
   1f562:	movs	r2, r0

0001f564 <csum_tree_block_size@@Base>:
   1f564:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f568:	mov	r4, r2
   1f56a:	ldr	r2, [pc, #144]	; (1f5fc <csum_tree_block_size@@Base+0x98>)
   1f56c:	mov	r5, r0
   1f56e:	mov	r0, r3
   1f570:	ldr	r3, [pc, #140]	; (1f600 <csum_tree_block_size@@Base+0x9c>)
   1f572:	add	r2, pc
   1f574:	sub	sp, #56	; 0x38
   1f576:	add	r7, sp, #20
   1f578:	ldr.w	r8, [pc, #136]	; 1f604 <csum_tree_block_size@@Base+0xa0>
   1f57c:	ldr	r3, [r2, r3]
   1f57e:	mov	r6, r1
   1f580:	add.w	r1, r5, #128	; 0x80
   1f584:	mov	r2, r7
   1f586:	ldr	r3, [r3, #0]
   1f588:	str	r3, [sp, #52]	; 0x34
   1f58a:	mov.w	r3, #0
   1f58e:	ldr	r3, [r5, #76]	; 0x4c
   1f590:	add	r8, pc
   1f592:	subs	r3, #32
   1f594:	bl	1f4ce <btrfs_csum_data@@Base>
   1f598:	mov	r3, r6
   1f59a:	cbz	r4, 1f5e6 <csum_tree_block_size@@Base+0x82>
   1f59c:	movs	r2, #0
   1f59e:	mov	r1, r7
   1f5a0:	mov	r0, r5
   1f5a2:	bl	1a78c <memcmp_extent_buffer@@Base>
   1f5a6:	mov	r4, r0
   1f5a8:	cbz	r0, 1f5d2 <csum_tree_block_size@@Base+0x6e>
   1f5aa:	ldrb.w	r2, [r5, #96]	; 0x60
   1f5ae:	movs	r4, #1
   1f5b0:	ldr	r3, [pc, #84]	; (1f608 <csum_tree_block_size@@Base+0xa4>)
   1f5b2:	ldrd	r0, r1, [r5, #40]	; 0x28
   1f5b6:	ldr.w	r3, [r8, r3]
   1f5ba:	str	r2, [sp, #12]
   1f5bc:	ldrb.w	r2, [sp, #20]
   1f5c0:	strd	r0, r1, [sp]
   1f5c4:	movs	r1, #1
   1f5c6:	str	r2, [sp, #8]
   1f5c8:	ldr	r2, [pc, #64]	; (1f60c <csum_tree_block_size@@Base+0xa8>)
   1f5ca:	ldr	r0, [r3, #0]
   1f5cc:	add	r2, pc
   1f5ce:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f5d2:	ldr	r2, [pc, #60]	; (1f610 <csum_tree_block_size@@Base+0xac>)
   1f5d4:	ldr	r3, [pc, #40]	; (1f600 <csum_tree_block_size@@Base+0x9c>)
   1f5d6:	add	r2, pc
   1f5d8:	ldr	r3, [r2, r3]
   1f5da:	ldr	r2, [r3, #0]
   1f5dc:	ldr	r3, [sp, #52]	; 0x34
   1f5de:	eors	r2, r3
   1f5e0:	beq.n	1f5f2 <csum_tree_block_size@@Base+0x8e>
   1f5e2:	blx	88e4 <__stack_chk_fail@plt>
   1f5e6:	mov	r2, r4
   1f5e8:	mov	r1, r7
   1f5ea:	mov	r0, r5
   1f5ec:	bl	1a7b4 <write_extent_buffer@@Base>
   1f5f0:	b.n	1f5d2 <csum_tree_block_size@@Base+0x6e>
   1f5f2:	mov	r0, r4
   1f5f4:	add	sp, #56	; 0x38
   1f5f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f5fa:	nop
   1f5fc:	str	r7, [sp, #760]	; 0x2f8
   1f5fe:	movs	r4, r0
   1f600:	lsls	r4, r7, #9
   1f602:	movs	r0, r0
   1f604:	str	r7, [sp, #640]	; 0x280
   1f606:	movs	r4, r0
   1f608:	lsls	r4, r1, #10
   1f60a:	movs	r0, r0
   1f60c:	adds	r1, r1, #3
   1f60e:	movs	r2, r0
   1f610:	str	r7, [sp, #360]	; 0x168
   1f612:	movs	r4, r0

0001f614 <verify_tree_block_csum_silent@@Base>:
   1f614:	push	{r4, r5, r6, lr}
   1f616:	mov	r4, r0
   1f618:	mov	r0, r2
   1f61a:	ldr	r2, [pc, #76]	; (1f668 <verify_tree_block_csum_silent@@Base+0x54>)
   1f61c:	ldr	r3, [pc, #76]	; (1f66c <verify_tree_block_csum_silent@@Base+0x58>)
   1f61e:	sub	sp, #40	; 0x28
   1f620:	add	r2, pc
   1f622:	add	r5, sp, #4
   1f624:	mov	r6, r1
   1f626:	add.w	r1, r4, #128	; 0x80
   1f62a:	ldr	r3, [r2, r3]
   1f62c:	mov	r2, r5
   1f62e:	ldr	r3, [r3, #0]
   1f630:	str	r3, [sp, #36]	; 0x24
   1f632:	mov.w	r3, #0
   1f636:	ldr	r3, [r4, #76]	; 0x4c
   1f638:	subs	r3, #32
   1f63a:	bl	1f4ce <btrfs_csum_data@@Base>
   1f63e:	mov	r3, r6
   1f640:	movs	r2, #0
   1f642:	mov	r1, r5
   1f644:	mov	r0, r4
   1f646:	bl	1a78c <memcmp_extent_buffer@@Base>
   1f64a:	ldr	r2, [pc, #36]	; (1f670 <verify_tree_block_csum_silent@@Base+0x5c>)
   1f64c:	ldr	r3, [pc, #28]	; (1f66c <verify_tree_block_csum_silent@@Base+0x58>)
   1f64e:	add	r2, pc
   1f650:	ldr	r3, [r2, r3]
   1f652:	subs	r0, #0
   1f654:	it	ne
   1f656:	movne	r0, #1
   1f658:	ldr	r2, [r3, #0]
   1f65a:	ldr	r3, [sp, #36]	; 0x24
   1f65c:	eors	r2, r3
   1f65e:	beq.n	1f664 <verify_tree_block_csum_silent@@Base+0x50>
   1f660:	blx	88e4 <__stack_chk_fail@plt>
   1f664:	add	sp, #40	; 0x28
   1f666:	pop	{r4, r5, r6, pc}
   1f668:	str	r7, [sp, #64]	; 0x40
   1f66a:	movs	r4, r0
   1f66c:	lsls	r4, r7, #9
   1f66e:	movs	r0, r0
   1f670:	str	r6, [sp, #904]	; 0x388
   1f672:	movs	r4, r0

0001f674 <csum_tree_block@@Base>:
   1f674:	push	{r4, r5, r6, lr}
   1f676:	mov	r4, r0
   1f678:	ldr.w	r0, [r0, #308]	; 0x134
   1f67c:	mov	r5, r1
   1f67e:	mov	r6, r2
   1f680:	bl	1b294 <btrfs_super_csum_size@@Base>
   1f684:	ldr.w	r3, [r4, #308]	; 0x134
   1f688:	ldrh.w	r3, [r3, #196]	; 0xc4
   1f68c:	mov	r1, r0
   1f68e:	cbz	r6, 1f6a4 <csum_tree_block@@Base+0x30>
   1f690:	ldrb.w	r2, [r4, #364]	; 0x16c
   1f694:	lsls	r2, r2, #26
   1f696:	bpl.n	1f6a4 <csum_tree_block@@Base+0x30>
   1f698:	mov	r0, r5
   1f69a:	mov	r2, r3
   1f69c:	ldmia.w	sp!, {r4, r5, r6, lr}
   1f6a0:	b.w	1f614 <verify_tree_block_csum_silent@@Base>
   1f6a4:	mov	r2, r6
   1f6a6:	mov	r0, r5
   1f6a8:	ldmia.w	sp!, {r4, r5, r6, lr}
   1f6ac:	b.w	1f564 <csum_tree_block_size@@Base>

0001f6b0 <btrfs_find_tree_block@@Base>:
   1f6b0:	adds	r0, #64	; 0x40
   1f6b2:	b.w	1a11c <find_extent_buffer@@Base>

0001f6b6 <btrfs_find_create_tree_block@@Base>:
   1f6b6:	push	{r0, r1, r2, lr}
   1f6b8:	ldr.w	r1, [r0, #384]	; 0x180
   1f6bc:	str	r1, [sp, #0]
   1f6be:	bl	1a1a2 <alloc_extent_buffer@@Base>
   1f6c2:	add	sp, #12
   1f6c4:	ldr.w	pc, [sp], #4

0001f6c8 <read_whole_eb@@Base>:
   1f6c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f6cc:	sub	sp, #60	; 0x3c
   1f6ce:	ldr	r3, [pc, #328]	; (1f818 <read_whole_eb@@Base+0x150>)
   1f6d0:	mov	r7, r0
   1f6d2:	str	r2, [sp, #16]
   1f6d4:	mov	r4, r1
   1f6d6:	ldr	r2, [pc, #324]	; (1f81c <read_whole_eb@@Base+0x154>)
   1f6d8:	movs	r6, #0
   1f6da:	ldr	r5, [r1, #76]	; 0x4c
   1f6dc:	add	r2, pc
   1f6de:	ldr.w	r9, [pc, #320]	; 1f820 <read_whole_eb@@Base+0x158>
   1f6e2:	ldr	r3, [r2, r3]
   1f6e4:	add	r9, pc
   1f6e6:	ldr	r3, [r3, #0]
   1f6e8:	str	r3, [sp, #52]	; 0x34
   1f6ea:	mov.w	r3, #0
   1f6ee:	add	r3, sp, #36	; 0x24
   1f6f0:	str	r6, [sp, #36]	; 0x24
   1f6f2:	str	r3, [sp, #20]
   1f6f4:	add	r3, sp, #40	; 0x28
   1f6f6:	str	r3, [sp, #24]
   1f6f8:	cbnz	r5, 1f712 <read_whole_eb@@Base+0x4a>
   1f6fa:	mov	r0, r5
   1f6fc:	ldr	r2, [pc, #292]	; (1f824 <read_whole_eb@@Base+0x15c>)
   1f6fe:	ldr	r3, [pc, #280]	; (1f818 <read_whole_eb@@Base+0x150>)
   1f700:	add	r2, pc
   1f702:	ldr	r3, [r2, r3]
   1f704:	ldr	r2, [r3, #0]
   1f706:	ldr	r3, [sp, #52]	; 0x34
   1f708:	eors	r2, r3
   1f70a:	beq.w	1f810 <read_whole_eb@@Base+0x148>
   1f70e:	blx	88e4 <__stack_chk_fail@plt>
   1f712:	ldrb.w	r1, [r7, #364]	; 0x16c
   1f716:	mov	sl, r5
   1f718:	mov.w	fp, #0
   1f71c:	ldrd	r2, r3, [r4, #40]	; 0x28
   1f720:	ands.w	r1, r1, #4
   1f724:	strd	sl, fp, [sp, #40]	; 0x28
   1f728:	bne.n	1f7d2 <read_whole_eb@@Base+0x10a>
   1f72a:	cmp	r3, #0
   1f72c:	it	eq
   1f72e:	cmpeq.w	r2, #65536	; 0x10000
   1f732:	beq.n	1f7d2 <read_whole_eb@@Base+0x10a>
   1f734:	ldr	r0, [sp, #16]
   1f736:	adds	r2, r2, r6
   1f738:	str	r1, [sp, #12]
   1f73a:	adc.w	r3, r3, #0
   1f73e:	str	r0, [sp, #8]
   1f740:	ldr	r0, [sp, #20]
   1f742:	str	r0, [sp, #4]
   1f744:	ldr	r0, [sp, #24]
   1f746:	str	r0, [sp, #0]
   1f748:	mov	r0, r7
   1f74a:	bl	2d2b0 <btrfs_map_block@@Base>
   1f74e:	mov	r1, r0
   1f750:	cbz	r0, 1f780 <read_whole_eb@@Base+0xb8>
   1f752:	ldr	r3, [pc, #212]	; (1f828 <read_whole_eb@@Base+0x160>)
   1f754:	movs	r2, #0
   1f756:	ldr.w	r0, [r9, r3]
   1f75a:	ldrd	r3, r1, [r4, #40]	; 0x28
   1f75e:	adds	r3, r6, r3
   1f760:	adc.w	r2, r1, r2
   1f764:	strd	r3, r2, [sp]
   1f768:	ldr	r2, [pc, #192]	; (1f82c <read_whole_eb@@Base+0x164>)
   1f76a:	movs	r1, #1
   1f76c:	ldr	r0, [r0, #0]
   1f76e:	add	r2, pc
   1f770:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f774:	ldr	r0, [sp, #36]	; 0x24
   1f776:	blx	87cc <free@plt+0x4>
   1f77a:	mvn.w	r0, #4
   1f77e:	b.n	1f6fc <read_whole_eb@@Base+0x34>
   1f780:	ldr	r0, [sp, #36]	; 0x24
   1f782:	ldr.w	ip, [r0, #8]
   1f786:	ldr.w	r3, [ip, #24]
   1f78a:	cmp	r3, #0
   1f78c:	ble.n	1f776 <read_whole_eb@@Base+0xae>
   1f78e:	str	r3, [r4, #88]	; 0x58
   1f790:	ldrd	r3, r2, [ip, #16]
   1f794:	str	r1, [sp, #28]
   1f796:	adds	r3, #1
   1f798:	adc.w	r2, r2, #0
   1f79c:	strd	r3, r2, [ip, #16]
   1f7a0:	ldrd	r2, r3, [r0, #16]
   1f7a4:	strd	r2, r3, [r4, #48]	; 0x30
   1f7a8:	blx	87cc <free@plt+0x4>
   1f7ac:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f7b0:	ldr	r1, [sp, #28]
   1f7b2:	cmp	fp, r3
   1f7b4:	it	eq
   1f7b6:	cmpeq	r5, r2
   1f7b8:	str	r1, [sp, #36]	; 0x24
   1f7ba:	bcc.n	1f80a <read_whole_eb@@Base+0x142>
   1f7bc:	ldr	r2, [sp, #40]	; 0x28
   1f7be:	mov	r1, r6
   1f7c0:	mov	r0, r4
   1f7c2:	bl	1a2ce <read_extent_from_disk@@Base>
   1f7c6:	cmp	r0, #0
   1f7c8:	bne.n	1f77a <read_whole_eb@@Base+0xb2>
   1f7ca:	ldr	r3, [sp, #40]	; 0x28
   1f7cc:	add	r6, r3
   1f7ce:	subs	r5, r5, r3
   1f7d0:	b.n	1f6f8 <read_whole_eb@@Base+0x30>
   1f7d2:	ldr.w	r0, [r7, #352]	; 0x160
   1f7d6:	ldr.w	r1, [r0, #72]!
   1f7da:	cmp	r1, r0
   1f7dc:	bne.n	1f7f6 <read_whole_eb@@Base+0x12e>
   1f7de:	ldr	r0, [r1, #24]
   1f7e0:	strd	r2, r3, [r4, #48]	; 0x30
   1f7e4:	str	r0, [r4, #88]	; 0x58
   1f7e6:	ldrd	r3, r2, [r1, #16]
   1f7ea:	adds	r3, #1
   1f7ec:	adc.w	r2, r2, #0
   1f7f0:	strd	r3, r2, [r1, #16]
   1f7f4:	b.n	1f7bc <read_whole_eb@@Base+0xf4>
   1f7f6:	ldrd	sl, fp, [r1, #64]	; 0x40
   1f7fa:	cmp.w	fp, #0
   1f7fe:	it	eq
   1f800:	cmpeq.w	sl, #1
   1f804:	beq.n	1f7de <read_whole_eb@@Base+0x116>
   1f806:	ldr	r1, [r1, #0]
   1f808:	b.n	1f7da <read_whole_eb@@Base+0x112>
   1f80a:	strd	sl, fp, [sp, #40]	; 0x28
   1f80e:	b.n	1f7bc <read_whole_eb@@Base+0xf4>
   1f810:	add	sp, #60	; 0x3c
   1f812:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f816:	nop
   1f818:	lsls	r4, r7, #9
   1f81a:	movs	r0, r0
   1f81c:	str	r6, [sp, #336]	; 0x150
   1f81e:	movs	r4, r0
   1f820:	str	r6, [sp, #304]	; 0x130
   1f822:	movs	r4, r0
   1f824:	str	r6, [sp, #192]	; 0xc0
   1f826:	movs	r4, r0
   1f828:	lsls	r4, r1, #10
   1f82a:	movs	r0, r0
   1f82c:	lsrs	r4, r5, #10
   1f82e:	movs	r2, r0

0001f830 <read_extent_data@@Base>:
   1f830:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f834:	mov	r6, r1
   1f836:	ldr	r5, [pc, #176]	; (1f8e8 <read_extent_data@@Base+0xb8>)
   1f838:	sub	sp, #28
   1f83a:	ldr	r1, [pc, #176]	; (1f8ec <read_extent_data@@Base+0xbc>)
   1f83c:	mov	sl, r2
   1f83e:	add	r5, pc
   1f840:	ldr	r4, [sp, #64]	; 0x40
   1f842:	mov	r7, r3
   1f844:	ldr.w	fp, [pc, #168]	; 1f8f0 <read_extent_data@@Base+0xc0>
   1f848:	ldr	r1, [r5, r1]
   1f84a:	ldr	r5, [sp, #68]	; 0x44
   1f84c:	add	fp, pc
   1f84e:	ldr	r1, [r1, #0]
   1f850:	str	r1, [sp, #20]
   1f852:	mov.w	r1, #0
   1f856:	ldrd	r8, r9, [r4]
   1f85a:	movs	r1, #0
   1f85c:	str	r1, [sp, #12]
   1f85e:	str	r5, [sp, #8]
   1f860:	add	r5, sp, #16
   1f862:	strd	r4, r5, [sp]
   1f866:	str	r1, [sp, #16]
   1f868:	bl	2d2b0 <btrfs_map_block@@Base>
   1f86c:	mov	r5, r0
   1f86e:	cbz	r0, 1f8a0 <read_extent_data@@Base+0x70>
   1f870:	ldr	r3, [pc, #128]	; (1f8f4 <read_extent_data@@Base+0xc4>)
   1f872:	movs	r1, #1
   1f874:	ldr	r2, [pc, #128]	; (1f8f8 <read_extent_data@@Base+0xc8>)
   1f876:	ldr.w	r3, [fp, r3]
   1f87a:	add	r2, pc
   1f87c:	strd	sl, r7, [sp]
   1f880:	ldr	r0, [r3, #0]
   1f882:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1f886:	ldr	r0, [sp, #16]
   1f888:	blx	87cc <free@plt+0x4>
   1f88c:	ldr	r2, [pc, #108]	; (1f8fc <read_extent_data@@Base+0xcc>)
   1f88e:	ldr	r3, [pc, #92]	; (1f8ec <read_extent_data@@Base+0xbc>)
   1f890:	add	r2, pc
   1f892:	ldr	r3, [r2, r3]
   1f894:	ldr	r2, [r3, #0]
   1f896:	ldr	r3, [sp, #20]
   1f898:	eors	r2, r3
   1f89a:	beq.n	1f8e0 <read_extent_data@@Base+0xb0>
   1f89c:	blx	88e4 <__stack_chk_fail@plt>
   1f8a0:	ldr	r1, [sp, #16]
   1f8a2:	ldrd	r2, r3, [r4]
   1f8a6:	ldr	r0, [r1, #8]
   1f8a8:	cmp	r9, r3
   1f8aa:	it	eq
   1f8ac:	cmpeq	r8, r2
   1f8ae:	it	cc
   1f8b0:	strdcc	r8, r9, [r4]
   1f8b4:	ldr	r0, [r0, #24]
   1f8b6:	cmp	r0, #0
   1f8b8:	bge.n	1f8c0 <read_extent_data@@Base+0x90>
   1f8ba:	mvn.w	r5, #4
   1f8be:	b.n	1f886 <read_extent_data@@Base+0x56>
   1f8c0:	ldrd	r2, r3, [r1, #16]
   1f8c4:	mov	r1, r6
   1f8c6:	strd	r2, r3, [sp]
   1f8ca:	ldr	r2, [r4, #0]
   1f8cc:	blx	8a2c <pread64@plt>
   1f8d0:	ldrd	r2, r3, [r4]
   1f8d4:	asrs	r1, r0, #31
   1f8d6:	cmp	r1, r3
   1f8d8:	it	eq
   1f8da:	cmpeq	r0, r2
   1f8dc:	beq.n	1f886 <read_extent_data@@Base+0x56>
   1f8de:	b.n	1f8ba <read_extent_data@@Base+0x8a>
   1f8e0:	mov	r0, r5
   1f8e2:	add	sp, #28
   1f8e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f8e8:	str	r4, [sp, #968]	; 0x3c8
   1f8ea:	movs	r4, r0
   1f8ec:	lsls	r4, r7, #9
   1f8ee:	movs	r0, r0
   1f8f0:	str	r4, [sp, #912]	; 0x390
   1f8f2:	movs	r4, r0
   1f8f4:	lsls	r4, r1, #10
   1f8f6:	movs	r0, r0
   1f8f8:	subs	r2, r2, r1
   1f8fa:	movs	r2, r0
   1f8fc:	str	r4, [sp, #640]	; 0x280
   1f8fe:	movs	r4, r0

0001f900 <write_and_map_eb@@Base>:
   1f900:	ldr	r2, [pc, #248]	; (1f9fc <write_and_map_eb@@Base+0xfc>)
   1f902:	ldr	r3, [pc, #252]	; (1fa00 <write_and_map_eb@@Base+0x100>)
   1f904:	add	r2, pc
   1f906:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1f90a:	sub	sp, #48	; 0x30
   1f90c:	ldr	r3, [r2, r3]
   1f90e:	mov	r5, r1
   1f910:	ldr	r2, [r1, #76]	; 0x4c
   1f912:	mov	r6, r0
   1f914:	ldr	r3, [r3, #0]
   1f916:	str	r3, [sp, #44]	; 0x2c
   1f918:	mov.w	r3, #0
   1f91c:	movs	r3, #0
   1f91e:	strd	r3, r3, [sp, #24]
   1f922:	strd	r2, r3, [sp, #32]
   1f926:	add	r2, sp, #24
   1f928:	strd	r3, r2, [sp, #8]
   1f92c:	add	r3, sp, #28
   1f92e:	str	r3, [sp, #4]
   1f930:	add	r3, sp, #32
   1f932:	str	r3, [sp, #0]
   1f934:	ldrd	r2, r3, [r1, #40]	; 0x28
   1f938:	movs	r1, #1
   1f93a:	bl	2d2b0 <btrfs_map_block@@Base>
   1f93e:	ldr	r4, [sp, #24]
   1f940:	mov	r3, r0
   1f942:	cmp	r4, #0
   1f944:	beq.n	1f9e8 <write_and_map_eb@@Base+0xe8>
   1f946:	ldrd	r2, r3, [sp, #32]
   1f94a:	mov	r1, r5
   1f94c:	mov	r0, r6
   1f94e:	str	r4, [sp, #8]
   1f950:	strd	r2, r3, [sp]
   1f954:	ldr	r2, [sp, #28]
   1f956:	bl	2dc18 <write_raid56_with_parity@@Base>
   1f95a:	ldr	r1, [pc, #168]	; (1fa04 <write_and_map_eb@@Base+0x104>)
   1f95c:	mov.w	r2, #494	; 0x1ee
   1f960:	add	r1, pc
   1f962:	adds	r1, #16
   1f964:	mov	r3, r0
   1f966:	ldr	r0, [pc, #160]	; (1fa08 <write_and_map_eb@@Base+0x108>)
   1f968:	add	r0, pc
   1f96a:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1f96e:	ldr	r0, [sp, #24]
   1f970:	blx	87cc <free@plt+0x4>
   1f974:	ldr	r0, [sp, #28]
   1f976:	blx	87cc <free@plt+0x4>
   1f97a:	ldr	r2, [pc, #144]	; (1fa0c <write_and_map_eb@@Base+0x10c>)
   1f97c:	ldr	r3, [pc, #128]	; (1fa00 <write_and_map_eb@@Base+0x100>)
   1f97e:	add	r2, pc
   1f980:	ldr	r3, [r2, r3]
   1f982:	ldr	r2, [r3, #0]
   1f984:	ldr	r3, [sp, #44]	; 0x2c
   1f986:	eors	r2, r3
   1f988:	beq.n	1f9f4 <write_and_map_eb@@Base+0xf4>
   1f98a:	blx	88e4 <__stack_chk_fail@plt>
   1f98e:	mov.w	r2, #496	; 0x1f0
   1f992:	mov	r1, r7
   1f994:	mov	r0, r6
   1f996:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1f99a:	add.w	r1, r8, r4, lsl #4
   1f99e:	adds	r4, #1
   1f9a0:	mov	r0, r5
   1f9a2:	ldr	r3, [r1, #8]
   1f9a4:	add.w	r8, r8, r4, lsl #4
   1f9a8:	ldr	r3, [r3, #24]
   1f9aa:	str	r3, [r5, #88]	; 0x58
   1f9ac:	ldrd	r2, r3, [r8]
   1f9b0:	strd	r2, r3, [r5, #48]	; 0x30
   1f9b4:	ldr	r2, [r1, #8]
   1f9b6:	ldrd	r3, r1, [r2, #16]
   1f9ba:	adds	r3, #1
   1f9bc:	adc.w	r1, r1, #0
   1f9c0:	strd	r3, r1, [r2, #16]
   1f9c4:	bl	1a302 <write_extent_to_disk@@Base>
   1f9c8:	mov.w	r2, #502	; 0x1f6
   1f9cc:	mov	r1, r7
   1f9ce:	mov	r3, r0
   1f9d0:	str	r0, [sp, #20]
   1f9d2:	mov	r0, r6
   1f9d4:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   1f9d8:	ldr	r3, [sp, #20]
   1f9da:	ldr.w	r8, [sp, #28]
   1f9de:	ldr.w	r2, [r8, #4]
   1f9e2:	cmp	r2, r4
   1f9e4:	bgt.n	1f98e <write_and_map_eb@@Base+0x8e>
   1f9e6:	b.n	1f96e <write_and_map_eb@@Base+0x6e>
   1f9e8:	ldr	r7, [pc, #36]	; (1fa10 <write_and_map_eb@@Base+0x110>)
   1f9ea:	ldr	r6, [pc, #40]	; (1fa14 <write_and_map_eb@@Base+0x114>)
   1f9ec:	add	r7, pc
   1f9ee:	adds	r7, #16
   1f9f0:	add	r6, pc
   1f9f2:	b.n	1f9da <write_and_map_eb@@Base+0xda>
   1f9f4:	movs	r0, #0
   1f9f6:	add	sp, #48	; 0x30
   1f9f8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1f9fc:	str	r4, [sp, #176]	; 0xb0
   1f9fe:	movs	r4, r0
   1fa00:	lsls	r4, r7, #9
   1fa02:	movs	r0, r0
   1fa04:	movs	r2, #1
   1fa06:	movs	r2, r0
   1fa08:	vhadd.s16	d0, d5, d1
   1fa0c:	str	r3, [sp, #712]	; 0x2c8
   1fa0e:	movs	r4, r0
   1fa10:	movs	r1, #117	; 0x75
   1fa12:	movs	r2, r0
   1fa14:	cdp	0, 8, cr0, cr13, cr1, {0}

0001fa18 <btrfs_setup_root@@Base>:
   1fa18:	push	{r4, r5, r6, lr}
   1fa1a:	mov	r4, r0
   1fa1c:	movs	r0, #0
   1fa1e:	strd	r2, r3, [r4, #472]	; 0x1d8
   1fa22:	mov	r6, r2
   1fa24:	mov	r5, r3
   1fa26:	movs	r2, #0
   1fa28:	movs	r3, #0
   1fa2a:	strd	r0, r0, [r4]
   1fa2e:	strd	r2, r3, [r4, #480]	; 0x1e0
   1fa32:	strd	r2, r3, [r4, #504]	; 0x1f8
   1fa36:	add.w	r3, r4, #520	; 0x208
   1fa3a:	strd	r0, r0, [r4, #488]	; 0x1e8
   1fa3e:	movw	r2, #439	; 0x1b7
   1fa42:	str.w	r1, [r4, #464]	; 0x1d0
   1fa46:	mov	r1, r0
   1fa48:	strd	r3, r3, [r4, #520]	; 0x208
   1fa4c:	add.w	r3, r4, #512	; 0x200
   1fa50:	str.w	r0, [r4, #455]	; 0x1c7
   1fa54:	str.w	r0, [r4, #459]	; 0x1cb
   1fa58:	strb.w	r0, [r4, #463]	; 0x1cf
   1fa5c:	add.w	r0, r4, #8
   1fa60:	strd	r3, r3, [r4, #512]	; 0x200
   1fa64:	blx	8bf8 <memset@plt+0x4>
   1fa68:	str.w	r6, [r4, #447]	; 0x1bf
   1fa6c:	str.w	r5, [r4, #451]	; 0x1c3
   1fa70:	pop	{r4, r5, r6, pc}

0001fa72 <btrfs_free_fs_root@@Base>:
   1fa72:	push	{r4, lr}
   1fa74:	mov	r4, r0
   1fa76:	ldr	r0, [r0, #0]
   1fa78:	cbz	r0, 1fa7e <btrfs_free_fs_root@@Base+0xc>
   1fa7a:	bl	1a0a4 <free_extent_buffer@@Base>
   1fa7e:	ldr	r0, [r4, #4]
   1fa80:	cbz	r0, 1fa86 <btrfs_free_fs_root@@Base+0x14>
   1fa82:	bl	1a0a4 <free_extent_buffer@@Base>
   1fa86:	mov	r0, r4
   1fa88:	blx	87cc <free@plt+0x4>
   1fa8c:	movs	r0, #0
   1fa8e:	pop	{r4, pc}
   1fa90:	sub.w	r0, r0, #528	; 0x210
   1fa94:	b.w	1fa72 <btrfs_free_fs_root@@Base>

0001fa98 <btrfs_free_fs_info@@Base>:
   1fa98:	push	{r4, lr}
   1fa9a:	mov	r4, r0
   1fa9c:	ldr	r0, [r0, #44]	; 0x2c
   1fa9e:	cbz	r0, 1faa4 <btrfs_free_fs_info@@Base+0xc>
   1faa0:	blx	87cc <free@plt+0x4>
   1faa4:	ldr	r0, [r4, #28]
   1faa6:	blx	87cc <free@plt+0x4>
   1faaa:	ldr	r0, [r4, #24]
   1faac:	blx	87cc <free@plt+0x4>
   1fab0:	ldr	r0, [r4, #32]
   1fab2:	blx	87cc <free@plt+0x4>
   1fab6:	ldr	r0, [r4, #36]	; 0x24
   1fab8:	blx	87cc <free@plt+0x4>
   1fabc:	ldr	r0, [r4, #40]	; 0x28
   1fabe:	blx	87cc <free@plt+0x4>
   1fac2:	ldr	r0, [r4, #48]	; 0x30
   1fac4:	blx	87cc <free@plt+0x4>
   1fac8:	ldr	r0, [r4, #52]	; 0x34
   1faca:	blx	87cc <free@plt+0x4>
   1face:	ldr.w	r0, [r4, #308]	; 0x134
   1fad2:	blx	87cc <free@plt+0x4>
   1fad6:	ldr	r0, [r4, #60]	; 0x3c
   1fad8:	blx	87cc <free@plt+0x4>
   1fadc:	mov	r0, r4
   1fade:	ldmia.w	sp!, {r4, lr}
   1fae2:	b.w	87c8 <free@plt>

0001fae6 <btrfs_new_fs_info@@Base>:
   1fae6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1faea:	sub	sp, #20
   1faec:	mov	fp, r0
   1faee:	mov.w	r1, #400	; 0x190
   1faf2:	movs	r0, #1
   1faf4:	strd	r2, r3, [sp]
   1faf8:	blx	8718 <calloc@plt+0x4>
   1fafc:	mov	r4, r0
   1fafe:	cmp	r0, #0
   1fb00:	beq.n	1fbaa <btrfs_new_fs_info@@Base+0xc4>
   1fb02:	mov.w	r1, #544	; 0x220
   1fb06:	movs	r0, #1
   1fb08:	blx	8718 <calloc@plt+0x4>
   1fb0c:	mov.w	r1, #544	; 0x220
   1fb10:	str	r0, [r4, #28]
   1fb12:	str	r0, [sp, #12]
   1fb14:	movs	r0, #1
   1fb16:	blx	8718 <calloc@plt+0x4>
   1fb1a:	mov.w	r1, #544	; 0x220
   1fb1e:	str	r0, [r4, #24]
   1fb20:	str	r0, [sp, #8]
   1fb22:	movs	r0, #1
   1fb24:	blx	8718 <calloc@plt+0x4>
   1fb28:	mov.w	r1, #544	; 0x220
   1fb2c:	str	r0, [r4, #32]
   1fb2e:	mov	sl, r0
   1fb30:	movs	r0, #1
   1fb32:	blx	8718 <calloc@plt+0x4>
   1fb36:	mov.w	r1, #544	; 0x220
   1fb3a:	str	r0, [r4, #36]	; 0x24
   1fb3c:	mov	r9, r0
   1fb3e:	movs	r0, #1
   1fb40:	blx	8718 <calloc@plt+0x4>
   1fb44:	mov.w	r1, #544	; 0x220
   1fb48:	str	r0, [r4, #40]	; 0x28
   1fb4a:	mov	r8, r0
   1fb4c:	movs	r0, #1
   1fb4e:	blx	8718 <calloc@plt+0x4>
   1fb52:	mov.w	r1, #544	; 0x220
   1fb56:	str	r0, [r4, #44]	; 0x2c
   1fb58:	mov	r7, r0
   1fb5a:	movs	r0, #1
   1fb5c:	blx	8718 <calloc@plt+0x4>
   1fb60:	mov.w	r1, #544	; 0x220
   1fb64:	str	r0, [r4, #48]	; 0x30
   1fb66:	mov	r6, r0
   1fb68:	movs	r0, #1
   1fb6a:	blx	8718 <calloc@plt+0x4>
   1fb6e:	mov.w	r1, #4096	; 0x1000
   1fb72:	str	r0, [r4, #52]	; 0x34
   1fb74:	mov	r5, r0
   1fb76:	movs	r0, #1
   1fb78:	blx	8718 <calloc@plt+0x4>
   1fb7c:	ldr	r2, [sp, #12]
   1fb7e:	str.w	r0, [r4, #308]	; 0x134
   1fb82:	cbz	r2, 1fba2 <btrfs_new_fs_info@@Base+0xbc>
   1fb84:	ldr	r3, [sp, #8]
   1fb86:	cbz	r3, 1fba2 <btrfs_new_fs_info@@Base+0xbc>
   1fb88:	cmp.w	sl, #0
   1fb8c:	beq.n	1fba2 <btrfs_new_fs_info@@Base+0xbc>
   1fb8e:	cmp.w	r9, #0
   1fb92:	beq.n	1fba2 <btrfs_new_fs_info@@Base+0xbc>
   1fb94:	cmp.w	r8, #0
   1fb98:	beq.n	1fba2 <btrfs_new_fs_info@@Base+0xbc>
   1fb9a:	cbz	r7, 1fba2 <btrfs_new_fs_info@@Base+0xbc>
   1fb9c:	cbz	r6, 1fba2 <btrfs_new_fs_info@@Base+0xbc>
   1fb9e:	cbz	r5, 1fba2 <btrfs_new_fs_info@@Base+0xbc>
   1fba0:	cbnz	r0, 1fbb2 <btrfs_new_fs_info@@Base+0xcc>
   1fba2:	mov	r0, r4
   1fba4:	movs	r4, #0
   1fba6:	bl	1fa98 <btrfs_free_fs_info@@Base>
   1fbaa:	mov	r0, r4
   1fbac:	add	sp, #20
   1fbae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fbb2:	add.w	r0, r4, #64	; 0x40
   1fbb6:	bl	19af8 <extent_io_tree_init@@Base>
   1fbba:	add.w	r0, r4, #96	; 0x60
   1fbbe:	bl	19af8 <extent_io_tree_init@@Base>
   1fbc2:	add.w	r0, r4, #128	; 0x80
   1fbc6:	bl	19af8 <extent_io_tree_init@@Base>
   1fbca:	add.w	r0, r4, #160	; 0xa0
   1fbce:	bl	19af8 <extent_io_tree_init@@Base>
   1fbd2:	add.w	r0, r4, #192	; 0xc0
   1fbd6:	bl	19af8 <extent_io_tree_init@@Base>
   1fbda:	movs	r3, #0
   1fbdc:	add.w	r0, r4, #228	; 0xe4
   1fbe0:	str.w	r3, [r4, #224]	; 0xe0
   1fbe4:	str	r3, [r4, #56]	; 0x38
   1fbe6:	bl	19318 <cache_tree_init@@Base>
   1fbea:	movs	r3, #1
   1fbec:	str.w	r3, [r4, #312]	; 0x138
   1fbf0:	add.w	r3, r4, #336	; 0x150
   1fbf4:	strd	r3, r3, [r4, #336]	; 0x150
   1fbf8:	add.w	r3, r4, #356	; 0x164
   1fbfc:	strd	r3, r3, [r4, #356]	; 0x164
   1fc00:	add.w	r3, r4, #344	; 0x158
   1fc04:	strd	r3, r3, [r4, #344]	; 0x158
   1fc08:	cmp.w	fp, #0
   1fc0c:	bne.n	1fc1a <btrfs_new_fs_info@@Base+0x134>
   1fc0e:	ldrb.w	r3, [r4, #364]	; 0x16c
   1fc12:	orr.w	r3, r3, #2
   1fc16:	strb.w	r3, [r4, #364]	; 0x16c
   1fc1a:	ldr	r3, [sp, #0]
   1fc1c:	mov.w	r2, #4294967295	; 0xffffffff
   1fc20:	str.w	r3, [r4, #320]	; 0x140
   1fc24:	ldr	r3, [sp, #4]
   1fc26:	str.w	r3, [r4, #324]	; 0x144
   1fc2a:	mov.w	r3, #4294967295	; 0xffffffff
   1fc2e:	strd	r2, r3, [r4, #272]	; 0x110
   1fc32:	strd	r2, r3, [r4, #280]	; 0x118
   1fc36:	strd	r2, r3, [r4, #288]	; 0x120
   1fc3a:	b.n	1fbaa <btrfs_new_fs_info@@Base+0xc4>

0001fc3c <btrfs_check_fs_compatibility@@Base>:
   1fc3c:	push	{r0, r1, r4, r5, r6, lr}
   1fc3e:	ldr.w	r4, [r0, #188]	; 0xbc
   1fc42:	ldr.w	r5, [r0, #192]	; 0xc0
   1fc46:	bic.w	r2, r4, #4080	; 0xff0
   1fc4a:	ldr	r6, [pc, #128]	; (1fccc <btrfs_check_fs_compatibility@@Base+0x90>)
   1fc4c:	bic.w	r2, r2, #15
   1fc50:	mov	r3, r5
   1fc52:	orrs.w	ip, r2, r3
   1fc56:	add	r6, pc
   1fc58:	beq.n	1fc74 <btrfs_check_fs_compatibility@@Base+0x38>
   1fc5a:	ldr	r1, [pc, #116]	; (1fcd0 <btrfs_check_fs_compatibility@@Base+0x94>)
   1fc5c:	ldr	r0, [r6, r1]
   1fc5e:	strd	r2, r3, [sp]
   1fc62:	ldr	r2, [pc, #112]	; (1fcd4 <btrfs_check_fs_compatibility@@Base+0x98>)
   1fc64:	add	r2, pc
   1fc66:	ldr	r0, [r0, #0]
   1fc68:	movs	r1, #1
   1fc6a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1fc6e:	mvn.w	r0, #94	; 0x5e
   1fc72:	b.n	1fc90 <btrfs_check_fs_compatibility@@Base+0x54>
   1fc74:	and.w	r2, r4, #1
   1fc78:	movs	r3, #0
   1fc7a:	orrs	r3, r2
   1fc7c:	ittt	eq
   1fc7e:	streq.w	r5, [r0, #192]	; 0xc0
   1fc82:	orreq.w	r4, r4, #1
   1fc86:	streq.w	r4, [r0, #188]	; 0xbc
   1fc8a:	lsls	r4, r1, #31
   1fc8c:	bmi.n	1fc94 <btrfs_check_fs_compatibility@@Base+0x58>
   1fc8e:	movs	r0, #0
   1fc90:	add	sp, #8
   1fc92:	pop	{r4, r5, r6, pc}
   1fc94:	ldr.w	r3, [r0, #180]	; 0xb4
   1fc98:	lsls	r1, r1, #18
   1fc9a:	ldr.w	r2, [r0, #184]	; 0xb8
   1fc9e:	bic.w	r4, r3, #3
   1fca2:	itt	mi
   1fca4:	bicmi.w	r3, r3, #2
   1fca8:	strmi.w	r3, [r0, #180]	; 0xb4
   1fcac:	mov	r5, r2
   1fcae:	itt	mi
   1fcb0:	movmi	r3, r4
   1fcb2:	strmi.w	r2, [r0, #184]	; 0xb8
   1fcb6:	orrs.w	r1, r4, r5
   1fcba:	beq.n	1fc8e <btrfs_check_fs_compatibility@@Base+0x52>
   1fcbc:	ldr	r1, [pc, #16]	; (1fcd0 <btrfs_check_fs_compatibility@@Base+0x94>)
   1fcbe:	ldr	r0, [r6, r1]
   1fcc0:	strd	r3, r2, [sp]
   1fcc4:	ldr	r2, [pc, #16]	; (1fcd8 <btrfs_check_fs_compatibility@@Base+0x9c>)
   1fcc6:	add	r2, pc
   1fcc8:	b.n	1fc66 <btrfs_check_fs_compatibility@@Base+0x2a>
   1fcca:	nop
   1fccc:	str	r0, [sp, #872]	; 0x368
   1fcce:	movs	r4, r0
   1fcd0:	lsls	r4, r1, #10
   1fcd2:	movs	r0, r0
   1fcd4:	asrs	r5, r0, #26
   1fcd6:	movs	r2, r0
   1fcd8:	asrs	r1, r4, #25
   1fcda:	movs	r2, r0

0001fcdc <btrfs_release_all_roots@@Base>:
   1fcdc:	push	{r4, lr}
   1fcde:	mov	r4, r0
   1fce0:	ldr	r3, [r0, #48]	; 0x30
   1fce2:	cbz	r3, 1fcea <btrfs_release_all_roots@@Base+0xe>
   1fce4:	ldr	r0, [r3, #0]
   1fce6:	bl	1a0a4 <free_extent_buffer@@Base>
   1fcea:	ldr	r3, [r4, #44]	; 0x2c
   1fcec:	cbz	r3, 1fcf4 <btrfs_release_all_roots@@Base+0x18>
   1fcee:	ldr	r0, [r3, #0]
   1fcf0:	bl	1a0a4 <free_extent_buffer@@Base>
   1fcf4:	ldr	r3, [r4, #40]	; 0x28
   1fcf6:	cbz	r3, 1fcfe <btrfs_release_all_roots@@Base+0x22>
   1fcf8:	ldr	r0, [r3, #0]
   1fcfa:	bl	1a0a4 <free_extent_buffer@@Base>
   1fcfe:	ldr	r3, [r4, #36]	; 0x24
   1fd00:	cbz	r3, 1fd08 <btrfs_release_all_roots@@Base+0x2c>
   1fd02:	ldr	r0, [r3, #0]
   1fd04:	bl	1a0a4 <free_extent_buffer@@Base>
   1fd08:	ldr	r3, [r4, #24]
   1fd0a:	cbz	r3, 1fd12 <btrfs_release_all_roots@@Base+0x36>
   1fd0c:	ldr	r0, [r3, #0]
   1fd0e:	bl	1a0a4 <free_extent_buffer@@Base>
   1fd12:	ldr	r3, [r4, #28]
   1fd14:	cbz	r3, 1fd1c <btrfs_release_all_roots@@Base+0x40>
   1fd16:	ldr	r0, [r3, #0]
   1fd18:	bl	1a0a4 <free_extent_buffer@@Base>
   1fd1c:	ldr	r3, [r4, #60]	; 0x3c
   1fd1e:	cbz	r3, 1fd26 <btrfs_release_all_roots@@Base+0x4a>
   1fd20:	ldr	r0, [r3, #0]
   1fd22:	bl	1a0a4 <free_extent_buffer@@Base>
   1fd26:	ldr	r3, [r4, #32]
   1fd28:	cbz	r3, 1fd30 <btrfs_release_all_roots@@Base+0x54>
   1fd2a:	ldr	r0, [r3, #0]
   1fd2c:	bl	1a0a4 <free_extent_buffer@@Base>
   1fd30:	ldr	r3, [r4, #52]	; 0x34
   1fd32:	cbz	r3, 1fd3e <btrfs_release_all_roots@@Base+0x62>
   1fd34:	ldmia.w	sp!, {r4, lr}
   1fd38:	ldr	r0, [r3, #0]
   1fd3a:	b.w	1a0a4 <free_extent_buffer@@Base>
   1fd3e:	pop	{r4, pc}

0001fd40 <btrfs_cleanup_all_caches@@Base>:
   1fd40:	push	{r3, r4, r5, lr}
   1fd42:	add.w	r5, r0, #344	; 0x158
   1fd46:	mov	r4, r0
   1fd48:	ldr.w	r0, [r4, #344]	; 0x158
   1fd4c:	cmp	r0, r5
   1fd4e:	bne.n	1fd88 <btrfs_cleanup_all_caches@@Base+0x48>
   1fd50:	ldr	r1, [pc, #72]	; (1fd9c <btrfs_cleanup_all_caches@@Base+0x5c>)
   1fd52:	add.w	r0, r4, #228	; 0xe4
   1fd56:	add	r1, pc
   1fd58:	bl	19542 <cache_tree_free_extents@@Base>
   1fd5c:	add.w	r0, r4, #64	; 0x40
   1fd60:	bl	1a0ac <extent_io_tree_cleanup@@Base>
   1fd64:	add.w	r0, r4, #96	; 0x60
   1fd68:	bl	1a0ac <extent_io_tree_cleanup@@Base>
   1fd6c:	add.w	r0, r4, #128	; 0x80
   1fd70:	bl	1a0ac <extent_io_tree_cleanup@@Base>
   1fd74:	add.w	r0, r4, #160	; 0xa0
   1fd78:	bl	1a0ac <extent_io_tree_cleanup@@Base>
   1fd7c:	add.w	r0, r4, #192	; 0xc0
   1fd80:	ldmia.w	sp!, {r3, r4, r5, lr}
   1fd84:	b.w	1a0ac <extent_io_tree_cleanup@@Base>
   1fd88:	ldrd	r2, r3, [r0]
   1fd8c:	str	r3, [r2, #4]
   1fd8e:	str	r2, [r3, #0]
   1fd90:	strd	r0, r0, [r0]
   1fd94:	subs	r0, #68	; 0x44
   1fd96:	bl	1a0a4 <free_extent_buffer@@Base>
   1fd9a:	b.n	1fd48 <btrfs_cleanup_all_caches@@Base+0x8>
   1fd9c:	bl	ffd5bd9e <__bss_end__@@Base+0xffcf1716>

0001fda0 <btrfs_scan_fs_devices@@Base>:
   1fda0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fda4:	mov	fp, r2
   1fda6:	ldr	r2, [pc, #220]	; (1fe84 <btrfs_scan_fs_devices@@Base+0xe4>)
   1fda8:	sub	sp, #36	; 0x24
   1fdaa:	ldr	r3, [pc, #220]	; (1fe88 <btrfs_scan_fs_devices@@Base+0xe8>)
   1fdac:	mov	r7, r0
   1fdae:	add	r2, pc
   1fdb0:	ldrd	r4, r5, [sp, #72]	; 0x48
   1fdb4:	mov	sl, r1
   1fdb6:	ldr	r6, [pc, #212]	; (1fe8c <btrfs_scan_fs_devices@@Base+0xec>)
   1fdb8:	ldr	r3, [r2, r3]
   1fdba:	movs	r2, #0
   1fdbc:	add	r6, pc
   1fdbe:	ldr	r3, [r3, #0]
   1fdc0:	str	r3, [sp, #28]
   1fdc2:	mov.w	r3, #0
   1fdc6:	orrs.w	r3, r4, r5
   1fdca:	mov.w	r3, #2
   1fdce:	str	r3, [sp, #0]
   1fdd0:	mov.w	r3, #0
   1fdd4:	itt	eq
   1fdd6:	moveq.w	r4, #65536	; 0x10000
   1fdda:	moveq	r5, #0
   1fddc:	blx	89d8 <lseek64@plt>
   1fde0:	cmp	r0, #0
   1fde2:	mov	r8, r0
   1fde4:	sbcs.w	r3, r1, #0
   1fde8:	mov	r9, r1
   1fdea:	bge.n	1fe08 <btrfs_scan_fs_devices@@Base+0x68>
   1fdec:	blx	8bac <__errno_location@plt>
   1fdf0:	ldr	r4, [r0, #0]
   1fdf2:	negs	r4, r4
   1fdf4:	ldr	r2, [pc, #152]	; (1fe90 <btrfs_scan_fs_devices@@Base+0xf0>)
   1fdf6:	ldr	r3, [pc, #144]	; (1fe88 <btrfs_scan_fs_devices@@Base+0xe8>)
   1fdf8:	add	r2, pc
   1fdfa:	ldr	r3, [r2, r3]
   1fdfc:	ldr	r2, [r3, #0]
   1fdfe:	ldr	r3, [sp, #28]
   1fe00:	eors	r2, r3
   1fe02:	beq.n	1fe7a <btrfs_scan_fs_devices@@Base+0xda>
   1fe04:	blx	88e4 <__stack_chk_fail@plt>
   1fe08:	movs	r3, #0
   1fe0a:	movs	r2, #0
   1fe0c:	str	r3, [sp, #0]
   1fe0e:	mov	r0, r7
   1fe10:	movs	r3, #0
   1fe12:	blx	89d8 <lseek64@plt>
   1fe16:	cmp	r9, r5
   1fe18:	it	eq
   1fe1a:	cmpeq	r8, r4
   1fe1c:	bcs.n	1fe34 <btrfs_scan_fs_devices@@Base+0x94>
   1fe1e:	ldr	r0, [pc, #116]	; (1fe94 <btrfs_scan_fs_devices@@Base+0xf4>)
   1fe20:	mov	r2, r4
   1fe22:	mov	r3, r5
   1fe24:	strd	r8, r9, [sp]
   1fe28:	add	r0, pc
   1fe2a:	mvn.w	r4, #21
   1fe2e:	bl	1a900 <__btrfs_error@@Base>
   1fe32:	b.n	1fdf4 <btrfs_scan_fs_devices@@Base+0x54>
   1fe34:	ldr	r3, [sp, #80]	; 0x50
   1fe36:	mov	r2, fp
   1fe38:	strd	r4, r5, [sp]
   1fe3c:	mov	r1, sl
   1fe3e:	mov	r0, r7
   1fe40:	str	r3, [sp, #8]
   1fe42:	add	r3, sp, #16
   1fe44:	bl	2b574 <btrfs_scan_one_device@@Base>
   1fe48:	mov	r4, r0
   1fe4a:	cbz	r0, 1fe60 <btrfs_scan_fs_devices@@Base+0xc0>
   1fe4c:	ldr	r3, [pc, #72]	; (1fe98 <btrfs_scan_fs_devices@@Base+0xf8>)
   1fe4e:	movs	r1, #1
   1fe50:	ldr	r2, [pc, #72]	; (1fe9c <btrfs_scan_fs_devices@@Base+0xfc>)
   1fe52:	ldr	r0, [r6, r3]
   1fe54:	add	r2, pc
   1fe56:	mov	r3, sl
   1fe58:	ldr	r0, [r0, #0]
   1fe5a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   1fe5e:	b.n	1fdf4 <btrfs_scan_fs_devices@@Base+0x54>
   1fe60:	ldr	r3, [sp, #84]	; 0x54
   1fe62:	cmp	r3, #0
   1fe64:	bne.n	1fdf4 <btrfs_scan_fs_devices@@Base+0x54>
   1fe66:	ldrd	r2, r3, [sp, #16]
   1fe6a:	cmp	r3, #0
   1fe6c:	it	eq
   1fe6e:	cmpeq	r2, #1
   1fe70:	beq.n	1fdf4 <btrfs_scan_fs_devices@@Base+0x54>
   1fe72:	bl	329d0 <btrfs_scan_devices@@Base>
   1fe76:	mov	r4, r0
   1fe78:	b.n	1fdf4 <btrfs_scan_fs_devices@@Base+0x54>
   1fe7a:	mov	r0, r4
   1fe7c:	add	sp, #36	; 0x24
   1fe7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fe82:	nop
   1fe84:	ldrh	r2, [r0, #60]	; 0x3c
   1fe86:	movs	r4, r0
   1fe88:	lsls	r4, r7, #9
   1fe8a:	movs	r0, r0
   1fe8c:	ldrh	r4, [r6, #58]	; 0x3a
   1fe8e:	movs	r4, r0
   1fe90:	ldrh	r0, [r7, #56]	; 0x38
   1fe92:	movs	r4, r0
   1fe94:	asrs	r3, r0, #21
   1fe96:	movs	r2, r0
   1fe98:	lsls	r4, r1, #10
   1fe9a:	movs	r0, r0
   1fe9c:	asrs	r6, r1, #21
   1fe9e:	movs	r2, r0

0001fea0 <btrfs_check_super@@Base>:
   1fea0:	ldr	r2, [pc, #580]	; (200e8 <btrfs_check_super@@Base+0x248>)
   1fea2:	ldr	r3, [pc, #584]	; (200ec <btrfs_check_super@@Base+0x24c>)
   1fea4:	add	r2, pc
   1fea6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1feaa:	sub	sp, #132	; 0x84
   1feac:	ldr	r3, [r2, r3]
   1feae:	mov	r4, r0
   1feb0:	mov	r7, r1
   1feb2:	ldr	r3, [r3, #0]
   1feb4:	str	r3, [sp, #124]	; 0x7c
   1feb6:	mov.w	r3, #0
   1feba:	ldr	r2, [r0, #64]	; 0x40
   1febc:	ldr	r3, [r0, #68]	; 0x44
   1febe:	add	r1, pc, #544	; (adr r1, 200e0 <btrfs_check_super@@Base+0x240>)
   1fec0:	ldrd	r0, r1, [r1]
   1fec4:	cmp	r3, r1
   1fec6:	it	eq
   1fec8:	cmpeq	r2, r0
   1feca:	bne.n	1feda <btrfs_check_super@@Base+0x3a>
   1fecc:	lsls	r3, r7, #30
   1fece:	bmi.n	1feda <btrfs_check_super@@Base+0x3a>
   1fed0:	ldr	r0, [pc, #540]	; (200f0 <btrfs_check_super@@Base+0x250>)
   1fed2:	add	r0, pc
   1fed4:	bl	1a900 <__btrfs_error@@Base>
   1fed8:	b.n	1fef0 <btrfs_check_super@@Base+0x50>
   1feda:	ldrh.w	r9, [r4, #196]	; 0xc4
   1fede:	bl	1b2b8 <btrfs_super_num_csums@@Base>
   1fee2:	cmp	r9, r0
   1fee4:	bcc.n	1ff0a <btrfs_check_super@@Base+0x6a>
   1fee6:	ldr	r0, [pc, #524]	; (200f4 <btrfs_check_super@@Base+0x254>)
   1fee8:	mov	r1, r9
   1feea:	add	r0, pc
   1feec:	bl	1a900 <__btrfs_error@@Base>
   1fef0:	mvn.w	r5, #4
   1fef4:	ldr	r2, [pc, #512]	; (200f8 <btrfs_check_super@@Base+0x258>)
   1fef6:	ldr	r3, [pc, #500]	; (200ec <btrfs_check_super@@Base+0x24c>)
   1fef8:	add	r2, pc
   1fefa:	ldr	r3, [r2, r3]
   1fefc:	ldr	r2, [r3, #0]
   1fefe:	ldr	r3, [sp, #124]	; 0x7c
   1ff00:	eors	r2, r3
   1ff02:	beq.w	200d6 <btrfs_check_super@@Base+0x236>
   1ff06:	blx	88e4 <__stack_chk_fail@plt>
   1ff0a:	mov	r0, r4
   1ff0c:	add	r5, sp, #12
   1ff0e:	bl	1b294 <btrfs_super_csum_size@@Base>
   1ff12:	add.w	r6, r4, #32
   1ff16:	mov	r2, r5
   1ff18:	mov.w	r3, #4064	; 0xfe0
   1ff1c:	mov	r1, r6
   1ff1e:	mov	r8, r0
   1ff20:	mov	r0, r9
   1ff22:	bl	1f4ce <btrfs_csum_data@@Base>
   1ff26:	mov	r0, r5
   1ff28:	mov	r2, r8
   1ff2a:	mov	r1, r4
   1ff2c:	blx	887c <memcmp@plt+0x4>
   1ff30:	mov	r5, r0
   1ff32:	cbz	r0, 1ff3a <btrfs_check_super@@Base+0x9a>
   1ff34:	ldr	r0, [pc, #452]	; (200fc <btrfs_check_super@@Base+0x25c>)
   1ff36:	add	r0, pc
   1ff38:	b.n	1fed4 <btrfs_check_super@@Base+0x34>
   1ff3a:	ldrb.w	r1, [r4, #198]	; 0xc6
   1ff3e:	cmp	r1, #7
   1ff40:	bls.n	1ff4e <btrfs_check_super@@Base+0xae>
   1ff42:	ldr	r0, [pc, #444]	; (20100 <btrfs_check_super@@Base+0x260>)
   1ff44:	movs	r2, #8
   1ff46:	add	r0, pc
   1ff48:	bl	1a900 <__btrfs_error@@Base>
   1ff4c:	b.n	1ff84 <btrfs_check_super@@Base+0xe4>
   1ff4e:	ldrb.w	r1, [r4, #199]	; 0xc7
   1ff52:	cmp	r1, #7
   1ff54:	bls.n	1ff5e <btrfs_check_super@@Base+0xbe>
   1ff56:	ldr	r0, [pc, #428]	; (20104 <btrfs_check_super@@Base+0x264>)
   1ff58:	movs	r2, #8
   1ff5a:	add	r0, pc
   1ff5c:	b.n	1ff48 <btrfs_check_super@@Base+0xa8>
   1ff5e:	ldrb.w	r1, [r4, #200]	; 0xc8
   1ff62:	cmp	r1, #7
   1ff64:	bls.n	1ff6e <btrfs_check_super@@Base+0xce>
   1ff66:	ldr	r0, [pc, #416]	; (20108 <btrfs_check_super@@Base+0x268>)
   1ff68:	movs	r2, #8
   1ff6a:	add	r0, pc
   1ff6c:	b.n	1ff48 <btrfs_check_super@@Base+0xa8>
   1ff6e:	ldr	r2, [r4, #80]	; 0x50
   1ff70:	mov	r1, r5
   1ff72:	ldr	r3, [r4, #84]	; 0x54
   1ff74:	ubfx	r0, r2, #0, #12
   1ff78:	orrs	r1, r0
   1ff7a:	beq.n	1ff8a <btrfs_check_super@@Base+0xea>
   1ff7c:	ldr	r0, [pc, #396]	; (2010c <btrfs_check_super@@Base+0x26c>)
   1ff7e:	add	r0, pc
   1ff80:	bl	1a900 <__btrfs_error@@Base>
   1ff84:	ldr	r0, [pc, #392]	; (20110 <btrfs_check_super@@Base+0x270>)
   1ff86:	add	r0, pc
   1ff88:	b.n	1fed4 <btrfs_check_super@@Base+0x34>
   1ff8a:	ldr	r2, [r4, #88]	; 0x58
   1ff8c:	mov	r1, r5
   1ff8e:	ldr	r3, [r4, #92]	; 0x5c
   1ff90:	ubfx	r0, r2, #0, #12
   1ff94:	orrs	r1, r0
   1ff96:	beq.n	1ff9e <btrfs_check_super@@Base+0xfe>
   1ff98:	ldr	r0, [pc, #376]	; (20114 <btrfs_check_super@@Base+0x274>)
   1ff9a:	add	r0, pc
   1ff9c:	b.n	1ff80 <btrfs_check_super@@Base+0xe0>
   1ff9e:	ldr	r2, [r4, #96]	; 0x60
   1ffa0:	mov	r1, r5
   1ffa2:	ldr	r3, [r4, #100]	; 0x64
   1ffa4:	ubfx	r0, r2, #0, #12
   1ffa8:	orrs	r1, r0
   1ffaa:	beq.n	1ffb2 <btrfs_check_super@@Base+0x112>
   1ffac:	ldr	r0, [pc, #360]	; (20118 <btrfs_check_super@@Base+0x278>)
   1ffae:	add	r0, pc
   1ffb0:	b.n	1ff80 <btrfs_check_super@@Base+0xe0>
   1ffb2:	ldr.w	r1, [r4, #148]	; 0x94
   1ffb6:	cmp.w	r1, #4096	; 0x1000
   1ffba:	bcs.n	1ffc6 <btrfs_check_super@@Base+0x126>
   1ffbc:	ldr	r0, [pc, #348]	; (2011c <btrfs_check_super@@Base+0x27c>)
   1ffbe:	add	r0, pc
   1ffc0:	bl	1a900 <__btrfs_error@@Base>
   1ffc4:	b.n	1ff84 <btrfs_check_super@@Base+0xe4>
   1ffc6:	ubfx	r3, r1, #0, #12
   1ffca:	cbz	r3, 1ffd2 <btrfs_check_super@@Base+0x132>
   1ffcc:	ldr	r0, [pc, #336]	; (20120 <btrfs_check_super@@Base+0x280>)
   1ffce:	add	r0, pc
   1ffd0:	b.n	1ffc0 <btrfs_check_super@@Base+0x120>
   1ffd2:	ldr.w	ip, [r4, #144]	; 0x90
   1ffd6:	cmp.w	ip, #4096	; 0x1000
   1ffda:	bcs.n	1ffe4 <btrfs_check_super@@Base+0x144>
   1ffdc:	ldr	r0, [pc, #324]	; (20124 <btrfs_check_super@@Base+0x284>)
   1ffde:	mov	r1, ip
   1ffe0:	add	r0, pc
   1ffe2:	b.n	1ffc0 <btrfs_check_super@@Base+0x120>
   1ffe4:	ubfx	r3, ip, #0, #12
   1ffe8:	cbz	r3, 1fff2 <btrfs_check_super@@Base+0x152>
   1ffea:	ldr	r0, [pc, #316]	; (20128 <btrfs_check_super@@Base+0x288>)
   1ffec:	mov	r1, ip
   1ffee:	add	r0, pc
   1fff0:	b.n	1ffc0 <btrfs_check_super@@Base+0x120>
   1fff2:	ldr	r2, [r4, #112]	; 0x70
   1fff4:	ldr	r3, [r4, #116]	; 0x74
   1fff6:	orrs	r3, r2
   1fff8:	bne.n	20004 <btrfs_check_super@@Base+0x164>
   1fffa:	ldr	r0, [pc, #304]	; (2012c <btrfs_check_super@@Base+0x28c>)
   1fffc:	add	r0, pc
   1fffe:	bl	1a900 <__btrfs_error@@Base>
   20002:	b.n	1ff84 <btrfs_check_super@@Base+0xe4>
   20004:	movs	r0, #6
   20006:	ldr	r3, [r4, #124]	; 0x7c
   20008:	muls	r0, r1
   2000a:	ldr	r2, [r4, #120]	; 0x78
   2000c:	movs	r1, #0
   2000e:	cmp	r3, r1
   20010:	it	eq
   20012:	cmpeq	r2, r0
   20014:	bcs.n	2001c <btrfs_check_super@@Base+0x17c>
   20016:	ldr	r0, [pc, #280]	; (20130 <btrfs_check_super@@Base+0x290>)
   20018:	add	r0, pc
   2001a:	b.n	1ff80 <btrfs_check_super@@Base+0xe0>
   2001c:	ldr.w	r1, [r4, #156]	; 0x9c
   20020:	cmp.w	r1, #4096	; 0x1000
   20024:	beq.n	20030 <btrfs_check_super@@Base+0x190>
   20026:	cmp	r1, ip
   20028:	beq.n	20030 <btrfs_check_super@@Base+0x190>
   2002a:	ldr	r0, [pc, #264]	; (20134 <btrfs_check_super@@Base+0x294>)
   2002c:	add	r0, pc
   2002e:	b.n	1ffc0 <btrfs_check_super@@Base+0x120>
   20030:	ldr.w	r1, [r4, #188]	; 0xbc
   20034:	movs	r3, #0
   20036:	and.w	r2, r1, #1024	; 0x400
   2003a:	orrs	r3, r2
   2003c:	mov.w	r2, #16
   20040:	ite	ne
   20042:	addwne	r0, r4, #571	; 0x23b
   20046:	moveq	r0, r6
   20048:	addw	r6, r4, #283	; 0x11b
   2004c:	mov	r1, r6
   2004e:	blx	887c <memcmp@plt+0x4>
   20052:	cbz	r0, 2007e <btrfs_check_super@@Base+0x1de>
   20054:	add	r2, sp, #44	; 0x2c
   20056:	addw	r0, r4, #571	; 0x23b
   2005a:	str	r2, [sp, #4]
   2005c:	mov	r1, r2
   2005e:	blx	8760 <uuid_unparse@plt>
   20062:	add	r1, sp, #84	; 0x54
   20064:	mov	r0, r6
   20066:	str	r1, [sp, #0]
   20068:	blx	8760 <uuid_unparse@plt>
   2006c:	tst.w	r7, #4
   20070:	ldrd	r1, r2, [sp]
   20074:	beq.n	200ae <btrfs_check_super@@Base+0x20e>
   20076:	ldr	r0, [pc, #192]	; (20138 <btrfs_check_super@@Base+0x298>)
   20078:	add	r0, pc
   2007a:	bl	1a884 <__btrfs_warning@@Base>
   2007e:	ldr.w	r3, [r4, #140]	; 0x8c
   20082:	movs	r1, #0
   20084:	ldr.w	r2, [r4, #136]	; 0x88
   20088:	mov.w	r0, #2147483648	; 0x80000000
   2008c:	cmp	r1, r3
   2008e:	it	eq
   20090:	cmpeq	r0, r2
   20092:	bcs.n	2009c <btrfs_check_super@@Base+0x1fc>
   20094:	ldr	r0, [pc, #164]	; (2013c <btrfs_check_super@@Base+0x29c>)
   20096:	add	r0, pc
   20098:	bl	1a884 <__btrfs_warning@@Base>
   2009c:	ldr.w	r2, [r4, #136]	; 0x88
   200a0:	ldr.w	r3, [r4, #140]	; 0x8c
   200a4:	orrs	r3, r2
   200a6:	bne.n	200b4 <btrfs_check_super@@Base+0x214>
   200a8:	ldr	r0, [pc, #148]	; (20140 <btrfs_check_super@@Base+0x2a0>)
   200aa:	add	r0, pc
   200ac:	b.n	1fffe <btrfs_check_super@@Base+0x15e>
   200ae:	ldr	r0, [pc, #148]	; (20144 <btrfs_check_super@@Base+0x2a4>)
   200b0:	add	r0, pc
   200b2:	b.n	1ff48 <btrfs_check_super@@Base+0xa8>
   200b4:	ldr.w	r1, [r4, #160]	; 0xa0
   200b8:	cmp.w	r1, #2048	; 0x800
   200bc:	bls.n	200c8 <btrfs_check_super@@Base+0x228>
   200be:	ldr	r0, [pc, #136]	; (20148 <btrfs_check_super@@Base+0x2a8>)
   200c0:	mov.w	r2, #2048	; 0x800
   200c4:	add	r0, pc
   200c6:	b.n	1ff48 <btrfs_check_super@@Base+0xa8>
   200c8:	cmp	r1, #96	; 0x60
   200ca:	bhi.w	1fef4 <btrfs_check_super@@Base+0x54>
   200ce:	ldr	r0, [pc, #124]	; (2014c <btrfs_check_super@@Base+0x2ac>)
   200d0:	movs	r2, #97	; 0x61
   200d2:	add	r0, pc
   200d4:	b.n	1ff48 <btrfs_check_super@@Base+0xa8>
   200d6:	mov	r0, r5
   200d8:	add	sp, #132	; 0x84
   200da:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   200de:	nop
   200e0:	tst	r1, r4
   200e2:	strh	r0, [r1, r1]
   200e4:	strh	r6, [r4, r5]
   200e6:	ldr	r5, [pc, #380]	; (20264 <btrfs_read_dev_super@@Base+0x114>)
   200e8:	ldrh	r4, [r1, #52]	; 0x34
   200ea:	movs	r4, r0
   200ec:	lsls	r4, r7, #9
   200ee:	movs	r0, r0
   200f0:	asrs	r4, r5, #19
   200f2:	movs	r2, r0
   200f4:	asrs	r3, r6, #19
   200f6:	movs	r2, r0
   200f8:	ldrh	r0, [r7, #48]	; 0x30
   200fa:	movs	r4, r0
   200fc:	asrs	r1, r1, #19
   200fe:	movs	r2, r0
   20100:	asrs	r6, r2, #19
   20102:	movs	r2, r0
   20104:	asrs	r4, r4, #19
   20106:	movs	r2, r0
   20108:	asrs	r7, r6, #19
   2010a:	movs	r2, r0
   2010c:	asrs	r4, r0, #20
   2010e:	movs	r2, r0
   20110:	asrs	r7, r4, #27
   20112:	movs	r2, r0
   20114:	asrs	r0, r1, #20
   20116:	movs	r2, r0
   20118:	asrs	r5, r2, #20
   2011a:	movs	r2, r0
   2011c:	asrs	r4, r4, #20
   2011e:	movs	r2, r0
   20120:	asrs	r2, r6, #20
   20122:	movs	r2, r0
   20124:	asrs	r7, r6, #20
   20126:	movs	r2, r0
   20128:	asrs	r1, r1, #21
   2012a:	movs	r2, r0
   2012c:	asrs	r4, r2, #21
   2012e:	movs	r2, r0
   20130:	asrs	r6, r1, #21
   20132:	movs	r2, r0
   20134:	asrs	r2, r2, #21
   20136:	movs	r2, r0
   20138:	asrs	r4, r3, #20
   2013a:	movs	r2, r0
   2013c:	asrs	r4, r2, #21
   2013e:	movs	r2, r0
   20140:	asrs	r3, r4, #21
   20142:	movs	r2, r0
   20144:	asrs	r6, r1, #20
   20146:	movs	r2, r0
   20148:	asrs	r0, r4, #21
   2014a:	movs	r2, r0
   2014c:	asrs	r5, r6, #21
   2014e:	movs	r2, r0

00020150 <btrfs_read_dev_super@@Base>:
   20150:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20154:	mov	sl, r2
   20156:	vpush	{d8-d9}
   2015a:	mov	fp, r3
   2015c:	ldr	r2, [pc, #496]	; (20350 <btrfs_read_dev_super@@Base+0x200>)
   2015e:	vmov	s16, r1
   20162:	ldr	r1, [pc, #496]	; (20354 <btrfs_read_dev_super@@Base+0x204>)
   20164:	sub.w	sp, sp, #4160	; 0x1040
   20168:	vmov	s17, r0
   2016c:	add	r1, pc
   2016e:	sub	sp, #12
   20170:	add.w	r3, sp, #4160	; 0x1040
   20174:	add	r4, sp, #68	; 0x44
   20176:	ldr	r2, [r1, r2]
   20178:	adds	r3, #4
   2017a:	ldr	r2, [r2, #0]
   2017c:	str	r2, [r3, #0]
   2017e:	mov.w	r2, #0
   20182:	add.w	r3, sp, #4224	; 0x1080
   20186:	ldr	r3, [r3, #0]
   20188:	tst.w	r3, #1
   2018c:	ite	ne
   2018e:	movne	r3, #3
   20190:	moveq	r3, #1
   20192:	cmp.w	fp, #0
   20196:	str	r3, [sp, #28]
   20198:	it	eq
   2019a:	cmpeq.w	sl, #65536	; 0x10000
   2019e:	beq.w	202de <btrfs_read_dev_super@@Base+0x18e>
   201a2:	mov.w	r2, #4096	; 0x1000
   201a6:	mov	r1, r4
   201a8:	strd	sl, fp, [sp]
   201ac:	blx	8a2c <pread64@plt>
   201b0:	cmp	r0, #0
   201b2:	bge.n	201d8 <btrfs_read_dev_super@@Base+0x88>
   201b4:	blx	8bac <__errno_location@plt>
   201b8:	ldr	r0, [r0, #0]
   201ba:	negs	r0, r0
   201bc:	ldr	r1, [pc, #408]	; (20358 <btrfs_read_dev_super@@Base+0x208>)
   201be:	add.w	r3, sp, #4160	; 0x1040
   201c2:	ldr	r2, [pc, #396]	; (20350 <btrfs_read_dev_super@@Base+0x200>)
   201c4:	adds	r3, #4
   201c6:	add	r1, pc
   201c8:	ldr	r2, [r1, r2]
   201ca:	ldr	r1, [r2, #0]
   201cc:	ldr	r2, [r3, #0]
   201ce:	eors	r1, r2
   201d0:	beq.w	20340 <btrfs_read_dev_super@@Base+0x1f0>
   201d4:	blx	88e4 <__stack_chk_fail@plt>
   201d8:	cmp.w	r0, #4096	; 0x1000
   201dc:	blt.w	20334 <btrfs_read_dev_super@@Base+0x1e4>
   201e0:	ldrd	r2, r3, [r4, #48]	; 0x30
   201e4:	cmp	fp, r3
   201e6:	it	eq
   201e8:	cmpeq	sl, r2
   201ea:	bne.w	2033a <btrfs_read_dev_super@@Base+0x1ea>
   201ee:	add.w	r3, sp, #4224	; 0x1080
   201f2:	mov	r0, r4
   201f4:	ldr	r1, [r3, #0]
   201f6:	bl	1fea0 <btrfs_check_super@@Base>
   201fa:	cmp	r0, #0
   201fc:	blt.n	201bc <btrfs_read_dev_super@@Base+0x6c>
   201fe:	vmov	r0, s16
   20202:	mov.w	r2, #4096	; 0x1000
   20206:	mov	r1, r4
   20208:	blx	8830 <memcpy@plt+0x4>
   2020c:	movs	r0, #0
   2020e:	b.n	201bc <btrfs_read_dev_super@@Base+0x6c>
   20210:	movs	r3, #12
   20212:	mov.w	r2, #16384	; 0x4000
   20216:	muls	r3, r5
   20218:	sub.w	r0, r3, #32
   2021c:	rsb	r1, r3, #32
   20220:	lsl.w	fp, r2, r0
   20224:	lsr.w	r1, r2, r1
   20228:	orr.w	fp, fp, r1
   2022c:	lsl.w	sl, r2, r3
   20230:	vmov	r0, s17
   20234:	mov.w	r2, #4096	; 0x1000
   20238:	mov	r1, r4
   2023a:	strd	sl, fp, [sp]
   2023e:	blx	8a2c <pread64@plt>
   20242:	cmp.w	r0, #4096	; 0x1000
   20246:	blt.n	20324 <btrfs_read_dev_super@@Base+0x1d4>
   20248:	ldrd	r2, r3, [r4, #48]	; 0x30
   2024c:	cmp	fp, r3
   2024e:	it	eq
   20250:	cmpeq	sl, r2
   20252:	bne.n	2031a <btrfs_read_dev_super@@Base+0x1ca>
   20254:	ldrd	r2, r3, [r4, #64]	; 0x40
   20258:	orrs	r3, r2
   2025a:	bne.n	20260 <btrfs_read_dev_super@@Base+0x110>
   2025c:	cmp	r5, #0
   2025e:	beq.n	20324 <btrfs_read_dev_super@@Base+0x1d4>
   20260:	add.w	r3, sp, #4224	; 0x1080
   20264:	mov	r0, r4
   20266:	ldr	r1, [r3, #0]
   20268:	bl	1fea0 <btrfs_check_super@@Base>
   2026c:	cmp	r0, #0
   2026e:	bne.n	2031a <btrfs_read_dev_super@@Base+0x1ca>
   20270:	cmp.w	r8, #0
   20274:	bne.n	202f6 <btrfs_read_dev_super@@Base+0x1a6>
   20276:	ldr.w	r3, [r4, #188]	; 0xbc
   2027a:	and.w	r3, r3, #1024	; 0x400
   2027e:	strd	r3, r8, [sp, #16]
   20282:	ldrd	r2, r3, [sp, #16]
   20286:	orrs	r3, r2
   20288:	beq.n	202aa <btrfs_read_dev_super@@Base+0x15a>
   2028a:	addw	r3, r6, #567	; 0x237
   2028e:	sub.w	r7, r6, #20
   20292:	addw	ip, r6, #583	; 0x247
   20296:	ldr	r0, [r3, #0]
   20298:	adds	r3, #8
   2029a:	ldr.w	r1, [r3, #-4]
   2029e:	cmp	r3, ip
   202a0:	mov	r2, r7
   202a2:	stmia	r2!, {r0, r1}
   202a4:	mov	r7, r2
   202a6:	bne.n	20296 <btrfs_read_dev_super@@Base+0x146>
   202a8:	movs	r7, #1
   202aa:	add	r3, sp, #100	; 0x64
   202ac:	add.w	ip, sp, #36	; 0x24
   202b0:	ldmia	r3, {r0, r1, r2, r3}
   202b2:	stmia.w	ip, {r0, r1, r2, r3}
   202b6:	ldrd	r8, r9, [r4, #72]	; 0x48
   202ba:	ldrd	r2, r3, [sp, #8]
   202be:	cmp	r3, r9
   202c0:	it	eq
   202c2:	cmpeq	r2, r8
   202c4:	bcs.n	202d8 <btrfs_read_dev_super@@Base+0x188>
   202c6:	vmov	r0, s16
   202ca:	mov.w	r2, #4096	; 0x1000
   202ce:	mov	r1, r4
   202d0:	blx	8830 <memcpy@plt+0x4>
   202d4:	strd	r8, r9, [sp, #8]
   202d8:	mov.w	r8, #1
   202dc:	b.n	2031a <btrfs_read_dev_super@@Base+0x1ca>
   202de:	movs	r3, #0
   202e0:	movs	r2, #0
   202e2:	strd	r2, r3, [sp, #8]
   202e6:	add	r3, sp, #100	; 0x64
   202e8:	movs	r7, #0
   202ea:	add	r6, sp, #72	; 0x48
   202ec:	vmov	s18, r3
   202f0:	mov	r5, r7
   202f2:	mov	r8, r7
   202f4:	b.n	20230 <btrfs_read_dev_super@@Base+0xe0>
   202f6:	vmov	r1, s18
   202fa:	add	r0, sp, #36	; 0x24
   202fc:	movs	r2, #16
   202fe:	blx	887c <memcmp@plt+0x4>
   20302:	cbnz	r0, 2031a <btrfs_read_dev_super@@Base+0x1ca>
   20304:	cmp	r7, #0
   20306:	beq.n	202b6 <btrfs_read_dev_super@@Base+0x166>
   20308:	addw	r1, r6, #567	; 0x237
   2030c:	sub.w	r0, r6, #20
   20310:	movs	r2, #16
   20312:	blx	887c <memcmp@plt+0x4>
   20316:	cmp	r0, #0
   20318:	beq.n	202b6 <btrfs_read_dev_super@@Base+0x166>
   2031a:	ldr	r3, [sp, #28]
   2031c:	adds	r5, #1
   2031e:	cmp	r3, r5
   20320:	bne.w	20210 <btrfs_read_dev_super@@Base+0xc0>
   20324:	ldrd	r3, r2, [sp, #8]
   20328:	orrs	r3, r2
   2032a:	ite	eq
   2032c:	moveq.w	r0, #4294967295	; 0xffffffff
   20330:	movne	r0, #0
   20332:	b.n	201bc <btrfs_read_dev_super@@Base+0x6c>
   20334:	mvn.w	r0, #1
   20338:	b.n	201bc <btrfs_read_dev_super@@Base+0x6c>
   2033a:	mvn.w	r0, #4
   2033e:	b.n	201bc <btrfs_read_dev_super@@Base+0x6c>
   20340:	add.w	sp, sp, #4160	; 0x1040
   20344:	add	sp, #12
   20346:	vpop	{d8-d9}
   2034a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2034e:	nop
   20350:	lsls	r4, r7, #9
   20352:	movs	r0, r0
   20354:	ldrh	r4, [r0, #30]
   20356:	movs	r4, r0
   20358:	ldrh	r2, [r5, #26]
   2035a:	movs	r4, r0

0002035c <write_all_supers@@Base>:
   2035c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20360:	mov	r4, r0
   20362:	vpush	{d8}
   20366:	ldr	r2, [pc, #1004]	; (20754 <write_all_supers@@Base+0x3f8>)
   20368:	ldr	r3, [pc, #1004]	; (20758 <write_all_supers@@Base+0x3fc>)
   2036a:	add	r2, pc
   2036c:	ldr.w	r5, [r0, #308]	; 0x134
   20370:	sub	sp, #68	; 0x44
   20372:	ldr	r3, [r2, r3]
   20374:	ldr.w	r7, [r0, #352]	; 0x160
   20378:	mov	r0, r5
   2037a:	ldr	r3, [r3, #0]
   2037c:	str	r3, [sp, #60]	; 0x3c
   2037e:	mov.w	r3, #0
   20382:	add.w	r3, r7, #72	; 0x48
   20386:	str	r3, [sp, #20]
   20388:	bl	1f142 <btrfs_fs_roots_compare_roots@@Base+0x4>
   2038c:	addw	r5, r5, #2859	; 0xb2b
   20390:	movs	r3, #168	; 0xa8
   20392:	mla	r3, r3, r0, r5
   20396:	ldr.w	r8, [r3, #8]
   2039a:	ldr.w	r9, [r3, #12]
   2039e:	ldr	r3, [r4, #28]
   203a0:	ldr	r1, [r3, #0]
   203a2:	ldr.w	r3, [r1, #180]	; 0xb4
   203a6:	ldr.w	r2, [r1, #176]	; 0xb0
   203aa:	cmp	r9, r3
   203ac:	it	eq
   203ae:	cmpeq	r8, r2
   203b0:	beq.n	203c2 <write_all_supers@@Base+0x66>
   203b2:	adds	r0, #1
   203b4:	negs	r3, r0
   203b6:	and.w	r0, r0, #3
   203ba:	and.w	r3, r3, #3
   203be:	it	pl
   203c0:	negpl	r0, r3
   203c2:	movs	r2, #168	; 0xa8
   203c4:	movs	r1, #0
   203c6:	mul.w	r6, r2, r0
   203ca:	adds	r3, r5, r6
   203cc:	mov	r0, r3
   203ce:	blx	8bf8 <memset@plt+0x4>
   203d2:	ldr	r2, [r4, #28]
   203d4:	ldr	r2, [r2, #0]
   203d6:	ldrd	r1, r2, [r2, #40]	; 0x28
   203da:	str	r1, [r5, r6]
   203dc:	str	r2, [r0, #4]
   203de:	mov	r3, r0
   203e0:	ldr	r2, [r4, #28]
   203e2:	ldr	r2, [r2, #0]
   203e4:	ldr.w	r1, [r2, #176]	; 0xb0
   203e8:	ldr.w	r2, [r2, #180]	; 0xb4
   203ec:	str	r1, [r0, #8]
   203ee:	str	r2, [r0, #12]
   203f0:	ldr	r2, [r4, #28]
   203f2:	ldr	r2, [r2, #0]
   203f4:	ldrb.w	r2, [r2, #196]	; 0xc4
   203f8:	strb.w	r2, [r0, #152]	; 0x98
   203fc:	ldr	r2, [r4, #32]
   203fe:	ldr	r2, [r2, #0]
   20400:	ldrd	r1, r2, [r2, #40]	; 0x28
   20404:	str	r1, [r0, #16]
   20406:	str	r2, [r0, #20]
   20408:	ldr	r2, [r4, #32]
   2040a:	ldr	r2, [r2, #0]
   2040c:	ldr.w	r1, [r2, #176]	; 0xb0
   20410:	ldr.w	r2, [r2, #180]	; 0xb4
   20414:	str	r1, [r0, #24]
   20416:	str	r2, [r0, #28]
   20418:	ldr	r2, [r4, #32]
   2041a:	ldr	r2, [r2, #0]
   2041c:	ldrb.w	r2, [r2, #196]	; 0xc4
   20420:	strb.w	r2, [r0, #153]	; 0x99
   20424:	ldr	r2, [r4, #24]
   20426:	ldr	r2, [r2, #0]
   20428:	ldrd	r1, r2, [r2, #40]	; 0x28
   2042c:	str	r1, [r0, #32]
   2042e:	str	r2, [r0, #36]	; 0x24
   20430:	ldr	r2, [r4, #24]
   20432:	ldr	r2, [r2, #0]
   20434:	ldr.w	r1, [r2, #176]	; 0xb0
   20438:	ldr.w	r2, [r2, #180]	; 0xb4
   2043c:	str	r1, [r0, #40]	; 0x28
   2043e:	str	r2, [r0, #44]	; 0x2c
   20440:	ldr	r2, [r4, #24]
   20442:	ldr	r2, [r2, #0]
   20444:	ldrb.w	r2, [r2, #196]	; 0xc4
   20448:	strb.w	r2, [r0, #154]	; 0x9a
   2044c:	ldr	r2, [r4, #20]
   2044e:	cbz	r2, 20478 <write_all_supers@@Base+0x11c>
   20450:	ldr	r2, [r2, #0]
   20452:	cbz	r2, 20478 <write_all_supers@@Base+0x11c>
   20454:	ldrd	r1, r2, [r2, #40]	; 0x28
   20458:	str	r1, [r0, #48]	; 0x30
   2045a:	str	r2, [r0, #52]	; 0x34
   2045c:	ldr	r2, [r4, #20]
   2045e:	ldr	r2, [r2, #0]
   20460:	ldr.w	r1, [r2, #176]	; 0xb0
   20464:	ldr.w	r2, [r2, #180]	; 0xb4
   20468:	str	r1, [r0, #56]	; 0x38
   2046a:	str	r2, [r0, #60]	; 0x3c
   2046c:	ldr	r2, [r4, #20]
   2046e:	ldr	r2, [r2, #0]
   20470:	ldrb.w	r2, [r2, #196]	; 0xc4
   20474:	strb.w	r2, [r0, #155]	; 0x9b
   20478:	ldr	r2, [r4, #36]	; 0x24
   2047a:	add.w	sl, sp, #28
   2047e:	ldr	r2, [r2, #0]
   20480:	ldrd	r1, r2, [r2, #40]	; 0x28
   20484:	str	r1, [r3, #64]	; 0x40
   20486:	str	r2, [r3, #68]	; 0x44
   20488:	ldr	r2, [r4, #36]	; 0x24
   2048a:	ldr	r2, [r2, #0]
   2048c:	ldr.w	r1, [r2, #176]	; 0xb0
   20490:	ldr.w	r2, [r2, #180]	; 0xb4
   20494:	str	r1, [r3, #72]	; 0x48
   20496:	str	r2, [r3, #76]	; 0x4c
   20498:	ldr	r2, [r4, #36]	; 0x24
   2049a:	ldr	r2, [r2, #0]
   2049c:	ldrb.w	r2, [r2, #196]	; 0xc4
   204a0:	strb.w	r2, [r3, #156]	; 0x9c
   204a4:	ldr	r2, [r4, #40]	; 0x28
   204a6:	ldr	r2, [r2, #0]
   204a8:	ldrd	r1, r2, [r2, #40]	; 0x28
   204ac:	str	r1, [r3, #80]	; 0x50
   204ae:	str	r2, [r3, #84]	; 0x54
   204b0:	ldr	r2, [r4, #40]	; 0x28
   204b2:	ldr	r2, [r2, #0]
   204b4:	ldr.w	r1, [r2, #176]	; 0xb0
   204b8:	ldr.w	r2, [r2, #180]	; 0xb4
   204bc:	str	r1, [r3, #88]	; 0x58
   204be:	str	r2, [r3, #92]	; 0x5c
   204c0:	ldr	r2, [r4, #40]	; 0x28
   204c2:	ldr	r2, [r2, #0]
   204c4:	ldrb.w	r2, [r2, #196]	; 0xc4
   204c8:	strb.w	r2, [r3, #157]	; 0x9d
   204cc:	ldr.w	r2, [r4, #308]	; 0x134
   204d0:	ldr	r1, [r2, #112]	; 0x70
   204d2:	ldr	r2, [r2, #116]	; 0x74
   204d4:	str	r1, [r3, #96]	; 0x60
   204d6:	str	r2, [r3, #100]	; 0x64
   204d8:	ldr.w	r2, [r4, #308]	; 0x134
   204dc:	ldr	r1, [r2, #120]	; 0x78
   204de:	ldr	r2, [r2, #124]	; 0x7c
   204e0:	str	r1, [r3, #104]	; 0x68
   204e2:	str	r2, [r3, #108]	; 0x6c
   204e4:	ldr.w	r2, [r4, #308]	; 0x134
   204e8:	ldr.w	r1, [r2, #136]	; 0x88
   204ec:	ldr.w	r2, [r2, #140]	; 0x8c
   204f0:	str	r1, [r3, #112]	; 0x70
   204f2:	str	r2, [r3, #116]	; 0x74
   204f4:	ldr	r3, [pc, #612]	; (2075c <write_all_supers@@Base+0x400>)
   204f6:	ldr.w	r6, [r4, #308]	; 0x134
   204fa:	add	r3, pc
   204fc:	ldr	r5, [r7, #72]	; 0x48
   204fe:	vmov	s17, r3
   20502:	ldr	r3, [sp, #20]
   20504:	cmp	r5, r3
   20506:	bne.n	2050c <write_all_supers@@Base+0x1b0>
   20508:	movs	r0, #0
   2050a:	b.n	20656 <write_all_supers@@Base+0x2fa>
   2050c:	ldr	r3, [r5, #28]
   2050e:	cmp	r3, #0
   20510:	beq.n	205da <write_all_supers@@Base+0x27e>
   20512:	movs	r2, #0
   20514:	strb.w	r2, [r6, #245]	; 0xf5
   20518:	strb.w	r2, [r6, #246]	; 0xf6
   2051c:	strb.w	r2, [r6, #247]	; 0xf7
   20520:	strb.w	r2, [r6, #248]	; 0xf8
   20524:	strb.w	r2, [r6, #249]	; 0xf9
   20528:	strb.w	r2, [r6, #250]	; 0xfa
   2052c:	strb.w	r2, [r6, #251]	; 0xfb
   20530:	strb.w	r2, [r6, #252]	; 0xfc
   20534:	ldrd	r1, r2, [r5, #104]	; 0x68
   20538:	str.w	r1, [r6, #237]	; 0xed
   2053c:	str.w	r2, [r6, #241]	; 0xf1
   20540:	ldrd	r1, r2, [r5, #64]	; 0x40
   20544:	str.w	r1, [r6, #201]	; 0xc9
   20548:	str.w	r2, [r6, #205]	; 0xcd
   2054c:	ldrd	r1, r2, [r5, #72]	; 0x48
   20550:	str.w	r1, [r6, #209]	; 0xd1
   20554:	str.w	r2, [r6, #213]	; 0xd5
   20558:	ldrd	r1, r2, [r5, #80]	; 0x50
   2055c:	str.w	r1, [r6, #217]	; 0xd9
   20560:	add.w	r1, r5, #128	; 0x80
   20564:	str.w	r2, [r6, #221]	; 0xdd
   20568:	addw	r2, r6, #267	; 0x10b
   2056c:	ldr	r3, [r5, #88]	; 0x58
   2056e:	str.w	r3, [r6, #225]	; 0xe1
   20572:	ldr	r3, [r5, #92]	; 0x5c
   20574:	str.w	r3, [r6, #229]	; 0xe5
   20578:	ldr	r3, [r5, #96]	; 0x60
   2057a:	str.w	r3, [r6, #233]	; 0xe9
   2057e:	add.w	r3, r5, #112	; 0x70
   20582:	ldr.w	r0, [r3], #4
   20586:	cmp	r3, r1
   20588:	str.w	r0, [r2], #4
   2058c:	bne.n	20582 <write_all_supers@@Base+0x226>
   2058e:	ldr.w	r3, [r4, #352]	; 0x160
   20592:	addw	r1, r6, #283	; 0x11b
   20596:	add.w	r2, r3, #16
   2059a:	adds	r3, #32
   2059c:	ldr.w	r0, [r2], #4
   205a0:	cmp	r2, r3
   205a2:	str.w	r0, [r1], #4
   205a6:	bne.n	2059c <write_all_supers@@Base+0x240>
   205a8:	ldr	r2, [r6, #60]	; 0x3c
   205aa:	ldr	r3, [r6, #56]	; 0x38
   205ac:	ldrh.w	fp, [r6, #196]	; 0xc4
   205b0:	orr.w	r3, r3, #1
   205b4:	str	r2, [r6, #60]	; 0x3c
   205b6:	str	r3, [r6, #56]	; 0x38
   205b8:	ldr	r0, [r5, #24]
   205ba:	blx	873c <fsync@plt>
   205be:	cmp	r0, #0
   205c0:	bge.n	205de <write_all_supers@@Base+0x282>
   205c2:	ldr	r0, [pc, #412]	; (20760 <write_all_supers@@Base+0x404>)
   205c4:	ldrd	r2, r3, [r5, #64]	; 0x40
   205c8:	add	r0, pc
   205ca:	bl	1a900 <__btrfs_error@@Base>
   205ce:	blx	8bac <__errno_location@plt>
   205d2:	ldr	r0, [r0, #0]
   205d4:	negs	r0, r0
   205d6:	cmp	r0, #0
   205d8:	blt.n	20656 <write_all_supers@@Base+0x2fa>
   205da:	ldr	r5, [r5, #0]
   205dc:	b.n	20502 <write_all_supers@@Base+0x1a6>
   205de:	ldrd	r8, r9, [r4, #320]	; 0x140
   205e2:	cmp.w	r9, #0
   205e6:	it	eq
   205e8:	cmpeq.w	r8, #65536	; 0x10000
   205ec:	beq.n	2067e <write_all_supers@@Base+0x322>
   205ee:	mov	r2, sl
   205f0:	add.w	r1, r6, #32
   205f4:	mov.w	r3, #4064	; 0xfe0
   205f8:	mov	r0, fp
   205fa:	str.w	r8, [r6, #48]	; 0x30
   205fe:	mov	r7, sl
   20600:	str.w	r9, [r6, #52]	; 0x34
   20604:	bl	1f4ce <btrfs_csum_data@@Base>
   20608:	add.w	ip, sp, #60	; 0x3c
   2060c:	mov	r2, r6
   2060e:	mov	r3, r7
   20610:	adds	r2, #8
   20612:	ldmia	r3!, {r0, r1}
   20614:	cmp	r3, ip
   20616:	str.w	r0, [r2, #-8]
   2061a:	mov	r7, r3
   2061c:	str.w	r1, [r2, #-4]
   20620:	bne.n	2060e <write_all_supers@@Base+0x2b2>
   20622:	ldrd	r2, r3, [r4, #320]	; 0x140
   20626:	ldr.w	r1, [r4, #308]	; 0x134
   2062a:	strd	r2, r3, [sp]
   2062e:	mov.w	r2, #4096	; 0x1000
   20632:	ldr	r0, [r5, #24]
   20634:	blx	8c5c <pwrite64@plt>
   20638:	cmp.w	r0, #4096	; 0x1000
   2063c:	beq.n	2066a <write_all_supers@@Base+0x30e>
   2063e:	blx	8bac <__errno_location@plt>
   20642:	movs	r3, #5
   20644:	str	r3, [r0, #0]
   20646:	ldr	r0, [pc, #284]	; (20764 <write_all_supers@@Base+0x408>)
   20648:	ldrd	r2, r3, [r5, #64]	; 0x40
   2064c:	add	r0, pc
   2064e:	bl	1a900 <__btrfs_error@@Base>
   20652:	mvn.w	r0, #4
   20656:	ldr	r2, [pc, #272]	; (20768 <write_all_supers@@Base+0x40c>)
   20658:	ldr	r3, [pc, #252]	; (20758 <write_all_supers@@Base+0x3fc>)
   2065a:	add	r2, pc
   2065c:	ldr	r3, [r2, r3]
   2065e:	ldr	r2, [r3, #0]
   20660:	ldr	r3, [sp, #60]	; 0x3c
   20662:	eors	r2, r3
   20664:	beq.n	2074a <write_all_supers@@Base+0x3ee>
   20666:	blx	88e4 <__stack_chk_fail@plt>
   2066a:	ldr	r0, [r5, #24]
   2066c:	blx	873c <fsync@plt>
   20670:	cmp	r0, #0
   20672:	bge.n	205da <write_all_supers@@Base+0x27e>
   20674:	ldr	r0, [pc, #244]	; (2076c <write_all_supers@@Base+0x410>)
   20676:	ldrd	r2, r3, [r5, #64]	; 0x40
   2067a:	add	r0, pc
   2067c:	b.n	205ca <write_all_supers@@Base+0x26e>
   2067e:	add.w	r3, r6, #32
   20682:	movs	r7, #0
   20684:	vmov	s16, r3
   20688:	b.n	206c6 <write_all_supers@@Base+0x36a>
   2068a:	cbnz	r7, 206a0 <write_all_supers@@Base+0x344>
   2068c:	ldr	r0, [r5, #24]
   2068e:	blx	873c <fsync@plt>
   20692:	cmp	r0, #0
   20694:	bge.n	206a0 <write_all_supers@@Base+0x344>
   20696:	vmov	r0, s17
   2069a:	ldrd	r2, r3, [r5, #64]	; 0x40
   2069e:	b.n	205ca <write_all_supers@@Base+0x26e>
   206a0:	adds	r7, #1
   206a2:	cmp	r7, #3
   206a4:	beq.n	205da <write_all_supers@@Base+0x27e>
   206a6:	movs	r3, #12
   206a8:	mov.w	r2, #16384	; 0x4000
   206ac:	muls	r3, r7
   206ae:	sub.w	r0, r3, #32
   206b2:	rsb	r1, r3, #32
   206b6:	lsl.w	r9, r2, r0
   206ba:	lsr.w	r1, r2, r1
   206be:	orr.w	r9, r9, r1
   206c2:	lsl.w	r8, r2, r3
   206c6:	adds.w	r3, r8, #4096	; 0x1000
   206ca:	str	r3, [sp, #8]
   206cc:	adc.w	r3, r9, #0
   206d0:	str	r3, [sp, #12]
   206d2:	ldrd	r0, r1, [sp, #8]
   206d6:	ldrd	r2, r3, [r5, #72]	; 0x48
   206da:	cmp	r3, r1
   206dc:	it	eq
   206de:	cmpeq	r2, r0
   206e0:	bcc.w	205da <write_all_supers@@Base+0x27e>
   206e4:	mov	r2, sl
   206e6:	vmov	r1, s16
   206ea:	mov.w	r3, #4064	; 0xfe0
   206ee:	mov	r0, fp
   206f0:	str.w	r8, [r6, #48]	; 0x30
   206f4:	str.w	r9, [r6, #52]	; 0x34
   206f8:	bl	1f4ce <btrfs_csum_data@@Base>
   206fc:	add.w	lr, sp, #60	; 0x3c
   20700:	mov	ip, sl
   20702:	mov	r2, r6
   20704:	mov	r3, ip
   20706:	adds	r2, #8
   20708:	ldmia	r3!, {r0, r1}
   2070a:	cmp	r3, lr
   2070c:	str.w	r0, [r2, #-8]
   20710:	mov	ip, r3
   20712:	str.w	r1, [r2, #-4]
   20716:	bne.n	20704 <write_all_supers@@Base+0x3a8>
   20718:	strd	r8, r9, [sp]
   2071c:	mov.w	r2, #4096	; 0x1000
   20720:	ldr.w	r1, [r4, #308]	; 0x134
   20724:	ldr	r0, [r5, #24]
   20726:	blx	8c5c <pwrite64@plt>
   2072a:	cmp.w	r0, #4096	; 0x1000
   2072e:	beq.n	2068a <write_all_supers@@Base+0x32e>
   20730:	blx	8bac <__errno_location@plt>
   20734:	movs	r3, #5
   20736:	mov	r7, r0
   20738:	str	r3, [r0, #0]
   2073a:	ldr	r0, [pc, #52]	; (20770 <write_all_supers@@Base+0x414>)
   2073c:	ldrd	r2, r3, [r5, #64]	; 0x40
   20740:	add	r0, pc
   20742:	bl	1a900 <__btrfs_error@@Base>
   20746:	ldr	r0, [r7, #0]
   20748:	b.n	205d4 <write_all_supers@@Base+0x278>
   2074a:	add	sp, #68	; 0x44
   2074c:	vpop	{d8}
   20750:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20754:	ldrh	r6, [r0, #14]
   20756:	movs	r4, r0
   20758:	lsls	r4, r7, #9
   2075a:	movs	r0, r0
   2075c:	asrs	r2, r5, #6
   2075e:	movs	r2, r0
   20760:	asrs	r4, r3, #3
   20762:	movs	r2, r0
   20764:	asrs	r4, r2, #2
   20766:	movs	r2, r0
   20768:	strh	r6, [r2, #54]	; 0x36
   2076a:	movs	r4, r0
   2076c:	asrs	r2, r5, #32
   2076e:	movs	r2, r0
   20770:	lsrs	r0, r4, #30
   20772:	movs	r2, r0

00020774 <write_ctree_super@@Base>:
   20774:	push	{r4, r5, r6, lr}
   20776:	mov	r3, r0
   20778:	ldr	r0, [r0, #0]
   2077a:	ldr	r5, [pc, #140]	; (20808 <write_ctree_super@@Base+0x94>)
   2077c:	ldrb.w	r2, [r0, #364]	; 0x16c
   20780:	add	r5, pc
   20782:	lsls	r2, r2, #30
   20784:	bmi.n	20802 <write_ctree_super@@Base+0x8e>
   20786:	ldrd	r1, r2, [r0, #28]
   2078a:	ldr.w	r4, [r0, #308]	; 0x134
   2078e:	ldrd	r6, r3, [r3, #8]
   20792:	str	r6, [r4, #72]	; 0x48
   20794:	str	r3, [r4, #76]	; 0x4c
   20796:	ldr	r4, [r1, #0]
   20798:	ldr.w	r3, [r0, #308]	; 0x134
   2079c:	ldrd	r6, r4, [r4, #40]	; 0x28
   207a0:	str	r6, [r3, #80]	; 0x50
   207a2:	str	r4, [r3, #84]	; 0x54
   207a4:	ldr	r1, [r1, #0]
   207a6:	ldr.w	r3, [r0, #308]	; 0x134
   207aa:	ldrb.w	r1, [r1, #196]	; 0xc4
   207ae:	strb.w	r1, [r3, #198]	; 0xc6
   207b2:	ldr	r1, [r2, #0]
   207b4:	ldr.w	r3, [r0, #308]	; 0x134
   207b8:	ldrd	r4, r1, [r1, #40]	; 0x28
   207bc:	str	r4, [r3, #88]	; 0x58
   207be:	str	r1, [r3, #92]	; 0x5c
   207c0:	ldr	r1, [r2, #0]
   207c2:	ldr.w	r3, [r0, #308]	; 0x134
   207c6:	ldrb.w	r1, [r1, #196]	; 0xc4
   207ca:	strb.w	r1, [r3, #199]	; 0xc7
   207ce:	ldr	r2, [r2, #0]
   207d0:	ldr.w	r3, [r0, #308]	; 0x134
   207d4:	ldr.w	r1, [r2, #176]	; 0xb0
   207d8:	ldr.w	r2, [r2, #180]	; 0xb4
   207dc:	str.w	r1, [r3, #164]	; 0xa4
   207e0:	str.w	r2, [r3, #168]	; 0xa8
   207e4:	bl	2035c <write_all_supers@@Base>
   207e8:	mov	r4, r0
   207ea:	cbz	r0, 207fe <write_ctree_super@@Base+0x8a>
   207ec:	ldr	r3, [pc, #28]	; (2080c <write_ctree_super@@Base+0x98>)
   207ee:	movs	r1, #1
   207f0:	ldr	r2, [pc, #28]	; (20810 <write_ctree_super@@Base+0x9c>)
   207f2:	ldr	r0, [r5, r3]
   207f4:	add	r2, pc
   207f6:	mov	r3, r4
   207f8:	ldr	r0, [r0, #0]
   207fa:	blx	8ca0 <__fprintf_chk@plt+0x4>
   207fe:	mov	r0, r4
   20800:	pop	{r4, r5, r6, pc}
   20802:	movs	r4, #0
   20804:	b.n	207fe <write_ctree_super@@Base+0x8a>
   20806:	nop
   20808:	strh	r0, [r6, #44]	; 0x2c
   2080a:	movs	r4, r0
   2080c:	lsls	r4, r1, #10
   2080e:	movs	r0, r0
   20810:	lsrs	r0, r5, #28
   20812:	movs	r2, r0

00020814 <close_ctree_fs_info@@Base>:
   20814:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   20818:	mov	r5, r0
   2081a:	ldrd	r2, r3, [r5, #232]	; 0xe8
   2081e:	ldr	r6, [r0, #28]
   20820:	ldrd	r0, r1, [r0, #240]	; 0xf0
   20824:	ldr	r7, [pc, #332]	; (20974 <close_ctree_fs_info@@Base+0x160>)
   20826:	cmp	r1, r3
   20828:	it	eq
   2082a:	cmpeq	r0, r2
   2082c:	add	r7, pc
   2082e:	bne.n	2089c <close_ctree_fs_info@@Base+0x88>
   20830:	ldrb.w	r3, [r5, #365]	; 0x16d
   20834:	lsls	r3, r3, #29
   20836:	bpl.w	20970 <close_ctree_fs_info@@Base+0x15c>
   2083a:	ldr.w	r3, [r5, #308]	; 0x134
   2083e:	movs	r2, #95	; 0x5f
   20840:	movs	r1, #66	; 0x42
   20842:	movs	r4, #0
   20844:	mov	r0, r5
   20846:	strb.w	r2, [r3, #64]	; 0x40
   2084a:	strb.w	r1, [r3, #65]	; 0x41
   2084e:	movs	r1, #72	; 0x48
   20850:	strb.w	r2, [r3, #70]	; 0x46
   20854:	movs	r2, #77	; 0x4d
   20856:	strb.w	r1, [r3, #66]	; 0x42
   2085a:	movs	r1, #82	; 0x52
   2085c:	strb.w	r2, [r3, #71]	; 0x47
   20860:	strb.w	r1, [r3, #67]	; 0x43
   20864:	movs	r1, #102	; 0x66
   20866:	strb.w	r1, [r3, #68]	; 0x44
   2086a:	movs	r1, #83	; 0x53
   2086c:	strb.w	r1, [r3, #69]	; 0x45
   20870:	ldr.w	r3, [r6, #464]	; 0x1d0
   20874:	ldrb.w	r2, [r3, #365]	; 0x16d
   20878:	bfi	r2, r4, #2, #1
   2087c:	strb.w	r2, [r3, #365]	; 0x16d
   20880:	bl	2035c <write_all_supers@@Base>
   20884:	cmp	r0, #0
   20886:	beq.n	20970 <close_ctree_fs_info@@Base+0x15c>
   20888:	ldr	r3, [pc, #236]	; (20978 <close_ctree_fs_info@@Base+0x164>)
   2088a:	movs	r1, #1
   2088c:	ldr	r2, [pc, #236]	; (2097c <close_ctree_fs_info@@Base+0x168>)
   2088e:	ldr	r6, [r7, r3]
   20890:	add	r2, pc
   20892:	mov	r3, r0
   20894:	ldr	r0, [r6, #0]
   20896:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2089a:	b.n	20936 <close_ctree_fs_info@@Base+0x122>
   2089c:	ldr.w	r9, [pc, #224]	; 20980 <close_ctree_fs_info@@Base+0x16c>
   208a0:	clz	r3, r6
   208a4:	ldr	r0, [pc, #220]	; (20984 <close_ctree_fs_info@@Base+0x170>)
   208a6:	movw	r2, #1870	; 0x74e
   208aa:	add	r9, pc
   208ac:	lsrs	r3, r3, #5
   208ae:	add.w	r9, r9, #33	; 0x21
   208b2:	add	r0, pc
   208b4:	mov	r1, r9
   208b6:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   208ba:	movs	r1, #1
   208bc:	mov	r0, r6
   208be:	bl	2e404 <btrfs_start_transaction@@Base>
   208c2:	cmn.w	r0, #4096	; 0x1000
   208c6:	mov	r4, r0
   208c8:	bhi.n	20936 <close_ctree_fs_info@@Base+0x122>
   208ca:	mov	r1, r6
   208cc:	ldr	r4, [pc, #184]	; (20988 <close_ctree_fs_info@@Base+0x174>)
   208ce:	bl	2e684 <btrfs_commit_transaction@@Base>
   208d2:	movs	r1, #1
   208d4:	mov	r0, r6
   208d6:	add	r4, pc
   208d8:	bl	2e404 <btrfs_start_transaction@@Base>
   208dc:	movw	r2, #1878	; 0x756
   208e0:	mov	r1, r9
   208e2:	cmn.w	r0, #4096	; 0x1000
   208e6:	mov	r8, r0
   208e8:	ldr	r0, [pc, #160]	; (2098c <close_ctree_fs_info@@Base+0x178>)
   208ea:	ite	ls
   208ec:	movls	r3, #0
   208ee:	movhi	r3, #1
   208f0:	add	r0, pc
   208f2:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   208f6:	mov	r1, r5
   208f8:	mov	r0, r8
   208fa:	bl	2e490 <commit_tree_roots@@Base>
   208fe:	mov.w	r2, #1880	; 0x758
   20902:	mov	r1, r9
   20904:	mov	r3, r0
   20906:	mov	r0, r4
   20908:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   2090c:	mov	r1, r6
   2090e:	mov	r0, r8
   20910:	bl	2e5a8 <__commit_transaction@@Base>
   20914:	movw	r2, #1882	; 0x75a
   20918:	mov	r1, r9
   2091a:	mov	r3, r0
   2091c:	mov	r0, r4
   2091e:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   20922:	mov	r0, r8
   20924:	bl	20774 <write_ctree_super@@Base>
   20928:	mov	r4, r0
   2092a:	mov	r0, r8
   2092c:	blx	87cc <free@plt+0x4>
   20930:	cmp	r4, #0
   20932:	beq.w	20830 <close_ctree_fs_info@@Base+0x1c>
   20936:	mov	r0, r5
   20938:	bl	24286 <btrfs_free_block_groups@@Base>
   2093c:	ldr	r1, [pc, #80]	; (20990 <close_ctree_fs_info@@Base+0x17c>)
   2093e:	add.w	r0, r5, #56	; 0x38
   20942:	add	r1, pc
   20944:	bl	1ad82 <rb_free_nodes@@Base>
   20948:	mov	r0, r5
   2094a:	bl	1fcdc <btrfs_release_all_roots@@Base>
   2094e:	ldr.w	r0, [r5, #352]	; 0x160
   20952:	bl	2b3b4 <btrfs_close_devices@@Base>
   20956:	mov	r6, r0
   20958:	mov	r0, r5
   2095a:	bl	1fd40 <btrfs_cleanup_all_caches@@Base>
   2095e:	mov	r0, r5
   20960:	bl	1fa98 <btrfs_free_fs_info@@Base>
   20964:	cmp	r4, #0
   20966:	ite	ne
   20968:	movne	r0, r4
   2096a:	moveq	r0, r6
   2096c:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   20970:	movs	r4, #0
   20972:	b.n	20936 <close_ctree_fs_info@@Base+0x122>
   20974:	strh	r4, [r0, #40]	; 0x28
   20976:	movs	r4, r0
   20978:	lsls	r4, r1, #10
   2097a:	movs	r0, r0
   2097c:	lsrs	r4, r1, #26
   2097e:	movs	r2, r0
   20980:	asrs	r7, r6, #10
   20982:	movs	r2, r0
   20984:	lsrs	r2, r2, #26
   20986:	movs	r2, r0
   20988:	svc	167	; 0xa7
   2098a:	movs	r1, r0
   2098c:	lsrs	r2, r3, #25
   2098e:	movs	r2, r0
   20990:	bl	16c992 <__bss_end__@@Base+0x10230a>

00020994 <clean_tree_block@@Base>:
   20994:	b.w	1a752 <clear_extent_buffer_dirty@@Base>

00020998 <btrfs_mark_buffer_dirty@@Base>:
   20998:	b.w	1a718 <set_extent_buffer_dirty@@Base>

0002099c <btrfs_buffer_uptodate@@Base>:
   2099c:	push	{r0, r1, r2, lr}
   2099e:	mov	r1, r0
   209a0:	bl	1f298 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   209a4:	cbz	r0, 209b6 <btrfs_buffer_uptodate@@Base+0x1a>
   209a6:	movs	r0, #1
   209a8:	str	r0, [sp, #0]
   209aa:	mov	r0, r1
   209ac:	bl	1f2ac <btrfs_fs_roots_compare_roots@@Base+0x16e>
   209b0:	clz	r0, r0
   209b4:	lsrs	r0, r0, #5
   209b6:	add	sp, #12
   209b8:	ldr.w	pc, [sp], #4

000209bc <readahead_tree_block@@Base>:
   209bc:	push	{r4, r5, r6, r7, lr}
   209be:	sub	sp, #44	; 0x2c
   209c0:	ldr	r5, [pc, #148]	; (20a58 <readahead_tree_block@@Base+0x9c>)
   209c2:	mov	r4, r0
   209c4:	ldr	r1, [pc, #148]	; (20a5c <readahead_tree_block@@Base+0xa0>)
   209c6:	mov	r6, r2
   209c8:	add	r5, pc
   209ca:	mov	r7, r3
   209cc:	ldr	r1, [r5, r1]
   209ce:	ldr	r1, [r1, #0]
   209d0:	str	r1, [sp, #36]	; 0x24
   209d2:	mov.w	r1, #0
   209d6:	movs	r1, #0
   209d8:	str	r1, [sp, #20]
   209da:	ldr.w	r1, [r0, #384]	; 0x180
   209de:	str	r1, [sp, #0]
   209e0:	bl	1f6b0 <btrfs_find_tree_block@@Base>
   209e4:	mov	r5, r0
   209e6:	cbnz	r0, 20a26 <readahead_tree_block@@Base+0x6a>
   209e8:	add	r3, sp, #20
   209ea:	movs	r1, #0
   209ec:	str	r3, [sp, #4]
   209ee:	mov	r2, r6
   209f0:	add	r3, sp, #24
   209f2:	mov	r0, r4
   209f4:	str	r3, [sp, #0]
   209f6:	mov	r3, r7
   209f8:	strd	r1, r1, [sp, #8]
   209fc:	bl	2d2b0 <btrfs_map_block@@Base>
   20a00:	cbnz	r0, 20a32 <readahead_tree_block@@Base+0x76>
   20a02:	ldr	r0, [sp, #20]
   20a04:	ldr	r1, [r0, #8]
   20a06:	ldrd	r3, r2, [r1, #16]
   20a0a:	adds	r3, #1
   20a0c:	adc.w	r2, r2, #0
   20a10:	strd	r3, r2, [r1, #16]
   20a14:	ldr.w	r3, [r4, #384]	; 0x180
   20a18:	str	r3, [sp, #0]
   20a1a:	ldrd	r2, r3, [r0, #16]
   20a1e:	ldr	r0, [r1, #24]
   20a20:	blx	89fc <readahead@plt>
   20a24:	b.n	20a32 <readahead_tree_block@@Base+0x76>
   20a26:	ldrd	r2, r3, [sp, #64]	; 0x40
   20a2a:	bl	2099c <btrfs_buffer_uptodate@@Base>
   20a2e:	cmp	r0, #0
   20a30:	beq.n	209e8 <readahead_tree_block@@Base+0x2c>
   20a32:	mov	r0, r5
   20a34:	bl	1a0a4 <free_extent_buffer@@Base>
   20a38:	ldr	r0, [sp, #20]
   20a3a:	blx	87cc <free@plt+0x4>
   20a3e:	ldr	r2, [pc, #32]	; (20a60 <readahead_tree_block@@Base+0xa4>)
   20a40:	ldr	r3, [pc, #24]	; (20a5c <readahead_tree_block@@Base+0xa0>)
   20a42:	add	r2, pc
   20a44:	ldr	r3, [r2, r3]
   20a46:	ldr	r2, [r3, #0]
   20a48:	ldr	r3, [sp, #36]	; 0x24
   20a4a:	eors	r2, r3
   20a4c:	beq.n	20a52 <readahead_tree_block@@Base+0x96>
   20a4e:	blx	88e4 <__stack_chk_fail@plt>
   20a52:	add	sp, #44	; 0x2c
   20a54:	pop	{r4, r5, r6, r7, pc}
   20a56:	nop
   20a58:	strh	r0, [r5, #26]
   20a5a:	movs	r4, r0
   20a5c:	lsls	r4, r7, #9
   20a5e:	movs	r0, r0
   20a60:	strh	r6, [r5, #22]
   20a62:	movs	r4, r0

00020a64 <write_tree_block@@Base>:
   20a64:	push	{r0, r1, r2, r4, r5, lr}
   20a66:	mov	r4, r1
   20a68:	mov	r5, r0
   20a6a:	mov	r1, r2
   20a6c:	mov	r0, r4
   20a6e:	str	r2, [sp, #4]
   20a70:	bl	1f1cc <btrfs_fs_roots_compare_roots@@Base+0x8e>
   20a74:	ldr	r1, [sp, #4]
   20a76:	cbz	r0, 20a9e <write_tree_block@@Base+0x3a>
   20a78:	mov	r0, r4
   20a7a:	bl	1f1cc <btrfs_fs_roots_compare_roots@@Base+0x8e>
   20a7e:	ldr	r1, [sp, #4]
   20a80:	mov	r2, r0
   20a82:	add.w	r0, r4, #352	; 0x160
   20a86:	bl	1f328 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   20a8a:	ldr	r1, [pc, #100]	; (20af0 <write_tree_block@@Base+0x8c>)
   20a8c:	ldr	r0, [pc, #100]	; (20af4 <write_tree_block@@Base+0x90>)
   20a8e:	movs	r3, #1
   20a90:	add	r1, pc
   20a92:	mov.w	r2, #516	; 0x204
   20a96:	adds	r1, #53	; 0x35
   20a98:	add	r0, pc
   20a9a:	bl	1f488 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   20a9e:	cbz	r5, 20ac2 <write_tree_block@@Base+0x5e>
   20aa0:	mov	r0, r1
   20aa2:	ldrd	r2, r3, [r5, #8]
   20aa6:	str	r1, [sp, #4]
   20aa8:	bl	2099c <btrfs_buffer_uptodate@@Base>
   20aac:	ldr	r1, [sp, #4]
   20aae:	cbnz	r0, 20ac2 <write_tree_block@@Base+0x5e>
   20ab0:	ldr	r1, [pc, #68]	; (20af8 <write_tree_block@@Base+0x94>)
   20ab2:	movs	r3, #1
   20ab4:	ldr	r0, [pc, #68]	; (20afc <write_tree_block@@Base+0x98>)
   20ab6:	mov.w	r2, #520	; 0x208
   20aba:	add	r1, pc
   20abc:	adds	r1, #53	; 0x35
   20abe:	add	r0, pc
   20ac0:	b.n	20a9a <write_tree_block@@Base+0x36>
   20ac2:	ldr.w	r2, [r1, #156]	; 0x9c
   20ac6:	mov	r0, r4
   20ac8:	ldr.w	r3, [r1, #152]	; 0x98
   20acc:	str	r1, [sp, #4]
   20ace:	orr.w	r3, r3, #1
   20ad2:	str.w	r2, [r1, #156]	; 0x9c
   20ad6:	str.w	r3, [r1, #152]	; 0x98
   20ada:	movs	r2, #0
   20adc:	bl	1f674 <csum_tree_block@@Base>
   20ae0:	ldr	r1, [sp, #4]
   20ae2:	mov	r0, r4
   20ae4:	add	sp, #12
   20ae6:	ldmia.w	sp!, {r4, r5, lr}
   20aea:	b.w	1f900 <write_and_map_eb@@Base>
   20aee:	nop
   20af0:	asrs	r1, r2, #3
   20af2:	movs	r2, r0
   20af4:	asrs	r5, r3, #18
   20af6:	movs	r2, r0
   20af8:	asrs	r7, r4, #2
   20afa:	movs	r2, r0
   20afc:	asrs	r7, r6, #17
   20afe:	movs	r2, r0

00020b00 <btrfs_set_buffer_uptodate@@Base>:
   20b00:	ldr	r3, [r0, #84]	; 0x54
   20b02:	orr.w	r3, r3, #4
   20b06:	str	r3, [r0, #84]	; 0x54
   20b08:	movs	r0, #0
   20b0a:	bx	lr

00020b0c <read_tree_block@@Base>:
   20b0c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b10:	mov.w	r9, #0
   20b14:	ldr.w	r1, [r0, #388]	; 0x184
   20b18:	cmp	r3, r9
   20b1a:	ldr.w	fp, [pc, #416]	; 20cbc <read_tree_block@@Base+0x1b0>
   20b1e:	sub	sp, #28
   20b20:	it	eq
   20b22:	cmpeq	r2, r1
   20b24:	mov	r5, r0
   20b26:	add	fp, pc
   20b28:	mov	r6, r2
   20b2a:	mov	r7, r3
   20b2c:	bcc.n	20b4a <read_tree_block@@Base+0x3e>
   20b2e:	adds.w	r4, r1, #4294967295	; 0xffffffff
   20b32:	adc.w	ip, r9, #4294967295	; 0xffffffff
   20b36:	ands	r4, r2
   20b38:	str	r4, [sp, #8]
   20b3a:	and.w	r4, ip, r3
   20b3e:	str	r4, [sp, #12]
   20b40:	ldrd	r8, r9, [sp, #8]
   20b44:	orrs.w	r4, r8, r9
   20b48:	beq.n	20b5e <read_tree_block@@Base+0x52>
   20b4a:	ldr	r0, [pc, #372]	; (20cc0 <read_tree_block@@Base+0x1b4>)
   20b4c:	mov	r2, r6
   20b4e:	mov	r3, r7
   20b50:	str	r1, [sp, #0]
   20b52:	add	r0, pc
   20b54:	bl	1a900 <__btrfs_error@@Base>
   20b58:	mvn.w	r4, #4
   20b5c:	b.n	20c0a <read_tree_block@@Base+0xfe>
   20b5e:	bl	1f6b6 <btrfs_find_create_tree_block@@Base>
   20b62:	mov	r4, r0
   20b64:	cmp	r0, #0
   20b66:	beq.w	20cac <read_tree_block@@Base+0x1a0>
   20b6a:	ldrd	r2, r3, [sp, #64]	; 0x40
   20b6e:	bl	2099c <btrfs_buffer_uptodate@@Base>
   20b72:	mov	r6, r0
   20b74:	cmp	r0, #0
   20b76:	bne.n	20c0a <read_tree_block@@Base+0xfe>
   20b78:	ldr	r3, [r4, #76]	; 0x4c
   20b7a:	add.w	sl, r4, #68	; 0x44
   20b7e:	mov	r8, r6
   20b80:	movs	r7, #1
   20b82:	strd	r3, r0, [sp]
   20b86:	mov	r0, r5
   20b88:	ldrd	r2, r3, [r4, #40]	; 0x28
   20b8c:	bl	2ca3c <btrfs_num_copies@@Base>
   20b90:	str	r6, [sp, #20]
   20b92:	mov	r9, r0
   20b94:	mov	r2, r7
   20b96:	mov	r1, r4
   20b98:	mov	r0, r5
   20b9a:	bl	1f6c8 <read_whole_eb@@Base>
   20b9e:	cmp	r0, #0
   20ba0:	bne.n	20c2c <read_tree_block@@Base+0x120>
   20ba2:	movs	r2, #1
   20ba4:	mov	r1, r4
   20ba6:	mov	r0, r5
   20ba8:	bl	1f674 <csum_tree_block@@Base>
   20bac:	cmp	r0, #0
   20bae:	bne.n	20c2c <read_tree_block@@Base+0x120>
   20bb0:	mov	r1, r4
   20bb2:	mov	r0, r5
   20bb4:	bl	1f1cc <btrfs_fs_roots_compare_roots@@Base+0x8e>
   20bb8:	cbnz	r0, 20c2c <read_tree_block@@Base+0x120>
   20bba:	ldrd	r2, r3, [sp, #64]	; 0x40
   20bbe:	mov	r0, r4
   20bc0:	str	r6, [sp, #0]
   20bc2:	bl	1f2ac <btrfs_fs_roots_compare_roots@@Base+0x16e>
   20bc6:	cbnz	r0, 20c2c <read_tree_block@@Base+0x120>
   20bc8:	ldr	r3, [r4, #84]	; 0x54
   20bca:	lsls	r1, r3, #21
   20bcc:	bpl.n	20bee <read_tree_block@@Base+0xe2>
   20bce:	ldr	r3, [r4, #68]	; 0x44
   20bd0:	cmp	sl, r3
   20bd2:	bne.n	20bee <read_tree_block@@Base+0xe2>
   20bd4:	ldr.w	r3, [r5, #348]	; 0x15c
   20bd8:	add.w	r2, r5, #344	; 0x158
   20bdc:	str.w	sl, [r5, #348]	; 0x15c
   20be0:	strd	r2, r3, [r4, #68]	; 0x44
   20be4:	str.w	sl, [r3]
   20be8:	ldr	r3, [r4, #80]	; 0x50
   20bea:	adds	r3, #1
   20bec:	str	r3, [r4, #80]	; 0x50
   20bee:	ldrb.w	r1, [r4, #196]	; 0xc4
   20bf2:	mov	r2, r4
   20bf4:	cbz	r1, 20c1c <read_tree_block@@Base+0x110>
   20bf6:	movs	r1, #0
   20bf8:	mov	r0, r5
   20bfa:	bl	1bea4 <btrfs_check_node@@Base>
   20bfe:	cbz	r0, 20c04 <read_tree_block@@Base+0xf8>
   20c00:	cmp	r7, r8
   20c02:	bne.n	20c24 <read_tree_block@@Base+0x118>
   20c04:	mov	r0, r4
   20c06:	bl	20b00 <btrfs_set_buffer_uptodate@@Base>
   20c0a:	mov	r0, r4
   20c0c:	add	sp, #28
   20c0e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20c12:	movs	r6, #0
   20c14:	b.n	20b94 <read_tree_block@@Base+0x88>
   20c16:	mov	r7, r8
   20c18:	movs	r6, #1
   20c1a:	b.n	20b94 <read_tree_block@@Base+0x88>
   20c1c:	mov	r0, r5
   20c1e:	bl	1c4f4 <btrfs_check_leaf@@Base>
   20c22:	b.n	20bfe <read_tree_block@@Base+0xf2>
   20c24:	cmp.w	r8, #0
   20c28:	bgt.n	20cb2 <read_tree_block@@Base+0x1a6>
   20c2a:	mov	r8, r7
   20c2c:	cbz	r6, 20c78 <read_tree_block@@Base+0x16c>
   20c2e:	cmp.w	r8, #0
   20c32:	bgt.n	20cb6 <read_tree_block@@Base+0x1aa>
   20c34:	mov	r1, r4
   20c36:	mov	r0, r5
   20c38:	bl	1f1cc <btrfs_fs_roots_compare_roots@@Base+0x8e>
   20c3c:	ldrb.w	r3, [r5, #364]	; 0x16c
   20c40:	cbz	r0, 20c62 <read_tree_block@@Base+0x156>
   20c42:	lsls	r2, r3, #26
   20c44:	bmi.n	20c5a <read_tree_block@@Base+0x14e>
   20c46:	mov	r1, r4
   20c48:	mov	r0, r5
   20c4a:	bl	1f1cc <btrfs_fs_roots_compare_roots@@Base+0x8e>
   20c4e:	mov	r1, r4
   20c50:	mov	r2, r0
   20c52:	add.w	r0, r5, #352	; 0x160
   20c56:	bl	1f328 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   20c5a:	mov	r0, r4
   20c5c:	bl	1a0a8 <free_extent_buffer_nocache@@Base>
   20c60:	b.n	20b58 <read_tree_block@@Base+0x4c>
   20c62:	lsls	r3, r3, #26
   20c64:	bmi.n	20c5a <read_tree_block@@Base+0x14e>
   20c66:	ldr	r3, [pc, #92]	; (20cc4 <read_tree_block@@Base+0x1b8>)
   20c68:	ldr	r0, [pc, #92]	; (20cc8 <read_tree_block@@Base+0x1bc>)
   20c6a:	ldr.w	r3, [fp, r3]
   20c6e:	add	r0, pc
   20c70:	ldr	r1, [r3, #0]
   20c72:	blx	8de4 <fputs@plt+0x4>
   20c76:	b.n	20c5a <read_tree_block@@Base+0x14e>
   20c78:	cmp.w	r9, #1
   20c7c:	beq.n	20c18 <read_tree_block@@Base+0x10c>
   20c7e:	ldr.w	r3, [r4, #180]	; 0xb4
   20c82:	ldrd	r0, r1, [sp, #8]
   20c86:	ldr.w	r2, [r4, #176]	; 0xb0
   20c8a:	cmp	r1, r3
   20c8c:	it	eq
   20c8e:	cmpeq	r0, r2
   20c90:	it	cc
   20c92:	strcc	r7, [sp, #20]
   20c94:	add.w	r7, r7, #1
   20c98:	it	cc
   20c9a:	strdcc	r2, r3, [sp, #8]
   20c9e:	cmp	r9, r7
   20ca0:	bge.n	20c12 <read_tree_block@@Base+0x106>
   20ca2:	cmp.w	r8, #0
   20ca6:	bgt.n	20c16 <read_tree_block@@Base+0x10a>
   20ca8:	ldr	r7, [sp, #20]
   20caa:	b.n	20c18 <read_tree_block@@Base+0x10c>
   20cac:	mvn.w	r4, #11
   20cb0:	b.n	20c0a <read_tree_block@@Base+0xfe>
   20cb2:	cmp	r6, #0
   20cb4:	beq.n	20c78 <read_tree_block@@Base+0x16c>
   20cb6:	mov	r7, r8
   20cb8:	b.n	20b94 <read_tree_block@@Base+0x88>
   20cba:	nop
   20cbc:	strh	r2, [r1, #16]
   20cbe:	movs	r4, r0
   20cc0:	lsrs	r6, r0, #16
   20cc2:	movs	r2, r0
   20cc4:	lsls	r4, r1, #10
   20cc6:	movs	r0, r0
   20cc8:	lsrs	r1, r4, #12
   20cca:	movs	r2, r0
   20ccc:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   20cd0:	mov	r5, r0
   20cd2:	ldr	r4, [sp, #32]
   20cd4:	mov	r7, r3
   20cd6:	mov	r8, r2
   20cd8:	mov	r6, r1
   20cda:	mov	r0, r4
   20cdc:	bl	1fa18 <btrfs_setup_root@@Base>
   20ce0:	addw	r3, r4, #447	; 0x1bf
   20ce4:	mov	r0, r5
   20ce6:	str	r3, [sp, #4]
   20ce8:	mov	r2, r8
   20cea:	add.w	r3, r4, #8
   20cee:	str	r3, [sp, #0]
   20cf0:	mov	r3, r7
   20cf2:	bl	2add0 <btrfs_find_last_root@@Base>
   20cf6:	mov	r5, r0
   20cf8:	cbnz	r0, 20d22 <read_tree_block@@Base+0x216>
   20cfa:	ldr.w	r2, [r4, #168]	; 0xa8
   20cfe:	mov	r0, r6
   20d00:	ldr.w	r3, [r4, #172]	; 0xac
   20d04:	strd	r2, r3, [sp]
   20d08:	ldr.w	r2, [r4, #184]	; 0xb8
   20d0c:	ldr.w	r3, [r4, #188]	; 0xbc
   20d10:	bl	20b0c <read_tree_block@@Base>
   20d14:	str	r0, [r4, #0]
   20d16:	bl	1f298 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   20d1a:	cmp	r0, #0
   20d1c:	it	eq
   20d1e:	mvneq.w	r5, #4
   20d22:	mov	r0, r5
   20d24:	add	sp, #8
   20d26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   20d2a:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   20d2c:	mov	r4, r0
   20d2e:	str	r2, [sp, #0]
   20d30:	mov	r6, r1
   20d32:	mov	r5, r2
   20d34:	mov	r1, r0
   20d36:	ldrd	r2, r3, [sp, #32]
   20d3a:	ldr	r0, [r0, #28]
   20d3c:	ldr	r7, [sp, #40]	; 0x28
   20d3e:	bl	20ccc <read_tree_block@@Base+0x1c0>
   20d42:	cbz	r0, 20d56 <read_tree_block@@Base+0x24a>
   20d44:	lsls	r3, r6, #30
   20d46:	mov	r1, r7
   20d48:	bmi.n	20d5a <read_tree_block@@Base+0x24e>
   20d4a:	ldr	r0, [pc, #56]	; (20d84 <read_tree_block@@Base+0x278>)
   20d4c:	add	r0, pc
   20d4e:	bl	1a900 <__btrfs_error@@Base>
   20d52:	mvn.w	r0, #4
   20d56:	add	sp, #12
   20d58:	pop	{r4, r5, r6, r7, pc}
   20d5a:	ldr	r0, [pc, #44]	; (20d88 <read_tree_block@@Base+0x27c>)
   20d5c:	add	r0, pc
   20d5e:	bl	1a884 <__btrfs_warning@@Base>
   20d62:	movs	r2, #0
   20d64:	movs	r3, #0
   20d66:	mov	r0, r4
   20d68:	bl	1f6b6 <btrfs_find_create_tree_block@@Base>
   20d6c:	str	r0, [r5, #0]
   20d6e:	cbz	r0, 20d7c <read_tree_block@@Base+0x270>
   20d70:	ldr	r3, [r0, #84]	; 0x54
   20d72:	bic.w	r3, r3, #4
   20d76:	str	r3, [r0, #84]	; 0x54
   20d78:	movs	r0, #0
   20d7a:	b.n	20d56 <read_tree_block@@Base+0x24a>
   20d7c:	mvn.w	r0, #11
   20d80:	b.n	20d56 <read_tree_block@@Base+0x24a>
   20d82:	nop
   20d84:	lsrs	r6, r2, #9
   20d86:	movs	r2, r0
   20d88:	lsrs	r6, r3, #9
   20d8a:	movs	r2, r0

00020d8c <btrfs_read_fs_root_no_cache@@Base>:
   20d8c:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   20d90:	mov	r7, r0
   20d92:	ldr.w	sl, [r0, #28]
   20d96:	mov	r5, r1
   20d98:	movs	r0, #1
   20d9a:	mov.w	r1, #544	; 0x220
   20d9e:	blx	8718 <calloc@plt+0x4>
   20da2:	mov	r4, r0
   20da4:	cbz	r0, 20df2 <btrfs_read_fs_root_no_cache@@Base+0x66>
   20da6:	ldr.w	r9, [r5, #13]
   20daa:	ldr.w	r8, [r5, #9]
   20dae:	cmp.w	r9, #4294967295	; 0xffffffff
   20db2:	ldr	r2, [r5, #0]
   20db4:	it	eq
   20db6:	cmpeq.w	r8, #4294967295	; 0xffffffff
   20dba:	ldr	r3, [r5, #4]
   20dbc:	bne.n	20dde <btrfs_read_fs_root_no_cache@@Base+0x52>
   20dbe:	str	r0, [sp, #0]
   20dc0:	mov	r1, r7
   20dc2:	mov	r0, sl
   20dc4:	bl	20ccc <read_tree_block@@Base+0x1c0>
   20dc8:	mov	r5, r0
   20dca:	cmp	r0, #0
   20dcc:	beq.n	20e86 <btrfs_read_fs_root_no_cache@@Base+0xfa>
   20dce:	mov	r0, r4
   20dd0:	mov	r4, r5
   20dd2:	blx	87cc <free@plt+0x4>
   20dd6:	mov	r0, r4
   20dd8:	add	sp, #8
   20dda:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   20dde:	mov	r1, r7
   20de0:	bl	1fa18 <btrfs_setup_root@@Base>
   20de4:	bl	1b2d4 <btrfs_alloc_path@@Base>
   20de8:	mov	r6, r0
   20dea:	cbnz	r0, 20df8 <btrfs_read_fs_root_no_cache@@Base+0x6c>
   20dec:	mov	r0, r4
   20dee:	blx	87cc <free@plt+0x4>
   20df2:	mvn.w	r4, #11
   20df6:	b.n	20dd6 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   20df8:	movs	r0, #0
   20dfa:	mov	r3, r6
   20dfc:	mov	r2, r5
   20dfe:	mov	r1, sl
   20e00:	strd	r0, r0, [sp]
   20e04:	bl	1d6c0 <btrfs_search_slot@@Base>
   20e08:	subs.w	r8, r0, #0
   20e0c:	beq.n	20e2a <btrfs_read_fs_root_no_cache@@Base+0x9e>
   20e0e:	ble.n	20e14 <btrfs_read_fs_root_no_cache@@Base+0x88>
   20e10:	mvn.w	r8, #1
   20e14:	mov	r0, r6
   20e16:	bl	1b302 <btrfs_free_path@@Base>
   20e1a:	cmp.w	r8, #0
   20e1e:	beq.n	20e60 <btrfs_read_fs_root_no_cache@@Base+0xd4>
   20e20:	mov	r0, r4
   20e22:	mov	r4, r8
   20e24:	blx	87cc <free@plt+0x4>
   20e28:	b.n	20dd6 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   20e2a:	ldr	r0, [r6, #0]
   20e2c:	movs	r2, #25
   20e2e:	ldr	r3, [r6, #32]
   20e30:	add.w	r1, r4, #8
   20e34:	mla	r3, r2, r3, r0
   20e38:	ldr.w	r2, [r3, #214]	; 0xd6
   20e3c:	movw	r3, #439	; 0x1b7
   20e40:	adds	r2, #101	; 0x65
   20e42:	bl	1a79e <read_extent_buffer@@Base>
   20e46:	addw	r3, r4, #447	; 0x1bf
   20e4a:	add.w	r2, r5, #16
   20e4e:	ldr.w	r1, [r5], #4
   20e52:	cmp	r5, r2
   20e54:	str.w	r1, [r3], #4
   20e58:	bne.n	20e4e <btrfs_read_fs_root_no_cache@@Base+0xc2>
   20e5a:	ldrb	r2, [r5, #0]
   20e5c:	strb	r2, [r3, #0]
   20e5e:	b.n	20e14 <btrfs_read_fs_root_no_cache@@Base+0x88>
   20e60:	ldrd	r2, r3, [r4, #168]	; 0xa8
   20e64:	mov	r0, r7
   20e66:	strd	r2, r3, [sp]
   20e6a:	ldrd	r2, r3, [r4, #184]	; 0xb8
   20e6e:	bl	20b0c <read_tree_block@@Base>
   20e72:	str	r0, [r4, #0]
   20e74:	bl	1f298 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   20e78:	cbnz	r0, 20e86 <btrfs_read_fs_root_no_cache@@Base+0xfa>
   20e7a:	mov	r0, r4
   20e7c:	mvn.w	r4, #4
   20e80:	blx	87cc <free@plt+0x4>
   20e84:	b.n	20dd6 <btrfs_read_fs_root_no_cache@@Base+0x4a>
   20e86:	movs	r3, #1
   20e88:	str.w	r3, [r4, #488]	; 0x1e8
   20e8c:	b.n	20dd6 <btrfs_read_fs_root_no_cache@@Base+0x4a>

00020e8e <btrfs_read_fs_root@@Base>:
   20e8e:	ldr	r2, [pc, #320]	; (20fd0 <btrfs_read_fs_root@@Base+0x142>)
   20e90:	ldr	r3, [pc, #320]	; (20fd4 <btrfs_read_fs_root@@Base+0x146>)
   20e92:	add	r2, pc
   20e94:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20e98:	sub	sp, #28
   20e9a:	ldr	r3, [r2, r3]
   20e9c:	mov	r5, r0
   20e9e:	ldr	r2, [r1, #0]
   20ea0:	mov	r9, r1
   20ea2:	ldr	r3, [r3, #0]
   20ea4:	str	r3, [sp, #20]
   20ea6:	mov.w	r3, #0
   20eaa:	ldr	r3, [r1, #4]
   20eac:	ldr.w	r8, [pc, #296]	; 20fd8 <btrfs_read_fs_root@@Base+0x14a>
   20eb0:	cmp	r3, #0
   20eb2:	it	eq
   20eb4:	cmpeq	r2, #1
   20eb6:	add	r8, pc
   20eb8:	strd	r2, r3, [sp, #8]
   20ebc:	bne.n	20ed4 <btrfs_read_fs_root@@Base+0x46>
   20ebe:	ldr	r4, [r0, #28]
   20ec0:	ldr	r2, [pc, #280]	; (20fdc <btrfs_read_fs_root@@Base+0x14e>)
   20ec2:	ldr	r3, [pc, #272]	; (20fd4 <btrfs_read_fs_root@@Base+0x146>)
   20ec4:	add	r2, pc
   20ec6:	ldr	r3, [r2, r3]
   20ec8:	ldr	r2, [r3, #0]
   20eca:	ldr	r3, [sp, #20]
   20ecc:	eors	r2, r3
   20ece:	beq.n	20fc6 <btrfs_read_fs_root@@Base+0x138>
   20ed0:	blx	88e4 <__stack_chk_fail@plt>
   20ed4:	cmp	r3, #0
   20ed6:	it	eq
   20ed8:	cmpeq	r2, #2
   20eda:	bne.n	20ee0 <btrfs_read_fs_root@@Base+0x52>
   20edc:	ldr	r4, [r0, #24]
   20ede:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20ee0:	cmp	r3, #0
   20ee2:	it	eq
   20ee4:	cmpeq	r2, #3
   20ee6:	bne.n	20eec <btrfs_read_fs_root@@Base+0x5e>
   20ee8:	ldr	r4, [r0, #32]
   20eea:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20eec:	cmp	r3, #0
   20eee:	it	eq
   20ef0:	cmpeq	r2, #4
   20ef2:	bne.n	20ef8 <btrfs_read_fs_root@@Base+0x6a>
   20ef4:	ldr	r4, [r0, #36]	; 0x24
   20ef6:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20ef8:	cmp	r3, #0
   20efa:	it	eq
   20efc:	cmpeq	r2, #7
   20efe:	bne.n	20f04 <btrfs_read_fs_root@@Base+0x76>
   20f00:	ldr	r4, [r0, #40]	; 0x28
   20f02:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20f04:	cmp	r3, #0
   20f06:	it	eq
   20f08:	cmpeq	r2, #9
   20f0a:	bne.n	20f18 <btrfs_read_fs_root@@Base+0x8a>
   20f0c:	ldr	r4, [r0, #52]	; 0x34
   20f0e:	cmp	r4, #0
   20f10:	it	eq
   20f12:	mvneq.w	r4, #1
   20f16:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20f18:	cmp	r3, #0
   20f1a:	it	eq
   20f1c:	cmpeq	r2, #8
   20f1e:	bne.n	20f2c <btrfs_read_fs_root@@Base+0x9e>
   20f20:	ldrb.w	r3, [r0, #364]	; 0x16c
   20f24:	lsls	r3, r3, #27
   20f26:	bpl.n	20fc0 <btrfs_read_fs_root@@Base+0x132>
   20f28:	ldr	r4, [r0, #44]	; 0x2c
   20f2a:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20f2c:	cmp	r3, #0
   20f2e:	it	eq
   20f30:	cmpeq	r2, #10
   20f32:	bne.n	20f38 <btrfs_read_fs_root@@Base+0xaa>
   20f34:	ldr	r4, [r0, #48]	; 0x30
   20f36:	b.n	20f0e <btrfs_read_fs_root@@Base+0x80>
   20f38:	mov.w	r1, #4294967295	; 0xffffffff
   20f3c:	cmp	r3, r1
   20f3e:	mvn.w	r0, #7
   20f42:	it	eq
   20f44:	cmpeq	r2, r0
   20f46:	beq.n	20f86 <btrfs_read_fs_root@@Base+0xf8>
   20f48:	ldr.w	r3, [r9, #9]
   20f4c:	ldr.w	r2, [r9, #13]
   20f50:	ands	r3, r2
   20f52:	adds	r3, #1
   20f54:	it	ne
   20f56:	movne	r3, #1
   20f58:	ldr	r6, [pc, #132]	; (20fe0 <btrfs_read_fs_root@@Base+0x152>)
   20f5a:	movw	r2, #735	; 0x2df
   20f5e:	ldr	r0, [pc, #132]	; (20fe4 <btrfs_read_fs_root@@Base+0x156>)
   20f60:	add.w	r7, r5, #56	; 0x38
   20f64:	add	r6, pc
   20f66:	adds	r6, #70	; 0x46
   20f68:	add	r0, pc
   20f6a:	mov	r1, r6
   20f6c:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   20f70:	ldr	r2, [pc, #116]	; (20fe8 <btrfs_read_fs_root@@Base+0x15a>)
   20f72:	add	r1, sp, #8
   20f74:	movs	r3, #0
   20f76:	add	r2, pc
   20f78:	mov	r0, r7
   20f7a:	bl	1ad44 <rb_search@@Base>
   20f7e:	cbz	r0, 20f8a <btrfs_read_fs_root@@Base+0xfc>
   20f80:	sub.w	r4, r0, #528	; 0x210
   20f84:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20f86:	movs	r3, #1
   20f88:	b.n	20f58 <btrfs_read_fs_root@@Base+0xca>
   20f8a:	mov	r1, r9
   20f8c:	mov	r0, r5
   20f8e:	bl	20d8c <btrfs_read_fs_root_no_cache@@Base>
   20f92:	cmn.w	r0, #4096	; 0x1000
   20f96:	mov	r4, r0
   20f98:	bhi.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20f9a:	ldr	r3, [pc, #80]	; (20fec <btrfs_read_fs_root@@Base+0x15e>)
   20f9c:	add.w	r1, r0, #528	; 0x210
   20fa0:	mov	r0, r7
   20fa2:	ldr.w	r3, [r8, r3]
   20fa6:	mov	r2, r3
   20fa8:	str	r3, [sp, #4]
   20faa:	bl	1acfc <rb_insert@@Base>
   20fae:	movw	r2, #749	; 0x2ed
   20fb2:	mov	r1, r6
   20fb4:	mov	r3, r0
   20fb6:	ldr	r0, [pc, #56]	; (20ff0 <btrfs_read_fs_root@@Base+0x162>)
   20fb8:	add	r0, pc
   20fba:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   20fbe:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20fc0:	mvn.w	r4, #1
   20fc4:	b.n	20ec0 <btrfs_read_fs_root@@Base+0x32>
   20fc6:	mov	r0, r4
   20fc8:	add	sp, #28
   20fca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20fce:	nop
   20fd0:	ldrb	r6, [r3, #26]
   20fd2:	movs	r4, r0
   20fd4:	lsls	r4, r7, #9
   20fd6:	movs	r0, r0
   20fd8:	ldrb	r2, [r7, #25]
   20fda:	movs	r4, r0
   20fdc:	ldrb	r4, [r5, #25]
   20fde:	movs	r4, r0
   20fe0:	lsrs	r5, r7, #15
   20fe2:	movs	r2, r0
   20fe4:	lsrs	r7, r6, #1
   20fe6:	movs	r2, r0
   20fe8:	b.n	2132a <btrfs_setup_chunk_tree_and_device_map@@Base+0x2e>
   20fea:	vmlal.u<illegal width 64>	q8, d31, d4[0]
   20fee:	movs	r0, r0
   20ff0:	bhi.n	20f7e <btrfs_read_fs_root@@Base+0xf0>
   20ff2:	movs	r1, r0

00020ff4 <btrfs_setup_all_roots@@Base>:
   20ff4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ff8:	mov	r6, r2
   20ffa:	ldr	r2, [pc, #716]	; (212c8 <btrfs_setup_all_roots@@Base+0x2d4>)
   20ffc:	mov	r7, r3
   20ffe:	ldr	r3, [pc, #716]	; (212cc <btrfs_setup_all_roots@@Base+0x2d8>)
   21000:	sub	sp, #60	; 0x3c
   21002:	add	r2, pc
   21004:	ldr.w	r9, [r0, #28]
   21008:	ldr.w	r5, [r0, #308]	; 0x134
   2100c:	mov	r1, r0
   2100e:	ldr	r3, [r2, r3]
   21010:	mov	r4, r0
   21012:	mov	r0, r9
   21014:	movs	r2, #1
   21016:	ldr	r3, [r3, #0]
   21018:	str	r3, [sp, #52]	; 0x34
   2101a:	mov.w	r3, #0
   2101e:	movs	r3, #0
   21020:	ldr.w	sl, [sp, #96]	; 0x60
   21024:	bl	1fa18 <btrfs_setup_root@@Base>
   21028:	ldr	r3, [r5, #76]	; 0x4c
   2102a:	orrs.w	r2, r6, r7
   2102e:	ldr.w	r8, [pc, #672]	; 212d0 <btrfs_setup_all_roots@@Base+0x2dc>
   21032:	ldr.w	fp, [r5, #72]	; 0x48
   21036:	add	r8, pc
   21038:	str	r3, [sp, #28]
   2103a:	and.w	r3, sl, #4
   2103e:	bne.n	21070 <btrfs_setup_all_roots@@Base+0x7c>
   21040:	cbnz	r3, 21074 <btrfs_setup_all_roots@@Base+0x80>
   21042:	ldr	r6, [r5, #80]	; 0x50
   21044:	ldr	r7, [r5, #84]	; 0x54
   21046:	ldr	r3, [sp, #28]
   21048:	mov	r2, r6
   2104a:	mov	r0, r4
   2104c:	str.w	fp, [sp]
   21050:	str	r3, [sp, #4]
   21052:	mov	r3, r7
   21054:	bl	20b0c <read_tree_block@@Base>
   21058:	str.w	r0, [r9]
   2105c:	bl	1f298 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   21060:	cbnz	r0, 210c4 <btrfs_setup_all_roots@@Base+0xd0>
   21062:	ldr	r3, [pc, #624]	; (212d4 <btrfs_setup_all_roots@@Base+0x2e0>)
   21064:	ldr	r0, [pc, #624]	; (212d8 <btrfs_setup_all_roots@@Base+0x2e4>)
   21066:	ldr.w	r3, [r8, r3]
   2106a:	add	r0, pc
   2106c:	ldr	r1, [r3, #0]
   2106e:	b.n	2108a <btrfs_setup_all_roots@@Base+0x96>
   21070:	cmp	r3, #0
   21072:	beq.n	21046 <btrfs_setup_all_roots@@Base+0x52>
   21074:	mov	r0, r5
   21076:	bl	1f142 <btrfs_fs_roots_compare_roots@@Base+0x4>
   2107a:	cmp	r0, #3
   2107c:	ble.n	210a8 <btrfs_setup_all_roots@@Base+0xb4>
   2107e:	ldr	r3, [pc, #596]	; (212d4 <btrfs_setup_all_roots@@Base+0x2e0>)
   21080:	ldr	r0, [pc, #600]	; (212dc <btrfs_setup_all_roots@@Base+0x2e8>)
   21082:	ldr.w	r3, [r8, r3]
   21086:	add	r0, pc
   21088:	ldr	r1, [r3, #0]
   2108a:	blx	8de4 <fputs@plt+0x4>
   2108e:	mvn.w	r6, #4
   21092:	ldr	r2, [pc, #588]	; (212e0 <btrfs_setup_all_roots@@Base+0x2ec>)
   21094:	ldr	r3, [pc, #564]	; (212cc <btrfs_setup_all_roots@@Base+0x2d8>)
   21096:	add	r2, pc
   21098:	ldr	r3, [r2, r3]
   2109a:	ldr	r2, [r3, #0]
   2109c:	ldr	r3, [sp, #52]	; 0x34
   2109e:	eors	r2, r3
   210a0:	beq.w	212c0 <btrfs_setup_all_roots@@Base+0x2cc>
   210a4:	blx	88e4 <__stack_chk_fail@plt>
   210a8:	ldr.w	r3, [r4, #308]	; 0x134
   210ac:	movs	r2, #168	; 0xa8
   210ae:	addw	r3, r3, #2859	; 0xb2b
   210b2:	mla	r0, r2, r0, r3
   210b6:	ldr	r3, [r0, #12]
   210b8:	ldr.w	fp, [r0, #8]
   210bc:	ldr	r6, [r0, #0]
   210be:	ldr	r7, [r0, #4]
   210c0:	str	r3, [sp, #28]
   210c2:	b.n	21046 <btrfs_setup_all_roots@@Base+0x52>
   210c4:	ldr	r3, [pc, #540]	; (212e4 <btrfs_setup_all_roots@@Base+0x2f0>)
   210c6:	movs	r2, #2
   210c8:	mov	r1, sl
   210ca:	mov	r0, r4
   210cc:	add	r3, pc
   210ce:	str	r3, [sp, #8]
   210d0:	movs	r3, #0
   210d2:	strd	r2, r3, [sp]
   210d6:	ldr	r2, [r4, #24]
   210d8:	bl	20d2a <read_tree_block@@Base+0x21e>
   210dc:	mov	r6, r0
   210de:	cmp	r0, #0
   210e0:	bne.n	21092 <btrfs_setup_all_roots@@Base+0x9e>
   210e2:	ldr	r3, [r4, #24]
   210e4:	movs	r7, #1
   210e6:	movs	r2, #4
   210e8:	mov	r1, r4
   210ea:	mov	r0, r9
   210ec:	str.w	r7, [r3, #492]	; 0x1ec
   210f0:	ldr	r3, [r4, #36]	; 0x24
   210f2:	str	r3, [sp, #0]
   210f4:	movs	r3, #0
   210f6:	bl	20ccc <read_tree_block@@Base+0x1c0>
   210fa:	cbz	r0, 2110a <btrfs_setup_all_roots@@Base+0x116>
   210fc:	ldr	r3, [pc, #468]	; (212d4 <btrfs_setup_all_roots@@Base+0x2e0>)
   210fe:	ldr	r0, [pc, #488]	; (212e8 <btrfs_setup_all_roots@@Base+0x2f4>)
   21100:	ldr.w	r3, [r8, r3]
   21104:	add	r0, pc
   21106:	ldr	r1, [r3, #0]
   21108:	b.n	2108a <btrfs_setup_all_roots@@Base+0x96>
   2110a:	ldr	r3, [r4, #36]	; 0x24
   2110c:	movs	r2, #7
   2110e:	mov	r1, sl
   21110:	mov	r0, r4
   21112:	str.w	r7, [r3, #492]	; 0x1ec
   21116:	ldr	r3, [pc, #468]	; (212ec <btrfs_setup_all_roots@@Base+0x2f8>)
   21118:	add	r3, pc
   2111a:	str	r3, [sp, #8]
   2111c:	movs	r3, #0
   2111e:	strd	r2, r3, [sp]
   21122:	ldr	r2, [r4, #40]	; 0x28
   21124:	bl	20d2a <read_tree_block@@Base+0x21e>
   21128:	mov	r6, r0
   2112a:	cmp	r0, #0
   2112c:	bne.n	21092 <btrfs_setup_all_roots@@Base+0x9e>
   2112e:	ldr	r3, [r4, #40]	; 0x28
   21130:	movs	r2, #9
   21132:	mov	r1, r4
   21134:	mov	r0, r9
   21136:	str.w	r7, [r3, #492]	; 0x1ec
   2113a:	ldr	r3, [r4, #52]	; 0x34
   2113c:	str	r3, [sp, #0]
   2113e:	movs	r3, #0
   21140:	bl	20ccc <read_tree_block@@Base+0x1c0>
   21144:	cbz	r0, 2119c <btrfs_setup_all_roots@@Base+0x1a8>
   21146:	ldr	r0, [r4, #52]	; 0x34
   21148:	blx	87cc <free@plt+0x4>
   2114c:	str	r6, [r4, #52]	; 0x34
   2114e:	ldr	r3, [r4, #44]	; 0x2c
   21150:	movs	r2, #8
   21152:	mov	r1, r4
   21154:	mov	r0, r9
   21156:	str	r3, [sp, #0]
   21158:	movs	r3, #0
   2115a:	bl	20ccc <read_tree_block@@Base+0x1c0>
   2115e:	cbz	r0, 211a4 <btrfs_setup_all_roots@@Base+0x1b0>
   21160:	ldr	r0, [r4, #44]	; 0x2c
   21162:	blx	87cc <free@plt+0x4>
   21166:	movs	r3, #0
   21168:	str	r3, [r4, #44]	; 0x2c
   2116a:	ldr.w	r3, [r4, #308]	; 0x134
   2116e:	ldr.w	r1, [r3, #180]	; 0xb4
   21172:	movs	r3, #0
   21174:	and.w	r2, r1, #1
   21178:	orrs	r3, r2
   2117a:	beq.n	211ba <btrfs_setup_all_roots@@Base+0x1c6>
   2117c:	ldr	r3, [r4, #48]	; 0x30
   2117e:	movs	r2, #10
   21180:	mov	r1, r4
   21182:	mov	r0, r9
   21184:	str	r3, [sp, #0]
   21186:	movs	r3, #0
   21188:	bl	20ccc <read_tree_block@@Base+0x1c0>
   2118c:	cbz	r0, 211b2 <btrfs_setup_all_roots@@Base+0x1be>
   2118e:	ldr	r3, [pc, #324]	; (212d4 <btrfs_setup_all_roots@@Base+0x2e0>)
   21190:	ldr	r0, [pc, #348]	; (212f0 <btrfs_setup_all_roots@@Base+0x2fc>)
   21192:	ldr.w	r3, [r8, r3]
   21196:	add	r0, pc
   21198:	ldr	r1, [r3, #0]
   2119a:	b.n	2108a <btrfs_setup_all_roots@@Base+0x96>
   2119c:	ldr	r3, [r4, #52]	; 0x34
   2119e:	str.w	r7, [r3, #492]	; 0x1ec
   211a2:	b.n	2114e <btrfs_setup_all_roots@@Base+0x15a>
   211a4:	ldrb.w	r3, [r4, #364]	; 0x16c
   211a8:	orr.w	r3, r3, #16
   211ac:	strb.w	r3, [r4, #364]	; 0x16c
   211b0:	b.n	2116a <btrfs_setup_all_roots@@Base+0x176>
   211b2:	ldr	r3, [r4, #48]	; 0x30
   211b4:	movs	r2, #1
   211b6:	str.w	r2, [r3, #492]	; 0x1ec
   211ba:	ldr	r3, [r5, #96]	; 0x60
   211bc:	mov.w	r0, #544	; 0x220
   211c0:	str	r3, [sp, #16]
   211c2:	ldr	r3, [r5, #100]	; 0x64
   211c4:	str	r3, [sp, #20]
   211c6:	blx	8a94 <malloc@plt+0x4>
   211ca:	mov	r7, r0
   211cc:	cmp	r0, #0
   211ce:	beq.n	21262 <btrfs_setup_all_roots@@Base+0x26e>
   211d0:	ldrd	r2, r3, [sp, #16]
   211d4:	orrs	r3, r2
   211d6:	bne.n	2121e <btrfs_setup_all_roots@@Base+0x22a>
   211d8:	blx	87cc <free@plt+0x4>
   211dc:	ldr	r3, [sp, #28]
   211de:	str.w	fp, [r4, #232]	; 0xe8
   211e2:	strd	r3, fp, [r4, #236]	; 0xec
   211e6:	str.w	r3, [r4, #244]	; 0xf4
   211ea:	ldr	r3, [r4, #24]
   211ec:	ldr	r0, [r3, #0]
   211ee:	bl	1f298 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   211f2:	cmp	r0, #0
   211f4:	beq.n	2127a <btrfs_setup_all_roots@@Base+0x286>
   211f6:	tst.w	sl, #32
   211fa:	bne.n	2127a <btrfs_setup_all_roots@@Base+0x286>
   211fc:	mov	r0, r4
   211fe:	bl	24f18 <btrfs_read_block_groups@@Base>
   21202:	subs	r5, r0, #0
   21204:	bge.n	2127a <btrfs_setup_all_roots@@Base+0x286>
   21206:	adds	r3, r5, #2
   21208:	beq.n	2127a <btrfs_setup_all_roots@@Base+0x286>
   2120a:	blx	8bac <__errno_location@plt>
   2120e:	negs	r3, r5
   21210:	mov	r6, r5
   21212:	str	r3, [r0, #0]
   21214:	ldr	r0, [pc, #220]	; (212f4 <btrfs_setup_all_roots@@Base+0x300>)
   21216:	add	r0, pc
   21218:	bl	1a900 <__btrfs_error@@Base>
   2121c:	b.n	21092 <btrfs_setup_all_roots@@Base+0x9e>
   2121e:	mov	r1, r4
   21220:	mvn.w	r2, #5
   21224:	mov.w	r3, #4294967295	; 0xffffffff
   21228:	bl	1fa18 <btrfs_setup_root@@Base>
   2122c:	ldr	r3, [r5, #72]	; 0x48
   2122e:	ldr	r2, [r5, #76]	; 0x4c
   21230:	mov	r0, r4
   21232:	adds	r3, #1
   21234:	adc.w	r2, r2, #0
   21238:	strd	r3, r2, [sp]
   2123c:	ldrd	r2, r3, [sp, #16]
   21240:	bl	20b0c <read_tree_block@@Base>
   21244:	str	r7, [r4, #60]	; 0x3c
   21246:	str	r0, [r7, #0]
   21248:	mov	r3, r0
   2124a:	bl	1f298 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   2124e:	mov	r5, r0
   21250:	cmp	r0, #0
   21252:	bne.n	211dc <btrfs_setup_all_roots@@Base+0x1e8>
   21254:	mov	r0, r3
   21256:	bl	1a0a4 <free_extent_buffer@@Base>
   2125a:	mov	r0, r7
   2125c:	blx	87cc <free@plt+0x4>
   21260:	str	r5, [r4, #60]	; 0x3c
   21262:	ldr	r3, [pc, #112]	; (212d4 <btrfs_setup_all_roots@@Base+0x2e0>)
   21264:	ldr	r0, [pc, #144]	; (212f8 <btrfs_setup_all_roots@@Base+0x304>)
   21266:	ldr.w	r3, [r8, r3]
   2126a:	add	r0, pc
   2126c:	ldr	r1, [r3, #0]
   2126e:	blx	8de4 <fputs@plt+0x4>
   21272:	tst.w	sl, #2
   21276:	bne.n	211dc <btrfs_setup_all_roots@@Base+0x1e8>
   21278:	b.n	2108e <btrfs_setup_all_roots@@Base+0x9a>
   2127a:	add	r1, sp, #32
   2127c:	mov	r0, r4
   2127e:	movs	r2, #5
   21280:	movs	r3, #0
   21282:	strd	r2, r3, [sp, #32]
   21286:	mov.w	r2, #4294967295	; 0xffffffff
   2128a:	movs	r3, #132	; 0x84
   2128c:	strb.w	r2, [sp, #41]	; 0x29
   21290:	strb.w	r3, [sp, #40]	; 0x28
   21294:	strb.w	r2, [sp, #42]	; 0x2a
   21298:	strb.w	r2, [sp, #43]	; 0x2b
   2129c:	strb.w	r2, [sp, #44]	; 0x2c
   212a0:	strb.w	r2, [sp, #45]	; 0x2d
   212a4:	strb.w	r2, [sp, #46]	; 0x2e
   212a8:	strb.w	r2, [sp, #47]	; 0x2f
   212ac:	strb.w	r2, [sp, #48]	; 0x30
   212b0:	bl	20e8e <btrfs_read_fs_root@@Base>
   212b4:	cmn.w	r0, #4096	; 0x1000
   212b8:	str	r0, [r4, #20]
   212ba:	bls.w	21092 <btrfs_setup_all_roots@@Base+0x9e>
   212be:	b.n	2108e <btrfs_setup_all_roots@@Base+0x9a>
   212c0:	mov	r0, r6
   212c2:	add	sp, #60	; 0x3c
   212c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   212c8:	ldrb	r6, [r5, #20]
   212ca:	movs	r4, r0
   212cc:	lsls	r4, r7, #9
   212ce:	movs	r0, r0
   212d0:	ldrb	r2, [r7, #19]
   212d2:	movs	r4, r0
   212d4:	lsls	r4, r1, #10
   212d6:	movs	r0, r0
   212d8:	lsls	r0, r4, #31
   212da:	movs	r2, r0
   212dc:	lsls	r0, r5, #30
   212de:	movs	r2, r0
   212e0:	ldrb	r2, [r3, #18]
   212e2:	movs	r4, r0
   212e4:	movs	r2, #181	; 0xb5
   212e6:	movs	r2, r0
   212e8:	lsls	r7, r3, #29
   212ea:	movs	r2, r0
   212ec:	lsls	r7, r4, #29
   212ee:	movs	r2, r0
   212f0:	lsls	r6, r5, #27
   212f2:	movs	r2, r0
   212f4:	lsls	r3, r5, #26
   212f6:	movs	r2, r0
   212f8:	lsls	r1, r7, #24
   212fa:	movs	r2, r0

000212fc <btrfs_setup_chunk_tree_and_device_map@@Base>:
   212fc:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21300:	mov	r1, r0
   21302:	ldr.w	r8, [r0, #308]	; 0x134
   21306:	mov	r4, r0
   21308:	mov	r6, r2
   2130a:	ldr	r0, [r0, #32]
   2130c:	movs	r2, #3
   2130e:	mov	r7, r3
   21310:	movs	r3, #0
   21312:	ldr.w	r9, [pc, #212]	; 213e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0xec>
   21316:	bl	1fa18 <btrfs_setup_root@@Base>
   2131a:	mov	r0, r4
   2131c:	bl	2d7f0 <btrfs_read_sys_array@@Base>
   21320:	add	r9, pc
   21322:	mov	r5, r0
   21324:	cmp	r0, #0
   21326:	bne.n	213a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   21328:	orrs.w	r3, r6, r7
   2132c:	ldr.w	fp, [r8, #164]	; 0xa4
   21330:	ldr.w	sl, [r8, #168]	; 0xa8
   21334:	beq.n	21362 <btrfs_setup_chunk_tree_and_device_map@@Base+0x66>
   21336:	ldr.w	ip, [r4, #388]	; 0x184
   2133a:	movs	r0, #0
   2133c:	adds.w	r1, ip, #4294967295	; 0xffffffff
   21340:	adc.w	r0, r0, #4294967295	; 0xffffffff
   21344:	and.w	r2, r1, r6
   21348:	and.w	r3, r0, r7
   2134c:	orrs.w	r1, r2, r3
   21350:	beq.n	2136e <btrfs_setup_chunk_tree_and_device_map@@Base+0x72>
   21352:	ldr	r0, [pc, #152]	; (213ec <btrfs_setup_chunk_tree_and_device_map@@Base+0xf0>)
   21354:	mov	r2, r6
   21356:	mov	r3, r7
   21358:	str.w	ip, [sp]
   2135c:	add	r0, pc
   2135e:	bl	1a884 <__btrfs_warning@@Base>
   21362:	ldr.w	r6, [r8, #88]	; 0x58
   21366:	mov	r2, fp
   21368:	ldr.w	r7, [r8, #92]	; 0x5c
   2136c:	mov	r3, sl
   2136e:	strd	r2, r3, [sp]
   21372:	mov	r0, r4
   21374:	mov	r2, r6
   21376:	mov	r3, r7
   21378:	ldr.w	sl, [r4, #32]
   2137c:	bl	20b0c <read_tree_block@@Base>
   21380:	str.w	r0, [sl]
   21384:	ldr	r3, [r4, #32]
   21386:	ldr	r0, [r3, #0]
   21388:	bl	1f298 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   2138c:	mov	r6, r0
   2138e:	cbnz	r0, 213ba <btrfs_setup_chunk_tree_and_device_map@@Base+0xbe>
   21390:	ldrsb.w	r3, [r4, #364]	; 0x16c
   21394:	cmp	r3, #0
   21396:	bge.n	213ac <btrfs_setup_chunk_tree_and_device_map@@Base+0xb0>
   21398:	ldr	r0, [pc, #84]	; (213f0 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf4>)
   2139a:	mov	r5, r6
   2139c:	add	r0, pc
   2139e:	bl	1a884 <__btrfs_warning@@Base>
   213a2:	str	r6, [r4, #32]
   213a4:	mov	r0, r5
   213a6:	add	sp, #12
   213a8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   213ac:	ldr	r0, [pc, #68]	; (213f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf8>)
   213ae:	mvn.w	r5, #4
   213b2:	add	r0, pc
   213b4:	bl	1a900 <__btrfs_error@@Base>
   213b8:	b.n	213a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   213ba:	ldr.w	r1, [r8, #60]	; 0x3c
   213be:	movs	r2, #0
   213c0:	and.w	r3, r1, #2
   213c4:	orrs	r3, r2
   213c6:	bne.n	213a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   213c8:	mov	r0, r4
   213ca:	bl	2d998 <btrfs_read_chunk_tree@@Base>
   213ce:	mov	r5, r0
   213d0:	cmp	r0, #0
   213d2:	beq.n	213a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   213d4:	ldr	r3, [pc, #32]	; (213f8 <btrfs_setup_chunk_tree_and_device_map@@Base+0xfc>)
   213d6:	ldr	r0, [pc, #36]	; (213fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x100>)
   213d8:	ldr.w	r3, [r9, r3]
   213dc:	add	r0, pc
   213de:	ldr	r1, [r3, #0]
   213e0:	blx	8de4 <fputs@plt+0x4>
   213e4:	b.n	213a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   213e6:	nop
   213e8:	ldrb	r0, [r2, #8]
   213ea:	movs	r4, r0
   213ec:	lsls	r5, r0, #22
   213ee:	movs	r2, r0
   213f0:	lsls	r2, r7, #21
   213f2:	movs	r2, r0
   213f4:	lsls	r4, r1, #22
   213f6:	movs	r2, r0
   213f8:	lsls	r4, r1, #10
   213fa:	movs	r0, r0
   213fc:	lsls	r1, r7, #21
   213fe:	movs	r2, r0
   21400:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21404:	mov	r8, r2
   21406:	ldr	r2, [pc, #624]	; (21678 <btrfs_setup_chunk_tree_and_device_map@@Base+0x37c>)
   21408:	mov	r9, r3
   2140a:	ldr	r3, [pc, #624]	; (2167c <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   2140c:	sub	sp, #36	; 0x24
   2140e:	add	r2, pc
   21410:	ldr	r7, [pc, #620]	; (21680 <btrfs_setup_chunk_tree_and_device_map@@Base+0x384>)
   21412:	ldr	r5, [sp, #88]	; 0x58
   21414:	mov	sl, r0
   21416:	ldr	r3, [r2, r3]
   21418:	movs	r2, #0
   2141a:	add	r7, pc
   2141c:	mov	r6, r1
   2141e:	ldr	r3, [r3, #0]
   21420:	str	r3, [sp, #28]
   21422:	mov.w	r3, #0
   21426:	movs	r3, #0
   21428:	str	r3, [sp, #24]
   2142a:	orrs.w	r3, r8, r9
   2142e:	mov.w	r3, #4
   21432:	str	r3, [sp, #8]
   21434:	mov.w	r3, #0
   21438:	strd	r2, r3, [sp]
   2143c:	itt	eq
   2143e:	moveq.w	r8, #65536	; 0x10000
   21442:	moveq.w	r9, #0
   21446:	blx	876c <posix_fadvise64@plt>
   2144a:	cbz	r0, 2145a <btrfs_setup_chunk_tree_and_device_map@@Base+0x15e>
   2144c:	ldr	r3, [pc, #564]	; (21684 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   2144e:	ldr	r0, [pc, #568]	; (21688 <btrfs_setup_chunk_tree_and_device_map@@Base+0x38c>)
   21450:	ldr	r3, [r7, r3]
   21452:	add	r0, pc
   21454:	ldr	r1, [r3, #0]
   21456:	blx	8de4 <fputs@plt+0x4>
   2145a:	and.w	fp, r5, #1
   2145e:	mov	r2, r8
   21460:	mov	r3, r9
   21462:	mov	r0, fp
   21464:	bl	1fae6 <btrfs_new_fs_info@@Base>
   21468:	mov	r4, r0
   2146a:	cbnz	r0, 21490 <btrfs_setup_chunk_tree_and_device_map@@Base+0x194>
   2146c:	ldr	r3, [pc, #532]	; (21684 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   2146e:	ldr	r0, [pc, #540]	; (2168c <btrfs_setup_chunk_tree_and_device_map@@Base+0x390>)
   21470:	ldr	r3, [r7, r3]
   21472:	add	r0, pc
   21474:	ldr	r1, [r3, #0]
   21476:	blx	8de4 <fputs@plt+0x4>
   2147a:	ldr	r2, [pc, #532]	; (21690 <btrfs_setup_chunk_tree_and_device_map@@Base+0x394>)
   2147c:	ldr	r3, [pc, #508]	; (2167c <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   2147e:	add	r2, pc
   21480:	ldr	r3, [r2, r3]
   21482:	ldr	r2, [r3, #0]
   21484:	ldr	r3, [sp, #28]
   21486:	eors	r2, r3
   21488:	beq.w	21670 <btrfs_setup_chunk_tree_and_device_map@@Base+0x374>
   2148c:	blx	88e4 <__stack_chk_fail@plt>
   21490:	lsls	r3, r5, #27
   21492:	ittt	mi
   21494:	ldrbmi.w	r3, [r0, #364]	; 0x16c
   21498:	orrmi.w	r3, r3, #4
   2149c:	strbmi.w	r3, [r0, #364]	; 0x16c
   214a0:	lsls	r0, r5, #23
   214a2:	ittt	mi
   214a4:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   214a8:	orrmi.w	r3, r3, #32
   214ac:	strbmi.w	r3, [r4, #364]	; 0x16c
   214b0:	ands.w	r2, r5, #1024	; 0x400
   214b4:	ittt	ne
   214b6:	ldrbne.w	r3, [r4, #364]	; 0x16c
   214ba:	orrne.w	r3, r3, #64	; 0x40
   214be:	strbne.w	r3, [r4, #364]	; 0x16c
   214c2:	lsls	r1, r5, #20
   214c4:	ittt	mi
   214c6:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   214ca:	orrmi.w	r3, r3, #128	; 0x80
   214ce:	strbmi.w	r3, [r4, #364]	; 0x16c
   214d2:	movw	r3, #4104	; 0x1008
   214d6:	bics	r3, r5
   214d8:	bne.n	214f2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1f6>
   214da:	ldr	r3, [pc, #424]	; (21684 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   214dc:	ldr	r0, [pc, #436]	; (21694 <btrfs_setup_chunk_tree_and_device_map@@Base+0x398>)
   214de:	ldr	r3, [r7, r3]
   214e0:	add	r0, pc
   214e2:	ldr	r1, [r3, #0]
   214e4:	blx	8de4 <fputs@plt+0x4>
   214e8:	mov	r0, r4
   214ea:	movs	r4, #0
   214ec:	bl	1fa98 <btrfs_free_fs_info@@Base>
   214f0:	b.n	2147a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   214f2:	ands.w	r3, r5, #4096	; 0x1000
   214f6:	it	ne
   214f8:	movne	r3, #2
   214fa:	cbz	r2, 21500 <btrfs_setup_chunk_tree_and_device_map@@Base+0x204>
   214fc:	orr.w	r3, r3, #4
   21500:	and.w	r2, r5, #128	; 0x80
   21504:	mov	r1, r6
   21506:	strd	r3, r2, [sp, #8]
   2150a:	mov	r0, sl
   2150c:	add	r2, sp, #24
   2150e:	strd	r8, r9, [sp]
   21512:	str	r3, [sp, #20]
   21514:	bl	1fda0 <btrfs_scan_fs_devices@@Base>
   21518:	mov	r1, r0
   2151a:	cmp	r0, #0
   2151c:	bne.n	214e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   2151e:	cmp.w	fp, #0
   21522:	ldr	r0, [sp, #24]
   21524:	ldr	r3, [sp, #20]
   21526:	it	ne
   21528:	movne	r1, #2
   2152a:	tst.w	r5, #64	; 0x40
   2152e:	it	ne
   21530:	orrne.w	r1, r1, #128	; 0x80
   21534:	str.w	r0, [r4, #352]	; 0x160
   21538:	str	r3, [sp, #20]
   2153a:	bl	2b4a4 <btrfs_open_devices@@Base>
   2153e:	cmp	r0, #0
   21540:	bne.n	214e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   21542:	tst.w	r5, #8
   21546:	ldr.w	r6, [r4, #308]	; 0x134
   2154a:	ldr	r3, [sp, #20]
   2154c:	beq.n	21578 <btrfs_setup_chunk_tree_and_device_map@@Base+0x27c>
   2154e:	ldr	r0, [sp, #24]
   21550:	movs	r3, #1
   21552:	str	r3, [sp, #0]
   21554:	mov	r2, r8
   21556:	mov	r3, r9
   21558:	mov	r1, r6
   2155a:	ldr	r0, [r0, #64]	; 0x40
   2155c:	bl	20150 <btrfs_read_dev_super@@Base>
   21560:	cbz	r0, 21584 <btrfs_setup_chunk_tree_and_device_map@@Base+0x288>
   21562:	ldr	r3, [pc, #288]	; (21684 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   21564:	ldr	r0, [pc, #304]	; (21698 <btrfs_setup_chunk_tree_and_device_map@@Base+0x39c>)
   21566:	ldr	r3, [r7, r3]
   21568:	add	r0, pc
   2156a:	ldr	r1, [r3, #0]
   2156c:	blx	8de4 <fputs@plt+0x4>
   21570:	ldr	r0, [sp, #24]
   21572:	bl	2b3b4 <btrfs_close_devices@@Base>
   21576:	b.n	214e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   21578:	str	r3, [sp, #0]
   2157a:	mov	r2, r8
   2157c:	mov	r3, r9
   2157e:	mov	r1, r6
   21580:	mov	r0, sl
   21582:	b.n	2155c <btrfs_setup_chunk_tree_and_device_map@@Base+0x260>
   21584:	ldr	r1, [r6, #60]	; 0x3c
   21586:	mov	r2, r0
   21588:	and.w	r3, r1, #8
   2158c:	orrs	r3, r2
   2158e:	beq.n	215a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   21590:	ldrb.w	r3, [r4, #364]	; 0x16c
   21594:	lsls	r2, r3, #25
   21596:	bmi.n	215a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   21598:	ldr	r3, [pc, #232]	; (21684 <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   2159a:	ldr	r0, [pc, #256]	; (2169c <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a0>)
   2159c:	ldr	r3, [r7, r3]
   2159e:	add	r0, pc
   215a0:	ldr	r1, [r3, #0]
   215a2:	b.n	2156c <btrfs_setup_chunk_tree_and_device_map@@Base+0x270>
   215a4:	ldr.w	r8, [sp, #24]
   215a8:	add.w	r0, r6, #32
   215ac:	movs	r2, #16
   215ae:	mov	r1, r8
   215b0:	blx	887c <memcmp@plt+0x4>
   215b4:	cbz	r0, 215c8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2cc>
   215b6:	ldr	r1, [pc, #232]	; (216a0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a4>)
   215b8:	movw	r2, #1251	; 0x4e3
   215bc:	ldr	r0, [pc, #228]	; (216a4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a8>)
   215be:	add	r1, pc
   215c0:	adds	r1, #89	; 0x59
   215c2:	add	r0, pc
   215c4:	bl	1f44c <btrfs_fs_roots_compare_roots@@Base+0x30e>
   215c8:	ldr.w	r7, [r4, #308]	; 0x134
   215cc:	mov	r3, r0
   215ce:	ldr.w	r1, [r7, #188]	; 0xbc
   215d2:	and.w	r2, r1, #1024	; 0x400
   215d6:	orrs	r3, r2
   215d8:	beq.n	215fa <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   215da:	movs	r2, #16
   215dc:	addw	r0, r6, #571	; 0x23b
   215e0:	add.w	r1, r8, r2
   215e4:	blx	887c <memcmp@plt+0x4>
   215e8:	cbz	r0, 215fa <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   215ea:	ldr	r1, [pc, #188]	; (216a8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3ac>)
   215ec:	movw	r2, #1253	; 0x4e5
   215f0:	ldr	r0, [pc, #184]	; (216ac <btrfs_setup_chunk_tree_and_device_map@@Base+0x3b0>)
   215f2:	add	r1, pc
   215f4:	adds	r1, #89	; 0x59
   215f6:	add	r0, pc
   215f8:	b.n	215c4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2c8>
   215fa:	ldr.w	r3, [r6, #144]	; 0x90
   215fe:	mov	r1, r5
   21600:	mov	r0, r7
   21602:	str.w	r3, [r4, #388]	; 0x184
   21606:	ldr.w	r3, [r6, #148]	; 0x94
   2160a:	str.w	r3, [r4, #384]	; 0x180
   2160e:	ldr.w	r3, [r6, #156]	; 0x9c
   21612:	str.w	r3, [r4, #392]	; 0x188
   21616:	bl	1fc3c <btrfs_check_fs_compatibility@@Base>
   2161a:	cmp	r0, #0
   2161c:	bne.n	21570 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   2161e:	ldrd	r2, r3, [sp, #80]	; 0x50
   21622:	mov	r0, r4
   21624:	bl	212fc <btrfs_setup_chunk_tree_and_device_map@@Base>
   21628:	cbz	r0, 21638 <btrfs_setup_chunk_tree_and_device_map@@Base+0x33c>
   2162a:	mov	r0, r4
   2162c:	bl	1fcdc <btrfs_release_all_roots@@Base>
   21630:	mov	r0, r4
   21632:	bl	1fd40 <btrfs_cleanup_all_caches@@Base>
   21636:	b.n	21570 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   21638:	ldr	r0, [r4, #32]
   2163a:	cmp	r0, #0
   2163c:	beq.w	2147a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   21640:	ldr	r0, [r0, #0]
   21642:	movs	r3, #16
   21644:	movs	r2, #64	; 0x40
   21646:	mov	r1, r4
   21648:	bl	1a79e <read_extent_buffer@@Base>
   2164c:	ldrd	r2, r3, [sp, #72]	; 0x48
   21650:	mov	r0, r4
   21652:	str	r5, [sp, #0]
   21654:	bl	20ff4 <btrfs_setup_all_roots@@Base>
   21658:	cmp	r0, #0
   2165a:	beq.w	2147a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   2165e:	lsls	r3, r5, #22
   21660:	bmi.w	2147a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   21664:	ldrsb.w	r3, [r4, #364]	; 0x16c
   21668:	cmp	r3, #0
   2166a:	blt.w	2147a <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   2166e:	b.n	2162a <btrfs_setup_chunk_tree_and_device_map@@Base+0x32e>
   21670:	mov	r0, r4
   21672:	add	sp, #36	; 0x24
   21674:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21678:	ldrb	r2, [r4, #4]
   2167a:	movs	r4, r0
   2167c:	lsls	r4, r7, #9
   2167e:	movs	r0, r0
   21680:	ldrb	r6, [r2, #4]
   21682:	movs	r4, r0
   21684:	lsls	r4, r1, #10
   21686:	movs	r0, r0
   21688:	lsls	r5, r3, #20
   2168a:	movs	r2, r0
   2168c:	lsls	r5, r3, #20
   2168e:	movs	r2, r0
   21690:	ldrb	r2, [r6, #2]
   21692:	movs	r4, r0
   21694:	lsls	r6, r2, #19
   21696:	movs	r2, r0
   21698:	lsls	r7, r1, #18
   2169a:	movs	r2, r0
   2169c:	lsls	r7, r5, #17
   2169e:	movs	r2, r0
   216a0:	lsls	r3, r4, #22
   216a2:	movs	r2, r0
   216a4:	lsls	r6, r6, #17
   216a6:	movs	r2, r0
   216a8:	lsls	r7, r5, #21
   216aa:	movs	r2, r0
   216ac:	lsls	r7, r7, #17
   216ae:	movs	r2, r0

000216b0 <open_ctree_fs_info@@Base>:
   216b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   216b4:	mov	r9, r2
   216b6:	ldr	r2, [pc, #164]	; (2175c <open_ctree_fs_info@@Base+0xac>)
   216b8:	mov	r8, r3
   216ba:	ldr	r3, [pc, #164]	; (21760 <open_ctree_fs_info@@Base+0xb0>)
   216bc:	sub	sp, #140	; 0x8c
   216be:	add	r2, pc
   216c0:	add	r1, sp, #24
   216c2:	ldr	r6, [sp, #184]	; 0xb8
   216c4:	mov	r4, r0
   216c6:	ldr	r3, [r2, r3]
   216c8:	ldr	r3, [r3, #0]
   216ca:	str	r3, [sp, #132]	; 0x84
   216cc:	mov.w	r3, #0
   216d0:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   216d4:	cmp	r0, #0
   216d6:	bge.n	216f8 <open_ctree_fs_info@@Base+0x48>
   216d8:	ldr	r0, [pc, #136]	; (21764 <open_ctree_fs_info@@Base+0xb4>)
   216da:	mov	r1, r4
   216dc:	add	r0, pc
   216de:	bl	1a900 <__btrfs_error@@Base>
   216e2:	movs	r4, #0
   216e4:	ldr	r2, [pc, #128]	; (21768 <open_ctree_fs_info@@Base+0xb8>)
   216e6:	ldr	r3, [pc, #120]	; (21760 <open_ctree_fs_info@@Base+0xb0>)
   216e8:	add	r2, pc
   216ea:	ldr	r3, [r2, r3]
   216ec:	ldr	r2, [r3, #0]
   216ee:	ldr	r3, [sp, #132]	; 0x84
   216f0:	eors	r2, r3
   216f2:	beq.n	21754 <open_ctree_fs_info@@Base+0xa4>
   216f4:	blx	88e4 <__stack_chk_fail@plt>
   216f8:	ldr	r1, [sp, #40]	; 0x28
   216fa:	and.w	r1, r1, #61440	; 0xf000
   216fe:	cmp.w	r1, #32768	; 0x8000
   21702:	beq.n	21712 <open_ctree_fs_info@@Base+0x62>
   21704:	cmp.w	r1, #24576	; 0x6000
   21708:	beq.n	21712 <open_ctree_fs_info@@Base+0x62>
   2170a:	ldr	r0, [pc, #96]	; (2176c <open_ctree_fs_info@@Base+0xbc>)
   2170c:	mov	r1, r4
   2170e:	add	r0, pc
   21710:	b.n	216de <open_ctree_fs_info@@Base+0x2e>
   21712:	tst.w	r6, #1
   21716:	mov	r0, r4
   21718:	ite	ne
   2171a:	movne	r1, #2
   2171c:	moveq	r1, #0
   2171e:	blx	8ba0 <__open64_2@plt>
   21722:	subs	r5, r0, #0
   21724:	bge.n	2172e <open_ctree_fs_info@@Base+0x7e>
   21726:	ldr	r0, [pc, #72]	; (21770 <open_ctree_fs_info@@Base+0xc0>)
   21728:	mov	r1, r4
   2172a:	add	r0, pc
   2172c:	b.n	216de <open_ctree_fs_info@@Base+0x2e>
   2172e:	str	r6, [sp, #16]
   21730:	mov	r1, r4
   21732:	ldrd	r6, r7, [sp, #176]	; 0xb0
   21736:	mov	r2, r9
   21738:	mov	r3, r8
   2173a:	strd	r6, r7, [sp, #8]
   2173e:	ldrd	r6, r7, [sp, #168]	; 0xa8
   21742:	strd	r6, r7, [sp]
   21746:	bl	21400 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   2174a:	mov	r4, r0
   2174c:	mov	r0, r5
   2174e:	blx	8e20 <close@plt>
   21752:	b.n	216e4 <open_ctree_fs_info@@Base+0x34>
   21754:	mov	r0, r4
   21756:	add	sp, #140	; 0x8c
   21758:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2175c:	strb	r2, [r6, #25]
   2175e:	movs	r4, r0
   21760:	lsls	r4, r7, #9
   21762:	movs	r0, r0
   21764:	lsls	r0, r5, #15
   21766:	movs	r2, r0
   21768:	strb	r0, [r1, #25]
   2176a:	movs	r4, r0
   2176c:	lsls	r3, r1, #15
   2176e:	movs	r2, r0
   21770:	lsls	r6, r2, #15
   21772:	movs	r2, r0

00021774 <open_ctree@@Base>:
   21774:	push	{r4, r5, r6, r7, lr}
   21776:	sub	sp, #28
   21778:	ldr	r1, [pc, #64]	; (217bc <open_ctree@@Base+0x48>)
   2177a:	mov	r5, r0
   2177c:	ldr	r4, [sp, #48]	; 0x30
   2177e:	mov	r7, r2
   21780:	ldr	r0, [pc, #60]	; (217c0 <open_ctree@@Base+0x4c>)
   21782:	add	r1, pc
   21784:	mov	r6, r3
   21786:	movw	r2, #1335	; 0x537
   2178a:	and.w	r3, r4, #2048	; 0x800
   2178e:	add	r0, pc
   21790:	adds	r1, #105	; 0x69
   21792:	bl	1f4c4 <btrfs_fs_roots_compare_roots@@Base+0x386>
   21796:	movs	r2, #0
   21798:	movs	r3, #0
   2179a:	mov	r0, r5
   2179c:	strd	r2, r3, [sp, #8]
   217a0:	strd	r2, r3, [sp]
   217a4:	mov	r2, r7
   217a6:	mov	r3, r6
   217a8:	str	r4, [sp, #16]
   217aa:	bl	216b0 <open_ctree_fs_info@@Base>
   217ae:	cbz	r0, 217b8 <open_ctree@@Base+0x44>
   217b0:	lsls	r3, r4, #22
   217b2:	ite	mi
   217b4:	ldrmi	r0, [r0, #32]
   217b6:	ldrpl	r0, [r0, #20]
   217b8:	add	sp, #28
   217ba:	pop	{r4, r5, r6, r7, pc}
   217bc:	lsls	r7, r3, #15
   217be:	movs	r2, r0
   217c0:	lsls	r7, r0, #14
   217c2:	movs	r2, r0

000217c4 <open_ctree_fd@@Base>:
   217c4:	push	{r4, r6, r7, lr}
   217c6:	sub	sp, #24
   217c8:	ldr	r4, [sp, #40]	; 0x28
   217ca:	lsls	r6, r4, #20
   217cc:	bpl.n	217e0 <open_ctree_fd@@Base+0x1c>
   217ce:	ldr	r0, [pc, #48]	; (21800 <open_ctree_fd@@Base+0x3c>)
   217d0:	mov	r2, r4
   217d2:	movs	r3, #0
   217d4:	add	r0, pc
   217d6:	bl	1a900 <__btrfs_error@@Base>
   217da:	movs	r0, #0
   217dc:	add	sp, #24
   217de:	pop	{r4, r6, r7, pc}
   217e0:	movs	r6, #0
   217e2:	movs	r7, #0
   217e4:	str	r4, [sp, #16]
   217e6:	strd	r6, r7, [sp, #8]
   217ea:	strd	r6, r7, [sp]
   217ee:	bl	21400 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   217f2:	cmp	r0, #0
   217f4:	beq.n	217dc <open_ctree_fd@@Base+0x18>
   217f6:	lsls	r3, r4, #22
   217f8:	ite	mi
   217fa:	ldrmi	r0, [r0, #32]
   217fc:	ldrpl	r0, [r0, #20]
   217fe:	b.n	217dc <open_ctree_fd@@Base+0x18>
   21800:	lsls	r4, r5, #13
   21802:	movs	r2, r0

00021804 <btrfs_create_tree@@Base>:
   21804:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21808:	mov	r9, r2
   2180a:	vpush	{d8}
   2180e:	mov	r8, r3
   21810:	ldr	r2, [pc, #428]	; (219c0 <btrfs_create_tree@@Base+0x1bc>)
   21812:	mov	r7, r0
   21814:	ldr	r3, [pc, #428]	; (219c4 <btrfs_create_tree@@Base+0x1c0>)
   21816:	mov	sl, r1
   21818:	add	r2, pc
   2181a:	movs	r0, #1
   2181c:	sub	sp, #60	; 0x3c
   2181e:	ldr	r3, [r2, r3]
   21820:	ldr	r3, [r3, #0]
   21822:	str	r3, [sp, #52]	; 0x34
   21824:	mov.w	r3, #0
   21828:	ldr	r3, [r1, #28]
   2182a:	mov.w	r1, #544	; 0x220
   2182e:	vmov	s16, r3
   21832:	blx	8718 <calloc@plt+0x4>
   21836:	mov	r4, r0
   21838:	cmp	r0, #0
   2183a:	beq.w	219ac <btrfs_create_tree@@Base+0x1a8>
   2183e:	mov	r2, r9
   21840:	mov	r3, r8
   21842:	mov	r1, sl
   21844:	mov.w	fp, #132	; 0x84
   21848:	bl	1fa18 <btrfs_setup_root@@Base>
   2184c:	movs	r6, #0
   2184e:	str.w	r9, [r4, #447]	; 0x1bf
   21852:	movs	r2, #0
   21854:	str.w	r8, [r4, #451]	; 0x1c3
   21858:	movs	r3, #0
   2185a:	strb.w	fp, [r4, #455]	; 0x1c7
   2185e:	mov	r1, r4
   21860:	strd	r2, r3, [r4, #456]	; 0x1c8
   21864:	mov	r0, r7
   21866:	strd	r2, r3, [sp, #24]
   2186a:	strd	r2, r3, [sp, #16]
   2186e:	strd	r6, r6, [sp, #8]
   21872:	ldr.w	r2, [sl, #384]	; 0x180
   21876:	strd	r9, r8, [sp]
   2187a:	bl	25eec <btrfs_alloc_free_block@@Base>
   2187e:	cmn.w	r0, #4096	; 0x1000
   21882:	mov	r5, r0
   21884:	bls.n	218a6 <btrfs_create_tree@@Base+0xa2>
   21886:	mov	r6, r0
   21888:	mov	r0, r4
   2188a:	mov	r4, r6
   2188c:	blx	87cc <free@plt+0x4>
   21890:	ldr	r2, [pc, #308]	; (219c8 <btrfs_create_tree@@Base+0x1c4>)
   21892:	ldr	r3, [pc, #304]	; (219c4 <btrfs_create_tree@@Base+0x1c0>)
   21894:	add	r2, pc
   21896:	ldr	r3, [r2, r3]
   21898:	ldr	r2, [r3, #0]
   2189a:	ldr	r3, [sp, #52]	; 0x34
   2189c:	eors	r2, r3
   2189e:	beq.w	219b2 <btrfs_create_tree@@Base+0x1ae>
   218a2:	blx	88e4 <__stack_chk_fail@plt>
   218a6:	mov	r2, r6
   218a8:	mov	r1, r6
   218aa:	movs	r3, #101	; 0x65
   218ac:	bl	1a826 <memset_extent_buffer@@Base>
   218b0:	ldr	r3, [r5, #40]	; 0x28
   218b2:	mov	r0, r5
   218b4:	str.w	r3, [r5, #144]	; 0x90
   218b8:	ldr	r3, [r5, #44]	; 0x2c
   218ba:	str.w	r3, [r5, #148]	; 0x94
   218be:	ldrd	r2, r3, [r7, #8]
   218c2:	str.w	r9, [r5, #184]	; 0xb8
   218c6:	str.w	r8, [r5, #188]	; 0xbc
   218ca:	str.w	r2, [r5, #176]	; 0xb0
   218ce:	str.w	r3, [r5, #180]	; 0xb4
   218d2:	ldr.w	r2, [r5, #152]	; 0x98
   218d6:	ldr.w	r3, [r5, #156]	; 0x9c
   218da:	bic.w	r3, r3, #4278190080	; 0xff000000
   218de:	str.w	r2, [r5, #152]	; 0x98
   218e2:	orr.w	r3, r3, #16777216	; 0x1000000
   218e6:	str.w	r3, [r5, #156]	; 0x9c
   218ea:	ldr.w	r1, [sl, #352]	; 0x160
   218ee:	movs	r3, #16
   218f0:	movs	r2, #32
   218f2:	str	r5, [r4, #0]
   218f4:	add	r1, r3
   218f6:	bl	1a7b4 <write_extent_buffer@@Base>
   218fa:	movs	r3, #16
   218fc:	movs	r2, #64	; 0x40
   218fe:	mov	r1, sl
   21900:	mov	r0, r5
   21902:	bl	1a7b4 <write_extent_buffer@@Base>
   21906:	mov	r0, r5
   21908:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2190c:	ldr	r2, [r4, #0]
   2190e:	movs	r1, #1
   21910:	add.w	r0, r4, #255	; 0xff
   21914:	ldr	r3, [r2, #80]	; 0x50
   21916:	adds	r3, #1
   21918:	str	r3, [r2, #80]	; 0x50
   2191a:	ldr	r3, [r4, #0]
   2191c:	movs	r2, #0
   2191e:	str.w	r1, [r4, #492]	; 0x1ec
   21922:	str	r3, [r4, #4]
   21924:	movs	r3, #0
   21926:	strd	r2, r3, [r4, #216]	; 0xd8
   2192a:	strd	r2, r3, [r4, #192]	; 0xc0
   2192e:	ldrd	r2, r3, [r5, #40]	; 0x28
   21932:	strb.w	r6, [r4, #246]	; 0xf6
   21936:	str.w	r1, [r4, #224]	; 0xe0
   2193a:	mov	r1, r6
   2193c:	strd	r2, r3, [r4, #184]	; 0xb8
   21940:	ldrd	r2, r3, [r7, #8]
   21944:	strd	r2, r3, [r4, #168]	; 0xa8
   21948:	movs	r2, #0
   2194a:	ldr	r3, [r5, #76]	; 0x4c
   2194c:	strd	r3, r6, [r4, #200]	; 0xc8
   21950:	movs	r3, #0
   21952:	strd	r2, r3, [r4, #208]	; 0xd0
   21956:	strd	r2, r3, [r4, #176]	; 0xb0
   2195a:	movs	r2, #16
   2195c:	blx	8bf8 <memset@plt+0x4>
   21960:	strb.w	r6, [r4, #245]	; 0xf5
   21964:	vmov	r1, s16
   21968:	add.w	r3, r4, #8
   2196c:	add	r2, sp, #32
   2196e:	mov	r0, r7
   21970:	strb.w	r6, [sp, #41]	; 0x29
   21974:	strb.w	r6, [sp, #42]	; 0x2a
   21978:	strb.w	r6, [sp, #43]	; 0x2b
   2197c:	strb.w	r6, [sp, #44]	; 0x2c
   21980:	strb.w	r6, [sp, #45]	; 0x2d
   21984:	strb.w	r6, [sp, #46]	; 0x2e
   21988:	strb.w	r6, [sp, #47]	; 0x2f
   2198c:	strb.w	r6, [sp, #48]	; 0x30
   21990:	strd	r9, r8, [sp, #32]
   21994:	strb.w	fp, [sp, #40]	; 0x28
   21998:	bl	2b038 <btrfs_insert_root@@Base>
   2199c:	mov	r6, r0
   2199e:	cmp	r0, #0
   219a0:	beq.w	21890 <btrfs_create_tree@@Base+0x8c>
   219a4:	mov	r0, r5
   219a6:	bl	1a0a4 <free_extent_buffer@@Base>
   219aa:	b.n	21888 <btrfs_create_tree@@Base+0x84>
   219ac:	mvn.w	r4, #11
   219b0:	b.n	21890 <btrfs_create_tree@@Base+0x8c>
   219b2:	mov	r0, r4
   219b4:	add	sp, #60	; 0x3c
   219b6:	vpop	{d8}
   219ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   219be:	nop
   219c0:	strb	r0, [r3, #20]
   219c2:	movs	r4, r0
   219c4:	lsls	r4, r7, #9
   219c6:	movs	r0, r0
   219c8:	strb	r4, [r3, #18]
   219ca:	movs	r4, r0
   219cc:	push	{r4, r5, lr}
   219ce:	mov	r1, r0
   219d0:	ldr.w	r3, [r0, #356]	; 0x164
   219d4:	and.w	r2, r2, #7
   219d8:	add.w	r1, r1, #356	; 0x164
   219dc:	sub.w	r0, r3, #44	; 0x2c
   219e0:	add.w	r3, r0, #44	; 0x2c
   219e4:	cmp	r3, r1
   219e6:	bne.n	219ec <btrfs_create_tree@@Base+0x1e8>
   219e8:	movs	r0, #0
   219ea:	pop	{r4, r5, pc}
   219ec:	ldr	r3, [r0, #0]
   219ee:	movs	r5, #0
   219f0:	and.w	r4, r2, r3
   219f4:	orrs.w	r3, r4, r5
   219f8:	bne.n	219ea <btrfs_create_tree@@Base+0x1e6>
   219fa:	ldr	r0, [r0, #44]	; 0x2c
   219fc:	subs	r0, #44	; 0x2c
   219fe:	b.n	219e0 <btrfs_create_tree@@Base+0x1dc>
   21a00:	push	{r4, r5, r6, r7, lr}
   21a02:	movs	r3, #0
   21a04:	and.w	r4, r2, #2040	; 0x7f8
   21a08:	mov	r5, r3
   21a0a:	orrs.w	r1, r4, r5
   21a0e:	beq.n	21a5a <btrfs_create_tree@@Base+0x256>
   21a10:	and.w	r6, r2, #1
   21a14:	mov	r7, r3
   21a16:	orrs.w	r3, r6, r7
   21a1a:	and.w	r6, r2, #4
   21a1e:	mov.w	r7, #0
   21a22:	ittt	ne
   21a24:	ldrne.w	r3, [r0, #248]	; 0xf8
   21a28:	orrne	r3, r4
   21a2a:	strne.w	r3, [r0, #248]	; 0xf8
   21a2e:	orrs.w	r3, r6, r7
   21a32:	and.w	r6, r2, #2
   21a36:	mov.w	r7, #0
   21a3a:	itttt	ne
   21a3c:	ldrdne	r1, r3, [r0, #256]	; 0x100
   21a40:	orrne	r3, r5
   21a42:	orrne	r1, r4
   21a44:	strdne	r1, r3, [r0, #256]	; 0x100
   21a48:	orrs.w	r3, r6, r7
   21a4c:	itttt	ne
   21a4e:	ldrdne	r2, r3, [r0, #264]	; 0x108
   21a52:	orrne	r2, r4
   21a54:	orrne	r3, r5
   21a56:	strdne	r2, r3, [r0, #264]	; 0x108
   21a5a:	pop	{r4, r5, r6, r7, pc}
   21a5c:	push	{r4, lr}
   21a5e:	mov	r4, r1
   21a60:	ldr	r1, [pc, #84]	; (21ab8 <btrfs_create_tree@@Base+0x2b4>)
   21a62:	sub	sp, #24
   21a64:	ldr	r3, [pc, #84]	; (21abc <btrfs_create_tree@@Base+0x2b8>)
   21a66:	add	r1, pc
   21a68:	ldr	r3, [r1, r3]
   21a6a:	mov	r1, sp
   21a6c:	ldr	r3, [r3, #0]
   21a6e:	str	r3, [sp, #20]
   21a70:	mov.w	r3, #0
   21a74:	movs	r3, #25
   21a76:	muls	r2, r3
   21a78:	movs	r3, #17
   21a7a:	adds	r2, #101	; 0x65
   21a7c:	bl	1a79e <read_extent_buffer@@Base>
   21a80:	ldr.w	r3, [sp, #13]
   21a84:	ldr.w	r2, [sp, #9]
   21a88:	str.w	r3, [r4, #13]
   21a8c:	ldrb.w	r3, [sp, #8]
   21a90:	str.w	r2, [r4, #9]
   21a94:	ldr	r2, [pc, #40]	; (21ac0 <btrfs_create_tree@@Base+0x2bc>)
   21a96:	strb	r3, [r4, #8]
   21a98:	ldr	r3, [sp, #0]
   21a9a:	add	r2, pc
   21a9c:	str	r3, [r4, #0]
   21a9e:	ldr	r3, [sp, #4]
   21aa0:	str	r3, [r4, #4]
   21aa2:	ldr	r3, [pc, #24]	; (21abc <btrfs_create_tree@@Base+0x2b8>)
   21aa4:	ldr	r3, [r2, r3]
   21aa6:	ldr	r2, [r3, #0]
   21aa8:	ldr	r3, [sp, #20]
   21aaa:	eors	r2, r3
   21aac:	beq.n	21ab2 <btrfs_create_tree@@Base+0x2ae>
   21aae:	blx	88e4 <__stack_chk_fail@plt>
   21ab2:	add	sp, #24
   21ab4:	pop	{r4, pc}
   21ab6:	nop
   21ab8:	strb	r2, [r1, #11]
   21aba:	movs	r4, r0
   21abc:	lsls	r4, r7, #9
   21abe:	movs	r0, r0
   21ac0:	strb	r6, [r2, #10]
   21ac2:	movs	r4, r0
   21ac4:	ldr	r2, [pc, #60]	; (21b04 <btrfs_create_tree@@Base+0x300>)
   21ac6:	movs	r1, #16
   21ac8:	ldr	r3, [pc, #60]	; (21b08 <btrfs_create_tree@@Base+0x304>)
   21aca:	push	{r4, lr}
   21acc:	add	r2, pc
   21ace:	sub	sp, #72	; 0x48
   21ad0:	add	r4, sp, #4
   21ad2:	ldr	r3, [r2, r3]
   21ad4:	mov	r0, r4
   21ad6:	ldr	r3, [r3, #0]
   21ad8:	str	r3, [sp, #68]	; 0x44
   21ada:	mov.w	r3, #0
   21ade:	blx	8ae0 <backtrace@plt>
   21ae2:	movs	r2, #2
   21ae4:	mov	r1, r0
   21ae6:	mov	r0, r4
   21ae8:	blx	8e50 <backtrace_symbols_fd@plt>
   21aec:	ldr	r2, [pc, #28]	; (21b0c <btrfs_create_tree@@Base+0x308>)
   21aee:	ldr	r3, [pc, #24]	; (21b08 <btrfs_create_tree@@Base+0x304>)
   21af0:	add	r2, pc
   21af2:	ldr	r3, [r2, r3]
   21af4:	ldr	r2, [r3, #0]
   21af6:	ldr	r3, [sp, #68]	; 0x44
   21af8:	eors	r2, r3
   21afa:	beq.n	21b00 <btrfs_create_tree@@Base+0x2fc>
   21afc:	blx	88e4 <__stack_chk_fail@plt>
   21b00:	add	sp, #72	; 0x48
   21b02:	pop	{r4, pc}
   21b04:	strb	r4, [r4, #9]
   21b06:	movs	r4, r0
   21b08:	lsls	r4, r7, #9
   21b0a:	movs	r0, r0
   21b0c:	strb	r0, [r0, #9]
   21b0e:	movs	r4, r0
   21b10:	push	{r0, r1, r2, lr}
   21b12:	movs	r3, #1
   21b14:	str	r3, [sp, #0]
   21b16:	ldr	r3, [r2, #32]
   21b18:	bl	1e87c <btrfs_del_items@@Base>
   21b1c:	add	sp, #12
   21b1e:	ldr.w	pc, [sp], #4
   21b22:	push	{r4, r5, lr}
   21b24:	sub	sp, #20
   21b26:	ldr	r4, [pc, #40]	; (21b50 <btrfs_create_tree@@Base+0x34c>)
   21b28:	ldr	r5, [pc, #40]	; (21b54 <btrfs_create_tree@@Base+0x350>)
   21b2a:	add	r4, pc
   21b2c:	ldr	r4, [r4, r5]
   21b2e:	ldr	r5, [sp, #32]
   21b30:	strd	r3, r2, [sp]
   21b34:	mov	r3, r1
   21b36:	ldr	r2, [pc, #32]	; (21b58 <btrfs_create_tree@@Base+0x354>)
   21b38:	movs	r1, #1
   21b3a:	strd	r0, r5, [sp, #8]
   21b3e:	add	r2, pc
   21b40:	ldr	r0, [r4, #0]
   21b42:	blx	8ca0 <__fprintf_chk@plt+0x4>
   21b46:	add	sp, #20
   21b48:	ldmia.w	sp!, {r4, r5, lr}
   21b4c:	b.n	21ac4 <btrfs_create_tree@@Base+0x2c0>
   21b4e:	nop
   21b50:	strb	r6, [r0, #8]
   21b52:	movs	r4, r0
   21b54:	lsls	r4, r1, #10
   21b56:	movs	r0, r0
   21b58:	stmia	r7!, {r1, r3}
   21b5a:	movs	r1, r0
   21b5c:	push	{r4}
   21b5e:	ldr	r4, [sp, #4]
   21b60:	cbz	r4, 21b6c <btrfs_create_tree@@Base+0x368>
   21b62:	movs	r4, #1
   21b64:	str	r4, [sp, #4]
   21b66:	ldr.w	r4, [sp], #4
   21b6a:	b.n	21b22 <btrfs_create_tree@@Base+0x31e>
   21b6c:	ldr.w	r4, [sp], #4
   21b70:	bx	lr
   21b72:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b76:	mov	r7, r0
   21b78:	ldr	r5, [pc, #452]	; (21d40 <btrfs_create_tree@@Base+0x53c>)
   21b7a:	sub	sp, #100	; 0x64
   21b7c:	ldr	r0, [pc, #452]	; (21d44 <btrfs_create_tree@@Base+0x540>)
   21b7e:	mov	r6, r1
   21b80:	add	r5, pc
   21b82:	mov	r4, r2
   21b84:	ldrb.w	r9, [r4, #196]	; 0xc4
   21b88:	ldr	r0, [r5, r0]
   21b8a:	ldr	r2, [pc, #444]	; (21d48 <btrfs_create_tree@@Base+0x544>)
   21b8c:	ldr	r0, [r0, #0]
   21b8e:	str	r0, [sp, #92]	; 0x5c
   21b90:	mov.w	r0, #0
   21b94:	ldr.w	r0, [r6, #488]	; 0x1e8
   21b98:	add	r2, pc
   21b9a:	ldr	r1, [sp, #136]	; 0x88
   21b9c:	orrs.w	r0, r9, r0
   21ba0:	bne.n	21bbc <btrfs_create_tree@@Base+0x3b8>
   21ba2:	mov.w	sl, #0
   21ba6:	ldr	r2, [pc, #420]	; (21d4c <btrfs_create_tree@@Base+0x548>)
   21ba8:	ldr	r3, [pc, #408]	; (21d44 <btrfs_create_tree@@Base+0x540>)
   21baa:	add	r2, pc
   21bac:	ldr	r3, [r2, r3]
   21bae:	ldr	r2, [r3, #0]
   21bb0:	ldr	r3, [sp, #92]	; 0x5c
   21bb2:	eors	r2, r3
   21bb4:	beq.w	21d36 <btrfs_create_tree@@Base+0x532>
   21bb8:	blx	88e4 <__stack_chk_fail@plt>
   21bbc:	cmp	r1, #0
   21bbe:	bne.w	21cce <btrfs_create_tree@@Base+0x4ca>
   21bc2:	ldr	r1, [pc, #396]	; (21d50 <btrfs_create_tree@@Base+0x54c>)
   21bc4:	ldr.w	r8, [r2, r1]
   21bc8:	cmp	r3, #0
   21bca:	beq.w	21cd2 <btrfs_create_tree@@Base+0x4ce>
   21bce:	ldrd	r2, r3, [r4, #40]	; 0x28
   21bd2:	strd	r2, r3, [sp, #40]	; 0x28
   21bd6:	movs	r5, #0
   21bd8:	ldr.w	r3, [r4, #184]	; 0xb8
   21bdc:	str	r3, [sp, #48]	; 0x30
   21bde:	ldr.w	r3, [r4, #188]	; 0xbc
   21be2:	str	r3, [sp, #52]	; 0x34
   21be4:	ldr.w	r3, [r4, #192]	; 0xc0
   21be8:	str	r3, [sp, #56]	; 0x38
   21bea:	add.w	r3, r9, #4294967295	; 0xffffffff
   21bee:	asrs	r2, r3, #31
   21bf0:	mov	r1, r3
   21bf2:	strd	r1, r2, [sp, #64]	; 0x40
   21bf6:	ldr	r3, [sp, #56]	; 0x38
   21bf8:	cmp	r5, r3
   21bfa:	beq.n	21ba2 <btrfs_create_tree@@Base+0x39e>
   21bfc:	cmp.w	r9, #0
   21c00:	bne.n	21cd8 <btrfs_create_tree@@Base+0x4d4>
   21c02:	add	r1, sp, #72	; 0x48
   21c04:	mov	r2, r5
   21c06:	mov	r0, r4
   21c08:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   21c0c:	ldrb.w	r3, [sp, #80]	; 0x50
   21c10:	cmp	r3, #108	; 0x6c
   21c12:	bne.w	21d32 <btrfs_create_tree@@Base+0x52e>
   21c16:	movs	r3, #25
   21c18:	mla	r3, r3, r5, r4
   21c1c:	ldr.w	r2, [r3, #214]	; 0xd6
   21c20:	add	r2, r4
   21c22:	add.w	r3, r2, #197	; 0xc5
   21c26:	ldrb.w	r2, [r2, #217]	; 0xd9
   21c2a:	cmp	r2, #0
   21c2c:	beq.w	21d32 <btrfs_create_tree@@Base+0x52e>
   21c30:	mov	r2, r3
   21c32:	ldr.w	sl, [r2, #21]!
   21c36:	ldr.w	fp, [r2, #4]
   21c3a:	orrs.w	r2, sl, fp
   21c3e:	beq.n	21d32 <btrfs_create_tree@@Base+0x52e>
   21c40:	mov	r2, r3
   21c42:	ldr.w	r0, [r3, #37]!
   21c46:	ldr.w	r1, [r2, #29]!
   21c4a:	ldr.w	ip, [r3, #4]
   21c4e:	ldr.w	lr, [r2, #4]
   21c52:	ldr.w	r2, [sp, #81]	; 0x51
   21c56:	str	r1, [sp, #60]	; 0x3c
   21c58:	ldr.w	r1, [sp, #85]	; 0x55
   21c5c:	subs	r2, r2, r0
   21c5e:	str.w	r2, [sp, #81]	; 0x51
   21c62:	mov	r0, r7
   21c64:	sbc.w	r1, r1, ip
   21c68:	strd	r2, r1, [sp, #32]
   21c6c:	ldrd	r2, r3, [sp, #72]	; 0x48
   21c70:	str.w	r1, [sp, #85]	; 0x55
   21c74:	mov	r1, r6
   21c76:	strd	r2, r3, [sp, #24]
   21c7a:	ldr	r3, [sp, #48]	; 0x30
   21c7c:	str	r3, [sp, #16]
   21c7e:	ldr	r3, [sp, #52]	; 0x34
   21c80:	str	r3, [sp, #20]
   21c82:	ldrd	r2, r3, [sp, #40]	; 0x28
   21c86:	strd	r2, r3, [sp, #8]
   21c8a:	mov	r2, sl
   21c8c:	ldr	r3, [sp, #60]	; 0x3c
   21c8e:	strd	r3, lr, [sp]
   21c92:	mov	r3, fp
   21c94:	blx	r8
   21c96:	mov	sl, r0
   21c98:	cmp	r0, #0
   21c9a:	beq.n	21d32 <btrfs_create_tree@@Base+0x52e>
   21c9c:	ldr	r2, [pc, #180]	; (21d54 <btrfs_create_tree@@Base+0x550>)
   21c9e:	movs	r3, #1
   21ca0:	ldr	r1, [pc, #180]	; (21d58 <btrfs_create_tree@@Base+0x554>)
   21ca2:	ldr	r0, [pc, #184]	; (21d5c <btrfs_create_tree@@Base+0x558>)
   21ca4:	add	r2, pc
   21ca6:	add	r1, pc
   21ca8:	str	r3, [sp, #0]
   21caa:	add	r0, pc
   21cac:	movw	r3, #1502	; 0x5de
   21cb0:	bl	21b22 <btrfs_create_tree@@Base+0x31e>
   21cb4:	ldr	r2, [pc, #168]	; (21d60 <btrfs_create_tree@@Base+0x55c>)
   21cb6:	ldr	r1, [pc, #172]	; (21d64 <btrfs_create_tree@@Base+0x560>)
   21cb8:	movs	r3, #1
   21cba:	ldr	r0, [pc, #172]	; (21d68 <btrfs_create_tree@@Base+0x564>)
   21cbc:	add	r2, pc
   21cbe:	str	r3, [sp, #0]
   21cc0:	add	r1, pc
   21cc2:	add	r0, pc
   21cc4:	movw	r3, #1518	; 0x5ee
   21cc8:	bl	21b22 <btrfs_create_tree@@Base+0x31e>
   21ccc:	b.n	21ba6 <btrfs_create_tree@@Base+0x3a2>
   21cce:	ldr	r1, [pc, #156]	; (21d6c <btrfs_create_tree@@Base+0x568>)
   21cd0:	b.n	21bc4 <btrfs_create_tree@@Base+0x3c0>
   21cd2:	movs	r2, #0
   21cd4:	movs	r3, #0
   21cd6:	b.n	21bd2 <btrfs_create_tree@@Base+0x3ce>
   21cd8:	add.w	r3, r5, r5, lsl #5
   21cdc:	movs	r0, #0
   21cde:	add	r3, r4
   21ce0:	movs	r1, #0
   21ce2:	ldr.w	r2, [r3, #214]!
   21ce6:	ldr	r3, [r3, #4]
   21ce8:	strd	r0, r1, [sp, #32]
   21cec:	ldrd	r0, r1, [sp, #64]	; 0x40
   21cf0:	strd	r0, r1, [sp, #24]
   21cf4:	ldr	r1, [sp, #48]	; 0x30
   21cf6:	str	r1, [sp, #16]
   21cf8:	ldr	r1, [sp, #52]	; 0x34
   21cfa:	str	r1, [sp, #20]
   21cfc:	ldrd	r0, r1, [sp, #40]	; 0x28
   21d00:	strd	r0, r1, [sp, #8]
   21d04:	mov	r0, r7
   21d06:	ldr.w	r1, [r6, #464]	; 0x1d0
   21d0a:	ldr.w	r1, [r1, #384]	; 0x180
   21d0e:	str	r1, [sp, #0]
   21d10:	movs	r1, #0
   21d12:	str	r1, [sp, #4]
   21d14:	mov	r1, r6
   21d16:	blx	r8
   21d18:	mov	sl, r0
   21d1a:	cbz	r0, 21d32 <btrfs_create_tree@@Base+0x52e>
   21d1c:	ldr	r2, [pc, #80]	; (21d70 <btrfs_create_tree@@Base+0x56c>)
   21d1e:	movs	r3, #1
   21d20:	ldr	r1, [pc, #80]	; (21d74 <btrfs_create_tree@@Base+0x570>)
   21d22:	ldr	r0, [pc, #84]	; (21d78 <btrfs_create_tree@@Base+0x574>)
   21d24:	add	r2, pc
   21d26:	str	r3, [sp, #0]
   21d28:	add	r1, pc
   21d2a:	add	r0, pc
   21d2c:	movw	r3, #1511	; 0x5e7
   21d30:	b.n	21cb0 <btrfs_create_tree@@Base+0x4ac>
   21d32:	adds	r5, #1
   21d34:	b.n	21bf6 <btrfs_create_tree@@Base+0x3f2>
   21d36:	mov	r0, sl
   21d38:	add	sp, #100	; 0x64
   21d3a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d3e:	nop
   21d40:	strb	r0, [r6, #6]
   21d42:	movs	r4, r0
   21d44:	lsls	r4, r7, #9
   21d46:	movs	r0, r0
   21d48:	strb	r0, [r3, #6]
   21d4a:	movs	r4, r0
   21d4c:	strb	r6, [r0, #6]
   21d4e:	movs	r4, r0
   21d50:	lsls	r0, r4, #10
   21d52:	movs	r0, r0
   21d54:	lsls	r1, r2, #25
   21d56:	movs	r2, r0
   21d58:	vhadd.u32	d0, d15, d1
   21d5c:	lsls	r3, r1, #10
   21d5e:	movs	r2, r0
   21d60:	lsls	r1, r7, #24
   21d62:	movs	r2, r0
   21d64:	vhadd.u16	d0, d5, d1
   21d68:	lsls	r3, r6, #9
   21d6a:	movs	r2, r0
   21d6c:	lsls	r4, r6, #10
   21d6e:	movs	r0, r0
   21d70:	lsls	r1, r2, #23
   21d72:	movs	r2, r0
   21d74:	cdp2	0, 10, cr0, cr13, cr1, {0}
   21d78:	lsls	r3, r1, #8
   21d7a:	movs	r2, r0
   21d7c:	push	{r0, r1, r2, r3, r4, lr}
   21d7e:	ldr	r4, [pc, #40]	; (21da8 <btrfs_create_tree@@Base+0x5a4>)
   21d80:	ldr	r5, [pc, #40]	; (21dac <btrfs_create_tree@@Base+0x5a8>)
   21d82:	add	r4, pc
   21d84:	ldr	r4, [r4, r5]
   21d86:	ldr	r5, [sp, #24]
   21d88:	strd	r3, r2, [sp]
   21d8c:	mov	r3, r1
   21d8e:	ldr	r2, [pc, #32]	; (21db0 <btrfs_create_tree@@Base+0x5ac>)
   21d90:	movs	r1, #1
   21d92:	strd	r0, r5, [sp, #8]
   21d96:	add	r2, pc
   21d98:	ldr	r0, [r4, #0]
   21d9a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   21d9e:	bl	21ac4 <btrfs_create_tree@@Base+0x2c0>
   21da2:	blx	8e08 <abort@plt>
   21da6:	nop
   21da8:	ldr	r6, [r5, #120]	; 0x78
   21daa:	movs	r4, r0
   21dac:	lsls	r4, r1, #10
   21dae:	movs	r0, r0
   21db0:	sxth	r1, r2
   21db2:	movs	r1, r0
   21db4:	push	{r0, r1, r4, lr}
   21db6:	ldr	r4, [sp, #16]
   21db8:	cbz	r4, 21dc0 <btrfs_create_tree@@Base+0x5bc>
   21dba:	str	r4, [sp, #0]
   21dbc:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   21dc0:	add	sp, #8
   21dc2:	pop	{r4, pc}
   21dc4:	cmp	r0, #176	; 0xb0
   21dc6:	push	{r0, r1, r2, lr}
   21dc8:	beq.n	21df0 <btrfs_create_tree@@Base+0x5ec>
   21dca:	cmp	r0, #182	; 0xb6
   21dcc:	beq.n	21df0 <btrfs_create_tree@@Base+0x5ec>
   21dce:	cmp	r0, #184	; 0xb8
   21dd0:	beq.n	21df8 <btrfs_create_tree@@Base+0x5f4>
   21dd2:	cmp	r0, #178	; 0xb2
   21dd4:	beq.n	21dfc <btrfs_create_tree@@Base+0x5f8>
   21dd6:	ldr	r2, [pc, #40]	; (21e00 <btrfs_create_tree@@Base+0x5fc>)
   21dd8:	movs	r3, #1
   21dda:	ldr	r1, [pc, #40]	; (21e04 <btrfs_create_tree@@Base+0x600>)
   21ddc:	ldr	r0, [pc, #40]	; (21e08 <btrfs_create_tree@@Base+0x604>)
   21dde:	add	r2, pc
   21de0:	str	r3, [sp, #0]
   21de2:	adds	r2, #16
   21de4:	add	r1, pc
   21de6:	add	r0, pc
   21de8:	movw	r3, #1818	; 0x71a
   21dec:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   21df0:	movs	r0, #9
   21df2:	add	sp, #12
   21df4:	ldr.w	pc, [sp], #4
   21df8:	movs	r0, #13
   21dfa:	b.n	21df2 <btrfs_create_tree@@Base+0x5ee>
   21dfc:	movs	r0, #29
   21dfe:	b.n	21df2 <btrfs_create_tree@@Base+0x5ee>
   21e00:	lsls	r7, r2, #20
   21e02:	movs	r2, r0
   21e04:	sxth	r2, r4
   21e06:	movs	r1, r0
   21e08:	lsls	r7, r1, #5
   21e0a:	movs	r2, r0
   21e0c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21e10:	mov	r5, r3
   21e12:	vpush	{d8}
   21e16:	mov	r6, r2
   21e18:	movs	r2, #25
   21e1a:	mov	r7, r1
   21e1c:	vmov	s16, r0
   21e20:	ldr.w	fp, [r1]
   21e24:	sub	sp, #44	; 0x2c
   21e26:	ldr	r3, [r1, #32]
   21e28:	add.w	r4, fp, #96	; 0x60
   21e2c:	mla	r3, r2, r3, r4
   21e30:	adds	r2, r5, #1
   21e32:	ldr.w	r3, [r3, #118]	; 0x76
   21e36:	add.w	r3, r3, #101	; 0x65
   21e3a:	str	r3, [sp, #12]
   21e3c:	add.w	r8, r4, r3
   21e40:	ldr.w	r9, [r4, r3]
   21e44:	ldr.w	sl, [r8, #4]
   21e48:	bne.n	21ec0 <btrfs_create_tree@@Base+0x6bc>
   21e4a:	cmp.w	sl, #0
   21e4e:	itte	eq
   21e50:	cmpeq.w	r9, #1
   21e54:	moveq	r3, #1
   21e56:	movne	r3, #0
   21e58:	ldr	r2, [pc, #336]	; (21fac <btrfs_create_tree@@Base+0x7a8>)
   21e5a:	ldr	r1, [pc, #340]	; (21fb0 <btrfs_create_tree@@Base+0x7ac>)
   21e5c:	ldr	r0, [pc, #340]	; (21fb4 <btrfs_create_tree@@Base+0x7b0>)
   21e5e:	add	r2, pc
   21e60:	adds	r2, #45	; 0x2d
   21e62:	add	r1, pc
   21e64:	str	r3, [sp, #0]
   21e66:	add	r0, pc
   21e68:	movw	r3, #1129	; 0x469
   21e6c:	strd	r1, r2, [sp, #16]
   21e70:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   21e74:	asrs	r3, r5, #31
   21e76:	mov	r2, r5
   21e78:	strd	r2, r3, [sp, #32]
   21e7c:	ldr	r3, [sp, #12]
   21e7e:	adds.w	r9, r9, r5
   21e82:	adc.w	sl, sl, r5, asr #31
   21e86:	ldrd	r1, r2, [sp, #16]
   21e8a:	str.w	r9, [r4, r3]
   21e8e:	str.w	sl, [r8, #4]
   21e92:	ldrb.w	sl, [r4, r6]
   21e96:	cmp.w	sl, #178	; 0xb2
   21e9a:	bne.n	21ec4 <btrfs_create_tree@@Base+0x6c0>
   21e9c:	add.w	r9, r6, #1
   21ea0:	add.w	r3, r4, r9
   21ea4:	ldr	r3, [r3, #24]
   21ea6:	str	r3, [sp, #16]
   21ea8:	movs	r3, #0
   21eaa:	mov	r8, r3
   21eac:	str	r3, [sp, #20]
   21eae:	adds	r5, #1
   21eb0:	bne.n	21f54 <btrfs_create_tree@@Base+0x750>
   21eb2:	ldrd	r3, r2, [sp, #16]
   21eb6:	orrs	r3, r2
   21eb8:	ite	eq
   21eba:	moveq	r3, #1
   21ebc:	movne	r3, #0
   21ebe:	b.n	21f00 <btrfs_create_tree@@Base+0x6fc>
   21ec0:	movs	r3, #0
   21ec2:	b.n	21e58 <btrfs_create_tree@@Base+0x654>
   21ec4:	cmp.w	sl, #184	; 0xb8
   21ec8:	bne.n	21edc <btrfs_create_tree@@Base+0x6d8>
   21eca:	add.w	r8, r6, #9
   21ece:	ldr.w	r3, [r4, r8]
   21ed2:	str	r3, [sp, #16]
   21ed4:	movs	r3, #0
   21ed6:	mov	r9, r3
   21ed8:	str	r3, [sp, #20]
   21eda:	b.n	21eae <btrfs_create_tree@@Base+0x6aa>
   21edc:	adds	r5, #1
   21ede:	ldr	r0, [pc, #216]	; (21fb8 <btrfs_create_tree@@Base+0x7b4>)
   21ee0:	mov.w	r8, #0
   21ee4:	movw	r3, #1143	; 0x477
   21ee8:	it	ne
   21eea:	movne	r5, #1
   21eec:	add	r0, pc
   21eee:	str	r5, [sp, #0]
   21ef0:	mov	r9, r8
   21ef2:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   21ef6:	movs	r3, #1
   21ef8:	str	r3, [sp, #16]
   21efa:	mov	r3, r8
   21efc:	str.w	r8, [sp, #20]
   21f00:	ldr	r2, [pc, #184]	; (21fbc <btrfs_create_tree@@Base+0x7b8>)
   21f02:	ldr	r1, [pc, #188]	; (21fc0 <btrfs_create_tree@@Base+0x7bc>)
   21f04:	ldr	r0, [pc, #188]	; (21fc4 <btrfs_create_tree@@Base+0x7c0>)
   21f06:	add	r2, pc
   21f08:	adds	r2, #45	; 0x2d
   21f0a:	str	r3, [sp, #0]
   21f0c:	add	r1, pc
   21f0e:	movw	r3, #1146	; 0x47a
   21f12:	add	r0, pc
   21f14:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   21f18:	ldr	r2, [sp, #16]
   21f1a:	ldr	r3, [sp, #32]
   21f1c:	adds	r3, r3, r2
   21f1e:	ldr	r2, [sp, #36]	; 0x24
   21f20:	str	r3, [sp, #24]
   21f22:	ldr	r3, [sp, #20]
   21f24:	adc.w	r3, r2, r3
   21f28:	str	r3, [sp, #28]
   21f2a:	ldrd	r2, r3, [sp, #24]
   21f2e:	orrs	r3, r2
   21f30:	beq.n	21f58 <btrfs_create_tree@@Base+0x754>
   21f32:	cmp.w	sl, #178	; 0xb2
   21f36:	ldr	r3, [sp, #24]
   21f38:	itet	eq
   21f3a:	addeq	r4, r9
   21f3c:	strne.w	r3, [r4, r8]
   21f40:	streq	r3, [r4, #24]
   21f42:	mov	r0, fp
   21f44:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   21f48:	movs	r0, #0
   21f4a:	add	sp, #44	; 0x2c
   21f4c:	vpop	{d8}
   21f50:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f54:	movs	r3, #0
   21f56:	b.n	21f00 <btrfs_create_tree@@Base+0x6fc>
   21f58:	mov	r0, sl
   21f5a:	bl	21dc4 <btrfs_create_tree@@Base+0x5c0>
   21f5e:	ldr	r3, [r7, #32]
   21f60:	movs	r2, #25
   21f62:	mla	r4, r2, r3, r4
   21f66:	ldr	r3, [sp, #12]
   21f68:	ldr.w	r4, [r4, #122]	; 0x7a
   21f6c:	add	r3, r4
   21f6e:	adds	r2, r6, r0
   21f70:	mov	r5, r0
   21f72:	cmp	r3, r2
   21f74:	bls.n	21f82 <btrfs_create_tree@@Base+0x77e>
   21f76:	subs	r3, r3, r6
   21f78:	mov	r1, r6
   21f7a:	subs	r3, r3, r0
   21f7c:	mov	r0, fp
   21f7e:	bl	1a810 <memmove_extent_buffer@@Base>
   21f82:	subs	r2, r4, r5
   21f84:	mov	r1, r7
   21f86:	vmov	r0, s16
   21f8a:	movs	r3, #1
   21f8c:	bl	1d300 <btrfs_truncate_item@@Base>
   21f90:	ldr	r2, [pc, #52]	; (21fc8 <btrfs_create_tree@@Base+0x7c4>)
   21f92:	ldr	r1, [pc, #56]	; (21fcc <btrfs_create_tree@@Base+0x7c8>)
   21f94:	movw	r3, #1164	; 0x48c
   21f98:	add	r2, pc
   21f9a:	adds	r2, #45	; 0x2d
   21f9c:	add	r1, pc
   21f9e:	str	r0, [sp, #0]
   21fa0:	ldr	r0, [pc, #44]	; (21fd0 <btrfs_create_tree@@Base+0x7cc>)
   21fa2:	add	r0, pc
   21fa4:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   21fa8:	b.n	21f42 <btrfs_create_tree@@Base+0x73e>
   21faa:	nop
   21fac:	lsls	r7, r2, #18
   21fae:	movs	r2, r0
   21fb0:	ldc2l	0, cr0, [r3, #-4]!
   21fb4:	ldc2l	0, cr0, [sp, #-4]!
   21fb8:	stc2	0, cr0, [r2, #-4]!
   21fbc:	lsls	r7, r5, #15
   21fbe:	movs	r2, r0
   21fc0:	stc2l	0, cr0, [r9], {1}
   21fc4:	stc2	0, cr0, [lr, #-4]
   21fc8:	lsls	r5, r3, #13
   21fca:	movs	r2, r0
   21fcc:	ldc2	0, cr0, [r9], #-4
   21fd0:	ldmia	r0, {r0, r1, r3, r4, r6, r7}
   21fd2:	movs	r1, r0
   21fd4:	push	{r4, r5, r6, r7, lr}
   21fd6:	mov	r7, r2
   21fd8:	ldr	r2, [pc, #132]	; (22060 <btrfs_create_tree@@Base+0x85c>)
   21fda:	mov	r4, r3
   21fdc:	ldr	r3, [pc, #132]	; (22064 <btrfs_create_tree@@Base+0x860>)
   21fde:	sub	sp, #36	; 0x24
   21fe0:	add	r2, pc
   21fe2:	mov	r5, r1
   21fe4:	mov	r6, r0
   21fe6:	ldr	r0, [r5, #0]
   21fe8:	ldr	r3, [r2, r3]
   21fea:	ldr	r2, [r1, #32]
   21fec:	add	r1, sp, #8
   21fee:	ldr	r3, [r3, #0]
   21ff0:	str	r3, [sp, #28]
   21ff2:	mov.w	r3, #0
   21ff6:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   21ffa:	ldrb.w	r5, [sp, #16]
   21ffe:	movw	r3, #3377	; 0xd31
   22002:	ldr	r2, [pc, #100]	; (22068 <btrfs_create_tree@@Base+0x864>)
   22004:	add.w	r1, r5, #88	; 0x58
   22008:	ldr	r0, [pc, #96]	; (2206c <btrfs_create_tree@@Base+0x868>)
   2200a:	add	r2, pc
   2200c:	uxtb	r1, r1
   2200e:	adds	r2, #74	; 0x4a
   22010:	cmp	r1, #1
   22012:	add	r0, pc
   22014:	ite	ls
   22016:	movls	r1, #0
   22018:	movhi	r1, #1
   2201a:	str	r1, [sp, #0]
   2201c:	ldr	r1, [pc, #80]	; (22070 <btrfs_create_tree@@Base+0x86c>)
   2201e:	add	r1, pc
   22020:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   22024:	ldrd	r2, r3, [sp, #8]
   22028:	cmp	r5, #168	; 0xa8
   2202a:	strd	r2, r3, [r7]
   2202e:	iteet	ne
   22030:	ldrne	r3, [r6, #0]
   22032:	ldreq.w	r2, [sp, #17]
   22036:	ldreq.w	r3, [sp, #21]
   2203a:	ldrne.w	r2, [r3, #384]	; 0x180
   2203e:	it	ne
   22040:	movne	r3, #0
   22042:	strd	r2, r3, [r4]
   22046:	ldr	r2, [pc, #44]	; (22074 <btrfs_create_tree@@Base+0x870>)
   22048:	ldr	r3, [pc, #24]	; (22064 <btrfs_create_tree@@Base+0x860>)
   2204a:	add	r2, pc
   2204c:	ldr	r3, [r2, r3]
   2204e:	ldr	r2, [r3, #0]
   22050:	ldr	r3, [sp, #28]
   22052:	eors	r2, r3
   22054:	beq.n	2205a <btrfs_create_tree@@Base+0x856>
   22056:	blx	88e4 <__stack_chk_fail@plt>
   2205a:	add	sp, #36	; 0x24
   2205c:	pop	{r4, r5, r6, r7, pc}
   2205e:	nop
   22060:	ldr	r0, [r2, #84]	; 0x54
   22062:	movs	r4, r0
   22064:	lsls	r4, r7, #9
   22066:	movs	r0, r0
   22068:	lsls	r3, r5, #11
   2206a:	movs	r2, r0
   2206c:	ldc2	0, cr0, [r5], #-4
   22070:			; <UNDEFINED> instruction: 0xfbb70001
   22074:	ldr	r6, [r4, #76]	; 0x4c
   22076:	movs	r4, r0
   22078:	push	{r0, r1, r2, r3, r4, r6, r7, lr}
   2207a:	mov	r4, r0
   2207c:	ldrd	r0, r3, [r0, #48]	; 0x30
   22080:	ldr	r2, [pc, #140]	; (22110 <btrfs_create_tree@@Base+0x90c>)
   22082:	orrs	r3, r0
   22084:	ldr	r1, [pc, #140]	; (22114 <btrfs_create_tree@@Base+0x910>)
   22086:	ldr	r0, [pc, #144]	; (22118 <btrfs_create_tree@@Base+0x914>)
   22088:	add	r2, pc
   2208a:	ite	eq
   2208c:	moveq	r3, #1
   2208e:	movne	r3, #0
   22090:	adds	r2, #92	; 0x5c
   22092:	add	r1, pc
   22094:	add	r0, pc
   22096:	str	r3, [sp, #0]
   22098:	movs	r3, #163	; 0xa3
   2209a:	strd	r1, r2, [sp, #8]
   2209e:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   220a2:	ldrd	r3, r0, [r4, #48]	; 0x30
   220a6:	ldrd	r1, r2, [sp, #8]
   220aa:	adds.w	r6, r3, #4294967295	; 0xffffffff
   220ae:	adc.w	r7, r0, #4294967295	; 0xffffffff
   220b2:	strd	r6, r7, [r4, #48]	; 0x30
   220b6:	orrs.w	r3, r6, r7
   220ba:	bne.n	2210c <btrfs_create_tree@@Base+0x908>
   220bc:	ldrb.w	r3, [r4, #62]	; 0x3e
   220c0:	ldr	r0, [pc, #88]	; (2211c <btrfs_create_tree@@Base+0x918>)
   220c2:	ubfx	r3, r3, #1, #1
   220c6:	str	r3, [sp, #0]
   220c8:	add	r0, pc
   220ca:	movs	r3, #165	; 0xa5
   220cc:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   220d0:	ldrb.w	r3, [r4, #61]	; 0x3d
   220d4:	subs	r3, #176	; 0xb0
   220d6:	cmp	r3, #8
   220d8:	bhi.n	220f4 <btrfs_create_tree@@Base+0x8f0>
   220da:	tbb	[pc, r3]
   220de:	lsrs	r5, r0, #12
   220e0:	lsrs	r5, r0, #12
   220e2:	lsrs	r3, r1, #12
   220e4:	lsrs	r5, r0, #12
   220e6:	movs	r5, r0
   220e8:	mov	r0, r4
   220ea:	add	sp, #16
   220ec:	ldmia.w	sp!, {r4, r6, r7, lr}
   220f0:	b.w	87c8 <free@plt>
   220f4:	ldr	r2, [pc, #40]	; (22120 <btrfs_create_tree@@Base+0x91c>)
   220f6:	movs	r3, #1
   220f8:	ldr	r1, [pc, #40]	; (22124 <btrfs_create_tree@@Base+0x920>)
   220fa:	ldr	r0, [pc, #44]	; (22128 <btrfs_create_tree@@Base+0x924>)
   220fc:	add	r2, pc
   220fe:	str	r3, [sp, #0]
   22100:	adds	r2, #92	; 0x5c
   22102:	add	r1, pc
   22104:	add	r0, pc
   22106:	movs	r3, #176	; 0xb0
   22108:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   2210c:	add	sp, #16
   2210e:	pop	{r4, r6, r7, pc}
   22110:	lsls	r5, r5, #9
   22112:	movs	r2, r0
   22114:	stc2	0, cr0, [r1], {1}
   22118:	stc2	0, cr0, [sp], {1}
   2211c:	umlal	r0, r0, r8, r1
   22120:	lsls	r1, r7, #7
   22122:	movs	r2, r0
   22124:			; <UNDEFINED> instruction: 0xfb910001
   22128:	cdp2	0, 3, cr0, cr1, cr1, {0}
   2212c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22130:	mov	r4, r2
   22132:	ldr	r2, [pc, #288]	; (22254 <btrfs_create_tree@@Base+0xa50>)
   22134:	mov	r5, r3
   22136:	ldr	r3, [pc, #288]	; (22258 <btrfs_create_tree@@Base+0xa54>)
   22138:	sub	sp, #36	; 0x24
   2213a:	add	r2, pc
   2213c:	ldr.w	r9, [pc, #284]	; 2225c <btrfs_create_tree@@Base+0xa58>
   22140:	ldr.w	sl, [pc, #284]	; 22260 <btrfs_create_tree@@Base+0xa5c>
   22144:	mov	r8, r0
   22146:	ldr	r3, [r2, r3]
   22148:	add	r9, pc
   2214a:	ldr	r0, [pc, #280]	; (22264 <btrfs_create_tree@@Base+0xa60>)
   2214c:	add	sl, pc
   2214e:	ldr	r3, [r3, #0]
   22150:	str	r3, [sp, #28]
   22152:	mov.w	r3, #0
   22156:	mov	r6, r1
   22158:	movs	r3, #0
   2215a:	str	r3, [sp, #0]
   2215c:	add.w	r2, sl, #114	; 0x72
   22160:	add	r0, pc
   22162:	movw	r3, #1223	; 0x4c7
   22166:	mov	r1, r9
   22168:	ldr	r7, [sp, #72]	; 0x48
   2216a:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2216e:	cbz	r5, 22192 <btrfs_create_tree@@Base+0x98e>
   22170:	mov.w	r3, #4294967295	; 0xffffffff
   22174:	mov	r2, r5
   22176:	mov	r1, r4
   22178:	mov	r0, r6
   2217a:	bl	21e0c <btrfs_create_tree@@Base+0x608>
   2217e:	ldr	r2, [pc, #232]	; (22268 <btrfs_create_tree@@Base+0xa64>)
   22180:	ldr	r3, [pc, #212]	; (22258 <btrfs_create_tree@@Base+0xa54>)
   22182:	add	r2, pc
   22184:	ldr	r3, [r2, r3]
   22186:	ldr	r2, [r3, #0]
   22188:	ldr	r3, [sp, #28]
   2218a:	eors	r2, r3
   2218c:	beq.n	2224c <btrfs_create_tree@@Base+0xa48>
   2218e:	blx	88e4 <__stack_chk_fail@plt>
   22192:	cbz	r7, 221ea <btrfs_create_tree@@Base+0x9e6>
   22194:	ldr	r7, [r4, #0]
   22196:	add	r1, sp, #8
   22198:	ldr	r2, [r4, #32]
   2219a:	mov	r0, r7
   2219c:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   221a0:	ldrb.w	fp, [sp, #16]
   221a4:	add.w	r3, r7, #96	; 0x60
   221a8:	cmp.w	fp, #178	; 0xb2
   221ac:	bne.n	221f6 <btrfs_create_tree@@Base+0x9f2>
   221ae:	ldr	r2, [r4, #32]
   221b0:	movs	r1, #25
   221b2:	mov	r9, r5
   221b4:	mla	r2, r1, r2, r3
   221b8:	ldr.w	r2, [r2, #118]	; 0x76
   221bc:	adds	r2, #101	; 0x65
   221be:	add	r3, r2
   221c0:	mov	r5, r2
   221c2:	ldr.w	sl, [r3, #24]
   221c6:	ldr	r2, [pc, #164]	; (2226c <btrfs_create_tree@@Base+0xa68>)
   221c8:	clz	r3, sl
   221cc:	ldr	r1, [pc, #160]	; (22270 <btrfs_create_tree@@Base+0xa6c>)
   221ce:	ldr	r0, [pc, #164]	; (22274 <btrfs_create_tree@@Base+0xa70>)
   221d0:	add	r2, pc
   221d2:	lsrs	r3, r3, #5
   221d4:	adds	r2, #136	; 0x88
   221d6:	str	r3, [sp, #0]
   221d8:	add	r1, pc
   221da:	add	r0, pc
   221dc:	movw	r3, #733	; 0x2dd
   221e0:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   221e4:	subs.w	sl, sl, #1
   221e8:	bne.n	22228 <btrfs_create_tree@@Base+0xa24>
   221ea:	mov	r2, r4
   221ec:	mov	r1, r6
   221ee:	mov	r0, r8
   221f0:	bl	21b10 <btrfs_create_tree@@Base+0x30c>
   221f4:	b.n	2217e <btrfs_create_tree@@Base+0x97a>
   221f6:	cmp.w	fp, #184	; 0xb8
   221fa:	bne.n	22212 <btrfs_create_tree@@Base+0xa0e>
   221fc:	ldr	r2, [r4, #32]
   221fe:	movs	r1, #25
   22200:	mla	r2, r1, r2, r3
   22204:	ldr.w	r9, [r2, #118]	; 0x76
   22208:	add.w	r9, r9, #101	; 0x65
   2220c:	ldr.w	sl, [r3, r9]
   22210:	b.n	221c6 <btrfs_create_tree@@Base+0x9c2>
   22212:	ldr	r0, [pc, #100]	; (22278 <btrfs_create_tree@@Base+0xa74>)
   22214:	movs	r3, #1
   22216:	add.w	r2, sl, #136	; 0x88
   2221a:	str	r3, [sp, #0]
   2221c:	add	r0, pc
   2221e:	movw	r3, #730	; 0x2da
   22222:	mov	r1, r9
   22224:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   22228:	cmp.w	fp, #178	; 0xb2
   2222c:	bne.n	2223e <btrfs_create_tree@@Base+0xa3a>
   2222e:	add	r5, r7
   22230:	str.w	sl, [r5, #120]	; 0x78
   22234:	mov	r0, r7
   22236:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2223a:	movs	r0, #0
   2223c:	b.n	2217e <btrfs_create_tree@@Base+0x97a>
   2223e:	cmp.w	fp, #184	; 0xb8
   22242:	itt	eq
   22244:	addeq	r9, r7
   22246:	streq.w	sl, [r9, #96]	; 0x60
   2224a:	b.n	22234 <btrfs_create_tree@@Base+0xa30>
   2224c:	add	sp, #36	; 0x24
   2224e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22252:	nop
   22254:	ldr	r6, [r6, #60]	; 0x3c
   22256:	movs	r4, r0
   22258:	lsls	r4, r7, #9
   2225a:	movs	r0, r0
   2225c:			; <UNDEFINED> instruction: 0xfa8d0001
   22260:	lsls	r1, r5, #6
   22262:	movs	r2, r0
   22264:	smmla	r0, sp, r1, r0
   22268:	ldr	r6, [r5, #56]	; 0x38
   2226a:	movs	r4, r0
   2226c:	lsls	r5, r4, #4
   2226e:	movs	r2, r0
   22270:	ldr??.w	r0, [sp, #1]
   22274:	mla	r0, r1, r1, r0
   22278:	ldc2	0, cr0, [r9, #-4]
   2227c:	push	{r0, r1, r2, r3, r4, lr}
   2227e:	ldr	r3, [pc, #40]	; (222a8 <btrfs_create_tree@@Base+0xaa4>)
   22280:	ldr	r4, [pc, #40]	; (222ac <btrfs_create_tree@@Base+0xaa8>)
   22282:	add	r3, pc
   22284:	ldr	r4, [r3, r4]
   22286:	movs	r3, #0
   22288:	strd	r2, r1, [sp]
   2228c:	movs	r1, #1
   2228e:	strd	r0, r3, [sp, #8]
   22292:	ldr	r2, [pc, #28]	; (222b0 <btrfs_create_tree@@Base+0xaac>)
   22294:	ldr	r3, [pc, #28]	; (222b4 <btrfs_create_tree@@Base+0xab0>)
   22296:	add	r2, pc
   22298:	ldr	r0, [r4, #0]
   2229a:	add	r3, pc
   2229c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   222a0:	bl	21ac4 <btrfs_create_tree@@Base+0x2c0>
   222a4:	blx	8e08 <abort@plt>
   222a8:	ldr	r6, [r5, #40]	; 0x28
   222aa:	movs	r4, r0
   222ac:	lsls	r4, r1, #10
   222ae:	movs	r0, r0
   222b0:	stmia	r0!, {r1, r2, r4, r6, r7}
   222b2:	movs	r1, r0
   222b4:	ldrsh.w	r0, [fp, r1]

000222b8 <btrfs_lookup_first_block_group@@Base>:
   222b8:	push	{r4, r5, r6, lr}
   222ba:	cmp	r3, #0
   222bc:	ldr	r4, [pc, #112]	; (22330 <btrfs_lookup_first_block_group@@Base+0x78>)
   222be:	it	eq
   222c0:	cmpeq.w	r2, #69632	; 0x11000
   222c4:	ldr	r1, [pc, #108]	; (22334 <btrfs_lookup_first_block_group@@Base+0x7c>)
   222c6:	sub	sp, #48	; 0x30
   222c8:	add	r4, pc
   222ca:	add.w	r6, r0, #128	; 0x80
   222ce:	mov	r5, r3
   222d0:	it	cc
   222d2:	movcc	r5, #0
   222d4:	ldr	r1, [r4, r1]
   222d6:	mov	r4, r2
   222d8:	it	cc
   222da:	movcc.w	r4, #69632	; 0x11000
   222de:	movs	r3, #22
   222e0:	ldr	r1, [r1, #0]
   222e2:	str	r1, [sp, #44]	; 0x2c
   222e4:	mov.w	r1, #0
   222e8:	mov	r2, r4
   222ea:	str	r3, [sp, #8]
   222ec:	mov	r0, r6
   222ee:	add	r3, sp, #32
   222f0:	str	r3, [sp, #4]
   222f2:	add	r3, sp, #24
   222f4:	str	r3, [sp, #0]
   222f6:	mov	r3, r5
   222f8:	bl	19f9c <find_first_extent_bit@@Base>
   222fc:	cbz	r0, 22314 <btrfs_lookup_first_block_group@@Base+0x5c>
   222fe:	movs	r0, #0
   22300:	ldr	r2, [pc, #52]	; (22338 <btrfs_lookup_first_block_group@@Base+0x80>)
   22302:	ldr	r3, [pc, #48]	; (22334 <btrfs_lookup_first_block_group@@Base+0x7c>)
   22304:	add	r2, pc
   22306:	ldr	r3, [r2, r3]
   22308:	ldr	r2, [r3, #0]
   2230a:	ldr	r3, [sp, #44]	; 0x2c
   2230c:	eors	r2, r3
   2230e:	beq.n	2232a <btrfs_lookup_first_block_group@@Base+0x72>
   22310:	blx	88e4 <__stack_chk_fail@plt>
   22314:	add	r3, sp, #16
   22316:	mov	r0, r6
   22318:	str	r3, [sp, #0]
   2231a:	ldrd	r2, r3, [sp, #24]
   2231e:	bl	1a078 <get_state_private@@Base>
   22322:	cmp	r0, #0
   22324:	bne.n	222fe <btrfs_lookup_first_block_group@@Base+0x46>
   22326:	ldr	r0, [sp, #16]
   22328:	b.n	22300 <btrfs_lookup_first_block_group@@Base+0x48>
   2232a:	add	sp, #48	; 0x30
   2232c:	pop	{r4, r5, r6, pc}
   2232e:	nop
   22330:	ldr	r0, [r5, #36]	; 0x24
   22332:	movs	r4, r0
   22334:	lsls	r4, r7, #9
   22336:	movs	r0, r0
   22338:	ldr	r4, [r5, #32]
   2233a:	movs	r4, r0

0002233c <btrfs_lookup_block_group@@Base>:
   2233c:	ldr.w	ip, [pc, #136]	; 223c8 <btrfs_lookup_block_group@@Base+0x8c>
   22340:	ldr	r1, [pc, #136]	; (223cc <btrfs_lookup_block_group@@Base+0x90>)
   22342:	add	ip, pc
   22344:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   22348:	add.w	r8, r0, #128	; 0x80
   2234c:	sub	sp, #48	; 0x30
   2234e:	ldr.w	r1, [ip, r1]
   22352:	mov	r0, r8
   22354:	mov	r4, r2
   22356:	ldr	r1, [r1, #0]
   22358:	str	r1, [sp, #44]	; 0x2c
   2235a:	mov.w	r1, #0
   2235e:	movs	r1, #22
   22360:	str	r1, [sp, #8]
   22362:	add	r1, sp, #32
   22364:	str	r1, [sp, #4]
   22366:	add	r1, sp, #24
   22368:	str	r1, [sp, #0]
   2236a:	mov	r5, r3
   2236c:	bl	19f9c <find_first_extent_bit@@Base>
   22370:	cbz	r0, 22388 <btrfs_lookup_block_group@@Base+0x4c>
   22372:	movs	r0, #0
   22374:	ldr	r2, [pc, #88]	; (223d0 <btrfs_lookup_block_group@@Base+0x94>)
   22376:	ldr	r3, [pc, #84]	; (223cc <btrfs_lookup_block_group@@Base+0x90>)
   22378:	add	r2, pc
   2237a:	ldr	r3, [r2, r3]
   2237c:	ldr	r2, [r3, #0]
   2237e:	ldr	r3, [sp, #44]	; 0x2c
   22380:	eors	r2, r3
   22382:	beq.n	223c0 <btrfs_lookup_block_group@@Base+0x84>
   22384:	blx	88e4 <__stack_chk_fail@plt>
   22388:	add	r3, sp, #16
   2238a:	mov	r0, r8
   2238c:	str	r3, [sp, #0]
   2238e:	ldrd	r2, r3, [sp, #24]
   22392:	bl	1a078 <get_state_private@@Base>
   22396:	cmp	r0, #0
   22398:	bne.n	22372 <btrfs_lookup_block_group@@Base+0x36>
   2239a:	ldr	r0, [sp, #16]
   2239c:	ldrd	r2, r3, [r0, #40]	; 0x28
   223a0:	cmp	r5, r3
   223a2:	it	eq
   223a4:	cmpeq	r4, r2
   223a6:	bcc.n	22372 <btrfs_lookup_block_group@@Base+0x36>
   223a8:	ldr.w	r1, [r0, #49]	; 0x31
   223ac:	ldr.w	ip, [r0, #53]	; 0x35
   223b0:	adds	r6, r1, r2
   223b2:	adc.w	r7, ip, r3
   223b6:	cmp	r5, r7
   223b8:	it	eq
   223ba:	cmpeq	r4, r6
   223bc:	bcc.n	22374 <btrfs_lookup_block_group@@Base+0x38>
   223be:	b.n	22372 <btrfs_lookup_block_group@@Base+0x36>
   223c0:	add	sp, #48	; 0x30
   223c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   223c6:	nop
   223c8:	ldr	r6, [r5, #28]
   223ca:	movs	r4, r0
   223cc:	lsls	r4, r7, #9
   223ce:	movs	r0, r0
   223d0:	ldr	r0, [r7, #24]
   223d2:	movs	r4, r0
   223d4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   223d8:	mov	r8, r0
   223da:	ldrd	r6, r7, [sp, #48]	; 0x30
   223de:	adds	r0, #160	; 0xa0
   223e0:	ldr.w	sl, [sp, #56]	; 0x38
   223e4:	mov	r9, r2
   223e6:	adds.w	r1, r6, #4294967295	; 0xffffffff
   223ea:	mov	fp, r3
   223ec:	adc.w	ip, r7, #4294967295	; 0xffffffff
   223f0:	adds	r1, r1, r2
   223f2:	adc.w	ip, ip, r3
   223f6:	strd	r1, ip, [sp]
   223fa:	cmp.w	sl, #0
   223fe:	beq.n	22412 <btrfs_lookup_block_group@@Base+0xd6>
   22400:	bl	19f6c <set_extent_dirty@@Base>
   22404:	orrs.w	r3, r6, r7
   22408:	bne.n	22418 <btrfs_lookup_block_group@@Base+0xdc>
   2240a:	movs	r0, #0
   2240c:	add	sp, #12
   2240e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22412:	bl	19f84 <clear_extent_dirty@@Base>
   22416:	b.n	22404 <btrfs_lookup_block_group@@Base+0xc8>
   22418:	mov	r2, r9
   2241a:	mov	r3, fp
   2241c:	mov	r0, r8
   2241e:	bl	2233c <btrfs_lookup_block_group@@Base>
   22422:	cbnz	r0, 22446 <btrfs_lookup_block_group@@Base+0x10a>
   22424:	ldr.w	r4, [r8, #388]	; 0x184
   22428:	cmp	r7, r0
   2242a:	mov	r5, r0
   2242c:	it	eq
   2242e:	cmpeq	r6, r4
   22430:	bcs.n	22436 <btrfs_lookup_block_group@@Base+0xfa>
   22432:	mov	r4, r6
   22434:	mov	r5, r7
   22436:	adds.w	r9, r9, r4
   2243a:	adc.w	fp, fp, r5
   2243e:	subs	r6, r6, r4
   22440:	sbc.w	r7, r7, r5
   22444:	b.n	22404 <btrfs_lookup_block_group@@Base+0xc8>
   22446:	ldr.w	r1, [r0, #49]	; 0x31
   2244a:	ldrd	r3, r2, [r0, #40]	; 0x28
   2244e:	ldr.w	ip, [r0, #53]	; 0x35
   22452:	adds	r3, r1, r3
   22454:	adc.w	r2, ip, r2
   22458:	subs.w	r4, r3, r9
   2245c:	sbc.w	r5, r2, fp
   22460:	ldrd	r3, r1, [r0, #88]	; 0x58
   22464:	cmp	r7, r5
   22466:	ldr	r2, [r0, #60]	; 0x3c
   22468:	it	eq
   2246a:	cmpeq	r6, r4
   2246c:	itt	cc
   2246e:	movcc	r4, r6
   22470:	movcc	r5, r7
   22472:	cmp.w	sl, #0
   22476:	beq.n	224a0 <btrfs_lookup_block_group@@Base+0x164>
   22478:	adds	r3, r3, r4
   2247a:	adc.w	r1, r5, r1
   2247e:	strd	r3, r1, [r0, #88]	; 0x58
   22482:	ldrd	r3, r1, [r2, #24]
   22486:	adds	r3, r3, r4
   22488:	adc.w	r1, r5, r1
   2248c:	strd	r3, r1, [r2, #24]
   22490:	ldrd	r3, r2, [r8, #328]	; 0x148
   22494:	adds	r3, r3, r4
   22496:	adc.w	r2, r5, r2
   2249a:	strd	r3, r2, [r8, #328]	; 0x148
   2249e:	b.n	22436 <btrfs_lookup_block_group@@Base+0xfa>
   224a0:	subs	r3, r3, r4
   224a2:	sbc.w	r1, r1, r5
   224a6:	strd	r3, r1, [r0, #88]	; 0x58
   224aa:	ldrd	r3, r1, [r2, #24]
   224ae:	subs	r3, r3, r4
   224b0:	sbc.w	r1, r1, r5
   224b4:	strd	r3, r1, [r2, #24]
   224b8:	ldrd	r3, r2, [r8, #328]	; 0x148
   224bc:	subs	r3, r3, r4
   224be:	sbc.w	r2, r2, r5
   224c2:	b.n	2249a <btrfs_lookup_block_group@@Base+0x15e>
   224c4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   224c8:	mov	r9, r0
   224ca:	vpush	{d8}
   224ce:	mov	r7, r2
   224d0:	mov	r8, r3
   224d2:	sub	sp, #28
   224d4:	ldr.w	r1, [r0, #308]	; 0x134
   224d8:	ldr	r0, [sp, #80]	; 0x50
   224da:	ldr	r3, [r1, #120]	; 0x78
   224dc:	ldr	r2, [r1, #124]	; 0x7c
   224de:	cbz	r0, 22514 <btrfs_lookup_block_group@@Base+0x1d8>
   224e0:	ldr	r0, [sp, #72]	; 0x48
   224e2:	adds	r3, r0, r3
   224e4:	ldr	r0, [sp, #76]	; 0x4c
   224e6:	adc.w	r2, r0, r2
   224ea:	str	r3, [r1, #120]	; 0x78
   224ec:	ldr	r3, [pc, #332]	; (2263c <btrfs_lookup_block_group@@Base+0x300>)
   224ee:	str	r2, [r1, #124]	; 0x7c
   224f0:	add	r3, pc
   224f2:	adds	r3, #159	; 0x9f
   224f4:	vmov	s16, r3
   224f8:	ldr	r3, [pc, #324]	; (22640 <btrfs_lookup_block_group@@Base+0x304>)
   224fa:	add	r3, pc
   224fc:	vmov	s17, r3
   22500:	ldrd	r2, r3, [sp, #72]	; 0x48
   22504:	orrs	r3, r2
   22506:	bne.n	22520 <btrfs_lookup_block_group@@Base+0x1e4>
   22508:	movs	r0, #0
   2250a:	add	sp, #28
   2250c:	vpop	{d8}
   22510:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22514:	ldr	r0, [sp, #72]	; 0x48
   22516:	subs	r3, r3, r0
   22518:	ldr	r0, [sp, #76]	; 0x4c
   2251a:	sbc.w	r2, r2, r0
   2251e:	b.n	224ea <btrfs_lookup_block_group@@Base+0x1ae>
   22520:	mov	r2, r7
   22522:	mov	r3, r8
   22524:	mov	r0, r9
   22526:	bl	2233c <btrfs_lookup_block_group@@Base>
   2252a:	mov	r6, r0
   2252c:	cmp	r0, #0
   2252e:	beq.w	22636 <btrfs_lookup_block_group@@Base+0x2fa>
   22532:	ldrd	sl, fp, [r0, #40]	; 0x28
   22536:	ldr.w	r3, [r0, #53]	; 0x35
   2253a:	subs.w	r1, r7, sl
   2253e:	ldr.w	r2, [r0, #49]	; 0x31
   22542:	str	r1, [sp, #16]
   22544:	sbc.w	r1, r8, fp
   22548:	str	r1, [sp, #20]
   2254a:	ldrd	r0, r1, [sp, #16]
   2254e:	cmp	r3, r1
   22550:	vmov	r1, s17
   22554:	it	eq
   22556:	cmpeq	r2, r0
   22558:	ldr	r0, [pc, #232]	; (22644 <btrfs_lookup_block_group@@Base+0x308>)
   2255a:	vmov	r2, s16
   2255e:	ite	cc
   22560:	movcc	r3, #1
   22562:	movcs	r3, #0
   22564:	add	r0, pc
   22566:	str	r3, [sp, #0]
   22568:	mov.w	r3, #1784	; 0x6f8
   2256c:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   22570:	ldrd	r2, r3, [r6, #40]	; 0x28
   22574:	movs	r1, #1
   22576:	str	r1, [sp, #8]
   22578:	ldr.w	r1, [r6, #49]	; 0x31
   2257c:	ldr.w	r0, [r6, #53]	; 0x35
   22580:	adds	r1, r1, r2
   22582:	adc.w	r0, r3, r0
   22586:	adds.w	r1, r1, #4294967295	; 0xffffffff
   2258a:	adc.w	r0, r0, #4294967295	; 0xffffffff
   2258e:	strd	r1, r0, [sp]
   22592:	add.w	r0, r9, #128	; 0x80
   22596:	bl	19d40 <set_extent_bits@@Base>
   2259a:	ldr.w	r3, [r6, #49]	; 0x31
   2259e:	ldr.w	r0, [r6, #53]	; 0x35
   225a2:	adds.w	r3, r3, sl
   225a6:	ldrd	r2, r1, [r6, #72]	; 0x48
   225aa:	adc.w	fp, r0, fp
   225ae:	subs	r4, r3, r7
   225b0:	sbc.w	r5, fp, r8
   225b4:	ldrd	sl, fp, [sp, #72]	; 0x48
   225b8:	ldr	r0, [sp, #80]	; 0x50
   225ba:	cmp	fp, r5
   225bc:	ldr	r3, [r6, #60]	; 0x3c
   225be:	it	eq
   225c0:	cmpeq	sl, r4
   225c2:	itt	cc
   225c4:	movcc	r4, sl
   225c6:	movcc	r5, fp
   225c8:	cbz	r0, 225fa <btrfs_lookup_block_group@@Base+0x2be>
   225ca:	adds.w	sl, r2, r4
   225ce:	adc.w	fp, r1, r5
   225d2:	ldrd	r2, r1, [r3, #16]
   225d6:	adds	r2, r2, r4
   225d8:	adc.w	r1, r5, r1
   225dc:	strd	r2, r1, [r3, #16]
   225e0:	ldr	r3, [sp, #72]	; 0x48
   225e2:	strd	sl, fp, [r6, #72]	; 0x48
   225e6:	subs	r3, r3, r4
   225e8:	str	r3, [sp, #72]	; 0x48
   225ea:	ldr	r3, [sp, #76]	; 0x4c
   225ec:	sbc.w	r3, r3, r5
   225f0:	adds	r7, r7, r4
   225f2:	adc.w	r8, r8, r5
   225f6:	str	r3, [sp, #76]	; 0x4c
   225f8:	b.n	22500 <btrfs_lookup_block_group@@Base+0x1c4>
   225fa:	subs.w	sl, r2, r4
   225fe:	sbc.w	fp, r1, r5
   22602:	ldrd	r2, r1, [r3, #16]
   22606:	subs	r2, r2, r4
   22608:	sbc.w	r1, r1, r5
   2260c:	strd	r2, r1, [r3, #16]
   22610:	ldr	r3, [sp, #84]	; 0x54
   22612:	cmp	r3, #0
   22614:	beq.n	225e0 <btrfs_lookup_block_group@@Base+0x2a4>
   22616:	adds.w	r3, r7, #4294967295	; 0xffffffff
   2261a:	add.w	r0, r9, #96	; 0x60
   2261e:	adc.w	r2, r8, #4294967295	; 0xffffffff
   22622:	adds	r3, r3, r4
   22624:	adc.w	r2, r5, r2
   22628:	strd	r3, r2, [sp]
   2262c:	mov	r2, r7
   2262e:	mov	r3, r8
   22630:	bl	19f6c <set_extent_dirty@@Base>
   22634:	b.n	225e0 <btrfs_lookup_block_group@@Base+0x2a4>
   22636:	mov.w	r0, #4294967295	; 0xffffffff
   2263a:	b.n	2250a <btrfs_lookup_block_group@@Base+0x1ce>
   2263c:	cdp2	0, 0, cr0, cr5, cr1, {0}
   22640:			; <UNDEFINED> instruction: 0xf6db0001
   22644:			; <UNDEFINED> instruction: 0xf78f0001
   22648:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2264c:	sub	sp, #108	; 0x6c
   2264e:	add.w	fp, r0, #128	; 0x80
   22652:	mov	r5, r1
   22654:	strd	r2, r3, [sp, #16]
   22658:	ldr	r2, [pc, #504]	; (22854 <btrfs_lookup_block_group@@Base+0x518>)
   2265a:	ldr	r6, [sp, #144]	; 0x90
   2265c:	ldr	r3, [pc, #504]	; (22858 <btrfs_lookup_block_group@@Base+0x51c>)
   2265e:	add	r2, pc
   22660:	ands.w	r8, r6, #1
   22664:	mov.w	r4, r6, asr #31
   22668:	ldr	r3, [r2, r3]
   2266a:	it	ne
   2266c:	movne.w	r8, #2
   22670:	lsls	r2, r6, #29
   22672:	ldr	r3, [r3, #0]
   22674:	str	r3, [sp, #100]	; 0x64
   22676:	mov.w	r3, #0
   2267a:	it	mi
   2267c:	orrmi.w	r8, r8, #4
   22680:	mov	r3, r6
   22682:	strd	r3, r4, [sp, #24]
   22686:	lsls	r3, r6, #30
   22688:	ldrd	r3, r4, [sp, #16]
   2268c:	it	mi
   2268e:	orrmi.w	r8, r8, #16
   22692:	orrs	r3, r4
   22694:	bne.n	2274e <btrfs_lookup_block_group@@Base+0x412>
   22696:	cmp	r5, #0
   22698:	bne.w	227be <btrfs_lookup_block_group@@Base+0x482>
   2269c:	ldrd	r9, sl, [sp, #16]
   226a0:	movs	r5, #0
   226a2:	add	r3, sp, #80	; 0x50
   226a4:	str	r3, [sp, #32]
   226a6:	add	r3, sp, #72	; 0x48
   226a8:	str	r3, [sp, #40]	; 0x28
   226aa:	ldr	r3, [sp, #32]
   226ac:	mov	r2, r9
   226ae:	mov	r0, fp
   226b0:	str.w	r8, [sp, #8]
   226b4:	str	r3, [sp, #4]
   226b6:	ldr	r3, [sp, #40]	; 0x28
   226b8:	str	r3, [sp, #0]
   226ba:	mov	r3, sl
   226bc:	bl	19f9c <find_first_extent_bit@@Base>
   226c0:	cmp	r0, #0
   226c2:	bne.w	22840 <btrfs_lookup_block_group@@Base+0x504>
   226c6:	add	r3, sp, #88	; 0x58
   226c8:	mov	r0, fp
   226ca:	str	r3, [sp, #0]
   226cc:	ldrd	r2, r3, [sp, #72]	; 0x48
   226d0:	bl	1a078 <get_state_private@@Base>
   226d4:	cmp	r0, #0
   226d6:	bne.w	22840 <btrfs_lookup_block_group@@Base+0x504>
   226da:	ldr	r4, [sp, #88]	; 0x58
   226dc:	ldrd	r3, r2, [r4, #40]	; 0x28
   226e0:	ldr.w	r6, [r4, #49]	; 0x31
   226e4:	ldr.w	r7, [r4, #53]	; 0x35
   226e8:	adds.w	r9, r6, r3
   226ec:	ldr	r3, [r4, #108]	; 0x6c
   226ee:	adc.w	sl, r7, r2
   226f2:	cmp	r3, #0
   226f4:	bne.n	226aa <btrfs_lookup_block_group@@Base+0x36e>
   226f6:	ldrd	r2, r3, [r4, #96]	; 0x60
   226fa:	ldr	r1, [sp, #24]
   226fc:	ands	r2, r1
   226fe:	str	r2, [sp, #48]	; 0x30
   22700:	ldr	r2, [sp, #28]
   22702:	ands	r3, r2
   22704:	str	r3, [sp, #52]	; 0x34
   22706:	ldrd	r0, r1, [sp, #48]	; 0x30
   2270a:	ldrd	r2, r3, [sp, #24]
   2270e:	cmp	r3, r1
   22710:	it	eq
   22712:	cmpeq	r2, r0
   22714:	bne.n	226aa <btrfs_lookup_block_group@@Base+0x36e>
   22716:	ldr	r3, [r4, #72]	; 0x48
   22718:	str	r3, [sp, #64]	; 0x40
   2271a:	ldr	r3, [r4, #76]	; 0x4c
   2271c:	str	r3, [sp, #68]	; 0x44
   2271e:	cbnz	r5, 2272e <btrfs_lookup_block_group@@Base+0x3f2>
   22720:	mov	r0, r6
   22722:	mov	r1, r7
   22724:	movs	r2, #10
   22726:	bl	34f48 <div_factor@@Base>
   2272a:	mov	r6, r0
   2272c:	mov	r7, r1
   2272e:	ldrd	r3, r2, [r4, #88]	; 0x58
   22732:	ldr	r1, [sp, #64]	; 0x40
   22734:	adds	r3, r1, r3
   22736:	str	r3, [sp, #56]	; 0x38
   22738:	ldr	r3, [sp, #68]	; 0x44
   2273a:	adc.w	r3, r2, r3
   2273e:	str	r3, [sp, #60]	; 0x3c
   22740:	ldrd	r2, r3, [sp, #56]	; 0x38
   22744:	cmp	r3, r7
   22746:	it	eq
   22748:	cmpeq	r2, r6
   2274a:	bcs.n	226aa <btrfs_lookup_block_group@@Base+0x36e>
   2274c:	b.n	227aa <btrfs_lookup_block_group@@Base+0x46e>
   2274e:	ldrd	r2, r3, [sp, #16]
   22752:	bl	2233c <btrfs_lookup_block_group@@Base>
   22756:	mov	r4, r0
   22758:	cmp	r0, #0
   2275a:	beq.n	22696 <btrfs_lookup_block_group@@Base+0x35a>
   2275c:	ldr	r3, [r0, #108]	; 0x6c
   2275e:	cmp	r3, #0
   22760:	bne.n	22696 <btrfs_lookup_block_group@@Base+0x35a>
   22762:	ldrd	r0, r1, [r0, #96]	; 0x60
   22766:	and.w	r2, r6, r0
   2276a:	ldr	r0, [sp, #28]
   2276c:	and.w	r3, r0, r1
   22770:	asrs	r1, r6, #31
   22772:	cmp	r1, r3
   22774:	it	eq
   22776:	cmpeq	r6, r2
   22778:	bne.n	22696 <btrfs_lookup_block_group@@Base+0x35a>
   2277a:	ldrd	r2, r1, [r4, #88]	; 0x58
   2277e:	ldrd	r3, r0, [r4, #72]	; 0x48
   22782:	adds	r3, r3, r2
   22784:	mov.w	r2, #10
   22788:	str	r3, [sp, #32]
   2278a:	adc.w	r3, r0, r1
   2278e:	str	r3, [sp, #36]	; 0x24
   22790:	ldr.w	r0, [r4, #49]	; 0x31
   22794:	ldr.w	r1, [r4, #53]	; 0x35
   22798:	bl	34f48 <div_factor@@Base>
   2279c:	ldrd	r2, r3, [sp, #32]
   227a0:	cmp	r3, r1
   227a2:	it	eq
   227a4:	cmpeq	r2, r0
   227a6:	bcs.w	22696 <btrfs_lookup_block_group@@Base+0x35a>
   227aa:	ldr	r2, [pc, #176]	; (2285c <btrfs_lookup_block_group@@Base+0x520>)
   227ac:	ldr	r3, [pc, #168]	; (22858 <btrfs_lookup_block_group@@Base+0x51c>)
   227ae:	add	r2, pc
   227b0:	ldr	r3, [r2, r3]
   227b2:	ldr	r2, [r3, #0]
   227b4:	ldr	r3, [sp, #100]	; 0x64
   227b6:	eors	r2, r3
   227b8:	beq.n	2284c <btrfs_lookup_block_group@@Base+0x510>
   227ba:	blx	88e4 <__stack_chk_fail@plt>
   227be:	ldr	r3, [r5, #108]	; 0x6c
   227c0:	cbnz	r3, 22820 <btrfs_lookup_block_group@@Base+0x4e4>
   227c2:	ldrd	r0, r1, [r5, #96]	; 0x60
   227c6:	and.w	r2, r6, r0
   227ca:	ldr	r0, [sp, #28]
   227cc:	and.w	r3, r0, r1
   227d0:	ldrd	r0, r1, [sp, #24]
   227d4:	cmp	r1, r3
   227d6:	it	eq
   227d8:	cmpeq	r0, r2
   227da:	bne.n	22820 <btrfs_lookup_block_group@@Base+0x4e4>
   227dc:	ldrd	r2, r1, [r5, #88]	; 0x58
   227e0:	ldrd	r3, r0, [r5, #72]	; 0x48
   227e4:	adds	r3, r3, r2
   227e6:	mov.w	r2, #10
   227ea:	str	r3, [sp, #40]	; 0x28
   227ec:	adc.w	r3, r0, r1
   227f0:	str	r3, [sp, #44]	; 0x2c
   227f2:	ldr.w	r0, [r5, #49]	; 0x31
   227f6:	ldr.w	r1, [r5, #53]	; 0x35
   227fa:	bl	34f48 <div_factor@@Base>
   227fe:	ldrd	r3, r4, [sp, #40]	; 0x28
   22802:	cmp	r4, r1
   22804:	it	eq
   22806:	cmpeq	r3, r0
   22808:	bcc.n	22848 <btrfs_lookup_block_group@@Base+0x50c>
   2280a:	ldrd	r1, r0, [r5, #40]	; 0x28
   2280e:	ldr.w	r3, [r5, #49]	; 0x31
   22812:	ldr.w	r2, [r5, #53]	; 0x35
   22816:	adds.w	r9, r3, r1
   2281a:	adc.w	sl, r2, r0
   2281e:	b.n	226a0 <btrfs_lookup_block_group@@Base+0x364>
   22820:	ldrd	r9, sl, [r5, #40]	; 0x28
   22824:	ldrd	r3, r4, [sp, #16]
   22828:	cmp	sl, r4
   2282a:	it	eq
   2282c:	cmpeq	r9, r3
   2282e:	bcs.w	226a0 <btrfs_lookup_block_group@@Base+0x364>
   22832:	mov	r9, r3
   22834:	mov	sl, r4
   22836:	b.n	226a0 <btrfs_lookup_block_group@@Base+0x364>
   22838:	ldrd	r9, sl, [sp, #16]
   2283c:	movs	r5, #1
   2283e:	b.n	226aa <btrfs_lookup_block_group@@Base+0x36e>
   22840:	cmp	r5, #0
   22842:	beq.n	22838 <btrfs_lookup_block_group@@Base+0x4fc>
   22844:	movs	r4, #0
   22846:	b.n	227aa <btrfs_lookup_block_group@@Base+0x46e>
   22848:	mov	r4, r5
   2284a:	b.n	227aa <btrfs_lookup_block_group@@Base+0x46e>
   2284c:	mov	r0, r4
   2284e:	add	sp, #108	; 0x6c
   22850:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22854:	str	r2, [r2, #108]	; 0x6c
   22856:	movs	r4, r0
   22858:	lsls	r4, r7, #9
   2285a:	movs	r0, r0
   2285c:	str	r2, [r0, #88]	; 0x58
   2285e:	movs	r4, r0

00022860 <hash_extent_data_ref@@Base>:
   22860:	push	{r4, r5, r6, lr}
   22862:	mov	r6, r2
   22864:	ldr	r2, [pc, #100]	; (228cc <hash_extent_data_ref@@Base+0x6c>)
   22866:	mov	r5, r3
   22868:	ldr	r3, [pc, #100]	; (228d0 <hash_extent_data_ref@@Base+0x70>)
   2286a:	sub	sp, #24
   2286c:	add	r2, pc
   2286e:	ldr	r3, [r2, r3]
   22870:	movs	r2, #8
   22872:	ldr	r3, [r3, #0]
   22874:	str	r3, [sp, #20]
   22876:	mov.w	r3, #0
   2287a:	strd	r0, r1, [sp, #8]
   2287e:	add.w	r1, sp, r2
   22882:	mov.w	r0, #4294967295	; 0xffffffff
   22886:	str	r1, [sp, #4]
   22888:	bl	1a87e <crc32c_le@@Base>
   2288c:	ldr	r1, [sp, #4]
   2288e:	movs	r2, #8
   22890:	strd	r6, r5, [sp, #8]
   22894:	mov	r4, r0
   22896:	mov.w	r0, #4294967295	; 0xffffffff
   2289a:	bl	1a87e <crc32c_le@@Base>
   2289e:	ldrd	r2, r3, [sp, #40]	; 0x28
   228a2:	ldr	r1, [sp, #4]
   228a4:	strd	r2, r3, [sp, #8]
   228a8:	movs	r2, #8
   228aa:	bl	1a87e <crc32c_le@@Base>
   228ae:	ldr	r2, [pc, #36]	; (228d4 <hash_extent_data_ref@@Base+0x74>)
   228b0:	ldr	r3, [pc, #28]	; (228d0 <hash_extent_data_ref@@Base+0x70>)
   228b2:	lsrs	r1, r4, #1
   228b4:	add	r2, pc
   228b6:	ldr	r3, [r2, r3]
   228b8:	ldr	r2, [r3, #0]
   228ba:	ldr	r3, [sp, #20]
   228bc:	eors	r2, r3
   228be:	eor.w	r0, r0, r4, lsl #31
   228c2:	beq.n	228c8 <hash_extent_data_ref@@Base+0x68>
   228c4:	blx	88e4 <__stack_chk_fail@plt>
   228c8:	add	sp, #24
   228ca:	pop	{r4, r5, r6, pc}
   228cc:	str	r4, [r0, #76]	; 0x4c
   228ce:	movs	r4, r0
   228d0:	lsls	r4, r7, #9
   228d2:	movs	r0, r0
   228d4:	str	r4, [r7, #68]	; 0x44
   228d6:	movs	r4, r0
   228d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228dc:	sub	sp, #68	; 0x44
   228de:	mov	r5, r2
   228e0:	ldr	r2, [pc, #836]	; (22c28 <hash_extent_data_ref@@Base+0x3c8>)
   228e2:	str	r3, [sp, #36]	; 0x24
   228e4:	mov	r4, r0
   228e6:	ldr	r3, [pc, #836]	; (22c2c <hash_extent_data_ref@@Base+0x3cc>)
   228e8:	add	r2, pc
   228ea:	str	r1, [sp, #28]
   228ec:	mov.w	r9, #0
   228f0:	ldrd	sl, fp, [sp, #112]	; 0x70
   228f4:	ldr	r3, [r2, r3]
   228f6:	ldr	r3, [r3, #0]
   228f8:	str	r3, [sp, #60]	; 0x3c
   228fa:	mov.w	r3, #0
   228fe:	ldr.w	r3, [r1, #464]	; 0x1d0
   22902:	ldr.w	r3, [r3, #308]	; 0x134
   22906:	ldr.w	r3, [r3, #188]	; 0xbc
   2290a:	str.w	sl, [sp, #49]	; 0x31
   2290e:	and.w	r8, r3, #256	; 0x100
   22912:	ldrd	r2, r3, [sp, #104]	; 0x68
   22916:	str.w	fp, [sp, #53]	; 0x35
   2291a:	strd	r2, r3, [sp, #40]	; 0x28
   2291e:	movs	r3, #168	; 0xa8
   22920:	strb.w	r3, [sp, #48]	; 0x30
   22924:	ldrd	r2, r3, [sp, #136]	; 0x88
   22928:	cmp	r3, #0
   2292a:	it	eq
   2292c:	cmpeq.w	r2, #256	; 0x100
   22930:	ldrd	r2, r3, [sp, #120]	; 0x78
   22934:	bcs.n	229bc <hash_extent_data_ref@@Base+0x15c>
   22936:	orrs	r3, r2
   22938:	ite	ne
   2293a:	movne	r3, #182	; 0xb6
   2293c:	moveq	r3, #176	; 0xb0
   2293e:	str	r3, [sp, #24]
   22940:	ldr	r3, [sp, #152]	; 0x98
   22942:	cmp	r3, #0
   22944:	beq.w	22c18 <hash_extent_data_ref@@Base+0x3b8>
   22948:	ldr	r0, [sp, #24]
   2294a:	bl	21dc4 <btrfs_create_tree@@Base+0x5c0>
   2294e:	ldrd	r2, r3, [sp, #136]	; 0x88
   22952:	cmp	r3, #0
   22954:	it	eq
   22956:	cmpeq.w	r2, #256	; 0x100
   2295a:	str	r0, [sp, #20]
   2295c:	bcs.n	229d2 <hash_extent_data_ref@@Base+0x172>
   2295e:	orrs.w	r3, r8, r9
   22962:	beq.n	229d2 <hash_extent_data_ref@@Base+0x172>
   22964:	movs	r3, #169	; 0xa9
   22966:	strb.w	r3, [sp, #48]	; 0x30
   2296a:	ldr	r3, [sp, #136]	; 0x88
   2296c:	mov.w	r8, #1
   22970:	str.w	r3, [sp, #49]	; 0x31
   22974:	ldr	r3, [sp, #140]	; 0x8c
   22976:	str.w	r3, [sp, #53]	; 0x35
   2297a:	add	r6, sp, #40	; 0x28
   2297c:	movs	r7, #1
   2297e:	mov.w	r9, #168	; 0xa8
   22982:	ldr	r3, [sp, #20]
   22984:	mov	r2, r6
   22986:	ldr	r1, [sp, #28]
   22988:	mov	r0, r4
   2298a:	str	r7, [sp, #4]
   2298c:	str	r3, [sp, #0]
   2298e:	mov	r3, r5
   22990:	bl	1d6c0 <btrfs_search_slot@@Base>
   22994:	cmp	r0, #0
   22996:	blt.n	22a6a <hash_extent_data_ref@@Base+0x20a>
   22998:	beq.n	22a10 <hash_extent_data_ref@@Base+0x1b0>
   2299a:	cmp.w	r8, #0
   2299e:	beq.n	22a46 <hash_extent_data_ref@@Base+0x1e6>
   229a0:	ldr	r2, [r5, #32]
   229a2:	cbnz	r2, 229d8 <hash_extent_data_ref@@Base+0x178>
   229a4:	mov	r0, r5
   229a6:	strb.w	r9, [sp, #48]	; 0x30
   229aa:	str.w	sl, [sp, #49]	; 0x31
   229ae:	mov.w	r8, #0
   229b2:	str.w	fp, [sp, #53]	; 0x35
   229b6:	bl	1b2dc <btrfs_release_path@@Base>
   229ba:	b.n	22982 <hash_extent_data_ref@@Base+0x122>
   229bc:	orrs	r3, r2
   229be:	ite	ne
   229c0:	movne	r3, #184	; 0xb8
   229c2:	moveq	r3, #178	; 0xb2
   229c4:	str	r3, [sp, #24]
   229c6:	ldr	r3, [sp, #152]	; 0x98
   229c8:	cmp	r3, #0
   229ca:	bne.n	22948 <hash_extent_data_ref@@Base+0xe8>
   229cc:	mov.w	r3, #4294967295	; 0xffffffff
   229d0:	str	r3, [sp, #20]
   229d2:	mov.w	r8, #0
   229d6:	b.n	2297a <hash_extent_data_ref@@Base+0x11a>
   229d8:	subs	r2, #1
   229da:	ldr	r0, [r5, #0]
   229dc:	mov	r1, r6
   229de:	str	r2, [r5, #32]
   229e0:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   229e4:	ldrd	r2, r3, [sp, #40]	; 0x28
   229e8:	ldrd	r0, r1, [sp, #104]	; 0x68
   229ec:	cmp	r3, r1
   229ee:	it	eq
   229f0:	cmpeq	r2, r0
   229f2:	bne.n	229a4 <hash_extent_data_ref@@Base+0x144>
   229f4:	ldrb.w	r3, [sp, #48]	; 0x30
   229f8:	cmp	r3, #168	; 0xa8
   229fa:	bne.n	229a4 <hash_extent_data_ref@@Base+0x144>
   229fc:	ldr.w	r3, [sp, #53]	; 0x35
   22a00:	ldr.w	r2, [sp, #49]	; 0x31
   22a04:	cmp	r3, fp
   22a06:	it	eq
   22a08:	cmpeq	r2, sl
   22a0a:	bne.n	229a4 <hash_extent_data_ref@@Base+0x144>
   22a0c:	mov.w	r8, #0
   22a10:	ldr	r4, [r5, #0]
   22a12:	movs	r3, #25
   22a14:	ldr	r2, [r5, #32]
   22a16:	add.w	r7, r4, #96	; 0x60
   22a1a:	mla	r3, r3, r2, r7
   22a1e:	add.w	r1, r3, #101	; 0x65
   22a22:	ldr.w	r6, [r3, #122]	; 0x7a
   22a26:	cmp	r6, #23
   22a28:	bhi.n	22a80 <hash_extent_data_ref@@Base+0x220>
   22a2a:	ldr	r1, [pc, #516]	; (22c30 <hash_extent_data_ref@@Base+0x3d0>)
   22a2c:	movs	r3, #24
   22a2e:	str	r2, [sp, #0]
   22a30:	movs	r0, #1
   22a32:	add	r1, pc
   22a34:	mov	r2, r6
   22a36:	blx	8c6c <__printf_chk@plt+0x4>
   22a3a:	mov	r0, r4
   22a3c:	bl	284a8 <btrfs_print_leaf@@Base>
   22a40:	mvn.w	r0, #21
   22a44:	b.n	22a6a <hash_extent_data_ref@@Base+0x20a>
   22a46:	ldr.w	r2, [sp, #49]	; 0x31
   22a4a:	movs	r0, #1
   22a4c:	ldr.w	r3, [sp, #53]	; 0x35
   22a50:	ldr	r1, [pc, #480]	; (22c34 <hash_extent_data_ref@@Base+0x3d4>)
   22a52:	strd	r2, r3, [sp, #8]
   22a56:	add	r1, pc
   22a58:	ldrb.w	r3, [sp, #48]	; 0x30
   22a5c:	str	r3, [sp, #0]
   22a5e:	ldrd	r2, r3, [sp, #40]	; 0x28
   22a62:	blx	8c6c <__printf_chk@plt+0x4>
   22a66:	mvn.w	r0, #1
   22a6a:	ldr	r2, [pc, #460]	; (22c38 <hash_extent_data_ref@@Base+0x3d8>)
   22a6c:	ldr	r3, [pc, #444]	; (22c2c <hash_extent_data_ref@@Base+0x3cc>)
   22a6e:	add	r2, pc
   22a70:	ldr	r3, [r2, r3]
   22a72:	ldr	r2, [r3, #0]
   22a74:	ldr	r3, [sp, #60]	; 0x3c
   22a76:	eors	r2, r3
   22a78:	beq.w	22c20 <hash_extent_data_ref@@Base+0x3c0>
   22a7c:	blx	88e4 <__stack_chk_fail@plt>
   22a80:	ldr.w	ip, [r1, #17]
   22a84:	movs	r1, #0
   22a86:	add.w	fp, ip, #101	; 0x65
   22a8a:	add.w	r4, ip, #125	; 0x7d
   22a8e:	add.w	r3, r7, fp
   22a92:	ldr	r0, [r3, #16]
   22a94:	add.w	r3, fp, r6
   22a98:	str	r3, [sp, #32]
   22a9a:	mov	r3, r1
   22a9c:	and.w	r2, r0, #2
   22aa0:	orrs	r3, r2
   22aa2:	beq.n	22b06 <hash_extent_data_ref@@Base+0x2a6>
   22aa4:	cmp.w	r8, #0
   22aa8:	bne.n	22ad0 <hash_extent_data_ref@@Base+0x270>
   22aaa:	ldr	r3, [sp, #32]
   22aac:	add.w	r4, ip, #143	; 0x8f
   22ab0:	ldr	r2, [pc, #392]	; (22c3c <hash_extent_data_ref@@Base+0x3dc>)
   22ab2:	cmp	r3, r4
   22ab4:	ldr	r1, [pc, #392]	; (22c40 <hash_extent_data_ref@@Base+0x3e0>)
   22ab6:	ldr	r0, [pc, #396]	; (22c44 <hash_extent_data_ref@@Base+0x3e4>)
   22ab8:	add	r2, pc
   22aba:	ite	cs
   22abc:	movcs	r3, #0
   22abe:	movcc	r3, #1
   22ac0:	adds	r2, #178	; 0xb2
   22ac2:	str	r3, [sp, #0]
   22ac4:	add	r1, pc
   22ac6:	add	r0, pc
   22ac8:	movw	r3, #943	; 0x3af
   22acc:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   22ad0:	ldr	r3, [sp, #32]
   22ad2:	cmp	r4, r3
   22ad4:	bcc.n	22b16 <hash_extent_data_ref@@Base+0x2b6>
   22ad6:	ldr	r2, [pc, #368]	; (22c48 <hash_extent_data_ref@@Base+0x3e8>)
   22ad8:	it	hi
   22ada:	movhi	r3, #1
   22adc:	ldr	r1, [pc, #364]	; (22c4c <hash_extent_data_ref@@Base+0x3ec>)
   22ade:	it	ls
   22ae0:	movls	r3, #0
   22ae2:	ldr	r0, [pc, #364]	; (22c50 <hash_extent_data_ref@@Base+0x3f0>)
   22ae4:	add	r2, pc
   22ae6:	str	r3, [sp, #0]
   22ae8:	adds	r2, #178	; 0xb2
   22aea:	add	r1, pc
   22aec:	add	r0, pc
   22aee:	movw	r3, #953	; 0x3b9
   22af2:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   22af6:	ldr	r3, [sp, #152]	; 0x98
   22af8:	cmp	r3, #0
   22afa:	bne.n	22bca <hash_extent_data_ref@@Base+0x36a>
   22afc:	mvn.w	r0, #1
   22b00:	ldr	r3, [sp, #36]	; 0x24
   22b02:	str	r4, [r3, #0]
   22b04:	b.n	22a6a <hash_extent_data_ref@@Base+0x20a>
   22b06:	and.w	r2, r0, #1
   22b0a:	mov	r3, r1
   22b0c:	orrs	r3, r2
   22b0e:	bne.n	22ad0 <hash_extent_data_ref@@Base+0x270>
   22b10:	mvn.w	r0, #4
   22b14:	b.n	22a6a <hash_extent_data_ref@@Base+0x20a>
   22b16:	ldrb.w	sl, [r7, r4]
   22b1a:	adds	r1, r7, r4
   22b1c:	ldr	r3, [sp, #24]
   22b1e:	cmp	sl, r3
   22b20:	bgt.n	22af6 <hash_extent_data_ref@@Base+0x296>
   22b22:	bge.n	22b2e <hash_extent_data_ref@@Base+0x2ce>
   22b24:	mov	r0, sl
   22b26:	bl	21dc4 <btrfs_create_tree@@Base+0x5c0>
   22b2a:	add	r4, r0
   22b2c:	b.n	22ad0 <hash_extent_data_ref@@Base+0x270>
   22b2e:	cmp.w	sl, #178	; 0xb2
   22b32:	bne.n	22ba4 <hash_extent_data_ref@@Base+0x344>
   22b34:	adds	r3, r4, #1
   22b36:	add.w	ip, r7, r3
   22b3a:	ldr.w	r8, [r7, r3]
   22b3e:	ldr.w	r9, [ip, #4]
   22b42:	ldr.w	r2, [ip, #8]
   22b46:	ldr.w	r3, [ip, #12]
   22b4a:	ldr.w	r0, [ip, #16]
   22b4e:	ldr.w	r1, [ip, #20]
   22b52:	ldrd	fp, ip, [sp, #128]	; 0x80
   22b56:	cmp	ip, r9
   22b58:	it	eq
   22b5a:	cmpeq	fp, r8
   22b5c:	bne.n	22b76 <hash_extent_data_ref@@Base+0x316>
   22b5e:	ldrd	fp, ip, [sp, #136]	; 0x88
   22b62:	cmp	ip, r3
   22b64:	it	eq
   22b66:	cmpeq	fp, r2
   22b68:	bne.n	22b76 <hash_extent_data_ref@@Base+0x316>
   22b6a:	ldrd	fp, ip, [sp, #144]	; 0x90
   22b6e:	cmp	ip, r1
   22b70:	it	eq
   22b72:	cmpeq	fp, r0
   22b74:	beq.n	22c14 <hash_extent_data_ref@@Base+0x3b4>
   22b76:	strd	r0, r1, [sp]
   22b7a:	mov	r0, r8
   22b7c:	mov	r1, r9
   22b7e:	bl	22860 <hash_extent_data_ref@@Base>
   22b82:	ldrd	r2, r3, [sp, #144]	; 0x90
   22b86:	strd	r2, r3, [sp]
   22b8a:	ldrd	r2, r3, [sp, #136]	; 0x88
   22b8e:	mov	r8, r0
   22b90:	mov	r9, r1
   22b92:	ldrd	r0, r1, [sp, #128]	; 0x80
   22b96:	bl	22860 <hash_extent_data_ref@@Base>
   22b9a:	cmp	r9, r1
   22b9c:	it	eq
   22b9e:	cmpeq	r8, r0
   22ba0:	bcs.n	22b24 <hash_extent_data_ref@@Base+0x2c4>
   22ba2:	b.n	22af6 <hash_extent_data_ref@@Base+0x296>
   22ba4:	ldr.w	r2, [r1, #1]!
   22ba8:	ldr	r3, [r1, #4]
   22baa:	ldrd	r0, r1, [sp, #120]	; 0x78
   22bae:	orrs	r1, r0
   22bb0:	ite	ne
   22bb2:	ldrdne	r0, r1, [sp, #120]	; 0x78
   22bb6:	ldrdeq	r0, r1, [sp, #128]	; 0x80
   22bba:	cmp	r1, r3
   22bbc:	it	eq
   22bbe:	cmpeq	r0, r2
   22bc0:	beq.n	22c14 <hash_extent_data_ref@@Base+0x3b4>
   22bc2:	cmp	r3, r1
   22bc4:	it	eq
   22bc6:	cmpeq	r2, r0
   22bc8:	b.n	22ba0 <hash_extent_data_ref@@Base+0x340>
   22bca:	ldr	r3, [sp, #20]
   22bcc:	add	r3, r6
   22bce:	mov	r6, r3
   22bd0:	ldr	r3, [sp, #28]
   22bd2:	ldr.w	r3, [r3, #464]	; 0x1d0
   22bd6:	ldr.w	r3, [r3, #384]	; 0x180
   22bda:	subs	r3, #101	; 0x65
   22bdc:	lsrs	r3, r3, #4
   22bde:	subs	r3, #25
   22be0:	cmp	r6, r3
   22be2:	bcc.n	22bea <hash_extent_data_ref@@Base+0x38a>
   22be4:	mvn.w	r0, #10
   22be8:	b.n	22a6a <hash_extent_data_ref@@Base+0x20a>
   22bea:	add	r1, sp, #40	; 0x28
   22bec:	mov	r0, r5
   22bee:	bl	348f0 <find_next_key@@Base>
   22bf2:	cmp	r0, #0
   22bf4:	bne.n	22afc <hash_extent_data_ref@@Base+0x29c>
   22bf6:	ldrd	r2, r3, [sp, #40]	; 0x28
   22bfa:	ldrd	r0, r1, [sp, #104]	; 0x68
   22bfe:	cmp	r3, r1
   22c00:	it	eq
   22c02:	cmpeq	r2, r0
   22c04:	bne.w	22afc <hash_extent_data_ref@@Base+0x29c>
   22c08:	ldrb.w	r3, [sp, #48]	; 0x30
   22c0c:	cmp	r3, #191	; 0xbf
   22c0e:	bhi.w	22afc <hash_extent_data_ref@@Base+0x29c>
   22c12:	b.n	22be4 <hash_extent_data_ref@@Base+0x384>
   22c14:	movs	r0, #0
   22c16:	b.n	22b00 <hash_extent_data_ref@@Base+0x2a0>
   22c18:	mov.w	r3, #4294967295	; 0xffffffff
   22c1c:	str	r3, [sp, #20]
   22c1e:	b.n	2295e <hash_extent_data_ref@@Base+0xfe>
   22c20:	add	sp, #68	; 0x44
   22c22:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22c26:	nop
   22c28:	str	r0, [r1, #68]	; 0x44
   22c2a:	movs	r4, r0
   22c2c:	lsls	r4, r7, #9
   22c2e:	movs	r0, r0
   22c30:	ssat	r0, #2, r4
   22c34:			; <UNDEFINED> instruction: 0xf2bf0001
   22c38:	str	r2, [r0, #44]	; 0x2c
   22c3a:	movs	r4, r0
   22c3c:	ldrh.w	r0, [sp, r1]
   22c40:	adds.w	r0, r1, #1
   22c44:	stmia	r4!, {r3, r4, r5}
   22c46:	movs	r1, r0
   22c48:	ldrb.w	r0, [r1, r1]
   22c4c:			; <UNDEFINED> instruction: 0xf0eb0001
   22c50:	stmia	r4!, {r1, r4}
   22c52:	movs	r1, r0
   22c54:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c58:	mov	r6, r0
   22c5a:	vpush	{d8}
   22c5e:	ldr.w	r1, [pc, #2168]	; 234d8 <hash_extent_data_ref@@Base+0xc78>
   22c62:	ldr.w	r0, [pc, #2168]	; 234dc <hash_extent_data_ref@@Base+0xc7c>
   22c66:	add	r1, pc
   22c68:	sub	sp, #148	; 0x94
   22c6a:	add	r0, pc
   22c6c:	str	r1, [sp, #72]	; 0x48
   22c6e:	ldr.w	r1, [pc, #2160]	; 234e0 <hash_extent_data_ref@@Base+0xc80>
   22c72:	strd	r2, r3, [sp, #56]	; 0x38
   22c76:	ldrd	r8, r9, [sp, #200]	; 0xc8
   22c7a:	ldr	r1, [r0, r1]
   22c7c:	ldr	r0, [r6, #0]
   22c7e:	ldr	r1, [r1, #0]
   22c80:	str	r1, [sp, #140]	; 0x8c
   22c82:	mov.w	r1, #0
   22c86:	ldr.w	sl, [r0, #24]
   22c8a:	ldr.w	r1, [sl, #464]	; 0x1d0
   22c8e:	ldr.w	r1, [r1, #308]	; 0x134
   22c92:	ldr.w	r5, [r1, #188]	; 0xbc
   22c96:	ldr.w	r1, [r0, #372]	; 0x174
   22c9a:	cbz	r1, 22cc6 <hash_extent_data_ref@@Base+0x466>
   22c9c:	ldrd	fp, ip, [sp, #224]	; 0xe0
   22ca0:	movs	r4, #1
   22ca2:	strd	r8, r9, [sp, #8]
   22ca6:	str	r4, [sp, #40]	; 0x28
   22ca8:	strd	fp, ip, [sp, #32]
   22cac:	ldrd	fp, ip, [sp, #216]	; 0xd8
   22cb0:	strd	fp, ip, [sp, #24]
   22cb4:	ldrd	fp, ip, [sp, #208]	; 0xd0
   22cb8:	strd	fp, ip, [sp, #16]
   22cbc:	ldrd	fp, ip, [sp, #192]	; 0xc0
   22cc0:	strd	fp, ip, [sp]
   22cc4:	blx	r1
   22cc6:	bl	1b2d4 <btrfs_alloc_path@@Base>
   22cca:	mov	r4, r0
   22ccc:	cmp	r0, #0
   22cce:	beq.w	2346a <hash_extent_data_ref@@Base+0xc0a>
   22cd2:	movs	r3, #1
   22cd4:	strb.w	r3, [r0, #64]	; 0x40
   22cd8:	ldrd	r2, r3, [sp, #216]	; 0xd8
   22cdc:	movs	r7, #0
   22cde:	ldr.w	r1, [pc, #2052]	; 234e4 <hash_extent_data_ref@@Base+0xc84>
   22ce2:	cmp	r3, #0
   22ce4:	ldr.w	r0, [pc, #2048]	; 234e8 <hash_extent_data_ref@@Base+0xc88>
   22ce8:	it	eq
   22cea:	cmpeq.w	r2, #256	; 0x100
   22cee:	ldr.w	r2, [pc, #2044]	; 234ec <hash_extent_data_ref@@Base+0xc8c>
   22cf2:	add	r1, pc
   22cf4:	add	r0, pc
   22cf6:	add	r2, pc
   22cf8:	ite	cs
   22cfa:	movcs	r3, #1
   22cfc:	movcc	r3, #0
   22cfe:	add.w	r2, r2, #207	; 0xcf
   22d02:	str	r3, [sp, #76]	; 0x4c
   22d04:	ite	cc
   22d06:	ubfxcc	r3, r5, #8, #1
   22d0a:	movcs	r3, #0
   22d0c:	str	r7, [sp, #0]
   22d0e:	str	r3, [sp, #64]	; 0x40
   22d10:	movw	r3, #1959	; 0x7a7
   22d14:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   22d18:	ldrd	r2, r3, [sp, #224]	; 0xe0
   22d1c:	mov	r1, sl
   22d1e:	mov	r0, r6
   22d20:	str	r7, [sp, #48]	; 0x30
   22d22:	strd	r2, r3, [sp, #40]	; 0x28
   22d26:	ldrd	r2, r3, [sp, #216]	; 0xd8
   22d2a:	strd	r8, r9, [sp, #16]
   22d2e:	strd	r2, r3, [sp, #32]
   22d32:	ldrd	r2, r3, [sp, #208]	; 0xd0
   22d36:	strd	r2, r3, [sp, #24]
   22d3a:	ldrd	r2, r3, [sp, #192]	; 0xc0
   22d3e:	strd	r2, r3, [sp, #8]
   22d42:	ldrd	r2, r3, [sp, #56]	; 0x38
   22d46:	strd	r2, r3, [sp]
   22d4a:	add	r3, sp, #96	; 0x60
   22d4c:	mov	r2, r4
   22d4e:	bl	228d8 <hash_extent_data_ref@@Base+0x78>
   22d52:	adds	r3, r0, #2
   22d54:	mov	r5, r0
   22d56:	bne.w	22e6a <hash_extent_data_ref@@Base+0x60a>
   22d5a:	mov	r0, r4
   22d5c:	bl	1b2dc <btrfs_release_path@@Base>
   22d60:	ldrd	r2, r3, [sp, #216]	; 0xd8
   22d64:	str	r7, [sp, #96]	; 0x60
   22d66:	cmp	r3, #0
   22d68:	it	eq
   22d6a:	cmpeq.w	r2, #256	; 0x100
   22d6e:	ldrd	r2, r3, [sp, #56]	; 0x38
   22d72:	strd	r2, r3, [sp, #120]	; 0x78
   22d76:	bcs.n	22e2e <hash_extent_data_ref@@Base+0x5ce>
   22d78:	orrs.w	r3, r8, r9
   22d7c:	add.w	r3, sp, #129	; 0x81
   22d80:	beq.n	22e1c <hash_extent_data_ref@@Base+0x5bc>
   22d82:	movs	r2, #182	; 0xb6
   22d84:	str.w	r8, [sp, #129]	; 0x81
   22d88:	strb.w	r2, [sp, #128]	; 0x80
   22d8c:	str.w	r9, [r3, #4]
   22d90:	mov.w	r3, #4294967295	; 0xffffffff
   22d94:	movs	r5, #1
   22d96:	add	r2, sp, #120	; 0x78
   22d98:	strd	r3, r5, [sp]
   22d9c:	mov	r1, sl
   22d9e:	mov	r3, r4
   22da0:	mov	r0, r6
   22da2:	bl	1d6c0 <btrfs_search_slot@@Base>
   22da6:	subs	r5, r0, #0
   22da8:	ble.n	22e6a <hash_extent_data_ref@@Base+0x60a>
   22daa:	ldr	r2, [sp, #72]	; 0x48
   22dac:	mvn.w	r5, #4
   22db0:	ldr.w	r3, [pc, #1852]	; 234f0 <hash_extent_data_ref@@Base+0xc90>
   22db4:	ldr	r3, [r2, r3]
   22db6:	ldrd	r1, r2, [sp, #224]	; 0xe0
   22dba:	strd	r8, r9, [sp, #8]
   22dbe:	strd	r1, r2, [sp, #32]
   22dc2:	ldrd	r1, r2, [sp, #216]	; 0xd8
   22dc6:	strd	r1, r2, [sp, #24]
   22dca:	ldrd	r1, r2, [sp, #208]	; 0xd0
   22dce:	strd	r1, r2, [sp, #16]
   22dd2:	ldrd	r1, r2, [sp, #56]	; 0x38
   22dd6:	strd	r1, r2, [sp]
   22dda:	movs	r1, #1
   22ddc:	ldr.w	r2, [pc, #1812]	; 234f4 <hash_extent_data_ref@@Base+0xc94>
   22de0:	ldr	r0, [r3, #0]
   22de2:	add	r2, pc
   22de4:	blx	8ca0 <__fprintf_chk@plt+0x4>
   22de8:	ldr.w	r1, [pc, #1804]	; 234f8 <hash_extent_data_ref@@Base+0xc98>
   22dec:	ldr	r2, [r4, #32]
   22dee:	movs	r0, #1
   22df0:	add	r1, pc
   22df2:	blx	8c6c <__printf_chk@plt+0x4>
   22df6:	ldr	r0, [r4, #0]
   22df8:	bl	284a8 <btrfs_print_leaf@@Base>
   22dfc:	mov	r0, r4
   22dfe:	bl	1b302 <btrfs_free_path@@Base>
   22e02:	ldr.w	r2, [pc, #1784]	; 234fc <hash_extent_data_ref@@Base+0xc9c>
   22e06:	ldr.w	r3, [pc, #1752]	; 234e0 <hash_extent_data_ref@@Base+0xc80>
   22e0a:	add	r2, pc
   22e0c:	ldr	r3, [r2, r3]
   22e0e:	ldr	r2, [r3, #0]
   22e10:	ldr	r3, [sp, #140]	; 0x8c
   22e12:	eors	r2, r3
   22e14:	beq.w	234ca <hash_extent_data_ref@@Base+0xc6a>
   22e18:	blx	88e4 <__stack_chk_fail@plt>
   22e1c:	movs	r2, #176	; 0xb0
   22e1e:	strb.w	r2, [sp, #128]	; 0x80
   22e22:	ldr	r2, [sp, #208]	; 0xd0
   22e24:	str.w	r2, [sp, #129]	; 0x81
   22e28:	ldr	r2, [sp, #212]	; 0xd4
   22e2a:	str	r2, [r3, #4]
   22e2c:	b.n	22d90 <hash_extent_data_ref@@Base+0x530>
   22e2e:	orrs.w	r3, r8, r9
   22e32:	beq.n	22e70 <hash_extent_data_ref@@Base+0x610>
   22e34:	movs	r3, #184	; 0xb8
   22e36:	str.w	r8, [sp, #129]	; 0x81
   22e3a:	strb.w	r3, [sp, #128]	; 0x80
   22e3e:	str.w	r9, [sp, #133]	; 0x85
   22e42:	add	r3, sp, #120	; 0x78
   22e44:	vmov	s16, r3
   22e48:	mov.w	r3, #4294967295	; 0xffffffff
   22e4c:	movs	r0, #1
   22e4e:	vmov	r2, s16
   22e52:	mov	r1, sl
   22e54:	strd	r3, r0, [sp]
   22e58:	mov	r3, r4
   22e5a:	mov	r0, r6
   22e5c:	bl	1d6c0 <btrfs_search_slot@@Base>
   22e60:	subs	r5, r0, #0
   22e62:	blt.n	22daa <hash_extent_data_ref@@Base+0x54a>
   22e64:	orrs.w	r3, r8, r9
   22e68:	beq.n	22e94 <hash_extent_data_ref@@Base+0x634>
   22e6a:	cmp	r5, #0
   22e6c:	beq.n	22f42 <hash_extent_data_ref@@Base+0x6e2>
   22e6e:	b.n	22daa <hash_extent_data_ref@@Base+0x54a>
   22e70:	movs	r3, #178	; 0xb2
   22e72:	strb.w	r3, [sp, #128]	; 0x80
   22e76:	ldrd	r2, r3, [sp, #224]	; 0xe0
   22e7a:	ldrd	r0, r1, [sp, #208]	; 0xd0
   22e7e:	strd	r2, r3, [sp]
   22e82:	ldrd	r2, r3, [sp, #216]	; 0xd8
   22e86:	bl	22860 <hash_extent_data_ref@@Base>
   22e8a:	str.w	r0, [sp, #129]	; 0x81
   22e8e:	str.w	r1, [sp, #133]	; 0x85
   22e92:	b.n	22e42 <hash_extent_data_ref@@Base+0x5e2>
   22e94:	ldr	r7, [r4, #0]
   22e96:	movs	r5, #0
   22e98:	ldr.w	r3, [r7, #192]	; 0xc0
   22e9c:	str	r3, [sp, #80]	; 0x50
   22e9e:	ldr	r3, [r4, #32]
   22ea0:	ldr	r2, [sp, #80]	; 0x50
   22ea2:	cmp	r3, r2
   22ea4:	bcc.n	22ecc <hash_extent_data_ref@@Base+0x66c>
   22ea6:	mov.w	r3, #0
   22eaa:	mov	r1, r4
   22eac:	strb.w	r3, [r4, #65]	; 0x41
   22eb0:	ldr.w	r0, [sl, #464]	; 0x1d0
   22eb4:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   22eb8:	cmp	r0, #0
   22eba:	blt.w	22daa <hash_extent_data_ref@@Base+0x54a>
   22ebe:	bne.w	22daa <hash_extent_data_ref@@Base+0x54a>
   22ec2:	ldr	r7, [r4, #0]
   22ec4:	movs	r5, #1
   22ec6:	ldr.w	r3, [r7, #192]	; 0xc0
   22eca:	str	r3, [sp, #80]	; 0x50
   22ecc:	vmov	r1, s16
   22ed0:	mov	r0, r7
   22ed2:	ldr	r2, [r4, #32]
   22ed4:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   22ed8:	ldrd	r2, r3, [sp, #120]	; 0x78
   22edc:	ldrd	r0, r1, [sp, #56]	; 0x38
   22ee0:	cmp	r1, r3
   22ee2:	it	eq
   22ee4:	cmpeq	r0, r2
   22ee6:	bne.w	22daa <hash_extent_data_ref@@Base+0x54a>
   22eea:	ldrb.w	r3, [sp, #128]	; 0x80
   22eee:	cmp	r3, #178	; 0xb2
   22ef0:	bne.w	22daa <hash_extent_data_ref@@Base+0x54a>
   22ef4:	ldr	r0, [r4, #32]
   22ef6:	add.w	ip, r7, #96	; 0x60
   22efa:	movs	r3, #25
   22efc:	mla	r3, r3, r0, ip
   22f00:	ldr.w	lr, [r3, #118]	; 0x76
   22f04:	add.w	lr, lr, #101	; 0x65
   22f08:	add.w	r1, ip, lr
   22f0c:	ldr.w	r2, [ip, lr]
   22f10:	ldr	r3, [r1, #4]
   22f12:	ldrd	fp, ip, [sp, #208]	; 0xd0
   22f16:	cmp	ip, r3
   22f18:	it	eq
   22f1a:	cmpeq	fp, r2
   22f1c:	bne.n	22fb8 <hash_extent_data_ref@@Base+0x758>
   22f1e:	ldrd	fp, ip, [sp, #216]	; 0xd8
   22f22:	ldr	r3, [r1, #12]
   22f24:	ldr	r2, [r1, #8]
   22f26:	cmp	ip, r3
   22f28:	it	eq
   22f2a:	cmpeq	fp, r2
   22f2c:	bne.n	22fb8 <hash_extent_data_ref@@Base+0x758>
   22f2e:	ldrd	fp, ip, [sp, #224]	; 0xe0
   22f32:	ldr	r3, [r1, #20]
   22f34:	ldr	r2, [r1, #16]
   22f36:	cmp	ip, r3
   22f38:	it	eq
   22f3a:	cmpeq	fp, r2
   22f3c:	bne.n	22fb8 <hash_extent_data_ref@@Base+0x758>
   22f3e:	cmp	r5, #0
   22f40:	bne.n	22fbe <hash_extent_data_ref@@Base+0x75e>
   22f42:	ldr	r7, [r4, #32]
   22f44:	add	r5, sp, #100	; 0x64
   22f46:	cmp	r7, #0
   22f48:	bge.n	22fc6 <hash_extent_data_ref@@Base+0x766>
   22f4a:	ldr.w	r7, [pc, #1460]	; 23500 <hash_extent_data_ref@@Base+0xca0>
   22f4e:	ldr.w	r5, [pc, #1460]	; 23504 <hash_extent_data_ref@@Base+0xca4>
   22f52:	ldr	r3, [sp, #96]	; 0x60
   22f54:	add	r7, pc
   22f56:	adds	r7, #207	; 0xcf
   22f58:	add	r5, pc
   22f5a:	ldr.w	r0, [pc, #1452]	; 23508 <hash_extent_data_ref@@Base+0xca8>
   22f5e:	mov	r2, r7
   22f60:	mov	r1, r5
   22f62:	add	r0, pc
   22f64:	str	r3, [sp, #0]
   22f66:	movw	r3, #1987	; 0x7c3
   22f6a:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   22f6e:	ldr	r3, [sp, #76]	; 0x4c
   22f70:	mov	r2, r4
   22f72:	mov	r1, sl
   22f74:	mov	r0, r6
   22f76:	str	r3, [sp, #0]
   22f78:	movs	r3, #0
   22f7a:	bl	2212c <btrfs_create_tree@@Base+0x928>
   22f7e:	movw	r3, #1991	; 0x7c7
   22f82:	mov	r2, r7
   22f84:	mov	r1, r5
   22f86:	str	r0, [sp, #0]
   22f88:	ldr.w	r0, [pc, #1408]	; 2350c <hash_extent_data_ref@@Base+0xcac>
   22f8c:	add	r0, pc
   22f8e:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   22f92:	mov	r0, r4
   22f94:	bl	1b2dc <btrfs_release_path@@Base>
   22f98:	ldr	r3, [sp, #56]	; 0x38
   22f9a:	ldr	r2, [sp, #64]	; 0x40
   22f9c:	str	r3, [sp, #100]	; 0x64
   22f9e:	ldr	r3, [sp, #60]	; 0x3c
   22fa0:	str	r3, [sp, #104]	; 0x68
   22fa2:	add.w	r3, sp, #109	; 0x6d
   22fa6:	cbnz	r2, 2301a <hash_extent_data_ref@@Base+0x7ba>
   22fa8:	movs	r2, #168	; 0xa8
   22faa:	strb.w	r2, [sp, #108]	; 0x6c
   22fae:	ldr	r2, [sp, #192]	; 0xc0
   22fb0:	str.w	r2, [sp, #109]	; 0x6d
   22fb4:	ldr	r2, [sp, #196]	; 0xc4
   22fb6:	b.n	23028 <hash_extent_data_ref@@Base+0x7c8>
   22fb8:	adds	r0, #1
   22fba:	str	r0, [r4, #32]
   22fbc:	b.n	22e9e <hash_extent_data_ref@@Base+0x63e>
   22fbe:	mov	r0, r4
   22fc0:	bl	1b2dc <btrfs_release_path@@Base>
   22fc4:	b.n	22e48 <hash_extent_data_ref@@Base+0x5e8>
   22fc6:	ldr	r0, [r4, #0]
   22fc8:	mov	r2, r7
   22fca:	mov	r1, r5
   22fcc:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   22fd0:	ldrd	r2, r3, [sp, #100]	; 0x64
   22fd4:	ldrd	r0, r1, [sp, #56]	; 0x38
   22fd8:	cmp	r1, r3
   22fda:	it	eq
   22fdc:	cmpeq	r0, r2
   22fde:	bne.n	22f4a <hash_extent_data_ref@@Base+0x6ea>
   22fe0:	ldrb.w	r3, [sp, #108]	; 0x6c
   22fe4:	cmp	r3, #168	; 0xa8
   22fe6:	bne.n	23008 <hash_extent_data_ref@@Base+0x7a8>
   22fe8:	ldr.w	r2, [sp, #109]	; 0x6d
   22fec:	ldr.w	r3, [sp, #113]	; 0x71
   22ff0:	ldrd	r0, r1, [sp, #192]	; 0xc0
   22ff4:	cmp	r1, r3
   22ff6:	it	eq
   22ff8:	cmpeq	r0, r2
   22ffa:	beq.n	230e8 <hash_extent_data_ref@@Base+0x888>
   22ffc:	ldr	r3, [r4, #32]
   22ffe:	subs	r3, r3, r7
   23000:	cmp	r3, #5
   23002:	bgt.n	22f4a <hash_extent_data_ref@@Base+0x6ea>
   23004:	subs	r7, #1
   23006:	b.n	22f46 <hash_extent_data_ref@@Base+0x6e6>
   23008:	cmp	r3, #169	; 0xa9
   2300a:	bne.n	22ffc <hash_extent_data_ref@@Base+0x79c>
   2300c:	ldr.w	r2, [sp, #109]	; 0x6d
   23010:	ldr.w	r3, [sp, #113]	; 0x71
   23014:	ldrd	r0, r1, [sp, #216]	; 0xd8
   23018:	b.n	22ff4 <hash_extent_data_ref@@Base+0x794>
   2301a:	movs	r2, #169	; 0xa9
   2301c:	strb.w	r2, [sp, #108]	; 0x6c
   23020:	ldr	r2, [sp, #216]	; 0xd8
   23022:	str.w	r2, [sp, #109]	; 0x6d
   23026:	ldr	r2, [sp, #220]	; 0xdc
   23028:	add	r7, sp, #100	; 0x64
   2302a:	str	r2, [r3, #4]
   2302c:	movs	r1, #1
   2302e:	mov.w	r3, #4294967295	; 0xffffffff
   23032:	mov	r2, r7
   23034:	strd	r3, r1, [sp]
   23038:	mov	r0, r6
   2303a:	mov	r3, r4
   2303c:	mov	r1, sl
   2303e:	bl	1d6c0 <btrfs_search_slot@@Base>
   23042:	subs	r5, r0, #0
   23044:	ble.w	234a0 <hash_extent_data_ref@@Base+0xc40>
   23048:	ldr	r3, [sp, #64]	; 0x40
   2304a:	cmp	r3, #0
   2304c:	beq.w	234a6 <hash_extent_data_ref@@Base+0xc46>
   23050:	ldr	r2, [r4, #32]
   23052:	cmp	r2, #0
   23054:	beq.w	23470 <hash_extent_data_ref@@Base+0xc10>
   23058:	subs	r2, #1
   2305a:	ldr	r0, [r4, #0]
   2305c:	mov	r1, r7
   2305e:	str	r2, [r4, #32]
   23060:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   23064:	ldrd	r2, r3, [sp, #100]	; 0x64
   23068:	ldrd	r0, r1, [sp, #56]	; 0x38
   2306c:	cmp	r1, r3
   2306e:	it	eq
   23070:	cmpeq	r0, r2
   23072:	bne.w	23470 <hash_extent_data_ref@@Base+0xc10>
   23076:	ldrb.w	r3, [sp, #108]	; 0x6c
   2307a:	cmp	r3, #168	; 0xa8
   2307c:	bne.w	23470 <hash_extent_data_ref@@Base+0xc10>
   23080:	ldrd	r0, r1, [sp, #192]	; 0xc0
   23084:	ldr.w	r3, [sp, #113]	; 0x71
   23088:	ldr.w	r2, [sp, #109]	; 0x6d
   2308c:	cmp	r1, r3
   2308e:	it	eq
   23090:	cmpeq	r0, r2
   23092:	bne.w	23470 <hash_extent_data_ref@@Base+0xc10>
   23096:	movs	r5, #0
   23098:	ldr.w	r2, [pc, #1140]	; 23510 <hash_extent_data_ref@@Base+0xcb0>
   2309c:	mov.w	r3, #2032	; 0x7f0
   230a0:	ldr.w	r1, [pc, #1136]	; 23514 <hash_extent_data_ref@@Base+0xcb4>
   230a4:	mov.w	r8, #0
   230a8:	ldr.w	r0, [pc, #1132]	; 23518 <hash_extent_data_ref@@Base+0xcb8>
   230ac:	add	r2, pc
   230ae:	adds	r2, #207	; 0xcf
   230b0:	add	r1, pc
   230b2:	add	r0, pc
   230b4:	str	r5, [sp, #0]
   230b6:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   230ba:	ldr	r7, [r4, #32]
   230bc:	ldr	r3, [r4, #0]
   230be:	add.w	fp, r3, #96	; 0x60
   230c2:	str	r3, [sp, #80]	; 0x50
   230c4:	movs	r3, #25
   230c6:	mla	r3, r3, r7, fp
   230ca:	add.w	r2, r3, #101	; 0x65
   230ce:	ldr.w	r1, [r3, #122]	; 0x7a
   230d2:	cmp	r1, #23
   230d4:	bhi.n	230f0 <hash_extent_data_ref@@Base+0x890>
   230d6:	ldr.w	r0, [pc, #1092]	; 2351c <hash_extent_data_ref@@Base+0xcbc>
   230da:	movs	r2, #24
   230dc:	mvn.w	r5, #116	; 0x74
   230e0:	add	r0, pc
   230e2:	bl	1a900 <__btrfs_error@@Base>
   230e6:	b.n	22dfc <hash_extent_data_ref@@Base+0x59c>
   230e8:	mov.w	r8, #1
   230ec:	movs	r5, #0
   230ee:	b.n	230bc <hash_extent_data_ref@@Base+0x85c>
   230f0:	ldr.w	r3, [r2, #17]
   230f4:	adds	r3, #101	; 0x65
   230f6:	str	r3, [sp, #72]	; 0x48
   230f8:	ldrd	r2, r3, [sp, #216]	; 0xd8
   230fc:	cmp	r3, #0
   230fe:	it	eq
   23100:	cmpeq.w	r2, #256	; 0x100
   23104:	bcs.n	23164 <hash_extent_data_ref@@Base+0x904>
   23106:	ldrb.w	r3, [sp, #108]	; 0x6c
   2310a:	cmp	r3, #168	; 0xa8
   2310c:	bne.n	23164 <hash_extent_data_ref@@Base+0x904>
   2310e:	ldr.w	r0, [pc, #1040]	; 23520 <hash_extent_data_ref@@Base+0xcc0>
   23112:	cmp	r1, #41	; 0x29
   23114:	ldr.w	r2, [pc, #1036]	; 23524 <hash_extent_data_ref@@Base+0xcc4>
   23118:	movw	r3, #2063	; 0x80f
   2311c:	add	r0, pc
   2311e:	ite	hi
   23120:	movhi	r1, #0
   23122:	movls	r1, #1
   23124:	str	r0, [sp, #64]	; 0x40
   23126:	str	r1, [sp, #0]
   23128:	mov	r1, r0
   2312a:	ldr	r0, [pc, #1020]	; (23528 <hash_extent_data_ref@@Base+0xcc8>)
   2312c:	add	r2, pc
   2312e:	adds	r2, #207	; 0xcf
   23130:	str	r2, [sp, #84]	; 0x54
   23132:	add	r0, pc
   23134:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   23138:	ldr	r3, [sp, #72]	; 0x48
   2313a:	ldrd	r0, r1, [sp, #216]	; 0xd8
   2313e:	add	r3, fp
   23140:	ldrb.w	r2, [r3, #41]	; 0x29
   23144:	movs	r3, #0
   23146:	cmp	r3, r1
   23148:	ldr	r1, [sp, #64]	; 0x40
   2314a:	it	eq
   2314c:	cmpeq	r2, r0
   2314e:	ldr	r0, [pc, #988]	; (2352c <hash_extent_data_ref@@Base+0xccc>)
   23150:	ldr	r2, [sp, #84]	; 0x54
   23152:	ite	ne
   23154:	movne	r3, #1
   23156:	moveq	r3, #0
   23158:	add	r0, pc
   2315a:	str	r3, [sp, #0]
   2315c:	movw	r3, #2065	; 0x811
   23160:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   23164:	ldr	r3, [sp, #72]	; 0x48
   23166:	ldr.w	r9, [pc, #968]	; 23530 <hash_extent_data_ref@@Base+0xcd0>
   2316a:	add	r3, fp
   2316c:	str	r3, [sp, #84]	; 0x54
   2316e:	ldr	r3, [sp, #72]	; 0x48
   23170:	add	r9, pc
   23172:	ldr	r0, [pc, #960]	; (23534 <hash_extent_data_ref@@Base+0xcd4>)
   23174:	ldr.w	r3, [fp, r3]
   23178:	add	r0, pc
   2317a:	str	r3, [sp, #64]	; 0x40
   2317c:	ldr	r3, [sp, #84]	; 0x54
   2317e:	ldr	r3, [r3, #4]
   23180:	str	r3, [sp, #68]	; 0x44
   23182:	ldr	r3, [pc, #948]	; (23538 <hash_extent_data_ref@@Base+0xcd8>)
   23184:	add	r3, pc
   23186:	str	r3, [sp, #88]	; 0x58
   23188:	add.w	r2, r3, #207	; 0xcf
   2318c:	ldrd	r3, r1, [sp, #64]	; 0x40
   23190:	str	r2, [sp, #92]	; 0x5c
   23192:	orrs	r3, r1
   23194:	mov	r1, r9
   23196:	ite	eq
   23198:	moveq	r3, #1
   2319a:	movne	r3, #0
   2319c:	str	r3, [sp, #0]
   2319e:	movw	r3, #2069	; 0x815
   231a2:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   231a6:	ldr	r3, [sp, #64]	; 0x40
   231a8:	adds.w	r1, r3, #4294967295	; 0xffffffff
   231ac:	ldr	r3, [sp, #68]	; 0x44
   231ae:	adc.w	ip, r3, #4294967295	; 0xffffffff
   231b2:	ldrd	r2, r3, [sp, #64]	; 0x40
   231b6:	cmp	r3, #0
   231b8:	it	eq
   231ba:	cmpeq	r2, #1
   231bc:	beq.n	23220 <hash_extent_data_ref@@Base+0x9c0>
   231be:	ldr	r0, [sp, #96]	; 0x60
   231c0:	cbz	r0, 2320c <hash_extent_data_ref@@Base+0x9ac>
   231c2:	ldr	r0, [pc, #888]	; (2353c <hash_extent_data_ref@@Base+0xcdc>)
   231c4:	eor.w	r3, r8, #1
   231c8:	ldr	r2, [sp, #92]	; 0x5c
   231ca:	mov	r1, r9
   231cc:	str	r3, [sp, #0]
   231ce:	add	r0, pc
   231d0:	movw	r3, #2078	; 0x81e
   231d4:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   231d8:	cmp.w	r8, #0
   231dc:	beq.w	22dfc <hash_extent_data_ref@@Base+0x59c>
   231e0:	ldr	r3, [sp, #76]	; 0x4c
   231e2:	mov	r2, r4
   231e4:	mov	r1, sl
   231e6:	mov	r0, r6
   231e8:	str	r3, [sp, #0]
   231ea:	ldr	r3, [sp, #96]	; 0x60
   231ec:	bl	2212c <btrfs_create_tree@@Base+0x928>
   231f0:	ldr	r2, [pc, #844]	; (23540 <hash_extent_data_ref@@Base+0xce0>)
   231f2:	ldr	r1, [pc, #848]	; (23544 <hash_extent_data_ref@@Base+0xce4>)
   231f4:	movw	r3, #2087	; 0x827
   231f8:	add	r2, pc
   231fa:	adds	r2, #207	; 0xcf
   231fc:	add	r1, pc
   231fe:	mov	r5, r0
   23200:	str	r0, [sp, #0]
   23202:	ldr	r0, [pc, #836]	; (23548 <hash_extent_data_ref@@Base+0xce8>)
   23204:	add	r0, pc
   23206:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2320a:	b.n	22dfc <hash_extent_data_ref@@Base+0x59c>
   2320c:	ldr	r3, [sp, #72]	; 0x48
   2320e:	ldr	r0, [sp, #80]	; 0x50
   23210:	str.w	r1, [fp, r3]
   23214:	ldr	r3, [sp, #84]	; 0x54
   23216:	str.w	ip, [r3, #4]
   2321a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2321e:	b.n	231d8 <hash_extent_data_ref@@Base+0x978>
   23220:	cmp.w	r8, #0
   23224:	beq.w	23442 <hash_extent_data_ref@@Base+0xbe2>
   23228:	ldrd	r2, r3, [sp, #216]	; 0xd8
   2322c:	cmp	r3, #0
   2322e:	it	eq
   23230:	cmpeq.w	r2, #256	; 0x100
   23234:	bcc.w	23420 <hash_extent_data_ref@@Base+0xbc0>
   23238:	ldr.w	fp, [r4]
   2323c:	add	r1, sp, #120	; 0x78
   2323e:	ldr	r5, [sp, #96]	; 0x60
   23240:	ldr	r2, [r4, #32]
   23242:	mov	r0, fp
   23244:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   23248:	add.w	r0, fp, #96	; 0x60
   2324c:	cmp	r5, #0
   2324e:	beq.w	233d6 <hash_extent_data_ref@@Base+0xb76>
   23252:	ldrb	r3, [r0, r5]
   23254:	add	r0, r5
   23256:	cmp	r3, #178	; 0xb2
   23258:	ite	eq
   2325a:	ldreq.w	r3, [r0, #25]
   2325e:	ldrne.w	r3, [r0, #9]
   23262:	subs	r3, #1
   23264:	it	ne
   23266:	movne	r3, #1
   23268:	ldr	r2, [pc, #736]	; (2354c <hash_extent_data_ref@@Base+0xcec>)
   2326a:	ldr	r1, [pc, #740]	; (23550 <hash_extent_data_ref@@Base+0xcf0>)
   2326c:	ldr	r0, [pc, #740]	; (23554 <hash_extent_data_ref@@Base+0xcf4>)
   2326e:	add	r2, pc
   23270:	adds	r2, #207	; 0xcf
   23272:	add	r1, pc
   23274:	add	r0, pc
   23276:	str	r3, [sp, #0]
   23278:	movw	r3, #2093	; 0x82d
   2327c:	str	r2, [sp, #72]	; 0x48
   2327e:	str	r1, [sp, #64]	; 0x40
   23280:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   23284:	ldr	r0, [sp, #96]	; 0x60
   23286:	ldr	r3, [r4, #32]
   23288:	ldr	r1, [sp, #64]	; 0x40
   2328a:	ldr	r2, [sp, #72]	; 0x48
   2328c:	cmp	r0, #0
   2328e:	beq.w	23424 <hash_extent_data_ref@@Base+0xbc4>
   23292:	subs	r7, r7, r3
   23294:	ldr	r0, [pc, #704]	; (23558 <hash_extent_data_ref@@Base+0xcf8>)
   23296:	mov.w	r3, #2096	; 0x830
   2329a:	it	ne
   2329c:	movne	r7, #1
   2329e:	add	r0, pc
   232a0:	str	r7, [sp, #0]
   232a2:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   232a6:	ldrd	r2, r3, [sp, #216]	; 0xd8
   232aa:	cmp	r3, #0
   232ac:	it	eq
   232ae:	cmpeq.w	r2, #256	; 0x100
   232b2:	bcs.w	2344e <hash_extent_data_ref@@Base+0xbee>
   232b6:	ldr	r3, [sp, #192]	; 0xc0
   232b8:	ldr	r0, [r6, #0]
   232ba:	str	r3, [sp, #0]
   232bc:	ldrd	r2, r3, [sp, #56]	; 0x38
   232c0:	bl	1f6b0 <btrfs_find_tree_block@@Base>
   232c4:	mov	r5, r0
   232c6:	cmp	r0, #0
   232c8:	beq.w	2344e <hash_extent_data_ref@@Base+0xbee>
   232cc:	movs	r2, #0
   232ce:	movs	r3, #0
   232d0:	bl	2099c <btrfs_buffer_uptodate@@Base>
   232d4:	cmp	r0, #0
   232d6:	beq.w	23448 <hash_extent_data_ref@@Base+0xbe8>
   232da:	ldr.w	r3, [r5, #188]	; 0xbc
   232de:	mov.w	r1, #4294967295	; 0xffffffff
   232e2:	ldr.w	r2, [r5, #184]	; 0xb8
   232e6:	mvn.w	r0, #5
   232ea:	cmp	r3, r1
   232ec:	it	eq
   232ee:	cmpeq	r2, r0
   232f0:	beq.w	23448 <hash_extent_data_ref@@Base+0xbe8>
   232f4:	ldrd	r2, r3, [r6, #8]
   232f8:	ldr.w	r1, [r5, #180]	; 0xb4
   232fc:	ldr.w	r0, [r5, #176]	; 0xb0
   23300:	cmp	r1, r3
   23302:	it	eq
   23304:	cmpeq	r0, r2
   23306:	bne.w	23448 <hash_extent_data_ref@@Base+0xbe8>
   2330a:	ldr.w	r1, [r5, #152]	; 0x98
   2330e:	movs	r3, #0
   23310:	and.w	r2, r1, #1
   23314:	orrs	r3, r2
   23316:	bne.w	23448 <hash_extent_data_ref@@Base+0xbe8>
   2331a:	mov	r0, r5
   2331c:	mov.w	r9, #1
   23320:	bl	20994 <clean_tree_block@@Base>
   23324:	mov	r0, r5
   23326:	bl	1a0a4 <free_extent_buffer@@Base>
   2332a:	ldr	r5, [pc, #560]	; (2355c <hash_extent_data_ref@@Base+0xcfc>)
   2332c:	movs	r3, #0
   2332e:	ldr	r7, [pc, #560]	; (23560 <hash_extent_data_ref@@Base+0xd00>)
   23330:	add	r5, pc
   23332:	ldr	r0, [pc, #560]	; (23564 <hash_extent_data_ref@@Base+0xd04>)
   23334:	adds	r5, #207	; 0xcf
   23336:	add	r7, pc
   23338:	add	r0, pc
   2333a:	str	r3, [sp, #0]
   2333c:	mov	r2, r5
   2333e:	movw	r3, #2108	; 0x83c
   23342:	mov	r1, r7
   23344:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   23348:	str.w	r8, [sp]
   2334c:	mov	r2, r4
   2334e:	ldr	r3, [r4, #32]
   23350:	mov	r1, sl
   23352:	mov	r0, r6
   23354:	bl	1e87c <btrfs_del_items@@Base>
   23358:	ldr.w	r8, [pc, #524]	; 23568 <hash_extent_data_ref@@Base+0xd08>
   2335c:	mov.w	r3, #2112	; 0x840
   23360:	mov	r2, r5
   23362:	add	r8, pc
   23364:	mov	r1, r7
   23366:	str	r0, [sp, #0]
   23368:	mov	r0, r8
   2336a:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2336e:	mov	r0, r4
   23370:	bl	1b2dc <btrfs_release_path@@Base>
   23374:	ldrd	r2, r3, [sp, #216]	; 0xd8
   23378:	cmp	r3, #0
   2337a:	it	eq
   2337c:	cmpeq.w	r2, #256	; 0x100
   23380:	bcc.n	233a4 <hash_extent_data_ref@@Base+0xb44>
   23382:	ldrd	r2, r3, [sp, #192]	; 0xc0
   23386:	mov	r0, r6
   23388:	strd	r2, r3, [sp]
   2338c:	ldrd	r2, r3, [sp, #56]	; 0x38
   23390:	bl	31bf8 <btrfs_del_csums@@Base>
   23394:	movw	r3, #2117	; 0x845
   23398:	mov	r2, r5
   2339a:	mov	r1, r7
   2339c:	str	r0, [sp, #0]
   2339e:	mov	r0, r8
   233a0:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   233a4:	ldrd	r2, r3, [sp, #192]	; 0xc0
   233a8:	mov	r0, r6
   233aa:	strd	r2, r3, [sp]
   233ae:	ldrd	r2, r3, [sp, #56]	; 0x38
   233b2:	bl	2ff08 <add_to_free_space_tree@@Base>
   233b6:	mov	r5, r0
   233b8:	cmp	r0, #0
   233ba:	bne.w	22dfc <hash_extent_data_ref@@Base+0x59c>
   233be:	ldrd	r2, r3, [sp, #192]	; 0xc0
   233c2:	strd	r0, r9, [sp, #8]
   233c6:	ldr	r0, [r6, #0]
   233c8:	strd	r2, r3, [sp]
   233cc:	ldrd	r2, r3, [sp, #56]	; 0x38
   233d0:	bl	224c4 <btrfs_lookup_block_group@@Base+0x188>
   233d4:	b.n	22dfc <hash_extent_data_ref@@Base+0x59c>
   233d6:	ldrb.w	r3, [sp, #128]	; 0x80
   233da:	cmp	r3, #178	; 0xb2
   233dc:	bne.n	233f2 <hash_extent_data_ref@@Base+0xb92>
   233de:	ldr	r3, [r4, #32]
   233e0:	movs	r2, #25
   233e2:	mla	r3, r2, r3, r0
   233e6:	ldr.w	r5, [r3, #118]	; 0x76
   233ea:	add	r0, r5
   233ec:	ldr.w	r3, [r0, #125]	; 0x7d
   233f0:	b.n	23262 <hash_extent_data_ref@@Base+0xa02>
   233f2:	cmp	r3, #184	; 0xb8
   233f4:	bne.n	2340a <hash_extent_data_ref@@Base+0xbaa>
   233f6:	ldr	r3, [r4, #32]
   233f8:	movs	r2, #25
   233fa:	mla	r3, r2, r3, r0
   233fe:	ldr.w	r5, [r3, #118]	; 0x76
   23402:	add	r0, r5
   23404:	ldr.w	r3, [r0, #101]	; 0x65
   23408:	b.n	23262 <hash_extent_data_ref@@Base+0xa02>
   2340a:	ldr	r2, [sp, #88]	; 0x58
   2340c:	movs	r3, #1
   2340e:	ldr	r0, [pc, #348]	; (2356c <hash_extent_data_ref@@Base+0xd0c>)
   23410:	mov	r1, r9
   23412:	str	r3, [sp, #0]
   23414:	adds	r2, #221	; 0xdd
   23416:	add	r0, pc
   23418:	movw	r3, #777	; 0x309
   2341c:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   23420:	movs	r3, #0
   23422:	b.n	23268 <hash_extent_data_ref@@Base+0xa08>
   23424:	adds	r0, r7, #1
   23426:	mov.w	r8, #2
   2342a:	subs	r3, r0, r3
   2342c:	ldr	r0, [pc, #320]	; (23570 <hash_extent_data_ref@@Base+0xd10>)
   2342e:	it	ne
   23430:	movne	r3, #1
   23432:	add	r0, pc
   23434:	str	r3, [sp, #0]
   23436:	movw	r3, #2098	; 0x832
   2343a:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2343e:	str	r7, [r4, #32]
   23440:	b.n	232a6 <hash_extent_data_ref@@Base+0xa46>
   23442:	mov.w	r8, #1
   23446:	b.n	232a6 <hash_extent_data_ref@@Base+0xa46>
   23448:	mov	r0, r5
   2344a:	bl	1a0a4 <free_extent_buffer@@Base>
   2344e:	movs	r3, #1
   23450:	str	r3, [sp, #8]
   23452:	ldrd	r2, r3, [sp, #192]	; 0xc0
   23456:	mov.w	r9, #0
   2345a:	ldr	r0, [r6, #0]
   2345c:	strd	r2, r3, [sp]
   23460:	ldrd	r2, r3, [sp, #56]	; 0x38
   23464:	bl	223d4 <btrfs_lookup_block_group@@Base+0x98>
   23468:	b.n	2332a <hash_extent_data_ref@@Base+0xaca>
   2346a:	mvn.w	r5, #11
   2346e:	b.n	22e02 <hash_extent_data_ref@@Base+0x5a2>
   23470:	mov	r0, r4
   23472:	bl	1b2dc <btrfs_release_path@@Base>
   23476:	movs	r3, #168	; 0xa8
   23478:	strb.w	r3, [sp, #108]	; 0x6c
   2347c:	movs	r2, #1
   2347e:	ldr	r3, [sp, #192]	; 0xc0
   23480:	mov	r1, sl
   23482:	mov	r0, r6
   23484:	str.w	r3, [sp, #109]	; 0x6d
   23488:	ldr	r3, [sp, #196]	; 0xc4
   2348a:	str.w	r3, [sp, #113]	; 0x71
   2348e:	mov.w	r3, #4294967295	; 0xffffffff
   23492:	strd	r3, r2, [sp]
   23496:	add	r2, sp, #100	; 0x64
   23498:	mov	r3, r4
   2349a:	bl	1d6c0 <btrfs_search_slot@@Base>
   2349e:	mov	r5, r0
   234a0:	cmp	r5, #0
   234a2:	beq.w	23096 <hash_extent_data_ref@@Base+0x836>
   234a6:	ldr	r2, [sp, #72]	; 0x48
   234a8:	movs	r1, #1
   234aa:	ldr	r3, [pc, #68]	; (234f0 <hash_extent_data_ref@@Base+0xc90>)
   234ac:	ldr	r0, [r2, r3]
   234ae:	ldrd	r2, r3, [sp, #56]	; 0x38
   234b2:	strd	r2, r3, [sp]
   234b6:	mov	r3, r5
   234b8:	ldr	r2, [pc, #184]	; (23574 <hash_extent_data_ref@@Base+0xd14>)
   234ba:	ldr	r0, [r0, #0]
   234bc:	add	r2, pc
   234be:	blx	8ca0 <__fprintf_chk@plt+0x4>
   234c2:	ldr	r0, [r4, #0]
   234c4:	bl	284a8 <btrfs_print_leaf@@Base>
   234c8:	b.n	23098 <hash_extent_data_ref@@Base+0x838>
   234ca:	mov	r0, r5
   234cc:	add	sp, #148	; 0x94
   234ce:	vpop	{d8}
   234d2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   234d6:	nop
   234d8:	str	r2, [r1, #12]
   234da:	movs	r4, r0
   234dc:	str	r6, [r0, #12]
   234de:	movs	r4, r0
   234e0:	lsls	r4, r7, #9
   234e2:	movs	r0, r0
   234e4:	cdp	0, 14, cr0, cr3, cr1, {0}
   234e8:	vaddl.s8	q8, d9, d1
   234ec:			; <UNDEFINED> instruction: 0xf5ff0001
   234f0:	lsls	r4, r1, #10
   234f2:	movs	r0, r0
   234f4:	vaddl.s32	q0, d13, d1
   234f8:	vext.8	d16, d4, d1, #0
   234fc:	ldrsh	r6, [r4, r4]
   234fe:	movs	r4, r0
   23500:	usat16	r0, #1, r1
   23504:	ldcl	0, cr0, [sp], #-4
   23508:	ldmia	r1!, {r0, r2, r4, r5}
   2350a:	movs	r1, r0
   2350c:			; <UNDEFINED> instruction: 0xb8f1
   2350e:	movs	r1, r0
   23510:	movw	r0, #36865	; 0x9001
   23514:			; <UNDEFINED> instruction: 0xeb250001
   23518:			; <UNDEFINED> instruction: 0xb7cb
   2351a:	movs	r1, r0
   2351c:	stc	0, cr0, [r8, #-4]!
   23520:			; <UNDEFINED> instruction: 0xeab90001
   23524:	rsb	r0, r9, #1
   23528:	stc	0, cr0, [r1, #-4]!
   2352c:	stc	0, cr0, [r1, #-4]!
   23530:	orn	r0, r5, r1
   23534:	sbc.w	r0, r7, r1
   23538:	sbcs.w	r0, r1, #1
   2353c:	ldcl	0, cr0, [lr], {1}
   23540:			; <UNDEFINED> instruction: 0xf0fd0001
   23544:	ldrd	r0, r0, [r9, #4]
   23548:			; <UNDEFINED> instruction: 0xb679
   2354a:	movs	r1, r0
   2354c:	eor.w	r0, r7, #1
   23550:	strd	r0, r0, [r3, #-4]!
   23554:	mcrr	0, 0, r0, r6, cr1
   23558:	mrrc	0, 0, r0, r9, cr1
   2355c:	vaddl.s8	q8, d5, d1
   23560:	clrm	{r0}
   23564:			; <UNDEFINED> instruction: 0xebff0001
   23568:	push	{r0, r1, r3, r4, lr}
   2356a:	movs	r1, r0
   2356c:	adds.w	r0, pc, r1
   23570:			; <UNDEFINED> instruction: 0xeae30001
   23574:	clrm	{r0}

00023578 <btrfs_inc_extent_ref@@Base>:
   23578:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2357c:	sub	sp, #100	; 0x64
   2357e:	mov	r6, r0
   23580:	mov	r7, r1
   23582:	strd	r2, r3, [sp, #56]	; 0x38
   23586:	ldr.w	r2, [pc, #1104]	; 239d8 <btrfs_inc_extent_ref@@Base+0x460>
   2358a:	ldr.w	r3, [pc, #1104]	; 239dc <btrfs_inc_extent_ref@@Base+0x464>
   2358e:	add	r2, pc
   23590:	ldrd	sl, fp, [sp, #144]	; 0x90
   23594:	ldr	r3, [r2, r3]
   23596:	ldr	r3, [r3, #0]
   23598:	str	r3, [sp, #92]	; 0x5c
   2359a:	mov.w	r3, #0
   2359e:	bl	1b2d4 <btrfs_alloc_path@@Base>
   235a2:	mov	r5, r0
   235a4:	cmp	r0, #0
   235a6:	beq.w	239ca <btrfs_inc_extent_ref@@Base+0x452>
   235aa:	mov.w	r8, #1
   235ae:	strb.w	r8, [r0, #64]	; 0x40
   235b2:	ldr.w	r3, [r7, #464]	; 0x1d0
   235b6:	ldr.w	r9, [r3, #24]
   235ba:	ldrd	r3, r4, [sp, #168]	; 0xa8
   235be:	str.w	r8, [sp, #48]	; 0x30
   235c2:	mov	r1, r9
   235c4:	strd	sl, fp, [sp, #16]
   235c8:	strd	r3, r4, [sp, #40]	; 0x28
   235cc:	ldrd	r3, r4, [sp, #160]	; 0xa0
   235d0:	strd	r3, r4, [sp, #32]
   235d4:	ldrd	r3, r4, [sp, #152]	; 0x98
   235d8:	strd	r3, r4, [sp, #24]
   235dc:	ldrd	r2, r3, [sp, #136]	; 0x88
   235e0:	strd	r2, r3, [sp, #8]
   235e4:	mov	r2, r0
   235e6:	ldr	r3, [sp, #56]	; 0x38
   235e8:	mov	r0, r6
   235ea:	str	r3, [sp, #0]
   235ec:	ldr	r3, [sp, #60]	; 0x3c
   235ee:	str	r3, [sp, #4]
   235f0:	add	r3, sp, #72	; 0x48
   235f2:	bl	228d8 <hash_extent_data_ref@@Base+0x78>
   235f6:	mov	r4, r0
   235f8:	cmp	r0, #0
   235fa:	bne.w	23738 <btrfs_inc_extent_ref@@Base+0x1c0>
   235fe:	ldrd	r3, r4, [sp, #160]	; 0xa0
   23602:	ldr	r2, [pc, #988]	; (239e0 <btrfs_inc_extent_ref@@Base+0x468>)
   23604:	cmp	r4, #0
   23606:	ldr	r1, [pc, #988]	; (239e4 <btrfs_inc_extent_ref@@Base+0x46c>)
   23608:	it	eq
   2360a:	cmpeq.w	r3, #256	; 0x100
   2360e:	ldr	r0, [pc, #984]	; (239e8 <btrfs_inc_extent_ref@@Base+0x470>)
   23610:	add	r2, pc
   23612:	add	r1, pc
   23614:	ite	cc
   23616:	movcc	r3, r8
   23618:	movcs	r3, #0
   2361a:	adds	r2, #243	; 0xf3
   2361c:	add	r0, pc
   2361e:	str	r3, [sp, #0]
   23620:	mov.w	r3, #1184	; 0x4a0
   23624:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   23628:	ldr	r2, [sp, #72]	; 0x48
   2362a:	mov	r3, r8
   2362c:	mov	r1, r5
   2362e:	mov	r0, r9
   23630:	bl	21e0c <btrfs_create_tree@@Base+0x608>
   23634:	mov	r4, r0
   23636:	cmp	r0, #0
   23638:	beq.w	2381e <btrfs_inc_extent_ref@@Base+0x2a6>
   2363c:	cmn.w	r4, #11
   23640:	bne.w	2381e <btrfs_inc_extent_ref@@Base+0x2a6>
   23644:	ldr	r0, [r5, #0]
   23646:	movs	r2, #25
   23648:	ldr	r3, [r5, #32]
   2364a:	add.w	r4, r0, #96	; 0x60
   2364e:	mla	r3, r2, r3, r4
   23652:	ldr.w	r2, [r3, #118]	; 0x76
   23656:	adds	r2, #101	; 0x65
   23658:	add.w	ip, r4, r2
   2365c:	ldr	r3, [r4, r2]
   2365e:	ldr.w	r1, [ip, #4]
   23662:	adds	r3, #1
   23664:	str	r3, [r4, r2]
   23666:	adc.w	r1, r1, #0
   2366a:	str.w	r1, [ip, #4]
   2366e:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   23672:	mov	r0, r5
   23674:	bl	1b2dc <btrfs_release_path@@Base>
   23678:	movs	r3, #1
   2367a:	strb.w	r3, [r5, #64]	; 0x40
   2367e:	ldr.w	r3, [r7, #464]	; 0x1d0
   23682:	ldr	r7, [r3, #24]
   23684:	ldrd	r3, r4, [sp, #160]	; 0xa0
   23688:	cmp	r4, #0
   2368a:	add.w	r4, sp, #81	; 0x51
   2368e:	it	eq
   23690:	cmpeq.w	r3, #256	; 0x100
   23694:	bcc.w	23964 <btrfs_inc_extent_ref@@Base+0x3ec>
   23698:	ldr	r3, [sp, #56]	; 0x38
   2369a:	str	r3, [sp, #72]	; 0x48
   2369c:	ldr	r3, [sp, #60]	; 0x3c
   2369e:	str	r3, [sp, #76]	; 0x4c
   236a0:	orrs.w	r3, sl, fp
   236a4:	beq.w	2388e <btrfs_inc_extent_ref@@Base+0x316>
   236a8:	mov.w	r8, #4
   236ac:	movs	r3, #184	; 0xb8
   236ae:	str.w	sl, [sp, #81]	; 0x51
   236b2:	strb.w	r3, [sp, #80]	; 0x50
   236b6:	str.w	fp, [r4, #4]
   236ba:	movs	r3, #1
   236bc:	mov	r2, r5
   236be:	str	r3, [sp, #4]
   236c0:	mov	r1, r7
   236c2:	add	r3, sp, #68	; 0x44
   236c4:	mov	r0, r6
   236c6:	str	r3, [sp, #0]
   236c8:	add	r3, sp, #72	; 0x48
   236ca:	str.w	r8, [sp, #68]	; 0x44
   236ce:	bl	1e490 <btrfs_insert_empty_items@@Base>
   236d2:	mov	r4, r0
   236d4:	cbz	r0, 236de <btrfs_inc_extent_ref@@Base+0x166>
   236d6:	cmn.w	r0, #17
   236da:	bne.w	238da <btrfs_inc_extent_ref@@Base+0x362>
   236de:	orrs.w	r3, sl, fp
   236e2:	ldr	r0, [r5, #0]
   236e4:	bne.w	238b4 <btrfs_inc_extent_ref@@Base+0x33c>
   236e8:	add.w	r9, sp, #72	; 0x48
   236ec:	mov.w	sl, #1
   236f0:	ldr	r3, [r5, #32]
   236f2:	add.w	r1, r0, #96	; 0x60
   236f6:	movs	r2, #25
   236f8:	cmn.w	r4, #17
   236fc:	mla	r3, r2, r3, r1
   23700:	ldr.w	r3, [r3, #118]	; 0x76
   23704:	add.w	r3, r3, #101	; 0x65
   23708:	add	r1, r3
   2370a:	beq.w	238ea <btrfs_inc_extent_ref@@Base+0x372>
   2370e:	cmp	r4, #0
   23710:	bne.w	2395c <btrfs_inc_extent_ref@@Base+0x3e4>
   23714:	ldr	r3, [sp, #152]	; 0x98
   23716:	strb	r4, [r1, #25]
   23718:	strb	r4, [r1, #26]
   2371a:	str	r3, [r1, #0]
   2371c:	ldr	r3, [sp, #156]	; 0x9c
   2371e:	strb	r4, [r1, #27]
   23720:	str	r3, [r1, #4]
   23722:	ldr	r3, [sp, #160]	; 0xa0
   23724:	str	r3, [r1, #8]
   23726:	ldr	r3, [sp, #164]	; 0xa4
   23728:	str	r3, [r1, #12]
   2372a:	ldr	r3, [sp, #168]	; 0xa8
   2372c:	str	r3, [r1, #16]
   2372e:	ldr	r3, [sp, #172]	; 0xac
   23730:	str	r3, [r1, #20]
   23732:	movs	r3, #1
   23734:	strb	r3, [r1, #24]
   23736:	b.n	238d4 <btrfs_inc_extent_ref@@Base+0x35c>
   23738:	adds	r1, r0, #2
   2373a:	bne.w	2363c <btrfs_inc_extent_ref@@Base+0xc4>
   2373e:	ldr.w	r8, [r5]
   23742:	movs	r2, #25
   23744:	ldr	r3, [r5, #32]
   23746:	add.w	r6, r8, #96	; 0x60
   2374a:	ldr	r4, [sp, #72]	; 0x48
   2374c:	mla	r3, r2, r3, r6
   23750:	subs	r4, #101	; 0x65
   23752:	ldr.w	r2, [r3, #118]	; 0x76
   23756:	subs	r4, r4, r2
   23758:	ldrd	r2, r3, [sp, #160]	; 0xa0
   2375c:	cmp	r3, #0
   2375e:	it	eq
   23760:	cmpeq.w	r2, #256	; 0x100
   23764:	bcs.n	23854 <btrfs_inc_extent_ref@@Base+0x2dc>
   23766:	orrs.w	r3, sl, fp
   2376a:	ite	ne
   2376c:	movne	r7, #182	; 0xb6
   2376e:	moveq	r7, #176	; 0xb0
   23770:	mov	r0, r7
   23772:	bl	21dc4 <btrfs_create_tree@@Base+0x5c0>
   23776:	mov	r1, r5
   23778:	mov	r2, r0
   2377a:	str	r0, [sp, #56]	; 0x38
   2377c:	mov	r0, r9
   2377e:	bl	1d4b4 <btrfs_extend_item@@Base>
   23782:	ldr	r2, [pc, #616]	; (239ec <btrfs_inc_extent_ref@@Base+0x474>)
   23784:	ldr	r1, [pc, #616]	; (239f0 <btrfs_inc_extent_ref@@Base+0x478>)
   23786:	movw	r3, #1044	; 0x414
   2378a:	add	r2, pc
   2378c:	add.w	r2, r2, #272	; 0x110
   23790:	add	r1, pc
   23792:	str	r0, [sp, #0]
   23794:	ldr	r0, [pc, #604]	; (239f4 <btrfs_inc_extent_ref@@Base+0x47c>)
   23796:	add	r0, pc
   23798:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2379c:	ldr	r3, [r5, #32]
   2379e:	movs	r0, #25
   237a0:	mla	r3, r0, r3, r6
   237a4:	ldr.w	r3, [r3, #118]	; 0x76
   237a8:	adds	r3, #101	; 0x65
   237aa:	add.w	ip, r6, r3
   237ae:	add	r4, r3
   237b0:	ldr	r2, [r6, r3]
   237b2:	ldr.w	r1, [ip, #4]
   237b6:	adds	r2, #1
   237b8:	str	r2, [r6, r3]
   237ba:	adc.w	r1, r1, #0
   237be:	str.w	r1, [ip, #4]
   237c2:	ldr	r2, [r5, #32]
   237c4:	mla	r0, r0, r2, r6
   237c8:	ldr.w	r2, [r0, #122]	; 0x7a
   237cc:	add	r3, r2
   237ce:	ldr	r2, [sp, #56]	; 0x38
   237d0:	subs	r3, r3, r2
   237d2:	cmp	r4, r3
   237d4:	bcs.n	237e4 <btrfs_inc_extent_ref@@Base+0x26c>
   237d6:	ldr	r1, [sp, #56]	; 0x38
   237d8:	subs	r3, r3, r4
   237da:	mov	r2, r4
   237dc:	mov	r0, r8
   237de:	add	r1, r4
   237e0:	bl	1a810 <memmove_extent_buffer@@Base>
   237e4:	cmp	r7, #178	; 0xb2
   237e6:	add.w	r3, r6, r4
   237ea:	strb	r7, [r6, r4]
   237ec:	bne.n	23860 <btrfs_inc_extent_ref@@Base+0x2e8>
   237ee:	ldr	r2, [sp, #152]	; 0x98
   237f0:	adds	r4, #1
   237f2:	adds	r3, r6, r4
   237f4:	movs	r1, #1
   237f6:	str	r2, [r6, r4]
   237f8:	ldr	r2, [sp, #156]	; 0x9c
   237fa:	strb	r1, [r3, #24]
   237fc:	str	r2, [r3, #4]
   237fe:	ldr	r2, [sp, #160]	; 0xa0
   23800:	str	r2, [r3, #8]
   23802:	ldr	r2, [sp, #164]	; 0xa4
   23804:	str	r2, [r3, #12]
   23806:	ldr	r2, [sp, #168]	; 0xa8
   23808:	str	r2, [r3, #16]
   2380a:	ldr	r2, [sp, #172]	; 0xac
   2380c:	str	r2, [r3, #20]
   2380e:	movs	r2, #0
   23810:	strb	r2, [r3, #25]
   23812:	strb	r2, [r3, #26]
   23814:	strb	r2, [r3, #27]
   23816:	mov	r0, r8
   23818:	movs	r4, #0
   2381a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2381e:	mov	r0, r5
   23820:	bl	1b302 <btrfs_free_path@@Base>
   23824:	ldr	r2, [pc, #464]	; (239f8 <btrfs_inc_extent_ref@@Base+0x480>)
   23826:	ldr	r1, [pc, #468]	; (239fc <btrfs_inc_extent_ref@@Base+0x484>)
   23828:	movw	r3, #1282	; 0x502
   2382c:	ldr	r0, [pc, #464]	; (23a00 <btrfs_inc_extent_ref@@Base+0x488>)
   2382e:	add	r2, pc
   23830:	add.w	r2, r2, #322	; 0x142
   23834:	add	r1, pc
   23836:	add	r0, pc
   23838:	str	r4, [sp, #0]
   2383a:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2383e:	ldr	r2, [pc, #452]	; (23a04 <btrfs_inc_extent_ref@@Base+0x48c>)
   23840:	ldr	r3, [pc, #408]	; (239dc <btrfs_inc_extent_ref@@Base+0x464>)
   23842:	add	r2, pc
   23844:	ldr	r3, [r2, r3]
   23846:	ldr	r2, [r3, #0]
   23848:	ldr	r3, [sp, #92]	; 0x5c
   2384a:	eors	r2, r3
   2384c:	beq.w	239d0 <btrfs_inc_extent_ref@@Base+0x458>
   23850:	blx	88e4 <__stack_chk_fail@plt>
   23854:	orrs.w	r3, sl, fp
   23858:	ite	ne
   2385a:	movne	r7, #184	; 0xb8
   2385c:	moveq	r7, #178	; 0xb2
   2385e:	b.n	23770 <btrfs_inc_extent_ref@@Base+0x1f8>
   23860:	cmp	r7, #184	; 0xb8
   23862:	add.w	r2, r3, #1
   23866:	bne.n	2387e <btrfs_inc_extent_ref@@Base+0x306>
   23868:	movs	r1, #0
   2386a:	movs	r0, #1
   2386c:	strb	r1, [r3, #10]
   2386e:	strb	r0, [r3, #9]
   23870:	strb	r1, [r3, #11]
   23872:	strb	r1, [r3, #12]
   23874:	str.w	sl, [r3, #1]
   23878:	str.w	fp, [r2, #4]
   2387c:	b.n	23816 <btrfs_inc_extent_ref@@Base+0x29e>
   2387e:	cmp	r7, #182	; 0xb6
   23880:	beq.n	23874 <btrfs_inc_extent_ref@@Base+0x2fc>
   23882:	ldr	r1, [sp, #152]	; 0x98
   23884:	str.w	r1, [r3, #1]
   23888:	ldr	r3, [sp, #156]	; 0x9c
   2388a:	str	r3, [r2, #4]
   2388c:	b.n	23816 <btrfs_inc_extent_ref@@Base+0x29e>
   2388e:	movs	r3, #178	; 0xb2
   23890:	strb.w	r3, [sp, #80]	; 0x50
   23894:	ldrd	r2, r3, [sp, #168]	; 0xa8
   23898:	mov.w	r8, #28
   2389c:	ldrd	r0, r1, [sp, #152]	; 0x98
   238a0:	strd	r2, r3, [sp]
   238a4:	ldrd	r2, r3, [sp, #160]	; 0xa0
   238a8:	bl	22860 <hash_extent_data_ref@@Base>
   238ac:	str.w	r0, [sp, #81]	; 0x51
   238b0:	str	r1, [r4, #4]
   238b2:	b.n	236ba <btrfs_inc_extent_ref@@Base+0x142>
   238b4:	ldr	r3, [r5, #32]
   238b6:	add.w	r2, r0, #96	; 0x60
   238ba:	movs	r1, #25
   238bc:	mla	r3, r1, r3, r2
   238c0:	ldr.w	r3, [r3, #118]	; 0x76
   238c4:	adds	r3, #101	; 0x65
   238c6:	adds	r1, r2, r3
   238c8:	cbnz	r4, 238e2 <btrfs_inc_extent_ref@@Base+0x36a>
   238ca:	movs	r6, #1
   238cc:	strb	r6, [r2, r3]
   238ce:	strb	r4, [r1, #1]
   238d0:	strb	r4, [r1, #2]
   238d2:	strb	r4, [r1, #3]
   238d4:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   238d8:	movs	r4, #0
   238da:	mov	r0, r5
   238dc:	bl	1b2dc <btrfs_release_path@@Base>
   238e0:	b.n	2381e <btrfs_inc_extent_ref@@Base+0x2a6>
   238e2:	ldr	r1, [r1, #0]
   238e4:	adds	r1, #1
   238e6:	str	r1, [r2, r3]
   238e8:	b.n	238d4 <btrfs_inc_extent_ref@@Base+0x35c>
   238ea:	ldrd	fp, ip, [sp, #152]	; 0x98
   238ee:	ldr	r3, [r1, #4]
   238f0:	ldr	r2, [r1, #0]
   238f2:	cmp	ip, r3
   238f4:	it	eq
   238f6:	cmpeq	fp, r2
   238f8:	bne.n	2391a <btrfs_inc_extent_ref@@Base+0x3a2>
   238fa:	ldrd	fp, ip, [sp, #160]	; 0xa0
   238fe:	ldr	r3, [r1, #12]
   23900:	ldr	r2, [r1, #8]
   23902:	cmp	ip, r3
   23904:	it	eq
   23906:	cmpeq	fp, r2
   23908:	bne.n	2391a <btrfs_inc_extent_ref@@Base+0x3a2>
   2390a:	ldrd	fp, ip, [sp, #168]	; 0xa8
   2390e:	ldr	r3, [r1, #20]
   23910:	ldr	r2, [r1, #16]
   23912:	cmp	ip, r3
   23914:	it	eq
   23916:	cmpeq	fp, r2
   23918:	beq.n	2395c <btrfs_inc_extent_ref@@Base+0x3e4>
   2391a:	mov	r0, r5
   2391c:	bl	1b2dc <btrfs_release_path@@Base>
   23920:	ldr.w	r3, [sp, #81]	; 0x51
   23924:	ldr.w	r2, [sp, #85]	; 0x55
   23928:	mov	r1, r7
   2392a:	adds	r3, #1
   2392c:	mov	r0, r6
   2392e:	adc.w	r2, r2, #0
   23932:	str.w	r3, [sp, #81]	; 0x51
   23936:	str.w	r2, [sp, #85]	; 0x55
   2393a:	add	r3, sp, #68	; 0x44
   2393c:	mov	r2, r5
   2393e:	str	r3, [sp, #0]
   23940:	str.w	sl, [sp, #4]
   23944:	mov	r3, r9
   23946:	str.w	r8, [sp, #68]	; 0x44
   2394a:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2394e:	mov	r4, r0
   23950:	cbz	r0, 23958 <btrfs_inc_extent_ref@@Base+0x3e0>
   23952:	cmn.w	r0, #17
   23956:	bne.n	238da <btrfs_inc_extent_ref@@Base+0x362>
   23958:	ldr	r0, [r5, #0]
   2395a:	b.n	236f0 <btrfs_inc_extent_ref@@Base+0x178>
   2395c:	ldr	r3, [r1, #24]
   2395e:	adds	r3, #1
   23960:	str	r3, [r1, #24]
   23962:	b.n	238d4 <btrfs_inc_extent_ref@@Base+0x35c>
   23964:	ldr	r2, [pc, #160]	; (23a08 <btrfs_inc_extent_ref@@Base+0x490>)
   23966:	movs	r3, #0
   23968:	ldr	r1, [pc, #160]	; (23a0c <btrfs_inc_extent_ref@@Base+0x494>)
   2396a:	ldr	r0, [pc, #164]	; (23a10 <btrfs_inc_extent_ref@@Base+0x498>)
   2396c:	add	r2, pc
   2396e:	str	r3, [sp, #0]
   23970:	add.w	r2, r2, #300	; 0x12c
   23974:	mov.w	r3, #1208	; 0x4b8
   23978:	add	r1, pc
   2397a:	add	r0, pc
   2397c:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   23980:	ldr	r3, [sp, #56]	; 0x38
   23982:	str	r3, [sp, #72]	; 0x48
   23984:	ldr	r3, [sp, #60]	; 0x3c
   23986:	str	r3, [sp, #76]	; 0x4c
   23988:	orrs.w	r3, sl, fp
   2398c:	beq.n	239b8 <btrfs_inc_extent_ref@@Base+0x440>
   2398e:	movs	r3, #182	; 0xb6
   23990:	str.w	sl, [sp, #81]	; 0x51
   23994:	strb.w	r3, [sp, #80]	; 0x50
   23998:	str.w	fp, [r4, #4]
   2399c:	movs	r3, #0
   2399e:	mov	r2, r5
   239a0:	str	r3, [sp, #68]	; 0x44
   239a2:	mov	r1, r7
   239a4:	movs	r3, #1
   239a6:	mov	r0, r6
   239a8:	str	r3, [sp, #4]
   239aa:	add	r3, sp, #68	; 0x44
   239ac:	str	r3, [sp, #0]
   239ae:	add	r3, sp, #72	; 0x48
   239b0:	bl	1e490 <btrfs_insert_empty_items@@Base>
   239b4:	mov	r4, r0
   239b6:	b.n	238da <btrfs_inc_extent_ref@@Base+0x362>
   239b8:	movs	r3, #176	; 0xb0
   239ba:	strb.w	r3, [sp, #80]	; 0x50
   239be:	ldr	r3, [sp, #152]	; 0x98
   239c0:	str.w	r3, [sp, #81]	; 0x51
   239c4:	ldr	r3, [sp, #156]	; 0x9c
   239c6:	str	r3, [r4, #4]
   239c8:	b.n	2399c <btrfs_inc_extent_ref@@Base+0x424>
   239ca:	mvn.w	r4, #11
   239ce:	b.n	2383e <btrfs_inc_extent_ref@@Base+0x2c6>
   239d0:	mov	r0, r4
   239d2:	add	sp, #100	; 0x64
   239d4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   239d8:	ldrsb	r2, [r4, r6]
   239da:	movs	r4, r0
   239dc:	lsls	r4, r7, #9
   239de:	movs	r0, r0
   239e0:	stcl	0, cr0, [r5], #4
   239e4:	b.n	2356e <hash_extent_data_ref@@Base+0xd0e>
   239e6:	movs	r1, r0
   239e8:	stmdb	r3!, {r0}
   239ec:	sbc.w	r0, fp, r1
   239f0:	b.n	2327e <hash_extent_data_ref@@Base+0xa1e>
   239f2:	movs	r1, r0
   239f4:	sub	sp, #412	; 0x19c
   239f6:	movs	r1, r0
   239f8:	pkhbt	r0, r7, r1
   239fc:	b.n	24142 <btrfs_free_extent@@Base+0x6e>
   239fe:	movs	r1, r0
   23a00:	b.n	2387c <btrfs_inc_extent_ref@@Base+0x304>
   23a02:	movs	r1, r0
   23a04:	strb	r6, [r5, r3]
   23a06:	movs	r4, r0
   23a08:			; <UNDEFINED> instruction: 0xe9890001
   23a0c:	b.n	23eca <btrfs_write_dirty_block_groups@@Base+0x106>
   23a0e:	movs	r1, r0
   23a10:	b.n	235e2 <btrfs_inc_extent_ref@@Base+0x6a>
   23a12:	movs	r1, r0

00023a14 <btrfs_lookup_extent_info@@Base>:
   23a14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23a18:	mov	r5, r1
   23a1a:	vpush	{d8}
   23a1e:	vmov	s16, r0
   23a22:	sub	sp, #44	; 0x2c
   23a24:	strd	r2, r3, [sp, #8]
   23a28:	ldr	r2, [pc, #384]	; (23bac <btrfs_lookup_extent_info@@Base+0x198>)
   23a2a:	ldr	r3, [pc, #388]	; (23bb0 <btrfs_lookup_extent_info@@Base+0x19c>)
   23a2c:	add	r2, pc
   23a2e:	ldrd	fp, r7, [sp, #96]	; 0x60
   23a32:	ldrd	sl, r8, [sp, #88]	; 0x58
   23a36:	ldr	r3, [r2, r3]
   23a38:	ldr	r6, [sp, #104]	; 0x68
   23a3a:	ldr	r3, [r3, #0]
   23a3c:	str	r3, [sp, #36]	; 0x24
   23a3e:	mov.w	r3, #0
   23a42:	cmp.w	fp, #0
   23a46:	beq.n	23a64 <btrfs_lookup_extent_info@@Base+0x50>
   23a48:	ldr.w	r3, [r1, #308]	; 0x134
   23a4c:	movs	r1, #0
   23a4e:	ldr.w	r0, [r3, #188]	; 0xbc
   23a52:	mov	r3, r1
   23a54:	and.w	r2, r0, #256	; 0x100
   23a58:	orrs	r3, r2
   23a5a:	ittt	eq
   23a5c:	ldreq.w	sl, [r5, #384]	; 0x180
   23a60:	moveq	r8, r1
   23a62:	moveq	fp, r8
   23a64:	bl	1b2d4 <btrfs_alloc_path@@Base>
   23a68:	mov	r4, r0
   23a6a:	cmp	r0, #0
   23a6c:	beq.w	23b98 <btrfs_lookup_extent_info@@Base+0x184>
   23a70:	movs	r3, #1
   23a72:	strb.w	r3, [r0, #64]	; 0x40
   23a76:	ldrd	r2, r3, [sp, #8]
   23a7a:	cmp.w	fp, #0
   23a7e:	str.w	sl, [sp, #25]
   23a82:	add.w	r9, sp, #25
   23a86:	add.w	sl, sp, #16
   23a8a:	str.w	r8, [sp, #29]
   23a8e:	mov.w	r8, #0
   23a92:	strd	r2, r3, [sp, #16]
   23a96:	ite	eq
   23a98:	moveq	r3, #168	; 0xa8
   23a9a:	movne	r3, #169	; 0xa9
   23a9c:	strb.w	r3, [sp, #24]
   23aa0:	mov	r3, r4
   23aa2:	vmov	r0, s16
   23aa6:	ldr	r1, [r5, #24]
   23aa8:	mov	r2, sl
   23aaa:	strd	r8, r8, [sp]
   23aae:	bl	1d6c0 <btrfs_search_slot@@Base>
   23ab2:	subs	r3, r0, #0
   23ab4:	blt.n	23b4a <btrfs_lookup_extent_info@@Base+0x136>
   23ab6:	beq.n	23b1c <btrfs_lookup_extent_info@@Base+0x108>
   23ab8:	cmp.w	fp, #0
   23abc:	beq.n	23b8e <btrfs_lookup_extent_info@@Base+0x17a>
   23abe:	ldr	r2, [r4, #32]
   23ac0:	cbnz	r2, 23ae2 <btrfs_lookup_extent_info@@Base+0xce>
   23ac2:	mov	r0, r4
   23ac4:	mov.w	fp, #0
   23ac8:	bl	1b2dc <btrfs_release_path@@Base>
   23acc:	mvn.w	r3, #87	; 0x57
   23ad0:	strb.w	r3, [sp, #24]
   23ad4:	ldr.w	r3, [r5, #384]	; 0x180
   23ad8:	str.w	r8, [r9, #4]
   23adc:	str.w	r3, [r9]
   23ae0:	b.n	23aa0 <btrfs_lookup_extent_info@@Base+0x8c>
   23ae2:	subs	r2, #1
   23ae4:	ldr	r0, [r4, #0]
   23ae6:	mov	r1, sl
   23ae8:	str	r2, [r4, #32]
   23aea:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   23aee:	ldrd	r2, r3, [sp, #16]
   23af2:	ldrd	r0, r1, [sp, #8]
   23af6:	cmp	r3, r1
   23af8:	it	eq
   23afa:	cmpeq	r2, r0
   23afc:	bne.n	23ac2 <btrfs_lookup_extent_info@@Base+0xae>
   23afe:	ldrb.w	r3, [sp, #24]
   23b02:	cmp	r3, #168	; 0xa8
   23b04:	bne.n	23ac2 <btrfs_lookup_extent_info@@Base+0xae>
   23b06:	ldr.w	r1, [sp, #29]
   23b0a:	movs	r3, #0
   23b0c:	ldr.w	r0, [sp, #25]
   23b10:	ldr.w	r2, [r5, #384]	; 0x180
   23b14:	cmp	r1, r3
   23b16:	it	eq
   23b18:	cmpeq	r0, r2
   23b1a:	bne.n	23ac2 <btrfs_lookup_extent_info@@Base+0xae>
   23b1c:	ldr	r3, [r4, #0]
   23b1e:	movs	r1, #25
   23b20:	ldr	r2, [r4, #32]
   23b22:	adds	r3, #96	; 0x60
   23b24:	mla	r2, r1, r2, r3
   23b28:	add.w	r1, r2, #101	; 0x65
   23b2c:	ldr.w	r2, [r2, #122]	; 0x7a
   23b30:	cmp	r2, #23
   23b32:	bls.n	23b68 <btrfs_lookup_extent_info@@Base+0x154>
   23b34:	ldr.w	r2, [r1, #17]
   23b38:	adds	r2, #101	; 0x65
   23b3a:	add	r3, r2
   23b3c:	ldr	r1, [r3, #16]
   23b3e:	ldr	r2, [r3, #20]
   23b40:	cbnz	r7, 23b84 <btrfs_lookup_extent_info@@Base+0x170>
   23b42:	cbz	r6, 23b94 <btrfs_lookup_extent_info@@Base+0x180>
   23b44:	movs	r3, #0
   23b46:	strd	r1, r2, [r6]
   23b4a:	mov	r0, r4
   23b4c:	str	r3, [sp, #8]
   23b4e:	bl	1b302 <btrfs_free_path@@Base>
   23b52:	ldr	r3, [sp, #8]
   23b54:	ldr	r1, [pc, #92]	; (23bb4 <btrfs_lookup_extent_info@@Base+0x1a0>)
   23b56:	ldr	r2, [pc, #88]	; (23bb0 <btrfs_lookup_extent_info@@Base+0x19c>)
   23b58:	add	r1, pc
   23b5a:	ldr	r2, [r1, r2]
   23b5c:	ldr	r1, [r2, #0]
   23b5e:	ldr	r2, [sp, #36]	; 0x24
   23b60:	eors	r1, r2
   23b62:	beq.n	23b9e <btrfs_lookup_extent_info@@Base+0x18a>
   23b64:	blx	88e4 <__stack_chk_fail@plt>
   23b68:	ldr	r2, [pc, #76]	; (23bb8 <btrfs_lookup_extent_info@@Base+0x1a4>)
   23b6a:	movs	r3, #1
   23b6c:	ldr	r1, [pc, #76]	; (23bbc <btrfs_lookup_extent_info@@Base+0x1a8>)
   23b6e:	ldr	r0, [pc, #80]	; (23bc0 <btrfs_lookup_extent_info@@Base+0x1ac>)
   23b70:	add	r2, pc
   23b72:	str	r3, [sp, #0]
   23b74:	addw	r2, r2, #343	; 0x157
   23b78:	add	r1, pc
   23b7a:	add	r0, pc
   23b7c:	mov.w	r3, #1360	; 0x550
   23b80:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   23b84:	ldr	r0, [r3, #0]
   23b86:	ldr	r3, [r3, #4]
   23b88:	strd	r0, r3, [r7]
   23b8c:	b.n	23b42 <btrfs_lookup_extent_info@@Base+0x12e>
   23b8e:	mvn.w	r3, #4
   23b92:	b.n	23b4a <btrfs_lookup_extent_info@@Base+0x136>
   23b94:	mov	r3, r6
   23b96:	b.n	23b4a <btrfs_lookup_extent_info@@Base+0x136>
   23b98:	mvn.w	r3, #11
   23b9c:	b.n	23b54 <btrfs_lookup_extent_info@@Base+0x140>
   23b9e:	mov	r0, r3
   23ba0:	add	sp, #44	; 0x2c
   23ba2:	vpop	{d8}
   23ba6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23baa:	nop
   23bac:	strh	r4, [r0, r4]
   23bae:	movs	r4, r0
   23bb0:	lsls	r4, r7, #9
   23bb2:	movs	r0, r0
   23bb4:	str	r0, [r3, r7]
   23bb6:	movs	r4, r0
   23bb8:	b.n	23ac6 <btrfs_lookup_extent_info@@Base+0xb2>
   23bba:	movs	r1, r0
   23bbc:	b.n	23c7a <btrfs_set_block_flags@@Base+0xb6>
   23bbe:	movs	r1, r0
   23bc0:	b.n	2433a <btrfs_free_block_groups@@Base+0xb4>
   23bc2:	movs	r1, r0

00023bc4 <btrfs_set_block_flags@@Base>:
   23bc4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23bc8:	sub	sp, #52	; 0x34
   23bca:	ldr	r4, [r0, #0]
   23bcc:	mov	r5, r0
   23bce:	strd	r2, r3, [sp, #8]
   23bd2:	movs	r7, #0
   23bd4:	ldr	r3, [sp, #96]	; 0x60
   23bd6:	mov	r9, r7
   23bd8:	ldr	r2, [pc, #420]	; (23d80 <btrfs_set_block_flags@@Base+0x1bc>)
   23bda:	ldr	r6, [sp, #88]	; 0x58
   23bdc:	str	r3, [sp, #16]
   23bde:	add	r2, pc
   23be0:	ldr	r3, [sp, #100]	; 0x64
   23be2:	ldr.w	fp, [pc, #416]	; 23d84 <btrfs_set_block_flags@@Base+0x1c0>
   23be6:	str	r3, [sp, #20]
   23be8:	add	fp, pc
   23bea:	ldr	r3, [pc, #412]	; (23d88 <btrfs_set_block_flags@@Base+0x1c4>)
   23bec:	ldr	r3, [r2, r3]
   23bee:	ldr	r3, [r3, #0]
   23bf0:	str	r3, [sp, #44]	; 0x2c
   23bf2:	mov.w	r3, #0
   23bf6:	ldr.w	r3, [r4, #308]	; 0x134
   23bfa:	ldr.w	r3, [r3, #188]	; 0xbc
   23bfe:	and.w	r8, r3, #256	; 0x100
   23c02:	bl	1b2d4 <btrfs_alloc_path@@Base>
   23c06:	mov	sl, r0
   23c08:	cmp	r0, #0
   23c0a:	beq.w	23d70 <btrfs_set_block_flags@@Base+0x1ac>
   23c0e:	ldrd	r1, r2, [sp, #8]
   23c12:	movs	r3, #1
   23c14:	strb.w	r3, [r0, #64]	; 0x40
   23c18:	strd	r1, r2, [sp, #24]
   23c1c:	orrs.w	r2, r8, r9
   23c20:	add.w	r2, sp, #33	; 0x21
   23c24:	beq.n	23c7e <btrfs_set_block_flags@@Base+0xba>
   23c26:	mov	r8, r3
   23c28:	asrs	r1, r6, #31
   23c2a:	str.w	r6, [sp, #33]	; 0x21
   23c2e:	str	r1, [r2, #4]
   23c30:	movs	r2, #169	; 0xa9
   23c32:	strb.w	r2, [sp, #32]
   23c36:	add	r7, sp, #24
   23c38:	movs	r6, #0
   23c3a:	strd	r6, r6, [sp]
   23c3e:	mov	r3, sl
   23c40:	ldr	r1, [r4, #24]
   23c42:	mov	r2, r7
   23c44:	mov	r0, r5
   23c46:	bl	1d6c0 <btrfs_search_slot@@Base>
   23c4a:	subs.w	r9, r0, #0
   23c4e:	blt.n	23cfa <btrfs_set_block_flags@@Base+0x136>
   23c50:	beq.n	23cd0 <btrfs_set_block_flags@@Base+0x10c>
   23c52:	cmp.w	r8, #0
   23c56:	beq.n	23d14 <btrfs_set_block_flags@@Base+0x150>
   23c58:	ldr.w	r2, [sl, #32]
   23c5c:	cbnz	r2, 23c92 <btrfs_set_block_flags@@Base+0xce>
   23c5e:	mov	r0, sl
   23c60:	mov.w	r8, #0
   23c64:	bl	1b2dc <btrfs_release_path@@Base>
   23c68:	ldr.w	r3, [r4, #384]	; 0x180
   23c6c:	str.w	r6, [sp, #37]	; 0x25
   23c70:	str.w	r3, [sp, #33]	; 0x21
   23c74:	mvn.w	r3, #87	; 0x57
   23c78:	strb.w	r3, [sp, #32]
   23c7c:	b.n	23c3a <btrfs_set_block_flags@@Base+0x76>
   23c7e:	ldr.w	r3, [r4, #384]	; 0x180
   23c82:	mov	r8, r7
   23c84:	str	r7, [r2, #4]
   23c86:	str.w	r3, [sp, #33]	; 0x21
   23c8a:	movs	r3, #168	; 0xa8
   23c8c:	strb.w	r3, [sp, #32]
   23c90:	b.n	23c36 <btrfs_set_block_flags@@Base+0x72>
   23c92:	subs	r2, #1
   23c94:	ldr.w	r0, [sl]
   23c98:	mov	r1, r7
   23c9a:	str.w	r2, [sl, #32]
   23c9e:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   23ca2:	ldrd	r2, r3, [sp, #24]
   23ca6:	ldrd	r0, r1, [sp, #8]
   23caa:	cmp	r3, r1
   23cac:	it	eq
   23cae:	cmpeq	r2, r0
   23cb0:	bne.n	23c5e <btrfs_set_block_flags@@Base+0x9a>
   23cb2:	ldr.w	r9, [sp, #37]	; 0x25
   23cb6:	movs	r3, #0
   23cb8:	ldr.w	r8, [sp, #33]	; 0x21
   23cbc:	ldr.w	r2, [r4, #384]	; 0x180
   23cc0:	cmp	r9, r3
   23cc2:	it	eq
   23cc4:	cmpeq	r8, r2
   23cc6:	bne.n	23c5e <btrfs_set_block_flags@@Base+0x9a>
   23cc8:	ldrb.w	r3, [sp, #32]
   23ccc:	cmp	r3, #168	; 0xa8
   23cce:	bne.n	23c5e <btrfs_set_block_flags@@Base+0x9a>
   23cd0:	ldr.w	r3, [sl]
   23cd4:	movs	r1, #25
   23cd6:	ldr.w	r2, [sl, #32]
   23cda:	adds	r3, #96	; 0x60
   23cdc:	mla	r2, r1, r2, r3
   23ce0:	add.w	r0, r2, #101	; 0x65
   23ce4:	ldr.w	r1, [r2, #122]	; 0x7a
   23ce8:	cmp	r1, #23
   23cea:	bhi.n	23d52 <btrfs_set_block_flags@@Base+0x18e>
   23cec:	ldr	r0, [pc, #156]	; (23d8c <btrfs_set_block_flags@@Base+0x1c8>)
   23cee:	movs	r2, #24
   23cf0:	mvn.w	r9, #116	; 0x74
   23cf4:	add	r0, pc
   23cf6:	bl	1a900 <__btrfs_error@@Base>
   23cfa:	mov	r0, sl
   23cfc:	bl	1b302 <btrfs_free_path@@Base>
   23d00:	ldr	r2, [pc, #140]	; (23d90 <btrfs_set_block_flags@@Base+0x1cc>)
   23d02:	ldr	r3, [pc, #132]	; (23d88 <btrfs_set_block_flags@@Base+0x1c4>)
   23d04:	add	r2, pc
   23d06:	ldr	r3, [r2, r3]
   23d08:	ldr	r2, [r3, #0]
   23d0a:	ldr	r3, [sp, #44]	; 0x2c
   23d0c:	eors	r2, r3
   23d0e:	beq.n	23d76 <btrfs_set_block_flags@@Base+0x1b2>
   23d10:	blx	88e4 <__stack_chk_fail@plt>
   23d14:	ldr.w	r0, [sl]
   23d18:	bl	284a8 <btrfs_print_leaf@@Base>
   23d1c:	ldr	r3, [pc, #116]	; (23d94 <btrfs_set_block_flags@@Base+0x1d0>)
   23d1e:	ldrd	r1, r2, [sp, #8]
   23d22:	ldr.w	r3, [fp, r3]
   23d26:	strd	r1, r2, [sp]
   23d2a:	movs	r1, #1
   23d2c:	ldr	r2, [pc, #104]	; (23d98 <btrfs_set_block_flags@@Base+0x1d4>)
   23d2e:	ldr	r0, [r3, #0]
   23d30:	add	r2, pc
   23d32:	blx	8ca0 <__fprintf_chk@plt+0x4>
   23d36:	ldr	r2, [pc, #100]	; (23d9c <btrfs_set_block_flags@@Base+0x1d8>)
   23d38:	ldr	r1, [pc, #100]	; (23da0 <btrfs_set_block_flags@@Base+0x1dc>)
   23d3a:	movs	r3, #1
   23d3c:	ldr	r0, [pc, #100]	; (23da4 <btrfs_set_block_flags@@Base+0x1e0>)
   23d3e:	add	r2, pc
   23d40:	str	r3, [sp, #0]
   23d42:	add.w	r2, r2, #368	; 0x170
   23d46:	add	r1, pc
   23d48:	add	r0, pc
   23d4a:	movw	r3, #1426	; 0x592
   23d4e:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   23d52:	ldr.w	r2, [r0, #17]
   23d56:	mov.w	r9, #0
   23d5a:	ldr	r0, [sp, #16]
   23d5c:	adds	r2, #101	; 0x65
   23d5e:	add	r3, r2
   23d60:	ldr	r1, [r3, #16]
   23d62:	ldr	r2, [r3, #20]
   23d64:	orrs	r1, r0
   23d66:	ldr	r0, [sp, #20]
   23d68:	str	r1, [r3, #16]
   23d6a:	orrs	r2, r0
   23d6c:	str	r2, [r3, #20]
   23d6e:	b.n	23cfa <btrfs_set_block_flags@@Base+0x136>
   23d70:	mvn.w	r9, #11
   23d74:	b.n	23d00 <btrfs_set_block_flags@@Base+0x13c>
   23d76:	mov	r0, r9
   23d78:	add	sp, #52	; 0x34
   23d7a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d7e:	nop
   23d80:	str	r2, [r2, r5]
   23d82:	movs	r4, r0
   23d84:	str	r0, [r1, r5]
   23d86:	movs	r4, r0
   23d88:	lsls	r4, r7, #9
   23d8a:	movs	r0, r0
   23d8c:	b.n	23fb8 <update_space_info@@Base+0x7c>
   23d8e:	movs	r1, r0
   23d90:	str	r4, [r5, r0]
   23d92:	movs	r4, r0
   23d94:	lsls	r4, r1, #10
   23d96:	movs	r0, r0
   23d98:	b.n	24228 <btrfs_free_extent@@Base+0x154>
   23d9a:	movs	r1, r0
   23d9c:	b.n	2390e <btrfs_inc_extent_ref@@Base+0x396>
   23d9e:	movs	r1, r0
   23da0:	udf	#143	; 0x8f
   23da2:	movs	r1, r0
   23da4:	b.n	24182 <btrfs_free_extent@@Base+0xae>
   23da6:	movs	r1, r0

00023da8 <btrfs_inc_ref@@Base>:
   23da8:	push	{r0, r1, r4, lr}
   23daa:	movs	r4, #1
   23dac:	str	r4, [sp, #0]
   23dae:	bl	21b72 <btrfs_create_tree@@Base+0x36e>
   23db2:	add	sp, #8
   23db4:	pop	{r4, pc}

00023db6 <btrfs_dec_ref@@Base>:
   23db6:	push	{r0, r1, r4, lr}
   23db8:	movs	r4, #0
   23dba:	str	r4, [sp, #0]
   23dbc:	bl	21b72 <btrfs_create_tree@@Base+0x36e>
   23dc0:	add	sp, #8
   23dc2:	pop	{r4, pc}

00023dc4 <btrfs_write_dirty_block_groups@@Base>:
   23dc4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23dc8:	mov	r8, r0
   23dca:	vpush	{d8}
   23dce:	ldr	r2, [pc, #340]	; (23f24 <btrfs_write_dirty_block_groups@@Base+0x160>)
   23dd0:	ldr	r3, [pc, #340]	; (23f28 <btrfs_write_dirty_block_groups@@Base+0x164>)
   23dd2:	add	r2, pc
   23dd4:	sub	sp, #92	; 0x5c
   23dd6:	ldr	r7, [r0, #0]
   23dd8:	ldr	r3, [r2, r3]
   23dda:	ldr	r3, [r3, #0]
   23ddc:	str	r3, [sp, #84]	; 0x54
   23dde:	mov.w	r3, #0
   23de2:	bl	1b2d4 <btrfs_alloc_path@@Base>
   23de6:	mov	r4, r0
   23de8:	cmp	r0, #0
   23dea:	beq.w	23f12 <btrfs_write_dirty_block_groups@@Base+0x14e>
   23dee:	movs	r3, #0
   23df0:	movs	r2, #0
   23df2:	strd	r2, r3, [sp, #16]
   23df6:	adds	r7, #128	; 0x80
   23df8:	ldr	r3, [pc, #304]	; (23f2c <btrfs_write_dirty_block_groups@@Base+0x168>)
   23dfa:	ldr.w	fp, [pc, #308]	; 23f30 <btrfs_write_dirty_block_groups@@Base+0x16c>
   23dfe:	add	r3, pc
   23e00:	str	r3, [sp, #24]
   23e02:	add.w	r3, r3, #390	; 0x186
   23e06:	add	fp, pc
   23e08:	vmov	s16, r3
   23e0c:	add	r3, sp, #40	; 0x28
   23e0e:	mov.w	r9, #1
   23e12:	str	r3, [sp, #4]
   23e14:	mov	r0, r7
   23e16:	add	r3, sp, #32
   23e18:	str.w	r9, [sp, #8]
   23e1c:	str	r3, [sp, #0]
   23e1e:	ldrd	r2, r3, [sp, #16]
   23e22:	bl	19f9c <find_first_extent_bit@@Base>
   23e26:	mov	r5, r0
   23e28:	cbz	r0, 23e3c <btrfs_write_dirty_block_groups@@Base+0x78>
   23e2a:	ldrd	r2, r3, [sp, #16]
   23e2e:	orrs	r3, r2
   23e30:	beq.n	23ef6 <btrfs_write_dirty_block_groups@@Base+0x132>
   23e32:	movs	r2, #0
   23e34:	movs	r3, #0
   23e36:	strd	r2, r3, [sp, #16]
   23e3a:	b.n	23e0c <btrfs_write_dirty_block_groups@@Base+0x48>
   23e3c:	ldr	r3, [sp, #40]	; 0x28
   23e3e:	mov	r0, r7
   23e40:	ldr.w	sl, [pc, #240]	; 23f34 <btrfs_write_dirty_block_groups@@Base+0x170>
   23e44:	adds	r3, #1
   23e46:	str	r3, [sp, #16]
   23e48:	ldr	r3, [sp, #44]	; 0x2c
   23e4a:	add	sl, pc
   23e4c:	adc.w	r3, r3, #0
   23e50:	str	r3, [sp, #20]
   23e52:	add	r3, sp, #48	; 0x30
   23e54:	str	r3, [sp, #0]
   23e56:	ldrd	r2, r3, [sp, #32]
   23e5a:	bl	1a078 <get_state_private@@Base>
   23e5e:	mov	r1, fp
   23e60:	vmov	r2, s16
   23e64:	mov.w	r3, #1592	; 0x638
   23e68:	str	r0, [sp, #0]
   23e6a:	mov	r0, sl
   23e6c:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   23e70:	ldrd	r2, r3, [sp, #40]	; 0x28
   23e74:	mov	r0, r7
   23e76:	str.w	r9, [sp, #8]
   23e7a:	strd	r2, r3, [sp]
   23e7e:	ldrd	r2, r3, [sp, #32]
   23e82:	bl	19bca <clear_extent_bits@@Base>
   23e86:	ldr.w	r1, [r8]
   23e8a:	ldr	r6, [sp, #48]	; 0x30
   23e8c:	mov	r3, r4
   23e8e:	strd	r5, r9, [sp]
   23e92:	mov	r0, r8
   23e94:	ldr	r1, [r1, #24]
   23e96:	add.w	r2, r6, #40	; 0x28
   23e9a:	bl	1d6c0 <btrfs_search_slot@@Base>
   23e9e:	cmp	r0, #0
   23ea0:	blt.n	23e0c <btrfs_write_dirty_block_groups@@Base+0x48>
   23ea2:	ldr	r2, [sp, #24]
   23ea4:	mov	r1, fp
   23ea6:	str	r0, [sp, #0]
   23ea8:	movw	r3, #1547	; 0x60b
   23eac:	mov	r0, sl
   23eae:	addw	r2, r2, #421	; 0x1a5
   23eb2:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   23eb6:	ldr	r0, [r4, #0]
   23eb8:	ldr	r3, [r4, #32]
   23eba:	movs	r2, #25
   23ebc:	add	r1, sp, #60	; 0x3c
   23ebe:	str	r0, [sp, #28]
   23ec0:	mla	r3, r2, r3, r0
   23ec4:	ldr.w	r2, [r3, #214]	; 0xd6
   23ec8:	ldr	r3, [r6, #72]	; 0x48
   23eca:	adds	r2, #101	; 0x65
   23ecc:	str	r3, [sp, #60]	; 0x3c
   23ece:	ldr	r3, [r6, #76]	; 0x4c
   23ed0:	str	r3, [sp, #64]	; 0x40
   23ed2:	ldr	r3, [r6, #96]	; 0x60
   23ed4:	str	r3, [sp, #76]	; 0x4c
   23ed6:	ldr	r3, [r6, #100]	; 0x64
   23ed8:	str	r3, [sp, #80]	; 0x50
   23eda:	mov.w	r3, #256	; 0x100
   23ede:	strd	r3, r5, [sp, #68]	; 0x44
   23ee2:	movs	r3, #24
   23ee4:	bl	1a7b4 <write_extent_buffer@@Base>
   23ee8:	ldr	r0, [sp, #28]
   23eea:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   23eee:	mov	r0, r4
   23ef0:	bl	1b2dc <btrfs_release_path@@Base>
   23ef4:	b.n	23e0c <btrfs_write_dirty_block_groups@@Base+0x48>
   23ef6:	mov	r0, r4
   23ef8:	bl	1b302 <btrfs_free_path@@Base>
   23efc:	movs	r0, #0
   23efe:	ldr	r2, [pc, #56]	; (23f38 <btrfs_write_dirty_block_groups@@Base+0x174>)
   23f00:	ldr	r3, [pc, #36]	; (23f28 <btrfs_write_dirty_block_groups@@Base+0x164>)
   23f02:	add	r2, pc
   23f04:	ldr	r3, [r2, r3]
   23f06:	ldr	r2, [r3, #0]
   23f08:	ldr	r3, [sp, #84]	; 0x54
   23f0a:	eors	r2, r3
   23f0c:	beq.n	23f18 <btrfs_write_dirty_block_groups@@Base+0x154>
   23f0e:	blx	88e4 <__stack_chk_fail@plt>
   23f12:	mvn.w	r0, #11
   23f16:	b.n	23efe <btrfs_write_dirty_block_groups@@Base+0x13a>
   23f18:	add	sp, #92	; 0x5c
   23f1a:	vpop	{d8}
   23f1e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f22:	nop
   23f24:	ldr	r7, [pc, #376]	; (240a0 <btrfs_finish_extent_commit@@Base+0x90>)
   23f26:	movs	r4, r0
   23f28:	lsls	r4, r7, #9
   23f2a:	movs	r0, r0
   23f2c:	b.n	2391e <btrfs_inc_extent_ref@@Base+0x3a6>
   23f2e:	movs	r1, r0
   23f30:	ble.n	23ed2 <btrfs_write_dirty_block_groups@@Base+0x10e>
   23f32:	movs	r1, r0
   23f34:	add	r2, sp, #204	; 0xcc
   23f36:	movs	r1, r0
   23f38:	ldr	r6, [pc, #184]	; (23ff4 <update_space_info@@Base+0xb8>)
   23f3a:	movs	r4, r0

00023f3c <update_space_info@@Base>:
   23f3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23f40:	sub	sp, #36	; 0x24
   23f42:	mov	r5, r0
   23f44:	mov	r4, r2
   23f46:	ldr	r1, [sp, #80]	; 0x50
   23f48:	ldrd	r7, fp, [sp, #72]	; 0x48
   23f4c:	ldr.w	sl, [sp, #84]	; 0x54
   23f50:	str	r1, [sp, #24]
   23f52:	ldr	r1, [pc, #176]	; (24004 <update_space_info@@Base+0xc8>)
   23f54:	add	r1, pc
   23f56:	str	r1, [sp, #28]
   23f58:	bl	219cc <btrfs_create_tree@@Base+0x1c8>
   23f5c:	mov	r6, r0
   23f5e:	cbz	r0, 23fba <update_space_info@@Base+0x7e>
   23f60:	ldrd	r2, r0, [r0, #8]
   23f64:	ldr	r1, [sp, #28]
   23f66:	adds	r3, r7, r2
   23f68:	str	r3, [sp, #16]
   23f6a:	adc.w	r3, fp, r0
   23f6e:	str	r3, [sp, #20]
   23f70:	ldrd	r3, r4, [sp, #16]
   23f74:	ldrd	r2, r0, [r6, #16]
   23f78:	strd	r3, r4, [r6, #8]
   23f7c:	ldr	r3, [sp, #24]
   23f7e:	adds.w	r8, r3, r2
   23f82:	ldrd	r3, r4, [sp, #16]
   23f86:	adc.w	r9, sl, r0
   23f8a:	strd	r8, r9, [r6, #16]
   23f8e:	cmp	r4, r9
   23f90:	it	eq
   23f92:	cmpeq	r3, r8
   23f94:	bcs.n	23fae <update_space_info@@Base+0x72>
   23f96:	ldr	r2, [pc, #112]	; (24008 <update_space_info@@Base+0xcc>)
   23f98:	ldr	r0, [r1, r2]
   23f9a:	movs	r1, #1
   23f9c:	ldr	r2, [pc, #108]	; (2400c <update_space_info@@Base+0xd0>)
   23f9e:	strd	r8, r9, [sp, #8]
   23fa2:	strd	r3, r4, [sp]
   23fa6:	add	r2, pc
   23fa8:	ldr	r0, [r0, #0]
   23faa:	blx	8ca0 <__fprintf_chk@plt+0x4>
   23fae:	ldr	r3, [sp, #88]	; 0x58
   23fb0:	str	r6, [r3, #0]
   23fb2:	movs	r0, #0
   23fb4:	add	sp, #36	; 0x24
   23fb6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23fba:	movs	r0, #56	; 0x38
   23fbc:	blx	8a94 <malloc@plt+0x4>
   23fc0:	cbz	r0, 23ffe <update_space_info@@Base+0xc2>
   23fc2:	ldr.w	r1, [r5, #356]	; 0x164
   23fc6:	add.w	r2, r0, #44	; 0x2c
   23fca:	ldr	r3, [sp, #24]
   23fcc:	and.w	r4, r4, #7
   23fd0:	str	r2, [r1, #4]
   23fd2:	strd	r3, sl, [r0, #16]
   23fd6:	ldr	r3, [sp, #88]	; 0x58
   23fd8:	str.w	r2, [r5, #356]	; 0x164
   23fdc:	str	r1, [r0, #44]	; 0x2c
   23fde:	add.w	r1, r5, #356	; 0x164
   23fe2:	strd	r4, r6, [r0]
   23fe6:	movs	r5, #0
   23fe8:	movs	r4, #0
   23fea:	str	r1, [r0, #48]	; 0x30
   23fec:	strd	r7, fp, [r0, #8]
   23ff0:	strd	r4, r5, [r0, #24]
   23ff4:	strd	r4, r5, [r0, #32]
   23ff8:	str	r6, [r0, #40]	; 0x28
   23ffa:	str	r0, [r3, #0]
   23ffc:	b.n	23fb2 <update_space_info@@Base+0x76>
   23ffe:	mvn.w	r0, #11
   24002:	b.n	23fb4 <update_space_info@@Base+0x78>
   24004:	ldr	r5, [pc, #880]	; (24378 <btrfs_free_block_groups@@Base+0xf2>)
   24006:	movs	r4, r0
   24008:	lsls	r4, r1, #10
   2400a:	movs	r0, r0
   2400c:	svc	241	; 0xf1
   2400e:	movs	r1, r0

00024010 <btrfs_finish_extent_commit@@Base>:
   24010:	ldr	r2, [pc, #156]	; (240b0 <btrfs_finish_extent_commit@@Base+0xa0>)
   24012:	ldr	r3, [pc, #160]	; (240b4 <btrfs_finish_extent_commit@@Base+0xa4>)
   24014:	add	r2, pc
   24016:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2401a:	sub	sp, #44	; 0x2c
   2401c:	ldr	r4, [r0, #0]
   2401e:	add	r7, sp, #24
   24020:	ldr	r3, [r2, r3]
   24022:	add.w	r8, sp, #16
   24026:	add.w	r5, r4, #96	; 0x60
   2402a:	adds	r4, #160	; 0xa0
   2402c:	ldr	r3, [r3, #0]
   2402e:	str	r3, [sp, #36]	; 0x24
   24030:	mov.w	r3, #0
   24034:	mov	r9, r0
   24036:	movs	r6, #1
   24038:	movs	r2, #0
   2403a:	movs	r3, #0
   2403c:	mov	r0, r4
   2403e:	strd	r7, r6, [sp, #4]
   24042:	str.w	r8, [sp]
   24046:	bl	19f9c <find_first_extent_bit@@Base>
   2404a:	cbnz	r0, 24094 <btrfs_finish_extent_commit@@Base+0x84>
   2404c:	ldr	r1, [sp, #24]
   2404e:	ldrd	r2, r3, [sp, #16]
   24052:	str	r0, [sp, #8]
   24054:	adds	r1, #1
   24056:	ldr	r0, [sp, #28]
   24058:	adc.w	r0, r0, #0
   2405c:	subs	r1, r1, r2
   2405e:	sbc.w	r0, r0, r3
   24062:	strd	r1, r0, [sp]
   24066:	ldr.w	r0, [r9]
   2406a:	bl	223d4 <btrfs_lookup_block_group@@Base+0x98>
   2406e:	ldrd	r2, r3, [sp, #24]
   24072:	mov	r0, r4
   24074:	strd	r2, r3, [sp]
   24078:	ldrd	r2, r3, [sp, #16]
   2407c:	bl	19f84 <clear_extent_dirty@@Base>
   24080:	ldrd	r2, r3, [sp, #24]
   24084:	mov	r0, r5
   24086:	strd	r2, r3, [sp]
   2408a:	ldrd	r2, r3, [sp, #16]
   2408e:	bl	19f6c <set_extent_dirty@@Base>
   24092:	b.n	24038 <btrfs_finish_extent_commit@@Base+0x28>
   24094:	ldr	r2, [pc, #32]	; (240b8 <btrfs_finish_extent_commit@@Base+0xa8>)
   24096:	ldr	r3, [pc, #28]	; (240b4 <btrfs_finish_extent_commit@@Base+0xa4>)
   24098:	add	r2, pc
   2409a:	ldr	r3, [r2, r3]
   2409c:	ldr	r2, [r3, #0]
   2409e:	ldr	r3, [sp, #36]	; 0x24
   240a0:	eors	r2, r3
   240a2:	beq.n	240a8 <btrfs_finish_extent_commit@@Base+0x98>
   240a4:	blx	88e4 <__stack_chk_fail@plt>
   240a8:	add	sp, #44	; 0x2c
   240aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   240ae:	nop
   240b0:	ldr	r5, [pc, #112]	; (24124 <btrfs_free_extent@@Base+0x50>)
   240b2:	movs	r4, r0
   240b4:	lsls	r4, r7, #9
   240b6:	movs	r0, r0
   240b8:	ldr	r4, [pc, #608]	; (2431c <btrfs_free_block_groups@@Base+0x96>)
   240ba:	movs	r4, r0

000240bc <btrfs_pin_extent@@Base>:
   240bc:	push	{r4, r5, lr}
   240be:	sub	sp, #20
   240c0:	movs	r1, #1
   240c2:	ldrd	r4, r5, [sp, #32]
   240c6:	str	r1, [sp, #8]
   240c8:	strd	r4, r5, [sp]
   240cc:	bl	223d4 <btrfs_lookup_block_group@@Base+0x98>
   240d0:	add	sp, #20
   240d2:	pop	{r4, r5, pc}

000240d4 <btrfs_free_extent@@Base>:
   240d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   240d8:	sub	sp, #84	; 0x54
   240da:	mov	r6, r2
   240dc:	mov	r5, r3
   240de:	ldrd	r2, r3, [sp, #128]	; 0x80
   240e2:	mov	r4, r0
   240e4:	mov	r0, r1
   240e6:	ldrd	r8, r9, [sp, #120]	; 0x78
   240ea:	mov.w	ip, #0
   240ee:	ldr	r1, [pc, #296]	; (24218 <btrfs_free_extent@@Base+0x144>)
   240f0:	strd	r2, r3, [sp, #64]	; 0x40
   240f4:	cmp	r9, ip
   240f6:	ldrd	r2, r3, [sp, #136]	; 0x88
   240fa:	add	r1, pc
   240fc:	ldrd	r7, sl, [sp, #152]	; 0x98
   24100:	mvn.w	fp, #5
   24104:	strd	r2, r3, [sp, #56]	; 0x38
   24108:	ldrd	r2, r3, [sp, #144]	; 0x90
   2410c:	strd	r2, r3, [sp, #48]	; 0x30
   24110:	ldr.w	r3, [r0, #464]	; 0x1d0
   24114:	ldr	r2, [pc, #260]	; (2421c <btrfs_free_extent@@Base+0x148>)
   24116:	ldr	r0, [pc, #264]	; (24220 <btrfs_free_extent@@Base+0x14c>)
   24118:	ldr.w	r3, [r3, #388]	; 0x184
   2411c:	add	r2, pc
   2411e:	addw	r2, r2, #443	; 0x1bb
   24122:	add	r0, pc
   24124:	it	eq
   24126:	cmpeq	r8, r3
   24128:	strd	r1, r2, [sp, #72]	; 0x48
   2412c:	ite	cc
   2412e:	movcc	r3, #1
   24130:	movcs	r3, #0
   24132:	str	r3, [sp, #0]
   24134:	movw	r3, #2154	; 0x86a
   24138:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   2413c:	ldrd	r2, r3, [sp, #56]	; 0x38
   24140:	mov.w	ip, #4294967295	; 0xffffffff
   24144:	cmp	r3, ip
   24146:	it	eq
   24148:	cmpeq	r2, fp
   2414a:	ldrd	r1, r2, [sp, #72]	; 0x48
   2414e:	bne.n	24196 <btrfs_free_extent@@Base+0xc2>
   24150:	ldr	r0, [pc, #208]	; (24224 <btrfs_free_extent@@Base+0x150>)
   24152:	str	r1, [sp, #64]	; 0x40
   24154:	add	r0, pc
   24156:	str	r2, [sp, #56]	; 0x38
   24158:	blx	8a78 <puts@plt+0x4>
   2415c:	ldrd	r2, r3, [sp, #48]	; 0x30
   24160:	ldr	r0, [pc, #196]	; (24228 <btrfs_free_extent@@Base+0x154>)
   24162:	cmp	r3, #0
   24164:	ldr	r1, [sp, #64]	; 0x40
   24166:	it	eq
   24168:	cmpeq.w	r2, #256	; 0x100
   2416c:	add	r0, pc
   2416e:	ldr	r2, [sp, #56]	; 0x38
   24170:	ite	cs
   24172:	movcs	r3, #1
   24174:	movcc	r3, #0
   24176:	str	r3, [sp, #0]
   24178:	movw	r3, #2161	; 0x871
   2417c:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   24180:	ldr	r0, [r4, #0]
   24182:	mov	r2, r6
   24184:	mov	r3, r5
   24186:	strd	r8, r9, [sp]
   2418a:	bl	240bc <btrfs_pin_extent@@Base>
   2418e:	movs	r0, #0
   24190:	add	sp, #84	; 0x54
   24192:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24196:	ldrd	fp, ip, [sp, #48]	; 0x30
   2419a:	cmp.w	ip, #0
   2419e:	it	eq
   241a0:	cmpeq.w	fp, #256	; 0x100
   241a4:	bcs.n	241e6 <btrfs_free_extent@@Base+0x112>
   241a6:	ldr	r0, [pc, #132]	; (2422c <btrfs_free_extent@@Base+0x158>)
   241a8:	movw	r3, #2165	; 0x875
   241ac:	str	r7, [sp, #0]
   241ae:	add	r0, pc
   241b0:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   241b4:	movs	r3, #0
   241b6:	strd	r3, r3, [sp, #36]	; 0x24
   241ba:	mov	r1, r4
   241bc:	str	r3, [sp, #32]
   241be:	movs	r3, #2
   241c0:	str	r3, [sp, #28]
   241c2:	ldr	r3, [sp, #48]	; 0x30
   241c4:	ldr	r0, [r4, #0]
   241c6:	strd	r8, r9, [sp]
   241ca:	str	r3, [sp, #24]
   241cc:	ldrd	r2, r3, [sp, #56]	; 0x38
   241d0:	strd	r2, r3, [sp, #16]
   241d4:	ldrd	r2, r3, [sp, #64]	; 0x40
   241d8:	strd	r2, r3, [sp, #8]
   241dc:	mov	r2, r6
   241de:	mov	r3, r5
   241e0:	bl	2737c <btrfs_add_delayed_tree_ref@@Base>
   241e4:	b.n	24190 <btrfs_free_extent@@Base+0xbc>
   241e6:	ldrd	r2, r3, [sp, #48]	; 0x30
   241ea:	mov	r0, r4
   241ec:	strd	r7, sl, [sp, #152]	; 0x98
   241f0:	strd	r8, r9, [sp, #120]	; 0x78
   241f4:	strd	r2, r3, [sp, #144]	; 0x90
   241f8:	ldrd	r2, r3, [sp, #56]	; 0x38
   241fc:	strd	r2, r3, [sp, #136]	; 0x88
   24200:	ldrd	r2, r3, [sp, #64]	; 0x40
   24204:	strd	r2, r3, [sp, #128]	; 0x80
   24208:	mov	r2, r6
   2420a:	mov	r3, r5
   2420c:	add	sp, #84	; 0x54
   2420e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24212:	b.w	22c54 <hash_extent_data_ref@@Base+0x3f4>
   24216:	nop
   24218:	bge.n	241d2 <btrfs_free_extent@@Base+0xfe>
   2421a:	movs	r1, r0
   2421c:	b.n	245d2 <btrfs_make_block_groups@@Base+0x236>
   2421e:	movs	r1, r0
   24220:	udf	#169	; 0xa9
   24222:	movs	r1, r0
   24224:	udf	#157	; 0x9d
   24226:	movs	r1, r0
   24228:	udf	#161	; 0xa1
   2422a:	movs	r1, r0
   2422c:	ldr??.w	r0, [r6, #1]

00024230 <btrfs_unpin_extent@@Base>:
   24230:	push	{r4, r5, lr}
   24232:	sub	sp, #20
   24234:	movs	r1, #0
   24236:	ldrd	r4, r5, [sp, #32]
   2423a:	str	r1, [sp, #8]
   2423c:	strd	r4, r5, [sp]
   24240:	bl	223d4 <btrfs_lookup_block_group@@Base+0x98>
   24244:	add	sp, #20
   24246:	pop	{r4, r5, pc}

00024248 <btrfs_free_tree_block@@Base>:
   24248:	push	{r4, r5, lr}
   2424a:	sub	sp, #44	; 0x2c
   2424c:	movs	r4, #0
   2424e:	movs	r5, #0
   24250:	strd	r4, r5, [sp, #32]
   24254:	movs	r5, #0
   24256:	ldrb.w	r4, [r2, #196]	; 0xc4
   2425a:	ldr.w	r3, [r1, #451]	; 0x1c3
   2425e:	strd	r4, r5, [sp, #24]
   24262:	ldr.w	r4, [r1, #447]	; 0x1bf
   24266:	strd	r4, r3, [sp, #16]
   2426a:	ldrd	r4, r5, [sp, #56]	; 0x38
   2426e:	strd	r4, r5, [sp, #8]
   24272:	ldr	r3, [r2, #76]	; 0x4c
   24274:	str	r3, [sp, #0]
   24276:	movs	r3, #0
   24278:	str	r3, [sp, #4]
   2427a:	ldrd	r2, r3, [r2, #40]	; 0x28
   2427e:	bl	240d4 <btrfs_free_extent@@Base>
   24282:	add	sp, #44	; 0x2c
   24284:	pop	{r4, r5, pc}

00024286 <btrfs_free_block_groups@@Base>:
   24286:	ldr	r2, [pc, #260]	; (2438c <btrfs_free_block_groups@@Base+0x106>)
   24288:	ldr	r3, [pc, #260]	; (24390 <btrfs_free_block_groups@@Base+0x10a>)
   2428a:	add	r2, pc
   2428c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   24290:	sub	sp, #52	; 0x34
   24292:	ldr	r3, [r2, r3]
   24294:	add.w	r6, r0, #128	; 0x80
   24298:	add	r7, sp, #24
   2429a:	mov	r4, r0
   2429c:	ldr	r3, [r3, #0]
   2429e:	str	r3, [sp, #44]	; 0x2c
   242a0:	mov.w	r3, #0
   242a4:	mov.w	r9, #4294967295	; 0xffffffff
   242a8:	add.w	r8, sp, #16
   242ac:	movs	r2, #0
   242ae:	movs	r3, #0
   242b0:	mov	r0, r6
   242b2:	strd	r7, r9, [sp, #4]
   242b6:	str.w	r8, [sp]
   242ba:	bl	19f9c <find_first_extent_bit@@Base>
   242be:	cbz	r0, 242fe <btrfs_free_block_groups@@Base+0x78>
   242c0:	add.w	r5, r4, #96	; 0x60
   242c4:	movs	r6, #1
   242c6:	movs	r2, #0
   242c8:	movs	r3, #0
   242ca:	mov	r0, r5
   242cc:	strd	r7, r6, [sp, #4]
   242d0:	str.w	r8, [sp]
   242d4:	bl	19f9c <find_first_extent_bit@@Base>
   242d8:	cbz	r0, 2433e <btrfs_free_block_groups@@Base+0xb8>
   242da:	ldr	r6, [pc, #184]	; (24394 <btrfs_free_block_groups@@Base+0x10e>)
   242dc:	add.w	r5, r4, #356	; 0x164
   242e0:	add	r6, pc
   242e2:	ldr.w	r3, [r4, #356]	; 0x164
   242e6:	cmp	r3, r5
   242e8:	bne.n	24352 <btrfs_free_block_groups@@Base+0xcc>
   242ea:	ldr	r2, [pc, #172]	; (24398 <btrfs_free_block_groups@@Base+0x112>)
   242ec:	ldr	r3, [pc, #160]	; (24390 <btrfs_free_block_groups@@Base+0x10a>)
   242ee:	add	r2, pc
   242f0:	ldr	r3, [r2, r3]
   242f2:	ldr	r2, [r3, #0]
   242f4:	ldr	r3, [sp, #44]	; 0x2c
   242f6:	eors	r2, r3
   242f8:	beq.n	24382 <btrfs_free_block_groups@@Base+0xfc>
   242fa:	blx	88e4 <__stack_chk_fail@plt>
   242fe:	add	r3, sp, #32
   24300:	mov	r0, r6
   24302:	str	r3, [sp, #0]
   24304:	ldrd	r2, r3, [sp, #16]
   24308:	bl	1a078 <get_state_private@@Base>
   2430c:	cbnz	r0, 24326 <btrfs_free_block_groups@@Base+0xa0>
   2430e:	ldr	r5, [sp, #32]
   24310:	ldr	r3, [r5, #64]	; 0x40
   24312:	cbz	r3, 24320 <btrfs_free_block_groups@@Base+0x9a>
   24314:	mov	r0, r5
   24316:	bl	2a09c <btrfs_remove_free_space_cache@@Base>
   2431a:	ldr	r0, [r5, #64]	; 0x40
   2431c:	blx	87cc <free@plt+0x4>
   24320:	mov	r0, r5
   24322:	blx	87cc <free@plt+0x4>
   24326:	ldrd	r2, r3, [sp, #24]
   2432a:	mov	r0, r6
   2432c:	str.w	r9, [sp, #8]
   24330:	strd	r2, r3, [sp]
   24334:	ldrd	r2, r3, [sp, #16]
   24338:	bl	19bca <clear_extent_bits@@Base>
   2433c:	b.n	242a8 <btrfs_free_block_groups@@Base+0x22>
   2433e:	ldrd	r2, r3, [sp, #24]
   24342:	mov	r0, r5
   24344:	strd	r2, r3, [sp]
   24348:	ldrd	r2, r3, [sp, #16]
   2434c:	bl	19f84 <clear_extent_dirty@@Base>
   24350:	b.n	242c6 <btrfs_free_block_groups@@Base+0x40>
   24352:	ldrd	r1, r2, [r3]
   24356:	sub.w	r7, r3, #44	; 0x2c
   2435a:	str	r2, [r1, #4]
   2435c:	str	r1, [r2, #0]
   2435e:	ldrd	r0, r1, [r3, #-12]
   24362:	strd	r3, r3, [r3]
   24366:	orrs.w	r2, r0, r1
   2436a:	beq.n	2437a <btrfs_free_block_groups@@Base+0xf4>
   2436c:	strd	r0, r1, [sp]
   24370:	mov	r0, r6
   24372:	ldrd	r2, r3, [r3, #-44]	; 0x2c
   24376:	bl	1a884 <__btrfs_warning@@Base>
   2437a:	mov	r0, r7
   2437c:	blx	87cc <free@plt+0x4>
   24380:	b.n	242e2 <btrfs_free_block_groups@@Base+0x5c>
   24382:	movs	r0, #0
   24384:	add	sp, #52	; 0x34
   24386:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2438a:	nop
   2438c:	ldr	r2, [pc, #664]	; (24628 <btrfs_make_block_groups@@Base+0x28c>)
   2438e:	movs	r4, r0
   24390:	lsls	r4, r7, #9
   24392:	movs	r0, r0
   24394:	ble.n	24438 <btrfs_make_block_groups@@Base+0x9c>
   24396:	movs	r1, r0
   24398:	ldr	r2, [pc, #264]	; (244a4 <btrfs_make_block_groups@@Base+0x108>)
   2439a:	movs	r4, r0

0002439c <btrfs_make_block_groups@@Base>:
   2439c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   243a0:	mov	r7, r1
   243a2:	vpush	{d8-d9}
   243a6:	movs	r6, #0
   243a8:	ldr	r2, [pc, #768]	; (246ac <btrfs_make_block_groups@@Base+0x310>)
   243aa:	mov	r8, r6
   243ac:	ldr	r3, [pc, #768]	; (246b0 <btrfs_make_block_groups@@Base+0x314>)
   243ae:	mov	r9, r6
   243b0:	add	r2, pc
   243b2:	vmov	s19, r0
   243b6:	sub	sp, #124	; 0x7c
   243b8:	ldr	r3, [r2, r3]
   243ba:	ldr	r3, [r3, #0]
   243bc:	str	r3, [sp, #116]	; 0x74
   243be:	mov.w	r3, #0
   243c2:	ldr	r3, [r1, #24]
   243c4:	vmov	s18, r3
   243c8:	add.w	r3, r1, #128	; 0x80
   243cc:	vmov	s16, r3
   243d0:	ldr.w	r3, [r1, #308]	; 0x134
   243d4:	ldr	r2, [r3, #112]	; 0x70
   243d6:	str	r2, [sp, #40]	; 0x28
   243d8:	movs	r2, #0
   243da:	ldr	r3, [r3, #116]	; 0x74
   243dc:	str	r3, [sp, #44]	; 0x2c
   243de:	ldr.w	r3, [r1, #388]	; 0x184
   243e2:	lsls	r3, r3, #6
   243e4:	mov	r1, r3
   243e6:	movs	r3, #0
   243e8:	strd	r1, r2, [sp, #64]	; 0x40
   243ec:	movs	r2, #12
   243ee:	ldrd	r0, r1, [sp, #40]	; 0x28
   243f2:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   243f6:	ldr	r3, [pc, #700]	; (246b4 <btrfs_make_block_groups@@Base+0x318>)
   243f8:	str	r6, [sp, #80]	; 0x50
   243fa:	add	r3, pc
   243fc:	strd	r6, r6, [sp, #32]
   24400:	addw	r3, r3, #461	; 0x1cd
   24404:	vmov	s17, r3
   24408:	strd	r0, r1, [sp, #56]	; 0x38
   2440c:	ldrd	r2, r3, [sp, #40]	; 0x28
   24410:	cmp	r9, r3
   24412:	it	eq
   24414:	cmpeq	r8, r2
   24416:	bcc.n	24450 <btrfs_make_block_groups@@Base+0xb4>
   24418:	ldr.w	r8, [pc, #668]	; 246b8 <btrfs_make_block_groups@@Base+0x31c>
   2441c:	movs	r4, #0
   2441e:	ldr.w	r9, [pc, #668]	; 246bc <btrfs_make_block_groups@@Base+0x320>
   24422:	movs	r5, #0
   24424:	add	r8, pc
   24426:	addw	r8, r8, #461	; 0x1cd
   2442a:	add	r9, pc
   2442c:	ldrd	r2, r3, [sp, #40]	; 0x28
   24430:	cmp	r5, r3
   24432:	it	eq
   24434:	cmpeq	r4, r2
   24436:	bcc.w	24626 <btrfs_make_block_groups@@Base+0x28a>
   2443a:	ldr	r2, [pc, #644]	; (246c0 <btrfs_make_block_groups@@Base+0x324>)
   2443c:	ldr	r3, [pc, #624]	; (246b0 <btrfs_make_block_groups@@Base+0x314>)
   2443e:	add	r2, pc
   24440:	ldr	r3, [r2, r3]
   24442:	ldr	r2, [r3, #0]
   24444:	ldr	r3, [sp, #116]	; 0x74
   24446:	eors	r2, r3
   24448:	beq.w	246a0 <btrfs_make_block_groups@@Base+0x304>
   2444c:	blx	88e4 <__stack_chk_fail@plt>
   24450:	ldr	r3, [sp, #40]	; 0x28
   24452:	ldrd	sl, fp, [sp, #56]	; 0x38
   24456:	subs.w	r3, r3, r8
   2445a:	str	r3, [sp, #24]
   2445c:	ldr	r3, [sp, #44]	; 0x2c
   2445e:	sbc.w	r3, r3, r9
   24462:	str	r3, [sp, #28]
   24464:	ldrd	r0, r1, [sp, #24]
   24468:	ldrd	r3, r2, [sp, #56]	; 0x38
   2446c:	cmp	r1, fp
   2446e:	it	eq
   24470:	cmpeq	r0, sl
   24472:	it	cc
   24474:	ldrdcc	r3, r2, [sp, #24]
   24478:	orrs.w	r1, r8, r9
   2447c:	bne.w	2458a <btrfs_make_block_groups@@Base+0x1ee>
   24480:	ldrd	r0, r1, [sp, #64]	; 0x40
   24484:	lsrs	r3, r3, #2
   24486:	orr.w	r3, r3, r2, lsl #30
   2448a:	negs	r0, r0
   2448c:	and.w	r4, r0, r3
   24490:	mov.w	r3, #0
   24494:	sbc.w	r1, r1, r1, lsl #1
   24498:	and.w	r5, r1, r2, lsr #2
   2449c:	mov.w	r2, #33554432	; 0x2000000
   244a0:	cmp	r5, #0
   244a2:	it	eq
   244a4:	cmpeq.w	r4, #8388608	; 0x800000
   244a8:	itt	cc
   244aa:	movcc.w	r4, #8388608	; 0x800000
   244ae:	movcc	r5, #0
   244b0:	cmp	r3, r5
   244b2:	it	eq
   244b4:	cmpeq	r2, r4
   244b6:	itt	cc
   244b8:	movcc	r4, r2
   244ba:	movcc	r5, r3
   244bc:	movs	r2, #2
   244be:	movs	r3, #0
   244c0:	strd	r2, r3, [sp, #48]	; 0x30
   244c4:	movs	r1, #120	; 0x78
   244c6:	movs	r0, #1
   244c8:	blx	8718 <calloc@plt+0x4>
   244cc:	ldr	r1, [pc, #500]	; (246c4 <btrfs_make_block_groups@@Base+0x328>)
   244ce:	vmov	r2, s17
   244d2:	movw	r3, #2893	; 0xb4d
   244d6:	add	r1, pc
   244d8:	str	r1, [sp, #84]	; 0x54
   244da:	mov	sl, r0
   244dc:	clz	r0, r0
   244e0:	lsrs	r0, r0, #5
   244e2:	str	r0, [sp, #0]
   244e4:	ldr	r0, [pc, #480]	; (246c8 <btrfs_make_block_groups@@Base+0x32c>)
   244e6:	add	r0, pc
   244e8:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   244ec:	ldrd	r0, r1, [sp, #48]	; 0x30
   244f0:	strd	r8, r9, [sl, #40]	; 0x28
   244f4:	movs	r2, #0
   244f6:	str.w	r4, [sl, #49]	; 0x31
   244fa:	movs	r3, #192	; 0xc0
   244fc:	strd	r0, r1, [sl, #96]	; 0x60
   24500:	add.w	r0, sl, #60	; 0x3c
   24504:	strb.w	r3, [sl, #48]	; 0x30
   24508:	movs	r3, #0
   2450a:	str.w	r5, [sl, #53]	; 0x35
   2450e:	strd	r2, r3, [sl, #72]	; 0x48
   24512:	str	r0, [sp, #16]
   24514:	mov	r0, r7
   24516:	strd	r2, r3, [sp, #8]
   2451a:	strd	r4, r5, [sp]
   2451e:	ldrd	r2, r3, [sp, #48]	; 0x30
   24522:	bl	23f3c <update_space_info@@Base>
   24526:	ldr	r1, [sp, #84]	; 0x54
   24528:	vmov	r2, s17
   2452c:	movw	r3, #2903	; 0xb57
   24530:	str	r0, [sp, #0]
   24532:	ldr	r0, [pc, #408]	; (246cc <btrfs_make_block_groups@@Base+0x330>)
   24534:	add	r0, pc
   24536:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2453a:	ldrd	r2, r3, [sp, #48]	; 0x30
   2453e:	mov	r0, r7
   24540:	bl	21a00 <btrfs_create_tree@@Base+0x1fc>
   24544:	adds.w	r3, r8, r4
   24548:	adc.w	r1, r9, r5
   2454c:	vmov	r0, s16
   24550:	mov	fp, r3
   24552:	adds.w	r2, fp, #4294967295	; 0xffffffff
   24556:	mov.w	r3, #24
   2455a:	str	r3, [sp, #8]
   2455c:	adc.w	r3, r1, #4294967295	; 0xffffffff
   24560:	strd	r2, r3, [sp]
   24564:	mov	r2, r8
   24566:	mov	r3, r9
   24568:	str	r1, [sp, #48]	; 0x30
   2456a:	bl	19d40 <set_extent_bits@@Base>
   2456e:	movs	r3, #0
   24570:	mov	r2, r8
   24572:	str	r3, [sp, #4]
   24574:	mov	r3, r9
   24576:	vmov	r0, s16
   2457a:	mov	r8, fp
   2457c:	str.w	sl, [sp]
   24580:	bl	1a04e <set_state_private@@Base>
   24584:	ldr	r1, [sp, #48]	; 0x30
   24586:	mov	r9, r1
   24588:	b.n	2440c <btrfs_make_block_groups@@Base+0x70>
   2458a:	ldrd	r0, r1, [sp, #64]	; 0x40
   2458e:	negs	r0, r0
   24590:	and.w	r3, r3, r0
   24594:	sbc.w	r1, r1, r1, lsl #1
   24598:	ands	r2, r1
   2459a:	adds	r1, r6, r6
   2459c:	str	r1, [sp, #72]	; 0x48
   2459e:	ldr	r1, [sp, #80]	; 0x50
   245a0:	adcs	r1, r1
   245a2:	str	r1, [sp, #76]	; 0x4c
   245a4:	ldrd	r4, r5, [sp, #72]	; 0x48
   245a8:	ldrd	r0, r1, [sp, #32]
   245ac:	cmp	r1, r5
   245ae:	mov	r5, r2
   245b0:	it	eq
   245b2:	cmpeq	r0, r4
   245b4:	mov.w	r2, #1073741824	; 0x40000000
   245b8:	mov	r4, r3
   245ba:	bcc.n	24604 <btrfs_make_block_groups@@Base+0x268>
   245bc:	movs	r3, #0
   245be:	cmp	r3, r5
   245c0:	it	eq
   245c2:	cmpeq	r2, r4
   245c4:	it	cc
   245c6:	movcc	r5, r3
   245c8:	ldr	r3, [sp, #80]	; 0x50
   245ca:	it	cc
   245cc:	movcc	r4, r2
   245ce:	movs	r2, #4
   245d0:	adds	r6, r6, r4
   245d2:	adc.w	r3, r5, r3
   245d6:	str	r3, [sp, #80]	; 0x50
   245d8:	ldr	r1, [sp, #28]
   245da:	movs	r3, #0
   245dc:	strd	r2, r3, [sp, #48]	; 0x30
   245e0:	mov.w	ip, #5
   245e4:	lsls	r3, r1, #2
   245e6:	ldr	r1, [sp, #24]
   245e8:	orr.w	r3, r3, r1, lsr #30
   245ec:	lsls	r2, r1, #2
   245ee:	umull	r0, r1, r4, ip
   245f2:	mla	r1, ip, r5, r1
   245f6:	cmp	r3, r1
   245f8:	it	eq
   245fa:	cmpeq	r2, r0
   245fc:	it	cc
   245fe:	ldrdcc	r4, r5, [sp, #24]
   24602:	b.n	244c4 <btrfs_make_block_groups@@Base+0x128>
   24604:	movs	r3, #1
   24606:	cmp	r3, r5
   24608:	it	eq
   2460a:	cmpeq	r2, r4
   2460c:	it	cc
   2460e:	movcc	r5, r3
   24610:	ldr	r3, [sp, #32]
   24612:	it	cc
   24614:	movcc	r4, r2
   24616:	movs	r2, #1
   24618:	adds	r3, r3, r4
   2461a:	str	r3, [sp, #32]
   2461c:	ldr	r3, [sp, #36]	; 0x24
   2461e:	adc.w	r3, r5, r3
   24622:	str	r3, [sp, #36]	; 0x24
   24624:	b.n	245d8 <btrfs_make_block_groups@@Base+0x23c>
   24626:	mov	r2, r4
   24628:	mov	r3, r5
   2462a:	mov	r0, r7
   2462c:	bl	2233c <btrfs_lookup_block_group@@Base>
   24630:	movw	r3, #2919	; 0xb67
   24634:	mov	r2, r8
   24636:	mov	r1, r9
   24638:	mov	r6, r0
   2463a:	clz	r0, r0
   2463e:	lsrs	r0, r0, #5
   24640:	str	r0, [sp, #0]
   24642:	ldr	r0, [pc, #140]	; (246d0 <btrfs_make_block_groups@@Base+0x334>)
   24644:	add	r0, pc
   24646:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2464a:	ldr	r3, [r6, #72]	; 0x48
   2464c:	vmov	r1, s18
   24650:	mov.w	r2, #256	; 0x100
   24654:	vmov	r0, s19
   24658:	str	r3, [sp, #92]	; 0x5c
   2465a:	ldr	r3, [r6, #76]	; 0x4c
   2465c:	str	r3, [sp, #96]	; 0x60
   2465e:	ldr	r3, [r6, #96]	; 0x60
   24660:	str	r3, [sp, #108]	; 0x6c
   24662:	ldr	r3, [r6, #100]	; 0x64
   24664:	str	r3, [sp, #112]	; 0x70
   24666:	movs	r3, #0
   24668:	strd	r2, r3, [sp, #100]	; 0x64
   2466c:	add.w	r2, r6, #40	; 0x28
   24670:	movs	r3, #24
   24672:	str	r3, [sp, #0]
   24674:	add	r3, sp, #92	; 0x5c
   24676:	bl	1e74c <btrfs_insert_item@@Base>
   2467a:	movw	r3, #2927	; 0xb6f
   2467e:	mov	r2, r8
   24680:	mov	r1, r9
   24682:	str	r0, [sp, #0]
   24684:	ldr	r0, [pc, #76]	; (246d4 <btrfs_make_block_groups@@Base+0x338>)
   24686:	add	r0, pc
   24688:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2468c:	ldrd	r1, r0, [r6, #40]	; 0x28
   24690:	ldr.w	r3, [r6, #49]	; 0x31
   24694:	ldr.w	r2, [r6, #53]	; 0x35
   24698:	adds	r4, r3, r1
   2469a:	adc.w	r5, r2, r0
   2469e:	b.n	2442c <btrfs_make_block_groups@@Base+0x90>
   246a0:	movs	r0, #0
   246a2:	add	sp, #124	; 0x7c
   246a4:	vpop	{d8-d9}
   246a8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246ac:	ldr	r1, [pc, #512]	; (248b0 <btrfs_free_block_group@@Base+0x1d0>)
   246ae:	movs	r4, r0
   246b0:	lsls	r4, r7, #9
   246b2:	movs	r0, r0
   246b4:	udf	#251	; 0xfb
   246b6:	movs	r1, r0
   246b8:	udf	#209	; 0xd1
   246ba:	movs	r1, r0
   246bc:	bvc.n	24616 <btrfs_make_block_groups@@Base+0x27a>
   246be:	movs	r1, r0
   246c0:	ldr	r0, [pc, #968]	; (24a8c <btrfs_free_block_group@@Base+0x3ac>)
   246c2:	movs	r4, r0
   246c4:	bvs.n	246c6 <btrfs_make_block_groups@@Base+0x32a>
   246c6:	movs	r1, r0
   246c8:	blt.n	245ce <btrfs_make_block_groups@@Base+0x232>
   246ca:	movs	r1, r0
   246cc:	add	r3, pc, #292	; (adr r3, 247f4 <btrfs_free_block_group@@Base+0x114>)
   246ce:	movs	r1, r0
   246d0:	bge.n	2471a <btrfs_free_block_group@@Base+0x3a>
   246d2:	movs	r1, r0
   246d4:	add	r1, pc, #988	; (adr r1, 24ab4 <btrfs_free_block_group@@Base+0x3d4>)
   246d6:	movs	r1, r0

000246d8 <btrfs_update_block_group@@Base>:
   246d8:	ldr.w	r0, [r0, #464]	; 0x1d0
   246dc:	b.w	224c4 <btrfs_lookup_block_group@@Base+0x188>

000246e0 <btrfs_free_block_group@@Base>:
   246e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   246e4:	mov	fp, r3
   246e6:	vpush	{d8}
   246ea:	mov	sl, r2
   246ec:	ldr.w	r3, [pc, #1568]	; 24d10 <btrfs_free_block_group@@Base+0x630>
   246f0:	mov	r9, r1
   246f2:	ldr.w	r2, [pc, #1568]	; 24d14 <btrfs_free_block_group@@Base+0x634>
   246f6:	mov	r8, r0
   246f8:	add	r3, pc
   246fa:	sub	sp, #164	; 0xa4
   246fc:	add	r2, pc
   246fe:	ldr	r1, [r1, #24]
   24700:	str	r3, [sp, #36]	; 0x24
   24702:	ldr.w	r3, [pc, #1556]	; 24d18 <btrfs_free_block_group@@Base+0x638>
   24706:	ldr	r3, [r2, r3]
   24708:	ldr	r3, [r3, #0]
   2470a:	str	r3, [sp, #156]	; 0x9c
   2470c:	mov.w	r3, #0
   24710:	str	r1, [sp, #24]
   24712:	bl	1b2d4 <btrfs_alloc_path@@Base>
   24716:	str	r0, [sp, #28]
   24718:	cmp	r0, #0
   2471a:	beq.w	24cfc <btrfs_free_block_group@@Base+0x61c>
   2471e:	ldr	r3, [sp, #208]	; 0xd0
   24720:	add	r2, sp, #96	; 0x60
   24722:	ldr	r1, [sp, #24]
   24724:	movs	r4, #192	; 0xc0
   24726:	strd	sl, fp, [sp, #96]	; 0x60
   2472a:	str.w	r3, [sp, #105]	; 0x69
   2472e:	ldr	r3, [sp, #212]	; 0xd4
   24730:	strb.w	r4, [sp, #104]	; 0x68
   24734:	str.w	r3, [sp, #109]	; 0x6d
   24738:	movs	r3, #0
   2473a:	strd	r3, r3, [sp]
   2473e:	mov	r3, r0
   24740:	mov	r0, r8
   24742:	bl	1d6c0 <btrfs_search_slot@@Base>
   24746:	subs	r3, r0, #0
   24748:	str	r3, [sp, #24]
   2474a:	bgt.w	24cf6 <btrfs_free_block_group@@Base+0x616>
   2474e:	bne.n	24822 <btrfs_free_block_group@@Base+0x142>
   24750:	ldr	r3, [sp, #28]
   24752:	movs	r1, #25
   24754:	ldr	r2, [sp, #28]
   24756:	ldr	r3, [r3, #0]
   24758:	ldr	r2, [r2, #32]
   2475a:	adds	r3, #96	; 0x60
   2475c:	mla	r2, r1, r2, r3
   24760:	ldr.w	r2, [r2, #118]	; 0x76
   24764:	add	r3, r2
   24766:	ldr.w	r0, [r3, #101]!
   2476a:	ldr	r1, [r3, #4]
   2476c:	orrs.w	r3, r0, r1
   24770:	beq.n	247a4 <btrfs_free_block_group@@Base+0xc4>
   24772:	ldr	r2, [sp, #36]	; 0x24
   24774:	ldr.w	r3, [pc, #1444]	; 24d1c <btrfs_free_block_group@@Base+0x63c>
   24778:	ldr	r3, [r2, r3]
   2477a:	ldr	r2, [sp, #208]	; 0xd0
   2477c:	strd	sl, fp, [sp]
   24780:	adds.w	r1, sl, r2
   24784:	ldr	r2, [sp, #212]	; 0xd4
   24786:	adc.w	r2, fp, r2
   2478a:	strd	r1, r2, [sp, #8]
   2478e:	ldr.w	r2, [pc, #1424]	; 24d20 <btrfs_free_block_group@@Base+0x640>
   24792:	movs	r1, #1
   24794:	ldr	r0, [r3, #0]
   24796:	add	r2, pc
   24798:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2479c:	mvn.w	r3, #21
   247a0:	str	r3, [sp, #24]
   247a2:	b.n	24822 <btrfs_free_block_group@@Base+0x142>
   247a4:	ldr	r0, [sp, #28]
   247a6:	bl	1b2dc <btrfs_release_path@@Base>
   247aa:	ldrd	r2, r3, [sp, #208]	; 0xd0
   247ae:	mov	r0, r9
   247b0:	strd	r2, r3, [sp]
   247b4:	mov	r2, sl
   247b6:	mov	r3, fp
   247b8:	bl	240bc <btrfs_pin_extent@@Base>
   247bc:	ldr	r3, [sp, #208]	; 0xd0
   247be:	ldr.w	r1, [r9, #24]
   247c2:	strd	sl, fp, [sp, #136]	; 0x88
   247c6:	str.w	r3, [sp, #145]	; 0x91
   247ca:	ldr	r3, [sp, #212]	; 0xd4
   247cc:	str	r1, [sp, #32]
   247ce:	strb.w	r4, [sp, #144]	; 0x90
   247d2:	str.w	r3, [sp, #149]	; 0x95
   247d6:	bl	1b2d4 <btrfs_alloc_path@@Base>
   247da:	ldr	r1, [sp, #32]
   247dc:	mov	r5, r0
   247de:	cbnz	r0, 24842 <btrfs_free_block_group@@Base+0x162>
   247e0:	mvn.w	r4, #11
   247e4:	ldr	r2, [sp, #36]	; 0x24
   247e6:	ldr.w	r3, [pc, #1332]	; 24d1c <btrfs_free_block_group@@Base+0x63c>
   247ea:	ldr	r3, [r2, r3]
   247ec:	ldr	r2, [sp, #208]	; 0xd0
   247ee:	strd	sl, fp, [sp]
   247f2:	adds.w	r1, sl, r2
   247f6:	ldr	r2, [sp, #212]	; 0xd4
   247f8:	adc.w	r2, fp, r2
   247fc:	strd	r1, r2, [sp, #8]
   24800:	ldr.w	r2, [pc, #1312]	; 24d24 <btrfs_free_block_group@@Base+0x644>
   24804:	add	r2, pc
   24806:	ldr	r0, [r3, #0]
   24808:	movs	r1, #1
   2480a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2480e:	ldrd	r2, r3, [sp, #208]	; 0xd0
   24812:	mov	r0, r9
   24814:	strd	r2, r3, [sp]
   24818:	mov	r2, sl
   2481a:	mov	r3, fp
   2481c:	bl	24230 <btrfs_unpin_extent@@Base>
   24820:	str	r4, [sp, #24]
   24822:	ldr	r0, [sp, #28]
   24824:	bl	1b302 <btrfs_free_path@@Base>
   24828:	ldr.w	r2, [pc, #1276]	; 24d28 <btrfs_free_block_group@@Base+0x648>
   2482c:	ldr.w	r3, [pc, #1256]	; 24d18 <btrfs_free_block_group@@Base+0x638>
   24830:	add	r2, pc
   24832:	ldr	r3, [r2, r3]
   24834:	ldr	r2, [r3, #0]
   24836:	ldr	r3, [sp, #156]	; 0x9c
   24838:	eors	r2, r3
   2483a:	beq.w	24d04 <btrfs_free_block_group@@Base+0x624>
   2483e:	blx	88e4 <__stack_chk_fail@plt>
   24842:	mov.w	r3, #4294967295	; 0xffffffff
   24846:	add	r2, sp, #136	; 0x88
   24848:	movs	r6, #1
   2484a:	strd	r3, r6, [sp]
   2484e:	mov	r3, r0
   24850:	mov	r0, r8
   24852:	str	r1, [sp, #32]
   24854:	bl	1d6c0 <btrfs_search_slot@@Base>
   24858:	subs	r4, r0, #0
   2485a:	bgt.n	248ac <btrfs_free_block_group@@Base+0x1cc>
   2485c:	bne.n	2486a <btrfs_free_block_group@@Base+0x18a>
   2485e:	ldr	r1, [sp, #32]
   24860:	mov	r2, r5
   24862:	mov	r0, r8
   24864:	bl	21b10 <btrfs_create_tree@@Base+0x30c>
   24868:	mov	r4, r0
   2486a:	mov	r0, r5
   2486c:	bl	1b302 <btrfs_free_path@@Base>
   24870:	cmp	r4, #0
   24872:	blt.n	247e4 <btrfs_free_block_group@@Base+0x104>
   24874:	ldr.w	r1, [r9, #32]
   24878:	str	r1, [sp, #32]
   2487a:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2487e:	ldr	r1, [sp, #32]
   24880:	mov	r5, r0
   24882:	cbnz	r0, 248b2 <btrfs_free_block_group@@Base+0x1d2>
   24884:	mvn.w	r4, #11
   24888:	ldr	r2, [sp, #36]	; 0x24
   2488a:	ldr.w	r3, [pc, #1168]	; 24d1c <btrfs_free_block_group@@Base+0x63c>
   2488e:	ldr	r3, [r2, r3]
   24890:	ldr	r2, [sp, #208]	; 0xd0
   24892:	strd	sl, fp, [sp]
   24896:	adds.w	r1, sl, r2
   2489a:	ldr	r2, [sp, #212]	; 0xd4
   2489c:	adc.w	r2, fp, r2
   248a0:	strd	r1, r2, [sp, #8]
   248a4:	ldr.w	r2, [pc, #1156]	; 24d2c <btrfs_free_block_group@@Base+0x64c>
   248a8:	add	r2, pc
   248aa:	b.n	24806 <btrfs_free_block_group@@Base+0x126>
   248ac:	mvn.w	r4, #1
   248b0:	b.n	2486a <btrfs_free_block_group@@Base+0x18a>
   248b2:	movs	r3, #0
   248b4:	mov.w	r4, #256	; 0x100
   248b8:	movs	r2, #228	; 0xe4
   248ba:	strd	r4, r3, [sp, #116]	; 0x74
   248be:	strb.w	r2, [sp, #124]	; 0x7c
   248c2:	add	r2, sp, #116	; 0x74
   248c4:	strd	r3, r3, [sp]
   248c8:	mov	r3, r0
   248ca:	mov	r0, r8
   248cc:	str.w	sl, [sp, #125]	; 0x7d
   248d0:	str.w	fp, [sp, #129]	; 0x81
   248d4:	bl	1d6c0 <btrfs_search_slot@@Base>
   248d8:	subs	r4, r0, #0
   248da:	blt.n	24936 <btrfs_free_block_group@@Base+0x256>
   248dc:	bne.w	249e8 <btrfs_free_block_group@@Base+0x308>
   248e0:	ldr	r3, [r5, #0]
   248e2:	movs	r1, #25
   248e4:	ldr	r2, [r5, #32]
   248e6:	adds	r3, #96	; 0x60
   248e8:	str	r4, [sp, #32]
   248ea:	mla	r2, r1, r2, r3
   248ee:	ldr.w	r6, [r2, #118]	; 0x76
   248f2:	add	r3, r6
   248f4:	adds	r6, #149	; 0x95
   248f6:	ldrh.w	r3, [r3, #145]	; 0x91
   248fa:	str	r3, [sp, #40]	; 0x28
   248fc:	add	r3, sp, #136	; 0x88
   248fe:	vmov	s16, r3
   24902:	ldr	r3, [sp, #32]
   24904:	ldr	r2, [sp, #40]	; 0x28
   24906:	cmp	r3, r2
   24908:	bge.n	24936 <btrfs_free_block_group@@Base+0x256>
   2490a:	ldr	r3, [r5, #0]
   2490c:	adds	r3, #96	; 0x60
   2490e:	adds	r1, r3, r6
   24910:	ldr	r2, [r3, r6]
   24912:	ldr	r3, [r1, #4]
   24914:	ldr	r4, [r1, #12]
   24916:	str	r2, [sp, #56]	; 0x38
   24918:	str	r3, [sp, #44]	; 0x2c
   2491a:	ldr	r3, [r1, #8]
   2491c:	ldr.w	r1, [r9, #36]	; 0x24
   24920:	str	r3, [sp, #52]	; 0x34
   24922:	str	r1, [sp, #48]	; 0x30
   24924:	bl	1b2d4 <btrfs_alloc_path@@Base>
   24928:	ldrd	r1, r3, [sp, #48]	; 0x30
   2492c:	ldr	r2, [sp, #56]	; 0x38
   2492e:	mov	r7, r0
   24930:	cbnz	r0, 2498e <btrfs_free_block_group@@Base+0x2ae>
   24932:	mvn.w	r4, #11
   24936:	mov	r0, r5
   24938:	bl	1b302 <btrfs_free_path@@Base>
   2493c:	cmp	r4, #0
   2493e:	blt.n	24888 <btrfs_free_block_group@@Base+0x1a8>
   24940:	ldr.w	r1, [r9, #32]
   24944:	mov.w	r2, #256	; 0x100
   24948:	movs	r3, #0
   2494a:	str.w	sl, [sp, #145]	; 0x91
   2494e:	strd	r2, r3, [sp, #136]	; 0x88
   24952:	movs	r3, #228	; 0xe4
   24954:	str	r1, [sp, #32]
   24956:	str.w	fp, [sp, #149]	; 0x95
   2495a:	strb.w	r3, [sp, #144]	; 0x90
   2495e:	bl	1b2d4 <btrfs_alloc_path@@Base>
   24962:	ldr	r1, [sp, #32]
   24964:	mov	r6, r0
   24966:	cmp	r0, #0
   24968:	bne.n	249ee <btrfs_free_block_group@@Base+0x30e>
   2496a:	mvn.w	r4, #11
   2496e:	ldr	r2, [sp, #36]	; 0x24
   24970:	ldr	r3, [pc, #936]	; (24d1c <btrfs_free_block_group@@Base+0x63c>)
   24972:	ldr	r3, [r2, r3]
   24974:	ldr	r2, [sp, #208]	; 0xd0
   24976:	strd	sl, fp, [sp]
   2497a:	adds.w	r1, sl, r2
   2497e:	ldr	r2, [sp, #212]	; 0xd4
   24980:	adc.w	r2, fp, r2
   24984:	strd	r1, r2, [sp, #8]
   24988:	ldr	r2, [pc, #932]	; (24d30 <btrfs_free_block_group@@Base+0x650>)
   2498a:	add	r2, pc
   2498c:	b.n	24806 <btrfs_free_block_group@@Base+0x126>
   2498e:	str	r2, [sp, #136]	; 0x88
   24990:	movs	r0, #1
   24992:	ldr	r2, [sp, #44]	; 0x2c
   24994:	str.w	r3, [sp, #145]	; 0x91
   24998:	mov.w	r3, #4294967295	; 0xffffffff
   2499c:	strd	r3, r0, [sp]
   249a0:	mov	r3, r7
   249a2:	str	r2, [sp, #140]	; 0x8c
   249a4:	mov	r0, r8
   249a6:	mvn.w	r2, #51	; 0x33
   249aa:	strb.w	r2, [sp, #144]	; 0x90
   249ae:	vmov	r2, s16
   249b2:	str.w	r4, [sp, #149]	; 0x95
   249b6:	str	r1, [sp, #44]	; 0x2c
   249b8:	bl	1d6c0 <btrfs_search_slot@@Base>
   249bc:	subs	r4, r0, #0
   249be:	blt.n	249ce <btrfs_free_block_group@@Base+0x2ee>
   249c0:	bne.n	249e2 <btrfs_free_block_group@@Base+0x302>
   249c2:	ldr	r1, [sp, #44]	; 0x2c
   249c4:	mov	r2, r7
   249c6:	mov	r0, r8
   249c8:	bl	21b10 <btrfs_create_tree@@Base+0x30c>
   249cc:	mov	r4, r0
   249ce:	mov	r0, r7
   249d0:	adds	r6, #32
   249d2:	bl	1b302 <btrfs_free_path@@Base>
   249d6:	cmp	r4, #0
   249d8:	blt.n	24936 <btrfs_free_block_group@@Base+0x256>
   249da:	ldr	r3, [sp, #32]
   249dc:	adds	r3, #1
   249de:	str	r3, [sp, #32]
   249e0:	b.n	24902 <btrfs_free_block_group@@Base+0x222>
   249e2:	mvn.w	r4, #1
   249e6:	b.n	249ce <btrfs_free_block_group@@Base+0x2ee>
   249e8:	mvn.w	r4, #1
   249ec:	b.n	24936 <btrfs_free_block_group@@Base+0x256>
   249ee:	mov.w	r3, #4294967295	; 0xffffffff
   249f2:	movs	r2, #1
   249f4:	strd	r3, r2, [sp]
   249f8:	mov	r3, r0
   249fa:	add	r2, sp, #136	; 0x88
   249fc:	mov	r0, r8
   249fe:	str	r1, [sp, #40]	; 0x28
   24a00:	bl	1d6c0 <btrfs_search_slot@@Base>
   24a04:	subs	r3, r0, #0
   24a06:	str	r3, [sp, #32]
   24a08:	bgt.w	24b1e <btrfs_free_block_group@@Base+0x43e>
   24a0c:	bne.n	24b0e <btrfs_free_block_group@@Base+0x42e>
   24a0e:	ldr	r3, [r6, #0]
   24a10:	movs	r0, #25
   24a12:	ldr	r2, [r6, #32]
   24a14:	adds	r3, #96	; 0x60
   24a16:	ldr	r1, [sp, #40]	; 0x28
   24a18:	mla	r2, r0, r2, r3
   24a1c:	mov	r0, r8
   24a1e:	ldr.w	r2, [r2, #118]	; 0x76
   24a22:	add	r3, r2
   24a24:	mov	r2, r6
   24a26:	ldr.w	r5, [r3, #125]	; 0x7d
   24a2a:	bl	21b10 <btrfs_create_tree@@Base+0x30c>
   24a2e:	subs	r4, r0, #0
   24a30:	blt.n	24b22 <btrfs_free_block_group@@Base+0x442>
   24a32:	ldr	r3, [sp, #32]
   24a34:	and.w	r2, r5, #2
   24a38:	orrs	r3, r2
   24a3a:	beq.n	24b22 <btrfs_free_block_group@@Base+0x442>
   24a3c:	ldr.w	r3, [r9, #308]	; 0x134
   24a40:	ldr	r5, [sp, #32]
   24a42:	str	r3, [sp, #40]	; 0x28
   24a44:	ldr.w	r3, [r3, #160]	; 0xa0
   24a48:	str	r3, [sp, #44]	; 0x2c
   24a4a:	ldr	r3, [sp, #40]	; 0x28
   24a4c:	addw	r3, r3, #811	; 0x32b
   24a50:	str	r3, [sp, #48]	; 0x30
   24a52:	ldrd	r3, r4, [sp, #136]	; 0x88
   24a56:	strd	r3, r4, [sp, #80]	; 0x50
   24a5a:	ldr.w	r3, [sp, #145]	; 0x91
   24a5e:	str	r3, [sp, #56]	; 0x38
   24a60:	ldr.w	r3, [sp, #149]	; 0x95
   24a64:	str	r3, [sp, #60]	; 0x3c
   24a66:	ldrb.w	r3, [sp, #144]	; 0x90
   24a6a:	str	r3, [sp, #88]	; 0x58
   24a6c:	ldr	r3, [pc, #708]	; (24d34 <btrfs_free_block_group@@Base+0x654>)
   24a6e:	add	r3, pc
   24a70:	addw	r2, r3, #485	; 0x1e5
   24a74:	ldr	r3, [pc, #704]	; (24d38 <btrfs_free_block_group@@Base+0x658>)
   24a76:	add	r3, pc
   24a78:	vmov	s16, r3
   24a7c:	ldr	r3, [sp, #44]	; 0x2c
   24a7e:	cmp	r3, r5
   24a80:	bhi.n	24a8a <btrfs_free_block_group@@Base+0x3aa>
   24a82:	mvn.w	r3, #1
   24a86:	str	r3, [sp, #32]
   24a88:	b.n	24b0e <btrfs_free_block_group@@Base+0x42e>
   24a8a:	ldr	r3, [sp, #48]	; 0x30
   24a8c:	adds	r7, r3, r5
   24a8e:	ldr	r3, [r3, r5]
   24a90:	str	r3, [sp, #64]	; 0x40
   24a92:	ldr	r3, [r7, #4]
   24a94:	str	r3, [sp, #68]	; 0x44
   24a96:	ldrb	r3, [r7, #8]
   24a98:	cmp	r3, #228	; 0xe4
   24a9a:	bne.n	24b18 <btrfs_free_block_group@@Base+0x438>
   24a9c:	ldrh.w	r4, [r7, #61]	; 0x3d
   24aa0:	ldr	r0, [pc, #664]	; (24d3c <btrfs_free_block_group@@Base+0x65c>)
   24aa2:	clz	r3, r4
   24aa6:	vmov	r1, s16
   24aaa:	add	r0, pc
   24aac:	lsls	r4, r4, #5
   24aae:	lsrs	r3, r3, #5
   24ab0:	str	r3, [sp, #0]
   24ab2:	mov.w	r3, #322	; 0x142
   24ab6:	str	r2, [sp, #92]	; 0x5c
   24ab8:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   24abc:	ldrd	r0, r1, [sp, #64]	; 0x40
   24ac0:	add.w	r3, r4, #65	; 0x41
   24ac4:	str	r3, [sp, #52]	; 0x34
   24ac6:	ldrd	r2, r3, [sp, #80]	; 0x50
   24aca:	cmp	r3, r1
   24acc:	it	eq
   24ace:	cmpeq	r2, r0
   24ad0:	ldr	r2, [sp, #92]	; 0x5c
   24ad2:	bne.n	24b12 <btrfs_free_block_group@@Base+0x432>
   24ad4:	ldrd	r3, r4, [sp, #56]	; 0x38
   24ad8:	ldr.w	r1, [r7, #13]
   24adc:	ldr.w	r0, [r7, #9]
   24ae0:	cmp	r4, r1
   24ae2:	it	eq
   24ae4:	cmpeq	r3, r0
   24ae6:	bne.n	24b12 <btrfs_free_block_group@@Base+0x432>
   24ae8:	ldr	r3, [sp, #88]	; 0x58
   24aea:	cmp	r3, #228	; 0xe4
   24aec:	bne.n	24b12 <btrfs_free_block_group@@Base+0x432>
   24aee:	ldr	r3, [sp, #52]	; 0x34
   24af0:	mov	r0, r7
   24af2:	adds	r1, r5, r3
   24af4:	ldr	r3, [sp, #44]	; 0x2c
   24af6:	subs	r2, r3, r1
   24af8:	ldr	r3, [sp, #48]	; 0x30
   24afa:	add	r3, r1
   24afc:	mov	r1, r3
   24afe:	blx	87bc <memmove@plt+0x4>
   24b02:	ldr	r3, [sp, #44]	; 0x2c
   24b04:	ldr	r2, [sp, #52]	; 0x34
   24b06:	subs	r4, r3, r2
   24b08:	ldr	r3, [sp, #40]	; 0x28
   24b0a:	str.w	r4, [r3, #160]	; 0xa0
   24b0e:	ldr	r4, [sp, #32]
   24b10:	b.n	24b22 <btrfs_free_block_group@@Base+0x442>
   24b12:	ldr	r3, [sp, #52]	; 0x34
   24b14:	add	r5, r3
   24b16:	b.n	24a7c <btrfs_free_block_group@@Base+0x39c>
   24b18:	mvn.w	r3, #4
   24b1c:	b.n	24a86 <btrfs_free_block_group@@Base+0x3a6>
   24b1e:	mvn.w	r4, #1
   24b22:	mov	r0, r6
   24b24:	bl	1b302 <btrfs_free_path@@Base>
   24b28:	cmp	r4, #0
   24b2a:	blt.w	2496e <btrfs_free_block_group@@Base+0x28e>
   24b2e:	mov	r2, sl
   24b30:	mov	r3, fp
   24b32:	mov	r0, r9
   24b34:	bl	2233c <btrfs_lookup_block_group@@Base>
   24b38:	mov	r6, r0
   24b3a:	cbnz	r0, 24b56 <btrfs_free_block_group@@Base+0x476>
   24b3c:	mvn.w	r3, #1
   24b40:	str	r3, [sp, #24]
   24b42:	ldrd	r3, r4, [sp, #208]	; 0xd0
   24b46:	mov	r2, sl
   24b48:	mov	r0, r9
   24b4a:	strd	r3, r4, [sp]
   24b4e:	mov	r3, fp
   24b50:	bl	24230 <btrfs_unpin_extent@@Base>
   24b54:	b.n	24822 <btrfs_free_block_group@@Base+0x142>
   24b56:	ldr	r3, [r0, #64]	; 0x40
   24b58:	ldrd	r4, r5, [r0, #96]	; 0x60
   24b5c:	cbz	r3, 24b68 <btrfs_free_block_group@@Base+0x488>
   24b5e:	bl	2a09c <btrfs_remove_free_space_cache@@Base>
   24b62:	ldr	r0, [r6, #64]	; 0x40
   24b64:	blx	87cc <free@plt+0x4>
   24b68:	mov.w	r3, #4294967295	; 0xffffffff
   24b6c:	str	r3, [sp, #8]
   24b6e:	ldr	r3, [sp, #208]	; 0xd0
   24b70:	add.w	r0, r9, #128	; 0x80
   24b74:	ldr	r2, [sp, #212]	; 0xd4
   24b76:	adds.w	r3, r3, #4294967295	; 0xffffffff
   24b7a:	adc.w	r2, r2, #4294967295	; 0xffffffff
   24b7e:	adds.w	r3, r3, sl
   24b82:	adc.w	r2, r2, fp
   24b86:	strd	r3, r2, [sp]
   24b8a:	mov	r2, sl
   24b8c:	mov	r3, fp
   24b8e:	bl	19bca <clear_extent_bits@@Base>
   24b92:	mov	r2, r4
   24b94:	mov	r3, r5
   24b96:	mov	r0, r9
   24b98:	bl	219cc <btrfs_create_tree@@Base+0x1c8>
   24b9c:	cmp	r0, #0
   24b9e:	beq.n	24b3c <btrfs_free_block_group@@Base+0x45c>
   24ba0:	ldrd	r4, r5, [r0, #8]
   24ba4:	ldrd	r2, r3, [sp, #208]	; 0xd0
   24ba8:	cmp	r5, r3
   24baa:	it	eq
   24bac:	cmpeq	r4, r2
   24bae:	bcs.n	24bd4 <btrfs_free_block_group@@Base+0x4f4>
   24bb0:	ldr	r2, [sp, #36]	; 0x24
   24bb2:	ldr	r3, [pc, #360]	; (24d1c <btrfs_free_block_group@@Base+0x63c>)
   24bb4:	ldr	r3, [r2, r3]
   24bb6:	ldrd	r1, r2, [sp, #208]	; 0xd0
   24bba:	strd	r4, r5, [sp, #8]
   24bbe:	strd	r1, r2, [sp]
   24bc2:	movs	r1, #1
   24bc4:	ldr	r2, [pc, #376]	; (24d40 <btrfs_free_block_group@@Base+0x660>)
   24bc6:	ldr	r0, [r3, #0]
   24bc8:	add	r2, pc
   24bca:	blx	8ca0 <__fprintf_chk@plt+0x4>
   24bce:	mvn.w	r3, #21
   24bd2:	b.n	24b40 <btrfs_free_block_group@@Base+0x460>
   24bd4:	ldr	r3, [sp, #208]	; 0xd0
   24bd6:	subs	r2, r4, r3
   24bd8:	ldr	r3, [sp, #212]	; 0xd4
   24bda:	sbc.w	r3, r5, r3
   24bde:	strd	r2, r3, [r0, #8]
   24be2:	mov	r0, r6
   24be4:	add.w	r6, r9, #228	; 0xe4
   24be8:	blx	87cc <free@plt+0x4>
   24bec:	mov	r2, sl
   24bee:	mov	r3, fp
   24bf0:	mov	r0, r6
   24bf2:	bl	19460 <search_cache_extent@@Base>
   24bf6:	mov	r4, r0
   24bf8:	cmp	r0, #0
   24bfa:	beq.n	24b3c <btrfs_free_block_group@@Base+0x45c>
   24bfc:	ldrd	r2, r3, [r0, #24]
   24c00:	cmp	fp, r3
   24c02:	it	eq
   24c04:	cmpeq	sl, r2
   24c06:	bne.n	24b3c <btrfs_free_block_group@@Base+0x45c>
   24c08:	ldr	r5, [sp, #24]
   24c0a:	add.w	r3, r0, #72	; 0x48
   24c0e:	str	r3, [sp, #32]
   24c10:	ldr	r0, [r4, #64]	; 0x40
   24c12:	cmp	r5, r0
   24c14:	blt.n	24c26 <btrfs_free_block_group@@Base+0x546>
   24c16:	mov	r0, r6
   24c18:	mov	r1, r4
   24c1a:	bl	19538 <remove_cache_extent@@Base>
   24c1e:	mov	r0, r4
   24c20:	blx	87cc <free@plt+0x4>
   24c24:	b.n	24b42 <btrfs_free_block_group@@Base+0x462>
   24c26:	ldr	r2, [sp, #32]
   24c28:	lsls	r3, r5, #4
   24c2a:	ldr	r7, [r2, r3]
   24c2c:	ldr	r3, [r4, #40]	; 0x28
   24c2e:	and.w	r2, r3, #2040	; 0x7f8
   24c32:	str	r2, [sp, #16]
   24c34:	movs	r2, #0
   24c36:	str	r2, [sp, #20]
   24c38:	ldrd	r1, r2, [sp, #16]
   24c3c:	cmp	r2, #0
   24c3e:	it	eq
   24c40:	cmpeq	r1, #128	; 0x80
   24c42:	beq.n	24cba <btrfs_free_block_group@@Base+0x5da>
   24c44:	cmp	r2, #0
   24c46:	it	eq
   24c48:	cmpeq	r1, #129	; 0x81
   24c4a:	bcs.n	24c92 <btrfs_free_block_group@@Base+0x5b2>
   24c4c:	cmp	r2, #0
   24c4e:	it	eq
   24c50:	cmpeq	r1, #64	; 0x40
   24c52:	beq.n	24cee <btrfs_free_block_group@@Base+0x60e>
   24c54:	cmp	r2, #0
   24c56:	it	eq
   24c58:	cmpeq	r1, #65	; 0x41
   24c5a:	bcs.n	24c76 <btrfs_free_block_group@@Base+0x596>
   24c5c:	cmp	r2, #0
   24c5e:	it	eq
   24c60:	cmpeq	r1, #32
   24c62:	beq.n	24cb6 <btrfs_free_block_group@@Base+0x5d6>
   24c64:	and.w	r3, r3, #2024	; 0x7e8
   24c68:	str	r3, [sp, #72]	; 0x48
   24c6a:	movs	r3, #0
   24c6c:	str	r3, [sp, #76]	; 0x4c
   24c6e:	ldrd	r2, r3, [sp, #72]	; 0x48
   24c72:	orrs	r3, r2
   24c74:	beq.n	24cb6 <btrfs_free_block_group@@Base+0x5d6>
   24c76:	ldr	r2, [pc, #204]	; (24d44 <btrfs_free_block_group@@Base+0x664>)
   24c78:	movs	r3, #1
   24c7a:	ldr	r1, [pc, #204]	; (24d48 <btrfs_free_block_group@@Base+0x668>)
   24c7c:	ldr	r0, [pc, #204]	; (24d4c <btrfs_free_block_group@@Base+0x66c>)
   24c7e:	add	r2, pc
   24c80:	str	r3, [sp, #0]
   24c82:	addw	r2, r2, #507	; 0x1fb
   24c86:	add	r1, pc
   24c88:	add	r0, pc
   24c8a:	movw	r3, #3160	; 0xc58
   24c8e:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   24c92:	ldrd	r2, r3, [sp, #16]
   24c96:	cmp	r3, #0
   24c98:	it	eq
   24c9a:	cmpeq.w	r2, #256	; 0x100
   24c9e:	beq.n	24cea <btrfs_free_block_group@@Base+0x60a>
   24ca0:	bcc.n	24c76 <btrfs_free_block_group@@Base+0x596>
   24ca2:	cmp	r3, #0
   24ca4:	it	eq
   24ca6:	cmpeq.w	r2, #512	; 0x200
   24caa:	beq.n	24cb6 <btrfs_free_block_group@@Base+0x5d6>
   24cac:	cmp	r3, #0
   24cae:	it	eq
   24cb0:	cmpeq.w	r2, #1024	; 0x400
   24cb4:	bne.n	24c76 <btrfs_free_block_group@@Base+0x596>
   24cb6:	movs	r0, #1
   24cb8:	b.n	24cbc <btrfs_free_block_group@@Base+0x5dc>
   24cba:	subs	r0, #1
   24cbc:	asrs	r3, r0, #31
   24cbe:	mov	r2, r0
   24cc0:	ldrd	r0, r1, [r4, #32]
   24cc4:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   24cc8:	ldrd	r3, r2, [r7, #80]	; 0x50
   24ccc:	subs	r0, r3, r0
   24cce:	sbc.w	r1, r2, r1
   24cd2:	strd	r0, r1, [r7, #80]	; 0x50
   24cd6:	mov	r1, r7
   24cd8:	mov	r0, r8
   24cda:	bl	2bb60 <btrfs_update_device@@Base>
   24cde:	subs	r3, r0, #0
   24ce0:	str	r3, [sp, #24]
   24ce2:	blt.w	24b42 <btrfs_free_block_group@@Base+0x462>
   24ce6:	adds	r5, #1
   24ce8:	b.n	24c10 <btrfs_free_block_group@@Base+0x530>
   24cea:	subs	r0, #2
   24cec:	b.n	24cbc <btrfs_free_block_group@@Base+0x5dc>
   24cee:	ldr	r1, [r4, #68]	; 0x44
   24cf0:	bl	3c420 <btrfs_util_strerror@@Base+0x290>
   24cf4:	b.n	24cbc <btrfs_free_block_group@@Base+0x5dc>
   24cf6:	mvn.w	r3, #63	; 0x3f
   24cfa:	b.n	247a0 <btrfs_free_block_group@@Base+0xc0>
   24cfc:	mvn.w	r3, #11
   24d00:	str	r3, [sp, #24]
   24d02:	b.n	24828 <btrfs_free_block_group@@Base+0x148>
   24d04:	ldr	r0, [sp, #24]
   24d06:	add	sp, #164	; 0xa4
   24d08:	vpop	{d8}
   24d0c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24d10:	mov	r0, r7
   24d12:	movs	r4, r0
   24d14:	mov	r4, r6
   24d16:	movs	r4, r0
   24d18:	lsls	r4, r7, #9
   24d1a:	movs	r0, r0
   24d1c:	lsls	r4, r1, #10
   24d1e:	movs	r0, r0
   24d20:	bhi.n	24cd4 <btrfs_free_block_group@@Base+0x5f4>
   24d22:	movs	r1, r0
   24d24:	bhi.n	24c5a <btrfs_free_block_group@@Base+0x57a>
   24d26:	movs	r1, r0
   24d28:	cmp	r0, r0
   24d2a:	movs	r4, r0
   24d2c:	bhi.n	24d7c <free_excluded_extents@@Base+0x2c>
   24d2e:	movs	r1, r0
   24d30:	bvc.n	24e18 <exclude_super_stripes@@Base+0x98>
   24d32:	movs	r1, r0
   24d34:	bhi.n	24c46 <btrfs_free_block_group@@Base+0x566>
   24d36:	movs	r1, r0
   24d38:	strh	r0, [r2, #44]	; 0x2c
   24d3a:	movs	r1, r0
   24d3c:	strh	r4, [r4, #42]	; 0x2a
   24d3e:	movs	r1, r0
   24d40:	bpl.n	24df8 <exclude_super_stripes@@Base+0x78>
   24d42:	movs	r1, r0
   24d44:	bvs.n	24e36 <exclude_super_stripes@@Base+0xb6>
   24d46:	movs	r1, r0
   24d48:	ldmia	r7!, {r0, r1, r2, r3, r6}
   24d4a:	movs	r1, r0
   24d4c:	bcs.n	24caa <btrfs_free_block_group@@Base+0x5ca>
   24d4e:	movs	r1, r0

00024d50 <free_excluded_extents@@Base>:
   24d50:	push	{r4, r5, lr}
   24d52:	sub	sp, #20
   24d54:	ldrd	r2, r3, [r1, #40]	; 0x28
   24d58:	movs	r4, #4
   24d5a:	str	r4, [sp, #8]
   24d5c:	adds	r0, #160	; 0xa0
   24d5e:	ldr.w	r4, [r1, #49]	; 0x31
   24d62:	ldr.w	r5, [r1, #53]	; 0x35
   24d66:	adds	r4, r4, r2
   24d68:	adc.w	r5, r3, r5
   24d6c:	adds.w	r4, r4, #4294967295	; 0xffffffff
   24d70:	adc.w	r5, r5, #4294967295	; 0xffffffff
   24d74:	strd	r4, r5, [sp]
   24d78:	bl	19bca <clear_extent_bits@@Base>
   24d7c:	add	sp, #20
   24d7e:	pop	{r4, r5, pc}

00024d80 <exclude_super_stripes@@Base>:
   24d80:	ldr	r2, [pc, #392]	; (24f0c <exclude_super_stripes@@Base+0x18c>)
   24d82:	ldr	r3, [pc, #396]	; (24f10 <exclude_super_stripes@@Base+0x190>)
   24d84:	add	r2, pc
   24d86:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d8a:	sub	sp, #68	; 0x44
   24d8c:	ldr	r3, [r2, r3]
   24d8e:	mov	r5, r0
   24d90:	mov	r4, r1
   24d92:	ldr	r3, [r3, #0]
   24d94:	str	r3, [sp, #60]	; 0x3c
   24d96:	mov.w	r3, #0
   24d9a:	ldrd	r2, r3, [r1, #40]	; 0x28
   24d9e:	cmp	r3, #0
   24da0:	it	eq
   24da2:	cmpeq.w	r2, #65536	; 0x10000
   24da6:	bcs.n	24de0 <exclude_super_stripes@@Base+0x60>
   24da8:	ldrd	r0, r1, [r1, #80]	; 0x50
   24dac:	rsb	ip, r2, #65536	; 0x10000
   24db0:	str.w	ip, [sp, #52]	; 0x34
   24db4:	adds.w	r0, r0, ip
   24db8:	adc.w	r1, r1, #0
   24dbc:	adds.w	r6, r2, #4294967295	; 0xffffffff
   24dc0:	adc.w	r7, r3, #4294967295	; 0xffffffff
   24dc4:	adds.w	r6, r6, ip
   24dc8:	strd	r0, r1, [r4, #80]	; 0x50
   24dcc:	adc.w	r7, r7, #0
   24dd0:	movs	r1, #4
   24dd2:	add.w	r0, r5, #160	; 0xa0
   24dd6:	str	r1, [sp, #8]
   24dd8:	strd	r6, r7, [sp]
   24ddc:	bl	19d40 <set_extent_bits@@Base>
   24de0:	movs	r6, #0
   24de2:	add.w	r7, r5, #160	; 0xa0
   24de6:	mov.w	r2, #65536	; 0x10000
   24dea:	mov	r3, r6
   24dec:	add	r1, sp, #52	; 0x34
   24dee:	str	r1, [sp, #44]	; 0x2c
   24df0:	ldr	r1, [sp, #44]	; 0x2c
   24df2:	mov	r0, r5
   24df4:	strd	r2, r3, [sp]
   24df8:	ldrd	r2, r3, [r4, #40]	; 0x28
   24dfc:	str	r1, [sp, #16]
   24dfe:	add	r1, sp, #56	; 0x38
   24e00:	str	r1, [sp, #12]
   24e02:	add	r1, sp, #48	; 0x30
   24e04:	str	r1, [sp, #8]
   24e06:	bl	2cb86 <btrfs_rmap_block@@Base>
   24e0a:	mov	r3, r0
   24e0c:	cbnz	r0, 24e26 <exclude_super_stripes@@Base+0xa6>
   24e0e:	ldr	r3, [sp, #56]	; 0x38
   24e10:	ldr	r0, [sp, #48]	; 0x30
   24e12:	subs	r2, r3, #1
   24e14:	str	r2, [sp, #56]	; 0x38
   24e16:	cbnz	r3, 24e5a <exclude_super_stripes@@Base+0xda>
   24e18:	adds	r6, #1
   24e1a:	str	r3, [sp, #32]
   24e1c:	blx	87cc <free@plt+0x4>
   24e20:	cmp	r6, #3
   24e22:	ldr	r3, [sp, #32]
   24e24:	bne.n	24e3a <exclude_super_stripes@@Base+0xba>
   24e26:	ldr	r1, [pc, #236]	; (24f14 <exclude_super_stripes@@Base+0x194>)
   24e28:	ldr	r2, [pc, #228]	; (24f10 <exclude_super_stripes@@Base+0x190>)
   24e2a:	add	r1, pc
   24e2c:	ldr	r2, [r1, r2]
   24e2e:	ldr	r1, [r2, #0]
   24e30:	ldr	r2, [sp, #60]	; 0x3c
   24e32:	eors	r1, r2
   24e34:	beq.n	24f02 <exclude_super_stripes@@Base+0x182>
   24e36:	blx	88e4 <__stack_chk_fail@plt>
   24e3a:	movs	r2, #12
   24e3c:	mul.w	r1, r2, r6
   24e40:	mov.w	r2, #16384	; 0x4000
   24e44:	sub.w	r3, r1, #32
   24e48:	rsb	r0, r1, #32
   24e4c:	lsl.w	r3, r2, r3
   24e50:	lsr.w	r0, r2, r0
   24e54:	orrs	r3, r0
   24e56:	lsls	r2, r1
   24e58:	b.n	24df0 <exclude_super_stripes@@Base+0x70>
   24e5a:	add.w	r0, r0, r2, lsl #3
   24e5e:	ldr.w	r1, [r4, #49]	; 0x31
   24e62:	ldrd	r2, r3, [r4, #40]	; 0x28
   24e66:	ldrd	sl, fp, [r0]
   24e6a:	ldr.w	r0, [r4, #53]	; 0x35
   24e6e:	adds	r1, r1, r2
   24e70:	str	r1, [sp, #24]
   24e72:	adc.w	r1, r0, r3
   24e76:	str	r1, [sp, #28]
   24e78:	ldrd	r0, r1, [sp, #24]
   24e7c:	cmp	fp, r1
   24e7e:	it	eq
   24e80:	cmpeq	sl, r0
   24e82:	bcs.n	24e0e <exclude_super_stripes@@Base+0x8e>
   24e84:	ldr.w	ip, [sp, #52]	; 0x34
   24e88:	mov	r0, ip
   24e8a:	asrs	r1, r0, #31
   24e8c:	strd	r0, r1, [sp, #32]
   24e90:	adds.w	r0, sl, ip
   24e94:	adc.w	r1, fp, ip, asr #31
   24e98:	cmp	r3, r1
   24e9a:	it	eq
   24e9c:	cmpeq	r2, r0
   24e9e:	bcs.n	24e0e <exclude_super_stripes@@Base+0x8e>
   24ea0:	cmp	fp, r3
   24ea2:	it	eq
   24ea4:	cmpeq	sl, r2
   24ea6:	bcs.n	24ee0 <exclude_super_stripes@@Base+0x160>
   24ea8:	subs.w	r8, r0, r2
   24eac:	sbc.w	r9, r1, r3
   24eb0:	ldrd	r1, r0, [r4, #80]	; 0x50
   24eb4:	adds.w	r1, r1, r8
   24eb8:	adc.w	r0, r0, r9
   24ebc:	strd	r1, r0, [r4, #80]	; 0x50
   24ec0:	movs	r1, #4
   24ec2:	str	r1, [sp, #8]
   24ec4:	adds.w	r1, r2, r8
   24ec8:	adc.w	r0, r3, r9
   24ecc:	adds.w	r1, r1, #4294967295	; 0xffffffff
   24ed0:	adc.w	r0, r0, #4294967295	; 0xffffffff
   24ed4:	strd	r1, r0, [sp]
   24ed8:	mov	r0, r7
   24eda:	bl	19d40 <set_extent_bits@@Base>
   24ede:	b.n	24e0e <exclude_super_stripes@@Base+0x8e>
   24ee0:	ldr	r3, [sp, #24]
   24ee2:	subs.w	r8, r3, sl
   24ee6:	ldr	r3, [sp, #28]
   24ee8:	sbc.w	r9, r3, fp
   24eec:	ldrd	r2, r3, [sp, #32]
   24ef0:	cmp	r3, r9
   24ef2:	it	eq
   24ef4:	cmpeq	r2, r8
   24ef6:	itt	cc
   24ef8:	movcc	r8, r2
   24efa:	movcc	r9, r3
   24efc:	mov	r2, sl
   24efe:	mov	r3, fp
   24f00:	b.n	24eb0 <exclude_super_stripes@@Base+0x130>
   24f02:	mov	r0, r3
   24f04:	add	sp, #68	; 0x44
   24f06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24f0a:	nop
   24f0c:	subs	r7, #172	; 0xac
   24f0e:	movs	r4, r0
   24f10:	lsls	r4, r7, #9
   24f12:	movs	r0, r0
   24f14:	subs	r7, #6
   24f16:	movs	r4, r0

00024f18 <btrfs_read_block_groups@@Base>:
   24f18:	ldr	r2, [pc, #660]	; (251b0 <btrfs_read_block_groups@@Base+0x298>)
   24f1a:	ldr	r3, [pc, #664]	; (251b4 <btrfs_read_block_groups@@Base+0x29c>)
   24f1c:	add	r2, pc
   24f1e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24f22:	sub	sp, #204	; 0xcc
   24f24:	ldr	r3, [r2, r3]
   24f26:	movs	r6, #0
   24f28:	add.w	r9, sp, #104	; 0x68
   24f2c:	ldr.w	r8, [r0, #24]
   24f30:	mov	r4, r0
   24f32:	mov	fp, r6
   24f34:	add	r0, sp, #128	; 0x80
   24f36:	ldr	r3, [r3, #0]
   24f38:	str	r3, [sp, #196]	; 0xc4
   24f3a:	mov.w	r3, #0
   24f3e:	movs	r3, #192	; 0xc0
   24f40:	strd	r6, r6, [sp, #64]	; 0x40
   24f44:	strb.w	r6, [sp, #73]	; 0x49
   24f48:	strb.w	r6, [sp, #74]	; 0x4a
   24f4c:	strb.w	r6, [sp, #75]	; 0x4b
   24f50:	strb.w	r6, [sp, #76]	; 0x4c
   24f54:	strb.w	r6, [sp, #77]	; 0x4d
   24f58:	strb.w	r6, [sp, #78]	; 0x4e
   24f5c:	strb.w	r6, [sp, #79]	; 0x4f
   24f60:	strb.w	r6, [sp, #80]	; 0x50
   24f64:	strb.w	r3, [sp, #72]	; 0x48
   24f68:	bl	1b2cc <btrfs_init_path@@Base>
   24f6c:	str	r6, [sp, #52]	; 0x34
   24f6e:	add.w	sl, sp, #128	; 0x80
   24f72:	movs	r5, #0
   24f74:	add	r2, sp, #64	; 0x40
   24f76:	mov	r1, r8
   24f78:	mov	r3, sl
   24f7a:	mov	r0, r5
   24f7c:	strd	r5, r5, [sp]
   24f80:	bl	1d6c0 <btrfs_search_slot@@Base>
   24f84:	subs	r7, r0, #0
   24f86:	blt.n	24fa8 <btrfs_read_block_groups@@Base+0x90>
   24f88:	ldr	r0, [sp, #128]	; 0x80
   24f8a:	ldr	r2, [sp, #160]	; 0xa0
   24f8c:	ldr.w	r3, [r0, #192]	; 0xc0
   24f90:	cmp	r3, r2
   24f92:	bhi.n	24fc4 <btrfs_read_block_groups@@Base+0xac>
   24f94:	ldr.w	r0, [r8, #464]	; 0x1d0
   24f98:	mov	r1, sl
   24f9a:	strb.w	r5, [sp, #193]	; 0xc1
   24f9e:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   24fa2:	subs	r7, r0, #0
   24fa4:	beq.n	24f88 <btrfs_read_block_groups@@Base+0x70>
   24fa6:	bge.n	24fec <btrfs_read_block_groups@@Base+0xd4>
   24fa8:	add	r0, sp, #128	; 0x80
   24faa:	bl	1b2dc <btrfs_release_path@@Base>
   24fae:	ldr	r2, [pc, #520]	; (251b8 <btrfs_read_block_groups@@Base+0x2a0>)
   24fb0:	ldr	r3, [pc, #512]	; (251b4 <btrfs_read_block_groups@@Base+0x29c>)
   24fb2:	add	r2, pc
   24fb4:	ldr	r3, [r2, r3]
   24fb6:	ldr	r2, [r3, #0]
   24fb8:	ldr	r3, [sp, #196]	; 0xc4
   24fba:	eors	r2, r3
   24fbc:	beq.w	251a6 <btrfs_read_block_groups@@Base+0x28e>
   24fc0:	blx	88e4 <__stack_chk_fail@plt>
   24fc4:	mov	r1, r9
   24fc6:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   24fca:	ldrd	r6, r7, [sp, #104]	; 0x68
   24fce:	ldrd	r2, r3, [sp, #64]	; 0x40
   24fd2:	cmp	r7, r3
   24fd4:	it	eq
   24fd6:	cmpeq	r6, r2
   24fd8:	bcc.n	24fe4 <btrfs_read_block_groups@@Base+0xcc>
   24fda:	ldrb.w	r3, [sp, #112]	; 0x70
   24fde:	cmp	r3, #192	; 0xc0
   24fe0:	beq.w	2516c <btrfs_read_block_groups@@Base+0x254>
   24fe4:	ldr	r3, [sp, #160]	; 0xa0
   24fe6:	adds	r3, #1
   24fe8:	str	r3, [sp, #160]	; 0xa0
   24fea:	b.n	24f88 <btrfs_read_block_groups@@Base+0x70>
   24fec:	movs	r7, #0
   24fee:	b.n	24fa8 <btrfs_read_block_groups@@Base+0x90>
   24ff0:	ldr.w	r2, [sp, #93]	; 0x5d
   24ff4:	ldr.w	r3, [sp, #97]	; 0x61
   24ff8:	orrs	r3, r2
   24ffa:	beq.n	25096 <btrfs_read_block_groups@@Base+0x17e>
   24ffc:	movs	r1, #120	; 0x78
   24ffe:	movs	r0, #1
   25000:	blx	8718 <calloc@plt+0x4>
   25004:	mov	r5, r0
   25006:	cmp	r0, #0
   25008:	beq.w	2515e <btrfs_read_block_groups@@Base+0x246>
   2500c:	movs	r2, #25
   2500e:	mov	r0, r7
   25010:	mla	r2, r2, sl, r7
   25014:	movs	r3, #24
   25016:	mov	r1, r9
   25018:	add.w	r7, r5, #40	; 0x28
   2501c:	ldr.w	r2, [r2, #214]	; 0xd6
   25020:	adds	r2, #101	; 0x65
   25022:	bl	1a79e <read_extent_buffer@@Base>
   25026:	ldmia	r6!, {r0, r1, r2, r3}
   25028:	stmia	r7!, {r0, r1, r2, r3}
   2502a:	ldr	r3, [r6, #0]
   2502c:	movs	r6, #0
   2502e:	ldrd	r0, r1, [sp, #104]	; 0x68
   25032:	strb	r3, [r7, #0]
   25034:	ldr	r3, [sp, #52]	; 0x34
   25036:	strd	r0, r1, [r5, #72]	; 0x48
   2503a:	str	r6, [r5, #104]	; 0x68
   2503c:	strd	r3, fp, [r5, #88]	; 0x58
   25040:	ldrd	r2, r3, [sp, #120]	; 0x78
   25044:	and.w	r1, r2, #1
   25048:	strd	r1, r6, [sp, #24]
   2504c:	ldrd	r0, r1, [sp, #24]
   25050:	strd	r2, r3, [r5, #96]	; 0x60
   25054:	orrs	r1, r0
   25056:	bne.n	250dc <btrfs_read_block_groups@@Base+0x1c4>
   25058:	and.w	r1, r2, #2
   2505c:	strd	r1, r6, [sp, #32]
   25060:	ldrd	r0, r1, [sp, #32]
   25064:	orrs	r1, r0
   25066:	bne.n	250e0 <btrfs_read_block_groups@@Base+0x1c8>
   25068:	and.w	r1, r2, #4
   2506c:	strd	r1, r6, [sp, #40]	; 0x28
   25070:	ldrd	r0, r1, [sp, #40]	; 0x28
   25074:	orrs	r1, r0
   25076:	it	ne
   25078:	movne	r6, #4
   2507a:	mov	r0, r4
   2507c:	bl	21a00 <btrfs_create_tree@@Base+0x1fc>
   25080:	ldrd	r2, r3, [r5, #40]	; 0x28
   25084:	bl	2d348 <btrfs_chunk_readonly@@Base>
   25088:	subs	r7, r0, #0
   2508a:	bge.n	250e4 <btrfs_read_block_groups@@Base+0x1cc>
   2508c:	mov	r0, r5
   2508e:	blx	87cc <free@plt+0x4>
   25092:	adds	r3, r7, #2
   25094:	bne.n	24fa8 <btrfs_read_block_groups@@Base+0x90>
   25096:	ldr.w	r0, [sp, #73]	; 0x49
   2509a:	ldr.w	r1, [sp, #77]	; 0x4d
   2509e:	ldrd	r3, r2, [sp, #64]	; 0x40
   250a2:	orrs.w	r5, r0, r1
   250a6:	bne.n	25164 <btrfs_read_block_groups@@Base+0x24c>
   250a8:	adds	r3, #1
   250aa:	adc.w	r2, r2, #0
   250ae:	add	r0, sp, #128	; 0x80
   250b0:	strd	r3, r2, [sp, #64]	; 0x40
   250b4:	movs	r2, #0
   250b6:	strb.w	r2, [sp, #73]	; 0x49
   250ba:	strb.w	r2, [sp, #74]	; 0x4a
   250be:	strb.w	r2, [sp, #75]	; 0x4b
   250c2:	strb.w	r2, [sp, #76]	; 0x4c
   250c6:	strb.w	r2, [sp, #77]	; 0x4d
   250ca:	strb.w	r2, [sp, #78]	; 0x4e
   250ce:	strb.w	r2, [sp, #79]	; 0x4f
   250d2:	strb.w	r2, [sp, #80]	; 0x50
   250d6:	bl	1b2dc <btrfs_release_path@@Base>
   250da:	b.n	24f6e <btrfs_read_block_groups@@Base+0x56>
   250dc:	movs	r6, #2
   250de:	b.n	2507a <btrfs_read_block_groups@@Base+0x162>
   250e0:	movs	r6, #16
   250e2:	b.n	2507a <btrfs_read_block_groups@@Base+0x162>
   250e4:	it	ne
   250e6:	movne	r3, #1
   250e8:	mov	r1, r5
   250ea:	it	ne
   250ec:	strne	r3, [r5, #108]	; 0x6c
   250ee:	mov	r0, r4
   250f0:	bl	24d80 <exclude_super_stripes@@Base>
   250f4:	add	r3, sp, #60	; 0x3c
   250f6:	str	r3, [sp, #16]
   250f8:	mov	r0, r4
   250fa:	ldrd	r2, r3, [r5, #72]	; 0x48
   250fe:	strd	r2, r3, [sp, #8]
   25102:	ldr.w	r2, [r5, #49]	; 0x31
   25106:	ldr.w	r3, [r5, #53]	; 0x35
   2510a:	strd	r2, r3, [sp]
   2510e:	ldrd	r2, r3, [r5, #96]	; 0x60
   25112:	bl	23f3c <update_space_info@@Base>
   25116:	subs	r7, r0, #0
   25118:	blt.n	2508c <btrfs_read_block_groups@@Base+0x174>
   2511a:	ldr	r3, [sp, #60]	; 0x3c
   2511c:	orr.w	r6, r6, #8
   25120:	add.w	r0, r4, #128	; 0x80
   25124:	str	r3, [r5, #60]	; 0x3c
   25126:	ldrd	r2, r3, [r5, #40]	; 0x28
   2512a:	str	r6, [sp, #8]
   2512c:	ldr.w	r1, [r5, #49]	; 0x31
   25130:	ldr.w	r6, [r5, #53]	; 0x35
   25134:	adds	r1, r1, r2
   25136:	adc.w	r6, r3, r6
   2513a:	adds.w	r1, r1, #4294967295	; 0xffffffff
   2513e:	adc.w	r6, r6, #4294967295	; 0xffffffff
   25142:	strd	r1, r6, [sp]
   25146:	mov	r6, r0
   25148:	bl	19d40 <set_extent_bits@@Base>
   2514c:	movs	r3, #0
   2514e:	str	r5, [sp, #0]
   25150:	str	r3, [sp, #4]
   25152:	mov	r0, r6
   25154:	ldrd	r2, r3, [r5, #40]	; 0x28
   25158:	bl	1a04e <set_state_private@@Base>
   2515c:	b.n	25096 <btrfs_read_block_groups@@Base+0x17e>
   2515e:	mvn.w	r7, #11
   25162:	b.n	24fa8 <btrfs_read_block_groups@@Base+0x90>
   25164:	adds	r3, r0, r3
   25166:	adc.w	r2, r1, r2
   2516a:	b.n	250ae <btrfs_read_block_groups@@Base+0x196>
   2516c:	ldr	r2, [sp, #160]	; 0xa0
   2516e:	add	r1, sp, #64	; 0x40
   25170:	ldr	r0, [sp, #128]	; 0x80
   25172:	add	r6, sp, #84	; 0x54
   25174:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   25178:	ldr	r7, [sp, #128]	; 0x80
   2517a:	ldr.w	sl, [sp, #160]	; 0xa0
   2517e:	mov	r1, r6
   25180:	mov	r0, r7
   25182:	mov	r2, sl
   25184:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   25188:	ldrb.w	r3, [sp, #92]	; 0x5c
   2518c:	cmp	r3, #192	; 0xc0
   2518e:	beq.w	24ff0 <btrfs_read_block_groups@@Base+0xd8>
   25192:	ldr	r1, [pc, #40]	; (251bc <btrfs_read_block_groups@@Base+0x2a4>)
   25194:	movw	r2, #2684	; 0xa7c
   25198:	ldr	r0, [pc, #36]	; (251c0 <btrfs_read_block_groups@@Base+0x2a8>)
   2519a:	add	r1, pc
   2519c:	addw	r1, r1, #526	; 0x20e
   251a0:	add	r0, pc
   251a2:	bl	2227c <btrfs_create_tree@@Base+0xa78>
   251a6:	mov	r0, r7
   251a8:	add	sp, #204	; 0xcc
   251aa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   251ae:	nop
   251b0:	subs	r6, #20
   251b2:	movs	r4, r0
   251b4:	lsls	r4, r7, #9
   251b6:	movs	r0, r0
   251b8:	subs	r5, #126	; 0x7e
   251ba:	movs	r4, r0
   251bc:	bne.n	25276 <btrfs_add_block_group@@Base+0xb2>
   251be:	movs	r1, r0
   251c0:	ldmia	r7, {r0, r1, r2, r4, r5, r7}
   251c2:	movs	r1, r0

000251c4 <btrfs_add_block_group@@Base>:
   251c4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   251c8:	sub	sp, #52	; 0x34
   251ca:	mov	r5, r0
   251cc:	add.w	fp, r0, #128	; 0x80
   251d0:	strd	r2, r3, [sp, #40]	; 0x28
   251d4:	movs	r1, #120	; 0x78
   251d6:	ldrd	r6, r3, [sp, #88]	; 0x58
   251da:	movs	r0, #1
   251dc:	ldrd	r7, r8, [sp, #96]	; 0x60
   251e0:	ldr.w	sl, [pc, #320]	; 25324 <btrfs_add_block_group@@Base+0x160>
   251e4:	str	r3, [sp, #36]	; 0x24
   251e6:	ldr	r3, [sp, #104]	; 0x68
   251e8:	add	sl, pc
   251ea:	ldr.w	r9, [pc, #316]	; 25328 <btrfs_add_block_group@@Base+0x164>
   251ee:	addw	sl, sl, #547	; 0x223
   251f2:	str	r3, [sp, #28]
   251f4:	add	r9, pc
   251f6:	ldr	r3, [sp, #108]	; 0x6c
   251f8:	str	r3, [sp, #32]
   251fa:	blx	8718 <calloc@plt+0x4>
   251fe:	mov	r2, sl
   25200:	mov	r1, r9
   25202:	movw	r3, #2789	; 0xae5
   25206:	mov	r4, r0
   25208:	clz	r0, r0
   2520c:	lsrs	r0, r0, #5
   2520e:	str	r0, [sp, #0]
   25210:	ldr	r0, [pc, #280]	; (2532c <btrfs_add_block_group@@Base+0x168>)
   25212:	add	r0, pc
   25214:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   25218:	ldr	r3, [sp, #28]
   2521a:	mov	r1, r4
   2521c:	mov	r0, r5
   2521e:	strd	r7, r8, [r4, #40]	; 0x28
   25222:	str.w	r3, [r4, #49]	; 0x31
   25226:	ldr	r3, [sp, #32]
   25228:	str	r6, [r4, #96]	; 0x60
   2522a:	str.w	r3, [r4, #53]	; 0x35
   2522e:	movs	r3, #192	; 0xc0
   25230:	strb.w	r3, [r4, #48]	; 0x30
   25234:	ldr	r3, [sp, #40]	; 0x28
   25236:	str	r3, [r4, #72]	; 0x48
   25238:	ldr	r3, [sp, #44]	; 0x2c
   2523a:	str	r3, [r4, #76]	; 0x4c
   2523c:	ldr	r3, [sp, #36]	; 0x24
   2523e:	str	r3, [r4, #100]	; 0x64
   25240:	bl	24d80 <exclude_super_stripes@@Base>
   25244:	add.w	r3, r4, #60	; 0x3c
   25248:	str	r3, [sp, #16]
   2524a:	mov	r0, r5
   2524c:	ldr	r3, [sp, #40]	; 0x28
   2524e:	str	r3, [sp, #8]
   25250:	ldr	r3, [sp, #44]	; 0x2c
   25252:	str	r3, [sp, #12]
   25254:	ldr	r3, [sp, #28]
   25256:	str	r3, [sp, #0]
   25258:	ldr	r3, [sp, #32]
   2525a:	str	r3, [sp, #4]
   2525c:	ldrd	r2, r3, [r4, #96]	; 0x60
   25260:	bl	23f3c <update_space_info@@Base>
   25264:	mov	r2, sl
   25266:	mov	r1, r9
   25268:	mov.w	r3, #2800	; 0xaf0
   2526c:	ldr.w	sl, [pc, #192]	; 25330 <btrfs_add_block_group@@Base+0x16c>
   25270:	ldr.w	r9, [pc, #192]	; 25334 <btrfs_add_block_group@@Base+0x170>
   25274:	add	sl, pc
   25276:	addw	sl, sl, #547	; 0x223
   2527a:	add	r9, pc
   2527c:	str	r0, [sp, #0]
   2527e:	ldr	r0, [pc, #184]	; (25338 <btrfs_add_block_group@@Base+0x174>)
   25280:	add	r0, pc
   25282:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   25286:	mov.w	ip, #0
   2528a:	and.w	r2, r6, #1
   2528e:	mov	r3, ip
   25290:	orrs	r3, r2
   25292:	and.w	r0, r6, #4
   25296:	mov	r1, ip
   25298:	ite	eq
   2529a:	moveq	r3, ip
   2529c:	movne	r3, #2
   2529e:	orrs.w	r2, r0, r1
   252a2:	and.w	r0, r6, #2
   252a6:	it	ne
   252a8:	orrne.w	r3, r3, #4
   252ac:	movs	r1, #0
   252ae:	orrs.w	r2, r0, r1
   252b2:	ldr	r2, [sp, #32]
   252b4:	it	ne
   252b6:	orrne.w	r3, r3, #16
   252ba:	mov	r0, fp
   252bc:	orr.w	r3, r3, #8
   252c0:	str	r3, [sp, #8]
   252c2:	ldr	r3, [sp, #28]
   252c4:	adds.w	r3, r3, #4294967295	; 0xffffffff
   252c8:	adc.w	r2, r2, #4294967295	; 0xffffffff
   252cc:	adds	r3, r3, r7
   252ce:	adc.w	r2, r2, r8
   252d2:	strd	r3, r2, [sp]
   252d6:	mov	r2, r7
   252d8:	mov	r3, r8
   252da:	bl	19d40 <set_extent_bits@@Base>
   252de:	ldr	r1, [pc, #92]	; (2533c <btrfs_add_block_group@@Base+0x178>)
   252e0:	mov	r2, sl
   252e2:	movw	r3, #2806	; 0xaf6
   252e6:	add	r1, pc
   252e8:	str	r1, [sp, #28]
   252ea:	str	r0, [sp, #0]
   252ec:	mov	r0, r9
   252ee:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   252f2:	mov	r2, r7
   252f4:	movs	r3, #0
   252f6:	mov	r0, fp
   252f8:	str	r3, [sp, #4]
   252fa:	mov	r3, r8
   252fc:	str	r4, [sp, #0]
   252fe:	bl	1a04e <set_state_private@@Base>
   25302:	ldr	r1, [sp, #28]
   25304:	mov	r2, sl
   25306:	movw	r3, #2810	; 0xafa
   2530a:	str	r0, [sp, #0]
   2530c:	mov	r0, r9
   2530e:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   25312:	mov	r0, r5
   25314:	ldr	r3, [sp, #36]	; 0x24
   25316:	mov	r2, r6
   25318:	bl	21a00 <btrfs_create_tree@@Base+0x1fc>
   2531c:	mov	r0, r4
   2531e:	add	sp, #52	; 0x34
   25320:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25324:	bne.n	25342 <btrfs_make_block_group@@Base+0x2>
   25326:	movs	r1, r0
   25328:	ldmia	r1!, {r0, r5, r6, r7}
   2532a:	movs	r1, r0
   2532c:	ldmia	r6, {r0, r2, r4, r6}
   2532e:	movs	r1, r0
   25330:	beq.n	25236 <btrfs_add_block_group@@Base+0x72>
   25332:	movs	r1, r0
   25334:	str	r6, [sp, #12]
   25336:	movs	r1, r0
   25338:	str	r5, [sp, #1012]	; 0x3f4
   2533a:	movs	r1, r0
   2533c:	ldmia	r0, {r0, r1, r2, r3, r5, r6, r7}
   2533e:	movs	r1, r0

00025340 <btrfs_make_block_group@@Base>:
   25340:	push	{r4, r5, r6, r7, lr}
   25342:	mov	r4, r0
   25344:	ldr	r5, [pc, #144]	; (253d8 <btrfs_make_block_group@@Base+0x98>)
   25346:	sub	sp, #68	; 0x44
   25348:	mov	r0, r1
   2534a:	ldr	r1, [pc, #144]	; (253dc <btrfs_make_block_group@@Base+0x9c>)
   2534c:	add	r5, pc
   2534e:	ldrd	r6, r7, [sp, #104]	; 0x68
   25352:	ldr	r1, [r5, r1]
   25354:	movs	r5, #0
   25356:	ldr	r1, [r1, #0]
   25358:	str	r1, [sp, #60]	; 0x3c
   2535a:	mov.w	r1, #0
   2535e:	ldr	r1, [r0, #24]
   25360:	strd	r6, r7, [sp, #16]
   25364:	ldrd	r6, r7, [sp, #96]	; 0x60
   25368:	str	r1, [sp, #28]
   2536a:	strd	r6, r7, [sp, #8]
   2536e:	ldrd	r6, r7, [sp, #88]	; 0x58
   25372:	strd	r6, r7, [sp]
   25376:	bl	251c4 <btrfs_add_block_group@@Base>
   2537a:	ldr	r1, [sp, #28]
   2537c:	ldr	r3, [r0, #72]	; 0x48
   2537e:	add.w	r2, r0, #40	; 0x28
   25382:	str	r3, [sp, #36]	; 0x24
   25384:	ldr	r3, [r0, #76]	; 0x4c
   25386:	str	r3, [sp, #40]	; 0x28
   25388:	ldr	r3, [r0, #96]	; 0x60
   2538a:	str	r3, [sp, #52]	; 0x34
   2538c:	ldr	r3, [r0, #100]	; 0x64
   2538e:	mov	r0, r4
   25390:	str	r3, [sp, #56]	; 0x38
   25392:	mov.w	r3, #256	; 0x100
   25396:	strd	r3, r5, [sp, #44]	; 0x2c
   2539a:	movs	r3, #24
   2539c:	str	r3, [sp, #0]
   2539e:	add	r3, sp, #36	; 0x24
   253a0:	bl	1e74c <btrfs_insert_item@@Base>
   253a4:	ldr	r2, [pc, #56]	; (253e0 <btrfs_make_block_group@@Base+0xa0>)
   253a6:	ldr	r1, [pc, #60]	; (253e4 <btrfs_make_block_group@@Base+0xa4>)
   253a8:	movw	r3, #2833	; 0xb11
   253ac:	add	r2, pc
   253ae:	addw	r2, r2, #569	; 0x239
   253b2:	add	r1, pc
   253b4:	str	r0, [sp, #0]
   253b6:	ldr	r0, [pc, #48]	; (253e8 <btrfs_make_block_group@@Base+0xa8>)
   253b8:	add	r0, pc
   253ba:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   253be:	ldr	r2, [pc, #44]	; (253ec <btrfs_make_block_group@@Base+0xac>)
   253c0:	ldr	r3, [pc, #24]	; (253dc <btrfs_make_block_group@@Base+0x9c>)
   253c2:	add	r2, pc
   253c4:	ldr	r3, [r2, r3]
   253c6:	ldr	r2, [r3, #0]
   253c8:	ldr	r3, [sp, #60]	; 0x3c
   253ca:	eors	r2, r3
   253cc:	beq.n	253d2 <btrfs_make_block_group@@Base+0x92>
   253ce:	blx	88e4 <__stack_chk_fail@plt>
   253d2:	mov	r0, r5
   253d4:	add	sp, #68	; 0x44
   253d6:	pop	{r4, r5, r6, r7, pc}
   253d8:	subs	r1, #228	; 0xe4
   253da:	movs	r4, r0
   253dc:	lsls	r4, r7, #9
   253de:	movs	r0, r0
   253e0:	ldmia	r7!, {r0, r3, r6}
   253e2:	movs	r1, r0
   253e4:	ldmia	r0, {r0, r1, r5}
   253e6:	movs	r1, r0
   253e8:	str	r4, [sp, #788]	; 0x314
   253ea:	movs	r1, r0
   253ec:	subs	r1, #110	; 0x6e
   253ee:	movs	r4, r0
   253f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   253f4:	mov	r5, r1
   253f6:	ldr	r1, [pc, #412]	; (25594 <btrfs_make_block_group@@Base+0x254>)
   253f8:	sub	sp, #76	; 0x4c
   253fa:	mov	r7, r2
   253fc:	ldr	r2, [pc, #408]	; (25598 <btrfs_make_block_group@@Base+0x258>)
   253fe:	add	r1, pc
   25400:	mov	r9, r3
   25402:	ldrd	r6, r3, [sp, #112]	; 0x70
   25406:	mov	r4, r0
   25408:	ldr	r2, [r1, r2]
   2540a:	mov	r0, r5
   2540c:	ldr	r2, [r2, #0]
   2540e:	str	r2, [sp, #68]	; 0x44
   25410:	mov.w	r2, #0
   25414:	mov	r2, r6
   25416:	str	r3, [sp, #36]	; 0x24
   25418:	bl	219cc <btrfs_create_tree@@Base+0x1c8>
   2541c:	ldr	r3, [sp, #36]	; 0x24
   2541e:	str	r0, [sp, #44]	; 0x2c
   25420:	cbnz	r0, 25454 <btrfs_make_block_group@@Base+0x114>
   25422:	movs	r1, #0
   25424:	movs	r0, #0
   25426:	add	r2, sp, #44	; 0x2c
   25428:	strd	r0, r1, [sp, #8]
   2542c:	strd	r0, r1, [sp]
   25430:	mov	r0, r5
   25432:	str	r2, [sp, #16]
   25434:	mov	r2, r6
   25436:	bl	23f3c <update_space_info@@Base>
   2543a:	ldr	r2, [pc, #352]	; (2559c <btrfs_make_block_group@@Base+0x25c>)
   2543c:	ldr	r1, [pc, #352]	; (255a0 <btrfs_make_block_group@@Base+0x260>)
   2543e:	mov.w	r3, #1712	; 0x6b0
   25442:	add	r2, pc
   25444:	add.w	r2, r2, #592	; 0x250
   25448:	add	r1, pc
   2544a:	str	r0, [sp, #0]
   2544c:	ldr	r0, [pc, #340]	; (255a4 <btrfs_make_block_group@@Base+0x264>)
   2544e:	add	r0, pc
   25450:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   25454:	ldr.w	sl, [sp, #44]	; 0x2c
   25458:	ldr	r2, [pc, #332]	; (255a8 <btrfs_make_block_group@@Base+0x268>)
   2545a:	ldr	r1, [pc, #336]	; (255ac <btrfs_make_block_group@@Base+0x26c>)
   2545c:	clz	r3, sl
   25460:	ldr	r0, [pc, #332]	; (255b0 <btrfs_make_block_group@@Base+0x270>)
   25462:	add	r2, pc
   25464:	lsrs	r3, r3, #5
   25466:	add.w	r2, r2, #592	; 0x250
   2546a:	str	r3, [sp, #0]
   2546c:	add	r1, pc
   2546e:	add	r0, pc
   25470:	movw	r3, #1714	; 0x6b2
   25474:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   25478:	ldr.w	r8, [sl, #40]	; 0x28
   2547c:	cmp.w	r8, #0
   25480:	bne.n	2551e <btrfs_make_block_group@@Base+0x1de>
   25482:	ldrd	r0, r1, [sl, #8]
   25486:	movs	r2, #7
   25488:	bl	34f48 <div_factor@@Base>
   2548c:	mov	sl, r0
   2548e:	ldr	r0, [sp, #44]	; 0x2c
   25490:	mov	fp, r1
   25492:	ldr	r2, [r0, #24]
   25494:	ldrd	r3, r1, [r0, #16]
   25498:	adds	r3, r3, r2
   2549a:	ldr	r2, [r0, #28]
   2549c:	adc.w	r1, r2, r1
   254a0:	ldr	r2, [r0, #32]
   254a2:	adds	r3, r3, r2
   254a4:	ldr	r2, [r0, #36]	; 0x24
   254a6:	adc.w	r1, r2, r1
   254aa:	adds	r3, r3, r7
   254ac:	str	r3, [sp, #24]
   254ae:	adc.w	r3, r1, r9
   254b2:	str	r3, [sp, #28]
   254b4:	ldrd	r2, r3, [sp, #24]
   254b8:	cmp	r3, fp
   254ba:	it	eq
   254bc:	cmpeq	r2, sl
   254be:	bcc.n	2551e <btrfs_make_block_group@@Base+0x1de>
   254c0:	ldrb.w	r1, [r5, #365]	; 0x16d
   254c4:	lsls	r2, r1, #31
   254c6:	bpl.n	254d2 <btrfs_make_block_group@@Base+0x192>
   254c8:	and.w	r2, r6, #4
   254cc:	mov	r3, r8
   254ce:	orrs	r3, r2
   254d0:	bne.n	2551e <btrfs_make_block_group@@Base+0x1de>
   254d2:	lsls	r3, r1, #30
   254d4:	bpl.n	254e0 <btrfs_make_block_group@@Base+0x1a0>
   254d6:	and.w	r2, r6, #2
   254da:	movs	r3, #0
   254dc:	orrs	r3, r2
   254de:	bne.n	2551e <btrfs_make_block_group@@Base+0x1de>
   254e0:	ldrb.w	r3, [r4, #33]	; 0x21
   254e4:	ands.w	r8, r3, #1
   254e8:	bne.n	2551e <btrfs_make_block_group@@Base+0x1de>
   254ea:	orr.w	r3, r3, #1
   254ee:	strb.w	r3, [r4, #33]	; 0x21
   254f2:	ldrd	r2, r3, [r0]
   254f6:	mov	r1, r5
   254f8:	mov	r0, r4
   254fa:	strd	r2, r3, [sp]
   254fe:	add	r3, sp, #56	; 0x38
   25500:	add	r2, sp, #48	; 0x30
   25502:	bl	2bca4 <btrfs_alloc_chunk@@Base>
   25506:	cmn.w	r0, #28
   2550a:	bne.n	25532 <btrfs_make_block_group@@Base+0x1f2>
   2550c:	ldr	r3, [sp, #44]	; 0x2c
   2550e:	movs	r2, #1
   25510:	str	r2, [r3, #40]	; 0x28
   25512:	ldrb.w	r3, [r4, #33]	; 0x21
   25516:	bfi	r3, r8, #0, #1
   2551a:	strb.w	r3, [r4, #33]	; 0x21
   2551e:	ldr	r2, [pc, #148]	; (255b4 <btrfs_make_block_group@@Base+0x274>)
   25520:	ldr	r3, [pc, #116]	; (25598 <btrfs_make_block_group@@Base+0x258>)
   25522:	add	r2, pc
   25524:	ldr	r3, [r2, r3]
   25526:	ldr	r2, [r3, #0]
   25528:	ldr	r3, [sp, #68]	; 0x44
   2552a:	eors	r2, r3
   2552c:	beq.n	2558c <btrfs_make_block_group@@Base+0x24c>
   2552e:	blx	88e4 <__stack_chk_fail@plt>
   25532:	ldr.w	r9, [pc, #132]	; 255b8 <btrfs_make_block_group@@Base+0x278>
   25536:	movw	r3, #1751	; 0x6d7
   2553a:	ldr	r7, [pc, #128]	; (255bc <btrfs_make_block_group@@Base+0x27c>)
   2553c:	ldr	r6, [pc, #128]	; (255c0 <btrfs_make_block_group@@Base+0x280>)
   2553e:	add	r9, pc
   25540:	add.w	r9, r9, #592	; 0x250
   25544:	add	r7, pc
   25546:	add	r6, pc
   25548:	str	r0, [sp, #0]
   2554a:	mov	r2, r9
   2554c:	mov	r1, r7
   2554e:	mov	r0, r6
   25550:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   25554:	ldrd	r2, r3, [sp, #56]	; 0x38
   25558:	mov	r1, r5
   2555a:	mov	r0, r4
   2555c:	strd	r2, r3, [sp, #16]
   25560:	ldrd	r2, r3, [sp, #48]	; 0x30
   25564:	strd	r2, r3, [sp, #8]
   25568:	ldr	r3, [sp, #44]	; 0x2c
   2556a:	ldrd	r2, r3, [r3]
   2556e:	strd	r2, r3, [sp]
   25572:	movs	r2, #0
   25574:	movs	r3, #0
   25576:	bl	25340 <btrfs_make_block_group@@Base>
   2557a:	movw	r3, #1755	; 0x6db
   2557e:	mov	r2, r9
   25580:	mov	r1, r7
   25582:	str	r0, [sp, #0]
   25584:	mov	r0, r6
   25586:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2558a:	b.n	25512 <btrfs_make_block_group@@Base+0x1d2>
   2558c:	movs	r0, #0
   2558e:	add	sp, #76	; 0x4c
   25590:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25594:	subs	r1, #50	; 0x32
   25596:	movs	r4, r0
   25598:	lsls	r4, r7, #9
   2559a:	movs	r0, r0
   2559c:	ldmia	r6!, {r0, r1, r4, r5, r7}
   2559e:	movs	r1, r0
   255a0:	stmia	r7!, {r0, r2, r3, r7}
   255a2:	movs	r1, r0
   255a4:	str	r4, [sp, #188]	; 0xbc
   255a6:	movs	r1, r0
   255a8:	ldmia	r6!, {r0, r1, r4, r7}
   255aa:	movs	r1, r0
   255ac:	stmia	r7!, {r0, r3, r5, r6}
   255ae:	movs	r1, r0
   255b0:	ldmia	r5!, {r4}
   255b2:	movs	r1, r0
   255b4:	subs	r0, #14
   255b6:	movs	r4, r0
   255b8:	ldmia	r5, {r0, r1, r2, r4, r5, r7}
   255ba:	movs	r1, r0
   255bc:	stmia	r6!, {r0, r4, r7}
   255be:	movs	r1, r0
   255c0:	str	r3, [sp, #220]	; 0xdc
   255c2:	movs	r1, r0

000255c4 <btrfs_reserve_extent@@Base>:
   255c4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   255c8:	mov	sl, r2
   255ca:	vpush	{d8-d10}
   255ce:	mov	r6, r1
   255d0:	ldr.w	r2, [pc, #2256]	; 25ea4 <btrfs_reserve_extent@@Base+0x8e0>
   255d4:	mov	fp, r3
   255d6:	ldr.w	r1, [pc, #2256]	; 25ea8 <btrfs_reserve_extent@@Base+0x8e4>
   255da:	add	r2, pc
   255dc:	sub	sp, #252	; 0xfc
   255de:	add	r1, pc
   255e0:	ldr.w	r5, [r6, #464]	; 0x1d0
   255e4:	ldr	r3, [sp, #312]	; 0x138
   255e6:	str	r2, [sp, #168]	; 0xa8
   255e8:	ldr.w	r2, [pc, #2240]	; 25eac <btrfs_reserve_extent@@Base+0x8e8>
   255ec:	str	r3, [sp, #172]	; 0xac
   255ee:	ldrb.w	r3, [sp, #340]	; 0x154
   255f2:	str	r0, [sp, #60]	; 0x3c
   255f4:	ldr	r2, [r1, r2]
   255f6:	ldrd	r8, r9, [sp, #320]	; 0x140
   255fa:	ldr	r7, [sp, #336]	; 0x150
   255fc:	ldr	r2, [r2, #0]
   255fe:	str	r2, [sp, #244]	; 0xf4
   25600:	mov.w	r2, #0
   25604:	cmp	r3, #0
   25606:	beq.w	25af4 <btrfs_reserve_extent@@Base+0x530>
   2560a:	ldrd	r3, r4, [r5, #248]	; 0xf8
   2560e:	ldrd	r1, r2, [r5, #272]	; 0x110
   25612:	ands	r3, r1
   25614:	orr.w	r3, r3, #1
   25618:	str	r3, [sp, #40]	; 0x28
   2561a:	ands	r4, r2
   2561c:	ldr.w	r3, [r6, #488]	; 0x1e8
   25620:	cbnz	r3, 25632 <btrfs_reserve_extent@@Base+0x6e>
   25622:	ldr.w	r3, [r6, #451]	; 0x1c3
   25626:	ldr.w	r2, [r6, #447]	; 0x1bf
   2562a:	cmp	r3, #0
   2562c:	it	eq
   2562e:	cmpeq	r2, #7
   25630:	bne.n	256a8 <btrfs_reserve_extent@@Base+0xe4>
   25632:	ldr	r1, [sp, #40]	; 0x28
   25634:	movs	r3, #0
   25636:	and.w	r2, r1, #4
   2563a:	orrs	r3, r2
   2563c:	bne.n	25672 <btrfs_reserve_extent@@Base+0xae>
   2563e:	movs	r2, #4
   25640:	movs	r3, #0
   25642:	mov	r1, r5
   25644:	strd	r2, r3, [sp]
   25648:	ldr	r0, [sp, #60]	; 0x3c
   2564a:	mov	r2, sl
   2564c:	mov	r3, fp
   2564e:	bl	253f0 <btrfs_make_block_group@@Base+0xb0>
   25652:	ldr.w	r2, [pc, #2140]	; 25eb0 <btrfs_reserve_extent@@Base+0x8ec>
   25656:	ldr.w	r1, [pc, #2140]	; 25eb4 <btrfs_reserve_extent@@Base+0x8f0>
   2565a:	movw	r3, #2360	; 0x938
   2565e:	add	r2, pc
   25660:	addw	r2, r2, #607	; 0x25f
   25664:	add	r1, pc
   25666:	str	r0, [sp, #0]
   25668:	ldr.w	r0, [pc, #2124]	; 25eb8 <btrfs_reserve_extent@@Base+0x8f4>
   2566c:	add	r0, pc
   2566e:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   25672:	ldr	r3, [sp, #40]	; 0x28
   25674:	adds.w	r2, sl, #2097152	; 0x200000
   25678:	mov	r1, r5
   2567a:	ldr	r0, [sp, #60]	; 0x3c
   2567c:	strd	r3, r4, [sp]
   25680:	adc.w	r3, fp, #0
   25684:	bl	253f0 <btrfs_make_block_group@@Base+0xb0>
   25688:	ldr.w	r2, [pc, #2096]	; 25ebc <btrfs_reserve_extent@@Base+0x8f8>
   2568c:	ldr.w	r1, [pc, #2096]	; 25ec0 <btrfs_reserve_extent@@Base+0x8fc>
   25690:	movw	r3, #2364	; 0x93c
   25694:	add	r2, pc
   25696:	addw	r2, r2, #607	; 0x25f
   2569a:	add	r1, pc
   2569c:	str	r0, [sp, #0]
   2569e:	ldr.w	r0, [pc, #2084]	; 25ec4 <btrfs_reserve_extent@@Base+0x900>
   256a2:	add	r0, pc
   256a4:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   256a8:	ldr.w	r2, [r5, #388]	; 0x184
   256ac:	movs	r3, #0
   256ae:	ldr.w	r4, [pc, #2072]	; 25ec8 <btrfs_reserve_extent@@Base+0x904>
   256b2:	cmp	fp, r3
   256b4:	it	eq
   256b6:	cmpeq	sl, r2
   256b8:	ldr.w	r1, [pc, #2064]	; 25ecc <btrfs_reserve_extent@@Base+0x908>
   256bc:	ldr.w	r0, [pc, #2064]	; 25ed0 <btrfs_reserve_extent@@Base+0x90c>
   256c0:	add	r4, pc
   256c2:	ite	cc
   256c4:	movcc	r3, #1
   256c6:	movcs	r3, #0
   256c8:	add	r1, pc
   256ca:	add	r0, pc
   256cc:	addw	r2, r4, #607	; 0x25f
   256d0:	str	r3, [sp, #0]
   256d2:	movw	r3, #2367	; 0x93f
   256d6:	str	r1, [sp, #32]
   256d8:	str	r0, [sp, #24]
   256da:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   256de:	ldr	r3, [sp, #60]	; 0x3c
   256e0:	ldr	r1, [sp, #32]
   256e2:	ldr	r0, [sp, #24]
   256e4:	ldrd	r2, r3, [r3, #16]
   256e8:	strd	r2, r3, [sp, #80]	; 0x50
   256ec:	ldr	r3, [sp, #60]	; 0x3c
   256ee:	ldrd	r2, r3, [r3, #24]
   256f2:	strd	r2, r3, [sp, #88]	; 0x58
   256f6:	ldr.w	r3, [r6, #464]	; 0x1d0
   256fa:	ldr	r3, [r3, #24]
   256fc:	str	r3, [sp, #44]	; 0x2c
   256fe:	ldr.w	r3, [r3, #464]	; 0x1d0
   25702:	ldr.w	r2, [r3, #388]	; 0x184
   25706:	vmov	s16, r3
   2570a:	movs	r3, #0
   2570c:	cmp	fp, r3
   2570e:	it	eq
   25710:	cmpeq	sl, r2
   25712:	add.w	r2, r4, #628	; 0x274
   25716:	ite	cc
   25718:	movcc	r3, #1
   2571a:	movcs	r3, #0
   2571c:	str	r3, [sp, #0]
   2571e:	mov.w	r3, #2208	; 0x8a0
   25722:	bl	21b5c <btrfs_create_tree@@Base+0x358>
   25726:	movs	r3, #168	; 0xa8
   25728:	strb	r3, [r7, #8]
   2572a:	orrs.w	r3, r8, r9
   2572e:	beq.w	25b22 <btrfs_reserve_extent@@Base+0x55e>
   25732:	vmov	r0, s16
   25736:	mov	r2, r8
   25738:	mov	r3, r9
   2573a:	bl	222b8 <btrfs_lookup_first_block_group@@Base>
   2573e:	mov	r1, r0
   25740:	cbnz	r0, 2574a <btrfs_reserve_extent@@Base+0x186>
   25742:	mov.w	r8, #0
   25746:	mov.w	r9, #0
   2574a:	ldr	r3, [sp, #40]	; 0x28
   2574c:	mov	r2, r8
   2574e:	str	r3, [sp, #0]
   25750:	mov	r3, r9
   25752:	ldr	r0, [sp, #44]	; 0x2c
   25754:	ldr.w	r0, [r0, #464]	; 0x1d0
   25758:	bl	22648 <btrfs_lookup_block_group@@Base+0x30c>
   2575c:	ldr	r3, [sp, #172]	; 0xac
   2575e:	movs	r2, #0
   25760:	adds.w	r3, sl, r3
   25764:	str	r3, [sp, #112]	; 0x70
   25766:	movs	r3, #0
   25768:	strd	r2, r3, [sp, #24]
   2576c:	movs	r3, #0
   2576e:	str	r3, [sp, #56]	; 0x38
   25770:	str	r3, [sp, #100]	; 0x64
   25772:	ldr.w	r3, [pc, #1888]	; 25ed4 <btrfs_reserve_extent@@Base+0x910>
   25776:	add	r3, pc
   25778:	str	r3, [sp, #180]	; 0xb4
   2577a:	adds.w	r3, sl, #4294967295	; 0xffffffff
   2577e:	str	r3, [sp, #184]	; 0xb8
   25780:	adc.w	r3, fp, #4294967295	; 0xffffffff
   25784:	str	r3, [sp, #188]	; 0xbc
   25786:	mov	r4, r0
   25788:	ldr	r3, [sp, #44]	; 0x2c
   2578a:	movs	r2, #0
   2578c:	ldr	r1, [sp, #24]
   2578e:	ldr.w	r3, [r3, #464]	; 0x1d0
   25792:	ldr.w	r3, [r3, #392]	; 0x188
   25796:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2579a:	adc.w	r2, r2, #4294967295	; 0xffffffff
   2579e:	adds.w	r0, r1, #4294967295	; 0xffffffff
   257a2:	ldr	r1, [sp, #28]
   257a4:	orr.w	r3, r3, r0
   257a8:	adc.w	r1, r1, #4294967295	; 0xffffffff
   257ac:	adds	r3, #1
   257ae:	orr.w	r2, r2, r1
   257b2:	str	r3, [sp, #48]	; 0x30
   257b4:	adc.w	r3, r2, #0
   257b8:	str	r3, [sp, #52]	; 0x34
   257ba:	cbnz	r4, 257da <btrfs_reserve_extent@@Base+0x216>
   257bc:	vmov	r0, s16
   257c0:	ldrd	r2, r3, [sp, #48]	; 0x30
   257c4:	bl	222b8 <btrfs_lookup_first_block_group@@Base>
   257c8:	mov	r4, r0
   257ca:	cbnz	r0, 257da <btrfs_reserve_extent@@Base+0x216>
   257cc:	vmov	r0, s16
   257d0:	movs	r2, #0
   257d2:	movs	r3, #0
   257d4:	bl	222b8 <btrfs_lookup_first_block_group@@Base>
   257d8:	mov	r4, r0
   257da:	movs	r2, #0
   257dc:	movs	r3, #0
   257de:	ldr	r1, [sp, #112]	; 0x70
   257e0:	strd	r2, r3, [sp, #208]	; 0xd0
   257e4:	strd	r2, r3, [sp, #216]	; 0xd8
   257e8:	cmp	r4, #0
   257ea:	beq.w	25c2e <btrfs_reserve_extent@@Base+0x66a>
   257ee:	ldrd	r2, r3, [sp, #48]	; 0x30
   257f2:	strd	r2, r3, [sp, #24]
   257f6:	movs	r3, #0
   257f8:	mov	r2, r1
   257fa:	str	r3, [sp, #116]	; 0x74
   257fc:	asrs	r3, r1, #31
   257fe:	strd	r2, r3, [sp, #104]	; 0x68
   25802:	ldr	r3, [r4, #104]	; 0x68
   25804:	cmp	r3, #0
   25806:	bne.w	25990 <btrfs_reserve_extent@@Base+0x3cc>
   2580a:	ldr	r3, [sp, #44]	; 0x2c
   2580c:	ldr.w	r3, [r3, #464]	; 0x1d0
   25810:	ldr	r3, [r3, #24]
   25812:	str	r3, [sp, #96]	; 0x60
   25814:	ldr.w	r3, [r3, #464]	; 0x1d0
   25818:	mov	r9, r3
   2581a:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2581e:	mov	r6, r0
   25820:	cmp	r0, #0
   25822:	beq.w	25c36 <btrfs_reserve_extent@@Base+0x672>
   25826:	movs	r3, #2
   25828:	strb.w	r3, [r0, #64]	; 0x40
   2582c:	ldrd	r2, r3, [r4, #40]	; 0x28
   25830:	mov.w	r8, #0
   25834:	ldr	r1, [sp, #96]	; 0x60
   25836:	cmp	r3, #0
   25838:	strd	r8, r8, [sp]
   2583c:	it	eq
   2583e:	cmpeq.w	r2, #65536	; 0x10000
   25842:	strd	r2, r3, [sp, #32]
   25846:	strb.w	r8, [sp, #233]	; 0xe9
   2584a:	ittt	cc
   2584c:	movcc.w	r2, #65536	; 0x10000
   25850:	movcc	r3, #0
   25852:	strdcc	r2, r3, [sp, #32]
   25856:	ldrd	r2, r3, [sp, #32]
   2585a:	strb.w	r8, [sp, #234]	; 0xea
   2585e:	strb.w	r8, [sp, #235]	; 0xeb
   25862:	strd	r2, r3, [sp, #224]	; 0xe0
   25866:	add	r2, sp, #224	; 0xe0
   25868:	mov	r3, r0
   2586a:	mov	r0, r8
   2586c:	strb.w	r8, [sp, #236]	; 0xec
   25870:	strb.w	r8, [sp, #237]	; 0xed
   25874:	strb.w	r8, [sp, #238]	; 0xee
   25878:	strb.w	r8, [sp, #239]	; 0xef
   2587c:	strb.w	r8, [sp, #240]	; 0xf0
   25880:	strb.w	r8, [sp, #232]	; 0xe8
   25884:	str	r2, [sp, #176]	; 0xb0
   25886:	bl	1d6c0 <btrfs_search_slot@@Base>
   2588a:	cmp	r0, r8
   2588c:	blt.n	2598a <btrfs_reserve_extent@@Base+0x3c6>
   2588e:	ldr	r2, [sp, #176]	; 0xb0
   25890:	mov	r3, r9
   25892:	adds	r3, #96	; 0x60
   25894:	str.w	r8, [sp, #176]	; 0xb0
   25898:	vmov	s17, r3
   2589c:	vmov	s18, r2
   258a0:	ldr	r0, [r6, #0]
   258a2:	ldr	r2, [r6, #32]
   258a4:	ldr.w	r3, [r0, #192]	; 0xc0
   258a8:	cmp	r3, r2
   258aa:	bhi.w	25b30 <btrfs_reserve_extent@@Base+0x56c>
   258ae:	ldr	r3, [sp, #176]	; 0xb0
   258b0:	mov	r1, r6
   258b2:	strb.w	r3, [r6, #65]	; 0x41
   258b6:	ldr	r3, [sp, #96]	; 0x60
   258b8:	ldr.w	r0, [r3, #464]	; 0x1d0
   258bc:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   258c0:	cmp	r0, #0
   258c2:	blt.n	2598a <btrfs_reserve_extent@@Base+0x3c6>
   258c4:	beq.n	258a0 <btrfs_reserve_extent@@Base+0x2dc>
   258c6:	ldr.w	r3, [r4, #49]	; 0x31
   258ca:	ldrd	r1, r0, [r4, #40]	; 0x28
   258ce:	ldr.w	r2, [r4, #53]	; 0x35
   258d2:	adds	r3, r3, r1
   258d4:	str	r3, [sp, #72]	; 0x48
   258d6:	adc.w	r3, r2, r0
   258da:	str	r3, [sp, #76]	; 0x4c
   258dc:	ldrd	r0, r1, [sp, #72]	; 0x48
   258e0:	ldrd	r2, r3, [sp, #32]
   258e4:	cmp	r3, r1
   258e6:	it	eq
   258e8:	cmpeq	r2, r0
   258ea:	bcs.n	25908 <btrfs_reserve_extent@@Base+0x344>
   258ec:	ldr	r3, [sp, #72]	; 0x48
   258ee:	vmov	r0, s17
   258f2:	adds.w	r2, r3, #4294967295	; 0xffffffff
   258f6:	ldr	r3, [sp, #76]	; 0x4c
   258f8:	adc.w	r3, r3, #4294967295	; 0xffffffff
   258fc:	strd	r2, r3, [sp]
   25900:	ldrd	r2, r3, [sp, #32]
   25904:	bl	19f6c <set_extent_dirty@@Base>
   25908:	ldr	r1, [sp, #180]	; 0xb4
   2590a:	mov.w	r8, #12
   2590e:	ldr	r3, [sp, #96]	; 0x60
   25910:	mov.w	r2, #65536	; 0x10000
   25914:	addw	r1, r1, #645	; 0x285
   25918:	vmov	s18, r1
   2591c:	ldr.w	r1, [pc, #1464]	; 25ed8 <btrfs_reserve_extent@@Base+0x914>
   25920:	ldr.w	r9, [r3, #464]	; 0x1d0
   25924:	add	r1, pc
   25926:	add.w	r3, r9, #96	; 0x60
   2592a:	vmov	s19, r1
   2592e:	ldr.w	r1, [pc, #1452]	; 25edc <btrfs_reserve_extent@@Base+0x918>
   25932:	vmov	s17, r3
   25936:	movs	r3, #0
   25938:	add	r1, pc
   2593a:	vmov	s20, r1
   2593e:	add	r1, sp, #200	; 0xc8
   25940:	strd	r2, r3, [sp]
   25944:	str	r1, [sp, #16]
   25946:	mov	r0, r9
   25948:	add	r1, sp, #204	; 0xcc
   2594a:	str	r1, [sp, #12]
   2594c:	add	r1, sp, #196	; 0xc4
   2594e:	str	r1, [sp, #8]
   25950:	ldrd	r2, r3, [r4, #40]	; 0x28
   25954:	bl	2cb86 <btrfs_rmap_block@@Base>
   25958:	vmov	r2, s18
   2595c:	vmov	r1, s19
   25960:	movs	r3, #71	; 0x47
   25962:	str	r0, [sp, #0]
   25964:	vmov	r0, s20
   25968:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2596c:	ldr	r3, [sp, #204]	; 0xcc
   2596e:	ldr	r0, [sp, #196]	; 0xc4
   25970:	subs	r2, r3, #1
   25972:	str	r2, [sp, #204]	; 0xcc
   25974:	cmp	r3, #0
   25976:	bne.w	25bf8 <btrfs_reserve_extent@@Base+0x634>
   2597a:	blx	87cc <free@plt+0x4>
   2597e:	cmp.w	r8, #36	; 0x24
   25982:	bne.w	25bd8 <btrfs_reserve_extent@@Base+0x614>
   25986:	movs	r3, #1
   25988:	str	r3, [r4, #104]	; 0x68
   2598a:	mov	r0, r6
   2598c:	bl	1b302 <btrfs_free_path@@Base>
   25990:	ldr	r3, [r4, #108]	; 0x6c
   25992:	cmp	r3, #0
   25994:	bne.w	25cb2 <btrfs_reserve_extent@@Base+0x6ee>
   25998:	ldr	r2, [sp, #40]	; 0x28
   2599a:	ldrd	r3, r1, [r4, #96]	; 0x60
   2599e:	mov.w	r9, r2, asr #31
   259a2:	ands	r3, r2
   259a4:	and.w	r1, r9, r1
   259a8:	str	r3, [sp, #128]	; 0x80
   259aa:	str	r1, [sp, #132]	; 0x84
   259ac:	ldrd	r0, r1, [sp, #128]	; 0x80
   259b0:	cmp	r9, r1
   259b2:	it	eq
   259b4:	cmpeq	r2, r0
   259b6:	bne.w	25cb2 <btrfs_reserve_extent@@Base+0x6ee>
   259ba:	ldrd	r2, r3, [r4, #40]	; 0x28
   259be:	movs	r6, #1
   259c0:	strd	r2, r3, [sp, #32]
   259c4:	ldrd	r0, r1, [sp, #32]
   259c8:	ldrd	r2, r3, [sp, #48]	; 0x30
   259cc:	cmp	r1, r3
   259ce:	it	eq
   259d0:	cmpeq	r0, r2
   259d2:	it	cc
   259d4:	strdcc	r2, r3, [sp, #32]
   259d8:	add	r3, sp, #216	; 0xd8
   259da:	str	r3, [sp, #96]	; 0x60
   259dc:	ldr	r3, [sp, #44]	; 0x2c
   259de:	ldr.w	r0, [r3, #464]	; 0x1d0
   259e2:	ldr	r3, [sp, #96]	; 0x60
   259e4:	adds	r0, #96	; 0x60
   259e6:	str	r6, [sp, #8]
   259e8:	str	r3, [sp, #4]
   259ea:	add	r3, sp, #208	; 0xd0
   259ec:	str	r3, [sp, #0]
   259ee:	ldrd	r2, r3, [sp, #32]
   259f2:	bl	19f9c <find_first_extent_bit@@Base>
   259f6:	cmp	r0, #0
   259f8:	bne.w	25cb2 <btrfs_reserve_extent@@Base+0x6ee>
   259fc:	ldrd	r0, r1, [sp, #32]
   25a00:	ldrd	r2, r3, [sp, #208]	; 0xd0
   25a04:	ldrd	r8, r9, [sp, #104]	; 0x68
   25a08:	cmp	r3, r1
   25a0a:	it	eq
   25a0c:	cmpeq	r2, r0
   25a0e:	it	cc
   25a10:	movcc	r3, r1
   25a12:	ldr	r1, [sp, #216]	; 0xd8
   25a14:	it	cc
   25a16:	movcc	r2, r0
   25a18:	strd	r2, r3, [sp, #208]	; 0xd0
   25a1c:	adds	r1, #1
   25a1e:	str	r1, [sp, #32]
   25a20:	ldr	r1, [sp, #220]	; 0xdc
   25a22:	adc.w	r1, r1, #0
   25a26:	str	r1, [sp, #36]	; 0x24
   25a28:	ldr	r1, [sp, #32]
   25a2a:	subs	r1, r1, r2
   25a2c:	str	r1, [sp, #136]	; 0x88
   25a2e:	ldr	r1, [sp, #36]	; 0x24
   25a30:	sbc.w	r1, r1, r3
   25a34:	str	r1, [sp, #140]	; 0x8c
   25a36:	ldrd	r0, r1, [sp, #136]	; 0x88
   25a3a:	cmp	r1, r9
   25a3c:	it	eq
   25a3e:	cmpeq	r0, r8
   25a40:	bcc.n	259dc <btrfs_reserve_extent@@Base+0x418>
   25a42:	ldr	r1, [sp, #104]	; 0x68
   25a44:	adds	r1, r2, r1
   25a46:	str	r1, [sp, #144]	; 0x90
   25a48:	ldr	r1, [sp, #108]	; 0x6c
   25a4a:	adc.w	r1, r3, r1
   25a4e:	str	r1, [sp, #148]	; 0x94
   25a50:	ldrd	r1, r0, [r4, #40]	; 0x28
   25a54:	ldr.w	r6, [r4, #49]	; 0x31
   25a58:	ldr.w	ip, [r4, #53]	; 0x35
   25a5c:	adds	r1, r6, r1
   25a5e:	str	r1, [sp, #152]	; 0x98
   25a60:	adc.w	r1, ip, r0
   25a64:	str	r1, [sp, #156]	; 0x9c
   25a66:	ldrd	r0, r1, [sp, #152]	; 0x98
   25a6a:	ldrd	r8, r9, [sp, #144]	; 0x90
   25a6e:	cmp	r1, r9
   25a70:	it	eq
   25a72:	cmpeq	r0, r8
   25a74:	bcc.w	25cb2 <btrfs_reserve_extent@@Base+0x6ee>
   25a78:	adds.w	r1, sl, r2
   25a7c:	str	r2, [r7, #0]
   25a7e:	str	r1, [sp, #64]	; 0x40
   25a80:	adc.w	r1, fp, r3
   25a84:	str	r3, [r7, #4]
   25a86:	str.w	sl, [r7, #9]
   25a8a:	str.w	fp, [r7, #13]
   25a8e:	str	r1, [sp, #68]	; 0x44
   25a90:	ldr.w	r0, [r4, #53]	; 0x35
   25a94:	ldr.w	r1, [r4, #49]	; 0x31
   25a98:	ldrd	r6, r4, [r4, #40]	; 0x28
   25a9c:	ldrd	r8, r9, [sp, #64]	; 0x40
   25aa0:	adds	r1, r1, r6
   25aa2:	str	r1, [sp, #24]
   25aa4:	adc.w	r1, r0, r4
   25aa8:	str	r1, [sp, #28]
   25aaa:	ldrd	r0, r1, [sp, #24]
   25aae:	cmp	r1, r9
   25ab0:	it	eq
   25ab2:	cmpeq	r0, r8
   25ab4:	bcc.w	25c60 <btrfs_reserve_extent@@Base+0x69c>
   25ab8:	movs	r1, #8
   25aba:	movs	r0, #0
   25abc:	strd	r1, r0, [sp, #8]
   25ac0:	ldr	r1, [sp, #64]	; 0x40
   25ac2:	adds.w	r0, r1, #4294967295	; 0xffffffff
   25ac6:	ldr	r1, [sp, #68]	; 0x44
   25ac8:	adc.w	r1, r1, #4294967295	; 0xffffffff
   25acc:	strd	r0, r1, [sp]
   25ad0:	vmov	r1, s16
   25ad4:	add.w	r0, r1, #192	; 0xc0
   25ad8:	bl	19fde <test_range_bit@@Base>
   25adc:	cmp	r0, #0
   25ade:	beq.w	25cf2 <btrfs_reserve_extent@@Base+0x72e>
   25ae2:	ldr	r3, [r7, #0]
   25ae4:	ldr	r2, [r7, #4]
   25ae6:	adds.w	r3, r3, sl
   25aea:	str	r3, [sp, #24]
   25aec:	adc.w	r3, r2, fp
   25af0:	str	r3, [sp, #28]
   25af2:	b.n	25c60 <btrfs_reserve_extent@@Base+0x69c>
   25af4:	ldrb.w	r3, [r5, #364]	; 0x16c
   25af8:	lsls	r4, r3, #31
   25afa:	bmi.n	25b02 <btrfs_reserve_extent@@Base+0x53e>
   25afc:	ldr	r3, [r5, #32]
   25afe:	cmp	r3, r6
   25b00:	bne.n	25b12 <btrfs_reserve_extent@@Base+0x54e>
   25b02:	ldrd	r3, r4, [r5, #264]	; 0x108
   25b06:	ldrd	r1, r2, [r5, #288]	; 0x120
   25b0a:	ands	r3, r1
   25b0c:	orr.w	r3, r3, #2
   25b10:	b.n	25618 <btrfs_reserve_extent@@Base+0x54>
   25b12:	ldrd	r3, r4, [r5, #256]	; 0x100
   25b16:	ldrd	r1, r2, [r5, #280]	; 0x118
   25b1a:	ands	r3, r1
   25b1c:	orr.w	r3, r3, #4
   25b20:	b.n	25618 <btrfs_reserve_extent@@Base+0x54>
   25b22:	ldr	r3, [sp, #40]	; 0x28
   25b24:	mov	r2, r8
   25b26:	ldr	r1, [sp, #60]	; 0x3c
   25b28:	str	r3, [sp, #0]
   25b2a:	mov	r3, r9
   25b2c:	ldr	r1, [r1, #56]	; 0x38
   25b2e:	b.n	25752 <btrfs_reserve_extent@@Base+0x18e>
   25b30:	vmov	r1, s18
   25b34:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   25b38:	ldrd	r8, r9, [sp, #224]	; 0xe0
   25b3c:	ldrd	r0, r1, [r4, #40]	; 0x28
   25b40:	cmp	r9, r1
   25b42:	it	eq
   25b44:	cmpeq	r8, r0
   25b46:	bcc.n	25bbc <btrfs_reserve_extent@@Base+0x5f8>
   25b48:	ldr.w	ip, [r4, #49]	; 0x31
   25b4c:	ldr.w	lr, [r4, #53]	; 0x35
   25b50:	adds.w	r3, ip, r0
   25b54:	str	r3, [sp, #120]	; 0x78
   25b56:	adc.w	r3, lr, r1
   25b5a:	str	r3, [sp, #124]	; 0x7c
   25b5c:	ldrd	r2, r3, [sp, #120]	; 0x78
   25b60:	cmp	r9, r3
   25b62:	it	eq
   25b64:	cmpeq	r8, r2
   25b66:	bcs.w	258c6 <btrfs_reserve_extent@@Base+0x302>
   25b6a:	ldrb.w	r1, [sp, #232]	; 0xe8
   25b6e:	adds	r1, #88	; 0x58
   25b70:	uxtb	r1, r1
   25b72:	cmp	r1, #1
   25b74:	bhi.n	25bbc <btrfs_reserve_extent@@Base+0x5f8>
   25b76:	ldrd	r2, r3, [sp, #32]
   25b7a:	cmp	r3, r9
   25b7c:	it	eq
   25b7e:	cmpeq	r2, r8
   25b80:	bcs.n	25b9a <btrfs_reserve_extent@@Base+0x5d6>
   25b82:	adds.w	r2, r8, #4294967295	; 0xffffffff
   25b86:	vmov	r0, s17
   25b8a:	adc.w	r3, r9, #4294967295	; 0xffffffff
   25b8e:	strd	r2, r3, [sp]
   25b92:	ldrd	r2, r3, [sp, #32]
   25b96:	bl	19f6c <set_extent_dirty@@Base>
   25b9a:	ldrb.w	r1, [sp, #232]	; 0xe8
   25b9e:	ldrd	r2, r3, [sp, #224]	; 0xe0
   25ba2:	cmp	r1, #169	; 0xa9
   25ba4:	bne.n	25bc4 <btrfs_reserve_extent@@Base+0x600>
   25ba6:	ldr	r1, [sp, #96]	; 0x60
   25ba8:	ldr.w	r1, [r1, #464]	; 0x1d0
   25bac:	ldr.w	r1, [r1, #384]	; 0x180
   25bb0:	adds.w	r8, r2, r1
   25bb4:	adc.w	r9, r3, #0
   25bb8:	strd	r8, r9, [sp, #32]
   25bbc:	ldr	r3, [r6, #32]
   25bbe:	adds	r3, #1
   25bc0:	str	r3, [r6, #32]
   25bc2:	b.n	258a0 <btrfs_reserve_extent@@Base+0x2dc>
   25bc4:	ldr.w	r1, [sp, #233]	; 0xe9
   25bc8:	ldr.w	r0, [sp, #237]	; 0xed
   25bcc:	adds	r1, r1, r2
   25bce:	str	r1, [sp, #32]
   25bd0:	adc.w	r3, r0, r3
   25bd4:	str	r3, [sp, #36]	; 0x24
   25bd6:	b.n	25bbc <btrfs_reserve_extent@@Base+0x5f8>
   25bd8:	mov.w	r2, #16384	; 0x4000
   25bdc:	sub.w	r3, r8, #32
   25be0:	rsb	r1, r8, #32
   25be4:	lsl.w	r3, r2, r3
   25be8:	lsr.w	r1, r2, r1
   25bec:	lsl.w	r2, r2, r8
   25bf0:	orrs	r3, r1
   25bf2:	add.w	r8, r8, #12
   25bf6:	b.n	2593e <btrfs_reserve_extent@@Base+0x37a>
   25bf8:	add.w	r0, r0, r2, lsl #3
   25bfc:	ldrd	ip, r3, [r0]
   25c00:	ldr	r0, [sp, #200]	; 0xc8
   25c02:	asrs	r2, r0, #31
   25c04:	mov	r1, r0
   25c06:	strd	r1, r2, [sp, #32]
   25c0a:	mov	r2, ip
   25c0c:	ldr	r1, [sp, #32]
   25c0e:	adds.w	r0, r1, #4294967295	; 0xffffffff
   25c12:	ldr	r1, [sp, #36]	; 0x24
   25c14:	adc.w	r1, r1, #4294967295	; 0xffffffff
   25c18:	adds.w	r0, r0, ip
   25c1c:	adc.w	r1, r3, r1
   25c20:	strd	r0, r1, [sp]
   25c24:	vmov	r0, s17
   25c28:	bl	19f84 <clear_extent_dirty@@Base>
   25c2c:	b.n	2596c <btrfs_reserve_extent@@Base+0x3a8>
   25c2e:	ldrd	r3, r4, [sp, #48]	; 0x30
   25c32:	strd	r3, r4, [sp, #24]
   25c36:	ldr	r1, [sp, #44]	; 0x2c
   25c38:	ldrd	r2, r3, [sp, #48]	; 0x30
   25c3c:	ldr.w	r0, [r1, #464]	; 0x1d0
   25c40:	bl	2233c <btrfs_lookup_block_group@@Base>
   25c44:	cbnz	r0, 25c60 <btrfs_reserve_extent@@Base+0x69c>
   25c46:	ldr	r2, [sp, #168]	; 0xa8
   25c48:	ldr	r3, [pc, #660]	; (25ee0 <btrfs_reserve_extent@@Base+0x91c>)
   25c4a:	ldr	r3, [r2, r3]
   25c4c:	ldrd	r1, r2, [sp, #48]	; 0x30
   25c50:	strd	r1, r2, [sp]
   25c54:	movs	r1, #1
   25c56:	ldr	r2, [pc, #652]	; (25ee4 <btrfs_reserve_extent@@Base+0x920>)
   25c58:	ldr	r0, [r3, #0]
   25c5a:	add	r2, pc
   25c5c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   25c60:	vmov	r0, s16
   25c64:	ldrd	r2, r3, [sp, #24]
   25c68:	bl	222b8 <btrfs_lookup_first_block_group@@Base>
   25c6c:	mov	r1, r0
   25c6e:	cmp	r0, #0
   25c70:	bne.w	25e7c <btrfs_reserve_extent@@Base+0x8b8>
   25c74:	ldr	r3, [sp, #100]	; 0x64
   25c76:	cmp	r3, #0
   25c78:	bne.w	25e90 <btrfs_reserve_extent@@Base+0x8cc>
   25c7c:	ldr	r3, [sp, #56]	; 0x38
   25c7e:	cmp	r3, #0
   25c80:	beq.w	25e84 <btrfs_reserve_extent@@Base+0x8c0>
   25c84:	ldr	r6, [sp, #56]	; 0x38
   25c86:	movs	r4, #0
   25c88:	ldr	r3, [sp, #112]	; 0x70
   25c8a:	ldr	r2, [sp, #172]	; 0xac
   25c8c:	subs	r3, r3, r2
   25c8e:	str	r3, [sp, #112]	; 0x70
   25c90:	movs	r3, #0
   25c92:	strd	r3, r4, [sp, #24]
   25c96:	ldr	r3, [sp, #40]	; 0x28
   25c98:	ldr	r0, [sp, #44]	; 0x2c
   25c9a:	str	r3, [sp, #0]
   25c9c:	ldrd	r2, r3, [sp, #24]
   25ca0:	ldr.w	r0, [r0, #464]	; 0x1d0
   25ca4:	bl	22648 <btrfs_lookup_block_group@@Base+0x30c>
   25ca8:	ldr	r3, [sp, #56]	; 0x38
   25caa:	str	r6, [sp, #56]	; 0x38
   25cac:	str	r3, [sp, #100]	; 0x64
   25cae:	mov	r4, r0
   25cb0:	b.n	25788 <btrfs_reserve_extent@@Base+0x1c4>
   25cb2:	ldr.w	r3, [r4, #49]	; 0x31
   25cb6:	ldrd	r1, r0, [r4, #40]	; 0x28
   25cba:	ldr.w	r2, [r4, #53]	; 0x35
   25cbe:	adds	r3, r3, r1
   25cc0:	str	r3, [sp, #24]
   25cc2:	adc.w	r3, r2, r0
   25cc6:	str	r3, [sp, #28]
   25cc8:	ldr	r1, [sp, #44]	; 0x2c
   25cca:	ldrd	r2, r3, [sp, #24]
   25cce:	ldr.w	r0, [r1, #464]	; 0x1d0
   25cd2:	bl	222b8 <btrfs_lookup_first_block_group@@Base>
   25cd6:	mov	r4, r0
   25cd8:	cmp	r0, #0
   25cda:	bne.w	25802 <btrfs_reserve_extent@@Base+0x23e>
   25cde:	ldr	r3, [sp, #116]	; 0x74
   25ce0:	cmp	r3, #0
   25ce2:	bne.n	25c36 <btrfs_reserve_extent@@Base+0x672>
   25ce4:	movs	r3, #1
   25ce6:	str	r3, [sp, #116]	; 0x74
   25ce8:	ldrd	r3, r4, [sp, #48]	; 0x30
   25cec:	strd	r3, r4, [sp, #24]
   25cf0:	b.n	25cc8 <btrfs_reserve_extent@@Base+0x704>
   25cf2:	ldr	r2, [r7, #0]
   25cf4:	movs	r6, #1
   25cf6:	ldr	r3, [r7, #4]
   25cf8:	adds.w	r1, r2, #4294967295	; 0xffffffff
   25cfc:	str	r0, [sp, #12]
   25cfe:	adc.w	r0, r3, #4294967295	; 0xffffffff
   25d02:	adds.w	r1, r1, sl
   25d06:	adc.w	r0, r0, fp
   25d0a:	strd	r1, r0, [sp]
   25d0e:	vmov	r1, s16
   25d12:	str	r6, [sp, #8]
   25d14:	add.w	r0, r1, #160	; 0xa0
   25d18:	bl	19fde <test_range_bit@@Base>
   25d1c:	mov	r4, r0
   25d1e:	cmp	r0, #0
   25d20:	bne.w	25ae2 <btrfs_reserve_extent@@Base+0x51e>
   25d24:	vmov	r3, s16
   25d28:	ldr.w	r0, [r3, #224]	; 0xe0
   25d2c:	cbz	r0, 25d54 <btrfs_reserve_extent@@Base+0x790>
   25d2e:	ldr	r2, [r7, #0]
   25d30:	ldr	r3, [r7, #4]
   25d32:	adds.w	r1, r2, #4294967295	; 0xffffffff
   25d36:	strd	r6, r4, [sp, #8]
   25d3a:	adc.w	r6, r3, #4294967295	; 0xffffffff
   25d3e:	adds.w	r1, r1, sl
   25d42:	adc.w	r6, r6, fp
   25d46:	strd	r1, r6, [sp]
   25d4a:	bl	19fde <test_range_bit@@Base>
   25d4e:	cmp	r0, #0
   25d50:	bne.w	25ae2 <btrfs_reserve_extent@@Base+0x51e>
   25d54:	ldrd	r2, r3, [sp, #88]	; 0x58
   25d58:	ldr.w	r8, [r7]
   25d5c:	orrs	r3, r2
   25d5e:	ldr.w	r9, [r7, #4]
   25d62:	beq.n	25d9e <btrfs_reserve_extent@@Base+0x7da>
   25d64:	adds.w	r3, sl, r8
   25d68:	str	r3, [sp, #160]	; 0xa0
   25d6a:	adc.w	r3, fp, r9
   25d6e:	str	r3, [sp, #164]	; 0xa4
   25d70:	ldrd	r0, r1, [sp, #160]	; 0xa0
   25d74:	ldrd	r2, r3, [sp, #80]	; 0x50
   25d78:	cmp	r3, r1
   25d7a:	it	eq
   25d7c:	cmpeq	r2, r0
   25d7e:	bcs.n	25d9e <btrfs_reserve_extent@@Base+0x7da>
   25d80:	ldr	r2, [sp, #88]	; 0x58
   25d82:	ldr	r3, [sp, #80]	; 0x50
   25d84:	adds	r3, r3, r2
   25d86:	ldr	r2, [sp, #92]	; 0x5c
   25d88:	str	r3, [sp, #24]
   25d8a:	ldr	r3, [sp, #84]	; 0x54
   25d8c:	adcs	r3, r2
   25d8e:	str	r3, [sp, #28]
   25d90:	ldrd	r2, r3, [sp, #24]
   25d94:	cmp	r9, r3
   25d96:	it	eq
   25d98:	cmpeq	r8, r2
   25d9a:	bcc.w	25c60 <btrfs_reserve_extent@@Base+0x69c>
   25d9e:	ldr	r3, [sp, #40]	; 0x28
   25da0:	lsls	r3, r3, #31
   25da2:	bmi.n	25e40 <btrfs_reserve_extent@@Base+0x87c>
   25da4:	vmov	r0, s16
   25da8:	mov	r2, r8
   25daa:	mov	r3, r9
   25dac:	bl	2233c <btrfs_lookup_block_group@@Base>
   25db0:	cmp	r0, #0
   25db2:	beq.n	25e2e <btrfs_reserve_extent@@Base+0x86a>
   25db4:	ldrd	r3, r6, [r0, #40]	; 0x28
   25db8:	ldr	r1, [sp, #184]	; 0xb8
   25dba:	subs.w	ip, r8, r3
   25dbe:	ldr	r2, [r7, #0]
   25dc0:	sbc.w	r6, r9, r6
   25dc4:	ldr	r3, [r7, #4]
   25dc6:	mov.w	r8, ip, lsr #16
   25dca:	adds.w	ip, r1, ip
   25dce:	ldr	r1, [sp, #188]	; 0xbc
   25dd0:	orr.w	r8, r8, r6, lsl #16
   25dd4:	mov.w	r9, r6, lsr #16
   25dd8:	mov.w	r0, ip, lsr #16
   25ddc:	adc.w	r6, r1, r6
   25de0:	lsrs	r1, r6, #16
   25de2:	orr.w	r0, r0, r6, lsl #16
   25de6:	cmp	r9, r1
   25de8:	it	eq
   25dea:	cmpeq	r8, r0
   25dec:	beq.n	25e2e <btrfs_reserve_extent@@Base+0x86a>
   25dee:	vmov	r0, s16
   25df2:	bl	2233c <btrfs_lookup_block_group@@Base>
   25df6:	cbz	r0, 25e2e <btrfs_reserve_extent@@Base+0x86a>
   25df8:	ldr	r3, [r7, #0]
   25dfa:	ldrd	r2, r1, [r0, #40]	; 0x28
   25dfe:	ldr	r0, [r7, #4]
   25e00:	adds.w	r3, r3, #4294967295	; 0xffffffff
   25e04:	adc.w	r0, r0, #4294967295	; 0xffffffff
   25e08:	adds.w	r3, r3, sl
   25e0c:	adc.w	r0, r0, fp
   25e10:	subs	r3, r3, r2
   25e12:	sbc.w	r0, r0, r1
   25e16:	adds	r2, #1
   25e18:	mvn.w	r3, r3, lsr #16
   25e1c:	adc.w	r1, r1, #0
   25e20:	mvn.w	r3, r3, lsl #16
   25e24:	adds	r3, r3, r2
   25e26:	str	r3, [sp, #24]
   25e28:	adc.w	r3, r0, r1
   25e2c:	b.n	25af0 <btrfs_reserve_extent@@Base+0x52c>
   25e2e:	vmov	r0, s16
   25e32:	ldr	r2, [r7, #0]
   25e34:	ldr	r3, [r7, #4]
   25e36:	bl	2233c <btrfs_lookup_block_group@@Base>
   25e3a:	cbz	r0, 25e40 <btrfs_reserve_extent@@Base+0x87c>
   25e3c:	ldr	r3, [sp, #60]	; 0x3c
   25e3e:	str	r0, [r3, #56]	; 0x38
   25e40:	ldr	r2, [r7, #0]
   25e42:	ldr	r3, [r7, #4]
   25e44:	adds.w	r1, r2, #4294967295	; 0xffffffff
   25e48:	str.w	sl, [r7, #9]
   25e4c:	adc.w	r0, r3, #4294967295	; 0xffffffff
   25e50:	adds.w	r1, r1, sl
   25e54:	adc.w	r0, r0, fp
   25e58:	str.w	fp, [r7, #13]
   25e5c:	strd	r1, r0, [sp]
   25e60:	add.w	r0, r5, #96	; 0x60
   25e64:	bl	19f84 <clear_extent_dirty@@Base>
   25e68:	ldr	r2, [pc, #124]	; (25ee8 <btrfs_reserve_extent@@Base+0x924>)
   25e6a:	ldr	r3, [pc, #64]	; (25eac <btrfs_reserve_extent@@Base+0x8e8>)
   25e6c:	add	r2, pc
   25e6e:	ldr	r3, [r2, r3]
   25e70:	ldr	r2, [r3, #0]
   25e72:	ldr	r3, [sp, #244]	; 0xf4
   25e74:	eors	r2, r3
   25e76:	beq.n	25e96 <btrfs_reserve_extent@@Base+0x8d2>
   25e78:	blx	88e4 <__stack_chk_fail@plt>
   25e7c:	ldr	r3, [sp, #100]	; 0x64
   25e7e:	ldr	r6, [sp, #56]	; 0x38
   25e80:	str	r3, [sp, #56]	; 0x38
   25e82:	b.n	25c96 <btrfs_reserve_extent@@Base+0x6d2>
   25e84:	movs	r3, #0
   25e86:	movs	r4, #0
   25e88:	movs	r6, #1
   25e8a:	strd	r3, r4, [sp, #24]
   25e8e:	b.n	25c96 <btrfs_reserve_extent@@Base+0x6d2>
   25e90:	mvn.w	r4, #27
   25e94:	b.n	25e68 <btrfs_reserve_extent@@Base+0x8a4>
   25e96:	mov	r0, r4
   25e98:	add	sp, #252	; 0xfc
   25e9a:	vpop	{d8-d10}
   25e9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ea2:	nop
   25ea4:	adds	r7, #86	; 0x56
   25ea6:	movs	r4, r0
   25ea8:	adds	r7, #82	; 0x52
   25eaa:	movs	r4, r0
   25eac:	lsls	r4, r7, #9
   25eae:	movs	r0, r0
   25eb0:	ldmia	r4, {r0, r1, r2, r4, r7}
   25eb2:	movs	r1, r0
   25eb4:	stmia	r5!, {r0, r4, r5, r6}
   25eb6:	movs	r1, r0
   25eb8:	str	r2, [sp, #68]	; 0x44
   25eba:	movs	r1, r0
   25ebc:	ldmia	r4!, {r0, r5, r6}
   25ebe:	movs	r1, r0
   25ec0:	stmia	r5!, {r0, r1, r3, r4, r5}
   25ec2:	movs	r1, r0
   25ec4:	str	r1, [sp, #876]	; 0x36c
   25ec6:	movs	r1, r0
   25ec8:	ldmia	r4, {r0, r2, r4, r5}
   25eca:	movs	r1, r0
   25ecc:	stmia	r5!, {r0, r2, r3}
   25ece:	movs	r1, r0
   25ed0:	ldmia	r2!, {r6, r7}
   25ed2:	movs	r1, r0
   25ed4:	ldmia	r3, {r0, r1, r2, r3, r4, r5, r6}
   25ed6:	movs	r1, r0
   25ed8:	stmia	r2!, {r0, r4, r5, r7}
   25eda:	movs	r1, r0
   25edc:	ldrh	r5, [r0, #58]	; 0x3a
   25ede:	movs	r1, r0
   25ee0:	lsls	r4, r1, #10
   25ee2:	movs	r0, r0
   25ee4:	stmia	r5!, {r0, r2, r3, r6}
   25ee6:	movs	r1, r0
   25ee8:	cmp	r6, #196	; 0xc4
   25eea:	movs	r4, r0

00025eec <btrfs_alloc_free_block@@Base>:
   25eec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25ef0:	mov	r4, r2
   25ef2:	ldr	r2, [pc, #600]	; (2614c <btrfs_alloc_free_block@@Base+0x260>)
   25ef4:	sub	sp, #84	; 0x54
   25ef6:	ldr	r3, [pc, #600]	; (26150 <btrfs_alloc_free_block@@Base+0x264>)
   25ef8:	mov	r7, r0
   25efa:	add	r2, pc
   25efc:	ldr.w	r8, [r1, #464]	; 0x1d0
   25f00:	movs	r0, #32
   25f02:	ldrd	r9, sl, [sp, #128]	; 0x80
   25f06:	ldr	r3, [r2, r3]
   25f08:	mov	r6, r1
   25f0a:	mov.w	fp, #0
   25f0e:	ldr	r3, [r3, #0]
   25f10:	str	r3, [sp, #76]	; 0x4c
   25f12:	mov.w	r3, #0
   25f16:	ldr.w	r3, [r8, #308]	; 0x134
   25f1a:	ldr.w	r2, [r3, #188]	; 0xbc
   25f1e:	str	r2, [sp, #48]	; 0x30
   25f20:	ldr.w	r3, [r3, #192]	; 0xc0
   25f24:	str	r3, [sp, #52]	; 0x34
   25f26:	blx	8a94 <malloc@plt+0x4>
   25f2a:	mov	r5, r0
   25f2c:	cmp	r0, #0
   25f2e:	beq.w	26130 <btrfs_alloc_free_block@@Base+0x244>
   25f32:	mov	r0, r8
   25f34:	movs	r2, #4
   25f36:	movs	r3, #0
   25f38:	bl	219cc <btrfs_create_tree@@Base+0x1c8>
   25f3c:	mov	r8, r0
   25f3e:	cbnz	r0, 25f84 <btrfs_alloc_free_block@@Base+0x98>
   25f40:	ldr	r0, [pc, #528]	; (26154 <btrfs_alloc_free_block@@Base+0x268>)
   25f42:	mvn.w	r4, #116	; 0x74
   25f46:	add	r0, pc
   25f48:	bl	1a900 <__btrfs_error@@Base>
   25f4c:	ldr	r2, [pc, #520]	; (26158 <btrfs_alloc_free_block@@Base+0x26c>)
   25f4e:	cmp	r4, #0
   25f50:	ldr	r1, [pc, #520]	; (2615c <btrfs_alloc_free_block@@Base+0x270>)
   25f52:	ldr	r0, [pc, #524]	; (26160 <btrfs_alloc_free_block@@Base+0x274>)
   25f54:	add	r2, pc
   25f56:	ite	le
   25f58:	movle	r3, #0
   25f5a:	movgt	r3, #1
   25f5c:	addw	r2, r2, #683	; 0x2ab
   25f60:	str	r3, [sp, #0]
   25f62:	add	r1, pc
   25f64:	add	r0, pc
   25f66:	movw	r3, #2559	; 0x9ff
   25f6a:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   25f6e:	ldr	r2, [pc, #500]	; (26164 <btrfs_alloc_free_block@@Base+0x278>)
   25f70:	ldr	r3, [pc, #476]	; (26150 <btrfs_alloc_free_block@@Base+0x264>)
   25f72:	add	r2, pc
   25f74:	ldr	r3, [r2, r3]
   25f76:	ldr	r2, [r3, #0]
   25f78:	ldr	r3, [sp, #76]	; 0x4c
   25f7a:	eors	r2, r3
   25f7c:	beq.w	26142 <btrfs_alloc_free_block@@Base+0x256>
   25f80:	blx	88e4 <__stack_chk_fail@plt>
   25f84:	add	r3, sp, #56	; 0x38
   25f86:	mov.w	r2, #4294967295	; 0xffffffff
   25f8a:	str	r3, [sp, #24]
   25f8c:	mov.w	r3, #4294967295	; 0xffffffff
   25f90:	strd	r2, r3, [sp, #16]
   25f94:	mov	r1, r6
   25f96:	ldrd	r2, r3, [sp, #136]	; 0x88
   25f9a:	mov	r0, r7
   25f9c:	str.w	fp, [sp, #28]
   25fa0:	strd	r2, r3, [sp, #8]
   25fa4:	ldrd	r2, r3, [sp, #144]	; 0x90
   25fa8:	strd	r2, r3, [sp]
   25fac:	mov	r2, r4
   25fae:	mov	r3, fp
   25fb0:	bl	255c4 <btrfs_reserve_extent@@Base>
   25fb4:	subs	r4, r0, #0
   25fb6:	blt.n	25f4c <btrfs_alloc_free_block@@Base+0x60>
   25fb8:	cmp.w	r9, #0
   25fbc:	beq.w	26124 <btrfs_alloc_free_block@@Base+0x238>
   25fc0:	add.w	r2, r9, #16
   25fc4:	mov	r3, r5
   25fc6:	ldr.w	r1, [r9], #4
   25fca:	cmp	r9, r2
   25fcc:	str.w	r1, [r3], #4
   25fd0:	bne.n	25fc6 <btrfs_alloc_free_block@@Base+0xda>
   25fd2:	ldrb.w	r2, [r9]
   25fd6:	strb	r2, [r3, #0]
   25fd8:	movs	r2, #0
   25fda:	movs	r3, #0
   25fdc:	strd	r2, r3, [r5, #24]
   25fe0:	movs	r1, #0
   25fe2:	ldr	r3, [sp, #48]	; 0x30
   25fe4:	ldr	r2, [sp, #52]	; 0x34
   25fe6:	strb	r1, [r5, #20]
   25fe8:	lsrs	r3, r3, #8
   25fea:	strb.w	sl, [r5, #17]
   25fee:	orr.w	r3, r3, r2, lsl #24
   25ff2:	eor.w	r3, r3, #1
   25ff6:	and.w	r3, r3, #1
   25ffa:	strb	r3, [r5, #18]
   25ffc:	movs	r3, #1
   25ffe:	strb	r3, [r5, #19]
   26000:	ldr.w	r3, [r6, #464]	; 0x1d0
   26004:	ldr.w	r4, [sp, #65]	; 0x41
   26008:	ldr.w	fp, [sp, #69]	; 0x45
   2600c:	ldr.w	r3, [r3, #308]	; 0x134
   26010:	ldr.w	r0, [r3, #188]	; 0xbc
   26014:	mov	r3, r1
   26016:	and.w	r2, r0, #256	; 0x100
   2601a:	orrs	r3, r2
   2601c:	beq.n	26030 <btrfs_alloc_free_block@@Base+0x144>
   2601e:	mov	r2, sl
   26020:	str.w	sl, [sp, #65]	; 0x41
   26024:	asrs	r3, r2, #31
   26026:	str.w	r3, [sp, #69]	; 0x45
   2602a:	movs	r3, #169	; 0xa9
   2602c:	strb.w	r3, [sp, #64]	; 0x40
   26030:	ldrd	r2, r3, [sp, #120]	; 0x78
   26034:	cmp	r3, #0
   26036:	it	eq
   26038:	cmpeq	r2, #2
   2603a:	bne.n	2607a <btrfs_alloc_free_block@@Base+0x18e>
   2603c:	ldrd	r2, r3, [sp, #56]	; 0x38
   26040:	movs	r1, #8
   26042:	str	r1, [sp, #8]
   26044:	adds	r1, r2, r4
   26046:	adc.w	ip, r3, fp
   2604a:	adds.w	r1, r1, #4294967295	; 0xffffffff
   2604e:	adc.w	r0, ip, #4294967295	; 0xffffffff
   26052:	strd	r1, r0, [sp]
   26056:	ldr	r1, [r7, #0]
   26058:	add.w	r0, r1, #192	; 0xc0
   2605c:	bl	19d40 <set_extent_bits@@Base>
   26060:	ldr	r2, [pc, #260]	; (26168 <btrfs_alloc_free_block@@Base+0x27c>)
   26062:	ldr	r1, [pc, #264]	; (2616c <btrfs_alloc_free_block@@Base+0x280>)
   26064:	movw	r3, #2530	; 0x9e2
   26068:	add	r2, pc
   2606a:	addw	r2, r2, #666	; 0x29a
   2606e:	add	r1, pc
   26070:	str	r0, [sp, #0]
   26072:	ldr	r0, [pc, #252]	; (26170 <btrfs_alloc_free_block@@Base+0x284>)
   26074:	add	r0, pc
   26076:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   2607a:	ldrd	r3, r2, [r8, #32]
   2607e:	mov.w	r9, #0
   26082:	mov	r1, r7
   26084:	adds	r3, r3, r4
   26086:	adc.w	r2, r2, fp
   2608a:	strd	r3, r2, [r8, #32]
   2608e:	movs	r3, #0
   26090:	strd	r3, r3, [sp, #36]	; 0x24
   26094:	movs	r3, #3
   26096:	strd	sl, r3, [sp, #24]
   2609a:	ldrd	r2, r3, [sp, #120]	; 0x78
   2609e:	mov.w	r8, #0
   260a2:	strd	r4, fp, [sp]
   260a6:	ldr.w	r0, [r6, #464]	; 0x1d0
   260aa:	strd	r2, r3, [sp, #16]
   260ae:	str	r5, [sp, #32]
   260b0:	ldrd	r2, r3, [sp, #56]	; 0x38
   260b4:	strd	r8, r9, [sp, #8]
   260b8:	bl	2737c <btrfs_add_delayed_tree_ref@@Base>
   260bc:	mov	r4, r0
   260be:	cmp	r0, #0
   260c0:	bne.w	25f4c <btrfs_alloc_free_block@@Base+0x60>
   260c4:	ldrd	r2, r3, [sp, #56]	; 0x38
   260c8:	ldr.w	r0, [r6, #464]	; 0x1d0
   260cc:	bl	1f6b6 <btrfs_find_create_tree_block@@Base>
   260d0:	mov	r4, r0
   260d2:	cbnz	r0, 26136 <btrfs_alloc_free_block@@Base+0x24a>
   260d4:	ldr.w	r2, [r6, #447]	; 0x1bf
   260d8:	mov	r1, r6
   260da:	ldr.w	r3, [r6, #451]	; 0x1c3
   260de:	mov.w	fp, sl, asr #31
   260e2:	mov	r0, r7
   260e4:	strd	r8, r9, [sp, #32]
   260e8:	strd	sl, fp, [sp, #24]
   260ec:	strd	r2, r3, [sp, #16]
   260f0:	ldr.w	r2, [sp, #65]	; 0x41
   260f4:	ldr.w	r3, [sp, #69]	; 0x45
   260f8:	strd	r8, r9, [sp, #8]
   260fc:	strd	r2, r3, [sp]
   26100:	ldrd	r2, r3, [sp, #56]	; 0x38
   26104:	bl	240d4 <btrfs_free_extent@@Base>
   26108:	ldr	r2, [pc, #104]	; (26174 <btrfs_alloc_free_block@@Base+0x288>)
   2610a:	ldr	r1, [pc, #108]	; (26178 <btrfs_alloc_free_block@@Base+0x28c>)
   2610c:	movs	r3, #1
   2610e:	ldr	r0, [pc, #108]	; (2617c <btrfs_alloc_free_block@@Base+0x290>)
   26110:	add	r2, pc
   26112:	str	r3, [sp, #0]
   26114:	addw	r2, r2, #683	; 0x2ab
   26118:	add	r1, pc
   2611a:	add	r0, pc
   2611c:	movw	r3, #2567	; 0xa07
   26120:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   26124:	movs	r2, #17
   26126:	mov	r1, r9
   26128:	mov	r0, r5
   2612a:	blx	8bf8 <memset@plt+0x4>
   2612e:	b.n	25fd8 <btrfs_alloc_free_block@@Base+0xec>
   26130:	mvn.w	r4, #11
   26134:	b.n	25f4c <btrfs_alloc_free_block@@Base+0x60>
   26136:	bl	20b00 <btrfs_set_buffer_uptodate@@Base>
   2613a:	ldr	r3, [r7, #52]	; 0x34
   2613c:	adds	r3, #1
   2613e:	str	r3, [r7, #52]	; 0x34
   26140:	b.n	25f6e <btrfs_alloc_free_block@@Base+0x82>
   26142:	mov	r0, r4
   26144:	add	sp, #84	; 0x54
   26146:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2614a:	nop
   2614c:	cmp	r6, #54	; 0x36
   2614e:	movs	r4, r0
   26150:	lsls	r4, r7, #9
   26152:	movs	r0, r0
   26154:	stmia	r2!, {r1, r2, r7}
   26156:	movs	r1, r0
   26158:	stmia	r3!, {r0, r5, r7}
   2615a:	movs	r1, r0
   2615c:	pop	{r0, r1, r4, r5, r6}
   2615e:	movs	r1, r0
   26160:	add	r6, sp, #404	; 0x194
   26162:	movs	r1, r0
   26164:	cmp	r5, #190	; 0xbe
   26166:	movs	r4, r0
   26168:	stmia	r2!, {r0, r2, r3, r7}
   2616a:	movs	r1, r0
   2616c:	cbnz	r7, 261c8 <add_new_free_space@@Base+0x48>
   2616e:	movs	r1, r0
   26170:	ldrh	r1, [r1, #0]
   26172:	movs	r1, r0
   26174:	stmia	r1!, {r0, r2, r5, r6, r7}
   26176:	movs	r1, r0
   26178:	hlt	0x003d
   2617a:	movs	r1, r0
   2617c:	bkpt	0x001b
   2617e:	movs	r1, r0

00026180 <add_new_free_space@@Base>:
   26180:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26184:	mov	r4, r2
   26186:	ldr	r2, [pc, #260]	; (2628c <add_new_free_space@@Base+0x10c>)
   26188:	mov	r5, r3
   2618a:	ldr	r3, [pc, #260]	; (26290 <add_new_free_space@@Base+0x110>)
   2618c:	sub	sp, #44	; 0x2c
   2618e:	add	r2, pc
   26190:	ldr.w	sl, [pc, #256]	; 26294 <add_new_free_space@@Base+0x114>
   26194:	ldr.w	fp, [pc, #256]	; 26298 <add_new_free_space@@Base+0x118>
   26198:	movs	r6, #0
   2619a:	ldr	r3, [r2, r3]
   2619c:	add	sl, pc
   2619e:	addw	sl, sl, #706	; 0x2c2
   261a2:	add	fp, pc
   261a4:	ldr	r3, [r3, #0]
   261a6:	str	r3, [sp, #36]	; 0x24
   261a8:	mov.w	r3, #0
   261ac:	mov	r8, r0
   261ae:	mov	r9, r1
   261b0:	mov	r7, r6
   261b2:	ldrd	r2, r3, [sp, #80]	; 0x50
   261b6:	cmp	r5, r3
   261b8:	it	eq
   261ba:	cmpeq	r4, r2
   261bc:	bcc.n	261d2 <add_new_free_space@@Base+0x52>
   261be:	ldr	r2, [pc, #220]	; (2629c <add_new_free_space@@Base+0x11c>)
   261c0:	ldr	r3, [pc, #204]	; (26290 <add_new_free_space@@Base+0x110>)
   261c2:	add	r2, pc
   261c4:	ldr	r3, [r2, r3]
   261c6:	ldr	r2, [r3, #0]
   261c8:	ldr	r3, [sp, #36]	; 0x24
   261ca:	eors	r2, r3
   261cc:	beq.n	26282 <add_new_free_space@@Base+0x102>
   261ce:	blx	88e4 <__stack_chk_fail@plt>
   261d2:	movs	r3, #5
   261d4:	add.w	r0, r9, #160	; 0xa0
   261d8:	str	r3, [sp, #8]
   261da:	mov	r2, r4
   261dc:	add	r3, sp, #24
   261de:	str	r3, [sp, #4]
   261e0:	add	r3, sp, #16
   261e2:	str	r3, [sp, #0]
   261e4:	mov	r3, r5
   261e6:	bl	19f9c <find_first_extent_bit@@Base>
   261ea:	cbnz	r0, 26246 <add_new_free_space@@Base+0xc6>
   261ec:	ldrd	r2, r3, [sp, #16]
   261f0:	cmp	r5, r3
   261f2:	it	eq
   261f4:	cmpeq	r4, r2
   261f6:	mov	r0, r2
   261f8:	mov	r1, r3
   261fa:	bcc.n	26208 <add_new_free_space@@Base+0x88>
   261fc:	ldr	r3, [sp, #24]
   261fe:	adds	r4, r3, #1
   26200:	ldr	r3, [sp, #28]
   26202:	adc.w	r5, r3, #0
   26206:	b.n	261b2 <add_new_free_space@@Base+0x32>
   26208:	ldrd	r2, r3, [sp, #80]	; 0x50
   2620c:	ldr.w	ip, [r8, #64]	; 0x40
   26210:	cmp	r1, r3
   26212:	it	eq
   26214:	cmpeq	r0, r2
   26216:	bcs.n	26246 <add_new_free_space@@Base+0xc6>
   26218:	subs	r2, r0, r4
   2621a:	mov	r0, ip
   2621c:	sbc.w	r3, r1, r5
   26220:	adds	r6, r6, r2
   26222:	strd	r2, r3, [sp]
   26226:	adc.w	r7, r3, r7
   2622a:	mov	r2, r4
   2622c:	mov	r3, r5
   2622e:	bl	2a0a2 <btrfs_add_free_space@@Base>
   26232:	movw	r3, #3693	; 0xe6d
   26236:	mov	r2, sl
   26238:	mov	r1, fp
   2623a:	str	r0, [sp, #0]
   2623c:	ldr	r0, [pc, #96]	; (262a0 <add_new_free_space@@Base+0x120>)
   2623e:	add	r0, pc
   26240:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   26244:	b.n	261fc <add_new_free_space@@Base+0x7c>
   26246:	ldr	r3, [sp, #80]	; 0x50
   26248:	ldr	r2, [sp, #84]	; 0x54
   2624a:	subs	r3, r3, r4
   2624c:	ldr.w	r0, [r8, #64]	; 0x40
   26250:	sbc.w	r2, r2, r5
   26254:	adds	r6, r6, r3
   26256:	strd	r3, r2, [sp]
   2625a:	adc.w	r7, r2, r7
   2625e:	mov	r3, r5
   26260:	mov	r2, r4
   26262:	bl	2a0a2 <btrfs_add_free_space@@Base>
   26266:	ldr	r2, [pc, #60]	; (262a4 <add_new_free_space@@Base+0x124>)
   26268:	ldr	r1, [pc, #60]	; (262a8 <add_new_free_space@@Base+0x128>)
   2626a:	movw	r3, #3705	; 0xe79
   2626e:	add	r2, pc
   26270:	addw	r2, r2, #706	; 0x2c2
   26274:	add	r1, pc
   26276:	str	r0, [sp, #0]
   26278:	ldr	r0, [pc, #48]	; (262ac <add_new_free_space@@Base+0x12c>)
   2627a:	add	r0, pc
   2627c:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   26280:	b.n	261be <add_new_free_space@@Base+0x3e>
   26282:	mov	r0, r6
   26284:	mov	r1, r7
   26286:	add	sp, #44	; 0x2c
   26288:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2628c:	cmp	r3, #162	; 0xa2
   2628e:	movs	r4, r0
   26290:	lsls	r4, r7, #9
   26292:	movs	r0, r0
   26294:	stmia	r1!, {r0, r3, r4, r6}
   26296:	movs	r1, r0
   26298:	rev	r3, r6
   2629a:	movs	r1, r0
   2629c:	cmp	r3, #110	; 0x6e
   2629e:	movs	r4, r0
   262a0:	strh	r7, [r7, #48]	; 0x30
   262a2:	movs	r1, r0
   262a4:	stmia	r0!, {r0, r1, r2, r7}
   262a6:	movs	r1, r0
   262a8:	cbnz	r1, 262c4 <cleanup_ref_head@@Base+0x14>
   262aa:	movs	r1, r0
   262ac:	strh	r3, [r0, #48]	; 0x30
   262ae:	movs	r1, r0

000262b0 <cleanup_ref_head@@Base>:
   262b0:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   262b2:	mov	r5, r0
   262b4:	ldr	r0, [r2, #48]	; 0x30
   262b6:	mov	r7, r1
   262b8:	mov	r4, r2
   262ba:	cbz	r0, 262c4 <cleanup_ref_head@@Base+0x14>
   262bc:	movs	r3, #0
   262be:	str	r3, [r2, #48]	; 0x30
   262c0:	blx	87cc <free@plt+0x4>
   262c4:	ldr	r3, [r4, #24]
   262c6:	cmp	r3, #0
   262c8:	bne.n	26360 <cleanup_ref_head@@Base+0xb0>
   262ca:	ldr	r3, [r4, #48]	; 0x30
   262cc:	cmp	r3, #0
   262ce:	bne.n	26360 <cleanup_ref_head@@Base+0xb0>
   262d0:	ldr	r3, [r5, #72]	; 0x48
   262d2:	add.w	r6, r4, #36	; 0x24
   262d6:	add.w	r1, r5, #64	; 0x40
   262da:	subs	r3, #1
   262dc:	mov	r0, r6
   262de:	str	r3, [r5, #72]	; 0x48
   262e0:	bl	17054 <rb_erase@@Base>
   262e4:	ldrb.w	r3, [r4, #60]	; 0x3c
   262e8:	str	r6, [r4, #36]	; 0x24
   262ea:	lsls	r2, r3, #31
   262ec:	bpl.n	2633a <cleanup_ref_head@@Base+0x8a>
   262ee:	ldrd	r2, r3, [r4, #8]
   262f2:	mov	r0, r7
   262f4:	strd	r2, r3, [sp]
   262f8:	ldrd	r2, r3, [r4]
   262fc:	bl	240bc <btrfs_pin_extent@@Base>
   26300:	ldrb.w	r3, [r4, #60]	; 0x3c
   26304:	lsls	r3, r3, #30
   26306:	bmi.n	2633a <cleanup_ref_head@@Base+0x8a>
   26308:	ldr	r0, [r5, #0]
   2630a:	movs	r2, #4
   2630c:	movs	r3, #0
   2630e:	bl	219cc <btrfs_create_tree@@Base+0x1c8>
   26312:	cbnz	r0, 26328 <cleanup_ref_head@@Base+0x78>
   26314:	ldr	r1, [pc, #76]	; (26364 <cleanup_ref_head@@Base+0xb4>)
   26316:	movw	r2, #3758	; 0xeae
   2631a:	ldr	r0, [pc, #76]	; (26368 <cleanup_ref_head@@Base+0xb8>)
   2631c:	add	r1, pc
   2631e:	addw	r1, r1, #725	; 0x2d5
   26322:	add	r0, pc
   26324:	bl	2227c <btrfs_create_tree@@Base+0xa78>
   26328:	ldrd	r3, r2, [r0, #32]
   2632c:	ldrd	r1, r5, [r4, #8]
   26330:	subs	r3, r3, r1
   26332:	sbc.w	r2, r2, r5
   26336:	strd	r3, r2, [r0, #32]
   2633a:	ldrd	r2, r3, [r4, #16]
   2633e:	adds.w	r0, r2, #4294967295	; 0xffffffff
   26342:	adc.w	r1, r3, #4294967295	; 0xffffffff
   26346:	cmp	r3, #0
   26348:	it	eq
   2634a:	cmpeq	r2, #1
   2634c:	beq.n	26358 <cleanup_ref_head@@Base+0xa8>
   2634e:	strd	r0, r1, [r4, #16]
   26352:	movs	r0, #0
   26354:	add	sp, #12
   26356:	pop	{r4, r5, r6, r7, pc}
   26358:	mov	r0, r4
   2635a:	blx	87cc <free@plt+0x4>
   2635e:	b.n	26352 <cleanup_ref_head@@Base+0xa2>
   26360:	movs	r0, #1
   26362:	b.n	26354 <cleanup_ref_head@@Base+0xa4>
   26364:	ittee	le
   26366:	movle	r1, r0
   26368:	bkpt	0x00dc
   2636a:	movgt	r1, r0

0002636c <btrfs_run_delayed_refs@@Base>:
   2636c:	stmdbgt	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26370:	mov	sl, r0
   26372:	vpush	{d8}
   26376:	movs	r6, #0
   26378:	ldr	r2, [pc, #736]	; (2665c <btrfs_run_delayed_refs@@Base+0x2f0>)
   2637a:	ldr	r3, [pc, #740]	; (26660 <btrfs_run_delayed_refs@@Base+0x2f4>)
   2637c:	add	r2, pc
   2637e:	sub	sp, #132	; 0x84
   26380:	ldr	r3, [r2, r3]
   26382:	mov	r2, r0
   26384:	ldr	r3, [r3, #0]
   26386:	str	r3, [sp, #124]	; 0x7c
   26388:	mov.w	r3, #0
   2638c:	ldr.w	r3, [r2], #64
   26390:	vmov	s16, r3
   26394:	ldr	r3, [pc, #716]	; (26664 <btrfs_run_delayed_refs@@Base+0x2f8>)
   26396:	str	r2, [sp, #72]	; 0x48
   26398:	add	r3, pc
   2639a:	str	r3, [sp, #68]	; 0x44
   2639c:	add.w	r3, r3, #784	; 0x310
   263a0:	vmov	s17, r3
   263a4:	cbnz	r6, 263b4 <btrfs_run_delayed_refs@@Base+0x48>
   263a6:	mov	r0, sl
   263a8:	bl	272c4 <btrfs_select_ref_head@@Base>
   263ac:	mov	r6, r0
   263ae:	cmp	r0, #0
   263b0:	beq.w	268a6 <btrfs_run_delayed_refs@@Base+0x53a>
   263b4:	ldr	r1, [sp, #72]	; 0x48
   263b6:	mov	r2, r6
   263b8:	mov	r0, sl
   263ba:	bl	271b0 <btrfs_merge_delayed_refs@@Base>
   263be:	ldr	r3, [r6, #24]
   263c0:	cmp	r3, #0
   263c2:	beq.w	264e4 <btrfs_run_delayed_refs@@Base+0x178>
   263c6:	ldr	r4, [r6, #28]
   263c8:	add.w	r3, r6, #28
   263cc:	add.w	r1, r6, #24
   263d0:	cmp	r4, r3
   263d2:	beq.n	264ba <btrfs_run_delayed_refs@@Base+0x14e>
   263d4:	subs	r4, #12
   263d6:	ldrb.w	r3, [r4, #62]	; 0x3e
   263da:	mov	r0, r4
   263dc:	bfc	r3, #1, #1
   263e0:	strb.w	r3, [r4, #62]	; 0x3e
   263e4:	bl	17054 <rb_erase@@Base>
   263e8:	mov	r3, r4
   263ea:	str	r4, [r4, #0]
   263ec:	ldr.w	r2, [r3, #12]!
   263f0:	cmp	r2, r3
   263f2:	beq.n	26402 <btrfs_run_delayed_refs@@Base+0x96>
   263f4:	ldr	r3, [r4, #16]
   263f6:	str	r3, [r2, #4]
   263f8:	str	r2, [r3, #0]
   263fa:	ldr	r2, [pc, #600]	; (26654 <btrfs_run_delayed_refs@@Base+0x2e8>)
   263fc:	ldr	r3, [pc, #600]	; (26658 <btrfs_run_delayed_refs@@Base+0x2ec>)
   263fe:	strd	r2, r3, [r4, #12]
   26402:	ldrb.w	r3, [r4, #60]	; 0x3c
   26406:	cmp	r3, #2
   26408:	beq.n	264f8 <btrfs_run_delayed_refs@@Base+0x18c>
   2640a:	and.w	r3, r3, #253	; 0xfd
   2640e:	cmp	r3, #1
   26410:	bne.n	26500 <btrfs_run_delayed_refs@@Base+0x194>
   26412:	ldr	r3, [r6, #56]	; 0x38
   26414:	ldr	r2, [r4, #56]	; 0x38
   26416:	subs	r3, r3, r2
   26418:	str	r3, [r6, #56]	; 0x38
   2641a:	ldrb.w	r3, [r6, #60]	; 0x3c
   2641e:	ldr.w	fp, [r6, #48]	; 0x30
   26422:	and.w	r2, r3, #1
   26426:	bfc	r3, #0, #1
   2642a:	strb.w	r3, [r6, #60]	; 0x3c
   2642e:	movs	r3, #0
   26430:	str	r3, [r6, #48]	; 0x30
   26432:	ldrb.w	r3, [r4, #61]	; 0x3d
   26436:	cmp	r3, #176	; 0xb0
   26438:	beq.n	2651e <btrfs_run_delayed_refs@@Base+0x1b2>
   2643a:	cmp	r3, #182	; 0xb6
   2643c:	bne.w	26884 <btrfs_run_delayed_refs@@Base+0x518>
   26440:	ldrd	r0, r1, [r4, #72]	; 0x48
   26444:	ldr	r3, [r4, #56]	; 0x38
   26446:	ldrd	r8, r9, [r4, #64]	; 0x40
   2644a:	cmp	r3, #1
   2644c:	ldrb.w	r5, [r4, #60]	; 0x3c
   26450:	beq.n	26524 <btrfs_run_delayed_refs@@Base+0x1b8>
   26452:	strd	r0, r1, [sp, #16]
   26456:	movs	r0, #1
   26458:	ldr	r1, [pc, #524]	; (26668 <btrfs_run_delayed_refs@@Base+0x2fc>)
   2645a:	strd	r3, r5, [sp]
   2645e:	mvn.w	r5, #4
   26462:	strd	r8, r9, [sp, #8]
   26466:	add	r1, pc
   26468:	ldrd	r2, r3, [r4, #24]
   2646c:	blx	8c6c <__printf_chk@plt+0x4>
   26470:	cmp.w	fp, #0
   26474:	bne.w	2689e <btrfs_run_delayed_refs@@Base+0x532>
   26478:	ldrb.w	r3, [sl, #32]
   2647c:	cbz	r3, 26488 <btrfs_run_delayed_refs@@Base+0x11c>
   2647e:	ldrb.w	r3, [r4, #60]	; 0x3c
   26482:	cmp	r3, #2
   26484:	beq.w	26812 <btrfs_run_delayed_refs@@Base+0x4a6>
   26488:	ldrb.w	r3, [r6, #60]	; 0x3c
   2648c:	mov	r0, r4
   2648e:	bfc	r3, #3, #1
   26492:	strb.w	r3, [r6, #60]	; 0x3c
   26496:	ldr.w	r3, [sl, #76]	; 0x4c
   2649a:	adds	r3, #1
   2649c:	str.w	r3, [sl, #76]	; 0x4c
   264a0:	bl	22078 <btrfs_create_tree@@Base+0x874>
   264a4:	ldr	r2, [pc, #452]	; (2666c <btrfs_run_delayed_refs@@Base+0x300>)
   264a6:	ldr	r3, [pc, #440]	; (26660 <btrfs_run_delayed_refs@@Base+0x2f4>)
   264a8:	add	r2, pc
   264aa:	ldr	r3, [r2, r3]
   264ac:	ldr	r2, [r3, #0]
   264ae:	ldr	r3, [sp, #124]	; 0x7c
   264b0:	eors	r2, r3
   264b2:	beq.w	268aa <btrfs_run_delayed_refs@@Base+0x53e>
   264b6:	blx	88e4 <__stack_chk_fail@plt>
   264ba:	mov	r0, r1
   264bc:	str	r1, [sp, #64]	; 0x40
   264be:	bl	172ca <rb_first@@Base>
   264c2:	ldr	r1, [sp, #64]	; 0x40
   264c4:	ldr	r2, [r0, #12]
   264c6:	add.w	r3, r0, #12
   264ca:	mov	r4, r0
   264cc:	cmp	r2, r3
   264ce:	beq.n	263d6 <btrfs_run_delayed_refs@@Base+0x6a>
   264d0:	ldr	r1, [pc, #412]	; (26670 <btrfs_run_delayed_refs@@Base+0x304>)
   264d2:	movw	r2, #3786	; 0xeca
   264d6:	ldr	r0, [pc, #412]	; (26674 <btrfs_run_delayed_refs@@Base+0x308>)
   264d8:	add	r1, pc
   264da:	addw	r1, r1, #742	; 0x2e6
   264de:	add	r0, pc
   264e0:	bl	2227c <btrfs_create_tree@@Base+0xa78>
   264e4:	vmov	r1, s16
   264e8:	mov	r2, r6
   264ea:	mov	r0, sl
   264ec:	bl	262b0 <cleanup_ref_head@@Base>
   264f0:	cmp	r0, #0
   264f2:	bgt.w	263a4 <btrfs_run_delayed_refs@@Base+0x38>
   264f6:	b.n	263a6 <btrfs_run_delayed_refs@@Base+0x3a>
   264f8:	ldr	r3, [r6, #56]	; 0x38
   264fa:	ldr	r2, [r4, #56]	; 0x38
   264fc:	add	r3, r2
   264fe:	b.n	26418 <btrfs_run_delayed_refs@@Base+0xac>
   26500:	ldr	r2, [pc, #372]	; (26678 <btrfs_run_delayed_refs@@Base+0x30c>)
   26502:	movs	r3, #1
   26504:	ldr	r1, [pc, #372]	; (2667c <btrfs_run_delayed_refs@@Base+0x310>)
   26506:	ldr	r0, [pc, #376]	; (26680 <btrfs_run_delayed_refs@@Base+0x314>)
   26508:	add	r2, pc
   2650a:	str	r3, [sp, #0]
   2650c:	addw	r2, r2, #761	; 0x2f9
   26510:	add	r1, pc
   26512:	add	r0, pc
   26514:	movw	r3, #3910	; 0xf46
   26518:	bl	21b22 <btrfs_create_tree@@Base+0x31e>
   2651c:	b.n	2641a <btrfs_run_delayed_refs@@Base+0xae>
   2651e:	movs	r0, #0
   26520:	movs	r1, #0
   26522:	b.n	26444 <btrfs_run_delayed_refs@@Base+0xd8>
   26524:	cmp	r5, #1
   26526:	bne.w	26832 <btrfs_run_delayed_refs@@Base+0x4c6>
   2652a:	cmp	r2, #0
   2652c:	beq.w	26868 <btrfs_run_delayed_refs@@Base+0x4fc>
   26530:	cmp.w	fp, #0
   26534:	beq.n	2653e <btrfs_run_delayed_refs@@Base+0x1d2>
   26536:	ldrb.w	r3, [fp, #19]
   2653a:	eor.w	r3, r3, #1
   2653e:	ldr	r1, [pc, #324]	; (26684 <btrfs_run_delayed_refs@@Base+0x318>)
   26540:	ldr	r0, [pc, #324]	; (26688 <btrfs_run_delayed_refs@@Base+0x31c>)
   26542:	vmov	r2, s17
   26546:	add	r1, pc
   26548:	add	r0, pc
   2654a:	str	r3, [sp, #0]
   2654c:	movw	r3, #3815	; 0xee7
   26550:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   26554:	ldr.w	r7, [sl]
   26558:	movs	r2, #4
   2655a:	ldr.w	r3, [r7, #308]	; 0x134
   2655e:	mov	r0, r7
   26560:	ldr.w	r3, [r3, #188]	; 0xbc
   26564:	and.w	r3, r3, #256	; 0x100
   26568:	str	r3, [sp, #40]	; 0x28
   2656a:	movs	r3, #0
   2656c:	str	r3, [sp, #44]	; 0x2c
   2656e:	movs	r3, #0
   26570:	bl	219cc <btrfs_create_tree@@Base+0x1c8>
   26574:	str	r0, [sp, #64]	; 0x40
   26576:	cbnz	r0, 26588 <btrfs_run_delayed_refs@@Base+0x21c>
   26578:	ldr	r3, [sp, #68]	; 0x44
   2657a:	movw	r2, #2398	; 0x95e
   2657e:	ldr	r0, [pc, #268]	; (2668c <btrfs_run_delayed_refs@@Base+0x320>)
   26580:	addw	r1, r3, #805	; 0x325
   26584:	add	r0, pc
   26586:	b.n	264e0 <btrfs_run_delayed_refs@@Base+0x174>
   26588:	ldrd	r0, r1, [sp, #40]	; 0x28
   2658c:	add.w	r5, sp, #113	; 0x71
   26590:	ldrd	r2, r3, [r4, #24]
   26594:	orrs	r1, r0
   26596:	strd	r2, r3, [sp, #104]	; 0x68
   2659a:	beq.n	265e6 <btrfs_run_delayed_refs@@Base+0x27a>
   2659c:	ldr.w	ip, [r4, #80]	; 0x50
   265a0:	mov	r0, ip
   265a2:	str.w	ip, [sp, #113]	; 0x71
   265a6:	asrs	r1, r0, #31
   265a8:	str	r1, [r5, #4]
   265aa:	movs	r5, #33	; 0x21
   265ac:	movs	r1, #169	; 0xa9
   265ae:	strb.w	r1, [sp, #112]	; 0x70
   265b2:	cmp.w	r9, #0
   265b6:	it	eq
   265b8:	cmpeq.w	r8, #2
   265bc:	bne.n	266a8 <btrfs_run_delayed_refs@@Base+0x33c>
   265be:	movs	r1, #8
   265c0:	add.w	r0, r7, #192	; 0xc0
   265c4:	str	r1, [sp, #8]
   265c6:	add	r1, sp, #96	; 0x60
   265c8:	str	r1, [sp, #4]
   265ca:	add	r1, sp, #88	; 0x58
   265cc:	str	r1, [sp, #0]
   265ce:	bl	19f9c <find_first_extent_bit@@Base>
   265d2:	cbz	r0, 265fa <btrfs_run_delayed_refs@@Base+0x28e>
   265d4:	ldr	r1, [pc, #184]	; (26690 <btrfs_run_delayed_refs@@Base+0x324>)
   265d6:	movw	r2, #2415	; 0x96f
   265da:	ldr	r0, [pc, #184]	; (26694 <btrfs_run_delayed_refs@@Base+0x328>)
   265dc:	add	r1, pc
   265de:	addw	r1, r1, #805	; 0x325
   265e2:	add	r0, pc
   265e4:	b.n	264e0 <btrfs_run_delayed_refs@@Base+0x174>
   265e6:	ldr	r1, [r4, #32]
   265e8:	str.w	r1, [sp, #113]	; 0x71
   265ec:	ldr	r1, [r4, #36]	; 0x24
   265ee:	str	r1, [r5, #4]
   265f0:	movs	r1, #168	; 0xa8
   265f2:	movs	r5, #51	; 0x33
   265f4:	strb.w	r1, [sp, #112]	; 0x70
   265f8:	b.n	265b2 <btrfs_run_delayed_refs@@Base+0x246>
   265fa:	ldrd	r0, r1, [r4, #24]
   265fe:	ldrd	r2, r3, [sp, #88]	; 0x58
   26602:	cmp	r1, r3
   26604:	it	eq
   26606:	cmpeq	r0, r2
   26608:	beq.n	2661c <btrfs_run_delayed_refs@@Base+0x2b0>
   2660a:	ldr	r1, [pc, #140]	; (26698 <btrfs_run_delayed_refs@@Base+0x32c>)
   2660c:	mov.w	r2, #2416	; 0x970
   26610:	ldr	r0, [pc, #136]	; (2669c <btrfs_run_delayed_refs@@Base+0x330>)
   26612:	add	r1, pc
   26614:	addw	r1, r1, #805	; 0x325
   26618:	add	r0, pc
   2661a:	b.n	264e0 <btrfs_run_delayed_refs@@Base+0x174>
   2661c:	ldrd	r3, r2, [r4, #32]
   26620:	adds	r3, r0, r3
   26622:	adc.w	r2, r1, r2
   26626:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2662a:	str	r3, [sp, #56]	; 0x38
   2662c:	adc.w	r3, r2, #4294967295	; 0xffffffff
   26630:	str	r3, [sp, #60]	; 0x3c
   26632:	ldrd	r0, r1, [sp, #56]	; 0x38
   26636:	ldrd	r2, r3, [sp, #96]	; 0x60
   2663a:	cmp	r1, r3
   2663c:	it	eq
   2663e:	cmpeq	r0, r2
   26640:	beq.n	266a8 <btrfs_run_delayed_refs@@Base+0x33c>
   26642:	ldr	r1, [pc, #92]	; (266a0 <btrfs_run_delayed_refs@@Base+0x334>)
   26644:	movw	r2, #2417	; 0x971
   26648:	ldr	r0, [pc, #88]	; (266a4 <btrfs_run_delayed_refs@@Base+0x338>)
   2664a:	add	r1, pc
   2664c:	addw	r1, r1, #805	; 0x325
   26650:	add	r0, pc
   26652:	b.n	264e0 <btrfs_run_delayed_refs@@Base+0x174>
   26654:	lsls	r0, r0, #4
   26656:	movs	r0, r2
   26658:	lsls	r0, r0, #8
   2665a:	movs	r0, r4
   2665c:	cmp	r1, #180	; 0xb4
   2665e:	movs	r4, r0
   26660:	lsls	r4, r7, #9
   26662:	movs	r0, r0
   26664:	ittte	pl
   26666:	movpl	r1, r0
   26668:	poppl	{r0, r3, r4, r5, r7, pc}
   2666a:	movpl	r1, r0
   2666c:	cmpmi	r0, #136	; 0x88
   2666e:	movs	r4, r0
   26670:	bkpt	0x001d
   26672:	movs	r1, r0
   26674:	pop	{r1, r2, r5, pc}
   26676:	movs	r1, r0
   26678:	pop	{r0, r2, r3, r5, r6, r7, pc}
   2667a:	movs	r1, r0
   2667c:			; <UNDEFINED> instruction: 0xb6c5
   2667e:	movs	r1, r0
   26680:	rev	r3, r4
   26682:	movs	r1, r0
   26684:			; <UNDEFINED> instruction: 0xb68f
   26686:	movs	r1, r0
   26688:	pop	{r1, r2, r3, r5, pc}
   2668a:	movs	r1, r0
   2668c:	pop	{r1, r3, r4, r5, r6}
   2668e:	movs	r1, r0
   26690:	pop	{r0, r3, r4, pc}
   26692:	movs	r1, r0
   26694:	strh	r2, [r3, #20]
   26696:	movs	r1, r0
   26698:	pop	{r0, r1, r5, r6, r7}
   2669a:	movs	r1, r0
   2669c:	pop	{r0, r2, r7}
   2669e:	movs	r1, r0
   266a0:	pop	{r0, r1, r3, r5, r7}
   266a2:	movs	r1, r0
   266a4:	pop	{r0, r1, r5, r6}
   266a6:	movs	r1, r0
   266a8:	bl	1b2d4 <btrfs_alloc_path@@Base>
   266ac:	mov	r8, r0
   266ae:	cmp	r0, #0
   266b0:	beq.w	2682c <btrfs_run_delayed_refs@@Base+0x4c0>
   266b4:	ldr	r1, [r7, #24]
   266b6:	movs	r3, #1
   266b8:	mov	r2, r0
   266ba:	str	r3, [sp, #4]
   266bc:	mov	r0, sl
   266be:	add	r3, sp, #84	; 0x54
   266c0:	str	r3, [sp, #0]
   266c2:	add	r3, sp, #104	; 0x68
   266c4:	str	r5, [sp, #84]	; 0x54
   266c6:	bl	1e490 <btrfs_insert_empty_items@@Base>
   266ca:	mov	r5, r0
   266cc:	cmp	r0, #0
   266ce:	bne.w	26806 <btrfs_run_delayed_refs@@Base+0x49a>
   266d2:	ldr.w	r0, [r8]
   266d6:	movs	r2, #25
   266d8:	ldr.w	r3, [r8, #32]
   266dc:	mov.w	r1, #1
   266e0:	add.w	r9, r0, #96	; 0x60
   266e4:	mla	r3, r2, r3, r9
   266e8:	ldr.w	r3, [r3, #118]	; 0x76
   266ec:	add.w	r2, r3, #101	; 0x65
   266f0:	str	r3, [sp, #48]	; 0x30
   266f2:	add.w	r3, r9, r2
   266f6:	strb.w	r1, [r9, r2]
   266fa:	strb	r5, [r3, #1]
   266fc:	strb	r5, [r3, #2]
   266fe:	strb	r5, [r3, #3]
   26700:	strb	r5, [r3, #4]
   26702:	strb	r5, [r3, #5]
   26704:	strb	r5, [r3, #6]
   26706:	strb	r5, [r3, #7]
   26708:	ldrd	r1, r2, [sl, #8]
   2670c:	str	r1, [r3, #8]
   2670e:	str	r2, [r3, #12]
   26710:	ldrd	r2, r1, [fp, #24]
   26714:	orr.w	r2, r2, #2
   26718:	str	r2, [r3, #16]
   2671a:	str	r1, [r3, #20]
   2671c:	ldr	r3, [sp, #48]	; 0x30
   2671e:	add.w	r5, r3, #125	; 0x7d
   26722:	ldrd	r2, r3, [sp, #40]	; 0x28
   26726:	orrs	r3, r2
   26728:	bne.n	26742 <btrfs_run_delayed_refs@@Base+0x3d6>
   2672a:	movs	r3, #17
   2672c:	mov	r2, r5
   2672e:	mov	r1, fp
   26730:	str	r0, [sp, #76]	; 0x4c
   26732:	bl	1a7b4 <write_extent_buffer@@Base>
   26736:	ldr	r3, [r4, #80]	; 0x50
   26738:	add	r5, r9
   2673a:	ldr	r0, [sp, #76]	; 0x4c
   2673c:	strb	r3, [r5, #17]
   2673e:	ldr	r5, [sp, #48]	; 0x30
   26740:	adds	r5, #143	; 0x8f
   26742:	movs	r2, #176	; 0xb0
   26744:	strb.w	r2, [r9, r5]
   26748:	ldrd	r1, r2, [r4, #64]	; 0x40
   2674c:	add.w	r3, r9, r5
   26750:	str.w	r1, [r3, #1]
   26754:	str.w	r2, [r3, #5]
   26758:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2675c:	mov	r0, r8
   2675e:	bl	1b302 <btrfs_free_path@@Base>
   26762:	ldr.w	r3, [r7, #384]	; 0x180
   26766:	mov	r0, sl
   26768:	str	r3, [sp, #0]
   2676a:	movs	r3, #0
   2676c:	str	r3, [sp, #4]
   2676e:	ldrd	r2, r3, [sp, #104]	; 0x68
   26772:	bl	2fc68 <remove_from_free_space_tree@@Base>
   26776:	mov	r5, r0
   26778:	cmp	r0, #0
   2677a:	bne.n	26806 <btrfs_run_delayed_refs@@Base+0x49a>
   2677c:	str	r0, [sp, #12]
   2677e:	mov.w	r8, #1
   26782:	str.w	r8, [sp, #8]
   26786:	ldr.w	r3, [r7, #384]	; 0x180
   2678a:	strd	r3, r0, [sp]
   2678e:	mov	r0, r7
   26790:	ldrd	r2, r3, [sp, #104]	; 0x68
   26794:	bl	224c4 <btrfs_lookup_block_group@@Base+0x188>
   26798:	ldr.w	r2, [r7, #384]	; 0x180
   2679c:	ldr	r3, [sp, #64]	; 0x40
   2679e:	movs	r1, #0
   267a0:	mov	r5, r0
   267a2:	mov	r0, r2
   267a4:	strd	r0, r1, [sp, #48]	; 0x30
   267a8:	ldrd	r0, r1, [r3, #32]
   267ac:	ldrd	r2, r3, [sp, #48]	; 0x30
   267b0:	cmp	r1, r3
   267b2:	it	eq
   267b4:	cmpeq	r0, r2
   267b6:	bcs.n	2681a <btrfs_run_delayed_refs@@Base+0x4ae>
   267b8:	ldr	r2, [pc, #252]	; (268b8 <btrfs_run_delayed_refs@@Base+0x54c>)
   267ba:	movw	r3, #2462	; 0x99e
   267be:	ldr	r1, [pc, #252]	; (268bc <btrfs_run_delayed_refs@@Base+0x550>)
   267c0:	ldr	r0, [pc, #252]	; (268c0 <btrfs_run_delayed_refs@@Base+0x554>)
   267c2:	add	r2, pc
   267c4:	addw	r2, r2, #805	; 0x325
   267c8:	add	r1, pc
   267ca:	add	r0, pc
   267cc:	str.w	r8, [sp]
   267d0:	bl	21b22 <btrfs_create_tree@@Base+0x31e>
   267d4:	ldr	r3, [sp, #64]	; 0x40
   267d6:	movs	r2, #0
   267d8:	mov	r1, r3
   267da:	movs	r3, #0
   267dc:	strd	r2, r3, [r1, #32]
   267e0:	ldrd	r2, r3, [r4, #64]	; 0x40
   267e4:	cmp	r3, #0
   267e6:	it	eq
   267e8:	cmpeq	r2, #2
   267ea:	bne.n	26806 <btrfs_run_delayed_refs@@Base+0x49a>
   267ec:	movs	r3, #8
   267ee:	str	r3, [sp, #8]
   267f0:	ldrd	r2, r3, [sp, #96]	; 0x60
   267f4:	ldr.w	r0, [sl]
   267f8:	strd	r2, r3, [sp]
   267fc:	adds	r0, #192	; 0xc0
   267fe:	ldrd	r2, r3, [sp, #88]	; 0x58
   26802:	bl	19bca <clear_extent_bits@@Base>
   26806:	cmp.w	fp, #0
   2680a:	bne.n	2689e <btrfs_run_delayed_refs@@Base+0x532>
   2680c:	cmp	r5, #0
   2680e:	bne.w	26478 <btrfs_run_delayed_refs@@Base+0x10c>
   26812:	mov	r0, r4
   26814:	bl	22078 <btrfs_create_tree@@Base+0x874>
   26818:	b.n	263a4 <btrfs_run_delayed_refs@@Base+0x38>
   2681a:	ldr	r3, [sp, #48]	; 0x30
   2681c:	subs	r2, r0, r3
   2681e:	ldr	r3, [sp, #52]	; 0x34
   26820:	sbc.w	r3, r1, r3
   26824:	ldr	r1, [sp, #64]	; 0x40
   26826:	str	r2, [r1, #32]
   26828:	str	r3, [r1, #36]	; 0x24
   2682a:	b.n	267e0 <btrfs_run_delayed_refs@@Base+0x474>
   2682c:	mvn.w	r5, #11
   26830:	b.n	26806 <btrfs_run_delayed_refs@@Base+0x49a>
   26832:	cmp	r5, #2
   26834:	bne.n	26868 <btrfs_run_delayed_refs@@Base+0x4fc>
   26836:	movs	r2, #0
   26838:	movs	r3, #0
   2683a:	strd	r2, r3, [sp, #32]
   2683e:	mov	r0, sl
   26840:	ldr	r2, [r4, #80]	; 0x50
   26842:	strd	r8, r9, [sp, #16]
   26846:	asrs	r3, r2, #31
   26848:	strd	r2, r3, [sp, #24]
   2684c:	ldrd	r2, r3, [r4, #72]	; 0x48
   26850:	strd	r2, r3, [sp, #8]
   26854:	ldrd	r2, r3, [r4, #32]
   26858:	strd	r2, r3, [sp]
   2685c:	ldrd	r2, r3, [r4, #24]
   26860:	bl	22c54 <hash_extent_data_ref@@Base+0x3f4>
   26864:	mov	r5, r0
   26866:	b.n	26806 <btrfs_run_delayed_refs@@Base+0x49a>
   26868:	ldr	r2, [pc, #88]	; (268c4 <btrfs_run_delayed_refs@@Base+0x558>)
   2686a:	movs	r3, #1
   2686c:	ldr	r1, [pc, #88]	; (268c8 <btrfs_run_delayed_refs@@Base+0x55c>)
   2686e:	ldr	r0, [pc, #92]	; (268cc <btrfs_run_delayed_refs@@Base+0x560>)
   26870:	add	r2, pc
   26872:	add.w	r2, r2, #784	; 0x310
   26876:	add	r1, pc
   26878:	add	r0, pc
   2687a:	str	r3, [sp, #0]
   2687c:	movw	r3, #3822	; 0xeee
   26880:	bl	21d7c <btrfs_create_tree@@Base+0x578>
   26884:	ldr	r2, [pc, #72]	; (268d0 <btrfs_run_delayed_refs@@Base+0x564>)
   26886:	movs	r3, #1
   26888:	ldr	r1, [pc, #72]	; (268d4 <btrfs_run_delayed_refs@@Base+0x568>)
   2688a:	ldr	r0, [pc, #76]	; (268d8 <btrfs_run_delayed_refs@@Base+0x56c>)
   2688c:	add	r2, pc
   2688e:	str	r3, [sp, #0]
   26890:	addw	r2, r2, #831	; 0x33f
   26894:	add	r1, pc
   26896:	add	r0, pc
   26898:	movw	r3, #3842	; 0xf02
   2689c:	b.n	26880 <btrfs_run_delayed_refs@@Base+0x514>
   2689e:	mov	r0, fp
   268a0:	blx	87cc <free@plt+0x4>
   268a4:	b.n	2680c <btrfs_run_delayed_refs@@Base+0x4a0>
   268a6:	mov	r5, r0
   268a8:	b.n	264a4 <btrfs_run_delayed_refs@@Base+0x138>
   268aa:	mov	r0, r5
   268ac:	add	sp, #132	; 0x84
   268ae:	vpop	{d8}
   268b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268b6:	nop
   268b8:	cbnz	r3, 26908 <btrfs_fix_block_accounting@@Base+0x2c>
   268ba:	movs	r1, r0
   268bc:	push	{r0, r2, r3}
   268be:	movs	r1, r0
   268c0:			; <UNDEFINED> instruction: 0xb76b
   268c2:	movs	r1, r0
   268c4:	hlt	0x0005
   268c6:	movs	r1, r0
   268c8:	cbz	r7, 26922 <btrfs_fix_block_accounting@@Base+0x46>
   268ca:	movs	r1, r0
   268cc:			; <UNDEFINED> instruction: 0xb6bd
   268ce:	movs	r1, r0
   268d0:	rev16	r1, r5
   268d2:	movs	r1, r0
   268d4:	cbz	r1, 26928 <btrfs_fix_block_accounting@@Base+0x4c>
   268d6:	movs	r1, r0
   268d8:			; <UNDEFINED> instruction: 0xb69f
   268da:	movs	r1, r0

000268dc <btrfs_fix_block_accounting@@Base>:
   268dc:	ldr	r2, [pc, #460]	; (26aac <btrfs_fix_block_accounting@@Base+0x1d0>)
   268de:	mov.w	r1, #4294967295	; 0xffffffff
   268e2:	ldr	r3, [pc, #460]	; (26ab0 <btrfs_fix_block_accounting@@Base+0x1d4>)
   268e4:	add	r2, pc
   268e6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   268ea:	sub	sp, #124	; 0x7c
   268ec:	ldr.w	r8, [r0]
   268f0:	mov	r5, r0
   268f2:	ldr	r3, [r2, r3]
   268f4:	ldr.w	r6, [r8, #24]
   268f8:	ldr	r3, [r3, #0]
   268fa:	str	r3, [sp, #116]	; 0x74
   268fc:	mov.w	r3, #0
   26900:	bl	2636c <btrfs_run_delayed_refs@@Base>
   26904:	cmp	r0, #0
   26906:	bne.w	26aa0 <btrfs_fix_block_accounting@@Base+0x1c4>
   2690a:	movs	r7, #0
   2690c:	mov	fp, r7
   2690e:	mov	sl, r7
   26910:	mov	r9, r7
   26912:	mov	r2, r7
   26914:	mov	r3, fp
   26916:	mov	r0, r8
   26918:	bl	222b8 <btrfs_lookup_first_block_group@@Base>
   2691c:	mov	r4, r0
   2691e:	cbz	r0, 2696c <btrfs_fix_block_accounting@@Base+0x90>
   26920:	ldrd	r2, r3, [r0, #40]	; 0x28
   26924:	ldr.w	r7, [r0, #49]	; 0x31
   26928:	ldr.w	r1, [r0, #53]	; 0x35
   2692c:	adds	r7, r7, r2
   2692e:	strd	sl, r9, [r0, #72]	; 0x48
   26932:	adc.w	fp, r1, r3
   26936:	ldr	r3, [r0, #60]	; 0x3c
   26938:	movs	r1, #1
   2693a:	strd	sl, r9, [r3, #16]
   2693e:	ldrd	r2, r3, [r0, #40]	; 0x28
   26942:	ldr.w	r0, [r6, #464]	; 0x1d0
   26946:	str	r1, [sp, #8]
   26948:	ldr.w	ip, [r4, #49]	; 0x31
   2694c:	adds	r0, #128	; 0x80
   2694e:	ldr.w	lr, [r4, #53]	; 0x35
   26952:	adds.w	ip, ip, r2
   26956:	adc.w	lr, lr, r3
   2695a:	adds.w	r4, ip, #4294967295	; 0xffffffff
   2695e:	adc.w	lr, lr, #4294967295	; 0xffffffff
   26962:	strd	r4, lr, [sp]
   26966:	bl	19d40 <set_extent_bits@@Base>
   2696a:	b.n	26912 <btrfs_fix_block_accounting@@Base+0x36>
   2696c:	add	r7, sp, #48	; 0x30
   2696e:	add.w	sl, sp, #28
   26972:	mov	r0, r7
   26974:	bl	1b2cc <btrfs_init_path@@Base>
   26978:	ldr.w	r1, [r6, #464]	; 0x1d0
   2697c:	movs	r3, #168	; 0xa8
   2697e:	strd	r4, r4, [sp]
   26982:	strb.w	r3, [sp, #36]	; 0x24
   26986:	mov	r2, sl
   26988:	mov	r3, r7
   2698a:	ldr	r1, [r1, #24]
   2698c:	mov	r0, r5
   2698e:	strb.w	r4, [sp, #37]	; 0x25
   26992:	strb.w	r4, [sp, #38]	; 0x26
   26996:	strb.w	r4, [sp, #39]	; 0x27
   2699a:	strb.w	r4, [sp, #40]	; 0x28
   2699e:	strb.w	r4, [sp, #41]	; 0x29
   269a2:	strb.w	r4, [sp, #42]	; 0x2a
   269a6:	strb.w	r4, [sp, #43]	; 0x2b
   269aa:	strb.w	r4, [sp, #44]	; 0x2c
   269ae:	strd	r4, r4, [sp, #28]
   269b2:	bl	1d6c0 <btrfs_search_slot@@Base>
   269b6:	subs	r3, r0, #0
   269b8:	blt.n	26a7c <btrfs_fix_block_accounting@@Base+0x1a0>
   269ba:	ldr.w	r9, [pc, #248]	; 26ab4 <btrfs_fix_block_accounting@@Base+0x1d8>
   269be:	movs	r4, #0
   269c0:	ldr.w	fp, [pc, #244]	; 26ab8 <btrfs_fix_block_accounting@@Base+0x1dc>
   269c4:	movs	r5, #0
   269c6:	add	r9, pc
   269c8:	addw	r9, r9, #851	; 0x353
   269cc:	add	fp, pc
   269ce:	ldr	r0, [sp, #48]	; 0x30
   269d0:	ldr	r2, [sp, #80]	; 0x50
   269d2:	ldr.w	r3, [r0, #192]	; 0xc0
   269d6:	cmp	r2, r3
   269d8:	bcc.n	269f8 <btrfs_fix_block_accounting@@Base+0x11c>
   269da:	ldr.w	r0, [r6, #464]	; 0x1d0
   269de:	mov	r1, r7
   269e0:	movs	r2, #0
   269e2:	strb.w	r2, [sp, #113]	; 0x71
   269e6:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   269ea:	subs	r3, r0, #0
   269ec:	blt.n	26a7c <btrfs_fix_block_accounting@@Base+0x1a0>
   269ee:	mov.w	r2, #0
   269f2:	bne.n	26a90 <btrfs_fix_block_accounting@@Base+0x1b4>
   269f4:	ldr	r0, [sp, #48]	; 0x30
   269f6:	ldr	r2, [sp, #80]	; 0x50
   269f8:	mov	r1, sl
   269fa:	bl	21a5c <btrfs_create_tree@@Base+0x258>
   269fe:	ldrb.w	r3, [sp, #36]	; 0x24
   26a02:	cmp	r3, #168	; 0xa8
   26a04:	bne.n	26a44 <btrfs_fix_block_accounting@@Base+0x168>
   26a06:	ldr.w	r3, [sp, #37]	; 0x25
   26a0a:	movs	r1, #1
   26a0c:	ldr.w	r2, [sp, #41]	; 0x29
   26a10:	movs	r0, #0
   26a12:	adds	r4, r4, r3
   26a14:	strd	r1, r0, [sp, #8]
   26a18:	adc.w	r5, r2, r5
   26a1c:	mov	r0, r6
   26a1e:	strd	r3, r2, [sp]
   26a22:	ldrd	r2, r3, [sp, #28]
   26a26:	bl	246d8 <btrfs_update_block_group@@Base>
   26a2a:	movw	r3, #3354	; 0xd1a
   26a2e:	mov	r2, r9
   26a30:	mov	r1, fp
   26a32:	str	r0, [sp, #0]
   26a34:	ldr	r0, [pc, #132]	; (26abc <btrfs_fix_block_accounting@@Base+0x1e0>)
   26a36:	add	r0, pc
   26a38:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   26a3c:	ldr	r3, [sp, #80]	; 0x50
   26a3e:	adds	r3, #1
   26a40:	str	r3, [sp, #80]	; 0x50
   26a42:	b.n	269ce <btrfs_fix_block_accounting@@Base+0xf2>
   26a44:	cmp	r3, #169	; 0xa9
   26a46:	bne.n	26a3c <btrfs_fix_block_accounting@@Base+0x160>
   26a48:	ldr.w	r3, [r8, #384]	; 0x180
   26a4c:	movs	r2, #1
   26a4e:	movs	r1, #0
   26a50:	mov	r0, r6
   26a52:	adds	r4, r4, r3
   26a54:	strd	r2, r1, [sp, #8]
   26a58:	str	r3, [sp, #0]
   26a5a:	mov.w	r3, #0
   26a5e:	str	r3, [sp, #4]
   26a60:	adc.w	r5, r5, #0
   26a64:	ldrd	r2, r3, [sp, #28]
   26a68:	bl	246d8 <btrfs_update_block_group@@Base>
   26a6c:	mov	r3, r0
   26a6e:	cmp	r0, #0
   26a70:	beq.n	26a3c <btrfs_fix_block_accounting@@Base+0x160>
   26a72:	mov	r0, r7
   26a74:	str	r3, [sp, #20]
   26a76:	bl	1b2dc <btrfs_release_path@@Base>
   26a7a:	ldr	r3, [sp, #20]
   26a7c:	ldr	r1, [pc, #64]	; (26ac0 <btrfs_fix_block_accounting@@Base+0x1e4>)
   26a7e:	ldr	r2, [pc, #48]	; (26ab0 <btrfs_fix_block_accounting@@Base+0x1d4>)
   26a80:	add	r1, pc
   26a82:	ldr	r2, [r1, r2]
   26a84:	ldr	r1, [r2, #0]
   26a86:	ldr	r2, [sp, #116]	; 0x74
   26a88:	eors	r1, r2
   26a8a:	beq.n	26aa4 <btrfs_fix_block_accounting@@Base+0x1c8>
   26a8c:	blx	88e4 <__stack_chk_fail@plt>
   26a90:	ldr.w	r3, [r6, #464]	; 0x1d0
   26a94:	ldr.w	r3, [r3, #308]	; 0x134
   26a98:	str	r4, [r3, #120]	; 0x78
   26a9a:	str	r5, [r3, #124]	; 0x7c
   26a9c:	mov	r3, r2
   26a9e:	b.n	26a72 <btrfs_fix_block_accounting@@Base+0x196>
   26aa0:	mov	r3, r0
   26aa2:	b.n	26a7c <btrfs_fix_block_accounting@@Base+0x1a0>
   26aa4:	mov	r0, r3
   26aa6:	add	sp, #124	; 0x7c
   26aa8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26aac:	movs	r4, #76	; 0x4c
   26aae:	movs	r4, r0
   26ab0:	lsls	r4, r7, #9
   26ab2:	movs	r0, r0
   26ab4:	cbnz	r7, 26ac2 <btrfs_fix_block_accounting@@Base+0x1e6>
   26ab6:	movs	r1, r0
   26ab8:	sxth	r1, r1
   26aba:	movs	r1, r0
   26abc:	ldrb	r7, [r0, #25]
   26abe:	movs	r1, r0
   26ac0:	movs	r2, #176	; 0xb0
   26ac2:	movs	r4, r0

00026ac4 <btrfs_record_file_extent@@Base>:
   26ac4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ac8:	mov	r6, r0
   26aca:	vpush	{d8}
   26ace:	mov	fp, r1
   26ad0:	sub	sp, #156	; 0x9c
   26ad2:	strd	r2, r3, [sp, #96]	; 0x60
   26ad6:	ldr	r3, [sp, #200]	; 0xc8
   26ad8:	ldr.w	r2, [pc, #1080]	; 26f14 <btrfs_record_file_extent@@Base+0x450>
   26adc:	ldrd	r9, sl, [sp, #216]	; 0xd8
   26ae0:	str	r3, [sp, #76]	; 0x4c
   26ae2:	add	r2, pc
   26ae4:	ldr	r3, [sp, #208]	; 0xd0
   26ae6:	str	r3, [sp, #68]	; 0x44
   26ae8:	ldr	r3, [sp, #212]	; 0xd4
   26aea:	str	r3, [sp, #72]	; 0x48
   26aec:	ldr.w	r3, [pc, #1064]	; 26f18 <btrfs_record_file_extent@@Base+0x454>
   26af0:	ldr	r3, [r2, r3]
   26af2:	ldr	r3, [r3, #0]
   26af4:	str	r3, [sp, #148]	; 0x94
   26af6:	mov.w	r3, #0
   26afa:	ldrd	r3, r4, [sp, #224]	; 0xe0
   26afe:	strd	r3, r4, [sp, #56]	; 0x38
   26b02:	movs	r4, #0
   26b04:	ldr.w	r3, [pc, #1044]	; 26f1c <btrfs_record_file_extent@@Base+0x458>
   26b08:	add	r3, pc
   26b0a:	addw	r3, r3, #878	; 0x36e
   26b0e:	vmov	s16, r3
   26b12:	ldr.w	r3, [pc, #1036]	; 26f20 <btrfs_record_file_extent@@Base+0x45c>
   26b16:	add	r3, pc
   26b18:	vmov	s17, r3
   26b1c:	ldrd	r2, r3, [sp, #56]	; 0x38
   26b20:	orrs	r3, r2
   26b22:	beq.n	26b98 <btrfs_record_file_extent@@Base+0xd4>
   26b24:	orrs.w	r3, r9, sl
   26b28:	bne.n	26b86 <btrfs_record_file_extent@@Base+0xc2>
   26b2a:	ldrd	r3, r4, [sp, #224]	; 0xe0
   26b2e:	mov	r1, fp
   26b30:	mov	r0, r6
   26b32:	strd	r9, sl, [sp, #8]
   26b36:	strd	r3, r4, [sp, #24]
   26b3a:	strd	r3, r4, [sp, #16]
   26b3e:	ldr	r3, [sp, #68]	; 0x44
   26b40:	str	r3, [sp, #0]
   26b42:	ldr	r3, [sp, #72]	; 0x48
   26b44:	str	r3, [sp, #4]
   26b46:	ldrd	r2, r3, [sp, #96]	; 0x60
   26b4a:	bl	31552 <btrfs_insert_file_extent@@Base>
   26b4e:	mov	r4, r0
   26b50:	cmp	r4, #0
   26b52:	blt.n	26b98 <btrfs_record_file_extent@@Base+0xd4>
   26b54:	ldr	r3, [sp, #224]	; 0xe0
   26b56:	ldr	r2, [sp, #224]	; 0xe0
   26b58:	adds.w	r9, r9, r3
   26b5c:	ldr	r3, [sp, #228]	; 0xe4
   26b5e:	adc.w	sl, sl, r3
   26b62:	ldr	r3, [sp, #68]	; 0x44
   26b64:	adds	r3, r3, r2
   26b66:	ldr	r2, [sp, #228]	; 0xe4
   26b68:	str	r3, [sp, #68]	; 0x44
   26b6a:	ldr	r3, [sp, #72]	; 0x48
   26b6c:	adc.w	r3, r2, r3
   26b70:	ldr	r2, [sp, #224]	; 0xe0
   26b72:	str	r3, [sp, #72]	; 0x48
   26b74:	ldr	r3, [sp, #56]	; 0x38
   26b76:	subs	r3, r3, r2
   26b78:	ldr	r2, [sp, #228]	; 0xe4
   26b7a:	str	r3, [sp, #56]	; 0x38
   26b7c:	ldr	r3, [sp, #60]	; 0x3c
   26b7e:	sbc.w	r3, r3, r2
   26b82:	str	r3, [sp, #60]	; 0x3c
   26b84:	b.n	26b1c <btrfs_record_file_extent@@Base+0x58>
   26b86:	ldr.w	r3, [fp, #464]	; 0x1d0
   26b8a:	ldr	r7, [r3, #24]
   26b8c:	bl	1b2d4 <btrfs_alloc_path@@Base>
   26b90:	mov	r5, r0
   26b92:	cbnz	r0, 26bae <btrfs_record_file_extent@@Base+0xea>
   26b94:	mvn.w	r4, #11
   26b98:	ldr	r2, [pc, #904]	; (26f24 <btrfs_record_file_extent@@Base+0x460>)
   26b9a:	ldr	r3, [pc, #892]	; (26f18 <btrfs_record_file_extent@@Base+0x454>)
   26b9c:	add	r2, pc
   26b9e:	ldr	r3, [r2, r3]
   26ba0:	ldr	r2, [r3, #0]
   26ba2:	ldr	r3, [sp, #148]	; 0x94
   26ba4:	eors	r2, r3
   26ba6:	beq.w	26f06 <btrfs_record_file_extent@@Base+0x442>
   26baa:	blx	88e4 <__stack_chk_fail@plt>
   26bae:	mov.w	r2, #4294967295	; 0xffffffff
   26bb2:	movs	r3, #108	; 0x6c
   26bb4:	movs	r0, #0
   26bb6:	strb.w	r3, [sp, #136]	; 0x88
   26bba:	strb.w	r2, [sp, #137]	; 0x89
   26bbe:	mov	r3, r5
   26bc0:	strb.w	r2, [sp, #138]	; 0x8a
   26bc4:	mov	r1, r7
   26bc6:	strb.w	r2, [sp, #139]	; 0x8b
   26bca:	strb.w	r2, [sp, #140]	; 0x8c
   26bce:	strb.w	r2, [sp, #141]	; 0x8d
   26bd2:	strb.w	r2, [sp, #142]	; 0x8e
   26bd6:	strb.w	r2, [sp, #143]	; 0x8f
   26bda:	strb.w	r2, [sp, #144]	; 0x90
   26bde:	add	r2, sp, #128	; 0x80
   26be0:	strd	r0, r0, [sp]
   26be4:	strd	r9, sl, [sp, #128]	; 0x80
   26be8:	bl	1d6c0 <btrfs_search_slot@@Base>
   26bec:	subs	r4, r0, #0
   26bee:	blt.w	26efe <btrfs_record_file_extent@@Base+0x43a>
   26bf2:	ldr	r0, [pc, #820]	; (26f28 <btrfs_record_file_extent@@Base+0x464>)
   26bf4:	ite	eq
   26bf6:	moveq	r3, #1
   26bf8:	movne	r3, #0
   26bfa:	vmov	r2, s16
   26bfe:	vmov	r1, s17
   26c02:	add	r0, pc
   26c04:	str	r3, [sp, #0]
   26c06:	movw	r3, #3407	; 0xd4f
   26c0a:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   26c0e:	movs	r2, #0
   26c10:	movs	r3, #0
   26c12:	mov	r1, r5
   26c14:	mov	r0, r7
   26c16:	bl	1ee1c <btrfs_previous_extent_item@@Base>
   26c1a:	subs	r4, r0, #0
   26c1c:	blt.w	26efe <btrfs_record_file_extent@@Base+0x43a>
   26c20:	ldrd	r2, r3, [sp, #224]	; 0xe0
   26c24:	ldrd	r0, r1, [sp, #224]	; 0xe0
   26c28:	strd	r2, r3, [sp, #40]	; 0x28
   26c2c:	movs	r3, #0
   26c2e:	cmp	r3, r1
   26c30:	mov.w	r2, #134217728	; 0x8000000
   26c34:	it	eq
   26c36:	cmpeq	r2, r0
   26c38:	it	cc
   26c3a:	strdcc	r2, r3, [sp, #40]	; 0x28
   26c3e:	cmp	r4, #0
   26c40:	bne.w	26dfa <btrfs_record_file_extent@@Base+0x336>
   26c44:	add	r3, sp, #120	; 0x78
   26c46:	add	r2, sp, #112	; 0x70
   26c48:	add.w	r0, r7, #464	; 0x1d0
   26c4c:	mov	r1, r5
   26c4e:	bl	21fd4 <btrfs_create_tree@@Base+0x7d0>
   26c52:	ldr	r2, [sp, #120]	; 0x78
   26c54:	ldr	r3, [sp, #112]	; 0x70
   26c56:	adds	r3, r3, r2
   26c58:	ldr	r2, [sp, #116]	; 0x74
   26c5a:	str	r3, [sp, #104]	; 0x68
   26c5c:	ldr	r3, [sp, #124]	; 0x7c
   26c5e:	adc.w	r3, r2, r3
   26c62:	str	r3, [sp, #108]	; 0x6c
   26c64:	ldrd	r3, r4, [sp, #104]	; 0x68
   26c68:	cmp	sl, r4
   26c6a:	it	eq
   26c6c:	cmpeq	r9, r3
   26c6e:	bcs.w	26dfa <btrfs_record_file_extent@@Base+0x336>
   26c72:	add.w	r0, r7, #464	; 0x1d0
   26c76:	add	r3, sp, #128	; 0x80
   26c78:	add	r2, sp, #120	; 0x78
   26c7a:	mov	r1, r5
   26c7c:	bl	21fd4 <btrfs_create_tree@@Base+0x7d0>
   26c80:	ldrd	r3, r4, [sp, #120]	; 0x78
   26c84:	ldr	r2, [pc, #676]	; (26f2c <btrfs_record_file_extent@@Base+0x468>)
   26c86:	cmp	sl, r4
   26c88:	ldr	r1, [pc, #676]	; (26f30 <btrfs_record_file_extent@@Base+0x46c>)
   26c8a:	it	eq
   26c8c:	cmpeq	r9, r3
   26c8e:	ldr	r0, [pc, #676]	; (26f34 <btrfs_record_file_extent@@Base+0x470>)
   26c90:	add	r2, pc
   26c92:	strd	r3, r4, [sp, #48]	; 0x30
   26c96:	addw	r2, r2, #906	; 0x38a
   26c9a:	ite	cc
   26c9c:	movcc	r3, #1
   26c9e:	movcs	r3, #0
   26ca0:	add	r1, pc
   26ca2:	str	r3, [sp, #0]
   26ca4:	add	r0, pc
   26ca6:	movw	r3, #3487	; 0xd9f
   26caa:	bl	21db4 <btrfs_create_tree@@Base+0x5b0>
   26cae:	ldr	r3, [sp, #48]	; 0x30
   26cb0:	ldrd	r8, r7, [sp, #128]	; 0x80
   26cb4:	subs.w	r3, r9, r3
   26cb8:	str	r3, [sp, #80]	; 0x50
   26cba:	ldr	r3, [sp, #52]	; 0x34
   26cbc:	sbc.w	r3, sl, r3
   26cc0:	mov	r0, r5
   26cc2:	str	r3, [sp, #84]	; 0x54
   26cc4:	bl	1b2dc <btrfs_release_path@@Base>
   26cc8:	ldr	r3, [sp, #96]	; 0x60
   26cca:	mov	r2, r5
   26ccc:	mov	r1, fp
   26cce:	mov	r0, r6
   26cd0:	str	r3, [sp, #128]	; 0x80
   26cd2:	ldr	r3, [sp, #100]	; 0x64
   26cd4:	str	r3, [sp, #132]	; 0x84
   26cd6:	ldr	r3, [sp, #68]	; 0x44
   26cd8:	str.w	r3, [sp, #137]	; 0x89
   26cdc:	ldr	r3, [sp, #72]	; 0x48
   26cde:	str.w	r3, [sp, #141]	; 0x8d
   26ce2:	movs	r3, #108	; 0x6c
   26ce4:	strb.w	r3, [sp, #136]	; 0x88
   26ce8:	movs	r3, #53	; 0x35
   26cea:	str	r3, [sp, #120]	; 0x78
   26cec:	movs	r3, #1
   26cee:	str	r3, [sp, #4]
   26cf0:	add	r3, sp, #120	; 0x78
   26cf2:	str	r3, [sp, #0]
   26cf4:	add	r3, sp, #128	; 0x80
   26cf6:	bl	1e490 <btrfs_insert_empty_items@@Base>
   26cfa:	mov	r4, r0
   26cfc:	cmp	r0, #0
   26cfe:	bne.w	26efe <btrfs_record_file_extent@@Base+0x43a>
   26d02:	ldr	r0, [r5, #0]
   26d04:	mov.w	lr, #25
   26d08:	ldr	r3, [r5, #32]
   26d0a:	add.w	r2, r0, #96	; 0x60
   26d0e:	ldr	r1, [r6, #8]
   26d10:	ldr.w	ip, [r6, #12]
   26d14:	mla	r3, lr, r3, r2
   26d18:	ldr.w	lr, [r3, #118]	; 0x76
   26d1c:	add.w	lr, lr, #101	; 0x65
   26d20:	add.w	r3, r2, lr
   26d24:	str.w	r1, [r2, lr]
   26d28:	mov.w	r2, #1
   26d2c:	strb	r2, [r3, #20]
   26d2e:	ldr	r2, [sp, #48]	; 0x30
   26d30:	str.w	ip, [r3, #4]
   26d34:	strb	r4, [r3, #16]
   26d36:	str.w	r2, [r3, #21]
   26d3a:	ldr	r2, [sp, #52]	; 0x34
   26d3c:	strb	r4, [r3, #17]
   26d3e:	strb	r4, [r3, #18]
   26d40:	str.w	r2, [r3, #25]
   26d44:	ldr	r2, [sp, #80]	; 0x50
   26d46:	strb	r4, [r3, #19]
   26d48:	str.w	r8, [r3, #29]
   26d4c:	str.w	r2, [r3, #37]	; 0x25
   26d50:	ldr	r2, [sp, #84]	; 0x54
   26d52:	str.w	r7, [r3, #33]	; 0x21
   26d56:	str.w	r8, [r3, #8]
   26d5a:	str.w	r2, [r3, #41]	; 0x29
   26d5e:	ldr	r2, [sp, #40]	; 0x28
   26d60:	str	r7, [r3, #12]
   26d62:	str.w	r2, [r3, #45]	; 0x2d
   26d66:	ldr	r2, [sp, #44]	; 0x2c
   26d68:	str.w	r2, [r3, #49]	; 0x31
   26d6c:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   26d70:	ldr	r3, [sp, #76]	; 0x4c
   26d72:	ldr	r2, [sp, #76]	; 0x4c
   26d74:	mov	r0, r5
   26d76:	ldr	r1, [sp, #40]	; 0x28
   26d78:	ldr	r3, [r3, #24]
   26d7a:	ldr	r2, [r2, #28]
   26d7c:	adds	r3, r3, r1
   26d7e:	ldr	r1, [sp, #44]	; 0x2c
   26d80:	adc.w	r2, r1, r2
   26d84:	ldr	r1, [sp, #76]	; 0x4c
   26d86:	str	r3, [r1, #24]
   26d88:	str	r2, [r1, #28]
   26d8a:	bl	1b2dc <btrfs_release_path@@Base>
   26d8e:	ldr	r3, [sp, #68]	; 0x44
   26d90:	ldr	r2, [sp, #80]	; 0x50
   26d92:	mov	r0, r6
   26d94:	ldr	r1, [sp, #84]	; 0x54
   26d96:	subs	r2, r3, r2
   26d98:	ldr	r3, [sp, #72]	; 0x48
   26d9a:	strd	r8, r7, [sp]
   26d9e:	sbc.w	r3, r3, r1
   26da2:	strd	r2, r3, [sp, #32]
   26da6:	ldr	r3, [sp, #96]	; 0x60
   26da8:	mov	r1, fp
   26daa:	ldr.w	r2, [fp, #447]	; 0x1bf
   26dae:	str	r3, [sp, #24]
   26db0:	ldr	r3, [sp, #100]	; 0x64
   26db2:	str	r3, [sp, #28]
   26db4:	ldr.w	r3, [fp, #451]	; 0x1c3
   26db8:	strd	r2, r3, [sp, #16]
   26dbc:	movs	r2, #0
   26dbe:	movs	r3, #0
   26dc0:	strd	r2, r3, [sp, #8]
   26dc4:	ldrd	r2, r3, [sp, #48]	; 0x30
   26dc8:	bl	23578 <btrfs_inc_extent_ref@@Base>
   26dcc:	mov	r4, r0
   26dce:	cmp	r0, #0
   26dd0:	bne.w	26efe <btrfs_record_file_extent@@Base+0x43a>
   26dd4:	ldr	r3, [sp, #80]	; 0x50
   26dd6:	subs.w	r3, r8, r3
   26dda:	str	r3, [sp, #224]	; 0xe0
   26ddc:	ldr	r3, [sp, #84]	; 0x54
   26dde:	sbc.w	r3, r7, r3
   26de2:	str	r3, [sp, #228]	; 0xe4
   26de4:	ldrd	r0, r1, [sp, #224]	; 0xe0
   26de8:	ldrd	r2, r3, [sp, #40]	; 0x28
   26dec:	cmp	r3, r1
   26dee:	it	eq
   26df0:	cmpeq	r2, r0
   26df2:	it	cc
   26df4:	strdcc	r2, r3, [sp, #224]	; 0xe0
   26df8:	b.n	26efe <btrfs_record_file_extent@@Base+0x43a>
   26dfa:	ldr	r3, [sp, #40]	; 0x28
   26dfc:	mov	r1, r5
   26dfe:	mov	r0, r7
   26e00:	adds.w	r3, r9, r3
   26e04:	str	r3, [sp, #88]	; 0x58
   26e06:	ldr	r3, [sp, #44]	; 0x2c
   26e08:	adc.w	r3, sl, r3
   26e0c:	str	r3, [sp, #92]	; 0x5c
   26e0e:	ldrd	r2, r3, [sp, #88]	; 0x58
   26e12:	bl	1eec0 <btrfs_next_extent_item@@Base>
   26e16:	subs	r4, r0, #0
   26e18:	blt.n	26efe <btrfs_record_file_extent@@Base+0x43a>
   26e1a:	bne.n	26e3c <btrfs_record_file_extent@@Base+0x378>
   26e1c:	add	r3, sp, #120	; 0x78
   26e1e:	add	r2, sp, #112	; 0x70
   26e20:	add.w	r0, r7, #464	; 0x1d0
   26e24:	mov	r1, r5
   26e26:	bl	21fd4 <btrfs_create_tree@@Base+0x7d0>
   26e2a:	ldrd	r2, r3, [sp, #112]	; 0x70
   26e2e:	ldrd	r0, r1, [sp, #88]	; 0x58
   26e32:	cmp	r3, r1
   26e34:	it	eq
   26e36:	cmpeq	r2, r0
   26e38:	bcc.w	26c72 <btrfs_record_file_extent@@Base+0x1ae>
   26e3c:	mov	r0, r5
   26e3e:	mov.w	r8, #1
   26e42:	bl	1b2dc <btrfs_release_path@@Base>
   26e46:	ldr	r3, [sp, #40]	; 0x28
   26e48:	mov	r2, r5
   26e4a:	mov	r1, r7
   26e4c:	mov	r0, r6
   26e4e:	str.w	r8, [sp, #4]
   26e52:	str.w	r3, [sp, #137]	; 0x89
   26e56:	ldr	r3, [sp, #44]	; 0x2c
   26e58:	strd	r9, sl, [sp, #128]	; 0x80
   26e5c:	str.w	r3, [sp, #141]	; 0x8d
   26e60:	movs	r3, #168	; 0xa8
   26e62:	strb.w	r3, [sp, #136]	; 0x88
   26e66:	movs	r3, #24
   26e68:	str	r3, [sp, #120]	; 0x78
   26e6a:	add	r3, sp, #120	; 0x78
   26e6c:	str	r3, [sp, #0]
   26e6e:	add	r3, sp, #128	; 0x80
   26e70:	bl	1e490 <btrfs_insert_empty_items@@Base>
   26e74:	mov	r4, r0
   26e76:	cmp	r0, #0
   26e78:	bne.n	26ef8 <btrfs_record_file_extent@@Base+0x434>
   26e7a:	ldr	r0, [r5, #0]
   26e7c:	movs	r2, #25
   26e7e:	ldr	r3, [r5, #32]
   26e80:	add.w	r1, r0, #96	; 0x60
   26e84:	mla	r3, r2, r3, r1
   26e88:	ldr.w	r2, [r3, #118]	; 0x76
   26e8c:	adds	r2, #101	; 0x65
   26e8e:	adds	r3, r1, r2
   26e90:	strb	r4, [r1, r2]
   26e92:	strb	r4, [r3, #1]
   26e94:	strb	r4, [r3, #2]
   26e96:	strb	r4, [r3, #3]
   26e98:	strb	r4, [r3, #4]
   26e9a:	strb	r4, [r3, #5]
   26e9c:	strb	r4, [r3, #6]
   26e9e:	strb	r4, [r3, #7]
   26ea0:	strb	r4, [r3, #8]
   26ea2:	strb	r4, [r3, #9]
   26ea4:	strb	r4, [r3, #10]
   26ea6:	strb	r4, [r3, #11]
   26ea8:	strb	r4, [r3, #12]
   26eaa:	strb	r4, [r3, #13]
   26eac:	strb	r4, [r3, #14]
   26eae:	strb	r4, [r3, #15]
   26eb0:	strb.w	r8, [r3, #16]
   26eb4:	strb	r4, [r3, #17]
   26eb6:	strb	r4, [r3, #18]
   26eb8:	strb	r4, [r3, #19]
   26eba:	strb	r4, [r3, #20]
   26ebc:	strb	r4, [r3, #21]
   26ebe:	strb	r4, [r3, #22]
   26ec0:	strb	r4, [r3, #23]
   26ec2:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   26ec6:	strd	r8, r4, [sp, #8]
   26eca:	ldrd	r3, r4, [sp, #40]	; 0x28
   26ece:	mov	r2, r9
   26ed0:	mov	r0, fp
   26ed2:	strd	r3, r4, [sp]
   26ed6:	mov	r3, sl
   26ed8:	bl	246d8 <btrfs_update_block_group@@Base>
   26edc:	mov	r4, r0
   26ede:	cbnz	r0, 26efe <btrfs_record_file_extent@@Base+0x43a>
   26ee0:	mov.w	r1, #4294967295	; 0xffffffff
   26ee4:	mov	r0, r6
   26ee6:	bl	2636c <btrfs_run_delayed_refs@@Base>
   26eea:	movs	r3, #0
   26eec:	ldrd	r8, r7, [sp, #40]	; 0x28
   26ef0:	strd	r9, sl, [sp, #48]	; 0x30
   26ef4:	str	r3, [sp, #80]	; 0x50
   26ef6:	b.n	26cc0 <btrfs_record_file_extent@@Base+0x1fc>
   26ef8:	cmn.w	r0, #17
   26efc:	beq.n	26ee0 <btrfs_record_file_extent@@Base+0x41c>
   26efe:	mov	r0, r5
   26f00:	bl	1b302 <btrfs_free_path@@Base>
   26f04:	b.n	26b50 <btrfs_record_file_extent@@Base+0x8c>
   26f06:	mov	r0, r4
   26f08:	add	sp, #156	; 0x9c
   26f0a:	vpop	{d8}
   26f0e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26f12:	nop
   26f14:	movs	r2, #78	; 0x4e
   26f16:	movs	r4, r0
   26f18:	lsls	r4, r7, #9
   26f1a:	movs	r0, r0
   26f1c:			; <UNDEFINED> instruction: 0xb7ed
   26f1e:	movs	r1, r0
   26f20:	sub	sp, #252	; 0xfc
   26f22:	movs	r1, r0
   26f24:	movs	r1, #148	; 0x94
   26f26:	movs	r4, r0
   26f28:	strh	r0, [r2, #14]
   26f2a:	movs	r1, r0
   26f2c:	cpsie	af
   26f2e:	movs	r1, r0
   26f30:	add	r7, sp, #212	; 0xd4
   26f32:	movs	r1, r0
   26f34:			; <UNDEFINED> instruction: 0xb639
   26f36:	movs	r1, r0
   26f38:	ldr	r2, [pc, #60]	; (26f78 <btrfs_record_file_extent@@Base+0x4b4>)
   26f3a:	movs	r1, #16
   26f3c:	ldr	r3, [pc, #60]	; (26f7c <btrfs_record_file_extent@@Base+0x4b8>)
   26f3e:	push	{r4, lr}
   26f40:	add	r2, pc
   26f42:	sub	sp, #72	; 0x48
   26f44:	add	r4, sp, #4
   26f46:	ldr	r3, [r2, r3]
   26f48:	mov	r0, r4
   26f4a:	ldr	r3, [r3, #0]
   26f4c:	str	r3, [sp, #68]	; 0x44
   26f4e:	mov.w	r3, #0
   26f52:	blx	8ae0 <backtrace@plt>
   26f56:	movs	r2, #2
   26f58:	mov	r1, r0
   26f5a:	mov	r0, r4
   26f5c:	blx	8e50 <backtrace_symbols_fd@plt>
   26f60:	ldr	r2, [pc, #28]	; (26f80 <btrfs_record_file_extent@@Base+0x4bc>)
   26f62:	ldr	r3, [pc, #24]	; (26f7c <btrfs_record_file_extent@@Base+0x4b8>)
   26f64:	add	r2, pc
   26f66:	ldr	r3, [r2, r3]
   26f68:	ldr	r2, [r3, #0]
   26f6a:	ldr	r3, [sp, #68]	; 0x44
   26f6c:	eors	r2, r3
   26f6e:	beq.n	26f74 <btrfs_record_file_extent@@Base+0x4b0>
   26f70:	blx	88e4 <__stack_chk_fail@plt>
   26f74:	add	sp, #72	; 0x48
   26f76:	pop	{r4, pc}
   26f78:	adds	r0, r6, #7
   26f7a:	movs	r4, r0
   26f7c:	lsls	r4, r7, #9
   26f7e:	movs	r0, r0
   26f80:	adds	r4, r1, #7
   26f82:	movs	r4, r0
   26f84:	push	{r0, r1, r2, r3, r4, lr}
   26f86:	ldr	r4, [pc, #40]	; (26fb0 <btrfs_record_file_extent@@Base+0x4ec>)
   26f88:	ldr	r5, [pc, #40]	; (26fb4 <btrfs_record_file_extent@@Base+0x4f0>)
   26f8a:	add	r4, pc
   26f8c:	ldr	r4, [r4, r5]
   26f8e:	ldr	r5, [sp, #24]
   26f90:	strd	r3, r2, [sp]
   26f94:	mov	r3, r1
   26f96:	ldr	r2, [pc, #32]	; (26fb8 <btrfs_record_file_extent@@Base+0x4f4>)
   26f98:	movs	r1, #1
   26f9a:	strd	r0, r5, [sp, #8]
   26f9e:	add	r2, pc
   26fa0:	ldr	r0, [r4, #0]
   26fa2:	blx	8ca0 <__fprintf_chk@plt+0x4>
   26fa6:	bl	26f38 <btrfs_record_file_extent@@Base+0x474>
   26faa:	blx	8e08 <abort@plt>
   26fae:	nop
   26fb0:	adds	r6, r4, #6
   26fb2:	movs	r4, r0
   26fb4:	lsls	r4, r1, #10
   26fb6:	movs	r0, r0
   26fb8:	str	r1, [r1, #0]
   26fba:	movs	r1, r0
   26fbc:	push	{r0, r1, r2, lr}
   26fbe:	movs	r3, #1
   26fc0:	ldr	r2, [pc, #16]	; (26fd4 <btrfs_record_file_extent@@Base+0x510>)
   26fc2:	ldr	r1, [pc, #20]	; (26fd8 <btrfs_record_file_extent@@Base+0x514>)
   26fc4:	ldr	r0, [pc, #20]	; (26fdc <btrfs_record_file_extent@@Base+0x518>)
   26fc6:	add	r2, pc
   26fc8:	str	r3, [sp, #0]
   26fca:	add	r1, pc
   26fcc:	add	r0, pc
   26fce:	movs	r3, #55	; 0x37
   26fd0:	bl	26f84 <btrfs_record_file_extent@@Base+0x4c0>
   26fd4:			; <UNDEFINED> instruction: 0xb7e5
   26fd6:	movs	r1, r0
   26fd8:			; <UNDEFINED> instruction: 0xb6d0
   26fda:	movs	r1, r0
   26fdc:	add	r7, sp, #420	; 0x1a4
   26fde:	movs	r1, r0
   26fe0:	push	{r4, r5, lr}
   26fe2:	sub	sp, #20
   26fe4:	ldr	r4, [pc, #36]	; (2700c <btrfs_record_file_extent@@Base+0x548>)
   26fe6:	ldr	r5, [pc, #40]	; (27010 <btrfs_record_file_extent@@Base+0x54c>)
   26fe8:	add	r4, pc
   26fea:	ldr	r4, [r4, r5]
   26fec:	ldr	r5, [sp, #32]
   26fee:	strd	r3, r2, [sp]
   26ff2:	mov	r3, r1
   26ff4:	ldr	r2, [pc, #28]	; (27014 <btrfs_record_file_extent@@Base+0x550>)
   26ff6:	movs	r1, #1
   26ff8:	strd	r0, r5, [sp, #8]
   26ffc:	add	r2, pc
   26ffe:	ldr	r0, [r4, #0]
   27000:	blx	8ca0 <__fprintf_chk@plt+0x4>
   27004:	add	sp, #20
   27006:	ldmia.w	sp!, {r4, r5, lr}
   2700a:	b.n	26f38 <btrfs_record_file_extent@@Base+0x474>
   2700c:	adds	r0, r1, #5
   2700e:	movs	r4, r0
   27010:	lsls	r4, r1, #10
   27012:	movs	r0, r0
   27014:	strb	r4, [r1, #9]
   27016:	movs	r1, r0
   27018:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   2701c:	mov	r6, r0
   2701e:	mov	r5, r3
   27020:	mov	r4, r2
   27022:	ldr	r3, [r0, #0]
   27024:	movs	r0, #0
   27026:	cbnz	r3, 2704a <btrfs_record_file_extent@@Base+0x586>
   27028:	cbz	r0, 27046 <btrfs_record_file_extent@@Base+0x582>
   2702a:	ldrd	r2, r3, [r0]
   2702e:	cmp	r3, r5
   27030:	it	eq
   27032:	cmpeq	r2, r4
   27034:	bcs.n	27046 <btrfs_record_file_extent@@Base+0x582>
   27036:	adds	r0, #36	; 0x24
   27038:	bl	172ea <rb_next@@Base>
   2703c:	cbnz	r0, 27044 <btrfs_record_file_extent@@Base+0x580>
   2703e:	mov	r0, r6
   27040:	bl	172ca <rb_first@@Base>
   27044:	subs	r0, #36	; 0x24
   27046:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   2704a:	ldrd	r8, r9, [r3, #-36]	; 0x24
   2704e:	sub.w	r0, r3, #36	; 0x24
   27052:	cmp	r5, r9
   27054:	it	eq
   27056:	cmpeq	r4, r8
   27058:	bcs.n	2705e <btrfs_record_file_extent@@Base+0x59a>
   2705a:	ldr	r3, [r3, #8]
   2705c:	b.n	27026 <btrfs_record_file_extent@@Base+0x562>
   2705e:	cmp	r9, r5
   27060:	it	eq
   27062:	cmpeq	r8, r4
   27064:	bcs.n	27046 <btrfs_record_file_extent@@Base+0x582>
   27066:	ldr	r3, [r3, #4]
   27068:	b.n	27026 <btrfs_record_file_extent@@Base+0x562>
   2706a:	push	{r0, r1, r2, r3, r4, lr}
   2706c:	ldr	r3, [pc, #40]	; (27098 <btrfs_record_file_extent@@Base+0x5d4>)
   2706e:	ldr	r4, [pc, #44]	; (2709c <btrfs_record_file_extent@@Base+0x5d8>)
   27070:	add	r3, pc
   27072:	ldr	r4, [r3, r4]
   27074:	movs	r3, #0
   27076:	strd	r2, r1, [sp]
   2707a:	movs	r1, #1
   2707c:	strd	r0, r3, [sp, #8]
   27080:	ldr	r2, [pc, #28]	; (270a0 <btrfs_record_file_extent@@Base+0x5dc>)
   27082:	ldr	r3, [pc, #32]	; (270a4 <btrfs_record_file_extent@@Base+0x5e0>)
   27084:	add	r2, pc
   27086:	ldr	r0, [r4, #0]
   27088:	add	r3, pc
   2708a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2708e:	bl	26f38 <btrfs_record_file_extent@@Base+0x474>
   27092:	blx	8e08 <abort@plt>
   27096:	nop
   27098:	adds	r0, r0, #3
   2709a:	movs	r4, r0
   2709c:	lsls	r4, r1, #10
   2709e:	movs	r0, r0
   270a0:	strb	r0, [r5, #11]
   270a2:	movs	r1, r0
   270a4:			; <UNDEFINED> instruction: 0xb612
   270a6:	movs	r1, r0
   270a8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   270aa:	mov	r4, r2
   270ac:	adds	r1, #24
   270ae:	mov	r5, r0
   270b0:	mov	r0, r2
   270b2:	bl	17054 <rb_erase@@Base>
   270b6:	mov	r2, r4
   270b8:	str	r4, [r4, #0]
   270ba:	ldr.w	r3, [r2, #12]!
   270be:	cmp	r3, r2
   270c0:	beq.n	270d0 <btrfs_record_file_extent@@Base+0x60c>
   270c2:	ldr	r2, [r4, #16]
   270c4:	str	r2, [r3, #4]
   270c6:	str	r3, [r2, #0]
   270c8:	ldr	r2, [pc, #184]	; (27184 <btrfs_record_file_extent@@Base+0x6c0>)
   270ca:	ldr	r3, [pc, #188]	; (27188 <btrfs_record_file_extent@@Base+0x6c4>)
   270cc:	strd	r2, r3, [r4, #12]
   270d0:	ldrb.w	r3, [r4, #62]	; 0x3e
   270d4:	bfc	r3, #1, #1
   270d8:	strb.w	r3, [r4, #62]	; 0x3e
   270dc:	ldrd	r2, r3, [r4, #48]	; 0x30
   270e0:	orrs	r3, r2
   270e2:	bne.n	270fc <btrfs_record_file_extent@@Base+0x638>
   270e4:	ldr	r2, [pc, #164]	; (2718c <btrfs_record_file_extent@@Base+0x6c8>)
   270e6:	movs	r3, #1
   270e8:	ldr	r1, [pc, #164]	; (27190 <btrfs_record_file_extent@@Base+0x6cc>)
   270ea:	ldr	r0, [pc, #168]	; (27194 <btrfs_record_file_extent@@Base+0x6d0>)
   270ec:	add	r2, pc
   270ee:	str	r3, [sp, #0]
   270f0:	adds	r2, #10
   270f2:	add	r1, pc
   270f4:	add	r0, pc
   270f6:	movs	r3, #163	; 0xa3
   270f8:	bl	26fe0 <btrfs_record_file_extent@@Base+0x51c>
   270fc:	ldrd	r3, r2, [r4, #48]	; 0x30
   27100:	adds.w	r6, r3, #4294967295	; 0xffffffff
   27104:	adc.w	r7, r2, #4294967295	; 0xffffffff
   27108:	strd	r6, r7, [r4, #48]	; 0x30
   2710c:	orrs.w	r3, r6, r7
   27110:	bne.n	27150 <btrfs_record_file_extent@@Base+0x68c>
   27112:	ldrb.w	r3, [r4, #62]	; 0x3e
   27116:	lsls	r3, r3, #30
   27118:	bpl.n	27132 <btrfs_record_file_extent@@Base+0x66e>
   2711a:	ldr	r2, [pc, #124]	; (27198 <btrfs_record_file_extent@@Base+0x6d4>)
   2711c:	movs	r3, #1
   2711e:	ldr	r1, [pc, #124]	; (2719c <btrfs_record_file_extent@@Base+0x6d8>)
   27120:	ldr	r0, [pc, #124]	; (271a0 <btrfs_record_file_extent@@Base+0x6dc>)
   27122:	add	r2, pc
   27124:	str	r3, [sp, #0]
   27126:	adds	r2, #10
   27128:	add	r1, pc
   2712a:	add	r0, pc
   2712c:	movs	r3, #165	; 0xa5
   2712e:	bl	26fe0 <btrfs_record_file_extent@@Base+0x51c>
   27132:	ldrb.w	r3, [r4, #61]	; 0x3d
   27136:	subs	r3, #176	; 0xb0
   27138:	cmp	r3, #8
   2713a:	bhi.n	2716a <btrfs_record_file_extent@@Base+0x6a6>
   2713c:	tbb	[pc, r3]
   27140:	asrs	r5, r0, #20
   27142:	asrs	r5, r0, #20
   27144:	asrs	r5, r2, #20
   27146:	asrs	r5, r0, #20
   27148:	movs	r5, r0
   2714a:	mov	r0, r4
   2714c:	blx	87cc <free@plt+0x4>
   27150:	ldrd	r0, r1, [r5]
   27154:	orrs.w	r3, r0, r1
   27158:	beq.n	27166 <btrfs_record_file_extent@@Base+0x6a2>
   2715a:	adds.w	r2, r0, #4294967295	; 0xffffffff
   2715e:	adc.w	r3, r1, #4294967295	; 0xffffffff
   27162:	strd	r2, r3, [r5]
   27166:	add	sp, #12
   27168:	pop	{r4, r5, r6, r7, pc}
   2716a:	ldr	r2, [pc, #56]	; (271a4 <btrfs_record_file_extent@@Base+0x6e0>)
   2716c:	movs	r3, #1
   2716e:	ldr	r1, [pc, #56]	; (271a8 <btrfs_record_file_extent@@Base+0x6e4>)
   27170:	ldr	r0, [pc, #56]	; (271ac <btrfs_record_file_extent@@Base+0x6e8>)
   27172:	add	r2, pc
   27174:	str	r3, [sp, #0]
   27176:	adds	r2, #10
   27178:	add	r1, pc
   2717a:	add	r0, pc
   2717c:	movs	r3, #176	; 0xb0
   2717e:	bl	26f84 <btrfs_record_file_extent@@Base+0x4c0>
   27182:	nop
   27184:	lsls	r0, r0, #4
   27186:	movs	r0, r2
   27188:	lsls	r0, r0, #8
   2718a:	movs	r0, r4
   2718c:			; <UNDEFINED> instruction: 0xb6bf
   2718e:	movs	r1, r0
   27190:	add	r3, sp, #644	; 0x284
   27192:	movs	r1, r0
   27194:	add	r3, sp, #692	; 0x2b4
   27196:	movs	r1, r0
   27198:			; <UNDEFINED> instruction: 0xb689
   2719a:	movs	r1, r0
   2719c:	add	r3, sp, #428	; 0x1ac
   2719e:	movs	r1, r0
   271a0:	add	r3, sp, #536	; 0x218
   271a2:	movs	r1, r0
   271a4:			; <UNDEFINED> instruction: 0xb639
   271a6:	movs	r1, r0
   271a8:	add	r3, sp, #108	; 0x6c
   271aa:	movs	r1, r0
   271ac:	add	r5, sp, #748	; 0x2ec
   271ae:	movs	r1, r0

000271b0 <btrfs_merge_delayed_refs@@Base>:
   271b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   271b4:	sub	sp, #28
   271b6:	ldr	r3, [r2, #24]
   271b8:	mov	r5, r2
   271ba:	str	r0, [sp, #16]
   271bc:	cbz	r3, 271de <btrfs_merge_delayed_refs@@Base+0x2e>
   271be:	ldrb.w	r3, [r2, #60]	; 0x3c
   271c2:	lsls	r3, r3, #30
   271c4:	bmi.n	271de <btrfs_merge_delayed_refs@@Base+0x2e>
   271c6:	ldr	r3, [pc, #240]	; (272b8 <btrfs_merge_delayed_refs@@Base+0x108>)
   271c8:	add	r3, pc
   271ca:	add.w	r9, r3, #32
   271ce:	add.w	r0, r5, #24
   271d2:	bl	172ca <rb_first@@Base>
   271d6:	mov	fp, r0
   271d8:	cmp.w	fp, #0
   271dc:	bne.n	271e4 <btrfs_merge_delayed_refs@@Base+0x34>
   271de:	add	sp, #28
   271e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   271e4:	mov	r0, fp
   271e6:	ldr.w	r8, [pc, #212]	; 272bc <btrfs_merge_delayed_refs@@Base+0x10c>
   271ea:	bl	172ea <rb_next@@Base>
   271ee:	mov	r4, fp
   271f0:	add	r8, pc
   271f2:	mov	sl, r0
   271f4:	cmp.w	sl, #0
   271f8:	bne.n	27202 <btrfs_merge_delayed_refs@@Base+0x52>
   271fa:	mov	r0, fp
   271fc:	bl	172ea <rb_next@@Base>
   27200:	b.n	271d6 <btrfs_merge_delayed_refs@@Base+0x26>
   27202:	mov	r0, sl
   27204:	bl	172ea <rb_next@@Base>
   27208:	ldrb.w	r2, [r4, #61]	; 0x3d
   2720c:	ldrb.w	r3, [sl, #61]	; 0x3d
   27210:	cmp	r3, r2
   27212:	str	r0, [sp, #12]
   27214:	bne.n	271fa <btrfs_merge_delayed_refs@@Base+0x4a>
   27216:	cmp	r3, #176	; 0xb0
   27218:	beq.n	27222 <btrfs_merge_delayed_refs@@Base+0x72>
   2721a:	cmp	r3, #182	; 0xb6
   2721c:	beq.n	27282 <btrfs_merge_delayed_refs@@Base+0xd2>
   2721e:	bl	26fbc <btrfs_record_file_extent@@Base+0x4f8>
   27222:	ldrd	r2, r3, [r4, #64]	; 0x40
   27226:	ldrd	r6, r7, [sl, #64]	; 0x40
   2722a:	cmp	r3, r7
   2722c:	it	eq
   2722e:	cmpeq	r2, r6
   27230:	bne.n	271fa <btrfs_merge_delayed_refs@@Base+0x4a>
   27232:	ldrb.w	r2, [r4, #60]	; 0x3c
   27236:	ldrb.w	r3, [sl, #60]	; 0x3c
   2723a:	ldr.w	r7, [sl, #56]	; 0x38
   2723e:	cmp	r2, r3
   27240:	beq.n	2728c <btrfs_merge_delayed_refs@@Base+0xdc>
   27242:	ldr	r3, [r4, #56]	; 0x38
   27244:	cmp	r3, r7
   27246:	itttt	ge
   27248:	movge	r3, sl
   2724a:	movge	sl, r4
   2724c:	movge	r4, r3
   2724e:	movge	r6, #0
   27250:	ldr	r7, [r4, #56]	; 0x38
   27252:	mov	r3, r4
   27254:	it	lt
   27256:	movlt	r6, #1
   27258:	mov	r4, sl
   2725a:	negs	r7, r7
   2725c:	mov	sl, r3
   2725e:	ldr	r3, [sp, #16]
   27260:	mov	r2, sl
   27262:	mov	r1, r5
   27264:	add.w	r0, r3, #40	; 0x28
   27268:	str	r0, [sp, #20]
   2726a:	bl	270a8 <btrfs_record_file_extent@@Base+0x5e4>
   2726e:	ldr	r3, [r4, #56]	; 0x38
   27270:	ldr	r0, [sp, #20]
   27272:	add	r7, r3
   27274:	str	r7, [r4, #56]	; 0x38
   27276:	cbnz	r7, 27290 <btrfs_merge_delayed_refs@@Base+0xe0>
   27278:	mov	r2, r4
   2727a:	mov	r1, r5
   2727c:	bl	270a8 <btrfs_record_file_extent@@Base+0x5e4>
   27280:	b.n	271ce <btrfs_merge_delayed_refs@@Base+0x1e>
   27282:	ldrd	r2, r3, [r4, #72]	; 0x48
   27286:	ldrd	r6, r7, [sl, #72]	; 0x48
   2728a:	b.n	2722a <btrfs_merge_delayed_refs@@Base+0x7a>
   2728c:	movs	r6, #0
   2728e:	b.n	2725e <btrfs_merge_delayed_refs@@Base+0xae>
   27290:	ldrb.w	r3, [r4, #61]	; 0x3d
   27294:	cmp	r3, #176	; 0xb0
   27296:	beq.n	2729c <btrfs_merge_delayed_refs@@Base+0xec>
   27298:	cmp	r3, #182	; 0xb6
   2729a:	bne.n	272ae <btrfs_merge_delayed_refs@@Base+0xfe>
   2729c:	ldr	r0, [pc, #32]	; (272c0 <btrfs_merge_delayed_refs@@Base+0x110>)
   2729e:	movs	r3, #1
   272a0:	mov	r2, r9
   272a2:	str	r3, [sp, #0]
   272a4:	add	r0, pc
   272a6:	movs	r3, #219	; 0xdb
   272a8:	mov	r1, r8
   272aa:	bl	26fe0 <btrfs_record_file_extent@@Base+0x51c>
   272ae:	cmp	r6, #0
   272b0:	bne.n	271ce <btrfs_merge_delayed_refs@@Base+0x1e>
   272b2:	ldr.w	sl, [sp, #12]
   272b6:	b.n	271f4 <btrfs_merge_delayed_refs@@Base+0x44>
   272b8:	push	{r0, r1, r5, r6, r7, lr}
   272ba:	movs	r1, r0
   272bc:	push	{r1, r3, r5, r7}
   272be:	movs	r1, r0
   272c0:	push	{r2}
   272c2:	movs	r1, r0

000272c4 <btrfs_select_ref_head@@Base>:
   272c4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   272c8:	add.w	r9, r0, #64	; 0x40
   272cc:	mov	r8, r0
   272ce:	movs	r5, #0
   272d0:	movs	r6, #0
   272d2:	movs	r7, #0
   272d4:	ldrd	r2, r3, [r8, #88]	; 0x58
   272d8:	mov	r0, r9
   272da:	bl	27018 <btrfs_record_file_extent@@Base+0x554>
   272de:	mov	r4, r0
   272e0:	cbnz	r0, 27304 <btrfs_select_ref_head@@Base+0x40>
   272e2:	cbz	r5, 272ee <btrfs_select_ref_head@@Base+0x2a>
   272e4:	movs	r4, #0
   272e6:	mov	r0, r4
   272e8:	add	sp, #12
   272ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   272ee:	movs	r2, #0
   272f0:	movs	r3, #0
   272f2:	mov	r0, r9
   272f4:	strd	r6, r7, [r8, #88]	; 0x58
   272f8:	bl	27018 <btrfs_record_file_extent@@Base+0x554>
   272fc:	mov	r4, r0
   272fe:	cmp	r0, #0
   27300:	beq.n	272e4 <btrfs_select_ref_head@@Base+0x20>
   27302:	movs	r5, #1
   27304:	ldrb.w	r2, [r4, #60]	; 0x3c
   27308:	mov	r3, r2
   2730a:	lsls	r2, r2, #28
   2730c:	bmi.n	27354 <btrfs_select_ref_head@@Base+0x90>
   2730e:	orr.w	r3, r3, #8
   27312:	strb.w	r3, [r4, #60]	; 0x3c
   27316:	ldr.w	r3, [r8, #76]	; 0x4c
   2731a:	cbnz	r3, 27336 <btrfs_select_ref_head@@Base+0x72>
   2731c:	ldr	r2, [pc, #80]	; (27370 <btrfs_select_ref_head@@Base+0xac>)
   2731e:	movs	r3, #1
   27320:	ldr	r1, [pc, #80]	; (27374 <btrfs_select_ref_head@@Base+0xb0>)
   27322:	ldr	r0, [pc, #84]	; (27378 <btrfs_select_ref_head@@Base+0xb4>)
   27324:	add	r2, pc
   27326:	str	r3, [sp, #0]
   27328:	adds	r2, #42	; 0x2a
   2732a:	add	r1, pc
   2732c:	add	r0, pc
   2732e:	mov.w	r3, #290	; 0x122
   27332:	bl	26fe0 <btrfs_record_file_extent@@Base+0x51c>
   27336:	ldr.w	r3, [r8, #76]	; 0x4c
   2733a:	subs	r3, #1
   2733c:	str.w	r3, [r8, #76]	; 0x4c
   27340:	ldrd	r3, r2, [r4]
   27344:	ldrd	r1, r0, [r4, #8]
   27348:	adds	r3, r3, r1
   2734a:	adc.w	r2, r0, r2
   2734e:	strd	r3, r2, [r8, #88]	; 0x58
   27352:	b.n	272e6 <btrfs_select_ref_head@@Base+0x22>
   27354:	add.w	r0, r4, #36	; 0x24
   27358:	bl	172ea <rb_next@@Base>
   2735c:	cbnz	r0, 2736a <btrfs_select_ref_head@@Base+0xa6>
   2735e:	cmp	r5, #0
   27360:	bne.n	272e4 <btrfs_select_ref_head@@Base+0x20>
   27362:	movs	r5, #1
   27364:	strd	r6, r7, [r8, #88]	; 0x58
   27368:	b.n	272d4 <btrfs_select_ref_head@@Base+0x10>
   2736a:	sub.w	r4, r0, #36	; 0x24
   2736e:	b.n	27304 <btrfs_select_ref_head@@Base+0x40>
   27370:	push	{r0, r1, r2, r7}
   27372:	movs	r1, r0
   27374:	cbz	r0, 273d4 <btrfs_add_delayed_tree_ref@@Base+0x58>
   27376:	movs	r1, r0
   27378:	cbz	r5, 273ee <btrfs_add_delayed_tree_ref@@Base+0x72>
   2737a:	movs	r1, r0

0002737c <btrfs_add_delayed_tree_ref@@Base>:
   2737c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27380:	sub	sp, #20
   27382:	mov	fp, r1
   27384:	strd	r2, r3, [sp, #8]
   27388:	ldrd	r3, r4, [sp, #72]	; 0x48
   2738c:	ldrd	r9, r8, [sp, #84]	; 0x54
   27390:	cmp	r4, #0
   27392:	ldr	r7, [sp, #92]	; 0x5c
   27394:	itte	eq
   27396:	cmpeq	r3, #3
   27398:	moveq	r6, #1
   2739a:	movne	r6, #0
   2739c:	cmp.w	r8, #0
   273a0:	beq.n	273c2 <btrfs_add_delayed_tree_ref@@Base+0x46>
   273a2:	ldrb.w	r3, [r8, #20]
   273a6:	cbz	r3, 273c2 <btrfs_add_delayed_tree_ref@@Base+0x46>
   273a8:	ldr	r2, [pc, #920]	; (27744 <btrfs_add_delayed_tree_ref@@Base+0x3c8>)
   273aa:	movs	r3, #1
   273ac:	ldr	r1, [pc, #920]	; (27748 <btrfs_add_delayed_tree_ref@@Base+0x3cc>)
   273ae:	ldr	r0, [pc, #924]	; (2774c <btrfs_add_delayed_tree_ref@@Base+0x3d0>)
   273b0:	add	r2, pc
   273b2:	adds	r2, #64	; 0x40
   273b4:	add	r1, pc
   273b6:	add	r0, pc
   273b8:	str	r3, [sp, #0]
   273ba:	mov.w	r3, #568	; 0x238
   273be:	bl	26f84 <btrfs_record_file_extent@@Base+0x4c0>
   273c2:	movs	r0, #88	; 0x58
   273c4:	blx	8a94 <malloc@plt+0x4>
   273c8:	mov	r5, r0
   273ca:	cmp	r0, #0
   273cc:	beq.n	27458 <btrfs_add_delayed_tree_ref@@Base+0xdc>
   273ce:	ldrd	r3, r4, [sp, #64]	; 0x40
   273d2:	movs	r2, #1
   273d4:	add.w	sl, r5, #12
   273d8:	str	r5, [r5, #0]
   273da:	orrs	r3, r4
   273dc:	mov.w	r3, #0
   273e0:	strd	r2, r3, [r5, #48]	; 0x30
   273e4:	mov.w	r2, #0
   273e8:	ldrd	r3, r4, [sp, #8]
   273ec:	ite	ne
   273ee:	movne	r0, #182	; 0xb6
   273f0:	moveq	r0, #176	; 0xb0
   273f2:	cmp.w	r9, #3
   273f6:	strb.w	r0, [r5, #61]	; 0x3d
   273fa:	mov.w	r0, #64	; 0x40
   273fe:	strd	r3, r4, [r5, #24]
   27402:	it	ne
   27404:	movne	ip, r9
   27406:	ldrd	r3, r4, [sp, #56]	; 0x38
   2740a:	it	eq
   2740c:	moveq.w	ip, #1
   27410:	strd	sl, sl, [r5, #12]
   27414:	strb.w	ip, [r5, #60]	; 0x3c
   27418:	strd	r3, r4, [r5, #32]
   2741c:	movs	r3, #1
   2741e:	str	r3, [r5, #56]	; 0x38
   27420:	ldrb.w	r3, [r5, #62]	; 0x3e
   27424:	bic.w	r3, r3, #3
   27428:	orr.w	r3, r3, #2
   2742c:	strb.w	r3, [r5, #62]	; 0x3e
   27430:	movs	r3, #0
   27432:	strd	r2, r3, [r5, #40]	; 0x28
   27436:	ldrd	r3, r4, [sp, #72]	; 0x48
   2743a:	strd	r3, r4, [r5, #64]	; 0x40
   2743e:	ldrd	r3, r4, [sp, #64]	; 0x40
   27442:	strd	r3, r4, [r5, #72]	; 0x48
   27446:	ldr	r3, [sp, #80]	; 0x50
   27448:	str	r3, [r5, #80]	; 0x50
   2744a:	blx	8a94 <malloc@plt+0x4>
   2744e:	mov	r4, r0
   27450:	cbnz	r0, 2745e <btrfs_add_delayed_tree_ref@@Base+0xe2>
   27452:	mov	r0, r5
   27454:	blx	87cc <free@plt+0x4>
   27458:	mvn.w	r0, #11
   2745c:	b.n	275f4 <btrfs_add_delayed_tree_ref@@Base+0x278>
   2745e:	cmp.w	r9, #4
   27462:	beq.n	2750e <btrfs_add_delayed_tree_ref@@Base+0x192>
   27464:	cmp.w	r9, #2
   27468:	sub.w	lr, r9, #3
   2746c:	ite	ne
   2746e:	movne.w	ip, #1
   27472:	moveq.w	ip, #4294967295	; 0xffffffff
   27476:	rsbs	r3, lr, #0
   2747a:	adc.w	r3, r3, lr
   2747e:	movs	r0, #1
   27480:	movs	r1, #0
   27482:	strd	r0, r1, [r4, #16]
   27486:	orr.w	r6, r3, r6, lsl #2
   2748a:	ldrd	r1, r2, [sp, #8]
   2748e:	add.w	r0, r4, #28
   27492:	ldrb.w	r9, [r4, #60]	; 0x3c
   27496:	mov.w	lr, #0
   2749a:	strd	r8, ip, [r4, #48]	; 0x30
   2749e:	strd	r1, r2, [r4]
   274a2:	bic.w	r9, r9, #15
   274a6:	ldrd	r1, r2, [sp, #56]	; 0x38
   274aa:	orr.w	r6, r6, r9
   274ae:	str.w	ip, [r4, #56]	; 0x38
   274b2:	add.w	ip, fp, #64	; 0x40
   274b6:	strd	r0, r0, [r4, #28]
   274ba:	add.w	r0, r4, #36	; 0x24
   274be:	mov	r8, ip
   274c0:	strd	r1, r2, [r4, #8]
   274c4:	str.w	lr, [r4, #24]
   274c8:	str	r0, [r4, #36]	; 0x24
   274ca:	strb.w	r6, [r4, #60]	; 0x3c
   274ce:	ldr.w	r6, [r8]
   274d2:	cbnz	r6, 27516 <btrfs_add_delayed_tree_ref@@Base+0x19a>
   274d4:	strd	lr, r6, [r4, #36]	; 0x24
   274d8:	mov	r1, ip
   274da:	str	r6, [r4, #44]	; 0x2c
   274dc:	str.w	r0, [r8]
   274e0:	bl	16fae <rb_insert_color@@Base>
   274e4:	cmp	r7, #0
   274e6:	bne.w	27646 <btrfs_add_delayed_tree_ref@@Base+0x2ca>
   274ea:	ldr.w	r3, [fp, #72]	; 0x48
   274ee:	adds	r3, #1
   274f0:	str.w	r3, [fp, #72]	; 0x48
   274f4:	ldr.w	r3, [fp, #76]	; 0x4c
   274f8:	adds	r3, #1
   274fa:	str.w	r3, [fp, #76]	; 0x4c
   274fe:	ldrd	r3, r2, [fp, #40]	; 0x28
   27502:	adds	r3, #1
   27504:	adc.w	r2, r2, #0
   27508:	strd	r3, r2, [fp, #40]	; 0x28
   2750c:	b.n	275a6 <btrfs_add_delayed_tree_ref@@Base+0x22a>
   2750e:	mov.w	ip, #0
   27512:	mov	r3, ip
   27514:	b.n	2747e <btrfs_add_delayed_tree_ref@@Base+0x102>
   27516:	ldrd	r8, r9, [r6, #-36]	; 0x24
   2751a:	ldrd	r1, r2, [sp, #8]
   2751e:	cmp	r2, r9
   27520:	it	eq
   27522:	cmpeq	r1, r8
   27524:	bcs.n	2752e <btrfs_add_delayed_tree_ref@@Base+0x1b2>
   27526:	add.w	r8, r6, #8
   2752a:	mov	lr, r6
   2752c:	b.n	274ce <btrfs_add_delayed_tree_ref@@Base+0x152>
   2752e:	ldrd	r1, r2, [sp, #8]
   27532:	cmp	r9, r2
   27534:	it	eq
   27536:	cmpeq	r8, r1
   27538:	bcs.n	27540 <btrfs_add_delayed_tree_ref@@Base+0x1c4>
   2753a:	add.w	r8, r6, #4
   2753e:	b.n	2752a <btrfs_add_delayed_tree_ref@@Base+0x1ae>
   27540:	ldrb.w	r1, [r4, #60]	; 0x3c
   27544:	ldrb	r2, [r6, #24]
   27546:	eor.w	r0, r1, r2
   2754a:	lsls	r0, r0, #30
   2754c:	bpl.n	27566 <btrfs_add_delayed_tree_ref@@Base+0x1ea>
   2754e:	ldr	r2, [pc, #512]	; (27750 <btrfs_add_delayed_tree_ref@@Base+0x3d4>)
   27550:	movs	r3, #1
   27552:	ldr	r1, [pc, #512]	; (27754 <btrfs_add_delayed_tree_ref@@Base+0x3d8>)
   27554:	ldr	r0, [pc, #512]	; (27758 <btrfs_add_delayed_tree_ref@@Base+0x3dc>)
   27556:	add	r2, pc
   27558:	str	r3, [sp, #0]
   2755a:	adds	r2, #91	; 0x5b
   2755c:	add	r1, pc
   2755e:	add	r0, pc
   27560:	movw	r3, #363	; 0x16b
   27564:	b.n	273be <btrfs_add_delayed_tree_ref@@Base+0x42>
   27566:	lsls	r1, r1, #31
   27568:	itttt	mi
   2756a:	bfimi	r2, r3, #0, #1
   2756e:	strbmi	r2, [r6, #24]
   27570:	ldrdmi	r2, r3, [r4, #8]
   27574:	strdmi	r2, r3, [r6, #-28]
   27578:	ldr	r3, [r4, #48]	; 0x30
   2757a:	cbz	r3, 27584 <btrfs_add_delayed_tree_ref@@Base+0x208>
   2757c:	ldr	r2, [r6, #12]
   2757e:	cmp	r2, #0
   27580:	bne.n	275fa <btrfs_add_delayed_tree_ref@@Base+0x27e>
   27582:	str	r3, [r6, #12]
   27584:	cbz	r7, 2758a <btrfs_add_delayed_tree_ref@@Base+0x20e>
   27586:	ldr	r3, [r6, #16]
   27588:	str	r3, [r7, #0]
   2758a:	ldr	r2, [r4, #56]	; 0x38
   2758c:	mov	r0, r4
   2758e:	ldr	r3, [r6, #20]
   27590:	sub.w	r7, r6, #36	; 0x24
   27594:	add	r3, r2
   27596:	str	r3, [r6, #20]
   27598:	ldr	r3, [r6, #16]
   2759a:	ldr	r2, [r4, #56]	; 0x38
   2759c:	mov	r4, r7
   2759e:	add	r3, r2
   275a0:	str	r3, [r6, #16]
   275a2:	blx	87cc <free@plt+0x4>
   275a6:	ldr	r3, [sp, #96]	; 0x60
   275a8:	cbz	r3, 275b0 <btrfs_add_delayed_tree_ref@@Base+0x234>
   275aa:	ldr	r3, [r4, #52]	; 0x34
   275ac:	ldr	r2, [sp, #96]	; 0x60
   275ae:	str	r3, [r2, #0]
   275b0:	add.w	r1, r4, #24
   275b4:	movs	r0, #0
   275b6:	mov	r3, r1
   275b8:	ldr	r2, [r3, #0]
   275ba:	cmp	r2, #0
   275bc:	bne.n	2764a <btrfs_add_delayed_tree_ref@@Base+0x2ce>
   275be:	strd	r0, r2, [r5]
   275c2:	mov	r0, r5
   275c4:	str	r2, [r5, #8]
   275c6:	str	r5, [r3, #0]
   275c8:	bl	16fae <rb_insert_color@@Base>
   275cc:	ldrb.w	r3, [r5, #60]	; 0x3c
   275d0:	cmp	r3, #1
   275d2:	bne.n	275e4 <btrfs_add_delayed_tree_ref@@Base+0x268>
   275d4:	ldr	r3, [r4, #32]
   275d6:	adds	r4, #28
   275d8:	str.w	sl, [r4, #4]
   275dc:	strd	r4, r3, [r5, #12]
   275e0:	str.w	sl, [r3]
   275e4:	ldrd	r3, r2, [fp, #40]	; 0x28
   275e8:	adds	r3, #1
   275ea:	adc.w	r2, r2, #0
   275ee:	strd	r3, r2, [fp, #40]	; 0x28
   275f2:	movs	r0, #0
   275f4:	add	sp, #20
   275f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   275fa:	ldrb	r1, [r3, #18]
   275fc:	cbz	r1, 27618 <btrfs_add_delayed_tree_ref@@Base+0x29c>
   275fe:	add.w	r1, r3, #16
   27602:	ldr.w	r0, [r3], #4
   27606:	cmp	r3, r1
   27608:	str.w	r0, [r2], #4
   2760c:	bne.n	27602 <btrfs_add_delayed_tree_ref@@Base+0x286>
   2760e:	ldrb	r3, [r3, #0]
   27610:	strb	r3, [r2, #0]
   27612:	movs	r2, #1
   27614:	ldr	r3, [r6, #12]
   27616:	strb	r2, [r3, #18]
   27618:	ldr	r0, [r4, #48]	; 0x30
   2761a:	ldrb	r3, [r0, #19]
   2761c:	cbz	r3, 2763a <btrfs_add_delayed_tree_ref@@Base+0x2be>
   2761e:	ldr	r1, [r6, #12]
   27620:	ldrd	r2, r0, [r0, #24]
   27624:	ldr	r3, [r1, #28]
   27626:	str	r3, [sp, #8]
   27628:	ldr	r3, [r1, #24]
   2762a:	orrs	r2, r3
   2762c:	ldr	r3, [sp, #8]
   2762e:	orrs	r3, r0
   27630:	strd	r2, r3, [r1, #24]
   27634:	ldr	r3, [r6, #12]
   27636:	movs	r2, #1
   27638:	strb	r2, [r3, #19]
   2763a:	ldr	r0, [r4, #48]	; 0x30
   2763c:	cmp	r0, #0
   2763e:	beq.n	27584 <btrfs_add_delayed_tree_ref@@Base+0x208>
   27640:	blx	87cc <free@plt+0x4>
   27644:	b.n	27584 <btrfs_add_delayed_tree_ref@@Base+0x208>
   27646:	str	r6, [r7, #0]
   27648:	b.n	274ea <btrfs_add_delayed_tree_ref@@Base+0x16e>
   2764a:	ldrb.w	r3, [r5, #61]	; 0x3d
   2764e:	ldrb.w	r0, [r2, #61]	; 0x3d
   27652:	cmp	r3, r0
   27654:	bcc.n	276f4 <btrfs_add_delayed_tree_ref@@Base+0x378>
   27656:	bhi.n	2767c <btrfs_add_delayed_tree_ref@@Base+0x300>
   27658:	cmp	r3, #176	; 0xb0
   2765a:	beq.n	27664 <btrfs_add_delayed_tree_ref@@Base+0x2e8>
   2765c:	cmp	r3, #182	; 0xb6
   2765e:	beq.n	27680 <btrfs_add_delayed_tree_ref@@Base+0x304>
   27660:	bl	26fbc <btrfs_record_file_extent@@Base+0x4f8>
   27664:	ldrd	r6, r7, [r5, #64]	; 0x40
   27668:	ldrd	r8, r9, [r2, #64]	; 0x40
   2766c:	cmp	r7, r9
   2766e:	it	eq
   27670:	cmpeq	r6, r8
   27672:	bcc.n	276f4 <btrfs_add_delayed_tree_ref@@Base+0x378>
   27674:	cmp	r9, r7
   27676:	it	eq
   27678:	cmpeq	r8, r6
   2767a:	bcs.n	2768a <btrfs_add_delayed_tree_ref@@Base+0x30e>
   2767c:	adds	r3, r2, #4
   2767e:	b.n	276f8 <btrfs_add_delayed_tree_ref@@Base+0x37c>
   27680:	ldrd	r6, r7, [r5, #72]	; 0x48
   27684:	ldrd	r8, r9, [r2, #72]	; 0x48
   27688:	b.n	2766c <btrfs_add_delayed_tree_ref@@Base+0x2f0>
   2768a:	ldrd	r6, r7, [r5, #40]	; 0x28
   2768e:	ldrd	r8, r9, [r2, #40]	; 0x28
   27692:	cmp	r7, r9
   27694:	it	eq
   27696:	cmpeq	r6, r8
   27698:	bcc.n	276f4 <btrfs_add_delayed_tree_ref@@Base+0x378>
   2769a:	cmp	r9, r7
   2769c:	it	eq
   2769e:	cmpeq	r8, r6
   276a0:	bcc.n	2767c <btrfs_add_delayed_tree_ref@@Base+0x300>
   276a2:	ldrb.w	r0, [r5, #60]	; 0x3c
   276a6:	ldrb.w	r1, [r2, #60]	; 0x3c
   276aa:	ldr	r3, [r5, #56]	; 0x38
   276ac:	cmp	r1, r0
   276ae:	beq.n	276da <btrfs_add_delayed_tree_ref@@Base+0x35e>
   276b0:	ldr	r1, [r2, #56]	; 0x38
   276b2:	cmp	r3, r1
   276b4:	ble.n	27738 <btrfs_add_delayed_tree_ref@@Base+0x3bc>
   276b6:	strb.w	r0, [r2, #60]	; 0x3c
   276ba:	negs	r3, r1
   276bc:	ldr	r1, [r5, #56]	; 0x38
   276be:	add.w	r0, r2, #12
   276c2:	str	r1, [r2, #56]	; 0x38
   276c4:	ldrb.w	r1, [r5, #60]	; 0x3c
   276c8:	cmp	r1, #1
   276ca:	bne.n	276fc <btrfs_add_delayed_tree_ref@@Base+0x380>
   276cc:	ldr	r1, [r4, #32]
   276ce:	add.w	r6, r4, #28
   276d2:	str	r0, [r4, #32]
   276d4:	strd	r6, r1, [r2, #12]
   276d8:	str	r0, [r1, #0]
   276da:	ldr	r1, [r2, #56]	; 0x38
   276dc:	add	r3, r1
   276de:	str	r3, [r2, #56]	; 0x38
   276e0:	cbnz	r3, 276ec <btrfs_add_delayed_tree_ref@@Base+0x370>
   276e2:	add.w	r0, fp, #40	; 0x28
   276e6:	mov	r1, r4
   276e8:	bl	270a8 <btrfs_record_file_extent@@Base+0x5e4>
   276ec:	mov	r0, r5
   276ee:	blx	87cc <free@plt+0x4>
   276f2:	b.n	275f2 <btrfs_add_delayed_tree_ref@@Base+0x276>
   276f4:	add.w	r3, r2, #8
   276f8:	mov	r0, r2
   276fa:	b.n	275b8 <btrfs_add_delayed_tree_ref@@Base+0x23c>
   276fc:	cmp	r1, #2
   276fe:	bne.n	27728 <btrfs_add_delayed_tree_ref@@Base+0x3ac>
   27700:	ldr	r1, [r2, #12]
   27702:	cmp	r1, r0
   27704:	bne.n	27718 <btrfs_add_delayed_tree_ref@@Base+0x39c>
   27706:	ldr	r1, [pc, #84]	; (2775c <btrfs_add_delayed_tree_ref@@Base+0x3e0>)
   27708:	mov.w	r2, #330	; 0x14a
   2770c:	ldr	r0, [pc, #80]	; (27760 <btrfs_add_delayed_tree_ref@@Base+0x3e4>)
   2770e:	add	r1, pc
   27710:	adds	r1, #116	; 0x74
   27712:	add	r0, pc
   27714:	bl	2706a <btrfs_record_file_extent@@Base+0x5a6>
   27718:	ldr	r0, [r2, #16]
   2771a:	str	r0, [r1, #4]
   2771c:	str	r1, [r0, #0]
   2771e:	ldr	r0, [pc, #28]	; (2773c <btrfs_add_delayed_tree_ref@@Base+0x3c0>)
   27720:	ldr	r1, [pc, #28]	; (27740 <btrfs_add_delayed_tree_ref@@Base+0x3c4>)
   27722:	strd	r0, r1, [r2, #12]
   27726:	b.n	276da <btrfs_add_delayed_tree_ref@@Base+0x35e>
   27728:	ldr	r1, [pc, #56]	; (27764 <btrfs_add_delayed_tree_ref@@Base+0x3e8>)
   2772a:	movw	r2, #333	; 0x14d
   2772e:	ldr	r0, [pc, #56]	; (27768 <btrfs_add_delayed_tree_ref@@Base+0x3ec>)
   27730:	add	r1, pc
   27732:	adds	r1, #116	; 0x74
   27734:	add	r0, pc
   27736:	b.n	27714 <btrfs_add_delayed_tree_ref@@Base+0x398>
   27738:	negs	r3, r3
   2773a:	b.n	276da <btrfs_add_delayed_tree_ref@@Base+0x35e>
   2773c:	lsls	r0, r0, #4
   2773e:	movs	r0, r2
   27740:	lsls	r0, r0, #8
   27742:	movs	r0, r4
   27744:	cbz	r3, 277c6 <btrfs_destroy_delayed_refs@@Base+0x5a>
   27746:	movs	r1, r0
   27748:	uxtb	r6, r4
   2774a:	movs	r1, r0
   2774c:	cbz	r6, 277a8 <btrfs_destroy_delayed_refs@@Base+0x3c>
   2774e:	movs	r1, r0
   27750:	sxtb	r5, r2
   27752:	movs	r1, r0
   27754:	cbz	r6, 27766 <btrfs_add_delayed_tree_ref@@Base+0x3ea>
   27756:	movs	r1, r0
   27758:	cbz	r6, 27792 <btrfs_destroy_delayed_refs@@Base+0x26>
   2775a:	movs	r1, r0
   2775c:	sub	sp, #116	; 0x74
   2775e:	movs	r1, r0
   27760:	add	sp, #316	; 0x13c
   27762:	movs	r1, r0
   27764:	add	sp, #492	; 0x1ec
   27766:	movs	r1, r0
   27768:	str	r5, [sp, #456]	; 0x1c8
   2776a:	movs	r1, r0

0002776c <btrfs_destroy_delayed_refs@@Base>:
   2776c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   27770:	mov	r5, r0
   27772:	ldr	r3, [r0, #64]	; 0x40
   27774:	cbnz	r3, 27784 <btrfs_destroy_delayed_refs@@Base+0x18>
   27776:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2777a:	mov	r1, r9
   2777c:	mov	r0, r8
   2777e:	bl	270a8 <btrfs_record_file_extent@@Base+0x5e4>
   27782:	b.n	277a0 <btrfs_destroy_delayed_refs@@Base+0x34>
   27784:	mov	r6, r0
   27786:	add.w	r8, r0, #40	; 0x28
   2778a:	ldr.w	r7, [r6], #64
   2778e:	mov	r0, r6
   27790:	bl	172ca <rb_first@@Base>
   27794:	cmp	r0, #0
   27796:	beq.n	27776 <btrfs_destroy_delayed_refs@@Base+0xa>
   27798:	sub.w	r9, r0, #36	; 0x24
   2779c:	sub.w	r4, r0, #12
   277a0:	mov	r0, r4
   277a2:	bl	172ca <rb_first@@Base>
   277a6:	mov	r2, r0
   277a8:	cmp	r0, #0
   277aa:	bne.n	2777a <btrfs_destroy_delayed_refs@@Base+0xe>
   277ac:	mov	r2, r9
   277ae:	mov	r1, r7
   277b0:	mov	r0, r5
   277b2:	bl	262b0 <cleanup_ref_head@@Base>
   277b6:	cmp	r0, #0
   277b8:	beq.n	2778e <btrfs_destroy_delayed_refs@@Base+0x22>
   277ba:	ldr	r1, [pc, #16]	; (277cc <btrfs_destroy_delayed_refs@@Base+0x60>)
   277bc:	movw	r2, #629	; 0x275
   277c0:	ldr	r0, [pc, #12]	; (277d0 <btrfs_destroy_delayed_refs@@Base+0x64>)
   277c2:	add	r1, pc
   277c4:	adds	r1, #135	; 0x87
   277c6:	add	r0, pc
   277c8:	bl	2706a <btrfs_record_file_extent@@Base+0x5a6>
   277cc:	add	r7, sp, #932	; 0x3a4
   277ce:	movs	r1, r0
   277d0:	add	r7, sp, #740	; 0x2e4
   277d2:	movs	r1, r0
   277d4:	ldr.w	ip, [pc, #60]	; 27814 <btrfs_destroy_delayed_refs@@Base+0xa8>
   277d8:	push	{r0, r1, r2, r3, r4, lr}
   277da:	add	ip, pc
   277dc:	ldr	r3, [pc, #56]	; (27818 <btrfs_destroy_delayed_refs@@Base+0xac>)
   277de:	add.w	r2, r1, r2, lsl #3
   277e2:	mov	r1, sp
   277e4:	ldr.w	r3, [ip, r3]
   277e8:	ldr	r3, [r3, #0]
   277ea:	str	r3, [sp, #12]
   277ec:	mov.w	r3, #0
   277f0:	movs	r3, #8
   277f2:	bl	1a79e <read_extent_buffer@@Base>
   277f6:	ldr	r2, [pc, #36]	; (2781c <btrfs_destroy_delayed_refs@@Base+0xb0>)
   277f8:	ldr	r3, [pc, #28]	; (27818 <btrfs_destroy_delayed_refs@@Base+0xac>)
   277fa:	add	r2, pc
   277fc:	ldrd	r0, r1, [sp]
   27800:	ldr	r3, [r2, r3]
   27802:	ldr	r2, [r3, #0]
   27804:	ldr	r3, [sp, #12]
   27806:	eors	r2, r3
   27808:	beq.n	2780e <btrfs_destroy_delayed_refs@@Base+0xa2>
   2780a:	blx	88e4 <__stack_chk_fail@plt>
   2780e:	add	sp, #20
   27810:	ldr.w	pc, [sp], #4
   27814:	asrs	r6, r2, #21
   27816:	movs	r4, r0
   27818:	lsls	r4, r7, #9
   2781a:	movs	r0, r0
   2781c:	asrs	r6, r6, #20
   2781e:	movs	r4, r0
   27820:	ldr	r2, [pc, #60]	; (27860 <btrfs_destroy_delayed_refs@@Base+0xf4>)
   27822:	movs	r1, #16
   27824:	ldr	r3, [pc, #60]	; (27864 <btrfs_destroy_delayed_refs@@Base+0xf8>)
   27826:	push	{r4, lr}
   27828:	add	r2, pc
   2782a:	sub	sp, #72	; 0x48
   2782c:	add	r4, sp, #4
   2782e:	ldr	r3, [r2, r3]
   27830:	mov	r0, r4
   27832:	ldr	r3, [r3, #0]
   27834:	str	r3, [sp, #68]	; 0x44
   27836:	mov.w	r3, #0
   2783a:	blx	8ae0 <backtrace@plt>
   2783e:	movs	r2, #2
   27840:	mov	r1, r0
   27842:	mov	r0, r4
   27844:	blx	8e50 <backtrace_symbols_fd@plt>
   27848:	ldr	r2, [pc, #28]	; (27868 <btrfs_destroy_delayed_refs@@Base+0xfc>)
   2784a:	ldr	r3, [pc, #24]	; (27864 <btrfs_destroy_delayed_refs@@Base+0xf8>)
   2784c:	add	r2, pc
   2784e:	ldr	r3, [r2, r3]
   27850:	ldr	r2, [r3, #0]
   27852:	ldr	r3, [sp, #68]	; 0x44
   27854:	eors	r2, r3
   27856:	beq.n	2785c <btrfs_destroy_delayed_refs@@Base+0xf0>
   27858:	blx	88e4 <__stack_chk_fail@plt>
   2785c:	add	sp, #72	; 0x48
   2785e:	pop	{r4, pc}
   27860:	asrs	r0, r1, #20
   27862:	movs	r4, r0
   27864:	lsls	r4, r7, #9
   27866:	movs	r0, r0
   27868:	asrs	r4, r4, #19
   2786a:	movs	r4, r0
   2786c:	push	{r4, r5, r6, lr}
   2786e:	mov	r6, r0
   27870:	movs	r4, #0
   27872:	and.w	r0, r0, #1
   27876:	mov	r1, r4
   27878:	orrs.w	r3, r0, r1
   2787c:	beq.n	2790e <btrfs_destroy_delayed_refs@@Base+0x1a2>
   2787e:	ldr	r1, [pc, #240]	; (27970 <btrfs_destroy_delayed_refs@@Base+0x204>)
   27880:	mov	r0, r2
   27882:	add	r1, pc
   27884:	blx	8a08 <strcpy@plt>
   27888:	mov	r2, r0
   2788a:	and.w	r0, r6, #4
   2788e:	movs	r1, #0
   27890:	orrs.w	r3, r0, r1
   27894:	beq.n	278b0 <btrfs_destroy_delayed_refs@@Base+0x144>
   27896:	cbnz	r4, 278a4 <btrfs_destroy_delayed_refs@@Base+0x138>
   27898:	ldr	r1, [pc, #216]	; (27974 <btrfs_destroy_delayed_refs@@Base+0x208>)
   2789a:	mov	r0, r2
   2789c:	add	r1, pc
   2789e:	blx	89c0 <strcat@plt+0x4>
   278a2:	mov	r2, r0
   278a4:	ldr	r1, [pc, #208]	; (27978 <btrfs_destroy_delayed_refs@@Base+0x20c>)
   278a6:	mov	r0, r2
   278a8:	add	r1, pc
   278aa:	blx	89c0 <strcat@plt+0x4>
   278ae:	mov	r2, r0
   278b0:	and.w	r0, r6, #2
   278b4:	movs	r1, #0
   278b6:	orrs.w	r3, r0, r1
   278ba:	beq.n	278d6 <btrfs_destroy_delayed_refs@@Base+0x16a>
   278bc:	cbnz	r4, 278ca <btrfs_destroy_delayed_refs@@Base+0x15e>
   278be:	ldr	r1, [pc, #188]	; (2797c <btrfs_destroy_delayed_refs@@Base+0x210>)
   278c0:	mov	r0, r2
   278c2:	add	r1, pc
   278c4:	blx	89c0 <strcat@plt+0x4>
   278c8:	mov	r2, r0
   278ca:	ldr	r1, [pc, #180]	; (27980 <btrfs_destroy_delayed_refs@@Base+0x214>)
   278cc:	mov	r0, r2
   278ce:	add	r1, pc
   278d0:	blx	89c0 <strcat@plt+0x4>
   278d4:	mov	r2, r0
   278d6:	and.w	r4, r6, #2040	; 0x7f8
   278da:	movs	r5, #0
   278dc:	cmp	r5, #0
   278de:	it	eq
   278e0:	cmpeq	r4, #128	; 0x80
   278e2:	beq.n	2796a <btrfs_destroy_delayed_refs@@Base+0x1fe>
   278e4:	cmp	r5, #0
   278e6:	it	eq
   278e8:	cmpeq	r4, #129	; 0x81
   278ea:	bcs.n	27920 <btrfs_destroy_delayed_refs@@Base+0x1b4>
   278ec:	cmp	r5, #0
   278ee:	it	eq
   278f0:	cmpeq	r4, #32
   278f2:	beq.n	27964 <btrfs_destroy_delayed_refs@@Base+0x1f8>
   278f4:	cmp	r5, #0
   278f6:	it	eq
   278f8:	cmpeq	r4, #33	; 0x21
   278fa:	bcs.n	27912 <btrfs_destroy_delayed_refs@@Base+0x1a6>
   278fc:	cmp	r5, #0
   278fe:	it	eq
   27900:	cmpeq	r4, #8
   27902:	beq.n	27944 <btrfs_destroy_delayed_refs@@Base+0x1d8>
   27904:	cmp	r5, #0
   27906:	it	eq
   27908:	cmpeq	r4, #16
   2790a:	beq.n	27952 <btrfs_destroy_delayed_refs@@Base+0x1e6>
   2790c:	pop	{r4, r5, r6, pc}
   2790e:	movs	r4, #1
   27910:	b.n	2788a <btrfs_destroy_delayed_refs@@Base+0x11e>
   27912:	cmp	r5, #0
   27914:	it	eq
   27916:	cmpeq	r4, #64	; 0x40
   27918:	bne.n	2790c <btrfs_destroy_delayed_refs@@Base+0x1a0>
   2791a:	ldr	r1, [pc, #104]	; (27984 <btrfs_destroy_delayed_refs@@Base+0x218>)
   2791c:	add	r1, pc
   2791e:	b.n	27948 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   27920:	cmp	r5, #0
   27922:	it	eq
   27924:	cmpeq.w	r4, #512	; 0x200
   27928:	beq.n	27958 <btrfs_destroy_delayed_refs@@Base+0x1ec>
   2792a:	cmp	r5, #0
   2792c:	it	eq
   2792e:	cmpeq.w	r4, #1024	; 0x400
   27932:	beq.n	2795e <btrfs_destroy_delayed_refs@@Base+0x1f2>
   27934:	cmp	r5, #0
   27936:	it	eq
   27938:	cmpeq.w	r4, #256	; 0x100
   2793c:	bne.n	2790c <btrfs_destroy_delayed_refs@@Base+0x1a0>
   2793e:	ldr	r1, [pc, #72]	; (27988 <btrfs_destroy_delayed_refs@@Base+0x21c>)
   27940:	add	r1, pc
   27942:	b.n	27948 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   27944:	ldr	r1, [pc, #68]	; (2798c <btrfs_destroy_delayed_refs@@Base+0x220>)
   27946:	add	r1, pc
   27948:	ldmia.w	sp!, {r4, r5, r6, lr}
   2794c:	mov	r0, r2
   2794e:	b.w	89bc <strcat@plt>
   27952:	ldr	r1, [pc, #60]	; (27990 <btrfs_destroy_delayed_refs@@Base+0x224>)
   27954:	add	r1, pc
   27956:	b.n	27948 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   27958:	ldr	r1, [pc, #56]	; (27994 <btrfs_destroy_delayed_refs@@Base+0x228>)
   2795a:	add	r1, pc
   2795c:	b.n	27948 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   2795e:	ldr	r1, [pc, #56]	; (27998 <btrfs_destroy_delayed_refs@@Base+0x22c>)
   27960:	add	r1, pc
   27962:	b.n	27948 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   27964:	ldr	r1, [pc, #52]	; (2799c <btrfs_destroy_delayed_refs@@Base+0x230>)
   27966:	add	r1, pc
   27968:	b.n	27948 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   2796a:	ldr	r1, [pc, #52]	; (279a0 <btrfs_destroy_delayed_refs@@Base+0x234>)
   2796c:	add	r1, pc
   2796e:	b.n	27948 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   27970:	bkpt	0x00b2
   27972:	movs	r1, r0
   27974:	strh	r3, [r4, #48]	; 0x30
   27976:	movs	r1, r0
   27978:	bkpt	0x0093
   2797a:	movs	r1, r0
   2797c:	strh	r5, [r7, #46]	; 0x2e
   2797e:	movs	r1, r0
   27980:	bkpt	0x0078
   27982:	movs	r1, r0
   27984:	add	r7, sp, #344	; 0x158
   27986:	movs	r1, r0
   27988:	add	r7, sp, #260	; 0x104
   2798a:	movs	r1, r0
   2798c:	add	r7, sp, #28
   2798e:	movs	r1, r0
   27990:	add	r7, sp, #0
   27992:	movs	r1, r0
   27994:	add	r7, sp, #4
   27996:	movs	r1, r0
   27998:	add	r7, sp, #16
   2799a:	movs	r1, r0
   2799c:	add	r7, sp, #28
   2799e:	movs	r1, r0
   279a0:	add	r7, sp, #56	; 0x38
   279a2:	movs	r1, r0
   279a4:	push	{r4, lr}
   279a6:	sub	sp, #24
   279a8:	ldr	r2, [r0, #64]	; 0x40
   279aa:	mov	r4, r0
   279ac:	ldr	r3, [r0, #68]	; 0x44
   279ae:	ldr	r1, [pc, #112]	; (27a20 <btrfs_destroy_delayed_refs@@Base+0x2b4>)
   279b0:	strd	r2, r3, [sp, #16]
   279b4:	add	r1, pc
   279b6:	ldr	r2, [r0, #56]	; 0x38
   279b8:	ldr	r3, [r0, #60]	; 0x3c
   279ba:	strd	r2, r3, [sp, #8]
   279be:	ldr	r2, [r0, #16]
   279c0:	ldr	r3, [r0, #20]
   279c2:	strd	r2, r3, [sp]
   279c6:	ldr	r2, [r0, #0]
   279c8:	ldr	r3, [r0, #4]
   279ca:	movs	r0, #1
   279cc:	blx	8c6c <__printf_chk@plt+0x4>
   279d0:	ldr	r2, [r4, #32]
   279d2:	ldr	r3, [r4, #36]	; 0x24
   279d4:	movs	r0, #1
   279d6:	ldr	r1, [pc, #76]	; (27a24 <btrfs_destroy_delayed_refs@@Base+0x2b8>)
   279d8:	strd	r2, r3, [sp, #8]
   279dc:	add	r1, pc
   279de:	ldr	r2, [r4, #24]
   279e0:	ldr	r3, [r4, #28]
   279e2:	strd	r2, r3, [sp]
   279e6:	ldr	r3, [r4, #12]
   279e8:	ldr	r2, [r4, #8]
   279ea:	blx	8c6c <__printf_chk@plt+0x4>
   279ee:	ldr	r3, [r4, #76]	; 0x4c
   279f0:	ldr	r2, [r4, #48]	; 0x30
   279f2:	movs	r0, #1
   279f4:	ldr	r1, [pc, #48]	; (27a28 <btrfs_destroy_delayed_refs@@Base+0x2bc>)
   279f6:	str	r3, [sp, #12]
   279f8:	ldr	r3, [r4, #72]	; 0x48
   279fa:	add	r1, pc
   279fc:	str	r3, [sp, #8]
   279fe:	ldr	r3, [r4, #52]	; 0x34
   27a00:	strd	r2, r3, [sp]
   27a04:	ldr	r2, [r4, #40]	; 0x28
   27a06:	ldr	r3, [r4, #44]	; 0x2c
   27a08:	blx	8c6c <__printf_chk@plt+0x4>
   27a0c:	ldr	r1, [pc, #28]	; (27a2c <btrfs_destroy_delayed_refs@@Base+0x2c0>)
   27a0e:	ldr	r3, [r4, #84]	; 0x54
   27a10:	movs	r0, #1
   27a12:	ldr	r2, [r4, #80]	; 0x50
   27a14:	add	r1, pc
   27a16:	add	sp, #24
   27a18:	ldmia.w	sp!, {r4, lr}
   27a1c:	b.w	8c68 <__printf_chk@plt>
   27a20:	add	r6, sp, #848	; 0x350
   27a22:	movs	r1, r0
   27a24:	add	r6, sp, #892	; 0x37c
   27a26:	movs	r1, r0
   27a28:	add	r6, sp, #976	; 0x3d0
   27a2a:	movs	r1, r0
   27a2c:	add	r7, sp, #52	; 0x34
   27a2e:	movs	r1, r0
   27a30:	push	{r4, r5, r6, r7, lr}
   27a32:	mov	r6, r2
   27a34:	ldr	r2, [pc, #104]	; (27aa0 <btrfs_destroy_delayed_refs@@Base+0x334>)
   27a36:	sub	sp, #292	; 0x124
   27a38:	ldr	r3, [pc, #104]	; (27aa4 <btrfs_destroy_delayed_refs@@Base+0x338>)
   27a3a:	add.w	r4, r0, #96	; 0x60
   27a3e:	add	r2, pc
   27a40:	add	r5, sp, #28
   27a42:	ldr	r3, [r2, r3]
   27a44:	ldr	r3, [r3, #0]
   27a46:	str	r3, [sp, #284]	; 0x11c
   27a48:	mov.w	r3, #0
   27a4c:	movs	r3, #25
   27a4e:	mla	r1, r3, r1, r4
   27a52:	ldr.w	r2, [r1, #118]	; 0x76
   27a56:	mov	r1, r5
   27a58:	add.w	r3, r2, #101	; 0x65
   27a5c:	adds	r2, #119	; 0x77
   27a5e:	add	r4, r3
   27a60:	ldrh	r7, [r4, #16]
   27a62:	mov	r3, r7
   27a64:	bl	1a79e <read_extent_buffer@@Base>
   27a68:	strd	r7, r5, [sp, #16]
   27a6c:	ldr	r2, [r4, #8]
   27a6e:	movs	r0, #1
   27a70:	ldr	r3, [r4, #12]
   27a72:	ldr	r1, [pc, #52]	; (27aa8 <btrfs_destroy_delayed_refs@@Base+0x33c>)
   27a74:	strd	r2, r3, [sp, #8]
   27a78:	add	r1, pc
   27a7a:	ldr	r2, [r4, #0]
   27a7c:	ldr	r3, [r4, #4]
   27a7e:	strd	r2, r3, [sp]
   27a82:	mov	r2, r6
   27a84:	blx	8c6c <__printf_chk@plt+0x4>
   27a88:	ldr	r2, [pc, #32]	; (27aac <btrfs_destroy_delayed_refs@@Base+0x340>)
   27a8a:	ldr	r3, [pc, #24]	; (27aa4 <btrfs_destroy_delayed_refs@@Base+0x338>)
   27a8c:	add	r2, pc
   27a8e:	ldr	r3, [r2, r3]
   27a90:	ldr	r2, [r3, #0]
   27a92:	ldr	r3, [sp, #284]	; 0x11c
   27a94:	eors	r2, r3
   27a96:	beq.n	27a9c <btrfs_destroy_delayed_refs@@Base+0x330>
   27a98:	blx	88e4 <__stack_chk_fail@plt>
   27a9c:	add	sp, #292	; 0x124
   27a9e:	pop	{r4, r5, r6, r7, pc}
   27aa0:	asrs	r2, r6, #11
   27aa2:	movs	r4, r0
   27aa4:	lsls	r4, r7, #9
   27aa6:	movs	r0, r0
   27aa8:	add	r6, sp, #808	; 0x328
   27aaa:	movs	r1, r0
   27aac:	asrs	r4, r4, #10
   27aae:	movs	r4, r0
   27ab0:	ldr	r2, [pc, #112]	; (27b24 <btrfs_destroy_delayed_refs@@Base+0x3b8>)
   27ab2:	ldr	r3, [pc, #116]	; (27b28 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   27ab4:	add	r2, pc
   27ab6:	push	{r4, r5, r6, r7, lr}
   27ab8:	sub	sp, #116	; 0x74
   27aba:	ldr	r3, [r2, r3]
   27abc:	add	r4, sp, #12
   27abe:	add	r6, sp, #28
   27ac0:	movs	r2, #32
   27ac2:	ldr	r3, [r3, #0]
   27ac4:	str	r3, [sp, #108]	; 0x6c
   27ac6:	mov.w	r3, #0
   27aca:	mov	r1, r4
   27acc:	movs	r3, #16
   27ace:	mov	r5, r0
   27ad0:	bl	1a79e <read_extent_buffer@@Base>
   27ad4:	mov	r1, r6
   27ad6:	mov	r0, r4
   27ad8:	movs	r7, #0
   27ada:	strb.w	r7, [sp, #64]	; 0x40
   27ade:	blx	8760 <uuid_unparse@plt>
   27ae2:	movs	r2, #64	; 0x40
   27ae4:	movs	r3, #16
   27ae6:	mov	r1, r4
   27ae8:	mov	r0, r5
   27aea:	bl	1a79e <read_extent_buffer@@Base>
   27aee:	add	r3, sp, #68	; 0x44
   27af0:	mov	r0, r4
   27af2:	str	r3, [sp, #4]
   27af4:	mov	r1, r3
   27af6:	strb.w	r7, [sp, #104]	; 0x68
   27afa:	blx	8760 <uuid_unparse@plt>
   27afe:	ldr	r1, [pc, #44]	; (27b2c <btrfs_destroy_delayed_refs@@Base+0x3c0>)
   27b00:	ldr	r3, [sp, #4]
   27b02:	mov	r2, r6
   27b04:	add	r1, pc
   27b06:	movs	r0, #1
   27b08:	blx	8c6c <__printf_chk@plt+0x4>
   27b0c:	ldr	r2, [pc, #32]	; (27b30 <btrfs_destroy_delayed_refs@@Base+0x3c4>)
   27b0e:	ldr	r3, [pc, #24]	; (27b28 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   27b10:	add	r2, pc
   27b12:	ldr	r3, [r2, r3]
   27b14:	ldr	r2, [r3, #0]
   27b16:	ldr	r3, [sp, #108]	; 0x6c
   27b18:	eors	r2, r3
   27b1a:	beq.n	27b20 <btrfs_destroy_delayed_refs@@Base+0x3b4>
   27b1c:	blx	88e4 <__stack_chk_fail@plt>
   27b20:	add	sp, #116	; 0x74
   27b22:	pop	{r4, r5, r6, r7, pc}
   27b24:	asrs	r4, r7, #9
   27b26:	movs	r4, r0
   27b28:	lsls	r4, r7, #9
   27b2a:	movs	r0, r0
   27b2c:	add	r6, sp, #448	; 0x1c0
   27b2e:	movs	r1, r0
   27b30:	asrs	r0, r4, #8
   27b32:	movs	r4, r0
   27b34:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   27b38:	mov	r5, r2
   27b3a:	ldr	r2, [pc, #112]	; (27bac <btrfs_destroy_delayed_refs@@Base+0x440>)
   27b3c:	sub	sp, #344	; 0x158
   27b3e:	ldr	r3, [pc, #112]	; (27bb0 <btrfs_destroy_delayed_refs@@Base+0x444>)
   27b40:	adds	r0, #96	; 0x60
   27b42:	add	r2, pc
   27b44:	add	r4, sp, #84	; 0x54
   27b46:	ldr	r6, [r0, r1]
   27b48:	ldr	r3, [r2, r3]
   27b4a:	ldr	r3, [r3, #0]
   27b4c:	str	r3, [sp, #340]	; 0x154
   27b4e:	mov.w	r3, #0
   27b52:	adds	r3, r0, r1
   27b54:	add	r0, sp, #36	; 0x24
   27b56:	str	r6, [r0, #0]
   27b58:	ldr	r7, [r3, #4]
   27b5a:	ldr.w	r8, [r3, #8]
   27b5e:	add	r3, sp, #40	; 0x28
   27b60:	str	r3, [sp, #28]
   27b62:	mov	r1, r3
   27b64:	blx	8930 <localtime_r@plt>
   27b68:	ldr	r2, [pc, #72]	; (27bb4 <btrfs_destroy_delayed_refs@@Base+0x448>)
   27b6a:	ldr	r3, [sp, #28]
   27b6c:	mov.w	r1, #256	; 0x100
   27b70:	add	r2, pc
   27b72:	mov	r0, r4
   27b74:	blx	8ac8 <strftime@plt>
   27b78:	ldr	r3, [pc, #60]	; (27bb8 <btrfs_destroy_delayed_refs@@Base+0x44c>)
   27b7a:	ldr	r1, [pc, #64]	; (27bbc <btrfs_destroy_delayed_refs@@Base+0x450>)
   27b7c:	mov	r2, r5
   27b7e:	add	r3, pc
   27b80:	movs	r0, #1
   27b82:	strd	r4, r3, [sp, #12]
   27b86:	add	r1, pc
   27b88:	stmia.w	sp, {r6, r7, r8}
   27b8c:	blx	8c6c <__printf_chk@plt+0x4>
   27b90:	ldr	r2, [pc, #44]	; (27bc0 <btrfs_destroy_delayed_refs@@Base+0x454>)
   27b92:	ldr	r3, [pc, #28]	; (27bb0 <btrfs_destroy_delayed_refs@@Base+0x444>)
   27b94:	add	r2, pc
   27b96:	ldr	r3, [r2, r3]
   27b98:	ldr	r2, [r3, #0]
   27b9a:	ldr	r3, [sp, #340]	; 0x154
   27b9c:	eors	r2, r3
   27b9e:	beq.n	27ba4 <btrfs_destroy_delayed_refs@@Base+0x438>
   27ba0:	blx	88e4 <__stack_chk_fail@plt>
   27ba4:	add	sp, #344	; 0x158
   27ba6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   27baa:	nop
   27bac:	asrs	r6, r5, #7
   27bae:	movs	r4, r0
   27bb0:	lsls	r4, r7, #9
   27bb2:	movs	r0, r0
   27bb4:	add	r6, sp, #120	; 0x78
   27bb6:	movs	r1, r0
   27bb8:	stmia	r0!, {r2, r3, r7}
   27bba:	movs	r1, r0
   27bbc:	add	r6, sp, #104	; 0x68
   27bbe:	movs	r1, r0
   27bc0:	asrs	r4, r3, #6
   27bc2:	movs	r4, r0
   27bc4:	push	{r0, r1, r2, r3, r4, lr}
   27bc6:	ldr	r4, [pc, #40]	; (27bf0 <btrfs_destroy_delayed_refs@@Base+0x484>)
   27bc8:	ldr	r5, [pc, #40]	; (27bf4 <btrfs_destroy_delayed_refs@@Base+0x488>)
   27bca:	add	r4, pc
   27bcc:	ldr	r4, [r4, r5]
   27bce:	strd	r2, r1, [sp]
   27bd2:	movs	r1, #1
   27bd4:	strd	r0, r3, [sp, #8]
   27bd8:	ldr	r2, [pc, #28]	; (27bf8 <btrfs_destroy_delayed_refs@@Base+0x48c>)
   27bda:	ldr	r3, [pc, #32]	; (27bfc <btrfs_destroy_delayed_refs@@Base+0x490>)
   27bdc:	add	r2, pc
   27bde:	ldr	r0, [r4, #0]
   27be0:	add	r3, pc
   27be2:	blx	8ca0 <__fprintf_chk@plt+0x4>
   27be6:	bl	27820 <btrfs_destroy_delayed_refs@@Base+0xb4>
   27bea:	blx	8e08 <abort@plt>
   27bee:	nop
   27bf0:	asrs	r6, r4, #5
   27bf2:	movs	r4, r0
   27bf4:	lsls	r4, r1, #10
   27bf6:	movs	r0, r0
   27bf8:	strh	r3, [r1, r7]
   27bfa:	movs	r1, r0
   27bfc:	strb	r6, [r4, r0]
   27bfe:	movs	r1, r0
   27c00:	push	{r3, lr}
   27c02:	ldr	r3, [r0, #92]	; 0x5c
   27c04:	ldr	r2, [r0, #76]	; 0x4c
   27c06:	cbz	r3, 27c22 <btrfs_destroy_delayed_refs@@Base+0x4b6>
   27c08:	ldr.w	r3, [r3, #384]	; 0x180
   27c0c:	cmp	r3, r2
   27c0e:	beq.n	27c22 <btrfs_destroy_delayed_refs@@Base+0x4b6>
   27c10:	ldr	r1, [pc, #32]	; (27c34 <btrfs_destroy_delayed_refs@@Base+0x4c8>)
   27c12:	movs	r3, #1
   27c14:	ldr	r0, [pc, #32]	; (27c38 <btrfs_destroy_delayed_refs@@Base+0x4cc>)
   27c16:	movw	r2, #1246	; 0x4de
   27c1a:	add	r1, pc
   27c1c:	add	r0, pc
   27c1e:	bl	27bc4 <btrfs_destroy_delayed_refs@@Base+0x458>
   27c22:	ldr	r3, [pc, #12]	; (27c30 <btrfs_destroy_delayed_refs@@Base+0x4c4>)
   27c24:	subs	r2, #101	; 0x65
   27c26:	umull	r2, r3, r2, r3
   27c2a:	lsrs	r0, r3, #3
   27c2c:	pop	{r3, pc}
   27c2e:	nop
   27c30:	strh	r1, [r4, #30]
   27c32:	subs	r6, #15
   27c34:	bkpt	0x00c7
   27c36:	movs	r1, r0
   27c38:	add	r5, sp, #596	; 0x254
   27c3a:	movs	r1, r0

00027c3c <print_chunk_item@@Base>:
   27c3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27c40:	add.w	r8, r0, #96	; 0x60
   27c44:	ldr	r2, [pc, #376]	; (27dc0 <print_chunk_item@@Base+0x184>)
   27c46:	add.w	r9, r8, r1
   27c4a:	ldr	r3, [pc, #376]	; (27dc4 <print_chunk_item@@Base+0x188>)
   27c4c:	sub	sp, #148	; 0x94
   27c4e:	add	r2, pc
   27c50:	ldrh.w	r6, [r9, #44]	; 0x2c
   27c54:	movs	r5, #0
   27c56:	mov	r7, r0
   27c58:	ldr	r3, [r2, r3]
   27c5a:	mov	r4, r1
   27c5c:	add	r0, sp, #72	; 0x48
   27c5e:	movs	r2, #28
   27c60:	mov	r1, r5
   27c62:	ldr	r3, [r3, #0]
   27c64:	str	r3, [sp, #140]	; 0x8c
   27c66:	mov.w	r3, #0
   27c6a:	str	r5, [sp, #68]	; 0x44
   27c6c:	blx	8bf8 <memset@plt+0x4>
   27c70:	cbnz	r6, 27c80 <print_chunk_item@@Base+0x44>
   27c72:	ldr	r1, [pc, #340]	; (27dc8 <print_chunk_item@@Base+0x18c>)
   27c74:	mov	r2, r6
   27c76:	add	r1, pc
   27c78:	movs	r0, #1
   27c7a:	blx	8c6c <__printf_chk@plt+0x4>
   27c7e:	b.n	27c94 <print_chunk_item@@Base+0x58>
   27c80:	ldr	r2, [r7, #76]	; 0x4c
   27c82:	add.w	r3, r4, r6, lsl #5
   27c86:	adds	r3, #48	; 0x30
   27c88:	cmp	r3, r2
   27c8a:	bls.n	27caa <print_chunk_item@@Base+0x6e>
   27c8c:	ldr	r0, [pc, #316]	; (27dcc <print_chunk_item@@Base+0x190>)
   27c8e:	add	r0, pc
   27c90:	blx	8a78 <puts@plt+0x4>
   27c94:	ldr	r2, [pc, #312]	; (27dd0 <print_chunk_item@@Base+0x194>)
   27c96:	ldr	r3, [pc, #300]	; (27dc4 <print_chunk_item@@Base+0x188>)
   27c98:	add	r2, pc
   27c9a:	ldr	r3, [r2, r3]
   27c9c:	ldr	r2, [r3, #0]
   27c9e:	ldr	r3, [sp, #140]	; 0x8c
   27ca0:	eors	r2, r3
   27ca2:	beq.w	27db8 <print_chunk_item@@Base+0x17c>
   27ca6:	blx	88e4 <__stack_chk_fail@plt>
   27caa:	add.w	sl, sp, #68	; 0x44
   27cae:	ldr.w	r0, [r9, #24]
   27cb2:	ldr.w	r1, [r9, #28]
   27cb6:	adds	r4, #48	; 0x30
   27cb8:	mov	r2, sl
   27cba:	ldr.w	fp, [pc, #280]	; 27dd4 <print_chunk_item@@Base+0x198>
   27cbe:	bl	2786c <btrfs_destroy_delayed_refs@@Base+0x100>
   27cc2:	str.w	sl, [sp, #16]
   27cc6:	ldr.w	r2, [r9, #16]
   27cca:	movs	r0, #1
   27ccc:	ldr.w	r3, [r9, #20]
   27cd0:	add	fp, pc
   27cd2:	ldr	r1, [pc, #260]	; (27dd8 <print_chunk_item@@Base+0x19c>)
   27cd4:	ldr.w	sl, [pc, #260]	; 27ddc <print_chunk_item@@Base+0x1a0>
   27cd8:	strd	r2, r3, [sp, #8]
   27cdc:	add	r1, pc
   27cde:	ldr.w	r2, [r9, #8]
   27ce2:	add	sl, pc
   27ce4:	ldr.w	r3, [r9, #12]
   27ce8:	strd	r2, r3, [sp]
   27cec:	ldr.w	r2, [r9]
   27cf0:	ldr.w	r3, [r9, #4]
   27cf4:	blx	8c6c <__printf_chk@plt+0x4>
   27cf8:	ldr.w	r3, [r9, #40]	; 0x28
   27cfc:	ldr	r1, [pc, #224]	; (27de0 <print_chunk_item@@Base+0x1a4>)
   27cfe:	movs	r0, #1
   27d00:	str	r3, [sp, #0]
   27d02:	add	r1, pc
   27d04:	ldr.w	r3, [r9, #36]	; 0x24
   27d08:	ldr.w	r2, [r9, #32]
   27d0c:	blx	8c6c <__printf_chk@plt+0x4>
   27d10:	ldr	r1, [pc, #208]	; (27de4 <print_chunk_item@@Base+0x1a8>)
   27d12:	ldrh.w	r3, [r9, #46]	; 0x2e
   27d16:	mov	r2, r6
   27d18:	add	r1, pc
   27d1a:	movs	r0, #1
   27d1c:	blx	8c6c <__printf_chk@plt+0x4>
   27d20:	add.w	r9, sp, #52	; 0x34
   27d24:	add.w	ip, r4, #16
   27d28:	movs	r3, #0
   27d2a:	movs	r1, #0
   27d2c:	cmp	r3, r1
   27d2e:	it	eq
   27d30:	cmpeq	ip, r4
   27d32:	mov	r2, ip
   27d34:	strd	r2, r3, [sp, #24]
   27d38:	bcc.n	27d64 <print_chunk_item@@Base+0x128>
   27d3a:	ldr	r3, [sp, #24]
   27d3c:	adds	r3, #16
   27d3e:	str	r3, [sp, #32]
   27d40:	ldr	r3, [sp, #28]
   27d42:	adc.w	r3, r3, #0
   27d46:	str	r3, [sp, #36]	; 0x24
   27d48:	adds.w	r3, r4, #32
   27d4c:	str	r3, [sp, #40]	; 0x28
   27d4e:	adc.w	r3, r1, #0
   27d52:	str	r3, [sp, #44]	; 0x2c
   27d54:	ldrd	r2, r3, [sp, #40]	; 0x28
   27d58:	ldrd	r0, r1, [sp, #32]
   27d5c:	cmp	r3, r1
   27d5e:	it	eq
   27d60:	cmpeq	r2, r0
   27d62:	bcs.n	27d6c <print_chunk_item@@Base+0x130>
   27d64:	ldr	r1, [pc, #128]	; (27de8 <print_chunk_item@@Base+0x1ac>)
   27d66:	mov	r2, r5
   27d68:	add	r1, pc
   27d6a:	b.n	27c78 <print_chunk_item@@Base+0x3c>
   27d6c:	mov	r2, ip
   27d6e:	movs	r3, #16
   27d70:	mov	r1, r9
   27d72:	mov	r0, r7
   27d74:	bl	1a79e <read_extent_buffer@@Base>
   27d78:	add	r3, sp, #100	; 0x64
   27d7a:	mov	r0, r9
   27d7c:	str	r3, [sp, #24]
   27d7e:	mov	r1, r3
   27d80:	blx	8760 <uuid_unparse@plt>
   27d84:	add.w	r2, r8, r4
   27d88:	adds	r4, #32
   27d8a:	ldr	r0, [r2, #8]
   27d8c:	ldr	r1, [r2, #12]
   27d8e:	strd	r0, r1, [sp, #8]
   27d92:	movs	r0, #1
   27d94:	ldr	r1, [r2, #0]
   27d96:	ldr	r2, [r2, #4]
   27d98:	strd	r1, r2, [sp]
   27d9c:	mov	r2, r5
   27d9e:	mov	r1, fp
   27da0:	adds	r5, #1
   27da2:	blx	8c6c <__printf_chk@plt+0x4>
   27da6:	ldr	r3, [sp, #24]
   27da8:	mov	r1, sl
   27daa:	movs	r0, #1
   27dac:	mov	r2, r3
   27dae:	blx	8c6c <__printf_chk@plt+0x4>
   27db2:	cmp	r6, r5
   27db4:	bgt.n	27d24 <print_chunk_item@@Base+0xe8>
   27db6:	b.n	27c94 <print_chunk_item@@Base+0x58>
   27db8:	add	sp, #148	; 0x94
   27dba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27dbe:	nop
   27dc0:	asrs	r2, r4, #3
   27dc2:	movs	r4, r0
   27dc4:	lsls	r4, r7, #9
   27dc6:	movs	r0, r0
   27dc8:	add	r5, sp, #428	; 0x1ac
   27dca:	movs	r1, r0
   27dcc:	add	r5, sp, #432	; 0x1b0
   27dce:	movs	r1, r0
   27dd0:	asrs	r0, r3, #2
   27dd2:	movs	r4, r0
   27dd4:	add	r5, sp, #848	; 0x350
   27dd6:	movs	r1, r0
   27dd8:	add	r5, sp, #204	; 0xcc
   27dda:	movs	r1, r0
   27ddc:	add	r5, sp, #924	; 0x39c
   27dde:	movs	r1, r0
   27de0:	add	r5, sp, #252	; 0xfc
   27de2:	movs	r1, r0
   27de4:	add	r5, sp, #332	; 0x14c
   27de6:	movs	r1, r0
   27de8:	add	r5, sp, #152	; 0x98
   27dea:	movs	r1, r0

00027dec <print_key_type@@Base>:
   27dec:	push	{r4, r5, r6, r7}
   27dee:	mov	r5, r3
   27df0:	ldrb.w	r3, [sp, #16]
   27df4:	cbnz	r3, 27e12 <print_key_type@@Base+0x26>
   27df6:	mov.w	r7, #4294967295	; 0xffffffff
   27dfa:	cmp	r5, r7
   27dfc:	mvn.w	r6, #10
   27e00:	it	eq
   27e02:	cmpeq	r2, r6
   27e04:	bne.n	27e12 <print_key_type@@Base+0x26>
   27e06:	mov	r1, r0
   27e08:	ldr	r0, [pc, #36]	; (27e30 <print_key_type@@Base+0x44>)
   27e0a:	add	r0, pc
   27e0c:	pop	{r4, r5, r6, r7}
   27e0e:	b.w	8de0 <fputs@plt>
   27e12:	ldr	r2, [pc, #32]	; (27e34 <print_key_type@@Base+0x48>)
   27e14:	add	r2, pc
   27e16:	ldr.w	r2, [r2, r3, lsl #2]
   27e1a:	cbz	r2, 27e22 <print_key_type@@Base+0x36>
   27e1c:	mov	r1, r0
   27e1e:	mov	r0, r2
   27e20:	b.n	27e0c <print_key_type@@Base+0x20>
   27e22:	ldr	r2, [pc, #20]	; (27e38 <print_key_type@@Base+0x4c>)
   27e24:	movs	r1, #1
   27e26:	pop	{r4, r5, r6, r7}
   27e28:	add	r2, pc
   27e2a:	b.w	8c9c <__fprintf_chk@plt>
   27e2e:	nop
   27e30:	add	r4, sp, #828	; 0x33c
   27e32:	movs	r1, r0
   27e34:	lsrs	r4, r5, #5
   27e36:	movs	r4, r0
   27e38:	add	r4, sp, #740	; 0x2e4
   27e3a:	movs	r1, r0

00027e3c <print_objectid@@Base>:
   27e3c:	stmdb	sp!, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, lr}
   27e40:	mov	r4, r0
   27e42:	ldrb.w	r1, [sp, #48]	; 0x30
   27e46:	mov	r6, r2
   27e48:	mov	r7, r3
   27e4a:	cmp	r1, #249	; 0xf9
   27e4c:	beq.n	27ea4 <print_objectid@@Base+0x68>
   27e4e:	bhi.n	27e92 <print_objectid@@Base+0x56>
   27e50:	cmp	r1, #204	; 0xcc
   27e52:	beq.n	27e80 <print_objectid@@Base+0x44>
   27e54:	cmp	r1, #246	; 0xf6
   27e56:	beq.n	27ec6 <print_objectid@@Base+0x8a>
   27e58:	mov.w	r3, #4294967295	; 0xffffffff
   27e5c:	cmp	r7, r3
   27e5e:	mvn.w	r2, #254	; 0xfe
   27e62:	it	eq
   27e64:	cmpeq	r6, r2
   27e66:	beq.w	2802a <print_objectid@@Base+0x1ee>
   27e6a:	cmp	r3, r7
   27e6c:	it	eq
   27e6e:	cmpeq	r2, r6
   27e70:	bcc.n	27f22 <print_objectid@@Base+0xe6>
   27e72:	cmp	r7, #0
   27e74:	it	eq
   27e76:	cmpeq	r6, #11
   27e78:	bcs.n	27f0c <print_objectid@@Base+0xd0>
   27e7a:	orrs.w	r3, r6, r7
   27e7e:	bne.n	27ee4 <print_objectid@@Base+0xa8>
   27e80:	ldr	r2, [pc, #440]	; (2803c <print_objectid@@Base+0x200>)
   27e82:	movs	r1, #1
   27e84:	mov	r0, r4
   27e86:	strd	r6, r7, [sp]
   27e8a:	add	r2, pc
   27e8c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   27e90:	b.n	27ede <print_objectid@@Base+0xa2>
   27e92:	adds	r3, r1, #5
   27e94:	uxtb	r3, r3
   27e96:	cmp	r3, #1
   27e98:	bhi.n	27e58 <print_objectid@@Base+0x1c>
   27e9a:	ldr	r2, [pc, #420]	; (28040 <print_objectid@@Base+0x204>)
   27e9c:	strd	r6, r7, [sp]
   27ea0:	add	r2, pc
   27ea2:	b.n	27ec2 <print_objectid@@Base+0x86>
   27ea4:	orrs.w	r3, r6, r7
   27ea8:	bne.n	27eba <print_objectid@@Base+0x7e>
   27eaa:	mov	r1, r0
   27eac:	ldr	r0, [pc, #404]	; (28044 <print_objectid@@Base+0x208>)
   27eae:	add	r0, pc
   27eb0:	add	sp, #16
   27eb2:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   27eb6:	b.w	8de0 <fputs@plt>
   27eba:	ldr	r2, [pc, #396]	; (28048 <print_objectid@@Base+0x20c>)
   27ebc:	strd	r6, r7, [sp]
   27ec0:	add	r2, pc
   27ec2:	movs	r1, #1
   27ec4:	b.n	27e8c <print_objectid@@Base+0x50>
   27ec6:	uxth	r3, r3
   27ec8:	strd	r2, r3, [sp, #8]
   27ecc:	ldr	r2, [pc, #380]	; (2804c <print_objectid@@Base+0x210>)
   27ece:	lsrs	r3, r7, #16
   27ed0:	movs	r1, #1
   27ed2:	str	r3, [sp, #0]
   27ed4:	add	r2, pc
   27ed6:	movs	r3, #0
   27ed8:	str	r3, [sp, #4]
   27eda:	blx	8ca0 <__fprintf_chk@plt+0x4>
   27ede:	add	sp, #16
   27ee0:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   27ee4:	subs.w	sl, r6, #2
   27ee8:	adc.w	fp, r7, #4294967295	; 0xffffffff
   27eec:	cmp.w	fp, #0
   27ef0:	it	eq
   27ef2:	cmpeq.w	sl, #9
   27ef6:	bcs.n	27f88 <print_objectid@@Base+0x14c>
   27ef8:	cmp.w	sl, #8
   27efc:	bhi.n	27f88 <print_objectid@@Base+0x14c>
   27efe:	tbb	[pc, sl]
   27f02:	str	r4, [r1, r1]
   27f04:	ldr	r4, [r2, r1]
   27f06:	str	r4, [r3, #4]
   27f08:	ldrh	r0, [r1, #36]	; 0x24
   27f0a:	lsls	r0, r2, #2
   27f0c:	cmp	r7, #0
   27f0e:	it	eq
   27f10:	cmpeq.w	r6, #256	; 0x100
   27f14:	bne.n	27e80 <print_objectid@@Base+0x44>
   27f16:	cmp	r1, #228	; 0xe4
   27f18:	bne.n	27e80 <print_objectid@@Base+0x44>
   27f1a:	ldr	r0, [pc, #308]	; (28050 <print_objectid@@Base+0x214>)
   27f1c:	mov	r1, r4
   27f1e:	add	r0, pc
   27f20:	b.n	27eb0 <print_objectid@@Base+0x74>
   27f22:	mov.w	r3, #4294967295	; 0xffffffff
   27f26:	cmp	r3, r7
   27f28:	mvn.w	r2, #12
   27f2c:	it	eq
   27f2e:	cmpeq	r2, r6
   27f30:	bcs.n	27e80 <print_objectid@@Base+0x44>
   27f32:	adds.w	r8, r6, #12
   27f36:	adc.w	r9, r7, #0
   27f3a:	cmp.w	r9, #0
   27f3e:	it	eq
   27f40:	cmpeq.w	r8, #12
   27f44:	bcs.n	27e80 <print_objectid@@Base+0x44>
   27f46:	cmp.w	r8, #11
   27f4a:	bhi.n	27e80 <print_objectid@@Base+0x44>
   27f4c:	add	r3, pc, #8	; (adr r3, 27f58 <print_objectid@@Base+0x11c>)
   27f4e:	ldr.w	r2, [r3, r8, lsl #2]
   27f52:	add	r3, r2
   27f54:	bx	r3
   27f56:	nop
   27f58:	lsls	r3, r6, #2
   27f5a:	movs	r0, r0
   27f5c:	lsls	r3, r5, #2
   27f5e:	movs	r0, r0
   27f60:	lsls	r3, r4, #2
   27f62:	movs	r0, r0
   27f64:	lsls	r3, r3, #2
   27f66:	movs	r0, r0
   27f68:	lsls	r3, r2, #2
   27f6a:	movs	r0, r0
   27f6c:	lsls	r3, r1, #2
   27f6e:	movs	r0, r0
   27f70:	lsls	r3, r0, #2
   27f72:	movs	r0, r0
   27f74:	lsls	r3, r7, #1
   27f76:	movs	r0, r0
   27f78:	lsls	r3, r6, #1
   27f7a:	movs	r0, r0
   27f7c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   27f80:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   27f84:	lsls	r3, r3, #3
   27f86:	movs	r0, r0
   27f88:	cmp	r1, #216	; 0xd8
   27f8a:	mov	r1, r4
   27f8c:	bne.n	27f94 <print_objectid@@Base+0x158>
   27f8e:	ldr	r0, [pc, #196]	; (28054 <print_objectid@@Base+0x218>)
   27f90:	add	r0, pc
   27f92:	b.n	27eb0 <print_objectid@@Base+0x74>
   27f94:	ldr	r0, [pc, #192]	; (28058 <print_objectid@@Base+0x21c>)
   27f96:	add	r0, pc
   27f98:	b.n	27eb0 <print_objectid@@Base+0x74>
   27f9a:	ldr	r0, [pc, #192]	; (2805c <print_objectid@@Base+0x220>)
   27f9c:	mov	r1, r4
   27f9e:	add	r0, pc
   27fa0:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fa2:	ldr	r0, [pc, #188]	; (28060 <print_objectid@@Base+0x224>)
   27fa4:	mov	r1, r4
   27fa6:	add	r0, pc
   27fa8:	b.n	27eb0 <print_objectid@@Base+0x74>
   27faa:	ldr	r0, [pc, #184]	; (28064 <print_objectid@@Base+0x228>)
   27fac:	mov	r1, r4
   27fae:	add	r0, pc
   27fb0:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fb2:	ldr	r0, [pc, #180]	; (28068 <print_objectid@@Base+0x22c>)
   27fb4:	mov	r1, r4
   27fb6:	add	r0, pc
   27fb8:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fba:	ldr	r0, [pc, #176]	; (2806c <print_objectid@@Base+0x230>)
   27fbc:	mov	r1, r4
   27fbe:	add	r0, pc
   27fc0:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fc2:	ldr	r0, [pc, #172]	; (28070 <print_objectid@@Base+0x234>)
   27fc4:	mov	r1, r4
   27fc6:	add	r0, pc
   27fc8:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fca:	ldr	r0, [pc, #168]	; (28074 <print_objectid@@Base+0x238>)
   27fcc:	mov	r1, r4
   27fce:	add	r0, pc
   27fd0:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fd2:	ldr	r0, [pc, #164]	; (28078 <print_objectid@@Base+0x23c>)
   27fd4:	mov	r1, r4
   27fd6:	add	r0, pc
   27fd8:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fda:	ldr	r0, [pc, #160]	; (2807c <print_objectid@@Base+0x240>)
   27fdc:	mov	r1, r4
   27fde:	add	r0, pc
   27fe0:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fe2:	ldr	r0, [pc, #156]	; (28080 <print_objectid@@Base+0x244>)
   27fe4:	mov	r1, r4
   27fe6:	add	r0, pc
   27fe8:	b.n	27eb0 <print_objectid@@Base+0x74>
   27fea:	ldr	r0, [pc, #152]	; (28084 <print_objectid@@Base+0x248>)
   27fec:	mov	r1, r4
   27fee:	add	r0, pc
   27ff0:	b.n	27eb0 <print_objectid@@Base+0x74>
   27ff2:	ldr	r0, [pc, #148]	; (28088 <print_objectid@@Base+0x24c>)
   27ff4:	mov	r1, r4
   27ff6:	add	r0, pc
   27ff8:	b.n	27eb0 <print_objectid@@Base+0x74>
   27ffa:	ldr	r0, [pc, #144]	; (2808c <print_objectid@@Base+0x250>)
   27ffc:	mov	r1, r4
   27ffe:	add	r0, pc
   28000:	b.n	27eb0 <print_objectid@@Base+0x74>
   28002:	ldr	r0, [pc, #140]	; (28090 <print_objectid@@Base+0x254>)
   28004:	mov	r1, r4
   28006:	add	r0, pc
   28008:	b.n	27eb0 <print_objectid@@Base+0x74>
   2800a:	ldr	r0, [pc, #136]	; (28094 <print_objectid@@Base+0x258>)
   2800c:	mov	r1, r4
   2800e:	add	r0, pc
   28010:	b.n	27eb0 <print_objectid@@Base+0x74>
   28012:	ldr	r0, [pc, #132]	; (28098 <print_objectid@@Base+0x25c>)
   28014:	mov	r1, r4
   28016:	add	r0, pc
   28018:	b.n	27eb0 <print_objectid@@Base+0x74>
   2801a:	ldr	r0, [pc, #128]	; (2809c <print_objectid@@Base+0x260>)
   2801c:	mov	r1, r4
   2801e:	add	r0, pc
   28020:	b.n	27eb0 <print_objectid@@Base+0x74>
   28022:	ldr	r0, [pc, #124]	; (280a0 <print_objectid@@Base+0x264>)
   28024:	mov	r1, r4
   28026:	add	r0, pc
   28028:	b.n	27eb0 <print_objectid@@Base+0x74>
   2802a:	ldr	r0, [pc, #120]	; (280a4 <print_objectid@@Base+0x268>)
   2802c:	mov	r1, r4
   2802e:	add	r0, pc
   28030:	b.n	27eb0 <print_objectid@@Base+0x74>
   28032:	ldr	r0, [pc, #116]	; (280a8 <print_objectid@@Base+0x26c>)
   28034:	mov	r1, r4
   28036:	add	r0, pc
   28038:	b.n	27eb0 <print_objectid@@Base+0x74>
   2803a:	nop
   2803c:	stmia	r3!, {r1, r2, r4, r5, r6}
   2803e:	movs	r1, r0
   28040:	add	r4, sp, #344	; 0x158
   28042:	movs	r1, r0
   28044:	add	r4, sp, #248	; 0xf8
   28046:	movs	r1, r0
   28048:	stmia	r3!, {r6}
   2804a:	movs	r1, r0
   2804c:	str	r0, [r5, #84]	; 0x54
   2804e:	movs	r1, r0
   28050:	add	r4, sp, #728	; 0x2d8
   28052:	movs	r1, r0
   28054:	add	r3, sp, #448	; 0x1c0
   28056:	movs	r1, r0
   28058:	add	r3, sp, #464	; 0x1d0
   2805a:	movs	r1, r0
   2805c:	add	r3, sp, #472	; 0x1d8
   2805e:	movs	r1, r0
   28060:	add	r4, sp, #208	; 0xd0
   28062:	movs	r1, r0
   28064:	add	r3, sp, #456	; 0x1c8
   28066:	movs	r1, r0
   28068:	add	r3, sp, #460	; 0x1cc
   2806a:	movs	r1, r0
   2806c:	add	r3, sp, #460	; 0x1cc
   2806e:	movs	r1, r0
   28070:	add	r3, sp, #484	; 0x1e4
   28072:	movs	r1, r0
   28074:	add	r3, sp, #492	; 0x1ec
   28076:	movs	r1, r0
   28078:	add	r3, sp, #492	; 0x1ec
   2807a:	movs	r1, r0
   2807c:	add	r3, sp, #488	; 0x1e8
   2807e:	movs	r1, r0
   28080:	add	r3, sp, #492	; 0x1ec
   28082:	movs	r1, r0
   28084:	add	r3, sp, #500	; 0x1f4
   28086:	movs	r1, r0
   28088:	add	r3, sp, #512	; 0x200
   2808a:	movs	r1, r0
   2808c:	add	r3, sp, #544	; 0x220
   2808e:	movs	r1, r0
   28090:	add	r3, sp, #560	; 0x230
   28092:	movs	r1, r0
   28094:	add	r3, sp, #572	; 0x23c
   28096:	movs	r1, r0
   28098:	add	r3, sp, #576	; 0x240
   2809a:	movs	r1, r0
   2809c:	add	r3, sp, #588	; 0x24c
   2809e:	movs	r1, r0
   280a0:	add	r3, sp, #596	; 0x254
   280a2:	movs	r1, r0
   280a4:	add	r3, sp, #628	; 0x274
   280a6:	movs	r1, r0
   280a8:	ldr	r3, [sp, #924]	; 0x39c
   280aa:	movs	r1, r0

000280ac <btrfs_print_key@@Base>:
   280ac:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   280b0:	ldr	r1, [pc, #244]	; (281a8 <btrfs_print_key@@Base+0xfc>)
   280b2:	ldrb	r6, [r0, #8]
   280b4:	ldr.w	r8, [r0]
   280b8:	add	r1, pc
   280ba:	ldr.w	r9, [r0, #4]
   280be:	ldr.w	r4, [r0, #9]
   280c2:	ldr.w	r5, [r0, #13]
   280c6:	movs	r0, #1
   280c8:	ldr	r7, [pc, #224]	; (281ac <btrfs_print_key@@Base+0x100>)
   280ca:	blx	8c6c <__printf_chk@plt+0x4>
   280ce:	ldr	r3, [pc, #224]	; (281b0 <btrfs_print_key@@Base+0x104>)
   280d0:	mov	r2, r8
   280d2:	add	r7, pc
   280d4:	ldr	r7, [r7, r3]
   280d6:	mov	r3, r9
   280d8:	str	r6, [sp, #0]
   280da:	ldr	r0, [r7, #0]
   280dc:	bl	27e3c <print_objectid@@Base>
   280e0:	movs	r0, #32
   280e2:	blx	8c08 <putchar@plt+0x4>
   280e6:	str	r6, [sp, #0]
   280e8:	ldr	r0, [r7, #0]
   280ea:	mov	r2, r8
   280ec:	mov	r3, r9
   280ee:	bl	27dec <print_key_type@@Base>
   280f2:	cmp	r6, #132	; 0x84
   280f4:	beq.n	28144 <btrfs_print_key@@Base+0x98>
   280f6:	add.w	r3, r6, #14
   280fa:	uxtb	r3, r3
   280fc:	cmp	r3, #10
   280fe:	bhi.n	28182 <btrfs_print_key@@Base+0xd6>
   28100:	subs	r6, #242	; 0xf2
   28102:	cmp	r6, #10
   28104:	bhi.n	28182 <btrfs_print_key@@Base+0xd6>
   28106:	tbb	[pc, r6]
   2810a:	subs	r4, #6
   2810c:	subs	r4, #6
   2810e:	subs	r4, #6
   28110:	subs	r4, #60	; 0x3c
   28112:	asrs	r4, r7, #12
   28114:	movs	r3, r2
   28116:	ldr	r1, [pc, #156]	; (281b4 <btrfs_print_key@@Base+0x108>)
   28118:	uxth	r3, r5
   2811a:	lsrs	r2, r5, #16
   2811c:	strd	r4, r3, [sp]
   28120:	add	r1, pc
   28122:	movs	r3, #0
   28124:	movs	r0, #1
   28126:	blx	8c6c <__printf_chk@plt+0x4>
   2812a:	add	sp, #12
   2812c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   28130:	ldr	r1, [pc, #132]	; (281b8 <btrfs_print_key@@Base+0x10c>)
   28132:	mov	r2, r4
   28134:	mov	r3, r5
   28136:	add	r1, pc
   28138:	movs	r0, #1
   2813a:	add	sp, #12
   2813c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   28140:	b.w	8c68 <__printf_chk@plt>
   28144:	movs	r0, #32
   28146:	blx	8c08 <putchar@plt+0x4>
   2814a:	mov.w	r3, #4294967295	; 0xffffffff
   2814e:	cmp	r9, r3
   28150:	mvn.w	r2, #7
   28154:	it	eq
   28156:	cmpeq	r8, r2
   28158:	bne.n	28172 <btrfs_print_key@@Base+0xc6>
   2815a:	str	r6, [sp, #0]
   2815c:	mov	r2, r4
   2815e:	ldr	r0, [r7, #0]
   28160:	mov	r3, r5
   28162:	bl	27e3c <print_objectid@@Base>
   28166:	movs	r0, #41	; 0x29
   28168:	add	sp, #12
   2816a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2816e:	b.w	8c04 <putchar@plt>
   28172:	ldr	r1, [pc, #72]	; (281bc <btrfs_print_key@@Base+0x110>)
   28174:	mov	r2, r4
   28176:	mov	r3, r5
   28178:	movs	r0, #1
   2817a:	add	r1, pc
   2817c:	blx	8c6c <__printf_chk@plt+0x4>
   28180:	b.n	28166 <btrfs_print_key@@Base+0xba>
   28182:	adds	r3, r5, #1
   28184:	it	eq
   28186:	cmpeq.w	r4, #4294967295	; 0xffffffff
   2818a:	bne.n	2819c <btrfs_print_key@@Base+0xf0>
   2818c:	ldr	r1, [pc, #48]	; (281c0 <btrfs_print_key@@Base+0x114>)
   2818e:	movs	r0, #1
   28190:	add	r1, pc
   28192:	add	sp, #12
   28194:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   28198:	b.w	8c68 <__printf_chk@plt>
   2819c:	ldr	r1, [pc, #36]	; (281c4 <btrfs_print_key@@Base+0x118>)
   2819e:	mov	r2, r4
   281a0:	mov	r3, r5
   281a2:	add	r1, pc
   281a4:	b.n	28138 <btrfs_print_key@@Base+0x8c>
   281a6:	nop
   281a8:	add	r3, sp, #180	; 0xb4
   281aa:	movs	r1, r0
   281ac:	lsrs	r6, r3, #17
   281ae:	movs	r4, r0
   281b0:	lsls	r0, r6, #10
   281b2:	movs	r0, r0
   281b4:	add	r2, sp, #812	; 0x32c
   281b6:	movs	r1, r0
   281b8:	add	r2, sp, #772	; 0x304
   281ba:	movs	r1, r0
   281bc:	stmia	r0!, {r1, r2, r7}
   281be:	movs	r1, r0
   281c0:	add	r2, sp, #460	; 0x1cc
   281c2:	movs	r1, r0
   281c4:	add	r2, sp, #408	; 0x198
   281c6:	movs	r1, r0

000281c8 <print_extent_item@@Base>:
   281c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   281cc:	sub	sp, #92	; 0x5c
   281ce:	ldr	r3, [pc, #632]	; (28448 <print_extent_item@@Base+0x280>)
   281d0:	add.w	r5, r0, #96	; 0x60
   281d4:	str	r2, [sp, #28]
   281d6:	movs	r6, #0
   281d8:	ldr	r2, [pc, #624]	; (2844c <print_extent_item@@Base+0x284>)
   281da:	mov	r8, r0
   281dc:	add	r0, sp, #56	; 0x38
   281de:	ldr.w	sl, [pc, #624]	; 28450 <print_extent_item@@Base+0x288>
   281e2:	add	r2, pc
   281e4:	add	sl, pc
   281e6:	ldr	r3, [r2, r3]
   281e8:	movs	r2, #28
   281ea:	ldr	r3, [r3, #0]
   281ec:	str	r3, [sp, #84]	; 0x54
   281ee:	mov.w	r3, #0
   281f2:	movs	r3, #25
   281f4:	muls	r1, r3
   281f6:	str	r6, [sp, #52]	; 0x34
   281f8:	add.w	r7, r1, #101	; 0x65
   281fc:	mov	r1, r6
   281fe:	adds	r4, r5, r7
   28200:	ldr.w	r3, [r4, #21]
   28204:	str	r3, [sp, #24]
   28206:	blx	8bf8 <memset@plt+0x4>
   2820a:	ldr	r3, [sp, #24]
   2820c:	cmp	r3, #23
   2820e:	bls.w	28340 <print_extent_item@@Base+0x178>
   28212:	ldr.w	r4, [r4, #17]
   28216:	mov	r3, r6
   28218:	adds	r4, #101	; 0x65
   2821a:	add.w	r9, r5, r4
   2821e:	ldr.w	fp, [r9, #16]
   28222:	and.w	r2, fp, #1
   28226:	orrs	r3, r2
   28228:	add	r3, sp, #52	; 0x34
   2822a:	beq.w	28354 <print_extent_item@@Base+0x18c>
   2822e:	ldr	r1, [pc, #548]	; (28454 <print_extent_item@@Base+0x28c>)
   28230:	mov	r0, r3
   28232:	add	r1, pc
   28234:	blx	8a08 <strcpy@plt>
   28238:	mov	r3, r0
   2823a:	and.w	r2, fp, #2
   2823e:	str	r2, [sp, #16]
   28240:	movs	r2, #0
   28242:	str	r2, [sp, #20]
   28244:	ldrd	r1, r2, [sp, #16]
   28248:	orrs	r2, r1
   2824a:	beq.n	28266 <print_extent_item@@Base+0x9e>
   2824c:	cbnz	r6, 2825a <print_extent_item@@Base+0x92>
   2824e:	ldr	r1, [pc, #520]	; (28458 <print_extent_item@@Base+0x290>)
   28250:	movs	r2, #32
   28252:	mov	r0, r3
   28254:	add	r1, pc
   28256:	blx	8bb8 <__strcat_chk@plt>
   2825a:	ldr	r1, [pc, #512]	; (2845c <print_extent_item@@Base+0x294>)
   2825c:	add	r0, sp, #52	; 0x34
   2825e:	movs	r2, #32
   28260:	add	r1, pc
   28262:	blx	8bb8 <__strcat_chk@plt>
   28266:	and.w	r2, fp, #256	; 0x100
   2826a:	movs	r3, #0
   2826c:	orrs	r3, r2
   2826e:	beq.n	28288 <print_extent_item@@Base+0xc0>
   28270:	add	r3, sp, #52	; 0x34
   28272:	ldr	r1, [pc, #492]	; (28460 <print_extent_item@@Base+0x298>)
   28274:	movs	r2, #32
   28276:	add	r1, pc
   28278:	mov	r0, r3
   2827a:	blx	8bb8 <__strcat_chk@plt>
   2827e:	ldr	r1, [pc, #484]	; (28464 <print_extent_item@@Base+0x29c>)
   28280:	movs	r2, #32
   28282:	add	r1, pc
   28284:	blx	8bb8 <__strcat_chk@plt>
   28288:	add	r3, sp, #52	; 0x34
   2828a:	str	r3, [sp, #8]
   2828c:	ldr.w	r2, [r9, #8]
   28290:	movs	r0, #1
   28292:	ldr.w	r3, [r9, #12]
   28296:	add.w	r6, r4, #24
   2829a:	ldr	r1, [pc, #460]	; (28468 <print_extent_item@@Base+0x2a0>)
   2829c:	strd	r2, r3, [sp]
   282a0:	add	r1, pc
   282a2:	ldr.w	r2, [r9]
   282a6:	ldr.w	r3, [r9, #4]
   282aa:	blx	8c6c <__printf_chk@plt+0x4>
   282ae:	ldrd	r2, r3, [sp, #16]
   282b2:	orrs	r3, r2
   282b4:	ldr	r3, [sp, #28]
   282b6:	beq.n	28358 <print_extent_item@@Base+0x190>
   282b8:	cmp	r3, #0
   282ba:	bne.n	2835c <print_extent_item@@Base+0x194>
   282bc:	add	r7, sp, #32
   282be:	mov	r2, r6
   282c0:	movs	r3, #17
   282c2:	mov	r0, r8
   282c4:	mov	r1, r7
   282c6:	add	r6, r5
   282c8:	bl	1a79e <read_extent_buffer@@Base>
   282cc:	ldr	r1, [pc, #412]	; (2846c <print_extent_item@@Base+0x2a4>)
   282ce:	movs	r0, #1
   282d0:	add	r1, pc
   282d2:	blx	8c6c <__printf_chk@plt+0x4>
   282d6:	mov	r0, r7
   282d8:	bl	280ac <btrfs_print_key@@Base>
   282dc:	ldr	r1, [pc, #400]	; (28470 <print_extent_item@@Base+0x2a8>)
   282de:	ldrb	r2, [r6, #17]
   282e0:	movs	r0, #1
   282e2:	add	r1, pc
   282e4:	add.w	r6, r4, #42	; 0x2a
   282e8:	blx	8c6c <__printf_chk@plt+0x4>
   282ec:	ldr	r3, [sp, #24]
   282ee:	ldr.w	r8, [pc, #388]	; 28474 <print_extent_item@@Base+0x2ac>
   282f2:	ldr.w	r9, [pc, #388]	; 28478 <print_extent_item@@Base+0x2b0>
   282f6:	add	r4, r3
   282f8:	ldr.w	fp, [pc, #384]	; 2847c <print_extent_item@@Base+0x2b4>
   282fc:	add	r8, pc
   282fe:	add	r9, pc
   28300:	add	fp, pc
   28302:	cmp	r6, r4
   28304:	bcc.n	28378 <print_extent_item@@Base+0x1b0>
   28306:	beq.n	28340 <print_extent_item@@Base+0x178>
   28308:	ldr	r3, [pc, #372]	; (28480 <print_extent_item@@Base+0x2b8>)
   2830a:	mov.w	r1, #1
   2830e:	ldr	r2, [pc, #372]	; (28484 <print_extent_item@@Base+0x2bc>)
   28310:	ldr.w	r0, [sl, r3]
   28314:	ite	hi
   28316:	movhi	r3, #1
   28318:	movls	r3, #0
   2831a:	str	r3, [sp, #12]
   2831c:	ldr	r3, [pc, #360]	; (28488 <print_extent_item@@Base+0x2c0>)
   2831e:	add	r2, pc
   28320:	add	r3, pc
   28322:	str	r3, [sp, #8]
   28324:	ldr	r3, [pc, #356]	; (2848c <print_extent_item@@Base+0x2c4>)
   28326:	add	r3, pc
   28328:	adds	r3, #33	; 0x21
   2832a:	str	r3, [sp, #4]
   2832c:	movw	r3, #497	; 0x1f1
   28330:	str	r3, [sp, #0]
   28332:	ldr	r3, [pc, #348]	; (28490 <print_extent_item@@Base+0x2c8>)
   28334:	ldr	r0, [r0, #0]
   28336:	add	r3, pc
   28338:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2833c:	bl	27820 <btrfs_destroy_delayed_refs@@Base+0xb4>
   28340:	ldr	r2, [pc, #336]	; (28494 <print_extent_item@@Base+0x2cc>)
   28342:	ldr	r3, [pc, #260]	; (28448 <print_extent_item@@Base+0x280>)
   28344:	add	r2, pc
   28346:	ldr	r3, [r2, r3]
   28348:	ldr	r2, [r3, #0]
   2834a:	ldr	r3, [sp, #84]	; 0x54
   2834c:	eors	r2, r3
   2834e:	beq.n	28440 <print_extent_item@@Base+0x278>
   28350:	blx	88e4 <__stack_chk_fail@plt>
   28354:	movs	r6, #1
   28356:	b.n	2823a <print_extent_item@@Base+0x72>
   28358:	cmp	r3, #0
   2835a:	beq.n	282ec <print_extent_item@@Base+0x124>
   2835c:	add	r1, sp, #32
   2835e:	mov	r2, r7
   28360:	mov	r0, r8
   28362:	movs	r3, #17
   28364:	bl	1a79e <read_extent_buffer@@Base>
   28368:	ldr	r1, [pc, #300]	; (28498 <print_extent_item@@Base+0x2d0>)
   2836a:	ldr.w	r2, [sp, #41]	; 0x29
   2836e:	movs	r0, #1
   28370:	add	r1, pc
   28372:	blx	8c6c <__printf_chk@plt+0x4>
   28376:	b.n	282ec <print_extent_item@@Base+0x124>
   28378:	adds	r0, r5, r6
   2837a:	ldrb	r1, [r5, r6]
   2837c:	mov	r3, r0
   2837e:	subs	r1, #176	; 0xb0
   28380:	ldr.w	r2, [r3, #1]!
   28384:	ldr	r3, [r3, #4]
   28386:	cmp	r1, #8
   28388:	bhi.n	28340 <print_extent_item@@Base+0x178>
   2838a:	add	r7, pc, #8	; (adr r7, 28394 <print_extent_item@@Base+0x1cc>)
   2838c:	ldr.w	r1, [r7, r1, lsl #2]
   28390:	add	r7, r1
   28392:	bx	r7
   28394:	movs	r5, r4
   28396:	movs	r0, r0
   28398:			; <UNDEFINED> instruction: 0xffadffff
   2839c:	lsls	r7, r3, #1
   2839e:	movs	r0, r0
   283a0:			; <UNDEFINED> instruction: 0xffadffff
   283a4:			; <UNDEFINED> instruction: 0xffadffff
   283a8:			; <UNDEFINED> instruction: 0xffadffff
   283ac:	lsls	r3, r2, #1
   283ae:	movs	r0, r0
   283b0:			; <UNDEFINED> instruction: 0xffadffff
   283b4:	lsls	r3, r3, #2
   283b6:	movs	r0, r0
   283b8:	ldr	r1, [pc, #224]	; (2849c <print_extent_item@@Base+0x2d4>)
   283ba:	movs	r0, #1
   283bc:	str	r3, [sp, #24]
   283be:	add	r1, pc
   283c0:	str	r2, [sp, #16]
   283c2:	blx	8c6c <__printf_chk@plt+0x4>
   283c6:	ldr	r1, [pc, #216]	; (284a0 <print_extent_item@@Base+0x2d8>)
   283c8:	movs	r0, #0
   283ca:	ldr	r2, [sp, #16]
   283cc:	ldr	r3, [sp, #24]
   283ce:	ldr.w	r1, [sl, r1]
   283d2:	str	r0, [sp, #0]
   283d4:	ldr	r0, [r1, #0]
   283d6:	bl	27e3c <print_objectid@@Base>
   283da:	movs	r0, #10
   283dc:	blx	8c08 <putchar@plt+0x4>
   283e0:	movs	r3, #9
   283e2:	add	r6, r3
   283e4:	b.n	28302 <print_extent_item@@Base+0x13a>
   283e6:	ldr	r1, [pc, #188]	; (284a4 <print_extent_item@@Base+0x2dc>)
   283e8:	movs	r0, #1
   283ea:	add	r1, pc
   283ec:	blx	8c6c <__printf_chk@plt+0x4>
   283f0:	b.n	283e0 <print_extent_item@@Base+0x218>
   283f2:	mov	r1, r9
   283f4:	movs	r0, #1
   283f6:	blx	8c6c <__printf_chk@plt+0x4>
   283fa:	ldr	r2, [pc, #164]	; (284a0 <print_extent_item@@Base+0x2d8>)
   283fc:	adds	r3, r6, #1
   283fe:	adds	r7, r5, r3
   28400:	ldr.w	r1, [sl, r2]
   28404:	movs	r2, #0
   28406:	str	r2, [sp, #0]
   28408:	ldr	r2, [r5, r3]
   2840a:	ldr	r0, [r1, #0]
   2840c:	ldr	r3, [r7, #4]
   2840e:	bl	27e3c <print_objectid@@Base>
   28412:	ldr	r3, [r7, #24]
   28414:	mov	r1, fp
   28416:	movs	r0, #1
   28418:	str	r3, [sp, #8]
   2841a:	ldr	r2, [r7, #16]
   2841c:	ldr	r3, [r7, #20]
   2841e:	strd	r2, r3, [sp]
   28422:	ldr	r3, [r7, #12]
   28424:	ldr	r2, [r7, #8]
   28426:	blx	8c6c <__printf_chk@plt+0x4>
   2842a:	movs	r3, #29
   2842c:	b.n	283e2 <print_extent_item@@Base+0x21a>
   2842e:	ldr.w	r1, [r0, #9]
   28432:	movs	r0, #1
   28434:	str	r1, [sp, #0]
   28436:	mov	r1, r8
   28438:	blx	8c6c <__printf_chk@plt+0x4>
   2843c:	movs	r3, #13
   2843e:	b.n	283e2 <print_extent_item@@Base+0x21a>
   28440:	add	sp, #92	; 0x5c
   28442:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28446:	nop
   28448:	lsls	r4, r7, #9
   2844a:	movs	r0, r0
   2844c:	lsrs	r6, r1, #13
   2844e:	movs	r4, r0
   28450:	lsrs	r4, r1, #13
   28452:	movs	r4, r0
   28454:	push	{r1, lr}
   28456:	movs	r1, r0
   28458:	ldrb	r3, [r5, #17]
   2845a:	movs	r1, r0
   2845c:	add	r1, sp, #700	; 0x2bc
   2845e:	movs	r1, r0
   28460:	ldrb	r1, [r1, #17]
   28462:	movs	r1, r0
   28464:	add	r1, sp, #608	; 0x260
   28466:	movs	r1, r0
   28468:	add	r1, sp, #540	; 0x21c
   2846a:	movs	r1, r0
   2846c:	add	r1, sp, #472	; 0x1d8
   2846e:	movs	r1, r0
   28470:	add	r1, sp, #532	; 0x214
   28472:	movs	r1, r0
   28474:	add	r1, sp, #984	; 0x3d8
   28476:	movs	r1, r0
   28478:	add	r1, sp, #716	; 0x2cc
   2847a:	movs	r1, r0
   2847c:	add	r1, sp, #820	; 0x334
   2847e:	movs	r1, r0
   28480:	lsls	r4, r1, #10
   28482:	movs	r0, r0
   28484:	ldrsh	r2, [r5, r4]
   28486:	movs	r1, r0
   28488:	ldr	r6, [r3, #60]	; 0x3c
   2848a:	movs	r1, r0
   2848c:			; <UNDEFINED> instruction: 0xb7bb
   2848e:	movs	r1, r0
   28490:	add	r1, sp, #928	; 0x3a0
   28492:	movs	r1, r0
   28494:	lsrs	r4, r5, #7
   28496:	movs	r4, r0
   28498:	add	r0, sp, #912	; 0x390
   2849a:	movs	r1, r0
   2849c:	add	r0, sp, #720	; 0x2d0
   2849e:	movs	r1, r0
   284a0:	lsls	r0, r6, #10
   284a2:	movs	r0, r0
   284a4:	add	r0, sp, #652	; 0x28c
   284a6:	movs	r1, r0

000284a8 <btrfs_print_leaf@@Base>:
   284a8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   284ac:	mov.w	r8, #0
   284b0:	vpush	{d8-d10}
   284b4:	mov	r9, r0
   284b6:	ldr.w	r2, [pc, #3380]	; 291ec <btrfs_print_leaf@@Base+0xd44>
   284ba:	ldr.w	r3, [pc, #3380]	; 291f0 <btrfs_print_leaf@@Base+0xd48>
   284be:	add	r2, pc
   284c0:	ldr.w	r6, [pc, #3376]	; 291f4 <btrfs_print_leaf@@Base+0xd4c>
   284c4:	subw	sp, sp, #1204	; 0x4b4
   284c8:	ldr	r3, [r2, r3]
   284ca:	add	r6, pc
   284cc:	ldr	r3, [r3, #0]
   284ce:	str.w	r3, [sp, #1196]	; 0x4ac
   284d2:	mov.w	r3, #0
   284d6:	ldr	r3, [r0, #92]	; 0x5c
   284d8:	str	r3, [sp, #104]	; 0x68
   284da:	ldr.w	r3, [r3, #384]	; 0x180
   284de:	subs	r3, #101	; 0x65
   284e0:	str	r3, [sp, #108]	; 0x6c
   284e2:	ldr.w	r5, [r0, #152]	; 0x98
   284e6:	mov	r3, r8
   284e8:	ldr.w	r4, [r0, #156]	; 0x9c
   284ec:	and.w	r2, r5, #1
   284f0:	orrs	r3, r2
   284f2:	bic.w	r7, r4, #4278190080	; 0xff000000
   284f6:	add	r3, sp, #812	; 0x32c
   284f8:	mov.w	r4, r4, lsr #24
   284fc:	beq.w	28650 <btrfs_print_leaf@@Base+0x1a8>
   28500:	ldr.w	r1, [pc, #3316]	; 291f8 <btrfs_print_leaf@@Base+0xd50>
   28504:	mov	r0, r3
   28506:	add	r1, pc
   28508:	blx	8a08 <strcpy@plt>
   2850c:	mov	r2, r8
   2850e:	mov	r3, r0
   28510:	and.w	r0, r5, #2
   28514:	movs	r1, #0
   28516:	orrs	r1, r0
   28518:	beq.n	2853a <btrfs_print_leaf@@Base+0x92>
   2851a:	cbnz	r2, 2852c <btrfs_print_leaf@@Base+0x84>
   2851c:	ldr.w	r1, [pc, #3292]	; 291fc <btrfs_print_leaf@@Base+0xd54>
   28520:	mov	r0, r3
   28522:	movs	r2, #128	; 0x80
   28524:	add	r1, pc
   28526:	blx	8bb8 <__strcat_chk@plt>
   2852a:	mov	r3, r0
   2852c:	ldr.w	r1, [pc, #3280]	; 29200 <btrfs_print_leaf@@Base+0xd58>
   28530:	movs	r2, #128	; 0x80
   28532:	mov	r0, r3
   28534:	add	r1, pc
   28536:	blx	8bb8 <__strcat_chk@plt>
   2853a:	ldr.w	r3, [r9, #192]	; 0xc0
   2853e:	mov	r0, r9
   28540:	ldr.w	r2, [r9, #144]	; 0x90
   28544:	add.w	sl, r9, #197	; 0xc5
   28548:	str	r3, [sp, #240]	; 0xf0
   2854a:	ldr.w	r3, [r9, #148]	; 0x94
   2854e:	str	r2, [sp, #84]	; 0x54
   28550:	str	r3, [sp, #80]	; 0x50
   28552:	bl	1c46c <btrfs_leaf_free_space@@Base>
   28556:	ldr.w	ip, [r9, #176]	; 0xb0
   2855a:	ldr.w	r1, [r9, #180]	; 0xb4
   2855e:	ldr	r3, [sp, #240]	; 0xf0
   28560:	strd	ip, r1, [sp, #8]
   28564:	ldr.w	r1, [pc, #3228]	; 29204 <btrfs_print_leaf@@Base+0xd5c>
   28568:	str	r3, [sp, #0]
   2856a:	add	r1, pc
   2856c:	ldrd	r3, r2, [sp, #80]	; 0x50
   28570:	str	r0, [sp, #4]
   28572:	movs	r0, #1
   28574:	blx	8c6c <__printf_chk@plt+0x4>
   28578:	ldr.w	r3, [pc, #3212]	; 29208 <btrfs_print_leaf@@Base+0xd60>
   2857c:	ldr.w	r2, [r9, #184]	; 0xb8
   28580:	ldr	r3, [r6, r3]
   28582:	movs	r6, #0
   28584:	str	r6, [sp, #0]
   28586:	str	r3, [sp, #100]	; 0x64
   28588:	ldr	r1, [sp, #100]	; 0x64
   2858a:	ldr.w	r3, [r9, #188]	; 0xbc
   2858e:	ldr	r0, [r1, #0]
   28590:	bl	27e3c <print_objectid@@Base>
   28594:	movs	r0, #10
   28596:	blx	8c08 <putchar@plt+0x4>
   2859a:	ldr.w	r1, [pc, #3184]	; 2920c <btrfs_print_leaf@@Base+0xd64>
   2859e:	ldr.w	r2, [r9, #144]	; 0x90
   285a2:	add	r3, sp, #812	; 0x32c
   285a4:	add	r1, pc
   285a6:	str	r3, [sp, #8]
   285a8:	movs	r0, #1
   285aa:	ldr.w	r3, [r9, #148]	; 0x94
   285ae:	str	r4, [sp, #12]
   285b0:	strd	r5, r7, [sp]
   285b4:	blx	8c6c <__printf_chk@plt+0x4>
   285b8:	mov	r0, r9
   285ba:	bl	27ab0 <btrfs_destroy_delayed_refs@@Base+0x344>
   285be:	ldr	r3, [sp, #100]	; 0x64
   285c0:	ldr	r0, [r3, #0]
   285c2:	blx	87a0 <fflush@plt>
   285c6:	ldr.w	r3, [pc, #3144]	; 29210 <btrfs_print_leaf@@Base+0xd68>
   285ca:	str	r6, [sp, #80]	; 0x50
   285cc:	add	r3, pc
   285ce:	vmov	s20, r3
   285d2:	ldr.w	r3, [pc, #3136]	; 29214 <btrfs_print_leaf@@Base+0xd6c>
   285d6:	add	r3, pc
   285d8:	vmov	s21, r3
   285dc:	ldr	r3, [sp, #80]	; 0x50
   285de:	ldr	r2, [sp, #240]	; 0xf0
   285e0:	cmp	r3, r2
   285e2:	beq.n	28634 <btrfs_print_leaf@@Base+0x18c>
   285e4:	ldr	r3, [sp, #80]	; 0x50
   285e6:	movs	r2, #25
   285e8:	ldr.w	r8, [sl, #17]
   285ec:	add.w	fp, r9, #96	; 0x60
   285f0:	muls	r2, r3
   285f2:	ldr.w	r3, [sl, #21]
   285f6:	str	r3, [sp, #84]	; 0x54
   285f8:	adds	r2, #101	; 0x65
   285fa:	ldr	r3, [sp, #108]	; 0x6c
   285fc:	cmp	r3, r8
   285fe:	bcc.n	2860a <btrfs_print_leaf@@Base+0x162>
   28600:	ldr	r3, [sp, #84]	; 0x54
   28602:	ldr	r1, [sp, #108]	; 0x6c
   28604:	add	r3, r8
   28606:	cmp	r3, r1
   28608:	bls.n	28654 <btrfs_print_leaf@@Base+0x1ac>
   2860a:	ldr	r3, [sp, #108]	; 0x6c
   2860c:	ldr.w	r0, [pc, #3080]	; 29218 <btrfs_print_leaf@@Base+0xd70>
   28610:	ldr.w	r2, [r9, #144]	; 0x90
   28614:	str	r3, [sp, #12]
   28616:	add	r0, pc
   28618:	ldr	r3, [sp, #84]	; 0x54
   2861a:	strd	r8, r3, [sp, #4]
   2861e:	ldr	r3, [sp, #80]	; 0x50
   28620:	str	r3, [sp, #0]
   28622:	ldr.w	r3, [r9, #148]	; 0x94
   28626:	bl	1a900 <__btrfs_error@@Base>
   2862a:	ldr.w	r0, [pc, #3056]	; 2921c <btrfs_print_leaf@@Base+0xd74>
   2862e:	add	r0, pc
   28630:	bl	1a900 <__btrfs_error@@Base>
   28634:	ldr.w	r2, [pc, #3048]	; 29220 <btrfs_print_leaf@@Base+0xd78>
   28638:	ldr.w	r3, [pc, #2996]	; 291f0 <btrfs_print_leaf@@Base+0xd48>
   2863c:	add	r2, pc
   2863e:	ldr	r3, [r2, r3]
   28640:	ldr	r2, [r3, #0]
   28642:	ldr.w	r3, [sp, #1196]	; 0x4ac
   28646:	eors	r2, r3
   28648:	beq.w	297dc <btrfs_print_leaf@@Base+0x1334>
   2864c:	blx	88e4 <__stack_chk_fail@plt>
   28650:	movs	r2, #1
   28652:	b.n	28510 <btrfs_print_leaf@@Base+0x68>
   28654:	add	r1, sp, #252	; 0xfc
   28656:	movs	r3, #17
   28658:	mov	r0, r9
   2865a:	str	r1, [sp, #96]	; 0x60
   2865c:	bl	1a79e <read_extent_buffer@@Base>
   28660:	ldr	r3, [sp, #96]	; 0x60
   28662:	vmov	r1, s20
   28666:	movs	r0, #1
   28668:	ldr	r2, [sp, #80]	; 0x50
   2866a:	add.w	r7, r8, #101	; 0x65
   2866e:	ldrb	r6, [r3, #8]
   28670:	ldrd	r4, r5, [r3]
   28674:	ldr.w	r3, [r3, #9]
   28678:	str	r3, [sp, #88]	; 0x58
   2867a:	ldr	r3, [sp, #96]	; 0x60
   2867c:	ldr.w	r3, [r3, #13]
   28680:	str	r3, [sp, #92]	; 0x5c
   28682:	blx	8c6c <__printf_chk@plt+0x4>
   28686:	ldr	r0, [sp, #96]	; 0x60
   28688:	bl	280ac <btrfs_print_key@@Base>
   2868c:	ldr.w	r1, [pc, #2964]	; 29224 <btrfs_print_leaf@@Base+0xd7c>
   28690:	ldr.w	r3, [sl, #21]
   28694:	movs	r0, #1
   28696:	ldr.w	r2, [sl, #17]
   2869a:	add	r1, pc
   2869c:	blx	8c6c <__printf_chk@plt+0x4>
   286a0:	cmp	r6, #0
   286a2:	bne.n	28724 <btrfs_print_leaf@@Base+0x27c>
   286a4:	mov.w	r3, #4294967295	; 0xffffffff
   286a8:	cmp	r5, r3
   286aa:	mvn.w	r2, #10
   286ae:	it	eq
   286b0:	cmpeq	r4, r2
   286b2:	bne.n	28710 <btrfs_print_leaf@@Base+0x268>
   286b4:	ldr.w	r3, [sl, #17]
   286b8:	add	r4, sp, #272	; 0x110
   286ba:	mov	r0, r9
   286bc:	add.w	r5, r3, #101	; 0x65
   286c0:	mov	r1, r4
   286c2:	movs	r3, #17
   286c4:	mov	r2, r5
   286c6:	bl	1a79e <read_extent_buffer@@Base>
   286ca:	ldr.w	r1, [pc, #2908]	; 29228 <btrfs_print_leaf@@Base+0xd80>
   286ce:	movs	r0, #1
   286d0:	add	r1, pc
   286d2:	blx	8c6c <__printf_chk@plt+0x4>
   286d6:	mov	r0, r4
   286d8:	bl	280ac <btrfs_print_key@@Base>
   286dc:	movs	r0, #10
   286de:	blx	8c08 <putchar@plt+0x4>
   286e2:	add.w	r3, fp, r5
   286e6:	mov	r0, r3
   286e8:	mov	r1, r3
   286ea:	ldr.w	r4, [r0, #33]!
   286ee:	ldr.w	r2, [r1, #17]!
   286f2:	ldr	r0, [r0, #4]
   286f4:	strd	r4, r0, [sp, #8]
   286f8:	ldr.w	r0, [r3, #25]!
   286fc:	ldr	r3, [r3, #4]
   286fe:	strd	r0, r3, [sp]
   28702:	movs	r0, #1
   28704:	ldr	r3, [r1, #4]
   28706:	ldr.w	r1, [pc, #2852]	; 2922c <btrfs_print_leaf@@Base+0xd84>
   2870a:	add	r1, pc
   2870c:	blx	8c6c <__printf_chk@plt+0x4>
   28710:	ldr	r3, [sp, #100]	; 0x64
   28712:	add.w	sl, sl, #25
   28716:	ldr	r0, [r3, #0]
   28718:	blx	87a0 <fflush@plt>
   2871c:	ldr	r3, [sp, #80]	; 0x50
   2871e:	adds	r3, #1
   28720:	str	r3, [sp, #80]	; 0x50
   28722:	b.n	285dc <btrfs_print_leaf@@Base+0x134>
   28724:	cmp	r6, #184	; 0xb8
   28726:	bhi.w	288c6 <btrfs_print_leaf@@Base+0x41e>
   2872a:	cmp	r6, #167	; 0xa7
   2872c:	bhi.n	287d4 <btrfs_print_leaf@@Base+0x32c>
   2872e:	cmp	r6, #96	; 0x60
   28730:	beq.w	28852 <btrfs_print_leaf@@Base+0x3aa>
   28734:	bhi.w	28874 <btrfs_print_leaf@@Base+0x3cc>
   28738:	cmp	r6, #13
   2873a:	beq.w	28dbe <btrfs_print_leaf@@Base+0x916>
   2873e:	bhi.n	28828 <btrfs_print_leaf@@Base+0x380>
   28740:	cmp	r6, #1
   28742:	beq.w	289be <btrfs_print_leaf@@Base+0x516>
   28746:	cmp	r6, #12
   28748:	bne.n	28710 <btrfs_print_leaf@@Base+0x268>
   2874a:	ldr.w	r3, [pc, #2788]	; 29230 <btrfs_print_leaf@@Base+0xd88>
   2874e:	add	r6, sp, #940	; 0x3ac
   28750:	movs	r5, #0
   28752:	add	r3, pc
   28754:	vmov	s17, r3
   28758:	b.n	28d5a <btrfs_print_leaf@@Base+0x8b2>
   2875a:	subs	r6, #228	; 0xe4
   2875c:	cmp	r6, #25
   2875e:	bhi.n	28710 <btrfs_print_leaf@@Base+0x268>
   28760:	add	r3, pc, #8	; (adr r3, 2876c <btrfs_print_leaf@@Base+0x2c4>)
   28762:	ldr.w	r2, [r3, r6, lsl #2]
   28766:	add	r3, r2
   28768:	bx	r3
   2876a:	nop
   2876c:	lsrs	r1, r7, #19
   2876e:	movs	r0, r0
   28770:			; <UNDEFINED> instruction: 0xffa5ffff
   28774:			; <UNDEFINED> instruction: 0xffa5ffff
   28778:			; <UNDEFINED> instruction: 0xffa5ffff
   2877c:			; <UNDEFINED> instruction: 0xffa5ffff
   28780:			; <UNDEFINED> instruction: 0xffa5ffff
   28784:			; <UNDEFINED> instruction: 0xffa5ffff
   28788:			; <UNDEFINED> instruction: 0xffa5ffff
   2878c:			; <UNDEFINED> instruction: 0xffa5ffff
   28790:			; <UNDEFINED> instruction: 0xffa5ffff
   28794:			; <UNDEFINED> instruction: 0xffa5ffff
   28798:			; <UNDEFINED> instruction: 0xffa5ffff
   2879c:	lsrs	r7, r2, #21
   2879e:	movs	r0, r0
   287a0:			; <UNDEFINED> instruction: 0xffa5ffff
   287a4:	lsrs	r1, r7, #23
   287a6:	movs	r0, r0
   287a8:			; <UNDEFINED> instruction: 0xffa5ffff
   287ac:	lsrs	r7, r6, #24
   287ae:	movs	r0, r0
   287b0:			; <UNDEFINED> instruction: 0xffa5ffff
   287b4:			; <UNDEFINED> instruction: 0xffa5ffff
   287b8:			; <UNDEFINED> instruction: 0xffa5ffff
   287bc:	lsrs	r3, r5, #30
   287be:	movs	r0, r0
   287c0:	lsrs	r7, r7, #26
   287c2:	movs	r0, r0
   287c4:			; <UNDEFINED> instruction: 0xffa5ffff
   287c8:	lsrs	r5, r5, #25
   287ca:	movs	r0, r0
   287cc:	lsrs	r5, r5, #25
   287ce:	movs	r0, r0
   287d0:	lsrs	r7, r5, #26
   287d2:	movs	r0, r0
   287d4:	subs	r6, #168	; 0xa8
   287d6:	cmp	r6, #16
   287d8:	bhi.n	28710 <btrfs_print_leaf@@Base+0x268>
   287da:	add	r3, pc, #8	; (adr r3, 287e4 <btrfs_print_leaf@@Base+0x33c>)
   287dc:	ldr.w	r2, [r3, r6, lsl #2]
   287e0:	add	r3, r2
   287e2:	bx	r3
   287e4:	lsrs	r1, r4, #3
   287e6:	movs	r0, r0
   287e8:	lsrs	r7, r5, #3
   287ea:	movs	r0, r0
   287ec:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   287f0:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   287f4:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   287f8:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   287fc:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   28800:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   28804:	lsrs	r3, r6, #3
   28806:	movs	r0, r0
   28808:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2880c:	lsrs	r3, r0, #4
   2880e:	movs	r0, r0
   28810:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   28814:	lsrs	r7, r2, #5
   28816:	movs	r0, r0
   28818:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2881c:	lsrs	r3, r7, #3
   2881e:	movs	r0, r0
   28820:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   28824:	lsrs	r7, r0, #5
   28826:	movs	r0, r0
   28828:	cmp	r6, #60	; 0x3c
   2882a:	beq.w	28ec0 <btrfs_print_leaf@@Base+0xa18>
   2882e:	bhi.n	28846 <btrfs_print_leaf@@Base+0x39e>
   28830:	cmp	r6, #24
   28832:	beq.n	28852 <btrfs_print_leaf@@Base+0x3aa>
   28834:	cmp	r6, #48	; 0x30
   28836:	bne.w	28710 <btrfs_print_leaf@@Base+0x268>
   2883a:	ldr.w	r0, [pc, #2552]	; 29234 <btrfs_print_leaf@@Base+0xd8c>
   2883e:	add	r0, pc
   28840:	blx	8a78 <puts@plt+0x4>
   28844:	b.n	28710 <btrfs_print_leaf@@Base+0x268>
   28846:	cmp	r6, #72	; 0x48
   28848:	beq.w	28ec0 <btrfs_print_leaf@@Base+0xa18>
   2884c:	cmp	r6, #84	; 0x54
   2884e:	bne.w	28710 <btrfs_print_leaf@@Base+0x268>
   28852:	ldr.w	r3, [pc, #2532]	; 29238 <btrfs_print_leaf@@Base+0xd90>
   28856:	movs	r6, #0
   28858:	add	r3, pc
   2885a:	vmov	s17, r3
   2885e:	ldr.w	r3, [pc, #2524]	; 2923c <btrfs_print_leaf@@Base+0xd94>
   28862:	add	r3, pc
   28864:	vmov	s18, r3
   28868:	ldr.w	r3, [pc, #2516]	; 29240 <btrfs_print_leaf@@Base+0xd98>
   2886c:	add	r3, pc
   2886e:	vmov	s19, r3
   28872:	b.n	28eb0 <btrfs_print_leaf@@Base+0xa08>
   28874:	cmp	r6, #132	; 0x84
   28876:	beq.w	28eda <btrfs_print_leaf@@Base+0xa32>
   2887a:	bhi.n	288aa <btrfs_print_leaf@@Base+0x402>
   2887c:	cmp	r6, #120	; 0x78
   2887e:	beq.w	29142 <btrfs_print_leaf@@Base+0xc9a>
   28882:	cmp	r6, #128	; 0x80
   28884:	beq.w	2914a <btrfs_print_leaf@@Base+0xca2>
   28888:	cmp	r6, #108	; 0x6c
   2888a:	bne.w	28710 <btrfs_print_leaf@@Base+0x268>
   2888e:	add.w	r4, fp, r7
   28892:	add	r0, sp, #940	; 0x3ac
   28894:	ldrb	r3, [r4, #16]
   28896:	ldrb	r5, [r4, #20]
   28898:	cmp	r3, #3
   2889a:	bhi.w	2934c <btrfs_print_leaf@@Base+0xea4>
   2889e:	tbh	[pc, r3, lsl #1]
   288a2:	lsls	r6, r5, #17
   288a4:	lsls	r3, r3, #18
   288a6:	lsls	r6, r3, #18
   288a8:	lsls	r1, r4, #18
   288aa:	cmp	r6, #144	; 0x90
   288ac:	beq.w	290bc <btrfs_print_leaf@@Base+0xc14>
   288b0:	cmp	r6, #156	; 0x9c
   288b2:	bne.w	28710 <btrfs_print_leaf@@Base+0x268>
   288b6:	ldr.w	r2, [pc, #2444]	; 29244 <btrfs_print_leaf@@Base+0xd9c>
   288ba:	add	r2, pc
   288bc:	ldr	r1, [sp, #80]	; 0x50
   288be:	mov	r0, r9
   288c0:	bl	27a30 <btrfs_destroy_delayed_refs@@Base+0x2c4>
   288c4:	b.n	28710 <btrfs_print_leaf@@Base+0x268>
   288c6:	cmp	r6, #253	; 0xfd
   288c8:	bhi.w	28710 <btrfs_print_leaf@@Base+0x268>
   288cc:	cmp	r6, #227	; 0xe3
   288ce:	bhi.w	2875a <btrfs_print_leaf@@Base+0x2b2>
   288d2:	cmp	r6, #204	; 0xcc
   288d4:	bhi.n	28924 <btrfs_print_leaf@@Base+0x47c>
   288d6:	cmp	r6, #191	; 0xbf
   288d8:	bls.w	28710 <btrfs_print_leaf@@Base+0x268>
   288dc:	subs	r6, #192	; 0xc0
   288de:	cmp	r6, #12
   288e0:	bhi.w	28710 <btrfs_print_leaf@@Base+0x268>
   288e4:	add	r3, pc, #8	; (adr r3, 288f0 <btrfs_print_leaf@@Base+0x448>)
   288e6:	ldr.w	r2, [r3, r6, lsl #2]
   288ea:	add	r3, r2
   288ec:	bx	r3
   288ee:	nop
   288f0:	lsrs	r5, r2, #12
   288f2:	movs	r0, r0
   288f4:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   288f8:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   288fc:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   28900:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   28904:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   28908:	lsrs	r7, r1, #13
   2890a:	movs	r0, r0
   2890c:	lsrs	r5, r4, #13
   2890e:	movs	r0, r0
   28910:	lsrs	r5, r5, #13
   28912:	movs	r0, r0
   28914:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   28918:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   2891c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   28920:	lsrs	r1, r0, #14
   28922:	movs	r0, r0
   28924:	cmp	r6, #216	; 0xd8
   28926:	bne.w	28710 <btrfs_print_leaf@@Base+0x268>
   2892a:	add	r4, sp, #740	; 0x2e4
   2892c:	add.w	r2, r8, #167	; 0xa7
   28930:	add	r5, sp, #772	; 0x304
   28932:	movs	r3, #16
   28934:	mov	r1, r4
   28936:	mov	r0, r9
   28938:	bl	1a79e <read_extent_buffer@@Base>
   2893c:	mov	r0, r4
   2893e:	add	r4, sp, #756	; 0x2f4
   28940:	add	r6, sp, #940	; 0x3ac
   28942:	mov	r1, r5
   28944:	blx	8760 <uuid_unparse@plt>
   28948:	add.w	r2, r8, #183	; 0xb7
   2894c:	movs	r3, #16
   2894e:	mov	r1, r4
   28950:	mov	r0, r9
   28952:	bl	1a79e <read_extent_buffer@@Base>
   28956:	mov	r1, r6
   28958:	mov	r0, r4
   2895a:	blx	8760 <uuid_unparse@plt>
   2895e:	add.w	r3, fp, r7
   28962:	strd	r5, r6, [sp, #68]	; 0x44
   28966:	movs	r0, #1
   28968:	ldrb.w	r2, [r3, #65]	; 0x41
   2896c:	str	r2, [sp, #64]	; 0x40
   2896e:	ldrb.w	r2, [r3, #64]	; 0x40
   28972:	str	r2, [sp, #60]	; 0x3c
   28974:	ldr	r2, [r3, #60]	; 0x3c
   28976:	str	r2, [sp, #56]	; 0x38
   28978:	ldr	r1, [r3, #52]	; 0x34
   2897a:	ldr	r2, [r3, #56]	; 0x38
   2897c:	strd	r1, r2, [sp, #48]	; 0x30
   28980:	ldr	r1, [r3, #44]	; 0x2c
   28982:	ldr	r2, [r3, #48]	; 0x30
   28984:	strd	r1, r2, [sp, #40]	; 0x28
   28988:	ldr	r1, [r3, #36]	; 0x24
   2898a:	ldr	r2, [r3, #40]	; 0x28
   2898c:	strd	r1, r2, [sp, #32]
   28990:	ldr	r2, [r3, #32]
   28992:	str	r2, [sp, #24]
   28994:	ldr	r2, [r3, #28]
   28996:	str	r2, [sp, #20]
   28998:	ldr	r2, [r3, #24]
   2899a:	str	r2, [sp, #16]
   2899c:	ldr	r1, [r3, #16]
   2899e:	ldr	r2, [r3, #20]
   289a0:	strd	r1, r2, [sp, #8]
   289a4:	ldr	r1, [r3, #8]
   289a6:	ldr	r2, [r3, #12]
   289a8:	strd	r1, r2, [sp]
   289ac:	ldr.w	r1, [pc, #2200]	; 29248 <btrfs_print_leaf@@Base+0xda0>
   289b0:	ldr.w	r2, [fp, r7]
   289b4:	ldr	r3, [r3, #4]
   289b6:	add	r1, pc
   289b8:	blx	8c6c <__printf_chk@plt+0x4>
   289bc:	b.n	28710 <btrfs_print_leaf@@Base+0x268>
   289be:	add	r3, sp, #940	; 0x3ac
   289c0:	add	fp, r7
   289c2:	mov.w	r2, #256	; 0x100
   289c6:	movs	r1, #0
   289c8:	mov	r0, r3
   289ca:	movs	r7, #0
   289cc:	blx	8bf8 <memset@plt+0x4>
   289d0:	ldr.w	r5, [fp, #64]	; 0x40
   289d4:	ldr.w	r4, [fp, #68]	; 0x44
   289d8:	and.w	r2, r5, #1
   289dc:	strd	r2, r7, [sp, #112]	; 0x70
   289e0:	ldrd	r1, r2, [sp, #112]	; 0x70
   289e4:	orrs	r2, r1
   289e6:	beq.n	289f8 <btrfs_print_leaf@@Base+0x550>
   289e8:	ldr.w	r1, [pc, #2144]	; 2924c <btrfs_print_leaf@@Base+0xda4>
   289ec:	mov.w	r2, #256	; 0x100
   289f0:	mov	r6, r7
   289f2:	add	r1, pc
   289f4:	blx	8bb8 <__strcat_chk@plt>
   289f8:	and.w	r3, r5, #2
   289fc:	str	r3, [sp, #120]	; 0x78
   289fe:	movs	r3, #0
   28a00:	str	r3, [sp, #124]	; 0x7c
   28a02:	ldrd	r2, r3, [sp, #120]	; 0x78
   28a06:	orrs	r3, r2
   28a08:	beq.n	28a2e <btrfs_print_leaf@@Base+0x586>
   28a0a:	cbnz	r6, 28a1c <btrfs_print_leaf@@Base+0x574>
   28a0c:	ldr.w	r1, [pc, #2112]	; 29250 <btrfs_print_leaf@@Base+0xda8>
   28a10:	add	r0, sp, #940	; 0x3ac
   28a12:	mov.w	r2, #256	; 0x100
   28a16:	add	r1, pc
   28a18:	blx	8bb8 <__strcat_chk@plt>
   28a1c:	ldr.w	r1, [pc, #2100]	; 29254 <btrfs_print_leaf@@Base+0xdac>
   28a20:	add	r0, sp, #940	; 0x3ac
   28a22:	mov.w	r2, #256	; 0x100
   28a26:	movs	r6, #0
   28a28:	add	r1, pc
   28a2a:	blx	8bb8 <__strcat_chk@plt>
   28a2e:	and.w	r3, r5, #4
   28a32:	str	r3, [sp, #128]	; 0x80
   28a34:	movs	r3, #0
   28a36:	str	r3, [sp, #132]	; 0x84
   28a38:	ldrd	r2, r3, [sp, #128]	; 0x80
   28a3c:	orrs	r3, r2
   28a3e:	beq.n	28a64 <btrfs_print_leaf@@Base+0x5bc>
   28a40:	cbnz	r6, 28a52 <btrfs_print_leaf@@Base+0x5aa>
   28a42:	ldr.w	r1, [pc, #2068]	; 29258 <btrfs_print_leaf@@Base+0xdb0>
   28a46:	add	r0, sp, #940	; 0x3ac
   28a48:	mov.w	r2, #256	; 0x100
   28a4c:	add	r1, pc
   28a4e:	blx	8bb8 <__strcat_chk@plt>
   28a52:	ldr.w	r1, [pc, #2056]	; 2925c <btrfs_print_leaf@@Base+0xdb4>
   28a56:	add	r0, sp, #940	; 0x3ac
   28a58:	mov.w	r2, #256	; 0x100
   28a5c:	movs	r6, #0
   28a5e:	add	r1, pc
   28a60:	blx	8bb8 <__strcat_chk@plt>
   28a64:	and.w	r3, r5, #8
   28a68:	str	r3, [sp, #136]	; 0x88
   28a6a:	movs	r3, #0
   28a6c:	str	r3, [sp, #140]	; 0x8c
   28a6e:	ldrd	r2, r3, [sp, #136]	; 0x88
   28a72:	orrs	r3, r2
   28a74:	beq.n	28a9a <btrfs_print_leaf@@Base+0x5f2>
   28a76:	cbnz	r6, 28a88 <btrfs_print_leaf@@Base+0x5e0>
   28a78:	ldr.w	r1, [pc, #2020]	; 29260 <btrfs_print_leaf@@Base+0xdb8>
   28a7c:	add	r0, sp, #940	; 0x3ac
   28a7e:	mov.w	r2, #256	; 0x100
   28a82:	add	r1, pc
   28a84:	blx	8bb8 <__strcat_chk@plt>
   28a88:	ldr.w	r1, [pc, #2008]	; 29264 <btrfs_print_leaf@@Base+0xdbc>
   28a8c:	add	r0, sp, #940	; 0x3ac
   28a8e:	mov.w	r2, #256	; 0x100
   28a92:	movs	r6, #0
   28a94:	add	r1, pc
   28a96:	blx	8bb8 <__strcat_chk@plt>
   28a9a:	and.w	r3, r5, #16
   28a9e:	str	r3, [sp, #144]	; 0x90
   28aa0:	movs	r3, #0
   28aa2:	str	r3, [sp, #148]	; 0x94
   28aa4:	ldrd	r2, r3, [sp, #144]	; 0x90
   28aa8:	orrs	r3, r2
   28aaa:	beq.n	28ad0 <btrfs_print_leaf@@Base+0x628>
   28aac:	cbnz	r6, 28abe <btrfs_print_leaf@@Base+0x616>
   28aae:	ldr.w	r1, [pc, #1976]	; 29268 <btrfs_print_leaf@@Base+0xdc0>
   28ab2:	add	r0, sp, #940	; 0x3ac
   28ab4:	mov.w	r2, #256	; 0x100
   28ab8:	add	r1, pc
   28aba:	blx	8bb8 <__strcat_chk@plt>
   28abe:	ldr.w	r1, [pc, #1964]	; 2926c <btrfs_print_leaf@@Base+0xdc4>
   28ac2:	add	r0, sp, #940	; 0x3ac
   28ac4:	mov.w	r2, #256	; 0x100
   28ac8:	movs	r6, #0
   28aca:	add	r1, pc
   28acc:	blx	8bb8 <__strcat_chk@plt>
   28ad0:	and.w	r3, r5, #32
   28ad4:	str	r3, [sp, #152]	; 0x98
   28ad6:	movs	r3, #0
   28ad8:	str	r3, [sp, #156]	; 0x9c
   28ada:	ldrd	r2, r3, [sp, #152]	; 0x98
   28ade:	orrs	r3, r2
   28ae0:	beq.n	28b06 <btrfs_print_leaf@@Base+0x65e>
   28ae2:	cbnz	r6, 28af4 <btrfs_print_leaf@@Base+0x64c>
   28ae4:	ldr.w	r1, [pc, #1928]	; 29270 <btrfs_print_leaf@@Base+0xdc8>
   28ae8:	add	r0, sp, #940	; 0x3ac
   28aea:	mov.w	r2, #256	; 0x100
   28aee:	add	r1, pc
   28af0:	blx	8bb8 <__strcat_chk@plt>
   28af4:	ldr.w	r1, [pc, #1916]	; 29274 <btrfs_print_leaf@@Base+0xdcc>
   28af8:	add	r0, sp, #940	; 0x3ac
   28afa:	mov.w	r2, #256	; 0x100
   28afe:	movs	r6, #0
   28b00:	add	r1, pc
   28b02:	blx	8bb8 <__strcat_chk@plt>
   28b06:	and.w	r3, r5, #64	; 0x40
   28b0a:	str	r3, [sp, #160]	; 0xa0
   28b0c:	movs	r3, #0
   28b0e:	str	r3, [sp, #164]	; 0xa4
   28b10:	ldrd	r2, r3, [sp, #160]	; 0xa0
   28b14:	orrs	r3, r2
   28b16:	beq.n	28b3c <btrfs_print_leaf@@Base+0x694>
   28b18:	cbnz	r6, 28b2a <btrfs_print_leaf@@Base+0x682>
   28b1a:	ldr.w	r1, [pc, #1884]	; 29278 <btrfs_print_leaf@@Base+0xdd0>
   28b1e:	add	r0, sp, #940	; 0x3ac
   28b20:	mov.w	r2, #256	; 0x100
   28b24:	add	r1, pc
   28b26:	blx	8bb8 <__strcat_chk@plt>
   28b2a:	ldr.w	r1, [pc, #1872]	; 2927c <btrfs_print_leaf@@Base+0xdd4>
   28b2e:	add	r0, sp, #940	; 0x3ac
   28b30:	mov.w	r2, #256	; 0x100
   28b34:	movs	r6, #0
   28b36:	add	r1, pc
   28b38:	blx	8bb8 <__strcat_chk@plt>
   28b3c:	and.w	r3, r5, #128	; 0x80
   28b40:	str	r3, [sp, #168]	; 0xa8
   28b42:	movs	r3, #0
   28b44:	str	r3, [sp, #172]	; 0xac
   28b46:	ldrd	r2, r3, [sp, #168]	; 0xa8
   28b4a:	orrs	r3, r2
   28b4c:	beq.n	28b72 <btrfs_print_leaf@@Base+0x6ca>
   28b4e:	cbnz	r6, 28b60 <btrfs_print_leaf@@Base+0x6b8>
   28b50:	ldr.w	r1, [pc, #1836]	; 29280 <btrfs_print_leaf@@Base+0xdd8>
   28b54:	add	r0, sp, #940	; 0x3ac
   28b56:	mov.w	r2, #256	; 0x100
   28b5a:	add	r1, pc
   28b5c:	blx	8bb8 <__strcat_chk@plt>
   28b60:	ldr.w	r1, [pc, #1824]	; 29284 <btrfs_print_leaf@@Base+0xddc>
   28b64:	add	r0, sp, #940	; 0x3ac
   28b66:	mov.w	r2, #256	; 0x100
   28b6a:	movs	r6, #0
   28b6c:	add	r1, pc
   28b6e:	blx	8bb8 <__strcat_chk@plt>
   28b72:	and.w	r3, r5, #256	; 0x100
   28b76:	str	r3, [sp, #176]	; 0xb0
   28b78:	movs	r3, #0
   28b7a:	str	r3, [sp, #180]	; 0xb4
   28b7c:	ldrd	r2, r3, [sp, #176]	; 0xb0
   28b80:	orrs	r3, r2
   28b82:	beq.n	28ba8 <btrfs_print_leaf@@Base+0x700>
   28b84:	cbnz	r6, 28b96 <btrfs_print_leaf@@Base+0x6ee>
   28b86:	ldr.w	r1, [pc, #1792]	; 29288 <btrfs_print_leaf@@Base+0xde0>
   28b8a:	add	r0, sp, #940	; 0x3ac
   28b8c:	mov.w	r2, #256	; 0x100
   28b90:	add	r1, pc
   28b92:	blx	8bb8 <__strcat_chk@plt>
   28b96:	ldr.w	r1, [pc, #1780]	; 2928c <btrfs_print_leaf@@Base+0xde4>
   28b9a:	add	r0, sp, #940	; 0x3ac
   28b9c:	mov.w	r2, #256	; 0x100
   28ba0:	movs	r6, #0
   28ba2:	add	r1, pc
   28ba4:	blx	8bb8 <__strcat_chk@plt>
   28ba8:	and.w	r3, r5, #512	; 0x200
   28bac:	str	r3, [sp, #184]	; 0xb8
   28bae:	movs	r3, #0
   28bb0:	str	r3, [sp, #188]	; 0xbc
   28bb2:	ldrd	r2, r3, [sp, #184]	; 0xb8
   28bb6:	orrs	r3, r2
   28bb8:	beq.n	28bde <btrfs_print_leaf@@Base+0x736>
   28bba:	cbnz	r6, 28bcc <btrfs_print_leaf@@Base+0x724>
   28bbc:	ldr.w	r1, [pc, #1744]	; 29290 <btrfs_print_leaf@@Base+0xde8>
   28bc0:	add	r0, sp, #940	; 0x3ac
   28bc2:	mov.w	r2, #256	; 0x100
   28bc6:	add	r1, pc
   28bc8:	blx	8bb8 <__strcat_chk@plt>
   28bcc:	ldr.w	r1, [pc, #1732]	; 29294 <btrfs_print_leaf@@Base+0xdec>
   28bd0:	add	r0, sp, #940	; 0x3ac
   28bd2:	mov.w	r2, #256	; 0x100
   28bd6:	movs	r6, #0
   28bd8:	add	r1, pc
   28bda:	blx	8bb8 <__strcat_chk@plt>
   28bde:	and.w	r3, r5, #1024	; 0x400
   28be2:	str	r3, [sp, #192]	; 0xc0
   28be4:	movs	r3, #0
   28be6:	str	r3, [sp, #196]	; 0xc4
   28be8:	ldrd	r2, r3, [sp, #192]	; 0xc0
   28bec:	orrs	r3, r2
   28bee:	beq.n	28c14 <btrfs_print_leaf@@Base+0x76c>
   28bf0:	cbnz	r6, 28c02 <btrfs_print_leaf@@Base+0x75a>
   28bf2:	ldr.w	r1, [pc, #1700]	; 29298 <btrfs_print_leaf@@Base+0xdf0>
   28bf6:	add	r0, sp, #940	; 0x3ac
   28bf8:	mov.w	r2, #256	; 0x100
   28bfc:	add	r1, pc
   28bfe:	blx	8bb8 <__strcat_chk@plt>
   28c02:	ldr.w	r1, [pc, #1688]	; 2929c <btrfs_print_leaf@@Base+0xdf4>
   28c06:	add	r0, sp, #940	; 0x3ac
   28c08:	mov.w	r2, #256	; 0x100
   28c0c:	movs	r6, #0
   28c0e:	add	r1, pc
   28c10:	blx	8bb8 <__strcat_chk@plt>
   28c14:	and.w	r3, r5, #2048	; 0x800
   28c18:	str	r3, [sp, #200]	; 0xc8
   28c1a:	movs	r3, #0
   28c1c:	str	r3, [sp, #204]	; 0xcc
   28c1e:	ldrd	r2, r3, [sp, #200]	; 0xc8
   28c22:	add	r0, sp, #940	; 0x3ac
   28c24:	orrs	r3, r2
   28c26:	beq.n	28d06 <btrfs_print_leaf@@Base+0x85e>
   28c28:	cbnz	r6, 28c38 <btrfs_print_leaf@@Base+0x790>
   28c2a:	ldr.w	r1, [pc, #1652]	; 292a0 <btrfs_print_leaf@@Base+0xdf8>
   28c2e:	mov.w	r2, #256	; 0x100
   28c32:	add	r1, pc
   28c34:	blx	8bb8 <__strcat_chk@plt>
   28c38:	ldr.w	r1, [pc, #1640]	; 292a4 <btrfs_print_leaf@@Base+0xdfc>
   28c3c:	add	r0, sp, #940	; 0x3ac
   28c3e:	mov.w	r2, #256	; 0x100
   28c42:	add	r1, pc
   28c44:	blx	8bb8 <__strcat_chk@plt>
   28c48:	strd	r5, r4, [sp, #64]	; 0x40
   28c4c:	add	r3, sp, #940	; 0x3ac
   28c4e:	str	r3, [sp, #72]	; 0x48
   28c50:	movs	r0, #1
   28c52:	ldr.w	r2, [fp, #72]	; 0x48
   28c56:	ldr.w	r3, [fp, #76]	; 0x4c
   28c5a:	ldr.w	r1, [pc, #1612]	; 292a8 <btrfs_print_leaf@@Base+0xe00>
   28c5e:	strd	r2, r3, [sp, #56]	; 0x38
   28c62:	add	r1, pc
   28c64:	ldr.w	r2, [fp, #56]	; 0x38
   28c68:	ldr.w	r3, [fp, #60]	; 0x3c
   28c6c:	strd	r2, r3, [sp, #48]	; 0x30
   28c70:	ldr.w	r3, [fp, #48]	; 0x30
   28c74:	str	r3, [sp, #44]	; 0x2c
   28c76:	ldr.w	r3, [fp, #44]	; 0x2c
   28c7a:	str	r3, [sp, #40]	; 0x28
   28c7c:	ldr.w	r3, [fp, #40]	; 0x28
   28c80:	str	r3, [sp, #36]	; 0x24
   28c82:	ldr.w	r3, [fp, #52]	; 0x34
   28c86:	str	r3, [sp, #32]
   28c88:	ldr.w	r2, [fp, #32]
   28c8c:	ldr.w	r3, [fp, #36]	; 0x24
   28c90:	strd	r2, r3, [sp, #24]
   28c94:	ldr.w	r2, [fp, #24]
   28c98:	ldr.w	r3, [fp, #28]
   28c9c:	strd	r2, r3, [sp, #16]
   28ca0:	ldr.w	r2, [fp, #16]
   28ca4:	ldr.w	r3, [fp, #20]
   28ca8:	strd	r2, r3, [sp, #8]
   28cac:	ldr.w	r2, [fp, #8]
   28cb0:	ldr.w	r3, [fp, #12]
   28cb4:	strd	r2, r3, [sp]
   28cb8:	ldr.w	r3, [fp, #4]
   28cbc:	ldr.w	r2, [fp]
   28cc0:	blx	8c6c <__printf_chk@plt+0x4>
   28cc4:	ldr.w	r2, [pc, #1508]	; 292ac <btrfs_print_leaf@@Base+0xe04>
   28cc8:	add.w	r1, r8, #213	; 0xd5
   28ccc:	mov	r0, r9
   28cce:	add	r2, pc
   28cd0:	bl	27b34 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   28cd4:	ldr.w	r2, [pc, #1496]	; 292b0 <btrfs_print_leaf@@Base+0xe08>
   28cd8:	add.w	r1, r8, #225	; 0xe1
   28cdc:	mov	r0, r9
   28cde:	add	r2, pc
   28ce0:	bl	27b34 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   28ce4:	ldr.w	r2, [pc, #1484]	; 292b4 <btrfs_print_leaf@@Base+0xe0c>
   28ce8:	add.w	r1, r8, #237	; 0xed
   28cec:	mov	r0, r9
   28cee:	add	r2, pc
   28cf0:	bl	27b34 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   28cf4:	ldr.w	r2, [pc, #1472]	; 292b8 <btrfs_print_leaf@@Base+0xe10>
   28cf8:	add.w	r1, r8, #249	; 0xf9
   28cfc:	mov	r0, r9
   28cfe:	add	r2, pc
   28d00:	bl	27b34 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   28d04:	b.n	28710 <btrfs_print_leaf@@Base+0x268>
   28d06:	cmp	r6, #0
   28d08:	beq.n	28c48 <btrfs_print_leaf@@Base+0x7a0>
   28d0a:	ldr.w	r1, [pc, #1456]	; 292bc <btrfs_print_leaf@@Base+0xe14>
   28d0e:	mov.w	r2, #256	; 0x100
   28d12:	add	r1, pc
   28d14:	b.n	28c44 <btrfs_print_leaf@@Base+0x79c>
   28d16:	add.w	r3, fp, r7
   28d1a:	mov	r1, r6
   28d1c:	mov	r0, r9
   28d1e:	ldrh	r4, [r3, #8]
   28d20:	ldr	r2, [r3, #0]
   28d22:	cmp	r4, #255	; 0xff
   28d24:	ldr.w	r8, [r3, #4]
   28d28:	mov	r3, r4
   28d2a:	vmov	s16, r2
   28d2e:	it	cs
   28d30:	movcs	r3, #255	; 0xff
   28d32:	add.w	r2, r7, #10
   28d36:	str	r3, [sp, #96]	; 0x60
   28d38:	bl	1a79e <read_extent_buffer@@Base>
   28d3c:	ldr	r3, [sp, #96]	; 0x60
   28d3e:	vmov	r2, s16
   28d42:	movs	r0, #1
   28d44:	vmov	r1, s17
   28d48:	strd	r4, r3, [sp]
   28d4c:	mov	r3, r8
   28d4e:	str	r6, [sp, #8]
   28d50:	adds	r4, #10
   28d52:	blx	8c6c <__printf_chk@plt+0x4>
   28d56:	add	r7, r4
   28d58:	add	r5, r4
   28d5a:	ldr	r3, [sp, #84]	; 0x54
   28d5c:	cmp	r3, r5
   28d5e:	bhi.n	28d16 <btrfs_print_leaf@@Base+0x86e>
   28d60:	b.n	28710 <btrfs_print_leaf@@Base+0x268>
   28d62:	add.w	r3, fp, r7
   28d66:	mov	r1, r6
   28d68:	mov	r0, r9
   28d6a:	ldr	r2, [r3, #8]
   28d6c:	ldrh	r4, [r3, #16]
   28d6e:	ldr.w	r8, [r3, #12]
   28d72:	vmov	s16, r2
   28d76:	ldr	r2, [r3, #0]
   28d78:	ldr	r3, [r3, #4]
   28d7a:	cmp	r4, #255	; 0xff
   28d7c:	str	r2, [sp, #96]	; 0x60
   28d7e:	add.w	r2, r7, #18
   28d82:	str	r3, [sp, #88]	; 0x58
   28d84:	mov	r3, r4
   28d86:	it	cs
   28d88:	movcs	r3, #255	; 0xff
   28d8a:	str	r3, [sp, #244]	; 0xf4
   28d8c:	bl	1a79e <read_extent_buffer@@Base>
   28d90:	ldr	r3, [sp, #244]	; 0xf4
   28d92:	vmov	r2, s16
   28d96:	movs	r0, #1
   28d98:	vmov	r1, s17
   28d9c:	strd	r4, r3, [sp, #8]
   28da0:	adds	r4, #18
   28da2:	ldr	r3, [sp, #96]	; 0x60
   28da4:	add	r7, r4
   28da6:	str	r6, [sp, #16]
   28da8:	add	r5, r4
   28daa:	str	r3, [sp, #0]
   28dac:	ldr	r3, [sp, #88]	; 0x58
   28dae:	str	r3, [sp, #4]
   28db0:	mov	r3, r8
   28db2:	blx	8c6c <__printf_chk@plt+0x4>
   28db6:	ldr	r3, [sp, #84]	; 0x54
   28db8:	cmp	r3, r5
   28dba:	bhi.n	28d62 <btrfs_print_leaf@@Base+0x8ba>
   28dbc:	b.n	28710 <btrfs_print_leaf@@Base+0x268>
   28dbe:	ldr.w	r3, [pc, #1280]	; 292c0 <btrfs_print_leaf@@Base+0xe18>
   28dc2:	add	r6, sp, #940	; 0x3ac
   28dc4:	movs	r5, #0
   28dc6:	add	r3, pc
   28dc8:	vmov	s17, r3
   28dcc:	b.n	28db6 <btrfs_print_leaf@@Base+0x90e>
   28dce:	add	r4, sp, #272	; 0x110
   28dd0:	movs	r3, #17
   28dd2:	mov	r2, r7
   28dd4:	mov	r0, r9
   28dd6:	mov	r1, r4
   28dd8:	add.w	r5, fp, r7
   28ddc:	bl	1a79e <read_extent_buffer@@Base>
   28de0:	vmov	r1, s17
   28de4:	movs	r0, #1
   28de6:	blx	8c6c <__printf_chk@plt+0x4>
   28dea:	mov	r0, r4
   28dec:	bl	280ac <btrfs_print_key@@Base>
   28df0:	vmov	r1, s18
   28df4:	movs	r0, #1
   28df6:	blx	8c6c <__printf_chk@plt+0x4>
   28dfa:	ldrb	r3, [r5, #29]
   28dfc:	cmp	r3, #8
   28dfe:	bhi.n	28eb8 <btrfs_print_leaf@@Base+0xa10>
   28e00:	ldr.w	r2, [pc, #1216]	; 292c4 <btrfs_print_leaf@@Base+0xe1c>
   28e04:	add	r2, pc
   28e06:	add.w	r2, r2, r3, lsl #2
   28e0a:	ldr.w	r2, [r2, #1024]	; 0x400
   28e0e:	cmp	r2, #0
   28e10:	beq.n	28eb8 <btrfs_print_leaf@@Base+0xa10>
   28e12:	ldr.w	r1, [pc, #1204]	; 292c8 <btrfs_print_leaf@@Base+0xe20>
   28e16:	add	r1, pc
   28e18:	movs	r0, #1
   28e1a:	add.w	r8, sp, #940	; 0x3ac
   28e1e:	blx	8c6c <__printf_chk@plt+0x4>
   28e22:	movs	r0, #10
   28e24:	blx	8c08 <putchar@plt+0x4>
   28e28:	ldrh.w	r4, [r5, #27]
   28e2c:	ldrh.w	r3, [r5, #25]
   28e30:	mov	r1, r8
   28e32:	cmp	r4, #255	; 0xff
   28e34:	mov	r0, r9
   28e36:	str	r3, [sp, #96]	; 0x60
   28e38:	mov	r3, r4
   28e3a:	it	cs
   28e3c:	movcs	r3, #255	; 0xff
   28e3e:	vmov	s16, r3
   28e42:	add.w	r3, r7, #30
   28e46:	str	r3, [sp, #88]	; 0x58
   28e48:	ldr	r2, [sp, #88]	; 0x58
   28e4a:	vmov	r3, s16
   28e4e:	bl	1a79e <read_extent_buffer@@Base>
   28e52:	ldr.w	r2, [r5, #17]!
   28e56:	ldr	r3, [sp, #96]	; 0x60
   28e58:	movs	r0, #1
   28e5a:	ldr.w	r1, [pc, #1136]	; 292cc <btrfs_print_leaf@@Base+0xe24>
   28e5e:	str	r4, [sp, #4]
   28e60:	add	r1, pc
   28e62:	str	r3, [sp, #0]
   28e64:	ldr	r3, [r5, #4]
   28e66:	blx	8c6c <__printf_chk@plt+0x4>
   28e6a:	ldr.w	r1, [pc, #1124]	; 292d0 <btrfs_print_leaf@@Base+0xe28>
   28e6e:	mov	r3, r8
   28e70:	vmov	r2, s16
   28e74:	add	r1, pc
   28e76:	movs	r0, #1
   28e78:	blx	8c6c <__printf_chk@plt+0x4>
   28e7c:	ldr	r3, [sp, #96]	; 0x60
   28e7e:	cbz	r3, 28ea6 <btrfs_print_leaf@@Base+0x9fe>
   28e80:	cmp	r3, #255	; 0xff
   28e82:	ldr	r2, [sp, #88]	; 0x58
   28e84:	mov	r5, r3
   28e86:	mov	r1, r8
   28e88:	it	cs
   28e8a:	movcs	r5, #255	; 0xff
   28e8c:	add	r2, r4
   28e8e:	mov	r3, r5
   28e90:	mov	r0, r9
   28e92:	bl	1a79e <read_extent_buffer@@Base>
   28e96:	ldr.w	r1, [pc, #1084]	; 292d4 <btrfs_print_leaf@@Base+0xe2c>
   28e9a:	mov	r3, r8
   28e9c:	mov	r2, r5
   28e9e:	add	r1, pc
   28ea0:	movs	r0, #1
   28ea2:	blx	8c6c <__printf_chk@plt+0x4>
   28ea6:	ldr	r3, [sp, #96]	; 0x60
   28ea8:	add	r4, r3
   28eaa:	adds	r4, #30
   28eac:	add	r7, r4
   28eae:	add	r6, r4
   28eb0:	ldr	r3, [sp, #84]	; 0x54
   28eb2:	cmp	r3, r6
   28eb4:	bhi.n	28dce <btrfs_print_leaf@@Base+0x926>
   28eb6:	b.n	28710 <btrfs_print_leaf@@Base+0x268>
   28eb8:	vmov	r1, s19
   28ebc:	mov	r2, r3
   28ebe:	b.n	28e18 <btrfs_print_leaf@@Base+0x970>
   28ec0:	ldr.w	r3, [sl, #17]
   28ec4:	ldr.w	r1, [pc, #1040]	; 292d8 <btrfs_print_leaf@@Base+0xe30>
   28ec8:	add	r3, fp
   28eca:	add	r1, pc
   28ecc:	ldr.w	r2, [r3, #101]!
   28ed0:	ldr	r3, [r3, #4]
   28ed2:	movs	r0, #1
   28ed4:	blx	8c6c <__printf_chk@plt+0x4>
   28ed8:	b.n	28710 <btrfs_print_leaf@@Base+0x268>
   28eda:	movs	r6, #0
   28edc:	movs	r2, #28
   28ede:	mov	r1, r6
   28ee0:	add	r0, sp, #776	; 0x308
   28ee2:	add	r5, sp, #300	; 0x12c
   28ee4:	str	r6, [sp, #772]	; 0x304
   28ee6:	blx	8bf8 <memset@plt+0x4>
   28eea:	ldr.w	r3, [sl, #21]
   28eee:	ldr.w	r4, [sl, #17]
   28ef2:	movw	r2, #439	; 0x1b7
   28ef6:	mov	r1, r6
   28ef8:	mov	r0, r5
   28efa:	str	r3, [sp, #84]	; 0x54
   28efc:	blx	8bf8 <memset@plt+0x4>
   28f00:	ldr	r3, [sp, #84]	; 0x54
   28f02:	add.w	r2, r4, #101	; 0x65
   28f06:	mov	r1, r5
   28f08:	mov	r0, r9
   28f0a:	bl	1a79e <read_extent_buffer@@Base>
   28f0e:	ldr.w	r3, [r5, #208]	; 0xd0
   28f12:	add	r7, sp, #772	; 0x304
   28f14:	and.w	r3, r3, #1
   28f18:	strd	r3, r6, [sp, #208]	; 0xd0
   28f1c:	ldrd	r2, r3, [sp, #208]	; 0xd0
   28f20:	orrs	r3, r2
   28f22:	mov.w	r2, #32
   28f26:	beq.w	290b6 <btrfs_print_leaf@@Base+0xc0e>
   28f2a:	ldr	r1, [pc, #944]	; (292dc <btrfs_print_leaf@@Base+0xe34>)
   28f2c:	add	r1, pc
   28f2e:	add	r5, sp, #300	; 0x12c
   28f30:	mov	r0, r7
   28f32:	blx	8bb8 <__strcat_chk@plt>
   28f36:	ldr	r1, [pc, #936]	; (292e0 <btrfs_print_leaf@@Base+0xe38>)
   28f38:	ldr.w	r3, [r5, #216]	; 0xd8
   28f3c:	movs	r0, #1
   28f3e:	add	r1, pc
   28f40:	str	r3, [sp, #20]
   28f42:	ldrb.w	r3, [r5, #238]	; 0xee
   28f46:	str	r3, [sp, #16]
   28f48:	ldrd	r2, r3, [r5, #176]	; 0xb0
   28f4c:	strd	r2, r3, [sp, #8]
   28f50:	ldrd	r2, r3, [r5, #168]	; 0xa8
   28f54:	strd	r2, r3, [sp]
   28f58:	ldrd	r2, r3, [r5, #160]	; 0xa0
   28f5c:	blx	8c6c <__printf_chk@plt+0x4>
   28f60:	add	r3, sp, #772	; 0x304
   28f62:	str	r3, [sp, #24]
   28f64:	movs	r0, #1
   28f66:	ldrd	r2, r3, [r5, #208]	; 0xd0
   28f6a:	ldr	r1, [pc, #888]	; (292e4 <btrfs_print_leaf@@Base+0xe3c>)
   28f6c:	strd	r2, r3, [sp, #16]
   28f70:	add	r1, pc
   28f72:	ldrd	r2, r3, [r5, #192]	; 0xc0
   28f76:	strd	r2, r3, [sp, #8]
   28f7a:	ldrd	r2, r3, [r5, #184]	; 0xb8
   28f7e:	strd	r2, r3, [sp]
   28f82:	ldrd	r2, r3, [r5, #200]	; 0xc8
   28f86:	blx	8c6c <__printf_chk@plt+0x4>
   28f8a:	ldrd	r0, r1, [r5, #160]	; 0xa0
   28f8e:	ldr.w	r3, [r5, #243]	; 0xf3
   28f92:	ldr.w	r2, [r5, #239]	; 0xef
   28f96:	cmp	r1, r3
   28f98:	it	eq
   28f9a:	cmpeq	r0, r2
   28f9c:	bne.n	29094 <btrfs_print_leaf@@Base+0xbec>
   28f9e:	add	r2, sp, #940	; 0x3ac
   28fa0:	addw	r0, sp, #547	; 0x223
   28fa4:	str	r2, [sp, #84]	; 0x54
   28fa6:	mov	r1, r2
   28fa8:	blx	8760 <uuid_unparse@plt>
   28fac:	ldr	r1, [pc, #824]	; (292e8 <btrfs_print_leaf@@Base+0xe40>)
   28fae:	ldr	r2, [sp, #84]	; 0x54
   28fb0:	movs	r0, #1
   28fb2:	add	r1, pc
   28fb4:	blx	8c6c <__printf_chk@plt+0x4>
   28fb8:	addw	r2, sp, #563	; 0x233
   28fbc:	movs	r3, #0
   28fbe:	ldrb.w	r1, [r2], #1
   28fc2:	cmp	r1, #0
   28fc4:	bne.w	297be <btrfs_print_leaf@@Base+0x1316>
   28fc8:	adds	r3, #1
   28fca:	cmp	r3, #16
   28fcc:	bne.n	28fbe <btrfs_print_leaf@@Base+0xb16>
   28fce:	addw	r2, sp, #579	; 0x243
   28fd2:	movs	r3, #0
   28fd4:	ldrb.w	r1, [r2], #1
   28fd8:	cmp	r1, #0
   28fda:	bne.w	297a2 <btrfs_print_leaf@@Base+0x12fa>
   28fde:	adds	r3, #1
   28fe0:	cmp	r3, #16
   28fe2:	bne.n	28fd4 <btrfs_print_leaf@@Base+0xb2c>
   28fe4:	ldr.w	r0, [sp, #595]	; 0x253
   28fe8:	ldr.w	r1, [sp, #599]	; 0x257
   28fec:	orrs.w	r2, r0, r1
   28ff0:	beq.n	29024 <btrfs_print_leaf@@Base+0xb7c>
   28ff2:	ldr.w	r5, [sp, #619]	; 0x26b
   28ff6:	ldr.w	r2, [sp, #623]	; 0x26f
   28ffa:	ldr.w	r3, [sp, #607]	; 0x25f
   28ffe:	strd	r5, r2, [sp, #16]
   29002:	ldr.w	r2, [sp, #615]	; 0x267
   29006:	ldr.w	r5, [sp, #611]	; 0x263
   2900a:	strd	r5, r2, [sp, #8]
   2900e:	ldr.w	r2, [sp, #603]	; 0x25b
   29012:	strd	r2, r3, [sp]
   29016:	mov	r3, r1
   29018:	ldr	r1, [pc, #720]	; (292ec <btrfs_print_leaf@@Base+0xe44>)
   2901a:	mov	r2, r0
   2901c:	movs	r0, #1
   2901e:	add	r1, pc
   29020:	blx	8c6c <__printf_chk@plt+0x4>
   29024:	add.w	r1, r4, #428	; 0x1ac
   29028:	add.w	r0, fp, r1
   2902c:	ldr.w	r2, [fp, r1]
   29030:	ldr	r3, [r0, #4]
   29032:	orrs	r3, r2
   29034:	beq.n	29040 <btrfs_print_leaf@@Base+0xb98>
   29036:	ldr	r2, [pc, #696]	; (292f0 <btrfs_print_leaf@@Base+0xe48>)
   29038:	mov	r0, r9
   2903a:	add	r2, pc
   2903c:	bl	27b34 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   29040:	add.w	r1, r4, #440	; 0x1b8
   29044:	add.w	r0, fp, r1
   29048:	ldr.w	r2, [fp, r1]
   2904c:	ldr	r3, [r0, #4]
   2904e:	orrs	r3, r2
   29050:	beq.n	2905c <btrfs_print_leaf@@Base+0xbb4>
   29052:	ldr	r2, [pc, #672]	; (292f4 <btrfs_print_leaf@@Base+0xe4c>)
   29054:	mov	r0, r9
   29056:	add	r2, pc
   29058:	bl	27b34 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2905c:	add.w	r1, r4, #452	; 0x1c4
   29060:	add.w	r0, fp, r1
   29064:	ldr.w	r2, [fp, r1]
   29068:	ldr	r3, [r0, #4]
   2906a:	orrs	r3, r2
   2906c:	beq.n	29078 <btrfs_print_leaf@@Base+0xbd0>
   2906e:	ldr	r2, [pc, #648]	; (292f8 <btrfs_print_leaf@@Base+0xe50>)
   29070:	mov	r0, r9
   29072:	add	r2, pc
   29074:	bl	27b34 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   29078:	add.w	r1, r4, #464	; 0x1d0
   2907c:	add.w	r0, fp, r1
   29080:	ldr.w	r2, [fp, r1]
   29084:	ldr	r3, [r0, #4]
   29086:	orrs	r3, r2
   29088:	beq.n	29094 <btrfs_print_leaf@@Base+0xbec>
   2908a:	ldr	r2, [pc, #624]	; (292fc <btrfs_print_leaf@@Base+0xe54>)
   2908c:	mov	r0, r9
   2908e:	add	r2, pc
   29090:	bl	27b34 <btrfs_destroy_delayed_refs@@Base+0x3c8>
   29094:	ldr	r1, [pc, #616]	; (29300 <btrfs_print_leaf@@Base+0xe58>)
   29096:	movs	r0, #1
   29098:	add	r1, pc
   2909a:	blx	8c6c <__printf_chk@plt+0x4>
   2909e:	add	r0, sp, #520	; 0x208
   290a0:	bl	280ac <btrfs_print_key@@Base>
   290a4:	ldr	r1, [pc, #604]	; (29304 <btrfs_print_leaf@@Base+0xe5c>)
   290a6:	ldrb.w	r2, [sp, #537]	; 0x219
   290aa:	add	r1, pc
   290ac:	movs	r0, #1
   290ae:	blx	8c6c <__printf_chk@plt+0x4>
   290b2:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   290b6:	ldr	r1, [pc, #592]	; (29308 <btrfs_print_leaf@@Base+0xe60>)
   290b8:	add	r1, pc
   290ba:	b.n	28f2e <btrfs_print_leaf@@Base+0xa86>
   290bc:	ldr	r2, [pc, #588]	; (2930c <btrfs_print_leaf@@Base+0xe64>)
   290be:	add	r2, pc
   290c0:	b.w	288bc <btrfs_print_leaf@@Base+0x414>
   290c4:	movs	r2, #0
   290c6:	ldr	r1, [sp, #80]	; 0x50
   290c8:	mov	r0, r9
   290ca:	bl	281c8 <print_extent_item@@Base>
   290ce:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   290d2:	movs	r2, #1
   290d4:	b.n	290c6 <btrfs_print_leaf@@Base+0xc1e>
   290d6:	ldr	r0, [pc, #568]	; (29310 <btrfs_print_leaf@@Base+0xe68>)
   290d8:	add	r0, pc
   290da:	b.w	28840 <btrfs_print_leaf@@Base+0x398>
   290de:	ldr	r0, [pc, #564]	; (29314 <btrfs_print_leaf@@Base+0xe6c>)
   290e0:	add	r0, pc
   290e2:	b.w	28840 <btrfs_print_leaf@@Base+0x398>
   290e6:	ldr	r1, [pc, #560]	; (29318 <btrfs_print_leaf@@Base+0xe70>)
   290e8:	movs	r0, #1
   290ea:	ldr.w	r5, [sl, #17]
   290ee:	add	r1, pc
   290f0:	blx	8c6c <__printf_chk@plt+0x4>
   290f4:	adds	r5, #101	; 0x65
   290f6:	ldr	r1, [sp, #100]	; 0x64
   290f8:	add.w	r4, fp, r5
   290fc:	movs	r3, #0
   290fe:	str	r3, [sp, #0]
   29100:	ldr.w	r2, [fp, r5]
   29104:	ldr	r3, [r4, #4]
   29106:	ldr	r0, [r1, #0]
   29108:	bl	27e3c <print_objectid@@Base>
   2910c:	ldr	r3, [r4, #24]
   2910e:	ldr	r1, [pc, #524]	; (2931c <btrfs_print_leaf@@Base+0xe74>)
   29110:	str	r3, [sp, #8]
   29112:	add	r1, pc
   29114:	ldr	r2, [r4, #16]
   29116:	ldr	r3, [r4, #20]
   29118:	strd	r2, r3, [sp]
   2911c:	ldr	r2, [r4, #8]
   2911e:	ldr	r3, [r4, #12]
   29120:	movs	r0, #1
   29122:	blx	8c6c <__printf_chk@plt+0x4>
   29126:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   2912a:	ldr.w	r2, [sl, #17]
   2912e:	ldr	r1, [pc, #496]	; (29320 <btrfs_print_leaf@@Base+0xe78>)
   29130:	add	r2, fp
   29132:	add	r1, pc
   29134:	ldr.w	r2, [r2, #101]	; 0x65
   29138:	b.n	290ac <btrfs_print_leaf@@Base+0xc04>
   2913a:	ldr	r0, [pc, #488]	; (29324 <btrfs_print_leaf@@Base+0xe7c>)
   2913c:	add	r0, pc
   2913e:	b.w	28840 <btrfs_print_leaf@@Base+0x398>
   29142:	ldr	r0, [pc, #484]	; (29328 <btrfs_print_leaf@@Base+0xe80>)
   29144:	add	r0, pc
   29146:	b.w	28840 <btrfs_print_leaf@@Base+0x398>
   2914a:	ldr	r3, [sp, #104]	; 0x68
   2914c:	ldr.w	r0, [r3, #308]	; 0x134
   29150:	bl	1b294 <btrfs_super_csum_size@@Base>
   29154:	mov	r1, r0
   29156:	ldr	r0, [sp, #84]	; 0x54
   29158:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   2915c:	ldr	r3, [sp, #104]	; 0x68
   2915e:	ldr	r1, [pc, #460]	; (2932c <btrfs_print_leaf@@Base+0xe84>)
   29160:	ldr.w	r3, [r3, #388]	; 0x184
   29164:	add	r1, pc
   29166:	muls	r0, r3
   29168:	ldrd	r2, r3, [sp, #88]	; 0x58
   2916c:	adds	r2, r2, r0
   2916e:	adc.w	r3, r3, #0
   29172:	strd	r2, r3, [sp]
   29176:	str	r0, [sp, #8]
   29178:	ldrd	r2, r3, [sp, #88]	; 0x58
   2917c:	b.n	29120 <btrfs_print_leaf@@Base+0xc78>
   2917e:	ldr	r1, [pc, #432]	; (29330 <btrfs_print_leaf@@Base+0xe88>)
   29180:	add	r1, pc
   29182:	blx	8a08 <strcpy@plt>
   29186:	cmp	r5, #1
   29188:	ldr	r2, [r4, #0]
   2918a:	ldr	r3, [r4, #4]
   2918c:	beq.w	2935e <btrfs_print_leaf@@Base+0xeb6>
   29190:	cmp	r5, #2
   29192:	beq.w	29366 <btrfs_print_leaf@@Base+0xebe>
   29196:	cmp	r5, #0
   29198:	beq.w	2936e <btrfs_print_leaf@@Base+0xec6>
   2919c:	ldr	r1, [pc, #404]	; (29334 <btrfs_print_leaf@@Base+0xe8c>)
   2919e:	add	r1, pc
   291a0:	strd	r5, r1, [sp]
   291a4:	movs	r0, #1
   291a6:	ldr	r1, [pc, #400]	; (29338 <btrfs_print_leaf@@Base+0xe90>)
   291a8:	add	r1, pc
   291aa:	blx	8c6c <__printf_chk@plt+0x4>
   291ae:	cmp	r5, #0
   291b0:	bne.w	29376 <btrfs_print_leaf@@Base+0xece>
   291b4:	ldr.w	r2, [sl, #21]
   291b8:	add	r3, sp, #940	; 0x3ac
   291ba:	str	r3, [sp, #12]
   291bc:	movs	r0, #1
   291be:	ldrb	r3, [r4, #16]
   291c0:	subs	r2, #21
   291c2:	str	r3, [sp, #8]
   291c4:	ldr	r1, [r4, #8]
   291c6:	ldr	r3, [r4, #12]
   291c8:	strd	r1, r3, [sp]
   291cc:	ldr	r1, [pc, #364]	; (2933c <btrfs_print_leaf@@Base+0xe94>)
   291ce:	add	r1, pc
   291d0:	blx	8c6c <__printf_chk@plt+0x4>
   291d4:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   291d8:	ldr	r1, [pc, #356]	; (29340 <btrfs_print_leaf@@Base+0xe98>)
   291da:	add	r1, pc
   291dc:	b.n	29182 <btrfs_print_leaf@@Base+0xcda>
   291de:	ldr	r1, [pc, #356]	; (29344 <btrfs_print_leaf@@Base+0xe9c>)
   291e0:	add	r1, pc
   291e2:	b.n	29182 <btrfs_print_leaf@@Base+0xcda>
   291e4:	ldr	r1, [pc, #352]	; (29348 <btrfs_print_leaf@@Base+0xea0>)
   291e6:	add	r1, pc
   291e8:	b.n	29182 <btrfs_print_leaf@@Base+0xcda>
   291ea:	nop
   291ec:	lsrs	r2, r6, #1
   291ee:	movs	r4, r0
   291f0:	lsls	r4, r7, #9
   291f2:	movs	r0, r0
   291f4:	lsrs	r6, r4, #1
   291f6:	movs	r4, r0
   291f8:	add	r0, sp, #276	; 0x114
   291fa:	movs	r1, r0
   291fc:	ldrb	r3, [r3, #6]
   291fe:	movs	r1, r0
   29200:	add	r6, pc, #240	; (adr r6, 292f4 <btrfs_print_leaf@@Base+0xe4c>)
   29202:	movs	r1, r0
   29204:	add	r7, pc, #932	; (adr r7, 295ac <btrfs_print_leaf@@Base+0x1104>)
   29206:	movs	r1, r0
   29208:	lsls	r0, r6, #10
   2920a:	movs	r0, r0
   2920c:	add	r7, pc, #924	; (adr r7, 295ac <btrfs_print_leaf@@Base+0x1104>)
   2920e:	movs	r1, r0
   29210:	add	r0, sp, #304	; 0x130
   29212:	movs	r1, r0
   29214:	sub	sp, #328	; 0x148
   29216:	movs	r1, r0
   29218:	add	r7, pc, #660	; (adr r7, 294b0 <btrfs_print_leaf@@Base+0x1008>)
   2921a:	movs	r1, r0
   2921c:	add	r7, pc, #852	; (adr r7, 29574 <btrfs_print_leaf@@Base+0x10cc>)
   2921e:	movs	r1, r0
   29220:	lsls	r4, r6, #27
   29222:	movs	r4, r0
   29224:	add	r7, pc, #544	; (adr r7, 29448 <btrfs_print_leaf@@Base+0xfa0>)
   29226:	movs	r1, r0
   29228:	add	r7, pc, #428	; (adr r7, 293d8 <btrfs_print_leaf@@Base+0xf30>)
   2922a:	movs	r1, r0
   2922c:	add	r7, pc, #244	; (adr r7, 29324 <btrfs_print_leaf@@Base+0xe7c>)
   2922e:	movs	r1, r0
   29230:	add	r0, sp, #188	; 0xbc
   29232:	movs	r1, r0
   29234:	add	r0, sp, #0
   29236:	movs	r1, r0
   29238:	add	r5, pc, #908	; (adr r5, 295c8 <btrfs_print_leaf@@Base+0x1120>)
   2923a:	movs	r1, r0
   2923c:	add	r7, pc, #460	; (adr r7, 2940c <btrfs_print_leaf@@Base+0xf64>)
   2923e:	movs	r1, r0
   29240:	add	r7, pc, #448	; (adr r7, 29404 <btrfs_print_leaf@@Base+0xf5c>)
   29242:	movs	r1, r0
   29244:	ldr	r6, [r3, #124]	; 0x7c
   29246:	movs	r1, r0
   29248:	add	r1, sp, #920	; 0x398
   2924a:	movs	r1, r0
   2924c:	add	r4, pc, #544	; (adr r4, 29470 <btrfs_print_leaf@@Base+0xfc8>)
   2924e:	movs	r1, r0
   29250:	strb	r1, [r5, #18]
   29252:	movs	r1, r0
   29254:	add	r4, pc, #368	; (adr r4, 293c8 <btrfs_print_leaf@@Base+0xf20>)
   29256:	movs	r1, r0
   29258:	strb	r3, [r6, #17]
   2925a:	movs	r1, r0
   2925c:	add	r4, pc, #192	; (adr r4, 29320 <btrfs_print_leaf@@Base+0xe78>)
   2925e:	movs	r1, r0
   29260:	strb	r5, [r7, #16]
   29262:	movs	r1, r0
   29264:	add	r4, pc, #12	; (adr r4, 29274 <btrfs_print_leaf@@Base+0xdcc>)
   29266:	movs	r1, r0
   29268:	strb	r7, [r0, #16]
   2926a:	movs	r1, r0
   2926c:	strb	r5, [r6, #18]
   2926e:	movs	r1, r0
   29270:	strb	r1, [r2, #15]
   29272:	movs	r1, r0
   29274:	add	r3, pc, #788	; (adr r3, 2958c <btrfs_print_leaf@@Base+0x10e4>)
   29276:	movs	r1, r0
   29278:	strb	r3, [r3, #14]
   2927a:	movs	r1, r0
   2927c:	add	r3, pc, #432	; (adr r3, 29430 <btrfs_print_leaf@@Base+0xf88>)
   2927e:	movs	r1, r0
   29280:	strb	r5, [r4, #13]
   29282:	movs	r1, r0
   29284:	add	r3, pc, #256	; (adr r3, 29388 <btrfs_print_leaf@@Base+0xee0>)
   29286:	movs	r1, r0
   29288:	strb	r7, [r5, #12]
   2928a:	movs	r1, r0
   2928c:	add	r3, pc, #68	; (adr r3, 292d4 <btrfs_print_leaf@@Base+0xe2c>)
   2928e:	movs	r1, r0
   29290:	strb	r1, [r7, #11]
   29292:	movs	r1, r0
   29294:	add	r2, pc, #904	; (adr r2, 29620 <btrfs_print_leaf@@Base+0x1178>)
   29296:	movs	r1, r0
   29298:	strb	r3, [r0, #11]
   2929a:	movs	r1, r0
   2929c:	add	r2, pc, #720	; (adr r2, 29570 <btrfs_print_leaf@@Base+0x10c8>)
   2929e:	movs	r1, r0
   292a0:	strb	r5, [r1, #10]
   292a2:	movs	r1, r0
   292a4:	add	r2, pc, #348	; (adr r2, 29404 <btrfs_print_leaf@@Base+0xf5c>)
   292a6:	movs	r1, r0
   292a8:	add	r2, pc, #416	; (adr r2, 2944c <btrfs_print_leaf@@Base+0xfa4>)
   292aa:	movs	r1, r0
   292ac:	add	r2, pc, #572	; (adr r2, 294ec <btrfs_print_leaf@@Base+0x1044>)
   292ae:	movs	r1, r0
   292b0:	add	r2, pc, #544	; (adr r2, 294d4 <btrfs_print_leaf@@Base+0x102c>)
   292b2:	movs	r1, r0
   292b4:	add	r2, pc, #516	; (adr r2, 294bc <btrfs_print_leaf@@Base+0x1014>)
   292b6:	movs	r1, r0
   292b8:	add	r2, pc, #488	; (adr r2, 294a4 <btrfs_print_leaf@@Base+0xffc>)
   292ba:	movs	r1, r0
   292bc:	ldr	r1, [r1, #88]	; 0x58
   292be:	movs	r1, r0
   292c0:	add	r1, pc, #892	; (adr r1, 29640 <btrfs_print_leaf@@Base+0x1198>)
   292c2:	movs	r1, r0
   292c4:	ldr??.w	r0, [ip, r3]
   292c8:			; <UNDEFINED> instruction: 0xb6d1
   292ca:	movs	r1, r0
   292cc:	add	r1, pc, #544	; (adr r1, 294f0 <btrfs_print_leaf@@Base+0x1048>)
   292ce:	movs	r1, r0
   292d0:	add	r1, pc, #624	; (adr r1, 29544 <btrfs_print_leaf@@Base+0x109c>)
   292d2:	movs	r1, r0
   292d4:	add	r1, pc, #512	; (adr r1, 294d8 <btrfs_print_leaf@@Base+0x1030>)
   292d6:	movs	r1, r0
   292d8:	add	r1, pc, #388	; (adr r1, 29460 <btrfs_print_leaf@@Base+0xfb8>)
   292da:	movs	r1, r0
   292dc:	add	r1, pc, #128	; (adr r1, 29360 <btrfs_print_leaf@@Base+0xeb8>)
   292de:	movs	r1, r0
   292e0:	add	r1, pc, #84	; (adr r1, 29338 <btrfs_print_leaf@@Base+0xe90>)
   292e2:	movs	r1, r0
   292e4:	add	r1, pc, #148	; (adr r1, 2937c <btrfs_print_leaf@@Base+0xed4>)
   292e6:	movs	r1, r0
   292e8:	add	r1, pc, #148	; (adr r1, 29380 <btrfs_print_leaf@@Base+0xed8>)
   292ea:	movs	r1, r0
   292ec:	add	r0, pc, #784	; (adr r0, 29600 <btrfs_print_leaf@@Base+0x1158>)
   292ee:	movs	r1, r0
   292f0:	ldr	r7, [sp, #176]	; 0xb0
   292f2:	movs	r1, r0
   292f4:	ldr	r7, [sp, #136]	; 0x88
   292f6:	movs	r1, r0
   292f8:	add	r0, pc, #684	; (adr r0, 295a8 <btrfs_print_leaf@@Base+0x1100>)
   292fa:	movs	r1, r0
   292fc:	add	r0, pc, #608	; (adr r0, 29560 <btrfs_print_leaf@@Base+0x10b8>)
   292fe:	movs	r1, r0
   29300:	add	r0, pc, #604	; (adr r0, 29560 <btrfs_print_leaf@@Base+0x10b8>)
   29302:	movs	r1, r0
   29304:	add	r0, pc, #564	; (adr r0, 2953c <btrfs_print_leaf@@Base+0x1094>)
   29306:	movs	r1, r0
   29308:	ldr	r3, [r4, #28]
   2930a:	movs	r1, r0
   2930c:	add	r0, pc, #680	; (adr r0, 295b8 <btrfs_print_leaf@@Base+0x1110>)
   2930e:	movs	r1, r0
   29310:	add	r0, pc, #432	; (adr r0, 294c4 <btrfs_print_leaf@@Base+0x101c>)
   29312:	movs	r1, r0
   29314:	add	r0, pc, #484	; (adr r0, 294fc <btrfs_print_leaf@@Base+0x1054>)
   29316:	movs	r1, r0
   29318:	ldr	r3, [sp, #780]	; 0x30c
   2931a:	movs	r1, r0
   2931c:	ldr	r3, [sp, #748]	; 0x2ec
   2931e:	movs	r1, r0
   29320:	add	r0, pc, #248	; (adr r0, 2941c <btrfs_print_leaf@@Base+0xf74>)
   29322:	movs	r1, r0
   29324:	add	r0, pc, #336	; (adr r0, 29478 <btrfs_print_leaf@@Base+0xfd0>)
   29326:	movs	r1, r0
   29328:	add	r0, pc, #420	; (adr r0, 294d0 <btrfs_print_leaf@@Base+0x1028>)
   2932a:	movs	r1, r0
   2932c:	add	r0, pc, #340	; (adr r0, 29484 <btrfs_print_leaf@@Base+0xfdc>)
   2932e:	movs	r1, r0
   29330:	ldr	r3, [r3, #16]
   29332:	movs	r1, r0
   29334:	ldr	r3, [sp, #660]	; 0x294
   29336:	movs	r1, r0
   29338:	add	r0, pc, #280	; (adr r0, 29454 <btrfs_print_leaf@@Base+0xfac>)
   2933a:	movs	r1, r0
   2933c:	add	r0, pc, #264	; (adr r0, 29448 <btrfs_print_leaf@@Base+0xfa0>)
   2933e:	movs	r1, r0
   29340:	add	r0, pc, #24	; (adr r0, 2935c <btrfs_print_leaf@@Base+0xeb4>)
   29342:	movs	r1, r0
   29344:	add	r0, pc, #20	; (adr r0, 2935c <btrfs_print_leaf@@Base+0xeb4>)
   29346:	movs	r1, r0
   29348:	add	r0, pc, #12	; (adr r0, 29358 <btrfs_print_leaf@@Base+0xeb0>)
   2934a:	movs	r1, r0
   2934c:	str	r3, [sp, #0]
   2934e:	movs	r2, #16
   29350:	ldr.w	r3, [pc, #1172]	; 297e8 <btrfs_print_leaf@@Base+0x1340>
   29354:	movs	r1, #1
   29356:	add	r3, pc
   29358:	blx	8bc4 <__sprintf_chk@plt>
   2935c:	b.n	29186 <btrfs_print_leaf@@Base+0xcde>
   2935e:	ldr.w	r1, [pc, #1164]	; 297ec <btrfs_print_leaf@@Base+0x1344>
   29362:	add	r1, pc
   29364:	b.n	291a0 <btrfs_print_leaf@@Base+0xcf8>
   29366:	ldr.w	r1, [pc, #1160]	; 297f0 <btrfs_print_leaf@@Base+0x1348>
   2936a:	add	r1, pc
   2936c:	b.n	291a0 <btrfs_print_leaf@@Base+0xcf8>
   2936e:	ldr.w	r1, [pc, #1156]	; 297f4 <btrfs_print_leaf@@Base+0x134c>
   29372:	add	r1, pc
   29374:	b.n	291a0 <btrfs_print_leaf@@Base+0xcf8>
   29376:	mov	r1, r4
   29378:	mov	r3, r4
   2937a:	ldr.w	r0, [r1, #29]!
   2937e:	cmp	r5, #2
   29380:	ldr.w	r2, [r3, #21]!
   29384:	ldr	r1, [r1, #4]
   29386:	ldr	r3, [r3, #4]
   29388:	strd	r0, r1, [sp]
   2938c:	bne.n	293bc <btrfs_print_leaf@@Base+0xf14>
   2938e:	ldr.w	r1, [pc, #1128]	; 297f8 <btrfs_print_leaf@@Base+0x1350>
   29392:	movs	r0, #1
   29394:	add	r1, pc
   29396:	blx	8c6c <__printf_chk@plt+0x4>
   2939a:	mov	r3, r4
   2939c:	ldr.w	r0, [r4, #45]!
   293a0:	ldr.w	r2, [r3, #37]!
   293a4:	ldr	r1, [r4, #4]
   293a6:	strd	r0, r1, [sp]
   293aa:	movs	r0, #1
   293ac:	ldr.w	r1, [pc, #1100]	; 297fc <btrfs_print_leaf@@Base+0x1354>
   293b0:	ldr	r3, [r3, #4]
   293b2:	add	r1, pc
   293b4:	blx	8c6c <__printf_chk@plt+0x4>
   293b8:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   293bc:	ldr.w	r1, [pc, #1088]	; 29800 <btrfs_print_leaf@@Base+0x1358>
   293c0:	movs	r0, #1
   293c2:	add	r1, pc
   293c4:	blx	8c6c <__printf_chk@plt+0x4>
   293c8:	ldr	r0, [r4, #8]
   293ca:	ldr	r1, [r4, #12]
   293cc:	mov	r3, r4
   293ce:	ldr.w	r2, [r3, #37]!
   293d2:	strd	r0, r1, [sp, #8]
   293d6:	mov	r1, r4
   293d8:	ldr.w	r0, [r1, #45]!
   293dc:	ldr	r1, [r1, #4]
   293de:	strd	r0, r1, [sp]
   293e2:	movs	r0, #1
   293e4:	ldr.w	r1, [pc, #1052]	; 29804 <btrfs_print_leaf@@Base+0x135c>
   293e8:	ldr	r3, [r3, #4]
   293ea:	add	r1, pc
   293ec:	blx	8c6c <__printf_chk@plt+0x4>
   293f0:	ldr.w	r1, [pc, #1044]	; 29808 <btrfs_print_leaf@@Base+0x1360>
   293f4:	ldrb	r2, [r4, #16]
   293f6:	add	r3, sp, #940	; 0x3ac
   293f8:	add	r1, pc
   293fa:	movs	r0, #1
   293fc:	blx	8c6c <__printf_chk@plt+0x4>
   29400:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   29404:	add	r4, sp, #272	; 0x110
   29406:	add	r5, sp, #940	; 0x3ac
   29408:	movs	r3, #24
   2940a:	mov	r2, r7
   2940c:	mov	r1, r4
   2940e:	mov	r0, r9
   29410:	bl	1a79e <read_extent_buffer@@Base>
   29414:	mov.w	r2, #256	; 0x100
   29418:	movs	r1, #0
   2941a:	mov	r0, r5
   2941c:	blx	8bf8 <memset@plt+0x4>
   29420:	ldrd	r0, r1, [r4, #16]
   29424:	mov	r2, r5
   29426:	bl	2786c <btrfs_destroy_delayed_refs@@Base+0x100>
   2942a:	str	r5, [sp, #8]
   2942c:	ldrd	r2, r3, [r4, #8]
   29430:	ldr	r1, [pc, #984]	; (2980c <btrfs_print_leaf@@Base+0x1364>)
   29432:	strd	r2, r3, [sp]
   29436:	add	r1, pc
   29438:	ldrd	r2, r3, [sp, #272]	; 0x110
   2943c:	b.n	29120 <btrfs_print_leaf@@Base+0xc78>
   2943e:	ldr.w	r2, [sl, #17]
   29442:	ldr	r1, [pc, #972]	; (29810 <btrfs_print_leaf@@Base+0x1368>)
   29444:	adds	r2, #101	; 0x65
   29446:	add.w	r3, fp, r2
   2944a:	add	r1, pc
   2944c:	ldr.w	r2, [fp, r2]
   29450:	ldr	r3, [r3, #4]
   29452:	b.n	293fa <btrfs_print_leaf@@Base+0xf52>
   29454:	ldr	r0, [pc, #956]	; (29814 <btrfs_print_leaf@@Base+0x136c>)
   29456:	add	r0, pc
   29458:	b.w	28840 <btrfs_print_leaf@@Base+0x398>
   2945c:	ldr	r0, [pc, #952]	; (29818 <btrfs_print_leaf@@Base+0x1370>)
   2945e:	add	r0, pc
   29460:	b.w	28840 <btrfs_print_leaf@@Base+0x398>
   29464:	mov	r1, r7
   29466:	mov	r0, r9
   29468:	bl	27c3c <print_chunk_item@@Base>
   2946c:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   29470:	ldr.w	r4, [sl, #17]
   29474:	add	r5, sp, #772	; 0x304
   29476:	add	r6, sp, #940	; 0x3ac
   29478:	movs	r3, #16
   2947a:	add.w	r2, r4, #133	; 0x85
   2947e:	mov	r1, r5
   29480:	mov	r0, r9
   29482:	adds	r4, #101	; 0x65
   29484:	bl	1a79e <read_extent_buffer@@Base>
   29488:	mov	r1, r6
   2948a:	mov	r0, r5
   2948c:	blx	8760 <uuid_unparse@plt>
   29490:	add.w	r3, fp, r4
   29494:	str	r6, [sp, #24]
   29496:	movs	r0, #1
   29498:	ldr	r1, [r3, #24]
   2949a:	ldr	r2, [r3, #28]
   2949c:	strd	r1, r2, [sp, #16]
   294a0:	ldr	r1, [r3, #16]
   294a2:	ldr	r2, [r3, #20]
   294a4:	strd	r1, r2, [sp, #8]
   294a8:	ldr	r1, [r3, #8]
   294aa:	ldr	r2, [r3, #12]
   294ac:	strd	r1, r2, [sp]
   294b0:	ldr	r1, [pc, #872]	; (2981c <btrfs_print_leaf@@Base+0x1374>)
   294b2:	ldr.w	r2, [fp, r4]
   294b6:	ldr	r3, [r3, #4]
   294b8:	add	r1, pc
   294ba:	blx	8c6c <__printf_chk@plt+0x4>
   294be:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   294c2:	add	r3, sp, #940	; 0x3ac
   294c4:	mov.w	r2, #256	; 0x100
   294c8:	movs	r1, #0
   294ca:	ldr.w	r5, [sl, #17]
   294ce:	mov	r0, r3
   294d0:	blx	8bf8 <memset@plt+0x4>
   294d4:	adds	r5, #101	; 0x65
   294d6:	add	r5, fp
   294d8:	ldr	r4, [r5, #16]
   294da:	and.w	r2, r4, #1
   294de:	str	r2, [sp, #216]	; 0xd8
   294e0:	movs	r2, #0
   294e2:	str	r2, [sp, #220]	; 0xdc
   294e4:	ldrd	r1, r2, [sp, #216]	; 0xd8
   294e8:	orrs	r2, r1
   294ea:	mov	r3, r0
   294ec:	beq.n	2955e <btrfs_print_leaf@@Base+0x10b6>
   294ee:	ldr	r1, [pc, #816]	; (29820 <btrfs_print_leaf@@Base+0x1378>)
   294f0:	add	r1, pc
   294f2:	mov	r0, r3
   294f4:	blx	8a08 <strcpy@plt>
   294f8:	and.w	r3, r4, #2
   294fc:	str	r3, [sp, #224]	; 0xe0
   294fe:	movs	r3, #0
   29500:	str	r3, [sp, #228]	; 0xe4
   29502:	ldrd	r2, r3, [sp, #224]	; 0xe0
   29506:	orrs	r3, r2
   29508:	beq.n	29518 <btrfs_print_leaf@@Base+0x1070>
   2950a:	ldr	r1, [pc, #792]	; (29824 <btrfs_print_leaf@@Base+0x137c>)
   2950c:	add	r0, sp, #940	; 0x3ac
   2950e:	mov.w	r2, #256	; 0x100
   29512:	add	r1, pc
   29514:	blx	8bb8 <__strcat_chk@plt>
   29518:	and.w	r3, r4, #4
   2951c:	str	r3, [sp, #232]	; 0xe8
   2951e:	movs	r3, #0
   29520:	str	r3, [sp, #236]	; 0xec
   29522:	ldrd	r3, r4, [sp, #232]	; 0xe8
   29526:	orrs	r3, r4
   29528:	beq.n	29538 <btrfs_print_leaf@@Base+0x1090>
   2952a:	ldr	r1, [pc, #764]	; (29828 <btrfs_print_leaf@@Base+0x1380>)
   2952c:	add	r0, sp, #940	; 0x3ac
   2952e:	mov.w	r2, #256	; 0x100
   29532:	add	r1, pc
   29534:	blx	8bb8 <__strcat_chk@plt>
   29538:	ldr	r2, [r5, #24]
   2953a:	movs	r0, #1
   2953c:	ldr	r3, [r5, #28]
   2953e:	ldr	r1, [pc, #748]	; (2982c <btrfs_print_leaf@@Base+0x1384>)
   29540:	strd	r2, r3, [sp, #16]
   29544:	add	r3, sp, #940	; 0x3ac
   29546:	str	r3, [sp, #8]
   29548:	add	r1, pc
   2954a:	ldr	r2, [r5, #8]
   2954c:	ldr	r3, [r5, #12]
   2954e:	strd	r2, r3, [sp]
   29552:	ldr	r2, [r5, #0]
   29554:	ldr	r3, [r5, #4]
   29556:	blx	8c6c <__printf_chk@plt+0x4>
   2955a:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   2955e:	ldr	r1, [pc, #720]	; (29830 <btrfs_print_leaf@@Base+0x1388>)
   29560:	add	r1, pc
   29562:	b.n	294f2 <btrfs_print_leaf@@Base+0x104a>
   29564:	ldr.w	r2, [sl, #17]
   29568:	adds	r2, #101	; 0x65
   2956a:	add.w	r3, fp, r2
   2956e:	ldr	r0, [r3, #32]
   29570:	ldr	r1, [r3, #36]	; 0x24
   29572:	strd	r0, r1, [sp, #24]
   29576:	ldr	r0, [r3, #24]
   29578:	ldr	r1, [r3, #28]
   2957a:	strd	r0, r1, [sp, #16]
   2957e:	ldr	r0, [r3, #16]
   29580:	ldr	r1, [r3, #20]
   29582:	strd	r0, r1, [sp, #8]
   29586:	ldr	r1, [r3, #12]
   29588:	ldr	r0, [r3, #8]
   2958a:	strd	r0, r1, [sp]
   2958e:	ldr	r1, [pc, #676]	; (29834 <btrfs_print_leaf@@Base+0x138c>)
   29590:	ldr.w	r2, [fp, r2]
   29594:	ldr	r3, [r3, #4]
   29596:	add	r1, pc
   29598:	movs	r0, #1
   2959a:	blx	8c6c <__printf_chk@plt+0x4>
   2959e:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   295a2:	ldr.w	r2, [sl, #17]
   295a6:	adds	r2, #101	; 0x65
   295a8:	add.w	r3, fp, r2
   295ac:	ldr	r0, [r3, #32]
   295ae:	ldr	r1, [r3, #36]	; 0x24
   295b0:	strd	r0, r1, [sp, #24]
   295b4:	ldr	r0, [r3, #24]
   295b6:	ldr	r1, [r3, #28]
   295b8:	strd	r0, r1, [sp, #16]
   295bc:	ldr	r0, [r3, #16]
   295be:	ldr	r1, [r3, #20]
   295c0:	strd	r0, r1, [sp, #8]
   295c4:	ldr	r1, [r3, #12]
   295c6:	ldr	r0, [r3, #8]
   295c8:	strd	r0, r1, [sp]
   295cc:	ldr	r1, [pc, #616]	; (29838 <btrfs_print_leaf@@Base+0x1390>)
   295ce:	ldr.w	r2, [fp, r2]
   295d2:	ldr	r3, [r3, #4]
   295d4:	add	r1, pc
   295d6:	b.n	29598 <btrfs_print_leaf@@Base+0x10f0>
   295d8:	ldr.w	r4, [sl, #21]
   295dc:	ldr.w	r5, [sl, #17]
   295e0:	lsls	r3, r4, #29
   295e2:	add.w	r5, r5, #101	; 0x65
   295e6:	bne.n	29612 <btrfs_print_leaf@@Base+0x116a>
   295e8:	ldr	r7, [pc, #592]	; (2983c <btrfs_print_leaf@@Base+0x1394>)
   295ea:	add	r6, sp, #272	; 0x110
   295ec:	add	r7, pc
   295ee:	cmp	r4, #0
   295f0:	beq.w	28710 <btrfs_print_leaf@@Base+0x268>
   295f4:	mov	r2, r5
   295f6:	movs	r3, #8
   295f8:	mov	r1, r6
   295fa:	mov	r0, r9
   295fc:	bl	1a79e <read_extent_buffer@@Base>
   29600:	ldrd	r2, r3, [sp, #272]	; 0x110
   29604:	mov	r1, r7
   29606:	movs	r0, #1
   29608:	blx	8c6c <__printf_chk@plt+0x4>
   2960c:	subs	r4, #8
   2960e:	adds	r5, #8
   29610:	b.n	295ee <btrfs_print_leaf@@Base+0x1146>
   29612:	ldr	r1, [pc, #556]	; (29840 <btrfs_print_leaf@@Base+0x1398>)
   29614:	mov	r2, r4
   29616:	add	r1, pc
   29618:	b.n	290ac <btrfs_print_leaf@@Base+0xc04>
   2961a:	ldr.w	r3, [sl, #17]
   2961e:	ldr	r1, [pc, #548]	; (29844 <btrfs_print_leaf@@Base+0x139c>)
   29620:	adds	r3, #101	; 0x65
   29622:	ldr	r2, [sp, #84]	; 0x54
   29624:	add	r3, fp
   29626:	add	r1, pc
   29628:	b.n	293fa <btrfs_print_leaf@@Base+0xf52>
   2962a:	ldr	r1, [pc, #540]	; (29848 <btrfs_print_leaf@@Base+0x13a0>)
   2962c:	movs	r0, #1
   2962e:	add	r1, pc
   29630:	blx	8c6c <__printf_chk@plt+0x4>
   29634:	ldr	r1, [sp, #100]	; 0x64
   29636:	movs	r3, #249	; 0xf9
   29638:	mov	r2, r4
   2963a:	str	r3, [sp, #0]
   2963c:	mov	r3, r5
   2963e:	ldr	r0, [r1, #0]
   29640:	bl	27e3c <print_objectid@@Base>
   29644:	ldr	r1, [pc, #516]	; (2984c <btrfs_print_leaf@@Base+0x13a4>)
   29646:	ldrd	r2, r3, [sp, #88]	; 0x58
   2964a:	movs	r0, #1
   2964c:	add	r1, pc
   2964e:	blx	8c6c <__printf_chk@plt+0x4>
   29652:	orrs.w	r3, r4, r5
   29656:	bne.n	2970a <btrfs_print_leaf@@Base+0x1262>
   29658:	ldr	r0, [pc, #500]	; (29850 <btrfs_print_leaf@@Base+0x13a8>)
   2965a:	add	r0, pc
   2965c:	blx	8a78 <puts@plt+0x4>
   29660:	movs	r2, #0
   29662:	mov	r1, r7
   29664:	mov	r0, r9
   29666:	bl	277d4 <btrfs_destroy_delayed_refs@@Base+0x68>
   2966a:	movs	r2, #1
   2966c:	mov	r4, r0
   2966e:	str	r1, [sp, #244]	; 0xf4
   29670:	mov	r0, r9
   29672:	mov	r1, r7
   29674:	bl	277d4 <btrfs_destroy_delayed_refs@@Base+0x68>
   29678:	movs	r2, #2
   2967a:	mov	r6, r0
   2967c:	mov	r5, r1
   2967e:	mov	r0, r9
   29680:	mov	r1, r7
   29682:	bl	277d4 <btrfs_destroy_delayed_refs@@Base+0x68>
   29686:	movs	r2, #3
   29688:	mov	r8, r0
   2968a:	mov	fp, r1
   2968c:	mov	r0, r9
   2968e:	mov	r1, r7
   29690:	bl	277d4 <btrfs_destroy_delayed_refs@@Base+0x68>
   29694:	movs	r2, #4
   29696:	str	r0, [sp, #96]	; 0x60
   29698:	mov	r0, r9
   2969a:	str	r1, [sp, #88]	; 0x58
   2969c:	mov	r1, r7
   2969e:	bl	277d4 <btrfs_destroy_delayed_refs@@Base+0x68>
   296a2:	ldr	r3, [sp, #96]	; 0x60
   296a4:	mov	r2, r4
   296a6:	strd	r8, fp, [sp, #8]
   296aa:	strd	r6, r5, [sp]
   296ae:	str	r3, [sp, #16]
   296b0:	ldr	r3, [sp, #88]	; 0x58
   296b2:	str	r3, [sp, #20]
   296b4:	ldr	r3, [sp, #244]	; 0xf4
   296b6:	strd	r0, r1, [sp, #24]
   296ba:	movs	r0, #1
   296bc:	ldr	r1, [pc, #404]	; (29854 <btrfs_print_leaf@@Base+0x13ac>)
   296be:	add	r1, pc
   296c0:	blx	8c6c <__printf_chk@plt+0x4>
   296c4:	ldr	r3, [sp, #84]	; 0x54
   296c6:	cmp	r3, #40	; 0x28
   296c8:	bls.w	28710 <btrfs_print_leaf@@Base+0x268>
   296cc:	ldr	r1, [pc, #392]	; (29858 <btrfs_print_leaf@@Base+0x13b0>)
   296ce:	sub.w	r2, r3, #40	; 0x28
   296d2:	movs	r0, #1
   296d4:	movs	r4, #5
   296d6:	add	r1, pc
   296d8:	blx	8c6c <__printf_chk@plt+0x4>
   296dc:	ldr	r2, [sp, #84]	; 0x54
   296de:	lsls	r3, r4, #3
   296e0:	cmp.w	r2, r4, lsl #3
   296e4:	bls.w	28710 <btrfs_print_leaf@@Base+0x268>
   296e8:	mov	r2, r4
   296ea:	mov	r1, r7
   296ec:	mov	r0, r9
   296ee:	str	r3, [sp, #96]	; 0x60
   296f0:	bl	277d4 <btrfs_destroy_delayed_refs@@Base+0x68>
   296f4:	mov	r2, r4
   296f6:	ldr	r3, [sp, #96]	; 0x60
   296f8:	adds	r4, #1
   296fa:	strd	r0, r1, [sp]
   296fe:	movs	r0, #1
   29700:	vmov	r1, s21
   29704:	blx	8c6c <__printf_chk@plt+0x4>
   29708:	b.n	296dc <btrfs_print_leaf@@Base+0x1234>
   2970a:	ldr	r1, [pc, #336]	; (2985c <btrfs_print_leaf@@Base+0x13b4>)
   2970c:	mov	r2, r4
   2970e:	mov	r3, r5
   29710:	add	r1, pc
   29712:	b.w	28ed2 <btrfs_print_leaf@@Base+0xa2a>
   29716:	ldr	r1, [pc, #328]	; (29860 <btrfs_print_leaf@@Base+0x13b8>)
   29718:	movs	r0, #1
   2971a:	add	r1, pc
   2971c:	blx	8c6c <__printf_chk@plt+0x4>
   29720:	ldr	r1, [sp, #100]	; 0x64
   29722:	movs	r3, #248	; 0xf8
   29724:	mov	r2, r4
   29726:	str	r3, [sp, #0]
   29728:	mov	r3, r5
   2972a:	ldr	r0, [r1, #0]
   2972c:	bl	27e3c <print_objectid@@Base>
   29730:	ldr	r1, [pc, #304]	; (29864 <btrfs_print_leaf@@Base+0x13bc>)
   29732:	ldrd	r2, r3, [sp, #88]	; 0x58
   29736:	movs	r0, #1
   29738:	add	r1, pc
   2973a:	blx	8c6c <__printf_chk@plt+0x4>
   2973e:	mov.w	r3, #4294967295	; 0xffffffff
   29742:	cmp	r5, r3
   29744:	mvn.w	r2, #3
   29748:	it	eq
   2974a:	cmpeq	r4, r2
   2974c:	bne.n	29796 <btrfs_print_leaf@@Base+0x12ee>
   2974e:	add.w	r4, fp, r7
   29752:	ldr	r1, [pc, #276]	; (29868 <btrfs_print_leaf@@Base+0x13c0>)
   29754:	ldr.w	r2, [fp, r7]
   29758:	movs	r0, #1
   2975a:	ldr	r3, [r4, #4]
   2975c:	add	r1, pc
   2975e:	blx	8c6c <__printf_chk@plt+0x4>
   29762:	ldr	r0, [pc, #264]	; (2986c <btrfs_print_leaf@@Base+0x13c4>)
   29764:	add	r0, pc
   29766:	blx	8a78 <puts@plt+0x4>
   2976a:	add.w	r0, r4, #8
   2976e:	bl	279a4 <btrfs_destroy_delayed_refs@@Base+0x238>
   29772:	ldr	r0, [pc, #252]	; (29870 <btrfs_print_leaf@@Base+0x13c8>)
   29774:	add	r0, pc
   29776:	blx	8a78 <puts@plt+0x4>
   2977a:	add.w	r0, r4, #144	; 0x90
   2977e:	bl	279a4 <btrfs_destroy_delayed_refs@@Base+0x238>
   29782:	ldr	r0, [pc, #240]	; (29874 <btrfs_print_leaf@@Base+0x13cc>)
   29784:	add	r0, pc
   29786:	blx	8a78 <puts@plt+0x4>
   2978a:	add.w	r0, r4, #280	; 0x118
   2978e:	bl	279a4 <btrfs_destroy_delayed_refs@@Base+0x238>
   29792:	b.w	28710 <btrfs_print_leaf@@Base+0x268>
   29796:	ldr	r1, [pc, #224]	; (29878 <btrfs_print_leaf@@Base+0x13d0>)
   29798:	mov	r2, r4
   2979a:	mov	r3, r5
   2979c:	add	r1, pc
   2979e:	b.w	28ed2 <btrfs_print_leaf@@Base+0xa2a>
   297a2:	add	r2, sp, #940	; 0x3ac
   297a4:	addw	r0, sp, #579	; 0x243
   297a8:	str	r2, [sp, #84]	; 0x54
   297aa:	mov	r1, r2
   297ac:	blx	8760 <uuid_unparse@plt>
   297b0:	ldr	r1, [pc, #200]	; (2987c <btrfs_print_leaf@@Base+0x13d4>)
   297b2:	ldr	r2, [sp, #84]	; 0x54
   297b4:	movs	r0, #1
   297b6:	add	r1, pc
   297b8:	blx	8c6c <__printf_chk@plt+0x4>
   297bc:	b.n	28fe4 <btrfs_print_leaf@@Base+0xb3c>
   297be:	add	r2, sp, #940	; 0x3ac
   297c0:	addw	r0, sp, #563	; 0x233
   297c4:	str	r2, [sp, #84]	; 0x54
   297c6:	mov	r1, r2
   297c8:	blx	8760 <uuid_unparse@plt>
   297cc:	ldr	r1, [pc, #176]	; (29880 <btrfs_print_leaf@@Base+0x13d8>)
   297ce:	ldr	r2, [sp, #84]	; 0x54
   297d0:	movs	r0, #1
   297d2:	add	r1, pc
   297d4:	blx	8c6c <__printf_chk@plt+0x4>
   297d8:	b.w	28fce <btrfs_print_leaf@@Base+0xb26>
   297dc:	addw	sp, sp, #1204	; 0x4b4
   297e0:	vpop	{d8-d10}
   297e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   297e8:	str	r7, [sp, #556]	; 0x22c
   297ea:	movs	r1, r0
   297ec:	ldr	r1, [sp, #840]	; 0x348
   297ee:	movs	r1, r0
   297f0:	ldr	r1, [sp, #772]	; 0x304
   297f2:	movs	r1, r0
   297f4:	ldr	r1, [sp, #808]	; 0x328
   297f6:	movs	r1, r0
   297f8:	ldr	r6, [sp, #764]	; 0x2fc
   297fa:	movs	r1, r0
   297fc:	ldr	r6, [sp, #804]	; 0x324
   297fe:	movs	r1, r0
   29800:	ldr	r6, [sp, #888]	; 0x378
   29802:	movs	r1, r0
   29804:	ldr	r6, [sp, #880]	; 0x370
   29806:	movs	r1, r0
   29808:	ldr	r6, [sp, #1000]	; 0x3e8
   2980a:	movs	r1, r0
   2980c:	ldr	r6, [sp, #880]	; 0x370
   2980e:	movs	r1, r0
   29810:	ldr	r6, [sp, #1016]	; 0x3f8
   29812:	movs	r1, r0
   29814:	ldr	r7, [sp, #120]	; 0x78
   29816:	movs	r1, r0
   29818:	ldr	r7, [sp, #168]	; 0xa8
   2981a:	movs	r1, r0
   2981c:	ldr	r7, [sp, #684]	; 0x2ac
   2981e:	movs	r1, r0
   29820:	add	r5, pc, #568	; (adr r5, 29a5c <btrfs_print_tree@@Base+0x1d8>)
   29822:	movs	r1, r0
   29824:	ldr	r7, [sp, #752]	; 0x2f0
   29826:	movs	r1, r0
   29828:	ldr	r7, [sp, #664]	; 0x298
   2982a:	movs	r1, r0
   2982c:	ldr	r7, [sp, #632]	; 0x278
   2982e:	movs	r1, r0
   29830:	ldr	r7, [sp, #424]	; 0x1a8
   29832:	movs	r1, r0
   29834:	ldr	r7, [sp, #524]	; 0x20c
   29836:	movs	r1, r0
   29838:	ldr	r7, [sp, #704]	; 0x2c0
   2983a:	movs	r1, r0
   2983c:	ldr	r7, [sp, #992]	; 0x3e0
   2983e:	movs	r1, r0
   29840:	strb	r6, [r0, #7]
   29842:	movs	r1, r0
   29844:	ldr	r7, [sp, #832]	; 0x340
   29846:	movs	r1, r0
   29848:	ldr	r7, [sp, #872]	; 0x368
   2984a:	movs	r1, r0
   2984c:	str	r4, [sp, #444]	; 0x1bc
   2984e:	movs	r1, r0
   29850:	ldr	r7, [sp, #808]	; 0x328
   29852:	movs	r1, r0
   29854:	ldr	r7, [sp, #468]	; 0x1d4
   29856:	movs	r1, r0
   29858:	ldr	r7, [sp, #720]	; 0x2d0
   2985a:	movs	r1, r0
   2985c:	ldr	r7, [sp, #772]	; 0x304
   2985e:	movs	r1, r0
   29860:	ldr	r7, [sp, #896]	; 0x380
   29862:	movs	r1, r0
   29864:	str	r3, [sp, #524]	; 0x20c
   29866:	movs	r1, r0
   29868:	ldr	r7, [sp, #740]	; 0x2e4
   2986a:	movs	r1, r0
   2986c:	ldr	r7, [sp, #824]	; 0x338
   2986e:	movs	r1, r0
   29870:	ldr	r7, [sp, #788]	; 0x314
   29872:	movs	r1, r0
   29874:	ldr	r7, [sp, #768]	; 0x300
   29876:	movs	r1, r0
   29878:	ldr	r7, [sp, #708]	; 0x2c4
   2987a:	movs	r1, r0
   2987c:	ldr	r7, [sp, #764]	; 0x2fc
   2987e:	movs	r1, r0
   29880:	ldr	r7, [sp, #732]	; 0x2dc
   29882:	movs	r1, r0

00029884 <btrfs_print_tree@@Base>:
   29884:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29888:	cmp	r2, #1
   2988a:	vpush	{d8}
   2988e:	mov	r4, r0
   29890:	ldr	r3, [pc, #688]	; (29b44 <btrfs_print_tree@@Base+0x2c0>)
   29892:	it	cs
   29894:	movcs	r2, #1
   29896:	mov	r9, r2
   29898:	add	r3, pc
   2989a:	sub	sp, #148	; 0x94
   2989c:	str	r1, [sp, #44]	; 0x2c
   2989e:	ldr	r1, [pc, #680]	; (29b48 <btrfs_print_tree@@Base+0x2c4>)
   298a0:	str	r3, [sp, #32]
   298a2:	ldr	r3, [pc, #680]	; (29b4c <btrfs_print_tree@@Base+0x2c8>)
   298a4:	add	r1, pc
   298a6:	ldr	r3, [r1, r3]
   298a8:	ldr	r3, [r3, #0]
   298aa:	str	r3, [sp, #140]	; 0x8c
   298ac:	mov.w	r3, #0
   298b0:	ldrb.w	r3, [r0, #196]	; 0xc4
   298b4:	cbnz	r3, 298d0 <btrfs_print_tree@@Base+0x4c>
   298b6:	bl	284a8 <btrfs_print_leaf@@Base>
   298ba:	ldr	r2, [pc, #660]	; (29b50 <btrfs_print_tree@@Base+0x2cc>)
   298bc:	ldr	r3, [pc, #652]	; (29b4c <btrfs_print_tree@@Base+0x2c8>)
   298be:	add	r2, pc
   298c0:	ldr	r3, [r2, r3]
   298c2:	ldr	r2, [r3, #0]
   298c4:	ldr	r3, [sp, #140]	; 0x8c
   298c6:	eors	r2, r3
   298c8:	beq.w	29b3a <btrfs_print_tree@@Base+0x2b6>
   298cc:	blx	88e4 <__stack_chk_fail@plt>
   298d0:	ldr	r3, [r0, #92]	; 0x5c
   298d2:	str	r3, [sp, #36]	; 0x24
   298d4:	ldr.w	r6, [r0, #192]	; 0xc0
   298d8:	bl	27c00 <btrfs_destroy_delayed_refs@@Base+0x494>
   298dc:	cmp	r0, r6
   298de:	mov	r2, r0
   298e0:	bcs.n	298ec <btrfs_print_tree@@Base+0x68>
   298e2:	ldr	r0, [pc, #624]	; (29b54 <btrfs_print_tree@@Base+0x2d0>)
   298e4:	mov	r1, r6
   298e6:	add	r0, pc
   298e8:	bl	1a884 <__btrfs_warning@@Base>
   298ec:	mov	r0, r4
   298ee:	movs	r5, #0
   298f0:	bl	27c00 <btrfs_destroy_delayed_refs@@Base+0x494>
   298f4:	ldr.w	r2, [r4, #176]	; 0xb0
   298f8:	ldr.w	r3, [r4, #180]	; 0xb4
   298fc:	add.w	r7, r4, #197	; 0xc5
   29900:	ldr	r1, [pc, #596]	; (29b58 <btrfs_print_tree@@Base+0x2d4>)
   29902:	add.w	fp, sp, #52	; 0x34
   29906:	mov	r8, r7
   29908:	strd	r2, r3, [sp, #16]
   2990c:	add	r1, pc
   2990e:	subs	r0, r0, r6
   29910:	strd	r6, r0, [sp, #4]
   29914:	ldrb.w	r3, [r4, #196]	; 0xc4
   29918:	movs	r0, #1
   2991a:	str	r3, [sp, #0]
   2991c:	ldrd	r2, r3, [r4, #40]	; 0x28
   29920:	blx	8c6c <__printf_chk@plt+0x4>
   29924:	ldr	r2, [sp, #32]
   29926:	ldr	r3, [pc, #564]	; (29b5c <btrfs_print_tree@@Base+0x2d8>)
   29928:	ldr	r3, [r2, r3]
   2992a:	str	r5, [sp, #0]
   2992c:	str	r3, [sp, #28]
   2992e:	ldr	r1, [sp, #28]
   29930:	ldr.w	r2, [r4, #184]	; 0xb8
   29934:	ldr.w	r3, [r4, #188]	; 0xbc
   29938:	ldr	r0, [r1, #0]
   2993a:	bl	27e3c <print_objectid@@Base>
   2993e:	movs	r0, #10
   29940:	blx	8c08 <putchar@plt+0x4>
   29944:	mov	r0, r4
   29946:	bl	27ab0 <btrfs_destroy_delayed_refs@@Base+0x344>
   2994a:	ldr	r3, [sp, #28]
   2994c:	ldr	r0, [r3, #0]
   2994e:	blx	87a0 <fflush@plt>
   29952:	mov	r0, r4
   29954:	bl	27c00 <btrfs_destroy_delayed_refs@@Base+0x494>
   29958:	ldr	r3, [pc, #516]	; (29b60 <btrfs_print_tree@@Base+0x2dc>)
   2995a:	add	r3, pc
   2995c:	vmov	s17, r3
   29960:	str	r0, [sp, #40]	; 0x28
   29962:	cmp	r5, r6
   29964:	beq.n	2996c <btrfs_print_tree@@Base+0xe8>
   29966:	ldr	r3, [sp, #40]	; 0x28
   29968:	cmp	r5, r3
   2996a:	bne.n	29a04 <btrfs_print_tree@@Base+0x180>
   2996c:	ldr	r3, [sp, #44]	; 0x2c
   2996e:	cmp	r3, #0
   29970:	beq.n	298ba <btrfs_print_tree@@Base+0x36>
   29972:	ldr	r3, [sp, #36]	; 0x24
   29974:	cmp	r3, #0
   29976:	beq.n	298ba <btrfs_print_tree@@Base+0x36>
   29978:	ldr.w	r8, [r4, #92]	; 0x5c
   2997c:	ldrb.w	r6, [r4, #196]	; 0xc4
   29980:	cmp.w	r9, #0
   29984:	bne.w	29a8e <btrfs_print_tree@@Base+0x20a>
   29988:	ldr.w	sl, [pc, #472]	; 29b64 <btrfs_print_tree@@Base+0x2e0>
   2998c:	ldr.w	fp, [pc, #472]	; 29b68 <btrfs_print_tree@@Base+0x2e4>
   29990:	ldr.w	r3, [r4, #192]	; 0xc0
   29994:	add	sl, pc
   29996:	add	fp, pc
   29998:	str	r3, [sp, #28]
   2999a:	ldr	r3, [sp, #28]
   2999c:	cmp	r3, r9
   2999e:	ble.n	298ba <btrfs_print_tree@@Base+0x36>
   299a0:	mov	r0, r7
   299a2:	mov	r1, r7
   299a4:	ldr.w	r5, [r0, #25]!
   299a8:	ldr.w	r2, [r1, #17]!
   299ac:	ldr	r0, [r0, #4]
   299ae:	ldr	r3, [r1, #4]
   299b0:	str	r1, [sp, #36]	; 0x24
   299b2:	strd	r5, r0, [sp]
   299b6:	mov	r0, r8
   299b8:	bl	20b0c <read_tree_block@@Base>
   299bc:	ldr	r1, [sp, #36]	; 0x24
   299be:	mov	r5, r0
   299c0:	cmp	r0, #0
   299c2:	beq.n	29a58 <btrfs_print_tree@@Base+0x1d4>
   299c4:	cmn.w	r0, #4096	; 0x1000
   299c8:	bhi.n	29a58 <btrfs_print_tree@@Base+0x1d4>
   299ca:	ldr	r3, [r0, #84]	; 0x54
   299cc:	lsls	r3, r3, #29
   299ce:	bpl.n	29a58 <btrfs_print_tree@@Base+0x1d4>
   299d0:	ldrb.w	r3, [r0, #196]	; 0xc4
   299d4:	subs	r2, r6, #1
   299d6:	cmp	r3, r2
   299d8:	beq.n	29a84 <btrfs_print_tree@@Base+0x200>
   299da:	strd	r3, r2, [sp, #16]
   299de:	ldr.w	r2, [r0, #144]	; 0x90
   299e2:	ldr.w	r3, [r0, #148]	; 0x94
   299e6:	mov	r0, fp
   299e8:	strd	r9, r6, [sp]
   299ec:	strd	r2, r3, [sp, #8]
   299f0:	ldr.w	r2, [r4, #144]	; 0x90
   299f4:	ldr.w	r3, [r4, #148]	; 0x94
   299f8:	bl	1a884 <__btrfs_warning@@Base>
   299fc:	mov	r0, r5
   299fe:	bl	1a0a4 <free_extent_buffer@@Base>
   29a02:	b.n	29a7c <btrfs_print_tree@@Base+0x1f8>
   29a04:	mov	r3, r8
   29a06:	add.w	r2, r5, r5, lsl #5
   29a0a:	ldr.w	sl, [r3, #17]!
   29a0e:	adds	r2, #101	; 0x65
   29a10:	mov	r1, fp
   29a12:	mov	r0, r4
   29a14:	adds	r5, #1
   29a16:	ldr	r3, [r3, #4]
   29a18:	vmov	s16, r3
   29a1c:	movs	r3, #17
   29a1e:	bl	1a79e <read_extent_buffer@@Base>
   29a22:	movs	r0, #9
   29a24:	blx	8c08 <putchar@plt+0x4>
   29a28:	mov	r0, fp
   29a2a:	bl	280ac <btrfs_print_key@@Base>
   29a2e:	mov	r3, r8
   29a30:	ldr.w	r2, [r3, #25]!
   29a34:	movs	r0, #1
   29a36:	vmov	r1, s17
   29a3a:	add.w	r8, r8, #33	; 0x21
   29a3e:	ldr	r3, [r3, #4]
   29a40:	strd	r2, r3, [sp]
   29a44:	mov	r2, sl
   29a46:	vmov	r3, s16
   29a4a:	blx	8c6c <__printf_chk@plt+0x4>
   29a4e:	ldr	r3, [sp, #28]
   29a50:	ldr	r0, [r3, #0]
   29a52:	blx	87a0 <fflush@plt>
   29a56:	b.n	29962 <btrfs_print_tree@@Base+0xde>
   29a58:	ldr	r2, [sp, #32]
   29a5a:	ldr	r3, [pc, #272]	; (29b6c <btrfs_print_tree@@Base+0x2e8>)
   29a5c:	ldr.w	r0, [r4, #184]	; 0xb8
   29a60:	ldr	r3, [r2, r3]
   29a62:	ldr.w	r2, [r4, #188]	; 0xbc
   29a66:	strd	r0, r2, [sp, #8]
   29a6a:	ldr	r0, [r1, #0]
   29a6c:	ldr	r2, [r1, #4]
   29a6e:	movs	r1, #1
   29a70:	strd	r0, r2, [sp]
   29a74:	mov	r2, sl
   29a76:	ldr	r0, [r3, #0]
   29a78:	blx	8ca0 <__fprintf_chk@plt+0x4>
   29a7c:	add.w	r9, r9, #1
   29a80:	adds	r7, #33	; 0x21
   29a82:	b.n	2999a <btrfs_print_tree@@Base+0x116>
   29a84:	movs	r2, #0
   29a86:	movs	r1, #1
   29a88:	bl	29884 <btrfs_print_tree@@Base>
   29a8c:	b.n	299fc <btrfs_print_tree@@Base+0x178>
   29a8e:	cmp	r6, #0
   29a90:	beq.w	298ba <btrfs_print_tree@@Base+0x36>
   29a94:	add	r5, sp, #72	; 0x48
   29a96:	subs	r7, r6, #1
   29a98:	add.w	sl, r5, r6, lsl #2
   29a9c:	mov.w	fp, #0
   29aa0:	mov	r0, r5
   29aa2:	bl	1b2cc <btrfs_init_path@@Base>
   29aa6:	ldr	r3, [r4, #80]	; 0x50
   29aa8:	mov	r9, sl
   29aaa:	adds	r3, #1
   29aac:	str	r3, [r4, #80]	; 0x50
   29aae:	add	r3, sp, #144	; 0x90
   29ab0:	add.w	r3, r3, r6, lsl #2
   29ab4:	str.w	r4, [r3, #-72]
   29ab8:	mov	r3, r5
   29aba:	movs	r4, #0
   29abc:	strb.w	r7, [sp, #137]	; 0x89
   29ac0:	str.w	fp, [r3, #32]
   29ac4:	ldr.w	r0, [r3], #4
   29ac8:	cbz	r0, 29ad2 <btrfs_print_tree@@Base+0x24e>
   29aca:	str	r3, [sp, #28]
   29acc:	bl	1a0a4 <free_extent_buffer@@Base>
   29ad0:	ldr	r3, [sp, #28]
   29ad2:	adds	r4, #1
   29ad4:	cmp	r4, r6
   29ad6:	blt.n	29ac0 <btrfs_print_tree@@Base+0x23c>
   29ad8:	mov	r4, sl
   29ada:	mov	r3, r6
   29adc:	ldrb.w	r2, [sp, #137]	; 0x89
   29ae0:	cmp	r3, r2
   29ae2:	bgt.n	29b0a <btrfs_print_tree@@Base+0x286>
   29ae4:	ldr.w	r0, [r9, #-4]
   29ae8:	movs	r2, #1
   29aea:	movs	r1, #0
   29aec:	bl	29884 <btrfs_print_tree@@Base>
   29af0:	mov	r1, r5
   29af2:	mov	r0, r8
   29af4:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   29af8:	cmp	r0, #0
   29afa:	blt.n	29b20 <btrfs_print_tree@@Base+0x29c>
   29afc:	beq.n	29ae4 <btrfs_print_tree@@Base+0x260>
   29afe:	subs	r7, #1
   29b00:	sub.w	r9, r9, #4
   29b04:	adds	r3, r7, #1
   29b06:	bne.n	29ab8 <btrfs_print_tree@@Base+0x234>
   29b08:	b.n	29b20 <btrfs_print_tree@@Base+0x29c>
   29b0a:	ldr	r1, [r4, #0]
   29b0c:	movs	r2, #0
   29b0e:	str.w	fp, [r4, #32]
   29b12:	mov	r0, r8
   29b14:	str	r3, [sp, #28]
   29b16:	bl	1c092 <read_node_slot@@Base>
   29b1a:	subs	r4, #4
   29b1c:	ldr	r3, [sp, #28]
   29b1e:	cbnz	r0, 29b28 <btrfs_print_tree@@Base+0x2a4>
   29b20:	mov	r0, r5
   29b22:	bl	1b2dc <btrfs_release_path@@Base>
   29b26:	b.n	298ba <btrfs_print_tree@@Base+0x36>
   29b28:	cmn.w	r0, #4096	; 0x1000
   29b2c:	bhi.n	29b20 <btrfs_print_tree@@Base+0x29c>
   29b2e:	ldr	r2, [r0, #84]	; 0x54
   29b30:	lsls	r2, r2, #29
   29b32:	bpl.n	29b20 <btrfs_print_tree@@Base+0x29c>
   29b34:	subs	r3, #1
   29b36:	str	r0, [r4, #0]
   29b38:	b.n	29adc <btrfs_print_tree@@Base+0x258>
   29b3a:	add	sp, #148	; 0x94
   29b3c:	vpop	{d8}
   29b40:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29b44:	eors.w	r0, r8, #8585216	; 0x830000
   29b48:	eor.w	r0, ip, #8585216	; 0x830000
   29b4c:	lsls	r4, r7, #9
   29b4e:	movs	r0, r0
   29b50:	orns	r0, r2, #8585216	; 0x830000
   29b54:	ldr	r6, [sp, #724]	; 0x2d4
   29b56:	movs	r1, r0
   29b58:	ldr	r6, [sp, #804]	; 0x324
   29b5a:	movs	r1, r0
   29b5c:	lsls	r0, r6, #10
   29b5e:	movs	r0, r0
   29b60:	ldr	r6, [sp, #728]	; 0x2d8
   29b62:	movs	r1, r0
   29b64:	ldr	r6, [sp, #584]	; 0x248
   29b66:	movs	r1, r0
   29b68:	ldr	r6, [sp, #712]	; 0x2c8
   29b6a:	movs	r1, r0
   29b6c:	lsls	r4, r1, #10
   29b6e:	movs	r0, r0
   29b70:	ldr	r3, [r0, #0]
   29b72:	cbz	r3, 29b7a <btrfs_print_tree@@Base+0x2f6>
   29b74:	movs	r3, #0
   29b76:	strd	r3, r3, [r0]
   29b7a:	bx	lr
   29b7c:	push	{r4, r5, r6, lr}
   29b7e:	lsrs	r4, r2, #5
   29b80:	and.w	r6, r2, #31
   29b84:	bic.w	r2, r2, #31
   29b88:	ldr.w	r5, [r0, r4, lsl #2]
   29b8c:	mov.w	r4, #4294967295	; 0xffffffff
   29b90:	lsls	r4, r6
   29b92:	eors	r5, r3
   29b94:	ands	r4, r5
   29b96:	cbz	r4, 29bcc <btrfs_print_tree@@Base+0x348>
   29b98:	uxth	r3, r4
   29b9a:	cbnz	r3, 29bdc <btrfs_print_tree@@Base+0x358>
   29b9c:	lsrs	r4, r4, #16
   29b9e:	movs	r3, #16
   29ba0:	tst.w	r4, #255	; 0xff
   29ba4:	itt	eq
   29ba6:	lsreq	r4, r4, #8
   29ba8:	addeq	r3, #8
   29baa:	lsls	r6, r4, #28
   29bac:	itt	eq
   29bae:	lsreq	r4, r4, #4
   29bb0:	addeq	r3, #4
   29bb2:	lsls	r5, r4, #30
   29bb4:	itt	eq
   29bb6:	lsreq	r4, r4, #2
   29bb8:	addeq	r3, #2
   29bba:	lsls	r0, r4, #31
   29bbc:	it	pl
   29bbe:	addpl	r3, #1
   29bc0:	add	r3, r2
   29bc2:	cmp	r1, r3
   29bc4:	it	cs
   29bc6:	movcs	r1, r3
   29bc8:	mov	r0, r1
   29bca:	pop	{r4, r5, r6, pc}
   29bcc:	adds	r2, #32
   29bce:	cmp	r2, r1
   29bd0:	bcs.n	29bc8 <btrfs_print_tree@@Base+0x344>
   29bd2:	lsrs	r4, r2, #5
   29bd4:	ldr.w	r4, [r0, r4, lsl #2]
   29bd8:	eors	r4, r3
   29bda:	b.n	29b96 <btrfs_print_tree@@Base+0x312>
   29bdc:	movs	r3, #0
   29bde:	b.n	29ba0 <btrfs_print_tree@@Base+0x31c>
   29be0:	ldr.w	ip, [pc, #104]	; 29c4c <btrfs_print_tree@@Base+0x3c8>
   29be4:	push	{r4, r5, lr}
   29be6:	add	ip, pc
   29be8:	ldr	r5, [pc, #100]	; (29c50 <btrfs_print_tree@@Base+0x3cc>)
   29bea:	sub	sp, #92	; 0x5c
   29bec:	ldr	r4, [pc, #100]	; (29c54 <btrfs_print_tree@@Base+0x3d0>)
   29bee:	ldr.w	r5, [ip, r5]
   29bf2:	add	r4, pc
   29bf4:	ldr	r5, [r5, #0]
   29bf6:	str	r5, [sp, #84]	; 0x54
   29bf8:	mov.w	r5, #0
   29bfc:	cbz	r3, 29c32 <btrfs_print_tree@@Base+0x3ae>
   29bfe:	ldr	r5, [pc, #88]	; (29c58 <btrfs_print_tree@@Base+0x3d4>)
   29c00:	ldr	r4, [r4, r5]
   29c02:	strd	r2, r1, [sp]
   29c06:	movs	r1, #1
   29c08:	strd	r0, r3, [sp, #8]
   29c0c:	ldr	r2, [pc, #76]	; (29c5c <btrfs_print_tree@@Base+0x3d8>)
   29c0e:	ldr	r3, [pc, #80]	; (29c60 <btrfs_print_tree@@Base+0x3dc>)
   29c10:	ldr	r0, [r4, #0]
   29c12:	add	r4, sp, #20
   29c14:	add	r3, pc
   29c16:	add	r2, pc
   29c18:	blx	8ca0 <__fprintf_chk@plt+0x4>
   29c1c:	movs	r1, #16
   29c1e:	mov	r0, r4
   29c20:	blx	8ae0 <backtrace@plt>
   29c24:	movs	r2, #2
   29c26:	mov	r1, r0
   29c28:	mov	r0, r4
   29c2a:	blx	8e50 <backtrace_symbols_fd@plt>
   29c2e:	blx	8e08 <abort@plt>
   29c32:	ldr	r2, [pc, #48]	; (29c64 <btrfs_print_tree@@Base+0x3e0>)
   29c34:	ldr	r3, [pc, #24]	; (29c50 <btrfs_print_tree@@Base+0x3cc>)
   29c36:	add	r2, pc
   29c38:	ldr	r3, [r2, r3]
   29c3a:	ldr	r2, [r3, #0]
   29c3c:	ldr	r3, [sp, #84]	; 0x54
   29c3e:	eors	r2, r3
   29c40:	beq.n	29c46 <btrfs_print_tree@@Base+0x3c2>
   29c42:	blx	88e4 <__stack_chk_fail@plt>
   29c46:	add	sp, #92	; 0x5c
   29c48:	pop	{r4, r5, pc}
   29c4a:	nop
   29c4c:	adc.w	r0, sl, #3
   29c50:	lsls	r4, r7, #9
   29c52:	movs	r0, r0
   29c54:			; <UNDEFINED> instruction: 0xf13e0003
   29c58:	lsls	r4, r1, #10
   29c5a:	movs	r0, r0
   29c5c:	adds	r3, #145	; 0x91
   29c5e:	movs	r1, r0
   29c60:	ldr	r7, [sp, #0]
   29c62:	movs	r1, r0
   29c64:			; <UNDEFINED> instruction: 0xf0fa0003
   29c68:	push	{r3, r4, r5, lr}
   29c6a:	mov	r4, r0
   29c6c:	ldrd	r5, r3, [r0, #32]
   29c70:	movs	r2, #83	; 0x53
   29c72:	ldr	r1, [pc, #56]	; (29cac <btrfs_print_tree@@Base+0x428>)
   29c74:	cmp	r5, r3
   29c76:	ldr	r0, [pc, #56]	; (29cb0 <btrfs_print_tree@@Base+0x42c>)
   29c78:	add	r1, pc
   29c7a:	ite	lt
   29c7c:	movlt	r3, #0
   29c7e:	movge	r3, #1
   29c80:	add	r0, pc
   29c82:	bl	29be0 <btrfs_print_tree@@Base+0x35c>
   29c86:	adds	r3, r5, #1
   29c88:	str	r3, [r4, #32]
   29c8a:	ldr	r3, [r4, #12]
   29c8c:	ldr	r2, [r4, #8]
   29c8e:	ldr.w	r1, [r3, #464]	; 0x1d0
   29c92:	ldr.w	r1, [r1, #388]	; 0x184
   29c96:	mla	r5, r1, r5, r2
   29c9a:	strd	r5, r5, [r4]
   29c9e:	ldr.w	r3, [r3, #464]	; 0x1d0
   29ca2:	ldr.w	r3, [r3, #388]	; 0x184
   29ca6:	str	r3, [r4, #16]
   29ca8:	pop	{r3, r4, r5, pc}
   29caa:	nop
   29cac:	add	r3, pc, #880	; (adr r3, 2a020 <btrfs_dump_free_space@@Base+0x72>)
   29cae:	movs	r1, r0
   29cb0:	ldr	r6, [sp, #668]	; 0x29c
   29cb2:	movs	r1, r0
   29cb4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   29cb6:	mov	r4, r0
   29cb8:	ldr	r2, [pc, #144]	; (29d4c <btrfs_print_tree@@Base+0x4c8>)
   29cba:	ldr	r3, [pc, #148]	; (29d50 <btrfs_print_tree@@Base+0x4cc>)
   29cbc:	add	r2, pc
   29cbe:	ldr	r6, [pc, #148]	; (29d54 <btrfs_print_tree@@Base+0x4d0>)
   29cc0:	ldr	r3, [r2, r3]
   29cc2:	add	r6, pc
   29cc4:	ldr	r3, [r3, #0]
   29cc6:	str	r3, [sp, #4]
   29cc8:	mov.w	r3, #0
   29ccc:	mov.w	r3, #4294967295	; 0xffffffff
   29cd0:	str	r3, [sp, #0]
   29cd2:	ldrb.w	r3, [r0, #40]	; 0x28
   29cd6:	ands.w	r5, r3, #1
   29cda:	bne.n	29ce4 <btrfs_print_tree@@Base+0x460>
   29cdc:	bl	29c68 <btrfs_print_tree@@Base+0x3e4>
   29ce0:	movs	r0, #0
   29ce2:	b.n	29d2e <btrfs_print_tree@@Base+0x4aa>
   29ce4:	cbnz	r1, 29d42 <btrfs_print_tree@@Base+0x4be>
   29ce6:	ldr	r5, [r0, #36]	; 0x24
   29ce8:	lsls	r5, r5, #2
   29cea:	ldr	r3, [r4, #8]
   29cec:	mov	r0, r4
   29cee:	ldr.w	r7, [r3, r1, lsl #2]
   29cf2:	bl	29c68 <btrfs_print_tree@@Base+0x3e4>
   29cf6:	ldr	r3, [r4, #12]
   29cf8:	mov.w	r0, #4294967295	; 0xffffffff
   29cfc:	ldr	r1, [r4, #4]
   29cfe:	ldr.w	r3, [r3, #464]	; 0x1d0
   29d02:	add	r1, r5
   29d04:	ldr.w	r2, [r3, #388]	; 0x184
   29d08:	subs	r2, r2, r5
   29d0a:	bl	1a87e <crc32c_le@@Base>
   29d0e:	mvns	r0, r0
   29d10:	cmp	r0, r7
   29d12:	str	r0, [sp, #0]
   29d14:	beq.n	29ce0 <btrfs_print_tree@@Base+0x45c>
   29d16:	ldr	r3, [pc, #64]	; (29d58 <btrfs_print_tree@@Base+0x4d4>)
   29d18:	ldr	r0, [pc, #64]	; (29d5c <btrfs_print_tree@@Base+0x4d8>)
   29d1a:	ldr	r3, [r6, r3]
   29d1c:	add	r0, pc
   29d1e:	ldr	r1, [r3, #0]
   29d20:	blx	8de4 <fputs@plt+0x4>
   29d24:	mov	r0, r4
   29d26:	bl	29b70 <btrfs_print_tree@@Base+0x2ec>
   29d2a:	mvn.w	r0, #4
   29d2e:	ldr	r2, [pc, #48]	; (29d60 <btrfs_print_tree@@Base+0x4dc>)
   29d30:	ldr	r3, [pc, #28]	; (29d50 <btrfs_print_tree@@Base+0x4cc>)
   29d32:	add	r2, pc
   29d34:	ldr	r3, [r2, r3]
   29d36:	ldr	r2, [r3, #0]
   29d38:	ldr	r3, [sp, #4]
   29d3a:	eors	r2, r3
   29d3c:	beq.n	29d46 <btrfs_print_tree@@Base+0x4c2>
   29d3e:	blx	88e4 <__stack_chk_fail@plt>
   29d42:	movs	r5, #0
   29d44:	b.n	29cea <btrfs_print_tree@@Base+0x466>
   29d46:	add	sp, #12
   29d48:	pop	{r4, r5, r6, r7, pc}
   29d4a:	nop
   29d4c:	orns	r0, r4, #3
   29d50:	lsls	r4, r7, #9
   29d52:	movs	r0, r0
   29d54:	orn	r0, lr, #3
   29d58:	lsls	r4, r1, #10
   29d5a:	movs	r0, r0
   29d5c:	ldr	r6, [sp, #184]	; 0xb8
   29d5e:	movs	r1, r0
   29d60:	vext.8	d16, d14, d3, #0
   29d64:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   29d68:	mov	sl, r0
   29d6a:	ldr	r4, [r0, #0]
   29d6c:	mov	r8, r2
   29d6e:	mov	r9, r3
   29d70:	movs	r5, #0
   29d72:	cbz	r4, 29db0 <btrfs_print_tree@@Base+0x52c>
   29d74:	ldrd	r2, r3, [r4, #16]
   29d78:	cmp	r9, r3
   29d7a:	it	eq
   29d7c:	cmpeq	r8, r2
   29d7e:	bcs.n	29d88 <btrfs_print_tree@@Base+0x504>
   29d80:	ldr	r3, [r4, #8]
   29d82:	mov	r5, r4
   29d84:	mov	r4, r3
   29d86:	b.n	29d72 <btrfs_print_tree@@Base+0x4ee>
   29d88:	cmp	r3, r9
   29d8a:	it	eq
   29d8c:	cmpeq	r2, r8
   29d8e:	bcs.n	29e42 <btrfs_print_tree@@Base+0x5be>
   29d90:	ldr	r3, [r4, #4]
   29d92:	b.n	29d82 <btrfs_print_tree@@Base+0x4fe>
   29d94:	ldrd	r2, r1, [r5, #24]
   29d98:	ldrd	r3, r0, [r5, #16]
   29d9c:	adds	r3, r3, r2
   29d9e:	str	r3, [sp, #8]
   29da0:	adc.w	r3, r0, r1
   29da4:	str	r3, [sp, #12]
   29da6:	ldrd	r2, r3, [sp, #8]
   29daa:	b.n	29e36 <btrfs_print_tree@@Base+0x5b2>
   29dac:	mov	r4, r0
   29dae:	b.n	29e6a <btrfs_print_tree@@Base+0x5e6>
   29db0:	cmp	r5, #0
   29db2:	beq.n	29e6a <btrfs_print_tree@@Base+0x5e6>
   29db4:	ldrd	r2, r3, [r5, #16]
   29db8:	ldr.w	r6, [sl, #44]	; 0x2c
   29dbc:	cmp	r9, r3
   29dbe:	it	eq
   29dc0:	cmpeq	r8, r2
   29dc2:	bcs.n	29df4 <btrfs_print_tree@@Base+0x570>
   29dc4:	mov	r0, r5
   29dc6:	bl	17316 <rb_prev@@Base>
   29dca:	mov	r5, r0
   29dcc:	cmp	r0, #0
   29dce:	beq.n	29e6a <btrfs_print_tree@@Base+0x5e6>
   29dd0:	ldrd	r2, r3, [r0, #16]
   29dd4:	ldr	r1, [pc, #156]	; (29e74 <btrfs_print_tree@@Base+0x5f0>)
   29dd6:	cmp	r9, r3
   29dd8:	ldr	r0, [pc, #156]	; (29e78 <btrfs_print_tree@@Base+0x5f4>)
   29dda:	it	eq
   29ddc:	cmpeq	r8, r2
   29dde:	add	r1, pc
   29de0:	add.w	r1, r1, #16
   29de4:	add	r0, pc
   29de6:	ite	cc
   29de8:	movcc	r3, #1
   29dea:	movcs	r3, #0
   29dec:	mov.w	r2, #628	; 0x274
   29df0:	bl	29be0 <btrfs_print_tree@@Base+0x35c>
   29df4:	ldr	r3, [r5, #32]
   29df6:	cmp	r3, #0
   29df8:	beq.n	29d94 <btrfs_print_tree@@Base+0x510>
   29dfa:	mov	r0, r5
   29dfc:	bl	17316 <rb_prev@@Base>
   29e00:	cbz	r0, 29e24 <btrfs_print_tree@@Base+0x5a0>
   29e02:	ldr	r3, [r0, #32]
   29e04:	cbnz	r3, 29e24 <btrfs_print_tree@@Base+0x5a0>
   29e06:	ldrd	r2, r1, [r0, #24]
   29e0a:	ldrd	r3, r7, [r0, #16]
   29e0e:	adds	r3, r3, r2
   29e10:	str	r3, [sp, #0]
   29e12:	adc.w	r3, r7, r1
   29e16:	str	r3, [sp, #4]
   29e18:	ldrd	r2, r3, [sp]
   29e1c:	cmp	r9, r3
   29e1e:	it	eq
   29e20:	cmpeq	r8, r2
   29e22:	bcc.n	29dac <btrfs_print_tree@@Base+0x528>
   29e24:	ldr.w	r3, [sl, #28]
   29e28:	muls	r6, r3
   29e2a:	ldrd	r2, r3, [r5, #16]
   29e2e:	lsls	r6, r6, #3
   29e30:	adds	r2, r2, r6
   29e32:	adc.w	r3, r3, #0
   29e36:	cmp	r9, r3
   29e38:	it	eq
   29e3a:	cmpeq	r8, r2
   29e3c:	it	cc
   29e3e:	movcc	r4, r5
   29e40:	b.n	29e6a <btrfs_print_tree@@Base+0x5e6>
   29e42:	ldr	r3, [r4, #32]
   29e44:	cbz	r3, 29e6a <btrfs_print_tree@@Base+0x5e6>
   29e46:	mov	r0, r4
   29e48:	bl	17316 <rb_prev@@Base>
   29e4c:	cbz	r0, 29e6a <btrfs_print_tree@@Base+0x5e6>
   29e4e:	ldr	r3, [r0, #32]
   29e50:	cbnz	r3, 29e6a <btrfs_print_tree@@Base+0x5e6>
   29e52:	ldrd	r3, r5, [r0, #16]
   29e56:	ldrd	r2, r1, [r0, #24]
   29e5a:	adds	r6, r3, r2
   29e5c:	adc.w	r7, r5, r1
   29e60:	cmp	r9, r7
   29e62:	it	eq
   29e64:	cmpeq	r8, r6
   29e66:	it	cc
   29e68:	movcc	r4, r0
   29e6a:	mov	r0, r4
   29e6c:	add	sp, #16
   29e6e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   29e72:	nop
   29e74:	add	r2, pc, #472	; (adr r2, 2a050 <btrfs_init_free_space_ctl@@Base+0x4>)
   29e76:	movs	r1, r0
   29e78:	ldr	r5, [sp, #576]	; 0x240
   29e7a:	movs	r1, r0
   29e7c:	push	{r3, r4, r5, r6, r7, lr}
   29e7e:	mov	r6, r0
   29e80:	ldr	r7, [r1, #32]
   29e82:	mov	r5, r1
   29e84:	cbnz	r7, 29edc <btrfs_print_tree@@Base+0x658>
   29e86:	ldrd	r2, r3, [r1, #24]
   29e8a:	orrs	r3, r2
   29e8c:	ite	eq
   29e8e:	moveq	r3, #1
   29e90:	movne	r3, #0
   29e92:	ldr	r1, [pc, #128]	; (29f14 <btrfs_print_tree@@Base+0x690>)
   29e94:	movw	r2, #685	; 0x2ad
   29e98:	ldr	r0, [pc, #124]	; (29f18 <btrfs_print_tree@@Base+0x694>)
   29e9a:	add	r1, pc
   29e9c:	adds	r1, #35	; 0x23
   29e9e:	add	r0, pc
   29ea0:	bl	29be0 <btrfs_print_tree@@Base+0x35c>
   29ea4:	ldrd	r0, r1, [r5, #16]
   29ea8:	mov	r3, r6
   29eaa:	movs	r2, #0
   29eac:	ldr	r4, [r3, #0]
   29eae:	cbnz	r4, 29ee0 <btrfs_print_tree@@Base+0x65c>
   29eb0:	strd	r2, r4, [r5]
   29eb4:	mov	r1, r6
   29eb6:	mov	r0, r5
   29eb8:	str	r4, [r5, #8]
   29eba:	str	r5, [r3, #0]
   29ebc:	bl	16fae <rb_insert_color@@Base>
   29ec0:	ldrd	r1, r0, [r5, #24]
   29ec4:	ldrd	r3, r2, [r6, #8]
   29ec8:	adds	r3, r3, r1
   29eca:	adc.w	r2, r0, r2
   29ece:	strd	r3, r2, [r6, #8]
   29ed2:	ldr	r3, [r6, #20]
   29ed4:	mov	r0, r4
   29ed6:	adds	r3, #1
   29ed8:	str	r3, [r6, #20]
   29eda:	pop	{r3, r4, r5, r6, r7, pc}
   29edc:	movs	r3, #0
   29ede:	b.n	29e92 <btrfs_print_tree@@Base+0x60e>
   29ee0:	ldrd	r2, r3, [r4, #16]
   29ee4:	cmp	r1, r3
   29ee6:	it	eq
   29ee8:	cmpeq	r0, r2
   29eea:	bcs.n	29ef2 <btrfs_print_tree@@Base+0x66e>
   29eec:	add.w	r3, r4, #8
   29ef0:	b.n	29efc <btrfs_print_tree@@Base+0x678>
   29ef2:	cmp	r3, r1
   29ef4:	it	eq
   29ef6:	cmpeq	r2, r0
   29ef8:	bcs.n	29f00 <btrfs_print_tree@@Base+0x67c>
   29efa:	adds	r3, r4, #4
   29efc:	mov	r2, r4
   29efe:	b.n	29eac <btrfs_print_tree@@Base+0x628>
   29f00:	ldr	r3, [r4, #32]
   29f02:	cbz	r7, 29f0e <btrfs_print_tree@@Base+0x68a>
   29f04:	cmp	r3, #0
   29f06:	beq.n	29efa <btrfs_print_tree@@Base+0x676>
   29f08:	mvn.w	r0, #16
   29f0c:	b.n	29eda <btrfs_print_tree@@Base+0x656>
   29f0e:	cmp	r3, #0
   29f10:	bne.n	29eec <btrfs_print_tree@@Base+0x668>
   29f12:	b.n	29f08 <btrfs_print_tree@@Base+0x684>
   29f14:	add	r1, pc, #744	; (adr r1, 2a200 <load_free_space_cache@@Base+0x58>)
   29f16:	movs	r1, r0
   29f18:	ldr	r4, [sp, #948]	; 0x3b4
   29f1a:	movs	r1, r0
   29f1c:	push	{r4, lr}
   29f1e:	mov	r4, r1
   29f20:	ldr	r1, [pc, #84]	; (29f78 <btrfs_print_tree@@Base+0x6f4>)
   29f22:	sub	sp, #24
   29f24:	ldr	r3, [pc, #84]	; (29f7c <btrfs_print_tree@@Base+0x6f8>)
   29f26:	add	r1, pc
   29f28:	ldr	r3, [r1, r3]
   29f2a:	mov	r1, sp
   29f2c:	ldr	r3, [r3, #0]
   29f2e:	str	r3, [sp, #20]
   29f30:	mov.w	r3, #0
   29f34:	movs	r3, #25
   29f36:	muls	r2, r3
   29f38:	movs	r3, #17
   29f3a:	adds	r2, #101	; 0x65
   29f3c:	bl	1a79e <read_extent_buffer@@Base>
   29f40:	ldr.w	r3, [sp, #13]
   29f44:	ldr.w	r2, [sp, #9]
   29f48:	str.w	r3, [r4, #13]
   29f4c:	ldrb.w	r3, [sp, #8]
   29f50:	str.w	r2, [r4, #9]
   29f54:	ldr	r2, [pc, #40]	; (29f80 <btrfs_print_tree@@Base+0x6fc>)
   29f56:	strb	r3, [r4, #8]
   29f58:	ldr	r3, [sp, #0]
   29f5a:	add	r2, pc
   29f5c:	str	r3, [r4, #0]
   29f5e:	ldr	r3, [sp, #4]
   29f60:	str	r3, [r4, #4]
   29f62:	ldr	r3, [pc, #24]	; (29f7c <btrfs_print_tree@@Base+0x6f8>)
   29f64:	ldr	r3, [r2, r3]
   29f66:	ldr	r2, [r3, #0]
   29f68:	ldr	r3, [sp, #20]
   29f6a:	eors	r2, r3
   29f6c:	beq.n	29f72 <btrfs_print_tree@@Base+0x6ee>
   29f6e:	blx	88e4 <__stack_chk_fail@plt>
   29f72:	add	sp, #24
   29f74:	pop	{r4, pc}
   29f76:	nop
   29f78:	cdp	0, 0, cr0, cr10, cr3, {0}
   29f7c:	lsls	r4, r7, #9
   29f7e:	movs	r0, r0
   29f80:	ldcl	0, cr0, [r6, #12]

00029f84 <unlink_free_space@@Base>:
   29f84:	push	{r3, r4, r5, lr}
   29f86:	mov	r5, r1
   29f88:	mov	r4, r0
   29f8a:	mov	r1, r0
   29f8c:	mov	r0, r5
   29f8e:	bl	17054 <rb_erase@@Base>
   29f92:	ldr	r3, [r4, #20]
   29f94:	subs	r3, #1
   29f96:	str	r3, [r4, #20]
   29f98:	ldrd	r3, r2, [r4, #8]
   29f9c:	ldrd	r1, r0, [r5, #24]
   29fa0:	subs	r3, r3, r1
   29fa2:	sbc.w	r2, r2, r0
   29fa6:	strd	r3, r2, [r4, #8]
   29faa:	pop	{r3, r4, r5, pc}

00029fac <btrfs_find_free_space@@Base>:
   29fac:	b.n	29d64 <btrfs_print_tree@@Base+0x4e0>

00029fae <btrfs_dump_free_space@@Base>:
   29fae:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29fb2:	mov	r5, r0
   29fb4:	sub	sp, #36	; 0x24
   29fb6:	ldr	r0, [r0, #64]	; 0x40
   29fb8:	mov	r9, r3
   29fba:	mov	r8, r2
   29fbc:	bl	172ca <rb_first@@Base>
   29fc0:	ldr	r7, [pc, #112]	; (2a034 <btrfs_dump_free_space@@Base+0x86>)
   29fc2:	ldr	r3, [pc, #116]	; (2a038 <btrfs_dump_free_space@@Base+0x8a>)
   29fc4:	movs	r6, #0
   29fc6:	add	r7, pc
   29fc8:	ldr	r7, [r7, r3]
   29fca:	ldr	r3, [pc, #112]	; (2a03c <btrfs_dump_free_space@@Base+0x8e>)
   29fcc:	add	r3, pc
   29fce:	str	r3, [sp, #24]
   29fd0:	ldr	r3, [pc, #108]	; (2a040 <btrfs_dump_free_space@@Base+0x92>)
   29fd2:	add	r3, pc
   29fd4:	str	r3, [sp, #28]
   29fd6:	mov	r4, r0
   29fd8:	cbnz	r4, 29fee <btrfs_dump_free_space@@Base+0x40>
   29fda:	ldr	r2, [pc, #104]	; (2a044 <btrfs_dump_free_space@@Base+0x96>)
   29fdc:	mov	r3, r6
   29fde:	ldr	r0, [r7, #0]
   29fe0:	movs	r1, #1
   29fe2:	add	r2, pc
   29fe4:	add	sp, #36	; 0x24
   29fe6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29fea:	b.w	8c9c <__fprintf_chk@plt>
   29fee:	ldrd	r2, r3, [r4, #24]
   29ff2:	cmp	r3, r9
   29ff4:	it	eq
   29ff6:	cmpeq	r2, r8
   29ff8:	bcc.n	2a000 <btrfs_dump_free_space@@Base+0x52>
   29ffa:	ldr	r1, [r5, #108]	; 0x6c
   29ffc:	cbnz	r1, 2a000 <btrfs_dump_free_space@@Base+0x52>
   29ffe:	adds	r6, #1
   2a000:	ldr	r1, [r4, #32]
   2a002:	ldrd	sl, fp, [r4, #16]
   2a006:	cmp	r1, #0
   2a008:	ldr	r1, [sp, #24]
   2a00a:	ldr	r0, [r7, #0]
   2a00c:	strd	r2, r3, [sp, #8]
   2a010:	mov	ip, r1
   2a012:	ldr	r1, [sp, #28]
   2a014:	ldr	r2, [pc, #48]	; (2a048 <btrfs_dump_free_space@@Base+0x9a>)
   2a016:	it	ne
   2a018:	movne	r1, ip
   2a01a:	strd	sl, fp, [sp]
   2a01e:	add	r2, pc
   2a020:	str	r1, [sp, #16]
   2a022:	movs	r1, #1
   2a024:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2a028:	mov	r0, r4
   2a02a:	bl	172ea <rb_next@@Base>
   2a02e:	mov	r4, r0
   2a030:	b.n	29fd8 <btrfs_dump_free_space@@Base+0x2a>
   2a032:	nop
   2a034:	stcl	0, cr0, [sl, #-12]!
   2a038:	lsls	r4, r1, #10
   2a03a:	movs	r0, r0
   2a03c:	ldr	r3, [sp, #884]	; 0x374
   2a03e:	movs	r1, r0
   2a040:			; <UNDEFINED> instruction: 0x4781
   2a042:	movs	r1, r0
   2a044:	ldr	r3, [sp, #980]	; 0x3d4
   2a046:	movs	r1, r0
   2a048:	ldr	r3, [sp, #572]	; 0x23c
   2a04a:	movs	r1, r0

0002a04c <btrfs_init_free_space_ctl@@Base>:
   2a04c:	push	{r3, r4, r5, lr}
   2a04e:	mov	r4, r0
   2a050:	mov	r5, r1
   2a052:	movs	r0, #1
   2a054:	movs	r1, #48	; 0x30
   2a056:	blx	8718 <calloc@plt+0x4>
   2a05a:	cbz	r0, 2a070 <btrfs_init_free_space_ctl@@Base+0x24>
   2a05c:	ldrd	r2, r3, [r4, #40]	; 0x28
   2a060:	str	r5, [r0, #44]	; 0x2c
   2a062:	str	r5, [r0, #28]
   2a064:	strd	r2, r3, [r0, #32]
   2a068:	str	r4, [r0, #40]	; 0x28
   2a06a:	str	r0, [r4, #64]	; 0x40
   2a06c:	movs	r0, #0
   2a06e:	pop	{r3, r4, r5, pc}
   2a070:	mvn.w	r0, #11
   2a074:	b.n	2a06e <btrfs_init_free_space_ctl@@Base+0x22>

0002a076 <__btrfs_remove_free_space_cache@@Base>:
   2a076:	push	{r3, r4, r5, lr}
   2a078:	mov	r5, r0
   2a07a:	mov	r0, r5
   2a07c:	bl	172da <rb_last@@Base>
   2a080:	mov	r4, r0
   2a082:	cbnz	r0, 2a086 <__btrfs_remove_free_space_cache@@Base+0x10>
   2a084:	pop	{r3, r4, r5, pc}
   2a086:	mov	r1, r4
   2a088:	mov	r0, r5
   2a08a:	bl	29f84 <unlink_free_space@@Base>
   2a08e:	ldr	r0, [r4, #32]
   2a090:	blx	87cc <free@plt+0x4>
   2a094:	mov	r0, r4
   2a096:	blx	87cc <free@plt+0x4>
   2a09a:	b.n	2a07a <__btrfs_remove_free_space_cache@@Base+0x4>

0002a09c <btrfs_remove_free_space_cache@@Base>:
   2a09c:	ldr	r0, [r0, #64]	; 0x40
   2a09e:	b.w	2a076 <__btrfs_remove_free_space_cache@@Base>

0002a0a2 <btrfs_add_free_space@@Base>:
   2a0a2:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a0a6:	mov	r9, r3
   2a0a8:	ldr	r3, [pc, #240]	; (2a19c <btrfs_add_free_space@@Base+0xfa>)
   2a0aa:	mov	r7, r0
   2a0ac:	movs	r1, #48	; 0x30
   2a0ae:	movs	r0, #1
   2a0b0:	add	r3, pc
   2a0b2:	ldrd	r5, r6, [sp, #48]	; 0x30
   2a0b6:	mov	r8, r2
   2a0b8:	str	r3, [sp, #4]
   2a0ba:	blx	8718 <calloc@plt+0x4>
   2a0be:	mov	r4, r0
   2a0c0:	cmp	r0, #0
   2a0c2:	beq.n	2a194 <btrfs_add_free_space@@Base+0xf2>
   2a0c4:	adds.w	r2, r8, r5
   2a0c8:	strd	r5, r6, [r0, #24]
   2a0cc:	adc.w	r3, r9, r6
   2a0d0:	strd	r8, r9, [r0, #16]
   2a0d4:	mov	r0, r7
   2a0d6:	bl	29d64 <btrfs_print_tree@@Base+0x4e0>
   2a0da:	mov	r6, r0
   2a0dc:	cbz	r0, 2a112 <btrfs_add_free_space@@Base+0x70>
   2a0de:	bl	17316 <rb_prev@@Base>
   2a0e2:	cbz	r0, 2a112 <btrfs_add_free_space@@Base+0x70>
   2a0e4:	mov	r0, r6
   2a0e6:	bl	17316 <rb_prev@@Base>
   2a0ea:	mov	r5, r0
   2a0ec:	ldr	r3, [r6, #32]
   2a0ee:	cbnz	r3, 2a126 <btrfs_add_free_space@@Base+0x84>
   2a0f0:	mov	r1, r6
   2a0f2:	mov	r0, r7
   2a0f4:	bl	29f84 <unlink_free_space@@Base>
   2a0f8:	ldrd	r1, r0, [r6, #24]
   2a0fc:	ldrd	r3, r2, [r4, #24]
   2a100:	adds	r3, r3, r1
   2a102:	adc.w	r2, r0, r2
   2a106:	mov	r0, r6
   2a108:	strd	r3, r2, [r4, #24]
   2a10c:	blx	87cc <free@plt+0x4>
   2a110:	b.n	2a126 <btrfs_add_free_space@@Base+0x84>
   2a112:	adds.w	r2, r8, #4294967295	; 0xffffffff
   2a116:	mov	r0, r7
   2a118:	adc.w	r3, r9, #4294967295	; 0xffffffff
   2a11c:	bl	29d64 <btrfs_print_tree@@Base+0x4e0>
   2a120:	mov	r5, r0
   2a122:	cmp	r6, #0
   2a124:	bne.n	2a0ec <btrfs_add_free_space@@Base+0x4a>
   2a126:	cbz	r5, 2a16c <btrfs_add_free_space@@Base+0xca>
   2a128:	ldr	r3, [r5, #32]
   2a12a:	cbnz	r3, 2a16c <btrfs_add_free_space@@Base+0xca>
   2a12c:	ldrd	r3, r0, [r5, #16]
   2a130:	ldrd	r2, r1, [r5, #24]
   2a134:	adds.w	sl, r3, r2
   2a138:	adc.w	fp, r0, r1
   2a13c:	cmp	r9, fp
   2a13e:	it	eq
   2a140:	cmpeq	r8, sl
   2a142:	bne.n	2a16c <btrfs_add_free_space@@Base+0xca>
   2a144:	mov	r1, r5
   2a146:	mov	r0, r7
   2a148:	bl	29f84 <unlink_free_space@@Base>
   2a14c:	ldrd	r2, r3, [r5, #16]
   2a150:	strd	r2, r3, [r4, #16]
   2a154:	ldrd	r3, r2, [r4, #24]
   2a158:	ldrd	r0, r1, [r5, #24]
   2a15c:	adds	r3, r3, r0
   2a15e:	mov	r0, r5
   2a160:	adc.w	r2, r1, r2
   2a164:	strd	r3, r2, [r4, #24]
   2a168:	blx	87cc <free@plt+0x4>
   2a16c:	mov	r1, r4
   2a16e:	mov	r0, r7
   2a170:	bl	29e7c <btrfs_print_tree@@Base+0x5f8>
   2a174:	mov	r4, r0
   2a176:	cbz	r0, 2a18c <btrfs_add_free_space@@Base+0xea>
   2a178:	ldr	r3, [pc, #36]	; (2a1a0 <btrfs_add_free_space@@Base+0xfe>)
   2a17a:	movs	r1, #1
   2a17c:	ldr	r2, [sp, #4]
   2a17e:	ldr	r0, [r2, r3]
   2a180:	mov	r3, r4
   2a182:	ldr	r2, [pc, #32]	; (2a1a4 <btrfs_add_free_space@@Base+0x102>)
   2a184:	ldr	r0, [r0, #0]
   2a186:	add	r2, pc
   2a188:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2a18c:	mov	r0, r4
   2a18e:	add	sp, #12
   2a190:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a194:	mvn.w	r4, #11
   2a198:	b.n	2a18c <btrfs_add_free_space@@Base+0xea>
   2a19a:	nop
   2a19c:	stc	0, cr0, [r0], {3}
   2a1a0:	lsls	r4, r1, #10
   2a1a2:	movs	r0, r0
   2a1a4:	ldr	r2, [sp, #536]	; 0x218
   2a1a6:	movs	r1, r0

0002a1a8 <load_free_space_cache@@Base>:
   2a1a8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a1ac:	mov	r6, r0
   2a1ae:	vpush	{d8}
   2a1b2:	ldr.w	r2, [pc, #2148]	; 2aa18 <load_free_space_cache@@Base+0x870>
   2a1b6:	ldr.w	r3, [pc, #2148]	; 2aa1c <load_free_space_cache@@Base+0x874>
   2a1ba:	add	r2, pc
   2a1bc:	ldr.w	fp, [pc, #2144]	; 2aa20 <load_free_space_cache@@Base+0x878>
   2a1c0:	sub	sp, #244	; 0xf4
   2a1c2:	ldr	r5, [r1, #64]	; 0x40
   2a1c4:	add	fp, pc
   2a1c6:	str	r1, [sp, #72]	; 0x48
   2a1c8:	ldr	r3, [r2, r3]
   2a1ca:	ldr	r3, [r3, #0]
   2a1cc:	str	r3, [sp, #236]	; 0xec
   2a1ce:	mov.w	r3, #0
   2a1d2:	ldr	r3, [r1, #72]	; 0x48
   2a1d4:	str	r3, [sp, #88]	; 0x58
   2a1d6:	ldr	r3, [r1, #76]	; 0x4c
   2a1d8:	str	r3, [sp, #92]	; 0x5c
   2a1da:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2a1de:	mov	r4, r0
   2a1e0:	cmp	r0, #0
   2a1e2:	beq.w	2aa06 <load_free_space_cache@@Base+0x85e>
   2a1e6:	ldr	r3, [sp, #72]	; 0x48
   2a1e8:	movs	r7, #0
   2a1ea:	ldr.w	r9, [r6, #28]
   2a1ee:	add	r1, sp, #96	; 0x60
   2a1f0:	mvn.w	r0, #10
   2a1f4:	strd	r1, r1, [sp, #96]	; 0x60
   2a1f8:	ldrd	r2, r3, [r3, #40]	; 0x28
   2a1fc:	mov.w	r1, #4294967295	; 0xffffffff
   2a200:	strd	r7, r7, [sp]
   2a204:	strd	r0, r1, [sp, #104]	; 0x68
   2a208:	mov	r1, r9
   2a20a:	str.w	r2, [sp, #113]	; 0x71
   2a20e:	mov	r0, r7
   2a210:	str.w	r3, [sp, #117]	; 0x75
   2a214:	add	r2, sp, #104	; 0x68
   2a216:	mov	r3, r4
   2a218:	strb.w	r7, [sp, #112]	; 0x70
   2a21c:	bl	1d6c0 <btrfs_search_slot@@Base>
   2a220:	subs	r6, r0, #0
   2a222:	blt.n	2a22c <load_free_space_cache@@Base+0x84>
   2a224:	beq.n	2a232 <load_free_space_cache@@Base+0x8a>
   2a226:	mov	r0, r4
   2a228:	bl	1b2dc <btrfs_release_path@@Base>
   2a22c:	mov.w	r8, #0
   2a230:	b.n	2a2f6 <load_free_space_cache@@Base+0x14e>
   2a232:	ldr.w	ip, [r4]
   2a236:	movs	r7, #25
   2a238:	ldr	r2, [r4, #32]
   2a23a:	add.w	r3, ip, #96	; 0x60
   2a23e:	mla	r2, r7, r2, r3
   2a242:	ldr.w	r2, [r2, #118]	; 0x76
   2a246:	adds	r2, #101	; 0x65
   2a248:	add	r3, r2
   2a24a:	mov	r1, r3
   2a24c:	ldr.w	r0, [r1, #25]!
   2a250:	ldr	r1, [r1, #4]
   2a252:	str	r0, [sp, #24]
   2a254:	str	r1, [sp, #28]
   2a256:	mov	r1, r3
   2a258:	ldr.w	r0, [r1, #33]!
   2a25c:	ldr	r1, [r1, #4]
   2a25e:	str	r0, [sp, #64]	; 0x40
   2a260:	mov	r0, ip
   2a262:	str	r1, [sp, #76]	; 0x4c
   2a264:	ldr.w	r1, [r3, #17]!
   2a268:	ldr	r3, [r3, #4]
   2a26a:	str	r1, [sp, #40]	; 0x28
   2a26c:	add	r1, sp, #144	; 0x90
   2a26e:	str	r3, [sp, #44]	; 0x2c
   2a270:	movs	r3, #17
   2a272:	bl	1a79e <read_extent_buffer@@Base>
   2a276:	ldr.w	r3, [sp, #157]	; 0x9d
   2a27a:	ldr.w	r2, [sp, #153]	; 0x99
   2a27e:	mov	r0, r4
   2a280:	str.w	r3, [sp, #137]	; 0x89
   2a284:	ldrb.w	r3, [sp, #152]	; 0x98
   2a288:	str.w	r2, [sp, #133]	; 0x85
   2a28c:	strb.w	r3, [sp, #132]	; 0x84
   2a290:	ldr	r3, [sp, #144]	; 0x90
   2a292:	str	r3, [sp, #124]	; 0x7c
   2a294:	ldr	r3, [sp, #148]	; 0x94
   2a296:	str	r3, [sp, #128]	; 0x80
   2a298:	bl	1b2dc <btrfs_release_path@@Base>
   2a29c:	add	r2, sp, #124	; 0x7c
   2a29e:	mov	r3, r4
   2a2a0:	mov	r1, r9
   2a2a2:	mov	r0, r6
   2a2a4:	strd	r6, r6, [sp]
   2a2a8:	bl	1d6c0 <btrfs_search_slot@@Base>
   2a2ac:	mov	r8, r0
   2a2ae:	cbz	r0, 2a2ca <load_free_space_cache@@Base+0x122>
   2a2b0:	ldr.w	r3, [pc, #1904]	; 2aa24 <load_free_space_cache@@Base+0x87c>
   2a2b4:	movs	r1, #1
   2a2b6:	ldr.w	r2, [pc, #1904]	; 2aa28 <load_free_space_cache@@Base+0x880>
   2a2ba:	ldr.w	r0, [fp, r3]
   2a2be:	add	r2, pc
   2a2c0:	mov	r3, r8
   2a2c2:	ldr	r0, [r0, #0]
   2a2c4:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2a2c8:	b.n	2a22c <load_free_space_cache@@Base+0x84>
   2a2ca:	ldr	r3, [r4, #0]
   2a2cc:	ldr	r2, [r4, #32]
   2a2ce:	adds	r3, #96	; 0x60
   2a2d0:	mla	r7, r7, r2, r3
   2a2d4:	ldr.w	r2, [r7, #118]	; 0x76
   2a2d8:	adds	r2, #101	; 0x65
   2a2da:	add	r3, r2
   2a2dc:	ldr	r6, [r3, #16]
   2a2de:	ldr	r7, [r3, #20]
   2a2e0:	orrs.w	r2, r6, r7
   2a2e4:	beq.n	2a2f0 <load_free_space_cache@@Base+0x148>
   2a2e6:	ldr	r0, [r3, #0]
   2a2e8:	ldr	r1, [r3, #4]
   2a2ea:	orrs.w	r3, r0, r1
   2a2ee:	bne.n	2a3ba <load_free_space_cache@@Base+0x212>
   2a2f0:	mov	r0, r4
   2a2f2:	bl	1b2dc <btrfs_release_path@@Base>
   2a2f6:	mov	r0, r4
   2a2f8:	bl	1b302 <btrfs_free_path@@Base>
   2a2fc:	ldr	r3, [sp, #72]	; 0x48
   2a2fe:	ldrd	r4, r6, [r5, #8]
   2a302:	ldr.w	r2, [r3, #49]	; 0x31
   2a306:	ldr.w	r0, [r3, #53]	; 0x35
   2a30a:	ldrd	r1, r7, [r3, #80]	; 0x50
   2a30e:	ldr	r3, [sp, #88]	; 0x58
   2a310:	adds	r1, r3, r1
   2a312:	ldr	r3, [sp, #92]	; 0x5c
   2a314:	adc.w	r7, r3, r7
   2a318:	adds	r3, r4, r1
   2a31a:	adc.w	ip, r6, r7
   2a31e:	subs	r3, r3, r2
   2a320:	str	r3, [sp, #56]	; 0x38
   2a322:	sbc.w	r3, ip, r0
   2a326:	cmp.w	r8, #1
   2a32a:	str	r3, [sp, #60]	; 0x3c
   2a32c:	bne.w	2a9ee <load_free_space_cache@@Base+0x846>
   2a330:	ldrd	r9, sl, [sp, #56]	; 0x38
   2a334:	orrs.w	r3, r9, sl
   2a338:	beq.n	2a3a0 <load_free_space_cache@@Base+0x1f8>
   2a33a:	ldr.w	r3, [pc, #1768]	; 2aa24 <load_free_space_cache@@Base+0x87c>
   2a33e:	subs	r2, r2, r1
   2a340:	sbc.w	r0, r0, r7
   2a344:	ldr.w	r3, [fp, r3]
   2a348:	strd	r2, r0, [sp, #16]
   2a34c:	ldr	r2, [sp, #72]	; 0x48
   2a34e:	strd	r4, r6, [sp, #8]
   2a352:	ldrd	r0, r1, [r2, #40]	; 0x28
   2a356:	ldr.w	r2, [pc, #1748]	; 2aa2c <load_free_space_cache@@Base+0x884>
   2a35a:	strd	r0, r1, [sp]
   2a35e:	add	r2, pc
   2a360:	ldr	r0, [r3, #0]
   2a362:	mov	r1, r8
   2a364:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2a368:	mov	r0, r5
   2a36a:	bl	2a076 <__btrfs_remove_free_space_cache@@Base>
   2a36e:	ldrd	r3, r4, [sp, #56]	; 0x38
   2a372:	cmp	r3, #1
   2a374:	sbcs.w	r3, r4, #0
   2a378:	bge.w	2a9e0 <load_free_space_cache@@Base+0x838>
   2a37c:	mov.w	r8, #0
   2a380:	ldr	r2, [sp, #72]	; 0x48
   2a382:	ldr.w	r3, [pc, #1696]	; 2aa24 <load_free_space_cache@@Base+0x87c>
   2a386:	ldrd	r0, r1, [r2, #40]	; 0x28
   2a38a:	ldr.w	r3, [fp, r3]
   2a38e:	ldr.w	r2, [pc, #1696]	; 2aa30 <load_free_space_cache@@Base+0x888>
   2a392:	strd	r0, r1, [sp]
   2a396:	movs	r1, #1
   2a398:	ldr	r0, [r3, #0]
   2a39a:	add	r2, pc
   2a39c:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2a3a0:	ldr.w	r2, [pc, #1680]	; 2aa34 <load_free_space_cache@@Base+0x88c>
   2a3a4:	ldr.w	r3, [pc, #1652]	; 2aa1c <load_free_space_cache@@Base+0x874>
   2a3a8:	add	r2, pc
   2a3aa:	ldr	r3, [r2, r3]
   2a3ac:	ldr	r2, [r3, #0]
   2a3ae:	ldr	r3, [sp, #236]	; 0xec
   2a3b0:	eors	r2, r3
   2a3b2:	beq.w	2aa0a <load_free_space_cache@@Base+0x862>
   2a3b6:	blx	88e4 <__stack_chk_fail@plt>
   2a3ba:	ldrd	r2, r3, [sp, #40]	; 0x28
   2a3be:	cmp	r3, r1
   2a3c0:	it	eq
   2a3c2:	cmpeq	r2, r0
   2a3c4:	beq.n	2a3ea <load_free_space_cache@@Base+0x242>
   2a3c6:	ldr.w	r3, [pc, #1628]	; 2aa24 <load_free_space_cache@@Base+0x87c>
   2a3ca:	ldrd	r6, r7, [sp, #40]	; 0x28
   2a3ce:	ldr.w	r2, [pc, #1640]	; 2aa38 <load_free_space_cache@@Base+0x890>
   2a3d2:	ldr.w	r3, [fp, r3]
   2a3d6:	add	r2, pc
   2a3d8:	strd	r0, r1, [sp]
   2a3dc:	strd	r6, r7, [sp, #8]
   2a3e0:	movs	r1, #1
   2a3e2:	ldr	r0, [r3, #0]
   2a3e4:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2a3e8:	b.n	2a2f0 <load_free_space_cache@@Base+0x148>
   2a3ea:	mov	r0, r4
   2a3ec:	bl	1b2dc <btrfs_release_path@@Base>
   2a3f0:	ldrd	r2, r3, [sp, #24]
   2a3f4:	orrs	r3, r2
   2a3f6:	beq.w	2a22c <load_free_space_cache@@Base+0x84>
   2a3fa:	ldr	r3, [sp, #124]	; 0x7c
   2a3fc:	movs	r2, #48	; 0x30
   2a3fe:	mov	r1, r8
   2a400:	add	r0, sp, #184	; 0xb8
   2a402:	str	r3, [sp, #32]
   2a404:	ldr	r3, [sp, #128]	; 0x80
   2a406:	str	r3, [sp, #36]	; 0x24
   2a408:	blx	8bf8 <memset@plt+0x4>
   2a40c:	ldr.w	r3, [r9, #464]	; 0x1d0
   2a410:	ldr.w	r2, [r3, #388]	; 0x184
   2a414:	movs	r3, #0
   2a416:	adds.w	r0, r2, #4294967295	; 0xffffffff
   2a41a:	adc.w	r1, r3, #4294967295	; 0xffffffff
   2a41e:	adds	r0, r0, r6
   2a420:	adc.w	r1, r7, r1
   2a424:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2a428:	mov	r1, r6
   2a42a:	str	r0, [sp, #220]	; 0xdc
   2a42c:	movs	r0, #1
   2a42e:	blx	8718 <calloc@plt+0x4>
   2a432:	str	r0, [sp, #192]	; 0xc0
   2a434:	cmp	r0, #0
   2a436:	beq.w	2a9da <load_free_space_cache@@Base+0x832>
   2a43a:	ldrd	r0, r1, [sp, #32]
   2a43e:	mov.w	r3, #4294967295	; 0xffffffff
   2a442:	mvn.w	r2, #11
   2a446:	strd	r6, r7, [sp, #208]	; 0xd0
   2a44a:	cmp	r1, r3
   2a44c:	add	r7, sp, #164	; 0xa4
   2a44e:	it	eq
   2a450:	cmpeq	r0, r2
   2a452:	mov	r1, r9
   2a454:	mov.w	r0, #0
   2a458:	mov	r2, r7
   2a45a:	it	ne
   2a45c:	ldrbne.w	r3, [sp, #224]	; 0xe0
   2a460:	strd	r0, r0, [sp]
   2a464:	it	ne
   2a466:	orrne.w	r3, r3, #1
   2a46a:	str.w	r9, [sp, #196]	; 0xc4
   2a46e:	it	ne
   2a470:	strbne.w	r3, [sp, #224]	; 0xe0
   2a474:	ldr	r3, [sp, #32]
   2a476:	strb.w	r0, [sp, #173]	; 0xad
   2a47a:	strb.w	r0, [sp, #174]	; 0xae
   2a47e:	str	r3, [sp, #164]	; 0xa4
   2a480:	ldr	r3, [sp, #36]	; 0x24
   2a482:	strb.w	r0, [sp, #175]	; 0xaf
   2a486:	strb.w	r0, [sp, #176]	; 0xb0
   2a48a:	str	r3, [sp, #168]	; 0xa8
   2a48c:	movs	r3, #108	; 0x6c
   2a48e:	strb.w	r3, [sp, #172]	; 0xac
   2a492:	mov	r3, r4
   2a494:	strb.w	r0, [sp, #177]	; 0xb1
   2a498:	strb.w	r0, [sp, #178]	; 0xb2
   2a49c:	strb.w	r0, [sp, #179]	; 0xb3
   2a4a0:	strb.w	r0, [sp, #180]	; 0xb4
   2a4a4:	bl	1d6c0 <btrfs_search_slot@@Base>
   2a4a8:	cmp	r0, #0
   2a4aa:	beq.w	2a64e <load_free_space_cache@@Base+0x4a6>
   2a4ae:	ldr.w	r3, [pc, #1396]	; 2aa24 <load_free_space_cache@@Base+0x87c>
   2a4b2:	mvn.w	r8, #21
   2a4b6:	ldrd	r1, r2, [sp, #32]
   2a4ba:	ldr.w	r3, [fp, r3]
   2a4be:	strd	r1, r2, [sp]
   2a4c2:	movs	r1, #1
   2a4c4:	ldr.w	r2, [pc, #1396]	; 2aa3c <load_free_space_cache@@Base+0x894>
   2a4c8:	ldr	r0, [r3, #0]
   2a4ca:	add	r2, pc
   2a4cc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2a4d0:	mov	r0, r4
   2a4d2:	bl	1b2dc <btrfs_release_path@@Base>
   2a4d6:	ldr	r0, [sp, #192]	; 0xc0
   2a4d8:	blx	87cc <free@plt+0x4>
   2a4dc:	b.n	2a2f6 <load_free_space_cache@@Base+0x14e>
   2a4de:	ldr	r3, [r4, #0]
   2a4e0:	ldr	r2, [r4, #32]
   2a4e2:	ldr.w	r3, [r3, #192]	; 0xc0
   2a4e6:	cmp	r2, r3
   2a4e8:	bcs.n	2a58e <load_free_space_cache@@Base+0x3e6>
   2a4ea:	ldr	r7, [r4, #0]
   2a4ec:	vmov	r1, s16
   2a4f0:	ldr	r2, [r4, #32]
   2a4f2:	mov	r0, r7
   2a4f4:	bl	29f1c <btrfs_print_tree@@Base+0x698>
   2a4f8:	ldrd	r2, r3, [sp, #164]	; 0xa4
   2a4fc:	ldrd	r0, r1, [sp, #32]
   2a500:	cmp	r1, r3
   2a502:	it	eq
   2a504:	cmpeq	r0, r2
   2a506:	beq.n	2a5a2 <load_free_space_cache@@Base+0x3fa>
   2a508:	mvn.w	r8, #21
   2a50c:	mov	r0, r4
   2a50e:	bl	1b2dc <btrfs_release_path@@Base>
   2a512:	cmp.w	r8, #0
   2a516:	bne.n	2a4d6 <load_free_space_cache@@Base+0x32e>
   2a518:	mov	r1, r8
   2a51a:	add	r0, sp, #184	; 0xb8
   2a51c:	bl	29cb4 <btrfs_print_tree@@Base+0x430>
   2a520:	mov	r8, r0
   2a522:	cbnz	r0, 2a580 <load_free_space_cache@@Base+0x3d8>
   2a524:	ldrb.w	r2, [sp, #224]	; 0xe0
   2a528:	ldr	r3, [sp, #184]	; 0xb8
   2a52a:	lsls	r2, r2, #31
   2a52c:	ldr	r1, [sp, #200]	; 0xc8
   2a52e:	bpl.w	2a65e <load_free_space_cache@@Base+0x4b6>
   2a532:	ldr	r0, [sp, #220]	; 0xdc
   2a534:	lsls	r2, r0, #2
   2a536:	add.w	r3, r3, r0, lsl #2
   2a53a:	str	r3, [sp, #184]	; 0xb8
   2a53c:	add.w	r3, r2, #8
   2a540:	subs	r3, r1, r3
   2a542:	str	r3, [sp, #200]	; 0xc8
   2a544:	ldr	r3, [sp, #184]	; 0xb8
   2a546:	ldrd	r6, r7, [sp, #40]	; 0x28
   2a54a:	ldrd	r0, r1, [r3]
   2a54e:	cmp	r7, r1
   2a550:	it	eq
   2a552:	cmpeq	r6, r0
   2a554:	beq.w	2a668 <load_free_space_cache@@Base+0x4c0>
   2a558:	ldr.w	r3, [pc, #1224]	; 2aa24 <load_free_space_cache@@Base+0x87c>
   2a55c:	mvn.w	r8, #4
   2a560:	ldr.w	r2, [pc, #1244]	; 2aa40 <load_free_space_cache@@Base+0x898>
   2a564:	ldr.w	r3, [fp, r3]
   2a568:	add	r2, pc
   2a56a:	strd	r0, r1, [sp]
   2a56e:	movs	r1, #1
   2a570:	strd	r6, r7, [sp, #8]
   2a574:	ldr	r0, [r3, #0]
   2a576:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2a57a:	add	r0, sp, #184	; 0xb8
   2a57c:	bl	29b70 <btrfs_print_tree@@Base+0x2ec>
   2a580:	add	r0, sp, #184	; 0xb8
   2a582:	bl	29b70 <btrfs_print_tree@@Base+0x2ec>
   2a586:	mov	r0, r5
   2a588:	bl	2a076 <__btrfs_remove_free_space_cache@@Base>
   2a58c:	b.n	2a4d6 <load_free_space_cache@@Base+0x32e>
   2a58e:	strb.w	r6, [r4, #65]	; 0x41
   2a592:	mov	r1, r4
   2a594:	ldr.w	r0, [r9, #464]	; 0x1d0
   2a598:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   2a59c:	cmp	r0, #0
   2a59e:	beq.n	2a4ea <load_free_space_cache@@Base+0x342>
   2a5a0:	b.n	2a508 <load_free_space_cache@@Base+0x360>
   2a5a2:	ldrb.w	r3, [sp, #172]	; 0xac
   2a5a6:	cmp	r3, #108	; 0x6c
   2a5a8:	bne.n	2a508 <load_free_space_cache@@Base+0x360>
   2a5aa:	ldr	r3, [r4, #0]
   2a5ac:	movs	r1, #25
   2a5ae:	ldr	r2, [r4, #32]
   2a5b0:	adds	r3, #96	; 0x60
   2a5b2:	mla	r2, r1, r2, r3
   2a5b6:	ldr.w	r0, [r2, #118]	; 0x76
   2a5ba:	add.w	r2, r0, #101	; 0x65
   2a5be:	add	r3, r2
   2a5c0:	ldrb	r3, [r3, #20]
   2a5c2:	cmp	r3, #1
   2a5c4:	beq.n	2a5dc <load_free_space_cache@@Base+0x434>
   2a5c6:	ldr.w	r3, [pc, #1116]	; 2aa24 <load_free_space_cache@@Base+0x87c>
   2a5ca:	ldr.w	r0, [pc, #1144]	; 2aa44 <load_free_space_cache@@Base+0x89c>
   2a5ce:	ldr.w	r3, [fp, r3]
   2a5d2:	add	r0, pc
   2a5d4:	ldr	r1, [r3, #0]
   2a5d6:	blx	8de4 <fputs@plt+0x4>
   2a5da:	b.n	2a508 <load_free_space_cache@@Base+0x360>
   2a5dc:	add.w	r0, r7, #96	; 0x60
   2a5e0:	ldr.w	r1, [sp, #173]	; 0xad
   2a5e4:	add	r0, r2
   2a5e6:	mov	r3, r0
   2a5e8:	ldr.w	r7, [r3, #45]!
   2a5ec:	ldr.w	sl, [r3, #4]
   2a5f0:	mov	r3, r0
   2a5f2:	ldr.w	r2, [r3, #21]!
   2a5f6:	ldr.w	lr, [r0, #37]!
   2a5fa:	ldr.w	ip, [r3, #4]
   2a5fe:	adds.w	r2, r2, lr
   2a602:	ldr	r3, [r0, #4]
   2a604:	ldr	r0, [sp, #192]	; 0xc0
   2a606:	str	r6, [sp, #8]
   2a608:	adc.w	r3, ip, r3
   2a60c:	add	r1, r0
   2a60e:	strd	r7, sl, [sp]
   2a612:	ldr.w	r0, [r9, #464]	; 0x1d0
   2a616:	bl	1a32e <read_data_from_disk@@Base>
   2a61a:	mov	r8, r0
   2a61c:	cmp	r0, #0
   2a61e:	bne.w	2a50c <load_free_space_cache@@Base+0x364>
   2a622:	ldr	r3, [sp, #48]	; 0x30
   2a624:	adds	r3, r3, r7
   2a626:	str	r3, [sp, #48]	; 0x30
   2a628:	ldr	r3, [sp, #52]	; 0x34
   2a62a:	adc.w	r3, r3, sl
   2a62e:	str	r3, [sp, #52]	; 0x34
   2a630:	ldr	r3, [r4, #32]
   2a632:	adds	r3, #1
   2a634:	str	r3, [r4, #32]
   2a636:	ldrd	r2, r3, [sp, #208]	; 0xd0
   2a63a:	ldrd	r0, r1, [sp, #48]	; 0x30
   2a63e:	cmp	r1, r3
   2a640:	it	eq
   2a642:	cmpeq	r0, r2
   2a644:	bcc.w	2a4de <load_free_space_cache@@Base+0x336>
   2a648:	mov.w	r8, #0
   2a64c:	b.n	2a50c <load_free_space_cache@@Base+0x364>
   2a64e:	movs	r2, #0
   2a650:	movs	r3, #0
   2a652:	vmov	s16, r7
   2a656:	mov	r6, r0
   2a658:	strd	r2, r3, [sp, #48]	; 0x30
   2a65c:	b.n	2a636 <load_free_space_cache@@Base+0x48e>
   2a65e:	adds	r3, #8
   2a660:	subs	r1, #16
   2a662:	str	r3, [sp, #184]	; 0xb8
   2a664:	str	r1, [sp, #200]	; 0xc8
   2a666:	b.n	2a544 <load_free_space_cache@@Base+0x39c>
   2a668:	ldr	r7, [pc, #988]	; (2aa48 <load_free_space_cache@@Base+0x8a0>)
   2a66a:	adds	r3, #8
   2a66c:	ldr.w	r9, [pc, #988]	; 2aa4c <load_free_space_cache@@Base+0x8a4>
   2a670:	add	r7, pc
   2a672:	str	r3, [sp, #184]	; 0xb8
   2a674:	adds	r7, #51	; 0x33
   2a676:	add	r9, pc
   2a678:	movs	r1, #48	; 0x30
   2a67a:	movs	r0, #1
   2a67c:	blx	8718 <calloc@plt+0x4>
   2a680:	mov	r6, r0
   2a682:	cmp	r0, #0
   2a684:	beq.w	2a580 <load_free_space_cache@@Base+0x3d8>
   2a688:	ldr	r3, [sp, #184]	; 0xb8
   2a68a:	cbz	r3, 2a6ce <load_free_space_cache@@Base+0x526>
   2a68c:	ldr	r3, [sp, #184]	; 0xb8
   2a68e:	adds	r3, #17
   2a690:	ldr.w	r1, [r3, #-17]
   2a694:	ldr.w	r2, [r3, #-13]
   2a698:	strd	r1, r2, [r6, #16]
   2a69c:	ldr.w	r1, [r3, #-9]
   2a6a0:	ldr.w	r2, [r3, #-5]
   2a6a4:	strd	r1, r2, [r6, #24]
   2a6a8:	ldrb.w	r1, [r3, #-1]
   2a6ac:	str	r3, [sp, #184]	; 0xb8
   2a6ae:	ldr	r3, [sp, #200]	; 0xc8
   2a6b0:	subs	r3, #17
   2a6b2:	str	r3, [sp, #200]	; 0xc8
   2a6b4:	cmp	r3, #16
   2a6b6:	bhi.n	2a6be <load_free_space_cache@@Base+0x516>
   2a6b8:	add	r0, sp, #184	; 0xb8
   2a6ba:	bl	29b70 <btrfs_print_tree@@Base+0x2ec>
   2a6be:	ldrd	r2, r3, [r6, #24]
   2a6c2:	orrs	r3, r2
   2a6c4:	bne.n	2a6e6 <load_free_space_cache@@Base+0x53e>
   2a6c6:	mov	r0, r6
   2a6c8:	blx	87cc <free@plt+0x4>
   2a6cc:	b.n	2a580 <load_free_space_cache@@Base+0x3d8>
   2a6ce:	ldr	r1, [sp, #216]	; 0xd8
   2a6d0:	add	r0, sp, #184	; 0xb8
   2a6d2:	bl	29cb4 <btrfs_print_tree@@Base+0x430>
   2a6d6:	mov	sl, r0
   2a6d8:	cmp	r0, #0
   2a6da:	beq.n	2a68c <load_free_space_cache@@Base+0x4e4>
   2a6dc:	mov	r0, r6
   2a6de:	mov	r8, sl
   2a6e0:	blx	87cc <free@plt+0x4>
   2a6e4:	b.n	2a580 <load_free_space_cache@@Base+0x3d8>
   2a6e6:	cmp	r1, #1
   2a6e8:	bne.n	2a70a <load_free_space_cache@@Base+0x562>
   2a6ea:	mov	r1, r6
   2a6ec:	mov	r0, r5
   2a6ee:	bl	29e7c <btrfs_print_tree@@Base+0x5f8>
   2a6f2:	mov	sl, r0
   2a6f4:	cmp	r0, #0
   2a6f6:	beq.n	2a77a <load_free_space_cache@@Base+0x5d2>
   2a6f8:	ldr	r3, [pc, #808]	; (2aa24 <load_free_space_cache@@Base+0x87c>)
   2a6fa:	ldr	r0, [pc, #852]	; (2aa50 <load_free_space_cache@@Base+0x8a8>)
   2a6fc:	ldr.w	r3, [fp, r3]
   2a700:	add	r0, pc
   2a702:	ldr	r1, [r3, #0]
   2a704:	blx	8de4 <fputs@plt+0x4>
   2a708:	b.n	2a6dc <load_free_space_cache@@Base+0x534>
   2a70a:	ldr	r3, [sp, #64]	; 0x40
   2a70c:	mov	r1, r7
   2a70e:	ldr	r2, [sp, #76]	; 0x4c
   2a710:	mov	r0, r9
   2a712:	orrs	r3, r2
   2a714:	movw	r2, #387	; 0x183
   2a718:	ite	eq
   2a71a:	moveq	r3, #1
   2a71c:	movne	r3, #0
   2a71e:	bl	29be0 <btrfs_print_tree@@Base+0x35c>
   2a722:	ldr	r3, [sp, #64]	; 0x40
   2a724:	ldr	r1, [r5, #44]	; 0x2c
   2a726:	movs	r0, #1
   2a728:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2a72c:	str	r3, [sp, #64]	; 0x40
   2a72e:	ldr	r3, [sp, #76]	; 0x4c
   2a730:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2a734:	str	r3, [sp, #76]	; 0x4c
   2a736:	blx	8718 <calloc@plt+0x4>
   2a73a:	str	r0, [r6, #32]
   2a73c:	cmp	r0, #0
   2a73e:	beq.n	2a6c6 <load_free_space_cache@@Base+0x51e>
   2a740:	mov	r1, r6
   2a742:	mov	r0, r5
   2a744:	bl	29e7c <btrfs_print_tree@@Base+0x5f8>
   2a748:	ldr	r3, [r5, #24]
   2a74a:	adds	r3, #1
   2a74c:	str	r3, [r5, #24]
   2a74e:	mov	sl, r0
   2a750:	cbz	r0, 2a76a <load_free_space_cache@@Base+0x5c2>
   2a752:	ldr	r3, [pc, #720]	; (2aa24 <load_free_space_cache@@Base+0x87c>)
   2a754:	ldr	r0, [pc, #764]	; (2aa54 <load_free_space_cache@@Base+0x8ac>)
   2a756:	ldr.w	r3, [fp, r3]
   2a75a:	add	r0, pc
   2a75c:	ldr	r1, [r3, #0]
   2a75e:	blx	8de4 <fputs@plt+0x4>
   2a762:	ldr	r0, [r6, #32]
   2a764:	blx	87cc <free@plt+0x4>
   2a768:	b.n	2a6dc <load_free_space_cache@@Base+0x534>
   2a76a:	ldr	r3, [sp, #100]	; 0x64
   2a76c:	add.w	r2, r6, #36	; 0x24
   2a770:	add	r1, sp, #96	; 0x60
   2a772:	str	r2, [sp, #100]	; 0x64
   2a774:	strd	r1, r3, [r6, #36]	; 0x24
   2a778:	str	r2, [r3, #0]
   2a77a:	ldr	r3, [sp, #24]
   2a77c:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2a780:	str	r3, [sp, #24]
   2a782:	ldr	r3, [sp, #28]
   2a784:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2a788:	str	r3, [sp, #28]
   2a78a:	ldrd	r2, r3, [sp, #24]
   2a78e:	orrs	r3, r2
   2a790:	bne.w	2a678 <load_free_space_cache@@Base+0x4d0>
   2a794:	add.w	sl, sp, #184	; 0xb8
   2a798:	add.w	r9, sp, #96	; 0x60
   2a79c:	mov	r0, sl
   2a79e:	bl	29b70 <btrfs_print_tree@@Base+0x2ec>
   2a7a2:	ldr	r6, [sp, #96]	; 0x60
   2a7a4:	ldr.w	r7, [r6], #-36
   2a7a8:	subs	r7, #36	; 0x24
   2a7aa:	add.w	r3, r6, #36	; 0x24
   2a7ae:	cmp	r3, r9
   2a7b0:	bne.n	2a7e4 <load_free_space_cache@@Base+0x63c>
   2a7b2:	mov	r0, sl
   2a7b4:	bl	29b70 <btrfs_print_tree@@Base+0x2ec>
   2a7b8:	ldr	r3, [r5, #44]	; 0x2c
   2a7ba:	str	r3, [sp, #48]	; 0x30
   2a7bc:	ldr	r3, [pc, #664]	; (2aa58 <load_free_space_cache@@Base+0x8b0>)
   2a7be:	add	r3, pc
   2a7c0:	adds	r3, #75	; 0x4b
   2a7c2:	vmov	s16, r3
   2a7c6:	ldr	r3, [pc, #660]	; (2aa5c <load_free_space_cache@@Base+0x8b4>)
   2a7c8:	add	r3, pc
   2a7ca:	vmov	s17, r3
   2a7ce:	mov	r0, r5
   2a7d0:	movs	r6, #0
   2a7d2:	bl	172ca <rb_first@@Base>
   2a7d6:	mov	sl, r0
   2a7d8:	cmp.w	sl, #0
   2a7dc:	bne.n	2a822 <load_free_space_cache@@Base+0x67a>
   2a7de:	mov.w	r8, #1
   2a7e2:	b.n	2a4d6 <load_free_space_cache@@Base+0x32e>
   2a7e4:	ldrd	r1, r2, [r6, #36]	; 0x24
   2a7e8:	mov	r0, sl
   2a7ea:	str	r2, [r1, #4]
   2a7ec:	str	r1, [r2, #0]
   2a7ee:	ldr	r1, [sp, #216]	; 0xd8
   2a7f0:	strd	r3, r3, [r6, #36]	; 0x24
   2a7f4:	bl	29cb4 <btrfs_print_tree@@Base+0x430>
   2a7f8:	mov	r8, r0
   2a7fa:	cmp	r0, #0
   2a7fc:	bne.w	2a580 <load_free_space_cache@@Base+0x3d8>
   2a800:	ldr	r3, [sp, #196]	; 0xc4
   2a802:	ldr	r1, [sp, #184]	; 0xb8
   2a804:	ldr	r0, [r6, #32]
   2a806:	mov	r6, r7
   2a808:	ldr.w	r3, [r3, #464]	; 0x1d0
   2a80c:	ldr.w	r2, [r3, #388]	; 0x184
   2a810:	blx	8830 <memcpy@plt+0x4>
   2a814:	mov	r0, sl
   2a816:	bl	29b70 <btrfs_print_tree@@Base+0x2ec>
   2a81a:	ldr	r3, [r7, #36]	; 0x24
   2a81c:	sub.w	r7, r3, #36	; 0x24
   2a820:	b.n	2a7aa <load_free_space_cache@@Base+0x602>
   2a822:	ldr.w	r3, [sl, #32]
   2a826:	cmp	r3, #0
   2a828:	beq.w	2a978 <load_free_space_cache@@Base+0x7d0>
   2a82c:	ldrd	r2, r3, [sl, #16]
   2a830:	mov	r0, r5
   2a832:	strd	r2, r3, [sp, #24]
   2a836:	ldr	r3, [r5, #28]
   2a838:	asrs	r2, r3, #31
   2a83a:	mov	r1, r3
   2a83c:	strd	r1, r2, [sp, #40]	; 0x28
   2a840:	ldr	r2, [sp, #48]	; 0x30
   2a842:	muls	r3, r2
   2a844:	ldrd	r1, r2, [sp, #24]
   2a848:	lsls	r3, r3, #3
   2a84a:	adds	r1, r1, r3
   2a84c:	adc.w	r2, r2, #0
   2a850:	strd	r1, r2, [sp, #64]	; 0x40
   2a854:	mov	r1, sl
   2a856:	bl	29f84 <unlink_free_space@@Base>
   2a85a:	ldrd	r2, r3, [sl, #16]
   2a85e:	ldrd	r0, r1, [sp, #24]
   2a862:	ldr	r6, [r5, #28]
   2a864:	cmp	r3, r1
   2a866:	strd	r2, r3, [sp, #32]
   2a86a:	it	eq
   2a86c:	cmpeq	r2, r0
   2a86e:	mov	r8, r2
   2a870:	mov	r9, r3
   2a872:	ldrd	r2, r3, [sp, #32]
   2a876:	itt	cc
   2a878:	movcc	r8, r0
   2a87a:	movcc	r9, r1
   2a87c:	cmp	r9, r3
   2a87e:	vmov	r1, s16
   2a882:	it	eq
   2a884:	cmpeq	r8, r2
   2a886:	vmov	r0, s17
   2a88a:	movw	r2, #491	; 0x1eb
   2a88e:	ite	cc
   2a890:	movcc	r3, #1
   2a892:	movcs	r3, #0
   2a894:	bl	29be0 <btrfs_print_tree@@Base+0x35c>
   2a898:	ldr	r1, [sp, #32]
   2a89a:	mov	r2, r6
   2a89c:	movs	r3, #0
   2a89e:	subs.w	r0, r8, r1
   2a8a2:	ldr	r1, [sp, #36]	; 0x24
   2a8a4:	sbc.w	r1, r9, r1
   2a8a8:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2a8ac:	movs	r3, #0
   2a8ae:	mov	r2, r6
   2a8b0:	mov	r7, r0
   2a8b2:	ldrd	r0, r1, [sp, #40]	; 0x28
   2a8b6:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2a8ba:	ldr	r3, [r5, #44]	; 0x2c
   2a8bc:	ldr.w	r9, [sl, #32]
   2a8c0:	cmp.w	r7, r3, lsl #3
   2a8c4:	mov.w	r8, r3, lsl #3
   2a8c8:	str	r0, [sp, #40]	; 0x28
   2a8ca:	bcs.n	2a90e <load_free_space_cache@@Base+0x766>
   2a8cc:	movs	r3, #0
   2a8ce:	mov	r2, r7
   2a8d0:	mov	r1, r8
   2a8d2:	mov	r0, r9
   2a8d4:	bl	29b7c <btrfs_print_tree@@Base+0x2f8>
   2a8d8:	mov	r7, r0
   2a8da:	cmp	r8, r7
   2a8dc:	bhi.n	2a8ee <load_free_space_cache@@Base+0x746>
   2a8de:	ldr.w	r0, [sl, #32]
   2a8e2:	blx	87cc <free@plt+0x4>
   2a8e6:	mov	r0, sl
   2a8e8:	blx	87cc <free@plt+0x4>
   2a8ec:	b.n	2a7ce <load_free_space_cache@@Base+0x626>
   2a8ee:	mov.w	r3, #4294967295	; 0xffffffff
   2a8f2:	mov	r2, r7
   2a8f4:	mov	r1, r8
   2a8f6:	mov	r0, r9
   2a8f8:	bl	29b7c <btrfs_print_tree@@Base+0x2f8>
   2a8fc:	ldr	r2, [sp, #40]	; 0x28
   2a8fe:	subs	r3, r0, r7
   2a900:	cmp	r2, r3
   2a902:	bls.n	2a912 <load_free_space_cache@@Base+0x76a>
   2a904:	adds	r2, r0, #1
   2a906:	cmp	r8, r2
   2a908:	bls.n	2a90e <load_free_space_cache@@Base+0x766>
   2a90a:	movs	r3, #0
   2a90c:	b.n	2a8d0 <load_free_space_cache@@Base+0x728>
   2a90e:	mov	r7, r8
   2a910:	b.n	2a8da <load_free_space_cache@@Base+0x732>
   2a912:	cmp	r3, #0
   2a914:	beq.n	2a8de <load_free_space_cache@@Base+0x736>
   2a916:	muls	r7, r6
   2a918:	ldrd	r8, r9, [sp, #32]
   2a91c:	asrs	r1, r6, #31
   2a91e:	mov	r0, r5
   2a920:	adds.w	r8, r8, r7
   2a924:	umull	r6, r7, r3, r6
   2a928:	adc.w	r9, r9, #0
   2a92c:	mov	r2, r8
   2a92e:	mla	r7, r3, r1, r7
   2a932:	mov	r3, r9
   2a934:	strd	r6, r7, [sp]
   2a938:	bl	2a0a2 <btrfs_add_free_space@@Base>
   2a93c:	ldr	r1, [pc, #288]	; (2aa60 <load_free_space_cache@@Base+0x8b8>)
   2a93e:	movw	r2, #873	; 0x369
   2a942:	add	r1, pc
   2a944:	adds	r1, #89	; 0x59
   2a946:	mov	r3, r0
   2a948:	ldr	r0, [pc, #280]	; (2aa64 <load_free_space_cache@@Base+0x8bc>)
   2a94a:	add	r0, pc
   2a94c:	bl	29be0 <btrfs_print_tree@@Base+0x35c>
   2a950:	adds.w	r3, r8, r6
   2a954:	str	r3, [sp, #24]
   2a956:	adc.w	r3, r9, r7
   2a95a:	str	r3, [sp, #28]
   2a95c:	ldrd	r2, r3, [sp, #24]
   2a960:	ldrd	r0, r1, [sp, #64]	; 0x40
   2a964:	cmp	r3, r1
   2a966:	it	eq
   2a968:	cmpeq	r2, r0
   2a96a:	bcs.n	2a8de <load_free_space_cache@@Base+0x736>
   2a96c:	ldr	r3, [r5, #28]
   2a96e:	asrs	r2, r3, #31
   2a970:	mov	r1, r3
   2a972:	strd	r1, r2, [sp, #40]	; 0x28
   2a976:	b.n	2a85a <load_free_space_cache@@Base+0x6b2>
   2a978:	cbz	r6, 2a9ce <load_free_space_cache@@Base+0x826>
   2a97a:	ldrd	r2, r1, [r6, #24]
   2a97e:	ldrd	r3, r0, [r6, #16]
   2a982:	adds	r3, r3, r2
   2a984:	str	r3, [sp, #80]	; 0x50
   2a986:	adc.w	r3, r0, r1
   2a98a:	str	r3, [sp, #84]	; 0x54
   2a98c:	ldrd	r0, r1, [sp, #80]	; 0x50
   2a990:	ldrd	r2, r3, [sl, #16]
   2a994:	cmp	r1, r3
   2a996:	it	eq
   2a998:	cmpeq	r0, r2
   2a99a:	bne.n	2a9ce <load_free_space_cache@@Base+0x826>
   2a99c:	mov	r1, r6
   2a99e:	mov	r0, r5
   2a9a0:	bl	29f84 <unlink_free_space@@Base>
   2a9a4:	mov	r1, sl
   2a9a6:	mov	r0, r5
   2a9a8:	bl	29f84 <unlink_free_space@@Base>
   2a9ac:	ldrd	r1, r0, [sl, #24]
   2a9b0:	ldrd	r3, r2, [r6, #24]
   2a9b4:	adds	r3, r3, r1
   2a9b6:	adc.w	r2, r0, r2
   2a9ba:	mov	r0, sl
   2a9bc:	strd	r3, r2, [r6, #24]
   2a9c0:	blx	87cc <free@plt+0x4>
   2a9c4:	mov	r1, r6
   2a9c6:	mov	r0, r5
   2a9c8:	bl	29e7c <btrfs_print_tree@@Base+0x5f8>
   2a9cc:	b.n	2a7ce <load_free_space_cache@@Base+0x626>
   2a9ce:	mov	r0, sl
   2a9d0:	mov	r6, sl
   2a9d2:	bl	172ea <rb_next@@Base>
   2a9d6:	mov	sl, r0
   2a9d8:	b.n	2a7d8 <load_free_space_cache@@Base+0x630>
   2a9da:	mvn.w	r8, #11
   2a9de:	b.n	2a2f6 <load_free_space_cache@@Base+0x14e>
   2a9e0:	ldr	r0, [pc, #132]	; (2aa68 <load_free_space_cache@@Base+0x8c0>)
   2a9e2:	mov.w	r8, #4294967295	; 0xffffffff
   2a9e6:	add	r0, pc
   2a9e8:	bl	1a900 <__btrfs_error@@Base>
   2a9ec:	b.n	2a380 <load_free_space_cache@@Base+0x1d8>
   2a9ee:	cmp.w	r8, #0
   2a9f2:	bge.w	2a3a0 <load_free_space_cache@@Base+0x1f8>
   2a9f6:	ldrd	r3, r4, [sp, #56]	; 0x38
   2a9fa:	cmp	r3, #1
   2a9fc:	sbcs.w	r3, r4, #0
   2aa00:	bge.w	2a380 <load_free_space_cache@@Base+0x1d8>
   2aa04:	b.n	2a37c <load_free_space_cache@@Base+0x1d4>
   2aa06:	mov	r8, r0
   2aa08:	b.n	2a3a0 <load_free_space_cache@@Base+0x1f8>
   2aa0a:	mov	r0, r8
   2aa0c:	add	sp, #244	; 0xf4
   2aa0e:	vpop	{d8}
   2aa12:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aa16:	nop
   2aa18:	sbcs.w	r0, r6, r3
   2aa1c:	lsls	r4, r7, #9
   2aa1e:	movs	r0, r0
   2aa20:	sbc.w	r0, ip, r3
   2aa24:	lsls	r4, r1, #10
   2aa26:	movs	r0, r0
   2aa28:	ldr	r1, [sp, #460]	; 0x1cc
   2aa2a:	movs	r1, r0
   2aa2c:	ldr	r2, [sp, #200]	; 0xc8
   2aa2e:	movs	r1, r0
   2aa30:	ldr	r2, [sp, #876]	; 0x36c
   2aa32:	movs	r1, r0
   2aa34:			; <UNDEFINED> instruction: 0xe9880003
   2aa38:	ldr	r0, [sp, #504]	; 0x1f8
   2aa3a:	movs	r1, r0
   2aa3c:	str	r7, [sp, #892]	; 0x37c
   2aa3e:	movs	r1, r0
   2aa40:	str	r7, [sp, #632]	; 0x278
   2aa42:	movs	r1, r0
   2aa44:	str	r7, [sp, #64]	; 0x40
   2aa46:	movs	r1, r0
   2aa48:	ldr	r1, [sp, #912]	; 0x390
   2aa4a:	movs	r1, r0
   2aa4c:	str	r6, [sp, #988]	; 0x3dc
   2aa4e:	movs	r1, r0
   2aa50:	str	r6, [sp, #280]	; 0x118
   2aa52:	movs	r1, r0
   2aa54:	str	r5, [sp, #944]	; 0x3b0
   2aa56:	movs	r1, r0
   2aa58:	ldr	r0, [sp, #600]	; 0x258
   2aa5a:	movs	r1, r0
   2aa5c:	str	r5, [sp, #712]	; 0x2c8
   2aa5e:	movs	r1, r0
   2aa60:	str	r7, [sp, #72]	; 0x48
   2aa62:	movs	r1, r0
   2aa64:	subs	r7, #51	; 0x33
   2aa66:	movs	r1, r0
   2aa68:	str	r4, [sp, #44]	; 0x2c
   2aa6a:	movs	r1, r0

0002aa6c <btrfs_clear_free_space_cache@@Base>:
   2aa6c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aa70:	mov	fp, r1
   2aa72:	vpush	{d8}
   2aa76:	movs	r1, #1
   2aa78:	ldr	r2, [pc, #704]	; (2ad3c <btrfs_clear_free_space_cache@@Base+0x2d0>)
   2aa7a:	ldr	r3, [pc, #708]	; (2ad40 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   2aa7c:	add	r2, pc
   2aa7e:	ldr	r7, [r0, #28]
   2aa80:	sub	sp, #172	; 0xac
   2aa82:	ldr	r3, [r2, r3]
   2aa84:	mov	r0, r7
   2aa86:	ldr	r3, [r3, #0]
   2aa88:	str	r3, [sp, #164]	; 0xa4
   2aa8a:	mov.w	r3, #0
   2aa8e:	bl	2e404 <btrfs_start_transaction@@Base>
   2aa92:	cmn.w	r0, #4096	; 0x1000
   2aa96:	mov	r5, r0
   2aa98:	bls.n	2aab2 <btrfs_clear_free_space_cache@@Base+0x46>
   2aa9a:	mov	r4, r0
   2aa9c:	ldr	r2, [pc, #676]	; (2ad44 <btrfs_clear_free_space_cache@@Base+0x2d8>)
   2aa9e:	ldr	r3, [pc, #672]	; (2ad40 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   2aaa0:	add	r2, pc
   2aaa2:	ldr	r3, [r2, r3]
   2aaa4:	ldr	r2, [r3, #0]
   2aaa6:	ldr	r3, [sp, #164]	; 0xa4
   2aaa8:	eors	r2, r3
   2aaaa:	beq.w	2ad30 <btrfs_clear_free_space_cache@@Base+0x2c4>
   2aaae:	blx	88e4 <__stack_chk_fail@plt>
   2aab2:	add	r6, sp, #96	; 0x60
   2aab4:	mov.w	r8, #4294967295	; 0xffffffff
   2aab8:	mov.w	r9, #0
   2aabc:	add.w	sl, sp, #65	; 0x41
   2aac0:	mov	r0, r6
   2aac2:	bl	1b2cc <btrfs_init_path@@Base>
   2aac6:	mvn.w	r2, #10
   2aaca:	mov.w	r3, #4294967295	; 0xffffffff
   2aace:	strd	r2, r3, [sp, #56]	; 0x38
   2aad2:	ldr.w	r3, [fp, #40]	; 0x28
   2aad6:	mov	r1, r7
   2aad8:	mov	r0, r5
   2aada:	strb.w	r9, [sp, #64]	; 0x40
   2aade:	str.w	r3, [sp, #65]	; 0x41
   2aae2:	ldr.w	r3, [fp, #44]	; 0x2c
   2aae6:	str.w	r3, [sp, #69]	; 0x45
   2aaea:	add	r3, sp, #56	; 0x38
   2aaec:	vmov	s17, r3
   2aaf0:	movs	r3, #1
   2aaf2:	strd	r8, r3, [sp]
   2aaf6:	mov	r3, r6
   2aaf8:	vmov	r2, s17
   2aafc:	bl	1d6c0 <btrfs_search_slot@@Base>
   2ab00:	subs	r4, r0, #0
   2ab02:	bgt.w	2ad2c <btrfs_clear_free_space_cache@@Base+0x2c0>
   2ab06:	bne.n	2ab4a <btrfs_clear_free_space_cache@@Base+0xde>
   2ab08:	ldr	r0, [sp, #96]	; 0x60
   2ab0a:	movs	r2, #25
   2ab0c:	ldr	r3, [sp, #128]	; 0x80
   2ab0e:	add	r1, sp, #76	; 0x4c
   2ab10:	mla	r3, r2, r3, r0
   2ab14:	ldr.w	r2, [r3, #214]	; 0xd6
   2ab18:	movs	r3, #17
   2ab1a:	adds	r2, #101	; 0x65
   2ab1c:	bl	1a79e <read_extent_buffer@@Base>
   2ab20:	ldrd	r9, r3, [sp, #76]	; 0x4c
   2ab24:	mov	r2, r6
   2ab26:	mov	r1, r7
   2ab28:	mov	r0, r5
   2ab2a:	vmov	s16, r3
   2ab2e:	movs	r3, #1
   2ab30:	str	r3, [sp, #0]
   2ab32:	ldr	r3, [sp, #128]	; 0x80
   2ab34:	bl	1e87c <btrfs_del_items@@Base>
   2ab38:	subs	r4, r0, #0
   2ab3a:	bge.n	2ab5e <btrfs_clear_free_space_cache@@Base+0xf2>
   2ab3c:	ldr	r0, [pc, #520]	; (2ad48 <btrfs_clear_free_space_cache@@Base+0x2dc>)
   2ab3e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2ab42:	add	r0, pc
   2ab44:	str	r4, [sp, #0]
   2ab46:	bl	1a900 <__btrfs_error@@Base>
   2ab4a:	add	r0, sp, #96	; 0x60
   2ab4c:	bl	1b2dc <btrfs_release_path@@Base>
   2ab50:	cmp	r4, #0
   2ab52:	bne.n	2aa9c <btrfs_clear_free_space_cache@@Base+0x30>
   2ab54:	mov	r1, r7
   2ab56:	mov	r0, r5
   2ab58:	bl	2e684 <btrfs_commit_transaction@@Base>
   2ab5c:	b.n	2aa9c <btrfs_clear_free_space_cache@@Base+0x30>
   2ab5e:	mov	r0, r6
   2ab60:	bl	1b2dc <btrfs_release_path@@Base>
   2ab64:	mov.w	r3, #108	; 0x6c
   2ab68:	strb.w	r8, [sl]
   2ab6c:	mov	r1, r7
   2ab6e:	strb.w	r3, [sp, #64]	; 0x40
   2ab72:	mov	r0, r5
   2ab74:	movs	r3, #1
   2ab76:	strb.w	r8, [sl, #1]
   2ab7a:	strb.w	r8, [sl, #2]
   2ab7e:	strb.w	r8, [sl, #3]
   2ab82:	strb.w	r8, [sl, #4]
   2ab86:	strb.w	r8, [sl, #5]
   2ab8a:	strb.w	r8, [sl, #6]
   2ab8e:	strb.w	r8, [sl, #7]
   2ab92:	vmov	r2, s17
   2ab96:	strd	r8, r3, [sp]
   2ab9a:	mov	r3, r6
   2ab9c:	vstr	s16, [sp, #60]	; 0x3c
   2aba0:	str.w	r9, [sp, #56]	; 0x38
   2aba4:	bl	1d6c0 <btrfs_search_slot@@Base>
   2aba8:	subs	r4, r0, #0
   2abaa:	blt.n	2ac4c <btrfs_clear_free_space_cache@@Base+0x1e0>
   2abac:	movs	r3, #108	; 0x6c
   2abae:	str	r3, [sp, #44]	; 0x2c
   2abb0:	ldr	r3, [sp, #44]	; 0x2c
   2abb2:	mov	r2, r9
   2abb4:	mov	r1, r6
   2abb6:	mov	r0, r7
   2abb8:	str	r3, [sp, #0]
   2abba:	vmov	r3, s16
   2abbe:	bl	1ed78 <btrfs_previous_item@@Base>
   2abc2:	subs	r4, r0, #0
   2abc4:	ble.n	2ac58 <btrfs_clear_free_space_cache@@Base+0x1ec>
   2abc6:	mov	r0, r6
   2abc8:	bl	1b2dc <btrfs_release_path@@Base>
   2abcc:	movs	r3, #0
   2abce:	movs	r2, #1
   2abd0:	strb.w	r3, [sl, #1]
   2abd4:	strb.w	r3, [sl, #2]
   2abd8:	mov	r1, r7
   2abda:	strb.w	r3, [sl, #3]
   2abde:	mov	r0, r5
   2abe0:	strb.w	r3, [sl, #4]
   2abe4:	strb.w	r3, [sl, #5]
   2abe8:	strb.w	r3, [sl, #6]
   2abec:	strb.w	r3, [sl, #7]
   2abf0:	strb.w	r2, [sp, #64]	; 0x40
   2abf4:	strb.w	r3, [sp, #65]	; 0x41
   2abf8:	mov.w	r3, #4294967295	; 0xffffffff
   2abfc:	str	r2, [sp, #4]
   2abfe:	add	r2, sp, #56	; 0x38
   2ac00:	str	r3, [sp, #0]
   2ac02:	mov	r3, r6
   2ac04:	vstr	s16, [sp, #60]	; 0x3c
   2ac08:	str.w	r9, [sp, #56]	; 0x38
   2ac0c:	bl	1d6c0 <btrfs_search_slot@@Base>
   2ac10:	subs	r4, r0, #0
   2ac12:	ble.n	2ad14 <btrfs_clear_free_space_cache@@Base+0x2a8>
   2ac14:	ldr	r0, [pc, #308]	; (2ad4c <btrfs_clear_free_space_cache@@Base+0x2e0>)
   2ac16:	mov	r2, r9
   2ac18:	vmov	r3, s16
   2ac1c:	add	r0, pc
   2ac1e:	bl	1a884 <__btrfs_warning@@Base>
   2ac22:	movs	r3, #1
   2ac24:	mov	r2, r6
   2ac26:	str	r3, [sp, #0]
   2ac28:	mov	r1, r7
   2ac2a:	ldr	r3, [sp, #128]	; 0x80
   2ac2c:	mov	r0, r5
   2ac2e:	bl	1e87c <btrfs_del_items@@Base>
   2ac32:	subs	r4, r0, #0
   2ac34:	bge.n	2ab4a <btrfs_clear_free_space_cache@@Base+0xde>
   2ac36:	ldrd	r2, r3, [fp, #40]	; 0x28
   2ac3a:	ldr	r0, [pc, #276]	; (2ad50 <btrfs_clear_free_space_cache@@Base+0x2e4>)
   2ac3c:	str	r4, [sp, #8]
   2ac3e:	strd	r2, r3, [sp]
   2ac42:	add	r0, pc
   2ac44:	vmov	r3, s16
   2ac48:	mov	r2, r9
   2ac4a:	b.n	2ad0e <btrfs_clear_free_space_cache@@Base+0x2a2>
   2ac4c:	ldr	r0, [pc, #260]	; (2ad54 <btrfs_clear_free_space_cache@@Base+0x2e8>)
   2ac4e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2ac52:	add	r0, pc
   2ac54:	str	r4, [sp, #0]
   2ac56:	b.n	2ab46 <btrfs_clear_free_space_cache@@Base+0xda>
   2ac58:	beq.n	2ac66 <btrfs_clear_free_space_cache@@Base+0x1fa>
   2ac5a:	ldr	r0, [pc, #252]	; (2ad58 <btrfs_clear_free_space_cache@@Base+0x2ec>)
   2ac5c:	ldrd	r2, r3, [fp, #40]	; 0x28
   2ac60:	add	r0, pc
   2ac62:	str	r4, [sp, #0]
   2ac64:	b.n	2ab46 <btrfs_clear_free_space_cache@@Base+0xda>
   2ac66:	ldr	r4, [sp, #96]	; 0x60
   2ac68:	ldr.w	r8, [sp, #128]	; 0x80
   2ac6c:	vmov	r1, s17
   2ac70:	mov	r0, r4
   2ac72:	mov	r2, r8
   2ac74:	bl	29f1c <btrfs_print_tree@@Base+0x698>
   2ac78:	add.w	r0, r4, #96	; 0x60
   2ac7c:	movs	r2, #25
   2ac7e:	ldr.w	r1, [sp, #69]	; 0x45
   2ac82:	mla	r8, r2, r8, r0
   2ac86:	ldr.w	r4, [r8, #118]	; 0x76
   2ac8a:	adds	r4, #101	; 0x65
   2ac8c:	add.w	ip, r0, r4
   2ac90:	ldr.w	r4, [sp, #65]	; 0x41
   2ac94:	mov	r3, ip
   2ac96:	ldr.w	r2, [r3, #21]!
   2ac9a:	ldr	r3, [r3, #4]
   2ac9c:	vstr	s16, [sp, #28]
   2aca0:	str.w	r9, [sp, #24]
   2aca4:	strd	r4, r1, [sp, #32]
   2aca8:	ldrd	r0, r1, [r7, #472]	; 0x1d8
   2acac:	strd	r3, r2, [sp, #48]	; 0x30
   2acb0:	strd	r0, r1, [sp, #16]
   2acb4:	movs	r0, #0
   2acb6:	movs	r1, #0
   2acb8:	strd	r0, r1, [sp, #8]
   2acbc:	mov	r0, ip
   2acbe:	ldr.w	r4, [r0, #29]!
   2acc2:	ldr	r1, [r0, #4]
   2acc4:	mov	r0, r5
   2acc6:	strd	r4, r1, [sp]
   2acca:	mov	r1, r7
   2accc:	bl	240d4 <btrfs_free_extent@@Base>
   2acd0:	ldrd	r3, r2, [sp, #48]	; 0x30
   2acd4:	subs	r4, r0, #0
   2acd6:	bge.n	2ace0 <btrfs_clear_free_space_cache@@Base+0x274>
   2acd8:	ldr	r0, [pc, #128]	; (2ad5c <btrfs_clear_free_space_cache@@Base+0x2f0>)
   2acda:	str	r4, [sp, #0]
   2acdc:	add	r0, pc
   2acde:	b.n	2ab46 <btrfs_clear_free_space_cache@@Base+0xda>
   2ace0:	movs	r3, #1
   2ace2:	mov	r2, r6
   2ace4:	str	r3, [sp, #0]
   2ace6:	mov	r1, r7
   2ace8:	ldr	r3, [sp, #128]	; 0x80
   2acea:	mov	r0, r5
   2acec:	bl	1e87c <btrfs_del_items@@Base>
   2acf0:	subs	r4, r0, #0
   2acf2:	bge.w	2abb0 <btrfs_clear_free_space_cache@@Base+0x144>
   2acf6:	ldr.w	r2, [sp, #65]	; 0x41
   2acfa:	ldr.w	r3, [sp, #69]	; 0x45
   2acfe:	ldr	r0, [pc, #96]	; (2ad60 <btrfs_clear_free_space_cache@@Base+0x2f4>)
   2ad00:	str	r4, [sp, #8]
   2ad02:	strd	r2, r3, [sp]
   2ad06:	add	r0, pc
   2ad08:	vmov	r3, s16
   2ad0c:	mov	r2, r9
   2ad0e:	bl	1a900 <__btrfs_error@@Base>
   2ad12:	b.n	2ab4a <btrfs_clear_free_space_cache@@Base+0xde>
   2ad14:	beq.n	2ac22 <btrfs_clear_free_space_cache@@Base+0x1b6>
   2ad16:	ldrd	r2, r3, [fp, #40]	; 0x28
   2ad1a:	ldr	r0, [pc, #72]	; (2ad64 <btrfs_clear_free_space_cache@@Base+0x2f8>)
   2ad1c:	str	r4, [sp, #8]
   2ad1e:	strd	r2, r3, [sp]
   2ad22:	add	r0, pc
   2ad24:	vmov	r3, s16
   2ad28:	mov	r2, r9
   2ad2a:	b.n	2ad0e <btrfs_clear_free_space_cache@@Base+0x2a2>
   2ad2c:	mov	r4, r9
   2ad2e:	b.n	2ab4a <btrfs_clear_free_space_cache@@Base+0xde>
   2ad30:	mov	r0, r4
   2ad32:	add	sp, #172	; 0xac
   2ad34:	vpop	{d8}
   2ad38:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad3c:	b.n	2b2a8 <btrfs_add_root_ref@@Base+0x1f8>
   2ad3e:	movs	r3, r0
   2ad40:	lsls	r4, r7, #9
   2ad42:	movs	r0, r0
   2ad44:	b.n	2b268 <btrfs_add_root_ref@@Base+0x1b8>
   2ad46:	movs	r3, r0
   2ad48:	str	r3, [sp, #420]	; 0x1a4
   2ad4a:	movs	r1, r0
   2ad4c:	str	r3, [sp, #528]	; 0x210
   2ad4e:	movs	r1, r0
   2ad50:	str	r3, [sp, #816]	; 0x330
   2ad52:	movs	r1, r0
   2ad54:	str	r2, [sp, #596]	; 0x254
   2ad56:	movs	r1, r0
   2ad58:	str	r2, [sp, #540]	; 0x21c
   2ad5a:	movs	r1, r0
   2ad5c:	str	r2, [sp, #308]	; 0x134
   2ad5e:	movs	r1, r0
   2ad60:	str	r2, [sp, #340]	; 0x154
   2ad62:	movs	r1, r0
   2ad64:	str	r2, [sp, #664]	; 0x298
   2ad66:	movs	r1, r0
   2ad68:	ldr.w	ip, [pc, #76]	; 2adb8 <btrfs_clear_free_space_cache@@Base+0x34c>
   2ad6c:	ldr	r5, [pc, #76]	; (2adbc <btrfs_clear_free_space_cache@@Base+0x350>)
   2ad6e:	add	ip, pc
   2ad70:	ldr	r4, [pc, #76]	; (2adc0 <btrfs_clear_free_space_cache@@Base+0x354>)
   2ad72:	push	{lr}
   2ad74:	sub	sp, #92	; 0x5c
   2ad76:	ldr.w	r5, [ip, r5]
   2ad7a:	add	r4, pc
   2ad7c:	ldr	r5, [r5, #0]
   2ad7e:	str	r5, [sp, #84]	; 0x54
   2ad80:	mov.w	r5, #0
   2ad84:	ldr	r5, [pc, #60]	; (2adc4 <btrfs_clear_free_space_cache@@Base+0x358>)
   2ad86:	ldr	r4, [r4, r5]
   2ad88:	strd	r2, r1, [sp]
   2ad8c:	movs	r1, #1
   2ad8e:	strd	r0, r3, [sp, #8]
   2ad92:	ldr	r2, [pc, #52]	; (2adc8 <btrfs_clear_free_space_cache@@Base+0x35c>)
   2ad94:	ldr	r3, [pc, #52]	; (2adcc <btrfs_clear_free_space_cache@@Base+0x360>)
   2ad96:	ldr	r0, [r4, #0]
   2ad98:	add	r4, sp, #20
   2ad9a:	add	r3, pc
   2ad9c:	add	r2, pc
   2ad9e:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2ada2:	movs	r1, #16
   2ada4:	mov	r0, r4
   2ada6:	blx	8ae0 <backtrace@plt>
   2adaa:	movs	r2, #2
   2adac:	mov	r1, r0
   2adae:	mov	r0, r4
   2adb0:	blx	8e50 <backtrace_symbols_fd@plt>
   2adb4:	blx	8e08 <abort@plt>
   2adb8:	svc	194	; 0xc2
   2adba:	movs	r3, r0
   2adbc:	lsls	r4, r7, #9
   2adbe:	movs	r0, r0
   2adc0:	svc	182	; 0xb6
   2adc2:	movs	r3, r0
   2adc4:	lsls	r4, r1, #10
   2adc6:	movs	r0, r0
   2adc8:	movs	r2, #11
   2adca:	movs	r1, r0
   2adcc:	str	r3, [sp, #144]	; 0x90
   2adce:	movs	r1, r0

0002add0 <btrfs_find_last_root@@Base>:
   2add0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2add4:	mov	r6, r2
   2add6:	ldr	r2, [pc, #276]	; (2aeec <btrfs_find_last_root@@Base+0x11c>)
   2add8:	mov	r7, r3
   2adda:	ldr	r3, [pc, #276]	; (2aef0 <btrfs_find_last_root@@Base+0x120>)
   2addc:	sub	sp, #76	; 0x4c
   2adde:	add	r2, pc
   2ade0:	str	r0, [sp, #12]
   2ade2:	ldr	r3, [r2, r3]
   2ade4:	ldrd	fp, r5, [sp, #112]	; 0x70
   2ade8:	ldr	r3, [r3, #0]
   2adea:	str	r3, [sp, #68]	; 0x44
   2adec:	mov.w	r3, #0
   2adf0:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2adf4:	mov	r4, r0
   2adf6:	cmp	r0, #0
   2adf8:	beq.n	2aedc <btrfs_find_last_root@@Base+0x10c>
   2adfa:	mov.w	r8, #0
   2adfe:	mov.w	r2, #4294967295	; 0xffffffff
   2ae02:	movs	r3, #132	; 0x84
   2ae04:	strb.w	r2, [sp, #37]	; 0x25
   2ae08:	strb.w	r3, [sp, #36]	; 0x24
   2ae0c:	mov	r3, r0
   2ae0e:	strb.w	r2, [sp, #38]	; 0x26
   2ae12:	mov	r0, r8
   2ae14:	strb.w	r2, [sp, #39]	; 0x27
   2ae18:	strb.w	r2, [sp, #40]	; 0x28
   2ae1c:	strb.w	r2, [sp, #41]	; 0x29
   2ae20:	strb.w	r2, [sp, #42]	; 0x2a
   2ae24:	strb.w	r2, [sp, #43]	; 0x2b
   2ae28:	strb.w	r2, [sp, #44]	; 0x2c
   2ae2c:	add	r2, sp, #28
   2ae2e:	ldr	r1, [sp, #12]
   2ae30:	strd	r8, r8, [sp]
   2ae34:	strd	r6, r7, [sp, #28]
   2ae38:	bl	1d6c0 <btrfs_search_slot@@Base>
   2ae3c:	subs.w	r9, r0, #0
   2ae40:	blt.n	2ae4a <btrfs_find_last_root@@Base+0x7a>
   2ae42:	ldr	r2, [r4, #32]
   2ae44:	cbnz	r2, 2ae64 <btrfs_find_last_root@@Base+0x94>
   2ae46:	mvn.w	r9, #1
   2ae4a:	mov	r0, r4
   2ae4c:	bl	1b302 <btrfs_free_path@@Base>
   2ae50:	ldr	r2, [pc, #160]	; (2aef4 <btrfs_find_last_root@@Base+0x124>)
   2ae52:	ldr	r3, [pc, #156]	; (2aef0 <btrfs_find_last_root@@Base+0x120>)
   2ae54:	add	r2, pc
   2ae56:	ldr	r3, [r2, r3]
   2ae58:	ldr	r2, [r3, #0]
   2ae5a:	ldr	r3, [sp, #68]	; 0x44
   2ae5c:	eors	r2, r3
   2ae5e:	beq.n	2aee2 <btrfs_find_last_root@@Base+0x112>
   2ae60:	blx	88e4 <__stack_chk_fail@plt>
   2ae64:	cmp.w	r9, #0
   2ae68:	bne.n	2ae7a <btrfs_find_last_root@@Base+0xaa>
   2ae6a:	ldr	r1, [pc, #140]	; (2aef8 <btrfs_find_last_root@@Base+0x128>)
   2ae6c:	movs	r3, #1
   2ae6e:	ldr	r0, [pc, #140]	; (2aefc <btrfs_find_last_root@@Base+0x12c>)
   2ae70:	movs	r2, #50	; 0x32
   2ae72:	add	r1, pc
   2ae74:	add	r0, pc
   2ae76:	bl	2ad68 <btrfs_clear_free_space_cache@@Base+0x2fc>
   2ae7a:	subs	r2, #1
   2ae7c:	movs	r3, #25
   2ae7e:	ldr	r0, [r4, #0]
   2ae80:	add	r1, sp, #48	; 0x30
   2ae82:	muls	r2, r3
   2ae84:	movs	r3, #17
   2ae86:	str	r0, [sp, #16]
   2ae88:	adds	r2, #101	; 0x65
   2ae8a:	str	r2, [sp, #20]
   2ae8c:	bl	1a79e <read_extent_buffer@@Base>
   2ae90:	ldrb.w	r9, [sp, #56]	; 0x38
   2ae94:	ldr.w	r3, [sp, #61]	; 0x3d
   2ae98:	cmp.w	r9, #132	; 0x84
   2ae9c:	ldr.w	sl, [sp, #57]	; 0x39
   2aea0:	str	r3, [sp, #12]
   2aea2:	ldrd	r2, r3, [sp, #48]	; 0x30
   2aea6:	bne.n	2ae46 <btrfs_find_last_root@@Base+0x76>
   2aea8:	cmp	r7, r3
   2aeaa:	it	eq
   2aeac:	cmpeq	r6, r2
   2aeae:	ldrd	r0, r2, [sp, #16]
   2aeb2:	bne.n	2ae46 <btrfs_find_last_root@@Base+0x76>
   2aeb4:	add	r2, r0
   2aeb6:	movw	r3, #439	; 0x1b7
   2aeba:	mov	r1, fp
   2aebc:	ldr.w	r2, [r2, #113]	; 0x71
   2aec0:	adds	r2, #101	; 0x65
   2aec2:	bl	1a79e <read_extent_buffer@@Base>
   2aec6:	ldr	r3, [sp, #12]
   2aec8:	strb.w	r9, [r5, #8]
   2aecc:	mov	r9, r8
   2aece:	str	r6, [r5, #0]
   2aed0:	str	r7, [r5, #4]
   2aed2:	str.w	sl, [r5, #9]
   2aed6:	str.w	r3, [r5, #13]
   2aeda:	b.n	2ae4a <btrfs_find_last_root@@Base+0x7a>
   2aedc:	mvn.w	r9, #11
   2aee0:	b.n	2ae50 <btrfs_find_last_root@@Base+0x80>
   2aee2:	mov	r0, r9
   2aee4:	add	sp, #76	; 0x4c
   2aee6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2aeea:	nop
   2aeec:	svc	82	; 0x52
   2aeee:	movs	r3, r0
   2aef0:	lsls	r4, r7, #9
   2aef2:	movs	r0, r0
   2aef4:	udf	#220	; 0xdc
   2aef6:	movs	r3, r0
   2aef8:	str	r2, [sp, #388]	; 0x184
   2aefa:	movs	r1, r0
   2aefc:	subs	r7, #94	; 0x5e
   2aefe:	movs	r1, r0

0002af00 <btrfs_update_root@@Base>:
   2af00:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2af04:	mov	r8, r2
   2af06:	ldr	r2, [pc, #284]	; (2b024 <btrfs_update_root@@Base+0x124>)
   2af08:	mov	r6, r3
   2af0a:	ldr	r3, [pc, #284]	; (2b028 <btrfs_update_root@@Base+0x128>)
   2af0c:	sub	sp, #20
   2af0e:	add	r2, pc
   2af10:	mov	r7, r0
   2af12:	mov	fp, r1
   2af14:	ldr	r3, [r2, r3]
   2af16:	ldr	r3, [r3, #0]
   2af18:	str	r3, [sp, #12]
   2af1a:	mov.w	r3, #0
   2af1e:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2af22:	mov	r5, r0
   2af24:	cmp	r0, #0
   2af26:	beq.n	2b014 <btrfs_update_root@@Base+0x114>
   2af28:	movs	r3, #0
   2af2a:	mov.w	r9, #1
   2af2e:	mov	r2, r8
   2af30:	strd	r3, r9, [sp]
   2af34:	mov	r1, fp
   2af36:	mov	r3, r0
   2af38:	mov	r0, r7
   2af3a:	bl	1d6c0 <btrfs_search_slot@@Base>
   2af3e:	subs	r4, r0, #0
   2af40:	blt.n	2af96 <btrfs_update_root@@Base+0x96>
   2af42:	beq.n	2af56 <btrfs_update_root@@Base+0x56>
   2af44:	ldr	r1, [pc, #228]	; (2b02c <btrfs_update_root@@Base+0x12c>)
   2af46:	mov	r3, r9
   2af48:	ldr	r0, [pc, #228]	; (2b030 <btrfs_update_root@@Base+0x130>)
   2af4a:	movs	r2, #86	; 0x56
   2af4c:	add	r1, pc
   2af4e:	adds	r1, #21
   2af50:	add	r0, pc
   2af52:	bl	2ad68 <btrfs_clear_free_space_cache@@Base+0x2fc>
   2af56:	ldr	r0, [r5, #0]
   2af58:	mov.w	sl, #25
   2af5c:	ldr	r3, [r5, #32]
   2af5e:	mla	r3, sl, r3, r0
   2af62:	add.w	r2, r3, #197	; 0xc5
   2af66:	ldr.w	r3, [r3, #218]	; 0xda
   2af6a:	cmp.w	r3, #438	; 0x1b6
   2af6e:	bls.n	2afb0 <btrfs_update_root@@Base+0xb0>
   2af70:	ldr.w	r2, [r2, #17]
   2af74:	ldr.w	r1, [r6, #160]	; 0xa0
   2af78:	adds	r2, #101	; 0x65
   2af7a:	ldr.w	r3, [r6, #164]	; 0xa4
   2af7e:	str.w	r1, [r6, #239]	; 0xef
   2af82:	mov	r1, r6
   2af84:	str.w	r3, [r6, #243]	; 0xf3
   2af88:	movw	r3, #439	; 0x1b7
   2af8c:	bl	1a7b4 <write_extent_buffer@@Base>
   2af90:	ldr	r0, [r5, #0]
   2af92:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2af96:	mov	r0, r5
   2af98:	bl	1b302 <btrfs_free_path@@Base>
   2af9c:	ldr	r2, [pc, #148]	; (2b034 <btrfs_update_root@@Base+0x134>)
   2af9e:	ldr	r3, [pc, #136]	; (2b028 <btrfs_update_root@@Base+0x128>)
   2afa0:	add	r2, pc
   2afa2:	ldr	r3, [r2, r3]
   2afa4:	ldr	r2, [r3, #0]
   2afa6:	ldr	r3, [sp, #12]
   2afa8:	eors	r2, r3
   2afaa:	beq.n	2b01a <btrfs_update_root@@Base+0x11a>
   2afac:	blx	88e4 <__stack_chk_fail@plt>
   2afb0:	mov	r0, r5
   2afb2:	bl	1b2dc <btrfs_release_path@@Base>
   2afb6:	mov.w	r3, #4294967295	; 0xffffffff
   2afba:	mov	r2, r8
   2afbc:	str	r3, [sp, #0]
   2afbe:	mov	r1, fp
   2afc0:	mov	r3, r5
   2afc2:	mov	r0, r7
   2afc4:	str.w	r9, [sp, #4]
   2afc8:	bl	1d6c0 <btrfs_search_slot@@Base>
   2afcc:	subs	r4, r0, #0
   2afce:	blt.n	2af96 <btrfs_update_root@@Base+0x96>
   2afd0:	str.w	r9, [sp]
   2afd4:	mov	r2, r5
   2afd6:	ldr	r3, [r5, #32]
   2afd8:	mov	r1, fp
   2afda:	mov	r0, r7
   2afdc:	bl	1e87c <btrfs_del_items@@Base>
   2afe0:	subs	r4, r0, #0
   2afe2:	blt.n	2af96 <btrfs_update_root@@Base+0x96>
   2afe4:	mov	r0, r5
   2afe6:	bl	1b2dc <btrfs_release_path@@Base>
   2afea:	movw	r3, #439	; 0x1b7
   2afee:	mov	r2, r5
   2aff0:	strd	r9, r3, [sp, #4]
   2aff4:	mov	r1, fp
   2aff6:	add	r3, sp, #8
   2aff8:	mov	r0, r7
   2affa:	str	r3, [sp, #0]
   2affc:	mov	r3, r8
   2affe:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2b002:	subs	r4, r0, #0
   2b004:	blt.n	2af96 <btrfs_update_root@@Base+0x96>
   2b006:	ldr	r0, [r5, #0]
   2b008:	ldr	r3, [r5, #32]
   2b00a:	mla	r3, sl, r3, r0
   2b00e:	ldr.w	r2, [r3, #214]	; 0xd6
   2b012:	b.n	2af74 <btrfs_update_root@@Base+0x74>
   2b014:	mvn.w	r4, #11
   2b018:	b.n	2af9c <btrfs_update_root@@Base+0x9c>
   2b01a:	mov	r0, r4
   2b01c:	add	sp, #20
   2b01e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b022:	nop
   2b024:	udf	#34	; 0x22
   2b026:	movs	r3, r0
   2b028:	lsls	r4, r7, #9
   2b02a:	movs	r0, r0
   2b02c:	str	r1, [sp, #540]	; 0x21c
   2b02e:	movs	r1, r0
   2b030:	str	r1, [sp, #488]	; 0x1e8
   2b032:	movs	r1, r0
   2b034:	ble.n	2af58 <btrfs_update_root@@Base+0x58>
   2b036:	movs	r3, r0

0002b038 <btrfs_insert_root@@Base>:
   2b038:	push	{r0, r1, r4, r5, r6, lr}
   2b03a:	movw	r4, #439	; 0x1b7
   2b03e:	ldr.w	r6, [r3, #160]	; 0xa0
   2b042:	ldr.w	r5, [r3, #164]	; 0xa4
   2b046:	str	r4, [sp, #0]
   2b048:	str.w	r6, [r3, #239]	; 0xef
   2b04c:	str.w	r5, [r3, #243]	; 0xf3
   2b050:	bl	1e74c <btrfs_insert_item@@Base>
   2b054:	add	sp, #8
   2b056:	pop	{r4, r5, r6, pc}

0002b058 <btrfs_del_root@@Base>:
   2b058:	push	{r4, r5, r6, r7, lr}
   2b05a:	sub	sp, #20
   2b05c:	mov	r6, r0
   2b05e:	strd	r2, r1, [sp, #8]
   2b062:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2b066:	mov	r5, r0
   2b068:	cbz	r0, 2b0aa <btrfs_del_root@@Base+0x52>
   2b06a:	ldrd	r2, r1, [sp, #8]
   2b06e:	mov.w	r3, #4294967295	; 0xffffffff
   2b072:	movs	r7, #1
   2b074:	strd	r3, r7, [sp]
   2b078:	mov	r3, r0
   2b07a:	mov	r0, r6
   2b07c:	str	r1, [sp, #8]
   2b07e:	bl	1d6c0 <btrfs_search_slot@@Base>
   2b082:	subs	r4, r0, #0
   2b084:	blt.n	2b098 <btrfs_del_root@@Base+0x40>
   2b086:	bne.n	2b0a4 <btrfs_del_root@@Base+0x4c>
   2b088:	str	r7, [sp, #0]
   2b08a:	mov	r2, r5
   2b08c:	ldr	r3, [r5, #32]
   2b08e:	mov	r0, r6
   2b090:	ldr	r1, [sp, #8]
   2b092:	bl	1e87c <btrfs_del_items@@Base>
   2b096:	mov	r4, r0
   2b098:	mov	r0, r5
   2b09a:	bl	1b302 <btrfs_free_path@@Base>
   2b09e:	mov	r0, r4
   2b0a0:	add	sp, #20
   2b0a2:	pop	{r4, r5, r6, r7, pc}
   2b0a4:	mvn.w	r4, #1
   2b0a8:	b.n	2b098 <btrfs_del_root@@Base+0x40>
   2b0aa:	mvn.w	r4, #11
   2b0ae:	b.n	2b09e <btrfs_del_root@@Base+0x46>

0002b0b0 <btrfs_add_root_ref@@Base>:
   2b0b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b0b4:	sub	sp, #68	; 0x44
   2b0b6:	mov	r7, r3
   2b0b8:	mov	fp, r2
   2b0ba:	ldr	r3, [sp, #116]	; 0x74
   2b0bc:	mov	r6, r0
   2b0be:	ldr	r2, [sp, #112]	; 0x70
   2b0c0:	str	r1, [sp, #28]
   2b0c2:	str	r3, [sp, #20]
   2b0c4:	ldr	r3, [sp, #128]	; 0x80
   2b0c6:	str	r2, [sp, #24]
   2b0c8:	ldr	r2, [pc, #208]	; (2b19c <btrfs_add_root_ref@@Base+0xec>)
   2b0ca:	str	r3, [sp, #12]
   2b0cc:	ldr	r3, [sp, #132]	; 0x84
   2b0ce:	add	r2, pc
   2b0d0:	ldrd	sl, r9, [sp, #120]	; 0x78
   2b0d4:	ldrd	r8, r5, [sp, #136]	; 0x88
   2b0d8:	str	r3, [sp, #16]
   2b0da:	ldr	r3, [pc, #196]	; (2b1a0 <btrfs_add_root_ref@@Base+0xf0>)
   2b0dc:	ldr	r3, [r2, r3]
   2b0de:	ldr	r3, [r3, #0]
   2b0e0:	str	r3, [sp, #60]	; 0x3c
   2b0e2:	mov.w	r3, #0
   2b0e6:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2b0ea:	mov	r4, r0
   2b0ec:	cmp	r0, #0
   2b0ee:	beq.n	2b18e <btrfs_add_root_ref@@Base+0xde>
   2b0f0:	ldrb.w	r0, [sp, #104]	; 0x68
   2b0f4:	ldr	r2, [sp, #24]
   2b0f6:	ldr	r3, [sp, #20]
   2b0f8:	strb.w	r0, [sp, #48]	; 0x30
   2b0fc:	mov	r0, r6
   2b0fe:	str.w	r2, [sp, #49]	; 0x31
   2b102:	mov	r2, r4
   2b104:	str.w	r3, [sp, #53]	; 0x35
   2b108:	add.w	r3, r5, #18
   2b10c:	ldr	r1, [sp, #28]
   2b10e:	str	r3, [sp, #36]	; 0x24
   2b110:	movs	r3, #1
   2b112:	str	r3, [sp, #4]
   2b114:	add	r3, sp, #36	; 0x24
   2b116:	str	r3, [sp, #0]
   2b118:	add	r3, sp, #40	; 0x28
   2b11a:	strd	fp, r7, [sp, #40]	; 0x28
   2b11e:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2b122:	mov	r6, r0
   2b124:	cbz	r0, 2b138 <btrfs_add_root_ref@@Base+0x88>
   2b126:	ldr	r1, [pc, #124]	; (2b1a4 <btrfs_add_root_ref@@Base+0xf4>)
   2b128:	mov	r3, r0
   2b12a:	ldr	r0, [pc, #124]	; (2b1a8 <btrfs_add_root_ref@@Base+0xf8>)
   2b12c:	movs	r2, #209	; 0xd1
   2b12e:	add	r1, pc
   2b130:	adds	r1, #39	; 0x27
   2b132:	add	r0, pc
   2b134:	bl	2ad68 <btrfs_clear_free_space_cache@@Base+0x2fc>
   2b138:	ldr	r0, [r4, #0]
   2b13a:	movs	r2, #25
   2b13c:	ldr	r3, [r4, #32]
   2b13e:	add.w	r1, r0, #96	; 0x60
   2b142:	mla	r3, r2, r3, r1
   2b146:	ldr.w	r2, [r3, #118]	; 0x76
   2b14a:	add.w	r7, r2, #101	; 0x65
   2b14e:	adds	r2, #119	; 0x77
   2b150:	adds	r3, r1, r7
   2b152:	str.w	sl, [r1, r7]
   2b156:	ldr	r1, [sp, #12]
   2b158:	str.w	r9, [r3, #4]
   2b15c:	strh	r5, [r3, #16]
   2b15e:	str	r1, [r3, #8]
   2b160:	ldr	r1, [sp, #16]
   2b162:	str	r0, [sp, #12]
   2b164:	str	r1, [r3, #12]
   2b166:	mov	r3, r5
   2b168:	mov	r1, r8
   2b16a:	bl	1a7b4 <write_extent_buffer@@Base>
   2b16e:	ldr	r0, [sp, #12]
   2b170:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2b174:	mov	r0, r4
   2b176:	bl	1b302 <btrfs_free_path@@Base>
   2b17a:	ldr	r2, [pc, #48]	; (2b1ac <btrfs_add_root_ref@@Base+0xfc>)
   2b17c:	ldr	r3, [pc, #32]	; (2b1a0 <btrfs_add_root_ref@@Base+0xf0>)
   2b17e:	add	r2, pc
   2b180:	ldr	r3, [r2, r3]
   2b182:	ldr	r2, [r3, #0]
   2b184:	ldr	r3, [sp, #60]	; 0x3c
   2b186:	eors	r2, r3
   2b188:	beq.n	2b194 <btrfs_add_root_ref@@Base+0xe4>
   2b18a:	blx	88e4 <__stack_chk_fail@plt>
   2b18e:	mvn.w	r6, #11
   2b192:	b.n	2b17a <btrfs_add_root_ref@@Base+0xca>
   2b194:	mov	r0, r6
   2b196:	add	sp, #68	; 0x44
   2b198:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b19c:	bgt.n	2b264 <btrfs_add_root_ref@@Base+0x1b4>
   2b19e:	movs	r3, r0
   2b1a0:	lsls	r4, r7, #9
   2b1a2:	movs	r0, r0
   2b1a4:	ldrh	r5, [r4, #60]	; 0x3c
   2b1a6:	movs	r1, r0
   2b1a8:	adds	r7, #75	; 0x4b
   2b1aa:	movs	r1, r0
   2b1ac:	blt.n	2b114 <btrfs_add_root_ref@@Base+0x64>
   2b1ae:	movs	r3, r0
   2b1b0:	push	{r4, r5, lr}
   2b1b2:	movs	r1, #0
   2b1b4:	ldr	r4, [r0, #40]	; 0x28
   2b1b6:	mov	r3, r1
   2b1b8:	ldr	r5, [r0, #64]	; 0x40
   2b1ba:	and.w	r2, r4, #128	; 0x80
   2b1be:	orrs	r3, r2
   2b1c0:	bne.n	2b1d4 <btrfs_add_root_ref@@Base+0x124>
   2b1c2:	and.w	r2, r4, #256	; 0x100
   2b1c6:	mov	r3, r1
   2b1c8:	orrs	r3, r2
   2b1ca:	ite	ne
   2b1cc:	movne	r0, #2
   2b1ce:	moveq	r0, r1
   2b1d0:	subs	r0, r5, r0
   2b1d2:	pop	{r4, r5, pc}
   2b1d4:	movs	r0, #1
   2b1d6:	b.n	2b1d0 <btrfs_add_root_ref@@Base+0x120>
   2b1d8:	push	{r3, r4, r5, r6, r7, lr}
   2b1da:	mov	r6, r0
   2b1dc:	ldr	r3, [pc, #40]	; (2b208 <btrfs_add_root_ref@@Base+0x158>)
   2b1de:	add	r3, pc
   2b1e0:	ldr	r4, [r3, #0]
   2b1e2:	mov	r5, r3
   2b1e4:	subs	r4, #80	; 0x50
   2b1e6:	add.w	r3, r4, #80	; 0x50
   2b1ea:	cmp	r5, r3
   2b1ec:	bne.n	2b1f4 <btrfs_add_root_ref@@Base+0x144>
   2b1ee:	movs	r4, #0
   2b1f0:	mov	r0, r4
   2b1f2:	pop	{r3, r4, r5, r6, r7, pc}
   2b1f4:	movs	r2, #16
   2b1f6:	mov	r1, r4
   2b1f8:	mov	r0, r6
   2b1fa:	blx	887c <memcmp@plt+0x4>
   2b1fe:	cmp	r0, #0
   2b200:	beq.n	2b1f0 <btrfs_add_root_ref@@Base+0x140>
   2b202:	ldr	r4, [r4, #80]	; 0x50
   2b204:	subs	r4, #80	; 0x50
   2b206:	b.n	2b1e6 <btrfs_add_root_ref@@Base+0x136>
   2b208:	vaddl.s16	q8, d10, d3
   2b20c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2b210:	add.w	r8, r0, #72	; 0x48
   2b214:	ldr	r5, [sp, #24]
   2b216:	mov	r6, r2
   2b218:	ldr	r4, [r0, #72]	; 0x48
   2b21a:	mov	r7, r3
   2b21c:	cmp	r4, r8
   2b21e:	bne.n	2b228 <btrfs_add_root_ref@@Base+0x178>
   2b220:	movs	r4, #0
   2b222:	mov	r0, r4
   2b224:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2b228:	ldrd	r2, r3, [r4, #64]	; 0x40
   2b22c:	cmp	r3, r7
   2b22e:	it	eq
   2b230:	cmpeq	r2, r6
   2b232:	bne.n	2b248 <btrfs_add_root_ref@@Base+0x198>
   2b234:	cmp	r5, #0
   2b236:	beq.n	2b222 <btrfs_add_root_ref@@Base+0x172>
   2b238:	add.w	r0, r4, #112	; 0x70
   2b23c:	movs	r2, #16
   2b23e:	mov	r1, r5
   2b240:	blx	887c <memcmp@plt+0x4>
   2b244:	cmp	r0, #0
   2b246:	beq.n	2b222 <btrfs_add_root_ref@@Base+0x172>
   2b248:	ldr	r4, [r4, #0]
   2b24a:	b.n	2b21c <btrfs_add_root_ref@@Base+0x16c>
   2b24c:	push	{r3, r4, r5, r6, r7, lr}
   2b24e:	mov	r1, r0
   2b250:	mov	r5, r3
   2b252:	and.w	r6, r1, #1584	; 0x630
   2b256:	movs	r3, #0
   2b258:	mov	r4, r2
   2b25a:	mov	r7, r3
   2b25c:	orrs.w	r2, r6, r7
   2b260:	ldr	r0, [sp, #24]
   2b262:	bne.n	2b282 <btrfs_add_root_ref@@Base+0x1d2>
   2b264:	and.w	r6, r1, #64	; 0x40
   2b268:	orrs.w	r2, r6, r7
   2b26c:	beq.n	2b288 <btrfs_add_root_ref@@Base+0x1d8>
   2b26e:	ldr	r1, [sp, #28]
   2b270:	bl	3c420 <btrfs_util_strerror@@Base+0x290>
   2b274:	asrs	r3, r0, #31
   2b276:	muls	r3, r4
   2b278:	mla	r3, r0, r5, r3
   2b27c:	umull	r4, r5, r4, r0
   2b280:	add	r5, r3
   2b282:	mov	r0, r4
   2b284:	mov	r1, r5
   2b286:	pop	{r3, r4, r5, r6, r7, pc}
   2b288:	and.w	r6, r1, #128	; 0x80
   2b28c:	orrs.w	r2, r6, r7
   2b290:	beq.n	2b296 <btrfs_add_root_ref@@Base+0x1e6>
   2b292:	subs	r0, #1
   2b294:	b.n	2b274 <btrfs_add_root_ref@@Base+0x1c4>
   2b296:	and.w	r6, r1, #256	; 0x100
   2b29a:	orrs.w	r3, r6, r7
   2b29e:	it	ne
   2b2a0:	subne	r0, #2
   2b2a2:	b.n	2b274 <btrfs_add_root_ref@@Base+0x1c4>
   2b2a4:	ldr.w	ip, [pc, #76]	; 2b2f4 <btrfs_add_root_ref@@Base+0x244>
   2b2a8:	ldr	r5, [pc, #76]	; (2b2f8 <btrfs_add_root_ref@@Base+0x248>)
   2b2aa:	add	ip, pc
   2b2ac:	ldr	r4, [pc, #76]	; (2b2fc <btrfs_add_root_ref@@Base+0x24c>)
   2b2ae:	push	{lr}
   2b2b0:	sub	sp, #92	; 0x5c
   2b2b2:	ldr.w	r5, [ip, r5]
   2b2b6:	add	r4, pc
   2b2b8:	ldr	r5, [r5, #0]
   2b2ba:	str	r5, [sp, #84]	; 0x54
   2b2bc:	mov.w	r5, #0
   2b2c0:	ldr	r5, [pc, #60]	; (2b300 <btrfs_add_root_ref@@Base+0x250>)
   2b2c2:	ldr	r4, [r4, r5]
   2b2c4:	ldr	r5, [sp, #96]	; 0x60
   2b2c6:	strd	r3, r2, [sp]
   2b2ca:	mov	r3, r1
   2b2cc:	ldr	r2, [pc, #52]	; (2b304 <btrfs_add_root_ref@@Base+0x254>)
   2b2ce:	movs	r1, #1
   2b2d0:	strd	r0, r5, [sp, #8]
   2b2d4:	ldr	r0, [r4, #0]
   2b2d6:	add	r4, sp, #20
   2b2d8:	add	r2, pc
   2b2da:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2b2de:	movs	r1, #16
   2b2e0:	mov	r0, r4
   2b2e2:	blx	8ae0 <backtrace@plt>
   2b2e6:	movs	r2, #2
   2b2e8:	mov	r1, r0
   2b2ea:	mov	r0, r4
   2b2ec:	blx	8e50 <backtrace_symbols_fd@plt>
   2b2f0:	blx	8e08 <abort@plt>
   2b2f4:	bge.n	2b204 <btrfs_add_root_ref@@Base+0x154>
   2b2f6:	movs	r3, r0
   2b2f8:	lsls	r4, r7, #9
   2b2fa:	movs	r0, r0
   2b2fc:	bge.n	2b3f4 <btrfs_close_devices@@Base+0x40>
   2b2fe:	movs	r3, r0
   2b300:	lsls	r4, r1, #10
   2b302:	movs	r0, r0
   2b304:	adds	r7, r1, #3
   2b306:	movs	r1, r0
   2b308:	push	{r0, r1, r4, lr}
   2b30a:	ldr	r4, [sp, #16]
   2b30c:	cbz	r4, 2b314 <btrfs_add_root_ref@@Base+0x264>
   2b30e:	str	r4, [sp, #0]
   2b310:	bl	2b2a4 <btrfs_add_root_ref@@Base+0x1f4>
   2b314:	add	sp, #8
   2b316:	pop	{r4, pc}
   2b318:	push	{r0, r1, r4, lr}
   2b31a:	mov	r4, r0
   2b31c:	clz	r0, r0
   2b320:	ldr	r2, [pc, #28]	; (2b340 <btrfs_add_root_ref@@Base+0x290>)
   2b322:	ldr	r1, [pc, #32]	; (2b344 <btrfs_add_root_ref@@Base+0x294>)
   2b324:	mov.w	r3, #322	; 0x142
   2b328:	lsrs	r0, r0, #5
   2b32a:	str	r0, [sp, #0]
   2b32c:	ldr	r0, [pc, #24]	; (2b348 <btrfs_add_root_ref@@Base+0x298>)
   2b32e:	add	r2, pc
   2b330:	add	r1, pc
   2b332:	add	r0, pc
   2b334:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2b338:	lsls	r0, r4, #5
   2b33a:	adds	r0, #48	; 0x30
   2b33c:	add	sp, #8
   2b33e:	pop	{r4, pc}
   2b340:	str	r5, [sp, #376]	; 0x178
   2b342:	movs	r1, r0
   2b344:	adds	r6, r2, #3
   2b346:	movs	r1, r0
   2b348:	adds	r4, r3, #3
   2b34a:	movs	r1, r0
   2b34c:	push	{r4, lr}
   2b34e:	mov	r4, r1
   2b350:	ldr	r1, [pc, #84]	; (2b3a8 <btrfs_add_root_ref@@Base+0x2f8>)
   2b352:	sub	sp, #24
   2b354:	ldr	r3, [pc, #84]	; (2b3ac <btrfs_add_root_ref@@Base+0x2fc>)
   2b356:	add	r1, pc
   2b358:	ldr	r3, [r1, r3]
   2b35a:	mov	r1, sp
   2b35c:	ldr	r3, [r3, #0]
   2b35e:	str	r3, [sp, #20]
   2b360:	mov.w	r3, #0
   2b364:	movs	r3, #25
   2b366:	muls	r2, r3
   2b368:	movs	r3, #17
   2b36a:	adds	r2, #101	; 0x65
   2b36c:	bl	1a79e <read_extent_buffer@@Base>
   2b370:	ldr.w	r3, [sp, #13]
   2b374:	ldr.w	r2, [sp, #9]
   2b378:	str.w	r3, [r4, #13]
   2b37c:	ldrb.w	r3, [sp, #8]
   2b380:	str.w	r2, [r4, #9]
   2b384:	ldr	r2, [pc, #40]	; (2b3b0 <btrfs_add_root_ref@@Base+0x300>)
   2b386:	strb	r3, [r4, #8]
   2b388:	ldr	r3, [sp, #0]
   2b38a:	add	r2, pc
   2b38c:	str	r3, [r4, #0]
   2b38e:	ldr	r3, [sp, #4]
   2b390:	str	r3, [r4, #4]
   2b392:	ldr	r3, [pc, #24]	; (2b3ac <btrfs_add_root_ref@@Base+0x2fc>)
   2b394:	ldr	r3, [r2, r3]
   2b396:	ldr	r2, [r3, #0]
   2b398:	ldr	r3, [sp, #20]
   2b39a:	eors	r2, r3
   2b39c:	beq.n	2b3a2 <btrfs_add_root_ref@@Base+0x2f2>
   2b39e:	blx	88e4 <__stack_chk_fail@plt>
   2b3a2:	add	sp, #24
   2b3a4:	pop	{r4, pc}
   2b3a6:	nop
   2b3a8:	bls.n	2b360 <btrfs_add_root_ref@@Base+0x2b0>
   2b3aa:	movs	r3, r0
   2b3ac:	lsls	r4, r7, #9
   2b3ae:	movs	r0, r0
   2b3b0:	bls.n	2b300 <btrfs_add_root_ref@@Base+0x250>
   2b3b2:	movs	r3, r0

0002b3b4 <btrfs_close_devices@@Base>:
   2b3b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b3b8:	sub	sp, #20
   2b3ba:	ldr.w	sl, [pc, #188]	; 2b478 <btrfs_close_devices@@Base+0xc4>
   2b3be:	mov	r4, r0
   2b3c0:	ldr	r7, [pc, #184]	; (2b47c <btrfs_close_devices@@Base+0xc8>)
   2b3c2:	movs	r6, #0
   2b3c4:	add	sl, pc
   2b3c6:	mov.w	r8, #0
   2b3ca:	mov.w	r9, #0
   2b3ce:	add	r7, pc
   2b3d0:	cmp	r4, #0
   2b3d2:	beq.n	2b472 <btrfs_close_devices@@Base+0xbe>
   2b3d4:	ldr.w	fp, [pc, #168]	; 2b480 <btrfs_close_devices@@Base+0xcc>
   2b3d8:	add	fp, pc
   2b3da:	mov	r3, r4
   2b3dc:	ldr.w	r5, [r3, #72]!
   2b3e0:	cmp	r5, r3
   2b3e2:	bne.n	2b400 <btrfs_close_devices@@Base+0x4c>
   2b3e4:	ldr	r5, [r4, #92]	; 0x5c
   2b3e6:	movs	r3, #0
   2b3e8:	str	r3, [r4, #92]	; 0x5c
   2b3ea:	mov	r0, r4
   2b3ec:	ldrd	r2, r3, [r4, #80]	; 0x50
   2b3f0:	str	r3, [r2, #4]
   2b3f2:	str	r2, [r3, #0]
   2b3f4:	cmp	r5, #0
   2b3f6:	beq.n	2b466 <btrfs_close_devices@@Base+0xb2>
   2b3f8:	blx	87cc <free@plt+0x4>
   2b3fc:	mov	r4, r5
   2b3fe:	b.n	2b3d0 <btrfs_close_devices@@Base+0x1c>
   2b400:	ldr	r0, [r5, #24]
   2b402:	adds	r3, r0, #1
   2b404:	beq.n	2b44a <btrfs_close_devices@@Base+0x96>
   2b406:	ldr	r3, [r5, #28]
   2b408:	cbz	r3, 2b424 <btrfs_close_devices@@Base+0x70>
   2b40a:	blx	873c <fsync@plt>
   2b40e:	adds	r0, #1
   2b410:	bne.n	2b424 <btrfs_close_devices@@Base+0x70>
   2b412:	ldrd	r2, r3, [r5, #64]	; 0x40
   2b416:	mov	r0, fp
   2b418:	bl	1a884 <__btrfs_warning@@Base>
   2b41c:	blx	8bac <__errno_location@plt>
   2b420:	ldr	r6, [r0, #0]
   2b422:	negs	r6, r6
   2b424:	movs	r3, #4
   2b426:	strd	r8, r9, [sp]
   2b42a:	str	r3, [sp, #8]
   2b42c:	movs	r2, #0
   2b42e:	ldr	r0, [r5, #24]
   2b430:	movs	r3, #0
   2b432:	blx	876c <posix_fadvise64@plt>
   2b436:	cbz	r0, 2b444 <btrfs_close_devices@@Base+0x90>
   2b438:	ldr	r3, [pc, #72]	; (2b484 <btrfs_close_devices@@Base+0xd0>)
   2b43a:	mov	r0, sl
   2b43c:	ldr	r3, [r7, r3]
   2b43e:	ldr	r1, [r3, #0]
   2b440:	blx	8de4 <fputs@plt+0x4>
   2b444:	ldr	r0, [r5, #24]
   2b446:	blx	8e20 <close@plt>
   2b44a:	ldrd	r2, r3, [r5]
   2b44e:	str	r3, [r2, #4]
   2b450:	str	r2, [r3, #0]
   2b452:	ldr	r0, [r5, #32]
   2b454:	blx	87cc <free@plt+0x4>
   2b458:	ldr	r0, [r5, #36]	; 0x24
   2b45a:	blx	87cc <free@plt+0x4>
   2b45e:	mov	r0, r5
   2b460:	blx	87cc <free@plt+0x4>
   2b464:	b.n	2b3da <btrfs_close_devices@@Base+0x26>
   2b466:	blx	87cc <free@plt+0x4>
   2b46a:	mov	r0, r6
   2b46c:	add	sp, #20
   2b46e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b472:	mov	r6, r4
   2b474:	b.n	2b46a <btrfs_close_devices@@Base+0xb6>
   2b476:	nop
   2b478:	str	r3, [r5, #88]	; 0x58
   2b47a:	movs	r1, r0
   2b47c:	bls.n	2b544 <btrfs_open_devices@@Base+0xa0>
   2b47e:	movs	r3, r0
   2b480:	ldrh	r5, [r6, #40]	; 0x28
   2b482:	movs	r1, r0
   2b484:	lsls	r4, r1, #10
	...

0002b488 <btrfs_close_all_devices@@Base>:
   2b488:	push	{r4, lr}
   2b48a:	ldr	r4, [pc, #20]	; (2b4a0 <btrfs_close_all_devices@@Base+0x18>)
   2b48c:	add	r4, pc
   2b48e:	ldr	r0, [r4, #0]
   2b490:	cmp	r0, r4
   2b492:	bne.n	2b496 <btrfs_close_all_devices@@Base+0xe>
   2b494:	pop	{r4, pc}
   2b496:	subs	r0, #80	; 0x50
   2b498:	bl	2b3b4 <btrfs_close_devices@@Base>
   2b49c:	b.n	2b48e <btrfs_close_all_devices@@Base+0x6>
   2b49e:	nop
   2b4a0:	stc	0, cr0, [ip, #-12]!

0002b4a4 <btrfs_open_devices@@Base>:
   2b4a4:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   2b4a8:	mov	r5, r0
   2b4aa:	ldr.w	sl, [pc, #180]	; 2b560 <btrfs_open_devices@@Base+0xbc>
   2b4ae:	mov	r8, r1
   2b4b0:	ldr.w	r9, [pc, #176]	; 2b564 <btrfs_open_devices@@Base+0xc0>
   2b4b4:	ldr	r4, [r0, #72]	; 0x48
   2b4b6:	add	sl, pc
   2b4b8:	ldr	r6, [pc, #172]	; (2b568 <btrfs_open_devices@@Base+0xc4>)
   2b4ba:	add	r9, pc
   2b4bc:	add	r6, pc
   2b4be:	add.w	r3, r5, #72	; 0x48
   2b4c2:	cmp	r4, r3
   2b4c4:	bne.n	2b4ca <btrfs_open_devices@@Base+0x26>
   2b4c6:	movs	r6, #0
   2b4c8:	b.n	2b50a <btrfs_open_devices@@Base+0x66>
   2b4ca:	ldr	r0, [r4, #32]
   2b4cc:	cbnz	r0, 2b4e8 <btrfs_open_devices@@Base+0x44>
   2b4ce:	ldr	r3, [pc, #156]	; (2b56c <btrfs_open_devices@@Base+0xc8>)
   2b4d0:	mov	r2, r9
   2b4d2:	ldrd	r0, r1, [r4, #64]	; 0x40
   2b4d6:	ldr	r3, [r6, r3]
   2b4d8:	strd	r0, r1, [sp]
   2b4dc:	movs	r1, #1
   2b4de:	ldr	r0, [r3, #0]
   2b4e0:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2b4e4:	ldr	r4, [r4, #0]
   2b4e6:	b.n	2b4be <btrfs_open_devices@@Base+0x1a>
   2b4e8:	mov	r1, r8
   2b4ea:	blx	8ba0 <__open64_2@plt>
   2b4ee:	subs	r7, r0, #0
   2b4f0:	bge.n	2b512 <btrfs_open_devices@@Base+0x6e>
   2b4f2:	blx	8bac <__errno_location@plt>
   2b4f6:	ldr	r1, [r4, #32]
   2b4f8:	ldr	r6, [r0, #0]
   2b4fa:	ldr	r0, [pc, #116]	; (2b570 <btrfs_open_devices@@Base+0xcc>)
   2b4fc:	negs	r6, r6
   2b4fe:	add	r0, pc
   2b500:	bl	1a900 <__btrfs_error@@Base>
   2b504:	mov	r0, r5
   2b506:	bl	2b3b4 <btrfs_close_devices@@Base>
   2b50a:	mov	r0, r6
   2b50c:	add	sp, #16
   2b50e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2b512:	movs	r3, #4
   2b514:	movs	r2, #0
   2b516:	str	r3, [sp, #8]
   2b518:	movs	r3, #0
   2b51a:	strd	r2, r3, [sp]
   2b51e:	blx	876c <posix_fadvise64@plt>
   2b522:	cbz	r0, 2b530 <btrfs_open_devices@@Base+0x8c>
   2b524:	ldr	r3, [pc, #68]	; (2b56c <btrfs_open_devices@@Base+0xc8>)
   2b526:	mov	r0, sl
   2b528:	ldr	r3, [r6, r3]
   2b52a:	ldr	r1, [r3, #0]
   2b52c:	blx	8de4 <fputs@plt+0x4>
   2b530:	ldrd	r0, r1, [r4, #64]	; 0x40
   2b534:	ldrd	r2, r3, [r5, #32]
   2b538:	cmp	r1, r3
   2b53a:	it	eq
   2b53c:	cmpeq	r0, r2
   2b53e:	ldrd	r2, r3, [r5, #48]	; 0x30
   2b542:	it	eq
   2b544:	streq	r7, [r5, #64]	; 0x40
   2b546:	ldrd	r0, r1, [r4, #64]	; 0x40
   2b54a:	cmp	r1, r3
   2b54c:	itt	eq
   2b54e:	cmpeq	r0, r2
   2b550:	streq	r7, [r5, #68]	; 0x44
   2b552:	tst.w	r8, #2
   2b556:	str	r7, [r4, #24]
   2b558:	itt	ne
   2b55a:	movne	r3, #1
   2b55c:	strne	r3, [r4, #28]
   2b55e:	b.n	2b4e4 <btrfs_open_devices@@Base+0x40>
   2b560:	str	r1, [r7, #72]	; 0x48
   2b562:	movs	r1, r0
   2b564:	ldrh	r3, [r6, #34]	; 0x22
   2b566:	movs	r1, r0
   2b568:	bhi.n	2b654 <btrfs_scan_one_device@@Base+0xe0>
   2b56a:	movs	r3, r0
   2b56c:	lsls	r4, r1, #10
   2b56e:	movs	r0, r0
   2b570:	ldrh	r5, [r2, #34]	; 0x22
   2b572:	movs	r1, r0

0002b574 <btrfs_scan_one_device@@Base>:
   2b574:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b578:	sub.w	sp, sp, #4128	; 0x1020
   2b57c:	sub	sp, #12
   2b57e:	mov	sl, r1
   2b580:	ldr	r1, [pc, #636]	; (2b800 <btrfs_scan_one_device@@Base+0x28c>)
   2b582:	mov	r4, r3
   2b584:	str	r2, [sp, #28]
   2b586:	add.w	r3, sp, #4128	; 0x1020
   2b58a:	ldr	r2, [pc, #632]	; (2b804 <btrfs_scan_one_device@@Base+0x290>)
   2b58c:	add	r1, pc
   2b58e:	adds	r3, #4
   2b590:	add.w	fp, sp, #40	; 0x28
   2b594:	sub.w	r5, fp, #4
   2b598:	ldr	r2, [r1, r2]
   2b59a:	mov	r1, r5
   2b59c:	ldr	r2, [r2, #0]
   2b59e:	str	r2, [r3, #0]
   2b5a0:	mov.w	r2, #0
   2b5a4:	add.w	r3, sp, #4160	; 0x1040
   2b5a8:	adds	r3, #24
   2b5aa:	ldr	r3, [r3, #0]
   2b5ac:	str	r3, [sp, #0]
   2b5ae:	add.w	r3, sp, #4160	; 0x1040
   2b5b2:	adds	r3, #16
   2b5b4:	ldrd	r2, r3, [r3]
   2b5b8:	bl	20150 <btrfs_read_dev_super@@Base>
   2b5bc:	cmp	r0, #0
   2b5be:	blt.w	2b7f0 <btrfs_scan_one_device@@Base+0x27c>
   2b5c2:	ldr.w	r3, [r5, #201]	; 0xc9
   2b5c6:	movs	r2, #0
   2b5c8:	mov	r0, r2
   2b5ca:	str	r3, [sp, #16]
   2b5cc:	ldr.w	r3, [r5, #205]	; 0xcd
   2b5d0:	str	r3, [sp, #20]
   2b5d2:	ldr	r3, [r5, #60]	; 0x3c
   2b5d4:	and.w	r1, r3, #2
   2b5d8:	orrs.w	r3, r0, r1
   2b5dc:	mov.w	r1, #0
   2b5e0:	mov	r9, r1
   2b5e2:	add.w	r0, fp, #28
   2b5e6:	ite	eq
   2b5e8:	ldrdeq	r3, r2, [r5, #136]	; 0x88
   2b5ec:	movne	r3, #1
   2b5ee:	strd	r3, r2, [r4]
   2b5f2:	ldr.w	r3, [r5, #188]	; 0xbc
   2b5f6:	ldrd	r6, r7, [r5, #72]	; 0x48
   2b5fa:	and.w	r8, r3, #1024	; 0x400
   2b5fe:	orrs.w	r3, r8, r9
   2b602:	it	ne
   2b604:	addwne	r1, fp, #567	; 0x237
   2b608:	bl	2b1d8 <btrfs_add_root_ref@@Base+0x128>
   2b60c:	mov	r4, r0
   2b60e:	cmp	r0, #0
   2b610:	bne.n	2b6fa <btrfs_scan_one_device@@Base+0x186>
   2b612:	movs	r1, #96	; 0x60
   2b614:	movs	r0, #1
   2b616:	blx	8718 <calloc@plt+0x4>
   2b61a:	mov	r4, r0
   2b61c:	cbnz	r0, 2b63e <btrfs_scan_one_device@@Base+0xca>
   2b61e:	mvn.w	r0, #11
   2b622:	ldr	r1, [pc, #484]	; (2b808 <btrfs_scan_one_device@@Base+0x294>)
   2b624:	add.w	r3, sp, #4128	; 0x1020
   2b628:	ldr	r2, [pc, #472]	; (2b804 <btrfs_scan_one_device@@Base+0x290>)
   2b62a:	adds	r3, #4
   2b62c:	add	r1, pc
   2b62e:	ldr	r2, [r1, r2]
   2b630:	ldr	r1, [r2, #0]
   2b632:	ldr	r2, [r3, #0]
   2b634:	eors	r1, r2
   2b636:	beq.w	2b7f6 <btrfs_scan_one_device@@Base+0x282>
   2b63a:	blx	88e4 <__stack_chk_fail@plt>
   2b63e:	ldr	r2, [pc, #460]	; (2b80c <btrfs_scan_one_device@@Base+0x298>)
   2b640:	add.w	r3, r0, #72	; 0x48
   2b644:	strd	r3, r3, [r0, #72]	; 0x48
   2b648:	add.w	r3, r0, #80	; 0x50
   2b64c:	add	r2, pc
   2b64e:	add.w	ip, r4, #16
   2b652:	ldr	r1, [r2, #0]
   2b654:	str	r3, [r2, #0]
   2b656:	str	r3, [r1, #4]
   2b658:	add	r3, sp, #68	; 0x44
   2b65a:	strd	r1, r2, [r0, #80]	; 0x50
   2b65e:	ldmia	r3, {r0, r1, r2, r3}
   2b660:	stmia.w	r4, {r0, r1, r2, r3}
   2b664:	orrs.w	r3, r8, r9
   2b668:	beq.n	2b6f0 <btrfs_scan_one_device@@Base+0x17c>
   2b66a:	addw	r3, sp, #607	; 0x25f
   2b66e:	addw	lr, sp, #623	; 0x26f
   2b672:	ldr	r0, [r3, #0]
   2b674:	adds	r3, #8
   2b676:	ldr.w	r1, [r3, #-4]
   2b67a:	cmp	r3, lr
   2b67c:	mov	r2, ip
   2b67e:	stmia	r2!, {r0, r1}
   2b680:	mov	ip, r2
   2b682:	bne.n	2b672 <btrfs_scan_one_device@@Base+0xfe>
   2b684:	ldrd	r2, r3, [sp, #16]
   2b688:	strd	r6, r7, [r4, #40]	; 0x28
   2b68c:	strd	r2, r3, [r4, #32]
   2b690:	mov.w	r2, #4294967295	; 0xffffffff
   2b694:	mov.w	r3, #4294967295	; 0xffffffff
   2b698:	strd	r2, r3, [r4, #48]	; 0x30
   2b69c:	movs	r1, #128	; 0x80
   2b69e:	movs	r0, #1
   2b6a0:	blx	8718 <calloc@plt+0x4>
   2b6a4:	mov	r8, r0
   2b6a6:	cmp	r0, #0
   2b6a8:	beq.n	2b61e <btrfs_scan_one_device@@Base+0xaa>
   2b6aa:	mov.w	r3, #4294967295	; 0xffffffff
   2b6ae:	str	r3, [r0, #24]
   2b6b0:	ldrd	r2, r3, [sp, #16]
   2b6b4:	add.w	ip, r0, #112	; 0x70
   2b6b8:	addw	lr, sp, #319	; 0x13f
   2b6bc:	strd	r6, r7, [r0, #56]	; 0x38
   2b6c0:	strd	r2, r3, [r0, #64]	; 0x40
   2b6c4:	addw	r3, sp, #303	; 0x12f
   2b6c8:	ldr	r0, [r3, #0]
   2b6ca:	adds	r3, #8
   2b6cc:	ldr.w	r1, [r3, #-4]
   2b6d0:	cmp	r3, lr
   2b6d2:	mov	r2, ip
   2b6d4:	stmia	r2!, {r0, r1}
   2b6d6:	mov	ip, r2
   2b6d8:	bne.n	2b6c8 <btrfs_scan_one_device@@Base+0x154>
   2b6da:	mov	r0, sl
   2b6dc:	blx	88cc <strdup@plt+0x4>
   2b6e0:	mov	r9, r0
   2b6e2:	str.w	r0, [r8, #32]
   2b6e6:	cbnz	r0, 2b74a <btrfs_scan_one_device@@Base+0x1d6>
   2b6e8:	mov	r0, r8
   2b6ea:	blx	87cc <free@plt+0x4>
   2b6ee:	b.n	2b61e <btrfs_scan_one_device@@Base+0xaa>
   2b6f0:	ldmia.w	r4, {r0, r1, r2, r3}
   2b6f4:	stmia.w	ip, {r0, r1, r2, r3}
   2b6f8:	b.n	2b684 <btrfs_scan_one_device@@Base+0x110>
   2b6fa:	addw	r3, fp, #263	; 0x107
   2b6fe:	str	r3, [sp, #0]
   2b700:	ldrd	r2, r3, [sp, #16]
   2b704:	bl	2b20c <btrfs_add_root_ref@@Base+0x15c>
   2b708:	mov	r8, r0
   2b70a:	cmp	r0, #0
   2b70c:	beq.n	2b69c <btrfs_scan_one_device@@Base+0x128>
   2b70e:	ldr.w	r9, [r0, #32]
   2b712:	cmp.w	r9, #0
   2b716:	beq.n	2b722 <btrfs_scan_one_device@@Base+0x1ae>
   2b718:	mov	r1, sl
   2b71a:	mov	r0, r9
   2b71c:	blx	8748 <strcmp@plt>
   2b720:	cbz	r0, 2b79e <btrfs_scan_one_device@@Base+0x22a>
   2b722:	ldrd	r2, r3, [r8, #56]	; 0x38
   2b726:	cmp	r7, r3
   2b728:	it	eq
   2b72a:	cmpeq	r6, r2
   2b72c:	bcs.n	2b7d6 <btrfs_scan_one_device@@Base+0x262>
   2b72e:	ldr	r0, [pc, #224]	; (2b810 <btrfs_scan_one_device@@Base+0x29c>)
   2b730:	mov	r1, sl
   2b732:	strd	r2, r3, [sp, #8]
   2b736:	mov	r2, r6
   2b738:	add	r0, pc
   2b73a:	mov	r3, r7
   2b73c:	str.w	r9, [sp]
   2b740:	bl	1a884 <__btrfs_warning@@Base>
   2b744:	mvn.w	r0, #16
   2b748:	b.n	2b622 <btrfs_scan_one_device@@Base+0xae>
   2b74a:	addw	r0, sp, #335	; 0x14f
   2b74e:	blx	88cc <strdup@plt+0x4>
   2b752:	str.w	r0, [r8, #36]	; 0x24
   2b756:	cbnz	r0, 2b760 <btrfs_scan_one_device@@Base+0x1ec>
   2b758:	mov	r0, r9
   2b75a:	blx	87cc <free@plt+0x4>
   2b75e:	b.n	2b6e8 <btrfs_scan_one_device@@Base+0x174>
   2b760:	ldrd	r2, r3, [r5, #136]	; 0x88
   2b764:	strd	r2, r3, [r8, #40]	; 0x28
   2b768:	ldrd	r2, r3, [r5, #120]	; 0x78
   2b76c:	strd	r2, r3, [r8, #48]	; 0x30
   2b770:	ldr.w	r2, [r5, #209]	; 0xd1
   2b774:	ldr.w	r3, [r5, #213]	; 0xd5
   2b778:	strd	r2, r3, [r8, #72]	; 0x48
   2b77c:	ldr.w	r2, [r5, #217]	; 0xd9
   2b780:	ldr.w	r3, [r5, #221]	; 0xdd
   2b784:	strd	r2, r3, [r8, #80]	; 0x50
   2b788:	mov	r3, r4
   2b78a:	ldr.w	r2, [r3, #72]!
   2b78e:	str.w	r8, [r2, #4]
   2b792:	strd	r2, r3, [r8]
   2b796:	str.w	r8, [r4, #72]	; 0x48
   2b79a:	str.w	r4, [r8, #12]
   2b79e:	ldrd	r2, r3, [r4, #40]	; 0x28
   2b7a2:	ldrd	r0, r1, [sp, #16]
   2b7a6:	cmp	r3, r7
   2b7a8:	it	eq
   2b7aa:	cmpeq	r2, r6
   2b7ac:	ittt	cc
   2b7ae:	strdcc	r6, r7, [r4, #40]	; 0x28
   2b7b2:	ldrdcc	r2, r3, [sp, #16]
   2b7b6:	strdcc	r2, r3, [r4, #32]
   2b7ba:	ldrd	r2, r3, [r4, #48]	; 0x30
   2b7be:	cmp	r1, r3
   2b7c0:	it	eq
   2b7c2:	cmpeq	r0, r2
   2b7c4:	ittt	cc
   2b7c6:	movcc	r2, r0
   2b7c8:	movcc	r3, r1
   2b7ca:	strdcc	r2, r3, [r4, #48]	; 0x30
   2b7ce:	movs	r0, #0
   2b7d0:	ldr	r3, [sp, #28]
   2b7d2:	str	r4, [r3, #0]
   2b7d4:	b.n	2b622 <btrfs_scan_one_device@@Base+0xae>
   2b7d6:	mov	r0, sl
   2b7d8:	blx	88cc <strdup@plt+0x4>
   2b7dc:	mov	r5, r0
   2b7de:	cmp	r0, #0
   2b7e0:	beq.w	2b61e <btrfs_scan_one_device@@Base+0xaa>
   2b7e4:	mov	r0, r9
   2b7e6:	blx	87cc <free@plt+0x4>
   2b7ea:	str.w	r5, [r8, #32]
   2b7ee:	b.n	2b79e <btrfs_scan_one_device@@Base+0x22a>
   2b7f0:	mvn.w	r0, #4
   2b7f4:	b.n	2b622 <btrfs_scan_one_device@@Base+0xae>
   2b7f6:	add.w	sp, sp, #4128	; 0x1020
   2b7fa:	add	sp, #12
   2b7fc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b800:	bvc.n	2b74c <btrfs_scan_one_device@@Base+0x1d8>
   2b802:	movs	r3, r0
   2b804:	lsls	r4, r7, #9
   2b806:	movs	r0, r0
   2b808:	bvc.n	2b814 <btrfs_insert_dev_extent@@Base>
   2b80a:	movs	r3, r0
   2b80c:	sbc.w	r0, ip, r3
   2b810:	ldrh	r7, [r6, #16]
   2b812:	movs	r1, r0

0002b814 <btrfs_insert_dev_extent@@Base>:
   2b814:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b818:	sub	sp, #52	; 0x34
   2b81a:	mov	r7, r3
   2b81c:	mov	r8, r2
   2b81e:	ldrd	sl, r3, [sp, #88]	; 0x58
   2b822:	mov	r4, r0
   2b824:	ldr	r2, [pc, #236]	; (2b914 <btrfs_insert_dev_extent@@Base+0x100>)
   2b826:	mov	r6, r1
   2b828:	ldr.w	r9, [sp, #100]	; 0x64
   2b82c:	str	r3, [sp, #8]
   2b82e:	add	r2, pc
   2b830:	ldr	r3, [sp, #96]	; 0x60
   2b832:	ldr.w	fp, [r1, #8]
   2b836:	str	r3, [sp, #12]
   2b838:	ldr	r3, [pc, #220]	; (2b918 <btrfs_insert_dev_extent@@Base+0x104>)
   2b83a:	ldr	r3, [r2, r3]
   2b83c:	ldr	r3, [r3, #0]
   2b83e:	str	r3, [sp, #44]	; 0x2c
   2b840:	mov.w	r3, #0
   2b844:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2b848:	mov	r5, r0
   2b84a:	cmp	r0, #0
   2b84c:	beq.n	2b906 <btrfs_insert_dev_extent@@Base+0xf2>
   2b84e:	ldrd	r0, r1, [r6, #64]	; 0x40
   2b852:	mov	r2, r5
   2b854:	ldr	r3, [sp, #12]
   2b856:	str.w	r9, [sp, #37]	; 0x25
   2b85a:	mov.w	r9, #1
   2b85e:	strd	r0, r1, [sp, #24]
   2b862:	mov	r1, fp
   2b864:	str.w	r3, [sp, #33]	; 0x21
   2b868:	mov	r0, r4
   2b86a:	movs	r3, #204	; 0xcc
   2b86c:	str.w	r9, [sp, #4]
   2b870:	strb.w	r3, [sp, #32]
   2b874:	movs	r3, #48	; 0x30
   2b876:	str	r3, [sp, #20]
   2b878:	add	r3, sp, #20
   2b87a:	str	r3, [sp, #0]
   2b87c:	add	r3, sp, #24
   2b87e:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2b882:	subs	r6, r0, #0
   2b884:	blt.n	2b8ec <btrfs_insert_dev_extent@@Base+0xd8>
   2b886:	ldr	r0, [r5, #0]
   2b888:	movs	r2, #25
   2b88a:	ldr	r3, [r5, #32]
   2b88c:	mov.w	lr, #3
   2b890:	add.w	r1, r0, #96	; 0x60
   2b894:	str	r0, [sp, #12]
   2b896:	mla	r3, r2, r3, r1
   2b89a:	ldr.w	r2, [r3, #118]	; 0x76
   2b89e:	movs	r3, #0
   2b8a0:	add.w	ip, r2, #101	; 0x65
   2b8a4:	adds	r2, #133	; 0x85
   2b8a6:	add.w	r4, r1, ip
   2b8aa:	strb.w	lr, [r1, ip]
   2b8ae:	strb	r3, [r4, #1]
   2b8b0:	strb	r3, [r4, #2]
   2b8b2:	strb	r3, [r4, #3]
   2b8b4:	strb	r3, [r4, #4]
   2b8b6:	strb	r3, [r4, #5]
   2b8b8:	strb	r3, [r4, #6]
   2b8ba:	strb	r3, [r4, #7]
   2b8bc:	strb	r3, [r4, #8]
   2b8be:	strb	r3, [r4, #10]
   2b8c0:	strb	r3, [r4, #11]
   2b8c2:	strb	r3, [r4, #12]
   2b8c4:	strb	r3, [r4, #13]
   2b8c6:	strb	r3, [r4, #14]
   2b8c8:	strb	r3, [r4, #15]
   2b8ca:	movs	r3, #16
   2b8cc:	strb.w	r9, [r4, #9]
   2b8d0:	str.w	r8, [r4, #16]
   2b8d4:	str	r7, [r4, #20]
   2b8d6:	ldr.w	r1, [fp, #464]	; 0x1d0
   2b8da:	bl	1a7b4 <write_extent_buffer@@Base>
   2b8de:	ldr	r3, [sp, #8]
   2b8e0:	ldr	r0, [sp, #12]
   2b8e2:	str.w	sl, [r4, #24]
   2b8e6:	str	r3, [r4, #28]
   2b8e8:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2b8ec:	mov	r0, r5
   2b8ee:	bl	1b302 <btrfs_free_path@@Base>
   2b8f2:	ldr	r2, [pc, #40]	; (2b91c <btrfs_insert_dev_extent@@Base+0x108>)
   2b8f4:	ldr	r3, [pc, #32]	; (2b918 <btrfs_insert_dev_extent@@Base+0x104>)
   2b8f6:	add	r2, pc
   2b8f8:	ldr	r3, [r2, r3]
   2b8fa:	ldr	r2, [r3, #0]
   2b8fc:	ldr	r3, [sp, #44]	; 0x2c
   2b8fe:	eors	r2, r3
   2b900:	beq.n	2b90c <btrfs_insert_dev_extent@@Base+0xf8>
   2b902:	blx	88e4 <__stack_chk_fail@plt>
   2b906:	mvn.w	r6, #11
   2b90a:	b.n	2b8f2 <btrfs_insert_dev_extent@@Base+0xde>
   2b90c:	mov	r0, r6
   2b90e:	add	sp, #52	; 0x34
   2b910:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b914:	bpl.n	2b91c <btrfs_insert_dev_extent@@Base+0x108>
   2b916:	movs	r3, r0
   2b918:	lsls	r4, r7, #9
   2b91a:	movs	r0, r0
   2b91c:	bmi.n	2b994 <btrfs_add_device@@Base+0x74>
   2b91e:	movs	r3, r0

0002b920 <btrfs_add_device@@Base>:
   2b920:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b924:	mov	r5, r2
   2b926:	vpush	{d8}
   2b92a:	mov	sl, r1
   2b92c:	ldr	r2, [pc, #536]	; (2bb48 <btrfs_add_device@@Base+0x228>)
   2b92e:	ldr	r3, [pc, #540]	; (2bb4c <btrfs_add_device@@Base+0x22c>)
   2b930:	add	r2, pc
   2b932:	vmov	s16, r0
   2b936:	sub	sp, #68	; 0x44
   2b938:	ldr.w	fp, [r1, #32]
   2b93c:	ldr	r3, [r2, r3]
   2b93e:	ldr	r3, [r3, #0]
   2b940:	str	r3, [sp, #60]	; 0x3c
   2b942:	mov.w	r3, #0
   2b946:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2b94a:	mov	r6, r0
   2b94c:	cmp	r0, #0
   2b94e:	beq.w	2bb36 <btrfs_add_device@@Base+0x216>
   2b952:	mov.w	r9, #0
   2b956:	movs	r3, #1
   2b958:	strd	r3, r9, [sp, #20]
   2b95c:	add	r3, sp, #20
   2b95e:	str	r3, [sp, #12]
   2b960:	mov.w	r2, #4294967295	; 0xffffffff
   2b964:	mov	r3, r0
   2b966:	strb.w	r2, [sp, #29]
   2b96a:	strb.w	r2, [sp, #30]
   2b96e:	mov	r1, fp
   2b970:	strb.w	r2, [sp, #31]
   2b974:	mov	r0, r9
   2b976:	strb.w	r2, [sp, #32]
   2b97a:	movs	r7, #216	; 0xd8
   2b97c:	strb.w	r2, [sp, #33]	; 0x21
   2b980:	strb.w	r2, [sp, #34]	; 0x22
   2b984:	strb.w	r2, [sp, #35]	; 0x23
   2b988:	strb.w	r2, [sp, #36]	; 0x24
   2b98c:	strd	r9, r9, [sp]
   2b990:	ldr	r2, [sp, #12]
   2b992:	strb.w	r7, [sp, #28]
   2b996:	bl	1d6c0 <btrfs_search_slot@@Base>
   2b99a:	subs	r4, r0, #0
   2b99c:	blt.w	2bb26 <btrfs_add_device@@Base+0x206>
   2b9a0:	ldr	r2, [pc, #428]	; (2bb50 <btrfs_add_device@@Base+0x230>)
   2b9a2:	it	eq
   2b9a4:	moveq	r3, #1
   2b9a6:	ldr	r1, [pc, #428]	; (2bb54 <btrfs_add_device@@Base+0x234>)
   2b9a8:	it	ne
   2b9aa:	movne	r3, r9
   2b9ac:	ldr	r0, [pc, #424]	; (2bb58 <btrfs_add_device@@Base+0x238>)
   2b9ae:	add	r2, pc
   2b9b0:	adds	r2, #22
   2b9b2:	add	r1, pc
   2b9b4:	add	r0, pc
   2b9b6:	str	r3, [sp, #0]
   2b9b8:	movw	r3, #719	; 0x2cf
   2b9bc:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2b9c0:	movs	r2, #1
   2b9c2:	movs	r3, #0
   2b9c4:	mov	r1, r6
   2b9c6:	mov	r0, fp
   2b9c8:	str	r7, [sp, #0]
   2b9ca:	bl	1ed78 <btrfs_previous_item@@Base>
   2b9ce:	mov	r4, r0
   2b9d0:	cmp	r0, #0
   2b9d2:	bne.w	2bb2c <btrfs_add_device@@Base+0x20c>
   2b9d6:	ldr	r2, [r6, #32]
   2b9d8:	add	r1, sp, #40	; 0x28
   2b9da:	ldr	r0, [r6, #0]
   2b9dc:	bl	2b34c <btrfs_add_root_ref@@Base+0x29c>
   2b9e0:	ldr.w	r7, [sp, #49]	; 0x31
   2b9e4:	ldr.w	r8, [sp, #53]	; 0x35
   2b9e8:	adds	r7, #1
   2b9ea:	adc.w	r8, r8, r9
   2b9ee:	mov	r0, r6
   2b9f0:	bl	1b2dc <btrfs_release_path@@Base>
   2b9f4:	cmp	r4, #0
   2b9f6:	bne.w	2bb0c <btrfs_add_device@@Base+0x1ec>
   2b9fa:	movs	r2, #1
   2b9fc:	movs	r3, #0
   2b9fe:	strd	r2, r3, [sp, #40]	; 0x28
   2ba02:	movs	r3, #216	; 0xd8
   2ba04:	strb.w	r3, [sp, #48]	; 0x30
   2ba08:	movs	r3, #98	; 0x62
   2ba0a:	str	r3, [sp, #20]
   2ba0c:	movs	r3, #1
   2ba0e:	str	r3, [sp, #4]
   2ba10:	mov	r2, r6
   2ba12:	ldr	r3, [sp, #12]
   2ba14:	mov	r1, fp
   2ba16:	vmov	r0, s16
   2ba1a:	str.w	r7, [sp, #49]	; 0x31
   2ba1e:	str	r3, [sp, #0]
   2ba20:	add	r3, sp, #40	; 0x28
   2ba22:	str.w	r8, [sp, #53]	; 0x35
   2ba26:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2ba2a:	mov	r4, r0
   2ba2c:	cmp	r0, #0
   2ba2e:	bne.n	2bb0c <btrfs_add_device@@Base+0x1ec>
   2ba30:	ldr	r0, [r6, #0]
   2ba32:	movs	r1, #25
   2ba34:	ldr	r3, [r6, #32]
   2ba36:	add.w	r2, r0, #96	; 0x60
   2ba3a:	mla	r3, r1, r3, r2
   2ba3e:	ldr.w	r9, [r3, #118]	; 0x76
   2ba42:	strd	r7, r8, [r5, #64]	; 0x40
   2ba46:	add.w	r1, r9, #101	; 0x65
   2ba4a:	adds	r3, r2, r1
   2ba4c:	str	r7, [r2, r1]
   2ba4e:	str.w	r8, [r3, #4]
   2ba52:	strb.w	r4, [r3, #44]	; 0x2c
   2ba56:	strb.w	r4, [r3, #45]	; 0x2d
   2ba5a:	strb.w	r4, [r3, #46]	; 0x2e
   2ba5e:	strb.w	r4, [r3, #47]	; 0x2f
   2ba62:	strb.w	r4, [r3, #48]	; 0x30
   2ba66:	strb.w	r4, [r3, #49]	; 0x31
   2ba6a:	strb.w	r4, [r3, #50]	; 0x32
   2ba6e:	strb.w	r4, [r3, #51]	; 0x33
   2ba72:	ldrd	r1, r2, [r5, #104]	; 0x68
   2ba76:	str	r1, [r3, #36]	; 0x24
   2ba78:	str	r2, [r3, #40]	; 0x28
   2ba7a:	ldr	r2, [r5, #88]	; 0x58
   2ba7c:	str	r2, [r3, #24]
   2ba7e:	ldr	r2, [r5, #92]	; 0x5c
   2ba80:	str	r2, [r3, #28]
   2ba82:	ldr	r2, [r5, #96]	; 0x60
   2ba84:	str	r2, [r3, #32]
   2ba86:	ldrd	r1, r2, [r5, #72]	; 0x48
   2ba8a:	str	r1, [r3, #8]
   2ba8c:	str	r2, [r3, #12]
   2ba8e:	ldrd	r1, r2, [r5, #80]	; 0x50
   2ba92:	str	r1, [r3, #16]
   2ba94:	add.w	r1, r5, #112	; 0x70
   2ba98:	str	r2, [r3, #20]
   2ba9a:	add.w	r2, r9, #167	; 0xa7
   2ba9e:	strb.w	r4, [r3, #60]	; 0x3c
   2baa2:	strb.w	r4, [r3, #61]	; 0x3d
   2baa6:	strb.w	r4, [r3, #62]	; 0x3e
   2baaa:	strb.w	r4, [r3, #63]	; 0x3f
   2baae:	strb.w	r4, [r3, #64]	; 0x40
   2bab2:	strb.w	r4, [r3, #65]	; 0x41
   2bab6:	strb.w	r4, [r3, #52]	; 0x34
   2baba:	strb.w	r4, [r3, #53]	; 0x35
   2babe:	strb.w	r4, [r3, #54]	; 0x36
   2bac2:	strb.w	r4, [r3, #55]	; 0x37
   2bac6:	strb.w	r4, [r3, #56]	; 0x38
   2baca:	strb.w	r4, [r3, #57]	; 0x39
   2bace:	strb.w	r4, [r3, #58]	; 0x3a
   2bad2:	strb.w	r4, [r3, #59]	; 0x3b
   2bad6:	movs	r3, #16
   2bad8:	str	r0, [sp, #12]
   2bada:	bl	1a7b4 <write_extent_buffer@@Base>
   2bade:	ldr.w	r1, [sl, #352]	; 0x160
   2bae2:	movs	r3, #16
   2bae4:	add.w	r2, r9, #183	; 0xb7
   2bae8:	ldr	r0, [sp, #12]
   2baea:	add	r1, r3
   2baec:	bl	1a7b4 <write_extent_buffer@@Base>
   2baf0:	ldr	r0, [sp, #12]
   2baf2:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2baf6:	ldr.w	r2, [sl, #352]	; 0x160
   2bafa:	ldrd	r0, r5, [r5, #72]	; 0x48
   2bafe:	ldrd	r3, r1, [r2, #56]	; 0x38
   2bb02:	adds	r3, r3, r0
   2bb04:	adc.w	r1, r5, r1
   2bb08:	strd	r3, r1, [r2, #56]	; 0x38
   2bb0c:	mov	r0, r6
   2bb0e:	bl	1b302 <btrfs_free_path@@Base>
   2bb12:	ldr	r2, [pc, #72]	; (2bb5c <btrfs_add_device@@Base+0x23c>)
   2bb14:	ldr	r3, [pc, #52]	; (2bb4c <btrfs_add_device@@Base+0x22c>)
   2bb16:	add	r2, pc
   2bb18:	ldr	r3, [r2, r3]
   2bb1a:	ldr	r2, [r3, #0]
   2bb1c:	ldr	r3, [sp, #60]	; 0x3c
   2bb1e:	eors	r2, r3
   2bb20:	beq.n	2bb3c <btrfs_add_device@@Base+0x21c>
   2bb22:	blx	88e4 <__stack_chk_fail@plt>
   2bb26:	movs	r7, #0
   2bb28:	mov	r8, r7
   2bb2a:	b.n	2b9ee <btrfs_add_device@@Base+0xce>
   2bb2c:	movs	r7, #1
   2bb2e:	mov.w	r8, #0
   2bb32:	mov	r4, r9
   2bb34:	b.n	2b9ee <btrfs_add_device@@Base+0xce>
   2bb36:	mvn.w	r4, #11
   2bb3a:	b.n	2bb12 <btrfs_add_device@@Base+0x1f2>
   2bb3c:	mov	r0, r4
   2bb3e:	add	sp, #68	; 0x44
   2bb40:	vpop	{d8}
   2bb44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bb48:	bmi.n	2bb4c <btrfs_add_device@@Base+0x22c>
   2bb4a:	movs	r3, r0
   2bb4c:	lsls	r4, r7, #9
   2bb4e:	movs	r0, r0
   2bb50:	ldrh	r6, [r3, #54]	; 0x36
   2bb52:	movs	r1, r0
   2bb54:	ldrh	r0, [r0, #0]
   2bb56:	movs	r1, r0
   2bb58:	adds	r4, #30
   2bb5a:	movs	r1, r0
   2bb5c:	bcs.n	2bb94 <btrfs_update_device@@Base+0x34>
   2bb5e:	movs	r3, r0

0002bb60 <btrfs_update_device@@Base>:
   2bb60:	ldr	r2, [pc, #212]	; (2bc38 <btrfs_update_device@@Base+0xd8>)
   2bb62:	ldr	r3, [pc, #216]	; (2bc3c <btrfs_update_device@@Base+0xdc>)
   2bb64:	add	r2, pc
   2bb66:	push	{r4, r5, r6, r7, lr}
   2bb68:	sub	sp, #44	; 0x2c
   2bb6a:	ldr	r3, [r2, r3]
   2bb6c:	mov	r4, r1
   2bb6e:	mov	r6, r0
   2bb70:	ldr	r3, [r3, #0]
   2bb72:	str	r3, [sp, #36]	; 0x24
   2bb74:	mov.w	r3, #0
   2bb78:	ldr	r3, [r1, #8]
   2bb7a:	ldr.w	r3, [r3, #464]	; 0x1d0
   2bb7e:	ldr	r1, [r3, #32]
   2bb80:	str	r1, [sp, #12]
   2bb82:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2bb86:	mov	r5, r0
   2bb88:	cmp	r0, #0
   2bb8a:	beq.n	2bc2a <btrfs_update_device@@Base+0xca>
   2bb8c:	movs	r2, #1
   2bb8e:	movs	r3, #0
   2bb90:	strd	r2, r3, [sp, #16]
   2bb94:	movs	r3, #216	; 0xd8
   2bb96:	strb.w	r3, [sp, #24]
   2bb9a:	movs	r2, #1
   2bb9c:	ldr	r3, [r4, #64]	; 0x40
   2bb9e:	ldr	r1, [sp, #12]
   2bba0:	str.w	r3, [sp, #25]
   2bba4:	ldr	r3, [r4, #68]	; 0x44
   2bba6:	str.w	r3, [sp, #29]
   2bbaa:	movs	r3, #0
   2bbac:	strd	r3, r2, [sp]
   2bbb0:	mov	r3, r0
   2bbb2:	add	r2, sp, #16
   2bbb4:	mov	r0, r6
   2bbb6:	bl	1d6c0 <btrfs_search_slot@@Base>
   2bbba:	subs	r6, r0, #0
   2bbbc:	blt.n	2bc0a <btrfs_update_device@@Base+0xaa>
   2bbbe:	bne.n	2bc24 <btrfs_update_device@@Base+0xc4>
   2bbc0:	ldr	r0, [r5, #0]
   2bbc2:	movs	r2, #25
   2bbc4:	ldr	r3, [r5, #32]
   2bbc6:	add.w	r1, r0, #96	; 0x60
   2bbca:	ldr.w	ip, [r4, #68]	; 0x44
   2bbce:	ldr	r7, [r4, #64]	; 0x40
   2bbd0:	mla	r3, r2, r3, r1
   2bbd4:	ldr.w	r3, [r3, #118]	; 0x76
   2bbd8:	adds	r3, #101	; 0x65
   2bbda:	adds	r2, r1, r3
   2bbdc:	str	r7, [r1, r3]
   2bbde:	str.w	ip, [r2, #4]
   2bbe2:	ldrd	r1, r3, [r4, #104]	; 0x68
   2bbe6:	str	r1, [r2, #36]	; 0x24
   2bbe8:	str	r3, [r2, #40]	; 0x28
   2bbea:	ldr	r3, [r4, #88]	; 0x58
   2bbec:	str	r3, [r2, #24]
   2bbee:	ldr	r3, [r4, #92]	; 0x5c
   2bbf0:	str	r3, [r2, #28]
   2bbf2:	ldr	r3, [r4, #96]	; 0x60
   2bbf4:	str	r3, [r2, #32]
   2bbf6:	ldrd	r1, r3, [r4, #72]	; 0x48
   2bbfa:	str	r1, [r2, #8]
   2bbfc:	str	r3, [r2, #12]
   2bbfe:	ldrd	r1, r3, [r4, #80]	; 0x50
   2bc02:	str	r1, [r2, #16]
   2bc04:	str	r3, [r2, #20]
   2bc06:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2bc0a:	mov	r0, r5
   2bc0c:	bl	1b302 <btrfs_free_path@@Base>
   2bc10:	ldr	r2, [pc, #44]	; (2bc40 <btrfs_update_device@@Base+0xe0>)
   2bc12:	ldr	r3, [pc, #40]	; (2bc3c <btrfs_update_device@@Base+0xdc>)
   2bc14:	add	r2, pc
   2bc16:	ldr	r3, [r2, r3]
   2bc18:	ldr	r2, [r3, #0]
   2bc1a:	ldr	r3, [sp, #36]	; 0x24
   2bc1c:	eors	r2, r3
   2bc1e:	beq.n	2bc30 <btrfs_update_device@@Base+0xd0>
   2bc20:	blx	88e4 <__stack_chk_fail@plt>
   2bc24:	mvn.w	r6, #1
   2bc28:	b.n	2bc0a <btrfs_update_device@@Base+0xaa>
   2bc2a:	mvn.w	r6, #11
   2bc2e:	b.n	2bc10 <btrfs_update_device@@Base+0xb0>
   2bc30:	mov	r0, r6
   2bc32:	add	sp, #44	; 0x2c
   2bc34:	pop	{r4, r5, r6, r7, pc}
   2bc36:	nop
   2bc38:	bne.n	2bbd4 <btrfs_update_device@@Base+0x74>
   2bc3a:	movs	r3, r0
   2bc3c:	lsls	r4, r7, #9
   2bc3e:	movs	r0, r0
   2bc40:	bne.n	2bc7c <btrfs_add_system_chunk@@Base+0x38>
   2bc42:	movs	r3, r0

0002bc44 <btrfs_add_system_chunk@@Base>:
   2bc44:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2bc48:	mov	r4, r1
   2bc4a:	ldr.w	r6, [r0, #308]	; 0x134
   2bc4e:	mov	r1, r2
   2bc50:	add.w	r5, r3, #17
   2bc54:	ldr.w	r2, [r6, #160]	; 0xa0
   2bc58:	add	r5, r2
   2bc5a:	cmp.w	r5, #2048	; 0x800
   2bc5e:	bhi.n	2bc9e <btrfs_add_system_chunk@@Base+0x5a>
   2bc60:	ldr.w	lr, [r4, #9]
   2bc64:	addw	r7, r6, #811	; 0x32b
   2bc68:	ldr.w	ip, [r4, #13]
   2bc6c:	adds	r0, r7, r2
   2bc6e:	ldrb.w	r8, [r4, #8]
   2bc72:	adds	r0, #17
   2bc74:	ldr.w	r9, [r4]
   2bc78:	ldr	r4, [r4, #4]
   2bc7a:	str.w	r9, [r7, r2]
   2bc7e:	mov	r2, r3
   2bc80:	str.w	r4, [r0, #-13]
   2bc84:	strb.w	r8, [r0, #-9]
   2bc88:	str.w	lr, [r0, #-8]
   2bc8c:	str.w	ip, [r0, #-4]
   2bc90:	blx	8830 <memcpy@plt+0x4>
   2bc94:	movs	r0, #0
   2bc96:	str.w	r5, [r6, #160]	; 0xa0
   2bc9a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2bc9e:	mvn.w	r0, #26
   2bca2:	b.n	2bc9a <btrfs_add_system_chunk@@Base+0x56>

0002bca4 <btrfs_alloc_chunk@@Base>:
   2bca4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bca8:	vpush	{d8-d11}
   2bcac:	vmov	s16, r0
   2bcb0:	sub	sp, #252	; 0xfc
   2bcb2:	str	r3, [sp, #148]	; 0x94
   2bcb4:	ldrd	sl, r3, [sp, #320]	; 0x140
   2bcb8:	str	r2, [sp, #176]	; 0xb0
   2bcba:	ldr.w	r2, [pc, #1252]	; 2c1a0 <btrfs_alloc_chunk@@Base+0x4fc>
   2bcbe:	str	r3, [sp, #120]	; 0x78
   2bcc0:	ldr.w	r3, [pc, #1248]	; 2c1a4 <btrfs_alloc_chunk@@Base+0x500>
   2bcc4:	add	r2, pc
   2bcc6:	str	r1, [sp, #44]	; 0x2c
   2bcc8:	ldr	r3, [r2, r3]
   2bcca:	ldr	r3, [r3, #0]
   2bccc:	str	r3, [sp, #244]	; 0xf4
   2bcce:	mov.w	r3, #0
   2bcd2:	ldr	r3, [r1, #24]
   2bcd4:	str	r3, [sp, #172]	; 0xac
   2bcd6:	ldr	r3, [r1, #32]
   2bcd8:	vmov	s17, r3
   2bcdc:	ldr.w	r3, [r1, #352]	; 0x160
   2bce0:	str	r3, [sp, #48]	; 0x30
   2bce2:	adds	r3, #72	; 0x48
   2bce4:	str	r3, [sp, #108]	; 0x6c
   2bce6:	ldr	r3, [sp, #48]	; 0x30
   2bce8:	ldr	r2, [sp, #108]	; 0x6c
   2bcea:	ldr	r3, [r3, #72]	; 0x48
   2bcec:	cmp	r2, r3
   2bcee:	bne.n	2bd0e <btrfs_alloc_chunk@@Base+0x6a>
   2bcf0:	mvn.w	r6, #27
   2bcf4:	ldr.w	r2, [pc, #1200]	; 2c1a8 <btrfs_alloc_chunk@@Base+0x504>
   2bcf8:	ldr.w	r3, [pc, #1192]	; 2c1a4 <btrfs_alloc_chunk@@Base+0x500>
   2bcfc:	add	r2, pc
   2bcfe:	ldr	r3, [r2, r3]
   2bd00:	ldr	r2, [r3, #0]
   2bd02:	ldr	r3, [sp, #244]	; 0xf4
   2bd04:	eors	r2, r3
   2bd06:	beq.w	2c7e4 <btrfs_alloc_chunk@@Base+0xb40>
   2bd0a:	blx	88e4 <__stack_chk_fail@plt>
   2bd0e:	and.w	r0, sl, #2040	; 0x7f8
   2bd12:	movs	r3, #0
   2bd14:	mov	r1, r3
   2bd16:	orrs.w	r2, r0, r1
   2bd1a:	beq.w	2bf7e <btrfs_alloc_chunk@@Base+0x2da>
   2bd1e:	and.w	r0, sl, #2
   2bd22:	orrs.w	r2, r0, r1
   2bd26:	bne.w	2bf66 <btrfs_alloc_chunk@@Base+0x2c2>
   2bd2a:	and.w	r0, sl, #1
   2bd2e:	orrs.w	r2, r0, r1
   2bd32:	beq.w	2bf24 <btrfs_alloc_chunk@@Base+0x280>
   2bd36:	ldr	r3, [sp, #44]	; 0x2c
   2bd38:	movs	r2, #0
   2bd3a:	mov.w	r1, #1073741824	; 0x40000000
   2bd3e:	mov.w	r5, #2147483648	; 0x80000000
   2bd42:	strd	r1, r2, [sp, #16]
   2bd46:	movs	r4, #2
   2bd48:	ldr.w	r3, [r3, #384]	; 0x180
   2bd4c:	mov.w	r2, #67108864	; 0x4000000
   2bd50:	subs	r3, #206	; 0xce
   2bd52:	lsrs	r3, r3, #5
   2bd54:	adds	r3, #1
   2bd56:	str	r2, [sp, #72]	; 0x48
   2bd58:	and.w	r6, sl, #16
   2bd5c:	ldr	r2, [sp, #44]	; 0x2c
   2bd5e:	movs	r7, #0
   2bd60:	ldr.w	r1, [r2, #308]	; 0x134
   2bd64:	orrs.w	r2, r6, r7
   2bd68:	beq.w	2bf84 <btrfs_alloc_chunk@@Base+0x2e0>
   2bd6c:	ldr.w	r7, [r1, #140]	; 0x8c
   2bd70:	ldr.w	r6, [r1, #136]	; 0x88
   2bd74:	cmp	r7, #0
   2bd76:	it	eq
   2bd78:	cmpeq	r6, #3
   2bd7a:	it	cs
   2bd7c:	movcs	r6, #2
   2bd7e:	cmp	r6, #2
   2bd80:	mov	fp, r6
   2bd82:	bne.n	2bcf0 <btrfs_alloc_chunk@@Base+0x4c>
   2bd84:	and.w	r6, sl, #512	; 0x200
   2bd88:	movs	r7, #0
   2bd8a:	orrs.w	r2, r6, r7
   2bd8e:	beq.n	2bda8 <btrfs_alloc_chunk@@Base+0x104>
   2bd90:	ldr.w	r7, [r1, #140]	; 0x8c
   2bd94:	ldr.w	r6, [r1, #136]	; 0x88
   2bd98:	cmp	r7, #0
   2bd9a:	it	eq
   2bd9c:	cmpeq	r6, #4
   2bd9e:	it	cs
   2bda0:	movcs	r6, #3
   2bda2:	cmp	r6, #3
   2bda4:	mov	fp, r6
   2bda6:	bne.n	2bcf0 <btrfs_alloc_chunk@@Base+0x4c>
   2bda8:	and.w	r6, sl, #1024	; 0x400
   2bdac:	movs	r7, #0
   2bdae:	orrs.w	r2, r6, r7
   2bdb2:	beq.n	2bdcc <btrfs_alloc_chunk@@Base+0x128>
   2bdb4:	ldr.w	r7, [r1, #140]	; 0x8c
   2bdb8:	ldr.w	r6, [r1, #136]	; 0x88
   2bdbc:	cmp	r7, #0
   2bdbe:	it	eq
   2bdc0:	cmpeq	r6, #5
   2bdc2:	it	cs
   2bdc4:	movcs	r6, #4
   2bdc6:	cmp	r6, #4
   2bdc8:	mov	fp, r6
   2bdca:	bne.n	2bcf0 <btrfs_alloc_chunk@@Base+0x4c>
   2bdcc:	movs	r2, #0
   2bdce:	and.w	r0, sl, #32
   2bdd2:	strd	r0, r2, [sp, #56]	; 0x38
   2bdd6:	ldrd	r6, r7, [sp, #56]	; 0x38
   2bdda:	orrs.w	r0, r6, r7
   2bdde:	and.w	r6, sl, #8
   2bde2:	mov	r7, r2
   2bde4:	it	ne
   2bde6:	movne.w	fp, #2
   2bdea:	orrs.w	r2, r6, r7
   2bdee:	beq.w	2bf8a <btrfs_alloc_chunk@@Base+0x2e6>
   2bdf2:	ldr.w	r2, [r1, #136]	; 0x88
   2bdf6:	cmp	r2, r3
   2bdf8:	it	ge
   2bdfa:	movge	r2, r3
   2bdfc:	mov	fp, r2
   2bdfe:	movs	r2, #2
   2be00:	str	r2, [sp, #76]	; 0x4c
   2be02:	and.w	r2, sl, #64	; 0x40
   2be06:	str	r2, [sp, #88]	; 0x58
   2be08:	movs	r2, #0
   2be0a:	str	r2, [sp, #92]	; 0x5c
   2be0c:	ldrd	r6, r7, [sp, #88]	; 0x58
   2be10:	orrs.w	r2, r6, r7
   2be14:	beq.w	2bf90 <btrfs_alloc_chunk@@Base+0x2ec>
   2be18:	ldr.w	r2, [r1, #136]	; 0x88
   2be1c:	cmp	r2, r3
   2be1e:	it	ge
   2be20:	movge	r2, r3
   2be22:	cmp	r2, #3
   2be24:	ble.w	2bcf0 <btrfs_alloc_chunk@@Base+0x4c>
   2be28:	bic.w	fp, r2, #1
   2be2c:	movs	r2, #2
   2be2e:	str	r2, [sp, #52]	; 0x34
   2be30:	movs	r2, #4
   2be32:	str	r2, [sp, #76]	; 0x4c
   2be34:	and.w	r6, sl, #128	; 0x80
   2be38:	movs	r7, #0
   2be3a:	orrs.w	r2, r6, r7
   2be3e:	beq.n	2be56 <btrfs_alloc_chunk@@Base+0x1b2>
   2be40:	ldr.w	r2, [r1, #136]	; 0x88
   2be44:	cmp	r2, r3
   2be46:	it	ge
   2be48:	movge	r2, r3
   2be4a:	cmp	r2, #1
   2be4c:	mov	fp, r2
   2be4e:	ble.w	2bcf0 <btrfs_alloc_chunk@@Base+0x4c>
   2be52:	movs	r2, #2
   2be54:	str	r2, [sp, #76]	; 0x4c
   2be56:	and.w	r6, sl, #256	; 0x100
   2be5a:	movs	r7, #0
   2be5c:	orrs.w	r2, r6, r7
   2be60:	beq.n	2be78 <btrfs_alloc_chunk@@Base+0x1d4>
   2be62:	ldr.w	r2, [r1, #136]	; 0x88
   2be66:	cmp	r3, r2
   2be68:	it	ge
   2be6a:	movge	r3, r2
   2be6c:	cmp	r3, #2
   2be6e:	mov	fp, r3
   2be70:	ble.w	2bcf0 <btrfs_alloc_chunk@@Base+0x4c>
   2be74:	movs	r3, #3
   2be76:	str	r3, [sp, #76]	; 0x4c
   2be78:	ldr	r0, [r1, #112]	; 0x70
   2be7a:	movs	r2, #1
   2be7c:	ldr	r1, [r1, #116]	; 0x74
   2be7e:	bl	34f48 <div_factor@@Base>
   2be82:	strd	r5, r4, [sp, #64]	; 0x40
   2be86:	movs	r4, #0
   2be88:	mov	r3, r1
   2be8a:	mov	r2, r0
   2be8c:	ldrd	r0, r1, [sp, #64]	; 0x40
   2be90:	cmp	r3, r1
   2be92:	it	eq
   2be94:	cmpeq	r2, r0
   2be96:	it	cc
   2be98:	strdcc	r2, r3, [sp, #64]	; 0x40
   2be9c:	movs	r3, #0
   2be9e:	strd	r3, r4, [sp, #32]
   2bea2:	str	r3, [sp, #168]	; 0xa8
   2bea4:	movs	r4, #0
   2bea6:	movs	r3, #0
   2bea8:	strd	r3, r4, [sp, #96]	; 0x60
   2beac:	ldr	r3, [sp, #52]	; 0x34
   2beae:	mov	r0, sl
   2beb0:	ldr	r1, [sp, #120]	; 0x78
   2beb2:	strd	fp, r3, [sp]
   2beb6:	ldrd	r2, r3, [sp, #16]
   2beba:	bl	2b24c <btrfs_add_root_ref@@Base+0x19c>
   2bebe:	ldrd	r3, r4, [sp, #64]	; 0x40
   2bec2:	cmp	r4, r1
   2bec4:	ldr	r4, [pc, #724]	; (2c19c <btrfs_alloc_chunk@@Base+0x4f8>)
   2bec6:	it	eq
   2bec8:	cmpeq	r3, r0
   2beca:	bcs.n	2bee0 <btrfs_alloc_chunk@@Base+0x23c>
   2becc:	mov	r2, fp
   2bece:	ldrd	r0, r1, [sp, #64]	; 0x40
   2bed2:	asrs	r3, r2, #31
   2bed4:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2bed8:	and.w	r3, r4, r0
   2bedc:	strd	r3, r1, [sp, #16]
   2bee0:	ldr	r3, [sp, #72]	; 0x48
   2bee2:	asrs	r2, r3, #31
   2bee4:	mov	r1, r3
   2bee6:	mov	r3, r2
   2bee8:	mov	r2, r1
   2beea:	ldrd	r0, r1, [sp, #16]
   2beee:	cmp	r3, r1
   2bef0:	it	eq
   2bef2:	cmpeq	r2, r0
   2bef4:	itt	cc
   2bef6:	movcc	r3, r1
   2bef8:	movcc	r2, r0
   2befa:	and.w	r1, r4, r2
   2befe:	strd	r1, r3, [sp, #16]
   2bf02:	add	r3, sp, #196	; 0xc4
   2bf04:	strd	r3, r3, [sp, #196]	; 0xc4
   2bf08:	ldr	r3, [sp, #48]	; 0x30
   2bf0a:	ldr	r5, [r3, #72]	; 0x48
   2bf0c:	ldrd	r3, r4, [sp, #56]	; 0x38
   2bf10:	orrs	r3, r4
   2bf12:	beq.w	2c2be <btrfs_alloc_chunk@@Base+0x61a>
   2bf16:	adds	r3, r1, r1
   2bf18:	str	r3, [sp, #128]	; 0x80
   2bf1a:	ldr	r3, [sp, #20]
   2bf1c:	adcs	r3, r3
   2bf1e:	str	r3, [sp, #132]	; 0x84
   2bf20:	movs	r7, #0
   2bf22:	b.n	2c0b0 <btrfs_alloc_chunk@@Base+0x40c>
   2bf24:	and.w	r0, sl, #4
   2bf28:	orrs.w	r2, r0, r1
   2bf2c:	beq.n	2bf7e <btrfs_alloc_chunk@@Base+0x2da>
   2bf2e:	ldr	r3, [sp, #48]	; 0x30
   2bf30:	movs	r1, #12
   2bf32:	mov.w	r0, #2147483648	; 0x80000000
   2bf36:	movs	r4, #0
   2bf38:	ldrd	r2, r3, [r3, #56]	; 0x38
   2bf3c:	cmp	r1, r3
   2bf3e:	it	eq
   2bf40:	cmpeq	r0, r2
   2bf42:	mov.w	r2, #33554432	; 0x2000000
   2bf46:	ite	cs
   2bf48:	movcs.w	r3, #268435456	; 0x10000000
   2bf4c:	movcc.w	r3, #1073741824	; 0x40000000
   2bf50:	strd	r3, r4, [sp, #16]
   2bf54:	ldr	r3, [sp, #44]	; 0x2c
   2bf56:	ldrd	r5, r4, [sp, #16]
   2bf5a:	ldr.w	r3, [r3, #384]	; 0x180
   2bf5e:	subs	r3, #206	; 0xce
   2bf60:	lsrs	r3, r3, #5
   2bf62:	adds	r3, #1
   2bf64:	b.n	2bd56 <btrfs_alloc_chunk@@Base+0xb2>
   2bf66:	movs	r3, #58	; 0x3a
   2bf68:	mov.w	r5, #16777216	; 0x1000000
   2bf6c:	movs	r2, #0
   2bf6e:	mov.w	r1, #8388608	; 0x800000
   2bf72:	movs	r4, #0
   2bf74:	strd	r1, r2, [sp, #16]
   2bf78:	mov.w	r2, #1048576	; 0x100000
   2bf7c:	b.n	2bd56 <btrfs_alloc_chunk@@Base+0xb2>
   2bf7e:	mov.w	r5, #33554432	; 0x2000000
   2bf82:	b.n	2bf6c <btrfs_alloc_chunk@@Base+0x2c8>
   2bf84:	mov.w	fp, #1
   2bf88:	b.n	2bd84 <btrfs_alloc_chunk@@Base+0xe0>
   2bf8a:	str.w	fp, [sp, #76]	; 0x4c
   2bf8e:	b.n	2be02 <btrfs_alloc_chunk@@Base+0x15e>
   2bf90:	movs	r2, #1
   2bf92:	str	r2, [sp, #52]	; 0x34
   2bf94:	b.n	2be34 <btrfs_alloc_chunk@@Base+0x190>
   2bf96:	ldr	r3, [r5, #8]
   2bf98:	str	r3, [sp, #104]	; 0x68
   2bf9a:	ldr.w	r3, [r3, #464]	; 0x1d0
   2bf9e:	ldrd	r9, r8, [r3, #296]	; 0x128
   2bfa2:	ldrd	r3, r4, [r5, #72]	; 0x48
   2bfa6:	strd	r3, r4, [sp, #80]	; 0x50
   2bfaa:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2bfae:	mov	r4, r0
   2bfb0:	cbnz	r0, 2bfb8 <btrfs_alloc_chunk@@Base+0x314>
   2bfb2:	mvn.w	r6, #11
   2bfb6:	b.n	2bcf4 <btrfs_alloc_chunk@@Base+0x50>
   2bfb8:	ldrd	r2, r3, [r5, #64]	; 0x40
   2bfbc:	ldr	r1, [sp, #104]	; 0x68
   2bfbe:	strd	r2, r3, [sp, #224]	; 0xe0
   2bfc2:	ldr	r3, [sp, #104]	; 0x68
   2bfc4:	ldr.w	r3, [r3, #464]	; 0x1d0
   2bfc8:	ldr.w	r2, [r3, #296]	; 0x128
   2bfcc:	str.w	r2, [sp, #233]	; 0xe9
   2bfd0:	add	r2, sp, #224	; 0xe0
   2bfd2:	ldr.w	r3, [r3, #300]	; 0x12c
   2bfd6:	str.w	r3, [sp, #237]	; 0xed
   2bfda:	movs	r3, #204	; 0xcc
   2bfdc:	strb.w	r3, [sp, #232]	; 0xe8
   2bfe0:	movs	r3, #2
   2bfe2:	strb.w	r3, [r0, #64]	; 0x40
   2bfe6:	movs	r3, #0
   2bfe8:	strd	r3, r3, [sp]
   2bfec:	mov	r3, r0
   2bfee:	vmov	r0, s16
   2bff2:	bl	1d6c0 <btrfs_search_slot@@Base>
   2bff6:	subs	r6, r0, #0
   2bff8:	blt.n	2c068 <btrfs_alloc_chunk@@Base+0x3c4>
   2bffa:	ldrb.w	r3, [sp, #232]	; 0xe8
   2bffe:	movs	r2, #0
   2c000:	ldr	r0, [sp, #104]	; 0x68
   2c002:	mov	r1, r4
   2c004:	str	r3, [sp, #0]
   2c006:	movs	r3, #0
   2c008:	bl	1ed78 <btrfs_previous_item@@Base>
   2c00c:	subs	r6, r0, #0
   2c00e:	blt.n	2c068 <btrfs_alloc_chunk@@Base+0x3c4>
   2c010:	strd	r9, r8, [sp, #24]
   2c014:	ldrd	r2, r3, [sp, #24]
   2c018:	cmp	r3, #0
   2c01a:	it	eq
   2c01c:	cmpeq.w	r2, #1048576	; 0x100000
   2c020:	ittt	cc
   2c022:	movcc.w	r2, #1048576	; 0x100000
   2c026:	movcc	r3, #0
   2c028:	strdcc	r2, r3, [sp, #24]
   2c02c:	add	r2, sp, #224	; 0xe0
   2c02e:	movs	r3, #0
   2c030:	str	r3, [sp, #124]	; 0x7c
   2c032:	vmov	s18, r2
   2c036:	ldr	r2, [r4, #32]
   2c038:	ldr	r6, [r4, #0]
   2c03a:	str	r2, [sp, #144]	; 0x90
   2c03c:	ldr	r1, [sp, #144]	; 0x90
   2c03e:	ldr.w	r2, [r6, #192]	; 0xc0
   2c042:	cmp	r2, r1
   2c044:	bhi.w	2c1b8 <btrfs_alloc_chunk@@Base+0x514>
   2c048:	str	r3, [sp, #144]	; 0x90
   2c04a:	mov.w	r3, #0
   2c04e:	strb.w	r3, [r4, #65]	; 0x41
   2c052:	mov	r1, r4
   2c054:	ldr	r3, [sp, #104]	; 0x68
   2c056:	ldr.w	r0, [r3, #464]	; 0x1d0
   2c05a:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   2c05e:	ldr	r3, [sp, #144]	; 0x90
   2c060:	subs	r6, r0, #0
   2c062:	beq.n	2c036 <btrfs_alloc_chunk@@Base+0x392>
   2c064:	bge.w	2c270 <btrfs_alloc_chunk@@Base+0x5cc>
   2c068:	mov	r0, r4
   2c06a:	bl	1b302 <btrfs_free_path@@Base>
   2c06e:	cmp	r6, #0
   2c070:	bne.w	2bcf4 <btrfs_alloc_chunk@@Base+0x50>
   2c074:	ldrd	r1, r2, [sp, #32]
   2c078:	ldrd	r8, r9, [sp, #128]	; 0x80
   2c07c:	ldr	r3, [r5, #0]
   2c07e:	cmp	r2, r9
   2c080:	it	eq
   2c082:	cmpeq	r1, r8
   2c084:	bcc.w	2c2a4 <btrfs_alloc_chunk@@Base+0x600>
   2c088:	ldr	r2, [r5, #4]
   2c08a:	str	r2, [r3, #4]
   2c08c:	str	r3, [r2, #0]
   2c08e:	ldr	r2, [sp, #196]	; 0xc4
   2c090:	str	r5, [r2, #4]
   2c092:	str	r2, [r5, #0]
   2c094:	add	r2, sp, #196	; 0xc4
   2c096:	str	r2, [r5, #4]
   2c098:	ldrd	r1, r2, [sp, #56]	; 0x38
   2c09c:	str	r5, [sp, #196]	; 0xc4
   2c09e:	orrs	r2, r1
   2c0a0:	ite	eq
   2c0a2:	addeq	r7, #1
   2c0a4:	addne	r7, #2
   2c0a6:	ldr	r2, [sp, #108]	; 0x6c
   2c0a8:	cmp	r2, r3
   2c0aa:	beq.w	2c2c8 <btrfs_alloc_chunk@@Base+0x624>
   2c0ae:	mov	r5, r3
   2c0b0:	cmp	fp, r7
   2c0b2:	bgt.w	2bf96 <btrfs_alloc_chunk@@Base+0x2f2>
   2c0b6:	ldr	r3, [sp, #44]	; 0x2c
   2c0b8:	ldr	r5, [r3, #32]
   2c0ba:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2c0be:	mov	r4, r0
   2c0c0:	cmp	r0, #0
   2c0c2:	beq.w	2bfb2 <btrfs_alloc_chunk@@Base+0x30e>
   2c0c6:	mov.w	r2, #4294967295	; 0xffffffff
   2c0ca:	movs	r0, #0
   2c0cc:	mov.w	r3, #256	; 0x100
   2c0d0:	strb.w	r2, [sp, #213]	; 0xd5
   2c0d4:	strd	r3, r0, [sp, #204]	; 0xcc
   2c0d8:	mov	r1, r5
   2c0da:	strb.w	r2, [sp, #214]	; 0xd6
   2c0de:	mov	r3, r4
   2c0e0:	strb.w	r2, [sp, #215]	; 0xd7
   2c0e4:	movs	r7, #228	; 0xe4
   2c0e6:	strb.w	r2, [sp, #216]	; 0xd8
   2c0ea:	strb.w	r2, [sp, #217]	; 0xd9
   2c0ee:	strb.w	r2, [sp, #218]	; 0xda
   2c0f2:	strb.w	r2, [sp, #219]	; 0xdb
   2c0f6:	strb.w	r2, [sp, #220]	; 0xdc
   2c0fa:	add	r2, sp, #204	; 0xcc
   2c0fc:	strd	r0, r0, [sp]
   2c100:	strb.w	r7, [sp, #212]	; 0xd4
   2c104:	bl	1d6c0 <btrfs_search_slot@@Base>
   2c108:	subs	r6, r0, #0
   2c10a:	blt.n	2c14a <btrfs_alloc_chunk@@Base+0x4a6>
   2c10c:	ldr	r2, [pc, #156]	; (2c1ac <btrfs_alloc_chunk@@Base+0x508>)
   2c10e:	it	eq
   2c110:	moveq	r3, #1
   2c112:	ldr	r1, [pc, #156]	; (2c1b0 <btrfs_alloc_chunk@@Base+0x50c>)
   2c114:	it	ne
   2c116:	movne	r3, #0
   2c118:	ldr	r0, [pc, #152]	; (2c1b4 <btrfs_alloc_chunk@@Base+0x510>)
   2c11a:	add	r2, pc
   2c11c:	adds	r2, #38	; 0x26
   2c11e:	add	r1, pc
   2c120:	add	r0, pc
   2c122:	str	r3, [sp, #0]
   2c124:	movw	r3, #681	; 0x2a9
   2c128:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2c12c:	movs	r2, #0
   2c12e:	movs	r3, #0
   2c130:	mov	r1, r4
   2c132:	mov	r0, r5
   2c134:	str	r7, [sp, #0]
   2c136:	bl	1ed78 <btrfs_previous_item@@Base>
   2c13a:	mov	r6, r0
   2c13c:	cmp	r0, #0
   2c13e:	beq.w	2c32a <btrfs_alloc_chunk@@Base+0x686>
   2c142:	movs	r3, #0
   2c144:	strd	r3, r3, [sp, #180]	; 0xb4
   2c148:	mov	r6, r3
   2c14a:	mov	r0, r4
   2c14c:	bl	1b302 <btrfs_free_path@@Base>
   2c150:	cmp	r6, #0
   2c152:	bne.w	2bcf4 <btrfs_alloc_chunk@@Base+0x50>
   2c156:	mov.w	r3, #256	; 0x100
   2c15a:	strd	r3, r6, [sp, #204]	; 0xcc
   2c15e:	movs	r3, #228	; 0xe4
   2c160:	strb.w	r3, [sp, #212]	; 0xd4
   2c164:	ldr	r3, [sp, #180]	; 0xb4
   2c166:	mov	r0, fp
   2c168:	str.w	r3, [sp, #213]	; 0xd5
   2c16c:	ldr	r3, [sp, #184]	; 0xb8
   2c16e:	str.w	r3, [sp, #217]	; 0xd9
   2c172:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2c176:	blx	8a94 <malloc@plt+0x4>
   2c17a:	mov	r5, r0
   2c17c:	cmp	r0, #0
   2c17e:	beq.w	2bfb2 <btrfs_alloc_chunk@@Base+0x30e>
   2c182:	mov.w	r0, fp, lsl #4
   2c186:	adds	r0, #72	; 0x48
   2c188:	blx	8a94 <malloc@plt+0x4>
   2c18c:	mov	r7, r0
   2c18e:	cmp	r0, #0
   2c190:	bne.w	2c370 <btrfs_alloc_chunk@@Base+0x6cc>
   2c194:	mov	r0, r5
   2c196:	blx	87cc <free@plt+0x4>
   2c19a:	b.n	2bfb2 <btrfs_alloc_chunk@@Base+0x30e>
   2c19c:	movs	r0, r0
   2c19e:	vmla.i<illegal width 64>	<illegal reg q14.5>, <illegal reg q7.5>, d28[0]
   2c1a2:	movs	r3, r0
   2c1a4:	lsls	r4, r7, #9
   2c1a6:	movs	r0, r0
   2c1a8:	beq.n	2c214 <btrfs_alloc_chunk@@Base+0x570>
   2c1aa:	movs	r3, r0
   2c1ac:	strh	r2, [r6, #58]	; 0x3a
   2c1ae:	movs	r1, r0
   2c1b0:	strh	r4, [r2, #4]
   2c1b2:	movs	r1, r0
   2c1b4:	cmp	r4, #178	; 0xb2
   2c1b6:	movs	r1, r0
   2c1b8:	vmov	r1, s18
   2c1bc:	mov	r0, r6
   2c1be:	ldr	r2, [sp, #144]	; 0x90
   2c1c0:	str	r3, [sp, #188]	; 0xbc
   2c1c2:	bl	2b34c <btrfs_add_root_ref@@Base+0x29c>
   2c1c6:	ldrd	r0, r1, [sp, #224]	; 0xe0
   2c1ca:	ldrd	r8, r9, [r5, #64]	; 0x40
   2c1ce:	ldr	r3, [sp, #188]	; 0xbc
   2c1d0:	cmp	r1, r9
   2c1d2:	it	eq
   2c1d4:	cmpeq	r0, r8
   2c1d6:	bcc.n	2c268 <btrfs_alloc_chunk@@Base+0x5c4>
   2c1d8:	cmp	r9, r1
   2c1da:	it	eq
   2c1dc:	cmpeq	r8, r0
   2c1de:	bcc.n	2c270 <btrfs_alloc_chunk@@Base+0x5cc>
   2c1e0:	ldrb.w	r2, [sp, #232]	; 0xe8
   2c1e4:	cmp	r2, #204	; 0xcc
   2c1e6:	bne.n	2c268 <btrfs_alloc_chunk@@Base+0x5c4>
   2c1e8:	ldrd	r1, r2, [sp, #80]	; 0x50
   2c1ec:	ldr.w	r9, [sp, #237]	; 0xed
   2c1f0:	ldr.w	r8, [sp, #233]	; 0xe9
   2c1f4:	cmp	r2, r9
   2c1f6:	it	eq
   2c1f8:	cmpeq	r1, r8
   2c1fa:	bcc.n	2c270 <btrfs_alloc_chunk@@Base+0x5cc>
   2c1fc:	ldrd	r1, r2, [sp, #24]
   2c200:	cmp	r2, r9
   2c202:	it	eq
   2c204:	cmpeq	r1, r8
   2c206:	bcs.n	2c21e <btrfs_alloc_chunk@@Base+0x57a>
   2c208:	ldr	r2, [sp, #124]	; 0x7c
   2c20a:	ldr	r1, [sp, #24]
   2c20c:	adds.w	r2, r8, r2
   2c210:	adc.w	r3, r9, r3
   2c214:	subs	r2, r2, r1
   2c216:	str	r2, [sp, #124]	; 0x7c
   2c218:	ldr	r2, [sp, #28]
   2c21a:	sbc.w	r3, r3, r2
   2c21e:	ldr	r2, [sp, #144]	; 0x90
   2c220:	adds	r6, #96	; 0x60
   2c222:	movs	r1, #25
   2c224:	mla	r2, r1, r2, r6
   2c228:	ldr.w	r0, [r2, #118]	; 0x76
   2c22c:	add	r6, r0
   2c22e:	ldr.w	r2, [r6, #125]!
   2c232:	adds.w	r2, r2, r8
   2c236:	str	r2, [sp, #152]	; 0x98
   2c238:	ldr	r1, [r6, #4]
   2c23a:	adc.w	r2, r1, r9
   2c23e:	str	r2, [sp, #156]	; 0x9c
   2c240:	ldrd	r8, r9, [sp, #152]	; 0x98
   2c244:	ldrd	r1, r2, [sp, #24]
   2c248:	cmp	r2, r9
   2c24a:	it	eq
   2c24c:	cmpeq	r1, r8
   2c24e:	ittt	cc
   2c250:	movcc	r1, r8
   2c252:	movcc	r2, r9
   2c254:	strdcc	r1, r2, [sp, #24]
   2c258:	ldrd	r1, r2, [sp, #80]	; 0x50
   2c25c:	ldrd	r8, r9, [sp, #24]
   2c260:	cmp	r2, r9
   2c262:	it	eq
   2c264:	cmpeq	r1, r8
   2c266:	bcc.n	2c270 <btrfs_alloc_chunk@@Base+0x5cc>
   2c268:	ldr	r2, [r4, #32]
   2c26a:	adds	r2, #1
   2c26c:	str	r2, [r4, #32]
   2c26e:	b.n	2c036 <btrfs_alloc_chunk@@Base+0x392>
   2c270:	ldrd	r1, r2, [sp, #24]
   2c274:	ldrd	r8, r9, [sp, #80]	; 0x50
   2c278:	cmp	r2, r9
   2c27a:	it	eq
   2c27c:	cmpeq	r1, r8
   2c27e:	bcs.n	2c29e <btrfs_alloc_chunk@@Base+0x5fa>
   2c280:	ldr	r1, [sp, #124]	; 0x7c
   2c282:	ldr	r2, [sp, #80]	; 0x50
   2c284:	adds	r2, r2, r1
   2c286:	ldr	r1, [sp, #84]	; 0x54
   2c288:	adc.w	r3, r1, r3
   2c28c:	ldr	r1, [sp, #24]
   2c28e:	subs	r2, r2, r1
   2c290:	str	r2, [sp, #32]
   2c292:	ldr	r2, [sp, #28]
   2c294:	sbc.w	r3, r3, r2
   2c298:	movs	r6, #0
   2c29a:	str	r3, [sp, #36]	; 0x24
   2c29c:	b.n	2c068 <btrfs_alloc_chunk@@Base+0x3c4>
   2c29e:	ldr	r2, [sp, #124]	; 0x7c
   2c2a0:	str	r2, [sp, #32]
   2c2a2:	b.n	2c298 <btrfs_alloc_chunk@@Base+0x5f4>
   2c2a4:	ldrd	r1, r2, [sp, #96]	; 0x60
   2c2a8:	ldrd	r4, r5, [sp, #32]
   2c2ac:	cmp	r2, r5
   2c2ae:	it	eq
   2c2b0:	cmpeq	r1, r4
   2c2b2:	ittt	cc
   2c2b4:	movcc	r1, r4
   2c2b6:	movcc	r2, r5
   2c2b8:	strdcc	r1, r2, [sp, #96]	; 0x60
   2c2bc:	b.n	2c0a6 <btrfs_alloc_chunk@@Base+0x402>
   2c2be:	ldrd	r3, r4, [sp, #16]
   2c2c2:	strd	r3, r4, [sp, #128]	; 0x80
   2c2c6:	b.n	2bf20 <btrfs_alloc_chunk@@Base+0x27c>
   2c2c8:	cmp	fp, r7
   2c2ca:	ble.w	2c0b6 <btrfs_alloc_chunk@@Base+0x412>
   2c2ce:	ldr	r3, [sp, #196]	; 0xc4
   2c2d0:	add	r2, sp, #196	; 0xc4
   2c2d2:	cmp	r3, r2
   2c2d4:	beq.n	2c2e8 <btrfs_alloc_chunk@@Base+0x644>
   2c2d6:	ldr	r0, [sp, #108]	; 0x6c
   2c2d8:	ldr	r2, [sp, #48]	; 0x30
   2c2da:	ldr	r1, [sp, #200]	; 0xc8
   2c2dc:	ldr	r2, [r2, #72]	; 0x48
   2c2de:	str	r0, [r3, #4]
   2c2e0:	ldr	r0, [sp, #48]	; 0x30
   2c2e2:	str	r3, [r0, #72]	; 0x48
   2c2e4:	str	r2, [r1, #0]
   2c2e6:	str	r1, [r2, #4]
   2c2e8:	ldr	r3, [sp, #76]	; 0x4c
   2c2ea:	cmp	r3, r7
   2c2ec:	bgt.n	2c306 <btrfs_alloc_chunk@@Base+0x662>
   2c2ee:	ldrd	r3, r4, [sp, #88]	; 0x58
   2c2f2:	orrs	r3, r4
   2c2f4:	beq.n	2c322 <btrfs_alloc_chunk@@Base+0x67e>
   2c2f6:	mov	r0, r7
   2c2f8:	ldr	r1, [sp, #52]	; 0x34
   2c2fa:	bl	3c420 <btrfs_util_strerror@@Base+0x290>
   2c2fe:	ldr	r3, [sp, #52]	; 0x34
   2c300:	mul.w	r7, r0, r3
   2c304:	b.n	2c322 <btrfs_alloc_chunk@@Base+0x67e>
   2c306:	ldr	r3, [sp, #168]	; 0xa8
   2c308:	cmp	r3, #0
   2c30a:	bne.w	2bcf0 <btrfs_alloc_chunk@@Base+0x4c>
   2c30e:	ldrd	r3, r4, [sp, #96]	; 0x60
   2c312:	orrs	r3, r4
   2c314:	beq.w	2bcf0 <btrfs_alloc_chunk@@Base+0x4c>
   2c318:	ldrd	r3, r4, [sp, #96]	; 0x60
   2c31c:	mov	r7, fp
   2c31e:	strd	r3, r4, [sp, #16]
   2c322:	movs	r3, #1
   2c324:	mov	fp, r7
   2c326:	str	r3, [sp, #168]	; 0xa8
   2c328:	b.n	2beac <btrfs_alloc_chunk@@Base+0x208>
   2c32a:	ldr	r2, [r4, #32]
   2c32c:	add	r1, sp, #224	; 0xe0
   2c32e:	ldr	r0, [r4, #0]
   2c330:	bl	2b34c <btrfs_add_root_ref@@Base+0x29c>
   2c334:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2c338:	cmp	r3, #0
   2c33a:	it	eq
   2c33c:	cmpeq.w	r2, #256	; 0x100
   2c340:	bne.w	2c142 <btrfs_alloc_chunk@@Base+0x49e>
   2c344:	ldr	r3, [r4, #0]
   2c346:	movs	r1, #25
   2c348:	ldr	r2, [r4, #32]
   2c34a:	adds	r3, #96	; 0x60
   2c34c:	mla	r2, r1, r2, r3
   2c350:	ldr.w	r1, [sp, #237]	; 0xed
   2c354:	ldr.w	r2, [r2, #118]	; 0x76
   2c358:	add	r3, r2
   2c35a:	ldr.w	r2, [r3, #101]!
   2c35e:	ldr	r0, [r3, #4]
   2c360:	ldr.w	r3, [sp, #233]	; 0xe9
   2c364:	adds	r3, r2, r3
   2c366:	str	r3, [sp, #180]	; 0xb4
   2c368:	adc.w	r3, r0, r1
   2c36c:	str	r3, [sp, #184]	; 0xb8
   2c36e:	b.n	2c14a <btrfs_alloc_chunk@@Base+0x4a6>
   2c370:	ldr	r3, [sp, #52]	; 0x34
   2c372:	mov	r0, sl
   2c374:	ldr	r1, [sp, #120]	; 0x78
   2c376:	strd	fp, r3, [sp]
   2c37a:	ldrd	r2, r3, [sp, #16]
   2c37e:	bl	2b24c <btrfs_add_root_ref@@Base+0x19c>
   2c382:	ldr	r3, [sp, #148]	; 0x94
   2c384:	str	r6, [sp, #76]	; 0x4c
   2c386:	strd	r0, r1, [r3]
   2c38a:	add.w	r3, r7, #72	; 0x48
   2c38e:	str	r3, [sp, #72]	; 0x48
   2c390:	add.w	r3, r5, #48	; 0x30
   2c394:	str	r3, [sp, #88]	; 0x58
   2c396:	ldr.w	r3, [pc, #1112]	; 2c7f0 <btrfs_alloc_chunk@@Base+0xb4c>
   2c39a:	add	r3, pc
   2c39c:	adds	r3, #54	; 0x36
   2c39e:	vmov	s21, r3
   2c3a2:	ldr.w	r3, [pc, #1104]	; 2c7f4 <btrfs_alloc_chunk@@Base+0xb50>
   2c3a6:	add	r3, pc
   2c3a8:	vmov	s22, r3
   2c3ac:	ldr	r3, [sp, #76]	; 0x4c
   2c3ae:	ldr	r4, [sp, #196]	; 0xc4
   2c3b0:	cmp	fp, r3
   2c3b2:	bgt.w	2c4c0 <btrfs_alloc_chunk@@Base+0x81c>
   2c3b6:	ldr.w	r6, [pc, #1088]	; 2c7f8 <btrfs_alloc_chunk@@Base+0xb54>
   2c3ba:	add	r3, sp, #196	; 0xc4
   2c3bc:	ldr.w	r1, [pc, #1084]	; 2c7fc <btrfs_alloc_chunk@@Base+0xb58>
   2c3c0:	subs	r3, r4, r3
   2c3c2:	add	r6, pc
   2c3c4:	ldr.w	r0, [pc, #1080]	; 2c800 <btrfs_alloc_chunk@@Base+0xb5c>
   2c3c8:	add.w	r6, r6, #54	; 0x36
   2c3cc:	add	r1, pc
   2c3ce:	it	ne
   2c3d0:	movne	r3, #1
   2c3d2:	add	r0, pc
   2c3d4:	mov	r2, r6
   2c3d6:	str	r3, [sp, #0]
   2c3d8:	movw	r3, #1223	; 0x4c7
   2c3dc:	mov	r4, r1
   2c3de:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2c3e2:	ldr	r3, [sp, #148]	; 0x94
   2c3e4:	ldr	r1, [sp, #52]	; 0x34
   2c3e6:	mov	r0, fp
   2c3e8:	add.w	r8, sp, #204	; 0xcc
   2c3ec:	ldrd	r2, r3, [r3]
   2c3f0:	strd	r2, r3, [r5]
   2c3f4:	ldr	r3, [sp, #172]	; 0xac
   2c3f6:	ldr.w	r2, [r3, #447]	; 0x1bf
   2c3fa:	ldr.w	r3, [r3, #451]	; 0x1c3
   2c3fe:	strh	r1, [r5, #46]	; 0x2e
   2c400:	str	r1, [r7, #68]	; 0x44
   2c402:	strd	r2, r3, [r5, #8]
   2c406:	mov.w	r2, #65536	; 0x10000
   2c40a:	movs	r3, #0
   2c40c:	strd	r2, r3, [r5, #16]
   2c410:	ldr	r2, [sp, #44]	; 0x2c
   2c412:	ldr	r3, [sp, #120]	; 0x78
   2c414:	str.w	sl, [r5, #24]
   2c418:	ldr.w	r2, [r2, #388]	; 0x184
   2c41c:	str	r3, [r5, #28]
   2c41e:	mov.w	r3, #65536	; 0x10000
   2c422:	strd	r3, r3, [r5, #32]
   2c426:	strd	r3, r2, [r7, #56]	; 0x38
   2c42a:	strd	r3, r3, [r7, #48]	; 0x30
   2c42e:	ldr	r3, [sp, #120]	; 0x78
   2c430:	str	r2, [r5, #40]	; 0x28
   2c432:	strh.w	fp, [r5, #44]	; 0x2c
   2c436:	str	r3, [r7, #44]	; 0x2c
   2c438:	str.w	sl, [r7, #40]	; 0x28
   2c43c:	str.w	fp, [r7, #64]	; 0x40
   2c440:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2c444:	vmov	r1, s17
   2c448:	mov	r3, r5
   2c44a:	mov	r2, r8
   2c44c:	str	r0, [sp, #0]
   2c44e:	vmov	r0, s16
   2c452:	bl	1e74c <btrfs_insert_item@@Base>
   2c456:	movw	r3, #1245	; 0x4dd
   2c45a:	mov	r2, r6
   2c45c:	mov	r1, r4
   2c45e:	str	r0, [sp, #0]
   2c460:	ldr	r0, [pc, #928]	; (2c804 <btrfs_alloc_chunk@@Base+0xb60>)
   2c462:	add	r0, pc
   2c464:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2c468:	ldr.w	r2, [sp, #213]	; 0xd5
   2c46c:	ldr.w	r3, [sp, #217]	; 0xd9
   2c470:	ldr	r1, [sp, #176]	; 0xb0
   2c472:	strd	r2, r3, [r7, #24]
   2c476:	strd	r2, r3, [r1]
   2c47a:	mov	r1, r7
   2c47c:	ldr	r3, [sp, #148]	; 0x94
   2c47e:	ldrd	r2, r3, [r3]
   2c482:	strd	r2, r3, [r7, #32]
   2c486:	ldr	r3, [sp, #44]	; 0x2c
   2c488:	add.w	r0, r3, #228	; 0xe4
   2c48c:	bl	1931e <insert_cache_extent@@Base>
   2c490:	subs.w	r9, r0, #0
   2c494:	blt.n	2c552 <btrfs_alloc_chunk@@Base+0x8ae>
   2c496:	and.w	r2, sl, #2
   2c49a:	movs	r3, #0
   2c49c:	orrs	r3, r2
   2c49e:	beq.n	2c4b6 <btrfs_alloc_chunk@@Base+0x812>
   2c4a0:	mov	r0, fp
   2c4a2:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2c4a6:	mov	r2, r5
   2c4a8:	mov	r1, r8
   2c4aa:	mov	r3, r0
   2c4ac:	ldr	r0, [sp, #44]	; 0x2c
   2c4ae:	bl	2bc44 <btrfs_add_system_chunk@@Base>
   2c4b2:	subs.w	r9, r0, #0
   2c4b6:	mov	r0, r5
   2c4b8:	mov	r6, r9
   2c4ba:	blx	87cc <free@plt+0x4>
   2c4be:	b.n	2bcf4 <btrfs_alloc_chunk@@Base+0x50>
   2c4c0:	add	r3, sp, #196	; 0xc4
   2c4c2:	ldr	r0, [pc, #836]	; (2c808 <btrfs_alloc_chunk@@Base+0xb64>)
   2c4c4:	subs	r2, r4, r3
   2c4c6:	vmov	r1, s22
   2c4ca:	negs	r3, r2
   2c4cc:	add	r0, pc
   2c4ce:	adcs	r3, r2
   2c4d0:	vmov	r2, s21
   2c4d4:	str	r3, [sp, #0]
   2c4d6:	movw	r3, #1196	; 0x4ac
   2c4da:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2c4de:	ldrd	r2, r3, [sp, #56]	; 0x38
   2c4e2:	orrs	r3, r2
   2c4e4:	beq.n	2c4f0 <btrfs_alloc_chunk@@Base+0x84c>
   2c4e6:	ldr	r2, [sp, #76]	; 0x4c
   2c4e8:	add.w	r3, fp, #4294967295	; 0xffffffff
   2c4ec:	cmp	r3, r2
   2c4ee:	bne.n	2c508 <btrfs_alloc_chunk@@Base+0x864>
   2c4f0:	ldrd	r2, r3, [r4]
   2c4f4:	str	r3, [r2, #4]
   2c4f6:	str	r2, [r3, #0]
   2c4f8:	ldr	r3, [sp, #48]	; 0x30
   2c4fa:	ldr	r3, [r3, #72]	; 0x48
   2c4fc:	str	r4, [r3, #4]
   2c4fe:	str	r3, [r4, #0]
   2c500:	ldr	r3, [sp, #108]	; 0x6c
   2c502:	str	r3, [r4, #4]
   2c504:	ldr	r3, [sp, #48]	; 0x30
   2c506:	str	r4, [r3, #72]	; 0x48
   2c508:	ldr.w	r3, [sp, #213]	; 0xd5
   2c50c:	vmov	s18, r3
   2c510:	ldr.w	r3, [sp, #217]	; 0xd9
   2c514:	vmov	s19, r3
   2c518:	ldr	r3, [r4, #8]
   2c51a:	str	r3, [sp, #104]	; 0x68
   2c51c:	ldrd	r2, r3, [r4, #72]	; 0x48
   2c520:	strd	r2, r3, [sp, #80]	; 0x50
   2c524:	ldr	r3, [sp, #104]	; 0x68
   2c526:	ldr.w	r3, [r3, #464]	; 0x1d0
   2c52a:	ldrd	r2, r3, [r3, #296]	; 0x128
   2c52e:	cmp	r3, #0
   2c530:	it	eq
   2c532:	cmpeq.w	r2, #1048576	; 0x100000
   2c536:	strd	r2, r3, [sp, #24]
   2c53a:	ittt	cc
   2c53c:	movcc.w	r2, #1048576	; 0x100000
   2c540:	movcc	r3, #0
   2c542:	strdcc	r2, r3, [sp, #24]
   2c546:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2c54a:	mov	r6, r0
   2c54c:	cbnz	r0, 2c55a <btrfs_alloc_chunk@@Base+0x8b6>
   2c54e:	mvn.w	r9, #11
   2c552:	mov	r0, r7
   2c554:	blx	87cc <free@plt+0x4>
   2c558:	b.n	2c4b6 <btrfs_alloc_chunk@@Base+0x812>
   2c55a:	ldrd	r2, r3, [sp, #24]
   2c55e:	ldrd	r0, r1, [sp, #80]	; 0x50
   2c562:	cmp	r3, r1
   2c564:	it	eq
   2c566:	cmpeq	r2, r0
   2c568:	bcs.w	2c7d8 <btrfs_alloc_chunk@@Base+0xb34>
   2c56c:	movs	r3, #2
   2c56e:	strb.w	r3, [r6, #64]	; 0x40
   2c572:	ldrd	r2, r3, [r4, #64]	; 0x40
   2c576:	movs	r0, #0
   2c578:	ldr	r1, [sp, #104]	; 0x68
   2c57a:	strd	r0, r0, [sp]
   2c57e:	strd	r2, r3, [sp, #224]	; 0xe0
   2c582:	add	r2, sp, #224	; 0xe0
   2c584:	ldr	r3, [sp, #24]
   2c586:	str.w	r3, [sp, #233]	; 0xe9
   2c58a:	ldr	r3, [sp, #28]
   2c58c:	str.w	r3, [sp, #237]	; 0xed
   2c590:	movs	r3, #204	; 0xcc
   2c592:	strb.w	r3, [sp, #232]	; 0xe8
   2c596:	mov	r3, r6
   2c598:	bl	1d6c0 <btrfs_search_slot@@Base>
   2c59c:	subs.w	r9, r0, #0
   2c5a0:	blt.n	2c65c <btrfs_alloc_chunk@@Base+0x9b8>
   2c5a2:	bne.n	2c644 <btrfs_alloc_chunk@@Base+0x9a0>
   2c5a4:	ldrd	r2, r3, [sp, #24]
   2c5a8:	strd	r2, r3, [sp, #32]
   2c5ac:	movs	r3, #0
   2c5ae:	movs	r2, #0
   2c5b0:	strd	r2, r3, [sp, #64]	; 0x40
   2c5b4:	add	r3, sp, #224	; 0xe0
   2c5b6:	vmov	s20, r3
   2c5ba:	ldr.w	ip, [r6]
   2c5be:	ldr.w	lr, [r6, #32]
   2c5c2:	ldr.w	r3, [ip, #192]	; 0xc0
   2c5c6:	cmp	r3, lr
   2c5c8:	bhi.w	2c704 <btrfs_alloc_chunk@@Base+0xa60>
   2c5cc:	mov.w	r3, #0
   2c5d0:	strb.w	r3, [r6, #65]	; 0x41
   2c5d4:	ldr	r3, [sp, #104]	; 0x68
   2c5d6:	mov	r1, r6
   2c5d8:	ldr.w	r0, [r3, #464]	; 0x1d0
   2c5dc:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   2c5e0:	subs.w	r9, r0, #0
   2c5e4:	beq.n	2c5ba <btrfs_alloc_chunk@@Base+0x916>
   2c5e6:	blt.n	2c65c <btrfs_alloc_chunk@@Base+0x9b8>
   2c5e8:	ldrd	r2, r3, [sp, #32]
   2c5ec:	ldrd	r0, r1, [sp, #80]	; 0x50
   2c5f0:	cmp	r3, r1
   2c5f2:	it	eq
   2c5f4:	cmpeq	r2, r0
   2c5f6:	bcs.n	2c62a <btrfs_alloc_chunk@@Base+0x986>
   2c5f8:	ldr	r2, [sp, #32]
   2c5fa:	ldr	r3, [sp, #80]	; 0x50
   2c5fc:	subs	r3, r3, r2
   2c5fe:	ldr	r2, [sp, #36]	; 0x24
   2c600:	str	r3, [sp, #136]	; 0x88
   2c602:	ldr	r3, [sp, #84]	; 0x54
   2c604:	sbc.w	r3, r3, r2
   2c608:	str	r3, [sp, #140]	; 0x8c
   2c60a:	ldrd	r0, r1, [sp, #136]	; 0x88
   2c60e:	ldrd	r2, r3, [sp, #64]	; 0x40
   2c612:	cmp	r3, r1
   2c614:	it	eq
   2c616:	cmpeq	r2, r0
   2c618:	bcs.n	2c62a <btrfs_alloc_chunk@@Base+0x986>
   2c61a:	mov	r2, r0
   2c61c:	mov	r3, r1
   2c61e:	strd	r2, r3, [sp, #64]	; 0x40
   2c622:	ldrd	r2, r3, [sp, #32]
   2c626:	strd	r2, r3, [sp, #24]
   2c62a:	ldrd	r2, r3, [sp, #64]	; 0x40
   2c62e:	ldrd	r0, r1, [sp, #16]
   2c632:	cmp	r3, r1
   2c634:	it	eq
   2c636:	cmpeq	r2, r0
   2c638:	ite	cc
   2c63a:	mvncc.w	r9, #27
   2c63e:	movcs.w	r9, #0
   2c642:	b.n	2c65c <btrfs_alloc_chunk@@Base+0x9b8>
   2c644:	ldrb.w	r3, [sp, #232]	; 0xe8
   2c648:	mov	r1, r6
   2c64a:	ldr	r0, [sp, #104]	; 0x68
   2c64c:	str	r3, [sp, #0]
   2c64e:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2c652:	bl	1ed78 <btrfs_previous_item@@Base>
   2c656:	subs.w	r9, r0, #0
   2c65a:	bge.n	2c5a4 <btrfs_alloc_chunk@@Base+0x900>
   2c65c:	mov	r0, r6
   2c65e:	bl	1b302 <btrfs_free_path@@Base>
   2c662:	cmp.w	r9, #0
   2c666:	bne.w	2c552 <btrfs_alloc_chunk@@Base+0x8ae>
   2c66a:	ldrd	r2, r3, [sp, #24]
   2c66e:	mov	r1, r4
   2c670:	vmov	r0, s16
   2c674:	strd	r2, r3, [sp, #8]
   2c678:	ldrd	r2, r3, [sp, #16]
   2c67c:	strd	r2, r3, [sp]
   2c680:	vmov	r2, s18
   2c684:	vmov	r3, s19
   2c688:	bl	2b814 <btrfs_insert_dev_extent@@Base>
   2c68c:	subs.w	r9, r0, #0
   2c690:	blt.w	2c552 <btrfs_alloc_chunk@@Base+0x8ae>
   2c694:	ldrd	r3, r2, [r4, #80]	; 0x50
   2c698:	ldr	r1, [sp, #16]
   2c69a:	vmov	r0, s16
   2c69e:	adds	r3, r3, r1
   2c6a0:	ldr	r1, [sp, #20]
   2c6a2:	adc.w	r2, r1, r2
   2c6a6:	mov	r1, r4
   2c6a8:	strd	r3, r2, [r4, #80]	; 0x50
   2c6ac:	bl	2bb60 <btrfs_update_device@@Base>
   2c6b0:	ldr	r3, [sp, #72]	; 0x48
   2c6b2:	adds	r3, #16
   2c6b4:	str	r3, [sp, #72]	; 0x48
   2c6b6:	ldr	r3, [sp, #88]	; 0x58
   2c6b8:	add.w	r1, r3, #32
   2c6bc:	subs.w	r9, r0, #0
   2c6c0:	blt.w	2c552 <btrfs_alloc_chunk@@Base+0x8ae>
   2c6c4:	ldr	r3, [sp, #72]	; 0x48
   2c6c6:	str.w	r4, [r3, #-16]
   2c6ca:	mov	r0, r3
   2c6cc:	ldrd	r2, r3, [sp, #24]
   2c6d0:	strd	r2, r3, [r0, #-8]
   2c6d4:	ldrd	r2, r3, [r4, #64]	; 0x40
   2c6d8:	strd	r2, r3, [r1, #-32]
   2c6dc:	ldrd	r2, r3, [sp, #24]
   2c6e0:	strd	r2, r3, [r1, #-24]
   2c6e4:	add.w	r3, r4, #112	; 0x70
   2c6e8:	ldr	r2, [sp, #88]	; 0x58
   2c6ea:	adds	r4, #128	; 0x80
   2c6ec:	adds	r2, #16
   2c6ee:	ldr.w	r0, [r3], #4
   2c6f2:	cmp	r3, r4
   2c6f4:	str.w	r0, [r2], #4
   2c6f8:	bne.n	2c6ee <btrfs_alloc_chunk@@Base+0xa4a>
   2c6fa:	ldr	r3, [sp, #76]	; 0x4c
   2c6fc:	str	r1, [sp, #88]	; 0x58
   2c6fe:	adds	r3, #1
   2c700:	str	r3, [sp, #76]	; 0x4c
   2c702:	b.n	2c3ac <btrfs_alloc_chunk@@Base+0x708>
   2c704:	mov	r2, lr
   2c706:	vmov	r1, s20
   2c70a:	mov	r0, ip
   2c70c:	str.w	lr, [sp, #124]	; 0x7c
   2c710:	str.w	ip, [sp, #96]	; 0x60
   2c714:	bl	2b34c <btrfs_add_root_ref@@Base+0x29c>
   2c718:	ldrd	r8, r9, [sp, #224]	; 0xe0
   2c71c:	ldrd	r2, r3, [r4, #64]	; 0x40
   2c720:	cmp	r9, r3
   2c722:	it	eq
   2c724:	cmpeq	r8, r2
   2c726:	bcc.n	2c7d0 <btrfs_alloc_chunk@@Base+0xb2c>
   2c728:	cmp	r3, r9
   2c72a:	it	eq
   2c72c:	cmpeq	r2, r8
   2c72e:	bcc.w	2c5e8 <btrfs_alloc_chunk@@Base+0x944>
   2c732:	ldrb.w	r3, [sp, #232]	; 0xe8
   2c736:	cmp	r3, #204	; 0xcc
   2c738:	bne.n	2c7d0 <btrfs_alloc_chunk@@Base+0xb2c>
   2c73a:	ldrd	r2, r3, [sp, #32]
   2c73e:	ldr.w	r9, [sp, #237]	; 0xed
   2c742:	ldr.w	r8, [sp, #233]	; 0xe9
   2c746:	cmp	r3, r9
   2c748:	ldr.w	ip, [sp, #96]	; 0x60
   2c74c:	it	eq
   2c74e:	cmpeq	r2, r8
   2c750:	ldr.w	lr, [sp, #124]	; 0x7c
   2c754:	bcs.n	2c796 <btrfs_alloc_chunk@@Base+0xaf2>
   2c756:	ldr	r3, [sp, #32]
   2c758:	subs.w	r3, r8, r3
   2c75c:	str	r3, [sp, #112]	; 0x70
   2c75e:	ldr	r3, [sp, #36]	; 0x24
   2c760:	sbc.w	r3, r9, r3
   2c764:	str	r3, [sp, #116]	; 0x74
   2c766:	ldrd	r0, r1, [sp, #112]	; 0x70
   2c76a:	ldrd	r2, r3, [sp, #64]	; 0x40
   2c76e:	cmp	r3, r1
   2c770:	it	eq
   2c772:	cmpeq	r2, r0
   2c774:	bcs.n	2c786 <btrfs_alloc_chunk@@Base+0xae2>
   2c776:	mov	r2, r0
   2c778:	mov	r3, r1
   2c77a:	strd	r2, r3, [sp, #64]	; 0x40
   2c77e:	ldrd	r2, r3, [sp, #32]
   2c782:	strd	r2, r3, [sp, #24]
   2c786:	ldrd	r2, r3, [sp, #112]	; 0x70
   2c78a:	ldrd	r0, r1, [sp, #16]
   2c78e:	cmp	r3, r1
   2c790:	it	eq
   2c792:	cmpeq	r2, r0
   2c794:	bcs.n	2c7de <btrfs_alloc_chunk@@Base+0xb3a>
   2c796:	add.w	r0, ip, #96	; 0x60
   2c79a:	movs	r3, #25
   2c79c:	mla	r2, r3, lr, r0
   2c7a0:	ldr.w	r3, [r2, #118]	; 0x76
   2c7a4:	add	r0, r3
   2c7a6:	ldr.w	r3, [r0, #125]!
   2c7aa:	adds.w	r3, r3, r8
   2c7ae:	str	r3, [sp, #160]	; 0xa0
   2c7b0:	ldr	r2, [r0, #4]
   2c7b2:	adc.w	r3, r2, r9
   2c7b6:	str	r3, [sp, #164]	; 0xa4
   2c7b8:	ldrd	r0, r1, [sp, #160]	; 0xa0
   2c7bc:	ldrd	r2, r3, [sp, #32]
   2c7c0:	cmp	r3, r1
   2c7c2:	it	eq
   2c7c4:	cmpeq	r2, r0
   2c7c6:	ittt	cc
   2c7c8:	movcc	r2, r0
   2c7ca:	movcc	r3, r1
   2c7cc:	strdcc	r2, r3, [sp, #32]
   2c7d0:	ldr	r3, [r6, #32]
   2c7d2:	adds	r3, #1
   2c7d4:	str	r3, [r6, #32]
   2c7d6:	b.n	2c5ba <btrfs_alloc_chunk@@Base+0x916>
   2c7d8:	mvn.w	r9, #27
   2c7dc:	b.n	2c65c <btrfs_alloc_chunk@@Base+0x9b8>
   2c7de:	mov.w	r9, #0
   2c7e2:	b.n	2c65c <btrfs_alloc_chunk@@Base+0x9b8>
   2c7e4:	mov	r0, r6
   2c7e6:	add	sp, #252	; 0xfc
   2c7e8:	vpop	{d8-d11}
   2c7ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c7f0:	strh	r2, [r6, #38]	; 0x26
   2c7f2:	movs	r1, r0
   2c7f4:	ldrb	r4, [r1, #24]
   2c7f6:	movs	r1, r0
   2c7f8:	strh	r2, [r1, #38]	; 0x26
   2c7fa:	movs	r1, r0
   2c7fc:	ldrb	r6, [r4, #23]
   2c7fe:	movs	r1, r0
   2c800:	ldrb	r2, [r5, #23]
   2c802:	movs	r1, r0
   2c804:	movs	r4, #27
   2c806:	movs	r1, r0
   2c808:	ldrb	r1, [r6, #19]
   2c80a:	movs	r1, r0

0002c80c <btrfs_alloc_data_chunk@@Base>:
   2c80c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c810:	mov	r7, r1
   2c812:	vpush	{d8}
   2c816:	mov	r8, r0
   2c818:	ldr	r1, [pc, #504]	; (2ca14 <btrfs_alloc_data_chunk@@Base+0x208>)
   2c81a:	ldr.w	r6, [r7, #352]	; 0x160
   2c81e:	add	r1, pc
   2c820:	sub	sp, #60	; 0x3c
   2c822:	ldrd	sl, fp, [r2]
   2c826:	ldr	r3, [sp, #104]	; 0x68
   2c828:	cmp	fp, fp
   2c82a:	str	r3, [sp, #16]
   2c82c:	ldr	r3, [sp, #108]	; 0x6c
   2c82e:	str	r3, [sp, #20]
   2c830:	ldr	r3, [pc, #484]	; (2ca18 <btrfs_alloc_data_chunk@@Base+0x20c>)
   2c832:	ldr	r3, [r1, r3]
   2c834:	ldr	r3, [r3, #0]
   2c836:	str	r3, [sp, #52]	; 0x34
   2c838:	mov.w	r3, #0
   2c83c:	ldr	r3, [r7, #24]
   2c83e:	str	r3, [sp, #24]
   2c840:	ldr	r3, [r7, #32]
   2c842:	vmov	s17, r3
   2c846:	ldr.w	r3, [r7, #388]	; 0x184
   2c84a:	rsb	r1, r3, #0
   2c84e:	mov	r3, fp
   2c850:	and.w	r2, r1, sl
   2c854:	it	eq
   2c856:	cmpeq	sl, r2
   2c858:	beq.n	2c87e <btrfs_alloc_data_chunk@@Base+0x72>
   2c85a:	ldr	r0, [pc, #448]	; (2ca1c <btrfs_alloc_data_chunk@@Base+0x210>)
   2c85c:	mov	r2, sl
   2c85e:	mvn.w	r5, #21
   2c862:	add	r0, pc
   2c864:	bl	1a900 <__btrfs_error@@Base>
   2c868:	ldr	r2, [pc, #436]	; (2ca20 <btrfs_alloc_data_chunk@@Base+0x214>)
   2c86a:	ldr	r3, [pc, #428]	; (2ca18 <btrfs_alloc_data_chunk@@Base+0x20c>)
   2c86c:	add	r2, pc
   2c86e:	ldr	r3, [r2, r3]
   2c870:	ldr	r2, [r3, #0]
   2c872:	ldr	r3, [sp, #52]	; 0x34
   2c874:	eors	r2, r3
   2c876:	beq.w	2ca08 <btrfs_alloc_data_chunk@@Base+0x1fc>
   2c87a:	blx	88e4 <__stack_chk_fail@plt>
   2c87e:	movs	r0, #1
   2c880:	mov.w	r2, #256	; 0x100
   2c884:	movs	r3, #0
   2c886:	str.w	sl, [sp, #41]	; 0x29
   2c88a:	strd	r2, r3, [sp, #32]
   2c88e:	movs	r3, #228	; 0xe4
   2c890:	str.w	fp, [sp, #45]	; 0x2d
   2c894:	strb.w	r3, [sp, #40]	; 0x28
   2c898:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2c89c:	blx	8a94 <malloc@plt+0x4>
   2c8a0:	mov	r4, r0
   2c8a2:	cbz	r0, 2c8b4 <btrfs_alloc_data_chunk@@Base+0xa8>
   2c8a4:	movs	r0, #88	; 0x58
   2c8a6:	blx	8a94 <malloc@plt+0x4>
   2c8aa:	mov	r5, r0
   2c8ac:	cbnz	r0, 2c8ba <btrfs_alloc_data_chunk@@Base+0xae>
   2c8ae:	mov	r0, r4
   2c8b0:	blx	87cc <free@plt+0x4>
   2c8b4:	mvn.w	r5, #11
   2c8b8:	b.n	2c868 <btrfs_alloc_data_chunk@@Base+0x5c>
   2c8ba:	ldr	r3, [sp, #16]
   2c8bc:	mov	r2, sl
   2c8be:	ldr	r6, [r6, #72]	; 0x48
   2c8c0:	mov	r0, r8
   2c8c2:	strd	sl, fp, [sp, #8]
   2c8c6:	str	r3, [sp, #0]
   2c8c8:	ldr	r3, [sp, #20]
   2c8ca:	mov	r1, r6
   2c8cc:	ldr.w	r9, [pc, #340]	; 2ca24 <btrfs_alloc_data_chunk@@Base+0x218>
   2c8d0:	str	r3, [sp, #4]
   2c8d2:	mov	r3, fp
   2c8d4:	bl	2b814 <btrfs_insert_dev_extent@@Base>
   2c8d8:	ldr	r2, [pc, #332]	; (2ca28 <btrfs_alloc_data_chunk@@Base+0x21c>)
   2c8da:	ldr	r1, [pc, #336]	; (2ca2c <btrfs_alloc_data_chunk@@Base+0x220>)
   2c8dc:	add	r9, pc
   2c8de:	add	r2, pc
   2c8e0:	movw	r3, #1332	; 0x534
   2c8e4:	add	r1, pc
   2c8e6:	adds	r2, #72	; 0x48
   2c8e8:	str	r2, [sp, #28]
   2c8ea:	vmov	s16, r1
   2c8ee:	str	r0, [sp, #0]
   2c8f0:	mov	r0, r9
   2c8f2:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2c8f6:	ldrd	r3, r1, [r6, #80]	; 0x50
   2c8fa:	ldr	r2, [sp, #16]
   2c8fc:	mov	r0, r8
   2c8fe:	adds	r3, r3, r2
   2c900:	ldr	r2, [sp, #20]
   2c902:	adc.w	r1, r2, r1
   2c906:	strd	r3, r1, [r6, #80]	; 0x50
   2c90a:	mov	r1, r6
   2c90c:	bl	2bb60 <btrfs_update_device@@Base>
   2c910:	ldr	r2, [sp, #28]
   2c912:	mov.w	r3, #1336	; 0x538
   2c916:	vmov	r1, s16
   2c91a:	str	r0, [sp, #0]
   2c91c:	mov	r0, r9
   2c91e:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2c922:	str	r6, [r5, #72]	; 0x48
   2c924:	strd	sl, fp, [r5, #80]	; 0x50
   2c928:	add.w	ip, r4, #64	; 0x40
   2c92c:	ldrd	r2, r3, [r6, #64]	; 0x40
   2c930:	strd	sl, fp, [r4, #56]	; 0x38
   2c934:	strd	r2, r3, [r4, #48]	; 0x30
   2c938:	add.w	r3, r6, #112	; 0x70
   2c93c:	adds	r6, #128	; 0x80
   2c93e:	ldr	r0, [r3, #0]
   2c940:	adds	r3, #8
   2c942:	ldr.w	r1, [r3, #-4]
   2c946:	cmp	r3, r6
   2c948:	mov	r2, ip
   2c94a:	stmia	r2!, {r0, r1}
   2c94c:	mov	ip, r2
   2c94e:	bne.n	2c93e <btrfs_alloc_data_chunk@@Base+0x132>
   2c950:	ldr	r3, [sp, #16]
   2c952:	movs	r0, #1
   2c954:	movs	r1, #0
   2c956:	mov.w	r6, #65537	; 0x10001
   2c95a:	str	r3, [r4, #0]
   2c95c:	ldr	r3, [sp, #20]
   2c95e:	str	r3, [r4, #4]
   2c960:	ldr	r3, [sp, #24]
   2c962:	ldr.w	r2, [r3, #447]	; 0x1bf
   2c966:	ldr.w	r3, [r3, #451]	; 0x1c3
   2c96a:	strd	r0, r1, [r4, #24]
   2c96e:	str	r6, [r4, #44]	; 0x2c
   2c970:	strd	r2, r3, [r4, #8]
   2c974:	mov.w	r2, #65536	; 0x10000
   2c978:	movs	r3, #0
   2c97a:	strd	r2, r3, [r4, #16]
   2c97e:	ldr.w	r2, [r7, #388]	; 0x184
   2c982:	mov.w	r3, #65536	; 0x10000
   2c986:	strd	r0, r1, [r5, #40]	; 0x28
   2c98a:	strd	r3, r3, [r4, #32]
   2c98e:	strd	r3, r2, [r5, #56]	; 0x38
   2c992:	str	r2, [r4, #40]	; 0x28
   2c994:	strd	r3, r3, [r5, #48]	; 0x30
   2c998:	strd	r0, r0, [r5, #64]	; 0x40
   2c99c:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2c9a0:	vmov	r1, s17
   2c9a4:	add	r2, sp, #32
   2c9a6:	mov	r3, r4
   2c9a8:	ldr	r6, [pc, #132]	; (2ca30 <btrfs_alloc_data_chunk@@Base+0x224>)
   2c9aa:	add	r6, pc
   2c9ac:	str	r0, [sp, #0]
   2c9ae:	mov	r0, r8
   2c9b0:	bl	1e74c <btrfs_insert_item@@Base>
   2c9b4:	ldr.w	r8, [pc, #124]	; 2ca34 <btrfs_alloc_data_chunk@@Base+0x228>
   2c9b8:	ldr	r2, [pc, #124]	; (2ca38 <btrfs_alloc_data_chunk@@Base+0x22c>)
   2c9ba:	movw	r3, #1367	; 0x557
   2c9be:	add	r8, pc
   2c9c0:	add	r2, pc
   2c9c2:	adds	r2, #72	; 0x48
   2c9c4:	mov	r1, r8
   2c9c6:	str	r2, [sp, #24]
   2c9c8:	str	r0, [sp, #0]
   2c9ca:	mov	r0, r6
   2c9cc:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2c9d0:	ldr.w	r1, [sp, #41]	; 0x29
   2c9d4:	ldr.w	r3, [sp, #45]	; 0x2d
   2c9d8:	add.w	r0, r7, #228	; 0xe4
   2c9dc:	strd	r1, r3, [r5, #24]
   2c9e0:	mov	r1, r5
   2c9e2:	ldr	r3, [sp, #16]
   2c9e4:	str	r3, [r5, #32]
   2c9e6:	ldr	r3, [sp, #20]
   2c9e8:	str	r3, [r5, #36]	; 0x24
   2c9ea:	bl	1931e <insert_cache_extent@@Base>
   2c9ee:	ldr	r2, [sp, #24]
   2c9f0:	movw	r3, #1373	; 0x55d
   2c9f4:	mov	r1, r8
   2c9f6:	str	r0, [sp, #0]
   2c9f8:	mov	r5, r0
   2c9fa:	mov	r0, r6
   2c9fc:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2ca00:	mov	r0, r4
   2ca02:	blx	87cc <free@plt+0x4>
   2ca06:	b.n	2c868 <btrfs_alloc_data_chunk@@Base+0x5c>
   2ca08:	mov	r0, r5
   2ca0a:	add	sp, #60	; 0x3c
   2ca0c:	vpop	{d8}
   2ca10:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca14:	stmia	r5!, {r1, r4}
   2ca16:	movs	r3, r0
   2ca18:	lsls	r4, r7, #9
   2ca1a:	movs	r0, r0
   2ca1c:	ldrb	r5, [r6, #5]
   2ca1e:	movs	r1, r0
   2ca20:	stmia	r4!, {r2, r6, r7}
   2ca22:	movs	r3, r0
   2ca24:	subs	r1, r4, #6
   2ca26:	movs	r1, r0
   2ca28:	ldrb	r6, [r5, #30]
   2ca2a:	movs	r1, r0
   2ca2c:	ldrb	r6, [r1, #3]
   2ca2e:	movs	r1, r0
   2ca30:	subs	r3, r2, #3
   2ca32:	movs	r1, r0
   2ca34:	strb	r4, [r6, #31]
   2ca36:	movs	r1, r0
   2ca38:	ldrb	r4, [r1, #27]
   2ca3a:	movs	r1, r0

0002ca3c <btrfs_num_copies@@Base>:
   2ca3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ca40:	sub	sp, #44	; 0x2c
   2ca42:	adds	r0, #228	; 0xe4
   2ca44:	mov	r4, r2
   2ca46:	ldrd	fp, r1, [sp, #80]	; 0x50
   2ca4a:	mov	r5, r3
   2ca4c:	ldr.w	sl, [pc, #196]	; 2cb14 <btrfs_num_copies@@Base+0xd8>
   2ca50:	str	r1, [sp, #36]	; 0x24
   2ca52:	bl	19460 <search_cache_extent@@Base>
   2ca56:	add	sl, pc
   2ca58:	ldr	r1, [sp, #36]	; 0x24
   2ca5a:	cbnz	r0, 2ca86 <btrfs_num_copies@@Base+0x4a>
   2ca5c:	ldr	r3, [pc, #184]	; (2cb18 <btrfs_num_copies@@Base+0xdc>)
   2ca5e:	adds.w	r2, r4, fp
   2ca62:	adc.w	r1, r5, r1
   2ca66:	ldr.w	r3, [sl, r3]
   2ca6a:	strd	r2, r1, [sp, #8]
   2ca6e:	movs	r1, #1
   2ca70:	ldr	r2, [pc, #168]	; (2cb1c <btrfs_num_copies@@Base+0xe0>)
   2ca72:	strd	r4, r5, [sp]
   2ca76:	add	r2, pc
   2ca78:	ldr	r0, [r3, #0]
   2ca7a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2ca7e:	movs	r0, #1
   2ca80:	add	sp, #44	; 0x2c
   2ca82:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca86:	ldrd	r8, r9, [r0, #24]
   2ca8a:	ldrd	r3, r2, [r0, #32]
   2ca8e:	adds.w	r6, r8, r3
   2ca92:	adc.w	r7, r9, r2
   2ca96:	cmp	r5, r9
   2ca98:	it	eq
   2ca9a:	cmpeq	r4, r8
   2ca9c:	bcc.n	2caa6 <btrfs_num_copies@@Base+0x6a>
   2ca9e:	cmp	r7, r5
   2caa0:	it	eq
   2caa2:	cmpeq	r6, r4
   2caa4:	bcs.n	2cad2 <btrfs_num_copies@@Base+0x96>
   2caa6:	ldr	r3, [pc, #112]	; (2cb18 <btrfs_num_copies@@Base+0xdc>)
   2caa8:	adds.w	r2, r4, fp
   2caac:	adc.w	r1, r5, r1
   2cab0:	ldr.w	r3, [sl, r3]
   2cab4:	strd	r2, r1, [sp, #8]
   2cab8:	movs	r1, #1
   2caba:	ldr	r2, [pc, #100]	; (2cb20 <btrfs_num_copies@@Base+0xe4>)
   2cabc:	strd	r6, r7, [sp, #24]
   2cac0:	strd	r8, r9, [sp, #16]
   2cac4:	add	r2, pc
   2cac6:	strd	r4, r5, [sp]
   2caca:	ldr	r0, [r3, #0]
   2cacc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2cad0:	b.n	2ca7e <btrfs_num_copies@@Base+0x42>
   2cad2:	ldr	r2, [r0, #40]	; 0x28
   2cad4:	movs	r3, #0
   2cad6:	mov	r5, r3
   2cad8:	and.w	r4, r2, #1584	; 0x630
   2cadc:	orrs.w	r1, r4, r5
   2cae0:	beq.n	2cae6 <btrfs_num_copies@@Base+0xaa>
   2cae2:	ldr	r0, [r0, #64]	; 0x40
   2cae4:	b.n	2ca80 <btrfs_num_copies@@Base+0x44>
   2cae6:	and.w	r4, r2, #64	; 0x40
   2caea:	orrs.w	r1, r4, r5
   2caee:	beq.n	2caf4 <btrfs_num_copies@@Base+0xb8>
   2caf0:	ldr	r0, [r0, #68]	; 0x44
   2caf2:	b.n	2ca80 <btrfs_num_copies@@Base+0x44>
   2caf4:	and.w	r0, r2, #128	; 0x80
   2caf8:	mov	r1, r3
   2cafa:	orrs	r1, r0
   2cafc:	bne.n	2cb10 <btrfs_num_copies@@Base+0xd4>
   2cafe:	and.w	r0, r2, #256	; 0x100
   2cb02:	mov	r1, r3
   2cb04:	orrs.w	r3, r0, r1
   2cb08:	ite	ne
   2cb0a:	movne	r0, #3
   2cb0c:	moveq	r0, #1
   2cb0e:	b.n	2ca80 <btrfs_num_copies@@Base+0x44>
   2cb10:	movs	r0, #2
   2cb12:	b.n	2ca80 <btrfs_num_copies@@Base+0x44>
   2cb14:	stmia	r2!, {r1, r3, r4, r6, r7}
   2cb16:	movs	r3, r0
   2cb18:	lsls	r4, r1, #10
   2cb1a:	movs	r0, r0
   2cb1c:	strb	r7, [r1, #30]
   2cb1e:	movs	r1, r0
   2cb20:	strb	r3, [r3, #29]
   2cb22:	movs	r1, r0

0002cb24 <btrfs_next_bg@@Base>:
   2cb24:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cb28:	adds	r0, #228	; 0xe4
   2cb2a:	ldrd	r4, r5, [r1]
   2cb2e:	mov	r7, r2
   2cb30:	ldrd	sl, fp, [sp, #40]	; 0x28
   2cb34:	mov	r6, r1
   2cb36:	mov	r2, r4
   2cb38:	mov	r3, r5
   2cb3a:	bl	19460 <search_cache_extent@@Base>
   2cb3e:	cbz	r0, 2cb4c <btrfs_next_bg@@Base+0x28>
   2cb40:	orrs.w	r3, r4, r5
   2cb44:	beq.n	2cb54 <btrfs_next_bg@@Base+0x30>
   2cb46:	bl	19534 <next_cache_extent@@Base>
   2cb4a:	cbnz	r0, 2cb54 <btrfs_next_bg@@Base+0x30>
   2cb4c:	mvn.w	r0, #1
   2cb50:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cb54:	ldrd	r2, r3, [r0, #40]	; 0x28
   2cb58:	ldrd	r4, r5, [r0, #24]
   2cb5c:	and.w	r8, sl, r2
   2cb60:	and.w	r9, fp, r3
   2cb64:	orrs.w	r3, r8, r9
   2cb68:	beq.n	2cb7a <btrfs_next_bg@@Base+0x56>
   2cb6a:	strd	r4, r5, [r6]
   2cb6e:	ldrd	r2, r3, [r0, #32]
   2cb72:	movs	r0, #0
   2cb74:	strd	r2, r3, [r7]
   2cb78:	b.n	2cb50 <btrfs_next_bg@@Base+0x2c>
   2cb7a:	orrs.w	r3, r4, r5
   2cb7e:	bne.n	2cb3e <btrfs_next_bg@@Base+0x1a>
   2cb80:	bl	19534 <next_cache_extent@@Base>
   2cb84:	b.n	2cb3e <btrfs_next_bg@@Base+0x1a>

0002cb86 <btrfs_rmap_block@@Base>:
   2cb86:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cb8a:	adds	r0, #228	; 0xe4
   2cb8c:	sub	sp, #60	; 0x3c
   2cb8e:	bl	19460 <search_cache_extent@@Base>
   2cb92:	ldr	r2, [pc, #464]	; (2cd64 <btrfs_rmap_block@@Base+0x1de>)
   2cb94:	ldr	r1, [pc, #464]	; (2cd68 <btrfs_rmap_block@@Base+0x1e2>)
   2cb96:	movw	r3, #1467	; 0x5bb
   2cb9a:	add	r2, pc
   2cb9c:	adds	r2, #95	; 0x5f
   2cb9e:	add	r1, pc
   2cba0:	mov	r4, r0
   2cba2:	clz	r0, r0
   2cba6:	lsrs	r0, r0, #5
   2cba8:	str	r0, [sp, #0]
   2cbaa:	ldr	r0, [pc, #448]	; (2cd6c <btrfs_rmap_block@@Base+0x1e6>)
   2cbac:	add	r0, pc
   2cbae:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2cbb2:	ldr	r5, [r4, #56]	; 0x38
   2cbb4:	ldr	r0, [r4, #40]	; 0x28
   2cbb6:	movs	r1, #0
   2cbb8:	ldrd	r6, r7, [r4, #32]
   2cbbc:	asrs	r3, r5, #31
   2cbbe:	mov	r2, r5
   2cbc0:	strd	r2, r3, [sp, #8]
   2cbc4:	and.w	r2, r0, #64	; 0x40
   2cbc8:	mov	r3, r1
   2cbca:	orrs	r3, r2
   2cbcc:	beq.n	2cc1c <btrfs_rmap_block@@Base+0x96>
   2cbce:	ldrd	r0, r1, [r4, #64]	; 0x40
   2cbd2:	bl	3c420 <btrfs_util_strerror@@Base+0x290>
   2cbd6:	mov	r2, r0
   2cbd8:	mov	r0, r6
   2cbda:	mov	r1, r7
   2cbdc:	asrs	r3, r2, #31
   2cbde:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2cbe2:	mov	r6, r0
   2cbe4:	mov	r7, r1
   2cbe6:	ldr	r1, [r4, #64]	; 0x40
   2cbe8:	movs	r0, #1
   2cbea:	mov.w	r8, #0
   2cbee:	mov	sl, r8
   2cbf0:	mov	r9, r8
   2cbf2:	lsls	r1, r1, #3
   2cbf4:	blx	8718 <calloc@plt+0x4>
   2cbf8:	strd	r0, r4, [sp, #24]
   2cbfc:	ldr	r5, [r4, #64]	; 0x40
   2cbfe:	cmp	r5, r8
   2cc00:	bgt.n	2cc5a <btrfs_rmap_block@@Base+0xd4>
   2cc02:	ldr	r3, [sp, #104]	; 0x68
   2cc04:	movs	r0, #0
   2cc06:	ldr	r2, [sp, #24]
   2cc08:	str	r2, [r3, #0]
   2cc0a:	ldr	r3, [sp, #108]	; 0x6c
   2cc0c:	ldr	r2, [sp, #8]
   2cc0e:	str.w	r9, [r3]
   2cc12:	ldr	r3, [sp, #112]	; 0x70
   2cc14:	str	r2, [r3, #0]
   2cc16:	add	sp, #60	; 0x3c
   2cc18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cc1c:	and.w	r8, r0, #8
   2cc20:	mov	r9, r1
   2cc22:	orrs.w	r3, r8, r9
   2cc26:	ldr	r2, [r4, #64]	; 0x40
   2cc28:	bne.n	2cbd8 <btrfs_rmap_block@@Base+0x52>
   2cc2a:	and.w	r2, r0, #384	; 0x180
   2cc2e:	mov	r3, r1
   2cc30:	orrs	r3, r2
   2cc32:	beq.n	2cbe6 <btrfs_rmap_block@@Base+0x60>
   2cc34:	mov	r0, r4
   2cc36:	bl	2b1b0 <btrfs_add_root_ref@@Base+0x100>
   2cc3a:	mov	r1, r7
   2cc3c:	asrs	r3, r0, #31
   2cc3e:	mov	r2, r0
   2cc40:	mov	r8, r0
   2cc42:	mov	r0, r6
   2cc44:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2cc48:	mul.w	r5, r8, r5
   2cc4c:	asrs	r3, r5, #31
   2cc4e:	mov	r2, r5
   2cc50:	strd	r2, r3, [sp, #8]
   2cc54:	mov	r6, r0
   2cc56:	mov	r7, r1
   2cc58:	b.n	2cbe6 <btrfs_rmap_block@@Base+0x60>
   2cc5a:	ldr	r3, [sp, #28]
   2cc5c:	ldrd	fp, ip, [r3, #80]	; 0x50
   2cc60:	ldrd	r2, r3, [sp, #96]	; 0x60
   2cc64:	cmp	r3, ip
   2cc66:	it	eq
   2cc68:	cmpeq	r2, fp
   2cc6a:	bcc.n	2cd14 <btrfs_rmap_block@@Base+0x18e>
   2cc6c:	adds.w	r3, fp, r6
   2cc70:	str	r3, [sp, #32]
   2cc72:	adc.w	r3, ip, r7
   2cc76:	str	r3, [sp, #36]	; 0x24
   2cc78:	ldrd	r0, r1, [sp, #32]
   2cc7c:	ldrd	r2, r3, [sp, #96]	; 0x60
   2cc80:	cmp	r3, r1
   2cc82:	it	eq
   2cc84:	cmpeq	r2, r0
   2cc86:	bcs.n	2cd14 <btrfs_rmap_block@@Base+0x18e>
   2cc88:	ldr	r1, [sp, #96]	; 0x60
   2cc8a:	ldr	r2, [r4, #56]	; 0x38
   2cc8c:	subs.w	r0, r1, fp
   2cc90:	ldr	r1, [sp, #100]	; 0x64
   2cc92:	mov.w	r3, r2, asr #31
   2cc96:	sbc.w	r1, r1, ip
   2cc9a:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2cc9e:	ldr	r3, [r4, #40]	; 0x28
   2cca0:	and.w	r2, r3, #64	; 0x40
   2cca4:	str	r2, [sp, #40]	; 0x28
   2cca6:	movs	r2, #0
   2cca8:	str	r2, [sp, #44]	; 0x2c
   2ccaa:	ldrd	fp, ip, [sp, #40]	; 0x28
   2ccae:	orrs.w	r2, fp, ip
   2ccb2:	mov	lr, r0
   2ccb4:	beq.n	2cd24 <btrfs_rmap_block@@Base+0x19e>
   2ccb6:	asrs	r3, r5, #31
   2ccb8:	ldr	r2, [r4, #68]	; 0x44
   2ccba:	muls	r1, r5
   2ccbc:	mla	r1, lr, r3, r1
   2ccc0:	asrs	r3, r2, #31
   2ccc2:	umull	fp, ip, r5, lr
   2ccc6:	add	ip, r1
   2ccc8:	adds.w	r0, fp, r8
   2cccc:	adc.w	r1, ip, sl
   2ccd0:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2ccd4:	mov	lr, r0
   2ccd6:	ldr	r3, [sp, #12]
   2ccd8:	ldr	r2, [sp, #8]
   2ccda:	mul.w	r3, lr, r3
   2ccde:	mla	r1, r2, r1, r3
   2cce2:	umull	r2, r3, lr, r2
   2cce6:	add	r3, r1
   2cce8:	ldrd	r1, r0, [r4, #24]
   2ccec:	adds	r1, r2, r1
   2ccee:	str	r1, [sp, #16]
   2ccf0:	adcs	r3, r0
   2ccf2:	str	r3, [sp, #20]
   2ccf4:	ldr	r3, [sp, #24]
   2ccf6:	sub.w	r2, r3, #8
   2ccfa:	movs	r3, #0
   2ccfc:	cmp	r3, r9
   2ccfe:	blt.n	2cd4e <btrfs_rmap_block@@Base+0x1c8>
   2cd00:	bne.n	2cd14 <btrfs_rmap_block@@Base+0x18e>
   2cd02:	ldr	r3, [sp, #24]
   2cd04:	ldrd	r1, r2, [sp, #16]
   2cd08:	add.w	r3, r3, r9, lsl #3
   2cd0c:	add.w	r9, r9, #1
   2cd10:	strd	r1, r2, [r3]
   2cd14:	ldr	r3, [sp, #28]
   2cd16:	adds.w	r8, r8, #1
   2cd1a:	adc.w	sl, sl, #0
   2cd1e:	adds	r3, #16
   2cd20:	str	r3, [sp, #28]
   2cd22:	b.n	2cbfc <btrfs_rmap_block@@Base+0x76>
   2cd24:	and.w	r3, r3, #8
   2cd28:	str	r3, [sp, #48]	; 0x30
   2cd2a:	movs	r3, #0
   2cd2c:	str	r3, [sp, #52]	; 0x34
   2cd2e:	ldrd	r2, r3, [sp, #48]	; 0x30
   2cd32:	orrs	r3, r2
   2cd34:	beq.n	2ccd6 <btrfs_rmap_block@@Base+0x150>
   2cd36:	asrs	r3, r5, #31
   2cd38:	muls	r1, r5
   2cd3a:	mla	r3, lr, r3, r1
   2cd3e:	umull	r0, r1, r5, lr
   2cd42:	add	r1, r3
   2cd44:	adds.w	lr, r0, r8
   2cd48:	adc.w	r1, r1, sl
   2cd4c:	b.n	2ccd6 <btrfs_rmap_block@@Base+0x150>
   2cd4e:	ldrd	r0, r1, [r2, #8]!
   2cd52:	ldrd	fp, ip, [sp, #16]
   2cd56:	cmp	r1, ip
   2cd58:	it	eq
   2cd5a:	cmpeq	r0, fp
   2cd5c:	beq.n	2cd14 <btrfs_rmap_block@@Base+0x18e>
   2cd5e:	adds	r3, #1
   2cd60:	b.n	2ccfc <btrfs_rmap_block@@Base+0x176>
   2cd62:	nop
   2cd64:	ldrb	r2, [r6, #19]
   2cd66:	movs	r1, r0
   2cd68:	strb	r4, [r2, #24]
   2cd6a:	movs	r1, r0
   2cd6c:	strb	r1, [r4, #26]
   2cd6e:	movs	r1, r0

0002cd70 <__btrfs_map_block@@Base>:
   2cd70:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cd74:	sub	sp, #124	; 0x7c
   2cd76:	mov	fp, r1
   2cd78:	strd	r2, r3, [sp, #16]
   2cd7c:	ldrd	r3, r5, [sp, #168]	; 0xa8
   2cd80:	cbz	r3, 2cdba <__btrfs_map_block@@Base+0x4a>
   2cd82:	cmp	r1, #0
   2cd84:	ite	eq
   2cd86:	moveq	r7, #1
   2cd88:	movne	r7, #8
   2cd8a:	add.w	sl, r0, #228	; 0xe4
   2cd8e:	movs	r6, #1
   2cd90:	mov.w	r9, #0
   2cd94:	ldrd	r2, r3, [sp, #16]
   2cd98:	mov	r0, sl
   2cd9a:	bl	19460 <search_cache_extent@@Base>
   2cd9e:	mov	r4, r0
   2cda0:	cbnz	r0, 2cdbe <__btrfs_map_block@@Base+0x4e>
   2cda2:	ldr	r1, [sp, #160]	; 0xa0
   2cda4:	mov.w	r2, #4294967295	; 0xffffffff
   2cda8:	mov.w	r3, #4294967295	; 0xffffffff
   2cdac:	strd	r2, r3, [r1]
   2cdb0:	mvn.w	r0, #1
   2cdb4:	add	sp, #124	; 0x7c
   2cdb6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cdba:	movs	r7, #8
   2cdbc:	b.n	2cd8a <__btrfs_map_block@@Base+0x1a>
   2cdbe:	ldrd	r2, r3, [r0, #24]
   2cdc2:	strd	r2, r3, [sp, #24]
   2cdc6:	ldrd	r0, r1, [sp, #24]
   2cdca:	ldrd	r2, r3, [sp, #16]
   2cdce:	cmp	r3, r1
   2cdd0:	it	eq
   2cdd2:	cmpeq	r2, r0
   2cdd4:	bcs.n	2cdec <__btrfs_map_block@@Base+0x7c>
   2cdd6:	ldr	r3, [sp, #24]
   2cdd8:	ldr	r2, [sp, #16]
   2cdda:	ldr	r1, [sp, #20]
   2cddc:	subs	r2, r3, r2
   2cdde:	ldr	r3, [sp, #28]
   2cde0:	sbc.w	r3, r3, r1
   2cde4:	ldr	r1, [sp, #160]	; 0xa0
   2cde6:	str	r2, [r1, #0]
   2cde8:	str	r3, [r1, #4]
   2cdea:	b.n	2cdb0 <__btrfs_map_block@@Base+0x40>
   2cdec:	ldr	r3, [sp, #168]	; 0xa8
   2cdee:	cbz	r3, 2ce04 <__btrfs_map_block@@Base+0x94>
   2cdf0:	lsls	r1, r7, #4
   2cdf2:	movs	r0, #1
   2cdf4:	adds	r1, #8
   2cdf6:	blx	8718 <calloc@plt+0x4>
   2cdfa:	mov	r8, r0
   2cdfc:	cbnz	r0, 2ce08 <__btrfs_map_block@@Base+0x98>
   2cdfe:	mvn.w	r0, #11
   2ce02:	b.n	2cdb4 <__btrfs_map_block@@Base+0x44>
   2ce04:	ldr.w	r8, [sp, #168]	; 0xa8
   2ce08:	ldr	r3, [r4, #40]	; 0x28
   2ce0a:	cmp.w	fp, #1
   2ce0e:	str	r3, [sp, #76]	; 0x4c
   2ce10:	bne.n	2ce24 <__btrfs_map_block@@Base+0xb4>
   2ce12:	and.w	r3, r3, #1584	; 0x630
   2ce16:	strd	r3, r9, [sp, #8]
   2ce1a:	ldrd	r2, r3, [sp, #8]
   2ce1e:	orrs	r3, r2
   2ce20:	beq.n	2ce60 <__btrfs_map_block@@Base+0xf0>
   2ce22:	ldr	r6, [r4, #64]	; 0x40
   2ce24:	ldr	r3, [sp, #76]	; 0x4c
   2ce26:	and.w	r3, r3, #384	; 0x180
   2ce2a:	strd	r3, r9, [sp, #48]	; 0x30
   2ce2e:	ldrd	r2, r3, [sp, #48]	; 0x30
   2ce32:	orrs	r3, r2
   2ce34:	ldr	r3, [sp, #168]	; 0xa8
   2ce36:	beq.n	2ce76 <__btrfs_map_block@@Base+0x106>
   2ce38:	cbz	r3, 2ce86 <__btrfs_map_block@@Base+0x116>
   2ce3a:	tst.w	fp, #1
   2ce3e:	bne.n	2ce44 <__btrfs_map_block@@Base+0xd4>
   2ce40:	cmp	r5, #1
   2ce42:	ble.n	2ce78 <__btrfs_map_block@@Base+0x108>
   2ce44:	ldr	r3, [sp, #176]	; 0xb0
   2ce46:	cbz	r3, 2ce78 <__btrfs_map_block@@Base+0x108>
   2ce48:	ldr	r6, [r4, #64]	; 0x40
   2ce4a:	cmp	r7, r6
   2ce4c:	blt.n	2ce7c <__btrfs_map_block@@Base+0x10c>
   2ce4e:	lsls	r0, r6, #3
   2ce50:	blx	8a94 <malloc@plt+0x4>
   2ce54:	str	r0, [sp, #8]
   2ce56:	cbnz	r0, 2ce8a <__btrfs_map_block@@Base+0x11a>
   2ce58:	mov	r0, r8
   2ce5a:	blx	87cc <free@plt+0x4>
   2ce5e:	b.n	2cdfe <__btrfs_map_block@@Base+0x8e>
   2ce60:	ldr	r3, [sp, #76]	; 0x4c
   2ce62:	and.w	r3, r3, #64	; 0x40
   2ce66:	strd	r3, r9, [sp, #32]
   2ce6a:	ldrd	r2, r3, [sp, #32]
   2ce6e:	orrs	r3, r2
   2ce70:	it	ne
   2ce72:	ldrne	r6, [r4, #68]	; 0x44
   2ce74:	b.n	2ce24 <__btrfs_map_block@@Base+0xb4>
   2ce76:	cbz	r3, 2ce86 <__btrfs_map_block@@Base+0x116>
   2ce78:	cmp	r7, r6
   2ce7a:	bge.n	2ce86 <__btrfs_map_block@@Base+0x116>
   2ce7c:	mov	r0, r8
   2ce7e:	mov	r7, r6
   2ce80:	blx	87cc <free@plt+0x4>
   2ce84:	b.n	2cd94 <__btrfs_map_block@@Base+0x24>
   2ce86:	movs	r3, #0
   2ce88:	str	r3, [sp, #8]
   2ce8a:	ldr	r2, [sp, #24]
   2ce8c:	ldr	r3, [sp, #16]
   2ce8e:	ldr	r6, [r4, #56]	; 0x38
   2ce90:	subs	r3, r3, r2
   2ce92:	ldr	r2, [sp, #28]
   2ce94:	str	r3, [sp, #64]	; 0x40
   2ce96:	ldr	r3, [sp, #20]
   2ce98:	sbc.w	r3, r3, r2
   2ce9c:	str	r3, [sp, #68]	; 0x44
   2ce9e:	mov	r2, r6
   2cea0:	asrs	r3, r6, #31
   2cea2:	ldrd	r0, r1, [sp, #64]	; 0x40
   2cea6:	strd	r2, r3, [sp, #80]	; 0x50
   2ceaa:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2ceae:	mov	r9, r2
   2ceb0:	ldr	r2, [sp, #84]	; 0x54
   2ceb2:	mov	r7, r0
   2ceb4:	str	r3, [sp, #100]	; 0x64
   2ceb6:	mul.w	r3, r6, r1
   2ceba:	str	r1, [sp, #48]	; 0x30
   2cebc:	mla	r3, r7, r2, r3
   2cec0:	mov	sl, r1
   2cec2:	umull	r1, r2, r6, r7
   2cec6:	str	r0, [sp, #32]
   2cec8:	strd	r1, r2, [sp, #56]	; 0x38
   2cecc:	ldr	r2, [sp, #60]	; 0x3c
   2cece:	add	r3, r2
   2ced0:	str	r3, [sp, #60]	; 0x3c
   2ced2:	ldrd	r0, r1, [sp, #56]	; 0x38
   2ced6:	ldrd	r2, r3, [sp, #64]	; 0x40
   2ceda:	cmp	r3, r1
   2cedc:	ldr	r1, [pc, #952]	; (2d298 <__btrfs_map_block@@Base+0x528>)
   2cede:	it	eq
   2cee0:	cmpeq	r2, r0
   2cee2:	ldr	r2, [pc, #952]	; (2d29c <__btrfs_map_block@@Base+0x52c>)
   2cee4:	ldr	r0, [pc, #952]	; (2d2a0 <__btrfs_map_block@@Base+0x530>)
   2cee6:	add	r1, pc
   2cee8:	add	r2, pc
   2ceea:	ite	cc
   2ceec:	movcc	r3, #1
   2ceee:	movcs	r3, #0
   2cef0:	adds	r2, #112	; 0x70
   2cef2:	add	r0, pc
   2cef4:	str	r3, [sp, #0]
   2cef6:	movw	r3, #1638	; 0x666
   2cefa:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2cefe:	ldr	r3, [sp, #76]	; 0x4c
   2cf00:	movs	r1, #0
   2cf02:	ldrd	r2, r6, [r4, #32]
   2cf06:	and.w	r0, r3, #2040	; 0x7f8
   2cf0a:	str.w	r9, [sp, #96]	; 0x60
   2cf0e:	orrs.w	r3, r0, r1
   2cf12:	ldr	r3, [sp, #24]
   2cf14:	ldr	r1, [sp, #16]
   2cf16:	beq.n	2cf70 <__btrfs_map_block@@Base+0x200>
   2cf18:	subs	r3, r3, r1
   2cf1a:	ldr	r0, [sp, #20]
   2cf1c:	ldr	r1, [sp, #28]
   2cf1e:	sbc.w	r0, r1, r0
   2cf22:	ldr	r1, [sp, #80]	; 0x50
   2cf24:	adds.w	lr, r1, r3
   2cf28:	ldr	r1, [sp, #84]	; 0x54
   2cf2a:	adc.w	ip, r1, r0
   2cf2e:	adds	r3, r3, r2
   2cf30:	str	r3, [sp, #88]	; 0x58
   2cf32:	adc.w	r3, r0, r6
   2cf36:	str	r3, [sp, #92]	; 0x5c
   2cf38:	ldr	r3, [sp, #56]	; 0x38
   2cf3a:	adds.w	r3, lr, r3
   2cf3e:	str	r3, [sp, #40]	; 0x28
   2cf40:	ldr	r3, [sp, #60]	; 0x3c
   2cf42:	adc.w	r3, ip, r3
   2cf46:	str	r3, [sp, #44]	; 0x2c
   2cf48:	ldrd	r0, r1, [sp, #40]	; 0x28
   2cf4c:	ldrd	r2, r3, [sp, #88]	; 0x58
   2cf50:	cmp	r3, r1
   2cf52:	it	eq
   2cf54:	cmpeq	r2, r0
   2cf56:	bcs.n	2cf5c <__btrfs_map_block@@Base+0x1ec>
   2cf58:	strd	r2, r3, [sp, #40]	; 0x28
   2cf5c:	ldr	r3, [sp, #160]	; 0xa0
   2cf5e:	mov	r1, r3
   2cf60:	ldrd	r2, r3, [sp, #40]	; 0x28
   2cf64:	strd	r2, r3, [r1]
   2cf68:	ldr	r3, [sp, #168]	; 0xa8
   2cf6a:	cbnz	r3, 2cf86 <__btrfs_map_block@@Base+0x216>
   2cf6c:	movs	r0, #0
   2cf6e:	b.n	2cdb4 <__btrfs_map_block@@Base+0x44>
   2cf70:	subs	r3, r3, r1
   2cf72:	ldr	r0, [sp, #20]
   2cf74:	ldr	r1, [sp, #28]
   2cf76:	sbc.w	r1, r1, r0
   2cf7a:	adds	r3, r3, r2
   2cf7c:	str	r3, [sp, #40]	; 0x28
   2cf7e:	adc.w	r3, r1, r6
   2cf82:	str	r3, [sp, #44]	; 0x2c
   2cf84:	b.n	2cf5c <__btrfs_map_block@@Base+0x1ec>
   2cf86:	movs	r3, #1
   2cf88:	str.w	r3, [r8, #4]
   2cf8c:	ldr	r1, [r4, #40]	; 0x28
   2cf8e:	mov.w	r9, #0
   2cf92:	mov	r3, r9
   2cf94:	ldr	r0, [r4, #64]	; 0x40
   2cf96:	and.w	r2, r1, #1552	; 0x610
   2cf9a:	orrs	r3, r2
   2cf9c:	beq.n	2d024 <__btrfs_map_block@@Base+0x2b4>
   2cf9e:	cmp.w	fp, #1
   2cfa2:	bne.n	2d010 <__btrfs_map_block@@Base+0x2a0>
   2cfa4:	mov	r5, r9
   2cfa6:	str.w	r0, [r8, #4]
   2cfaa:	ldr	r3, [r4, #64]	; 0x40
   2cfac:	ldr	r2, [pc, #756]	; (2d2a4 <__btrfs_map_block@@Base+0x534>)
   2cfae:	cmp	r3, r5
   2cfb0:	ldr	r1, [pc, #756]	; (2d2a8 <__btrfs_map_block@@Base+0x538>)
   2cfb2:	ldr	r0, [pc, #760]	; (2d2ac <__btrfs_map_block@@Base+0x53c>)
   2cfb4:	add	r2, pc
   2cfb6:	ite	gt
   2cfb8:	movgt	r3, #0
   2cfba:	movle	r3, #1
   2cfbc:	add	r1, pc
   2cfbe:	add	r0, pc
   2cfc0:	str	r3, [sp, #0]
   2cfc2:	adds	r2, #112	; 0x70
   2cfc4:	movw	r3, #1748	; 0x6d4
   2cfc8:	add.w	r5, r4, r5, lsl #4
   2cfcc:	bl	2b308 <btrfs_add_root_ref@@Base+0x258>
   2cfd0:	ldr.w	ip, [r8, #4]
   2cfd4:	add.w	r1, r8, #8
   2cfd8:	movs	r0, #0
   2cfda:	cmp	ip, r0
   2cfdc:	add.w	r5, r5, #16
   2cfe0:	add.w	r1, r1, #16
   2cfe4:	bgt.w	2d1d8 <__btrfs_map_block@@Base+0x468>
   2cfe8:	ldr	r3, [sp, #168]	; 0xa8
   2cfea:	str.w	r8, [r3]
   2cfee:	ldr	r3, [sp, #164]	; 0xa4
   2cff0:	cbz	r3, 2cffc <__btrfs_map_block@@Base+0x28c>
   2cff2:	ldrd	r2, r3, [r4, #40]	; 0x28
   2cff6:	ldr	r1, [sp, #164]	; 0xa4
   2cff8:	strd	r2, r3, [r1]
   2cffc:	ldr	r3, [sp, #8]
   2cffe:	cmp	r3, #0
   2d000:	beq.n	2cf6c <__btrfs_map_block@@Base+0x1fc>
   2d002:	movs	r0, #0
   2d004:	add.w	r7, ip, #4294967295	; 0xffffffff
   2d008:	add.w	r9, sp, #104	; 0x68
   2d00c:	mov	r4, r0
   2d00e:	b.n	2d280 <__btrfs_map_block@@Base+0x510>
   2d010:	cbz	r5, 2d016 <__btrfs_map_block@@Base+0x2a6>
   2d012:	subs	r5, #1
   2d014:	b.n	2cfaa <__btrfs_map_block@@Base+0x23a>
   2d016:	asrs	r3, r0, #31
   2d018:	mov	r2, r0
   2d01a:	mov	r1, sl
   2d01c:	mov	r0, r7
   2d01e:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2d022:	b.n	2d054 <__btrfs_map_block@@Base+0x2e4>
   2d024:	and.w	r2, r1, #64	; 0x40
   2d028:	mov	r3, r9
   2d02a:	orrs	r3, r2
   2d02c:	beq.n	2d062 <__btrfs_map_block@@Base+0x2f2>
   2d02e:	ldr	r6, [r4, #68]	; 0x44
   2d030:	mov	r1, r6
   2d032:	bl	3c420 <btrfs_util_strerror@@Base+0x290>
   2d036:	mov	r1, sl
   2d038:	asrs	r3, r0, #31
   2d03a:	mov	r2, r0
   2d03c:	mov	r0, r7
   2d03e:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2d042:	cmp.w	fp, #1
   2d046:	mul.w	r2, r2, r6
   2d04a:	bne.n	2d058 <__btrfs_map_block@@Base+0x2e8>
   2d04c:	str.w	r6, [r8, #4]
   2d050:	str	r0, [sp, #32]
   2d052:	str	r1, [sp, #48]	; 0x30
   2d054:	mov	r5, r2
   2d056:	b.n	2cfaa <__btrfs_map_block@@Base+0x23a>
   2d058:	cmp	r5, #0
   2d05a:	beq.n	2d050 <__btrfs_map_block@@Base+0x2e0>
   2d05c:	subs	r5, #1
   2d05e:	add	r2, r5
   2d060:	b.n	2d050 <__btrfs_map_block@@Base+0x2e0>
   2d062:	and.w	r2, r1, #32
   2d066:	mov	r3, r9
   2d068:	orrs	r3, r2
   2d06a:	beq.n	2d078 <__btrfs_map_block@@Base+0x308>
   2d06c:	cmp.w	fp, #1
   2d070:	beq.n	2cfa4 <__btrfs_map_block@@Base+0x234>
   2d072:	cmp	r5, #0
   2d074:	beq.n	2cfaa <__btrfs_map_block@@Base+0x23a>
   2d076:	b.n	2d012 <__btrfs_map_block@@Base+0x2a2>
   2d078:	asrs	r3, r0, #31
   2d07a:	mov	r2, r0
   2d07c:	strd	r2, r3, [sp, #16]
   2d080:	and.w	r2, r1, #384	; 0x180
   2d084:	mov	r3, r9
   2d086:	orrs	r3, r2
   2d088:	beq.w	2d1c4 <__btrfs_map_block@@Base+0x454>
   2d08c:	mov	r0, r4
   2d08e:	bl	2b1b0 <btrfs_add_root_ref@@Base+0x100>
   2d092:	asrs	r3, r0, #31
   2d094:	mov	r2, r0
   2d096:	strd	r2, r3, [sp, #24]
   2d09a:	mov	r6, r0
   2d09c:	ldr	r3, [sp, #8]
   2d09e:	cmp	r3, #0
   2d0a0:	beq.n	2d19a <__btrfs_map_block@@Base+0x42a>
   2d0a2:	ldr	r7, [r4, #56]	; 0x38
   2d0a4:	mul.w	r5, r0, r7
   2d0a8:	ldrd	r0, r1, [sp, #64]	; 0x40
   2d0ac:	mov.w	fp, r5, asr #31
   2d0b0:	mov	r2, r5
   2d0b2:	mov	r3, fp
   2d0b4:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2d0b8:	mov	r2, r7
   2d0ba:	mul.w	r3, r5, r1
   2d0be:	mla	r3, r0, fp, r3
   2d0c2:	umull	r0, r1, r5, r0
   2d0c6:	add	r1, r3
   2d0c8:	asrs	r3, r7, #31
   2d0ca:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2d0ce:	asrs	r3, r6, #31
   2d0d0:	mov	r2, r6
   2d0d2:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2d0d6:	ldrd	r2, r3, [sp, #16]
   2d0da:	str	r0, [sp, #32]
   2d0dc:	str	r1, [sp, #48]	; 0x30
   2d0de:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2d0e2:	mov	r5, r2
   2d0e4:	ldrd	r3, r2, [sp, #28]
   2d0e8:	muls	r3, r2
   2d0ea:	ldr	r2, [sp, #48]	; 0x30
   2d0ec:	mla	r3, r6, r2, r3
   2d0f0:	ldr	r2, [sp, #32]
   2d0f2:	umull	r6, r7, r2, r6
   2d0f6:	add	r7, r3
   2d0f8:	mov	r0, r4
   2d0fa:	add.w	sl, r9, r5
   2d0fe:	bl	2b1b0 <btrfs_add_root_ref@@Base+0x100>
   2d102:	ldr	r1, [r4, #64]	; 0x40
   2d104:	cmp	r0, r9
   2d106:	mov	r0, sl
   2d108:	bgt.n	2d162 <__btrfs_map_block@@Base+0x3f2>
   2d10a:	bl	3c6b4 <btrfs_util_strerror@@Base+0x524>
   2d10e:	ldr	r3, [sp, #8]
   2d110:	mvn.w	r2, #1
   2d114:	add.w	r1, r3, r1, lsl #3
   2d118:	mov.w	r3, #4294967295	; 0xffffffff
   2d11c:	strd	r2, r3, [r1]
   2d120:	movs	r3, #0
   2d122:	ldr	r1, [r4, #40]	; 0x28
   2d124:	and.w	r2, r1, #256	; 0x100
   2d128:	orrs	r3, r2
   2d12a:	beq.n	2d148 <__btrfs_map_block@@Base+0x3d8>
   2d12c:	ldr	r1, [r4, #64]	; 0x40
   2d12e:	add.w	r0, sl, #1
   2d132:	bl	3c6b4 <btrfs_util_strerror@@Base+0x524>
   2d136:	ldr	r3, [sp, #8]
   2d138:	mov.w	r2, #4294967295	; 0xffffffff
   2d13c:	add.w	r1, r3, r1, lsl #3
   2d140:	mov.w	r3, #4294967295	; 0xffffffff
   2d144:	strd	r2, r3, [r1]
   2d148:	ldr	r2, [r4, #56]	; 0x38
   2d14a:	ldr	r1, [sp, #160]	; 0xa0
   2d14c:	asrs	r3, r2, #31
   2d14e:	strd	r2, r3, [r1]
   2d152:	ldr	r3, [r4, #64]	; 0x40
   2d154:	str.w	r3, [r8, #4]
   2d158:	movs	r3, #0
   2d15a:	mov	r5, r3
   2d15c:	strd	r3, r3, [sp, #96]	; 0x60
   2d160:	b.n	2cfaa <__btrfs_map_block@@Base+0x23a>
   2d162:	bl	3c6b4 <btrfs_util_strerror@@Base+0x524>
   2d166:	ldr	r0, [r4, #56]	; 0x38
   2d168:	ldr	r3, [sp, #8]
   2d16a:	add.w	r9, r9, #1
   2d16e:	mov.w	fp, r0, asr #31
   2d172:	mul.w	r2, r0, r7
   2d176:	add.w	ip, r3, r1, lsl #3
   2d17a:	umull	r0, r1, r0, r6
   2d17e:	mla	r3, r6, fp, r2
   2d182:	add	r1, r3
   2d184:	ldrd	r3, r2, [r4, #24]
   2d188:	adds	r3, r3, r0
   2d18a:	adc.w	r2, r1, r2
   2d18e:	adds	r6, #1
   2d190:	adc.w	r7, r7, #0
   2d194:	strd	r3, r2, [ip]
   2d198:	b.n	2d0f8 <__btrfs_map_block@@Base+0x388>
   2d19a:	asrs	r3, r0, #31
   2d19c:	mov	r1, sl
   2d19e:	mov	r0, r7
   2d1a0:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2d1a4:	cmp	r5, #1
   2d1a6:	itte	gt
   2d1a8:	addgt	r6, r6, r5
   2d1aa:	subgt	r6, #2
   2d1ac:	movle	r6, r2
   2d1ae:	mov	sl, r0
   2d1b0:	str	r0, [sp, #32]
   2d1b2:	adds.w	r0, sl, r6
   2d1b6:	mov	fp, r1
   2d1b8:	str	r1, [sp, #48]	; 0x30
   2d1ba:	ldrd	r2, r3, [sp, #16]
   2d1be:	adc.w	r1, fp, r6, asr #31
   2d1c2:	b.n	2d01e <__btrfs_map_block@@Base+0x2ae>
   2d1c4:	ldrd	r2, r3, [sp, #16]
   2d1c8:	mov	r0, r7
   2d1ca:	mov	r1, sl
   2d1cc:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2d1d0:	mov	r5, r2
   2d1d2:	str	r0, [sp, #32]
   2d1d4:	str	r1, [sp, #48]	; 0x30
   2d1d6:	b.n	2cfaa <__btrfs_map_block@@Base+0x23a>
   2d1d8:	ldrd	r3, r2, [r5, #64]	; 0x40
   2d1dc:	adds	r0, #1
   2d1de:	ldr	r6, [sp, #96]	; 0x60
   2d1e0:	ldr.w	sl, [r4, #56]	; 0x38
   2d1e4:	adds.w	lr, r6, r3
   2d1e8:	ldr	r6, [sp, #100]	; 0x64
   2d1ea:	adc.w	r2, r6, r2
   2d1ee:	mov	r6, sl
   2d1f0:	asrs	r7, r6, #31
   2d1f2:	strd	r6, r7, [sp, #16]
   2d1f6:	ldr	r6, [sp, #48]	; 0x30
   2d1f8:	ldr	r7, [sp, #32]
   2d1fa:	ldr	r3, [sp, #20]
   2d1fc:	mul.w	r6, sl, r6
   2d200:	mla	r6, r7, r3, r6
   2d204:	umull	sl, fp, sl, r7
   2d208:	adds.w	r3, lr, sl
   2d20c:	add	fp, r6
   2d20e:	adc.w	r2, r2, fp
   2d212:	strd	r3, r2, [r1, #-8]
   2d216:	ldr	r3, [r5, #56]	; 0x38
   2d218:	str.w	r3, [r1, #-16]
   2d21c:	b.n	2cfda <__btrfs_map_block@@Base+0x26a>
   2d21e:	ldr	r3, [sp, #8]
   2d220:	add.w	lr, r4, #1
   2d224:	add.w	sl, r3, r4, lsl #3
   2d228:	add.w	ip, sl, #8
   2d22c:	ldrd	r2, r3, [sl]
   2d230:	strd	r2, r3, [sp, #16]
   2d234:	ldrd	r5, r6, [sp, #16]
   2d238:	ldrd	r2, r3, [sl, #8]
   2d23c:	cmp	r3, r6
   2d23e:	it	eq
   2d240:	cmpeq	r2, r5
   2d242:	strd	r2, r3, [sp, #24]
   2d246:	bcs.n	2d27e <__btrfs_map_block@@Base+0x50e>
   2d248:	add.w	r4, r8, r4, lsl #4
   2d24c:	add.w	r5, r8, lr, lsl #4
   2d250:	adds	r4, #8
   2d252:	adds	r5, #8
   2d254:	ldmia.w	r4, {r0, r1, r2, r3}
   2d258:	stmia.w	r9, {r0, r1, r2, r3}
   2d25c:	ldmia.w	r5, {r0, r1, r2, r3}
   2d260:	stmia.w	r4, {r0, r1, r2, r3}
   2d264:	ldrd	r3, r4, [sp, #24]
   2d268:	strd	r3, r4, [sl]
   2d26c:	ldmia.w	r9, {r0, r1, r2, r3}
   2d270:	stmia.w	r5, {r0, r1, r2, r3}
   2d274:	movs	r0, #1
   2d276:	ldrd	r3, r4, [sp, #16]
   2d27a:	strd	r3, r4, [ip]
   2d27e:	mov	r4, lr
   2d280:	cmp	r4, r7
   2d282:	blt.n	2d21e <__btrfs_map_block@@Base+0x4ae>
   2d284:	cbnz	r0, 2d290 <__btrfs_map_block@@Base+0x520>
   2d286:	ldr	r3, [sp, #176]	; 0xb0
   2d288:	mov	r2, r3
   2d28a:	ldr	r3, [sp, #8]
   2d28c:	str	r3, [r2, #0]
   2d28e:	b.n	2cdb4 <__btrfs_map_block@@Base+0x44>
   2d290:	movs	r0, #0
   2d292:	mov	lr, r0
   2d294:	b.n	2d27e <__btrfs_map_block@@Base+0x50e>
   2d296:	nop
   2d298:	strb	r4, [r1, #11]
   2d29a:	movs	r1, r0
   2d29c:	ldrb	r4, [r4, #6]
   2d29e:	movs	r1, r0
   2d2a0:	strb	r7, [r3, #13]
   2d2a2:	movs	r1, r0
   2d2a4:	ldrb	r0, [r3, #3]
   2d2a6:	movs	r1, r0
   2d2a8:	strb	r6, [r6, #7]
   2d2aa:	movs	r1, r0
   2d2ac:	strb	r2, [r5, #10]
   2d2ae:	movs	r1, r0

0002d2b0 <btrfs_map_block@@Base>:
   2d2b0:	push	{r4, lr}
   2d2b2:	sub	sp, #24
   2d2b4:	ldr	r4, [sp, #44]	; 0x2c
   2d2b6:	str	r4, [sp, #16]
   2d2b8:	ldr	r4, [sp, #40]	; 0x28
   2d2ba:	str	r4, [sp, #12]
   2d2bc:	ldr	r4, [sp, #36]	; 0x24
   2d2be:	str	r4, [sp, #8]
   2d2c0:	movs	r4, #0
   2d2c2:	str	r4, [sp, #4]
   2d2c4:	ldr	r4, [sp, #32]
   2d2c6:	str	r4, [sp, #0]
   2d2c8:	bl	2cd70 <__btrfs_map_block@@Base>
   2d2cc:	add	sp, #24
   2d2ce:	pop	{r4, pc}

0002d2d0 <btrfs_find_device@@Base>:
   2d2d0:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   2d2d4:	mov	r6, r0
   2d2d6:	ldr	r5, [sp, #36]	; 0x24
   2d2d8:	mov	r7, r2
   2d2da:	ldr.w	r4, [r0, #352]	; 0x160
   2d2de:	mov	r8, r3
   2d2e0:	cbnz	r4, 2d2ea <btrfs_find_device@@Base+0x1a>
   2d2e2:	mov	r0, r4
   2d2e4:	add	sp, #8
   2d2e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2d2ea:	cbz	r5, 2d300 <btrfs_find_device@@Base+0x30>
   2d2ec:	movs	r2, #16
   2d2ee:	mov	r1, r5
   2d2f0:	adds	r0, r4, r2
   2d2f2:	blx	887c <memcmp@plt+0x4>
   2d2f6:	cbz	r0, 2d300 <btrfs_find_device@@Base+0x30>
   2d2f8:	ldrb.w	r3, [r6, #364]	; 0x16c
   2d2fc:	lsls	r3, r3, #25
   2d2fe:	bpl.n	2d312 <btrfs_find_device@@Base+0x42>
   2d300:	ldr	r3, [sp, #32]
   2d302:	mov	r2, r7
   2d304:	mov	r0, r4
   2d306:	str	r3, [sp, #0]
   2d308:	mov	r3, r8
   2d30a:	bl	2b20c <btrfs_add_root_ref@@Base+0x15c>
   2d30e:	cmp	r0, #0
   2d310:	bne.n	2d2e4 <btrfs_find_device@@Base+0x14>
   2d312:	ldr	r4, [r4, #92]	; 0x5c
   2d314:	b.n	2d2e0 <btrfs_find_device@@Base+0x10>

0002d316 <btrfs_find_device_by_devid@@Base>:
   2d316:	push	{r4, r5, r6, r7, lr}
   2d318:	add.w	r1, r0, #72	; 0x48
   2d31c:	mov	r6, r2
   2d31e:	ldr	r0, [r0, #72]	; 0x48
   2d320:	ldr	r2, [sp, #20]
   2d322:	mov	r7, r3
   2d324:	movs	r3, #0
   2d326:	cmp	r0, r1
   2d328:	bne.n	2d32e <btrfs_find_device_by_devid@@Base+0x18>
   2d32a:	movs	r0, #0
   2d32c:	pop	{r4, r5, r6, r7, pc}
   2d32e:	ldrd	r4, r5, [r0, #64]	; 0x40
   2d332:	cmp	r5, r7
   2d334:	it	eq
   2d336:	cmpeq	r4, r6
   2d338:	bne.n	2d344 <btrfs_find_device_by_devid@@Base+0x2e>
   2d33a:	cmp	r3, r2
   2d33c:	add.w	r4, r3, #1
   2d340:	beq.n	2d32c <btrfs_find_device_by_devid@@Base+0x16>
   2d342:	mov	r3, r4
   2d344:	ldr	r0, [r0, #0]
   2d346:	b.n	2d326 <btrfs_find_device_by_devid@@Base+0x10>

0002d348 <btrfs_chunk_readonly@@Base>:
   2d348:	push	{r4, lr}
   2d34a:	ldrb.w	r1, [r0, #364]	; 0x16c
   2d34e:	ands.w	r4, r1, #8
   2d352:	beq.n	2d358 <btrfs_chunk_readonly@@Base+0x10>
   2d354:	movs	r0, #0
   2d356:	pop	{r4, pc}
   2d358:	adds	r0, #228	; 0xe4
   2d35a:	bl	19460 <search_cache_extent@@Base>
   2d35e:	cbz	r0, 2d376 <btrfs_chunk_readonly@@Base+0x2e>
   2d360:	ldr	r2, [r0, #64]	; 0x40
   2d362:	adds	r0, #72	; 0x48
   2d364:	mov	r3, r4
   2d366:	cmp	r2, r3
   2d368:	ble.n	2d354 <btrfs_chunk_readonly@@Base+0xc>
   2d36a:	lsls	r1, r3, #4
   2d36c:	ldr	r1, [r0, r1]
   2d36e:	ldr	r1, [r1, #28]
   2d370:	cbz	r1, 2d37c <btrfs_chunk_readonly@@Base+0x34>
   2d372:	adds	r3, #1
   2d374:	b.n	2d366 <btrfs_chunk_readonly@@Base+0x1e>
   2d376:	mvn.w	r0, #1
   2d37a:	b.n	2d356 <btrfs_chunk_readonly@@Base+0xe>
   2d37c:	movs	r0, #1
   2d37e:	b.n	2d356 <btrfs_chunk_readonly@@Base+0xe>

0002d380 <btrfs_check_chunk_valid@@Base>:
   2d380:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d384:	sub	sp, #36	; 0x24
   2d386:	subs	r6, r3, #0
   2d388:	add.w	r8, r1, #96	; 0x60
   2d38c:	ldr	r4, [sp, #72]	; 0x48
   2d38e:	str	r4, [sp, #20]
   2d390:	ldr	r4, [sp, #76]	; 0x4c
   2d392:	str	r4, [sp, #24]
   2d394:	ldr.w	r4, [r0, #388]	; 0x184
   2d398:	str	r4, [sp, #16]
   2d39a:	blt.n	2d3c4 <btrfs_check_chunk_valid@@Base+0x44>
   2d39c:	movs	r3, #25
   2d39e:	mla	r3, r3, r6, r8
   2d3a2:	ldr.w	r1, [r3, #122]	; 0x7a
   2d3a6:	cmp	r1, #79	; 0x4f
   2d3a8:	bhi.n	2d3c4 <btrfs_check_chunk_valid@@Base+0x44>
   2d3aa:	ldr.w	r3, [r0, #384]	; 0x180
   2d3ae:	movs	r2, #80	; 0x50
   2d3b0:	ldr	r0, [pc, #528]	; (2d5c4 <btrfs_check_chunk_valid@@Base+0x244>)
   2d3b2:	subs	r3, #101	; 0x65
   2d3b4:	add	r0, pc
   2d3b6:	bl	1a900 <__btrfs_error@@Base>
   2d3ba:	mvn.w	r0, #116	; 0x74
   2d3be:	add	sp, #36	; 0x24
   2d3c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d3c4:	add.w	r7, r8, r2
   2d3c8:	ldr.w	sl, [r8, r2]
   2d3cc:	ldr	r3, [r7, #16]
   2d3ce:	ldrh	r5, [r7, #44]	; 0x2c
   2d3d0:	ldr.w	fp, [r7, #4]
   2d3d4:	str	r3, [sp, #8]
   2d3d6:	ldr	r3, [r7, #20]
   2d3d8:	ldrh.w	r9, [r7, #46]	; 0x2e
   2d3dc:	ldr	r4, [r7, #24]
   2d3de:	str	r3, [sp, #12]
   2d3e0:	ldr	r3, [r7, #28]
   2d3e2:	cbnz	r5, 2d3f0 <btrfs_check_chunk_valid@@Base+0x70>
   2d3e4:	ldr	r0, [pc, #480]	; (2d5c8 <btrfs_check_chunk_valid@@Base+0x248>)
   2d3e6:	mov	r1, r5
   2d3e8:	add	r0, pc
   2d3ea:	bl	1a900 <__btrfs_error@@Base>
   2d3ee:	b.n	2d3ba <btrfs_check_chunk_valid@@Base+0x3a>
   2d3f0:	cmp	r6, #0
   2d3f2:	blt.n	2d418 <btrfs_check_chunk_valid@@Base+0x98>
   2d3f4:	mov	r0, r5
   2d3f6:	str	r3, [sp, #28]
   2d3f8:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2d3fc:	movs	r2, #25
   2d3fe:	mla	r2, r2, r6, r8
   2d402:	ldr	r3, [sp, #28]
   2d404:	ldr.w	r1, [r2, #122]	; 0x7a
   2d408:	cmp	r0, r1
   2d40a:	beq.n	2d418 <btrfs_check_chunk_valid@@Base+0x98>
   2d40c:	mov	r2, r0
   2d40e:	ldr	r0, [pc, #444]	; (2d5cc <btrfs_check_chunk_valid@@Base+0x24c>)
   2d410:	add	r0, pc
   2d412:	bl	1a900 <__btrfs_error@@Base>
   2d416:	b.n	2d3ba <btrfs_check_chunk_valid@@Base+0x3a>
   2d418:	ldr.w	ip, [sp, #16]
   2d41c:	mov.w	lr, #0
   2d420:	ldr	r2, [sp, #20]
   2d422:	adds.w	ip, ip, #4294967295	; 0xffffffff
   2d426:	and.w	r0, ip, r2
   2d42a:	ldr	r2, [sp, #24]
   2d42c:	adc.w	lr, lr, #4294967295	; 0xffffffff
   2d430:	and.w	r1, lr, r2
   2d434:	orrs.w	r2, r0, r1
   2d438:	beq.n	2d44c <btrfs_check_chunk_valid@@Base+0xcc>
   2d43a:	ldr	r0, [pc, #404]	; (2d5d0 <btrfs_check_chunk_valid@@Base+0x250>)
   2d43c:	ldrd	r2, r3, [sp, #20]
   2d440:	add	r0, pc
   2d442:	bl	1a900 <__btrfs_error@@Base>
   2d446:	mvn.w	r0, #4
   2d44a:	b.n	2d3be <btrfs_check_chunk_valid@@Base+0x3e>
   2d44c:	ldr	r2, [r7, #40]	; 0x28
   2d44e:	ldr	r1, [sp, #16]
   2d450:	cmp	r1, r2
   2d452:	beq.n	2d45c <btrfs_check_chunk_valid@@Base+0xdc>
   2d454:	ldr	r0, [pc, #380]	; (2d5d4 <btrfs_check_chunk_valid@@Base+0x254>)
   2d456:	movs	r3, #0
   2d458:	add	r0, pc
   2d45a:	b.n	2d442 <btrfs_check_chunk_valid@@Base+0xc2>
   2d45c:	orrs.w	r2, sl, fp
   2d460:	beq.n	2d470 <btrfs_check_chunk_valid@@Base+0xf0>
   2d462:	and.w	r0, ip, sl
   2d466:	and.w	r1, lr, fp
   2d46a:	orrs.w	r2, r0, r1
   2d46e:	beq.n	2d47a <btrfs_check_chunk_valid@@Base+0xfa>
   2d470:	ldr	r0, [pc, #356]	; (2d5d8 <btrfs_check_chunk_valid@@Base+0x258>)
   2d472:	mov	r2, sl
   2d474:	mov	r3, fp
   2d476:	add	r0, pc
   2d478:	b.n	2d442 <btrfs_check_chunk_valid@@Base+0xc2>
   2d47a:	ldrd	r1, r2, [sp, #8]
   2d47e:	cmp	r2, #0
   2d480:	it	eq
   2d482:	cmpeq.w	r1, #65536	; 0x10000
   2d486:	beq.n	2d492 <btrfs_check_chunk_valid@@Base+0x112>
   2d488:	ldr	r0, [pc, #336]	; (2d5dc <btrfs_check_chunk_valid@@Base+0x25c>)
   2d48a:	mov	r3, r2
   2d48c:	mov	r2, r1
   2d48e:	add	r0, pc
   2d490:	b.n	2d442 <btrfs_check_chunk_valid@@Base+0xc2>
   2d492:	adds	r1, r6, #1
   2d494:	bne.n	2d4aa <btrfs_check_chunk_valid@@Base+0x12a>
   2d496:	and.w	r0, r4, #2
   2d49a:	movs	r1, #0
   2d49c:	orrs.w	r2, r0, r1
   2d4a0:	bne.n	2d4aa <btrfs_check_chunk_valid@@Base+0x12a>
   2d4a2:	ldr	r0, [pc, #316]	; (2d5e0 <btrfs_check_chunk_valid@@Base+0x260>)
   2d4a4:	mov	r2, r4
   2d4a6:	add	r0, pc
   2d4a8:	b.n	2d442 <btrfs_check_chunk_valid@@Base+0xc2>
   2d4aa:	bic.w	r0, r4, #2040	; 0x7f8
   2d4ae:	mov	r1, r3
   2d4b0:	bic.w	r0, r0, #7
   2d4b4:	orrs.w	r2, r0, r1
   2d4b8:	beq.n	2d4c2 <btrfs_check_chunk_valid@@Base+0x142>
   2d4ba:	mov	r2, r0
   2d4bc:	ldr	r0, [pc, #292]	; (2d5e4 <btrfs_check_chunk_valid@@Base+0x264>)
   2d4be:	add	r0, pc
   2d4c0:	b.n	2d442 <btrfs_check_chunk_valid@@Base+0xc2>
   2d4c2:	and.w	r0, r4, #7
   2d4c6:	movs	r1, #0
   2d4c8:	orrs.w	r2, r0, r1
   2d4cc:	bne.n	2d4d6 <btrfs_check_chunk_valid@@Base+0x156>
   2d4ce:	ldr	r0, [pc, #280]	; (2d5e8 <btrfs_check_chunk_valid@@Base+0x268>)
   2d4d0:	mov	r2, r4
   2d4d2:	add	r0, pc
   2d4d4:	b.n	2d442 <btrfs_check_chunk_valid@@Base+0xc2>
   2d4d6:	ands.w	r2, r4, #2040	; 0x7f8
   2d4da:	beq.n	2d4e2 <btrfs_check_chunk_valid@@Base+0x162>
   2d4dc:	subs	r1, r2, #1
   2d4de:	tst	r1, r2
   2d4e0:	beq.n	2d4f6 <btrfs_check_chunk_valid@@Base+0x176>
   2d4e2:	and.w	r0, r4, #2040	; 0x7f8
   2d4e6:	movs	r2, #0
   2d4e8:	mov	r1, r2
   2d4ea:	orrs	r1, r0
   2d4ec:	beq.n	2d4f8 <btrfs_check_chunk_valid@@Base+0x178>
   2d4ee:	ldr	r0, [pc, #252]	; (2d5ec <btrfs_check_chunk_valid@@Base+0x26c>)
   2d4f0:	mov	r2, r4
   2d4f2:	add	r0, pc
   2d4f4:	b.n	2d442 <btrfs_check_chunk_valid@@Base+0xc2>
   2d4f6:	movs	r2, #1
   2d4f8:	and.w	sl, r4, #2040	; 0x7f8
   2d4fc:	mov.w	fp, #0
   2d500:	orrs.w	r1, sl, fp
   2d504:	beq.n	2d510 <btrfs_check_chunk_valid@@Base+0x190>
   2d506:	cbnz	r2, 2d510 <btrfs_check_chunk_valid@@Base+0x190>
   2d508:	ldr	r0, [pc, #228]	; (2d5f0 <btrfs_check_chunk_valid@@Base+0x270>)
   2d50a:	mov	r2, r4
   2d50c:	add	r0, pc
   2d50e:	b.n	2d442 <btrfs_check_chunk_valid@@Base+0xc2>
   2d510:	mov	r0, r5
   2d512:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2d516:	adds	r2, r6, #1
   2d518:	bne.n	2d52c <btrfs_check_chunk_valid@@Base+0x1ac>
   2d51a:	cmp.w	r0, #2048	; 0x800
   2d51e:	bls.n	2d53e <btrfs_check_chunk_valid@@Base+0x1be>
   2d520:	ldr	r0, [pc, #208]	; (2d5f4 <btrfs_check_chunk_valid@@Base+0x274>)
   2d522:	mov	r1, r5
   2d524:	add	r0, pc
   2d526:	bl	1a900 <__btrfs_error@@Base>
   2d52a:	b.n	2d446 <btrfs_check_chunk_valid@@Base+0xc6>
   2d52c:	cmp	r6, #0
   2d52e:	blt.n	2d53e <btrfs_check_chunk_valid@@Base+0x1be>
   2d530:	movs	r3, #25
   2d532:	mla	r6, r3, r6, r8
   2d536:	ldr.w	r3, [r6, #122]	; 0x7a
   2d53a:	cmp	r0, r3
   2d53c:	b.n	2d51e <btrfs_check_chunk_valid@@Base+0x19e>
   2d53e:	and.w	r2, r4, #64	; 0x40
   2d542:	movs	r3, #0
   2d544:	orrs	r3, r2
   2d546:	beq.n	2d552 <btrfs_check_chunk_valid@@Base+0x1d2>
   2d548:	cmp.w	r9, #2
   2d54c:	bne.n	2d5ae <btrfs_check_chunk_valid@@Base+0x22e>
   2d54e:	lsls	r3, r5, #31
   2d550:	bmi.n	2d5ae <btrfs_check_chunk_valid@@Base+0x22e>
   2d552:	and.w	r0, r4, #512	; 0x200
   2d556:	movs	r3, #0
   2d558:	mov	r1, r3
   2d55a:	orrs.w	r2, r0, r1
   2d55e:	beq.n	2d564 <btrfs_check_chunk_valid@@Base+0x1e4>
   2d560:	cmp	r5, #2
   2d562:	bls.n	2d5ae <btrfs_check_chunk_valid@@Base+0x22e>
   2d564:	and.w	r0, r4, #1024	; 0x400
   2d568:	mov	r1, r3
   2d56a:	orrs.w	r3, r0, r1
   2d56e:	beq.n	2d574 <btrfs_check_chunk_valid@@Base+0x1f4>
   2d570:	cmp	r5, #3
   2d572:	bls.n	2d5ae <btrfs_check_chunk_valid@@Base+0x22e>
   2d574:	and.w	r0, r4, #128	; 0x80
   2d578:	movs	r3, #0
   2d57a:	mov	r1, r3
   2d57c:	orrs.w	r2, r0, r1
   2d580:	beq.n	2d586 <btrfs_check_chunk_valid@@Base+0x206>
   2d582:	cmp	r5, #1
   2d584:	bls.n	2d5ae <btrfs_check_chunk_valid@@Base+0x22e>
   2d586:	and.w	r0, r4, #256	; 0x100
   2d58a:	mov	r1, r3
   2d58c:	orrs.w	r3, r0, r1
   2d590:	beq.n	2d596 <btrfs_check_chunk_valid@@Base+0x216>
   2d592:	cmp	r5, #2
   2d594:	bls.n	2d5ae <btrfs_check_chunk_valid@@Base+0x22e>
   2d596:	and.w	r2, r4, #32
   2d59a:	movs	r3, #0
   2d59c:	orrs	r3, r2
   2d59e:	beq.n	2d5a4 <btrfs_check_chunk_valid@@Base+0x224>
   2d5a0:	cmp	r5, #2
   2d5a2:	bhi.n	2d5ae <btrfs_check_chunk_valid@@Base+0x22e>
   2d5a4:	orrs.w	r3, sl, fp
   2d5a8:	bne.n	2d5c0 <btrfs_check_chunk_valid@@Base+0x240>
   2d5aa:	cmp	r5, #1
   2d5ac:	beq.n	2d5c0 <btrfs_check_chunk_valid@@Base+0x240>
   2d5ae:	ldr	r0, [pc, #72]	; (2d5f8 <btrfs_check_chunk_valid@@Base+0x278>)
   2d5b0:	mov	r2, r9
   2d5b2:	mov	r1, r5
   2d5b4:	strd	sl, fp, [sp]
   2d5b8:	add	r0, pc
   2d5ba:	bl	1a900 <__btrfs_error@@Base>
   2d5be:	b.n	2d446 <btrfs_check_chunk_valid@@Base+0xc6>
   2d5c0:	movs	r0, #0
   2d5c2:	b.n	2d3be <btrfs_check_chunk_valid@@Base+0x3e>
   2d5c4:	ldr	r5, [r2, #108]	; 0x6c
   2d5c6:	movs	r1, r0
   2d5c8:	ldr	r4, [r2, #108]	; 0x6c
   2d5ca:	movs	r1, r0
   2d5cc:	ldr	r1, [r3, #108]	; 0x6c
   2d5ce:	movs	r1, r0
   2d5d0:	ldr	r5, [r2, #108]	; 0x6c
   2d5d2:	movs	r1, r0
   2d5d4:	ldr	r0, [r3, #108]	; 0x6c
   2d5d6:	movs	r1, r0
   2d5d8:	ldr	r0, [r3, #108]	; 0x6c
   2d5da:	movs	r1, r0
   2d5dc:	ldr	r2, [r3, #108]	; 0x6c
   2d5de:	movs	r1, r0
   2d5e0:	ldr	r4, [r4, #108]	; 0x6c
   2d5e2:	movs	r1, r0
   2d5e4:	ldr	r4, [r4, #108]	; 0x6c
   2d5e6:	movs	r1, r0
   2d5e8:	ldr	r6, [r5, #108]	; 0x6c
   2d5ea:	movs	r1, r0
   2d5ec:	ldr	r4, [r5, #108]	; 0x6c
   2d5ee:	movs	r1, r0
   2d5f0:	ldr	r0, [r7, #108]	; 0x6c
   2d5f2:	movs	r1, r0
   2d5f4:	ldr	r1, [r1, #112]	; 0x70
   2d5f6:	movs	r1, r0
   2d5f8:	ldr	r5, [r1, #104]	; 0x68
   2d5fa:	movs	r1, r0
   2d5fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d600:	mov	r9, r2
   2d602:	vpush	{d8}
   2d606:	mov	r5, r3
   2d608:	ldr	r2, [pc, #444]	; (2d7c8 <btrfs_check_chunk_valid@@Base+0x448>)
   2d60a:	ldr	r3, [pc, #448]	; (2d7cc <btrfs_check_chunk_valid@@Base+0x44c>)
   2d60c:	add	r2, pc
   2d60e:	sub	sp, #68	; 0x44
   2d610:	str	r0, [sp, #20]
   2d612:	ldr	r3, [r2, r3]
   2d614:	mov	r2, r5
   2d616:	ldr	r4, [sp, #112]	; 0x70
   2d618:	ldr	r3, [r3, #0]
   2d61a:	str	r3, [sp, #60]	; 0x3c
   2d61c:	mov.w	r3, #0
   2d620:	add.w	r3, r9, #96	; 0x60
   2d624:	adds	r7, r3, r5
   2d626:	ldr	r3, [r3, r5]
   2d628:	ldr.w	sl, [r1, #9]
   2d62c:	ldr.w	fp, [r1, #13]
   2d630:	mov	r1, r9
   2d632:	str	r3, [sp, #32]
   2d634:	ldr	r3, [r7, #4]
   2d636:	ldrh.w	r8, [r7, #44]	; 0x2c
   2d63a:	strd	sl, fp, [sp]
   2d63e:	str	r3, [sp, #36]	; 0x24
   2d640:	mov	r3, r4
   2d642:	bl	2d380 <btrfs_check_chunk_valid@@Base>
   2d646:	mov	r6, r0
   2d648:	cbz	r0, 2d67e <btrfs_check_chunk_valid@@Base+0x2fe>
   2d64a:	adds	r4, #1
   2d64c:	bne.n	2d674 <btrfs_check_chunk_valid@@Base+0x2f4>
   2d64e:	ldr	r1, [pc, #384]	; (2d7d0 <btrfs_check_chunk_valid@@Base+0x450>)
   2d650:	ldr	r2, [pc, #384]	; (2d7d4 <btrfs_check_chunk_valid@@Base+0x454>)
   2d652:	add	r1, pc
   2d654:	add	r2, pc
   2d656:	ldr	r0, [pc, #384]	; (2d7d8 <btrfs_check_chunk_valid@@Base+0x458>)
   2d658:	add	r0, pc
   2d65a:	bl	1a900 <__btrfs_error@@Base>
   2d65e:	ldr	r2, [pc, #380]	; (2d7dc <btrfs_check_chunk_valid@@Base+0x45c>)
   2d660:	ldr	r3, [pc, #360]	; (2d7cc <btrfs_check_chunk_valid@@Base+0x44c>)
   2d662:	add	r2, pc
   2d664:	ldr	r3, [r2, r3]
   2d666:	ldr	r2, [r3, #0]
   2d668:	ldr	r3, [sp, #60]	; 0x3c
   2d66a:	eors	r2, r3
   2d66c:	beq.w	2d7ba <btrfs_check_chunk_valid@@Base+0x43a>
   2d670:	blx	88e4 <__stack_chk_fail@plt>
   2d674:	ldr	r1, [pc, #360]	; (2d7e0 <btrfs_check_chunk_valid@@Base+0x460>)
   2d676:	ldr	r2, [pc, #364]	; (2d7e4 <btrfs_check_chunk_valid@@Base+0x464>)
   2d678:	add	r1, pc
   2d67a:	add	r2, pc
   2d67c:	b.n	2d656 <btrfs_check_chunk_valid@@Base+0x2d6>
   2d67e:	ldr	r3, [sp, #20]
   2d680:	mov	r2, sl
   2d682:	adds	r3, #228	; 0xe4
   2d684:	vmov	s16, r3
   2d688:	mov	r3, fp
   2d68a:	vmov	r0, s16
   2d68e:	bl	19460 <search_cache_extent@@Base>
   2d692:	cbz	r0, 2d6b8 <btrfs_check_chunk_valid@@Base+0x338>
   2d694:	ldrd	r2, r3, [r0, #24]
   2d698:	cmp	fp, r3
   2d69a:	it	eq
   2d69c:	cmpeq	sl, r2
   2d69e:	bcc.n	2d6b8 <btrfs_check_chunk_valid@@Base+0x338>
   2d6a0:	ldrd	r1, r0, [r0, #32]
   2d6a4:	adds	r1, r2, r1
   2d6a6:	str	r1, [sp, #24]
   2d6a8:	adcs	r3, r0
   2d6aa:	str	r3, [sp, #28]
   2d6ac:	ldrd	r3, r4, [sp, #24]
   2d6b0:	cmp	fp, r4
   2d6b2:	it	eq
   2d6b4:	cmpeq	sl, r3
   2d6b6:	bcc.n	2d65e <btrfs_check_chunk_valid@@Base+0x2de>
   2d6b8:	mov.w	r3, r8, lsl #4
   2d6bc:	str	r3, [sp, #24]
   2d6be:	add.w	r0, r3, #72	; 0x48
   2d6c2:	blx	8a94 <malloc@plt+0x4>
   2d6c6:	mov	r4, r0
   2d6c8:	cmp	r0, #0
   2d6ca:	beq.n	2d7b4 <btrfs_check_chunk_valid@@Base+0x434>
   2d6cc:	ldr	r2, [r7, #36]	; 0x24
   2d6ce:	adds	r5, #48	; 0x30
   2d6d0:	ldr	r3, [sp, #32]
   2d6d2:	mov	r6, r0
   2d6d4:	ldr	r1, [r7, #24]
   2d6d6:	str	r2, [r0, #52]	; 0x34
   2d6d8:	ldr	r2, [r7, #32]
   2d6da:	str	r3, [r0, #32]
   2d6dc:	ldr	r3, [sp, #36]	; 0x24
   2d6de:	str	r2, [r0, #48]	; 0x30
   2d6e0:	ldr	r2, [r7, #40]	; 0x28
   2d6e2:	strd	sl, fp, [r0, #24]
   2d6e6:	add.w	sl, sp, #44	; 0x2c
   2d6ea:	ldr.w	fp, [pc, #252]	; 2d7e8 <btrfs_check_chunk_valid@@Base+0x468>
   2d6ee:	str	r2, [r0, #60]	; 0x3c
   2d6f0:	ldr	r2, [r7, #16]
   2d6f2:	add	fp, pc
   2d6f4:	str	r3, [r0, #36]	; 0x24
   2d6f6:	ldr	r3, [sp, #24]
   2d6f8:	str	r2, [r0, #56]	; 0x38
   2d6fa:	ldr	r2, [r7, #28]
   2d6fc:	add	r3, r0
   2d6fe:	str.w	r8, [r0, #64]	; 0x40
   2d702:	str	r3, [sp, #24]
   2d704:	add.w	r3, r9, #96	; 0x60
   2d708:	strd	r1, r2, [r0, #40]	; 0x28
   2d70c:	ldrh	r2, [r7, #46]	; 0x2e
   2d70e:	str	r3, [sp, #32]
   2d710:	str	r2, [r0, #68]	; 0x44
   2d712:	ldr	r3, [sp, #24]
   2d714:	cmp	r3, r6
   2d716:	bne.n	2d746 <btrfs_check_chunk_valid@@Base+0x3c6>
   2d718:	vmov	r0, s16
   2d71c:	mov	r1, r4
   2d71e:	bl	1931e <insert_cache_extent@@Base>
   2d722:	subs	r6, r0, #0
   2d724:	bge.n	2d65e <btrfs_check_chunk_valid@@Base+0x2de>
   2d726:	blx	8bac <__errno_location@plt>
   2d72a:	negs	r3, r6
   2d72c:	str	r3, [r0, #0]
   2d72e:	str	r6, [sp, #8]
   2d730:	ldrd	r2, r3, [r4, #32]
   2d734:	ldr	r0, [pc, #180]	; (2d7ec <btrfs_check_chunk_valid@@Base+0x46c>)
   2d736:	strd	r2, r3, [sp]
   2d73a:	add	r0, pc
   2d73c:	ldrd	r2, r3, [r4, #24]
   2d740:	bl	1a900 <__btrfs_error@@Base>
   2d744:	b.n	2d65e <btrfs_check_chunk_valid@@Base+0x2de>
   2d746:	ldr	r3, [sp, #32]
   2d748:	mov	r0, r9
   2d74a:	add	r3, r5
   2d74c:	ldr	r1, [r3, #8]
   2d74e:	ldr	r2, [r3, #12]
   2d750:	ldr.w	r8, [r3]
   2d754:	ldr	r7, [r3, #4]
   2d756:	movs	r3, #16
   2d758:	strd	r1, r2, [r6, #80]	; 0x50
   2d75c:	adds	r2, r5, r3
   2d75e:	mov	r1, sl
   2d760:	bl	1a79e <read_extent_buffer@@Base>
   2d764:	movs	r3, #0
   2d766:	ldr	r0, [sp, #20]
   2d768:	mov	r2, r8
   2d76a:	strd	sl, r3, [sp]
   2d76e:	mov	r3, r7
   2d770:	bl	2d2d0 <btrfs_find_device@@Base>
   2d774:	str	r0, [r6, #72]	; 0x48
   2d776:	cbnz	r0, 2d7ae <btrfs_check_chunk_valid@@Base+0x42e>
   2d778:	movs	r1, #128	; 0x80
   2d77a:	movs	r0, #1
   2d77c:	blx	8718 <calloc@plt+0x4>
   2d780:	mov.w	r3, #4294967295	; 0xffffffff
   2d784:	mov	r2, r8
   2d786:	mov	r1, fp
   2d788:	str	r3, [r0, #24]
   2d78a:	mov	r3, r7
   2d78c:	strd	r8, r7, [r0, #64]	; 0x40
   2d790:	str	r0, [r6, #72]	; 0x48
   2d792:	movs	r0, #1
   2d794:	blx	8c6c <__printf_chk@plt+0x4>
   2d798:	ldr	r2, [sp, #20]
   2d79a:	ldr	r3, [r6, #72]	; 0x48
   2d79c:	ldr.w	r1, [r2, #352]	; 0x160
   2d7a0:	mov	r2, r1
   2d7a2:	ldr.w	r0, [r2, #72]!
   2d7a6:	str	r3, [r0, #4]
   2d7a8:	strd	r0, r2, [r3]
   2d7ac:	str	r3, [r1, #72]	; 0x48
   2d7ae:	adds	r6, #16
   2d7b0:	adds	r5, #32
   2d7b2:	b.n	2d712 <btrfs_check_chunk_valid@@Base+0x392>
   2d7b4:	mvn.w	r6, #11
   2d7b8:	b.n	2d65e <btrfs_check_chunk_valid@@Base+0x2de>
   2d7ba:	mov	r0, r6
   2d7bc:	add	sp, #68	; 0x44
   2d7be:	vpop	{d8}
   2d7c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d7c6:	nop
   2d7c8:			; <UNDEFINED> instruction: 0xb724
   2d7ca:	movs	r3, r0
   2d7cc:	lsls	r4, r7, #9
   2d7ce:	movs	r0, r0
   2d7d0:	ldr	r2, [r5, #96]	; 0x60
   2d7d2:	movs	r1, r0
   2d7d4:	ldr	r3, [r6, #96]	; 0x60
   2d7d6:	movs	r1, r0
   2d7d8:	ldr	r6, [r3, #100]	; 0x64
   2d7da:	movs	r1, r0
   2d7dc:			; <UNDEFINED> instruction: 0xb6ce
   2d7de:	movs	r3, r0
   2d7e0:	add	r6, pc, #260	; (adr r6, 2d8e8 <btrfs_read_sys_array@@Base+0xf8>)
   2d7e2:	movs	r2, r0
   2d7e4:	asrs	r4, r5, #12
   2d7e6:	movs	r1, r0
   2d7e8:	ldr	r0, [r7, #92]	; 0x5c
   2d7ea:	movs	r1, r0
   2d7ec:	ldr	r1, [r2, #92]	; 0x5c
   2d7ee:	movs	r1, r0

0002d7f0 <btrfs_read_sys_array@@Base>:
   2d7f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d7f4:	mov	r8, r0
   2d7f6:	vpush	{d8}
   2d7fa:	ldr	r2, [pc, #376]	; (2d974 <btrfs_read_sys_array@@Base+0x184>)
   2d7fc:	ldr	r3, [pc, #376]	; (2d978 <btrfs_read_sys_array@@Base+0x188>)
   2d7fe:	add	r2, pc
   2d800:	ldr.w	r9, [pc, #376]	; 2d97c <btrfs_read_sys_array@@Base+0x18c>
   2d804:	sub	sp, #44	; 0x2c
   2d806:	ldr.w	r5, [r0, #308]	; 0x134
   2d80a:	ldr	r3, [r2, r3]
   2d80c:	add	r9, pc
   2d80e:	ldr.w	r2, [r0, #384]	; 0x180
   2d812:	ldr	r3, [r3, #0]
   2d814:	str	r3, [sp, #36]	; 0x24
   2d816:	mov.w	r3, #0
   2d81a:	cmp.w	r2, #4096	; 0x1000
   2d81e:	bcs.n	2d844 <btrfs_read_sys_array@@Base+0x54>
   2d820:	ldr	r1, [pc, #348]	; (2d980 <btrfs_read_sys_array@@Base+0x190>)
   2d822:	movs	r0, #1
   2d824:	add	r1, pc
   2d826:	blx	8c6c <__printf_chk@plt+0x4>
   2d82a:	mvn.w	r3, #21
   2d82e:	ldr	r1, [pc, #340]	; (2d984 <btrfs_read_sys_array@@Base+0x194>)
   2d830:	ldr	r2, [pc, #324]	; (2d978 <btrfs_read_sys_array@@Base+0x188>)
   2d832:	add	r1, pc
   2d834:	ldr	r2, [r1, r2]
   2d836:	ldr	r1, [r2, #0]
   2d838:	ldr	r2, [sp, #36]	; 0x24
   2d83a:	eors	r1, r2
   2d83c:	beq.w	2d968 <btrfs_read_sys_array@@Base+0x178>
   2d840:	blx	88e4 <__stack_chk_fail@plt>
   2d844:	mov.w	r3, #4096	; 0x1000
   2d848:	mov.w	r2, #65536	; 0x10000
   2d84c:	str	r3, [sp, #0]
   2d84e:	movs	r3, #0
   2d850:	bl	1a2b0 <alloc_dummy_extent_buffer@@Base>
   2d854:	mov	r6, r0
   2d856:	cmp	r0, #0
   2d858:	beq.w	2d962 <btrfs_read_sys_array@@Base+0x172>
   2d85c:	bl	20b00 <btrfs_set_buffer_uptodate@@Base>
   2d860:	movw	r3, #3531	; 0xdcb
   2d864:	mov	r1, r5
   2d866:	movs	r2, #0
   2d868:	mov	r0, r6
   2d86a:	movs	r7, #0
   2d86c:	bl	1a7b4 <write_extent_buffer@@Base>
   2d870:	add	r3, sp, #16
   2d872:	ldr.w	sl, [r5, #160]	; 0xa0
   2d876:	addw	r5, r5, #811	; 0x32b
   2d87a:	vmov	s16, r3
   2d87e:	movw	fp, #811	; 0x32b
   2d882:	cmp	r7, sl
   2d884:	bcc.n	2d88a <btrfs_read_sys_array@@Base+0x9a>
   2d886:	movs	r3, #0
   2d888:	b.n	2d918 <btrfs_read_sys_array@@Base+0x128>
   2d88a:	add.w	r2, r7, #17
   2d88e:	cmp	r2, sl
   2d890:	bhi.n	2d93c <btrfs_read_sys_array@@Base+0x14c>
   2d892:	ldr.w	r1, [r5, #9]
   2d896:	add.w	fp, fp, #17
   2d89a:	ldr.w	r3, [r5, #13]
   2d89e:	str.w	r1, [sp, #25]
   2d8a2:	str.w	r3, [sp, #29]
   2d8a6:	ldrb	r3, [r5, #8]
   2d8a8:	cmp	r3, #228	; 0xe4
   2d8aa:	strb.w	r3, [sp, #24]
   2d8ae:	ldr	r0, [r5, #0]
   2d8b0:	ldr	r1, [r5, #4]
   2d8b2:	strd	r0, r1, [sp, #16]
   2d8b6:	bne.n	2d924 <btrfs_read_sys_array@@Base+0x134>
   2d8b8:	movs	r0, #1
   2d8ba:	str	r2, [sp, #12]
   2d8bc:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2d8c0:	ldr	r2, [sp, #12]
   2d8c2:	adds	r3, r2, r0
   2d8c4:	mov	r4, r0
   2d8c6:	cmp	r3, sl
   2d8c8:	bhi.n	2d940 <btrfs_read_sys_array@@Base+0x150>
   2d8ca:	add.w	r3, r6, fp
   2d8ce:	ldrh.w	r3, [r3, #140]	; 0x8c
   2d8d2:	cbnz	r3, 2d8ee <btrfs_read_sys_array@@Base+0xfe>
   2d8d4:	ldr	r1, [pc, #176]	; (2d988 <btrfs_read_sys_array@@Base+0x198>)
   2d8d6:	ldr.w	r0, [r9, r1]
   2d8da:	str	r2, [sp, #0]
   2d8dc:	ldr	r2, [pc, #172]	; (2d98c <btrfs_read_sys_array@@Base+0x19c>)
   2d8de:	add	r2, pc
   2d8e0:	ldr	r0, [r0, #0]
   2d8e2:	movs	r1, #1
   2d8e4:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2d8e8:	mvn.w	r3, #4
   2d8ec:	b.n	2d918 <btrfs_read_sys_array@@Base+0x128>
   2d8ee:	mov	r0, r3
   2d8f0:	str	r2, [sp, #12]
   2d8f2:	bl	2b318 <btrfs_add_root_ref@@Base+0x268>
   2d8f6:	ldr	r2, [sp, #12]
   2d8f8:	adds	r7, r2, r0
   2d8fa:	mov	r4, r0
   2d8fc:	cmp	r7, sl
   2d8fe:	bhi.n	2d940 <btrfs_read_sys_array@@Base+0x150>
   2d900:	mov.w	r3, #4294967295	; 0xffffffff
   2d904:	vmov	r1, s16
   2d908:	str	r3, [sp, #0]
   2d90a:	mov	r2, r6
   2d90c:	mov	r3, fp
   2d90e:	mov	r0, r8
   2d910:	bl	2d5fc <btrfs_check_chunk_valid@@Base+0x27c>
   2d914:	mov	r3, r0
   2d916:	cbz	r0, 2d932 <btrfs_read_sys_array@@Base+0x142>
   2d918:	mov	r0, r6
   2d91a:	str	r3, [sp, #12]
   2d91c:	bl	1a0a4 <free_extent_buffer@@Base>
   2d920:	ldr	r3, [sp, #12]
   2d922:	b.n	2d82e <btrfs_read_sys_array@@Base+0x3e>
   2d924:	ldr	r1, [pc, #96]	; (2d988 <btrfs_read_sys_array@@Base+0x198>)
   2d926:	ldr.w	r0, [r9, r1]
   2d92a:	str	r2, [sp, #0]
   2d92c:	ldr	r2, [pc, #96]	; (2d990 <btrfs_read_sys_array@@Base+0x1a0>)
   2d92e:	add	r2, pc
   2d930:	b.n	2d8e0 <btrfs_read_sys_array@@Base+0xf0>
   2d932:	add.w	r3, r4, #17
   2d936:	add	fp, r4
   2d938:	add	r5, r3
   2d93a:	b.n	2d882 <btrfs_read_sys_array@@Base+0x92>
   2d93c:	mov	r2, r7
   2d93e:	movs	r4, #17
   2d940:	ldr	r3, [pc, #68]	; (2d988 <btrfs_read_sys_array@@Base+0x198>)
   2d942:	movs	r1, #1
   2d944:	ldr.w	r0, [r9, r3]
   2d948:	mov	r3, r4
   2d94a:	str	r2, [sp, #0]
   2d94c:	ldr	r2, [pc, #68]	; (2d994 <btrfs_read_sys_array@@Base+0x1a4>)
   2d94e:	ldr	r0, [r0, #0]
   2d950:	add	r2, pc
   2d952:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2d956:	mov	r0, r6
   2d958:	bl	1a0a4 <free_extent_buffer@@Base>
   2d95c:	mvn.w	r3, #4
   2d960:	b.n	2d82e <btrfs_read_sys_array@@Base+0x3e>
   2d962:	mvn.w	r3, #11
   2d966:	b.n	2d82e <btrfs_read_sys_array@@Base+0x3e>
   2d968:	mov	r0, r3
   2d96a:	add	sp, #44	; 0x2c
   2d96c:	vpop	{d8}
   2d970:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d974:	push	{r1, r4, r5, lr}
   2d976:	movs	r3, r0
   2d978:	lsls	r4, r7, #9
   2d97a:	movs	r0, r0
   2d97c:	push	{r2, r5, lr}
   2d97e:	movs	r3, r0
   2d980:	ldr	r4, [r3, #80]	; 0x50
   2d982:	movs	r1, r0
   2d984:	push	{r1, r2, r3, r4, r5, r6, r7}
   2d986:	movs	r3, r0
   2d988:	lsls	r4, r1, #10
   2d98a:	movs	r0, r0
   2d98c:	ldr	r3, [r2, #72]	; 0x48
   2d98e:	movs	r1, r0
   2d990:	ldr	r2, [r0, #72]	; 0x48
   2d992:	movs	r1, r0
   2d994:	ldr	r2, [r3, #72]	; 0x48
   2d996:	movs	r1, r0

0002d998 <btrfs_read_chunk_tree@@Base>:
   2d998:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d99c:	mov	r7, r0
   2d99e:	vpush	{d8-d9}
   2d9a2:	ldr	r2, [pc, #600]	; (2dbfc <btrfs_read_chunk_tree@@Base+0x264>)
   2d9a4:	ldr	r3, [pc, #600]	; (2dc00 <btrfs_read_chunk_tree@@Base+0x268>)
   2d9a6:	add	r2, pc
   2d9a8:	sub	sp, #100	; 0x64
   2d9aa:	ldr	r3, [r2, r3]
   2d9ac:	ldr	r3, [r3, #0]
   2d9ae:	str	r3, [sp, #92]	; 0x5c
   2d9b0:	mov.w	r3, #0
   2d9b4:	ldr	r3, [r0, #32]
   2d9b6:	str	r3, [sp, #8]
   2d9b8:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2d9bc:	mov	r6, r0
   2d9be:	cmp	r0, #0
   2d9c0:	beq.w	2dbea <btrfs_read_chunk_tree@@Base+0x252>
   2d9c4:	movs	r0, #0
   2d9c6:	movs	r3, #1
   2d9c8:	ldr	r1, [sp, #8]
   2d9ca:	add	r2, sp, #20
   2d9cc:	strd	r3, r0, [sp, #20]
   2d9d0:	mov	r3, r6
   2d9d2:	strd	r0, r0, [sp]
   2d9d6:	strb.w	r0, [sp, #29]
   2d9da:	strb.w	r0, [sp, #30]
   2d9de:	strb.w	r0, [sp, #31]
   2d9e2:	strb.w	r0, [sp, #32]
   2d9e6:	strb.w	r0, [sp, #33]	; 0x21
   2d9ea:	strb.w	r0, [sp, #34]	; 0x22
   2d9ee:	strb.w	r0, [sp, #35]	; 0x23
   2d9f2:	strb.w	r0, [sp, #36]	; 0x24
   2d9f6:	strb.w	r0, [sp, #28]
   2d9fa:	bl	1d6c0 <btrfs_search_slot@@Base>
   2d9fe:	subs	r3, r0, #0
   2da00:	blt.n	2da34 <btrfs_read_chunk_tree@@Base+0x9c>
   2da02:	ldr.w	sl, [pc, #512]	; 2dc04 <btrfs_read_chunk_tree@@Base+0x26c>
   2da06:	add.w	fp, sp, #40	; 0x28
   2da0a:	add	sl, pc
   2da0c:	ldr.w	r9, [r6]
   2da10:	ldr	r4, [r6, #32]
   2da12:	ldr.w	r3, [r9, #192]	; 0xc0
   2da16:	cmp	r4, r3
   2da18:	bcc.n	2da54 <btrfs_read_chunk_tree@@Base+0xbc>
   2da1a:	movs	r3, #0
   2da1c:	strb.w	r3, [r6, #65]	; 0x41
   2da20:	ldr	r3, [sp, #8]
   2da22:	mov	r1, r6
   2da24:	ldr.w	r0, [r3, #464]	; 0x1d0
   2da28:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   2da2c:	cmp	r0, #0
   2da2e:	beq.n	2da0c <btrfs_read_chunk_tree@@Base+0x74>
   2da30:	and.w	r3, r0, r0, asr #31
   2da34:	mov	r0, r6
   2da36:	str	r3, [sp, #8]
   2da38:	bl	1b302 <btrfs_free_path@@Base>
   2da3c:	ldr	r3, [sp, #8]
   2da3e:	ldr	r1, [pc, #456]	; (2dc08 <btrfs_read_chunk_tree@@Base+0x270>)
   2da40:	ldr	r2, [pc, #444]	; (2dc00 <btrfs_read_chunk_tree@@Base+0x268>)
   2da42:	add	r1, pc
   2da44:	ldr	r2, [r1, r2]
   2da46:	ldr	r1, [r2, #0]
   2da48:	ldr	r2, [sp, #92]	; 0x5c
   2da4a:	eors	r1, r2
   2da4c:	beq.w	2dbf0 <btrfs_read_chunk_tree@@Base+0x258>
   2da50:	blx	88e4 <__stack_chk_fail@plt>
   2da54:	mov	r2, r4
   2da56:	mov	r1, fp
   2da58:	mov	r0, r9
   2da5a:	bl	2b34c <btrfs_add_root_ref@@Base+0x29c>
   2da5e:	ldrb.w	r3, [sp, #48]	; 0x30
   2da62:	cmp	r3, #216	; 0xd8
   2da64:	bne.w	2dbc8 <btrfs_read_chunk_tree@@Base+0x230>
   2da68:	add.w	r3, r9, #96	; 0x60
   2da6c:	movs	r2, #25
   2da6e:	add.w	r8, sp, #60	; 0x3c
   2da72:	mov	r0, r9
   2da74:	mla	r4, r2, r4, r3
   2da78:	ldr.w	r4, [r4, #118]	; 0x76
   2da7c:	add.w	r2, r4, #101	; 0x65
   2da80:	adds	r5, r3, r2
   2da82:	ldr	r3, [r3, r2]
   2da84:	vmov	s17, r3
   2da88:	ldr	r3, [r5, #4]
   2da8a:	vmov	s18, r3
   2da8e:	add.w	r3, r4, #167	; 0xa7
   2da92:	vmov	s16, r3
   2da96:	add	r3, sp, #76	; 0x4c
   2da98:	str	r3, [sp, #12]
   2da9a:	movs	r3, #16
   2da9c:	vmov	r2, s16
   2daa0:	ldr	r1, [sp, #12]
   2daa2:	bl	1a79e <read_extent_buffer@@Base>
   2daa6:	add.w	r2, r4, #183	; 0xb7
   2daaa:	mov	r1, r8
   2daac:	mov	r0, r9
   2daae:	movs	r3, #16
   2dab0:	bl	1a79e <read_extent_buffer@@Base>
   2dab4:	ldr.w	r4, [r7, #352]	; 0x160
   2dab8:	movs	r2, #16
   2daba:	mov	r0, r8
   2dabc:	mov	r1, r4
   2dabe:	blx	887c <memcmp@plt+0x4>
   2dac2:	cbz	r0, 2db2a <btrfs_read_chunk_tree@@Base+0x192>
   2dac4:	ldr	r4, [r4, #92]	; 0x5c
   2dac6:	cbnz	r4, 2dae6 <btrfs_read_chunk_tree@@Base+0x14e>
   2dac8:	mov	r1, r4
   2daca:	mov	r0, r8
   2dacc:	bl	2b1d8 <btrfs_add_root_ref@@Base+0x128>
   2dad0:	mov	r4, r0
   2dad2:	cbnz	r0, 2db10 <btrfs_read_chunk_tree@@Base+0x178>
   2dad4:	movs	r1, #96	; 0x60
   2dad6:	movs	r0, #1
   2dad8:	blx	8718 <calloc@plt+0x4>
   2dadc:	mov	r4, r0
   2dade:	cbnz	r0, 2daee <btrfs_read_chunk_tree@@Base+0x156>
   2dae0:	mvn.w	r3, #11
   2dae4:	b.n	2da34 <btrfs_read_chunk_tree@@Base+0x9c>
   2dae6:	movs	r2, #16
   2dae8:	mov	r1, r8
   2daea:	mov	r0, r4
   2daec:	b.n	2dabe <btrfs_read_chunk_tree@@Base+0x126>
   2daee:	ldr.w	r2, [sl]
   2daf2:	add.w	r3, r0, #72	; 0x48
   2daf6:	strd	r3, r3, [r0, #72]	; 0x48
   2dafa:	add.w	r3, r0, #80	; 0x50
   2dafe:	str.w	r3, [sl]
   2db02:	str	r3, [r2, #4]
   2db04:	strd	r2, sl, [r0, #80]	; 0x50
   2db08:	ldmia.w	r8, {r0, r1, r2, r3}
   2db0c:	stmia.w	r4, {r0, r1, r2, r3}
   2db10:	movs	r1, #0
   2db12:	mov	r0, r4
   2db14:	bl	2b4a4 <btrfs_open_devices@@Base>
   2db18:	subs	r3, r0, #0
   2db1a:	bne.n	2dbe6 <btrfs_read_chunk_tree@@Base+0x24e>
   2db1c:	ldr.w	r3, [r7, #352]	; 0x160
   2db20:	ldr	r3, [r3, #92]	; 0x5c
   2db22:	str	r3, [r4, #92]	; 0x5c
   2db24:	ldr.w	r3, [r7, #352]	; 0x160
   2db28:	str	r4, [r3, #92]	; 0x5c
   2db2a:	ldr	r3, [sp, #12]
   2db2c:	mov	r0, r7
   2db2e:	vmov	r2, s17
   2db32:	str.w	r8, [sp, #4]
   2db36:	str	r3, [sp, #0]
   2db38:	vmov	r3, s18
   2db3c:	bl	2d2d0 <btrfs_find_device@@Base>
   2db40:	mov	r4, r0
   2db42:	cbnz	r0, 2db6a <btrfs_read_chunk_tree@@Base+0x1d2>
   2db44:	movs	r1, #128	; 0x80
   2db46:	movs	r0, #1
   2db48:	blx	8718 <calloc@plt+0x4>
   2db4c:	mov	r4, r0
   2db4e:	cmp	r0, #0
   2db50:	beq.n	2dae0 <btrfs_read_chunk_tree@@Base+0x148>
   2db52:	ldr.w	r2, [r7, #352]	; 0x160
   2db56:	mov.w	r3, #4294967295	; 0xffffffff
   2db5a:	str	r3, [r0, #24]
   2db5c:	mov	r3, r2
   2db5e:	ldr.w	r1, [r3, #72]!
   2db62:	str	r0, [r1, #4]
   2db64:	strd	r1, r3, [r0]
   2db68:	str	r0, [r2, #72]	; 0x48
   2db6a:	ldr	r2, [r5, #0]
   2db6c:	add.w	r1, r4, #112	; 0x70
   2db70:	ldr	r3, [r5, #4]
   2db72:	mov	r0, r9
   2db74:	strd	r2, r3, [r4, #64]	; 0x40
   2db78:	ldr	r2, [r5, #8]
   2db7a:	ldr	r3, [r5, #12]
   2db7c:	strd	r2, r3, [r4, #72]	; 0x48
   2db80:	ldr	r2, [r5, #16]
   2db82:	ldr	r3, [r5, #20]
   2db84:	strd	r2, r3, [r4, #80]	; 0x50
   2db88:	ldr	r2, [r5, #36]	; 0x24
   2db8a:	ldr	r3, [r5, #40]	; 0x28
   2db8c:	strd	r2, r3, [r4, #104]	; 0x68
   2db90:	ldr	r3, [r5, #24]
   2db92:	vmov	r2, s16
   2db96:	str	r3, [r4, #88]	; 0x58
   2db98:	ldr	r3, [r5, #28]
   2db9a:	str	r3, [r4, #92]	; 0x5c
   2db9c:	ldr	r3, [r5, #32]
   2db9e:	str	r3, [r4, #96]	; 0x60
   2dba0:	movs	r3, #16
   2dba2:	bl	1a79e <read_extent_buffer@@Base>
   2dba6:	ldr	r3, [r7, #36]	; 0x24
   2dba8:	str	r3, [r4, #8]
   2dbaa:	ldr.w	r2, [r7, #352]	; 0x160
   2dbae:	ldr	r0, [r5, #8]
   2dbb0:	ldr	r4, [r5, #12]
   2dbb2:	ldrd	r3, r1, [r2, #56]	; 0x38
   2dbb6:	adds	r3, r3, r0
   2dbb8:	adc.w	r1, r4, r1
   2dbbc:	strd	r3, r1, [r2, #56]	; 0x38
   2dbc0:	ldr	r3, [r6, #32]
   2dbc2:	adds	r3, #1
   2dbc4:	str	r3, [r6, #32]
   2dbc6:	b.n	2da0c <btrfs_read_chunk_tree@@Base+0x74>
   2dbc8:	cmp	r3, #228	; 0xe4
   2dbca:	bne.n	2dbc0 <btrfs_read_chunk_tree@@Base+0x228>
   2dbcc:	movs	r3, #25
   2dbce:	mov	r2, r9
   2dbd0:	mla	r3, r3, r4, r9
   2dbd4:	mov	r1, fp
   2dbd6:	mov	r0, r7
   2dbd8:	ldr.w	r3, [r3, #214]	; 0xd6
   2dbdc:	str	r4, [sp, #0]
   2dbde:	adds	r3, #101	; 0x65
   2dbe0:	bl	2d5fc <btrfs_check_chunk_valid@@Base+0x27c>
   2dbe4:	subs	r3, r0, #0
   2dbe6:	bge.n	2dbc0 <btrfs_read_chunk_tree@@Base+0x228>
   2dbe8:	b.n	2da34 <btrfs_read_chunk_tree@@Base+0x9c>
   2dbea:	mvn.w	r3, #11
   2dbee:	b.n	2da3e <btrfs_read_chunk_tree@@Base+0xa6>
   2dbf0:	mov	r0, r3
   2dbf2:	add	sp, #100	; 0x64
   2dbf4:	vpop	{d8-d9}
   2dbf8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dbfc:	cbz	r2, 2dc62 <write_raid56_with_parity@@Base+0x4a>
   2dbfe:	movs	r3, r0
   2dc00:	lsls	r4, r7, #9
   2dc02:	movs	r0, r0
   2dc04:	stmia	r7!, {r1, r2, r3, r5, r7}
   2dc06:	movs	r3, r0
   2dc08:	uxtb	r6, r5
   2dc0a:	movs	r3, r0

0002dc0c <btrfs_scanned_uuids@@Base>:
   2dc0c:	ldr	r0, [pc, #4]	; (2dc14 <btrfs_scanned_uuids@@Base+0x8>)
   2dc0e:	add	r0, pc
   2dc10:	bx	lr
   2dc12:	nop
   2dc14:	stmia	r5!, {r1, r3, r5, r7}
   2dc16:	movs	r3, r0

0002dc18 <write_raid56_with_parity@@Base>:
   2dc18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dc1c:	vpush	{d8}
   2dc20:	vmov	s16, r0
   2dc24:	ldr	r3, [r1, #76]	; 0x4c
   2dc26:	sub	sp, #44	; 0x2c
   2dc28:	str	r1, [sp, #4]
   2dc2a:	str	r3, [sp, #16]
   2dc2c:	ldr	r3, [r2, #4]
   2dc2e:	str	r2, [sp, #12]
   2dc30:	lsls	r5, r3, #2
   2dc32:	str	r3, [sp, #8]
   2dc34:	mov	r0, r5
   2dc36:	blx	8a94 <malloc@plt+0x4>
   2dc3a:	mov	r4, r0
   2dc3c:	mov	r0, r5
   2dc3e:	blx	8a94 <malloc@plt+0x4>
   2dc42:	mov	sl, r0
   2dc44:	cbz	r4, 2dc48 <write_raid56_with_parity@@Base+0x30>
   2dc46:	cbnz	r0, 2dc64 <write_raid56_with_parity@@Base+0x4c>
   2dc48:	mov	r0, r4
   2dc4a:	mvn.w	r9, #11
   2dc4e:	blx	87cc <free@plt+0x4>
   2dc52:	mov	r0, sl
   2dc54:	blx	87cc <free@plt+0x4>
   2dc58:	mov	r0, r9
   2dc5a:	add	sp, #44	; 0x2c
   2dc5c:	vpop	{d8}
   2dc60:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dc64:	ldr	r3, [sp, #16]
   2dc66:	asrs	r2, r3, #31
   2dc68:	mov	r1, r3
   2dc6a:	mov	r3, r2
   2dc6c:	mov	r2, r1
   2dc6e:	ldrd	r0, r1, [sp, #88]	; 0x58
   2dc72:	cmp	r3, r1
   2dc74:	ldr	r3, [sp, #16]
   2dc76:	it	eq
   2dc78:	cmpeq	r2, r0
   2dc7a:	ldr	r2, [sp, #88]	; 0x58
   2dc7c:	ldr	r0, [sp, #8]
   2dc7e:	mov.w	r1, #4
   2dc82:	it	cc
   2dc84:	movcc	r3, r2
   2dc86:	str	r3, [sp, #16]
   2dc88:	ldr	r3, [sp, #4]
   2dc8a:	ldrd	r2, r3, [r3, #40]	; 0x28
   2dc8e:	strd	r2, r3, [sp, #24]
   2dc92:	blx	8718 <calloc@plt+0x4>
   2dc96:	mov	r8, r0
   2dc98:	cmp	r0, #0
   2dc9a:	beq.w	2dfa2 <write_raid56_with_parity@@Base+0x38a>
   2dc9e:	ldr	r3, [sp, #96]	; 0x60
   2dca0:	movs	r5, #0
   2dca2:	ldr	r1, [sp, #88]	; 0x58
   2dca4:	mvn.w	r2, #2
   2dca8:	subs	r3, #8
   2dcaa:	str	r3, [sp, #20]
   2dcac:	add.w	r7, r1, #96	; 0x60
   2dcb0:	mov	r6, r3
   2dcb2:	mov.w	r3, #4294967295	; 0xffffffff
   2dcb6:	ldr	r1, [sp, #8]
   2dcb8:	cmp	r1, r5
   2dcba:	bgt.n	2dcc2 <write_raid56_with_parity@@Base+0xaa>
   2dcbc:	mov.w	fp, #0
   2dcc0:	b.n	2ddf0 <write_raid56_with_parity@@Base+0x1d8>
   2dcc2:	ldrd	r0, r1, [r6, #8]!
   2dcc6:	cmp	r3, r1
   2dcc8:	it	eq
   2dcca:	cmpeq	r2, r0
   2dccc:	bcc.n	2dcbc <write_raid56_with_parity@@Base+0xa4>
   2dcce:	mov	r1, r7
   2dcd0:	movs	r0, #1
   2dcd2:	blx	8718 <calloc@plt+0x4>
   2dcd6:	str.w	r0, [r8, r5, lsl #2]
   2dcda:	cmp	r0, #0
   2dcdc:	beq.w	2de7a <write_raid56_with_parity@@Base+0x262>
   2dce0:	adds	r5, #1
   2dce2:	mvn.w	r2, #2
   2dce6:	mov.w	r3, #4294967295	; 0xffffffff
   2dcea:	b.n	2dcb6 <write_raid56_with_parity@@Base+0x9e>
   2dcec:	ldr	r3, [sp, #20]
   2dcee:	mvn.w	r2, #2
   2dcf2:	ldr.w	r5, [r8, fp, lsl #2]
   2dcf6:	ldrd	r6, r7, [r3, #8]!
   2dcfa:	str	r3, [sp, #20]
   2dcfc:	mov.w	r3, #4294967295	; 0xffffffff
   2dd00:	cmp	r3, r7
   2dd02:	it	eq
   2dd04:	cmpeq	r2, r6
   2dd06:	bcc.n	2ddf8 <write_raid56_with_parity@@Base+0x1e0>
   2dd08:	ldr	r3, [sp, #88]	; 0x58
   2dd0a:	movs	r2, #1
   2dd0c:	strd	r6, r7, [r5, #40]	; 0x28
   2dd10:	str	r3, [r5, #76]	; 0x4c
   2dd12:	movs	r3, #0
   2dd14:	strd	r2, r3, [r5, #80]	; 0x50
   2dd18:	mov.w	r3, #4294967295	; 0xffffffff
   2dd1c:	mov.w	r2, #4294967295	; 0xffffffff
   2dd20:	str	r3, [r5, #88]	; 0x58
   2dd22:	mov.w	r3, #4294967295	; 0xffffffff
   2dd26:	strd	r2, r3, [r5, #48]	; 0x30
   2dd2a:	ldrd	r2, r3, [sp, #24]
   2dd2e:	cmp	r7, r3
   2dd30:	it	eq
   2dd32:	cmpeq	r6, r2
   2dd34:	bcc.n	2dd5e <write_raid56_with_parity@@Base+0x146>
   2dd36:	ldr	r3, [sp, #4]
   2dd38:	ldr	r1, [r3, #76]	; 0x4c
   2dd3a:	ldrd	r2, r3, [sp, #24]
   2dd3e:	adds	r2, r2, r1
   2dd40:	ldr	r1, [sp, #88]	; 0x58
   2dd42:	adc.w	r3, r3, #0
   2dd46:	adds	r1, r1, r6
   2dd48:	str	r1, [sp, #32]
   2dd4a:	ldr	r1, [sp, #92]	; 0x5c
   2dd4c:	adcs	r1, r7
   2dd4e:	str	r1, [sp, #36]	; 0x24
   2dd50:	ldrd	r0, r1, [sp, #32]
   2dd54:	cmp	r3, r1
   2dd56:	it	eq
   2dd58:	cmpeq	r2, r0
   2dd5a:	bcs.w	2de66 <write_raid56_with_parity@@Base+0x24e>
   2dd5e:	vmov	r0, s16
   2dd62:	movs	r2, #0
   2dd64:	mov	r1, r5
   2dd66:	bl	1f6c8 <read_whole_eb@@Base>
   2dd6a:	mov	r9, r0
   2dd6c:	cmp	r0, #0
   2dd6e:	bne.w	2de7e <write_raid56_with_parity@@Base+0x266>
   2dd72:	ldr	r3, [sp, #4]
   2dd74:	ldrd	r0, r1, [r5, #40]	; 0x28
   2dd78:	ldr.w	ip, [r5, #76]	; 0x4c
   2dd7c:	ldrd	r6, r7, [r3, #40]	; 0x28
   2dd80:	adds.w	r2, r0, ip
   2dd84:	adc.w	r3, r1, #0
   2dd88:	cmp	r7, r3
   2dd8a:	it	eq
   2dd8c:	cmpeq	r6, r2
   2dd8e:	bcs.n	2dde8 <write_raid56_with_parity@@Base+0x1d0>
   2dd90:	ldr	r3, [sp, #4]
   2dd92:	ldr.w	lr, [r3, #76]	; 0x4c
   2dd96:	adds.w	r2, r6, lr
   2dd9a:	adc.w	r3, r7, #0
   2dd9e:	cmp	r1, r3
   2dda0:	it	eq
   2dda2:	cmpeq	r0, r2
   2dda4:	bcs.n	2dde8 <write_raid56_with_parity@@Base+0x1d0>
   2dda6:	cmp	r7, r1
   2dda8:	ldr	r3, [sp, #88]	; 0x58
   2ddaa:	it	eq
   2ddac:	cmpeq	r6, r0
   2ddae:	it	cc
   2ddb0:	subcc.w	r9, r0, r6
   2ddb4:	cmp	r1, r7
   2ddb6:	it	eq
   2ddb8:	cmpeq	r0, r6
   2ddba:	sub.w	lr, lr, r9
   2ddbe:	it	cc
   2ddc0:	subcc	r6, r6, r0
   2ddc2:	add.w	r0, r5, #96	; 0x60
   2ddc6:	it	cs
   2ddc8:	movcs	r6, #0
   2ddca:	cmp	lr, r3
   2ddcc:	sub.w	r2, ip, r6
   2ddd0:	add	r0, r6
   2ddd2:	it	cs
   2ddd4:	movcs	lr, r3
   2ddd6:	ldr	r3, [sp, #4]
   2ddd8:	cmp	r2, lr
   2ddda:	add.w	r1, r3, #96	; 0x60
   2ddde:	add	r1, r9
   2dde0:	it	cs
   2dde2:	movcs	r2, lr
   2dde4:	blx	8830 <memcpy@plt+0x4>
   2dde8:	str.w	r5, [r4, fp, lsl #2]
   2ddec:	add.w	fp, fp, #1
   2ddf0:	ldr	r3, [sp, #8]
   2ddf2:	cmp	r3, fp
   2ddf4:	bgt.w	2dcec <write_raid56_with_parity@@Base+0xd4>
   2ddf8:	mov	r0, r8
   2ddfa:	movs	r6, #0
   2ddfc:	blx	87cc <free@plt+0x4>
   2de00:	ldr	r3, [sp, #16]
   2de02:	ldr	r7, [sp, #12]
   2de04:	mov	r5, r6
   2de06:	ldr.w	r8, [sp, #96]	; 0x60
   2de0a:	add.w	r9, r3, #96	; 0x60
   2de0e:	str	r6, [sp, #8]
   2de10:	ldr	r3, [sp, #12]
   2de12:	ldr	r0, [r3, #4]
   2de14:	cmp	r0, r6
   2de16:	bgt.n	2dea6 <write_raid56_with_parity@@Base+0x28e>
   2de18:	add.w	r3, r0, #1073741824	; 0x40000000
   2de1c:	subs	r3, #1
   2de1e:	add.w	r2, r4, r3, lsl #2
   2de22:	cmp	r5, #0
   2de24:	beq.w	2df50 <write_raid56_with_parity@@Base+0x338>
   2de28:	ldr	r1, [sp, #8]
   2de2a:	str.w	r1, [r2, #-4]
   2de2e:	str.w	r5, [r4, r3, lsl #2]
   2de32:	movs	r3, #0
   2de34:	cmp	r0, r3
   2de36:	bgt.w	2df42 <write_raid56_with_parity@@Base+0x32a>
   2de3a:	ldr	r1, [sp, #88]	; 0x58
   2de3c:	mov	r2, sl
   2de3e:	bl	31f84 <raid6_gen_syndrome@@Base>
   2de42:	mov.w	r9, #0
   2de46:	movs	r5, #0
   2de48:	ldr	r3, [sp, #12]
   2de4a:	ldr	r3, [r3, #4]
   2de4c:	cmp	r3, r5
   2de4e:	ble.w	2df6c <write_raid56_with_parity@@Base+0x354>
   2de52:	ldr.w	r0, [r4, r5, lsl #2]
   2de56:	bl	1a302 <write_extent_to_disk@@Base>
   2de5a:	subs.w	r9, r0, #0
   2de5e:	blt.w	2df6c <write_raid56_with_parity@@Base+0x354>
   2de62:	adds	r5, #1
   2de64:	b.n	2de48 <write_raid56_with_parity@@Base+0x230>
   2de66:	ldr	r3, [sp, #4]
   2de68:	add.w	r0, r5, #96	; 0x60
   2de6c:	ldr	r2, [sp, #88]	; 0x58
   2de6e:	add.w	r1, r3, #96	; 0x60
   2de72:	ldr	r3, [sp, #24]
   2de74:	subs	r6, r6, r3
   2de76:	add	r1, r6
   2de78:	b.n	2dde4 <write_raid56_with_parity@@Base+0x1cc>
   2de7a:	mvn.w	r9, #11
   2de7e:	movs	r5, #0
   2de80:	ldr	r3, [sp, #8]
   2de82:	cmp	r3, r5
   2de84:	bgt.n	2de9a <write_raid56_with_parity@@Base+0x282>
   2de86:	mov	r0, r8
   2de88:	blx	87cc <free@plt+0x4>
   2de8c:	mov	r0, r4
   2de8e:	blx	87cc <free@plt+0x4>
   2de92:	mov	r0, sl
   2de94:	blx	87cc <free@plt+0x4>
   2de98:	b.n	2dc58 <write_raid56_with_parity@@Base+0x40>
   2de9a:	ldr.w	r0, [r8, r5, lsl #2]
   2de9e:	adds	r5, #1
   2dea0:	blx	87cc <free@plt+0x4>
   2dea4:	b.n	2de80 <write_raid56_with_parity@@Base+0x268>
   2dea6:	ldrd	r2, r3, [r8]
   2deaa:	mov.w	r1, #4294967295	; 0xffffffff
   2deae:	mvn.w	r0, #2
   2deb2:	cmp	r1, r3
   2deb4:	it	eq
   2deb6:	cmpeq	r0, r2
   2deb8:	bcc.n	2def4 <write_raid56_with_parity@@Base+0x2dc>
   2deba:	ldrd	r2, r3, [r7, #16]
   2debe:	ldr	r1, [r7, #8]
   2dec0:	ldr.w	r0, [r4, r6, lsl #2]
   2dec4:	strd	r2, r3, [r0, #48]	; 0x30
   2dec8:	ldr	r3, [r1, #24]
   2deca:	str	r3, [r0, #88]	; 0x58
   2decc:	ldrd	r3, r2, [r1, #16]
   2ded0:	adds	r3, #1
   2ded2:	adc.w	r2, r2, #0
   2ded6:	strd	r3, r2, [r1, #16]
   2deda:	ldrd	r0, r1, [r0, #40]	; 0x28
   2dede:	ldrd	r2, r3, [r8]
   2dee2:	cmp	r1, r3
   2dee4:	it	eq
   2dee6:	cmpeq	r0, r2
   2dee8:	bne.n	2df96 <write_raid56_with_parity@@Base+0x37e>
   2deea:	adds	r6, #1
   2deec:	adds	r7, #16
   2deee:	add.w	r8, r8, #8
   2def2:	b.n	2de10 <write_raid56_with_parity@@Base+0x1f8>
   2def4:	mov	r0, r9
   2def6:	blx	8a94 <malloc@plt+0x4>
   2defa:	cmp	r0, #0
   2defc:	beq.n	2df9c <write_raid56_with_parity@@Base+0x384>
   2defe:	ldrd	r2, r3, [r7, #16]
   2df02:	mov.w	ip, #4294967295	; 0xffffffff
   2df06:	ldr	r1, [r7, #8]
   2df08:	mvn.w	fp, #1
   2df0c:	strd	r2, r3, [r0, #48]	; 0x30
   2df10:	ldr	r3, [r1, #24]
   2df12:	str	r3, [r0, #88]	; 0x58
   2df14:	ldrd	r3, r2, [r1, #16]
   2df18:	adds	r3, #1
   2df1a:	adc.w	r2, r2, #0
   2df1e:	strd	r3, r2, [r1, #16]
   2df22:	ldr	r3, [sp, #88]	; 0x58
   2df24:	str	r3, [r0, #76]	; 0x4c
   2df26:	ldrd	r2, r3, [r8]
   2df2a:	cmp	r3, ip
   2df2c:	it	eq
   2df2e:	cmpeq	r2, fp
   2df30:	beq.n	2df3e <write_raid56_with_parity@@Base+0x326>
   2df32:	adds	r3, #1
   2df34:	itt	eq
   2df36:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2df3a:	moveq	r5, r0
   2df3c:	b.n	2deea <write_raid56_with_parity@@Base+0x2d2>
   2df3e:	str	r0, [sp, #8]
   2df40:	b.n	2deea <write_raid56_with_parity@@Base+0x2d2>
   2df42:	ldr.w	r2, [r4, r3, lsl #2]
   2df46:	adds	r2, #96	; 0x60
   2df48:	str.w	r2, [sl, r3, lsl #2]
   2df4c:	adds	r3, #1
   2df4e:	b.n	2de34 <write_raid56_with_parity@@Base+0x21c>
   2df50:	ldr	r2, [sp, #8]
   2df52:	str.w	r2, [r4, r3, lsl #2]
   2df56:	cmp	r0, r5
   2df58:	bgt.n	2df88 <write_raid56_with_parity@@Base+0x370>
   2df5a:	ldr	r1, [sp, #88]	; 0x58
   2df5c:	subs	r2, r0, #1
   2df5e:	mov	r3, sl
   2df60:	bl	31ff0 <raid5_gen_result@@Base>
   2df64:	subs.w	r9, r0, #0
   2df68:	bge.w	2de46 <write_raid56_with_parity@@Base+0x22e>
   2df6c:	movs	r5, #0
   2df6e:	ldr	r3, [sp, #12]
   2df70:	ldr	r3, [r3, #4]
   2df72:	cmp	r3, r5
   2df74:	ble.n	2de8c <write_raid56_with_parity@@Base+0x274>
   2df76:	ldr.w	r0, [r4, r5, lsl #2]
   2df7a:	ldr	r3, [sp, #4]
   2df7c:	cmp	r0, r3
   2df7e:	beq.n	2df84 <write_raid56_with_parity@@Base+0x36c>
   2df80:	blx	87cc <free@plt+0x4>
   2df84:	adds	r5, #1
   2df86:	b.n	2df6e <write_raid56_with_parity@@Base+0x356>
   2df88:	ldr.w	r3, [r4, r5, lsl #2]
   2df8c:	adds	r3, #96	; 0x60
   2df8e:	str.w	r3, [sl, r5, lsl #2]
   2df92:	adds	r5, #1
   2df94:	b.n	2df56 <write_raid56_with_parity@@Base+0x33e>
   2df96:	mvn.w	r9, #21
   2df9a:	b.n	2df6c <write_raid56_with_parity@@Base+0x354>
   2df9c:	mvn.w	r9, #11
   2dfa0:	b.n	2df6c <write_raid56_with_parity@@Base+0x354>
   2dfa2:	mvn.w	r9, #11
   2dfa6:	b.n	2de8c <write_raid56_with_parity@@Base+0x274>

0002dfa8 <btrfs_stripe_length@@Base>:
   2dfa8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2dfac:	adds	r1, #96	; 0x60
   2dfae:	add	r1, r2
   2dfb0:	movs	r3, #0
   2dfb2:	cmp	r3, #0
   2dfb4:	mov	r7, r3
   2dfb6:	ldr	r4, [r1, #24]
   2dfb8:	ldrh	r2, [r1, #44]	; 0x2c
   2dfba:	and.w	r6, r4, #2040	; 0x7f8
   2dfbe:	ldr	r5, [r1, #0]
   2dfc0:	it	eq
   2dfc2:	cmpeq	r6, #64	; 0x40
   2dfc4:	ldr	r4, [r1, #4]
   2dfc6:	uxth	r0, r2
   2dfc8:	beq.n	2e06c <btrfs_stripe_length@@Base+0xc4>
   2dfca:	cmp	r3, #0
   2dfcc:	it	eq
   2dfce:	cmpeq	r6, #65	; 0x41
   2dfd0:	bcs.n	2e01c <btrfs_stripe_length@@Base+0x74>
   2dfd2:	cmp	r3, #0
   2dfd4:	it	eq
   2dfd6:	cmpeq	r6, #8
   2dfd8:	beq.n	2e062 <btrfs_stripe_length@@Base+0xba>
   2dfda:	cmp	r3, #0
   2dfdc:	it	eq
   2dfde:	cmpeq	r6, #9
   2dfe0:	bcs.n	2e002 <btrfs_stripe_length@@Base+0x5a>
   2dfe2:	orrs.w	r3, r6, r7
   2dfe6:	beq.n	2e012 <btrfs_stripe_length@@Base+0x6a>
   2dfe8:	ldr	r2, [pc, #140]	; (2e078 <btrfs_stripe_length@@Base+0xd0>)
   2dfea:	movs	r3, #1
   2dfec:	ldr	r1, [pc, #140]	; (2e07c <btrfs_stripe_length@@Base+0xd4>)
   2dfee:	ldr	r0, [pc, #144]	; (2e080 <btrfs_stripe_length@@Base+0xd8>)
   2dff0:	add	r2, pc
   2dff2:	str	r3, [sp, #0]
   2dff4:	adds	r2, #130	; 0x82
   2dff6:	add	r1, pc
   2dff8:	add	r0, pc
   2dffa:	movw	r3, #2545	; 0x9f1
   2dffe:	bl	2b2a4 <btrfs_add_root_ref@@Base+0x1f4>
   2e002:	cmp	r3, #0
   2e004:	it	eq
   2e006:	cmpeq	r6, #16
   2e008:	beq.n	2e012 <btrfs_stripe_length@@Base+0x6a>
   2e00a:	cmp	r3, #0
   2e00c:	it	eq
   2e00e:	cmpeq	r6, #32
   2e010:	bne.n	2dfe8 <btrfs_stripe_length@@Base+0x40>
   2e012:	mov	r0, r5
   2e014:	mov	r1, r4
   2e016:	add	sp, #12
   2e018:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2e01c:	cmp	r3, #0
   2e01e:	it	eq
   2e020:	cmpeq.w	r6, #256	; 0x100
   2e024:	beq.n	2e068 <btrfs_stripe_length@@Base+0xc0>
   2e026:	mov.w	r9, #0
   2e02a:	cmp	r9, r3
   2e02c:	mov.w	r8, #256	; 0x100
   2e030:	it	eq
   2e032:	cmpeq	r8, r6
   2e034:	bcc.n	2e04e <btrfs_stripe_length@@Base+0xa6>
   2e036:	cmp	r3, #0
   2e038:	it	eq
   2e03a:	cmpeq	r6, #128	; 0x80
   2e03c:	bne.n	2dfe8 <btrfs_stripe_length@@Base+0x40>
   2e03e:	subs	r2, r0, #1
   2e040:	mov	r0, r5
   2e042:	mov	r1, r4
   2e044:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2e048:	mov	r5, r0
   2e04a:	mov	r4, r1
   2e04c:	b.n	2e012 <btrfs_stripe_length@@Base+0x6a>
   2e04e:	cmp	r3, #0
   2e050:	it	eq
   2e052:	cmpeq.w	r6, #512	; 0x200
   2e056:	beq.n	2e012 <btrfs_stripe_length@@Base+0x6a>
   2e058:	cmp	r3, #0
   2e05a:	it	eq
   2e05c:	cmpeq.w	r6, #1024	; 0x400
   2e060:	b.n	2e010 <btrfs_stripe_length@@Base+0x68>
   2e062:	uxth	r2, r2
   2e064:	movs	r3, #0
   2e066:	b.n	2e040 <btrfs_stripe_length@@Base+0x98>
   2e068:	subs	r2, r0, #2
   2e06a:	b.n	2e040 <btrfs_stripe_length@@Base+0x98>
   2e06c:	ldrh	r1, [r1, #46]	; 0x2e
   2e06e:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   2e072:	mov	r2, r0
   2e074:	b.n	2e064 <btrfs_stripe_length@@Base+0xbc>
   2e076:	nop
   2e078:	ldr	r4, [r3, #8]
   2e07a:	movs	r1, r0
   2e07c:	str	r4, [r7, #24]
   2e07e:	movs	r1, r0
   2e080:	subs	r7, #61	; 0x3d
   2e082:	movs	r1, r0

0002e084 <btrfs_fix_device_size@@Base>:
   2e084:	ldr	r2, [pc, #344]	; (2e1e0 <btrfs_fix_device_size@@Base+0x15c>)
   2e086:	ldr	r3, [pc, #348]	; (2e1e4 <btrfs_fix_device_size@@Base+0x160>)
   2e088:	add	r2, pc
   2e08a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e08e:	sub	sp, #116	; 0x74
   2e090:	ldr	r3, [r2, r3]
   2e092:	mov	r5, r1
   2e094:	ldrd	sl, fp, [r1, #72]	; 0x48
   2e098:	movs	r1, #0
   2e09a:	ldr	r3, [r3, #0]
   2e09c:	str	r3, [sp, #108]	; 0x6c
   2e09e:	mov.w	r3, #0
   2e0a2:	ldr.w	r3, [r0, #388]	; 0x184
   2e0a6:	movs	r4, #0
   2e0a8:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2e0ac:	adc.w	r1, r1, #4294967295	; 0xffffffff
   2e0b0:	and.w	r6, r2, sl
   2e0b4:	and.w	r7, r1, fp
   2e0b8:	orrs.w	r2, r6, r7
   2e0bc:	beq.n	2e108 <btrfs_fix_device_size@@Base+0x84>
   2e0be:	negs	r3, r3
   2e0c0:	ldr.w	r9, [r0, #32]
   2e0c4:	and.w	r3, r3, sl
   2e0c8:	str	r3, [r5, #72]	; 0x48
   2e0ca:	movs	r3, #216	; 0xd8
   2e0cc:	strb.w	r3, [sp, #28]
   2e0d0:	ldr	r3, [r5, #64]	; 0x40
   2e0d2:	mov.w	r8, #1
   2e0d6:	mov	r1, r8
   2e0d8:	mov	r0, r9
   2e0da:	strd	r8, r4, [sp, #20]
   2e0de:	str.w	r3, [sp, #29]
   2e0e2:	ldr	r3, [r5, #68]	; 0x44
   2e0e4:	str.w	r3, [sp, #33]	; 0x21
   2e0e8:	bl	2e404 <btrfs_start_transaction@@Base>
   2e0ec:	cmn.w	r0, #4096	; 0x1000
   2e0f0:	mov	r6, r0
   2e0f2:	bls.n	2e11c <btrfs_fix_device_size@@Base+0x98>
   2e0f4:	mov	r4, r0
   2e0f6:	blx	8bac <__errno_location@plt>
   2e0fa:	negs	r3, r6
   2e0fc:	mov	r1, r6
   2e0fe:	str	r3, [r0, #0]
   2e100:	ldr	r0, [pc, #228]	; (2e1e8 <btrfs_fix_device_size@@Base+0x164>)
   2e102:	add	r0, pc
   2e104:	bl	1a900 <__btrfs_error@@Base>
   2e108:	ldr	r2, [pc, #224]	; (2e1ec <btrfs_fix_device_size@@Base+0x168>)
   2e10a:	ldr	r3, [pc, #216]	; (2e1e4 <btrfs_fix_device_size@@Base+0x160>)
   2e10c:	add	r2, pc
   2e10e:	ldr	r3, [r2, r3]
   2e110:	ldr	r2, [r3, #0]
   2e112:	ldr	r3, [sp, #108]	; 0x6c
   2e114:	eors	r2, r3
   2e116:	beq.n	2e1d8 <btrfs_fix_device_size@@Base+0x154>
   2e118:	blx	88e4 <__stack_chk_fail@plt>
   2e11c:	add	r7, sp, #40	; 0x28
   2e11e:	mov	r0, r7
   2e120:	bl	1b2cc <btrfs_init_path@@Base>
   2e124:	strd	r4, r8, [sp]
   2e128:	add	r2, sp, #20
   2e12a:	mov	r3, r7
   2e12c:	mov	r1, r9
   2e12e:	mov	r0, r6
   2e130:	bl	1d6c0 <btrfs_search_slot@@Base>
   2e134:	subs	r4, r0, #0
   2e136:	ble.n	2e152 <btrfs_fix_device_size@@Base+0xce>
   2e138:	ldr	r0, [pc, #180]	; (2e1f0 <btrfs_fix_device_size@@Base+0x16c>)
   2e13a:	mvn.w	r4, #1
   2e13e:	ldrd	r2, r3, [r5, #64]	; 0x40
   2e142:	add	r0, pc
   2e144:	bl	1a900 <__btrfs_error@@Base>
   2e148:	mov	r1, r9
   2e14a:	mov	r0, r6
   2e14c:	bl	2e684 <btrfs_commit_transaction@@Base>
   2e150:	b.n	2e1ac <btrfs_fix_device_size@@Base+0x128>
   2e152:	beq.n	2e168 <btrfs_fix_device_size@@Base+0xe4>
   2e154:	blx	8bac <__errno_location@plt>
   2e158:	negs	r3, r4
   2e15a:	mov	r1, r4
   2e15c:	str	r3, [r0, #0]
   2e15e:	ldr	r0, [pc, #148]	; (2e1f4 <btrfs_fix_device_size@@Base+0x170>)
   2e160:	add	r0, pc
   2e162:	bl	1a900 <__btrfs_error@@Base>
   2e166:	b.n	2e148 <btrfs_fix_device_size@@Base+0xc4>
   2e168:	ldr	r0, [sp, #40]	; 0x28
   2e16a:	mov.w	ip, #25
   2e16e:	ldr	r2, [sp, #72]	; 0x48
   2e170:	add.w	r3, r0, #96	; 0x60
   2e174:	ldrd	r1, r4, [r5, #72]	; 0x48
   2e178:	mla	r2, ip, r2, r3
   2e17c:	ldr.w	r2, [r2, #118]	; 0x76
   2e180:	add	r3, r2
   2e182:	str.w	r1, [r3, #109]	; 0x6d
   2e186:	str.w	r4, [r3, #113]	; 0x71
   2e18a:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2e18e:	mov	r1, r9
   2e190:	mov	r0, r6
   2e192:	bl	2e684 <btrfs_commit_transaction@@Base>
   2e196:	subs	r4, r0, #0
   2e198:	bge.n	2e1b4 <btrfs_fix_device_size@@Base+0x130>
   2e19a:	blx	8bac <__errno_location@plt>
   2e19e:	negs	r3, r4
   2e1a0:	mov	r1, r4
   2e1a2:	str	r3, [r0, #0]
   2e1a4:	ldr	r0, [pc, #80]	; (2e1f8 <btrfs_fix_device_size@@Base+0x174>)
   2e1a6:	add	r0, pc
   2e1a8:	bl	1a900 <__btrfs_error@@Base>
   2e1ac:	mov	r0, r7
   2e1ae:	bl	1b2dc <btrfs_release_path@@Base>
   2e1b2:	b.n	2e108 <btrfs_fix_device_size@@Base+0x84>
   2e1b4:	mov	r0, r7
   2e1b6:	mov	r4, r8
   2e1b8:	bl	1b2dc <btrfs_release_path@@Base>
   2e1bc:	ldrd	r2, r3, [r5, #72]	; 0x48
   2e1c0:	ldr	r1, [pc, #56]	; (2e1fc <btrfs_fix_device_size@@Base+0x178>)
   2e1c2:	mov	r0, r8
   2e1c4:	strd	sl, fp, [sp]
   2e1c8:	strd	r2, r3, [sp, #8]
   2e1cc:	add	r1, pc
   2e1ce:	ldrd	r2, r3, [r5, #64]	; 0x40
   2e1d2:	blx	8c6c <__printf_chk@plt+0x4>
   2e1d6:	b.n	2e108 <btrfs_fix_device_size@@Base+0x84>
   2e1d8:	mov	r0, r4
   2e1da:	add	sp, #116	; 0x74
   2e1dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e1e0:	add	r4, sp, #672	; 0x2a0
   2e1e2:	movs	r3, r0
   2e1e4:	lsls	r4, r7, #9
   2e1e6:	movs	r0, r0
   2e1e8:	str	r2, [r4, #80]	; 0x50
   2e1ea:	movs	r1, r0
   2e1ec:	add	r4, sp, #144	; 0x90
   2e1ee:	movs	r3, r0
   2e1f0:	str	r6, [r0, #80]	; 0x50
   2e1f2:	movs	r1, r0
   2e1f4:	str	r7, [r1, #80]	; 0x50
   2e1f6:	movs	r1, r0
   2e1f8:	str	r6, [r5, #76]	; 0x4c
   2e1fa:	movs	r1, r0
   2e1fc:	str	r6, [r6, #76]	; 0x4c
   2e1fe:	movs	r1, r0

0002e200 <btrfs_fix_super_size@@Base>:
   2e200:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2e204:	sub	sp, #20
   2e206:	ldr.w	r3, [r0, #352]	; 0x160
   2e20a:	mov	r5, r0
   2e20c:	movs	r6, #0
   2e20e:	movs	r7, #0
   2e210:	add.w	lr, r3, #72	; 0x48
   2e214:	ldr	r3, [r3, #72]	; 0x48
   2e216:	cmp	r3, lr
   2e218:	bne.n	2e256 <btrfs_fix_super_size@@Base+0x56>
   2e21a:	ldr.w	r3, [r5, #308]	; 0x134
   2e21e:	ldr.w	r9, [r3, #116]	; 0x74
   2e222:	ldr.w	r8, [r3, #112]	; 0x70
   2e226:	cmp	r7, r9
   2e228:	it	eq
   2e22a:	cmpeq	r6, r8
   2e22c:	beq.n	2e2d0 <btrfs_fix_super_size@@Base+0xd0>
   2e22e:	str	r6, [r3, #112]	; 0x70
   2e230:	movs	r1, #1
   2e232:	str	r7, [r3, #116]	; 0x74
   2e234:	ldr	r0, [r5, #28]
   2e236:	bl	2e404 <btrfs_start_transaction@@Base>
   2e23a:	cmn.w	r0, #4096	; 0x1000
   2e23e:	mov	r4, r0
   2e240:	bls.n	2e2a0 <btrfs_fix_super_size@@Base+0xa0>
   2e242:	blx	8bac <__errno_location@plt>
   2e246:	negs	r3, r4
   2e248:	mov	r1, r4
   2e24a:	str	r3, [r0, #0]
   2e24c:	ldr	r0, [pc, #132]	; (2e2d4 <btrfs_fix_super_size@@Base+0xd4>)
   2e24e:	add	r0, pc
   2e250:	bl	1a900 <__btrfs_error@@Base>
   2e254:	b.n	2e28e <btrfs_fix_super_size@@Base+0x8e>
   2e256:	ldr.w	ip, [r5, #388]	; 0x184
   2e25a:	movs	r4, #0
   2e25c:	ldrd	r1, r0, [r3, #72]	; 0x48
   2e260:	adds.w	r2, ip, #4294967295	; 0xffffffff
   2e264:	adc.w	r4, r4, #4294967295	; 0xffffffff
   2e268:	and.w	r8, r2, r1
   2e26c:	and.w	r9, r4, r0
   2e270:	orrs.w	r2, r8, r9
   2e274:	beq.n	2e296 <btrfs_fix_super_size@@Base+0x96>
   2e276:	strd	r1, r0, [sp]
   2e27a:	mvn.w	r4, #116	; 0x74
   2e27e:	ldr	r0, [pc, #88]	; (2e2d8 <btrfs_fix_super_size@@Base+0xd8>)
   2e280:	str.w	ip, [sp, #8]
   2e284:	add	r0, pc
   2e286:	ldrd	r2, r3, [r3, #64]	; 0x40
   2e28a:	bl	1a900 <__btrfs_error@@Base>
   2e28e:	mov	r0, r4
   2e290:	add	sp, #20
   2e292:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2e296:	adds	r6, r6, r1
   2e298:	ldr	r3, [r3, #0]
   2e29a:	adc.w	r7, r0, r7
   2e29e:	b.n	2e216 <btrfs_fix_super_size@@Base+0x16>
   2e2a0:	ldr	r1, [r5, #28]
   2e2a2:	bl	2e684 <btrfs_commit_transaction@@Base>
   2e2a6:	subs	r4, r0, #0
   2e2a8:	bge.n	2e2ba <btrfs_fix_super_size@@Base+0xba>
   2e2aa:	blx	8bac <__errno_location@plt>
   2e2ae:	negs	r3, r4
   2e2b0:	mov	r1, r4
   2e2b2:	str	r3, [r0, #0]
   2e2b4:	ldr	r0, [pc, #36]	; (2e2dc <btrfs_fix_super_size@@Base+0xdc>)
   2e2b6:	add	r0, pc
   2e2b8:	b.n	2e250 <btrfs_fix_super_size@@Base+0x50>
   2e2ba:	ldr	r1, [pc, #36]	; (2e2e0 <btrfs_fix_super_size@@Base+0xe0>)
   2e2bc:	mov	r2, r8
   2e2be:	mov	r3, r9
   2e2c0:	movs	r0, #1
   2e2c2:	add	r1, pc
   2e2c4:	strd	r6, r7, [sp]
   2e2c8:	blx	8c6c <__printf_chk@plt+0x4>
   2e2cc:	movs	r4, #1
   2e2ce:	b.n	2e28e <btrfs_fix_super_size@@Base+0x8e>
   2e2d0:	movs	r4, #0
   2e2d2:	b.n	2e28e <btrfs_fix_super_size@@Base+0x8e>
   2e2d4:	str	r6, [r2, #60]	; 0x3c
   2e2d6:	movs	r1, r0
   2e2d8:	str	r7, [r7, #68]	; 0x44
   2e2da:	movs	r1, r0
   2e2dc:	str	r6, [r3, #60]	; 0x3c
   2e2de:	movs	r1, r0
   2e2e0:	str	r0, [r6, #68]	; 0x44
   2e2e2:	movs	r1, r0

0002e2e4 <btrfs_fix_device_and_super_size@@Base>:
   2e2e4:	push	{r3, r4, r5, r6, r7, lr}
   2e2e6:	mov	r5, r0
   2e2e8:	ldr.w	r3, [r0, #352]	; 0x160
   2e2ec:	add.w	r7, r3, #72	; 0x48
   2e2f0:	ldr	r2, [r3, #92]	; 0x5c
   2e2f2:	cbz	r2, 2e302 <btrfs_fix_device_and_super_size@@Base+0x1e>
   2e2f4:	ldr	r0, [pc, #132]	; (2e37c <btrfs_fix_device_and_super_size@@Base+0x98>)
   2e2f6:	add	r0, pc
   2e2f8:	bl	1a900 <__btrfs_error@@Base>
   2e2fc:	mvn.w	r0, #94	; 0x5e
   2e300:	pop	{r3, r4, r5, r6, r7, pc}
   2e302:	ldr	r4, [r3, #72]	; 0x48
   2e304:	cmp	r7, r4
   2e306:	bne.n	2e358 <btrfs_fix_device_and_super_size@@Base+0x74>
   2e308:	ldr	r0, [pc, #116]	; (2e380 <btrfs_fix_device_and_super_size@@Base+0x9c>)
   2e30a:	add	r0, pc
   2e30c:	bl	1a900 <__btrfs_error@@Base>
   2e310:	mvn.w	r0, #18
   2e314:	b.n	2e300 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2e316:	ldr	r2, [r3, #24]
   2e318:	adds	r2, #1
   2e31a:	bne.n	2e32e <btrfs_fix_device_and_super_size@@Base+0x4a>
   2e31c:	ldr	r0, [pc, #100]	; (2e384 <btrfs_fix_device_and_super_size@@Base+0xa0>)
   2e31e:	ldrd	r2, r3, [r3, #64]	; 0x40
   2e322:	add	r0, pc
   2e324:	bl	1a900 <__btrfs_error@@Base>
   2e328:	ldr	r0, [pc, #92]	; (2e388 <btrfs_fix_device_and_super_size@@Base+0xa4>)
   2e32a:	add	r0, pc
   2e32c:	b.n	2e30c <btrfs_fix_device_and_super_size@@Base+0x28>
   2e32e:	ldr	r2, [r3, #28]
   2e330:	cmp	r2, #0
   2e332:	beq.n	2e31c <btrfs_fix_device_and_super_size@@Base+0x38>
   2e334:	ldr	r3, [r3, #0]
   2e336:	cmp	r3, r7
   2e338:	bne.n	2e316 <btrfs_fix_device_and_super_size@@Base+0x32>
   2e33a:	movs	r6, #0
   2e33c:	cmp	r4, r7
   2e33e:	bne.n	2e35c <btrfs_fix_device_and_super_size@@Base+0x78>
   2e340:	mov	r0, r5
   2e342:	bl	2e200 <btrfs_fix_super_size@@Base>
   2e346:	cmp	r0, #0
   2e348:	bgt.n	2e34c <btrfs_fix_device_and_super_size@@Base+0x68>
   2e34a:	cbz	r6, 2e370 <btrfs_fix_device_and_super_size@@Base+0x8c>
   2e34c:	ldr	r0, [pc, #60]	; (2e38c <btrfs_fix_device_and_super_size@@Base+0xa8>)
   2e34e:	add	r0, pc
   2e350:	blx	8a78 <puts@plt+0x4>
   2e354:	movs	r0, #1
   2e356:	b.n	2e300 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2e358:	mov	r3, r4
   2e35a:	b.n	2e336 <btrfs_fix_device_and_super_size@@Base+0x52>
   2e35c:	mov	r1, r4
   2e35e:	mov	r0, r5
   2e360:	bl	2e084 <btrfs_fix_device_size@@Base>
   2e364:	cmp	r0, #0
   2e366:	blt.n	2e300 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2e368:	ldr	r4, [r4, #0]
   2e36a:	it	ne
   2e36c:	movne	r6, #1
   2e36e:	b.n	2e33c <btrfs_fix_device_and_super_size@@Base+0x58>
   2e370:	ldr	r0, [pc, #28]	; (2e390 <btrfs_fix_device_and_super_size@@Base+0xac>)
   2e372:	add	r0, pc
   2e374:	blx	8a78 <puts@plt+0x4>
   2e378:	mov	r0, r6
   2e37a:	b.n	2e300 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2e37c:	str	r4, [r6, #68]	; 0x44
   2e37e:	movs	r1, r0
   2e380:	str	r1, [r3, #72]	; 0x48
   2e382:	movs	r1, r0
   2e384:	str	r1, [r2, #72]	; 0x48
   2e386:	movs	r1, r0
   2e388:	str	r0, [r6, #72]	; 0x48
   2e38a:	movs	r1, r0
   2e38c:	str	r7, [r1, #76]	; 0x4c
   2e38e:	movs	r1, r0
   2e390:	str	r3, [r6, #76]	; 0x4c
   2e392:	movs	r1, r0
   2e394:	ldr.w	ip, [pc, #80]	; 2e3e8 <btrfs_fix_device_and_super_size@@Base+0x104>
   2e398:	ldr	r4, [pc, #80]	; (2e3ec <btrfs_fix_device_and_super_size@@Base+0x108>)
   2e39a:	add	ip, pc
   2e39c:	ldr	r3, [pc, #80]	; (2e3f0 <btrfs_fix_device_and_super_size@@Base+0x10c>)
   2e39e:	push	{lr}
   2e3a0:	sub	sp, #92	; 0x5c
   2e3a2:	ldr.w	r4, [ip, r4]
   2e3a6:	add	r3, pc
   2e3a8:	ldr	r4, [r4, #0]
   2e3aa:	str	r4, [sp, #84]	; 0x54
   2e3ac:	mov.w	r4, #0
   2e3b0:	ldr	r4, [pc, #64]	; (2e3f4 <btrfs_fix_device_and_super_size@@Base+0x110>)
   2e3b2:	ldr	r4, [r3, r4]
   2e3b4:	ldr	r3, [pc, #64]	; (2e3f8 <btrfs_fix_device_and_super_size@@Base+0x114>)
   2e3b6:	strd	r0, r2, [sp, #8]
   2e3ba:	add	r3, pc
   2e3bc:	ldr	r2, [pc, #60]	; (2e3fc <btrfs_fix_device_and_super_size@@Base+0x118>)
   2e3be:	strd	r1, r3, [sp]
   2e3c2:	movs	r1, #1
   2e3c4:	ldr	r3, [pc, #56]	; (2e400 <btrfs_fix_device_and_super_size@@Base+0x11c>)
   2e3c6:	add	r2, pc
   2e3c8:	ldr	r0, [r4, #0]
   2e3ca:	add	r4, sp, #20
   2e3cc:	add	r3, pc
   2e3ce:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2e3d2:	movs	r1, #16
   2e3d4:	mov	r0, r4
   2e3d6:	blx	8ae0 <backtrace@plt>
   2e3da:	movs	r2, #2
   2e3dc:	mov	r1, r0
   2e3de:	mov	r0, r4
   2e3e0:	blx	8e50 <backtrace_symbols_fd@plt>
   2e3e4:	blx	8e08 <abort@plt>
   2e3e8:	add	r1, sp, #600	; 0x258
   2e3ea:	movs	r3, r0
   2e3ec:	lsls	r4, r7, #9
   2e3ee:	movs	r0, r0
   2e3f0:	add	r1, sp, #552	; 0x228
   2e3f2:	movs	r3, r0
   2e3f4:	lsls	r4, r1, #10
   2e3f6:	movs	r0, r0
   2e3f8:	ldr	r0, [r3, #4]
   2e3fa:	movs	r1, r0
   2e3fc:			; <UNDEFINED> instruction: 0xebe10000
   2e400:	str	r0, [r2, #116]	; 0x74
   2e402:	movs	r1, r0

0002e404 <btrfs_start_transaction@@Base>:
   2e404:	push	{r3, r4, r5, r6, r7, lr}
   2e406:	mov	r5, r0
   2e408:	ldr.w	r6, [r0, #464]	; 0x1d0
   2e40c:	mov	r7, r1
   2e40e:	movs	r0, #1
   2e410:	movs	r1, #96	; 0x60
   2e412:	blx	8718 <calloc@plt+0x4>
   2e416:	ldr.w	r3, [r6, #368]	; 0x170
   2e41a:	mov	r4, r0
   2e41c:	cbnz	r3, 2e47c <btrfs_start_transaction@@Base+0x78>
   2e41e:	cbz	r0, 2e482 <btrfs_start_transaction@@Base+0x7e>
   2e420:	ldr	r3, [r5, #4]
   2e422:	cbz	r3, 2e43a <btrfs_start_transaction@@Base+0x36>
   2e424:	ldr	r0, [pc, #96]	; (2e488 <btrfs_start_transaction@@Base+0x84>)
   2e426:	add	r0, pc
   2e428:	bl	1a900 <__btrfs_error@@Base>
   2e42c:	mov	r0, r4
   2e42e:	blx	87cc <free@plt+0x4>
   2e432:	mvn.w	r4, #21
   2e436:	mov	r0, r4
   2e438:	pop	{r3, r4, r5, r6, r7, pc}
   2e43a:	ldr.w	r3, [r6, #304]	; 0x130
   2e43e:	cbz	r3, 2e446 <btrfs_start_transaction@@Base+0x42>
   2e440:	ldr	r0, [pc, #72]	; (2e48c <btrfs_start_transaction@@Base+0x88>)
   2e442:	add	r0, pc
   2e444:	b.n	2e428 <btrfs_start_transaction@@Base+0x24>
   2e446:	str	r6, [r0, #0]
   2e448:	ldrd	r3, r2, [r6, #232]	; 0xe8
   2e44c:	str.w	r0, [r6, #304]	; 0x130
   2e450:	adds	r3, #1
   2e452:	adc.w	r2, r2, #0
   2e456:	strd	r3, r2, [r6, #232]	; 0xe8
   2e45a:	strd	r3, r2, [r0, #8]
   2e45e:	ldrh	r1, [r0, #32]
   2e460:	strd	r3, r2, [r5, #480]	; 0x1e0
   2e464:	ldr	r3, [r5, #0]
   2e466:	bic.w	r1, r1, #510	; 0x1fe
   2e46a:	str	r7, [r0, #48]	; 0x30
   2e46c:	bic.w	r1, r1, #1
   2e470:	strh	r1, [r0, #32]
   2e472:	str	r3, [r5, #4]
   2e474:	ldr	r2, [r3, #80]	; 0x50
   2e476:	adds	r2, #1
   2e478:	str	r2, [r3, #80]	; 0x50
   2e47a:	b.n	2e436 <btrfs_start_transaction@@Base+0x32>
   2e47c:	mvn.w	r4, #29
   2e480:	b.n	2e436 <btrfs_start_transaction@@Base+0x32>
   2e482:	mvn.w	r4, #11
   2e486:	b.n	2e436 <btrfs_start_transaction@@Base+0x32>
   2e488:	str	r4, [r0, #112]	; 0x70
   2e48a:	movs	r1, r0
   2e48c:	str	r2, [r3, #112]	; 0x70
   2e48e:	movs	r1, r0

0002e490 <commit_tree_roots@@Base>:
   2e490:	ldr	r2, [pc, #264]	; (2e59c <commit_tree_roots@@Base+0x10c>)
   2e492:	ldr	r3, [pc, #268]	; (2e5a0 <commit_tree_roots@@Base+0x110>)
   2e494:	add	r2, pc
   2e496:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e49a:	sub	sp, #28
   2e49c:	ldr	r3, [r2, r3]
   2e49e:	mov	r6, r0
   2e4a0:	mov	r5, r1
   2e4a2:	ldr	r3, [r3, #0]
   2e4a4:	str	r3, [sp, #20]
   2e4a6:	mov.w	r3, #0
   2e4aa:	ldrb.w	r3, [r1, #364]	; 0x16c
   2e4ae:	ands.w	r3, r3, #2
   2e4b2:	beq.n	2e4cc <commit_tree_roots@@Base+0x3c>
   2e4b4:	mov.w	sl, #0
   2e4b8:	ldr	r2, [pc, #232]	; (2e5a4 <commit_tree_roots@@Base+0x114>)
   2e4ba:	ldr	r3, [pc, #228]	; (2e5a0 <commit_tree_roots@@Base+0x110>)
   2e4bc:	add	r2, pc
   2e4be:	ldr	r3, [r2, r3]
   2e4c0:	ldr	r2, [r3, #0]
   2e4c2:	ldr	r3, [sp, #20]
   2e4c4:	eors	r2, r3
   2e4c6:	beq.n	2e594 <commit_tree_roots@@Base+0x104>
   2e4c8:	blx	88e4 <__stack_chk_fail@plt>
   2e4cc:	ldr	r2, [r1, #28]
   2e4ce:	ldr	r2, [r2, #0]
   2e4d0:	ldr	r1, [r2, #80]	; 0x50
   2e4d2:	str	r2, [sp, #16]
   2e4d4:	adds	r1, #1
   2e4d6:	str	r1, [r2, #80]	; 0x50
   2e4d8:	add	r1, sp, #16
   2e4da:	strd	r3, r1, [sp]
   2e4de:	ldr	r1, [r5, #28]
   2e4e0:	bl	1bd08 <btrfs_cow_block@@Base>
   2e4e4:	mov	sl, r0
   2e4e6:	ldr	r0, [sp, #16]
   2e4e8:	bl	1a0a4 <free_extent_buffer@@Base>
   2e4ec:	cmp.w	sl, #0
   2e4f0:	bne.n	2e4b8 <commit_tree_roots@@Base+0x28>
   2e4f2:	mov.w	r1, #4294967295	; 0xffffffff
   2e4f6:	mov	r0, r6
   2e4f8:	bl	2636c <btrfs_run_delayed_refs@@Base>
   2e4fc:	cmp	r0, #0
   2e4fe:	bne.n	2e590 <commit_tree_roots@@Base+0x100>
   2e500:	add.w	fp, r5, #336	; 0x150
   2e504:	str	r0, [sp, #12]
   2e506:	ldr.w	r4, [r5, #336]	; 0x150
   2e50a:	cmp	r4, fp
   2e50c:	beq.n	2e4b4 <commit_tree_roots@@Base+0x24>
   2e50e:	ldrd	r2, r3, [r4]
   2e512:	sub.w	r7, r4, #520	; 0x208
   2e516:	sub.w	r8, r4, #512	; 0x200
   2e51a:	str	r3, [r2, #4]
   2e51c:	str	r2, [r3, #0]
   2e51e:	strd	r4, r4, [r4]
   2e522:	subs	r4, #73	; 0x49
   2e524:	ldr.w	r3, [r7, #464]	; 0x1d0
   2e528:	ldr.w	r9, [r3, #28]
   2e52c:	ldr.w	ip, [r7]
   2e530:	ldr.w	r1, [r8, #180]	; 0xb4
   2e534:	ldr.w	r0, [r8, #176]	; 0xb0
   2e538:	ldrd	r2, r3, [ip, #40]	; 0x28
   2e53c:	cmp	r1, r3
   2e53e:	it	eq
   2e540:	cmpeq	r0, r2
   2e542:	beq.n	2e57a <commit_tree_roots@@Base+0xea>
   2e544:	str.w	r2, [r8, #176]	; 0xb0
   2e548:	mov	r1, r9
   2e54a:	str.w	r3, [r8, #180]	; 0xb4
   2e54e:	mov	r0, r6
   2e550:	ldrd	r3, r2, [r6, #8]
   2e554:	str.w	r2, [r8, #164]	; 0xa4
   2e558:	mov	r2, r4
   2e55a:	str.w	r3, [r8, #160]	; 0xa0
   2e55e:	ldrb.w	r3, [ip, #196]	; 0xc4
   2e562:	strb.w	r3, [r7, #246]	; 0xf6
   2e566:	mov	r3, r8
   2e568:	bl	2af00 <btrfs_update_root@@Base>
   2e56c:	subs.w	sl, r0, #0
   2e570:	blt.n	2e57e <commit_tree_roots@@Base+0xee>
   2e572:	mov	r0, r6
   2e574:	bl	23dc4 <btrfs_write_dirty_block_groups@@Base>
   2e578:	b.n	2e52c <commit_tree_roots@@Base+0x9c>
   2e57a:	mov.w	sl, #0
   2e57e:	ldr	r0, [r7, #4]
   2e580:	bl	1a0a4 <free_extent_buffer@@Base>
   2e584:	ldr	r3, [sp, #12]
   2e586:	str	r3, [r7, #4]
   2e588:	cmp.w	sl, #0
   2e58c:	beq.n	2e506 <commit_tree_roots@@Base+0x76>
   2e58e:	b.n	2e4b8 <commit_tree_roots@@Base+0x28>
   2e590:	mov	sl, r0
   2e592:	b.n	2e4b8 <commit_tree_roots@@Base+0x28>
   2e594:	mov	r0, sl
   2e596:	add	sp, #28
   2e598:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e59c:	add	r0, sp, #624	; 0x270
   2e59e:	movs	r3, r0
   2e5a0:	lsls	r4, r7, #9
   2e5a2:	movs	r0, r0
   2e5a4:	add	r0, sp, #464	; 0x1d0
   2e5a6:	movs	r3, r0

0002e5a8 <__commit_transaction@@Base>:
   2e5a8:	ldr	r2, [pc, #196]	; (2e670 <__commit_transaction@@Base+0xc8>)
   2e5aa:	ldr	r3, [pc, #200]	; (2e674 <__commit_transaction@@Base+0xcc>)
   2e5ac:	add	r2, pc
   2e5ae:	stmdb	sp!, {r4, r5, r6, r7, r9, sl, fp, lr}
   2e5b2:	sub	sp, #40	; 0x28
   2e5b4:	ldr	r3, [r2, r3]
   2e5b6:	add.w	fp, sp, #24
   2e5ba:	ldr.w	r6, [r1, #464]	; 0x1d0
   2e5be:	add.w	sl, sp, #16
   2e5c2:	ldr	r3, [r3, #0]
   2e5c4:	str	r3, [sp, #36]	; 0x24
   2e5c6:	mov.w	r3, #0
   2e5ca:	mov	r5, r0
   2e5cc:	add.w	r9, r6, #64	; 0x40
   2e5d0:	movs	r7, #1
   2e5d2:	movs	r2, #0
   2e5d4:	movs	r3, #0
   2e5d6:	mov	r0, r9
   2e5d8:	strd	fp, r7, [sp, #4]
   2e5dc:	str.w	sl, [sp]
   2e5e0:	bl	19f9c <find_first_extent_bit@@Base>
   2e5e4:	cbz	r0, 2e622 <__commit_transaction@@Base+0x7a>
   2e5e6:	ldr	r2, [pc, #144]	; (2e678 <__commit_transaction@@Base+0xd0>)
   2e5e8:	ldr	r3, [pc, #136]	; (2e674 <__commit_transaction@@Base+0xcc>)
   2e5ea:	add	r2, pc
   2e5ec:	ldr	r3, [r2, r3]
   2e5ee:	ldr	r2, [r3, #0]
   2e5f0:	ldr	r3, [sp, #36]	; 0x24
   2e5f2:	eors	r2, r3
   2e5f4:	beq.n	2e666 <__commit_transaction@@Base+0xbe>
   2e5f6:	blx	88e4 <__stack_chk_fail@plt>
   2e5fa:	ldr	r0, [pc, #128]	; (2e67c <__commit_transaction@@Base+0xd4>)
   2e5fc:	movs	r2, #1
   2e5fe:	movs	r1, #145	; 0x91
   2e600:	add	r0, pc
   2e602:	bl	2e394 <btrfs_fix_device_and_super_size@@Base+0xb0>
   2e606:	ldrd	r2, r3, [sp, #16]
   2e60a:	mov	r0, r4
   2e60c:	ldr	r1, [r4, #76]	; 0x4c
   2e60e:	adds	r2, r2, r1
   2e610:	adc.w	r3, r3, #0
   2e614:	strd	r2, r3, [sp, #16]
   2e618:	bl	1a752 <clear_extent_buffer_dirty@@Base>
   2e61c:	mov	r0, r4
   2e61e:	bl	1a0a4 <free_extent_buffer@@Base>
   2e622:	ldrd	r2, r3, [sp, #16]
   2e626:	ldrd	r0, r1, [sp, #24]
   2e62a:	cmp	r1, r3
   2e62c:	it	eq
   2e62e:	cmpeq	r0, r2
   2e630:	bcc.n	2e5d2 <__commit_transaction@@Base+0x2a>
   2e632:	mov	r0, r9
   2e634:	bl	1a176 <find_first_extent_buffer@@Base>
   2e638:	mov	r4, r0
   2e63a:	cmp	r0, #0
   2e63c:	beq.n	2e5fa <__commit_transaction@@Base+0x52>
   2e63e:	ldrd	r0, r1, [r0, #40]	; 0x28
   2e642:	ldrd	r2, r3, [sp, #16]
   2e646:	cmp	r1, r3
   2e648:	it	eq
   2e64a:	cmpeq	r0, r2
   2e64c:	bne.n	2e5fa <__commit_transaction@@Base+0x52>
   2e64e:	mov	r2, r4
   2e650:	mov	r1, r6
   2e652:	mov	r0, r5
   2e654:	bl	20a64 <write_tree_block@@Base>
   2e658:	mov	r2, r0
   2e65a:	cmp	r0, #0
   2e65c:	beq.n	2e606 <__commit_transaction@@Base+0x5e>
   2e65e:	ldr	r0, [pc, #32]	; (2e680 <__commit_transaction@@Base+0xd8>)
   2e660:	movs	r1, #147	; 0x93
   2e662:	add	r0, pc
   2e664:	b.n	2e602 <__commit_transaction@@Base+0x5a>
   2e666:	movs	r0, #0
   2e668:	add	sp, #40	; 0x28
   2e66a:	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, fp, pc}
   2e66e:	nop
   2e670:	add	r7, pc, #528	; (adr r7, 2e884 <btrfs_abort_transaction@@Base+0x88>)
   2e672:	movs	r3, r0
   2e674:	lsls	r4, r7, #9
   2e676:	movs	r0, r0
   2e678:	add	r7, pc, #280	; (adr r7, 2e794 <btrfs_commit_transaction@@Base+0x110>)
   2e67a:	movs	r3, r0
   2e67c:	str	r2, [r2, #88]	; 0x58
   2e67e:	movs	r1, r0
   2e680:	lsls	r3, r3, #8
   2e682:	movs	r1, r0

0002e684 <btrfs_commit_transaction@@Base>:
   2e684:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e688:	mov	r6, r0
   2e68a:	ldr	r3, [r0, #0]
   2e68c:	sub	sp, #20
   2e68e:	ldrd	r8, r9, [r0, #8]
   2e692:	mov	r5, r1
   2e694:	ldr.w	r7, [r1, #464]	; 0x1d0
   2e698:	ldr.w	sl, [r3, #368]	; 0x170
   2e69c:	cmp.w	sl, #0
   2e6a0:	bne.w	2e7ee <btrfs_commit_transaction@@Base+0x16a>
   2e6a4:	mov.w	r1, #4294967295	; 0xffffffff
   2e6a8:	bl	2636c <btrfs_run_delayed_refs@@Base>
   2e6ac:	subs	r4, r0, #0
   2e6ae:	blt.n	2e75e <btrfs_commit_transaction@@Base+0xda>
   2e6b0:	ldrd	r3, r0, [r5]
   2e6b4:	cmp	r0, r3
   2e6b6:	bne.n	2e70c <btrfs_commit_transaction@@Base+0x88>
   2e6b8:	mov	r1, r7
   2e6ba:	mov	r0, r6
   2e6bc:	bl	2e490 <commit_tree_roots@@Base>
   2e6c0:	subs	r4, r0, #0
   2e6c2:	blt.n	2e75e <btrfs_commit_transaction@@Base+0xda>
   2e6c4:	add.w	sl, r7, #128	; 0x80
   2e6c8:	mov.w	fp, #1
   2e6cc:	ldr	r3, [r6, #64]	; 0x40
   2e6ce:	cmp	r3, #0
   2e6d0:	bne.n	2e76c <btrfs_commit_transaction@@Base+0xe8>
   2e6d2:	mov.w	r2, #4294967295	; 0xffffffff
   2e6d6:	strd	fp, r3, [sp, #8]
   2e6da:	mov	r0, sl
   2e6dc:	mov.w	r3, #4294967295	; 0xffffffff
   2e6e0:	strd	r2, r3, [sp]
   2e6e4:	movs	r2, #0
   2e6e6:	movs	r3, #0
   2e6e8:	bl	19fde <test_range_bit@@Base>
   2e6ec:	cmp	r0, #0
   2e6ee:	bne.n	2e76c <btrfs_commit_transaction@@Base+0xe8>
   2e6f0:	mov	r1, r5
   2e6f2:	mov	r0, r6
   2e6f4:	bl	2e5a8 <__commit_transaction@@Base>
   2e6f8:	ldr.w	sl, [r6, #64]	; 0x40
   2e6fc:	cmp.w	sl, #0
   2e700:	beq.n	2e786 <btrfs_commit_transaction@@Base+0x102>
   2e702:	ldr	r0, [pc, #240]	; (2e7f4 <btrfs_commit_transaction@@Base+0x170>)
   2e704:	add	r0, pc
   2e706:	bl	1a900 <__btrfs_error@@Base>
   2e70a:	b.n	2e75e <btrfs_commit_transaction@@Base+0xda>
   2e70c:	ldr.w	r3, [r5, #464]	; 0x1d0
   2e710:	ldr	r2, [r3, #28]
   2e712:	cmp	r2, r5
   2e714:	beq.n	2e6b8 <btrfs_commit_transaction@@Base+0x34>
   2e716:	ldr	r3, [r3, #32]
   2e718:	cmp	r3, r5
   2e71a:	beq.n	2e6b8 <btrfs_commit_transaction@@Base+0x34>
   2e71c:	bl	1a0a4 <free_extent_buffer@@Base>
   2e720:	ldr	r3, [r5, #0]
   2e722:	str.w	sl, [r5, #4]
   2e726:	mov	r0, r6
   2e728:	ldrd	r1, r2, [r3, #40]	; 0x28
   2e72c:	str.w	r1, [r5, #184]	; 0xb8
   2e730:	str.w	r2, [r5, #188]	; 0xbc
   2e734:	ldrd	r1, r2, [r6, #8]
   2e738:	str.w	r1, [r5, #168]	; 0xa8
   2e73c:	str.w	r2, [r5, #172]	; 0xac
   2e740:	addw	r2, r5, #447	; 0x1bf
   2e744:	ldrb.w	r3, [r3, #196]	; 0xc4
   2e748:	ldr.w	r1, [r5, #464]	; 0x1d0
   2e74c:	strb.w	r3, [r5, #246]	; 0xf6
   2e750:	add.w	r3, r5, #8
   2e754:	ldr	r1, [r1, #28]
   2e756:	bl	2af00 <btrfs_update_root@@Base>
   2e75a:	subs	r4, r0, #0
   2e75c:	bge.n	2e6b8 <btrfs_commit_transaction@@Base+0x34>
   2e75e:	mov	r0, r6
   2e760:	bl	2776c <btrfs_destroy_delayed_refs@@Base>
   2e764:	mov	r0, r6
   2e766:	blx	87cc <free@plt+0x4>
   2e76a:	b.n	2e7c0 <btrfs_commit_transaction@@Base+0x13c>
   2e76c:	mov	r0, r6
   2e76e:	bl	23dc4 <btrfs_write_dirty_block_groups@@Base>
   2e772:	subs	r4, r0, #0
   2e774:	blt.n	2e75e <btrfs_commit_transaction@@Base+0xda>
   2e776:	mov.w	r1, #4294967295	; 0xffffffff
   2e77a:	mov	r0, r6
   2e77c:	bl	2636c <btrfs_run_delayed_refs@@Base>
   2e780:	subs	r4, r0, #0
   2e782:	bge.n	2e6cc <btrfs_commit_transaction@@Base+0x48>
   2e784:	b.n	2e75e <btrfs_commit_transaction@@Base+0xda>
   2e786:	mov	r0, r6
   2e788:	add.w	r7, r7, #356	; 0x164
   2e78c:	bl	20774 <write_ctree_super@@Base>
   2e790:	mov	r4, r0
   2e792:	mov	r0, r6
   2e794:	bl	24010 <btrfs_finish_extent_commit@@Base>
   2e798:	mov	r0, r6
   2e79a:	blx	87cc <free@plt+0x4>
   2e79e:	ldr	r0, [r5, #4]
   2e7a0:	bl	1a0a4 <free_extent_buffer@@Base>
   2e7a4:	str.w	sl, [r5, #4]
   2e7a8:	ldr	r5, [r7, #0]
   2e7aa:	ldr	r6, [pc, #76]	; (2e7f8 <btrfs_commit_transaction@@Base+0x174>)
   2e7ac:	subs	r5, #44	; 0x2c
   2e7ae:	str.w	sl, [r7, #-52]
   2e7b2:	add	r6, pc
   2e7b4:	strd	r8, r9, [r7, #-116]	; 0x74
   2e7b8:	add.w	r3, r5, #44	; 0x2c
   2e7bc:	cmp	r3, r7
   2e7be:	bne.n	2e7c8 <btrfs_commit_transaction@@Base+0x144>
   2e7c0:	mov	r0, r4
   2e7c2:	add	sp, #20
   2e7c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e7c8:	ldrd	r2, r3, [r5, #32]
   2e7cc:	orrs.w	r1, r2, r3
   2e7d0:	beq.n	2e7e8 <btrfs_commit_transaction@@Base+0x164>
   2e7d2:	strd	r2, r3, [sp, #8]
   2e7d6:	mov	r0, r6
   2e7d8:	ldrd	r2, r3, [r5]
   2e7dc:	strd	r2, r3, [sp]
   2e7e0:	mov	r2, r8
   2e7e2:	mov	r3, r9
   2e7e4:	bl	1a884 <__btrfs_warning@@Base>
   2e7e8:	ldr	r5, [r5, #44]	; 0x2c
   2e7ea:	subs	r5, #44	; 0x2c
   2e7ec:	b.n	2e7b8 <btrfs_commit_transaction@@Base+0x134>
   2e7ee:	mvn.w	r4, #29
   2e7f2:	b.n	2e7c0 <btrfs_commit_transaction@@Base+0x13c>
   2e7f4:	str	r0, [r5, #72]	; 0x48
   2e7f6:	movs	r1, r0
   2e7f8:	str	r4, [r3, #64]	; 0x40
   2e7fa:	movs	r1, r0

0002e7fc <btrfs_abort_transaction@@Base>:
   2e7fc:	ldr	r3, [r0, #0]
   2e7fe:	str.w	r1, [r3, #368]	; 0x170
   2e802:	bx	lr
   2e804:	push	{r4, lr}
   2e806:	mov	r4, r1
   2e808:	ldr	r1, [pc, #84]	; (2e860 <btrfs_abort_transaction@@Base+0x64>)
   2e80a:	sub	sp, #24
   2e80c:	ldr	r3, [pc, #84]	; (2e864 <btrfs_abort_transaction@@Base+0x68>)
   2e80e:	add	r1, pc
   2e810:	ldr	r3, [r1, r3]
   2e812:	mov	r1, sp
   2e814:	ldr	r3, [r3, #0]
   2e816:	str	r3, [sp, #20]
   2e818:	mov.w	r3, #0
   2e81c:	movs	r3, #25
   2e81e:	muls	r2, r3
   2e820:	movs	r3, #17
   2e822:	adds	r2, #101	; 0x65
   2e824:	bl	1a79e <read_extent_buffer@@Base>
   2e828:	ldr.w	r3, [sp, #13]
   2e82c:	ldr.w	r2, [sp, #9]
   2e830:	str.w	r3, [r4, #13]
   2e834:	ldrb.w	r3, [sp, #8]
   2e838:	str.w	r2, [r4, #9]
   2e83c:	ldr	r2, [pc, #40]	; (2e868 <btrfs_abort_transaction@@Base+0x6c>)
   2e83e:	strb	r3, [r4, #8]
   2e840:	ldr	r3, [sp, #0]
   2e842:	add	r2, pc
   2e844:	str	r3, [r4, #0]
   2e846:	ldr	r3, [sp, #4]
   2e848:	str	r3, [r4, #4]
   2e84a:	ldr	r3, [pc, #24]	; (2e864 <btrfs_abort_transaction@@Base+0x68>)
   2e84c:	ldr	r3, [r2, r3]
   2e84e:	ldr	r2, [r3, #0]
   2e850:	ldr	r3, [sp, #20]
   2e852:	eors	r2, r3
   2e854:	beq.n	2e85a <btrfs_abort_transaction@@Base+0x5e>
   2e856:	blx	88e4 <__stack_chk_fail@plt>
   2e85a:	add	sp, #24
   2e85c:	pop	{r4, pc}
   2e85e:	nop
   2e860:	add	r5, pc, #136	; (adr r5, 2e8ec <btrfs_abort_transaction@@Base+0xf0>)
   2e862:	movs	r3, r0
   2e864:	lsls	r4, r7, #9
   2e866:	movs	r0, r0
   2e868:	add	r4, pc, #952	; (adr r4, 2ec24 <btrfs_abort_transaction@@Base+0x428>)
   2e86a:	movs	r3, r0
   2e86c:	push	{r4, r5, r6, r7, lr}
   2e86e:	sub	sp, #36	; 0x24
   2e870:	ldr	r6, [pc, #112]	; (2e8e4 <btrfs_abort_transaction@@Base+0xe8>)
   2e872:	mov	r4, r3
   2e874:	ldr	r5, [pc, #112]	; (2e8e8 <btrfs_abort_transaction@@Base+0xec>)
   2e876:	add	r6, pc
   2e878:	ldr	r5, [r6, r5]
   2e87a:	ldrd	r6, r7, [r2, #40]	; 0x28
   2e87e:	ldr	r5, [r5, #0]
   2e880:	str	r5, [sp, #28]
   2e882:	mov.w	r5, #0
   2e886:	movs	r5, #198	; 0xc6
   2e888:	strb.w	r5, [sp, #16]
   2e88c:	strd	r6, r7, [sp, #8]
   2e890:	ldr.w	r5, [r2, #49]	; 0x31
   2e894:	ldr.w	r2, [r2, #53]	; 0x35
   2e898:	str.w	r5, [sp, #17]
   2e89c:	str.w	r2, [sp, #21]
   2e8a0:	ldr	r2, [sp, #56]	; 0x38
   2e8a2:	str	r2, [sp, #4]
   2e8a4:	movs	r2, #0
   2e8a6:	str	r2, [sp, #0]
   2e8a8:	add	r2, sp, #8
   2e8aa:	bl	1d6c0 <btrfs_search_slot@@Base>
   2e8ae:	cmp	r0, #0
   2e8b0:	blt.n	2e8ca <btrfs_abort_transaction@@Base+0xce>
   2e8b2:	ittte	eq
   2e8b4:	ldreq	r3, [r4, #32]
   2e8b6:	moveq	r1, #25
   2e8b8:	ldreq	r2, [r4, #0]
   2e8ba:	mvnne.w	r0, #1
   2e8be:	ittt	eq
   2e8c0:	mlaeq	r3, r1, r3, r2
   2e8c4:	ldreq.w	r0, [r3, #214]	; 0xd6
   2e8c8:	addeq	r0, #101	; 0x65
   2e8ca:	ldr	r2, [pc, #32]	; (2e8ec <btrfs_abort_transaction@@Base+0xf0>)
   2e8cc:	ldr	r3, [pc, #24]	; (2e8e8 <btrfs_abort_transaction@@Base+0xec>)
   2e8ce:	add	r2, pc
   2e8d0:	ldr	r3, [r2, r3]
   2e8d2:	ldr	r2, [r3, #0]
   2e8d4:	ldr	r3, [sp, #28]
   2e8d6:	eors	r2, r3
   2e8d8:	beq.n	2e8de <btrfs_abort_transaction@@Base+0xe2>
   2e8da:	blx	88e4 <__stack_chk_fail@plt>
   2e8de:	add	sp, #36	; 0x24
   2e8e0:	pop	{r4, r5, r6, r7, pc}
   2e8e2:	nop
   2e8e4:	add	r4, pc, #744	; (adr r4, 2ebd0 <btrfs_abort_transaction@@Base+0x3d4>)
   2e8e6:	movs	r3, r0
   2e8e8:	lsls	r4, r7, #9
   2e8ea:	movs	r0, r0
   2e8ec:	add	r4, pc, #392	; (adr r4, 2ea78 <btrfs_abort_transaction@@Base+0x27c>)
   2e8ee:	movs	r3, r0
   2e8f0:	push	{r4}
   2e8f2:	ldr	r4, [r1, #0]
   2e8f4:	ldr	r2, [r1, #32]
   2e8f6:	adds	r2, #1
   2e8f8:	str	r2, [r1, #32]
   2e8fa:	ldr.w	r4, [r4, #192]	; 0xc0
   2e8fe:	cmp	r2, r4
   2e900:	bcc.n	2e914 <btrfs_abort_transaction@@Base+0x118>
   2e902:	movs	r2, #0
   2e904:	ldr.w	r4, [sp], #4
   2e908:	strb.w	r2, [r1, #65]	; 0x41
   2e90c:	ldr.w	r0, [r0, #464]	; 0x1d0
   2e910:	b.w	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   2e914:	movs	r0, #0
   2e916:	ldr.w	r4, [sp], #4
   2e91a:	bx	lr
   2e91c:	push	{r4, r5, r6, lr}
   2e91e:	lsrs	r4, r2, #5
   2e920:	and.w	r6, r2, #31
   2e924:	bic.w	r2, r2, #31
   2e928:	ldr.w	r5, [r0, r4, lsl #2]
   2e92c:	mov.w	r4, #4294967295	; 0xffffffff
   2e930:	lsls	r4, r6
   2e932:	eors	r5, r3
   2e934:	ands	r4, r5
   2e936:	cbz	r4, 2e96c <btrfs_abort_transaction@@Base+0x170>
   2e938:	uxth	r3, r4
   2e93a:	cbnz	r3, 2e97c <btrfs_abort_transaction@@Base+0x180>
   2e93c:	lsrs	r4, r4, #16
   2e93e:	movs	r3, #16
   2e940:	tst.w	r4, #255	; 0xff
   2e944:	itt	eq
   2e946:	lsreq	r4, r4, #8
   2e948:	addeq	r3, #8
   2e94a:	lsls	r6, r4, #28
   2e94c:	itt	eq
   2e94e:	lsreq	r4, r4, #4
   2e950:	addeq	r3, #4
   2e952:	lsls	r5, r4, #30
   2e954:	itt	eq
   2e956:	lsreq	r4, r4, #2
   2e958:	addeq	r3, #2
   2e95a:	lsls	r0, r4, #31
   2e95c:	it	pl
   2e95e:	addpl	r3, #1
   2e960:	add	r3, r2
   2e962:	cmp	r1, r3
   2e964:	it	cs
   2e966:	movcs	r1, r3
   2e968:	mov	r0, r1
   2e96a:	pop	{r4, r5, r6, pc}
   2e96c:	adds	r2, #32
   2e96e:	cmp	r2, r1
   2e970:	bcs.n	2e968 <btrfs_abort_transaction@@Base+0x16c>
   2e972:	lsrs	r4, r2, #5
   2e974:	ldr.w	r4, [r0, r4, lsl #2]
   2e978:	eors	r4, r3
   2e97a:	b.n	2e936 <btrfs_abort_transaction@@Base+0x13a>
   2e97c:	movs	r3, #0
   2e97e:	b.n	2e940 <btrfs_abort_transaction@@Base+0x144>
   2e980:	ldr.w	ip, [pc, #80]	; 2e9d4 <btrfs_abort_transaction@@Base+0x1d8>
   2e984:	ldr	r4, [pc, #80]	; (2e9d8 <btrfs_abort_transaction@@Base+0x1dc>)
   2e986:	add	ip, pc
   2e988:	ldr	r3, [pc, #80]	; (2e9dc <btrfs_abort_transaction@@Base+0x1e0>)
   2e98a:	push	{lr}
   2e98c:	sub	sp, #92	; 0x5c
   2e98e:	ldr.w	r4, [ip, r4]
   2e992:	add	r3, pc
   2e994:	ldr	r4, [r4, #0]
   2e996:	str	r4, [sp, #84]	; 0x54
   2e998:	mov.w	r4, #0
   2e99c:	ldr	r4, [pc, #64]	; (2e9e0 <btrfs_abort_transaction@@Base+0x1e4>)
   2e99e:	ldr	r4, [r3, r4]
   2e9a0:	movs	r3, #0
   2e9a2:	strd	r2, r1, [sp]
   2e9a6:	movs	r1, #1
   2e9a8:	strd	r0, r3, [sp, #8]
   2e9ac:	ldr	r2, [pc, #52]	; (2e9e4 <btrfs_abort_transaction@@Base+0x1e8>)
   2e9ae:	ldr	r3, [pc, #56]	; (2e9e8 <btrfs_abort_transaction@@Base+0x1ec>)
   2e9b0:	ldr	r0, [r4, #0]
   2e9b2:	add	r4, sp, #20
   2e9b4:	add	r3, pc
   2e9b6:	add	r2, pc
   2e9b8:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2e9bc:	movs	r1, #16
   2e9be:	mov	r0, r4
   2e9c0:	blx	8ae0 <backtrace@plt>
   2e9c4:	movs	r2, #2
   2e9c6:	mov	r1, r0
   2e9c8:	mov	r0, r4
   2e9ca:	blx	8e50 <backtrace_symbols_fd@plt>
   2e9ce:	blx	8e08 <abort@plt>
   2e9d2:	nop
   2e9d4:	add	r3, pc, #680	; (adr r3, 2ec80 <btrfs_abort_transaction@@Base+0x484>)
   2e9d6:	movs	r3, r0
   2e9d8:	lsls	r4, r7, #9
   2e9da:	movs	r0, r0
   2e9dc:	add	r3, pc, #632	; (adr r3, 2ec58 <btrfs_abort_transaction@@Base+0x45c>)
   2e9de:	movs	r3, r0
   2e9e0:	lsls	r4, r1, #10
   2e9e2:	movs	r0, r0
   2e9e4:	ldrsh.w	r0, [r6]
   2e9e8:	str	r3, [r6, #36]	; 0x24
   2e9ea:	movs	r1, r0
   2e9ec:	push	{r3, lr}
   2e9ee:	cbnz	r3, 2e9f4 <btrfs_abort_transaction@@Base+0x1f8>
   2e9f0:	bl	2e980 <btrfs_abort_transaction@@Base+0x184>
   2e9f4:	pop	{r3, pc}
   2e9f6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e9fa:	mov	r6, r2
   2e9fc:	ldr	r2, [pc, #192]	; (2eac0 <btrfs_abort_transaction@@Base+0x2c4>)
   2e9fe:	mov	r7, r3
   2ea00:	ldr	r3, [pc, #192]	; (2eac4 <btrfs_abort_transaction@@Base+0x2c8>)
   2ea02:	sub	sp, #28
   2ea04:	add	r2, pc
   2ea06:	ldr.w	fp, [r0]
   2ea0a:	mov	r1, sp
   2ea0c:	mov	sl, r0
   2ea0e:	ldr	r3, [r2, r3]
   2ea10:	ldr	r2, [r0, #32]
   2ea12:	mov	r0, fp
   2ea14:	ldr	r3, [r3, #0]
   2ea16:	str	r3, [sp, #20]
   2ea18:	mov.w	r3, #0
   2ea1c:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2ea20:	ldrb.w	r3, [sp, #8]
   2ea24:	ldr	r1, [pc, #160]	; (2eac8 <btrfs_abort_transaction@@Base+0x2cc>)
   2ea26:	sub.w	r2, r3, #200	; 0xc8
   2ea2a:	ldr	r0, [pc, #160]	; (2eacc <btrfs_abort_transaction@@Base+0x2d0>)
   2ea2c:	negs	r3, r2
   2ea2e:	add	r1, pc
   2ea30:	adcs	r3, r2
   2ea32:	add	r0, pc
   2ea34:	movs	r2, #62	; 0x3e
   2ea36:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2ea3a:	ldrd	r4, r5, [sp]
   2ea3e:	ldr.w	r3, [sp, #9]
   2ea42:	cmp	r7, r5
   2ea44:	ldr.w	r2, [sp, #13]
   2ea48:	it	eq
   2ea4a:	cmpeq	r6, r4
   2ea4c:	bcc.n	2eab6 <btrfs_abort_transaction@@Base+0x2ba>
   2ea4e:	adds.w	r8, r4, r3
   2ea52:	adc.w	r9, r5, r2
   2ea56:	cmp	r7, r9
   2ea58:	it	eq
   2ea5a:	cmpeq	r6, r8
   2ea5c:	ite	cc
   2ea5e:	movcc	r3, #1
   2ea60:	movcs	r3, #0
   2ea62:	ldr	r1, [pc, #108]	; (2ead0 <btrfs_abort_transaction@@Base+0x2d4>)
   2ea64:	movs	r2, #66	; 0x42
   2ea66:	ldr	r0, [pc, #108]	; (2ead4 <btrfs_abort_transaction@@Base+0x2d8>)
   2ea68:	add	r1, pc
   2ea6a:	add	r0, pc
   2ea6c:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2ea70:	ldr.w	r3, [fp, #92]	; 0x5c
   2ea74:	subs	r0, r6, r4
   2ea76:	sbc.w	r1, r7, r5
   2ea7a:	ldr.w	r2, [r3, #388]	; 0x184
   2ea7e:	movs	r3, #0
   2ea80:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2ea84:	ldr.w	r3, [sl, #32]
   2ea88:	movs	r1, #25
   2ea8a:	mla	r3, r1, r3, fp
   2ea8e:	ldr.w	r1, [r3, #214]	; 0xd6
   2ea92:	adds	r1, #101	; 0x65
   2ea94:	mov	r2, r0
   2ea96:	mov	r0, fp
   2ea98:	bl	1a838 <extent_buffer_test_bit@@Base>
   2ea9c:	ldr	r2, [pc, #56]	; (2ead8 <btrfs_abort_transaction@@Base+0x2dc>)
   2ea9e:	ldr	r3, [pc, #36]	; (2eac4 <btrfs_abort_transaction@@Base+0x2c8>)
   2eaa0:	add	r2, pc
   2eaa2:	ldr	r3, [r2, r3]
   2eaa4:	subs	r0, #0
   2eaa6:	it	ne
   2eaa8:	movne	r0, #1
   2eaaa:	ldr	r2, [r3, #0]
   2eaac:	ldr	r3, [sp, #20]
   2eaae:	eors	r2, r3
   2eab0:	beq.n	2eaba <btrfs_abort_transaction@@Base+0x2be>
   2eab2:	blx	88e4 <__stack_chk_fail@plt>
   2eab6:	movs	r3, #0
   2eab8:	b.n	2ea62 <btrfs_abort_transaction@@Base+0x266>
   2eaba:	add	sp, #28
   2eabc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eac0:	add	r3, pc, #176	; (adr r3, 2eb74 <btrfs_abort_transaction@@Base+0x378>)
   2eac2:	movs	r3, r0
   2eac4:	lsls	r4, r7, #9
   2eac6:	movs	r0, r0
   2eac8:	str	r5, [r2, #108]	; 0x6c
   2eaca:	movs	r1, r0
   2eacc:	str	r7, [r0, #32]
   2eace:	movs	r1, r0
   2ead0:	str	r3, [r3, #104]	; 0x68
   2ead2:	movs	r1, r0
   2ead4:	str	r7, [r6, #28]
   2ead6:	movs	r1, r0
   2ead8:	add	r2, pc, #576	; (adr r2, 2ed1c <btrfs_abort_transaction@@Base+0x520>)
   2eada:	movs	r3, r0
   2eadc:	push	{r0, r1, r2, r4, r5, lr}
   2eade:	movs	r5, #1
   2eae0:	str	r5, [sp, #4]
   2eae2:	mov	r4, r3
   2eae4:	ldr	r5, [sp, #24]
   2eae6:	str	r5, [sp, #0]
   2eae8:	bl	1d6c0 <btrfs_search_slot@@Base>
   2eaec:	cmp	r0, #0
   2eaee:	blt.n	2eb1a <btrfs_abort_transaction@@Base+0x31e>
   2eaf0:	bne.n	2eb02 <btrfs_abort_transaction@@Base+0x306>
   2eaf2:	ldr	r1, [pc, #44]	; (2eb20 <btrfs_abort_transaction@@Base+0x324>)
   2eaf4:	movs	r2, #89	; 0x59
   2eaf6:	ldr	r0, [pc, #44]	; (2eb24 <btrfs_abort_transaction@@Base+0x328>)
   2eaf8:	add	r1, pc
   2eafa:	adds	r1, #20
   2eafc:	add	r0, pc
   2eafe:	bl	2e980 <btrfs_abort_transaction@@Base+0x184>
   2eb02:	ldr	r3, [r4, #32]
   2eb04:	cbnz	r3, 2eb14 <btrfs_abort_transaction@@Base+0x318>
   2eb06:	ldr	r1, [pc, #32]	; (2eb28 <btrfs_abort_transaction@@Base+0x32c>)
   2eb08:	movs	r2, #94	; 0x5e
   2eb0a:	ldr	r0, [pc, #32]	; (2eb2c <btrfs_abort_transaction@@Base+0x330>)
   2eb0c:	add	r1, pc
   2eb0e:	adds	r1, #20
   2eb10:	add	r0, pc
   2eb12:	b.n	2eafe <btrfs_abort_transaction@@Base+0x302>
   2eb14:	movs	r0, #0
   2eb16:	subs	r3, #1
   2eb18:	str	r3, [r4, #32]
   2eb1a:	add	sp, #12
   2eb1c:	pop	{r4, r5, pc}
   2eb1e:	nop
   2eb20:	str	r3, [r1, #96]	; 0x60
   2eb22:	movs	r1, r0
   2eb24:	movs	r1, #170	; 0xaa
   2eb26:	movs	r1, r0
   2eb28:	str	r7, [r6, #92]	; 0x5c
   2eb2a:	movs	r1, r0
   2eb2c:	movs	r1, #150	; 0x96
   2eb2e:	movs	r1, r0
   2eb30:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2eb34:	mov	r6, r2
   2eb36:	ldr	r2, [pc, #156]	; (2ebd4 <btrfs_abort_transaction@@Base+0x3d8>)
   2eb38:	sub	sp, #36	; 0x24
   2eb3a:	ldr	r3, [pc, #156]	; (2ebd8 <btrfs_abort_transaction@@Base+0x3dc>)
   2eb3c:	mov	r8, r0
   2eb3e:	add	r2, pc
   2eb40:	ldr	r0, [r6, #0]
   2eb42:	mov	r9, r1
   2eb44:	ldr	r3, [r2, r3]
   2eb46:	ldr	r2, [r6, #32]
   2eb48:	ldr	r3, [r3, #0]
   2eb4a:	str	r3, [sp, #28]
   2eb4c:	mov.w	r3, #0
   2eb50:	adds	r3, r2, #1
   2eb52:	ldr.w	r1, [r0, #192]	; 0xc0
   2eb56:	cmp	r3, r1
   2eb58:	bcs.n	2eb72 <btrfs_abort_transaction@@Base+0x376>
   2eb5a:	movs	r0, #0
   2eb5c:	str	r3, [r6, #32]
   2eb5e:	ldr	r2, [pc, #124]	; (2ebdc <btrfs_abort_transaction@@Base+0x3e0>)
   2eb60:	ldr	r3, [pc, #116]	; (2ebd8 <btrfs_abort_transaction@@Base+0x3dc>)
   2eb62:	add	r2, pc
   2eb64:	ldr	r3, [r2, r3]
   2eb66:	ldr	r2, [r3, #0]
   2eb68:	ldr	r3, [sp, #28]
   2eb6a:	eors	r2, r3
   2eb6c:	beq.n	2ebce <btrfs_abort_transaction@@Base+0x3d2>
   2eb6e:	blx	88e4 <__stack_chk_fail@plt>
   2eb72:	add	r7, sp, #8
   2eb74:	movs	r5, #255	; 0xff
   2eb76:	mov	r1, r7
   2eb78:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2eb7c:	mov	r0, r6
   2eb7e:	bl	1b2dc <btrfs_release_path@@Base>
   2eb82:	ldr.w	r1, [sp, #17]
   2eb86:	ldr	r3, [sp, #8]
   2eb88:	ldr.w	r0, [sp, #21]
   2eb8c:	ldr	r2, [sp, #12]
   2eb8e:	adds	r3, r3, r1
   2eb90:	mov	r1, r9
   2eb92:	strb.w	r5, [sp, #16]
   2eb96:	adc.w	r2, r0, r2
   2eb9a:	mov	r0, r8
   2eb9c:	strd	r3, r2, [sp, #8]
   2eba0:	movs	r3, #0
   2eba2:	mov	r2, r7
   2eba4:	str	r3, [sp, #0]
   2eba6:	mov	r3, r6
   2eba8:	strb.w	r5, [sp, #17]
   2ebac:	strb.w	r5, [sp, #18]
   2ebb0:	strb.w	r5, [sp, #19]
   2ebb4:	strb.w	r5, [sp, #20]
   2ebb8:	strb.w	r5, [sp, #21]
   2ebbc:	strb.w	r5, [sp, #22]
   2ebc0:	strb.w	r5, [sp, #23]
   2ebc4:	strb.w	r5, [sp, #24]
   2ebc8:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   2ebcc:	b.n	2eb5e <btrfs_abort_transaction@@Base+0x362>
   2ebce:	add	sp, #36	; 0x24
   2ebd0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2ebd4:	add	r1, pc, #968	; (adr r1, 2efa0 <btrfs_abort_transaction@@Base+0x7a4>)
   2ebd6:	movs	r3, r0
   2ebd8:	lsls	r4, r7, #9
   2ebda:	movs	r0, r0
   2ebdc:	add	r1, pc, #824	; (adr r1, 2ef18 <btrfs_abort_transaction@@Base+0x71c>)
   2ebde:	movs	r3, r0
   2ebe0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ebe4:	mov	r7, r3
   2ebe6:	vpush	{d8-d9}
   2ebea:	mov	r4, r2
   2ebec:	ldr.w	r3, [pc, #2080]	; 2f410 <btrfs_abort_transaction@@Base+0xc14>
   2ebf0:	mov	fp, r1
   2ebf2:	ldr.w	r2, [pc, #2080]	; 2f414 <btrfs_abort_transaction@@Base+0xc18>
   2ebf6:	mov.w	r8, #1
   2ebfa:	add	r3, pc
   2ebfc:	mov	r5, r0
   2ebfe:	sub	sp, #124	; 0x7c
   2ec00:	add	r2, pc
   2ec02:	ldr	r1, [r0, #0]
   2ec04:	str	r3, [sp, #64]	; 0x40
   2ec06:	ldr.w	r3, [pc, #2064]	; 2f418 <btrfs_abort_transaction@@Base+0xc1c>
   2ec0a:	ldr	r3, [r2, r3]
   2ec0c:	mov	r2, fp
   2ec0e:	ldr	r3, [r3, #0]
   2ec10:	str	r3, [sp, #116]	; 0x74
   2ec12:	mov.w	r3, #0
   2ec16:	str.w	r8, [sp]
   2ec1a:	mov	r3, r4
   2ec1c:	ldr	r1, [r1, #48]	; 0x30
   2ec1e:	bl	2e86c <btrfs_abort_transaction@@Base+0x70>
   2ec22:	cmn.w	r0, #4096	; 0x1000
   2ec26:	bls.n	2ec44 <btrfs_abort_transaction@@Base+0x448>
   2ec28:	mov	r6, r0
   2ec2a:	ldr.w	r2, [pc, #2032]	; 2f41c <btrfs_abort_transaction@@Base+0xc20>
   2ec2e:	ldr.w	r3, [pc, #2024]	; 2f418 <btrfs_abort_transaction@@Base+0xc1c>
   2ec32:	add	r2, pc
   2ec34:	ldr	r3, [r2, r3]
   2ec36:	ldr	r2, [r3, #0]
   2ec38:	ldr	r3, [sp, #116]	; 0x74
   2ec3a:	eors	r2, r3
   2ec3c:	beq.w	2f404 <btrfs_abort_transaction@@Base+0xc08>
   2ec40:	blx	88e4 <__stack_chk_fail@plt>
   2ec44:	ldr	r2, [r4, #0]
   2ec46:	adds	r2, #96	; 0x60
   2ec48:	adds	r3, r2, r0
   2ec4a:	ldr.w	sl, [r3, #4]
   2ec4e:	ldr	r3, [r3, #0]
   2ec50:	add	r7, r3
   2ec52:	str	r7, [r2, r0]
   2ec54:	ldr	r0, [r4, #0]
   2ec56:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2ec5a:	mov	r0, r4
   2ec5c:	bl	1b2dc <btrfs_release_path@@Base>
   2ec60:	ands.w	sl, sl, #1
   2ec64:	bne.w	2f050 <btrfs_abort_transaction@@Base+0x854>
   2ec68:	ldr.w	r3, [fp, #112]	; 0x70
   2ec6c:	cmp	r7, r3
   2ec6e:	bls.w	2f400 <btrfs_abort_transaction@@Base+0xc04>
   2ec72:	ldr	r3, [r5, #0]
   2ec74:	str	r3, [sp, #40]	; 0x28
   2ec76:	ldr	r3, [r3, #48]	; 0x30
   2ec78:	ldr.w	r6, [fp, #49]	; 0x31
   2ec7c:	ldr.w	r7, [fp, #53]	; 0x35
   2ec80:	vmov	s16, r3
   2ec84:	ldr	r3, [sp, #40]	; 0x28
   2ec86:	mov	r0, r6
   2ec88:	mov	r1, r7
   2ec8a:	ldr.w	r2, [r3, #388]	; 0x184
   2ec8e:	mov	r3, sl
   2ec90:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2ec94:	adds	r1, r0, #7
   2ec96:	mov	r0, r8
   2ec98:	lsrs	r1, r1, #3
   2ec9a:	subs	r1, #1
   2ec9c:	orr.w	r1, r1, #3
   2eca0:	adds	r1, #1
   2eca2:	blx	8718 <calloc@plt+0x4>
   2eca6:	str	r0, [sp, #56]	; 0x38
   2eca8:	cmp	r0, #0
   2ecaa:	beq.w	2f046 <btrfs_abort_transaction@@Base+0x84a>
   2ecae:	ldrd	r2, r3, [fp, #40]	; 0x28
   2ecb2:	ldr.w	r8, [pc, #1900]	; 2f420 <btrfs_abort_transaction@@Base+0xc24>
   2ecb6:	strd	r2, r3, [sp, #16]
   2ecba:	add	r8, pc
   2ecbc:	ldr	r3, [sp, #16]
   2ecbe:	add.w	r8, r8, #43	; 0x2b
   2ecc2:	adds	r3, r6, r3
   2ecc4:	str	r3, [sp, #24]
   2ecc6:	ldr	r3, [sp, #20]
   2ecc8:	adc.w	r3, r7, r3
   2eccc:	str	r3, [sp, #28]
   2ecce:	ldr	r3, [sp, #24]
   2ecd0:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2ecd4:	ldr	r3, [sp, #28]
   2ecd6:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2ecda:	strd	r2, r3, [sp, #76]	; 0x4c
   2ecde:	movs	r2, #255	; 0xff
   2ece0:	strb.w	r2, [sp, #84]	; 0x54
   2ece4:	strb.w	r2, [sp, #85]	; 0x55
   2ece8:	strb.w	r2, [sp, #86]	; 0x56
   2ecec:	strb.w	r2, [sp, #87]	; 0x57
   2ecf0:	strb.w	r2, [sp, #88]	; 0x58
   2ecf4:	strb.w	r2, [sp, #89]	; 0x59
   2ecf8:	strb.w	r2, [sp, #90]	; 0x5a
   2ecfc:	strb.w	r2, [sp, #91]	; 0x5b
   2ed00:	strb.w	r2, [sp, #92]	; 0x5c
   2ed04:	mov.w	r3, #4294967295	; 0xffffffff
   2ed08:	vmov	r1, s16
   2ed0c:	str	r3, [sp, #0]
   2ed0e:	add	r2, sp, #76	; 0x4c
   2ed10:	mov	r3, r4
   2ed12:	mov	r0, r5
   2ed14:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   2ed18:	mov	r6, r0
   2ed1a:	cmp	r0, #0
   2ed1c:	bne.n	2edfe <btrfs_abort_transaction@@Base+0x602>
   2ed1e:	ldr	r3, [r4, #0]
   2ed20:	mov	r9, r0
   2ed22:	vmov	s17, r3
   2ed26:	ldr	r3, [r4, #32]
   2ed28:	adds	r3, #1
   2ed2a:	str	r3, [r4, #32]
   2ed2c:	ldr.w	r3, [pc, #1780]	; 2f424 <btrfs_abort_transaction@@Base+0xc28>
   2ed30:	add	r3, pc
   2ed32:	vmov	s18, r3
   2ed36:	ldr	r2, [r4, #32]
   2ed38:	add.w	r7, r9, sl
   2ed3c:	cmp	r2, #0
   2ed3e:	bgt.n	2ed4a <btrfs_abort_transaction@@Base+0x54e>
   2ed40:	mov.w	sl, #0
   2ed44:	b.n	2edba <btrfs_abort_transaction@@Base+0x5be>
   2ed46:	mov	sl, r7
   2ed48:	b.n	2ed04 <btrfs_abort_transaction@@Base+0x508>
   2ed4a:	vmov	r0, s17
   2ed4e:	subs	r2, #1
   2ed50:	add	r1, sp, #96	; 0x60
   2ed52:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2ed56:	ldrb.w	r3, [sp, #104]	; 0x68
   2ed5a:	cmp	r3, #198	; 0xc6
   2ed5c:	bne.n	2ee14 <btrfs_abort_transaction@@Base+0x618>
   2ed5e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2ed62:	mov.w	sl, #1
   2ed66:	ldrd	r0, r1, [sp, #96]	; 0x60
   2ed6a:	ldr.w	r6, [pc, #1724]	; 2f428 <btrfs_abort_transaction@@Base+0xc2c>
   2ed6e:	cmp	r1, r3
   2ed70:	add	r6, pc
   2ed72:	it	eq
   2ed74:	cmpeq	r0, r2
   2ed76:	add.w	r6, r6, #43	; 0x2b
   2ed7a:	ldr.w	r0, [pc, #1712]	; 2f42c <btrfs_abort_transaction@@Base+0xc30>
   2ed7e:	ite	eq
   2ed80:	moveq	r3, #1
   2ed82:	movne	r3, #0
   2ed84:	add	r0, pc
   2ed86:	movs	r2, #222	; 0xde
   2ed88:	mov	r1, r6
   2ed8a:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2ed8e:	ldr.w	r3, [fp, #53]	; 0x35
   2ed92:	ldr.w	r1, [sp, #109]	; 0x6d
   2ed96:	ldr.w	r0, [sp, #105]	; 0x69
   2ed9a:	ldr.w	r2, [fp, #49]	; 0x31
   2ed9e:	cmp	r1, r3
   2eda0:	mov	r1, r6
   2eda2:	it	eq
   2eda4:	cmpeq	r0, r2
   2eda6:	ldr.w	r0, [pc, #1672]	; 2f430 <btrfs_abort_transaction@@Base+0xc34>
   2edaa:	mov.w	r2, #223	; 0xdf
   2edae:	add	r0, pc
   2edb0:	ite	eq
   2edb2:	moveq	r3, #1
   2edb4:	movne	r3, #0
   2edb6:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2edba:	vmov	r1, s16
   2edbe:	mov	r2, r4
   2edc0:	ldr	r3, [r4, #32]
   2edc2:	mov	r0, r5
   2edc4:	str.w	r9, [sp]
   2edc8:	bl	1e87c <btrfs_del_items@@Base>
   2edcc:	mov	r6, r0
   2edce:	cbnz	r0, 2edfe <btrfs_abort_transaction@@Base+0x602>
   2edd0:	mov	r0, r4
   2edd2:	bl	1b2dc <btrfs_release_path@@Base>
   2edd6:	cmp.w	sl, #0
   2edda:	beq.n	2ed46 <btrfs_abort_transaction@@Base+0x54a>
   2eddc:	ldr	r1, [sp, #40]	; 0x28
   2edde:	mov	r3, r4
   2ede0:	mov.w	r8, #1
   2ede4:	mov	r2, fp
   2ede6:	str.w	r8, [sp]
   2edea:	mov	r0, r5
   2edec:	ldr	r1, [r1, #48]	; 0x30
   2edee:	bl	2e86c <btrfs_abort_transaction@@Base+0x70>
   2edf2:	cmn.w	r0, #4096	; 0x1000
   2edf6:	mov	r3, r0
   2edf8:	bls.w	2ef22 <btrfs_abort_transaction@@Base+0x726>
   2edfc:	mov	r6, r0
   2edfe:	ldr	r0, [sp, #56]	; 0x38
   2ee00:	blx	87cc <free@plt+0x4>
   2ee04:	cmp	r6, #0
   2ee06:	beq.w	2ec2a <btrfs_abort_transaction@@Base+0x42e>
   2ee0a:	mov	r1, r6
   2ee0c:	mov	r0, r5
   2ee0e:	bl	2e7fc <btrfs_abort_transaction@@Base>
   2ee12:	b.n	2ec2a <btrfs_abort_transaction@@Base+0x42e>
   2ee14:	cmp	r3, #199	; 0xc7
   2ee16:	bne.n	2ef0e <btrfs_abort_transaction@@Base+0x712>
   2ee18:	ldrd	r6, r7, [sp, #96]	; 0x60
   2ee1c:	mov	r1, r8
   2ee1e:	ldrd	r2, r3, [sp, #16]
   2ee22:	vmov	r0, s18
   2ee26:	cmp	r7, r3
   2ee28:	it	eq
   2ee2a:	cmpeq	r6, r2
   2ee2c:	mov.w	r2, #229	; 0xe5
   2ee30:	ite	cs
   2ee32:	movcs	r3, #1
   2ee34:	movcc	r3, #0
   2ee36:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2ee3a:	ldrd	r2, r3, [sp, #24]
   2ee3e:	ldr.w	r0, [pc, #1524]	; 2f434 <btrfs_abort_transaction@@Base+0xc38>
   2ee42:	mov	r1, r8
   2ee44:	cmp	r7, r3
   2ee46:	it	eq
   2ee48:	cmpeq	r6, r2
   2ee4a:	add	r0, pc
   2ee4c:	mov.w	r2, #230	; 0xe6
   2ee50:	ite	cc
   2ee52:	movcc	r3, #1
   2ee54:	movcs	r3, #0
   2ee56:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2ee5a:	ldr.w	r3, [sp, #105]	; 0x69
   2ee5e:	ldr.w	r2, [sp, #109]	; 0x6d
   2ee62:	adds	r3, r3, r6
   2ee64:	str	r3, [sp, #48]	; 0x30
   2ee66:	adc.w	r3, r2, r7
   2ee6a:	str	r3, [sp, #52]	; 0x34
   2ee6c:	ldrd	r0, r1, [sp, #48]	; 0x30
   2ee70:	ldrd	r2, r3, [sp, #24]
   2ee74:	cmp	r3, r1
   2ee76:	mov	r1, r8
   2ee78:	it	eq
   2ee7a:	cmpeq	r2, r0
   2ee7c:	ldr.w	r0, [pc, #1464]	; 2f438 <btrfs_abort_transaction@@Base+0xc3c>
   2ee80:	mov.w	r2, #231	; 0xe7
   2ee84:	ite	cs
   2ee86:	movcs	r3, #1
   2ee88:	movcc	r3, #0
   2ee8a:	add	r0, pc
   2ee8c:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2ee90:	ldr	r3, [sp, #40]	; 0x28
   2ee92:	ldr	r1, [sp, #16]
   2ee94:	ldr.w	r2, [r3, #388]	; 0x184
   2ee98:	subs	r0, r6, r1
   2ee9a:	ldr	r1, [sp, #20]
   2ee9c:	mov.w	r3, #0
   2eea0:	sbc.w	r1, r7, r1
   2eea4:	str	r2, [sp, #68]	; 0x44
   2eea6:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2eeaa:	ldr	r1, [sp, #48]	; 0x30
   2eeac:	ldr	r7, [sp, #20]
   2eeae:	movs	r3, #0
   2eeb0:	ldr	r2, [sp, #68]	; 0x44
   2eeb2:	mov	r6, r0
   2eeb4:	ldr	r0, [sp, #16]
   2eeb6:	subs	r0, r1, r0
   2eeb8:	ldr	r1, [sp, #52]	; 0x34
   2eeba:	sbc.w	r1, r1, r7
   2eebe:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2eec2:	ldr	r3, [sp, #56]	; 0x38
   2eec4:	add.w	r2, r3, r6, lsr #3
   2eec8:	movs	r3, #255	; 0xff
   2eeca:	subs	r7, r0, r6
   2eecc:	and.w	r6, r6, #7
   2eed0:	rsb	r1, r6, #8
   2eed4:	lsl.w	r6, r3, r6
   2eed8:	uxtb	r6, r6
   2eeda:	subs	r1, r7, r1
   2eedc:	bpl.n	2eefe <btrfs_abort_transaction@@Base+0x702>
   2eede:	cbz	r7, 2eef2 <btrfs_abort_transaction@@Base+0x6f6>
   2eee0:	negs	r0, r0
   2eee2:	movs	r3, #255	; 0xff
   2eee4:	and.w	r0, r0, #7
   2eee8:	ldrb	r1, [r2, #0]
   2eeea:	asrs	r3, r0
   2eeec:	ands	r3, r6
   2eeee:	orrs	r3, r1
   2eef0:	strb	r3, [r2, #0]
   2eef2:	ldr	r3, [r4, #32]
   2eef4:	add.w	r9, r9, #1
   2eef8:	subs	r3, #1
   2eefa:	str	r3, [r4, #32]
   2eefc:	b.n	2ed36 <btrfs_abort_transaction@@Base+0x53a>
   2eefe:	ldrb	r3, [r2, #0]
   2ef00:	mov	r7, r1
   2ef02:	movs	r1, #8
   2ef04:	orrs	r3, r6
   2ef06:	movs	r6, #255	; 0xff
   2ef08:	strb.w	r3, [r2], #1
   2ef0c:	b.n	2eeda <btrfs_abort_transaction@@Base+0x6de>
   2ef0e:	ldr.w	r1, [pc, #1324]	; 2f43c <btrfs_abort_transaction@@Base+0xc40>
   2ef12:	movs	r2, #243	; 0xf3
   2ef14:	ldr.w	r0, [pc, #1320]	; 2f440 <btrfs_abort_transaction@@Base+0xc44>
   2ef18:	add	r1, pc
   2ef1a:	adds	r1, #43	; 0x2b
   2ef1c:	add	r0, pc
   2ef1e:	bl	2e980 <btrfs_abort_transaction@@Base+0x184>
   2ef22:	ldr	r0, [r4, #0]
   2ef24:	add.w	r2, r0, #96	; 0x60
   2ef28:	add	r3, r2
   2ef2a:	ldr	r2, [r3, #4]
   2ef2c:	ldr.w	r9, [r3]
   2ef30:	orr.w	r2, r2, #1
   2ef34:	str	r2, [r3, #4]
   2ef36:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2ef3a:	mov	r0, r4
   2ef3c:	bl	1b2dc <btrfs_release_path@@Base>
   2ef40:	cmp	r9, r7
   2ef42:	beq.n	2ef7a <btrfs_abort_transaction@@Base+0x77e>
   2ef44:	ldr	r2, [sp, #64]	; 0x40
   2ef46:	ldr.w	r3, [pc, #1276]	; 2f444 <btrfs_abort_transaction@@Base+0xc48>
   2ef4a:	ldr	r3, [r2, r3]
   2ef4c:	strd	r7, r9, [sp, #8]
   2ef50:	ldrd	r0, r1, [fp, #40]	; 0x28
   2ef54:	ldr.w	r2, [pc, #1264]	; 2f448 <btrfs_abort_transaction@@Base+0xc4c>
   2ef58:	strd	r0, r1, [sp]
   2ef5c:	add	r2, pc
   2ef5e:	mov	r1, r8
   2ef60:	ldr	r0, [r3, #0]
   2ef62:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2ef66:	ldr.w	r1, [pc, #1252]	; 2f44c <btrfs_abort_transaction@@Base+0xc50>
   2ef6a:	ldr.w	r0, [pc, #1252]	; 2f450 <btrfs_abort_transaction@@Base+0xc54>
   2ef6e:	movw	r2, #271	; 0x10f
   2ef72:	add	r1, pc
   2ef74:	adds	r1, #43	; 0x2b
   2ef76:	add	r0, pc
   2ef78:	b.n	2ef1e <btrfs_abort_transaction@@Base+0x722>
   2ef7a:	ldr	r3, [sp, #40]	; 0x28
   2ef7c:	mov.w	fp, #0
   2ef80:	ldr.w	r8, [sp, #56]	; 0x38
   2ef84:	mov.w	r9, #200	; 0xc8
   2ef88:	ldr.w	r3, [r3, #388]	; 0x184
   2ef8c:	lsls	r3, r3, #11
   2ef8e:	mov	sl, r3
   2ef90:	ldrd	r2, r3, [sp, #16]
   2ef94:	ldrd	r0, r1, [sp, #24]
   2ef98:	cmp	r3, r1
   2ef9a:	it	eq
   2ef9c:	cmpeq	r2, r0
   2ef9e:	bcs.w	2edfe <btrfs_abort_transaction@@Base+0x602>
   2efa2:	ldr	r2, [sp, #16]
   2efa4:	ldr	r3, [sp, #24]
   2efa6:	subs	r3, r3, r2
   2efa8:	ldr	r2, [sp, #20]
   2efaa:	str	r3, [sp, #32]
   2efac:	ldr	r3, [sp, #28]
   2efae:	sbc.w	r3, r3, r2
   2efb2:	str	r3, [sp, #36]	; 0x24
   2efb4:	ldrd	r2, r3, [sp, #32]
   2efb8:	cmp	fp, r3
   2efba:	ldr	r3, [sp, #40]	; 0x28
   2efbc:	it	eq
   2efbe:	cmpeq	sl, r2
   2efc0:	it	cc
   2efc2:	strdcc	sl, fp, [sp, #32]
   2efc6:	ldrd	r0, r1, [sp, #32]
   2efca:	ldr.w	r2, [r3, #388]	; 0x184
   2efce:	movs	r3, #0
   2efd0:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2efd4:	ldr	r3, [sp, #16]
   2efd6:	vmov	r1, s16
   2efda:	mov	r2, r4
   2efdc:	strb.w	r9, [sp, #84]	; 0x54
   2efe0:	str	r3, [sp, #76]	; 0x4c
   2efe2:	ldr	r3, [sp, #20]
   2efe4:	str	r3, [sp, #80]	; 0x50
   2efe6:	ldr	r3, [sp, #32]
   2efe8:	str.w	r3, [sp, #85]	; 0x55
   2efec:	ldr	r3, [sp, #36]	; 0x24
   2efee:	str.w	r3, [sp, #89]	; 0x59
   2eff2:	movs	r3, #1
   2eff4:	str	r3, [sp, #4]
   2eff6:	add	r3, sp, #72	; 0x48
   2eff8:	str	r3, [sp, #0]
   2effa:	add	r3, sp, #76	; 0x4c
   2effc:	adds	r0, #7
   2effe:	lsrs	r7, r0, #3
   2f000:	mov	r0, r5
   2f002:	str	r7, [sp, #72]	; 0x48
   2f004:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2f008:	cbnz	r0, 2f04c <btrfs_abort_transaction@@Base+0x850>
   2f00a:	ldr	r0, [r4, #0]
   2f00c:	movs	r2, #25
   2f00e:	ldr	r3, [r4, #32]
   2f010:	mov	r1, r8
   2f012:	add	r8, r7
   2f014:	str	r0, [sp, #48]	; 0x30
   2f016:	mla	r3, r2, r3, r0
   2f01a:	ldr.w	r2, [r3, #214]	; 0xd6
   2f01e:	mov	r3, r7
   2f020:	adds	r2, #101	; 0x65
   2f022:	bl	1a7b4 <write_extent_buffer@@Base>
   2f026:	ldr	r0, [sp, #48]	; 0x30
   2f028:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2f02c:	mov	r0, r4
   2f02e:	bl	1b2dc <btrfs_release_path@@Base>
   2f032:	ldr	r3, [sp, #16]
   2f034:	ldr	r2, [sp, #32]
   2f036:	adds	r3, r3, r2
   2f038:	ldr	r2, [sp, #36]	; 0x24
   2f03a:	str	r3, [sp, #16]
   2f03c:	ldr	r3, [sp, #20]
   2f03e:	adc.w	r3, r2, r3
   2f042:	str	r3, [sp, #20]
   2f044:	b.n	2ef90 <btrfs_abort_transaction@@Base+0x794>
   2f046:	mvn.w	r6, #11
   2f04a:	b.n	2edfe <btrfs_abort_transaction@@Base+0x602>
   2f04c:	mov	r6, r0
   2f04e:	b.n	2edfe <btrfs_abort_transaction@@Base+0x602>
   2f050:	ldr.w	r3, [fp, #116]	; 0x74
   2f054:	cmp	r7, r3
   2f056:	bcs.w	2f400 <btrfs_abort_transaction@@Base+0xc04>
   2f05a:	ldr	r3, [r5, #0]
   2f05c:	str	r3, [sp, #16]
   2f05e:	ldr	r3, [r3, #48]	; 0x30
   2f060:	ldr.w	r6, [fp, #49]	; 0x31
   2f064:	ldr.w	r7, [fp, #53]	; 0x35
   2f068:	vmov	s16, r3
   2f06c:	ldr	r3, [sp, #16]
   2f06e:	mov	r0, r6
   2f070:	mov	r1, r7
   2f072:	ldr.w	r2, [r3, #388]	; 0x184
   2f076:	movs	r3, #0
   2f078:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2f07c:	adds	r1, r0, #7
   2f07e:	mov	r0, r8
   2f080:	lsrs	r1, r1, #3
   2f082:	subs	r1, #1
   2f084:	orr.w	r1, r1, #3
   2f088:	adds	r1, #1
   2f08a:	blx	8718 <calloc@plt+0x4>
   2f08e:	mov	r8, r0
   2f090:	cmp	r0, #0
   2f092:	beq.w	2f3f6 <btrfs_abort_transaction@@Base+0xbfa>
   2f096:	ldrd	r2, r3, [fp, #40]	; 0x28
   2f09a:	ldr.w	r9, [pc, #952]	; 2f454 <btrfs_abort_transaction@@Base+0xc58>
   2f09e:	strd	r2, r3, [sp, #24]
   2f0a2:	add	r9, pc
   2f0a4:	ldr	r3, [sp, #24]
   2f0a6:	add.w	r9, r9, #73	; 0x49
   2f0aa:	adds	r3, r6, r3
   2f0ac:	str	r3, [sp, #40]	; 0x28
   2f0ae:	ldr	r3, [sp, #28]
   2f0b0:	adc.w	r3, r7, r3
   2f0b4:	str	r3, [sp, #44]	; 0x2c
   2f0b6:	ldr	r3, [sp, #40]	; 0x28
   2f0b8:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2f0bc:	ldr	r3, [sp, #44]	; 0x2c
   2f0be:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2f0c2:	strd	r2, r3, [sp, #76]	; 0x4c
   2f0c6:	movs	r2, #255	; 0xff
   2f0c8:	strb.w	r2, [sp, #84]	; 0x54
   2f0cc:	strb.w	r2, [sp, #85]	; 0x55
   2f0d0:	strb.w	r2, [sp, #86]	; 0x56
   2f0d4:	strb.w	r2, [sp, #87]	; 0x57
   2f0d8:	strb.w	r2, [sp, #88]	; 0x58
   2f0dc:	strb.w	r2, [sp, #89]	; 0x59
   2f0e0:	strb.w	r2, [sp, #90]	; 0x5a
   2f0e4:	strb.w	r2, [sp, #91]	; 0x5b
   2f0e8:	strb.w	r2, [sp, #92]	; 0x5c
   2f0ec:	mov.w	r3, #4294967295	; 0xffffffff
   2f0f0:	vmov	r1, s16
   2f0f4:	str	r3, [sp, #0]
   2f0f6:	add	r2, sp, #76	; 0x4c
   2f0f8:	mov	r3, r4
   2f0fa:	mov	r0, r5
   2f0fc:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   2f100:	mov	r6, r0
   2f102:	cmp	r0, #0
   2f104:	bne.n	2f1ca <btrfs_abort_transaction@@Base+0x9ce>
   2f106:	ldr	r3, [r4, #32]
   2f108:	ldr	r7, [r4, #0]
   2f10a:	adds	r3, #1
   2f10c:	str	r3, [r4, #32]
   2f10e:	ldr	r3, [pc, #840]	; (2f458 <btrfs_abort_transaction@@Base+0xc5c>)
   2f110:	str	r0, [sp, #48]	; 0x30
   2f112:	add	r3, pc
   2f114:	vmov	s17, r3
   2f118:	ldr	r2, [r4, #32]
   2f11a:	cmp	r2, #0
   2f11c:	bgt.n	2f122 <btrfs_abort_transaction@@Base+0x926>
   2f11e:	movs	r7, #0
   2f120:	b.n	2f18e <btrfs_abort_transaction@@Base+0x992>
   2f122:	subs	r2, #1
   2f124:	add	r1, sp, #96	; 0x60
   2f126:	mov	r0, r7
   2f128:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2f12c:	ldrb.w	r3, [sp, #104]	; 0x68
   2f130:	cmp	r3, #198	; 0xc6
   2f132:	bne.n	2f1ce <btrfs_abort_transaction@@Base+0x9d2>
   2f134:	ldrd	r2, r3, [fp, #40]	; 0x28
   2f138:	ldrd	r6, r7, [sp, #96]	; 0x60
   2f13c:	ldr	r0, [pc, #796]	; (2f45c <btrfs_abort_transaction@@Base+0xc60>)
   2f13e:	cmp	r7, r3
   2f140:	mov.w	r7, #1
   2f144:	it	eq
   2f146:	cmpeq	r6, r2
   2f148:	ldr	r6, [pc, #788]	; (2f460 <btrfs_abort_transaction@@Base+0xc64>)
   2f14a:	add	r0, pc
   2f14c:	mov.w	r2, #360	; 0x168
   2f150:	add	r6, pc
   2f152:	it	eq
   2f154:	moveq	r3, #1
   2f156:	add.w	r6, r6, #73	; 0x49
   2f15a:	it	ne
   2f15c:	movne	r3, #0
   2f15e:	mov	r1, r6
   2f160:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f164:	ldr.w	r3, [fp, #53]	; 0x35
   2f168:	ldr.w	r1, [sp, #109]	; 0x6d
   2f16c:	ldr.w	r0, [sp, #105]	; 0x69
   2f170:	ldr.w	r2, [fp, #49]	; 0x31
   2f174:	cmp	r1, r3
   2f176:	mov	r1, r6
   2f178:	it	eq
   2f17a:	cmpeq	r0, r2
   2f17c:	ldr	r0, [pc, #740]	; (2f464 <btrfs_abort_transaction@@Base+0xc68>)
   2f17e:	movw	r2, #361	; 0x169
   2f182:	add	r0, pc
   2f184:	ite	eq
   2f186:	moveq	r3, #1
   2f188:	movne	r3, #0
   2f18a:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f18e:	ldr	r3, [sp, #48]	; 0x30
   2f190:	mov	r2, r4
   2f192:	vmov	r1, s16
   2f196:	mov	r0, r5
   2f198:	str	r3, [sp, #0]
   2f19a:	ldr	r3, [r4, #32]
   2f19c:	bl	1e87c <btrfs_del_items@@Base>
   2f1a0:	mov	r6, r0
   2f1a2:	cbnz	r0, 2f1ca <btrfs_abort_transaction@@Base+0x9ce>
   2f1a4:	mov	r0, r4
   2f1a6:	bl	1b2dc <btrfs_release_path@@Base>
   2f1aa:	cmp	r7, #0
   2f1ac:	beq.n	2f0ec <btrfs_abort_transaction@@Base+0x8f0>
   2f1ae:	ldr	r1, [sp, #16]
   2f1b0:	movs	r3, #1
   2f1b2:	mov	r2, fp
   2f1b4:	str	r3, [sp, #0]
   2f1b6:	mov	r0, r5
   2f1b8:	mov	r3, r4
   2f1ba:	ldr	r1, [r1, #48]	; 0x30
   2f1bc:	bl	2e86c <btrfs_abort_transaction@@Base+0x70>
   2f1c0:	cmn.w	r0, #4096	; 0x1000
   2f1c4:	mov	r3, r0
   2f1c6:	bls.n	2f2c0 <btrfs_abort_transaction@@Base+0xac4>
   2f1c8:	mov	r6, r0
   2f1ca:	mov	r0, r8
   2f1cc:	b.n	2ee00 <btrfs_abort_transaction@@Base+0x604>
   2f1ce:	cmp	r3, #200	; 0xc8
   2f1d0:	bne.n	2f2b0 <btrfs_abort_transaction@@Base+0xab4>
   2f1d2:	ldrd	r2, r3, [sp, #96]	; 0x60
   2f1d6:	ldrd	r0, r1, [sp, #24]
   2f1da:	cmp	r3, r1
   2f1dc:	strd	r2, r3, [sp, #32]
   2f1e0:	it	eq
   2f1e2:	cmpeq	r2, r0
   2f1e4:	mov	r1, r9
   2f1e6:	vmov	r0, s17
   2f1ea:	movw	r2, #369	; 0x171
   2f1ee:	ite	cs
   2f1f0:	movcs	r3, #1
   2f1f2:	movcc	r3, #0
   2f1f4:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f1f8:	ldrd	r2, r3, [sp, #32]
   2f1fc:	ldrd	r0, r1, [sp, #40]	; 0x28
   2f200:	cmp	r3, r1
   2f202:	mov	r1, r9
   2f204:	it	eq
   2f206:	cmpeq	r2, r0
   2f208:	ldr	r0, [pc, #604]	; (2f468 <btrfs_abort_transaction@@Base+0xc6c>)
   2f20a:	mov.w	r2, #370	; 0x172
   2f20e:	ite	cc
   2f210:	movcc	r3, #1
   2f212:	movcs	r3, #0
   2f214:	add	r0, pc
   2f216:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f21a:	ldr.w	r6, [sp, #105]	; 0x69
   2f21e:	ldr	r3, [sp, #32]
   2f220:	ldr.w	sl, [sp, #109]	; 0x6d
   2f224:	adds	r3, r3, r6
   2f226:	str	r3, [sp, #56]	; 0x38
   2f228:	ldr	r3, [sp, #36]	; 0x24
   2f22a:	adc.w	r3, r3, sl
   2f22e:	str	r3, [sp, #60]	; 0x3c
   2f230:	ldrd	r0, r1, [sp, #56]	; 0x38
   2f234:	ldrd	r2, r3, [sp, #40]	; 0x28
   2f238:	cmp	r3, r1
   2f23a:	mov	r1, r9
   2f23c:	it	eq
   2f23e:	cmpeq	r2, r0
   2f240:	ldr	r0, [pc, #552]	; (2f46c <btrfs_abort_transaction@@Base+0xc70>)
   2f242:	movw	r2, #371	; 0x173
   2f246:	ite	cs
   2f248:	movcs	r3, #1
   2f24a:	movcc	r3, #0
   2f24c:	add	r0, pc
   2f24e:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f252:	ldr	r3, [sp, #16]
   2f254:	mov	r0, r6
   2f256:	mov	r1, sl
   2f258:	ldr.w	r2, [r3, #388]	; 0x184
   2f25c:	movs	r3, #0
   2f25e:	str	r2, [sp, #68]	; 0x44
   2f260:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2f264:	ldr	r3, [r4, #32]
   2f266:	movs	r1, #25
   2f268:	ldr	r2, [sp, #68]	; 0x44
   2f26a:	subs	r3, #1
   2f26c:	mla	r3, r1, r3, r7
   2f270:	ldr	r1, [sp, #32]
   2f272:	lsls	r2, r2, #3
   2f274:	ldr.w	sl, [r3, #214]	; 0xd6
   2f278:	movs	r3, #0
   2f27a:	add.w	sl, sl, #101	; 0x65
   2f27e:	adds	r0, #7
   2f280:	lsrs	r6, r0, #3
   2f282:	ldr	r0, [sp, #24]
   2f284:	subs	r0, r1, r0
   2f286:	ldr	r1, [sp, #36]	; 0x24
   2f288:	mov	ip, r1
   2f28a:	ldr	r1, [sp, #28]
   2f28c:	sbc.w	r1, ip, r1
   2f290:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2f294:	mov	r3, r6
   2f296:	mov	r2, sl
   2f298:	add.w	r1, r8, r0
   2f29c:	mov	r0, r7
   2f29e:	bl	1a79e <read_extent_buffer@@Base>
   2f2a2:	ldr	r3, [sp, #48]	; 0x30
   2f2a4:	adds	r3, #1
   2f2a6:	str	r3, [sp, #48]	; 0x30
   2f2a8:	ldr	r3, [r4, #32]
   2f2aa:	subs	r3, #1
   2f2ac:	str	r3, [r4, #32]
   2f2ae:	b.n	2f118 <btrfs_abort_transaction@@Base+0x91c>
   2f2b0:	ldr	r1, [pc, #444]	; (2f470 <btrfs_abort_transaction@@Base+0xc74>)
   2f2b2:	movw	r2, #387	; 0x183
   2f2b6:	ldr	r0, [pc, #444]	; (2f474 <btrfs_abort_transaction@@Base+0xc78>)
   2f2b8:	add	r1, pc
   2f2ba:	adds	r1, #73	; 0x49
   2f2bc:	add	r0, pc
   2f2be:	b.n	2ef1e <btrfs_abort_transaction@@Base+0x722>
   2f2c0:	ldr	r0, [r4, #0]
   2f2c2:	add.w	r2, r0, #96	; 0x60
   2f2c6:	add	r3, r2
   2f2c8:	ldr	r2, [r3, #4]
   2f2ca:	bic.w	r2, r2, #1
   2f2ce:	str	r2, [r3, #4]
   2f2d0:	ldr	r3, [r3, #0]
   2f2d2:	str	r3, [sp, #40]	; 0x28
   2f2d4:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2f2d8:	mov	r0, r4
   2f2da:	bl	1b2dc <btrfs_release_path@@Base>
   2f2de:	ldr	r3, [sp, #16]
   2f2e0:	ldr.w	r0, [fp, #49]	; 0x31
   2f2e4:	ldr.w	r1, [fp, #53]	; 0x35
   2f2e8:	ldr.w	r2, [r3, #388]	; 0x184
   2f2ec:	mov	r3, r6
   2f2ee:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2f2f2:	mov	r9, r0
   2f2f4:	cmp	r0, #0
   2f2f6:	beq.n	2f3f2 <btrfs_abort_transaction@@Base+0xbf6>
   2f2f8:	mov	r3, r6
   2f2fa:	mov	r1, r0
   2f2fc:	mov	r2, r6
   2f2fe:	mov	r0, r8
   2f300:	bl	2e91c <btrfs_abort_transaction@@Base+0x120>
   2f304:	ldr	r3, [pc, #368]	; (2f478 <btrfs_abort_transaction@@Base+0xc7c>)
   2f306:	str	r6, [sp, #32]
   2f308:	add	r3, pc
   2f30a:	adds	r3, #73	; 0x49
   2f30c:	vmov	s17, r3
   2f310:	ldr	r3, [pc, #360]	; (2f47c <btrfs_abort_transaction@@Base+0xc80>)
   2f312:	add	r3, pc
   2f314:	vmov	s18, r3
   2f318:	mov	r7, r0
   2f31a:	cmp	r9, r7
   2f31c:	bhi.n	2f35a <btrfs_abort_transaction@@Base+0xb5e>
   2f31e:	ldr	r3, [sp, #32]
   2f320:	ldr	r2, [sp, #40]	; 0x28
   2f322:	cmp	r3, r2
   2f324:	beq.w	2f1ca <btrfs_abort_transaction@@Base+0x9ce>
   2f328:	ldr	r2, [sp, #64]	; 0x40
   2f32a:	ldr	r3, [pc, #280]	; (2f444 <btrfs_abort_transaction@@Base+0xc48>)
   2f32c:	ldr	r3, [r2, r3]
   2f32e:	ldr	r2, [sp, #40]	; 0x28
   2f330:	str	r2, [sp, #12]
   2f332:	ldr	r2, [sp, #32]
   2f334:	str	r2, [sp, #8]
   2f336:	ldrd	r0, r1, [fp, #40]	; 0x28
   2f33a:	ldr	r2, [pc, #324]	; (2f480 <btrfs_abort_transaction@@Base+0xc84>)
   2f33c:	strd	r0, r1, [sp]
   2f340:	add	r2, pc
   2f342:	movs	r1, #1
   2f344:	ldr	r0, [r3, #0]
   2f346:	blx	8ca0 <__fprintf_chk@plt+0x4>
   2f34a:	ldr	r1, [pc, #312]	; (2f484 <btrfs_abort_transaction@@Base+0xc88>)
   2f34c:	ldr	r0, [pc, #312]	; (2f488 <btrfs_abort_transaction@@Base+0xc8c>)
   2f34e:	mov.w	r2, #436	; 0x1b4
   2f352:	add	r1, pc
   2f354:	adds	r1, #73	; 0x49
   2f356:	add	r0, pc
   2f358:	b.n	2ef1e <btrfs_abort_transaction@@Base+0x722>
   2f35a:	mov.w	r3, #4294967295	; 0xffffffff
   2f35e:	mov	r2, r7
   2f360:	mov	r1, r9
   2f362:	mov	r0, r8
   2f364:	bl	2e91c <btrfs_abort_transaction@@Base+0x120>
   2f368:	vmov	r1, s17
   2f36c:	movw	r2, #415	; 0x19f
   2f370:	cmp	r7, r0
   2f372:	mov	sl, r0
   2f374:	vmov	r0, s18
   2f378:	ite	cs
   2f37a:	movcs	r3, #0
   2f37c:	movcc	r3, #1
   2f37e:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f382:	ldr	r3, [sp, #16]
   2f384:	ldrd	r0, r1, [sp, #24]
   2f388:	ldr.w	r3, [r3, #388]	; 0x184
   2f38c:	mul.w	r2, r3, r7
   2f390:	sub.w	r7, sl, r7
   2f394:	muls	r3, r7
   2f396:	adds	r0, r0, r2
   2f398:	adc.w	r1, r1, #0
   2f39c:	movs	r2, #199	; 0xc7
   2f39e:	strd	r0, r1, [sp, #76]	; 0x4c
   2f3a2:	mov	r0, r5
   2f3a4:	strb.w	r2, [sp, #84]	; 0x54
   2f3a8:	movs	r2, #0
   2f3aa:	vmov	r1, s16
   2f3ae:	str.w	r3, [sp, #85]	; 0x55
   2f3b2:	movs	r3, #1
   2f3b4:	str.w	r2, [sp, #89]	; 0x59
   2f3b8:	str	r2, [sp, #72]	; 0x48
   2f3ba:	mov	r2, r4
   2f3bc:	str	r3, [sp, #4]
   2f3be:	add	r3, sp, #72	; 0x48
   2f3c0:	str	r3, [sp, #0]
   2f3c2:	add	r3, sp, #76	; 0x4c
   2f3c4:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2f3c8:	mov	r7, r0
   2f3ca:	cbnz	r0, 2f3fc <btrfs_abort_transaction@@Base+0xc00>
   2f3cc:	mov	r0, r4
   2f3ce:	bl	1b2dc <btrfs_release_path@@Base>
   2f3d2:	ldr	r3, [sp, #32]
   2f3d4:	cmp	r9, sl
   2f3d6:	add.w	r3, r3, #1
   2f3da:	str	r3, [sp, #32]
   2f3dc:	bls.n	2f3ee <btrfs_abort_transaction@@Base+0xbf2>
   2f3de:	mov	r3, r7
   2f3e0:	mov	r2, sl
   2f3e2:	mov	r1, r9
   2f3e4:	mov	r0, r8
   2f3e6:	bl	2e91c <btrfs_abort_transaction@@Base+0x120>
   2f3ea:	mov	r7, r0
   2f3ec:	b.n	2f31a <btrfs_abort_transaction@@Base+0xb1e>
   2f3ee:	mov	r7, r9
   2f3f0:	b.n	2f31a <btrfs_abort_transaction@@Base+0xb1e>
   2f3f2:	str	r6, [sp, #32]
   2f3f4:	b.n	2f31e <btrfs_abort_transaction@@Base+0xb22>
   2f3f6:	mvn.w	r6, #11
   2f3fa:	b.n	2f1ca <btrfs_abort_transaction@@Base+0x9ce>
   2f3fc:	mov	r6, r0
   2f3fe:	b.n	2f1ca <btrfs_abort_transaction@@Base+0x9ce>
   2f400:	movs	r6, #0
   2f402:	b.n	2ec2a <btrfs_abort_transaction@@Base+0x42e>
   2f404:	mov	r0, r6
   2f406:	add	sp, #124	; 0x7c
   2f408:	vpop	{d8-d9}
   2f40c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f410:	add	r1, pc, #216	; (adr r1, 2f4ec <btrfs_abort_transaction@@Base+0xcf0>)
   2f412:	movs	r3, r0
   2f414:	add	r1, pc, #192	; (adr r1, 2f4d8 <btrfs_abort_transaction@@Base+0xcdc>)
   2f416:	movs	r3, r0
   2f418:	lsls	r4, r7, #9
   2f41a:	movs	r0, r0
   2f41c:	add	r0, pc, #1016	; (adr r0, 2f818 <btrfs_abort_transaction@@Base+0x101c>)
   2f41e:	movs	r3, r0
   2f420:	str	r1, [r1, #68]	; 0x44
   2f422:	movs	r1, r0
   2f424:	ldrsh	r1, [r7, r6]
   2f426:	movs	r1, r0
   2f428:	str	r3, [r2, #56]	; 0x38
   2f42a:	movs	r1, r0
   2f42c:	ldrsh	r1, [r1, r4]
   2f42e:	movs	r1, r0
   2f430:	ldrsh	r7, [r1, r4]
   2f432:	movs	r1, r0
   2f434:	ldrsh	r3, [r7, r2]
   2f436:	movs	r1, r0
   2f438:	ldrsh	r4, [r2, r2]
   2f43a:	movs	r1, r0
   2f43c:	str	r3, [r5, #28]
   2f43e:	movs	r1, r0
   2f440:	adds	r2, r1, #6
   2f442:	movs	r1, r0
   2f444:	lsls	r4, r1, #10
   2f446:	movs	r0, r0
   2f448:	ldrb	r7, [r5, r7]
   2f44a:	movs	r1, r0
   2f44c:	str	r1, [r2, #24]
   2f44e:	movs	r1, r0
   2f450:	adds	r0, r6, #4
   2f452:	movs	r1, r0
   2f454:	str	r1, [r4, #4]
   2f456:	movs	r1, r0
   2f458:	ldrh	r7, [r2, r7]
   2f45a:	movs	r1, r0
   2f45c:	ldrh	r3, [r0, r5]
   2f45e:	movs	r1, r0
   2f460:	ldrsh	r3, [r6, r6]
   2f462:	movs	r1, r0
   2f464:	ldrh	r3, [r7, r4]
   2f466:	movs	r1, r0
   2f468:	ldrh	r1, [r6, r3]
   2f46a:	movs	r1, r0
   2f46c:	ldrh	r2, [r2, r3]
   2f46e:	movs	r1, r0
   2f470:	ldrsh	r3, [r1, r1]
   2f472:	movs	r1, r0
   2f474:	adds	r2, r5, r7
   2f476:	movs	r1, r0
   2f478:	ldrb	r3, [r7, r7]
   2f47a:	movs	r1, r0
   2f47c:	ldrh	r2, [r6, r1]
   2f47e:	movs	r1, r0
   2f480:	ldrh	r3, [r1, r0]
   2f482:	movs	r1, r0
   2f484:	ldrb	r1, [r6, r6]
   2f486:	movs	r1, r0
   2f488:	adds	r0, r2, r5
   2f48a:	movs	r1, r0
   2f48c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f490:	sub	sp, #156	; 0x9c
   2f492:	mov	r4, r2
   2f494:	ldr	r2, [pc, #900]	; (2f81c <btrfs_abort_transaction@@Base+0x1020>)
   2f496:	ldr	r3, [sp, #200]	; 0xc8
   2f498:	mov	r5, r1
   2f49a:	add	r2, pc
   2f49c:	ldrd	r9, sl, [sp, #192]	; 0xc0
   2f4a0:	ldr	r1, [r0, #0]
   2f4a2:	mov	r6, r0
   2f4a4:	str	r3, [sp, #92]	; 0x5c
   2f4a6:	ldr	r3, [sp, #204]	; 0xcc
   2f4a8:	ldr.w	r8, [r1, #48]	; 0x30
   2f4ac:	str	r3, [sp, #96]	; 0x60
   2f4ae:	ldr	r3, [pc, #880]	; (2f820 <btrfs_abort_transaction@@Base+0x1024>)
   2f4b0:	ldr	r3, [r2, r3]
   2f4b2:	ldr	r3, [r3, #0]
   2f4b4:	str	r3, [sp, #148]	; 0x94
   2f4b6:	mov.w	r3, #0
   2f4ba:	ldrd	r2, r3, [r5, #40]	; 0x28
   2f4be:	cmp	r3, sl
   2f4c0:	it	eq
   2f4c2:	cmpeq	r2, r9
   2f4c4:	bcs.n	2f574 <btrfs_abort_transaction@@Base+0xd78>
   2f4c6:	ldr.w	r3, [r1, #388]	; 0x184
   2f4ca:	add	r7, sp, #108	; 0x6c
   2f4cc:	movs	r2, #255	; 0xff
   2f4ce:	mov	fp, sl
   2f4d0:	strb.w	r2, [sp, #116]	; 0x74
   2f4d4:	subs.w	sl, r9, r3
   2f4d8:	strb.w	r2, [sp, #117]	; 0x75
   2f4dc:	mov.w	r3, #0
   2f4e0:	strb.w	r2, [sp, #118]	; 0x76
   2f4e4:	mov	r1, r8
   2f4e6:	strb.w	r2, [sp, #119]	; 0x77
   2f4ea:	sbc.w	fp, fp, #0
   2f4ee:	strb.w	r2, [sp, #120]	; 0x78
   2f4f2:	strb.w	r2, [sp, #121]	; 0x79
   2f4f6:	strb.w	r2, [sp, #122]	; 0x7a
   2f4fa:	strb.w	r2, [sp, #123]	; 0x7b
   2f4fe:	strb.w	r2, [sp, #124]	; 0x7c
   2f502:	mov	r2, r7
   2f504:	str	r3, [sp, #0]
   2f506:	mov	r3, r4
   2f508:	strd	sl, fp, [sp, #108]	; 0x6c
   2f50c:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   2f510:	mov	r3, r0
   2f512:	cbnz	r0, 2f55e <btrfs_abort_transaction@@Base+0xd62>
   2f514:	mov	r3, fp
   2f516:	mov	r2, sl
   2f518:	mov	r0, r4
   2f51a:	bl	2e9f6 <btrfs_abort_transaction@@Base+0x1fa>
   2f51e:	ldr	r2, [r4, #32]
   2f520:	mov	r1, r7
   2f522:	str	r0, [sp, #68]	; 0x44
   2f524:	ldr	r0, [r4, #0]
   2f526:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2f52a:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2f52e:	ldr.w	r2, [sp, #117]	; 0x75
   2f532:	ldr.w	r1, [sp, #121]	; 0x79
   2f536:	adds	r3, r3, r2
   2f538:	str	r3, [sp, #8]
   2f53a:	adc.w	r3, r0, r1
   2f53e:	str	r3, [sp, #12]
   2f540:	ldrd	r0, r1, [sp, #8]
   2f544:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2f548:	cmp	r3, r1
   2f54a:	it	eq
   2f54c:	cmpeq	r2, r0
   2f54e:	bcc.n	2f5bc <btrfs_abort_transaction@@Base+0xdc0>
   2f550:	mov	r2, r4
   2f552:	mov	r1, r8
   2f554:	mov	r0, r6
   2f556:	bl	2eb30 <btrfs_abort_transaction@@Base+0x334>
   2f55a:	mov	r3, r0
   2f55c:	cbz	r0, 2f5bc <btrfs_abort_transaction@@Base+0xdc0>
   2f55e:	ldr	r1, [pc, #708]	; (2f824 <btrfs_abort_transaction@@Base+0x1028>)
   2f560:	ldr	r2, [pc, #700]	; (2f820 <btrfs_abort_transaction@@Base+0x1024>)
   2f562:	add	r1, pc
   2f564:	ldr	r2, [r1, r2]
   2f566:	ldr	r1, [r2, #0]
   2f568:	ldr	r2, [sp, #148]	; 0x94
   2f56a:	eors	r1, r2
   2f56c:	beq.w	2f812 <btrfs_abort_transaction@@Base+0x1016>
   2f570:	blx	88e4 <__stack_chk_fail@plt>
   2f574:	ldr	r3, [sp, #192]	; 0xc0
   2f576:	movs	r2, #255	; 0xff
   2f578:	mov	r1, r8
   2f57a:	strb.w	r2, [sp, #116]	; 0x74
   2f57e:	strb.w	r2, [sp, #117]	; 0x75
   2f582:	str	r3, [sp, #108]	; 0x6c
   2f584:	ldr	r3, [sp, #196]	; 0xc4
   2f586:	strb.w	r2, [sp, #118]	; 0x76
   2f58a:	strb.w	r2, [sp, #119]	; 0x77
   2f58e:	str	r3, [sp, #112]	; 0x70
   2f590:	movs	r3, #0
   2f592:	strb.w	r2, [sp, #120]	; 0x78
   2f596:	strb.w	r2, [sp, #121]	; 0x79
   2f59a:	strb.w	r2, [sp, #122]	; 0x7a
   2f59e:	strb.w	r2, [sp, #123]	; 0x7b
   2f5a2:	strb.w	r2, [sp, #124]	; 0x7c
   2f5a6:	add	r2, sp, #108	; 0x6c
   2f5a8:	str	r3, [sp, #0]
   2f5aa:	mov	r3, r4
   2f5ac:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   2f5b0:	mov	r3, r0
   2f5b2:	cmp	r0, #0
   2f5b4:	bne.n	2f55e <btrfs_abort_transaction@@Base+0xd62>
   2f5b6:	mov.w	r3, #4294967295	; 0xffffffff
   2f5ba:	str	r3, [sp, #68]	; 0x44
   2f5bc:	ldr	r3, [sp, #92]	; 0x5c
   2f5be:	str	r3, [sp, #8]
   2f5c0:	ldr	r3, [sp, #96]	; 0x60
   2f5c2:	str	r3, [sp, #12]
   2f5c4:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2f5c8:	strd	r2, r3, [sp, #16]
   2f5cc:	ldr	r3, [pc, #600]	; (2f828 <btrfs_abort_transaction@@Base+0x102c>)
   2f5ce:	add	r3, pc
   2f5d0:	adds	r3, #103	; 0x67
   2f5d2:	str	r3, [sp, #88]	; 0x58
   2f5d4:	mov	fp, r3
   2f5d6:	ldr	r2, [sp, #8]
   2f5d8:	add	r1, sp, #128	; 0x80
   2f5da:	ldr	r3, [sp, #16]
   2f5dc:	ldr	r7, [r4, #0]
   2f5de:	adds	r3, r3, r2
   2f5e0:	ldr	r2, [sp, #12]
   2f5e2:	str	r3, [sp, #56]	; 0x38
   2f5e4:	ldr	r3, [sp, #20]
   2f5e6:	mov	r0, r7
   2f5e8:	ldr.w	r9, [r7, #92]	; 0x5c
   2f5ec:	adcs	r3, r2
   2f5ee:	ldr	r2, [r4, #32]
   2f5f0:	str	r3, [sp, #60]	; 0x3c
   2f5f2:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2f5f6:	ldrb.w	r3, [sp, #136]	; 0x88
   2f5fa:	ldr	r0, [pc, #560]	; (2f82c <btrfs_abort_transaction@@Base+0x1030>)
   2f5fc:	sub.w	r2, r3, #200	; 0xc8
   2f600:	ldr	r1, [sp, #88]	; 0x58
   2f602:	negs	r3, r2
   2f604:	add	r0, pc
   2f606:	adcs	r3, r2
   2f608:	mov.w	r2, #502	; 0x1f6
   2f60c:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f610:	ldrd	r2, r3, [sp, #128]	; 0x80
   2f614:	strd	r2, r3, [sp, #24]
   2f618:	ldr	r1, [sp, #24]
   2f61a:	ldr.w	r3, [sp, #137]	; 0x89
   2f61e:	ldr.w	r2, [sp, #141]	; 0x8d
   2f622:	adds	r3, r3, r1
   2f624:	str	r3, [sp, #48]	; 0x30
   2f626:	ldr	r3, [sp, #28]
   2f628:	ldrd	r0, r1, [sp, #24]
   2f62c:	adc.w	r3, r2, r3
   2f630:	str	r3, [sp, #52]	; 0x34
   2f632:	ldrd	r2, r3, [sp, #16]
   2f636:	cmp	r3, r1
   2f638:	it	eq
   2f63a:	cmpeq	r2, r0
   2f63c:	bcc.n	2f73a <btrfs_abort_transaction@@Base+0xf3e>
   2f63e:	ldrd	r0, r1, [sp, #48]	; 0x30
   2f642:	cmp	r3, r1
   2f644:	it	eq
   2f646:	cmpeq	r2, r0
   2f648:	ite	cc
   2f64a:	movcc	r3, #1
   2f64c:	movcs	r3, #0
   2f64e:	ldr	r0, [pc, #480]	; (2f830 <btrfs_abort_transaction@@Base+0x1034>)
   2f650:	mov.w	r2, #506	; 0x1fa
   2f654:	mov	r1, fp
   2f656:	add	r0, pc
   2f658:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f65c:	ldrd	r2, r3, [sp, #24]
   2f660:	ldrd	r0, r1, [sp, #56]	; 0x38
   2f664:	cmp	r3, r1
   2f666:	mov	r1, fp
   2f668:	it	eq
   2f66a:	cmpeq	r2, r0
   2f66c:	ldr	r0, [pc, #452]	; (2f834 <btrfs_abort_transaction@@Base+0x1038>)
   2f66e:	movw	r2, #507	; 0x1fb
   2f672:	ite	cc
   2f674:	movcc	r3, #1
   2f676:	movcs	r3, #0
   2f678:	add	r0, pc
   2f67a:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f67e:	ldrd	r2, r3, [sp, #56]	; 0x38
   2f682:	strd	r2, r3, [sp, #32]
   2f686:	ldrd	r0, r1, [sp, #32]
   2f68a:	ldrd	r2, r3, [sp, #48]	; 0x30
   2f68e:	cmp	r3, r1
   2f690:	ldr	r1, [sp, #16]
   2f692:	it	eq
   2f694:	cmpeq	r2, r0
   2f696:	it	cc
   2f698:	strdcc	r2, r3, [sp, #32]
   2f69c:	ldr	r3, [r4, #32]
   2f69e:	movs	r2, #25
   2f6a0:	ldr	r0, [sp, #24]
   2f6a2:	mla	r3, r2, r3, r7
   2f6a6:	subs	r0, r1, r0
   2f6a8:	ldr	r1, [sp, #20]
   2f6aa:	ldr.w	r2, [r9, #388]	; 0x184
   2f6ae:	mov	ip, r1
   2f6b0:	ldr	r1, [sp, #28]
   2f6b2:	ldr.w	sl, [r3, #214]	; 0xd6
   2f6b6:	mov.w	r3, #0
   2f6ba:	sbc.w	r1, ip, r1
   2f6be:	str	r2, [sp, #100]	; 0x64
   2f6c0:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2f6c4:	ldr	r1, [sp, #32]
   2f6c6:	ldr	r2, [sp, #100]	; 0x64
   2f6c8:	movs	r3, #0
   2f6ca:	add.w	sl, sl, #101	; 0x65
   2f6ce:	mov	r9, r0
   2f6d0:	ldr	r0, [sp, #24]
   2f6d2:	subs	r0, r1, r0
   2f6d4:	ldr	r1, [sp, #36]	; 0x24
   2f6d6:	mov	ip, r1
   2f6d8:	ldr	r1, [sp, #28]
   2f6da:	sbc.w	r1, ip, r1
   2f6de:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   2f6e2:	ldr	r2, [sp, #208]	; 0xd0
   2f6e4:	sub.w	r3, r0, r9
   2f6e8:	cbnz	r2, 2f73e <btrfs_abort_transaction@@Base+0xf42>
   2f6ea:	mov	r2, r9
   2f6ec:	mov	r1, sl
   2f6ee:	mov	r0, r7
   2f6f0:	bl	19b36 <extent_buffer_bitmap_set@@Base>
   2f6f4:	mov	r0, r7
   2f6f6:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   2f6fa:	ldr	r2, [sp, #32]
   2f6fc:	ldr	r3, [sp, #16]
   2f6fe:	ldr	r1, [sp, #36]	; 0x24
   2f700:	subs	r3, r3, r2
   2f702:	ldr	r2, [sp, #20]
   2f704:	sbc.w	r2, r2, r1
   2f708:	ldr	r1, [sp, #8]
   2f70a:	adds	r3, r1, r3
   2f70c:	str	r3, [sp, #8]
   2f70e:	ldr	r3, [sp, #12]
   2f710:	adc.w	r3, r2, r3
   2f714:	str	r3, [sp, #12]
   2f716:	ldrd	r2, r3, [sp, #8]
   2f71a:	orrs	r3, r2
   2f71c:	beq.n	2f74a <btrfs_abort_transaction@@Base+0xf4e>
   2f71e:	mov	r2, r4
   2f720:	mov	r1, r8
   2f722:	mov	r0, r6
   2f724:	bl	2eb30 <btrfs_abort_transaction@@Base+0x334>
   2f728:	mov	r3, r0
   2f72a:	cmp	r0, #0
   2f72c:	bne.w	2f55e <btrfs_abort_transaction@@Base+0xd62>
   2f730:	ldrd	r2, r3, [sp, #32]
   2f734:	strd	r2, r3, [sp, #16]
   2f738:	b.n	2f5d6 <btrfs_abort_transaction@@Base+0xdda>
   2f73a:	movs	r3, #0
   2f73c:	b.n	2f64e <btrfs_abort_transaction@@Base+0xe52>
   2f73e:	mov	r2, r9
   2f740:	mov	r1, sl
   2f742:	mov	r0, r7
   2f744:	bl	19b7e <extent_buffer_bitmap_clear@@Base>
   2f748:	b.n	2f6f4 <btrfs_abort_transaction@@Base+0xef8>
   2f74a:	ldr	r2, [sp, #92]	; 0x5c
   2f74c:	ldr	r3, [sp, #192]	; 0xc0
   2f74e:	ldrd	r1, r0, [r5, #40]	; 0x28
   2f752:	adds	r3, r3, r2
   2f754:	ldr	r2, [sp, #196]	; 0xc4
   2f756:	str	r3, [sp, #40]	; 0x28
   2f758:	ldr	r3, [sp, #96]	; 0x60
   2f75a:	adc.w	r3, r2, r3
   2f75e:	str	r3, [sp, #44]	; 0x2c
   2f760:	ldr.w	r3, [r5, #49]	; 0x31
   2f764:	ldr.w	r2, [r5, #53]	; 0x35
   2f768:	adds	r3, r3, r1
   2f76a:	str	r3, [sp, #72]	; 0x48
   2f76c:	adc.w	r3, r2, r0
   2f770:	str	r3, [sp, #76]	; 0x4c
   2f772:	ldrd	r0, r1, [sp, #72]	; 0x48
   2f776:	ldrd	r2, r3, [sp, #40]	; 0x28
   2f77a:	cmp	r3, r1
   2f77c:	it	eq
   2f77e:	cmpeq	r2, r0
   2f780:	bcs.n	2f802 <btrfs_abort_transaction@@Base+0x1006>
   2f782:	ldr	r2, [r4, #32]
   2f784:	add	r1, sp, #108	; 0x6c
   2f786:	ldr	r0, [r4, #0]
   2f788:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2f78c:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2f790:	ldr.w	r2, [sp, #117]	; 0x75
   2f794:	ldr.w	r1, [sp, #121]	; 0x79
   2f798:	adds	r3, r3, r2
   2f79a:	str	r3, [sp, #80]	; 0x50
   2f79c:	adc.w	r3, r0, r1
   2f7a0:	str	r3, [sp, #84]	; 0x54
   2f7a2:	ldrd	r0, r1, [sp, #80]	; 0x50
   2f7a6:	ldrd	r2, r3, [sp, #40]	; 0x28
   2f7aa:	cmp	r3, r1
   2f7ac:	it	eq
   2f7ae:	cmpeq	r2, r0
   2f7b0:	bcs.n	2f7f0 <btrfs_abort_transaction@@Base+0xff4>
   2f7b2:	ldrd	r2, r3, [sp, #40]	; 0x28
   2f7b6:	mov	r0, r4
   2f7b8:	bl	2e9f6 <btrfs_abort_transaction@@Base+0x1fa>
   2f7bc:	ldr	r3, [sp, #68]	; 0x44
   2f7be:	ldr	r2, [sp, #208]	; 0xd0
   2f7c0:	subs	r3, #1
   2f7c2:	it	ne
   2f7c4:	movne	r3, #1
   2f7c6:	cbz	r2, 2f808 <btrfs_abort_transaction@@Base+0x100c>
   2f7c8:	cmp	r0, #1
   2f7ca:	ite	ne
   2f7cc:	negne	r3, r3
   2f7ce:	rsbeq	r3, r3, #1
   2f7d2:	mov	r0, r4
   2f7d4:	str	r3, [sp, #8]
   2f7d6:	bl	1b2dc <btrfs_release_path@@Base>
   2f7da:	ldr	r3, [sp, #8]
   2f7dc:	cmp	r3, #0
   2f7de:	beq.w	2f55e <btrfs_abort_transaction@@Base+0xd62>
   2f7e2:	mov	r2, r4
   2f7e4:	mov	r1, r5
   2f7e6:	mov	r0, r6
   2f7e8:	bl	2ebe0 <btrfs_abort_transaction@@Base+0x3e4>
   2f7ec:	mov	r3, r0
   2f7ee:	b.n	2f55e <btrfs_abort_transaction@@Base+0xd62>
   2f7f0:	mov	r2, r4
   2f7f2:	mov	r1, r8
   2f7f4:	mov	r0, r6
   2f7f6:	bl	2eb30 <btrfs_abort_transaction@@Base+0x334>
   2f7fa:	mov	r3, r0
   2f7fc:	cmp	r0, #0
   2f7fe:	beq.n	2f7b2 <btrfs_abort_transaction@@Base+0xfb6>
   2f800:	b.n	2f55e <btrfs_abort_transaction@@Base+0xd62>
   2f802:	mov.w	r0, #4294967295	; 0xffffffff
   2f806:	b.n	2f7bc <btrfs_abort_transaction@@Base+0xfc0>
   2f808:	cmp	r0, #1
   2f80a:	it	eq
   2f80c:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2f810:	b.n	2f7d2 <btrfs_abort_transaction@@Base+0xfd6>
   2f812:	mov	r0, r3
   2f814:	add	sp, #156	; 0x9c
   2f816:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f81a:	nop
   2f81c:	ldr	r0, [sp, #600]	; 0x258
   2f81e:	movs	r3, r0
   2f820:	lsls	r4, r7, #9
   2f822:	movs	r0, r0
   2f824:	str	r7, [sp, #824]	; 0x338
   2f826:	movs	r3, r0
   2f828:	ldrh	r5, [r6, r4]
   2f82a:	movs	r1, r0
   2f82c:	ldrsb	r5, [r6, r0]
   2f82e:	movs	r1, r0
   2f830:	ldrsb	r2, [r0, r5]
   2f832:	movs	r1, r0
   2f834:	ldrsb	r4, [r1, r5]
   2f836:	movs	r1, r0
   2f838:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f83c:	sub	sp, #116	; 0x74
   2f83e:	mov	r5, r2
   2f840:	ldr	r2, [pc, #1000]	; (2fc2c <btrfs_abort_transaction@@Base+0x1430>)
   2f842:	ldr	r3, [sp, #160]	; 0xa0
   2f844:	mov	r6, r1
   2f846:	add	r2, pc
   2f848:	ldr	r1, [r0, #0]
   2f84a:	mov.w	r8, #0
   2f84e:	mov	r7, r0
   2f850:	str	r3, [sp, #48]	; 0x30
   2f852:	mov	r0, r8
   2f854:	ldr	r3, [sp, #164]	; 0xa4
   2f856:	str	r3, [sp, #52]	; 0x34
   2f858:	ldr	r3, [pc, #980]	; (2fc30 <btrfs_abort_transaction@@Base+0x1434>)
   2f85a:	ldr	r3, [r2, r3]
   2f85c:	mov	r2, r6
   2f85e:	ldr	r3, [r3, #0]
   2f860:	str	r3, [sp, #108]	; 0x6c
   2f862:	mov.w	r3, #0
   2f866:	str.w	r8, [sp]
   2f86a:	mov	r3, r5
   2f86c:	ldr	r1, [r1, #48]	; 0x30
   2f86e:	bl	2e86c <btrfs_abort_transaction@@Base+0x70>
   2f872:	cmn.w	r0, #4096	; 0x1000
   2f876:	bls.n	2f890 <btrfs_abort_transaction@@Base+0x1094>
   2f878:	mov	r4, r0
   2f87a:	ldr	r2, [pc, #952]	; (2fc34 <btrfs_abort_transaction@@Base+0x1438>)
   2f87c:	ldr	r3, [pc, #944]	; (2fc30 <btrfs_abort_transaction@@Base+0x1434>)
   2f87e:	add	r2, pc
   2f880:	ldr	r3, [r2, r3]
   2f882:	ldr	r2, [r3, #0]
   2f884:	ldr	r3, [sp, #108]	; 0x6c
   2f886:	eors	r2, r3
   2f888:	beq.w	2fc22 <btrfs_abort_transaction@@Base+0x1426>
   2f88c:	blx	88e4 <__stack_chk_fail@plt>
   2f890:	ldr	r4, [r5, #0]
   2f892:	add	r4, r0
   2f894:	mov	r0, r5
   2f896:	ldr	r4, [r4, #100]	; 0x64
   2f898:	bl	1b2dc <btrfs_release_path@@Base>
   2f89c:	lsls	r4, r4, #31
   2f89e:	bpl.n	2f8c0 <btrfs_abort_transaction@@Base+0x10c4>
   2f8a0:	ldr	r3, [sp, #48]	; 0x30
   2f8a2:	mov	r2, r5
   2f8a4:	mov	r1, r6
   2f8a6:	mov	r0, r7
   2f8a8:	str.w	r8, [sp, #16]
   2f8ac:	str	r3, [sp, #8]
   2f8ae:	ldr	r3, [sp, #52]	; 0x34
   2f8b0:	str	r3, [sp, #12]
   2f8b2:	ldrd	r3, r4, [sp, #152]	; 0x98
   2f8b6:	strd	r3, r4, [sp]
   2f8ba:	bl	2f48c <btrfs_abort_transaction@@Base+0xc90>
   2f8be:	b.n	2f878 <btrfs_abort_transaction@@Base+0x107c>
   2f8c0:	ldr	r3, [r7, #0]
   2f8c2:	ldrd	r0, r1, [sp, #152]	; 0x98
   2f8c6:	ldr.w	sl, [r3, #48]	; 0x30
   2f8ca:	ldrd	r3, r4, [sp, #152]	; 0x98
   2f8ce:	strd	r3, r4, [sp, #88]	; 0x58
   2f8d2:	movs	r3, #199	; 0xc7
   2f8d4:	strb.w	r3, [sp, #96]	; 0x60
   2f8d8:	ldr	r3, [sp, #48]	; 0x30
   2f8da:	str.w	r3, [sp, #97]	; 0x61
   2f8de:	ldr	r3, [sp, #52]	; 0x34
   2f8e0:	str.w	r3, [sp, #101]	; 0x65
   2f8e4:	ldrd	r2, r3, [r6, #40]	; 0x28
   2f8e8:	cmp	r1, r3
   2f8ea:	it	eq
   2f8ec:	cmpeq	r0, r2
   2f8ee:	beq.n	2f974 <btrfs_abort_transaction@@Base+0x1178>
   2f8f0:	ldr	r3, [sp, #152]	; 0x98
   2f8f2:	add.w	r8, sp, #68	; 0x44
   2f8f6:	mov.w	r1, #4294967295	; 0xffffffff
   2f8fa:	mov	r0, r7
   2f8fc:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2f900:	ldr	r3, [sp, #156]	; 0x9c
   2f902:	strb.w	r1, [sp, #77]	; 0x4d
   2f906:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2f90a:	str	r1, [sp, #0]
   2f90c:	strd	r2, r3, [sp, #68]	; 0x44
   2f910:	mov	r1, sl
   2f912:	movs	r2, #255	; 0xff
   2f914:	mov	r3, r5
   2f916:	strb.w	r2, [sp, #76]	; 0x4c
   2f91a:	strb.w	r2, [sp, #78]	; 0x4e
   2f91e:	strb.w	r2, [sp, #79]	; 0x4f
   2f922:	strb.w	r2, [sp, #80]	; 0x50
   2f926:	strb.w	r2, [sp, #81]	; 0x51
   2f92a:	strb.w	r2, [sp, #82]	; 0x52
   2f92e:	strb.w	r2, [sp, #83]	; 0x53
   2f932:	strb.w	r2, [sp, #84]	; 0x54
   2f936:	mov	r2, r8
   2f938:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   2f93c:	mov	r4, r0
   2f93e:	cmp	r0, #0
   2f940:	bne.n	2f87a <btrfs_abort_transaction@@Base+0x107e>
   2f942:	ldr	r2, [r5, #32]
   2f944:	mov	r1, r8
   2f946:	ldr	r0, [r5, #0]
   2f948:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2f94c:	ldrb.w	r3, [sp, #76]	; 0x4c
   2f950:	cmp	r3, #199	; 0xc7
   2f952:	beq.n	2f97a <btrfs_abort_transaction@@Base+0x117e>
   2f954:	sub.w	r0, r3, #198	; 0xc6
   2f958:	ldr	r1, [pc, #732]	; (2fc38 <btrfs_abort_transaction@@Base+0x143c>)
   2f95a:	negs	r3, r0
   2f95c:	movw	r2, #857	; 0x359
   2f960:	adcs	r3, r0
   2f962:	ldr	r0, [pc, #728]	; (2fc3c <btrfs_abort_transaction@@Base+0x1440>)
   2f964:	add	r1, pc
   2f966:	add	r0, pc
   2f968:	adds	r1, #123	; 0x7b
   2f96a:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f96e:	mov	r0, r5
   2f970:	bl	1b2dc <btrfs_release_path@@Base>
   2f974:	mov.w	fp, #1
   2f978:	b.n	2fa4a <btrfs_abort_transaction@@Base+0x124e>
   2f97a:	ldrd	r8, r9, [sp, #68]	; 0x44
   2f97e:	ldr.w	r3, [sp, #77]	; 0x4d
   2f982:	ldr.w	r2, [sp, #81]	; 0x51
   2f986:	adds.w	r3, r3, r8
   2f98a:	str	r3, [sp, #32]
   2f98c:	adc.w	r3, r2, r9
   2f990:	str	r3, [sp, #36]	; 0x24
   2f992:	ldrd	r2, r3, [r6, #40]	; 0x28
   2f996:	cmp	r9, r3
   2f998:	it	eq
   2f99a:	cmpeq	r8, r2
   2f99c:	bcc.w	2fb3c <btrfs_abort_transaction@@Base+0x1340>
   2f9a0:	ldrd	r0, r1, [sp, #32]
   2f9a4:	cmp	r3, r1
   2f9a6:	it	eq
   2f9a8:	cmpeq	r2, r0
   2f9aa:	ite	cc
   2f9ac:	movcc	r3, #1
   2f9ae:	movcs	r3, #0
   2f9b0:	ldr	r1, [pc, #652]	; (2fc40 <btrfs_abort_transaction@@Base+0x1444>)
   2f9b2:	mov.w	r2, #864	; 0x360
   2f9b6:	ldr	r0, [pc, #652]	; (2fc44 <btrfs_abort_transaction@@Base+0x1448>)
   2f9b8:	add	r1, pc
   2f9ba:	adds	r1, #123	; 0x7b
   2f9bc:	add	r0, pc
   2f9be:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f9c2:	ldrd	r2, r3, [sp, #152]	; 0x98
   2f9c6:	cmp	r9, r3
   2f9c8:	it	eq
   2f9ca:	cmpeq	r8, r2
   2f9cc:	bcs.n	2f9e2 <btrfs_abort_transaction@@Base+0x11e6>
   2f9ce:	mov	r4, r3
   2f9d0:	mov	r3, r2
   2f9d2:	ldrd	r1, r2, [sp, #32]
   2f9d6:	cmp	r4, r2
   2f9d8:	it	eq
   2f9da:	cmpeq	r3, r1
   2f9dc:	ite	cs
   2f9de:	movcs	r4, #1
   2f9e0:	movcc	r4, #0
   2f9e2:	ldr	r1, [pc, #612]	; (2fc48 <btrfs_abort_transaction@@Base+0x144c>)
   2f9e4:	mov	r3, r4
   2f9e6:	ldr	r0, [pc, #612]	; (2fc4c <btrfs_abort_transaction@@Base+0x1450>)
   2f9e8:	movw	r2, #866	; 0x362
   2f9ec:	add	r1, pc
   2f9ee:	adds	r1, #123	; 0x7b
   2f9f0:	add	r0, pc
   2f9f2:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2f9f6:	ldrd	r3, r4, [sp, #152]	; 0x98
   2f9fa:	ldrd	r1, r2, [sp, #32]
   2f9fe:	cmp	r4, r2
   2fa00:	mov.w	r4, #1
   2fa04:	it	eq
   2fa06:	cmpeq	r3, r1
   2fa08:	bne.n	2fa42 <btrfs_abort_transaction@@Base+0x1246>
   2fa0a:	str	r4, [sp, #0]
   2fa0c:	mov	r2, r5
   2fa0e:	ldr	r3, [r5, #32]
   2fa10:	mov	r1, sl
   2fa12:	mov	r0, r7
   2fa14:	bl	1e87c <btrfs_del_items@@Base>
   2fa18:	mov	r4, r0
   2fa1a:	cmp	r0, #0
   2fa1c:	bne.w	2f87a <btrfs_abort_transaction@@Base+0x107e>
   2fa20:	ldr.w	r3, [sp, #97]	; 0x61
   2fa24:	ldr.w	r1, [sp, #77]	; 0x4d
   2fa28:	ldr.w	r2, [sp, #101]	; 0x65
   2fa2c:	ldr.w	r0, [sp, #81]	; 0x51
   2fa30:	adds	r3, r3, r1
   2fa32:	strd	r8, r9, [sp, #88]	; 0x58
   2fa36:	adc.w	r2, r0, r2
   2fa3a:	str.w	r3, [sp, #97]	; 0x61
   2fa3e:	str.w	r2, [sp, #101]	; 0x65
   2fa42:	mov	r0, r5
   2fa44:	mov	fp, r4
   2fa46:	bl	1b2dc <btrfs_release_path@@Base>
   2fa4a:	ldr	r2, [sp, #48]	; 0x30
   2fa4c:	ldr	r3, [sp, #152]	; 0x98
   2fa4e:	ldrd	r1, r0, [r6, #40]	; 0x28
   2fa52:	adds	r3, r3, r2
   2fa54:	ldr	r2, [sp, #156]	; 0x9c
   2fa56:	str	r3, [sp, #24]
   2fa58:	ldr	r3, [sp, #52]	; 0x34
   2fa5a:	adc.w	r3, r2, r3
   2fa5e:	str	r3, [sp, #28]
   2fa60:	ldr.w	r3, [r6, #49]	; 0x31
   2fa64:	ldr.w	r2, [r6, #53]	; 0x35
   2fa68:	adds	r3, r3, r1
   2fa6a:	str	r3, [sp, #56]	; 0x38
   2fa6c:	adc.w	r3, r2, r0
   2fa70:	str	r3, [sp, #60]	; 0x3c
   2fa72:	ldrd	r1, r2, [sp, #56]	; 0x38
   2fa76:	ldrd	r3, r4, [sp, #24]
   2fa7a:	cmp	r4, r2
   2fa7c:	it	eq
   2fa7e:	cmpeq	r3, r1
   2fa80:	beq.n	2fb00 <btrfs_abort_transaction@@Base+0x1304>
   2fa82:	ldr	r3, [sp, #24]
   2fa84:	add.w	r8, sp, #68	; 0x44
   2fa88:	movs	r2, #255	; 0xff
   2fa8a:	mov.w	r1, #4294967295	; 0xffffffff
   2fa8e:	strb.w	r2, [sp, #76]	; 0x4c
   2fa92:	mov	r0, r7
   2fa94:	str	r3, [sp, #68]	; 0x44
   2fa96:	ldr	r3, [sp, #28]
   2fa98:	strb.w	r1, [sp, #77]	; 0x4d
   2fa9c:	strb.w	r2, [sp, #78]	; 0x4e
   2faa0:	str	r3, [sp, #72]	; 0x48
   2faa2:	mov	r3, r5
   2faa4:	strb.w	r2, [sp, #79]	; 0x4f
   2faa8:	strb.w	r2, [sp, #80]	; 0x50
   2faac:	strb.w	r2, [sp, #81]	; 0x51
   2fab0:	strb.w	r2, [sp, #82]	; 0x52
   2fab4:	strb.w	r2, [sp, #83]	; 0x53
   2fab8:	strb.w	r2, [sp, #84]	; 0x54
   2fabc:	mov	r2, r8
   2fabe:	str	r1, [sp, #0]
   2fac0:	mov	r1, sl
   2fac2:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   2fac6:	mov	r4, r0
   2fac8:	cmp	r0, #0
   2faca:	bne.w	2f87a <btrfs_abort_transaction@@Base+0x107e>
   2face:	ldr	r2, [r5, #32]
   2fad0:	mov	r1, r8
   2fad2:	ldr	r0, [r5, #0]
   2fad4:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2fad8:	ldrb.w	r3, [sp, #76]	; 0x4c
   2fadc:	cmp	r3, #199	; 0xc7
   2fade:	beq.n	2fb40 <btrfs_abort_transaction@@Base+0x1344>
   2fae0:	sub.w	r1, r3, #198	; 0xc6
   2fae4:	ldr	r0, [pc, #360]	; (2fc50 <btrfs_abort_transaction@@Base+0x1454>)
   2fae6:	negs	r3, r1
   2fae8:	mov.w	r2, #896	; 0x380
   2faec:	adcs	r3, r1
   2faee:	ldr	r1, [pc, #356]	; (2fc54 <btrfs_abort_transaction@@Base+0x1458>)
   2faf0:	add	r0, pc
   2faf2:	add	r1, pc
   2faf4:	adds	r1, #123	; 0x7b
   2faf6:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2fafa:	mov	r0, r5
   2fafc:	bl	1b2dc <btrfs_release_path@@Base>
   2fb00:	movs	r3, #0
   2fb02:	mov	r2, r5
   2fb04:	str	r3, [sp, #64]	; 0x40
   2fb06:	mov	r1, sl
   2fb08:	movs	r3, #1
   2fb0a:	mov	r0, r7
   2fb0c:	str	r3, [sp, #4]
   2fb0e:	add	r3, sp, #64	; 0x40
   2fb10:	str	r3, [sp, #0]
   2fb12:	add	r3, sp, #88	; 0x58
   2fb14:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2fb18:	mov	r4, r0
   2fb1a:	cmp	r0, #0
   2fb1c:	bne.w	2f87a <btrfs_abort_transaction@@Base+0x107e>
   2fb20:	mov	r0, r5
   2fb22:	bl	1b2dc <btrfs_release_path@@Base>
   2fb26:	cmp.w	fp, #0
   2fb2a:	beq.w	2f87a <btrfs_abort_transaction@@Base+0x107e>
   2fb2e:	mov	r3, fp
   2fb30:	mov	r2, r5
   2fb32:	mov	r1, r6
   2fb34:	mov	r0, r7
   2fb36:	bl	2ebe0 <btrfs_abort_transaction@@Base+0x3e4>
   2fb3a:	b.n	2f878 <btrfs_abort_transaction@@Base+0x107c>
   2fb3c:	mov	r3, r4
   2fb3e:	b.n	2f9b0 <btrfs_abort_transaction@@Base+0x11b4>
   2fb40:	ldrd	r8, r9, [sp, #68]	; 0x44
   2fb44:	ldr.w	r3, [sp, #77]	; 0x4d
   2fb48:	ldr.w	r2, [sp, #81]	; 0x51
   2fb4c:	adds.w	r3, r3, r8
   2fb50:	str	r3, [sp, #40]	; 0x28
   2fb52:	adc.w	r3, r2, r9
   2fb56:	str	r3, [sp, #44]	; 0x2c
   2fb58:	ldrd	r2, r3, [r6, #40]	; 0x28
   2fb5c:	cmp	r9, r3
   2fb5e:	it	eq
   2fb60:	cmpeq	r8, r2
   2fb62:	bcc.n	2fc1a <btrfs_abort_transaction@@Base+0x141e>
   2fb64:	ldrd	r0, r1, [sp, #40]	; 0x28
   2fb68:	cmp	r3, r1
   2fb6a:	it	eq
   2fb6c:	cmpeq	r2, r0
   2fb6e:	ite	cc
   2fb70:	movcc	r3, #1
   2fb72:	movcs	r3, #0
   2fb74:	ldr	r1, [pc, #224]	; (2fc58 <btrfs_abort_transaction@@Base+0x145c>)
   2fb76:	movw	r2, #903	; 0x387
   2fb7a:	ldr	r0, [pc, #224]	; (2fc5c <btrfs_abort_transaction@@Base+0x1460>)
   2fb7c:	add	r1, pc
   2fb7e:	adds	r1, #123	; 0x7b
   2fb80:	add	r0, pc
   2fb82:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2fb86:	ldrd	r2, r3, [sp, #152]	; 0x98
   2fb8a:	cmp	r9, r3
   2fb8c:	it	eq
   2fb8e:	cmpeq	r8, r2
   2fb90:	bcs.n	2fb9e <btrfs_abort_transaction@@Base+0x13a2>
   2fb92:	ldrd	r0, r1, [sp, #40]	; 0x28
   2fb96:	cmp	r3, r1
   2fb98:	it	eq
   2fb9a:	cmpeq	r2, r0
   2fb9c:	bcs.n	2fc1e <btrfs_abort_transaction@@Base+0x1422>
   2fb9e:	ldrd	r2, r3, [sp, #24]
   2fba2:	cmp	r9, r3
   2fba4:	it	eq
   2fba6:	cmpeq	r8, r2
   2fba8:	bcc.n	2fbbe <btrfs_abort_transaction@@Base+0x13c2>
   2fbaa:	mov	r4, r3
   2fbac:	mov	r3, r2
   2fbae:	ldrd	r1, r2, [sp, #40]	; 0x28
   2fbb2:	cmp	r4, r2
   2fbb4:	it	eq
   2fbb6:	cmpeq	r3, r1
   2fbb8:	ite	cc
   2fbba:	movcc	r4, #1
   2fbbc:	movcs	r4, #0
   2fbbe:	ldr	r1, [pc, #160]	; (2fc60 <btrfs_abort_transaction@@Base+0x1464>)
   2fbc0:	mov	r3, r4
   2fbc2:	ldr	r0, [pc, #160]	; (2fc64 <btrfs_abort_transaction@@Base+0x1468>)
   2fbc4:	movw	r2, #905	; 0x389
   2fbc8:	add	r1, pc
   2fbca:	adds	r1, #123	; 0x7b
   2fbcc:	add	r0, pc
   2fbce:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2fbd2:	ldrd	r3, r4, [sp, #24]
   2fbd6:	cmp	r4, r9
   2fbd8:	it	eq
   2fbda:	cmpeq	r3, r8
   2fbdc:	bne.n	2fafa <btrfs_abort_transaction@@Base+0x12fe>
   2fbde:	movs	r3, #1
   2fbe0:	mov	r2, r5
   2fbe2:	str	r3, [sp, #0]
   2fbe4:	mov	r1, sl
   2fbe6:	ldr	r3, [r5, #32]
   2fbe8:	mov	r0, r7
   2fbea:	bl	1e87c <btrfs_del_items@@Base>
   2fbee:	mov	r4, r0
   2fbf0:	cmp	r0, #0
   2fbf2:	bne.w	2f87a <btrfs_abort_transaction@@Base+0x107e>
   2fbf6:	ldr.w	r3, [sp, #97]	; 0x61
   2fbfa:	add.w	fp, fp, #4294967295	; 0xffffffff
   2fbfe:	ldr.w	r1, [sp, #77]	; 0x4d
   2fc02:	ldr.w	r2, [sp, #101]	; 0x65
   2fc06:	ldr.w	r0, [sp, #81]	; 0x51
   2fc0a:	adds	r3, r3, r1
   2fc0c:	str.w	r3, [sp, #97]	; 0x61
   2fc10:	adc.w	r2, r0, r2
   2fc14:	str.w	r2, [sp, #101]	; 0x65
   2fc18:	b.n	2fafa <btrfs_abort_transaction@@Base+0x12fe>
   2fc1a:	mov	r3, r4
   2fc1c:	b.n	2fb74 <btrfs_abort_transaction@@Base+0x1378>
   2fc1e:	movs	r4, #1
   2fc20:	b.n	2fbbe <btrfs_abort_transaction@@Base+0x13c2>
   2fc22:	mov	r0, r4
   2fc24:	add	sp, #116	; 0x74
   2fc26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fc2a:	nop
   2fc2c:	str	r4, [sp, #936]	; 0x3a8
   2fc2e:	movs	r3, r0
   2fc30:	lsls	r4, r7, #9
   2fc32:	movs	r0, r0
   2fc34:	str	r4, [sp, #712]	; 0x2c8
   2fc36:	movs	r3, r0
   2fc38:	ldrsb	r7, [r3, r6]
   2fc3a:	movs	r1, r0
   2fc3c:	strb	r0, [r6, r1]
   2fc3e:	movs	r1, r0
   2fc40:	ldrsb	r3, [r1, r5]
   2fc42:	movs	r1, r0
   2fc44:	strb	r0, [r0, r1]
   2fc46:	movs	r1, r0
   2fc48:	ldrsb	r7, [r2, r4]
   2fc4a:	movs	r1, r0
   2fc4c:	strb	r6, [r3, r1]
   2fc4e:	movs	r1, r0
   2fc50:	strh	r6, [r4, r3]
   2fc52:	movs	r1, r0
   2fc54:	ldrsb	r1, [r2, r0]
   2fc56:	movs	r1, r0
   2fc58:	strb	r7, [r0, r6]
   2fc5a:	movs	r1, r0
   2fc5c:	strh	r4, [r7, r1]
   2fc5e:	movs	r1, r0
   2fc60:	strb	r3, [r7, r4]
   2fc62:	movs	r1, r0
   2fc64:	strh	r4, [r5, r2]
   2fc66:	movs	r1, r0

0002fc68 <remove_from_free_space_tree@@Base>:
   2fc68:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2fc6c:	sub	sp, #92	; 0x5c
   2fc6e:	movs	r4, #0
   2fc70:	mov	r6, r0
   2fc72:	strd	r2, r3, [sp, #24]
   2fc76:	ldrd	sl, r3, [sp, #128]	; 0x80
   2fc7a:	ldr	r2, [pc, #616]	; (2fee4 <remove_from_free_space_tree@@Base+0x27c>)
   2fc7c:	str	r3, [sp, #52]	; 0x34
   2fc7e:	add	r2, pc
   2fc80:	ldr	r3, [pc, #612]	; (2fee8 <remove_from_free_space_tree@@Base+0x280>)
   2fc82:	ldr	r3, [r2, r3]
   2fc84:	ldr	r3, [r3, #0]
   2fc86:	str	r3, [sp, #84]	; 0x54
   2fc88:	mov.w	r3, #0
   2fc8c:	ldr	r3, [r0, #0]
   2fc8e:	ldr.w	r3, [r3, #308]	; 0x134
   2fc92:	ldr.w	r1, [r3, #180]	; 0xb4
   2fc96:	mov	r3, r4
   2fc98:	and.w	r2, r1, #1
   2fc9c:	orrs	r3, r2
   2fc9e:	beq.w	2fe52 <remove_from_free_space_tree@@Base+0x1ea>
   2fca2:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2fca6:	mov	r5, r0
   2fca8:	cmp	r0, #0
   2fcaa:	beq.w	2fed6 <remove_from_free_space_tree@@Base+0x26e>
   2fcae:	ldrd	r2, r3, [sp, #24]
   2fcb2:	ldr	r0, [r6, #0]
   2fcb4:	bl	2233c <btrfs_lookup_block_group@@Base>
   2fcb8:	mov	r8, r0
   2fcba:	cbnz	r0, 2fcce <remove_from_free_space_tree@@Base+0x66>
   2fcbc:	ldr	r1, [pc, #556]	; (2feec <remove_from_free_space_tree@@Base+0x284>)
   2fcbe:	movw	r2, #795	; 0x31b
   2fcc2:	ldr	r0, [pc, #556]	; (2fef0 <remove_from_free_space_tree@@Base+0x288>)
   2fcc4:	add	r1, pc
   2fcc6:	adds	r1, #145	; 0x91
   2fcc8:	add	r0, pc
   2fcca:	bl	2e980 <btrfs_abort_transaction@@Base+0x184>
   2fcce:	ldr	r1, [r6, #0]
   2fcd0:	mov	r2, r0
   2fcd2:	str	r4, [sp, #0]
   2fcd4:	mov	r3, r5
   2fcd6:	mov	r0, r4
   2fcd8:	ldr	r1, [r1, #48]	; 0x30
   2fcda:	bl	2e86c <btrfs_abort_transaction@@Base+0x70>
   2fcde:	cmn.w	r0, #4096	; 0x1000
   2fce2:	bls.n	2fce8 <remove_from_free_space_tree@@Base+0x80>
   2fce4:	mov	r4, r0
   2fce6:	b.n	2fe42 <remove_from_free_space_tree@@Base+0x1da>
   2fce8:	ldr	r4, [r5, #0]
   2fcea:	add	r4, r0
   2fcec:	mov	r0, r5
   2fcee:	ldr	r4, [r4, #100]	; 0x64
   2fcf0:	bl	1b2dc <btrfs_release_path@@Base>
   2fcf4:	lsls	r0, r4, #31
   2fcf6:	bpl.n	2fd18 <remove_from_free_space_tree@@Base+0xb0>
   2fcf8:	movs	r3, #1
   2fcfa:	str	r3, [sp, #16]
   2fcfc:	ldr	r3, [sp, #52]	; 0x34
   2fcfe:	mov	r2, r5
   2fd00:	mov	r1, r8
   2fd02:	mov	r0, r6
   2fd04:	str.w	sl, [sp, #8]
   2fd08:	str	r3, [sp, #12]
   2fd0a:	ldrd	r3, r4, [sp, #24]
   2fd0e:	strd	r3, r4, [sp]
   2fd12:	bl	2f48c <btrfs_abort_transaction@@Base+0xc90>
   2fd16:	b.n	2fce4 <remove_from_free_space_tree@@Base+0x7c>
   2fd18:	ldr	r3, [r6, #0]
   2fd1a:	add.w	r7, sp, #73	; 0x49
   2fd1e:	add.w	fp, sp, #64	; 0x40
   2fd22:	mov.w	r2, #4294967295	; 0xffffffff
   2fd26:	mov	r0, r6
   2fd28:	strb.w	r2, [sp, #73]	; 0x49
   2fd2c:	ldr.w	r9, [r3, #48]	; 0x30
   2fd30:	ldrd	r3, r4, [sp, #24]
   2fd34:	mov	r1, r9
   2fd36:	strd	r3, r4, [sp, #64]	; 0x40
   2fd3a:	movs	r3, #255	; 0xff
   2fd3c:	strb	r3, [r7, #1]
   2fd3e:	strb	r3, [r7, #2]
   2fd40:	strb	r3, [r7, #3]
   2fd42:	strb	r3, [r7, #4]
   2fd44:	strb	r3, [r7, #5]
   2fd46:	strb	r3, [r7, #6]
   2fd48:	strb	r3, [r7, #7]
   2fd4a:	strb.w	r3, [sp, #72]	; 0x48
   2fd4e:	mov	r3, r5
   2fd50:	str	r2, [sp, #0]
   2fd52:	mov	r2, fp
   2fd54:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   2fd58:	mov	r4, r0
   2fd5a:	cmp	r0, #0
   2fd5c:	bne.n	2fe42 <remove_from_free_space_tree@@Base+0x1da>
   2fd5e:	ldr	r3, [sp, #24]
   2fd60:	mov	r1, fp
   2fd62:	ldr	r2, [sp, #28]
   2fd64:	adds.w	r3, r3, sl
   2fd68:	str	r3, [sp, #32]
   2fd6a:	ldr	r3, [sp, #52]	; 0x34
   2fd6c:	ldr	r0, [r5, #0]
   2fd6e:	adc.w	r3, r2, r3
   2fd72:	ldr	r2, [r5, #32]
   2fd74:	str	r3, [sp, #36]	; 0x24
   2fd76:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   2fd7a:	ldrb.w	r3, [sp, #72]	; 0x48
   2fd7e:	movw	r2, #691	; 0x2b3
   2fd82:	ldr	r0, [pc, #368]	; (2fef4 <remove_from_free_space_tree@@Base+0x28c>)
   2fd84:	sub.w	r1, r3, #199	; 0xc7
   2fd88:	negs	r3, r1
   2fd8a:	add	r0, pc
   2fd8c:	adcs	r3, r1
   2fd8e:	ldr	r1, [pc, #360]	; (2fef8 <remove_from_free_space_tree@@Base+0x290>)
   2fd90:	add	r1, pc
   2fd92:	adds	r1, #173	; 0xad
   2fd94:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2fd98:	ldrd	sl, fp, [sp, #64]	; 0x40
   2fd9c:	ldr.w	r3, [sp, #73]	; 0x49
   2fda0:	ldr.w	r2, [sp, #77]	; 0x4d
   2fda4:	adds.w	r3, r3, sl
   2fda8:	str	r3, [sp, #40]	; 0x28
   2fdaa:	adc.w	r3, r2, fp
   2fdae:	str	r3, [sp, #44]	; 0x2c
   2fdb0:	ldrd	r2, r3, [sp, #24]
   2fdb4:	cmp	r3, fp
   2fdb6:	it	eq
   2fdb8:	cmpeq	r2, sl
   2fdba:	bcc.n	2fdd0 <remove_from_free_space_tree@@Base+0x168>
   2fdbc:	ldrd	r3, r4, [sp, #40]	; 0x28
   2fdc0:	ldrd	r1, r2, [sp, #32]
   2fdc4:	cmp	r4, r2
   2fdc6:	it	eq
   2fdc8:	cmpeq	r3, r1
   2fdca:	ite	cs
   2fdcc:	movcs	r4, #1
   2fdce:	movcc	r4, #0
   2fdd0:	ldr	r1, [pc, #296]	; (2fefc <remove_from_free_space_tree@@Base+0x294>)
   2fdd2:	mov	r3, r4
   2fdd4:	ldr	r0, [pc, #296]	; (2ff00 <remove_from_free_space_tree@@Base+0x298>)
   2fdd6:	movw	r2, #695	; 0x2b7
   2fdda:	add	r1, pc
   2fddc:	adds	r1, #173	; 0xad
   2fdde:	add	r0, pc
   2fde0:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   2fde4:	movs	r3, #1
   2fde6:	mov	r2, r5
   2fde8:	str	r3, [sp, #0]
   2fdea:	mov	r1, r9
   2fdec:	ldr	r3, [r5, #32]
   2fdee:	mov	r0, r6
   2fdf0:	bl	1e87c <btrfs_del_items@@Base>
   2fdf4:	mov	r4, r0
   2fdf6:	cbnz	r0, 2fe42 <remove_from_free_space_tree@@Base+0x1da>
   2fdf8:	ldrd	r2, r3, [sp, #24]
   2fdfc:	cmp	fp, r3
   2fdfe:	it	eq
   2fe00:	cmpeq	sl, r2
   2fe02:	bcs.n	2fe66 <remove_from_free_space_tree@@Base+0x1fe>
   2fe04:	movs	r3, #199	; 0xc7
   2fe06:	strb.w	r3, [sp, #72]	; 0x48
   2fe0a:	ldr	r3, [sp, #24]
   2fe0c:	mov	r0, r5
   2fe0e:	strd	sl, fp, [sp, #64]	; 0x40
   2fe12:	subs.w	r2, r3, sl
   2fe16:	ldr	r3, [sp, #28]
   2fe18:	str.w	r2, [sp, #73]	; 0x49
   2fe1c:	sbc.w	r3, r3, fp
   2fe20:	str.w	r3, [sp, #77]	; 0x4d
   2fe24:	bl	1b2dc <btrfs_release_path@@Base>
   2fe28:	movs	r3, #1
   2fe2a:	mov	r2, r5
   2fe2c:	str	r3, [sp, #4]
   2fe2e:	mov	r1, r9
   2fe30:	add	r3, sp, #60	; 0x3c
   2fe32:	mov	r0, r6
   2fe34:	str	r3, [sp, #0]
   2fe36:	add	r3, sp, #64	; 0x40
   2fe38:	str	r4, [sp, #60]	; 0x3c
   2fe3a:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2fe3e:	mov	r4, r0
   2fe40:	cbz	r0, 2fe6a <remove_from_free_space_tree@@Base+0x202>
   2fe42:	mov	r0, r5
   2fe44:	bl	1b302 <btrfs_free_path@@Base>
   2fe48:	cbz	r4, 2fe52 <remove_from_free_space_tree@@Base+0x1ea>
   2fe4a:	mov	r1, r4
   2fe4c:	mov	r0, r6
   2fe4e:	bl	2e7fc <btrfs_abort_transaction@@Base>
   2fe52:	ldr	r2, [pc, #176]	; (2ff04 <remove_from_free_space_tree@@Base+0x29c>)
   2fe54:	ldr	r3, [pc, #144]	; (2fee8 <remove_from_free_space_tree@@Base+0x280>)
   2fe56:	add	r2, pc
   2fe58:	ldr	r3, [r2, r3]
   2fe5a:	ldr	r2, [r3, #0]
   2fe5c:	ldr	r3, [sp, #84]	; 0x54
   2fe5e:	eors	r2, r3
   2fe60:	beq.n	2fedc <remove_from_free_space_tree@@Base+0x274>
   2fe62:	blx	88e4 <__stack_chk_fail@plt>
   2fe66:	mov.w	r4, #4294967295	; 0xffffffff
   2fe6a:	ldrd	r2, r3, [sp, #32]
   2fe6e:	ldrd	r0, r1, [sp, #40]	; 0x28
   2fe72:	cmp	r3, r1
   2fe74:	it	eq
   2fe76:	cmpeq	r2, r0
   2fe78:	bcs.n	2febe <remove_from_free_space_tree@@Base+0x256>
   2fe7a:	strd	r2, r3, [sp, #64]	; 0x40
   2fe7e:	movs	r3, #199	; 0xc7
   2fe80:	ldr	r2, [sp, #32]
   2fe82:	mov	r0, r5
   2fe84:	strb.w	r3, [sp, #72]	; 0x48
   2fe88:	ldr	r3, [sp, #40]	; 0x28
   2fe8a:	ldr	r1, [sp, #36]	; 0x24
   2fe8c:	subs	r2, r3, r2
   2fe8e:	ldr	r3, [sp, #44]	; 0x2c
   2fe90:	str.w	r2, [sp, #73]	; 0x49
   2fe94:	sbc.w	r3, r3, r1
   2fe98:	str	r3, [r7, #4]
   2fe9a:	bl	1b2dc <btrfs_release_path@@Base>
   2fe9e:	movs	r3, #0
   2fea0:	mov	r2, r5
   2fea2:	str	r3, [sp, #60]	; 0x3c
   2fea4:	mov	r1, r9
   2fea6:	movs	r3, #1
   2fea8:	mov	r0, r6
   2feaa:	str	r3, [sp, #4]
   2feac:	add	r3, sp, #60	; 0x3c
   2feae:	str	r3, [sp, #0]
   2feb0:	add	r3, sp, #64	; 0x40
   2feb2:	bl	1e490 <btrfs_insert_empty_items@@Base>
   2feb6:	cmp	r0, #0
   2feb8:	bne.w	2fce4 <remove_from_free_space_tree@@Base+0x7c>
   2febc:	adds	r4, #1
   2febe:	mov	r0, r5
   2fec0:	bl	1b2dc <btrfs_release_path@@Base>
   2fec4:	cmp	r4, #0
   2fec6:	beq.n	2fe42 <remove_from_free_space_tree@@Base+0x1da>
   2fec8:	mov	r3, r4
   2feca:	mov	r2, r5
   2fecc:	mov	r1, r8
   2fece:	mov	r0, r6
   2fed0:	bl	2ebe0 <btrfs_abort_transaction@@Base+0x3e4>
   2fed4:	b.n	2fce4 <remove_from_free_space_tree@@Base+0x7c>
   2fed6:	mvn.w	r4, #11
   2feda:	b.n	2fe42 <remove_from_free_space_tree@@Base+0x1da>
   2fedc:	mov	r0, r4
   2fede:	add	sp, #92	; 0x5c
   2fee0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fee4:	str	r0, [sp, #712]	; 0x2c8
   2fee6:	movs	r3, r0
   2fee8:	lsls	r4, r7, #9
   2feea:	movs	r0, r0
   2feec:	strb	r7, [r7, r0]
   2feee:	movs	r1, r0
   2fef0:	lsrs	r6, r3, #31
   2fef2:	movs	r1, r0
   2fef4:	str	r5, [r0, r5]
   2fef6:	movs	r1, r0
   2fef8:	strh	r3, [r6, r5]
   2fefa:	movs	r1, r0
   2fefc:	strh	r1, [r5, r4]
   2fefe:	movs	r1, r0
   2ff00:	str	r1, [r3, r4]
   2ff02:	movs	r1, r0
   2ff04:	ldrh	r2, [r3, #54]	; 0x36
   2ff06:	movs	r3, r0

0002ff08 <add_to_free_space_tree@@Base>:
   2ff08:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   2ff0c:	mov	r7, r3
   2ff0e:	ldr	r3, [r0, #0]
   2ff10:	mov	sl, r2
   2ff12:	movs	r4, #0
   2ff14:	mov	r5, r0
   2ff16:	ldr.w	r3, [r3, #308]	; 0x134
   2ff1a:	ldr.w	r1, [r3, #180]	; 0xb4
   2ff1e:	mov	r3, r4
   2ff20:	and.w	r2, r1, #1
   2ff24:	orrs	r3, r2
   2ff26:	beq.n	2ff76 <add_to_free_space_tree@@Base+0x6e>
   2ff28:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2ff2c:	mov	r6, r0
   2ff2e:	cbz	r0, 2ff7e <add_to_free_space_tree@@Base+0x76>
   2ff30:	ldr	r0, [r5, #0]
   2ff32:	mov	r2, sl
   2ff34:	mov	r3, r7
   2ff36:	bl	2233c <btrfs_lookup_block_group@@Base>
   2ff3a:	mov	r1, r0
   2ff3c:	cbnz	r0, 2ff50 <add_to_free_space_tree@@Base+0x48>
   2ff3e:	ldr	r1, [pc, #68]	; (2ff84 <add_to_free_space_tree@@Base+0x7c>)
   2ff40:	mov.w	r2, #976	; 0x3d0
   2ff44:	ldr	r0, [pc, #64]	; (2ff88 <add_to_free_space_tree@@Base+0x80>)
   2ff46:	add	r1, pc
   2ff48:	adds	r1, #198	; 0xc6
   2ff4a:	add	r0, pc
   2ff4c:	bl	2e980 <btrfs_abort_transaction@@Base+0x184>
   2ff50:	ldrd	r8, r9, [sp, #48]	; 0x30
   2ff54:	mov	r2, r6
   2ff56:	mov	r0, r5
   2ff58:	strd	sl, r7, [sp]
   2ff5c:	strd	r8, r9, [sp, #8]
   2ff60:	bl	2f838 <btrfs_abort_transaction@@Base+0x103c>
   2ff64:	mov	r4, r0
   2ff66:	mov	r0, r6
   2ff68:	bl	1b302 <btrfs_free_path@@Base>
   2ff6c:	cbz	r4, 2ff76 <add_to_free_space_tree@@Base+0x6e>
   2ff6e:	mov	r1, r4
   2ff70:	mov	r0, r5
   2ff72:	bl	2e7fc <btrfs_abort_transaction@@Base>
   2ff76:	mov	r0, r4
   2ff78:	add	sp, #16
   2ff7a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2ff7e:	mvn.w	r4, #11
   2ff82:	b.n	2ff66 <add_to_free_space_tree@@Base+0x5e>
   2ff84:	str	r5, [r7, r6]
   2ff86:	movs	r1, r0
   2ff88:	lsrs	r4, r3, #21
   2ff8a:	movs	r1, r0

0002ff8c <populate_free_space_tree@@Base>:
   2ff8c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ff90:	mov	r9, r0
   2ff92:	vpush	{d8}
   2ff96:	mov	r5, r1
   2ff98:	ldr	r2, [pc, #544]	; (301bc <populate_free_space_tree@@Base+0x230>)
   2ff9a:	ldr	r3, [pc, #548]	; (301c0 <populate_free_space_tree@@Base+0x234>)
   2ff9c:	add	r2, pc
   2ff9e:	sub	sp, #60	; 0x3c
   2ffa0:	ldr	r3, [r2, r3]
   2ffa2:	ldr	r3, [r3, #0]
   2ffa4:	str	r3, [sp, #52]	; 0x34
   2ffa6:	mov.w	r3, #0
   2ffaa:	ldr	r3, [r0, #0]
   2ffac:	ldr	r3, [r3, #24]
   2ffae:	vmov	s17, r3
   2ffb2:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2ffb6:	mov	r7, r0
   2ffb8:	cbz	r0, 2ffce <populate_free_space_tree@@Base+0x42>
   2ffba:	movs	r3, #2
   2ffbc:	strb.w	r3, [r0, #64]	; 0x40
   2ffc0:	bl	1b2d4 <btrfs_alloc_path@@Base>
   2ffc4:	mov	r8, r0
   2ffc6:	cbnz	r0, 2ffd4 <populate_free_space_tree@@Base+0x48>
   2ffc8:	mov	r0, r7
   2ffca:	bl	1b302 <btrfs_free_path@@Base>
   2ffce:	mvn.w	r4, #11
   2ffd2:	b.n	3014a <populate_free_space_tree@@Base+0x1be>
   2ffd4:	ldr.w	r3, [r9]
   2ffd8:	add.w	r6, sp, #41	; 0x29
   2ffdc:	ldr	r1, [r3, #48]	; 0x30
   2ffde:	ldrd	r2, r3, [r5, #40]	; 0x28
   2ffe2:	strd	r2, r3, [sp, #32]
   2ffe6:	movs	r3, #198	; 0xc6
   2ffe8:	strb.w	r3, [sp, #40]	; 0x28
   2ffec:	ldr.w	r3, [r5, #53]	; 0x35
   2fff0:	ldr.w	r2, [r5, #49]	; 0x31
   2fff4:	str.w	r3, [sp, #45]	; 0x2d
   2fff8:	movs	r3, #8
   2fffa:	str	r3, [sp, #28]
   2fffc:	add	r3, sp, #32
   2fffe:	str.w	r2, [sp, #41]	; 0x29
   30002:	mov	r2, r0
   30004:	vmov	s16, r3
   30008:	mov	r0, r9
   3000a:	movs	r3, #1
   3000c:	str	r3, [sp, #4]
   3000e:	add	r3, sp, #28
   30010:	str	r3, [sp, #0]
   30012:	vmov	r3, s16
   30016:	bl	1e490 <btrfs_insert_empty_items@@Base>
   3001a:	mov	r4, r0
   3001c:	cbnz	r0, 3004c <populate_free_space_tree@@Base+0xc0>
   3001e:	ldr.w	r0, [r8]
   30022:	movs	r2, #25
   30024:	ldr.w	r3, [r8, #32]
   30028:	add.w	r1, r0, #96	; 0x60
   3002c:	mla	r3, r2, r3, r1
   30030:	ldr.w	r2, [r3, #118]	; 0x76
   30034:	adds	r2, #101	; 0x65
   30036:	adds	r3, r1, r2
   30038:	strb	r4, [r1, r2]
   3003a:	strb	r4, [r3, #1]
   3003c:	strb	r4, [r3, #2]
   3003e:	strb	r4, [r3, #3]
   30040:	strb	r4, [r3, #4]
   30042:	strb	r4, [r3, #5]
   30044:	strb	r4, [r3, #6]
   30046:	strb	r4, [r3, #7]
   30048:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   3004c:	mov	r0, r8
   3004e:	bl	1b2dc <btrfs_release_path@@Base>
   30052:	cmp	r4, #0
   30054:	bne.n	3013e <populate_free_space_tree@@Base+0x1b2>
   30056:	ldrd	r2, r3, [r5, #40]	; 0x28
   3005a:	strb	r4, [r6, #1]
   3005c:	strb	r4, [r6, #2]
   3005e:	strd	r2, r3, [sp, #32]
   30062:	movs	r3, #168	; 0xa8
   30064:	strb	r4, [r6, #3]
   30066:	mov	r2, r7
   30068:	strb.w	r3, [sp, #40]	; 0x28
   3006c:	movs	r3, #1
   3006e:	strb	r4, [r6, #4]
   30070:	strb	r4, [r6, #5]
   30072:	strb	r4, [r6, #6]
   30074:	strb	r4, [r6, #7]
   30076:	vmov	r1, s16
   3007a:	vmov	r0, s17
   3007e:	str	r4, [sp, #0]
   30080:	strb.w	r4, [sp, #41]	; 0x29
   30084:	bl	1ecd0 <btrfs_search_slot_for_read@@Base>
   30088:	cmp	r0, #0
   3008a:	blt.n	3013c <populate_free_space_tree@@Base+0x1b0>
   3008c:	ldr	r1, [pc, #308]	; (301c4 <populate_free_space_tree@@Base+0x238>)
   3008e:	it	eq
   30090:	moveq	r3, #1
   30092:	ldr	r0, [pc, #308]	; (301c8 <populate_free_space_tree@@Base+0x23c>)
   30094:	it	ne
   30096:	movne	r3, #0
   30098:	add	r1, pc
   3009a:	movw	r2, #1027	; 0x403
   3009e:	adds	r1, #221	; 0xdd
   300a0:	add	r0, pc
   300a2:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   300a6:	ldrd	sl, fp, [r5, #40]	; 0x28
   300aa:	ldr.w	r3, [r5, #49]	; 0x31
   300ae:	ldr.w	r2, [r5, #53]	; 0x35
   300b2:	adds.w	r3, r3, sl
   300b6:	str	r3, [sp, #16]
   300b8:	adc.w	r3, r2, fp
   300bc:	str	r3, [sp, #20]
   300be:	ldr	r2, [r7, #32]
   300c0:	vmov	r1, s16
   300c4:	ldr	r0, [r7, #0]
   300c6:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   300ca:	ldrb.w	r2, [sp, #40]	; 0x28
   300ce:	add.w	r3, r2, #88	; 0x58
   300d2:	uxtb	r3, r3
   300d4:	cmp	r3, #1
   300d6:	bhi.n	30170 <populate_free_space_tree@@Base+0x1e4>
   300d8:	ldrd	r0, r1, [sp, #32]
   300dc:	ldrd	r2, r3, [sp, #16]
   300e0:	cmp	r1, r3
   300e2:	it	eq
   300e4:	cmpeq	r0, r2
   300e6:	bcs.n	30184 <populate_free_space_tree@@Base+0x1f8>
   300e8:	cmp	fp, r1
   300ea:	it	eq
   300ec:	cmpeq	sl, r0
   300ee:	bcc.n	3011e <populate_free_space_tree@@Base+0x192>
   300f0:	ldrb.w	r1, [sp, #40]	; 0x28
   300f4:	ldrd	r2, r3, [sp, #32]
   300f8:	cmp	r1, #169	; 0xa9
   300fa:	bne.n	3015e <populate_free_space_tree@@Base+0x1d2>
   300fc:	ldr.w	r1, [r9]
   30100:	ldr.w	r1, [r1, #384]	; 0x180
   30104:	adds.w	sl, r2, r1
   30108:	adc.w	fp, r3, #0
   3010c:	vmov	r0, s17
   30110:	mov	r1, r7
   30112:	bl	2e8f0 <btrfs_abort_transaction@@Base+0xf4>
   30116:	cmp	r0, #0
   30118:	blt.n	3013c <populate_free_space_tree@@Base+0x1b0>
   3011a:	beq.n	300be <populate_free_space_tree@@Base+0x132>
   3011c:	b.n	30184 <populate_free_space_tree@@Base+0x1f8>
   3011e:	subs.w	r2, r0, sl
   30122:	strd	sl, fp, [sp]
   30126:	sbc.w	r3, r1, fp
   3012a:	mov	r0, r9
   3012c:	strd	r2, r3, [sp, #8]
   30130:	mov	r1, r5
   30132:	mov	r2, r8
   30134:	bl	2f838 <btrfs_abort_transaction@@Base+0x103c>
   30138:	cmp	r0, #0
   3013a:	beq.n	300f0 <populate_free_space_tree@@Base+0x164>
   3013c:	mov	r4, r0
   3013e:	mov	r0, r8
   30140:	bl	1b302 <btrfs_free_path@@Base>
   30144:	mov	r0, r7
   30146:	bl	1b302 <btrfs_free_path@@Base>
   3014a:	ldr	r2, [pc, #128]	; (301cc <populate_free_space_tree@@Base+0x240>)
   3014c:	ldr	r3, [pc, #112]	; (301c0 <populate_free_space_tree@@Base+0x234>)
   3014e:	add	r2, pc
   30150:	ldr	r3, [r2, r3]
   30152:	ldr	r2, [r3, #0]
   30154:	ldr	r3, [sp, #52]	; 0x34
   30156:	eors	r2, r3
   30158:	beq.n	301b0 <populate_free_space_tree@@Base+0x224>
   3015a:	blx	88e4 <__stack_chk_fail@plt>
   3015e:	ldr.w	r1, [sp, #41]	; 0x29
   30162:	ldr.w	r0, [sp, #45]	; 0x2d
   30166:	adds.w	sl, r1, r2
   3016a:	adc.w	fp, r0, r3
   3016e:	b.n	3010c <populate_free_space_tree@@Base+0x180>
   30170:	cmp	r2, #192	; 0xc0
   30172:	bne.n	3010c <populate_free_space_tree@@Base+0x180>
   30174:	ldrd	r2, r3, [r5, #40]	; 0x28
   30178:	ldrd	r0, r1, [sp, #32]
   3017c:	cmp	r1, r3
   3017e:	it	eq
   30180:	cmpeq	r0, r2
   30182:	beq.n	3010c <populate_free_space_tree@@Base+0x180>
   30184:	ldrd	r2, r3, [sp, #16]
   30188:	cmp	fp, r3
   3018a:	it	eq
   3018c:	cmpeq	sl, r2
   3018e:	bcs.n	3013e <populate_free_space_tree@@Base+0x1b2>
   30190:	ldr	r3, [sp, #16]
   30192:	mov	r1, r5
   30194:	mov	r0, r9
   30196:	strd	sl, fp, [sp]
   3019a:	subs.w	r2, r3, sl
   3019e:	ldr	r3, [sp, #20]
   301a0:	sbc.w	r3, r3, fp
   301a4:	strd	r2, r3, [sp, #8]
   301a8:	mov	r2, r8
   301aa:	bl	2f838 <btrfs_abort_transaction@@Base+0x103c>
   301ae:	b.n	3013c <populate_free_space_tree@@Base+0x1b0>
   301b0:	mov	r0, r4
   301b2:	add	sp, #60	; 0x3c
   301b4:	vpop	{d8}
   301b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   301bc:	ldrh	r4, [r2, #44]	; 0x2c
   301be:	movs	r3, r0
   301c0:	lsls	r4, r7, #9
   301c2:	movs	r0, r0
   301c4:	str	r3, [r5, r1]
   301c6:	movs	r1, r0
   301c8:	ldc	0, cr0, [r2, #-0]
   301cc:	ldrh	r2, [r4, #30]
   301ce:	movs	r3, r0

000301d0 <remove_block_group_free_space@@Base>:
   301d0:	ldr	r2, [pc, #536]	; (303ec <remove_block_group_free_space@@Base+0x21c>)
   301d2:	ldr	r3, [pc, #540]	; (303f0 <remove_block_group_free_space@@Base+0x220>)
   301d4:	add	r2, pc
   301d6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   301da:	sub	sp, #92	; 0x5c
   301dc:	ldr	r3, [r2, r3]
   301de:	mov	r9, r0
   301e0:	mov	r8, r1
   301e2:	ldr	r3, [r3, #0]
   301e4:	str	r3, [sp, #84]	; 0x54
   301e6:	mov.w	r3, #0
   301ea:	ldr	r3, [r0, #0]
   301ec:	ldr.w	fp, [r3, #48]	; 0x30
   301f0:	bl	1b2d4 <btrfs_alloc_path@@Base>
   301f4:	mov	r5, r0
   301f6:	cmp	r0, #0
   301f8:	beq.w	303de <remove_block_group_free_space@@Base+0x20e>
   301fc:	ldrd	r3, r4, [r8, #40]	; 0x28
   30200:	ldr.w	r2, [r8, #53]	; 0x35
   30204:	ldr.w	sl, [pc, #492]	; 303f4 <remove_block_group_free_space@@Base+0x224>
   30208:	strd	r3, r4, [sp, #24]
   3020c:	ldr	r1, [sp, #24]
   3020e:	add	sl, pc
   30210:	ldr.w	r3, [r8, #49]	; 0x31
   30214:	add.w	sl, sl, #246	; 0xf6
   30218:	adds	r3, r3, r1
   3021a:	str	r3, [sp, #8]
   3021c:	ldr	r3, [sp, #28]
   3021e:	adc.w	r3, r2, r3
   30222:	str	r3, [sp, #12]
   30224:	ldr	r3, [sp, #8]
   30226:	adds.w	r2, r3, #4294967295	; 0xffffffff
   3022a:	ldr	r3, [sp, #12]
   3022c:	adc.w	r3, r3, #4294967295	; 0xffffffff
   30230:	strd	r2, r3, [sp, #44]	; 0x2c
   30234:	movs	r2, #255	; 0xff
   30236:	strb.w	r2, [sp, #52]	; 0x34
   3023a:	strb.w	r2, [sp, #53]	; 0x35
   3023e:	strb.w	r2, [sp, #54]	; 0x36
   30242:	strb.w	r2, [sp, #55]	; 0x37
   30246:	strb.w	r2, [sp, #56]	; 0x38
   3024a:	strb.w	r2, [sp, #57]	; 0x39
   3024e:	strb.w	r2, [sp, #58]	; 0x3a
   30252:	strb.w	r2, [sp, #59]	; 0x3b
   30256:	strb.w	r2, [sp, #60]	; 0x3c
   3025a:	mov.w	r3, #4294967295	; 0xffffffff
   3025e:	add	r2, sp, #44	; 0x2c
   30260:	str	r3, [sp, #0]
   30262:	mov	r1, fp
   30264:	mov	r3, r5
   30266:	mov	r0, r9
   30268:	bl	2eadc <btrfs_abort_transaction@@Base+0x2e0>
   3026c:	mov	r4, r0
   3026e:	cmp	r0, #0
   30270:	bne.n	30318 <remove_block_group_free_space@@Base+0x148>
   30272:	ldr	r7, [pc, #388]	; (303f8 <remove_block_group_free_space@@Base+0x228>)
   30274:	ldr	r6, [r5, #0]
   30276:	ldr	r3, [r5, #32]
   30278:	add	r7, pc
   3027a:	adds	r3, #1
   3027c:	str	r3, [r5, #32]
   3027e:	ldr	r2, [r5, #32]
   30280:	cmp	r2, #0
   30282:	bgt.n	30288 <remove_block_group_free_space@@Base+0xb8>
   30284:	movs	r6, #0
   30286:	b.n	302fc <remove_block_group_free_space@@Base+0x12c>
   30288:	subs	r2, #1
   3028a:	add	r1, sp, #64	; 0x40
   3028c:	mov	r0, r6
   3028e:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   30292:	ldrb.w	r3, [sp, #72]	; 0x48
   30296:	cmp	r3, #198	; 0xc6
   30298:	bne.n	3033c <remove_block_group_free_space@@Base+0x16c>
   3029a:	ldrd	r2, r3, [r8, #40]	; 0x28
   3029e:	adds	r4, #1
   302a0:	ldrd	r6, r7, [sp, #64]	; 0x40
   302a4:	ldr	r0, [pc, #340]	; (303fc <remove_block_group_free_space@@Base+0x22c>)
   302a6:	cmp	r7, r3
   302a8:	it	eq
   302aa:	cmpeq	r6, r2
   302ac:	ldr	r6, [pc, #336]	; (30400 <remove_block_group_free_space@@Base+0x230>)
   302ae:	add	r0, pc
   302b0:	mov.w	r2, #1112	; 0x458
   302b4:	add	r6, pc
   302b6:	it	eq
   302b8:	moveq	r3, #1
   302ba:	add.w	r6, r6, #246	; 0xf6
   302be:	it	ne
   302c0:	movne	r3, #0
   302c2:	mov	r1, r6
   302c4:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   302c8:	ldr.w	r3, [r8, #53]	; 0x35
   302cc:	ldr.w	r1, [sp, #77]	; 0x4d
   302d0:	ldr.w	r0, [sp, #73]	; 0x49
   302d4:	ldr.w	r2, [r8, #49]	; 0x31
   302d8:	cmp	r1, r3
   302da:	mov	r1, r6
   302dc:	mov.w	r6, #1
   302e0:	it	eq
   302e2:	cmpeq	r0, r2
   302e4:	ldr	r0, [pc, #284]	; (30404 <remove_block_group_free_space@@Base+0x234>)
   302e6:	movw	r2, #1113	; 0x459
   302ea:	ite	eq
   302ec:	moveq	r3, #1
   302ee:	movne	r3, #0
   302f0:	add	r0, pc
   302f2:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   302f6:	ldr	r3, [r5, #32]
   302f8:	subs	r3, #1
   302fa:	str	r3, [r5, #32]
   302fc:	str	r4, [sp, #0]
   302fe:	mov	r2, r5
   30300:	ldr	r3, [r5, #32]
   30302:	mov	r1, fp
   30304:	mov	r0, r9
   30306:	bl	1e87c <btrfs_del_items@@Base>
   3030a:	mov	r4, r0
   3030c:	cbnz	r0, 30318 <remove_block_group_free_space@@Base+0x148>
   3030e:	mov	r0, r5
   30310:	bl	1b2dc <btrfs_release_path@@Base>
   30314:	cmp	r6, #0
   30316:	beq.n	3025a <remove_block_group_free_space@@Base+0x8a>
   30318:	mov	r0, r5
   3031a:	bl	1b302 <btrfs_free_path@@Base>
   3031e:	cbz	r4, 30328 <remove_block_group_free_space@@Base+0x158>
   30320:	mov	r1, r4
   30322:	mov	r0, r9
   30324:	bl	2e7fc <btrfs_abort_transaction@@Base>
   30328:	ldr	r2, [pc, #220]	; (30408 <remove_block_group_free_space@@Base+0x238>)
   3032a:	ldr	r3, [pc, #196]	; (303f0 <remove_block_group_free_space@@Base+0x220>)
   3032c:	add	r2, pc
   3032e:	ldr	r3, [r2, r3]
   30330:	ldr	r2, [r3, #0]
   30332:	ldr	r3, [sp, #84]	; 0x54
   30334:	eors	r2, r3
   30336:	beq.n	303e4 <remove_block_group_free_space@@Base+0x214>
   30338:	blx	88e4 <__stack_chk_fail@plt>
   3033c:	adds	r3, #57	; 0x39
   3033e:	uxtb	r3, r3
   30340:	cmp	r3, #1
   30342:	bhi.n	303cc <remove_block_group_free_space@@Base+0x1fc>
   30344:	ldrd	r2, r3, [sp, #64]	; 0x40
   30348:	adds	r4, #1
   3034a:	ldrd	r0, r1, [sp, #24]
   3034e:	cmp	r3, r1
   30350:	strd	r2, r3, [sp, #16]
   30354:	it	eq
   30356:	cmpeq	r2, r0
   30358:	mov	r1, sl
   3035a:	mov.w	r2, #1120	; 0x460
   3035e:	mov	r0, r7
   30360:	ite	cs
   30362:	movcs	r3, #1
   30364:	movcc	r3, #0
   30366:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   3036a:	ldrd	r2, r3, [sp, #16]
   3036e:	ldrd	r0, r1, [sp, #8]
   30372:	cmp	r3, r1
   30374:	mov	r1, sl
   30376:	it	eq
   30378:	cmpeq	r2, r0
   3037a:	ldr	r0, [pc, #144]	; (3040c <remove_block_group_free_space@@Base+0x23c>)
   3037c:	movw	r2, #1121	; 0x461
   30380:	ite	cc
   30382:	movcc	r3, #1
   30384:	movcs	r3, #0
   30386:	add	r0, pc
   30388:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   3038c:	ldr.w	r3, [sp, #73]	; 0x49
   30390:	ldr	r1, [sp, #16]
   30392:	ldr.w	r2, [sp, #77]	; 0x4d
   30396:	adds	r3, r3, r1
   30398:	str	r3, [sp, #32]
   3039a:	ldr	r3, [sp, #20]
   3039c:	adc.w	r3, r2, r3
   303a0:	str	r3, [sp, #36]	; 0x24
   303a2:	ldrd	r0, r1, [sp, #32]
   303a6:	ldrd	r2, r3, [sp, #8]
   303aa:	cmp	r3, r1
   303ac:	mov	r1, sl
   303ae:	it	eq
   303b0:	cmpeq	r2, r0
   303b2:	ldr	r0, [pc, #92]	; (30410 <remove_block_group_free_space@@Base+0x240>)
   303b4:	movw	r2, #1122	; 0x462
   303b8:	ite	cs
   303ba:	movcs	r3, #1
   303bc:	movcc	r3, #0
   303be:	add	r0, pc
   303c0:	bl	2e9ec <btrfs_abort_transaction@@Base+0x1f0>
   303c4:	ldr	r3, [r5, #32]
   303c6:	subs	r3, #1
   303c8:	str	r3, [r5, #32]
   303ca:	b.n	3027e <remove_block_group_free_space@@Base+0xae>
   303cc:	ldr	r1, [pc, #68]	; (30414 <remove_block_group_free_space@@Base+0x244>)
   303ce:	movw	r2, #1126	; 0x466
   303d2:	ldr	r0, [pc, #68]	; (30418 <remove_block_group_free_space@@Base+0x248>)
   303d4:	add	r1, pc
   303d6:	adds	r1, #246	; 0xf6
   303d8:	add	r0, pc
   303da:	bl	2e980 <btrfs_abort_transaction@@Base+0x184>
   303de:	mvn.w	r4, #11
   303e2:	b.n	30318 <remove_block_group_free_space@@Base+0x148>
   303e4:	mov	r0, r4
   303e6:	add	sp, #92	; 0x5c
   303e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   303ec:	ldrh	r4, [r3, #26]
   303ee:	movs	r3, r0
   303f0:	lsls	r4, r7, #9
   303f2:	movs	r0, r0
   303f4:	ldr	r6, [pc, #980]	; (307cc <load_free_space_tree@@Base+0x176>)
   303f6:	movs	r1, r0
   303f8:	ldr	r2, [pc, #452]	; (305c0 <btrfs_create_free_space_tree@@Base+0x34>)
   303fa:	movs	r1, r0
   303fc:	ldr	r1, [pc, #892]	; (3077c <load_free_space_tree@@Base+0x126>)
   303fe:	movs	r1, r0
   30400:	ldr	r6, [pc, #316]	; (30540 <btrfs_clear_free_space_tree@@Base+0x124>)
   30402:	movs	r1, r0
   30404:	ldr	r1, [pc, #820]	; (3073c <load_free_space_tree@@Base+0xe6>)
   30406:	movs	r1, r0
   30408:	ldrh	r4, [r0, #16]
   3040a:	movs	r3, r0
   3040c:	ldr	r1, [pc, #508]	; (3060c <btrfs_create_free_space_tree@@Base+0x80>)
   3040e:	movs	r1, r0
   30410:	ldr	r1, [pc, #384]	; (30594 <btrfs_create_free_space_tree@@Base+0x8>)
   30412:	movs	r1, r0
   30414:	ldr	r5, [pc, #188]	; (304d4 <btrfs_clear_free_space_tree@@Base+0xb8>)
   30416:	movs	r1, r0
   30418:	lsrs	r6, r1, #3
   3041a:	movs	r1, r0

0003041c <btrfs_clear_free_space_tree@@Base>:
   3041c:	ldr	r2, [pc, #352]	; (30580 <btrfs_clear_free_space_tree@@Base+0x164>)
   3041e:	movs	r1, #0
   30420:	ldr	r3, [pc, #352]	; (30584 <btrfs_clear_free_space_tree@@Base+0x168>)
   30422:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30426:	add	r2, pc
   30428:	ldr.w	r8, [r0, #28]
   3042c:	sub	sp, #44	; 0x2c
   3042e:	ldr	r3, [r2, r3]
   30430:	mov	r7, r0
   30432:	ldr	r5, [r0, #48]	; 0x30
   30434:	mov	r0, r8
   30436:	ldr	r3, [r3, #0]
   30438:	str	r3, [sp, #36]	; 0x24
   3043a:	mov.w	r3, #0
   3043e:	bl	2e404 <btrfs_start_transaction@@Base>
   30442:	cmn.w	r0, #4096	; 0x1000
   30446:	mov	r6, r0
   30448:	bls.n	30462 <btrfs_clear_free_space_tree@@Base+0x46>
   3044a:	mov	r4, r0
   3044c:	ldr	r2, [pc, #312]	; (30588 <btrfs_clear_free_space_tree@@Base+0x16c>)
   3044e:	ldr	r3, [pc, #308]	; (30584 <btrfs_clear_free_space_tree@@Base+0x168>)
   30450:	add	r2, pc
   30452:	ldr	r3, [r2, r3]
   30454:	ldr	r2, [r3, #0]
   30456:	ldr	r3, [sp, #36]	; 0x24
   30458:	eors	r2, r3
   3045a:	beq.w	30570 <btrfs_clear_free_space_tree@@Base+0x154>
   3045e:	blx	88e4 <__stack_chk_fail@plt>
   30462:	ldr.w	r3, [r7, #308]	; 0x134
   30466:	movs	r4, #0
   30468:	ldr.w	r1, [r3, #184]	; 0xb8
   3046c:	ldr.w	r2, [r3, #180]	; 0xb4
   30470:	str.w	r1, [r3, #184]	; 0xb8
   30474:	bic.w	r2, r2, #3
   30478:	str.w	r2, [r3, #180]	; 0xb4
   3047c:	str	r4, [r7, #48]	; 0x30
   3047e:	bl	1b2d4 <btrfs_alloc_path@@Base>
   30482:	mov	r7, r0
   30484:	cbnz	r0, 3048c <btrfs_clear_free_space_tree@@Base+0x70>
   30486:	mvn.w	r4, #11
   3048a:	b.n	3044c <btrfs_clear_free_space_tree@@Base+0x30>
   3048c:	add.w	r9, sp, #16
   30490:	mov.w	sl, #1
   30494:	mov.w	fp, #4294967295	; 0xffffffff
   30498:	movs	r2, #0
   3049a:	movs	r3, #0
   3049c:	strb.w	r4, [sp, #24]
   304a0:	strd	r2, r3, [sp, #16]
   304a4:	strb.w	r4, [sp, #25]
   304a8:	strb.w	r4, [sp, #26]
   304ac:	strb.w	r4, [sp, #27]
   304b0:	strb.w	r4, [sp, #28]
   304b4:	strb.w	r4, [sp, #29]
   304b8:	strb.w	r4, [sp, #30]
   304bc:	strb.w	r4, [sp, #31]
   304c0:	strb.w	r4, [sp, #32]
   304c4:	mov	r3, r7
   304c6:	mov	r2, r9
   304c8:	mov	r1, r5
   304ca:	mov	r0, r6
   304cc:	strd	fp, sl, [sp]
   304d0:	bl	1d6c0 <btrfs_search_slot@@Base>
   304d4:	subs	r4, r0, #0
   304d6:	blt.n	304fc <btrfs_clear_free_space_tree@@Base+0xe0>
   304d8:	ldr	r3, [r7, #0]
   304da:	ldr.w	r4, [r3, #192]	; 0xc0
   304de:	cbz	r4, 304fc <btrfs_clear_free_space_tree@@Base+0xe0>
   304e0:	movs	r3, #0
   304e2:	mov	r2, r7
   304e4:	str	r3, [r7, #32]
   304e6:	mov	r1, r5
   304e8:	str	r4, [sp, #0]
   304ea:	mov	r0, r6
   304ec:	bl	1e87c <btrfs_del_items@@Base>
   304f0:	mov	r4, r0
   304f2:	cbnz	r0, 304fc <btrfs_clear_free_space_tree@@Base+0xe0>
   304f4:	mov	r0, r7
   304f6:	bl	1b2dc <btrfs_release_path@@Base>
   304fa:	b.n	304c4 <btrfs_clear_free_space_tree@@Base+0xa8>
   304fc:	mov	r0, r7
   304fe:	bl	1b302 <btrfs_free_path@@Base>
   30502:	cmp	r4, #0
   30504:	bne.n	3044c <btrfs_clear_free_space_tree@@Base+0x30>
   30506:	addw	r2, r5, #447	; 0x1bf
   3050a:	mov	r1, r8
   3050c:	mov	r0, r6
   3050e:	bl	2b058 <btrfs_del_root@@Base>
   30512:	mov	r4, r0
   30514:	cmp	r0, #0
   30516:	bne.n	3044c <btrfs_clear_free_space_tree@@Base+0x30>
   30518:	ldrd	r2, r3, [r5, #520]	; 0x208
   3051c:	str	r3, [r2, #4]
   3051e:	str	r2, [r3, #0]
   30520:	ldr	r2, [pc, #84]	; (30578 <btrfs_clear_free_space_tree@@Base+0x15c>)
   30522:	ldr	r3, [pc, #88]	; (3057c <btrfs_clear_free_space_tree@@Base+0x160>)
   30524:	ldr	r0, [r5, #0]
   30526:	strd	r2, r3, [r5, #520]	; 0x208
   3052a:	bl	20994 <clean_tree_block@@Base>
   3052e:	mov	r4, r0
   30530:	cmp	r0, #0
   30532:	bne.n	3044c <btrfs_clear_free_space_tree@@Base+0x30>
   30534:	movs	r3, #1
   30536:	movs	r2, #0
   30538:	str	r3, [sp, #8]
   3053a:	mov	r1, r5
   3053c:	movs	r3, #0
   3053e:	mov	r0, r6
   30540:	strd	r2, r3, [sp]
   30544:	ldr	r2, [r5, #0]
   30546:	bl	24248 <btrfs_free_tree_block@@Base>
   3054a:	mov	r4, r0
   3054c:	cmp	r0, #0
   3054e:	bne.w	3044c <btrfs_clear_free_space_tree@@Base+0x30>
   30552:	ldr	r0, [r5, #0]
   30554:	bl	1a0a4 <free_extent_buffer@@Base>
   30558:	ldr	r0, [r5, #4]
   3055a:	bl	1a0a4 <free_extent_buffer@@Base>
   3055e:	mov	r0, r5
   30560:	blx	87cc <free@plt+0x4>
   30564:	mov	r1, r8
   30566:	mov	r0, r6
   30568:	bl	2e684 <btrfs_commit_transaction@@Base>
   3056c:	mov	r4, r0
   3056e:	b.n	3044c <btrfs_clear_free_space_tree@@Base+0x30>
   30570:	mov	r0, r4
   30572:	add	sp, #44	; 0x2c
   30574:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30578:	lsls	r0, r0, #4
   3057a:	movs	r0, r2
   3057c:	lsls	r0, r0, #8
   3057e:	movs	r0, r4
   30580:	ldrh	r2, [r1, #8]
   30582:	movs	r3, r0
   30584:	lsls	r4, r7, #9
   30586:	movs	r0, r0
   30588:	ldrh	r0, [r4, #6]
   3058a:	movs	r3, r0

0003058c <btrfs_create_free_space_tree@@Base>:
   3058c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   30590:	movs	r1, #0
   30592:	ldr	r7, [r0, #28]
   30594:	mov	r5, r0
   30596:	mov	r0, r7
   30598:	bl	2e404 <btrfs_start_transaction@@Base>
   3059c:	cmn.w	r0, #4096	; 0x1000
   305a0:	mov	r6, r0
   305a2:	bls.n	305ac <btrfs_create_free_space_tree@@Base+0x20>
   305a4:	mov	r4, r0
   305a6:	mov	r0, r4
   305a8:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   305ac:	movs	r2, #10
   305ae:	movs	r3, #0
   305b0:	mov	r1, r5
   305b2:	bl	21804 <btrfs_create_tree@@Base>
   305b6:	cmn.w	r0, #4096	; 0x1000
   305ba:	mov	r4, r0
   305bc:	bhi.n	305f6 <btrfs_create_free_space_tree@@Base+0x6a>
   305be:	mov.w	r8, #69632	; 0x11000
   305c2:	mov.w	r9, #0
   305c6:	str	r0, [r5, #48]	; 0x30
   305c8:	mov	r2, r8
   305ca:	mov	r3, r9
   305cc:	mov	r0, r5
   305ce:	bl	222b8 <btrfs_lookup_first_block_group@@Base>
   305d2:	mov	r1, r0
   305d4:	cbz	r0, 30600 <btrfs_create_free_space_tree@@Base+0x74>
   305d6:	ldr.w	r2, [r0, #49]	; 0x31
   305da:	ldr.w	r9, [r0, #53]	; 0x35
   305de:	ldrd	r0, r3, [r0, #40]	; 0x28
   305e2:	adds.w	r8, r2, r0
   305e6:	mov	r0, r6
   305e8:	adc.w	r9, r9, r3
   305ec:	bl	2ff8c <populate_free_space_tree@@Base>
   305f0:	mov	r4, r0
   305f2:	cmp	r0, #0
   305f4:	beq.n	305c8 <btrfs_create_free_space_tree@@Base+0x3c>
   305f6:	mov	r1, r4
   305f8:	mov	r0, r6
   305fa:	bl	2e7fc <btrfs_abort_transaction@@Base>
   305fe:	b.n	305a6 <btrfs_create_free_space_tree@@Base+0x1a>
   30600:	ldr.w	r3, [r5, #308]	; 0x134
   30604:	mov	r9, r1
   30606:	ldr.w	r2, [r3, #180]	; 0xb4
   3060a:	ldr.w	r0, [r3, #184]	; 0xb8
   3060e:	and.w	r8, r2, #1
   30612:	orrs.w	r1, r8, r9
   30616:	mov.w	r1, #0
   3061a:	ittt	eq
   3061c:	streq.w	r0, [r3, #184]	; 0xb8
   30620:	orreq.w	r2, r2, #1
   30624:	streq.w	r2, [r3, #180]	; 0xb4
   30628:	ldr.w	r3, [r5, #308]	; 0x134
   3062c:	ldr.w	r2, [r3, #180]	; 0xb4
   30630:	ldr.w	r4, [r3, #184]	; 0xb8
   30634:	and.w	r0, r2, #2
   30638:	orrs	r1, r0
   3063a:	mov	r1, r7
   3063c:	it	eq
   3063e:	orreq.w	r2, r2, #2
   30642:	mov	r0, r6
   30644:	itt	eq
   30646:	streq.w	r2, [r3, #180]	; 0xb4
   3064a:	streq.w	r4, [r3, #184]	; 0xb8
   3064e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   30652:	b.w	2e684 <btrfs_commit_transaction@@Base>

00030656 <load_free_space_tree@@Base>:
   30656:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3065a:	mov	r9, r0
   3065c:	vpush	{d8-d9}
   30660:	mov	r8, r1
   30662:	ldr	r2, [pc, #976]	; (30a34 <load_free_space_tree@@Base+0x3de>)
   30664:	ldr	r3, [pc, #976]	; (30a38 <load_free_space_tree@@Base+0x3e2>)
   30666:	add	r2, pc
   30668:	ldr	r6, [pc, #976]	; (30a3c <load_free_space_tree@@Base+0x3e6>)
   3066a:	sub	sp, #124	; 0x7c
   3066c:	ldr	r3, [r2, r3]
   3066e:	add	r6, pc
   30670:	ldr	r3, [r3, #0]
   30672:	str	r3, [sp, #116]	; 0x74
   30674:	mov.w	r3, #0
   30678:	bl	1b2d4 <btrfs_alloc_path@@Base>
   3067c:	mov	r5, r0
   3067e:	cmp	r0, #0
   30680:	beq.w	30a22 <load_free_space_tree@@Base+0x3cc>
   30684:	movs	r4, #0
   30686:	movs	r3, #1
   30688:	mov	r2, r8
   3068a:	strb.w	r3, [r0, #64]	; 0x40
   3068e:	mov	r3, r0
   30690:	str	r4, [sp, #0]
   30692:	mov	r0, r4
   30694:	ldr.w	r1, [r9, #48]	; 0x30
   30698:	bl	2e86c <btrfs_abort_transaction@@Base+0x70>
   3069c:	cmn.w	r0, #4096	; 0x1000
   306a0:	bls.n	306ca <load_free_space_tree@@Base+0x74>
   306a2:	mov	r3, r0
   306a4:	mov	r0, r5
   306a6:	str	r3, [sp, #32]
   306a8:	bl	1b302 <btrfs_free_path@@Base>
   306ac:	ldr	r3, [sp, #32]
   306ae:	cmp	r3, #0
   306b0:	it	eq
   306b2:	moveq	r3, r4
   306b4:	ldr	r1, [pc, #904]	; (30a40 <load_free_space_tree@@Base+0x3ea>)
   306b6:	ldr	r2, [pc, #896]	; (30a38 <load_free_space_tree@@Base+0x3e2>)
   306b8:	add	r1, pc
   306ba:	ldr	r2, [r1, r2]
   306bc:	ldr	r1, [r2, #0]
   306be:	ldr	r2, [sp, #116]	; 0x74
   306c0:	eors	r1, r2
   306c2:	beq.w	30a28 <load_free_space_tree@@Base+0x3d2>
   306c6:	blx	88e4 <__stack_chk_fail@plt>
   306ca:	ldr	r3, [r5, #0]
   306cc:	adds	r3, #96	; 0x60
   306ce:	adds	r2, r3, r0
   306d0:	ldr	r3, [r3, r0]
   306d2:	ldr	r7, [r2, #4]
   306d4:	str	r3, [sp, #64]	; 0x40
   306d6:	ldr.w	r3, [r9, #48]	; 0x30
   306da:	vmov	s18, r3
   306de:	ldr.w	r3, [r8, #40]	; 0x28
   306e2:	str	r3, [sp, #48]	; 0x30
   306e4:	ldr.w	r3, [r8, #44]	; 0x2c
   306e8:	ldr	r1, [sp, #48]	; 0x30
   306ea:	str	r3, [sp, #52]	; 0x34
   306ec:	ldr.w	r3, [r8, #49]	; 0x31
   306f0:	ldr.w	r2, [r8, #53]	; 0x35
   306f4:	adds	r3, r3, r1
   306f6:	str	r3, [sp, #32]
   306f8:	ldr	r3, [sp, #52]	; 0x34
   306fa:	adc.w	r3, r2, r3
   306fe:	ands.w	r7, r7, #1
   30702:	str	r3, [sp, #36]	; 0x24
   30704:	beq.w	3088c <load_free_space_tree@@Base+0x236>
   30708:	movs	r3, #0
   3070a:	mov	r7, r4
   3070c:	vmov	s16, r3
   30710:	str	r4, [sp, #40]	; 0x28
   30712:	vmov	s17, r3
   30716:	add	r3, sp, #96	; 0x60
   30718:	vmov	s19, r3
   3071c:	vmov	r0, s18
   30720:	mov	r1, r5
   30722:	bl	2e8f0 <btrfs_abort_transaction@@Base+0xf4>
   30726:	subs	r3, r0, #0
   30728:	blt.w	30888 <load_free_space_tree@@Base+0x232>
   3072c:	bne.w	30884 <load_free_space_tree@@Base+0x22e>
   30730:	vmov	r1, s19
   30734:	ldr	r2, [r5, #32]
   30736:	ldr	r0, [r5, #0]
   30738:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   3073c:	ldrb.w	r3, [sp, #104]	; 0x68
   30740:	cmp	r3, #198	; 0xc6
   30742:	beq.w	30884 <load_free_space_tree@@Base+0x22e>
   30746:	cmp	r3, #200	; 0xc8
   30748:	beq.n	3079c <load_free_space_tree@@Base+0x146>
   3074a:	ldr	r2, [pc, #760]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   3074c:	movs	r1, #1
   3074e:	ldr	r0, [r6, r2]
   30750:	ldr	r2, [pc, #756]	; (30a48 <load_free_space_tree@@Base+0x3f2>)
   30752:	ldr	r0, [r0, #0]
   30754:	add	r2, pc
   30756:	blx	8ca0 <__fprintf_chk@plt+0x4>
   3075a:	movs	r4, #1
   3075c:	ldr	r3, [sp, #40]	; 0x28
   3075e:	cmp	r3, #1
   30760:	bne.n	3077c <load_free_space_tree@@Base+0x126>
   30762:	ldrd	r2, r3, [sp, #32]
   30766:	mov	r1, r9
   30768:	mov	r0, r8
   3076a:	adds	r7, #1
   3076c:	strd	r2, r3, [sp]
   30770:	vmov	r2, s16
   30774:	vmov	r3, s17
   30778:	bl	26180 <add_new_free_space@@Base>
   3077c:	ldr	r3, [sp, #64]	; 0x40
   3077e:	cmp	r3, r7
   30780:	beq.n	30798 <load_free_space_tree@@Base+0x142>
   30782:	ldr	r3, [pc, #704]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   30784:	ldr	r2, [pc, #708]	; (30a4c <load_free_space_tree@@Base+0x3f6>)
   30786:	ldr	r0, [r6, r3]
   30788:	add	r2, pc
   3078a:	ldr	r3, [sp, #64]	; 0x40
   3078c:	str	r7, [sp, #0]
   3078e:	ldr	r0, [r0, #0]
   30790:	movs	r1, #1
   30792:	blx	8ca0 <__fprintf_chk@plt+0x4>
   30796:	adds	r4, #1
   30798:	movs	r3, #0
   3079a:	b.n	306a4 <load_free_space_tree@@Base+0x4e>
   3079c:	ldrd	sl, fp, [sp, #96]	; 0x60
   307a0:	ldrd	r3, r4, [sp, #32]
   307a4:	cmp	fp, r4
   307a6:	it	eq
   307a8:	cmpeq	sl, r3
   307aa:	bcc.n	307d2 <load_free_space_tree@@Base+0x17c>
   307ac:	ldrd	r1, r2, [sp, #32]
   307b0:	ldr	r3, [pc, #656]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   307b2:	ldr	r3, [r6, r3]
   307b4:	strd	r1, r2, [sp, #16]
   307b8:	ldr	r2, [sp, #48]	; 0x30
   307ba:	strd	sl, fp, [sp]
   307be:	str	r2, [sp, #8]
   307c0:	ldr	r2, [sp, #52]	; 0x34
   307c2:	str	r2, [sp, #12]
   307c4:	ldr	r2, [pc, #648]	; (30a50 <load_free_space_tree@@Base+0x3fa>)
   307c6:	add	r2, pc
   307c8:	ldr	r0, [r3, #0]
   307ca:	movs	r1, #1
   307cc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   307d0:	b.n	3075a <load_free_space_tree@@Base+0x104>
   307d2:	ldr.w	r3, [sp, #105]	; 0x69
   307d6:	ldr.w	r2, [sp, #109]	; 0x6d
   307da:	adds.w	r3, r3, sl
   307de:	str	r3, [sp, #72]	; 0x48
   307e0:	adc.w	r3, r2, fp
   307e4:	str	r3, [sp, #76]	; 0x4c
   307e6:	ldrd	r1, r2, [sp, #72]	; 0x48
   307ea:	ldrd	r3, r4, [sp, #32]
   307ee:	cmp	r4, r2
   307f0:	it	eq
   307f2:	cmpeq	r3, r1
   307f4:	bcs.n	3083e <load_free_space_tree@@Base+0x1e8>
   307f6:	ldrd	r1, r2, [sp, #32]
   307fa:	ldr	r3, [pc, #584]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   307fc:	ldr	r3, [r6, r3]
   307fe:	strd	r1, r2, [sp, #16]
   30802:	ldr	r2, [sp, #48]	; 0x30
   30804:	strd	sl, fp, [sp]
   30808:	str	r2, [sp, #8]
   3080a:	ldr	r2, [sp, #52]	; 0x34
   3080c:	str	r2, [sp, #12]
   3080e:	ldr	r2, [pc, #580]	; (30a54 <load_free_space_tree@@Base+0x3fe>)
   30810:	add	r2, pc
   30812:	b.n	307c8 <load_free_space_tree@@Base+0x172>
   30814:	mov	r3, fp
   30816:	mov	r2, sl
   30818:	mov	r0, r5
   3081a:	bl	2e9f6 <btrfs_abort_transaction@@Base+0x1fa>
   3081e:	ldr	r3, [sp, #40]	; 0x28
   30820:	mov	r4, r0
   30822:	cbnz	r3, 30862 <load_free_space_tree@@Base+0x20c>
   30824:	cmp	r0, #1
   30826:	bne.n	30830 <load_free_space_tree@@Base+0x1da>
   30828:	vmov	s16, sl
   3082c:	vmov	s17, fp
   30830:	ldr.w	r3, [r9, #388]	; 0x184
   30834:	str	r4, [sp, #40]	; 0x28
   30836:	adds.w	sl, sl, r3
   3083a:	adc.w	fp, fp, #0
   3083e:	ldr.w	r3, [sp, #105]	; 0x69
   30842:	ldr	r1, [sp, #96]	; 0x60
   30844:	ldr.w	r2, [sp, #109]	; 0x6d
   30848:	adds	r3, r3, r1
   3084a:	str	r3, [sp, #80]	; 0x50
   3084c:	ldr	r3, [sp, #100]	; 0x64
   3084e:	adc.w	r3, r2, r3
   30852:	str	r3, [sp, #84]	; 0x54
   30854:	ldrd	r3, r4, [sp, #80]	; 0x50
   30858:	cmp	fp, r4
   3085a:	it	eq
   3085c:	cmpeq	sl, r3
   3085e:	bcc.n	30814 <load_free_space_tree@@Base+0x1be>
   30860:	b.n	3071c <load_free_space_tree@@Base+0xc6>
   30862:	ldr	r3, [sp, #40]	; 0x28
   30864:	cmp	r3, #1
   30866:	bne.n	30830 <load_free_space_tree@@Base+0x1da>
   30868:	cmp	r0, #0
   3086a:	bne.n	30830 <load_free_space_tree@@Base+0x1da>
   3086c:	vmov	r2, s16
   30870:	mov	r1, r9
   30872:	vmov	r3, s17
   30876:	mov	r0, r8
   30878:	strd	sl, fp, [sp]
   3087c:	adds	r7, #1
   3087e:	bl	26180 <add_new_free_space@@Base>
   30882:	b.n	30830 <load_free_space_tree@@Base+0x1da>
   30884:	movs	r4, #0
   30886:	b.n	3075c <load_free_space_tree@@Base+0x106>
   30888:	movs	r4, #0
   3088a:	b.n	306a4 <load_free_space_tree@@Base+0x4e>
   3088c:	add	r3, sp, #96	; 0x60
   3088e:	mov	r4, r7
   30890:	str	r7, [sp, #72]	; 0x48
   30892:	vmov	s16, r3
   30896:	ldr	r3, [pc, #448]	; (30a58 <load_free_space_tree@@Base+0x402>)
   30898:	add	r3, pc
   3089a:	vmov	s17, r3
   3089e:	ldr	r3, [pc, #444]	; (30a5c <load_free_space_tree@@Base+0x406>)
   308a0:	add	r3, pc
   308a2:	vmov	s19, r3
   308a6:	vmov	r0, s18
   308aa:	mov	r1, r5
   308ac:	bl	2e8f0 <btrfs_abort_transaction@@Base+0xf4>
   308b0:	subs	r3, r0, #0
   308b2:	blt.w	306a4 <load_free_space_tree@@Base+0x4e>
   308b6:	bne.n	308e2 <load_free_space_tree@@Base+0x28c>
   308b8:	vmov	r1, s16
   308bc:	ldr	r2, [r5, #32]
   308be:	ldr	r0, [r5, #0]
   308c0:	bl	2e804 <btrfs_abort_transaction@@Base+0x8>
   308c4:	ldrb.w	r3, [sp, #104]	; 0x68
   308c8:	cmp	r3, #198	; 0xc6
   308ca:	beq.n	308e2 <load_free_space_tree@@Base+0x28c>
   308cc:	cmp	r3, #199	; 0xc7
   308ce:	beq.n	308f8 <load_free_space_tree@@Base+0x2a2>
   308d0:	ldr	r2, [pc, #368]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   308d2:	movs	r1, #1
   308d4:	ldr	r0, [r6, r2]
   308d6:	ldr	r2, [pc, #392]	; (30a60 <load_free_space_tree@@Base+0x40a>)
   308d8:	ldr	r0, [r0, #0]
   308da:	add	r2, pc
   308dc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   308e0:	adds	r4, #1
   308e2:	ldr	r3, [sp, #64]	; 0x40
   308e4:	cmp	r3, r7
   308e6:	beq.w	30798 <load_free_space_tree@@Base+0x142>
   308ea:	ldr	r3, [pc, #344]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   308ec:	ldr	r2, [pc, #372]	; (30a64 <load_free_space_tree@@Base+0x40e>)
   308ee:	ldr	r0, [r6, r3]
   308f0:	add	r2, pc
   308f2:	ldr	r3, [sp, #64]	; 0x40
   308f4:	str	r7, [sp, #0]
   308f6:	b.n	3078e <load_free_space_tree@@Base+0x138>
   308f8:	ldrd	r2, r3, [sp, #96]	; 0x60
   308fc:	ldrd	r0, r1, [sp, #32]
   30900:	cmp	r3, r1
   30902:	it	eq
   30904:	cmpeq	r2, r0
   30906:	bcc.n	3092e <load_free_space_tree@@Base+0x2d8>
   30908:	ldr	r1, [pc, #312]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   3090a:	ldrd	r8, r9, [sp, #32]
   3090e:	ldr	r0, [r6, r1]
   30910:	ldr	r1, [sp, #48]	; 0x30
   30912:	strd	r2, r3, [sp]
   30916:	ldr	r2, [pc, #336]	; (30a68 <load_free_space_tree@@Base+0x412>)
   30918:	str	r1, [sp, #8]
   3091a:	ldr	r1, [sp, #52]	; 0x34
   3091c:	add	r2, pc
   3091e:	strd	r8, r9, [sp, #16]
   30922:	str	r1, [sp, #12]
   30924:	movs	r1, #1
   30926:	ldr	r0, [r0, #0]
   30928:	blx	8ca0 <__fprintf_chk@plt+0x4>
   3092c:	b.n	308e0 <load_free_space_tree@@Base+0x28a>
   3092e:	ldr.w	r1, [sp, #105]	; 0x69
   30932:	ldr.w	r0, [sp, #109]	; 0x6d
   30936:	adds	r1, r1, r2
   30938:	str	r1, [sp, #40]	; 0x28
   3093a:	adc.w	r1, r0, r3
   3093e:	str	r1, [sp, #44]	; 0x2c
   30940:	ldrd	fp, ip, [sp, #40]	; 0x28
   30944:	ldrd	r0, r1, [sp, #32]
   30948:	cmp	r1, ip
   3094a:	it	eq
   3094c:	cmpeq	r0, fp
   3094e:	bcs.n	30976 <load_free_space_tree@@Base+0x320>
   30950:	ldr	r3, [pc, #240]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   30952:	mov	r2, r1
   30954:	mov	r1, r0
   30956:	ldr	r3, [r6, r3]
   30958:	strd	r1, r2, [sp, #16]
   3095c:	mov	r1, fp
   3095e:	ldr	r2, [sp, #48]	; 0x30
   30960:	str	r2, [sp, #8]
   30962:	ldr	r2, [sp, #52]	; 0x34
   30964:	str	r2, [sp, #12]
   30966:	mov	r2, ip
   30968:	strd	r1, r2, [sp]
   3096c:	movs	r1, #1
   3096e:	ldr	r2, [pc, #252]	; (30a6c <load_free_space_tree@@Base+0x416>)
   30970:	ldr	r0, [r3, #0]
   30972:	add	r2, pc
   30974:	b.n	30928 <load_free_space_tree@@Base+0x2d2>
   30976:	ldr	r1, [sp, #72]	; 0x48
   30978:	cbz	r1, 309c6 <load_free_space_tree@@Base+0x370>
   3097a:	ldr	r1, [sp, #88]	; 0x58
   3097c:	ldr	r0, [sp, #68]	; 0x44
   3097e:	adds.w	r1, sl, r1
   30982:	str	r1, [sp, #56]	; 0x38
   30984:	ldr	r1, [sp, #92]	; 0x5c
   30986:	adc.w	r1, r0, r1
   3098a:	str	r1, [sp, #60]	; 0x3c
   3098c:	ldrd	r0, r1, [sp, #56]	; 0x38
   30990:	cmp	r3, r1
   30992:	it	eq
   30994:	cmpeq	r2, r0
   30996:	bcs.n	309fe <load_free_space_tree@@Base+0x3a8>
   30998:	ldr	r1, [pc, #168]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   3099a:	ldrd	fp, ip, [sp, #56]	; 0x38
   3099e:	ldr	r0, [r6, r1]
   309a0:	strd	r2, r3, [sp]
   309a4:	vmov	r2, s19
   309a8:	ldr	r1, [sp, #68]	; 0x44
   309aa:	strd	fp, ip, [sp, #24]
   309ae:	str.w	sl, [sp, #16]
   309b2:	ldrd	sl, fp, [sp, #40]	; 0x28
   309b6:	str	r1, [sp, #20]
   309b8:	strd	sl, fp, [sp, #8]
   309bc:	ldr	r0, [r0, #0]
   309be:	movs	r1, #1
   309c0:	blx	8ca0 <__fprintf_chk@plt+0x4>
   309c4:	adds	r4, #1
   309c6:	ldrd	r2, r3, [sp, #96]	; 0x60
   309ca:	adds	r7, #1
   309cc:	ldr.w	r1, [sp, #105]	; 0x69
   309d0:	ldr.w	r0, [sp, #109]	; 0x6d
   309d4:	adds	r1, r1, r2
   309d6:	adc.w	r0, r3, r0
   309da:	strd	r1, r0, [sp]
   309de:	mov	r1, r9
   309e0:	mov	r0, r8
   309e2:	bl	26180 <add_new_free_space@@Base>
   309e6:	ldrd	sl, r3, [sp, #96]	; 0x60
   309ea:	str	r3, [sp, #68]	; 0x44
   309ec:	ldr.w	r3, [sp, #105]	; 0x69
   309f0:	str	r3, [sp, #88]	; 0x58
   309f2:	ldr.w	r3, [sp, #109]	; 0x6d
   309f6:	str	r3, [sp, #92]	; 0x5c
   309f8:	movs	r3, #1
   309fa:	str	r3, [sp, #72]	; 0x48
   309fc:	b.n	308a6 <load_free_space_tree@@Base+0x250>
   309fe:	bne.n	309c6 <load_free_space_tree@@Base+0x370>
   30a00:	ldr	r1, [pc, #64]	; (30a44 <load_free_space_tree@@Base+0x3ee>)
   30a02:	ldr	r0, [r6, r1]
   30a04:	ldr	r1, [sp, #68]	; 0x44
   30a06:	str.w	sl, [sp, #16]
   30a0a:	ldrd	sl, fp, [sp, #40]	; 0x28
   30a0e:	strd	r2, r3, [sp, #24]
   30a12:	strd	r2, r3, [sp]
   30a16:	str	r1, [sp, #20]
   30a18:	vmov	r2, s17
   30a1c:	strd	sl, fp, [sp, #8]
   30a20:	b.n	309bc <load_free_space_tree@@Base+0x366>
   30a22:	mvn.w	r3, #11
   30a26:	b.n	306b4 <load_free_space_tree@@Base+0x5e>
   30a28:	mov	r0, r3
   30a2a:	add	sp, #124	; 0x7c
   30a2c:	vpop	{d8-d9}
   30a30:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30a34:	strh	r2, [r1, #54]	; 0x36
   30a36:	movs	r3, r0
   30a38:	lsls	r4, r7, #9
   30a3a:	movs	r0, r0
   30a3c:	strh	r2, [r0, #54]	; 0x36
   30a3e:	movs	r3, r0
   30a40:	strh	r0, [r7, #50]	; 0x32
   30a42:	movs	r3, r0
   30a44:	lsls	r4, r1, #10
   30a46:	movs	r0, r0
   30a48:	blxns	r9
   30a4a:	movs	r1, r0
   30a4c:	ldr	r0, [pc, #252]	; (30b4c <btrfs_add_corrupt_extent_record@@Base+0xdc>)
   30a4e:	movs	r1, r0
   30a50:	bx	lr
   30a52:	movs	r1, r0
   30a54:	bx	lr
   30a56:	movs	r1, r0
   30a58:	ldr	r0, [pc, #168]	; (30b04 <btrfs_add_corrupt_extent_record@@Base+0x94>)
   30a5a:	movs	r1, r0
   30a5c:	blxns	ip
   30a5e:	movs	r1, r0
   30a60:	mov	r6, r8
   30a62:	movs	r1, r0
   30a64:	mov	pc, sl
   30a66:	movs	r1, r0
   30a68:	mov	ip, fp
   30a6a:	movs	r1, r0
   30a6c:	mov	sp, r9
   30a6e:	movs	r1, r0

00030a70 <btrfs_add_corrupt_extent_record@@Base>:
   30a70:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30a74:	mov	sl, r2
   30a76:	ldr	r2, [pc, #220]	; (30b54 <btrfs_add_corrupt_extent_record@@Base+0xe4>)
   30a78:	mov	r9, r3
   30a7a:	ldr	r3, [pc, #220]	; (30b58 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   30a7c:	sub	sp, #92	; 0x5c
   30a7e:	add	r2, pc
   30a80:	ldr.w	r8, [pc, #216]	; 30b5c <btrfs_add_corrupt_extent_record@@Base+0xec>
   30a84:	ldr.w	fp, [r0, #380]	; 0x17c
   30a88:	mov	r4, r1
   30a8a:	ldr	r3, [r2, r3]
   30a8c:	add	r8, pc
   30a8e:	ldr	r3, [r3, #0]
   30a90:	str	r3, [sp, #84]	; 0x54
   30a92:	mov.w	r3, #0
   30a96:	cmp.w	fp, #0
   30a9a:	beq.n	30b2e <btrfs_add_corrupt_extent_record@@Base+0xbe>
   30a9c:	movs	r0, #64	; 0x40
   30a9e:	blx	8a94 <malloc@plt+0x4>
   30aa2:	mov	r5, r0
   30aa4:	cmp	r0, #0
   30aa6:	beq.n	30b44 <btrfs_add_corrupt_extent_record@@Base+0xd4>
   30aa8:	add.w	r6, r0, #40	; 0x28
   30aac:	add.w	r3, r4, #16
   30ab0:	ldr	r0, [r4, #0]
   30ab2:	adds	r4, #8
   30ab4:	ldr.w	r1, [r4, #-4]
   30ab8:	cmp	r4, r3
   30aba:	mov	r7, r6
   30abc:	stmia	r7!, {r0, r1}
   30abe:	mov	r6, r7
   30ac0:	bne.n	30ab0 <btrfs_add_corrupt_extent_record@@Base+0x40>
   30ac2:	ldrb	r3, [r4, #0]
   30ac4:	mov	r1, r5
   30ac6:	mov	r0, fp
   30ac8:	strb	r3, [r7, #0]
   30aca:	ldrd	r2, r3, [sp, #128]	; 0x80
   30ace:	strd	sl, r9, [r5, #24]
   30ad2:	strd	r2, r3, [r5, #32]
   30ad6:	ldr	r3, [sp, #136]	; 0x88
   30ad8:	str	r3, [r5, #60]	; 0x3c
   30ada:	bl	1931e <insert_cache_extent@@Base>
   30ade:	mov	r4, r0
   30ae0:	cbz	r0, 30b2e <btrfs_add_corrupt_extent_record@@Base+0xbe>
   30ae2:	mov	r0, r5
   30ae4:	blx	87cc <free@plt+0x4>
   30ae8:	cmn.w	r4, #17
   30aec:	beq.n	30b30 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   30aee:	ldr	r3, [pc, #112]	; (30b60 <btrfs_add_corrupt_extent_record@@Base+0xf0>)
   30af0:	add	r4, sp, #20
   30af2:	ldr	r2, [pc, #112]	; (30b64 <btrfs_add_corrupt_extent_record@@Base+0xf4>)
   30af4:	movs	r1, #1
   30af6:	ldr.w	r0, [r8, r3]
   30afa:	add	r2, pc
   30afc:	ldr	r3, [pc, #104]	; (30b68 <btrfs_add_corrupt_extent_record@@Base+0xf8>)
   30afe:	str	r1, [sp, #12]
   30b00:	add	r3, pc
   30b02:	str	r3, [sp, #8]
   30b04:	ldr	r3, [pc, #100]	; (30b6c <btrfs_add_corrupt_extent_record@@Base+0xfc>)
   30b06:	add	r3, pc
   30b08:	str	r3, [sp, #4]
   30b0a:	movs	r3, #49	; 0x31
   30b0c:	str	r3, [sp, #0]
   30b0e:	ldr	r3, [pc, #96]	; (30b70 <btrfs_add_corrupt_extent_record@@Base+0x100>)
   30b10:	ldr	r0, [r0, #0]
   30b12:	add	r3, pc
   30b14:	blx	8ca0 <__fprintf_chk@plt+0x4>
   30b18:	movs	r1, #16
   30b1a:	mov	r0, r4
   30b1c:	blx	8ae0 <backtrace@plt>
   30b20:	movs	r2, #2
   30b22:	mov	r1, r0
   30b24:	mov	r0, r4
   30b26:	blx	8e50 <backtrace_symbols_fd@plt>
   30b2a:	blx	8e08 <abort@plt>
   30b2e:	movs	r4, #0
   30b30:	ldr	r2, [pc, #64]	; (30b74 <btrfs_add_corrupt_extent_record@@Base+0x104>)
   30b32:	ldr	r3, [pc, #36]	; (30b58 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   30b34:	add	r2, pc
   30b36:	ldr	r3, [r2, r3]
   30b38:	ldr	r2, [r3, #0]
   30b3a:	ldr	r3, [sp, #84]	; 0x54
   30b3c:	eors	r2, r3
   30b3e:	beq.n	30b4a <btrfs_add_corrupt_extent_record@@Base+0xda>
   30b40:	blx	88e4 <__stack_chk_fail@plt>
   30b44:	mvn.w	r4, #11
   30b48:	b.n	30b30 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   30b4a:	mov	r0, r4
   30b4c:	add	sp, #92	; 0x5c
   30b4e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30b52:	nop
   30b54:	strh	r2, [r6, #20]
   30b56:	movs	r3, r0
   30b58:	lsls	r4, r7, #9
   30b5a:	movs	r0, r0
   30b5c:	strh	r4, [r4, #20]
   30b5e:	movs	r3, r0
   30b60:	lsls	r4, r1, #10
   30b62:	movs	r0, r0
   30b64:	stmia	r4!, {r0, r2, r3, r5, r7}
   30b66:	movs	r0, r0
   30b68:	bx	r4
   30b6a:	movs	r1, r0
   30b6c:	bx	r6
   30b6e:	movs	r1, r0
   30b70:	bx	r0
   30b72:	movs	r1, r0
   30b74:	strh	r4, [r7, #14]
   30b76:	movs	r3, r0
   30b78:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30b7c:	mov	r7, r3
   30b7e:	ldr.w	r9, [r0]
   30b82:	mov	r5, r2
   30b84:	ldr	r3, [r0, #32]
   30b86:	movs	r2, #25
   30b88:	add.w	sl, r9, #96	; 0x60
   30b8c:	movs	r4, #0
   30b8e:	mla	r3, r2, r3, sl
   30b92:	ldr.w	r6, [r3, #118]	; 0x76
   30b96:	ldr.w	fp, [r3, #122]	; 0x7a
   30b9a:	adds	r6, #101	; 0x65
   30b9c:	cmp	r4, fp
   30b9e:	bcc.n	30ba4 <btrfs_add_corrupt_extent_record@@Base+0x134>
   30ba0:	movs	r0, #0
   30ba2:	b.n	30bd2 <btrfs_add_corrupt_extent_record@@Base+0x162>
   30ba4:	add.w	r8, r4, r6
   30ba8:	add.w	r3, sl, r8
   30bac:	ldrh	r3, [r3, #8]
   30bae:	cmp	r3, r5
   30bb0:	add.w	r2, r3, #10
   30bb4:	add	r4, r2
   30bb6:	bne.n	30b9c <btrfs_add_corrupt_extent_record@@Base+0x12c>
   30bb8:	add.w	r2, r8, #10
   30bbc:	mov	r3, r5
   30bbe:	mov	r0, r9
   30bc0:	str	r1, [sp, #4]
   30bc2:	bl	1a78c <memcmp_extent_buffer@@Base>
   30bc6:	ldr	r1, [sp, #4]
   30bc8:	cmp	r0, #0
   30bca:	bne.n	30b9c <btrfs_add_corrupt_extent_record@@Base+0x12c>
   30bcc:	movs	r0, #1
   30bce:	str.w	r8, [r7]
   30bd2:	add	sp, #12
   30bd4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30bd8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30bdc:	mov	sl, r2
   30bde:	ldr.w	r8, [r0]
   30be2:	movs	r1, #25
   30be4:	ldr	r2, [r0, #32]
   30be6:	mov	fp, r3
   30be8:	add.w	r9, r8, #96	; 0x60
   30bec:	ldr	r3, [sp, #52]	; 0x34
   30bee:	movs	r4, #0
   30bf0:	mla	r2, r1, r2, r9
   30bf4:	ldr.w	r6, [r2, #118]	; 0x76
   30bf8:	ldr.w	r1, [r2, #122]	; 0x7a
   30bfc:	adds	r6, #101	; 0x65
   30bfe:	str	r1, [sp, #4]
   30c00:	ldr	r2, [sp, #4]
   30c02:	cmp	r4, r2
   30c04:	bcc.n	30c0e <btrfs_add_corrupt_extent_record@@Base+0x19e>
   30c06:	movs	r0, #0
   30c08:	add	sp, #12
   30c0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30c0e:	adds	r7, r4, r6
   30c10:	add.w	r2, r9, r7
   30c14:	ldrh	r5, [r2, #16]
   30c16:	cmp	r5, r3
   30c18:	bne.n	30c42 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   30c1a:	ldr	r1, [r2, #4]
   30c1c:	ldr	r0, [r2, #0]
   30c1e:	cmp	fp, r1
   30c20:	it	eq
   30c22:	cmpeq	sl, r0
   30c24:	bne.n	30c42 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   30c26:	ldr	r1, [sp, #48]	; 0x30
   30c28:	add.w	r2, r7, #18
   30c2c:	mov	r0, r8
   30c2e:	str	r3, [sp, #52]	; 0x34
   30c30:	bl	1a78c <memcmp_extent_buffer@@Base>
   30c34:	ldr	r3, [sp, #52]	; 0x34
   30c36:	cbnz	r0, 30c42 <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   30c38:	ldr	r3, [sp, #56]	; 0x38
   30c3a:	cbz	r3, 30c3e <btrfs_add_corrupt_extent_record@@Base+0x1ce>
   30c3c:	str	r7, [r3, #0]
   30c3e:	movs	r0, #1
   30c40:	b.n	30c08 <btrfs_add_corrupt_extent_record@@Base+0x198>
   30c42:	adds	r5, #18
   30c44:	add	r4, r5
   30c46:	b.n	30c00 <btrfs_add_corrupt_extent_record@@Base+0x190>

00030c48 <btrfs_lookup_inode@@Base>:
   30c48:	push	{r4, r5, r6, r7, lr}
   30c4a:	mov	r5, r2
   30c4c:	ldr	r6, [pc, #152]	; (30ce8 <btrfs_lookup_inode@@Base+0xa0>)
   30c4e:	sub	sp, #36	; 0x24
   30c50:	ldr	r2, [pc, #152]	; (30cec <btrfs_lookup_inode@@Base+0xa4>)
   30c52:	mov	r4, r3
   30c54:	add	r6, pc
   30c56:	ldr	r3, [sp, #56]	; 0x38
   30c58:	ldr	r2, [r6, r2]
   30c5a:	ldr	r2, [r2, #0]
   30c5c:	str	r2, [sp, #28]
   30c5e:	mov.w	r2, #0
   30c62:	subs	r2, r3, #0
   30c64:	mov.w	r3, r3, asr #31
   30c68:	str	r3, [sp, #0]
   30c6a:	it	ne
   30c6c:	movne	r2, #1
   30c6e:	mov	r3, r5
   30c70:	str	r2, [sp, #4]
   30c72:	mov	r2, r4
   30c74:	bl	1d6c0 <btrfs_search_slot@@Base>
   30c78:	subs	r6, r0, #0
   30c7a:	ble.n	30cce <btrfs_lookup_inode@@Base+0x86>
   30c7c:	ldrb	r3, [r4, #8]
   30c7e:	cmp	r3, #132	; 0x84
   30c80:	bne.n	30cce <btrfs_lookup_inode@@Base+0x86>
   30c82:	ldr.w	r3, [r4, #13]
   30c86:	ldr.w	r2, [r4, #9]
   30c8a:	adds	r3, #1
   30c8c:	it	eq
   30c8e:	cmpeq.w	r2, #4294967295	; 0xffffffff
   30c92:	bne.n	30cce <btrfs_lookup_inode@@Base+0x86>
   30c94:	ldr	r2, [r5, #32]
   30c96:	cbz	r2, 30cce <btrfs_lookup_inode@@Base+0x86>
   30c98:	subs	r2, #1
   30c9a:	movs	r3, #25
   30c9c:	ldr	r0, [r5, #0]
   30c9e:	add	r1, sp, #8
   30ca0:	muls	r2, r3
   30ca2:	movs	r3, #17
   30ca4:	adds	r2, #101	; 0x65
   30ca6:	bl	1a79e <read_extent_buffer@@Base>
   30caa:	ldrd	r2, r3, [sp, #8]
   30cae:	ldr	r1, [r4, #4]
   30cb0:	ldr	r0, [r4, #0]
   30cb2:	cmp	r1, r3
   30cb4:	ldrb.w	r7, [sp, #16]
   30cb8:	it	eq
   30cba:	cmpeq	r0, r2
   30cbc:	bne.n	30cce <btrfs_lookup_inode@@Base+0x86>
   30cbe:	ldrb	r3, [r4, #8]
   30cc0:	cmp	r3, r7
   30cc2:	itttt	eq
   30cc4:	ldreq	r3, [r5, #32]
   30cc6:	moveq	r6, #0
   30cc8:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   30ccc:	streq	r3, [r5, #32]
   30cce:	ldr	r2, [pc, #32]	; (30cf0 <btrfs_lookup_inode@@Base+0xa8>)
   30cd0:	ldr	r3, [pc, #24]	; (30cec <btrfs_lookup_inode@@Base+0xa4>)
   30cd2:	add	r2, pc
   30cd4:	ldr	r3, [r2, r3]
   30cd6:	ldr	r2, [r3, #0]
   30cd8:	ldr	r3, [sp, #28]
   30cda:	eors	r2, r3
   30cdc:	beq.n	30ce2 <btrfs_lookup_inode@@Base+0x9a>
   30cde:	blx	88e4 <__stack_chk_fail@plt>
   30ce2:	mov	r0, r6
   30ce4:	add	sp, #36	; 0x24
   30ce6:	pop	{r4, r5, r6, r7, pc}
   30ce8:	strh	r4, [r3, #6]
   30cea:	movs	r3, r0
   30cec:	lsls	r4, r7, #9
   30cee:	movs	r0, r0
   30cf0:	strh	r6, [r3, #2]
   30cf2:	movs	r3, r0

00030cf4 <btrfs_insert_inode@@Base>:
   30cf4:	push	{lr}
   30cf6:	sub	sp, #36	; 0x24
   30cf8:	ldr.w	lr, [pc, #104]	; 30d64 <btrfs_insert_inode@@Base+0x70>
   30cfc:	ldr.w	ip, [pc, #104]	; 30d68 <btrfs_insert_inode@@Base+0x74>
   30d00:	add	lr, pc
   30d02:	ldr.w	ip, [lr, ip]
   30d06:	ldr.w	ip, [ip]
   30d0a:	str.w	ip, [sp, #28]
   30d0e:	mov.w	ip, #0
   30d12:	strd	r2, r3, [sp, #8]
   30d16:	movs	r2, #0
   30d18:	movs	r3, #1
   30d1a:	strb.w	r2, [sp, #17]
   30d1e:	strb.w	r3, [sp, #16]
   30d22:	movs	r3, #160	; 0xa0
   30d24:	strb.w	r2, [sp, #18]
   30d28:	strb.w	r2, [sp, #19]
   30d2c:	strb.w	r2, [sp, #20]
   30d30:	strb.w	r2, [sp, #21]
   30d34:	strb.w	r2, [sp, #22]
   30d38:	strb.w	r2, [sp, #23]
   30d3c:	strb.w	r2, [sp, #24]
   30d40:	add	r2, sp, #8
   30d42:	str	r3, [sp, #0]
   30d44:	ldr	r3, [sp, #40]	; 0x28
   30d46:	bl	1e74c <btrfs_insert_item@@Base>
   30d4a:	ldr	r2, [pc, #32]	; (30d6c <btrfs_insert_inode@@Base+0x78>)
   30d4c:	ldr	r3, [pc, #24]	; (30d68 <btrfs_insert_inode@@Base+0x74>)
   30d4e:	add	r2, pc
   30d50:	ldr	r3, [r2, r3]
   30d52:	ldr	r2, [r3, #0]
   30d54:	ldr	r3, [sp, #28]
   30d56:	eors	r2, r3
   30d58:	beq.n	30d5e <btrfs_insert_inode@@Base+0x6a>
   30d5a:	blx	88e4 <__stack_chk_fail@plt>
   30d5e:	add	sp, #36	; 0x24
   30d60:	ldr.w	pc, [sp], #4
   30d64:	strh	r0, [r6, #0]
   30d66:	movs	r3, r0
   30d68:	lsls	r4, r7, #9
   30d6a:	movs	r0, r0
   30d6c:	ldrb	r2, [r4, #31]
   30d6e:	movs	r3, r0

00030d70 <btrfs_lookup_inode_ref@@Base>:
   30d70:	push	{r4, r5, r6, lr}
   30d72:	mov	r4, r2
   30d74:	ldr	r2, [pc, #112]	; (30de8 <btrfs_lookup_inode_ref@@Base+0x78>)
   30d76:	mov	r5, r3
   30d78:	ldr	r3, [pc, #112]	; (30dec <btrfs_lookup_inode_ref@@Base+0x7c>)
   30d7a:	sub	sp, #40	; 0x28
   30d7c:	add	r2, pc
   30d7e:	ldr	r6, [sp, #80]	; 0x50
   30d80:	ldr	r3, [r2, r3]
   30d82:	ldr	r3, [r3, #0]
   30d84:	str	r3, [sp, #36]	; 0x24
   30d86:	mov.w	r3, #0
   30d8a:	movs	r3, #0
   30d8c:	str	r3, [sp, #12]
   30d8e:	ldrd	r2, r3, [sp, #64]	; 0x40
   30d92:	strd	r2, r3, [sp, #16]
   30d96:	movs	r3, #12
   30d98:	strb.w	r3, [sp, #24]
   30d9c:	add	r2, sp, #16
   30d9e:	ldr	r3, [sp, #72]	; 0x48
   30da0:	str.w	r3, [sp, #25]
   30da4:	ldr	r3, [sp, #76]	; 0x4c
   30da6:	str.w	r3, [sp, #29]
   30daa:	subs	r3, r6, #0
   30dac:	it	ne
   30dae:	movne	r3, #1
   30db0:	strd	r6, r3, [sp]
   30db4:	mov	r3, r4
   30db6:	bl	1d6c0 <btrfs_search_slot@@Base>
   30dba:	cmp	r0, #0
   30dbc:	bne.n	30dce <btrfs_lookup_inode_ref@@Base+0x5e>
   30dbe:	ldr	r2, [sp, #56]	; 0x38
   30dc0:	add	r3, sp, #12
   30dc2:	mov	r1, r5
   30dc4:	mov	r0, r4
   30dc6:	bl	30b78 <btrfs_add_corrupt_extent_record@@Base+0x108>
   30dca:	ldr	r0, [sp, #12]
   30dcc:	b.n	30dd0 <btrfs_lookup_inode_ref@@Base+0x60>
   30dce:	bge.n	30dca <btrfs_lookup_inode_ref@@Base+0x5a>
   30dd0:	ldr	r2, [pc, #28]	; (30df0 <btrfs_lookup_inode_ref@@Base+0x80>)
   30dd2:	ldr	r3, [pc, #24]	; (30dec <btrfs_lookup_inode_ref@@Base+0x7c>)
   30dd4:	add	r2, pc
   30dd6:	ldr	r3, [r2, r3]
   30dd8:	ldr	r2, [r3, #0]
   30dda:	ldr	r3, [sp, #36]	; 0x24
   30ddc:	eors	r2, r3
   30dde:	beq.n	30de4 <btrfs_lookup_inode_ref@@Base+0x74>
   30de0:	blx	88e4 <__stack_chk_fail@plt>
   30de4:	add	sp, #40	; 0x28
   30de6:	pop	{r4, r5, r6, pc}
   30de8:	ldrb	r4, [r6, #30]
   30dea:	movs	r3, r0
   30dec:	lsls	r4, r7, #9
   30dee:	movs	r0, r0
   30df0:	ldrb	r4, [r3, #29]
   30df2:	movs	r3, r0

00030df4 <btrfs_lookup_inode_extref@@Base>:
   30df4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30df8:	mov	sl, r2
   30dfa:	ldr	r2, [pc, #152]	; (30e94 <btrfs_lookup_inode_extref@@Base+0xa0>)
   30dfc:	sub	sp, #52	; 0x34
   30dfe:	ldr	r3, [pc, #152]	; (30e98 <btrfs_lookup_inode_extref@@Base+0xa4>)
   30e00:	mov	r5, r0
   30e02:	add	r2, pc
   30e04:	ldrd	r7, r8, [sp, #112]	; 0x70
   30e08:	ldrd	r6, r9, [sp, #96]	; 0x60
   30e0c:	mov	r4, r1
   30e0e:	ldr	r3, [r2, r3]
   30e10:	mov	r1, r7
   30e12:	ldr.w	fp, [sp, #120]	; 0x78
   30e16:	ldr	r3, [r3, #0]
   30e18:	str	r3, [sp, #44]	; 0x2c
   30e1a:	mov.w	r3, #0
   30e1e:	ldrd	r2, r3, [sp, #88]	; 0x58
   30e22:	mov	r0, r6
   30e24:	strd	r2, r3, [sp, #24]
   30e28:	mov	r2, r8
   30e2a:	movs	r3, #13
   30e2c:	strb.w	r3, [sp, #32]
   30e30:	bl	1a87e <crc32c_le@@Base>
   30e34:	movs	r3, #0
   30e36:	str.w	r3, [sp, #37]	; 0x25
   30e3a:	subs.w	r3, fp, r3
   30e3e:	add	r2, sp, #24
   30e40:	mov	r1, sl
   30e42:	it	ne
   30e44:	movne	r3, #1
   30e46:	strd	fp, r3, [sp]
   30e4a:	mov	r3, r4
   30e4c:	str.w	r0, [sp, #33]	; 0x21
   30e50:	mov	r0, r5
   30e52:	bl	1d6c0 <btrfs_search_slot@@Base>
   30e56:	cmp	r0, #0
   30e58:	blt.n	30e5e <btrfs_lookup_inode_extref@@Base+0x6a>
   30e5a:	beq.n	30e72 <btrfs_lookup_inode_extref@@Base+0x7e>
   30e5c:	movs	r0, #0
   30e5e:	ldr	r2, [pc, #60]	; (30e9c <btrfs_lookup_inode_extref@@Base+0xa8>)
   30e60:	ldr	r3, [pc, #52]	; (30e98 <btrfs_lookup_inode_extref@@Base+0xa4>)
   30e62:	add	r2, pc
   30e64:	ldr	r3, [r2, r3]
   30e66:	ldr	r2, [r3, #0]
   30e68:	ldr	r3, [sp, #44]	; 0x2c
   30e6a:	eors	r2, r3
   30e6c:	beq.n	30e8c <btrfs_lookup_inode_extref@@Base+0x98>
   30e6e:	blx	88e4 <__stack_chk_fail@plt>
   30e72:	add	r3, sp, #20
   30e74:	mov	r2, r6
   30e76:	strd	r8, r3, [sp, #4]
   30e7a:	mov	r0, r4
   30e7c:	mov	r3, r9
   30e7e:	str	r7, [sp, #0]
   30e80:	bl	30bd8 <btrfs_add_corrupt_extent_record@@Base+0x168>
   30e84:	cmp	r0, #0
   30e86:	beq.n	30e5c <btrfs_lookup_inode_extref@@Base+0x68>
   30e88:	ldr	r0, [sp, #20]
   30e8a:	b.n	30e5e <btrfs_lookup_inode_extref@@Base+0x6a>
   30e8c:	add	sp, #52	; 0x34
   30e8e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30e92:	nop
   30e94:	ldrb	r6, [r5, #28]
   30e96:	movs	r3, r0
   30e98:	lsls	r4, r7, #9
   30e9a:	movs	r0, r0
   30e9c:	ldrb	r6, [r1, #27]
   30e9e:	movs	r3, r0

00030ea0 <btrfs_del_inode_extref@@Base>:
   30ea0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30ea4:	mov	r6, r3
   30ea6:	vpush	{d8}
   30eaa:	mov	fp, r2
   30eac:	ldr	r2, [pc, #284]	; (30fcc <btrfs_del_inode_extref@@Base+0x12c>)
   30eae:	mov	r8, r0
   30eb0:	mov	r7, r1
   30eb2:	mov	r1, fp
   30eb4:	add	r2, pc
   30eb6:	sub	sp, #52	; 0x34
   30eb8:	ldrd	sl, r3, [sp, #104]	; 0x68
   30ebc:	ldr.w	r9, [sp, #112]	; 0x70
   30ec0:	vmov	s16, r3
   30ec4:	ldr	r3, [pc, #264]	; (30fd0 <btrfs_del_inode_extref@@Base+0x130>)
   30ec6:	mov	r0, sl
   30ec8:	ldr	r3, [r2, r3]
   30eca:	ldr	r3, [r3, #0]
   30ecc:	str	r3, [sp, #44]	; 0x2c
   30ece:	mov.w	r3, #0
   30ed2:	ldrd	r2, r3, [sp, #96]	; 0x60
   30ed6:	strd	r2, r3, [sp, #24]
   30eda:	mov	r2, r6
   30edc:	movs	r3, #13
   30ede:	strb.w	r3, [sp, #32]
   30ee2:	bl	1a87e <crc32c_le@@Base>
   30ee6:	movs	r3, #0
   30ee8:	str.w	r3, [sp, #37]	; 0x25
   30eec:	str.w	r0, [sp, #33]	; 0x21
   30ef0:	bl	1b2d4 <btrfs_alloc_path@@Base>
   30ef4:	mov	r4, r0
   30ef6:	cmp	r0, #0
   30ef8:	beq.n	30fb8 <btrfs_del_inode_extref@@Base+0x118>
   30efa:	mov.w	r3, #4294967295	; 0xffffffff
   30efe:	movs	r2, #1
   30f00:	mov	r1, r7
   30f02:	strd	r3, r2, [sp]
   30f06:	mov	r3, r0
   30f08:	add	r2, sp, #24
   30f0a:	mov	r0, r8
   30f0c:	bl	1d6c0 <btrfs_search_slot@@Base>
   30f10:	subs	r5, r0, #0
   30f12:	ble.n	30f32 <btrfs_del_inode_extref@@Base+0x92>
   30f14:	mvn.w	r5, #1
   30f18:	mov	r0, r4
   30f1a:	bl	1b302 <btrfs_free_path@@Base>
   30f1e:	ldr	r2, [pc, #180]	; (30fd4 <btrfs_del_inode_extref@@Base+0x134>)
   30f20:	ldr	r3, [pc, #172]	; (30fd0 <btrfs_del_inode_extref@@Base+0x130>)
   30f22:	add	r2, pc
   30f24:	ldr	r3, [r2, r3]
   30f26:	ldr	r2, [r3, #0]
   30f28:	ldr	r3, [sp, #44]	; 0x2c
   30f2a:	eors	r2, r3
   30f2c:	beq.n	30fbe <btrfs_del_inode_extref@@Base+0x11e>
   30f2e:	blx	88e4 <__stack_chk_fail@plt>
   30f32:	bne.n	30f18 <btrfs_del_inode_extref@@Base+0x78>
   30f34:	add	r3, sp, #20
   30f36:	mov	r2, sl
   30f38:	strd	r6, r3, [sp, #4]
   30f3c:	mov	r0, r4
   30f3e:	vmov	r3, s16
   30f42:	str.w	fp, [sp]
   30f46:	bl	30bd8 <btrfs_add_corrupt_extent_record@@Base+0x168>
   30f4a:	cmp	r0, #0
   30f4c:	beq.n	30f14 <btrfs_del_inode_extref@@Base+0x74>
   30f4e:	ldr	r0, [r4, #0]
   30f50:	movs	r2, #25
   30f52:	ldr	r3, [r4, #32]
   30f54:	add.w	ip, r0, #96	; 0x60
   30f58:	mla	r3, r2, r3, ip
   30f5c:	ldr.w	sl, [r3, #122]	; 0x7a
   30f60:	cmp.w	r9, #0
   30f64:	beq.n	30f72 <btrfs_del_inode_extref@@Base+0xd2>
   30f66:	ldr	r2, [sp, #20]
   30f68:	add	r2, ip
   30f6a:	ldr	r1, [r2, #8]
   30f6c:	ldr	r3, [r2, #12]
   30f6e:	strd	r1, r3, [r9]
   30f72:	adds	r6, #18
   30f74:	ldr	r3, [r4, #32]
   30f76:	cmp	r6, sl
   30f78:	bne.n	30f8c <btrfs_del_inode_extref@@Base+0xec>
   30f7a:	movs	r2, #1
   30f7c:	mov	r1, r7
   30f7e:	str	r2, [sp, #0]
   30f80:	mov	r0, r8
   30f82:	mov	r2, r4
   30f84:	bl	1e87c <btrfs_del_items@@Base>
   30f88:	mov	r5, r0
   30f8a:	b.n	30f18 <btrfs_del_inode_extref@@Base+0x78>
   30f8c:	mov.w	lr, #25
   30f90:	ldr	r1, [sp, #20]
   30f92:	mla	r3, lr, r3, ip
   30f96:	adds	r2, r6, r1
   30f98:	ldr.w	ip, [r3, #118]	; 0x76
   30f9c:	rsb	r3, r2, #101	; 0x65
   30fa0:	add	r3, sl
   30fa2:	add	r3, ip
   30fa4:	bl	1a810 <memmove_extent_buffer@@Base>
   30fa8:	sub.w	r2, sl, r6
   30fac:	movs	r3, #1
   30fae:	mov	r1, r4
   30fb0:	mov	r0, r7
   30fb2:	bl	1d300 <btrfs_truncate_item@@Base>
   30fb6:	b.n	30f18 <btrfs_del_inode_extref@@Base+0x78>
   30fb8:	mvn.w	r5, #11
   30fbc:	b.n	30f1e <btrfs_del_inode_extref@@Base+0x7e>
   30fbe:	mov	r0, r5
   30fc0:	add	sp, #52	; 0x34
   30fc2:	vpop	{d8}
   30fc6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30fca:	nop
   30fcc:	ldrb	r4, [r7, #25]
   30fce:	movs	r3, r0
   30fd0:	lsls	r4, r7, #9
   30fd2:	movs	r0, r0
   30fd4:	ldrb	r6, [r1, #24]
   30fd6:	movs	r3, r0

00030fd8 <btrfs_insert_inode_extref@@Base>:
   30fd8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30fdc:	sub	sp, #68	; 0x44
   30fde:	mov	r6, r3
   30fe0:	mov	r7, r2
   30fe2:	ldrd	sl, r3, [sp, #112]	; 0x70
   30fe6:	mov	r5, r0
   30fe8:	ldr	r2, [pc, #260]	; (310f0 <btrfs_insert_inode_extref@@Base+0x118>)
   30fea:	mov	r9, r1
   30fec:	mov	r1, r7
   30fee:	mov.w	fp, #0
   30ff2:	str	r3, [sp, #20]
   30ff4:	add	r2, pc
   30ff6:	ldr	r3, [sp, #120]	; 0x78
   30ff8:	mov	r0, sl
   30ffa:	add.w	r8, r6, #18
   30ffe:	str	r3, [sp, #24]
   31000:	ldr	r3, [sp, #124]	; 0x7c
   31002:	str	r3, [sp, #28]
   31004:	ldr	r3, [pc, #236]	; (310f4 <btrfs_insert_inode_extref@@Base+0x11c>)
   31006:	ldr	r3, [r2, r3]
   31008:	ldr	r3, [r3, #0]
   3100a:	str	r3, [sp, #60]	; 0x3c
   3100c:	mov.w	r3, #0
   31010:	ldrd	r2, r3, [sp, #104]	; 0x68
   31014:	strd	r2, r3, [sp, #40]	; 0x28
   31018:	mov	r2, r6
   3101a:	movs	r3, #13
   3101c:	strb.w	r3, [sp, #48]	; 0x30
   31020:	bl	1a87e <crc32c_le@@Base>
   31024:	str.w	fp, [sp, #53]	; 0x35
   31028:	str.w	r0, [sp, #49]	; 0x31
   3102c:	bl	1b2d4 <btrfs_alloc_path@@Base>
   31030:	mov	r4, r0
   31032:	cmp	r0, #0
   31034:	beq.n	310e0 <btrfs_insert_inode_extref@@Base+0x108>
   31036:	movs	r3, #1
   31038:	mov	r2, r0
   3103a:	str	r3, [sp, #4]
   3103c:	mov	r0, r5
   3103e:	add	r3, sp, #36	; 0x24
   31040:	mov	r1, r9
   31042:	str	r3, [sp, #0]
   31044:	add	r3, sp, #40	; 0x28
   31046:	str.w	r8, [sp, #36]	; 0x24
   3104a:	bl	1e490 <btrfs_insert_empty_items@@Base>
   3104e:	cmn.w	r0, #17
   31052:	mov	r5, r0
   31054:	bne.n	310c2 <btrfs_insert_inode_extref@@Base+0xea>
   31056:	strd	r6, fp, [sp, #4]
   3105a:	mov	r2, sl
   3105c:	ldr	r3, [sp, #20]
   3105e:	mov	r0, r4
   31060:	str	r7, [sp, #0]
   31062:	bl	30bd8 <btrfs_add_corrupt_extent_record@@Base+0x168>
   31066:	mov	fp, r0
   31068:	cbnz	r0, 310c6 <btrfs_insert_inode_extref@@Base+0xee>
   3106a:	mov	r2, r8
   3106c:	mov	r1, r4
   3106e:	mov	r0, r9
   31070:	mov	r5, fp
   31072:	bl	1d4b4 <btrfs_extend_item@@Base>
   31076:	ldr	r3, [r4, #0]
   31078:	movs	r2, #25
   3107a:	ldr	r1, [r4, #32]
   3107c:	rsb	r8, r8, #101	; 0x65
   31080:	adds	r3, #96	; 0x60
   31082:	mla	r1, r2, r1, r3
   31086:	ldr.w	r2, [r1, #118]	; 0x76
   3108a:	add	r8, r2
   3108c:	ldr.w	r2, [r1, #122]	; 0x7a
   31090:	ldr	r1, [sp, #24]
   31092:	add	r2, r8
   31094:	add	r3, r2
   31096:	strh	r6, [r3, #16]
   31098:	ldr	r3, [r4, #0]
   3109a:	add	r3, r2
   3109c:	str	r1, [r3, #104]	; 0x68
   3109e:	ldr	r1, [sp, #28]
   310a0:	str	r1, [r3, #108]	; 0x6c
   310a2:	ldr	r3, [r4, #0]
   310a4:	ldr	r1, [sp, #20]
   310a6:	add	r3, r2
   310a8:	adds	r2, #18
   310aa:	str.w	sl, [r3, #96]	; 0x60
   310ae:	str	r1, [r3, #100]	; 0x64
   310b0:	mov	r3, r6
   310b2:	ldr	r0, [r4, #0]
   310b4:	mov	r1, r7
   310b6:	bl	1a7b4 <write_extent_buffer@@Base>
   310ba:	ldr	r0, [r4, #0]
   310bc:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   310c0:	b.n	310c6 <btrfs_insert_inode_extref@@Base+0xee>
   310c2:	cmp	r0, #0
   310c4:	bge.n	31076 <btrfs_insert_inode_extref@@Base+0x9e>
   310c6:	mov	r0, r4
   310c8:	bl	1b302 <btrfs_free_path@@Base>
   310cc:	ldr	r2, [pc, #40]	; (310f8 <btrfs_insert_inode_extref@@Base+0x120>)
   310ce:	ldr	r3, [pc, #36]	; (310f4 <btrfs_insert_inode_extref@@Base+0x11c>)
   310d0:	add	r2, pc
   310d2:	ldr	r3, [r2, r3]
   310d4:	ldr	r2, [r3, #0]
   310d6:	ldr	r3, [sp, #60]	; 0x3c
   310d8:	eors	r2, r3
   310da:	beq.n	310e6 <btrfs_insert_inode_extref@@Base+0x10e>
   310dc:	blx	88e4 <__stack_chk_fail@plt>
   310e0:	mvn.w	r5, #11
   310e4:	b.n	310cc <btrfs_insert_inode_extref@@Base+0xf4>
   310e6:	mov	r0, r5
   310e8:	add	sp, #68	; 0x44
   310ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   310ee:	nop
   310f0:	ldrb	r4, [r7, #20]
   310f2:	movs	r3, r0
   310f4:	lsls	r4, r7, #9
   310f6:	movs	r0, r0
   310f8:	ldrb	r0, [r4, #17]
   310fa:	movs	r3, r0

000310fc <btrfs_insert_inode_ref@@Base>:
   310fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31100:	sub	sp, #148	; 0x94
   31102:	mov	r6, r3
   31104:	mov	r8, r2
   31106:	ldr	r3, [sp, #192]	; 0xc0
   31108:	mov	r9, r0
   3110a:	ldr	r2, [pc, #424]	; (312b4 <btrfs_insert_inode_ref@@Base+0x1b8>)
   3110c:	mov	r7, r1
   3110e:	ldr.w	fp, [sp, #204]	; 0xcc
   31112:	str	r3, [sp, #36]	; 0x24
   31114:	add	r2, pc
   31116:	ldr	r3, [sp, #196]	; 0xc4
   31118:	str	r3, [sp, #40]	; 0x28
   3111a:	ldr	r3, [sp, #200]	; 0xc8
   3111c:	str	r3, [sp, #24]
   3111e:	ldr	r3, [pc, #408]	; (312b8 <btrfs_insert_inode_ref@@Base+0x1bc>)
   31120:	add	r3, pc
   31122:	str	r3, [sp, #32]
   31124:	ldr	r3, [pc, #404]	; (312bc <btrfs_insert_inode_ref@@Base+0x1c0>)
   31126:	ldr	r3, [r2, r3]
   31128:	ldr	r3, [r3, #0]
   3112a:	str	r3, [sp, #140]	; 0x8c
   3112c:	mov.w	r3, #0
   31130:	add.w	r3, r6, #10
   31134:	str	r3, [sp, #28]
   31136:	ldrd	r3, r4, [sp, #184]	; 0xb8
   3113a:	strd	r3, r4, [sp, #56]	; 0x38
   3113e:	ldr	r3, [sp, #36]	; 0x24
   31140:	str.w	r3, [sp, #65]	; 0x41
   31144:	ldr	r3, [sp, #40]	; 0x28
   31146:	str.w	r3, [sp, #69]	; 0x45
   3114a:	movs	r3, #12
   3114c:	strb.w	r3, [sp, #64]	; 0x40
   31150:	bl	1b2d4 <btrfs_alloc_path@@Base>
   31154:	mov	r4, r0
   31156:	cmp	r0, #0
   31158:	beq.w	312a6 <btrfs_insert_inode_ref@@Base+0x1aa>
   3115c:	ldr	r3, [sp, #28]
   3115e:	mov	r2, r0
   31160:	add.w	sl, sp, #52	; 0x34
   31164:	mov	r1, r7
   31166:	mov	r0, r9
   31168:	str.w	sl, [sp]
   3116c:	str	r3, [sp, #52]	; 0x34
   3116e:	movs	r3, #1
   31170:	str	r3, [sp, #4]
   31172:	add	r3, sp, #56	; 0x38
   31174:	bl	1e490 <btrfs_insert_empty_items@@Base>
   31178:	cmn.w	r0, #17
   3117c:	mov	r5, r0
   3117e:	bne.n	3122e <btrfs_insert_inode_ref@@Base+0x132>
   31180:	mov	r3, sl
   31182:	mov	r2, r6
   31184:	mov	r1, r8
   31186:	mov	r0, r4
   31188:	bl	30b78 <btrfs_add_corrupt_extent_record@@Base+0x108>
   3118c:	cmp	r0, #0
   3118e:	bne.n	3123c <btrfs_insert_inode_ref@@Base+0x140>
   31190:	ldr	r2, [r4, #0]
   31192:	mov.w	sl, #25
   31196:	ldr	r3, [r4, #32]
   31198:	mov	r1, r4
   3119a:	mov	r0, r7
   3119c:	mla	r3, sl, r3, r2
   311a0:	ldr	r2, [sp, #28]
   311a2:	ldr.w	r3, [r3, #218]	; 0xda
   311a6:	str	r3, [sp, #44]	; 0x2c
   311a8:	bl	1d4b4 <btrfs_extend_item@@Base>
   311ac:	ldr	r3, [sp, #44]	; 0x2c
   311ae:	mov	r5, r0
   311b0:	cbz	r0, 311f2 <btrfs_insert_inode_ref@@Base+0xf6>
   311b2:	ldr	r2, [sp, #32]
   311b4:	add	r4, sp, #76	; 0x4c
   311b6:	ldr	r3, [pc, #264]	; (312c0 <btrfs_insert_inode_ref@@Base+0x1c4>)
   311b8:	movs	r1, #1
   311ba:	ldr	r0, [r2, r3]
   311bc:	ldr	r3, [pc, #260]	; (312c4 <btrfs_insert_inode_ref@@Base+0x1c8>)
   311be:	ldr	r2, [pc, #264]	; (312c8 <btrfs_insert_inode_ref@@Base+0x1cc>)
   311c0:	add	r3, pc
   311c2:	str	r3, [sp, #8]
   311c4:	ldr	r3, [pc, #260]	; (312cc <btrfs_insert_inode_ref@@Base+0x1d0>)
   311c6:	add	r2, pc
   311c8:	str	r5, [sp, #12]
   311ca:	add	r3, pc
   311cc:	str	r3, [sp, #4]
   311ce:	movs	r3, #83	; 0x53
   311d0:	str	r3, [sp, #0]
   311d2:	ldr	r3, [pc, #252]	; (312d0 <btrfs_insert_inode_ref@@Base+0x1d4>)
   311d4:	ldr	r0, [r0, #0]
   311d6:	add	r3, pc
   311d8:	blx	8ca0 <__fprintf_chk@plt+0x4>
   311dc:	movs	r1, #16
   311de:	mov	r0, r4
   311e0:	blx	8ae0 <backtrace@plt>
   311e4:	movs	r2, #2
   311e6:	mov	r1, r0
   311e8:	mov	r0, r4
   311ea:	blx	8e50 <backtrace_symbols_fd@plt>
   311ee:	blx	8e08 <abort@plt>
   311f2:	ldr	r2, [r4, #32]
   311f4:	ldr	r1, [r4, #0]
   311f6:	mla	r2, sl, r2, r1
   311fa:	ldr.w	r2, [r2, #214]	; 0xd6
   311fe:	add	r3, r2
   31200:	adds	r3, #101	; 0x65
   31202:	str	r3, [sp, #52]	; 0x34
   31204:	ldr	r2, [r4, #0]
   31206:	mov	r1, r8
   31208:	add	r2, r3
   3120a:	strh.w	r6, [r2, #104]	; 0x68
   3120e:	ldr	r2, [r4, #0]
   31210:	add	r3, r2
   31212:	ldr	r2, [sp, #24]
   31214:	str.w	fp, [r3, #100]	; 0x64
   31218:	str	r2, [r3, #96]	; 0x60
   3121a:	mov	r3, r6
   3121c:	ldr	r2, [sp, #52]	; 0x34
   3121e:	ldr	r0, [r4, #0]
   31220:	adds	r2, #10
   31222:	bl	1a7b4 <write_extent_buffer@@Base>
   31226:	ldr	r0, [r4, #0]
   31228:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   3122c:	b.n	3123c <btrfs_insert_inode_ref@@Base+0x140>
   3122e:	cmp	r0, #0
   31230:	bge.n	31296 <btrfs_insert_inode_ref@@Base+0x19a>
   31232:	cmn.w	r0, #75	; 0x4b
   31236:	it	eq
   31238:	mvneq.w	r5, #30
   3123c:	mov	r0, r4
   3123e:	bl	1b302 <btrfs_free_path@@Base>
   31242:	cmn.w	r5, #31
   31246:	bne.n	31282 <btrfs_insert_inode_ref@@Base+0x186>
   31248:	ldr.w	r3, [r7, #464]	; 0x1d0
   3124c:	ldr.w	r3, [r3, #308]	; 0x134
   31250:	ldr.w	r1, [r3, #188]	; 0xbc
   31254:	movs	r3, #0
   31256:	and.w	r2, r1, #64	; 0x40
   3125a:	orrs	r3, r2
   3125c:	beq.n	31282 <btrfs_insert_inode_ref@@Base+0x186>
   3125e:	ldr	r3, [sp, #24]
   31260:	mov	r2, r8
   31262:	mov	r1, r7
   31264:	mov	r0, r9
   31266:	strd	r3, fp, [sp, #16]
   3126a:	ldr	r3, [sp, #36]	; 0x24
   3126c:	str	r3, [sp, #8]
   3126e:	ldr	r3, [sp, #40]	; 0x28
   31270:	str	r3, [sp, #12]
   31272:	ldrd	r3, r4, [sp, #184]	; 0xb8
   31276:	strd	r3, r4, [sp]
   3127a:	mov	r3, r6
   3127c:	bl	30fd8 <btrfs_insert_inode_extref@@Base>
   31280:	mov	r5, r0
   31282:	ldr	r2, [pc, #80]	; (312d4 <btrfs_insert_inode_ref@@Base+0x1d8>)
   31284:	ldr	r3, [pc, #52]	; (312bc <btrfs_insert_inode_ref@@Base+0x1c0>)
   31286:	add	r2, pc
   31288:	ldr	r3, [r2, r3]
   3128a:	ldr	r2, [r3, #0]
   3128c:	ldr	r3, [sp, #140]	; 0x8c
   3128e:	eors	r2, r3
   31290:	beq.n	312ac <btrfs_insert_inode_ref@@Base+0x1b0>
   31292:	blx	88e4 <__stack_chk_fail@plt>
   31296:	ldr	r3, [r4, #32]
   31298:	movs	r1, #25
   3129a:	ldr	r2, [r4, #0]
   3129c:	mla	r3, r1, r3, r2
   312a0:	ldr.w	r3, [r3, #214]	; 0xd6
   312a4:	b.n	31200 <btrfs_insert_inode_ref@@Base+0x104>
   312a6:	mvn.w	r5, #11
   312aa:	b.n	31282 <btrfs_insert_inode_ref@@Base+0x186>
   312ac:	mov	r0, r5
   312ae:	add	sp, #148	; 0x94
   312b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   312b4:	ldrb	r4, [r3, #16]
   312b6:	movs	r3, r0
   312b8:	ldrb	r0, [r2, #16]
   312ba:	movs	r3, r0
   312bc:	lsls	r4, r7, #9
   312be:	movs	r0, r0
   312c0:	lsls	r4, r1, #10
   312c2:	movs	r0, r0
   312c4:	bvs.n	31242 <btrfs_insert_inode_ref@@Base+0x146>
   312c6:	movs	r0, r0
   312c8:	pop	{r0, r5, r6, r7, pc}
   312ca:	movs	r0, r0
   312cc:	lsls	r1, r3
   312ce:	movs	r1, r0
   312d0:	lsls	r0, r0
   312d2:	movs	r1, r0
   312d4:	ldrb	r2, [r5, #10]
   312d6:	movs	r3, r0

000312d8 <btrfs_del_inode_ref@@Base>:
   312d8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   312dc:	sub	sp, #76	; 0x4c
   312de:	mov	r8, r3
   312e0:	mov	r9, r2
   312e2:	ldr	r3, [sp, #120]	; 0x78
   312e4:	mov	r7, r0
   312e6:	ldr	r2, [pc, #356]	; (3144c <btrfs_del_inode_ref@@Base+0x174>)
   312e8:	mov	r6, r1
   312ea:	ldr.w	sl, [sp, #128]	; 0x80
   312ee:	str	r3, [sp, #32]
   312f0:	add	r2, pc
   312f2:	ldr	r3, [sp, #124]	; 0x7c
   312f4:	str	r3, [sp, #36]	; 0x24
   312f6:	ldr	r3, [pc, #344]	; (31450 <btrfs_del_inode_ref@@Base+0x178>)
   312f8:	ldr	r3, [r2, r3]
   312fa:	ldr	r3, [r3, #0]
   312fc:	str	r3, [sp, #68]	; 0x44
   312fe:	mov.w	r3, #0
   31302:	ldrd	r3, r4, [sp, #112]	; 0x70
   31306:	strd	r3, r4, [sp, #48]	; 0x30
   3130a:	ldr	r3, [sp, #32]
   3130c:	str.w	r3, [sp, #57]	; 0x39
   31310:	ldr	r3, [sp, #36]	; 0x24
   31312:	str.w	r3, [sp, #61]	; 0x3d
   31316:	movs	r3, #12
   31318:	strb.w	r3, [sp, #56]	; 0x38
   3131c:	bl	1b2d4 <btrfs_alloc_path@@Base>
   31320:	mov	r5, r0
   31322:	cmp	r0, #0
   31324:	beq.w	3143e <btrfs_del_inode_ref@@Base+0x166>
   31328:	mov.w	r3, #4294967295	; 0xffffffff
   3132c:	movs	r2, #1
   3132e:	mov	r1, r6
   31330:	strd	r3, r2, [sp]
   31334:	mov	r3, r0
   31336:	add	r2, sp, #48	; 0x30
   31338:	mov	r0, r7
   3133a:	bl	1d6c0 <btrfs_search_slot@@Base>
   3133e:	subs	r4, r0, #0
   31340:	ble.n	313a2 <btrfs_del_inode_ref@@Base+0xca>
   31342:	mov.w	fp, #1
   31346:	mvn.w	r4, #1
   3134a:	mov	r0, r5
   3134c:	bl	1b302 <btrfs_free_path@@Base>
   31350:	cmp.w	fp, #0
   31354:	beq.n	3138e <btrfs_del_inode_ref@@Base+0xb6>
   31356:	ldr.w	r3, [r6, #464]	; 0x1d0
   3135a:	ldr.w	r3, [r3, #308]	; 0x134
   3135e:	ldr.w	r1, [r3, #188]	; 0xbc
   31362:	movs	r3, #0
   31364:	and.w	r2, r1, #64	; 0x40
   31368:	orrs	r3, r2
   3136a:	beq.n	3138e <btrfs_del_inode_ref@@Base+0xb6>
   3136c:	ldr	r3, [sp, #32]
   3136e:	mov	r2, r9
   31370:	mov	r1, r6
   31372:	mov	r0, r7
   31374:	str.w	sl, [sp, #16]
   31378:	str	r3, [sp, #8]
   3137a:	ldr	r3, [sp, #36]	; 0x24
   3137c:	str	r3, [sp, #12]
   3137e:	ldrd	r3, r4, [sp, #112]	; 0x70
   31382:	strd	r3, r4, [sp]
   31386:	mov	r3, r8
   31388:	bl	30ea0 <btrfs_del_inode_extref@@Base>
   3138c:	mov	r4, r0
   3138e:	ldr	r2, [pc, #196]	; (31454 <btrfs_del_inode_ref@@Base+0x17c>)
   31390:	ldr	r3, [pc, #188]	; (31450 <btrfs_del_inode_ref@@Base+0x178>)
   31392:	add	r2, pc
   31394:	ldr	r3, [r2, r3]
   31396:	ldr	r2, [r3, #0]
   31398:	ldr	r3, [sp, #68]	; 0x44
   3139a:	eors	r2, r3
   3139c:	beq.n	31444 <btrfs_del_inode_ref@@Base+0x16c>
   3139e:	blx	88e4 <__stack_chk_fail@plt>
   313a2:	bne.n	31438 <btrfs_del_inode_ref@@Base+0x160>
   313a4:	add	r3, sp, #44	; 0x2c
   313a6:	mov	r2, r8
   313a8:	mov	r1, r9
   313aa:	mov	r0, r5
   313ac:	bl	30b78 <btrfs_add_corrupt_extent_record@@Base+0x108>
   313b0:	cmp	r0, #0
   313b2:	beq.n	31342 <btrfs_del_inode_ref@@Base+0x6a>
   313b4:	ldr	r0, [r5, #0]
   313b6:	movs	r2, #25
   313b8:	ldr	r3, [r5, #32]
   313ba:	add.w	ip, r0, #96	; 0x60
   313be:	mla	r3, r2, r3, ip
   313c2:	ldr.w	r3, [r3, #122]	; 0x7a
   313c6:	str	r3, [sp, #28]
   313c8:	cmp.w	sl, #0
   313cc:	beq.n	313de <btrfs_del_inode_ref@@Base+0x106>
   313ce:	ldr	r3, [sp, #44]	; 0x2c
   313d0:	add.w	r1, ip, r3
   313d4:	ldr.w	r2, [ip, r3]
   313d8:	ldr	r3, [r1, #4]
   313da:	strd	r2, r3, [sl]
   313de:	ldr	r2, [sp, #28]
   313e0:	add.w	fp, r8, #10
   313e4:	ldr	r3, [r5, #32]
   313e6:	cmp	fp, r2
   313e8:	bne.n	313fe <btrfs_del_inode_ref@@Base+0x126>
   313ea:	movs	r2, #1
   313ec:	mov	r1, r6
   313ee:	str	r2, [sp, #0]
   313f0:	mov	r0, r7
   313f2:	mov	r2, r5
   313f4:	mov	fp, r4
   313f6:	bl	1e87c <btrfs_del_items@@Base>
   313fa:	mov	r4, r0
   313fc:	b.n	3134a <btrfs_del_inode_ref@@Base+0x72>
   313fe:	mov.w	lr, #25
   31402:	ldr	r1, [sp, #44]	; 0x2c
   31404:	mla	r3, lr, r3, ip
   31408:	add.w	r2, fp, r1
   3140c:	rsb	lr, r2, #101	; 0x65
   31410:	ldr.w	ip, [r3, #118]	; 0x76
   31414:	ldr	r3, [sp, #28]
   31416:	add	r3, lr
   31418:	add	r3, ip
   3141a:	bl	1a810 <memmove_extent_buffer@@Base>
   3141e:	ldr	r2, [sp, #28]
   31420:	movs	r3, #1
   31422:	mov	r1, r5
   31424:	sub.w	r2, r2, fp
   31428:	mov	r0, r6
   3142a:	bl	1d300 <btrfs_truncate_item@@Base>
   3142e:	ldr	r0, [r5, #0]
   31430:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   31434:	mov	fp, r4
   31436:	b.n	3134a <btrfs_del_inode_ref@@Base+0x72>
   31438:	mov.w	fp, #0
   3143c:	b.n	3134a <btrfs_del_inode_ref@@Base+0x72>
   3143e:	mvn.w	r4, #11
   31442:	b.n	3138e <btrfs_del_inode_ref@@Base+0xb6>
   31444:	mov	r0, r4
   31446:	add	sp, #76	; 0x4c
   31448:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3144c:	ldrb	r0, [r0, #9]
   3144e:	movs	r3, r0
   31450:	lsls	r4, r7, #9
   31452:	movs	r0, r0
   31454:	ldrb	r6, [r3, #6]
   31456:	movs	r3, r0
   31458:	ldr	r2, [pc, #60]	; (31498 <btrfs_del_inode_ref@@Base+0x1c0>)
   3145a:	movs	r1, #16
   3145c:	ldr	r3, [pc, #60]	; (3149c <btrfs_del_inode_ref@@Base+0x1c4>)
   3145e:	push	{r4, lr}
   31460:	add	r2, pc
   31462:	sub	sp, #72	; 0x48
   31464:	add	r4, sp, #4
   31466:	ldr	r3, [r2, r3]
   31468:	mov	r0, r4
   3146a:	ldr	r3, [r3, #0]
   3146c:	str	r3, [sp, #68]	; 0x44
   3146e:	mov.w	r3, #0
   31472:	blx	8ae0 <backtrace@plt>
   31476:	movs	r2, #2
   31478:	mov	r1, r0
   3147a:	mov	r0, r4
   3147c:	blx	8e50 <backtrace_symbols_fd@plt>
   31480:	ldr	r2, [pc, #28]	; (314a0 <btrfs_del_inode_ref@@Base+0x1c8>)
   31482:	ldr	r3, [pc, #24]	; (3149c <btrfs_del_inode_ref@@Base+0x1c4>)
   31484:	add	r2, pc
   31486:	ldr	r3, [r2, r3]
   31488:	ldr	r2, [r3, #0]
   3148a:	ldr	r3, [sp, #68]	; 0x44
   3148c:	eors	r2, r3
   3148e:	beq.n	31494 <btrfs_del_inode_ref@@Base+0x1bc>
   31490:	blx	88e4 <__stack_chk_fail@plt>
   31494:	add	sp, #72	; 0x48
   31496:	pop	{r4, pc}
   31498:	ldrb	r0, [r2, #3]
   3149a:	movs	r3, r0
   3149c:	lsls	r4, r7, #9
   3149e:	movs	r0, r0
   314a0:	ldrb	r4, [r5, #2]
   314a2:	movs	r3, r0
   314a4:	push	{r4, lr}
   314a6:	mov	r4, r1
   314a8:	ldr	r1, [pc, #84]	; (31500 <btrfs_del_inode_ref@@Base+0x228>)
   314aa:	sub	sp, #24
   314ac:	ldr	r3, [pc, #84]	; (31504 <btrfs_del_inode_ref@@Base+0x22c>)
   314ae:	add	r1, pc
   314b0:	ldr	r3, [r1, r3]
   314b2:	mov	r1, sp
   314b4:	ldr	r3, [r3, #0]
   314b6:	str	r3, [sp, #20]
   314b8:	mov.w	r3, #0
   314bc:	movs	r3, #25
   314be:	muls	r2, r3
   314c0:	movs	r3, #17
   314c2:	adds	r2, #101	; 0x65
   314c4:	bl	1a79e <read_extent_buffer@@Base>
   314c8:	ldr.w	r3, [sp, #13]
   314cc:	ldr.w	r2, [sp, #9]
   314d0:	str.w	r3, [r4, #13]
   314d4:	ldrb.w	r3, [sp, #8]
   314d8:	str.w	r2, [r4, #9]
   314dc:	ldr	r2, [pc, #40]	; (31508 <btrfs_del_inode_ref@@Base+0x230>)
   314de:	strb	r3, [r4, #8]
   314e0:	ldr	r3, [sp, #0]
   314e2:	add	r2, pc
   314e4:	str	r3, [r4, #0]
   314e6:	ldr	r3, [sp, #4]
   314e8:	str	r3, [r4, #4]
   314ea:	ldr	r3, [pc, #24]	; (31504 <btrfs_del_inode_ref@@Base+0x22c>)
   314ec:	ldr	r3, [r2, r3]
   314ee:	ldr	r2, [r3, #0]
   314f0:	ldr	r3, [sp, #20]
   314f2:	eors	r2, r3
   314f4:	beq.n	314fa <btrfs_del_inode_ref@@Base+0x222>
   314f6:	blx	88e4 <__stack_chk_fail@plt>
   314fa:	add	sp, #24
   314fc:	pop	{r4, pc}
   314fe:	nop
   31500:	ldrb	r2, [r0, #2]
   31502:	movs	r3, r0
   31504:	lsls	r4, r7, #9
   31506:	movs	r0, r0
   31508:	ldrb	r6, [r1, #1]
   3150a:	movs	r3, r0
   3150c:	push	{r0, r1, r2, r3, r4, lr}
   3150e:	ldr	r4, [pc, #40]	; (31538 <btrfs_del_inode_ref@@Base+0x260>)
   31510:	ldr	r5, [pc, #40]	; (3153c <btrfs_del_inode_ref@@Base+0x264>)
   31512:	add	r4, pc
   31514:	ldr	r4, [r4, r5]
   31516:	strd	r2, r1, [sp]
   3151a:	movs	r1, #1
   3151c:	strd	r0, r3, [sp, #8]
   31520:	ldr	r2, [pc, #28]	; (31540 <btrfs_del_inode_ref@@Base+0x268>)
   31522:	ldr	r3, [pc, #32]	; (31544 <btrfs_del_inode_ref@@Base+0x26c>)
   31524:	add	r2, pc
   31526:	ldr	r0, [r4, #0]
   31528:	add	r3, pc
   3152a:	blx	8ca0 <__fprintf_chk@plt+0x4>
   3152e:	bl	31458 <btrfs_del_inode_ref@@Base+0x180>
   31532:	blx	8e08 <abort@plt>
   31536:	nop
   31538:	ldrb	r6, [r3, #0]
   3153a:	movs	r3, r0
   3153c:	lsls	r4, r1, #10
   3153e:	movs	r0, r0
   31540:	hlt	0x0003
   31542:	movs	r0, r0
   31544:	subs	r5, #82	; 0x52
   31546:	movs	r1, r0
   31548:	push	{r3, lr}
   3154a:	cbz	r3, 31550 <btrfs_del_inode_ref@@Base+0x278>
   3154c:	bl	3150c <btrfs_del_inode_ref@@Base+0x234>
   31550:	pop	{r3, pc}

00031552 <btrfs_insert_file_extent@@Base>:
   31552:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31556:	sub	sp, #60	; 0x3c
   31558:	mov	r8, r3
   3155a:	mov	r6, r1
   3155c:	ldr	r3, [sp, #96]	; 0x60
   3155e:	mov	r5, r0
   31560:	str	r2, [sp, #16]
   31562:	movs	r0, #0
   31564:	ldr	r2, [pc, #312]	; (316a0 <btrfs_insert_file_extent@@Base+0x14e>)
   31566:	str	r3, [sp, #12]
   31568:	ldr	r3, [pc, #312]	; (316a4 <btrfs_insert_file_extent@@Base+0x152>)
   3156a:	add	r2, pc
   3156c:	ldr	r1, [sp, #100]	; 0x64
   3156e:	ldrd	r7, fp, [sp, #112]	; 0x70
   31572:	ldr	r3, [r2, r3]
   31574:	ldrd	sl, r9, [sp, #120]	; 0x78
   31578:	ldr	r3, [r3, #0]
   3157a:	str	r3, [sp, #52]	; 0x34
   3157c:	mov.w	r3, #0
   31580:	ldr.w	r3, [r6, #464]	; 0x1d0
   31584:	ldr.w	r3, [r3, #308]	; 0x134
   31588:	ldr.w	ip, [r3, #188]	; 0xbc
   3158c:	mov	r3, r0
   3158e:	and.w	r2, ip, #512	; 0x200
   31592:	orrs	r3, r2
   31594:	ldrd	r3, r4, [sp, #104]	; 0x68
   31598:	beq.n	315a2 <btrfs_insert_file_extent@@Base+0x50>
   3159a:	orrs	r3, r4
   3159c:	bne.n	315aa <btrfs_insert_file_extent@@Base+0x58>
   3159e:	mov	r6, r0
   315a0:	b.n	3167c <btrfs_insert_file_extent@@Base+0x12a>
   315a2:	orrs	r3, r4
   315a4:	itt	eq
   315a6:	moveq	r7, r0
   315a8:	moveq	fp, r7
   315aa:	str	r1, [sp, #20]
   315ac:	bl	1b2d4 <btrfs_alloc_path@@Base>
   315b0:	mov	r4, r0
   315b2:	cmp	r0, #0
   315b4:	beq.n	31690 <btrfs_insert_file_extent@@Base+0x13e>
   315b6:	ldr	r3, [sp, #16]
   315b8:	mov	r2, r0
   315ba:	ldr	r1, [sp, #20]
   315bc:	mov	r0, r5
   315be:	strd	r3, r8, [sp, #32]
   315c2:	mov.w	r8, #1
   315c6:	ldr	r3, [sp, #12]
   315c8:	str.w	r1, [sp, #45]	; 0x2d
   315cc:	mov	r1, r6
   315ce:	str.w	r8, [sp, #4]
   315d2:	str.w	r3, [sp, #41]	; 0x29
   315d6:	movs	r3, #108	; 0x6c
   315d8:	strb.w	r3, [sp, #40]	; 0x28
   315dc:	movs	r3, #53	; 0x35
   315de:	str	r3, [sp, #28]
   315e0:	add	r3, sp, #28
   315e2:	str	r3, [sp, #0]
   315e4:	add	r3, sp, #32
   315e6:	bl	1e490 <btrfs_insert_empty_items@@Base>
   315ea:	subs	r6, r0, #0
   315ec:	blt.n	31676 <btrfs_insert_file_extent@@Base+0x124>
   315ee:	ldr	r1, [pc, #184]	; (316a8 <btrfs_insert_file_extent@@Base+0x156>)
   315f0:	mov	r3, r6
   315f2:	ldr	r0, [pc, #184]	; (316ac <btrfs_insert_file_extent@@Base+0x15a>)
   315f4:	movs	r2, #67	; 0x43
   315f6:	add	r1, pc
   315f8:	add	r0, pc
   315fa:	bl	31548 <btrfs_del_inode_ref@@Base+0x270>
   315fe:	ldr	r0, [r4, #0]
   31600:	ldr	r3, [r4, #32]
   31602:	movs	r2, #25
   31604:	add.w	ip, r0, #96	; 0x60
   31608:	mla	r3, r2, r3, ip
   3160c:	ldr	r2, [sp, #104]	; 0x68
   3160e:	ldr.w	r1, [r3, #118]	; 0x76
   31612:	adds	r1, #101	; 0x65
   31614:	add.w	r3, ip, r1
   31618:	str.w	r2, [r3, #21]
   3161c:	ldr	r2, [sp, #108]	; 0x6c
   3161e:	str.w	r7, [r3, #29]
   31622:	str.w	fp, [r3, #33]	; 0x21
   31626:	str.w	r2, [r3, #25]
   3162a:	movs	r2, #0
   3162c:	str.w	sl, [r3, #45]	; 0x2d
   31630:	strb.w	r2, [r3, #37]	; 0x25
   31634:	strb.w	r2, [r3, #38]	; 0x26
   31638:	strb.w	r2, [r3, #39]	; 0x27
   3163c:	strb.w	r2, [r3, #40]	; 0x28
   31640:	strb.w	r2, [r3, #41]	; 0x29
   31644:	strb.w	r2, [r3, #42]	; 0x2a
   31648:	strb.w	r2, [r3, #43]	; 0x2b
   3164c:	strb.w	r2, [r3, #44]	; 0x2c
   31650:	str.w	r9, [r3, #49]	; 0x31
   31654:	str.w	sl, [r3, #8]
   31658:	str.w	r9, [r3, #12]
   3165c:	ldrd	r7, r5, [r5, #8]
   31660:	str.w	r7, [ip, r1]
   31664:	str	r5, [r3, #4]
   31666:	strb.w	r8, [r3, #20]
   3166a:	strb	r2, [r3, #16]
   3166c:	strb	r2, [r3, #17]
   3166e:	strb	r2, [r3, #18]
   31670:	strb	r2, [r3, #19]
   31672:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   31676:	mov	r0, r4
   31678:	bl	1b302 <btrfs_free_path@@Base>
   3167c:	ldr	r2, [pc, #48]	; (316b0 <btrfs_insert_file_extent@@Base+0x15e>)
   3167e:	ldr	r3, [pc, #36]	; (316a4 <btrfs_insert_file_extent@@Base+0x152>)
   31680:	add	r2, pc
   31682:	ldr	r3, [r2, r3]
   31684:	ldr	r2, [r3, #0]
   31686:	ldr	r3, [sp, #52]	; 0x34
   31688:	eors	r2, r3
   3168a:	beq.n	31696 <btrfs_insert_file_extent@@Base+0x144>
   3168c:	blx	88e4 <__stack_chk_fail@plt>
   31690:	mvn.w	r6, #11
   31694:	b.n	3167c <btrfs_insert_file_extent@@Base+0x12a>
   31696:	mov	r0, r6
   31698:	add	sp, #60	; 0x3c
   3169a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3169e:	nop
   316a0:	strb	r6, [r0, #31]
   316a2:	movs	r3, r0
   316a4:	lsls	r4, r7, #9
   316a6:	movs	r0, r0
   316a8:	subs	r4, #166	; 0xa6
   316aa:	movs	r1, r0
   316ac:	bcs.n	315ba <btrfs_insert_file_extent@@Base+0x68>
   316ae:	movs	r0, r0
   316b0:	strb	r0, [r6, #26]
   316b2:	movs	r3, r0

000316b4 <btrfs_insert_inline_extent@@Base>:
   316b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   316b8:	mov	sl, r2
   316ba:	ldr	r2, [pc, #208]	; (3178c <btrfs_insert_inline_extent@@Base+0xd8>)
   316bc:	mov	r4, r3
   316be:	ldr	r3, [pc, #208]	; (31790 <btrfs_insert_inline_extent@@Base+0xdc>)
   316c0:	sub	sp, #52	; 0x34
   316c2:	add	r2, pc
   316c4:	mov	r9, r0
   316c6:	str	r1, [sp, #12]
   316c8:	ldr	r3, [r2, r3]
   316ca:	ldrd	r8, fp, [sp, #88]	; 0x58
   316ce:	ldrd	r7, r6, [sp, #96]	; 0x60
   316d2:	ldr	r3, [r3, #0]
   316d4:	str	r3, [sp, #44]	; 0x2c
   316d6:	mov.w	r3, #0
   316da:	bl	1b2d4 <btrfs_alloc_path@@Base>
   316de:	mov	r5, r0
   316e0:	cmp	r0, #0
   316e2:	beq.n	3177c <btrfs_insert_inline_extent@@Base+0xc8>
   316e4:	movs	r3, #108	; 0x6c
   316e6:	mov	r2, r0
   316e8:	strb.w	r3, [sp, #32]
   316ec:	mov	r0, r9
   316ee:	add.w	r3, r6, #21
   316f2:	ldr	r1, [sp, #12]
   316f4:	str	r3, [sp, #20]
   316f6:	movs	r3, #1
   316f8:	str	r3, [sp, #4]
   316fa:	add	r3, sp, #20
   316fc:	str	r3, [sp, #0]
   316fe:	add	r3, sp, #24
   31700:	strd	sl, r4, [sp, #24]
   31704:	str.w	r8, [sp, #33]	; 0x21
   31708:	str.w	fp, [sp, #37]	; 0x25
   3170c:	bl	1e490 <btrfs_insert_empty_items@@Base>
   31710:	mov	r4, r0
   31712:	cbnz	r0, 31762 <btrfs_insert_inline_extent@@Base+0xae>
   31714:	ldr	r0, [r5, #0]
   31716:	movs	r2, #25
   31718:	ldr	r3, [r5, #32]
   3171a:	add.w	r1, r0, #96	; 0x60
   3171e:	ldrd	sl, lr, [r9, #8]
   31722:	str	r0, [sp, #12]
   31724:	mla	r3, r2, r3, r1
   31728:	ldr.w	ip, [r3, #118]	; 0x76
   3172c:	add.w	r2, ip, #101	; 0x65
   31730:	adds	r3, r1, r2
   31732:	str.w	sl, [r1, r2]
   31736:	mov	r1, r7
   31738:	str.w	lr, [r3, #4]
   3173c:	strb	r4, [r3, #20]
   3173e:	str	r6, [r3, #8]
   31740:	str	r4, [r3, #12]
   31742:	strb	r4, [r3, #16]
   31744:	strb	r4, [r3, #17]
   31746:	strb	r4, [r3, #18]
   31748:	strb	r4, [r3, #19]
   3174a:	mov	r3, r6
   3174c:	ldr.w	r2, [sp, #33]	; 0x21
   31750:	rsb	r2, r2, #122	; 0x7a
   31754:	add	r2, r8
   31756:	add	r2, ip
   31758:	bl	1a7b4 <write_extent_buffer@@Base>
   3175c:	ldr	r0, [sp, #12]
   3175e:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   31762:	mov	r0, r5
   31764:	bl	1b302 <btrfs_free_path@@Base>
   31768:	ldr	r2, [pc, #40]	; (31794 <btrfs_insert_inline_extent@@Base+0xe0>)
   3176a:	ldr	r3, [pc, #36]	; (31790 <btrfs_insert_inline_extent@@Base+0xdc>)
   3176c:	add	r2, pc
   3176e:	ldr	r3, [r2, r3]
   31770:	ldr	r2, [r3, #0]
   31772:	ldr	r3, [sp, #44]	; 0x2c
   31774:	eors	r2, r3
   31776:	beq.n	31782 <btrfs_insert_inline_extent@@Base+0xce>
   31778:	blx	88e4 <__stack_chk_fail@plt>
   3177c:	mvn.w	r4, #11
   31780:	b.n	31768 <btrfs_insert_inline_extent@@Base+0xb4>
   31782:	mov	r0, r4
   31784:	add	sp, #52	; 0x34
   31786:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3178a:	nop
   3178c:	strb	r6, [r5, #25]
   3178e:	movs	r3, r0
   31790:	lsls	r4, r7, #9
   31792:	movs	r0, r0
   31794:	strb	r4, [r0, #23]
   31796:	movs	r3, r0

00031798 <btrfs_csum_file_block@@Base>:
   31798:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3179c:	mov	fp, r0
   3179e:	vpush	{d8-d9}
   317a2:	mov	r6, r1
   317a4:	sub	sp, #140	; 0x8c
   317a6:	strd	r2, r3, [sp, #24]
   317aa:	ldr	r3, [sp, #200]	; 0xc8
   317ac:	ldr.w	r2, [pc, #1044]	; 31bc4 <btrfs_csum_file_block@@Base+0x42c>
   317b0:	ldrd	r7, r8, [sp, #192]	; 0xc0
   317b4:	vmov	s18, r3
   317b8:	ldr.w	r3, [pc, #1036]	; 31bc8 <btrfs_csum_file_block@@Base+0x430>
   317bc:	add	r2, pc
   317be:	add	r3, pc
   317c0:	str	r3, [sp, #36]	; 0x24
   317c2:	ldr.w	r3, [pc, #1032]	; 31bcc <btrfs_csum_file_block@@Base+0x434>
   317c6:	ldr	r3, [r2, r3]
   317c8:	ldr	r3, [r3, #0]
   317ca:	str	r3, [sp, #132]	; 0x84
   317cc:	mov.w	r3, #0
   317d0:	ldr.w	r3, [r1, #464]	; 0x1d0
   317d4:	ldr.w	r2, [r3, #388]	; 0x184
   317d8:	ldr.w	r0, [r3, #308]	; 0x134
   317dc:	vmov	s16, r2
   317e0:	bl	1b294 <btrfs_super_csum_size@@Base>
   317e4:	ldr.w	r3, [r6, #464]	; 0x1d0
   317e8:	ldr.w	r3, [r3, #308]	; 0x134
   317ec:	ldrh.w	r3, [r3, #196]	; 0xc4
   317f0:	vmov	s17, r3
   317f4:	mov	r5, r0
   317f6:	bl	1b2d4 <btrfs_alloc_path@@Base>
   317fa:	mov	r4, r0
   317fc:	cmp	r0, #0
   317fe:	beq.w	31bb2 <btrfs_csum_file_block@@Base+0x41a>
   31802:	mvn.w	r2, #9
   31806:	mov.w	r3, #4294967295	; 0xffffffff
   3180a:	strd	r2, r3, [sp, #40]	; 0x28
   3180e:	mov.w	r9, #128	; 0x80
   31812:	ldr.w	r3, [r6, #464]	; 0x1d0
   31816:	str.w	r7, [sp, #49]	; 0x31
   3181a:	str.w	r8, [sp, #53]	; 0x35
   3181e:	ldr.w	r0, [r3, #308]	; 0x134
   31822:	strb.w	r9, [sp, #48]	; 0x30
   31826:	bl	1b294 <btrfs_super_csum_size@@Base>
   3182a:	mvn.w	r2, #9
   3182e:	mov.w	r3, #4294967295	; 0xffffffff
   31832:	movs	r1, #1
   31834:	strd	r2, r3, [sp, #60]	; 0x3c
   31838:	movs	r3, #0
   3183a:	add	r2, sp, #60	; 0x3c
   3183c:	strd	r3, r1, [sp]
   31840:	mov	r3, r4
   31842:	mov	r1, r6
   31844:	str.w	r7, [sp, #69]	; 0x45
   31848:	str.w	r8, [sp, #73]	; 0x49
   3184c:	strb.w	r9, [sp, #68]	; 0x44
   31850:	mov	sl, r0
   31852:	mov	r0, fp
   31854:	bl	1d6c0 <btrfs_search_slot@@Base>
   31858:	cmp	r0, #0
   3185a:	blt.n	3186a <btrfs_csum_file_block@@Base+0xd2>
   3185c:	ldr.w	r9, [r4]
   31860:	beq.n	318c8 <btrfs_csum_file_block@@Base+0x130>
   31862:	ldr	r2, [r4, #32]
   31864:	cbnz	r2, 3186e <btrfs_csum_file_block@@Base+0xd6>
   31866:	mvn.w	r0, #1
   3186a:	mov	r8, r0
   3186c:	b.n	318e6 <btrfs_csum_file_block@@Base+0x14e>
   3186e:	subs	r2, #1
   31870:	add	r1, sp, #80	; 0x50
   31872:	mov	r0, r9
   31874:	str	r2, [r4, #32]
   31876:	bl	314a4 <btrfs_del_inode_ref@@Base+0x1cc>
   3187a:	ldrb.w	r3, [sp, #88]	; 0x58
   3187e:	cmp	r3, #128	; 0x80
   31880:	bne.n	31866 <btrfs_csum_file_block@@Base+0xce>
   31882:	ldr.w	r3, [r6, #464]	; 0x1d0
   31886:	ldr.w	r0, [sp, #89]	; 0x59
   3188a:	ldr.w	r1, [sp, #93]	; 0x5d
   3188e:	subs	r0, r7, r0
   31890:	ldr.w	r2, [r3, #388]	; 0x184
   31894:	sbc.w	r1, r8, r1
   31898:	movs	r3, #0
   3189a:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   3189e:	ldr	r3, [r4, #32]
   318a0:	movs	r2, #25
   318a2:	mla	r3, r2, r3, r9
   318a6:	strd	r0, r1, [sp, #16]
   318aa:	mov	r1, sl
   318ac:	ldr.w	r0, [r3, #218]	; 0xda
   318b0:	bl	3c420 <btrfs_util_strerror@@Base+0x290>
   318b4:	ldrd	r2, r3, [sp, #16]
   318b8:	asrs	r1, r0, #31
   318ba:	cmp	r3, r1
   318bc:	it	eq
   318be:	cmpeq	r2, r0
   318c0:	bcc.n	318d0 <btrfs_csum_file_block@@Base+0x138>
   318c2:	mvn.w	r0, #26
   318c6:	b.n	3186a <btrfs_csum_file_block@@Base+0xd2>
   318c8:	movs	r2, #0
   318ca:	movs	r3, #0
   318cc:	strd	r2, r3, [sp, #16]
   318d0:	ldr	r3, [r4, #32]
   318d2:	movs	r2, #25
   318d4:	mla	r3, r2, r3, r9
   318d8:	ldr.w	r8, [r3, #214]	; 0xd6
   318dc:	ldr	r3, [sp, #16]
   318de:	add.w	r8, r8, #101	; 0x65
   318e2:	mla	r8, sl, r3, r8
   318e6:	cmn.w	r8, #4096	; 0x1000
   318ea:	ldr	r2, [r4, #0]
   318ec:	bhi.n	31918 <btrfs_csum_file_block@@Base+0x180>
   318ee:	mov	r6, r2
   318f0:	add	r7, sp, #100	; 0x64
   318f2:	vmov	r1, s18
   318f6:	ldr	r3, [sp, #204]	; 0xcc
   318f8:	mov	r2, r7
   318fa:	vmov	r0, s17
   318fe:	bl	1f4ce <btrfs_csum_data@@Base>
   31902:	mov	r1, r7
   31904:	mov	r3, r5
   31906:	mov	r2, r8
   31908:	mov	r0, r6
   3190a:	movs	r7, #0
   3190c:	bl	1a7b4 <write_extent_buffer@@Base>
   31910:	ldr	r0, [r4, #0]
   31912:	bl	20998 <btrfs_mark_buffer_dirty@@Base>
   31916:	b.n	31a90 <btrfs_csum_file_block@@Base+0x2f8>
   31918:	cmn.w	r8, #27
   3191c:	ldr	r0, [r4, #32]
   3191e:	bne.n	31984 <btrfs_csum_file_block@@Base+0x1ec>
   31920:	mov.w	sl, #25
   31924:	mov	r1, r5
   31926:	mla	r0, sl, r0, r2
   3192a:	ldr.w	r0, [r0, #218]	; 0xda
   3192e:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   31932:	ldr.w	r3, [r6, #464]	; 0x1d0
   31936:	mov	r1, r5
   31938:	mov	r7, r0
   3193a:	ldr.w	r0, [r3, #384]	; 0x180
   3193e:	subs	r0, #151	; 0x97
   31940:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   31944:	subs	r3, r0, #1
   31946:	cmp	r7, r3
   31948:	bcs.w	31ad4 <btrfs_csum_file_block@@Base+0x33c>
   3194c:	mov	r0, r4
   3194e:	mov.w	r8, #1
   31952:	bl	1b2dc <btrfs_release_path@@Base>
   31956:	add	r2, sp, #40	; 0x28
   31958:	mov	r3, r4
   3195a:	mov	r1, r6
   3195c:	mov	r0, fp
   3195e:	strd	r5, r8, [sp]
   31962:	bl	1d6c0 <btrfs_search_slot@@Base>
   31966:	subs	r7, r0, #0
   31968:	blt.w	31a90 <btrfs_csum_file_block@@Base+0x2f8>
   3196c:	bne.w	31ada <btrfs_csum_file_block@@Base+0x342>
   31970:	ldr	r1, [pc, #604]	; (31bd0 <btrfs_csum_file_block@@Base+0x438>)
   31972:	mov	r3, r8
   31974:	ldr	r0, [pc, #604]	; (31bd4 <btrfs_csum_file_block@@Base+0x43c>)
   31976:	movw	r2, #265	; 0x109
   3197a:	add	r1, pc
   3197c:	adds	r1, #25
   3197e:	add	r0, pc
   31980:	bl	3150c <btrfs_del_inode_ref@@Base+0x234>
   31984:	ldr.w	r3, [r2, #192]	; 0xc0
   31988:	subs	r3, #1
   3198a:	cmp	r3, r0
   3198c:	bls.w	31aac <btrfs_csum_file_block@@Base+0x314>
   31990:	adds	r2, r0, #1
   31992:	ldr	r0, [r4, #0]
   31994:	add	r1, sp, #80	; 0x50
   31996:	bl	314a4 <btrfs_del_inode_ref@@Base+0x1cc>
   3199a:	ldrd	r2, r3, [sp, #80]	; 0x50
   3199e:	mov.w	r1, #4294967295	; 0xffffffff
   319a2:	mvn.w	r0, #9
   319a6:	cmp	r3, r1
   319a8:	it	eq
   319aa:	cmpeq	r2, r0
   319ac:	bne.w	31ac2 <btrfs_csum_file_block@@Base+0x32a>
   319b0:	ldrb.w	r3, [sp, #88]	; 0x58
   319b4:	cmp	r3, #128	; 0x80
   319b6:	bne.w	31ac2 <btrfs_csum_file_block@@Base+0x32a>
   319ba:	ldr.w	r7, [sp, #89]	; 0x59
   319be:	mov.w	r9, #1
   319c2:	ldr.w	r8, [sp, #93]	; 0x5d
   319c6:	mov	r0, r4
   319c8:	bl	1b2dc <btrfs_release_path@@Base>
   319cc:	cmp.w	r9, #0
   319d0:	beq.w	31ba8 <btrfs_csum_file_block@@Base+0x410>
   319d4:	ldrd	r0, r1, [sp, #24]
   319d8:	mov	r3, r8
   319da:	ldr.w	r9, [sp, #53]	; 0x35
   319de:	mov	r2, r7
   319e0:	cmp	r1, r8
   319e2:	ldr.w	r8, [sp, #49]	; 0x31
   319e6:	it	eq
   319e8:	cmpeq	r0, r7
   319ea:	mov.w	sl, #0
   319ee:	itt	cc
   319f0:	movcc	r2, r0
   319f2:	movcc	r3, r1
   319f4:	subs.w	r8, r2, r8
   319f8:	mov	r1, r5
   319fa:	sbc.w	r9, r3, r9
   319fe:	ldr.w	r3, [r6, #464]	; 0x1d0
   31a02:	ldr.w	r0, [r3, #384]	; 0x180
   31a06:	subs	r0, #151	; 0x97
   31a08:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   31a0c:	vmov	r2, s16
   31a10:	mov	r3, sl
   31a12:	mov	r1, r9
   31a14:	subs	r7, r0, #1
   31a16:	mov	r0, r8
   31a18:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   31a1c:	mov	r2, r7
   31a1e:	mov	r8, r0
   31a20:	mov	r9, r1
   31a22:	orrs.w	r3, r8, r9
   31a26:	itt	eq
   31a28:	moveq.w	r8, #1
   31a2c:	moveq.w	r9, #0
   31a30:	cmp	r9, sl
   31a32:	it	eq
   31a34:	cmpeq	r8, r7
   31a36:	it	cc
   31a38:	movcc	r2, r8
   31a3a:	muls	r2, r5
   31a3c:	add	r3, sp, #60	; 0x3c
   31a3e:	str	r2, [sp, #60]	; 0x3c
   31a40:	mov.w	r8, #1
   31a44:	str	r3, [sp, #0]
   31a46:	mov	r2, r4
   31a48:	add	r3, sp, #40	; 0x28
   31a4a:	mov	r1, r6
   31a4c:	mov	r0, fp
   31a4e:	str.w	r8, [sp, #4]
   31a52:	bl	1e490 <btrfs_insert_empty_items@@Base>
   31a56:	subs	r7, r0, #0
   31a58:	blt.n	31a90 <btrfs_csum_file_block@@Base+0x2f8>
   31a5a:	beq.w	31bac <btrfs_csum_file_block@@Base+0x414>
   31a5e:	ldr	r3, [pc, #376]	; (31bd8 <btrfs_csum_file_block@@Base+0x440>)
   31a60:	mov	r1, r8
   31a62:	ldr	r2, [sp, #36]	; 0x24
   31a64:	ldr	r0, [r2, r3]
   31a66:	ldr	r3, [pc, #372]	; (31bdc <btrfs_csum_file_block@@Base+0x444>)
   31a68:	ldr	r2, [pc, #372]	; (31be0 <btrfs_csum_file_block@@Base+0x448>)
   31a6a:	add	r3, pc
   31a6c:	str	r3, [sp, #8]
   31a6e:	ldr	r3, [pc, #372]	; (31be4 <btrfs_csum_file_block@@Base+0x44c>)
   31a70:	add	r2, pc
   31a72:	str.w	r8, [sp, #12]
   31a76:	add	r3, pc
   31a78:	adds	r3, #25
   31a7a:	str	r3, [sp, #4]
   31a7c:	mov.w	r3, #308	; 0x134
   31a80:	str	r3, [sp, #0]
   31a82:	ldr	r3, [pc, #356]	; (31be8 <btrfs_csum_file_block@@Base+0x450>)
   31a84:	ldr	r0, [r0, #0]
   31a86:	add	r3, pc
   31a88:	blx	8ca0 <__fprintf_chk@plt+0x4>
   31a8c:	bl	31458 <btrfs_del_inode_ref@@Base+0x180>
   31a90:	mov	r0, r4
   31a92:	bl	1b302 <btrfs_free_path@@Base>
   31a96:	ldr	r2, [pc, #340]	; (31bec <btrfs_csum_file_block@@Base+0x454>)
   31a98:	ldr	r3, [pc, #304]	; (31bcc <btrfs_csum_file_block@@Base+0x434>)
   31a9a:	add	r2, pc
   31a9c:	ldr	r3, [r2, r3]
   31a9e:	ldr	r2, [r3, #0]
   31aa0:	ldr	r3, [sp, #132]	; 0x84
   31aa2:	eors	r2, r3
   31aa4:	beq.w	31bb8 <btrfs_csum_file_block@@Base+0x420>
   31aa8:	blx	88e4 <__stack_chk_fail@plt>
   31aac:	movs	r3, #0
   31aae:	mov	r1, r4
   31ab0:	strb.w	r3, [r4, #65]	; 0x41
   31ab4:	ldr.w	r0, [r6, #464]	; 0x1d0
   31ab8:	bl	1eaf4 <btrfs_next_sibling_tree_block@@Base>
   31abc:	cmp	r0, #1
   31abe:	mov	r2, r0
   31ac0:	bne.n	31ace <btrfs_csum_file_block@@Base+0x336>
   31ac2:	mov.w	r9, #1
   31ac6:	mov.w	r7, #4294967295	; 0xffffffff
   31aca:	mov	r8, r7
   31acc:	b.n	319c6 <btrfs_csum_file_block@@Base+0x22e>
   31ace:	cmp	r0, #0
   31ad0:	beq.w	31992 <btrfs_csum_file_block@@Base+0x1fa>
   31ad4:	mov.w	r9, #0
   31ad8:	b.n	31ac6 <btrfs_csum_file_block@@Base+0x32e>
   31ada:	ldr	r2, [r4, #32]
   31adc:	cmp	r2, #0
   31ade:	beq.n	31ad4 <btrfs_csum_file_block@@Base+0x33c>
   31ae0:	ldr	r7, [r4, #0]
   31ae2:	subs	r2, #1
   31ae4:	add	r1, sp, #80	; 0x50
   31ae6:	str	r2, [r4, #32]
   31ae8:	mov	r0, r7
   31aea:	bl	314a4 <btrfs_del_inode_ref@@Base+0x1cc>
   31aee:	ldrd	r2, r3, [sp, #80]	; 0x50
   31af2:	mov.w	r1, #4294967295	; 0xffffffff
   31af6:	mvn.w	r0, #9
   31afa:	cmp	r3, r1
   31afc:	it	eq
   31afe:	cmpeq	r2, r0
   31b00:	bne.n	31ad4 <btrfs_csum_file_block@@Base+0x33c>
   31b02:	ldrb.w	r3, [sp, #88]	; 0x58
   31b06:	cmp	r3, #128	; 0x80
   31b08:	bne.n	31ad4 <btrfs_csum_file_block@@Base+0x33c>
   31b0a:	ldr.w	lr, [sp, #49]	; 0x31
   31b0e:	movs	r3, #0
   31b10:	ldr.w	r0, [sp, #89]	; 0x59
   31b14:	ldr.w	ip, [sp, #53]	; 0x35
   31b18:	ldr.w	r1, [sp, #93]	; 0x5d
   31b1c:	subs.w	r0, lr, r0
   31b20:	vmov	r2, s16
   31b24:	sbc.w	r1, ip, r1
   31b28:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   31b2c:	ldr.w	r3, [r6, #464]	; 0x1d0
   31b30:	mov	r8, r0
   31b32:	ldr.w	r0, [r3, #384]	; 0x180
   31b36:	mov	r9, r1
   31b38:	mov	r1, r5
   31b3a:	subs	r0, #151	; 0x97
   31b3c:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   31b40:	movs	r1, #0
   31b42:	cmp	r9, r1
   31b44:	add.w	r0, r0, #4294967295	; 0xffffffff
   31b48:	it	eq
   31b4a:	cmpeq	r8, r0
   31b4c:	bcs.n	31ad4 <btrfs_csum_file_block@@Base+0x33c>
   31b4e:	ldr	r3, [r4, #32]
   31b50:	mov	r1, r5
   31b52:	mla	r7, sl, r3, r7
   31b56:	ldr.w	r7, [r7, #218]	; 0xda
   31b5a:	mov	r0, r7
   31b5c:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   31b60:	movs	r1, #0
   31b62:	cmp	r9, r1
   31b64:	it	eq
   31b66:	cmpeq	r8, r0
   31b68:	bcc.n	31ad4 <btrfs_csum_file_block@@Base+0x33c>
   31b6a:	mla	r0, r5, r8, r5
   31b6e:	subs	r0, r0, r7
   31b70:	cmp	r0, r5
   31b72:	bne.n	31ad4 <btrfs_csum_file_block@@Base+0x33c>
   31b74:	mov	r2, r5
   31b76:	mov	r1, r4
   31b78:	mov	r0, r6
   31b7a:	bl	1d4b4 <btrfs_extend_item@@Base>
   31b7e:	ldr	r1, [pc, #112]	; (31bf0 <btrfs_csum_file_block@@Base+0x458>)
   31b80:	mov.w	r2, #286	; 0x11e
   31b84:	add	r1, pc
   31b86:	adds	r1, #25
   31b88:	mov	r3, r0
   31b8a:	ldr	r0, [pc, #104]	; (31bf4 <btrfs_csum_file_block@@Base+0x45c>)
   31b8c:	add	r0, pc
   31b8e:	bl	31548 <btrfs_del_inode_ref@@Base+0x270>
   31b92:	ldr	r6, [r4, #0]
   31b94:	movs	r2, #25
   31b96:	ldr	r3, [r4, #32]
   31b98:	mla	r3, r2, r3, r6
   31b9c:	ldr.w	r0, [r3, #214]	; 0xd6
   31ba0:	adds	r0, #101	; 0x65
   31ba2:	mla	r8, r5, r8, r0
   31ba6:	b.n	318f0 <btrfs_csum_file_block@@Base+0x158>
   31ba8:	mov	r2, r5
   31baa:	b.n	31a3c <btrfs_csum_file_block@@Base+0x2a4>
   31bac:	mov.w	r8, #0
   31bb0:	b.n	31b92 <btrfs_csum_file_block@@Base+0x3fa>
   31bb2:	mvn.w	r7, #11
   31bb6:	b.n	31a96 <btrfs_csum_file_block@@Base+0x2fe>
   31bb8:	mov	r0, r7
   31bba:	add	sp, #140	; 0x8c
   31bbc:	vpop	{d8-d9}
   31bc0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31bc4:	strb	r4, [r6, #21]
   31bc6:	movs	r3, r0
   31bc8:	strb	r2, [r6, #21]
   31bca:	movs	r3, r0
   31bcc:	lsls	r4, r7, #9
   31bce:	movs	r0, r0
   31bd0:	subs	r1, #34	; 0x22
   31bd2:	movs	r1, r0
   31bd4:	lsls	r7, r6, #22
   31bd6:	movs	r1, r0
   31bd8:	lsls	r4, r1, #10
   31bda:	movs	r0, r0
   31bdc:	lsls	r3, r1, #19
   31bde:	movs	r1, r0
   31be0:	stmia	r7!, {r3, r4, r6, r7}
   31be2:	movs	r0, r0
   31be4:	subs	r0, #38	; 0x26
   31be6:	movs	r1, r0
   31be8:	adds	r7, #244	; 0xf4
   31bea:	movs	r1, r0
   31bec:	strb	r6, [r2, #10]
   31bee:	movs	r3, r0
   31bf0:	adds	r7, #24
   31bf2:	movs	r1, r0
   31bf4:	ldmia	r4, {r0, r4, r5, r6, r7}
	...

00031bf8 <btrfs_del_csums@@Base>:
   31bf8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31bfc:	sub	sp, #100	; 0x64
   31bfe:	mov	sl, r0
   31c00:	strd	r2, r3, [sp, #8]
   31c04:	ldr	r3, [sp, #136]	; 0x88
   31c06:	ldr	r2, [pc, #832]	; (31f48 <btrfs_del_csums@@Base+0x350>)
   31c08:	str	r3, [sp, #60]	; 0x3c
   31c0a:	add	r2, pc
   31c0c:	ldr	r3, [sp, #140]	; 0x8c
   31c0e:	str	r3, [sp, #64]	; 0x40
   31c10:	ldr	r3, [pc, #824]	; (31f4c <btrfs_del_csums@@Base+0x354>)
   31c12:	ldr	r3, [r2, r3]
   31c14:	ldr	r2, [sp, #60]	; 0x3c
   31c16:	ldr	r3, [r3, #0]
   31c18:	str	r3, [sp, #92]	; 0x5c
   31c1a:	mov.w	r3, #0
   31c1e:	ldr	r3, [sp, #8]
   31c20:	adds.w	r8, r3, r2
   31c24:	ldr	r3, [sp, #12]
   31c26:	ldr	r2, [sp, #64]	; 0x40
   31c28:	adc.w	r9, r3, r2
   31c2c:	ldr	r3, [r0, #0]
   31c2e:	ldr.w	r0, [r3, #308]	; 0x134
   31c32:	bl	1b294 <btrfs_super_csum_size@@Base>
   31c36:	ldr.w	r3, [sl]
   31c3a:	ldr.w	r2, [r3, #388]	; 0x184
   31c3e:	ldr	r5, [r3, #40]	; 0x28
   31c40:	str	r2, [sp, #48]	; 0x30
   31c42:	str	r0, [sp, #44]	; 0x2c
   31c44:	bl	1b2d4 <btrfs_alloc_path@@Base>
   31c48:	mov	r4, r0
   31c4a:	cmp	r0, #0
   31c4c:	beq.w	31f3c <btrfs_del_csums@@Base+0x344>
   31c50:	adds.w	r3, r8, #4294967295	; 0xffffffff
   31c54:	str	r3, [sp, #52]	; 0x34
   31c56:	adc.w	r3, r9, #4294967295	; 0xffffffff
   31c5a:	str	r3, [sp, #56]	; 0x38
   31c5c:	add.w	r3, sp, #81	; 0x51
   31c60:	str	r3, [sp, #40]	; 0x28
   31c62:	mvn.w	r2, #9
   31c66:	mov.w	r3, #4294967295	; 0xffffffff
   31c6a:	strd	r2, r3, [sp, #72]	; 0x48
   31c6e:	mov	r1, r5
   31c70:	ldr	r2, [sp, #40]	; 0x28
   31c72:	mov	r0, sl
   31c74:	ldr	r3, [sp, #52]	; 0x34
   31c76:	str	r3, [r2, #0]
   31c78:	ldr	r3, [sp, #56]	; 0x38
   31c7a:	str	r3, [r2, #4]
   31c7c:	movs	r3, #128	; 0x80
   31c7e:	movs	r2, #1
   31c80:	strb.w	r3, [sp, #80]	; 0x50
   31c84:	mov.w	r3, #4294967295	; 0xffffffff
   31c88:	strd	r3, r2, [sp]
   31c8c:	add	r2, sp, #72	; 0x48
   31c8e:	mov	r3, r4
   31c90:	bl	1d6c0 <btrfs_search_slot@@Base>
   31c94:	cmp	r0, #0
   31c96:	ble.n	31ca4 <btrfs_del_csums@@Base+0xac>
   31c98:	ldr	r3, [r4, #32]
   31c9a:	cmp	r3, #0
   31c9c:	beq.w	31f20 <btrfs_del_csums@@Base+0x328>
   31ca0:	subs	r3, #1
   31ca2:	str	r3, [r4, #32]
   31ca4:	ldr	r6, [r4, #0]
   31ca6:	add	r7, sp, #72	; 0x48
   31ca8:	ldr	r2, [r4, #32]
   31caa:	mov	r1, r7
   31cac:	mov	r0, r6
   31cae:	bl	314a4 <btrfs_del_inode_ref@@Base+0x1cc>
   31cb2:	ldrd	r2, r3, [sp, #72]	; 0x48
   31cb6:	mov.w	r1, #4294967295	; 0xffffffff
   31cba:	mvn.w	r0, #9
   31cbe:	cmp	r3, r1
   31cc0:	it	eq
   31cc2:	cmpeq	r2, r0
   31cc4:	bne.w	31f20 <btrfs_del_csums@@Base+0x328>
   31cc8:	ldrb.w	r3, [sp, #80]	; 0x50
   31ccc:	cmp	r3, #128	; 0x80
   31cce:	bne.w	31f20 <btrfs_del_csums@@Base+0x328>
   31cd2:	ldr.w	r3, [sp, #81]	; 0x51
   31cd6:	str	r3, [sp, #16]
   31cd8:	ldr.w	r3, [sp, #85]	; 0x55
   31cdc:	str	r3, [sp, #20]
   31cde:	ldrd	r2, r3, [sp, #16]
   31ce2:	cmp	r3, r9
   31ce4:	it	eq
   31ce6:	cmpeq	r2, r8
   31ce8:	bcs.w	31f20 <btrfs_del_csums@@Base+0x328>
   31cec:	ldr	r3, [r4, #32]
   31cee:	ldr	r1, [sp, #44]	; 0x2c
   31cf0:	mov	fp, r3
   31cf2:	movs	r3, #25
   31cf4:	mla	r3, r3, fp, r6
   31cf8:	add.w	r2, r3, #197	; 0xc5
   31cfc:	str	r2, [sp, #68]	; 0x44
   31cfe:	ldr.w	r0, [r3, #218]	; 0xda
   31d02:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   31d06:	ldr	r3, [sp, #48]	; 0x30
   31d08:	mov	r1, r3
   31d0a:	asrs	r2, r3, #31
   31d0c:	strd	r1, r2, [sp, #32]
   31d10:	ldr	r1, [sp, #36]	; 0x24
   31d12:	umull	r2, r3, r3, r0
   31d16:	mla	r3, r0, r1, r3
   31d1a:	ldr	r1, [sp, #16]
   31d1c:	adds	r1, r1, r2
   31d1e:	str	r1, [sp, #24]
   31d20:	ldr	r1, [sp, #20]
   31d22:	adc.w	r3, r1, r3
   31d26:	str	r3, [sp, #28]
   31d28:	ldrd	r0, r1, [sp, #24]
   31d2c:	ldrd	r2, r3, [sp, #8]
   31d30:	cmp	r3, r1
   31d32:	it	eq
   31d34:	cmpeq	r2, r0
   31d36:	bcs.w	31f20 <btrfs_del_csums@@Base+0x328>
   31d3a:	ldrd	r2, r3, [sp, #16]
   31d3e:	ldrd	r0, r1, [sp, #8]
   31d42:	cmp	r3, r1
   31d44:	it	eq
   31d46:	cmpeq	r2, r0
   31d48:	ldrd	r2, r3, [sp, #24]
   31d4c:	bcc.n	31d7c <btrfs_del_csums@@Base+0x184>
   31d4e:	cmp	r9, r3
   31d50:	it	eq
   31d52:	cmpeq	r8, r2
   31d54:	bcc.n	31e10 <btrfs_del_csums@@Base+0x218>
   31d56:	movs	r3, #1
   31d58:	mov	r2, r4
   31d5a:	mov	r1, r5
   31d5c:	str	r3, [sp, #0]
   31d5e:	mov	r0, sl
   31d60:	mov	r3, fp
   31d62:	bl	1e87c <btrfs_del_items@@Base>
   31d66:	ldr	r1, [pc, #488]	; (31f50 <btrfs_del_csums@@Base+0x358>)
   31d68:	mov.w	r2, #450	; 0x1c2
   31d6c:	add	r1, pc
   31d6e:	adds	r1, #47	; 0x2f
   31d70:	mov	r3, r0
   31d72:	ldr	r0, [pc, #480]	; (31f54 <btrfs_del_csums@@Base+0x35c>)
   31d74:	add	r0, pc
   31d76:	bl	31548 <btrfs_del_inode_ref@@Base+0x270>
   31d7a:	b.n	31e08 <btrfs_del_csums@@Base+0x210>
   31d7c:	cmp	r9, r3
   31d7e:	it	eq
   31d80:	cmpeq	r8, r2
   31d82:	bcs.n	31e10 <btrfs_del_csums@@Base+0x218>
   31d84:	ldr	r1, [sp, #8]
   31d86:	ldr	r0, [sp, #16]
   31d88:	ldrd	r2, r3, [sp, #32]
   31d8c:	subs	r0, r1, r0
   31d8e:	ldr	r1, [sp, #12]
   31d90:	mov	ip, r1
   31d92:	ldr	r1, [sp, #20]
   31d94:	sbc.w	r1, ip, r1
   31d98:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   31d9c:	ldr	r3, [sp, #44]	; 0x2c
   31d9e:	muls	r3, r0
   31da0:	ldrd	r0, r1, [sp, #60]	; 0x3c
   31da4:	mov	fp, r3
   31da6:	ldrd	r2, r3, [sp, #32]
   31daa:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   31dae:	ldr	r3, [sp, #68]	; 0x44
   31db0:	add.w	r2, fp, #101	; 0x65
   31db4:	ldr.w	r1, [r3, #17]
   31db8:	ldr	r3, [sp, #44]	; 0x2c
   31dba:	add	r2, r1
   31dbc:	movs	r1, #0
   31dbe:	muls	r3, r0
   31dc0:	mov	r0, r6
   31dc2:	bl	1a826 <memset_extent_buffer@@Base>
   31dc6:	ldr	r2, [sp, #40]	; 0x28
   31dc8:	ldr	r3, [sp, #8]
   31dca:	mov	r1, r5
   31dcc:	mov	r0, sl
   31dce:	str	r3, [r2, #0]
   31dd0:	ldr	r3, [sp, #12]
   31dd2:	str	r3, [r2, #4]
   31dd4:	mov	r3, r7
   31dd6:	mov	r2, r4
   31dd8:	str.w	fp, [sp]
   31ddc:	bl	1e244 <btrfs_split_item@@Base>
   31de0:	mov	r3, r0
   31de2:	cbz	r0, 31dec <btrfs_del_csums@@Base+0x1f4>
   31de4:	adds.w	r3, r0, #11
   31de8:	it	ne
   31dea:	movne	r3, #1
   31dec:	ldr	r1, [pc, #360]	; (31f58 <btrfs_del_csums@@Base+0x360>)
   31dee:	movw	r2, #491	; 0x1eb
   31df2:	ldr	r0, [pc, #360]	; (31f5c <btrfs_del_csums@@Base+0x364>)
   31df4:	add	r1, pc
   31df6:	adds	r1, #47	; 0x2f
   31df8:	add	r0, pc
   31dfa:	bl	31548 <btrfs_del_inode_ref@@Base+0x270>
   31dfe:	ldr	r3, [sp, #52]	; 0x34
   31e00:	ldr	r2, [sp, #40]	; 0x28
   31e02:	str	r3, [r2, #0]
   31e04:	ldr	r3, [sp, #56]	; 0x38
   31e06:	str	r3, [r2, #4]
   31e08:	mov	r0, r4
   31e0a:	bl	1b2dc <btrfs_release_path@@Base>
   31e0e:	b.n	31c62 <btrfs_del_csums@@Base+0x6a>
   31e10:	ldr.w	r3, [r5, #464]	; 0x1d0
   31e14:	ldr.w	r0, [r3, #308]	; 0x134
   31e18:	bl	1b294 <btrfs_super_csum_size@@Base>
   31e1c:	ldr.w	r3, [r5, #464]	; 0x1d0
   31e20:	ldr	r1, [r4, #0]
   31e22:	ldr.w	r6, [sp, #81]	; 0x51
   31e26:	ldr.w	r2, [r3, #388]	; 0x184
   31e2a:	ldr	r3, [r4, #32]
   31e2c:	ldr.w	r7, [sp, #85]	; 0x55
   31e30:	mov	fp, r6
   31e32:	str	r2, [sp, #32]
   31e34:	str	r0, [sp, #16]
   31e36:	movs	r0, #25
   31e38:	mla	r3, r0, r3, r1
   31e3c:	ldr	r1, [sp, #16]
   31e3e:	ldr.w	r0, [r3, #218]	; 0xda
   31e42:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   31e46:	ldr	r2, [sp, #32]
   31e48:	mov	ip, r7
   31e4a:	umlal	fp, ip, r2, r0
   31e4e:	ldrd	r0, r1, [sp, #8]
   31e52:	cmp	r7, r1
   31e54:	it	eq
   31e56:	cmpeq	r6, r0
   31e58:	bcs.n	31ea6 <btrfs_del_csums@@Base+0x2ae>
   31e5a:	cmp	r9, ip
   31e5c:	it	eq
   31e5e:	cmpeq	r8, fp
   31e60:	bcc.n	31f0c <btrfs_del_csums@@Base+0x314>
   31e62:	ldr	r1, [sp, #8]
   31e64:	movs	r3, #0
   31e66:	subs	r0, r1, r6
   31e68:	ldr	r1, [sp, #12]
   31e6a:	sbc.w	r1, r1, r7
   31e6e:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   31e72:	ldr	r2, [sp, #16]
   31e74:	movs	r3, #1
   31e76:	mov	r1, r4
   31e78:	muls	r2, r0
   31e7a:	mov	r0, r5
   31e7c:	bl	1d300 <btrfs_truncate_item@@Base>
   31e80:	ldr	r1, [pc, #220]	; (31f60 <btrfs_del_csums@@Base+0x368>)
   31e82:	mov.w	r2, #372	; 0x174
   31e86:	add	r1, pc
   31e88:	adds	r1, #63	; 0x3f
   31e8a:	mov	r3, r0
   31e8c:	ldr	r0, [pc, #212]	; (31f64 <btrfs_del_csums@@Base+0x36c>)
   31e8e:	add	r0, pc
   31e90:	bl	31548 <btrfs_del_inode_ref@@Base+0x270>
   31e94:	ldr	r1, [pc, #208]	; (31f68 <btrfs_del_csums@@Base+0x370>)
   31e96:	ldr	r0, [pc, #212]	; (31f6c <btrfs_del_csums@@Base+0x374>)
   31e98:	movs	r3, #0
   31e9a:	add	r1, pc
   31e9c:	movw	r2, #497	; 0x1f1
   31ea0:	adds	r1, #47	; 0x2f
   31ea2:	add	r0, pc
   31ea4:	b.n	31d76 <btrfs_del_csums@@Base+0x17e>
   31ea6:	cmp	r9, ip
   31ea8:	it	eq
   31eaa:	cmpeq	r8, fp
   31eac:	bcs.n	31f0c <btrfs_del_csums@@Base+0x314>
   31eae:	cmp	r7, r9
   31eb0:	it	eq
   31eb2:	cmpeq	r6, r8
   31eb4:	bcs.n	31f0c <btrfs_del_csums@@Base+0x314>
   31eb6:	subs.w	r0, fp, r8
   31eba:	mov.w	r3, #0
   31ebe:	sbc.w	r1, ip, r9
   31ec2:	ldr	r7, [pc, #172]	; (31f70 <btrfs_del_csums@@Base+0x378>)
   31ec4:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   31ec8:	ldr	r2, [sp, #16]
   31eca:	movs	r3, #0
   31ecc:	mov	r1, r4
   31ece:	ldr	r6, [pc, #164]	; (31f74 <btrfs_del_csums@@Base+0x37c>)
   31ed0:	add	r7, pc
   31ed2:	adds	r7, #63	; 0x3f
   31ed4:	add	r6, pc
   31ed6:	muls	r2, r0
   31ed8:	mov	r0, r5
   31eda:	bl	1d300 <btrfs_truncate_item@@Base>
   31ede:	movw	r2, #385	; 0x181
   31ee2:	mov	r1, r7
   31ee4:	mov	r3, r0
   31ee6:	mov	r0, r6
   31ee8:	bl	31548 <btrfs_del_inode_ref@@Base+0x270>
   31eec:	ldr	r3, [sp, #40]	; 0x28
   31eee:	add	r2, sp, #72	; 0x48
   31ef0:	mov	r1, r4
   31ef2:	mov	r0, r5
   31ef4:	str.w	r8, [r3]
   31ef8:	str.w	r9, [r3, #4]
   31efc:	bl	1c31c <btrfs_set_item_key_safe@@Base>
   31f00:	movw	r2, #389	; 0x185
   31f04:	mov	r1, r7
   31f06:	mov	r3, r0
   31f08:	mov	r0, r6
   31f0a:	b.n	31e90 <btrfs_del_csums@@Base+0x298>
   31f0c:	ldr	r1, [pc, #104]	; (31f78 <btrfs_del_csums@@Base+0x380>)
   31f0e:	movs	r3, #1
   31f10:	ldr	r0, [pc, #104]	; (31f7c <btrfs_del_csums@@Base+0x384>)
   31f12:	movw	r2, #391	; 0x187
   31f16:	add	r1, pc
   31f18:	adds	r1, #63	; 0x3f
   31f1a:	add	r0, pc
   31f1c:	bl	3150c <btrfs_del_inode_ref@@Base+0x234>
   31f20:	mov	r0, r4
   31f22:	bl	1b302 <btrfs_free_path@@Base>
   31f26:	movs	r0, #0
   31f28:	ldr	r2, [pc, #84]	; (31f80 <btrfs_del_csums@@Base+0x388>)
   31f2a:	ldr	r3, [pc, #32]	; (31f4c <btrfs_del_csums@@Base+0x354>)
   31f2c:	add	r2, pc
   31f2e:	ldr	r3, [r2, r3]
   31f30:	ldr	r2, [r3, #0]
   31f32:	ldr	r3, [sp, #92]	; 0x5c
   31f34:	eors	r2, r3
   31f36:	beq.n	31f42 <btrfs_del_csums@@Base+0x34a>
   31f38:	blx	88e4 <__stack_chk_fail@plt>
   31f3c:	mvn.w	r0, #11
   31f40:	b.n	31f28 <btrfs_del_csums@@Base+0x330>
   31f42:	add	sp, #100	; 0x64
   31f44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31f48:	strb	r6, [r4, #4]
   31f4a:	movs	r3, r0
   31f4c:	lsls	r4, r7, #9
   31f4e:	movs	r0, r0
   31f50:	adds	r5, #48	; 0x30
   31f52:	movs	r1, r0
   31f54:	ldmia	r3, {r0, r3}
   31f56:	movs	r0, r0
   31f58:	adds	r4, #168	; 0xa8
   31f5a:	movs	r1, r0
   31f5c:	adds	r4, #142	; 0x8e
   31f5e:	movs	r1, r0
   31f60:	adds	r4, #22
   31f62:	movs	r1, r0
   31f64:	ldmia	r1, {r0, r1, r2, r3, r5, r6, r7}
   31f66:	movs	r0, r0
   31f68:	adds	r4, #2
   31f6a:	movs	r1, r0
   31f6c:	ldmia	r1, {r0, r1, r3, r4, r6, r7}
   31f6e:	movs	r0, r0
   31f70:	adds	r3, #204	; 0xcc
   31f72:	movs	r1, r0
   31f74:	ldmia	r1!, {r0, r3, r5, r7}
   31f76:	movs	r0, r0
   31f78:	adds	r3, #134	; 0x86
   31f7a:	movs	r1, r0
   31f7c:	movs	r3, r3
   31f7e:	movs	r1, r0
   31f80:	ldr	r4, [r0, #96]	; 0x60
   31f82:	movs	r3, r0

00031f84 <raid6_gen_syndrome@@Base>:
   31f84:	subs	r3, r0, #2
   31f86:	sub.w	ip, r0, #3
   31f8a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   31f8e:	add.w	ip, r2, ip, lsl #2
   31f92:	ldr.w	r8, [r2, r3, lsl #2]
   31f96:	add.w	r3, r2, r3, lsl #2
   31f9a:	movs	r4, #0
   31f9c:	ldr.w	r9, [r3, #4]
   31fa0:	cmp	r1, r4
   31fa2:	bhi.n	31fa8 <raid6_gen_syndrome@@Base+0x24>
   31fa4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   31fa8:	ldr.w	r3, [ip]
   31fac:	subs	r7, r0, #4
   31fae:	ldr	r6, [r3, r4]
   31fb0:	mov	r3, r6
   31fb2:	cmp	r7, #0
   31fb4:	bge.n	31fc2 <raid6_gen_syndrome@@Base+0x3e>
   31fb6:	str.w	r6, [r8, r4]
   31fba:	str.w	r3, [r9, r4]
   31fbe:	adds	r4, #4
   31fc0:	b.n	31fa0 <raid6_gen_syndrome@@Base+0x1c>
   31fc2:	ldr.w	r5, [r2, r7, lsl #2]
   31fc6:	and.w	sl, r3, #2155905152	; 0x80808080
   31fca:	lsls	r3, r3, #1
   31fcc:	subs	r7, #1
   31fce:	and.w	r3, r3, #4278124286	; 0xfefefefe
   31fd2:	ldr.w	lr, [r5, r4]
   31fd6:	mov.w	r5, sl, lsr #7
   31fda:	rsb	r5, r5, sl, lsl #1
   31fde:	and.w	r5, r5, #488447261	; 0x1d1d1d1d
   31fe2:	eor.w	r6, r6, lr
   31fe6:	eor.w	lr, r5, lr
   31fea:	eor.w	r3, lr, r3
   31fee:	b.n	31fb2 <raid6_gen_syndrome@@Base+0x2e>

00031ff0 <raid5_gen_result@@Base>:
   31ff0:	cmp.w	r1, #65536	; 0x10000
   31ff4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31ff8:	mov	r6, r0
   31ffa:	ldr.w	r8, [r3, r2, lsl #2]
   31ffe:	mov	r5, r2
   32000:	mov	r7, r3
   32002:	beq.n	3201a <raid5_gen_result@@Base+0x2a>
   32004:	ldr	r1, [pc, #184]	; (320c0 <raid5_gen_result@@Base+0xd0>)
   32006:	ldr	r0, [pc, #188]	; (320c4 <raid5_gen_result@@Base+0xd4>)
   32008:	add	r1, pc
   3200a:	add	r0, pc
   3200c:	bl	1a900 <__btrfs_error@@Base>
   32010:	mvn.w	r0, #21
   32014:	add	sp, #12
   32016:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3201a:	cmp	r2, r0
   3201c:	bge.n	32004 <raid5_gen_result@@Base+0x14>
   3201e:	cmp	r0, #1
   32020:	ble.n	32004 <raid5_gen_result@@Base+0x14>
   32022:	cmp	r0, #2
   32024:	bne.n	3203a <raid5_gen_result@@Base+0x4a>
   32026:	rsb	r5, r2, #1
   3202a:	mov	r0, r8
   3202c:	mov	r2, r1
   3202e:	ldr.w	r1, [r3, r5, lsl #2]
   32032:	blx	8830 <memcpy@plt+0x4>
   32036:	movs	r0, #0
   32038:	b.n	32014 <raid5_gen_result@@Base+0x24>
   3203a:	mov	r2, r1
   3203c:	mov	r0, r8
   3203e:	movs	r1, #0
   32040:	mvn.w	fp, #3
   32044:	blx	8bf8 <memset@plt+0x4>
   32048:	movs	r0, #0
   3204a:	cmp	r0, r6
   3204c:	beq.n	32036 <raid5_gen_result@@Base+0x46>
   3204e:	cmp	r0, r5
   32050:	bne.n	32056 <raid5_gen_result@@Base+0x66>
   32052:	adds	r0, #1
   32054:	b.n	3204a <raid5_gen_result@@Base+0x5a>
   32056:	ldr.w	r1, [r7, r0, lsl #2]
   3205a:	mov.w	r2, #65536	; 0x10000
   3205e:	mov	r4, r8
   32060:	lsls	r3, r4, #29
   32062:	bmi.n	32098 <raid5_gen_result@@Base+0xa8>
   32064:	bic.w	r9, r2, #3
   32068:	sub.w	ip, r4, #4
   3206c:	add.w	sl, r1, r9
   32070:	lsrs	r3, r2, #2
   32072:	str	r3, [sp, #4]
   32074:	cmp	r1, sl
   32076:	bne.n	320ae <raid5_gen_result@@Base+0xbe>
   32078:	ldr	r3, [sp, #4]
   3207a:	add	r4, r9
   3207c:	mla	r2, fp, r3, r2
   32080:	add	r2, r1
   32082:	cmp	r1, r2
   32084:	beq.n	32052 <raid5_gen_result@@Base+0x62>
   32086:	ldrb.w	ip, [r4], #1
   3208a:	ldrb.w	r3, [r1], #1
   3208e:	eor.w	r3, r3, ip
   32092:	strb.w	r3, [r4, #-1]
   32096:	b.n	32082 <raid5_gen_result@@Base+0x92>
   32098:	ldrb.w	ip, [r4], #1
   3209c:	subs	r2, #1
   3209e:	ldrb.w	r3, [r1], #1
   320a2:	eor.w	r3, r3, ip
   320a6:	strb.w	r3, [r4, #-1]
   320aa:	bne.n	32060 <raid5_gen_result@@Base+0x70>
   320ac:	b.n	32052 <raid5_gen_result@@Base+0x62>
   320ae:	ldr.w	lr, [ip, #4]!
   320b2:	ldr.w	r3, [r1], #4
   320b6:	eor.w	lr, lr, r3
   320ba:	str.w	lr, [ip]
   320be:	b.n	32074 <raid5_gen_result@@Base+0x84>
   320c0:	adds	r2, #254	; 0xfe
   320c2:	movs	r1, r0
   320c4:	adds	r2, #227	; 0xe3
   320c6:	movs	r1, r0

000320c8 <raid6_recov_data2@@Base>:
   320c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   320cc:	mov	r5, r2
   320ce:	ldr.w	sl, [pc, #320]	; 32210 <raid6_recov_data2@@Base+0x148>
   320d2:	sub	sp, #28
   320d4:	cmp	r5, #0
   320d6:	mov	fp, r1
   320d8:	add	sl, pc
   320da:	mov	r4, r3
   320dc:	str	r0, [sp, #8]
   320de:	blt.w	3220a <raid6_recov_data2@@Base+0x142>
   320e2:	subs	r3, r0, #2
   320e4:	cmp	r3, r5
   320e6:	ble.w	3220a <raid6_recov_data2@@Base+0x142>
   320ea:	cmp	r4, #0
   320ec:	blt.w	3220a <raid6_recov_data2@@Base+0x142>
   320f0:	cmp	r3, r4
   320f2:	ble.w	3220a <raid6_recov_data2@@Base+0x142>
   320f6:	cmp	r5, r4
   320f8:	bge.w	3220a <raid6_recov_data2@@Base+0x142>
   320fc:	movs	r0, #1
   320fe:	blx	8718 <calloc@plt+0x4>
   32102:	mov	r1, fp
   32104:	mov	r8, r0
   32106:	movs	r0, #1
   32108:	blx	8718 <calloc@plt+0x4>
   3210c:	mov	r7, r0
   3210e:	cmp.w	r8, #0
   32112:	beq.n	32118 <raid6_recov_data2@@Base+0x50>
   32114:	ldr	r2, [sp, #64]	; 0x40
   32116:	cbnz	r0, 3212e <raid6_recov_data2@@Base+0x66>
   32118:	mov	r0, r8
   3211a:	blx	87cc <free@plt+0x4>
   3211e:	mov	r0, r7
   32120:	blx	87cc <free@plt+0x4>
   32124:	mvn.w	r0, #11
   32128:	add	sp, #28
   3212a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3212e:	ldr	r3, [sp, #8]
   32130:	str	r2, [sp, #64]	; 0x40
   32132:	add.w	r9, r3, #1073741824	; 0x40000000
   32136:	sub.w	r9, r9, #2
   3213a:	ldr.w	r1, [r2, r9, lsl #2]
   3213e:	mov.w	r3, r9, lsl #2
   32142:	adds	r3, #4
   32144:	str	r3, [sp, #20]
   32146:	str	r1, [sp, #12]
   32148:	ldr	r1, [r2, r3]
   3214a:	str	r1, [sp, #16]
   3214c:	ldr.w	r1, [r2, r5, lsl #2]
   32150:	str.w	r8, [r2, r5, lsl #2]
   32154:	str.w	r1, [r2, r9, lsl #2]
   32158:	ldr.w	r6, [r2, r4, lsl #2]
   3215c:	str	r1, [sp, #4]
   3215e:	mov	r1, fp
   32160:	str.w	r0, [r2, r4, lsl #2]
   32164:	str	r6, [r2, r3]
   32166:	ldr	r0, [sp, #8]
   32168:	bl	31f84 <raid6_gen_syndrome@@Base>
   3216c:	ldr	r2, [sp, #64]	; 0x40
   3216e:	ldr	r3, [sp, #4]
   32170:	str.w	r3, [r2, r5, lsl #2]
   32174:	ldr	r3, [sp, #12]
   32176:	str.w	r6, [r2, r4, lsl #2]
   3217a:	str.w	r3, [r2, r9, lsl #2]
   3217e:	ldrd	r1, r3, [sp, #16]
   32182:	str	r1, [r2, r3]
   32184:	ldr	r3, [pc, #140]	; (32214 <raid6_recov_data2@@Base+0x14c>)
   32186:	ldr.w	r2, [sl, r3]
   3218a:	subs	r3, r4, r5
   3218c:	ldrb	r0, [r2, r3]
   3218e:	ldr	r3, [pc, #136]	; (32218 <raid6_recov_data2@@Base+0x150>)
   32190:	lsls	r0, r0, #8
   32192:	ldr.w	r2, [sl, r3]
   32196:	ldr	r3, [pc, #132]	; (3221c <raid6_recov_data2@@Base+0x154>)
   32198:	ldr.w	r1, [sl, r3]
   3219c:	ldrb	r3, [r1, r5]
   3219e:	ldrb	r1, [r1, r4]
   321a0:	eors	r3, r1
   321a2:	add.w	r1, r6, fp
   321a6:	ldrb	r4, [r2, r3]
   321a8:	ldr	r3, [sp, #12]
   321aa:	subs	r5, r3, #1
   321ac:	ldr	r3, [sp, #4]
   321ae:	lsls	r4, r4, #8
   321b0:	add.w	ip, r3, #4294967295	; 0xffffffff
   321b4:	ldr	r3, [sp, #16]
   321b6:	add.w	lr, r3, #4294967295	; 0xffffffff
   321ba:	cmp	r6, r1
   321bc:	bne.n	321ce <raid6_recov_data2@@Base+0x106>
   321be:	mov	r0, r8
   321c0:	blx	87cc <free@plt+0x4>
   321c4:	mov	r0, r7
   321c6:	blx	87cc <free@plt+0x4>
   321ca:	movs	r0, #0
   321cc:	b.n	32128 <raid6_recov_data2@@Base+0x60>
   321ce:	ldrb.w	r2, [r5, #1]!
   321d2:	ldrb.w	r3, [ip, #1]!
   321d6:	ldrb.w	r9, [r6]
   321da:	eors	r3, r2
   321dc:	ldrb.w	r2, [lr, #1]!
   321e0:	add.w	fp, r3, r0
   321e4:	eor.w	r2, r2, r9
   321e8:	ldr.w	r9, [pc, #52]	; 32220 <raid6_recov_data2@@Base+0x158>
   321ec:	add	r2, r4
   321ee:	ldr.w	r9, [sl, r9]
   321f2:	ldrb.w	r2, [r2, r9]
   321f6:	ldrb.w	r9, [fp, r9]
   321fa:	eor.w	r2, r2, r9
   321fe:	strb.w	r2, [r6], #1
   32202:	eors	r3, r2
   32204:	strb.w	r3, [ip]
   32208:	b.n	321ba <raid6_recov_data2@@Base+0xf2>
   3220a:	mvn.w	r0, #21
   3220e:	b.n	32128 <raid6_recov_data2@@Base+0x60>
   32210:	ldr	r0, [r3, #68]	; 0x44
   32212:	movs	r3, r0
   32214:	lsls	r4, r7, #10
   32216:	movs	r0, r0
   32218:	lsls	r0, r2, #10
   3221a:	movs	r0, r0
   3221c:	lsls	r4, r0, #10
   3221e:	movs	r0, r0
   32220:	lsls	r4, r2, #10
	...

00032224 <raid6_recov_datap@@Base>:
   32224:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32228:	mov	r7, r2
   3222a:	add.w	r2, r0, #1073741824	; 0x40000000
   3222e:	mov	r4, r3
   32230:	subs	r2, #2
   32232:	ldr.w	sl, [pc, #144]	; 322c4 <raid6_recov_datap@@Base+0xa0>
   32236:	mov	fp, r0
   32238:	movs	r0, #1
   3223a:	lsls	r3, r2, #2
   3223c:	add	sl, pc
   3223e:	add.w	r9, r3, #4
   32242:	ldr.w	r8, [r4, r2, lsl #2]
   32246:	mov	r6, r1
   32248:	ldr.w	r3, [r4, r9]
   3224c:	str	r3, [sp, #4]
   3224e:	blx	8718 <calloc@plt+0x4>
   32252:	cbz	r0, 322be <raid6_recov_datap@@Base+0x9a>
   32254:	ldr.w	r5, [r4, r7, lsl #2]
   32258:	mov	r2, r4
   3225a:	str.w	r0, [r4, r7, lsl #2]
   3225e:	mov	r1, r6
   32260:	mov	r0, fp
   32262:	add	r6, r8
   32264:	str.w	r5, [r4, r9]
   32268:	bl	31f84 <raid6_gen_syndrome@@Base>
   3226c:	ldr	r3, [sp, #4]
   3226e:	str.w	r5, [r4, r7, lsl #2]
   32272:	subs	r5, #1
   32274:	str.w	r3, [r4, r9]
   32278:	ldr	r3, [pc, #76]	; (322c8 <raid6_recov_datap@@Base+0xa4>)
   3227a:	ldr.w	r2, [sl, r3]
   3227e:	ldr	r3, [pc, #76]	; (322cc <raid6_recov_datap@@Base+0xa8>)
   32280:	ldr.w	r3, [sl, r3]
   32284:	ldrb	r3, [r3, r7]
   32286:	ldrb	r2, [r2, r3]
   32288:	ldr	r3, [sp, #4]
   3228a:	lsls	r2, r2, #8
   3228c:	add.w	r9, r3, #4294967295	; 0xffffffff
   32290:	cmp	r8, r6
   32292:	bne.n	3229c <raid6_recov_datap@@Base+0x78>
   32294:	movs	r0, #0
   32296:	add	sp, #12
   32298:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3229c:	ldrb.w	r1, [r5, #1]!
   322a0:	ldrb.w	r3, [r9, #1]!
   322a4:	eors	r3, r1
   322a6:	ldr	r1, [pc, #40]	; (322d0 <raid6_recov_datap@@Base+0xac>)
   322a8:	add	r3, r2
   322aa:	ldr.w	r1, [sl, r1]
   322ae:	ldrb	r3, [r3, r1]
   322b0:	strb	r3, [r5, #0]
   322b2:	ldrb.w	r1, [r8], #1
   322b6:	eors	r3, r1
   322b8:	strb.w	r3, [r8, #-1]
   322bc:	b.n	32290 <raid6_recov_datap@@Base+0x6c>
   322be:	mvn.w	r0, #11
   322c2:	b.n	32296 <raid6_recov_datap@@Base+0x72>
   322c4:	ldr	r4, [r6, #44]	; 0x2c
   322c6:	movs	r3, r0
   322c8:	lsls	r0, r2, #10
   322ca:	movs	r0, r0
   322cc:	lsls	r4, r0, #10
   322ce:	movs	r0, r0
   322d0:	lsls	r4, r2, #10
	...

000322d4 <raid56_recov@@Base>:
   322d4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   322d8:	mov.w	ip, #0
   322dc:	mov	r5, r0
   322de:	mov	r0, r2
   322e0:	and.w	r6, r0, #128	; 0x80
   322e4:	mov	r7, ip
   322e6:	orrs.w	lr, r6, r7
   322ea:	ldrd	r2, r4, [sp, #40]	; 0x28
   322ee:	ldr	r3, [sp, #48]	; 0x30
   322f0:	bne.n	32310 <raid56_recov@@Base+0x3c>
   322f2:	and.w	r8, r0, #256	; 0x100
   322f6:	mov	r9, ip
   322f8:	orrs.w	r0, r8, r9
   322fc:	beq.n	3237c <raid56_recov@@Base+0xa8>
   322fe:	movs	r0, #3
   32300:	cmp	r0, r5
   32302:	bgt.n	3237c <raid56_recov@@Base+0xa8>
   32304:	adds	r0, r2, #1
   32306:	bne.n	32314 <raid56_recov@@Base+0x40>
   32308:	adds	r2, r4, #1
   3230a:	bne.n	32386 <raid56_recov@@Base+0xb2>
   3230c:	movs	r0, #0
   3230e:	b.n	32376 <raid56_recov@@Base+0xa2>
   32310:	movs	r0, #2
   32312:	b.n	32300 <raid56_recov@@Base+0x2c>
   32314:	adds	r0, r4, #1
   32316:	beq.n	323b0 <raid56_recov@@Base+0xdc>
   32318:	cmp	r2, r4
   3231a:	bgt.n	323a2 <raid56_recov@@Base+0xce>
   3231c:	orrs.w	r0, r6, r7
   32320:	bne.n	32382 <raid56_recov@@Base+0xae>
   32322:	subs	r0, r5, #2
   32324:	cmp	r0, r2
   32326:	bne.n	3232e <raid56_recov@@Base+0x5a>
   32328:	subs	r6, r5, #1
   3232a:	cmp	r6, r4
   3232c:	beq.n	32398 <raid56_recov@@Base+0xc4>
   3232e:	cmp	r0, r4
   32330:	ble.n	32354 <raid56_recov@@Base+0x80>
   32332:	str	r3, [sp, #40]	; 0x28
   32334:	mov	r0, r5
   32336:	mov	r3, r4
   32338:	add	sp, #12
   3233a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3233e:	b.w	320c8 <raid6_recov_data2@@Base>
   32342:	mov	r2, r4
   32344:	mov	r0, r5
   32346:	add	sp, #12
   32348:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3234c:	b.w	31ff0 <raid5_gen_result@@Base>
   32350:	mov	r2, r4
   32352:	b.n	32346 <raid56_recov@@Base+0x72>
   32354:	subs	r0, r5, #1
   32356:	cmp	r0, r4
   32358:	bne.n	32366 <raid56_recov@@Base+0x92>
   3235a:	mov	r0, r5
   3235c:	add	sp, #12
   3235e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32362:	b.w	32224 <raid6_recov_datap@@Base>
   32366:	strd	r1, r3, [sp]
   3236a:	bl	31ff0 <raid5_gen_result@@Base>
   3236e:	ldrd	r1, r3, [sp]
   32372:	cmp	r0, #0
   32374:	bge.n	32398 <raid56_recov@@Base+0xc4>
   32376:	add	sp, #12
   32378:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   3237c:	mvn.w	r0, #21
   32380:	b.n	32376 <raid56_recov@@Base+0xa2>
   32382:	movs	r0, #1
   32384:	b.n	32376 <raid56_recov@@Base+0xa2>
   32386:	orrs.w	r2, r6, r7
   3238a:	bne.n	32342 <raid56_recov@@Base+0x6e>
   3238c:	subs	r0, r5, #1
   3238e:	cmp	r0, r4
   32390:	beq.n	32398 <raid56_recov@@Base+0xc4>
   32392:	subs	r2, r5, #2
   32394:	cmp	r2, r4
   32396:	bne.n	32350 <raid56_recov@@Base+0x7c>
   32398:	mov	r2, r3
   3239a:	mov	r0, r5
   3239c:	bl	31f84 <raid6_gen_syndrome@@Base>
   323a0:	b.n	3230c <raid56_recov@@Base+0x38>
   323a2:	orrs.w	r0, r6, r7
   323a6:	bne.n	32382 <raid56_recov@@Base+0xae>
   323a8:	mov	r0, r2
   323aa:	mov	r2, r4
   323ac:	mov	r4, r0
   323ae:	b.n	32322 <raid56_recov@@Base+0x4e>
   323b0:	orrs.w	r0, r6, r7
   323b4:	mov	r4, r2
   323b6:	b.n	3238a <raid56_recov@@Base+0xb6>

000323b8 <check_arg_type@@Base>:
   323b8:	ldr	r1, [pc, #128]	; (3243c <check_arg_type@@Base+0x84>)
   323ba:	ldr	r2, [pc, #132]	; (32440 <check_arg_type@@Base+0x88>)
   323bc:	push	{r4, lr}
   323be:	add	r1, pc
   323c0:	sub.w	sp, sp, #4096	; 0x1000
   323c4:	sub	sp, #8
   323c6:	ldr	r2, [r1, r2]
   323c8:	add.w	r3, sp, #4096	; 0x1000
   323cc:	adds	r3, #4
   323ce:	ldr	r2, [r2, #0]
   323d0:	str	r2, [r3, #0]
   323d2:	mov.w	r2, #0
   323d6:	cbz	r0, 3242a <check_arg_type@@Base+0x72>
   323d8:	add	r4, sp, #4
   323da:	mov.w	r2, #4096	; 0x1000
   323de:	mov	r1, r4
   323e0:	blx	89f0 <__realpath_chk@plt>
   323e4:	cbz	r0, 32420 <check_arg_type@@Base+0x68>
   323e6:	mov	r0, r4
   323e8:	bl	32dd4 <path_is_block_device@@Base>
   323ec:	cmp	r0, #1
   323ee:	beq.n	32430 <check_arg_type@@Base+0x78>
   323f0:	mov	r0, r4
   323f2:	bl	32e30 <path_is_mount_point@@Base>
   323f6:	cmp	r0, #1
   323f8:	beq.n	32406 <check_arg_type@@Base+0x4e>
   323fa:	mov	r0, r4
   323fc:	bl	32e78 <path_is_reg_file@@Base>
   32400:	cmp	r0, #0
   32402:	it	ne
   32404:	movne	r0, #4
   32406:	ldr	r1, [pc, #60]	; (32444 <check_arg_type@@Base+0x8c>)
   32408:	add.w	r3, sp, #4096	; 0x1000
   3240c:	ldr	r2, [pc, #48]	; (32440 <check_arg_type@@Base+0x88>)
   3240e:	adds	r3, #4
   32410:	add	r1, pc
   32412:	ldr	r2, [r1, r2]
   32414:	ldr	r1, [r2, #0]
   32416:	ldr	r2, [r3, #0]
   32418:	eors	r1, r2
   3241a:	beq.n	32434 <check_arg_type@@Base+0x7c>
   3241c:	blx	88e4 <__stack_chk_fail@plt>
   32420:	blx	8bac <__errno_location@plt>
   32424:	ldr	r0, [r0, #0]
   32426:	negs	r0, r0
   32428:	b.n	32406 <check_arg_type@@Base+0x4e>
   3242a:	mvn.w	r0, #21
   3242e:	b.n	32406 <check_arg_type@@Base+0x4e>
   32430:	movs	r0, #3
   32432:	b.n	32406 <check_arg_type@@Base+0x4e>
   32434:	add.w	sp, sp, #4096	; 0x1000
   32438:	add	sp, #8
   3243a:	pop	{r4, pc}
   3243c:	ldr	r2, [r6, #20]
   3243e:	movs	r3, r0
   32440:	lsls	r4, r7, #9
   32442:	movs	r0, r0
   32444:	ldr	r0, [r4, #16]
   32446:	movs	r3, r0

00032448 <test_uuid_unique@@Base>:
   32448:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   3244a:	movs	r1, #0
   3244c:	ldr	r2, [pc, #136]	; (324d8 <test_uuid_unique@@Base+0x90>)
   3244e:	mov	r4, r0
   32450:	ldr	r3, [pc, #136]	; (324dc <test_uuid_unique@@Base+0x94>)
   32452:	add	r0, sp, #8
   32454:	add	r2, pc
   32456:	ldr	r3, [r2, r3]
   32458:	ldr	r3, [r3, #0]
   3245a:	str	r3, [sp, #12]
   3245c:	mov.w	r3, #0
   32460:	strd	r1, r1, [sp, #4]
   32464:	blx	8dd4 <blkid_get_cache@plt>
   32468:	cmp	r0, #0
   3246a:	bge.n	3248a <test_uuid_unique@@Base+0x42>
   3246c:	ldr	r0, [pc, #112]	; (324e0 <test_uuid_unique@@Base+0x98>)
   3246e:	movs	r4, #1
   32470:	add	r0, pc
   32472:	blx	8a78 <puts@plt+0x4>
   32476:	ldr	r2, [pc, #108]	; (324e4 <test_uuid_unique@@Base+0x9c>)
   32478:	ldr	r3, [pc, #96]	; (324dc <test_uuid_unique@@Base+0x94>)
   3247a:	add	r2, pc
   3247c:	ldr	r3, [r2, r3]
   3247e:	ldr	r2, [r3, #0]
   32480:	ldr	r3, [sp, #12]
   32482:	eors	r2, r3
   32484:	beq.n	324d0 <test_uuid_unique@@Base+0x88>
   32486:	blx	88e4 <__stack_chk_fail@plt>
   3248a:	ldr	r0, [sp, #8]
   3248c:	add	r6, sp, #4
   3248e:	blx	8e2c <blkid_probe_all@plt>
   32492:	ldr	r0, [sp, #8]
   32494:	blx	88fc <blkid_dev_iterate_begin@plt>
   32498:	ldr	r1, [pc, #76]	; (324e8 <test_uuid_unique@@Base+0xa0>)
   3249a:	mov	r2, r4
   3249c:	add	r1, pc
   3249e:	mov	r5, r0
   324a0:	blx	8988 <blkid_dev_set_search@plt>
   324a4:	mov	r1, r6
   324a6:	mov	r0, r5
   324a8:	blx	8aec <blkid_dev_next@plt>
   324ac:	mov	r4, r0
   324ae:	cbz	r0, 324b4 <test_uuid_unique@@Base+0x6c>
   324b0:	movs	r4, #1
   324b2:	b.n	324c2 <test_uuid_unique@@Base+0x7a>
   324b4:	ldrd	r1, r0, [sp, #4]
   324b8:	blx	8af8 <blkid_verify@plt>
   324bc:	str	r0, [sp, #4]
   324be:	cmp	r0, #0
   324c0:	beq.n	324a4 <test_uuid_unique@@Base+0x5c>
   324c2:	mov	r0, r5
   324c4:	blx	8c50 <blkid_dev_iterate_end@plt>
   324c8:	ldr	r0, [sp, #8]
   324ca:	blx	88a4 <blkid_put_cache@plt>
   324ce:	b.n	32476 <test_uuid_unique@@Base+0x2e>
   324d0:	mov	r0, r4
   324d2:	add	sp, #16
   324d4:	pop	{r4, r5, r6, pc}
   324d6:	nop
   324d8:	ldr	r4, [r3, #12]
   324da:	movs	r3, r0
   324dc:	lsls	r4, r7, #9
   324de:	movs	r0, r0
   324e0:	strh	r4, [r1, r2]
   324e2:	movs	r2, r0
   324e4:	ldr	r6, [r6, #8]
   324e6:	movs	r3, r0
   324e8:	blt.n	32492 <test_uuid_unique@@Base+0x4a>
	...

000324ec <btrfs_add_to_fsid@@Base>:
   324ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   324f0:	sub	sp, #132	; 0x84
   324f2:	mov	fp, r3
   324f4:	ldr	r3, [pc, #596]	; (3274c <btrfs_add_to_fsid@@Base+0x260>)
   324f6:	str	r2, [sp, #48]	; 0x30
   324f8:	mov	r9, r0
   324fa:	ldr	r2, [pc, #596]	; (32750 <btrfs_add_to_fsid@@Base+0x264>)
   324fc:	add	r3, pc
   324fe:	str	r3, [sp, #52]	; 0x34
   32500:	ldr	r3, [pc, #592]	; (32754 <btrfs_add_to_fsid@@Base+0x268>)
   32502:	add	r2, pc
   32504:	ldr.w	r8, [r1, #464]	; 0x1d0
   32508:	ldr	r7, [sp, #184]	; 0xb8
   3250a:	ldr	r3, [r2, r3]
   3250c:	ldr.w	r6, [r8, #308]	; 0x134
   32510:	ldr	r3, [r3, #0]
   32512:	str	r3, [sp, #124]	; 0x7c
   32514:	mov.w	r3, #0
   32518:	ldrd	r0, r1, [sp, #168]	; 0xa8
   3251c:	mov	r2, r7
   3251e:	ldr	r3, [r6, #112]	; 0x70
   32520:	str	r3, [sp, #32]
   32522:	ldr	r3, [r6, #116]	; 0x74
   32524:	str	r3, [sp, #36]	; 0x24
   32526:	movs	r3, #0
   32528:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   3252c:	umull	r3, r4, r7, r0
   32530:	movs	r0, #1
   32532:	strd	r3, r4, [sp, #16]
   32536:	ldr	r3, [sp, #20]
   32538:	mla	r3, r7, r1, r3
   3253c:	movs	r1, #128	; 0x80
   3253e:	str	r3, [sp, #20]
   32540:	blx	8718 <calloc@plt+0x4>
   32544:	mov	r4, r0
   32546:	cmp	r0, #0
   32548:	beq.w	32734 <btrfs_add_to_fsid@@Base+0x248>
   3254c:	mov	r1, r7
   3254e:	movs	r0, #1
   32550:	blx	8718 <calloc@plt+0x4>
   32554:	mov	r5, r0
   32556:	cmp	r0, #0
   32558:	beq.w	32734 <btrfs_add_to_fsid@@Base+0x248>
   3255c:	add.w	r3, r4, #112	; 0x70
   32560:	str	r3, [sp, #44]	; 0x2c
   32562:	mov	r0, r3
   32564:	blx	8c90 <uuid_generate@plt>
   32568:	ldr	r2, [sp, #176]	; 0xb0
   3256a:	movs	r3, #0
   3256c:	str	r7, [r4, #96]	; 0x60
   3256e:	strd	r3, r3, [r4, #64]	; 0x40
   32572:	mov	r0, fp
   32574:	str	r2, [r4, #92]	; 0x5c
   32576:	mov	sl, r3
   32578:	ldr	r2, [sp, #180]	; 0xb4
   3257a:	strd	r3, r3, [r4, #104]	; 0x68
   3257e:	strd	r3, r3, [r4, #80]	; 0x50
   32582:	str	r2, [r4, #88]	; 0x58
   32584:	ldr	r2, [sp, #48]	; 0x30
   32586:	strd	r3, r3, [r4, #16]
   3258a:	str	r2, [r4, #24]
   3258c:	movs	r2, #1
   3258e:	str	r2, [r4, #28]
   32590:	ldrd	r1, r2, [sp, #16]
   32594:	strd	r1, r2, [r4, #72]	; 0x48
   32598:	ldr.w	r2, [r8, #36]	; 0x24
   3259c:	str	r2, [r4, #8]
   3259e:	blx	88cc <strdup@plt+0x4>
   325a2:	str	r0, [r4, #32]
   325a4:	cmp	r0, #0
   325a6:	beq.w	3273c <btrfs_add_to_fsid@@Base+0x250>
   325aa:	ldrd	r0, r1, [sp, #32]
   325ae:	strd	sl, sl, [sp, #24]
   325b2:	ldrd	sl, fp, [sp, #16]
   325b6:	adds.w	r2, sl, r0
   325ba:	adcs.w	r3, fp, r1
   325be:	mov	fp, r2
   325c0:	itt	cs
   325c2:	movcs	r0, #1
   325c4:	movcs	r1, #0
   325c6:	mov	sl, r3
   325c8:	it	cs
   325ca:	strdcs	r0, r1, [sp, #24]
   325ce:	ldrd	r2, r3, [sp, #24]
   325d2:	orrs	r3, r2
   325d4:	beq.n	32602 <btrfs_add_to_fsid@@Base+0x116>
   325d6:	ldrd	r0, r1, [sp, #16]
   325da:	mov.w	r2, #512	; 0x200
   325de:	bl	33988 <pretty_size_mode@@Base>
   325e2:	ldrd	r2, r3, [sp, #16]
   325e6:	mvn.w	r9, #74	; 0x4a
   325ea:	str	r0, [sp, #0]
   325ec:	ldr	r0, [pc, #360]	; (32758 <btrfs_add_to_fsid@@Base+0x26c>)
   325ee:	add	r0, pc
   325f0:	bl	1a900 <__btrfs_error@@Base>
   325f4:	mov	r0, r4
   325f6:	blx	87cc <free@plt+0x4>
   325fa:	mov	r0, r5
   325fc:	blx	87cc <free@plt+0x4>
   32600:	b.n	32720 <btrfs_add_to_fsid@@Base+0x234>
   32602:	mov	r0, r9
   32604:	mov	r2, r4
   32606:	mov	r1, r8
   32608:	strd	r4, r4, [r4]
   3260c:	bl	2b920 <btrfs_add_device@@Base>
   32610:	mov	r9, r0
   32612:	cmp	r0, #0
   32614:	bne.n	325f4 <btrfs_add_to_fsid@@Base+0x108>
   32616:	ldr.w	r3, [r6, #136]	; 0x88
   3261a:	mov	r1, r6
   3261c:	ldr.w	r2, [r6, #140]	; 0x8c
   32620:	mov	r0, r5
   32622:	adds	r3, #1
   32624:	str.w	fp, [r6, #112]	; 0x70
   32628:	adc.w	r2, r2, #0
   3262c:	str.w	r3, [r6, #136]	; 0x88
   32630:	str.w	r2, [r6, #140]	; 0x8c
   32634:	movw	r2, #3531	; 0xdcb
   32638:	str.w	sl, [r6, #116]	; 0x74
   3263c:	addw	r6, r5, #267	; 0x10b
   32640:	blx	8830 <memcpy@plt+0x4>
   32644:	movs	r3, #0
   32646:	mov.w	r2, #65536	; 0x10000
   3264a:	strd	r2, r3, [r5, #48]	; 0x30
   3264e:	ldr	r3, [r4, #64]	; 0x40
   32650:	str.w	r3, [r5, #201]	; 0xc9
   32654:	ldr	r3, [r4, #68]	; 0x44
   32656:	str.w	r3, [r5, #205]	; 0xcd
   3265a:	ldr	r3, [r4, #104]	; 0x68
   3265c:	str.w	r3, [r5, #237]	; 0xed
   32660:	ldr	r3, [r4, #108]	; 0x6c
   32662:	str.w	r3, [r5, #241]	; 0xf1
   32666:	ldr	r3, [r4, #88]	; 0x58
   32668:	str.w	r3, [r5, #225]	; 0xe1
   3266c:	ldr	r3, [r4, #92]	; 0x5c
   3266e:	str.w	r3, [r5, #229]	; 0xe5
   32672:	ldr	r3, [r4, #96]	; 0x60
   32674:	str.w	r3, [r5, #233]	; 0xe9
   32678:	ldr	r3, [r4, #72]	; 0x48
   3267a:	str.w	r3, [r5, #209]	; 0xd1
   3267e:	ldr	r3, [r4, #76]	; 0x4c
   32680:	str.w	r3, [r5, #213]	; 0xd5
   32684:	ldr	r3, [r4, #80]	; 0x50
   32686:	str.w	r3, [r5, #217]	; 0xd9
   3268a:	ldr	r3, [r4, #84]	; 0x54
   3268c:	str.w	r3, [r5, #221]	; 0xdd
   32690:	ldr	r3, [sp, #44]	; 0x2c
   32692:	add.w	ip, r3, #16
   32696:	mov	r2, r3
   32698:	adds	r6, #8
   3269a:	ldmia	r2!, {r0, r1}
   3269c:	cmp	r2, ip
   3269e:	str.w	r0, [r6, #-8]
   326a2:	mov	r3, r2
   326a4:	str.w	r1, [r6, #-4]
   326a8:	bne.n	32696 <btrfs_add_to_fsid@@Base+0x1aa>
   326aa:	mov.w	r2, #65536	; 0x10000
   326ae:	movs	r3, #0
   326b0:	ldr	r0, [sp, #48]	; 0x30
   326b2:	mov	r1, r5
   326b4:	strd	r2, r3, [sp]
   326b8:	mov	r2, r7
   326ba:	blx	8c5c <pwrite64@plt>
   326be:	cmp	r0, r7
   326c0:	beq.n	32702 <btrfs_add_to_fsid@@Base+0x216>
   326c2:	ldr	r2, [sp, #52]	; 0x34
   326c4:	add	r4, sp, #60	; 0x3c
   326c6:	ldr	r3, [pc, #148]	; (3275c <btrfs_add_to_fsid@@Base+0x270>)
   326c8:	movs	r1, #1
   326ca:	ldr	r0, [r2, r3]
   326cc:	ldr	r3, [pc, #144]	; (32760 <btrfs_add_to_fsid@@Base+0x274>)
   326ce:	ldr	r2, [pc, #148]	; (32764 <btrfs_add_to_fsid@@Base+0x278>)
   326d0:	add	r3, pc
   326d2:	str	r3, [sp, #8]
   326d4:	ldr	r3, [pc, #144]	; (32768 <btrfs_add_to_fsid@@Base+0x27c>)
   326d6:	add	r2, pc
   326d8:	str	r1, [sp, #12]
   326da:	add	r3, pc
   326dc:	str	r3, [sp, #4]
   326de:	movs	r3, #192	; 0xc0
   326e0:	str	r3, [sp, #0]
   326e2:	ldr	r3, [pc, #136]	; (3276c <btrfs_add_to_fsid@@Base+0x280>)
   326e4:	ldr	r0, [r0, #0]
   326e6:	add	r3, pc
   326e8:	blx	8ca0 <__fprintf_chk@plt+0x4>
   326ec:	movs	r1, #16
   326ee:	mov	r0, r4
   326f0:	blx	8ae0 <backtrace@plt>
   326f4:	movs	r2, #2
   326f6:	mov	r1, r0
   326f8:	mov	r0, r4
   326fa:	blx	8e50 <backtrace_symbols_fd@plt>
   326fe:	blx	8e08 <abort@plt>
   32702:	mov	r0, r5
   32704:	blx	87cc <free@plt+0x4>
   32708:	ldr.w	r2, [r8, #352]	; 0x160
   3270c:	mov	r3, r2
   3270e:	ldr.w	r1, [r3, #72]!
   32712:	str	r4, [r1, #4]
   32714:	strd	r1, r3, [r4]
   32718:	str	r4, [r2, #72]	; 0x48
   3271a:	ldr.w	r3, [r8, #352]	; 0x160
   3271e:	str	r3, [r4, #12]
   32720:	ldr	r2, [pc, #76]	; (32770 <btrfs_add_to_fsid@@Base+0x284>)
   32722:	ldr	r3, [pc, #48]	; (32754 <btrfs_add_to_fsid@@Base+0x268>)
   32724:	add	r2, pc
   32726:	ldr	r3, [r2, r3]
   32728:	ldr	r2, [r3, #0]
   3272a:	ldr	r3, [sp, #124]	; 0x7c
   3272c:	eors	r2, r3
   3272e:	beq.n	32742 <btrfs_add_to_fsid@@Base+0x256>
   32730:	blx	88e4 <__stack_chk_fail@plt>
   32734:	mvn.w	r9, #11
   32738:	movs	r5, #0
   3273a:	b.n	325f4 <btrfs_add_to_fsid@@Base+0x108>
   3273c:	mvn.w	r9, #11
   32740:	b.n	325f4 <btrfs_add_to_fsid@@Base+0x108>
   32742:	mov	r0, r9
   32744:	add	sp, #132	; 0x84
   32746:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3274a:	nop
   3274c:	ldr	r4, [r6, #0]
   3274e:	movs	r3, r0
   32750:	ldr	r6, [r5, #0]
   32752:	movs	r3, r0
   32754:	lsls	r4, r7, #9
   32756:	movs	r0, r0
   32758:	str	r5, [r5, r4]
   3275a:	movs	r2, r0
   3275c:	lsls	r4, r1, #10
   3275e:	movs	r0, r0
   32760:	str	r3, [r4, r2]
   32762:	movs	r2, r0
   32764:	add	r0, sp, #836	; 0x344
   32766:	movs	r0, r0
   32768:	str	r2, [r3, r5]
   3276a:	movs	r2, r0
   3276c:	str	r0, [r7, r1]
   3276e:	movs	r2, r0
   32770:	str	r4, [r1, #96]	; 0x60
   32772:	movs	r3, r0

00032774 <btrfs_register_one_device@@Base>:
   32774:	ldr	r1, [pc, #168]	; (32820 <btrfs_register_one_device@@Base+0xac>)
   32776:	ldr	r2, [pc, #172]	; (32824 <btrfs_register_one_device@@Base+0xb0>)
   32778:	push	{r4, r5, r6, r7, lr}
   3277a:	add	r1, pc
   3277c:	sub.w	sp, sp, #4096	; 0x1000
   32780:	mov	r6, r0
   32782:	sub	sp, #12
   32784:	ldr	r0, [pc, #160]	; (32828 <btrfs_register_one_device@@Base+0xb4>)
   32786:	ldr	r2, [r1, r2]
   32788:	add.w	r3, sp, #4096	; 0x1000
   3278c:	add	r0, pc
   3278e:	movs	r1, #2
   32790:	adds	r3, #4
   32792:	ldr	r2, [r2, #0]
   32794:	str	r2, [r3, #0]
   32796:	mov.w	r2, #0
   3279a:	blx	8a68 <open64@plt>
   3279e:	subs	r5, r0, #0
   327a0:	bge.n	327cc <btrfs_register_one_device@@Base+0x58>
   327a2:	ldr	r0, [pc, #136]	; (3282c <btrfs_register_one_device@@Base+0xb8>)
   327a4:	add	r0, pc
   327a6:	bl	1a884 <__btrfs_warning@@Base>
   327aa:	blx	8bac <__errno_location@plt>
   327ae:	ldr	r4, [r0, #0]
   327b0:	negs	r4, r4
   327b2:	ldr	r1, [pc, #124]	; (32830 <btrfs_register_one_device@@Base+0xbc>)
   327b4:	add.w	r3, sp, #4096	; 0x1000
   327b8:	ldr	r2, [pc, #104]	; (32824 <btrfs_register_one_device@@Base+0xb0>)
   327ba:	adds	r3, #4
   327bc:	add	r1, pc
   327be:	ldr	r2, [r1, r2]
   327c0:	ldr	r1, [r2, #0]
   327c2:	ldr	r2, [r3, #0]
   327c4:	eors	r1, r2
   327c6:	beq.n	32810 <btrfs_register_one_device@@Base+0x9c>
   327c8:	blx	88e4 <__stack_chk_fail@plt>
   327cc:	mov	r4, sp
   327ce:	add	r7, sp, #8
   327d0:	mov.w	r2, #4096	; 0x1000
   327d4:	movs	r1, #0
   327d6:	mov	r0, r4
   327d8:	blx	8bf8 <memset@plt+0x4>
   327dc:	movw	r2, #4088	; 0xff8
   327e0:	mov	r1, r6
   327e2:	mov	r0, r7
   327e4:	bl	33008 <__strncpy_null@@Base>
   327e8:	mov	r2, r4
   327ea:	ldr	r1, [pc, #48]	; (3281c <btrfs_register_one_device@@Base+0xa8>)
   327ec:	mov	r0, r5
   327ee:	blx	89cc <ioctl@plt>
   327f2:	subs	r4, r0, #0
   327f4:	bge.n	32808 <btrfs_register_one_device@@Base+0x94>
   327f6:	ldr	r0, [pc, #60]	; (32834 <btrfs_register_one_device@@Base+0xc0>)
   327f8:	mov	r1, r6
   327fa:	add	r0, pc
   327fc:	bl	1a900 <__btrfs_error@@Base>
   32800:	blx	8bac <__errno_location@plt>
   32804:	ldr	r4, [r0, #0]
   32806:	negs	r4, r4
   32808:	mov	r0, r5
   3280a:	blx	8e20 <close@plt>
   3280e:	b.n	327b2 <btrfs_register_one_device@@Base+0x3e>
   32810:	mov	r0, r4
   32812:	add.w	sp, sp, #4096	; 0x1000
   32816:	add	sp, #12
   32818:	pop	{r4, r5, r6, r7, pc}
   3281a:	nop
   3281c:	str	r4, [sp, #16]
   3281e:	str	r0, [r0, r0]
   32820:	str	r6, [r6, #88]	; 0x58
   32822:	movs	r3, r0
   32824:	lsls	r4, r7, #9
   32826:	movs	r0, r0
   32828:	ldr	r7, [pc, #996]	; (32c10 <btrfs_scan_devices@@Base+0x240>)
   3282a:	movs	r2, r0
   3282c:	ldr	r7, [pc, #976]	; (32c00 <btrfs_scan_devices@@Base+0x230>)
   3282e:	movs	r2, r0
   32830:	str	r4, [r6, #84]	; 0x54
   32832:	movs	r3, r0
   32834:	ldr	r7, [pc, #904]	; (32bc0 <btrfs_scan_devices@@Base+0x1f0>)
   32836:	movs	r2, r0

00032838 <btrfs_register_all_devices@@Base>:
   32838:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3283c:	bl	2dc0c <btrfs_scanned_uuids@@Base>
   32840:	movs	r5, #0
   32842:	ldr	r4, [r0, #0]
   32844:	mov	r6, r0
   32846:	mov	r0, r5
   32848:	subs	r4, #80	; 0x50
   3284a:	add.w	r3, r4, #80	; 0x50
   3284e:	cmp	r6, r3
   32850:	bne.n	32858 <btrfs_register_all_devices@@Base+0x20>
   32852:	mov	r0, r5
   32854:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   32858:	mov	r8, r4
   3285a:	ldr.w	r7, [r8, #72]!
   3285e:	cmp	r7, r8
   32860:	bne.n	32868 <btrfs_register_all_devices@@Base+0x30>
   32862:	ldr	r4, [r4, #80]	; 0x50
   32864:	subs	r4, #80	; 0x50
   32866:	b.n	3284a <btrfs_register_all_devices@@Base+0x12>
   32868:	ldr	r3, [r7, #32]
   3286a:	ldrb	r2, [r3, #0]
   3286c:	cbz	r2, 32874 <btrfs_register_all_devices@@Base+0x3c>
   3286e:	mov	r0, r3
   32870:	bl	32774 <btrfs_register_one_device@@Base>
   32874:	cbz	r0, 32878 <btrfs_register_all_devices@@Base+0x40>
   32876:	adds	r5, #1
   32878:	ldr	r7, [r7, #0]
   3287a:	b.n	3285e <btrfs_register_all_devices@@Base+0x26>

0003287c <btrfs_device_already_in_root@@Base>:
   3287c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   3287e:	mov	r6, r0
   32880:	mov.w	r0, #4096	; 0x1000
   32884:	mov	r7, r1
   32886:	mov	r4, r2
   32888:	blx	8a94 <malloc@plt+0x4>
   3288c:	mov	r5, r0
   3288e:	cbz	r0, 328f6 <btrfs_device_already_in_root@@Base+0x7a>
   32890:	asrs	r3, r4, #31
   32892:	mov	r2, r4
   32894:	mov	r1, r0
   32896:	strd	r2, r3, [sp]
   3289a:	mov	r0, r7
   3289c:	mov.w	r2, #4096	; 0x1000
   328a0:	blx	8a2c <pread64@plt>
   328a4:	cmp.w	r0, #4096	; 0x1000
   328a8:	mov	r4, r0
   328aa:	bne.n	328e6 <btrfs_device_already_in_root@@Base+0x6a>
   328ac:	ldrd	r2, r3, [r5, #64]	; 0x40
   328b0:	add	r1, pc, #76	; (adr r1, 32900 <btrfs_device_already_in_root@@Base+0x84>)
   328b2:	ldrd	r0, r1, [r1]
   328b6:	cmp	r3, r1
   328b8:	it	eq
   328ba:	cmpeq	r2, r0
   328bc:	beq.n	328cc <btrfs_device_already_in_root@@Base+0x50>
   328be:	add	r1, pc, #72	; (adr r1, 32908 <btrfs_device_already_in_root@@Base+0x8c>)
   328c0:	ldrd	r0, r1, [r1]
   328c4:	cmp	r3, r1
   328c6:	it	eq
   328c8:	cmpeq	r2, r0
   328ca:	bne.n	328f2 <btrfs_device_already_in_root@@Base+0x76>
   328cc:	ldr.w	r3, [r6, #464]	; 0x1d0
   328d0:	add.w	r0, r5, #32
   328d4:	movs	r2, #16
   328d6:	ldr.w	r1, [r3, #308]	; 0x134
   328da:	adds	r1, #32
   328dc:	blx	887c <memcmp@plt+0x4>
   328e0:	clz	r4, r0
   328e4:	lsrs	r4, r4, #5
   328e6:	mov	r0, r5
   328e8:	blx	87cc <free@plt+0x4>
   328ec:	mov	r0, r4
   328ee:	add	sp, #12
   328f0:	pop	{r4, r5, r6, r7, pc}
   328f2:	movs	r4, #0
   328f4:	b.n	328e6 <btrfs_device_already_in_root@@Base+0x6a>
   328f6:	mvn.w	r4, #11
   328fa:	b.n	328ec <btrfs_device_already_in_root@@Base+0x70>
   328fc:	nop.w
   32900:	negs	r7, r3
   32902:	strh	r0, [r1, r1]
   32904:	strh	r6, [r4, r5]
   32906:	ldr	r5, [pc, #380]	; (32a84 <btrfs_scan_devices@@Base+0xb4>)
   32908:	tst	r1, r4
   3290a:	strh	r0, [r1, r1]
   3290c:	strh	r6, [r4, r5]
   3290e:	ldr	r5, [pc, #380]	; (32a8c <btrfs_scan_devices@@Base+0xbc>)

00032910 <is_seen_fsid@@Base>:
   32910:	push	{r3, r4, r5, lr}
   32912:	mov	r5, r0
   32914:	ldrb	r3, [r0, #0]
   32916:	ldr.w	r4, [r1, r3, lsl #2]
   3291a:	cbnz	r4, 32920 <is_seen_fsid@@Base+0x10>
   3291c:	mov	r0, r4
   3291e:	pop	{r3, r4, r5, pc}
   32920:	movs	r2, #16
   32922:	mov	r1, r5
   32924:	mov	r0, r4
   32926:	blx	887c <memcmp@plt+0x4>
   3292a:	cbz	r0, 32930 <is_seen_fsid@@Base+0x20>
   3292c:	ldr	r4, [r4, #16]
   3292e:	b.n	3291a <is_seen_fsid@@Base+0xa>
   32930:	movs	r0, #1
   32932:	b.n	3291e <is_seen_fsid@@Base+0xe>

00032934 <add_seen_fsid@@Base>:
   32934:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   32938:	mov	r5, r0
   3293a:	ldrb.w	sl, [r0]
   3293e:	mov	r7, r1
   32940:	mov	r9, r2
   32942:	mov	r8, r3
   32944:	ldr.w	r4, [r1, sl, lsl #2]
   32948:	cbnz	r4, 32980 <add_seen_fsid@@Base+0x4c>
   3294a:	movs	r0, #28
   3294c:	blx	8a94 <malloc@plt+0x4>
   32950:	mov	r6, r0
   32952:	cbz	r0, 329a0 <add_seen_fsid@@Base+0x6c>
   32954:	add.w	ip, r5, #16
   32958:	mov	r2, r0
   3295a:	movs	r3, #0
   3295c:	str	r3, [r0, #16]
   3295e:	ldr	r0, [r5, #0]
   32960:	adds	r5, #8
   32962:	ldr.w	r1, [r5, #-4]
   32966:	cmp	r5, ip
   32968:	mov	r3, r2
   3296a:	stmia	r3!, {r0, r1}
   3296c:	mov	r2, r3
   3296e:	bne.n	3295e <add_seen_fsid@@Base+0x2a>
   32970:	strd	r8, r9, [r6, #20]
   32974:	cbz	r4, 32994 <add_seen_fsid@@Base+0x60>
   32976:	str	r6, [r4, #16]
   32978:	movs	r0, #0
   3297a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   3297e:	mov	r4, r3
   32980:	movs	r2, #16
   32982:	mov	r1, r5
   32984:	mov	r0, r4
   32986:	blx	887c <memcmp@plt+0x4>
   3298a:	cbz	r0, 3299a <add_seen_fsid@@Base+0x66>
   3298c:	ldr	r3, [r4, #16]
   3298e:	cmp	r3, #0
   32990:	bne.n	3297e <add_seen_fsid@@Base+0x4a>
   32992:	b.n	3294a <add_seen_fsid@@Base+0x16>
   32994:	str.w	r6, [r7, sl, lsl #2]
   32998:	b.n	32978 <add_seen_fsid@@Base+0x44>
   3299a:	mvn.w	r0, #16
   3299e:	b.n	3297a <add_seen_fsid@@Base+0x46>
   329a0:	mvn.w	r0, #11
   329a4:	b.n	3297a <add_seen_fsid@@Base+0x46>

000329a6 <free_seen_fsid@@Base>:
   329a6:	push	{r3, r4, r5, r6, r7, lr}
   329a8:	subs	r6, r0, #4
   329aa:	add.w	r5, r0, #1020	; 0x3fc
   329ae:	ldr.w	r4, [r6, #4]!
   329b2:	cbnz	r4, 329bc <free_seen_fsid@@Base+0x16>
   329b4:	cmp	r6, r5
   329b6:	str	r4, [r6, #0]
   329b8:	bne.n	329ae <free_seen_fsid@@Base+0x8>
   329ba:	pop	{r3, r4, r5, r6, r7, pc}
   329bc:	ldrd	r7, r1, [r4, #16]
   329c0:	ldr	r0, [r4, #24]
   329c2:	bl	341e8 <close_file_or_dir@@Base>
   329c6:	mov	r0, r4
   329c8:	blx	87cc <free@plt+0x4>
   329cc:	mov	r4, r7
   329ce:	b.n	329b2 <free_seen_fsid@@Base+0xc>

000329d0 <btrfs_scan_devices@@Base>:
   329d0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   329d4:	vpush	{d8}
   329d8:	ldr	r1, [pc, #324]	; (32b20 <btrfs_scan_devices@@Base+0x150>)
   329da:	ldr	r2, [pc, #328]	; (32b24 <btrfs_scan_devices@@Base+0x154>)
   329dc:	add	r1, pc
   329de:	sub.w	sp, sp, #4128	; 0x1020
   329e2:	sub	sp, #20
   329e4:	ldr	r2, [r1, r2]
   329e6:	add.w	r3, sp, #4128	; 0x1020
   329ea:	add	r4, sp, #48	; 0x30
   329ec:	ldr	r2, [r2, #0]
   329ee:	str	r2, [r3, #12]
   329f0:	mov.w	r2, #0
   329f4:	ldr	r2, [pc, #304]	; (32b28 <btrfs_scan_devices@@Base+0x158>)
   329f6:	adds	r3, #12
   329f8:	sub.w	sl, r4, #20
   329fc:	add	r2, pc
   329fe:	movs	r3, #0
   32a00:	str.w	r3, [r4, #-24]
   32a04:	ldr	r5, [r2, #0]
   32a06:	str.w	r3, [r4, #-20]
   32a0a:	cmp	r5, #0
   32a0c:	bne.n	32b0c <btrfs_scan_devices@@Base+0x13c>
   32a0e:	mov	r1, r5
   32a10:	mov	r0, sl
   32a12:	blx	8dd4 <blkid_get_cache@plt>
   32a16:	subs	r6, r0, #0
   32a18:	bge.n	32a46 <btrfs_scan_devices@@Base+0x76>
   32a1a:	blx	8bac <__errno_location@plt>
   32a1e:	negs	r3, r6
   32a20:	mov	r5, r6
   32a22:	str	r3, [r0, #0]
   32a24:	ldr	r0, [pc, #260]	; (32b2c <btrfs_scan_devices@@Base+0x15c>)
   32a26:	add	r0, pc
   32a28:	bl	1a900 <__btrfs_error@@Base>
   32a2c:	ldr	r1, [pc, #256]	; (32b30 <btrfs_scan_devices@@Base+0x160>)
   32a2e:	add.w	r3, sp, #4128	; 0x1020
   32a32:	ldr	r2, [pc, #240]	; (32b24 <btrfs_scan_devices@@Base+0x154>)
   32a34:	adds	r3, #12
   32a36:	add	r1, pc
   32a38:	ldr	r2, [r1, r2]
   32a3a:	ldr	r1, [r2, #0]
   32a3c:	ldr	r2, [r3, #0]
   32a3e:	eors	r1, r2
   32a40:	beq.n	32b10 <btrfs_scan_devices@@Base+0x140>
   32a42:	blx	88e4 <__stack_chk_fail@plt>
   32a46:	ldr.w	r0, [sl]
   32a4a:	blx	8e2c <blkid_probe_all@plt>
   32a4e:	ldr.w	r0, [sl]
   32a52:	blx	88fc <blkid_dev_iterate_begin@plt>
   32a56:	ldr	r2, [pc, #220]	; (32b34 <btrfs_scan_devices@@Base+0x164>)
   32a58:	ldr	r1, [pc, #220]	; (32b38 <btrfs_scan_devices@@Base+0x168>)
   32a5a:	add	r2, pc
   32a5c:	ldr.w	fp, [pc, #220]	; 32b3c <btrfs_scan_devices@@Base+0x16c>
   32a60:	add	r1, pc
   32a62:	add	fp, pc
   32a64:	mov	r9, r0
   32a66:	blx	8988 <blkid_dev_set_search@plt>
   32a6a:	ldr	r3, [pc, #212]	; (32b40 <btrfs_scan_devices@@Base+0x170>)
   32a6c:	add	r3, pc
   32a6e:	vmov	s16, r3
   32a72:	sub.w	r7, r4, #24
   32a76:	mov	r1, r7
   32a78:	mov	r0, r9
   32a7a:	blx	8aec <blkid_dev_next@plt>
   32a7e:	mov	r6, r0
   32a80:	cbz	r0, 32a9a <btrfs_scan_devices@@Base+0xca>
   32a82:	mov	r0, r9
   32a84:	blx	8c50 <blkid_dev_iterate_end@plt>
   32a88:	ldr.w	r0, [r4, #-20]
   32a8c:	blx	88a4 <blkid_put_cache@plt>
   32a90:	ldr	r3, [pc, #176]	; (32b44 <btrfs_scan_devices@@Base+0x174>)
   32a92:	movs	r2, #1
   32a94:	add	r3, pc
   32a96:	str	r2, [r3, #0]
   32a98:	b.n	32a2c <btrfs_scan_devices@@Base+0x5c>
   32a9a:	ldr	r1, [r7, #0]
   32a9c:	ldr.w	r0, [sl]
   32aa0:	blx	8af8 <blkid_verify@plt>
   32aa4:	str	r0, [r7, #0]
   32aa6:	cmp	r0, #0
   32aa8:	beq.n	32a76 <btrfs_scan_devices@@Base+0xa6>
   32aaa:	blx	8d70 <blkid_dev_devname@plt>
   32aae:	sub.w	r8, r4, #4
   32ab2:	mov.w	r2, #4096	; 0x1000
   32ab6:	mov	r1, r0
   32ab8:	mov	r0, r8
   32aba:	bl	33008 <__strncpy_null@@Base>
   32abe:	mov	r1, r6
   32ac0:	mov	r0, r8
   32ac2:	blx	8a68 <open64@plt>
   32ac6:	subs	r7, r0, #0
   32ac8:	bge.n	32ad4 <btrfs_scan_devices@@Base+0x104>
   32aca:	mov	r1, r8
   32acc:	mov	r0, fp
   32ace:	bl	1a900 <__btrfs_error@@Base>
   32ad2:	b.n	32a72 <btrfs_scan_devices@@Base+0xa2>
   32ad4:	mov.w	r2, #65536	; 0x10000
   32ad8:	movs	r3, #0
   32ada:	str	r6, [sp, #8]
   32adc:	mov	r1, r8
   32ade:	strd	r2, r3, [sp]
   32ae2:	sub.w	r3, r4, #16
   32ae6:	sub.w	r2, r4, #28
   32aea:	bl	2b574 <btrfs_scan_one_device@@Base>
   32aee:	mov	r6, r0
   32af0:	cbz	r0, 32b04 <btrfs_scan_devices@@Base+0x134>
   32af2:	blx	8bac <__errno_location@plt>
   32af6:	negs	r6, r6
   32af8:	mov	r1, r8
   32afa:	str	r6, [r0, #0]
   32afc:	vmov	r0, s16
   32b00:	bl	1a900 <__btrfs_error@@Base>
   32b04:	mov	r0, r7
   32b06:	blx	8e20 <close@plt>
   32b0a:	b.n	32a72 <btrfs_scan_devices@@Base+0xa2>
   32b0c:	mov	r5, r3
   32b0e:	b.n	32a2c <btrfs_scan_devices@@Base+0x5c>
   32b10:	mov	r0, r5
   32b12:	add.w	sp, sp, #4128	; 0x1020
   32b16:	add	sp, #20
   32b18:	vpop	{d8}
   32b1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32b20:	str	r4, [r2, #52]	; 0x34
   32b22:	movs	r3, r0
   32b24:	lsls	r4, r7, #9
   32b26:	movs	r0, r0
   32b28:	ldrb	r4, [r6, #17]
   32b2a:	movs	r3, r0
   32b2c:	ldr	r5, [pc, #852]	; (32e84 <path_is_reg_file@@Base+0xc>)
   32b2e:	movs	r2, r0
   32b30:	str	r2, [r7, #44]	; 0x2c
   32b32:	movs	r3, r0
   32b34:	ldr	r5, [pc, #752]	; (32e28 <path_is_block_device@@Base+0x54>)
   32b36:	movs	r2, r0
   32b38:	ldr	r5, [pc, #752]	; (32e2c <path_is_block_device@@Base+0x58>)
   32b3a:	movs	r2, r0
   32b3c:	ldr	r6, [pc, #884]	; (32eb4 <path_is_reg_file@@Base+0x3c>)
   32b3e:	movs	r2, r0
   32b40:	ldr	r5, [pc, #724]	; (32e18 <path_is_block_device@@Base+0x44>)
   32b42:	movs	r2, r0
   32b44:	ldrb	r4, [r3, #15]
   32b46:	movs	r3, r0
   32b48:	ldr	r2, [pc, #100]	; (32bb0 <btrfs_scan_devices@@Base+0x1e0>)
   32b4a:	ldr	r3, [pc, #104]	; (32bb4 <btrfs_scan_devices@@Base+0x1e4>)
   32b4c:	add	r2, pc
   32b4e:	push	{lr}
   32b50:	sub	sp, #116	; 0x74
   32b52:	ldr	r3, [r2, r3]
   32b54:	mov	r1, sp
   32b56:	ldr	r3, [r3, #0]
   32b58:	str	r3, [sp, #108]	; 0x6c
   32b5a:	mov.w	r3, #0
   32b5e:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   32b62:	cmp	r0, #0
   32b64:	bge.n	32b82 <btrfs_scan_devices@@Base+0x1b2>
   32b66:	blx	8bac <__errno_location@plt>
   32b6a:	ldr	r0, [r0, #0]
   32b6c:	negs	r0, r0
   32b6e:	ldr	r2, [pc, #72]	; (32bb8 <btrfs_scan_devices@@Base+0x1e8>)
   32b70:	ldr	r3, [pc, #64]	; (32bb4 <btrfs_scan_devices@@Base+0x1e4>)
   32b72:	add	r2, pc
   32b74:	ldr	r3, [r2, r3]
   32b76:	ldr	r2, [r3, #0]
   32b78:	ldr	r3, [sp, #108]	; 0x6c
   32b7a:	eors	r2, r3
   32b7c:	beq.n	32baa <btrfs_scan_devices@@Base+0x1da>
   32b7e:	blx	88e4 <__stack_chk_fail@plt>
   32b82:	ldr	r3, [sp, #16]
   32b84:	and.w	r3, r3, #61440	; 0xf000
   32b88:	cmp.w	r3, #24576	; 0x6000
   32b8c:	bne.n	32ba6 <btrfs_scan_devices@@Base+0x1d6>
   32b8e:	ldrd	r0, r1, [sp, #32]
   32b92:	lsrs	r2, r0, #8
   32b94:	lsrs	r3, r1, #8
   32b96:	orr.w	r2, r2, r1, lsl #24
   32b9a:	cmp	r3, #0
   32b9c:	itte	eq
   32b9e:	cmpeq	r2, #7
   32ba0:	moveq	r0, #1
   32ba2:	movne	r0, #0
   32ba4:	b.n	32b6e <btrfs_scan_devices@@Base+0x19e>
   32ba6:	movs	r0, #0
   32ba8:	b.n	32b6e <btrfs_scan_devices@@Base+0x19e>
   32baa:	add	sp, #116	; 0x74
   32bac:	ldr.w	pc, [sp], #4
   32bb0:	str	r4, [r4, #28]
   32bb2:	movs	r3, r0
   32bb4:	lsls	r4, r7, #9
   32bb6:	movs	r0, r0
   32bb8:	str	r6, [r7, #24]
   32bba:	movs	r3, r0
   32bbc:	ldr	r1, [pc, #192]	; (32c80 <btrfs_scan_devices@@Base+0x2b0>)
   32bbe:	ldr	r2, [pc, #196]	; (32c84 <btrfs_scan_devices@@Base+0x2b4>)
   32bc0:	push	{r4, r5, r6, r7, lr}
   32bc2:	add	r1, pc
   32bc4:	sub.w	sp, sp, #8192	; 0x2000
   32bc8:	sub	sp, #20
   32bca:	ldr	r2, [r1, r2]
   32bcc:	add.w	r3, sp, #8192	; 0x2000
   32bd0:	add	r5, sp, #12
   32bd2:	ldr	r2, [r2, #0]
   32bd4:	str	r2, [r3, #12]
   32bd6:	mov.w	r2, #0
   32bda:	adds	r3, #12
   32bdc:	ldr	r3, [pc, #168]	; (32c88 <btrfs_scan_devices@@Base+0x2b8>)
   32bde:	movs	r2, #1
   32be0:	str	r0, [sp, #4]
   32be2:	mov	r0, r5
   32be4:	add	r3, pc
   32be6:	str	r3, [sp, #0]
   32be8:	mov.w	r3, #4096	; 0x1000
   32bec:	mov	r1, r3
   32bee:	blx	8e44 <__snprintf_chk@plt>
   32bf2:	ldr	r1, [pc, #152]	; (32c8c <btrfs_scan_devices@@Base+0x2bc>)
   32bf4:	mov	r0, r5
   32bf6:	add	r1, pc
   32bf8:	blx	8d7c <fopen64@plt>
   32bfc:	mov	r4, r0
   32bfe:	cbz	r0, 32c1e <btrfs_scan_devices@@Base+0x24e>
   32c00:	add.w	r6, sp, #4096	; 0x1000
   32c04:	mov	r2, r0
   32c06:	adds	r6, #12
   32c08:	mov.w	r1, #4096	; 0x1000
   32c0c:	mov	r0, r6
   32c0e:	blx	87d8 <fgets@plt>
   32c12:	cbnz	r0, 32c38 <btrfs_scan_devices@@Base+0x268>
   32c14:	movs	r5, #0
   32c16:	mov	r0, r4
   32c18:	mov	r4, r5
   32c1a:	blx	8cb8 <fclose@plt>
   32c1e:	ldr	r1, [pc, #112]	; (32c90 <btrfs_scan_devices@@Base+0x2c0>)
   32c20:	add.w	r3, sp, #8192	; 0x2000
   32c24:	ldr	r2, [pc, #92]	; (32c84 <btrfs_scan_devices@@Base+0x2b4>)
   32c26:	adds	r3, #12
   32c28:	add	r1, pc
   32c2a:	ldr	r2, [r1, r2]
   32c2c:	ldr	r1, [r2, #0]
   32c2e:	ldr	r2, [r3, #0]
   32c30:	eors	r1, r2
   32c32:	beq.n	32c76 <btrfs_scan_devices@@Base+0x2a6>
   32c34:	blx	88e4 <__stack_chk_fail@plt>
   32c38:	mov	r0, r6
   32c3a:	blx	8b70 <strlen@plt>
   32c3e:	cmp	r0, #1
   32c40:	bls.n	32c14 <btrfs_scan_devices@@Base+0x244>
   32c42:	add	r0, r6
   32c44:	ldr	r3, [pc, #76]	; (32c94 <btrfs_scan_devices@@Base+0x2c4>)
   32c46:	movs	r7, #0
   32c48:	movs	r2, #1
   32c4a:	strb.w	r7, [r0, #-1]
   32c4e:	add	r3, pc
   32c50:	str	r3, [sp, #0]
   32c52:	mov.w	r3, #4096	; 0x1000
   32c56:	mov	r1, r3
   32c58:	mov	r0, r5
   32c5a:	str	r6, [sp, #4]
   32c5c:	blx	8e44 <__snprintf_chk@plt>
   32c60:	mov	r1, r7
   32c62:	mov	r0, r5
   32c64:	blx	8cac <access@plt>
   32c68:	cmp	r0, #0
   32c6a:	bne.n	32c14 <btrfs_scan_devices@@Base+0x244>
   32c6c:	mov	r0, r5
   32c6e:	blx	88cc <strdup@plt+0x4>
   32c72:	mov	r5, r0
   32c74:	b.n	32c16 <btrfs_scan_devices@@Base+0x246>
   32c76:	mov	r0, r4
   32c78:	add.w	sp, sp, #8192	; 0x2000
   32c7c:	add	sp, #20
   32c7e:	pop	{r4, r5, r6, r7, pc}
   32c80:	str	r6, [r5, #20]
   32c82:	movs	r3, r0
   32c84:	lsls	r4, r7, #9
   32c86:	movs	r0, r0
   32c88:	ldr	r4, [pc, #392]	; (32e14 <path_is_block_device@@Base+0x40>)
   32c8a:	movs	r2, r0
   32c8c:	lsls	r4, r0, #5
   32c8e:	movs	r1, r0
   32c90:	str	r0, [r1, #16]
   32c92:	movs	r3, r0
   32c94:	ldr	r4, [pc, #56]	; (32cd0 <btrfs_scan_devices@@Base+0x300>)
   32c96:	movs	r2, r0
   32c98:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32c9c:	mov	r8, r1
   32c9e:	ldr	r1, [pc, #284]	; (32dbc <btrfs_scan_devices@@Base+0x3ec>)
   32ca0:	sub.w	sp, sp, #8448	; 0x2100
   32ca4:	ldr	r2, [pc, #280]	; (32dc0 <btrfs_scan_devices@@Base+0x3f0>)
   32ca6:	sub	sp, #12
   32ca8:	add	r1, pc
   32caa:	add.w	r4, sp, #4352	; 0x1100
   32cae:	add.w	r3, sp, #8448	; 0x2100
   32cb2:	adds	r4, #4
   32cb4:	ldr	r2, [r1, r2]
   32cb6:	adds	r3, #4
   32cb8:	mov	r1, r4
   32cba:	mov	r9, r0
   32cbc:	ldr	r2, [r2, #0]
   32cbe:	str	r2, [r3, #0]
   32cc0:	mov.w	r2, #0
   32cc4:	mov.w	r2, #4096	; 0x1000
   32cc8:	blx	89f0 <__realpath_chk@plt>
   32ccc:	cbnz	r0, 32cd6 <btrfs_scan_devices@@Base+0x306>
   32cce:	blx	8bac <__errno_location@plt>
   32cd2:	ldr	r6, [r0, #0]
   32cd4:	b.n	32d26 <btrfs_scan_devices@@Base+0x356>
   32cd6:	movs	r1, #47	; 0x2f
   32cd8:	mov	r0, r4
   32cda:	blx	8d0c <strrchr@plt>
   32cde:	add	r4, sp, #264	; 0x108
   32ce0:	ldr	r3, [pc, #224]	; (32dc4 <btrfs_scan_devices@@Base+0x3f4>)
   32ce2:	subs	r5, r4, #4
   32ce4:	movs	r2, #1
   32ce6:	add	r3, pc
   32ce8:	str	r3, [sp, #0]
   32cea:	mov.w	r3, #4096	; 0x1000
   32cee:	mov	r1, r3
   32cf0:	str	r0, [sp, #4]
   32cf2:	mov	r0, r5
   32cf4:	blx	8e44 <__snprintf_chk@plt>
   32cf8:	ldr	r1, [pc, #204]	; (32dc8 <btrfs_scan_devices@@Base+0x3f8>)
   32cfa:	mov	r0, r5
   32cfc:	add	r1, pc
   32cfe:	blx	8d7c <fopen64@plt>
   32d02:	mov	r7, r0
   32d04:	cmp	r0, #0
   32d06:	bne.n	32d7c <btrfs_scan_devices@@Base+0x3ac>
   32d08:	blx	8bac <__errno_location@plt>
   32d0c:	ldr	r6, [r0, #0]
   32d0e:	mov	r5, r0
   32d10:	cmp	r6, #2
   32d12:	bne.n	32d26 <btrfs_scan_devices@@Base+0x356>
   32d14:	mov	r0, r9
   32d16:	mov.w	r1, #2048	; 0x800
   32d1a:	blx	8a68 <open64@plt>
   32d1e:	subs.w	r9, r0, #0
   32d22:	bge.n	32d2a <btrfs_scan_devices@@Base+0x35a>
   32d24:	ldr	r6, [r5, #0]
   32d26:	negs	r6, r6
   32d28:	b.n	32d44 <btrfs_scan_devices@@Base+0x374>
   32d2a:	add	r4, sp, #8
   32d2c:	movw	r1, #19461	; 0x4c05
   32d30:	mov	r2, r4
   32d32:	blx	89cc <ioctl@plt>
   32d36:	subs	r6, r0, #0
   32d38:	bge.n	32d5e <btrfs_scan_devices@@Base+0x38e>
   32d3a:	ldr	r6, [r5, #0]
   32d3c:	negs	r6, r6
   32d3e:	mov	r0, r9
   32d40:	blx	8e20 <close@plt>
   32d44:	ldr	r1, [pc, #132]	; (32dcc <btrfs_scan_devices@@Base+0x3fc>)
   32d46:	add.w	r3, sp, #8448	; 0x2100
   32d4a:	ldr	r2, [pc, #116]	; (32dc0 <btrfs_scan_devices@@Base+0x3f0>)
   32d4c:	adds	r3, #4
   32d4e:	add	r1, pc
   32d50:	ldr	r2, [r1, r2]
   32d52:	ldr	r1, [r2, #0]
   32d54:	ldr	r2, [r3, #0]
   32d56:	eors	r1, r2
   32d58:	beq.n	32db0 <btrfs_scan_devices@@Base+0x3e0>
   32d5a:	blx	88e4 <__stack_chk_fail@plt>
   32d5e:	adds	r4, #56	; 0x38
   32d60:	mov	r5, r8
   32d62:	ldmia	r4!, {r0, r1, r2, r3}
   32d64:	stmia	r5!, {r0, r1, r2, r3}
   32d66:	ldmia	r4!, {r0, r1, r2, r3}
   32d68:	stmia	r5!, {r0, r1, r2, r3}
   32d6a:	ldmia	r4!, {r0, r1, r2, r3}
   32d6c:	stmia	r5!, {r0, r1, r2, r3}
   32d6e:	ldmia.w	r4, {r0, r1, r2, r3}
   32d72:	stmia.w	r5, {r0, r1, r2, r3}
   32d76:	strb.w	r7, [r8, #64]	; 0x40
   32d7a:	b.n	32d3e <btrfs_scan_devices@@Base+0x36e>
   32d7c:	movw	r3, #4095	; 0xfff
   32d80:	str	r3, [sp, #4]
   32d82:	ldr	r3, [pc, #76]	; (32dd0 <btrfs_scan_devices@@Base+0x400>)
   32d84:	subs	r4, #24
   32d86:	movs	r2, #1
   32d88:	add	r3, pc
   32d8a:	str	r3, [sp, #0]
   32d8c:	movs	r3, #20
   32d8e:	mov	r0, r4
   32d90:	mov	r1, r3
   32d92:	blx	8e44 <__snprintf_chk@plt>
   32d96:	mov	r1, r4
   32d98:	mov	r2, r8
   32d9a:	mov	r0, r7
   32d9c:	blx	8c2c <fscanf@plt>
   32da0:	mov	r4, r0
   32da2:	mov	r0, r7
   32da4:	blx	8cb8 <fclose@plt>
   32da8:	adds	r4, #1
   32daa:	beq.n	32cce <btrfs_scan_devices@@Base+0x2fe>
   32dac:	movs	r6, #0
   32dae:	b.n	32d44 <btrfs_scan_devices@@Base+0x374>
   32db0:	mov	r0, r6
   32db2:	add.w	sp, sp, #8448	; 0x2100
   32db6:	add	sp, #12
   32db8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32dbc:	str	r0, [r1, #8]
   32dbe:	movs	r3, r0
   32dc0:	lsls	r4, r7, #9
   32dc2:	movs	r0, r0
   32dc4:	ldr	r3, [pc, #532]	; (32fdc <canonicalize_path@@Base+0x34>)
   32dc6:	movs	r2, r0
   32dc8:	movs	r6, r7
   32dca:	movs	r1, r0
   32dcc:	ldrsh	r2, [r4, r7]
   32dce:	movs	r3, r0
   32dd0:	ldr	r3, [pc, #12]	; (32de0 <path_is_block_device@@Base+0xc>)
   32dd2:	movs	r2, r0

00032dd4 <path_is_block_device@@Base>:
   32dd4:	ldr	r2, [pc, #76]	; (32e24 <path_is_block_device@@Base+0x50>)
   32dd6:	ldr	r3, [pc, #80]	; (32e28 <path_is_block_device@@Base+0x54>)
   32dd8:	add	r2, pc
   32dda:	push	{lr}
   32ddc:	sub	sp, #116	; 0x74
   32dde:	ldr	r3, [r2, r3]
   32de0:	mov	r1, sp
   32de2:	ldr	r3, [r3, #0]
   32de4:	str	r3, [sp, #108]	; 0x6c
   32de6:	mov.w	r3, #0
   32dea:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   32dee:	cmp	r0, #0
   32df0:	bge.n	32e0e <path_is_block_device@@Base+0x3a>
   32df2:	blx	8bac <__errno_location@plt>
   32df6:	ldr	r0, [r0, #0]
   32df8:	negs	r0, r0
   32dfa:	ldr	r2, [pc, #48]	; (32e2c <path_is_block_device@@Base+0x58>)
   32dfc:	ldr	r3, [pc, #40]	; (32e28 <path_is_block_device@@Base+0x54>)
   32dfe:	add	r2, pc
   32e00:	ldr	r3, [r2, r3]
   32e02:	ldr	r2, [r3, #0]
   32e04:	ldr	r3, [sp, #108]	; 0x6c
   32e06:	eors	r2, r3
   32e08:	beq.n	32e1e <path_is_block_device@@Base+0x4a>
   32e0a:	blx	88e4 <__stack_chk_fail@plt>
   32e0e:	ldr	r0, [sp, #16]
   32e10:	and.w	r0, r0, #61440	; 0xf000
   32e14:	sub.w	r3, r0, #24576	; 0x6000
   32e18:	negs	r0, r3
   32e1a:	adcs	r0, r3
   32e1c:	b.n	32dfa <path_is_block_device@@Base+0x26>
   32e1e:	add	sp, #116	; 0x74
   32e20:	ldr.w	pc, [sp], #4
   32e24:	ldrsh	r0, [r3, r5]
   32e26:	movs	r3, r0
   32e28:	lsls	r4, r7, #9
   32e2a:	movs	r0, r0
   32e2c:	ldrsh	r2, [r6, r4]
   32e2e:	movs	r3, r0

00032e30 <path_is_mount_point@@Base>:
   32e30:	push	{r4, r5, r6, lr}
   32e32:	mov	r6, r0
   32e34:	ldr	r1, [pc, #56]	; (32e70 <path_is_mount_point@@Base+0x40>)
   32e36:	ldr	r0, [pc, #60]	; (32e74 <path_is_mount_point@@Base+0x44>)
   32e38:	add	r1, pc
   32e3a:	add	r0, pc
   32e3c:	blx	8d94 <setmntent@plt>
   32e40:	mov	r5, r0
   32e42:	cbnz	r0, 32e54 <path_is_mount_point@@Base+0x24>
   32e44:	mov.w	r4, #4294967295	; 0xffffffff
   32e48:	b.n	32e66 <path_is_mount_point@@Base+0x36>
   32e4a:	ldr	r0, [r4, #4]
   32e4c:	mov	r1, r6
   32e4e:	blx	8748 <strcmp@plt>
   32e52:	cbz	r0, 32e6a <path_is_mount_point@@Base+0x3a>
   32e54:	mov	r0, r5
   32e56:	blx	8a50 <getmntent@plt>
   32e5a:	mov	r4, r0
   32e5c:	cmp	r0, #0
   32e5e:	bne.n	32e4a <path_is_mount_point@@Base+0x1a>
   32e60:	mov	r0, r5
   32e62:	blx	8cd0 <endmntent@plt>
   32e66:	mov	r0, r4
   32e68:	pop	{r4, r5, r6, pc}
   32e6a:	movs	r4, #1
   32e6c:	b.n	32e60 <path_is_mount_point@@Base+0x30>
   32e6e:	nop
   32e70:	vhadd.u8	d0, d2, d0
   32e74:	ldr	r2, [pc, #360]	; (32fe0 <canonicalize_path@@Base+0x38>)
   32e76:	movs	r2, r0

00032e78 <path_is_reg_file@@Base>:
   32e78:	ldr	r2, [pc, #76]	; (32ec8 <path_is_reg_file@@Base+0x50>)
   32e7a:	ldr	r3, [pc, #80]	; (32ecc <path_is_reg_file@@Base+0x54>)
   32e7c:	add	r2, pc
   32e7e:	push	{lr}
   32e80:	sub	sp, #116	; 0x74
   32e82:	ldr	r3, [r2, r3]
   32e84:	mov	r1, sp
   32e86:	ldr	r3, [r3, #0]
   32e88:	str	r3, [sp, #108]	; 0x6c
   32e8a:	mov.w	r3, #0
   32e8e:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   32e92:	cmp	r0, #0
   32e94:	bge.n	32eb2 <path_is_reg_file@@Base+0x3a>
   32e96:	blx	8bac <__errno_location@plt>
   32e9a:	ldr	r0, [r0, #0]
   32e9c:	negs	r0, r0
   32e9e:	ldr	r2, [pc, #48]	; (32ed0 <path_is_reg_file@@Base+0x58>)
   32ea0:	ldr	r3, [pc, #40]	; (32ecc <path_is_reg_file@@Base+0x54>)
   32ea2:	add	r2, pc
   32ea4:	ldr	r3, [r2, r3]
   32ea6:	ldr	r2, [r3, #0]
   32ea8:	ldr	r3, [sp, #108]	; 0x6c
   32eaa:	eors	r2, r3
   32eac:	beq.n	32ec2 <path_is_reg_file@@Base+0x4a>
   32eae:	blx	88e4 <__stack_chk_fail@plt>
   32eb2:	ldr	r0, [sp, #16]
   32eb4:	and.w	r0, r0, #61440	; 0xf000
   32eb8:	sub.w	r3, r0, #32768	; 0x8000
   32ebc:	negs	r0, r3
   32ebe:	adcs	r0, r3
   32ec0:	b.n	32e9e <path_is_reg_file@@Base+0x26>
   32ec2:	add	sp, #116	; 0x74
   32ec4:	ldr.w	pc, [sp], #4
   32ec8:	ldrsh	r4, [r6, r2]
   32eca:	movs	r3, r0
   32ecc:	lsls	r4, r7, #9
   32ece:	movs	r0, r0
   32ed0:	ldrsh	r6, [r1, r2]
   32ed2:	movs	r3, r0

00032ed4 <path_exists@@Base>:
   32ed4:	ldr	r2, [pc, #72]	; (32f20 <path_exists@@Base+0x4c>)
   32ed6:	ldr	r3, [pc, #76]	; (32f24 <path_exists@@Base+0x50>)
   32ed8:	add	r2, pc
   32eda:	push	{lr}
   32edc:	sub	sp, #116	; 0x74
   32ede:	ldr	r3, [r2, r3]
   32ee0:	mov	r1, sp
   32ee2:	ldr	r3, [r3, #0]
   32ee4:	str	r3, [sp, #108]	; 0x6c
   32ee6:	mov.w	r3, #0
   32eea:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   32eee:	cmp	r0, #0
   32ef0:	bge.n	32f12 <path_exists@@Base+0x3e>
   32ef2:	blx	8bac <__errno_location@plt>
   32ef6:	ldr	r0, [r0, #0]
   32ef8:	cmp	r0, #2
   32efa:	beq.n	32f16 <path_exists@@Base+0x42>
   32efc:	negs	r0, r0
   32efe:	ldr	r2, [pc, #40]	; (32f28 <path_exists@@Base+0x54>)
   32f00:	ldr	r3, [pc, #32]	; (32f24 <path_exists@@Base+0x50>)
   32f02:	add	r2, pc
   32f04:	ldr	r3, [r2, r3]
   32f06:	ldr	r2, [r3, #0]
   32f08:	ldr	r3, [sp, #108]	; 0x6c
   32f0a:	eors	r2, r3
   32f0c:	beq.n	32f1a <path_exists@@Base+0x46>
   32f0e:	blx	88e4 <__stack_chk_fail@plt>
   32f12:	movs	r0, #1
   32f14:	b.n	32efe <path_exists@@Base+0x2a>
   32f16:	movs	r0, #0
   32f18:	b.n	32efe <path_exists@@Base+0x2a>
   32f1a:	add	sp, #116	; 0x74
   32f1c:	ldr.w	pc, [sp], #4
   32f20:	ldrsh	r0, [r3, r1]
   32f22:	movs	r3, r0
   32f24:	lsls	r4, r7, #9
   32f26:	movs	r0, r0
   32f28:	ldrsh	r6, [r5, r0]
   32f2a:	movs	r3, r0

00032f2c <path_is_reg_or_block_device@@Base>:
   32f2c:	ldr	r2, [pc, #96]	; (32f90 <path_is_reg_or_block_device@@Base+0x64>)
   32f2e:	ldr	r3, [pc, #100]	; (32f94 <path_is_reg_or_block_device@@Base+0x68>)
   32f30:	add	r2, pc
   32f32:	push	{lr}
   32f34:	sub	sp, #116	; 0x74
   32f36:	ldr	r3, [r2, r3]
   32f38:	mov	r1, sp
   32f3a:	ldr	r3, [r3, #0]
   32f3c:	str	r3, [sp, #108]	; 0x6c
   32f3e:	mov.w	r3, #0
   32f42:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   32f46:	cmp	r0, #0
   32f48:	bge.n	32f6a <path_is_reg_or_block_device@@Base+0x3e>
   32f4a:	blx	8bac <__errno_location@plt>
   32f4e:	ldr	r0, [r0, #0]
   32f50:	cmp	r0, #2
   32f52:	beq.n	32f80 <path_is_reg_or_block_device@@Base+0x54>
   32f54:	negs	r0, r0
   32f56:	ldr	r2, [pc, #64]	; (32f98 <path_is_reg_or_block_device@@Base+0x6c>)
   32f58:	ldr	r3, [pc, #56]	; (32f94 <path_is_reg_or_block_device@@Base+0x68>)
   32f5a:	add	r2, pc
   32f5c:	ldr	r3, [r2, r3]
   32f5e:	ldr	r2, [r3, #0]
   32f60:	ldr	r3, [sp, #108]	; 0x6c
   32f62:	eors	r2, r3
   32f64:	beq.n	32f88 <path_is_reg_or_block_device@@Base+0x5c>
   32f66:	blx	88e4 <__stack_chk_fail@plt>
   32f6a:	ldr	r0, [sp, #16]
   32f6c:	and.w	r0, r0, #61440	; 0xf000
   32f70:	cmp.w	r0, #24576	; 0x6000
   32f74:	beq.n	32f84 <path_is_reg_or_block_device@@Base+0x58>
   32f76:	sub.w	r3, r0, #32768	; 0x8000
   32f7a:	negs	r0, r3
   32f7c:	adcs	r0, r3
   32f7e:	b.n	32f56 <path_is_reg_or_block_device@@Base+0x2a>
   32f80:	movs	r0, #0
   32f82:	b.n	32f56 <path_is_reg_or_block_device@@Base+0x2a>
   32f84:	movs	r0, #1
   32f86:	b.n	32f56 <path_is_reg_or_block_device@@Base+0x2a>
   32f88:	add	sp, #116	; 0x74
   32f8a:	ldr.w	pc, [sp], #4
   32f8e:	nop
   32f90:	ldrsh	r0, [r0, r0]
   32f92:	movs	r3, r0
   32f94:	lsls	r4, r7, #9
   32f96:	movs	r0, r0
   32f98:	ldrb	r6, [r2, r7]
   32f9a:	movs	r3, r0

00032f9c <canonicalize_dm_name@@Base>:
   32f9c:	cbz	r0, 32fa4 <canonicalize_dm_name@@Base+0x8>
   32f9e:	ldrb	r3, [r0, #0]
   32fa0:	cbz	r3, 32fa4 <canonicalize_dm_name@@Base+0x8>
   32fa2:	b.n	32bbc <btrfs_scan_devices@@Base+0x1ec>
   32fa4:	movs	r0, #0
   32fa6:	bx	lr

00032fa8 <canonicalize_path@@Base>:
   32fa8:	push	{r3, r4, r5, lr}
   32faa:	mov	r5, r0
   32fac:	cbz	r0, 32ffc <canonicalize_path@@Base+0x54>
   32fae:	ldrb	r4, [r0, #0]
   32fb0:	cbz	r4, 32ffe <canonicalize_path@@Base+0x56>
   32fb2:	movs	r1, #0
   32fb4:	blx	8e14 <realpath@plt>
   32fb8:	mov	r4, r0
   32fba:	cbnz	r0, 32fc6 <canonicalize_path@@Base+0x1e>
   32fbc:	mov	r0, r5
   32fbe:	ldmia.w	sp!, {r3, r4, r5, lr}
   32fc2:	b.w	88c8 <strdup@plt>
   32fc6:	movs	r1, #47	; 0x2f
   32fc8:	blx	8d0c <strrchr@plt>
   32fcc:	mov	r5, r0
   32fce:	cbz	r0, 32ffe <canonicalize_path@@Base+0x56>
   32fd0:	ldr	r1, [pc, #48]	; (33004 <canonicalize_path@@Base+0x5c>)
   32fd2:	movs	r2, #4
   32fd4:	add	r1, pc
   32fd6:	blx	8df0 <strncmp@plt>
   32fda:	cbnz	r0, 32ffe <canonicalize_path@@Base+0x56>
   32fdc:	blx	8b40 <__ctype_b_loc@plt>
   32fe0:	ldrb	r2, [r5, #4]
   32fe2:	ldr	r3, [r0, #0]
   32fe4:	ldrh.w	r3, [r3, r2, lsl #1]
   32fe8:	lsls	r3, r3, #20
   32fea:	bpl.n	32ffe <canonicalize_path@@Base+0x56>
   32fec:	adds	r0, r5, #1
   32fee:	bl	32f9c <canonicalize_dm_name@@Base>
   32ff2:	mov	r5, r0
   32ff4:	cbz	r0, 32ffe <canonicalize_path@@Base+0x56>
   32ff6:	mov	r0, r4
   32ff8:	blx	87cc <free@plt+0x4>
   32ffc:	mov	r4, r5
   32ffe:	mov	r0, r4
   33000:	pop	{r3, r4, r5, pc}
   33002:	nop
   33004:	ldr	r0, [pc, #840]	; (33350 <test_issubvolname@@Base+0x122>)
   33006:	movs	r2, r0

00033008 <__strncpy_null@@Base>:
   33008:	push	{r3, r4, r5, lr}
   3300a:	mov	r4, r2
   3300c:	mov	r5, r0
   3300e:	blx	8c14 <strncpy@plt>
   33012:	cbz	r4, 3301c <__strncpy_null@@Base+0x14>
   33014:	add	r4, r5
   33016:	movs	r3, #0
   33018:	strb.w	r3, [r4, #-1]
   3301c:	mov	r0, r5
   3301e:	pop	{r3, r4, r5, pc}

00033020 <is_same_loop_file@@Base>:
   33020:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   33024:	mov	r5, r1
   33026:	ldr	r1, [pc, #368]	; (33198 <is_same_loop_file@@Base+0x178>)
   33028:	sub.w	sp, sp, #16512	; 0x4080
   3302c:	ldr	r2, [pc, #364]	; (3319c <is_same_loop_file@@Base+0x17c>)
   3302e:	sub	sp, #88	; 0x58
   33030:	add	r1, pc
   33032:	add.w	r3, sp, #16512	; 0x4080
   33036:	adds	r3, #84	; 0x54
   33038:	mov	r6, r0
   3303a:	ldr	r2, [r1, r2]
   3303c:	ldr	r2, [r2, #0]
   3303e:	str	r2, [r3, #0]
   33040:	mov.w	r2, #0
   33044:	bl	32b48 <btrfs_scan_devices@@Base+0x178>
   33048:	subs	r4, r0, #0
   3304a:	bge.n	33054 <is_same_loop_file@@Base+0x34>
   3304c:	adds	r3, r4, #2
   3304e:	bne.n	330e6 <is_same_loop_file@@Base+0xc6>
   33050:	movs	r4, #0
   33052:	b.n	330e6 <is_same_loop_file@@Base+0xc6>
   33054:	beq.n	33070 <is_same_loop_file@@Base+0x50>
   33056:	add	r7, sp, #212	; 0xd4
   33058:	mov	r0, r6
   3305a:	mov	r1, r7
   3305c:	bl	32c98 <btrfs_scan_devices@@Base+0x2c8>
   33060:	subs	r4, r0, #0
   33062:	bge.n	33100 <is_same_loop_file@@Base+0xe0>
   33064:	blx	8bac <__errno_location@plt>
   33068:	ldr	r3, [r0, #0]
   3306a:	cmp	r3, #1
   3306c:	bne.n	330e6 <is_same_loop_file@@Base+0xc6>
   3306e:	movs	r6, #0
   33070:	mov	r0, r5
   33072:	bl	32b48 <btrfs_scan_devices@@Base+0x178>
   33076:	subs	r4, r0, #0
   33078:	blt.n	3304c <is_same_loop_file@@Base+0x2c>
   3307a:	beq.n	3309a <is_same_loop_file@@Base+0x7a>
   3307c:	add.w	r7, sp, #4288	; 0x10c0
   33080:	mov	r0, r5
   33082:	adds	r7, #20
   33084:	mov	r1, r7
   33086:	bl	32c98 <btrfs_scan_devices@@Base+0x2c8>
   3308a:	subs	r4, r0, #0
   3308c:	bge.n	33104 <is_same_loop_file@@Base+0xe4>
   3308e:	blx	8bac <__errno_location@plt>
   33092:	ldr	r3, [r0, #0]
   33094:	cmp	r3, #1
   33096:	bne.n	330e6 <is_same_loop_file@@Base+0xc6>
   33098:	movs	r5, #0
   3309a:	add.w	r4, sp, #8384	; 0x20c0
   3309e:	mov.w	r2, #4096	; 0x1000
   330a2:	adds	r4, #20
   330a4:	mov	r0, r6
   330a6:	mov	r1, r4
   330a8:	blx	89f0 <__realpath_chk@plt>
   330ac:	cbnz	r0, 330ba <is_same_loop_file@@Base+0x9a>
   330ae:	mov.w	r2, #4096	; 0x1000
   330b2:	mov	r1, r6
   330b4:	mov	r0, r4
   330b6:	bl	33008 <__strncpy_null@@Base>
   330ba:	add.w	r7, sp, #12480	; 0x30c0
   330be:	mov.w	r2, #4096	; 0x1000
   330c2:	adds	r7, #20
   330c4:	mov	r0, r5
   330c6:	mov	r1, r7
   330c8:	blx	89f0 <__realpath_chk@plt>
   330cc:	cbnz	r0, 330da <is_same_loop_file@@Base+0xba>
   330ce:	mov.w	r2, #4096	; 0x1000
   330d2:	mov	r1, r5
   330d4:	mov	r0, r7
   330d6:	bl	33008 <__strncpy_null@@Base>
   330da:	mov	r1, r7
   330dc:	mov	r0, r4
   330de:	blx	8748 <strcmp@plt>
   330e2:	cbnz	r0, 33108 <is_same_loop_file@@Base+0xe8>
   330e4:	movs	r4, #1
   330e6:	ldr	r1, [pc, #184]	; (331a0 <is_same_loop_file@@Base+0x180>)
   330e8:	add.w	r3, sp, #16512	; 0x4080
   330ec:	ldr	r2, [pc, #172]	; (3319c <is_same_loop_file@@Base+0x17c>)
   330ee:	adds	r3, #84	; 0x54
   330f0:	add	r1, pc
   330f2:	ldr	r2, [r1, r2]
   330f4:	ldr	r1, [r2, #0]
   330f6:	ldr	r2, [r3, #0]
   330f8:	eors	r1, r2
   330fa:	beq.n	3318a <is_same_loop_file@@Base+0x16a>
   330fc:	blx	88e4 <__stack_chk_fail@plt>
   33100:	mov	r6, r7
   33102:	b.n	33070 <is_same_loop_file@@Base+0x50>
   33104:	mov	r5, r7
   33106:	b.n	3309a <is_same_loop_file@@Base+0x7a>
   33108:	add	r7, sp, #88	; 0x58
   3310a:	mov	r0, r6
   3310c:	sub.w	r8, r7, #88	; 0x58
   33110:	mov	r1, r8
   33112:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   33116:	cmp	r0, #0
   33118:	bge.n	33128 <is_same_loop_file@@Base+0x108>
   3311a:	blx	8bac <__errno_location@plt>
   3311e:	ldr	r4, [r0, #0]
   33120:	cmp	r4, #2
   33122:	beq.n	33050 <is_same_loop_file@@Base+0x30>
   33124:	negs	r4, r4
   33126:	b.n	330e6 <is_same_loop_file@@Base+0xc6>
   33128:	add	r6, sp, #216	; 0xd8
   3312a:	mov	r0, r5
   3312c:	sub.w	r4, r6, #112	; 0x70
   33130:	mov	r1, r4
   33132:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   33136:	cmp	r0, #0
   33138:	blt.n	3311a <is_same_loop_file@@Base+0xfa>
   3313a:	ldr.w	r3, [r8, #16]
   3313e:	and.w	r3, r3, #61440	; 0xf000
   33142:	cmp.w	r3, #24576	; 0x6000
   33146:	bne.n	33164 <is_same_loop_file@@Base+0x144>
   33148:	ldr	r3, [r4, #16]
   3314a:	and.w	r3, r3, #61440	; 0xf000
   3314e:	cmp.w	r3, #24576	; 0x6000
   33152:	bne.n	33164 <is_same_loop_file@@Base+0x144>
   33154:	ldrd	r0, r1, [r8, #32]
   33158:	ldrd	r2, r3, [r4, #32]
   3315c:	cmp	r1, r3
   3315e:	it	eq
   33160:	cmpeq	r0, r2
   33162:	beq.n	330e4 <is_same_loop_file@@Base+0xc4>
   33164:	ldrd	r0, r1, [r7, #-88]	; 0x58
   33168:	ldrd	r2, r3, [r6, #-112]	; 0x70
   3316c:	cmp	r1, r3
   3316e:	it	eq
   33170:	cmpeq	r0, r2
   33172:	bne.w	33050 <is_same_loop_file@@Base+0x30>
   33176:	ldrd	r2, r3, [r4, #96]	; 0x60
   3317a:	ldrd	r0, r1, [r8, #96]	; 0x60
   3317e:	cmp	r1, r3
   33180:	itte	eq
   33182:	cmpeq	r0, r2
   33184:	moveq	r4, #1
   33186:	movne	r4, #0
   33188:	b.n	330e6 <is_same_loop_file@@Base+0xc6>
   3318a:	mov	r0, r4
   3318c:	add.w	sp, sp, #16512	; 0x4080
   33190:	add	sp, #88	; 0x58
   33192:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   33196:	nop
   33198:	ldrb	r0, [r0, r4]
   3319a:	movs	r3, r0
   3319c:	lsls	r4, r7, #9
   3319e:	movs	r0, r0
   331a0:	ldrb	r0, [r0, r1]
   331a2:	movs	r3, r0

000331a4 <path_is_dir@@Base>:
   331a4:	ldr	r2, [pc, #76]	; (331f4 <path_is_dir@@Base+0x50>)
   331a6:	ldr	r3, [pc, #80]	; (331f8 <path_is_dir@@Base+0x54>)
   331a8:	add	r2, pc
   331aa:	push	{lr}
   331ac:	sub	sp, #116	; 0x74
   331ae:	ldr	r3, [r2, r3]
   331b0:	mov	r1, sp
   331b2:	ldr	r3, [r3, #0]
   331b4:	str	r3, [sp, #108]	; 0x6c
   331b6:	mov.w	r3, #0
   331ba:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   331be:	cmp	r0, #0
   331c0:	bge.n	331de <path_is_dir@@Base+0x3a>
   331c2:	blx	8bac <__errno_location@plt>
   331c6:	ldr	r0, [r0, #0]
   331c8:	negs	r0, r0
   331ca:	ldr	r2, [pc, #48]	; (331fc <path_is_dir@@Base+0x58>)
   331cc:	ldr	r3, [pc, #40]	; (331f8 <path_is_dir@@Base+0x54>)
   331ce:	add	r2, pc
   331d0:	ldr	r3, [r2, r3]
   331d2:	ldr	r2, [r3, #0]
   331d4:	ldr	r3, [sp, #108]	; 0x6c
   331d6:	eors	r2, r3
   331d8:	beq.n	331ee <path_is_dir@@Base+0x4a>
   331da:	blx	88e4 <__stack_chk_fail@plt>
   331de:	ldr	r0, [sp, #16]
   331e0:	and.w	r0, r0, #61440	; 0xf000
   331e4:	sub.w	r3, r0, #16384	; 0x4000
   331e8:	negs	r0, r3
   331ea:	adcs	r0, r3
   331ec:	b.n	331ca <path_is_dir@@Base+0x26>
   331ee:	add	sp, #116	; 0x74
   331f0:	ldr.w	pc, [sp], #4
   331f4:	ldrh	r0, [r1, r6]
   331f6:	movs	r3, r0
   331f8:	lsls	r4, r7, #9
   331fa:	movs	r0, r0
   331fc:	ldrh	r2, [r4, r5]
   331fe:	movs	r3, r0

00033200 <arg_copy_path@@Base>:
   33200:	push	{r0, r1, r2, r4, r5, lr}
   33202:	mov	r5, r0
   33204:	mov	r0, r1
   33206:	mov	r4, r2
   33208:	str	r1, [sp, #4]
   3320a:	blx	8b70 <strlen@plt>
   3320e:	cmp.w	r0, #4096	; 0x1000
   33212:	bcs.n	33228 <arg_copy_path@@Base+0x28>
   33214:	cmp	r4, r0
   33216:	bls.n	33228 <arg_copy_path@@Base+0x28>
   33218:	ldr	r1, [sp, #4]
   3321a:	mov	r2, r4
   3321c:	mov	r0, r5
   3321e:	bl	33008 <__strncpy_null@@Base>
   33222:	movs	r0, #0
   33224:	add	sp, #12
   33226:	pop	{r4, r5, pc}
   33228:	mvn.w	r0, #35	; 0x23
   3322c:	b.n	33224 <arg_copy_path@@Base+0x24>

0003322e <test_issubvolname@@Base>:
   3322e:	push	{r4, lr}
   33230:	mov	r4, r0
   33232:	ldrb	r3, [r0, #0]
   33234:	cbz	r3, 3325c <test_issubvolname@@Base+0x2e>
   33236:	movs	r1, #47	; 0x2f
   33238:	blx	8b7c <strchr@plt>
   3323c:	cbnz	r0, 3325c <test_issubvolname@@Base+0x2e>
   3323e:	ldr	r1, [pc, #32]	; (33260 <test_issubvolname@@Base+0x32>)
   33240:	mov	r0, r4
   33242:	add	r1, pc
   33244:	blx	8748 <strcmp@plt>
   33248:	cbz	r0, 3325a <test_issubvolname@@Base+0x2c>
   3324a:	ldr	r1, [pc, #24]	; (33264 <test_issubvolname@@Base+0x36>)
   3324c:	mov	r0, r4
   3324e:	add	r1, pc
   33250:	blx	8748 <strcmp@plt>
   33254:	subs	r0, #0
   33256:	it	ne
   33258:	movne	r0, #1
   3325a:	pop	{r4, pc}
   3325c:	movs	r0, #0
   3325e:	b.n	3325a <test_issubvolname@@Base+0x2c>
   33260:	ldr	r3, [sp, #828]	; 0x33c
   33262:	movs	r0, r0
   33264:	mov	r5, fp
   33266:	movs	r2, r0
   33268:	and.w	r2, r0, #2040	; 0x7f8
   3326c:	movs	r3, #0
   3326e:	cmp	r3, #0
   33270:	it	eq
   33272:	cmpeq	r2, #64	; 0x40
   33274:	beq.n	332f0 <test_issubvolname@@Base+0xc2>
   33276:	cmp	r3, #0
   33278:	it	eq
   3327a:	cmpeq	r2, #65	; 0x41
   3327c:	bcs.n	332b0 <test_issubvolname@@Base+0x82>
   3327e:	cmp	r3, #0
   33280:	it	eq
   33282:	cmpeq	r2, #16
   33284:	beq.n	332fc <test_issubvolname@@Base+0xce>
   33286:	cmp	r3, #0
   33288:	it	eq
   3328a:	cmpeq	r2, #17
   3328c:	bcs.n	332a2 <test_issubvolname@@Base+0x74>
   3328e:	orrs.w	r1, r2, r3
   33292:	beq.n	332f4 <test_issubvolname@@Base+0xc6>
   33294:	cmp	r3, #0
   33296:	itet	eq
   33298:	cmpeq	r2, #8
   3329a:	movne.w	r0, #4294967295	; 0xffffffff
   3329e:	moveq	r0, #2
   332a0:	bx	lr
   332a2:	cmp	r3, #0
   332a4:	itet	eq
   332a6:	cmpeq	r2, #32
   332a8:	movne.w	r0, #4294967295	; 0xffffffff
   332ac:	moveq	r0, #1
   332ae:	bx	lr
   332b0:	cmp	r3, #0
   332b2:	it	eq
   332b4:	cmpeq.w	r2, #512	; 0x200
   332b8:	beq.n	332f8 <test_issubvolname@@Base+0xca>
   332ba:	movs	r1, #0
   332bc:	cmp	r1, r3
   332be:	mov.w	r0, #512	; 0x200
   332c2:	it	eq
   332c4:	cmpeq	r0, r2
   332c6:	bcc.n	332e0 <test_issubvolname@@Base+0xb2>
   332c8:	cmp	r3, #0
   332ca:	it	eq
   332cc:	cmpeq	r2, #128	; 0x80
   332ce:	beq.n	332fc <test_issubvolname@@Base+0xce>
   332d0:	cmp	r3, #0
   332d2:	itet	eq
   332d4:	cmpeq.w	r2, #256	; 0x100
   332d8:	movne.w	r0, #4294967295	; 0xffffffff
   332dc:	moveq	r0, #3
   332de:	bx	lr
   332e0:	cmp	r3, #0
   332e2:	itet	eq
   332e4:	cmpeq.w	r2, #1024	; 0x400
   332e8:	movne.w	r0, #4294967295	; 0xffffffff
   332ec:	moveq	r0, #4
   332ee:	bx	lr
   332f0:	movs	r0, #4
   332f2:	bx	lr
   332f4:	movs	r0, #1
   332f6:	bx	lr
   332f8:	movs	r0, #3
   332fa:	bx	lr
   332fc:	movs	r0, #2
   332fe:	bx	lr
   33300:	ldr	r2, [pc, #136]	; (3338c <test_issubvolname@@Base+0x15e>)
   33302:	movs	r1, #0
   33304:	ldr	r3, [pc, #136]	; (33390 <test_issubvolname@@Base+0x162>)
   33306:	add	r2, pc
   33308:	ldr	r0, [pc, #136]	; (33394 <test_issubvolname@@Base+0x166>)
   3330a:	push	{r4, r5, lr}
   3330c:	sub	sp, #20
   3330e:	ldr	r3, [r2, r3]
   33310:	add	r0, pc
   33312:	ldr	r3, [r3, #0]
   33314:	str	r3, [sp, #12]
   33316:	mov.w	r3, #0
   3331a:	blx	8a68 <open64@plt>
   3331e:	subs	r4, r0, #0
   33320:	bge.n	3336e <test_issubvolname@@Base+0x140>
   33322:	ldr	r0, [pc, #116]	; (33398 <test_issubvolname@@Base+0x16a>)
   33324:	ldr	r4, [pc, #116]	; (3339c <test_issubvolname@@Base+0x16e>)
   33326:	add	r0, pc
   33328:	bl	1a884 <__btrfs_warning@@Base>
   3332c:	movs	r1, #0
   3332e:	add	r0, sp, #4
   33330:	add	r4, pc
   33332:	blx	8a14 <gettimeofday@plt>
   33336:	blx	8b4c <getpid@plt>
   3333a:	ldr	r3, [sp, #4]
   3333c:	eors	r0, r3
   3333e:	strh	r0, [r4, #0]
   33340:	blx	8d58 <getppid@plt>
   33344:	ldr	r3, [sp, #8]
   33346:	ldr	r2, [sp, #4]
   33348:	eors	r0, r3
   3334a:	eors	r3, r2
   3334c:	strh	r0, [r4, #2]
   3334e:	asrs	r3, r3, #16
   33350:	strh	r3, [r4, #4]
   33352:	ldr	r3, [pc, #76]	; (333a0 <test_issubvolname@@Base+0x172>)
   33354:	movs	r2, #1
   33356:	add	r3, pc
   33358:	str	r2, [r3, #8]
   3335a:	ldr	r2, [pc, #72]	; (333a4 <test_issubvolname@@Base+0x176>)
   3335c:	ldr	r3, [pc, #48]	; (33390 <test_issubvolname@@Base+0x162>)
   3335e:	add	r2, pc
   33360:	ldr	r3, [r2, r3]
   33362:	ldr	r2, [r3, #0]
   33364:	ldr	r3, [sp, #12]
   33366:	eors	r2, r3
   33368:	beq.n	33386 <test_issubvolname@@Base+0x158>
   3336a:	blx	88e4 <__stack_chk_fail@plt>
   3336e:	ldr	r1, [pc, #56]	; (333a8 <test_issubvolname@@Base+0x17a>)
   33370:	movs	r2, #6
   33372:	add	r1, pc
   33374:	blx	8784 <read@plt>
   33378:	mov	r5, r0
   3337a:	mov	r0, r4
   3337c:	blx	8e20 <close@plt>
   33380:	cmp	r5, #5
   33382:	bhi.n	33352 <test_issubvolname@@Base+0x124>
   33384:	b.n	33322 <test_issubvolname@@Base+0xf4>
   33386:	add	sp, #20
   33388:	pop	{r4, r5, pc}
   3338a:	nop
   3338c:	ldrh	r2, [r5, r0]
   3338e:	movs	r3, r0
   33390:	lsls	r4, r7, #9
   33392:	movs	r0, r0
   33394:	cmp	lr, r3
   33396:	movs	r2, r0
   33398:	cmp	sp, r2
   3339a:	movs	r2, r0
   3339c:	strb	r4, [r0, #13]
   3339e:	movs	r3, r0
   333a0:	strb	r6, [r3, #12]
   333a2:	movs	r3, r0
   333a4:	ldr	r2, [r2, r7]
   333a6:	movs	r3, r0
   333a8:	strb	r2, [r0, #12]
   333aa:	movs	r3, r0
   333ac:	ldr.w	ip, [pc, #76]	; 333fc <test_issubvolname@@Base+0x1ce>
   333b0:	ldr	r5, [pc, #76]	; (33400 <test_issubvolname@@Base+0x1d2>)
   333b2:	add	ip, pc
   333b4:	ldr	r4, [pc, #76]	; (33404 <test_issubvolname@@Base+0x1d6>)
   333b6:	push	{lr}
   333b8:	sub	sp, #92	; 0x5c
   333ba:	ldr.w	r5, [ip, r5]
   333be:	add	r4, pc
   333c0:	ldr	r5, [r5, #0]
   333c2:	str	r5, [sp, #84]	; 0x54
   333c4:	mov.w	r5, #0
   333c8:	ldr	r5, [pc, #60]	; (33408 <test_issubvolname@@Base+0x1da>)
   333ca:	ldr	r4, [r4, r5]
   333cc:	strd	r2, r1, [sp]
   333d0:	movs	r1, #1
   333d2:	strd	r0, r3, [sp, #8]
   333d6:	ldr	r2, [pc, #52]	; (3340c <test_issubvolname@@Base+0x1de>)
   333d8:	ldr	r3, [pc, #52]	; (33410 <test_issubvolname@@Base+0x1e2>)
   333da:	ldr	r0, [r4, #0]
   333dc:	add	r4, sp, #20
   333de:	add	r3, pc
   333e0:	add	r2, pc
   333e2:	blx	8ca0 <__fprintf_chk@plt+0x4>
   333e6:	movs	r1, #16
   333e8:	mov	r0, r4
   333ea:	blx	8ae0 <backtrace@plt>
   333ee:	movs	r2, #2
   333f0:	mov	r1, r0
   333f2:	mov	r0, r4
   333f4:	blx	8e50 <backtrace_symbols_fd@plt>
   333f8:	blx	8e08 <abort@plt>
   333fc:	ldr	r6, [r7, r5]
   333fe:	movs	r3, r0
   33400:	lsls	r4, r7, #9
   33402:	movs	r0, r0
   33404:	ldr	r2, [r6, r5]
   33406:	movs	r3, r0
   33408:	lsls	r4, r1, #10
   3340a:	movs	r0, r0
   3340c:	ldr	r3, [sp, #796]	; 0x31c
   3340e:	movs	r0, r0
   33410:	cmp	r2, r3
   33412:	movs	r2, r0

00033414 <btrfs_make_root_dir@@Base>:
   33414:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   33418:	mov	r6, r2
   3341a:	ldr	r2, [pc, #208]	; (334ec <btrfs_make_root_dir@@Base+0xd8>)
   3341c:	mov	r5, r3
   3341e:	ldr	r3, [pc, #208]	; (334f0 <btrfs_make_root_dir@@Base+0xdc>)
   33420:	sub	sp, #192	; 0xc0
   33422:	add	r2, pc
   33424:	mov	r8, r0
   33426:	movs	r0, #0
   33428:	mov	r4, r1
   3342a:	ldr	r3, [r2, r3]
   3342c:	ldr	r3, [r3, #0]
   3342e:	str	r3, [sp, #188]	; 0xbc
   33430:	mov.w	r3, #0
   33434:	blx	8854 <time@plt>
   33438:	movs	r2, #104	; 0x68
   3343a:	movs	r1, #0
   3343c:	mov	r7, r0
   3343e:	add	r0, sp, #36	; 0x24
   33440:	blx	8bf8 <memset@plt+0x4>
   33444:	ldr.w	r3, [r8, #8]
   33448:	movs	r2, #1
   3344a:	str	r2, [sp, #68]	; 0x44
   3344c:	ldr.w	r2, [r4, #464]	; 0x1d0
   33450:	mov	r0, r8
   33452:	str	r3, [sp, #28]
   33454:	ldr.w	r3, [r8, #12]
   33458:	ldr.w	r1, [r2, #384]	; 0x180
   3345c:	str	r3, [sp, #32]
   3345e:	movs	r3, #0
   33460:	strd	r3, r7, [sp, #172]	; 0xac
   33464:	strd	r1, r3, [sp, #52]	; 0x34
   33468:	movw	r1, #16877	; 0x41ed
   3346c:	strd	r3, r7, [sp, #148]	; 0x94
   33470:	str	r1, [sp, #80]	; 0x50
   33472:	asrs	r1, r7, #31
   33474:	strd	r1, r3, [sp, #156]	; 0x9c
   33478:	strd	r7, r1, [sp, #164]	; 0xa4
   3347c:	strd	r1, r3, [sp, #180]	; 0xb4
   33480:	strd	r7, r1, [sp, #140]	; 0x8c
   33484:	mov	r1, r4
   33486:	ldr	r3, [r2, #28]
   33488:	cmp	r3, r4
   3348a:	it	eq
   3348c:	ldreq.w	r3, [r2, #308]	; 0x134
   33490:	mov	r2, r6
   33492:	itt	eq
   33494:	streq.w	r6, [r3, #128]	; 0x80
   33498:	streq.w	r5, [r3, #132]	; 0x84
   3349c:	add	r3, sp, #28
   3349e:	str	r3, [sp, #0]
   334a0:	mov	r3, r5
   334a2:	bl	30cf4 <btrfs_insert_inode@@Base>
   334a6:	cbnz	r0, 334d0 <btrfs_make_root_dir@@Base+0xbc>
   334a8:	movs	r2, #0
   334aa:	movs	r3, #0
   334ac:	strd	r2, r3, [sp, #16]
   334b0:	mov	r1, r4
   334b2:	ldr	r2, [pc, #64]	; (334f4 <btrfs_make_root_dir@@Base+0xe0>)
   334b4:	movs	r3, #2
   334b6:	mov	r0, r8
   334b8:	strd	r6, r5, [sp, #8]
   334bc:	add	r2, pc
   334be:	strd	r6, r5, [sp]
   334c2:	bl	310fc <btrfs_insert_inode_ref@@Base>
   334c6:	cbnz	r0, 334d0 <btrfs_make_root_dir@@Base+0xbc>
   334c8:	str.w	r6, [r4, #176]	; 0xb0
   334cc:	str.w	r5, [r4, #180]	; 0xb4
   334d0:	ldr	r2, [pc, #36]	; (334f8 <btrfs_make_root_dir@@Base+0xe4>)
   334d2:	ldr	r3, [pc, #28]	; (334f0 <btrfs_make_root_dir@@Base+0xdc>)
   334d4:	add	r2, pc
   334d6:	ldr	r3, [r2, r3]
   334d8:	ldr	r2, [r3, #0]
   334da:	ldr	r3, [sp, #188]	; 0xbc
   334dc:	eors	r2, r3
   334de:	beq.n	334e4 <btrfs_make_root_dir@@Base+0xd0>
   334e0:	blx	88e4 <__stack_chk_fail@plt>
   334e4:	add	sp, #192	; 0xc0
   334e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   334ea:	nop
   334ec:	ldr	r6, [r1, r4]
   334ee:	movs	r3, r0
   334f0:	lsls	r4, r7, #9
   334f2:	movs	r0, r0
   334f4:	mvns	r7, r5
   334f6:	movs	r2, r0
   334f8:	ldr	r4, [r3, r1]
   334fa:	movs	r3, r0

000334fc <check_mounted_where@@Base>:
   334fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33500:	mov	r8, r2
   33502:	ldr	r2, [pc, #300]	; (33630 <check_mounted_where@@Base+0x134>)
   33504:	mov	r6, r3
   33506:	ldr	r3, [pc, #300]	; (33634 <check_mounted_where@@Base+0x138>)
   33508:	sub	sp, #60	; 0x3c
   3350a:	add	r2, pc
   3350c:	mov	r9, r1
   3350e:	ldr.w	sl, [sp, #96]	; 0x60
   33512:	ldr	r3, [r2, r3]
   33514:	movs	r2, #1
   33516:	ldr	r3, [r3, #0]
   33518:	str	r3, [sp, #52]	; 0x34
   3351a:	mov.w	r3, #0
   3351e:	movs	r3, #0
   33520:	strd	r2, r3, [sp, #40]	; 0x28
   33524:	movs	r3, #0
   33526:	str	r3, [sp, #36]	; 0x24
   33528:	mov.w	r2, #65536	; 0x10000
   3352c:	ldr	r3, [sp, #100]	; 0x64
   3352e:	str	r3, [sp, #8]
   33530:	movs	r3, #0
   33532:	strd	r2, r3, [sp]
   33536:	add	r3, sp, #40	; 0x28
   33538:	add	r2, sp, #36	; 0x24
   3353a:	bl	2b574 <btrfs_scan_one_device@@Base>
   3353e:	subs	r3, r0, #0
   33540:	str	r3, [sp, #16]
   33542:	bge.n	335a0 <check_mounted_where@@Base+0xa4>
   33544:	ldr	r1, [pc, #240]	; (33638 <check_mounted_where@@Base+0x13c>)
   33546:	ldr	r0, [pc, #244]	; (3363c <check_mounted_where@@Base+0x140>)
   33548:	add	r1, pc
   3354a:	add	r0, pc
   3354c:	blx	8d94 <setmntent@plt>
   33550:	mov	r7, r0
   33552:	cmp	r0, #0
   33554:	beq.n	335ca <check_mounted_where@@Base+0xce>
   33556:	ldr.w	fp, [pc, #232]	; 33640 <check_mounted_where@@Base+0x144>
   3355a:	add	fp, pc
   3355c:	mov	r0, r7
   3355e:	blx	8a50 <getmntent@plt>
   33562:	mov	r5, r0
   33564:	cmp	r0, #0
   33566:	beq.n	335f0 <check_mounted_where@@Base+0xf4>
   33568:	ldr	r3, [sp, #16]
   3356a:	cmp	r3, #0
   3356c:	blt.n	335d4 <check_mounted_where@@Base+0xd8>
   3356e:	ldr	r0, [r5, #8]
   33570:	mov	r1, fp
   33572:	blx	8748 <strcmp@plt>
   33576:	cmp	r0, #0
   33578:	bne.n	3355c <check_mounted_where@@Base+0x60>
   3357a:	ldr	r2, [sp, #36]	; 0x24
   3357c:	ldr	r1, [r5, #0]
   3357e:	ldr.w	r3, [r2, #72]!
   33582:	cmp	r3, r2
   33584:	beq.n	3355c <check_mounted_where@@Base+0x60>
   33586:	ldr	r0, [r3, #32]
   33588:	strd	r1, r2, [sp, #24]
   3358c:	str	r3, [sp, #20]
   3358e:	bl	33020 <is_same_loop_file@@Base>
   33592:	subs	r4, r0, #0
   33594:	bne.n	33624 <check_mounted_where@@Base+0x128>
   33596:	ldr	r3, [sp, #20]
   33598:	ldrd	r1, r2, [sp, #24]
   3359c:	ldr	r3, [r3, #0]
   3359e:	b.n	33582 <check_mounted_where@@Base+0x86>
   335a0:	ldrd	r2, r3, [sp, #40]	; 0x28
   335a4:	cmp	r3, #0
   335a6:	it	eq
   335a8:	cmpeq	r2, #2
   335aa:	bcc.n	33544 <check_mounted_where@@Base+0x48>
   335ac:	bl	329d0 <btrfs_scan_devices@@Base>
   335b0:	mov	r4, r0
   335b2:	cmp	r0, #0
   335b4:	beq.n	33544 <check_mounted_where@@Base+0x48>
   335b6:	ldr	r2, [pc, #140]	; (33644 <check_mounted_where@@Base+0x148>)
   335b8:	ldr	r3, [pc, #120]	; (33634 <check_mounted_where@@Base+0x138>)
   335ba:	add	r2, pc
   335bc:	ldr	r3, [r2, r3]
   335be:	ldr	r2, [r3, #0]
   335c0:	ldr	r3, [sp, #52]	; 0x34
   335c2:	eors	r2, r3
   335c4:	beq.n	33628 <check_mounted_where@@Base+0x12c>
   335c6:	blx	88e4 <__stack_chk_fail@plt>
   335ca:	blx	8bac <__errno_location@plt>
   335ce:	ldr	r4, [r0, #0]
   335d0:	negs	r4, r4
   335d2:	b.n	335b6 <check_mounted_where@@Base+0xba>
   335d4:	ldr	r0, [r5, #0]
   335d6:	bl	32f2c <path_is_reg_or_block_device@@Base>
   335da:	subs	r4, r0, #0
   335dc:	blt.n	33602 <check_mounted_where@@Base+0x106>
   335de:	beq.n	3355c <check_mounted_where@@Base+0x60>
   335e0:	ldr	r1, [r5, #0]
   335e2:	mov	r0, r9
   335e4:	bl	33020 <is_same_loop_file@@Base>
   335e8:	subs	r4, r0, #0
   335ea:	blt.n	33602 <check_mounted_where@@Base+0x106>
   335ec:	beq.n	3355c <check_mounted_where@@Base+0x60>
   335ee:	cbnz	r6, 3360a <check_mounted_where@@Base+0x10e>
   335f0:	cmp.w	sl, #0
   335f4:	beq.n	335fc <check_mounted_where@@Base+0x100>
   335f6:	ldr	r3, [sp, #36]	; 0x24
   335f8:	str.w	r3, [sl]
   335fc:	subs	r4, r5, #0
   335fe:	it	ne
   33600:	movne	r4, #1
   33602:	mov	r0, r7
   33604:	blx	8cd0 <endmntent@plt>
   33608:	b.n	335b6 <check_mounted_where@@Base+0xba>
   3360a:	cmp.w	r8, #0
   3360e:	beq.n	335f0 <check_mounted_where@@Base+0xf4>
   33610:	mov	r2, r6
   33612:	add	r6, r8
   33614:	ldr	r1, [r5, #4]
   33616:	mov	r0, r8
   33618:	blx	8c14 <strncpy@plt>
   3361c:	movs	r3, #0
   3361e:	strb.w	r3, [r6, #-1]
   33622:	b.n	335f0 <check_mounted_where@@Base+0xf4>
   33624:	blt.n	33602 <check_mounted_where@@Base+0x106>
   33626:	b.n	335ee <check_mounted_where@@Base+0xf2>
   33628:	mov	r0, r4
   3362a:	add	sp, #60	; 0x3c
   3362c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33630:	ldr	r6, [r4, r0]
   33632:	movs	r3, r0
   33634:	lsls	r4, r7, #9
   33636:	movs	r0, r0
   33638:			; <UNDEFINED> instruction: 0xf7f20000
   3363c:	muls	r2, r1
   3363e:	movs	r2, r0
   33640:	cmp	r4, r7
   33642:	movs	r2, r0
   33644:	ldrsb	r6, [r6, r5]
   33646:	movs	r3, r0

00033648 <get_btrfs_mount@@Base>:
   33648:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   3364c:	mov	r5, r0
   3364e:	mov	r7, r1
   33650:	mov	r8, r2
   33652:	bl	32dd4 <path_is_block_device@@Base>
   33656:	subs	r4, r0, #0
   33658:	bgt.n	33686 <get_btrfs_mount@@Base+0x3e>
   3365a:	bne.n	33672 <get_btrfs_mount@@Base+0x2a>
   3365c:	ldr	r0, [pc, #108]	; (336cc <get_btrfs_mount@@Base+0x84>)
   3365e:	mov	r1, r5
   33660:	mvn.w	r4, #21
   33664:	add	r0, pc
   33666:	bl	1a900 <__btrfs_error@@Base>
   3366a:	mov	r0, r4
   3366c:	add	sp, #8
   3366e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   33672:	blx	8bac <__errno_location@plt>
   33676:	negs	r3, r4
   33678:	mov	r1, r5
   3367a:	str	r3, [r0, #0]
   3367c:	ldr	r0, [pc, #80]	; (336d0 <get_btrfs_mount@@Base+0x88>)
   3367e:	add	r0, pc
   33680:	bl	1a900 <__btrfs_error@@Base>
   33684:	b.n	3366a <get_btrfs_mount@@Base+0x22>
   33686:	movs	r1, #0
   33688:	mov	r0, r5
   3368a:	blx	8a68 <open64@plt>
   3368e:	subs	r6, r0, #0
   33690:	bge.n	336b0 <get_btrfs_mount@@Base+0x68>
   33692:	blx	8bac <__errno_location@plt>
   33696:	mov	r1, r5
   33698:	ldr	r4, [r0, #0]
   3369a:	ldr	r0, [pc, #56]	; (336d4 <get_btrfs_mount@@Base+0x8c>)
   3369c:	negs	r4, r4
   3369e:	add	r0, pc
   336a0:	bl	1a900 <__btrfs_error@@Base>
   336a4:	adds	r3, r6, #1
   336a6:	beq.n	3366a <get_btrfs_mount@@Base+0x22>
   336a8:	mov	r0, r6
   336aa:	blx	8e20 <close@plt>
   336ae:	b.n	3366a <get_btrfs_mount@@Base+0x22>
   336b0:	movs	r3, #0
   336b2:	mov	r2, r7
   336b4:	strd	r3, r3, [sp]
   336b8:	mov	r1, r5
   336ba:	mov	r3, r8
   336bc:	bl	334fc <check_mounted_where@@Base>
   336c0:	cmp	r0, #0
   336c2:	ite	eq
   336c4:	mvneq.w	r4, #21
   336c8:	movne	r4, #0
   336ca:	b.n	336a8 <get_btrfs_mount@@Base+0x60>
   336cc:	cmp	r3, r4
   336ce:	movs	r2, r0
   336d0:	cmp	r0, r4
   336d2:	movs	r2, r0
   336d4:	cmp	r1, r4
   336d6:	movs	r2, r0

000336d8 <check_mounted@@Base>:
   336d8:	push	{r0, r1, r2, r4, r5, lr}
   336da:	movs	r1, #0
   336dc:	mov	r4, r0
   336de:	blx	8a68 <open64@plt>
   336e2:	subs	r5, r0, #0
   336e4:	bge.n	336fe <check_mounted@@Base+0x26>
   336e6:	ldr	r0, [pc, #48]	; (33718 <check_mounted@@Base+0x40>)
   336e8:	mov	r1, r4
   336ea:	add	r0, pc
   336ec:	bl	1a900 <__btrfs_error@@Base>
   336f0:	blx	8bac <__errno_location@plt>
   336f4:	ldr	r4, [r0, #0]
   336f6:	negs	r4, r4
   336f8:	mov	r0, r4
   336fa:	add	sp, #12
   336fc:	pop	{r4, r5, pc}
   336fe:	movs	r3, #0
   33700:	mov	r1, r4
   33702:	mov	r2, r3
   33704:	strd	r3, r3, [sp]
   33708:	bl	334fc <check_mounted_where@@Base>
   3370c:	mov	r4, r0
   3370e:	mov	r0, r5
   33710:	blx	8e20 <close@plt>
   33714:	b.n	336f8 <check_mounted@@Base+0x20>
   33716:	nop
   33718:	negs	r0, r1
   3371a:	movs	r2, r0

0003371c <pretty_size_snprintf@@Base>:
   3371c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33720:	mov	r7, r1
   33722:	vpush	{d8}
   33726:	mov	r6, r0
   33728:	mov	r5, r3
   3372a:	vmov	s17, r2
   3372e:	ldr	r2, [pc, #540]	; (3394c <pretty_size_snprintf@@Base+0x230>)
   33730:	sub	sp, #44	; 0x2c
   33732:	add	r2, pc
   33734:	ldr	r1, [sp, #88]	; 0x58
   33736:	cbz	r3, 3376a <pretty_size_snprintf@@Base+0x4e>
   33738:	and.w	r3, r1, #1024	; 0x400
   3373c:	str	r3, [sp, #32]
   3373e:	bic.w	r3, r1, #1272	; 0x4f8
   33742:	bic.w	r3, r3, #7
   33746:	cmp.w	r3, #256	; 0x100
   3374a:	bne.n	3377c <pretty_size_snprintf@@Base+0x60>
   3374c:	ldr	r3, [sp, #32]
   3374e:	strd	r0, r7, [sp, #8]
   33752:	cbz	r3, 33776 <pretty_size_snprintf@@Base+0x5a>
   33754:	ldr	r3, [pc, #504]	; (33950 <pretty_size_snprintf@@Base+0x234>)
   33756:	add	r3, pc
   33758:	str	r3, [sp, #0]
   3375a:	movs	r2, #1
   3375c:	vmov	r0, s17
   33760:	mov.w	r3, #4294967295	; 0xffffffff
   33764:	mov	r1, r5
   33766:	blx	8e44 <__snprintf_chk@plt>
   3376a:	movs	r0, #0
   3376c:	add	sp, #44	; 0x2c
   3376e:	vpop	{d8}
   33772:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33776:	ldr	r3, [pc, #476]	; (33954 <pretty_size_snprintf@@Base+0x238>)
   33778:	add	r3, pc
   3377a:	b.n	33758 <pretty_size_snprintf@@Base+0x3c>
   3377c:	cmp.w	r3, #512	; 0x200
   33780:	beq.w	33910 <pretty_size_snprintf@@Base+0x1f4>
   33784:	cmp.w	r3, #768	; 0x300
   33788:	bne.w	338ea <pretty_size_snprintf@@Base+0x1ce>
   3378c:	ldr	r3, [pc, #456]	; (33958 <pretty_size_snprintf@@Base+0x23c>)
   3378e:	mov.w	r2, #1000	; 0x3e8
   33792:	mov.w	sl, #1000	; 0x3e8
   33796:	add	r3, pc
   33798:	adds	r3, #28
   3379a:	str	r3, [sp, #36]	; 0x24
   3379c:	b.n	3391e <pretty_size_snprintf@@Base+0x202>
   3379e:	asrs	r1, r2, #31
   337a0:	movs	r4, #1
   337a2:	mul.w	r3, sl, r1
   337a6:	mla	r3, r2, fp, r3
   337aa:	umull	sl, fp, sl, r2
   337ae:	add	fp, r3
   337b0:	asrs	r1, r2, #31
   337b2:	adds	r4, #1
   337b4:	mul.w	r3, sl, r1
   337b8:	mla	r3, r2, fp, r3
   337bc:	umull	sl, fp, sl, r2
   337c0:	add	fp, r3
   337c2:	asrs	r1, r2, #31
   337c4:	adds	r4, #1
   337c6:	mul.w	r3, sl, r1
   337ca:	mla	r3, r2, fp, r3
   337ce:	umull	sl, fp, sl, r2
   337d2:	add	fp, r3
   337d4:	adds	r4, #1
   337d6:	cmp	r4, #6
   337d8:	ble.n	3384e <pretty_size_snprintf@@Base+0x132>
   337da:	vmov	r2, s17
   337de:	movs	r3, #0
   337e0:	ldr	r1, [pc, #376]	; (3395c <pretty_size_snprintf@@Base+0x240>)
   337e2:	movs	r0, #1
   337e4:	add	r1, pc
   337e6:	strb	r3, [r2, #0]
   337e8:	mov	r2, r4
   337ea:	blx	8c6c <__printf_chk@plt+0x4>
   337ee:	ldr	r3, [pc, #368]	; (33960 <pretty_size_snprintf@@Base+0x244>)
   337f0:	ldr	r1, [pc, #368]	; (33964 <pretty_size_snprintf@@Base+0x248>)
   337f2:	movw	r2, #451	; 0x1c3
   337f6:	ldr	r0, [pc, #368]	; (33968 <pretty_size_snprintf@@Base+0x24c>)
   337f8:	add	r3, pc
   337fa:	add	r1, pc
   337fc:	add	r0, pc
   337fe:	blx	8e5c <__assert_fail@plt>
   33802:	movs	r4, #0
   33804:	b.n	337b0 <pretty_size_snprintf@@Base+0x94>
   33806:	movs	r4, #0
   33808:	b.n	337c2 <pretty_size_snprintf@@Base+0xa6>
   3380a:	movs	r4, #0
   3380c:	b.n	337d4 <pretty_size_snprintf@@Base+0xb8>
   3380e:	mov	r3, r2
   33810:	asrs	r4, r2, #31
   33812:	strd	r3, r4, [sp, #24]
   33816:	mov	r8, r6
   33818:	ldr	r3, [sp, #32]
   3381a:	mov	r9, r7
   3381c:	cmp	r3, #0
   3381e:	beq.n	338d4 <pretty_size_snprintf@@Base+0x1b8>
   33820:	movs	r4, #0
   33822:	cmp.w	r8, #0
   33826:	mov	r2, r8
   33828:	sbcs.w	r1, r9, #0
   3382c:	mov	r3, r9
   3382e:	bge.n	33838 <pretty_size_snprintf@@Base+0x11c>
   33830:	rsbs	r2, r8, #0
   33834:	sbc.w	r3, r9, r9, lsl #1
   33838:	ldrd	r0, r1, [sp, #24]
   3383c:	cmp	r2, r0
   3383e:	sbcs	r3, r1
   33840:	bge.n	33898 <pretty_size_snprintf@@Base+0x17c>
   33842:	cmp	r4, #0
   33844:	bne.n	337d6 <pretty_size_snprintf@@Base+0xba>
   33846:	mov.w	sl, #1
   3384a:	mov.w	fp, #0
   3384e:	mov	r1, fp
   33850:	mov	r0, sl
   33852:	bl	3c860 <btrfs_util_strerror@@Base+0x6d0>
   33856:	ldr	r3, [sp, #32]
   33858:	mov	r1, r7
   3385a:	vmov	s16, r0
   3385e:	mov	r0, r6
   33860:	cmp	r3, #0
   33862:	beq.n	338e4 <pretty_size_snprintf@@Base+0x1c8>
   33864:	bl	3c870 <btrfs_util_strerror@@Base+0x6e0>
   33868:	vmov	s15, r0
   3386c:	ldr	r3, [sp, #36]	; 0x24
   3386e:	vmov	r0, s17
   33872:	movs	r2, #1
   33874:	vdiv.f32	s14, s15, s16
   33878:	mov	r1, r5
   3387a:	ldr.w	r3, [r3, r4, lsl #2]
   3387e:	str	r3, [sp, #16]
   33880:	ldr	r3, [pc, #232]	; (3396c <pretty_size_snprintf@@Base+0x250>)
   33882:	add	r3, pc
   33884:	str	r3, [sp, #0]
   33886:	mov.w	r3, #4294967295	; 0xffffffff
   3388a:	vcvt.f64.f32	d7, s14
   3388e:	vstr	d7, [sp, #8]
   33892:	blx	8e44 <__snprintf_chk@plt>
   33896:	b.n	3376c <pretty_size_snprintf@@Base+0x50>
   33898:	mov	r0, r8
   3389a:	mov	r1, r9
   3389c:	ldrd	r2, r3, [sp, #24]
   338a0:	mov	r6, r8
   338a2:	bl	3c8ec <btrfs_util_strerror@@Base+0x75c>
   338a6:	mov	r7, r9
   338a8:	adds	r4, #1
   338aa:	mov	r8, r0
   338ac:	mov	r9, r1
   338ae:	b.n	33822 <pretty_size_snprintf@@Base+0x106>
   338b0:	mov	r0, r8
   338b2:	mov	r1, r9
   338b4:	ldrd	r2, r3, [sp, #24]
   338b8:	adds	r4, #1
   338ba:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   338be:	mov	r6, r8
   338c0:	mov	r7, r9
   338c2:	mov	r8, r0
   338c4:	mov	r9, r1
   338c6:	ldrd	r2, r3, [sp, #24]
   338ca:	cmp	r9, r3
   338cc:	it	eq
   338ce:	cmpeq	r8, r2
   338d0:	bcs.n	338b0 <pretty_size_snprintf@@Base+0x194>
   338d2:	b.n	33842 <pretty_size_snprintf@@Base+0x126>
   338d4:	ldr	r4, [sp, #32]
   338d6:	b.n	338c6 <pretty_size_snprintf@@Base+0x1aa>
   338d8:	mov.w	sl, #1
   338dc:	mov.w	fp, #0
   338e0:	movs	r4, #0
   338e2:	b.n	3384e <pretty_size_snprintf@@Base+0x132>
   338e4:	bl	3c860 <btrfs_util_strerror@@Base+0x6d0>
   338e8:	b.n	33868 <pretty_size_snprintf@@Base+0x14c>
   338ea:	ldr	r3, [pc, #132]	; (33970 <pretty_size_snprintf@@Base+0x254>)
   338ec:	ldr	r0, [r2, r3]
   338ee:	bic.w	r3, r1, #1024	; 0x400
   338f2:	ldr	r2, [pc, #128]	; (33974 <pretty_size_snprintf@@Base+0x258>)
   338f4:	movs	r1, #1
   338f6:	add	r2, pc
   338f8:	ldr	r0, [r0, #0]
   338fa:	blx	8ca0 <__fprintf_chk@plt+0x4>
   338fe:	ldr	r3, [pc, #120]	; (33978 <pretty_size_snprintf@@Base+0x25c>)
   33900:	ldr	r1, [pc, #120]	; (3397c <pretty_size_snprintf@@Base+0x260>)
   33902:	mov.w	r2, #394	; 0x18a
   33906:	ldr	r0, [pc, #120]	; (33980 <pretty_size_snprintf@@Base+0x264>)
   33908:	add	r3, pc
   3390a:	add	r1, pc
   3390c:	add	r0, pc
   3390e:	b.n	337fe <pretty_size_snprintf@@Base+0xe2>
   33910:	ldr	r3, [pc, #112]	; (33984 <pretty_size_snprintf@@Base+0x268>)
   33912:	mov.w	r2, #1024	; 0x400
   33916:	mov.w	sl, #1024	; 0x400
   3391a:	add	r3, pc
   3391c:	str	r3, [sp, #36]	; 0x24
   3391e:	uxtb	r1, r1
   33920:	mov.w	fp, #0
   33924:	subs	r1, #1
   33926:	cmp	r1, #4
   33928:	bhi.w	3380e <pretty_size_snprintf@@Base+0xf2>
   3392c:	add	r3, pc, #8	; (adr r3, 33938 <pretty_size_snprintf@@Base+0x21c>)
   3392e:	ldr.w	r1, [r3, r1, lsl #2]
   33932:	add	r3, r1
   33934:	bx	r3
   33936:	nop
   33938:			; <UNDEFINED> instruction: 0xffa1ffff
   3393c:	mrc2	15, 6, pc, cr3, cr15, {7}
   33940:	mcr2	15, 6, pc, cr15, cr15, {7}	; <UNPREDICTABLE>
   33944:	mcr2	15, 6, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
   33948:	mcr2	15, 3, pc, cr7, cr15, {7}	; <UNPREDICTABLE>
   3394c:	strb	r6, [r7, r7]
   3394e:	movs	r3, r0
   33950:	rors	r4, r7
   33952:	movs	r2, r0
   33954:	lsrs	r0, r1, #10
   33956:	movs	r1, r0
   33958:	ldr	r2, [r5, #32]
   3395a:	movs	r3, r0
   3395c:	adcs	r3, r6
   3395e:	movs	r2, r0
   33960:			; <UNDEFINED> instruction: 0x4785
   33962:	movs	r2, r0
   33964:	lsrs	r6, r7
   33966:	movs	r2, r0
   33968:	bmi.n	338c0 <pretty_size_snprintf@@Base+0x1a4>
   3396a:	movs	r0, r0
   3396c:	asrs	r0, r1
   3396e:	movs	r2, r0
   33970:	lsls	r4, r1, #10
   33972:	movs	r0, r0
   33974:	lsls	r3, r3
   33976:	movs	r2, r0
   33978:	mov	r5, lr
   3397a:	movs	r2, r0
   3397c:	subs	r7, #238	; 0xee
   3397e:	movs	r2, r0
   33980:	bcc.n	338b8 <pretty_size_snprintf@@Base+0x19c>
   33982:	movs	r0, r0
   33984:	ldr	r6, [r4, #8]
   33986:	movs	r3, r0

00033988 <pretty_size_mode@@Base>:
   33988:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   3398c:	mov	r7, r0
   3398e:	ldr	r0, [pc, #68]	; (339d4 <pretty_size_mode@@Base+0x4c>)
   33990:	mov	r8, r2
   33992:	mov	r6, r1
   33994:	ldr.w	r9, [pc, #64]	; 339d8 <pretty_size_mode@@Base+0x50>
   33998:	add	r0, pc
   3399a:	blx	8da0 <__tls_get_addr@plt>
   3399e:	movs	r1, #10
   339a0:	add.w	r4, r0, r9
   339a4:	mov	r5, r0
   339a6:	ldr.w	r0, [r0, r9]
   339aa:	adds	r4, #4
   339ac:	add.w	r4, r4, r0, lsl #5
   339b0:	adds	r0, #1
   339b2:	bl	3c6b4 <btrfs_util_strerror@@Base+0x524>
   339b6:	movs	r3, #32
   339b8:	mov	r2, r4
   339ba:	mov	r0, r7
   339bc:	str.w	r1, [r9, r5]
   339c0:	mov	r1, r6
   339c2:	str.w	r8, [sp]
   339c6:	bl	3371c <pretty_size_snprintf@@Base>
   339ca:	mov	r0, r4
   339cc:	add	sp, #12
   339ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   339d2:	nop
   339d4:	strb	r4, [r7, r7]
   339d6:	movs	r3, r0
   339d8:	movs	r0, r0
	...

000339dc <get_label_unmounted@@Base>:
   339dc:	push	{r0, r1, r4, r5, r6, lr}
   339de:	mov	r5, r0
   339e0:	mov	r6, r1
   339e2:	bl	336d8 <check_mounted@@Base>
   339e6:	subs	r2, r0, #0
   339e8:	bge.n	339fa <get_label_unmounted@@Base+0x1e>
   339ea:	ldr	r0, [pc, #68]	; (33a30 <get_label_unmounted@@Base+0x54>)
   339ec:	mov	r1, r5
   339ee:	add	r0, pc
   339f0:	bl	1a900 <__btrfs_error@@Base>
   339f4:	mov.w	r0, #4294967295	; 0xffffffff
   339f8:	b.n	33a2c <get_label_unmounted@@Base+0x50>
   339fa:	mov	r0, r5
   339fc:	movs	r4, #0
   339fe:	movs	r2, #0
   33a00:	movs	r3, #0
   33a02:	str	r4, [sp, #0]
   33a04:	bl	21774 <open_ctree@@Base>
   33a08:	mov	r5, r0
   33a0a:	cmp	r0, #0
   33a0c:	beq.n	339f4 <get_label_unmounted@@Base+0x18>
   33a0e:	ldr.w	r3, [r0, #464]	; 0x1d0
   33a12:	movs	r2, #255	; 0xff
   33a14:	mov	r0, r6
   33a16:	ldr.w	r1, [r3, #308]	; 0x134
   33a1a:	addw	r1, r1, #299	; 0x12b
   33a1e:	bl	33008 <__strncpy_null@@Base>
   33a22:	ldr.w	r0, [r5, #464]	; 0x1d0
   33a26:	bl	20814 <close_ctree_fs_info@@Base>
   33a2a:	mov	r0, r4
   33a2c:	add	sp, #8
   33a2e:	pop	{r4, r5, r6, pc}
   33a30:	subs	r7, #207	; 0xcf
   33a32:	movs	r2, r0

00033a34 <get_label_mounted@@Base>:
   33a34:	ldr	r2, [pc, #160]	; (33ad8 <get_label_mounted@@Base+0xa4>)
   33a36:	ldr	r3, [pc, #164]	; (33adc <get_label_mounted@@Base+0xa8>)
   33a38:	add	r2, pc
   33a3a:	push	{r4, r5, r6, r7, lr}
   33a3c:	mov	r5, r1
   33a3e:	ldr	r3, [r2, r3]
   33a40:	sub	sp, #268	; 0x10c
   33a42:	mov.w	r1, #262144	; 0x40000
   33a46:	mov	r7, r0
   33a48:	ldr	r3, [r3, #0]
   33a4a:	str	r3, [sp, #260]	; 0x104
   33a4c:	mov.w	r3, #0
   33a50:	blx	8a68 <open64@plt>
   33a54:	subs	r4, r0, #0
   33a56:	bge.n	33a7a <get_label_mounted@@Base+0x46>
   33a58:	ldr	r0, [pc, #132]	; (33ae0 <get_label_mounted@@Base+0xac>)
   33a5a:	mov	r1, r7
   33a5c:	mov.w	r5, #4294967295	; 0xffffffff
   33a60:	add	r0, pc
   33a62:	bl	1a900 <__btrfs_error@@Base>
   33a66:	ldr	r2, [pc, #124]	; (33ae4 <get_label_mounted@@Base+0xb0>)
   33a68:	ldr	r3, [pc, #112]	; (33adc <get_label_mounted@@Base+0xa8>)
   33a6a:	add	r2, pc
   33a6c:	ldr	r3, [r2, r3]
   33a6e:	ldr	r2, [r3, #0]
   33a70:	ldr	r3, [sp, #260]	; 0x104
   33a72:	eors	r2, r3
   33a74:	beq.n	33acc <get_label_mounted@@Base+0x98>
   33a76:	blx	88e4 <__stack_chk_fail@plt>
   33a7a:	add	r6, sp, #4
   33a7c:	mov.w	r2, #256	; 0x100
   33a80:	movs	r1, #0
   33a82:	mov	r0, r6
   33a84:	blx	8bf8 <memset@plt+0x4>
   33a88:	ldr	r1, [pc, #72]	; (33ad4 <get_label_mounted@@Base+0xa0>)
   33a8a:	mov	r2, r6
   33a8c:	mov	r0, r4
   33a8e:	blx	89cc <ioctl@plt>
   33a92:	cmp	r0, #0
   33a94:	bge.n	33ab8 <get_label_mounted@@Base+0x84>
   33a96:	blx	8bac <__errno_location@plt>
   33a9a:	ldr	r3, [r0, #0]
   33a9c:	mov	r5, r0
   33a9e:	cmp	r3, #25
   33aa0:	beq.n	33aac <get_label_mounted@@Base+0x78>
   33aa2:	ldr	r0, [pc, #68]	; (33ae8 <get_label_mounted@@Base+0xb4>)
   33aa4:	mov	r1, r7
   33aa6:	add	r0, pc
   33aa8:	bl	1a900 <__btrfs_error@@Base>
   33aac:	ldr	r5, [r5, #0]
   33aae:	mov	r0, r4
   33ab0:	negs	r5, r5
   33ab2:	blx	8e20 <close@plt>
   33ab6:	b.n	33a66 <get_label_mounted@@Base+0x32>
   33ab8:	movs	r2, #255	; 0xff
   33aba:	mov	r1, r6
   33abc:	mov	r0, r5
   33abe:	movs	r5, #0
   33ac0:	bl	33008 <__strncpy_null@@Base>
   33ac4:	mov	r0, r4
   33ac6:	blx	8e20 <close@plt>
   33aca:	b.n	33a66 <get_label_mounted@@Base+0x32>
   33acc:	mov	r0, r5
   33ace:	add	sp, #268	; 0x10c
   33ad0:	pop	{r4, r5, r6, r7, pc}
   33ad2:	nop
   33ad4:	str	r4, [sp, #196]	; 0xc4
   33ad6:	strh	r0, [r0, #8]
   33ad8:	strh	r0, [r7, r3]
   33ada:	movs	r3, r0
   33adc:	lsls	r4, r7, #9
   33ade:	movs	r0, r0
   33ae0:	subs	r7, #132	; 0x84
   33ae2:	movs	r2, r0
   33ae4:	strh	r6, [r0, r3]
   33ae6:	movs	r3, r0
   33ae8:	subs	r7, #86	; 0x56
   33aea:	movs	r2, r0

00033aec <get_label@@Base>:
   33aec:	push	{r0, r1, r4, lr}
   33aee:	mov	r4, r0
   33af0:	str	r1, [sp, #4]
   33af2:	bl	32f2c <path_is_reg_or_block_device@@Base>
   33af6:	ldr	r1, [sp, #4]
   33af8:	cmp	r0, #0
   33afa:	bne.n	33b08 <get_label@@Base+0x1c>
   33afc:	mov	r0, r4
   33afe:	add	sp, #8
   33b00:	ldmia.w	sp!, {r4, lr}
   33b04:	b.w	33a34 <get_label_mounted@@Base>
   33b08:	ble.n	33b16 <get_label@@Base+0x2a>
   33b0a:	mov	r0, r4
   33b0c:	add	sp, #8
   33b0e:	ldmia.w	sp!, {r4, lr}
   33b12:	b.w	339dc <get_label_unmounted@@Base>
   33b16:	add	sp, #8
   33b18:	pop	{r4, pc}

00033b1a <set_label@@Base>:
   33b1a:	ldr	r2, [pc, #312]	; (33c54 <set_label@@Base+0x13a>)
   33b1c:	ldr	r3, [pc, #312]	; (33c58 <set_label@@Base+0x13e>)
   33b1e:	add	r2, pc
   33b20:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   33b24:	mov	r5, r0
   33b26:	ldr	r3, [r2, r3]
   33b28:	sub	sp, #272	; 0x110
   33b2a:	mov	r0, r1
   33b2c:	mov	r6, r1
   33b2e:	ldr	r3, [r3, #0]
   33b30:	str	r3, [sp, #268]	; 0x10c
   33b32:	mov.w	r3, #0
   33b36:	blx	8b70 <strlen@plt>
   33b3a:	cmp	r0, #255	; 0xff
   33b3c:	bhi.n	33b62 <set_label@@Base+0x48>
   33b3e:	mov	r0, r5
   33b40:	bl	32f2c <path_is_reg_or_block_device@@Base>
   33b44:	subs	r4, r0, #0
   33b46:	bne.n	33bc8 <set_label@@Base+0xae>
   33b48:	mov.w	r1, #262144	; 0x40000
   33b4c:	mov	r0, r5
   33b4e:	blx	8a68 <open64@plt>
   33b52:	subs	r7, r0, #0
   33b54:	bge.n	33b70 <set_label@@Base+0x56>
   33b56:	ldr	r0, [pc, #260]	; (33c5c <set_label@@Base+0x142>)
   33b58:	mov	r1, r5
   33b5a:	add	r0, pc
   33b5c:	bl	1a900 <__btrfs_error@@Base>
   33b60:	b.n	33ba8 <set_label@@Base+0x8e>
   33b62:	ldr	r0, [pc, #252]	; (33c60 <set_label@@Base+0x146>)
   33b64:	movs	r2, #255	; 0xff
   33b66:	mov	r1, r6
   33b68:	add	r0, pc
   33b6a:	bl	1a900 <__btrfs_error@@Base>
   33b6e:	b.n	33ba8 <set_label@@Base+0x8e>
   33b70:	add.w	r8, sp, #12
   33b74:	mov.w	r2, #256	; 0x100
   33b78:	mov	r1, r4
   33b7a:	mov	r0, r8
   33b7c:	blx	8bf8 <memset@plt+0x4>
   33b80:	movs	r2, #255	; 0xff
   33b82:	mov	r1, r6
   33b84:	mov	r0, r8
   33b86:	bl	33008 <__strncpy_null@@Base>
   33b8a:	ldr	r1, [pc, #196]	; (33c50 <set_label@@Base+0x136>)
   33b8c:	mov	r2, r8
   33b8e:	mov	r0, r7
   33b90:	blx	89cc <ioctl@plt>
   33b94:	cmp	r0, #0
   33b96:	bge.n	33bae <set_label@@Base+0x94>
   33b98:	ldr	r0, [pc, #200]	; (33c64 <set_label@@Base+0x14a>)
   33b9a:	mov	r1, r5
   33b9c:	add	r0, pc
   33b9e:	bl	1a900 <__btrfs_error@@Base>
   33ba2:	mov	r0, r7
   33ba4:	blx	8e20 <close@plt>
   33ba8:	mov.w	r4, #4294967295	; 0xffffffff
   33bac:	b.n	33bb4 <set_label@@Base+0x9a>
   33bae:	mov	r0, r7
   33bb0:	blx	8e20 <close@plt>
   33bb4:	ldr	r2, [pc, #176]	; (33c68 <set_label@@Base+0x14e>)
   33bb6:	ldr	r3, [pc, #160]	; (33c58 <set_label@@Base+0x13e>)
   33bb8:	add	r2, pc
   33bba:	ldr	r3, [r2, r3]
   33bbc:	ldr	r2, [r3, #0]
   33bbe:	ldr	r3, [sp, #268]	; 0x10c
   33bc0:	eors	r2, r3
   33bc2:	beq.n	33c48 <set_label@@Base+0x12e>
   33bc4:	blx	88e4 <__stack_chk_fail@plt>
   33bc8:	ble.n	33bb4 <set_label@@Base+0x9a>
   33bca:	mov	r0, r5
   33bcc:	bl	336d8 <check_mounted@@Base>
   33bd0:	subs	r4, r0, #0
   33bd2:	bge.n	33bde <set_label@@Base+0xc4>
   33bd4:	ldr	r0, [pc, #148]	; (33c6c <set_label@@Base+0x152>)
   33bd6:	mov	r2, r4
   33bd8:	mov	r1, r5
   33bda:	add	r0, pc
   33bdc:	b.n	33b6a <set_label@@Base+0x50>
   33bde:	beq.n	33be8 <set_label@@Base+0xce>
   33be0:	ldr	r0, [pc, #140]	; (33c70 <set_label@@Base+0x156>)
   33be2:	mov	r1, r5
   33be4:	add	r0, pc
   33be6:	b.n	33b5c <set_label@@Base+0x42>
   33be8:	mov	r0, r5
   33bea:	mov.w	r8, #1
   33bee:	movs	r2, #0
   33bf0:	movs	r3, #0
   33bf2:	str.w	r8, [sp]
   33bf6:	bl	21774 <open_ctree@@Base>
   33bfa:	mov	r5, r0
   33bfc:	cmp	r0, #0
   33bfe:	beq.n	33ba8 <set_label@@Base+0x8e>
   33c00:	mov	r1, r8
   33c02:	bl	2e404 <btrfs_start_transaction@@Base>
   33c06:	cmn.w	r0, #4096	; 0x1000
   33c0a:	mov	r7, r0
   33c0c:	bls.n	33c22 <set_label@@Base+0x108>
   33c0e:	ldr	r1, [pc, #100]	; (33c74 <set_label@@Base+0x15a>)
   33c10:	mov	r3, r8
   33c12:	ldr	r0, [pc, #100]	; (33c78 <set_label@@Base+0x15e>)
   33c14:	movw	r2, #507	; 0x1fb
   33c18:	add	r1, pc
   33c1a:	adds	r1, #21
   33c1c:	add	r0, pc
   33c1e:	bl	333ac <test_issubvolname@@Base+0x17e>
   33c22:	ldr.w	r3, [r5, #464]	; 0x1d0
   33c26:	movs	r2, #255	; 0xff
   33c28:	mov	r1, r6
   33c2a:	ldr.w	r0, [r3, #308]	; 0x134
   33c2e:	addw	r0, r0, #299	; 0x12b
   33c32:	bl	33008 <__strncpy_null@@Base>
   33c36:	mov	r1, r5
   33c38:	mov	r0, r7
   33c3a:	bl	2e684 <btrfs_commit_transaction@@Base>
   33c3e:	ldr.w	r0, [r5, #464]	; 0x1d0
   33c42:	bl	20814 <close_ctree_fs_info@@Base>
   33c46:	b.n	33bb4 <set_label@@Base+0x9a>
   33c48:	mov	r0, r4
   33c4a:	add	sp, #272	; 0x110
   33c4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   33c50:	str	r4, [sp, #200]	; 0xc8
   33c52:	asrs	r0, r0
   33c54:	strh	r2, [r2, r0]
   33c56:	movs	r3, r0
   33c58:	lsls	r4, r7, #9
   33c5a:	movs	r0, r0
   33c5c:	subs	r6, #138	; 0x8a
   33c5e:	movs	r2, r0
   33c60:	subs	r6, #178	; 0xb2
   33c62:	movs	r2, r0
   33c64:	subs	r6, #156	; 0x9c
   33c66:	movs	r2, r0
   33c68:	str	r0, [r7, r5]
   33c6a:	movs	r3, r0
   33c6c:	subs	r5, #227	; 0xe3
   33c6e:	movs	r2, r0
   33c70:	subs	r6, #114	; 0x72
   33c72:	movs	r2, r0
   33c74:	muls	r5, r4
   33c76:	movs	r2, r0
   33c78:	blt.n	33cd8 <parse_size@@Base+0x5c>
	...

00033c7c <parse_size@@Base>:
   33c7c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33c80:	mov	sl, r0
   33c82:	ldr	r2, [pc, #404]	; (33e18 <parse_size@@Base+0x19c>)
   33c84:	ldr	r3, [pc, #404]	; (33e1c <parse_size@@Base+0x1a0>)
   33c86:	add	r2, pc
   33c88:	ldr	r3, [r2, r3]
   33c8a:	ldr	r3, [r3, #0]
   33c8c:	str	r3, [sp, #4]
   33c8e:	mov.w	r3, #0
   33c92:	cbnz	r0, 33ca2 <parse_size@@Base+0x26>
   33c94:	ldr	r0, [pc, #392]	; (33e20 <parse_size@@Base+0x1a4>)
   33c96:	add	r0, pc
   33c98:	bl	1a900 <__btrfs_error@@Base>
   33c9c:	movs	r0, #1
   33c9e:	blx	8b58 <exit@plt>
   33ca2:	ldrb	r3, [r0, #0]
   33ca4:	cmp	r3, #45	; 0x2d
   33ca6:	bne.n	33cb4 <parse_size@@Base+0x38>
   33ca8:	mov	r1, r0
   33caa:	ldr	r0, [pc, #376]	; (33e24 <parse_size@@Base+0x1a8>)
   33cac:	add	r0, pc
   33cae:	bl	1a900 <__btrfs_error@@Base>
   33cb2:	b.n	33c9c <parse_size@@Base+0x20>
   33cb4:	movs	r2, #10
   33cb6:	mov	r1, sp
   33cb8:	blx	8c38 <strtoull@plt>
   33cbc:	mov	r9, r1
   33cbe:	ldr	r1, [sp, #0]
   33cc0:	mov	r8, r0
   33cc2:	cmp	r1, sl
   33cc4:	bne.n	33ccc <parse_size@@Base+0x50>
   33cc6:	ldr	r0, [pc, #352]	; (33e28 <parse_size@@Base+0x1ac>)
   33cc8:	add	r0, pc
   33cca:	b.n	33cae <parse_size@@Base+0x32>
   33ccc:	ldrb.w	fp, [r1]
   33cd0:	cmp.w	fp, #0
   33cd4:	beq.n	33ce0 <parse_size@@Base+0x64>
   33cd6:	ldrb	r1, [r1, #1]
   33cd8:	cbz	r1, 33ce0 <parse_size@@Base+0x64>
   33cda:	ldr	r0, [pc, #336]	; (33e2c <parse_size@@Base+0x1b0>)
   33cdc:	add	r0, pc
   33cde:	b.n	33cae <parse_size@@Base+0x32>
   33ce0:	blx	8bac <__errno_location@plt>
   33ce4:	ldr	r3, [r0, #0]
   33ce6:	cmp	r3, #34	; 0x22
   33ce8:	bne.n	33cfe <parse_size@@Base+0x82>
   33cea:	cmp.w	r9, #4294967295	; 0xffffffff
   33cee:	it	eq
   33cf0:	cmpeq.w	r8, #4294967295	; 0xffffffff
   33cf4:	bne.n	33cfe <parse_size@@Base+0x82>
   33cf6:	ldr	r0, [pc, #312]	; (33e30 <parse_size@@Base+0x1b4>)
   33cf8:	mov	r1, sl
   33cfa:	add	r0, pc
   33cfc:	b.n	33cae <parse_size@@Base+0x32>
   33cfe:	cmp.w	fp, #0
   33d02:	beq.n	33e00 <parse_size@@Base+0x184>
   33d04:	blx	8b04 <__ctype_tolower_loc@plt>
   33d08:	ldr	r3, [r0, #0]
   33d0a:	ldrb.w	r1, [r3, fp, lsl #2]
   33d0e:	sub.w	r3, r1, #98	; 0x62
   33d12:	cmp	r3, #18
   33d14:	bhi.n	33dfa <parse_size@@Base+0x17e>
   33d16:	tbb	[pc, r3]
   33d1a:	strb	r3, [r6, #1]
   33d1c:	lsrs	r0, r6, #9
   33d1e:	str	r0, [r6, #116]	; 0x74
   33d20:	strb	r0, [r6, #1]
   33d22:	ldr	r0, [r6, #84]	; 0x54
   33d24:	ldr	r0, [r6, #36]	; 0x24
   33d26:	strb	r0, [r6, #1]
   33d28:	strb	r2, [r4, #1]
   33d2a:	strb	r0, [r6, #1]
   33d2c:	lsls	r4, r4, #1
   33d2e:	mov.w	r2, #1024	; 0x400
   33d32:	movs	r3, #0
   33d34:	orr.w	r3, r3, r2, lsr #22
   33d38:	lsls	r2, r2, #10
   33d3a:	lsls	r3, r3, #10
   33d3c:	orr.w	r3, r3, r2, lsr #22
   33d40:	lsls	r2, r2, #10
   33d42:	lsls	r3, r3, #10
   33d44:	orr.w	r3, r3, r2, lsr #22
   33d48:	lsls	r2, r2, #10
   33d4a:	lsls	r3, r3, #10
   33d4c:	orr.w	r3, r3, r2, lsr #22
   33d50:	lsls	r2, r2, #10
   33d52:	lsls	r3, r3, #10
   33d54:	orr.w	r3, r3, r2, lsr #22
   33d58:	lsls	r2, r2, #10
   33d5a:	movs	r1, #0
   33d5c:	sub.w	ip, r1, #32
   33d60:	rsb	r0, r1, #32
   33d64:	lsl.w	r7, r9, r1
   33d68:	lsl.w	ip, r8, ip
   33d6c:	lsr.w	r0, r8, r0
   33d70:	orr.w	r7, r7, ip
   33d74:	lsl.w	r6, r8, r1
   33d78:	orrs	r7, r0
   33d7a:	cmp	r6, #0
   33d7c:	sbcs.w	r0, r7, #0
   33d80:	bge.n	33e06 <parse_size@@Base+0x18a>
   33d82:	rsb	r0, r1, #64	; 0x40
   33d86:	movs	r1, #0
   33d88:	adds	r1, #1
   33d8a:	cmp	r1, #64	; 0x40
   33d8c:	beq.n	33dbc <parse_size@@Base+0x140>
   33d8e:	sub.w	r7, r1, #32
   33d92:	rsb	r6, r1, #32
   33d96:	lsl.w	r5, r3, r1
   33d9a:	lsl.w	r7, r2, r7
   33d9e:	lsr.w	r6, r2, r6
   33da2:	orrs	r5, r7
   33da4:	lsl.w	r4, r2, r1
   33da8:	orrs	r5, r6
   33daa:	cmp	r4, #0
   33dac:	sbcs.w	r6, r5, #0
   33db0:	bge.n	33d88 <parse_size@@Base+0x10c>
   33db2:	rsb	r1, r1, #64	; 0x40
   33db6:	add	r1, r0
   33db8:	cmp	r1, #65	; 0x41
   33dba:	bgt.n	33cf6 <parse_size@@Base+0x7a>
   33dbc:	mul.w	r3, r8, r3
   33dc0:	mla	r3, r2, r9, r3
   33dc4:	umull	r0, r1, r8, r2
   33dc8:	ldr	r2, [pc, #104]	; (33e34 <parse_size@@Base+0x1b8>)
   33dca:	add	r1, r3
   33dcc:	ldr	r3, [pc, #76]	; (33e1c <parse_size@@Base+0x1a0>)
   33dce:	add	r2, pc
   33dd0:	ldr	r3, [r2, r3]
   33dd2:	ldr	r2, [r3, #0]
   33dd4:	ldr	r3, [sp, #4]
   33dd6:	eors	r2, r3
   33dd8:	beq.n	33e10 <parse_size@@Base+0x194>
   33dda:	blx	88e4 <__stack_chk_fail@plt>
   33dde:	movs	r2, #1
   33de0:	b.n	33d32 <parse_size@@Base+0xb6>
   33de2:	movs	r2, #1
   33de4:	movs	r3, #0
   33de6:	b.n	33d3a <parse_size@@Base+0xbe>
   33de8:	movs	r2, #1
   33dea:	movs	r3, #0
   33dec:	b.n	33d42 <parse_size@@Base+0xc6>
   33dee:	movs	r2, #1
   33df0:	movs	r3, #0
   33df2:	b.n	33d4a <parse_size@@Base+0xce>
   33df4:	movs	r2, #1
   33df6:	movs	r3, #0
   33df8:	b.n	33d52 <parse_size@@Base+0xd6>
   33dfa:	ldr	r0, [pc, #60]	; (33e38 <parse_size@@Base+0x1bc>)
   33dfc:	add	r0, pc
   33dfe:	b.n	33cae <parse_size@@Base+0x32>
   33e00:	movs	r2, #1
   33e02:	movs	r3, #0
   33e04:	b.n	33d5a <parse_size@@Base+0xde>
   33e06:	adds	r1, #1
   33e08:	cmp	r1, #64	; 0x40
   33e0a:	bne.n	33d5c <parse_size@@Base+0xe0>
   33e0c:	movs	r0, #0
   33e0e:	b.n	33d86 <parse_size@@Base+0x10a>
   33e10:	add	sp, #12
   33e12:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33e16:	nop
   33e18:	str	r2, [r5, r2]
   33e1a:	movs	r3, r0
   33e1c:	lsls	r4, r7, #9
   33e1e:	movs	r0, r0
   33e20:	subs	r5, #230	; 0xe6
   33e22:	movs	r2, r0
   33e24:	subs	r5, #228	; 0xe4
   33e26:	movs	r2, r0
   33e28:	subs	r5, #237	; 0xed
   33e2a:	movs	r2, r0
   33e2c:	subs	r5, #244	; 0xf4
   33e2e:	movs	r2, r0
   33e30:	subs	r6, #15
   33e32:	movs	r2, r0
   33e34:	ldr	r7, [pc, #392]	; (33fc0 <open_file_or_dir3@@Base+0xc>)
   33e36:	movs	r3, r0
   33e38:	subs	r5, #50	; 0x32
   33e3a:	movs	r2, r0

00033e3c <parse_qgroupid@@Base>:
   33e3c:	ldr	r2, [pc, #220]	; (33f1c <parse_qgroupid@@Base+0xe0>)
   33e3e:	movs	r1, #47	; 0x2f
   33e40:	ldr	r3, [pc, #220]	; (33f20 <parse_qgroupid@@Base+0xe4>)
   33e42:	add	r2, pc
   33e44:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   33e48:	sub	sp, #24
   33e4a:	ldr	r3, [r2, r3]
   33e4c:	mov	r4, r0
   33e4e:	ldr	r3, [r3, #0]
   33e50:	str	r3, [sp, #20]
   33e52:	mov.w	r3, #0
   33e56:	blx	8b7c <strchr@plt>
   33e5a:	mov	r6, r0
   33e5c:	mov	r0, r4
   33e5e:	blx	8b70 <strlen@plt>
   33e62:	movs	r3, #0
   33e64:	str	r3, [sp, #4]
   33e66:	ldrb	r3, [r4, #0]
   33e68:	cmp	r3, #47	; 0x2f
   33e6a:	add.w	r5, r4, r0
   33e6e:	beq.n	33ec4 <parse_qgroupid@@Base+0x88>
   33e70:	add.w	r8, sp, #4
   33e74:	movs	r2, #10
   33e76:	mov	r0, r4
   33e78:	mov	r1, r8
   33e7a:	cbnz	r6, 33e9e <parse_qgroupid@@Base+0x62>
   33e7c:	blx	8c38 <strtoull@plt>
   33e80:	ldr	r3, [sp, #4]
   33e82:	cmp	r3, r5
   33e84:	strd	r0, r1, [sp, #8]
   33e88:	bne.n	33ec4 <parse_qgroupid@@Base+0x88>
   33e8a:	ldr	r2, [pc, #152]	; (33f24 <parse_qgroupid@@Base+0xe8>)
   33e8c:	ldr	r3, [pc, #144]	; (33f20 <parse_qgroupid@@Base+0xe4>)
   33e8e:	add	r2, pc
   33e90:	ldr	r3, [r2, r3]
   33e92:	ldr	r2, [r3, #0]
   33e94:	ldr	r3, [sp, #20]
   33e96:	eors	r2, r3
   33e98:	beq.n	33f14 <parse_qgroupid@@Base+0xd8>
   33e9a:	blx	88e4 <__stack_chk_fail@plt>
   33e9e:	blx	8c38 <strtoull@plt>
   33ea2:	mov	r7, r0
   33ea4:	ldr	r0, [sp, #4]
   33ea6:	cmp	r0, r6
   33ea8:	bne.n	33ec4 <parse_qgroupid@@Base+0x88>
   33eaa:	adds	r0, #1
   33eac:	movs	r2, #10
   33eae:	mov	r1, r8
   33eb0:	blx	8c38 <strtoull@plt>
   33eb4:	ldr	r3, [sp, #4]
   33eb6:	cmp	r3, r5
   33eb8:	strd	r0, r1, [sp, #8]
   33ebc:	bne.n	33ec4 <parse_qgroupid@@Base+0x88>
   33ebe:	orr.w	r1, r1, r7, lsl #16
   33ec2:	b.n	33e8a <parse_qgroupid@@Base+0x4e>
   33ec4:	mov	r0, r4
   33ec6:	bl	35880 <btrfs_util_is_subvolume@@Base>
   33eca:	mov	r1, r0
   33ecc:	cbnz	r0, 33f02 <parse_qgroupid@@Base+0xc6>
   33ece:	mov	r0, r4
   33ed0:	blx	8a68 <open64@plt>
   33ed4:	subs	r6, r0, #0
   33ed6:	blt.n	33f02 <parse_qgroupid@@Base+0xc6>
   33ed8:	add	r1, sp, #8
   33eda:	bl	1ac68 <lookup_path_rootid@@Base>
   33ede:	mov	r5, r0
   33ee0:	cbz	r0, 33ef2 <parse_qgroupid@@Base+0xb6>
   33ee2:	blx	8bac <__errno_location@plt>
   33ee6:	negs	r3, r5
   33ee8:	str	r3, [r0, #0]
   33eea:	ldr	r0, [pc, #60]	; (33f28 <parse_qgroupid@@Base+0xec>)
   33eec:	add	r0, pc
   33eee:	bl	1a900 <__btrfs_error@@Base>
   33ef2:	mov	r0, r6
   33ef4:	blx	8e20 <close@plt>
   33ef8:	cmp	r5, #0
   33efa:	blt.n	33f02 <parse_qgroupid@@Base+0xc6>
   33efc:	ldrd	r0, r1, [sp, #8]
   33f00:	b.n	33e8a <parse_qgroupid@@Base+0x4e>
   33f02:	ldr	r0, [pc, #40]	; (33f2c <parse_qgroupid@@Base+0xf0>)
   33f04:	mov	r1, r4
   33f06:	add	r0, pc
   33f08:	bl	1a900 <__btrfs_error@@Base>
   33f0c:	mov.w	r0, #4294967295	; 0xffffffff
   33f10:	blx	8b58 <exit@plt>
   33f14:	add	sp, #24
   33f16:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   33f1a:	nop
   33f1c:	ldr	r6, [pc, #952]	; (342d8 <get_df@@Base+0x98>)
   33f1e:	movs	r3, r0
   33f20:	lsls	r4, r7, #9
   33f22:	movs	r0, r0
   33f24:	ldr	r6, [pc, #648]	; (341b0 <open_path_or_dev_mnt@@Base+0x80>)
   33f26:	movs	r3, r0
   33f28:	subs	r4, #95	; 0x5f
   33f2a:	movs	r2, r0
   33f2c:	subs	r4, #98	; 0x62
   33f2e:	movs	r2, r0

00033f30 <parse_csum_type@@Base>:
   33f30:	ldr	r1, [pc, #100]	; (33f98 <parse_csum_type@@Base+0x68>)
   33f32:	push	{r4, lr}
   33f34:	add	r1, pc
   33f36:	mov	r4, r0
   33f38:	blx	8954 <strcasecmp@plt>
   33f3c:	cbz	r0, 33f8c <parse_csum_type@@Base+0x5c>
   33f3e:	ldr	r1, [pc, #92]	; (33f9c <parse_csum_type@@Base+0x6c>)
   33f40:	mov	r0, r4
   33f42:	add	r1, pc
   33f44:	blx	8954 <strcasecmp@plt>
   33f48:	cbz	r0, 33f8a <parse_csum_type@@Base+0x5a>
   33f4a:	ldr	r1, [pc, #84]	; (33fa0 <parse_csum_type@@Base+0x70>)
   33f4c:	mov	r0, r4
   33f4e:	add	r1, pc
   33f50:	blx	8954 <strcasecmp@plt>
   33f54:	cbz	r0, 33f8a <parse_csum_type@@Base+0x5a>
   33f56:	ldr	r1, [pc, #76]	; (33fa4 <parse_csum_type@@Base+0x74>)
   33f58:	mov	r0, r4
   33f5a:	add	r1, pc
   33f5c:	blx	8954 <strcasecmp@plt>
   33f60:	cbz	r0, 33f8e <parse_csum_type@@Base+0x5e>
   33f62:	ldr	r1, [pc, #68]	; (33fa8 <parse_csum_type@@Base+0x78>)
   33f64:	mov	r0, r4
   33f66:	add	r1, pc
   33f68:	blx	8954 <strcasecmp@plt>
   33f6c:	cbz	r0, 33f92 <parse_csum_type@@Base+0x62>
   33f6e:	ldr	r1, [pc, #60]	; (33fac <parse_csum_type@@Base+0x7c>)
   33f70:	mov	r0, r4
   33f72:	add	r1, pc
   33f74:	blx	8954 <strcasecmp@plt>
   33f78:	cbz	r0, 33f92 <parse_csum_type@@Base+0x62>
   33f7a:	ldr	r0, [pc, #52]	; (33fb0 <parse_csum_type@@Base+0x80>)
   33f7c:	mov	r1, r4
   33f7e:	add	r0, pc
   33f80:	bl	1a900 <__btrfs_error@@Base>
   33f84:	movs	r0, #1
   33f86:	blx	8b58 <exit@plt>
   33f8a:	movs	r0, #1
   33f8c:	pop	{r4, pc}
   33f8e:	movs	r0, #2
   33f90:	b.n	33f8c <parse_csum_type@@Base+0x5c>
   33f92:	movs	r0, #3
   33f94:	b.n	33f8c <parse_csum_type@@Base+0x5c>
   33f96:	nop
   33f98:	subs	r4, #91	; 0x5b
   33f9a:	movs	r2, r0
   33f9c:	subs	r4, #84	; 0x54
   33f9e:	movs	r2, r0
   33fa0:	subs	r4, #81	; 0x51
   33fa2:	movs	r2, r0
   33fa4:	subs	r4, #76	; 0x4c
   33fa6:	movs	r2, r0
   33fa8:	subs	r4, #71	; 0x47
   33faa:	movs	r2, r0
   33fac:	subs	r4, #67	; 0x43
   33fae:	movs	r2, r0
   33fb0:	subs	r4, #62	; 0x3e
   33fb2:	movs	r2, r0

00033fb4 <open_file_or_dir3@@Base>:
   33fb4:	push	{r4, r5, r6, lr}
   33fb6:	mov	r6, r2
   33fb8:	ldr	r2, [pc, #136]	; (34044 <open_file_or_dir3@@Base+0x90>)
   33fba:	sub	sp, #112	; 0x70
   33fbc:	ldr	r3, [pc, #136]	; (34048 <open_file_or_dir3@@Base+0x94>)
   33fbe:	mov	r4, r1
   33fc0:	add	r2, pc
   33fc2:	mov	r1, sp
   33fc4:	mov	r5, r0
   33fc6:	ldr	r3, [r2, r3]
   33fc8:	ldr	r3, [r3, #0]
   33fca:	str	r3, [sp, #108]	; 0x6c
   33fcc:	mov.w	r3, #0
   33fd0:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   33fd4:	cmp	r0, #0
   33fd6:	bge.n	33ff0 <open_file_or_dir3@@Base+0x3c>
   33fd8:	mov.w	r0, #4294967295	; 0xffffffff
   33fdc:	ldr	r2, [pc, #108]	; (3404c <open_file_or_dir3@@Base+0x98>)
   33fde:	ldr	r3, [pc, #104]	; (34048 <open_file_or_dir3@@Base+0x94>)
   33fe0:	add	r2, pc
   33fe2:	ldr	r3, [r2, r3]
   33fe4:	ldr	r2, [r3, #0]
   33fe6:	ldr	r3, [sp, #108]	; 0x6c
   33fe8:	eors	r2, r3
   33fea:	beq.n	3403e <open_file_or_dir3@@Base+0x8a>
   33fec:	blx	88e4 <__stack_chk_fail@plt>
   33ff0:	ldr	r3, [sp, #16]
   33ff2:	and.w	r2, r3, #61440	; 0xf000
   33ff6:	cmp.w	r2, #16384	; 0x4000
   33ffa:	bne.n	34020 <open_file_or_dir3@@Base+0x6c>
   33ffc:	mov	r0, r5
   33ffe:	blx	8a5c <opendir@plt>
   34002:	str	r0, [r4, #0]
   34004:	cmp	r0, #0
   34006:	beq.n	33fd8 <open_file_or_dir3@@Base+0x24>
   34008:	blx	8d4c <dirfd@plt>
   3400c:	cmp	r0, #0
   3400e:	bge.n	33fdc <open_file_or_dir3@@Base+0x28>
   34010:	ldr	r0, [r4, #0]
   34012:	cmp	r0, #0
   34014:	beq.n	33fd8 <open_file_or_dir3@@Base+0x24>
   34016:	blx	8e38 <closedir@plt>
   3401a:	movs	r3, #0
   3401c:	str	r3, [r4, #0]
   3401e:	b.n	33fd8 <open_file_or_dir3@@Base+0x24>
   34020:	and.w	r3, r3, #53248	; 0xd000
   34024:	cmp.w	r3, #32768	; 0x8000
   34028:	bne.n	34034 <open_file_or_dir3@@Base+0x80>
   3402a:	mov	r1, r6
   3402c:	mov	r0, r5
   3402e:	blx	8ba0 <__open64_2@plt>
   34032:	b.n	3400c <open_file_or_dir3@@Base+0x58>
   34034:	blx	8bac <__errno_location@plt>
   34038:	movs	r3, #22
   3403a:	str	r3, [r0, #0]
   3403c:	b.n	33fd8 <open_file_or_dir3@@Base+0x24>
   3403e:	add	sp, #112	; 0x70
   34040:	pop	{r4, r5, r6, pc}
   34042:	nop
   34044:	ldr	r5, [pc, #448]	; (34208 <close_file_or_dir@@Base+0x20>)
   34046:	movs	r3, r0
   34048:	lsls	r4, r7, #9
   3404a:	movs	r0, r0
   3404c:	ldr	r5, [pc, #320]	; (34190 <open_path_or_dev_mnt@@Base+0x60>)
   3404e:	movs	r3, r0

00034050 <open_file_or_dir@@Base>:
   34050:	movs	r2, #2
   34052:	b.w	33fb4 <open_file_or_dir3@@Base>

00034056 <btrfs_open@@Base>:
   34056:	push	{r4, r5, r6, r7, lr}
   34058:	mov	r6, r2
   3405a:	ldr	r2, [pc, #172]	; (34108 <btrfs_open@@Base+0xb2>)
   3405c:	mov	r7, r3
   3405e:	ldr	r3, [pc, #172]	; (3410c <btrfs_open@@Base+0xb6>)
   34060:	sub	sp, #204	; 0xcc
   34062:	add	r2, pc
   34064:	mov	r5, r1
   34066:	add	r1, sp, #104	; 0x68
   34068:	mov	r4, r0
   3406a:	ldr	r3, [r2, r3]
   3406c:	ldr	r3, [r3, #0]
   3406e:	str	r3, [sp, #196]	; 0xc4
   34070:	mov.w	r3, #0
   34074:	blx	8d24 <statfs64@plt>
   34078:	cbz	r0, 3409e <btrfs_open@@Base+0x48>
   3407a:	ldr	r1, [pc, #148]	; (34110 <btrfs_open@@Base+0xba>)
   3407c:	mov	r2, r4
   3407e:	mov	r0, r6
   34080:	mov.w	r5, #4294967295	; 0xffffffff
   34084:	add	r1, pc
   34086:	bl	1a9f8 <__btrfs_error_on@@Base>
   3408a:	ldr	r2, [pc, #136]	; (34114 <btrfs_open@@Base+0xbe>)
   3408c:	ldr	r3, [pc, #124]	; (3410c <btrfs_open@@Base+0xb6>)
   3408e:	add	r2, pc
   34090:	ldr	r3, [r2, r3]
   34092:	ldr	r2, [r3, #0]
   34094:	ldr	r3, [sp, #196]	; 0xc4
   34096:	eors	r2, r3
   34098:	beq.n	340fe <btrfs_open@@Base+0xa8>
   3409a:	blx	88e4 <__stack_chk_fail@plt>
   3409e:	ldr	r3, [pc, #100]	; (34104 <btrfs_open@@Base+0xae>)
   340a0:	ldr	r2, [sp, #104]	; 0x68
   340a2:	cmp	r2, r3
   340a4:	beq.n	340b8 <btrfs_open@@Base+0x62>
   340a6:	ldr	r1, [pc, #112]	; (34118 <btrfs_open@@Base+0xc2>)
   340a8:	mov	r2, r4
   340aa:	mov	r0, r6
   340ac:	mvn.w	r5, #1
   340b0:	add	r1, pc
   340b2:	bl	1a9f8 <__btrfs_error_on@@Base>
   340b6:	b.n	3408a <btrfs_open@@Base+0x34>
   340b8:	mov	r1, sp
   340ba:	mov	r0, r4
   340bc:	bl	3cb40 <__libc_csu_fini@@Base+0x1c>
   340c0:	cmp	r0, #0
   340c2:	bne.n	3407a <btrfs_open@@Base+0x24>
   340c4:	cbz	r7, 340e4 <btrfs_open@@Base+0x8e>
   340c6:	ldr	r3, [sp, #16]
   340c8:	and.w	r3, r3, #61440	; 0xf000
   340cc:	cmp.w	r3, #16384	; 0x4000
   340d0:	beq.n	340e4 <btrfs_open@@Base+0x8e>
   340d2:	ldr	r1, [pc, #72]	; (3411c <btrfs_open@@Base+0xc6>)
   340d4:	mov	r2, r4
   340d6:	mov	r0, r6
   340d8:	mvn.w	r5, #2
   340dc:	add	r1, pc
   340de:	bl	1a9f8 <__btrfs_error_on@@Base>
   340e2:	b.n	3408a <btrfs_open@@Base+0x34>
   340e4:	mov	r1, r5
   340e6:	mov	r0, r4
   340e8:	bl	34050 <open_file_or_dir@@Base>
   340ec:	subs	r5, r0, #0
   340ee:	bge.n	3408a <btrfs_open@@Base+0x34>
   340f0:	ldr	r1, [pc, #44]	; (34120 <btrfs_open@@Base+0xca>)
   340f2:	mov	r2, r4
   340f4:	mov	r0, r6
   340f6:	add	r1, pc
   340f8:	bl	1a9f8 <__btrfs_error_on@@Base>
   340fc:	b.n	3408a <btrfs_open@@Base+0x34>
   340fe:	mov	r0, r5
   34100:	add	sp, #204	; 0xcc
   34102:	pop	{r4, r5, r6, r7, pc}
   34104:	ldr	r6, [r7, #0]
   34106:	str	r1, [sp, #140]	; 0x8c
   34108:	ldr	r4, [pc, #824]	; (34444 <get_fs_info@@Base+0x150>)
   3410a:	movs	r3, r0
   3410c:	lsls	r4, r7, #9
   3410e:	movs	r0, r0
   34110:	subs	r3, #77	; 0x4d
   34112:	movs	r2, r0
   34114:	ldr	r4, [pc, #648]	; (343a0 <get_fs_info@@Base+0xac>)
   34116:	movs	r3, r0
   34118:	subs	r3, #56	; 0x38
   3411a:	movs	r2, r0
   3411c:	subs	r3, #39	; 0x27
   3411e:	movs	r2, r0
   34120:	subs	r2, #219	; 0xdb
   34122:	movs	r2, r0

00034124 <btrfs_open_dir@@Base>:
   34124:	movs	r3, #1
   34126:	b.w	34056 <btrfs_open@@Base>

0003412a <btrfs_open_file_or_dir@@Base>:
   3412a:	movs	r3, #0
   3412c:	b.w	34056 <btrfs_open@@Base>

00034130 <open_path_or_dev_mnt@@Base>:
   34130:	push	{r4, r5, r6, r7, lr}
   34132:	mov	r4, r1
   34134:	ldr	r1, [pc, #156]	; (341d4 <open_path_or_dev_mnt@@Base+0xa4>)
   34136:	mov	r6, r2
   34138:	ldr	r2, [pc, #156]	; (341d8 <open_path_or_dev_mnt@@Base+0xa8>)
   3413a:	sub.w	sp, sp, #4096	; 0x1000
   3413e:	add	r1, pc
   34140:	sub	sp, #12
   34142:	add.w	r3, sp, #4096	; 0x1000
   34146:	mov	r5, r0
   34148:	ldr	r2, [r1, r2]
   3414a:	adds	r3, #4
   3414c:	ldr	r2, [r2, #0]
   3414e:	str	r2, [r3, #0]
   34150:	mov.w	r2, #0
   34154:	bl	32dd4 <path_is_block_device@@Base>
   34158:	cbz	r0, 341ba <open_path_or_dev_mnt@@Base+0x8a>
   3415a:	add	r7, sp, #4
   3415c:	mov.w	r2, #4096	; 0x1000
   34160:	mov	r0, r5
   34162:	mov	r1, r7
   34164:	bl	33648 <get_btrfs_mount@@Base>
   34168:	cmp	r0, #0
   3416a:	bge.n	3419e <open_path_or_dev_mnt@@Base+0x6e>
   3416c:	ldr	r1, [pc, #108]	; (341dc <open_path_or_dev_mnt@@Base+0xac>)
   3416e:	mov	r2, r5
   34170:	mov	r0, r6
   34172:	mov.w	r4, #4294967295	; 0xffffffff
   34176:	add	r1, pc
   34178:	bl	1a9f8 <__btrfs_error_on@@Base>
   3417c:	blx	8bac <__errno_location@plt>
   34180:	movs	r3, #22
   34182:	str	r3, [r0, #0]
   34184:	ldr	r1, [pc, #88]	; (341e0 <open_path_or_dev_mnt@@Base+0xb0>)
   34186:	add.w	r3, sp, #4096	; 0x1000
   3418a:	ldr	r2, [pc, #76]	; (341d8 <open_path_or_dev_mnt@@Base+0xa8>)
   3418c:	adds	r3, #4
   3418e:	add	r1, pc
   34190:	ldr	r2, [r1, r2]
   34192:	ldr	r1, [r2, #0]
   34194:	ldr	r2, [r3, #0]
   34196:	eors	r1, r2
   34198:	beq.n	341c8 <open_path_or_dev_mnt@@Base+0x98>
   3419a:	blx	88e4 <__stack_chk_fail@plt>
   3419e:	mov	r1, r4
   341a0:	mov	r0, r7
   341a2:	bl	34050 <open_file_or_dir@@Base>
   341a6:	mov	r4, r0
   341a8:	cbz	r6, 341ac <open_path_or_dev_mnt@@Base+0x7c>
   341aa:	lsrs	r6, r0, #31
   341ac:	ldr	r1, [pc, #52]	; (341e4 <open_path_or_dev_mnt@@Base+0xb4>)
   341ae:	mov	r2, r5
   341b0:	mov	r0, r6
   341b2:	add	r1, pc
   341b4:	bl	1a9f8 <__btrfs_error_on@@Base>
   341b8:	b.n	34184 <open_path_or_dev_mnt@@Base+0x54>
   341ba:	mov	r1, r4
   341bc:	movs	r2, #1
   341be:	mov	r0, r5
   341c0:	bl	34124 <btrfs_open_dir@@Base>
   341c4:	mov	r4, r0
   341c6:	b.n	34184 <open_path_or_dev_mnt@@Base+0x54>
   341c8:	mov	r0, r4
   341ca:	add.w	sp, sp, #4096	; 0x1000
   341ce:	add	sp, #12
   341d0:	pop	{r4, r5, r6, r7, pc}
   341d2:	nop
   341d4:	ldr	r3, [pc, #968]	; (345a0 <get_fs_info@@Base+0x2ac>)
   341d6:	movs	r3, r0
   341d8:	lsls	r4, r7, #9
   341da:	movs	r0, r0
   341dc:	subs	r2, #161	; 0xa1
   341de:	movs	r2, r0
   341e0:	ldr	r3, [pc, #648]	; (3446c <get_fs_info@@Base+0x178>)
   341e2:	movs	r3, r0
   341e4:	subs	r2, #136	; 0x88
   341e6:	movs	r2, r0

000341e8 <close_file_or_dir@@Base>:
   341e8:	push	{r3, r4, r5, r6, r7, lr}
   341ea:	mov	r5, r0
   341ec:	mov	r6, r1
   341ee:	blx	8bac <__errno_location@plt>
   341f2:	ldr	r7, [r0, #0]
   341f4:	mov	r4, r0
   341f6:	cbz	r6, 34202 <close_file_or_dir@@Base+0x1a>
   341f8:	mov	r0, r6
   341fa:	blx	8e38 <closedir@plt>
   341fe:	str	r7, [r4, #0]
   34200:	pop	{r3, r4, r5, r6, r7, pc}
   34202:	cmp	r5, #0
   34204:	blt.n	341fe <close_file_or_dir@@Base+0x16>
   34206:	mov	r0, r5
   34208:	blx	8e20 <close@plt>
   3420c:	b.n	341fe <close_file_or_dir@@Base+0x16>

0003420e <get_device_info@@Base>:
   3420e:	push	{r4, lr}
   34210:	mov	r4, r0
   34212:	ldr	r0, [sp, #8]
   34214:	movs	r1, #0
   34216:	strd	r2, r3, [r0], #8
   3421a:	movs	r2, #16
   3421c:	blx	8bf8 <memset@plt+0x4>
   34220:	ldr	r2, [sp, #8]
   34222:	ldr	r1, [pc, #24]	; (3423c <get_device_info@@Base+0x2e>)
   34224:	mov	r0, r4
   34226:	blx	89cc <ioctl@plt>
   3422a:	cmp	r0, #0
   3422c:	bge.n	34238 <get_device_info@@Base+0x2a>
   3422e:	blx	8bac <__errno_location@plt>
   34232:	ldr	r0, [r0, #0]
   34234:	negs	r0, r0
   34236:	pop	{r4, pc}
   34238:	movs	r0, #0
   3423a:	b.n	34236 <get_device_info@@Base+0x28>
   3423c:	str	r4, [sp, #120]	; 0x78
   3423e:	beq.n	34242 <get_df@@Base+0x2>

00034240 <get_df@@Base>:
   34240:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   34244:	mov	r5, r0
   34246:	movs	r0, #16
   34248:	mov	sl, r1
   3424a:	blx	8a94 <malloc@plt+0x4>
   3424e:	mov	r4, r0
   34250:	cbnz	r0, 3425a <get_df@@Base+0x1a>
   34252:	mvn.w	r0, #11
   34256:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   3425a:	mov.w	r8, #0
   3425e:	mov.w	r9, #0
   34262:	mov	r2, r0
   34264:	strd	r8, r9, [r0]
   34268:	strd	r8, r9, [r0, #8]
   3426c:	mov	r0, r5
   3426e:	ldr	r1, [pc, #120]	; (342e8 <get_df@@Base+0xa8>)
   34270:	blx	89cc <ioctl@plt>
   34274:	cmp	r0, #0
   34276:	bge.n	34290 <get_df@@Base+0x50>
   34278:	ldr	r0, [pc, #112]	; (342ec <get_df@@Base+0xac>)
   3427a:	add	r0, pc
   3427c:	bl	1a900 <__btrfs_error@@Base>
   34280:	mov	r0, r4
   34282:	blx	87cc <free@plt+0x4>
   34286:	blx	8bac <__errno_location@plt>
   3428a:	ldr	r0, [r0, #0]
   3428c:	negs	r0, r0
   3428e:	b.n	34256 <get_df@@Base+0x16>
   34290:	ldrd	r6, r7, [r4, #8]
   34294:	mov	r0, r4
   34296:	orrs.w	r3, r6, r7
   3429a:	bne.n	342a6 <get_df@@Base+0x66>
   3429c:	blx	87cc <free@plt+0x4>
   342a0:	mvn.w	r0, #1
   342a4:	b.n	34256 <get_df@@Base+0x16>
   342a6:	blx	87cc <free@plt+0x4>
   342aa:	movs	r0, #24
   342ac:	muls	r0, r6
   342ae:	adds	r0, #16
   342b0:	blx	8a94 <malloc@plt+0x4>
   342b4:	mov	r4, r0
   342b6:	cmp	r0, #0
   342b8:	beq.n	34252 <get_df@@Base+0x12>
   342ba:	mov	r2, r0
   342bc:	strd	r6, r7, [r0]
   342c0:	strd	r8, r9, [r0, #8]
   342c4:	mov	r0, r5
   342c6:	ldr	r1, [pc, #32]	; (342e8 <get_df@@Base+0xa8>)
   342c8:	blx	89cc <ioctl@plt>
   342cc:	cmp	r0, #0
   342ce:	bge.n	342de <get_df@@Base+0x9e>
   342d0:	ldr	r0, [pc, #28]	; (342f0 <get_df@@Base+0xb0>)
   342d2:	mov	r2, r6
   342d4:	mov	r3, r7
   342d6:	add	r0, pc
   342d8:	bl	1a900 <__btrfs_error@@Base>
   342dc:	b.n	34280 <get_df@@Base+0x40>
   342de:	movs	r0, #0
   342e0:	str.w	r4, [sl]
   342e4:	b.n	34256 <get_df@@Base+0x16>
   342e6:	nop
   342e8:	str	r4, [sp, #80]	; 0x50
   342ea:	stmia	r0!, {r4}
   342ec:	subs	r1, #214	; 0xd6
   342ee:	movs	r2, r0
   342f0:	subs	r1, #148	; 0x94
   342f2:	movs	r2, r0

000342f4 <get_fs_info@@Base>:
   342f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   342f8:	sub.w	sp, sp, #12288	; 0x3000
   342fc:	sub	sp, #44	; 0x2c
   342fe:	mov	r5, r1
   34300:	ldr	r1, [pc, #736]	; (345e4 <get_fs_info@@Base+0x2f0>)
   34302:	add.w	r3, sp, #12288	; 0x3000
   34306:	str	r2, [sp, #20]
   34308:	adds	r3, #36	; 0x24
   3430a:	ldr	r2, [pc, #732]	; (345e8 <get_fs_info@@Base+0x2f4>)
   3430c:	add	r1, pc
   3430e:	add	r7, sp, #40	; 0x28
   34310:	mov.w	r9, #0
   34314:	mov	r8, r0
   34316:	mov	r0, r5
   34318:	ldr	r2, [r1, r2]
   3431a:	mov	r1, r9
   3431c:	ldr	r2, [r2, #0]
   3431e:	str	r2, [r3, #0]
   34320:	mov.w	r2, #0
   34324:	mov.w	r2, #1024	; 0x400
   34328:	sub.w	r3, r7, #16
   3432c:	strd	r9, r9, [r7, #-16]
   34330:	str	r3, [sp, #12]
   34332:	blx	8bf8 <memset@plt+0x4>
   34336:	mov	r0, r8
   34338:	bl	32dd4 <path_is_block_device@@Base>
   3433c:	cmp	r0, #1
   3433e:	bne.n	3441c <get_fs_info@@Base+0x128>
   34340:	mov	r1, r9
   34342:	mov	r0, r8
   34344:	blx	8a68 <open64@plt>
   34348:	subs	r6, r0, #0
   3434a:	bge.n	34384 <get_fs_info@@Base+0x90>
   3434c:	blx	8bac <__errno_location@plt>
   34350:	mov	r1, r8
   34352:	ldr	r4, [r0, #0]
   34354:	ldr	r0, [pc, #660]	; (345ec <get_fs_info@@Base+0x2f8>)
   34356:	negs	r4, r4
   34358:	add	r0, pc
   3435a:	bl	1a900 <__btrfs_error@@Base>
   3435e:	ldr.w	r1, [r7, #-12]
   34362:	mov	r0, r6
   34364:	bl	341e8 <close_file_or_dir@@Base>
   34368:	ldr	r1, [pc, #644]	; (345f0 <get_fs_info@@Base+0x2fc>)
   3436a:	ldr	r2, [pc, #636]	; (345e8 <get_fs_info@@Base+0x2f4>)
   3436c:	add.w	r3, sp, #12288	; 0x3000
   34370:	add	r1, pc
   34372:	adds	r3, #36	; 0x24
   34374:	ldr	r2, [r1, r2]
   34376:	ldr	r1, [r2, #0]
   34378:	ldr	r2, [r3, #0]
   3437a:	eors	r1, r2
   3437c:	beq.w	345ce <get_fs_info@@Base+0x2da>
   34380:	blx	88e4 <__stack_chk_fail@plt>
   34384:	add.w	r3, sp, #4128	; 0x1020
   34388:	mov	r1, r8
   3438a:	adds	r3, #4
   3438c:	str	r3, [sp, #16]
   3438e:	ldr	r3, [sp, #12]
   34390:	ldr	r2, [sp, #16]
   34392:	str.w	r9, [sp, #4]
   34396:	str	r3, [sp, #0]
   34398:	mov.w	r3, #4096	; 0x1000
   3439c:	bl	334fc <check_mounted_where@@Base>
   343a0:	subs	r4, r0, #0
   343a2:	beq.n	34410 <get_fs_info@@Base+0x11c>
   343a4:	blt.n	3435e <get_fs_info@@Base+0x6a>
   343a6:	add.w	r8, sp, #8192	; 0x2000
   343aa:	movs	r2, #1
   343ac:	add.w	r8, r8, #36	; 0x24
   343b0:	movs	r3, #0
   343b2:	mov	r0, r6
   343b4:	strd	r2, r3, [r5, #8]
   343b8:	mov	r1, r8
   343ba:	mov.w	r2, #65536	; 0x10000
   343be:	movs	r3, #0
   343c0:	str.w	r9, [sp]
   343c4:	bl	20150 <btrfs_read_dev_super@@Base>
   343c8:	subs	r4, r0, #0
   343ca:	blt.n	34416 <get_fs_info@@Base+0x122>
   343cc:	ldr	r2, [sp, #12]
   343ce:	mov	r3, r5
   343d0:	ldr.w	sl, [r8, #201]	; 0xc9
   343d4:	ldr.w	fp, [r8, #205]	; 0xcd
   343d8:	ldr	r2, [r2, #0]
   343da:	add.w	r1, r2, #16
   343de:	strd	sl, fp, [r3], #16
   343e2:	ldr.w	r0, [r2], #4
   343e6:	cmp	r2, r1
   343e8:	str.w	r0, [r3], #4
   343ec:	bne.n	343e2 <get_fs_info@@Base+0xee>
   343ee:	mov	r0, r6
   343f0:	blx	8e20 <close@plt>
   343f4:	ldr.w	r8, [sp, #16]
   343f8:	sub.w	r1, r7, #12
   343fc:	mov	r0, r8
   343fe:	bl	34050 <open_file_or_dir@@Base>
   34402:	subs	r6, r0, #0
   34404:	bge.n	34428 <get_fs_info@@Base+0x134>
   34406:	blx	8bac <__errno_location@plt>
   3440a:	ldr	r4, [r0, #0]
   3440c:	negs	r4, r4
   3440e:	b.n	3435e <get_fs_info@@Base+0x6a>
   34410:	mvn.w	r4, #21
   34414:	b.n	3435e <get_fs_info@@Base+0x6a>
   34416:	mvn.w	r4, #4
   3441a:	b.n	3435e <get_fs_info@@Base+0x6a>
   3441c:	mov.w	sl, #0
   34420:	mov.w	fp, #0
   34424:	mov	r4, r9
   34426:	b.n	343f8 <get_fs_info@@Base+0x104>
   34428:	ldrd	r2, r3, [r5, #8]
   3442c:	cmp	r3, #0
   3442e:	it	eq
   34430:	cmpeq	r2, #1
   34432:	beq.w	34598 <get_fs_info@@Base+0x2a4>
   34436:	ldr	r1, [pc, #420]	; (345dc <get_fs_info@@Base+0x2e8>)
   34438:	mov	r2, r5
   3443a:	blx	89cc <ioctl@plt>
   3443e:	cmp	r0, #0
   34440:	blt.n	34406 <get_fs_info@@Base+0x112>
   34442:	mov	r8, r7
   34444:	movs	r2, #3
   34446:	movs	r3, #0
   34448:	strd	r2, r3, [r7, #-8]
   3444c:	movs	r2, #1
   3444e:	movs	r3, #0
   34450:	movs	r4, #216	; 0xd8
   34452:	strd	r2, r3, [r8], #-8
   34456:	mov	r9, r3
   34458:	strd	r4, r4, [r8, #56]	; 0x38
   3445c:	movs	r4, #30
   3445e:	str.w	r4, [r8, #64]	; 0x40
   34462:	mov	r4, r2
   34464:	movs	r0, #0
   34466:	movs	r1, #0
   34468:	strd	r2, r3, [r8, #16]
   3446c:	strd	r0, r1, [r5, #8]
   34470:	strd	r0, r1, [r8, #40]	; 0x28
   34474:	mov.w	r0, #4294967295	; 0xffffffff
   34478:	mov.w	r1, #4294967295	; 0xffffffff
   3447c:	strd	r0, r1, [r8, #48]	; 0x30
   34480:	strd	r0, r1, [r8, #32]
   34484:	ldr	r1, [pc, #344]	; (345e0 <get_fs_info@@Base+0x2ec>)
   34486:	mov	r2, r8
   34488:	mov	r0, r6
   3448a:	strd	r4, r9, [r8, #24]
   3448e:	blx	89cc <ioctl@plt>
   34492:	cmp	r0, #0
   34494:	bge.n	34546 <get_fs_info@@Base+0x252>
   34496:	blx	8bac <__errno_location@plt>
   3449a:	ldr	r3, [r0, #0]
   3449c:	negs	r4, r3
   3449e:	cmp	r3, #0
   344a0:	bne.w	3435e <get_fs_info@@Base+0x6a>
   344a4:	movs	r2, #0
   344a6:	movs	r3, #0
   344a8:	mov	r0, r6
   344aa:	str.w	r8, [sp]
   344ae:	bl	3420e <get_device_info@@Base>
   344b2:	mov	r4, r0
   344b4:	cmp	r0, #0
   344b6:	bne.n	34598 <get_fs_info@@Base+0x2a4>
   344b8:	ldrd	r3, r2, [r5, #8]
   344bc:	mov.w	r8, #1
   344c0:	adds	r3, #1
   344c2:	adc.w	r2, r2, #0
   344c6:	strd	r3, r2, [r5, #8]
   344ca:	orrs.w	r3, sl, fp
   344ce:	itt	eq
   344d0:	moveq.w	sl, #1
   344d4:	moveq.w	fp, #0
   344d8:	ldrd	r0, r1, [r5, #8]
   344dc:	orrs.w	r3, r0, r1
   344e0:	beq.w	3435e <get_fs_info@@Base+0x6a>
   344e4:	lsls	r0, r0, #12
   344e6:	blx	8a94 <malloc@plt+0x4>
   344ea:	ldr	r3, [sp, #20]
   344ec:	mov	r9, r0
   344ee:	str	r0, [r3, #0]
   344f0:	cmp	r0, #0
   344f2:	beq.n	34406 <get_fs_info@@Base+0x112>
   344f4:	cmp.w	r8, #0
   344f8:	beq.n	34506 <get_fs_info@@Base+0x212>
   344fa:	sub.w	r1, r7, #8
   344fe:	mov.w	r2, #4096	; 0x1000
   34502:	blx	8830 <memcpy@plt+0x4>
   34506:	ldrd	r2, r3, [r5]
   3450a:	ldrd	r0, r1, [r5, #8]
   3450e:	cmp	r3, fp
   34510:	it	eq
   34512:	cmpeq	r2, sl
   34514:	bcc.n	34522 <get_fs_info@@Base+0x22e>
   34516:	mov	r2, r8
   34518:	asrs	r3, r2, #31
   3451a:	cmp	r3, r1
   3451c:	it	eq
   3451e:	cmpeq	r8, r0
   34520:	bcc.n	3459e <get_fs_info@@Base+0x2aa>
   34522:	cmp	r1, #0
   34524:	it	eq
   34526:	cmpeq	r0, #1
   34528:	beq.w	3435e <get_fs_info@@Base+0x6a>
   3452c:	cmp.w	r8, #0
   34530:	bne.n	345ca <get_fs_info@@Base+0x2d6>
   34532:	ldr	r1, [pc, #192]	; (345f4 <get_fs_info@@Base+0x300>)
   34534:	movs	r3, #1
   34536:	ldr	r0, [pc, #192]	; (345f8 <get_fs_info@@Base+0x304>)
   34538:	movw	r2, #1091	; 0x443
   3453c:	add	r1, pc
   3453e:	adds	r1, #41	; 0x29
   34540:	add	r0, pc
   34542:	bl	333ac <test_issubvolname@@Base+0x17e>
   34546:	ldrd	r2, r3, [r5, #8]
   3454a:	ldr.w	r1, [r8, #64]	; 0x40
   3454e:	adds	r2, r2, r1
   34550:	adc.w	r3, r3, #0
   34554:	cmp	r1, #30
   34556:	strd	r2, r3, [r5, #8]
   3455a:	bne.n	3456c <get_fs_info@@Base+0x278>
   3455c:	ldr.w	r4, [r8, #3906]	; 0xf42
   34560:	ldr.w	r9, [r8, #3910]	; 0xf46
   34564:	adds	r4, #1
   34566:	adc.w	r9, r9, #0
   3456a:	b.n	34484 <get_fs_info@@Base+0x190>
   3456c:	cbnz	r1, 3457c <get_fs_info@@Base+0x288>
   3456e:	adds.w	r4, r4, #4294967295	; 0xffffffff
   34572:	str	r4, [r5, #0]
   34574:	adc.w	r3, r9, #4294967295	; 0xffffffff
   34578:	str	r3, [r5, #4]
   3457a:	b.n	344a4 <get_fs_info@@Base+0x1b0>
   3457c:	add.w	r2, sp, #12288	; 0x3000
   34580:	subs	r1, #1
   34582:	adds	r2, #40	; 0x28
   34584:	movs	r3, #130	; 0x82
   34586:	mla	r1, r3, r1, r2
   3458a:	sub.w	r1, r1, #12160	; 0x2f80
   3458e:	ldr.w	r2, [r1], #-32
   34592:	ldr	r3, [r1, #36]	; 0x24
   34594:	str	r2, [r5, #0]
   34596:	b.n	34578 <get_fs_info@@Base+0x284>
   34598:	mov.w	r8, #0
   3459c:	b.n	344d8 <get_fs_info@@Base+0x1e4>
   3459e:	add.w	r3, r9, r8, lsl #12
   345a2:	mov	r2, sl
   345a4:	str	r3, [sp, #0]
   345a6:	mov	r0, r6
   345a8:	mov	r3, fp
   345aa:	bl	3420e <get_device_info@@Base>
   345ae:	cmn.w	r0, #19
   345b2:	mov	r4, r0
   345b4:	beq.n	345c0 <get_fs_info@@Base+0x2cc>
   345b6:	cmp	r0, #0
   345b8:	bne.w	3435e <get_fs_info@@Base+0x6a>
   345bc:	add.w	r8, r8, #1
   345c0:	adds.w	sl, sl, #1
   345c4:	adc.w	fp, fp, #0
   345c8:	b.n	34506 <get_fs_info@@Base+0x212>
   345ca:	movs	r4, #0
   345cc:	b.n	3435e <get_fs_info@@Base+0x6a>
   345ce:	mov	r0, r4
   345d0:	add.w	sp, sp, #12288	; 0x3000
   345d4:	add	sp, #44	; 0x2c
   345d6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   345da:	nop
   345dc:	str	r4, [sp, #124]	; 0x7c
   345de:	strh	r0, [r0, #32]
   345e0:	str	r4, [sp, #68]	; 0x44
   345e2:	beq.n	345e6 <get_fs_info@@Base+0x2f2>
   345e4:	ldr	r2, [pc, #144]	; (34678 <get_fsid@@Base+0x7c>)
   345e6:	movs	r3, r0
   345e8:	lsls	r4, r7, #9
   345ea:	movs	r0, r0
   345ec:	adds	r5, #231	; 0xe7
   345ee:	movs	r2, r0
   345f0:	ldr	r1, [pc, #768]	; (348f4 <find_next_key@@Base+0x4>)
   345f2:	movs	r3, r0
   345f4:	subs	r2, #65	; 0x41
   345f6:	movs	r2, r0
   345f8:	adds	r7, #84	; 0x54
   345fa:	movs	r2, r0

000345fc <get_fsid@@Base>:
   345fc:	push	{r4, r5, r6, r7, lr}
   345fe:	mov	r7, r2
   34600:	ldr	r2, [pc, #148]	; (34698 <get_fsid@@Base+0x9c>)
   34602:	subw	sp, sp, #1036	; 0x40c
   34606:	ldr	r3, [pc, #148]	; (3469c <get_fsid@@Base+0xa0>)
   34608:	mov	r4, r1
   3460a:	add	r2, pc
   3460c:	movs	r1, #0
   3460e:	mov	r6, r0
   34610:	ldr	r3, [r2, r3]
   34612:	ldr	r3, [r3, #0]
   34614:	str.w	r3, [sp, #1028]	; 0x404
   34618:	mov.w	r3, #0
   3461c:	blx	8a68 <open64@plt>
   34620:	subs	r5, r0, #0
   34622:	bge.n	34652 <get_fsid@@Base+0x56>
   34624:	blx	8bac <__errno_location@plt>
   34628:	ldr	r4, [r0, #0]
   3462a:	negs	r4, r4
   3462c:	cbnz	r7, 34638 <get_fsid@@Base+0x3c>
   3462e:	ldr	r0, [pc, #112]	; (346a0 <get_fsid@@Base+0xa4>)
   34630:	mov	r1, r6
   34632:	add	r0, pc
   34634:	bl	1a900 <__btrfs_error@@Base>
   34638:	adds	r3, r5, #1
   3463a:	bne.n	34666 <get_fsid@@Base+0x6a>
   3463c:	ldr	r2, [pc, #100]	; (346a4 <get_fsid@@Base+0xa8>)
   3463e:	ldr	r3, [pc, #92]	; (3469c <get_fsid@@Base+0xa0>)
   34640:	add	r2, pc
   34642:	ldr	r3, [r2, r3]
   34644:	ldr	r2, [r3, #0]
   34646:	ldr.w	r3, [sp, #1028]	; 0x404
   3464a:	eors	r2, r3
   3464c:	beq.n	3468c <get_fsid@@Base+0x90>
   3464e:	blx	88e4 <__stack_chk_fail@plt>
   34652:	ldr	r1, [pc, #64]	; (34694 <get_fsid@@Base+0x98>)
   34654:	mov	r2, sp
   34656:	blx	89cc <ioctl@plt>
   3465a:	cmp	r0, #0
   3465c:	bge.n	3466e <get_fsid@@Base+0x72>
   3465e:	blx	8bac <__errno_location@plt>
   34662:	ldr	r4, [r0, #0]
   34664:	negs	r4, r4
   34666:	mov	r0, r5
   34668:	blx	8e20 <close@plt>
   3466c:	b.n	3463c <get_fsid@@Base+0x40>
   3466e:	mov	r3, r4
   34670:	add	r6, sp, #16
   34672:	add	r4, sp, #32
   34674:	mov	r2, r6
   34676:	adds	r3, #8
   34678:	ldmia	r2!, {r0, r1}
   3467a:	cmp	r2, r4
   3467c:	str.w	r0, [r3, #-8]
   34680:	mov	r6, r2
   34682:	str.w	r1, [r3, #-4]
   34686:	bne.n	34674 <get_fsid@@Base+0x78>
   34688:	movs	r4, #0
   3468a:	b.n	34666 <get_fsid@@Base+0x6a>
   3468c:	mov	r0, r4
   3468e:	addw	sp, sp, #1036	; 0x40c
   34692:	pop	{r4, r5, r6, r7, pc}
   34694:	str	r4, [sp, #124]	; 0x7c
   34696:	strh	r0, [r0, #32]
   34698:	bx	r4
   3469a:	movs	r3, r0
   3469c:	lsls	r4, r7, #9
   3469e:	movs	r0, r0
   346a0:	add	r1, pc, #16	; (adr r1, 346b4 <group_profile_max_safe_loss@@Base+0xc>)
   346a2:	movs	r0, r0
   346a4:	mov	r8, lr
   346a6:	movs	r3, r0

000346a8 <group_profile_max_safe_loss@@Base>:
   346a8:	movs	r3, #0
   346aa:	cmp	r3, #0
   346ac:	push	{r4, r5, lr}
   346ae:	and.w	r4, r0, #2040	; 0x7f8
   346b2:	it	eq
   346b4:	cmpeq	r4, #128	; 0x80
   346b6:	mov	r5, r3
   346b8:	beq.n	34728 <group_profile_max_safe_loss@@Base+0x80>
   346ba:	cmp	r3, #0
   346bc:	it	eq
   346be:	cmpeq	r4, #129	; 0x81
   346c0:	bcs.n	346f6 <group_profile_max_safe_loss@@Base+0x4e>
   346c2:	cmp	r3, #0
   346c4:	it	eq
   346c6:	cmpeq	r4, #16
   346c8:	beq.n	34728 <group_profile_max_safe_loss@@Base+0x80>
   346ca:	cmp	r3, #0
   346cc:	it	eq
   346ce:	cmpeq	r4, #17
   346d0:	bcs.n	346e0 <group_profile_max_safe_loss@@Base+0x38>
   346d2:	tst.w	r0, #2032	; 0x7f0
   346d6:	ite	ne
   346d8:	movne.w	r0, #4294967295	; 0xffffffff
   346dc:	moveq	r0, r3
   346de:	pop	{r4, r5, pc}
   346e0:	cmp	r3, #0
   346e2:	it	eq
   346e4:	cmpeq	r4, #32
   346e6:	beq.n	3472c <group_profile_max_safe_loss@@Base+0x84>
   346e8:	cmp	r3, #0
   346ea:	itet	eq
   346ec:	cmpeq	r4, #64	; 0x40
   346ee:	movne.w	r0, #4294967295	; 0xffffffff
   346f2:	moveq	r0, #1
   346f4:	b.n	346de <group_profile_max_safe_loss@@Base+0x36>
   346f6:	cmp	r3, #0
   346f8:	it	eq
   346fa:	cmpeq.w	r4, #1024	; 0x400
   346fe:	beq.n	34730 <group_profile_max_safe_loss@@Base+0x88>
   34700:	movs	r3, #0
   34702:	cmp	r3, r5
   34704:	mov.w	r2, #1024	; 0x400
   34708:	it	eq
   3470a:	cmpeq	r2, r4
   3470c:	bcc.n	34734 <group_profile_max_safe_loss@@Base+0x8c>
   3470e:	cmp	r5, #0
   34710:	it	eq
   34712:	cmpeq.w	r4, #256	; 0x100
   34716:	beq.n	3473a <group_profile_max_safe_loss@@Base+0x92>
   34718:	cmp	r5, #0
   3471a:	itet	eq
   3471c:	cmpeq.w	r4, #512	; 0x200
   34720:	movne.w	r0, #4294967295	; 0xffffffff
   34724:	moveq	r0, #2
   34726:	b.n	346de <group_profile_max_safe_loss@@Base+0x36>
   34728:	movs	r0, #1
   3472a:	b.n	346de <group_profile_max_safe_loss@@Base+0x36>
   3472c:	mov	r0, r3
   3472e:	b.n	346de <group_profile_max_safe_loss@@Base+0x36>
   34730:	movs	r0, #3
   34732:	b.n	346de <group_profile_max_safe_loss@@Base+0x36>
   34734:	mov.w	r0, #4294967295	; 0xffffffff
   34738:	b.n	346de <group_profile_max_safe_loss@@Base+0x36>
   3473a:	movs	r0, #2
   3473c:	b.n	346de <group_profile_max_safe_loss@@Base+0x36>

0003473e <ask_user@@Base>:
   3473e:	ldr	r2, [pc, #148]	; (347d4 <ask_user@@Base+0x96>)
   34740:	ldr	r3, [pc, #148]	; (347d8 <ask_user@@Base+0x9a>)
   34742:	add	r2, pc
   34744:	push	{r4, r5, r6, lr}
   34746:	movs	r5, #0
   34748:	sub	sp, #40	; 0x28
   3474a:	ldr	r3, [r2, r3]
   3474c:	mov	r4, r0
   3474e:	movs	r2, #26
   34750:	mov	r1, r5
   34752:	add	r0, sp, #8
   34754:	ldr	r3, [r3, #0]
   34756:	str	r3, [sp, #36]	; 0x24
   34758:	mov.w	r3, #0
   3475c:	str	r5, [sp, #4]
   3475e:	blx	8bf8 <memset@plt+0x4>
   34762:	ldr	r1, [pc, #120]	; (347dc <ask_user@@Base+0x9e>)
   34764:	mov	r2, r4
   34766:	ldr	r6, [pc, #120]	; (347e0 <ask_user@@Base+0xa2>)
   34768:	add	r1, pc
   3476a:	movs	r0, #1
   3476c:	str	r5, [sp, #0]
   3476e:	blx	8c6c <__printf_chk@plt+0x4>
   34772:	ldr	r3, [pc, #112]	; (347e4 <ask_user@@Base+0xa6>)
   34774:	add	r6, pc
   34776:	add	r4, sp, #4
   34778:	movs	r1, #29
   3477a:	ldr	r3, [r6, r3]
   3477c:	mov	r0, r4
   3477e:	ldr	r2, [r3, #0]
   34780:	blx	87d8 <fgets@plt>
   34784:	cbnz	r0, 3479c <ask_user@@Base+0x5e>
   34786:	movs	r0, #0
   34788:	ldr	r2, [pc, #92]	; (347e8 <ask_user@@Base+0xaa>)
   3478a:	ldr	r3, [pc, #76]	; (347d8 <ask_user@@Base+0x9a>)
   3478c:	add	r2, pc
   3478e:	ldr	r3, [r2, r3]
   34790:	ldr	r2, [r3, #0]
   34792:	ldr	r3, [sp, #36]	; 0x24
   34794:	eors	r2, r3
   34796:	beq.n	347ce <ask_user@@Base+0x90>
   34798:	blx	88e4 <__stack_chk_fail@plt>
   3479c:	ldr	r1, [pc, #76]	; (347ec <ask_user@@Base+0xae>)
   3479e:	mov	r0, r4
   347a0:	mov	r2, sp
   347a2:	add	r1, pc
   347a4:	blx	8a44 <strtok_r@plt>
   347a8:	mov	r4, r0
   347aa:	cmp	r0, #0
   347ac:	beq.n	34786 <ask_user@@Base+0x48>
   347ae:	ldr	r1, [pc, #64]	; (347f0 <ask_user@@Base+0xb2>)
   347b0:	add	r1, pc
   347b2:	blx	8954 <strcasecmp@plt>
   347b6:	cbz	r0, 347ca <ask_user@@Base+0x8c>
   347b8:	ldr	r1, [pc, #56]	; (347f4 <ask_user@@Base+0xb6>)
   347ba:	mov	r0, r4
   347bc:	add	r1, pc
   347be:	blx	8954 <strcasecmp@plt>
   347c2:	clz	r0, r0
   347c6:	lsrs	r0, r0, #5
   347c8:	b.n	34788 <ask_user@@Base+0x4a>
   347ca:	movs	r0, #1
   347cc:	b.n	34788 <ask_user@@Base+0x4a>
   347ce:	add	sp, #40	; 0x28
   347d0:	pop	{r4, r5, r6, pc}
   347d2:	nop
   347d4:	cmp	lr, sp
   347d6:	movs	r3, r0
   347d8:	lsls	r4, r7, #9
   347da:	movs	r0, r0
   347dc:	adds	r5, #55	; 0x37
   347de:	movs	r2, r0
   347e0:	cmp	ip, r7
   347e2:	movs	r3, r0
   347e4:	lsls	r4, r4, #10
   347e6:	movs	r0, r0
   347e8:	cmp	ip, r4
   347ea:	movs	r3, r0
   347ec:	adds	r5, #8
   347ee:	movs	r2, r0
   347f0:			; <UNDEFINED> instruction: 0xf3f90000
   347f4:	ldrh	r6, [r2, #46]	; 0x2e
	...

000347f8 <find_mount_root@@Base>:
   347f8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   347fc:	mov	r9, r0
   347fe:	str	r1, [sp, #0]
   34800:	mov.w	r1, #262144	; 0x40000
   34804:	blx	8a68 <open64@plt>
   34808:	cmp	r0, #0
   3480a:	bge.n	3481c <find_mount_root@@Base+0x24>
   3480c:	blx	8bac <__errno_location@plt>
   34810:	ldr	r4, [r0, #0]
   34812:	negs	r4, r4
   34814:	mov	r0, r4
   34816:	add	sp, #12
   34818:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3481c:	blx	8e20 <close@plt>
   34820:	ldr	r1, [pc, #172]	; (348d0 <find_mount_root@@Base+0xd8>)
   34822:	ldr	r0, [pc, #176]	; (348d4 <find_mount_root@@Base+0xdc>)
   34824:	add	r1, pc
   34826:	add	r0, pc
   34828:	blx	8d94 <setmntent@plt>
   3482c:	mov	r7, r0
   3482e:	cmp	r0, #0
   34830:	beq.n	3480c <find_mount_root@@Base+0x14>
   34832:	ldr.w	fp, [pc, #164]	; 348d8 <find_mount_root@@Base+0xe0>
   34836:	movs	r5, #0
   34838:	mov	sl, r5
   3483a:	movs	r6, #1
   3483c:	add	fp, pc
   3483e:	b.n	3484c <find_mount_root@@Base+0x54>
   34840:	ldr	r0, [r4, #8]
   34842:	mov	r1, fp
   34844:	blx	8748 <strcmp@plt>
   34848:	mov	sl, r8
   3484a:	mov	r6, r0
   3484c:	mov	r0, r7
   3484e:	blx	8a50 <getmntent@plt>
   34852:	mov	r4, r0
   34854:	cbz	r0, 34890 <find_mount_root@@Base+0x98>
   34856:	ldr	r3, [r4, #4]
   34858:	mov	r0, r3
   3485a:	str	r3, [sp, #4]
   3485c:	blx	8b70 <strlen@plt>
   34860:	ldr	r3, [sp, #4]
   34862:	mov	r1, r9
   34864:	mov	r8, r0
   34866:	mov	r2, r0
   34868:	mov	r0, r3
   3486a:	blx	8df0 <strncmp@plt>
   3486e:	cmp	r0, #0
   34870:	bne.n	3484c <find_mount_root@@Base+0x54>
   34872:	cmp	sl, r8
   34874:	bgt.n	3484c <find_mount_root@@Base+0x54>
   34876:	mov	r0, r5
   34878:	blx	87cc <free@plt+0x4>
   3487c:	ldr	r0, [r4, #4]
   3487e:	blx	88cc <strdup@plt+0x4>
   34882:	mov	r5, r0
   34884:	cmp	r0, #0
   34886:	bne.n	34840 <find_mount_root@@Base+0x48>
   34888:	blx	8bac <__errno_location@plt>
   3488c:	ldr	r4, [r0, #0]
   3488e:	negs	r4, r4
   34890:	mov	r0, r7
   34892:	blx	8cd0 <endmntent@plt>
   34896:	cmp	r4, #0
   34898:	bne.n	34814 <find_mount_root@@Base+0x1c>
   3489a:	cbz	r5, 348c8 <find_mount_root@@Base+0xd0>
   3489c:	cbz	r6, 348a8 <find_mount_root@@Base+0xb0>
   3489e:	mov	r0, r5
   348a0:	movs	r4, #1
   348a2:	blx	87cc <free@plt+0x4>
   348a6:	b.n	34814 <find_mount_root@@Base+0x1c>
   348a8:	mov	r1, r6
   348aa:	mov	r0, r5
   348ac:	blx	8e14 <realpath@plt>
   348b0:	ldr	r3, [sp, #0]
   348b2:	str	r0, [r3, #0]
   348b4:	cbnz	r0, 348be <find_mount_root@@Base+0xc6>
   348b6:	blx	8bac <__errno_location@plt>
   348ba:	ldr	r6, [r0, #0]
   348bc:	negs	r6, r6
   348be:	mov	r0, r5
   348c0:	mov	r4, r6
   348c2:	blx	87cc <free@plt+0x4>
   348c6:	b.n	34814 <find_mount_root@@Base+0x1c>
   348c8:	mvn.w	r4, #1
   348cc:	b.n	34814 <find_mount_root@@Base+0x1c>
   348ce:	nop
   348d0:	b.n	34300 <get_fs_info@@Base+0xc>
   348d2:	movs	r0, r0
   348d4:	adds	r0, #110	; 0x6e
   348d6:	movs	r2, r0
   348d8:	cmp	r7, #218	; 0xda
   348da:	movs	r2, r0

000348dc <units_set_mode@@Base>:
   348dc:	ldrb	r3, [r0, #0]
   348de:	orrs	r1, r3
   348e0:	str	r1, [r0, #0]
   348e2:	bx	lr

000348e4 <units_set_base@@Base>:
   348e4:	ldr	r3, [r0, #0]
   348e6:	bic.w	r3, r3, #255	; 0xff
   348ea:	orrs	r3, r1
   348ec:	str	r3, [r0, #0]
   348ee:	bx	lr

000348f0 <find_next_key@@Base>:
   348f0:	ldr	r2, [pc, #168]	; (3499c <find_next_key@@Base+0xac>)
   348f2:	ldr	r3, [pc, #172]	; (349a0 <find_next_key@@Base+0xb0>)
   348f4:	add	r2, pc
   348f6:	push	{r4, r5, r6, lr}
   348f8:	sub	sp, #24
   348fa:	ldr	r3, [r2, r3]
   348fc:	mov	r4, r1
   348fe:	movs	r5, #0
   34900:	ldr	r3, [r3, #0]
   34902:	str	r3, [sp, #20]
   34904:	mov.w	r3, #0
   34908:	subs	r3, r0, #4
   3490a:	ldr.w	r0, [r3, #4]!
   3490e:	cbz	r0, 34922 <find_next_key@@Base+0x32>
   34910:	ldr	r2, [r3, #32]
   34912:	ldr.w	r1, [r0, #192]	; 0xc0
   34916:	adds	r2, #1
   34918:	cmp	r2, r1
   3491a:	bcc.n	34926 <find_next_key@@Base+0x36>
   3491c:	adds	r5, #1
   3491e:	cmp	r5, #8
   34920:	bne.n	3490a <find_next_key@@Base+0x1a>
   34922:	movs	r5, #1
   34924:	b.n	34956 <find_next_key@@Base+0x66>
   34926:	add.w	r6, r4, #9
   3492a:	mov	r1, sp
   3492c:	cbnz	r5, 3496a <find_next_key@@Base+0x7a>
   3492e:	movs	r3, #25
   34930:	muls	r2, r3
   34932:	movs	r3, #17
   34934:	adds	r2, #101	; 0x65
   34936:	bl	1a79e <read_extent_buffer@@Base>
   3493a:	ldr.w	r2, [sp, #9]
   3493e:	ldr.w	r3, [sp, #13]
   34942:	str.w	r2, [r4, #9]
   34946:	str	r3, [r6, #4]
   34948:	ldrb.w	r3, [sp, #8]
   3494c:	strb	r3, [r4, #8]
   3494e:	ldr	r3, [sp, #0]
   34950:	str	r3, [r4, #0]
   34952:	ldr	r3, [sp, #4]
   34954:	str	r3, [r4, #4]
   34956:	ldr	r2, [pc, #76]	; (349a4 <find_next_key@@Base+0xb4>)
   34958:	ldr	r3, [pc, #68]	; (349a0 <find_next_key@@Base+0xb0>)
   3495a:	add	r2, pc
   3495c:	ldr	r3, [r2, r3]
   3495e:	ldr	r2, [r3, #0]
   34960:	ldr	r3, [sp, #20]
   34962:	eors	r2, r3
   34964:	beq.n	34996 <find_next_key@@Base+0xa6>
   34966:	blx	88e4 <__stack_chk_fail@plt>
   3496a:	add.w	r2, r2, r2, lsl #5
   3496e:	movs	r3, #17
   34970:	adds	r2, #101	; 0x65
   34972:	movs	r5, #0
   34974:	bl	1a79e <read_extent_buffer@@Base>
   34978:	ldr.w	r2, [sp, #9]
   3497c:	ldr.w	r3, [sp, #13]
   34980:	str.w	r2, [r4, #9]
   34984:	str	r3, [r6, #4]
   34986:	ldrb.w	r3, [sp, #8]
   3498a:	strb	r3, [r4, #8]
   3498c:	ldr	r3, [sp, #0]
   3498e:	str	r3, [r4, #0]
   34990:	ldr	r3, [sp, #4]
   34992:	str	r3, [r4, #4]
   34994:	b.n	34956 <find_next_key@@Base+0x66>
   34996:	mov	r0, r5
   34998:	add	sp, #24
   3499a:	pop	{r4, r5, r6, pc}
   3499c:	add	r4, r7
   3499e:	movs	r3, r0
   349a0:	lsls	r4, r7, #9
   349a2:	movs	r0, r0
   349a4:	mvns	r6, r2
   349a6:	movs	r3, r0

000349a8 <btrfs_group_type_str@@Base>:
   349a8:	and.w	r3, r1, #131072	; 0x20000
   349ac:	and.w	r2, r0, #7
   349b0:	cmp	r3, #0
   349b2:	it	eq
   349b4:	cmpeq	r2, #6
   349b6:	push	{r4, r5, lr}
   349b8:	bcs.n	349ea <btrfs_group_type_str@@Base+0x42>
   349ba:	orrs.w	r1, r2, r3
   349be:	beq.n	34a06 <btrfs_group_type_str@@Base+0x5e>
   349c0:	adds.w	r4, r2, #4294967295	; 0xffffffff
   349c4:	adc.w	r5, r3, #4294967295	; 0xffffffff
   349c8:	cmp	r5, #0
   349ca:	it	eq
   349cc:	cmpeq	r4, #5
   349ce:	bcs.n	349e4 <btrfs_group_type_str@@Base+0x3c>
   349d0:	cmp	r4, #4
   349d2:	bhi.n	349e4 <btrfs_group_type_str@@Base+0x3c>
   349d4:	tbb	[pc, r4]
   349d8:	lsls	r2, r3, #12
   349da:	asrs	r6, r0, #4
   349dc:	movs	r4, r2
   349de:	ldr	r0, [pc, #56]	; (34a18 <btrfs_group_type_str@@Base+0x70>)
   349e0:	add	r0, pc
   349e2:	pop	{r4, r5, pc}
   349e4:	ldr	r0, [pc, #52]	; (34a1c <btrfs_group_type_str@@Base+0x74>)
   349e6:	add	r0, pc
   349e8:	b.n	349e2 <btrfs_group_type_str@@Base+0x3a>
   349ea:	cmp.w	r3, #131072	; 0x20000
   349ee:	it	eq
   349f0:	cmpeq	r2, #0
   349f2:	bne.n	34a12 <btrfs_group_type_str@@Base+0x6a>
   349f4:	ldr	r0, [pc, #40]	; (34a20 <btrfs_group_type_str@@Base+0x78>)
   349f6:	add	r0, pc
   349f8:	b.n	349e2 <btrfs_group_type_str@@Base+0x3a>
   349fa:	ldr	r0, [pc, #40]	; (34a24 <btrfs_group_type_str@@Base+0x7c>)
   349fc:	add	r0, pc
   349fe:	b.n	349e2 <btrfs_group_type_str@@Base+0x3a>
   34a00:	ldr	r0, [pc, #36]	; (34a28 <btrfs_group_type_str@@Base+0x80>)
   34a02:	add	r0, pc
   34a04:	b.n	349e2 <btrfs_group_type_str@@Base+0x3a>
   34a06:	ldr	r0, [pc, #36]	; (34a2c <btrfs_group_type_str@@Base+0x84>)
   34a08:	add	r0, pc
   34a0a:	b.n	349e2 <btrfs_group_type_str@@Base+0x3a>
   34a0c:	ldr	r0, [pc, #32]	; (34a30 <btrfs_group_type_str@@Base+0x88>)
   34a0e:	add	r0, pc
   34a10:	b.n	349e2 <btrfs_group_type_str@@Base+0x3a>
   34a12:	ldr	r0, [pc, #32]	; (34a34 <btrfs_group_type_str@@Base+0x8c>)
   34a14:	add	r0, pc
   34a16:	b.n	349e2 <btrfs_group_type_str@@Base+0x3a>
   34a18:	adds	r2, #226	; 0xe2
   34a1a:	movs	r2, r0
   34a1c:	b.n	350da <btrfs_config_init@@Base+0x14>
   34a1e:	movs	r0, r0
   34a20:	adds	r2, #211	; 0xd3
   34a22:	movs	r2, r0
   34a24:	adds	r2, #189	; 0xbd
   34a26:	movs	r2, r0
   34a28:	adds	r2, #178	; 0xb2
   34a2a:	movs	r2, r0
   34a2c:	b.n	350a6 <rand_u64@@Base+0xa>
   34a2e:	movs	r0, r0
   34a30:	adds	r2, #161	; 0xa1
   34a32:	movs	r2, r0
   34a34:	b.n	35096 <rand_range@@Base+0x2a>
	...

00034a38 <btrfs_group_profile_str@@Base>:
   34a38:	and.w	r2, r0, #2040	; 0x7f8
   34a3c:	movs	r3, #0
   34a3e:	cmp	r3, #0
   34a40:	it	eq
   34a42:	cmpeq	r2, #64	; 0x40
   34a44:	beq.n	34ac0 <btrfs_group_profile_str@@Base+0x88>
   34a46:	cmp	r3, #0
   34a48:	it	eq
   34a4a:	cmpeq	r2, #65	; 0x41
   34a4c:	bcs.n	34a80 <btrfs_group_profile_str@@Base+0x48>
   34a4e:	cmp	r3, #0
   34a50:	it	eq
   34a52:	cmpeq	r2, #16
   34a54:	beq.n	34ac6 <btrfs_group_profile_str@@Base+0x8e>
   34a56:	cmp	r3, #0
   34a58:	it	eq
   34a5a:	cmpeq	r2, #17
   34a5c:	bcs.n	34a72 <btrfs_group_profile_str@@Base+0x3a>
   34a5e:	orrs.w	r1, r2, r3
   34a62:	beq.n	34acc <btrfs_group_profile_str@@Base+0x94>
   34a64:	cmp	r3, #0
   34a66:	it	eq
   34a68:	cmpeq	r2, #8
   34a6a:	bne.n	34ad2 <btrfs_group_profile_str@@Base+0x9a>
   34a6c:	ldr	r0, [pc, #136]	; (34af8 <btrfs_group_profile_str@@Base+0xc0>)
   34a6e:	add	r0, pc
   34a70:	bx	lr
   34a72:	cmp	r3, #0
   34a74:	it	eq
   34a76:	cmpeq	r2, #32
   34a78:	bne.n	34ad8 <btrfs_group_profile_str@@Base+0xa0>
   34a7a:	ldr	r0, [pc, #128]	; (34afc <btrfs_group_profile_str@@Base+0xc4>)
   34a7c:	add	r0, pc
   34a7e:	bx	lr
   34a80:	cmp	r3, #0
   34a82:	it	eq
   34a84:	cmpeq.w	r2, #512	; 0x200
   34a88:	beq.n	34ade <btrfs_group_profile_str@@Base+0xa6>
   34a8a:	movs	r1, #0
   34a8c:	cmp	r1, r3
   34a8e:	mov.w	r0, #512	; 0x200
   34a92:	it	eq
   34a94:	cmpeq	r0, r2
   34a96:	bcc.n	34ab0 <btrfs_group_profile_str@@Base+0x78>
   34a98:	cmp	r3, #0
   34a9a:	it	eq
   34a9c:	cmpeq	r2, #128	; 0x80
   34a9e:	beq.n	34ae4 <btrfs_group_profile_str@@Base+0xac>
   34aa0:	cmp	r3, #0
   34aa2:	it	eq
   34aa4:	cmpeq.w	r2, #256	; 0x100
   34aa8:	bne.n	34aea <btrfs_group_profile_str@@Base+0xb2>
   34aaa:	ldr	r0, [pc, #84]	; (34b00 <btrfs_group_profile_str@@Base+0xc8>)
   34aac:	add	r0, pc
   34aae:	bx	lr
   34ab0:	cmp	r3, #0
   34ab2:	it	eq
   34ab4:	cmpeq.w	r2, #1024	; 0x400
   34ab8:	bne.n	34af0 <btrfs_group_profile_str@@Base+0xb8>
   34aba:	ldr	r0, [pc, #72]	; (34b04 <btrfs_group_profile_str@@Base+0xcc>)
   34abc:	add	r0, pc
   34abe:	bx	lr
   34ac0:	ldr	r0, [pc, #68]	; (34b08 <btrfs_group_profile_str@@Base+0xd0>)
   34ac2:	add	r0, pc
   34ac4:	bx	lr
   34ac6:	ldr	r0, [pc, #68]	; (34b0c <btrfs_group_profile_str@@Base+0xd4>)
   34ac8:	add	r0, pc
   34aca:	bx	lr
   34acc:	ldr	r0, [pc, #64]	; (34b10 <btrfs_group_profile_str@@Base+0xd8>)
   34ace:	add	r0, pc
   34ad0:	bx	lr
   34ad2:	ldr	r0, [pc, #64]	; (34b14 <btrfs_group_profile_str@@Base+0xdc>)
   34ad4:	add	r0, pc
   34ad6:	bx	lr
   34ad8:	ldr	r0, [pc, #60]	; (34b18 <btrfs_group_profile_str@@Base+0xe0>)
   34ada:	add	r0, pc
   34adc:	bx	lr
   34ade:	ldr	r0, [pc, #60]	; (34b1c <btrfs_group_profile_str@@Base+0xe4>)
   34ae0:	add	r0, pc
   34ae2:	bx	lr
   34ae4:	ldr	r0, [pc, #56]	; (34b20 <btrfs_group_profile_str@@Base+0xe8>)
   34ae6:	add	r0, pc
   34ae8:	bx	lr
   34aea:	ldr	r0, [pc, #56]	; (34b24 <btrfs_group_profile_str@@Base+0xec>)
   34aec:	add	r0, pc
   34aee:	bx	lr
   34af0:	ldr	r0, [pc, #52]	; (34b28 <btrfs_group_profile_str@@Base+0xf0>)
   34af2:	add	r0, pc
   34af4:	bx	lr
   34af6:	nop
   34af8:	ble.n	34abc <btrfs_group_profile_str@@Base+0x84>
   34afa:	movs	r0, r0
   34afc:	ble.n	34ae4 <btrfs_group_profile_str@@Base+0xac>
   34afe:	movs	r0, r0
   34b00:	ble.n	34ab0 <btrfs_group_profile_str@@Base+0x78>
   34b02:	movs	r0, r0
   34b04:	ble.n	34a5a <btrfs_group_profile_str@@Base+0x22>
   34b06:	movs	r0, r0
   34b08:	ble.n	34a6e <btrfs_group_profile_str@@Base+0x36>
   34b0a:	movs	r0, r0
   34b0c:	ble.n	34a2a <btrfs_group_type_str@@Base+0x82>
   34b0e:	movs	r0, r0
   34b10:	adds	r2, #9
   34b12:	movs	r2, r0
   34b14:	b.n	34ff6 <subvol_strip_mountpoint@@Base+0x1c>
   34b16:	movs	r0, r0
   34b18:	b.n	34fee <subvol_strip_mountpoint@@Base+0x14>
   34b1a:	movs	r0, r0
   34b1c:	ble.n	34c18 <test_num_disk_vs_raid@@Base+0xec>
   34b1e:	movs	r0, r0
   34b20:	ble.n	34a4e <btrfs_group_profile_str@@Base+0x16>
   34b22:	movs	r0, r0
   34b24:	b.n	34fd6 <prefixcmp@@Base+0x12>
   34b26:	movs	r0, r0
   34b28:	b.n	34fce <prefixcmp@@Base+0xa>
	...

00034b2c <test_num_disk_vs_raid@@Base>:
   34b2c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34b30:	sub	sp, #36	; 0x24
   34b32:	mov	sl, r3
   34b34:	ldr	r3, [pc, #316]	; (34c74 <test_num_disk_vs_raid@@Base+0x148>)
   34b36:	ldrd	r6, r7, [sp, #72]	; 0x48
   34b3a:	orr.w	fp, r0, r2
   34b3e:	add	r3, pc
   34b40:	ldr	r5, [sp, #80]	; 0x50
   34b42:	cmp	r7, #0
   34b44:	mov	r9, r0
   34b46:	it	eq
   34b48:	cmpeq	r6, #2
   34b4a:	mov	r8, r2
   34b4c:	str	r3, [sp, #28]
   34b4e:	beq.n	34bdc <test_num_disk_vs_raid@@Base+0xb0>
   34b50:	cmp	r7, #0
   34b52:	it	eq
   34b54:	cmpeq	r6, #3
   34b56:	beq.n	34bd8 <test_num_disk_vs_raid@@Base+0xac>
   34b58:	cmp	r7, #0
   34b5a:	it	eq
   34b5c:	cmpeq	r6, #1
   34b5e:	beq.n	34be0 <test_num_disk_vs_raid@@Base+0xb4>
   34b60:	mov.w	r4, #1088	; 0x440
   34b64:	orr.w	r4, r4, #768	; 0x300
   34b68:	orr.w	r4, r4, #152	; 0x98
   34b6c:	cmp	r7, #0
   34b6e:	orr.w	r4, r4, #32
   34b72:	it	eq
   34b74:	cmpeq	r6, #2
   34b76:	bcc.n	34b8e <test_num_disk_vs_raid@@Base+0x62>
   34b78:	and.w	r2, fp, #32
   34b7c:	movs	r3, #0
   34b7e:	orrs	r3, r2
   34b80:	beq.n	34b8e <test_num_disk_vs_raid@@Base+0x62>
   34b82:	ldr	r0, [pc, #244]	; (34c78 <test_num_disk_vs_raid@@Base+0x14c>)
   34b84:	str	r1, [sp, #16]
   34b86:	add	r0, pc
   34b88:	bl	1a884 <__btrfs_warning@@Base>
   34b8c:	ldr	r1, [sp, #16]
   34b8e:	bic.w	r3, r9, r4
   34b92:	mvn.w	ip, r4
   34b96:	strd	r3, r1, [sp, #16]
   34b9a:	ldrd	r3, r4, [sp, #16]
   34b9e:	orrs	r3, r4
   34ba0:	beq.n	34be4 <test_num_disk_vs_raid@@Base+0xb8>
   34ba2:	ldr	r2, [pc, #216]	; (34c7c <test_num_disk_vs_raid@@Base+0x150>)
   34ba4:	mov	r0, r9
   34ba6:	ldr	r3, [sp, #28]
   34ba8:	ldr	r3, [r3, r2]
   34baa:	str	r1, [sp, #28]
   34bac:	ldr	r4, [r3, #0]
   34bae:	bl	34a38 <btrfs_group_profile_str@@Base>
   34bb2:	ldr	r1, [sp, #28]
   34bb4:	str	r0, [sp, #16]
   34bb6:	mov	r0, r9
   34bb8:	bl	33268 <test_issubvolname@@Base+0x3a>
   34bbc:	ldr	r2, [pc, #192]	; (34c80 <test_num_disk_vs_raid@@Base+0x154>)
   34bbe:	ldr	r3, [sp, #16]
   34bc0:	add	r2, pc
   34bc2:	strd	r6, r7, [sp]
   34bc6:	str	r0, [sp, #8]
   34bc8:	movs	r1, #1
   34bca:	mov	r0, r4
   34bcc:	blx	8ca0 <__fprintf_chk@plt+0x4>
   34bd0:	movs	r0, #1
   34bd2:	add	sp, #36	; 0x24
   34bd4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34bd8:	movs	r4, #0
   34bda:	b.n	34b64 <test_num_disk_vs_raid@@Base+0x38>
   34bdc:	movs	r4, #0
   34bde:	b.n	34b68 <test_num_disk_vs_raid@@Base+0x3c>
   34be0:	movs	r4, #0
   34be2:	b.n	34b6c <test_num_disk_vs_raid@@Base+0x40>
   34be4:	and.w	r0, ip, r8
   34be8:	mov	r1, sl
   34bea:	orrs.w	r3, r0, r1
   34bee:	beq.n	34c16 <test_num_disk_vs_raid@@Base+0xea>
   34bf0:	ldr	r2, [pc, #136]	; (34c7c <test_num_disk_vs_raid@@Base+0x150>)
   34bf2:	mov	r0, r8
   34bf4:	ldr	r3, [sp, #28]
   34bf6:	ldr	r3, [r3, r2]
   34bf8:	ldr	r4, [r3, #0]
   34bfa:	bl	34a38 <btrfs_group_profile_str@@Base>
   34bfe:	mov	r1, sl
   34c00:	str	r0, [sp, #16]
   34c02:	mov	r0, r8
   34c04:	bl	33268 <test_issubvolname@@Base+0x3a>
   34c08:	ldr	r2, [pc, #120]	; (34c84 <test_num_disk_vs_raid@@Base+0x158>)
   34c0a:	ldr	r3, [sp, #16]
   34c0c:	add	r2, pc
   34c0e:	strd	r6, r7, [sp]
   34c12:	str	r0, [sp, #8]
   34c14:	b.n	34bc8 <test_num_disk_vs_raid@@Base+0x9c>
   34c16:	cmp	r7, #0
   34c18:	mov.w	r1, #0
   34c1c:	it	eq
   34c1e:	cmpeq	r6, #3
   34c20:	bne.n	34c56 <test_num_disk_vs_raid@@Base+0x12a>
   34c22:	and.w	r2, fp, #256	; 0x100
   34c26:	mov	r3, r1
   34c28:	orrs	r3, r2
   34c2a:	beq.n	34c34 <test_num_disk_vs_raid@@Base+0x108>
   34c2c:	ldr	r0, [pc, #88]	; (34c88 <test_num_disk_vs_raid@@Base+0x15c>)
   34c2e:	add	r0, pc
   34c30:	bl	1a884 <__btrfs_warning@@Base>
   34c34:	cbnz	r5, 34c6e <test_num_disk_vs_raid@@Base+0x142>
   34c36:	and.w	r2, r8, #32
   34c3a:	mov	r3, r5
   34c3c:	orrs	r3, r2
   34c3e:	beq.n	34c48 <test_num_disk_vs_raid@@Base+0x11c>
   34c40:	ldr	r5, [sp, #84]	; 0x54
   34c42:	subs	r5, #0
   34c44:	it	ne
   34c46:	movne	r5, #1
   34c48:	ldr	r1, [pc, #64]	; (34c8c <test_num_disk_vs_raid@@Base+0x160>)
   34c4a:	mov	r0, r5
   34c4c:	add	r1, pc
   34c4e:	bl	1a97c <__btrfs_warning_on@@Base>
   34c52:	movs	r0, #0
   34c54:	b.n	34bd2 <test_num_disk_vs_raid@@Base+0xa6>
   34c56:	cmp	r7, #0
   34c58:	it	eq
   34c5a:	cmpeq	r6, #2
   34c5c:	bne.n	34c34 <test_num_disk_vs_raid@@Base+0x108>
   34c5e:	and.w	r2, fp, #128	; 0x80
   34c62:	mov	r3, r1
   34c64:	orrs	r3, r2
   34c66:	beq.n	34c34 <test_num_disk_vs_raid@@Base+0x108>
   34c68:	ldr	r0, [pc, #36]	; (34c90 <test_num_disk_vs_raid@@Base+0x164>)
   34c6a:	add	r0, pc
   34c6c:	b.n	34c30 <test_num_disk_vs_raid@@Base+0x104>
   34c6e:	movs	r5, #0
   34c70:	b.n	34c48 <test_num_disk_vs_raid@@Base+0x11c>
   34c72:	nop
   34c74:	rors	r2, r6
   34c76:	movs	r3, r0
   34c78:	adds	r1, #88	; 0x58
   34c7a:	movs	r2, r0
   34c7c:	lsls	r4, r1, #10
   34c7e:	movs	r0, r0
   34c80:	adds	r1, #89	; 0x59
   34c82:	movs	r2, r0
   34c84:	adds	r1, #114	; 0x72
   34c86:	movs	r2, r0
   34c88:	adds	r1, #177	; 0xb1
   34c8a:	movs	r2, r0
   34c8c:	adds	r2, #9
   34c8e:	movs	r2, r0
   34c90:	adds	r1, #176	; 0xb0
   34c92:	movs	r2, r0

00034c94 <btrfs_tree_search2_ioctl_supported@@Base>:
   34c94:	ldr	r2, [pc, #144]	; (34d28 <btrfs_tree_search2_ioctl_supported@@Base+0x94>)
   34c96:	ldr	r3, [pc, #148]	; (34d2c <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   34c98:	add	r2, pc
   34c9a:	ldr	r1, [pc, #136]	; (34d24 <btrfs_tree_search2_ioctl_supported@@Base+0x90>)
   34c9c:	push	{r4, r5, r7, lr}
   34c9e:	sub	sp, #8
   34ca0:	add	r7, sp, #0
   34ca2:	ldr	r3, [r2, r3]
   34ca4:	sub.w	sp, sp, #1024	; 0x400
   34ca8:	movs	r2, #1
   34caa:	ldr	r3, [r3, #0]
   34cac:	str	r3, [r7, #4]
   34cae:	mov.w	r3, #0
   34cb2:	movs	r3, #0
   34cb4:	strd	r2, r3, [sp]
   34cb8:	movs	r2, #2
   34cba:	movs	r3, #0
   34cbc:	strd	r2, r3, [sp, #8]
   34cc0:	strd	r2, r3, [sp, #16]
   34cc4:	mov.w	r2, #4294967295	; 0xffffffff
   34cc8:	movs	r3, #132	; 0x84
   34cca:	strd	r3, r3, [sp, #56]	; 0x38
   34cce:	mov.w	r3, #4294967295	; 0xffffffff
   34cd2:	strd	r2, r3, [sp, #32]
   34cd6:	strd	r2, r3, [sp, #48]	; 0x30
   34cda:	movs	r3, #1
   34cdc:	mov.w	r2, #912	; 0x390
   34ce0:	str	r3, [sp, #64]	; 0x40
   34ce2:	movs	r3, #0
   34ce4:	strd	r2, r3, [sp, #104]	; 0x68
   34ce8:	mov	r2, sp
   34cea:	movs	r4, #0
   34cec:	movs	r5, #0
   34cee:	strd	r4, r5, [sp, #24]
   34cf2:	strd	r4, r5, [sp, #40]	; 0x28
   34cf6:	blx	89cc <ioctl@plt>
   34cfa:	cmn.w	r0, #95	; 0x5f
   34cfe:	beq.n	34d1a <btrfs_tree_search2_ioctl_supported@@Base+0x86>
   34d00:	cmp	r0, #0
   34d02:	it	eq
   34d04:	moveq	r0, #1
   34d06:	ldr	r2, [pc, #40]	; (34d30 <btrfs_tree_search2_ioctl_supported@@Base+0x9c>)
   34d08:	ldr	r3, [pc, #32]	; (34d2c <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   34d0a:	add	r2, pc
   34d0c:	ldr	r3, [r2, r3]
   34d0e:	ldr	r2, [r3, #0]
   34d10:	ldr	r3, [r7, #4]
   34d12:	eors	r2, r3
   34d14:	beq.n	34d1e <btrfs_tree_search2_ioctl_supported@@Base+0x8a>
   34d16:	blx	88e4 <__stack_chk_fail@plt>
   34d1a:	movs	r0, #0
   34d1c:	b.n	34d06 <btrfs_tree_search2_ioctl_supported@@Base+0x72>
   34d1e:	adds	r7, #8
   34d20:	mov	sp, r7
   34d22:	pop	{r4, r5, r7, pc}
   34d24:	str	r4, [sp, #68]	; 0x44
   34d26:	stmia	r0!, {r4, r5, r6}
   34d28:	lsls	r0, r3
   34d2a:	movs	r3, r0
   34d2c:	lsls	r4, r7, #9
   34d2e:	movs	r0, r0
   34d30:	ands	r6, r4
   34d32:	movs	r3, r0

00034d34 <get_unit_mode_from_arg@@Base>:
   34d34:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34d38:	mov	r8, r2
   34d3a:	ldr	r2, [pc, #448]	; (34efc <get_unit_mode_from_arg@@Base+0x1c8>)
   34d3c:	sub	sp, #20
   34d3e:	ldr	r3, [pc, #448]	; (34f00 <get_unit_mode_from_arg@@Base+0x1cc>)
   34d40:	mov	r7, r0
   34d42:	add	r2, pc
   34d44:	ldr.w	r9, [pc, #444]	; 34f04 <get_unit_mode_from_arg@@Base+0x1d0>
   34d48:	ldr.w	sl, [pc, #444]	; 34f08 <get_unit_mode_from_arg@@Base+0x1d4>
   34d4c:	mov	r4, r1
   34d4e:	ldr.w	fp, [pc, #444]	; 34f0c <get_unit_mode_from_arg@@Base+0x1d8>
   34d52:	add	r9, pc
   34d54:	ldr	r3, [r2, r3]
   34d56:	add	sl, pc
   34d58:	add	fp, pc
   34d5a:	movs	r5, #0
   34d5c:	ldr	r3, [r3, #0]
   34d5e:	str	r3, [sp, #12]
   34d60:	mov.w	r3, #0
   34d64:	mov.w	r3, #512	; 0x200
   34d68:	str	r3, [sp, #8]
   34d6a:	ldr	r3, [r7, #0]
   34d6c:	cmp	r3, r5
   34d6e:	bgt.n	34d96 <get_unit_mode_from_arg@@Base+0x62>
   34d70:	movs	r3, #0
   34d72:	mov	r0, r3
   34d74:	ldr	r2, [r7, #0]
   34d76:	cmp	r2, r0
   34d78:	bgt.w	34ee2 <get_unit_mode_from_arg@@Base+0x1ae>
   34d7c:	ldr	r2, [pc, #400]	; (34f10 <get_unit_mode_from_arg@@Base+0x1dc>)
   34d7e:	str	r3, [r7, #0]
   34d80:	ldr	r3, [pc, #380]	; (34f00 <get_unit_mode_from_arg@@Base+0x1cc>)
   34d82:	add	r2, pc
   34d84:	ldr	r0, [sp, #8]
   34d86:	ldr	r3, [r2, r3]
   34d88:	ldr	r2, [r3, #0]
   34d8a:	ldr	r3, [sp, #12]
   34d8c:	eors	r2, r3
   34d8e:	beq.w	34ef6 <get_unit_mode_from_arg@@Base+0x1c2>
   34d92:	blx	88e4 <__stack_chk_fail@plt>
   34d96:	ldr.w	r6, [r4, r5, lsl #2]
   34d9a:	mov	r1, r9
   34d9c:	mov	r0, r6
   34d9e:	blx	8748 <strcmp@plt>
   34da2:	cmp	r0, #0
   34da4:	beq.w	34ef2 <get_unit_mode_from_arg@@Base+0x1be>
   34da8:	mov	r1, sl
   34daa:	mov	r0, r6
   34dac:	blx	8748 <strcmp@plt>
   34db0:	cbnz	r0, 34db8 <get_unit_mode_from_arg@@Base+0x84>
   34db2:	mov.w	r3, #256	; 0x100
   34db6:	b.n	34dc6 <get_unit_mode_from_arg@@Base+0x92>
   34db8:	mov	r1, fp
   34dba:	mov	r0, r6
   34dbc:	blx	8748 <strcmp@plt>
   34dc0:	cbnz	r0, 34dd0 <get_unit_mode_from_arg@@Base+0x9c>
   34dc2:	mov.w	r3, #512	; 0x200
   34dc6:	str	r3, [sp, #8]
   34dc8:	str.w	r0, [r4, r5, lsl #2]
   34dcc:	adds	r5, #1
   34dce:	b.n	34d6a <get_unit_mode_from_arg@@Base+0x36>
   34dd0:	ldr	r1, [pc, #320]	; (34f14 <get_unit_mode_from_arg@@Base+0x1e0>)
   34dd2:	mov	r0, r6
   34dd4:	add	r1, pc
   34dd6:	blx	8748 <strcmp@plt>
   34dda:	cbnz	r0, 34dec <get_unit_mode_from_arg@@Base+0xb8>
   34ddc:	mov.w	r1, #512	; 0x200
   34de0:	str	r0, [sp, #4]
   34de2:	add	r0, sp, #8
   34de4:	bl	348dc <units_set_mode@@Base>
   34de8:	ldr	r3, [sp, #4]
   34dea:	b.n	34e58 <get_unit_mode_from_arg@@Base+0x124>
   34dec:	ldr	r1, [pc, #296]	; (34f18 <get_unit_mode_from_arg@@Base+0x1e4>)
   34dee:	mov	r0, r6
   34df0:	add	r1, pc
   34df2:	blx	8748 <strcmp@plt>
   34df6:	cbnz	r0, 34e00 <get_unit_mode_from_arg@@Base+0xcc>
   34df8:	mov.w	r1, #768	; 0x300
   34dfc:	str	r0, [sp, #4]
   34dfe:	b.n	34de2 <get_unit_mode_from_arg@@Base+0xae>
   34e00:	ldr	r1, [pc, #280]	; (34f1c <get_unit_mode_from_arg@@Base+0x1e8>)
   34e02:	mov	r0, r6
   34e04:	add	r1, pc
   34e06:	blx	8748 <strcmp@plt>
   34e0a:	mov	r3, r0
   34e0c:	cbnz	r0, 34e1a <get_unit_mode_from_arg@@Base+0xe6>
   34e0e:	movs	r1, #2
   34e10:	str	r3, [sp, #4]
   34e12:	add	r0, sp, #8
   34e14:	bl	348e4 <units_set_base@@Base>
   34e18:	b.n	34de8 <get_unit_mode_from_arg@@Base+0xb4>
   34e1a:	ldr	r1, [pc, #260]	; (34f20 <get_unit_mode_from_arg@@Base+0x1ec>)
   34e1c:	mov	r0, r6
   34e1e:	add	r1, pc
   34e20:	blx	8748 <strcmp@plt>
   34e24:	mov	r3, r0
   34e26:	cbnz	r0, 34e2e <get_unit_mode_from_arg@@Base+0xfa>
   34e28:	movs	r1, #3
   34e2a:	str	r3, [sp, #4]
   34e2c:	b.n	34e12 <get_unit_mode_from_arg@@Base+0xde>
   34e2e:	ldr	r1, [pc, #244]	; (34f24 <get_unit_mode_from_arg@@Base+0x1f0>)
   34e30:	mov	r0, r6
   34e32:	add	r1, pc
   34e34:	blx	8748 <strcmp@plt>
   34e38:	mov	r3, r0
   34e3a:	cbnz	r0, 34e42 <get_unit_mode_from_arg@@Base+0x10e>
   34e3c:	movs	r1, #4
   34e3e:	str	r3, [sp, #4]
   34e40:	b.n	34e12 <get_unit_mode_from_arg@@Base+0xde>
   34e42:	ldr	r1, [pc, #228]	; (34f28 <get_unit_mode_from_arg@@Base+0x1f4>)
   34e44:	mov	r0, r6
   34e46:	add	r1, pc
   34e48:	blx	8748 <strcmp@plt>
   34e4c:	cbnz	r0, 34e5e <get_unit_mode_from_arg@@Base+0x12a>
   34e4e:	add	r0, sp, #8
   34e50:	movs	r1, #5
   34e52:	bl	348e4 <units_set_base@@Base>
   34e56:	movs	r3, #0
   34e58:	str.w	r3, [r4, r5, lsl #2]
   34e5c:	b.n	34dcc <get_unit_mode_from_arg@@Base+0x98>
   34e5e:	cmp.w	r8, #0
   34e62:	beq.n	34dcc <get_unit_mode_from_arg@@Base+0x98>
   34e64:	ldr	r1, [pc, #196]	; (34f2c <get_unit_mode_from_arg@@Base+0x1f8>)
   34e66:	mov	r0, r6
   34e68:	add	r1, pc
   34e6a:	blx	8748 <strcmp@plt>
   34e6e:	cmp	r0, #0
   34e70:	beq.n	34db2 <get_unit_mode_from_arg@@Base+0x7e>
   34e72:	ldr	r1, [pc, #188]	; (34f30 <get_unit_mode_from_arg@@Base+0x1fc>)
   34e74:	mov	r0, r6
   34e76:	add	r1, pc
   34e78:	blx	8748 <strcmp@plt>
   34e7c:	cmp	r0, #0
   34e7e:	beq.n	34dc2 <get_unit_mode_from_arg@@Base+0x8e>
   34e80:	ldr	r1, [pc, #176]	; (34f34 <get_unit_mode_from_arg@@Base+0x200>)
   34e82:	mov	r0, r6
   34e84:	add	r1, pc
   34e86:	blx	8748 <strcmp@plt>
   34e8a:	cbnz	r0, 34e92 <get_unit_mode_from_arg@@Base+0x15e>
   34e8c:	mov.w	r3, #768	; 0x300
   34e90:	b.n	34dc6 <get_unit_mode_from_arg@@Base+0x92>
   34e92:	ldr	r1, [pc, #164]	; (34f38 <get_unit_mode_from_arg@@Base+0x204>)
   34e94:	mov	r0, r6
   34e96:	add	r1, pc
   34e98:	blx	8748 <strcmp@plt>
   34e9c:	mov	r3, r0
   34e9e:	cmp	r0, #0
   34ea0:	beq.n	34e0e <get_unit_mode_from_arg@@Base+0xda>
   34ea2:	ldr	r1, [pc, #152]	; (34f3c <get_unit_mode_from_arg@@Base+0x208>)
   34ea4:	mov	r0, r6
   34ea6:	add	r1, pc
   34ea8:	blx	8748 <strcmp@plt>
   34eac:	mov	r3, r0
   34eae:	cmp	r0, #0
   34eb0:	beq.n	34e28 <get_unit_mode_from_arg@@Base+0xf4>
   34eb2:	ldr	r1, [pc, #140]	; (34f40 <get_unit_mode_from_arg@@Base+0x20c>)
   34eb4:	mov	r0, r6
   34eb6:	add	r1, pc
   34eb8:	blx	8748 <strcmp@plt>
   34ebc:	mov	r3, r0
   34ebe:	cmp	r0, #0
   34ec0:	beq.n	34e3c <get_unit_mode_from_arg@@Base+0x108>
   34ec2:	ldr	r1, [pc, #128]	; (34f44 <get_unit_mode_from_arg@@Base+0x210>)
   34ec4:	mov	r0, r6
   34ec6:	add	r1, pc
   34ec8:	blx	8748 <strcmp@plt>
   34ecc:	mov	r6, r0
   34ece:	cmp	r0, #0
   34ed0:	bne.w	34dcc <get_unit_mode_from_arg@@Base+0x98>
   34ed4:	add	r0, sp, #8
   34ed6:	movs	r1, #5
   34ed8:	bl	348e4 <units_set_base@@Base>
   34edc:	str.w	r6, [r4, r5, lsl #2]
   34ee0:	b.n	34dcc <get_unit_mode_from_arg@@Base+0x98>
   34ee2:	ldr.w	r2, [r4, r0, lsl #2]
   34ee6:	cbz	r2, 34eee <get_unit_mode_from_arg@@Base+0x1ba>
   34ee8:	str.w	r2, [r4, r3, lsl #2]
   34eec:	adds	r3, #1
   34eee:	adds	r0, #1
   34ef0:	b.n	34d74 <get_unit_mode_from_arg@@Base+0x40>
   34ef2:	mov	r3, r0
   34ef4:	b.n	34d74 <get_unit_mode_from_arg@@Base+0x40>
   34ef6:	add	sp, #20
   34ef8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34efc:	subs	r7, #238	; 0xee
   34efe:	movs	r3, r0
   34f00:	lsls	r4, r7, #9
   34f02:	movs	r0, r0
   34f04:	ldr	r0, [sp, #428]	; 0x1ac
   34f06:	movs	r0, r0
   34f08:	adds	r1, #68	; 0x44
   34f0a:	movs	r2, r0
   34f0c:	adds	r1, #72	; 0x48
   34f0e:	movs	r2, r0
   34f10:	subs	r7, #174	; 0xae
   34f12:	movs	r3, r0
   34f14:	adds	r0, #221	; 0xdd
   34f16:	movs	r2, r0
   34f18:	adds	r0, #199	; 0xc7
   34f1a:	movs	r2, r0
   34f1c:	adds	r0, #184	; 0xb8
   34f1e:	movs	r2, r0
   34f20:	adds	r0, #167	; 0xa7
   34f22:	movs	r2, r0
   34f24:	adds	r0, #156	; 0x9c
   34f26:	movs	r2, r0
   34f28:	adds	r0, #145	; 0x91
   34f2a:	movs	r2, r0
   34f2c:	adds	r0, #120	; 0x78
   34f2e:	movs	r2, r0
   34f30:	adds	r0, #109	; 0x6d
   34f32:	movs	r2, r0
   34f34:	adds	r0, #98	; 0x62
   34f36:	movs	r2, r0
   34f38:	adds	r0, #83	; 0x53
   34f3a:	movs	r2, r0
   34f3c:	adds	r0, #70	; 0x46
   34f3e:	movs	r2, r0
   34f40:	adds	r0, #57	; 0x39
   34f42:	movs	r2, r0
   34f44:	adds	r0, #44	; 0x2c
   34f46:	movs	r2, r0

00034f48 <div_factor@@Base>:
   34f48:	cmp	r2, #10
   34f4a:	push	{r3, r4, r5, lr}
   34f4c:	beq.n	34f68 <div_factor@@Base+0x20>
   34f4e:	asrs	r5, r2, #31
   34f50:	movs	r3, #0
   34f52:	muls	r1, r2
   34f54:	mla	r1, r0, r5, r1
   34f58:	umull	r4, r5, r2, r0
   34f5c:	movs	r2, #10
   34f5e:	add	r5, r1
   34f60:	mov	r1, r5
   34f62:	mov	r0, r4
   34f64:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   34f68:	pop	{r3, r4, r5, pc}

00034f6a <count_digits@@Base>:
   34f6a:	mov	r2, r0
   34f6c:	mov	r3, r1
   34f6e:	orrs.w	r1, r2, r3
   34f72:	push	{r4, r6, r7, lr}
   34f74:	beq.n	34f9c <count_digits@@Base+0x32>
   34f76:	movs	r4, #0
   34f78:	mov	r6, r2
   34f7a:	mov	r7, r3
   34f7c:	movs	r2, #10
   34f7e:	movs	r3, #0
   34f80:	mov	r0, r6
   34f82:	mov	r1, r7
   34f84:	bl	3c98c <btrfs_util_strerror@@Base+0x7fc>
   34f88:	cmp	r7, #0
   34f8a:	it	eq
   34f8c:	cmpeq	r6, #10
   34f8e:	add.w	r4, r4, #1
   34f92:	mov	r2, r0
   34f94:	mov	r3, r1
   34f96:	bcs.n	34f78 <count_digits@@Base+0xe>
   34f98:	mov	r0, r4
   34f9a:	pop	{r4, r6, r7, pc}
   34f9c:	movs	r4, #1
   34f9e:	b.n	34f98 <count_digits@@Base+0x2e>

00034fa0 <string_is_numerical@@Base>:
   34fa0:	cbz	r0, 34fc2 <string_is_numerical@@Base+0x22>
   34fa2:	ldrb	r3, [r0, #0]
   34fa4:	subs	r3, #48	; 0x30
   34fa6:	cmp	r3, #9
   34fa8:	bhi.n	34fc0 <string_is_numerical@@Base+0x20>
   34faa:	subs	r3, r0, #1
   34fac:	ldrb.w	r0, [r3, #1]!
   34fb0:	sub.w	r2, r0, #48	; 0x30
   34fb4:	cmp	r2, #9
   34fb6:	bls.n	34fac <string_is_numerical@@Base+0xc>
   34fb8:	clz	r0, r0
   34fbc:	lsrs	r0, r0, #5
   34fbe:	bx	lr
   34fc0:	movs	r0, #0
   34fc2:	bx	lr

00034fc4 <prefixcmp@@Base>:
   34fc4:	subs	r1, #1
   34fc6:	subs	r3, r0, #1
   34fc8:	ldrb.w	r0, [r1, #1]!
   34fcc:	cbz	r0, 34fd8 <prefixcmp@@Base+0x14>
   34fce:	ldrb.w	r2, [r3, #1]!
   34fd2:	cmp	r0, r2
   34fd4:	beq.n	34fc8 <prefixcmp@@Base+0x4>
   34fd6:	subs	r0, r0, r2
   34fd8:	bx	lr

00034fda <subvol_strip_mountpoint@@Base>:
   34fda:	push	{r4, r5, r6, lr}
   34fdc:	mov	r6, r0
   34fde:	mov	r5, r1
   34fe0:	blx	8b70 <strlen@plt>
   34fe4:	mov	r4, r0
   34fe6:	cbz	r0, 3501e <subvol_strip_mountpoint@@Base+0x44>
   34fe8:	mov	r2, r0
   34fea:	mov	r1, r5
   34fec:	mov	r0, r6
   34fee:	blx	8df0 <strncmp@plt>
   34ff2:	cbnz	r0, 35000 <subvol_strip_mountpoint@@Base+0x26>
   34ff4:	cmp	r4, #1
   34ff6:	mov	r3, r4
   34ff8:	beq.n	35010 <subvol_strip_mountpoint@@Base+0x36>
   34ffa:	ldrb	r2, [r5, r4]
   34ffc:	cmp	r2, #47	; 0x2f
   34ffe:	beq.n	35010 <subvol_strip_mountpoint@@Base+0x36>
   35000:	ldr	r0, [pc, #32]	; (35024 <subvol_strip_mountpoint@@Base+0x4a>)
   35002:	mov	r1, r6
   35004:	add	r0, pc
   35006:	bl	1a900 <__btrfs_error@@Base>
   3500a:	movs	r0, #1
   3500c:	blx	8b58 <exit@plt>
   35010:	add	r6, r4
   35012:	ldrb.w	r2, [r6, #-1]
   35016:	cmp	r2, #47	; 0x2f
   35018:	it	ne
   3501a:	addne	r3, r4, #1
   3501c:	add	r5, r3
   3501e:	mov	r0, r5
   35020:	pop	{r4, r5, r6, pc}
   35022:	nop
   35024:	cmp	r6, #241	; 0xf1
   35026:	movs	r2, r0

00035028 <init_rand_seed@@Base>:
   35028:	ldr	r3, [pc, #24]	; (35044 <init_rand_seed@@Base+0x1c>)
   3502a:	mvns	r2, r0
   3502c:	lsrs	r0, r0, #16
   3502e:	add	r3, pc
   35030:	orr.w	r0, r0, r1, lsl #16
   35034:	mvns	r1, r1
   35036:	mvns	r0, r0
   35038:	strh	r2, [r3, #0]
   3503a:	strh	r0, [r3, #2]
   3503c:	movs	r2, #1
   3503e:	strh	r1, [r3, #4]
   35040:	str	r2, [r3, #8]
   35042:	bx	lr
   35044:	ldrsb	r6, [r0, r1]
   35046:	movs	r3, r0

00035048 <rand_u32@@Base>:
   35048:	push	{r3, lr}
   3504a:	ldr	r3, [pc, #24]	; (35064 <rand_u32@@Base+0x1c>)
   3504c:	add	r3, pc
   3504e:	ldr	r3, [r3, #8]
   35050:	cbnz	r3, 35056 <rand_u32@@Base+0xe>
   35052:	bl	33300 <test_issubvolname@@Base+0xd2>
   35056:	ldr	r0, [pc, #16]	; (35068 <rand_u32@@Base+0x20>)
   35058:	ldmia.w	sp!, {r3, lr}
   3505c:	add	r0, pc
   3505e:	b.w	8894 <jrand48@plt>
   35062:	nop
   35064:	ldrsb	r0, [r5, r0]
   35066:	movs	r3, r0
   35068:	ldrsb	r0, [r3, r0]
   3506a:	movs	r3, r0

0003506c <rand_range@@Base>:
   3506c:	ldr	r3, [pc, #32]	; (35090 <rand_range@@Base+0x24>)
   3506e:	push	{r4, lr}
   35070:	add	r3, pc
   35072:	mov	r4, r0
   35074:	ldr	r3, [r3, #8]
   35076:	cbnz	r3, 3507c <rand_range@@Base+0x10>
   35078:	bl	33300 <test_issubvolname@@Base+0xd2>
   3507c:	ldr	r0, [pc, #20]	; (35094 <rand_range@@Base+0x28>)
   3507e:	add	r0, pc
   35080:	blx	8898 <jrand48@plt+0x4>
   35084:	mov	r1, r4
   35086:	bl	3c404 <btrfs_util_strerror@@Base+0x274>
   3508a:	mov	r0, r1
   3508c:	pop	{r4, pc}
   3508e:	nop
   35090:	ldrsb	r4, [r0, r0]
   35092:	movs	r3, r0
   35094:	strb	r6, [r6, r7]
   35096:	movs	r3, r0

00035098 <rand_int@@Base>:
   35098:	b.w	35048 <rand_u32@@Base>

0003509c <rand_u64@@Base>:
   3509c:	push	{r3, r4, r5, lr}
   3509e:	bl	35048 <rand_u32@@Base>
   350a2:	movs	r4, #0
   350a4:	mov	r5, r0
   350a6:	bl	35048 <rand_u32@@Base>
   350aa:	adds	r0, r4, r0
   350ac:	adc.w	r1, r5, #0
   350b0:	pop	{r3, r4, r5, pc}

000350b2 <rand_u16@@Base>:
   350b2:	push	{r3, lr}
   350b4:	bl	35048 <rand_u32@@Base>
   350b8:	uxth	r0, r0
   350ba:	pop	{r3, pc}

000350bc <rand_u8@@Base>:
   350bc:	push	{r3, lr}
   350be:	bl	35048 <rand_u32@@Base>
   350c2:	uxtb	r0, r0
   350c4:	pop	{r3, pc}

000350c6 <btrfs_config_init@@Base>:
   350c6:	ldr	r3, [pc, #12]	; (350d4 <btrfs_config_init@@Base+0xe>)
   350c8:	ldr	r2, [pc, #12]	; (350d8 <btrfs_config_init@@Base+0x12>)
   350ca:	add	r3, pc
   350cc:	ldr	r3, [r3, r2]
   350ce:	movs	r2, #4
   350d0:	str	r2, [r3, #0]
   350d2:	bx	lr
   350d4:	subs	r4, #102	; 0x66
   350d6:	movs	r3, r0
   350d8:	lsls	r0, r7, #9
	...

000350dc <total_memory@@Base>:
   350dc:	ldr	r2, [pc, #72]	; (35128 <total_memory@@Base+0x4c>)
   350de:	ldr	r3, [pc, #76]	; (3512c <total_memory@@Base+0x50>)
   350e0:	add	r2, pc
   350e2:	push	{lr}
   350e4:	sub	sp, #76	; 0x4c
   350e6:	ldr	r3, [r2, r3]
   350e8:	add	r0, sp, #4
   350ea:	ldr	r3, [r3, #0]
   350ec:	str	r3, [sp, #68]	; 0x44
   350ee:	mov.w	r3, #0
   350f2:	blx	8a84 <sysinfo@plt>
   350f6:	cmp	r0, #0
   350f8:	bge.n	3511a <total_memory@@Base+0x3e>
   350fa:	ldr	r0, [pc, #52]	; (35130 <total_memory@@Base+0x54>)
   350fc:	add	r0, pc
   350fe:	bl	1a900 <__btrfs_error@@Base>
   35102:	mov.w	r0, #4294967295	; 0xffffffff
   35106:	ldr	r2, [pc, #44]	; (35134 <total_memory@@Base+0x58>)
   35108:	ldr	r3, [pc, #32]	; (3512c <total_memory@@Base+0x50>)
   3510a:	add	r2, pc
   3510c:	ldr	r3, [r2, r3]
   3510e:	ldr	r2, [r3, #0]
   35110:	ldr	r3, [sp, #68]	; 0x44
   35112:	eors	r2, r3
   35114:	beq.n	35122 <total_memory@@Base+0x46>
   35116:	blx	88e4 <__stack_chk_fail@plt>
   3511a:	ldr	r3, [sp, #20]
   3511c:	ldr	r0, [sp, #56]	; 0x38
   3511e:	muls	r0, r3
   35120:	b.n	35106 <total_memory@@Base+0x2a>
   35122:	add	sp, #76	; 0x4c
   35124:	ldr.w	pc, [sp], #4
   35128:	subs	r4, #80	; 0x50
   3512a:	movs	r3, r0
   3512c:	lsls	r4, r7, #9
   3512e:	movs	r0, r0
   35130:	cmp	r6, #16
   35132:	movs	r2, r0
   35134:	subs	r4, #38	; 0x26
   35136:	movs	r3, r0

00035138 <print_device_info@@Base>:
   35138:	push	{r0, r1, r4, lr}
   3513a:	mov	r2, r1
   3513c:	mov	r4, r0
   3513e:	cbz	r1, 3514a <print_device_info@@Base+0x12>
   35140:	ldr	r1, [pc, #28]	; (35160 <print_device_info@@Base+0x28>)
   35142:	movs	r0, #1
   35144:	add	r1, pc
   35146:	blx	8c6c <__printf_chk@plt+0x4>
   3514a:	ldr	r3, [r4, #32]
   3514c:	movs	r0, #1
   3514e:	ldr	r1, [pc, #20]	; (35164 <print_device_info@@Base+0x2c>)
   35150:	str	r3, [sp, #0]
   35152:	add	r1, pc
   35154:	ldrd	r2, r3, [r4, #64]	; 0x40
   35158:	blx	8c6c <__printf_chk@plt+0x4>
   3515c:	add	sp, #8
   3515e:	pop	{r4, pc}
   35160:	usat16	r0, #0, r3
   35164:	cmp	r5, #214	; 0xd6
   35166:	movs	r2, r0

00035168 <print_all_devices@@Base>:
   35168:	push	{r4, r5, r6, lr}
   3516a:	mov	r4, r0
   3516c:	ldr	r0, [pc, #36]	; (35194 <print_all_devices@@Base+0x2c>)
   3516e:	ldr	r6, [pc, #40]	; (35198 <print_all_devices@@Base+0x30>)
   35170:	add	r0, pc
   35172:	blx	8a78 <puts@plt+0x4>
   35176:	ldr	r5, [r4, #0]
   35178:	add	r6, pc
   3517a:	cmp	r5, r4
   3517c:	bne.n	35188 <print_all_devices@@Base+0x20>
   3517e:	ldmia.w	sp!, {r4, r5, r6, lr}
   35182:	movs	r0, #10
   35184:	b.w	8c04 <putchar@plt>
   35188:	mov	r0, r5
   3518a:	mov	r1, r6
   3518c:	bl	35138 <print_device_info@@Base>
   35190:	ldr	r5, [r5, #0]
   35192:	b.n	3517a <print_all_devices@@Base+0x12>
   35194:	cmp	r5, #214	; 0xd6
   35196:	movs	r2, r0
   35198:	ldr	r0, [sp, #180]	; 0xb4
   3519a:	movs	r0, r0
   3519c:	ldr	r2, [pc, #284]	; (352bc <print_all_devices@@Base+0x154>)
   3519e:	ldr	r3, [pc, #288]	; (352c0 <print_all_devices@@Base+0x158>)
   351a0:	push	{r4, r5, r6, r7, lr}
   351a2:	add	r2, pc
   351a4:	sub.w	sp, sp, #516	; 0x204
   351a8:	mov	r4, r1
   351aa:	ldr	r3, [r2, r3]
   351ac:	mov	r5, sp
   351ae:	ldr	r1, [pc, #264]	; (352b8 <print_all_devices@@Base+0x150>)
   351b0:	mov	r2, r5
   351b2:	ldr	r3, [r3, #0]
   351b4:	str	r3, [sp, #508]	; 0x1fc
   351b6:	mov.w	r3, #0
   351ba:	blx	89cc <ioctl@plt>
   351be:	adds	r0, #1
   351c0:	beq.n	352ac <print_all_devices@@Base+0x144>
   351c2:	ldrd	r2, r3, [sp]
   351c6:	add	r7, sp, #296	; 0x128
   351c8:	add.w	r6, r4, #32
   351cc:	strd	r2, r3, [r4]
   351d0:	ldrd	r2, r3, [r5, #264]	; 0x108
   351d4:	strd	r2, r3, [r4, #8]
   351d8:	ldrd	r2, r3, [r5, #272]	; 0x110
   351dc:	strd	r2, r3, [r4, #16]
   351e0:	ldrd	r2, r3, [r5, #288]	; 0x120
   351e4:	strd	r2, r3, [r4, #24]
   351e8:	ldrd	r2, r3, [r5, #280]	; 0x118
   351ec:	strd	r2, r3, [r4, #80]	; 0x50
   351f0:	add	r2, sp, #312	; 0x138
   351f2:	mov	r3, r7
   351f4:	adds	r6, #8
   351f6:	ldmia	r3!, {r0, r1}
   351f8:	cmp	r3, r2
   351fa:	str.w	r0, [r6, #-8]
   351fe:	mov	r7, r3
   35200:	str.w	r1, [r6, #-4]
   35204:	bne.n	351f2 <print_all_devices@@Base+0x8a>
   35206:	add.w	r7, r4, #48	; 0x30
   3520a:	add	r3, sp, #328	; 0x148
   3520c:	mov	r6, r2
   3520e:	adds	r7, #8
   35210:	ldmia	r6!, {r0, r1}
   35212:	cmp	r6, r3
   35214:	str.w	r0, [r7, #-8]
   35218:	mov	r2, r6
   3521a:	str.w	r1, [r7, #-4]
   3521e:	bne.n	3520c <print_all_devices@@Base+0xa4>
   35220:	add.w	r6, r4, #64	; 0x40
   35224:	add	r7, sp, #344	; 0x158
   35226:	mov	r2, r3
   35228:	adds	r6, #8
   3522a:	ldmia	r2!, {r0, r1}
   3522c:	cmp	r2, r7
   3522e:	str.w	r0, [r6, #-8]
   35232:	mov	r3, r2
   35234:	str.w	r1, [r6, #-4]
   35238:	bne.n	35226 <print_all_devices@@Base+0xbe>
   3523a:	ldrd	r2, r3, [r5, #344]	; 0x158
   3523e:	movs	r0, #0
   35240:	strd	r2, r3, [r4, #88]	; 0x58
   35244:	ldrd	r2, r3, [r5, #352]	; 0x160
   35248:	strd	r2, r3, [r4, #96]	; 0x60
   3524c:	ldrd	r2, r3, [r5, #360]	; 0x168
   35250:	strd	r2, r3, [r4, #104]	; 0x68
   35254:	ldrd	r2, r3, [r5, #368]	; 0x170
   35258:	strd	r2, r3, [r4, #112]	; 0x70
   3525c:	ldr.w	r3, [r5, #376]	; 0x178
   35260:	str	r3, [r4, #120]	; 0x78
   35262:	ldr.w	r3, [r5, #384]	; 0x180
   35266:	str	r3, [r4, #124]	; 0x7c
   35268:	ldr.w	r3, [r5, #392]	; 0x188
   3526c:	str.w	r3, [r4, #128]	; 0x80
   35270:	ldr.w	r3, [r5, #400]	; 0x190
   35274:	str.w	r3, [r4, #132]	; 0x84
   35278:	ldr.w	r3, [r5, #408]	; 0x198
   3527c:	str.w	r3, [r4, #136]	; 0x88
   35280:	ldr.w	r3, [r5, #416]	; 0x1a0
   35284:	str.w	r3, [r4, #140]	; 0x8c
   35288:	ldr.w	r3, [r5, #424]	; 0x1a8
   3528c:	str.w	r3, [r4, #144]	; 0x90
   35290:	ldr.w	r3, [r5, #432]	; 0x1b0
   35294:	str.w	r3, [r4, #148]	; 0x94
   35298:	ldr	r2, [pc, #40]	; (352c4 <print_all_devices@@Base+0x15c>)
   3529a:	ldr	r3, [pc, #36]	; (352c0 <print_all_devices@@Base+0x158>)
   3529c:	add	r2, pc
   3529e:	ldr	r3, [r2, r3]
   352a0:	ldr	r2, [r3, #0]
   352a2:	ldr	r3, [sp, #508]	; 0x1fc
   352a4:	eors	r2, r3
   352a6:	beq.n	352b0 <print_all_devices@@Base+0x148>
   352a8:	blx	88e4 <__stack_chk_fail@plt>
   352ac:	movs	r0, #23
   352ae:	b.n	35298 <print_all_devices@@Base+0x130>
   352b0:	add.w	sp, sp, #516	; 0x204
   352b4:	pop	{r4, r5, r6, r7, pc}
   352b6:	nop
   352b8:	str	r4, [sp, #240]	; 0xf0
   352ba:	strh	r0, [r7, #14]
   352bc:	subs	r3, #142	; 0x8e
   352be:	movs	r3, r0
   352c0:	lsls	r4, r7, #9
   352c2:	movs	r0, r0
   352c4:	subs	r2, #148	; 0x94
   352c6:	movs	r3, r0
   352c8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   352cc:	mov	r7, r0
   352ce:	mov	r0, r1
   352d0:	mov	r9, r1
   352d2:	mov	r6, r2
   352d4:	mov	r8, r3
   352d6:	blx	8b70 <strlen@plt>
   352da:	mov	r5, r0
   352dc:	cmp	r5, #1
   352de:	bls.n	352ea <print_all_devices@@Base+0x182>
   352e0:	subs	r3, r5, #1
   352e2:	ldrb.w	r2, [r9, r3]
   352e6:	cmp	r2, #47	; 0x2f
   352e8:	beq.n	3533e <print_all_devices@@Base+0x1d6>
   352ea:	adds	r0, r5, #1
   352ec:	blx	8a94 <malloc@plt+0x4>
   352f0:	mov	r4, r0
   352f2:	cmp	r0, #0
   352f4:	beq.n	3538c <print_all_devices@@Base+0x224>
   352f6:	mov	r2, r5
   352f8:	mov	r1, r9
   352fa:	blx	8830 <memcpy@plt+0x4>
   352fe:	mov.w	r9, #0
   35302:	mov	r2, r5
   35304:	strb.w	r9, [r4, r5]
   35308:	movs	r1, #47	; 0x2f
   3530a:	mov	r0, r4
   3530c:	blx	8b94 <memrchr@plt>
   35310:	cmp	r4, r0
   35312:	mov	r5, r0
   35314:	bne.n	35342 <print_all_devices@@Base+0x1da>
   35316:	ldr.w	sl, [pc, #120]	; 35390 <print_all_devices@@Base+0x228>
   3531a:	adds	r5, r4, #1
   3531c:	add	sl, pc
   3531e:	mov	r0, r5
   35320:	blx	8b70 <strlen@plt>
   35324:	cmp	r0, r8
   35326:	mov	r9, r0
   35328:	bcc.n	35356 <print_all_devices@@Base+0x1ee>
   3532a:	mov	r0, r4
   3532c:	blx	87cc <free@plt+0x4>
   35330:	blx	8bac <__errno_location@plt>
   35334:	movs	r3, #36	; 0x24
   35336:	str	r3, [r0, #0]
   35338:	movs	r0, #3
   3533a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   3533e:	mov	r5, r3
   35340:	b.n	352dc <print_all_devices@@Base+0x174>
   35342:	cbz	r0, 3534c <print_all_devices@@Base+0x1e4>
   35344:	mov	sl, r4
   35346:	strb.w	r9, [r5], #1
   3534a:	b.n	3531e <print_all_devices@@Base+0x1b6>
   3534c:	ldr.w	sl, [pc, #68]	; 35394 <print_all_devices@@Base+0x22c>
   35350:	mov	r5, r4
   35352:	add	sl, pc
   35354:	b.n	3531e <print_all_devices@@Base+0x1b6>
   35356:	mov	r2, r0
   35358:	mov	r1, r5
   3535a:	mov	r0, r6
   3535c:	movs	r5, #0
   3535e:	blx	8830 <memcpy@plt+0x4>
   35362:	mov.w	r2, #16384	; 0x4000
   35366:	mov	r1, sl
   35368:	mov	r0, r7
   3536a:	strb.w	r5, [r6, r9]
   3536e:	blx	88d8 <openat@plt>
   35372:	ldr	r3, [sp, #32]
   35374:	str	r0, [r3, #0]
   35376:	adds	r0, #1
   35378:	mov	r0, r4
   3537a:	bne.n	35384 <print_all_devices@@Base+0x21c>
   3537c:	blx	87cc <free@plt+0x4>
   35380:	movs	r0, #7
   35382:	b.n	3533a <print_all_devices@@Base+0x1d2>
   35384:	blx	87cc <free@plt+0x4>
   35388:	mov	r0, r5
   3538a:	b.n	3533a <print_all_devices@@Base+0x1d2>
   3538c:	movs	r0, #2
   3538e:	b.n	3533a <print_all_devices@@Base+0x1d2>
   35390:	add	r1, sp, #196	; 0xc4
   35392:	movs	r0, r0
   35394:	ldrb	r7, [r7, #10]
   35396:	movs	r0, r0
   35398:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3539c:	sub.w	sp, sp, #4096	; 0x1000
   353a0:	sub	sp, #20
   353a2:	ldr	r1, [pc, #528]	; (355b4 <print_all_devices@@Base+0x44c>)
   353a4:	mov	r6, r2
   353a6:	mov	r7, r3
   353a8:	ldr	r2, [pc, #524]	; (355b8 <print_all_devices@@Base+0x450>)
   353aa:	add.w	r3, sp, #4128	; 0x1020
   353ae:	add	r1, pc
   353b0:	add.w	r8, sp, #16
   353b4:	sub.w	r5, r8, #8
   353b8:	ldr	r4, [r3, #24]
   353ba:	ldr	r2, [r1, r2]
   353bc:	adds	r3, #24
   353be:	add.w	r3, sp, #4096	; 0x1000
   353c2:	mov	r9, r0
   353c4:	ldr	r2, [r2, #0]
   353c6:	str	r2, [r3, #12]
   353c8:	mov.w	r2, #0
   353cc:	mov	r0, r5
   353ce:	mov.w	r2, #4096	; 0x1000
   353d2:	movs	r1, #0
   353d4:	adds	r3, #12
   353d6:	blx	8bf8 <memset@plt+0x4>
   353da:	movs	r2, #1
   353dc:	movs	r3, #0
   353de:	strd	r6, r7, [r5, #16]
   353e2:	strd	r2, r3, [r8, #-8]
   353e6:	mov.w	r2, #4294967295	; 0xffffffff
   353ea:	mov.w	r3, #4294967295	; 0xffffffff
   353ee:	strd	r6, r7, [r5, #8]
   353f2:	strd	r2, r3, [r5, #32]
   353f6:	strd	r2, r3, [r5, #48]	; 0x30
   353fa:	movs	r2, #132	; 0x84
   353fc:	movs	r3, #144	; 0x90
   353fe:	strd	r2, r3, [r5, #56]	; 0x38
   35402:	cbnz	r4, 35456 <print_all_devices@@Base+0x2ee>
   35404:	movs	r6, #0
   35406:	movs	r3, #132	; 0x84
   35408:	str	r3, [r5, #60]	; 0x3c
   3540a:	ldr.w	fp, [pc, #432]	; 355bc <print_all_devices@@Base+0x454>
   3540e:	movs	r2, #0
   35410:	movs	r7, #1
   35412:	mov	ip, r2
   35414:	mov.w	sl, #4096	; 0x1000
   35418:	ldr	r3, [r5, #64]	; 0x40
   3541a:	cmp	r3, ip
   3541c:	bhi.n	35486 <print_all_devices@@Base+0x31e>
   3541e:	mov	r2, r5
   35420:	mov	r1, fp
   35422:	mov	r0, r9
   35424:	str.w	sl, [r5, #64]	; 0x40
   35428:	blx	89cc <ioctl@plt>
   3542c:	adds	r0, #1
   3542e:	beq.w	355a4 <print_all_devices@@Base+0x43c>
   35432:	ldr	r3, [r5, #64]	; 0x40
   35434:	cbnz	r3, 35482 <print_all_devices@@Base+0x31a>
   35436:	cbnz	r7, 35476 <print_all_devices@@Base+0x30e>
   35438:	movs	r0, #0
   3543a:	ldr	r1, [pc, #388]	; (355c0 <print_all_devices@@Base+0x458>)
   3543c:	add.w	r3, sp, #4096	; 0x1000
   35440:	ldr	r2, [pc, #372]	; (355b8 <print_all_devices@@Base+0x450>)
   35442:	adds	r3, #12
   35444:	add	r1, pc
   35446:	ldr	r2, [r1, r2]
   35448:	ldr	r1, [r2, #0]
   3544a:	ldr	r2, [r3, #0]
   3544c:	eors	r1, r2
   3544e:	beq.w	355a8 <print_all_devices@@Base+0x440>
   35452:	blx	88e4 <__stack_chk_fail@plt>
   35456:	cmp	r7, #0
   35458:	mov.w	r2, #0
   3545c:	it	eq
   3545e:	cmpeq	r6, #5
   35460:	mov.w	r3, #0
   35464:	strd	r6, r7, [r4]
   35468:	strd	r2, r3, [r4, #8]
   3546c:	strd	r2, r3, [r4, #16]
   35470:	beq.n	35404 <print_all_devices@@Base+0x29c>
   35472:	movs	r6, #1
   35474:	b.n	3540a <print_all_devices@@Base+0x2a2>
   35476:	blx	8bac <__errno_location@plt>
   3547a:	movs	r3, #2
   3547c:	str	r3, [r0, #0]
   3547e:	movs	r0, #6
   35480:	b.n	3543a <print_all_devices@@Base+0x2d2>
   35482:	movs	r2, #0
   35484:	mov	ip, r2
   35486:	add	r3, sp, #112	; 0x70
   35488:	add	r3, r2
   3548a:	ldr	r1, [r3, #24]
   3548c:	cmp	r1, #132	; 0x84
   3548e:	bne.n	35576 <print_all_devices@@Base+0x40e>
   35490:	cmp	r4, #0
   35492:	beq.n	35558 <print_all_devices@@Base+0x3f0>
   35494:	ldr.w	r0, [r3, #240]	; 0xf0
   35498:	addw	r7, r3, #295	; 0x127
   3549c:	ldr.w	r1, [r3, #244]	; 0xf4
   354a0:	strd	r0, r1, [r4, #24]
   354a4:	addw	r1, r3, #279	; 0x117
   354a8:	add.w	r0, r4, #32
   354ac:	ldr.w	lr, [r1], #4
   354b0:	cmp	r1, r7
   354b2:	str.w	lr, [r0], #4
   354b6:	bne.n	354ac <print_all_devices@@Base+0x344>
   354b8:	add.w	r0, r4, #48	; 0x30
   354bc:	addw	r7, r3, #311	; 0x137
   354c0:	ldr.w	lr, [r1], #4
   354c4:	cmp	r1, r7
   354c6:	str.w	lr, [r0], #4
   354ca:	bne.n	354c0 <print_all_devices@@Base+0x358>
   354cc:	add.w	r0, r4, #64	; 0x40
   354d0:	addw	r7, r3, #327	; 0x147
   354d4:	ldr.w	lr, [r1], #4
   354d8:	cmp	r1, r7
   354da:	str.w	lr, [r0], #4
   354de:	bne.n	354d4 <print_all_devices@@Base+0x36c>
   354e0:	ldr.w	r0, [r3, #192]	; 0xc0
   354e4:	ldr.w	r1, [r3, #196]	; 0xc4
   354e8:	strd	r0, r1, [r4, #80]	; 0x50
   354ec:	ldr.w	r0, [r3, #327]	; 0x147
   354f0:	ldr.w	r1, [r3, #331]	; 0x14b
   354f4:	strd	r0, r1, [r4, #88]	; 0x58
   354f8:	ldr.w	r0, [r3, #335]	; 0x14f
   354fc:	ldr.w	r1, [r3, #339]	; 0x153
   35500:	strd	r0, r1, [r4, #96]	; 0x60
   35504:	ldr.w	r0, [r3, #343]	; 0x157
   35508:	ldr.w	r1, [r3, #347]	; 0x15b
   3550c:	strd	r0, r1, [r4, #104]	; 0x68
   35510:	ldr.w	r1, [r3, #355]	; 0x163
   35514:	ldr.w	r0, [r3, #351]	; 0x15f
   35518:	strd	r0, r1, [r4, #112]	; 0x70
   3551c:	ldr.w	r1, [r3, #359]	; 0x167
   35520:	str	r1, [r4, #120]	; 0x78
   35522:	ldr.w	r1, [r3, #367]	; 0x16f
   35526:	str	r1, [r4, #124]	; 0x7c
   35528:	ldr.w	r1, [r3, #371]	; 0x173
   3552c:	str.w	r1, [r4, #128]	; 0x80
   35530:	ldr.w	r1, [r3, #379]	; 0x17b
   35534:	str.w	r1, [r4, #132]	; 0x84
   35538:	ldr.w	r1, [r3, #383]	; 0x17f
   3553c:	str.w	r1, [r4, #136]	; 0x88
   35540:	ldr.w	r1, [r3, #391]	; 0x187
   35544:	str.w	r1, [r4, #140]	; 0x8c
   35548:	ldr.w	r1, [r3, #395]	; 0x18b
   3554c:	str.w	r1, [r4, #144]	; 0x90
   35550:	ldr.w	r1, [r3, #403]	; 0x193
   35554:	str.w	r1, [r4, #148]	; 0x94
   35558:	movs	r7, #0
   3555a:	movs	r1, #144	; 0x90
   3555c:	str	r1, [r5, #56]	; 0x38
   3555e:	ldr	r3, [r3, #28]
   35560:	adds	r2, #32
   35562:	add.w	ip, ip, #1
   35566:	add	r2, r3
   35568:	cmp	r7, #0
   3556a:	bne.w	35418 <print_all_devices@@Base+0x2b0>
   3556e:	cmp	r6, #0
   35570:	bne.w	35418 <print_all_devices@@Base+0x2b0>
   35574:	b.n	35438 <print_all_devices@@Base+0x2d0>
   35576:	cmp	r1, #144	; 0x90
   35578:	bne.n	3555e <print_all_devices@@Base+0x3f6>
   3557a:	cbz	r4, 3559a <print_all_devices@@Base+0x432>
   3557c:	mov	r1, r3
   3557e:	sub.w	r6, r8, #16
   35582:	ldr.w	r0, [r1, #16]!
   35586:	ldr	r1, [r1, #4]
   35588:	stmia	r6!, {r0, r1}
   3558a:	ldrd	r0, r1, [r8, #-16]
   3558e:	strd	r0, r1, [r4, #8]
   35592:	ldr	r0, [r3, #32]
   35594:	ldr	r1, [r3, #36]	; 0x24
   35596:	strd	r0, r1, [r4, #16]
   3559a:	mov.w	r1, #4294967295	; 0xffffffff
   3559e:	movs	r6, #0
   355a0:	str	r1, [r5, #56]	; 0x38
   355a2:	b.n	3555e <print_all_devices@@Base+0x3f6>
   355a4:	movs	r0, #12
   355a6:	b.n	3543a <print_all_devices@@Base+0x2d2>
   355a8:	add.w	sp, sp, #4096	; 0x1000
   355ac:	add	sp, #20
   355ae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   355b2:	nop
   355b4:	subs	r1, #130	; 0x82
   355b6:	movs	r3, r0
   355b8:	lsls	r4, r7, #9
   355ba:	movs	r0, r0
   355bc:	str	r4, [sp, #68]	; 0x44
   355be:	beq.n	355c2 <print_all_devices@@Base+0x45a>
   355c0:	subs	r0, #236	; 0xec
   355c2:	movs	r3, r0
   355c4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   355c8:	mov	r9, r3
   355ca:	ldr	r3, [r0, #20]
   355cc:	mov	r5, r2
   355ce:	movw	r2, #4112	; 0x1010
   355d2:	ldr	r6, [sp, #40]	; 0x28
   355d4:	mov	r4, r0
   355d6:	mov	r8, r1
   355d8:	muls	r2, r3
   355da:	ldr	r3, [r0, #16]
   355dc:	sub.w	r2, r2, #4096	; 0x1000
   355e0:	subs	r2, #16
   355e2:	add.w	sl, r3, r2
   355e6:	movw	r3, #4108	; 0x100c
   355ea:	ldr.w	r3, [sl, r3]
   355ee:	cbz	r3, 35664 <print_all_devices@@Base+0x4fc>
   355f0:	cbz	r6, 35664 <print_all_devices@@Base+0x4fc>
   355f2:	adds	r2, r3, #1
   355f4:	adds	r7, r2, r6
   355f6:	cbz	r3, 355fe <print_all_devices@@Base+0x496>
   355f8:	cbnz	r6, 355fe <print_all_devices@@Base+0x496>
   355fa:	cbz	r5, 355fe <print_all_devices@@Base+0x496>
   355fc:	adds	r7, r2, #1
   355fe:	ldr	r3, [r4, #32]
   35600:	add	r7, r5
   35602:	add.w	fp, r7, #1
   35606:	cmp	fp, r3
   35608:	bls.n	35618 <print_all_devices@@Base+0x4b0>
   3560a:	ldr	r0, [r4, #28]
   3560c:	mov	r1, fp
   3560e:	blx	8924 <realloc@plt+0x4>
   35612:	cbz	r0, 35668 <print_all_devices@@Base+0x500>
   35614:	strd	r0, fp, [r4, #28]
   35618:	movw	r3, #4108	; 0x100c
   3561c:	ldr	r1, [r4, #28]
   3561e:	ldr.w	r2, [sl, r3]
   35622:	adds	r3, r1, r2
   35624:	cbz	r2, 3562e <print_all_devices@@Base+0x4c6>
   35626:	cbz	r6, 3562e <print_all_devices@@Base+0x4c6>
   35628:	adds	r3, #1
   3562a:	movs	r0, #47	; 0x2f
   3562c:	strb	r0, [r1, r2]
   3562e:	mov	r2, r6
   35630:	mov	r1, r9
   35632:	mov	r0, r3
   35634:	blx	8830 <memcpy@plt+0x4>
   35638:	movw	r2, #4108	; 0x100c
   3563c:	ldr.w	r2, [sl, r2]
   35640:	adds	r4, r0, r6
   35642:	cbz	r2, 3564e <print_all_devices@@Base+0x4e6>
   35644:	cbnz	r6, 3564e <print_all_devices@@Base+0x4e6>
   35646:	cbz	r5, 3564e <print_all_devices@@Base+0x4e6>
   35648:	movs	r2, #47	; 0x2f
   3564a:	strb	r2, [r4, #0]
   3564c:	adds	r4, r0, #1
   3564e:	mov	r2, r5
   35650:	mov	r1, r8
   35652:	mov	r0, r4
   35654:	blx	8830 <memcpy@plt+0x4>
   35658:	ldr	r3, [sp, #44]	; 0x2c
   3565a:	movs	r0, #0
   3565c:	strb	r0, [r4, r5]
   3565e:	str	r7, [r3, #0]
   35660:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35664:	mov	r2, r3
   35666:	b.n	355f4 <print_all_devices@@Base+0x48c>
   35668:	movs	r0, #2
   3566a:	b.n	35660 <print_all_devices@@Base+0x4f8>
   3566c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   35670:	mov	r4, r1
   35672:	ldr	r1, [pc, #172]	; (35720 <print_all_devices@@Base+0x5b8>)
   35674:	sub.w	sp, sp, #4128	; 0x1020
   35678:	mov	r5, r2
   3567a:	ldr	r2, [pc, #168]	; (35724 <print_all_devices@@Base+0x5bc>)
   3567c:	add	r1, pc
   3567e:	mov	r9, r3
   35680:	add.w	r3, sp, #4160	; 0x1040
   35684:	add	r7, sp, #24
   35686:	ldr	r2, [r1, r2]
   35688:	mov	r6, r0
   3568a:	ldr.w	sl, [r3]
   3568e:	add.w	r3, sp, #4096	; 0x1000
   35692:	ldr	r2, [r2, #0]
   35694:	str	r2, [r3, #28]
   35696:	mov.w	r2, #0
   3569a:	mov	r0, r7
   3569c:	mov.w	r2, #4096	; 0x1000
   356a0:	movs	r1, #0
   356a2:	adds	r3, #28
   356a4:	blx	8bf8 <memset@plt+0x4>
   356a8:	mov	r1, r4
   356aa:	add.w	r8, sp, #32
   356ae:	ldr.w	r0, [r1, #8]!
   356b2:	sub.w	r3, r8, #16
   356b6:	ldr	r1, [r1, #4]
   356b8:	stmia	r3!, {r0, r1}
   356ba:	ldrd	r2, r3, [r8, #-16]
   356be:	ldr	r1, [pc, #92]	; (3571c <print_all_devices@@Base+0x5b4>)
   356c0:	ldr	r0, [r6, #4]
   356c2:	strd	r2, r3, [r8, #-8]
   356c6:	ldr	r2, [r5, #0]
   356c8:	ldr	r3, [r5, #4]
   356ca:	str	r2, [r7, #8]
   356cc:	mov	r2, r7
   356ce:	str.w	r3, [r8, #4]
   356d2:	blx	89cc <ioctl@plt>
   356d6:	adds	r0, #1
   356d8:	beq.n	3570e <print_all_devices@@Base+0x5a6>
   356da:	add	r3, sp, #40	; 0x28
   356dc:	str	r3, [sp, #12]
   356de:	mov	r0, r3
   356e0:	blx	8b70 <strlen@plt>
   356e4:	ldr	r3, [sp, #12]
   356e6:	ldrh	r2, [r5, #16]
   356e8:	mov	r1, r9
   356ea:	strd	r0, sl, [sp]
   356ee:	mov	r0, r6
   356f0:	bl	355c4 <print_all_devices@@Base+0x45c>
   356f4:	ldr	r1, [pc, #48]	; (35728 <print_all_devices@@Base+0x5c0>)
   356f6:	add.w	r3, sp, #4096	; 0x1000
   356fa:	ldr	r2, [pc, #40]	; (35724 <print_all_devices@@Base+0x5bc>)
   356fc:	adds	r3, #28
   356fe:	add	r1, pc
   35700:	ldr	r2, [r1, r2]
   35702:	ldr	r1, [r2, #0]
   35704:	ldr	r2, [r3, #0]
   35706:	eors	r1, r2
   35708:	beq.n	35712 <print_all_devices@@Base+0x5aa>
   3570a:	blx	88e4 <__stack_chk_fail@plt>
   3570e:	movs	r0, #13
   35710:	b.n	356f4 <print_all_devices@@Base+0x58c>
   35712:	add.w	sp, sp, #4128	; 0x1020
   35716:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   3571a:	nop
   3571c:	str	r4, [sp, #72]	; 0x48
   3571e:	beq.n	35722 <print_all_devices@@Base+0x5ba>
   35720:	adds	r6, #180	; 0xb4
   35722:	movs	r3, r0
   35724:	lsls	r4, r7, #9
   35726:	movs	r0, r0
   35728:	adds	r6, #50	; 0x32
   3572a:	movs	r3, r0
   3572c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   35730:	sub.w	sp, sp, #4128	; 0x1020
   35734:	sub	sp, #4
   35736:	ldr	r1, [pc, #168]	; (357e0 <print_all_devices@@Base+0x678>)
   35738:	mov	r7, r2
   3573a:	mov	r6, r3
   3573c:	ldr	r2, [pc, #164]	; (357e4 <print_all_devices@@Base+0x67c>)
   3573e:	add.w	r3, sp, #4160	; 0x1040
   35742:	add	r1, pc
   35744:	add	r5, sp, #24
   35746:	ldr.w	r8, [r3, #8]
   3574a:	adds	r3, #8
   3574c:	ldr	r2, [r1, r2]
   3574e:	add.w	r3, sp, #4096	; 0x1000
   35752:	mov	r4, r0
   35754:	mov	r0, r5
   35756:	ldr	r2, [r2, #0]
   35758:	str	r2, [r3, #28]
   3575a:	mov.w	r2, #0
   3575e:	movs	r1, #0
   35760:	mov.w	r2, #4096	; 0x1000
   35764:	adds	r3, #28
   35766:	blx	8bf8 <memset@plt+0x4>
   3576a:	add.w	r3, sp, #4160	; 0x1040
   3576e:	ldr	r1, [pc, #108]	; (357dc <print_all_devices@@Base+0x674>)
   35770:	add.w	r9, sp, #32
   35774:	ldrd	r2, r3, [r3]
   35778:	ldr	r0, [r4, #8]
   3577a:	str	r7, [r5, #8]
   3577c:	strd	r2, r3, [r9, #-8]
   35780:	mov	r2, r5
   35782:	str.w	r6, [r9, #4]
   35786:	blx	89cc <ioctl@plt>
   3578a:	adds	r0, #1
   3578c:	beq.n	357ce <print_all_devices@@Base+0x666>
   3578e:	add	r1, sp, #40	; 0x28
   35790:	str	r1, [sp, #20]
   35792:	mov	r0, r1
   35794:	blx	8b70 <strlen@plt>
   35798:	add	r3, sp, #296	; 0x128
   3579a:	str	r3, [sp, #12]
   3579c:	str	r0, [sp, #16]
   3579e:	mov	r0, r3
   357a0:	blx	8b70 <strlen@plt>
   357a4:	ldrd	r3, r2, [sp, #12]
   357a8:	ldr	r1, [sp, #20]
   357aa:	strd	r0, r8, [sp]
   357ae:	mov	r0, r4
   357b0:	bl	355c4 <print_all_devices@@Base+0x45c>
   357b4:	ldr	r1, [pc, #48]	; (357e8 <print_all_devices@@Base+0x680>)
   357b6:	add.w	r3, sp, #4096	; 0x1000
   357ba:	ldr	r2, [pc, #40]	; (357e4 <print_all_devices@@Base+0x67c>)
   357bc:	adds	r3, #28
   357be:	add	r1, pc
   357c0:	ldr	r2, [r1, r2]
   357c2:	ldr	r1, [r2, #0]
   357c4:	ldr	r2, [r3, #0]
   357c6:	eors	r1, r2
   357c8:	beq.n	357d2 <print_all_devices@@Base+0x66a>
   357ca:	blx	88e4 <__stack_chk_fail@plt>
   357ce:	movs	r0, #25
   357d0:	b.n	357b4 <print_all_devices@@Base+0x64c>
   357d2:	add.w	sp, sp, #4128	; 0x1020
   357d6:	add	sp, #4
   357d8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   357dc:	str	r4, [sp, #248]	; 0xf8
   357de:	beq.n	357e2 <print_all_devices@@Base+0x67a>
   357e0:	adds	r5, #238	; 0xee
   357e2:	movs	r3, r0
   357e4:	lsls	r4, r7, #9
   357e6:	movs	r0, r0
   357e8:	adds	r5, #114	; 0x72
   357ea:	movs	r3, r0
   357ec:	ldrb	r1, [r0, #0]
   357ee:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   357f2:	mov	r4, r0
   357f4:	ldr	r3, [r0, #20]
   357f6:	subs	r2, r3, #1
   357f8:	cbnz	r1, 357fe <print_all_devices@@Base+0x696>
   357fa:	cmp	r3, #1
   357fc:	bne.n	35806 <print_all_devices@@Base+0x69e>
   357fe:	str	r2, [r4, #20]
   35800:	movs	r0, #0
   35802:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35806:	ldr	r1, [r0, #16]
   35808:	movw	r0, #4112	; 0x1010
   3580c:	str	r2, [r4, #20]
   3580e:	ldr.w	sl, [pc, #108]	; 3587c <print_all_devices@@Base+0x714>
   35812:	mla	r2, r0, r2, r1
   35816:	ldr	r6, [r4, #8]
   35818:	mla	r3, r0, r3, r1
   3581c:	add	sl, pc
   3581e:	ldr.w	r7, [r2, #-4]
   35822:	subs	r5, r3, #4
   35824:	ldr	r3, [r5, #0]
   35826:	cmp	r3, r7
   35828:	bhi.n	3583a <print_all_devices@@Base+0x6d2>
   3582a:	ldrd	r3, r0, [r4, #4]
   3582e:	cmp	r0, r3
   35830:	beq.n	35836 <print_all_devices@@Base+0x6ce>
   35832:	blx	8e20 <close@plt>
   35836:	str	r6, [r4, #8]
   35838:	b.n	35800 <print_all_devices@@Base+0x698>
   3583a:	cbz	r7, 35844 <print_all_devices@@Base+0x6dc>
   3583c:	ldr	r3, [r4, #28]
   3583e:	ldrb	r3, [r3, r7]
   35840:	cmp	r3, #47	; 0x2f
   35842:	bne.n	35872 <print_all_devices@@Base+0x70a>
   35844:	movs	r2, #0
   35846:	mov	r1, sl
   35848:	mov	r0, r6
   3584a:	blx	88d8 <openat@plt>
   3584e:	ldr	r3, [r4, #8]
   35850:	cmp	r3, r6
   35852:	mov	r8, r0
   35854:	beq.n	3586a <print_all_devices@@Base+0x702>
   35856:	blx	8bac <__errno_location@plt>
   3585a:	ldr.w	fp, [r0]
   3585e:	mov	r9, r0
   35860:	mov	r0, r6
   35862:	blx	8e20 <close@plt>
   35866:	str.w	fp, [r9]
   3586a:	cmp.w	r8, #4294967295	; 0xffffffff
   3586e:	beq.n	35876 <print_all_devices@@Base+0x70e>
   35870:	mov	r6, r8
   35872:	adds	r7, #1
   35874:	b.n	35824 <print_all_devices@@Base+0x6bc>
   35876:	movs	r0, #7
   35878:	b.n	35802 <print_all_devices@@Base+0x69a>
   3587a:	nop
   3587c:	movs	r0, #143	; 0x8f
   3587e:	movs	r2, r0

00035880 <btrfs_util_is_subvolume@@Base>:
   35880:	ldr	r2, [pc, #132]	; (35908 <btrfs_util_is_subvolume@@Base+0x88>)
   35882:	ldr	r3, [pc, #136]	; (3590c <btrfs_util_is_subvolume@@Base+0x8c>)
   35884:	add	r2, pc
   35886:	push	{r4, lr}
   35888:	sub	sp, #160	; 0xa0
   3588a:	ldr	r3, [r2, r3]
   3588c:	add	r1, sp, #92	; 0x5c
   3588e:	mov	r4, r0
   35890:	ldr	r3, [r3, #0]
   35892:	str	r3, [sp, #156]	; 0x9c
   35894:	mov.w	r3, #0
   35898:	blx	8808 <statfs@plt>
   3589c:	adds	r0, #1
   3589e:	beq.n	358f2 <btrfs_util_is_subvolume@@Base+0x72>
   358a0:	ldr	r3, [pc, #96]	; (35904 <btrfs_util_is_subvolume@@Base+0x84>)
   358a2:	ldr	r2, [sp, #92]	; 0x5c
   358a4:	cmp	r2, r3
   358a6:	beq.n	358c6 <btrfs_util_is_subvolume@@Base+0x46>
   358a8:	blx	8bac <__errno_location@plt>
   358ac:	movs	r3, #22
   358ae:	str	r3, [r0, #0]
   358b0:	movs	r0, #4
   358b2:	ldr	r2, [pc, #92]	; (35910 <btrfs_util_is_subvolume@@Base+0x90>)
   358b4:	ldr	r3, [pc, #84]	; (3590c <btrfs_util_is_subvolume@@Base+0x8c>)
   358b6:	add	r2, pc
   358b8:	ldr	r3, [r2, r3]
   358ba:	ldr	r2, [r3, #0]
   358bc:	ldr	r3, [sp, #156]	; 0x9c
   358be:	eors	r2, r3
   358c0:	beq.n	358fe <btrfs_util_is_subvolume@@Base+0x7e>
   358c2:	blx	88e4 <__stack_chk_fail@plt>
   358c6:	mov	r1, sp
   358c8:	mov	r0, r4
   358ca:	bl	3cb28 <__libc_csu_fini@@Base+0x4>
   358ce:	adds	r0, #1
   358d0:	beq.n	358f6 <btrfs_util_is_subvolume@@Base+0x76>
   358d2:	ldr	r3, [sp, #12]
   358d4:	cmp.w	r3, #256	; 0x100
   358d8:	bne.n	358e6 <btrfs_util_is_subvolume@@Base+0x66>
   358da:	ldr	r3, [sp, #16]
   358dc:	and.w	r3, r3, #61440	; 0xf000
   358e0:	cmp.w	r3, #16384	; 0x4000
   358e4:	beq.n	358fa <btrfs_util_is_subvolume@@Base+0x7a>
   358e6:	blx	8bac <__errno_location@plt>
   358ea:	movs	r3, #22
   358ec:	str	r3, [r0, #0]
   358ee:	movs	r0, #5
   358f0:	b.n	358b2 <btrfs_util_is_subvolume@@Base+0x32>
   358f2:	movs	r0, #11
   358f4:	b.n	358b2 <btrfs_util_is_subvolume@@Base+0x32>
   358f6:	movs	r0, #10
   358f8:	b.n	358b2 <btrfs_util_is_subvolume@@Base+0x32>
   358fa:	movs	r0, #0
   358fc:	b.n	358b2 <btrfs_util_is_subvolume@@Base+0x32>
   358fe:	add	sp, #160	; 0xa0
   35900:	pop	{r4, pc}
   35902:	nop
   35904:	ldr	r6, [r7, #0]
   35906:	str	r1, [sp, #140]	; 0x8c
   35908:	adds	r4, #172	; 0xac
   3590a:	movs	r3, r0
   3590c:	lsls	r4, r7, #9
   3590e:	movs	r0, r0
   35910:	adds	r4, #122	; 0x7a
   35912:	movs	r3, r0

00035914 <btrfs_util_is_subvolume_fd@@Base>:
   35914:	ldr	r2, [pc, #132]	; (3599c <btrfs_util_is_subvolume_fd@@Base+0x88>)
   35916:	ldr	r3, [pc, #136]	; (359a0 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   35918:	add	r2, pc
   3591a:	push	{r4, lr}
   3591c:	sub	sp, #160	; 0xa0
   3591e:	ldr	r3, [r2, r3]
   35920:	add	r1, sp, #92	; 0x5c
   35922:	mov	r4, r0
   35924:	ldr	r3, [r3, #0]
   35926:	str	r3, [sp, #156]	; 0x9c
   35928:	mov.w	r3, #0
   3592c:	blx	8c78 <fstatfs@plt>
   35930:	adds	r0, #1
   35932:	beq.n	35986 <btrfs_util_is_subvolume_fd@@Base+0x72>
   35934:	ldr	r3, [pc, #96]	; (35998 <btrfs_util_is_subvolume_fd@@Base+0x84>)
   35936:	ldr	r2, [sp, #92]	; 0x5c
   35938:	cmp	r2, r3
   3593a:	beq.n	3595a <btrfs_util_is_subvolume_fd@@Base+0x46>
   3593c:	blx	8bac <__errno_location@plt>
   35940:	movs	r3, #22
   35942:	str	r3, [r0, #0]
   35944:	movs	r0, #4
   35946:	ldr	r2, [pc, #92]	; (359a4 <btrfs_util_is_subvolume_fd@@Base+0x90>)
   35948:	ldr	r3, [pc, #84]	; (359a0 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   3594a:	add	r2, pc
   3594c:	ldr	r3, [r2, r3]
   3594e:	ldr	r2, [r3, #0]
   35950:	ldr	r3, [sp, #156]	; 0x9c
   35952:	eors	r2, r3
   35954:	beq.n	35992 <btrfs_util_is_subvolume_fd@@Base+0x7e>
   35956:	blx	88e4 <__stack_chk_fail@plt>
   3595a:	mov	r1, sp
   3595c:	mov	r0, r4
   3595e:	bl	3cb34 <__libc_csu_fini@@Base+0x10>
   35962:	adds	r0, #1
   35964:	beq.n	3598a <btrfs_util_is_subvolume_fd@@Base+0x76>
   35966:	ldr	r3, [sp, #12]
   35968:	cmp.w	r3, #256	; 0x100
   3596c:	bne.n	3597a <btrfs_util_is_subvolume_fd@@Base+0x66>
   3596e:	ldr	r3, [sp, #16]
   35970:	and.w	r3, r3, #61440	; 0xf000
   35974:	cmp.w	r3, #16384	; 0x4000
   35978:	beq.n	3598e <btrfs_util_is_subvolume_fd@@Base+0x7a>
   3597a:	blx	8bac <__errno_location@plt>
   3597e:	movs	r3, #22
   35980:	str	r3, [r0, #0]
   35982:	movs	r0, #5
   35984:	b.n	35946 <btrfs_util_is_subvolume_fd@@Base+0x32>
   35986:	movs	r0, #11
   35988:	b.n	35946 <btrfs_util_is_subvolume_fd@@Base+0x32>
   3598a:	movs	r0, #10
   3598c:	b.n	35946 <btrfs_util_is_subvolume_fd@@Base+0x32>
   3598e:	movs	r0, #0
   35990:	b.n	35946 <btrfs_util_is_subvolume_fd@@Base+0x32>
   35992:	add	sp, #160	; 0xa0
   35994:	pop	{r4, pc}
   35996:	nop
   35998:	ldr	r6, [r7, #0]
   3599a:	str	r1, [sp, #140]	; 0x8c
   3599c:	adds	r4, #24
   3599e:	movs	r3, r0
   359a0:	lsls	r4, r7, #9
   359a2:	movs	r0, r0
   359a4:	adds	r3, #230	; 0xe6
   359a6:	movs	r3, r0

000359a8 <btrfs_util_subvolume_id_fd@@Base>:
   359a8:	push	{r4, r5, r6, lr}
   359aa:	mov	r4, r1
   359ac:	ldr	r1, [pc, #120]	; (35a28 <btrfs_util_subvolume_id_fd@@Base+0x80>)
   359ae:	sub.w	sp, sp, #4096	; 0x1000
   359b2:	ldr	r2, [pc, #120]	; (35a2c <btrfs_util_subvolume_id_fd@@Base+0x84>)
   359b4:	sub	sp, #8
   359b6:	add	r1, pc
   359b8:	add.w	r3, sp, #4096	; 0x1000
   359bc:	adds	r3, #4
   359be:	mov	r5, r0
   359c0:	ldr	r2, [r1, r2]
   359c2:	movs	r1, #0
   359c4:	add	r6, sp, #8
   359c6:	ldr	r2, [r2, #0]
   359c8:	str	r2, [r3, #0]
   359ca:	mov.w	r2, #0
   359ce:	mov	r3, sp
   359d0:	mov.w	r2, #4096	; 0x1000
   359d4:	mov	r0, r3
   359d6:	blx	8bf8 <memset@plt+0x4>
   359da:	movs	r1, #0
   359dc:	mov	r3, r0
   359de:	mov.w	r0, #256	; 0x100
   359e2:	mov	r2, r3
   359e4:	strd	r0, r1, [r3, #8]
   359e8:	ldr	r1, [pc, #56]	; (35a24 <btrfs_util_subvolume_id_fd@@Base+0x7c>)
   359ea:	mov	r0, r5
   359ec:	blx	89cc <ioctl@plt>
   359f0:	ldr	r1, [pc, #60]	; (35a30 <btrfs_util_subvolume_id_fd@@Base+0x88>)
   359f2:	add	r1, pc
   359f4:	adds	r0, #1
   359f6:	ittet	ne
   359f8:	ldrdne	r2, r3, [r6, #-8]
   359fc:	movne	r0, #0
   359fe:	moveq	r0, #13
   35a00:	strdne	r2, r3, [r4]
   35a04:	add.w	r3, sp, #4096	; 0x1000
   35a08:	ldr	r2, [pc, #32]	; (35a2c <btrfs_util_subvolume_id_fd@@Base+0x84>)
   35a0a:	adds	r3, #4
   35a0c:	ldr	r2, [r1, r2]
   35a0e:	ldr	r1, [r2, #0]
   35a10:	ldr	r2, [r3, #0]
   35a12:	eors	r1, r2
   35a14:	beq.n	35a1a <btrfs_util_subvolume_id_fd@@Base+0x72>
   35a16:	blx	88e4 <__stack_chk_fail@plt>
   35a1a:	add.w	sp, sp, #4096	; 0x1000
   35a1e:	add	sp, #8
   35a20:	pop	{r4, r5, r6, pc}
   35a22:	nop
   35a24:	str	r4, [sp, #72]	; 0x48
   35a26:	beq.n	35a2a <btrfs_util_subvolume_id_fd@@Base+0x82>
   35a28:	adds	r3, #122	; 0x7a
   35a2a:	movs	r3, r0
   35a2c:	lsls	r4, r7, #9
   35a2e:	movs	r0, r0
   35a30:	adds	r3, #62	; 0x3e
   35a32:	movs	r3, r0

00035a34 <btrfs_util_subvolume_id@@Base>:
   35a34:	push	{r3, r4, r5, r6, r7, lr}
   35a36:	mov	r4, r1
   35a38:	movs	r1, #0
   35a3a:	blx	8b1c <open@plt>
   35a3e:	adds	r3, r0, #1
   35a40:	mov	r6, r0
   35a42:	beq.n	35a60 <btrfs_util_subvolume_id@@Base+0x2c>
   35a44:	mov	r1, r4
   35a46:	bl	359a8 <btrfs_util_subvolume_id_fd@@Base>
   35a4a:	mov	r4, r0
   35a4c:	blx	8bac <__errno_location@plt>
   35a50:	ldr	r7, [r0, #0]
   35a52:	mov	r5, r0
   35a54:	mov	r0, r6
   35a56:	blx	8e20 <close@plt>
   35a5a:	str	r7, [r5, #0]
   35a5c:	mov	r0, r4
   35a5e:	pop	{r3, r4, r5, r6, r7, pc}
   35a60:	movs	r4, #7
   35a62:	b.n	35a5c <btrfs_util_subvolume_id@@Base+0x28>
   35a64:	push	{r4, r5, r6, r7, lr}
   35a66:	mov	r4, r2
   35a68:	ldr	r2, [pc, #156]	; (35b08 <btrfs_util_subvolume_id@@Base+0xd4>)
   35a6a:	mov	r5, r3
   35a6c:	ldr	r3, [pc, #156]	; (35b0c <btrfs_util_subvolume_id@@Base+0xd8>)
   35a6e:	subw	sp, sp, #2068	; 0x814
   35a72:	add	r2, pc
   35a74:	mov	r6, r0
   35a76:	mov	r7, r1
   35a78:	ldr	r3, [r2, r3]
   35a7a:	ldr	r3, [r3, #0]
   35a7c:	str.w	r3, [sp, #2060]	; 0x80c
   35a80:	mov.w	r3, #0
   35a84:	bl	35914 <btrfs_util_is_subvolume_fd@@Base>
   35a88:	subs	r3, r0, #4
   35a8a:	cmp	r3, #1
   35a8c:	bhi.n	35a9a <btrfs_util_subvolume_id@@Base+0x66>
   35a8e:	blx	8bac <__errno_location@plt>
   35a92:	movs	r3, #2
   35a94:	str	r3, [r0, #0]
   35a96:	movs	r0, #6
   35a98:	b.n	35aac <btrfs_util_subvolume_id@@Base+0x78>
   35a9a:	cbnz	r0, 35aac <btrfs_util_subvolume_id@@Base+0x78>
   35a9c:	ldr	r1, [pc, #100]	; (35b04 <btrfs_util_subvolume_id@@Base+0xd0>)
   35a9e:	add	r2, sp, #8
   35aa0:	mov	r0, r7
   35aa2:	blx	89cc <ioctl@plt>
   35aa6:	adds	r0, #1
   35aa8:	bne.n	35ac2 <btrfs_util_subvolume_id@@Base+0x8e>
   35aaa:	movs	r0, #26
   35aac:	ldr	r2, [pc, #96]	; (35b10 <btrfs_util_subvolume_id@@Base+0xdc>)
   35aae:	ldr	r3, [pc, #92]	; (35b0c <btrfs_util_subvolume_id@@Base+0xd8>)
   35ab0:	add	r2, pc
   35ab2:	ldr	r3, [r2, r3]
   35ab4:	ldr	r2, [r3, #0]
   35ab6:	ldr.w	r3, [sp, #2060]	; 0x80c
   35aba:	eors	r2, r3
   35abc:	beq.n	35afe <btrfs_util_subvolume_id@@Base+0xca>
   35abe:	blx	88e4 <__stack_chk_fail@plt>
   35ac2:	ldr	r1, [pc, #64]	; (35b04 <btrfs_util_subvolume_id@@Base+0xd0>)
   35ac4:	add.w	r2, sp, #1032	; 0x408
   35ac8:	mov	r0, r6
   35aca:	blx	89cc <ioctl@plt>
   35ace:	adds	r0, #1
   35ad0:	beq.n	35aaa <btrfs_util_subvolume_id@@Base+0x76>
   35ad2:	add.w	r1, sp, #1048	; 0x418
   35ad6:	add	r0, sp, #24
   35ad8:	movs	r2, #16
   35ada:	blx	887c <memcmp@plt+0x4>
   35ade:	cmp	r0, #0
   35ae0:	bne.n	35a8e <btrfs_util_subvolume_id@@Base+0x5a>
   35ae2:	mov	r7, sp
   35ae4:	mov	r0, r6
   35ae6:	mov	r1, r7
   35ae8:	bl	359a8 <btrfs_util_subvolume_id_fd@@Base>
   35aec:	cmp	r0, #0
   35aee:	bne.n	35aac <btrfs_util_subvolume_id@@Base+0x78>
   35af0:	ldrd	r2, r3, [r7]
   35af4:	cmp	r3, r5
   35af6:	it	eq
   35af8:	cmpeq	r2, r4
   35afa:	beq.n	35aac <btrfs_util_subvolume_id@@Base+0x78>
   35afc:	b.n	35a8e <btrfs_util_subvolume_id@@Base+0x5a>
   35afe:	addw	sp, sp, #2068	; 0x814
   35b02:	pop	{r4, r5, r6, r7, pc}
   35b04:	str	r4, [sp, #124]	; 0x7c
   35b06:	strh	r0, [r0, #32]
   35b08:	adds	r2, #190	; 0xbe
   35b0a:	movs	r3, r0
   35b0c:	lsls	r4, r7, #9
   35b0e:	movs	r0, r0
   35b10:	adds	r2, #128	; 0x80
   35b12:	movs	r3, r0
   35b14:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   35b18:	mov	r6, r3
   35b1a:	ldrd	r3, r5, [r0, #20]
   35b1e:	mov	r4, r0
   35b20:	mov	r7, r2
   35b22:	cmp	r3, r5
   35b24:	bcc.n	35b3c <btrfs_util_subvolume_id@@Base+0x108>
   35b26:	lsls	r5, r5, #1
   35b28:	ldr	r0, [r0, #16]
   35b2a:	movw	r2, #4112	; 0x1010
   35b2e:	mov	r1, r5
   35b30:	bl	36ef0 <btrfs_util_deleted_subvolumes@@Base+0x38>
   35b34:	cmp	r0, #0
   35b36:	beq.n	35bf4 <btrfs_util_subvolume_id@@Base+0x1c0>
   35b38:	str	r5, [r4, #24]
   35b3a:	str	r0, [r4, #16]
   35b3c:	ldr	r3, [r4, #16]
   35b3e:	movw	r8, #4112	; 0x1010
   35b42:	ldr	r5, [r4, #20]
   35b44:	mov	r2, r8
   35b46:	movs	r1, #0
   35b48:	mla	r5, r8, r5, r3
   35b4c:	mov	r0, r5
   35b4e:	blx	8bf8 <memset@plt+0x4>
   35b52:	ldr	r2, [sp, #24]
   35b54:	movw	r3, #4108	; 0x100c
   35b58:	str	r2, [r5, r3]
   35b5a:	ldrb	r3, [r4, #0]
   35b5c:	cbz	r3, 35b9e <btrfs_util_subvolume_id@@Base+0x16a>
   35b5e:	movs	r2, #1
   35b60:	movs	r3, #0
   35b62:	movs	r0, #0
   35b64:	movs	r1, #0
   35b66:	strd	r2, r3, [r5]
   35b6a:	movs	r3, #156	; 0x9c
   35b6c:	mov.w	r2, #4294967295	; 0xffffffff
   35b70:	strd	r3, r3, [r5, #56]	; 0x38
   35b74:	strd	r7, r6, [r5, #8]
   35b78:	mov.w	r3, #4294967295	; 0xffffffff
   35b7c:	strd	r7, r6, [r5, #16]
   35b80:	strd	r2, r3, [r5, #32]
   35b84:	strd	r2, r3, [r5, #48]	; 0x30
   35b88:	movs	r3, #0
   35b8a:	strd	r0, r1, [r5, #24]
   35b8e:	strd	r0, r1, [r5, #40]	; 0x28
   35b92:	str	r3, [r5, #64]	; 0x40
   35b94:	ldr	r3, [r4, #20]
   35b96:	movs	r5, #0
   35b98:	adds	r3, #1
   35b9a:	str	r3, [r4, #20]
   35b9c:	b.n	35be2 <btrfs_util_subvolume_id@@Base+0x1ae>
   35b9e:	ldr	r3, [r4, #20]
   35ba0:	strd	r7, r6, [r5]
   35ba4:	cmp	r3, #0
   35ba6:	beq.n	35b94 <btrfs_util_subvolume_id@@Base+0x160>
   35ba8:	ldr	r2, [r4, #16]
   35baa:	ldr	r0, [r4, #8]
   35bac:	mla	r3, r8, r3, r2
   35bb0:	ldr	r2, [r4, #28]
   35bb2:	ldr.w	r3, [r3, #-4]
   35bb6:	adds	r1, r2, r3
   35bb8:	ldrb	r3, [r2, r3]
   35bba:	movs	r2, #0
   35bbc:	cmp	r3, #47	; 0x2f
   35bbe:	it	eq
   35bc0:	addeq	r1, #1
   35bc2:	blx	88d8 <openat@plt>
   35bc6:	cmp.w	r0, #4294967295	; 0xffffffff
   35bca:	mov	r8, r0
   35bcc:	beq.n	35bf8 <btrfs_util_subvolume_id@@Base+0x1c4>
   35bce:	ldr	r1, [r4, #8]
   35bd0:	mov	r2, r7
   35bd2:	mov	r3, r6
   35bd4:	bl	35a64 <btrfs_util_subvolume_id@@Base+0x30>
   35bd8:	mov	r5, r0
   35bda:	cbz	r0, 35be8 <btrfs_util_subvolume_id@@Base+0x1b4>
   35bdc:	mov	r0, r8
   35bde:	blx	8e20 <close@plt>
   35be2:	mov	r0, r5
   35be4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   35be8:	ldr	r0, [r4, #8]
   35bea:	blx	8e20 <close@plt>
   35bee:	str.w	r8, [r4, #8]
   35bf2:	b.n	35b94 <btrfs_util_subvolume_id@@Base+0x160>
   35bf4:	movs	r5, #2
   35bf6:	b.n	35be2 <btrfs_util_subvolume_id@@Base+0x1ae>
   35bf8:	movs	r5, #7
   35bfa:	b.n	35be2 <btrfs_util_subvolume_id@@Base+0x1ae>

00035bfc <btrfs_util_subvolume_path_fd@@Base>:
   35bfc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35c00:	sub.w	sp, sp, #8192	; 0x2000
   35c04:	sub	sp, #44	; 0x2c
   35c06:	ldr	r5, [pc, #496]	; (35df8 <btrfs_util_subvolume_path_fd@@Base+0x1fc>)
   35c08:	add.w	r1, sp, #8256	; 0x2040
   35c0c:	ldr	r4, [pc, #492]	; (35dfc <btrfs_util_subvolume_path_fd@@Base+0x200>)
   35c0e:	adds	r1, #16
   35c10:	add	r5, pc
   35c12:	strd	r2, r3, [sp, #24]
   35c16:	orrs	r3, r2
   35c18:	ldr	r1, [r1, #0]
   35c1a:	add	r6, sp, #40	; 0x28
   35c1c:	sub.w	fp, r6, #16
   35c20:	mov	r7, r0
   35c22:	str	r1, [sp, #16]
   35c24:	add.w	r1, sp, #8192	; 0x2000
   35c28:	ldr	r4, [r5, r4]
   35c2a:	add.w	r1, r1, #36	; 0x24
   35c2e:	ldr	r4, [r4, #0]
   35c30:	str	r4, [r1, #0]
   35c32:	mov.w	r4, #0
   35c36:	beq.n	35c48 <btrfs_util_subvolume_path_fd@@Base+0x4c>
   35c38:	mov.w	r0, #4096	; 0x1000
   35c3c:	blx	8a94 <malloc@plt+0x4>
   35c40:	mov	r4, r0
   35c42:	cbnz	r0, 35c76 <btrfs_util_subvolume_path_fd@@Base+0x7a>
   35c44:	movs	r0, #2
   35c46:	b.n	35c5a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   35c48:	bl	35914 <btrfs_util_is_subvolume_fd@@Base>
   35c4c:	cbnz	r0, 35c5a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   35c4e:	mov	r1, fp
   35c50:	mov	r0, r7
   35c52:	bl	359a8 <btrfs_util_subvolume_id_fd@@Base>
   35c56:	cmp	r0, #0
   35c58:	beq.n	35c38 <btrfs_util_subvolume_path_fd@@Base+0x3c>
   35c5a:	ldr	r1, [pc, #420]	; (35e00 <btrfs_util_subvolume_path_fd@@Base+0x204>)
   35c5c:	add.w	r3, sp, #8192	; 0x2000
   35c60:	ldr	r2, [pc, #408]	; (35dfc <btrfs_util_subvolume_path_fd@@Base+0x200>)
   35c62:	adds	r3, #36	; 0x24
   35c64:	add	r1, pc
   35c66:	ldr	r2, [r1, r2]
   35c68:	ldr	r1, [r2, #0]
   35c6a:	ldr	r2, [r3, #0]
   35c6c:	eors	r1, r2
   35c6e:	beq.w	35de6 <btrfs_util_subvolume_path_fd@@Base+0x1ea>
   35c72:	blx	88e4 <__stack_chk_fail@plt>
   35c76:	addw	r5, r0, #4095	; 0xfff
   35c7a:	movs	r3, #0
   35c7c:	strb.w	r3, [r0, #4095]	; 0xfff
   35c80:	mov.w	r3, #4096	; 0x1000
   35c84:	str	r3, [sp, #0]
   35c86:	ldrd	r8, r9, [fp]
   35c8a:	cmp.w	r9, #0
   35c8e:	it	eq
   35c90:	cmpeq.w	r8, #5
   35c94:	bne.n	35cb0 <btrfs_util_subvolume_path_fd@@Base+0xb4>
   35c96:	cmp	r4, r5
   35c98:	beq.n	35ca8 <btrfs_util_subvolume_path_fd@@Base+0xac>
   35c9a:	ldr	r3, [sp, #0]
   35c9c:	mov	r1, r5
   35c9e:	mov	r0, r4
   35ca0:	add	r3, r4
   35ca2:	subs	r2, r3, r5
   35ca4:	blx	87bc <memmove@plt+0x4>
   35ca8:	ldr	r3, [sp, #16]
   35caa:	movs	r0, #0
   35cac:	str	r4, [r3, #0]
   35cae:	b.n	35c5a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   35cb0:	sub.w	sl, r6, #8
   35cb4:	mov.w	r2, #4096	; 0x1000
   35cb8:	movs	r1, #0
   35cba:	mov	r0, sl
   35cbc:	blx	8bf8 <memset@plt+0x4>
   35cc0:	movs	r2, #1
   35cc2:	movs	r3, #0
   35cc4:	ldr	r1, [pc, #296]	; (35df0 <btrfs_util_subvolume_path_fd@@Base+0x1f4>)
   35cc6:	strd	r2, r3, [r6, #-8]
   35cca:	mov	r0, r7
   35ccc:	mov.w	r2, #4294967295	; 0xffffffff
   35cd0:	mov.w	r3, #4294967295	; 0xffffffff
   35cd4:	strd	r2, r3, [sl, #32]
   35cd8:	strd	r2, r3, [sl, #48]	; 0x30
   35cdc:	mov	r2, sl
   35cde:	movs	r3, #144	; 0x90
   35ce0:	strd	r8, r9, [sl, #8]
   35ce4:	strd	r3, r3, [sl, #56]	; 0x38
   35ce8:	movs	r3, #1
   35cea:	strd	r8, r9, [sl, #16]
   35cee:	str.w	r3, [sl, #64]	; 0x40
   35cf2:	blx	89cc <ioctl@plt>
   35cf6:	adds	r0, #1
   35cf8:	bne.n	35d04 <btrfs_util_subvolume_path_fd@@Base+0x108>
   35cfa:	mov	r0, r4
   35cfc:	blx	87cc <free@plt+0x4>
   35d00:	movs	r0, #12
   35d02:	b.n	35c5a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   35d04:	ldr.w	r3, [sl, #64]	; 0x40
   35d08:	cbnz	r3, 35d1c <btrfs_util_subvolume_path_fd@@Base+0x120>
   35d0a:	mov	r0, r4
   35d0c:	blx	87cc <free@plt+0x4>
   35d10:	blx	8bac <__errno_location@plt>
   35d14:	movs	r3, #2
   35d16:	str	r3, [r0, #0]
   35d18:	movs	r0, #6
   35d1a:	b.n	35c5a <btrfs_util_subvolume_path_fd@@Base+0x5e>
   35d1c:	ldrd	r0, r1, [sl, #120]	; 0x78
   35d20:	add.w	r2, sp, #4128	; 0x1020
   35d24:	adds	r2, #8
   35d26:	ldrh.w	r9, [sl, #152]	; 0x98
   35d2a:	strd	r0, r1, [r2, #-8]
   35d2e:	strd	r0, r1, [fp]
   35d32:	ldrd	r0, r1, [sl, #136]	; 0x88
   35d36:	strd	r0, r1, [r2], #-8
   35d3a:	mov	r0, r7
   35d3c:	ldr	r1, [pc, #180]	; (35df4 <btrfs_util_subvolume_path_fd@@Base+0x1f8>)
   35d3e:	blx	89cc <ioctl@plt>
   35d42:	adds	r0, #1
   35d44:	beq.n	35cfa <btrfs_util_subvolume_path_fd@@Base+0xfe>
   35d46:	add.w	r0, sp, #4128	; 0x1020
   35d4a:	adds	r0, #16
   35d4c:	blx	8b70 <strlen@plt>
   35d50:	ldrd	r2, r3, [fp]
   35d54:	cmp	r3, #0
   35d56:	it	eq
   35d58:	cmpeq	r2, #5
   35d5a:	strd	r2, r3, [sp, #8]
   35d5e:	ite	ne
   35d60:	movne	r3, #1
   35d62:	moveq	r3, #0
   35d64:	add	r3, r9
   35d66:	add	r3, r0
   35d68:	mov	r8, r0
   35d6a:	subs	r3, r5, r3
   35d6c:	cmp	r4, r3
   35d6e:	bls.n	35dae <btrfs_util_subvolume_path_fd@@Base+0x1b2>
   35d70:	ldr	r3, [sp, #0]
   35d72:	lsls	r3, r3, #1
   35d74:	str	r3, [sp, #4]
   35d76:	mov	r0, r3
   35d78:	blx	8a94 <malloc@plt+0x4>
   35d7c:	cbnz	r0, 35d86 <btrfs_util_subvolume_path_fd@@Base+0x18a>
   35d7e:	mov	r0, r4
   35d80:	blx	87cc <free@plt+0x4>
   35d84:	b.n	35c44 <btrfs_util_subvolume_path_fd@@Base+0x48>
   35d86:	ldr	r2, [sp, #0]
   35d88:	ldr	r1, [sp, #4]
   35d8a:	add	r2, r4
   35d8c:	str	r0, [sp, #20]
   35d8e:	subs	r2, r2, r5
   35d90:	sub.w	sl, r1, r2
   35d94:	mov	r1, r5
   35d96:	add	sl, r0
   35d98:	mov	r0, sl
   35d9a:	mov	r5, sl
   35d9c:	blx	8830 <memcpy@plt+0x4>
   35da0:	mov	r0, r4
   35da2:	blx	87cc <free@plt+0x4>
   35da6:	ldr	r3, [sp, #4]
   35da8:	str	r3, [sp, #0]
   35daa:	ldr	r3, [sp, #20]
   35dac:	mov	r4, r3
   35dae:	sub.w	r5, r5, r9
   35db2:	add.w	r1, r6, #146	; 0x92
   35db6:	mov	r2, r9
   35db8:	mov	r0, r5
   35dba:	sub.w	r5, r5, r8
   35dbe:	blx	8830 <memcpy@plt+0x4>
   35dc2:	add.w	r1, sp, #4128	; 0x1020
   35dc6:	mov	r2, r8
   35dc8:	mov	r0, r5
   35dca:	adds	r1, #16
   35dcc:	blx	8830 <memcpy@plt+0x4>
   35dd0:	ldrd	r2, r3, [sp, #8]
   35dd4:	cmp	r3, #0
   35dd6:	iteee	eq
   35dd8:	cmpeq	r2, #5
   35dda:	movne	r3, #47	; 0x2f
   35ddc:	strbne.w	r3, [r5, #-1]
   35de0:	addne.w	r5, r5, #4294967295	; 0xffffffff
   35de4:	b.n	35c86 <btrfs_util_subvolume_path_fd@@Base+0x8a>
   35de6:	add.w	sp, sp, #8192	; 0x2000
   35dea:	add	sp, #44	; 0x2c
   35dec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35df0:	str	r4, [sp, #68]	; 0x44
   35df2:	beq.n	35df6 <btrfs_util_subvolume_path_fd@@Base+0x1fa>
   35df4:	str	r4, [sp, #72]	; 0x48
   35df6:	beq.n	35dfa <btrfs_util_subvolume_path_fd@@Base+0x1fe>
   35df8:	adds	r1, #32
   35dfa:	movs	r3, r0
   35dfc:	lsls	r4, r7, #9
   35dfe:	movs	r0, r0
   35e00:	adds	r0, #204	; 0xcc
   35e02:	movs	r3, r0

00035e04 <btrfs_util_subvolume_path@@Base>:
   35e04:	push	{r4, r5, r6, r7, lr}
   35e06:	sub	sp, #20
   35e08:	movs	r1, #0
   35e0a:	strd	r3, r2, [sp, #8]
   35e0e:	blx	8b1c <open@plt>
   35e12:	adds	r3, r0, #1
   35e14:	mov	r6, r0
   35e16:	beq.n	35e3c <btrfs_util_subvolume_path@@Base+0x38>
   35e18:	ldr	r1, [sp, #40]	; 0x28
   35e1a:	ldrd	r3, r2, [sp, #8]
   35e1e:	str	r1, [sp, #0]
   35e20:	bl	35bfc <btrfs_util_subvolume_path_fd@@Base>
   35e24:	mov	r4, r0
   35e26:	blx	8bac <__errno_location@plt>
   35e2a:	ldr	r7, [r0, #0]
   35e2c:	mov	r5, r0
   35e2e:	mov	r0, r6
   35e30:	blx	8e20 <close@plt>
   35e34:	str	r7, [r5, #0]
   35e36:	mov	r0, r4
   35e38:	add	sp, #20
   35e3a:	pop	{r4, r5, r6, r7, pc}
   35e3c:	movs	r4, #7
   35e3e:	b.n	35e36 <btrfs_util_subvolume_path@@Base+0x32>

00035e40 <btrfs_util_subvolume_info_fd@@Base>:
   35e40:	push	{r4, r5, lr}
   35e42:	sub	sp, #20
   35e44:	mov	r4, r0
   35e46:	strd	r2, r3, [sp, #8]
   35e4a:	orrs	r3, r2
   35e4c:	ldr	r5, [sp, #32]
   35e4e:	beq.n	35e78 <btrfs_util_subvolume_info_fd@@Base+0x38>
   35e50:	ldrd	r2, r3, [sp, #8]
   35e54:	cmp	r3, #0
   35e56:	it	eq
   35e58:	cmpeq.w	r2, #256	; 0x100
   35e5c:	bcc.n	35e9e <btrfs_util_subvolume_info_fd@@Base+0x5e>
   35e5e:	mov.w	r1, #4294967295	; 0xffffffff
   35e62:	cmp	r1, r3
   35e64:	mvn.w	r0, #255	; 0xff
   35e68:	it	eq
   35e6a:	cmpeq	r0, r2
   35e6c:	bcc.n	35ea6 <btrfs_util_subvolume_info_fd@@Base+0x66>
   35e6e:	mov	r0, r4
   35e70:	str	r5, [sp, #0]
   35e72:	bl	35398 <print_all_devices@@Base+0x230>
   35e76:	b.n	35e8c <btrfs_util_subvolume_info_fd@@Base+0x4c>
   35e78:	bl	35914 <btrfs_util_is_subvolume_fd@@Base>
   35e7c:	cbnz	r0, 35e8c <btrfs_util_subvolume_info_fd@@Base+0x4c>
   35e7e:	blx	8960 <geteuid@plt>
   35e82:	cbz	r0, 35e90 <btrfs_util_subvolume_info_fd@@Base+0x50>
   35e84:	mov	r1, r5
   35e86:	mov	r0, r4
   35e88:	bl	3519c <print_all_devices@@Base+0x34>
   35e8c:	add	sp, #20
   35e8e:	pop	{r4, r5, pc}
   35e90:	add	r1, sp, #8
   35e92:	mov	r0, r4
   35e94:	bl	359a8 <btrfs_util_subvolume_id_fd@@Base>
   35e98:	cmp	r0, #0
   35e9a:	beq.n	35e50 <btrfs_util_subvolume_info_fd@@Base+0x10>
   35e9c:	b.n	35e8c <btrfs_util_subvolume_info_fd@@Base+0x4c>
   35e9e:	cmp	r3, #0
   35ea0:	it	eq
   35ea2:	cmpeq	r2, #5
   35ea4:	beq.n	35e6e <btrfs_util_subvolume_info_fd@@Base+0x2e>
   35ea6:	blx	8bac <__errno_location@plt>
   35eaa:	movs	r3, #2
   35eac:	str	r3, [r0, #0]
   35eae:	movs	r0, #6
   35eb0:	b.n	35e8c <btrfs_util_subvolume_info_fd@@Base+0x4c>

00035eb2 <btrfs_util_subvolume_info@@Base>:
   35eb2:	push	{r4, r5, r6, r7, lr}
   35eb4:	sub	sp, #20
   35eb6:	movs	r1, #0
   35eb8:	strd	r3, r2, [sp, #8]
   35ebc:	blx	8b1c <open@plt>
   35ec0:	adds	r3, r0, #1
   35ec2:	mov	r6, r0
   35ec4:	beq.n	35eea <btrfs_util_subvolume_info@@Base+0x38>
   35ec6:	ldr	r1, [sp, #40]	; 0x28
   35ec8:	ldrd	r3, r2, [sp, #8]
   35ecc:	str	r1, [sp, #0]
   35ece:	bl	35e40 <btrfs_util_subvolume_info_fd@@Base>
   35ed2:	mov	r4, r0
   35ed4:	blx	8bac <__errno_location@plt>
   35ed8:	ldr	r7, [r0, #0]
   35eda:	mov	r5, r0
   35edc:	mov	r0, r6
   35ede:	blx	8e20 <close@plt>
   35ee2:	str	r7, [r5, #0]
   35ee4:	mov	r0, r4
   35ee6:	add	sp, #20
   35ee8:	pop	{r4, r5, r6, r7, pc}
   35eea:	movs	r4, #7
   35eec:	b.n	35ee4 <btrfs_util_subvolume_info@@Base+0x32>

00035eee <btrfs_util_get_subvolume_read_only_fd@@Base>:
   35eee:	push	{r0, r1, r2, r3, r4, lr}
   35ef0:	mov	r4, r1
   35ef2:	ldr	r2, [pc, #68]	; (35f38 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4a>)
   35ef4:	ldr	r3, [pc, #68]	; (35f3c <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   35ef6:	add	r2, pc
   35ef8:	ldr	r1, [pc, #56]	; (35f34 <btrfs_util_get_subvolume_read_only_fd@@Base+0x46>)
   35efa:	ldr	r3, [r2, r3]
   35efc:	mov	r2, sp
   35efe:	ldr	r3, [r3, #0]
   35f00:	str	r3, [sp, #12]
   35f02:	mov.w	r3, #0
   35f06:	blx	89cc <ioctl@plt>
   35f0a:	ldr	r2, [pc, #52]	; (35f40 <btrfs_util_get_subvolume_read_only_fd@@Base+0x52>)
   35f0c:	add	r2, pc
   35f0e:	adds	r0, #1
   35f10:	ittet	ne
   35f12:	ldrne	r3, [sp, #0]
   35f14:	movne	r0, #0
   35f16:	moveq	r0, #14
   35f18:	ubfxne	r3, r3, #1, #1
   35f1c:	it	ne
   35f1e:	strbne	r3, [r4, #0]
   35f20:	ldr	r3, [pc, #24]	; (35f3c <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   35f22:	ldr	r3, [r2, r3]
   35f24:	ldr	r2, [r3, #0]
   35f26:	ldr	r3, [sp, #12]
   35f28:	eors	r2, r3
   35f2a:	beq.n	35f30 <btrfs_util_get_subvolume_read_only_fd@@Base+0x42>
   35f2c:	blx	88e4 <__stack_chk_fail@plt>
   35f30:	add	sp, #16
   35f32:	pop	{r4, pc}
   35f34:	str	r4, [sp, #100]	; 0x64
   35f36:	strh	r0, [r1, #0]
   35f38:	cmp	r6, #58	; 0x3a
   35f3a:	movs	r3, r0
   35f3c:	lsls	r4, r7, #9
   35f3e:	movs	r0, r0
   35f40:	cmp	r6, #36	; 0x24
   35f42:	movs	r3, r0

00035f44 <btrfs_util_get_subvolume_read_only@@Base>:
   35f44:	push	{r3, r4, r5, r6, r7, lr}
   35f46:	mov	r4, r1
   35f48:	movs	r1, #0
   35f4a:	blx	8b1c <open@plt>
   35f4e:	adds	r3, r0, #1
   35f50:	mov	r6, r0
   35f52:	beq.n	35f70 <btrfs_util_get_subvolume_read_only@@Base+0x2c>
   35f54:	mov	r1, r4
   35f56:	bl	35eee <btrfs_util_get_subvolume_read_only_fd@@Base>
   35f5a:	mov	r4, r0
   35f5c:	blx	8bac <__errno_location@plt>
   35f60:	ldr	r7, [r0, #0]
   35f62:	mov	r5, r0
   35f64:	mov	r0, r6
   35f66:	blx	8e20 <close@plt>
   35f6a:	str	r7, [r5, #0]
   35f6c:	mov	r0, r4
   35f6e:	pop	{r3, r4, r5, r6, r7, pc}
   35f70:	movs	r4, #7
   35f72:	b.n	35f6c <btrfs_util_get_subvolume_read_only@@Base+0x28>

00035f74 <btrfs_util_set_subvolume_read_only_fd@@Base>:
   35f74:	ldr	r2, [pc, #108]	; (35fe4 <btrfs_util_set_subvolume_read_only_fd@@Base+0x70>)
   35f76:	ldr	r3, [pc, #112]	; (35fe8 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   35f78:	add	r2, pc
   35f7a:	push	{r4, r5, lr}
   35f7c:	sub	sp, #28
   35f7e:	ldr	r3, [r2, r3]
   35f80:	mov	r5, r1
   35f82:	add	r2, sp, #8
   35f84:	ldr	r1, [pc, #84]	; (35fdc <btrfs_util_set_subvolume_read_only_fd@@Base+0x68>)
   35f86:	ldr	r3, [r3, #0]
   35f88:	str	r3, [sp, #20]
   35f8a:	mov.w	r3, #0
   35f8e:	mov	r4, r0
   35f90:	str	r2, [sp, #4]
   35f92:	blx	89cc <ioctl@plt>
   35f96:	adds	r0, #1
   35f98:	beq.n	35fd4 <btrfs_util_set_subvolume_read_only_fd@@Base+0x60>
   35f9a:	ldrd	r3, r1, [sp, #8]
   35f9e:	ldr	r2, [sp, #4]
   35fa0:	cbz	r5, 35fce <btrfs_util_set_subvolume_read_only_fd@@Base+0x5a>
   35fa2:	orr.w	r3, r3, #2
   35fa6:	strd	r3, r1, [sp, #8]
   35faa:	mov	r0, r4
   35fac:	ldr	r1, [pc, #48]	; (35fe0 <btrfs_util_set_subvolume_read_only_fd@@Base+0x6c>)
   35fae:	blx	89cc <ioctl@plt>
   35fb2:	adds	r3, r0, #1
   35fb4:	ite	ne
   35fb6:	movne	r0, #0
   35fb8:	moveq	r0, #15
   35fba:	ldr	r2, [pc, #48]	; (35fec <btrfs_util_set_subvolume_read_only_fd@@Base+0x78>)
   35fbc:	ldr	r3, [pc, #40]	; (35fe8 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   35fbe:	add	r2, pc
   35fc0:	ldr	r3, [r2, r3]
   35fc2:	ldr	r2, [r3, #0]
   35fc4:	ldr	r3, [sp, #20]
   35fc6:	eors	r2, r3
   35fc8:	beq.n	35fd8 <btrfs_util_set_subvolume_read_only_fd@@Base+0x64>
   35fca:	blx	88e4 <__stack_chk_fail@plt>
   35fce:	bic.w	r3, r3, #2
   35fd2:	b.n	35fa6 <btrfs_util_set_subvolume_read_only_fd@@Base+0x32>
   35fd4:	movs	r0, #14
   35fd6:	b.n	35fba <btrfs_util_set_subvolume_read_only_fd@@Base+0x46>
   35fd8:	add	sp, #28
   35fda:	pop	{r4, r5, pc}
   35fdc:	str	r4, [sp, #100]	; 0x64
   35fde:	strh	r0, [r1, #0]
   35fe0:	str	r4, [sp, #104]	; 0x68
   35fe2:	ands	r0, r1
   35fe4:	cmp	r5, #184	; 0xb8
   35fe6:	movs	r3, r0
   35fe8:	lsls	r4, r7, #9
   35fea:	movs	r0, r0
   35fec:	cmp	r5, #114	; 0x72
   35fee:	movs	r3, r0

00035ff0 <btrfs_util_set_subvolume_read_only@@Base>:
   35ff0:	push	{r3, r4, r5, r6, r7, lr}
   35ff2:	mov	r4, r1
   35ff4:	movs	r1, #0
   35ff6:	blx	8b1c <open@plt>
   35ffa:	adds	r3, r0, #1
   35ffc:	mov	r6, r0
   35ffe:	beq.n	3601c <btrfs_util_set_subvolume_read_only@@Base+0x2c>
   36000:	mov	r1, r4
   36002:	bl	35f74 <btrfs_util_set_subvolume_read_only_fd@@Base>
   36006:	mov	r4, r0
   36008:	blx	8bac <__errno_location@plt>
   3600c:	ldr	r7, [r0, #0]
   3600e:	mov	r5, r0
   36010:	mov	r0, r6
   36012:	blx	8e20 <close@plt>
   36016:	str	r7, [r5, #0]
   36018:	mov	r0, r4
   3601a:	pop	{r3, r4, r5, r6, r7, pc}
   3601c:	movs	r4, #7
   3601e:	b.n	36018 <btrfs_util_set_subvolume_read_only@@Base+0x28>

00036020 <btrfs_util_get_default_subvolume_fd@@Base>:
   36020:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36024:	mov	r7, r1
   36026:	ldr	r1, [pc, #256]	; (36128 <btrfs_util_get_default_subvolume_fd@@Base+0x108>)
   36028:	sub.w	sp, sp, #4096	; 0x1000
   3602c:	ldr	r2, [pc, #252]	; (3612c <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   3602e:	sub	sp, #20
   36030:	add	r1, pc
   36032:	add.w	r9, sp, #16
   36036:	sub.w	r4, r9, #8
   3603a:	add.w	r3, sp, #4096	; 0x1000
   3603e:	ldr	r2, [r1, r2]
   36040:	mov	r8, r0
   36042:	ldr.w	fp, [pc, #236]	; 36130 <btrfs_util_get_default_subvolume_fd@@Base+0x110>
   36046:	mov	r0, r4
   36048:	ldr.w	sl, [pc, #232]	; 36134 <btrfs_util_get_default_subvolume_fd@@Base+0x114>
   3604c:	ldr	r2, [r2, #0]
   3604e:	str	r2, [r3, #12]
   36050:	mov.w	r2, #0
   36054:	movs	r6, #0
   36056:	mov.w	r2, #4096	; 0x1000
   3605a:	add	fp, pc
   3605c:	movs	r1, #0
   3605e:	adds	r3, #12
   36060:	blx	8bf8 <memset@plt+0x4>
   36064:	movs	r2, #1
   36066:	movs	r3, #0
   36068:	strd	r2, r3, [r9, #-8]
   3606c:	movs	r2, #6
   3606e:	movs	r3, #0
   36070:	strd	r2, r3, [r4, #8]
   36074:	strd	r2, r3, [r4, #16]
   36078:	mov.w	r3, #4294967295	; 0xffffffff
   3607c:	mov.w	r2, #4294967295	; 0xffffffff
   36080:	strd	r2, r3, [r4, #32]
   36084:	strd	r2, r3, [r4, #48]	; 0x30
   36088:	movs	r3, #84	; 0x54
   3608a:	strd	r3, r3, [r4, #56]	; 0x38
   3608e:	mov	r3, r6
   36090:	ldr	r2, [r4, #64]	; 0x40
   36092:	cmp	r2, r3
   36094:	bhi.n	360d6 <btrfs_util_get_default_subvolume_fd@@Base+0xb6>
   36096:	mov	r2, r4
   36098:	mov	r1, sl
   3609a:	mov	r0, r8
   3609c:	mov.w	r3, #4096	; 0x1000
   360a0:	str	r3, [r4, #64]	; 0x40
   360a2:	blx	89cc <ioctl@plt>
   360a6:	adds	r0, #1
   360a8:	beq.n	36118 <btrfs_util_get_default_subvolume_fd@@Base+0xf8>
   360aa:	ldr	r3, [r4, #64]	; 0x40
   360ac:	cbnz	r3, 360d2 <btrfs_util_get_default_subvolume_fd@@Base+0xb2>
   360ae:	blx	8bac <__errno_location@plt>
   360b2:	movs	r3, #2
   360b4:	str	r3, [r0, #0]
   360b6:	movs	r0, #6
   360b8:	ldr	r1, [pc, #124]	; (36138 <btrfs_util_get_default_subvolume_fd@@Base+0x118>)
   360ba:	add.w	r3, sp, #4096	; 0x1000
   360be:	ldr	r2, [pc, #108]	; (3612c <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   360c0:	adds	r3, #12
   360c2:	add	r1, pc
   360c4:	ldr	r2, [r1, r2]
   360c6:	ldr	r1, [r2, #0]
   360c8:	ldr	r2, [r3, #0]
   360ca:	eors	r1, r2
   360cc:	beq.n	3611c <btrfs_util_get_default_subvolume_fd@@Base+0xfc>
   360ce:	blx	88e4 <__stack_chk_fail@plt>
   360d2:	movs	r6, #0
   360d4:	mov	r3, r6
   360d6:	add.w	r5, r9, #96	; 0x60
   360da:	add	r5, r6
   360dc:	ldr	r2, [r5, #24]
   360de:	cmp	r2, #84	; 0x54
   360e0:	bne.n	36100 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   360e2:	str	r3, [sp, #4]
   360e4:	add.w	r0, r5, #62	; 0x3e
   360e8:	ldrh.w	r2, [r5, #59]	; 0x3b
   360ec:	mov	r1, fp
   360ee:	blx	8df0 <strncmp@plt>
   360f2:	ldr	r3, [sp, #4]
   360f4:	cbnz	r0, 36100 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   360f6:	ldr	r2, [r5, #32]
   360f8:	ldr	r3, [r5, #36]	; 0x24
   360fa:	strd	r2, r3, [r7]
   360fe:	b.n	360b8 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   36100:	ldr	r2, [r5, #28]
   36102:	adds	r6, #32
   36104:	adds	r3, #1
   36106:	add	r6, r2
   36108:	ldrd	r2, r1, [r5, #16]
   3610c:	adds	r2, #1
   3610e:	adc.w	r1, r1, #0
   36112:	strd	r2, r1, [r4, #24]
   36116:	b.n	36090 <btrfs_util_get_default_subvolume_fd@@Base+0x70>
   36118:	movs	r0, #12
   3611a:	b.n	360b8 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   3611c:	add.w	sp, sp, #4096	; 0x1000
   36120:	add	sp, #20
   36122:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36126:	nop
   36128:	cmp	r5, #0
   3612a:	movs	r3, r0
   3612c:	lsls	r4, r7, #9
   3612e:	movs	r0, r0
   36130:	ldr	r6, [sp, #248]	; 0xf8
   36132:	movs	r0, r0
   36134:	str	r4, [sp, #68]	; 0x44
   36136:	beq.n	3613a <btrfs_util_get_default_subvolume_fd@@Base+0x11a>
   36138:	cmp	r4, #110	; 0x6e
   3613a:	movs	r3, r0

0003613c <btrfs_util_get_default_subvolume@@Base>:
   3613c:	push	{r3, r4, r5, r6, r7, lr}
   3613e:	mov	r4, r1
   36140:	movs	r1, #0
   36142:	blx	8b1c <open@plt>
   36146:	adds	r3, r0, #1
   36148:	mov	r6, r0
   3614a:	beq.n	36168 <btrfs_util_get_default_subvolume@@Base+0x2c>
   3614c:	mov	r1, r4
   3614e:	bl	36020 <btrfs_util_get_default_subvolume_fd@@Base>
   36152:	mov	r4, r0
   36154:	blx	8bac <__errno_location@plt>
   36158:	ldr	r7, [r0, #0]
   3615a:	mov	r5, r0
   3615c:	mov	r0, r6
   3615e:	blx	8e20 <close@plt>
   36162:	str	r7, [r5, #0]
   36164:	mov	r0, r4
   36166:	pop	{r3, r4, r5, r6, r7, pc}
   36168:	movs	r4, #7
   3616a:	b.n	36164 <btrfs_util_get_default_subvolume@@Base+0x28>

0003616c <btrfs_util_set_default_subvolume_fd@@Base>:
   3616c:	push	{r0, r1, r4, lr}
   3616e:	mov	r4, r0
   36170:	strd	r2, r3, [sp]
   36174:	orrs	r3, r2
   36176:	beq.n	3618e <btrfs_util_set_default_subvolume_fd@@Base+0x22>
   36178:	ldr	r1, [pc, #40]	; (361a4 <btrfs_util_set_default_subvolume_fd@@Base+0x38>)
   3617a:	mov	r2, sp
   3617c:	mov	r0, r4
   3617e:	blx	89cc <ioctl@plt>
   36182:	adds	r3, r0, #1
   36184:	ite	ne
   36186:	movne	r0, #0
   36188:	moveq	r0, #19
   3618a:	add	sp, #8
   3618c:	pop	{r4, pc}
   3618e:	bl	35914 <btrfs_util_is_subvolume_fd@@Base>
   36192:	cmp	r0, #0
   36194:	bne.n	3618a <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   36196:	mov	r1, sp
   36198:	mov	r0, r4
   3619a:	bl	359a8 <btrfs_util_subvolume_id_fd@@Base>
   3619e:	cmp	r0, #0
   361a0:	beq.n	36178 <btrfs_util_set_default_subvolume_fd@@Base+0xc>
   361a2:	b.n	3618a <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   361a4:	str	r4, [sp, #76]	; 0x4c
   361a6:	ands	r0, r1

000361a8 <btrfs_util_set_default_subvolume@@Base>:
   361a8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   361aa:	movs	r1, #0
   361ac:	strd	r3, r2, [sp]
   361b0:	blx	8b1c <open@plt>
   361b4:	adds	r3, r0, #1
   361b6:	mov	r6, r0
   361b8:	beq.n	361da <btrfs_util_set_default_subvolume@@Base+0x32>
   361ba:	ldrd	r3, r2, [sp]
   361be:	bl	3616c <btrfs_util_set_default_subvolume_fd@@Base>
   361c2:	mov	r4, r0
   361c4:	blx	8bac <__errno_location@plt>
   361c8:	ldr	r7, [r0, #0]
   361ca:	mov	r5, r0
   361cc:	mov	r0, r6
   361ce:	blx	8e20 <close@plt>
   361d2:	str	r7, [r5, #0]
   361d4:	mov	r0, r4
   361d6:	add	sp, #12
   361d8:	pop	{r4, r5, r6, r7, pc}
   361da:	movs	r4, #7
   361dc:	b.n	361d4 <btrfs_util_set_default_subvolume@@Base+0x2c>

000361de <btrfs_util_create_subvolume_fd@@Base>:
   361de:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   361e2:	sub.w	sp, sp, #4096	; 0x1000
   361e6:	sub	sp, #12
   361e8:	mov	r8, r1
   361ea:	ldr	r1, [pc, #232]	; (362d4 <btrfs_util_create_subvolume_fd@@Base+0xf6>)
   361ec:	mov	r9, r2
   361ee:	mov	r4, r3
   361f0:	ldr	r2, [pc, #228]	; (362d8 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   361f2:	add.w	r3, sp, #4128	; 0x1020
   361f6:	add	r1, pc
   361f8:	adds	r3, #8
   361fa:	mov	r5, sp
   361fc:	ldr	r2, [r1, r2]
   361fe:	mov	r7, r0
   36200:	ldr	r6, [r3, #0]
   36202:	add.w	r3, sp, #4096	; 0x1000
   36206:	ldr	r2, [r2, #0]
   36208:	str	r2, [r3, #4]
   3620a:	mov.w	r2, #0
   3620e:	movs	r1, #0
   36210:	mov.w	r2, #4096	; 0x1000
   36214:	mov	r0, r5
   36216:	adds	r3, #4
   36218:	blx	8bf8 <memset@plt+0x4>
   3621c:	cmp.w	r9, #0
   36220:	beq.n	36246 <btrfs_util_create_subvolume_fd@@Base+0x68>
   36222:	blx	8bac <__errno_location@plt>
   36226:	movs	r3, #22
   36228:	str	r3, [r0, #0]
   3622a:	movs	r0, #3
   3622c:	ldr	r1, [pc, #172]	; (362dc <btrfs_util_create_subvolume_fd@@Base+0xfe>)
   3622e:	add.w	r3, sp, #4096	; 0x1000
   36232:	ldr	r2, [pc, #164]	; (362d8 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   36234:	adds	r3, #4
   36236:	add	r1, pc
   36238:	ldr	r2, [r1, r2]
   3623a:	ldr	r1, [r2, #0]
   3623c:	ldr	r2, [r3, #0]
   3623e:	eors	r1, r2
   36240:	beq.n	362c6 <btrfs_util_create_subvolume_fd@@Base+0xe8>
   36242:	blx	88e4 <__stack_chk_fail@plt>
   36246:	cbz	r4, 36250 <btrfs_util_create_subvolume_fd@@Base+0x72>
   36248:	movs	r2, #1
   3624a:	movs	r3, #0
   3624c:	strd	r2, r3, [r5, #16]
   36250:	cbz	r6, 36272 <btrfs_util_create_subvolume_fd@@Base+0x94>
   36252:	ldr	r3, [r5, #16]
   36254:	str	r6, [r5, #32]
   36256:	orr.w	r3, r3, #4
   3625a:	str	r3, [r5, #16]
   3625c:	ldrd	r3, r2, [r6, #8]
   36260:	adds	r3, #9
   36262:	adc.w	r2, r2, #0
   36266:	lsls	r2, r2, #3
   36268:	orr.w	r2, r2, r3, lsr #29
   3626c:	lsls	r3, r3, #3
   3626e:	strd	r3, r2, [r5, #24]
   36272:	mov	r0, r8
   36274:	blx	8b70 <strlen@plt>
   36278:	movw	r3, #4039	; 0xfc7
   3627c:	cmp	r0, r3
   3627e:	mov	r6, r0
   36280:	bls.n	3628a <btrfs_util_create_subvolume_fd@@Base+0xac>
   36282:	blx	8bac <__errno_location@plt>
   36286:	movs	r3, #36	; 0x24
   36288:	b.n	36228 <btrfs_util_create_subvolume_fd@@Base+0x4a>
   3628a:	mov	r2, r0
   3628c:	mov	r1, r8
   3628e:	movw	r3, #4040	; 0xfc8
   36292:	add	r0, sp, #56	; 0x38
   36294:	add	r6, r5
   36296:	blx	89a4 <__memcpy_chk@plt>
   3629a:	ldr	r1, [pc, #52]	; (362d0 <btrfs_util_create_subvolume_fd@@Base+0xf2>)
   3629c:	mov	r2, r5
   3629e:	mov	r0, r7
   362a0:	mov.w	r8, #0
   362a4:	strb.w	r8, [r6, #56]	; 0x38
   362a8:	blx	89cc <ioctl@plt>
   362ac:	adds	r0, #1
   362ae:	beq.n	362be <btrfs_util_create_subvolume_fd@@Base+0xe0>
   362b0:	cbz	r4, 362c2 <btrfs_util_create_subvolume_fd@@Base+0xe4>
   362b2:	ldrd	r2, r3, [r5, #8]
   362b6:	mov	r0, r8
   362b8:	strd	r2, r3, [r4]
   362bc:	b.n	3622c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   362be:	movs	r0, #16
   362c0:	b.n	3622c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   362c2:	mov	r0, r4
   362c4:	b.n	3622c <btrfs_util_create_subvolume_fd@@Base+0x4e>
   362c6:	add.w	sp, sp, #4096	; 0x1000
   362ca:	add	sp, #12
   362cc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   362d0:	str	r4, [sp, #96]	; 0x60
   362d2:	str	r0, [r0, r0]
   362d4:	cmp	r3, #58	; 0x3a
   362d6:	movs	r3, r0
   362d8:	lsls	r4, r7, #9
   362da:	movs	r0, r0
   362dc:	cmp	r2, #250	; 0xfa
   362de:	movs	r3, r0

000362e0 <btrfs_util_create_subvolume@@Base>:
   362e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   362e4:	mov	r7, r2
   362e6:	ldr	r2, [pc, #120]	; (36360 <btrfs_util_create_subvolume@@Base+0x80>)
   362e8:	mov	r8, r3
   362ea:	ldr	r3, [pc, #120]	; (36364 <btrfs_util_create_subvolume@@Base+0x84>)
   362ec:	subw	sp, sp, #4060	; 0xfdc
   362f0:	add	r2, pc
   362f2:	add.w	r9, sp, #12
   362f6:	add	r6, sp, #8
   362f8:	mov	r5, r1
   362fa:	ldr	r3, [r2, r3]
   362fc:	mov	r1, r0
   362fe:	mvn.w	r0, #99	; 0x63
   36302:	mov	r2, r9
   36304:	ldr	r3, [r3, #0]
   36306:	str.w	r3, [sp, #4052]	; 0xfd4
   3630a:	mov.w	r3, #0
   3630e:	movw	r3, #4040	; 0xfc8
   36312:	str	r6, [sp, #0]
   36314:	bl	352c8 <print_all_devices@@Base+0x160>
   36318:	mov	r4, r0
   3631a:	cbnz	r0, 3633e <btrfs_util_create_subvolume@@Base+0x5e>
   3631c:	mov	r3, r7
   3631e:	mov	r2, r5
   36320:	mov	r1, r9
   36322:	str.w	r8, [sp]
   36326:	ldr	r0, [r6, #0]
   36328:	bl	361de <btrfs_util_create_subvolume_fd@@Base>
   3632c:	mov	r4, r0
   3632e:	blx	8bac <__errno_location@plt>
   36332:	ldr	r7, [r0, #0]
   36334:	mov	r5, r0
   36336:	ldr	r0, [r6, #0]
   36338:	blx	8e20 <close@plt>
   3633c:	str	r7, [r5, #0]
   3633e:	ldr	r2, [pc, #40]	; (36368 <btrfs_util_create_subvolume@@Base+0x88>)
   36340:	ldr	r3, [pc, #32]	; (36364 <btrfs_util_create_subvolume@@Base+0x84>)
   36342:	add	r2, pc
   36344:	ldr	r3, [r2, r3]
   36346:	ldr	r2, [r3, #0]
   36348:	ldr.w	r3, [sp, #4052]	; 0xfd4
   3634c:	eors	r2, r3
   3634e:	beq.n	36354 <btrfs_util_create_subvolume@@Base+0x74>
   36350:	blx	88e4 <__stack_chk_fail@plt>
   36354:	mov	r0, r4
   36356:	addw	sp, sp, #4060	; 0xfdc
   3635a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   3635e:	nop
   36360:	cmp	r2, #64	; 0x40
   36362:	movs	r3, r0
   36364:	lsls	r4, r7, #9
   36366:	movs	r0, r0
   36368:	cmp	r1, #238	; 0xee
   3636a:	movs	r3, r0

0003636c <btrfs_util_create_subvolume_iterator_fd@@Base>:
   3636c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   36370:	mov	r7, r0
   36372:	ldr.w	r8, [sp, #40]	; 0x28
   36376:	strd	r2, r3, [sp, #8]
   3637a:	bics.w	r1, r8, #1
   3637e:	beq.n	36392 <btrfs_util_create_subvolume_iterator_fd@@Base+0x26>
   36380:	blx	8bac <__errno_location@plt>
   36384:	movs	r5, #3
   36386:	movs	r3, #22
   36388:	str	r3, [r0, #0]
   3638a:	mov	r0, r5
   3638c:	add	sp, #16
   3638e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   36392:	orrs	r3, r2
   36394:	bne.n	363b8 <btrfs_util_create_subvolume_iterator_fd@@Base+0x4c>
   36396:	blx	8960 <geteuid@plt>
   3639a:	ldrd	r2, r3, [sp, #8]
   3639e:	orrs	r3, r2
   363a0:	clz	r6, r0
   363a4:	mov.w	r6, r6, lsr #5
   363a8:	beq.n	363bc <btrfs_util_create_subvolume_iterator_fd@@Base+0x50>
   363aa:	movs	r0, #36	; 0x24
   363ac:	blx	8a94 <malloc@plt+0x4>
   363b0:	mov	r4, r0
   363b2:	cbnz	r0, 363d8 <btrfs_util_create_subvolume_iterator_fd@@Base+0x6c>
   363b4:	movs	r5, #2
   363b6:	b.n	3638a <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   363b8:	movs	r6, #1
   363ba:	b.n	363aa <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   363bc:	mov	r0, r7
   363be:	bl	35914 <btrfs_util_is_subvolume_fd@@Base>
   363c2:	mov	r5, r0
   363c4:	cmp	r0, #0
   363c6:	bne.n	3638a <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   363c8:	add	r1, sp, #8
   363ca:	mov	r0, r7
   363cc:	bl	359a8 <btrfs_util_subvolume_id_fd@@Base>
   363d0:	mov	r5, r0
   363d2:	cmp	r0, #0
   363d4:	beq.n	363aa <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   363d6:	b.n	3638a <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   363d8:	movs	r3, #4
   363da:	strd	r7, r7, [r0, #4]
   363de:	str.w	r8, [r0, #12]
   363e2:	movs	r5, #0
   363e4:	strb	r6, [r0, #0]
   363e6:	strd	r5, r3, [r0, #20]
   363ea:	movw	r0, #16448	; 0x4040
   363ee:	blx	8a94 <malloc@plt+0x4>
   363f2:	str	r0, [r4, #16]
   363f4:	cbz	r0, 36432 <btrfs_util_create_subvolume_iterator_fd@@Base+0xc6>
   363f6:	mov.w	r0, #256	; 0x100
   363fa:	str	r0, [r4, #32]
   363fc:	blx	8a94 <malloc@plt+0x4>
   36400:	str	r0, [r4, #28]
   36402:	cbz	r0, 3642e <btrfs_util_create_subvolume_iterator_fd@@Base+0xc2>
   36404:	str	r5, [sp, #0]
   36406:	mov	r0, r4
   36408:	ldrd	r2, r3, [sp, #8]
   3640c:	bl	35b14 <btrfs_util_subvolume_id@@Base+0xe0>
   36410:	mov	r5, r0
   36412:	cbz	r0, 36428 <btrfs_util_create_subvolume_iterator_fd@@Base+0xbc>
   36414:	ldr	r0, [r4, #28]
   36416:	blx	87cc <free@plt+0x4>
   3641a:	ldr	r0, [r4, #16]
   3641c:	blx	87cc <free@plt+0x4>
   36420:	mov	r0, r4
   36422:	blx	87cc <free@plt+0x4>
   36426:	b.n	3638a <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   36428:	ldr	r3, [sp, #44]	; 0x2c
   3642a:	str	r4, [r3, #0]
   3642c:	b.n	3638a <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   3642e:	movs	r5, #2
   36430:	b.n	3641a <btrfs_util_create_subvolume_iterator_fd@@Base+0xae>
   36432:	movs	r5, #2
   36434:	b.n	36420 <btrfs_util_create_subvolume_iterator_fd@@Base+0xb4>

00036436 <btrfs_util_create_subvolume_iterator@@Base>:
   36436:	push	{r4, r5, r6, r7, lr}
   36438:	sub	sp, #20
   3643a:	movs	r1, #0
   3643c:	strd	r3, r2, [sp, #8]
   36440:	ldr	r5, [sp, #44]	; 0x2c
   36442:	blx	8b1c <open@plt>
   36446:	adds	r3, r0, #1
   36448:	mov	r6, r0
   3644a:	beq.n	36480 <btrfs_util_create_subvolume_iterator@@Base+0x4a>
   3644c:	ldr	r1, [sp, #40]	; 0x28
   3644e:	ldrd	r3, r2, [sp, #8]
   36452:	str	r5, [sp, #4]
   36454:	str	r1, [sp, #0]
   36456:	bl	3636c <btrfs_util_create_subvolume_iterator_fd@@Base>
   3645a:	mov	r4, r0
   3645c:	cbz	r0, 36474 <btrfs_util_create_subvolume_iterator@@Base+0x3e>
   3645e:	blx	8bac <__errno_location@plt>
   36462:	ldr	r7, [r0, #0]
   36464:	mov	r5, r0
   36466:	mov	r0, r6
   36468:	blx	8e20 <close@plt>
   3646c:	str	r7, [r5, #0]
   3646e:	mov	r0, r4
   36470:	add	sp, #20
   36472:	pop	{r4, r5, r6, r7, pc}
   36474:	ldr	r2, [r5, #0]
   36476:	ldr	r3, [r2, #12]
   36478:	orr.w	r3, r3, #1073741824	; 0x40000000
   3647c:	str	r3, [r2, #12]
   3647e:	b.n	3646e <btrfs_util_create_subvolume_iterator@@Base+0x38>
   36480:	movs	r4, #7
   36482:	b.n	3646e <btrfs_util_create_subvolume_iterator@@Base+0x38>

00036484 <btrfs_util_destroy_subvolume_iterator@@Base>:
   36484:	push	{r3, r4, r5, r6, r7, lr}
   36486:	mov	r4, r0
   36488:	cbz	r0, 364ce <btrfs_util_destroy_subvolume_iterator@@Base+0x4a>
   3648a:	ldr	r0, [r0, #28]
   3648c:	blx	87cc <free@plt+0x4>
   36490:	ldr	r0, [r4, #16]
   36492:	blx	87cc <free@plt+0x4>
   36496:	ldrd	r3, r6, [r4, #4]
   3649a:	cmp	r6, r3
   3649c:	beq.n	364ae <btrfs_util_destroy_subvolume_iterator@@Base+0x2a>
   3649e:	blx	8bac <__errno_location@plt>
   364a2:	ldr	r7, [r0, #0]
   364a4:	mov	r5, r0
   364a6:	mov	r0, r6
   364a8:	blx	8e20 <close@plt>
   364ac:	str	r7, [r5, #0]
   364ae:	ldr	r3, [r4, #12]
   364b0:	lsls	r3, r3, #1
   364b2:	bpl.n	364c4 <btrfs_util_destroy_subvolume_iterator@@Base+0x40>
   364b4:	blx	8bac <__errno_location@plt>
   364b8:	ldr	r6, [r0, #0]
   364ba:	mov	r5, r0
   364bc:	ldr	r0, [r4, #4]
   364be:	blx	8e20 <close@plt>
   364c2:	str	r6, [r5, #0]
   364c4:	mov	r0, r4
   364c6:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   364ca:	b.w	87c8 <free@plt>
   364ce:	pop	{r3, r4, r5, r6, r7, pc}

000364d0 <btrfs_util_subvolume_iterator_fd@@Base>:
   364d0:	ldr	r0, [r0, #4]
   364d2:	bx	lr

000364d4 <btrfs_util_subvolume_iterator_next@@Base>:
   364d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   364d8:	mov	r5, r2
   364da:	ldr	r2, [pc, #696]	; (36794 <btrfs_util_subvolume_iterator_next@@Base+0x2c0>)
   364dc:	sub	sp, #52	; 0x34
   364de:	ldr	r3, [pc, #696]	; (36798 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   364e0:	mov	r4, r0
   364e2:	add	r2, pc
   364e4:	mov	r8, r1
   364e6:	ldr	r3, [r2, r3]
   364e8:	ldr	r3, [r3, #0]
   364ea:	str	r3, [sp, #44]	; 0x2c
   364ec:	mov.w	r3, #0
   364f0:	ldrb	r3, [r0, #0]
   364f2:	cmp	r3, #0
   364f4:	beq.n	365b6 <btrfs_util_subvolume_iterator_next@@Base+0xe2>
   364f6:	movw	r6, #4112	; 0x1010
   364fa:	movw	sl, #4104	; 0x1008
   364fe:	ldr	r3, [r4, #20]
   36500:	cmp	r3, #0
   36502:	beq.w	36774 <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   36506:	muls	r3, r6
   36508:	ldr	r2, [r4, #16]
   3650a:	sub.w	r3, r3, #4096	; 0x1000
   3650e:	subs	r3, #16
   36510:	add.w	fp, r2, r3
   36514:	add.w	r7, fp, sl
   36518:	ldr.w	r1, [fp, sl]
   3651c:	ldr.w	r2, [fp, #64]	; 0x40
   36520:	cmp	r1, r2
   36522:	bcc.w	36666 <btrfs_util_subvolume_iterator_next@@Base+0x192>
   36526:	mov.w	r2, #4096	; 0x1000
   3652a:	ldr	r1, [pc, #608]	; (3678c <btrfs_util_subvolume_iterator_next@@Base+0x2b8>)
   3652c:	str.w	r2, [fp, #64]	; 0x40
   36530:	mov	r2, fp
   36532:	ldr	r0, [r4, #4]
   36534:	blx	89cc <ioctl@plt>
   36538:	adds	r0, #1
   3653a:	beq.w	366fe <btrfs_util_subvolume_iterator_next@@Base+0x22a>
   3653e:	add.w	r1, fp, #4096	; 0x1000
   36542:	movs	r2, #0
   36544:	str	r2, [r7, #0]
   36546:	str	r2, [r1, #0]
   36548:	ldr.w	r2, [fp, #64]	; 0x40
   3654c:	cmp	r2, #0
   3654e:	bne.n	364fe <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   36550:	mov	r0, r4
   36552:	bl	357ec <print_all_devices@@Base+0x684>
   36556:	ldr	r2, [r4, #12]
   36558:	lsls	r0, r2, #31
   3655a:	bpl.n	364fe <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   3655c:	ldr	r2, [r4, #20]
   3655e:	cmp	r2, #0
   36560:	beq.n	364fe <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   36562:	cmp.w	r8, #0
   36566:	beq.n	36594 <btrfs_util_subvolume_iterator_next@@Base+0xc0>
   36568:	movw	r7, #4108	; 0x100c
   3656c:	ldr.w	r9, [fp, r7]
   36570:	add.w	r0, r9, #1
   36574:	blx	8a94 <malloc@plt+0x4>
   36578:	mov	r6, r0
   3657a:	str.w	r0, [r8]
   3657e:	cmp	r0, #0
   36580:	beq.w	3677c <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   36584:	ldr	r1, [r4, #28]
   36586:	mov	r2, r9
   36588:	blx	8830 <memcpy@plt+0x4>
   3658c:	ldr.w	r2, [fp, r7]
   36590:	movs	r1, #0
   36592:	strb	r1, [r6, r2]
   36594:	cbz	r5, 3659e <btrfs_util_subvolume_iterator_next@@Base+0xca>
   36596:	ldrd	r2, r3, [fp, #8]
   3659a:	strd	r2, r3, [r5]
   3659e:	movs	r3, #0
   365a0:	ldr	r1, [pc, #504]	; (3679c <btrfs_util_subvolume_iterator_next@@Base+0x2c8>)
   365a2:	ldr	r2, [pc, #500]	; (36798 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   365a4:	add	r1, pc
   365a6:	ldr	r2, [r1, r2]
   365a8:	ldr	r1, [r2, #0]
   365aa:	ldr	r2, [sp, #44]	; 0x2c
   365ac:	eors	r1, r2
   365ae:	beq.w	36784 <btrfs_util_subvolume_iterator_next@@Base+0x2b0>
   365b2:	blx	88e4 <__stack_chk_fail@plt>
   365b6:	movw	r9, #4112	; 0x1010
   365ba:	movw	sl, #4104	; 0x1008
   365be:	ldr	r3, [r4, #20]
   365c0:	cmp	r3, #0
   365c2:	beq.w	36774 <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   365c6:	mul.w	fp, r9, r3
   365ca:	ldr	r3, [r4, #16]
   365cc:	sub.w	fp, fp, #4096	; 0x1000
   365d0:	sub.w	fp, fp, #16
   365d4:	add	fp, r3
   365d6:	add.w	r6, fp, #4096	; 0x1000
   365da:	add.w	r7, fp, sl
   365de:	ldr.w	r1, [fp, sl]
   365e2:	ldrb	r3, [r6, #0]
   365e4:	cmp	r1, r3
   365e6:	bcc.w	36702 <btrfs_util_subvolume_iterator_next@@Base+0x22e>
   365ea:	ldr	r1, [pc, #420]	; (36790 <btrfs_util_subvolume_iterator_next@@Base+0x2bc>)
   365ec:	add.w	r2, fp, #8
   365f0:	ldr	r0, [r4, #8]
   365f2:	blx	89cc <ioctl@plt>
   365f6:	adds	r0, #1
   365f8:	bne.n	36606 <btrfs_util_subvolume_iterator_next@@Base+0x132>
   365fa:	blx	8bac <__errno_location@plt>
   365fe:	ldr	r3, [r0, #0]
   36600:	cmp	r3, #75	; 0x4b
   36602:	bne.w	36778 <btrfs_util_subvolume_iterator_next@@Base+0x2a4>
   36606:	movs	r3, #0
   36608:	str	r3, [r7, #0]
   3660a:	ldrb	r3, [r6, #0]
   3660c:	cmp	r3, #0
   3660e:	bne.n	365be <btrfs_util_subvolume_iterator_next@@Base+0xea>
   36610:	mov	r0, r4
   36612:	bl	357ec <print_all_devices@@Base+0x684>
   36616:	mov	r3, r0
   36618:	cmp	r0, #0
   3661a:	bne.n	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3661c:	ldr	r3, [r4, #12]
   3661e:	lsls	r2, r3, #31
   36620:	bpl.n	365be <btrfs_util_subvolume_iterator_next@@Base+0xea>
   36622:	ldr	r3, [r4, #20]
   36624:	cmp	r3, #0
   36626:	beq.n	365be <btrfs_util_subvolume_iterator_next@@Base+0xea>
   36628:	cmp.w	r8, #0
   3662c:	beq.n	3665a <btrfs_util_subvolume_iterator_next@@Base+0x186>
   3662e:	movw	r7, #4108	; 0x100c
   36632:	ldr.w	r9, [fp, r7]
   36636:	add.w	r0, r9, #1
   3663a:	blx	8a94 <malloc@plt+0x4>
   3663e:	mov	r6, r0
   36640:	str.w	r0, [r8]
   36644:	cmp	r0, #0
   36646:	beq.w	3677c <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   3664a:	mov	r2, r9
   3664c:	ldr	r1, [r4, #28]
   3664e:	blx	8830 <memcpy@plt+0x4>
   36652:	ldr.w	r3, [fp, r7]
   36656:	movs	r2, #0
   36658:	strb	r2, [r6, r3]
   3665a:	cmp	r5, #0
   3665c:	beq.w	36780 <btrfs_util_subvolume_iterator_next@@Base+0x2ac>
   36660:	ldrd	r2, r3, [fp]
   36664:	b.n	3659a <btrfs_util_subvolume_iterator_next@@Base+0xc6>
   36666:	add.w	r0, fp, #4096	; 0x1000
   3666a:	add.w	ip, fp, #104	; 0x68
   3666e:	adds	r1, #1
   36670:	add	r7, sp, #32
   36672:	ldr	r2, [r0, #0]
   36674:	str.w	r1, [fp, sl]
   36678:	add	ip, r2
   3667a:	adds	r2, #32
   3667c:	ldr.w	r1, [ip, #28]
   36680:	mov	r9, ip
   36682:	add	r2, r1
   36684:	str	r2, [r0, #0]
   36686:	ldr.w	r0, [r9, #16]!
   3668a:	mov	r2, r7
   3668c:	ldr.w	r1, [r9, #4]
   36690:	stmia	r2!, {r0, r1}
   36692:	adds	r2, r0, #1
   36694:	ldr	r1, [sp, #36]	; 0x24
   36696:	adc.w	r1, r1, #0
   3669a:	strd	r2, r1, [fp, #24]
   3669e:	ldr.w	r3, [ip, #24]
   366a2:	cmp	r3, #156	; 0x9c
   366a4:	bne.w	364fe <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   366a8:	add	r3, sp, #28
   366aa:	add.w	r2, ip, #32
   366ae:	str	r3, [sp, #0]
   366b0:	mov	r1, ip
   366b2:	add.w	r3, ip, #50	; 0x32
   366b6:	mov	r0, r4
   366b8:	bl	3566c <print_all_devices@@Base+0x504>
   366bc:	mov	r3, r0
   366be:	cmp	r0, #0
   366c0:	bne.w	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   366c4:	ldr.w	r0, [r9]
   366c8:	ldr.w	r1, [r9, #4]
   366cc:	ldr	r3, [sp, #28]
   366ce:	stmia	r7!, {r0, r1}
   366d0:	mov	r0, r4
   366d2:	str	r3, [sp, #0]
   366d4:	ldrd	r2, r3, [sp, #32]
   366d8:	bl	35b14 <btrfs_util_subvolume_id@@Base+0xe0>
   366dc:	mov	r3, r0
   366de:	cmp	r0, #0
   366e0:	bne.w	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   366e4:	ldr	r3, [r4, #12]
   366e6:	lsls	r1, r3, #31
   366e8:	bmi.w	364fe <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   366ec:	ldr	r3, [r4, #20]
   366ee:	muls	r6, r3
   366f0:	ldr	r3, [r4, #16]
   366f2:	sub.w	r6, r6, #4096	; 0x1000
   366f6:	subs	r6, #16
   366f8:	add.w	fp, r3, r6
   366fc:	b.n	36562 <btrfs_util_subvolume_iterator_next@@Base+0x8e>
   366fe:	movs	r3, #12
   36700:	b.n	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   36702:	adds	r1, #1
   36704:	mov	r0, r4
   36706:	add.w	r3, fp, r1, lsl #4
   3670a:	ldrd	r6, r7, [r3]
   3670e:	ldrd	r2, r3, [r3, #8]
   36712:	str.w	r1, [fp, sl]
   36716:	add	r1, sp, #32
   36718:	str	r1, [sp, #8]
   3671a:	strd	r2, r3, [sp]
   3671e:	mov	r2, r6
   36720:	mov	r3, r7
   36722:	bl	3572c <print_all_devices@@Base+0x5c4>
   36726:	str	r0, [sp, #20]
   36728:	cbz	r0, 3673a <btrfs_util_subvolume_iterator_next@@Base+0x266>
   3672a:	blx	8bac <__errno_location@plt>
   3672e:	ldr	r2, [r0, #0]
   36730:	cmp	r2, #13
   36732:	ldr	r3, [sp, #20]
   36734:	bne.w	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   36738:	b.n	365be <btrfs_util_subvolume_iterator_next@@Base+0xea>
   3673a:	ldr	r3, [sp, #32]
   3673c:	mov	r2, r6
   3673e:	mov	r0, r4
   36740:	str	r3, [sp, #0]
   36742:	mov	r3, r7
   36744:	bl	35b14 <btrfs_util_subvolume_id@@Base+0xe0>
   36748:	str	r0, [sp, #20]
   3674a:	cbz	r0, 36758 <btrfs_util_subvolume_iterator_next@@Base+0x284>
   3674c:	blx	8bac <__errno_location@plt>
   36750:	ldr	r2, [r0, #0]
   36752:	cmp	r2, #2
   36754:	bne.n	36730 <btrfs_util_subvolume_iterator_next@@Base+0x25c>
   36756:	b.n	365be <btrfs_util_subvolume_iterator_next@@Base+0xea>
   36758:	ldr	r3, [r4, #12]
   3675a:	lsls	r3, r3, #31
   3675c:	bmi.w	365be <btrfs_util_subvolume_iterator_next@@Base+0xea>
   36760:	ldr	r3, [r4, #20]
   36762:	mul.w	fp, r9, r3
   36766:	ldr	r3, [r4, #16]
   36768:	sub.w	fp, fp, #4096	; 0x1000
   3676c:	sub.w	fp, fp, #16
   36770:	add	fp, r3
   36772:	b.n	36628 <btrfs_util_subvolume_iterator_next@@Base+0x154>
   36774:	movs	r3, #1
   36776:	b.n	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   36778:	movs	r3, #24
   3677a:	b.n	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3677c:	movs	r3, #2
   3677e:	b.n	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   36780:	mov	r3, r5
   36782:	b.n	365a0 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   36784:	mov	r0, r3
   36786:	add	sp, #52	; 0x34
   36788:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3678c:	str	r4, [sp, #68]	; 0x44
   3678e:	beq.n	36792 <btrfs_util_subvolume_iterator_next@@Base+0x2be>
   36790:	str	r4, [sp, #244]	; 0xf4
   36792:	beq.n	36796 <btrfs_util_subvolume_iterator_next@@Base+0x2c2>
   36794:	cmp	r0, #78	; 0x4e
   36796:	movs	r3, r0
   36798:	lsls	r4, r7, #9
   3679a:	movs	r0, r0
   3679c:	movs	r7, #140	; 0x8c
   3679e:	movs	r3, r0

000367a0 <btrfs_util_create_snapshot_fd2@@Base>:
   367a0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   367a4:	sub.w	sp, sp, #8192	; 0x2000
   367a8:	sub	sp, #4
   367aa:	mov	r6, r3
   367ac:	add.w	r3, sp, #8192	; 0x2000
   367b0:	mov	sl, r1
   367b2:	ldr	r1, [pc, #604]	; (36a10 <btrfs_util_create_snapshot_fd2@@Base+0x270>)
   367b4:	adds	r3, #40	; 0x28
   367b6:	mov	r7, r2
   367b8:	ldr	r5, [r3, #0]
   367ba:	ldr	r2, [pc, #600]	; (36a14 <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   367bc:	add.w	r3, sp, #8192	; 0x2000
   367c0:	add	r1, pc
   367c2:	add.w	r8, sp, #64	; 0x40
   367c6:	ldr.w	fp, [r3, #44]	; 0x2c
   367ca:	adds	r3, #44	; 0x2c
   367cc:	ldr	r2, [r1, r2]
   367ce:	add.w	r3, sp, #8160	; 0x1fe0
   367d2:	sub.w	r4, r8, #16
   367d6:	mov	r9, r0
   367d8:	ldr	r2, [r2, #0]
   367da:	str	r2, [r3, #28]
   367dc:	mov.w	r2, #0
   367e0:	mov.w	r2, #4096	; 0x1000
   367e4:	movs	r1, #0
   367e6:	mov	r0, r4
   367e8:	adds	r3, #28
   367ea:	blx	8bf8 <memset@plt+0x4>
   367ee:	mov	r2, r9
   367f0:	asrs	r3, r2, #31
   367f2:	strd	r2, r3, [r8, #-16]
   367f6:	bics.w	r3, r6, #3
   367fa:	bne.n	36800 <btrfs_util_create_snapshot_fd2@@Base+0x60>
   367fc:	cmp	r6, #3
   367fe:	bne.n	36826 <btrfs_util_create_snapshot_fd2@@Base+0x86>
   36800:	blx	8bac <__errno_location@plt>
   36804:	movs	r3, #22
   36806:	movs	r6, #3
   36808:	str	r3, [r0, #0]
   3680a:	ldr	r1, [pc, #524]	; (36a18 <btrfs_util_create_snapshot_fd2@@Base+0x278>)
   3680c:	add.w	r3, sp, #8160	; 0x1fe0
   36810:	ldr	r2, [pc, #512]	; (36a14 <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   36812:	adds	r3, #28
   36814:	add	r1, pc
   36816:	ldr	r2, [r1, r2]
   36818:	ldr	r1, [r2, #0]
   3681a:	ldr	r2, [r3, #0]
   3681c:	eors	r1, r2
   3681e:	beq.w	369fe <btrfs_util_create_snapshot_fd2@@Base+0x25e>
   36822:	blx	88e4 <__stack_chk_fail@plt>
   36826:	lsls	r2, r6, #30
   36828:	ittt	mi
   3682a:	movmi	r2, #2
   3682c:	movmi	r3, #0
   3682e:	strdmi	r2, r3, [r4, #16]
   36832:	cbz	r5, 3683c <btrfs_util_create_snapshot_fd2@@Base+0x9c>
   36834:	ldr	r3, [r4, #16]
   36836:	orr.w	r3, r3, #1
   3683a:	str	r3, [r4, #16]
   3683c:	cmp.w	fp, #0
   36840:	beq.n	36864 <btrfs_util_create_snapshot_fd2@@Base+0xc4>
   36842:	ldr	r3, [r4, #16]
   36844:	str.w	fp, [r4, #32]
   36848:	orr.w	r3, r3, #4
   3684c:	str	r3, [r4, #16]
   3684e:	ldrd	r3, r2, [fp, #8]
   36852:	adds	r3, #9
   36854:	adc.w	r2, r2, #0
   36858:	lsls	r2, r2, #3
   3685a:	orr.w	r2, r2, r3, lsr #29
   3685e:	lsls	r3, r3, #3
   36860:	strd	r3, r2, [r4, #24]
   36864:	mov	r0, r7
   36866:	blx	8b70 <strlen@plt>
   3686a:	movw	r3, #4039	; 0xfc7
   3686e:	cmp	r0, r3
   36870:	mov	fp, r0
   36872:	bls.n	3687c <btrfs_util_create_snapshot_fd2@@Base+0xdc>
   36874:	blx	8bac <__errno_location@plt>
   36878:	movs	r3, #36	; 0x24
   3687a:	b.n	36806 <btrfs_util_create_snapshot_fd2@@Base+0x66>
   3687c:	mov	r2, r0
   3687e:	movw	r3, #4040	; 0xfc8
   36882:	mov	r1, r7
   36884:	add.w	r0, r8, #40	; 0x28
   36888:	add	fp, r4
   3688a:	blx	89a4 <__memcpy_chk@plt>
   3688e:	ldr	r1, [pc, #380]	; (36a0c <btrfs_util_create_snapshot_fd2@@Base+0x26c>)
   36890:	mov	r2, r4
   36892:	mov	r0, sl
   36894:	movs	r3, #0
   36896:	strb.w	r3, [fp, #56]	; 0x38
   3689a:	blx	89cc <ioctl@plt>
   3689e:	adds	r0, #1
   368a0:	beq.w	369f6 <btrfs_util_create_snapshot_fd2@@Base+0x256>
   368a4:	cbz	r5, 368ae <btrfs_util_create_snapshot_fd2@@Base+0x10e>
   368a6:	ldrd	r2, r3, [r4, #8]
   368aa:	strd	r2, r3, [r5]
   368ae:	ands.w	r3, r6, #1
   368b2:	beq.w	369fa <btrfs_util_create_snapshot_fd2@@Base+0x25a>
   368b6:	mov	r1, r7
   368b8:	movs	r2, #0
   368ba:	mov	r0, sl
   368bc:	blx	88d8 <openat@plt>
   368c0:	adds	r3, r0, #1
   368c2:	mov	r7, r0
   368c4:	beq.w	369f2 <btrfs_util_create_snapshot_fd2@@Base+0x252>
   368c8:	add	r4, sp, #32
   368ca:	movs	r2, #0
   368cc:	subs	r3, r4, #4
   368ce:	mov	r0, r9
   368d0:	str	r3, [sp, #12]
   368d2:	str	r3, [sp, #4]
   368d4:	movs	r3, #0
   368d6:	str	r3, [sp, #0]
   368d8:	movs	r3, #0
   368da:	bl	3636c <btrfs_util_create_subvolume_iterator_fd@@Base>
   368de:	mov	r6, r0
   368e0:	cbnz	r0, 36920 <btrfs_util_create_snapshot_fd2@@Base+0x180>
   368e2:	cmp	r5, #0
   368e4:	add.w	sl, sp, #36	; 0x24
   368e8:	sub.w	r3, r8, #24
   368ec:	str	r3, [sp, #16]
   368ee:	it	eq
   368f0:	moveq	r3, #0
   368f2:	str	r3, [sp, #20]
   368f4:	ldr	r3, [sp, #12]
   368f6:	movs	r2, #0
   368f8:	mov	r1, r4
   368fa:	ldr	r0, [r3, #0]
   368fc:	bl	364d4 <btrfs_util_subvolume_iterator_next@@Base>
   36900:	mov	fp, r0
   36902:	blx	8bac <__errno_location@plt>
   36906:	mov	r6, r0
   36908:	cmp.w	fp, #0
   3690c:	beq.n	36932 <btrfs_util_create_snapshot_fd2@@Base+0x192>
   3690e:	cmp.w	fp, #1
   36912:	it	eq
   36914:	moveq.w	fp, #0
   36918:	ldr	r0, [sp, #28]
   3691a:	mov	r6, fp
   3691c:	bl	36484 <btrfs_util_destroy_subvolume_iterator@@Base>
   36920:	blx	8bac <__errno_location@plt>
   36924:	ldr	r5, [r0, #0]
   36926:	mov	r4, r0
   36928:	mov	r0, r7
   3692a:	blx	8e20 <close@plt>
   3692e:	str	r5, [r4, #0]
   36930:	b.n	3680a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   36932:	ldr	r1, [r4, #0]
   36934:	mov.w	r2, #512	; 0x200
   36938:	mov	r0, r7
   3693a:	blx	87ac <unlinkat@plt>
   3693e:	adds	r0, #1
   36940:	bne.n	3694e <btrfs_util_create_snapshot_fd2@@Base+0x1ae>
   36942:	ldr	r0, [r4, #0]
   36944:	mov.w	fp, #8
   36948:	blx	87cc <free@plt+0x4>
   3694c:	b.n	36918 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   3694e:	ldr	r1, [r4, #0]
   36950:	mov	r2, fp
   36952:	mov	r0, r9
   36954:	blx	88d8 <openat@plt>
   36958:	cmp.w	r0, #4294967295	; 0xffffffff
   3695c:	mov	r8, r0
   3695e:	bne.n	3696c <btrfs_util_create_snapshot_fd2@@Base+0x1cc>
   36960:	ldr	r0, [r4, #0]
   36962:	mov.w	fp, #7
   36966:	blx	87cc <free@plt+0x4>
   3696a:	b.n	36918 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   3696c:	add.w	r2, sp, #4128	; 0x1020
   36970:	movw	r3, #4040	; 0xfc8
   36974:	adds	r2, #20
   36976:	str.w	sl, [sp]
   3697a:	mov	r0, r7
   3697c:	ldr	r1, [r4, #0]
   3697e:	str	r2, [sp, #8]
   36980:	bl	352c8 <print_all_devices@@Base+0x160>
   36984:	mov	fp, r0
   36986:	ldr	r0, [r4, #0]
   36988:	blx	87cc <free@plt+0x4>
   3698c:	ldr	r2, [sp, #8]
   3698e:	cmp.w	fp, #0
   36992:	beq.n	369a0 <btrfs_util_create_snapshot_fd2@@Base+0x200>
   36994:	ldr	r4, [r6, #0]
   36996:	mov	r0, r8
   36998:	blx	8e20 <close@plt>
   3699c:	str	r4, [r6, #0]
   3699e:	b.n	36918 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   369a0:	ldr	r3, [sp, #20]
   369a2:	mov	r0, r8
   369a4:	str.w	fp, [sp, #4]
   369a8:	str	r3, [sp, #0]
   369aa:	mov	r3, fp
   369ac:	ldr.w	r1, [sl]
   369b0:	bl	367a0 <btrfs_util_create_snapshot_fd2@@Base>
   369b4:	ldr	r3, [r6, #0]
   369b6:	str	r3, [sp, #8]
   369b8:	mov	fp, r0
   369ba:	mov	r0, r8
   369bc:	blx	8e20 <close@plt>
   369c0:	ldr	r3, [sp, #8]
   369c2:	ldr.w	r0, [sl]
   369c6:	str	r3, [r6, #0]
   369c8:	blx	8e20 <close@plt>
   369cc:	ldr	r3, [sp, #8]
   369ce:	str	r3, [r6, #0]
   369d0:	cmp.w	fp, #0
   369d4:	bne.n	36918 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   369d6:	cmp	r5, #0
   369d8:	beq.n	368f4 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   369da:	ldr	r3, [sp, #16]
   369dc:	ldrd	r0, r1, [r3]
   369e0:	ldrd	r2, r3, [r5]
   369e4:	cmp	r3, r1
   369e6:	it	eq
   369e8:	cmpeq	r2, r0
   369ea:	bcs.n	368f4 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   369ec:	strd	r0, r1, [r5]
   369f0:	b.n	368f4 <btrfs_util_create_snapshot_fd2@@Base+0x154>
   369f2:	movs	r6, #7
   369f4:	b.n	3680a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   369f6:	movs	r6, #16
   369f8:	b.n	3680a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   369fa:	mov	r6, r3
   369fc:	b.n	3680a <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   369fe:	mov	r0, r6
   36a00:	add.w	sp, sp, #8192	; 0x2000
   36a04:	add	sp, #4
   36a06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36a0a:	nop
   36a0c:	str	r4, [sp, #92]	; 0x5c
   36a0e:	str	r0, [r0, r0]
   36a10:	movs	r5, #112	; 0x70
   36a12:	movs	r3, r0
   36a14:	lsls	r4, r7, #9
   36a16:	movs	r0, r0
   36a18:	movs	r5, #28
   36a1a:	movs	r3, r0

00036a1c <btrfs_util_create_snapshot_fd@@Base>:
   36a1c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   36a20:	subw	sp, sp, #4068	; 0xfe4
   36a24:	mov	r8, r3
   36a26:	add.w	r3, sp, #4096	; 0x1000
   36a2a:	mov	r7, r2
   36a2c:	ldr	r2, [pc, #112]	; (36aa0 <btrfs_util_create_snapshot_fd@@Base+0x84>)
   36a2e:	ldr.w	r9, [r3]
   36a32:	add	r6, sp, #16
   36a34:	ldr	r3, [pc, #108]	; (36aa4 <btrfs_util_create_snapshot_fd@@Base+0x88>)
   36a36:	add	r2, pc
   36a38:	mov	r5, r0
   36a3a:	mvn.w	r0, #99	; 0x63
   36a3e:	ldr	r3, [r2, r3]
   36a40:	add	r2, sp, #20
   36a42:	ldr	r3, [r3, #0]
   36a44:	str.w	r3, [sp, #4060]	; 0xfdc
   36a48:	mov.w	r3, #0
   36a4c:	movw	r3, #4040	; 0xfc8
   36a50:	str	r6, [sp, #0]
   36a52:	str	r2, [sp, #12]
   36a54:	bl	352c8 <print_all_devices@@Base+0x160>
   36a58:	mov	r4, r0
   36a5a:	cbnz	r0, 36a7e <btrfs_util_create_snapshot_fd@@Base+0x62>
   36a5c:	mov	r3, r7
   36a5e:	ldr	r2, [sp, #12]
   36a60:	mov	r0, r5
   36a62:	strd	r8, r9, [sp]
   36a66:	ldr	r1, [r6, #0]
   36a68:	bl	367a0 <btrfs_util_create_snapshot_fd2@@Base>
   36a6c:	mov	r4, r0
   36a6e:	blx	8bac <__errno_location@plt>
   36a72:	ldr	r7, [r0, #0]
   36a74:	mov	r5, r0
   36a76:	ldr	r0, [r6, #0]
   36a78:	blx	8e20 <close@plt>
   36a7c:	str	r7, [r5, #0]
   36a7e:	ldr	r2, [pc, #40]	; (36aa8 <btrfs_util_create_snapshot_fd@@Base+0x8c>)
   36a80:	ldr	r3, [pc, #32]	; (36aa4 <btrfs_util_create_snapshot_fd@@Base+0x88>)
   36a82:	add	r2, pc
   36a84:	ldr	r3, [r2, r3]
   36a86:	ldr	r2, [r3, #0]
   36a88:	ldr.w	r3, [sp, #4060]	; 0xfdc
   36a8c:	eors	r2, r3
   36a8e:	beq.n	36a94 <btrfs_util_create_snapshot_fd@@Base+0x78>
   36a90:	blx	88e4 <__stack_chk_fail@plt>
   36a94:	mov	r0, r4
   36a96:	addw	sp, sp, #4068	; 0xfe4
   36a9a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   36a9e:	nop
   36aa0:	movs	r2, #250	; 0xfa
   36aa2:	movs	r3, r0
   36aa4:	lsls	r4, r7, #9
   36aa6:	movs	r0, r0
   36aa8:	movs	r2, #174	; 0xae
   36aaa:	movs	r3, r0

00036aac <btrfs_util_create_snapshot@@Base>:
   36aac:	push	{r4, r5, r6, r7, lr}
   36aae:	sub	sp, #20
   36ab0:	mov	r4, r1
   36ab2:	movs	r1, #0
   36ab4:	strd	r3, r2, [sp, #8]
   36ab8:	blx	8b1c <open@plt>
   36abc:	adds	r3, r0, #1
   36abe:	mov	r6, r0
   36ac0:	beq.n	36ae8 <btrfs_util_create_snapshot@@Base+0x3c>
   36ac2:	ldr	r1, [sp, #40]	; 0x28
   36ac4:	ldrd	r3, r2, [sp, #8]
   36ac8:	str	r1, [sp, #0]
   36aca:	mov	r1, r4
   36acc:	bl	36a1c <btrfs_util_create_snapshot_fd@@Base>
   36ad0:	mov	r4, r0
   36ad2:	blx	8bac <__errno_location@plt>
   36ad6:	ldr	r7, [r0, #0]
   36ad8:	mov	r5, r0
   36ada:	mov	r0, r6
   36adc:	blx	8e20 <close@plt>
   36ae0:	str	r7, [r5, #0]
   36ae2:	mov	r0, r4
   36ae4:	add	sp, #20
   36ae6:	pop	{r4, r5, r6, r7, pc}
   36ae8:	movs	r4, #7
   36aea:	b.n	36ae2 <btrfs_util_create_snapshot@@Base+0x36>

00036aec <btrfs_util_delete_subvolume_fd@@Base>:
   36aec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36af0:	mov	r5, r1
   36af2:	ldr	r1, [pc, #384]	; (36c74 <btrfs_util_delete_subvolume_fd@@Base+0x188>)
   36af4:	mov	r6, r2
   36af6:	ldr	r2, [pc, #384]	; (36c78 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   36af8:	sub.w	sp, sp, #8192	; 0x2000
   36afc:	add	r1, pc
   36afe:	sub	sp, #36	; 0x24
   36b00:	add.w	r3, sp, #8192	; 0x2000
   36b04:	add	r4, sp, #32
   36b06:	ldr	r2, [r1, r2]
   36b08:	mov	r7, r0
   36b0a:	mov	r0, r4
   36b0c:	movs	r1, #0
   36b0e:	ldr	r2, [r2, #0]
   36b10:	str	r2, [r3, #28]
   36b12:	mov.w	r2, #0
   36b16:	mov.w	r2, #4096	; 0x1000
   36b1a:	adds	r3, #28
   36b1c:	blx	8bf8 <memset@plt+0x4>
   36b20:	bics.w	r2, r6, #1
   36b24:	beq.n	36b34 <btrfs_util_delete_subvolume_fd@@Base+0x48>
   36b26:	blx	8bac <__errno_location@plt>
   36b2a:	movs	r3, #22
   36b2c:	mov.w	r8, #3
   36b30:	str	r3, [r0, #0]
   36b32:	b.n	36b60 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   36b34:	cbnz	r6, 36b4e <btrfs_util_delete_subvolume_fd@@Base+0x62>
   36b36:	mov	r0, r5
   36b38:	blx	8b70 <strlen@plt>
   36b3c:	movw	r3, #4087	; 0xff7
   36b40:	cmp	r0, r3
   36b42:	mov	r6, r0
   36b44:	bls.n	36c34 <btrfs_util_delete_subvolume_fd@@Base+0x148>
   36b46:	blx	8bac <__errno_location@plt>
   36b4a:	movs	r3, #36	; 0x24
   36b4c:	b.n	36b2c <btrfs_util_delete_subvolume_fd@@Base+0x40>
   36b4e:	mov	r1, r5
   36b50:	mov	r0, r7
   36b52:	blx	88d8 <openat@plt>
   36b56:	adds	r3, r0, #1
   36b58:	mov	r6, r0
   36b5a:	bne.n	36b7a <btrfs_util_delete_subvolume_fd@@Base+0x8e>
   36b5c:	mov.w	r8, #7
   36b60:	ldr	r1, [pc, #280]	; (36c7c <btrfs_util_delete_subvolume_fd@@Base+0x190>)
   36b62:	add.w	r3, sp, #8192	; 0x2000
   36b66:	ldr	r2, [pc, #272]	; (36c78 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   36b68:	adds	r3, #28
   36b6a:	add	r1, pc
   36b6c:	ldr	r2, [r1, r2]
   36b6e:	ldr	r1, [r2, #0]
   36b70:	ldr	r2, [r3, #0]
   36b72:	eors	r1, r2
   36b74:	beq.n	36c62 <btrfs_util_delete_subvolume_fd@@Base+0x176>
   36b76:	blx	88e4 <__stack_chk_fail@plt>
   36b7a:	sub.w	r3, r4, #12
   36b7e:	movs	r2, #0
   36b80:	strd	r3, r3, [sp, #4]
   36b84:	movs	r3, #1
   36b86:	str	r3, [sp, #0]
   36b88:	movs	r3, #0
   36b8a:	bl	3636c <btrfs_util_create_subvolume_iterator_fd@@Base>
   36b8e:	mov	r8, r0
   36b90:	cbnz	r0, 36bca <btrfs_util_delete_subvolume_fd@@Base+0xde>
   36b92:	add.w	sl, sp, #4128	; 0x1020
   36b96:	sub.w	r9, r4, #8
   36b9a:	add.w	sl, sl, #4
   36b9e:	ldr	r3, [sp, #8]
   36ba0:	movs	r2, #0
   36ba2:	mov	r1, r9
   36ba4:	ldr	r0, [r3, #0]
   36ba6:	bl	364d4 <btrfs_util_subvolume_iterator_next@@Base>
   36baa:	mov	r8, r0
   36bac:	blx	8bac <__errno_location@plt>
   36bb0:	mov	fp, r0
   36bb2:	cmp.w	r8, #0
   36bb6:	beq.n	36be6 <btrfs_util_delete_subvolume_fd@@Base+0xfa>
   36bb8:	cmp.w	r8, #1
   36bbc:	it	eq
   36bbe:	moveq.w	r8, #0
   36bc2:	ldr.w	r0, [r4, #-12]
   36bc6:	bl	36484 <btrfs_util_destroy_subvolume_iterator@@Base>
   36bca:	blx	8bac <__errno_location@plt>
   36bce:	ldr.w	sl, [r0]
   36bd2:	mov	r9, r0
   36bd4:	mov	r0, r6
   36bd6:	blx	8e20 <close@plt>
   36bda:	str.w	sl, [r9]
   36bde:	cmp.w	r8, #0
   36be2:	beq.n	36b36 <btrfs_util_delete_subvolume_fd@@Base+0x4a>
   36be4:	b.n	36b60 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   36be6:	subs	r3, r4, #4
   36be8:	mov	r2, sl
   36bea:	str	r3, [sp, #0]
   36bec:	mov	r0, r6
   36bee:	ldr.w	r1, [r9]
   36bf2:	movw	r3, #4088	; 0xff8
   36bf6:	bl	352c8 <print_all_devices@@Base+0x160>
   36bfa:	mov	r8, r0
   36bfc:	ldr.w	r0, [r9]
   36c00:	blx	87cc <free@plt+0x4>
   36c04:	cmp.w	r8, #0
   36c08:	bne.n	36bc2 <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   36c0a:	mov	r2, r8
   36c0c:	mov	r1, sl
   36c0e:	ldr.w	r0, [r4, #-4]
   36c12:	bl	36aec <btrfs_util_delete_subvolume_fd@@Base>
   36c16:	ldr.w	r3, [fp]
   36c1a:	str	r3, [sp, #12]
   36c1c:	mov	r8, r0
   36c1e:	ldr.w	r0, [r4, #-4]
   36c22:	blx	8e20 <close@plt>
   36c26:	ldr	r3, [sp, #12]
   36c28:	str.w	r3, [fp]
   36c2c:	cmp.w	r8, #0
   36c30:	beq.n	36b9e <btrfs_util_delete_subvolume_fd@@Base+0xb2>
   36c32:	b.n	36bc2 <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   36c34:	mov	r2, r0
   36c36:	movw	r3, #4088	; 0xff8
   36c3a:	mov	r1, r5
   36c3c:	add.w	r0, r4, #8
   36c40:	add	r6, r4
   36c42:	blx	89a4 <__memcpy_chk@plt>
   36c46:	ldr	r1, [pc, #40]	; (36c70 <btrfs_util_delete_subvolume_fd@@Base+0x184>)
   36c48:	mov	r2, r4
   36c4a:	mov	r0, r7
   36c4c:	movs	r3, #0
   36c4e:	strb	r3, [r6, #8]
   36c50:	blx	89cc <ioctl@plt>
   36c54:	adds	r0, #1
   36c56:	ite	ne
   36c58:	movne.w	r8, #0
   36c5c:	moveq.w	r8, #18
   36c60:	b.n	36b60 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   36c62:	mov	r0, r8
   36c64:	add.w	sp, sp, #8192	; 0x2000
   36c68:	add	sp, #36	; 0x24
   36c6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36c6e:	nop
   36c70:	str	r4, [sp, #60]	; 0x3c
   36c72:	str	r0, [r0, r0]
   36c74:	movs	r2, #52	; 0x34
   36c76:	movs	r3, r0
   36c78:	lsls	r4, r7, #9
   36c7a:	movs	r0, r0
   36c7c:	movs	r1, #198	; 0xc6
   36c7e:	movs	r3, r0

00036c80 <btrfs_util_delete_subvolume@@Base>:
   36c80:	push	{r4, r5, r6, r7, lr}
   36c82:	mov	r5, r1
   36c84:	ldr	r1, [pc, #116]	; (36cfc <btrfs_util_delete_subvolume@@Base+0x7c>)
   36c86:	sub.w	sp, sp, #4096	; 0x1000
   36c8a:	ldr	r2, [pc, #116]	; (36d00 <btrfs_util_delete_subvolume@@Base+0x80>)
   36c8c:	sub	sp, #12
   36c8e:	add	r1, pc
   36c90:	add.w	r3, sp, #4096	; 0x1000
   36c94:	add	r7, sp, #12
   36c96:	adds	r3, #4
   36c98:	ldr	r2, [r1, r2]
   36c9a:	add	r6, sp, #8
   36c9c:	mov	r1, r0
   36c9e:	mvn.w	r0, #99	; 0x63
   36ca2:	ldr	r2, [r2, #0]
   36ca4:	str	r2, [r3, #0]
   36ca6:	mov.w	r2, #0
   36caa:	movw	r3, #4088	; 0xff8
   36cae:	mov	r2, r7
   36cb0:	str	r6, [sp, #0]
   36cb2:	bl	352c8 <print_all_devices@@Base+0x160>
   36cb6:	mov	r4, r0
   36cb8:	cbnz	r0, 36cd6 <btrfs_util_delete_subvolume@@Base+0x56>
   36cba:	mov	r2, r5
   36cbc:	mov	r1, r7
   36cbe:	ldr	r0, [r6, #0]
   36cc0:	bl	36aec <btrfs_util_delete_subvolume_fd@@Base>
   36cc4:	mov	r4, r0
   36cc6:	blx	8bac <__errno_location@plt>
   36cca:	ldr	r7, [r0, #0]
   36ccc:	mov	r5, r0
   36cce:	ldr	r0, [r6, #0]
   36cd0:	blx	8e20 <close@plt>
   36cd4:	str	r7, [r5, #0]
   36cd6:	ldr	r1, [pc, #44]	; (36d04 <btrfs_util_delete_subvolume@@Base+0x84>)
   36cd8:	add.w	r3, sp, #4096	; 0x1000
   36cdc:	ldr	r2, [pc, #32]	; (36d00 <btrfs_util_delete_subvolume@@Base+0x80>)
   36cde:	adds	r3, #4
   36ce0:	add	r1, pc
   36ce2:	ldr	r2, [r1, r2]
   36ce4:	ldr	r1, [r2, #0]
   36ce6:	ldr	r2, [r3, #0]
   36ce8:	eors	r1, r2
   36cea:	beq.n	36cf0 <btrfs_util_delete_subvolume@@Base+0x70>
   36cec:	blx	88e4 <__stack_chk_fail@plt>
   36cf0:	mov	r0, r4
   36cf2:	add.w	sp, sp, #4096	; 0x1000
   36cf6:	add	sp, #12
   36cf8:	pop	{r4, r5, r6, r7, pc}
   36cfa:	nop
   36cfc:	movs	r0, #162	; 0xa2
   36cfe:	movs	r3, r0
   36d00:	lsls	r4, r7, #9
   36d02:	movs	r0, r0
   36d04:	movs	r0, #80	; 0x50
   36d06:	movs	r3, r0

00036d08 <btrfs_util_subvolume_iterator_next_info@@Base>:
   36d08:	push	{r4, r5, lr}
   36d0a:	mov	r5, r2
   36d0c:	ldr	r2, [pc, #72]	; (36d58 <btrfs_util_subvolume_iterator_next_info@@Base+0x50>)
   36d0e:	sub	sp, #28
   36d10:	ldr	r3, [pc, #72]	; (36d5c <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   36d12:	mov	r4, r0
   36d14:	add	r2, pc
   36d16:	ldr	r3, [r2, r3]
   36d18:	add	r2, sp, #8
   36d1a:	ldr	r3, [r3, #0]
   36d1c:	str	r3, [sp, #20]
   36d1e:	mov.w	r3, #0
   36d22:	bl	364d4 <btrfs_util_subvolume_iterator_next@@Base>
   36d26:	cbnz	r0, 36d38 <btrfs_util_subvolume_iterator_next_info@@Base+0x30>
   36d28:	ldrb	r3, [r4, #0]
   36d2a:	str	r5, [sp, #0]
   36d2c:	cbz	r3, 36d4c <btrfs_util_subvolume_iterator_next_info@@Base+0x44>
   36d2e:	ldrd	r2, r3, [sp, #8]
   36d32:	ldr	r0, [r4, #4]
   36d34:	bl	35e40 <btrfs_util_subvolume_info_fd@@Base>
   36d38:	ldr	r2, [pc, #36]	; (36d60 <btrfs_util_subvolume_iterator_next_info@@Base+0x58>)
   36d3a:	ldr	r3, [pc, #32]	; (36d5c <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   36d3c:	add	r2, pc
   36d3e:	ldr	r3, [r2, r3]
   36d40:	ldr	r2, [r3, #0]
   36d42:	ldr	r3, [sp, #20]
   36d44:	eors	r2, r3
   36d46:	beq.n	36d54 <btrfs_util_subvolume_iterator_next_info@@Base+0x4c>
   36d48:	blx	88e4 <__stack_chk_fail@plt>
   36d4c:	ldr	r0, [r4, #8]
   36d4e:	movs	r2, #0
   36d50:	movs	r3, #0
   36d52:	b.n	36d34 <btrfs_util_subvolume_iterator_next_info@@Base+0x2c>
   36d54:	add	sp, #28
   36d56:	pop	{r4, r5, pc}
   36d58:	movs	r0, #28
   36d5a:	movs	r3, r0
   36d5c:	lsls	r4, r7, #9
   36d5e:	movs	r0, r0
   36d60:	subs	r4, r6, #7
   36d62:	movs	r3, r0

00036d64 <btrfs_util_deleted_subvolumes_fd@@Base>:
   36d64:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36d68:	mov	r6, r1
   36d6a:	ldr	r1, [pc, #320]	; (36eac <btrfs_util_deleted_subvolumes_fd@@Base+0x148>)
   36d6c:	mov	r7, r2
   36d6e:	ldr	r2, [pc, #320]	; (36eb0 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   36d70:	sub.w	sp, sp, #4096	; 0x1000
   36d74:	add	r1, pc
   36d76:	sub	sp, #28
   36d78:	add	r5, sp, #16
   36d7a:	add.w	r3, sp, #4096	; 0x1000
   36d7e:	ldr	r2, [r1, r2]
   36d80:	add	r4, sp, #24
   36d82:	mov	fp, r0
   36d84:	mov	r0, r5
   36d86:	ldr	r2, [r2, #0]
   36d88:	str	r2, [r3, #20]
   36d8a:	mov.w	r2, #0
   36d8e:	movs	r1, #0
   36d90:	mov.w	r2, #4096	; 0x1000
   36d94:	adds	r3, #20
   36d96:	blx	8bf8 <memset@plt+0x4>
   36d9a:	movs	r2, #1
   36d9c:	movs	r3, #0
   36d9e:	strd	r2, r3, [r4, #-8]
   36da2:	movs	r4, #0
   36da4:	mvn.w	r2, #4
   36da8:	mov	sl, r4
   36daa:	mov	r9, r4
   36dac:	mov.w	r3, #4294967295	; 0xffffffff
   36db0:	str	r4, [r6, #0]
   36db2:	strd	r2, r3, [r5, #8]
   36db6:	strd	r2, r3, [r5, #16]
   36dba:	mov.w	r3, #4294967295	; 0xffffffff
   36dbe:	mov.w	r2, #4294967295	; 0xffffffff
   36dc2:	str	r4, [r7, #0]
   36dc4:	strd	r2, r3, [r5, #32]
   36dc8:	strd	r2, r3, [r5, #48]	; 0x30
   36dcc:	movs	r3, #48	; 0x30
   36dce:	strd	r3, r3, [r5, #56]	; 0x38
   36dd2:	ldr	r3, [r5, #64]	; 0x40
   36dd4:	cmp	r3, sl
   36dd6:	bhi.n	36df6 <btrfs_util_deleted_subvolumes_fd@@Base+0x92>
   36dd8:	ldr	r1, [pc, #204]	; (36ea8 <btrfs_util_deleted_subvolumes_fd@@Base+0x144>)
   36dda:	mov	r2, r5
   36ddc:	mov	r0, fp
   36dde:	mov.w	r3, #4096	; 0x1000
   36de2:	str	r3, [r5, #64]	; 0x40
   36de4:	blx	89cc <ioctl@plt>
   36de8:	adds	r0, #1
   36dea:	beq.n	36e92 <btrfs_util_deleted_subvolumes_fd@@Base+0x12e>
   36dec:	ldr	r3, [r5, #64]	; 0x40
   36dee:	cmp	r3, #0
   36df0:	beq.n	36e78 <btrfs_util_deleted_subvolumes_fd@@Base+0x114>
   36df2:	movs	r4, #0
   36df4:	mov	sl, r4
   36df6:	add.w	r8, sp, #120	; 0x78
   36dfa:	movs	r3, #0
   36dfc:	add	r8, r4
   36dfe:	str	r3, [sp, #0]
   36e00:	mov	r0, fp
   36e02:	ldrd	r2, r3, [r8, #16]
   36e06:	bl	35e40 <btrfs_util_subvolume_info_fd@@Base>
   36e0a:	mov	r3, r0
   36e0c:	cbnz	r0, 36e64 <btrfs_util_deleted_subvolumes_fd@@Base+0x100>
   36e0e:	ldr	r3, [r7, #0]
   36e10:	cmp	r3, r9
   36e12:	bcc.n	36e2e <btrfs_util_deleted_subvolumes_fd@@Base+0xca>
   36e14:	cmp.w	r9, #0
   36e18:	beq.n	36e5e <btrfs_util_deleted_subvolumes_fd@@Base+0xfa>
   36e1a:	mov.w	r9, r9, lsl #1
   36e1e:	ldr	r0, [r6, #0]
   36e20:	movs	r2, #8
   36e22:	mov	r1, r9
   36e24:	bl	36ef0 <btrfs_util_deleted_subvolumes@@Base+0x38>
   36e28:	cmp	r0, #0
   36e2a:	beq.n	36e96 <btrfs_util_deleted_subvolumes_fd@@Base+0x132>
   36e2c:	str	r0, [r6, #0]
   36e2e:	ldr	r0, [r7, #0]
   36e30:	ldr	r1, [r6, #0]
   36e32:	adds	r3, r0, #1
   36e34:	str	r3, [r7, #0]
   36e36:	ldrd	r2, r3, [r8, #16]
   36e3a:	add.w	r1, r1, r0, lsl #3
   36e3e:	strd	r2, r3, [r1]
   36e42:	ldr.w	r3, [r8, #28]
   36e46:	adds	r4, #32
   36e48:	add.w	sl, sl, #1
   36e4c:	add	r4, r3
   36e4e:	ldrd	r3, r2, [r8, #16]
   36e52:	adds	r3, #1
   36e54:	adc.w	r2, r2, #0
   36e58:	strd	r3, r2, [r5, #24]
   36e5c:	b.n	36dd2 <btrfs_util_deleted_subvolumes_fd@@Base+0x6e>
   36e5e:	mov.w	r9, #1
   36e62:	b.n	36e1e <btrfs_util_deleted_subvolumes_fd@@Base+0xba>
   36e64:	cmp	r0, #6
   36e66:	beq.n	36e42 <btrfs_util_deleted_subvolumes_fd@@Base+0xde>
   36e68:	ldr	r0, [r6, #0]
   36e6a:	str	r3, [sp, #12]
   36e6c:	blx	87cc <free@plt+0x4>
   36e70:	ldr	r3, [sp, #12]
   36e72:	movs	r2, #0
   36e74:	str	r2, [r6, #0]
   36e76:	str	r2, [r7, #0]
   36e78:	ldr	r0, [pc, #56]	; (36eb4 <btrfs_util_deleted_subvolumes_fd@@Base+0x150>)
   36e7a:	add.w	r2, sp, #4096	; 0x1000
   36e7e:	ldr	r1, [pc, #48]	; (36eb0 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   36e80:	adds	r2, #20
   36e82:	add	r0, pc
   36e84:	ldr	r1, [r0, r1]
   36e86:	ldr	r0, [r1, #0]
   36e88:	ldr	r1, [r2, #0]
   36e8a:	eors	r0, r1
   36e8c:	beq.n	36e9a <btrfs_util_deleted_subvolumes_fd@@Base+0x136>
   36e8e:	blx	88e4 <__stack_chk_fail@plt>
   36e92:	movs	r3, #12
   36e94:	b.n	36e68 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   36e96:	movs	r3, #2
   36e98:	b.n	36e68 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   36e9a:	mov	r0, r3
   36e9c:	add.w	sp, sp, #4096	; 0x1000
   36ea0:	add	sp, #28
   36ea2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36ea6:	nop
   36ea8:	str	r4, [sp, #68]	; 0x44
   36eaa:	beq.n	36eae <btrfs_util_deleted_subvolumes_fd@@Base+0x14a>
   36eac:	subs	r4, r7, #6
   36eae:	movs	r3, r0
   36eb0:	lsls	r4, r7, #9
   36eb2:	movs	r0, r0
   36eb4:	subs	r6, r5, #2
   36eb6:	movs	r3, r0

00036eb8 <btrfs_util_deleted_subvolumes@@Base>:
   36eb8:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   36eba:	mov	r4, r1
   36ebc:	movs	r1, #0
   36ebe:	str	r2, [sp, #4]
   36ec0:	blx	8b1c <open@plt>
   36ec4:	adds	r3, r0, #1
   36ec6:	mov	r6, r0
   36ec8:	beq.n	36eea <btrfs_util_deleted_subvolumes@@Base+0x32>
   36eca:	mov	r1, r4
   36ecc:	ldr	r2, [sp, #4]
   36ece:	bl	36d64 <btrfs_util_deleted_subvolumes_fd@@Base>
   36ed2:	mov	r4, r0
   36ed4:	blx	8bac <__errno_location@plt>
   36ed8:	ldr	r7, [r0, #0]
   36eda:	mov	r5, r0
   36edc:	mov	r0, r6
   36ede:	blx	8e20 <close@plt>
   36ee2:	str	r7, [r5, #0]
   36ee4:	mov	r0, r4
   36ee6:	add	sp, #12
   36ee8:	pop	{r4, r5, r6, r7, pc}
   36eea:	movs	r4, #7
   36eec:	b.n	36ee4 <btrfs_util_deleted_subvolumes@@Base+0x2c>
   36eee:	nop
   36ef0:	push	{r3, lr}
   36ef2:	mul.w	r3, r2, r1
   36ef6:	cmp	r1, r3
   36ef8:	bhi.n	36f08 <btrfs_util_deleted_subvolumes@@Base+0x50>
   36efa:	cmp	r2, r3
   36efc:	bhi.n	36f08 <btrfs_util_deleted_subvolumes@@Base+0x50>
   36efe:	mov	r1, r3
   36f00:	ldmia.w	sp!, {r3, lr}
   36f04:	b.w	8920 <realloc@plt>
   36f08:	blx	8bac <__errno_location@plt>
   36f0c:	movs	r3, #12
   36f0e:	str	r3, [r0, #0]
   36f10:	movs	r0, #0
   36f12:	pop	{r3, pc}

00036f14 <hash_crc32c@@Base>:
   36f14:	push	{r4, lr}
   36f16:	mov	r4, r2
   36f18:	mov	r2, r1
   36f1a:	mov	r1, r0
   36f1c:	mov.w	r0, #4294967295	; 0xffffffff
   36f20:	bl	1a87e <crc32c_le@@Base>
   36f24:	mvns	r0, r0
   36f26:	str	r0, [r4, #0]
   36f28:	movs	r0, #0
   36f2a:	pop	{r4, pc}

00036f2c <hash_xxhash@@Base>:
   36f2c:	push	{r0, r1, r2, r3, r4, lr}
   36f2e:	mov	r4, r2
   36f30:	ldr	r2, [pc, #60]	; (36f70 <hash_xxhash@@Base+0x44>)
   36f32:	ldr	r3, [pc, #64]	; (36f74 <hash_xxhash@@Base+0x48>)
   36f34:	add	r2, pc
   36f36:	ldr	r3, [r2, r3]
   36f38:	movs	r2, #0
   36f3a:	ldr	r3, [r3, #0]
   36f3c:	str	r3, [sp, #12]
   36f3e:	mov.w	r3, #0
   36f42:	movs	r3, #0
   36f44:	bl	378e8 <XXH64@@Base>
   36f48:	ldr	r2, [pc, #44]	; (36f78 <hash_xxhash@@Base+0x4c>)
   36f4a:	mov	r3, sp
   36f4c:	add	r2, pc
   36f4e:	strd	r0, r1, [sp]
   36f52:	ldmia	r3!, {r0, r1}
   36f54:	ldr	r3, [pc, #28]	; (36f74 <hash_xxhash@@Base+0x48>)
   36f56:	str	r0, [r4, #0]
   36f58:	str	r1, [r4, #4]
   36f5a:	ldr	r3, [r2, r3]
   36f5c:	ldr	r2, [r3, #0]
   36f5e:	ldr	r3, [sp, #12]
   36f60:	eors	r2, r3
   36f62:	beq.n	36f68 <hash_xxhash@@Base+0x3c>
   36f64:	blx	88e4 <__stack_chk_fail@plt>
   36f68:	movs	r0, #0
   36f6a:	add	sp, #16
   36f6c:	pop	{r4, pc}
   36f6e:	nop
   36f70:	adds	r4, r7, #7
   36f72:	movs	r3, r0
   36f74:	lsls	r4, r7, #9
   36f76:	movs	r0, r0
   36f78:	adds	r4, r4, #7
   36f7a:	movs	r3, r0

00036f7c <hash_sha256@@Base>:
   36f7c:	push	{r4, r5, r6, r7, lr}
   36f7e:	mov	r5, r2
   36f80:	ldr	r2, [pc, #72]	; (36fcc <hash_sha256@@Base+0x50>)
   36f82:	sub	sp, #124	; 0x7c
   36f84:	ldr	r3, [pc, #72]	; (36fd0 <hash_sha256@@Base+0x54>)
   36f86:	mov	r7, r1
   36f88:	add	r2, pc
   36f8a:	mov	r4, sp
   36f8c:	mov	r6, r0
   36f8e:	mov	r0, r4
   36f90:	ldr	r3, [r2, r3]
   36f92:	ldr	r3, [r3, #0]
   36f94:	str	r3, [sp, #116]	; 0x74
   36f96:	mov.w	r3, #0
   36f9a:	bl	38196 <SHA256Reset@@Base>
   36f9e:	mov	r2, r7
   36fa0:	mov	r1, r6
   36fa2:	mov	r0, r4
   36fa4:	bl	381d4 <SHA256Input@@Base>
   36fa8:	mov	r1, r5
   36faa:	mov	r0, r4
   36fac:	bl	382cc <SHA256Result@@Base>
   36fb0:	ldr	r2, [pc, #32]	; (36fd4 <hash_sha256@@Base+0x58>)
   36fb2:	ldr	r3, [pc, #28]	; (36fd0 <hash_sha256@@Base+0x54>)
   36fb4:	add	r2, pc
   36fb6:	ldr	r3, [r2, r3]
   36fb8:	ldr	r2, [r3, #0]
   36fba:	ldr	r3, [sp, #116]	; 0x74
   36fbc:	eors	r2, r3
   36fbe:	beq.n	36fc4 <hash_sha256@@Base+0x48>
   36fc0:	blx	88e4 <__stack_chk_fail@plt>
   36fc4:	movs	r0, #0
   36fc6:	add	sp, #124	; 0x7c
   36fc8:	pop	{r4, r5, r6, r7, pc}
   36fca:	nop
   36fcc:	adds	r0, r5, #6
   36fce:	movs	r3, r0
   36fd0:	lsls	r4, r7, #9
   36fd2:	movs	r0, r0
   36fd4:	adds	r4, r7, #5
   36fd6:	movs	r3, r0

00036fd8 <hash_blake2b@@Base>:
   36fd8:	push	{r4, r5, r6, r7, lr}
   36fda:	mov	r5, r2
   36fdc:	ldr	r2, [pc, #76]	; (3702c <hash_blake2b@@Base+0x54>)
   36fde:	sub	sp, #252	; 0xfc
   36fe0:	ldr	r3, [pc, #76]	; (37030 <hash_blake2b@@Base+0x58>)
   36fe2:	mov	r6, r0
   36fe4:	add	r2, pc
   36fe6:	mov	r4, sp
   36fe8:	mov	r7, r1
   36fea:	mov	r0, r4
   36fec:	ldr	r3, [r2, r3]
   36fee:	movs	r1, #32
   36ff0:	ldr	r3, [r3, #0]
   36ff2:	str	r3, [sp, #244]	; 0xf4
   36ff4:	mov.w	r3, #0
   36ff8:	bl	3bd84 <blake2b_init@@Base>
   36ffc:	mov	r2, r7
   36ffe:	mov	r1, r6
   37000:	mov	r0, r4
   37002:	bl	3be10 <blake2b_update@@Base>
   37006:	movs	r2, #32
   37008:	mov	r1, r5
   3700a:	mov	r0, r4
   3700c:	bl	3bfc0 <blake2b_final@@Base>
   37010:	ldr	r2, [pc, #32]	; (37034 <hash_blake2b@@Base+0x5c>)
   37012:	ldr	r3, [pc, #28]	; (37030 <hash_blake2b@@Base+0x58>)
   37014:	add	r2, pc
   37016:	ldr	r3, [r2, r3]
   37018:	ldr	r2, [r3, #0]
   3701a:	ldr	r3, [sp, #244]	; 0xf4
   3701c:	eors	r2, r3
   3701e:	beq.n	37024 <hash_blake2b@@Base+0x4c>
   37020:	blx	88e4 <__stack_chk_fail@plt>
   37024:	movs	r0, #0
   37026:	add	sp, #252	; 0xfc
   37028:	pop	{r4, r5, r6, r7, pc}
   3702a:	nop
   3702c:	adds	r4, r1, #5
   3702e:	movs	r3, r0
   37030:	lsls	r4, r7, #9
   37032:	movs	r0, r0
   37034:	adds	r4, r3, #4
   37036:	movs	r3, r0
   37038:	push	{r4, r5, r6, r7, lr}
   3703a:	and.w	r2, r2, #15
   3703e:	ldr	r6, [pc, #96]	; (370a0 <hash_blake2b@@Base+0xc8>)
   37040:	adds	r5, r1, r2
   37042:	ldr	r7, [pc, #96]	; (370a4 <hash_blake2b@@Base+0xcc>)
   37044:	mov	r4, r2
   37046:	cmp	r4, #3
   37048:	sub.w	r3, r5, r4
   3704c:	bhi.n	3707e <hash_blake2b@@Base+0xa6>
   3704e:	and.w	r4, r2, #12
   37052:	lsrs	r3, r2, #2
   37054:	add	r1, r4
   37056:	mvn.w	r4, #3
   3705a:	mla	r2, r4, r3, r2
   3705e:	ldr	r5, [pc, #72]	; (370a8 <hash_blake2b@@Base+0xd0>)
   37060:	ldr	r4, [pc, #72]	; (370ac <hash_blake2b@@Base+0xd4>)
   37062:	add	r2, r1
   37064:	cmp	r1, r2
   37066:	bne.n	3708e <hash_blake2b@@Base+0xb6>
   37068:	ldr	r3, [pc, #68]	; (370b0 <hash_blake2b@@Base+0xd8>)
   3706a:	eor.w	r0, r0, r0, lsr #15
   3706e:	muls	r0, r3
   37070:	ldr	r3, [pc, #44]	; (370a0 <hash_blake2b@@Base+0xc8>)
   37072:	eor.w	r0, r0, r0, lsr #13
   37076:	muls	r0, r3
   37078:	eor.w	r0, r0, r0, lsr #16
   3707c:	pop	{r4, r5, r6, r7, pc}
   3707e:	ldr	r3, [r3, #0]
   37080:	subs	r4, #4
   37082:	mla	r0, r6, r3, r0
   37086:	mov.w	r0, r0, ror #15
   3708a:	muls	r0, r7
   3708c:	b.n	37046 <hash_blake2b@@Base+0x6e>
   3708e:	ldrb.w	r3, [r1], #1
   37092:	mla	r0, r4, r3, r0
   37096:	mov.w	r0, r0, ror #21
   3709a:	muls	r0, r5
   3709c:	b.n	37064 <hash_blake2b@@Base+0x8c>
   3709e:	nop
   370a0:	add	r6, sp, #244	; 0xf4
   370a2:	stmia	r2!, {r1, r4, r5, r7}
   370a4:			; <UNDEFINED> instruction: 0xeb2f27d4
   370a8:	ldrb	r1, [r6, #6]
   370aa:	ldr	r6, [sp, #220]	; 0xdc
   370ac:	str	r1, [r6, #120]	; 0x78
   370ae:	asrs	r6, r2, #25
   370b0:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   370b2:	strh	r3, [r5, #46]	; 0x2e
   370b4:	cmp	r1, #15
   370b6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   370ba:	mov	r6, r1
   370bc:	bls.n	37150 <hash_blake2b@@Base+0x178>
   370be:	ldr	r4, [pc, #152]	; (37158 <hash_blake2b@@Base+0x180>)
   370c0:	sub.w	lr, r1, #15
   370c4:	ldr	r7, [pc, #148]	; (3715c <hash_blake2b@@Base+0x184>)
   370c6:	add	lr, r0
   370c8:	ldr.w	ip, [pc, #152]	; 37164 <hash_blake2b@@Base+0x18c>
   370cc:	add	r4, r2
   370ce:	ldr.w	r9, [pc, #152]	; 37168 <hash_blake2b@@Base+0x190>
   370d2:	adds	r5, r2, r7
   370d4:	add	ip, r2
   370d6:	mov	r1, r0
   370d8:	ldr.w	r8, [r1]
   370dc:	adds	r1, #16
   370de:	mla	r4, r7, r8, r4
   370e2:	ldr.w	r8, [r1, #-12]
   370e6:	mla	r5, r7, r8, r5
   370ea:	ldr.w	r8, [r1, #-8]
   370ee:	mov.w	r4, r4, ror #19
   370f2:	mla	r2, r7, r8, r2
   370f6:	ldr.w	r8, [r1, #-4]
   370fa:	mov.w	r5, r5, ror #19
   370fe:	cmp	lr, r1
   37100:	mul.w	r4, r9, r4
   37104:	mla	ip, r7, r8, ip
   37108:	mov.w	r2, r2, ror #19
   3710c:	mul.w	r5, r9, r5
   37110:	mul.w	r2, r9, r2
   37114:	mov.w	ip, ip, ror #19
   37118:	mul.w	ip, r9, ip
   3711c:	bhi.n	370d8 <hash_blake2b@@Base+0x100>
   3711e:	sub.w	r1, r6, #16
   37122:	mov.w	r5, r5, ror #25
   37126:	bic.w	r1, r1, #15
   3712a:	adds	r7, r0, #1
   3712c:	adds	r1, #16
   3712e:	add.w	r5, r5, r4, ror #31
   37132:	cmp	lr, r7
   37134:	it	cc
   37136:	movcc	r1, #16
   37138:	add.w	r4, r5, r2, ror #20
   3713c:	add	r0, r1
   3713e:	add.w	r4, r4, ip, ror #14
   37142:	and.w	r2, r6, #15
   37146:	mov	r1, r0
   37148:	adds	r0, r4, r6
   3714a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3714e:	b.n	37038 <hash_blake2b@@Base+0x60>
   37150:	ldr	r4, [pc, #12]	; (37160 <hash_blake2b@@Base+0x188>)
   37152:	add	r4, r2
   37154:	b.n	37142 <hash_blake2b@@Base+0x16a>
   37156:	nop
   37158:	add	r0, r5
   3715a:	movs	r4, #35	; 0x23
   3715c:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   3715e:	strh	r3, [r5, #46]	; 0x2e
   37160:	str	r1, [r6, #120]	; 0x78
   37162:	asrs	r6, r2, #25
   37164:	strh	r7, [r1, #50]	; 0x32
   37166:	str	r0, [r1, #28]
   37168:	ldrb	r1, [r6, #6]
   3716a:	ldr	r6, [sp, #220]	; 0xdc
   3716c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37170:	and.w	r3, r3, #31
   37174:	ldr.w	r8, [pc, #368]	; 372e8 <hash_blake2b@@Base+0x310>
   37178:	add.w	sl, r2, r3
   3717c:	ldr.w	lr, [pc, #352]	; 372e0 <hash_blake2b@@Base+0x308>
   37180:	mov	ip, r3
   37182:	ldr.w	r9, [pc, #352]	; 372e4 <hash_blake2b@@Base+0x30c>
   37186:	ldr.w	fp, [pc, #376]	; 37300 <hash_blake2b@@Base+0x328>
   3718a:	strd	r0, r1, [sp]
   3718e:	cmp.w	ip, #7
   37192:	sub.w	r1, sl, ip
   37196:	bhi.n	37244 <hash_blake2b@@Base+0x26c>
   37198:	and.w	r0, r3, #24
   3719c:	lsrs	r1, r3, #3
   3719e:	add	r2, r0
   371a0:	mvn.w	r0, #7
   371a4:	mla	r3, r0, r1, r3
   371a8:	cmp	r3, #3
   371aa:	bls.n	371f2 <hash_blake2b@@Base+0x21a>
   371ac:	ldr.w	r6, [r2], #4
   371b0:	subs	r3, #4
   371b2:	ldr	r0, [pc, #300]	; (372e0 <hash_blake2b@@Base+0x308>)
   371b4:	ldr	r7, [pc, #300]	; (372e4 <hash_blake2b@@Base+0x30c>)
   371b6:	ldr	r1, [sp, #0]
   371b8:	umull	r4, r5, r6, r0
   371bc:	eor.w	r0, r4, r1
   371c0:	ldr	r1, [sp, #4]
   371c2:	mla	r5, r7, r6, r5
   371c6:	ldr	r7, [pc, #288]	; (372e8 <hash_blake2b@@Base+0x310>)
   371c8:	eors	r1, r5
   371ca:	lsls	r6, r1, #23
   371cc:	orr.w	r6, r6, r0, lsr #9
   371d0:	lsls	r0, r0, #23
   371d2:	orr.w	r0, r0, r1, lsr #9
   371d6:	ldr	r1, [pc, #276]	; (372ec <hash_blake2b@@Base+0x314>)
   371d8:	umull	r4, r5, r0, r7
   371dc:	muls	r1, r0
   371de:	ldr	r0, [pc, #272]	; (372f0 <hash_blake2b@@Base+0x318>)
   371e0:	mla	r6, r7, r6, r1
   371e4:	add	r5, r6
   371e6:	ldr	r6, [pc, #268]	; (372f4 <hash_blake2b@@Base+0x31c>)
   371e8:	adds	r1, r4, r6
   371ea:	str	r1, [sp, #0]
   371ec:	adc.w	r1, r5, r0
   371f0:	str	r1, [sp, #4]
   371f2:	ldr	r7, [pc, #260]	; (372f8 <hash_blake2b@@Base+0x320>)
   371f4:	add	r3, r2
   371f6:	ldr.w	ip, [pc, #268]	; 37304 <hash_blake2b@@Base+0x32c>
   371fa:	ldr	r6, [pc, #228]	; (372e0 <hash_blake2b@@Base+0x308>)
   371fc:	ldr.w	lr, [pc, #228]	; 372e4 <hash_blake2b@@Base+0x30c>
   37200:	cmp	r2, r3
   37202:	bne.n	372a6 <hash_blake2b@@Base+0x2ce>
   37204:	ldrd	r3, r2, [sp]
   37208:	ldr	r1, [pc, #224]	; (372ec <hash_blake2b@@Base+0x314>)
   3720a:	ldr	r0, [sp, #4]
   3720c:	eor.w	r2, r3, r2, lsr #1
   37210:	ldr	r3, [pc, #212]	; (372e8 <hash_blake2b@@Base+0x310>)
   37212:	muls	r1, r2
   37214:	mla	r1, r3, r0, r1
   37218:	umull	r2, r3, r2, r3
   3721c:	add	r3, r1
   3721e:	eor.w	r1, r3, r3, lsr #29
   37222:	lsrs	r0, r2, #29
   37224:	orr.w	r0, r0, r3, lsl #3
   37228:	ldr	r3, [pc, #196]	; (372f0 <hash_blake2b@@Base+0x318>)
   3722a:	eors	r0, r2
   3722c:	ldr	r2, [pc, #196]	; (372f4 <hash_blake2b@@Base+0x31c>)
   3722e:	muls	r3, r0
   37230:	umull	r4, r5, r0, r2
   37234:	mla	r3, r2, r1, r3
   37238:	adds	r1, r5, r3
   3723a:	eor.w	r0, r4, r1
   3723e:	add	sp, #12
   37240:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37244:	ldr	r0, [r1, #0]
   37246:	sub.w	ip, ip, #8
   3724a:	ldr	r6, [r1, #4]
   3724c:	ldr	r1, [pc, #156]	; (372ec <hash_blake2b@@Base+0x314>)
   3724e:	muls	r1, r0
   37250:	mla	r6, r8, r6, r1
   37254:	umull	r0, r1, r0, r8
   37258:	add	r1, r6
   3725a:	lsls	r7, r1, #31
   3725c:	lsls	r6, r0, #31
   3725e:	orr.w	r7, r7, r0, lsr #1
   37262:	orr.w	r6, r6, r1, lsr #1
   37266:	mul.w	r1, r9, r6
   3726a:	mla	r1, lr, r7, r1
   3726e:	umull	r6, r7, r6, lr
   37272:	add	r7, r1
   37274:	ldr	r1, [sp, #0]
   37276:	eor.w	r0, r6, r1
   3727a:	ldr	r1, [sp, #4]
   3727c:	eors	r1, r7
   3727e:	lsls	r6, r1, #27
   37280:	orr.w	r6, r6, r0, lsr #5
   37284:	lsls	r0, r0, #27
   37286:	orr.w	r0, r0, r1, lsr #5
   3728a:	mul.w	r1, r9, r0
   3728e:	mla	r6, lr, r6, r1
   37292:	umull	r0, r1, r0, lr
   37296:	adds.w	r4, r0, fp
   3729a:	str	r4, [sp, #0]
   3729c:	ldr	r4, [pc, #92]	; (372fc <hash_blake2b@@Base+0x324>)
   3729e:	add	r1, r6
   372a0:	adcs	r1, r4
   372a2:	str	r1, [sp, #4]
   372a4:	b.n	3718e <hash_blake2b@@Base+0x1b6>
   372a6:	ldrb.w	r8, [r2], #1
   372aa:	ldr	r5, [sp, #4]
   372ac:	ldr	r4, [sp, #0]
   372ae:	umull	r0, r1, r8, r7
   372b2:	eors	r4, r0
   372b4:	mla	r1, ip, r8, r1
   372b8:	eors	r5, r1
   372ba:	lsls	r1, r5, #11
   372bc:	orr.w	r1, r1, r4, lsr #21
   372c0:	lsls	r4, r4, #11
   372c2:	orr.w	r4, r4, r5, lsr #21
   372c6:	mul.w	r0, lr, r4
   372ca:	umull	r4, r5, r4, r6
   372ce:	mla	r1, r6, r1, r0
   372d2:	strd	r4, r5, [sp]
   372d6:	ldr	r0, [sp, #4]
   372d8:	add	r0, r1
   372da:	str	r0, [sp, #4]
   372dc:	b.n	37200 <hash_blake2b@@Base+0x228>
   372de:	nop
   372e0:	ldmia	r2, {r0, r1, r2, r7}
   372e2:	strh	r3, [r5, #46]	; 0x2e
   372e4:	ldrb	r1, [r6, #6]
   372e6:	ldr	r6, [sp, #220]	; 0xdc
   372e8:	adc.w	r7, pc, r4, lsr #11
   372ec:	add	r6, sp, #244	; 0xf4
   372ee:	stmia	r2!, {r1, r4, r5, r7}
   372f0:	str	r1, [r6, #120]	; 0x78
   372f2:	asrs	r6, r2, #25
   372f4:	ldrb	r1, [r7, #7]
   372f6:	ldr	r6, [sp, #220]	; 0xdc
   372f8:	str	r5, [r0, #124]	; 0x7c
   372fa:	asrs	r6, r2, #25
   372fc:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   372fe:	strh	r3, [r5, #46]	; 0x2e
   37300:	add	r6, sp, #396	; 0x18c
   37302:	stmia	r2!, {r1, r4, r5, r7}
   37304:			; <UNDEFINED> instruction: 0xeb2f27d4
   37308:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3730c:	sub	sp, #84	; 0x54
   3730e:	mov	fp, r3
   37310:	cmp	r1, #31
   37312:	ldr	r3, [sp, #120]	; 0x78
   37314:	mov	sl, r2
   37316:	str	r0, [sp, #40]	; 0x28
   37318:	str	r1, [sp, #52]	; 0x34
   3731a:	str	r3, [sp, #76]	; 0x4c
   3731c:	bls.w	3768c <hash_blake2b@@Base+0x6b4>
   37320:	sub.w	r3, r1, #32
   37324:	str	r3, [sp, #56]	; 0x38
   37326:	ldr	r3, [pc, #820]	; (3765c <hash_blake2b@@Base+0x684>)
   37328:	mov	r1, r0
   3732a:	ldr	r2, [sp, #56]	; 0x38
   3732c:	adds.w	r3, sl, r3
   37330:	str	r3, [sp, #0]
   37332:	ldr	r3, [pc, #812]	; (37660 <hash_blake2b@@Base+0x688>)
   37334:	add.w	r9, r0, r2
   37338:	ldr	r5, [pc, #808]	; (37664 <hash_blake2b@@Base+0x68c>)
   3733a:	adc.w	r3, fp, r3
   3733e:	str	r3, [sp, #4]
   37340:	ldr	r3, [pc, #800]	; (37664 <hash_blake2b@@Base+0x68c>)
   37342:	ldr.w	ip, [pc, #804]	; 37668 <hash_blake2b@@Base+0x690>
   37346:	adds.w	r3, sl, r3
   3734a:	str	r3, [sp, #8]
   3734c:	ldr	r3, [pc, #792]	; (37668 <hash_blake2b@@Base+0x690>)
   3734e:	ldr	r2, [pc, #796]	; (3766c <hash_blake2b@@Base+0x694>)
   37350:	adc.w	r3, fp, r3
   37354:	str	r3, [sp, #12]
   37356:	ldr	r3, [pc, #792]	; (37670 <hash_blake2b@@Base+0x698>)
   37358:	adds.w	r3, sl, r3
   3735c:	str	r3, [sp, #16]
   3735e:	ldr	r3, [pc, #788]	; (37674 <hash_blake2b@@Base+0x69c>)
   37360:	adc.w	r3, fp, r3
   37364:	str	r3, [sp, #20]
   37366:	ldr	r3, [pc, #784]	; (37678 <hash_blake2b@@Base+0x6a0>)
   37368:	ldr	r6, [r1, #0]
   3736a:	adds	r1, #32
   3736c:	ldr.w	r4, [r1, #-28]
   37370:	ldr.w	lr, [r1, #-12]
   37374:	mul.w	r0, ip, r6
   37378:	mla	r0, r5, r4, r0
   3737c:	ldr	r4, [sp, #4]
   3737e:	umull	r6, r7, r6, r5
   37382:	add	r7, r0
   37384:	ldr	r0, [sp, #0]
   37386:	adds	r0, r6, r0
   37388:	adc.w	r4, r7, r4
   3738c:	mov.w	r8, r4, lsl #31
   37390:	orr.w	r6, r8, r0, lsr #1
   37394:	lsls	r0, r0, #31
   37396:	orr.w	r0, r0, r4, lsr #1
   3739a:	str	r0, [sp, #48]	; 0x30
   3739c:	str	r6, [sp, #72]	; 0x48
   3739e:	mul.w	r4, r2, r0
   373a2:	ldr	r0, [sp, #48]	; 0x30
   373a4:	mla	r4, r3, r6, r4
   373a8:	umull	r6, r7, r0, r3
   373ac:	strd	r6, r7, [sp]
   373b0:	ldr.w	r6, [r1, #-24]
   373b4:	ldr.w	r7, [r1, #-20]
   373b8:	ldr	r0, [sp, #4]
   373ba:	adds	r0, r4, r0
   373bc:	str	r0, [sp, #4]
   373be:	mul.w	r4, ip, r6
   373c2:	ldr	r0, [sp, #8]
   373c4:	mla	r4, r5, r7, r4
   373c8:	umull	r6, r7, r6, r5
   373cc:	add	r7, r4
   373ce:	adds	r4, r6, r0
   373d0:	ldr	r0, [sp, #12]
   373d2:	adc.w	r0, r7, r0
   373d6:	lsls	r7, r0, #31
   373d8:	mov	r6, r0
   373da:	orr.w	r0, r7, r4, lsr #1
   373de:	lsls	r4, r4, #31
   373e0:	orr.w	r4, r4, r6, lsr #1
   373e4:	str	r0, [sp, #68]	; 0x44
   373e6:	umull	r7, r8, r4, r3
   373ea:	mul.w	r6, r2, r4
   373ee:	mla	r6, r3, r0, r6
   373f2:	strd	r7, r8, [sp, #8]
   373f6:	ldr	r0, [sp, #12]
   373f8:	adds	r0, r6, r0
   373fa:	ldr.w	r6, [r1, #-16]
   373fe:	str	r0, [sp, #12]
   37400:	mul.w	r7, ip, r6
   37404:	mla	lr, r5, lr, r7
   37408:	umull	r7, r8, r6, r5
   3740c:	adds.w	r6, r7, sl
   37410:	add	r8, lr
   37412:	adc.w	sl, r8, fp
   37416:	ldr.w	lr, [r1, #-4]
   3741a:	mov.w	r7, sl, lsl #31
   3741e:	orr.w	r0, r7, r6, lsr #1
   37422:	lsls	r6, r6, #31
   37424:	str	r0, [sp, #60]	; 0x3c
   37426:	orr.w	r0, r6, sl, lsr #1
   3742a:	str	r0, [sp, #44]	; 0x2c
   3742c:	mul.w	r6, r2, r0
   37430:	ldr	r0, [sp, #60]	; 0x3c
   37432:	mla	r6, r3, r0, r6
   37436:	ldr	r0, [sp, #44]	; 0x2c
   37438:	umull	sl, fp, r0, r3
   3743c:	add	fp, r6
   3743e:	ldr.w	r6, [r1, #-8]
   37442:	mul.w	r7, ip, r6
   37446:	mla	lr, r5, lr, r7
   3744a:	umull	r6, r7, r6, r5
   3744e:	strd	r6, r7, [sp, #32]
   37452:	ldr	r0, [sp, #36]	; 0x24
   37454:	ldr	r6, [sp, #32]
   37456:	add	r0, lr
   37458:	str	r0, [sp, #36]	; 0x24
   3745a:	ldr	r0, [sp, #16]
   3745c:	ldr	r7, [sp, #20]
   3745e:	adds	r6, r6, r0
   37460:	ldr	r0, [sp, #36]	; 0x24
   37462:	adc.w	r7, r0, r7
   37466:	cmp	r9, r1
   37468:	mov.w	lr, r7, lsl #31
   3746c:	orr.w	r0, lr, r6, lsr #1
   37470:	mov.w	r6, r6, lsl #31
   37474:	str	r0, [sp, #64]	; 0x40
   37476:	orr.w	r0, r6, r7, lsr #1
   3747a:	str	r0, [sp, #32]
   3747c:	mul.w	r6, r2, r0
   37480:	ldr	r0, [sp, #64]	; 0x40
   37482:	mla	r6, r3, r0, r6
   37486:	ldr	r0, [sp, #32]
   37488:	umull	r7, r8, r0, r3
   3748c:	strd	r7, r8, [sp, #16]
   37490:	ldr	r0, [sp, #20]
   37492:	add	r0, r6
   37494:	str	r0, [sp, #20]
   37496:	bcs.w	37368 <hash_blake2b@@Base+0x390>
   3749a:	ldr	r1, [sp, #56]	; 0x38
   3749c:	add.w	r5, r9, #1
   374a0:	ldr	r0, [sp, #40]	; 0x28
   374a2:	bic.w	r1, r1, #31
   374a6:	ldr.w	r9, [pc, #468]	; 3767c <hash_blake2b@@Base+0x6a4>
   374aa:	adds	r6, r0, #1
   374ac:	adds	r1, #32
   374ae:	cmp	r5, r6
   374b0:	it	cc
   374b2:	movcc	r1, #32
   374b4:	ldr.w	lr, [pc, #456]	; 37680 <hash_blake2b@@Base+0x6a8>
   374b8:	adds	r1, r0, r1
   374ba:	str	r1, [sp, #40]	; 0x28
   374bc:	ldr	r1, [sp, #48]	; 0x30
   374be:	ldr	r0, [sp, #72]	; 0x48
   374c0:	mul.w	r1, r9, r1
   374c4:	mla	r8, lr, r0, r1
   374c8:	ldr	r1, [sp, #48]	; 0x30
   374ca:	umull	r6, r7, r1, lr
   374ce:	add	r7, r8
   374d0:	lsls	r5, r7, #31
   374d2:	orr.w	r1, r5, r6, lsr #1
   374d6:	str	r1, [sp, #48]	; 0x30
   374d8:	ldr	r1, [sp, #4]
   374da:	lsls	r0, r6, #31
   374dc:	ldr	r6, [sp, #0]
   374de:	orr.w	r0, r0, r7, lsr #1
   374e2:	ldr	r5, [sp, #12]
   374e4:	lsls	r1, r1, #1
   374e6:	orr.w	r7, r1, r6, lsr #31
   374ea:	ldr	r1, [sp, #4]
   374ec:	lsls	r6, r6, #1
   374ee:	orr.w	r6, r6, r1, lsr #31
   374f2:	ldr	r1, [sp, #12]
   374f4:	mov.w	r8, r1, lsl #7
   374f8:	ldr	r1, [sp, #8]
   374fa:	orr.w	ip, r8, r1, lsr #25
   374fe:	lsls	r1, r1, #7
   37500:	orr.w	r1, r1, r5, lsr #25
   37504:	ldr	r5, [sp, #20]
   37506:	adds	r1, r6, r1
   37508:	mov.w	r6, sl, lsl #12
   3750c:	orr.w	r6, r6, fp, lsr #20
   37510:	adc.w	r7, r7, ip
   37514:	adds	r6, r1, r6
   37516:	ldr	r1, [sp, #20]
   37518:	mov.w	ip, fp, lsl #12
   3751c:	orr.w	r8, ip, sl, lsr #20
   37520:	adc.w	r7, r7, r8
   37524:	mov.w	r8, r1, lsl #18
   37528:	ldr	r1, [sp, #16]
   3752a:	orr.w	ip, r8, r1, lsr #14
   3752e:	lsls	r1, r1, #18
   37530:	orr.w	r1, r1, r5, lsr #14
   37534:	ldr	r5, [sp, #48]	; 0x30
   37536:	adds	r6, r6, r1
   37538:	ldr.w	r8, [pc, #328]	; 37684 <hash_blake2b@@Base+0x6ac>
   3753c:	mul.w	r1, r2, r0
   37540:	adc.w	r7, r7, ip
   37544:	mla	r5, r3, r5, r1
   37548:	umull	r0, r1, r0, r3
   3754c:	add	r1, r5
   3754e:	eors	r6, r0
   37550:	ldr	r0, [sp, #68]	; 0x44
   37552:	eors	r7, r1
   37554:	mul.w	r1, r9, r4
   37558:	umull	r4, r5, r4, lr
   3755c:	mla	r1, lr, r0, r1
   37560:	mul.w	ip, r2, r6
   37564:	add	r5, r1
   37566:	lsls	r0, r4, #31
   37568:	mla	ip, r3, r7, ip
   3756c:	orr.w	r0, r0, r5, lsr #1
   37570:	lsls	r1, r5, #31
   37572:	umull	r6, r7, r6, r3
   37576:	orr.w	r1, r1, r4, lsr #1
   3757a:	mul.w	r4, r2, r0
   3757e:	add	r7, ip
   37580:	mla	r4, r3, r1, r4
   37584:	ldr.w	ip, [pc, #256]	; 37688 <hash_blake2b@@Base+0x6b0>
   37588:	umull	r0, r1, r0, r3
   3758c:	add	r1, r4
   3758e:	adds.w	r4, r6, ip
   37592:	adc.w	r5, r7, r8
   37596:	eors	r4, r0
   37598:	eors	r1, r5
   3759a:	mul.w	r0, r2, r4
   3759e:	mla	r1, r3, r1, r0
   375a2:	umull	r4, r5, r4, r3
   375a6:	add	r5, r1
   375a8:	ldr	r1, [sp, #44]	; 0x2c
   375aa:	mul.w	r7, r9, r1
   375ae:	ldr	r1, [sp, #60]	; 0x3c
   375b0:	mla	r7, lr, r1, r7
   375b4:	ldr	r1, [sp, #44]	; 0x2c
   375b6:	umull	r0, r1, r1, lr
   375ba:	add	r1, r7
   375bc:	lsls	r7, r1, #31
   375be:	lsls	r6, r0, #31
   375c0:	orr.w	r7, r7, r0, lsr #1
   375c4:	orr.w	r6, r6, r1, lsr #1
   375c8:	adds.w	r0, r4, ip
   375cc:	adc.w	r4, r5, r8
   375d0:	mul.w	r1, r2, r6
   375d4:	mla	r1, r3, r7, r1
   375d8:	umull	r6, r7, r6, r3
   375dc:	eors	r0, r6
   375de:	add	r7, r1
   375e0:	eors	r4, r7
   375e2:	mul.w	r1, r2, r0
   375e6:	mla	r4, r3, r4, r1
   375ea:	ldr	r1, [sp, #32]
   375ec:	umull	sl, fp, r0, r3
   375f0:	mul.w	r9, r9, r1
   375f4:	ldr	r1, [sp, #64]	; 0x40
   375f6:	add	fp, r4
   375f8:	mla	r9, lr, r1, r9
   375fc:	ldr	r1, [sp, #32]
   375fe:	umull	r0, r1, r1, lr
   37602:	add	r1, r9
   37604:	lsls	r6, r1, #31
   37606:	lsls	r4, r0, #31
   37608:	orr.w	r6, r6, r0, lsr #1
   3760c:	orr.w	r4, r4, r1, lsr #1
   37610:	adds.w	r0, sl, ip
   37614:	adc.w	r1, fp, r8
   37618:	mul.w	r5, r2, r4
   3761c:	mla	r6, r3, r6, r5
   37620:	umull	r4, r5, r4, r3
   37624:	eors	r0, r4
   37626:	add	r5, r6
   37628:	eors	r1, r5
   3762a:	muls	r2, r0
   3762c:	mla	r2, r3, r1, r2
   37630:	umull	r0, r1, r0, r3
   37634:	adds.w	r3, r0, ip
   37638:	add	r1, r2
   3763a:	str	r3, [sp, #24]
   3763c:	adc.w	r3, r1, r8
   37640:	str	r3, [sp, #28]
   37642:	ldr	r3, [sp, #76]	; 0x4c
   37644:	ldrd	r0, r1, [sp, #24]
   37648:	ldr	r2, [sp, #40]	; 0x28
   3764a:	str	r3, [sp, #120]	; 0x78
   3764c:	ldr	r3, [sp, #52]	; 0x34
   3764e:	adds	r0, r0, r3
   37650:	adc.w	r1, r1, #0
   37654:	add	sp, #84	; 0x54
   37656:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3765a:	b.n	3716c <hash_blake2b@@Base+0x194>
   3765c:	push	{r1, r2, r4, r6, r7, lr}
   3765e:	add	r5, sp, #768	; 0x300
   37660:	movs	r7, #238	; 0xee
   37662:	str	r2, [r5, #12]
   37664:	adc.w	r7, pc, r4, lsr #11
   37668:	add	r6, sp, #244	; 0xf4
   3766a:	stmia	r2!, {r1, r4, r5, r7}
   3766c:	ldrb	r1, [r6, #6]
   3766e:	ldr	r6, [sp, #220]	; 0xdc
   37670:	adds	r5, #121	; 0x79
   37672:	ldrb	r4, [r2, #8]
   37674:	strh	r6, [r1, #50]	; 0x32
   37676:	str	r0, [r1, #28]
   37678:	ldmia	r2, {r0, r1, r2, r7}
   3767a:	strh	r3, [r5, #46]	; 0x2e
   3767c:	ldrh	r1, [r0, r4]
   3767e:	udf	#243	; 0xf3
   37680:	ldr	r1, [r5, #72]	; 0x48
   37682:	lsrs	r1, r7, #29
   37684:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   37686:	strh	r3, [r5, #46]	; 0x2e
   37688:	add	r6, sp, #396	; 0x18c
   3768a:	stmia	r2!, {r1, r4, r5, r7}
   3768c:	ldr	r3, [pc, #12]	; (3769c <hash_blake2b@@Base+0x6c4>)
   3768e:	adds	r3, r2, r3
   37690:	str	r3, [sp, #24]
   37692:	ldr	r3, [pc, #12]	; (376a0 <hash_blake2b@@Base+0x6c8>)
   37694:	adc.w	r3, fp, r3
   37698:	b.n	37640 <hash_blake2b@@Base+0x668>
   3769a:	nop
   3769c:	str	r5, [r0, #124]	; 0x7c
   3769e:	asrs	r6, r2, #25
   376a0:			; <UNDEFINED> instruction: 0xeb2f27d4
   376a4:	b.w	882c <memcpy@plt>

000376a8 <XXH_versionNumber@@Base>:
   376a8:	movw	r0, #701	; 0x2bd
   376ac:	bx	lr

000376ae <XXH32@@Base>:
   376ae:	ands.w	r3, r0, #3
   376b2:	it	ne
   376b4:	movne	r3, #1
   376b6:	b.n	370b4 <hash_blake2b@@Base+0xdc>

000376b8 <XXH32_createState@@Base>:
   376b8:	movs	r0, #48	; 0x30
   376ba:	b.w	8a90 <malloc@plt>

000376be <XXH32_freeState@@Base>:
   376be:	push	{r3, lr}
   376c0:	blx	87cc <free@plt+0x4>
   376c4:	movs	r0, #0
   376c6:	pop	{r3, pc}

000376c8 <XXH32_copyState@@Base>:
   376c8:	add.w	r3, r1, #48	; 0x30
   376cc:	ldr.w	r2, [r1], #4
   376d0:	cmp	r1, r3
   376d2:	str.w	r2, [r0], #4
   376d6:	bne.n	376cc <XXH32_copyState@@Base+0x4>
   376d8:	bx	lr

000376da <XXH32_reset@@Base>:
   376da:	ldr	r2, [pc, #124]	; (37758 <XXH32_reset@@Base+0x7e>)
   376dc:	ldr	r3, [pc, #124]	; (3775c <XXH32_reset@@Base+0x82>)
   376de:	add	r2, pc
   376e0:	push	{r4, r5, lr}
   376e2:	sub	sp, #60	; 0x3c
   376e4:	ldr	r3, [r2, r3]
   376e6:	mov	r5, r1
   376e8:	mov	r4, r0
   376ea:	movs	r2, #48	; 0x30
   376ec:	ldr	r3, [r3, #0]
   376ee:	str	r3, [sp, #52]	; 0x34
   376f0:	mov.w	r3, #0
   376f4:	add	r3, sp, #4
   376f6:	movs	r1, #0
   376f8:	mov	r0, r3
   376fa:	blx	8bf8 <memset@plt+0x4>
   376fe:	ldr	r2, [pc, #76]	; (3774c <XXH32_reset@@Base+0x72>)
   37700:	mov	r3, r4
   37702:	add	r2, r5
   37704:	str	r2, [sp, #12]
   37706:	ldr	r2, [pc, #72]	; (37750 <XXH32_reset@@Base+0x76>)
   37708:	add	r2, r5
   3770a:	strd	r2, r5, [sp, #16]
   3770e:	ldr	r2, [pc, #68]	; (37754 <XXH32_reset@@Base+0x7a>)
   37710:	add	r2, r5
   37712:	add	r5, sp, #44	; 0x2c
   37714:	str	r2, [sp, #24]
   37716:	mov	r2, r0
   37718:	mov	r4, r2
   3771a:	adds	r3, #8
   3771c:	ldmia	r4!, {r0, r1}
   3771e:	cmp	r4, r5
   37720:	str.w	r0, [r3, #-8]
   37724:	mov	r2, r4
   37726:	str.w	r1, [r3, #-4]
   3772a:	bne.n	37718 <XXH32_reset@@Base+0x3e>
   3772c:	ldr	r0, [r4, #0]
   3772e:	ldr	r2, [pc, #48]	; (37760 <XXH32_reset@@Base+0x86>)
   37730:	str	r0, [r3, #0]
   37732:	add	r2, pc
   37734:	ldr	r3, [pc, #36]	; (3775c <XXH32_reset@@Base+0x82>)
   37736:	ldr	r3, [r2, r3]
   37738:	ldr	r2, [r3, #0]
   3773a:	ldr	r3, [sp, #52]	; 0x34
   3773c:	eors	r2, r3
   3773e:	beq.n	37744 <XXH32_reset@@Base+0x6a>
   37740:	blx	88e4 <__stack_chk_fail@plt>
   37744:	movs	r0, #0
   37746:	add	sp, #60	; 0x3c
   37748:	pop	{r4, r5, pc}
   3774a:	nop
   3774c:	add	r0, r5
   3774e:	movs	r4, #35	; 0x23
   37750:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   37752:	strh	r3, [r5, #46]	; 0x2e
   37754:	strh	r7, [r1, #50]	; 0x32
   37756:	str	r0, [r1, #28]
   37758:	asrs	r2, r2, #25
   3775a:	movs	r3, r0
   3775c:	lsls	r4, r7, #9
   3775e:	movs	r0, r0
   37760:	asrs	r6, r7, #23
   37762:	movs	r3, r0

00037764 <XXH32_update@@Base>:
   37764:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   37768:	mov	r4, r0
   3776a:	mov	r7, r2
   3776c:	mov	r5, r1
   3776e:	cmp	r1, #0
   37770:	beq.w	37890 <XXH32_update@@Base+0x12c>
   37774:	ldr	r3, [r0, #0]
   37776:	adds	r6, r1, r2
   37778:	add	r3, r2
   3777a:	str	r3, [r0, #0]
   3777c:	cmp	r3, #15
   3777e:	it	ls
   37780:	cmpls	r2, #15
   37782:	ldr	r0, [r0, #4]
   37784:	ite	hi
   37786:	movhi	r3, #1
   37788:	movls	r3, #0
   3778a:	orrs	r3, r0
   3778c:	str	r3, [r4, #4]
   3778e:	ldr	r3, [r4, #40]	; 0x28
   37790:	adds	r0, r3, r2
   37792:	cmp	r0, #15
   37794:	bhi.n	377aa <XXH32_update@@Base+0x46>
   37796:	add.w	r0, r4, #24
   3779a:	add	r0, r3
   3779c:	bl	376a4 <hash_blake2b@@Base+0x6cc>
   377a0:	ldr	r2, [r4, #40]	; 0x28
   377a2:	add	r2, r7
   377a4:	str	r2, [r4, #40]	; 0x28
   377a6:	movs	r0, #0
   377a8:	b.n	37892 <XXH32_update@@Base+0x12e>
   377aa:	cbz	r3, 3780a <XXH32_update@@Base+0xa6>
   377ac:	add.w	r0, r4, #24
   377b0:	rsb	r2, r3, #16
   377b4:	add	r0, r3
   377b6:	bl	376a4 <hash_blake2b@@Base+0x6cc>
   377ba:	ldr	r1, [pc, #220]	; (37898 <XXH32_update@@Base+0x134>)
   377bc:	ldr	r2, [r4, #8]
   377be:	ldr	r3, [r4, #24]
   377c0:	ldr	r0, [r4, #12]
   377c2:	mla	r3, r1, r3, r2
   377c6:	ldr	r2, [pc, #212]	; (3789c <XXH32_update@@Base+0x138>)
   377c8:	mov.w	r3, r3, ror #19
   377cc:	muls	r3, r2
   377ce:	str	r3, [r4, #8]
   377d0:	ldr	r3, [r4, #28]
   377d2:	mla	r3, r1, r3, r0
   377d6:	ldr	r0, [r4, #16]
   377d8:	mov.w	r3, r3, ror #19
   377dc:	muls	r3, r2
   377de:	str	r3, [r4, #12]
   377e0:	ldr	r3, [r4, #32]
   377e2:	mla	r3, r1, r3, r0
   377e6:	ldr	r0, [r4, #20]
   377e8:	mov.w	r3, r3, ror #19
   377ec:	muls	r3, r2
   377ee:	str	r3, [r4, #16]
   377f0:	ldr	r3, [r4, #36]	; 0x24
   377f2:	mla	r1, r1, r3, r0
   377f6:	ldr	r3, [r4, #40]	; 0x28
   377f8:	rsb	r3, r3, #16
   377fc:	add	r5, r3
   377fe:	movs	r3, #0
   37800:	str	r3, [r4, #40]	; 0x28
   37802:	mov.w	r1, r1, ror #19
   37806:	muls	r2, r1
   37808:	str	r2, [r4, #20]
   3780a:	sub.w	r3, r6, #16
   3780e:	cmp	r3, r5
   37810:	bcc.n	3787a <XXH32_update@@Base+0x116>
   37812:	ldrd	ip, r7, [r4, #8]
   37816:	mov	r1, r5
   37818:	ldrd	r0, r8, [r4, #16]
   3781c:	ldr.w	r9, [pc, #120]	; 37898 <XXH32_update@@Base+0x134>
   37820:	ldr.w	lr, [pc, #120]	; 3789c <XXH32_update@@Base+0x138>
   37824:	ldr	r2, [r1, #0]
   37826:	adds	r1, #16
   37828:	mla	ip, r9, r2, ip
   3782c:	ldr.w	r2, [r1, #-12]
   37830:	mla	r7, r9, r2, r7
   37834:	ldr.w	r2, [r1, #-8]
   37838:	mov.w	ip, ip, ror #19
   3783c:	mla	r0, r9, r2, r0
   37840:	ldr.w	r2, [r1, #-4]
   37844:	mov.w	r7, r7, ror #19
   37848:	cmp	r3, r1
   3784a:	mul.w	ip, lr, ip
   3784e:	mla	r2, r9, r2, r8
   37852:	mov.w	r0, r0, ror #19
   37856:	mul.w	r7, lr, r7
   3785a:	mul.w	r0, lr, r0
   3785e:	mov.w	r2, r2, ror #19
   37862:	mul.w	r8, lr, r2
   37866:	bcs.n	37824 <XXH32_update@@Base+0xc0>
   37868:	subs	r3, r3, r5
   3786a:	strd	ip, r7, [r4, #8]
   3786e:	bic.w	r3, r3, #15
   37872:	strd	r0, r8, [r4, #16]
   37876:	adds	r3, #16
   37878:	add	r5, r3
   3787a:	cmp	r5, r6
   3787c:	bcs.n	377a6 <XXH32_update@@Base+0x42>
   3787e:	subs	r6, r6, r5
   37880:	add.w	r0, r4, #24
   37884:	mov	r1, r5
   37886:	mov	r2, r6
   37888:	bl	376a4 <hash_blake2b@@Base+0x6cc>
   3788c:	str	r6, [r4, #40]	; 0x28
   3788e:	b.n	377a6 <XXH32_update@@Base+0x42>
   37890:	movs	r0, #1
   37892:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   37896:	nop
   37898:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   3789a:	strh	r3, [r5, #46]	; 0x2e
   3789c:	ldrb	r1, [r6, #6]
   3789e:	ldr	r6, [sp, #220]	; 0xdc

000378a0 <XXH32_digest@@Base>:
   378a0:	push	{r4, r5}
   378a2:	ldr	r3, [r0, #4]
   378a4:	ldr	r2, [r0, #16]
   378a6:	cbz	r3, 378d0 <XXH32_digest@@Base+0x30>
   378a8:	ldrd	r1, r3, [r0, #8]
   378ac:	mov.w	r4, r3, ror #25
   378b0:	ldr	r3, [r0, #20]
   378b2:	add.w	r4, r4, r1, ror #31
   378b6:	add.w	r4, r4, r2, ror #20
   378ba:	add.w	r4, r4, r3, ror #14
   378be:	mov	r1, r0
   378c0:	ldr	r2, [r0, #40]	; 0x28
   378c2:	ldr.w	r5, [r1], #24
   378c6:	movs	r3, #0
   378c8:	adds	r0, r4, r5
   378ca:	pop	{r4, r5}
   378cc:	b.w	37038 <hash_blake2b@@Base+0x60>
   378d0:	ldr	r4, [pc, #4]	; (378d8 <XXH32_digest@@Base+0x38>)
   378d2:	add	r4, r2
   378d4:	b.n	378be <XXH32_digest@@Base+0x1e>
   378d6:	nop
   378d8:	str	r1, [r6, #120]	; 0x78
   378da:	asrs	r6, r2, #25

000378dc <XXH32_canonicalFromHash@@Base>:
   378dc:	rev	r1, r1
   378de:	str	r1, [r0, #0]
   378e0:	bx	lr

000378e2 <XXH32_hashFromCanonical@@Base>:
   378e2:	ldr	r0, [r0, #0]
   378e4:	rev	r0, r0
   378e6:	bx	lr

000378e8 <XXH64@@Base>:
   378e8:	push	{r0, r1, r4, lr}
   378ea:	ands.w	r4, r0, #7
   378ee:	it	ne
   378f0:	movne	r4, #1
   378f2:	str	r4, [sp, #0]
   378f4:	bl	37308 <hash_blake2b@@Base+0x330>
   378f8:	add	sp, #8
   378fa:	pop	{r4, pc}

000378fc <XXH64_createState@@Base>:
   378fc:	movs	r0, #88	; 0x58
   378fe:	b.w	8a90 <malloc@plt>

00037902 <XXH64_freeState@@Base>:
   37902:	push	{r3, lr}
   37904:	blx	87cc <free@plt+0x4>
   37908:	movs	r0, #0
   3790a:	pop	{r3, pc}

0003790c <XXH64_copyState@@Base>:
   3790c:	movs	r2, #88	; 0x58
   3790e:	b.w	882c <memcpy@plt>

00037912 <XXH64_reset@@Base>:
   37912:	push	{r4, r5, r6, r7, lr}
   37914:	mov	r4, r2
   37916:	ldr	r2, [pc, #140]	; (379a4 <XXH64_reset@@Base+0x92>)
   37918:	mov	r5, r3
   3791a:	ldr	r3, [pc, #140]	; (379a8 <XXH64_reset@@Base+0x96>)
   3791c:	sub	sp, #100	; 0x64
   3791e:	add	r2, pc
   37920:	mov	r7, r0
   37922:	mov	r6, sp
   37924:	movs	r1, #0
   37926:	ldr	r3, [r2, r3]
   37928:	mov	r0, r6
   3792a:	movs	r2, #88	; 0x58
   3792c:	ldr	r3, [r3, #0]
   3792e:	str	r3, [sp, #92]	; 0x5c
   37930:	mov.w	r3, #0
   37934:	blx	8bf8 <memset@plt+0x4>
   37938:	ldr	r3, [pc, #80]	; (3798c <XXH64_reset@@Base+0x7a>)
   3793a:	mov	r1, r6
   3793c:	ldr	r2, [pc, #80]	; (37990 <XXH64_reset@@Base+0x7e>)
   3793e:	mov	r0, r7
   37940:	adds	r3, r4, r3
   37942:	strd	r4, r5, [sp, #24]
   37946:	adc.w	r2, r5, r2
   3794a:	strd	r3, r2, [sp, #8]
   3794e:	ldr	r3, [pc, #68]	; (37994 <XXH64_reset@@Base+0x82>)
   37950:	ldr	r2, [pc, #68]	; (37998 <XXH64_reset@@Base+0x86>)
   37952:	adds	r3, r4, r3
   37954:	adc.w	r2, r5, r2
   37958:	strd	r3, r2, [sp, #16]
   3795c:	ldr	r2, [pc, #60]	; (3799c <XXH64_reset@@Base+0x8a>)
   3795e:	ldr	r3, [pc, #64]	; (379a0 <XXH64_reset@@Base+0x8e>)
   37960:	adds	r4, r4, r2
   37962:	mov.w	r2, #80	; 0x50
   37966:	adc.w	r5, r3, r5
   3796a:	strd	r4, r5, [sp, #32]
   3796e:	blx	8830 <memcpy@plt+0x4>
   37972:	ldr	r2, [pc, #56]	; (379ac <XXH64_reset@@Base+0x9a>)
   37974:	ldr	r3, [pc, #48]	; (379a8 <XXH64_reset@@Base+0x96>)
   37976:	add	r2, pc
   37978:	ldr	r3, [r2, r3]
   3797a:	ldr	r2, [r3, #0]
   3797c:	ldr	r3, [sp, #92]	; 0x5c
   3797e:	eors	r2, r3
   37980:	beq.n	37986 <XXH64_reset@@Base+0x74>
   37982:	blx	88e4 <__stack_chk_fail@plt>
   37986:	movs	r0, #0
   37988:	add	sp, #100	; 0x64
   3798a:	pop	{r4, r5, r6, r7, pc}
   3798c:	push	{r1, r2, r4, r6, r7, lr}
   3798e:	add	r5, sp, #768	; 0x300
   37990:	movs	r7, #238	; 0xee
   37992:	str	r2, [r5, #12]
   37994:	adc.w	r7, pc, r4, lsr #11
   37998:	add	r6, sp, #244	; 0xf4
   3799a:	stmia	r2!, {r1, r4, r5, r7}
   3799c:	adds	r5, #121	; 0x79
   3799e:	ldrb	r4, [r2, #8]
   379a0:	strh	r6, [r1, #50]	; 0x32
   379a2:	str	r0, [r1, #28]
   379a4:	asrs	r2, r2, #16
   379a6:	movs	r3, r0
   379a8:	lsls	r4, r7, #9
   379aa:	movs	r0, r0
   379ac:	asrs	r2, r7, #14
   379ae:	movs	r3, r0

000379b0 <XXH64_update@@Base>:
   379b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   379b4:	mov	r4, r0
   379b6:	sub	sp, #36	; 0x24
   379b8:	mov	r5, r2
   379ba:	mov	r8, r1
   379bc:	cmp	r1, #0
   379be:	beq.w	37ca4 <XXH64_update@@Base+0x2f4>
   379c2:	ldrd	r6, r7, [r0]
   379c6:	add.w	r9, r1, r2
   379ca:	ldr	r3, [r0, #72]	; 0x48
   379cc:	adds	r6, r6, r2
   379ce:	adc.w	r7, r7, #0
   379d2:	strd	r6, r7, [r0]
   379d6:	adds	r0, r3, r2
   379d8:	cmp	r0, #31
   379da:	bhi.n	379f0 <XXH64_update@@Base+0x40>
   379dc:	add.w	r0, r4, #40	; 0x28
   379e0:	add	r0, r3
   379e2:	bl	376a4 <hash_blake2b@@Base+0x6cc>
   379e6:	ldr	r2, [r4, #72]	; 0x48
   379e8:	add	r2, r5
   379ea:	str	r2, [r4, #72]	; 0x48
   379ec:	movs	r0, #0
   379ee:	b.n	37ca6 <XXH64_update@@Base+0x2f6>
   379f0:	cmp	r3, #0
   379f2:	beq.w	37b00 <XXH64_update@@Base+0x150>
   379f6:	add.w	r0, r4, #40	; 0x28
   379fa:	rsb	r2, r3, #32
   379fe:	add	r0, r3
   37a00:	ldr	r5, [pc, #680]	; (37cac <XXH64_update@@Base+0x2fc>)
   37a02:	bl	376a4 <hash_blake2b@@Base+0x6cc>
   37a06:	ldr.w	ip, [pc, #688]	; 37cb8 <XXH64_update@@Base+0x308>
   37a0a:	ldr	r6, [r4, #40]	; 0x28
   37a0c:	ldr	r3, [r4, #44]	; 0x2c
   37a0e:	mul.w	r2, ip, r6
   37a12:	mla	r3, r5, r3, r2
   37a16:	umull	r6, r7, r6, r5
   37a1a:	add	r7, r3
   37a1c:	ldrd	r3, r2, [r4, #8]
   37a20:	adds	r3, r6, r3
   37a22:	ldr	r6, [pc, #652]	; (37cb0 <XXH64_update@@Base+0x300>)
   37a24:	adc.w	r0, r7, r2
   37a28:	ldr	r2, [pc, #648]	; (37cb4 <XXH64_update@@Base+0x304>)
   37a2a:	lsls	r1, r0, #31
   37a2c:	orr.w	r1, r1, r3, lsr #1
   37a30:	lsls	r3, r3, #31
   37a32:	orr.w	r0, r3, r0, lsr #1
   37a36:	mul.w	r3, r6, r0
   37a3a:	mla	r3, r2, r1, r3
   37a3e:	umull	r0, r1, r0, r2
   37a42:	add	r1, r3
   37a44:	ldr	r3, [r4, #52]	; 0x34
   37a46:	strd	r0, r1, [r4, #8]
   37a4a:	ldr	r0, [r4, #48]	; 0x30
   37a4c:	mul.w	r1, ip, r0
   37a50:	mla	r3, r5, r3, r1
   37a54:	umull	r0, r1, r0, r5
   37a58:	add	r1, r3
   37a5a:	ldrd	r3, r7, [r4, #16]
   37a5e:	adds	r3, r0, r3
   37a60:	adc.w	r0, r1, r7
   37a64:	lsls	r1, r0, #31
   37a66:	orr.w	r1, r1, r3, lsr #1
   37a6a:	lsls	r3, r3, #31
   37a6c:	orr.w	r0, r3, r0, lsr #1
   37a70:	mul.w	r3, r6, r0
   37a74:	mla	r3, r2, r1, r3
   37a78:	umull	r0, r1, r0, r2
   37a7c:	add	r1, r3
   37a7e:	ldr	r3, [r4, #60]	; 0x3c
   37a80:	strd	r0, r1, [r4, #16]
   37a84:	ldr	r0, [r4, #56]	; 0x38
   37a86:	mul.w	r1, ip, r0
   37a8a:	mla	r3, r5, r3, r1
   37a8e:	umull	r0, r1, r0, r5
   37a92:	add	r1, r3
   37a94:	ldrd	r3, r7, [r4, #24]
   37a98:	adds	r3, r0, r3
   37a9a:	adc.w	r0, r1, r7
   37a9e:	lsls	r1, r0, #31
   37aa0:	orr.w	r1, r1, r3, lsr #1
   37aa4:	lsls	r3, r3, #31
   37aa6:	orr.w	r0, r3, r0, lsr #1
   37aaa:	mul.w	r3, r6, r0
   37aae:	mla	r3, r2, r1, r3
   37ab2:	umull	r0, r1, r0, r2
   37ab6:	add	r1, r3
   37ab8:	ldr	r3, [r4, #68]	; 0x44
   37aba:	strd	r0, r1, [r4, #24]
   37abe:	ldr	r0, [r4, #64]	; 0x40
   37ac0:	mul.w	ip, ip, r0
   37ac4:	mla	ip, r5, r3, ip
   37ac8:	umull	r0, r1, r0, r5
   37acc:	ldrd	r3, r5, [r4, #32]
   37ad0:	add	r1, ip
   37ad2:	adds	r3, r0, r3
   37ad4:	adc.w	r5, r1, r5
   37ad8:	lsls	r1, r5, #31
   37ada:	orr.w	r1, r1, r3, lsr #1
   37ade:	lsls	r3, r3, #31
   37ae0:	orr.w	r5, r3, r5, lsr #1
   37ae4:	muls	r6, r5
   37ae6:	mla	r6, r2, r1, r6
   37aea:	umull	r2, r3, r5, r2
   37aee:	add	r3, r6
   37af0:	strd	r2, r3, [r4, #32]
   37af4:	ldr	r3, [r4, #72]	; 0x48
   37af6:	rsb	r3, r3, #32
   37afa:	add	r8, r3
   37afc:	movs	r3, #0
   37afe:	str	r3, [r4, #72]	; 0x48
   37b00:	add.w	r3, r8, #32
   37b04:	cmp	r9, r3
   37b06:	bcc.w	37c8a <XXH64_update@@Base+0x2da>
   37b0a:	ldrd	r2, r3, [r4, #8]
   37b0e:	sub.w	ip, r9, #32
   37b12:	ldr	r5, [pc, #408]	; (37cac <XXH64_update@@Base+0x2fc>)
   37b14:	ldr	r7, [pc, #416]	; (37cb8 <XXH64_update@@Base+0x308>)
   37b16:	strd	r2, r3, [sp]
   37b1a:	ldrd	r2, r3, [r4, #16]
   37b1e:	strd	r2, r3, [sp, #8]
   37b22:	ldrd	r2, r3, [r4, #24]
   37b26:	strd	r2, r3, [sp, #16]
   37b2a:	ldrd	r2, r3, [r4, #32]
   37b2e:	strd	r2, r3, [sp, #24]
   37b32:	mov	r3, r8
   37b34:	ldr	r2, [pc, #380]	; (37cb4 <XXH64_update@@Base+0x304>)
   37b36:	ldr	r0, [r3, #0]
   37b38:	adds	r3, #32
   37b3a:	ldr.w	lr, [r3, #-28]
   37b3e:	ldr	r6, [pc, #368]	; (37cb0 <XXH64_update@@Base+0x300>)
   37b40:	umull	sl, fp, r0, r5
   37b44:	mul.w	r1, r7, r0
   37b48:	mla	lr, r5, lr, r1
   37b4c:	ldr	r1, [sp, #0]
   37b4e:	adds.w	r0, sl, r1
   37b52:	ldr	r1, [sp, #4]
   37b54:	add	fp, lr
   37b56:	adc.w	r1, fp, r1
   37b5a:	mov.w	lr, r1, lsl #31
   37b5e:	orr.w	lr, lr, r0, lsr #1
   37b62:	lsls	r0, r0, #31
   37b64:	orr.w	r1, r0, r1, lsr #1
   37b68:	ldr	r0, [pc, #324]	; (37cb0 <XXH64_update@@Base+0x300>)
   37b6a:	muls	r0, r1
   37b6c:	mla	lr, r2, lr, r0
   37b70:	umull	r0, r1, r1, r2
   37b74:	strd	r0, r1, [sp]
   37b78:	ldr	r1, [sp, #4]
   37b7a:	ldr.w	r0, [r3, #-24]
   37b7e:	add	r1, lr
   37b80:	ldr.w	lr, [r3, #-20]
   37b84:	str	r1, [sp, #4]
   37b86:	umull	sl, fp, r0, r5
   37b8a:	mul.w	r1, r7, r0
   37b8e:	mla	lr, r5, lr, r1
   37b92:	ldr	r1, [sp, #8]
   37b94:	adds.w	r0, sl, r1
   37b98:	ldr	r1, [sp, #12]
   37b9a:	add	fp, lr
   37b9c:	adc.w	r1, fp, r1
   37ba0:	mov.w	lr, r1, lsl #31
   37ba4:	orr.w	lr, lr, r0, lsr #1
   37ba8:	lsls	r0, r0, #31
   37baa:	orr.w	r1, r0, r1, lsr #1
   37bae:	ldr	r0, [pc, #256]	; (37cb0 <XXH64_update@@Base+0x300>)
   37bb0:	muls	r0, r1
   37bb2:	mla	lr, r2, lr, r0
   37bb6:	umull	r0, r1, r1, r2
   37bba:	strd	r0, r1, [sp, #8]
   37bbe:	ldr	r1, [sp, #12]
   37bc0:	ldr.w	r0, [r3, #-16]
   37bc4:	add	r1, lr
   37bc6:	ldr.w	lr, [r3, #-12]
   37bca:	str	r1, [sp, #12]
   37bcc:	umull	sl, fp, r0, r5
   37bd0:	mul.w	r1, r7, r0
   37bd4:	mla	lr, r5, lr, r1
   37bd8:	ldr	r1, [sp, #16]
   37bda:	adds.w	r0, sl, r1
   37bde:	ldr	r1, [sp, #20]
   37be0:	add	fp, lr
   37be2:	adc.w	lr, fp, r1
   37be6:	mov.w	r1, lr, lsl #31
   37bea:	orr.w	r1, r1, r0, lsr #1
   37bee:	lsls	r0, r0, #31
   37bf0:	orr.w	r0, r0, lr, lsr #1
   37bf4:	umull	sl, fp, r0, r2
   37bf8:	mul.w	lr, r6, r0
   37bfc:	ldr	r6, [sp, #24]
   37bfe:	mla	r1, r2, r1, lr
   37c02:	ldr.w	lr, [r3, #-4]
   37c06:	strd	sl, fp, [sp, #16]
   37c0a:	ldr	r0, [sp, #20]
   37c0c:	add	r1, r0
   37c0e:	ldr.w	r0, [r3, #-8]
   37c12:	str	r1, [sp, #20]
   37c14:	mul.w	r1, r7, r0
   37c18:	mla	lr, r5, lr, r1
   37c1c:	umull	r0, r1, r0, r5
   37c20:	adds.w	sl, r0, r6
   37c24:	ldr	r6, [sp, #28]
   37c26:	add	r1, lr
   37c28:	ldr	r0, [pc, #132]	; (37cb0 <XXH64_update@@Base+0x300>)
   37c2a:	adc.w	r6, r1, r6
   37c2e:	cmp	ip, r3
   37c30:	mov.w	r1, r6, lsl #31
   37c34:	orr.w	r1, r1, sl, lsr #1
   37c38:	mov.w	sl, sl, lsl #31
   37c3c:	orr.w	sl, sl, r6, lsr #1
   37c40:	mul.w	r0, r0, sl
   37c44:	umull	sl, fp, sl, r2
   37c48:	mla	r1, r2, r1, r0
   37c4c:	strd	sl, fp, [sp, #24]
   37c50:	ldr	r0, [sp, #28]
   37c52:	add	r0, r1
   37c54:	str	r0, [sp, #28]
   37c56:	bcs.w	37b36 <XXH64_update@@Base+0x186>
   37c5a:	sub.w	r3, r9, #32
   37c5e:	sub.w	r3, r3, r8
   37c62:	bic.w	r3, r3, #31
   37c66:	adds	r3, #32
   37c68:	add	r8, r3
   37c6a:	ldrd	r2, r3, [sp]
   37c6e:	strd	r2, r3, [r4, #8]
   37c72:	ldrd	r2, r3, [sp, #8]
   37c76:	strd	r2, r3, [r4, #16]
   37c7a:	ldrd	r2, r3, [sp, #16]
   37c7e:	strd	r2, r3, [r4, #24]
   37c82:	ldrd	r2, r3, [sp, #24]
   37c86:	strd	r2, r3, [r4, #32]
   37c8a:	cmp	r8, r9
   37c8c:	bcs.w	379ec <XXH64_update@@Base+0x3c>
   37c90:	sub.w	r5, r9, r8
   37c94:	add.w	r0, r4, #40	; 0x28
   37c98:	mov	r1, r8
   37c9a:	mov	r2, r5
   37c9c:	bl	376a4 <hash_blake2b@@Base+0x6cc>
   37ca0:	str	r5, [r4, #72]	; 0x48
   37ca2:	b.n	379ec <XXH64_update@@Base+0x3c>
   37ca4:	movs	r0, #1
   37ca6:	add	sp, #36	; 0x24
   37ca8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37cac:	adc.w	r7, pc, r4, lsr #11
   37cb0:	ldrb	r1, [r6, #6]
   37cb2:	ldr	r6, [sp, #220]	; 0xdc
   37cb4:	ldmia	r2, {r0, r1, r2, r7}
   37cb6:	strh	r3, [r5, #46]	; 0x2e
   37cb8:	add	r6, sp, #244	; 0xf4
   37cba:	stmia	r2!, {r1, r4, r5, r7}

00037cbc <XXH64_digest@@Base>:
   37cbc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37cc0:	sub	sp, #28
   37cc2:	ldrd	r3, r4, [r0]
   37cc6:	strd	r3, r4, [sp, #8]
   37cca:	ldrd	r2, r3, [sp, #8]
   37cce:	ldrd	r4, r5, [r0, #24]
   37cd2:	cmp	r3, #0
   37cd4:	it	eq
   37cd6:	cmpeq	r2, #32
   37cd8:	bcc.w	37ea0 <XXH64_digest@@Base+0x1e4>
   37cdc:	ldrd	sl, lr, [r0, #8]
   37ce0:	ldr	r6, [pc, #456]	; (37eac <XXH64_digest@@Base+0x1f0>)
   37ce2:	ldr	r7, [pc, #460]	; (37eb0 <XXH64_digest@@Base+0x1f4>)
   37ce4:	ldrd	r1, ip, [r0, #16]
   37ce8:	umull	r2, r3, sl, r6
   37cec:	mul.w	r8, r7, sl
   37cf0:	ldr	r7, [r0, #36]	; 0x24
   37cf2:	mla	r8, r6, lr, r8
   37cf6:	add	r3, r8
   37cf8:	mov.w	r8, r2, lsl #31
   37cfc:	mov.w	fp, r3, lsl #31
   37d00:	orr.w	r8, r8, r3, lsr #1
   37d04:	mov.w	r3, lr, lsl #1
   37d08:	orr.w	r9, fp, r2, lsr #1
   37d0c:	orr.w	r2, r3, sl, lsr #31
   37d10:	mov.w	r3, sl, lsl #1
   37d14:	orr.w	fp, r3, lr, lsr #31
   37d18:	mov.w	lr, r1, lsl #7
   37d1c:	mov.w	r3, ip, lsl #7
   37d20:	orr.w	lr, lr, ip, lsr #25
   37d24:	orr.w	sl, r3, r1, lsr #25
   37d28:	adds.w	r3, fp, lr
   37d2c:	mov.w	lr, r4, lsl #12
   37d30:	adc.w	sl, r2, sl
   37d34:	orr.w	lr, lr, r5, lsr #20
   37d38:	lsls	r2, r5, #12
   37d3a:	adds.w	lr, r3, lr
   37d3e:	ldr	r3, [r0, #36]	; 0x24
   37d40:	orr.w	fp, r2, r4, lsr #20
   37d44:	adc.w	sl, sl, fp
   37d48:	mov.w	fp, r3, lsl #18
   37d4c:	ldr	r3, [r0, #32]
   37d4e:	orr.w	r2, fp, r3, lsr #14
   37d52:	lsls	r3, r3, #18
   37d54:	orr.w	r3, r3, r7, lsr #14
   37d58:	adds.w	lr, lr, r3
   37d5c:	ldr	r3, [pc, #340]	; (37eb4 <XXH64_digest@@Base+0x1f8>)
   37d5e:	adc.w	sl, sl, r2
   37d62:	ldr	r2, [pc, #340]	; (37eb8 <XXH64_digest@@Base+0x1fc>)
   37d64:	mul.w	fp, r2, r8
   37d68:	mla	fp, r3, r9, fp
   37d6c:	umull	r8, r9, r8, r3
   37d70:	add	r9, fp
   37d72:	eor.w	lr, lr, r8
   37d76:	eor.w	sl, sl, r9
   37d7a:	mul.w	r8, r2, lr
   37d7e:	mla	sl, r3, sl, r8
   37d82:	umull	r7, r8, lr, r3
   37d86:	strd	r7, r8, [sp, #16]
   37d8a:	ldr	r7, [sp, #20]
   37d8c:	add	r7, sl
   37d8e:	str	r7, [sp, #20]
   37d90:	ldr	r7, [pc, #284]	; (37eb0 <XXH64_digest@@Base+0x1f4>)
   37d92:	umull	sl, fp, r1, r6
   37d96:	mul.w	lr, r7, r1
   37d9a:	ldr	r7, [sp, #16]
   37d9c:	mla	ip, r6, ip, lr
   37da0:	mov.w	r8, sl, lsl #31
   37da4:	add	fp, ip
   37da6:	orr.w	r8, r8, fp, lsr #1
   37daa:	mov.w	r1, fp, lsl #31
   37dae:	orr.w	r1, r1, sl, lsr #1
   37db2:	mul.w	ip, r2, r8
   37db6:	mla	r1, r3, r1, ip
   37dba:	ldr.w	ip, [pc, #268]	; 37ec8 <XXH64_digest@@Base+0x20c>
   37dbe:	umull	r8, r9, r8, r3
   37dc2:	add	r9, r1
   37dc4:	ldr	r1, [pc, #244]	; (37ebc <XXH64_digest@@Base+0x200>)
   37dc6:	adds.w	sl, r7, r1
   37dca:	ldr	r7, [sp, #20]
   37dcc:	eor.w	sl, r8, sl
   37dd0:	adc.w	lr, r7, ip
   37dd4:	ldr	r7, [pc, #216]	; (37eb0 <XXH64_digest@@Base+0x1f4>)
   37dd6:	eor.w	lr, r9, lr
   37dda:	mul.w	r8, r2, sl
   37dde:	mla	lr, r3, lr, r8
   37de2:	umull	sl, fp, sl, r3
   37de6:	add	fp, lr
   37de8:	mul.w	lr, r7, r4
   37dec:	umull	r7, r8, r4, r6
   37df0:	mla	lr, r6, r5, lr
   37df4:	add	r8, lr
   37df6:	lsls	r4, r7, #31
   37df8:	orr.w	r4, r4, r8, lsr #1
   37dfc:	mov.w	lr, r8, lsl #31
   37e00:	orr.w	lr, lr, r7, lsr #1
   37e04:	adds.w	r8, sl, r1
   37e08:	mul.w	r5, r2, r4
   37e0c:	mla	lr, r3, lr, r5
   37e10:	umull	r4, r5, r4, r3
   37e14:	add	r5, lr
   37e16:	eor.w	r8, r4, r8
   37e1a:	adc.w	lr, fp, ip
   37e1e:	eor.w	r4, r5, lr
   37e22:	mul.w	r5, r2, r8
   37e26:	mla	r4, r3, r4, r5
   37e2a:	ldr	r5, [pc, #132]	; (37eb0 <XXH64_digest@@Base+0x1f4>)
   37e2c:	umull	r8, r9, r8, r3
   37e30:	add	r9, r4
   37e32:	ldr	r4, [r0, #32]
   37e34:	mul.w	r7, r5, r4
   37e38:	ldr	r5, [r0, #32]
   37e3a:	ldr	r4, [r0, #36]	; 0x24
   37e3c:	umull	sl, fp, r5, r6
   37e40:	mla	r4, r6, r4, r7
   37e44:	add	fp, r4
   37e46:	mov.w	r6, sl, lsl #31
   37e4a:	orr.w	r6, r6, fp, lsr #1
   37e4e:	mov.w	r4, fp, lsl #31
   37e52:	orr.w	r4, r4, sl, lsr #1
   37e56:	mul.w	r5, r2, r6
   37e5a:	mla	r4, r3, r4, r5
   37e5e:	umull	r6, r7, r6, r3
   37e62:	add	r7, r4
   37e64:	adds.w	r4, r8, r1
   37e68:	eor.w	r4, r4, r6
   37e6c:	adc.w	r5, r9, ip
   37e70:	eors	r5, r7
   37e72:	muls	r2, r4
   37e74:	mla	r2, r3, r5, r2
   37e78:	umull	r5, r6, r4, r3
   37e7c:	add	r6, r2
   37e7e:	adds	r4, r5, r1
   37e80:	adc.w	r1, r6, ip
   37e84:	movs	r3, #0
   37e86:	str	r3, [sp, #0]
   37e88:	ldr	r3, [sp, #8]
   37e8a:	add.w	r2, r0, #40	; 0x28
   37e8e:	adds	r0, r3, r4
   37e90:	ldr	r4, [sp, #12]
   37e92:	adc.w	r1, r4, r1
   37e96:	bl	3716c <hash_blake2b@@Base+0x194>
   37e9a:	add	sp, #28
   37e9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37ea0:	ldr	r1, [pc, #28]	; (37ec0 <XXH64_digest@@Base+0x204>)
   37ea2:	adds	r4, r4, r1
   37ea4:	ldr	r1, [pc, #28]	; (37ec4 <XXH64_digest@@Base+0x208>)
   37ea6:	adc.w	r1, r5, r1
   37eaa:	b.n	37e84 <XXH64_digest@@Base+0x1c8>
   37eac:	adc.w	r7, pc, r4, lsr #11
   37eb0:	add	r6, sp, #244	; 0xf4
   37eb2:	stmia	r2!, {r1, r4, r5, r7}
   37eb4:	ldmia	r2, {r0, r1, r2, r7}
   37eb6:	strh	r3, [r5, #46]	; 0x2e
   37eb8:	ldrb	r1, [r6, #6]
   37eba:	ldr	r6, [sp, #220]	; 0xdc
   37ebc:	add	r6, sp, #396	; 0x18c
   37ebe:	stmia	r2!, {r1, r4, r5, r7}
   37ec0:	str	r5, [r0, #124]	; 0x7c
   37ec2:	asrs	r6, r2, #25
   37ec4:			; <UNDEFINED> instruction: 0xeb2f27d4
   37ec8:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   37eca:	strh	r3, [r5, #46]	; 0x2e

00037ecc <XXH64_canonicalFromHash@@Base>:
   37ecc:	push	{r0, r1, r4, lr}
   37ece:	mov	r4, r0
   37ed0:	strd	r2, r3, [sp]
   37ed4:	rev	r2, r2
   37ed6:	ldr	r3, [sp, #4]
   37ed8:	rev	r3, r3
   37eda:	strd	r3, r2, [sp]
   37ede:	mov	r3, sp
   37ee0:	ldmia	r3!, {r0, r1}
   37ee2:	str	r0, [r4, #0]
   37ee4:	str	r1, [r4, #4]
   37ee6:	add	sp, #8
   37ee8:	pop	{r4, pc}

00037eea <XXH64_hashFromCanonical@@Base>:
   37eea:	ldr	r1, [r0, #0]
   37eec:	ldr	r0, [r0, #4]
   37eee:	rev	r1, r1
   37ef0:	rev	r0, r0
   37ef2:	bx	lr
   37ef4:	ldr	r2, [pc, #372]	; (3806c <XXH64_hashFromCanonical@@Base+0x182>)
   37ef6:	ldr	r3, [pc, #376]	; (38070 <XXH64_hashFromCanonical@@Base+0x186>)
   37ef8:	add	r2, pc
   37efa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37efe:	sub	sp, #308	; 0x134
   37f00:	ldr	r3, [r2, r3]
   37f02:	add	r1, sp, #44	; 0x2c
   37f04:	add.w	r5, r0, #64	; 0x40
   37f08:	mov	r2, r0
   37f0a:	ldr	r3, [r3, #0]
   37f0c:	str	r3, [sp, #300]	; 0x12c
   37f0e:	mov.w	r3, #0
   37f12:	mov	r4, r1
   37f14:	ldrb.w	r3, [r2, #43]	; 0x2b
   37f18:	adds	r2, #4
   37f1a:	ldrb.w	r6, [r2, #38]	; 0x26
   37f1e:	lsls	r3, r3, #16
   37f20:	orr.w	r3, r3, r6, lsl #24
   37f24:	ldrb.w	r6, [r2, #41]	; 0x29
   37f28:	orrs	r3, r6
   37f2a:	ldrb.w	r6, [r2, #40]	; 0x28
   37f2e:	cmp	r5, r2
   37f30:	orr.w	r3, r3, r6, lsl #8
   37f34:	str.w	r3, [r4], #4
   37f38:	bne.n	37f14 <XXH64_hashFromCanonical@@Base+0x2a>
   37f3a:	movs	r4, #16
   37f3c:	ldr	r2, [r1, #56]	; 0x38
   37f3e:	mov	r6, r1
   37f40:	ldr.w	r5, [r1, #4]!
   37f44:	adds	r4, #1
   37f46:	cmp	r4, #64	; 0x40
   37f48:	mov.w	r3, r2, ror #19
   37f4c:	eor.w	r3, r3, r2, ror #17
   37f50:	eor.w	r3, r3, r2, lsr #10
   37f54:	ldr	r2, [r6, #36]	; 0x24
   37f56:	ldr	r6, [r6, #0]
   37f58:	add	r2, r6
   37f5a:	add	r3, r2
   37f5c:	mov.w	r2, r5, ror #18
   37f60:	eor.w	r2, r2, r5, ror #7
   37f64:	eor.w	r2, r2, r5, lsr #3
   37f68:	add	r3, r2
   37f6a:	str	r3, [r1, #60]	; 0x3c
   37f6c:	bne.n	37f3c <XXH64_hashFromCanonical@@Base+0x52>
   37f6e:	ldr	r3, [r0, #0]
   37f70:	add.w	r9, sp, #44	; 0x2c
   37f74:	mov.w	lr, #0
   37f78:	str	r3, [sp, #0]
   37f7a:	ldr	r3, [r0, #4]
   37f7c:	str	r3, [sp, #4]
   37f7e:	ldr	r3, [r0, #8]
   37f80:	ldrd	r4, r6, [sp]
   37f84:	str	r3, [sp, #8]
   37f86:	ldr	r3, [r0, #12]
   37f88:	str	r3, [sp, #12]
   37f8a:	ldr	r3, [r0, #16]
   37f8c:	ldrd	r5, r8, [sp, #8]
   37f90:	str	r3, [sp, #16]
   37f92:	ldr	r3, [r0, #20]
   37f94:	str	r3, [sp, #20]
   37f96:	ldr	r3, [r0, #24]
   37f98:	ldrd	r1, ip, [sp, #16]
   37f9c:	str	r3, [sp, #24]
   37f9e:	ldr	r3, [r0, #28]
   37fa0:	str	r3, [sp, #28]
   37fa2:	ldrd	r7, fp, [sp, #24]
   37fa6:	ldr	r3, [pc, #204]	; (38074 <XXH64_hashFromCanonical@@Base+0x18a>)
   37fa8:	add	r3, pc
   37faa:	str	r3, [sp, #36]	; 0x24
   37fac:	ldr	r3, [sp, #36]	; 0x24
   37fae:	ldr.w	r2, [r3], #4
   37fb2:	str	r3, [sp, #36]	; 0x24
   37fb4:	mov.w	r3, r1, ror #11
   37fb8:	eor.w	r3, r3, r1, ror #6
   37fbc:	eor.w	sl, r3, r1, ror #25
   37fc0:	ldr.w	r3, [r9, lr, lsl #2]
   37fc4:	add.w	lr, lr, #1
   37fc8:	add	r2, r3
   37fca:	cmp.w	lr, #64	; 0x40
   37fce:	add.w	r3, sl, r2
   37fd2:	bic.w	sl, r7, r1
   37fd6:	and.w	r2, r1, ip
   37fda:	eor.w	r2, sl, r2
   37fde:	mov.w	sl, r4, ror #13
   37fe2:	add	r2, r3
   37fe4:	eor.w	r3, r6, r5
   37fe8:	add	r2, fp
   37fea:	eor.w	sl, sl, r4, ror #2
   37fee:	and.w	fp, r6, r5
   37ff2:	and.w	r3, r3, r4
   37ff6:	eor.w	r3, r3, fp
   37ffa:	eor.w	sl, sl, r4, ror #22
   37ffe:	add	sl, r3
   38000:	mov	fp, r7
   38002:	add.w	r3, r2, r8
   38006:	add	r2, sl
   38008:	mov	r8, r5
   3800a:	str	r3, [sp, #32]
   3800c:	bne.n	38058 <XXH64_hashFromCanonical@@Base+0x16e>
   3800e:	ldr	r3, [sp, #0]
   38010:	add	r3, r2
   38012:	str	r3, [r0, #0]
   38014:	ldr	r3, [sp, #4]
   38016:	ldr	r2, [sp, #32]
   38018:	add	r3, r4
   3801a:	str	r3, [r0, #4]
   3801c:	ldr	r3, [sp, #8]
   3801e:	add	r3, r6
   38020:	str	r3, [r0, #8]
   38022:	ldr	r3, [sp, #12]
   38024:	add	r3, r5
   38026:	str	r3, [r0, #12]
   38028:	ldr	r3, [sp, #16]
   3802a:	add	r3, r2
   3802c:	str	r3, [r0, #16]
   3802e:	ldr	r3, [sp, #20]
   38030:	ldr	r2, [pc, #68]	; (38078 <XXH64_hashFromCanonical@@Base+0x18e>)
   38032:	add	r3, r1
   38034:	str	r3, [r0, #20]
   38036:	ldr	r3, [sp, #24]
   38038:	add	r2, pc
   3803a:	add	r3, ip
   3803c:	str	r3, [r0, #24]
   3803e:	ldr	r3, [sp, #28]
   38040:	add	r3, r7
   38042:	str	r3, [r0, #28]
   38044:	movs	r3, #0
   38046:	strh	r3, [r0, #40]	; 0x28
   38048:	ldr	r3, [pc, #36]	; (38070 <XXH64_hashFromCanonical@@Base+0x186>)
   3804a:	ldr	r3, [r2, r3]
   3804c:	ldr	r2, [r3, #0]
   3804e:	ldr	r3, [sp, #300]	; 0x12c
   38050:	eors	r2, r3
   38052:	beq.n	38066 <XXH64_hashFromCanonical@@Base+0x17c>
   38054:	blx	88e4 <__stack_chk_fail@plt>
   38058:	mov	r7, ip
   3805a:	mov	r5, r6
   3805c:	mov	ip, r1
   3805e:	mov	r6, r4
   38060:	ldr	r1, [sp, #32]
   38062:	mov	r4, r2
   38064:	b.n	37fac <XXH64_hashFromCanonical@@Base+0xc2>
   38066:	add	sp, #308	; 0x134
   38068:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3806c:	lsrs	r0, r7, #24
   3806e:	movs	r3, r0
   38070:	lsls	r4, r7, #9
   38072:	movs	r0, r0
   38074:	movs	r4, r1
   38076:	movs	r2, r0
   38078:	lsrs	r0, r7, #19
   3807a:	movs	r3, r0
   3807c:	push	{r4, lr}
   3807e:	mov	r4, r0
   38080:	ldrsh.w	r3, [r0, #40]	; 0x28
   38084:	adds	r2, r3, #1
   38086:	cmp	r3, #55	; 0x37
   38088:	add	r3, r0
   3808a:	sxth	r2, r2
   3808c:	strh	r2, [r0, #40]	; 0x28
   3808e:	strb.w	r1, [r3, #42]	; 0x2a
   38092:	ble.n	380a4 <XXH64_hashFromCanonical@@Base+0x1ba>
   38094:	movs	r2, #0
   38096:	ldrsh.w	r3, [r4, #40]	; 0x28
   3809a:	cmp	r3, #63	; 0x3f
   3809c:	ble.n	380e2 <XXH64_hashFromCanonical@@Base+0x1f8>
   3809e:	mov	r0, r4
   380a0:	bl	37ef4 <XXH64_hashFromCanonical@@Base+0xa>
   380a4:	movs	r2, #0
   380a6:	ldrsh.w	r3, [r4, #40]	; 0x28
   380aa:	cmp	r3, #55	; 0x37
   380ac:	ble.n	380ee <XXH64_hashFromCanonical@@Base+0x204>
   380ae:	ldr	r3, [r4, #32]
   380b0:	mov	r0, r4
   380b2:	ldrh	r2, [r4, #32]
   380b4:	lsrs	r1, r3, #24
   380b6:	lsrs	r3, r3, #16
   380b8:	strb.w	r3, [r4, #99]	; 0x63
   380bc:	rev16	r2, r2
   380be:	ldr	r3, [r4, #36]	; 0x24
   380c0:	strh.w	r2, [r4, #100]	; 0x64
   380c4:	ldrh	r2, [r4, #36]	; 0x24
   380c6:	strb.w	r1, [r4, #98]	; 0x62
   380ca:	lsrs	r1, r3, #24
   380cc:	rev16	r2, r2
   380ce:	lsrs	r3, r3, #16
   380d0:	strb.w	r1, [r4, #102]	; 0x66
   380d4:	strb.w	r3, [r4, #103]	; 0x67
   380d8:	strh.w	r2, [r4, #104]	; 0x68
   380dc:	ldmia.w	sp!, {r4, lr}
   380e0:	b.n	37ef4 <XXH64_hashFromCanonical@@Base+0xa>
   380e2:	adds	r1, r3, #1
   380e4:	add	r3, r4
   380e6:	strh	r1, [r4, #40]	; 0x28
   380e8:	strb.w	r2, [r3, #42]	; 0x2a
   380ec:	b.n	38096 <XXH64_hashFromCanonical@@Base+0x1ac>
   380ee:	adds	r1, r3, #1
   380f0:	add	r3, r4
   380f2:	strh	r1, [r4, #40]	; 0x28
   380f4:	strb.w	r2, [r3, #42]	; 0x2a
   380f8:	b.n	380a6 <XXH64_hashFromCanonical@@Base+0x1bc>
   380fa:	push	{r3, r4, r5, r6, r7, lr}
   380fc:	mov	r4, r0
   380fe:	ldr	r5, [r0, #108]	; 0x6c
   38100:	mov	r7, r1
   38102:	mov	r6, r2
   38104:	cbnz	r5, 38124 <XXH64_hashFromCanonical@@Base+0x23a>
   38106:	movs	r1, #128	; 0x80
   38108:	bl	3807c <XXH64_hashFromCanonical@@Base+0x192>
   3810c:	add.w	r2, r4, #42	; 0x2a
   38110:	add.w	r1, r4, #106	; 0x6a
   38114:	strb.w	r5, [r2], #1
   38118:	cmp	r2, r1
   3811a:	bne.n	38114 <XXH64_hashFromCanonical@@Base+0x22a>
   3811c:	movs	r3, #1
   3811e:	strd	r5, r5, [r4, #32]
   38122:	str	r3, [r4, #108]	; 0x6c
   38124:	movs	r3, #0
   38126:	asrs	r2, r3, #2
   38128:	mvns	r0, r3
   3812a:	and.w	r0, r0, #3
   3812e:	ldr.w	r2, [r4, r2, lsl #2]
   38132:	lsls	r0, r0, #3
   38134:	lsr.w	r0, r2, r0
   38138:	strb	r0, [r7, r3]
   3813a:	adds	r3, #1
   3813c:	cmp	r3, r6
   3813e:	bne.n	38126 <XXH64_hashFromCanonical@@Base+0x23c>
   38140:	movs	r0, #0
   38142:	pop	{r3, r4, r5, r6, r7, pc}

00038144 <SHA224Reset@@Base>:
   38144:	cbz	r0, 3817a <SHA224Reset@@Base+0x36>
   38146:	ldr	r2, [pc, #56]	; (38180 <SHA224Reset@@Base+0x3c>)
   38148:	movs	r3, #0
   3814a:	strd	r3, r3, [r0, #32]
   3814e:	add	r2, pc
   38150:	strh	r3, [r0, #40]	; 0x28
   38152:	strd	r3, r3, [r0, #108]	; 0x6c
   38156:	ldr	r1, [r2, #0]
   38158:	str	r1, [r0, #0]
   3815a:	ldr	r1, [r2, #4]
   3815c:	str	r1, [r0, #4]
   3815e:	ldr	r1, [r2, #8]
   38160:	str	r1, [r0, #8]
   38162:	ldr	r1, [r2, #12]
   38164:	str	r1, [r0, #12]
   38166:	ldr	r1, [r2, #16]
   38168:	str	r1, [r0, #16]
   3816a:	ldr	r1, [r2, #20]
   3816c:	str	r1, [r0, #20]
   3816e:	ldr	r1, [r2, #24]
   38170:	str	r1, [r0, #24]
   38172:	ldr	r2, [r2, #28]
   38174:	str	r2, [r0, #28]
   38176:	mov	r0, r3
   38178:	bx	lr
   3817a:	movs	r0, #1
   3817c:	bx	lr
   3817e:	nop
   38180:	movs	r0, #170	; 0xaa
   38182:	movs	r3, r0

00038184 <SHA224Result@@Base>:
   38184:	cbz	r0, 38190 <SHA224Result@@Base+0xc>
   38186:	cbz	r1, 38190 <SHA224Result@@Base+0xc>
   38188:	ldr	r3, [r0, #112]	; 0x70
   3818a:	cbnz	r3, 38192 <SHA224Result@@Base+0xe>
   3818c:	movs	r2, #28
   3818e:	b.n	380fa <XXH64_hashFromCanonical@@Base+0x210>
   38190:	movs	r3, #1
   38192:	mov	r0, r3
   38194:	bx	lr

00038196 <SHA256Reset@@Base>:
   38196:	cbz	r0, 381cc <SHA256Reset@@Base+0x36>
   38198:	ldr	r2, [pc, #52]	; (381d0 <SHA256Reset@@Base+0x3a>)
   3819a:	movs	r3, #0
   3819c:	strd	r3, r3, [r0, #32]
   381a0:	add	r2, pc
   381a2:	strh	r3, [r0, #40]	; 0x28
   381a4:	strd	r3, r3, [r0, #108]	; 0x6c
   381a8:	ldr	r1, [r2, #32]
   381aa:	str	r1, [r0, #0]
   381ac:	ldr	r1, [r2, #36]	; 0x24
   381ae:	str	r1, [r0, #4]
   381b0:	ldr	r1, [r2, #40]	; 0x28
   381b2:	str	r1, [r0, #8]
   381b4:	ldr	r1, [r2, #44]	; 0x2c
   381b6:	str	r1, [r0, #12]
   381b8:	ldr	r1, [r2, #48]	; 0x30
   381ba:	str	r1, [r0, #16]
   381bc:	ldr	r1, [r2, #52]	; 0x34
   381be:	str	r1, [r0, #20]
   381c0:	ldr	r1, [r2, #56]	; 0x38
   381c2:	str	r1, [r0, #24]
   381c4:	ldr	r2, [r2, #60]	; 0x3c
   381c6:	str	r2, [r0, #28]
   381c8:	mov	r0, r3
   381ca:	bx	lr
   381cc:	movs	r0, #1
   381ce:	bx	lr
   381d0:	movs	r0, #88	; 0x58
   381d2:	movs	r3, r0

000381d4 <SHA256Input@@Base>:
   381d4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   381d8:	mov	r4, r0
   381da:	cmp	r0, #0
   381dc:	beq.n	3824a <SHA256Input@@Base+0x76>
   381de:	cmp	r2, #0
   381e0:	beq.n	38246 <SHA256Input@@Base+0x72>
   381e2:	cmp	r1, #0
   381e4:	beq.n	3824a <SHA256Input@@Base+0x76>
   381e6:	ldr	r3, [r0, #108]	; 0x6c
   381e8:	cbz	r3, 381f2 <SHA256Input@@Base+0x1e>
   381ea:	movs	r0, #3
   381ec:	str	r0, [r4, #112]	; 0x70
   381ee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   381f2:	ldr	r0, [r0, #112]	; 0x70
   381f4:	cmp	r0, #0
   381f6:	bne.n	381ee <SHA256Input@@Base+0x1a>
   381f8:	adds	r6, r1, r2
   381fa:	mov	r5, r1
   381fc:	movs	r7, #8
   381fe:	mov.w	r8, #2
   38202:	cmp	r5, r6
   38204:	bne.n	3820a <SHA256Input@@Base+0x36>
   38206:	ldr	r0, [r4, #112]	; 0x70
   38208:	b.n	381ee <SHA256Input@@Base+0x1a>
   3820a:	ldrsh.w	r3, [r4, #40]	; 0x28
   3820e:	adds	r2, r3, #1
   38210:	add	r3, r4
   38212:	sxth	r2, r2
   38214:	strh	r2, [r4, #40]	; 0x28
   38216:	ldrb.w	r1, [r5], #1
   3821a:	strb.w	r1, [r3, #42]	; 0x2a
   3821e:	ldr	r3, [r4, #36]	; 0x24
   38220:	adds	r3, r3, r7
   38222:	str	r3, [r4, #36]	; 0x24
   38224:	bcc.n	38234 <SHA256Input@@Base+0x60>
   38226:	ldr	r3, [r4, #32]
   38228:	adds	r3, #1
   3822a:	str	r3, [r4, #32]
   3822c:	cbnz	r3, 38234 <SHA256Input@@Base+0x60>
   3822e:	str.w	r8, [r4, #112]	; 0x70
   38232:	b.n	38202 <SHA256Input@@Base+0x2e>
   38234:	ldr	r3, [r4, #112]	; 0x70
   38236:	cmp	r3, #0
   38238:	bne.n	38202 <SHA256Input@@Base+0x2e>
   3823a:	cmp	r2, #64	; 0x40
   3823c:	bne.n	38202 <SHA256Input@@Base+0x2e>
   3823e:	mov	r0, r4
   38240:	bl	37ef4 <XXH64_hashFromCanonical@@Base+0xa>
   38244:	b.n	38202 <SHA256Input@@Base+0x2e>
   38246:	mov	r0, r2
   38248:	b.n	381ee <SHA256Input@@Base+0x1a>
   3824a:	movs	r0, #1
   3824c:	b.n	381ee <SHA256Input@@Base+0x1a>

0003824e <SHA224Input@@Base>:
   3824e:	b.w	381d4 <SHA256Input@@Base>

00038252 <SHA256FinalBits@@Base>:
   38252:	push	{r4, lr}
   38254:	mov	r4, r0
   38256:	cbz	r0, 382bc <SHA256FinalBits@@Base+0x6a>
   38258:	cbz	r2, 382c0 <SHA256FinalBits@@Base+0x6e>
   3825a:	ldr	r0, [r0, #112]	; 0x70
   3825c:	cbnz	r0, 38266 <SHA256FinalBits@@Base+0x14>
   3825e:	ldr	r0, [r4, #108]	; 0x6c
   38260:	cbz	r0, 38268 <SHA256FinalBits@@Base+0x16>
   38262:	movs	r0, #3
   38264:	str	r0, [r4, #112]	; 0x70
   38266:	pop	{r4, pc}
   38268:	cmp	r2, #7
   3826a:	bls.n	38270 <SHA256FinalBits@@Base+0x1e>
   3826c:	movs	r0, #4
   3826e:	b.n	38264 <SHA256FinalBits@@Base+0x12>
   38270:	ldr	r3, [r4, #36]	; 0x24
   38272:	adds	r3, r2, r3
   38274:	str	r3, [r4, #36]	; 0x24
   38276:	bcc.n	38284 <SHA256FinalBits@@Base+0x32>
   38278:	ldr	r3, [r4, #32]
   3827a:	adds	r3, #1
   3827c:	str	r3, [r4, #32]
   3827e:	cmp	r3, #0
   38280:	it	eq
   38282:	moveq	r0, #2
   38284:	ldr	r3, [pc, #60]	; (382c4 <SHA256FinalBits@@Base+0x72>)
   38286:	str	r0, [r4, #112]	; 0x70
   38288:	mov	r0, r4
   3828a:	add	r3, pc
   3828c:	add	r2, r3
   3828e:	ldrb.w	r3, [r2, #256]	; 0x100
   38292:	ands	r1, r3
   38294:	ldrb.w	r3, [r2, #264]	; 0x108
   38298:	orrs	r1, r3
   3829a:	bl	3807c <XXH64_hashFromCanonical@@Base+0x192>
   3829e:	add.w	r2, r4, #42	; 0x2a
   382a2:	add.w	r1, r4, #106	; 0x6a
   382a6:	movs	r3, #0
   382a8:	strb.w	r3, [r2], #1
   382ac:	cmp	r1, r2
   382ae:	bne.n	382a8 <SHA256FinalBits@@Base+0x56>
   382b0:	strd	r3, r3, [r4, #32]
   382b4:	movs	r3, #1
   382b6:	ldr	r0, [r4, #112]	; 0x70
   382b8:	str	r3, [r4, #108]	; 0x6c
   382ba:	b.n	38266 <SHA256FinalBits@@Base+0x14>
   382bc:	movs	r0, #1
   382be:	b.n	38266 <SHA256FinalBits@@Base+0x14>
   382c0:	mov	r0, r2
   382c2:	b.n	38266 <SHA256FinalBits@@Base+0x14>
   382c4:	stc2	0, cr0, [sl, #-4]!

000382c8 <SHA224FinalBits@@Base>:
   382c8:	b.w	38252 <SHA256FinalBits@@Base>

000382cc <SHA256Result@@Base>:
   382cc:	cbz	r0, 382d8 <SHA256Result@@Base+0xc>
   382ce:	cbz	r1, 382d8 <SHA256Result@@Base+0xc>
   382d0:	ldr	r3, [r0, #112]	; 0x70
   382d2:	cbnz	r3, 382da <SHA256Result@@Base+0xe>
   382d4:	movs	r2, #32
   382d6:	b.n	380fa <XXH64_hashFromCanonical@@Base+0x210>
   382d8:	movs	r3, #1
   382da:	mov	r0, r3
   382dc:	bx	lr
   382de:	nop
   382e0:	mov	r3, r0
   382e2:	ldr	r0, [r0, #0]
   382e4:	ldr	r1, [r3, #4]
   382e6:	bx	lr
   382e8:	ldr	r2, [pc, #952]	; (386a4 <SHA256Result@@Base+0x3d8>)
   382ea:	ldr	r3, [pc, #956]	; (386a8 <SHA256Result@@Base+0x3dc>)
   382ec:	add	r2, pc
   382ee:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   382f2:	sub.w	sp, sp, #540	; 0x21c
   382f6:	ldr	r3, [r2, r3]
   382f8:	add	r5, sp, #272	; 0x110
   382fa:	add.w	r7, r1, #128	; 0x80
   382fe:	mov	fp, r0
   38300:	ldr	r3, [r3, #0]
   38302:	str	r3, [sp, #532]	; 0x214
   38304:	mov.w	r3, #0
   38308:	mov	r2, r1
   3830a:	mov	r4, r5
   3830c:	mov	r0, r2
   3830e:	bl	382e0 <SHA256Result@@Base+0x14>
   38312:	adds	r2, #8
   38314:	strd	r0, r1, [r5], #8
   38318:	cmp	r2, r7
   3831a:	bne.n	3830c <SHA256Result@@Base+0x40>
   3831c:	sub.w	r3, fp, #8
   38320:	str	r3, [sp, #132]	; 0x84
   38322:	add	r3, sp, #400	; 0x190
   38324:	str	r3, [sp, #136]	; 0x88
   38326:	ldrd	r1, r0, [sp, #132]	; 0x84
   3832a:	add.w	r3, fp, #56	; 0x38
   3832e:	str	r3, [sp, #140]	; 0x8c
   38330:	ldrd	r2, r3, [r1, #8]!
   38334:	strd	r2, r3, [r0], #8
   38338:	ldr	r3, [sp, #140]	; 0x8c
   3833a:	cmp	r1, r3
   3833c:	bne.n	38330 <SHA256Result@@Base+0x64>
   3833e:	ldr	r3, [sp, #272]	; 0x110
   38340:	ldrd	r8, r0, [sp, #432]	; 0x1b0
   38344:	ldr	r7, [sp, #400]	; 0x190
   38346:	str	r3, [sp, #4]
   38348:	ldr	r3, [sp, #276]	; 0x114
   3834a:	adds.w	r7, r8, r7
   3834e:	ldr	r6, [r4, #8]
   38350:	str	r3, [sp, #8]
   38352:	ldr	r3, [sp, #404]	; 0x194
   38354:	str	r6, [sp, #12]
   38356:	adc.w	r9, r0, r3
   3835a:	ldr	r3, [sp, #4]
   3835c:	ldr	r6, [r4, #12]
   3835e:	adds	r7, r7, r3
   38360:	ldr	r3, [sp, #8]
   38362:	adc.w	r9, r9, r3
   38366:	ldrd	r3, r2, [fp, #64]	; 0x40
   3836a:	str	r6, [sp, #16]
   3836c:	eor.w	r2, r9, r2
   38370:	eor.w	r5, r7, r3
   38374:	eor.w	r1, r2, #1358954496	; 0x51000000
   38378:	eor.w	r3, r5, #2902458368	; 0xad000000
   3837c:	eor.w	r1, r1, #937984	; 0xe5000
   38380:	ldr	r2, [pc, #768]	; (38684 <SHA256Result@@Base+0x3b8>)
   38382:	eor.w	r1, r1, #636	; 0x27c
   38386:	eor.w	r3, r3, #15073280	; 0xe60000
   3838a:	eor.w	r1, r1, #3
   3838e:	ldr	r5, [pc, #760]	; (38688 <SHA256Result@@Base+0x3bc>)
   38390:	eor.w	r3, r3, #33280	; 0x8200
   38394:	adds	r2, r1, r2
   38396:	eor.w	r3, r3, #209	; 0xd1
   3839a:	eor.w	r8, r8, r2
   3839e:	adc.w	r5, r3, r5
   383a2:	ldr	r6, [sp, #12]
   383a4:	eor.w	ip, r0, r5
   383a8:	mov.w	sl, r8, lsr #24
   383ac:	adds	r7, r7, r6
   383ae:	ldr	r6, [sp, #16]
   383b0:	orr.w	lr, sl, ip, lsl #8
   383b4:	mov.w	r0, ip, lsr #24
   383b8:	orr.w	r0, r0, r8, lsl #8
   383bc:	adc.w	r9, r9, r6
   383c0:	adds.w	r6, r7, lr
   383c4:	str	r6, [sp, #76]	; 0x4c
   383c6:	adc.w	r6, r9, r0
   383ca:	str	r6, [sp, #80]	; 0x50
   383cc:	ldr	r6, [sp, #76]	; 0x4c
   383ce:	eors	r1, r6
   383d0:	ldr	r6, [sp, #80]	; 0x50
   383d2:	eors	r3, r6
   383d4:	lsrs	r7, r1, #16
   383d6:	orr.w	r6, r7, r3, lsl #16
   383da:	lsrs	r3, r3, #16
   383dc:	orr.w	r3, r3, r1, lsl #16
   383e0:	str	r3, [sp, #168]	; 0xa8
   383e2:	adds	r3, r2, r6
   383e4:	str	r3, [sp, #108]	; 0x6c
   383e6:	ldr	r3, [sp, #168]	; 0xa8
   383e8:	str	r6, [sp, #104]	; 0x68
   383ea:	adc.w	r3, r5, r3
   383ee:	str	r3, [sp, #112]	; 0x70
   383f0:	ldr	r3, [sp, #108]	; 0x6c
   383f2:	eor.w	lr, r3, lr
   383f6:	ldr	r3, [sp, #112]	; 0x70
   383f8:	eors	r0, r3
   383fa:	lsls	r3, r0, #1
   383fc:	orr.w	r3, r3, lr, lsr #31
   38400:	mov.w	lr, lr, lsl #1
   38404:	str	r3, [sp, #196]	; 0xc4
   38406:	orr.w	r3, lr, r0, lsr #31
   3840a:	str	r3, [sp, #192]	; 0xc0
   3840c:	ldrd	r9, ip, [sp, #440]	; 0x1b8
   38410:	ldr	r3, [r4, #16]
   38412:	ldr	r2, [sp, #408]	; 0x198
   38414:	ldr	r7, [sp, #412]	; 0x19c
   38416:	str	r3, [sp, #20]
   38418:	adds.w	r2, r9, r2
   3841c:	ldr	r3, [r4, #20]
   3841e:	adc.w	r7, ip, r7
   38422:	ldr	r6, [r4, #24]
   38424:	str	r3, [sp, #24]
   38426:	ldr	r3, [sp, #20]
   38428:	str	r6, [sp, #28]
   3842a:	adds	r2, r2, r3
   3842c:	ldr	r3, [sp, #24]
   3842e:	ldr	r6, [r4, #28]
   38430:	adc.w	r7, r3, r7
   38434:	ldrd	r3, r1, [fp, #72]	; 0x48
   38438:	eor.w	r0, r7, r1
   3843c:	eors	r3, r2
   3843e:	eor.w	r5, r0, #2600468480	; 0x9b000000
   38442:	eor.w	r1, r3, #721420288	; 0x2b000000
   38446:	eor.w	r5, r5, #354304	; 0x56800
   3844a:	ldr	r3, [pc, #576]	; (3868c <SHA256Result@@Base+0x3c0>)
   3844c:	eor.w	r1, r1, #4079616	; 0x3e4000
   38450:	eor.w	r5, r5, #140	; 0x8c
   38454:	ldr	r0, [pc, #568]	; (38690 <SHA256Result@@Base+0x3c4>)
   38456:	eor.w	r1, r1, #11264	; 0x2c00
   3845a:	adds	r3, r5, r3
   3845c:	eor.w	r1, r1, #31
   38460:	adc.w	r0, r1, r0
   38464:	eor.w	r9, r9, r3
   38468:	str	r6, [sp, #32]
   3846a:	eor.w	ip, ip, r0
   3846e:	ldr	r6, [sp, #28]
   38470:	mov.w	sl, r9, lsr #24
   38474:	orr.w	r8, sl, ip, lsl #8
   38478:	mov.w	ip, ip, lsr #24
   3847c:	adds	r2, r2, r6
   3847e:	ldr	r6, [sp, #32]
   38480:	orr.w	lr, ip, r9, lsl #8
   38484:	adc.w	r7, r6, r7
   38488:	adds.w	r2, r2, r8
   3848c:	str	r2, [sp, #92]	; 0x5c
   3848e:	adc.w	r2, r7, lr
   38492:	str	r2, [sp, #96]	; 0x60
   38494:	ldr	r2, [sp, #92]	; 0x5c
   38496:	eors	r5, r2
   38498:	ldr	r2, [sp, #96]	; 0x60
   3849a:	eors	r1, r2
   3849c:	lsrs	r2, r5, #16
   3849e:	orr.w	r2, r2, r1, lsl #16
   384a2:	lsrs	r1, r1, #16
   384a4:	str	r2, [sp, #184]	; 0xb8
   384a6:	orr.w	r2, r1, r5, lsl #16
   384aa:	str	r2, [sp, #188]	; 0xbc
   384ac:	ldr	r2, [sp, #184]	; 0xb8
   384ae:	adds	r3, r3, r2
   384b0:	str	r3, [sp, #124]	; 0x7c
   384b2:	ldr	r3, [sp, #188]	; 0xbc
   384b4:	adc.w	r3, r0, r3
   384b8:	str	r3, [sp, #128]	; 0x80
   384ba:	ldr	r3, [sp, #124]	; 0x7c
   384bc:	eor.w	r8, r3, r8
   384c0:	ldr	r3, [sp, #128]	; 0x80
   384c2:	eor.w	lr, r3, lr
   384c6:	mov.w	r3, lr, lsl #1
   384ca:	orr.w	r3, r3, r8, lsr #31
   384ce:	mov.w	r8, r8, lsl #1
   384d2:	str	r3, [sp, #88]	; 0x58
   384d4:	orr.w	r3, r8, lr, lsr #31
   384d8:	str	r3, [sp, #84]	; 0x54
   384da:	ldrd	r8, r7, [sp, #448]	; 0x1c0
   384de:	ldr	r3, [r4, #32]
   384e0:	ldr	r2, [sp, #420]	; 0x1a4
   384e2:	ldr	r6, [r4, #40]	; 0x28
   384e4:	str	r3, [sp, #36]	; 0x24
   384e6:	ldr	r3, [r4, #36]	; 0x24
   384e8:	ldr	r1, [sp, #36]	; 0x24
   384ea:	str	r6, [sp, #44]	; 0x2c
   384ec:	str	r3, [sp, #40]	; 0x28
   384ee:	ldr	r3, [sp, #416]	; 0x1a0
   384f0:	ldr	r6, [r4, #44]	; 0x2c
   384f2:	adds.w	r3, r8, r3
   384f6:	adc.w	r2, r7, r2
   384fa:	adds	r3, r3, r1
   384fc:	ldr	r1, [sp, #40]	; 0x28
   384fe:	str	r6, [sp, #48]	; 0x30
   38500:	adc.w	ip, r2, r1
   38504:	ldrd	r2, r1, [fp, #80]	; 0x50
   38508:	ldr	r6, [sp, #44]	; 0x2c
   3850a:	eor.w	r5, ip, r1
   3850e:	eors	r2, r3
   38510:	eor.w	r0, r5, #528482304	; 0x1f800000
   38514:	eor.w	r1, r2, #4211081216	; 0xfb000000
   38518:	eor.w	r0, r0, #251904	; 0x3d800
   3851c:	ldr	r2, [pc, #372]	; (38694 <SHA256Result@@Base+0x3c8>)
   3851e:	eor.w	r0, r0, #426	; 0x1aa
   38522:	eor.w	r1, r1, #4292608	; 0x418000
   38526:	eor.w	r0, r0, #1
   3852a:	ldr	r5, [pc, #364]	; (38698 <SHA256Result@@Base+0x3cc>)
   3852c:	eor.w	r1, r1, #15680	; 0x3d40
   38530:	adds	r2, r0, r2
   38532:	eor.w	r1, r1, #43	; 0x2b
   38536:	eor.w	r8, r8, r2
   3853a:	adc.w	r5, r1, r5
   3853e:	adds	r3, r3, r6
   38540:	eor.w	lr, r7, r5
   38544:	ldr	r6, [sp, #48]	; 0x30
   38546:	mov.w	sl, r8, lsr #24
   3854a:	orr.w	r7, sl, lr, lsl #8
   3854e:	mov.w	lr, lr, lsr #24
   38552:	orr.w	r9, lr, r8, lsl #8
   38556:	adc.w	ip, ip, r6
   3855a:	adds	r3, r3, r7
   3855c:	str	r3, [sp, #116]	; 0x74
   3855e:	adc.w	r3, ip, r9
   38562:	str	r3, [sp, #120]	; 0x78
   38564:	ldr	r3, [sp, #116]	; 0x74
   38566:	ldrd	sl, r8, [sp, #456]	; 0x1c8
   3856a:	eors	r0, r3
   3856c:	ldr	r3, [sp, #120]	; 0x78
   3856e:	eors	r1, r3
   38570:	lsrs	r3, r0, #16
   38572:	orr.w	r3, r3, r1, lsl #16
   38576:	lsrs	r1, r1, #16
   38578:	str	r3, [sp, #200]	; 0xc8
   3857a:	orr.w	r3, r1, r0, lsl #16
   3857e:	str	r3, [sp, #204]	; 0xcc
   38580:	ldr	r3, [sp, #200]	; 0xc8
   38582:	adds	r2, r2, r3
   38584:	ldr	r3, [sp, #204]	; 0xcc
   38586:	eor.w	r7, r7, r2
   3858a:	adc.w	r5, r3, r5
   3858e:	eor.w	r9, r5, r9
   38592:	mov.w	r3, r9, lsl #1
   38596:	orr.w	r3, r3, r7, lsr #31
   3859a:	lsls	r7, r7, #1
   3859c:	str	r3, [sp, #176]	; 0xb0
   3859e:	orr.w	r3, r7, r9, lsr #31
   385a2:	str	r3, [sp, #172]	; 0xac
   385a4:	ldr	r3, [r4, #48]	; 0x30
   385a6:	str	r3, [sp, #52]	; 0x34
   385a8:	ldr	r3, [r4, #52]	; 0x34
   385aa:	str	r3, [sp, #56]	; 0x38
   385ac:	ldr	r1, [sp, #424]	; 0x1a8
   385ae:	ldr	r3, [sp, #428]	; 0x1ac
   385b0:	adds.w	r1, sl, r1
   385b4:	adc.w	r9, r8, r3
   385b8:	ldr	r3, [sp, #52]	; 0x34
   385ba:	adds	r1, r1, r3
   385bc:	ldr	r3, [sp, #56]	; 0x38
   385be:	adc.w	r9, r9, r3
   385c2:	ldrd	r3, r0, [fp, #88]	; 0x58
   385c6:	eor.w	r0, r9, r0
   385ca:	eors	r3, r1
   385cc:	eor.w	r7, r0, #1535115264	; 0x5b800000
   385d0:	eor.w	r6, r3, #325058560	; 0x13600000
   385d4:	eor.w	r7, r7, #6324224	; 0x608000
   385d8:	ldr	r3, [pc, #192]	; (3869c <SHA256Result@@Base+0x3d0>)
   385da:	eor.w	r7, r7, #19712	; 0x4d00
   385de:	eor.w	r6, r6, #1974272	; 0x1e2000
   385e2:	eor.w	r7, r7, #25
   385e6:	ldr	r0, [pc, #184]	; (386a0 <SHA256Result@@Base+0x3d4>)
   385e8:	adds	r3, r7, r3
   385ea:	str	r3, [sp, #68]	; 0x44
   385ec:	eor.w	sl, sl, r3
   385f0:	ldr	r3, [r4, #56]	; 0x38
   385f2:	eor.w	r6, r6, #376	; 0x178
   385f6:	eor.w	r6, r6, #1
   385fa:	mov.w	fp, sl, lsr #24
   385fe:	str	r3, [sp, #60]	; 0x3c
   38600:	adc.w	r0, r6, r0
   38604:	ldr	r3, [r4, #60]	; 0x3c
   38606:	eor.w	r8, r8, r0
   3860a:	orr.w	ip, fp, r8, lsl #8
   3860e:	mov.w	lr, r8, lsr #24
   38612:	str	r3, [sp, #64]	; 0x40
   38614:	orr.w	lr, lr, sl, lsl #8
   38618:	ldr	r3, [sp, #60]	; 0x3c
   3861a:	adds	r1, r1, r3
   3861c:	ldr	r3, [sp, #64]	; 0x40
   3861e:	adc.w	r9, r9, r3
   38622:	adds.w	r3, r1, ip
   38626:	str	r3, [sp, #144]	; 0x90
   38628:	adc.w	r3, r9, lr
   3862c:	str	r3, [sp, #148]	; 0x94
   3862e:	ldr	r3, [sp, #144]	; 0x90
   38630:	eors	r7, r3
   38632:	ldr	r3, [sp, #148]	; 0x94
   38634:	eors	r6, r3
   38636:	lsrs	r1, r7, #16
   38638:	ldr	r3, [sp, #68]	; 0x44
   3863a:	orr.w	r8, r1, r6, lsl #16
   3863e:	lsrs	r6, r6, #16
   38640:	adds.w	r3, r3, r8
   38644:	orr.w	sl, r6, r7, lsl #16
   38648:	adc.w	r0, r0, sl
   3864c:	eor.w	ip, r3, ip
   38650:	eor.w	lr, r0, lr
   38654:	str	r3, [sp, #100]	; 0x64
   38656:	mov.w	r1, lr, lsl #1
   3865a:	orr.w	fp, r1, ip, lsr #31
   3865e:	mov.w	ip, ip, lsl #1
   38662:	orr.w	r1, ip, lr, lsr #31
   38666:	str	r1, [sp, #208]	; 0xd0
   38668:	ldr	r1, [r4, #64]	; 0x40
   3866a:	str	r1, [sp, #68]	; 0x44
   3866c:	ldr	r1, [r4, #68]	; 0x44
   3866e:	ldr	r6, [sp, #68]	; 0x44
   38670:	str	r1, [sp, #72]	; 0x48
   38672:	ldr	r1, [sp, #76]	; 0x4c
   38674:	ldr	r7, [sp, #72]	; 0x48
   38676:	adds	r1, r1, r6
   38678:	ldr	r6, [sp, #80]	; 0x50
   3867a:	adc.w	r9, r6, r7
   3867e:	ldr	r6, [sp, #84]	; 0x54
   38680:	adds	r1, r1, r6
   38682:	b.n	386ac <SHA256Result@@Base+0x3e0>
   38684:	ldmia	r1!, {r3}
   38686:	bfcsel	e, 39356 <SHA256Result@@Base+0x108a>, 10, <und>
   3868a:	ldr	r1, [r1, #32]
   3868c:	add	r7, pc, #236	; (adr r7, 3877c <SHA256Result@@Base+0x4b0>)
   3868e:	strh	r2, [r1, #38]	; 0x26
   38690:	add	r6, sp, #532	; 0x214
   38692:	cbnz	r7, 386ee <SHA256Result@@Base+0x422>
   38694:	strht	pc, [fp, #148]
   38698:			; <UNDEFINED> instruction: 0xf3723c6e
   3869c:	adds	r6, #241	; 0xf1
   3869e:	ldrsh	r5, [r3, r4]
   386a0:	bmi.w	fffb3142 <__bss_end__@@Base+0xfff48aba>
   386a4:	lsrs	r4, r0, #9
   386a6:	movs	r3, r0
   386a8:	lsls	r4, r7, #9
   386aa:	movs	r0, r0
   386ac:	ldr	r6, [sp, #88]	; 0x58
   386ae:	eor.w	r7, r1, r8
   386b2:	adc.w	r9, r9, r6
   386b6:	ldr	r6, [sp, #84]	; 0x54
   386b8:	eor.w	lr, r9, sl
   386bc:	adds.w	r2, r2, lr
   386c0:	eor.w	r8, r2, r6
   386c4:	ldr	r6, [sp, #88]	; 0x58
   386c6:	ldr	r3, [r4, #72]	; 0x48
   386c8:	adc.w	r5, r7, r5
   386cc:	eor.w	ip, r5, r6
   386d0:	mov.w	r6, r8, lsr #24
   386d4:	str	r3, [sp, #76]	; 0x4c
   386d6:	orr.w	r6, r6, ip, lsl #8
   386da:	ldr	r3, [r4, #76]	; 0x4c
   386dc:	mov.w	ip, ip, lsr #24
   386e0:	orr.w	sl, ip, r8, lsl #8
   386e4:	str	r3, [sp, #80]	; 0x50
   386e6:	ldr	r3, [sp, #76]	; 0x4c
   386e8:	adds	r1, r1, r3
   386ea:	ldr	r3, [sp, #80]	; 0x50
   386ec:	adc.w	r9, r9, r3
   386f0:	adds	r3, r1, r6
   386f2:	str	r3, [sp, #152]	; 0x98
   386f4:	adc.w	r3, r9, sl
   386f8:	str	r3, [sp, #156]	; 0x9c
   386fa:	ldr	r3, [sp, #152]	; 0x98
   386fc:	eor.w	lr, r3, lr
   38700:	ldr	r3, [sp, #156]	; 0x9c
   38702:	eors	r7, r3
   38704:	mov.w	r1, lr, lsr #16
   38708:	orr.w	r3, r1, r7, lsl #16
   3870c:	lsrs	r7, r7, #16
   3870e:	str	r3, [sp, #212]	; 0xd4
   38710:	orr.w	r3, r7, lr, lsl #16
   38714:	str	r3, [sp, #216]	; 0xd8
   38716:	ldr	r3, [sp, #212]	; 0xd4
   38718:	adds	r3, r2, r3
   3871a:	str	r3, [sp, #160]	; 0xa0
   3871c:	ldr	r3, [sp, #216]	; 0xd8
   3871e:	adc.w	r3, r5, r3
   38722:	str	r3, [sp, #164]	; 0xa4
   38724:	ldr	r3, [sp, #160]	; 0xa0
   38726:	eors	r6, r3
   38728:	ldr	r3, [sp, #164]	; 0xa4
   3872a:	eor.w	sl, r3, sl
   3872e:	mov.w	r2, sl, lsl #1
   38732:	orr.w	r3, r2, r6, lsr #31
   38736:	lsls	r6, r6, #1
   38738:	str	r3, [sp, #224]	; 0xe0
   3873a:	orr.w	r3, r6, sl, lsr #31
   3873e:	str	r3, [sp, #220]	; 0xdc
   38740:	ldr	r3, [r4, #80]	; 0x50
   38742:	str	r3, [sp, #84]	; 0x54
   38744:	ldr	r3, [r4, #84]	; 0x54
   38746:	ldr	r2, [sp, #84]	; 0x54
   38748:	str	r3, [sp, #88]	; 0x58
   3874a:	ldr	r3, [sp, #92]	; 0x5c
   3874c:	ldr	r1, [sp, #88]	; 0x58
   3874e:	adds	r2, r3, r2
   38750:	ldr	r3, [sp, #96]	; 0x60
   38752:	adc.w	r6, r3, r1
   38756:	ldr	r3, [sp, #172]	; 0xac
   38758:	adds	r2, r2, r3
   3875a:	ldr	r3, [sp, #176]	; 0xb0
   3875c:	adc.w	r6, r3, r6
   38760:	ldr	r3, [sp, #168]	; 0xa8
   38762:	eor.w	r5, r6, r3
   38766:	ldr	r3, [sp, #104]	; 0x68
   38768:	eor.w	r1, r2, r3
   3876c:	ldr	r3, [sp, #100]	; 0x64
   3876e:	ldr	r7, [sp, #172]	; 0xac
   38770:	adds.w	sl, r3, r5
   38774:	ldr	r3, [r4, #88]	; 0x58
   38776:	eor.w	r8, sl, r7
   3877a:	ldr	r7, [sp, #176]	; 0xb0
   3877c:	adc.w	r0, r1, r0
   38780:	str	r3, [sp, #92]	; 0x5c
   38782:	eor.w	ip, r0, r7
   38786:	ldr	r3, [r4, #92]	; 0x5c
   38788:	mov.w	r9, r8, lsr #24
   3878c:	orr.w	r7, r9, ip, lsl #8
   38790:	mov.w	ip, ip, lsr #24
   38794:	orr.w	lr, ip, r8, lsl #8
   38798:	str	r3, [sp, #96]	; 0x60
   3879a:	ldr	r3, [sp, #92]	; 0x5c
   3879c:	adds	r2, r2, r3
   3879e:	ldr	r3, [sp, #96]	; 0x60
   387a0:	adc.w	r6, r3, r6
   387a4:	adds	r3, r2, r7
   387a6:	str	r3, [sp, #168]	; 0xa8
   387a8:	adc.w	r3, r6, lr
   387ac:	str	r3, [sp, #172]	; 0xac
   387ae:	ldr	r3, [sp, #168]	; 0xa8
   387b0:	eors	r5, r3
   387b2:	ldr	r3, [sp, #172]	; 0xac
   387b4:	eors	r1, r3
   387b6:	lsrs	r2, r5, #16
   387b8:	orr.w	r3, r2, r1, lsl #16
   387bc:	lsrs	r1, r1, #16
   387be:	str	r3, [sp, #228]	; 0xe4
   387c0:	orr.w	r3, r1, r5, lsl #16
   387c4:	str	r3, [sp, #232]	; 0xe8
   387c6:	ldr	r3, [sp, #228]	; 0xe4
   387c8:	adds.w	r3, sl, r3
   387cc:	str	r3, [sp, #176]	; 0xb0
   387ce:	ldr	r3, [sp, #232]	; 0xe8
   387d0:	adc.w	r3, r0, r3
   387d4:	str	r3, [sp, #180]	; 0xb4
   387d6:	ldr	r3, [sp, #176]	; 0xb0
   387d8:	eors	r7, r3
   387da:	ldr	r3, [sp, #180]	; 0xb4
   387dc:	eor.w	lr, r3, lr
   387e0:	mov.w	r3, lr, lsl #1
   387e4:	orr.w	r3, r3, r7, lsr #31
   387e8:	lsls	r7, r7, #1
   387ea:	str	r3, [sp, #240]	; 0xf0
   387ec:	orr.w	r3, r7, lr, lsr #31
   387f0:	str	r3, [sp, #236]	; 0xec
   387f2:	ldr	r3, [r4, #96]	; 0x60
   387f4:	str	r3, [sp, #100]	; 0x64
   387f6:	ldr	r3, [r4, #100]	; 0x64
   387f8:	ldr	r2, [sp, #100]	; 0x64
   387fa:	str	r3, [sp, #104]	; 0x68
   387fc:	ldr	r3, [sp, #116]	; 0x74
   387fe:	ldr	r1, [sp, #104]	; 0x68
   38800:	adds	r3, r3, r2
   38802:	ldr	r2, [sp, #120]	; 0x78
   38804:	adc.w	ip, r2, r1
   38808:	ldr	r2, [sp, #208]	; 0xd0
   3880a:	adds	r3, r3, r2
   3880c:	ldr	r2, [sp, #188]	; 0xbc
   3880e:	adc.w	ip, ip, fp
   38812:	ldr	r0, [sp, #112]	; 0x70
   38814:	eor.w	r7, ip, r2
   38818:	ldr	r2, [sp, #184]	; 0xb8
   3881a:	eor.w	r1, r3, r2
   3881e:	ldr	r2, [sp, #108]	; 0x6c
   38820:	adds	r2, r2, r7
   38822:	adc.w	r5, r0, r1
   38826:	ldr	r0, [sp, #208]	; 0xd0
   38828:	eor.w	lr, r2, r0
   3882c:	eor.w	r0, r5, fp
   38830:	mov.w	r9, lr, lsr #24
   38834:	orr.w	r8, r9, r0, lsl #8
   38838:	lsrs	r0, r0, #24
   3883a:	orr.w	r6, r0, lr, lsl #8
   3883e:	ldr	r0, [r4, #104]	; 0x68
   38840:	str	r0, [sp, #108]	; 0x6c
   38842:	ldr	r0, [r4, #108]	; 0x6c
   38844:	str	r0, [sp, #112]	; 0x70
   38846:	ldr	r0, [sp, #108]	; 0x6c
   38848:	adds	r3, r3, r0
   3884a:	ldr	r0, [sp, #112]	; 0x70
   3884c:	adc.w	ip, ip, r0
   38850:	adds.w	r3, r3, r8
   38854:	str	r3, [sp, #184]	; 0xb8
   38856:	adc.w	r3, ip, r6
   3885a:	str	r3, [sp, #188]	; 0xbc
   3885c:	ldr	r3, [sp, #184]	; 0xb8
   3885e:	eors	r7, r3
   38860:	ldr	r3, [sp, #188]	; 0xbc
   38862:	eors	r1, r3
   38864:	lsrs	r3, r7, #16
   38866:	orr.w	r3, r3, r1, lsl #16
   3886a:	lsrs	r1, r1, #16
   3886c:	str	r3, [sp, #208]	; 0xd0
   3886e:	orr.w	r3, r1, r7, lsl #16
   38872:	str	r3, [sp, #244]	; 0xf4
   38874:	ldr	r3, [sp, #208]	; 0xd0
   38876:	adds	r2, r2, r3
   38878:	ldr	r3, [sp, #244]	; 0xf4
   3887a:	eor.w	r8, r2, r8
   3887e:	adc.w	r5, r3, r5
   38882:	eors	r6, r5
   38884:	lsls	r3, r6, #1
   38886:	orr.w	r3, r3, r8, lsr #31
   3888a:	mov.w	r8, r8, lsl #1
   3888e:	str	r3, [sp, #252]	; 0xfc
   38890:	orr.w	r3, r8, r6, lsr #31
   38894:	str	r3, [sp, #248]	; 0xf8
   38896:	ldr	r3, [r4, #112]	; 0x70
   38898:	str	r3, [sp, #116]	; 0x74
   3889a:	ldr	r3, [r4, #116]	; 0x74
   3889c:	ldr	r1, [sp, #116]	; 0x74
   3889e:	str	r3, [sp, #120]	; 0x78
   388a0:	ldr	r3, [sp, #144]	; 0x90
   388a2:	ldr	r0, [sp, #120]	; 0x78
   388a4:	adds	r1, r3, r1
   388a6:	ldr	r3, [sp, #148]	; 0x94
   388a8:	adc.w	r9, r3, r0
   388ac:	ldr	r3, [sp, #192]	; 0xc0
   388ae:	adds	r1, r1, r3
   388b0:	ldr	r3, [sp, #196]	; 0xc4
   388b2:	adc.w	r9, r9, r3
   388b6:	ldr	r3, [sp, #204]	; 0xcc
   388b8:	eor.w	r7, r9, r3
   388bc:	ldr	r3, [sp, #200]	; 0xc8
   388be:	ldr	r6, [sp, #192]	; 0xc0
   388c0:	eor.w	sl, r1, r3
   388c4:	ldr	r3, [sp, #124]	; 0x7c
   388c6:	ldr	r0, [sp, #128]	; 0x80
   388c8:	adds	r3, r3, r7
   388ca:	eor.w	lr, r3, r6
   388ce:	ldr	r6, [sp, #196]	; 0xc4
   388d0:	adc.w	r0, r0, sl
   388d4:	eors	r6, r0
   388d6:	mov.w	fp, lr, lsr #24
   388da:	orr.w	ip, fp, r6, lsl #8
   388de:	lsrs	r6, r6, #24
   388e0:	orr.w	r8, r6, lr, lsl #8
   388e4:	ldr	r6, [r4, #120]	; 0x78
   388e6:	ldr	r4, [r4, #124]	; 0x7c
   388e8:	adds	r1, r1, r6
   388ea:	str	r6, [sp, #124]	; 0x7c
   388ec:	str	r4, [sp, #128]	; 0x80
   388ee:	ldr	r4, [sp, #128]	; 0x80
   388f0:	adc.w	r9, r9, r4
   388f4:	adds.w	r1, r1, ip
   388f8:	str	r1, [sp, #144]	; 0x90
   388fa:	adc.w	r1, r9, r8
   388fe:	str	r1, [sp, #148]	; 0x94
   38900:	ldr	r1, [sp, #144]	; 0x90
   38902:	eors	r7, r1
   38904:	ldr	r1, [sp, #148]	; 0x94
   38906:	eor.w	r1, r1, sl
   3890a:	lsrs	r4, r7, #16
   3890c:	orr.w	fp, r4, r1, lsl #16
   38910:	mov.w	sl, r1, lsr #16
   38914:	adds.w	r3, r3, fp
   38918:	orr.w	sl, sl, r7, lsl #16
   3891c:	adc.w	r0, r0, sl
   38920:	eor.w	ip, r3, ip
   38924:	eor.w	r8, r0, r8
   38928:	ldr	r4, [sp, #116]	; 0x74
   3892a:	ldr	r7, [sp, #120]	; 0x78
   3892c:	mov.w	r1, r8, lsl #1
   38930:	str	r3, [sp, #192]	; 0xc0
   38932:	orr.w	r6, r1, ip, lsr #31
   38936:	ldr	r1, [sp, #152]	; 0x98
   38938:	mov.w	ip, ip, lsl #1
   3893c:	adds	r1, r1, r4
   3893e:	ldr	r4, [sp, #156]	; 0x9c
   38940:	orr.w	lr, ip, r8, lsr #31
   38944:	adc.w	r9, r4, r7
   38948:	adds.w	r1, r1, lr
   3894c:	ldr	r4, [sp, #232]	; 0xe8
   3894e:	adc.w	r9, r9, r6
   38952:	eor.w	r7, r9, r4
   38956:	ldr	r4, [sp, #228]	; 0xe4
   38958:	adds	r2, r2, r7
   3895a:	eor.w	r4, r1, r4
   3895e:	eor.w	ip, r2, lr
   38962:	adc.w	r5, r4, r5
   38966:	eors	r6, r5
   38968:	mov.w	r3, ip, lsr #24
   3896c:	orr.w	lr, r3, r6, lsl #8
   38970:	ldr	r3, [sp, #84]	; 0x54
   38972:	lsrs	r6, r6, #24
   38974:	adds	r1, r3, r1
   38976:	ldr	r3, [sp, #88]	; 0x58
   38978:	orr.w	r8, r6, ip, lsl #8
   3897c:	adc.w	r9, r3, r9
   38980:	adds.w	r3, r1, lr
   38984:	str	r3, [sp, #152]	; 0x98
   38986:	adc.w	r3, r9, r8
   3898a:	str	r3, [sp, #156]	; 0x9c
   3898c:	ldr	r3, [sp, #152]	; 0x98
   3898e:	eors	r7, r3
   38990:	ldr	r3, [sp, #156]	; 0x9c
   38992:	eors	r4, r3
   38994:	lsrs	r1, r7, #16
   38996:	orr.w	r3, r1, r4, lsl #16
   3899a:	lsrs	r4, r4, #16
   3899c:	str	r3, [sp, #228]	; 0xe4
   3899e:	orr.w	r3, r4, r7, lsl #16
   389a2:	str	r3, [sp, #232]	; 0xe8
   389a4:	ldr	r3, [sp, #228]	; 0xe4
   389a6:	adds	r3, r2, r3
   389a8:	str	r3, [sp, #196]	; 0xc4
   389aa:	ldr	r3, [sp, #232]	; 0xe8
   389ac:	adc.w	r3, r5, r3
   389b0:	str	r3, [sp, #200]	; 0xc8
   389b2:	ldr	r3, [sp, #196]	; 0xc4
   389b4:	ldr	r1, [sp, #172]	; 0xac
   389b6:	eor.w	lr, r3, lr
   389ba:	ldr	r3, [sp, #200]	; 0xc8
   389bc:	ldr	r4, [sp, #220]	; 0xdc
   389be:	eor.w	r8, r3, r8
   389c2:	mov.w	r2, r8, lsl #1
   389c6:	orr.w	r3, r2, lr, lsr #31
   389ca:	mov.w	lr, lr, lsl #1
   389ce:	ldr	r2, [sp, #168]	; 0xa8
   389d0:	str	r3, [sp, #260]	; 0x104
   389d2:	orr.w	r3, lr, r8, lsr #31
   389d6:	str	r3, [sp, #256]	; 0x100
   389d8:	ldr	r3, [sp, #36]	; 0x24
   389da:	adds	r2, r3, r2
   389dc:	ldr	r3, [sp, #40]	; 0x28
   389de:	adc.w	r7, r3, r1
   389e2:	ldr	r3, [sp, #220]	; 0xdc
   389e4:	adds	r2, r2, r3
   389e6:	ldr	r3, [sp, #224]	; 0xe0
   389e8:	adc.w	r7, r3, r7
   389ec:	ldr	r3, [sp, #244]	; 0xf4
   389ee:	eor.w	r5, r7, r3
   389f2:	ldr	r3, [sp, #208]	; 0xd0
   389f4:	eor.w	r1, r2, r3
   389f8:	ldr	r3, [sp, #192]	; 0xc0
   389fa:	adds	r3, r3, r5
   389fc:	eor.w	r6, r3, r4
   38a00:	ldr	r4, [sp, #224]	; 0xe0
   38a02:	adc.w	r0, r1, r0
   38a06:	eors	r4, r0
   38a08:	mov.w	r8, r6, lsr #24
   38a0c:	orr.w	ip, r8, r4, lsl #8
   38a10:	lsrs	r4, r4, #24
   38a12:	orr.w	lr, r4, r6, lsl #8
   38a16:	ldr	r4, [sp, #68]	; 0x44
   38a18:	adds	r2, r4, r2
   38a1a:	ldr	r4, [sp, #72]	; 0x48
   38a1c:	adc.w	r7, r4, r7
   38a20:	adds.w	r2, r2, ip
   38a24:	str	r2, [sp, #168]	; 0xa8
   38a26:	adc.w	r2, r7, lr
   38a2a:	str	r2, [sp, #172]	; 0xac
   38a2c:	ldr	r2, [sp, #168]	; 0xa8
   38a2e:	eors	r5, r2
   38a30:	ldr	r2, [sp, #172]	; 0xac
   38a32:	eors	r1, r2
   38a34:	lsrs	r2, r5, #16
   38a36:	orr.w	r2, r2, r1, lsl #16
   38a3a:	lsrs	r1, r1, #16
   38a3c:	str	r2, [sp, #208]	; 0xd0
   38a3e:	orr.w	r2, r1, r5, lsl #16
   38a42:	str	r2, [sp, #220]	; 0xdc
   38a44:	ldr	r2, [sp, #208]	; 0xd0
   38a46:	adds	r3, r3, r2
   38a48:	str	r3, [sp, #192]	; 0xc0
   38a4a:	ldr	r3, [sp, #220]	; 0xdc
   38a4c:	adc.w	r3, r0, r3
   38a50:	str	r3, [sp, #204]	; 0xcc
   38a52:	ldr	r2, [sp, #204]	; 0xcc
   38a54:	ldr	r3, [sp, #192]	; 0xc0
   38a56:	eor.w	lr, r2, lr
   38a5a:	eor.w	r3, r3, ip
   38a5e:	mov.w	r2, lr, lsl #1
   38a62:	orr.w	r2, r2, r3, lsr #31
   38a66:	mov.w	ip, r3, lsl #1
   38a6a:	str	r2, [sp, #224]	; 0xe0
   38a6c:	orr.w	ip, ip, lr, lsr #31
   38a70:	ldr	r3, [sp, #76]	; 0x4c
   38a72:	ldr	r2, [sp, #184]	; 0xb8
   38a74:	adds	r3, r3, r2
   38a76:	ldr	r2, [sp, #80]	; 0x50
   38a78:	ldr	r1, [sp, #188]	; 0xbc
   38a7a:	adc.w	r8, r2, r1
   38a7e:	ldr	r2, [sp, #236]	; 0xec
   38a80:	ldr	r1, [sp, #164]	; 0xa4
   38a82:	adds	r3, r3, r2
   38a84:	ldr	r2, [sp, #240]	; 0xf0
   38a86:	eor.w	r0, r3, fp
   38a8a:	adc.w	r8, r8, r2
   38a8e:	ldr	r2, [sp, #160]	; 0xa0
   38a90:	eor.w	r6, r8, sl
   38a94:	adds	r2, r2, r6
   38a96:	adc.w	r5, r1, r0
   38a9a:	ldr	r1, [sp, #236]	; 0xec
   38a9c:	eor.w	r7, r2, r1
   38aa0:	ldr	r1, [sp, #240]	; 0xf0
   38aa2:	eor.w	r4, r5, r1
   38aa6:	mov.w	r9, r7, lsr #24
   38aaa:	orr.w	r1, r9, r4, lsl #8
   38aae:	lsrs	r4, r4, #24
   38ab0:	orr.w	lr, r4, r7, lsl #8
   38ab4:	ldr	r4, [sp, #124]	; 0x7c
   38ab6:	adds	r3, r4, r3
   38ab8:	ldr	r4, [sp, #128]	; 0x80
   38aba:	adc.w	r8, r4, r8
   38abe:	adds	r3, r3, r1
   38ac0:	str	r3, [sp, #160]	; 0xa0
   38ac2:	adc.w	r3, r8, lr
   38ac6:	str	r3, [sp, #164]	; 0xa4
   38ac8:	ldr	r3, [sp, #160]	; 0xa0
   38aca:	ldr	r4, [sp, #248]	; 0xf8
   38acc:	eors	r6, r3
   38ace:	ldr	r3, [sp, #164]	; 0xa4
   38ad0:	eors	r0, r3
   38ad2:	lsrs	r3, r6, #16
   38ad4:	orr.w	r3, r3, r0, lsl #16
   38ad8:	lsrs	r0, r0, #16
   38ada:	str	r3, [sp, #236]	; 0xec
   38adc:	orr.w	r3, r0, r6, lsl #16
   38ae0:	str	r3, [sp, #240]	; 0xf0
   38ae2:	ldr	r3, [sp, #236]	; 0xec
   38ae4:	ldr	r0, [sp, #148]	; 0x94
   38ae6:	adds	r2, r2, r3
   38ae8:	ldr	r3, [sp, #240]	; 0xf0
   38aea:	eor.w	r1, r1, r2
   38aee:	adc.w	r5, r3, r5
   38af2:	eor.w	lr, r5, lr
   38af6:	mov.w	r3, lr, lsl #1
   38afa:	orr.w	r3, r3, r1, lsr #31
   38afe:	lsls	r1, r1, #1
   38b00:	str	r3, [sp, #188]	; 0xbc
   38b02:	orr.w	r3, r1, lr, lsr #31
   38b06:	ldr	r1, [sp, #144]	; 0x90
   38b08:	str	r3, [sp, #184]	; 0xb8
   38b0a:	ldr	r3, [sp, #108]	; 0x6c
   38b0c:	adds	r1, r3, r1
   38b0e:	ldr	r3, [sp, #112]	; 0x70
   38b10:	adc.w	sl, r3, r0
   38b14:	ldr	r3, [sp, #248]	; 0xf8
   38b16:	ldr	r0, [sp, #180]	; 0xb4
   38b18:	adds	r1, r1, r3
   38b1a:	ldr	r3, [sp, #252]	; 0xfc
   38b1c:	adc.w	sl, sl, r3
   38b20:	ldr	r3, [sp, #216]	; 0xd8
   38b22:	eor.w	lr, sl, r3
   38b26:	ldr	r3, [sp, #212]	; 0xd4
   38b28:	eor.w	r6, r1, r3
   38b2c:	ldr	r3, [sp, #176]	; 0xb0
   38b2e:	adds.w	r3, r3, lr
   38b32:	eor.w	r8, r3, r4
   38b36:	ldr	r4, [sp, #252]	; 0xfc
   38b38:	adcs	r0, r6
   38b3a:	eor.w	r7, r0, r4
   38b3e:	mov.w	fp, r8, lsr #24
   38b42:	orr.w	r4, fp, r7, lsl #8
   38b46:	lsrs	r7, r7, #24
   38b48:	orr.w	r9, r7, r8, lsl #8
   38b4c:	ldr	r7, [sp, #52]	; 0x34
   38b4e:	adds	r1, r7, r1
   38b50:	ldr	r7, [sp, #56]	; 0x38
   38b52:	adc.w	sl, r7, sl
   38b56:	adds	r1, r1, r4
   38b58:	str	r1, [sp, #144]	; 0x90
   38b5a:	adc.w	r1, sl, r9
   38b5e:	str	r1, [sp, #148]	; 0x94
   38b60:	ldr	r1, [sp, #144]	; 0x90
   38b62:	eor.w	lr, r1, lr
   38b66:	ldr	r1, [sp, #148]	; 0x94
   38b68:	eors	r6, r1
   38b6a:	mov.w	r1, lr, lsr #16
   38b6e:	orr.w	r8, r1, r6, lsl #16
   38b72:	lsrs	r6, r6, #16
   38b74:	adds.w	r3, r3, r8
   38b78:	orr.w	sl, r6, lr, lsl #16
   38b7c:	adc.w	r0, r0, sl
   38b80:	eors	r4, r3
   38b82:	eor.w	r9, r0, r9
   38b86:	ldr	r6, [sp, #156]	; 0x9c
   38b88:	mov.w	r1, r9, lsl #1
   38b8c:	orr.w	r1, r1, r4, lsr #31
   38b90:	lsls	r4, r4, #1
   38b92:	orr.w	fp, r4, r9, lsr #31
   38b96:	str	r1, [sp, #212]	; 0xd4
   38b98:	ldr	r4, [sp, #152]	; 0x98
   38b9a:	ldr	r1, [sp, #12]
   38b9c:	adds	r1, r1, r4
   38b9e:	ldr	r4, [sp, #16]
   38ba0:	adc.w	r9, r4, r6
   38ba4:	ldr	r4, [sp, #224]	; 0xe0
   38ba6:	adds.w	r1, r1, ip
   38baa:	adc.w	r9, r9, r4
   38bae:	eor.w	r7, r1, r8
   38bb2:	eor.w	lr, r9, sl
   38bb6:	adds.w	r2, r2, lr
   38bba:	adc.w	r5, r7, r5
   38bbe:	eor.w	ip, r2, ip
   38bc2:	eor.w	r6, r5, r4
   38bc6:	mov.w	sl, ip, lsr #24
   38bca:	orr.w	r4, sl, r6, lsl #8
   38bce:	lsrs	r6, r6, #24
   38bd0:	orr.w	r8, r6, ip, lsl #8
   38bd4:	ldr	r6, [sp, #100]	; 0x64
   38bd6:	adds	r1, r6, r1
   38bd8:	ldr	r6, [sp, #104]	; 0x68
   38bda:	adc.w	r9, r6, r9
   38bde:	adds	r1, r1, r4
   38be0:	str	r1, [sp, #152]	; 0x98
   38be2:	adc.w	r1, r9, r8
   38be6:	str	r1, [sp, #156]	; 0x9c
   38be8:	ldr	r1, [sp, #152]	; 0x98
   38bea:	eor.w	lr, r1, lr
   38bee:	ldr	r1, [sp, #156]	; 0x9c
   38bf0:	eors	r7, r1
   38bf2:	mov.w	r1, lr, lsr #16
   38bf6:	orr.w	r1, r1, r7, lsl #16
   38bfa:	lsrs	r7, r7, #16
   38bfc:	str	r1, [sp, #216]	; 0xd8
   38bfe:	orr.w	r1, r7, lr, lsl #16
   38c02:	str	r1, [sp, #224]	; 0xe0
   38c04:	ldr	r1, [sp, #216]	; 0xd8
   38c06:	adds	r2, r2, r1
   38c08:	str	r2, [sp, #176]	; 0xb0
   38c0a:	ldr	r2, [sp, #224]	; 0xe0
   38c0c:	ldr	r1, [sp, #168]	; 0xa8
   38c0e:	adc.w	r2, r5, r2
   38c12:	str	r2, [sp, #180]	; 0xb4
   38c14:	ldr	r2, [sp, #176]	; 0xb0
   38c16:	eors	r4, r2
   38c18:	ldr	r2, [sp, #180]	; 0xb4
   38c1a:	eor.w	r8, r2, r8
   38c1e:	mov.w	r2, r8, lsl #1
   38c22:	orr.w	r2, r2, r4, lsr #31
   38c26:	lsls	r4, r4, #1
   38c28:	str	r2, [sp, #248]	; 0xf8
   38c2a:	orr.w	r2, r4, r8, lsr #31
   38c2e:	str	r2, [sp, #244]	; 0xf4
   38c30:	ldr	r2, [sp, #4]
   38c32:	ldr	r4, [sp, #172]	; 0xac
   38c34:	adds	r2, r2, r1
   38c36:	ldr	r1, [sp, #8]
   38c38:	adc.w	r7, r1, r4
   38c3c:	ldr	r1, [sp, #184]	; 0xb8
   38c3e:	adds	r2, r2, r1
   38c40:	ldr	r1, [sp, #188]	; 0xbc
   38c42:	adc.w	r7, r1, r7
   38c46:	ldr	r1, [sp, #232]	; 0xe8
   38c48:	eor.w	r4, r7, r1
   38c4c:	ldr	r1, [sp, #228]	; 0xe4
   38c4e:	adds	r3, r3, r4
   38c50:	eor.w	r9, r2, r1
   38c54:	ldr	r1, [sp, #184]	; 0xb8
   38c56:	adc.w	r0, r0, r9
   38c5a:	eor.w	ip, r3, r1
   38c5e:	ldr	r1, [sp, #188]	; 0xbc
   38c60:	eor.w	r5, r0, r1
   38c64:	mov.w	lr, ip, lsr #24
   38c68:	orr.w	r1, lr, r5, lsl #8
   38c6c:	lsrs	r5, r5, #24
   38c6e:	orr.w	r6, r5, ip, lsl #8
   38c72:	ldr	r5, [sp, #20]
   38c74:	adds	r2, r5, r2
   38c76:	ldr	r5, [sp, #24]
   38c78:	adc.w	r7, r5, r7
   38c7c:	adds	r2, r2, r1
   38c7e:	str	r2, [sp, #168]	; 0xa8
   38c80:	adc.w	r2, r7, r6
   38c84:	str	r2, [sp, #172]	; 0xac
   38c86:	ldr	r2, [sp, #168]	; 0xa8
   38c88:	eors	r4, r2
   38c8a:	ldr	r2, [sp, #172]	; 0xac
   38c8c:	eor.w	r2, r2, r9
   38c90:	lsrs	r5, r4, #16
   38c92:	orr.w	r5, r5, r2, lsl #16
   38c96:	mov.w	r9, r2, lsr #16
   38c9a:	orr.w	r9, r9, r4, lsl #16
   38c9e:	adds	r3, r3, r5
   38ca0:	str	r3, [sp, #184]	; 0xb8
   38ca2:	adc.w	r3, r0, r9
   38ca6:	str	r3, [sp, #188]	; 0xbc
   38ca8:	ldr	r3, [sp, #184]	; 0xb8
   38caa:	ldr	r2, [sp, #160]	; 0xa0
   38cac:	eors	r1, r3
   38cae:	ldr	r3, [sp, #188]	; 0xbc
   38cb0:	ldr	r0, [sp, #200]	; 0xc8
   38cb2:	eors	r6, r3
   38cb4:	str	r5, [sp, #228]	; 0xe4
   38cb6:	lsls	r3, r6, #1
   38cb8:	orr.w	r3, r3, r1, lsr #31
   38cbc:	lsls	r1, r1, #1
   38cbe:	str	r3, [sp, #252]	; 0xfc
   38cc0:	orr.w	r3, r1, r6, lsr #31
   38cc4:	str	r3, [sp, #232]	; 0xe8
   38cc6:	ldr	r3, [sp, #92]	; 0x5c
   38cc8:	ldr	r1, [sp, #164]	; 0xa4
   38cca:	adds	r3, r3, r2
   38ccc:	ldr	r2, [sp, #96]	; 0x60
   38cce:	adc.w	ip, r2, r1
   38cd2:	ldr	r2, [sp, #212]	; 0xd4
   38cd4:	adds.w	r3, r3, fp
   38cd8:	adc.w	ip, ip, r2
   38cdc:	ldr	r2, [sp, #220]	; 0xdc
   38cde:	eor.w	r7, ip, r2
   38ce2:	ldr	r2, [sp, #208]	; 0xd0
   38ce4:	eor.w	r1, r3, r2
   38ce8:	ldr	r2, [sp, #196]	; 0xc4
   38cea:	adds	r2, r2, r7
   38cec:	adc.w	r5, r0, r1
   38cf0:	ldr	r0, [sp, #212]	; 0xd4
   38cf2:	eor.w	fp, r2, fp
   38cf6:	eors	r0, r5
   38cf8:	mov.w	r4, fp, lsr #24
   38cfc:	orr.w	r8, r4, r0, lsl #8
   38d00:	lsrs	r0, r0, #24
   38d02:	orr.w	r6, r0, fp, lsl #8
   38d06:	ldr	r0, [sp, #60]	; 0x3c
   38d08:	adds	r3, r0, r3
   38d0a:	ldr	r0, [sp, #64]	; 0x40
   38d0c:	adc.w	ip, r0, ip
   38d10:	adds.w	r3, r3, r8
   38d14:	str	r3, [sp, #160]	; 0xa0
   38d16:	adc.w	r3, ip, r6
   38d1a:	str	r3, [sp, #164]	; 0xa4
   38d1c:	ldr	r3, [sp, #160]	; 0xa0
   38d1e:	ldr	r0, [sp, #148]	; 0x94
   38d20:	eors	r7, r3
   38d22:	ldr	r3, [sp, #164]	; 0xa4
   38d24:	ldr	r4, [sp, #256]	; 0x100
   38d26:	eors	r1, r3
   38d28:	lsrs	r3, r7, #16
   38d2a:	orr.w	r3, r3, r1, lsl #16
   38d2e:	lsrs	r1, r1, #16
   38d30:	str	r3, [sp, #200]	; 0xc8
   38d32:	orr.w	r3, r1, r7, lsl #16
   38d36:	str	r3, [sp, #208]	; 0xd0
   38d38:	ldr	r3, [sp, #200]	; 0xc8
   38d3a:	ldr	r1, [sp, #144]	; 0x90
   38d3c:	adds	r2, r2, r3
   38d3e:	ldr	r3, [sp, #208]	; 0xd0
   38d40:	eor.w	r8, r2, r8
   38d44:	adc.w	r5, r3, r5
   38d48:	eors	r6, r5
   38d4a:	lsls	r3, r6, #1
   38d4c:	orr.w	r3, r3, r8, lsr #31
   38d50:	mov.w	r8, r8, lsl #1
   38d54:	str	r3, [sp, #220]	; 0xdc
   38d56:	orr.w	r3, r8, r6, lsr #31
   38d5a:	str	r3, [sp, #212]	; 0xd4
   38d5c:	ldr	r3, [sp, #44]	; 0x2c
   38d5e:	adds	r1, r3, r1
   38d60:	ldr	r3, [sp, #48]	; 0x30
   38d62:	adc.w	sl, r3, r0
   38d66:	ldr	r3, [sp, #256]	; 0x100
   38d68:	ldr	r0, [sp, #204]	; 0xcc
   38d6a:	adds	r1, r1, r3
   38d6c:	ldr	r3, [sp, #260]	; 0x104
   38d6e:	adc.w	sl, sl, r3
   38d72:	ldr	r3, [sp, #240]	; 0xf0
   38d74:	eor.w	ip, sl, r3
   38d78:	ldr	r3, [sp, #236]	; 0xec
   38d7a:	eor.w	r6, r1, r3
   38d7e:	ldr	r3, [sp, #192]	; 0xc0
   38d80:	adds.w	r3, r3, ip
   38d84:	eor.w	lr, r3, r4
   38d88:	ldr	r4, [sp, #260]	; 0x104
   38d8a:	adcs	r0, r6
   38d8c:	eor.w	r7, r0, r4
   38d90:	mov.w	fp, lr, lsr #24
   38d94:	orr.w	r4, fp, r7, lsl #8
   38d98:	lsrs	r7, r7, #24
   38d9a:	orr.w	r8, r7, lr, lsl #8
   38d9e:	ldr	r7, [sp, #28]
   38da0:	adds	r1, r7, r1
   38da2:	ldr	r7, [sp, #32]
   38da4:	adc.w	sl, r7, sl
   38da8:	adds	r1, r1, r4
   38daa:	str	r1, [sp, #144]	; 0x90
   38dac:	adc.w	r1, sl, r8
   38db0:	str	r1, [sp, #148]	; 0x94
   38db2:	ldr	r1, [sp, #144]	; 0x90
   38db4:	ldr	r7, [sp, #156]	; 0x9c
   38db6:	eor.w	ip, r1, ip
   38dba:	ldr	r1, [sp, #148]	; 0x94
   38dbc:	eors	r6, r1
   38dbe:	mov.w	r1, ip, lsr #16
   38dc2:	orr.w	r1, r1, r6, lsl #16
   38dc6:	lsrs	r6, r6, #16
   38dc8:	orr.w	fp, r6, ip, lsl #16
   38dcc:	adds	r3, r3, r1
   38dce:	adc.w	r0, r0, fp
   38dd2:	eors	r4, r3
   38dd4:	eor.w	r8, r0, r8
   38dd8:	str	r1, [sp, #236]	; 0xec
   38dda:	mov.w	r1, r8, lsl #1
   38dde:	orr.w	r6, r1, r4, lsr #31
   38de2:	lsls	r4, r4, #1
   38de4:	orr.w	ip, r4, r8, lsr #31
   38de8:	ldr	r1, [sp, #92]	; 0x5c
   38dea:	ldr	r4, [sp, #152]	; 0x98
   38dec:	adds	r1, r1, r4
   38dee:	ldr	r4, [sp, #96]	; 0x60
   38df0:	adc.w	sl, r4, r7
   38df4:	adds.w	r1, r1, ip
   38df8:	adc.w	sl, sl, r6
   38dfc:	ldr	r4, [sp, #228]	; 0xe4
   38dfe:	eor.w	lr, sl, r9
   38e02:	adds.w	r2, r2, lr
   38e06:	eor.w	r7, r1, r4
   38e0a:	adc.w	r5, r7, r5
   38e0e:	eor.w	r4, r2, ip
   38e12:	eor.w	ip, r5, r6
   38e16:	mov.w	r9, r4, lsr #24
   38e1a:	orr.w	r6, r9, ip, lsl #8
   38e1e:	mov.w	ip, ip, lsr #24
   38e22:	orr.w	r8, ip, r4, lsl #8
   38e26:	ldr	r4, [sp, #68]	; 0x44
   38e28:	adds	r1, r4, r1
   38e2a:	ldr	r4, [sp, #72]	; 0x48
   38e2c:	adc.w	sl, r4, sl
   38e30:	adds	r1, r1, r6
   38e32:	str	r1, [sp, #152]	; 0x98
   38e34:	adc.w	r1, sl, r8
   38e38:	str	r1, [sp, #156]	; 0x9c
   38e3a:	ldr	r1, [sp, #152]	; 0x98
   38e3c:	ldr	r4, [sp, #172]	; 0xac
   38e3e:	eor.w	lr, r1, lr
   38e42:	ldr	r1, [sp, #156]	; 0x9c
   38e44:	eors	r7, r1
   38e46:	mov.w	r1, lr, lsr #16
   38e4a:	orr.w	r1, r1, r7, lsl #16
   38e4e:	lsrs	r7, r7, #16
   38e50:	str	r1, [sp, #228]	; 0xe4
   38e52:	orr.w	r1, r7, lr, lsl #16
   38e56:	str	r1, [sp, #240]	; 0xf0
   38e58:	ldr	r1, [sp, #228]	; 0xe4
   38e5a:	adds	r2, r2, r1
   38e5c:	str	r2, [sp, #192]	; 0xc0
   38e5e:	ldr	r2, [sp, #240]	; 0xf0
   38e60:	ldr	r1, [sp, #168]	; 0xa8
   38e62:	adc.w	r2, r5, r2
   38e66:	str	r2, [sp, #196]	; 0xc4
   38e68:	ldr	r2, [sp, #192]	; 0xc0
   38e6a:	ldr	r5, [sp, #248]	; 0xf8
   38e6c:	eors	r6, r2
   38e6e:	ldr	r2, [sp, #196]	; 0xc4
   38e70:	eor.w	r8, r2, r8
   38e74:	mov.w	r2, r8, lsl #1
   38e78:	orr.w	r2, r2, r6, lsr #31
   38e7c:	lsls	r6, r6, #1
   38e7e:	str	r2, [sp, #260]	; 0x104
   38e80:	orr.w	r2, r6, r8, lsr #31
   38e84:	str	r2, [sp, #256]	; 0x100
   38e86:	ldr	r2, [sp, #100]	; 0x64
   38e88:	adds	r2, r2, r1
   38e8a:	ldr	r1, [sp, #104]	; 0x68
   38e8c:	adc.w	r7, r1, r4
   38e90:	ldr	r1, [sp, #244]	; 0xf4
   38e92:	ldr	r4, [sp, #244]	; 0xf4
   38e94:	adds	r2, r2, r1
   38e96:	ldr	r1, [sp, #248]	; 0xf8
   38e98:	adc.w	r7, r1, r7
   38e9c:	ldr	r1, [sp, #208]	; 0xd0
   38e9e:	eor.w	r6, r7, r1
   38ea2:	ldr	r1, [sp, #200]	; 0xc8
   38ea4:	adds	r3, r3, r6
   38ea6:	eor.w	r1, r2, r1
   38eaa:	eor.w	r4, r3, r4
   38eae:	adc.w	r0, r1, r0
   38eb2:	eors	r5, r0
   38eb4:	mov.w	r8, r4, lsr #24
   38eb8:	orr.w	ip, r8, r5, lsl #8
   38ebc:	lsrs	r5, r5, #24
   38ebe:	orr.w	lr, r5, r4, lsl #8
   38ec2:	ldr	r4, [sp, #4]
   38ec4:	adds	r2, r4, r2
   38ec6:	ldr	r4, [sp, #8]
   38ec8:	adc.w	r7, r4, r7
   38ecc:	adds.w	r2, r2, ip
   38ed0:	str	r2, [sp, #168]	; 0xa8
   38ed2:	adc.w	r2, r7, lr
   38ed6:	str	r2, [sp, #172]	; 0xac
   38ed8:	ldr	r2, [sp, #168]	; 0xa8
   38eda:	eors	r6, r2
   38edc:	ldr	r2, [sp, #172]	; 0xac
   38ede:	eors	r1, r2
   38ee0:	lsrs	r2, r6, #16
   38ee2:	orr.w	r2, r2, r1, lsl #16
   38ee6:	lsrs	r1, r1, #16
   38ee8:	str	r2, [sp, #208]	; 0xd0
   38eea:	orr.w	r2, r1, r6, lsl #16
   38eee:	str	r2, [sp, #244]	; 0xf4
   38ef0:	ldr	r2, [sp, #208]	; 0xd0
   38ef2:	ldr	r1, [sp, #164]	; 0xa4
   38ef4:	adds	r3, r3, r2
   38ef6:	str	r3, [sp, #200]	; 0xc8
   38ef8:	ldr	r3, [sp, #244]	; 0xf4
   38efa:	adc.w	r3, r0, r3
   38efe:	str	r3, [sp, #204]	; 0xcc
   38f00:	ldr	r2, [sp, #204]	; 0xcc
   38f02:	ldr	r3, [sp, #200]	; 0xc8
   38f04:	eor.w	lr, r2, lr
   38f08:	eor.w	r3, r3, ip
   38f0c:	mov.w	r2, lr, lsl #1
   38f10:	orr.w	r2, r2, r3, lsr #31
   38f14:	mov.w	ip, r3, lsl #1
   38f18:	str	r2, [sp, #248]	; 0xf8
   38f1a:	orr.w	ip, ip, lr, lsr #31
   38f1e:	ldr	r2, [sp, #160]	; 0xa0
   38f20:	ldr	r3, [sp, #44]	; 0x2c
   38f22:	adds	r3, r3, r2
   38f24:	ldr	r2, [sp, #48]	; 0x30
   38f26:	adc.w	lr, r2, r1
   38f2a:	ldr	r2, [sp, #232]	; 0xe8
   38f2c:	ldr	r1, [sp, #180]	; 0xb4
   38f2e:	adds	r3, r3, r2
   38f30:	ldr	r2, [sp, #252]	; 0xfc
   38f32:	adc.w	lr, lr, r2
   38f36:	ldr	r2, [sp, #236]	; 0xec
   38f38:	eor.w	r6, lr, fp
   38f3c:	eor.w	r0, r3, r2
   38f40:	ldr	r2, [sp, #176]	; 0xb0
   38f42:	adds	r2, r2, r6
   38f44:	adc.w	r5, r1, r0
   38f48:	ldr	r1, [sp, #232]	; 0xe8
   38f4a:	eor.w	r8, r2, r1
   38f4e:	ldr	r1, [sp, #252]	; 0xfc
   38f50:	eor.w	r4, r5, r1
   38f54:	mov.w	r9, r8, lsr #24
   38f58:	orr.w	r1, r9, r4, lsl #8
   38f5c:	lsrs	r4, r4, #24
   38f5e:	orr.w	r7, r4, r8, lsl #8
   38f62:	ldr	r4, [sp, #20]
   38f64:	adds	r3, r4, r3
   38f66:	ldr	r4, [sp, #24]
   38f68:	adc.w	lr, r4, lr
   38f6c:	adds	r3, r3, r1
   38f6e:	str	r3, [sp, #160]	; 0xa0
   38f70:	adc.w	r3, lr, r7
   38f74:	str	r3, [sp, #164]	; 0xa4
   38f76:	ldr	r3, [sp, #160]	; 0xa0
   38f78:	eors	r6, r3
   38f7a:	ldr	r3, [sp, #164]	; 0xa4
   38f7c:	eors	r0, r3
   38f7e:	lsrs	r3, r6, #16
   38f80:	orr.w	r3, r3, r0, lsl #16
   38f84:	lsrs	r0, r0, #16
   38f86:	str	r3, [sp, #232]	; 0xe8
   38f88:	orr.w	r3, r0, r6, lsl #16
   38f8c:	str	r3, [sp, #236]	; 0xec
   38f8e:	ldr	r3, [sp, #232]	; 0xe8
   38f90:	adds	r2, r2, r3
   38f92:	ldr	r3, [sp, #236]	; 0xec
   38f94:	eor.w	r1, r1, r2
   38f98:	adc.w	r5, r3, r5
   38f9c:	eors	r7, r5
   38f9e:	lsls	r3, r7, #1
   38fa0:	orr.w	r3, r3, r1, lsr #31
   38fa4:	lsls	r1, r1, #1
   38fa6:	str	r3, [sp, #264]	; 0x108
   38fa8:	orr.w	r3, r1, r7, lsr #31
   38fac:	str	r3, [sp, #252]	; 0xfc
   38fae:	ldr	r3, [sp, #124]	; 0x7c
   38fb0:	ldr	r1, [sp, #144]	; 0x90
   38fb2:	ldr	r0, [sp, #148]	; 0x94
   38fb4:	adds	r1, r3, r1
   38fb6:	ldr	r3, [sp, #128]	; 0x80
   38fb8:	ldr	r4, [sp, #212]	; 0xd4
   38fba:	adc.w	sl, r3, r0
   38fbe:	ldr	r3, [sp, #212]	; 0xd4
   38fc0:	ldr	r0, [sp, #188]	; 0xbc
   38fc2:	adds	r1, r1, r3
   38fc4:	ldr	r3, [sp, #220]	; 0xdc
   38fc6:	adc.w	sl, sl, r3
   38fca:	ldr	r3, [sp, #224]	; 0xe0
   38fcc:	eor.w	lr, sl, r3
   38fd0:	ldr	r3, [sp, #216]	; 0xd8
   38fd2:	eor.w	r6, r1, r3
   38fd6:	ldr	r3, [sp, #184]	; 0xb8
   38fd8:	adds.w	r3, r3, lr
   38fdc:	eor.w	r8, r3, r4
   38fe0:	ldr	r4, [sp, #220]	; 0xdc
   38fe2:	adcs	r0, r6
   38fe4:	eor.w	r7, r0, r4
   38fe8:	mov.w	fp, r8, lsr #24
   38fec:	orr.w	r4, fp, r7, lsl #8
   38ff0:	lsrs	r7, r7, #24
   38ff2:	orr.w	r9, r7, r8, lsl #8
   38ff6:	ldr	r7, [sp, #108]	; 0x6c
   38ff8:	adds	r1, r7, r1
   38ffa:	ldr	r7, [sp, #112]	; 0x70
   38ffc:	adc.w	sl, r7, sl
   39000:	adds	r1, r1, r4
   39002:	str	r1, [sp, #144]	; 0x90
   39004:	adc.w	r1, sl, r9
   39008:	str	r1, [sp, #148]	; 0x94
   3900a:	ldr	r1, [sp, #144]	; 0x90
   3900c:	eor.w	lr, r1, lr
   39010:	ldr	r1, [sp, #148]	; 0x94
   39012:	eors	r6, r1
   39014:	mov.w	r1, lr, lsr #16
   39018:	orr.w	r8, r1, r6, lsl #16
   3901c:	lsrs	r6, r6, #16
   3901e:	adds.w	r3, r3, r8
   39022:	orr.w	sl, r6, lr, lsl #16
   39026:	adc.w	r0, r0, sl
   3902a:	eors	r4, r3
   3902c:	eor.w	r9, r0, r9
   39030:	ldr	r6, [sp, #156]	; 0x9c
   39032:	mov.w	r1, r9, lsl #1
   39036:	orr.w	r1, r1, r4, lsr #31
   3903a:	lsls	r4, r4, #1
   3903c:	orr.w	fp, r4, r9, lsr #31
   39040:	str	r1, [sp, #212]	; 0xd4
   39042:	ldr	r4, [sp, #152]	; 0x98
   39044:	ldr	r1, [sp, #84]	; 0x54
   39046:	adds	r1, r1, r4
   39048:	ldr	r4, [sp, #88]	; 0x58
   3904a:	adc.w	r9, r4, r6
   3904e:	ldr	r4, [sp, #248]	; 0xf8
   39050:	adds.w	r1, r1, ip
   39054:	adc.w	r9, r9, r4
   39058:	eor.w	r7, r1, r8
   3905c:	eor.w	lr, r9, sl
   39060:	adds.w	r2, r2, lr
   39064:	adc.w	r5, r7, r5
   39068:	eor.w	ip, r2, ip
   3906c:	eor.w	r6, r5, r4
   39070:	mov.w	sl, ip, lsr #24
   39074:	orr.w	r4, sl, r6, lsl #8
   39078:	lsrs	r6, r6, #24
   3907a:	orr.w	r8, r6, ip, lsl #8
   3907e:	ldr	r6, [sp, #116]	; 0x74
   39080:	adds	r1, r6, r1
   39082:	ldr	r6, [sp, #120]	; 0x78
   39084:	adc.w	r9, r6, r9
   39088:	adds	r1, r1, r4
   3908a:	str	r1, [sp, #152]	; 0x98
   3908c:	adc.w	r1, r9, r8
   39090:	str	r1, [sp, #156]	; 0x9c
   39092:	ldr	r1, [sp, #152]	; 0x98
   39094:	eor.w	lr, r1, lr
   39098:	ldr	r1, [sp, #156]	; 0x9c
   3909a:	eors	r7, r1
   3909c:	mov.w	r1, lr, lsr #16
   390a0:	orr.w	r1, r1, r7, lsl #16
   390a4:	lsrs	r7, r7, #16
   390a6:	str	r1, [sp, #216]	; 0xd8
   390a8:	orr.w	r1, r7, lr, lsl #16
   390ac:	str	r1, [sp, #220]	; 0xdc
   390ae:	ldr	r1, [sp, #216]	; 0xd8
   390b0:	adds	r2, r2, r1
   390b2:	str	r2, [sp, #176]	; 0xb0
   390b4:	ldr	r2, [sp, #220]	; 0xdc
   390b6:	ldr	r1, [sp, #168]	; 0xa8
   390b8:	adc.w	r2, r5, r2
   390bc:	str	r2, [sp, #180]	; 0xb4
   390be:	ldr	r2, [sp, #176]	; 0xb0
   390c0:	eors	r4, r2
   390c2:	ldr	r2, [sp, #180]	; 0xb4
   390c4:	eor.w	r8, r2, r8
   390c8:	mov.w	r2, r8, lsl #1
   390cc:	orr.w	r2, r2, r4, lsr #31
   390d0:	lsls	r4, r4, #1
   390d2:	str	r2, [sp, #248]	; 0xf8
   390d4:	orr.w	r2, r4, r8, lsr #31
   390d8:	str	r2, [sp, #224]	; 0xe0
   390da:	ldr	r2, [sp, #28]
   390dc:	ldr	r4, [sp, #172]	; 0xac
   390de:	adds	r2, r2, r1
   390e0:	ldr	r1, [sp, #32]
   390e2:	adc.w	r7, r1, r4
   390e6:	ldr	r1, [sp, #252]	; 0xfc
   390e8:	adds	r2, r2, r1
   390ea:	ldr	r1, [sp, #264]	; 0x108
   390ec:	adc.w	r7, r1, r7
   390f0:	ldr	r1, [sp, #240]	; 0xf0
   390f2:	eor.w	r4, r7, r1
   390f6:	ldr	r1, [sp, #228]	; 0xe4
   390f8:	adds	r3, r3, r4
   390fa:	eor.w	r9, r2, r1
   390fe:	ldr	r1, [sp, #252]	; 0xfc
   39100:	adc.w	r0, r0, r9
   39104:	eor.w	ip, r3, r1
   39108:	ldr	r1, [sp, #264]	; 0x108
   3910a:	eor.w	r5, r0, r1
   3910e:	mov.w	lr, ip, lsr #24
   39112:	orr.w	r1, lr, r5, lsl #8
   39116:	lsrs	r5, r5, #24
   39118:	orr.w	r6, r5, ip, lsl #8
   3911c:	ldr	r5, [sp, #52]	; 0x34
   3911e:	adds	r2, r5, r2
   39120:	ldr	r5, [sp, #56]	; 0x38
   39122:	adc.w	r7, r5, r7
   39126:	adds	r2, r2, r1
   39128:	str	r2, [sp, #168]	; 0xa8
   3912a:	adc.w	r2, r7, r6
   3912e:	str	r2, [sp, #172]	; 0xac
   39130:	ldr	r2, [sp, #168]	; 0xa8
   39132:	eors	r4, r2
   39134:	ldr	r2, [sp, #172]	; 0xac
   39136:	eor.w	r2, r2, r9
   3913a:	lsrs	r5, r4, #16
   3913c:	orr.w	r5, r5, r2, lsl #16
   39140:	mov.w	r9, r2, lsr #16
   39144:	orr.w	r9, r9, r4, lsl #16
   39148:	adds	r3, r3, r5
   3914a:	str	r3, [sp, #184]	; 0xb8
   3914c:	adc.w	r3, r0, r9
   39150:	str	r3, [sp, #188]	; 0xbc
   39152:	ldr	r3, [sp, #184]	; 0xb8
   39154:	ldr	r2, [sp, #160]	; 0xa0
   39156:	eors	r1, r3
   39158:	ldr	r3, [sp, #188]	; 0xbc
   3915a:	str	r5, [sp, #228]	; 0xe4
   3915c:	eors	r6, r3
   3915e:	lsls	r3, r6, #1
   39160:	orr.w	r3, r3, r1, lsr #31
   39164:	lsls	r1, r1, #1
   39166:	str	r3, [sp, #252]	; 0xfc
   39168:	orr.w	r3, r1, r6, lsr #31
   3916c:	str	r3, [sp, #240]	; 0xf0
   3916e:	ldr	r3, [sp, #60]	; 0x3c
   39170:	adds	r3, r3, r2
   39172:	ldr	r2, [sp, #64]	; 0x40
   39174:	ldr	r1, [sp, #164]	; 0xa4
   39176:	ldr	r0, [sp, #196]	; 0xc4
   39178:	adc.w	ip, r2, r1
   3917c:	ldr	r2, [sp, #212]	; 0xd4
   3917e:	adds.w	r3, r3, fp
   39182:	adc.w	ip, ip, r2
   39186:	ldr	r2, [sp, #244]	; 0xf4
   39188:	eor.w	r7, ip, r2
   3918c:	ldr	r2, [sp, #208]	; 0xd0
   3918e:	eor.w	r1, r3, r2
   39192:	ldr	r2, [sp, #192]	; 0xc0
   39194:	adds	r2, r2, r7
   39196:	adc.w	r5, r0, r1
   3919a:	ldr	r0, [sp, #212]	; 0xd4
   3919c:	eor.w	fp, r2, fp
   391a0:	eors	r0, r5
   391a2:	mov.w	r4, fp, lsr #24
   391a6:	orr.w	r8, r4, r0, lsl #8
   391aa:	lsrs	r0, r0, #24
   391ac:	orr.w	r6, r0, fp, lsl #8
   391b0:	ldr	r0, [sp, #12]
   391b2:	ldr	r4, [sp, #256]	; 0x100
   391b4:	adds	r3, r0, r3
   391b6:	ldr	r0, [sp, #16]
   391b8:	adc.w	ip, r0, ip
   391bc:	adds.w	r3, r3, r8
   391c0:	str	r3, [sp, #160]	; 0xa0
   391c2:	adc.w	r3, ip, r6
   391c6:	str	r3, [sp, #164]	; 0xa4
   391c8:	ldr	r3, [sp, #160]	; 0xa0
   391ca:	ldr	r0, [sp, #148]	; 0x94
   391cc:	eors	r7, r3
   391ce:	ldr	r3, [sp, #164]	; 0xa4
   391d0:	eors	r1, r3
   391d2:	lsrs	r3, r7, #16
   391d4:	orr.w	r3, r3, r1, lsl #16
   391d8:	lsrs	r1, r1, #16
   391da:	str	r3, [sp, #208]	; 0xd0
   391dc:	orr.w	r3, r1, r7, lsl #16
   391e0:	str	r3, [sp, #212]	; 0xd4
   391e2:	ldr	r3, [sp, #208]	; 0xd0
   391e4:	ldr	r1, [sp, #144]	; 0x90
   391e6:	adds	r2, r2, r3
   391e8:	ldr	r3, [sp, #212]	; 0xd4
   391ea:	eor.w	r8, r2, r8
   391ee:	adc.w	r5, r3, r5
   391f2:	eors	r6, r5
   391f4:	lsls	r3, r6, #1
   391f6:	orr.w	r3, r3, r8, lsr #31
   391fa:	mov.w	r8, r8, lsl #1
   391fe:	str	r3, [sp, #264]	; 0x108
   39200:	orr.w	r3, r8, r6, lsr #31
   39204:	str	r3, [sp, #244]	; 0xf4
   39206:	ldr	r3, [sp, #76]	; 0x4c
   39208:	adds	r1, r3, r1
   3920a:	ldr	r3, [sp, #80]	; 0x50
   3920c:	adc.w	sl, r3, r0
   39210:	ldr	r3, [sp, #256]	; 0x100
   39212:	ldr	r0, [sp, #204]	; 0xcc
   39214:	adds	r1, r1, r3
   39216:	ldr	r3, [sp, #260]	; 0x104
   39218:	adc.w	sl, sl, r3
   3921c:	ldr	r3, [sp, #236]	; 0xec
   3921e:	eor.w	lr, sl, r3
   39222:	ldr	r3, [sp, #232]	; 0xe8
   39224:	eor.w	r7, r1, r3
   39228:	ldr	r3, [sp, #200]	; 0xc8
   3922a:	adds.w	r3, r3, lr
   3922e:	eor.w	r6, r3, r4
   39232:	ldr	r4, [sp, #260]	; 0x104
   39234:	adcs	r0, r7
   39236:	eor.w	ip, r0, r4
   3923a:	mov.w	fp, r6, lsr #24
   3923e:	orr.w	r4, fp, ip, lsl #8
   39242:	mov.w	ip, ip, lsr #24
   39246:	orr.w	r8, ip, r6, lsl #8
   3924a:	ldr	r6, [sp, #36]	; 0x24
   3924c:	adds	r1, r6, r1
   3924e:	ldr	r6, [sp, #40]	; 0x28
   39250:	adc.w	sl, r6, sl
   39254:	adds	r1, r1, r4
   39256:	str	r1, [sp, #144]	; 0x90
   39258:	adc.w	r1, sl, r8
   3925c:	str	r1, [sp, #148]	; 0x94
   3925e:	ldr	r1, [sp, #144]	; 0x90
   39260:	eor.w	lr, r1, lr
   39264:	ldr	r1, [sp, #148]	; 0x94
   39266:	eors	r7, r1
   39268:	mov.w	r1, lr, lsr #16
   3926c:	orr.w	r1, r1, r7, lsl #16
   39270:	lsrs	r7, r7, #16
   39272:	str	r1, [sp, #232]	; 0xe8
   39274:	orr.w	r1, r7, lr, lsl #16
   39278:	str	r1, [sp, #236]	; 0xec
   3927a:	ldr	r1, [sp, #232]	; 0xe8
   3927c:	ldr	r7, [sp, #156]	; 0x9c
   3927e:	adds	r3, r3, r1
   39280:	ldr	r1, [sp, #236]	; 0xec
   39282:	eor.w	r4, r4, r3
   39286:	adc.w	r0, r1, r0
   3928a:	eor.w	r8, r0, r8
   3928e:	mov.w	r1, r8, lsl #1
   39292:	orr.w	r6, r1, r4, lsr #31
   39296:	lsls	r4, r4, #1
   39298:	orr.w	fp, r4, r8, lsr #31
   3929c:	ldr	r1, [sp, #60]	; 0x3c
   3929e:	ldr	r4, [sp, #152]	; 0x98
   392a0:	adds	r1, r1, r4
   392a2:	ldr	r4, [sp, #64]	; 0x40
   392a4:	adc.w	sl, r4, r7
   392a8:	adds.w	r1, r1, fp
   392ac:	ldr	r4, [sp, #228]	; 0xe4
   392ae:	adc.w	sl, sl, r6
   392b2:	eor.w	lr, sl, r9
   392b6:	adds.w	r2, r2, lr
   392ba:	eor.w	r7, r1, r4
   392be:	adc.w	r5, r7, r5
   392c2:	eor.w	fp, r2, fp
   392c6:	eor.w	ip, r5, r6
   392ca:	mov.w	r4, fp, lsr #24
   392ce:	orr.w	r6, r4, ip, lsl #8
   392d2:	ldr	r4, [sp, #76]	; 0x4c
   392d4:	mov.w	ip, ip, lsr #24
   392d8:	adds	r1, r4, r1
   392da:	ldr	r4, [sp, #80]	; 0x50
   392dc:	orr.w	r8, ip, fp, lsl #8
   392e0:	adc.w	sl, r4, sl
   392e4:	adds	r1, r1, r6
   392e6:	str	r1, [sp, #152]	; 0x98
   392e8:	adc.w	r1, sl, r8
   392ec:	str	r1, [sp, #156]	; 0x9c
   392ee:	ldr	r1, [sp, #152]	; 0x98
   392f0:	eor.w	lr, r1, lr
   392f4:	ldr	r1, [sp, #156]	; 0x9c
   392f6:	eors	r7, r1
   392f8:	mov.w	r1, lr, lsr #16
   392fc:	orr.w	r1, r1, r7, lsl #16
   39300:	lsrs	r7, r7, #16
   39302:	str	r1, [sp, #228]	; 0xe4
   39304:	orr.w	r1, r7, lr, lsl #16
   39308:	str	r1, [sp, #256]	; 0x100
   3930a:	ldr	r1, [sp, #228]	; 0xe4
   3930c:	adds	r2, r2, r1
   3930e:	str	r2, [sp, #192]	; 0xc0
   39310:	ldr	r2, [sp, #256]	; 0x100
   39312:	ldr	r1, [sp, #168]	; 0xa8
   39314:	adc.w	r2, r5, r2
   39318:	str	r2, [sp, #196]	; 0xc4
   3931a:	ldr	r2, [sp, #192]	; 0xc0
   3931c:	eors	r6, r2
   3931e:	ldr	r2, [sp, #196]	; 0xc4
   39320:	eor.w	r8, r2, r8
   39324:	mov.w	r2, r8, lsl #1
   39328:	orr.w	r2, r2, r6, lsr #31
   3932c:	lsls	r6, r6, #1
   3932e:	str	r2, [sp, #268]	; 0x10c
   39330:	orr.w	r2, r6, r8, lsr #31
   39334:	str	r2, [sp, #260]	; 0x104
   39336:	ldr	r2, [sp, #28]
   39338:	adds	r2, r2, r1
   3933a:	ldr	r1, [sp, #32]
   3933c:	ldr	r4, [sp, #172]	; 0xac
   3933e:	ldr	r5, [sp, #248]	; 0xf8
   39340:	adc.w	r7, r1, r4
   39344:	ldr	r1, [sp, #224]	; 0xe0
   39346:	ldr	r4, [sp, #224]	; 0xe0
   39348:	adds	r2, r2, r1
   3934a:	ldr	r1, [sp, #248]	; 0xf8
   3934c:	adc.w	r7, r1, r7
   39350:	ldr	r1, [sp, #212]	; 0xd4
   39352:	eor.w	r6, r7, r1
   39356:	ldr	r1, [sp, #208]	; 0xd0
   39358:	adds	r3, r3, r6
   3935a:	eor.w	r1, r2, r1
   3935e:	eor.w	r4, r3, r4
   39362:	adc.w	r0, r1, r0
   39366:	eors	r5, r0
   39368:	mov.w	r8, r4, lsr #24
   3936c:	orr.w	ip, r8, r5, lsl #8
   39370:	lsrs	r5, r5, #24
   39372:	orr.w	lr, r5, r4, lsl #8
   39376:	ldr	r4, [sp, #12]
   39378:	adds	r2, r4, r2
   3937a:	ldr	r4, [sp, #16]
   3937c:	adc.w	r7, r4, r7
   39380:	adds.w	r2, r2, ip
   39384:	str	r2, [sp, #168]	; 0xa8
   39386:	adc.w	r2, r7, lr
   3938a:	str	r2, [sp, #172]	; 0xac
   3938c:	ldr	r2, [sp, #168]	; 0xa8
   3938e:	eors	r6, r2
   39390:	ldr	r2, [sp, #172]	; 0xac
   39392:	eors	r1, r2
   39394:	lsrs	r2, r6, #16
   39396:	orr.w	r2, r2, r1, lsl #16
   3939a:	lsrs	r1, r1, #16
   3939c:	str	r2, [sp, #208]	; 0xd0
   3939e:	orr.w	r2, r1, r6, lsl #16
   393a2:	str	r2, [sp, #212]	; 0xd4
   393a4:	ldr	r2, [sp, #208]	; 0xd0
   393a6:	ldr	r1, [sp, #164]	; 0xa4
   393a8:	adds	r3, r3, r2
   393aa:	str	r3, [sp, #200]	; 0xc8
   393ac:	ldr	r3, [sp, #212]	; 0xd4
   393ae:	adc.w	r3, r0, r3
   393b2:	str	r3, [sp, #204]	; 0xcc
   393b4:	ldr	r2, [sp, #204]	; 0xcc
   393b6:	ldr	r3, [sp, #200]	; 0xc8
   393b8:	eor.w	lr, r2, lr
   393bc:	eor.w	r3, r3, ip
   393c0:	mov.w	r2, lr, lsl #1
   393c4:	orr.w	r2, r2, r3, lsr #31
   393c8:	mov.w	ip, r3, lsl #1
   393cc:	str	r2, [sp, #224]	; 0xe0
   393ce:	orr.w	ip, ip, lr, lsr #31
   393d2:	ldr	r2, [sp, #160]	; 0xa0
   393d4:	ldr	r3, [sp, #108]	; 0x6c
   393d6:	adds	r3, r3, r2
   393d8:	ldr	r2, [sp, #112]	; 0x70
   393da:	adc.w	lr, r2, r1
   393de:	ldr	r2, [sp, #240]	; 0xf0
   393e0:	adds	r3, r3, r2
   393e2:	ldr	r2, [sp, #252]	; 0xfc
   393e4:	adc.w	lr, lr, r2
   393e8:	ldr	r2, [sp, #236]	; 0xec
   393ea:	eor.w	r6, lr, r2
   393ee:	ldr	r2, [sp, #232]	; 0xe8
   393f0:	eor.w	r0, r3, r2
   393f4:	ldr	r2, [sp, #176]	; 0xb0
   393f6:	ldr	r1, [sp, #180]	; 0xb4
   393f8:	adds	r2, r2, r6
   393fa:	adc.w	r5, r1, r0
   393fe:	ldr	r1, [sp, #240]	; 0xf0
   39400:	eor.w	r8, r2, r1
   39404:	ldr	r1, [sp, #252]	; 0xfc
   39406:	eor.w	r4, r5, r1
   3940a:	mov.w	r9, r8, lsr #24
   3940e:	orr.w	r1, r9, r4, lsl #8
   39412:	lsrs	r4, r4, #24
   39414:	orr.w	r7, r4, r8, lsl #8
   39418:	ldr	r4, [sp, #100]	; 0x64
   3941a:	adds	r3, r4, r3
   3941c:	ldr	r4, [sp, #104]	; 0x68
   3941e:	adc.w	lr, r4, lr
   39422:	adds	r3, r3, r1
   39424:	str	r3, [sp, #160]	; 0xa0
   39426:	adc.w	r3, lr, r7
   3942a:	str	r3, [sp, #164]	; 0xa4
   3942c:	ldr	r3, [sp, #160]	; 0xa0
   3942e:	ldr	r4, [sp, #244]	; 0xf4
   39430:	eors	r6, r3
   39432:	ldr	r3, [sp, #164]	; 0xa4
   39434:	eors	r0, r3
   39436:	lsrs	r3, r6, #16
   39438:	orr.w	r3, r3, r0, lsl #16
   3943c:	lsrs	r0, r0, #16
   3943e:	str	r3, [sp, #232]	; 0xe8
   39440:	orr.w	r3, r0, r6, lsl #16
   39444:	str	r3, [sp, #236]	; 0xec
   39446:	ldr	r3, [sp, #232]	; 0xe8
   39448:	ldr	r0, [sp, #148]	; 0x94
   3944a:	adds	r2, r2, r3
   3944c:	ldr	r3, [sp, #236]	; 0xec
   3944e:	eor.w	r1, r1, r2
   39452:	adc.w	r5, r3, r5
   39456:	eors	r7, r5
   39458:	lsls	r3, r7, #1
   3945a:	orr.w	r3, r3, r1, lsr #31
   3945e:	lsls	r1, r1, #1
   39460:	str	r3, [sp, #248]	; 0xf8
   39462:	orr.w	r3, r1, r7, lsr #31
   39466:	ldr	r1, [sp, #144]	; 0x90
   39468:	str	r3, [sp, #240]	; 0xf0
   3946a:	ldr	r3, [sp, #92]	; 0x5c
   3946c:	adds	r1, r3, r1
   3946e:	ldr	r3, [sp, #96]	; 0x60
   39470:	adc.w	sl, r3, r0
   39474:	ldr	r3, [sp, #244]	; 0xf4
   39476:	ldr	r0, [sp, #188]	; 0xbc
   39478:	adds	r1, r1, r3
   3947a:	ldr	r3, [sp, #264]	; 0x108
   3947c:	adc.w	sl, sl, r3
   39480:	ldr	r3, [sp, #220]	; 0xdc
   39482:	eor.w	lr, sl, r3
   39486:	ldr	r3, [sp, #216]	; 0xd8
   39488:	eor.w	r6, r1, r3
   3948c:	ldr	r3, [sp, #184]	; 0xb8
   3948e:	adds.w	r3, r3, lr
   39492:	eor.w	r8, r3, r4
   39496:	ldr	r4, [sp, #264]	; 0x108
   39498:	adcs	r0, r6
   3949a:	eor.w	r7, r0, r4
   3949e:	mov.w	fp, r8, lsr #24
   394a2:	orr.w	r4, fp, r7, lsl #8
   394a6:	lsrs	r7, r7, #24
   394a8:	orr.w	r9, r7, r8, lsl #8
   394ac:	ldr	r7, [sp, #116]	; 0x74
   394ae:	adds	r1, r7, r1
   394b0:	ldr	r7, [sp, #120]	; 0x78
   394b2:	adc.w	sl, r7, sl
   394b6:	adds	r1, r1, r4
   394b8:	str	r1, [sp, #144]	; 0x90
   394ba:	adc.w	r1, sl, r9
   394be:	str	r1, [sp, #148]	; 0x94
   394c0:	ldr	r1, [sp, #144]	; 0x90
   394c2:	eor.w	lr, r1, lr
   394c6:	ldr	r1, [sp, #148]	; 0x94
   394c8:	eors	r6, r1
   394ca:	mov.w	r1, lr, lsr #16
   394ce:	orr.w	r8, r1, r6, lsl #16
   394d2:	lsrs	r6, r6, #16
   394d4:	adds.w	r3, r3, r8
   394d8:	orr.w	sl, r6, lr, lsl #16
   394dc:	adc.w	r0, r0, sl
   394e0:	eors	r4, r3
   394e2:	eor.w	r9, r0, r9
   394e6:	ldr	r6, [sp, #156]	; 0x9c
   394e8:	mov.w	r1, r9, lsl #1
   394ec:	orr.w	r1, r1, r4, lsr #31
   394f0:	lsls	r4, r4, #1
   394f2:	orr.w	fp, r4, r9, lsr #31
   394f6:	str	r1, [sp, #216]	; 0xd8
   394f8:	ldr	r4, [sp, #152]	; 0x98
   394fa:	ldr	r1, [sp, #20]
   394fc:	adds	r1, r1, r4
   394fe:	ldr	r4, [sp, #24]
   39500:	adc.w	r9, r4, r6
   39504:	ldr	r4, [sp, #224]	; 0xe0
   39506:	adds.w	r1, r1, ip
   3950a:	adc.w	r9, r9, r4
   3950e:	eor.w	r7, r1, r8
   39512:	eor.w	lr, r9, sl
   39516:	adds.w	r2, r2, lr
   3951a:	adc.w	r5, r7, r5
   3951e:	eor.w	ip, r2, ip
   39522:	eor.w	r6, r5, r4
   39526:	mov.w	sl, ip, lsr #24
   3952a:	orr.w	r4, sl, r6, lsl #8
   3952e:	lsrs	r6, r6, #24
   39530:	orr.w	r8, r6, ip, lsl #8
   39534:	ldr	r6, [sp, #52]	; 0x34
   39536:	adds	r1, r6, r1
   39538:	ldr	r6, [sp, #56]	; 0x38
   3953a:	adc.w	r9, r6, r9
   3953e:	adds	r1, r1, r4
   39540:	str	r1, [sp, #152]	; 0x98
   39542:	adc.w	r1, r9, r8
   39546:	str	r1, [sp, #156]	; 0x9c
   39548:	ldr	r1, [sp, #152]	; 0x98
   3954a:	eor.w	lr, r1, lr
   3954e:	ldr	r1, [sp, #156]	; 0x9c
   39550:	eors	r7, r1
   39552:	mov.w	r1, lr, lsr #16
   39556:	orr.w	r1, r1, r7, lsl #16
   3955a:	lsrs	r7, r7, #16
   3955c:	str	r1, [sp, #220]	; 0xdc
   3955e:	orr.w	r1, r7, lr, lsl #16
   39562:	str	r1, [sp, #224]	; 0xe0
   39564:	ldr	r1, [sp, #220]	; 0xdc
   39566:	adds	r2, r2, r1
   39568:	str	r2, [sp, #176]	; 0xb0
   3956a:	ldr	r2, [sp, #224]	; 0xe0
   3956c:	ldr	r1, [sp, #168]	; 0xa8
   3956e:	adc.w	r2, r5, r2
   39572:	str	r2, [sp, #180]	; 0xb4
   39574:	ldr	r2, [sp, #176]	; 0xb0
   39576:	eors	r4, r2
   39578:	ldr	r2, [sp, #180]	; 0xb4
   3957a:	eor.w	r8, r2, r8
   3957e:	mov.w	r2, r8, lsl #1
   39582:	orr.w	r2, r2, r4, lsr #31
   39586:	lsls	r4, r4, #1
   39588:	str	r2, [sp, #252]	; 0xfc
   3958a:	orr.w	r2, r4, r8, lsr #31
   3958e:	str	r2, [sp, #244]	; 0xf4
   39590:	ldr	r2, [sp, #44]	; 0x2c
   39592:	ldr	r4, [sp, #172]	; 0xac
   39594:	adds	r2, r2, r1
   39596:	ldr	r1, [sp, #48]	; 0x30
   39598:	adc.w	r7, r1, r4
   3959c:	ldr	r1, [sp, #240]	; 0xf0
   3959e:	adds	r2, r2, r1
   395a0:	ldr	r1, [sp, #248]	; 0xf8
   395a2:	adc.w	r7, r1, r7
   395a6:	ldr	r1, [sp, #256]	; 0x100
   395a8:	eor.w	r4, r7, r1
   395ac:	ldr	r1, [sp, #228]	; 0xe4
   395ae:	adds	r3, r3, r4
   395b0:	eor.w	r9, r2, r1
   395b4:	ldr	r1, [sp, #240]	; 0xf0
   395b6:	adc.w	r0, r0, r9
   395ba:	eor.w	ip, r3, r1
   395be:	ldr	r1, [sp, #248]	; 0xf8
   395c0:	eor.w	r5, r0, r1
   395c4:	mov.w	lr, ip, lsr #24
   395c8:	orr.w	r1, lr, r5, lsl #8
   395cc:	lsrs	r5, r5, #24
   395ce:	orr.w	r6, r5, ip, lsl #8
   395d2:	ldr	r5, [sp, #84]	; 0x54
   395d4:	adds	r2, r5, r2
   395d6:	ldr	r5, [sp, #88]	; 0x58
   395d8:	adc.w	r7, r5, r7
   395dc:	adds	r2, r2, r1
   395de:	str	r2, [sp, #168]	; 0xa8
   395e0:	adc.w	r2, r7, r6
   395e4:	str	r2, [sp, #172]	; 0xac
   395e6:	ldr	r2, [sp, #168]	; 0xa8
   395e8:	eors	r4, r2
   395ea:	ldr	r2, [sp, #172]	; 0xac
   395ec:	eor.w	r2, r2, r9
   395f0:	lsrs	r5, r4, #16
   395f2:	orr.w	r5, r5, r2, lsl #16
   395f6:	mov.w	r9, r2, lsr #16
   395fa:	orr.w	r9, r9, r4, lsl #16
   395fe:	adds	r3, r3, r5
   39600:	str	r3, [sp, #184]	; 0xb8
   39602:	adc.w	r3, r0, r9
   39606:	str	r3, [sp, #188]	; 0xbc
   39608:	ldr	r3, [sp, #184]	; 0xb8
   3960a:	ldr	r2, [sp, #160]	; 0xa0
   3960c:	eors	r1, r3
   3960e:	ldr	r3, [sp, #188]	; 0xbc
   39610:	ldr	r0, [sp, #196]	; 0xc4
   39612:	eors	r6, r3
   39614:	str	r5, [sp, #228]	; 0xe4
   39616:	lsls	r3, r6, #1
   39618:	orr.w	r3, r3, r1, lsr #31
   3961c:	lsls	r1, r1, #1
   3961e:	str	r3, [sp, #248]	; 0xf8
   39620:	orr.w	r3, r1, r6, lsr #31
   39624:	str	r3, [sp, #240]	; 0xf0
   39626:	ldr	r3, [sp, #36]	; 0x24
   39628:	ldr	r1, [sp, #164]	; 0xa4
   3962a:	adds	r3, r3, r2
   3962c:	ldr	r2, [sp, #40]	; 0x28
   3962e:	adc.w	ip, r2, r1
   39632:	ldr	r2, [sp, #216]	; 0xd8
   39634:	adds.w	r3, r3, fp
   39638:	adc.w	ip, ip, r2
   3963c:	ldr	r2, [sp, #212]	; 0xd4
   3963e:	eor.w	r7, ip, r2
   39642:	ldr	r2, [sp, #208]	; 0xd0
   39644:	eor.w	r1, r3, r2
   39648:	ldr	r2, [sp, #192]	; 0xc0
   3964a:	adds	r2, r2, r7
   3964c:	adc.w	r5, r0, r1
   39650:	ldr	r0, [sp, #216]	; 0xd8
   39652:	eor.w	fp, r2, fp
   39656:	eors	r0, r5
   39658:	mov.w	r4, fp, lsr #24
   3965c:	orr.w	r8, r4, r0, lsl #8
   39660:	lsrs	r0, r0, #24
   39662:	orr.w	r6, r0, fp, lsl #8
   39666:	ldr	r0, [sp, #4]
   39668:	adds	r3, r0, r3
   3966a:	ldr	r0, [sp, #8]
   3966c:	adc.w	ip, r0, ip
   39670:	adds.w	r3, r3, r8
   39674:	str	r3, [sp, #160]	; 0xa0
   39676:	adc.w	r3, ip, r6
   3967a:	str	r3, [sp, #164]	; 0xa4
   3967c:	ldr	r3, [sp, #160]	; 0xa0
   3967e:	eors	r7, r3
   39680:	ldr	r3, [sp, #164]	; 0xa4
   39682:	eors	r1, r3
   39684:	lsrs	r3, r7, #16
   39686:	orr.w	r3, r3, r1, lsl #16
   3968a:	lsrs	r1, r1, #16
   3968c:	str	r3, [sp, #208]	; 0xd0
   3968e:	orr.w	r3, r1, r7, lsl #16
   39692:	str	r3, [sp, #212]	; 0xd4
   39694:	ldr	r3, [sp, #208]	; 0xd0
   39696:	ldr	r1, [sp, #144]	; 0x90
   39698:	adds	r2, r2, r3
   3969a:	ldr	r3, [sp, #212]	; 0xd4
   3969c:	eor.w	r8, r2, r8
   396a0:	ldr	r0, [sp, #148]	; 0x94
   396a2:	adc.w	r5, r3, r5
   396a6:	ldr	r4, [sp, #260]	; 0x104
   396a8:	eors	r6, r5
   396aa:	lsls	r3, r6, #1
   396ac:	orr.w	r3, r3, r8, lsr #31
   396b0:	mov.w	r8, r8, lsl #1
   396b4:	str	r3, [sp, #256]	; 0x100
   396b6:	orr.w	r3, r8, r6, lsr #31
   396ba:	str	r3, [sp, #216]	; 0xd8
   396bc:	ldr	r3, [sp, #124]	; 0x7c
   396be:	adds	r1, r3, r1
   396c0:	ldr	r3, [sp, #128]	; 0x80
   396c2:	adc.w	sl, r3, r0
   396c6:	ldr	r3, [sp, #260]	; 0x104
   396c8:	ldr	r0, [sp, #204]	; 0xcc
   396ca:	adds	r1, r1, r3
   396cc:	ldr	r3, [sp, #268]	; 0x10c
   396ce:	adc.w	sl, sl, r3
   396d2:	ldr	r3, [sp, #236]	; 0xec
   396d4:	eor.w	lr, sl, r3
   396d8:	ldr	r3, [sp, #232]	; 0xe8
   396da:	eor.w	r7, r1, r3
   396de:	ldr	r3, [sp, #200]	; 0xc8
   396e0:	adds.w	r3, r3, lr
   396e4:	eor.w	r6, r3, r4
   396e8:	ldr	r4, [sp, #268]	; 0x10c
   396ea:	adcs	r0, r7
   396ec:	eor.w	ip, r0, r4
   396f0:	mov.w	fp, r6, lsr #24
   396f4:	orr.w	r4, fp, ip, lsl #8
   396f8:	mov.w	ip, ip, lsr #24
   396fc:	orr.w	r8, ip, r6, lsl #8
   39700:	ldr	r6, [sp, #68]	; 0x44
   39702:	adds	r1, r6, r1
   39704:	ldr	r6, [sp, #72]	; 0x48
   39706:	adc.w	sl, r6, sl
   3970a:	adds	r1, r1, r4
   3970c:	str	r1, [sp, #144]	; 0x90
   3970e:	adc.w	r1, sl, r8
   39712:	str	r1, [sp, #148]	; 0x94
   39714:	ldr	r1, [sp, #144]	; 0x90
   39716:	eor.w	lr, r1, lr
   3971a:	ldr	r1, [sp, #148]	; 0x94
   3971c:	eors	r7, r1
   3971e:	mov.w	r1, lr, lsr #16
   39722:	orr.w	r1, r1, r7, lsl #16
   39726:	lsrs	r7, r7, #16
   39728:	str	r1, [sp, #232]	; 0xe8
   3972a:	orr.w	r1, r7, lr, lsl #16
   3972e:	str	r1, [sp, #236]	; 0xec
   39730:	ldr	r1, [sp, #232]	; 0xe8
   39732:	ldr	r7, [sp, #156]	; 0x9c
   39734:	adds	r3, r3, r1
   39736:	ldr	r1, [sp, #236]	; 0xec
   39738:	eor.w	r4, r4, r3
   3973c:	adc.w	r0, r1, r0
   39740:	eor.w	r8, r0, r8
   39744:	mov.w	r1, r8, lsl #1
   39748:	orr.w	r6, r1, r4, lsr #31
   3974c:	lsls	r4, r4, #1
   3974e:	orr.w	fp, r4, r8, lsr #31
   39752:	ldr	r1, [sp, #76]	; 0x4c
   39754:	ldr	r4, [sp, #152]	; 0x98
   39756:	adds	r1, r1, r4
   39758:	ldr	r4, [sp, #80]	; 0x50
   3975a:	adc.w	sl, r4, r7
   3975e:	adds.w	r1, r1, fp
   39762:	adc.w	sl, sl, r6
   39766:	ldr	r4, [sp, #228]	; 0xe4
   39768:	eor.w	lr, sl, r9
   3976c:	adds.w	r2, r2, lr
   39770:	eor.w	r7, r1, r4
   39774:	adc.w	r5, r7, r5
   39778:	eor.w	fp, r2, fp
   3977c:	eor.w	ip, r5, r6
   39780:	mov.w	r4, fp, lsr #24
   39784:	orr.w	r6, r4, ip, lsl #8
   39788:	ldr	r4, [sp, #4]
   3978a:	mov.w	ip, ip, lsr #24
   3978e:	adds	r1, r4, r1
   39790:	ldr	r4, [sp, #8]
   39792:	orr.w	r8, ip, fp, lsl #8
   39796:	adc.w	sl, r4, sl
   3979a:	adds	r1, r1, r6
   3979c:	str	r1, [sp, #152]	; 0x98
   3979e:	adc.w	r1, sl, r8
   397a2:	str	r1, [sp, #156]	; 0x9c
   397a4:	ldr	r1, [sp, #152]	; 0x98
   397a6:	ldr	r4, [sp, #172]	; 0xac
   397a8:	eor.w	lr, r1, lr
   397ac:	ldr	r1, [sp, #156]	; 0x9c
   397ae:	eors	r7, r1
   397b0:	mov.w	r1, lr, lsr #16
   397b4:	orr.w	r1, r1, r7, lsl #16
   397b8:	lsrs	r7, r7, #16
   397ba:	str	r1, [sp, #228]	; 0xe4
   397bc:	orr.w	r1, r7, lr, lsl #16
   397c0:	str	r1, [sp, #260]	; 0x104
   397c2:	ldr	r1, [sp, #228]	; 0xe4
   397c4:	adds	r2, r2, r1
   397c6:	str	r2, [sp, #192]	; 0xc0
   397c8:	ldr	r2, [sp, #260]	; 0x104
   397ca:	ldr	r1, [sp, #168]	; 0xa8
   397cc:	adc.w	r2, r5, r2
   397d0:	str	r2, [sp, #196]	; 0xc4
   397d2:	ldr	r2, [sp, #192]	; 0xc0
   397d4:	ldr	r5, [sp, #252]	; 0xfc
   397d6:	eors	r6, r2
   397d8:	ldr	r2, [sp, #196]	; 0xc4
   397da:	eor.w	r8, r2, r8
   397de:	mov.w	r2, r8, lsl #1
   397e2:	orr.w	r2, r2, r6, lsr #31
   397e6:	lsls	r6, r6, #1
   397e8:	str	r2, [sp, #268]	; 0x10c
   397ea:	orr.w	r2, r6, r8, lsr #31
   397ee:	str	r2, [sp, #264]	; 0x108
   397f0:	ldr	r2, [sp, #44]	; 0x2c
   397f2:	adds	r2, r2, r1
   397f4:	ldr	r1, [sp, #48]	; 0x30
   397f6:	adc.w	r7, r1, r4
   397fa:	ldr	r1, [sp, #244]	; 0xf4
   397fc:	ldr	r4, [sp, #244]	; 0xf4
   397fe:	adds	r2, r2, r1
   39800:	ldr	r1, [sp, #252]	; 0xfc
   39802:	adc.w	r7, r1, r7
   39806:	ldr	r1, [sp, #212]	; 0xd4
   39808:	eor.w	r6, r7, r1
   3980c:	ldr	r1, [sp, #208]	; 0xd0
   3980e:	adds	r3, r3, r6
   39810:	eor.w	r1, r2, r1
   39814:	eor.w	r4, r3, r4
   39818:	adc.w	r0, r1, r0
   3981c:	eors	r5, r0
   3981e:	mov.w	r8, r4, lsr #24
   39822:	orr.w	ip, r8, r5, lsl #8
   39826:	lsrs	r5, r5, #24
   39828:	orr.w	lr, r5, r4, lsl #8
   3982c:	ldr	r4, [sp, #60]	; 0x3c
   3982e:	adds	r2, r4, r2
   39830:	ldr	r4, [sp, #64]	; 0x40
   39832:	adc.w	r7, r4, r7
   39836:	adds.w	r2, r2, ip
   3983a:	str	r2, [sp, #168]	; 0xa8
   3983c:	adc.w	r2, r7, lr
   39840:	str	r2, [sp, #172]	; 0xac
   39842:	ldr	r2, [sp, #168]	; 0xa8
   39844:	eors	r6, r2
   39846:	ldr	r2, [sp, #172]	; 0xac
   39848:	eors	r1, r2
   3984a:	lsrs	r2, r6, #16
   3984c:	orr.w	r2, r2, r1, lsl #16
   39850:	lsrs	r1, r1, #16
   39852:	str	r2, [sp, #208]	; 0xd0
   39854:	orr.w	r2, r1, r6, lsl #16
   39858:	str	r2, [sp, #212]	; 0xd4
   3985a:	ldr	r2, [sp, #208]	; 0xd0
   3985c:	ldr	r1, [sp, #164]	; 0xa4
   3985e:	adds	r3, r3, r2
   39860:	str	r3, [sp, #200]	; 0xc8
   39862:	ldr	r3, [sp, #212]	; 0xd4
   39864:	adc.w	r3, r0, r3
   39868:	str	r3, [sp, #204]	; 0xcc
   3986a:	ldr	r2, [sp, #204]	; 0xcc
   3986c:	ldr	r3, [sp, #200]	; 0xc8
   3986e:	eor.w	lr, r2, lr
   39872:	eor.w	r3, r3, ip
   39876:	mov.w	r2, lr, lsl #1
   3987a:	orr.w	r2, r2, r3, lsr #31
   3987e:	mov.w	ip, r3, lsl #1
   39882:	str	r2, [sp, #244]	; 0xf4
   39884:	orr.w	ip, ip, lr, lsr #31
   39888:	ldr	r2, [sp, #160]	; 0xa0
   3988a:	ldr	r3, [sp, #20]
   3988c:	adds	r3, r3, r2
   3988e:	ldr	r2, [sp, #24]
   39890:	adc.w	lr, r2, r1
   39894:	ldr	r2, [sp, #240]	; 0xf0
   39896:	ldr	r1, [sp, #180]	; 0xb4
   39898:	adds	r3, r3, r2
   3989a:	ldr	r2, [sp, #248]	; 0xf8
   3989c:	adc.w	lr, lr, r2
   398a0:	ldr	r2, [sp, #236]	; 0xec
   398a2:	eor.w	r6, lr, r2
   398a6:	ldr	r2, [sp, #232]	; 0xe8
   398a8:	eor.w	r0, r3, r2
   398ac:	ldr	r2, [sp, #176]	; 0xb0
   398ae:	adds	r2, r2, r6
   398b0:	adc.w	r5, r1, r0
   398b4:	ldr	r1, [sp, #240]	; 0xf0
   398b6:	eor.w	r8, r2, r1
   398ba:	ldr	r1, [sp, #248]	; 0xf8
   398bc:	eor.w	r4, r5, r1
   398c0:	mov.w	r9, r8, lsr #24
   398c4:	orr.w	r1, r9, r4, lsl #8
   398c8:	lsrs	r4, r4, #24
   398ca:	orr.w	r7, r4, r8, lsl #8
   398ce:	ldr	r4, [sp, #36]	; 0x24
   398d0:	adds	r3, r4, r3
   398d2:	ldr	r4, [sp, #40]	; 0x28
   398d4:	adc.w	lr, r4, lr
   398d8:	adds	r3, r3, r1
   398da:	str	r3, [sp, #160]	; 0xa0
   398dc:	adc.w	r3, lr, r7
   398e0:	str	r3, [sp, #164]	; 0xa4
   398e2:	ldr	r3, [sp, #160]	; 0xa0
   398e4:	eors	r6, r3
   398e6:	ldr	r3, [sp, #164]	; 0xa4
   398e8:	eors	r0, r3
   398ea:	lsrs	r3, r6, #16
   398ec:	orr.w	r3, r3, r0, lsl #16
   398f0:	lsrs	r0, r0, #16
   398f2:	str	r3, [sp, #232]	; 0xe8
   398f4:	orr.w	r3, r0, r6, lsl #16
   398f8:	str	r3, [sp, #236]	; 0xec
   398fa:	ldr	r3, [sp, #232]	; 0xe8
   398fc:	adds	r2, r2, r3
   398fe:	ldr	r3, [sp, #236]	; 0xec
   39900:	eor.w	r1, r1, r2
   39904:	adc.w	r5, r3, r5
   39908:	eors	r7, r5
   3990a:	lsls	r3, r7, #1
   3990c:	orr.w	r3, r3, r1, lsr #31
   39910:	lsls	r1, r1, #1
   39912:	str	r3, [sp, #248]	; 0xf8
   39914:	orr.w	r3, r1, r7, lsr #31
   39918:	str	r3, [sp, #240]	; 0xf0
   3991a:	ldr	r3, [sp, #84]	; 0x54
   3991c:	ldr	r1, [sp, #144]	; 0x90
   3991e:	ldr	r0, [sp, #148]	; 0x94
   39920:	adds	r1, r3, r1
   39922:	ldr	r3, [sp, #88]	; 0x58
   39924:	ldr	r4, [sp, #216]	; 0xd8
   39926:	adc.w	sl, r3, r0
   3992a:	ldr	r3, [sp, #216]	; 0xd8
   3992c:	ldr	r0, [sp, #188]	; 0xbc
   3992e:	adds	r1, r1, r3
   39930:	ldr	r3, [sp, #256]	; 0x100
   39932:	adc.w	sl, sl, r3
   39936:	ldr	r3, [sp, #224]	; 0xe0
   39938:	eor.w	lr, sl, r3
   3993c:	ldr	r3, [sp, #220]	; 0xdc
   3993e:	eor.w	r6, r1, r3
   39942:	ldr	r3, [sp, #184]	; 0xb8
   39944:	adds.w	r3, r3, lr
   39948:	eor.w	r8, r3, r4
   3994c:	ldr	r4, [sp, #256]	; 0x100
   3994e:	adcs	r0, r6
   39950:	eor.w	r7, r0, r4
   39954:	mov.w	fp, r8, lsr #24
   39958:	orr.w	r4, fp, r7, lsl #8
   3995c:	lsrs	r7, r7, #24
   3995e:	orr.w	r9, r7, r8, lsl #8
   39962:	ldr	r7, [sp, #124]	; 0x7c
   39964:	adds	r1, r7, r1
   39966:	ldr	r7, [sp, #128]	; 0x80
   39968:	adc.w	sl, r7, sl
   3996c:	adds	r1, r1, r4
   3996e:	str	r1, [sp, #144]	; 0x90
   39970:	adc.w	r1, sl, r9
   39974:	str	r1, [sp, #148]	; 0x94
   39976:	ldr	r1, [sp, #144]	; 0x90
   39978:	eor.w	lr, r1, lr
   3997c:	ldr	r1, [sp, #148]	; 0x94
   3997e:	eors	r6, r1
   39980:	mov.w	r1, lr, lsr #16
   39984:	orr.w	r8, r1, r6, lsl #16
   39988:	lsrs	r6, r6, #16
   3998a:	adds.w	r3, r3, r8
   3998e:	orr.w	sl, r6, lr, lsl #16
   39992:	adc.w	r0, r0, sl
   39996:	eors	r4, r3
   39998:	eor.w	r9, r0, r9
   3999c:	ldr	r6, [sp, #156]	; 0x9c
   3999e:	mov.w	r1, r9, lsl #1
   399a2:	orr.w	r1, r1, r4, lsr #31
   399a6:	lsls	r4, r4, #1
   399a8:	orr.w	fp, r4, r9, lsr #31
   399ac:	str	r1, [sp, #216]	; 0xd8
   399ae:	ldr	r4, [sp, #152]	; 0x98
   399b0:	ldr	r1, [sp, #116]	; 0x74
   399b2:	adds	r1, r1, r4
   399b4:	ldr	r4, [sp, #120]	; 0x78
   399b6:	adc.w	r9, r4, r6
   399ba:	ldr	r4, [sp, #244]	; 0xf4
   399bc:	adds.w	r1, r1, ip
   399c0:	adc.w	r9, r9, r4
   399c4:	eor.w	r7, r1, r8
   399c8:	eor.w	lr, r9, sl
   399cc:	adds.w	r2, r2, lr
   399d0:	adc.w	r5, r7, r5
   399d4:	eor.w	ip, r2, ip
   399d8:	eor.w	r6, r5, r4
   399dc:	mov.w	sl, ip, lsr #24
   399e0:	orr.w	r4, sl, r6, lsl #8
   399e4:	lsrs	r6, r6, #24
   399e6:	orr.w	r8, r6, ip, lsl #8
   399ea:	ldr	r6, [sp, #12]
   399ec:	adds	r1, r6, r1
   399ee:	ldr	r6, [sp, #16]
   399f0:	adc.w	r9, r6, r9
   399f4:	adds	r1, r1, r4
   399f6:	str	r1, [sp, #152]	; 0x98
   399f8:	adc.w	r1, r9, r8
   399fc:	str	r1, [sp, #156]	; 0x9c
   399fe:	ldr	r1, [sp, #152]	; 0x98
   39a00:	eor.w	lr, r1, lr
   39a04:	ldr	r1, [sp, #156]	; 0x9c
   39a06:	eors	r7, r1
   39a08:	mov.w	r1, lr, lsr #16
   39a0c:	orr.w	r1, r1, r7, lsl #16
   39a10:	lsrs	r7, r7, #16
   39a12:	str	r1, [sp, #220]	; 0xdc
   39a14:	orr.w	r1, r7, lr, lsl #16
   39a18:	str	r1, [sp, #224]	; 0xe0
   39a1a:	ldr	r1, [sp, #220]	; 0xdc
   39a1c:	adds	r2, r2, r1
   39a1e:	str	r2, [sp, #176]	; 0xb0
   39a20:	ldr	r2, [sp, #224]	; 0xe0
   39a22:	ldr	r1, [sp, #168]	; 0xa8
   39a24:	adc.w	r2, r5, r2
   39a28:	str	r2, [sp, #180]	; 0xb4
   39a2a:	ldr	r2, [sp, #176]	; 0xb0
   39a2c:	eors	r4, r2
   39a2e:	ldr	r2, [sp, #180]	; 0xb4
   39a30:	eor.w	r8, r2, r8
   39a34:	mov.w	r2, r8, lsl #1
   39a38:	orr.w	r2, r2, r4, lsr #31
   39a3c:	lsls	r4, r4, #1
   39a3e:	str	r2, [sp, #252]	; 0xfc
   39a40:	orr.w	r2, r4, r8, lsr #31
   39a44:	str	r2, [sp, #244]	; 0xf4
   39a46:	ldr	r2, [sp, #92]	; 0x5c
   39a48:	ldr	r4, [sp, #172]	; 0xac
   39a4a:	adds	r2, r2, r1
   39a4c:	ldr	r1, [sp, #96]	; 0x60
   39a4e:	adc.w	r7, r1, r4
   39a52:	ldr	r1, [sp, #240]	; 0xf0
   39a54:	adds	r2, r2, r1
   39a56:	ldr	r1, [sp, #248]	; 0xf8
   39a58:	adc.w	r7, r1, r7
   39a5c:	ldr	r1, [sp, #260]	; 0x104
   39a5e:	eor.w	r4, r7, r1
   39a62:	ldr	r1, [sp, #228]	; 0xe4
   39a64:	adds	r3, r3, r4
   39a66:	eor.w	r9, r2, r1
   39a6a:	ldr	r1, [sp, #240]	; 0xf0
   39a6c:	adc.w	r0, r0, r9
   39a70:	eor.w	ip, r3, r1
   39a74:	ldr	r1, [sp, #248]	; 0xf8
   39a76:	eor.w	r5, r0, r1
   39a7a:	mov.w	lr, ip, lsr #24
   39a7e:	orr.w	r1, lr, r5, lsl #8
   39a82:	lsrs	r5, r5, #24
   39a84:	orr.w	r6, r5, ip, lsl #8
   39a88:	ldr	r5, [sp, #100]	; 0x64
   39a8a:	adds	r2, r5, r2
   39a8c:	ldr	r5, [sp, #104]	; 0x68
   39a8e:	adc.w	r7, r5, r7
   39a92:	adds	r2, r2, r1
   39a94:	str	r2, [sp, #168]	; 0xa8
   39a96:	adc.w	r2, r7, r6
   39a9a:	str	r2, [sp, #172]	; 0xac
   39a9c:	ldr	r2, [sp, #168]	; 0xa8
   39a9e:	eors	r4, r2
   39aa0:	ldr	r2, [sp, #172]	; 0xac
   39aa2:	eor.w	r2, r2, r9
   39aa6:	lsrs	r5, r4, #16
   39aa8:	orr.w	r5, r5, r2, lsl #16
   39aac:	mov.w	r9, r2, lsr #16
   39ab0:	orr.w	r9, r9, r4, lsl #16
   39ab4:	adds	r3, r3, r5
   39ab6:	str	r3, [sp, #184]	; 0xb8
   39ab8:	adc.w	r3, r0, r9
   39abc:	str	r3, [sp, #188]	; 0xbc
   39abe:	ldr	r3, [sp, #184]	; 0xb8
   39ac0:	ldr	r2, [sp, #160]	; 0xa0
   39ac2:	eors	r1, r3
   39ac4:	ldr	r3, [sp, #188]	; 0xbc
   39ac6:	str	r5, [sp, #228]	; 0xe4
   39ac8:	eors	r6, r3
   39aca:	lsls	r3, r6, #1
   39acc:	orr.w	r3, r3, r1, lsr #31
   39ad0:	lsls	r1, r1, #1
   39ad2:	str	r3, [sp, #248]	; 0xf8
   39ad4:	orr.w	r3, r1, r6, lsr #31
   39ad8:	str	r3, [sp, #240]	; 0xf0
   39ada:	ldr	r3, [sp, #52]	; 0x34
   39adc:	adds	r3, r3, r2
   39ade:	ldr	r2, [sp, #56]	; 0x38
   39ae0:	ldr	r1, [sp, #164]	; 0xa4
   39ae2:	ldr	r0, [sp, #196]	; 0xc4
   39ae4:	adc.w	ip, r2, r1
   39ae8:	ldr	r2, [sp, #216]	; 0xd8
   39aea:	adds.w	r3, r3, fp
   39aee:	adc.w	ip, ip, r2
   39af2:	ldr	r2, [sp, #212]	; 0xd4
   39af4:	eor.w	r7, ip, r2
   39af8:	ldr	r2, [sp, #208]	; 0xd0
   39afa:	eor.w	r1, r3, r2
   39afe:	ldr	r2, [sp, #192]	; 0xc0
   39b00:	adds	r2, r2, r7
   39b02:	adc.w	r5, r0, r1
   39b06:	ldr	r0, [sp, #216]	; 0xd8
   39b08:	eor.w	fp, r2, fp
   39b0c:	eors	r0, r5
   39b0e:	mov.w	r4, fp, lsr #24
   39b12:	orr.w	r8, r4, r0, lsl #8
   39b16:	lsrs	r0, r0, #24
   39b18:	orr.w	r6, r0, fp, lsl #8
   39b1c:	ldr	r0, [sp, #68]	; 0x44
   39b1e:	ldr	r4, [sp, #264]	; 0x108
   39b20:	adds	r3, r0, r3
   39b22:	ldr	r0, [sp, #72]	; 0x48
   39b24:	adc.w	ip, r0, ip
   39b28:	adds.w	r3, r3, r8
   39b2c:	str	r3, [sp, #160]	; 0xa0
   39b2e:	adc.w	r3, ip, r6
   39b32:	str	r3, [sp, #164]	; 0xa4
   39b34:	ldr	r3, [sp, #160]	; 0xa0
   39b36:	ldr	r0, [sp, #148]	; 0x94
   39b38:	eors	r7, r3
   39b3a:	ldr	r3, [sp, #164]	; 0xa4
   39b3c:	eors	r1, r3
   39b3e:	lsrs	r3, r7, #16
   39b40:	orr.w	r3, r3, r1, lsl #16
   39b44:	lsrs	r1, r1, #16
   39b46:	str	r3, [sp, #208]	; 0xd0
   39b48:	orr.w	r3, r1, r7, lsl #16
   39b4c:	str	r3, [sp, #212]	; 0xd4
   39b4e:	ldr	r3, [sp, #208]	; 0xd0
   39b50:	ldr	r1, [sp, #144]	; 0x90
   39b52:	adds	r2, r2, r3
   39b54:	ldr	r3, [sp, #212]	; 0xd4
   39b56:	eor.w	r8, r2, r8
   39b5a:	adc.w	r5, r3, r5
   39b5e:	eors	r6, r5
   39b60:	lsls	r3, r6, #1
   39b62:	orr.w	r3, r3, r8, lsr #31
   39b66:	mov.w	r8, r8, lsl #1
   39b6a:	str	r3, [sp, #256]	; 0x100
   39b6c:	orr.w	r3, r8, r6, lsr #31
   39b70:	str	r3, [sp, #216]	; 0xd8
   39b72:	ldr	r3, [sp, #28]
   39b74:	adds	r1, r3, r1
   39b76:	ldr	r3, [sp, #32]
   39b78:	adc.w	sl, r3, r0
   39b7c:	ldr	r3, [sp, #264]	; 0x108
   39b7e:	ldr	r0, [sp, #204]	; 0xcc
   39b80:	adds	r1, r1, r3
   39b82:	ldr	r3, [sp, #268]	; 0x10c
   39b84:	adc.w	sl, sl, r3
   39b88:	ldr	r3, [sp, #236]	; 0xec
   39b8a:	eor.w	lr, sl, r3
   39b8e:	ldr	r3, [sp, #232]	; 0xe8
   39b90:	eor.w	r7, r1, r3
   39b94:	ldr	r3, [sp, #200]	; 0xc8
   39b96:	adds.w	r3, r3, lr
   39b9a:	eor.w	r6, r3, r4
   39b9e:	ldr	r4, [sp, #268]	; 0x10c
   39ba0:	adcs	r0, r7
   39ba2:	eor.w	ip, r0, r4
   39ba6:	mov.w	fp, r6, lsr #24
   39baa:	orr.w	r4, fp, ip, lsl #8
   39bae:	mov.w	ip, ip, lsr #24
   39bb2:	orr.w	r8, ip, r6, lsl #8
   39bb6:	ldr	r6, [sp, #108]	; 0x6c
   39bb8:	adds	r1, r6, r1
   39bba:	ldr	r6, [sp, #112]	; 0x70
   39bbc:	adc.w	sl, r6, sl
   39bc0:	adds	r1, r1, r4
   39bc2:	str	r1, [sp, #144]	; 0x90
   39bc4:	adc.w	r1, sl, r8
   39bc8:	str	r1, [sp, #148]	; 0x94
   39bca:	ldr	r1, [sp, #144]	; 0x90
   39bcc:	eor.w	lr, r1, lr
   39bd0:	ldr	r1, [sp, #148]	; 0x94
   39bd2:	eors	r7, r1
   39bd4:	mov.w	r1, lr, lsr #16
   39bd8:	orr.w	r1, r1, r7, lsl #16
   39bdc:	lsrs	r7, r7, #16
   39bde:	str	r1, [sp, #232]	; 0xe8
   39be0:	orr.w	r1, r7, lr, lsl #16
   39be4:	str	r1, [sp, #236]	; 0xec
   39be6:	ldr	r1, [sp, #232]	; 0xe8
   39be8:	ldr	r7, [sp, #156]	; 0x9c
   39bea:	adds	r3, r3, r1
   39bec:	ldr	r1, [sp, #236]	; 0xec
   39bee:	eor.w	r4, r4, r3
   39bf2:	adc.w	r0, r1, r0
   39bf6:	eor.w	r8, r0, r8
   39bfa:	mov.w	r1, r8, lsl #1
   39bfe:	orr.w	r6, r1, r4, lsr #31
   39c02:	lsls	r4, r4, #1
   39c04:	orr.w	fp, r4, r8, lsr #31
   39c08:	ldr	r1, [sp, #20]
   39c0a:	ldr	r4, [sp, #152]	; 0x98
   39c0c:	adds	r1, r1, r4
   39c0e:	ldr	r4, [sp, #24]
   39c10:	adc.w	sl, r4, r7
   39c14:	adds.w	r1, r1, fp
   39c18:	ldr	r4, [sp, #228]	; 0xe4
   39c1a:	adc.w	sl, sl, r6
   39c1e:	eor.w	lr, sl, r9
   39c22:	adds.w	r2, r2, lr
   39c26:	eor.w	r7, r1, r4
   39c2a:	adc.w	r5, r7, r5
   39c2e:	eor.w	fp, r2, fp
   39c32:	eor.w	ip, r5, r6
   39c36:	mov.w	r4, fp, lsr #24
   39c3a:	orr.w	r6, r4, ip, lsl #8
   39c3e:	ldr	r4, [sp, #100]	; 0x64
   39c40:	mov.w	ip, ip, lsr #24
   39c44:	adds	r1, r4, r1
   39c46:	ldr	r4, [sp, #104]	; 0x68
   39c48:	orr.w	r8, ip, fp, lsl #8
   39c4c:	adc.w	sl, r4, sl
   39c50:	adds	r1, r1, r6
   39c52:	str	r1, [sp, #152]	; 0x98
   39c54:	adc.w	r1, sl, r8
   39c58:	str	r1, [sp, #156]	; 0x9c
   39c5a:	ldr	r1, [sp, #152]	; 0x98
   39c5c:	eor.w	lr, r1, lr
   39c60:	ldr	r1, [sp, #156]	; 0x9c
   39c62:	eors	r7, r1
   39c64:	mov.w	r1, lr, lsr #16
   39c68:	orr.w	r1, r1, r7, lsl #16
   39c6c:	lsrs	r7, r7, #16
   39c6e:	str	r1, [sp, #228]	; 0xe4
   39c70:	orr.w	r1, r7, lr, lsl #16
   39c74:	str	r1, [sp, #260]	; 0x104
   39c76:	ldr	r1, [sp, #228]	; 0xe4
   39c78:	adds	r2, r2, r1
   39c7a:	str	r2, [sp, #192]	; 0xc0
   39c7c:	ldr	r2, [sp, #260]	; 0x104
   39c7e:	ldr	r1, [sp, #168]	; 0xa8
   39c80:	adc.w	r2, r5, r2
   39c84:	str	r2, [sp, #196]	; 0xc4
   39c86:	ldr	r2, [sp, #192]	; 0xc0
   39c88:	eors	r6, r2
   39c8a:	ldr	r2, [sp, #196]	; 0xc4
   39c8c:	eor.w	r8, r2, r8
   39c90:	mov.w	r2, r8, lsl #1
   39c94:	orr.w	r2, r2, r6, lsr #31
   39c98:	lsls	r6, r6, #1
   39c9a:	str	r2, [sp, #268]	; 0x10c
   39c9c:	orr.w	r2, r6, r8, lsr #31
   39ca0:	str	r2, [sp, #264]	; 0x108
   39ca2:	ldr	r2, [sp, #52]	; 0x34
   39ca4:	adds	r2, r2, r1
   39ca6:	ldr	r1, [sp, #56]	; 0x38
   39ca8:	ldr	r4, [sp, #172]	; 0xac
   39caa:	ldr	r5, [sp, #252]	; 0xfc
   39cac:	adc.w	r7, r1, r4
   39cb0:	ldr	r1, [sp, #244]	; 0xf4
   39cb2:	ldr	r4, [sp, #244]	; 0xf4
   39cb4:	adds	r2, r2, r1
   39cb6:	ldr	r1, [sp, #252]	; 0xfc
   39cb8:	adc.w	r7, r1, r7
   39cbc:	ldr	r1, [sp, #212]	; 0xd4
   39cbe:	eor.w	r6, r7, r1
   39cc2:	ldr	r1, [sp, #208]	; 0xd0
   39cc4:	adds	r3, r3, r6
   39cc6:	eor.w	r1, r2, r1
   39cca:	eor.w	r4, r3, r4
   39cce:	adc.w	r0, r1, r0
   39cd2:	eors	r5, r0
   39cd4:	mov.w	r8, r4, lsr #24
   39cd8:	orr.w	ip, r8, r5, lsl #8
   39cdc:	lsrs	r5, r5, #24
   39cde:	orr.w	lr, r5, r4, lsl #8
   39ce2:	ldr	r4, [sp, #84]	; 0x54
   39ce4:	adds	r2, r4, r2
   39ce6:	ldr	r4, [sp, #88]	; 0x58
   39ce8:	adc.w	r7, r4, r7
   39cec:	adds.w	r2, r2, ip
   39cf0:	str	r2, [sp, #168]	; 0xa8
   39cf2:	adc.w	r2, r7, lr
   39cf6:	str	r2, [sp, #172]	; 0xac
   39cf8:	ldr	r2, [sp, #168]	; 0xa8
   39cfa:	eors	r6, r2
   39cfc:	ldr	r2, [sp, #172]	; 0xac
   39cfe:	eors	r1, r2
   39d00:	lsrs	r2, r6, #16
   39d02:	orr.w	r2, r2, r1, lsl #16
   39d06:	lsrs	r1, r1, #16
   39d08:	str	r2, [sp, #208]	; 0xd0
   39d0a:	orr.w	r2, r1, r6, lsl #16
   39d0e:	str	r2, [sp, #212]	; 0xd4
   39d10:	ldr	r2, [sp, #208]	; 0xd0
   39d12:	ldr	r1, [sp, #164]	; 0xa4
   39d14:	adds	r3, r3, r2
   39d16:	str	r3, [sp, #200]	; 0xc8
   39d18:	ldr	r3, [sp, #212]	; 0xd4
   39d1a:	adc.w	r3, r0, r3
   39d1e:	str	r3, [sp, #204]	; 0xcc
   39d20:	ldr	r2, [sp, #204]	; 0xcc
   39d22:	ldr	r3, [sp, #200]	; 0xc8
   39d24:	eor.w	lr, r2, lr
   39d28:	eor.w	r3, r3, ip
   39d2c:	mov.w	r2, lr, lsl #1
   39d30:	orr.w	r2, r2, r3, lsr #31
   39d34:	mov.w	ip, r3, lsl #1
   39d38:	str	r2, [sp, #244]	; 0xf4
   39d3a:	orr.w	ip, ip, lr, lsr #31
   39d3e:	ldr	r2, [sp, #160]	; 0xa0
   39d40:	ldr	r3, [sp, #4]
   39d42:	adds	r3, r3, r2
   39d44:	ldr	r2, [sp, #8]
   39d46:	adc.w	lr, r2, r1
   39d4a:	ldr	r2, [sp, #240]	; 0xf0
   39d4c:	adds	r3, r3, r2
   39d4e:	ldr	r2, [sp, #248]	; 0xf8
   39d50:	adc.w	lr, lr, r2
   39d54:	ldr	r2, [sp, #236]	; 0xec
   39d56:	eor.w	r6, lr, r2
   39d5a:	ldr	r2, [sp, #232]	; 0xe8
   39d5c:	eor.w	r0, r3, r2
   39d60:	ldr	r2, [sp, #176]	; 0xb0
   39d62:	ldr	r1, [sp, #180]	; 0xb4
   39d64:	adds	r2, r2, r6
   39d66:	adc.w	r5, r1, r0
   39d6a:	ldr	r1, [sp, #240]	; 0xf0
   39d6c:	eor.w	r8, r2, r1
   39d70:	ldr	r1, [sp, #248]	; 0xf8
   39d72:	eor.w	r4, r5, r1
   39d76:	mov.w	r9, r8, lsr #24
   39d7a:	orr.w	r1, r9, r4, lsl #8
   39d7e:	lsrs	r4, r4, #24
   39d80:	orr.w	r7, r4, r8, lsl #8
   39d84:	ldr	r4, [sp, #92]	; 0x5c
   39d86:	adds	r3, r4, r3
   39d88:	ldr	r4, [sp, #96]	; 0x60
   39d8a:	adc.w	lr, r4, lr
   39d8e:	adds	r3, r3, r1
   39d90:	str	r3, [sp, #160]	; 0xa0
   39d92:	adc.w	r3, lr, r7
   39d96:	str	r3, [sp, #164]	; 0xa4
   39d98:	ldr	r3, [sp, #160]	; 0xa0
   39d9a:	ldr	r4, [sp, #216]	; 0xd8
   39d9c:	eors	r6, r3
   39d9e:	ldr	r3, [sp, #164]	; 0xa4
   39da0:	eors	r0, r3
   39da2:	lsrs	r3, r6, #16
   39da4:	orr.w	r3, r3, r0, lsl #16
   39da8:	lsrs	r0, r0, #16
   39daa:	str	r3, [sp, #232]	; 0xe8
   39dac:	orr.w	r3, r0, r6, lsl #16
   39db0:	str	r3, [sp, #236]	; 0xec
   39db2:	ldr	r3, [sp, #232]	; 0xe8
   39db4:	ldr	r0, [sp, #148]	; 0x94
   39db6:	adds	r2, r2, r3
   39db8:	ldr	r3, [sp, #236]	; 0xec
   39dba:	eor.w	r1, r1, r2
   39dbe:	adc.w	r5, r3, r5
   39dc2:	eors	r7, r5
   39dc4:	lsls	r3, r7, #1
   39dc6:	orr.w	r3, r3, r1, lsr #31
   39dca:	lsls	r1, r1, #1
   39dcc:	str	r3, [sp, #248]	; 0xf8
   39dce:	orr.w	r3, r1, r7, lsr #31
   39dd2:	ldr	r1, [sp, #144]	; 0x90
   39dd4:	str	r3, [sp, #240]	; 0xf0
   39dd6:	ldr	r3, [sp, #68]	; 0x44
   39dd8:	adds	r1, r3, r1
   39dda:	ldr	r3, [sp, #72]	; 0x48
   39ddc:	adc.w	sl, r3, r0
   39de0:	ldr	r3, [sp, #216]	; 0xd8
   39de2:	ldr	r0, [sp, #188]	; 0xbc
   39de4:	adds	r1, r1, r3
   39de6:	ldr	r3, [sp, #256]	; 0x100
   39de8:	adc.w	sl, sl, r3
   39dec:	ldr	r3, [sp, #224]	; 0xe0
   39dee:	eor.w	lr, sl, r3
   39df2:	ldr	r3, [sp, #220]	; 0xdc
   39df4:	eor.w	r6, r1, r3
   39df8:	ldr	r3, [sp, #184]	; 0xb8
   39dfa:	adds.w	r3, r3, lr
   39dfe:	eor.w	r8, r3, r4
   39e02:	ldr	r4, [sp, #256]	; 0x100
   39e04:	adcs	r0, r6
   39e06:	eor.w	r7, r0, r4
   39e0a:	mov.w	fp, r8, lsr #24
   39e0e:	orr.w	r4, fp, r7, lsl #8
   39e12:	lsrs	r7, r7, #24
   39e14:	orr.w	r9, r7, r8, lsl #8
   39e18:	ldr	r7, [sp, #28]
   39e1a:	adds	r1, r7, r1
   39e1c:	ldr	r7, [sp, #32]
   39e1e:	adc.w	sl, r7, sl
   39e22:	adds	r1, r1, r4
   39e24:	str	r1, [sp, #144]	; 0x90
   39e26:	adc.w	r1, sl, r9
   39e2a:	str	r1, [sp, #148]	; 0x94
   39e2c:	ldr	r1, [sp, #144]	; 0x90
   39e2e:	eor.w	lr, r1, lr
   39e32:	ldr	r1, [sp, #148]	; 0x94
   39e34:	eors	r6, r1
   39e36:	mov.w	r1, lr, lsr #16
   39e3a:	orr.w	r8, r1, r6, lsl #16
   39e3e:	lsrs	r6, r6, #16
   39e40:	adds.w	r3, r3, r8
   39e44:	orr.w	sl, r6, lr, lsl #16
   39e48:	adc.w	r0, r0, sl
   39e4c:	eors	r4, r3
   39e4e:	eor.w	r9, r0, r9
   39e52:	ldr	r6, [sp, #156]	; 0x9c
   39e54:	mov.w	r1, r9, lsl #1
   39e58:	orr.w	r1, r1, r4, lsr #31
   39e5c:	lsls	r4, r4, #1
   39e5e:	orr.w	fp, r4, r9, lsr #31
   39e62:	str	r1, [sp, #216]	; 0xd8
   39e64:	ldr	r4, [sp, #152]	; 0x98
   39e66:	ldr	r1, [sp, #36]	; 0x24
   39e68:	adds	r1, r1, r4
   39e6a:	ldr	r4, [sp, #40]	; 0x28
   39e6c:	adc.w	r9, r4, r6
   39e70:	ldr	r4, [sp, #244]	; 0xf4
   39e72:	adds.w	r1, r1, ip
   39e76:	adc.w	r9, r9, r4
   39e7a:	eor.w	r7, r1, r8
   39e7e:	eor.w	lr, r9, sl
   39e82:	adds.w	r2, r2, lr
   39e86:	adc.w	r5, r7, r5
   39e8a:	eor.w	ip, r2, ip
   39e8e:	eor.w	r6, r5, r4
   39e92:	mov.w	sl, ip, lsr #24
   39e96:	orr.w	r4, sl, r6, lsl #8
   39e9a:	lsrs	r6, r6, #24
   39e9c:	orr.w	r8, r6, ip, lsl #8
   39ea0:	ldr	r6, [sp, #108]	; 0x6c
   39ea2:	adds	r1, r6, r1
   39ea4:	ldr	r6, [sp, #112]	; 0x70
   39ea6:	adc.w	r9, r6, r9
   39eaa:	adds	r1, r1, r4
   39eac:	str	r1, [sp, #152]	; 0x98
   39eae:	adc.w	r1, r9, r8
   39eb2:	str	r1, [sp, #156]	; 0x9c
   39eb4:	ldr	r1, [sp, #152]	; 0x98
   39eb6:	eor.w	lr, r1, lr
   39eba:	ldr	r1, [sp, #156]	; 0x9c
   39ebc:	eors	r7, r1
   39ebe:	mov.w	r1, lr, lsr #16
   39ec2:	orr.w	r1, r1, r7, lsl #16
   39ec6:	lsrs	r7, r7, #16
   39ec8:	str	r1, [sp, #220]	; 0xdc
   39eca:	orr.w	r1, r7, lr, lsl #16
   39ece:	str	r1, [sp, #224]	; 0xe0
   39ed0:	ldr	r1, [sp, #220]	; 0xdc
   39ed2:	adds	r2, r2, r1
   39ed4:	str	r2, [sp, #176]	; 0xb0
   39ed6:	ldr	r2, [sp, #224]	; 0xe0
   39ed8:	ldr	r1, [sp, #168]	; 0xa8
   39eda:	adc.w	r2, r5, r2
   39ede:	str	r2, [sp, #180]	; 0xb4
   39ee0:	ldr	r2, [sp, #176]	; 0xb0
   39ee2:	eors	r4, r2
   39ee4:	ldr	r2, [sp, #180]	; 0xb4
   39ee6:	eor.w	r8, r2, r8
   39eea:	mov.w	r2, r8, lsl #1
   39eee:	orr.w	r2, r2, r4, lsr #31
   39ef2:	lsls	r4, r4, #1
   39ef4:	str	r2, [sp, #252]	; 0xfc
   39ef6:	orr.w	r2, r4, r8, lsr #31
   39efa:	str	r2, [sp, #244]	; 0xf4
   39efc:	ldr	r2, [sp, #60]	; 0x3c
   39efe:	ldr	r4, [sp, #172]	; 0xac
   39f00:	adds	r2, r2, r1
   39f02:	ldr	r1, [sp, #64]	; 0x40
   39f04:	adc.w	r7, r1, r4
   39f08:	ldr	r1, [sp, #240]	; 0xf0
   39f0a:	adds	r2, r2, r1
   39f0c:	ldr	r1, [sp, #248]	; 0xf8
   39f0e:	adc.w	r7, r1, r7
   39f12:	ldr	r1, [sp, #260]	; 0x104
   39f14:	eor.w	r4, r7, r1
   39f18:	ldr	r1, [sp, #228]	; 0xe4
   39f1a:	adds	r3, r3, r4
   39f1c:	eor.w	r9, r2, r1
   39f20:	ldr	r1, [sp, #240]	; 0xf0
   39f22:	adc.w	r0, r0, r9
   39f26:	eor.w	ip, r3, r1
   39f2a:	ldr	r1, [sp, #248]	; 0xf8
   39f2c:	eor.w	r5, r0, r1
   39f30:	mov.w	lr, ip, lsr #24
   39f34:	orr.w	r1, lr, r5, lsl #8
   39f38:	lsrs	r5, r5, #24
   39f3a:	orr.w	r6, r5, ip, lsl #8
   39f3e:	ldr	r5, [sp, #44]	; 0x2c
   39f40:	adds	r2, r5, r2
   39f42:	ldr	r5, [sp, #48]	; 0x30
   39f44:	adc.w	r7, r5, r7
   39f48:	adds	r2, r2, r1
   39f4a:	str	r2, [sp, #168]	; 0xa8
   39f4c:	adc.w	r2, r7, r6
   39f50:	str	r2, [sp, #172]	; 0xac
   39f52:	ldr	r2, [sp, #168]	; 0xa8
   39f54:	eors	r4, r2
   39f56:	ldr	r2, [sp, #172]	; 0xac
   39f58:	eor.w	r2, r2, r9
   39f5c:	lsrs	r5, r4, #16
   39f5e:	orr.w	r5, r5, r2, lsl #16
   39f62:	mov.w	r9, r2, lsr #16
   39f66:	orr.w	r9, r9, r4, lsl #16
   39f6a:	adds	r3, r3, r5
   39f6c:	str	r3, [sp, #184]	; 0xb8
   39f6e:	adc.w	r3, r0, r9
   39f72:	str	r3, [sp, #188]	; 0xbc
   39f74:	ldr	r3, [sp, #184]	; 0xb8
   39f76:	ldr	r2, [sp, #160]	; 0xa0
   39f78:	eors	r1, r3
   39f7a:	ldr	r3, [sp, #188]	; 0xbc
   39f7c:	ldr	r0, [sp, #196]	; 0xc4
   39f7e:	eors	r6, r3
   39f80:	str	r5, [sp, #228]	; 0xe4
   39f82:	lsls	r3, r6, #1
   39f84:	orr.w	r3, r3, r1, lsr #31
   39f88:	lsls	r1, r1, #1
   39f8a:	str	r3, [sp, #248]	; 0xf8
   39f8c:	orr.w	r3, r1, r6, lsr #31
   39f90:	str	r3, [sp, #240]	; 0xf0
   39f92:	ldr	r3, [sp, #124]	; 0x7c
   39f94:	ldr	r1, [sp, #164]	; 0xa4
   39f96:	adds	r3, r3, r2
   39f98:	ldr	r2, [sp, #128]	; 0x80
   39f9a:	adc.w	ip, r2, r1
   39f9e:	ldr	r2, [sp, #216]	; 0xd8
   39fa0:	adds.w	r3, r3, fp
   39fa4:	adc.w	ip, ip, r2
   39fa8:	ldr	r2, [sp, #212]	; 0xd4
   39faa:	eor.w	r7, ip, r2
   39fae:	ldr	r2, [sp, #208]	; 0xd0
   39fb0:	eor.w	r1, r3, r2
   39fb4:	ldr	r2, [sp, #192]	; 0xc0
   39fb6:	adds	r2, r2, r7
   39fb8:	adc.w	r5, r0, r1
   39fbc:	ldr	r0, [sp, #216]	; 0xd8
   39fbe:	eor.w	fp, r2, fp
   39fc2:	eors	r0, r5
   39fc4:	mov.w	r4, fp, lsr #24
   39fc8:	orr.w	r8, r4, r0, lsl #8
   39fcc:	lsrs	r0, r0, #24
   39fce:	orr.w	r6, r0, fp, lsl #8
   39fd2:	ldr	r0, [sp, #116]	; 0x74
   39fd4:	adds	r3, r0, r3
   39fd6:	ldr	r0, [sp, #120]	; 0x78
   39fd8:	adc.w	ip, r0, ip
   39fdc:	adds.w	r3, r3, r8
   39fe0:	str	r3, [sp, #160]	; 0xa0
   39fe2:	adc.w	r3, ip, r6
   39fe6:	str	r3, [sp, #164]	; 0xa4
   39fe8:	ldr	r3, [sp, #160]	; 0xa0
   39fea:	eors	r7, r3
   39fec:	ldr	r3, [sp, #164]	; 0xa4
   39fee:	eors	r1, r3
   39ff0:	lsrs	r3, r7, #16
   39ff2:	orr.w	r3, r3, r1, lsl #16
   39ff6:	lsrs	r1, r1, #16
   39ff8:	str	r3, [sp, #208]	; 0xd0
   39ffa:	orr.w	r3, r1, r7, lsl #16
   39ffe:	str	r3, [sp, #212]	; 0xd4
   3a000:	ldr	r3, [sp, #208]	; 0xd0
   3a002:	ldr	r1, [sp, #144]	; 0x90
   3a004:	adds	r2, r2, r3
   3a006:	ldr	r3, [sp, #212]	; 0xd4
   3a008:	eor.w	r8, r2, r8
   3a00c:	ldr	r0, [sp, #148]	; 0x94
   3a00e:	adc.w	r5, r3, r5
   3a012:	ldr	r4, [sp, #264]	; 0x108
   3a014:	eors	r6, r5
   3a016:	lsls	r3, r6, #1
   3a018:	orr.w	r3, r3, r8, lsr #31
   3a01c:	mov.w	r8, r8, lsl #1
   3a020:	str	r3, [sp, #256]	; 0x100
   3a022:	orr.w	r3, r8, r6, lsr #31
   3a026:	str	r3, [sp, #216]	; 0xd8
   3a028:	ldr	r3, [sp, #12]
   3a02a:	adds	r1, r3, r1
   3a02c:	ldr	r3, [sp, #16]
   3a02e:	adc.w	sl, r3, r0
   3a032:	ldr	r3, [sp, #264]	; 0x108
   3a034:	ldr	r0, [sp, #204]	; 0xcc
   3a036:	adds	r1, r1, r3
   3a038:	ldr	r3, [sp, #268]	; 0x10c
   3a03a:	adc.w	sl, sl, r3
   3a03e:	ldr	r3, [sp, #236]	; 0xec
   3a040:	eor.w	lr, sl, r3
   3a044:	ldr	r3, [sp, #232]	; 0xe8
   3a046:	eor.w	r7, r1, r3
   3a04a:	ldr	r3, [sp, #200]	; 0xc8
   3a04c:	adds.w	r3, r3, lr
   3a050:	eor.w	r6, r3, r4
   3a054:	ldr	r4, [sp, #268]	; 0x10c
   3a056:	adcs	r0, r7
   3a058:	eor.w	ip, r0, r4
   3a05c:	mov.w	fp, r6, lsr #24
   3a060:	orr.w	r4, fp, ip, lsl #8
   3a064:	mov.w	ip, ip, lsr #24
   3a068:	orr.w	r8, ip, r6, lsl #8
   3a06c:	ldr	r6, [sp, #76]	; 0x4c
   3a06e:	adds	r1, r6, r1
   3a070:	ldr	r6, [sp, #80]	; 0x50
   3a072:	adc.w	sl, r6, sl
   3a076:	adds	r1, r1, r4
   3a078:	str	r1, [sp, #144]	; 0x90
   3a07a:	adc.w	r1, sl, r8
   3a07e:	str	r1, [sp, #148]	; 0x94
   3a080:	ldr	r1, [sp, #144]	; 0x90
   3a082:	eor.w	lr, r1, lr
   3a086:	ldr	r1, [sp, #148]	; 0x94
   3a088:	eors	r7, r1
   3a08a:	mov.w	r1, lr, lsr #16
   3a08e:	orr.w	r1, r1, r7, lsl #16
   3a092:	lsrs	r7, r7, #16
   3a094:	str	r1, [sp, #232]	; 0xe8
   3a096:	orr.w	r1, r7, lr, lsl #16
   3a09a:	str	r1, [sp, #236]	; 0xec
   3a09c:	ldr	r1, [sp, #232]	; 0xe8
   3a09e:	ldr	r7, [sp, #156]	; 0x9c
   3a0a0:	adds	r3, r3, r1
   3a0a2:	ldr	r1, [sp, #236]	; 0xec
   3a0a4:	eor.w	r4, r4, r3
   3a0a8:	adc.w	r0, r1, r0
   3a0ac:	eor.w	r8, r0, r8
   3a0b0:	mov.w	r1, r8, lsl #1
   3a0b4:	orr.w	r6, r1, r4, lsr #31
   3a0b8:	lsls	r4, r4, #1
   3a0ba:	orr.w	fp, r4, r8, lsr #31
   3a0be:	ldr	r1, [sp, #100]	; 0x64
   3a0c0:	ldr	r4, [sp, #152]	; 0x98
   3a0c2:	adds	r1, r1, r4
   3a0c4:	ldr	r4, [sp, #104]	; 0x68
   3a0c6:	adc.w	sl, r4, r7
   3a0ca:	adds.w	r1, r1, fp
   3a0ce:	adc.w	sl, sl, r6
   3a0d2:	ldr	r4, [sp, #228]	; 0xe4
   3a0d4:	eor.w	lr, sl, r9
   3a0d8:	adds.w	r2, r2, lr
   3a0dc:	eor.w	r7, r1, r4
   3a0e0:	adc.w	r5, r7, r5
   3a0e4:	eor.w	fp, r2, fp
   3a0e8:	eor.w	ip, r5, r6
   3a0ec:	mov.w	r4, fp, lsr #24
   3a0f0:	orr.w	r6, r4, ip, lsl #8
   3a0f4:	ldr	r4, [sp, #44]	; 0x2c
   3a0f6:	mov.w	ip, ip, lsr #24
   3a0fa:	adds	r1, r4, r1
   3a0fc:	ldr	r4, [sp, #48]	; 0x30
   3a0fe:	orr.w	r8, ip, fp, lsl #8
   3a102:	adc.w	sl, r4, sl
   3a106:	adds	r1, r1, r6
   3a108:	str	r1, [sp, #152]	; 0x98
   3a10a:	adc.w	r1, sl, r8
   3a10e:	str	r1, [sp, #156]	; 0x9c
   3a110:	ldr	r1, [sp, #152]	; 0x98
   3a112:	ldr	r4, [sp, #172]	; 0xac
   3a114:	eor.w	lr, r1, lr
   3a118:	ldr	r1, [sp, #156]	; 0x9c
   3a11a:	eors	r7, r1
   3a11c:	mov.w	r1, lr, lsr #16
   3a120:	orr.w	r1, r1, r7, lsl #16
   3a124:	lsrs	r7, r7, #16
   3a126:	str	r1, [sp, #228]	; 0xe4
   3a128:	orr.w	r1, r7, lr, lsl #16
   3a12c:	str	r1, [sp, #260]	; 0x104
   3a12e:	ldr	r1, [sp, #228]	; 0xe4
   3a130:	adds	r2, r2, r1
   3a132:	str	r2, [sp, #192]	; 0xc0
   3a134:	ldr	r2, [sp, #260]	; 0x104
   3a136:	ldr	r1, [sp, #168]	; 0xa8
   3a138:	adc.w	r2, r5, r2
   3a13c:	str	r2, [sp, #196]	; 0xc4
   3a13e:	ldr	r2, [sp, #192]	; 0xc0
   3a140:	ldr	r5, [sp, #252]	; 0xfc
   3a142:	eors	r6, r2
   3a144:	ldr	r2, [sp, #196]	; 0xc4
   3a146:	eor.w	r8, r2, r8
   3a14a:	mov.w	r2, r8, lsl #1
   3a14e:	orr.w	r2, r2, r6, lsr #31
   3a152:	lsls	r6, r6, #1
   3a154:	str	r2, [sp, #268]	; 0x10c
   3a156:	orr.w	r2, r6, r8, lsr #31
   3a15a:	str	r2, [sp, #264]	; 0x108
   3a15c:	ldr	r2, [sp, #12]
   3a15e:	adds	r2, r2, r1
   3a160:	ldr	r1, [sp, #16]
   3a162:	adc.w	r7, r1, r4
   3a166:	ldr	r1, [sp, #244]	; 0xf4
   3a168:	ldr	r4, [sp, #244]	; 0xf4
   3a16a:	adds	r2, r2, r1
   3a16c:	ldr	r1, [sp, #252]	; 0xfc
   3a16e:	adc.w	r7, r1, r7
   3a172:	ldr	r1, [sp, #212]	; 0xd4
   3a174:	eor.w	r6, r7, r1
   3a178:	ldr	r1, [sp, #208]	; 0xd0
   3a17a:	adds	r3, r3, r6
   3a17c:	eor.w	r1, r2, r1
   3a180:	eor.w	r4, r3, r4
   3a184:	adc.w	r0, r1, r0
   3a188:	eors	r5, r0
   3a18a:	mov.w	r8, r4, lsr #24
   3a18e:	orr.w	ip, r8, r5, lsl #8
   3a192:	lsrs	r5, r5, #24
   3a194:	orr.w	lr, r5, r4, lsl #8
   3a198:	ldr	r4, [sp, #124]	; 0x7c
   3a19a:	adds	r2, r4, r2
   3a19c:	ldr	r4, [sp, #128]	; 0x80
   3a19e:	adc.w	r7, r4, r7
   3a1a2:	adds.w	r2, r2, ip
   3a1a6:	str	r2, [sp, #168]	; 0xa8
   3a1a8:	adc.w	r2, r7, lr
   3a1ac:	str	r2, [sp, #172]	; 0xac
   3a1ae:	ldr	r2, [sp, #168]	; 0xa8
   3a1b0:	eors	r6, r2
   3a1b2:	ldr	r2, [sp, #172]	; 0xac
   3a1b4:	eors	r1, r2
   3a1b6:	lsrs	r2, r6, #16
   3a1b8:	orr.w	r2, r2, r1, lsl #16
   3a1bc:	lsrs	r1, r1, #16
   3a1be:	str	r2, [sp, #208]	; 0xd0
   3a1c0:	orr.w	r2, r1, r6, lsl #16
   3a1c4:	str	r2, [sp, #212]	; 0xd4
   3a1c6:	ldr	r2, [sp, #208]	; 0xd0
   3a1c8:	ldr	r1, [sp, #164]	; 0xa4
   3a1ca:	adds	r3, r3, r2
   3a1cc:	str	r3, [sp, #200]	; 0xc8
   3a1ce:	ldr	r3, [sp, #212]	; 0xd4
   3a1d0:	adc.w	r3, r0, r3
   3a1d4:	str	r3, [sp, #204]	; 0xcc
   3a1d6:	ldr	r2, [sp, #204]	; 0xcc
   3a1d8:	ldr	r3, [sp, #200]	; 0xc8
   3a1da:	eor.w	lr, r2, lr
   3a1de:	eor.w	r3, r3, ip
   3a1e2:	mov.w	r2, lr, lsl #1
   3a1e6:	orr.w	r2, r2, r3, lsr #31
   3a1ea:	mov.w	ip, r3, lsl #1
   3a1ee:	str	r2, [sp, #244]	; 0xf4
   3a1f0:	orr.w	ip, ip, lr, lsr #31
   3a1f4:	ldr	r2, [sp, #160]	; 0xa0
   3a1f6:	ldr	r3, [sp, #116]	; 0x74
   3a1f8:	adds	r3, r3, r2
   3a1fa:	ldr	r2, [sp, #120]	; 0x78
   3a1fc:	adc.w	lr, r2, r1
   3a200:	ldr	r2, [sp, #240]	; 0xf0
   3a202:	ldr	r1, [sp, #180]	; 0xb4
   3a204:	adds	r3, r3, r2
   3a206:	ldr	r2, [sp, #248]	; 0xf8
   3a208:	adc.w	lr, lr, r2
   3a20c:	ldr	r2, [sp, #236]	; 0xec
   3a20e:	eor.w	r6, lr, r2
   3a212:	ldr	r2, [sp, #232]	; 0xe8
   3a214:	eor.w	r0, r3, r2
   3a218:	ldr	r2, [sp, #176]	; 0xb0
   3a21a:	adds	r2, r2, r6
   3a21c:	adc.w	r5, r1, r0
   3a220:	ldr	r1, [sp, #240]	; 0xf0
   3a222:	eor.w	r8, r2, r1
   3a226:	ldr	r1, [sp, #248]	; 0xf8
   3a228:	eor.w	r4, r5, r1
   3a22c:	mov.w	r9, r8, lsr #24
   3a230:	orr.w	r1, r9, r4, lsl #8
   3a234:	lsrs	r4, r4, #24
   3a236:	orr.w	r7, r4, r8, lsl #8
   3a23a:	ldr	r4, [sp, #108]	; 0x6c
   3a23c:	adds	r3, r4, r3
   3a23e:	ldr	r4, [sp, #112]	; 0x70
   3a240:	adc.w	lr, r4, lr
   3a244:	adds	r3, r3, r1
   3a246:	str	r3, [sp, #160]	; 0xa0
   3a248:	adc.w	r3, lr, r7
   3a24c:	str	r3, [sp, #164]	; 0xa4
   3a24e:	ldr	r3, [sp, #160]	; 0xa0
   3a250:	eors	r6, r3
   3a252:	ldr	r3, [sp, #164]	; 0xa4
   3a254:	eors	r0, r3
   3a256:	lsrs	r3, r6, #16
   3a258:	orr.w	r3, r3, r0, lsl #16
   3a25c:	lsrs	r0, r0, #16
   3a25e:	str	r3, [sp, #232]	; 0xe8
   3a260:	orr.w	r3, r0, r6, lsl #16
   3a264:	str	r3, [sp, #236]	; 0xec
   3a266:	ldr	r3, [sp, #232]	; 0xe8
   3a268:	adds	r2, r2, r3
   3a26a:	ldr	r3, [sp, #236]	; 0xec
   3a26c:	eor.w	r1, r1, r2
   3a270:	adc.w	r5, r3, r5
   3a274:	eors	r7, r5
   3a276:	lsls	r3, r7, #1
   3a278:	orr.w	r3, r3, r1, lsr #31
   3a27c:	lsls	r1, r1, #1
   3a27e:	str	r3, [sp, #248]	; 0xf8
   3a280:	orr.w	r3, r1, r7, lsr #31
   3a284:	str	r3, [sp, #240]	; 0xf0
   3a286:	ldr	r3, [sp, #36]	; 0x24
   3a288:	ldr	r1, [sp, #144]	; 0x90
   3a28a:	ldr	r0, [sp, #148]	; 0x94
   3a28c:	adds	r1, r3, r1
   3a28e:	ldr	r3, [sp, #40]	; 0x28
   3a290:	ldr	r4, [sp, #216]	; 0xd8
   3a292:	adc.w	sl, r3, r0
   3a296:	ldr	r3, [sp, #216]	; 0xd8
   3a298:	ldr	r0, [sp, #188]	; 0xbc
   3a29a:	adds	r1, r1, r3
   3a29c:	ldr	r3, [sp, #256]	; 0x100
   3a29e:	adc.w	sl, sl, r3
   3a2a2:	ldr	r3, [sp, #224]	; 0xe0
   3a2a4:	eor.w	lr, sl, r3
   3a2a8:	ldr	r3, [sp, #220]	; 0xdc
   3a2aa:	eor.w	r6, r1, r3
   3a2ae:	ldr	r3, [sp, #184]	; 0xb8
   3a2b0:	adds.w	r3, r3, lr
   3a2b4:	eor.w	r8, r3, r4
   3a2b8:	ldr	r4, [sp, #256]	; 0x100
   3a2ba:	adcs	r0, r6
   3a2bc:	eor.w	r7, r0, r4
   3a2c0:	mov.w	fp, r8, lsr #24
   3a2c4:	orr.w	r4, fp, r7, lsl #8
   3a2c8:	lsrs	r7, r7, #24
   3a2ca:	orr.w	r9, r7, r8, lsl #8
   3a2ce:	ldr	r7, [sp, #84]	; 0x54
   3a2d0:	adds	r1, r7, r1
   3a2d2:	ldr	r7, [sp, #88]	; 0x58
   3a2d4:	adc.w	sl, r7, sl
   3a2d8:	adds	r1, r1, r4
   3a2da:	str	r1, [sp, #144]	; 0x90
   3a2dc:	adc.w	r1, sl, r9
   3a2e0:	str	r1, [sp, #148]	; 0x94
   3a2e2:	ldr	r1, [sp, #144]	; 0x90
   3a2e4:	eor.w	lr, r1, lr
   3a2e8:	ldr	r1, [sp, #148]	; 0x94
   3a2ea:	eors	r6, r1
   3a2ec:	mov.w	r1, lr, lsr #16
   3a2f0:	orr.w	r8, r1, r6, lsl #16
   3a2f4:	lsrs	r6, r6, #16
   3a2f6:	adds.w	r3, r3, r8
   3a2fa:	orr.w	sl, r6, lr, lsl #16
   3a2fe:	adc.w	r0, r0, sl
   3a302:	eors	r4, r3
   3a304:	eor.w	r9, r0, r9
   3a308:	ldr	r6, [sp, #156]	; 0x9c
   3a30a:	mov.w	r1, r9, lsl #1
   3a30e:	orr.w	r1, r1, r4, lsr #31
   3a312:	lsls	r4, r4, #1
   3a314:	orr.w	fp, r4, r9, lsr #31
   3a318:	str	r1, [sp, #216]	; 0xd8
   3a31a:	ldr	r4, [sp, #152]	; 0x98
   3a31c:	ldr	r1, [sp, #4]
   3a31e:	adds	r1, r1, r4
   3a320:	ldr	r4, [sp, #8]
   3a322:	adc.w	r9, r4, r6
   3a326:	ldr	r4, [sp, #244]	; 0xf4
   3a328:	adds.w	r1, r1, ip
   3a32c:	adc.w	r9, r9, r4
   3a330:	eor.w	r7, r1, r8
   3a334:	eor.w	lr, r9, sl
   3a338:	adds.w	r2, r2, lr
   3a33c:	adc.w	r5, r7, r5
   3a340:	eor.w	ip, r2, ip
   3a344:	eor.w	r6, r5, r4
   3a348:	mov.w	sl, ip, lsr #24
   3a34c:	orr.w	r4, sl, r6, lsl #8
   3a350:	lsrs	r6, r6, #24
   3a352:	orr.w	r8, r6, ip, lsl #8
   3a356:	ldr	r6, [sp, #60]	; 0x3c
   3a358:	adds	r1, r6, r1
   3a35a:	ldr	r6, [sp, #64]	; 0x40
   3a35c:	adc.w	r9, r6, r9
   3a360:	adds	r1, r1, r4
   3a362:	str	r1, [sp, #152]	; 0x98
   3a364:	adc.w	r1, r9, r8
   3a368:	str	r1, [sp, #156]	; 0x9c
   3a36a:	ldr	r1, [sp, #152]	; 0x98
   3a36c:	eor.w	lr, r1, lr
   3a370:	ldr	r1, [sp, #156]	; 0x9c
   3a372:	eors	r7, r1
   3a374:	mov.w	r1, lr, lsr #16
   3a378:	orr.w	r1, r1, r7, lsl #16
   3a37c:	lsrs	r7, r7, #16
   3a37e:	str	r1, [sp, #220]	; 0xdc
   3a380:	orr.w	r1, r7, lr, lsl #16
   3a384:	str	r1, [sp, #224]	; 0xe0
   3a386:	ldr	r1, [sp, #220]	; 0xdc
   3a388:	adds	r2, r2, r1
   3a38a:	str	r2, [sp, #176]	; 0xb0
   3a38c:	ldr	r2, [sp, #224]	; 0xe0
   3a38e:	ldr	r1, [sp, #168]	; 0xa8
   3a390:	adc.w	r2, r5, r2
   3a394:	str	r2, [sp, #180]	; 0xb4
   3a396:	ldr	r2, [sp, #176]	; 0xb0
   3a398:	eors	r4, r2
   3a39a:	ldr	r2, [sp, #180]	; 0xb4
   3a39c:	eor.w	r8, r2, r8
   3a3a0:	mov.w	r2, r8, lsl #1
   3a3a4:	orr.w	r2, r2, r4, lsr #31
   3a3a8:	lsls	r4, r4, #1
   3a3aa:	str	r2, [sp, #252]	; 0xfc
   3a3ac:	orr.w	r2, r4, r8, lsr #31
   3a3b0:	str	r2, [sp, #244]	; 0xf4
   3a3b2:	ldr	r2, [sp, #52]	; 0x34
   3a3b4:	ldr	r4, [sp, #172]	; 0xac
   3a3b6:	adds	r2, r2, r1
   3a3b8:	ldr	r1, [sp, #56]	; 0x38
   3a3ba:	adc.w	r7, r1, r4
   3a3be:	ldr	r1, [sp, #240]	; 0xf0
   3a3c0:	adds	r2, r2, r1
   3a3c2:	ldr	r1, [sp, #248]	; 0xf8
   3a3c4:	adc.w	r7, r1, r7
   3a3c8:	ldr	r1, [sp, #260]	; 0x104
   3a3ca:	eor.w	r4, r7, r1
   3a3ce:	ldr	r1, [sp, #228]	; 0xe4
   3a3d0:	adds	r3, r3, r4
   3a3d2:	eor.w	r9, r2, r1
   3a3d6:	ldr	r1, [sp, #240]	; 0xf0
   3a3d8:	adc.w	r0, r0, r9
   3a3dc:	eor.w	ip, r3, r1
   3a3e0:	ldr	r1, [sp, #248]	; 0xf8
   3a3e2:	eor.w	r5, r0, r1
   3a3e6:	mov.w	lr, ip, lsr #24
   3a3ea:	orr.w	r1, lr, r5, lsl #8
   3a3ee:	lsrs	r5, r5, #24
   3a3f0:	orr.w	r6, r5, ip, lsl #8
   3a3f4:	ldr	r5, [sp, #28]
   3a3f6:	adds	r2, r5, r2
   3a3f8:	ldr	r5, [sp, #32]
   3a3fa:	adc.w	r7, r5, r7
   3a3fe:	adds	r2, r2, r1
   3a400:	str	r2, [sp, #168]	; 0xa8
   3a402:	adc.w	r2, r7, r6
   3a406:	str	r2, [sp, #172]	; 0xac
   3a408:	ldr	r2, [sp, #168]	; 0xa8
   3a40a:	eors	r4, r2
   3a40c:	ldr	r2, [sp, #172]	; 0xac
   3a40e:	eor.w	r2, r2, r9
   3a412:	lsrs	r5, r4, #16
   3a414:	orr.w	r5, r5, r2, lsl #16
   3a418:	mov.w	r9, r2, lsr #16
   3a41c:	orr.w	r9, r9, r4, lsl #16
   3a420:	adds	r3, r3, r5
   3a422:	str	r3, [sp, #184]	; 0xb8
   3a424:	adc.w	r3, r0, r9
   3a428:	str	r3, [sp, #188]	; 0xbc
   3a42a:	ldr	r3, [sp, #184]	; 0xb8
   3a42c:	ldr	r2, [sp, #160]	; 0xa0
   3a42e:	eors	r1, r3
   3a430:	ldr	r3, [sp, #188]	; 0xbc
   3a432:	str	r5, [sp, #228]	; 0xe4
   3a434:	eors	r6, r3
   3a436:	lsls	r3, r6, #1
   3a438:	orr.w	r3, r3, r1, lsr #31
   3a43c:	lsls	r1, r1, #1
   3a43e:	str	r3, [sp, #248]	; 0xf8
   3a440:	orr.w	r3, r1, r6, lsr #31
   3a444:	str	r3, [sp, #240]	; 0xf0
   3a446:	ldr	r3, [sp, #76]	; 0x4c
   3a448:	adds	r3, r3, r2
   3a44a:	ldr	r2, [sp, #80]	; 0x50
   3a44c:	ldr	r1, [sp, #164]	; 0xa4
   3a44e:	ldr	r0, [sp, #196]	; 0xc4
   3a450:	adc.w	ip, r2, r1
   3a454:	ldr	r2, [sp, #216]	; 0xd8
   3a456:	adds.w	r3, r3, fp
   3a45a:	adc.w	ip, ip, r2
   3a45e:	ldr	r2, [sp, #212]	; 0xd4
   3a460:	eor.w	r7, ip, r2
   3a464:	ldr	r2, [sp, #208]	; 0xd0
   3a466:	eor.w	r1, r3, r2
   3a46a:	ldr	r2, [sp, #192]	; 0xc0
   3a46c:	adds	r2, r2, r7
   3a46e:	adc.w	r5, r0, r1
   3a472:	ldr	r0, [sp, #216]	; 0xd8
   3a474:	eor.w	fp, r2, fp
   3a478:	eors	r0, r5
   3a47a:	mov.w	r4, fp, lsr #24
   3a47e:	orr.w	r8, r4, r0, lsl #8
   3a482:	lsrs	r0, r0, #24
   3a484:	orr.w	r6, r0, fp, lsl #8
   3a488:	ldr	r0, [sp, #20]
   3a48a:	ldr	r4, [sp, #264]	; 0x108
   3a48c:	adds	r3, r0, r3
   3a48e:	ldr	r0, [sp, #24]
   3a490:	adc.w	ip, r0, ip
   3a494:	adds.w	r3, r3, r8
   3a498:	str	r3, [sp, #160]	; 0xa0
   3a49a:	adc.w	r3, ip, r6
   3a49e:	str	r3, [sp, #164]	; 0xa4
   3a4a0:	ldr	r3, [sp, #160]	; 0xa0
   3a4a2:	ldr	r0, [sp, #148]	; 0x94
   3a4a4:	eors	r7, r3
   3a4a6:	ldr	r3, [sp, #164]	; 0xa4
   3a4a8:	eors	r1, r3
   3a4aa:	lsrs	r3, r7, #16
   3a4ac:	orr.w	r3, r3, r1, lsl #16
   3a4b0:	lsrs	r1, r1, #16
   3a4b2:	str	r3, [sp, #208]	; 0xd0
   3a4b4:	orr.w	r3, r1, r7, lsl #16
   3a4b8:	str	r3, [sp, #212]	; 0xd4
   3a4ba:	ldr	r3, [sp, #208]	; 0xd0
   3a4bc:	ldr	r1, [sp, #144]	; 0x90
   3a4be:	adds	r2, r2, r3
   3a4c0:	ldr	r3, [sp, #212]	; 0xd4
   3a4c2:	eor.w	r8, r2, r8
   3a4c6:	adc.w	r5, r3, r5
   3a4ca:	eors	r6, r5
   3a4cc:	lsls	r3, r6, #1
   3a4ce:	orr.w	r3, r3, r8, lsr #31
   3a4d2:	mov.w	r8, r8, lsl #1
   3a4d6:	str	r3, [sp, #256]	; 0x100
   3a4d8:	orr.w	r3, r8, r6, lsr #31
   3a4dc:	str	r3, [sp, #216]	; 0xd8
   3a4de:	ldr	r3, [sp, #68]	; 0x44
   3a4e0:	adds	r1, r3, r1
   3a4e2:	ldr	r3, [sp, #72]	; 0x48
   3a4e4:	adc.w	sl, r3, r0
   3a4e8:	ldr	r3, [sp, #264]	; 0x108
   3a4ea:	ldr	r0, [sp, #204]	; 0xcc
   3a4ec:	adds	r1, r1, r3
   3a4ee:	ldr	r3, [sp, #268]	; 0x10c
   3a4f0:	adc.w	sl, sl, r3
   3a4f4:	ldr	r3, [sp, #236]	; 0xec
   3a4f6:	eor.w	lr, sl, r3
   3a4fa:	ldr	r3, [sp, #232]	; 0xe8
   3a4fc:	eor.w	r7, r1, r3
   3a500:	ldr	r3, [sp, #200]	; 0xc8
   3a502:	adds.w	r3, r3, lr
   3a506:	eor.w	r6, r3, r4
   3a50a:	ldr	r4, [sp, #268]	; 0x10c
   3a50c:	adcs	r0, r7
   3a50e:	eor.w	ip, r0, r4
   3a512:	mov.w	fp, r6, lsr #24
   3a516:	orr.w	r4, fp, ip, lsl #8
   3a51a:	mov.w	ip, ip, lsr #24
   3a51e:	orr.w	r8, ip, r6, lsl #8
   3a522:	ldr	r6, [sp, #92]	; 0x5c
   3a524:	adds	r1, r6, r1
   3a526:	ldr	r6, [sp, #96]	; 0x60
   3a528:	adc.w	sl, r6, sl
   3a52c:	adds	r1, r1, r4
   3a52e:	str	r1, [sp, #144]	; 0x90
   3a530:	adc.w	r1, sl, r8
   3a534:	str	r1, [sp, #148]	; 0x94
   3a536:	ldr	r1, [sp, #144]	; 0x90
   3a538:	eor.w	lr, r1, lr
   3a53c:	ldr	r1, [sp, #148]	; 0x94
   3a53e:	eors	r7, r1
   3a540:	mov.w	r1, lr, lsr #16
   3a544:	orr.w	r1, r1, r7, lsl #16
   3a548:	lsrs	r7, r7, #16
   3a54a:	str	r1, [sp, #232]	; 0xe8
   3a54c:	orr.w	r1, r7, lr, lsl #16
   3a550:	str	r1, [sp, #236]	; 0xec
   3a552:	ldr	r1, [sp, #232]	; 0xe8
   3a554:	ldr	r7, [sp, #156]	; 0x9c
   3a556:	adds	r3, r3, r1
   3a558:	ldr	r1, [sp, #236]	; 0xec
   3a55a:	eor.w	r4, r4, r3
   3a55e:	adc.w	r0, r1, r0
   3a562:	eor.w	r8, r0, r8
   3a566:	mov.w	r1, r8, lsl #1
   3a56a:	orr.w	r6, r1, r4, lsr #31
   3a56e:	lsls	r4, r4, #1
   3a570:	orr.w	fp, r4, r8, lsr #31
   3a574:	ldr	r1, [sp, #108]	; 0x6c
   3a576:	ldr	r4, [sp, #152]	; 0x98
   3a578:	adds	r1, r1, r4
   3a57a:	ldr	r4, [sp, #112]	; 0x70
   3a57c:	adc.w	sl, r4, r7
   3a580:	adds.w	r1, r1, fp
   3a584:	ldr	r4, [sp, #228]	; 0xe4
   3a586:	adc.w	sl, sl, r6
   3a58a:	eor.w	lr, sl, r9
   3a58e:	adds.w	r2, r2, lr
   3a592:	eor.w	r7, r1, r4
   3a596:	adc.w	r5, r7, r5
   3a59a:	eor.w	fp, r2, fp
   3a59e:	eor.w	ip, r5, r6
   3a5a2:	mov.w	r4, fp, lsr #24
   3a5a6:	orr.w	r6, r4, ip, lsl #8
   3a5aa:	ldr	r4, [sp, #92]	; 0x5c
   3a5ac:	mov.w	ip, ip, lsr #24
   3a5b0:	adds	r1, r4, r1
   3a5b2:	ldr	r4, [sp, #96]	; 0x60
   3a5b4:	orr.w	r8, ip, fp, lsl #8
   3a5b8:	adc.w	sl, r4, sl
   3a5bc:	adds	r1, r1, r6
   3a5be:	str	r1, [sp, #152]	; 0x98
   3a5c0:	adc.w	r1, sl, r8
   3a5c4:	str	r1, [sp, #156]	; 0x9c
   3a5c6:	ldr	r1, [sp, #152]	; 0x98
   3a5c8:	eor.w	lr, r1, lr
   3a5cc:	ldr	r1, [sp, #156]	; 0x9c
   3a5ce:	eors	r7, r1
   3a5d0:	mov.w	r1, lr, lsr #16
   3a5d4:	orr.w	r1, r1, r7, lsl #16
   3a5d8:	lsrs	r7, r7, #16
   3a5da:	str	r1, [sp, #228]	; 0xe4
   3a5dc:	orr.w	r1, r7, lr, lsl #16
   3a5e0:	str	r1, [sp, #260]	; 0x104
   3a5e2:	ldr	r1, [sp, #228]	; 0xe4
   3a5e4:	adds	r2, r2, r1
   3a5e6:	str	r2, [sp, #192]	; 0xc0
   3a5e8:	ldr	r2, [sp, #260]	; 0x104
   3a5ea:	ldr	r1, [sp, #168]	; 0xa8
   3a5ec:	adc.w	r2, r5, r2
   3a5f0:	str	r2, [sp, #196]	; 0xc4
   3a5f2:	ldr	r2, [sp, #192]	; 0xc0
   3a5f4:	eors	r6, r2
   3a5f6:	ldr	r2, [sp, #196]	; 0xc4
   3a5f8:	eor.w	r8, r2, r8
   3a5fc:	mov.w	r2, r8, lsl #1
   3a600:	orr.w	r2, r2, r6, lsr #31
   3a604:	lsls	r6, r6, #1
   3a606:	str	r2, [sp, #268]	; 0x10c
   3a608:	orr.w	r2, r6, r8, lsr #31
   3a60c:	str	r2, [sp, #264]	; 0x108
   3a60e:	ldr	r2, [sp, #60]	; 0x3c
   3a610:	adds	r2, r2, r1
   3a612:	ldr	r1, [sp, #64]	; 0x40
   3a614:	ldr	r4, [sp, #172]	; 0xac
   3a616:	ldr	r5, [sp, #252]	; 0xfc
   3a618:	adc.w	r7, r1, r4
   3a61c:	ldr	r1, [sp, #244]	; 0xf4
   3a61e:	ldr	r4, [sp, #244]	; 0xf4
   3a620:	adds	r2, r2, r1
   3a622:	ldr	r1, [sp, #252]	; 0xfc
   3a624:	adc.w	r7, r1, r7
   3a628:	ldr	r1, [sp, #212]	; 0xd4
   3a62a:	eor.w	r6, r7, r1
   3a62e:	ldr	r1, [sp, #208]	; 0xd0
   3a630:	adds	r3, r3, r6
   3a632:	eor.w	r1, r2, r1
   3a636:	eor.w	r4, r3, r4
   3a63a:	adc.w	r0, r1, r0
   3a63e:	eors	r5, r0
   3a640:	mov.w	r8, r4, lsr #24
   3a644:	orr.w	ip, r8, r5, lsl #8
   3a648:	lsrs	r5, r5, #24
   3a64a:	orr.w	lr, r5, r4, lsl #8
   3a64e:	ldr	r4, [sp, #116]	; 0x74
   3a650:	adds	r2, r4, r2
   3a652:	ldr	r4, [sp, #120]	; 0x78
   3a654:	adc.w	r7, r4, r7
   3a658:	adds.w	r2, r2, ip
   3a65c:	str	r2, [sp, #168]	; 0xa8
   3a65e:	adc.w	r2, r7, lr
   3a662:	str	r2, [sp, #172]	; 0xac
   3a664:	ldr	r2, [sp, #168]	; 0xa8
   3a666:	eors	r6, r2
   3a668:	ldr	r2, [sp, #172]	; 0xac
   3a66a:	eors	r1, r2
   3a66c:	lsrs	r2, r6, #16
   3a66e:	orr.w	r2, r2, r1, lsl #16
   3a672:	lsrs	r1, r1, #16
   3a674:	str	r2, [sp, #208]	; 0xd0
   3a676:	orr.w	r2, r1, r6, lsl #16
   3a67a:	str	r2, [sp, #212]	; 0xd4
   3a67c:	ldr	r2, [sp, #208]	; 0xd0
   3a67e:	ldr	r1, [sp, #164]	; 0xa4
   3a680:	adds	r3, r3, r2
   3a682:	str	r3, [sp, #200]	; 0xc8
   3a684:	ldr	r3, [sp, #212]	; 0xd4
   3a686:	adc.w	r3, r0, r3
   3a68a:	str	r3, [sp, #204]	; 0xcc
   3a68c:	ldr	r2, [sp, #204]	; 0xcc
   3a68e:	ldr	r3, [sp, #200]	; 0xc8
   3a690:	eor.w	lr, r2, lr
   3a694:	eor.w	r3, r3, ip
   3a698:	mov.w	r2, lr, lsl #1
   3a69c:	orr.w	r2, r2, r3, lsr #31
   3a6a0:	mov.w	ip, r3, lsl #1
   3a6a4:	str	r2, [sp, #244]	; 0xf4
   3a6a6:	orr.w	ip, ip, lr, lsr #31
   3a6aa:	ldr	r2, [sp, #160]	; 0xa0
   3a6ac:	ldr	r3, [sp, #100]	; 0x64
   3a6ae:	adds	r3, r3, r2
   3a6b0:	ldr	r2, [sp, #104]	; 0x68
   3a6b2:	adc.w	lr, r2, r1
   3a6b6:	ldr	r2, [sp, #240]	; 0xf0
   3a6b8:	adds	r3, r3, r2
   3a6ba:	ldr	r2, [sp, #248]	; 0xf8
   3a6bc:	adc.w	lr, lr, r2
   3a6c0:	ldr	r2, [sp, #236]	; 0xec
   3a6c2:	eor.w	r6, lr, r2
   3a6c6:	ldr	r2, [sp, #232]	; 0xe8
   3a6c8:	eor.w	r0, r3, r2
   3a6cc:	ldr	r2, [sp, #176]	; 0xb0
   3a6ce:	ldr	r1, [sp, #180]	; 0xb4
   3a6d0:	adds	r2, r2, r6
   3a6d2:	adc.w	r5, r1, r0
   3a6d6:	ldr	r1, [sp, #240]	; 0xf0
   3a6d8:	eor.w	r8, r2, r1
   3a6dc:	ldr	r1, [sp, #248]	; 0xf8
   3a6de:	eor.w	r4, r5, r1
   3a6e2:	mov.w	r9, r8, lsr #24
   3a6e6:	orr.w	r1, r9, r4, lsl #8
   3a6ea:	lsrs	r4, r4, #24
   3a6ec:	orr.w	r7, r4, r8, lsl #8
   3a6f0:	ldr	r4, [sp, #12]
   3a6f2:	adds	r3, r4, r3
   3a6f4:	ldr	r4, [sp, #16]
   3a6f6:	adc.w	lr, r4, lr
   3a6fa:	adds	r3, r3, r1
   3a6fc:	str	r3, [sp, #160]	; 0xa0
   3a6fe:	adc.w	r3, lr, r7
   3a702:	str	r3, [sp, #164]	; 0xa4
   3a704:	ldr	r3, [sp, #160]	; 0xa0
   3a706:	ldr	r4, [sp, #216]	; 0xd8
   3a708:	eors	r6, r3
   3a70a:	ldr	r3, [sp, #164]	; 0xa4
   3a70c:	eors	r0, r3
   3a70e:	lsrs	r3, r6, #16
   3a710:	orr.w	r3, r3, r0, lsl #16
   3a714:	lsrs	r0, r0, #16
   3a716:	str	r3, [sp, #232]	; 0xe8
   3a718:	orr.w	r3, r0, r6, lsl #16
   3a71c:	str	r3, [sp, #236]	; 0xec
   3a71e:	ldr	r3, [sp, #232]	; 0xe8
   3a720:	ldr	r0, [sp, #148]	; 0x94
   3a722:	adds	r2, r2, r3
   3a724:	ldr	r3, [sp, #236]	; 0xec
   3a726:	eor.w	r1, r1, r2
   3a72a:	adc.w	r5, r3, r5
   3a72e:	eors	r7, r5
   3a730:	lsls	r3, r7, #1
   3a732:	orr.w	r3, r3, r1, lsr #31
   3a736:	lsls	r1, r1, #1
   3a738:	str	r3, [sp, #248]	; 0xf8
   3a73a:	orr.w	r3, r1, r7, lsr #31
   3a73e:	ldr	r1, [sp, #144]	; 0x90
   3a740:	str	r3, [sp, #240]	; 0xf0
   3a742:	ldr	r3, [sp, #28]
   3a744:	adds	r1, r3, r1
   3a746:	ldr	r3, [sp, #32]
   3a748:	adc.w	sl, r3, r0
   3a74c:	ldr	r3, [sp, #216]	; 0xd8
   3a74e:	ldr	r0, [sp, #188]	; 0xbc
   3a750:	adds	r1, r1, r3
   3a752:	ldr	r3, [sp, #256]	; 0x100
   3a754:	adc.w	sl, sl, r3
   3a758:	ldr	r3, [sp, #224]	; 0xe0
   3a75a:	eor.w	lr, sl, r3
   3a75e:	ldr	r3, [sp, #220]	; 0xdc
   3a760:	eor.w	r6, r1, r3
   3a764:	ldr	r3, [sp, #184]	; 0xb8
   3a766:	adds.w	r3, r3, lr
   3a76a:	eor.w	r8, r3, r4
   3a76e:	ldr	r4, [sp, #256]	; 0x100
   3a770:	adcs	r0, r6
   3a772:	eor.w	r7, r0, r4
   3a776:	mov.w	fp, r8, lsr #24
   3a77a:	orr.w	r4, fp, r7, lsl #8
   3a77e:	lsrs	r7, r7, #24
   3a780:	orr.w	r9, r7, r8, lsl #8
   3a784:	ldr	r7, [sp, #76]	; 0x4c
   3a786:	adds	r1, r7, r1
   3a788:	ldr	r7, [sp, #80]	; 0x50
   3a78a:	adc.w	sl, r7, sl
   3a78e:	adds	r1, r1, r4
   3a790:	str	r1, [sp, #144]	; 0x90
   3a792:	adc.w	r1, sl, r9
   3a796:	str	r1, [sp, #148]	; 0x94
   3a798:	ldr	r1, [sp, #144]	; 0x90
   3a79a:	eor.w	lr, r1, lr
   3a79e:	ldr	r1, [sp, #148]	; 0x94
   3a7a0:	eors	r6, r1
   3a7a2:	mov.w	r1, lr, lsr #16
   3a7a6:	orr.w	r8, r1, r6, lsl #16
   3a7aa:	lsrs	r6, r6, #16
   3a7ac:	adds.w	r3, r3, r8
   3a7b0:	orr.w	sl, r6, lr, lsl #16
   3a7b4:	adc.w	r0, r0, sl
   3a7b8:	eors	r4, r3
   3a7ba:	eor.w	r9, r0, r9
   3a7be:	ldr	r6, [sp, #156]	; 0x9c
   3a7c0:	mov.w	r1, r9, lsl #1
   3a7c4:	orr.w	r1, r1, r4, lsr #31
   3a7c8:	lsls	r4, r4, #1
   3a7ca:	orr.w	fp, r4, r9, lsr #31
   3a7ce:	str	r1, [sp, #216]	; 0xd8
   3a7d0:	ldr	r4, [sp, #152]	; 0x98
   3a7d2:	ldr	r1, [sp, #44]	; 0x2c
   3a7d4:	adds	r1, r1, r4
   3a7d6:	ldr	r4, [sp, #48]	; 0x30
   3a7d8:	adc.w	r9, r4, r6
   3a7dc:	ldr	r4, [sp, #244]	; 0xf4
   3a7de:	adds.w	r1, r1, ip
   3a7e2:	adc.w	r9, r9, r4
   3a7e6:	eor.w	r7, r1, r8
   3a7ea:	eor.w	lr, r9, sl
   3a7ee:	adds.w	r2, r2, lr
   3a7f2:	adc.w	r5, r7, r5
   3a7f6:	eor.w	ip, r2, ip
   3a7fa:	eor.w	r6, r5, r4
   3a7fe:	mov.w	sl, ip, lsr #24
   3a802:	orr.w	r4, sl, r6, lsl #8
   3a806:	lsrs	r6, r6, #24
   3a808:	orr.w	r8, r6, ip, lsl #8
   3a80c:	ldr	r6, [sp, #4]
   3a80e:	adds	r1, r6, r1
   3a810:	ldr	r6, [sp, #8]
   3a812:	adc.w	r9, r6, r9
   3a816:	adds	r1, r1, r4
   3a818:	str	r1, [sp, #152]	; 0x98
   3a81a:	adc.w	r1, r9, r8
   3a81e:	str	r1, [sp, #156]	; 0x9c
   3a820:	ldr	r1, [sp, #152]	; 0x98
   3a822:	eor.w	lr, r1, lr
   3a826:	ldr	r1, [sp, #156]	; 0x9c
   3a828:	eors	r7, r1
   3a82a:	mov.w	r1, lr, lsr #16
   3a82e:	orr.w	r1, r1, r7, lsl #16
   3a832:	lsrs	r7, r7, #16
   3a834:	str	r1, [sp, #220]	; 0xdc
   3a836:	orr.w	r1, r7, lr, lsl #16
   3a83a:	str	r1, [sp, #224]	; 0xe0
   3a83c:	ldr	r1, [sp, #220]	; 0xdc
   3a83e:	adds	r2, r2, r1
   3a840:	str	r2, [sp, #176]	; 0xb0
   3a842:	ldr	r2, [sp, #224]	; 0xe0
   3a844:	ldr	r1, [sp, #168]	; 0xa8
   3a846:	adc.w	r2, r5, r2
   3a84a:	str	r2, [sp, #180]	; 0xb4
   3a84c:	ldr	r2, [sp, #176]	; 0xb0
   3a84e:	eors	r4, r2
   3a850:	ldr	r2, [sp, #180]	; 0xb4
   3a852:	eor.w	r8, r2, r8
   3a856:	mov.w	r2, r8, lsl #1
   3a85a:	orr.w	r2, r2, r4, lsr #31
   3a85e:	lsls	r4, r4, #1
   3a860:	str	r2, [sp, #252]	; 0xfc
   3a862:	orr.w	r2, r4, r8, lsr #31
   3a866:	str	r2, [sp, #244]	; 0xf4
   3a868:	ldr	r2, [sp, #124]	; 0x7c
   3a86a:	ldr	r4, [sp, #172]	; 0xac
   3a86c:	adds	r2, r2, r1
   3a86e:	ldr	r1, [sp, #128]	; 0x80
   3a870:	adc.w	r7, r1, r4
   3a874:	ldr	r1, [sp, #240]	; 0xf0
   3a876:	adds	r2, r2, r1
   3a878:	ldr	r1, [sp, #248]	; 0xf8
   3a87a:	adc.w	r7, r1, r7
   3a87e:	ldr	r1, [sp, #260]	; 0x104
   3a880:	eor.w	r4, r7, r1
   3a884:	ldr	r1, [sp, #228]	; 0xe4
   3a886:	adds	r3, r3, r4
   3a888:	eor.w	r9, r2, r1
   3a88c:	ldr	r1, [sp, #240]	; 0xf0
   3a88e:	adc.w	r0, r0, r9
   3a892:	eor.w	ip, r3, r1
   3a896:	ldr	r1, [sp, #248]	; 0xf8
   3a898:	eor.w	r5, r0, r1
   3a89c:	mov.w	lr, ip, lsr #24
   3a8a0:	orr.w	r1, lr, r5, lsl #8
   3a8a4:	lsrs	r5, r5, #24
   3a8a6:	orr.w	r6, r5, ip, lsl #8
   3a8aa:	ldr	r5, [sp, #36]	; 0x24
   3a8ac:	adds	r2, r5, r2
   3a8ae:	ldr	r5, [sp, #40]	; 0x28
   3a8b0:	adc.w	r7, r5, r7
   3a8b4:	adds	r2, r2, r1
   3a8b6:	str	r2, [sp, #168]	; 0xa8
   3a8b8:	adc.w	r2, r7, r6
   3a8bc:	str	r2, [sp, #172]	; 0xac
   3a8be:	ldr	r2, [sp, #168]	; 0xa8
   3a8c0:	eors	r4, r2
   3a8c2:	ldr	r2, [sp, #172]	; 0xac
   3a8c4:	eor.w	r2, r2, r9
   3a8c8:	lsrs	r5, r4, #16
   3a8ca:	orr.w	r5, r5, r2, lsl #16
   3a8ce:	mov.w	r9, r2, lsr #16
   3a8d2:	orr.w	r9, r9, r4, lsl #16
   3a8d6:	adds	r3, r3, r5
   3a8d8:	str	r3, [sp, #184]	; 0xb8
   3a8da:	adc.w	r3, r0, r9
   3a8de:	str	r3, [sp, #188]	; 0xbc
   3a8e0:	ldr	r3, [sp, #184]	; 0xb8
   3a8e2:	ldr	r2, [sp, #160]	; 0xa0
   3a8e4:	eors	r1, r3
   3a8e6:	ldr	r3, [sp, #188]	; 0xbc
   3a8e8:	ldr	r0, [sp, #196]	; 0xc4
   3a8ea:	eors	r6, r3
   3a8ec:	str	r5, [sp, #228]	; 0xe4
   3a8ee:	lsls	r3, r6, #1
   3a8f0:	orr.w	r3, r3, r1, lsr #31
   3a8f4:	lsls	r1, r1, #1
   3a8f6:	str	r3, [sp, #248]	; 0xf8
   3a8f8:	orr.w	r3, r1, r6, lsr #31
   3a8fc:	str	r3, [sp, #240]	; 0xf0
   3a8fe:	ldr	r3, [sp, #68]	; 0x44
   3a900:	ldr	r1, [sp, #164]	; 0xa4
   3a902:	adds	r3, r3, r2
   3a904:	ldr	r2, [sp, #72]	; 0x48
   3a906:	adc.w	ip, r2, r1
   3a90a:	ldr	r2, [sp, #216]	; 0xd8
   3a90c:	adds.w	r3, r3, fp
   3a910:	adc.w	ip, ip, r2
   3a914:	ldr	r2, [sp, #212]	; 0xd4
   3a916:	eor.w	r7, ip, r2
   3a91a:	ldr	r2, [sp, #208]	; 0xd0
   3a91c:	eor.w	r1, r3, r2
   3a920:	ldr	r2, [sp, #192]	; 0xc0
   3a922:	adds	r2, r2, r7
   3a924:	adc.w	r5, r0, r1
   3a928:	ldr	r0, [sp, #216]	; 0xd8
   3a92a:	eor.w	fp, r2, fp
   3a92e:	eors	r0, r5
   3a930:	mov.w	r4, fp, lsr #24
   3a934:	orr.w	r8, r4, r0, lsl #8
   3a938:	lsrs	r0, r0, #24
   3a93a:	orr.w	r6, r0, fp, lsl #8
   3a93e:	ldr	r0, [sp, #52]	; 0x34
   3a940:	adds	r3, r0, r3
   3a942:	ldr	r0, [sp, #56]	; 0x38
   3a944:	adc.w	ip, r0, ip
   3a948:	adds.w	r3, r3, r8
   3a94c:	str	r3, [sp, #160]	; 0xa0
   3a94e:	adc.w	r3, ip, r6
   3a952:	str	r3, [sp, #164]	; 0xa4
   3a954:	ldr	r3, [sp, #160]	; 0xa0
   3a956:	eors	r7, r3
   3a958:	ldr	r3, [sp, #164]	; 0xa4
   3a95a:	eors	r1, r3
   3a95c:	lsrs	r3, r7, #16
   3a95e:	orr.w	r3, r3, r1, lsl #16
   3a962:	lsrs	r1, r1, #16
   3a964:	str	r3, [sp, #208]	; 0xd0
   3a966:	orr.w	r3, r1, r7, lsl #16
   3a96a:	str	r3, [sp, #212]	; 0xd4
   3a96c:	ldr	r3, [sp, #208]	; 0xd0
   3a96e:	ldr	r1, [sp, #144]	; 0x90
   3a970:	adds	r2, r2, r3
   3a972:	ldr	r3, [sp, #212]	; 0xd4
   3a974:	eor.w	r8, r2, r8
   3a978:	ldr	r0, [sp, #148]	; 0x94
   3a97a:	adc.w	r5, r3, r5
   3a97e:	ldr	r4, [sp, #264]	; 0x108
   3a980:	eors	r6, r5
   3a982:	lsls	r3, r6, #1
   3a984:	orr.w	r3, r3, r8, lsr #31
   3a988:	mov.w	r8, r8, lsl #1
   3a98c:	str	r3, [sp, #256]	; 0x100
   3a98e:	orr.w	r3, r8, r6, lsr #31
   3a992:	str	r3, [sp, #216]	; 0xd8
   3a994:	ldr	r3, [sp, #20]
   3a996:	adds	r1, r3, r1
   3a998:	ldr	r3, [sp, #24]
   3a99a:	adc.w	sl, r3, r0
   3a99e:	ldr	r3, [sp, #264]	; 0x108
   3a9a0:	ldr	r0, [sp, #204]	; 0xcc
   3a9a2:	adds	r1, r1, r3
   3a9a4:	ldr	r3, [sp, #268]	; 0x10c
   3a9a6:	adc.w	sl, sl, r3
   3a9aa:	ldr	r3, [sp, #236]	; 0xec
   3a9ac:	eor.w	lr, sl, r3
   3a9b0:	ldr	r3, [sp, #232]	; 0xe8
   3a9b2:	eor.w	r7, r1, r3
   3a9b6:	ldr	r3, [sp, #200]	; 0xc8
   3a9b8:	adds.w	r3, r3, lr
   3a9bc:	eor.w	r6, r3, r4
   3a9c0:	ldr	r4, [sp, #268]	; 0x10c
   3a9c2:	adcs	r0, r7
   3a9c4:	eor.w	ip, r0, r4
   3a9c8:	mov.w	fp, r6, lsr #24
   3a9cc:	orr.w	r4, fp, ip, lsl #8
   3a9d0:	mov.w	ip, ip, lsr #24
   3a9d4:	orr.w	r8, ip, r6, lsl #8
   3a9d8:	ldr	r6, [sp, #84]	; 0x54
   3a9da:	adds	r1, r6, r1
   3a9dc:	ldr	r6, [sp, #88]	; 0x58
   3a9de:	adc.w	sl, r6, sl
   3a9e2:	adds	r1, r1, r4
   3a9e4:	str	r1, [sp, #144]	; 0x90
   3a9e6:	adc.w	r1, sl, r8
   3a9ea:	str	r1, [sp, #148]	; 0x94
   3a9ec:	ldr	r1, [sp, #144]	; 0x90
   3a9ee:	eor.w	lr, r1, lr
   3a9f2:	ldr	r1, [sp, #148]	; 0x94
   3a9f4:	eors	r7, r1
   3a9f6:	mov.w	r1, lr, lsr #16
   3a9fa:	orr.w	r1, r1, r7, lsl #16
   3a9fe:	lsrs	r7, r7, #16
   3aa00:	str	r1, [sp, #232]	; 0xe8
   3aa02:	orr.w	r1, r7, lr, lsl #16
   3aa06:	str	r1, [sp, #236]	; 0xec
   3aa08:	ldr	r1, [sp, #232]	; 0xe8
   3aa0a:	ldr	r7, [sp, #156]	; 0x9c
   3aa0c:	adds	r3, r3, r1
   3aa0e:	ldr	r1, [sp, #236]	; 0xec
   3aa10:	eor.w	r4, r4, r3
   3aa14:	adc.w	r0, r1, r0
   3aa18:	eor.w	r8, r0, r8
   3aa1c:	mov.w	r1, r8, lsl #1
   3aa20:	orr.w	r6, r1, r4, lsr #31
   3aa24:	lsls	r4, r4, #1
   3aa26:	orr.w	fp, r4, r8, lsr #31
   3aa2a:	ldr	r1, [sp, #52]	; 0x34
   3aa2c:	ldr	r4, [sp, #152]	; 0x98
   3aa2e:	adds	r1, r1, r4
   3aa30:	ldr	r4, [sp, #56]	; 0x38
   3aa32:	adc.w	sl, r4, r7
   3aa36:	adds.w	r1, r1, fp
   3aa3a:	adc.w	sl, sl, r6
   3aa3e:	ldr	r4, [sp, #228]	; 0xe4
   3aa40:	eor.w	lr, sl, r9
   3aa44:	adds.w	r2, r2, lr
   3aa48:	eor.w	r7, r1, r4
   3aa4c:	adc.w	r5, r7, r5
   3aa50:	eor.w	fp, r2, fp
   3aa54:	eor.w	ip, r5, r6
   3aa58:	mov.w	r4, fp, lsr #24
   3aa5c:	orr.w	r6, r4, ip, lsl #8
   3aa60:	ldr	r4, [sp, #124]	; 0x7c
   3aa62:	mov.w	ip, ip, lsr #24
   3aa66:	adds	r1, r4, r1
   3aa68:	ldr	r4, [sp, #128]	; 0x80
   3aa6a:	orr.w	r8, ip, fp, lsl #8
   3aa6e:	adc.w	sl, r4, sl
   3aa72:	adds	r1, r1, r6
   3aa74:	str	r1, [sp, #152]	; 0x98
   3aa76:	adc.w	r1, sl, r8
   3aa7a:	str	r1, [sp, #156]	; 0x9c
   3aa7c:	ldr	r1, [sp, #152]	; 0x98
   3aa7e:	ldr	r4, [sp, #172]	; 0xac
   3aa80:	eor.w	lr, r1, lr
   3aa84:	ldr	r1, [sp, #156]	; 0x9c
   3aa86:	eors	r7, r1
   3aa88:	mov.w	r1, lr, lsr #16
   3aa8c:	orr.w	r1, r1, r7, lsl #16
   3aa90:	lsrs	r7, r7, #16
   3aa92:	str	r1, [sp, #228]	; 0xe4
   3aa94:	orr.w	r1, r7, lr, lsl #16
   3aa98:	str	r1, [sp, #260]	; 0x104
   3aa9a:	ldr	r1, [sp, #228]	; 0xe4
   3aa9c:	adds	r2, r2, r1
   3aa9e:	str	r2, [sp, #192]	; 0xc0
   3aaa0:	ldr	r2, [sp, #260]	; 0x104
   3aaa2:	ldr	r1, [sp, #168]	; 0xa8
   3aaa4:	adc.w	r2, r5, r2
   3aaa8:	str	r2, [sp, #196]	; 0xc4
   3aaaa:	ldr	r2, [sp, #192]	; 0xc0
   3aaac:	ldr	r5, [sp, #252]	; 0xfc
   3aaae:	eors	r6, r2
   3aab0:	ldr	r2, [sp, #196]	; 0xc4
   3aab2:	eor.w	r8, r2, r8
   3aab6:	mov.w	r2, r8, lsl #1
   3aaba:	orr.w	r2, r2, r6, lsr #31
   3aabe:	lsls	r6, r6, #1
   3aac0:	str	r2, [sp, #268]	; 0x10c
   3aac2:	orr.w	r2, r6, r8, lsr #31
   3aac6:	str	r2, [sp, #264]	; 0x108
   3aac8:	ldr	r2, [sp, #116]	; 0x74
   3aaca:	adds	r2, r2, r1
   3aacc:	ldr	r1, [sp, #120]	; 0x78
   3aace:	adc.w	r7, r1, r4
   3aad2:	ldr	r1, [sp, #244]	; 0xf4
   3aad4:	ldr	r4, [sp, #244]	; 0xf4
   3aad6:	adds	r2, r2, r1
   3aad8:	ldr	r1, [sp, #252]	; 0xfc
   3aada:	adc.w	r7, r1, r7
   3aade:	ldr	r1, [sp, #212]	; 0xd4
   3aae0:	eor.w	r6, r7, r1
   3aae4:	ldr	r1, [sp, #208]	; 0xd0
   3aae6:	adds	r3, r3, r6
   3aae8:	eor.w	r1, r2, r1
   3aaec:	eor.w	r4, r3, r4
   3aaf0:	adc.w	r0, r1, r0
   3aaf4:	eors	r5, r0
   3aaf6:	mov.w	r8, r4, lsr #24
   3aafa:	orr.w	ip, r8, r5, lsl #8
   3aafe:	lsrs	r5, r5, #24
   3ab00:	orr.w	lr, r5, r4, lsl #8
   3ab04:	ldr	r4, [sp, #76]	; 0x4c
   3ab06:	adds	r2, r4, r2
   3ab08:	ldr	r4, [sp, #80]	; 0x50
   3ab0a:	adc.w	r7, r4, r7
   3ab0e:	adds.w	r2, r2, ip
   3ab12:	str	r2, [sp, #168]	; 0xa8
   3ab14:	adc.w	r2, r7, lr
   3ab18:	str	r2, [sp, #172]	; 0xac
   3ab1a:	ldr	r2, [sp, #168]	; 0xa8
   3ab1c:	eors	r6, r2
   3ab1e:	ldr	r2, [sp, #172]	; 0xac
   3ab20:	eors	r1, r2
   3ab22:	lsrs	r2, r6, #16
   3ab24:	orr.w	r2, r2, r1, lsl #16
   3ab28:	lsrs	r1, r1, #16
   3ab2a:	str	r2, [sp, #208]	; 0xd0
   3ab2c:	orr.w	r2, r1, r6, lsl #16
   3ab30:	str	r2, [sp, #212]	; 0xd4
   3ab32:	ldr	r2, [sp, #208]	; 0xd0
   3ab34:	ldr	r1, [sp, #164]	; 0xa4
   3ab36:	adds	r3, r3, r2
   3ab38:	str	r3, [sp, #200]	; 0xc8
   3ab3a:	ldr	r3, [sp, #212]	; 0xd4
   3ab3c:	adc.w	r3, r0, r3
   3ab40:	str	r3, [sp, #204]	; 0xcc
   3ab42:	ldr	r2, [sp, #204]	; 0xcc
   3ab44:	ldr	r3, [sp, #200]	; 0xc8
   3ab46:	eor.w	lr, r2, lr
   3ab4a:	eor.w	r3, r3, ip
   3ab4e:	mov.w	r2, lr, lsl #1
   3ab52:	orr.w	r2, r2, r3, lsr #31
   3ab56:	mov.w	ip, r3, lsl #1
   3ab5a:	str	r2, [sp, #244]	; 0xf4
   3ab5c:	orr.w	ip, ip, lr, lsr #31
   3ab60:	ldr	r2, [sp, #160]	; 0xa0
   3ab62:	ldr	r3, [sp, #92]	; 0x5c
   3ab64:	adds	r3, r3, r2
   3ab66:	ldr	r2, [sp, #96]	; 0x60
   3ab68:	adc.w	lr, r2, r1
   3ab6c:	ldr	r2, [sp, #240]	; 0xf0
   3ab6e:	ldr	r1, [sp, #180]	; 0xb4
   3ab70:	adds	r3, r3, r2
   3ab72:	ldr	r2, [sp, #248]	; 0xf8
   3ab74:	adc.w	lr, lr, r2
   3ab78:	ldr	r2, [sp, #236]	; 0xec
   3ab7a:	eor.w	r6, lr, r2
   3ab7e:	ldr	r2, [sp, #232]	; 0xe8
   3ab80:	eor.w	r0, r3, r2
   3ab84:	ldr	r2, [sp, #176]	; 0xb0
   3ab86:	adds	r2, r2, r6
   3ab88:	adc.w	r5, r1, r0
   3ab8c:	ldr	r1, [sp, #240]	; 0xf0
   3ab8e:	eor.w	r8, r2, r1
   3ab92:	ldr	r1, [sp, #248]	; 0xf8
   3ab94:	eor.w	r4, r5, r1
   3ab98:	mov.w	r9, r8, lsr #24
   3ab9c:	orr.w	r1, r9, r4, lsl #8
   3aba0:	lsrs	r4, r4, #24
   3aba2:	orr.w	r7, r4, r8, lsl #8
   3aba6:	ldr	r4, [sp, #28]
   3aba8:	adds	r3, r4, r3
   3abaa:	ldr	r4, [sp, #32]
   3abac:	adc.w	lr, r4, lr
   3abb0:	adds	r3, r3, r1
   3abb2:	str	r3, [sp, #160]	; 0xa0
   3abb4:	adc.w	r3, lr, r7
   3abb8:	str	r3, [sp, #164]	; 0xa4
   3abba:	ldr	r3, [sp, #160]	; 0xa0
   3abbc:	eors	r6, r3
   3abbe:	ldr	r3, [sp, #164]	; 0xa4
   3abc0:	eors	r0, r3
   3abc2:	lsrs	r3, r6, #16
   3abc4:	orr.w	r3, r3, r0, lsl #16
   3abc8:	lsrs	r0, r0, #16
   3abca:	str	r3, [sp, #232]	; 0xe8
   3abcc:	orr.w	r3, r0, r6, lsl #16
   3abd0:	str	r3, [sp, #236]	; 0xec
   3abd2:	ldr	r3, [sp, #232]	; 0xe8
   3abd4:	adds	r2, r2, r3
   3abd6:	ldr	r3, [sp, #236]	; 0xec
   3abd8:	eor.w	r1, r1, r2
   3abdc:	adc.w	r5, r3, r5
   3abe0:	eors	r7, r5
   3abe2:	lsls	r3, r7, #1
   3abe4:	orr.w	r3, r3, r1, lsr #31
   3abe8:	lsls	r1, r1, #1
   3abea:	str	r3, [sp, #248]	; 0xf8
   3abec:	orr.w	r3, r1, r7, lsr #31
   3abf0:	str	r3, [sp, #240]	; 0xf0
   3abf2:	ldr	r3, [sp, #4]
   3abf4:	ldr	r1, [sp, #144]	; 0x90
   3abf6:	ldr	r0, [sp, #148]	; 0x94
   3abf8:	adds	r1, r3, r1
   3abfa:	ldr	r3, [sp, #8]
   3abfc:	ldr	r4, [sp, #216]	; 0xd8
   3abfe:	adc.w	sl, r3, r0
   3ac02:	ldr	r3, [sp, #216]	; 0xd8
   3ac04:	ldr	r0, [sp, #188]	; 0xbc
   3ac06:	adds	r1, r1, r3
   3ac08:	ldr	r3, [sp, #256]	; 0x100
   3ac0a:	adc.w	sl, sl, r3
   3ac0e:	ldr	r3, [sp, #224]	; 0xe0
   3ac10:	eor.w	lr, sl, r3
   3ac14:	ldr	r3, [sp, #220]	; 0xdc
   3ac16:	eor.w	r6, r1, r3
   3ac1a:	ldr	r3, [sp, #184]	; 0xb8
   3ac1c:	adds.w	r3, r3, lr
   3ac20:	eor.w	r8, r3, r4
   3ac24:	ldr	r4, [sp, #256]	; 0x100
   3ac26:	adcs	r0, r6
   3ac28:	eor.w	r7, r0, r4
   3ac2c:	mov.w	fp, r8, lsr #24
   3ac30:	orr.w	r4, fp, r7, lsl #8
   3ac34:	lsrs	r7, r7, #24
   3ac36:	orr.w	r9, r7, r8, lsl #8
   3ac3a:	ldr	r7, [sp, #68]	; 0x44
   3ac3c:	adds	r1, r7, r1
   3ac3e:	ldr	r7, [sp, #72]	; 0x48
   3ac40:	adc.w	sl, r7, sl
   3ac44:	adds	r1, r1, r4
   3ac46:	str	r1, [sp, #144]	; 0x90
   3ac48:	adc.w	r1, sl, r9
   3ac4c:	str	r1, [sp, #148]	; 0x94
   3ac4e:	ldr	r1, [sp, #144]	; 0x90
   3ac50:	eor.w	lr, r1, lr
   3ac54:	ldr	r1, [sp, #148]	; 0x94
   3ac56:	eors	r6, r1
   3ac58:	mov.w	r1, lr, lsr #16
   3ac5c:	orr.w	r8, r1, r6, lsl #16
   3ac60:	lsrs	r6, r6, #16
   3ac62:	adds.w	r3, r3, r8
   3ac66:	orr.w	sl, r6, lr, lsl #16
   3ac6a:	adc.w	r0, r0, sl
   3ac6e:	eors	r4, r3
   3ac70:	eor.w	r9, r0, r9
   3ac74:	ldr	r6, [sp, #156]	; 0x9c
   3ac76:	mov.w	r1, r9, lsl #1
   3ac7a:	orr.w	r1, r1, r4, lsr #31
   3ac7e:	lsls	r4, r4, #1
   3ac80:	orr.w	fp, r4, r9, lsr #31
   3ac84:	str	r1, [sp, #216]	; 0xd8
   3ac86:	ldr	r4, [sp, #152]	; 0x98
   3ac88:	ldr	r1, [sp, #100]	; 0x64
   3ac8a:	adds	r1, r1, r4
   3ac8c:	ldr	r4, [sp, #104]	; 0x68
   3ac8e:	adc.w	r9, r4, r6
   3ac92:	ldr	r4, [sp, #244]	; 0xf4
   3ac94:	adds.w	r1, r1, ip
   3ac98:	adc.w	r9, r9, r4
   3ac9c:	eor.w	r7, r1, r8
   3aca0:	eor.w	lr, r9, sl
   3aca4:	adds.w	r2, r2, lr
   3aca8:	adc.w	r5, r7, r5
   3acac:	eor.w	ip, r2, ip
   3acb0:	eor.w	r6, r5, r4
   3acb4:	mov.w	sl, ip, lsr #24
   3acb8:	orr.w	r4, sl, r6, lsl #8
   3acbc:	lsrs	r6, r6, #24
   3acbe:	orr.w	r8, r6, ip, lsl #8
   3acc2:	ldr	r6, [sp, #20]
   3acc4:	adds	r1, r6, r1
   3acc6:	ldr	r6, [sp, #24]
   3acc8:	adc.w	r9, r6, r9
   3accc:	adds	r1, r1, r4
   3acce:	str	r1, [sp, #152]	; 0x98
   3acd0:	adc.w	r1, r9, r8
   3acd4:	str	r1, [sp, #156]	; 0x9c
   3acd6:	ldr	r1, [sp, #152]	; 0x98
   3acd8:	eor.w	lr, r1, lr
   3acdc:	ldr	r1, [sp, #156]	; 0x9c
   3acde:	eors	r7, r1
   3ace0:	mov.w	r1, lr, lsr #16
   3ace4:	orr.w	r1, r1, r7, lsl #16
   3ace8:	lsrs	r7, r7, #16
   3acea:	str	r1, [sp, #220]	; 0xdc
   3acec:	orr.w	r1, r7, lr, lsl #16
   3acf0:	str	r1, [sp, #224]	; 0xe0
   3acf2:	ldr	r1, [sp, #220]	; 0xdc
   3acf4:	adds	r2, r2, r1
   3acf6:	str	r2, [sp, #176]	; 0xb0
   3acf8:	ldr	r2, [sp, #224]	; 0xe0
   3acfa:	ldr	r1, [sp, #168]	; 0xa8
   3acfc:	adc.w	r2, r5, r2
   3ad00:	str	r2, [sp, #180]	; 0xb4
   3ad02:	ldr	r2, [sp, #176]	; 0xb0
   3ad04:	eors	r4, r2
   3ad06:	ldr	r2, [sp, #180]	; 0xb4
   3ad08:	eor.w	r8, r2, r8
   3ad0c:	mov.w	r2, r8, lsl #1
   3ad10:	orr.w	r2, r2, r4, lsr #31
   3ad14:	lsls	r4, r4, #1
   3ad16:	str	r2, [sp, #252]	; 0xfc
   3ad18:	orr.w	r2, r4, r8, lsr #31
   3ad1c:	str	r2, [sp, #244]	; 0xf4
   3ad1e:	ldr	r2, [sp, #108]	; 0x6c
   3ad20:	ldr	r4, [sp, #172]	; 0xac
   3ad22:	adds	r2, r2, r1
   3ad24:	ldr	r1, [sp, #112]	; 0x70
   3ad26:	adc.w	r7, r1, r4
   3ad2a:	ldr	r1, [sp, #240]	; 0xf0
   3ad2c:	adds	r2, r2, r1
   3ad2e:	ldr	r1, [sp, #248]	; 0xf8
   3ad30:	adc.w	r7, r1, r7
   3ad34:	ldr	r1, [sp, #260]	; 0x104
   3ad36:	eor.w	r4, r7, r1
   3ad3a:	ldr	r1, [sp, #228]	; 0xe4
   3ad3c:	adds	r3, r3, r4
   3ad3e:	eor.w	r9, r2, r1
   3ad42:	ldr	r1, [sp, #240]	; 0xf0
   3ad44:	adc.w	r0, r0, r9
   3ad48:	eor.w	ip, r3, r1
   3ad4c:	ldr	r1, [sp, #248]	; 0xf8
   3ad4e:	eor.w	r5, r0, r1
   3ad52:	mov.w	lr, ip, lsr #24
   3ad56:	orr.w	r1, lr, r5, lsl #8
   3ad5a:	lsrs	r5, r5, #24
   3ad5c:	orr.w	r6, r5, ip, lsl #8
   3ad60:	ldr	r5, [sp, #60]	; 0x3c
   3ad62:	adds	r2, r5, r2
   3ad64:	ldr	r5, [sp, #64]	; 0x40
   3ad66:	adc.w	r7, r5, r7
   3ad6a:	adds	r2, r2, r1
   3ad6c:	str	r2, [sp, #168]	; 0xa8
   3ad6e:	adc.w	r2, r7, r6
   3ad72:	str	r2, [sp, #172]	; 0xac
   3ad74:	ldr	r2, [sp, #168]	; 0xa8
   3ad76:	eors	r4, r2
   3ad78:	ldr	r2, [sp, #172]	; 0xac
   3ad7a:	eor.w	r2, r2, r9
   3ad7e:	lsrs	r5, r4, #16
   3ad80:	orr.w	r5, r5, r2, lsl #16
   3ad84:	mov.w	r9, r2, lsr #16
   3ad88:	orr.w	r9, r9, r4, lsl #16
   3ad8c:	adds	r3, r3, r5
   3ad8e:	str	r3, [sp, #184]	; 0xb8
   3ad90:	adc.w	r3, r0, r9
   3ad94:	str	r3, [sp, #188]	; 0xbc
   3ad96:	ldr	r3, [sp, #184]	; 0xb8
   3ad98:	ldr	r2, [sp, #160]	; 0xa0
   3ad9a:	eors	r1, r3
   3ad9c:	ldr	r3, [sp, #188]	; 0xbc
   3ad9e:	str	r5, [sp, #228]	; 0xe4
   3ada0:	eors	r6, r3
   3ada2:	lsls	r3, r6, #1
   3ada4:	orr.w	r3, r3, r1, lsr #31
   3ada8:	lsls	r1, r1, #1
   3adaa:	str	r3, [sp, #248]	; 0xf8
   3adac:	orr.w	r3, r1, r6, lsr #31
   3adb0:	str	r3, [sp, #240]	; 0xf0
   3adb2:	ldr	r3, [sp, #12]
   3adb4:	adds	r3, r3, r2
   3adb6:	ldr	r2, [sp, #16]
   3adb8:	ldr	r1, [sp, #164]	; 0xa4
   3adba:	ldr	r0, [sp, #196]	; 0xc4
   3adbc:	adc.w	ip, r2, r1
   3adc0:	ldr	r2, [sp, #216]	; 0xd8
   3adc2:	adds.w	r3, r3, fp
   3adc6:	adc.w	ip, ip, r2
   3adca:	ldr	r2, [sp, #212]	; 0xd4
   3adcc:	eor.w	r7, ip, r2
   3add0:	ldr	r2, [sp, #208]	; 0xd0
   3add2:	eor.w	r1, r3, r2
   3add6:	ldr	r2, [sp, #192]	; 0xc0
   3add8:	adds	r2, r2, r7
   3adda:	adc.w	r5, r0, r1
   3adde:	ldr	r0, [sp, #216]	; 0xd8
   3ade0:	eor.w	fp, r2, fp
   3ade4:	eors	r0, r5
   3ade6:	mov.w	r4, fp, lsr #24
   3adea:	orr.w	r8, r4, r0, lsl #8
   3adee:	lsrs	r0, r0, #24
   3adf0:	orr.w	r6, r0, fp, lsl #8
   3adf4:	ldr	r0, [sp, #36]	; 0x24
   3adf6:	ldr	r4, [sp, #264]	; 0x108
   3adf8:	adds	r3, r0, r3
   3adfa:	ldr	r0, [sp, #40]	; 0x28
   3adfc:	adc.w	ip, r0, ip
   3ae00:	adds.w	r3, r3, r8
   3ae04:	str	r3, [sp, #160]	; 0xa0
   3ae06:	adc.w	r3, ip, r6
   3ae0a:	str	r3, [sp, #164]	; 0xa4
   3ae0c:	ldr	r3, [sp, #160]	; 0xa0
   3ae0e:	ldr	r0, [sp, #148]	; 0x94
   3ae10:	eors	r7, r3
   3ae12:	ldr	r3, [sp, #164]	; 0xa4
   3ae14:	eors	r1, r3
   3ae16:	lsrs	r3, r7, #16
   3ae18:	orr.w	r3, r3, r1, lsl #16
   3ae1c:	lsrs	r1, r1, #16
   3ae1e:	str	r3, [sp, #208]	; 0xd0
   3ae20:	orr.w	r3, r1, r7, lsl #16
   3ae24:	str	r3, [sp, #212]	; 0xd4
   3ae26:	ldr	r3, [sp, #208]	; 0xd0
   3ae28:	ldr	r1, [sp, #144]	; 0x90
   3ae2a:	adds	r2, r2, r3
   3ae2c:	ldr	r3, [sp, #212]	; 0xd4
   3ae2e:	eor.w	r8, r2, r8
   3ae32:	adc.w	r5, r3, r5
   3ae36:	eors	r6, r5
   3ae38:	lsls	r3, r6, #1
   3ae3a:	orr.w	r3, r3, r8, lsr #31
   3ae3e:	mov.w	r8, r8, lsl #1
   3ae42:	str	r3, [sp, #256]	; 0x100
   3ae44:	orr.w	r3, r8, r6, lsr #31
   3ae48:	str	r3, [sp, #216]	; 0xd8
   3ae4a:	ldr	r3, [sp, #84]	; 0x54
   3ae4c:	adds	r1, r3, r1
   3ae4e:	ldr	r3, [sp, #88]	; 0x58
   3ae50:	adc.w	sl, r3, r0
   3ae54:	ldr	r3, [sp, #264]	; 0x108
   3ae56:	ldr	r0, [sp, #204]	; 0xcc
   3ae58:	adds	r1, r1, r3
   3ae5a:	ldr	r3, [sp, #268]	; 0x10c
   3ae5c:	adc.w	sl, sl, r3
   3ae60:	ldr	r3, [sp, #236]	; 0xec
   3ae62:	eor.w	lr, sl, r3
   3ae66:	ldr	r3, [sp, #232]	; 0xe8
   3ae68:	eor.w	r7, r1, r3
   3ae6c:	ldr	r3, [sp, #200]	; 0xc8
   3ae6e:	adds.w	r3, r3, lr
   3ae72:	eor.w	r6, r3, r4
   3ae76:	ldr	r4, [sp, #268]	; 0x10c
   3ae78:	adcs	r0, r7
   3ae7a:	eor.w	ip, r0, r4
   3ae7e:	mov.w	fp, r6, lsr #24
   3ae82:	orr.w	r4, fp, ip, lsl #8
   3ae86:	mov.w	ip, ip, lsr #24
   3ae8a:	orr.w	r8, ip, r6, lsl #8
   3ae8e:	ldr	r6, [sp, #44]	; 0x2c
   3ae90:	adds	r1, r6, r1
   3ae92:	ldr	r6, [sp, #48]	; 0x30
   3ae94:	adc.w	sl, r6, sl
   3ae98:	adds	r1, r1, r4
   3ae9a:	str	r1, [sp, #144]	; 0x90
   3ae9c:	adc.w	r1, sl, r8
   3aea0:	str	r1, [sp, #148]	; 0x94
   3aea2:	ldr	r1, [sp, #144]	; 0x90
   3aea4:	eor.w	lr, r1, lr
   3aea8:	ldr	r1, [sp, #148]	; 0x94
   3aeaa:	eors	r7, r1
   3aeac:	mov.w	r1, lr, lsr #16
   3aeb0:	orr.w	r1, r1, r7, lsl #16
   3aeb4:	lsrs	r7, r7, #16
   3aeb6:	str	r1, [sp, #232]	; 0xe8
   3aeb8:	orr.w	r1, r7, lr, lsl #16
   3aebc:	str	r1, [sp, #236]	; 0xec
   3aebe:	ldr	r1, [sp, #232]	; 0xe8
   3aec0:	ldr	r7, [sp, #156]	; 0x9c
   3aec2:	adds	r3, r3, r1
   3aec4:	ldr	r1, [sp, #236]	; 0xec
   3aec6:	eor.w	r4, r4, r3
   3aeca:	adc.w	r0, r1, r0
   3aece:	eor.w	r8, r0, r8
   3aed2:	mov.w	r1, r8, lsl #1
   3aed6:	orr.w	r6, r1, r4, lsr #31
   3aeda:	lsls	r4, r4, #1
   3aedc:	orr.w	fp, r4, r8, lsr #31
   3aee0:	ldr	r1, [sp, #84]	; 0x54
   3aee2:	ldr	r4, [sp, #152]	; 0x98
   3aee4:	adds	r1, r1, r4
   3aee6:	ldr	r4, [sp, #88]	; 0x58
   3aee8:	adc.w	sl, r4, r7
   3aeec:	adds.w	r1, r1, fp
   3aef0:	ldr	r4, [sp, #228]	; 0xe4
   3aef2:	adc.w	sl, sl, r6
   3aef6:	eor.w	lr, sl, r9
   3aefa:	adds.w	r2, r2, lr
   3aefe:	eor.w	r7, r1, r4
   3af02:	adc.w	r5, r7, r5
   3af06:	eor.w	fp, r2, fp
   3af0a:	eor.w	ip, r5, r6
   3af0e:	mov.w	r4, fp, lsr #24
   3af12:	orr.w	r6, r4, ip, lsl #8
   3af16:	ldr	r4, [sp, #20]
   3af18:	mov.w	ip, ip, lsr #24
   3af1c:	adds	r1, r4, r1
   3af1e:	ldr	r4, [sp, #24]
   3af20:	orr.w	r8, ip, fp, lsl #8
   3af24:	adc.w	sl, r4, sl
   3af28:	adds	r1, r1, r6
   3af2a:	str	r1, [sp, #152]	; 0x98
   3af2c:	adc.w	r1, sl, r8
   3af30:	str	r1, [sp, #156]	; 0x9c
   3af32:	ldr	r1, [sp, #152]	; 0x98
   3af34:	eor.w	lr, r1, lr
   3af38:	ldr	r1, [sp, #156]	; 0x9c
   3af3a:	eors	r7, r1
   3af3c:	mov.w	r1, lr, lsr #16
   3af40:	orr.w	r1, r1, r7, lsl #16
   3af44:	lsrs	r7, r7, #16
   3af46:	str	r1, [sp, #228]	; 0xe4
   3af48:	orr.w	r1, r7, lr, lsl #16
   3af4c:	str	r1, [sp, #260]	; 0x104
   3af4e:	ldr	r1, [sp, #228]	; 0xe4
   3af50:	adds	r2, r2, r1
   3af52:	str	r2, [sp, #192]	; 0xc0
   3af54:	ldr	r2, [sp, #260]	; 0x104
   3af56:	ldr	r1, [sp, #168]	; 0xa8
   3af58:	adc.w	r2, r5, r2
   3af5c:	str	r2, [sp, #196]	; 0xc4
   3af5e:	ldr	r2, [sp, #192]	; 0xc0
   3af60:	eors	r6, r2
   3af62:	ldr	r2, [sp, #196]	; 0xc4
   3af64:	eor.w	r8, r2, r8
   3af68:	mov.w	r2, r8, lsl #1
   3af6c:	orr.w	r2, r2, r6, lsr #31
   3af70:	lsls	r6, r6, #1
   3af72:	str	r2, [sp, #268]	; 0x10c
   3af74:	orr.w	r2, r6, r8, lsr #31
   3af78:	str	r2, [sp, #264]	; 0x108
   3af7a:	ldr	r2, [sp, #68]	; 0x44
   3af7c:	adds	r2, r2, r1
   3af7e:	ldr	r1, [sp, #72]	; 0x48
   3af80:	ldr	r4, [sp, #172]	; 0xac
   3af82:	ldr	r5, [sp, #252]	; 0xfc
   3af84:	adc.w	r7, r1, r4
   3af88:	ldr	r1, [sp, #244]	; 0xf4
   3af8a:	ldr	r4, [sp, #244]	; 0xf4
   3af8c:	adds	r2, r2, r1
   3af8e:	ldr	r1, [sp, #252]	; 0xfc
   3af90:	adc.w	r7, r1, r7
   3af94:	ldr	r1, [sp, #212]	; 0xd4
   3af96:	eor.w	r6, r7, r1
   3af9a:	ldr	r1, [sp, #208]	; 0xd0
   3af9c:	adds	r3, r3, r6
   3af9e:	eor.w	r1, r2, r1
   3afa2:	eor.w	r4, r3, r4
   3afa6:	adc.w	r0, r1, r0
   3afaa:	eors	r5, r0
   3afac:	mov.w	r8, r4, lsr #24
   3afb0:	orr.w	ip, r8, r5, lsl #8
   3afb4:	lsrs	r5, r5, #24
   3afb6:	orr.w	lr, r5, r4, lsl #8
   3afba:	ldr	r4, [sp, #36]	; 0x24
   3afbc:	adds	r2, r4, r2
   3afbe:	ldr	r4, [sp, #40]	; 0x28
   3afc0:	adc.w	r7, r4, r7
   3afc4:	adds.w	r2, r2, ip
   3afc8:	str	r2, [sp, #168]	; 0xa8
   3afca:	adc.w	r2, r7, lr
   3afce:	str	r2, [sp, #172]	; 0xac
   3afd0:	ldr	r2, [sp, #168]	; 0xa8
   3afd2:	eors	r6, r2
   3afd4:	ldr	r2, [sp, #172]	; 0xac
   3afd6:	eors	r1, r2
   3afd8:	lsrs	r2, r6, #16
   3afda:	orr.w	r2, r2, r1, lsl #16
   3afde:	lsrs	r1, r1, #16
   3afe0:	str	r2, [sp, #208]	; 0xd0
   3afe2:	orr.w	r2, r1, r6, lsl #16
   3afe6:	str	r2, [sp, #212]	; 0xd4
   3afe8:	ldr	r2, [sp, #208]	; 0xd0
   3afea:	ldr	r1, [sp, #164]	; 0xa4
   3afec:	adds	r3, r3, r2
   3afee:	str	r3, [sp, #200]	; 0xc8
   3aff0:	ldr	r3, [sp, #212]	; 0xd4
   3aff2:	adc.w	r3, r0, r3
   3aff6:	str	r3, [sp, #204]	; 0xcc
   3aff8:	ldr	r2, [sp, #204]	; 0xcc
   3affa:	ldr	r3, [sp, #200]	; 0xc8
   3affc:	eor.w	lr, r2, lr
   3b000:	eor.w	r3, r3, ip
   3b004:	mov.w	r2, lr, lsl #1
   3b008:	orr.w	r2, r2, r3, lsr #31
   3b00c:	mov.w	ip, r3, lsl #1
   3b010:	str	r2, [sp, #244]	; 0xf4
   3b012:	orr.w	ip, ip, lr, lsr #31
   3b016:	ldr	r2, [sp, #160]	; 0xa0
   3b018:	ldr	r3, [sp, #60]	; 0x3c
   3b01a:	adds	r3, r3, r2
   3b01c:	ldr	r2, [sp, #64]	; 0x40
   3b01e:	adc.w	lr, r2, r1
   3b022:	ldr	r2, [sp, #240]	; 0xf0
   3b024:	adds	r3, r3, r2
   3b026:	ldr	r2, [sp, #248]	; 0xf8
   3b028:	adc.w	lr, lr, r2
   3b02c:	ldr	r2, [sp, #236]	; 0xec
   3b02e:	eor.w	r6, lr, r2
   3b032:	ldr	r2, [sp, #232]	; 0xe8
   3b034:	eor.w	r0, r3, r2
   3b038:	ldr	r2, [sp, #176]	; 0xb0
   3b03a:	ldr	r1, [sp, #180]	; 0xb4
   3b03c:	adds	r2, r2, r6
   3b03e:	adc.w	r5, r1, r0
   3b042:	ldr	r1, [sp, #240]	; 0xf0
   3b044:	eor.w	r8, r2, r1
   3b048:	ldr	r1, [sp, #248]	; 0xf8
   3b04a:	eor.w	r4, r5, r1
   3b04e:	mov.w	r9, r8, lsr #24
   3b052:	orr.w	r1, r9, r4, lsl #8
   3b056:	lsrs	r4, r4, #24
   3b058:	orr.w	r7, r4, r8, lsl #8
   3b05c:	ldr	r4, [sp, #52]	; 0x34
   3b05e:	adds	r3, r4, r3
   3b060:	ldr	r4, [sp, #56]	; 0x38
   3b062:	adc.w	lr, r4, lr
   3b066:	adds	r3, r3, r1
   3b068:	str	r3, [sp, #160]	; 0xa0
   3b06a:	adc.w	r3, lr, r7
   3b06e:	str	r3, [sp, #164]	; 0xa4
   3b070:	ldr	r3, [sp, #160]	; 0xa0
   3b072:	ldr	r4, [sp, #216]	; 0xd8
   3b074:	eors	r6, r3
   3b076:	ldr	r3, [sp, #164]	; 0xa4
   3b078:	eors	r0, r3
   3b07a:	lsrs	r3, r6, #16
   3b07c:	orr.w	r3, r3, r0, lsl #16
   3b080:	lsrs	r0, r0, #16
   3b082:	str	r3, [sp, #232]	; 0xe8
   3b084:	orr.w	r3, r0, r6, lsl #16
   3b088:	str	r3, [sp, #236]	; 0xec
   3b08a:	ldr	r3, [sp, #232]	; 0xe8
   3b08c:	ldr	r0, [sp, #148]	; 0x94
   3b08e:	adds	r2, r2, r3
   3b090:	ldr	r3, [sp, #236]	; 0xec
   3b092:	eor.w	r1, r1, r2
   3b096:	adc.w	r5, r3, r5
   3b09a:	eors	r7, r5
   3b09c:	lsls	r3, r7, #1
   3b09e:	orr.w	r3, r3, r1, lsr #31
   3b0a2:	lsls	r1, r1, #1
   3b0a4:	str	r3, [sp, #248]	; 0xf8
   3b0a6:	orr.w	r3, r1, r7, lsr #31
   3b0aa:	ldr	r1, [sp, #144]	; 0x90
   3b0ac:	str	r3, [sp, #240]	; 0xf0
   3b0ae:	ldr	r3, [sp, #12]
   3b0b0:	adds	r1, r3, r1
   3b0b2:	ldr	r3, [sp, #16]
   3b0b4:	adc.w	sl, r3, r0
   3b0b8:	ldr	r3, [sp, #216]	; 0xd8
   3b0ba:	ldr	r0, [sp, #188]	; 0xbc
   3b0bc:	adds	r1, r1, r3
   3b0be:	ldr	r3, [sp, #256]	; 0x100
   3b0c0:	adc.w	sl, sl, r3
   3b0c4:	ldr	r3, [sp, #224]	; 0xe0
   3b0c6:	eor.w	lr, sl, r3
   3b0ca:	ldr	r3, [sp, #220]	; 0xdc
   3b0cc:	eor.w	r6, r1, r3
   3b0d0:	ldr	r3, [sp, #184]	; 0xb8
   3b0d2:	adds.w	r3, r3, lr
   3b0d6:	eor.w	r8, r3, r4
   3b0da:	ldr	r4, [sp, #256]	; 0x100
   3b0dc:	adcs	r0, r6
   3b0de:	eor.w	r7, r0, r4
   3b0e2:	mov.w	fp, r8, lsr #24
   3b0e6:	orr.w	r4, fp, r7, lsl #8
   3b0ea:	lsrs	r7, r7, #24
   3b0ec:	orr.w	r9, r7, r8, lsl #8
   3b0f0:	ldr	r7, [sp, #44]	; 0x2c
   3b0f2:	adds	r1, r7, r1
   3b0f4:	ldr	r7, [sp, #48]	; 0x30
   3b0f6:	adc.w	sl, r7, sl
   3b0fa:	adds	r1, r1, r4
   3b0fc:	str	r1, [sp, #144]	; 0x90
   3b0fe:	adc.w	r1, sl, r9
   3b102:	str	r1, [sp, #148]	; 0x94
   3b104:	ldr	r1, [sp, #144]	; 0x90
   3b106:	eor.w	lr, r1, lr
   3b10a:	ldr	r1, [sp, #148]	; 0x94
   3b10c:	eors	r6, r1
   3b10e:	mov.w	r1, lr, lsr #16
   3b112:	orr.w	r8, r1, r6, lsl #16
   3b116:	lsrs	r6, r6, #16
   3b118:	adds.w	r3, r3, r8
   3b11c:	orr.w	sl, r6, lr, lsl #16
   3b120:	adc.w	r0, r0, sl
   3b124:	eors	r4, r3
   3b126:	eor.w	r9, r0, r9
   3b12a:	ldr	r6, [sp, #156]	; 0x9c
   3b12c:	mov.w	r1, r9, lsl #1
   3b130:	orr.w	r1, r1, r4, lsr #31
   3b134:	lsls	r4, r4, #1
   3b136:	orr.w	fp, r4, r9, lsr #31
   3b13a:	str	r1, [sp, #216]	; 0xd8
   3b13c:	ldr	r4, [sp, #152]	; 0x98
   3b13e:	ldr	r1, [sp, #124]	; 0x7c
   3b140:	adds	r1, r1, r4
   3b142:	ldr	r4, [sp, #128]	; 0x80
   3b144:	adc.w	r9, r4, r6
   3b148:	ldr	r4, [sp, #244]	; 0xf4
   3b14a:	adds.w	r1, r1, ip
   3b14e:	adc.w	r9, r9, r4
   3b152:	eor.w	r7, r1, r8
   3b156:	eor.w	lr, r9, sl
   3b15a:	adds.w	r2, r2, lr
   3b15e:	adc.w	r5, r7, r5
   3b162:	eor.w	ip, r2, ip
   3b166:	eor.w	r6, r5, r4
   3b16a:	mov.w	sl, ip, lsr #24
   3b16e:	orr.w	r4, sl, r6, lsl #8
   3b172:	lsrs	r6, r6, #24
   3b174:	orr.w	r8, r6, ip, lsl #8
   3b178:	ldr	r6, [sp, #92]	; 0x5c
   3b17a:	adds	r1, r6, r1
   3b17c:	ldr	r6, [sp, #96]	; 0x60
   3b17e:	adc.w	r9, r6, r9
   3b182:	adds	r1, r1, r4
   3b184:	str	r1, [sp, #152]	; 0x98
   3b186:	adc.w	r1, r9, r8
   3b18a:	str	r1, [sp, #156]	; 0x9c
   3b18c:	ldr	r1, [sp, #152]	; 0x98
   3b18e:	eor.w	lr, r1, lr
   3b192:	ldr	r1, [sp, #156]	; 0x9c
   3b194:	eors	r7, r1
   3b196:	mov.w	r1, lr, lsr #16
   3b19a:	orr.w	r1, r1, r7, lsl #16
   3b19e:	lsrs	r7, r7, #16
   3b1a0:	str	r1, [sp, #220]	; 0xdc
   3b1a2:	orr.w	r1, r7, lr, lsl #16
   3b1a6:	str	r1, [sp, #224]	; 0xe0
   3b1a8:	ldr	r1, [sp, #220]	; 0xdc
   3b1aa:	adds	r2, r2, r1
   3b1ac:	str	r2, [sp, #176]	; 0xb0
   3b1ae:	ldr	r2, [sp, #224]	; 0xe0
   3b1b0:	ldr	r1, [sp, #168]	; 0xa8
   3b1b2:	adc.w	r2, r5, r2
   3b1b6:	str	r2, [sp, #180]	; 0xb4
   3b1b8:	ldr	r2, [sp, #176]	; 0xb0
   3b1ba:	eors	r4, r2
   3b1bc:	ldr	r2, [sp, #180]	; 0xb4
   3b1be:	eor.w	r8, r2, r8
   3b1c2:	mov.w	r2, r8, lsl #1
   3b1c6:	orr.w	r2, r2, r4, lsr #31
   3b1ca:	lsls	r4, r4, #1
   3b1cc:	str	r2, [sp, #252]	; 0xfc
   3b1ce:	orr.w	r2, r4, r8, lsr #31
   3b1d2:	str	r2, [sp, #244]	; 0xf4
   3b1d4:	ldr	r2, [sp, #76]	; 0x4c
   3b1d6:	ldr	r4, [sp, #172]	; 0xac
   3b1d8:	adds	r2, r2, r1
   3b1da:	ldr	r1, [sp, #80]	; 0x50
   3b1dc:	adc.w	r7, r1, r4
   3b1e0:	ldr	r1, [sp, #240]	; 0xf0
   3b1e2:	adds	r2, r2, r1
   3b1e4:	ldr	r1, [sp, #248]	; 0xf8
   3b1e6:	adc.w	r7, r1, r7
   3b1ea:	ldr	r1, [sp, #260]	; 0x104
   3b1ec:	eor.w	r4, r7, r1
   3b1f0:	ldr	r1, [sp, #228]	; 0xe4
   3b1f2:	adds	r3, r3, r4
   3b1f4:	eor.w	r9, r2, r1
   3b1f8:	ldr	r1, [sp, #240]	; 0xf0
   3b1fa:	adc.w	r0, r0, r9
   3b1fe:	eor.w	ip, r3, r1
   3b202:	ldr	r1, [sp, #248]	; 0xf8
   3b204:	eor.w	r5, r0, r1
   3b208:	mov.w	lr, ip, lsr #24
   3b20c:	orr.w	r1, lr, r5, lsl #8
   3b210:	lsrs	r5, r5, #24
   3b212:	orr.w	r6, r5, ip, lsl #8
   3b216:	ldr	r5, [sp, #116]	; 0x74
   3b218:	adds	r2, r5, r2
   3b21a:	ldr	r5, [sp, #120]	; 0x78
   3b21c:	adc.w	r7, r5, r7
   3b220:	adds	r2, r2, r1
   3b222:	str	r2, [sp, #168]	; 0xa8
   3b224:	adc.w	r2, r7, r6
   3b228:	str	r2, [sp, #172]	; 0xac
   3b22a:	ldr	r2, [sp, #168]	; 0xa8
   3b22c:	eors	r4, r2
   3b22e:	ldr	r2, [sp, #172]	; 0xac
   3b230:	eor.w	r2, r2, r9
   3b234:	lsrs	r5, r4, #16
   3b236:	orr.w	r5, r5, r2, lsl #16
   3b23a:	mov.w	r9, r2, lsr #16
   3b23e:	orr.w	r9, r9, r4, lsl #16
   3b242:	adds	r3, r3, r5
   3b244:	str	r3, [sp, #184]	; 0xb8
   3b246:	adc.w	r3, r0, r9
   3b24a:	str	r3, [sp, #188]	; 0xbc
   3b24c:	ldr	r3, [sp, #184]	; 0xb8
   3b24e:	ldr	r2, [sp, #160]	; 0xa0
   3b250:	eors	r1, r3
   3b252:	ldr	r3, [sp, #188]	; 0xbc
   3b254:	ldr	r0, [sp, #196]	; 0xc4
   3b256:	eors	r6, r3
   3b258:	str	r5, [sp, #228]	; 0xe4
   3b25a:	lsls	r3, r6, #1
   3b25c:	orr.w	r3, r3, r1, lsr #31
   3b260:	lsls	r1, r1, #1
   3b262:	str	r3, [sp, #248]	; 0xf8
   3b264:	orr.w	r3, r1, r6, lsr #31
   3b268:	str	r3, [sp, #240]	; 0xf0
   3b26a:	ldr	r3, [sp, #28]
   3b26c:	ldr	r1, [sp, #164]	; 0xa4
   3b26e:	adds	r3, r3, r2
   3b270:	ldr	r2, [sp, #32]
   3b272:	adc.w	ip, r2, r1
   3b276:	ldr	r2, [sp, #216]	; 0xd8
   3b278:	adds.w	r3, r3, fp
   3b27c:	adc.w	ip, ip, r2
   3b280:	ldr	r2, [sp, #212]	; 0xd4
   3b282:	eor.w	r7, ip, r2
   3b286:	ldr	r2, [sp, #208]	; 0xd0
   3b288:	eor.w	r1, r3, r2
   3b28c:	ldr	r2, [sp, #192]	; 0xc0
   3b28e:	adds	r2, r2, r7
   3b290:	adc.w	r5, r0, r1
   3b294:	ldr	r0, [sp, #216]	; 0xd8
   3b296:	eor.w	fp, r2, fp
   3b29a:	eors	r0, r5
   3b29c:	mov.w	r4, fp, lsr #24
   3b2a0:	orr.w	r8, r4, r0, lsl #8
   3b2a4:	lsrs	r0, r0, #24
   3b2a6:	orr.w	r6, r0, fp, lsl #8
   3b2aa:	ldr	r0, [sp, #100]	; 0x64
   3b2ac:	adds	r3, r0, r3
   3b2ae:	ldr	r0, [sp, #104]	; 0x68
   3b2b0:	adc.w	ip, r0, ip
   3b2b4:	adds.w	r3, r3, r8
   3b2b8:	str	r3, [sp, #160]	; 0xa0
   3b2ba:	adc.w	r3, ip, r6
   3b2be:	str	r3, [sp, #164]	; 0xa4
   3b2c0:	ldr	r3, [sp, #160]	; 0xa0
   3b2c2:	eors	r7, r3
   3b2c4:	ldr	r3, [sp, #164]	; 0xa4
   3b2c6:	eors	r1, r3
   3b2c8:	lsrs	r3, r7, #16
   3b2ca:	orr.w	r3, r3, r1, lsl #16
   3b2ce:	lsrs	r1, r1, #16
   3b2d0:	str	r3, [sp, #208]	; 0xd0
   3b2d2:	orr.w	r3, r1, r7, lsl #16
   3b2d6:	str	r3, [sp, #212]	; 0xd4
   3b2d8:	ldr	r3, [sp, #208]	; 0xd0
   3b2da:	ldr	r1, [sp, #144]	; 0x90
   3b2dc:	adds	r2, r2, r3
   3b2de:	ldr	r3, [sp, #212]	; 0xd4
   3b2e0:	eor.w	r8, r2, r8
   3b2e4:	ldr	r0, [sp, #148]	; 0x94
   3b2e6:	adc.w	r5, r3, r5
   3b2ea:	ldr	r4, [sp, #264]	; 0x108
   3b2ec:	eors	r6, r5
   3b2ee:	lsls	r3, r6, #1
   3b2f0:	orr.w	r3, r3, r8, lsr #31
   3b2f4:	mov.w	r8, r8, lsl #1
   3b2f8:	str	r3, [sp, #256]	; 0x100
   3b2fa:	orr.w	r3, r8, r6, lsr #31
   3b2fe:	str	r3, [sp, #216]	; 0xd8
   3b300:	ldr	r3, [sp, #108]	; 0x6c
   3b302:	adds	r1, r3, r1
   3b304:	ldr	r3, [sp, #112]	; 0x70
   3b306:	adc.w	sl, r3, r0
   3b30a:	ldr	r3, [sp, #264]	; 0x108
   3b30c:	ldr	r0, [sp, #204]	; 0xcc
   3b30e:	adds	r1, r1, r3
   3b310:	ldr	r3, [sp, #268]	; 0x10c
   3b312:	adc.w	sl, sl, r3
   3b316:	ldr	r3, [sp, #236]	; 0xec
   3b318:	eor.w	lr, sl, r3
   3b31c:	ldr	r3, [sp, #232]	; 0xe8
   3b31e:	eor.w	r7, r1, r3
   3b322:	ldr	r3, [sp, #200]	; 0xc8
   3b324:	adds.w	r3, r3, lr
   3b328:	eor.w	r6, r3, r4
   3b32c:	ldr	r4, [sp, #268]	; 0x10c
   3b32e:	adcs	r0, r7
   3b330:	eor.w	ip, r0, r4
   3b334:	mov.w	fp, r6, lsr #24
   3b338:	orr.w	r4, fp, ip, lsl #8
   3b33c:	mov.w	ip, ip, lsr #24
   3b340:	orr.w	r8, ip, r6, lsl #8
   3b344:	ldr	r6, [sp, #4]
   3b346:	adds	r1, r6, r1
   3b348:	ldr	r6, [sp, #8]
   3b34a:	adc.w	sl, r6, sl
   3b34e:	adds	r1, r1, r4
   3b350:	str	r1, [sp, #144]	; 0x90
   3b352:	adc.w	r1, sl, r8
   3b356:	str	r1, [sp, #148]	; 0x94
   3b358:	ldr	r1, [sp, #144]	; 0x90
   3b35a:	eor.w	lr, r1, lr
   3b35e:	ldr	r1, [sp, #148]	; 0x94
   3b360:	eors	r7, r1
   3b362:	mov.w	r1, lr, lsr #16
   3b366:	orr.w	r1, r1, r7, lsl #16
   3b36a:	lsrs	r7, r7, #16
   3b36c:	str	r1, [sp, #232]	; 0xe8
   3b36e:	orr.w	r1, r7, lr, lsl #16
   3b372:	str	r1, [sp, #236]	; 0xec
   3b374:	ldr	r1, [sp, #232]	; 0xe8
   3b376:	ldr	r7, [sp, #156]	; 0x9c
   3b378:	adds	r3, r3, r1
   3b37a:	ldr	r1, [sp, #236]	; 0xec
   3b37c:	eor.w	r4, r4, r3
   3b380:	adc.w	r0, r1, r0
   3b384:	eor.w	r8, r0, r8
   3b388:	mov.w	r1, r8, lsl #1
   3b38c:	orr.w	r6, r1, r4, lsr #31
   3b390:	lsls	r4, r4, #1
   3b392:	orr.w	fp, r4, r8, lsr #31
   3b396:	ldr	r1, [sp, #4]
   3b398:	ldr	r4, [sp, #152]	; 0x98
   3b39a:	adds	r1, r1, r4
   3b39c:	ldr	r4, [sp, #8]
   3b39e:	adc.w	sl, r4, r7
   3b3a2:	adds.w	r1, r1, fp
   3b3a6:	adc.w	sl, sl, r6
   3b3aa:	ldr	r4, [sp, #228]	; 0xe4
   3b3ac:	eor.w	lr, sl, r9
   3b3b0:	adds.w	r2, r2, lr
   3b3b4:	eor.w	r7, r1, r4
   3b3b8:	adc.w	r5, r7, r5
   3b3bc:	eor.w	fp, r2, fp
   3b3c0:	eor.w	ip, r5, r6
   3b3c4:	mov.w	r4, fp, lsr #24
   3b3c8:	orr.w	r6, r4, ip, lsl #8
   3b3cc:	ldr	r4, [sp, #12]
   3b3ce:	mov.w	ip, ip, lsr #24
   3b3d2:	adds	r1, r4, r1
   3b3d4:	ldr	r4, [sp, #16]
   3b3d6:	orr.w	r8, ip, fp, lsl #8
   3b3da:	adc.w	sl, r4, sl
   3b3de:	adds	r1, r1, r6
   3b3e0:	str	r1, [sp, #152]	; 0x98
   3b3e2:	adc.w	r1, sl, r8
   3b3e6:	str	r1, [sp, #156]	; 0x9c
   3b3e8:	ldr	r1, [sp, #152]	; 0x98
   3b3ea:	ldr	r4, [sp, #172]	; 0xac
   3b3ec:	eor.w	lr, r1, lr
   3b3f0:	ldr	r1, [sp, #156]	; 0x9c
   3b3f2:	eors	r7, r1
   3b3f4:	mov.w	r1, lr, lsr #16
   3b3f8:	orr.w	r1, r1, r7, lsl #16
   3b3fc:	lsrs	r7, r7, #16
   3b3fe:	str	r1, [sp, #228]	; 0xe4
   3b400:	orr.w	r1, r7, lr, lsl #16
   3b404:	str	r1, [sp, #260]	; 0x104
   3b406:	ldr	r1, [sp, #228]	; 0xe4
   3b408:	adds	r2, r2, r1
   3b40a:	str	r2, [sp, #192]	; 0xc0
   3b40c:	ldr	r2, [sp, #260]	; 0x104
   3b40e:	ldr	r1, [sp, #168]	; 0xa8
   3b410:	adc.w	r2, r5, r2
   3b414:	str	r2, [sp, #196]	; 0xc4
   3b416:	ldr	r2, [sp, #192]	; 0xc0
   3b418:	ldr	r5, [sp, #252]	; 0xfc
   3b41a:	eors	r6, r2
   3b41c:	ldr	r2, [sp, #196]	; 0xc4
   3b41e:	eor.w	r8, r2, r8
   3b422:	mov.w	r2, r8, lsl #1
   3b426:	orr.w	r2, r2, r6, lsr #31
   3b42a:	lsls	r6, r6, #1
   3b42c:	str	r2, [sp, #268]	; 0x10c
   3b42e:	orr.w	r2, r6, r8, lsr #31
   3b432:	str	r2, [sp, #264]	; 0x108
   3b434:	ldr	r2, [sp, #20]
   3b436:	adds	r2, r2, r1
   3b438:	ldr	r1, [sp, #24]
   3b43a:	adc.w	r7, r1, r4
   3b43e:	ldr	r1, [sp, #244]	; 0xf4
   3b440:	ldr	r4, [sp, #244]	; 0xf4
   3b442:	adds	r2, r2, r1
   3b444:	ldr	r1, [sp, #252]	; 0xfc
   3b446:	adc.w	r7, r1, r7
   3b44a:	ldr	r1, [sp, #212]	; 0xd4
   3b44c:	eor.w	r6, r7, r1
   3b450:	ldr	r1, [sp, #208]	; 0xd0
   3b452:	adds	r3, r3, r6
   3b454:	eor.w	r1, r2, r1
   3b458:	eor.w	r4, r3, r4
   3b45c:	adc.w	r0, r1, r0
   3b460:	eors	r5, r0
   3b462:	mov.w	r8, r4, lsr #24
   3b466:	orr.w	ip, r8, r5, lsl #8
   3b46a:	lsrs	r5, r5, #24
   3b46c:	orr.w	lr, r5, r4, lsl #8
   3b470:	ldr	r4, [sp, #28]
   3b472:	adds	r2, r4, r2
   3b474:	ldr	r4, [sp, #32]
   3b476:	adc.w	r7, r4, r7
   3b47a:	adds.w	r2, r2, ip
   3b47e:	str	r2, [sp, #168]	; 0xa8
   3b480:	adc.w	r2, r7, lr
   3b484:	str	r2, [sp, #172]	; 0xac
   3b486:	ldr	r2, [sp, #168]	; 0xa8
   3b488:	eors	r6, r2
   3b48a:	ldr	r2, [sp, #172]	; 0xac
   3b48c:	eors	r1, r2
   3b48e:	lsrs	r2, r6, #16
   3b490:	orr.w	r2, r2, r1, lsl #16
   3b494:	lsrs	r1, r1, #16
   3b496:	str	r2, [sp, #208]	; 0xd0
   3b498:	orr.w	r2, r1, r6, lsl #16
   3b49c:	str	r2, [sp, #212]	; 0xd4
   3b49e:	ldr	r2, [sp, #208]	; 0xd0
   3b4a0:	ldr	r1, [sp, #164]	; 0xa4
   3b4a2:	adds	r3, r3, r2
   3b4a4:	str	r3, [sp, #200]	; 0xc8
   3b4a6:	ldr	r3, [sp, #212]	; 0xd4
   3b4a8:	adc.w	r3, r0, r3
   3b4ac:	str	r3, [sp, #204]	; 0xcc
   3b4ae:	ldr	r2, [sp, #204]	; 0xcc
   3b4b0:	ldr	r3, [sp, #200]	; 0xc8
   3b4b2:	eor.w	lr, r2, lr
   3b4b6:	eor.w	r3, r3, ip
   3b4ba:	mov.w	r2, lr, lsl #1
   3b4be:	orr.w	r2, r2, r3, lsr #31
   3b4c2:	mov.w	ip, r3, lsl #1
   3b4c6:	str	r2, [sp, #244]	; 0xf4
   3b4c8:	orr.w	ip, ip, lr, lsr #31
   3b4cc:	ldr	r2, [sp, #160]	; 0xa0
   3b4ce:	ldr	r3, [sp, #36]	; 0x24
   3b4d0:	adds	r3, r3, r2
   3b4d2:	ldr	r2, [sp, #40]	; 0x28
   3b4d4:	adc.w	lr, r2, r1
   3b4d8:	ldr	r2, [sp, #240]	; 0xf0
   3b4da:	ldr	r1, [sp, #180]	; 0xb4
   3b4dc:	adds	r3, r3, r2
   3b4de:	ldr	r2, [sp, #248]	; 0xf8
   3b4e0:	adc.w	lr, lr, r2
   3b4e4:	ldr	r2, [sp, #236]	; 0xec
   3b4e6:	eor.w	r6, lr, r2
   3b4ea:	ldr	r2, [sp, #232]	; 0xe8
   3b4ec:	eor.w	r0, r3, r2
   3b4f0:	ldr	r2, [sp, #176]	; 0xb0
   3b4f2:	adds	r2, r2, r6
   3b4f4:	adc.w	r5, r1, r0
   3b4f8:	ldr	r1, [sp, #240]	; 0xf0
   3b4fa:	eor.w	r8, r2, r1
   3b4fe:	ldr	r1, [sp, #248]	; 0xf8
   3b500:	eor.w	r4, r5, r1
   3b504:	mov.w	r9, r8, lsr #24
   3b508:	orr.w	r1, r9, r4, lsl #8
   3b50c:	lsrs	r4, r4, #24
   3b50e:	orr.w	r7, r4, r8, lsl #8
   3b512:	ldr	r4, [sp, #44]	; 0x2c
   3b514:	adds	r3, r4, r3
   3b516:	ldr	r4, [sp, #48]	; 0x30
   3b518:	adc.w	lr, r4, lr
   3b51c:	adds	r3, r3, r1
   3b51e:	str	r3, [sp, #160]	; 0xa0
   3b520:	adc.w	r3, lr, r7
   3b524:	str	r3, [sp, #164]	; 0xa4
   3b526:	ldr	r3, [sp, #160]	; 0xa0
   3b528:	eors	r6, r3
   3b52a:	ldr	r3, [sp, #164]	; 0xa4
   3b52c:	eors	r0, r3
   3b52e:	lsrs	r3, r6, #16
   3b530:	orr.w	r3, r3, r0, lsl #16
   3b534:	lsrs	r0, r0, #16
   3b536:	str	r3, [sp, #232]	; 0xe8
   3b538:	orr.w	r3, r0, r6, lsl #16
   3b53c:	str	r3, [sp, #236]	; 0xec
   3b53e:	ldr	r3, [sp, #232]	; 0xe8
   3b540:	adds	r2, r2, r3
   3b542:	ldr	r3, [sp, #236]	; 0xec
   3b544:	eor.w	r1, r1, r2
   3b548:	adc.w	r5, r3, r5
   3b54c:	eors	r7, r5
   3b54e:	lsls	r3, r7, #1
   3b550:	orr.w	r3, r3, r1, lsr #31
   3b554:	lsls	r1, r1, #1
   3b556:	str	r3, [sp, #248]	; 0xf8
   3b558:	orr.w	r3, r1, r7, lsr #31
   3b55c:	str	r3, [sp, #240]	; 0xf0
   3b55e:	ldr	r3, [sp, #52]	; 0x34
   3b560:	ldr	r1, [sp, #144]	; 0x90
   3b562:	ldr	r0, [sp, #148]	; 0x94
   3b564:	adds	r1, r3, r1
   3b566:	ldr	r3, [sp, #56]	; 0x38
   3b568:	ldr	r4, [sp, #216]	; 0xd8
   3b56a:	adc.w	sl, r3, r0
   3b56e:	ldr	r3, [sp, #216]	; 0xd8
   3b570:	ldr	r0, [sp, #188]	; 0xbc
   3b572:	adds	r1, r1, r3
   3b574:	ldr	r3, [sp, #256]	; 0x100
   3b576:	adc.w	sl, sl, r3
   3b57a:	ldr	r3, [sp, #224]	; 0xe0
   3b57c:	eor.w	lr, sl, r3
   3b580:	ldr	r3, [sp, #220]	; 0xdc
   3b582:	eor.w	r6, r1, r3
   3b586:	ldr	r3, [sp, #184]	; 0xb8
   3b588:	adds.w	r3, r3, lr
   3b58c:	eor.w	r8, r3, r4
   3b590:	ldr	r4, [sp, #256]	; 0x100
   3b592:	adcs	r0, r6
   3b594:	eor.w	r7, r0, r4
   3b598:	mov.w	fp, r8, lsr #24
   3b59c:	orr.w	r4, fp, r7, lsl #8
   3b5a0:	lsrs	r7, r7, #24
   3b5a2:	orr.w	r9, r7, r8, lsl #8
   3b5a6:	ldr	r7, [sp, #60]	; 0x3c
   3b5a8:	adds	r1, r7, r1
   3b5aa:	ldr	r7, [sp, #64]	; 0x40
   3b5ac:	adc.w	sl, r7, sl
   3b5b0:	adds	r1, r1, r4
   3b5b2:	str	r1, [sp, #144]	; 0x90
   3b5b4:	adc.w	r1, sl, r9
   3b5b8:	str	r1, [sp, #148]	; 0x94
   3b5ba:	ldr	r1, [sp, #144]	; 0x90
   3b5bc:	eor.w	lr, r1, lr
   3b5c0:	ldr	r1, [sp, #148]	; 0x94
   3b5c2:	eors	r6, r1
   3b5c4:	mov.w	r1, lr, lsr #16
   3b5c8:	orr.w	r8, r1, r6, lsl #16
   3b5cc:	lsrs	r6, r6, #16
   3b5ce:	adds.w	r3, r3, r8
   3b5d2:	orr.w	sl, r6, lr, lsl #16
   3b5d6:	adc.w	r0, r0, sl
   3b5da:	eors	r4, r3
   3b5dc:	eor.w	r9, r0, r9
   3b5e0:	ldr	r6, [sp, #156]	; 0x9c
   3b5e2:	mov.w	r1, r9, lsl #1
   3b5e6:	orr.w	r1, r1, r4, lsr #31
   3b5ea:	lsls	r4, r4, #1
   3b5ec:	orr.w	fp, r4, r9, lsr #31
   3b5f0:	str	r1, [sp, #216]	; 0xd8
   3b5f2:	ldr	r4, [sp, #152]	; 0x98
   3b5f4:	ldr	r1, [sp, #68]	; 0x44
   3b5f6:	adds	r1, r1, r4
   3b5f8:	ldr	r4, [sp, #72]	; 0x48
   3b5fa:	adc.w	r9, r4, r6
   3b5fe:	ldr	r4, [sp, #244]	; 0xf4
   3b600:	adds.w	r1, r1, ip
   3b604:	adc.w	r9, r9, r4
   3b608:	eor.w	r7, r1, r8
   3b60c:	eor.w	lr, r9, sl
   3b610:	adds.w	r2, r2, lr
   3b614:	adc.w	r5, r7, r5
   3b618:	eor.w	ip, r2, ip
   3b61c:	eor.w	r6, r5, r4
   3b620:	mov.w	sl, ip, lsr #24
   3b624:	orr.w	r4, sl, r6, lsl #8
   3b628:	lsrs	r6, r6, #24
   3b62a:	orr.w	r8, r6, ip, lsl #8
   3b62e:	ldr	r6, [sp, #76]	; 0x4c
   3b630:	adds	r1, r6, r1
   3b632:	ldr	r6, [sp, #80]	; 0x50
   3b634:	adc.w	r9, r6, r9
   3b638:	adds	r1, r1, r4
   3b63a:	str	r1, [sp, #152]	; 0x98
   3b63c:	adc.w	r1, r9, r8
   3b640:	str	r1, [sp, #156]	; 0x9c
   3b642:	ldr	r1, [sp, #152]	; 0x98
   3b644:	eor.w	lr, r1, lr
   3b648:	ldr	r1, [sp, #156]	; 0x9c
   3b64a:	eors	r7, r1
   3b64c:	mov.w	r1, lr, lsr #16
   3b650:	orr.w	r1, r1, r7, lsl #16
   3b654:	lsrs	r7, r7, #16
   3b656:	str	r1, [sp, #220]	; 0xdc
   3b658:	orr.w	r1, r7, lr, lsl #16
   3b65c:	str	r1, [sp, #224]	; 0xe0
   3b65e:	ldr	r1, [sp, #220]	; 0xdc
   3b660:	adds	r2, r2, r1
   3b662:	str	r2, [sp, #176]	; 0xb0
   3b664:	ldr	r2, [sp, #224]	; 0xe0
   3b666:	ldr	r1, [sp, #168]	; 0xa8
   3b668:	adc.w	r2, r5, r2
   3b66c:	str	r2, [sp, #180]	; 0xb4
   3b66e:	ldr	r2, [sp, #176]	; 0xb0
   3b670:	eors	r4, r2
   3b672:	ldr	r2, [sp, #180]	; 0xb4
   3b674:	eor.w	r8, r2, r8
   3b678:	mov.w	r2, r8, lsl #1
   3b67c:	orr.w	r2, r2, r4, lsr #31
   3b680:	lsls	r4, r4, #1
   3b682:	str	r2, [sp, #252]	; 0xfc
   3b684:	orr.w	r2, r4, r8, lsr #31
   3b688:	str	r2, [sp, #244]	; 0xf4
   3b68a:	ldr	r2, [sp, #84]	; 0x54
   3b68c:	ldr	r4, [sp, #172]	; 0xac
   3b68e:	adds	r2, r2, r1
   3b690:	ldr	r1, [sp, #88]	; 0x58
   3b692:	adc.w	r7, r1, r4
   3b696:	ldr	r1, [sp, #240]	; 0xf0
   3b698:	adds	r2, r2, r1
   3b69a:	ldr	r1, [sp, #248]	; 0xf8
   3b69c:	adc.w	r7, r1, r7
   3b6a0:	ldr	r1, [sp, #260]	; 0x104
   3b6a2:	eor.w	r4, r7, r1
   3b6a6:	ldr	r1, [sp, #228]	; 0xe4
   3b6a8:	adds	r3, r3, r4
   3b6aa:	eor.w	sl, r2, r1
   3b6ae:	ldr	r1, [sp, #240]	; 0xf0
   3b6b0:	adc.w	r0, r0, sl
   3b6b4:	eor.w	ip, r3, r1
   3b6b8:	ldr	r1, [sp, #248]	; 0xf8
   3b6ba:	eor.w	r5, r0, r1
   3b6be:	mov.w	lr, ip, lsr #24
   3b6c2:	orr.w	r1, lr, r5, lsl #8
   3b6c6:	lsrs	r5, r5, #24
   3b6c8:	orr.w	r6, r5, ip, lsl #8
   3b6cc:	ldr	r5, [sp, #92]	; 0x5c
   3b6ce:	adds	r2, r5, r2
   3b6d0:	ldr	r5, [sp, #96]	; 0x60
   3b6d2:	adc.w	r7, r5, r7
   3b6d6:	adds	r2, r2, r1
   3b6d8:	str	r2, [sp, #168]	; 0xa8
   3b6da:	adc.w	r2, r7, r6
   3b6de:	str	r2, [sp, #172]	; 0xac
   3b6e0:	ldr	r2, [sp, #168]	; 0xa8
   3b6e2:	eors	r4, r2
   3b6e4:	ldr	r2, [sp, #172]	; 0xac
   3b6e6:	eor.w	r2, r2, sl
   3b6ea:	lsrs	r5, r4, #16
   3b6ec:	orr.w	r5, r5, r2, lsl #16
   3b6f0:	mov.w	sl, r2, lsr #16
   3b6f4:	orr.w	sl, sl, r4, lsl #16
   3b6f8:	adds	r3, r3, r5
   3b6fa:	str	r3, [sp, #184]	; 0xb8
   3b6fc:	adc.w	r3, r0, sl
   3b700:	str	r3, [sp, #188]	; 0xbc
   3b702:	ldr	r3, [sp, #184]	; 0xb8
   3b704:	ldr	r2, [sp, #160]	; 0xa0
   3b706:	eors	r1, r3
   3b708:	ldr	r3, [sp, #188]	; 0xbc
   3b70a:	str	r5, [sp, #228]	; 0xe4
   3b70c:	eors	r6, r3
   3b70e:	lsls	r3, r6, #1
   3b710:	orr.w	r3, r3, r1, lsr #31
   3b714:	lsls	r1, r1, #1
   3b716:	str	r3, [sp, #248]	; 0xf8
   3b718:	orr.w	r3, r1, r6, lsr #31
   3b71c:	str	r3, [sp, #240]	; 0xf0
   3b71e:	ldr	r3, [sp, #100]	; 0x64
   3b720:	adds	r3, r3, r2
   3b722:	ldr	r2, [sp, #104]	; 0x68
   3b724:	ldr	r1, [sp, #164]	; 0xa4
   3b726:	ldr	r0, [sp, #196]	; 0xc4
   3b728:	adc.w	ip, r2, r1
   3b72c:	ldr	r2, [sp, #216]	; 0xd8
   3b72e:	adds.w	r3, r3, fp
   3b732:	adc.w	ip, ip, r2
   3b736:	ldr	r2, [sp, #212]	; 0xd4
   3b738:	eor.w	r7, ip, r2
   3b73c:	ldr	r2, [sp, #208]	; 0xd0
   3b73e:	eor.w	r1, r3, r2
   3b742:	ldr	r2, [sp, #192]	; 0xc0
   3b744:	adds	r2, r2, r7
   3b746:	adc.w	r5, r0, r1
   3b74a:	ldr	r0, [sp, #216]	; 0xd8
   3b74c:	eor.w	fp, r2, fp
   3b750:	eors	r0, r5
   3b752:	mov.w	r4, fp, lsr #24
   3b756:	orr.w	r9, r4, r0, lsl #8
   3b75a:	lsrs	r0, r0, #24
   3b75c:	orr.w	r6, r0, fp, lsl #8
   3b760:	ldr	r0, [sp, #108]	; 0x6c
   3b762:	adds	r3, r0, r3
   3b764:	ldr	r0, [sp, #112]	; 0x70
   3b766:	adc.w	ip, r0, ip
   3b76a:	adds.w	r3, r3, r9
   3b76e:	str	r3, [sp, #160]	; 0xa0
   3b770:	adc.w	r3, ip, r6
   3b774:	str	r3, [sp, #164]	; 0xa4
   3b776:	ldr	r3, [sp, #160]	; 0xa0
   3b778:	ldr	r0, [sp, #148]	; 0x94
   3b77a:	eors	r7, r3
   3b77c:	ldr	r3, [sp, #164]	; 0xa4
   3b77e:	eors	r1, r3
   3b780:	lsrs	r3, r7, #16
   3b782:	orr.w	r3, r3, r1, lsl #16
   3b786:	lsrs	r1, r1, #16
   3b788:	str	r3, [sp, #192]	; 0xc0
   3b78a:	orr.w	r3, r1, r7, lsl #16
   3b78e:	str	r3, [sp, #196]	; 0xc4
   3b790:	ldr	r3, [sp, #192]	; 0xc0
   3b792:	ldr	r1, [sp, #144]	; 0x90
   3b794:	adds	r2, r2, r3
   3b796:	ldr	r3, [sp, #196]	; 0xc4
   3b798:	eor.w	r9, r2, r9
   3b79c:	ldr	r7, [sp, #268]	; 0x10c
   3b79e:	adc.w	r5, r3, r5
   3b7a2:	eors	r6, r5
   3b7a4:	lsls	r3, r6, #1
   3b7a6:	orr.w	r3, r3, r9, lsr #31
   3b7aa:	mov.w	r9, r9, lsl #1
   3b7ae:	str	r3, [sp, #212]	; 0xd4
   3b7b0:	orr.w	r3, r9, r6, lsr #31
   3b7b4:	str	r3, [sp, #208]	; 0xd0
   3b7b6:	ldr	r3, [sp, #116]	; 0x74
   3b7b8:	ldr	r6, [sp, #264]	; 0x108
   3b7ba:	adds	r1, r3, r1
   3b7bc:	ldr	r3, [sp, #120]	; 0x78
   3b7be:	adc.w	r4, r3, r0
   3b7c2:	ldr	r3, [sp, #264]	; 0x108
   3b7c4:	ldr	r0, [sp, #204]	; 0xcc
   3b7c6:	adds	r1, r1, r3
   3b7c8:	ldr	r3, [sp, #268]	; 0x10c
   3b7ca:	adc.w	r4, r3, r4
   3b7ce:	ldr	r3, [sp, #236]	; 0xec
   3b7d0:	eor.w	r8, r4, r3
   3b7d4:	ldr	r3, [sp, #232]	; 0xe8
   3b7d6:	eor.w	ip, r1, r3
   3b7da:	ldr	r3, [sp, #200]	; 0xc8
   3b7dc:	adds.w	r3, r3, r8
   3b7e0:	adc.w	r0, r0, ip
   3b7e4:	eors	r6, r3
   3b7e6:	eor.w	lr, r0, r7
   3b7ea:	mov.w	fp, r6, lsr #24
   3b7ee:	orr.w	r7, fp, lr, lsl #8
   3b7f2:	mov.w	lr, lr, lsr #24
   3b7f6:	orr.w	r9, lr, r6, lsl #8
   3b7fa:	ldr	r6, [sp, #124]	; 0x7c
   3b7fc:	adds	r1, r6, r1
   3b7fe:	ldr	r6, [sp, #128]	; 0x80
   3b800:	adc.w	r4, r6, r4
   3b804:	adds	r1, r1, r7
   3b806:	str	r1, [sp, #144]	; 0x90
   3b808:	adc.w	r1, r4, r9
   3b80c:	str	r1, [sp, #148]	; 0x94
   3b80e:	ldr	r1, [sp, #144]	; 0x90
   3b810:	ldr	r6, [sp, #152]	; 0x98
   3b812:	eor.w	r8, r1, r8
   3b816:	ldr	r1, [sp, #148]	; 0x94
   3b818:	eor.w	ip, r1, ip
   3b81c:	mov.w	r1, r8, lsr #16
   3b820:	orr.w	r1, r1, ip, lsl #16
   3b824:	mov.w	ip, ip, lsr #16
   3b828:	orr.w	fp, ip, r8, lsl #16
   3b82c:	adds	r3, r3, r1
   3b82e:	adc.w	r0, r0, fp
   3b832:	eors	r7, r3
   3b834:	eor.w	r9, r0, r9
   3b838:	str	r1, [sp, #200]	; 0xc8
   3b83a:	mov.w	r1, r9, lsl #1
   3b83e:	orr.w	r4, r1, r7, lsr #31
   3b842:	ldr	r1, [sp, #116]	; 0x74
   3b844:	lsls	r7, r7, #1
   3b846:	orr.w	ip, r7, r9, lsr #31
   3b84a:	adds	r1, r1, r6
   3b84c:	ldr	r7, [sp, #156]	; 0x9c
   3b84e:	ldr	r6, [sp, #120]	; 0x78
   3b850:	adc.w	r9, r6, r7
   3b854:	adds.w	r1, r1, ip
   3b858:	adc.w	r9, r9, r4
   3b85c:	ldr	r6, [sp, #228]	; 0xe4
   3b85e:	eor.w	lr, r9, sl
   3b862:	adds.w	r2, r2, lr
   3b866:	eor.w	r6, r1, r6
   3b86a:	adc.w	r5, r6, r5
   3b86e:	eor.w	r7, r2, ip
   3b872:	eor.w	ip, r5, r4
   3b876:	mov.w	sl, r7, lsr #24
   3b87a:	orr.w	r4, sl, ip, lsl #8
   3b87e:	mov.w	ip, ip, lsr #24
   3b882:	orr.w	r8, ip, r7, lsl #8
   3b886:	ldr	r7, [sp, #84]	; 0x54
   3b888:	adds	r1, r7, r1
   3b88a:	ldr	r7, [sp, #88]	; 0x58
   3b88c:	adc.w	r9, r7, r9
   3b890:	adds	r1, r1, r4
   3b892:	str	r1, [sp, #84]	; 0x54
   3b894:	adc.w	r1, r9, r8
   3b898:	str	r1, [sp, #88]	; 0x58
   3b89a:	ldr	r1, [sp, #84]	; 0x54
   3b89c:	eor.w	lr, r1, lr
   3b8a0:	ldr	r1, [sp, #88]	; 0x58
   3b8a2:	eors	r6, r1
   3b8a4:	mov.w	r1, lr, lsr #16
   3b8a8:	orr.w	r1, r1, r6, lsl #16
   3b8ac:	lsrs	r6, r6, #16
   3b8ae:	str	r1, [sp, #152]	; 0x98
   3b8b0:	orr.w	r1, r6, lr, lsl #16
   3b8b4:	str	r1, [sp, #156]	; 0x9c
   3b8b6:	ldr	r1, [sp, #152]	; 0x98
   3b8b8:	adds	r2, r2, r1
   3b8ba:	str	r2, [sp, #116]	; 0x74
   3b8bc:	ldr	r2, [sp, #156]	; 0x9c
   3b8be:	ldr	r1, [sp, #168]	; 0xa8
   3b8c0:	adc.w	r2, r5, r2
   3b8c4:	str	r2, [sp, #120]	; 0x78
   3b8c6:	ldr	r2, [sp, #116]	; 0x74
   3b8c8:	eors	r4, r2
   3b8ca:	ldr	r2, [sp, #120]	; 0x78
   3b8cc:	eor.w	r8, r2, r8
   3b8d0:	mov.w	r2, r8, lsl #1
   3b8d4:	orr.w	r2, r2, r4, lsr #31
   3b8d8:	lsls	r4, r4, #1
   3b8da:	str	r2, [sp, #216]	; 0xd8
   3b8dc:	orr.w	r2, r4, r8, lsr #31
   3b8e0:	str	r2, [sp, #204]	; 0xcc
   3b8e2:	ldr	r2, [sp, #36]	; 0x24
   3b8e4:	ldr	r4, [sp, #172]	; 0xac
   3b8e6:	adds	r2, r2, r1
   3b8e8:	ldr	r1, [sp, #40]	; 0x28
   3b8ea:	adc.w	r7, r1, r4
   3b8ee:	ldr	r1, [sp, #244]	; 0xf4
   3b8f0:	adds	r2, r2, r1
   3b8f2:	ldr	r1, [sp, #252]	; 0xfc
   3b8f4:	ldr	r4, [sp, #244]	; 0xf4
   3b8f6:	adc.w	r7, r1, r7
   3b8fa:	ldr	r1, [sp, #196]	; 0xc4
   3b8fc:	ldr	r5, [sp, #252]	; 0xfc
   3b8fe:	eor.w	r6, r7, r1
   3b902:	ldr	r1, [sp, #192]	; 0xc0
   3b904:	adds	r3, r3, r6
   3b906:	eor.w	r1, r2, r1
   3b90a:	eor.w	r4, r3, r4
   3b90e:	adc.w	r0, r1, r0
   3b912:	eors	r5, r0
   3b914:	mov.w	r8, r4, lsr #24
   3b918:	orr.w	lr, r8, r5, lsl #8
   3b91c:	lsrs	r5, r5, #24
   3b91e:	orr.w	ip, r5, r4, lsl #8
   3b922:	ldr	r4, [sp, #68]	; 0x44
   3b924:	adds	r2, r4, r2
   3b926:	ldr	r4, [sp, #72]	; 0x48
   3b928:	adc.w	r7, r4, r7
   3b92c:	adds.w	r2, r2, lr
   3b930:	str	r2, [sp, #36]	; 0x24
   3b932:	adc.w	r2, r7, ip
   3b936:	str	r2, [sp, #40]	; 0x28
   3b938:	ldr	r2, [sp, #36]	; 0x24
   3b93a:	eors	r6, r2
   3b93c:	ldr	r2, [sp, #40]	; 0x28
   3b93e:	eors	r1, r2
   3b940:	lsrs	r2, r6, #16
   3b942:	orr.w	r2, r2, r1, lsl #16
   3b946:	lsrs	r1, r1, #16
   3b948:	str	r2, [sp, #168]	; 0xa8
   3b94a:	orr.w	r2, r1, r6, lsl #16
   3b94e:	str	r2, [sp, #172]	; 0xac
   3b950:	ldr	r2, [sp, #168]	; 0xa8
   3b952:	ldr	r1, [sp, #164]	; 0xa4
   3b954:	adds	r3, r3, r2
   3b956:	str	r3, [sp, #68]	; 0x44
   3b958:	ldr	r3, [sp, #172]	; 0xac
   3b95a:	adc.w	r3, r0, r3
   3b95e:	str	r3, [sp, #72]	; 0x48
   3b960:	ldr	r2, [sp, #72]	; 0x48
   3b962:	ldr	r3, [sp, #68]	; 0x44
   3b964:	eor.w	ip, r2, ip
   3b968:	eor.w	r3, r3, lr
   3b96c:	mov.w	r2, ip, lsl #1
   3b970:	orr.w	r2, r2, r3, lsr #31
   3b974:	mov.w	lr, r3, lsl #1
   3b978:	str	r2, [sp, #192]	; 0xc0
   3b97a:	orr.w	lr, lr, ip, lsr #31
   3b97e:	ldr	r2, [sp, #160]	; 0xa0
   3b980:	ldr	r3, [sp, #76]	; 0x4c
   3b982:	adds	r3, r3, r2
   3b984:	ldr	r2, [sp, #80]	; 0x50
   3b986:	adc.w	ip, r2, r1
   3b98a:	ldr	r2, [sp, #240]	; 0xf0
   3b98c:	ldr	r1, [sp, #180]	; 0xb4
   3b98e:	adds	r3, r3, r2
   3b990:	ldr	r2, [sp, #248]	; 0xf8
   3b992:	adc.w	ip, ip, r2
   3b996:	ldr	r2, [sp, #200]	; 0xc8
   3b998:	eor.w	r6, ip, fp
   3b99c:	eor.w	r0, r3, r2
   3b9a0:	ldr	r2, [sp, #176]	; 0xb0
   3b9a2:	adds	r2, r2, r6
   3b9a4:	adc.w	r5, r1, r0
   3b9a8:	ldr	r1, [sp, #240]	; 0xf0
   3b9aa:	eor.w	r8, r2, r1
   3b9ae:	ldr	r1, [sp, #248]	; 0xf8
   3b9b0:	eor.w	r4, r5, r1
   3b9b4:	mov.w	r9, r8, lsr #24
   3b9b8:	orr.w	r1, r9, r4, lsl #8
   3b9bc:	lsrs	r4, r4, #24
   3b9be:	orr.w	r7, r4, r8, lsl #8
   3b9c2:	ldr	r4, [sp, #124]	; 0x7c
   3b9c4:	adds	r3, r4, r3
   3b9c6:	ldr	r4, [sp, #128]	; 0x80
   3b9c8:	adc.w	ip, r4, ip
   3b9cc:	adds	r3, r3, r1
   3b9ce:	str	r3, [sp, #76]	; 0x4c
   3b9d0:	adc.w	r3, ip, r7
   3b9d4:	str	r3, [sp, #80]	; 0x50
   3b9d6:	ldr	r3, [sp, #76]	; 0x4c
   3b9d8:	eors	r6, r3
   3b9da:	ldr	r3, [sp, #80]	; 0x50
   3b9dc:	eors	r0, r3
   3b9de:	lsrs	r3, r6, #16
   3b9e0:	orr.w	r3, r3, r0, lsl #16
   3b9e4:	lsrs	r0, r0, #16
   3b9e6:	str	r3, [sp, #124]	; 0x7c
   3b9e8:	orr.w	r3, r0, r6, lsl #16
   3b9ec:	str	r3, [sp, #128]	; 0x80
   3b9ee:	ldr	r3, [sp, #124]	; 0x7c
   3b9f0:	ldr	r0, [sp, #148]	; 0x94
   3b9f2:	adds	r2, r2, r3
   3b9f4:	ldr	r3, [sp, #128]	; 0x80
   3b9f6:	eor.w	r1, r1, r2
   3b9fa:	ldr	r6, [sp, #208]	; 0xd0
   3b9fc:	adc.w	r5, r3, r5
   3ba00:	eors	r7, r5
   3ba02:	lsls	r3, r7, #1
   3ba04:	orr.w	r3, r3, r1, lsr #31
   3ba08:	lsls	r1, r1, #1
   3ba0a:	str	r3, [sp, #164]	; 0xa4
   3ba0c:	orr.w	r3, r1, r7, lsr #31
   3ba10:	ldr	r1, [sp, #144]	; 0x90
   3ba12:	str	r3, [sp, #160]	; 0xa0
   3ba14:	ldr	r3, [sp, #108]	; 0x6c
   3ba16:	adds	r1, r3, r1
   3ba18:	ldr	r3, [sp, #112]	; 0x70
   3ba1a:	adc.w	r4, r3, r0
   3ba1e:	ldr	r3, [sp, #208]	; 0xd0
   3ba20:	ldr	r0, [sp, #188]	; 0xbc
   3ba22:	adds	r1, r1, r3
   3ba24:	ldr	r3, [sp, #212]	; 0xd4
   3ba26:	adc.w	r4, r3, r4
   3ba2a:	ldr	r3, [sp, #224]	; 0xe0
   3ba2c:	eor.w	r8, r4, r3
   3ba30:	ldr	r3, [sp, #220]	; 0xdc
   3ba32:	eor.w	r7, r1, r3
   3ba36:	ldr	r3, [sp, #184]	; 0xb8
   3ba38:	adds.w	r3, r3, r8
   3ba3c:	str	r3, [sp, #108]	; 0x6c
   3ba3e:	eor.w	r9, r3, r6
   3ba42:	ldr	r6, [sp, #212]	; 0xd4
   3ba44:	ldr	r3, [sp, #52]	; 0x34
   3ba46:	adcs	r0, r7
   3ba48:	eor.w	ip, r0, r6
   3ba4c:	mov.w	fp, r9, lsr #24
   3ba50:	adds	r1, r3, r1
   3ba52:	ldr	r3, [sp, #56]	; 0x38
   3ba54:	orr.w	r6, fp, ip, lsl #8
   3ba58:	mov.w	ip, ip, lsr #24
   3ba5c:	orr.w	sl, ip, r9, lsl #8
   3ba60:	adc.w	r4, r3, r4
   3ba64:	adds	r3, r1, r6
   3ba66:	str	r3, [sp, #52]	; 0x34
   3ba68:	adc.w	r3, r4, sl
   3ba6c:	str	r3, [sp, #56]	; 0x38
   3ba6e:	ldr	r3, [sp, #52]	; 0x34
   3ba70:	eor.w	r8, r3, r8
   3ba74:	ldr	r3, [sp, #56]	; 0x38
   3ba76:	eors	r7, r3
   3ba78:	mov.w	r1, r8, lsr #16
   3ba7c:	ldr	r3, [sp, #108]	; 0x6c
   3ba7e:	orr.w	r4, r1, r7, lsl #16
   3ba82:	lsrs	r7, r7, #16
   3ba84:	adds	r3, r3, r4
   3ba86:	orr.w	fp, r7, r8, lsl #16
   3ba8a:	adc.w	r0, r0, fp
   3ba8e:	eors	r6, r3
   3ba90:	eor.w	sl, r0, sl
   3ba94:	mov.w	r1, sl, lsl #1
   3ba98:	orr.w	r1, r1, r6, lsr #31
   3ba9c:	lsls	r6, r6, #1
   3ba9e:	str	r1, [sp, #112]	; 0x70
   3baa0:	orr.w	r1, r6, sl, lsr #31
   3baa4:	str	r1, [sp, #108]	; 0x6c
   3baa6:	ldr	r6, [sp, #84]	; 0x54
   3baa8:	ldr	r1, [sp, #12]
   3baaa:	ldr	r7, [sp, #88]	; 0x58
   3baac:	adds	r1, r1, r6
   3baae:	ldr	r6, [sp, #16]
   3bab0:	adc.w	r9, r6, r7
   3bab4:	ldr	r6, [sp, #192]	; 0xc0
   3bab6:	adds.w	r1, r1, lr
   3baba:	adc.w	r9, r9, r6
   3babe:	eor.w	r7, r1, r4
   3bac2:	eor.w	r6, r9, fp
   3bac6:	ldr	r4, [sp, #192]	; 0xc0
   3bac8:	adds	r2, r2, r6
   3baca:	adc.w	r5, r7, r5
   3bace:	eor.w	lr, r2, lr
   3bad2:	eors	r4, r5
   3bad4:	mov.w	sl, lr, lsr #24
   3bad8:	orr.w	ip, sl, r4, lsl #8
   3badc:	lsrs	r4, r4, #24
   3bade:	orr.w	r8, r4, lr, lsl #8
   3bae2:	ldr	r4, [sp, #100]	; 0x64
   3bae4:	adds	r1, r4, r1
   3bae6:	ldr	r4, [sp, #104]	; 0x68
   3bae8:	adc.w	r9, r4, r9
   3baec:	adds.w	r1, r1, ip
   3baf0:	adc.w	r4, r9, r8
   3baf4:	eors	r6, r1
   3baf6:	eors	r7, r4
   3baf8:	strd	r1, r4, [sp, #400]	; 0x190
   3bafc:	mov.w	lr, r6, lsr #16
   3bb00:	orr.w	r1, lr, r7, lsl #16
   3bb04:	lsrs	r7, r7, #16
   3bb06:	orr.w	r4, r7, r6, lsl #16
   3bb0a:	adds	r2, r2, r1
   3bb0c:	adc.w	r5, r4, r5
   3bb10:	strd	r2, r5, [sp, #480]	; 0x1e0
   3bb14:	eor.w	r5, r5, r8
   3bb18:	eor.w	r2, r2, ip
   3bb1c:	strd	r1, r4, [sp, #520]	; 0x208
   3bb20:	lsls	r6, r5, #1
   3bb22:	ldr	r1, [sp, #36]	; 0x24
   3bb24:	orr.w	r6, r6, r2, lsr #31
   3bb28:	lsls	r2, r2, #1
   3bb2a:	orr.w	r5, r2, r5, lsr #31
   3bb2e:	ldr	r2, [sp, #4]
   3bb30:	ldr	r4, [sp, #40]	; 0x28
   3bb32:	adds	r2, r2, r1
   3bb34:	ldr	r1, [sp, #8]
   3bb36:	strd	r5, r6, [sp, #440]	; 0x1b8
   3bb3a:	adc.w	r7, r1, r4
   3bb3e:	ldr	r1, [sp, #160]	; 0xa0
   3bb40:	ldr	r5, [sp, #160]	; 0xa0
   3bb42:	adds	r2, r2, r1
   3bb44:	ldr	r1, [sp, #164]	; 0xa4
   3bb46:	ldr	r4, [sp, #152]	; 0x98
   3bb48:	adc.w	r7, r1, r7
   3bb4c:	ldr	r1, [sp, #156]	; 0x9c
   3bb4e:	eors	r4, r2
   3bb50:	eors	r1, r7
   3bb52:	adds	r3, r3, r1
   3bb54:	eor.w	lr, r3, r5
   3bb58:	ldr	r5, [sp, #164]	; 0xa4
   3bb5a:	adc.w	r0, r4, r0
   3bb5e:	eors	r5, r0
   3bb60:	mov.w	r8, lr, lsr #24
   3bb64:	orr.w	r6, r8, r5, lsl #8
   3bb68:	lsrs	r5, r5, #24
   3bb6a:	orr.w	ip, r5, lr, lsl #8
   3bb6e:	ldr	r5, [sp, #20]
   3bb70:	adds	r2, r5, r2
   3bb72:	ldr	r5, [sp, #24]
   3bb74:	adc.w	r7, r5, r7
   3bb78:	adds	r2, r2, r6
   3bb7a:	adc.w	r7, r7, ip
   3bb7e:	eors	r1, r2
   3bb80:	eors	r4, r7
   3bb82:	strd	r2, r7, [sp, #408]	; 0x198
   3bb86:	lsrs	r7, r1, #16
   3bb88:	orr.w	r2, r7, r4, lsl #16
   3bb8c:	lsrs	r4, r4, #16
   3bb8e:	orr.w	r5, r4, r1, lsl #16
   3bb92:	adds	r3, r3, r2
   3bb94:	adc.w	r0, r5, r0
   3bb98:	strd	r2, r5, [sp, #496]	; 0x1f0
   3bb9c:	strd	r3, r0, [sp, #488]	; 0x1e8
   3bba0:	eor.w	r0, r0, ip
   3bba4:	eors	r3, r6
   3bba6:	ldr	r2, [sp, #76]	; 0x4c
   3bba8:	lsls	r1, r0, #1
   3bbaa:	orr.w	r1, r1, r3, lsr #31
   3bbae:	lsls	r3, r3, #1
   3bbb0:	orr.w	r0, r3, r0, lsr #31
   3bbb4:	ldr	r3, [sp, #92]	; 0x5c
   3bbb6:	strd	r0, r1, [sp, #448]	; 0x1c0
   3bbba:	adds	r3, r3, r2
   3bbbc:	ldr	r1, [sp, #80]	; 0x50
   3bbbe:	ldr	r2, [sp, #96]	; 0x60
   3bbc0:	adc.w	ip, r2, r1
   3bbc4:	ldr	r2, [sp, #108]	; 0x6c
   3bbc6:	ldr	r1, [sp, #120]	; 0x78
   3bbc8:	adds	r3, r3, r2
   3bbca:	ldr	r2, [sp, #112]	; 0x70
   3bbcc:	adc.w	ip, ip, r2
   3bbd0:	ldr	r2, [sp, #172]	; 0xac
   3bbd2:	eor.w	r0, ip, r2
   3bbd6:	ldr	r2, [sp, #168]	; 0xa8
   3bbd8:	eor.w	r4, r3, r2
   3bbdc:	ldr	r2, [sp, #116]	; 0x74
   3bbde:	adds	r2, r2, r0
   3bbe0:	adc.w	r5, r1, r4
   3bbe4:	ldr	r1, [sp, #108]	; 0x6c
   3bbe6:	eor.w	r6, r2, r1
   3bbea:	ldr	r1, [sp, #112]	; 0x70
   3bbec:	eors	r1, r5
   3bbee:	mov.w	r8, r6, lsr #24
   3bbf2:	orr.w	r7, r8, r1, lsl #8
   3bbf6:	lsrs	r1, r1, #24
   3bbf8:	orr.w	lr, r1, r6, lsl #8
   3bbfc:	ldr	r1, [sp, #60]	; 0x3c
   3bbfe:	adds	r3, r1, r3
   3bc00:	ldr	r1, [sp, #64]	; 0x40
   3bc02:	adc.w	ip, r1, ip
   3bc06:	adds	r3, r3, r7
   3bc08:	adc.w	r1, ip, lr
   3bc0c:	eors	r0, r3
   3bc0e:	eors	r4, r1
   3bc10:	strd	r3, r1, [sp, #416]	; 0x1a0
   3bc14:	lsrs	r6, r0, #16
   3bc16:	orr.w	r3, r6, r4, lsl #16
   3bc1a:	lsrs	r4, r4, #16
   3bc1c:	orr.w	r1, r4, r0, lsl #16
   3bc20:	adds	r2, r2, r3
   3bc22:	adc.w	r5, r1, r5
   3bc26:	strd	r2, r5, [sp, #464]	; 0x1d0
   3bc2a:	eor.w	r5, r5, lr
   3bc2e:	eors	r2, r7
   3bc30:	strd	r3, r1, [sp, #504]	; 0x1f8
   3bc34:	lsls	r0, r5, #1
   3bc36:	ldr	r3, [sp, #44]	; 0x2c
   3bc38:	orr.w	r0, r0, r2, lsr #31
   3bc3c:	lsls	r2, r2, #1
   3bc3e:	orr.w	r5, r2, r5, lsr #31
   3bc42:	ldr	r2, [sp, #52]	; 0x34
   3bc44:	strd	r5, r0, [sp, #456]	; 0x1c8
   3bc48:	adds	r1, r3, r2
   3bc4a:	ldr	r3, [sp, #48]	; 0x30
   3bc4c:	ldr	r2, [sp, #56]	; 0x38
   3bc4e:	adc.w	r4, r3, r2
   3bc52:	ldr	r3, [sp, #204]	; 0xcc
   3bc54:	adds	r1, r1, r3
   3bc56:	ldr	r3, [sp, #216]	; 0xd8
   3bc58:	adc.w	r2, r4, r3
   3bc5c:	ldr	r3, [sp, #128]	; 0x80
   3bc5e:	eor.w	r5, r2, r3
   3bc62:	ldr	r3, [sp, #124]	; 0x7c
   3bc64:	ldr	r0, [sp, #72]	; 0x48
   3bc66:	eor.w	r6, r1, r3
   3bc6a:	ldr	r3, [sp, #68]	; 0x44
   3bc6c:	ldr	r4, [sp, #204]	; 0xcc
   3bc6e:	adds	r3, r3, r5
   3bc70:	ldr	r7, [sp, #216]	; 0xd8
   3bc72:	adcs	r0, r6
   3bc74:	eors	r4, r3
   3bc76:	eors	r7, r0
   3bc78:	mov.w	r8, r4, lsr #24
   3bc7c:	orr.w	ip, r8, r7, lsl #8
   3bc80:	lsrs	r7, r7, #24
   3bc82:	orr.w	lr, r7, r4, lsl #8
   3bc86:	ldr	r4, [sp, #28]
   3bc88:	adds	r1, r4, r1
   3bc8a:	ldr	r4, [sp, #32]
   3bc8c:	adc.w	r2, r4, r2
   3bc90:	adds.w	r1, r1, ip
   3bc94:	adc.w	r2, r2, lr
   3bc98:	eors	r5, r1
   3bc9a:	eors	r6, r2
   3bc9c:	strd	r1, r2, [sp, #424]	; 0x1a8
   3bca0:	lsrs	r1, r5, #16
   3bca2:	orr.w	r2, r1, r6, lsl #16
   3bca6:	lsrs	r6, r6, #16
   3bca8:	adds	r3, r3, r2
   3bcaa:	orr.w	r7, r6, r5, lsl #16
   3bcae:	adc.w	r0, r7, r0
   3bcb2:	strd	r3, r0, [sp, #472]	; 0x1d8
   3bcb6:	eor.w	r0, r0, lr
   3bcba:	eor.w	ip, r3, ip
   3bcbe:	strd	r2, r7, [sp, #512]	; 0x200
   3bcc2:	lsls	r3, r0, #1
   3bcc4:	orr.w	r3, r3, ip, lsr #31
   3bcc8:	mov.w	ip, ip, lsl #1
   3bccc:	orr.w	r0, ip, r0, lsr #31
   3bcd0:	strd	r0, r3, [sp, #432]	; 0x1b0
   3bcd4:	ldr	r1, [sp, #136]	; 0x88
   3bcd6:	ldr	r3, [sp, #136]	; 0x88
   3bcd8:	adds	r1, #8
   3bcda:	str	r1, [sp, #136]	; 0x88
   3bcdc:	ldr	r1, [sp, #132]	; 0x84
   3bcde:	ldrd	r2, r3, [r3]
   3bce2:	ldr.w	r0, [r1, #8]!
   3bce6:	eors	r2, r0
   3bce8:	str	r1, [sp, #132]	; 0x84
   3bcea:	ldr	r1, [r1, #4]
   3bcec:	eors	r3, r1
   3bcee:	ldr	r1, [sp, #136]	; 0x88
   3bcf0:	ldrd	r0, r1, [r1, #56]	; 0x38
   3bcf4:	eors	r3, r1
   3bcf6:	ldr	r1, [sp, #132]	; 0x84
   3bcf8:	eors	r2, r0
   3bcfa:	str	r2, [r1, #0]
   3bcfc:	ldr	r2, [sp, #140]	; 0x8c
   3bcfe:	str	r3, [r1, #4]
   3bd00:	cmp	r1, r2
   3bd02:	bne.n	3bcd4 <SHA256Result@@Base+0x3a08>
   3bd04:	ldr	r2, [pc, #24]	; (3bd20 <SHA256Result@@Base+0x3a54>)
   3bd06:	ldr	r3, [pc, #28]	; (3bd24 <SHA256Result@@Base+0x3a58>)
   3bd08:	add	r2, pc
   3bd0a:	ldr	r3, [r2, r3]
   3bd0c:	ldr	r2, [r3, #0]
   3bd0e:	ldr	r3, [sp, #532]	; 0x214
   3bd10:	eors	r2, r3
   3bd12:	beq.n	3bd18 <SHA256Result@@Base+0x3a4c>
   3bd14:	blx	88e4 <__stack_chk_fail@plt>
   3bd18:	add.w	sp, sp, #540	; 0x21c
   3bd1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3bd20:	beq.n	3bd74 <blake2b_init_param@@Base+0x4c>
   3bd22:	movs	r2, r0
   3bd24:	lsls	r4, r7, #9
	...

0003bd28 <blake2b_init_param@@Base>:
   3bd28:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3bd2c:	movs	r2, #240	; 0xf0
   3bd2e:	ldr	r6, [pc, #80]	; (3bd80 <blake2b_init_param@@Base+0x58>)
   3bd30:	mov	r5, r1
   3bd32:	movs	r1, #0
   3bd34:	mov	r4, r0
   3bd36:	blx	8bf8 <memset@plt+0x4>
   3bd3a:	sub.w	r2, r4, #8
   3bd3e:	add	r6, pc
   3bd40:	add.w	r8, r4, #56	; 0x38
   3bd44:	mov	r3, r2
   3bd46:	ldrd	r0, r1, [r6], #8
   3bd4a:	strd	r0, r1, [r3, #8]!
   3bd4e:	cmp	r3, r8
   3bd50:	bne.n	3bd46 <blake2b_init_param@@Base+0x1e>
   3bd52:	mov	r6, r5
   3bd54:	mov	r0, r6
   3bd56:	adds	r6, #8
   3bd58:	bl	382e0 <SHA256Result@@Base+0x14>
   3bd5c:	ldr.w	r7, [r2, #8]!
   3bd60:	cmp	r2, r8
   3bd62:	eor.w	r0, r0, r7
   3bd66:	ldr	r3, [r2, #4]
   3bd68:	eor.w	r1, r1, r3
   3bd6c:	strd	r0, r1, [r2]
   3bd70:	bne.n	3bd54 <blake2b_init_param@@Base+0x2c>
   3bd72:	ldrb	r3, [r5, #0]
   3bd74:	movs	r0, #0
   3bd76:	str.w	r3, [r4, #228]	; 0xe4
   3bd7a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3bd7e:	nop
   3bd80:	stmia	r3!, {r1, r2, r7}
   3bd82:	movs	r1, r0

0003bd84 <blake2b_init@@Base>:
   3bd84:	ldr	r2, [pc, #124]	; (3be04 <blake2b_init@@Base+0x80>)
   3bd86:	ldr	r3, [pc, #128]	; (3be08 <blake2b_init@@Base+0x84>)
   3bd88:	add	r2, pc
   3bd8a:	push	{r4, r5, lr}
   3bd8c:	sub	sp, #76	; 0x4c
   3bd8e:	ldr	r3, [r2, r3]
   3bd90:	mov	r5, r0
   3bd92:	ldr	r3, [r3, #0]
   3bd94:	str	r3, [sp, #68]	; 0x44
   3bd96:	mov.w	r3, #0
   3bd9a:	subs	r3, r1, #1
   3bd9c:	cmp	r3, #63	; 0x3f
   3bd9e:	bhi.n	3bdf8 <blake2b_init@@Base+0x74>
   3bda0:	movs	r4, #0
   3bda2:	movs	r2, #14
   3bda4:	strb.w	r1, [sp, #4]
   3bda8:	add.w	r0, sp, #22
   3bdac:	mov	r1, r4
   3bdae:	movw	r3, #257	; 0x101
   3bdb2:	strb.w	r4, [sp, #5]
   3bdb6:	strh.w	r3, [sp, #6]
   3bdba:	strd	r4, r4, [sp, #8]
   3bdbe:	str	r4, [sp, #16]
   3bdc0:	strh.w	r4, [sp, #20]
   3bdc4:	blx	8bf8 <memset@plt+0x4>
   3bdc8:	movs	r2, #16
   3bdca:	mov	r1, r4
   3bdcc:	add	r0, sp, #36	; 0x24
   3bdce:	blx	8bf8 <memset@plt+0x4>
   3bdd2:	mov	r1, r4
   3bdd4:	add	r0, sp, #52	; 0x34
   3bdd6:	movs	r2, #16
   3bdd8:	blx	8bf8 <memset@plt+0x4>
   3bddc:	add	r1, sp, #4
   3bdde:	mov	r0, r5
   3bde0:	bl	3bd28 <blake2b_init_param@@Base>
   3bde4:	ldr	r2, [pc, #36]	; (3be0c <blake2b_init@@Base+0x88>)
   3bde6:	ldr	r3, [pc, #32]	; (3be08 <blake2b_init@@Base+0x84>)
   3bde8:	add	r2, pc
   3bdea:	ldr	r3, [r2, r3]
   3bdec:	ldr	r2, [r3, #0]
   3bdee:	ldr	r3, [sp, #68]	; 0x44
   3bdf0:	eors	r2, r3
   3bdf2:	beq.n	3bdfe <blake2b_init@@Base+0x7a>
   3bdf4:	blx	88e4 <__stack_chk_fail@plt>
   3bdf8:	mov.w	r0, #4294967295	; 0xffffffff
   3bdfc:	b.n	3bde4 <blake2b_init@@Base+0x60>
   3bdfe:	add	sp, #76	; 0x4c
   3be00:	pop	{r4, r5, pc}
   3be02:	nop
   3be04:	ldmia	r7, {r3, r5, r7}
   3be06:	movs	r2, r0
   3be08:	lsls	r4, r7, #9
   3be0a:	movs	r0, r0
   3be0c:	ldmia	r7!, {r3, r6}
   3be0e:	movs	r2, r0

0003be10 <blake2b_update@@Base>:
   3be10:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3be14:	mov	r4, r0
   3be16:	mov	sl, r1
   3be18:	mov	r5, r2
   3be1a:	cmp	r2, #0
   3be1c:	beq.n	3beaa <blake2b_update@@Base+0x9a>
   3be1e:	ldr.w	r3, [r0, #224]	; 0xe0
   3be22:	add.w	fp, r0, #96	; 0x60
   3be26:	rsb	r2, r3, #128	; 0x80
   3be2a:	cmp	r5, r2
   3be2c:	bls.n	3be92 <blake2b_update@@Base+0x82>
   3be2e:	movs	r0, #0
   3be30:	str.w	r0, [r4, #224]	; 0xe0
   3be34:	add.w	r0, fp, r3
   3be38:	str	r2, [sp, #4]
   3be3a:	str	r3, [sp, #0]
   3be3c:	blx	8830 <memcpy@plt+0x4>
   3be40:	ldrd	r1, r0, [r4, #64]	; 0x40
   3be44:	adds.w	r8, r1, #128	; 0x80
   3be48:	adc.w	r9, r0, #0
   3be4c:	ldrd	r0, r1, [r4, #72]	; 0x48
   3be50:	cmp.w	r9, #0
   3be54:	strd	r8, r9, [r4, #64]	; 0x40
   3be58:	it	eq
   3be5a:	cmpeq.w	r8, #128	; 0x80
   3be5e:	ite	cc
   3be60:	movcc.w	ip, #1
   3be64:	movcs.w	ip, #0
   3be68:	adds.w	r0, r0, ip
   3be6c:	adc.w	r1, r1, #0
   3be70:	strd	r0, r1, [r4, #72]	; 0x48
   3be74:	mov	r1, fp
   3be76:	mov	r0, r4
   3be78:	bl	382e8 <SHA256Result@@Base+0x1c>
   3be7c:	ldr	r3, [sp, #0]
   3be7e:	ldr	r2, [sp, #4]
   3be80:	subs	r3, #128	; 0x80
   3be82:	add	r2, sl
   3be84:	add	r5, r3
   3be86:	add.w	r8, r2, r5
   3be8a:	cmp	r5, #128	; 0x80
   3be8c:	sub.w	sl, r8, r5
   3be90:	bhi.n	3beb2 <blake2b_update@@Base+0xa2>
   3be92:	ldr.w	r0, [r4, #224]	; 0xe0
   3be96:	mov	r2, r5
   3be98:	mov	r1, sl
   3be9a:	add	r0, fp
   3be9c:	blx	8830 <memcpy@plt+0x4>
   3bea0:	ldr.w	r2, [r4, #224]	; 0xe0
   3bea4:	add	r2, r5
   3bea6:	str.w	r2, [r4, #224]	; 0xe0
   3beaa:	movs	r0, #0
   3beac:	add	sp, #12
   3beae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3beb2:	ldrd	r3, r2, [r4, #64]	; 0x40
   3beb6:	mov	r0, r4
   3beb8:	subs	r5, #128	; 0x80
   3beba:	adds.w	r6, r3, #128	; 0x80
   3bebe:	adc.w	r7, r2, #0
   3bec2:	ldrd	r2, r3, [r4, #72]	; 0x48
   3bec6:	cmp	r7, #0
   3bec8:	strd	r6, r7, [r4, #64]	; 0x40
   3becc:	it	eq
   3bece:	cmpeq	r6, #128	; 0x80
   3bed0:	ite	cc
   3bed2:	movcc	r1, #1
   3bed4:	movcs	r1, #0
   3bed6:	adds	r2, r2, r1
   3bed8:	mov	r1, sl
   3beda:	adc.w	r3, r3, #0
   3bede:	strd	r2, r3, [r4, #72]	; 0x48
   3bee2:	bl	382e8 <SHA256Result@@Base+0x1c>
   3bee6:	b.n	3be8a <blake2b_update@@Base+0x7a>

0003bee8 <blake2b_init_key@@Base>:
   3bee8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3beec:	mov	r8, r2
   3beee:	ldr	r2, [pc, #192]	; (3bfb0 <blake2b_init_key@@Base+0xc8>)
   3bef0:	mov	r6, r3
   3bef2:	ldr	r3, [pc, #192]	; (3bfb4 <blake2b_init_key@@Base+0xcc>)
   3bef4:	sub	sp, #200	; 0xc8
   3bef6:	add	r2, pc
   3bef8:	mov	r7, r0
   3befa:	ldr	r3, [r2, r3]
   3befc:	ldr	r3, [r3, #0]
   3befe:	str	r3, [sp, #196]	; 0xc4
   3bf00:	mov.w	r3, #0
   3bf04:	subs	r3, r1, #1
   3bf06:	cmp	r3, #63	; 0x3f
   3bf08:	bls.n	3bf22 <blake2b_init_key@@Base+0x3a>
   3bf0a:	mov.w	r0, #4294967295	; 0xffffffff
   3bf0e:	ldr	r2, [pc, #168]	; (3bfb8 <blake2b_init_key@@Base+0xd0>)
   3bf10:	ldr	r3, [pc, #160]	; (3bfb4 <blake2b_init_key@@Base+0xcc>)
   3bf12:	add	r2, pc
   3bf14:	ldr	r3, [r2, r3]
   3bf16:	ldr	r2, [r3, #0]
   3bf18:	ldr	r3, [sp, #196]	; 0xc4
   3bf1a:	eors	r2, r3
   3bf1c:	beq.n	3bfaa <blake2b_init_key@@Base+0xc2>
   3bf1e:	blx	88e4 <__stack_chk_fail@plt>
   3bf22:	cmp.w	r8, #0
   3bf26:	beq.n	3bf0a <blake2b_init_key@@Base+0x22>
   3bf28:	subs	r3, r6, #1
   3bf2a:	cmp	r3, #63	; 0x3f
   3bf2c:	bhi.n	3bf0a <blake2b_init_key@@Base+0x22>
   3bf2e:	movs	r4, #0
   3bf30:	movs	r2, #14
   3bf32:	strb.w	r1, [sp, #4]
   3bf36:	add.w	r0, sp, #22
   3bf3a:	mov	r1, r4
   3bf3c:	movw	r3, #257	; 0x101
   3bf40:	strb.w	r6, [sp, #5]
   3bf44:	strh.w	r3, [sp, #6]
   3bf48:	strd	r4, r4, [sp, #8]
   3bf4c:	str	r4, [sp, #16]
   3bf4e:	strh.w	r4, [sp, #20]
   3bf52:	blx	8bf8 <memset@plt+0x4>
   3bf56:	movs	r2, #16
   3bf58:	mov	r1, r4
   3bf5a:	add	r0, sp, #36	; 0x24
   3bf5c:	blx	8bf8 <memset@plt+0x4>
   3bf60:	movs	r2, #16
   3bf62:	mov	r1, r4
   3bf64:	add	r0, sp, #52	; 0x34
   3bf66:	blx	8bf8 <memset@plt+0x4>
   3bf6a:	add	r1, sp, #4
   3bf6c:	mov	r0, r7
   3bf6e:	bl	3bd28 <blake2b_init_param@@Base>
   3bf72:	cmp	r0, r4
   3bf74:	blt.n	3bf0a <blake2b_init_key@@Base+0x22>
   3bf76:	add	r5, sp, #68	; 0x44
   3bf78:	movs	r2, #128	; 0x80
   3bf7a:	mov	r1, r4
   3bf7c:	mov	r0, r5
   3bf7e:	blx	8bf8 <memset@plt+0x4>
   3bf82:	movs	r3, #128	; 0x80
   3bf84:	mov	r2, r6
   3bf86:	mov	r1, r8
   3bf88:	mov	r0, r5
   3bf8a:	blx	89a4 <__memcpy_chk@plt>
   3bf8e:	movs	r2, #128	; 0x80
   3bf90:	mov	r1, r5
   3bf92:	mov	r0, r7
   3bf94:	bl	3be10 <blake2b_update@@Base>
   3bf98:	ldr	r3, [pc, #32]	; (3bfbc <blake2b_init_key@@Base+0xd4>)
   3bf9a:	movs	r2, #128	; 0x80
   3bf9c:	mov	r1, r4
   3bf9e:	add	r3, pc
   3bfa0:	mov	r0, r5
   3bfa2:	ldr	r3, [r3, #0]
   3bfa4:	blx	r3
   3bfa6:	mov	r0, r4
   3bfa8:	b.n	3bf0e <blake2b_init_key@@Base+0x26>
   3bfaa:	add	sp, #200	; 0xc8
   3bfac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3bfb0:	ldmia	r6!, {r1, r3, r4, r5}
   3bfb2:	movs	r2, r0
   3bfb4:	lsls	r4, r7, #9
   3bfb6:	movs	r0, r0
   3bfb8:	ldmia	r6!, {r1, r2, r3, r4}
   3bfba:	movs	r2, r0
   3bfbc:	b.n	3c4f4 <btrfs_util_strerror@@Base+0x364>
   3bfbe:	movs	r2, r0

0003bfc0 <blake2b_final@@Base>:
   3bfc0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   3bfc4:	mov	r6, r2
   3bfc6:	ldr	r2, [pc, #280]	; (3c0e0 <blake2b_final@@Base+0x120>)
   3bfc8:	sub	sp, #76	; 0x4c
   3bfca:	ldr	r3, [pc, #280]	; (3c0e4 <blake2b_final@@Base+0x124>)
   3bfcc:	mov	r5, r1
   3bfce:	add	r2, pc
   3bfd0:	mov	r4, r0
   3bfd2:	movs	r1, #0
   3bfd4:	add	r0, sp, #8
   3bfd6:	ldr	r3, [r2, r3]
   3bfd8:	movs	r2, #60	; 0x3c
   3bfda:	ldr	r3, [r3, #0]
   3bfdc:	str	r3, [sp, #68]	; 0x44
   3bfde:	mov.w	r3, #0
   3bfe2:	str	r1, [sp, #4]
   3bfe4:	blx	8bf8 <memset@plt+0x4>
   3bfe8:	cmp	r5, #0
   3bfea:	beq.n	3c0d4 <blake2b_final@@Base+0x114>
   3bfec:	ldr.w	r3, [r4, #228]	; 0xe4
   3bff0:	cmp	r3, r6
   3bff2:	bhi.n	3c0d4 <blake2b_final@@Base+0x114>
   3bff4:	ldrd	r2, r3, [r4, #80]	; 0x50
   3bff8:	orrs	r3, r2
   3bffa:	bne.n	3c0d4 <blake2b_final@@Base+0x114>
   3bffc:	ldrd	r2, r3, [r4, #64]	; 0x40
   3c000:	movs	r7, #0
   3c002:	ldr.w	r0, [r4, #224]	; 0xe0
   3c006:	adds.w	r8, r0, r2
   3c00a:	adcs.w	r9, r7, r3
   3c00e:	ldrd	r2, r3, [r4, #72]	; 0x48
   3c012:	strd	r8, r9, [r4, #64]	; 0x40
   3c016:	ite	cs
   3c018:	movcs	r1, #1
   3c01a:	movcc	r1, #0
   3c01c:	adds	r2, r2, r1
   3c01e:	ldrb.w	r1, [r4, #232]	; 0xe8
   3c022:	adc.w	r3, r3, #0
   3c026:	strd	r2, r3, [r4, #72]	; 0x48
   3c02a:	mov.w	r2, #4294967295	; 0xffffffff
   3c02e:	mov.w	r3, #4294967295	; 0xffffffff
   3c032:	cbz	r1, 3c038 <blake2b_final@@Base+0x78>
   3c034:	strd	r2, r3, [r4, #88]	; 0x58
   3c038:	add.w	r6, r4, #96	; 0x60
   3c03c:	strd	r2, r3, [r4, #80]	; 0x50
   3c040:	movs	r1, #0
   3c042:	rsb	r2, r0, #128	; 0x80
   3c046:	add	r0, r6
   3c048:	add.w	r7, r4, #56	; 0x38
   3c04c:	blx	8bf8 <memset@plt+0x4>
   3c050:	mov	r1, r6
   3c052:	mov	r0, r4
   3c054:	bl	382e8 <SHA256Result@@Base+0x1c>
   3c058:	add	r3, sp, #4
   3c05a:	sub.w	r1, r4, #8
   3c05e:	mov	r6, r3
   3c060:	ldr.w	r0, [r1, #8]!
   3c064:	adds	r3, #8
   3c066:	cmp	r1, r7
   3c068:	ldr	r2, [r1, #4]
   3c06a:	mov.w	ip, r0, lsr #8
   3c06e:	strb.w	r0, [r3, #-8]
   3c072:	strb.w	ip, [r3, #-7]
   3c076:	mov.w	ip, r0, lsr #16
   3c07a:	strb.w	r2, [r3, #-4]
   3c07e:	mov.w	r0, r0, lsr #24
   3c082:	strb.w	ip, [r3, #-6]
   3c086:	strb.w	r0, [r3, #-5]
   3c08a:	mov.w	r0, r2, lsr #8
   3c08e:	strb.w	r0, [r3, #-3]
   3c092:	mov.w	r0, r2, lsr #16
   3c096:	mov.w	r2, r2, lsr #24
   3c09a:	strb.w	r0, [r3, #-2]
   3c09e:	strb.w	r2, [r3, #-1]
   3c0a2:	bne.n	3c060 <blake2b_final@@Base+0xa0>
   3c0a4:	ldr.w	r2, [r4, #228]	; 0xe4
   3c0a8:	mov	r1, r6
   3c0aa:	mov	r0, r5
   3c0ac:	blx	8830 <memcpy@plt+0x4>
   3c0b0:	ldr	r3, [pc, #52]	; (3c0e8 <blake2b_final@@Base+0x128>)
   3c0b2:	movs	r2, #64	; 0x40
   3c0b4:	movs	r1, #0
   3c0b6:	add	r3, pc
   3c0b8:	mov	r0, r6
   3c0ba:	ldr	r3, [r3, #0]
   3c0bc:	blx	r3
   3c0be:	movs	r0, #0
   3c0c0:	ldr	r2, [pc, #40]	; (3c0ec <blake2b_final@@Base+0x12c>)
   3c0c2:	ldr	r3, [pc, #32]	; (3c0e4 <blake2b_final@@Base+0x124>)
   3c0c4:	add	r2, pc
   3c0c6:	ldr	r3, [r2, r3]
   3c0c8:	ldr	r2, [r3, #0]
   3c0ca:	ldr	r3, [sp, #68]	; 0x44
   3c0cc:	eors	r2, r3
   3c0ce:	beq.n	3c0da <blake2b_final@@Base+0x11a>
   3c0d0:	blx	88e4 <__stack_chk_fail@plt>
   3c0d4:	mov.w	r0, #4294967295	; 0xffffffff
   3c0d8:	b.n	3c0c0 <blake2b_final@@Base+0x100>
   3c0da:	add	sp, #76	; 0x4c
   3c0dc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   3c0e0:	ldmia	r5, {r1, r5, r6}
   3c0e2:	movs	r2, r0
   3c0e4:	lsls	r4, r7, #9
   3c0e6:	movs	r0, r0
   3c0e8:	b.n	3c3f0 <btrfs_util_strerror@@Base+0x260>
   3c0ea:	movs	r2, r0
   3c0ec:	ldmia	r4!, {r2, r3, r5, r6}
   3c0ee:	movs	r2, r0

0003c0f0 <blake2b@@Base>:
   3c0f0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3c0f4:	mov	r6, r0
   3c0f6:	ldr	r5, [pc, #136]	; (3c180 <blake2b@@Base+0x90>)
   3c0f8:	sub	sp, #248	; 0xf8
   3c0fa:	ldr	r0, [pc, #136]	; (3c184 <blake2b@@Base+0x94>)
   3c0fc:	mov	r4, r1
   3c0fe:	add	r5, pc
   3c100:	mov	r8, r3
   3c102:	mov	r7, r2
   3c104:	ldrd	r1, r3, [sp, #272]	; 0x110
   3c108:	ldr	r0, [r5, r0]
   3c10a:	ldr	r0, [r0, #0]
   3c10c:	str	r0, [sp, #244]	; 0xf4
   3c10e:	mov.w	r0, #0
   3c112:	cbnz	r2, 3c132 <blake2b@@Base+0x42>
   3c114:	cmp.w	r8, #0
   3c118:	beq.n	3c132 <blake2b@@Base+0x42>
   3c11a:	mov.w	r0, #4294967295	; 0xffffffff
   3c11e:	ldr	r2, [pc, #104]	; (3c188 <blake2b@@Base+0x98>)
   3c120:	ldr	r3, [pc, #96]	; (3c184 <blake2b@@Base+0x94>)
   3c122:	add	r2, pc
   3c124:	ldr	r3, [r2, r3]
   3c126:	ldr	r2, [r3, #0]
   3c128:	ldr	r3, [sp, #244]	; 0xf4
   3c12a:	eors	r2, r3
   3c12c:	beq.n	3c17a <blake2b@@Base+0x8a>
   3c12e:	blx	88e4 <__stack_chk_fail@plt>
   3c132:	cmp	r6, #0
   3c134:	beq.n	3c11a <blake2b@@Base+0x2a>
   3c136:	cbnz	r1, 3c13c <blake2b@@Base+0x4c>
   3c138:	cmp	r3, #0
   3c13a:	bne.n	3c11a <blake2b@@Base+0x2a>
   3c13c:	subs	r2, r4, #1
   3c13e:	cmp	r2, #63	; 0x3f
   3c140:	bhi.n	3c11a <blake2b@@Base+0x2a>
   3c142:	cmp	r3, #64	; 0x40
   3c144:	bhi.n	3c11a <blake2b@@Base+0x2a>
   3c146:	mov	r5, sp
   3c148:	cbz	r3, 3c170 <blake2b@@Base+0x80>
   3c14a:	mov	r2, r1
   3c14c:	mov	r0, r5
   3c14e:	mov	r1, r4
   3c150:	bl	3bee8 <blake2b_init_key@@Base>
   3c154:	cmp	r0, #0
   3c156:	blt.n	3c11a <blake2b@@Base+0x2a>
   3c158:	mov	r2, r8
   3c15a:	mov	r1, r7
   3c15c:	mov	r0, r5
   3c15e:	bl	3be10 <blake2b_update@@Base>
   3c162:	mov	r2, r4
   3c164:	mov	r1, r6
   3c166:	mov	r0, r5
   3c168:	bl	3bfc0 <blake2b_final@@Base>
   3c16c:	movs	r0, #0
   3c16e:	b.n	3c11e <blake2b@@Base+0x2e>
   3c170:	mov	r1, r4
   3c172:	mov	r0, r5
   3c174:	bl	3bd84 <blake2b_init@@Base>
   3c178:	b.n	3c154 <blake2b@@Base+0x64>
   3c17a:	add	sp, #248	; 0xf8
   3c17c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   3c180:	ldmia	r4, {r1, r4, r5}
   3c182:	movs	r2, r0
   3c184:	lsls	r4, r7, #9
   3c186:	movs	r0, r0
   3c188:	ldmia	r4!, {r1, r2, r3}
   3c18a:	movs	r2, r0

0003c18c <blake2@@Base>:
   3c18c:	b.w	3c0f0 <blake2b@@Base>

0003c190 <btrfs_util_strerror@@Base>:
   3c190:	cmp	r0, #26
   3c192:	bhi.n	3c19e <btrfs_util_strerror@@Base+0xe>
   3c194:	ldr	r3, [pc, #12]	; (3c1a4 <btrfs_util_strerror@@Base+0x14>)
   3c196:	add	r3, pc
   3c198:	ldr.w	r0, [r3, r0, lsl #2]
   3c19c:	bx	lr
   3c19e:	movs	r0, #0
   3c1a0:	bx	lr
   3c1a2:	nop
   3c1a4:	ldmia	r2, {r1, r2, r3}
   3c1a6:	movs	r2, r0
   3c1a8:	subs	r2, r1, #1
   3c1aa:	it	eq
   3c1ac:	bxeq	lr
   3c1ae:	bcc.w	3c3fa <btrfs_util_strerror@@Base+0x26a>
   3c1b2:	cmp	r0, r1
   3c1b4:	bls.w	3c3e4 <btrfs_util_strerror@@Base+0x254>
   3c1b8:	tst	r1, r2
   3c1ba:	beq.w	3c3ec <btrfs_util_strerror@@Base+0x25c>
   3c1be:	clz	r3, r0
   3c1c2:	clz	r2, r1
   3c1c6:	sub.w	r3, r2, r3
   3c1ca:	rsb	r3, r3, #31
   3c1ce:	add	r2, pc, #16	; (adr r2, 3c1e0 <btrfs_util_strerror@@Base+0x50>)
   3c1d0:	add.w	r3, r2, r3, lsl #4
   3c1d4:	mov.w	r2, #0
   3c1d8:	mov	pc, r3
   3c1da:	nop
   3c1dc:	nop.w
   3c1e0:	cmp.w	r0, r1, lsl #31
   3c1e4:	nop
   3c1e6:	adc.w	r2, r2, r2
   3c1ea:	it	cs
   3c1ec:	subcs.w	r0, r0, r1, lsl #31
   3c1f0:	cmp.w	r0, r1, lsl #30
   3c1f4:	nop
   3c1f6:	adc.w	r2, r2, r2
   3c1fa:	it	cs
   3c1fc:	subcs.w	r0, r0, r1, lsl #30
   3c200:	cmp.w	r0, r1, lsl #29
   3c204:	nop
   3c206:	adc.w	r2, r2, r2
   3c20a:	it	cs
   3c20c:	subcs.w	r0, r0, r1, lsl #29
   3c210:	cmp.w	r0, r1, lsl #28
   3c214:	nop
   3c216:	adc.w	r2, r2, r2
   3c21a:	it	cs
   3c21c:	subcs.w	r0, r0, r1, lsl #28
   3c220:	cmp.w	r0, r1, lsl #27
   3c224:	nop
   3c226:	adc.w	r2, r2, r2
   3c22a:	it	cs
   3c22c:	subcs.w	r0, r0, r1, lsl #27
   3c230:	cmp.w	r0, r1, lsl #26
   3c234:	nop
   3c236:	adc.w	r2, r2, r2
   3c23a:	it	cs
   3c23c:	subcs.w	r0, r0, r1, lsl #26
   3c240:	cmp.w	r0, r1, lsl #25
   3c244:	nop
   3c246:	adc.w	r2, r2, r2
   3c24a:	it	cs
   3c24c:	subcs.w	r0, r0, r1, lsl #25
   3c250:	cmp.w	r0, r1, lsl #24
   3c254:	nop
   3c256:	adc.w	r2, r2, r2
   3c25a:	it	cs
   3c25c:	subcs.w	r0, r0, r1, lsl #24
   3c260:	cmp.w	r0, r1, lsl #23
   3c264:	nop
   3c266:	adc.w	r2, r2, r2
   3c26a:	it	cs
   3c26c:	subcs.w	r0, r0, r1, lsl #23
   3c270:	cmp.w	r0, r1, lsl #22
   3c274:	nop
   3c276:	adc.w	r2, r2, r2
   3c27a:	it	cs
   3c27c:	subcs.w	r0, r0, r1, lsl #22
   3c280:	cmp.w	r0, r1, lsl #21
   3c284:	nop
   3c286:	adc.w	r2, r2, r2
   3c28a:	it	cs
   3c28c:	subcs.w	r0, r0, r1, lsl #21
   3c290:	cmp.w	r0, r1, lsl #20
   3c294:	nop
   3c296:	adc.w	r2, r2, r2
   3c29a:	it	cs
   3c29c:	subcs.w	r0, r0, r1, lsl #20
   3c2a0:	cmp.w	r0, r1, lsl #19
   3c2a4:	nop
   3c2a6:	adc.w	r2, r2, r2
   3c2aa:	it	cs
   3c2ac:	subcs.w	r0, r0, r1, lsl #19
   3c2b0:	cmp.w	r0, r1, lsl #18
   3c2b4:	nop
   3c2b6:	adc.w	r2, r2, r2
   3c2ba:	it	cs
   3c2bc:	subcs.w	r0, r0, r1, lsl #18
   3c2c0:	cmp.w	r0, r1, lsl #17
   3c2c4:	nop
   3c2c6:	adc.w	r2, r2, r2
   3c2ca:	it	cs
   3c2cc:	subcs.w	r0, r0, r1, lsl #17
   3c2d0:	cmp.w	r0, r1, lsl #16
   3c2d4:	nop
   3c2d6:	adc.w	r2, r2, r2
   3c2da:	it	cs
   3c2dc:	subcs.w	r0, r0, r1, lsl #16
   3c2e0:	cmp.w	r0, r1, lsl #15
   3c2e4:	nop
   3c2e6:	adc.w	r2, r2, r2
   3c2ea:	it	cs
   3c2ec:	subcs.w	r0, r0, r1, lsl #15
   3c2f0:	cmp.w	r0, r1, lsl #14
   3c2f4:	nop
   3c2f6:	adc.w	r2, r2, r2
   3c2fa:	it	cs
   3c2fc:	subcs.w	r0, r0, r1, lsl #14
   3c300:	cmp.w	r0, r1, lsl #13
   3c304:	nop
   3c306:	adc.w	r2, r2, r2
   3c30a:	it	cs
   3c30c:	subcs.w	r0, r0, r1, lsl #13
   3c310:	cmp.w	r0, r1, lsl #12
   3c314:	nop
   3c316:	adc.w	r2, r2, r2
   3c31a:	it	cs
   3c31c:	subcs.w	r0, r0, r1, lsl #12
   3c320:	cmp.w	r0, r1, lsl #11
   3c324:	nop
   3c326:	adc.w	r2, r2, r2
   3c32a:	it	cs
   3c32c:	subcs.w	r0, r0, r1, lsl #11
   3c330:	cmp.w	r0, r1, lsl #10
   3c334:	nop
   3c336:	adc.w	r2, r2, r2
   3c33a:	it	cs
   3c33c:	subcs.w	r0, r0, r1, lsl #10
   3c340:	cmp.w	r0, r1, lsl #9
   3c344:	nop
   3c346:	adc.w	r2, r2, r2
   3c34a:	it	cs
   3c34c:	subcs.w	r0, r0, r1, lsl #9
   3c350:	cmp.w	r0, r1, lsl #8
   3c354:	nop
   3c356:	adc.w	r2, r2, r2
   3c35a:	it	cs
   3c35c:	subcs.w	r0, r0, r1, lsl #8
   3c360:	cmp.w	r0, r1, lsl #7
   3c364:	nop
   3c366:	adc.w	r2, r2, r2
   3c36a:	it	cs
   3c36c:	subcs.w	r0, r0, r1, lsl #7
   3c370:	cmp.w	r0, r1, lsl #6
   3c374:	nop
   3c376:	adc.w	r2, r2, r2
   3c37a:	it	cs
   3c37c:	subcs.w	r0, r0, r1, lsl #6
   3c380:	cmp.w	r0, r1, lsl #5
   3c384:	nop
   3c386:	adc.w	r2, r2, r2
   3c38a:	it	cs
   3c38c:	subcs.w	r0, r0, r1, lsl #5
   3c390:	cmp.w	r0, r1, lsl #4
   3c394:	nop
   3c396:	adc.w	r2, r2, r2
   3c39a:	it	cs
   3c39c:	subcs.w	r0, r0, r1, lsl #4
   3c3a0:	cmp.w	r0, r1, lsl #3
   3c3a4:	nop
   3c3a6:	adc.w	r2, r2, r2
   3c3aa:	it	cs
   3c3ac:	subcs.w	r0, r0, r1, lsl #3
   3c3b0:	cmp.w	r0, r1, lsl #2
   3c3b4:	nop
   3c3b6:	adc.w	r2, r2, r2
   3c3ba:	it	cs
   3c3bc:	subcs.w	r0, r0, r1, lsl #2
   3c3c0:	cmp.w	r0, r1, lsl #1
   3c3c4:	nop
   3c3c6:	adc.w	r2, r2, r2
   3c3ca:	it	cs
   3c3cc:	subcs.w	r0, r0, r1, lsl #1
   3c3d0:	cmp.w	r0, r1
   3c3d4:	nop
   3c3d6:	adc.w	r2, r2, r2
   3c3da:	it	cs
   3c3dc:	subcs.w	r0, r0, r1
   3c3e0:	mov	r0, r2
   3c3e2:	bx	lr
   3c3e4:	ite	eq
   3c3e6:	moveq	r0, #1
   3c3e8:	movne	r0, #0
   3c3ea:	bx	lr
   3c3ec:	clz	r2, r1
   3c3f0:	rsb	r2, r2, #31
   3c3f4:	lsr.w	r0, r0, r2
   3c3f8:	bx	lr
   3c3fa:	cbz	r0, 3c400 <btrfs_util_strerror@@Base+0x270>
   3c3fc:	mov.w	r0, #4294967295	; 0xffffffff
   3c400:	b.w	3c9bc <btrfs_util_strerror@@Base+0x82c>
   3c404:	cmp	r1, #0
   3c406:	beq.n	3c3fa <btrfs_util_strerror@@Base+0x26a>
   3c408:	stmdb	sp!, {r0, r1, lr}
   3c40c:	bl	3c1a8 <btrfs_util_strerror@@Base+0x18>
   3c410:	ldmia.w	sp!, {r1, r2, lr}
   3c414:	mul.w	r3, r2, r0
   3c418:	sub.w	r1, r1, r3
   3c41c:	bx	lr
   3c41e:	nop
   3c420:	cmp	r1, #0
   3c422:	beq.w	3c6a2 <btrfs_util_strerror@@Base+0x512>
   3c426:	eor.w	ip, r0, r1
   3c42a:	it	mi
   3c42c:	negmi	r1, r1
   3c42e:	subs	r2, r1, #1
   3c430:	beq.w	3c672 <btrfs_util_strerror@@Base+0x4e2>
   3c434:	movs	r3, r0
   3c436:	it	mi
   3c438:	negmi	r3, r0
   3c43a:	cmp	r3, r1
   3c43c:	bls.w	3c67c <btrfs_util_strerror@@Base+0x4ec>
   3c440:	tst	r1, r2
   3c442:	beq.w	3c68c <btrfs_util_strerror@@Base+0x4fc>
   3c446:	clz	r2, r3
   3c44a:	clz	r0, r1
   3c44e:	sub.w	r2, r0, r2
   3c452:	rsb	r2, r2, #31
   3c456:	add	r0, pc, #16	; (adr r0, 3c468 <btrfs_util_strerror@@Base+0x2d8>)
   3c458:	add.w	r2, r0, r2, lsl #4
   3c45c:	mov.w	r0, #0
   3c460:	mov	pc, r2
   3c462:	nop
   3c464:	nop.w
   3c468:	cmp.w	r3, r1, lsl #31
   3c46c:	nop
   3c46e:	adc.w	r0, r0, r0
   3c472:	it	cs
   3c474:	subcs.w	r3, r3, r1, lsl #31
   3c478:	cmp.w	r3, r1, lsl #30
   3c47c:	nop
   3c47e:	adc.w	r0, r0, r0
   3c482:	it	cs
   3c484:	subcs.w	r3, r3, r1, lsl #30
   3c488:	cmp.w	r3, r1, lsl #29
   3c48c:	nop
   3c48e:	adc.w	r0, r0, r0
   3c492:	it	cs
   3c494:	subcs.w	r3, r3, r1, lsl #29
   3c498:	cmp.w	r3, r1, lsl #28
   3c49c:	nop
   3c49e:	adc.w	r0, r0, r0
   3c4a2:	it	cs
   3c4a4:	subcs.w	r3, r3, r1, lsl #28
   3c4a8:	cmp.w	r3, r1, lsl #27
   3c4ac:	nop
   3c4ae:	adc.w	r0, r0, r0
   3c4b2:	it	cs
   3c4b4:	subcs.w	r3, r3, r1, lsl #27
   3c4b8:	cmp.w	r3, r1, lsl #26
   3c4bc:	nop
   3c4be:	adc.w	r0, r0, r0
   3c4c2:	it	cs
   3c4c4:	subcs.w	r3, r3, r1, lsl #26
   3c4c8:	cmp.w	r3, r1, lsl #25
   3c4cc:	nop
   3c4ce:	adc.w	r0, r0, r0
   3c4d2:	it	cs
   3c4d4:	subcs.w	r3, r3, r1, lsl #25
   3c4d8:	cmp.w	r3, r1, lsl #24
   3c4dc:	nop
   3c4de:	adc.w	r0, r0, r0
   3c4e2:	it	cs
   3c4e4:	subcs.w	r3, r3, r1, lsl #24
   3c4e8:	cmp.w	r3, r1, lsl #23
   3c4ec:	nop
   3c4ee:	adc.w	r0, r0, r0
   3c4f2:	it	cs
   3c4f4:	subcs.w	r3, r3, r1, lsl #23
   3c4f8:	cmp.w	r3, r1, lsl #22
   3c4fc:	nop
   3c4fe:	adc.w	r0, r0, r0
   3c502:	it	cs
   3c504:	subcs.w	r3, r3, r1, lsl #22
   3c508:	cmp.w	r3, r1, lsl #21
   3c50c:	nop
   3c50e:	adc.w	r0, r0, r0
   3c512:	it	cs
   3c514:	subcs.w	r3, r3, r1, lsl #21
   3c518:	cmp.w	r3, r1, lsl #20
   3c51c:	nop
   3c51e:	adc.w	r0, r0, r0
   3c522:	it	cs
   3c524:	subcs.w	r3, r3, r1, lsl #20
   3c528:	cmp.w	r3, r1, lsl #19
   3c52c:	nop
   3c52e:	adc.w	r0, r0, r0
   3c532:	it	cs
   3c534:	subcs.w	r3, r3, r1, lsl #19
   3c538:	cmp.w	r3, r1, lsl #18
   3c53c:	nop
   3c53e:	adc.w	r0, r0, r0
   3c542:	it	cs
   3c544:	subcs.w	r3, r3, r1, lsl #18
   3c548:	cmp.w	r3, r1, lsl #17
   3c54c:	nop
   3c54e:	adc.w	r0, r0, r0
   3c552:	it	cs
   3c554:	subcs.w	r3, r3, r1, lsl #17
   3c558:	cmp.w	r3, r1, lsl #16
   3c55c:	nop
   3c55e:	adc.w	r0, r0, r0
   3c562:	it	cs
   3c564:	subcs.w	r3, r3, r1, lsl #16
   3c568:	cmp.w	r3, r1, lsl #15
   3c56c:	nop
   3c56e:	adc.w	r0, r0, r0
   3c572:	it	cs
   3c574:	subcs.w	r3, r3, r1, lsl #15
   3c578:	cmp.w	r3, r1, lsl #14
   3c57c:	nop
   3c57e:	adc.w	r0, r0, r0
   3c582:	it	cs
   3c584:	subcs.w	r3, r3, r1, lsl #14
   3c588:	cmp.w	r3, r1, lsl #13
   3c58c:	nop
   3c58e:	adc.w	r0, r0, r0
   3c592:	it	cs
   3c594:	subcs.w	r3, r3, r1, lsl #13
   3c598:	cmp.w	r3, r1, lsl #12
   3c59c:	nop
   3c59e:	adc.w	r0, r0, r0
   3c5a2:	it	cs
   3c5a4:	subcs.w	r3, r3, r1, lsl #12
   3c5a8:	cmp.w	r3, r1, lsl #11
   3c5ac:	nop
   3c5ae:	adc.w	r0, r0, r0
   3c5b2:	it	cs
   3c5b4:	subcs.w	r3, r3, r1, lsl #11
   3c5b8:	cmp.w	r3, r1, lsl #10
   3c5bc:	nop
   3c5be:	adc.w	r0, r0, r0
   3c5c2:	it	cs
   3c5c4:	subcs.w	r3, r3, r1, lsl #10
   3c5c8:	cmp.w	r3, r1, lsl #9
   3c5cc:	nop
   3c5ce:	adc.w	r0, r0, r0
   3c5d2:	it	cs
   3c5d4:	subcs.w	r3, r3, r1, lsl #9
   3c5d8:	cmp.w	r3, r1, lsl #8
   3c5dc:	nop
   3c5de:	adc.w	r0, r0, r0
   3c5e2:	it	cs
   3c5e4:	subcs.w	r3, r3, r1, lsl #8
   3c5e8:	cmp.w	r3, r1, lsl #7
   3c5ec:	nop
   3c5ee:	adc.w	r0, r0, r0
   3c5f2:	it	cs
   3c5f4:	subcs.w	r3, r3, r1, lsl #7
   3c5f8:	cmp.w	r3, r1, lsl #6
   3c5fc:	nop
   3c5fe:	adc.w	r0, r0, r0
   3c602:	it	cs
   3c604:	subcs.w	r3, r3, r1, lsl #6
   3c608:	cmp.w	r3, r1, lsl #5
   3c60c:	nop
   3c60e:	adc.w	r0, r0, r0
   3c612:	it	cs
   3c614:	subcs.w	r3, r3, r1, lsl #5
   3c618:	cmp.w	r3, r1, lsl #4
   3c61c:	nop
   3c61e:	adc.w	r0, r0, r0
   3c622:	it	cs
   3c624:	subcs.w	r3, r3, r1, lsl #4
   3c628:	cmp.w	r3, r1, lsl #3
   3c62c:	nop
   3c62e:	adc.w	r0, r0, r0
   3c632:	it	cs
   3c634:	subcs.w	r3, r3, r1, lsl #3
   3c638:	cmp.w	r3, r1, lsl #2
   3c63c:	nop
   3c63e:	adc.w	r0, r0, r0
   3c642:	it	cs
   3c644:	subcs.w	r3, r3, r1, lsl #2
   3c648:	cmp.w	r3, r1, lsl #1
   3c64c:	nop
   3c64e:	adc.w	r0, r0, r0
   3c652:	it	cs
   3c654:	subcs.w	r3, r3, r1, lsl #1
   3c658:	cmp.w	r3, r1
   3c65c:	nop
   3c65e:	adc.w	r0, r0, r0
   3c662:	it	cs
   3c664:	subcs.w	r3, r3, r1
   3c668:	cmp.w	ip, #0
   3c66c:	it	mi
   3c66e:	negmi	r0, r0
   3c670:	bx	lr
   3c672:	teq	ip, r0
   3c676:	it	mi
   3c678:	negmi	r0, r0
   3c67a:	bx	lr
   3c67c:	it	cc
   3c67e:	movcc	r0, #0
   3c680:	itt	eq
   3c682:	moveq.w	r0, ip, asr #31
   3c686:	orreq.w	r0, r0, #1
   3c68a:	bx	lr
   3c68c:	clz	r2, r1
   3c690:	rsb	r2, r2, #31
   3c694:	cmp.w	ip, #0
   3c698:	lsr.w	r0, r3, r2
   3c69c:	it	mi
   3c69e:	negmi	r0, r0
   3c6a0:	bx	lr
   3c6a2:	cmp	r0, #0
   3c6a4:	it	gt
   3c6a6:	mvngt.w	r0, #2147483648	; 0x80000000
   3c6aa:	it	lt
   3c6ac:	movlt.w	r0, #2147483648	; 0x80000000
   3c6b0:	b.w	3c9bc <btrfs_util_strerror@@Base+0x82c>
   3c6b4:	cmp	r1, #0
   3c6b6:	beq.n	3c6a2 <btrfs_util_strerror@@Base+0x512>
   3c6b8:	stmdb	sp!, {r0, r1, lr}
   3c6bc:	bl	3c426 <btrfs_util_strerror@@Base+0x296>
   3c6c0:	ldmia.w	sp!, {r1, r2, lr}
   3c6c4:	mul.w	r3, r2, r0
   3c6c8:	sub.w	r1, r1, r3
   3c6cc:	bx	lr
   3c6ce:	nop
   3c6d0:	eor.w	r0, r0, #2147483648	; 0x80000000
   3c6d4:	b.n	3c6dc <btrfs_util_strerror@@Base+0x54c>
   3c6d6:	nop
   3c6d8:	eor.w	r1, r1, #2147483648	; 0x80000000
   3c6dc:	lsls	r2, r0, #1
   3c6de:	itttt	ne
   3c6e0:	movsne.w	r3, r1, lsl #1
   3c6e4:	teqne	r2, r3
   3c6e8:	mvnsne.w	ip, r2, asr #24
   3c6ec:	mvnsne.w	ip, r3, asr #24
   3c6f0:	beq.n	3c7c8 <btrfs_util_strerror@@Base+0x638>
   3c6f2:	mov.w	r2, r2, lsr #24
   3c6f6:	rsbs	r3, r2, r3, lsr #24
   3c6fa:	itttt	gt
   3c6fc:	addgt	r2, r2, r3
   3c6fe:	eorgt	r1, r0
   3c700:	eorgt	r0, r1
   3c702:	eorgt	r1, r0
   3c704:	it	lt
   3c706:	neglt	r3, r3
   3c708:	cmp	r3, #25
   3c70a:	it	hi
   3c70c:	bxhi	lr
   3c70e:	tst.w	r0, #2147483648	; 0x80000000
   3c712:	orr.w	r0, r0, #8388608	; 0x800000
   3c716:	bic.w	r0, r0, #4278190080	; 0xff000000
   3c71a:	it	ne
   3c71c:	negne	r0, r0
   3c71e:	tst.w	r1, #2147483648	; 0x80000000
   3c722:	orr.w	r1, r1, #8388608	; 0x800000
   3c726:	bic.w	r1, r1, #4278190080	; 0xff000000
   3c72a:	it	ne
   3c72c:	negne	r1, r1
   3c72e:	teq	r2, r3
   3c732:	beq.n	3c7b4 <btrfs_util_strerror@@Base+0x624>
   3c734:	sub.w	r2, r2, #1
   3c738:	asr.w	ip, r1, r3
   3c73c:	adds.w	r0, r0, ip
   3c740:	rsb	r3, r3, #32
   3c744:	lsl.w	r1, r1, r3
   3c748:	and.w	r3, r0, #2147483648	; 0x80000000
   3c74c:	bpl.n	3c754 <btrfs_util_strerror@@Base+0x5c4>
   3c74e:	negs	r1, r1
   3c750:	sbc.w	r0, r0, r0, lsl #1
   3c754:	cmp.w	r0, #8388608	; 0x800000
   3c758:	bcc.n	3c782 <btrfs_util_strerror@@Base+0x5f2>
   3c75a:	cmp.w	r0, #16777216	; 0x1000000
   3c75e:	bcc.n	3c76e <btrfs_util_strerror@@Base+0x5de>
   3c760:	lsrs	r0, r0, #1
   3c762:	mov.w	r1, r1, rrx
   3c766:	add.w	r2, r2, #1
   3c76a:	cmp	r2, #254	; 0xfe
   3c76c:	bcs.n	3c812 <btrfs_util_strerror@@Base+0x682>
   3c76e:	cmp.w	r1, #2147483648	; 0x80000000
   3c772:	adc.w	r0, r0, r2, lsl #23
   3c776:	it	eq
   3c778:	biceq.w	r0, r0, #1
   3c77c:	orr.w	r0, r0, r3
   3c780:	bx	lr
   3c782:	lsls	r1, r1, #1
   3c784:	adc.w	r0, r0, r0
   3c788:	subs	r2, #1
   3c78a:	it	cs
   3c78c:	cmpcs.w	r0, #8388608	; 0x800000
   3c790:	bcs.n	3c76e <btrfs_util_strerror@@Base+0x5de>
   3c792:	clz	ip, r0
   3c796:	sub.w	ip, ip, #8
   3c79a:	subs.w	r2, r2, ip
   3c79e:	lsl.w	r0, r0, ip
   3c7a2:	itet	ge
   3c7a4:	addge.w	r0, r0, r2, lsl #23
   3c7a8:	neglt	r2, r2
   3c7aa:	orrge	r0, r3
   3c7ac:	itt	lt
   3c7ae:	lsrlt	r0, r2
   3c7b0:	orrlt	r0, r3
   3c7b2:	bx	lr
   3c7b4:	teq	r2, #0
   3c7b8:	eor.w	r1, r1, #8388608	; 0x800000
   3c7bc:	itte	eq
   3c7be:	eoreq.w	r0, r0, #8388608	; 0x800000
   3c7c2:	addeq	r2, #1
   3c7c4:	subne	r3, #1
   3c7c6:	b.n	3c734 <btrfs_util_strerror@@Base+0x5a4>
   3c7c8:	mov.w	r3, r1, lsl #1
   3c7cc:	mvns.w	ip, r2, asr #24
   3c7d0:	it	ne
   3c7d2:	mvnsne.w	ip, r3, asr #24
   3c7d6:	beq.n	3c81c <btrfs_util_strerror@@Base+0x68c>
   3c7d8:	teq	r2, r3
   3c7dc:	beq.n	3c7e8 <btrfs_util_strerror@@Base+0x658>
   3c7de:	teq	r2, #0
   3c7e2:	it	eq
   3c7e4:	moveq	r0, r1
   3c7e6:	bx	lr
   3c7e8:	teq	r0, r1
   3c7ec:	itt	ne
   3c7ee:	movne	r0, #0
   3c7f0:	bxne	lr
   3c7f2:	tst.w	r2, #4278190080	; 0xff000000
   3c7f6:	bne.n	3c802 <btrfs_util_strerror@@Base+0x672>
   3c7f8:	lsls	r0, r0, #1
   3c7fa:	it	cs
   3c7fc:	orrcs.w	r0, r0, #2147483648	; 0x80000000
   3c800:	bx	lr
   3c802:	adds.w	r2, r2, #33554432	; 0x2000000
   3c806:	itt	cc
   3c808:	addcc.w	r0, r0, #8388608	; 0x800000
   3c80c:	bxcc	lr
   3c80e:	and.w	r3, r0, #2147483648	; 0x80000000
   3c812:	orr.w	r0, r3, #2130706432	; 0x7f000000
   3c816:	orr.w	r0, r0, #8388608	; 0x800000
   3c81a:	bx	lr
   3c81c:	mvns.w	r2, r2, asr #24
   3c820:	itet	ne
   3c822:	movne	r0, r1
   3c824:	mvnseq.w	r3, r3, asr #24
   3c828:	movne	r1, r0
   3c82a:	lsls	r2, r0, #9
   3c82c:	itte	eq
   3c82e:	movseq.w	r3, r1, lsl #9
   3c832:	teqeq	r0, r1
   3c836:	orrne.w	r0, r0, #4194304	; 0x400000
   3c83a:	bx	lr
   3c83c:	mov.w	r3, #0
   3c840:	b.n	3c84c <btrfs_util_strerror@@Base+0x6bc>
   3c842:	nop
   3c844:	ands.w	r3, r0, #2147483648	; 0x80000000
   3c848:	it	mi
   3c84a:	negmi	r0, r0
   3c84c:	movs.w	ip, r0
   3c850:	it	eq
   3c852:	bxeq	lr
   3c854:	orr.w	r3, r3, #1258291200	; 0x4b000000
   3c858:	mov	r1, r0
   3c85a:	mov.w	r0, #0
   3c85e:	b.n	3c89a <btrfs_util_strerror@@Base+0x70a>
   3c860:	orrs.w	r2, r0, r1
   3c864:	it	eq
   3c866:	bxeq	lr
   3c868:	mov.w	r3, #0
   3c86c:	b.n	3c884 <btrfs_util_strerror@@Base+0x6f4>
   3c86e:	nop
   3c870:	orrs.w	r2, r0, r1
   3c874:	it	eq
   3c876:	bxeq	lr
   3c878:	ands.w	r3, r1, #2147483648	; 0x80000000
   3c87c:	bpl.n	3c884 <btrfs_util_strerror@@Base+0x6f4>
   3c87e:	negs	r0, r0
   3c880:	sbc.w	r1, r1, r1, lsl #1
   3c884:	movs.w	ip, r1
   3c888:	ittt	eq
   3c88a:	moveq	ip, r0
   3c88c:	moveq	r1, r0
   3c88e:	moveq	r0, #0
   3c890:	orr.w	r3, r3, #1526726656	; 0x5b000000
   3c894:	it	eq
   3c896:	subeq.w	r3, r3, #268435456	; 0x10000000
   3c89a:	sub.w	r3, r3, #8388608	; 0x800000
   3c89e:	clz	r2, ip
   3c8a2:	subs	r2, #8
   3c8a4:	sub.w	r3, r3, r2, lsl #23
   3c8a8:	blt.n	3c8cc <btrfs_util_strerror@@Base+0x73c>
   3c8aa:	lsl.w	ip, r1, r2
   3c8ae:	add	r3, ip
   3c8b0:	lsl.w	ip, r0, r2
   3c8b4:	rsb	r2, r2, #32
   3c8b8:	cmp.w	ip, #2147483648	; 0x80000000
   3c8bc:	lsr.w	r2, r0, r2
   3c8c0:	adc.w	r0, r3, r2
   3c8c4:	it	eq
   3c8c6:	biceq.w	r0, r0, #1
   3c8ca:	bx	lr
   3c8cc:	add.w	r2, r2, #32
   3c8d0:	lsl.w	ip, r1, r2
   3c8d4:	rsb	r2, r2, #32
   3c8d8:	orrs.w	r0, r0, ip, lsl #1
   3c8dc:	lsr.w	r2, r1, r2
   3c8e0:	adc.w	r0, r3, r2
   3c8e4:	it	eq
   3c8e6:	biceq.w	r0, r0, ip, lsr #31
   3c8ea:	bx	lr
   3c8ec:	cbnz	r3, 3c90e <btrfs_util_strerror@@Base+0x77e>
   3c8ee:	cbnz	r2, 3c90e <btrfs_util_strerror@@Base+0x77e>
   3c8f0:	cmp	r1, #0
   3c8f2:	ittt	lt
   3c8f4:	movlt	r0, #0
   3c8f6:	movlt.w	r1, #2147483648	; 0x80000000
   3c8fa:	blt.n	3c90a <btrfs_util_strerror@@Base+0x77a>
   3c8fc:	it	eq
   3c8fe:	cmpeq	r0, #0
   3c900:	itt	ne
   3c902:	mvnne.w	r1, #2147483648	; 0x80000000
   3c906:	movne.w	r0, #4294967295	; 0xffffffff
   3c90a:	b.w	3c9bc <btrfs_util_strerror@@Base+0x82c>
   3c90e:	sub.w	ip, sp, #8
   3c912:	strd	ip, lr, [sp, #-16]!
   3c916:	cmp	r1, #0
   3c918:	blt.n	3c92e <btrfs_util_strerror@@Base+0x79e>
   3c91a:	cmp	r3, #0
   3c91c:	blt.n	3c954 <btrfs_util_strerror@@Base+0x7c4>
   3c91e:	bl	3c9c8 <btrfs_util_strerror@@Base+0x838>
   3c922:	ldr.w	lr, [sp, #4]
   3c926:	ldrd	r2, r3, [sp, #8]
   3c92a:	add	sp, #16
   3c92c:	bx	lr
   3c92e:	negs	r0, r0
   3c930:	sbc.w	r1, r1, r1, lsl #1
   3c934:	cmp	r3, #0
   3c936:	blt.n	3c970 <btrfs_util_strerror@@Base+0x7e0>
   3c938:	bl	3c9c8 <btrfs_util_strerror@@Base+0x838>
   3c93c:	ldr.w	lr, [sp, #4]
   3c940:	ldrd	r2, r3, [sp, #8]
   3c944:	add	sp, #16
   3c946:	negs	r0, r0
   3c948:	sbc.w	r1, r1, r1, lsl #1
   3c94c:	negs	r2, r2
   3c94e:	sbc.w	r3, r3, r3, lsl #1
   3c952:	bx	lr
   3c954:	negs	r2, r2
   3c956:	sbc.w	r3, r3, r3, lsl #1
   3c95a:	bl	3c9c8 <btrfs_util_strerror@@Base+0x838>
   3c95e:	ldr.w	lr, [sp, #4]
   3c962:	ldrd	r2, r3, [sp, #8]
   3c966:	add	sp, #16
   3c968:	negs	r0, r0
   3c96a:	sbc.w	r1, r1, r1, lsl #1
   3c96e:	bx	lr
   3c970:	negs	r2, r2
   3c972:	sbc.w	r3, r3, r3, lsl #1
   3c976:	bl	3c9c8 <btrfs_util_strerror@@Base+0x838>
   3c97a:	ldr.w	lr, [sp, #4]
   3c97e:	ldrd	r2, r3, [sp, #8]
   3c982:	add	sp, #16
   3c984:	negs	r2, r2
   3c986:	sbc.w	r3, r3, r3, lsl #1
   3c98a:	bx	lr
   3c98c:	cbnz	r3, 3c9a4 <btrfs_util_strerror@@Base+0x814>
   3c98e:	cbnz	r2, 3c9a4 <btrfs_util_strerror@@Base+0x814>
   3c990:	cmp	r1, #0
   3c992:	it	eq
   3c994:	cmpeq	r0, #0
   3c996:	itt	ne
   3c998:	movne.w	r1, #4294967295	; 0xffffffff
   3c99c:	movne.w	r0, #4294967295	; 0xffffffff
   3c9a0:	b.w	3c9bc <btrfs_util_strerror@@Base+0x82c>
   3c9a4:	sub.w	ip, sp, #8
   3c9a8:	strd	ip, lr, [sp, #-16]!
   3c9ac:	bl	3c9c8 <btrfs_util_strerror@@Base+0x838>
   3c9b0:	ldr.w	lr, [sp, #4]
   3c9b4:	ldrd	r2, r3, [sp, #8]
   3c9b8:	add	sp, #16
   3c9ba:	bx	lr
   3c9bc:	push	{r1, lr}
   3c9be:	mov.w	r0, #8
   3c9c2:	blx	8724 <raise@plt>
   3c9c6:	pop	{r1, pc}
   3c9c8:	cmp	r1, r3
   3c9ca:	it	eq
   3c9cc:	cmpeq	r0, r2
   3c9ce:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c9d2:	mov	r4, r0
   3c9d4:	it	cc
   3c9d6:	movcc	r0, #0
   3c9d8:	mov	r5, r1
   3c9da:	ldr.w	ip, [sp, #36]	; 0x24
   3c9de:	it	cc
   3c9e0:	movcc	r1, r0
   3c9e2:	bcc.n	3cabc <btrfs_util_strerror@@Base+0x92c>
   3c9e4:	mov	r8, r2
   3c9e6:	mov	r9, r3
   3c9e8:	clz	r2, r3
   3c9ec:	cmp	r3, #0
   3c9ee:	beq.n	3cad2 <btrfs_util_strerror@@Base+0x942>
   3c9f0:	clz	r3, r5
   3c9f4:	cmp	r5, #0
   3c9f6:	beq.n	3caca <btrfs_util_strerror@@Base+0x93a>
   3c9f8:	subs	r2, r2, r3
   3c9fa:	sub.w	lr, r2, #32
   3c9fe:	lsl.w	fp, r9, r2
   3ca02:	lsl.w	r3, r8, lr
   3ca06:	rsb	r7, r2, #32
   3ca0a:	orr.w	fp, fp, r3
   3ca0e:	lsr.w	r3, r8, r7
   3ca12:	orr.w	fp, fp, r3
   3ca16:	lsl.w	sl, r8, r2
   3ca1a:	cmp	r5, fp
   3ca1c:	it	eq
   3ca1e:	cmpeq	r4, sl
   3ca20:	itt	cc
   3ca22:	movcc	r0, #0
   3ca24:	movcc	r1, r0
   3ca26:	bcc.n	3ca3e <btrfs_util_strerror@@Base+0x8ae>
   3ca28:	movs	r0, #1
   3ca2a:	subs.w	r4, r4, sl
   3ca2e:	lsl.w	r1, r0, lr
   3ca32:	lsr.w	r3, r0, r7
   3ca36:	sbc.w	r5, r5, fp
   3ca3a:	orrs	r1, r3
   3ca3c:	lsls	r0, r2
   3ca3e:	cmp	r2, #0
   3ca40:	beq.n	3cabc <btrfs_util_strerror@@Base+0x92c>
   3ca42:	mov.w	r8, sl, lsr #1
   3ca46:	mov.w	r9, fp, lsr #1
   3ca4a:	orr.w	r8, r8, fp, lsl #31
   3ca4e:	mov	r6, r2
   3ca50:	b.n	3ca6a <btrfs_util_strerror@@Base+0x8da>
   3ca52:	subs.w	r3, r4, r8
   3ca56:	sbc.w	sl, r5, r9
   3ca5a:	adds	r3, r3, r3
   3ca5c:	adc.w	sl, sl, sl
   3ca60:	adds	r4, r3, #1
   3ca62:	adc.w	r5, sl, #0
   3ca66:	subs	r6, #1
   3ca68:	beq.n	3ca7a <btrfs_util_strerror@@Base+0x8ea>
   3ca6a:	cmp	r5, r9
   3ca6c:	it	eq
   3ca6e:	cmpeq	r4, r8
   3ca70:	bcs.n	3ca52 <btrfs_util_strerror@@Base+0x8c2>
   3ca72:	adds	r4, r4, r4
   3ca74:	adcs	r5, r5
   3ca76:	subs	r6, #1
   3ca78:	bne.n	3ca6a <btrfs_util_strerror@@Base+0x8da>
   3ca7a:	lsl.w	r7, r5, r7
   3ca7e:	lsr.w	r3, r4, r2
   3ca82:	orrs	r3, r7
   3ca84:	lsr.w	lr, r5, lr
   3ca88:	adds	r0, r0, r4
   3ca8a:	lsr.w	r8, r5, r2
   3ca8e:	orr.w	r4, r3, lr
   3ca92:	sub.w	r7, r2, #32
   3ca96:	rsb	r6, r2, #32
   3ca9a:	lsl.w	r3, r8, r2
   3ca9e:	lsl.w	r7, r4, r7
   3caa2:	lsl.w	r2, r4, r2
   3caa6:	orr.w	r3, r3, r7
   3caaa:	lsr.w	r6, r4, r6
   3caae:	adc.w	r1, r5, r1
   3cab2:	orrs	r3, r6
   3cab4:	subs	r0, r0, r2
   3cab6:	mov	r5, r8
   3cab8:	sbc.w	r1, r1, r3
   3cabc:	cmp.w	ip, #0
   3cac0:	beq.n	3cac6 <btrfs_util_strerror@@Base+0x936>
   3cac2:	strd	r4, r5, [ip]
   3cac6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3caca:	clz	r3, r4
   3cace:	adds	r3, #32
   3cad0:	b.n	3c9f8 <btrfs_util_strerror@@Base+0x868>
   3cad2:	clz	r2, r8
   3cad6:	clz	r3, r5
   3cada:	adds	r2, #32
   3cadc:	cmp	r5, #0
   3cade:	bne.n	3c9f8 <btrfs_util_strerror@@Base+0x868>
   3cae0:	b.n	3caca <btrfs_util_strerror@@Base+0x93a>
   3cae2:	nop

0003cae4 <__libc_csu_init@@Base>:
   3cae4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   3cae8:	mov	r7, r0
   3caea:	ldr	r6, [pc, #48]	; (3cb1c <__libc_csu_init@@Base+0x38>)
   3caec:	mov	r8, r1
   3caee:	ldr	r5, [pc, #48]	; (3cb20 <__libc_csu_init@@Base+0x3c>)
   3caf0:	mov	r9, r2
   3caf2:	add	r6, pc
   3caf4:	blx	86e8 <pthread_mutex_unlock@plt-0x20>
   3caf8:	add	r5, pc
   3cafa:	subs	r6, r6, r5
   3cafc:	asrs	r6, r6, #2
   3cafe:	beq.n	3cb16 <__libc_csu_init@@Base+0x32>
   3cb00:	subs	r5, #4
   3cb02:	movs	r4, #0
   3cb04:	ldr.w	r3, [r5, #4]!
   3cb08:	adds	r4, #1
   3cb0a:	mov	r2, r9
   3cb0c:	mov	r1, r8
   3cb0e:	mov	r0, r7
   3cb10:	blx	r3
   3cb12:	cmp	r6, r4
   3cb14:	bne.n	3cb04 <__libc_csu_init@@Base+0x20>
   3cb16:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   3cb1a:	nop
   3cb1c:	rev16	r6, r4
   3cb1e:	movs	r2, r0
   3cb20:	rev16	r4, r3
   3cb22:	movs	r2, r0

0003cb24 <__libc_csu_fini@@Base>:
   3cb24:	bx	lr
   3cb26:	nop
   3cb28:	mov	r2, r1
   3cb2a:	mov	r1, r0
   3cb2c:	movs	r0, #3
   3cb2e:	b.w	8978 <__xstat@plt>
   3cb32:	nop
   3cb34:	mov	r2, r1
   3cb36:	mov	r1, r0
   3cb38:	movs	r0, #3
   3cb3a:	b.w	8ab8 <__fxstat@plt>
   3cb3e:	nop
   3cb40:	mov	r2, r1
   3cb42:	mov	r1, r0
   3cb44:	movs	r0, #3
   3cb46:	b.w	8dc4 <__xstat64@plt>
   3cb4a:	nop
   3cb4c:	mov	r2, r1
   3cb4e:	mov	r1, r0
   3cb50:	movs	r0, #3
   3cb52:	b.w	8994 <__fxstat64@plt>
   3cb56:	nop

Disassembly of section .fini:

0003cb58 <.fini>:
   3cb58:	push	{r3, lr}
   3cb5c:	pop	{r3, pc}
