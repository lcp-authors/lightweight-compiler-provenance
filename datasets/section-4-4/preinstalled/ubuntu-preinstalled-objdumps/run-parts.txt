
ubuntu-preinstalled/run-parts:     file format elf32-littlearm


Disassembly of section .init:

00000f4c <.init>:
 f4c:	push	{r3, lr}
 f50:	bl	1544 <close@plt+0x364>
 f54:	pop	{r3, pc}

Disassembly of section .plt:

00000f58 <__cxa_finalize@plt-0x14>:
     f58:	push	{lr}		; (str lr, [sp, #-4]!)
     f5c:	ldr	lr, [pc, #4]	; f68 <__cxa_finalize@plt-0x4>
     f60:	add	lr, pc, lr
     f64:	ldr	pc, [lr, #8]!
     f68:	andeq	r2, r1, ip, ror #30

00000f6c <__cxa_finalize@plt>:
     f6c:	add	ip, pc, #0, 12
     f70:	add	ip, ip, #73728	; 0x12000
     f74:	ldr	pc, [ip, #3948]!	; 0xf6c

00000f78 <regerror@plt>:
     f78:	add	ip, pc, #0, 12
     f7c:	add	ip, ip, #73728	; 0x12000
     f80:	ldr	pc, [ip, #3940]!	; 0xf64

00000f84 <read@plt>:
     f84:	add	ip, pc, #0, 12
     f88:	add	ip, ip, #73728	; 0x12000
     f8c:	ldr	pc, [ip, #3932]!	; 0xf5c

00000f90 <fflush@plt>:
     f90:	add	ip, pc, #0, 12
     f94:	add	ip, ip, #73728	; 0x12000
     f98:	ldr	pc, [ip, #3924]!	; 0xf54

00000f9c <sigprocmask@plt>:
     f9c:	add	ip, pc, #0, 12
     fa0:	add	ip, ip, #73728	; 0x12000
     fa4:	ldr	pc, [ip, #3916]!	; 0xf4c

00000fa8 <free@plt>:
     fa8:			; <UNDEFINED> instruction: 0xe7fd4778
     fac:	add	ip, pc, #0, 12
     fb0:	add	ip, ip, #73728	; 0x12000
     fb4:	ldr	pc, [ip, #3904]!	; 0xf40

00000fb8 <memcpy@plt>:
     fb8:	add	ip, pc, #0, 12
     fbc:	add	ip, ip, #73728	; 0x12000
     fc0:	ldr	pc, [ip, #3896]!	; 0xf38

00000fc4 <stpcpy@plt>:
     fc4:	add	ip, pc, #0, 12
     fc8:	add	ip, ip, #73728	; 0x12000
     fcc:	ldr	pc, [ip, #3888]!	; 0xf30

00000fd0 <strdup@plt>:
     fd0:	add	ip, pc, #0, 12
     fd4:	add	ip, ip, #73728	; 0x12000
     fd8:	ldr	pc, [ip, #3880]!	; 0xf28

00000fdc <__stack_chk_fail@plt>:
     fdc:	add	ip, pc, #0, 12
     fe0:	add	ip, ip, #73728	; 0x12000
     fe4:	ldr	pc, [ip, #3872]!	; 0xf20

00000fe8 <dup2@plt>:
     fe8:	add	ip, pc, #0, 12
     fec:	add	ip, ip, #73728	; 0x12000
     ff0:	ldr	pc, [ip, #3864]!	; 0xf18

00000ff4 <realloc@plt>:
     ff4:	add	ip, pc, #0, 12
     ff8:	add	ip, ip, #73728	; 0x12000
     ffc:	ldr	pc, [ip, #3856]!	; 0xf10

00001000 <__fdelt_chk@plt>:
    1000:	add	ip, pc, #0, 12
    1004:	add	ip, ip, #73728	; 0x12000
    1008:	ldr	pc, [ip, #3848]!	; 0xf08

0000100c <regexec@plt>:
    100c:	add	ip, pc, #0, 12
    1010:	add	ip, ip, #73728	; 0x12000
    1014:	ldr	pc, [ip, #3840]!	; 0xf00

00001018 <sigaction@plt>:
    1018:	add	ip, pc, #0, 12
    101c:	add	ip, ip, #73728	; 0x12000
    1020:	ldr	pc, [ip, #3832]!	; 0xef8

00001024 <fwrite@plt>:
    1024:	add	ip, pc, #0, 12
    1028:	add	ip, ip, #73728	; 0x12000
    102c:	ldr	pc, [ip, #3824]!	; 0xef0

00001030 <lseek64@plt>:
    1030:	add	ip, pc, #0, 12
    1034:	add	ip, ip, #73728	; 0x12000
    1038:	ldr	pc, [ip, #3816]!	; 0xee8

0000103c <regfree@plt>:
    103c:	add	ip, pc, #0, 12
    1040:	add	ip, ip, #73728	; 0x12000
    1044:	ldr	pc, [ip, #3808]!	; 0xee0

00001048 <waitpid@plt>:
    1048:	add	ip, pc, #0, 12
    104c:	add	ip, ip, #73728	; 0x12000
    1050:	ldr	pc, [ip, #3800]!	; 0xed8

00001054 <strcpy@plt>:
    1054:	add	ip, pc, #0, 12
    1058:	add	ip, ip, #73728	; 0x12000
    105c:	ldr	pc, [ip, #3792]!	; 0xed0

00001060 <open64@plt>:
    1060:	add	ip, pc, #0, 12
    1064:	add	ip, ip, #73728	; 0x12000
    1068:	ldr	pc, [ip, #3784]!	; 0xec8

0000106c <getenv@plt>:
    106c:	add	ip, pc, #0, 12
    1070:	add	ip, ip, #73728	; 0x12000
    1074:	ldr	pc, [ip, #3776]!	; 0xec0

00001078 <puts@plt>:
    1078:	add	ip, pc, #0, 12
    107c:	add	ip, ip, #73728	; 0x12000
    1080:	ldr	pc, [ip, #3768]!	; 0xeb8

00001084 <malloc@plt>:
    1084:	add	ip, pc, #0, 12
    1088:	add	ip, ip, #73728	; 0x12000
    108c:	ldr	pc, [ip, #3760]!	; 0xeb0

00001090 <sigaddset@plt>:
    1090:	add	ip, pc, #0, 12
    1094:	add	ip, ip, #73728	; 0x12000
    1098:	ldr	pc, [ip, #3752]!	; 0xea8

0000109c <__libc_start_main@plt>:
    109c:	add	ip, pc, #0, 12
    10a0:	add	ip, ip, #73728	; 0x12000
    10a4:	ldr	pc, [ip, #3744]!	; 0xea0

000010a8 <strerror@plt>:
    10a8:	add	ip, pc, #0, 12
    10ac:	add	ip, ip, #73728	; 0x12000
    10b0:	ldr	pc, [ip, #3736]!	; 0xe98

000010b4 <__vfprintf_chk@plt>:
    10b4:	add	ip, pc, #0, 12
    10b8:	add	ip, ip, #73728	; 0x12000
    10bc:	ldr	pc, [ip, #3728]!	; 0xe90

000010c0 <__gmon_start__@plt>:
    10c0:	add	ip, pc, #0, 12
    10c4:	add	ip, ip, #73728	; 0x12000
    10c8:	ldr	pc, [ip, #3720]!	; 0xe88

000010cc <getopt_long@plt>:
    10cc:	add	ip, pc, #0, 12
    10d0:	add	ip, ip, #73728	; 0x12000
    10d4:	ldr	pc, [ip, #3712]!	; 0xe80

000010d8 <exit@plt>:
    10d8:	add	ip, pc, #0, 12
    10dc:	add	ip, ip, #73728	; 0x12000
    10e0:	ldr	pc, [ip, #3704]!	; 0xe78

000010e4 <pselect@plt>:
    10e4:	add	ip, pc, #0, 12
    10e8:	add	ip, ip, #73728	; 0x12000
    10ec:	ldr	pc, [ip, #3696]!	; 0xe70

000010f0 <strlen@plt>:
    10f0:	add	ip, pc, #0, 12
    10f4:	add	ip, ip, #73728	; 0x12000
    10f8:	ldr	pc, [ip, #3688]!	; 0xe68

000010fc <setsid@plt>:
    10fc:	add	ip, pc, #0, 12
    1100:	add	ip, ip, #73728	; 0x12000
    1104:	ldr	pc, [ip, #3680]!	; 0xe60

00001108 <execv@plt>:
    1108:	add	ip, pc, #0, 12
    110c:	add	ip, ip, #73728	; 0x12000
    1110:	ldr	pc, [ip, #3672]!	; 0xe58

00001114 <__errno_location@plt>:
    1114:	add	ip, pc, #0, 12
    1118:	add	ip, ip, #73728	; 0x12000
    111c:	ldr	pc, [ip, #3664]!	; 0xe50

00001120 <__isoc99_sscanf@plt>:
    1120:	add	ip, pc, #0, 12
    1124:	add	ip, ip, #73728	; 0x12000
    1128:	ldr	pc, [ip, #3656]!	; 0xe48

0000112c <memset@plt>:
    112c:	add	ip, pc, #0, 12
    1130:	add	ip, ip, #73728	; 0x12000
    1134:	ldr	pc, [ip, #3648]!	; 0xe40

00001138 <__printf_chk@plt>:
    1138:	add	ip, pc, #0, 12
    113c:	add	ip, ip, #73728	; 0x12000
    1140:	ldr	pc, [ip, #3640]!	; 0xe38

00001144 <write@plt>:
    1144:	add	ip, pc, #0, 12
    1148:	add	ip, ip, #73728	; 0x12000
    114c:	ldr	pc, [ip, #3632]!	; 0xe30

00001150 <sigdelset@plt>:
    1150:	add	ip, pc, #0, 12
    1154:	add	ip, ip, #73728	; 0x12000
    1158:	ldr	pc, [ip, #3624]!	; 0xe28

0000115c <__fprintf_chk@plt>:
    115c:	add	ip, pc, #0, 12
    1160:	add	ip, ip, #73728	; 0x12000
    1164:	ldr	pc, [ip, #3616]!	; 0xe20

00001168 <access@plt>:
    1168:	add	ip, pc, #0, 12
    116c:	add	ip, ip, #73728	; 0x12000
    1170:	ldr	pc, [ip, #3608]!	; 0xe18

00001174 <pipe@plt>:
    1174:	add	ip, pc, #0, 12
    1178:	add	ip, ip, #73728	; 0x12000
    117c:	ldr	pc, [ip, #3600]!	; 0xe10

00001180 <sigemptyset@plt>:
    1180:	add	ip, pc, #0, 12
    1184:	add	ip, ip, #73728	; 0x12000
    1188:	ldr	pc, [ip, #3592]!	; 0xe08

0000118c <fork@plt>:
    118c:	add	ip, pc, #0, 12
    1190:	add	ip, ip, #73728	; 0x12000
    1194:	ldr	pc, [ip, #3584]!	; 0xe00

00001198 <fputc@plt>:
    1198:	add	ip, pc, #0, 12
    119c:	add	ip, ip, #73728	; 0x12000
    11a0:	ldr	pc, [ip, #3576]!	; 0xdf8

000011a4 <regcomp@plt>:
    11a4:	add	ip, pc, #0, 12
    11a8:	add	ip, ip, #73728	; 0x12000
    11ac:	ldr	pc, [ip, #3568]!	; 0xdf0

000011b0 <umask@plt>:
    11b0:	add	ip, pc, #0, 12
    11b4:	add	ip, ip, #73728	; 0x12000
    11b8:	ldr	pc, [ip, #3560]!	; 0xde8

000011bc <scandir64@plt>:
    11bc:	add	ip, pc, #0, 12
    11c0:	add	ip, ip, #73728	; 0x12000
    11c4:	ldr	pc, [ip, #3552]!	; 0xde0

000011c8 <__xstat64@plt>:
    11c8:	add	ip, pc, #0, 12
    11cc:	add	ip, ip, #73728	; 0x12000
    11d0:	ldr	pc, [ip, #3544]!	; 0xdd8

000011d4 <abort@plt>:
    11d4:	add	ip, pc, #0, 12
    11d8:	add	ip, ip, #73728	; 0x12000
    11dc:	ldr	pc, [ip, #3536]!	; 0xdd0

000011e0 <close@plt>:
    11e0:	add	ip, pc, #0, 12
    11e4:	add	ip, ip, #73728	; 0x12000
    11e8:	ldr	pc, [ip, #3528]!	; 0xdc8

Disassembly of section .text:

000011ec <error@@Base-0x518>:
    11ec:	blmi	fe953c84 <hierre@@Base+0xfe93facc>
    11f0:	push	{r1, r3, r4, r5, r6, sl, lr}
    11f4:	strdlt	r4, [r7], r0
    11f8:	strcs	r5, [r0], #-2259	; 0xfffff72d
    11fc:	addls	pc, r8, #14614528	; 0xdf0000
    1200:	ldmdavs	fp, {r0, r2, r9, sl, lr}
    1204:			; <UNDEFINED> instruction: 0xf04f9305
    1208:	blmi	fe801e10 <hierre@@Base+0xfe7edc58>
    120c:			; <UNDEFINED> instruction: 0xf8df44f9
    1210:	svcmi	0x00a0b280
    1214:			; <UNDEFINED> instruction: 0xf8592012
    1218:	strmi	r3, [lr], -r3
    121c:	rsbsge	pc, r8, #14614528	; 0xdf0000
    1220:			; <UNDEFINED> instruction: 0xf10d44fb
    1224:	ldrbtmi	r0, [pc], #-2064	; 122c <close@plt+0x4c>
    1228:	ldrbtmi	r9, [sl], #771	; 0x303
    122c:			; <UNDEFINED> instruction: 0xf7ff601c
    1230:	strtmi	lr, [r0], -r0, asr #31
    1234:	blx	1ebd23e <hierre@@Base+0x1ea9086>
    1238:			; <UNDEFINED> instruction: 0x463a465b
    123c:			; <UNDEFINED> instruction: 0x46284631
    1240:	andhi	pc, r0, sp, asr #17
    1244:	strls	r2, [r4], #-1024	; 0xfffffc00
    1248:	svc	0x0040f7ff
    124c:	suble	r1, r5, r3, asr #24
    1250:			; <UNDEFINED> instruction: 0xf1a0b3c0
    1254:	cfstrscs	mvf0, [r0], #-344	; 0xfffffea8
    1258:	rschi	pc, r8, r0, lsl #4
    125c:			; <UNDEFINED> instruction: 0xf2002c20
    1260:	ldm	pc, {r0, r2, r5, r6, r7, pc}^	; <UNPREDICTABLE>
    1264:	rsceq	pc, r1, r4, lsl r0	; <UNPREDICTABLE>
    1268:	rsceq	r0, r3, r3, ror #1
    126c:	rsceq	r0, r3, r3, ror #1
    1270:	rsceq	r0, r3, r3, ror #1
    1274:	rsceq	r0, r3, r3, ror #1
    1278:	rsceq	r0, r3, r3, ror #1
    127c:	rsceq	r0, r3, r8, lsr #32
    1280:	rsceq	r0, r3, r3, ror #1
    1284:	rsceq	r0, r3, r3, ror #1
    1288:	sbcseq	r0, pc, r3, ror #1
    128c:	rsceq	r0, r3, r3, ror #1
    1290:	rsceq	r0, r3, r3, ror #1
    1294:	rsceq	r0, r3, r3, ror #1
    1298:	rsceq	r0, r3, r3, ror #1
    129c:	rsceq	r0, r3, r3, ror #1
    12a0:	rsceq	r0, r3, r3, ror #1
    12a4:	eoreq	r0, r1, r5, lsr #32
    12a8:			; <UNDEFINED> instruction: 0xf8ca2201
    12ac:			; <UNDEFINED> instruction: 0xe7c32030
    12b0:	blx	fffbd2b8 <hierre@@Base+0xfffa9100>
    12b4:	bmi	1e7b1bc <hierre@@Base+0x1e67004>
    12b8:	andcs	pc, r2, r9, asr r8	; <UNPREDICTABLE>
    12bc:			; <UNDEFINED> instruction: 0xf0006810
    12c0:			; <UNDEFINED> instruction: 0xe7b9fb35
    12c4:	bcs	2a7adc <hierre@@Base+0x293924>
    12c8:	bmi	1d359a8 <hierre@@Base+0x1d217f0>
    12cc:	andcs	pc, r2, r9, asr r8	; <UNPREDICTABLE>
    12d0:			; <UNDEFINED> instruction: 0xf7ff6810
    12d4:	blls	fccd4 <hierre@@Base+0xe8b1c>
    12d8:			; <UNDEFINED> instruction: 0xe7ad6018
    12dc:	vstrcc	d4, [r1, #-448]	; 0xfffffe40
    12e0:	andvc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    12e4:	addsmi	r6, sp, #3866624	; 0x3b0000
    12e8:	sbchi	pc, r0, r0, asr #32
    12ec:	ldrbtmi	r4, [fp], #-2925	; 0xfffff493
    12f0:			; <UNDEFINED> instruction: 0xb11a6ada
    12f4:	blcs	1bd68 <hierre@@Base+0x7bb0>
    12f8:	adchi	pc, lr, r0, asr #32
    12fc:			; <UNDEFINED> instruction: 0xf9c8f000
    1300:	ldrbtmi	r4, [fp], #-2921	; 0xfffff497
    1304:	blcs	5b378 <hierre@@Base+0x471c0>
    1308:	addhi	pc, r7, r0
    130c:	eorle	r2, fp, r4, ror #22
    1310:	andcs	r4, r9, #1671168	; 0x198000
    1314:	ldrbtmi	r4, [r9], #-2918	; 0xfffff49a
    1318:	andpl	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    131c:			; <UNDEFINED> instruction: 0xf7ff4628
    1320:	strmi	lr, [r4], -r2, asr #30
    1324:	eorsle	r2, ip, r0, lsl #16
    1328:	movwcs	r4, #3682	; 0xe62
    132c:			; <UNDEFINED> instruction: 0x4629461a
    1330:			; <UNDEFINED> instruction: 0xf8594620
    1334:	ldmdavs	r7!, {r1, r2, sp, lr}
    1338:	mrc	7, 0, APSR_nzcv, cr14, cr15, {7}
    133c:			; <UNDEFINED> instruction: 0xf7ff9003
    1340:	blls	fcdd0 <hierre@@Base+0xe8c18>
    1344:	stmdacs	r0, {r1, r2, r9, sl, lr}
    1348:			; <UNDEFINED> instruction: 0x4629d07f
    134c:			; <UNDEFINED> instruction: 0x46204632
    1350:	mrc	7, 0, APSR_nzcv, cr2, cr15, {7}
    1354:			; <UNDEFINED> instruction: 0x46334a58
    1358:	ldrbtmi	r4, [sl], #-1592	; 0xfffff9c8
    135c:			; <UNDEFINED> instruction: 0xf7ff2101
    1360:	strdcs	lr, [r1], -lr	; <UNPREDICTABLE>
    1364:	mrc	7, 5, APSR_nzcv, cr8, cr15, {7}
    1368:	andcs	r4, r9, #84, 22	; 0x15000
    136c:			; <UNDEFINED> instruction: 0xf8594954
    1370:	ldrbtmi	r5, [r9], #-3
    1374:			; <UNDEFINED> instruction: 0xf7ff4628
    1378:			; <UNDEFINED> instruction: 0x4604ef16
    137c:	bicsle	r2, r3, r0, lsl #16
    1380:	andcs	r4, r9, #80, 22	; 0x14000
    1384:			; <UNDEFINED> instruction: 0xf8594950
    1388:	ldrbtmi	r5, [r9], #-3
    138c:			; <UNDEFINED> instruction: 0xf7ff4628
    1390:	strmi	lr, [r4], -sl, lsl #30
    1394:	bicle	r2, r7, r0, lsl #16
    1398:	andcs	r4, r8, #76, 18	; 0x130000
    139c:	ldrbtmi	r4, [r9], #-2892	; 0xfffff4b4
    13a0:	ldmdavs	fp!, {r1, r3, r4, r5, r7, r8, r9, sl, sp, lr, pc}
    13a4:	eoreq	pc, r3, r6, asr r8	; <UNPREDICTABLE>
    13a8:	ldc2l	0, cr15, [r8]
    13ac:	ldrbtmi	r4, [fp], #-2889	; 0xfffff4b7
    13b0:	blcs	5b424 <hierre@@Base+0x4726c>
    13b4:	blcs	1935468 <hierre@@Base+0x19212b0>
    13b8:	blmi	f75424 <hierre@@Base+0xf6126c>
    13bc:	andeq	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    13c0:	mrc	7, 1, APSR_nzcv, cr12, cr15, {7}
    13c4:	ldrbtmi	r4, [ip], #-3140	; 0xfffff3bc
    13c8:			; <UNDEFINED> instruction: 0xf7ff68e0
    13cc:	blls	fcb94 <hierre@@Base+0xe89dc>
    13d0:			; <UNDEFINED> instruction: 0xf7ff6818
    13d4:	bmi	107cb8c <hierre@@Base+0x10689d4>
    13d8:	ldrbtmi	r4, [sl], #-2858	; 0xfffff4d6
    13dc:	ldmpl	r3, {r5, r6, r7, r8, fp, sp, lr}^
    13e0:	blls	15b450 <hierre@@Base+0x147298>
    13e4:	qsuble	r4, sl, lr
    13e8:	pop	{r0, r1, r2, ip, sp, pc}
    13ec:	blmi	ce53b4 <hierre@@Base+0xcd11fc>
    13f0:	andeq	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    13f4:	mcr	7, 1, pc, cr2, cr15, {7}	; <UNPREDICTABLE>
    13f8:			; <UNDEFINED> instruction: 0xf8594b32
    13fc:			; <UNDEFINED> instruction: 0xf7ff0003
    1400:	blmi	cfcc80 <hierre@@Base+0xce8ac8>
    1404:	andeq	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    1408:	mrc	7, 0, APSR_nzcv, cr8, cr15, {7}
    140c:	blmi	d3b37c <hierre@@Base+0xd271c4>
    1410:	andeq	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    1414:	mrc	7, 0, APSR_nzcv, cr2, cr15, {7}
    1418:	stmdbls	r3, {r2, r4, r6, r7, r8, r9, sl, sp, lr, pc}
    141c:	blmi	c09c48 <hierre@@Base+0xbf5a90>
    1420:	ldrb	r6, [r9, -r9, lsl #16]!
    1424:	blx	bbd42c <hierre@@Base+0xba9274>
    1428:	blx	5bd430 <hierre@@Base+0x5a9278>
    142c:	eorcs	r4, sp, #2949120	; 0x2d0000
    1430:	tstcs	r1, r0, lsr #22
    1434:			; <UNDEFINED> instruction: 0xf8594478
    1438:	ldmdavs	fp, {r0, r1, ip, sp}
    143c:	ldcl	7, cr15, [r2, #1020]!	; 0x3fc
    1440:			; <UNDEFINED> instruction: 0xf7ff2001
    1444:			; <UNDEFINED> instruction: 0xf7ffee4a
    1448:	stmdami	r7!, {r1, r3, r6, r7, r8, sl, fp, sp, lr, pc}
    144c:			; <UNDEFINED> instruction: 0xf0004478
    1450:	andcs	pc, r1, r9, asr r9	; <UNPREDICTABLE>
    1454:	mcr	7, 2, pc, cr0, cr15, {7}	; <UNPREDICTABLE>
    1458:	ldrbtmi	r4, [r8], #-2084	; 0xfffff7dc
    145c:			; <UNDEFINED> instruction: 0xf952f000
    1460:	blmi	5134f4 <hierre@@Base+0x4ff33c>
    1464:	ldrbtmi	r2, [r8], #-557	; 0xfffffdd3
    1468:	strb	r2, [r4, r1, lsl #2]!
    146c:	ldrbtmi	r4, [r8], #-2081	; 0xfffff7df
    1470:			; <UNDEFINED> instruction: 0xf948f000
    1474:	blmi	3d34fc <hierre@@Base+0x3bf344>
    1478:	ldrbtmi	r2, [r8], #-557	; 0xfffffdd3
    147c:	ldrb	r2, [sl, r1, lsl #2]
    1480:	andeq	r2, r1, r0, ror #25
    1484:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1488:	andeq	r2, r1, r4, asr #25
    148c:	andeq	r0, r0, r4, lsl r1
    1490:	andeq	r2, r1, r8, ror #27
    1494:	andeq	r1, r0, sl, lsr #20
    1498:	ldrdeq	r2, [r1], -r2	; <UNPREDICTABLE>
    149c:	andeq	r0, r0, r8, lsr #2
    14a0:	strdeq	r0, [r0], -r4
    14a4:	andeq	r2, r1, lr, lsl #28
    14a8:	strdeq	r2, [r1], -sl
    14ac:	andeq	r1, r0, lr, lsl #20
    14b0:	andeq	r0, r0, r8, lsl r1
    14b4:	strdeq	r0, [r0], -ip
    14b8:	strdeq	r1, [r0], -sl
    14bc:	andeq	r0, r0, r4, lsr #2
    14c0:	andeq	r1, r0, r2, asr r9
    14c4:	strdeq	r0, [r0], -r8
    14c8:	andeq	r1, r0, sl, asr r9
    14cc:	andeq	r1, r0, lr, ror #18
    14d0:	andeq	r0, r0, r0, lsl #2
    14d4:	andeq	r2, r1, lr, asr #26
    14d8:	andeq	r2, r1, r6, lsr sp
    14dc:	strdeq	r2, [r1], -r6
    14e0:	andeq	r0, r0, ip, lsl r1
    14e4:	andeq	r1, r0, r4, lsr #16
    14e8:	andeq	r1, r0, ip, ror #17
    14ec:	andeq	r1, r0, lr, lsr r8
    14f0:	strdeq	r1, [r0], -r2
    14f4:	andeq	r1, r0, sl, lsl r8
    14f8:	ldrdeq	r1, [r0], -lr
    14fc:	bleq	3d640 <hierre@@Base+0x29488>
    1500:	cdpeq	0, 0, cr15, cr0, cr15, {2}
    1504:	strbtmi	fp, [sl], -r2, lsl #24
    1508:	strlt	fp, [r1], #-1028	; 0xfffffbfc
    150c:	ldrdge	pc, [r4], -pc	; <UNPREDICTABLE>
    1510:	ldrmi	sl, [sl], #776	; 0x308
    1514:	ldrdgt	pc, [r0], -pc	; <UNPREDICTABLE>
    1518:	andgt	pc, ip, sl, asr r8	; <UNPREDICTABLE>
    151c:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
    1520:			; <UNDEFINED> instruction: 0xf85a4b06
    1524:	stmdami	r6, {r0, r1, ip, sp}
    1528:	andeq	pc, r0, sl, asr r8	; <UNPREDICTABLE>
    152c:	ldc	7, cr15, [r6, #1020]!	; 0x3fc
    1530:	mrc	7, 2, APSR_nzcv, cr0, cr15, {7}
    1534:	andeq	r2, r1, r0, lsr #19
    1538:	andeq	r0, r0, r0, ror #1
    153c:	andeq	r0, r0, r8, lsl #2
    1540:	andeq	r0, r0, r0, lsl r1
    1544:	ldr	r3, [pc, #20]	; 1560 <close@plt+0x380>
    1548:	ldr	r2, [pc, #20]	; 1564 <close@plt+0x384>
    154c:	add	r3, pc, r3
    1550:	ldr	r2, [r3, r2]
    1554:	cmp	r2, #0
    1558:	bxeq	lr
    155c:	b	10c0 <__gmon_start__@plt>
    1560:	andeq	r2, r1, r0, lsl #19
    1564:	andeq	r0, r0, r4, lsl #2
    1568:	blmi	1d3588 <hierre@@Base+0x1bf3d0>
    156c:	bmi	1d2754 <hierre@@Base+0x1be59c>
    1570:	addmi	r4, r3, #2063597568	; 0x7b000000
    1574:	andle	r4, r3, sl, ror r4
    1578:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
    157c:	ldrmi	fp, [r8, -r3, lsl #2]
    1580:	svclt	0x00004770
    1584:	andeq	r2, r1, ip, lsl #23
    1588:	andeq	r2, r1, r8, lsl #23
    158c:	andeq	r2, r1, ip, asr r9
    1590:	andeq	r0, r0, r8, ror #1
    1594:	stmdbmi	r9, {r3, fp, lr}
    1598:	bmi	252780 <hierre@@Base+0x23e5c8>
    159c:	bne	252788 <hierre@@Base+0x23e5d0>
    15a0:	svceq	0x00cb447a
    15a4:			; <UNDEFINED> instruction: 0x01a1eb03
    15a8:	andle	r1, r3, r9, asr #32
    15ac:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
    15b0:	ldrmi	fp, [r8, -r3, lsl #2]
    15b4:	svclt	0x00004770
    15b8:	andeq	r2, r1, r0, ror #22
    15bc:	andeq	r2, r1, ip, asr fp
    15c0:	andeq	r2, r1, r0, lsr r9
    15c4:	andeq	r0, r0, r0, lsr #2
    15c8:	blmi	2ae9f0 <hierre@@Base+0x29a838>
    15cc:	ldrbtmi	r4, [fp], #-2570	; 0xfffff5f6
    15d0:	ldmdavc	fp, {r1, r3, r4, r5, r6, sl, lr}
    15d4:	blmi	26fb88 <hierre@@Base+0x25b9d0>
    15d8:	ldrdlt	r5, [r3, -r3]!
    15dc:	ldrbtmi	r4, [fp], #-2824	; 0xfffff4f8
    15e0:			; <UNDEFINED> instruction: 0xf7ff6818
    15e4:			; <UNDEFINED> instruction: 0xf7ffecc4
    15e8:	blmi	1c14ec <hierre@@Base+0x1ad334>
    15ec:	ldrbtmi	r2, [fp], #-513	; 0xfffffdff
    15f0:	stclt	0, cr7, [r8, #-104]	; 0xffffff98
    15f4:	andeq	r2, r1, sl, lsr #22
    15f8:	andeq	r2, r1, r0, lsl #18
    15fc:	andeq	r0, r0, r4, ror #1
    1600:	andeq	r2, r1, r2, lsr #20
    1604:	andeq	r2, r1, sl, lsl #22
    1608:	svclt	0x0000e7c4
    160c:	svclt	0x00004770
    1610:			; <UNDEFINED> instruction: 0xf1004b18
    1614:	ldrlt	r0, [r0, #-275]!	; 0xfffffeed
    1618:	cfldrsmi	mvf4, [r7], {123}	; 0x7b
    161c:	ldmdavs	fp, {r0, r2, r7, ip, sp, pc}
    1620:	ldmdami	r6, {r2, r3, r4, r5, r6, sl, lr}
    1624:	andle	r2, r2, r1, lsl #22
    1628:	ldmdami	r5, {r2, r5, r6, r8, r9, fp, sp}
    162c:	movwcs	sp, #10
    1630:	ldrmi	r5, [sl], -r0, lsr #16
    1634:			; <UNDEFINED> instruction: 0xf7ff9300
    1638:	blx	fec3c9e8 <hierre@@Base+0xfec28830>
    163c:	stmdbeq	r0, {r7, ip, sp, lr, pc}^
    1640:	ldclt	0, cr11, [r0, #-20]!	; 0xffffffec
    1644:	movwcs	r4, #2063	; 0x80f
    1648:	ldrmi	r9, [sl], -r3, lsl #2
    164c:	movwls	r5, #2080	; 0x820
    1650:	ldcl	7, cr15, [ip], {255}	; 0xff
    1654:	movwcs	r9, #2307	; 0x903
    1658:	vstrmi.16	s22, [fp, #-144]	; 0xffffff70	; <UNPREDICTABLE>
    165c:	strmi	r4, [r2], -r3, lsl #12
    1660:	andls	r5, r0, r4, ror #18
    1664:			; <UNDEFINED> instruction: 0xf7ff4620
    1668:	ldrdlt	lr, [r5], -r2
    166c:	stmdami	r7, {r4, r5, r8, sl, fp, ip, sp, pc}
    1670:	svclt	0x0000e7de
    1674:	andeq	r2, r1, r4, ror #21
    1678:			; <UNDEFINED> instruction: 0x000128b0
    167c:	andeq	r0, r0, ip, lsl r1
    1680:	andeq	r0, r0, r8, lsl r1
    1684:	andeq	r0, r0, r4, lsr #2
    1688:	strdeq	r0, [r0], -r8
    168c:	andeq	r0, r0, r0, lsl #2
    1690:	sbclt	fp, r4, r0, lsl r5
    1694:	addcs	r4, r8, #5888	; 0x1700
    1698:	tstcs	r0, r7, lsl fp
    169c:	stmdage	r1!, {r2, r3, r4, r5, r6, sl, lr}
    16a0:	strcs	r5, [r1], #-2275	; 0xfffff71d
    16a4:	movtls	r6, #14363	; 0x381b
    16a8:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    16ac:	ldc	7, cr15, [lr, #-1020]!	; 0xfffffc04
    16b0:	andcs	r4, r0, #18432	; 0x4800
    16b4:	strbls	sl, [r1], #-2336	; 0xfffff6e0
    16b8:			; <UNDEFINED> instruction: 0x466c2011
    16bc:			; <UNDEFINED> instruction: 0x9320447b
    16c0:	stc	7, cr15, [sl], #1020	; 0x3fc
    16c4:			; <UNDEFINED> instruction: 0xf7ff4620
    16c8:	tstcs	r1, ip, asr sp
    16cc:			; <UNDEFINED> instruction: 0xf7ff4620
    16d0:	andcs	lr, r0, #224, 24	; 0xe000
    16d4:			; <UNDEFINED> instruction: 0x46214610
    16d8:	stcl	7, cr15, [r0], #-1020	; 0xfffffc04
    16dc:	blmi	193f04 <hierre@@Base+0x17fd4c>
    16e0:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    16e4:	blls	10db754 <hierre@@Base+0x10c759c>
    16e8:	qaddle	r4, sl, r1
    16ec:	ldclt	0, cr11, [r0, #-272]	; 0xfffffef0
    16f0:	ldcl	7, cr15, [r4], #-1020	; 0xfffffc04
    16f4:	andeq	r2, r1, r4, lsr r8
    16f8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    16fc:			; <UNDEFINED> instruction: 0xffffff4d
    1700:	strdeq	r2, [r1], -r0

00001704 <error@@Base>:
    1704:	push	{r0, r1, r2, r3}
    1706:	ldr	r1, [pc, #100]	; (176c <error@@Base+0x68>)
    1708:	ldr	r2, [pc, #100]	; (1770 <error@@Base+0x6c>)
    170a:	add	r1, pc
    170c:	ldr	r3, [pc, #100]	; (1774 <error@@Base+0x70>)
    170e:	push	{r4, r5, r6, lr}
    1710:	sub	sp, #8
    1712:	ldr	r2, [r1, r2]
    1714:	add	r3, pc
    1716:	ldr	r5, [pc, #96]	; (1778 <error@@Base+0x74>)
    1718:	add	r4, sp, #24
    171a:	ldr	r2, [r2, #0]
    171c:	str	r2, [sp, #4]
    171e:	mov.w	r2, #0
    1722:	ldr	r0, [pc, #88]	; (177c <error@@Base+0x78>)
    1724:	ldr.w	r6, [r4], #4
    1728:	movs	r2, #11
    172a:	ldr	r5, [r3, r5]
    172c:	movs	r1, #1
    172e:	add	r0, pc
    1730:	ldr	r3, [r5, #0]
    1732:	blx	1024 <fwrite@plt>
    1736:	mov	r2, r6
    1738:	mov	r3, r4
    173a:	movs	r1, #1
    173c:	ldr	r0, [r5, #0]
    173e:	str	r4, [sp, #0]
    1740:	blx	10b4 <__vfprintf_chk@plt>
    1744:	ldr	r1, [r5, #0]
    1746:	movs	r0, #10
    1748:	blx	1198 <fputc@plt>
    174c:	ldr	r2, [pc, #48]	; (1780 <error@@Base+0x7c>)
    174e:	ldr	r3, [pc, #32]	; (1770 <error@@Base+0x6c>)
    1750:	add	r2, pc
    1752:	ldr	r3, [r2, r3]
    1754:	ldr	r2, [r3, #0]
    1756:	ldr	r3, [sp, #4]
    1758:	eors	r2, r3
    175a:	bne.n	1766 <error@@Base+0x62>
    175c:	add	sp, #8
    175e:	ldmia.w	sp!, {r4, r5, r6, lr}
    1762:	add	sp, #16
    1764:	bx	lr
    1766:	blx	fdc <__stack_chk_fail@plt>
    176a:	nop
    176c:	movs	r7, #198	; 0xc6
    176e:	movs	r1, r0
    1770:	lsls	r0, r6, #3
    1772:	movs	r0, r0
    1774:	movs	r7, #188	; 0xbc
    1776:	movs	r1, r0
    1778:	lsls	r4, r7, #3
    177a:	movs	r0, r0
    177c:	lsrs	r6, r0, #18
    177e:	movs	r0, r0
    1780:	movs	r7, #128	; 0x80
    1782:	movs	r1, r0
    1784:	ldr	r1, [pc, #180]	; (183c <error@@Base+0x138>)
    1786:	ldr	r2, [pc, #184]	; (1840 <error@@Base+0x13c>)
    1788:	push	{r4, r5, lr}
    178a:	add	r1, pc
    178c:	sub.w	sp, sp, #4096	; 0x1000
    1790:	ldr	r0, [pc, #176]	; (1844 <error@@Base+0x140>)
    1792:	sub	sp, #20
    1794:	ldr	r2, [r1, r2]
    1796:	add.w	r3, sp, #4096	; 0x1000
    179a:	add	r0, pc
    179c:	adds	r3, #12
    179e:	ldr	r2, [r2, #0]
    17a0:	str	r2, [r3, #0]
    17a2:	mov.w	r2, #0
    17a6:	blx	106c <getenv@plt>
    17aa:	cmp	r0, #0
    17ac:	beq.n	181e <error@@Base+0x11a>
    17ae:	movw	r1, #16514	; 0x4082
    17b2:	mov.w	r2, #384	; 0x180
    17b6:	movt	r1, #64	; 0x40
    17ba:	add	r3, sp, #12
    17bc:	str	r3, [sp, #4]
    17be:	blx	1060 <open64@plt>
    17c2:	mov	r5, r0
    17c4:	ldr	r1, [sp, #4]
    17c6:	mov.w	r2, #4096	; 0x1000
    17ca:	movs	r0, #0
    17cc:	blx	f84 <read@plt>
    17d0:	subs	r4, r0, #0
    17d2:	blt.n	1824 <error@@Base+0x120>
    17d4:	bne.n	17de <error@@Base+0xda>
    17d6:	b.n	17fe <error@@Base+0xfa>
    17d8:	subs	r4, r4, r0
    17da:	cmp	r4, #0
    17dc:	ble.n	17c4 <error@@Base+0xc0>
    17de:	ldr	r1, [sp, #4]
    17e0:	mov	r2, r4
    17e2:	mov	r0, r5
    17e4:	blx	1144 <write@plt>
    17e8:	cmp	r0, #0
    17ea:	bge.n	17d8 <error@@Base+0xd4>
    17ec:	ldr	r0, [pc, #88]	; (1848 <error@@Base+0x144>)
    17ee:	add	r0, pc
    17f0:	bl	1704 <error@@Base>
    17f4:	mov	r0, r5
    17f6:	blx	11e0 <close@plt>
    17fa:	mov.w	r5, #4294967295	; 0xffffffff
    17fe:	ldr	r1, [pc, #76]	; (184c <error@@Base+0x148>)
    1800:	add.w	r3, sp, #4096	; 0x1000
    1804:	ldr	r2, [pc, #56]	; (1840 <error@@Base+0x13c>)
    1806:	adds	r3, #12
    1808:	add	r1, pc
    180a:	ldr	r2, [r1, r2]
    180c:	ldr	r1, [r2, #0]
    180e:	ldr	r2, [r3, #0]
    1810:	eors	r1, r2
    1812:	bne.n	1838 <error@@Base+0x134>
    1814:	mov	r0, r5
    1816:	add.w	sp, sp, #4096	; 0x1000
    181a:	add	sp, #20
    181c:	pop	{r4, r5, pc}
    181e:	ldr	r0, [pc, #48]	; (1850 <error@@Base+0x14c>)
    1820:	add	r0, pc
    1822:	b.n	17ae <error@@Base+0xaa>
    1824:	ldr	r0, [pc, #44]	; (1854 <error@@Base+0x150>)
    1826:	add	r0, pc
    1828:	bl	1704 <error@@Base>
    182c:	mov	r0, r5
    182e:	blx	11e0 <close@plt>
    1832:	mov.w	r5, #4294967295	; 0xffffffff
    1836:	b.n	17fe <error@@Base+0xfa>
    1838:	blx	fdc <__stack_chk_fail@plt>
    183c:	movs	r7, #70	; 0x46
    183e:	movs	r1, r0
    1840:	lsls	r0, r6, #3
    1842:	movs	r0, r0
    1844:	lsrs	r6, r5, #16
    1846:	movs	r0, r0
    1848:	lsrs	r2, r1, #16
    184a:	movs	r0, r0
    184c:	movs	r6, #200	; 0xc8
    184e:	movs	r1, r0
    1850:	lsrs	r0, r4, #14
    1852:	movs	r0, r0
    1854:	lsrs	r2, r5, #14
    1856:	movs	r0, r0
    1858:	push	{r3, lr}
    185a:	mov.w	r2, #306	; 0x132
    185e:	ldr	r3, [pc, #24]	; (1878 <error@@Base+0x174>)
    1860:	movs	r1, #1
    1862:	ldr	r4, [pc, #24]	; (187c <error@@Base+0x178>)
    1864:	add	r3, pc
    1866:	ldr	r0, [pc, #24]	; (1880 <error@@Base+0x17c>)
    1868:	ldr	r3, [r3, r4]
    186a:	add	r0, pc
    186c:	ldr	r3, [r3, #0]
    186e:	blx	1024 <fwrite@plt>
    1872:	movs	r0, #0
    1874:	blx	10d8 <exit@plt>
    1878:	movs	r6, #108	; 0x6c
    187a:	movs	r1, r0
    187c:	lsls	r4, r7, #3
    187e:	movs	r0, r0
    1880:	lsrs	r6, r7, #14
    1882:	movs	r0, r0
    1884:	push	{r3, lr}
    1886:	movw	r2, #1058	; 0x422
    188a:	ldr	r3, [pc, #24]	; (18a4 <error@@Base+0x1a0>)
    188c:	movs	r1, #1
    188e:	ldr	r4, [pc, #24]	; (18a8 <error@@Base+0x1a4>)
    1890:	add	r3, pc
    1892:	ldr	r0, [pc, #24]	; (18ac <error@@Base+0x1a8>)
    1894:	ldr	r3, [r3, r4]
    1896:	add	r0, pc
    1898:	ldr	r3, [r3, #0]
    189a:	blx	1024 <fwrite@plt>
    189e:	movs	r0, #0
    18a0:	blx	10d8 <exit@plt>
    18a4:	movs	r6, #64	; 0x40
    18a6:	movs	r1, r0
    18a8:	lsls	r4, r7, #3
    18aa:	movs	r0, r0
    18ac:	lsrs	r6, r0, #19
    18ae:	movs	r0, r0
    18b0:	ldr	r1, [pc, #92]	; (1910 <error@@Base+0x20c>)
    18b2:	ldr	r2, [pc, #96]	; (1914 <error@@Base+0x210>)
    18b4:	add	r1, pc
    18b6:	ldr	r3, [pc, #96]	; (1918 <error@@Base+0x214>)
    18b8:	push	{lr}
    18ba:	sub	sp, #12
    18bc:	ldr	r2, [r1, r2]
    18be:	add	r3, pc
    18c0:	ldr	r0, [pc, #88]	; (191c <error@@Base+0x218>)
    18c2:	ldr	r2, [r2, #0]
    18c4:	str	r2, [sp, #4]
    18c6:	mov.w	r2, #0
    18ca:	ldr	r1, [pc, #84]	; (1920 <error@@Base+0x21c>)
    18cc:	mov	r2, sp
    18ce:	ldr	r3, [r3, r0]
    18d0:	add	r1, pc
    18d2:	ldr	r0, [r3, #0]
    18d4:	blx	1120 <__isoc99_sscanf@plt>
    18d8:	cmp	r0, #1
    18da:	bne.n	18fe <error@@Base+0x1fa>
    18dc:	ldr	r0, [sp, #0]
    18de:	cmp.w	r0, #4096	; 0x1000
    18e2:	bcs.n	18fe <error@@Base+0x1fa>
    18e4:	blx	11b0 <umask@plt>
    18e8:	ldr	r2, [pc, #56]	; (1924 <error@@Base+0x220>)
    18ea:	ldr	r3, [pc, #40]	; (1914 <error@@Base+0x210>)
    18ec:	add	r2, pc
    18ee:	ldr	r3, [r2, r3]
    18f0:	ldr	r2, [r3, #0]
    18f2:	ldr	r3, [sp, #4]
    18f4:	eors	r2, r3
    18f6:	bne.n	190c <error@@Base+0x208>
    18f8:	add	sp, #12
    18fa:	ldr.w	pc, [sp], #4
    18fe:	ldr	r0, [pc, #40]	; (1928 <error@@Base+0x224>)
    1900:	add	r0, pc
    1902:	bl	1704 <error@@Base>
    1906:	movs	r0, #1
    1908:	blx	10d8 <exit@plt>
    190c:	blx	fdc <__stack_chk_fail@plt>
    1910:	movs	r6, #28
    1912:	movs	r1, r0
    1914:	lsls	r0, r6, #3
    1916:	movs	r0, r0
    1918:	movs	r6, #18
    191a:	movs	r1, r0
    191c:	lsls	r0, r5, #4
    191e:	movs	r0, r0
    1920:	asrs	r0, r6, #2
    1922:	movs	r0, r0
    1924:	movs	r5, #228	; 0xe4
    1926:	movs	r1, r0
    1928:	asrs	r4, r0, #2
    192a:	movs	r0, r0
    192c:	ldr	r3, [pc, #92]	; (198c <error@@Base+0x288>)
    192e:	push	{r4, r5, r6, lr}
    1930:	add	r3, pc
    1932:	mov	r5, r0
    1934:	ldrd	r1, r4, [r3, #4]
    1938:	ldr	r0, [r3, #12]
    193a:	adds	r2, r1, #1
    193c:	cmp	r2, r4
    193e:	blt.n	1958 <error@@Base+0x254>
    1940:	cbnz	r4, 196a <error@@Base+0x266>
    1942:	movs	r1, #16
    1944:	movs	r4, #4
    1946:	ldr	r6, [pc, #72]	; (1990 <error@@Base+0x28c>)
    1948:	add	r6, pc
    194a:	str	r4, [r6, #8]
    194c:	blx	ff4 <realloc@plt>
    1950:	str	r0, [r6, #12]
    1952:	cbz	r0, 1970 <error@@Base+0x26c>
    1954:	ldr	r1, [r6, #4]
    1956:	adds	r2, r1, #1
    1958:	ldr	r3, [pc, #56]	; (1994 <error@@Base+0x290>)
    195a:	movs	r4, #0
    195c:	add	r3, pc
    195e:	str	r2, [r3, #4]
    1960:	str.w	r5, [r0, r1, lsl #2]
    1964:	str.w	r4, [r0, r2, lsl #2]
    1968:	pop	{r4, r5, r6, pc}
    196a:	lsls	r1, r4, #3
    196c:	lsls	r4, r4, #1
    196e:	b.n	1946 <error@@Base+0x242>
    1970:	blx	1114 <__errno_location@plt>
    1974:	ldr	r0, [r0, #0]
    1976:	blx	10a8 <strerror@plt>
    197a:	mov	r1, r0
    197c:	ldr	r0, [pc, #24]	; (1998 <error@@Base+0x294>)
    197e:	add	r0, pc
    1980:	bl	1704 <error@@Base>
    1984:	movs	r0, #1
    1986:	blx	10d8 <exit@plt>
    198a:	nop
    198c:	movs	r7, #204	; 0xcc
    198e:	movs	r1, r0
    1990:	movs	r7, #180	; 0xb4
    1992:	movs	r1, r0
    1994:	movs	r7, #160	; 0xa0
    1996:	movs	r1, r0
    1998:	asrs	r6, r2, #32
    199a:	movs	r0, r0
    199c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    19a0:	vpush	{d8-d10}
    19a4:	ldr.w	r3, [pc, #1404]	; 1f24 <error@@Base+0x820>
    19a8:	ldr.w	r1, [pc, #1404]	; 1f28 <error@@Base+0x824>
    19ac:	vmov	s17, r0
    19b0:	ldr.w	r0, [pc, #1400]	; 1f2c <error@@Base+0x828>
    19b4:	sub.w	sp, sp, #4384	; 0x1120
    19b8:	add	r3, pc
    19ba:	add	r0, pc
    19bc:	sub	sp, #28
    19be:	add.w	r2, sp, #4384	; 0x1120
    19c2:	ldr	r3, [r3, #16]
    19c4:	ldr	r1, [r0, r1]
    19c6:	adds	r2, #20
    19c8:	ldr	r1, [r1, #0]
    19ca:	str	r1, [r2, #0]
    19cc:	mov.w	r1, #0
    19d0:	ldr.w	r2, [pc, #1372]	; 1f30 <error@@Base+0x82c>
    19d4:	add	r2, pc
    19d6:	str	r2, [sp, #20]
    19d8:	cbz	r3, 19f8 <error@@Base+0x2f4>
    19da:	add	r4, sp, #56	; 0x38
    19dc:	sub.w	r0, r4, #20
    19e0:	blx	1174 <pipe@plt>
    19e4:	cmp	r0, #0
    19e6:	bne.w	1ed0 <error@@Base+0x7cc>
    19ea:	sub.w	r0, r4, #12
    19ee:	blx	1174 <pipe@plt>
    19f2:	cmp	r0, #0
    19f4:	bne.w	1ed0 <error@@Base+0x7cc>
    19f8:	blx	118c <fork@plt>
    19fc:	subs	r3, r0, #0
    19fe:	vmov	s16, r3
    1a02:	blt.w	1eb6 <error@@Base+0x7b2>
    1a06:	beq.w	1d02 <error@@Base+0x5fe>
    1a0a:	ldr.w	r3, [pc, #1320]	; 1f34 <error@@Base+0x830>
    1a0e:	add	r3, pc
    1a10:	ldr	r3, [r3, #16]
    1a12:	cmp	r3, #0
    1a14:	bne.n	1a8c <error@@Base+0x388>
    1a16:	add	r4, sp, #24
    1a18:	vmov	r0, s16
    1a1c:	movs	r2, #0
    1a1e:	mov	r1, r4
    1a20:	blx	1048 <waitpid@plt>
    1a24:	adds	r0, #1
    1a26:	beq.w	1eea <error@@Base+0x7e6>
    1a2a:	ldr	r3, [r4, #0]
    1a2c:	ands.w	r1, r3, #127	; 0x7f
    1a30:	bne.n	1a3e <error@@Base+0x33a>
    1a32:	tst.w	r3, #65280	; 0xff00
    1a36:	ubfx	r2, r3, #8, #8
    1a3a:	bne.w	1e8a <error@@Base+0x786>
    1a3e:	adds	r3, r1, #1
    1a40:	sbfx	r3, r3, #1, #7
    1a44:	cmp	r3, #0
    1a46:	ble.n	1a62 <error@@Base+0x35e>
    1a48:	ldr.w	r0, [pc, #1260]	; 1f38 <error@@Base+0x834>
    1a4c:	mov	r2, r1
    1a4e:	vmov	r1, s17
    1a52:	add	r0, pc
    1a54:	bl	1704 <error@@Base>
    1a58:	ldr.w	r3, [pc, #1248]	; 1f3c <error@@Base+0x838>
    1a5c:	movs	r2, #1
    1a5e:	add	r3, pc
    1a60:	str	r2, [r3, #28]
    1a62:	ldr.w	r1, [pc, #1244]	; 1f40 <error@@Base+0x83c>
    1a66:	add.w	r3, sp, #4384	; 0x1120
    1a6a:	ldr.w	r2, [pc, #1212]	; 1f28 <error@@Base+0x824>
    1a6e:	adds	r3, #20
    1a70:	add	r1, pc
    1a72:	ldr	r2, [r1, r2]
    1a74:	ldr	r1, [r2, #0]
    1a76:	ldr	r2, [r3, #0]
    1a78:	eors	r1, r2
    1a7a:	bne.w	1f1e <error@@Base+0x81a>
    1a7e:	add.w	sp, sp, #4384	; 0x1120
    1a82:	add	sp, #28
    1a84:	vpop	{d8-d10}
    1a88:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1a8c:	add	r5, sp, #56	; 0x38
    1a8e:	add.w	sl, sp, #180	; 0xb4
    1a92:	sub.w	r3, r5, #28
    1a96:	str	r3, [sp, #16]
    1a98:	mov	r0, sl
    1a9a:	sub.w	r7, r5, #20
    1a9e:	mov	r4, r3
    1aa0:	blx	1180 <sigemptyset@plt>
    1aa4:	movs	r1, #0
    1aa6:	mov	r2, sl
    1aa8:	mov	r0, r1
    1aaa:	sub.w	r6, r5, #12
    1aae:	blx	f9c <sigprocmask@plt>
    1ab2:	movs	r1, #17
    1ab4:	mov	r0, sl
    1ab6:	blx	1150 <sigdelset@plt>
    1aba:	movs	r3, #0
    1abc:	ldr	r0, [r7, #4]
    1abe:	str	r3, [r4, #4]
    1ac0:	str.w	r3, [r5, #-28]
    1ac4:	blx	11e0 <close@plt>
    1ac8:	ldr	r0, [r6, #4]
    1aca:	blx	11e0 <close@plt>
    1ace:	ldr.w	r3, [r5, #-12]
    1ad2:	ldr.w	r0, [r5, #-20]
    1ad6:	cmp	r0, r3
    1ad8:	it	le
    1ada:	addle.w	r9, r3, #1
    1ade:	mov.w	r3, #0
    1ae2:	mov	fp, r3
    1ae4:	mov	r8, r3
    1ae6:	str	r3, [sp, #12]
    1ae8:	it	gt
    1aea:	addgt.w	r9, r0, #1
    1aee:	ldr.w	r3, [pc, #1108]	; 1f44 <error@@Base+0x840>
    1af2:	add	r3, pc
    1af4:	vmov	s20, r3
    1af8:	cmp	r0, #0
    1afa:	blt.n	1bde <error@@Base+0x4da>
    1afc:	cmp.w	r8, #0
    1b00:	beq.w	1c0e <error@@Base+0x50a>
    1b04:	subs	r4, r5, #4
    1b06:	sub.w	r3, r5, #8
    1b0a:	add.w	r1, r5, #120	; 0x78
    1b0e:	movs	r2, #0
    1b10:	str.w	r2, [r3, #4]!
    1b14:	cmp	r1, r3
    1b16:	bne.n	1b10 <error@@Base+0x40c>
    1b18:	cmp	r0, #0
    1b1a:	blt.n	1b44 <error@@Base+0x440>
    1b1c:	blx	1000 <__fdelt_chk@plt>
    1b20:	ldr	r3, [r7, #0]
    1b22:	movs	r1, #1
    1b24:	rsbs	ip, r3, #0
    1b28:	and.w	r3, r3, #31
    1b2c:	and.w	ip, ip, #31
    1b30:	it	pl
    1b32:	rsbpl	r3, ip, #0
    1b36:	lsl.w	r3, r1, r3
    1b3a:	ldr.w	r2, [r4, r0, lsl #2]
    1b3e:	orrs	r3, r2
    1b40:	str.w	r3, [r4, r0, lsl #2]
    1b44:	ldr	r0, [r6, #0]
    1b46:	cmp	r0, #0
    1b48:	blt.n	1b72 <error@@Base+0x46e>
    1b4a:	blx	1000 <__fdelt_chk@plt>
    1b4e:	ldr	r3, [r6, #0]
    1b50:	movs	r1, #1
    1b52:	rsbs	ip, r3, #0
    1b56:	and.w	r3, r3, #31
    1b5a:	and.w	ip, ip, #31
    1b5e:	it	pl
    1b60:	rsbpl	r3, ip, #0
    1b64:	lsl.w	r3, r1, r3
    1b68:	ldr.w	r2, [r4, r0, lsl #2]
    1b6c:	orrs	r3, r2
    1b6e:	str.w	r3, [r4, r0, lsl #2]
    1b72:	movs	r3, #0
    1b74:	mov	r1, r4
    1b76:	mov	r2, r3
    1b78:	mov	r0, r9
    1b7a:	strd	fp, sl, [sp]
    1b7e:	blx	10e4 <pselect@plt>
    1b82:	cmp	r0, #0
    1b84:	blt.n	1bf0 <error@@Base+0x4ec>
    1b86:	beq.n	1c48 <error@@Base+0x544>
    1b88:	ldr	r0, [r7, #0]
    1b8a:	cmp	r0, #0
    1b8c:	blt.n	1bb0 <error@@Base+0x4ac>
    1b8e:	blx	1000 <__fdelt_chk@plt>
    1b92:	ldr	r2, [r7, #0]
    1b94:	negs	r1, r2
    1b96:	and.w	r3, r2, #31
    1b9a:	and.w	r1, r1, #31
    1b9e:	it	pl
    1ba0:	negpl	r3, r1
    1ba2:	movs	r1, #1
    1ba4:	lsl.w	r3, r1, r3
    1ba8:	ldr.w	r0, [r4, r0, lsl #2]
    1bac:	tst	r3, r0
    1bae:	bne.n	1c7c <error@@Base+0x578>
    1bb0:	ldr	r0, [r6, #0]
    1bb2:	cmp	r0, #0
    1bb4:	blt.n	1bd8 <error@@Base+0x4d4>
    1bb6:	blx	1000 <__fdelt_chk@plt>
    1bba:	ldr	r2, [r6, #0]
    1bbc:	negs	r1, r2
    1bbe:	and.w	r3, r2, #31
    1bc2:	and.w	r1, r1, #31
    1bc6:	it	pl
    1bc8:	negpl	r3, r1
    1bca:	movs	r1, #1
    1bcc:	lsl.w	r3, r1, r3
    1bd0:	ldr.w	r0, [r4, r0, lsl #2]
    1bd4:	tst	r3, r0
    1bd6:	bne.n	1caa <error@@Base+0x5a6>
    1bd8:	ldr	r0, [r7, #0]
    1bda:	cmp	r0, #0
    1bdc:	bge.n	1afc <error@@Base+0x3f8>
    1bde:	ldr	r3, [r6, #0]
    1be0:	cmp	r3, #0
    1be2:	bge.n	1afc <error@@Base+0x3f8>
    1be4:	add	r4, sp, #24
    1be6:	cmp.w	r8, #0
    1bea:	bne.w	1a2a <error@@Base+0x326>
    1bee:	b.n	1a16 <error@@Base+0x312>
    1bf0:	blx	1114 <__errno_location@plt>
    1bf4:	ldr	r0, [r0, #0]
    1bf6:	cmp	r0, #4
    1bf8:	beq.n	1bd8 <error@@Base+0x4d4>
    1bfa:	blx	10a8 <strerror@plt>
    1bfe:	mov	r1, r0
    1c00:	ldr	r0, [pc, #836]	; (1f48 <error@@Base+0x844>)
    1c02:	add	r0, pc
    1c04:	bl	1704 <error@@Base>
    1c08:	movs	r0, #1
    1c0a:	blx	10d8 <exit@plt>
    1c0e:	add	r4, sp, #24
    1c10:	movs	r2, #1
    1c12:	vmov	r0, s16
    1c16:	mov	r1, r4
    1c18:	blx	1048 <waitpid@plt>
    1c1c:	adds	r2, r0, #1
    1c1e:	mov	r3, r0
    1c20:	beq.w	1f04 <error@@Base+0x800>
    1c24:	ldr	r0, [r7, #0]
    1c26:	cmp	r3, #0
    1c28:	beq.w	1b04 <error@@Base+0x400>
    1c2c:	ldr	r3, [r4, #0]
    1c2e:	ands.w	r3, r3, #127	; 0x7f
    1c32:	beq.n	1c72 <error@@Base+0x56e>
    1c34:	adds	r3, #1
    1c36:	sbfx	r3, r3, #1, #7
    1c3a:	cmp	r3, #0
    1c3c:	ldr	r3, [sp, #16]
    1c3e:	itt	gt
    1c40:	movgt.w	r8, #1
    1c44:	movgt	fp, r3
    1c46:	b.n	1b04 <error@@Base+0x400>
    1c48:	cmp.w	r8, #0
    1c4c:	beq.n	1bd8 <error@@Base+0x4d4>
    1c4e:	ldr	r0, [r6, #0]
    1c50:	blx	11e0 <close@plt>
    1c54:	ldr	r0, [r7, #0]
    1c56:	mov.w	r3, #4294967295	; 0xffffffff
    1c5a:	str	r3, [r6, #0]
    1c5c:	blx	11e0 <close@plt>
    1c60:	mov.w	r3, #4294967295	; 0xffffffff
    1c64:	mov	r0, r3
    1c66:	str	r3, [r7, #0]
    1c68:	ldr	r3, [r6, #0]
    1c6a:	cmp	r3, #0
    1c6c:	bge.w	1afc <error@@Base+0x3f8>
    1c70:	b.n	1be4 <error@@Base+0x4e0>
    1c72:	ldr.w	fp, [sp, #16]
    1c76:	mov.w	r8, #1
    1c7a:	b.n	1b04 <error@@Base+0x400>
    1c7c:	add	r3, sp, #308	; 0x134
    1c7e:	mov	r0, r2
    1c80:	mov.w	r2, #4096	; 0x1000
    1c84:	mov	r1, r3
    1c86:	vmov	s18, r3
    1c8a:	blx	f84 <read@plt>
    1c8e:	subs	r3, r0, #0
    1c90:	ble.n	1ce0 <error@@Base+0x5dc>
    1c92:	ldr	r2, [sp, #12]
    1c94:	cmp	r2, #0
    1c96:	beq.w	1de0 <error@@Base+0x6dc>
    1c9a:	vmov	r1, s18
    1c9e:	mov	r2, r3
    1ca0:	movs	r0, #1
    1ca2:	str	r0, [sp, #12]
    1ca4:	blx	1144 <write@plt>
    1ca8:	b.n	1bb0 <error@@Base+0x4ac>
    1caa:	add	r3, sp, #308	; 0x134
    1cac:	mov	r0, r2
    1cae:	mov.w	r2, #4096	; 0x1000
    1cb2:	mov	r1, r3
    1cb4:	vmov	s18, r3
    1cb8:	blx	f84 <read@plt>
    1cbc:	subs	r3, r0, #0
    1cbe:	vmov	s19, r3
    1cc2:	ble.n	1cf0 <error@@Base+0x5ec>
    1cc4:	ldr	r3, [sp, #12]
    1cc6:	cmp	r3, #0
    1cc8:	beq.n	1dc0 <error@@Base+0x6bc>
    1cca:	vmov	r2, s19
    1cce:	movs	r0, #2
    1cd0:	vmov	r1, s18
    1cd4:	movs	r3, #1
    1cd6:	str	r3, [sp, #12]
    1cd8:	blx	1144 <write@plt>
    1cdc:	ldr	r0, [r7, #0]
    1cde:	b.n	1af8 <error@@Base+0x3f4>
    1ce0:	ldr	r0, [r7, #0]
    1ce2:	bne.n	1d80 <error@@Base+0x67c>
    1ce4:	blx	11e0 <close@plt>
    1ce8:	mov.w	r3, #4294967295	; 0xffffffff
    1cec:	str	r3, [r7, #0]
    1cee:	b.n	1bb0 <error@@Base+0x4ac>
    1cf0:	ldr	r0, [r6, #0]
    1cf2:	bne.n	1da0 <error@@Base+0x69c>
    1cf4:	blx	11e0 <close@plt>
    1cf8:	mov.w	r3, #4294967295	; 0xffffffff
    1cfc:	ldr	r0, [r7, #0]
    1cfe:	str	r3, [r6, #0]
    1d00:	b.n	1af8 <error@@Base+0x3f4>
    1d02:	add	r4, sp, #180	; 0xb4
    1d04:	mov	r0, r4
    1d06:	blx	1180 <sigemptyset@plt>
    1d0a:	movs	r1, #17
    1d0c:	mov	r0, r4
    1d0e:	blx	1090 <sigaddset@plt>
    1d12:	vmov	r2, s16
    1d16:	mov	r1, r4
    1d18:	movs	r0, #1
    1d1a:	blx	f9c <sigprocmask@plt>
    1d1e:	ldr	r3, [pc, #556]	; (1f4c <error@@Base+0x848>)
    1d20:	add	r3, pc
    1d22:	ldr	r3, [r3, #20]
    1d24:	cmp	r3, #0
    1d26:	bne.w	1e84 <error@@Base+0x780>
    1d2a:	ldr	r3, [pc, #548]	; (1f50 <error@@Base+0x84c>)
    1d2c:	add	r3, pc
    1d2e:	ldr	r5, [r3, #24]
    1d30:	blx	1114 <__errno_location@plt>
    1d34:	mov	r4, r0
    1d36:	cmp	r5, #0
    1d38:	bne.w	1e46 <error@@Base+0x742>
    1d3c:	ldr	r3, [pc, #532]	; (1f54 <error@@Base+0x850>)
    1d3e:	add	r3, pc
    1d40:	ldr	r3, [r3, #16]
    1d42:	cmp	r3, #0
    1d44:	beq.n	1e1a <error@@Base+0x716>
    1d46:	add	r6, sp, #56	; 0x38
    1d48:	movs	r1, #1
    1d4a:	sub.w	r5, r6, #20
    1d4e:	ldr	r0, [r5, #4]
    1d50:	blx	fe8 <dup2@plt>
    1d54:	adds	r0, #1
    1d56:	beq.n	1d6a <error@@Base+0x666>
    1d58:	movs	r1, #2
    1d5a:	ldr.w	r0, [r6, #-8]
    1d5e:	blx	fe8 <dup2@plt>
    1d62:	sub.w	r7, r6, #12
    1d66:	adds	r0, #1
    1d68:	bne.n	1e00 <error@@Base+0x6fc>
    1d6a:	ldr	r0, [r4, #0]
    1d6c:	blx	10a8 <strerror@plt>
    1d70:	mov	r1, r0
    1d72:	ldr	r0, [pc, #484]	; (1f58 <error@@Base+0x854>)
    1d74:	add	r0, pc
    1d76:	bl	1704 <error@@Base>
    1d7a:	movs	r0, #1
    1d7c:	blx	10d8 <exit@plt>
    1d80:	blx	11e0 <close@plt>
    1d84:	mov.w	r3, #4294967295	; 0xffffffff
    1d88:	str	r3, [r7, #0]
    1d8a:	blx	1114 <__errno_location@plt>
    1d8e:	ldr	r0, [r0, #0]
    1d90:	blx	10a8 <strerror@plt>
    1d94:	mov	r1, r0
    1d96:	ldr	r0, [pc, #452]	; (1f5c <error@@Base+0x858>)
    1d98:	add	r0, pc
    1d9a:	bl	1704 <error@@Base>
    1d9e:	b.n	1bb0 <error@@Base+0x4ac>
    1da0:	blx	11e0 <close@plt>
    1da4:	mov.w	r3, #4294967295	; 0xffffffff
    1da8:	str	r3, [r6, #0]
    1daa:	blx	1114 <__errno_location@plt>
    1dae:	ldr	r0, [r0, #0]
    1db0:	blx	10a8 <strerror@plt>
    1db4:	mov	r1, r0
    1db6:	vmov	r0, s20
    1dba:	bl	1704 <error@@Base>
    1dbe:	b.n	1bd8 <error@@Base+0x4d4>
    1dc0:	ldr	r4, [sp, #20]
    1dc2:	movs	r1, #1
    1dc4:	ldr	r0, [pc, #408]	; (1f60 <error@@Base+0x85c>)
    1dc6:	ldr	r2, [pc, #412]	; (1f64 <error@@Base+0x860>)
    1dc8:	vmov	r3, s17
    1dcc:	ldr	r0, [r4, r0]
    1dce:	add	r2, pc
    1dd0:	mov	r4, r0
    1dd2:	ldr	r0, [r0, #0]
    1dd4:	blx	115c <__fprintf_chk@plt>
    1dd8:	ldr	r0, [r4, #0]
    1dda:	blx	f90 <fflush@plt>
    1dde:	b.n	1cca <error@@Base+0x5c6>
    1de0:	ldr	r1, [pc, #388]	; (1f68 <error@@Base+0x864>)
    1de2:	movs	r0, #1
    1de4:	vmov	r2, s17
    1de8:	add	r1, pc
    1dea:	str	r3, [sp, #12]
    1dec:	blx	1138 <__printf_chk@plt>
    1df0:	ldr	r3, [sp, #20]
    1df2:	ldr	r2, [pc, #376]	; (1f6c <error@@Base+0x868>)
    1df4:	ldr	r2, [r3, r2]
    1df6:	ldr	r0, [r2, #0]
    1df8:	blx	f90 <fflush@plt>
    1dfc:	ldr	r3, [sp, #12]
    1dfe:	b.n	1c9a <error@@Base+0x596>
    1e00:	ldr	r0, [r5, #0]
    1e02:	blx	11e0 <close@plt>
    1e06:	ldr.w	r0, [r6, #-12]
    1e0a:	blx	11e0 <close@plt>
    1e0e:	ldr	r0, [r5, #4]
    1e10:	blx	11e0 <close@plt>
    1e14:	ldr	r0, [r7, #4]
    1e16:	blx	11e0 <close@plt>
    1e1a:	ldr	r3, [pc, #340]	; (1f70 <error@@Base+0x86c>)
    1e1c:	vmov	r0, s17
    1e20:	add	r3, pc
    1e22:	ldr	r1, [r3, #12]
    1e24:	vstr	s17, [r1]
    1e28:	blx	1108 <execv@plt>
    1e2c:	ldr	r0, [r4, #0]
    1e2e:	blx	10a8 <strerror@plt>
    1e32:	vmov	r1, s17
    1e36:	mov	r2, r0
    1e38:	ldr	r0, [pc, #312]	; (1f74 <error@@Base+0x870>)
    1e3a:	add	r0, pc
    1e3c:	bl	1704 <error@@Base>
    1e40:	movs	r0, #1
    1e42:	blx	10d8 <exit@plt>
    1e46:	ldr	r3, [pc, #304]	; (1f78 <error@@Base+0x874>)
    1e48:	movs	r1, #0
    1e4a:	add	r3, pc
    1e4c:	ldr	r0, [r3, #0]
    1e4e:	blx	fe8 <dup2@plt>
    1e52:	adds	r0, #1
    1e54:	beq.n	1ea0 <error@@Base+0x79c>
    1e56:	movs	r0, #0
    1e58:	movs	r2, #0
    1e5a:	movs	r3, #0
    1e5c:	str	r0, [sp, #0]
    1e5e:	blx	1030 <lseek64@plt>
    1e62:	adds	r1, #1
    1e64:	it	eq
    1e66:	cmpeq.w	r0, #4294967295	; 0xffffffff
    1e6a:	bne.w	1d3c <error@@Base+0x638>
    1e6e:	ldr	r0, [r4, #0]
    1e70:	blx	10a8 <strerror@plt>
    1e74:	mov	r1, r0
    1e76:	ldr	r0, [pc, #260]	; (1f7c <error@@Base+0x878>)
    1e78:	add	r0, pc
    1e7a:	bl	1704 <error@@Base>
    1e7e:	movs	r0, #1
    1e80:	blx	10d8 <exit@plt>
    1e84:	blx	10fc <setsid@plt>
    1e88:	b.n	1d2a <error@@Base+0x626>
    1e8a:	ldr	r0, [pc, #244]	; (1f80 <error@@Base+0x87c>)
    1e8c:	vmov	r1, s17
    1e90:	add	r0, pc
    1e92:	bl	1704 <error@@Base>
    1e96:	ldr	r3, [pc, #236]	; (1f84 <error@@Base+0x880>)
    1e98:	movs	r2, #1
    1e9a:	add	r3, pc
    1e9c:	str	r2, [r3, #28]
    1e9e:	b.n	1a62 <error@@Base+0x35e>
    1ea0:	ldr	r0, [r4, #0]
    1ea2:	blx	10a8 <strerror@plt>
    1ea6:	mov	r1, r0
    1ea8:	ldr	r0, [pc, #220]	; (1f88 <error@@Base+0x884>)
    1eaa:	add	r0, pc
    1eac:	bl	1704 <error@@Base>
    1eb0:	movs	r0, #1
    1eb2:	blx	10d8 <exit@plt>
    1eb6:	blx	1114 <__errno_location@plt>
    1eba:	ldr	r0, [r0, #0]
    1ebc:	blx	10a8 <strerror@plt>
    1ec0:	mov	r1, r0
    1ec2:	ldr	r0, [pc, #200]	; (1f8c <error@@Base+0x888>)
    1ec4:	add	r0, pc
    1ec6:	bl	1704 <error@@Base>
    1eca:	movs	r0, #1
    1ecc:	blx	10d8 <exit@plt>
    1ed0:	blx	1114 <__errno_location@plt>
    1ed4:	ldr	r0, [r0, #0]
    1ed6:	blx	10a8 <strerror@plt>
    1eda:	mov	r1, r0
    1edc:	ldr	r0, [pc, #176]	; (1f90 <error@@Base+0x88c>)
    1ede:	add	r0, pc
    1ee0:	bl	1704 <error@@Base>
    1ee4:	movs	r0, #1
    1ee6:	blx	10d8 <exit@plt>
    1eea:	blx	1114 <__errno_location@plt>
    1eee:	ldr	r0, [r0, #0]
    1ef0:	blx	10a8 <strerror@plt>
    1ef4:	mov	r1, r0
    1ef6:	ldr	r0, [pc, #156]	; (1f94 <error@@Base+0x890>)
    1ef8:	add	r0, pc
    1efa:	bl	1704 <error@@Base>
    1efe:	movs	r0, #1
    1f00:	blx	10d8 <exit@plt>
    1f04:	blx	1114 <__errno_location@plt>
    1f08:	ldr	r0, [r0, #0]
    1f0a:	blx	10a8 <strerror@plt>
    1f0e:	mov	r1, r0
    1f10:	ldr	r0, [pc, #132]	; (1f98 <error@@Base+0x894>)
    1f12:	add	r0, pc
    1f14:	bl	1704 <error@@Base>
    1f18:	movs	r0, #1
    1f1a:	blx	10d8 <exit@plt>
    1f1e:	blx	fdc <__stack_chk_fail@plt>
    1f22:	nop
    1f24:	movs	r7, #68	; 0x44
    1f26:	movs	r1, r0
    1f28:	lsls	r0, r6, #3
    1f2a:	movs	r0, r0
    1f2c:	movs	r5, #22
    1f2e:	movs	r1, r0
    1f30:	movs	r4, #252	; 0xfc
    1f32:	movs	r1, r0
    1f34:	movs	r6, #238	; 0xee
    1f36:	movs	r1, r0
    1f38:	asrs	r6, r5, #1
    1f3a:	movs	r0, r0
    1f3c:	movs	r6, #158	; 0x9e
    1f3e:	movs	r1, r0
    1f40:	movs	r4, #96	; 0x60
    1f42:	movs	r1, r0
    1f44:	lsrs	r2, r1, #30
    1f46:	movs	r0, r0
    1f48:	lsrs	r2, r0, #25
    1f4a:	movs	r0, r0
    1f4c:	movs	r3, #220	; 0xdc
    1f4e:	movs	r1, r0
    1f50:	movs	r3, #208	; 0xd0
    1f52:	movs	r1, r0
    1f54:	movs	r3, #190	; 0xbe
    1f56:	movs	r1, r0
    1f58:	lsrs	r0, r6, #17
    1f5a:	movs	r0, r0
    1f5c:	lsrs	r0, r0, #19
    1f5e:	movs	r0, r0
    1f60:	lsls	r4, r7, #3
    1f62:	movs	r0, r0
    1f64:	lsrs	r2, r0, #18
    1f66:	movs	r0, r0
    1f68:	lsrs	r0, r5, #17
    1f6a:	movs	r0, r0
    1f6c:	lsls	r4, r1, #4
    1f6e:	movs	r0, r0
    1f70:	movs	r2, #220	; 0xdc
    1f72:	movs	r1, r0
    1f74:	lsrs	r6, r4, #15
    1f76:	movs	r0, r0
    1f78:	movs	r1, #186	; 0xba
    1f7a:	movs	r1, r0
    1f7c:	lsrs	r0, r7, #13
    1f7e:	movs	r0, r0
    1f80:	lsrs	r0, r2, #16
    1f82:	movs	r0, r0
    1f84:	movs	r2, #98	; 0x62
    1f86:	movs	r1, r0
    1f88:	lsrs	r2, r7, #12
    1f8a:	movs	r0, r0
    1f8c:	lsrs	r4, r1, #12
    1f8e:	movs	r0, r0
    1f90:	lsrs	r6, r4, #11
    1f92:	movs	r0, r0
    1f94:	lsrs	r0, r0, #13
    1f96:	movs	r0, r0
    1f98:	lsrs	r6, r4, #12
    1f9a:	movs	r0, r0
    1f9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1fa0:	mov	r8, r0
    1fa2:	vpush	{d8}
    1fa6:	ldr	r2, [pc, #840]	; (22f0 <error@@Base+0xbec>)
    1fa8:	ldr	r3, [pc, #840]	; (22f4 <error@@Base+0xbf0>)
    1faa:	add	r2, pc
    1fac:	sub	sp, #156	; 0x9c
    1fae:	ldr	r3, [r2, r3]
    1fb0:	ldr	r3, [r3, #0]
    1fb2:	str	r3, [sp, #148]	; 0x94
    1fb4:	mov.w	r3, #0
    1fb8:	blx	10f0 <strlen@plt>
    1fbc:	ldr	r3, [pc, #824]	; (22f8 <error@@Base+0xbf4>)
    1fbe:	add	r3, pc
    1fc0:	str	r3, [sp, #28]
    1fc2:	adds	r7, r0, #4
    1fc4:	adds	r2, r0, #1
    1fc6:	mov	fp, r0
    1fc8:	str	r2, [sp, #12]
    1fca:	mov	r0, r7
    1fcc:	blx	1084 <malloc@plt>
    1fd0:	cmp	r0, #0
    1fd2:	beq.w	22d2 <error@@Base+0xbce>
    1fd6:	mov	r2, fp
    1fd8:	mov	r1, r8
    1fda:	mov	r5, r0
    1fdc:	mov	r4, r0
    1fde:	blx	fb8 <memcpy@plt>
    1fe2:	ldr	r0, [pc, #792]	; (22fc <error@@Base+0xbf8>)
    1fe4:	ldr	r3, [pc, #792]	; (2300 <error@@Base+0xbfc>)
    1fe6:	add	r1, sp, #36	; 0x24
    1fe8:	add	r0, pc
    1fea:	ldr	r2, [pc, #792]	; (2304 <error@@Base+0xc00>)
    1fec:	ldrh	r6, [r0, #0]
    1fee:	add	r2, pc
    1ff0:	mov	r0, r8
    1ff2:	strh.w	r6, [r5, fp]
    1ff6:	ldr	r5, [sp, #28]
    1ff8:	ldr	r3, [r5, r3]
    1ffa:	blx	11bc <scandir64@plt>
    1ffe:	subs	r3, r0, #0
    2000:	str	r3, [sp, #20]
    2002:	blt.w	22b6 <error@@Base+0xbb2>
    2006:	ldr	r3, [pc, #768]	; (2308 <error@@Base+0xc04>)
    2008:	add	r3, pc
    200a:	ldr	r3, [r3, #24]
    200c:	cmp	r3, #0
    200e:	bne.w	222c <error@@Base+0xb28>
    2012:	ldr	r3, [pc, #760]	; (230c <error@@Base+0xc08>)
    2014:	add	r3, pc
    2016:	ldr	r3, [r3, #32]
    2018:	mov	r5, r3
    201a:	cbz	r3, 2020 <error@@Base+0x91c>
    201c:	ldr	r2, [sp, #20]
    201e:	subs	r5, r2, #1
    2020:	ldr	r2, [pc, #748]	; (2310 <error@@Base+0xc0c>)
    2022:	str	r7, [sp, #8]
    2024:	add	r2, pc
    2026:	str	r2, [sp, #16]
    2028:	ldr	r2, [pc, #744]	; (2314 <error@@Base+0xc10>)
    202a:	add	r2, pc
    202c:	str	r2, [sp, #24]
    202e:	ldr	r2, [pc, #744]	; (2318 <error@@Base+0xc14>)
    2030:	add	r2, pc
    2032:	vmov	s16, r2
    2036:	cmp	r3, #0
    2038:	beq.n	20e2 <error@@Base+0x9de>
    203a:	mvns	r2, r5
    203c:	ldr.w	r9, [sp, #36]	; 0x24
    2040:	lsrs	r2, r2, #31
    2042:	cmp	r2, #0
    2044:	beq.n	20f4 <error@@Base+0x9f0>
    2046:	ldr.w	r1, [r9, r5, lsl #2]
    204a:	lsls	r6, r5, #2
    204c:	adds	r1, #19
    204e:	str	r1, [sp, #4]
    2050:	mov	r0, r1
    2052:	blx	10f0 <strlen@plt>
    2056:	ldr	r3, [sp, #8]
    2058:	add.w	r2, fp, #2
    205c:	ldr	r1, [sp, #4]
    205e:	add.w	sl, r2, r0
    2062:	cmp	sl, r3
    2064:	bls.n	2080 <error@@Base+0x97c>
    2066:	mov	r0, r4
    2068:	mov	r1, sl
    206a:	blx	ff4 <realloc@plt>
    206e:	mov	r4, r0
    2070:	cmp	r0, #0
    2072:	beq.w	229c <error@@Base+0xb98>
    2076:	ldr.w	r1, [r9, r6]
    207a:	str.w	sl, [sp, #8]
    207e:	adds	r1, #19
    2080:	ldr	r3, [sp, #12]
    2082:	adds	r0, r4, r3
    2084:	blx	1054 <strcpy@plt>
    2088:	mov	r1, r8
    208a:	mov	r0, r4
    208c:	blx	fc4 <stpcpy@plt>
    2090:	ldr	r3, [sp, #16]
    2092:	ldrh	r1, [r3, #0]
    2094:	mov	r2, r0
    2096:	adds	r0, #1
    2098:	strh	r1, [r2, #0]
    209a:	ldr.w	r1, [r9, r6]
    209e:	adds	r1, #19
    20a0:	blx	1054 <strcpy@plt>
    20a4:	add	r2, sp, #40	; 0x28
    20a6:	mov	r1, r4
    20a8:	movs	r0, #3
    20aa:	blx	11c8 <__xstat64@plt>
    20ae:	cmp	r0, #0
    20b0:	blt.n	2120 <error@@Base+0xa1c>
    20b2:	ldr	r3, [sp, #56]	; 0x38
    20b4:	and.w	r3, r3, #61440	; 0xf000
    20b8:	cmp.w	r3, #32768	; 0x8000
    20bc:	beq.n	2146 <error@@Base+0xa42>
    20be:	cmp.w	r3, #16384	; 0x4000
    20c2:	beq.n	20cc <error@@Base+0x9c8>
    20c4:	ldr	r3, [sp, #24]
    20c6:	ldr	r3, [r3, #44]	; 0x2c
    20c8:	cmp	r3, #0
    20ca:	beq.n	21b6 <error@@Base+0xab2>
    20cc:	ldr	r3, [sp, #36]	; 0x24
    20ce:	ldr	r0, [r3, r6]
    20d0:	blx	fac <free@plt+0x4>
    20d4:	ldr	r3, [pc, #580]	; (231c <error@@Base+0xc18>)
    20d6:	add	r3, pc
    20d8:	ldr	r3, [r3, #32]
    20da:	cbz	r3, 211c <error@@Base+0xa18>
    20dc:	subs	r5, #1
    20de:	cmp	r3, #0
    20e0:	bne.n	203a <error@@Base+0x936>
    20e2:	ldr	r3, [sp, #20]
    20e4:	ldr.w	r9, [sp, #36]	; 0x24
    20e8:	cmp	r5, r3
    20ea:	ite	ge
    20ec:	movge	r2, #0
    20ee:	movlt	r2, #1
    20f0:	cmp	r2, #0
    20f2:	bne.n	2046 <error@@Base+0x942>
    20f4:	mov	r0, r9
    20f6:	blx	fac <free@plt+0x4>
    20fa:	ldr	r2, [pc, #548]	; (2320 <error@@Base+0xc1c>)
    20fc:	ldr	r3, [pc, #500]	; (22f4 <error@@Base+0xbf0>)
    20fe:	add	r2, pc
    2100:	ldr	r3, [r2, r3]
    2102:	ldr	r2, [r3, #0]
    2104:	ldr	r3, [sp, #148]	; 0x94
    2106:	eors	r2, r3
    2108:	bne.w	22ec <error@@Base+0xbe8>
    210c:	mov	r0, r4
    210e:	add	sp, #156	; 0x9c
    2110:	vpop	{d8}
    2114:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2118:	b.w	fa8 <free@plt>
    211c:	adds	r5, #1
    211e:	b.n	20e2 <error@@Base+0x9de>
    2120:	blx	1114 <__errno_location@plt>
    2124:	ldr	r0, [r0, #0]
    2126:	blx	10a8 <strerror@plt>
    212a:	mov	r1, r4
    212c:	mov	r2, r0
    212e:	ldr	r0, [pc, #500]	; (2324 <error@@Base+0xc20>)
    2130:	add	r0, pc
    2132:	bl	1704 <error@@Base>
    2136:	ldr	r3, [pc, #496]	; (2328 <error@@Base+0xc24>)
    2138:	add	r3, pc
    213a:	ldr	r3, [r3, #36]	; 0x24
    213c:	cmp	r3, #0
    213e:	beq.n	20d4 <error@@Base+0x9d0>
    2140:	movs	r0, #1
    2142:	blx	10d8 <exit@plt>
    2146:	movs	r1, #1
    2148:	mov	r0, r4
    214a:	blx	1168 <access@plt>
    214e:	cmp	r0, #0
    2150:	bne.n	21c8 <error@@Base+0xac4>
    2152:	ldr	r3, [pc, #472]	; (232c <error@@Base+0xc28>)
    2154:	add	r3, pc
    2156:	ldr	r2, [r3, #40]	; 0x28
    2158:	cmp	r2, #0
    215a:	bne.n	21de <error@@Base+0xada>
    215c:	ldr	r2, [r3, #44]	; 0x2c
    215e:	cmp	r2, #0
    2160:	bne.n	2216 <error@@Base+0xb12>
    2162:	ldr	r2, [r3, #48]	; 0x30
    2164:	cbz	r2, 2184 <error@@Base+0xa80>
    2166:	ldr	r0, [sp, #28]
    2168:	ldr	r2, [pc, #452]	; (2330 <error@@Base+0xc2c>)
    216a:	ldr	r1, [r3, #4]
    216c:	ldr.w	sl, [r0, r2]
    2170:	ldr.w	r0, [sl]
    2174:	cmp	r1, #0
    2176:	bne.n	224a <error@@Base+0xb46>
    2178:	ldr	r2, [pc, #440]	; (2334 <error@@Base+0xc30>)
    217a:	mov	r3, r4
    217c:	movs	r1, #1
    217e:	add	r2, pc
    2180:	blx	115c <__fprintf_chk@plt>
    2184:	mov	r0, r4
    2186:	bl	199c <error@@Base+0x298>
    218a:	ldr	r3, [pc, #428]	; (2338 <error@@Base+0xc34>)
    218c:	add	r3, pc
    218e:	ldr	r2, [r3, #28]
    2190:	cmp	r2, #0
    2192:	beq.n	20cc <error@@Base+0x9c8>
    2194:	ldr	r3, [r3, #36]	; 0x24
    2196:	cmp	r3, #0
    2198:	beq.n	20cc <error@@Base+0x9c8>
    219a:	ldr	r2, [pc, #416]	; (233c <error@@Base+0xc38>)
    219c:	ldr	r3, [pc, #340]	; (22f4 <error@@Base+0xbf0>)
    219e:	add	r2, pc
    21a0:	ldr	r3, [r2, r3]
    21a2:	ldr	r2, [r3, #0]
    21a4:	ldr	r3, [sp, #148]	; 0x94
    21a6:	eors	r2, r3
    21a8:	bne.w	22ec <error@@Base+0xbe8>
    21ac:	add	sp, #156	; 0x9c
    21ae:	vpop	{d8}
    21b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    21b6:	vmov	r0, s16
    21ba:	mov	r1, r4
    21bc:	bl	1704 <error@@Base>
    21c0:	ldr	r2, [sp, #24]
    21c2:	movs	r3, #1
    21c4:	str	r3, [r2, #28]
    21c6:	b.n	20cc <error@@Base+0x9c8>
    21c8:	movs	r1, #4
    21ca:	mov	r0, r4
    21cc:	blx	1168 <access@plt>
    21d0:	cbnz	r0, 21e6 <error@@Base+0xae2>
    21d2:	ldr	r3, [pc, #364]	; (2340 <error@@Base+0xc3c>)
    21d4:	add	r3, pc
    21d6:	ldr	r3, [r3, #44]	; 0x2c
    21d8:	cmp	r3, #0
    21da:	beq.w	20cc <error@@Base+0x9c8>
    21de:	mov	r0, r4
    21e0:	blx	1078 <puts@plt>
    21e4:	b.n	20cc <error@@Base+0x9c8>
    21e6:	ldr	r3, [sp, #56]	; 0x38
    21e8:	and.w	r3, r3, #61440	; 0xf000
    21ec:	cmp.w	r3, #40960	; 0xa000
    21f0:	bne.w	20cc <error@@Base+0x9c8>
    21f4:	ldr.w	r9, [pc, #332]	; 2344 <error@@Base+0xc40>
    21f8:	add	r9, pc
    21fa:	ldr.w	r2, [r9, #44]	; 0x2c
    21fe:	cmp	r2, #0
    2200:	bne.w	20cc <error@@Base+0x9c8>
    2204:	ldr	r0, [pc, #320]	; (2348 <error@@Base+0xc44>)
    2206:	mov	r1, r4
    2208:	add	r0, pc
    220a:	bl	1704 <error@@Base>
    220e:	movs	r2, #1
    2210:	str.w	r2, [r9, #28]
    2214:	b.n	20cc <error@@Base+0x9c8>
    2216:	movs	r1, #4
    2218:	mov	r0, r4
    221a:	blx	1168 <access@plt>
    221e:	cmp	r0, #0
    2220:	bne.w	20cc <error@@Base+0x9c8>
    2224:	mov	r0, r4
    2226:	blx	1078 <puts@plt>
    222a:	b.n	20cc <error@@Base+0x9c8>
    222c:	bl	1784 <error@@Base+0x80>
    2230:	ldr	r3, [pc, #280]	; (234c <error@@Base+0xc48>)
    2232:	add	r3, pc
    2234:	cmp	r0, #0
    2236:	str	r0, [r3, #0]
    2238:	bge.w	2012 <error@@Base+0x90e>
    223c:	ldr	r0, [pc, #272]	; (2350 <error@@Base+0xc4c>)
    223e:	add	r0, pc
    2240:	bl	1704 <error@@Base>
    2244:	movs	r0, #1
    2246:	blx	10d8 <exit@plt>
    224a:	ldr	r3, [r3, #12]
    224c:	movs	r1, #1
    224e:	ldr	r2, [pc, #260]	; (2354 <error@@Base+0xc50>)
    2250:	mov	r7, r3
    2252:	add	r2, pc
    2254:	mov	r3, r4
    2256:	str	r7, [sp, #4]
    2258:	add.w	r9, r7, #4
    225c:	blx	115c <__fprintf_chk@plt>
    2260:	ldr	r7, [sp, #4]
    2262:	ldr	r3, [r7, #4]
    2264:	cbz	r3, 2290 <error@@Base+0xb8c>
    2266:	ldr	r2, [pc, #240]	; (2358 <error@@Base+0xc54>)
    2268:	ldr	r7, [sp, #8]
    226a:	add	r2, pc
    226c:	str.w	fp, [sp, #4]
    2270:	mov	fp, r5
    2272:	mov	r5, r2
    2274:	ldr.w	r0, [sl]
    2278:	mov	r2, r5
    227a:	movs	r1, #1
    227c:	blx	115c <__fprintf_chk@plt>
    2280:	ldr.w	r3, [r9, #4]!
    2284:	cmp	r3, #0
    2286:	bne.n	2274 <error@@Base+0xb70>
    2288:	mov	r5, fp
    228a:	ldr.w	fp, [sp, #4]
    228e:	str	r7, [sp, #8]
    2290:	ldr.w	r1, [sl]
    2294:	movs	r0, #10
    2296:	blx	1198 <fputc@plt>
    229a:	b.n	2184 <error@@Base+0xa80>
    229c:	blx	1114 <__errno_location@plt>
    22a0:	ldr	r0, [r0, #0]
    22a2:	blx	10a8 <strerror@plt>
    22a6:	mov	r1, r0
    22a8:	ldr	r0, [pc, #176]	; (235c <error@@Base+0xc58>)
    22aa:	add	r0, pc
    22ac:	bl	1704 <error@@Base>
    22b0:	movs	r0, #1
    22b2:	blx	10d8 <exit@plt>
    22b6:	blx	1114 <__errno_location@plt>
    22ba:	ldr	r0, [r0, #0]
    22bc:	blx	10a8 <strerror@plt>
    22c0:	mov	r1, r8
    22c2:	mov	r2, r0
    22c4:	ldr	r0, [pc, #152]	; (2360 <error@@Base+0xc5c>)
    22c6:	add	r0, pc
    22c8:	bl	1704 <error@@Base>
    22cc:	movs	r0, #1
    22ce:	blx	10d8 <exit@plt>
    22d2:	blx	1114 <__errno_location@plt>
    22d6:	ldr	r0, [r0, #0]
    22d8:	blx	10a8 <strerror@plt>
    22dc:	mov	r1, r0
    22de:	ldr	r0, [pc, #132]	; (2364 <error@@Base+0xc60>)
    22e0:	add	r0, pc
    22e2:	bl	1704 <error@@Base>
    22e6:	movs	r0, #1
    22e8:	blx	10d8 <exit@plt>
    22ec:	blx	fdc <__stack_chk_fail@plt>
    22f0:	subs	r6, r4, #4
    22f2:	movs	r1, r0
    22f4:	lsls	r0, r6, #3
    22f6:	movs	r0, r0
    22f8:	subs	r2, r2, #4
    22fa:	movs	r1, r0
    22fc:	lsrs	r0, r5, #12
    22fe:	movs	r0, r0
    2300:	lsls	r4, r5, #3
    2302:	movs	r0, r0
    2304:	bl	ffe22306 <hierre@@Base+0xffe0e14e>
    2308:	movs	r0, #244	; 0xf4
    230a:	movs	r1, r0
    230c:	movs	r0, #232	; 0xe8
    230e:	movs	r1, r0
    2310:	lsrs	r4, r5, #11
    2312:	movs	r0, r0
    2314:	movs	r0, #210	; 0xd2
    2316:	movs	r1, r0
    2318:	lsrs	r4, r4, #15
    231a:	movs	r0, r0
    231c:	movs	r0, #38	; 0x26
    231e:	movs	r1, r0
    2320:	adds	r2, r2, #7
    2322:	movs	r1, r0
    2324:	lsrs	r4, r3, #9
    2326:	movs	r0, r0
    2328:	subs	r4, r0, #7
    232a:	movs	r1, r0
    232c:	subs	r0, r5, #6
    232e:	movs	r1, r0
    2330:	lsls	r4, r7, #3
    2332:	movs	r0, r0
    2334:	lsrs	r6, r0, #9
    2336:	movs	r0, r0
    2338:	subs	r0, r6, #5
    233a:	movs	r1, r0
    233c:	adds	r2, r6, #4
    233e:	movs	r1, r0
    2340:	subs	r0, r5, #4
    2342:	movs	r1, r0
    2344:	subs	r4, r0, #4
    2346:	movs	r1, r0
    2348:	lsrs	r0, r3, #7
    234a:	movs	r0, r0
    234c:	adds	r2, r2, #7
    234e:	movs	r1, r0
    2350:	lsrs	r6, r6, #3
    2352:	movs	r0, r0
    2354:	lsrs	r2, r3, #5
    2356:	movs	r0, r0
    2358:	lsls	r6, r2, #31
    235a:	movs	r0, r0
    235c:	lsrs	r6, r6, #2
    235e:	movs	r0, r0
    2360:	lsrs	r6, r1, #1
    2362:	movs	r0, r0
    2364:	lsrs	r0, r1, #32
    2366:	movs	r0, r0
    2368:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    236c:	mov	r7, r0
    236e:	ldr	r6, [pc, #48]	; (23a0 <error@@Base+0xc9c>)
    2370:	mov	r8, r1
    2372:	ldr	r5, [pc, #48]	; (23a4 <error@@Base+0xca0>)
    2374:	mov	r9, r2
    2376:	add	r6, pc
    2378:	blx	f4c <__cxa_finalize@plt-0x20>
    237c:	add	r5, pc
    237e:	subs	r6, r6, r5
    2380:	asrs	r6, r6, #2
    2382:	beq.n	239a <error@@Base+0xc96>
    2384:	subs	r5, #4
    2386:	movs	r4, #0
    2388:	ldr.w	r3, [r5, #4]!
    238c:	adds	r4, #1
    238e:	mov	r2, r9
    2390:	mov	r1, r8
    2392:	mov	r0, r7
    2394:	blx	r3
    2396:	cmp	r6, r4
    2398:	bne.n	2388 <error@@Base+0xc84>
    239a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    239e:	nop
    23a0:	subs	r6, r2, r1
    23a2:	movs	r1, r0
    23a4:	subs	r4, r1, r1
    23a6:	movs	r1, r0
    23a8:	bx	lr
    23aa:	nop

Disassembly of section .fini:

000023ac <.fini>:
    23ac:	push	{r3, lr}
    23b0:	pop	{r3, pc}
