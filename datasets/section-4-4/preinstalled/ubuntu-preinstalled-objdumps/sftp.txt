
ubuntu-preinstalled/sftp:     file format elf32-littlearm


Disassembly of section .init:

000021b8 <.init>:
    21b8:	push	{r3, lr}
    21bc:	bl	30f4 <el_source@plt+0x7b8>
    21c0:	pop	{r3, pc}

Disassembly of section .plt:

000021c4 <getpgrp@plt-0x14>:
    21c4:	push	{lr}		; (str lr, [sp, #-4]!)
    21c8:	ldr	lr, [pc, #4]	; 21d4 <getpgrp@plt-0x4>
    21cc:	add	lr, pc, lr
    21d0:	ldr	pc, [lr, #8]!
    21d4:	andeq	r7, r2, r0, lsr fp

000021d8 <getpgrp@plt>:
    21d8:	add	ip, pc, #0, 12
    21dc:	add	ip, ip, #159744	; 0x27000
    21e0:	ldr	pc, [ip, #2864]!	; 0xb30

000021e4 <qsort@plt>:
    21e4:	add	ip, pc, #0, 12
    21e8:	add	ip, ip, #159744	; 0x27000
    21ec:	ldr	pc, [ip, #2856]!	; 0xb28

000021f0 <strerror@plt>:
    21f0:			; <UNDEFINED> instruction: 0xe7fd4778
    21f4:	add	ip, pc, #0, 12
    21f8:	add	ip, ip, #159744	; 0x27000
    21fc:	ldr	pc, [ip, #2844]!	; 0xb1c

00002200 <fileno@plt>:
    2200:	add	ip, pc, #0, 12
    2204:	add	ip, ip, #159744	; 0x27000
    2208:	ldr	pc, [ip, #2836]!	; 0xb14

0000220c <mkdir@plt>:
    220c:	add	ip, pc, #0, 12
    2210:	add	ip, ip, #159744	; 0x27000
    2214:	ldr	pc, [ip, #2828]!	; 0xb0c

00002218 <localtime_r@plt>:
    2218:	add	ip, pc, #0, 12
    221c:	add	ip, ip, #159744	; 0x27000
    2220:	ldr	pc, [ip, #2820]!	; 0xb04

00002224 <geteuid@plt>:
    2224:	add	ip, pc, #0, 12
    2228:	add	ip, ip, #159744	; 0x27000
    222c:	ldr	pc, [ip, #2812]!	; 0xafc

00002230 <abort@plt>:
    2230:	add	ip, pc, #0, 12
    2234:	add	ip, ip, #159744	; 0x27000
    2238:	ldr	pc, [ip, #2804]!	; 0xaf4

0000223c <connect@plt>:
    223c:	add	ip, pc, #0, 12
    2240:	add	ip, ip, #159744	; 0x27000
    2244:	ldr	pc, [ip, #2796]!	; 0xaec

00002248 <ERR_get_error@plt>:
    2248:	add	ip, pc, #0, 12
    224c:	add	ip, ip, #159744	; 0x27000
    2250:	ldr	pc, [ip, #2788]!	; 0xae4

00002254 <strcasestr@plt>:
    2254:	add	ip, pc, #0, 12
    2258:	add	ip, ip, #159744	; 0x27000
    225c:	ldr	pc, [ip, #2780]!	; 0xadc

00002260 <localtime@plt>:
    2260:	add	ip, pc, #0, 12
    2264:	add	ip, ip, #159744	; 0x27000
    2268:	ldr	pc, [ip, #2772]!	; 0xad4

0000226c <opendir@plt>:
    226c:	add	ip, pc, #0, 12
    2270:	add	ip, ip, #159744	; 0x27000
    2274:	ldr	pc, [ip, #2764]!	; 0xacc

00002278 <__libc_start_main@plt>:
    2278:	add	ip, pc, #0, 12
    227c:	add	ip, ip, #159744	; 0x27000
    2280:	ldr	pc, [ip, #2756]!	; 0xac4

00002284 <clock_gettime@plt>:
    2284:	add	ip, pc, #0, 12
    2288:	add	ip, ip, #159744	; 0x27000
    228c:	ldr	pc, [ip, #2748]!	; 0xabc

00002290 <__gmon_start__@plt>:
    2290:	add	ip, pc, #0, 12
    2294:	add	ip, ip, #159744	; 0x27000
    2298:	ldr	pc, [ip, #2740]!	; 0xab4

0000229c <__ctype_get_mb_cur_max@plt>:
    229c:	add	ip, pc, #0, 12
    22a0:	add	ip, ip, #159744	; 0x27000
    22a4:	ldr	pc, [ip, #2732]!	; 0xaac

000022a8 <strptime@plt>:
    22a8:	add	ip, pc, #0, 12
    22ac:	add	ip, ip, #159744	; 0x27000
    22b0:	ldr	pc, [ip, #2724]!	; 0xaa4

000022b4 <socketpair@plt>:
    22b4:	add	ip, pc, #0, 12
    22b8:	add	ip, ip, #159744	; 0x27000
    22bc:	ldr	pc, [ip, #2716]!	; 0xa9c

000022c0 <fclose@plt>:
    22c0:	add	ip, pc, #0, 12
    22c4:	add	ip, ip, #159744	; 0x27000
    22c8:	ldr	pc, [ip, #2708]!	; 0xa94

000022cc <fgets@plt>:
    22cc:	add	ip, pc, #0, 12
    22d0:	add	ip, ip, #159744	; 0x27000
    22d4:	ldr	pc, [ip, #2700]!	; 0xa8c

000022d8 <getenv@plt>:
    22d8:	add	ip, pc, #0, 12
    22dc:	add	ip, ip, #159744	; 0x27000
    22e0:	ldr	pc, [ip, #2692]!	; 0xa84

000022e4 <__printf_chk@plt>:
    22e4:	add	ip, pc, #0, 12
    22e8:	add	ip, ip, #159744	; 0x27000
    22ec:	ldr	pc, [ip, #2684]!	; 0xa7c

000022f0 <strchr@plt>:
    22f0:	add	ip, pc, #0, 12
    22f4:	add	ip, ip, #159744	; 0x27000
    22f8:	ldr	pc, [ip, #2676]!	; 0xa74

000022fc <putchar@plt>:
    22fc:	add	ip, pc, #0, 12
    2300:	add	ip, ip, #159744	; 0x27000
    2304:	ldr	pc, [ip, #2668]!	; 0xa6c

00002308 <strcasecmp@plt>:
    2308:	add	ip, pc, #0, 12
    230c:	add	ip, ip, #159744	; 0x27000
    2310:	ldr	pc, [ip, #2660]!	; 0xa64

00002314 <dirname@plt>:
    2314:	add	ip, pc, #0, 12
    2318:	add	ip, ip, #159744	; 0x27000
    231c:	ldr	pc, [ip, #2652]!	; 0xa5c

00002320 <reallocarray@plt>:
    2320:	add	ip, pc, #0, 12
    2324:	add	ip, ip, #159744	; 0x27000
    2328:	ldr	pc, [ip, #2644]!	; 0xa54

0000232c <listen@plt>:
    232c:	add	ip, pc, #0, 12
    2330:	add	ip, ip, #159744	; 0x27000
    2334:	ldr	pc, [ip, #2636]!	; 0xa4c

00002338 <calloc@plt>:
    2338:			; <UNDEFINED> instruction: 0xe7fd4778
    233c:	add	ip, pc, #0, 12
    2340:	add	ip, ip, #159744	; 0x27000
    2344:	ldr	pc, [ip, #2624]!	; 0xa40

00002348 <mktime@plt>:
    2348:	add	ip, pc, #0, 12
    234c:	add	ip, ip, #159744	; 0x27000
    2350:	ldr	pc, [ip, #2616]!	; 0xa38

00002354 <memset@plt>:
    2354:	add	ip, pc, #0, 12
    2358:	add	ip, ip, #159744	; 0x27000
    235c:	ldr	pc, [ip, #2608]!	; 0xa30

00002360 <gai_strerror@plt>:
    2360:			; <UNDEFINED> instruction: 0xe7fd4778
    2364:	add	ip, pc, #0, 12
    2368:	add	ip, ip, #159744	; 0x27000
    236c:	ldr	pc, [ip, #2596]!	; 0xa24

00002370 <strrchr@plt>:
    2370:	add	ip, pc, #0, 12
    2374:	add	ip, ip, #159744	; 0x27000
    2378:	ldr	pc, [ip, #2588]!	; 0xa1c

0000237c <fsync@plt>:
    237c:	add	ip, pc, #0, 12
    2380:	add	ip, ip, #159744	; 0x27000
    2384:	ldr	pc, [ip, #2580]!	; 0xa14

00002388 <execvp@plt>:
    2388:	add	ip, pc, #0, 12
    238c:	add	ip, ip, #159744	; 0x27000
    2390:	ldr	pc, [ip, #2572]!	; 0xa0c

00002394 <perror@plt>:
    2394:	add	ip, pc, #0, 12
    2398:	add	ip, ip, #159744	; 0x27000
    239c:	ldr	pc, [ip, #2564]!	; 0xa04

000023a0 <strtoll@plt>:
    23a0:	add	ip, pc, #0, 12
    23a4:	add	ip, ip, #159744	; 0x27000
    23a8:	ldr	pc, [ip, #2556]!	; 0x9fc

000023ac <history_init@plt>:
    23ac:	add	ip, pc, #0, 12
    23b0:	add	ip, ip, #159744	; 0x27000
    23b4:	ldr	pc, [ip, #2548]!	; 0x9f4

000023b8 <__fxstat64@plt>:
    23b8:	add	ip, pc, #0, 12
    23bc:	add	ip, ip, #159744	; 0x27000
    23c0:	ldr	pc, [ip, #2540]!	; 0x9ec

000023c4 <tcgetpgrp@plt>:
    23c4:	add	ip, pc, #0, 12
    23c8:	add	ip, ip, #159744	; 0x27000
    23cc:	ldr	pc, [ip, #2532]!	; 0x9e4

000023d0 <OpenSSL_version_num@plt>:
    23d0:	add	ip, pc, #0, 12
    23d4:	add	ip, ip, #159744	; 0x27000
    23d8:	ldr	pc, [ip, #2524]!	; 0x9dc

000023dc <_exit@plt>:
    23dc:	add	ip, pc, #0, 12
    23e0:	add	ip, ip, #159744	; 0x27000
    23e4:	ldr	pc, [ip, #2516]!	; 0x9d4

000023e8 <getuid@plt>:
    23e8:	add	ip, pc, #0, 12
    23ec:	add	ip, ip, #159744	; 0x27000
    23f0:	ldr	pc, [ip, #2508]!	; 0x9cc

000023f4 <free@plt>:
    23f4:			; <UNDEFINED> instruction: 0xe7fd4778
    23f8:	add	ip, pc, #0, 12
    23fc:	add	ip, ip, #159744	; 0x27000
    2400:	ldr	pc, [ip, #2496]!	; 0x9c0

00002404 <read@plt>:
    2404:	add	ip, pc, #0, 12
    2408:	add	ip, ip, #159744	; 0x27000
    240c:	ldr	pc, [ip, #2488]!	; 0x9b8

00002410 <write@plt>:
    2410:	add	ip, pc, #0, 12
    2414:	add	ip, ip, #159744	; 0x27000
    2418:	ldr	pc, [ip, #2480]!	; 0x9b0

0000241c <openlog@plt>:
    241c:	add	ip, pc, #0, 12
    2420:	add	ip, ip, #159744	; 0x27000
    2424:	ldr	pc, [ip, #2472]!	; 0x9a8

00002428 <gettimeofday@plt>:
    2428:	add	ip, pc, #0, 12
    242c:	add	ip, ip, #159744	; 0x27000
    2430:	ldr	pc, [ip, #2464]!	; 0x9a0

00002434 <__asprintf_chk@plt>:
    2434:	add	ip, pc, #0, 12
    2438:	add	ip, ip, #159744	; 0x27000
    243c:	ldr	pc, [ip, #2456]!	; 0x998

00002440 <__memcpy_chk@plt>:
    2440:	add	ip, pc, #0, 12
    2444:	add	ip, ip, #159744	; 0x27000
    2448:	ldr	pc, [ip, #2448]!	; 0x990

0000244c <el_get@plt>:
    244c:	add	ip, pc, #0, 12
    2450:	add	ip, ip, #159744	; 0x27000
    2454:	ldr	pc, [ip, #2440]!	; 0x988

00002458 <socket@plt>:
    2458:	add	ip, pc, #0, 12
    245c:	add	ip, ip, #159744	; 0x27000
    2460:	ldr	pc, [ip, #2432]!	; 0x980

00002464 <execl@plt>:
    2464:	add	ip, pc, #0, 12
    2468:	add	ip, ip, #159744	; 0x27000
    246c:	ldr	pc, [ip, #2424]!	; 0x978

00002470 <umask@plt>:
    2470:	add	ip, pc, #0, 12
    2474:	add	ip, ip, #159744	; 0x27000
    2478:	ldr	pc, [ip, #2416]!	; 0x970

0000247c <ioctl@plt>:
    247c:	add	ip, pc, #0, 12
    2480:	add	ip, ip, #159744	; 0x27000
    2484:	ldr	pc, [ip, #2408]!	; 0x968

00002488 <isatty@plt>:
    2488:	add	ip, pc, #0, 12
    248c:	add	ip, ip, #159744	; 0x27000
    2490:	ldr	pc, [ip, #2400]!	; 0x960

00002494 <strsignal@plt>:
    2494:	add	ip, pc, #0, 12
    2498:	add	ip, ip, #159744	; 0x27000
    249c:	ldr	pc, [ip, #2392]!	; 0x958

000024a0 <strlen@plt>:
    24a0:	add	ip, pc, #0, 12
    24a4:	add	ip, ip, #159744	; 0x27000
    24a8:	ldr	pc, [ip, #2384]!	; 0x950

000024ac <unlink@plt>:
    24ac:	add	ip, pc, #0, 12
    24b0:	add	ip, ip, #159744	; 0x27000
    24b4:	ldr	pc, [ip, #2376]!	; 0x948

000024b8 <__xpg_basename@plt>:
    24b8:	add	ip, pc, #0, 12
    24bc:	add	ip, ip, #159744	; 0x27000
    24c0:	ldr	pc, [ip, #2368]!	; 0x940

000024c4 <memcpy@plt>:
    24c4:	add	ip, pc, #0, 12
    24c8:	add	ip, ip, #159744	; 0x27000
    24cc:	ldr	pc, [ip, #2360]!	; 0x938

000024d0 <setlocale@plt>:
    24d0:			; <UNDEFINED> instruction: 0xe7fd4778
    24d4:	add	ip, pc, #0, 12
    24d8:	add	ip, ip, #159744	; 0x27000
    24dc:	ldr	pc, [ip, #2348]!	; 0x92c

000024e0 <fopen64@plt>:
    24e0:	add	ip, pc, #0, 12
    24e4:	add	ip, ip, #159744	; 0x27000
    24e8:	ldr	pc, [ip, #2340]!	; 0x924

000024ec <getpwuid@plt>:
    24ec:	add	ip, pc, #0, 12
    24f0:	add	ip, ip, #159744	; 0x27000
    24f4:	ldr	pc, [ip, #2332]!	; 0x91c

000024f8 <__ctype_tolower_loc@plt>:
    24f8:	add	ip, pc, #0, 12
    24fc:	add	ip, ip, #159744	; 0x27000
    2500:	ldr	pc, [ip, #2324]!	; 0x914

00002504 <getppid@plt>:
    2504:	add	ip, pc, #0, 12
    2508:	add	ip, ip, #159744	; 0x27000
    250c:	ldr	pc, [ip, #2316]!	; 0x90c

00002510 <alarm@plt>:
    2510:			; <UNDEFINED> instruction: 0xe7fd4778
    2514:	add	ip, pc, #0, 12
    2518:	add	ip, ip, #159744	; 0x27000
    251c:	ldr	pc, [ip, #2304]!	; 0x900

00002520 <__explicit_bzero_chk@plt>:
    2520:			; <UNDEFINED> instruction: 0xe7fd4778
    2524:	add	ip, pc, #0, 12
    2528:	add	ip, ip, #159744	; 0x27000
    252c:	ldr	pc, [ip, #2292]!	; 0x8f4

00002530 <ENGINE_load_builtin_engines@plt>:
    2530:	add	ip, pc, #0, 12
    2534:	add	ip, ip, #159744	; 0x27000
    2538:	ldr	pc, [ip, #2284]!	; 0x8ec

0000253c <strtol@plt>:
    253c:	add	ip, pc, #0, 12
    2540:	add	ip, ip, #159744	; 0x27000
    2544:	ldr	pc, [ip, #2276]!	; 0x8e4

00002548 <waitpid@plt>:
    2548:	add	ip, pc, #0, 12
    254c:	add	ip, ip, #159744	; 0x27000
    2550:	ldr	pc, [ip, #2268]!	; 0x8dc

00002554 <el_set@plt>:
    2554:	add	ip, pc, #0, 12
    2558:	add	ip, ip, #159744	; 0x27000
    255c:	ldr	pc, [ip, #2260]!	; 0x8d4

00002560 <__vsnprintf_chk@plt>:
    2560:	add	ip, pc, #0, 12
    2564:	add	ip, ip, #159744	; 0x27000
    2568:	ldr	pc, [ip, #2252]!	; 0x8cc

0000256c <el_init@plt>:
    256c:	add	ip, pc, #0, 12
    2570:	add	ip, ip, #159744	; 0x27000
    2574:	ldr	pc, [ip, #2244]!	; 0x8c4

00002578 <open64@plt>:
    2578:	add	ip, pc, #0, 12
    257c:	add	ip, ip, #159744	; 0x27000
    2580:	ldr	pc, [ip, #2236]!	; 0x8bc

00002584 <memmem@plt>:
    2584:	add	ip, pc, #0, 12
    2588:	add	ip, ip, #159744	; 0x27000
    258c:	ldr	pc, [ip, #2228]!	; 0x8b4

00002590 <raise@plt>:
    2590:			; <UNDEFINED> instruction: 0xe7fd4778
    2594:	add	ip, pc, #0, 12
    2598:	add	ip, ip, #159744	; 0x27000
    259c:	ldr	pc, [ip, #2216]!	; 0x8a8

000025a0 <fcntl64@plt>:
    25a0:	add	ip, pc, #0, 12
    25a4:	add	ip, ip, #159744	; 0x27000
    25a8:	ldr	pc, [ip, #2208]!	; 0x8a0

000025ac <mblen@plt>:
    25ac:	add	ip, pc, #0, 12
    25b0:	add	ip, ip, #159744	; 0x27000
    25b4:	ldr	pc, [ip, #2200]!	; 0x898

000025b8 <__snprintf_chk@plt>:
    25b8:	add	ip, pc, #0, 12
    25bc:	add	ip, ip, #159744	; 0x27000
    25c0:	ldr	pc, [ip, #2192]!	; 0x890

000025c4 <shutdown@plt>:
    25c4:	add	ip, pc, #0, 12
    25c8:	add	ip, ip, #159744	; 0x27000
    25cc:	ldr	pc, [ip, #2184]!	; 0x888

000025d0 <bind@plt>:
    25d0:	add	ip, pc, #0, 12
    25d4:	add	ip, ip, #159744	; 0x27000
    25d8:	ldr	pc, [ip, #2176]!	; 0x880

000025dc <__syslog_chk@plt>:
    25dc:	add	ip, pc, #0, 12
    25e0:	add	ip, ip, #159744	; 0x27000
    25e4:	ldr	pc, [ip, #2168]!	; 0x878

000025e8 <close@plt>:
    25e8:			; <UNDEFINED> instruction: 0xe7fd4778
    25ec:	add	ip, pc, #0, 12
    25f0:	add	ip, ip, #159744	; 0x27000
    25f4:	ldr	pc, [ip, #2156]!	; 0x86c

000025f8 <fwrite@plt>:
    25f8:	add	ip, pc, #0, 12
    25fc:	add	ip, ip, #159744	; 0x27000
    2600:	ldr	pc, [ip, #2148]!	; 0x864

00002604 <closedir@plt>:
    2604:	add	ip, pc, #0, 12
    2608:	add	ip, ip, #159744	; 0x27000
    260c:	ldr	pc, [ip, #2140]!	; 0x85c

00002610 <el_gets@plt>:
    2610:	add	ip, pc, #0, 12
    2614:	add	ip, ip, #159744	; 0x27000
    2618:	ldr	pc, [ip, #2132]!	; 0x854

0000261c <strncasecmp@plt>:
    261c:	add	ip, pc, #0, 12
    2620:	add	ip, ip, #159744	; 0x27000
    2624:	ldr	pc, [ip, #2124]!	; 0x84c

00002628 <time@plt>:
    2628:	add	ip, pc, #0, 12
    262c:	add	ip, ip, #159744	; 0x27000
    2630:	ldr	pc, [ip, #2116]!	; 0x844

00002634 <setvbuf@plt>:
    2634:	add	ip, pc, #0, 12
    2638:	add	ip, ip, #159744	; 0x27000
    263c:	ldr	pc, [ip, #2108]!	; 0x83c

00002640 <__ctype_b_loc@plt>:
    2640:	add	ip, pc, #0, 12
    2644:	add	ip, ip, #159744	; 0x27000
    2648:	ldr	pc, [ip, #2100]!	; 0x834

0000264c <__xstat64@plt>:
    264c:	add	ip, pc, #0, 12
    2650:	add	ip, ip, #159744	; 0x27000
    2654:	ldr	pc, [ip, #2092]!	; 0x82c

00002658 <strdup@plt>:
    2658:			; <UNDEFINED> instruction: 0xe7fd4778
    265c:	add	ip, pc, #0, 12
    2660:	add	ip, ip, #159744	; 0x27000
    2664:	ldr	pc, [ip, #2080]!	; 0x820

00002668 <lseek64@plt>:
    2668:	add	ip, pc, #0, 12
    266c:	add	ip, ip, #159744	; 0x27000
    2670:	ldr	pc, [ip, #2072]!	; 0x818

00002674 <malloc@plt>:
    2674:	add	ip, pc, #0, 12
    2678:	add	ip, ip, #159744	; 0x27000
    267c:	ldr	pc, [ip, #2064]!	; 0x810

00002680 <nl_langinfo@plt>:
    2680:	add	ip, pc, #0, 12
    2684:	add	ip, ip, #159744	; 0x27000
    2688:	ldr	pc, [ip, #2056]!	; 0x808

0000268c <el_line@plt>:
    268c:	add	ip, pc, #0, 12
    2690:	add	ip, ip, #159744	; 0x27000
    2694:	ldr	pc, [ip, #2048]!	; 0x800

00002698 <__stack_chk_fail@plt>:
    2698:	add	ip, pc, #0, 12
    269c:	add	ip, ip, #159744	; 0x27000
    26a0:	ldr	pc, [ip, #2040]!	; 0x7f8

000026a4 <sigaction@plt>:
    26a4:	add	ip, pc, #0, 12
    26a8:	add	ip, ip, #159744	; 0x27000
    26ac:	ldr	pc, [ip, #2032]!	; 0x7f0

000026b0 <chdir@plt>:
    26b0:	add	ip, pc, #0, 12
    26b4:	add	ip, ip, #159744	; 0x27000
    26b8:	ldr	pc, [ip, #2024]!	; 0x7e8

000026bc <__fprintf_chk@plt>:
    26bc:	add	ip, pc, #0, 12
    26c0:	add	ip, ip, #159744	; 0x27000
    26c4:	ldr	pc, [ip, #2016]!	; 0x7e0

000026c8 <poll@plt>:
    26c8:	add	ip, pc, #0, 12
    26cc:	add	ip, ip, #159744	; 0x27000
    26d0:	ldr	pc, [ip, #2008]!	; 0x7d8

000026d4 <strnlen@plt>:
    26d4:	add	ip, pc, #0, 12
    26d8:	add	ip, ip, #159744	; 0x27000
    26dc:	ldr	pc, [ip, #2000]!	; 0x7d0

000026e0 <fputc@plt>:
    26e0:	add	ip, pc, #0, 12
    26e4:	add	ip, ip, #159744	; 0x27000
    26e8:	ldr	pc, [ip, #1992]!	; 0x7c8

000026ec <getcwd@plt>:
    26ec:	add	ip, pc, #0, 12
    26f0:	add	ip, ip, #159744	; 0x27000
    26f4:	ldr	pc, [ip, #1984]!	; 0x7c0

000026f8 <getgrgid@plt>:
    26f8:	add	ip, pc, #0, 12
    26fc:	add	ip, ip, #159744	; 0x27000
    2700:	ldr	pc, [ip, #1976]!	; 0x7b8

00002704 <el_insertstr@plt>:
    2704:	add	ip, pc, #0, 12
    2708:	add	ip, ip, #159744	; 0x27000
    270c:	ldr	pc, [ip, #1968]!	; 0x7b0

00002710 <history@plt>:
    2710:	add	ip, pc, #0, 12
    2714:	add	ip, ip, #159744	; 0x27000
    2718:	ldr	pc, [ip, #1960]!	; 0x7a8

0000271c <memmove@plt>:
    271c:	add	ip, pc, #0, 12
    2720:	add	ip, ip, #159744	; 0x27000
    2724:	ldr	pc, [ip, #1952]!	; 0x7a0

00002728 <sigfillset@plt>:
    2728:	add	ip, pc, #0, 12
    272c:	add	ip, ip, #159744	; 0x27000
    2730:	ldr	pc, [ip, #1944]!	; 0x798

00002734 <dup2@plt>:
    2734:	add	ip, pc, #0, 12
    2738:	add	ip, ip, #159744	; 0x27000
    273c:	ldr	pc, [ip, #1936]!	; 0x790

00002740 <puts@plt>:
    2740:	add	ip, pc, #0, 12
    2744:	add	ip, ip, #159744	; 0x27000
    2748:	ldr	pc, [ip, #1928]!	; 0x788

0000274c <strftime@plt>:
    274c:	add	ip, pc, #0, 12
    2750:	add	ip, ip, #159744	; 0x27000
    2754:	ldr	pc, [ip, #1920]!	; 0x780

00002758 <ENGINE_register_all_complete@plt>:
    2758:	add	ip, pc, #0, 12
    275c:	add	ip, ip, #159744	; 0x27000
    2760:	ldr	pc, [ip, #1912]!	; 0x778

00002764 <getpid@plt>:
    2764:	add	ip, pc, #0, 12
    2768:	add	ip, ip, #159744	; 0x27000
    276c:	ldr	pc, [ip, #1904]!	; 0x770

00002770 <RAND_bytes@plt>:
    2770:	add	ip, pc, #0, 12
    2774:	add	ip, ip, #159744	; 0x27000
    2778:	ldr	pc, [ip, #1896]!	; 0x768

0000277c <endpwent@plt>:
    277c:	add	ip, pc, #0, 12
    2780:	add	ip, ip, #159744	; 0x27000
    2784:	ldr	pc, [ip, #1888]!	; 0x760

00002788 <mbtowc@plt>:
    2788:	add	ip, pc, #0, 12
    278c:	add	ip, ip, #159744	; 0x27000
    2790:	ldr	pc, [ip, #1880]!	; 0x758

00002794 <closelog@plt>:
    2794:			; <UNDEFINED> instruction: 0xe7fd4778
    2798:	add	ip, pc, #0, 12
    279c:	add	ip, ip, #159744	; 0x27000
    27a0:	ldr	pc, [ip, #1868]!	; 0x74c

000027a4 <fork@plt>:
    27a4:	add	ip, pc, #0, 12
    27a8:	add	ip, ip, #159744	; 0x27000
    27ac:	ldr	pc, [ip, #1860]!	; 0x744

000027b0 <strspn@plt>:
    27b0:	add	ip, pc, #0, 12
    27b4:	add	ip, ip, #159744	; 0x27000
    27b8:	ldr	pc, [ip, #1852]!	; 0x73c

000027bc <__realpath_chk@plt>:
    27bc:	add	ip, pc, #0, 12
    27c0:	add	ip, ip, #159744	; 0x27000
    27c4:	ldr	pc, [ip, #1844]!	; 0x734

000027c8 <__lxstat64@plt>:
    27c8:	add	ip, pc, #0, 12
    27cc:	add	ip, ip, #159744	; 0x27000
    27d0:	ldr	pc, [ip, #1836]!	; 0x72c

000027d4 <readdir64@plt>:
    27d4:	add	ip, pc, #0, 12
    27d8:	add	ip, ip, #159744	; 0x27000
    27dc:	ldr	pc, [ip, #1828]!	; 0x724

000027e0 <el_end@plt>:
    27e0:	add	ip, pc, #0, 12
    27e4:	add	ip, ip, #159744	; 0x27000
    27e8:	ldr	pc, [ip, #1820]!	; 0x71c

000027ec <snprintf@plt>:
    27ec:	add	ip, pc, #0, 12
    27f0:	add	ip, ip, #159744	; 0x27000
    27f4:	ldr	pc, [ip, #1812]!	; 0x714

000027f8 <RAND_status@plt>:
    27f8:	add	ip, pc, #0, 12
    27fc:	add	ip, ip, #159744	; 0x27000
    2800:	ldr	pc, [ip, #1804]!	; 0x70c

00002804 <OPENSSL_init_crypto@plt>:
    2804:			; <UNDEFINED> instruction: 0xe7fd4778
    2808:	add	ip, pc, #0, 12
    280c:	add	ip, ip, #159744	; 0x27000
    2810:	ldr	pc, [ip, #1792]!	; 0x700

00002814 <strcspn@plt>:
    2814:	add	ip, pc, #0, 12
    2818:	add	ip, ip, #159744	; 0x27000
    281c:	ldr	pc, [ip, #1784]!	; 0x6f8

00002820 <wcwidth@plt>:
    2820:	add	ip, pc, #0, 12
    2824:	add	ip, ip, #159744	; 0x27000
    2828:	ldr	pc, [ip, #1776]!	; 0x6f0

0000282c <strncmp@plt>:
    282c:	add	ip, pc, #0, 12
    2830:	add	ip, ip, #159744	; 0x27000
    2834:	ldr	pc, [ip, #1768]!	; 0x6e8

00002838 <getpwent@plt>:
    2838:	add	ip, pc, #0, 12
    283c:	add	ip, ip, #159744	; 0x27000
    2840:	ldr	pc, [ip, #1760]!	; 0x6e0

00002844 <kill@plt>:
    2844:			; <UNDEFINED> instruction: 0xe7fd4778
    2848:	add	ip, pc, #0, 12
    284c:	add	ip, ip, #159744	; 0x27000
    2850:	ldr	pc, [ip, #1748]!	; 0x6d4

00002854 <nanosleep@plt>:
    2854:	add	ip, pc, #0, 12
    2858:	add	ip, ip, #159744	; 0x27000
    285c:	ldr	pc, [ip, #1740]!	; 0x6cc

00002860 <utimes@plt>:
    2860:	add	ip, pc, #0, 12
    2864:	add	ip, ip, #159744	; 0x27000
    2868:	ldr	pc, [ip, #1732]!	; 0x6c4

0000286c <realloc@plt>:
    286c:	add	ip, pc, #0, 12
    2870:	add	ip, ip, #159744	; 0x27000
    2874:	ldr	pc, [ip, #1724]!	; 0x6bc

00002878 <ftruncate64@plt>:
    2878:	add	ip, pc, #0, 12
    287c:	add	ip, ip, #159744	; 0x27000
    2880:	ldr	pc, [ip, #1716]!	; 0x6b4

00002884 <getservbyname@plt>:
    2884:	add	ip, pc, #0, 12
    2888:	add	ip, ip, #159744	; 0x27000
    288c:	ldr	pc, [ip, #1708]!	; 0x6ac

00002890 <getsockopt@plt>:
    2890:	add	ip, pc, #0, 12
    2894:	add	ip, ip, #159744	; 0x27000
    2898:	ldr	pc, [ip, #1700]!	; 0x6a4

0000289c <setsockopt@plt>:
    289c:	add	ip, pc, #0, 12
    28a0:	add	ip, ip, #159744	; 0x27000
    28a4:	ldr	pc, [ip, #1692]!	; 0x69c

000028a8 <getsid@plt>:
    28a8:	add	ip, pc, #0, 12
    28ac:	add	ip, ip, #159744	; 0x27000
    28b0:	ldr	pc, [ip, #1684]!	; 0x694

000028b4 <strpbrk@plt>:
    28b4:	add	ip, pc, #0, 12
    28b8:	add	ip, ip, #159744	; 0x27000
    28bc:	ldr	pc, [ip, #1676]!	; 0x68c

000028c0 <memchr@plt>:
    28c0:	add	ip, pc, #0, 12
    28c4:	add	ip, ip, #159744	; 0x27000
    28c8:	ldr	pc, [ip, #1668]!	; 0x684

000028cc <fchmod@plt>:
    28cc:	add	ip, pc, #0, 12
    28d0:	add	ip, ip, #159744	; 0x27000
    28d4:	ldr	pc, [ip, #1660]!	; 0x67c

000028d8 <strcmp@plt>:
    28d8:			; <UNDEFINED> instruction: 0xe7fd4778
    28dc:	add	ip, pc, #0, 12
    28e0:	add	ip, ip, #159744	; 0x27000
    28e4:	ldr	pc, [ip, #1648]!	; 0x670

000028e8 <exit@plt>:
    28e8:	add	ip, pc, #0, 12
    28ec:	add	ip, ip, #159744	; 0x27000
    28f0:	ldr	pc, [ip, #1640]!	; 0x668

000028f4 <__vasprintf_chk@plt>:
    28f4:	add	ip, pc, #0, 12
    28f8:	add	ip, ip, #159744	; 0x27000
    28fc:	ldr	pc, [ip, #1632]!	; 0x660

00002900 <__errno_location@plt>:
    2900:	add	ip, pc, #0, 12
    2904:	add	ip, ip, #159744	; 0x27000
    2908:	ldr	pc, [ip, #1624]!	; 0x658

0000290c <__cxa_finalize@plt>:
    290c:	add	ip, pc, #0, 12
    2910:	add	ip, ip, #159744	; 0x27000
    2914:	ldr	pc, [ip, #1616]!	; 0x650

00002918 <getpwnam@plt>:
    2918:	add	ip, pc, #0, 12
    291c:	add	ip, ip, #159744	; 0x27000
    2920:	ldr	pc, [ip, #1608]!	; 0x648

00002924 <getpagesize@plt>:
    2924:	add	ip, pc, #0, 12
    2928:	add	ip, ip, #159744	; 0x27000
    292c:	ldr	pc, [ip, #1600]!	; 0x640

00002930 <fputs@plt>:
    2930:	add	ip, pc, #0, 12
    2934:	add	ip, ip, #159744	; 0x27000
    2938:	ldr	pc, [ip, #1592]!	; 0x638

0000293c <el_source@plt>:
    293c:	add	ip, pc, #0, 12
    2940:	add	ip, ip, #159744	; 0x27000
    2944:	ldr	pc, [ip, #1584]!	; 0x630

Disassembly of section .text:

00002948 <error@@Base-0xa314>:
    2948:	svcmi	0x00f0e92d
    294c:	stc	6, cr4, [sp, #-552]!	; 0xfffffdd8
    2950:	strcs	r8, [r0, #-2818]	; 0xfffff4fe
    2954:			; <UNDEFINED> instruction: 0x2650f8df
    2958:			; <UNDEFINED> instruction: 0xf8df4604
    295c:	ssatmi	r3, #9, r0, asr #12
    2960:			; <UNDEFINED> instruction: 0xf8df447a
    2964:	addslt	fp, sp, ip, asr #12
    2968:	stmdbeq	r2, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    296c:	ldrbtmi	r5, [fp], #2259	; 0x8d3
    2970:	ldmdavs	fp, {r3, r4, r9, sl, fp, sp, pc}
    2974:			; <UNDEFINED> instruction: 0xf04f931b
    2978:	ldrls	r0, [r3, #-768]	; 0xfffffd00
    297c:			; <UNDEFINED> instruction: 0xf00b9516
    2980:			; <UNDEFINED> instruction: 0xf00dfc9d
    2984:			; <UNDEFINED> instruction: 0xf00dfd97
    2988:			; <UNDEFINED> instruction: 0xf8dafe1b
    298c:			; <UNDEFINED> instruction: 0xf00e0000
    2990:			; <UNDEFINED> instruction: 0xf8dffc7d
    2994:			; <UNDEFINED> instruction: 0xf8df3620
    2998:			; <UNDEFINED> instruction: 0xf8df2620
    299c:			; <UNDEFINED> instruction: 0xf85b1620
    29a0:	ldrbtmi	r3, [sl], #-3
    29a4:	strls	r4, [r5, #-1145]	; 0xfffffb87
    29a8:	bcs	43e1d0 <strvisx@@Base+0x42a45c>
    29ac:	ldrpl	lr, [r8, #-2509]	; 0xfffff633
    29b0:	ldrls	r9, [sl, #-1284]	; 0xfffffafc
    29b4:	ldrtmi	r4, [r0], -r7, lsl #12
    29b8:			; <UNDEFINED> instruction: 0xf00b601f
    29bc:			; <UNDEFINED> instruction: 0xf8dff9ef
    29c0:	ldrtmi	r1, [r0], -r0, lsl #12
    29c4:			; <UNDEFINED> instruction: 0xf00b4479
    29c8:			; <UNDEFINED> instruction: 0xf8dff9e9
    29cc:			; <UNDEFINED> instruction: 0x463015f8
    29d0:	ldrbtmi	r9, [r9], #-1289	; 0xfffffaf7
    29d4:			; <UNDEFINED> instruction: 0xf9e2f00b
    29d8:	strbne	pc, [ip, #2271]!	; 0x8df	; <UNPREDICTABLE>
    29dc:	strls	r4, [sl, #-1584]	; 0xfffff9d0
    29e0:			; <UNDEFINED> instruction: 0xf8df4479
    29e4:			; <UNDEFINED> instruction: 0xf00b55e8
    29e8:			; <UNDEFINED> instruction: 0xf8dff9d9
    29ec:	ldrtmi	r1, [r0], -r4, ror #11
    29f0:	ldrbtmi	r2, [r9], #-832	; 0xfffffcc0
    29f4:			; <UNDEFINED> instruction: 0xf00b9307
    29f8:			; <UNDEFINED> instruction: 0xf8dff9d1
    29fc:			; <UNDEFINED> instruction: 0xf8df25d8
    2a00:	vst3.<illegal width 64>	{d19,d21,d23}, [pc :64], r8
    2a04:	mrsls	r4, (UNDEF: 24)
    2a08:	tstls	r6, r3, lsl #2
    2a0c:	mvnscc	pc, pc, asr #32
    2a10:	andcs	pc, r2, fp, asr r8	; <UNPREDICTABLE>
    2a14:	tstls	fp, sp, ror r4
    2a18:	andne	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    2a1c:			; <UNDEFINED> instruction: 0xf8df6813
    2a20:			; <UNDEFINED> instruction: 0x910e25bc
    2a24:	andls	r4, ip, #2046820352	; 0x7a000000
    2a28:	ldrcs	pc, [r4, #2271]!	; 0x8df
    2a2c:	ldrbtmi	r6, [sl], #-11
    2a30:	strtmi	r9, [sl], -sp, lsl #4
    2a34:			; <UNDEFINED> instruction: 0x46204651
    2a38:			; <UNDEFINED> instruction: 0xf9f4f00f
    2a3c:	subsle	r1, r5, r7, asr #24
    2a40:	teqeq	r1, #160, 2	; 0x28	; <UNPREDICTABLE>
    2a44:	vqdmulh.s<illegal width 8>	q1, q0, <illegal reg q2.5>
    2a48:	ldm	pc, {r1, r3, r4, r6, r7, pc}^	; <UNPREDICTABLE>
    2a4c:	sbcseq	pc, sl, r3, lsl r0	; <UNPREDICTABLE>
    2a50:	sbcseq	r0, r8, r6, asr #32
    2a54:	sbcseq	r0, r8, fp, lsl #3
    2a58:	sbcseq	r0, r8, fp, lsl #3
    2a5c:	ldrsbeq	r0, [r8], #8
    2a60:	ldrsbeq	r0, [r8], #8
    2a64:	ldrsbeq	r0, [r8], #8
    2a68:	ldrsbeq	r0, [r8], #8
    2a6c:	ldrsbeq	r0, [r8], #8
    2a70:	orreq	r0, fp, r7, ror r1
    2a74:	sbcseq	r0, r8, r1, ror r1
    2a78:	sbcseq	r0, r8, r1, ror #2
    2a7c:	ldrsbeq	r0, [r8], #8
    2a80:	sbcseq	r0, r8, r1, ror #2
    2a84:	ldrsbeq	r0, [r8], #8
    2a88:	ldrsbeq	r0, [r8], #8
    2a8c:	sbcseq	r0, r8, r6, lsr #3
    2a90:			; <UNDEFINED> instruction: 0x01b50192
    2a94:	ldrsbeq	r0, [r8], #8
    2a98:	ldrsbeq	r0, [r8], #8
    2a9c:	ldrsbeq	r0, [r8], #8
    2aa0:	ldrsbeq	r0, [r8], #8
    2aa4:	ldrsbeq	r0, [r8], #8
    2aa8:	ldrsbeq	r0, [r8], #8
    2aac:	ldrsbeq	r0, [fp, #-8]
    2ab0:	cmneq	r1, lr, lsr #2
    2ab4:	ldrsbeq	r0, [r8], #8
    2ab8:	sbcseq	r0, r8, r8, lsr #2
    2abc:	ldrdeq	r0, [r1, #-8]!
    2ac0:	ldrsbeq	r0, [r8], #8
    2ac4:	sbcseq	r0, r8, lr, lsl #2
    2ac8:	ldrdeq	r0, [r1, #-8]!
    2acc:	rscseq	r0, r6, r8, lsl #2
    2ad0:	strdeq	r0, [fp], #1	; <UNPREDICTABLE>
    2ad4:	ldrsbeq	r0, [r8], #8
    2ad8:	strtmi	r0, [sl], -r1, ror #1
    2adc:			; <UNDEFINED> instruction: 0x46204651
    2ae0:	stmdbeq	r2, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    2ae4:			; <UNDEFINED> instruction: 0xf99ef00f
    2ae8:			; <UNDEFINED> instruction: 0xd1a91c47
    2aec:			; <UNDEFINED> instruction: 0xf7ff2002
    2af0:	ldmdblt	r8, {r2, r3, r6, r7, sl, fp, sp, lr, pc}
    2af4:	strbtcc	pc, [ip], #2271	; 0x8df	; <UNPREDICTABLE>
    2af8:	subsvs	r4, r8, fp, ror r4
    2afc:	stmdbls	r6, {r0, r8, r9, sp}
    2b00:	ldrdeq	pc, [r0], -sl
    2b04:			; <UNDEFINED> instruction: 0xf009461a
    2b08:			; <UNDEFINED> instruction: 0xf1b8fe8f
    2b0c:			; <UNDEFINED> instruction: 0xf0000f00
    2b10:			; <UNDEFINED> instruction: 0xf8df8170
    2b14:			; <UNDEFINED> instruction: 0x463014d4
    2b18:	ldrls	r2, [r8], #-1024	; 0xfffffc00
    2b1c:			; <UNDEFINED> instruction: 0xf00b4479
    2b20:	ldmdbls	r8, {r0, r2, r3, r4, r5, r8, fp, ip, sp, lr, pc}
    2b24:	bge	42d770 <strvisx@@Base+0x4199fc>
    2b28:			; <UNDEFINED> instruction: 0xf0004640
    2b2c:			; <UNDEFINED> instruction: 0x4630fcff
    2b30:			; <UNDEFINED> instruction: 0xf9ccf00b
    2b34:	ldmib	sp, {r0, r3, r8, r9, fp, ip, pc}^
    2b38:	movwls	r0, #272	; 0x110
    2b3c:	movwls	r9, #6922	; 0x1b0a
    2b40:	andcc	lr, r7, #3620864	; 0x374000
    2b44:	ldc2	0, cr15, [r0], {4}
    2b48:	stmdacs	r0, {r0, r2, r9, sl, lr}
    2b4c:	bicshi	pc, ip, r0
    2b50:	ldrcc	pc, [r8], #2271	; 0x8df
    2b54:			; <UNDEFINED> instruction: 0xf8d3447b
    2b58:	ldmdblt	fp!, {r2, r3, r9, ip, sp}^
    2b5c:	ldrcc	pc, [r0], #2271	; 0x8df
    2b60:	andcc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    2b64:			; <UNDEFINED> instruction: 0xf1b86818
    2b68:			; <UNDEFINED> instruction: 0xf0000f00
    2b6c:			; <UNDEFINED> instruction: 0xf8df81ae
    2b70:	strbmi	r2, [r3], -r4, lsl #9
    2b74:	ldrbtmi	r2, [sl], #-257	; 0xfffffeff
    2b78:	stc	7, cr15, [r0, #1020]!	; 0x3fc
    2b7c:	ldmdbls	r6, {r1, r5, r9, sl, lr}
    2b80:			; <UNDEFINED> instruction: 0xf0034628
    2b84:	tstcs	r2, r3, ror sp	; <UNPREDICTABLE>
    2b88:	ldmdals	r0, {r0, r2, r9, sl, lr}
    2b8c:	ldc	7, cr15, [sl, #-1020]	; 0xfffffc04
    2b90:	ldmdals	r1, {r1, r8, sp}
    2b94:	ldc	7, cr15, [r6, #-1020]	; 0xfffffc04
    2b98:			; <UNDEFINED> instruction: 0xf7ff9810
    2b9c:	ldmdals	r1, {r3, r5, r8, sl, fp, sp, lr, pc}
    2ba0:	stc	7, cr15, [r4, #-1020]!	; 0xfffffc04
    2ba4:	ldrbcc	pc, [r0], #-2271	; 0xfffff721	; <UNPREDICTABLE>
    2ba8:			; <UNDEFINED> instruction: 0xf8d3447b
    2bac:	blcs	f424 <error@@Base+0x27c8>
    2bb0:	orrshi	pc, lr, r0, asr #32
    2bb4:	strbmi	pc, [r4], #-2271	; 0xfffff721	; <UNPREDICTABLE>
    2bb8:	and	r4, r8, ip, ror r4
    2bbc:	blcs	5cc50 <strvisx@@Base+0x48edc>
    2bc0:			; <UNDEFINED> instruction: 0xf7ffdd0c
    2bc4:	stmdavs	r0, {r1, r2, r3, r4, r7, r9, sl, fp, sp, lr, pc}
    2bc8:			; <UNDEFINED> instruction: 0xf0402804
    2bcc:	andcs	r8, r0, #-2147483611	; 0x80000025
    2bd0:	ldrmi	r6, [r1], -r0, lsr #16
    2bd4:	ldc	7, cr15, [r8], #1020	; 0x3fc
    2bd8:	rscle	r3, pc, r1
    2bdc:	svclt	0x00181e28
    2be0:			; <UNDEFINED> instruction: 0xf7ff2001
    2be4:			; <UNDEFINED> instruction: 0xf8dfee82
    2be8:	andscs	r3, r1, #8, 8	; 0x8000000
    2bec:	ldreq	pc, [r0], #-2271	; 0xfffff721
    2bf0:			; <UNDEFINED> instruction: 0xf85b2101
    2bf4:	ldrbtmi	r3, [r8], #-3
    2bf8:			; <UNDEFINED> instruction: 0xf7ff681b
    2bfc:			; <UNDEFINED> instruction: 0xf000ecfe
    2c00:	blls	181df4 <strvisx@@Base+0x16e080>
    2c04:			; <UNDEFINED> instruction: 0xf0002b00
    2c08:			; <UNDEFINED> instruction: 0xf04f80ee
    2c0c:	ldr	r0, [r0, -r1, lsl #18]
    2c10:	blcs	a9828 <strvisx@@Base+0x95ab4>
    2c14:	sbcshi	pc, ip, r0, asr #6
    2c18:	tstcs	r1, r4, lsl #16
    2c1c:			; <UNDEFINED> instruction: 0xf898f012
    2c20:	str	r9, [r6, -r4]
    2c24:			; <UNDEFINED> instruction: 0xf85b4bf7
    2c28:	ldmdavs	fp, {r0, r1, ip, sp}
    2c2c:	str	r9, [r0, -r5, lsl #6]
    2c30:	movwcs	r9, #6669	; 0x1a0d
    2c34:	andscc	pc, r8, #12713984	; 0xc20000
    2c38:	ldmmi	r3!, {r0, r1, r3, r4, r5, r6, r7, r9, sl, sp, lr, pc}^
    2c3c:	blmi	ffccb608 <strvisx@@Base+0xffcb7894>
    2c40:	ldrbtmi	r2, [r8], #-1793	; 0xfffff8ff
    2c44:	ldrbtmi	r4, [fp], #-2546	; 0xfffff60e
    2c48:	andvc	pc, ip, #192, 16	; 0xc00000
    2c4c:	andcs	r4, r0, r9, ror r4
    2c50:			; <UNDEFINED> instruction: 0x46306058
    2c54:			; <UNDEFINED> instruction: 0xf8a2f00b
    2c58:	movwls	r2, #25346	; 0x6302
    2c5c:	blmi	ffb7c808 <strvisx@@Base+0xffb68a94>
    2c60:	ldrbtmi	r2, [fp], #-513	; 0xfffffdff
    2c64:	andscs	pc, r0, #12779520	; 0xc30000
    2c68:	blmi	ff9bc7fc <strvisx@@Base+0xff9a8a88>
    2c6c:	sbcvs	pc, r8, pc, asr #32
    2c70:	andcs	r2, r1, #0, 2
    2c74:	andvc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    2c78:	stmib	sp, {r0, r1, r2, r4, r8, r9, fp, sp, pc}^
    2c7c:	movwls	r0, #8448	; 0x2100
    2c80:	ldmdavs	r8!, {r8, r9, sp}
    2c84:	stc2l	0, cr15, [r2, #-64]	; 0xffffffc0
    2c88:	blcs	298ec <strvisx@@Base+0x15b78>
    2c8c:	vst4.32	{d29,d31,d33,d35}, [pc :256], r7
    2c90:	movwcs	r6, #640	; 0x280
    2c94:			; <UNDEFINED> instruction: 0xf8caf012
    2c98:	smlabteq	r9, sp, r9, lr
    2c9c:	blmi	ff7bc7c8 <strvisx@@Base+0xff7a8a54>
    2ca0:	ldrbtmi	r2, [fp], #-513	; 0xfffffdff
    2ca4:	andscs	pc, r4, #12779520	; 0xc30000
    2ca8:	blmi	ff73c7bc <strvisx@@Base+0xff728a48>
    2cac:			; <UNDEFINED> instruction: 0xf8d3447b
    2cb0:	blcs	f528 <error@@Base+0x28cc>
    2cb4:	cmphi	pc, r0, asr #32	; <UNPREDICTABLE>
    2cb8:	ldmibmi	r9, {r1, r4, r6, r7, r8, r9, fp, lr}^
    2cbc:	andcc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    2cc0:	ldmdavs	pc, {r0, r3, r4, r5, r6, sl, lr}	; <UNPREDICTABLE>
    2cc4:	ldrtmi	r9, [r8], -pc, lsl #6
    2cc8:	mcr	7, 0, pc, cr8, cr15, {7}	; <UNPREDICTABLE>
    2ccc:	ldmibmi	r5, {r3, r6, r8, ip, sp, pc}^
    2cd0:	ldrbtmi	r4, [r9], #-1592	; 0xfffff9c8
    2cd4:	stc	7, cr15, [r4], {255}	; 0xff
    2cd8:	andsvs	r9, r8, lr, lsl #22
    2cdc:			; <UNDEFINED> instruction: 0xf0002800
    2ce0:	bmi	ff4630d4 <strvisx@@Base+0xff44f360>
    2ce4:	blmi	ff44b0ec <strvisx@@Base+0xff437378>
    2ce8:	ldrbtmi	r4, [sl], #-1584	; 0xfffff9d0
    2cec:	subsvs	r4, r1, fp, ror r4
    2cf0:	stmibmi	pc, {r0, r9, sp}^	; <UNPREDICTABLE>
    2cf4:	andscs	pc, ip, #12779520	; 0xc30000
    2cf8:			; <UNDEFINED> instruction: 0xf8c34479
    2cfc:			; <UNDEFINED> instruction: 0xf00b220c
    2d00:	ldr	pc, [r6], sp, asr #16
    2d04:	andcs	r4, r1, #207872	; 0x32c00
    2d08:			; <UNDEFINED> instruction: 0xf8c3447b
    2d0c:	ldr	r2, [r0], r8, lsl #4
    2d10:	strmi	r4, [r2], -r9, asr #19
    2d14:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    2d18:			; <UNDEFINED> instruction: 0xf840f00b
    2d1c:	stmibmi	r7, {r0, r3, r4, r5, r7, r8, r9, fp, lr}^
    2d20:			; <UNDEFINED> instruction: 0xf85b4630
    2d24:	ldrbtmi	r3, [r9], #-3
    2d28:			; <UNDEFINED> instruction: 0xf00b681a
    2d2c:			; <UNDEFINED> instruction: 0xe680f837
    2d30:			; <UNDEFINED> instruction: 0xf85b4bb4
    2d34:			; <UNDEFINED> instruction: 0xf8d33003
    2d38:	ldrbt	r8, [sl], -r0
    2d3c:	ldmdbge	r5, {r0, r4, r5, r7, r8, r9, fp, lr}
    2d40:			; <UNDEFINED> instruction: 0xf85b220a
    2d44:	ldmdavs	r8!, {r0, r1, ip, sp, lr}
    2d48:	bl	ffe40d4c <strvisx@@Base+0xffe2cfd8>
    2d4c:			; <UNDEFINED> instruction: 0xb1209008
    2d50:	ldmdavc	fp, {r0, r2, r4, r8, r9, fp, ip, pc}
    2d54:			; <UNDEFINED> instruction: 0xf43f2b00
    2d58:	ldmmi	r9!, {r2, r3, r5, r6, r9, sl, fp, sp, pc}
    2d5c:	ldrbtmi	r6, [r8], #-2105	; 0xfffff7c7
    2d60:	stc2l	0, cr15, [r0], {9}
    2d64:			; <UNDEFINED> instruction: 0x460249b7
    2d68:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    2d6c:			; <UNDEFINED> instruction: 0xf816f00b
    2d70:	blmi	fe93c6f4 <strvisx@@Base+0xfe928980>
    2d74:	andcs	sl, sl, #344064	; 0x54000
    2d78:	andvc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    2d7c:			; <UNDEFINED> instruction: 0xf7ff6838
    2d80:	ldrdls	lr, [r7], -lr	; <UNPREDICTABLE>
    2d84:	blls	56f20c <strvisx@@Base+0x55b498>
    2d88:	blcs	20dfc <strvisx@@Base+0xd088>
    2d8c:	mrcge	4, 2, APSR_nzcv, cr1, cr15, {1}
    2d90:	ldmdavs	r9!, {r0, r2, r3, r5, r7, fp, lr}
    2d94:			; <UNDEFINED> instruction: 0xf0094478
    2d98:	blmi	fe6c2034 <strvisx@@Base+0xfe6ae2c0>
    2d9c:	andvc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    2da0:			; <UNDEFINED> instruction: 0xf00a6838
    2da4:	cdpne	13, 0, cr15, cr3, cr3, {0}
    2da8:			; <UNDEFINED> instruction: 0xf73f930b
    2dac:	stmiami	r7!, {r1, r6, r9, sl, fp, sp, pc}
    2db0:	ldrbtmi	r6, [r8], #-2105	; 0xfffff7c7
    2db4:	ldc2	0, cr15, [r6], {9}
    2db8:			; <UNDEFINED> instruction: 0x21004b92
    2dbc:	ldrtmi	r9, [r0], -ip, lsl #20
    2dc0:	andcc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    2dc4:	mcr	8, 0, r6, cr8, cr11, {0}
    2dc8:			; <UNDEFINED> instruction: 0xf00b3a10
    2dcc:			; <UNDEFINED> instruction: 0xe630f835
    2dd0:			; <UNDEFINED> instruction: 0x4630499f
    2dd4:			; <UNDEFINED> instruction: 0xf00a4479
    2dd8:	stmdals	r4, {r0, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
    2ddc:			; <UNDEFINED> instruction: 0xf0112105
    2de0:			; <UNDEFINED> instruction: 0x9006ffb7
    2de4:	blmi	fe6fca4c <strvisx@@Base+0xfe6e8cd8>
    2de8:	stmdbeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    2dec:	movwls	r4, #21627	; 0x547b
    2df0:	blmi	fe67c674 <strvisx@@Base+0xfe668900>
    2df4:	andcc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    2df8:	adcmi	r6, r5, #1900544	; 0x1d0000
    2dfc:	mrcge	4, 7, APSR_nzcv, cr15, cr15, {1}
    2e00:	strtmi	r2, [r8], -r2, lsl #2
    2e04:			; <UNDEFINED> instruction: 0xffa4f011
    2e08:			; <UNDEFINED> instruction: 0xf6ff42a0
    2e0c:	blge	5ae9f4 <strvisx@@Base+0x59ac80>
    2e10:	ldcge	8, cr4, [r3], {146}	; 0x92
    2e14:	sadd16mi	sl, r9, r4
    2e18:	tstls	r1, r6, lsl #6
    2e1c:	bl	294004 <strvisx@@Base+0x280290>
    2e20:	strtmi	r0, [r3], -r5, lsl #3
    2e24:	ldrtmi	r9, [sl], -r4, lsl #2
    2e28:	tstls	r0, r2, lsl r9
    2e2c:	eorne	pc, r5, sl, asr r8	; <UNPREDICTABLE>
    2e30:	ldc2l	0, cr15, [r0, #-48]!	; 0xffffffd0
    2e34:			; <UNDEFINED> instruction: 0xf43f1c41
    2e38:	stmdacs	r0, {r1, r5, r6, r7, r9, sl, fp, sp, pc}
    2e3c:	blls	4b73e4 <strvisx@@Base+0x4a3670>
    2e40:	rsbsle	r1, sp, sl, asr ip
    2e44:	ldmdavc	r2, {r0, r1, r4, r9, fp, ip, pc}
    2e48:			; <UNDEFINED> instruction: 0xf43f2a00
    2e4c:	bls	12e984 <strvisx@@Base+0x11ac10>
    2e50:	ldmdavs	r4, {r0, r1, r3, r8, r9, ip, pc}^
    2e54:	ldrtmi	r4, [r0], -r2, lsl #19
    2e58:	ldrbtmi	r9, [r9], #-2571	; 0xfffff5f5
    2e5c:			; <UNDEFINED> instruction: 0xff9ef00a
    2e60:	cmplt	r3, r4, lsl fp
    2e64:			; <UNDEFINED> instruction: 0x4630497f
    2e68:			; <UNDEFINED> instruction: 0xf00a4479
    2e6c:	ldmdbmi	lr!, {r0, r1, r2, r4, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
    2e70:			; <UNDEFINED> instruction: 0x46309a14
    2e74:			; <UNDEFINED> instruction: 0xf00a4479
    2e78:	ldmdbmi	ip!, {r0, r4, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
    2e7c:	ldrtmi	r4, [r0], -sl, asr #12
    2e80:			; <UNDEFINED> instruction: 0xf00a4479
    2e84:	blls	182cb8 <strvisx@@Base+0x16ef44>
    2e88:	rsble	r2, r8, r0, lsl #22
    2e8c:	ldrmi	r2, [r8], -pc, lsr #2
    2e90:	b	bc0e94 <strvisx@@Base+0xbad120>
    2e94:	rsbsle	r2, r6, r0, lsl #16
    2e98:			; <UNDEFINED> instruction: 0x46304975
    2e9c:			; <UNDEFINED> instruction: 0xf00a4479
    2ea0:	ldmdbmi	r4!, {r0, r2, r3, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr, pc}^
    2ea4:			; <UNDEFINED> instruction: 0x46309a13
    2ea8:			; <UNDEFINED> instruction: 0xf00a4479
    2eac:	ldmdbmi	r2!, {r0, r1, r2, r4, r5, r6, r8, r9, sl, fp, ip, sp, lr, pc}^
    2eb0:	bls	154778 <strvisx@@Base+0x140a04>
    2eb4:			; <UNDEFINED> instruction: 0xf00a4479
    2eb8:	mrc	15, 0, APSR_nzcv, cr8, cr1, {3}
    2ebc:	ldmdbls	r8, {r4, r9, fp}
    2ec0:	bge	42db0c <strvisx@@Base+0x419d98>
    2ec4:	blx	cbeece <strvisx@@Base+0xcab15a>
    2ec8:	bmi	1b3c794 <strvisx@@Base+0x1b28a20>
    2ecc:	blls	4cb2d8 <strvisx@@Base+0x4b7564>
    2ed0:			; <UNDEFINED> instruction: 0xf7ff447a
    2ed4:			; <UNDEFINED> instruction: 0xe651ebf4
    2ed8:	ldc	7, cr15, [r2, #-1020]	; 0xfffffc04
    2edc:			; <UNDEFINED> instruction: 0xf7ff6800
    2ee0:	blls	3fd510 <strvisx@@Base+0x3e979c>
    2ee4:			; <UNDEFINED> instruction: 0x4601681a
    2ee8:	ldrbtmi	r4, [r8], #-2149	; 0xfffff79b
    2eec:	blx	ffebef1a <strvisx@@Base+0xffeab1a6>
    2ef0:	ldmdavs	r8, {r1, r2, r3, r8, r9, fp, ip, pc}
    2ef4:	stmib	r4!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    2ef8:			; <UNDEFINED> instruction: 0xf7ffe65c
    2efc:			; <UNDEFINED> instruction: 0x4601e97c
    2f00:	ldrbtmi	r4, [r8], #-2144	; 0xfffff7a0
    2f04:	blx	ffbbef32 <strvisx@@Base+0xffbab1be>
    2f08:	ldrbtmi	r4, [r8], #-2143	; 0xfffff7a1
    2f0c:	blx	ffabef3a <strvisx@@Base+0xffaab1c6>
    2f10:	strtmi	r9, [r2], -r6, lsl #22
    2f14:	eoreq	pc, r5, sl, asr r8	; <UNPREDICTABLE>
    2f18:			; <UNDEFINED> instruction: 0xf00a4639
    2f1c:	cmnlt	r8, fp, asr lr	; <UNPREDICTABLE>
    2f20:	eoreq	pc, r5, sl, asr r8	; <UNPREDICTABLE>
    2f24:	ldrtmi	r4, [r9], -r2, lsr #12
    2f28:			; <UNDEFINED> instruction: 0xf00a4643
    2f2c:	teqlt	r8, r7	; <illegal shifter operand>	; <UNPREDICTABLE>
    2f30:	eoreq	pc, r5, sl, asr r8	; <UNPREDICTABLE>
    2f34:			; <UNDEFINED> instruction: 0xf826f00a
    2f38:			; <UNDEFINED> instruction: 0xf00a9013
    2f3c:	andsls	pc, r3, pc, lsl #28
    2f40:	ldmdavc	fp, {r0, r1, r4, r8, r9, fp, ip, pc}
    2f44:			; <UNDEFINED> instruction: 0xf43f2b00
    2f48:	blls	12e888 <strvisx@@Base+0x11ab14>
    2f4c:	blls	2dd0c4 <strvisx@@Base+0x2c9350>
    2f50:	addle	r3, r5, r1, lsl #6
    2f54:	stmdami	sp, {r1, r2, r3, r4, r5, r6, r8, r9, sl, sp, lr, pc}^
    2f58:			; <UNDEFINED> instruction: 0xf0094478
    2f5c:	stmdbmi	ip, {r0, r1, r6, r7, r8, r9, fp, ip, sp, lr, pc}^
    2f60:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    2f64:			; <UNDEFINED> instruction: 0xff1af00a
    2f68:	blmi	12d5498 <strvisx@@Base+0x12c1724>
    2f6c:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    2f70:	movwls	r4, #21627	; 0x547b
    2f74:			; <UNDEFINED> instruction: 0xff12f00a
    2f78:	bls	4d54a0 <strvisx@@Base+0x4c172c>
    2f7c:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    2f80:			; <UNDEFINED> instruction: 0xff0cf00a
    2f84:	stmdbmi	r6, {r0, r1, r4, r7, r8, r9, sl, sp, lr, pc}^
    2f88:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    2f8c:			; <UNDEFINED> instruction: 0xff06f00a
    2f90:	ldrtmi	r4, [r0], -r4, asr #18
    2f94:			; <UNDEFINED> instruction: 0xf00a4479
    2f98:	stmdbmi	r3, {r0, r8, r9, sl, fp, ip, sp, lr, pc}^
    2f9c:			; <UNDEFINED> instruction: 0x46309a13
    2fa0:			; <UNDEFINED> instruction: 0xf00a4479
    2fa4:			; <UNDEFINED> instruction: 0xe782fefb
    2fa8:	andeq	r7, r2, r0, lsr #7
    2fac:	andeq	r0, r0, r0, asr #5
    2fb0:	muleq	r2, r2, r3
    2fb4:	andeq	r0, r0, r0, lsl #5
    2fb8:	andeq	r3, r1, lr, lsl #19
    2fbc:	andeq	r4, r1, ip, lsl sl
    2fc0:	andeq	r3, r1, r4, lsl #19
    2fc4:	andeq	r3, r1, r6, lsl #19
    2fc8:	andeq	r3, r1, ip, lsl #19
    2fcc:	andeq	r3, r1, r0, lsr #20
    2fd0:	muleq	r1, r2, r9
    2fd4:	andeq	r0, r0, r8, asr #5
    2fd8:	andeq	r0, r0, r4, asr #5
    2fdc:	muleq	r1, ip, r9
    2fe0:	andeq	r7, r2, sl, lsr #13
    2fe4:	andeq	r7, r2, ip, lsl #10
    2fe8:	andeq	r3, r1, r4, ror r9
    2fec:	andeq	r7, r2, r4, lsl #11
    2ff0:	andeq	r0, r0, r4, ror #5
    2ff4:	andeq	r3, r1, r6, ror #18
    2ff8:	andeq	r7, r2, r0, lsr r5
    2ffc:	andeq	r7, r2, ip, asr #8
    3000:	andeq	r3, r1, r6, ror #16
    3004:	andeq	r0, r0, r4, lsr #5
    3008:	muleq	r2, r6, r4
    300c:			; <UNDEFINED> instruction: 0x000273be
    3010:	andeq	r3, r1, r4, asr r7
    3014:	andeq	r7, r2, r6, ror r4
    3018:	andeq	r7, r2, r6, lsr r4
    301c:	andeq	r7, r2, ip, lsr #8
    3020:	andeq	r3, r1, r4, lsr r7
    3024:			; <UNDEFINED> instruction: 0x000151b6
    3028:	andeq	r7, r2, sl, lsl r3
    302c:	andeq	r7, r2, ip, ror #7
    3030:	andeq	r3, r1, ip, lsl #14
    3034:	ldrdeq	r7, [r2], -r0
    3038:	andeq	r3, r1, sl, lsl #13
    303c:	muleq	r1, sl, r6
    3040:	andeq	r3, r1, sl, asr r6
    3044:	andeq	r3, r1, r6, lsr r6
    3048:	andeq	r3, r1, r0, lsl #13
    304c:	strdeq	r3, [r1], -r2
    3050:	andeq	r3, r1, r0, ror #11
    3054:	andeq	r3, r1, r4, lsr #10
    3058:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    305c:	andeq	r3, r1, r4, lsr #10
    3060:	andeq	r3, r1, r6, lsl r6
    3064:	andeq	r3, r1, r4, lsl r6
    3068:	andeq	r4, r1, ip, asr #10
    306c:	andeq	r3, r1, r0, lsl #12
    3070:	andeq	r3, r1, r8, ror r6
    3074:	andeq	r4, r1, r8, lsl r5
    3078:	andeq	r4, r1, ip, lsl #10
    307c:	strdeq	r3, [r1], -r8
    3080:	andeq	r3, r1, lr, lsl #10
    3084:	andeq	r3, r1, lr, ror #11
    3088:	muleq	r1, r2, r5
    308c:	andeq	r3, r1, ip, ror r4
    3090:			; <UNDEFINED> instruction: 0x000135b6
    3094:	andeq	r3, r1, r6, lsr #11
    3098:	ldrdeq	r3, [r1], -r0
    309c:	andeq	r4, r1, r2, asr #8
    30a0:	andeq	r3, r1, lr, lsl #11
    30a4:	andeq	r3, r1, r0, lsl #11
    30a8:	andeq	r4, r1, r0, lsr #8
    30ac:	bleq	3f1f0 <strvisx@@Base+0x2b47c>
    30b0:	cdpeq	0, 0, cr15, cr0, cr15, {2}
    30b4:	strbtmi	fp, [sl], -r2, lsl #24
    30b8:	strlt	fp, [r1], #-1028	; 0xfffffbfc
    30bc:	ldrdge	pc, [r4], -pc	; <UNPREDICTABLE>
    30c0:	ldrmi	sl, [sl], #776	; 0x308
    30c4:	ldrdgt	pc, [r0], -pc	; <UNPREDICTABLE>
    30c8:	andgt	pc, ip, sl, asr r8	; <UNPREDICTABLE>
    30cc:	stcgt	8, cr15, [r4, #-308]	; 0xfffffecc
    30d0:			; <UNDEFINED> instruction: 0xf85a4b06
    30d4:	stmdami	r6, {r0, r1, ip, sp}
    30d8:	andeq	pc, r0, sl, asr r8	; <UNPREDICTABLE>
    30dc:	stmia	ip, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    30e0:	stmia	r6!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    30e4:	andeq	r6, r2, r0, lsr #24
    30e8:	andeq	r0, r0, r8, ror r2
    30ec:			; <UNDEFINED> instruction: 0x000002bc
    30f0:	strdeq	r0, [r0], -r8
    30f4:	ldr	r3, [pc, #20]	; 3110 <el_source@plt+0x7d4>
    30f8:	ldr	r2, [pc, #20]	; 3114 <el_source@plt+0x7d8>
    30fc:	add	r3, pc, r3
    3100:	ldr	r2, [r3, r2]
    3104:	cmp	r2, #0
    3108:	bxeq	lr
    310c:	b	2290 <__gmon_start__@plt>
    3110:	andeq	r6, r2, r0, lsl #24
    3114:	andeq	r0, r0, r8, lsl #5
    3118:	blmi	1d5138 <strvisx@@Base+0x1c13c4>
    311c:	bmi	1d4304 <strvisx@@Base+0x1c0590>
    3120:	addmi	r4, r3, #2063597568	; 0x7b000000
    3124:	andle	r4, r3, sl, ror r4
    3128:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
    312c:	ldrmi	fp, [r8, -r3, lsl #2]
    3130:	svclt	0x00004770
    3134:			; <UNDEFINED> instruction: 0x00026fb8
    3138:			; <UNDEFINED> instruction: 0x00026fb4
    313c:	ldrdeq	r6, [r2], -ip
    3140:	muleq	r0, r4, r2
    3144:	stmdbmi	r9, {r3, fp, lr}
    3148:	bmi	254330 <strvisx@@Base+0x2405bc>
    314c:	bne	254338 <strvisx@@Base+0x2405c4>
    3150:	svceq	0x00cb447a
    3154:			; <UNDEFINED> instruction: 0x01a1eb03
    3158:	andle	r1, r3, r9, asr #32
    315c:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
    3160:	ldrmi	fp, [r8, -r3, lsl #2]
    3164:	svclt	0x00004770
    3168:	andeq	r6, r2, ip, lsl #31
    316c:	andeq	r6, r2, r8, lsl #31
    3170:			; <UNDEFINED> instruction: 0x00026bb0
    3174:	andeq	r0, r0, r8, lsr #5
    3178:	blmi	2b05a0 <strvisx@@Base+0x29c82c>
    317c:	ldrbtmi	r4, [fp], #-2570	; 0xfffff5f6
    3180:	ldmdavc	fp, {r1, r3, r4, r5, r6, sl, lr}
    3184:	blmi	271738 <strvisx@@Base+0x25d9c4>
    3188:	ldrdlt	r5, [r3, -r3]!
    318c:	ldrbtmi	r4, [fp], #-2824	; 0xfffff4f8
    3190:			; <UNDEFINED> instruction: 0xf7ff6818
    3194:			; <UNDEFINED> instruction: 0xf7ffebbc
    3198:	blmi	1c309c <strvisx@@Base+0x1af328>
    319c:	ldrbtmi	r2, [fp], #-513	; 0xfffffdff
    31a0:	stclt	0, cr7, [r8, #-104]	; 0xffffff98
    31a4:	andeq	r6, r2, r6, asr pc
    31a8:	andeq	r6, r2, r0, lsl #23
    31ac:	strdeq	r0, [r0], -r4
    31b0:	andeq	r6, r2, r2, ror lr
    31b4:	andeq	r6, r2, r6, lsr pc
    31b8:	svclt	0x0000e7c4
    31bc:	biclt	r7, r2, #131072	; 0x20000
    31c0:	ldrblt	r2, [r0, #768]!	; 0x300
    31c4:	cdpeq	0, 5, cr15, cr12, cr15, {2}
    31c8:	bcs	1714a48 <strvisx@@Base+0x1700cd4>
    31cc:	tsteq	r1, r6, lsl #2	; <UNPREDICTABLE>
    31d0:	streq	pc, [r1, #-259]	; 0xfffffefd
    31d4:	streq	lr, [r1], #-2816	; 0xfffff500
    31d8:			; <UNDEFINED> instruction: 0x0c05eb00
    31dc:	streq	lr, [r3, -r0, lsl #22]
    31e0:	strbpl	sp, [r2], #9
    31e4:	strtmi	r4, [fp], -lr, lsl #12
    31e8:	bcs	21278 <strvisx@@Base+0xd504>
    31ec:	movwcs	sp, #493	; 0x1ed
    31f0:	andcc	pc, r0, ip, lsl #17
    31f4:	mcrrpl	13, 15, fp, r4, cr0
    31f8:	andle	r2, fp, sl, lsr #24
    31fc:	ldmdblt	r4!, {r2, fp, ip, lr, pc}^
    3200:			; <UNDEFINED> instruction: 0xf88c703a
    3204:	ldcllt	0, cr4, [r0]
    3208:	andle	r2, r3, pc, lsr ip
    320c:	subseq	pc, fp, #164, 2	; 0x29
    3210:	stmdale	r4, {r0, r9, fp, sp}
    3214:	eorsvc	r3, ip, r2, lsl #12
    3218:	stmibne	r4, {r0, r1, r3, r5, r9, sl, lr}
    321c:			; <UNDEFINED> instruction: 0xf887e7e4
    3220:	strcc	lr, [r2], -r0
    3224:	movwcc	r5, #11330	; 0x2c42
    3228:	bl	9840 <el_source@plt+0x6f04>
    322c:	strbpl	r0, [r2, #-3075]	; 0xfffff3fd
    3230:	movwcs	lr, #2010	; 0x7da
    3234:	ldrbmi	r7, [r0, -r3]!
    3238:	ldrbtmi	r4, [r8], #-2049	; 0xfffff7ff
    323c:	svclt	0x00004770
    3240:	andeq	r1, r1, lr, lsr #29
    3244:	blmi	6f0a2c <strvisx@@Base+0x6dccb8>
    3248:	ldrbtmi	r4, [fp], #-2587	; 0xfffff5e5
    324c:	stmdavs	r9, {r2, fp, sp, lr}
    3250:	ldmdavs	fp, {r0, r1, r3, r4, r7, fp, ip, lr}
    3254:	svceq	0x0040f013
    3258:			; <UNDEFINED> instruction: 0xf04fbf14
    325c:	strcs	r3, [r1, #-1535]	; 0xfffffa01
    3260:	andeq	pc, r8, #19
    3264:			; <UNDEFINED> instruction: 0xf013d11a
    3268:	tstle	ip, r0, lsl r0
    326c:	ldrle	r0, [sp, #-1691]	; 0xfffff965
    3270:			; <UNDEFINED> instruction: 0x6704e9d4
    3274:	movwcs	lr, #18897	; 0x49d1
    3278:	svclt	0x0008429f
    327c:	mulle	r1, r6, r2
    3280:	andle	r4, r8, #40, 12	; 0x2800000
    3284:	bvs	fe832a6c <strvisx@@Base+0xfe81ecf8>
    3288:	addsmi	r6, r8, #569344	; 0x8b000
    328c:	ldrmi	fp, [r0], -r8, lsl #30
    3290:			; <UNDEFINED> instruction: 0x4628d0f8
    3294:			; <UNDEFINED> instruction: 0xf011d3f6
    3298:	ldcllt	14, cr15, [r8, #260]!	; 0x104
    329c:	stmdavs	r0!, {r0, r3, fp, sp, lr}
    32a0:	bl	7412a4 <strvisx@@Base+0x72d530>
    32a4:			; <UNDEFINED> instruction: 0xf0114629
    32a8:	ldcllt	13, cr15, [r8, #732]!	; 0x2dc
    32ac:	ldrbtmi	r4, [r8], #-2051	; 0xfffff7fd
    32b0:	blx	63f2dc <strvisx@@Base+0x62b568>
    32b4:			; <UNDEFINED> instruction: 0x00026ab6
    32b8:	andeq	r0, r0, ip, lsl #5
    32bc:	andeq	r1, r1, r2, asr #28
    32c0:	blmi	9f0aa8 <strvisx@@Base+0x9dcd34>
    32c4:	ldrbtmi	r4, [fp], #-3111	; 0xfffff3d9
    32c8:	stmdavs	r0, {r0, r1, r2, r5, r9, fp, lr}
    32cc:	ldmpl	ip, {r0, r2, r3, r4, r8, fp, ip, lr}
    32d0:	stmdavs	fp!, {r1, r3, fp, sp, lr}
    32d4:			; <UNDEFINED> instruction: 0xf0136821
    32d8:	svclt	0x00140f40
    32dc:	ldrbtcc	pc, [pc], #79	; 32e4 <el_source@plt+0x9a8>	; <UNPREDICTABLE>
    32e0:	ldreq	r2, [sp, -r1, lsl #8]
    32e4:	stmdbvs	r9, {r1, r5, sl, ip, lr, pc}^
    32e8:	eorpl	pc, r0, r1, asr r8	; <UNPREDICTABLE>
    32ec:	andseq	pc, r0, r3, lsl r0	; <UNPREDICTABLE>
    32f0:	eorcs	pc, r2, r1, asr r8	; <UNPREDICTABLE>
    32f4:	ldreq	sp, [fp], pc, lsl #2
    32f8:	ldmib	r5, {r0, r2, r3, r5, r8, sl, ip, lr, pc}^
    32fc:	ldmib	r2, {r2, r3, r8, r9, sl, sp, lr}^
    3300:	addsmi	r2, pc, #12, 6	; 0x30000000
    3304:	addsmi	fp, r6, #8, 30
    3308:	addsmi	sp, r6, #4
    330c:	bl	1dd4b94 <strvisx@@Base+0x1dc0e20>
    3310:	ble	583f24 <strvisx@@Base+0x5701b0>
    3314:	stcvs	13, cr11, [r9, #-992]!	; 0xfffffc20
    3318:	addsmi	r6, r9, #1216	; 0x4c0
    331c:	svclt	0x00b4d014
    3320:	tstcs	r0, r1, lsl #2
    3324:			; <UNDEFINED> instruction: 0xf0114620
    3328:	ldcllt	13, cr15, [r8, #476]!	; 0x1dc
    332c:			; <UNDEFINED> instruction: 0xf853690b
    3330:			; <UNDEFINED> instruction: 0xf8531022
    3334:			; <UNDEFINED> instruction: 0xf7ff0020
    3338:			; <UNDEFINED> instruction: 0x4621ead2
    333c:	stc2l	0, cr15, [ip, #-68]!	; 0xffffffbc
    3340:			; <UNDEFINED> instruction: 0xf011bdf8
    3344:	ldcllt	13, cr15, [r8, #940]!	; 0x3ac
    3348:	ldclvs	13, cr6, [r3, #-420]	; 0xfffffe5c
    334c:	svclt	0x00ac4299
    3350:	mrscs	r2, (UNDEF: 17)
    3354:	stmdami	r5, {r1, r2, r5, r6, r7, r8, r9, sl, sp, lr, pc}
    3358:			; <UNDEFINED> instruction: 0xf0094478
    335c:	svclt	0x0000f9c3
    3360:	andeq	r6, r2, sl, lsr sl
    3364:	andeq	r0, r0, ip, lsl #5
    3368:	andeq	r0, r0, r4, lsl #5
    336c:	muleq	r1, r8, sp
    3370:	blmi	915c04 <strvisx@@Base+0x901e90>
    3374:	push	{r1, r3, r4, r5, r6, sl, lr}
    3378:	strdlt	r4, [r9], r0
    337c:			; <UNDEFINED> instruction: 0xf10d58d3
    3380:	stcmi	8, cr0, [r1, #-16]!
    3384:	movwls	r6, #30747	; 0x781b
    3388:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    338c:	b	fee41390 <strvisx@@Base+0xfee2d61c>
    3390:	svcmi	0x001e447d
    3394:	ldrbtmi	r4, [pc], #-1604	; 339c <el_source@plt+0xa60>
    3398:	ldrdls	pc, [r0], -r0
    339c:	stcgt	6, cr4, [pc, #-24]	; 338c <el_source@plt+0xa50>
    33a0:	ldm	r5, {r0, r1, r2, r3, sl, lr, pc}
    33a4:			; <UNDEFINED> instruction: 0xf8440003
    33a8:			; <UNDEFINED> instruction: 0x0c0b0b04
    33ac:	blne	c1444 <strvisx@@Base+0xad6d0>
    33b0:	ldmdavs	r8!, {r0, r1, r5, ip, sp, lr}
    33b4:	tstcs	r0, r1, lsl #4
    33b8:	stmia	r6, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    33bc:	tstle	r2, r3, asr #24
    33c0:	blcs	11d494 <strvisx@@Base+0x109720>
    33c4:	ldcmi	0, cr13, [r2], {245}	; 0xf5
    33c8:	stmdavs	r3!, {r2, r3, r4, r5, r6, sl, lr}
    33cc:	mulle	ip, r8, r2
    33d0:	blmi	315c18 <strvisx@@Base+0x301ea4>
    33d4:			; <UNDEFINED> instruction: 0xf8c6447a
    33d8:	ldmpl	r3, {ip, pc}^
    33dc:	blls	1dd44c <strvisx@@Base+0x1c96d8>
    33e0:	qaddle	r4, sl, fp
    33e4:	pop	{r0, r3, ip, sp, pc}
    33e8:			; <UNDEFINED> instruction: 0x464183f0
    33ec:	andcs	r2, r2, r6, lsl r2
    33f0:	stmda	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    33f4:	mvnscc	pc, #79	; 0x4f
    33f8:	strb	r6, [r9, r3, lsr #32]!
    33fc:	stmdb	ip, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3400:	andeq	r6, r2, ip, lsl #19
    3404:	andeq	r0, r0, r0, asr #5
    3408:	andeq	r1, r1, r8, ror sp
    340c:	andeq	r6, r2, lr, ror #24
    3410:	andeq	r6, r2, ip, lsr ip
    3414:	andeq	r6, r2, ip, lsr #18
    3418:	bmi	555870 <strvisx@@Base+0x541afc>
    341c:	blmi	554608 <strvisx@@Base+0x540894>
    3420:	ldrbtmi	fp, [fp], #-1328	; 0xfffffad0
    3424:	addlt	r5, r7, sl, lsl #17
    3428:	ldmdavs	r2, {r0, sl, fp, sp, pc}
    342c:			; <UNDEFINED> instruction: 0xf04f9205
    3430:	blgt	3c3c38 <strvisx@@Base+0x3afec4>
    3434:	eorhi	ip, r3, r7, lsl #8
    3438:	b	18c143c <strvisx@@Base+0x18ad6c8>
    343c:	stmdbge	r1, {r0, r2, r3, r9, sp}
    3440:	andcs	r4, r2, r4, lsl #12
    3444:			; <UNDEFINED> instruction: 0xf7fe6825
    3448:	blmi	2ff3e0 <strvisx@@Base+0x2eb66c>
    344c:	ldrbtmi	r2, [fp], #-513	; 0xfffffdff
    3450:	bmi	29b4c0 <strvisx@@Base+0x28774c>
    3454:	ldrbtmi	r4, [sl], #-2822	; 0xfffff4fa
    3458:	ldmpl	r3, {r0, r2, r5, sp, lr}^
    345c:	blls	15d4cc <strvisx@@Base+0x149758>
    3460:	qaddle	r4, sl, r1
    3464:	ldclt	0, cr11, [r0, #-28]!	; 0xffffffe4
    3468:	ldmdb	r6, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    346c:	andeq	r6, r2, r4, ror #17
    3470:	andeq	r0, r0, r0, asr #5
    3474:	strdeq	r1, [r1], -lr
    3478:	andeq	r6, r2, sl, lsl #25
    347c:	andeq	r6, r2, sl, lsr #17
    3480:	ldrlt	r4, [r0, #-2824]	; 0xfffff4f8
    3484:	ldmdavs	ip, {r0, r1, r3, r4, r5, r6, sl, lr}
    3488:	stcle	12, cr2, [r8, #-4]
    348c:	strtmi	r2, [r0], -pc, lsl #2
    3490:	ldmib	sl, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3494:	strtmi	r2, [r0], -r0, lsl #4
    3498:			; <UNDEFINED> instruction: 0xf7ff4611
    349c:	andcs	lr, r1, r6, asr r8
    34a0:	svc	0x009cf7fe
    34a4:	andeq	r6, r2, r0, lsl #23
    34a8:	ldrlt	r4, [r0, #-2834]	; 0xfffff4ee
    34ac:	ldmdavs	sl, {r0, r1, r3, r4, r5, r6, sl, lr}
    34b0:			; <UNDEFINED> instruction: 0xdc062a01
    34b4:	ldmdb	r6, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    34b8:			; <UNDEFINED> instruction: 0x4010e8bd
    34bc:			; <UNDEFINED> instruction: 0xf7ff2113
    34c0:	strmi	fp, [r1], -r1, asr #19
    34c4:			; <UNDEFINED> instruction: 0x461c6818
    34c8:	ldmib	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    34cc:	andcs	r6, r2, #32, 16	; 0x200000
    34d0:			; <UNDEFINED> instruction: 0xf7ff2100
    34d4:	andcc	lr, r1, sl, lsr r8
    34d8:			; <UNDEFINED> instruction: 0xf7ffd1ec
    34dc:	stmdavs	r3, {r1, r4, r9, fp, sp, lr, pc}
    34e0:	rscsle	r2, r3, r4, lsl #22
    34e4:	ldmdb	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    34e8:			; <UNDEFINED> instruction: 0x4010e8bd
    34ec:			; <UNDEFINED> instruction: 0xf7ff2113
    34f0:	svclt	0x0000b9a9
    34f4:	andeq	r6, r2, r8, asr fp
    34f8:	tstcs	r1, r8, lsl #10
    34fc:			; <UNDEFINED> instruction: 0x4c084b07
    3500:	ldrbtmi	r4, [fp], #-2056	; 0xfffff7f8
    3504:	ldmdbpl	ip, {r3, r9, fp, lr}
    3508:	ldrbtmi	r5, [sl], #-2072	; 0xfffff7e8
    350c:	stmdavs	r0, {r0, r1, r5, fp, sp, lr}
    3510:	ldm	r4, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3514:			; <UNDEFINED> instruction: 0xf7ff2001
    3518:	svclt	0x0000e9e8
    351c:	strdeq	r6, [r2], -lr
    3520:	andeq	r0, r0, r0, lsl #5
    3524:	andeq	r0, r0, r4, ror #5
    3528:	andeq	r1, r1, r6, lsr #24
    352c:	ldrdgt	pc, [r8, pc]
    3530:	svcmi	0x00f0e92d
    3534:	svcmi	0x006144fc
    3538:	strmi	fp, [r8], r9, lsl #1
    353c:	strmi	r2, [r6], -r1, lsl #2
    3540:			; <UNDEFINED> instruction: 0xf85c4615
    3544:	ldrmi	r7, [ip], -r7
    3548:	blge	154d70 <strvisx@@Base+0x140ffc>
    354c:	ldmdavs	pc!, {r9, sp}	; <UNPREDICTABLE>
    3550:			; <UNDEFINED> instruction: 0xf04f9707
    3554:			; <UNDEFINED> instruction: 0xf7fe0700
    3558:			; <UNDEFINED> instruction: 0xf8dfeeae
    355c:	ldrbtmi	r9, [r9], #356	; 0x164
    3560:			; <UNDEFINED> instruction: 0xf0003001
    3564:	ldmib	sp, {r2, r3, r4, r7, pc}^
    3568:	eorvs	r3, r3, r5, lsl #14
    356c:			; <UNDEFINED> instruction: 0xf7ff602b
    3570:	blmi	153d9e0 <strvisx@@Base+0x1529c6c>
    3574:	andsvs	r4, r8, fp, ror r4
    3578:			; <UNDEFINED> instruction: 0xf0003001
    357c:			; <UNDEFINED> instruction: 0xf8d38086
    3580:			; <UNDEFINED> instruction: 0xf1baa000
    3584:	teqle	fp, r0, lsl #30
    3588:			; <UNDEFINED> instruction: 0x46384651
    358c:	ldm	r2, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3590:			; <UNDEFINED> instruction: 0xf7ff9003
    3594:	blls	fdc74 <strvisx@@Base+0xe9f00>
    3598:	strmi	r3, [r3], r1, lsl #6
    359c:	tstcs	r1, r3, rrx
    35a0:			; <UNDEFINED> instruction: 0xf7ff4638
    35a4:	andcc	lr, r1, r8, asr #17
    35a8:	stmdavs	r8!, {r0, r2, r3, r4, r6, ip, lr, pc}
    35ac:	ldmda	lr, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    35b0:			; <UNDEFINED> instruction: 0xf7ff6820
    35b4:			; <UNDEFINED> instruction: 0x4638e81c
    35b8:	ldmda	r8, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    35bc:			; <UNDEFINED> instruction: 0xf7ff4638
    35c0:	tstcs	r1, r6, lsl r8
    35c4:			; <UNDEFINED> instruction: 0xf00c2002
    35c8:			; <UNDEFINED> instruction: 0x4651fc75
    35cc:			; <UNDEFINED> instruction: 0xf00c200f
    35d0:			; <UNDEFINED> instruction: 0x4641fc71
    35d4:			; <UNDEFINED> instruction: 0xf7fe4630
    35d8:	blmi	eff140 <strvisx@@Base+0xeeb3cc>
    35dc:	ldrdeq	pc, [r0], -fp
    35e0:	andcc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    35e4:			; <UNDEFINED> instruction: 0xf7fe681c
    35e8:	bmi	e3ee08 <strvisx@@Base+0xe2b094>
    35ec:	tstcs	r1, r3, lsr r6
    35f0:	andls	r4, r0, sl, ror r4
    35f4:			; <UNDEFINED> instruction: 0xf7ff4620
    35f8:	andcs	lr, r1, r2, ror #16
    35fc:	mcr	7, 7, pc, cr14, cr14, {7}	; <UNPREDICTABLE>
    3600:	andcs	r4, pc, r3, lsr r9	; <UNPREDICTABLE>
    3604:	ldrbtmi	r4, [r9], #-3123	; 0xfffff3cd
    3608:	ldrbtmi	r9, [ip], #-259	; 0xfffffefd
    360c:	mrrc2	0, 0, pc, r2, cr12	; <UNPREDICTABLE>
    3610:	andcs	r9, r2, r3, lsl #18
    3614:	mcrr2	0, 0, pc, lr, cr12	; <UNPREDICTABLE>
    3618:	andcs	r9, r1, r3, lsl #18
    361c:	mcrr2	0, 0, pc, sl, cr12	; <UNPREDICTABLE>
    3620:	andscs	r4, r4, r1, lsr #12
    3624:			; <UNDEFINED> instruction: 0xf00c9403
    3628:	stmdbls	r3, {r0, r2, r6, sl, fp, ip, sp, lr, pc}
    362c:			; <UNDEFINED> instruction: 0xf00c2015
    3630:	stmdbls	r3, {r0, r6, sl, fp, ip, sp, lr, pc}
    3634:			; <UNDEFINED> instruction: 0xf00c2016
    3638:	stmdbmi	r7!, {r0, r2, r3, r4, r5, sl, fp, ip, sp, lr, pc}
    363c:	ldrbtmi	r2, [r9], #-17	; 0xffffffef
    3640:	ldc2	0, cr15, [r8], #-48	; 0xffffffd0
    3644:			; <UNDEFINED> instruction: 0xf7fe4638
    3648:			; <UNDEFINED> instruction: 0x4638efd2
    364c:	svc	0x00cef7fe
    3650:	blmi	695ee0 <strvisx@@Base+0x68216c>
    3654:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    3658:	blls	1dd6c8 <strvisx@@Base+0x1c9954>
    365c:	qsuble	r4, sl, r8
    3660:	pop	{r0, r3, ip, sp, pc}
    3664:	blmi	62762c <strvisx@@Base+0x6138b8>
    3668:	ldrdeq	pc, [r0], -fp
    366c:	andcc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    3670:			; <UNDEFINED> instruction: 0xf7fe681c
    3674:	bmi	6bed7c <strvisx@@Base+0x6ab008>
    3678:	ldrbtmi	r2, [sl], #-257	; 0xfffffeff
    367c:	strtmi	r4, [r0], -r3, lsl #12
    3680:	ldmda	ip, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    3684:			; <UNDEFINED> instruction: 0xf7fe2001
    3688:			; <UNDEFINED> instruction: 0xf7ffeeaa
    368c:	stmdavs	r0, {r1, r3, r4, r5, r8, fp, sp, lr, pc}
    3690:	ldc	7, cr15, [r0, #1016]!	; 0x3f8
    3694:	ldmdami	r3, {r0, r9, sl, lr}
    3698:			; <UNDEFINED> instruction: 0xf0094478
    369c:			; <UNDEFINED> instruction: 0xf7fff823
    36a0:	stmdavs	r0, {r4, r5, r8, fp, sp, lr, pc}
    36a4:	stc	7, cr15, [r6, #1016]!	; 0x3f8
    36a8:	stmdami	pc, {r0, r9, sl, lr}	; <UNPREDICTABLE>
    36ac:			; <UNDEFINED> instruction: 0xf0094478
    36b0:			; <UNDEFINED> instruction: 0xf7fef819
    36b4:	svclt	0x0000eff2
    36b8:	andeq	r6, r2, ip, asr #15
    36bc:	andeq	r0, r0, r0, asr #5
    36c0:	andeq	r6, r2, r2, lsr #15
    36c4:	muleq	r2, r0, sl
    36c8:	andeq	r0, r0, r4, ror #5
    36cc:	andeq	r1, r1, ip, lsl #25
    36d0:			; <UNDEFINED> instruction: 0xfffffe77
    36d4:			; <UNDEFINED> instruction: 0xfffffe9b
    36d8:			; <UNDEFINED> instruction: 0xfffffd2f
    36dc:	andeq	r6, r2, ip, lsr #13
    36e0:	strdeq	r1, [r1], -r6
    36e4:	andeq	r1, r1, ip, asr #23
    36e8:	andeq	r1, r1, r8, lsr #23
    36ec:	mvnsmi	lr, #737280	; 0xb4000
    36f0:	orrslt	r4, r0, #135266304	; 0x8100000
    36f4:			; <UNDEFINED> instruction: 0xf8d1b312
    36f8:	strmi	r8, [pc], -r0
    36fc:			; <UNDEFINED> instruction: 0xf7fe4640
    3700:	ldmdavs	sl!, {r4, r6, r7, r9, sl, fp, sp, lr, pc}^
    3704:			; <UNDEFINED> instruction: 0xb1a24606
    3708:	bcc	51320 <strvisx@@Base+0x3d5ac>
    370c:	mvnscc	pc, r8, lsl #2
    3710:	ldmdblt	lr, {r8, r9, sp}
    3714:	movwcc	lr, #4119	; 0x1017
    3718:			; <UNDEFINED> instruction: 0xd00642b3
    371c:	svcpl	0x0001f811
    3720:	svcmi	0x0001f812
    3724:	rscsle	r4, r6, r5, lsr #5
    3728:			; <UNDEFINED> instruction: 0xf857461e
    372c:	bcs	f344 <error@@Base+0x26e8>
    3730:	strbmi	sp, [r8], -fp, ror #3
    3734:	mrc	7, 5, APSR_nzcv, cr4, cr14, {7}
    3738:	movwle	r4, #37552	; 0x92b0
    373c:	pop	{r3, r6, r9, sl, lr}
    3740:			; <UNDEFINED> instruction: 0xf00943f8
    3744:			; <UNDEFINED> instruction: 0xf857bc1f
    3748:	blcs	13360 <setlogin@@Base+0x20a4>
    374c:	ldrb	sp, [r5, sp, ror #3]!
    3750:			; <UNDEFINED> instruction: 0xf0094640
    3754:	movwcs	pc, #3095	; 0xc17	; <UNPREDICTABLE>
    3758:	pop	{r0, r1, r7, r8, sl, ip, lr}
    375c:	svclt	0x000083f8
    3760:	svcmi	0x00f0e92d
    3764:	strmi	fp, [ip], -fp, lsl #1
    3768:			; <UNDEFINED> instruction: 0x91084698
    376c:	eorvs	r2, r1, r0, lsl #2
    3770:	andls	r4, r9, #6291456	; 0x600000
    3774:	mrc	7, 4, APSR_nzcv, cr4, cr14, {7}
    3778:	svcpl	0x0000f5b0
    377c:	teqhi	r7, r0, lsl #1	; <UNPREDICTABLE>
    3780:	tstlt	r3, r4, lsl fp
    3784:	movwcs	r9, #6676	; 0x1a14
    3788:			; <UNDEFINED> instruction: 0xf1b86013
    378c:	andle	r0, r2, r0, lsl #30
    3790:			; <UNDEFINED> instruction: 0xf8882300
    3794:	blmi	fea8f79c <strvisx@@Base+0xfea7ba28>
    3798:			; <UNDEFINED> instruction: 0xf8df4647
    379c:	ldrbtmi	r9, [fp], #-680	; 0xfffffd58
    37a0:			; <UNDEFINED> instruction: 0xf7fe9300
    37a4:	blmi	fea3f4e4 <strvisx@@Base+0xfea2b770>
    37a8:	ldrbtmi	r2, [r9], #256	; 0x100
    37ac:	movwls	r4, #5243	; 0x147b
    37b0:	strmi	r4, [sp], -r6, lsr #23
    37b4:	ldrbtmi	r4, [fp], #-1548	; 0xfffff9f4
    37b8:	blmi	fe9683cc <strvisx@@Base+0xfe954658>
    37bc:	movwls	r4, #17531	; 0x447b
    37c0:	ldrbtmi	r4, [fp], #-2980	; 0xfffff45c
    37c4:	blmi	fe9283d4 <strvisx@@Base+0xfe914660>
    37c8:	movwls	r4, #29819	; 0x747b
    37cc:	ldrbtmi	r4, [fp], #-2979	; 0xfffff45d
    37d0:	blmi	fe8e83ec <strvisx@@Base+0xfe8d4678>
    37d4:	movwls	r4, #25723	; 0x647b
    37d8:	strmi	r4, [r8], -r2, lsl #13
    37dc:	stmdbcs	r3, {r1, r3, sp, lr, pc}
    37e0:	tstlt	r9, r0, asr r0
    37e4:	ldrbtmi	r4, [fp], #-2975	; 0xfffff461
    37e8:	strcc	r5, [r1, #-1370]	; 0xfffffaa6
    37ec:			; <UNDEFINED> instruction: 0xf1042881
    37f0:	eorle	r0, r5, r1, lsl #8
    37f4:	bl	19acc4 <strvisx@@Base+0x186f50>
    37f8:			; <UNDEFINED> instruction: 0xf8da0c04
    37fc:			; <UNDEFINED> instruction: 0xf8333000
    3800:			; <UNDEFINED> instruction: 0xf4133012
    3804:	mvnle	r5, r0, lsl #30
    3808:	svclt	0x00182a27
    380c:	tstle	pc, r2, lsr #20
    3810:	svclt	0x00142a22
    3814:	movwcs	r2, #8961	; 0x2301
    3818:	cmple	r1, r0, lsl #18
    381c:	ldmibmi	r3, {r1, r4, r7, r9, fp, lr}
    3820:	bl	94a10 <strvisx@@Base+0x80c9c>
    3824:	ldrbtmi	r0, [r9], #-640	; 0xfffffd80
    3828:	subsvs	r4, r1, r9, lsr #8
    382c:	rsble	r2, sp, r0, lsl #30
    3830:	mulcs	r0, ip, r8
    3834:			; <UNDEFINED> instruction: 0xf1042881
    3838:	ldrmi	r0, [r9], -r1, lsl #8
    383c:	bicsle	r7, r9, sl, lsr r0
    3840:	ldrbtmi	r4, [r8], #-2187	; 0xfffff775
    3844:	blx	2bf870 <strvisx@@Base+0x2abafc>
    3848:	andlt	r2, fp, r0
    384c:	svchi	0x00f0e8bd
    3850:	eorsle	r2, r0, ip, asr sl
    3854:	subsle	r2, fp, r3, lsr #20
    3858:			; <UNDEFINED> instruction: 0xf0002a00
    385c:	stmdbcs	r0, {r4, r6, r7, pc}
    3860:	blls	f7ddc <strvisx@@Base+0xe4068>
    3864:	bl	ea07c <strvisx@@Base+0xd6308>
    3868:	stmiane	sl!, {r7, r8, r9}
    386c:	svccs	0x0000605a
    3870:	adchi	pc, r3, r0
    3874:	tstcs	r3, r9, lsr r0
    3878:	mulcs	r0, ip, r8
    387c:	ldrbpl	r9, [sl, #-2816]	; 0xfffff500
    3880:	ldr	r3, [r3, r1, lsl #10]!
    3884:			; <UNDEFINED> instruction: 0xf1054b7b
    3888:			; <UNDEFINED> instruction: 0xf04f0b01
    388c:	tstcs	r1, r0, lsl #16
    3890:			; <UNDEFINED> instruction: 0xf803447b
    3894:	ldrbmi	r8, [sp], -r5
    3898:	blx	16bf8e4 <strvisx@@Base+0x16abb70>
    389c:	str	r4, [r5, r1, asr #12]!
    38a0:	eorsle	r2, r3, r3, lsl #18
    38a4:	svclt	0x0008428b
    38a8:	addsle	r2, pc, r3, lsl #2
    38ac:	ldrbtmi	r4, [fp], #-2930	; 0xfffff48e
    38b0:	strcc	r5, [r1, #-1370]	; 0xfffffaa6
    38b4:	mcrne	7, 2, lr, cr11, cr10, {4}
    38b8:	stmdble	sp, {r0, r8, r9, fp, sp}^
    38bc:	blls	171e08 <strvisx@@Base+0x15e094>
    38c0:	bl	ea0e0 <strvisx@@Base+0xd636c>
    38c4:	stmiane	sl!, {r7, r8, r9}
    38c8:	svccs	0x0000605a
    38cc:	addhi	pc, r2, r0
    38d0:	tstcs	r3, r9, lsr r0
    38d4:			; <UNDEFINED> instruction: 0xf1053401
    38d8:	ldcpl	8, cr0, [r3, #-4]!
    38dc:	svclt	0x00182b3f
    38e0:			; <UNDEFINED> instruction: 0xf1a32b2a
    38e4:	svclt	0x000c0e5b
    38e8:	andcs	r2, r0, #268435456	; 0x10000000
    38ec:	svceq	0x0001f1be
    38f0:			; <UNDEFINED> instruction: 0xf042bf98
    38f4:	bcs	4100 <el_source@plt+0x17c4>
    38f8:			; <UNDEFINED> instruction: 0xf89cd068
    38fc:			; <UNDEFINED> instruction: 0xf8093000
    3900:	strcc	r3, [r2, #-5]
    3904:			; <UNDEFINED> instruction: 0xf8095d33
    3908:	strb	r3, [pc, -r8]!
    390c:			; <UNDEFINED> instruction: 0xe76d4619
    3910:	blcs	4b244 <strvisx@@Base+0x374d0>
    3914:	blls	b9af4 <strvisx@@Base+0xa5d80>
    3918:	strcc	r5, [r1, #-1370]	; 0xfffffaa6
    391c:	cdpne	7, 4, cr14, cr11, cr6, {3}
    3920:	stmiale	fp!, {r0, r8, r9, fp, sp}
    3924:	svclt	0x00182a5b
    3928:	svclt	0x000c2a3f
    392c:	movwcs	r2, #769	; 0x301
    3930:	svclt	0x00082a2a
    3934:	movweq	pc, #4163	; 0x1043	; <UNPREDICTABLE>
    3938:	addsle	r2, pc, r0, lsl #22
    393c:	mvnsvc	pc, #68157440	; 0x4100000
    3940:	ldmdale	r4, {r0, r2, r3, r4, r7, r9, lr}^
    3944:	cmpcs	ip, #4096	; 0x1000
    3948:	cfstr64ne	mvdx5, [fp], #-332	; 0xfffffeb4
    394c:	mulgt	r0, ip, r8
    3950:			; <UNDEFINED> instruction: 0xf8023502
    3954:	strb	ip, [r9, -r3]
    3958:	stmdbcs	r1, {r0, sl, ip, sp}
    395c:	stmdaeq	r4, {r1, r2, r8, r9, fp, sp, lr, pc}
    3960:	svclt	0x000c5d33
    3964:	cdpeq	0, 2, cr15, cr7, cr15, {2}
    3968:	cdpeq	0, 2, cr15, cr2, cr15, {2}
    396c:	eorle	r4, r8, r3, ror r5
    3970:	svclt	0x00182b5b
    3974:	svclt	0x000c2b3f
    3978:	cdpeq	0, 0, cr15, cr1, cr15, {2}
    397c:	cdpeq	0, 0, cr15, cr0, cr15, {2}
    3980:	svclt	0x00142b2a
    3984:			; <UNDEFINED> instruction: 0xf04e4673
    3988:			; <UNDEFINED> instruction: 0xb32b0301
    398c:	mvnsvc	pc, #68157440	; 0x4100000
    3990:	stmdale	ip!, {r0, r2, r3, r4, r7, r9, lr}
    3994:			; <UNDEFINED> instruction: 0xf1054b39
    3998:	ldrbtmi	r0, [fp], #-3587	; 0xfffff1fd
    399c:	bleq	17e5b0 <strvisx@@Base+0x16a83c>
    39a0:	strcc	r5, [r4, #-1370]	; 0xfffffaa6
    39a4:	mulgt	r0, ip, r8
    39a8:	andcs	pc, r2, fp, lsl #17
    39ac:	andgt	pc, r1, fp, lsl #17
    39b0:	mulcs	r0, r8, r8
    39b4:	andcs	pc, lr, r3, lsl #16
    39b8:			; <UNDEFINED> instruction: 0xf89ce718
    39bc:	mrscs	r2, (UNDEF: 3)
    39c0:	bmi	bfd738 <strvisx@@Base+0xbe99c4>
    39c4:	ldrbpl	r4, [r3, #-1146]	; 0xfffffb86
    39c8:	str	r3, [pc, -r1, lsl #10]
    39cc:	ldrbpl	r9, [r3, #-2567]	; 0xfffff5f9
    39d0:	str	r4, [fp, -r5, asr #12]
    39d4:	ldrb	r2, [sp, -r3, lsl #2]!
    39d8:			; <UNDEFINED> instruction: 0xf1054b2a
    39dc:	ldrbtmi	r0, [fp], #-3073	; 0xfffff3ff
    39e0:	strcc	r5, [r2, #-1370]	; 0xfffffaa6
    39e4:	mulcs	r0, r8, r8
    39e8:	andcs	pc, ip, r3, lsl #16
    39ec:	stmdami	r6!, {r1, r2, r3, r4, r5, r6, r7, r9, sl, sp, lr, pc}
    39f0:			; <UNDEFINED> instruction: 0xf0094478
    39f4:	andcs	pc, r0, r3, lsr r9	; <UNPREDICTABLE>
    39f8:	pop	{r0, r1, r3, ip, sp, pc}
    39fc:	mcrne	15, 2, r8, cr11, cr0, {7}
    3a00:	stmdble	r9, {r0, r8, r9, fp, sp}
    3a04:	andle	r2, ip, r3, lsl #18
    3a08:	blmi	82a230 <strvisx@@Base+0x8164bc>
    3a0c:	andsvs	r4, r0, fp, ror r4
    3a10:	andlt	r1, fp, r8, lsl sp
    3a14:	svchi	0x00f0e8bd
    3a18:	cmplt	r3, r9, lsl #22
    3a1c:	tstlt	r3, r4, lsl fp
    3a20:	blmi	6dba90 <strvisx@@Base+0x6c7d1c>
    3a24:	mrscs	r2, R9_usr
    3a28:	ldrbpl	r4, [sl, #-1147]	; 0xfffffb85
    3a2c:			; <UNDEFINED> instruction: 0xf990f011
    3a30:	ldmdami	r8, {r1, r3, r5, r6, r7, r8, r9, sl, sp, lr, pc}
    3a34:			; <UNDEFINED> instruction: 0xf0094478
    3a38:	stmdals	r9, {r0, r4, r8, fp, ip, sp, lr, pc}
    3a3c:	svclt	0x0000e705
    3a40:	andeq	r6, r2, sl, asr fp
    3a44:	andeq	r6, r2, lr, asr #22
    3a48:	andeq	r6, r2, ip, asr #22
    3a4c:	andeq	r6, r2, r2, lsr #18
    3a50:	andeq	r6, r2, ip, lsr fp
    3a54:	andeq	r6, r2, r6, lsr fp
    3a58:	andeq	r6, r2, r0, lsr fp
    3a5c:	andeq	r6, r2, sl, lsl #18
    3a60:	andeq	r6, r2, r4, lsr #22
    3a64:	andeq	r6, r2, r2, lsl fp
    3a68:			; <UNDEFINED> instruction: 0x000268b8
    3a6c:	ldrdeq	r6, [r2], -r2
    3a70:	andeq	r1, r1, sl, asr sl
    3a74:	andeq	r6, r2, r8, ror #20
    3a78:	andeq	r6, r2, sl, asr #20
    3a7c:	andeq	r6, r2, lr, asr r9
    3a80:	andeq	r6, r2, r4, lsr r9
    3a84:	andeq	r6, r2, sl, lsl r9
    3a88:	muleq	r1, ip, r8
    3a8c:	andeq	r6, r2, ip, asr #13
    3a90:	ldrdeq	r6, [r2], -r0
    3a94:	andeq	r1, r1, ip, ror r8
    3a98:			; <UNDEFINED> instruction: 0x4605b570
    3a9c:	strmi	fp, [r8], -r9, asr #3
    3aa0:			; <UNDEFINED> instruction: 0xf7fe460c
    3aa4:			; <UNDEFINED> instruction: 0x4621ecfe
    3aa8:	strmi	r4, [r2], -r6, lsl #12
    3aac:			; <UNDEFINED> instruction: 0xf7fe4628
    3ab0:	ldmdblt	r0!, {r1, r2, r3, r4, r5, r7, r9, sl, fp, sp, lr, pc}^
    3ab4:	stmibne	r8!, {r2, r4, r5, sl, lr}
    3ab8:	stccc	8, cr15, [r1], {20}
    3abc:	andle	r2, r4, pc, lsr #22
    3ac0:	blcs	bdb174 <strvisx@@Base+0xbc7400>
    3ac4:	strcc	fp, [r1], -r4, lsl #30
    3ac8:	pop	{r3, r5, r7, r8, fp, ip}
    3acc:			; <UNDEFINED> instruction: 0xf0094070
    3ad0:			; <UNDEFINED> instruction: 0x4628ba59
    3ad4:	ldrhtmi	lr, [r0], #-141	; 0xffffff73
    3ad8:	blt	153fb04 <strvisx@@Base+0x152bd90>
    3adc:	andcs	fp, r1, #8, 10	; 0x2000000
    3ae0:			; <UNDEFINED> instruction: 0xf9c6f004
    3ae4:	stmdavs	r3, {r3, r5, r6, r8, ip, sp, pc}
    3ae8:	movweq	pc, #16403	; 0x4013	; <UNPREDICTABLE>
    3aec:	stmibvs	r0, {r0, r1, r2, r4, r8, r9, sl, fp, ip, sp, pc}
    3af0:	vst1.8	{d4-d6}, [r0 :64], r8
    3af4:			; <UNDEFINED> instruction: 0xf5a04070
    3af8:	svclt	0x001c4080
    3afc:			; <UNDEFINED> instruction: 0xf080fab0
    3b00:	vstrlt.16	s0, [r8, #-128]	; 0xffffff80	; <UNPREDICTABLE>
    3b04:	svcmi	0x00f0e92d
    3b08:	mcrrmi	6, 0, r4, ip, cr5
    3b0c:	stmdami	ip, {r0, r2, r7, ip, sp, pc}^
    3b10:	ldrbtmi	r4, [ip], #-1551	; 0xfffff9f1
    3b14:	bmi	1316848 <strvisx@@Base+0x1302ad4>
    3b18:	ldrbtmi	r5, [fp], #-2080	; 0xfffff7e0
    3b1c:	stmdavs	r0, {r2, r3, r5, fp, sp, lr}
    3b20:			; <UNDEFINED> instruction: 0xf04f9003
    3b24:	ldmpl	fp, {}	; <UNPREDICTABLE>
    3b28:	ldrdls	pc, [r0], -r3
    3b2c:	rsbsle	r2, r1, r0, lsl #24
    3b30:	strcs	r4, [r0], -r8, lsr #13
    3b34:			; <UNDEFINED> instruction: 0xf7fe4620
    3b38:			; <UNDEFINED> instruction: 0xf858ecb4
    3b3c:	addmi	r4, r6, #4, 30
    3b40:			; <UNDEFINED> instruction: 0x4606bf38
    3b44:	mvnsle	r2, r0, lsl #24
    3b48:			; <UNDEFINED> instruction: 0xf7fe4648
    3b4c:	bge	7e8bc <strvisx@@Base+0x6ab48>
    3b50:	tstmi	r3, r5, asr #4	; <UNPREDICTABLE>
    3b54:	ldc	7, cr15, [r2], {254}	; 0xfe
    3b58:	subsle	r3, r8, r1
    3b5c:			; <UNDEFINED> instruction: 0x8006f8bd
    3b60:	suble	r4, r5, #1879048203	; 0x7000000b
    3b64:	smlabteq	r2, r7, r1, pc	; <UNPREDICTABLE>
    3b68:	ldrtmi	r4, [r1], #-1600	; 0xfffff9c0
    3b6c:	blx	93fbb6 <strvisx@@Base+0x92be42>
    3b70:	svclt	0x00382801
    3b74:	strmi	r2, [r1], r1
    3b78:	strbmi	r4, [r9], -r0, asr #12
    3b7c:	blx	73fbc6 <strvisx@@Base+0x72be52>
    3b80:	svclt	0x00284580
    3b84:	andcs	r4, sl, r0, lsl #13
    3b88:	bl	fee41b88 <strvisx@@Base+0xfee2de14>
    3b8c:	movwlt	r6, #51244	; 0xc82c
    3b90:	ldrsbtlt	pc, [r8], pc	; <UNPREDICTABLE>
    3b94:			; <UNDEFINED> instruction: 0xf8df2601
    3b98:	ldrbtmi	sl, [fp], #184	; 0xb8
    3b9c:	strd	r4, [r2], -sl
    3ba0:	svcmi	0x0004f855
    3ba4:			; <UNDEFINED> instruction: 0x4620b1b4
    3ba8:	ldcl	7, cr15, [sl], #-1016	; 0xfffffc08
    3bac:	addmi	r4, r7, #68157440	; 0x4100000
    3bb0:	svclt	0x00344650
    3bb4:	ldrbmi	r1, [sl], -r2, ror #19
    3bb8:	mcrr2	0, 0, pc, sl, cr12	; <UNPREDICTABLE>
    3bbc:	svclt	0x0038454e
    3bc0:	mvnle	r3, #1048576	; 0x100000
    3bc4:	strcs	r2, [r1], -sl
    3bc8:	bl	fe641bc8 <strvisx@@Base+0xfe62de54>
    3bcc:	svcmi	0x0004f855
    3bd0:	mvnle	r2, r0, lsl #24
    3bd4:			; <UNDEFINED> instruction: 0xf7fe200a
    3bd8:	bmi	7bea28 <strvisx@@Base+0x7aacb4>
    3bdc:	ldrbtmi	r4, [sl], #-2840	; 0xfffff4e8
    3be0:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    3be4:	subsmi	r9, sl, r3, lsl #22
    3be8:	andlt	sp, r5, r5, lsr #2
    3bec:	svchi	0x00f0e8bd
    3bf0:	ldmdbeq	r8, {r0, r1, r2, r3, r6, r9, fp, sp, lr, pc}^
    3bf4:			; <UNDEFINED> instruction: 0xf1b94640
    3bf8:	svclt	0x00380f01
    3bfc:	stmdbeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    3c00:			; <UNDEFINED> instruction: 0xf0104649
    3c04:	strmi	pc, [r0, #2777]	; 0xad9
    3c08:	strmi	fp, [r0], r8, lsr #30
    3c0c:			; <UNDEFINED> instruction: 0xf04fe7bb
    3c10:	sbfx	r0, r0, #16, #6
    3c14:			; <UNDEFINED> instruction: 0xf7fe4648
    3c18:	bge	7e7f0 <strvisx@@Base+0x6aa7c>
    3c1c:	tstmi	r3, r5, asr #4	; <UNPREDICTABLE>
    3c20:	stc	7, cr15, [ip], #-1016	; 0xfffffc08
    3c24:	svclt	0x00043001
    3c28:	stmdaeq	r2, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    3c2c:	stmdbeq	r8!, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    3c30:	strtmi	sp, [r6], -r9, lsr #1
    3c34:			; <UNDEFINED> instruction: 0xf7fee792
    3c38:	svclt	0x0000ed30
    3c3c:	andeq	r6, r2, lr, ror #3
    3c40:	andeq	r0, r0, r0, asr #5
    3c44:	andeq	r6, r2, r6, ror #3
    3c48:	andeq	r0, r0, r8, asr #5
    3c4c:	andeq	r1, r1, lr, ror #16
    3c50:	andeq	r1, r1, r4, lsr r7
    3c54:	andeq	r6, r2, r2, lsr #2
    3c58:	svcmi	0x00f0e92d
    3c5c:	strmi	fp, [r1], r7, lsl #1
    3c60:	stmib	sp, {r3, r7, r9, sl, lr}^
    3c64:	tstcs	r4, r1, lsl #4
    3c68:	eorcs	r4, r5, pc, ror #20
    3c6c:	blmi	1be8880 <strvisx@@Base+0x1bd4b0c>
    3c70:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    3c74:	movwls	r6, #22555	; 0x581b
    3c78:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    3c7c:			; <UNDEFINED> instruction: 0xf940f009
    3c80:			; <UNDEFINED> instruction: 0xf1b84607
    3c84:			; <UNDEFINED> instruction: 0xf0000f00
    3c88:			; <UNDEFINED> instruction: 0x46408091
    3c8c:			; <UNDEFINED> instruction: 0xf7fe4c68
    3c90:	cdpmi	12, 6, cr14, cr8, cr8, {0}
    3c94:	ldrdlt	pc, [r0, pc]!	; <UNPREDICTABLE>
    3c98:	ldrbtmi	r4, [lr], #-1148	; 0xfffffb84
    3c9c:	ldrbtmi	r3, [fp], #1048	; 0x418
    3ca0:	strmi	r2, [r2], r0, lsl #10
    3ca4:	strcc	lr, [ip], #-4
    3ca8:	ldrtmi	fp, [r3], lr, asr #3
    3cac:	stcvs	8, cr15, [ip], {84}	; 0x54
    3cb0:			; <UNDEFINED> instruction: 0x46594652
    3cb4:	b	13d55bc <strvisx@@Base+0x13c1848>
    3cb8:			; <UNDEFINED> instruction: 0xf7fe0985
    3cbc:	bl	1fef84 <strvisx@@Base+0x1eb210>
    3cc0:	stmdacs	r0, {r0, r3, sl, fp}
    3cc4:	ldrbmi	sp, [r8], -pc, ror #3
    3cc8:			; <UNDEFINED> instruction: 0xf0093501
    3ccc:			; <UNDEFINED> instruction: 0xf109f95b
    3cd0:	ldrtmi	r0, [ip], #3076	; 0xc04
    3cd4:			; <UNDEFINED> instruction: 0xf847340c
    3cd8:	cdpcs	0, 0, cr0, cr0, cr9, {0}
    3cdc:			; <UNDEFINED> instruction: 0xf8ccd1e5
    3ce0:	stccs	0, cr6, [r0, #-0]
    3ce4:			; <UNDEFINED> instruction: 0x462ad05d
    3ce8:			; <UNDEFINED> instruction: 0x46404639
    3cec:	ldc2l	7, cr15, [lr], #1020	; 0x3fc
    3cf0:	strmi	r2, [r4], -r1, lsl #26
    3cf4:	ldmdavs	r8!, {r2, r3, r6, fp, ip, lr, pc}
    3cf8:			; <UNDEFINED> instruction: 0xb128463e
    3cfc:	bl	1f41cfc <strvisx@@Base+0x1f2df88>
    3d00:	svceq	0x0004f856
    3d04:	mvnsle	r2, r0, lsl #16
    3d08:			; <UNDEFINED> instruction: 0xf7fe4638
    3d0c:			; <UNDEFINED> instruction: 0x2c00eb76
    3d10:			; <UNDEFINED> instruction: 0x4620d032
    3d14:	bl	ff141d14 <strvisx@@Base+0xff12dfa0>
    3d18:	strbmi	r4, [r0], -r6, lsl #12
    3d1c:	bl	ff041d1c <strvisx@@Base+0xff02dfa8>
    3d20:	stmdble	r5, {r1, r2, r7, r9, lr}
    3d24:	stmdals	r1, {r0, r5, fp, ip}
    3d28:	stcl	7, cr15, [ip], #1016	; 0x3f8
    3d2c:	rsbsle	r3, r7, r1
    3d30:			; <UNDEFINED> instruction: 0xf7fe9801
    3d34:	stccs	12, cr14, [r1, #-688]	; 0xfffffd50
    3d38:	blls	4381ac <strvisx@@Base+0x424438>
    3d3c:	blls	b0210 <strvisx@@Base+0x9c49c>
    3d40:	rsble	r2, r2, r0, lsl #22
    3d44:			; <UNDEFINED> instruction: 0xf04f462b
    3d48:	subs	r0, r4, r0, lsl #20
    3d4c:			; <UNDEFINED> instruction: 0xf88d9b03
    3d50:	blls	8fd98 <strvisx@@Base+0x7c024>
    3d54:	cmple	ip, r0, lsl #22
    3d58:	ldmdavc	fp, {r0, r1, r6, fp, sp, lr}
    3d5c:	cmple	r8, r0, lsr #22
    3d60:			; <UNDEFINED> instruction: 0xf88d9b02
    3d64:	stmdals	r1, {r0, r4, ip, sp}
    3d68:			; <UNDEFINED> instruction: 0xf7fea904
    3d6c:	andcc	lr, r1, ip, asr #25
    3d70:			; <UNDEFINED> instruction: 0x4620d056
    3d74:	bl	1041d74 <strvisx@@Base+0x102e000>
    3d78:	bmi	c15620 <strvisx@@Base+0xc018ac>
    3d7c:	ldrbtmi	r4, [sl], #-2859	; 0xfffff4d5
    3d80:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    3d84:	subsmi	r9, sl, r5, lsl #22
    3d88:	andlt	sp, r7, r8, asr #2
    3d8c:	svchi	0x00f0e8bd
    3d90:			; <UNDEFINED> instruction: 0x46384631
    3d94:	mrc2	7, 5, pc, cr6, cr15, {7}
    3d98:			; <UNDEFINED> instruction: 0x463e6838
    3d9c:			; <UNDEFINED> instruction: 0xd1ad2800
    3da0:			; <UNDEFINED> instruction: 0x4638e7b2
    3da4:	bl	a41da4 <strvisx@@Base+0xa2e030>
    3da8:	strb	r4, [r6, r8, lsr #12]!
    3dac:	svcne	0x00044e24
    3db0:	ldrbtmi	r4, [lr], #-2084	; 0xfffff7dc
    3db4:			; <UNDEFINED> instruction: 0xf0094478
    3db8:			; <UNDEFINED> instruction: 0xf108f8e5
    3dbc:			; <UNDEFINED> instruction: 0xf8440801
    3dc0:			; <UNDEFINED> instruction: 0xf8560f04
    3dc4:	stmdacs	r0, {r2, r3, r8, r9, sl, fp}
    3dc8:			; <UNDEFINED> instruction: 0x4601d1f5
    3dcc:	eoreq	pc, r8, r7, asr #16
    3dd0:			; <UNDEFINED> instruction: 0x463c4638
    3dd4:	mrc2	7, 4, pc, cr6, cr15, {7}
    3dd8:			; <UNDEFINED> instruction: 0xb1286838
    3ddc:	bl	341ddc <strvisx@@Base+0x32e068>
    3de0:	svceq	0x0004f854
    3de4:	mvnsle	r2, r0, lsl #16
    3de8:			; <UNDEFINED> instruction: 0xf7fe4638
    3dec:	strbmi	lr, [r0], -r6, lsl #22
    3df0:	strtmi	lr, [sl], r3, asr #15
    3df4:	bge	18ca04 <strvisx@@Base+0x178c90>
    3df8:	ldrmi	r2, [r2], #288	; 0x120
    3dfc:	andcs	r4, r0, #318767104	; 0x13000000
    3e00:	stcne	8, cr15, [r8], {10}
    3e04:	stccs	8, cr15, [r8], {3}
    3e08:	stmdavs	r3, {r0, r2, r3, r5, r7, r8, r9, sl, sp, lr, pc}^
    3e0c:	blcs	821e80 <strvisx@@Base+0x80e10c>
    3e10:			; <UNDEFINED> instruction: 0xf8ddbf1c
    3e14:	strtmi	sl, [fp], -r8
    3e18:	str	sp, [sl, sp, ror #3]!
    3e1c:	ldc	7, cr15, [ip], #-1016	; 0xfffffc08
    3e20:	ldrbtmi	r4, [r8], #-2057	; 0xfffff7f7
    3e24:	mrrc2	0, 0, pc, lr, cr8	; <UNPREDICTABLE>
    3e28:	muleq	r2, r0, r0
    3e2c:	andeq	r0, r0, r0, asr #5
    3e30:	andeq	r5, r2, r0, lsl ip
    3e34:	andeq	r1, r1, r2, asr #12
    3e38:	andeq	r1, r1, sl, lsr r6
    3e3c:	andeq	r5, r2, r2, lsl #31
    3e40:	strdeq	r5, [r2], -r6
    3e44:	andeq	r1, r1, r4, lsr #10
    3e48:			; <UNDEFINED> instruction: 0x000114be
    3e4c:	blmi	1256774 <strvisx@@Base+0x1242a00>
    3e50:	ldrblt	r4, [r0, #1146]!	; 0x47a
    3e54:	ldmpl	r3, {r0, r2, r9, sl, lr}^
    3e58:	stmdami	r7, {r0, r2, r7, ip, sp, pc}^
    3e5c:	movwls	r6, #14363	; 0x381b
    3e60:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    3e64:	svcmi	0x0045782b
    3e68:	blcs	15050 <strvisx@@Base+0x12dc>
    3e6c:	svclt	0x0008447f
    3e70:			; <UNDEFINED> instruction: 0xf7fe2500
    3e74:	stmdacs	r0, {r1, r4, r5, r9, fp, sp, lr, pc}
    3e78:	stmdavc	r3, {r1, r2, r4, r5, ip, lr, pc}
    3e7c:	teqlt	r3, #6291456	; 0x600000
    3e80:	ldc	7, cr15, [r0], {254}	; 0xfe
    3e84:	strmi	r1, [r4], -r1, asr #24
    3e88:	stmdacs	r0, {r0, r2, r3, r4, r6, ip, lr, pc}
    3e8c:	stcge	0, cr13, [r2, #-224]	; 0xffffff20
    3e90:			; <UNDEFINED> instruction: 0xf7fee004
    3e94:	stmdavs	r0, {r1, r2, r4, r5, r8, sl, fp, sp, lr, pc}
    3e98:			; <UNDEFINED> instruction: 0xd1282804
    3e9c:	strtmi	r2, [r9], -r0, lsl #4
    3ea0:			; <UNDEFINED> instruction: 0xf7fe4620
    3ea4:	andcc	lr, r1, r2, asr fp
    3ea8:	blls	b827c <strvisx@@Base+0xa4508>
    3eac:	tstle	r6, sl, asr r6
    3eb0:	svcmi	0x007ff413
    3eb4:	smlabtcs	r7, r3, r3, pc	; <UNPREDICTABLE>
    3eb8:	bmi	c782f0 <strvisx@@Base+0xc6457c>
    3ebc:	ldrbtmi	r4, [sl], #-2861	; 0xfffff4d3
    3ec0:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    3ec4:	subsmi	r9, sl, r3, lsl #22
    3ec8:	andlt	sp, r5, r8, lsl r1
    3ecc:	mcrmi	13, 1, fp, cr13, cr0, {7}
    3ed0:			; <UNDEFINED> instruction: 0xe7d5447e
    3ed4:	ldrbtmi	r4, [r8], #-2092	; 0xfffff7d4
    3ed8:	cdp2	0, 12, cr15, cr0, cr8, {0}
    3edc:	stmdami	fp!, {r0, r2, r3, r5, r6, r7, r8, r9, sl, sp, lr, pc}
    3ee0:			; <UNDEFINED> instruction: 0xf0084478
    3ee4:			; <UNDEFINED> instruction: 0xe7e8febb
    3ee8:	ldrbtmi	r4, [lr], #-3625	; 0xfffff1d7
    3eec:			; <UNDEFINED> instruction: 0xf7fee7c8
    3ef0:	strmi	lr, [r1], -r2, lsl #19
    3ef4:	ldrbtmi	r4, [r8], #-2087	; 0xfffff7d9
    3ef8:	blx	ffd3ff22 <strvisx@@Base+0xffd2c1ae>
    3efc:	bl	ff341efc <strvisx@@Base+0xff32e188>
    3f00:	stmdami	r5!, {r0, r2, r3, r4, r6, r8, r9, ip, sp, pc}
    3f04:	ldrtmi	r4, [r1], -sl, lsr #12
    3f08:			; <UNDEFINED> instruction: 0xf0084478
    3f0c:	bmi	903d68 <strvisx@@Base+0x8efff4>
    3f10:	ldrtmi	r4, [r1], -fp, lsr #12
    3f14:			; <UNDEFINED> instruction: 0x4630447a
    3f18:			; <UNDEFINED> instruction: 0xf7fe9400
    3f1c:	blmi	83e9b4 <strvisx@@Base+0x82ac40>
    3f20:	ldmdavs	ip, {r0, r1, r3, r4, r5, r6, r7, fp, ip, lr}
    3f24:	stcl	7, cr15, [ip], #1016	; 0x3f8
    3f28:			; <UNDEFINED> instruction: 0xf7fe6800
    3f2c:	ldrtmi	lr, [r3], -r4, ror #18
    3f30:	strmi	r2, [r2], -r1, lsl #2
    3f34:	bmi	6e873c <strvisx@@Base+0x6d49c8>
    3f38:	ldrbtmi	r4, [sl], #-1568	; 0xfffff9e0
    3f3c:	bl	fefc1f3c <strvisx@@Base+0xfefae1c8>
    3f40:			; <UNDEFINED> instruction: 0xf7fe2001
    3f44:			; <UNDEFINED> instruction: 0xf7feea4c
    3f48:	stmdavs	r0, {r2, r3, r4, r6, r7, sl, fp, sp, lr, pc}
    3f4c:	ldmdb	r2, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    3f50:	ldmdami	r5, {r0, r9, sl, lr}
    3f54:			; <UNDEFINED> instruction: 0xf0084478
    3f58:	ldmdami	r4, {r0, r2, r6, r7, r8, r9, fp, ip, sp, lr, pc}
    3f5c:	ldrbtmi	r4, [r8], #-1585	; 0xfffff9cf
    3f60:			; <UNDEFINED> instruction: 0xff6af008
    3f64:	ldrtmi	r4, [r1], -sl, lsr #12
    3f68:			; <UNDEFINED> instruction: 0xf7fe4630
    3f6c:			; <UNDEFINED> instruction: 0xe7d6ea7c
    3f70:			; <UNDEFINED> instruction: 0x00025eb0
    3f74:	andeq	r0, r0, r0, asr #5
    3f78:	muleq	r1, r8, r4
    3f7c:	muleq	r2, r4, lr
    3f80:	andeq	r5, r2, r2, asr #28
    3f84:	andeq	r1, r1, r8, lsr #8
    3f88:	andeq	r1, r1, r2, asr #9
    3f8c:	andeq	r1, r1, r0, lsr #9
    3f90:	andeq	r1, r1, lr, lsl #8
    3f94:	andeq	r1, r1, lr, ror #8
    3f98:	andeq	r1, r1, r4, lsl r4
    3f9c:	andeq	r1, r1, r0, lsr #8
    3fa0:	andeq	r0, r0, r4, ror #5
    3fa4:	andeq	r1, r1, lr, lsl #8
    3fa8:			; <UNDEFINED> instruction: 0x000113b4
    3fac:	ldrdeq	r1, [r1], -sl
    3fb0:			; <UNDEFINED> instruction: 0x4606b5f8
    3fb4:			; <UNDEFINED> instruction: 0x46104c11
    3fb8:	smladcs	r1, r1, fp, r4
    3fbc:	cfldrsmi	mvf4, [r1, #-496]	; 0xfffffe10
    3fc0:	stceq	0, cr15, [r0], {79}	; 0x4f
    3fc4:	blmi	41a354 <strvisx@@Base+0x4065e0>
    3fc8:	stmdbpl	r5!, {r0, r1, r2, r4, sp, lr}^
    3fcc:	eorvs	r4, pc, pc, lsl #20
    3fd0:	stmiapl	r3!, {r1, r3, r4, r5, r6, sl, lr}^
    3fd4:	andgt	pc, r0, r3, asr #17
    3fd8:			; <UNDEFINED> instruction: 0xff24f00d
    3fdc:	svclt	0x00083001
    3fe0:	tstle	r0, r8, lsr #16
    3fe4:	blmi	2b37cc <strvisx@@Base+0x29fa58>
    3fe8:	stmdami	sl, {r0, r4, r5, r9, sl, lr}
    3fec:	ldrbtmi	r5, [r8], #-2275	; 0xfffff71d
    3ff0:			; <UNDEFINED> instruction: 0xf008681a
    3ff4:			; <UNDEFINED> instruction: 0xf04ffe33
    3ff8:	ldcllt	0, cr3, [r8, #1020]!	; 0x3fc
    3ffc:	andeq	r5, r2, r4, asr #26
    4000:	andeq	r0, r0, ip, asr #5
    4004:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4008:	andeq	r0, r0, ip, ror r2
    400c:	andeq	r1, r1, r8, lsr r4
    4010:			; <UNDEFINED> instruction: 0x000002b4
    4014:	andeq	r1, r1, r6, asr #7
    4018:			; <UNDEFINED> instruction: 0x4604b538
    401c:			; <UNDEFINED> instruction: 0x460db118
    4020:	cdp2	0, 9, cr15, cr10, cr11, {0}
    4024:	strtmi	fp, [r0], -r8, lsl #2
    4028:			; <UNDEFINED> instruction: 0x4621bd38
    402c:			; <UNDEFINED> instruction: 0xf0054628
    4030:	strmi	pc, [r1], -fp, asr #25
    4034:	strmi	r4, [ip], -r0, lsr #12
    4038:	ldmib	lr, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    403c:	ldclt	6, cr4, [r8, #-128]!	; 0xffffff80
    4040:	svcmi	0x00f0e92d
    4044:	stc	6, cr4, [sp, #-20]!	; 0xffffffec
    4048:			; <UNDEFINED> instruction: 0xf8df8b02
    404c:			; <UNDEFINED> instruction: 0xf8df250c
    4050:	ldrbtmi	r3, [sl], #-1292	; 0xfffffaf4
    4054:	ldmpl	r3, {r0, r1, r2, r3, r4, r7, ip, sp, pc}^
    4058:	tstls	sp, #1769472	; 0x1b0000
    405c:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    4060:	bl	542060 <strvisx@@Base+0x52e2ec>
    4064:	tstcs	lr, sp, lsl #20
    4068:	strtmi	r4, [r8], -r7, lsl #12
    406c:	stmib	lr!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    4070:			; <UNDEFINED> instruction: 0xf0402800
    4074:	strmi	r8, [r6], -r9, ror #4
    4078:	ldrdne	lr, [r0], -r7
    407c:	mrc2	0, 4, pc, cr10, cr0, {0}
    4080:	andcc	r4, r1, r0, lsl #13
    4084:			; <UNDEFINED> instruction: 0xff28f008
    4088:			; <UNDEFINED> instruction: 0x46426839
    408c:			; <UNDEFINED> instruction: 0xf7fe4604
    4090:			; <UNDEFINED> instruction: 0xf10dea1a
    4094:	stmdbge	fp, {r0, r1, r2, r5, r8, r9}
    4098:	andvs	pc, r8, r4, lsl #16
    409c:	strtmi	sl, [r0], -ip, lsl #20
    40a0:	andcs	r9, r1, #0, 4
    40a4:	blx	17420aa <strvisx@@Base+0x172e336>
    40a8:			; <UNDEFINED> instruction: 0xf7fe4620
    40ac:	ldmdavs	r9!, {r1, r2, r5, r7, r8, fp, sp, lr, pc}
    40b0:			; <UNDEFINED> instruction: 0xf01068b8
    40b4:			; <UNDEFINED> instruction: 0x4681fe7f
    40b8:			; <UNDEFINED> instruction: 0xf0083001
    40bc:	strbmi	pc, [sl], -sp, lsl #30	; <UNPREDICTABLE>
    40c0:			; <UNDEFINED> instruction: 0x46046839
    40c4:	ldmib	lr!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    40c8:	andvs	pc, r9, r4, lsl #16
    40cc:	andcs	r4, r1, #53477376	; 0x3300000
    40d0:	strtmi	sl, [r0], -sl, lsl #18
    40d4:			; <UNDEFINED> instruction: 0xf7ff9600
    40d8:			; <UNDEFINED> instruction: 0xf814fb43
    40dc:			; <UNDEFINED> instruction: 0xf0033008
    40e0:	blcs	284c64 <strvisx@@Base+0x270ef0>
    40e4:	bcs	33d4c <strvisx@@Base+0x1ffd8>
    40e8:			; <UNDEFINED> instruction: 0xf0404681
    40ec:	svcls	0x000b8114
    40f0:	subsle	r2, r9, r0, lsl #30
    40f4:	movweq	pc, #4519	; 0x11a7	; <UNPREDICTABLE>
    40f8:	svceq	0x0000f1b8
    40fc:			; <UNDEFINED> instruction: 0xf383fab3
    4100:	cmpne	r3, #323584	; 0x4f000
    4104:	movwcs	fp, #3848	; 0xf08
    4108:	cmple	sl, r0, lsl #22
    410c:	ldcle	15, cr2, [r8, #-0]
    4110:	ldrdlt	pc, [r0], -r0
    4114:	svceq	0x0000f1bb
    4118:			; <UNDEFINED> instruction: 0xf8dfd076
    411c:	cdp	4, 0, cr1, cr8, cr4, {2}
    4120:			; <UNDEFINED> instruction: 0xf8df5a10
    4124:	andcs	sl, r3, #64, 8	; 0x40000000
    4128:	ldrbtmi	r4, [sl], #1145	; 0x479
    412c:	and	r4, ip, sp, lsl #12
    4130:	tstcs	r1, r0, lsr r6
    4134:	mcr2	0, 0, pc, cr12, cr0, {0}	; <UNPREDICTABLE>
    4138:	svcpl	0x000cf85a
    413c:	stccs	6, cr4, [r0, #-24]	; 0xffffffe8
    4140:	strtmi	sp, [r8], -r0, rrx
    4144:	stmib	ip!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4148:	strtmi	r4, [r9], -r2, lsl #12
    414c:			; <UNDEFINED> instruction: 0xf7fe4658
    4150:	stmdacs	r0, {r1, r2, r5, r6, r9, fp, sp, lr, pc}
    4154:			; <UNDEFINED> instruction: 0xf8dfd1ec
    4158:	andcs	r3, ip, r0, lsl r4
    415c:	cdp	15, 1, cr2, cr8, cr1, {0}
    4160:	ldrbtmi	r5, [fp], #-2576	; 0xfffff5f0
    4164:	strcc	pc, [r6], -r0, lsl #22
    4168:	ldrdge	pc, [r8], -r6
    416c:	sbchi	pc, lr, r0
    4170:			; <UNDEFINED> instruction: 0xf81844a0
    4174:	blcs	813180 <strvisx@@Base+0x7ff40c>
    4178:	sbchi	pc, r8, r0
    417c:	svceq	0x0000f1ba
    4180:	strcs	sp, [r6, #-331]	; 0xfffffeb5
    4184:			; <UNDEFINED> instruction: 0xf7fe4620
    4188:	bmi	ffe3e670 <strvisx@@Base+0xffe2a8fc>
    418c:	ldrbtmi	r4, [sl], #-3059	; 0xfffff40d
    4190:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    4194:	subsmi	r9, sl, sp, lsl fp
    4198:	bicshi	pc, ip, r0, asr #32
    419c:	andslt	r4, pc, r8, lsr #12
    41a0:	blhi	bf49c <strvisx@@Base+0xab728>
    41a4:	svchi	0x00f0e8bd
    41a8:	movwcs	r9, #6666	; 0x1a0a
    41ac:	movwls	r4, #1576	; 0x628
    41b0:			; <UNDEFINED> instruction: 0xf282fab2
    41b4:			; <UNDEFINED> instruction: 0x4639463b
    41b8:	ldmdbeq	r2, {r3, r8, sl, sp}^
    41bc:	stc2l	7, cr15, [ip, #-1020]	; 0xfffffc04
    41c0:	bl	13e148 <strvisx@@Base+0x12a3d4>
    41c4:			; <UNDEFINED> instruction: 0xf8d00308
    41c8:			; <UNDEFINED> instruction: 0xf813b000
    41cc:	blcs	8131d8 <strvisx@@Base+0x7ff464>
    41d0:	orrhi	pc, r5, r0, asr #32
    41d4:	svceq	0x0000f1bb
    41d8:			; <UNDEFINED> instruction: 0xf04fd19f
    41dc:	bls	292de0 <strvisx@@Base+0x27f06c>
    41e0:	andls	r9, r5, #13312	; 0x3400
    41e4:	mlacs	r7, sp, r8, pc	; <UNPREDICTABLE>
    41e8:	ldmib	r3, {r0, r1, r9, ip, pc}^
    41ec:	blls	3289f4 <strvisx@@Base+0x314c80>
    41f0:	ldrdhi	pc, [r0], -r2
    41f4:	ldmmi	lr, {r2, r8, r9, ip, pc}^
    41f8:	ldrbtmi	r2, [r8], #-1536	; 0xfffffa00
    41fc:	cdp2	0, 12, cr15, cr2, cr8, {0}
    4200:	eor	r9, r4, lr
    4204:	bpl	43fa6c <strvisx@@Base+0x42bcf8>
    4208:	rscle	r2, r6, r1, lsl #30
    420c:			; <UNDEFINED> instruction: 0xf04f44a0
    4210:			; <UNDEFINED> instruction: 0xf8183aff
    4214:	blcs	813220 <strvisx@@Base+0x7ff4ac>
    4218:	bls	3785a4 <strvisx@@Base+0x364830>
    421c:	orrmi	pc, r0, #-1073741823	; 0xc0000001
    4220:	blcc	6a650 <strvisx@@Base+0x568dc>
    4224:	eorvs	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    4228:	ldmib	r2, {r0, r2, r8, ip, pc}^
    422c:			; <UNDEFINED> instruction: 0xf89d9300
    4230:	bls	3082d4 <strvisx@@Base+0x2f4560>
    4234:	ldrdhi	pc, [r0], -r3
    4238:	andls	r9, r4, #-1073741824	; 0xc0000000
    423c:	sbcsle	r2, sl, r0, lsl #28
    4240:	stmdage	lr, {r2, r3, r6, r7, r8, fp, lr}
    4244:	ldrbtmi	r4, [r9], #-1586	; 0xfffff9ce
    4248:	cdp2	0, 12, cr15, cr0, cr8, {0}
    424c:	blge	3ea28c <strvisx@@Base+0x3d6518>
    4250:			; <UNDEFINED> instruction: 0xf00b9302
    4254:	ldc	13, cr15, [sp, #516]	; 0x204
    4258:	eorscs	r8, r0, #8192	; 0x2000
    425c:	strmi	r2, [r3], r0, lsl #2
    4260:	beq	43fac8 <strvisx@@Base+0x42bd54>
    4264:	ldmda	r6!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    4268:	svceq	0x0002f1ba
    426c:	mrshi	pc, (UNDEF: 73)	; <UNPREDICTABLE>
    4270:	stmdals	lr, {r0, r6, r9, sl, lr}
    4274:	mrc2	7, 6, pc, cr0, cr15, {7}
    4278:	bhi	3f8b4 <strvisx@@Base+0x2bb40>
    427c:	andcs	r2, sl, #0, 6
    4280:	strbmi	r4, [r8], -r1, lsl #12
    4284:			; <UNDEFINED> instruction: 0xf006910e
    4288:	stmdals	lr, {r0, r1, r3, r5, r9, fp, ip, sp, lr, pc}
    428c:	blcs	222a0 <strvisx@@Base+0xe52c>
    4290:	mrshi	pc, (UNDEF: 75)	; <UNPREDICTABLE>
    4294:	beq	403d8 <strvisx@@Base+0x2c664>
    4298:	blcs	fd5be8 <strvisx@@Base+0xfc1e74>
    429c:	blcs	ab3f04 <strvisx@@Base+0xaa0190>
    42a0:	mrrcne	0, 3, sp, r1, cr14
    42a4:			; <UNDEFINED> instruction: 0xf8102b5c
    42a8:	andle	r9, fp, r1
    42ac:	andgt	pc, r2, r0, lsl r8	; <UNPREDICTABLE>
    42b0:	strmi	r4, [sl], -fp, asr #12
    42b4:	svceq	0x002ff1bc
    42b8:	ldrmi	fp, [r2], r8, lsl #30
    42bc:	mvnle	r2, r0, lsl #22
    42c0:	mul	r6, r9, r6
    42c4:	svceq	0x0000f1b9
    42c8:	stfpld	f5, [r3], {28}
    42cc:	svclt	0x00082b2f
    42d0:			; <UNDEFINED> instruction: 0xf7fe468a
    42d4:	blls	43e524 <strvisx@@Base+0x42a7b0>
    42d8:	andls	r2, lr, #0, 4
    42dc:	blcs	70810 <strvisx@@Base+0x5ca9c>
    42e0:	adchi	pc, r9, r0, lsl #4
    42e4:	svclt	0x00082e00
    42e8:	stmdbeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    42ec:	svceq	0x0000f1b9
    42f0:	stmdals	r2, {r0, r1, r5, ip, lr, pc}
    42f4:			; <UNDEFINED> instruction: 0xff7cf00e
    42f8:	blcs	2af40 <strvisx@@Base+0x171cc>
    42fc:	svcge	0x0041f43f
    4300:	ldr	r2, [pc, -r8, lsl #10]!
    4304:	strbmi	r3, [ip], r2, lsl #4
    4308:	ldrb	r5, [r3, r3, lsl #25]
    430c:	svceq	0x0000f1ba
    4310:	svcge	0x0037f43f
    4314:	strtmi	lr, [r0], -r3, ror #14
    4318:			; <UNDEFINED> instruction: 0xf7fe2506
    431c:	ldr	lr, [r4, -lr, ror #16]!
    4320:	svclt	0x00182b2a
    4324:	stmdbeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    4328:	strmi	sp, [r2], #-467	; 0xfffffe2d
    432c:			; <UNDEFINED> instruction: 0xf1b37853
    4330:	svclt	0x00180900
    4334:	stmdbeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    4338:	ldmdbls	r3, {r0, r1, r3, r6, r7, r8, r9, sl, sp, lr, pc}
    433c:	bls	415c04 <strvisx@@Base+0x401e90>
    4340:			; <UNDEFINED> instruction: 0xf9d4f7ff
    4344:	svceq	0x0000f1bb
    4348:	strbmi	fp, [r1], -ip, lsl #30
    434c:	strmi	r2, [r2], r0, lsl #2
    4350:	blx	fe8c2356 <strvisx@@Base+0xfe8ae5e2>
    4354:	ldrbmi	r4, [r0], -r3, lsl #12
    4358:			; <UNDEFINED> instruction: 0xf7fe930e
    435c:			; <UNDEFINED> instruction: 0xf8dde84e
    4360:			; <UNDEFINED> instruction: 0xf1bbb038
    4364:	sbcle	r0, r4, r0, lsl #30
    4368:			; <UNDEFINED> instruction: 0xf7fe4658
    436c:	pkhbtmi	lr, r2, sl, lsl #17
    4370:			; <UNDEFINED> instruction: 0xf7fe4630
    4374:			; <UNDEFINED> instruction: 0x464ae896
    4378:	ldfpld	f3, [r1], #608	; 0x260
    437c:	ldmdbcs	ip, {r0, r1, r4, r6, sl, fp, ip}^
    4380:	addsmi	sp, r8, #6
    4384:	ldrmi	sp, [sl], -fp, lsl #18
    4388:	ldcpl	12, cr1, [r1], #332	; 0x14c
    438c:	mvnsle	r2, ip, asr r9
    4390:	stmdble	r4, {r3, r4, r7, r9, lr}
    4394:			; <UNDEFINED> instruction: 0xf1093202
    4398:	addmi	r0, r2, #16384	; 0x4000
    439c:	bl	fe839358 <strvisx@@Base+0xfe8255e4>
    43a0:	strmi	r0, [r2, #9]
    43a4:	bl	2fa92c <strvisx@@Base+0x2e6bb8>
    43a8:	ldrmi	r0, [r8], -r0, lsl #6
    43ac:			; <UNDEFINED> instruction: 0xf7fe469b
    43b0:	sxtab16mi	lr, r1, r8, ror #16
    43b4:	subsle	r2, r7, r0, lsl #16
    43b8:	ldrdhi	pc, [ip], -sp
    43bc:	beq	1b807f8 <strvisx@@Base+0x1b6ca84>
    43c0:	stmib	sp, {r9, sl, sp}^
    43c4:	bl	2e13e4 <strvisx@@Base+0x2cd670>
    43c8:	bl	fea45fe8 <strvisx@@Base+0xfea32274>
    43cc:	ldrtmi	r0, [r8], -r6, lsl #2
    43d0:	stmia	ip!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    43d4:	vmull.p8	<illegal reg q8.5>, d0, d4
    43d8:	stccs	0, cr8, [r6], {179}	; 0xb3
    43dc:	adcshi	pc, r0, r0, lsl #6
    43e0:	ldrtmi	r2, [r9], -r7, lsl #6
    43e4:	ldrbmi	r4, [r0], -r2, lsr #12
    43e8:	mrrceq	0, 4, pc, ip, cr15	; <UNPREDICTABLE>
    43ec:	rsbgt	pc, ip, sp, lsl #17
    43f0:	stmda	r6!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    43f4:	strtmi	sl, [r3], #-2846	; 0xfffff4e2
    43f8:			; <UNDEFINED> instruction: 0xf8032100
    43fc:	ldmdavc	fp!, {r0, r1, r3, sl, fp, ip}
    4400:	ldmdale	sp, {r1, r3, r5, r8, r9, fp, sp}
    4404:	stmdble	r0!, {r3, r8, r9, fp, sp}^
    4408:	smlatbeq	r9, r3, r1, pc	; <UNPREDICTABLE>
    440c:	ldmdale	ip, {r0, r5, r8, fp, sp}^
    4410:			; <UNDEFINED> instruction: 0xf001e8df
    4414:	blpl	16db084 <strvisx@@Base+0x16c7310>
    4418:	blpl	16db18c <strvisx@@Base+0x16c7418>
    441c:	blpl	16db190 <strvisx@@Base+0x16c741c>
    4420:	blpl	16db194 <strvisx@@Base+0x16c7420>
    4424:	blpl	16db198 <strvisx@@Base+0x16c7424>
    4428:	bne	16db19c <strvisx@@Base+0x16c7428>
    442c:	blpl	68ada0 <strvisx@@Base+0x67702c>
    4430:	blpl	69b1a4 <strvisx@@Base+0x687430>
    4434:	ldmdals	r3, {r0, r1, r3, r4, r6, r9, fp, ip}
    4438:			; <UNDEFINED> instruction: 0xf7ff4651
    443c:	ldrb	pc, [r1, -r3, ror #22]	; <UNPREDICTABLE>
    4440:	cmpeq	fp, r3, lsr #3	; <UNPREDICTABLE>
    4444:	stmdale	r0, {r0, r8, fp, sp}^
    4448:	svceq	0x0000f1b8
    444c:	strbmi	fp, [r3, #-3864]	; 0xfffff0e8
    4450:	ldmdbge	fp, {r0, r1, r3, r4, r5, r8, ip, lr, pc}
    4454:			; <UNDEFINED> instruction: 0xf7fe4628
    4458:	andcc	lr, r1, r6, asr r9
    445c:	strtmi	sp, [r6], #-59	; 0xffffffc5
    4460:	ldmle	r0!, {r0, r4, r5, r7, r8, sl, lr}
    4464:	strvc	lr, [r6], #-2525	; 0xfffff623
    4468:			; <UNDEFINED> instruction: 0xf7fe4628
    446c:	blls	43e8b4 <strvisx@@Base+0x42ab40>
    4470:			; <UNDEFINED> instruction: 0xd1262b01
    4474:	stmdavs	r1, {r0, r1, r9, sl, fp, ip, pc}^
    4478:	stmdals	r4, {r1, r4, r5, r9, sl, fp, ip}
    447c:	andcs	fp, r1, #24, 30	; 0x60
    4480:	svclt	0x00182800
    4484:	bcs	cc8c <error@@Base+0x30>
    4488:			; <UNDEFINED> instruction: 0xf88dd042
    448c:			; <UNDEFINED> instruction: 0xf811606c
    4490:	bcs	bcf49c <strvisx@@Base+0xbbb728>
    4494:	bls	1785dc <strvisx@@Base+0x164868>
    4498:	mulle	r2, r7, r2
    449c:	bcs	8224cc <strvisx@@Base+0x80e758>
    44a0:	tstcs	r2, sl, asr #32
    44a4:	eorcs	sl, r0, lr, lsl sl
    44a8:	strmi	r4, [sl], #-1043	; 0xfffffbed
    44ac:			; <UNDEFINED> instruction: 0xf8032100
    44b0:			; <UNDEFINED> instruction: 0xf8020c0c
    44b4:	ldmdbge	fp, {r2, r3, sl, fp, ip}
    44b8:			; <UNDEFINED> instruction: 0xf7fe4628
    44bc:	andcc	lr, r1, r4, lsr #18
    44c0:	stmdals	lr, {r0, r3, ip, lr, pc}
    44c4:	svc	0x0098f7fd
    44c8:			; <UNDEFINED> instruction: 0x4651e713
    44cc:			; <UNDEFINED> instruction: 0xf7fe4628
    44d0:	andcc	lr, r1, sl, lsl r9
    44d4:	stmdami	r8!, {r0, r1, r6, r7, r8, ip, lr, pc}
    44d8:			; <UNDEFINED> instruction: 0xf0084478
    44dc:	bls	2c28f0 <strvisx@@Base+0x2aeb7c>
    44e0:	mcrls	6, 0, r4, cr12, cr9, {2}
    44e4:			; <UNDEFINED> instruction: 0xf1a24628
    44e8:			; <UNDEFINED> instruction: 0xf89d0201
    44ec:	blx	fec90590 <strvisx@@Base+0xfec7c81c>
    44f0:	strls	pc, [r0], -r2, lsl #5
    44f4:			; <UNDEFINED> instruction: 0xf7ff0952
    44f8:	stmdacs	r0, {r0, r1, r2, r3, r5, r7, r8, r9, fp, ip, sp, lr, pc}
    44fc:	mcrge	4, 2, pc, cr1, cr15, {1}	; <UNPREDICTABLE>
    4500:	blls	be100 <strvisx@@Base+0xaa38c>
    4504:	stmdals	lr, {r9, sp}
    4508:			; <UNDEFINED> instruction: 0xf00e210a
    450c:	ldrt	pc, [ip], pc, asr #27	; <UNPREDICTABLE>
    4510:	stceq	8, cr15, [r1], {17}
    4514:	andle	r2, fp, pc, lsr #16
    4518:	addmi	r9, r7, #327680	; 0x50000
    451c:	stmdavc	r9, {r1, ip, lr, pc}
    4520:	andle	r2, r5, r0, lsr #18
    4524:			; <UNDEFINED> instruction: 0x46134619
    4528:			; <UNDEFINED> instruction: 0x469ae7bc
    452c:			; <UNDEFINED> instruction: 0xe6d04699
    4530:			; <UNDEFINED> instruction: 0xf88d2300
    4534:	strb	r3, [r4, ip, rrx]
    4538:			; <UNDEFINED> instruction: 0xf88d2300
    453c:	ldr	r3, [sl, sp, rrx]!
    4540:	ldrbtmi	r4, [r8], #-2062	; 0xfffff7f2
    4544:			; <UNDEFINED> instruction: 0xf8cef008
    4548:	stmdami	lr, {r0, r2, r3, r8, fp, lr}
    454c:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    4550:			; <UNDEFINED> instruction: 0xf8c8f008
    4554:	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    4558:	andeq	r5, r2, lr, lsr #25
    455c:	andeq	r0, r0, r0, asr #5
    4560:			; <UNDEFINED> instruction: 0x000111b0
    4564:	andeq	r5, r2, lr, ror r7
    4568:	andeq	r5, r2, r6, asr #14
    456c:	andeq	r5, r2, r2, ror fp
    4570:	andeq	r1, r1, r6, ror #3
    4574:	muleq	r1, lr, r1
    4578:	andeq	r0, r1, r8, lsl #28
    457c:	andeq	r0, r1, r6, lsr #29
    4580:	andeq	r2, r1, r0, lsr #1
    4584:	andeq	r0, r1, lr, ror lr
    4588:	svcmi	0x00f0e92d
    458c:	stc	6, cr4, [sp, #-120]!	; 0xffffff88
    4590:	ldrmi	r8, [r2], r4, lsl #22
    4594:	strmi	r4, [r9], ip, lsl #25
    4598:	ldrbtmi	r4, [ip], #-2956	; 0xfffff474
    459c:	stmiapl	r3!, {r0, r1, r5, r7, ip, sp, pc}^
    45a0:	vstmiami	fp, {s20-s24}
    45a4:			; <UNDEFINED> instruction: 0x9321681b
    45a8:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    45ac:	blx	ff5405c2 <strvisx@@Base+0xff52c84e>
    45b0:	andls	r4, r2, ip, ror r4
    45b4:			; <UNDEFINED> instruction: 0xf0402800
    45b8:	svcls	0x000580bd
    45bc:			; <UNDEFINED> instruction: 0x460307b2
    45c0:			; <UNDEFINED> instruction: 0x46386839
    45c4:	sbchi	pc, r4, r0, lsl #2
    45c8:			; <UNDEFINED> instruction: 0xf0002900
    45cc:			; <UNDEFINED> instruction: 0xf00680f8
    45d0:	ldrmi	r0, [r8], r0, lsl #11
    45d4:			; <UNDEFINED> instruction: 0xf7fde007
    45d8:			; <UNDEFINED> instruction: 0xf857ef64
    45dc:	strmi	r1, [r0, #3844]	; 0xf04
    45e0:			; <UNDEFINED> instruction: 0x4680bf38
    45e4:	stmdavs	r8, {r0, r3, r6, r8, ip, sp, pc}
    45e8:	blcs	ba25fc <strvisx@@Base+0xb8e888>
    45ec:	stfcsd	f5, [r0, #-972]	; 0xfffffc34
    45f0:			; <UNDEFINED> instruction: 0xf857d1f1
    45f4:	stmdbcs	r0, {r2, r8, r9, sl, fp, ip}
    45f8:			; <UNDEFINED> instruction: 0x4651d1f5
    45fc:			; <UNDEFINED> instruction: 0xf7ff4648
    4600:	strmi	pc, [r5], -fp, asr #20
    4604:	svc	0x004cf7fd
    4608:	strtmi	r4, [r8], -r3, lsl #12
    460c:			; <UNDEFINED> instruction: 0xf7fd4498
    4610:	blmi	1c401e8 <strvisx@@Base+0x1c2c474>
    4614:	ldmdavs	r8, {r0, r1, r5, r6, r7, fp, ip, lr}
    4618:	ldcl	7, cr15, [r2, #1012]!	; 0x3f4
    461c:	vpmax.s8	d26, d5, d6
    4620:			; <UNDEFINED> instruction: 0xf7fd4113
    4624:			; <UNDEFINED> instruction: 0xf108ef2c
    4628:	andcc	r0, r1, r2, lsl #2
    462c:			; <UNDEFINED> instruction: 0xf8bdbf14
    4630:	ldrbcs	r5, [r0, #-26]	; 0xffffffe6
    4634:			; <UNDEFINED> instruction: 0xf00f4628
    4638:	stmdacs	r1, {r0, r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, sp, lr, pc}
    463c:	andcs	fp, r1, r8, lsr pc
    4640:	strmi	r9, [r1], -r3
    4644:			; <UNDEFINED> instruction: 0xf00f4628
    4648:	svcls	0x0005fdb7
    464c:	ldmdavs	r9!, {r0, r1, r3, r5, r9, sl, lr}
    4650:	svclt	0x00284285
    4654:			; <UNDEFINED> instruction: 0xf0164603
    4658:	mcr	15, 0, r0, cr8, cr8, {1}
    465c:			; <UNDEFINED> instruction: 0x46383a10
    4660:	stmdbcs	r0, {r1, r2, r3, r4, r5, r6, r8, ip, lr, pc}
    4664:	movwcs	sp, #4196	; 0x1064
    4668:	blmi	16e9270 <strvisx@@Base+0x16d54fc>
    466c:	stmdaeq	r1, {r1, r2, ip, sp, lr, pc}
    4670:	ldrdlt	pc, [r8, #-143]!	; 0xffffff71
    4674:	ldrbtmi	r2, [fp], #-1280	; 0xfffffb00
    4678:	mcr	4, 0, r4, cr9, cr11, {7}
    467c:	blmi	1612ec4 <strvisx@@Base+0x15ff150>
    4680:	mcr	4, 0, r4, cr8, cr11, {3}
    4684:	mla	r3, r0, sl, r3
    4688:	rsbcs	sl, r8, #6, 30
    468c:	movwls	r2, #4352	; 0x1100
    4690:			; <UNDEFINED> instruction: 0xf7fd4638
    4694:	blls	8001c <strvisx@@Base+0x6c2a8>
    4698:	ldmdbpl	r8, {r0, r3, r4, r5, r9, sl, lr}^
    469c:			; <UNDEFINED> instruction: 0xf0053008
    46a0:	ldrtmi	pc, [r9], -fp, asr #26	; <UNPREDICTABLE>
    46a4:	orrvc	pc, r0, #100663296	; 0x6000000
    46a8:	strtmi	r2, [r0], -r1, lsl #4
    46ac:	cdp2	0, 9, cr15, cr10, cr5, {0}
    46b0:	stmdami	ip, {r0, r1, r2, r9, sl, lr}^
    46b4:	ldrbtmi	r4, [r8], #-1593	; 0xfffff9c7
    46b8:	cdp2	0, 12, cr15, cr10, cr11, {0}
    46bc:			; <UNDEFINED> instruction: 0xf7fd4638
    46c0:			; <UNDEFINED> instruction: 0x4620ee9c
    46c4:	mrc	7, 4, APSR_nzcv, cr8, cr13, {7}
    46c8:	strcc	r9, [r4, #-3845]	; 0xfffff0fb
    46cc:	movwlt	r5, #39289	; 0x9979
    46d0:	ldrdcc	pc, [r0], -fp
    46d4:	stmdavs	r9, {r0, r1, r4, r5, r6, r7, r8, fp, ip, sp, pc}
    46d8:	blcs	ba270c <strvisx@@Base+0xb8e998>
    46dc:	ldrteq	sp, [r3], -r1, lsl #2
    46e0:			; <UNDEFINED> instruction: 0x4648d5f3
    46e4:			; <UNDEFINED> instruction: 0xf970f005
    46e8:			; <UNDEFINED> instruction: 0x46074651
    46ec:			; <UNDEFINED> instruction: 0xf9d4f7ff
    46f0:	ldrtmi	r4, [r8], -r4, lsl #12
    46f4:	mcr	7, 4, pc, cr0, cr13, {7}	; <UNPREDICTABLE>
    46f8:	svceq	0x0000f1b8
    46fc:			; <UNDEFINED> instruction: 0xf416d04a
    4700:	blls	164510 <strvisx@@Base+0x15079c>
    4704:	ldmdbpl	fp, {r6, r7, r8, ip, lr, pc}^
    4708:	beq	fe43ff70 <strvisx@@Base+0xfe42c1fc>
    470c:			; <UNDEFINED> instruction: 0xf00b6859
    4710:	bfc	pc, (invalid: 29:22)	; <UNPREDICTABLE>
    4714:			; <UNDEFINED> instruction: 0xf0889b00
    4718:	ldrtmi	r0, [r8], -r1, lsl #16
    471c:	svclt	0x000c2b01
    4720:			; <UNDEFINED> instruction: 0xf0082300
    4724:	tstlt	fp, r1, lsl #6
    4728:			; <UNDEFINED> instruction: 0xf7fd200a
    472c:	stmdals	r5, {r3, r5, r6, r7, r8, sl, fp, sp, lr, pc}
    4730:	blx	540746 <strvisx@@Base+0x52c9d2>
    4734:	blmi	956fec <strvisx@@Base+0x943278>
    4738:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    473c:	blls	85e7ac <strvisx@@Base+0x84aa38>
    4740:	teqle	pc, sl, asr r0	; <UNPREDICTABLE>
    4744:	eorlt	r9, r3, r2, lsl #16
    4748:	blhi	13fa44 <strvisx@@Base+0x12bcd0>
    474c:	svchi	0x00f0e8bd
    4750:	movwls	r2, #13057	; 0x3301
    4754:			; <UNDEFINED> instruction: 0xf0169b02
    4758:	mcr	15, 0, r0, cr8, cr8, {1}
    475c:	addle	r3, r0, r0, lsl sl
    4760:	ldrtmi	fp, [sp], -r9, asr #2
    4764:	mrscs	r2, (UNDEF: 1)
    4768:	blx	ffcc07b0 <strvisx@@Base+0xffcaca3c>
    476c:	svccc	0x0004f855
    4770:	blcs	15f7c <strvisx@@Base+0x2208>
    4774:	bmi	778f58 <strvisx@@Base+0x7651e4>
    4778:	blmi	756060 <strvisx@@Base+0x7422ec>
    477c:	ldrbeq	pc, [r8, #-6]!	; <UNPREDICTABLE>
    4780:	ldrbtmi	r5, [fp], #-2212	; 0xfffff75c
    4784:	eorvs	r2, r5, r4, lsl #4
    4788:	stc	7, cr15, [ip, #-1012]!	; 0xfffffc0c
    478c:	ldmdavs	r9!, {r0, r2, r8, r9, sl, fp, ip, pc}
    4790:			; <UNDEFINED> instruction: 0xe7664638
    4794:	cfmsub32	mvax1, mvfx4, mvfx8, mvfx2
    4798:	vmov	r1, s18
    479c:			; <UNDEFINED> instruction: 0xf00b0a10
    47a0:	blls	104104 <strvisx@@Base+0xf0390>
    47a4:	addsmi	r9, r3, #0, 20
    47a8:	blls	3abbc <strvisx@@Base+0x26e48>
    47ac:	movwls	r3, #769	; 0x301
    47b0:	andcs	lr, sl, r7, lsl #15
    47b4:	movwls	r2, #769	; 0x301
    47b8:	stc	7, cr15, [r0, #1012]!	; 0x3f4
    47bc:			; <UNDEFINED> instruction: 0xf8dde781
    47c0:	ldr	r8, [sl, -r8]
    47c4:	svc	0x0068f7fd
    47c8:	andeq	r5, r2, r6, ror #14
    47cc:	andeq	r0, r0, r0, asr #5
    47d0:	andeq	r5, r2, r0, asr r7
    47d4:	andeq	r0, r0, r8, asr #5
    47d8:	andeq	r0, r1, sl, asr ip
    47dc:	andeq	r5, r2, r0, ror #20
    47e0:	andeq	r1, r1, r0, ror #2
    47e4:	andeq	r1, r1, sl, lsr #2
    47e8:	andeq	r5, r2, r8, asr #11
    47ec:	andeq	r0, r0, ip, lsl #5
    47f0:			; <UNDEFINED> instruction: 0xffffeabf
    47f4:	svcmi	0x00f0e92d
    47f8:	stc	6, cr4, [sp, #-16]!
    47fc:	strmi	r8, [lr], -r4, lsl #22
    4800:			; <UNDEFINED> instruction: 0xf8df4608
    4804:	vmla.f32	s2, s17, s1
    4808:			; <UNDEFINED> instruction: 0xf8df4a10
    480c:			; <UNDEFINED> instruction: 0xf5ad4a9c
    4810:	ldrbtmi	r5, [r9], #-3467	; 0xfffff275
    4814:	ldrbtmi	fp, [ip], #-129	; 0xffffff7f
    4818:	tstcs	r6, #3358720	; 0x334000
    481c:	orrpl	pc, sl, #54525952	; 0x3400000
    4820:	bcs	fe242ba4 <strvisx@@Base+0xfe22ee30>
    4824:	stmiapl	r2!, {r2, r3, r4, r8, r9, ip, sp}
    4828:	andsvs	r6, sl, r2, lsl r8
    482c:	andeq	pc, r0, #79	; 0x4f
    4830:	svc	0x00bef7fd
    4834:	bcs	1e42bb8 <strvisx@@Base+0x1e2ee44>
    4838:	andsls	r4, r5, #2046820352	; 0x7a000000
    483c:	ldmdane	r4!, {r0, r1, r4, r5, sl, fp, ip, lr}
    4840:			; <UNDEFINED> instruction: 0xf0002b00
    4844:			; <UNDEFINED> instruction: 0xf04f8337
    4848:			; <UNDEFINED> instruction: 0xf8cd0b00
    484c:	and	fp, r6, ip, lsr r0
    4850:	tstle	ip, r0, asr #22
    4854:	svccc	0x0001f814
    4858:	bleq	8099c <strvisx@@Base+0x6cc28>
    485c:	blcs	b70d50 <strvisx@@Base+0xb5cfdc>
    4860:	movwcs	sp, #4598	; 0x11f6
    4864:			; <UNDEFINED> instruction: 0xf814930f
    4868:	blcs	14474 <strvisx@@Base+0x700>
    486c:			; <UNDEFINED> instruction: 0xf8dfd1f7
    4870:	strtmi	r1, [r0], -r4, asr #20
    4874:			; <UNDEFINED> instruction: 0xf7fd4479
    4878:	stcpl	15, cr14, [r3], #-624	; 0xfffffd90
    487c:	ldrls	r1, [r1, #-2085]	; 0xfffff7db
    4880:	strteq	pc, [r3], #-419	; 0xfffffe5d
    4884:	vst3.32			; <UNDEFINED> instruction: 0xf484fab4
    4888:	blcs	6e20 <el_source@plt+0x44e4>
    488c:	strcs	fp, [r1], #-3848	; 0xfffff0f8
    4890:	rsble	r2, r9, r0, lsl #24
    4894:	ldrls	r2, [r1], -r0, lsl #10
    4898:	strtmi	r9, [r8], lr, lsl #10
    489c:	strls	r9, [sl, #-1298]	; 0xfffffaee
    48a0:			; <UNDEFINED> instruction: 0x462c9510
    48a4:	stmib	sp, {r0, r3, r5, r7, r9, sl, lr}^
    48a8:	strls	r5, [ip, #-1299]	; 0xfffffaed
    48ac:			; <UNDEFINED> instruction: 0xf50d9509
    48b0:	blls	3d8ee8 <strvisx@@Base+0x3c5174>
    48b4:	stmdavs	sl, {r3, r4, r8, ip, sp}
    48b8:			; <UNDEFINED> instruction: 0xf08b2b00
    48bc:	svclt	0x00180301
    48c0:	andvs	r2, sl, r0, lsl #4
    48c4:	addpl	pc, ip, #54525952	; 0x3400000
    48c8:	ldmdavs	r2, {r2, r3, r4, r9, ip, sp}
    48cc:			; <UNDEFINED> instruction: 0xf0404213
    48d0:	mrcge	2, 0, r8, cr8, cr15, {6}
    48d4:	tstcs	r0, r0, lsr r2
    48d8:			; <UNDEFINED> instruction: 0xf7fd4630
    48dc:	blls	3bfdd4 <strvisx@@Base+0x3ac060>
    48e0:	blcs	7114ec <strvisx@@Base+0x6fd778>
    48e4:	strhi	pc, [r5], r1, lsl #4
    48e8:			; <UNDEFINED> instruction: 0xf013e8df
    48ec:	andseq	r0, sp, sl, ror r8
    48f0:	streq	r0, [r2, #-2278]!	; 0xfffff71a
    48f4:	streq	r0, [r2, #-2179]!	; 0xfffff77d
    48f8:	mvnseq	r0, r8, asr #15
    48fc:	streq	r0, [r3, r1, asr #15]!
    4900:	ldmdbeq	r6!, {r0, r5, r8, fp}
    4904:	ldreq	r0, [r7, -r8, asr #14]!
    4908:	smmlareq	r2, fp, r6, r0
    490c:	teqeq	r9, r8, lsl #15
    4910:	andseq	r0, sp, pc, ror r7
    4914:			; <UNDEFINED> instruction: 0x060c01f8
    4918:	strbeq	r0, [r8, #312]	; 0x138
    491c:			; <UNDEFINED> instruction: 0x077a05b0
    4920:	ldrbeq	r0, [lr, -sl, ror #14]
    4924:	stmdals	r9, {r0, r5, r9, sl}
    4928:	stcl	7, cr15, [r6, #-1012]!	; 0xfffffc0c
    492c:			; <UNDEFINED> instruction: 0xf7fd4648
    4930:	blls	3bfec8 <strvisx@@Base+0x3ac154>
    4934:	andseq	pc, r2, r3, lsr #3
    4938:			; <UNDEFINED> instruction: 0xf080fab0
    493c:			; <UNDEFINED> instruction: 0xf8df0940
    4940:			; <UNDEFINED> instruction: 0xf50d1978
    4944:			; <UNDEFINED> instruction: 0xf8df538a
    4948:	tstcc	ip, #100, 18	; 0x190000
    494c:	stmpl	sl, {r0, r3, r4, r5, r6, sl, lr}
    4950:	ldmdavs	sl, {r0, r4, fp, sp, lr}
    4954:			; <UNDEFINED> instruction: 0xf0414051
    4958:			; <UNDEFINED> instruction: 0xf50d85bc
    495c:	andlt	r5, r1, fp, lsl #27
    4960:	blhi	13fc5c <strvisx@@Base+0x12bee8>
    4964:	svchi	0x00f0e8bd
    4968:	qasxmi	sl, r3, r0
    496c:	strtmi	r4, [r8], -r2, lsr #12
    4970:	strls	r4, [r0], #-1593	; 0xfffff9c7
    4974:	mrc2	7, 7, pc, cr4, cr14, {7}
    4978:	stmdacs	r0, {r0, r7, r9, sl, lr}
    497c:	strhi	pc, [r7], #-0
    4980:	ldmdbge	r8!, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    4984:			; <UNDEFINED> instruction: 0xf8df46a0
    4988:	stmdavs	r5, {r3, r4, r5, r8, fp, lr}
    498c:	ldrbtmi	r4, [ip], #-1274	; 0xfffffb06
    4990:	strtmi	fp, [r9], -r5, lsr #2
    4994:			; <UNDEFINED> instruction: 0xf7fd4650
    4998:	strhlt	lr, [r8, #-200]	; 0xffffff38
    499c:	tstcs	r1, r0, asr #12
    49a0:			; <UNDEFINED> instruction: 0xf9d6f010
    49a4:	svcge	0x000cf854
    49a8:			; <UNDEFINED> instruction: 0xf1ba4680
    49ac:	mvnle	r0, r0, lsl #30
    49b0:	ldmdavc	fp, {r0, r4, r8, r9, fp, ip, pc}
    49b4:			; <UNDEFINED> instruction: 0xf0002b21
    49b8:			; <UNDEFINED> instruction: 0xf8df8264
    49bc:	andcs	r4, ip, #8, 18	; 0x20000
    49c0:	blx	95bba <strvisx@@Base+0x81e46>
    49c4:	stmdavs	r3!, {r3, sl, lr}^
    49c8:	movwcc	r9, #4878	; 0x130e
    49cc:	strbhi	pc, [r7, #-1]	; <UNPREDICTABLE>
    49d0:	blcc	6b610 <strvisx@@Base+0x5789c>
    49d4:	vpadd.i8	d2, d1, d10
    49d8:	ldm	pc, {r3, r9, sl, pc}^	; <UNPREDICTABLE>
    49dc:	subseq	pc, fp, r3, lsl r0	; <UNPREDICTABLE>
    49e0:	eorseq	r0, ip, r9, asr r0
    49e4:	addseq	r0, ip, #89	; 0x59
    49e8:	bicseq	r0, r0, #148, 6	; 0x50000002
    49ec:	sbcseq	r0, r5, #91	; 0x5b
    49f0:	andseq	r0, sp, r9, ror #7
    49f4:	rscseq	r0, ip, #208, 6	; 0x40000003
    49f8:	andseq	r0, sp, ip, lsr r0
    49fc:	bicseq	r0, r0, #148, 6	; 0x50000002
    4a00:	orrseq	r0, r4, #208, 6	; 0x40000003
    4a04:	orrseq	r0, r4, #-1409286143	; 0xac000001
    4a08:	andseq	r0, sp, sp, lsl r0
    4a0c:	rsbeq	r0, lr, #27
    4a10:	bicseq	r0, r0, #208, 6	; 0x40000003
    4a14:	strb	r2, [r0, -r0, lsl #10]
    4a18:	ldmdavs	sl!, {r0, sl, sp}
    4a1c:	ldrbmi	r4, [r0], -r9, asr #12
    4a20:	blx	ff1c2a24 <strvisx@@Base+0xff1aecb0>
    4a24:	strmi	r1, [r5], -r2, asr #24
    4a28:			; <UNDEFINED> instruction: 0x83b1f000
    4a2c:			; <UNDEFINED> instruction: 0x46296838
    4a30:			; <UNDEFINED> instruction: 0xf9c0f010
    4a34:	vsub.i8	d2, d1, d0
    4a38:	stccs	0, cr8, [r0], {183}	; 0xb7
    4a3c:	ldrhi	pc, [r3, #65]	; 0x41
    4a40:	strtmi	r4, [r5], -r0, lsr #13
    4a44:	ldrls	r4, [r2], #-1697	; 0xfffff95f
    4a48:	ldrls	r9, [r0], #-1034	; 0xfffffbf6
    4a4c:	ldrmi	lr, [r3], #-2509	; 0xfffff633
    4a50:	strls	r9, [r9], #-1036	; 0xfffffbf4
    4a54:	strcs	lr, [r8, #-1835]	; 0xfffff8d5
    4a58:			; <UNDEFINED> instruction: 0xf04f9c15
    4a5c:			; <UNDEFINED> instruction: 0xf8df0c01
    4a60:	tstcs	r0, r8, ror #16
    4a64:	stmdacs	r4!, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    4a68:	stmdacc	r4!, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    4a6c:			; <UNDEFINED> instruction: 0xf8df5820
    4a70:			; <UNDEFINED> instruction: 0xf8c08864
    4a74:	strtmi	ip, [r0], -r0
    4a78:	ldrbtmi	r5, [r8], #2210	; 0x8a2
    4a7c:	andls	r6, r9, #60, 16	; 0x3c0000
    4a80:	andgt	pc, r0, r2, asr #17
    4a84:	strls	r5, [sl, -r3, asr #17]
    4a88:	strmi	r4, [sp], -pc, lsr #12
    4a8c:	and	r6, r7, r9, lsl r0
    4a90:	strb	r2, [r1, r0, lsl #10]!
    4a94:	strb	r2, [r0, r0, lsl #8]
    4a98:			; <UNDEFINED> instruction: 0xf0412868
    4a9c:	strcs	r8, [r1, #-279]	; 0xfffffee9
    4aa0:	strbmi	r4, [r9], -r2, asr #12
    4aa4:			; <UNDEFINED> instruction: 0xf00d4620
    4aa8:	mcrrne	9, 11, pc, r3, cr13	; <UNPREDICTABLE>
    4aac:	ldrls	sp, [r3, #-500]	; 0xfffffe0c
    4ab0:	ldmib	sp, {r0, r2, r3, r4, r5, r9, sl, lr}^
    4ab4:	ldmdavs	ip, {r0, r3, r8, r9, sl, ip, sp}
    4ab8:			; <UNDEFINED> instruction: 0xf0011c60
    4abc:	ldmdavs	r8!, {r2, r7, r8, sl, pc}
    4ac0:			; <UNDEFINED> instruction: 0xf0104621
    4ac4:	stmdacs	r0, {r0, r1, r2, r4, r5, r6, r8, fp, ip, sp, lr, pc}
    4ac8:	ldrhi	pc, [r5], #833	; 0x341
    4acc:	svc	0x0018f7fd
    4ad0:	stcge	6, cr4, [r8, #-168]!	; 0xffffff58
    4ad4:	stmdbge	r4!, {r8, r9, sp}
    4ad8:	strmi	r6, [r0], r3
    4adc:	eoreq	pc, r4, r9, asr r8	; <UNPREDICTABLE>
    4ae0:	movwls	r0, #37027	; 0x90a3
    4ae4:	stc	7, cr15, [sl, #-1012]!	; 0xfffffc0c
    4ae8:	ldccc	8, cr15, [r0], {85}	; 0x55
    4aec:	eorcs	pc, r4, r9, asr r8	; <UNPREDICTABLE>
    4af0:			; <UNDEFINED> instruction: 0xf001429a
    4af4:	ldmdavc	fp, {r7, sl, pc}
    4af8:			; <UNDEFINED> instruction: 0xf0412b00
    4afc:			; <UNDEFINED> instruction: 0xf100847c
    4b00:	strmi	r4, [r5], -r0, lsl #6
    4b04:	movwcc	r3, #15105	; 0x3b01
    4b08:			; <UNDEFINED> instruction: 0xf8d8d904
    4b0c:	blcs	890b14 <strvisx@@Base+0x87cda0>
    4b10:	ldrbthi	pc, [r1], #-1	; <UNPREDICTABLE>
    4b14:	vmlal.s8	q9, d1, d0
    4b18:	blls	3a5cd8 <strvisx@@Base+0x391f64>
    4b1c:			; <UNDEFINED> instruction: 0xf0012b0e
    4b20:	ldmdavs	r8!, {r1, r2, r8, pc}
    4b24:			; <UNDEFINED> instruction: 0xf0104621
    4b28:	stmdacs	r1, {r0, r2, r6, r8, fp, ip, sp, lr, pc}
    4b2c:	ldrbhi	pc, [r3], #833	; 0x341	; <UNPREDICTABLE>
    4b30:			; <UNDEFINED> instruction: 0xf04f9b09
    4b34:			; <UNDEFINED> instruction: 0xf8cd0800
    4b38:	strbmi	r8, [r4], -r8, asr #32
    4b3c:			; <UNDEFINED> instruction: 0xf8cd4499
    4b40:			; <UNDEFINED> instruction: 0xf8cd8028
    4b44:			; <UNDEFINED> instruction: 0xf8d98040
    4b48:	strbmi	r0, [r1], r4
    4b4c:	blx	6c0b74 <strvisx@@Base+0x6ace00>
    4b50:	subshi	pc, r0, sp, asr #17
    4b54:	eorshi	pc, r0, sp, asr #17
    4b58:	strt	r9, [r8], r9
    4b5c:	blls	58db68 <strvisx@@Base+0x579df4>
    4b60:			; <UNDEFINED> instruction: 0xf50d681f
    4b64:	tstcc	r8, #140, 6	; 0x30000002
    4b68:	mcr	8, 0, r6, cr8, cr11, {0}
    4b6c:	blcc	235b4 <strvisx@@Base+0xf840>
    4b70:	movwcs	fp, #7960	; 0x1f18
    4b74:			; <UNDEFINED> instruction: 0xf1b9930f
    4b78:			; <UNDEFINED> instruction: 0xf0000f00
    4b7c:			; <UNDEFINED> instruction: 0x464887f9
    4b80:			; <UNDEFINED> instruction: 0xf008ad24
    4b84:			; <UNDEFINED> instruction: 0x4639f9ff
    4b88:	blx	11c2b8c <strvisx@@Base+0x11aee18>
    4b8c:	tstcs	r0, r0, lsr r2
    4b90:	strtmi	r4, [r8], -r3, lsl #12
    4b94:			; <UNDEFINED> instruction: 0xf7fd9311
    4b98:	svcls	0x0009ebde
    4b9c:			; <UNDEFINED> instruction: 0x0738f8df
    4ba0:	ldrbtmi	r4, [r8], #-1593	; 0xfffff9c7
    4ba4:			; <UNDEFINED> instruction: 0xf948f008
    4ba8:	andcs	r4, r0, #45088768	; 0x2b00000
    4bac:			; <UNDEFINED> instruction: 0x46382118
    4bb0:	blx	1f40bf0 <strvisx@@Base+0x1f2ce7c>
    4bb4:			; <UNDEFINED> instruction: 0xf0412800
    4bb8:	blls	465dcc <strvisx@@Base+0x452058>
    4bbc:			; <UNDEFINED> instruction: 0xf0002b00
    4bc0:	cdp	7, 1, cr8, cr8, cr13, {7}
    4bc4:	ldmdbls	r1, {r4, r9, fp}
    4bc8:			; <UNDEFINED> instruction: 0xff88f7fe
    4bcc:	blcs	5ed80 <strvisx@@Base+0x4b00c>
    4bd0:	stmdble	r2, {r2, r4, ip, pc}
    4bd4:			; <UNDEFINED> instruction: 0xf0012800
    4bd8:	stmdbvs	fp!, {r2, r3, r4, r6, r7, sl, pc}
    4bdc:	stmdbcs	r0, {r0, r3, r4, fp, sp, lr}
    4be0:	strhi	pc, [r4], #-1
    4be4:	usatcc	pc, #20, pc, asr #17	; <UNPREDICTABLE>
    4be8:	usatlt	pc, #20, pc, asr #17	; <UNPREDICTABLE>
    4bec:	usatge	pc, #20, pc, asr #17	; <UNPREDICTABLE>
    4bf0:	tstls	r3, #2063597568	; 0x7b000000
    4bf4:			; <UNDEFINED> instruction: 0xf8cd2300
    4bf8:	ldrbtmi	r9, [fp], #84	; 0x54
    4bfc:			; <UNDEFINED> instruction: 0x469844fa
    4c00:			; <UNDEFINED> instruction: 0x4699461f
    4c04:	sub	r9, r4, r6, lsl r6
    4c08:			; <UNDEFINED> instruction: 0xf0002b00
    4c0c:			; <UNDEFINED> instruction: 0x460187f4
    4c10:			; <UNDEFINED> instruction: 0xf0044618
    4c14:	pkhtbmi	pc, r0, r9, asr #29	; <UNPREDICTABLE>
    4c18:			; <UNDEFINED> instruction: 0xf7fd4630
    4c1c:	ldmib	fp, {r1, r2, r3, r5, r6, r7, r8, r9, fp, sp, lr, pc}^
    4c20:	tstmi	r4, #134217730	; 0x8000002
    4c24:	stmdbvs	fp!, {r0, r1, r4, r6, r8, fp, ip, sp, pc}
    4c28:	ldmibpl	r9, {r1, r6, r9, sl, lr}^
    4c2c:			; <UNDEFINED> instruction: 0xf0402c00
    4c30:			; <UNDEFINED> instruction: 0xf8df87eb
    4c34:	ldrbtmi	r0, [r8], #-1716	; 0xfffff94c
    4c38:	stc2	0, cr15, [sl], {11}
    4c3c:	ldmibpl	r9, {r0, r1, r3, r5, r8, fp, sp, lr}^
    4c40:	tstls	r0, r8, lsl #12
    4c44:	stc	7, cr15, [ip], #-1012	; 0xfffffc0c
    4c48:	orrcs	lr, r4, #3571712	; 0x368000
    4c4c:	movwmi	r9, #47372	; 0xb90c
    4c50:	ldmdbls	r0, {r1, r3, r8, r9, fp, ip, pc}
    4c54:			; <UNDEFINED> instruction: 0x2601bf14
    4c58:	tstmi	r3, #0, 12
    4c5c:	movwcs	fp, #7956	; 0x1f14
    4c60:			; <UNDEFINED> instruction: 0xb1282300
    4c64:			; <UNDEFINED> instruction: 0xf8104408
    4c68:	bcs	bcfc74 <strvisx@@Base+0xbbbf00>
    4c6c:	andhi	pc, r7, r1
    4c70:	beq	4404d8 <strvisx@@Base+0x42c764>
    4c74:	stmib	sp, {r1, r6, r9, sl, lr}^
    4c78:			; <UNDEFINED> instruction: 0xf0044600
    4c7c:	andcc	pc, r1, r1, ror fp	; <UNPREDICTABLE>
    4c80:			; <UNDEFINED> instruction: 0xf04fbf08
    4c84:	stmdbvs	fp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, fp, ip, sp}
    4c88:	ldmibpl	r9, {r2, r8, r9, sl, ip, sp}^
    4c8c:			; <UNDEFINED> instruction: 0xf0002900
    4c90:	blls	4e6bd8 <strvisx@@Base+0x4d2e64>
    4c94:	blcs	1ed08 <strvisx@@Base+0xaf94>
    4c98:	strbhi	pc, [fp, r0, asr #32]	; <UNPREDICTABLE>
    4c9c:	andcs	sl, r3, r0, lsr sl
    4ca0:	ldcl	7, cr15, [r4], {253}	; 0xfd
    4ca4:	mcrrne	9, 2, r6, r2, cr11	; <UNPREDICTABLE>
    4ca8:	ldrhi	pc, [r4, r0]
    4cac:			; <UNDEFINED> instruction: 0xf00859d8
    4cb0:	strmi	pc, [r6], -r9, ror #18
    4cb4:	stc	7, cr15, [r0], {253}	; 0xfd
    4cb8:			; <UNDEFINED> instruction: 0xf0012800
    4cbc:	stmdavs	fp!, {r4, r5, r6, pc}^
    4cc0:	blls	44f8cc <strvisx@@Base+0x43bb58>
    4cc4:	blcs	3934c <strvisx@@Base+0x255d8>
    4cc8:	ldrhi	pc, [r5, r0]
    4ccc:	bcs	2b524 <strvisx@@Base+0x177b0>
    4cd0:	ldmdals	r1, {r0, r2, r3, r4, r7, r8, ip, lr, pc}
    4cd4:			; <UNDEFINED> instruction: 0xf956f008
    4cd8:	ldr	r4, [sp, r0, lsl #13]
    4cdc:	blls	58dce8 <strvisx@@Base+0x579f74>
    4ce0:	stmdals	r9, {r2, r5, r8, sl, fp, sp, pc}
    4ce4:	tstls	pc, r9, lsl r8	; <UNPREDICTABLE>
    4ce8:			; <UNDEFINED> instruction: 0xf94cf008
    4cec:			; <UNDEFINED> instruction: 0xf7ff990f
    4cf0:			; <UNDEFINED> instruction: 0xf50df993
    4cf4:	tstcc	r8, #140, 6	; 0x30000002
    4cf8:	eorscs	r2, r0, #0, 2
    4cfc:	bne	16ded70 <strvisx@@Base+0x16caffc>
    4d00:	movwcs	fp, #7960	; 0x1f18
    4d04:	strmi	r9, [r7], -pc, lsl #6
    4d08:	beq	440534 <strvisx@@Base+0x42c7c0>
    4d0c:			; <UNDEFINED> instruction: 0xf7fd4628
    4d10:			; <UNDEFINED> instruction: 0xf8dfeb22
    4d14:			; <UNDEFINED> instruction: 0x463905d8
    4d18:			; <UNDEFINED> instruction: 0xf0084478
    4d1c:	movwcs	pc, #2189	; 0x88d	; <UNPREDICTABLE>
    4d20:	beq	440588 <strvisx@@Base+0x42c814>
    4d24:	andcs	r4, r8, #59768832	; 0x3900000
    4d28:			; <UNDEFINED> instruction: 0xf0059500
    4d2c:			; <UNDEFINED> instruction: 0x4603fcd9
    4d30:	stmdacs	r0, {r0, r1, r4, ip, pc}
    4d34:			; <UNDEFINED> instruction: 0x83a7f041
    4d38:			; <UNDEFINED> instruction: 0xf1b9686b
    4d3c:	svclt	0x00180f00
    4d40:	vqdmulh.s<illegal width 8>	d2, d1, d1
    4d44:	stmdbvs	fp!, {r1, r2, pc}
    4d48:	stmdacs	r0, {r3, r4, fp, sp, lr}
    4d4c:	cmphi	r1, #1	; <UNPREDICTABLE>
    4d50:	ldrcc	pc, [ip, #2271]	; 0x8df
    4d54:			; <UNDEFINED> instruction: 0xf8df2700
    4d58:	ldrbtmi	fp, [fp], #-1436	; 0xfffffa64
    4d5c:			; <UNDEFINED> instruction: 0xf8df9311
    4d60:	ldrbtmi	r3, [fp], #1432	; 0x598
    4d64:			; <UNDEFINED> instruction: 0x464e9614
    4d68:	mrc	4, 0, r4, cr8, cr11, {3}
    4d6c:	vmov	s16, sl
    4d70:	umaal	r3, r9, r0, sl
    4d74:			; <UNDEFINED> instruction: 0xf0002e00
    4d78:			; <UNDEFINED> instruction: 0x46498092
    4d7c:			; <UNDEFINED> instruction: 0xf0044630
    4d80:	strmi	pc, [r1], r3, lsr #28
    4d84:			; <UNDEFINED> instruction: 0xf7fd4640
    4d88:	ldmib	fp, {r3, r4, r5, r8, r9, fp, sp, lr, pc}^
    4d8c:	movwmi	r1, #50050	; 0xc382
    4d90:	stmdbvs	fp!, {r0, r1, r3, r6, r8, fp, ip, sp, pc}
    4d94:	ldmibpl	r9, {r1, r3, r6, r9, sl, lr}^
    4d98:			; <UNDEFINED> instruction: 0xf0402c00
    4d9c:	cdp	0, 1, cr8, cr8, cr5, {4}
    4da0:			; <UNDEFINED> instruction: 0xf00b0a90
    4da4:	stmdbvs	fp!, {r0, r2, r4, r6, r8, r9, fp, ip, sp, lr, pc}
    4da8:			; <UNDEFINED> instruction: 0x460859d9
    4dac:			; <UNDEFINED> instruction: 0xf7fd9110
    4db0:			; <UNDEFINED> instruction: 0xf8dfeb78
    4db4:	bls	2be2dc <strvisx@@Base+0x2aa568>
    4db8:			; <UNDEFINED> instruction: 0xf8de44fe
    4dbc:			; <UNDEFINED> instruction: 0xf8de1210
    4dc0:	movwmi	r3, #41492	; 0xa214
    4dc4:	svclt	0x0014990c
    4dc8:	andcs	r2, r0, #268435456	; 0x10000000
    4dcc:	ldmdbls	r0, {r0, r1, r3, r8, r9, lr}
    4dd0:	movwcs	fp, #7956	; 0x1f14
    4dd4:			; <UNDEFINED> instruction: 0xb1202300
    4dd8:			; <UNDEFINED> instruction: 0xf8104408
    4ddc:	stmdacs	pc!, {r0, sl, fp}	; <UNPREDICTABLE>
    4de0:	stmib	sp, {r0, r3, r4, r5, ip, lr, pc}^
    4de4:	ldrbmi	r4, [r0], -r1, lsl #6
    4de8:	movwcs	r9, #512	; 0x200
    4dec:			; <UNDEFINED> instruction: 0xf003464a
    4df0:	andcc	pc, r1, r3, ror #27
    4df4:	strbmi	sp, [r8], -r1, asr #32
    4df8:			; <UNDEFINED> instruction: 0xf7fd3704
    4dfc:	stmdbvs	fp!, {r1, r2, r3, r4, r5, r6, r7, r9, fp, sp, lr, pc}
    4e00:	stmdacs	r0, {r3, r4, r6, r7, r8, fp, ip, lr}
    4e04:	ldrbhi	pc, [r0, -r0]	; <UNPREDICTABLE>
    4e08:	ldmdavs	fp, {r0, r4, r8, r9, fp, ip, pc}
    4e0c:			; <UNDEFINED> instruction: 0xf0402b00
    4e10:			; <UNDEFINED> instruction: 0xf008874b
    4e14:			; <UNDEFINED> instruction: 0x4680f8b7
    4e18:	bl	13c2e14 <strvisx@@Base+0x13af0a0>
    4e1c:	stmdacs	r0, {r0, r7, r9, sl, lr}
    4e20:	strhi	pc, [ip, r0]!
    4e24:	bcs	5efd4 <strvisx@@Base+0x4b260>
    4e28:	mvfcsdp	f5, f4
    4e2c:	bge	c38f10 <strvisx@@Base+0xc2519c>
    4e30:	andcs	r4, r3, r1, lsr r6
    4e34:			; <UNDEFINED> instruction: 0xf7fd9210
    4e38:	andcc	lr, r1, sl, lsl #24
    4e3c:	bls	438e5c <strvisx@@Base+0x4250e8>
    4e40:	vst2.8	{d6,d8}, [r2 :64], r2
    4e44:			; <UNDEFINED> instruction: 0xf5b24270
    4e48:	addsle	r4, r6, r0, lsl #31
    4e4c:			; <UNDEFINED> instruction: 0xf0084630
    4e50:	pkhbtmi	pc, r1, r9, lsl #17	; <UNPREDICTABLE>
    4e54:			; <UNDEFINED> instruction: 0xf8dee796
    4e58:	ldmdals	r2, {r3, r4, r9, lr, pc}
    4e5c:	andeq	lr, ip, r0, asr sl
    4e60:	strhcs	sp, [r1], -pc	; <UNPREDICTABLE>
    4e64:	movwmi	lr, #10701	; 0x29cd
    4e68:	movwcs	r9, #512	; 0x200
    4e6c:	strbmi	r9, [sl], -r1
    4e70:			; <UNDEFINED> instruction: 0xf0044650
    4e74:	andcc	pc, r1, sp, asr #30
    4e78:			; <UNDEFINED> instruction: 0xf04fd1bd
    4e7c:	tstls	r3, #-67108861	; 0xfc000003
    4e80:	blls	47ed6c <strvisx@@Base+0x46aff8>
    4e84:	movwcc	r2, #5376	; 0x1500
    4e88:	tstcs	r8, #1140850688	; 0x44000000
    4e8c:	str	r9, [r4, #-782]	; 0xfffffcf2
    4e90:	strbteq	pc, [ip], #-2271	; 0xfffff721	; <UNPREDICTABLE>
    4e94:	ldrbtmi	r4, [r8], #-1585	; 0xfffff9cf
    4e98:	blx	ff6c0ecc <strvisx@@Base+0xff6ad158>
    4e9c:			; <UNDEFINED> instruction: 0x4648e519
    4ea0:			; <UNDEFINED> instruction: 0xf870f008
    4ea4:	strb	r4, [sp, -r1, lsl #13]!
    4ea8:	ldrbeq	pc, [r8], #-2271	; 0xfffff721	; <UNPREDICTABLE>
    4eac:			; <UNDEFINED> instruction: 0xf00b4478
    4eb0:	ldrb	pc, [r8, -pc, asr #21]!	; <UNPREDICTABLE>
    4eb4:	movwls	r4, #63131	; 0xf69b
    4eb8:			; <UNDEFINED> instruction: 0x4649e4d9
    4ebc:			; <UNDEFINED> instruction: 0x4650683a
    4ec0:			; <UNDEFINED> instruction: 0xf876f7ff
    4ec4:	strmi	r1, [r4], -r1, asr #24
    4ec8:	msrhi	SPSR_c, r0
    4ecc:	stmdaeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    4ed0:	subhi	pc, r0, sp, asr #17
    4ed4:			; <UNDEFINED> instruction: 0x46216838
    4ed8:			; <UNDEFINED> instruction: 0xff6cf00f
    4edc:	vsub.i8	d18, d1, d1
    4ee0:			; <UNDEFINED> instruction: 0xf85982c5
    4ee4:	adceq	r0, r4, r4, lsr #32
    4ee8:			; <UNDEFINED> instruction: 0xf84cf008
    4eec:	strcs	r4, [r0, #-1100]	; 0xfffffbb4
    4ef0:			; <UNDEFINED> instruction: 0x46079512
    4ef4:	stmdavs	r0!, {r0, r3, ip, pc}^
    4ef8:			; <UNDEFINED> instruction: 0xf008462c
    4efc:	strmi	pc, [r1], r3, asr #16
    4f00:			; <UNDEFINED> instruction: 0xf7fe4638
    4f04:			; <UNDEFINED> instruction: 0x4648f95b
    4f08:			; <UNDEFINED> instruction: 0xf958f7fe
    4f0c:	stmib	sp, {r1, r3, r8, sl, ip, pc}^
    4f10:	strls	r5, [ip, #-1299]	; 0xfffffaed
    4f14:	cfldrsls	mvf14, [r5, #-812]	; 0xfffffcd4
    4f18:	stfmie	f2, [fp]
    4f1c:	tstls	r4, r1
    4f20:	stmdbpl	ip!, {r1, r3, r5, r6, r7, r9, fp, lr}
    4f24:			; <UNDEFINED> instruction: 0xe3a8f8df
    4f28:	eorvs	r9, r0, r3, lsl r1
    4f2c:	ldmdavs	ip!, {r0, r1, r3, r5, r7, fp, ip, lr}
    4f30:	movwls	r6, #36888	; 0x9018
    4f34:	andcc	pc, lr, r5, asr r8	; <UNPREDICTABLE>
    4f38:	ldrbtmi	r4, [sp], #-3571	; 0xfffff20d
    4f3c:			; <UNDEFINED> instruction: 0x462a6019
    4f40:	strtmi	r4, [r0], -r9, asr #12
    4f44:			; <UNDEFINED> instruction: 0xff6ef00c
    4f48:			; <UNDEFINED> instruction: 0xf0011c43
    4f4c:	stmdacs	r8!, {r0, r1, r2, r3, r4, r6, r7, r8, pc}^
    4f50:	ldrbhi	pc, [r6], r0	; <UNPREDICTABLE>
    4f54:			; <UNDEFINED> instruction: 0xf0002869
    4f58:			; <UNDEFINED> instruction: 0xf04f8680
    4f5c:	blmi	ffad1b60 <strvisx@@Base+0xffabddec>
    4f60:	strcs	r9, [r0, #-526]	; 0xfffffdf2
    4f64:			; <UNDEFINED> instruction: 0x46519a15
    4f68:	strtmi	r4, [r8], r9, ror #17
    4f6c:	strtmi	r4, [r9], ip, lsr #12
    4f70:	ldrbtmi	r5, [r8], #-2259	; 0xfffff72d
    4f74:	strls	r9, [sl, #-1298]	; 0xfffffaee
    4f78:	ldrls	r6, [r0, #-2074]	; 0xfffff7e6
    4f7c:			; <UNDEFINED> instruction: 0xf007950c
    4f80:	strls	pc, [r9, #-3693]	; 0xfffff193
    4f84:	ldr	r9, [r2], #1553	; 0x611
    4f88:	strcs	r9, [r1, #-3093]	; 0xfffff3eb
    4f8c:	smlabtcs	r0, lr, r8, r4
    4f90:	strmi	r4, [r8], lr, asr #21
    4f94:	stmdapl	r0!, {r1, r2, r3, r6, r7, r8, r9, fp, lr}
    4f98:	strtmi	r6, [r0], -r5
    4f9c:	ldmdavs	ip!, {r1, r5, r7, fp, ip, lr}
    4fa0:	andls	r6, r9, #21
    4fa4:	ldclmi	8, cr5, [fp, #780]	; 0x30c
    4fa8:	ldrbtmi	r6, [sp], #-25	; 0xffffffe7
    4fac:	ldmdacs	r3!, {r2, sp, lr, pc}^
    4fb0:	strbhi	pc, [fp, -r0, asr #32]!	; <UNPREDICTABLE>
    4fb4:	stmdaeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    4fb8:	strtmi	r4, [sl], -r9, asr #12
    4fbc:			; <UNDEFINED> instruction: 0xf00c4620
    4fc0:	mcrrne	15, 3, pc, r1, cr1	; <UNPREDICTABLE>
    4fc4:	blls	279798 <strvisx@@Base+0x265a24>
    4fc8:	stclne	8, cr6, [r2], #-112	; 0xffffff90
    4fcc:	rscshi	pc, lr, #1
    4fd0:	tstls	r0, #0, 6
    4fd4:	ldmdbls	r5, {r1, r2, r3, r4, r5, r6, r8, r9, sl, sp, lr, pc}
    4fd8:	stceq	0, cr15, [r1], {79}	; 0x4f
    4fdc:			; <UNDEFINED> instruction: 0xf64f48ba
    4fe0:	bmi	fee9e7c8 <strvisx@@Base+0xfee8aa54>
    4fe4:	ldrbvc	pc, [pc, #1743]!	; 56bb <el_source@plt+0x2d7f>	; <UNPREDICTABLE>
    4fe8:			; <UNDEFINED> instruction: 0xf04f4bb9
    4fec:	stmdapl	r8, {r9, sl, fp}
    4ff0:	msrhi	CPSR_s, #14614528	; 0xdf0000
    4ff4:			; <UNDEFINED> instruction: 0xf8c0683c
    4ff8:	strmi	ip, [r8], -r0
    4ffc:	smlabbcs	r8, sl, r8, r5
    5000:	ldrbtmi	r9, [r8], #272	; 0x110
    5004:			; <UNDEFINED> instruction: 0xf8c29209
    5008:	stmiapl	r3, {lr, pc}^
    500c:	and	pc, r0, r3, asr #17
    5010:	strbmi	r4, [r2], -r9, asr #12
    5014:			; <UNDEFINED> instruction: 0xf00c4620
    5018:	mcrrne	15, 0, pc, r1, cr5	; <UNPREDICTABLE>
    501c:	ldrhi	pc, [r2, r0]
    5020:	stmdacs	r3, {r0, r4, r5, fp, ip, sp}^
    5024:	msrhi	LR_usr, r0
    5028:			; <UNDEFINED> instruction: 0xf010e8df
    502c:			; <UNDEFINED> instruction: 0x0124011e
    5030:			; <UNDEFINED> instruction: 0x01240124
    5034:			; <UNDEFINED> instruction: 0x01240124
    5038:			; <UNDEFINED> instruction: 0x01240124
    503c:			; <UNDEFINED> instruction: 0x01240124
    5040:			; <UNDEFINED> instruction: 0x01240124
    5044:			; <UNDEFINED> instruction: 0x01240124
    5048:			; <UNDEFINED> instruction: 0x01240124
    504c:			; <UNDEFINED> instruction: 0x01240124
    5050:			; <UNDEFINED> instruction: 0x01240124
    5054:			; <UNDEFINED> instruction: 0x01240124
    5058:			; <UNDEFINED> instruction: 0x01240124
    505c:			; <UNDEFINED> instruction: 0x01240124
    5060:			; <UNDEFINED> instruction: 0x01240124
    5064:			; <UNDEFINED> instruction: 0x01240124
    5068:			; <UNDEFINED> instruction: 0x01240124
    506c:			; <UNDEFINED> instruction: 0x01240124
    5070:			; <UNDEFINED> instruction: 0x01240117
    5074:			; <UNDEFINED> instruction: 0x01240124
    5078:			; <UNDEFINED> instruction: 0x01240124
    507c:			; <UNDEFINED> instruction: 0x01240124
    5080:			; <UNDEFINED> instruction: 0x01240124
    5084:			; <UNDEFINED> instruction: 0x01240124
    5088:			; <UNDEFINED> instruction: 0x01240124
    508c:			; <UNDEFINED> instruction: 0x01240112
    5090:			; <UNDEFINED> instruction: 0x01240124
    5094:	tsteq	sp, r4, lsr #2
    5098:	tsteq	r8, r4, lsr #2
    509c:			; <UNDEFINED> instruction: 0x01240124
    50a0:	tsteq	r1, r4, lsr #2
    50a4:	rscseq	r0, sl, r4, lsr #2
    50a8:			; <UNDEFINED> instruction: 0x01240124
    50ac:	rscseq	r0, r5, r4, lsr #2
    50b0:	rsceq	r0, lr, r4, lsr #2
    50b4:	strcs	r9, [r1, #-3093]	; 0xfffff3eb
    50b8:	smlabbcs	r0, r3, r8, r4
    50bc:	strmi	r4, [r8], r3, lsl #21
    50c0:	stmdapl	r0!, {r0, r1, r7, r8, r9, fp, lr}
    50c4:	strtmi	r6, [r0], -r5
    50c8:	ldmdavs	ip!, {r1, r5, r7, fp, ip, lr}
    50cc:	andls	r6, r9, #21
    50d0:	ldcmi	8, cr5, [r2, #780]	; 0x30c
    50d4:	ldrbtmi	r6, [sp], #-25	; 0xffffffe7
    50d8:	stmdacs	ip!, {r2, sp, lr, pc}^
    50dc:	strbthi	pc, [r5], r0, asr #32	; <UNPREDICTABLE>
    50e0:	stmdaeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    50e4:	strbmi	r4, [r9], -sl, lsr #12
    50e8:			; <UNDEFINED> instruction: 0xf00c4620
    50ec:	mcrrne	14, 9, pc, r3, cr11	; <UNPREDICTABLE>
    50f0:	blls	2798c4 <strvisx@@Base+0x265b50>
    50f4:	subhi	pc, r0, sp, asr #17
    50f8:	stclne	8, cr6, [r0], #-112	; 0xffffff90
    50fc:	subshi	pc, r2, #1
    5100:	stmdaeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    5104:	ldclmi	6, cr14, [r0], #-920	; 0xfffffc68
    5108:	ldflss	f2, [r5, #-0]
    510c:	tstls	r2, r1
    5110:	pushpl	{r1, r2, r3, r5, r6, r9, fp, lr}
    5114:	tstls	sl, ip, lsl #12
    5118:	eorvs	r9, r8, ip, lsl #2
    511c:	blmi	1b2c578 <strvisx@@Base+0x1b18804>
    5120:	ldmdavs	sp!, {r1, r3, r5, r7, fp, ip, lr}
    5124:	andsvs	r9, r0, r9, lsl #4
    5128:	ldmpl	r3, {r0, r2, r4, r9, fp, ip, pc}^
    512c:	ldrbtmi	r4, [sl], #-2684	; 0xfffff584
    5130:			; <UNDEFINED> instruction: 0x46906019
    5134:	strbmi	r4, [r9], -r2, asr #12
    5138:			; <UNDEFINED> instruction: 0xf00c4628
    513c:	mcrrne	14, 7, pc, r3, cr3	; <UNPREDICTABLE>
    5140:	rsbshi	pc, r0, r1
    5144:	stmdacs	r2!, {r4, r6, fp, ip, sp}
    5148:	ldm	pc, {r3, r6, fp, ip, lr, pc}^	; <UNPREDICTABLE>
    514c:	ldrmi	pc, [r5, -r0]
    5150:	strbmi	r4, [r7, -r4, asr #14]
    5154:	strbmi	r4, [r7, -r7, asr #14]
    5158:	strbmi	r4, [r7, -r7, asr #14]
    515c:	submi	r4, r7, #18612224	; 0x11c0000
    5160:	strbmi	r4, [r7, -r7, asr #14]
    5164:	smlaldmi	r4, r7, r2, r7
    5168:	strbmi	r4, [r7, -r7, asr #14]
    516c:	ldrmi	r4, [r5, -r7, asr #14]
    5170:	movwcs	r0, #4164	; 0x1044
    5174:	ldrb	r9, [sp, ip, lsl #6]
    5178:	movwls	r2, #41729	; 0xa301
    517c:	ldmdavs	sl!, {r1, r3, r4, r6, r7, r8, r9, sl, sp, lr, pc}
    5180:	ldrbmi	r4, [r0], -r9, asr #12
    5184:			; <UNDEFINED> instruction: 0xff14f7fe
    5188:			; <UNDEFINED> instruction: 0xf47f3001
    518c:	strcs	sl, [r0, #-3139]	; 0xfffff3bd
    5190:	mvnscc	pc, #79	; 0x4f
    5194:	strtmi	r9, [r8], lr, lsl #6
    5198:	strls	r9, [sl, #-1298]	; 0xfffffaee
    519c:	stmib	sp, {r4, r8, sl, ip, pc}^
    51a0:			; <UNDEFINED> instruction: 0x462c5513
    51a4:	strls	r4, [ip, #-1705]	; 0xfffff957
    51a8:	ldrls	r9, [r1], -r9, lsl #10
    51ac:	bllt	20031b0 <strvisx@@Base+0x1fef43c>
    51b0:	strcs	r4, [r0, #-1616]	; 0xfffff9b0
    51b4:	ldmdb	r4!, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    51b8:	ldmdbmi	sl, {r0, r4, r8, r9, sl, fp, ip, pc}^
    51bc:			; <UNDEFINED> instruction: 0x46044479
    51c0:			; <UNDEFINED> instruction: 0xf7fd4638
    51c4:			; <UNDEFINED> instruction: 0x463beaf6
    51c8:	strmi	r4, [r3], #-1056	; 0xfffffbe0
    51cc:			; <UNDEFINED> instruction: 0xf7ff9311
    51d0:	strcs	fp, [r1], #-2916	; 0xfffff49c
    51d4:	movwcs	lr, #6062	; 0x17ae
    51d8:			; <UNDEFINED> instruction: 0xe7ab9312
    51dc:	rscscc	pc, pc, #79	; 0x4f
    51e0:	andls	r4, lr, #75776	; 0x12800
    51e4:	bls	54e5ec <strvisx@@Base+0x53a878>
    51e8:	stmdami	pc, {r0, r4, r6, r9, sl, lr}^	; <UNPREDICTABLE>
    51ec:	strtmi	r4, [r9], r8, lsr #13
    51f0:	ldrbtmi	r5, [r8], #-2259	; 0xfffff72d
    51f4:	stmib	sp, {r4, r8, sl, ip, pc}^
    51f8:	ldmdavs	sl, {r0, r1, r4, r8, sl, ip, lr}
    51fc:	stc2	0, cr15, [lr, #-28]!	; 0xffffffe4
    5200:	ldrls	r9, [r1], -r9, lsl #10
    5204:	bllt	1503208 <strvisx@@Base+0x14ef494>
    5208:			; <UNDEFINED> instruction: 0xf0239b10
    520c:			; <UNDEFINED> instruction: 0xf0430338
    5210:	tstls	r0, #16, 6	; 0x40000000
    5214:	blls	43ee0c <strvisx@@Base+0x42b098>
    5218:	movteq	pc, #67	; 0x43	; <UNPREDICTABLE>
    521c:	usat	r9, #23, r0, lsl #6
    5220:			; <UNDEFINED> instruction: 0xf0239b10
    5224:			; <UNDEFINED> instruction: 0xf0430302
    5228:	tstls	r0, #335544320	; 0x14000000
    522c:	blls	43edf4 <strvisx@@Base+0x42b080>
    5230:	movweq	pc, #8227	; 0x2023	; <UNPREDICTABLE>
    5234:	movweq	pc, #4163	; 0x1043	; <UNPREDICTABLE>
    5238:	usat	r9, #9, r0, lsl #6
    523c:			; <UNDEFINED> instruction: 0xf4439b10
    5240:	tstls	r0, #128, 6
    5244:	blls	43eddc <strvisx@@Base+0x42b068>
    5248:	teqeq	r8, #35	; 0x23	; <UNPREDICTABLE>
    524c:			; <UNDEFINED> instruction: 0xe6df9310
    5250:			; <UNDEFINED> instruction: 0xf0439b10
    5254:	tstls	r0, #128, 6
    5258:	blls	43edc8 <strvisx@@Base+0x42b054>
    525c:	teqeq	r8, #35	; 0x23	; <UNPREDICTABLE>
    5260:	nopeq	{67}	; 0x43
    5264:			; <UNDEFINED> instruction: 0xe6d39310
    5268:	eormi	r9, fp, r0, lsl fp
    526c:	movweq	pc, #8259	; 0x2043	; <UNPREDICTABLE>
    5270:			; <UNDEFINED> instruction: 0xe6cd9310
    5274:	rscscc	pc, pc, #79	; 0x4f
    5278:	andls	r4, lr, #36, 22	; 0x9000
    527c:	bls	54e684 <strvisx@@Base+0x53a910>
    5280:	ldrls	r4, [r2, #-1704]	; 0xfffff958
    5284:	stmdami	r9!, {r2, r3, r5, r9, sl, lr}
    5288:	ldmpl	r3, {r0, r3, r5, r7, r9, sl, lr}^
    528c:	strls	r4, [sl, #-1144]	; 0xfffffb88
    5290:	ldrpl	lr, [r3, #-2509]	; 0xfffff633
    5294:	strls	r6, [ip, #-2073]	; 0xfffff7e7
    5298:	stc2l	0, cr15, [r0], #28
    529c:	ldrls	r9, [r1], -r9, lsl #10
    52a0:	bllt	1832a4 <strvisx@@Base+0x16f530>
    52a4:	strdeq	r0, [r1], -r2
    52a8:	andeq	r5, r2, sl, ror #9
    52ac:	andeq	r0, r0, r0, asr #5
    52b0:	andeq	r5, r2, r8, asr #9
    52b4:	muleq	r1, r0, fp
    52b8:			; <UNDEFINED> instruction: 0x000253b4
    52bc:	andeq	r0, r1, ip, asr #18
    52c0:	andeq	r4, r2, sl, lsl pc
    52c4:	andeq	r4, r2, r8, ror #29
    52c8:	andeq	r0, r0, ip, asr #5
    52cc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    52d0:	andeq	r0, r0, ip, ror r2
    52d4:	andeq	r2, r1, r6, ror pc
    52d8:	muleq	r1, lr, r9
    52dc:	andeq	r5, r2, r8, ror #9
    52e0:	ldrdeq	r5, [r2], -lr
    52e4:	ldrdeq	r5, [r2], -ip
    52e8:	andeq	r1, r1, sl, lsl #11
    52ec:	andeq	r0, r1, r8, lsr #16
    52f0:	andeq	r5, r2, lr, ror r3
    52f4:	andeq	r5, r2, r6, ror r3
    52f8:	andeq	r1, r1, r4, asr #8
    52fc:	andeq	r5, r2, r0, lsr #6
    5300:	muleq	r1, lr, r6
    5304:	andeq	r0, r1, r8, lsr #14
    5308:	andeq	r0, r1, r2, lsl #11
    530c:			; <UNDEFINED> instruction: 0x000002b4
    5310:	andeq	r0, r1, r2, asr #8
    5314:	ldrdeq	r3, [r1], -r6
    5318:	ldrdeq	r0, [r1], -r6
    531c:	andeq	r2, r1, sl, asr pc
    5320:	strdeq	r0, [r1], -r2
    5324:	andeq	r0, r1, r8, asr #4
    5328:	andeq	r0, r1, r2, asr #3
    532c:	andeq	r0, r1, r4, lsr r2
    5330:	stmdals	r9, {r1, r2, r4, r8, r9, fp, ip, pc}
    5334:			; <UNDEFINED> instruction: 0xf7fe6819
    5338:	movwcs	pc, #3695	; 0xe6f	; <UNPREDICTABLE>
    533c:			; <UNDEFINED> instruction: 0x96002210
    5340:	andls	r4, r9, r1, lsl #12
    5344:	beq	440bac <strvisx@@Base+0x42ce38>
    5348:			; <UNDEFINED> instruction: 0xf9caf005
    534c:	ldmdavs	r9, {r0, r1, r4, r5, r8, fp, sp, lr}
    5350:			; <UNDEFINED> instruction: 0xf0012900
    5354:	blls	4e5480 <strvisx@@Base+0x4d170c>
    5358:	bleq	4149c <strvisx@@Base+0x2d728>
    535c:	ldcvc	8, cr15, [r0], #-892	; 0xfffffc84
    5360:	blcs	16cd8 <strvisx@@Base+0x2f64>
    5364:			; <UNDEFINED> instruction: 0xf8df9b15
    5368:			; <UNDEFINED> instruction: 0xf8df0c2c
    536c:	ldmibpl	pc, {r2, r3, r5, sl, fp, sp}^	; <UNPREDICTABLE>
    5370:	stcgt	8, cr15, [r8], #-892	; 0xfffffc84
    5374:	ldmdapl	pc, {r1, r3, r8, r9, sl, ip, pc}	; <UNPREDICTABLE>
    5378:	ldmpl	sl, {r3, r4, r9, sl, lr}
    537c:	andcc	pc, ip, r0, asr r8	; <UNPREDICTABLE>
    5380:	svclt	0x000c980a
    5384:			; <UNDEFINED> instruction: 0x469246b8
    5388:	svclt	0x0008950a
    538c:			; <UNDEFINED> instruction: 0xf8df469a
    5390:	svclt	0x00187c10
    5394:			; <UNDEFINED> instruction: 0xf8df4680
    5398:	strbmi	r3, [r5], -ip, lsl #24
    539c:	mrc	6, 0, r4, cr8, cr0, {6}
    53a0:	ldrbtmi	sl, [fp], #-2576	; 0xfffff5f0
    53a4:	movwls	r4, #50303	; 0xc47f
    53a8:	blcc	fff4372c <strvisx@@Base+0xfff2f9b8>
    53ac:	movwls	r4, #62587	; 0xf47b
    53b0:	bllt	149f4a0 <strvisx@@Base+0x148b72c>
    53b4:	sbfxmi	r4, r0, #12, #9
    53b8:	stmdacs	r0, {r1, r9, sl, lr}
    53bc:	ldrbhi	pc, [r7], #-0	; <UNPREDICTABLE>
    53c0:			; <UNDEFINED> instruction: 0xf0136803
    53c4:			; <UNDEFINED> instruction: 0xf0000302
    53c8:	andvs	r8, r3, ip, asr #8
    53cc:	blcs	12c00c <strvisx@@Base+0x118298>
    53d0:	strhi	pc, [sp, #0]!
    53d4:	andeq	pc, ip, #14090240	; 0xd70000
    53d8:	stmdbne	fp, {r0, r4, r5, r8, fp, sp, lr}
    53dc:			; <UNDEFINED> instruction: 0xf0002800
    53e0:	stmdbls	sl, {r0, r1, r2, r4, r8, r9, sl, pc}
    53e4:	ldmdavs	r9, {r0, r4, r6, r8, sp, lr}
    53e8:			; <UNDEFINED> instruction: 0x47c04650
    53ec:	orrpl	pc, ip, #54525952	; 0x3400000
    53f0:	ldmdavs	fp, {r3, r4, r8, r9, ip, sp}
    53f4:	svclt	0x00182800
    53f8:	strmi	r2, [r3], r0, lsl #22
    53fc:	strhi	pc, [lr], #-64	; 0xffffffc0
    5400:	strcc	r6, [r4], #-2355	; 0xfffff6cd
    5404:	stmdbcs	r0, {r0, r3, r4, r8, fp, ip, lr}
    5408:			; <UNDEFINED> instruction: 0xf50dd1d2
    540c:	tstcc	r8, #140, 6	; 0x30000002
    5410:			; <UNDEFINED> instruction: 0xf1b3681b
    5414:	ldmdavs	r3!, {fp}
    5418:			; <UNDEFINED> instruction: 0xf04fbf18
    541c:	strbmi	r0, [r2], -r1, lsl #16
    5420:	svceq	0x0000f1bb
    5424:	andcs	fp, r0, #8, 30
    5428:	blcs	29c6c <strvisx@@Base+0x15ef8>
    542c:	addshi	pc, r5, r0, asr #32
    5430:			; <UNDEFINED> instruction: 0xf7fc9809
    5434:	strbmi	lr, [r8], -r2, ror #31
    5438:	svc	0x00def7fc
    543c:	blcs	2c080 <strvisx@@Base+0x1830c>
    5440:	bge	1e02544 <strvisx@@Base+0x1dee7d0>
    5444:	rscscc	pc, pc, pc, asr #32
    5448:	blt	1e8344c <strvisx@@Base+0x1e6f6d8>
    544c:	stmdals	r9, {r1, r2, r4, r8, r9, fp, ip, pc}
    5450:			; <UNDEFINED> instruction: 0xf7fe6819
    5454:	strmi	pc, [r1], -r1, ror #27
    5458:	cdp	0, 1, cr9, cr8, cr9, {0}
    545c:			; <UNDEFINED> instruction: 0xf0020a10
    5460:			; <UNDEFINED> instruction: 0xf50dfcdf
    5464:	tstcc	r8, #140, 6	; 0x30000002
    5468:	mrcne	8, 0, r6, cr10, cr11, {0}
    546c:	svclt	0x00186833
    5470:	stmdacs	r0, {r0, r9, sp}
    5474:	andcs	fp, r0, #8, 30
    5478:	ldrb	r9, [r6, pc, lsl #4]
    547c:	stmdals	r9, {r1, r2, r4, r8, r9, fp, ip, pc}
    5480:	bge	440ce8 <strvisx@@Base+0x42cf74>
    5484:			; <UNDEFINED> instruction: 0xf7fe6819
    5488:	movwcs	pc, #3527	; 0xdc7	; <UNPREDICTABLE>
    548c:			; <UNDEFINED> instruction: 0x96002210
    5490:	andls	r4, r9, r1, lsl #12
    5494:	beq	440cfc <strvisx@@Base+0x42cf88>
    5498:			; <UNDEFINED> instruction: 0xf922f005
    549c:	ldmdavs	r9, {r0, r1, r4, r5, r8, fp, sp, lr}
    54a0:			; <UNDEFINED> instruction: 0xf0002900
    54a4:			; <UNDEFINED> instruction: 0xf50d87a1
    54a8:	andcs	r5, r0, ip, lsl #7
    54ac:			; <UNDEFINED> instruction: 0xf8df3318
    54b0:			; <UNDEFINED> instruction: 0xf8df8afc
    54b4:			; <UNDEFINED> instruction: 0x46075afc
    54b8:	ldrbtmi	r6, [r8], #2075	; 0x81b
    54bc:	bne	7166b8 <strvisx@@Base+0x702944>
    54c0:	strcs	fp, [r1], #-3864	; 0xfffff0e8
    54c4:	ldmdbvs	r3!, {r0, r4, sp, lr, pc}
    54c8:	ldmibpl	r9, {r4, r6, r9, sl, lr}^
    54cc:	mcrr2	0, 0, pc, sl, cr2	; <UNPREDICTABLE>
    54d0:	svclt	0x00142800
    54d4:	movwcs	r4, #1571	; 0x623
    54d8:			; <UNDEFINED> instruction: 0xf0402b00
    54dc:	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r7, r8, r9, pc}
    54e0:	ldmibpl	r9, {r2, r8, r9, sl, ip, sp}^
    54e4:			; <UNDEFINED> instruction: 0xf0002900
    54e8:			; <UNDEFINED> instruction: 0xf8d88412
    54ec:	blcs	114f4 <setlogin@@Base+0x238>
    54f0:	ldrhi	pc, [r8, #64]!	; 0x40
    54f4:	andcc	pc, ip, #216, 16	; 0xd80000
    54f8:	mvnle	r2, r0, lsl #22
    54fc:			; <UNDEFINED> instruction: 0xf00a4628
    5500:	strb	pc, [r0, r7, lsr #31]!	; <UNPREDICTABLE>
    5504:	stmdals	r9, {r1, r2, r4, sl, fp, ip, pc}
    5508:			; <UNDEFINED> instruction: 0xf7fe6821
    550c:	stmdavs	r1!, {r0, r2, r7, r8, sl, fp, ip, sp, lr, pc}
    5510:	strbmi	r4, [r8], -r3, lsl #12
    5514:	movwls	r4, #38428	; 0x961c
    5518:	ldc2l	7, cr15, [lr, #-1016]!	; 0xfffffc08
    551c:			; <UNDEFINED> instruction: 0x46219b10
    5520:	cfmsub32	mvax4, mvfx4, mvfx8, mvfx1
    5524:			; <UNDEFINED> instruction: 0x464a0a10
    5528:	cdp2	0, 3, cr15, cr0, cr2, {0}
    552c:			; <UNDEFINED> instruction: 0xf8dfe799
    5530:	ldrbtmi	r3, [fp], #-2692	; 0xfffff57c
    5534:	bcs	1f6a4 <strvisx@@Base+0xb930>
    5538:	andcs	fp, r1, #12, 30	; 0x30
    553c:	subsvs	r2, sl, r0, lsl #4
    5540:	strbhi	pc, [r3], #-64	; 0xffffffc0	; <UNPREDICTABLE>
    5544:	beq	1c438c8 <strvisx@@Base+0x1c2fb54>
    5548:			; <UNDEFINED> instruction: 0xf7fd4478
    554c:	ldmdavs	r3!, {r1, r3, r4, r5, r6, r7, fp, sp, lr, pc}
    5550:			; <UNDEFINED> instruction: 0xf43f2b00
    5554:	movwcs	sl, #2536	; 0x9e8
    5558:	ldrtmi	r9, [r0], -pc, lsl #6
    555c:	cdp2	0, 4, cr15, cr8, cr13, {0}
    5560:	blls	27f300 <strvisx@@Base+0x26b58c>
    5564:			; <UNDEFINED> instruction: 0xf0002b00
    5568:	stmdals	r9, {r1, r3, r5, r9, sl, pc}
    556c:	blx	ffd4159e <strvisx@@Base+0xffd2d82a>
    5570:	stmdacs	r0, {r1, r2, r4, r8, r9, fp, ip, pc}
    5574:	strhi	pc, [r7, #-0]
    5578:			; <UNDEFINED> instruction: 0xf04f6819
    557c:	stmdals	r9, {r9, fp}
    5580:			; <UNDEFINED> instruction: 0xf7feaf30
    5584:			; <UNDEFINED> instruction: 0xf50dfd49
    5588:	tstcc	r8, #140, 6	; 0x30000002
    558c:	eorscs	r2, r0, #0, 2
    5590:	bne	16df604 <strvisx@@Base+0x16cb890>
    5594:	movwcs	fp, #7960	; 0x1f18
    5598:	strmi	r9, [r4], -pc, lsl #6
    559c:	ldrtmi	r9, [r8], -r9
    55a0:	mrc	7, 6, APSR_nzcv, cr8, cr12, {7}
    55a4:	cfmsub32	mvax1, mvfx4, mvfx8, mvfx1
    55a8:	movwcs	r0, #2576	; 0xa10
    55ac:	adcseq	pc, r8, #68, 4	; 0x40000004
    55b0:			; <UNDEFINED> instruction: 0xf0059700
    55b4:			; <UNDEFINED> instruction: 0x4604f895
    55b8:			; <UNDEFINED> instruction: 0xf0402800
    55bc:	ldmdavs	r8!, {r0, r2, r3, r5, r7, r8, r9, sl, pc}
    55c0:			; <UNDEFINED> instruction: 0xf0002800
    55c4:	ldmdavs	fp!, {r0, r2, r6, r8, sl, pc}^
    55c8:			; <UNDEFINED> instruction: 0xf0002b00
    55cc:			; <UNDEFINED> instruction: 0xf8df87f2
    55d0:	ldrbtmi	r2, [sl], #-2540	; 0xfffff614
    55d4:	bcs	1f624 <strvisx@@Base+0xb8b0>
    55d8:	ldrbhi	pc, [r7], -r0, asr #32	; <UNPREDICTABLE>
    55dc:	tstle	r9, r1, lsl #22
    55e0:	ldmdavs	fp, {r0, r1, r3, r4, r5, r6, r8, fp, sp, lr}
    55e4:	ldmdbvs	fp, {r0, r1, r4, r5, r8, ip, sp, pc}
    55e8:	cmnmi	r0, #50331648	; 0x3000000	; <UNPREDICTABLE>
    55ec:	svcmi	0x0080f5b3
    55f0:	ldrbhi	pc, [r1, -r0]	; <UNPREDICTABLE>
    55f4:			; <UNDEFINED> instruction: 0xac249a15
    55f8:	stmibcc	r4, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    55fc:	ldmdavs	r8, {r0, r1, r4, r6, r7, fp, ip, lr}
    5600:	ldcl	7, cr15, [lr, #1008]!	; 0x3f0
    5604:	vmax.s8	d20, d5, d18
    5608:			; <UNDEFINED> instruction: 0xf7fc4113
    560c:	andcc	lr, r1, r8, lsr pc
    5610:	stmdahi	r3!, {r2, r4, r8, r9, sl, fp, ip, sp, pc}^
    5614:	ldmdbvs	ip!, {r4, r6, r8, r9, sp}
    5618:	bcc	440e40 <strvisx@@Base+0x42d0cc>
    561c:	stmdavs	r5!, {r4, r8, r9, fp, ip, pc}
    5620:	movweq	pc, #8211	; 0x2013	; <UNPREDICTABLE>
    5624:	ldrthi	pc, [r6], -r0, asr #32	; <UNPREDICTABLE>
    5628:			; <UNDEFINED> instruction: 0xf0002d00
    562c:			; <UNDEFINED> instruction: 0x46988715
    5630:	strtmi	r4, [fp], -r3, lsr #13
    5634:			; <UNDEFINED> instruction: 0xf7fc4618
    5638:			; <UNDEFINED> instruction: 0xf85bef34
    563c:	strmi	r3, [r0, #3844]	; 0xf04
    5640:			; <UNDEFINED> instruction: 0x4680bf38
    5644:	mvnsle	r2, r0, lsl #22
    5648:	beq	440eb0 <strvisx@@Base+0x42d13c>
    564c:	tsteq	r2, r8, lsl #2	; <UNPREDICTABLE>
    5650:	ldc2	0, cr15, [r2, #56]!	; 0x38
    5654:	strmi	r2, [r3], -r1, lsl #16
    5658:	beq	440ec0 <strvisx@@Base+0x42d14c>
    565c:	movwcs	fp, #7992	; 0x1f38
    5660:			; <UNDEFINED> instruction: 0x46199312
    5664:	stc2	0, cr15, [r8, #56]!	; 0x38
    5668:	beq	440e90 <strvisx@@Base+0x42d11c>
    566c:			; <UNDEFINED> instruction: 0xf0002d00
    5670:			; <UNDEFINED> instruction: 0x462386d2
    5674:	stmdaeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    5678:	svcmi	0x0004f853
    567c:			; <UNDEFINED> instruction: 0xf1084645
    5680:	stccs	8, cr0, [r0], {1}
    5684:	strdcs	sp, [r4, -r8]
    5688:			; <UNDEFINED> instruction: 0xf7fc4640
    568c:			; <UNDEFINED> instruction: 0xf1a0ee58
    5690:	andsls	r0, r3, r4, lsl #22
    5694:	adcmi	r4, r5, #93323264	; 0x5900000
    5698:	svcmi	0x0004f841
    569c:	streq	pc, [r1], #-260	; 0xfffffefc
    56a0:	blls	439e8c <strvisx@@Base+0x426118>
    56a4:	svceq	0x0038f013
    56a8:	ldrbthi	pc, [r3], -r0, asr #32	; <UNPREDICTABLE>
    56ac:			; <UNDEFINED> instruction: 0xf04f9b10
    56b0:	stmib	sp, {fp}^
    56b4:			; <UNDEFINED> instruction: 0xf0039614
    56b8:	movwls	r0, #41729	; 0xa301
    56bc:	tstls	r1, #67108864	; 0x4000000
    56c0:	stmdbcc	r0, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    56c4:	movwls	r4, #50299	; 0xc47b
    56c8:	ldmcc	ip!, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    56cc:	mcr	4, 0, r4, cr8, cr11, {3}
    56d0:			; <UNDEFINED> instruction: 0xf8df3a90
    56d4:	ldrbtmi	r3, [fp], #-2296	; 0xfffff708
    56d8:	muls	sp, r9, r6
    56dc:			; <UNDEFINED> instruction: 0xf852697a
    56e0:	stmdbcs	r0, {r1, r2, r5, ip}
    56e4:	mvnshi	pc, #0
    56e8:	andcs	r9, r1, #16, 22	; 0x4000
    56ec:	orrvc	pc, r0, #50331648	; 0x3000000
    56f0:	cdp2	0, 7, cr15, cr8, cr4, {0}
    56f4:	strbmi	r4, [r8], -r1, lsl #12
    56f8:			; <UNDEFINED> instruction: 0xf00a910f
    56fc:	stmdbls	pc, {r0, r3, r5, r7, r9, sl, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
    5700:			; <UNDEFINED> instruction: 0xf7fc4608
    5704:			; <UNDEFINED> instruction: 0x4620ee7a
    5708:	mrc	7, 3, APSR_nzcv, cr6, cr12, {7}
    570c:			; <UNDEFINED> instruction: 0xf1084545
    5710:			; <UNDEFINED> instruction: 0xf0000301
    5714:	ldrmi	r8, [r8], sp, ror #7
    5718:	ldmdavs	fp, {r2, r3, r8, r9, fp, ip, pc}
    571c:			; <UNDEFINED> instruction: 0xf0402b00
    5720:			; <UNDEFINED> instruction: 0xf85b83e7
    5724:	ldrbmi	r6, [r1], -r4, lsl #30
    5728:			; <UNDEFINED> instruction: 0xf852693a
    572c:			; <UNDEFINED> instruction: 0xf7fe0026
    5730:	blls	2c3e04 <strvisx@@Base+0x2b0090>
    5734:	blcs	16f4c <strvisx@@Base+0x31d8>
    5738:			; <UNDEFINED> instruction: 0x4602d1d0
    573c:	bne	440fa4 <strvisx@@Base+0x42d230>
    5740:	beq	fe440fa8 <strvisx@@Base+0xfe42d234>
    5744:	cdp2	0, 8, cr15, cr4, cr10, {0}
    5748:	andscc	lr, r1, #3620864	; 0x374000
    574c:			; <UNDEFINED> instruction: 0xf0804293
    5750:	blls	4666f4 <strvisx@@Base+0x452980>
    5754:	tstls	r1, #67108864	; 0x4000000
    5758:	mrrcge	7, 13, lr, r7, cr5
    575c:	orrpl	pc, r0, pc, asr #8
    5760:			; <UNDEFINED> instruction: 0xf7fc4620
    5764:	stmdacs	r0, {r2, r6, r7, r8, r9, sl, fp, sp, lr, pc}
    5768:	ldrhi	pc, [r3, #-0]
    576c:	stmdaeq	r0!, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    5770:	ldrbtmi	r4, [r8], #-1569	; 0xfffff9df
    5774:	cdp2	0, 6, cr15, cr12, cr10, {0}
    5778:			; <UNDEFINED> instruction: 0xe6e96833
    577c:	vadd.i8	d25, d0, d9
    5780:			; <UNDEFINED> instruction: 0xf7fc11ff
    5784:	andcc	lr, r1, r4, asr #26
    5788:	strhi	pc, [fp]
    578c:			; <UNDEFINED> instruction: 0xe6df6833
    5790:			; <UNDEFINED> instruction: 0xf7fc4628
    5794:			; <UNDEFINED> instruction: 0xf8dfee6e
    5798:			; <UNDEFINED> instruction: 0x462a183c
    579c:	ldrbtmi	r2, [r9], #-1
    57a0:	stc	7, cr15, [r0, #1008]!	; 0x3f0
    57a4:			; <UNDEFINED> instruction: 0xe6d36833
    57a8:	beq	441010 <strvisx@@Base+0x42d29c>
    57ac:			; <UNDEFINED> instruction: 0xfff6f001
    57b0:	stmdane	r4!, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    57b4:			; <UNDEFINED> instruction: 0x46024479
    57b8:			; <UNDEFINED> instruction: 0xf7fc2001
    57bc:			; <UNDEFINED> instruction: 0xe7e5ed94
    57c0:	ldmdavs	r9, {r1, r2, r4, r8, r9, fp, ip, pc}
    57c4:			; <UNDEFINED> instruction: 0xf7fe4648
    57c8:			; <UNDEFINED> instruction: 0xf8dffc27
    57cc:	bls	553814 <strvisx@@Base+0x53faa0>
    57d0:	pkhtbmi	r5, r1, r3, asr #17
    57d4:	beq	44103c <strvisx@@Base+0x42d2c8>
    57d8:	stmdbls	r9, {r1, r3, r6, r9, sl, lr}
    57dc:			; <UNDEFINED> instruction: 0xe6404798
    57e0:			; <UNDEFINED> instruction: 0xf7fe9811
    57e4:	ldmdavs	r3!, {r0, r1, r4, r5, r8, r9, fp, ip, sp, lr, pc}
    57e8:	blls	5bf2b8 <strvisx@@Base+0x5ab544>
    57ec:	ubfxeq	pc, pc, #17, #17
    57f0:	ldrbtmi	r6, [r8], #-2073	; 0xfffff7e7
    57f4:	cdp2	0, 2, cr15, cr12, cr10, {0}
    57f8:			; <UNDEFINED> instruction: 0xe6a96833
    57fc:			; <UNDEFINED> instruction: 0xac309b16
    5800:	ldmdavs	r9, {r0, r3, fp, ip, pc}
    5804:	stc2	7, cr15, [r8], {254}	; 0xfe
    5808:	strtmi	r4, [r0], -r3, lsl #12
    580c:	movwls	r4, #38429	; 0x961d
    5810:	stc2l	0, cr15, [r0], #-16
    5814:	cdp	8, 1, cr6, cr8, cr3, {1}
    5818:			; <UNDEFINED> instruction: 0x46220a10
    581c:	movweq	pc, #16451	; 0x4043	; <UNPREDICTABLE>
    5820:	eorvs	r4, r3, r9, lsr #12
    5824:	mvnsne	pc, #64, 4
    5828:	movwcs	r6, #4515	; 0x11a3
    582c:	blx	ff1c183c <strvisx@@Base+0xff1adac8>
    5830:	blls	27f094 <strvisx@@Base+0x26b320>
    5834:	ldmdavc	fp, {r0, r1, r3, r8, ip, sp, pc}
    5838:			; <UNDEFINED> instruction: 0xf8dfb92b
    583c:	ldrbtmi	r0, [r8], #-1960	; 0xfffff858
    5840:	blx	fe841866 <strvisx@@Base+0xfe82daf2>
    5844:			; <UNDEFINED> instruction: 0xf7fc9009
    5848:	stcls	13, cr14, [r9, #-832]	; 0xfffffcc0
    584c:	strtmi	r4, [r8], -r1, lsl #12
    5850:	blx	154187a <strvisx@@Base+0x152db06>
    5854:	strtmi	r4, [r8], -r4, lsl #12
    5858:	stcl	7, cr15, [lr, #1008]	; 0x3f0
    585c:			; <UNDEFINED> instruction: 0xf7fc4620
    5860:	andcc	lr, r1, r8, lsr #30
    5864:	ldrhi	pc, [r3, #-0]!
    5868:	strls	r6, [r9], #-2099	; 0xfffff7cd
    586c:			; <UNDEFINED> instruction: 0xf8dfe670
    5870:	ldrbtmi	r0, [r8], #-1912	; 0xfffff888
    5874:	svc	0x0064f7fc
    5878:			; <UNDEFINED> instruction: 0xe6696833
    587c:	ldmdavs	r9, {r1, r2, r4, r8, r9, fp, ip, pc}
    5880:	blcs	2c4ac <strvisx@@Base+0x18738>
    5884:	ldrhi	pc, [sl, #-0]!
    5888:	svcge	0x00309809
    588c:	blx	ff14388e <strvisx@@Base+0xff12fb1a>
    5890:	ldrtmi	r2, [sl], -r1, lsl #6
    5894:	andls	r4, r9, r1, lsl #12
    5898:	beq	441100 <strvisx@@Base+0x42d38c>
    589c:	cdp2	0, 9, cr15, cr6, cr2, {0}
    58a0:			; <UNDEFINED> instruction: 0xf0003001
    58a4:	ldmib	r7, {r1, r2, r4, r6, r9, sl, pc}^
    58a8:	b	1516cd8 <strvisx@@Base+0x1502f64>
    58ac:			; <UNDEFINED> instruction: 0xf0400305
    58b0:			; <UNDEFINED> instruction: 0xf50d82be
    58b4:			; <UNDEFINED> instruction: 0xf8df78b0
    58b8:			; <UNDEFINED> instruction: 0xf1a81734
    58bc:	andscs	r0, r0, #20, 22	; 0x5000
    58c0:			; <UNDEFINED> instruction: 0x46584479
    58c4:	cdp2	0, 2, cr15, cr8, cr13, {0}
    58c8:	strmi	lr, [r4, #-2519]	; 0xfffff629
    58cc:	movweq	lr, #23124	; 0x5a54
    58d0:	addhi	pc, r2, #64	; 0x40
    58d4:			; <UNDEFINED> instruction: 0x1718f8df
    58d8:	beq	141f80 <strvisx@@Base+0x12e20c>
    58dc:	ldrbtmi	r2, [r9], #-528	; 0xfffffdf0
    58e0:			; <UNDEFINED> instruction: 0xf00d4650
    58e4:	blls	545150 <strvisx@@Base+0x5313dc>
    58e8:			; <UNDEFINED> instruction: 0xf0402b00
    58ec:	blls	4e69bc <strvisx@@Base+0x4d2c48>
    58f0:			; <UNDEFINED> instruction: 0xf0002b00
    58f4:	mcrrge	3, 11, r8, fp, cr15
    58f8:	usatne	pc, #24, pc, asr #17	; <UNPREDICTABLE>
    58fc:	sfmge	f2, 2, [sp, #-28]	; 0xffffffe4
    5900:			; <UNDEFINED> instruction: 0x46204479
    5904:			; <UNDEFINED> instruction: 0xf00d910a
    5908:	blls	54512c <strvisx@@Base+0x5313b8>
    590c:	blvc	fe7c2d48 <strvisx@@Base+0xfe7aefd4>
    5910:	ldmdaeq	ip, {r3, r5, r7, r8, ip, sp, lr, pc}
    5914:	strtmi	r9, [r8], -sl, lsl #18
    5918:	movwls	r2, #61959	; 0xf207
    591c:	ldc2l	0, cr15, [ip, #52]!	; 0x34
    5920:	andcs	r9, r7, #163840	; 0x28000
    5924:	mcr	6, 0, r4, cr8, cr8, {2}
    5928:			; <UNDEFINED> instruction: 0xf00d5a10
    592c:	stmdbls	sl, {r0, r2, r4, r5, r6, r7, r8, sl, fp, ip, sp, lr, pc}
    5930:	strbmi	r2, [r0], -r7, lsl #4
    5934:	ldc2l	0, cr15, [r0, #52]!	; 0x34
    5938:	ldmibvs	fp!, {r0, r3, r4, r5, r8, fp, sp, lr}
    593c:	ldmdbvs	r8!, {r1, r5, r9, sl, lr}^
    5940:	bne	ff2e013c <strvisx@@Base+0xff2cc3c8>
    5944:	bl	181fd30 <strvisx@@Base+0x180bfbc>
    5948:	ldmvs	r8!, {r0, r2, r8, sl}
    594c:			; <UNDEFINED> instruction: 0xf101fb03
    5950:	strne	pc, [r5, #-2816]	; 0xfffff500
    5954:	smlatbeq	r3, r0, fp, pc	; <UNPREDICTABLE>
    5958:			; <UNDEFINED> instruction: 0xf00c4429
    595c:	bvs	f83bd8 <strvisx@@Base+0xf6fe64>
    5960:	bvs	1e5fd54 <strvisx@@Base+0x1e4bfe0>
    5964:	blx	15fc4e <strvisx@@Base+0x14beda>
    5968:	cdp	3, 1, cr15, cr8, cr3, {0}
    596c:	blx	101b6 <error@@Base+0x355a>
    5970:	blx	fe95257e <strvisx@@Base+0xfe93e80a>
    5974:	ldrmi	r0, [r9], #-256	; 0xffffff00
    5978:			; <UNDEFINED> instruction: 0xf88ef00c
    597c:	ldmvs	fp!, {r0, r2, r3, r4, r5, r7, r8, fp, sp, lr}^
    5980:	ldmibvs	r9!, {r1, r3, r4, r6, r9, sl, lr}^
    5984:	blx	15fc6e <strvisx@@Base+0x14befa>
    5988:	blx	4259e <strvisx@@Base+0x2e82a>
    598c:	blx	fe95259a <strvisx@@Base+0xfe93e826>
    5990:	ldrmi	r0, [r9], #-256	; 0xffffff00
    5994:			; <UNDEFINED> instruction: 0xf880f00c
    5998:	ldrdcc	lr, [r3], -r7
    599c:			; <UNDEFINED> instruction: 0x4642697d
    59a0:	blx	1fc8e <strvisx@@Base+0xbf1a>
    59a4:	blx	825ba <strvisx@@Base+0x6e846>
    59a8:	cdp	3, 1, cr3, cr8, cr5, {0}
    59ac:	blx	fe81c1f6 <strvisx@@Base+0xfe808482>
    59b0:	ldrmi	r0, [r9], #-257	; 0xfffffeff
    59b4:			; <UNDEFINED> instruction: 0xf870f00c
    59b8:			; <UNDEFINED> instruction: 0x163cf8df
    59bc:	ldrbtmi	r2, [r9], #-1
    59c0:	ldc	7, cr15, [r0], {252}	; 0xfc
    59c4:			; <UNDEFINED> instruction: 0x1634f8df
    59c8:	strbmi	r4, [r2], -r3, lsr #12
    59cc:	andcs	r4, r1, r9, ror r4
    59d0:	andge	pc, r8, sp, asr #17
    59d4:	blpl	40110 <strvisx@@Base+0x2c39c>
    59d8:	stc	7, cr15, [r4], {252}	; 0xfc
    59dc:	str	r6, [r4, #-2099]!	; 0xfffff7cd
    59e0:	orrpl	pc, ip, #54525952	; 0x3400000
    59e4:	ldmdavs	fp, {r3, r4, r8, r9, ip, sp}
    59e8:	svclt	0x00183b00
    59ec:	movwls	r2, #62209	; 0xf301
    59f0:	blls	5bee70 <strvisx@@Base+0x5ab0fc>
    59f4:	stmdals	r9, {r4, r5, r8, r9, sl, fp, sp, pc}
    59f8:			; <UNDEFINED> instruction: 0xf7fe6819
    59fc:	strmi	pc, [r3], -sp, lsl #22
    5a00:			; <UNDEFINED> instruction: 0x46984638
    5a04:			; <UNDEFINED> instruction: 0xf0049309
    5a08:	ldmdavs	ip!, {r0, r2, r5, r6, r8, r9, fp, ip, sp, lr, pc}
    5a0c:	strls	r4, [r0], -r1, asr #12
    5a10:	cdp	3, 1, cr2, cr8, cr0, {0}
    5a14:			; <UNDEFINED> instruction: 0xf0440a10
    5a18:	andscs	r0, r0, #4, 8	; 0x4000000
    5a1c:	ldrhtvs	r6, [ip], -sp
    5a20:	cdp2	0, 5, cr15, cr14, cr4, {0}
    5a24:	ldmdavs	r9, {r0, r1, r4, r5, r8, fp, sp, lr}
    5a28:			; <UNDEFINED> instruction: 0xf0002900
    5a2c:			; <UNDEFINED> instruction: 0xf50d84dd
    5a30:	andcs	r5, r0, ip, lsl #11
    5a34:			; <UNDEFINED> instruction: 0xf8df3518
    5a38:			; <UNDEFINED> instruction: 0xf8df2560
    5a3c:	strmi	r3, [r4], -r0, ror #10
    5a40:			; <UNDEFINED> instruction: 0xf8df682d
    5a44:	bl	fed6f13c <strvisx@@Base+0xfed5b3c8>
    5a48:	ldcls	8, cr0, [r5, #-0]
    5a4c:	ldrlt	pc, [r4, #2271]!	; 0x8df
    5a50:	svclt	0x001844fa
    5a54:	stmdaeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    5a58:	ldrbtmi	r5, [fp], #2221	; 0x8ad
    5a5c:	ldmpl	r3, {r0, r2, r4, r9, fp, ip, pc}^
    5a60:			; <UNDEFINED> instruction: 0xf8cd9a13
    5a64:	ldrtmi	r9, [r1], r8, lsr #32
    5a68:	svclt	0x00084282
    5a6c:			; <UNDEFINED> instruction: 0x463e461d
    5a70:	bvc	4412d8 <strvisx@@Base+0x42d564>
    5a74:			; <UNDEFINED> instruction: 0xf8d9e013
    5a78:			; <UNDEFINED> instruction: 0x46321010
    5a7c:	stmdbpl	r9, {r3, r4, r5, r9, sl, lr}
    5a80:	stmdacs	r0, {r3, r5, r7, r8, r9, sl, lr}
    5a84:			; <UNDEFINED> instruction: 0x4642bf14
    5a88:	bcs	e290 <error@@Base+0x1634>
    5a8c:	sbchi	pc, r3, r0, asr #32
    5a90:			; <UNDEFINED> instruction: 0x2010f8d9
    5a94:	ldmdbpl	r1, {r2, sl, ip, sp}
    5a98:			; <UNDEFINED> instruction: 0xf0002900
    5a9c:			; <UNDEFINED> instruction: 0xf8da8135
    5aa0:	bcs	daa8 <error@@Base+0xe4c>
    5aa4:	movthi	pc, #49216	; 0xc040	; <UNPREDICTABLE>
    5aa8:	andcs	pc, ip, #14286848	; 0xda0000
    5aac:	mvnle	r2, r0, lsl #20
    5ab0:			; <UNDEFINED> instruction: 0xf00a4658
    5ab4:	ldrb	pc, [lr, sp, asr #25]	; <UNPREDICTABLE>
    5ab8:	tstlt	fp, r9, lsl #22
    5abc:	ldmdblt	fp, {r0, r1, r3, r4, fp, ip, sp, lr}
    5ac0:			; <UNDEFINED> instruction: 0xf0079817
    5ac4:	andls	pc, r9, pc, asr sl	; <UNPREDICTABLE>
    5ac8:	stmdals	r9, {r1, r2, r4, r8, r9, fp, ip, pc}
    5acc:			; <UNDEFINED> instruction: 0xf7fe6819
    5ad0:	strmi	pc, [r1], -r3, lsr #21
    5ad4:	cdp	0, 1, cr9, cr8, cr9, {0}
    5ad8:			; <UNDEFINED> instruction: 0xf0020a10
    5adc:	strmi	pc, [r4], -sp, ror #20
    5ae0:			; <UNDEFINED> instruction: 0xf0002800
    5ae4:	mrc	1, 0, r8, cr8, cr4, {7}
    5ae8:	andcs	r0, r0, #16, 20	; 0x10000
    5aec:			; <UNDEFINED> instruction: 0xf0024621
    5af0:			; <UNDEFINED> instruction: 0xb180f9bf
    5af4:	ldrbeq	r6, [fp, -r3, lsl #16]
    5af8:	strthi	pc, [pc], #-320	; 5b00 <el_source@plt+0x31c4>
    5afc:	vst2.32	{d6,d8}, [r3], r3
    5b00:			; <UNDEFINED> instruction: 0xf5b34370
    5b04:			; <UNDEFINED> instruction: 0xf0004f80
    5b08:			; <UNDEFINED> instruction: 0xf8df8467
    5b0c:			; <UNDEFINED> instruction: 0x462104fc
    5b10:			; <UNDEFINED> instruction: 0xf0074478
    5b14:			; <UNDEFINED> instruction: 0xf50df8a3
    5b18:	strtmi	r5, [r0], -ip, lsl #7
    5b1c:	ldmdavs	fp, {r3, r4, r8, r9, ip, sp}
    5b20:	svclt	0x00183b00
    5b24:	movwls	r2, #62209	; 0xf301
    5b28:	stcl	7, cr15, [r6], #-1008	; 0xfffffc10
    5b2c:	ldcls	7, cr14, [r6], {86}	; 0x56
    5b30:			; <UNDEFINED> instruction: 0xf1b86821
    5b34:			; <UNDEFINED> instruction: 0xf47f0f00
    5b38:	stmdals	r9, {r0, r2, r6, r9, sl, fp, sp, pc}
    5b3c:	blx	1b43b3c <strvisx@@Base+0x1b2fdc8>
    5b40:	strmi	r6, [r3], -r1, lsr #16
    5b44:	movwls	r4, #38472	; 0x9648
    5b48:	blx	19c3b48 <strvisx@@Base+0x19afdd4>
    5b4c:	ldrtcc	pc, [ip], #2271	; 0x8df	; <UNPREDICTABLE>
    5b50:	ldmpl	r3, {r0, r2, r4, r9, fp, ip, pc}^
    5b54:	ldrt	r4, [sp], -r1, lsl #13
    5b58:	ldmdavc	fp, {r0, r4, r8, r9, fp, ip, pc}
    5b5c:			; <UNDEFINED> instruction: 0xf0402b00
    5b60:			; <UNDEFINED> instruction: 0xf8df8339
    5b64:	ldrbtmi	r0, [r8], #-1196	; 0xfffffb54
    5b68:			; <UNDEFINED> instruction: 0xf970f7fe
    5b6c:	strbt	r6, [pc], #2099	; 5b74 <el_source@plt+0x3238>
    5b70:	eorscs	sl, r0, #36, 26	; 0x900
    5b74:	strtmi	r4, [r8], -r9, asr #12
    5b78:	bl	ffb43b70 <strvisx@@Base+0xffb2fdfc>
    5b7c:			; <UNDEFINED> instruction: 0xf8df9f09
    5b80:			; <UNDEFINED> instruction: 0x46390494
    5b84:			; <UNDEFINED> instruction: 0xf0074478
    5b88:			; <UNDEFINED> instruction: 0x462bf957
    5b8c:	tstcs	r8, sl, asr #12
    5b90:			; <UNDEFINED> instruction: 0xf00d4638
    5b94:	stmdacs	r0, {r0, r1, r3, r7, r9, fp, ip, sp, lr, pc}
    5b98:	ldrhi	pc, [r0], #64	; 0x40
    5b9c:	tstls	r4, #67108864	; 0x4000000
    5ba0:	tstls	r1, #0, 6
    5ba4:	ldmdalt	r9, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    5ba8:	eoreq	pc, r5, r9, asr r8	; <UNPREDICTABLE>
    5bac:			; <UNDEFINED> instruction: 0xf0072500
    5bb0:	blls	3c435c <strvisx@@Base+0x3b05e8>
    5bb4:	andls	r2, r9, r6, lsl fp
    5bb8:			; <UNDEFINED> instruction: 0xf7fdd001
    5bbc:			; <UNDEFINED> instruction: 0x462cfaff
    5bc0:	strtmi	r4, [r9], r8, lsr #13
    5bc4:	strls	r9, [sl, #-1298]	; 0xfffffaee
    5bc8:	stmib	sp, {r4, r8, sl, ip, pc}^
    5bcc:	strls	r5, [ip, #-1299]	; 0xfffffaed
    5bd0:	mcrlt	7, 3, pc, cr13, cr14, {7}	; <UNPREDICTABLE>
    5bd4:	pkhtbmi	r5, r1, r9, asr #19
    5bd8:			; <UNDEFINED> instruction: 0xf7fc9110
    5bdc:	stmdavs	r0, {r1, r4, r7, r9, sl, fp, sp, lr, pc}
    5be0:	bl	243bd8 <strvisx@@Base+0x22fe64>
    5be4:			; <UNDEFINED> instruction: 0x46029910
    5be8:	strteq	pc, [ip], #-2271	; 0xfffff721
    5bec:			; <UNDEFINED> instruction: 0xf0074478
    5bf0:			; <UNDEFINED> instruction: 0xf7fff835
    5bf4:			; <UNDEFINED> instruction: 0xf007b848
    5bf8:	vnmla.f16	s30, s17, s10
    5bfc:			; <UNDEFINED> instruction: 0xf7fe1a90
    5c00:	strmi	pc, [r0], fp, lsl #20
    5c04:	stmdalt	r8, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    5c08:	ldreq	pc, [r0], #-2271	; 0xfffff721
    5c0c:			; <UNDEFINED> instruction: 0xf00a4478
    5c10:			; <UNDEFINED> instruction: 0xf7fffc1f
    5c14:			; <UNDEFINED> instruction: 0x464eb813
    5c18:	ldrdls	pc, [r8], -sp	; <UNPREDICTABLE>
    5c1c:	blcs	1fcf0 <strvisx@@Base+0xbf7c>
    5c20:	sbchi	pc, pc, r0, asr #32
    5c24:			; <UNDEFINED> instruction: 0xf7fc9809
    5c28:	strbmi	lr, [r8], -r8, ror #23
    5c2c:	bl	ff943c24 <strvisx@@Base+0xff92feb0>
    5c30:	strbmi	lr, [sl], -r8, lsl #8
    5c34:			; <UNDEFINED> instruction: 0x9615e9dd
    5c38:	bcs	2c87c <strvisx@@Base+0x18b08>
    5c3c:	movwcs	fp, #3848	; 0xf08
    5c40:	strbmi	r9, [r0], -pc, lsl #6
    5c44:	bl	ff643c3c <strvisx@@Base+0xff62fec8>
    5c48:			; <UNDEFINED> instruction: 0xf7fc9811
    5c4c:			; <UNDEFINED> instruction: 0x4628ebd6
    5c50:	blx	ff3c1c8c <strvisx@@Base+0xff3adf18>
    5c54:			; <UNDEFINED> instruction: 0xf7ff6833
    5c58:	movwcs	fp, #7144	; 0x1be8
    5c5c:			; <UNDEFINED> instruction: 0xf7ff9314
    5c60:	ldmdbvs	r3!, {r1, r2, r3, r5, r6, r8, fp, ip, sp, pc}
    5c64:	ldmdbpl	r9, {r1, r2, r3, r5, r6, r7, fp, lr}
    5c68:			; <UNDEFINED> instruction: 0xf0064478
    5c6c:			; <UNDEFINED> instruction: 0xf50dfff7
    5c70:	tstcc	r8, #140, 6	; 0x30000002
    5c74:	blcs	1fce8 <strvisx@@Base+0xbf74>
    5c78:			; <UNDEFINED> instruction: 0xf7ffd1d0
    5c7c:			; <UNDEFINED> instruction: 0xf8dabbc1
    5c80:	ldmdals	r2, {r3, r4, r9, sp}
    5c84:			; <UNDEFINED> instruction: 0xf43e4302
    5c88:	strdcs	sl, [r1], -r3
    5c8c:	andls	r4, r0, r2, asr #12
    5c90:	strmi	lr, [r1], -sp, asr #19
    5c94:	beq	4414fc <strvisx@@Base+0x42d788>
    5c98:			; <UNDEFINED> instruction: 0xf9f0f004
    5c9c:	svclt	0x00083001
    5ca0:	ldmibcc	pc!, {r0, r1, r2, r3, r6, ip, sp, lr, pc}^	; <UNPREDICTABLE>
    5ca4:	svclt	0x00eff7fe
    5ca8:	mrcls	6, 0, r4, cr4, cr1, {5}
    5cac:	bls	4ec8f0 <strvisx@@Base+0x4d8b7c>
    5cb0:	svclt	0x00082a00
    5cb4:	movwls	r2, #62208	; 0xf300
    5cb8:	beq	441524 <strvisx@@Base+0x42d7b0>
    5cbc:	bl	fe743cb4 <strvisx@@Base+0xfe72ff40>
    5cc0:			; <UNDEFINED> instruction: 0xf00d4628
    5cc4:	ldmdavs	r3!, {r0, r2, r4, r7, r9, fp, ip, sp, lr, pc}
    5cc8:	bllt	fec03ccc <strvisx@@Base+0xfebeff58>
    5ccc:			; <UNDEFINED> instruction: 0xf04f48d5
    5cd0:	blmi	ff5528d4 <strvisx@@Base+0xff53eb60>
    5cd4:	andls	r4, lr, #84934656	; 0x5100000
    5cd8:	bls	556ec0 <strvisx@@Base+0x54314c>
    5cdc:	strcs	r9, [r0, #-1299]	; 0xfffffaed
    5ce0:	ldmpl	r3, {r3, r5, r7, r9, sl, lr}^
    5ce4:	strls	r9, [sl, #-1298]	; 0xfffffaee
    5ce8:	ldrls	r9, [r4, #-1296]	; 0xfffffaf0
    5cec:			; <UNDEFINED> instruction: 0x462c681a
    5cf0:	strtmi	r9, [r9], ip, lsl #10
    5cf4:			; <UNDEFINED> instruction: 0xffb2f006
    5cf8:	ldrls	r9, [r1], -r9, lsl #10
    5cfc:	ldcllt	7, cr15, [r7, #1016]	; 0x3f8
    5d00:	tstls	r3, #67108864	; 0x4000000
    5d04:	ldmdblt	fp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    5d08:			; <UNDEFINED> instruction: 0xf8dd464e
    5d0c:	ldmdavs	r3!, {r3, r5, ip, pc}
    5d10:			; <UNDEFINED> instruction: 0xf43e2b00
    5d14:			; <UNDEFINED> instruction: 0xf50dae08
    5d18:	tstcc	r8, #140, 6	; 0x30000002
    5d1c:	blcc	1fd90 <strvisx@@Base+0xc01c>
    5d20:	movwcs	fp, #7960	; 0x1f18
    5d24:	svclt	0x00082800
    5d28:	movwls	r2, #62208	; 0xf300
    5d2c:			; <UNDEFINED> instruction: 0xf04fe415
    5d30:			; <UNDEFINED> instruction: 0xf8cd0800
    5d34:	strbmi	r8, [r4], -r8, asr #32
    5d38:			; <UNDEFINED> instruction: 0xf8cd46c1
    5d3c:			; <UNDEFINED> instruction: 0xf8cd8028
    5d40:			; <UNDEFINED> instruction: 0xf8cd8040
    5d44:			; <UNDEFINED> instruction: 0xf8cd8050
    5d48:			; <UNDEFINED> instruction: 0xf8cd8030
    5d4c:			; <UNDEFINED> instruction: 0xf7fe8024
    5d50:	svcge	0x0030bdae
    5d54:	andcs	r4, r3, r9, asr #12
    5d58:			; <UNDEFINED> instruction: 0xf7fc463a
    5d5c:	andcc	lr, r1, r8, ror ip
    5d60:	ldmdbvs	fp!, {r1, r2, ip, lr, pc}
    5d64:	cmnmi	r0, #50331648	; 0x3000000	; <UNPREDICTABLE>
    5d68:	svcmi	0x0080f5b3
    5d6c:	svcge	0x00ebf43e
    5d70:	strbmi	r4, [r9], -lr, lsr #17
    5d74:			; <UNDEFINED> instruction: 0xf0064478
    5d78:			; <UNDEFINED> instruction: 0xe79dff71
    5d7c:	stcl	7, cr15, [r0, #1008]	; 0x3f0
    5d80:	mrcls	6, 0, r4, cr4, cr1, {5}
    5d84:			; <UNDEFINED> instruction: 0xf7fc6800
    5d88:			; <UNDEFINED> instruction: 0x4641ea36
    5d8c:	stmiami	r8!, {r1, r9, sl, lr}
    5d90:			; <UNDEFINED> instruction: 0xf0064478
    5d94:	strbmi	pc, [r0], -r3, ror #30	; <UNPREDICTABLE>
    5d98:	bl	bc3d90 <strvisx@@Base+0xbb001c>
    5d9c:			; <UNDEFINED> instruction: 0xf7fce78c
    5da0:			; <UNDEFINED> instruction: 0x4634edb0
    5da4:			; <UNDEFINED> instruction: 0x9615e9dd
    5da8:			; <UNDEFINED> instruction: 0xf7fc6800
    5dac:	strtmi	lr, [r1], -r4, lsr #20
    5db0:	stmiami	r0!, {r1, r9, sl, lr}
    5db4:			; <UNDEFINED> instruction: 0xf0064478
    5db8:	qsaxmi	pc, r0, r1	; <UNPREDICTABLE>
    5dbc:	bl	743db4 <strvisx@@Base+0x730040>
    5dc0:	movwcs	lr, #5951	; 0x173f
    5dc4:			; <UNDEFINED> instruction: 0xf7ff930f
    5dc8:	ldmmi	fp, {r3, r6, r7, r8, r9, fp, ip, sp, pc}
    5dcc:			; <UNDEFINED> instruction: 0xf7fc4478
    5dd0:	ldmdavs	r3!, {r3, r4, r5, r7, sl, fp, sp, lr, pc}
    5dd4:	bllt	fef43dd8 <strvisx@@Base+0xfef30064>
    5dd8:			; <UNDEFINED> instruction: 0x462269b8
    5ddc:			; <UNDEFINED> instruction: 0x462b69f9
    5de0:			; <UNDEFINED> instruction: 0xf1a81a20
    5de4:	bl	19485fc <strvisx@@Base+0x1934888>
    5de8:	stmdane	r4, {r0, r8}
    5dec:	streq	lr, [r1, #-2881]	; 0xfffff4bf
    5df0:	bl	104be88 <strvisx@@Base+0x1038114>
    5df4:	b	13c7210 <strvisx@@Base+0x13b349c>
    5df8:	b	13ccf10 <strvisx@@Base+0x13b919c>
    5dfc:	bl	50d718 <strvisx@@Base+0x4f99a4>
    5e00:	b	1388e38 <strvisx@@Base+0x13750c4>
    5e04:	stcmi	14, cr6, [sp], {212}	; 0xd4
    5e08:	streq	lr, [lr, #-2885]	; 0xfffff4bb
    5e0c:	andeq	lr, r0, ip, lsl fp
    5e10:	tsteq	r1, r5, asr #22
    5e14:			; <UNDEFINED> instruction: 0xf00e447c
    5e18:	tstcs	r0, #500	; 0x1f4	; <UNPREDICTABLE>
    5e1c:	strls	r2, [r0], #-513	; 0xfffffdff
    5e20:	smlabteq	r2, sp, r9, lr
    5e24:			; <UNDEFINED> instruction: 0x46194650
    5e28:	bl	ff1c3e20 <strvisx@@Base+0xff1b00ac>
    5e2c:	blvs	e3f3a0 <strvisx@@Base+0xe2b62c>
    5e30:	blvs	1e576c0 <strvisx@@Base+0x1e4394c>
    5e34:	bne	8176e8 <strvisx@@Base+0x803974>
    5e38:	ldmvc	r0!, {r0, r2, r3, r8, sl, ip, sp, lr, pc}
    5e3c:	tsteq	r1, r5, ror #22
    5e40:	vmoveq.32	d0[0], lr
    5e44:	streq	lr, [r1], #-2881	; 0xfffff4bf
    5e48:	vmoveq.32	d0[0], lr
    5e4c:	streq	lr, [r4], #-2881	; 0xfffff4bf
    5e50:	bleq	5424f8 <strvisx@@Base+0x52e784>
    5e54:	strbne	lr, [lr, #-2639]	; 0xfffff5b1
    5e58:	mcrrne	10, 4, lr, r4, cr15
    5e5c:	streq	lr, [r5, #-2846]	; 0xfffff4e2
    5e60:	vldmiavs	lr, {s29-s104}
    5e64:	streq	lr, [ip], #-2884	; 0xfffff4bc
    5e68:	bl	110bf10 <strvisx@@Base+0x10f819c>
    5e6c:	ldfmie	f0, [r4], #-4
    5e70:			; <UNDEFINED> instruction: 0xff50f00e
    5e74:	ldrbtmi	r2, [ip], #-784	; 0xfffffcf0
    5e78:	strls	r2, [r0], #-513	; 0xfffffdff
    5e7c:	smlabteq	r2, sp, r9, lr
    5e80:			; <UNDEFINED> instruction: 0x46194658
    5e84:	bl	fe643e7c <strvisx@@Base+0xfe630108>
    5e88:			; <UNDEFINED> instruction: 0xf04fe51e
    5e8c:	blmi	1992a90 <strvisx@@Base+0x197ed1c>
    5e90:	strcs	r9, [r0, #-526]	; 0xfffffdf2
    5e94:			; <UNDEFINED> instruction: 0x46519a15
    5e98:	ldrls	r4, [r2, #-2154]	; 0xfffff796
    5e9c:	ldmpl	r3, {r3, r4, r5, r6, sl, lr}^
    5ea0:	ldrls	r9, [r0, #-1290]	; 0xfffffaf6
    5ea4:	ldrpl	lr, [r3, #-2509]	; 0xfffff633
    5ea8:			; <UNDEFINED> instruction: 0xf04fe720
    5eac:	blmi	1792ab0 <strvisx@@Base+0x177ed3c>
    5eb0:	strcs	r9, [r0, #-526]	; 0xfffffdf2
    5eb4:			; <UNDEFINED> instruction: 0x46519a15
    5eb8:			; <UNDEFINED> instruction: 0xf8cd4863
    5ebc:	strtmi	r8, [r8], r0, asr #32
    5ec0:	ldrbtmi	r5, [r8], #-2259	; 0xfffff72d
    5ec4:	strls	r9, [sl, #-1298]	; 0xfffffaee
    5ec8:	ldrpl	lr, [r3, #-2509]	; 0xfffff633
    5ecc:			; <UNDEFINED> instruction: 0xf50de70e
    5ed0:	tstcc	r8, #140, 6	; 0x30000002
    5ed4:	blcc	1ff48 <strvisx@@Base+0xc1d4>
    5ed8:	movwcs	fp, #7960	; 0x1f18
    5edc:	ldmdavs	r3!, {r0, r1, r2, r3, r8, r9, ip, pc}
    5ee0:	blt	fe903ee4 <strvisx@@Base+0xfe8f0170>
    5ee4:	ldmdami	r9, {r0, r9, sl, lr}^
    5ee8:			; <UNDEFINED> instruction: 0xf0064478
    5eec:	str	pc, [sp], #-3767	; 0xfffff149
    5ef0:	bls	46cb20 <strvisx@@Base+0x458dac>
    5ef4:	movweq	pc, #4227	; 0x1083	; <UNPREDICTABLE>
    5ef8:			; <UNDEFINED> instruction: 0x9614e9dd
    5efc:	svclt	0x000c2a01
    5f00:			; <UNDEFINED> instruction: 0xf0032300
    5f04:	blcs	6b10 <el_source@plt+0x41d4>
    5f08:	rsbhi	pc, r2, #64	; 0x40
    5f0c:	blcs	20000 <strvisx@@Base+0xc28c>
    5f10:			; <UNDEFINED> instruction: 0x81bcf040
    5f14:	movwcs	r9, #2067	; 0x813
    5f18:			; <UNDEFINED> instruction: 0xf7fc930f
    5f1c:	ldrb	lr, [sp, #-2670]	; 0xfffff592
    5f20:	movwcs	r2, #4106	; 0x100a
    5f24:			; <UNDEFINED> instruction: 0xf7fc9311
    5f28:			; <UNDEFINED> instruction: 0xf7ffe9ea
    5f2c:			; <UNDEFINED> instruction: 0xf8d7bbec
    5f30:	blcs	12768 <setlogin@@Base+0x14ac>
    5f34:	eorhi	pc, r3, #0
    5f38:	tstvs	r3, sl, lsl #22
    5f3c:	strtmi	r6, [r3], #-2355	; 0xfffff6cd
    5f40:	blt	1483f44 <strvisx@@Base+0x14701d0>
    5f44:	ldmdavs	ip, {r0, r3, r8, r9, fp, ip, pc}
    5f48:			; <UNDEFINED> instruction: 0xf0001c62
    5f4c:	ldmdavs	r8!, {r0, r1, r3, r5, r8, r9, pc}
    5f50:			; <UNDEFINED> instruction: 0xf00e4621
    5f54:	stmdacs	r0, {r0, r1, r2, r3, r5, r8, r9, sl, fp, ip, sp, lr, pc}
    5f58:	strcs	sp, [r0, #-3077]	; 0xfffff3fb
    5f5c:	ssatmi	r9, #9, r2, lsl #10
    5f60:			; <UNDEFINED> instruction: 0xf7fe950a
    5f64:			; <UNDEFINED> instruction: 0xf859bc9e
    5f68:	strcs	r0, [r0, #-36]	; 0xffffffdc
    5f6c:			; <UNDEFINED> instruction: 0xf80af007
    5f70:	strtmi	r4, [ip], -r8, lsr #13
    5f74:	ldrls	r4, [r2, #-1705]	; 0xfffff957
    5f78:	stmib	sp, {r1, r3, r8, sl, ip, pc}^
    5f7c:	strls	r5, [ip, #-1299]	; 0xfffffaed
    5f80:			; <UNDEFINED> instruction: 0xf7fe9009
    5f84:			; <UNDEFINED> instruction: 0xf8d3bc94
    5f88:	ldrbmi	sl, [r1], -r0
    5f8c:	blt	ffe03f90 <strvisx@@Base+0xffdf021c>
    5f90:	ldrdeq	r0, [r0], -r8
    5f94:	muleq	r0, r8, r2
    5f98:			; <UNDEFINED> instruction: 0x000002b0
    5f9c:	andeq	r0, r0, r0, ror #5
    5fa0:	andeq	r4, r2, r4, lsr sp
    5fa4:	andeq	r0, r1, sl, lsl #11
    5fa8:	andeq	r0, r1, r8, ror #10
    5fac:	andeq	r4, r2, lr, lsl ip
    5fb0:	muleq	r1, r8, r1
    5fb4:	ldrdeq	r4, [r2], -r2
    5fb8:	andeq	r0, r1, ip, lsl ip
    5fbc:	andeq	r4, r2, r6, lsl #22
    5fc0:	andeq	r0, r0, r8, asr #5
    5fc4:	andeq	r4, r2, r4, lsl sl
    5fc8:	andeq	pc, r0, r4, lsl #24
    5fcc:	andeq	r0, r1, sl, lsl #2
    5fd0:	andeq	r0, r1, lr, lsl #4
    5fd4:	andeq	r0, r1, sl, lsl r1
    5fd8:	muleq	r1, r4, r9
    5fdc:	ldrdeq	r0, [r0], -r4
    5fe0:	andeq	r0, r1, r2, asr r1
    5fe4:	andeq	r0, r1, r2, lsl r0
    5fe8:	andeq	r0, r1, lr, lsr #2
    5fec:	andeq	pc, r0, ip, asr lr	; <UNPREDICTABLE>
    5ff0:	andeq	pc, r0, lr, lsr lr	; <UNPREDICTABLE>
    5ff4:	andeq	r2, r1, r0, ror r6
    5ff8:	ldrdeq	pc, [r0], -r2
    5ffc:	strdeq	pc, [r0], -r8
    6000:	andeq	r4, r2, r8, lsl #13
    6004:	andeq	pc, r0, r2, ror lr	; <UNPREDICTABLE>
    6008:	andeq	pc, r0, r0, lsl #23
    600c:	andeq	r0, r0, r4, ror r2
    6010:	andeq	pc, r0, r6, asr #26
    6014:			; <UNDEFINED> instruction: 0x0000f9bc
    6018:	andeq	pc, r0, ip, lsr sl	; <UNPREDICTABLE>
    601c:	andeq	pc, r0, r8, lsr #20
    6020:	andeq	pc, r0, ip, ror ip	; <UNPREDICTABLE>
    6024:	ldrdeq	pc, [r0], -ip
    6028:			; <UNDEFINED> instruction: 0x000002b4
    602c:	andeq	pc, r0, r0, lsl r8	; <UNPREDICTABLE>
    6030:	andeq	pc, r0, r4, lsr r8	; <UNPREDICTABLE>
    6034:	andeq	pc, r0, r0, lsl r8	; <UNPREDICTABLE>
    6038:			; <UNDEFINED> instruction: 0x000103b0
    603c:	andeq	pc, r0, ip, lsl #18
    6040:	andeq	pc, r0, sl, lsr #17
    6044:	andeq	pc, r0, r8, lsl r5	; <UNPREDICTABLE>
    6048:	strdeq	pc, [r0], -r2
    604c:	andeq	pc, r0, r8, lsl r8	; <UNPREDICTABLE>
    6050:	strcc	pc, [r8, #2271]!	; 0x8df
    6054:	ldmdavs	fp, {r0, r1, r3, r4, r5, r6, sl, lr}
    6058:			; <UNDEFINED> instruction: 0xf0402b00
    605c:	ldmdavs	fp!, {r3, r4, r7, r8, pc}^
    6060:	blt	fef44064 <strvisx@@Base+0xfef302f0>
    6064:	stmdacs	r0, {r0, r1, r5, r9, sl, lr}
    6068:	movwcs	fp, #3848	; 0xf08
    606c:	ldmdavs	r3!, {r0, r1, r2, r3, r8, r9, ip, pc}
    6070:	ldmiblt	fp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    6074:	strne	pc, [r8, #2271]	; 0x8df
    6078:	ldrbtmi	r2, [r9], #-1
    607c:	ldmdb	r2!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    6080:	ldmdbvs	r9!, {r0, r1, r4, r8, r9, fp, ip, pc}
    6084:	ldmibvs	sp!, {r0, sp}
    6088:			; <UNDEFINED> instruction: 0x4c02e9d7
    608c:	bl	fec6067c <strvisx@@Base+0xfec4c908>
    6090:	movwls	r0, #63493	; 0xf805
    6094:	ldmib	r7, {r0, r1, r3, r4, r5, r6, r7, r8, fp, sp, lr}^
    6098:	bl	18a58c0 <strvisx@@Base+0x1891b4c>
    609c:			; <UNDEFINED> instruction: 0xf8cd0b03
    60a0:	blx	12e10a <strvisx@@Base+0x11a396>
    60a4:	strls	pc, [sl, -r3, lsl #6]
    60a8:			; <UNDEFINED> instruction: 0xf70cfb08
    60ac:	movwcc	pc, #23308	; 0x5b0c	; <UNPREDICTABLE>
    60b0:	strvc	pc, [fp, -r4, lsl #22]
    60b4:	blge	144f5c <strvisx@@Base+0x1311e8>
    60b8:	blls	2aad00 <strvisx@@Base+0x296f8c>
    60bc:	blx	117242 <strvisx@@Base+0x1034ce>
    60c0:	stmib	sp, {r1, r2, r3, r9, sl, fp, ip, sp, lr, pc}^
    60c4:	blx	fe930cfe <strvisx@@Base+0xfe91cf8a>
    60c8:	strls	sl, [sp, -r5, lsl #22]
    60cc:	vqdmulh.s<illegal width 8>	d15, d2, d4
    60d0:	andcs	pc, r1, #12, 22	; 0x3000
    60d4:			; <UNDEFINED> instruction: 0xec03fb0c
    60d8:	blx	fe92cd22 <strvisx@@Base+0xfe918fae>
    60dc:	ldrmi	r7, [fp], #2049	; 0x801
    60e0:	b	13ecd10 <strvisx@@Base+0x13d8f9c>
    60e4:	ldrmi	r2, [r0], #410	; 0x19a
    60e8:	orrpl	lr, fp, r1, asr #20
    60ec:	blx	fe8ea506 <strvisx@@Base+0xfe8d6792>
    60f0:	stmib	sp, {r2, sl, ip, sp}^
    60f4:	ldmib	sp, {r1, r3, sl, ip, sp}^
    60f8:	bls	2d7530 <strvisx@@Base+0x2c37bc>
    60fc:	strbtmi	r0, [r2], #-2723	; 0xfffff55d
    6100:	b	10ea934 <strvisx@@Base+0x10d6bc0>
    6104:	movwls	r5, #901	; 0x385
    6108:	orrscs	lr, fp, #323584	; 0x4f000
    610c:	blge	2c0888 <strvisx@@Base+0x2acb14>
    6110:	vldmiacs	r5, {s28-s106}
    6114:	movwls	r9, #23050	; 0x5a0a
    6118:			; <UNDEFINED> instruction: 0xf8cd4659
    611c:	beq	fe2f6134 <strvisx@@Base+0xfe2e23c0>
    6120:	strbtne	pc, [r0], #2271	; 0x8df	; <UNPREDICTABLE>
    6124:	beq	fee88b7c <strvisx@@Base+0xfee74e08>
    6128:	strpl	lr, [fp], #2628	; 0xa44
    612c:	b	10aad40 <strvisx@@Base+0x1096fcc>
    6130:	b	13dab58 <strvisx@@Base+0x13c6de4>
    6134:	ldrbtmi	r2, [r9], #-920	; 0xfffffc68
    6138:			; <UNDEFINED> instruction: 0xf7fc9402
    613c:	strb	lr, [sp], #-2260	; 0xfffff72c
    6140:	strbmi	r4, [r3], -lr, asr #12
    6144:	ldrdls	pc, [r8], -sp	; <UNPREDICTABLE>
    6148:	svclt	0x00082800
    614c:	movwls	r2, #62208	; 0xf300
    6150:			; <UNDEFINED> instruction: 0xf8dfe444
    6154:			; <UNDEFINED> instruction: 0x200114b4
    6158:			; <UNDEFINED> instruction: 0xf7fc4479
    615c:	blvs	e80474 <strvisx@@Base+0xe6c700>
    6160:			; <UNDEFINED> instruction: 0x20016aba
    6164:	strdls	r6, [r4, -fp]
    6168:			; <UNDEFINED> instruction: 0xf8cd1a54
    616c:	blvs	1f721d4 <strvisx@@Base+0x1f5e460>
    6170:	ldmib	r7, {sl, ip, pc}^
    6174:	bl	18f0db4 <strvisx@@Base+0x18dd040>
    6178:	tstls	r1, r5, lsl #2
    617c:	mrsls	r2, (UNDEF: 31)
    6180:	strne	pc, [r8], #2271	; 0x8df
    6184:	ldrbtmi	r9, [r9], #-1285	; 0xfffffafb
    6188:	blge	c08c4 <strvisx@@Base+0xacb50>
    618c:	stmia	sl!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    6190:			; <UNDEFINED> instruction: 0xf7fce424
    6194:			; <UNDEFINED> instruction: 0xf50debb6
    6198:	tstcc	r8, #140, 6	; 0x30000002
    619c:	blcc	20210 <strvisx@@Base+0xc49c>
    61a0:	movwcs	fp, #7960	; 0x1f18
    61a4:	stmdavs	r0, {r0, r1, r2, r3, r8, r9, ip, pc}
    61a8:	stmda	r4!, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    61ac:			; <UNDEFINED> instruction: 0xf8df4601
    61b0:	ldrbtmi	r0, [r8], #-1120	; 0xfffffba0
    61b4:	ldc2l	0, cr15, [r2, #-24]	; 0xffffffe8
    61b8:			; <UNDEFINED> instruction: 0xf7ff6833
    61bc:	blls	5b469c <strvisx@@Base+0x5a0928>
    61c0:	beq	441a28 <strvisx@@Base+0x42dcb4>
    61c4:	blls	420234 <strvisx@@Base+0x40c4c0>
    61c8:			; <UNDEFINED> instruction: 0xf7fe4611
    61cc:	ldmdavs	r3!, {r0, r2, r3, r4, r6, r7, r8, fp, ip, sp, lr, pc}
    61d0:	ldmiblt	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    61d4:			; <UNDEFINED> instruction: 0xf8df9c11
    61d8:			; <UNDEFINED> instruction: 0x4620543c
    61dc:			; <UNDEFINED> instruction: 0xf7fc447d
    61e0:	vstrne.16	s28, [r1, #-192]	; 0xffffff40	; <UNPREDICTABLE>
    61e4:	strmi	r9, [r8], -sl, lsl #2
    61e8:	cdp2	0, 7, cr15, cr6, cr6, {0}
    61ec:	mvnscc	pc, #79	; 0x4f
    61f0:	andcs	r9, r1, #163840	; 0x28000
    61f4:	strls	r9, [r0, #-1025]	; 0xfffffbff
    61f8:			; <UNDEFINED> instruction: 0xf7fc4604
    61fc:			; <UNDEFINED> instruction: 0x4620e9de
    6200:	mcr2	7, 1, pc, cr4, cr13, {7}	; <UNPREDICTABLE>
    6204:			; <UNDEFINED> instruction: 0xf7fc4620
    6208:	ldmdavs	r3!, {r3, r4, r5, r6, r7, fp, sp, lr, pc}
    620c:	stmiblt	r0!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    6210:	stmdals	ip, {r0, r3, r8, fp, ip, lr}
    6214:			; <UNDEFINED> instruction: 0xf00a9210
    6218:	ldmdbvs	r3!, {r0, r1, r3, r4, r8, fp, ip, sp, lr, pc}
    621c:	strtmi	r9, [r3], #-2576	; 0xfffff5f0
    6220:	ldmlt	pc, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^	; <UNPREDICTABLE>
    6224:	strmi	r9, [r0], r9, lsl #22
    6228:	mcrrne	8, 1, r6, r8, cr9
    622c:	bicshi	pc, sl, r0
    6230:	tstls	r9, r8, lsr r8
    6234:	ldc2	0, cr15, [lr, #56]!	; 0x38
    6238:	stmdacs	r0, {r0, r3, r8, fp, ip, pc}
    623c:	cmnhi	r8, r0, asr #6	; <UNPREDICTABLE>
    6240:	eoreq	pc, r1, r9, asr r8	; <UNPREDICTABLE>
    6244:	smlabbls	r9, sp, r0, r0
    6248:	cdp2	0, 9, cr15, cr12, cr6, {0}
    624c:	strmi	r9, [r3], -r9, lsl #18
    6250:	movwls	r6, #38968	; 0x9838
    6254:	stc2	0, cr15, [lr, #56]!	; 0x38
    6258:	stcle	8, cr2, [r7], {1}
    625c:	ldrls	r2, [r0, #-1280]	; 0xfffffb00
    6260:	strtmi	r4, [r9], r8, lsr #13
    6264:	ldrpl	lr, [r3, #-2509]	; 0xfffff633
    6268:	bllt	884268 <strvisx@@Base+0x8704f4>
    626c:	strcs	r4, [r0, #-1193]	; 0xfffffb57
    6270:	ssatmi	r9, #9, r0, lsl #10
    6274:	ldrdeq	pc, [r4], -r9
    6278:			; <UNDEFINED> instruction: 0xf0069514
    627c:	strmi	pc, [r1], r3, lsl #29
    6280:			; <UNDEFINED> instruction: 0xff9cf7fc
    6284:			; <UNDEFINED> instruction: 0xf7fe9513
    6288:	ldrls	fp, [r3], #-2834	; 0xfffff4ee
    628c:			; <UNDEFINED> instruction: 0xf00c4638
    6290:	ldrt	pc, [pc], -pc, lsr #31	; <UNPREDICTABLE>
    6294:	tstls	r2, #67108864	; 0x4000000
    6298:	cdp	3, 0, cr2, cr8, cr0, {0}
    629c:			; <UNDEFINED> instruction: 0xf7ff3a10
    62a0:			; <UNDEFINED> instruction: 0xf7fcb9e5
    62a4:			; <UNDEFINED> instruction: 0xf50deb2e
    62a8:	tstcc	r8, #140, 6	; 0x30000002
    62ac:	blcc	20320 <strvisx@@Base+0xc5ac>
    62b0:	movwcs	fp, #7960	; 0x1f18
    62b4:	stmdavs	r0, {r0, r1, r2, r3, r8, r9, ip, pc}
    62b8:	svc	0x009cf7fb
    62bc:	strmi	r9, [r2], -r9, lsl #18
    62c0:	ldrbtmi	r4, [r8], #-2261	; 0xfffff72b
    62c4:	stc2l	0, cr15, [sl], {6}
    62c8:			; <UNDEFINED> instruction: 0xf7ff6833
    62cc:			; <UNDEFINED> instruction: 0xf7fcb8ae
    62d0:			; <UNDEFINED> instruction: 0xf50deb18
    62d4:	tstcc	r8, #140, 6	; 0x30000002
    62d8:	blcc	2034c <strvisx@@Base+0xc5d8>
    62dc:	movwcs	fp, #7960	; 0x1f18
    62e0:	stmdavs	r0, {r0, r1, r2, r3, r8, r9, ip, pc}
    62e4:	svc	0x0086f7fb
    62e8:	strls	r4, [r9], #-1569	; 0xfffff9df
    62ec:	stmiami	fp, {r1, r9, sl, lr}^
    62f0:			; <UNDEFINED> instruction: 0xf0064478
    62f4:	ldmdavs	r3!, {r0, r1, r4, r5, r7, sl, fp, ip, sp, lr, pc}
    62f8:	ldmlt	r7, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    62fc:			; <UNDEFINED> instruction: 0xf0064608
    6300:	blls	5c5c0c <strvisx@@Base+0x5b1e98>
    6304:	andls	r6, r9, r9, lsl r8
    6308:	blt	fefc430c <strvisx@@Base+0xfefb0598>
    630c:	ldmdavs	ip, {r0, r3, r8, r9, fp, ip, pc}
    6310:			; <UNDEFINED> instruction: 0xf0001c60
    6314:	ldmdavs	r8!, {r0, r1, r2, r3, r4, r6, r8, pc}
    6318:			; <UNDEFINED> instruction: 0xf00e4621
    631c:	stmdacs	r0, {r0, r1, r3, r6, r8, sl, fp, ip, sp, lr, pc}
    6320:	strcs	sp, [r0, #-3082]	; 0xfffff3f6
    6324:	ssatmi	r9, #9, r2, lsl #10
    6328:	strtmi	r4, [r9], ip, lsr #12
    632c:	ldrls	r9, [r0, #-1290]	; 0xfffffaf6
    6330:	strls	r9, [r9, #-1292]	; 0xfffffaf4
    6334:	blt	fef04334 <strvisx@@Base+0xfeef05c0>
    6338:	eoreq	pc, r4, r9, asr r8	; <UNPREDICTABLE>
    633c:			; <UNDEFINED> instruction: 0xf0062500
    6340:	strtmi	pc, [r8], r1, lsr #28
    6344:	strtmi	r4, [r9], ip, lsr #12
    6348:			; <UNDEFINED> instruction: 0xf7fc9009
    634c:	ldrls	pc, [r2, #-3895]	; 0xfffff0c9
    6350:	ldrls	r9, [r0, #-1290]	; 0xfffffaf6
    6354:			; <UNDEFINED> instruction: 0xf7fe950c
    6358:			; <UNDEFINED> instruction: 0xf50dbaaa
    635c:	ldmmi	r0!, {r2, r3, r7, r8, r9, ip, lr}
    6360:	ldrbtmi	r3, [r8], #-792	; 0xfffffce8
    6364:	blcc	203d8 <strvisx@@Base+0xc664>
    6368:	movwcs	fp, #7960	; 0x1f18
    636c:			; <UNDEFINED> instruction: 0xf006930f
    6370:			; <UNDEFINED> instruction: 0x4620fc75
    6374:	stmda	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    6378:			; <UNDEFINED> instruction: 0xf7ff6833
    637c:	ldmdbvs	r3!, {r1, r2, r4, r6, fp, ip, sp, pc}
    6380:	stmdals	pc, {r4, ip, pc}	; <UNPREDICTABLE>
    6384:			; <UNDEFINED> instruction: 0xf00a5919
    6388:	bls	44451c <strvisx@@Base+0x4307a8>
    638c:			; <UNDEFINED> instruction: 0x9013e5d4
    6390:	stmiami	r4!, {r6, r7, r8, sl, sp, lr, pc}
    6394:	stcmi	6, cr4, [r4], #260	; 0x104
    6398:	blmi	fe90ebb0 <strvisx@@Base+0xfe8fae3c>
    639c:	ldmdals	r5, {r2, r7, r9, sl, lr}
    63a0:			; <UNDEFINED> instruction: 0xf850447b
    63a4:	strtmi	r8, [r4], ip
    63a8:	ldmdals	r3, {r0, r2, r4, sl, fp, ip, pc}
    63ac:	andvc	pc, r0, r8, asr #17
    63b0:	andmi	pc, ip, r4, asr r8	; <UNPREDICTABLE>
    63b4:	cfldrsls	mvf9, [r0], {10}
    63b8:	ldcleq	0, cr15, [r8], #-16
    63bc:			; <UNDEFINED> instruction: 0xf8c49c0a
    63c0:			; <UNDEFINED> instruction: 0xf7fbc000
    63c4:	movwcs	lr, #3856	; 0xf10
    63c8:	andcc	pc, r0, r8, asr #17
    63cc:	stmdblt	lr!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    63d0:			; <UNDEFINED> instruction: 0xf7fb200a
    63d4:	ldr	lr, [r9, #3988]	; 0xf94
    63d8:	stmdavs	r8!, {r1, r2, r4, r8, sl, fp, ip, pc}
    63dc:	stmda	ip, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    63e0:	eorvs	r6, ip, r3, lsr r8
    63e4:	ldmlt	r4!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    63e8:	ldr	r4, [r0], #1544	; 0x608
    63ec:	smlabbls	pc, r8, r6, r4	; <UNPREDICTABLE>
    63f0:	andls	lr, pc, r7, lsr #8
    63f4:	stmmi	lr, {r5, r6, sl, sp, lr, pc}
    63f8:			; <UNDEFINED> instruction: 0xf04f4651
    63fc:	strcs	r3, [r0, #-1023]	; 0xfffffc01
    6400:	movwls	r4, #58488	; 0xe478
    6404:	stc2	0, cr15, [sl], #-24	; 0xffffffe8
    6408:	ldrls	r4, [r2, #-1704]	; 0xfffff958
    640c:	ldrls	r9, [r0, #-1290]	; 0xfffffaf6
    6410:			; <UNDEFINED> instruction: 0xf7fe9514
    6414:	smlabtcs	r4, r6, lr, fp
    6418:			; <UNDEFINED> instruction: 0xf7fb4628
    641c:	blls	442264 <strvisx@@Base+0x42e4f0>
    6420:	svceq	0x0038f013
    6424:			; <UNDEFINED> instruction: 0xf43f9013
    6428:	ldcls	13, cr10, [r5], {113}	; 0x71
    642c:	ldmdbmi	sp!, {r2, r9, sp}^
    6430:			; <UNDEFINED> instruction: 0xf8549b10
    6434:			; <UNDEFINED> instruction: 0xf0038001
    6438:	blmi	1ec9620 <strvisx@@Base+0x1eb58ac>
    643c:			; <UNDEFINED> instruction: 0xf8c84629
    6440:	stmiapl	r3!, {ip, sp, lr}^
    6444:	blmi	1ed7cbc <strvisx@@Base+0x1ec3f48>
    6448:	andgt	pc, r0, r4, asr #17
    644c:			; <UNDEFINED> instruction: 0xf7fb447b
    6450:			; <UNDEFINED> instruction: 0xf8c8eeca
    6454:	ldrb	r5, [r9, #-0]
    6458:			; <UNDEFINED> instruction: 0xf7ff46a8
    645c:	ldmdami	r6!, {r0, r2, r4, r5, r6, r7, fp, ip, sp, pc}^
    6460:	ldrbtmi	r2, [r8], #-1280	; 0xfffffb00
    6464:	blx	ffec2486 <strvisx@@Base+0xffeae712>
    6468:	mrclt	7, 4, APSR_nzcv, cr5, cr14, {7}
    646c:			; <UNDEFINED> instruction: 0x46514873
    6470:			; <UNDEFINED> instruction: 0xf04f2500
    6474:	ldrbtmi	r3, [r8], #-1023	; 0xfffffc01
    6478:			; <UNDEFINED> instruction: 0xf006930e
    647c:	ldrls	pc, [r2, #-3055]	; 0xfffff411
    6480:			; <UNDEFINED> instruction: 0xf7fe950a
    6484:	movwcc	fp, #7820	; 0x1e8c
    6488:	eorsle	r4, pc, r9, lsr r6	; <UNPREDICTABLE>
    648c:	ldrbtmi	r4, [r8], #-2156	; 0xfffff794
    6490:	blx	ff9424b2 <strvisx@@Base+0xff92e73e>
    6494:	ldmdbvs	r9!, {r4, sl, sp, lr, pc}
    6498:	blls	417de8 <strvisx@@Base+0x404074>
    649c:	beq	441d04 <strvisx@@Base+0x42df90>
    64a0:			; <UNDEFINED> instruction: 0xf7fe6809
    64a4:			; <UNDEFINED> instruction: 0x4604f871
    64a8:			; <UNDEFINED> instruction: 0xf00c4638
    64ac:	blls	405f38 <strvisx@@Base+0x3f21c4>
    64b0:	svclt	0x00082c00
    64b4:	movwls	r2, #62208	; 0xf300
    64b8:	blt	fe4444bc <strvisx@@Base+0xfe430748>
    64bc:	subls	pc, r4, sp, asr #17
    64c0:			; <UNDEFINED> instruction: 0xf04f4860
    64c4:	stmdbls	r9, {fp}
    64c8:			; <UNDEFINED> instruction: 0xf0064478
    64cc:			; <UNDEFINED> instruction: 0xf7fffbc7
    64d0:			; <UNDEFINED> instruction: 0xf7fcbbb8
    64d4:	ldmdami	ip, {r1, r5, r6, r7, fp, sp, lr, pc}^
    64d8:	stmdaeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    64dc:			; <UNDEFINED> instruction: 0xf04f4651
    64e0:	ldrbtmi	r3, [r8], #-1023	; 0xfffffc01
    64e4:	strbmi	r9, [r4], -lr, lsl #6
    64e8:	blx	fee4250a <strvisx@@Base+0xfee2e796>
    64ec:			; <UNDEFINED> instruction: 0xf8cd46c1
    64f0:			; <UNDEFINED> instruction: 0xf8cd8048
    64f4:			; <UNDEFINED> instruction: 0xf8cd8028
    64f8:			; <UNDEFINED> instruction: 0xf8cd8040
    64fc:			; <UNDEFINED> instruction: 0xf8cd8050
    6500:			; <UNDEFINED> instruction: 0xf8cd8030
    6504:	ldrls	r8, [r1], -r4, lsr #32
    6508:	ldmiblt	r1, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    650c:	ldrbtmi	r4, [r8], #-2127	; 0xfffff7b1
    6510:	blx	fe942532 <strvisx@@Base+0xfe92e7be>
    6514:	bllt	ff444518 <strvisx@@Base+0xff4307a4>
    6518:	blcs	2060c <strvisx@@Base+0xc898>
    651c:	strcc	sp, [r1], #-329	; 0xfffffeb7
    6520:	suble	r9, sl, r9, lsl #18
    6524:	ldrbtmi	r4, [r8], #-2122	; 0xfffff7b6
    6528:	blx	fe64254a <strvisx@@Base+0xfe62e7d6>
    652c:	blt	15c4530 <strvisx@@Base+0x15b07bc>
    6530:	ldrbmi	r4, [r1], -r8, asr #16
    6534:			; <UNDEFINED> instruction: 0xf8cd2500
    6538:	ldrbtmi	r8, [r8], #-56	; 0xffffffc8
    653c:	blx	fe3c255e <strvisx@@Base+0xfe3ae7ea>
    6540:	strtmi	r4, [r9], r8, lsr #13
    6544:	stmib	sp, {r4, r8, sl, ip, pc}^
    6548:	strls	r5, [r9, #-1299]	; 0xfffffaed
    654c:			; <UNDEFINED> instruction: 0xf7fe9611
    6550:			; <UNDEFINED> instruction: 0xf50db9ae
    6554:	tstcc	r8, #140, 6	; 0x30000002
    6558:	blcc	205cc <strvisx@@Base+0xc858>
    655c:	movwcs	fp, #7960	; 0x1f18
    6560:			; <UNDEFINED> instruction: 0xf7ff930f
    6564:	ldmdami	ip!, {r0, r1, r3, r4, r5, r9, fp, ip, sp, pc}
    6568:	ldrbmi	r2, [r1], -r0, lsl #10
    656c:	mvnscc	pc, #79	; 0x4f
    6570:	movwls	r4, #58488	; 0xe478
    6574:			; <UNDEFINED> instruction: 0xf006462c
    6578:			; <UNDEFINED> instruction: 0x46a9fb71
    657c:	strls	r4, [r9, #-1704]	; 0xfffff958
    6580:	strls	r9, [sl, #-1298]	; 0xfffffaee
    6584:	stmib	sp, {r4, r8, sl, ip, pc}^
    6588:	strls	r5, [ip, #-1299]	; 0xfffffaed
    658c:			; <UNDEFINED> instruction: 0xf7fe9611
    6590:	ldmdami	r2!, {r1, r2, r3, r7, r8, fp, ip, sp, pc}
    6594:	ldrbtmi	r9, [r8], #-2321	; 0xfffff6ef
    6598:	ldrsbhi	pc, [r0], #-141	; 0xffffff73	; <UNPREDICTABLE>
    659c:	blx	17c25be <strvisx@@Base+0x17ae84a>
    65a0:	bllt	14045a4 <strvisx@@Base+0x13f0830>
    65a4:	strls	r2, [lr], #-1280	; 0xfffffb00
    65a8:	ldrls	r4, [r2, #-1704]	; 0xfffff958
    65ac:			; <UNDEFINED> instruction: 0xf7fe950a
    65b0:			; <UNDEFINED> instruction: 0x4638bdf6
    65b4:	cdp2	0, 1, cr15, cr12, cr12, {0}
    65b8:	stmdami	r9!, {r0, r4, r5, r7, r8, r9, sl, sp, lr, pc}
    65bc:			; <UNDEFINED> instruction: 0xf0064478
    65c0:			; <UNDEFINED> instruction: 0xf7fffb4d
    65c4:	strcs	fp, [r0, #-2571]	; 0xfffff5f5
    65c8:	ldr	r9, [sp, -lr, lsl #8]
    65cc:	strls	r2, [lr], #-1280	; 0xfffffb00
    65d0:	stcllt	7, cr15, [r2, #1016]!	; 0x3f8
    65d4:	strls	r2, [lr], #-1280	; 0xfffffb00
    65d8:	ldrls	r4, [r2, #-1704]	; 0xfffff958
    65dc:	ldrls	r9, [r0, #-1290]	; 0xfffffaf6
    65e0:	ldcllt	7, cr15, [pc, #1016]	; 69e0 <el_source@plt+0x40a4>
    65e4:	tstls	lr, r0, lsl #10
    65e8:	ldmdami	lr, {r1, r3, r5, r7, r8, r9, sl, sp, lr, pc}
    65ec:			; <UNDEFINED> instruction: 0xf0064478
    65f0:	ldmdami	sp, {r0, r3, r4, r5, r6, fp, ip, sp, lr, pc}
    65f4:	ldrbtmi	r9, [r8], #-2318	; 0xfffff6f2
    65f8:			; <UNDEFINED> instruction: 0xf874f006
    65fc:	andeq	r4, r2, r4, lsl #1
    6600:	andeq	pc, r0, sl, ror #14
    6604:	strdeq	pc, [r0], -r2
    6608:	ldrdeq	pc, [r0], -r0
    660c:	andeq	pc, r0, r2, ror #11
    6610:			; <UNDEFINED> instruction: 0x0000f7b2
    6614:	ldrdeq	pc, [r0], -r4
    6618:			; <UNDEFINED> instruction: 0x0000f5be
    661c:	andeq	pc, r0, r4, ror #10
    6620:	andeq	pc, r0, r2, lsl #6
    6624:	andeq	r0, r0, r4, lsl #5
    6628:	andeq	r0, r0, ip, lsl #5
    662c:			; <UNDEFINED> instruction: 0xffffcf1d
    6630:	andeq	pc, r0, r4, ror #1
    6634:			; <UNDEFINED> instruction: 0xffffce71
    6638:	andeq	lr, r0, sl, lsr #31
    663c:	andeq	lr, r0, sl, ror #31
    6640:	ldrdeq	pc, [r0], -lr
    6644:	andeq	pc, r0, r4, lsr #1
    6648:	andeq	lr, r0, lr, lsr #31
    664c:	andeq	pc, r0, r2, asr #32
    6650:			; <UNDEFINED> instruction: 0x0000f1be
    6654:	andeq	lr, r0, lr, ror #29
    6658:	andeq	lr, r0, r0, lsr #30
    665c:	andeq	pc, r0, r2, asr r0	; <UNPREDICTABLE>
    6660:	andeq	pc, r0, r4, lsl #2
    6664:	andeq	lr, r0, r0, lsr pc
    6668:	muleq	r0, lr, fp
    666c:	svcmi	0x00f0e92d
    6670:	stc	6, cr4, [sp, #-88]!	; 0xffffffa8
    6674:	strmi	r8, [r0], r2, lsl #22
    6678:	strcc	pc, [r8], #2271	; 0x8df
    667c:			; <UNDEFINED> instruction: 0xf8df460c
    6680:	ldrbtmi	r2, [fp], #-1160	; 0xfffffb78
    6684:			; <UNDEFINED> instruction: 0xf6ad447a
    6688:			; <UNDEFINED> instruction: 0xf8d30d4c
    668c:			; <UNDEFINED> instruction: 0xf8df721c
    6690:	ldmpl	r3, {r2, r3, r4, r5, r6, sl, ip, sp}^
    6694:			; <UNDEFINED> instruction: 0xf8cd681b
    6698:			; <UNDEFINED> instruction: 0xf04f3844
    669c:			; <UNDEFINED> instruction: 0xf8df0300
    66a0:	ldrbtmi	r3, [fp], #-1136	; 0xfffffb90
    66a4:	stmdblt	pc!, {r0, r3, r8, r9, ip, pc}	; <UNPREDICTABLE>
    66a8:			; <UNDEFINED> instruction: 0xf7fb4638
    66ac:	stmdacs	r0, {r1, r2, r3, r5, r6, r7, r9, sl, fp, sp, lr, pc}
    66b0:	cmphi	pc, r0, asr #32	; <UNPREDICTABLE>
    66b4:			; <UNDEFINED> instruction: 0xf10d2300
    66b8:	vmla.f32	s0, s16, s25
    66bc:			; <UNDEFINED> instruction: 0x461d3a90
    66c0:	ldrbne	pc, [r0], #-2271	; 0xfffff721	; <UNPREDICTABLE>
    66c4:	ldrbtmi	r4, [r9], #-1600	; 0xfffff9c0
    66c8:	ldc2l	0, cr15, [r6], #-4
    66cc:	andeq	pc, r0, sl, asr #17
    66d0:			; <UNDEFINED> instruction: 0xf0002800
    66d4:			; <UNDEFINED> instruction: 0xf006820b
    66d8:	pkhtbmi	pc, r1, r5, asr #24	; <UNPREDICTABLE>
    66dc:	rsble	r2, sp, r0, lsl #24
    66e0:			; <UNDEFINED> instruction: 0xf0064620
    66e4:			; <UNDEFINED> instruction: 0xf8dafc4f
    66e8:			; <UNDEFINED> instruction: 0xf7fd1000
    66ec:			; <UNDEFINED> instruction: 0x4604fc95
    66f0:	strtmi	r4, [r1], -r0, asr #12
    66f4:			; <UNDEFINED> instruction: 0xf9f2f7fd
    66f8:			; <UNDEFINED> instruction: 0xf0002800
    66fc:			; <UNDEFINED> instruction: 0xb3be80e8
    6700:	ldrcc	pc, [r4], #-2271	; 0xfffff721
    6704:			; <UNDEFINED> instruction: 0xf8d3447b
    6708:	blcs	12f30 <setlogin@@Base+0x1c74>
    670c:	bichi	pc, r6, r0, asr #32
    6710:	strne	pc, [r8], #-2271	; 0xfffff721
    6714:	strcs	pc, [r8], #-2271	; 0xfffff721
    6718:	ldrbtmi	r4, [sl], #-1145	; 0xfffffb87
    671c:			; <UNDEFINED> instruction: 0xf8dfad11
    6720:	vst3.8	{d23-d25}, [pc], r4
    6724:	stmib	sp, {r8, r9, sp, lr}^
    6728:	strls	r1, [r2], #-1539	; 0xfffff9fd
    672c:	andls	r4, r1, #26214400	; 0x1900000
    6730:	andcs	r4, r1, #2130706432	; 0x7f000000
    6734:	strls	r4, [r0, -r8, lsr #12]
    6738:	svc	0x003ef7fb
    673c:	andcs	r2, r1, #0, 6
    6740:	andls	r9, r0, #67108864	; 0x4000000
    6744:	strtmi	r4, [r9], -fp, asr #12
    6748:			; <UNDEFINED> instruction: 0x46404652
    674c:			; <UNDEFINED> instruction: 0xf852f7fe
    6750:	strtmi	r4, [r0], -r3, lsl #12
    6754:			; <UNDEFINED> instruction: 0xf7fb461c
    6758:			; <UNDEFINED> instruction: 0x4648ee50
    675c:	mcr	7, 2, pc, cr12, cr11, {7}	; <UNPREDICTABLE>
    6760:	ldrdeq	pc, [r0], -sl
    6764:	mcr	7, 2, pc, cr8, cr11, {7}	; <UNPREDICTABLE>
    6768:			; <UNDEFINED> instruction: 0xf7fb4640
    676c:	rsc	lr, r8, r6, asr #28
    6770:	ldrbtmi	r4, [fp], #-3053	; 0xfffff413
    6774:	andcc	pc, ip, #13828096	; 0xd30000
    6778:	stmiami	ip!, {r0, r1, r5, r8, fp, ip, sp, pc}^
    677c:	ldrbtmi	r4, [r8], #-1569	; 0xfffff9df
    6780:	cdp2	0, 6, cr15, cr6, cr9, {0}
    6784:	bmi	ffab1fd0 <strvisx@@Base+0xffa9e25c>
    6788:	movwvs	pc, #1103	; 0x44f	; <UNPREDICTABLE>
    678c:	ldrmi	r9, [r9], -r1, lsl #8
    6790:			; <UNDEFINED> instruction: 0x4630447a
    6794:	andcs	r9, r1, #0, 4
    6798:	svc	0x000ef7fb
    679c:	andcs	r2, r1, #0, 6
    67a0:	andls	r9, r0, #67108864	; 0x4000000
    67a4:			; <UNDEFINED> instruction: 0x464b4631
    67a8:			; <UNDEFINED> instruction: 0x46404652
    67ac:			; <UNDEFINED> instruction: 0xf822f7fe
    67b0:			; <UNDEFINED> instruction: 0xf0402800
    67b4:			; <UNDEFINED> instruction: 0x46208195
    67b8:	mrc	7, 0, APSR_nzcv, cr14, cr11, {7}
    67bc:	movwcs	r9, #3081	; 0xc09
    67c0:			; <UNDEFINED> instruction: 0x461948dc
    67c4:	stmdapl	r0!, {r0, r9, sp}
    67c8:			; <UNDEFINED> instruction: 0xf7fb6800
    67cc:	ldmmi	sl, {r2, r4, r5, r8, r9, sl, fp, sp, lr, pc}^
    67d0:	andcs	r2, r1, #0, 6
    67d4:	stmdapl	r0!, {r0, r3, r4, r9, sl, lr}
    67d8:	stmdavs	r0, {r3, ip, pc}
    67dc:	svc	0x002af7fb
    67e0:	ldrbtmi	r4, [fp], #-3030	; 0xfffff42a
    67e4:	andseq	pc, ip, #13828096	; 0xd30000
    67e8:			; <UNDEFINED> instruction: 0xf0002800
    67ec:	movwcs	r8, #187	; 0xbb
    67f0:	blmi	ff4eb414 <strvisx@@Base+0xff4d76a0>
    67f4:	movtlt	pc, #51423	; 0xc8df	; <UNPREDICTABLE>
    67f8:	ldrbtmi	r4, [fp], #-4051	; 0xfffff02d
    67fc:	ldrbtmi	r4, [pc], #-1275	; 6804 <el_source@plt+0x3ec8>
    6800:	bcc	442028 <strvisx@@Base+0x42e2b4>
    6804:	stcge	0, cr14, [ip], {61}	; 0x3d
    6808:	movwcs	r4, #1576	; 0x628
    680c:	strtmi	r9, [r1], -ip, lsl #6
    6810:	mrc	7, 7, APSR_nzcv, cr14, cr11, {7}
    6814:	stmdacs	r0, {r1, r2, r9, sl, lr}
    6818:	stmdavs	r3!, {r1, r3, r4, r5, r6, ip, lr, pc}
    681c:	vldmdble	r7!, {d18-d17}
    6820:			; <UNDEFINED> instruction: 0x4603ac11
    6824:	andcs	sl, sl, #212992	; 0x34000
    6828:	beq	fe442090 <strvisx@@Base+0xfe42e31c>
    682c:	svc	0x0070f7fb
    6830:			; <UNDEFINED> instruction: 0x46204631
    6834:	andvs	pc, r0, #1325400064	; 0x4f000000
    6838:	cdp2	0, 6, cr15, cr14, cr12, {0}
    683c:	svcvs	0x0000f5b0
    6840:			; <UNDEFINED> instruction: 0x4659d25b
    6844:			; <UNDEFINED> instruction: 0xf7fb4620
    6848:	cdp	15, 1, cr14, cr8, cr6, {7}
    684c:			; <UNDEFINED> instruction: 0x26001a10
    6850:			; <UNDEFINED> instruction: 0x4603603e
    6854:	strbtpl	r2, [r6], #2
    6858:	blx	b42886 <strvisx@@Base+0xb2eb12>
    685c:	strtmi	r9, [r1], -r7, lsl #22
    6860:			; <UNDEFINED> instruction: 0x46404652
    6864:	movweq	pc, #4227	; 0x1083	; <UNPREDICTABLE>
    6868:	svclt	0x001842b5
    686c:	movwls	r4, #5683	; 0x1633
    6870:	andsmi	pc, ip, #14090240	; 0xd70000
    6874:	strls	r4, [r0], #-1611	; 0xfffff9b5
    6878:			; <UNDEFINED> instruction: 0xffbcf7fd
    687c:			; <UNDEFINED> instruction: 0xf0402800
    6880:	tstcs	r1, r5, lsl r1
    6884:			; <UNDEFINED> instruction: 0xf0092002
    6888:	vstrcs	d15, [r0, #-84]	; 0xffffffac
    688c:	blls	1faf80 <strvisx@@Base+0x1e720c>
    6890:	blls	235644 <strvisx@@Base+0x2218d0>
    6894:			; <UNDEFINED> instruction: 0xf44fac11
    6898:	strtmi	r6, [r0], -r0, lsl #2
    689c:			; <UNDEFINED> instruction: 0xf7fb681a
    68a0:	stmdacs	r0, {r1, r2, r4, r8, sl, fp, sp, lr, pc}
    68a4:	blls	1fafe0 <strvisx@@Base+0x1e726c>
    68a8:			; <UNDEFINED> instruction: 0xf0402b00
    68ac:	tstcs	r0, r5, lsl r1
    68b0:			; <UNDEFINED> instruction: 0xf0092011
    68b4:			; <UNDEFINED> instruction: 0xf8dafaff
    68b8:			; <UNDEFINED> instruction: 0xf7fb0000
    68bc:			; <UNDEFINED> instruction: 0x4648ed9e
    68c0:	ldc	7, cr15, [sl, #1004]	; 0x3ec
    68c4:			; <UNDEFINED> instruction: 0xf7fb4640
    68c8:	strcs	lr, [r0], #-3480	; 0xfffff268
    68cc:	blmi	fe7fe9a8 <strvisx@@Base+0xfe7eac34>
    68d0:			; <UNDEFINED> instruction: 0xf8d3447b
    68d4:	blcs	130fc <setlogin@@Base+0x1e40>
    68d8:	rschi	pc, r5, r0
    68dc:	ldrbtmi	r4, [sl], #-2716	; 0xfffff564
    68e0:			; <UNDEFINED> instruction: 0xf0402e00
    68e4:	mrcmi	0, 4, r8, cr11, cr6, {7}
    68e8:			; <UNDEFINED> instruction: 0x4631447e
    68ec:	ldmibmi	sl, {r1, r2, r4, r8, r9, sl, sp, lr, pc}
    68f0:	ldrbtmi	r2, [r9], #-1
    68f4:	ldcl	7, cr15, [r6], #1004	; 0x3ec
    68f8:	stcls	7, cr14, [r9], {203}	; 0xcb
    68fc:	blmi	fe5cf170 <strvisx@@Base+0xfe5bb3fc>
    6900:	ldmmi	r7, {r0, r8, sp}
    6904:	ldrbtmi	r5, [r8], #-2275	; 0xfffff71d
    6908:			; <UNDEFINED> instruction: 0xf7fb681b
    690c:			; <UNDEFINED> instruction: 0xe7b8ee76
    6910:	strcs	r2, [r0], #-10
    6914:	ldcl	7, cr15, [r2], #1004	; 0x3ec
    6918:	andscs	r4, r1, r1, lsr #12
    691c:	blx	ff2c2948 <strvisx@@Base+0xff2aebd4>
    6920:	ldrdeq	pc, [r0], -sl
    6924:	stcl	7, cr15, [r8, #-1004]!	; 0xfffffc14
    6928:			; <UNDEFINED> instruction: 0xf7fb4648
    692c:	strbmi	lr, [r0], -r6, ror #26
    6930:	stcl	7, cr15, [r2, #-1004]!	; 0xfffffc14
    6934:			; <UNDEFINED> instruction: 0xf7fb4628
    6938:	svceq	0x00e0ef54
    693c:	blx	ffbc297c <strvisx@@Base+0xffbaec08>
    6940:	bmi	fe218158 <strvisx@@Base+0xfe2043e4>
    6944:	ldrbtmi	r4, [sl], #-2929	; 0xfffff48f
    6948:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    694c:	stmdacc	r4, {r0, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}^
    6950:			; <UNDEFINED> instruction: 0xf040405a
    6954:	strtmi	r8, [r0], -r9, asr #1
    6958:	stcleq	6, cr15, [ip, #-52]	; 0xffffffcc
    695c:	blhi	c1c58 <strvisx@@Base+0xadee4>
    6960:	svchi	0x00f0e8bd
    6964:	ldc	7, cr15, [r0, #1004]	; 0x3ec
    6968:	svclt	0x00181e03
    696c:	movwls	r2, #29441	; 0x7301
    6970:	stcls	7, cr14, [r9, #-252]	; 0xffffff04
    6974:	ldrsbgt	pc, [r0, #143]!	; 0x8f	; <UNPREDICTABLE>
    6978:	bmi	1b99760 <strvisx@@Base+0x1b859ec>
    697c:	stmiapl	fp!, {r0, r1, r3, r4, r5, r6, r8, fp, lr}^
    6980:	stmdapl	r9!, {r1, r3, r5, r7, fp, ip, lr}^
    6984:	andeq	pc, ip, r5, asr r8	; <UNPREDICTABLE>
    6988:	ldmdavs	r2, {r0, r1, r3, r4, fp, sp, lr}
    698c:	stmdavs	r0, {r0, r3, fp, sp, lr}
    6990:	stcl	7, cr15, [ip, #1004]!	; 0x3ec
    6994:	stmdacs	r0, {r0, r2, r9, sl, lr}
    6998:	adcshi	pc, r0, r0
    699c:	stc	7, cr15, [r6, #-1004]	; 0xfffffc14
    69a0:	beq	fe4421c8 <strvisx@@Base+0xfe42e454>
    69a4:			; <UNDEFINED> instruction: 0xf0002800
    69a8:	stmdbge	sp, {r0, r2, r5, r7, pc}
    69ac:	andcs	r2, r1, #100, 6	; 0x90000001
    69b0:			; <UNDEFINED> instruction: 0x91bcf8df
    69b4:	mcr	7, 5, pc, cr12, cr11, {7}	; <UNPREDICTABLE>
    69b8:	vnmla.f32	s8, s16, s29
    69bc:			; <UNDEFINED> instruction: 0x210a3a90
    69c0:	ldrbtmi	r4, [r9], #1576	; 0x628
    69c4:	bls	25841c <strvisx@@Base+0x2446a8>
    69c8:	beq	b42e04 <strvisx@@Base+0xb2f090>
    69cc:	ldrdlt	pc, [r8, pc]!	; <UNPREDICTABLE>
    69d0:	andcs	pc, ip, r2, asr r8	; <UNPREDICTABLE>
    69d4:			; <UNDEFINED> instruction: 0xf7fb44fb
    69d8:	bmi	1a420d8 <strvisx@@Base+0x1a2e364>
    69dc:			; <UNDEFINED> instruction: 0x46284639
    69e0:			; <UNDEFINED> instruction: 0xf7fb447a
    69e4:	bmi	19c20cc <strvisx@@Base+0x19ae358>
    69e8:	strtmi	r2, [r8], -r2, lsl #2
    69ec:			; <UNDEFINED> instruction: 0xf7fb447a
    69f0:			; <UNDEFINED> instruction: 0x463aedb2
    69f4:	strtmi	r2, [r8], -r1, lsl #2
    69f8:	stc	7, cr15, [ip, #1004]!	; 0x3ec
    69fc:	tstcs	r3, r1, lsl #4
    6a00:			; <UNDEFINED> instruction: 0xf7fb4628
    6a04:	ldrtmi	lr, [r9], -r8, lsr #27
    6a08:			; <UNDEFINED> instruction: 0xf7fb4628
    6a0c:	ldmdami	sp, {r3, r4, r7, r8, r9, sl, fp, sp, lr, pc}^
    6a10:			; <UNDEFINED> instruction: 0x464a4b5d
    6a14:	tstcs	r9, r8, ror r4
    6a18:	andls	r4, r0, fp, ror r4
    6a1c:			; <UNDEFINED> instruction: 0xf7fb4628
    6a20:	bge	402090 <strvisx@@Base+0x3ee31c>
    6a24:	strtmi	r2, [r8], -lr, lsl #2
    6a28:	bhi	41138 <strvisx@@Base+0x2d3c4>
    6a2c:	ldc	7, cr15, [r2, #1004]	; 0x3ec
    6a30:			; <UNDEFINED> instruction: 0x464b4a56
    6a34:	strtmi	r2, [r8], -r4, lsl #2
    6a38:	smlsdxls	r0, sl, r4, r4
    6a3c:	stc	7, cr15, [sl, #1004]	; 0x3ec
    6a40:	bmi	1519794 <strvisx@@Base+0x1505a20>
    6a44:	ldrbtmi	r2, [fp], #-260	; 0xfffffefc
    6a48:	ldrbtmi	r4, [sl], #-1576	; 0xfffff9d8
    6a4c:	movwls	r9, #30464	; 0x7700
    6a50:	stc	7, cr15, [r0, #1004]	; 0x3ec
    6a54:	tstcs	r4, r0, asr sl
    6a58:	strtmi	r9, [r8], -r7, lsl #22
    6a5c:	smlsdxls	r0, sl, r4, r4
    6a60:	ldcl	7, cr15, [r8, #-1004]!	; 0xfffffc14
    6a64:	ldrbmi	r4, [fp], -sp, asr #20
    6a68:	ldrbtmi	r2, [sl], #-260	; 0xfffffefc
    6a6c:	strls	r4, [r0, -r8, lsr #12]
    6a70:	andslt	pc, ip, sp, asr #17
    6a74:	stcl	7, cr15, [lr, #-1004]!	; 0xfffffc14
    6a78:	tstcs	r4, r9, asr #20
    6a7c:	strtmi	r9, [r8], -r7, lsl #22
    6a80:	smlsdxls	r0, sl, r4, r4
    6a84:	stcl	7, cr15, [r6, #-1004]!	; 0xfffffc14
    6a88:	bmi	11d97a8 <strvisx@@Base+0x11c5a34>
    6a8c:	ldrbtmi	r2, [fp], #-260	; 0xfffffefc
    6a90:	ldrbtmi	r4, [sl], #-1576	; 0xfffff9d8
    6a94:			; <UNDEFINED> instruction: 0xf7fb9700
    6a98:			; <UNDEFINED> instruction: 0xe611ed5e
    6a9c:	bmi	1118fb0 <strvisx@@Base+0x110523c>
    6aa0:	ldrbtmi	r4, [sl], #-1145	; 0xfffffb87
    6aa4:	bmi	1100394 <strvisx@@Base+0x10ec620>
    6aa8:			; <UNDEFINED> instruction: 0xe719447a
    6aac:			; <UNDEFINED> instruction: 0x46044631
    6ab0:			; <UNDEFINED> instruction: 0xf0092011
    6ab4:			; <UNDEFINED> instruction: 0xf8daf9ff
    6ab8:			; <UNDEFINED> instruction: 0xf7fb0000
    6abc:			; <UNDEFINED> instruction: 0x4648ec9e
    6ac0:	ldc	7, cr15, [sl], {251}	; 0xfb
    6ac4:			; <UNDEFINED> instruction: 0xf7fb4640
    6ac8:	stccs	12, cr14, [r0, #-608]	; 0xfffffda0
    6acc:	svcge	0x0035f43f
    6ad0:	ldmdbmi	r9!, {r4, r5, r8, r9, sl, sp, lr, pc}
    6ad4:			; <UNDEFINED> instruction: 0xe6214479
    6ad8:			; <UNDEFINED> instruction: 0xf7fb200a
    6adc:	usat	lr, #6, r0, lsl #24
    6ae0:			; <UNDEFINED> instruction: 0xf04f4620
    6ae4:			; <UNDEFINED> instruction: 0xe63634ff
    6ae8:	ldcl	7, cr15, [r6, #1004]	; 0x3ec
    6aec:	ldrbtmi	r4, [r8], #-2099	; 0xfffff7cd
    6af0:	ldc2l	0, cr15, [r8, #20]!
    6af4:	ldrbtmi	r4, [r8], #-2098	; 0xfffff7ce
    6af8:	ldc2l	0, cr15, [r4, #20]!
    6afc:	ldrbtmi	r4, [r8], #-2097	; 0xfffff7cf
    6b00:	ldc2l	0, cr15, [r0, #20]!
    6b04:	andeq	r3, r2, r6, asr sl
    6b08:	andeq	r3, r2, ip, ror r6
    6b0c:	andeq	r0, r0, r0, asr #5
    6b10:	andeq	r3, r2, lr, asr r6
    6b14:	andeq	pc, r0, sl, lsr #26
    6b18:	ldrdeq	r3, [r2], -r4
    6b1c:	ldrdeq	r2, [r1], -r8
    6b20:	andeq	lr, r0, lr, ror #25
    6b24:			; <UNDEFINED> instruction: 0x0000fbb4
    6b28:	andeq	r3, r2, r6, ror #18
    6b2c:	andeq	pc, r0, sl, asr #22
    6b30:	andeq	pc, r0, ip, asr #22
    6b34:	ldrdeq	r0, [r0], -ip
    6b38:	andeq	r0, r0, r4, asr #5
    6b3c:	strdeq	r3, [r2], -r6
    6b40:			; <UNDEFINED> instruction: 0xffffcc1b
    6b44:	andeq	lr, r0, r0, lsr r9
    6b48:	ldrdeq	r3, [r2], -sl
    6b4c:	andeq	r3, r2, r8, lsl #16
    6b50:	strdeq	pc, [r0], -r6
    6b54:	andeq	lr, r0, r0, lsr #22
    6b58:	strdeq	lr, [r0], -r6
    6b5c:	andeq	r0, r0, r4, ror #5
    6b60:	andeq	pc, r0, lr, ror #19
    6b64:			; <UNDEFINED> instruction: 0x000233ba
    6b68:	andeq	r0, r0, r0, lsl #5
    6b6c:	andeq	r0, r0, r8, asr #5
    6b70:	andeq	pc, r0, lr, lsl #17
    6b74:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6b78:			; <UNDEFINED> instruction: 0x0000f8b0
    6b7c:			; <UNDEFINED> instruction: 0xffffc855
    6b80:	andeq	pc, r0, r4, lsr r8	; <UNPREDICTABLE>
    6b84:			; <UNDEFINED> instruction: 0xffffd629
    6b88:	andeq	pc, r0, r0, lsl r8	; <UNPREDICTABLE>
    6b8c:	andeq	pc, r0, r8, lsr #16
    6b90:	andeq	pc, r0, lr, lsl r8	; <UNPREDICTABLE>
    6b94:	andeq	pc, r0, sl, lsr #16
    6b98:	andeq	pc, r0, r0, lsr #16
    6b9c:	andeq	pc, r0, sl, lsr #16
    6ba0:	andeq	pc, r0, ip, lsl r8	; <UNPREDICTABLE>
    6ba4:	andeq	pc, r0, r6, lsl r8	; <UNPREDICTABLE>
    6ba8:	andeq	pc, r0, r6, lsr #16
    6bac:	andeq	r2, r1, r0, asr r1
    6bb0:	andeq	pc, r0, r2, lsr r7	; <UNPREDICTABLE>
    6bb4:	andeq	lr, r0, r0, ror #18
    6bb8:	andeq	r2, r1, ip, lsl r1
    6bbc:	andeq	pc, r0, lr, asr #15
    6bc0:	andeq	pc, r0, r2, lsl #14
    6bc4:	ldrdeq	pc, [r0], -sl
    6bc8:	blmi	c59490 <strvisx@@Base+0xc4571c>
    6bcc:	ldrblt	r4, [r0, #1146]!	; 0x47a
    6bd0:	ldmpl	r3, {r0, r2, r9, sl, lr}^
    6bd4:	strmi	fp, [r8], -r9, lsl #1
    6bd8:	ldmdavs	fp, {r2, r3, r9, sl, lr}
    6bdc:			; <UNDEFINED> instruction: 0xf04f9307
    6be0:			; <UNDEFINED> instruction: 0xf0040300
    6be4:	svcmi	0x002bfce9
    6be8:			; <UNDEFINED> instruction: 0xf5b0447f
    6bec:	strtmi	r2, [r0], -r0, lsl #31
    6bf0:			; <UNDEFINED> instruction: 0xf004d839
    6bf4:	cdpge	12, 0, cr15, cr6, cr1, {7}
    6bf8:	ldrtmi	r4, [r0], -r1, lsl #12
    6bfc:	ldc2l	0, cr15, [lr], #-28	; 0xffffffe4
    6c00:	movwcs	r4, #17952	; 0x4620
    6c04:	movwls	r9, #13826	; 0x3602
    6c08:	ldc2	0, cr15, [sl, #-16]!
    6c0c:	ldrbtmi	r4, [lr], #-3618	; 0xfffff1de
    6c10:	strtmi	r4, [r0], -r3, lsl #12
    6c14:			; <UNDEFINED> instruction: 0xf0049304
    6c18:	ldmib	r5, {r0, r1, r2, r3, r6, r7, sl, fp, ip, sp, lr, pc}^
    6c1c:	stmdavs	r9!, {r3, r8, r9, sp}^
    6c20:	bmi	797874 <strvisx@@Base+0x783b00>
    6c24:	ldrbcc	fp, [r8, #-3864]	; 0xfffff0e8
    6c28:	movweq	pc, #8271	; 0x204f	; <UNPREDICTABLE>
    6c2c:	strcs	fp, [r0, #-3848]	; 0xfffff0f8
    6c30:	ldmpl	r8!, {r0, r2, ip, pc}
    6c34:	strls	sl, [r1, #-2562]	; 0xfffff5fe
    6c38:			; <UNDEFINED> instruction: 0xf0069600
    6c3c:	strmi	pc, [r5], -sp, ror #20
    6c40:			; <UNDEFINED> instruction: 0xf0044620
    6c44:	stcne	12, cr15, [r3, #-740]	; 0xfffffd1c
    6c48:			; <UNDEFINED> instruction: 0xd115429d
    6c4c:			; <UNDEFINED> instruction: 0xf0044620
    6c50:	bmi	505c2c <strvisx@@Base+0x4f1eb8>
    6c54:	ldrbtmi	r4, [sl], #-2830	; 0xfffff4f2
    6c58:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    6c5c:	subsmi	r9, sl, r7, lsl #22
    6c60:	andlt	sp, r9, r8, lsl #2
    6c64:			; <UNDEFINED> instruction: 0xf004bdf0
    6c68:	strmi	pc, [r1], -r7, lsr #25
    6c6c:	ldrbtmi	r4, [r8], #-2061	; 0xfffff7f3
    6c70:	ldc2	0, cr15, [r8, #-20]!	; 0xffffffec
    6c74:	ldc	7, cr15, [r0, #-1004]	; 0xfffffc14
    6c78:	mcr	7, 2, pc, cr2, cr11, {7}	; <UNPREDICTABLE>
    6c7c:			; <UNDEFINED> instruction: 0xf7fb6800
    6c80:			; <UNDEFINED> instruction: 0x4601eaba
    6c84:	ldrbtmi	r4, [r8], #-2056	; 0xfffff7f8
    6c88:	stc2	0, cr15, [ip, #-20]!	; 0xffffffec
    6c8c:	andeq	r3, r2, r4, lsr r1
    6c90:	andeq	r0, r0, r0, asr #5
    6c94:	andeq	r3, r2, r8, lsl r1
    6c98:	muleq	r0, fp, r0
    6c9c:	muleq	r0, r0, r2
    6ca0:	andeq	r3, r2, sl, lsr #1
    6ca4:	andeq	pc, r0, sl, lsl #19
    6ca8:	muleq	r0, r2, r9
    6cac:			; <UNDEFINED> instruction: 0x4604b538
    6cb0:	strmi	r2, [sp], -r0
    6cb4:			; <UNDEFINED> instruction: 0xf85cf004
    6cb8:			; <UNDEFINED> instruction: 0x4629b11c
    6cbc:			; <UNDEFINED> instruction: 0xf0074620
    6cc0:	andcs	pc, r0, r5, asr lr	; <UNPREDICTABLE>
    6cc4:	svclt	0x0000bd38
    6cc8:	ldrsbgt	pc, [r8, #-143]	; 0xffffff71	; <UNPREDICTABLE>
    6ccc:	push	{r1, r2, r4, r6, r8, r9, fp, lr}
    6cd0:	ldrbtmi	r4, [ip], #1008	; 0x3f0
    6cd4:	strmi	fp, [sp], -r7, lsl #1
    6cd8:			; <UNDEFINED> instruction: 0xf85caf04
    6cdc:	strmi	r3, [r4], -r3
    6ce0:			; <UNDEFINED> instruction: 0x46084616
    6ce4:	tstcs	r4, sl, lsr r6
    6ce8:	movwls	r6, #22555	; 0x581b
    6cec:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    6cf0:	stc2	0, cr15, [r0, #16]!
    6cf4:	teq	r4, pc	; <illegal shifter operand>	; <UNPREDICTABLE>
    6cf8:	stmdacs	r0, {r1, r2, r3, r4, r5, r6, r7, sl, lr}
    6cfc:	ldmib	r4, {r3, r5, r6, r8, ip, lr, pc}^
    6d00:	strmi	r8, [r3], -r8, lsl #18
    6d04:	ldrdgt	pc, [r8, -pc]!	; <UNPREDICTABLE>
    6d08:	andeq	lr, r9, r8, asr sl
    6d0c:	svclt	0x00186821
    6d10:	eoreq	pc, r8, r4, lsl #2
    6d14:	svclt	0x000844fc
    6d18:	blmi	1198580 <strvisx@@Base+0x118480c>
    6d1c:			; <UNDEFINED> instruction: 0xf85e9a04
    6d20:	movwcs	r8, #16387	; 0x4003
    6d24:			; <UNDEFINED> instruction: 0xf8cd9001
    6d28:	strbmi	ip, [r0], -r0
    6d2c:			; <UNDEFINED> instruction: 0xf974f006
    6d30:	andsle	r2, r1, r4, lsl #16
    6d34:	stcl	7, cr15, [r4, #1004]!	; 0x3ec
    6d38:	stmdacs	r8!, {fp, sp, lr}^
    6d3c:	stmdacs	r0!, {r3, r4, r8, r9, sl, fp, ip, sp, pc}
    6d40:	ldmdami	sp!, {r0, r1, r8, ip, lr, pc}
    6d44:			; <UNDEFINED> instruction: 0xf0054478
    6d48:			; <UNDEFINED> instruction: 0xf7fbfccd
    6d4c:			; <UNDEFINED> instruction: 0x4601ea54
    6d50:	ldrbtmi	r4, [r8], #-2106	; 0xfffff7c6
    6d54:	stc2l	0, cr15, [r6], {5}
    6d58:	strtmi	sl, [r8], -r3, lsl #18
    6d5c:	cdp2	0, 10, cr15, cr4, cr4, {0}
    6d60:	teqle	lr, r0, lsl #16
    6d64:			; <UNDEFINED> instruction: 0xf5b19903
    6d68:	stmdale	r3, {r7, r8, r9, sl, fp, sp}^
    6d6c:	ldrtmi	r4, [sl], -r8, lsr #12
    6d70:	stc2l	0, cr15, [r0, #-16]!
    6d74:	stmdacs	r0, {r0, r2, r9, sl, lr}
    6d78:	ldmib	r4, {r0, r3, r6, r8, ip, lr, pc}^
    6d7c:	stmdavs	r1!, {r3, r8, r9, sl, sp, lr}
    6d80:	andeq	lr, r7, r6, asr sl
    6d84:	andcc	lr, r3, #3620864	; 0x374000
    6d88:			; <UNDEFINED> instruction: 0xf104bf18
    6d8c:	cfstr32mi	mvfx0, [ip], #-160	; 0xffffff60
    6d90:	strls	r4, [r1, #-1600]	; 0xfffff9c0
    6d94:	strls	r4, [r0], #-1148	; 0xfffffb84
    6d98:			; <UNDEFINED> instruction: 0xf93ef006
    6d9c:	addsmi	r9, r8, #3072	; 0xc00
    6da0:			; <UNDEFINED> instruction: 0xf7fbd00b
    6da4:	stmdavs	r0, {r1, r2, r3, r5, r7, r8, sl, fp, sp, lr, pc}
    6da8:	sbcle	r2, sl, r0, lsr #16
    6dac:	b	8c4da0 <strvisx@@Base+0x8b102c>
    6db0:	stmdami	r4!, {r0, r9, sl, lr}
    6db4:			; <UNDEFINED> instruction: 0xf0054478
    6db8:	bmi	906014 <strvisx@@Base+0x8f22a0>
    6dbc:	ldrbtmi	r4, [sl], #-2842	; 0xfffff4e6
    6dc0:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    6dc4:	subsmi	r9, sl, r5, lsl #22
    6dc8:	andlt	sp, r7, sl, lsr #2
    6dcc:	mvnshi	lr, #12386304	; 0xbd0000
    6dd0:			; <UNDEFINED> instruction: 0xf84ef004
    6dd4:	ldrbtmi	r4, [r9], #-2333	; 0xfffff6e3
    6dd8:	ldmdami	sp, {r1, r9, sl, lr}
    6ddc:			; <UNDEFINED> instruction: 0xf0054478
    6de0:			; <UNDEFINED> instruction: 0xf004fc81
    6de4:	ldmdbmi	fp, {r0, r2, r6, fp, ip, sp, lr, pc}
    6de8:			; <UNDEFINED> instruction: 0x46024479
    6dec:	ldrbtmi	r4, [r8], #-2074	; 0xfffff7e6
    6df0:	ldc2l	0, cr15, [r8], #-20	; 0xffffffec
    6df4:	strmi	r2, [sl], -r0, lsl #28
    6df8:	svclt	0x00144918
    6dfc:	andcs	r2, r1, r2
    6e00:			; <UNDEFINED> instruction: 0xf0064479
    6e04:	ldmdami	r6, {r0, r1, r6, fp, ip, sp, lr, pc}
    6e08:			; <UNDEFINED> instruction: 0xf0054478
    6e0c:			; <UNDEFINED> instruction: 0xf004fc6b
    6e10:	ldmdbmi	r4, {r0, r1, r2, r3, r5, fp, ip, sp, lr, pc}
    6e14:			; <UNDEFINED> instruction: 0x46024479
    6e18:	ldrbtmi	r4, [r8], #-2067	; 0xfffff7ed
    6e1c:	stc2l	0, cr15, [r2], #-20	; 0xffffffec
    6e20:	ldc	7, cr15, [sl], #-1004	; 0xfffffc14
    6e24:	andeq	r3, r2, lr, lsr #32
    6e28:	andeq	r0, r0, r0, asr #5
    6e2c:	andeq	r3, r2, r8
    6e30:			; <UNDEFINED> instruction: 0xffffff95
    6e34:	muleq	r0, ip, r2
    6e38:	andeq	pc, r0, r8, lsl #18
    6e3c:	andeq	pc, r0, lr, lsl #18
    6e40:			; <UNDEFINED> instruction: 0xffffff15
    6e44:	andeq	pc, r0, r4, lsr r9	; <UNPREDICTABLE>
    6e48:	andeq	r2, r2, r2, asr #30
    6e4c:	andeq	r0, r1, r6, ror #16
    6e50:	andeq	pc, r0, r8, asr r8	; <UNPREDICTABLE>
    6e54:	andeq	r0, r1, r4, asr r8
    6e58:	andeq	pc, r0, r6, asr #16
    6e5c:	andeq	pc, r0, ip, ror r8	; <UNPREDICTABLE>
    6e60:	muleq	r0, r4, r8
    6e64:	andeq	r0, r1, r8, lsr #16
    6e68:	andeq	pc, r0, sl, lsl r8	; <UNPREDICTABLE>
    6e6c:	blmi	d59744 <strvisx@@Base+0xd459d0>
    6e70:	ldrblt	r4, [r0, #-1146]!	; 0xfffffb86
    6e74:	ldmpl	r3, {r2, r7, ip, sp, pc}^
    6e78:	strmi	r4, [sp], -r6, lsl #12
    6e7c:	movwls	r6, #14363	; 0x381b
    6e80:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    6e84:			; <UNDEFINED> instruction: 0xf990f004
    6e88:	eorsle	r2, sl, r0, lsl #16
    6e8c:	andcs	r4, r0, #4, 12	; 0x400000
    6e90:			; <UNDEFINED> instruction: 0x46214630
    6e94:			; <UNDEFINED> instruction: 0xff18f7ff
    6e98:	tsteq	r3, sp, lsl #2	; <UNPREDICTABLE>
    6e9c:			; <UNDEFINED> instruction: 0xf0044620
    6ea0:	bllt	64675c <strvisx@@Base+0x6329e8>
    6ea4:	strtmi	sl, [r0], -r1, lsl #18
    6ea8:	ldc2l	0, cr15, [lr, #16]!
    6eac:	stmdbls	r1, {r4, r5, r6, r7, r8, fp, ip, sp, pc}
    6eb0:	teqle	pc, r9, lsr #5
    6eb4:	mulcs	r3, sp, r8
    6eb8:	teqle	r6, r5, ror #20
    6ebc:	strtmi	sl, [r0], -r2, lsl #18
    6ec0:	ldc2l	0, cr15, [r2, #16]!
    6ec4:			; <UNDEFINED> instruction: 0x4620bb30
    6ec8:			; <UNDEFINED> instruction: 0xf9fcf004
    6ecc:	stmdbls	r2, {r1, r2, r3, r4, fp, lr}
    6ed0:			; <UNDEFINED> instruction: 0xf0054478
    6ed4:	bmi	786da0 <strvisx@@Base+0x77302c>
    6ed8:	ldrbtmi	r4, [sl], #-2842	; 0xfffff4e6
    6edc:	ldmpl	r3, {r1, fp, ip, pc}^
    6ee0:	blls	e0f50 <strvisx@@Base+0xcd1dc>
    6ee4:	tstle	r3, sl, asr r0
    6ee8:	ldcllt	0, cr11, [r0, #-16]!
    6eec:			; <UNDEFINED> instruction: 0xffc0f003
    6ef0:	ldrbtmi	r4, [fp], #-2839	; 0xfffff4e9
    6ef4:	tsteq	r4, r3, lsl #2	; <UNPREDICTABLE>
    6ef8:	ldmdami	r6, {r1, r9, sl, lr}
    6efc:			; <UNDEFINED> instruction: 0xf0054478
    6f00:	ldmdbmi	r5, {r0, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr, pc}
    6f04:	ldrbtmi	r4, [r9], #-2069	; 0xfffff7eb
    6f08:	tstcc	r4, r8, ror r4
    6f0c:	blx	ffac2f2a <strvisx@@Base+0xffaaf1b6>
    6f10:	bl	ff0c4f04 <strvisx@@Base+0xff0b1190>
    6f14:			; <UNDEFINED> instruction: 0xffacf003
    6f18:	ldrbtmi	r4, [fp], #-2833	; 0xfffff4ef
    6f1c:	tsteq	r4, r3, lsl #2	; <UNPREDICTABLE>
    6f20:	ldmdami	r0, {r1, r9, sl, lr}
    6f24:			; <UNDEFINED> instruction: 0xf0054478
    6f28:	stmdami	pc, {r0, r2, r3, r4, r6, r7, r8, r9, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
    6f2c:	ldrbtmi	r2, [r8], #-357	; 0xfffffe9b
    6f30:	blx	ff642f4e <strvisx@@Base+0xff62f1da>
    6f34:	strtmi	r4, [sl], -sp, lsl #16
    6f38:			; <UNDEFINED> instruction: 0xf0054478
    6f3c:	svclt	0x0000fbd3
    6f40:	muleq	r2, r0, lr
    6f44:	andeq	r0, r0, r0, asr #5
    6f48:	andeq	pc, r0, ip, ror #16
    6f4c:	andeq	r2, r2, r6, lsr #28
    6f50:	andeq	r0, r1, sl, asr #14
    6f54:	andeq	pc, r0, r8, lsr r7	; <UNPREDICTABLE>
    6f58:	andeq	r0, r1, r6, lsr r7
    6f5c:	strdeq	pc, [r0], -r0
    6f60:	andeq	r0, r1, r2, lsr #14
    6f64:	andeq	pc, r0, r0, lsl r7	; <UNPREDICTABLE>
    6f68:	andeq	pc, r0, r2, ror #15
    6f6c:	andeq	pc, r0, ip, lsr r8	; <UNPREDICTABLE>
    6f70:	mvnsmi	lr, #737280	; 0xb4000
    6f74:			; <UNDEFINED> instruction: 0xf8dd4607
    6f78:	strmi	r9, [lr], -r0, lsr #32
    6f7c:			; <UNDEFINED> instruction: 0x46984615
    6f80:			; <UNDEFINED> instruction: 0xf912f004
    6f84:	rsclt	fp, r9, #80, 6	; 0x40000001
    6f88:			; <UNDEFINED> instruction: 0xf0054604
    6f8c:	ldmiblt	r0, {r0, r1, r3, r5, r8, fp, ip, sp, lr, pc}^
    6f90:			; <UNDEFINED> instruction: 0x46204631
    6f94:			; <UNDEFINED> instruction: 0xf8caf005
    6f98:	strbmi	fp, [sl], -r8, lsr #19
    6f9c:	strtmi	r4, [r0], -r1, asr #12
    6fa0:	blx	dc2fbc <strvisx@@Base+0xdaf248>
    6fa4:			; <UNDEFINED> instruction: 0x4621b978
    6fa8:			; <UNDEFINED> instruction: 0xf7ff4638
    6fac:	stmdami	pc, {r0, r2, r3, r9, sl, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
    6fb0:			; <UNDEFINED> instruction: 0x46336879
    6fb4:			; <UNDEFINED> instruction: 0x462a4478
    6fb8:			; <UNDEFINED> instruction: 0xff3ef005
    6fbc:	pop	{r5, r9, sl, lr}
    6fc0:			; <UNDEFINED> instruction: 0xf00443f8
    6fc4:			; <UNDEFINED> instruction: 0xf003b97f
    6fc8:	blmi	286d1c <strvisx@@Base+0x272fa8>
    6fcc:			; <UNDEFINED> instruction: 0xf103447b
    6fd0:	strmi	r0, [r2], -r0, lsr #2
    6fd4:	ldrbtmi	r4, [r8], #-2055	; 0xfffff7f9
    6fd8:	blx	fe142ff6 <strvisx@@Base+0xfe12f282>
    6fdc:	stmdami	r7, {r1, r2, r8, fp, lr}
    6fe0:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    6fe4:			; <UNDEFINED> instruction: 0xf0053120
    6fe8:	svclt	0x0000fb7d
    6fec:	muleq	r0, ip, r7
    6ff0:	andeq	r0, r1, r0, ror r6
    6ff4:	andeq	pc, r0, lr, asr r6	; <UNPREDICTABLE>
    6ff8:	andeq	r0, r1, ip, asr r6
    6ffc:	andeq	pc, r0, r6, lsl r7	; <UNPREDICTABLE>
    7000:	vst3.8	{d27-d29}, [pc], r8
    7004:	push	{r7, r8, r9, ip, sp, lr}
    7008:	strdlt	r4, [r8], #48	; 0x30
    700c:			; <UNDEFINED> instruction: 0xf8dfac4f
    7010:	svcge	0x0007c140
    7014:			; <UNDEFINED> instruction: 0xf8544681
    7018:	ldrbtmi	r6, [ip], #2820	; 0xb04
    701c:	ldrtmi	r4, [r8], -sp, lsl #12
    7020:			; <UNDEFINED> instruction: 0x96004619
    7024:	bmi	12d8884 <strvisx@@Base+0x12c4b10>
    7028:			; <UNDEFINED> instruction: 0xf85c9401
    702c:	ldmdavs	r2, {r1, sp}
    7030:			; <UNDEFINED> instruction: 0xf04f9247
    7034:	andcs	r0, r1, #0, 4
    7038:			; <UNDEFINED> instruction: 0xf7fb9406
    703c:			; <UNDEFINED> instruction: 0xf004ea92
    7040:	stmdacs	r0, {r0, r1, r4, r5, r7, fp, ip, sp, lr, pc}
    7044:			; <UNDEFINED> instruction: 0x4604d05f
    7048:	stmdaeq	pc, {r0, r2, r3, r8, ip, sp, lr, pc}	; <UNPREDICTABLE>
    704c:	strtmi	r4, [r1], -r8, asr #12
    7050:			; <UNDEFINED> instruction: 0xf7ff2200
    7054:			; <UNDEFINED> instruction: 0x4641fe39
    7058:			; <UNDEFINED> instruction: 0xf0044620
    705c:	stmdacs	r0, {r0, r1, r2, r3, r6, r8, sl, fp, ip, sp, lr, pc}
    7060:			; <UNDEFINED> instruction: 0xf10dd140
    7064:			; <UNDEFINED> instruction: 0x46200910
    7068:			; <UNDEFINED> instruction: 0xf0044649
    706c:	stmdacs	r0, {r0, r2, r3, r4, r8, sl, fp, ip, sp, lr, pc}
    7070:			; <UNDEFINED> instruction: 0xf8d9d138
    7074:	adcmi	r2, sl, #0
    7078:			; <UNDEFINED> instruction: 0xf898d13f
    707c:	blcs	1953084 <strvisx@@Base+0x193f310>
    7080:	blcs	19bb0f0 <strvisx@@Base+0x19a737c>
    7084:	stfged	f5, [r5, #-332]	; 0xfffffeb4
    7088:			; <UNDEFINED> instruction: 0x46204632
    708c:			; <UNDEFINED> instruction: 0xf0044629
    7090:	stmdacs	r0, {r0, r1, r3, r4, r5, r6, r9, sl, fp, ip, sp, lr, pc}
    7094:	strtmi	sp, [r0], -r0, asr #2
    7098:			; <UNDEFINED> instruction: 0xf914f004
    709c:	bmi	ba1144 <strvisx@@Base+0xb8d3d0>
    70a0:	ldrbtmi	r4, [sl], #-2860	; 0xfffff4d4
    70a4:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    70a8:	subsmi	r9, sl, r7, asr #22
    70ac:	sublt	sp, r8, r2, lsr r1
    70b0:	mvnsmi	lr, #12386304	; 0xbd0000
    70b4:	ldrbmi	fp, [r0, -r1]!
    70b8:	strtmi	sl, [r0], -r5, lsl #28
    70bc:			; <UNDEFINED> instruction: 0xf0044631
    70c0:			; <UNDEFINED> instruction: 0x4605fcf3
    70c4:	teqle	r8, r0, lsl #16
    70c8:			; <UNDEFINED> instruction: 0xf0036830
    70cc:	ldrtmi	pc, [r9], -pc, asr #18	; <UNPREDICTABLE>
    70d0:	stmdami	r2!, {r1, r9, sl, lr}
    70d4:			; <UNDEFINED> instruction: 0xf0054478
    70d8:	strtmi	pc, [r0], -r1, asr #27
    70dc:			; <UNDEFINED> instruction: 0xf8f2f004
    70e0:	ldrb	r4, [ip, r8, lsr #12]
    70e4:	cdp2	0, 12, cr15, cr4, cr3, {0}
    70e8:	ldrbtmi	r4, [fp], #-2845	; 0xfffff4e3
    70ec:	teqeq	r4, r3, lsl #2	; <UNPREDICTABLE>
    70f0:	ldmdami	ip, {r1, r9, sl, lr}
    70f4:			; <UNDEFINED> instruction: 0xf0054478
    70f8:	ldmdami	fp, {r0, r2, r4, r5, r6, r7, r9, fp, ip, sp, lr, pc}
    70fc:	ldrtmi	r4, [r9], -fp, lsr #12
    7100:			; <UNDEFINED> instruction: 0xf0054478
    7104:	ldmdbmi	r9, {r0, r1, r2, r3, r5, r6, r7, r9, fp, ip, sp, lr, pc}
    7108:	ldrbtmi	r4, [r9], #-2073	; 0xfffff7e7
    710c:	teqcc	r4, r8, ror r4
    7110:	blx	ffa4312c <strvisx@@Base+0xffa2f3b8>
    7114:	b	ff045108 <strvisx@@Base+0xff031394>
    7118:	cdp2	0, 10, cr15, cr10, cr3, {0}
    711c:	ldrbtmi	r4, [fp], #-2837	; 0xfffff4eb
    7120:	teqeq	r4, r3, lsl #2	; <UNPREDICTABLE>
    7124:	ldmdami	r4, {r1, r9, sl, lr}
    7128:			; <UNDEFINED> instruction: 0xf0054478
    712c:	ldmdami	r3, {r0, r1, r3, r4, r6, r7, r9, fp, ip, sp, lr, pc}
    7130:	rsbcs	r4, r6, #59768832	; 0x3900000
    7134:			; <UNDEFINED> instruction: 0xf0054478
    7138:			; <UNDEFINED> instruction: 0xf003fad5
    713c:	blmi	446ba8 <strvisx@@Base+0x432e34>
    7140:			; <UNDEFINED> instruction: 0xf103447b
    7144:			; <UNDEFINED> instruction: 0x46020134
    7148:	ldrbtmi	r4, [r8], #-2062	; 0xfffff7f2
    714c:	blx	ff2c3168 <strvisx@@Base+0xff2af3f4>
    7150:	andeq	r2, r2, r6, ror #25
    7154:	andeq	r0, r0, r0, asr #5
    7158:	andeq	r2, r2, lr, asr ip
    715c:	andeq	r1, r1, r4, lsl r6
    7160:	andeq	r0, r1, r2, asr r5
    7164:	andeq	pc, r0, r0, asr #10
    7168:	andeq	pc, r0, r0, ror r6	; <UNPREDICTABLE>
    716c:	andeq	r0, r1, r2, lsr r5
    7170:	andeq	pc, r0, ip, ror #11
    7174:	andeq	r0, r1, lr, lsl r5
    7178:	andeq	pc, r0, ip, lsl #10
    717c:	andeq	pc, r0, r8, asr r6	; <UNPREDICTABLE>
    7180:	strdeq	r0, [r1], -ip
    7184:	andeq	pc, r0, sl, ror #9
    7188:	ldrbmi	lr, [r0, sp, lsr #18]!
    718c:	ldmib	sp, {r0, r1, r2, r9, sl, lr}^
    7190:	strmi	sl, [lr], -r8, lsl #18
    7194:			; <UNDEFINED> instruction: 0x46984615
    7198:			; <UNDEFINED> instruction: 0xf806f004
    719c:	rsclt	fp, r9, #120, 6	; 0xe0000001
    71a0:			; <UNDEFINED> instruction: 0xf0054604
    71a4:	ldmiblt	r8!, {r0, r1, r2, r3, r4, fp, ip, sp, lr, pc}^
    71a8:			; <UNDEFINED> instruction: 0x46204631
    71ac:			; <UNDEFINED> instruction: 0xffbef004
    71b0:			; <UNDEFINED> instruction: 0x4652b9d0
    71b4:	strtmi	r4, [r0], -r1, asr #12
    71b8:			; <UNDEFINED> instruction: 0xf92af005
    71bc:	strbmi	fp, [r9], -r0, lsr #19
    71c0:			; <UNDEFINED> instruction: 0xf0034620
    71c4:	ldmdblt	r8!, {r0, r1, r2, r3, r7, fp, ip, sp, lr, pc}^
    71c8:	ldrtmi	r4, [r8], -r1, lsr #12
    71cc:	ldc2l	7, cr15, [ip], #1020	; 0x3fc
    71d0:	ldmdavs	r9!, {r1, r2, r3, fp, lr}^
    71d4:	ldrbtmi	r4, [r8], #-1587	; 0xfffff9cd
    71d8:			; <UNDEFINED> instruction: 0xf005462a
    71dc:	strtmi	pc, [r0], -sp, lsr #28
    71e0:			; <UNDEFINED> instruction: 0x47f0e8bd
    71e4:	stmdalt	lr!, {r2, ip, sp, lr, pc}^
    71e8:	cdp2	0, 4, cr15, cr2, cr3, {0}
    71ec:	ldrbtmi	r4, [fp], #-2824	; 0xfffff4f8
    71f0:	cmpeq	r0, r3, lsl #2	; <UNPREDICTABLE>
    71f4:	stmdami	r7, {r1, r9, sl, lr}
    71f8:			; <UNDEFINED> instruction: 0xf0054478
    71fc:	stmdbmi	r6, {r0, r1, r4, r5, r6, r9, fp, ip, sp, lr, pc}
    7200:	ldrbtmi	r4, [r9], #-2054	; 0xfffff7fa
    7204:	hvccc	1096	; 0x448
    7208:	blx	1b43224 <strvisx@@Base+0x1b2f4b0>
    720c:	andeq	pc, r0, sl, ror r5	; <UNPREDICTABLE>
    7210:	andeq	r0, r1, lr, asr #8
    7214:	andeq	pc, r0, ip, lsr r4	; <UNPREDICTABLE>
    7218:	andeq	r0, r1, sl, lsr r4
    721c:	strdeq	pc, [r0], -r4
    7220:			; <UNDEFINED> instruction: 0x4617b5f0
    7224:	addlt	r4, r5, lr, asr #20
    7228:	strmi	r4, [r5], -lr, asr #22
    722c:			; <UNDEFINED> instruction: 0x460e447a
    7230:	ldmdavs	fp, {r0, r1, r4, r6, r7, fp, ip, lr}
    7234:			; <UNDEFINED> instruction: 0xf04f9303
    7238:			; <UNDEFINED> instruction: 0xf0030300
    723c:	stmdacs	r0, {r0, r2, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr, pc}
    7240:			; <UNDEFINED> instruction: 0x4604d075
    7244:	strtmi	r2, [r8], -r0, lsl #4
    7248:			; <UNDEFINED> instruction: 0xf7ff4621
    724c:			; <UNDEFINED> instruction: 0xf10dfd3d
    7250:	strtmi	r0, [r0], -r3, lsl #2
    7254:	mrrc2	0, 0, pc, r2, cr4	; <UNPREDICTABLE>
    7258:	stmdacs	r0, {r0, r2, r9, sl, lr}
    725c:	stmdbge	r1, {r1, r2, r4, r6, r8, ip, lr, pc}
    7260:			; <UNDEFINED> instruction: 0xf0044620
    7264:	strmi	pc, [r5], -r1, lsr #24
    7268:	cmple	pc, r0, lsl #16
    726c:			; <UNDEFINED> instruction: 0xf89d483e
    7270:	bls	4b284 <strvisx@@Base+0x37510>
    7274:			; <UNDEFINED> instruction: 0xf0054478
    7278:	stmdbls	r1, {r0, r1, r2, r3, r4, r6, r7, r8, sl, fp, ip, sp, lr, pc}
    727c:	ldrhle	r4, [r1, #-33]	; 0xffffffdf
    7280:	mulcs	r3, sp, r8
    7284:	andsle	r2, r6, r5, ror #20
    7288:	cmple	r9, r9, ror #20
    728c:			; <UNDEFINED> instruction: 0x46204e37
    7290:			; <UNDEFINED> instruction: 0x4631447e
    7294:			; <UNDEFINED> instruction: 0xff74f002
    7298:	strtmi	fp, [r0], -r8, asr #22
    729c:			; <UNDEFINED> instruction: 0xf812f004
    72a0:	bmi	cd8b68 <strvisx@@Base+0xcc4df4>
    72a4:	ldrbtmi	r4, [sl], #-2863	; 0xfffff4d1
    72a8:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    72ac:	subsmi	r9, sl, r3, lsl #22
    72b0:	andlt	sp, r5, r4, asr #2
    72b4:	stmdbge	r2, {r4, r5, r6, r7, r8, sl, fp, ip, sp, pc}
    72b8:			; <UNDEFINED> instruction: 0xf0044620
    72bc:	stmdacs	r0, {r0, r2, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr, pc}
    72c0:	stmdals	r2, {r0, r1, r6, r8, ip, lr, pc}
    72c4:			; <UNDEFINED> instruction: 0xf003b95f
    72c8:			; <UNDEFINED> instruction: 0x4601f851
    72cc:	ldrbtmi	r4, [r8], #-2089	; 0xfffff7d7
    72d0:	stc2l	0, cr15, [r4], {5}
    72d4:			; <UNDEFINED> instruction: 0xf0034620
    72d8:	strdcs	pc, [r0], -r5
    72dc:			; <UNDEFINED> instruction: 0xf003e7e1
    72e0:	strmi	pc, [r1], -r5, asr #16
    72e4:	ldrbtmi	r4, [r8], #-2084	; 0xfffff7dc
    72e8:	ldc2l	0, cr15, [r2, #-20]	; 0xffffffec
    72ec:			; <UNDEFINED> instruction: 0xf003e7f2
    72f0:	stmdbmi	r2!, {r0, r1, r2, r3, r4, r5, r7, r8, sl, fp, ip, sp, lr, pc}
    72f4:	cmpcc	ip, r9, ror r4
    72f8:	stmdami	r1!, {r1, r9, sl, lr}
    72fc:			; <UNDEFINED> instruction: 0xf0054478
    7300:	strtmi	pc, [r0], -sp, lsr #25
    7304:			; <UNDEFINED> instruction: 0xffdef003
    7308:	strb	r4, [sl, r8, lsr #12]
    730c:			; <UNDEFINED> instruction: 0xf0034628
    7310:	blmi	7469d4 <strvisx@@Base+0x732c60>
    7314:			; <UNDEFINED> instruction: 0xf103447b
    7318:			; <UNDEFINED> instruction: 0x4602015c
    731c:	ldrbtmi	r4, [r8], #-2074	; 0xfffff7e6
    7320:			; <UNDEFINED> instruction: 0xf9e0f005
    7324:			; <UNDEFINED> instruction: 0x46324819
    7328:			; <UNDEFINED> instruction: 0xf0054478
    732c:	ldmdbmi	r8, {r0, r1, r3, r4, r6, r7, r8, fp, ip, sp, lr, pc}
    7330:	ldrbtmi	r4, [r9], #-2072	; 0xfffff7e8
    7334:	cmpcc	ip, r8, ror r4
    7338:			; <UNDEFINED> instruction: 0xf9d4f005
    733c:	stmib	ip!, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    7340:	cmncs	r9, r5, lsl r8
    7344:			; <UNDEFINED> instruction: 0xf0054478
    7348:			; <UNDEFINED> instruction: 0xf003f9cd
    734c:	blmi	506998 <strvisx@@Base+0x4f2c24>
    7350:			; <UNDEFINED> instruction: 0xf103447b
    7354:			; <UNDEFINED> instruction: 0x4602015c
    7358:	ldrbtmi	r4, [r8], #-2065	; 0xfffff7ef
    735c:			; <UNDEFINED> instruction: 0xf9c2f005
    7360:	ldrdeq	r2, [r2], -r4
    7364:	andeq	r0, r0, r0, asr #5
    7368:	andeq	pc, r0, r8, asr #10
    736c:	andeq	r5, r2, ip, rrx
    7370:	andeq	r2, r2, sl, asr sl
    7374:	andeq	pc, r0, lr, lsl #10
    7378:	strdeq	pc, [r0], -r6
    737c:	andeq	r0, r1, r8, asr #6
    7380:	andeq	pc, r0, ip, lsr #10
    7384:	andeq	r0, r1, r8, lsr #6
    7388:	andeq	pc, r0, r6, lsl r3	; <UNPREDICTABLE>
    738c:	andeq	pc, r0, ip, asr #8
    7390:	andeq	r0, r1, sl, lsl #6
    7394:	andeq	pc, r0, r4, asr #7
    7398:			; <UNDEFINED> instruction: 0x0000f4b8
    739c:	andeq	r0, r1, ip, ror #5
    73a0:	ldrdeq	pc, [r0], -sl
    73a4:	svcmi	0x00f8e92d
    73a8:	ldmib	sp, {r7, r9, sl, lr}^
    73ac:	strmi	r9, [sp], -sl, lsl #20
    73b0:	ldrsbtlt	pc, [r0], -sp	; <UNPREDICTABLE>
    73b4:			; <UNDEFINED> instruction: 0x461e4617
    73b8:	cdp2	0, 15, cr15, cr6, cr3, {0}
    73bc:	tstcs	r5, r8, ror #6
    73c0:			; <UNDEFINED> instruction: 0xf0044604
    73c4:	ldmiblt	r0!, {r0, r1, r2, r3, r8, r9, sl, fp, ip, sp, lr, pc}^
    73c8:	strtmi	r4, [r0], -r9, lsr #12
    73cc:	cdp2	0, 10, cr15, cr14, cr4, {0}
    73d0:	ldrbmi	fp, [sl], -r8, asr #19
    73d4:			; <UNDEFINED> instruction: 0x46204651
    73d8:			; <UNDEFINED> instruction: 0xf81af005
    73dc:			; <UNDEFINED> instruction: 0x463ab998
    73e0:			; <UNDEFINED> instruction: 0x46204633
    73e4:	cdp2	0, 6, cr15, cr10, cr4, {0}
    73e8:	strbmi	fp, [r9], -r8, ror #18
    73ec:			; <UNDEFINED> instruction: 0xf0044620
    73f0:	stmdblt	r0, {r0, r2, r3, r4, r7, r9, sl, fp, ip, sp, lr, pc}^
    73f4:	strtmi	r4, [r1], -r0, asr #12
    73f8:	blx	ff9c53fe <strvisx@@Base+0xff9b168a>
    73fc:	pop	{r5, r9, sl, lr}
    7400:			; <UNDEFINED> instruction: 0xf0034ff8
    7404:			; <UNDEFINED> instruction: 0xf003bf5f
    7408:	stmdbmi	r7, {r0, r1, r4, r5, r8, sl, fp, ip, sp, lr, pc}
    740c:	smccc	50249	; 0xc449
    7410:	stmdami	r6, {r1, r9, sl, lr}
    7414:			; <UNDEFINED> instruction: 0xf0054478
    7418:	stmdbmi	r5, {r0, r2, r5, r6, r8, fp, ip, sp, lr, pc}
    741c:	ldrbtmi	r4, [r9], #-2053	; 0xfffff7fb
    7420:	smccc	50248	; 0xc448
    7424:			; <UNDEFINED> instruction: 0xf95ef005
    7428:	andeq	r0, r1, r0, lsr r2
    742c:	andeq	pc, r0, r0, lsr #4
    7430:	andeq	r0, r1, lr, lsl r2
    7434:	ldrdeq	pc, [r0], -r8
    7438:			; <UNDEFINED> instruction: 0x4605b538
    743c:	cmnlt	r3, r3, lsl #16
    7440:	ldmdavs	r8, {r2, r9, sl, lr}
    7444:	svc	0x00d8f7fa
    7448:	ldmdavs	r8, {r0, r1, r5, fp, sp, lr}^
    744c:	svc	0x00d4f7fa
    7450:			; <UNDEFINED> instruction: 0xf7fa6820
    7454:			; <UNDEFINED> instruction: 0xf854efd2
    7458:	blcs	17070 <strvisx@@Base+0x32fc>
    745c:			; <UNDEFINED> instruction: 0x4628d1f1
    7460:	ldrhtmi	lr, [r8], -sp
    7464:	svclt	0x00c6f7fa
    7468:	ldrbmi	lr, [r0, -sp, lsr #18]!
    746c:	bmi	fecd8eb8 <strvisx@@Base+0xfecc5144>
    7470:	blmi	fecd8ce8 <strvisx@@Base+0xfecc4f74>
    7474:	ldrbtmi	fp, [sl], #-137	; 0xffffff77
    7478:	strmi	r4, [sl], r0, lsl #13
    747c:	ldmpl	r3, {r0, sp}^
    7480:	ldmdavs	fp, {r3, r7, r8, sp}
    7484:			; <UNDEFINED> instruction: 0xf04f9307
    7488:			; <UNDEFINED> instruction: 0xf0050300
    748c:	tstcs	r0, r9, lsr sp	; <UNPREDICTABLE>
    7490:	movwcs	r2, #512	; 0x200
    7494:	andhi	pc, r0, r0, asr #17
    7498:	stmdaeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    749c:	andge	pc, r4, r0, asr #17
    74a0:	stmib	r0, {r0, r2, r9, sl, lr}^
    74a4:	orrvs	r9, r1, r2, lsl #8
    74a8:	movwcs	lr, #35264	; 0x89c0
    74ac:	andshi	pc, r4, r0, asr #17
    74b0:	cdp2	0, 7, cr15, cr10, cr3, {0}
    74b4:			; <UNDEFINED> instruction: 0xf0002800
    74b8:	strbmi	r8, [r1], -sp, lsr #2
    74bc:			; <UNDEFINED> instruction: 0xf0044604
    74c0:	stmdacs	r0, {r0, r4, r7, r9, sl, fp, ip, sp, lr, pc}
    74c4:	tsthi	fp, r0, asr #32	; <UNPREDICTABLE>
    74c8:	strtmi	r2, [r0], -r3, lsl #2
    74cc:	cdp2	0, 2, cr15, cr14, cr4, {0}
    74d0:			; <UNDEFINED> instruction: 0xf0402800
    74d4:			; <UNDEFINED> instruction: 0x46218114
    74d8:			; <UNDEFINED> instruction: 0xf7ff4628
    74dc:			; <UNDEFINED> instruction: 0x4620fb75
    74e0:			; <UNDEFINED> instruction: 0xffacf003
    74e4:	strtmi	r4, [r1], -r2, asr #12
    74e8:			; <UNDEFINED> instruction: 0xf7ff4628
    74ec:			; <UNDEFINED> instruction: 0xf10dfbed
    74f0:	strtmi	r0, [r0], -pc, lsl #2
    74f4:	blx	c350e <strvisx@@Base+0xaf79a>
    74f8:	stmdacs	r0, {r7, r9, sl, lr}
    74fc:	tsthi	r3, r0, asr #32	; <UNPREDICTABLE>
    7500:	mulne	pc, sp, r8	; <UNPREDICTABLE>
    7504:			; <UNDEFINED> instruction: 0xf0402902
    7508:			; <UNDEFINED> instruction: 0xf10580d8
    750c:			; <UNDEFINED> instruction: 0x46200110
    7510:	blx	ff2c3528 <strvisx@@Base+0xff2af7b4>
    7514:			; <UNDEFINED> instruction: 0xf0402800
    7518:	stmmi	sl, {r0, r1, r2, r5, r6, r7, pc}
    751c:	eorhi	pc, r8, #14614528	; 0xdf0000
    7520:	eorls	pc, r8, #14614528	; 0xdf0000
    7524:			; <UNDEFINED> instruction: 0xf8df4478
    7528:	ldrbtmi	sl, [r8], #552	; 0x228
    752c:	ldrbtmi	r6, [r9], #2345	; 0x929
    7530:	mrrc2	0, 0, pc, r8, cr5	; <UNPREDICTABLE>
    7534:			; <UNDEFINED> instruction: 0xe01344fa
    7538:	ldmdavc	r3, {r0, r2, r9, fp, ip, pc}
    753c:			; <UNDEFINED> instruction: 0xd12b2b31
    7540:	bllt	12e5694 <strvisx@@Base+0x12d1920>
    7544:			; <UNDEFINED> instruction: 0xf04369ab
    7548:			; <UNDEFINED> instruction: 0x61ab0301
    754c:			; <UNDEFINED> instruction: 0x46484631
    7550:	mcrr2	0, 0, pc, r8, cr5	; <UNPREDICTABLE>
    7554:			; <UNDEFINED> instruction: 0xf7fa9804
    7558:	stmdals	r5, {r4, r6, r8, r9, sl, fp, sp, lr, pc}
    755c:	svc	0x004cf7fa
    7560:			; <UNDEFINED> instruction: 0xf0044620
    7564:	stmdacs	r0, {r0, r3, r5, fp, ip, sp, lr, pc}
    7568:	stmdbge	r4, {r3, r4, r5, r6, ip, lr, pc}
    756c:	strtmi	r2, [r0], -r0, lsl #4
    7570:	mcrr2	0, 0, pc, ip, cr4	; <UNPREDICTABLE>
    7574:			; <UNDEFINED> instruction: 0xf0402800
    7578:	bge	1a7830 <strvisx@@Base+0x193abc>
    757c:	strtmi	sl, [r0], -r5, lsl #18
    7580:	stc2	0, cr15, [r2], {4}
    7584:			; <UNDEFINED> instruction: 0xf0402800
    7588:	cdpls	0, 0, cr8, cr4, cr4, {5}
    758c:	ldrtmi	r4, [r0], -r1, asr #12
    7590:	stmib	r4!, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    7594:	sbcle	r2, pc, r0, lsl #16
    7598:			; <UNDEFINED> instruction: 0x46304651
    759c:	ldmib	lr, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    75a0:	bls	175d08 <strvisx@@Base+0x161f94>
    75a4:	blcs	ca55f8 <strvisx@@Base+0xc91884>
    75a8:	ldmdavc	r3, {r1, r2, r8, ip, lr, pc}^
    75ac:	stmibvs	fp!, {r0, r1, r5, r8, fp, ip, sp, pc}
    75b0:	movweq	pc, #8259	; 0x2043	; <UNPREDICTABLE>
    75b4:	strb	r6, [r9, fp, lsr #3]
    75b8:	ldrtmi	r4, [r0], -r6, ror #18
    75bc:			; <UNDEFINED> instruction: 0xf7fb4479
    75c0:	stmiblt	r8!, {r1, r2, r3, r7, r8, fp, sp, lr, pc}^
    75c4:	ldmdavc	r3, {r0, r2, r9, fp, ip, pc}
    75c8:			; <UNDEFINED> instruction: 0xd12a2b31
    75cc:	bllt	10e5720 <strvisx@@Base+0x10d19ac>
    75d0:			; <UNDEFINED> instruction: 0xf04369ab
    75d4:			; <UNDEFINED> instruction: 0x61ab0308
    75d8:	ldmdbmi	pc, {r3, r4, r5, r7, r8, r9, sl, sp, lr, pc}^	; <UNPREDICTABLE>
    75dc:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    75e0:	ldmdb	ip!, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    75e4:	mvnle	r2, r0, lsl #16
    75e8:	ldmdavc	r3, {r0, r2, r9, fp, ip, pc}
    75ec:	mvnle	r2, r2, lsr fp
    75f0:	blcs	25744 <strvisx@@Base+0x119d0>
    75f4:	stmibvs	fp!, {r5, r6, r7, r8, ip, lr, pc}
    75f8:	movweq	pc, #16451	; 0x4043	; <UNPREDICTABLE>
    75fc:	str	r6, [r5, fp, lsr #3]!
    7600:			; <UNDEFINED> instruction: 0x46304956
    7604:			; <UNDEFINED> instruction: 0xf7fb4479
    7608:	stmiblt	r0, {r1, r3, r5, r6, r8, fp, sp, lr, pc}
    760c:	ldmdavc	r3, {r0, r2, r9, fp, ip, pc}
    7610:	tstle	sp, r1, lsr fp
    7614:	ldmiblt	fp, {r0, r1, r4, r6, fp, ip, sp, lr}^
    7618:			; <UNDEFINED> instruction: 0xf04369ab
    761c:			; <UNDEFINED> instruction: 0x61ab0310
    7620:	stmdbmi	pc, {r2, r4, r7, r8, r9, sl, sp, lr, pc}^	; <UNPREDICTABLE>
    7624:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    7628:	ldmdb	r8, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    762c:	stmdbmi	sp, {r7, r8, ip, sp, pc}^
    7630:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    7634:	ldmdb	r2, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    7638:	bls	175b80 <strvisx@@Base+0x161e0c>
    763c:	blcs	c65690 <strvisx@@Base+0xc5191c>
    7640:	ldmdavc	r3, {r1, r2, r8, ip, lr, pc}^
    7644:	stmibvs	fp!, {r0, r1, r5, r8, fp, ip, sp, pc}
    7648:	nopeq	{67}	; 0x43
    764c:	ldrb	r6, [sp, -fp, lsr #3]!
    7650:	ldrtmi	r4, [r1], -r5, asr #16
    7654:			; <UNDEFINED> instruction: 0xf0054478
    7658:	ldrb	pc, [fp, -r5, asr #23]!	; <UNPREDICTABLE>
    765c:			; <UNDEFINED> instruction: 0xf0034620
    7660:	stmdbvs	fp!, {r0, r4, r5, r9, sl, fp, ip, sp, lr, pc}
    7664:	stmiavs	fp!, {r0, r1, r4, r5, r8, fp, ip, sp, pc}
    7668:	svcmi	0x00a0f5b3
    766c:			; <UNDEFINED> instruction: 0xf44fbf28
    7670:	adcvs	r4, fp, r0, lsr #7
    7674:	ldrcc	lr, [r0], #-2525	; 0xfffff623
    7678:	strcc	lr, [r8], #-2501	; 0xfffff63b
    767c:	tstle	fp, r3, lsr #6
    7680:	blmi	bd9f70 <strvisx@@Base+0xbc61fc>
    7684:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    7688:	blls	1e16f8 <strvisx@@Base+0x1cd984>
    768c:	qdaddle	r4, sl, r8
    7690:	andlt	r4, r9, r8, lsr #12
    7694:			; <UNDEFINED> instruction: 0x8770e8bd
    7698:			; <UNDEFINED> instruction: 0xf10568a9
    769c:	ldmib	sp, {r3, r5}^
    76a0:	tstls	r0, r0, lsl r3
    76a4:			; <UNDEFINED> instruction: 0xf94ef007
    76a8:	ldmib	r5, {r0, r3, r5, r7, fp, sp, lr}^
    76ac:			; <UNDEFINED> instruction: 0xf1052308
    76b0:	qaddls	r0, r8, r0
    76b4:			; <UNDEFINED> instruction: 0xf946f007
    76b8:	stmdami	sp!, {r1, r5, r6, r7, r8, r9, sl, sp, lr, pc}
    76bc:			; <UNDEFINED> instruction: 0xf0054478
    76c0:	strtmi	pc, [r0], -sp, asr #21
    76c4:	ldc2l	0, cr15, [lr, #12]!
    76c8:			; <UNDEFINED> instruction: 0xf7fa4628
    76cc:			; <UNDEFINED> instruction: 0x4645ee96
    76d0:			; <UNDEFINED> instruction: 0xf003e7d6
    76d4:	blmi	a06610 <strvisx@@Base+0x9f289c>
    76d8:			; <UNDEFINED> instruction: 0xf103447b
    76dc:	strmi	r0, [r2], -r0, lsl #3
    76e0:	ldrbtmi	r4, [r8], #-2085	; 0xfffff7db
    76e4:			; <UNDEFINED> instruction: 0xfffef004
    76e8:	blx	ff0c36fe <strvisx@@Base+0xff0af98a>
    76ec:	ldrbtmi	r4, [fp], #-2851	; 0xfffff4dd
    76f0:	orreq	pc, r0, r3, lsl #2
    76f4:	stmdami	r2!, {r1, r9, sl, lr}
    76f8:			; <UNDEFINED> instruction: 0xf0044478
    76fc:			; <UNDEFINED> instruction: 0xf003fff3
    7700:	blmi	8465e4 <strvisx@@Base+0x832870>
    7704:			; <UNDEFINED> instruction: 0xf103447b
    7708:	strmi	r0, [r2], -r0, lsl #3
    770c:	ldrbtmi	r4, [r8], #-2078	; 0xfffff7e2
    7710:			; <UNDEFINED> instruction: 0xffe8f004
    7714:	ldmdami	lr, {r0, r2, r3, r4, r8, fp, lr}
    7718:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    771c:			; <UNDEFINED> instruction: 0xf0043180
    7720:			; <UNDEFINED> instruction: 0xf7faffe1
    7724:			; <UNDEFINED> instruction: 0xf003efba
    7728:	blmi	6c65bc <strvisx@@Base+0x6b2848>
    772c:			; <UNDEFINED> instruction: 0xf103447b
    7730:	strmi	r0, [r2], -r0, lsl #3
    7734:	ldrbtmi	r4, [r8], #-2072	; 0xfffff7e8
    7738:			; <UNDEFINED> instruction: 0xffd4f004
    773c:	andeq	r2, r2, sl, lsl #17
    7740:	andeq	r0, r0, r0, asr #5
    7744:	andeq	pc, r0, r8, asr r3	; <UNPREDICTABLE>
    7748:	andeq	pc, r0, r6, ror #6
    774c:	andeq	pc, r0, lr, ror #7
    7750:	andeq	pc, r0, r8, ror r3	; <UNPREDICTABLE>
    7754:	andeq	pc, r0, ip, lsl r3	; <UNPREDICTABLE>
    7758:	andeq	pc, r0, r2, ror #5
    775c:	andeq	pc, r0, ip, ror #5
    7760:	andeq	pc, r0, sl, asr #5
    7764:	ldrdeq	pc, [r0], -r2
    7768:	strdeq	pc, [r0], -r4
    776c:	andeq	r2, r2, ip, ror r6
    7770:	andeq	pc, r0, ip, lsl #3
    7774:	andeq	pc, r0, r4, ror #30
    7778:	andeq	lr, r0, r2, asr pc
    777c:	andeq	pc, r0, lr, asr #30
    7780:	andeq	lr, r0, ip, lsr pc
    7784:	andeq	pc, r0, r8, lsr pc	; <UNPREDICTABLE>
    7788:	andeq	lr, r0, r6, lsr #30
    778c:	andeq	pc, r0, r4, lsr #30
    7790:	ldrdeq	lr, [r0], -lr	; <UNPREDICTABLE>
    7794:	andeq	pc, r0, r0, lsl pc	; <UNPREDICTABLE>
    7798:	strdeq	lr, [r0], -lr	; <UNPREDICTABLE>
    779c:	ldrbmi	r6, [r0, -r0, lsl #18]!
    77a0:	mvnsmi	lr, #737280	; 0xb4000
    77a4:	strmi	r4, [r8], r6, lsl #12
    77a8:			; <UNDEFINED> instruction: 0xf0034691
    77ac:	stmdacs	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip, sp, lr, pc}
    77b0:	ldmdbvs	r7!, {r2, r6, ip, lr, pc}^
    77b4:	strmi	r2, [r5], -r4, lsl #2
    77b8:	cmnvs	r3, fp, ror ip
    77bc:	ldc2	0, cr15, [r2, #-16]
    77c0:	bllt	1e18fd8 <strvisx@@Base+0x1e05264>
    77c4:			; <UNDEFINED> instruction: 0x46284639
    77c8:	ldc2	0, cr15, [r0], #16
    77cc:	bllt	1218fe4 <strvisx@@Base+0x1205270>
    77d0:	strbmi	r4, [r1], -sl, asr #12
    77d4:			; <UNDEFINED> instruction: 0xf0044628
    77d8:			; <UNDEFINED> instruction: 0x4604fe1b
    77dc:			; <UNDEFINED> instruction: 0x4629bb10
    77e0:			; <UNDEFINED> instruction: 0xf7ff4630
    77e4:	ldmdami	r9, {r0, r4, r5, r6, r7, r8, fp, ip, sp, lr, pc}
    77e8:	ldrbtmi	r4, [r8], #-1593	; 0xfffff9c7
    77ec:	blx	94380a <strvisx@@Base+0x92fa96>
    77f0:			; <UNDEFINED> instruction: 0x46304639
    77f4:	blx	ec57fa <strvisx@@Base+0xeb1a86>
    77f8:	strtmi	fp, [r8], -r8, lsr #18
    77fc:	stc2l	0, cr15, [r2, #-12]!
    7800:	pop	{r5, r9, sl, lr}
    7804:			; <UNDEFINED> instruction: 0xf00283f8
    7808:			; <UNDEFINED> instruction: 0xf04ffdb1
    780c:			; <UNDEFINED> instruction: 0x460134ff
    7810:	ldrbtmi	r4, [r8], #-2063	; 0xfffff7f1
    7814:	blx	8c3830 <strvisx@@Base+0x8afabc>
    7818:			; <UNDEFINED> instruction: 0xf0034628
    781c:			; <UNDEFINED> instruction: 0x4620fd53
    7820:	mvnshi	lr, #12386304	; 0xbd0000
    7824:			; <UNDEFINED> instruction: 0xf0034620
    7828:	blmi	2c64bc <strvisx@@Base+0x2b2748>
    782c:			; <UNDEFINED> instruction: 0xf103447b
    7830:	strmi	r0, [r2], -r8, lsl #3
    7834:	ldrbtmi	r4, [r8], #-2056	; 0xfffff7f8
    7838:			; <UNDEFINED> instruction: 0xff54f004
    783c:	stmdami	r8, {r0, r1, r2, r8, fp, lr}
    7840:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    7844:			; <UNDEFINED> instruction: 0xf0043188
    7848:	svclt	0x0000ff4d
    784c:	andeq	pc, r0, r2, lsl #3
    7850:	andeq	pc, r0, lr, ror r1	; <UNPREDICTABLE>
    7854:	andeq	pc, r0, r0, lsl lr	; <UNPREDICTABLE>
    7858:	strdeq	lr, [r0], -lr	; <UNPREDICTABLE>
    785c:	strdeq	pc, [r0], -ip
    7860:			; <UNDEFINED> instruction: 0x0000eeb6
    7864:	svcmi	0x00f0e92d
    7868:	stc	6, cr4, [sp, #-588]!	; 0xfffffdb4
    786c:			; <UNDEFINED> instruction: 0xf8df8b04
    7870:			; <UNDEFINED> instruction: 0xf8df3468
    7874:	cdp	4, 0, cr4, cr8, cr8, {3}
    7878:			; <UNDEFINED> instruction: 0xf8df1a10
    787c:	addslt	r1, r9, r4, ror #8
    7880:	ldrbtmi	r4, [r9], #-1148	; 0xfffffb84
    7884:	stmiapl	fp, {r0, r1, ip, pc}^
    7888:	tstls	r7, #1769472	; 0x1b0000
    788c:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    7890:	movwcs	fp, #266	; 0x10a
    7894:	stmdbls	r3, {r0, r1, r4, sp, lr}
    7898:	mrrcne	9, 4, r6, sl, cr11	; <UNPREDICTABLE>
    789c:	movwls	r6, #33098	; 0x814a
    78a0:	stc2	0, cr15, [r2], {3}
    78a4:	stmdacs	r0, {r1, r2, r9, sl, lr}
    78a8:	mvnshi	pc, r0
    78ac:			; <UNDEFINED> instruction: 0xf004210b
    78b0:	mulls	r4, r9, ip
    78b4:			; <UNDEFINED> instruction: 0xf0402800
    78b8:	stmdbls	r8, {r1, r4, r5, r6, r7, r8, pc}
    78bc:			; <UNDEFINED> instruction: 0xf0044630
    78c0:	andls	pc, r4, r5, lsr ip	; <UNPREDICTABLE>
    78c4:			; <UNDEFINED> instruction: 0xf0402800
    78c8:	mnf<illegal precision>z	f0, #2.0
    78cc:			; <UNDEFINED> instruction: 0x46301a10
    78d0:	stc2l	0, cr15, [r0, #16]!
    78d4:	stmdacs	r0, {r2, ip, pc}
    78d8:	mvnhi	pc, r0, asr #32
    78dc:	ldrtmi	r9, [r1], -r3, lsl #26
    78e0:			; <UNDEFINED> instruction: 0xf7ff4628
    78e4:	blmi	5eb0 <el_source@plt+0x3574>
    78e8:	bhi	42f24 <strvisx@@Base+0x2f1b0>
    78ec:	stmdbls	r8, {r0, r3, r9, fp, sp, pc}
    78f0:			; <UNDEFINED> instruction: 0x4628447b
    78f4:	blx	fe1458fa <strvisx@@Base+0xfe131b86>
    78f8:	beq	443124 <strvisx@@Base+0x42f3b0>
    78fc:			; <UNDEFINED> instruction: 0xf0002800
    7900:			; <UNDEFINED> instruction: 0xf1bb8190
    7904:	andle	r0, r7, r0, lsl #30
    7908:	andcs	r2, r1, r4, lsl #2
    790c:	blx	ffe43928 <strvisx@@Base+0xffe2fbb4>
    7910:			; <UNDEFINED> instruction: 0xf8cb9b04
    7914:	andvs	r0, r3, r0
    7918:	stmiapl	r3!, {r0, r1, r4, r5, r6, r7, r8, r9, fp, lr}^
    791c:	ldmdavs	fp, {r0, r2, r8, r9, ip, pc}
    7920:			; <UNDEFINED> instruction: 0xf0402b00
    7924:	bmi	ffc67d20 <strvisx@@Base+0xffc53fac>
    7928:	blmi	ffc59398 <strvisx@@Base+0xffc45624>
    792c:	ldrbtmi	r4, [fp], #-1146	; 0xfffffb86
    7930:	bcs	fe44315c <strvisx@@Base+0xfe42f3e8>
    7934:	bcc	fe44315c <strvisx@@Base+0xfe42f3e8>
    7938:	vnmls.f32	s18, s18, s6
    793c:	ldmdbvs	r4, {r4, r7, r9, fp}^
    7940:	cmpvs	r3, r3, ror #24
    7944:	strls	r4, [r8], #-1569	; 0xfffff9df
    7948:	blx	1dc3964 <strvisx@@Base+0x1dafbf0>
    794c:			; <UNDEFINED> instruction: 0xf0034630
    7950:	tstcs	ip, r5, ror sp	; <UNPREDICTABLE>
    7954:			; <UNDEFINED> instruction: 0xf0044630
    7958:	strmi	pc, [r5], -r5, asr #24
    795c:			; <UNDEFINED> instruction: 0xf0402800
    7960:	stmdbls	r8, {r0, r1, r2, r5, r6, r8, pc}
    7964:			; <UNDEFINED> instruction: 0xf0044630
    7968:	strmi	pc, [r5], -r1, ror #23
    796c:			; <UNDEFINED> instruction: 0xf0402800
    7970:	mrc	1, 0, r8, cr9, cr15, {2}
    7974:			; <UNDEFINED> instruction: 0x46301a10
    7978:			; <UNDEFINED> instruction: 0xf0049a09
    797c:	strmi	pc, [r5], -r9, asr #26
    7980:			; <UNDEFINED> instruction: 0xf0402800
    7984:	svcls	0x00038155
    7988:			; <UNDEFINED> instruction: 0x46384631
    798c:			; <UNDEFINED> instruction: 0xf91cf7ff
    7990:			; <UNDEFINED> instruction: 0xf0034630
    7994:			; <UNDEFINED> instruction: 0x4631fd53
    7998:			; <UNDEFINED> instruction: 0x462a4638
    799c:			; <UNDEFINED> instruction: 0xf994f7ff
    79a0:	tsteq	fp, sp, lsl #2	; <UNPREDICTABLE>
    79a4:			; <UNDEFINED> instruction: 0xf0044630
    79a8:	stmdacs	r0, {r0, r3, r5, r7, fp, ip, sp, lr, pc}
    79ac:	orrhi	pc, r8, r0, asr #32
    79b0:	ldrtmi	sl, [r0], -r8, lsl #18
    79b4:			; <UNDEFINED> instruction: 0xf878f004
    79b8:			; <UNDEFINED> instruction: 0xf0402800
    79bc:	stmiami	sp, {r0, r7, r8, pc}^
    79c0:	mulsne	fp, sp, r8
    79c4:	ldrbtmi	r9, [r8], #-2568	; 0xfffff5f8
    79c8:	blx	dc39e4 <strvisx@@Base+0xdafc70>
    79cc:	addmi	r9, ip, #8, 18	; 0x20000
    79d0:	cmnhi	r1, r0, asr #32	; <UNPREDICTABLE>
    79d4:	mulscs	fp, sp, r8
    79d8:			; <UNDEFINED> instruction: 0xf0002a65
    79dc:	bcs	1a27dec <strvisx@@Base+0x1a14078>
    79e0:	cmphi	pc, r0, asr #32	; <UNPREDICTABLE>
    79e4:	ldrtmi	sl, [r0], -r7, lsl #18
    79e8:			; <UNDEFINED> instruction: 0xf85ef004
    79ec:			; <UNDEFINED> instruction: 0xf0402800
    79f0:	stmdbls	r7, {r0, r2, r3, r4, r5, r8, pc}
    79f4:	svcvs	0x0000f1b1
    79f8:	teqhi	r1, r0, lsl #4	; <UNPREDICTABLE>
    79fc:			; <UNDEFINED> instruction: 0xf0002900
    7a00:	popmi	{r0, r1, r2, r3, r7, pc}
    7a04:			; <UNDEFINED> instruction: 0xf0054478
    7a08:	blls	20626c <strvisx@@Base+0x1f24f8>
    7a0c:			; <UNDEFINED> instruction: 0xf0002b00
    7a10:			; <UNDEFINED> instruction: 0xf10d8082
    7a14:			; <UNDEFINED> instruction: 0xf10d0928
    7a18:	strcs	r0, [r0, -ip, lsr #16]
    7a1c:			; <UNDEFINED> instruction: 0x4629e011
    7a20:	bcs	443288 <strvisx@@Base+0x42f514>
    7a24:	beq	fe44328c <strvisx@@Base+0xfe42f518>
    7a28:			; <UNDEFINED> instruction: 0xf918f005
    7a2c:	strtmi	r9, [r8], -sl, lsl #26
    7a30:			; <UNDEFINED> instruction: 0xf7fa3701
    7a34:	stmdals	fp, {r1, r5, r6, r7, sl, fp, sp, lr, pc}
    7a38:	ldcl	7, cr15, [lr], {250}	; 0xfa
    7a3c:	addsmi	r9, pc, #7168	; 0x1c00
    7a40:	andcs	sp, r0, #-1879048186	; 0x90000006
    7a44:	ldrtmi	r4, [r0], -r9, asr #12
    7a48:			; <UNDEFINED> instruction: 0xf9e0f004
    7a4c:			; <UNDEFINED> instruction: 0xf0402800
    7a50:			; <UNDEFINED> instruction: 0x460280dd
    7a54:	ldrtmi	r4, [r0], -r1, asr #12
    7a58:			; <UNDEFINED> instruction: 0xf9d8f004
    7a5c:			; <UNDEFINED> instruction: 0xf0402800
    7a60:	stcge	0, cr8, [ip], {213}	; 0xd5
    7a64:			; <UNDEFINED> instruction: 0x46214630
    7a68:	blx	fe2c3a7a <strvisx@@Base+0xfe2afd06>
    7a6c:	cmnle	r9, r0, lsl #16
    7a70:			; <UNDEFINED> instruction: 0x212f9d0a
    7a74:			; <UNDEFINED> instruction: 0xf7fa4628
    7a78:	stmdacs	r0, {r2, r3, r4, r5, sl, fp, sp, lr, pc}
    7a7c:			; <UNDEFINED> instruction: 0xf1bbd1cf
    7a80:	sbcsle	r0, r4, r0, lsl #30
    7a84:			; <UNDEFINED> instruction: 0xf10a2204
    7a88:			; <UNDEFINED> instruction: 0xf8db0102
    7a8c:	b	13c7a94 <strvisx@@Base+0x13b3d20>
    7a90:	movwls	r0, #9098	; 0x238a
    7a94:	blx	15c3ab0 <strvisx@@Base+0x15afd3c>
    7a98:			; <UNDEFINED> instruction: 0x46052130
    7a9c:	andeq	pc, r0, fp, asr #17
    7aa0:			; <UNDEFINED> instruction: 0xf0052001
    7aa4:			; <UNDEFINED> instruction: 0xf845fa2d
    7aa8:			; <UNDEFINED> instruction: 0xf8db002a
    7aac:	stmdals	sl, {ip, sp}
    7ab0:	eorpl	pc, sl, r3, asr r8	; <UNPREDICTABLE>
    7ab4:	blx	19c3ad0 <strvisx@@Base+0x19afd5c>
    7ab8:			; <UNDEFINED> instruction: 0xf8db6028
    7abc:	stmdals	fp, {ip, sp}
    7ac0:	eorpl	pc, sl, r3, asr r8	; <UNPREDICTABLE>
    7ac4:	blx	17c3ae0 <strvisx@@Base+0x17afd6c>
    7ac8:	logeqs	f7, #5.0
    7acc:			; <UNDEFINED> instruction: 0xf8db6068
    7ad0:			; <UNDEFINED> instruction: 0xf8533000
    7ad4:			; <UNDEFINED> instruction: 0xf103302a
    7ad8:	strtmi	r0, [r5], -r8, lsl #24
    7adc:	ldfeqd	f7, [r0], {12}
    7ae0:	ldrcc	ip, [r0], #-3343	; 0xfffff2f1
    7ae4:			; <UNDEFINED> instruction: 0xf84c4575
    7ae8:			; <UNDEFINED> instruction: 0xf84c0c10
    7aec:			; <UNDEFINED> instruction: 0xf84c1c0c
    7af0:			; <UNDEFINED> instruction: 0xf84c2c08
    7af4:	mvnsle	r3, r4, lsl #24
    7af8:			; <UNDEFINED> instruction: 0xf10acc03
    7afc:			; <UNDEFINED> instruction: 0xf8cc0a01
    7b00:			; <UNDEFINED> instruction: 0xf8cc0000
    7b04:	bls	8bb1c <strvisx@@Base+0x77da8>
    7b08:	ldrdcc	pc, [r0], -fp
    7b0c:	andcs	r4, r0, #318767104	; 0x13000000
    7b10:	stcls	0, cr6, [sl, #-360]	; 0xfffffe98
    7b14:	blls	181948 <strvisx@@Base+0x16dbd4>
    7b18:	blcs	21b8c <strvisx@@Base+0xde18>
    7b1c:	svcge	0x000cf43f
    7b20:			; <UNDEFINED> instruction: 0xf0034630
    7b24:	vnmla.f64	d15, d25, d15
    7b28:	bls	24e370 <strvisx@@Base+0x23a5fc>
    7b2c:			; <UNDEFINED> instruction: 0xf7ff9803
    7b30:	mrc	14, 0, APSR_nzcv, cr9, cr7, {1}
    7b34:			; <UNDEFINED> instruction: 0xf7fa0a10
    7b38:	blls	182cc0 <strvisx@@Base+0x16ef4c>
    7b3c:	blcs	21bb0 <strvisx@@Base+0xde3c>
    7b40:			; <UNDEFINED> instruction: 0xf1bbbf18
    7b44:	eorsle	r0, r8, r0, lsl #30
    7b48:	ldrdeq	pc, [r0], -fp
    7b4c:			; <UNDEFINED> instruction: 0xf7ffb3a8
    7b50:	tstcs	r4, r3, ror ip	; <UNPREDICTABLE>
    7b54:			; <UNDEFINED> instruction: 0xf0052001
    7b58:	movwcs	pc, #2515	; 0x9d3	; <UNPREDICTABLE>
    7b5c:	andeq	pc, r0, fp, asr #17
    7b60:	eor	r6, sl, r3
    7b64:			; <UNDEFINED> instruction: 0xf984f003
    7b68:	ldrbtmi	r4, [r9], #-2404	; 0xfffff69c
    7b6c:			; <UNDEFINED> instruction: 0x46023194
    7b70:	ldrbtmi	r4, [r8], #-2147	; 0xfffff79d
    7b74:			; <UNDEFINED> instruction: 0xf872f005
    7b78:			; <UNDEFINED> instruction: 0xf7fa980a
    7b7c:	stmdals	fp, {r1, r2, r3, r4, r5, sl, fp, sp, lr, pc}
    7b80:	ldc	7, cr15, [sl], #-1000	; 0xfffffc18
    7b84:			; <UNDEFINED> instruction: 0xf0034630
    7b88:	vmov.32	pc, d25[0]
    7b8c:	stmdals	r3, {r4, r9, fp, ip}
    7b90:			; <UNDEFINED> instruction: 0xf7ff9a09
    7b94:	cdp	14, 1, cr15, cr9, cr5, {0}
    7b98:			; <UNDEFINED> instruction: 0xf7fa0a10
    7b9c:			; <UNDEFINED> instruction: 0xf1bbec2e
    7ba0:	andsle	r0, r8, r0, lsl #30
    7ba4:	ldrdeq	pc, [r0], -fp
    7ba8:			; <UNDEFINED> instruction: 0xf7ffb108
    7bac:	movwcs	pc, #3141	; 0xc45	; <UNPREDICTABLE>
    7bb0:	rscscc	pc, pc, #79	; 0x4f
    7bb4:	andcc	pc, r0, fp, asr #17
    7bb8:	bmi	14ac3d0 <strvisx@@Base+0x149865c>
    7bbc:	ldrbtmi	r4, [sl], #-2886	; 0xfffff4ba
    7bc0:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    7bc4:	subsmi	r9, sl, r7, lsl fp
    7bc8:	stmdals	r4, {r5, r6, r8, ip, lr, pc}
    7bcc:	ldc	0, cr11, [sp], #100	; 0x64
    7bd0:	pop	{r2, r8, r9, fp, pc}
    7bd4:	blls	16bb9c <strvisx@@Base+0x157e28>
    7bd8:			; <UNDEFINED> instruction: 0xf04f681b
    7bdc:	movwls	r3, #17407	; 0x43ff
    7be0:	stmdbge	ip, {r0, r1, r3, r5, r6, r7, r8, r9, sl, sp, lr, pc}
    7be4:			; <UNDEFINED> instruction: 0xf0034630
    7be8:	bllt	1a4796c <strvisx@@Base+0x1a33bf8>
    7bec:	stmdbls	ip, {r1, r2, r6, fp, lr}
    7bf0:			; <UNDEFINED> instruction: 0xf0054478
    7bf4:	stmdals	ip, {r0, r5, r8, fp, ip, sp, lr, pc}
    7bf8:	addsle	r2, r1, r1, lsl #16
    7bfc:	blx	fedc3c0e <strvisx@@Base+0xfedafe9a>
    7c00:	stmdami	r2, {r0, r9, sl, lr}^
    7c04:			; <UNDEFINED> instruction: 0xf0054478
    7c08:	ldr	pc, [fp, r9, lsr #16]!
    7c0c:			; <UNDEFINED> instruction: 0xf930f003
    7c10:	ldrbtmi	r4, [fp], #-2879	; 0xfffff4c1
    7c14:	orrseq	pc, r4, r3, lsl #2
    7c18:	ldmdami	lr!, {r1, r9, sl, lr}
    7c1c:			; <UNDEFINED> instruction: 0xf0044478
    7c20:	ldrtmi	pc, [r0], -r1, ror #26	; <UNPREDICTABLE>
    7c24:	mvnscc	pc, #79	; 0x4f
    7c28:			; <UNDEFINED> instruction: 0xf0039304
    7c2c:	strb	pc, [r4, fp, asr #22]	; <UNPREDICTABLE>
    7c30:			; <UNDEFINED> instruction: 0xf0034628
    7c34:	blmi	e460b0 <strvisx@@Base+0xe3233c>
    7c38:			; <UNDEFINED> instruction: 0xf103447b
    7c3c:			; <UNDEFINED> instruction: 0x46020194
    7c40:	ldrbtmi	r4, [r8], #-2102	; 0xfffff7ca
    7c44:	stc2l	0, cr15, [lr, #-16]
    7c48:			; <UNDEFINED> instruction: 0xf912f003
    7c4c:	ldrbtmi	r4, [fp], #-2868	; 0xfffff4cc
    7c50:	orrseq	pc, r4, r3, lsl #2
    7c54:	ldmdami	r3!, {r1, r9, sl, lr}
    7c58:			; <UNDEFINED> instruction: 0xf0044478
    7c5c:	ldmdbmi	r2!, {r0, r1, r6, r8, sl, fp, ip, sp, lr, pc}
    7c60:	ldrbtmi	r4, [r9], #-2098	; 0xfffff7ce
    7c64:	orrscc	r4, r4, r8, ror r4
    7c68:	ldc2	0, cr15, [ip, #-16]!
    7c6c:			; <UNDEFINED> instruction: 0xf900f003
    7c70:	ldrbtmi	r4, [fp], #-2863	; 0xfffff4d1
    7c74:	orrseq	pc, r4, r3, lsl #2
    7c78:	stmdami	lr!, {r1, r9, sl, lr}
    7c7c:			; <UNDEFINED> instruction: 0xf0044478
    7c80:	stmdami	sp!, {r0, r4, r5, r8, sl, fp, ip, sp, lr, pc}
    7c84:	ldrbtmi	r2, [r8], #-360	; 0xfffffe98
    7c88:	stc2	0, cr15, [ip, #-16]!
    7c8c:	stc	7, cr15, [r4, #-1000]	; 0xfffffc18
    7c90:	stmdami	fp!, {r1, r3, r5, r8, fp, lr}
    7c94:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    7c98:			; <UNDEFINED> instruction: 0xf0043194
    7c9c:	stmdals	r4, {r0, r1, r5, r8, sl, fp, ip, sp, lr, pc}
    7ca0:			; <UNDEFINED> instruction: 0xf8e6f003
    7ca4:	ldrbtmi	r4, [fp], #-2855	; 0xfffff4d9
    7ca8:	orrseq	pc, r4, r3, lsl #2
    7cac:	stmdami	r6!, {r1, r9, sl, lr}
    7cb0:			; <UNDEFINED> instruction: 0xf0044478
    7cb4:	stmdami	r5!, {r0, r1, r2, r4, r8, sl, fp, ip, sp, lr, pc}
    7cb8:	ldrbtmi	r4, [r8], #-1570	; 0xfffff9de
    7cbc:	ldc2	0, cr15, [r2, #-16]
    7cc0:			; <UNDEFINED> instruction: 0xf8d6f003
    7cc4:	ldrbtmi	r4, [fp], #-2850	; 0xfffff4de
    7cc8:	orrseq	pc, r4, r3, lsl #2
    7ccc:	stmdami	r1!, {r1, r9, sl, lr}
    7cd0:			; <UNDEFINED> instruction: 0xf0044478
    7cd4:	svclt	0x0000fd07
    7cd8:	andeq	r0, r0, r0, asr #5
    7cdc:	andeq	r2, r2, r0, lsl #9
    7ce0:	andeq	r2, r2, lr, ror r4
    7ce4:	strheq	pc, [r0], -r8	; <UNPREDICTABLE>
    7ce8:	andeq	r0, r0, ip, lsr #5
    7cec:	muleq	r0, r4, r0
    7cf0:	andeq	pc, r0, sl, ror r1	; <UNPREDICTABLE>
    7cf4:	andeq	pc, r0, sl, lsl r0	; <UNPREDICTABLE>
    7cf8:	andeq	pc, r0, r0, lsl #1
    7cfc:	ldrdeq	pc, [r0], -r2
    7d00:			; <UNDEFINED> instruction: 0x0000ecb6
    7d04:	andeq	r2, r2, r2, asr #2
    7d08:	andeq	lr, r0, ip, lsl #28
    7d0c:	andeq	lr, r0, r4, lsl lr
    7d10:	andeq	pc, r0, sl, lsr #20
    7d14:	andeq	lr, r0, r8, lsl sl
    7d18:	andeq	pc, r0, r4, lsl #20
    7d1c:	strdeq	lr, [r0], -r2
    7d20:	andeq	pc, r0, lr, ror #19
    7d24:	ldrdeq	lr, [r0], -ip
    7d28:	ldrdeq	pc, [r0], -sl
    7d2c:	strdeq	lr, [r0], -ip
    7d30:	andeq	pc, r0, sl, asr #19
    7d34:			; <UNDEFINED> instruction: 0x0000e9b8
    7d38:	andeq	lr, r0, lr, lsr #27
    7d3c:	andeq	pc, r0, r8, lsr #19
    7d40:	andeq	lr, r0, r2, ror #20
    7d44:	muleq	r0, r6, r9
    7d48:	andeq	lr, r0, r4, lsl #19
    7d4c:			; <UNDEFINED> instruction: 0x0000eaba
    7d50:	andeq	pc, r0, r6, ror r9	; <UNPREDICTABLE>
    7d54:	andeq	lr, r0, r4, ror #18
    7d58:	svclt	0x0000e584
    7d5c:			; <UNDEFINED> instruction: 0xf7ffb108
    7d60:	ldrbmi	fp, [r0, -fp, ror #22]!
    7d64:			; <UNDEFINED> instruction: 0x4604b530
    7d68:	addlt	r4, r5, r2, lsl r8
    7d6c:	ldrbtmi	r4, [r8], #-1549	; 0xfffff9f3
    7d70:			; <UNDEFINED> instruction: 0xf838f005
    7d74:	strtmi	r6, [r8], -r1, ror #18
    7d78:	cmnvs	r3, fp, asr #24
    7d7c:			; <UNDEFINED> instruction: 0xf7fa9103
    7d80:	stmdbls	r3, {r4, r7, r8, r9, fp, sp, lr, pc}
    7d84:	andcs	r4, sp, #45088768	; 0x2b00000
    7d88:	strtmi	r9, [r0], -r0
    7d8c:			; <UNDEFINED> instruction: 0xf8f0f7ff
    7d90:	strtmi	r9, [r0], -r3, lsl #18
    7d94:			; <UNDEFINED> instruction: 0xf86af7ff
    7d98:	andlt	fp, r5, r8, lsl #18
    7d9c:			; <UNDEFINED> instruction: 0xf002bd30
    7da0:	strmi	pc, [r1], -r5, ror #21
    7da4:	ldrbtmi	r4, [r8], #-2052	; 0xfffff7fc
    7da8:			; <UNDEFINED> instruction: 0xff58f004
    7dac:	rscscc	pc, pc, pc, asr #32
    7db0:	ldclt	0, cr11, [r0, #-20]!	; 0xffffffec
    7db4:	andeq	lr, r0, r2, ror sp
    7db8:	andeq	lr, r0, sl, asr sp
    7dbc:			; <UNDEFINED> instruction: 0x460db5f0
    7dc0:	addlt	r6, r5, r1, asr #18
    7dc4:	strtmi	r4, [r8], -r4, lsl #12
    7dc8:	cmnvs	r6, lr, asr #24
    7dcc:			; <UNDEFINED> instruction: 0x461e4617
    7dd0:			; <UNDEFINED> instruction: 0xf7fa9103
    7dd4:	strtmi	lr, [fp], -r6, ror #22
    7dd8:	andcs	r9, lr, #49152	; 0xc000
    7ddc:	andls	r9, r0, r1, lsl #14
    7de0:			; <UNDEFINED> instruction: 0xf7ff4620
    7de4:	stmdbls	r3, {r0, r4, r6, r7, r8, fp, ip, sp, lr, pc}
    7de8:			; <UNDEFINED> instruction: 0xf7ff4620
    7dec:	mcrne	8, 0, pc, cr3, cr15, {1}	; <UNPREDICTABLE>
    7df0:	movwcs	fp, #7960	; 0x1f18
    7df4:	svclt	0x00182e00
    7df8:	tstle	r4, r0, lsl #16
    7dfc:			; <UNDEFINED> instruction: 0xf00d4618
    7e00:	andlt	pc, r5, sp, lsl #17
    7e04:			; <UNDEFINED> instruction: 0xf002bdf0
    7e08:			; <UNDEFINED> instruction: 0x4601fab1
    7e0c:	ldrbtmi	r4, [r8], #-2051	; 0xfffff7fd
    7e10:			; <UNDEFINED> instruction: 0xff24f004
    7e14:	rscscc	pc, pc, pc, asr #32
    7e18:	ldcllt	0, cr11, [r0, #20]!
    7e1c:	andeq	lr, r0, lr, lsl #26
    7e20:			; <UNDEFINED> instruction: 0x460bb510
    7e24:	addlt	r6, r4, r1, asr #18
    7e28:	ldrmi	r4, [r8], -r4, lsl #12
    7e2c:	cmnvs	r2, sl, asr #24
    7e30:	tstls	r2, r3, lsl #6
    7e34:	bl	d45e24 <strvisx@@Base+0xd320b0>
    7e38:	andcs	r9, pc, #32768	; 0x8000
    7e3c:	andls	r9, r0, r3, lsl #22
    7e40:			; <UNDEFINED> instruction: 0xf7ff4620
    7e44:	stmdbls	r2, {r0, r2, r4, r7, fp, ip, sp, lr, pc}
    7e48:			; <UNDEFINED> instruction: 0xf7ff4620
    7e4c:	stmdblt	r8, {r0, r1, r2, r3, fp, ip, sp, lr, pc}
    7e50:	ldclt	0, cr11, [r0, #-16]
    7e54:	blx	fe2c3e64 <strvisx@@Base+0xfe2b00f0>
    7e58:	stmdami	r4, {r0, r9, sl, lr}
    7e5c:			; <UNDEFINED> instruction: 0xf0044478
    7e60:			; <UNDEFINED> instruction: 0xf04ffefd
    7e64:	strdlt	r3, [r4], -pc	; <UNPREDICTABLE>
    7e68:	svclt	0x0000bd10
    7e6c:	andeq	lr, r0, r0, ror #25
    7e70:			; <UNDEFINED> instruction: 0x460bb570
    7e74:	ldrdpl	lr, [r4, -r0]
    7e78:	strmi	fp, [r4], -r6, lsl #1
    7e7c:	stccs	6, cr4, [r0, #-96]	; 0xffffffa0
    7e80:	streq	pc, [r1], -r1, lsl #2
    7e84:	ldrmi	r6, [r5], -r6, ror #2
    7e88:	svclt	0x000c9305
    7e8c:	andscs	r2, r1, #1879048192	; 0x70000000
    7e90:	andls	r9, r4, #-1073741824	; 0xc0000000
    7e94:	bl	145e84 <strvisx@@Base+0x132110>
    7e98:	movwcs	lr, #18909	; 0x49dd
    7e9c:	andls	r9, r0, r3, lsl #18
    7ea0:			; <UNDEFINED> instruction: 0xf7ff4620
    7ea4:	stmdbls	r3, {r0, r2, r5, r6, fp, ip, sp, lr, pc}
    7ea8:	strtmi	r4, [r0], -sl, lsr #12
    7eac:	pop	{r1, r2, ip, sp, pc}
    7eb0:			; <UNDEFINED> instruction: 0xf7ff4070
    7eb4:	svclt	0x0000b9b5
    7eb8:			; <UNDEFINED> instruction: 0x4604b570
    7ebc:	addlt	r6, r4, r3, lsl #18
    7ec0:	ldrmi	r4, [r5], -lr, lsl #12
    7ec4:	ldmdblt	sl, {r0, r1, r3, r7, r8, fp, ip, sp, pc}^
    7ec8:	ldrbtmi	r4, [r8], #-2067	; 0xfffff7ed
    7ecc:			; <UNDEFINED> instruction: 0xff0cf004
    7ed0:	ldrtmi	r4, [r1], -sl, lsr #12
    7ed4:	andlt	r4, r4, r0, lsr #12
    7ed8:	ldrhtmi	lr, [r0], #-141	; 0xffffff73
    7edc:	svclt	0x00c8f7ff
    7ee0:	ldrbtmi	r4, [r8], #-2062	; 0xfffff7f2
    7ee4:			; <UNDEFINED> instruction: 0xff54f004
    7ee8:	stmdbvs	r1, {r1, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}^
    7eec:	mcrrne	6, 3, r4, fp, cr0
    7ef0:	tstls	r3, r3, ror #2
    7ef4:	b	ff545ee4 <strvisx@@Base+0xff532170>
    7ef8:	ldrtmi	r9, [r3], -r3, lsl #18
    7efc:	andls	r2, r0, r7, lsl #4
    7f00:			; <UNDEFINED> instruction: 0xf7ff4620
    7f04:	stmdbls	r3, {r0, r2, r4, r5, fp, ip, sp, lr, pc}
    7f08:	strtmi	r4, [r0], -sl, lsr #12
    7f0c:	pop	{r2, ip, sp, pc}
    7f10:			; <UNDEFINED> instruction: 0xf7ff4070
    7f14:	svclt	0x0000b985
    7f18:	muleq	r0, r2, ip
    7f1c:	andeq	lr, r0, sl, ror ip
    7f20:			; <UNDEFINED> instruction: 0x460db570
    7f24:	addlt	r6, r4, r1, asr #18
    7f28:	strtmi	r4, [r8], -r4, lsl #12
    7f2c:	cmnvs	r3, fp, asr #24
    7f30:	tstls	r3, r6, lsl r6
    7f34:	b	fed45f24 <strvisx@@Base+0xfed321b0>
    7f38:	strtmi	r9, [fp], -r3, lsl #18
    7f3c:	strls	r2, [r1], -r9, lsl #4
    7f40:	strtmi	r9, [r0], -r0
    7f44:			; <UNDEFINED> instruction: 0xf920f7ff
    7f48:	strtmi	r9, [r0], -r3, lsl #18
    7f4c:			; <UNDEFINED> instruction: 0xff8ef7fe
    7f50:	andlt	fp, r4, r8, lsl #18
    7f54:			; <UNDEFINED> instruction: 0xf002bd70
    7f58:	strtmi	pc, [r9], -r9, lsl #20
    7f5c:	stmdami	r4, {r1, r9, sl, lr}
    7f60:			; <UNDEFINED> instruction: 0xf0044478
    7f64:			; <UNDEFINED> instruction: 0xf04ffe7b
    7f68:	strdlt	r3, [r4], -pc	; <UNPREDICTABLE>
    7f6c:	svclt	0x0000bd70
    7f70:	andeq	lr, r0, ip, lsr #24
    7f74:	addlt	fp, r2, r0, ror r5
    7f78:	strmi	r6, [r4], -r5, asr #18
    7f7c:	ldrmi	r9, [lr], -r0, lsl #4
    7f80:	strmi	r1, [fp], -sl, ror #24
    7f84:	strtmi	r9, [r9], -r1, lsl #12
    7f88:	andcs	r6, sl, #-2147483632	; 0x80000010
    7f8c:			; <UNDEFINED> instruction: 0xf8fcf7ff
    7f90:	strtmi	r4, [r0], -r9, lsr #12
    7f94:			; <UNDEFINED> instruction: 0xff6af7fe
    7f98:	andlt	fp, r2, r8, lsl #18
    7f9c:			; <UNDEFINED> instruction: 0xf002bd70
    7fa0:	strmi	pc, [r1], -r5, ror #19
    7fa4:	ldrbtmi	r4, [r8], #-2051	; 0xfffff7fd
    7fa8:	cdp2	0, 5, cr15, cr8, cr4, {0}
    7fac:	rscscc	pc, pc, pc, asr #32
    7fb0:	ldcllt	0, cr11, [r0, #-8]!
    7fb4:	andeq	lr, r0, r6, lsl #24
    7fb8:	blmi	18da948 <strvisx@@Base+0x18c6bd4>
    7fbc:	ldrblt	r4, [r0, #1146]!	; 0x47a
    7fc0:	ldmpl	r3, {r1, r2, r9, sl, lr}^
    7fc4:	stmdbvs	r7, {r0, r2, r4, r7, ip, sp, pc}^
    7fc8:	ldmdavs	fp, {r3, r9, sl, lr}
    7fcc:			; <UNDEFINED> instruction: 0xf04f9313
    7fd0:	strmi	r0, [sp], -r0, lsl #6
    7fd4:	cmnvs	r3, fp, ror ip
    7fd8:			; <UNDEFINED> instruction: 0xf7fa9705
    7fdc:	ldrtmi	lr, [r9], -r2, ror #20
    7fe0:	andscs	r4, r0, #45088768	; 0x2b00000
    7fe4:	ldrtmi	r9, [r0], -r0
    7fe8:			; <UNDEFINED> instruction: 0xffc2f7fe
    7fec:			; <UNDEFINED> instruction: 0xf8dcf003
    7ff0:	rsbsle	r2, lr, r0, lsl #16
    7ff4:	andcs	r4, r0, #4, 12	; 0x400000
    7ff8:			; <UNDEFINED> instruction: 0x46214630
    7ffc:	mcr2	7, 3, pc, cr4, cr14, {7}	; <UNPREDICTABLE>
    8000:	tsteq	pc, sp, lsl #2	; <UNPREDICTABLE>
    8004:			; <UNDEFINED> instruction: 0xf0034620
    8008:	stmdacs	r0, {r0, r3, r4, r5, r6, r8, sl, fp, ip, sp, lr, pc}
    800c:	stmdbge	r5, {r0, r5, r6, r8, ip, lr, pc}
    8010:			; <UNDEFINED> instruction: 0xf0034620
    8014:	stmdacs	r0, {r0, r3, r6, r8, sl, fp, ip, sp, lr, pc}
    8018:	stmdbls	r5, {r0, r1, r3, r4, r6, r8, ip, lr, pc}
    801c:	cmnle	r3, pc, lsl #5
    8020:	mulcs	pc, sp, r8	; <UNPREDICTABLE>
    8024:	eorsle	r2, r5, r5, ror #20
    8028:	cmnle	sl, r8, ror #20
    802c:	strtmi	sl, [r0], -r4, lsl #18
    8030:	ldc2	0, cr15, [sl, #-12]!
    8034:	stmdacs	r0, {r1, r9, sl, lr}
    8038:	stmdbls	r4, {r3, r5, r6, r8, ip, lr, pc}
    803c:	cmnle	r1, r1, lsl #18
    8040:	strtmi	sl, [r0], -r6, lsl #18
    8044:	cdp2	0, 14, cr15, cr2, cr3, {0}
    8048:	teqle	r7, r0, lsl #16
    804c:	stmdbge	r7, {r1, r9, sl, lr}
    8050:			; <UNDEFINED> instruction: 0xf0034620
    8054:	stmdacs	r0, {r0, r1, r3, r4, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    8058:	stmdbge	r8, {r4, r5, r8, ip, lr, pc}
    805c:			; <UNDEFINED> instruction: 0xf0024620
    8060:	bllt	16462a4 <strvisx@@Base+0x1632530>
    8064:			; <UNDEFINED> instruction: 0x46294839
    8068:	bls	1aec98 <strvisx@@Base+0x19af24>
    806c:			; <UNDEFINED> instruction: 0xf0044478
    8070:	stmdals	r7, {r0, r1, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    8074:	stmib	r0, {r1, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    8078:			; <UNDEFINED> instruction: 0xf0034620
    807c:	stmdals	r6, {r0, r1, r5, r8, fp, ip, sp, lr, pc}
    8080:	blmi	c5a954 <strvisx@@Base+0xc46be0>
    8084:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    8088:	blls	4e20f8 <strvisx@@Base+0x4ce384>
    808c:	teqle	r7, sl, asr r0
    8090:	ldcllt	0, cr11, [r0, #84]!	; 0x54
    8094:	strtmi	sl, [r0], -r8, lsl #18
    8098:	stc2	0, cr15, [r6, #-12]
    809c:	stmdacs	r0, {r0, r2, r9, sl, lr}
    80a0:	stmdals	r8, {r2, r6, r8, ip, lr, pc}
    80a4:			; <UNDEFINED> instruction: 0xf962f002
    80a8:	stmdami	sl!, {r0, r9, sl, lr}
    80ac:			; <UNDEFINED> instruction: 0xf0044478
    80b0:			; <UNDEFINED> instruction: 0x4620fdd5
    80b4:			; <UNDEFINED> instruction: 0xf906f003
    80b8:	strb	r4, [r1, r8, lsr #12]!
    80bc:	cdp2	0, 13, cr15, cr8, cr2, {0}
    80c0:	ldrbtmi	r4, [fp], #-2853	; 0xfffff4db
    80c4:			; <UNDEFINED> instruction: 0x01a4f103
    80c8:	stmdami	r4!, {r1, r9, sl, lr}
    80cc:			; <UNDEFINED> instruction: 0xf0044478
    80d0:			; <UNDEFINED> instruction: 0xf002fb09
    80d4:	blmi	8c7c10 <strvisx@@Base+0x8b3e9c>
    80d8:			; <UNDEFINED> instruction: 0xf103447b
    80dc:	strmi	r0, [r2], -r4, lsr #3
    80e0:	ldrbtmi	r4, [r8], #-2080	; 0xfffff7e0
    80e4:	blx	fffc40fc <strvisx@@Base+0xfffb0388>
    80e8:			; <UNDEFINED> instruction: 0x463a481f
    80ec:			; <UNDEFINED> instruction: 0xf0044478
    80f0:	ldmdbmi	lr, {r0, r3, r4, r5, r6, r7, r9, fp, ip, sp, lr, pc}
    80f4:	ldrbtmi	r4, [r9], #-2078	; 0xfffff7e2
    80f8:			; <UNDEFINED> instruction: 0x31a44478
    80fc:	blx	ffcc4114 <strvisx@@Base+0xffcb03a0>
    8100:	b	ff2c60f0 <strvisx@@Base+0xff2b237c>
    8104:	ldrbtmi	r4, [r8], #-2075	; 0xfffff7e5
    8108:	blx	ffb44120 <strvisx@@Base+0xffb303ac>
    810c:	cdp2	0, 11, cr15, cr0, cr2, {0}
    8110:	ldrbtmi	r4, [fp], #-2841	; 0xfffff4e7
    8114:			; <UNDEFINED> instruction: 0x01a4f103
    8118:	ldmdami	r8, {r1, r9, sl, lr}
    811c:			; <UNDEFINED> instruction: 0xf0044478
    8120:	ldmdami	r7, {r0, r5, r6, r7, r9, fp, ip, sp, lr, pc}
    8124:	ldrbtmi	r2, [r8], #-360	; 0xfffffe98
    8128:	blx	ff744140 <strvisx@@Base+0xff7303cc>
    812c:	cdp2	0, 10, cr15, cr0, cr2, {0}
    8130:	ldrbtmi	r4, [fp], #-2836	; 0xfffff4ec
    8134:			; <UNDEFINED> instruction: 0x01a4f103
    8138:	ldmdami	r3, {r1, r9, sl, lr}
    813c:			; <UNDEFINED> instruction: 0xf0044478
    8140:	svclt	0x0000fad1
    8144:	andeq	r1, r2, r4, asr #26
    8148:	andeq	r0, r0, r0, asr #5
    814c:	andeq	lr, r0, r4, lsr #23
    8150:	andeq	r1, r2, ip, ror ip
    8154:	andeq	lr, r0, r8, lsl fp
    8158:	andeq	pc, r0, sl, ror r5	; <UNPREDICTABLE>
    815c:	andeq	lr, r0, r8, ror #10
    8160:	andeq	pc, r0, r4, ror #10
    8164:	andeq	lr, r0, r2, asr r5
    8168:	andeq	lr, r0, r8, lsl #13
    816c:	andeq	pc, r0, r6, asr #10
    8170:	andeq	lr, r0, r0, lsl #12
    8174:	ldrdeq	lr, [r0], -sl
    8178:	andeq	pc, r0, sl, lsr #10
    817c:	andeq	lr, r0, r8, lsl r5
    8180:	andeq	lr, r0, lr, lsl #18
    8184:	andeq	pc, r0, sl, lsl #10
    8188:	strdeq	lr, [r0], -r8
    818c:	ldrbmi	lr, [r0, sp, lsr #18]!
    8190:	stmibvs	r0, {r1, r2, r9, sl, lr}
    8194:	ldrmi	r4, [r0], pc, lsl #12
    8198:	svclt	0x00142b00
    819c:			; <UNDEFINED> instruction: 0xf0002300
    81a0:	blcs	8dac <el_source@plt+0x6470>
    81a4:			; <UNDEFINED> instruction: 0xf002d150
    81a8:			; <UNDEFINED> instruction: 0x4604ffff
    81ac:			; <UNDEFINED> instruction: 0xf0002800
    81b0:			; <UNDEFINED> instruction: 0xf8d6808a
    81b4:	tstcs	r2, r4, lsl r0
    81b8:	movweq	pc, #4361	; 0x1109	; <UNPREDICTABLE>
    81bc:			; <UNDEFINED> instruction: 0xf0046173
    81c0:	pkhbtmi	pc, r2, r1, lsl #16	; <UNPREDICTABLE>
    81c4:	cmnle	r6, r0, lsl #16
    81c8:	strtmi	r4, [r0], -r9, asr #12
    81cc:			; <UNDEFINED> instruction: 0xffaef003
    81d0:	stmdacs	r0, {r1, r7, r9, sl, lr}
    81d4:			; <UNDEFINED> instruction: 0x4639d15f
    81d8:			; <UNDEFINED> instruction: 0xf0044620
    81dc:			; <UNDEFINED> instruction: 0x4605f95b
    81e0:	cmnle	r4, r0, lsl #16
    81e4:	strtmi	r4, [r0], -r1, asr #12
    81e8:			; <UNDEFINED> instruction: 0xf954f004
    81ec:	stmdacs	r0, {r0, r2, r9, sl, lr}
    81f0:			; <UNDEFINED> instruction: 0x4621d15d
    81f4:			; <UNDEFINED> instruction: 0xf7fe4630
    81f8:			; <UNDEFINED> instruction: 0xf1bafce7
    81fc:	tstle	r2, r0, lsl #30
    8200:	ldrbtmi	r4, [r9], #-2356	; 0xfffff6cc
    8204:			; <UNDEFINED> instruction: 0x46434834
    8208:	ldrbtmi	r4, [r8], #-1594	; 0xfffff9c6
    820c:	cdp2	0, 1, cr15, cr4, cr4, {0}
    8210:			; <UNDEFINED> instruction: 0xf0034620
    8214:			; <UNDEFINED> instruction: 0x4649f857
    8218:			; <UNDEFINED> instruction: 0xf7fe4630
    821c:	stmdblt	r8!, {r0, r1, r2, r5, r9, sl, fp, ip, sp, lr, pc}
    8220:	pop	{r3, r5, r9, sl, lr}
    8224:	pushmi	{r4, r5, r6, r7, r8, r9, sl, pc}
    8228:			; <UNDEFINED> instruction: 0xe7eb4479
    822c:			; <UNDEFINED> instruction: 0xf89ef002
    8230:	ldrbcc	pc, [pc, #79]!	; 8287 <el_source@plt+0x594b>	; <UNPREDICTABLE>
    8234:	ldrtmi	r4, [r9], -r2, asr #12
    8238:	stmdami	r9!, {r0, r1, r9, sl, lr}
    823c:			; <UNDEFINED> instruction: 0xf0044478
    8240:	strtmi	pc, [r8], -sp, lsl #26
    8244:			; <UNDEFINED> instruction: 0x87f0e8bd
    8248:			; <UNDEFINED> instruction: 0xffaef002
    824c:	stmdacs	r0, {r2, r9, sl, lr}
    8250:			; <UNDEFINED> instruction: 0xf8d6d039
    8254:	biccs	r9, r8, r4, lsl r0
    8258:	movweq	pc, #4361	; 0x1109	; <UNPREDICTABLE>
    825c:			; <UNDEFINED> instruction: 0xf0036173
    8260:	stmdblt	r8!, {r0, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
    8264:	strtmi	r4, [r0], -r9, asr #12
    8268:			; <UNDEFINED> instruction: 0xff60f003
    826c:	ldmdbmi	sp, {r6, r8, fp, ip, sp, pc}
    8270:			; <UNDEFINED> instruction: 0xf04f4620
    8274:	ldrbtmi	r0, [r9], #-2561	; 0xfffff5ff
    8278:			; <UNDEFINED> instruction: 0xf90cf004
    827c:	adcle	r2, sl, r0, lsl #16
    8280:	ldc2l	0, cr15, [r6, #8]!
    8284:	ldrbtmi	r4, [fp], #-2840	; 0xfffff4e8
    8288:	lslseq	pc, r3, #2	; <UNPREDICTABLE>
    828c:	ldmdami	r7, {r1, r9, sl, lr}
    8290:			; <UNDEFINED> instruction: 0xf0044478
    8294:	ldrbmi	pc, [r0], -r7, lsr #20	; <UNPREDICTABLE>
    8298:	stc2l	0, cr15, [sl, #8]!
    829c:	ldrbtmi	r4, [fp], #-2836	; 0xfffff4ec
    82a0:	lslseq	pc, r3, #2	; <UNPREDICTABLE>
    82a4:	ldmdami	r3, {r1, r9, sl, lr}
    82a8:			; <UNDEFINED> instruction: 0xf0044478
    82ac:			; <UNDEFINED> instruction: 0x4628fa1b
    82b0:	ldc2l	0, cr15, [lr, #8]
    82b4:	ldrbtmi	r4, [fp], #-2832	; 0xfffff4f0
    82b8:	lslseq	pc, r3, #2	; <UNPREDICTABLE>
    82bc:	stmdami	pc, {r1, r9, sl, lr}	; <UNPREDICTABLE>
    82c0:			; <UNDEFINED> instruction: 0xf0044478
    82c4:	stmdbmi	lr, {r0, r1, r2, r3, r9, fp, ip, sp, lr, pc}
    82c8:	ldrbtmi	r4, [r9], #-2062	; 0xfffff7f2
    82cc:	rorscc	r4, r8, r4
    82d0:	blx	2442e8 <strvisx@@Base+0x230574>
    82d4:	andeq	lr, r0, r2, lsr sl
    82d8:	andeq	lr, r0, sl, lsr sl
    82dc:	andeq	lr, r0, r8, ror #12
    82e0:	andeq	lr, r0, r8, lsr #20
    82e4:	andeq	lr, r0, sl, lsl r6
    82e8:			; <UNDEFINED> instruction: 0x0000f3b6
    82ec:	andeq	lr, r0, r4, lsr #7
    82f0:	muleq	r0, lr, r3
    82f4:	andeq	lr, r0, ip, lsl #7
    82f8:	andeq	pc, r0, r6, lsl #7
    82fc:	andeq	lr, r0, r4, ror r3
    8300:	andeq	pc, r0, r2, ror r3	; <UNPREDICTABLE>
    8304:	andeq	lr, r0, ip, lsr #8
    8308:	mvnsmi	lr, #737280	; 0xb4000
    830c:	ldreq	r6, [fp, -r3, lsl #19]
    8310:	strmi	sp, [r5], -pc, asr #10
    8314:	ldrmi	r4, [r7], -lr, lsl #12
    8318:			; <UNDEFINED> instruction: 0xff46f002
    831c:	stmdacs	r0, {r0, r7, r9, sl, lr}
    8320:			; <UNDEFINED> instruction: 0xf8d5d059
    8324:	biccs	r8, r8, r4, lsl r0
    8328:	movweq	pc, #4360	; 0x1108	; <UNPREDICTABLE>
    832c:			; <UNDEFINED> instruction: 0xf003616b
    8330:			; <UNDEFINED> instruction: 0x4604ff59
    8334:	cmple	r3, r0, lsl #16
    8338:	strbmi	r4, [r8], -r1, asr #12
    833c:	cdp2	0, 15, cr15, cr6, cr3, {0}
    8340:	stmdacs	r0, {r2, r9, sl, lr}
    8344:	stmdbmi	r7!, {r2, r3, r4, r5, r8, ip, lr, pc}
    8348:	ldrbtmi	r4, [r9], #-1608	; 0xfffff9b8
    834c:			; <UNDEFINED> instruction: 0xf8a2f004
    8350:	bllt	fea19b68 <strvisx@@Base+0xfea05df4>
    8354:			; <UNDEFINED> instruction: 0x46484631
    8358:			; <UNDEFINED> instruction: 0xf89cf004
    835c:	bllt	1e19b74 <strvisx@@Base+0x1e05e00>
    8360:			; <UNDEFINED> instruction: 0x46484639
    8364:			; <UNDEFINED> instruction: 0xf896f004
    8368:	bllt	1219b80 <strvisx@@Base+0x1205e0c>
    836c:	strtmi	r4, [r8], -r9, asr #12
    8370:	stc2	7, cr15, [sl], #-1016	; 0xfffffc08
    8374:			; <UNDEFINED> instruction: 0x4631481c
    8378:	ldrbtmi	r4, [r8], #-1594	; 0xfffff9c6
    837c:	ldc2l	0, cr15, [ip, #-16]
    8380:			; <UNDEFINED> instruction: 0xf0024648
    8384:			; <UNDEFINED> instruction: 0x4641ff9f
    8388:			; <UNDEFINED> instruction: 0xf7fe4628
    838c:	ldmdblt	r0, {r0, r1, r2, r3, r5, r6, r8, sl, fp, ip, sp, lr, pc}
    8390:	pop	{r5, r9, sl, lr}
    8394:			; <UNDEFINED> instruction: 0xf00183f8
    8398:			; <UNDEFINED> instruction: 0xf04fffe9
    839c:			; <UNDEFINED> instruction: 0x463a34ff
    83a0:			; <UNDEFINED> instruction: 0x46034631
    83a4:	ldrbtmi	r4, [r8], #-2065	; 0xfffff7ef
    83a8:	mrrc2	0, 0, pc, r8, cr4	; <UNPREDICTABLE>
    83ac:	pop	{r5, r9, sl, lr}
    83b0:	stmdami	pc, {r3, r4, r5, r6, r7, r8, r9, pc}	; <UNPREDICTABLE>
    83b4:	ldrbtcc	pc, [pc], #79	; 83bc <el_source@plt+0x5a80>	; <UNPREDICTABLE>
    83b8:			; <UNDEFINED> instruction: 0xf0044478
    83bc:	strb	pc, [r7, pc, asr #24]!	; <UNPREDICTABLE>
    83c0:			; <UNDEFINED> instruction: 0xf0024620
    83c4:	stmdbmi	fp, {r0, r2, r4, r6, r8, sl, fp, ip, sp, lr, pc}
    83c8:			; <UNDEFINED> instruction: 0x31bc4479
    83cc:	stmdami	sl, {r1, r9, sl, lr}
    83d0:			; <UNDEFINED> instruction: 0xf0044478
    83d4:	stmdbmi	r9, {r0, r1, r2, r7, r8, fp, ip, sp, lr, pc}
    83d8:	ldrbtmi	r4, [r9], #-2057	; 0xfffff7f7
    83dc:			; <UNDEFINED> instruction: 0x31bc4478
    83e0:			; <UNDEFINED> instruction: 0xf980f004
    83e4:	andeq	lr, r0, lr, lsl #11
    83e8:	andeq	lr, r0, sl, asr #18
    83ec:	andeq	lr, r0, lr, asr #18
    83f0:	ldrdeq	lr, [r0], -r4
    83f4:	andeq	pc, r0, r4, ror r2	; <UNPREDICTABLE>
    83f8:	andeq	lr, r0, r4, ror #4
    83fc:	andeq	pc, r0, r2, ror #4
    8400:	andeq	lr, r0, ip, lsl r3
    8404:	mvnsmi	lr, #737280	; 0xb4000
    8408:	blcs	a281c <strvisx@@Base+0x8eaa8>
    840c:	strmi	sp, [r5], -r6, asr #18
    8410:	ldrmi	r4, [r7], -lr, lsl #12
    8414:	cdp2	0, 12, cr15, cr8, cr2, {0}
    8418:	stmdacs	r0, {r0, r7, r9, sl, lr}
    841c:			; <UNDEFINED> instruction: 0xf8d5d052
    8420:	tstcs	r4, r4, lsl r0
    8424:	movweq	pc, #4360	; 0x1108	; <UNPREDICTABLE>
    8428:			; <UNDEFINED> instruction: 0xf003616b
    842c:			; <UNDEFINED> instruction: 0x4604fedb
    8430:	strbmi	fp, [r1], -r0, ror #23
    8434:			; <UNDEFINED> instruction: 0xf0034648
    8438:			; <UNDEFINED> instruction: 0x4604fe79
    843c:			; <UNDEFINED> instruction: 0x4631bbb0
    8440:			; <UNDEFINED> instruction: 0xf0044648
    8444:	strmi	pc, [r4], -r7, lsr #16
    8448:	ldrtmi	fp, [r9], -r0, lsl #23
    844c:			; <UNDEFINED> instruction: 0xf0044648
    8450:	strmi	pc, [r4], -r1, lsr #16
    8454:			; <UNDEFINED> instruction: 0x4649bb50
    8458:			; <UNDEFINED> instruction: 0xf7fe4628
    845c:	ldmdami	sp, {r0, r2, r4, r5, r7, r8, r9, fp, ip, sp, lr, pc}
    8460:			; <UNDEFINED> instruction: 0x463a4631
    8464:			; <UNDEFINED> instruction: 0xf0044478
    8468:	strbmi	pc, [r8], -r7, ror #25	; <UNPREDICTABLE>
    846c:			; <UNDEFINED> instruction: 0xff2af002
    8470:	strtmi	r4, [r8], -r1, asr #12
    8474:	ldc2l	7, cr15, [sl], #1016	; 0x3f8
    8478:			; <UNDEFINED> instruction: 0x4620b910
    847c:	mvnshi	lr, #12386304	; 0xbd0000
    8480:			; <UNDEFINED> instruction: 0xff74f001
    8484:	ldrbtcc	pc, [pc], #79	; 848c <el_source@plt+0x5b50>	; <UNPREDICTABLE>
    8488:			; <UNDEFINED> instruction: 0x4631463a
    848c:	ldmdami	r2, {r0, r1, r9, sl, lr}
    8490:			; <UNDEFINED> instruction: 0xf0044478
    8494:	strtmi	pc, [r0], -r3, ror #23
    8498:	mvnshi	lr, #12386304	; 0xbd0000
    849c:	strcs	r4, [r8], #-2063	; 0xfffff7f1
    84a0:			; <UNDEFINED> instruction: 0xf0044478
    84a4:			; <UNDEFINED> instruction: 0x4620fbdb
    84a8:	mvnshi	lr, #12386304	; 0xbd0000
    84ac:			; <UNDEFINED> instruction: 0xf0024620
    84b0:	blmi	307834 <strvisx@@Base+0x2f3ac0>
    84b4:			; <UNDEFINED> instruction: 0xf103447b
    84b8:	strmi	r0, [r2], -r8, asr #3
    84bc:	ldrbtmi	r4, [r8], #-2057	; 0xfffff7f7
    84c0:			; <UNDEFINED> instruction: 0xf910f004
    84c4:	stmdami	r9, {r3, r8, fp, lr}
    84c8:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    84cc:			; <UNDEFINED> instruction: 0xf00431c8
    84d0:	svclt	0x0000f909
    84d4:	andeq	lr, r0, r8, ror #17
    84d8:	andeq	lr, r0, r8, ror #17
    84dc:	andeq	lr, r0, r8, ror r8
    84e0:	andeq	pc, r0, r8, lsl #3
    84e4:	andeq	lr, r0, r6, ror r1
    84e8:	andeq	pc, r0, r4, ror r1	; <UNPREDICTABLE>
    84ec:	andeq	lr, r0, lr, lsr #4
    84f0:	mvnsmi	lr, #737280	; 0xb4000
    84f4:	ldrbeq	r6, [fp], r3, lsl #19
    84f8:	strmi	sp, [r6], -r3, asr #10
    84fc:	ldrmi	r4, [r1], r8, lsl #13
    8500:	cdp2	0, 5, cr15, cr2, cr2, {0}
    8504:	stmdacs	r0, {r0, r2, r9, sl, lr}
    8508:	ldmdbvs	r7!, {r1, r3, r6, ip, lr, pc}^
    850c:	ldfnee	f2, [fp], #-800	; 0xfffffce0
    8510:			; <UNDEFINED> instruction: 0xf0036173
    8514:	strmi	pc, [r4], -r7, ror #28
    8518:			; <UNDEFINED> instruction: 0x4639bbb0
    851c:			; <UNDEFINED> instruction: 0xf0034628
    8520:	strmi	pc, [r4], -r5, lsl #28
    8524:	stmdbmi	r2!, {r7, r8, r9, fp, ip, sp, pc}
    8528:	ldrbtmi	r4, [r9], #-1576	; 0xfffff9d8
    852c:			; <UNDEFINED> instruction: 0xffb2f003
    8530:	bllt	1219d48 <strvisx@@Base+0x1205fd4>
    8534:	strbmi	r4, [r1], -sl, asr #12
    8538:			; <UNDEFINED> instruction: 0xf0034628
    853c:	strmi	pc, [r4], -r9, ror #30
    8540:			; <UNDEFINED> instruction: 0x4629bb10
    8544:			; <UNDEFINED> instruction: 0xf7fe4630
    8548:	ldmdami	sl, {r0, r1, r2, r3, r4, r5, r8, r9, fp, ip, sp, lr, pc}
    854c:	ldrbtmi	r4, [r8], #-1593	; 0xfffff9c7
    8550:	ldc2l	0, cr15, [r2], #-16
    8554:			; <UNDEFINED> instruction: 0xf0024628
    8558:			; <UNDEFINED> instruction: 0x4639feb5
    855c:			; <UNDEFINED> instruction: 0xf7fe4630
    8560:	ldmdblt	r0, {r0, r2, r7, sl, fp, ip, sp, lr, pc}
    8564:	pop	{r5, r9, sl, lr}
    8568:			; <UNDEFINED> instruction: 0xf00183f8
    856c:			; <UNDEFINED> instruction: 0xf04ffeff
    8570:			; <UNDEFINED> instruction: 0x460134ff
    8574:	ldrbtmi	r4, [r8], #-2064	; 0xfffff7f0
    8578:	blx	1c44592 <strvisx@@Base+0x1c3081e>
    857c:	pop	{r5, r9, sl, lr}
    8580:			; <UNDEFINED> instruction: 0xf04f83f8
    8584:			; <UNDEFINED> instruction: 0xe7ed34ff
    8588:			; <UNDEFINED> instruction: 0xf0024620
    858c:	blmi	307758 <strvisx@@Base+0x2f39e4>
    8590:			; <UNDEFINED> instruction: 0xf103447b
    8594:			; <UNDEFINED> instruction: 0x460201d4
    8598:	ldrbtmi	r4, [r8], #-2057	; 0xfffff7f7
    859c:			; <UNDEFINED> instruction: 0xf8a2f004
    85a0:	stmdami	r9, {r3, r8, fp, lr}
    85a4:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    85a8:			; <UNDEFINED> instruction: 0xf00431d4
    85ac:	svclt	0x0000f89b
    85b0:	andeq	lr, r0, r6, asr #7
    85b4:	andeq	lr, r0, r2, asr r8
    85b8:	andeq	lr, r0, lr, asr #16
    85bc:	andeq	pc, r0, ip, lsr #1
    85c0:	muleq	r0, sl, r0
    85c4:	muleq	r0, r8, r0
    85c8:	andeq	lr, r0, r2, asr r1
    85cc:	ldrbmi	lr, [r0, sp, lsr #18]!
    85d0:	bmi	fea19e30 <strvisx@@Base+0xfea060bc>
    85d4:	blmi	fea1a040 <strvisx@@Base+0xfea062cc>
    85d8:	ldrbtmi	r4, [sl], #-1543	; 0xfffff9f9
    85dc:	addlt	r6, r6, r0, lsl #19
    85e0:	ldmdavs	fp, {r0, r1, r4, r6, r7, fp, ip, lr}
    85e4:			; <UNDEFINED> instruction: 0xf04f9305
    85e8:	streq	r0, [r3, r0, lsl #6]
    85ec:	rscshi	pc, r3, r0, asr #2
    85f0:			; <UNDEFINED> instruction: 0x8014f8d7
    85f4:			; <UNDEFINED> instruction: 0xf108460d
    85f8:	cmnvs	fp, r1, lsl #6
    85fc:	ldc2l	0, cr15, [r4, #8]
    8600:	stmdacs	r0, {r1, r7, r9, sl, lr}
    8604:	tsthi	r0, r0	; <UNPREDICTABLE>
    8608:			; <UNDEFINED> instruction: 0xf00321c8
    860c:	strmi	pc, [r4], -fp, ror #27
    8610:			; <UNDEFINED> instruction: 0xf0402800
    8614:			; <UNDEFINED> instruction: 0x464180f2
    8618:			; <UNDEFINED> instruction: 0xf0034650
    861c:	strmi	pc, [r4], -r7, lsl #27
    8620:			; <UNDEFINED> instruction: 0xf0402800
    8624:	ldmibmi	r5, {r1, r3, r5, r6, r7, pc}
    8628:	ldrbtmi	r4, [r9], #-1616	; 0xfffff9b0
    862c:			; <UNDEFINED> instruction: 0xff32f003
    8630:	stmdacs	r0, {r2, r9, sl, lr}
    8634:	rschi	pc, r1, r0, asr #32
    8638:	ldrbmi	r4, [r0], -r9, lsr #12
    863c:			; <UNDEFINED> instruction: 0xff2af003
    8640:	stmdacs	r0, {r2, r9, sl, lr}
    8644:	sbcshi	pc, r9, r0, asr #32
    8648:			; <UNDEFINED> instruction: 0x46384651
    864c:	blx	fef4664c <strvisx@@Base+0xfef328d8>
    8650:			; <UNDEFINED> instruction: 0xf0024650
    8654:			; <UNDEFINED> instruction: 0xf002fe37
    8658:	strmi	pc, [r5], -r7, lsr #27
    865c:			; <UNDEFINED> instruction: 0xf0002800
    8660:	ldrtmi	r8, [r8], -sl, ror #1
    8664:	strtmi	r4, [r2], -r9, lsr #12
    8668:	blx	bc666a <strvisx@@Base+0xbb28f6>
    866c:	tsteq	r3, sp, lsl #2	; <UNPREDICTABLE>
    8670:			; <UNDEFINED> instruction: 0xf0034628
    8674:	stmdacs	r0, {r0, r1, r6, r9, fp, ip, sp, lr, pc}
    8678:	sbchi	pc, fp, r0, asr #32
    867c:	strtmi	sl, [r8], -r1, lsl #18
    8680:	blx	4c4694 <strvisx@@Base+0x4b0920>
    8684:			; <UNDEFINED> instruction: 0xf0402800
    8688:	ldmdami	sp!, {r2, r6, r7, pc}^
    868c:	mulne	r3, sp, r8
    8690:	ldrbtmi	r9, [r8], #-2561	; 0xfffff5ff
    8694:	blx	ff4446ae <strvisx@@Base+0xff43093a>
    8698:	strmi	r9, [r8, #2305]	; 0x901
    869c:	sbcshi	pc, r2, r0, asr #32
    86a0:	mulcs	r3, sp, r8
    86a4:	rsbsle	r2, r7, r5, ror #20
    86a8:			; <UNDEFINED> instruction: 0xf0402ac9
    86ac:	subscs	r8, r8, #210	; 0xd2
    86b0:	ldrtmi	r2, [r0], -r0, lsl #2
    86b4:	mcr	7, 2, pc, cr14, cr9, {7}	; <UNPREDICTABLE>
    86b8:			; <UNDEFINED> instruction: 0x46284631
    86bc:			; <UNDEFINED> instruction: 0xf9def003
    86c0:	stmdacs	r0, {r2, r9, sl, lr}
    86c4:	addhi	pc, lr, r0, asr #32
    86c8:	tsteq	r8, r6, lsl #2	; <UNPREDICTABLE>
    86cc:			; <UNDEFINED> instruction: 0xf0034628
    86d0:			; <UNDEFINED> instruction: 0x4604f9d5
    86d4:			; <UNDEFINED> instruction: 0xf0402800
    86d8:			; <UNDEFINED> instruction: 0xf1068085
    86dc:			; <UNDEFINED> instruction: 0x46280110
    86e0:			; <UNDEFINED> instruction: 0xf9ccf003
    86e4:	stmdacs	r0, {r2, r9, sl, lr}
    86e8:			; <UNDEFINED> instruction: 0xf106d17c
    86ec:			; <UNDEFINED> instruction: 0x46280118
    86f0:			; <UNDEFINED> instruction: 0xf9c4f003
    86f4:	stmdacs	r0, {r2, r9, sl, lr}
    86f8:			; <UNDEFINED> instruction: 0xf106d174
    86fc:	strtmi	r0, [r8], -r0, lsr #2
    8700:			; <UNDEFINED> instruction: 0xf9bcf003
    8704:	stmdacs	r0, {r2, r9, sl, lr}
    8708:			; <UNDEFINED> instruction: 0xf106d16c
    870c:	strtmi	r0, [r8], -r8, lsr #2
    8710:			; <UNDEFINED> instruction: 0xf9b4f003
    8714:	stmdacs	r0, {r2, r9, sl, lr}
    8718:			; <UNDEFINED> instruction: 0xf106d164
    871c:			; <UNDEFINED> instruction: 0x46280130
    8720:			; <UNDEFINED> instruction: 0xf9acf003
    8724:	stmdacs	r0, {r2, r9, sl, lr}
    8728:			; <UNDEFINED> instruction: 0xf106d15c
    872c:			; <UNDEFINED> instruction: 0x46280138
    8730:			; <UNDEFINED> instruction: 0xf9a4f003
    8734:	stmdacs	r0, {r2, r9, sl, lr}
    8738:			; <UNDEFINED> instruction: 0xf106d154
    873c:	strtmi	r0, [r8], -r0, asr #2
    8740:			; <UNDEFINED> instruction: 0xf99cf003
    8744:	stmdacs	r0, {r2, r9, sl, lr}
    8748:	stmdbge	r2, {r2, r3, r6, r8, ip, lr, pc}
    874c:			; <UNDEFINED> instruction: 0xf0034628
    8750:			; <UNDEFINED> instruction: 0x4604f995
    8754:	cmple	r5, r0, lsl #16
    8758:	cmpeq	r0, r6, lsl #2	; <UNPREDICTABLE>
    875c:			; <UNDEFINED> instruction: 0xf0034628
    8760:	strmi	pc, [r4], -sp, lsl #19
    8764:	teqle	sp, r0, lsl #16
    8768:	strtmi	r9, [r8], -r2, lsl #22
    876c:	andeq	pc, r1, #3
    8770:	movweq	pc, #8195	; 0x2003	; <UNPREDICTABLE>
    8774:	ldrtvs	r4, [r3], #787	; 0x313
    8778:	ldrbtvs	r1, [r3], #2003	; 0x7d3
    877c:	stc2	0, cr15, [r2, #8]!
    8780:	blmi	f5b088 <strvisx@@Base+0xf47314>
    8784:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    8788:	blls	1627f8 <strvisx@@Base+0x14ea84>
    878c:	cmple	lr, sl, asr r0
    8790:	andlt	r4, r6, r0, lsr #12
    8794:			; <UNDEFINED> instruction: 0x87f0e8bd
    8798:	strtmi	sl, [r8], -r2, lsl #18
    879c:			; <UNDEFINED> instruction: 0xf984f003
    87a0:	cmple	fp, r0, lsl #16
    87a4:			; <UNDEFINED> instruction: 0xf1b99802
    87a8:	andle	r0, ip, r0, lsl #30
    87ac:	ldc2l	0, cr15, [lr, #4]
    87b0:	ldmdami	r5!, {r0, r9, sl, lr}
    87b4:			; <UNDEFINED> instruction: 0xf0044478
    87b8:	strtmi	pc, [r8], -fp, ror #21
    87bc:	ldrbtcc	pc, [pc], #79	; 87c4 <el_source@plt+0x5e88>	; <UNPREDICTABLE>
    87c0:	stc2	0, cr15, [r0, #8]
    87c4:			; <UNDEFINED> instruction: 0xf001e7dc
    87c8:			; <UNDEFINED> instruction: 0x4601fdd1
    87cc:	ldrbtmi	r4, [r8], #-2095	; 0xfffff7d1
    87d0:	blx	11447e8 <strvisx@@Base+0x1130a74>
    87d4:	stmdami	lr!, {r0, r4, r5, r6, r7, r8, r9, sl, sp, lr, pc}
    87d8:	ldrbtcc	pc, [pc], #79	; 87e0 <el_source@plt+0x5ea4>	; <UNPREDICTABLE>
    87dc:			; <UNDEFINED> instruction: 0xf0044478
    87e0:			; <UNDEFINED> instruction: 0xe7cdfa3d
    87e4:			; <UNDEFINED> instruction: 0xf0024620
    87e8:	stmdbmi	sl!, {r0, r1, r6, r8, r9, fp, ip, sp, lr, pc}
    87ec:	mvncc	r4, r9, ror r4
    87f0:	stmdami	r9!, {r1, r9, sl, lr}
    87f4:			; <UNDEFINED> instruction: 0xf0034478
    87f8:	qsub16mi	pc, r0, r5	; <UNPREDICTABLE>
    87fc:	blx	e4480e <strvisx@@Base+0xe30a9a>
    8800:	ldrbtmi	r4, [fp], #-2854	; 0xfffff4da
    8804:	mvneq	pc, r3, lsl #2
    8808:	stmdami	r5!, {r1, r9, sl, lr}
    880c:			; <UNDEFINED> instruction: 0xf0034478
    8810:			; <UNDEFINED> instruction: 0xf002ff69
    8814:	blmi	9074d0 <strvisx@@Base+0x8f375c>
    8818:			; <UNDEFINED> instruction: 0xf103447b
    881c:	strmi	r0, [r2], -ip, ror #3
    8820:	ldrbtmi	r4, [r8], #-2081	; 0xfffff7df
    8824:			; <UNDEFINED> instruction: 0xff5ef003
    8828:	stmdami	r1!, {r5, r8, fp, lr}
    882c:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    8830:			; <UNDEFINED> instruction: 0xf00331e0
    8834:	ldmdbmi	pc, {r0, r1, r2, r4, r6, r8, r9, sl, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
    8838:	ldrbtmi	r4, [r9], #-2079	; 0xfffff7e1
    883c:	mvncc	r4, r8, ror r4
    8840:			; <UNDEFINED> instruction: 0xff50f003
    8844:			; <UNDEFINED> instruction: 0x4642481d
    8848:			; <UNDEFINED> instruction: 0xf0034478
    884c:			; <UNDEFINED> instruction: 0xf7f9ff4b
    8850:	ldmdami	fp, {r2, r5, r8, r9, sl, fp, sp, lr, pc}
    8854:	ldrbtmi	r2, [r8], #-457	; 0xfffffe37
    8858:			; <UNDEFINED> instruction: 0xff44f003
    885c:	blx	24486e <strvisx@@Base+0x230afa>
    8860:	ldrbtmi	r4, [fp], #-2840	; 0xfffff4e8
    8864:	mvneq	pc, r3, lsl #2
    8868:	ldmdami	r7, {r1, r9, sl, lr}
    886c:			; <UNDEFINED> instruction: 0xf0034478
    8870:	svclt	0x0000ff39
    8874:	andeq	r1, r2, r6, lsr #14
    8878:	andeq	r0, r0, r0, asr #5
    887c:	andeq	lr, r0, r2, lsl #5
    8880:	andeq	lr, r0, r2, lsl #15
    8884:	andeq	r1, r2, ip, ror r5
    8888:	andeq	lr, r0, r4, lsl #13
    888c:	andeq	lr, r0, sl, ror #12
    8890:	andeq	lr, r0, r0, lsl #12
    8894:	andeq	lr, r0, r0, asr lr
    8898:	andeq	sp, r0, r0, asr #28
    889c:	andeq	lr, r0, sl, lsr lr
    88a0:	andeq	sp, r0, r8, lsr #28
    88a4:	andeq	lr, r0, r4, lsr #28
    88a8:	andeq	sp, r0, r2, lsl lr
    88ac:	andeq	lr, r0, r0, lsl lr
    88b0:	andeq	sp, r0, sl, asr #29
    88b4:	andeq	lr, r0, r2, lsl #28
    88b8:			; <UNDEFINED> instruction: 0x0000debc
    88bc:	andeq	sp, r0, ip, lsr #30
    88c0:	strdeq	lr, [r0], -sl
    88c4:	ldrdeq	lr, [r0], -sl
    88c8:	andeq	sp, r0, r8, asr #27
    88cc:	mvnsmi	lr, #737280	; 0xb4000
    88d0:	ldreq	r6, [fp], r3, lsl #19
    88d4:			; <UNDEFINED> instruction: 0xf8d0d546
    88d8:			; <UNDEFINED> instruction: 0x46058014
    88dc:	ldrmi	r4, [r7], -lr, lsl #12
    88e0:	movweq	pc, #4360	; 0x1108	; <UNPREDICTABLE>
    88e4:			; <UNDEFINED> instruction: 0xf0026143
    88e8:	pkhtbmi	pc, r1, pc, asr #24	; <UNPREDICTABLE>
    88ec:	suble	r2, ip, r0, lsl #16
    88f0:			; <UNDEFINED> instruction: 0xf00321c8
    88f4:			; <UNDEFINED> instruction: 0x4604fc77
    88f8:			; <UNDEFINED> instruction: 0x4641bbd8
    88fc:			; <UNDEFINED> instruction: 0xf0034648
    8900:			; <UNDEFINED> instruction: 0x4604fc15
    8904:	stmdbmi	r5!, {r3, r5, r7, r8, r9, fp, ip, sp, pc}
    8908:	ldrbtmi	r4, [r9], #-1608	; 0xfffff9b8
    890c:	stc2l	0, cr15, [r2, #12]
    8910:	bllt	1c1a128 <strvisx@@Base+0x1c063b4>
    8914:			; <UNDEFINED> instruction: 0x46484631
    8918:	ldc2	0, cr15, [ip, #12]!
    891c:	bllt	101a134 <strvisx@@Base+0x10063c0>
    8920:			; <UNDEFINED> instruction: 0x46484639
    8924:	ldc2l	0, cr15, [lr], {1}
    8928:	bllt	41a140 <strvisx@@Base+0x4063cc>
    892c:	strtmi	r4, [r8], -r9, asr #12
    8930:			; <UNDEFINED> instruction: 0xf94af7fe
    8934:			; <UNDEFINED> instruction: 0xf0024648
    8938:	strbmi	pc, [r1], -r5, asr #25	; <UNPREDICTABLE>
    893c:			; <UNDEFINED> instruction: 0xf7fe4628
    8940:	ldmdblt	r0, {r0, r2, r4, r7, r9, fp, ip, sp, lr, pc}
    8944:	pop	{r5, r9, sl, lr}
    8948:			; <UNDEFINED> instruction: 0xf00183f8
    894c:			; <UNDEFINED> instruction: 0xf04ffd0f
    8950:			; <UNDEFINED> instruction: 0x463134ff
    8954:	ldmdami	r2, {r1, r9, sl, lr}
    8958:			; <UNDEFINED> instruction: 0xf0044478
    895c:			; <UNDEFINED> instruction: 0x4620f97f
    8960:	mvnshi	lr, #12386304	; 0xbd0000
    8964:			; <UNDEFINED> instruction: 0xf04f480f
    8968:	ldrbtmi	r3, [r8], #-1279	; 0xfffffb01
    896c:			; <UNDEFINED> instruction: 0xf976f004
    8970:	strtmi	lr, [r0], -r8, ror #15
    8974:	blx	1f44984 <strvisx@@Base+0x1f30c10>
    8978:	ldrbtmi	r4, [r9], #-2315	; 0xfffff6f5
    897c:	orrvc	pc, r0, r1, lsl #10
    8980:	stmdami	sl, {r1, r9, sl, lr}
    8984:			; <UNDEFINED> instruction: 0xf0034478
    8988:	stmdbmi	r9, {r0, r2, r3, r5, r7, r9, sl, fp, ip, sp, lr, pc}
    898c:	ldrbtmi	r4, [r9], #-2057	; 0xfffff7f7
    8990:			; <UNDEFINED> instruction: 0xf5014478
    8994:			; <UNDEFINED> instruction: 0xf0037180
    8998:	svclt	0x0000fea5
    899c:	strdeq	sp, [r0], -sl
    89a0:	andeq	lr, r0, r4, lsr r2
    89a4:	andeq	lr, r0, sl, lsl r5
    89a8:	andeq	lr, r0, r2, asr #25
    89ac:			; <UNDEFINED> instruction: 0x0000dcb0
    89b0:	andeq	lr, r0, lr, lsr #25
    89b4:	andeq	sp, r0, r8, ror #26
    89b8:	svcmi	0x00f0e92d
    89bc:	stc	6, cr4, [sp, #-512]!	; 0xfffffe00
    89c0:			; <UNDEFINED> instruction: 0xf8df8b06
    89c4:	mcr	8, 0, r4, cr10, cr0, {7}
    89c8:			; <UNDEFINED> instruction: 0xf8df2a10
    89cc:	ldrbtmi	r2, [ip], #-2284	; 0xfffff714
    89d0:	mcr	0, 0, fp, cr10, cr3, {6}
    89d4:	stmiapl	r2!, {r4, r7, r9, fp, ip}
    89d8:	ldmdavs	r2, {r2, r3, r4, r9, sl, lr}
    89dc:			; <UNDEFINED> instruction: 0xf04f9251
    89e0:			; <UNDEFINED> instruction: 0xf8df0200
    89e4:	tstls	fp, #216, 16	; 0xd80000
    89e8:	ldrbtmi	r2, [sl], #-768	; 0xfffffd00
    89ec:			; <UNDEFINED> instruction: 0x93269320
    89f0:	andsls	sl, r6, #38912	; 0x9800
    89f4:	stccs	3, cr9, [r0], {39}	; 0x27
    89f8:	orrshi	pc, r6, #0
    89fc:	ldmdavs	r3, {r0, r1, r3, r4, r9, fp, ip, pc}
    8a00:			; <UNDEFINED> instruction: 0xf1000759
    8a04:	vst4.<illegal width 64>	{d24,d26,d28,d30}, [pc :64], r6
    8a08:	andsls	r7, sp, #-1342177267	; 0xb000000d
    8a0c:	svclt	0x004d07da
    8a10:	movwcs	r9, #2843	; 0xb1b
    8a14:	ldmib	r3, {sl, sp}^
    8a18:	stmib	sp, {r1, sl, ip, sp}^
    8a1c:			; <UNDEFINED> instruction: 0xf8d83414
    8a20:	movwls	r3, #20488	; 0x5008
    8a24:	blx	ff044a36 <strvisx@@Base+0xff030cc2>
    8a28:	beq	444250 <strvisx@@Base+0x4304dc>
    8a2c:			; <UNDEFINED> instruction: 0xf0002800
    8a30:	cfstrsge	mvf8, [r8], #-60	; 0xffffffc4
    8a34:			; <UNDEFINED> instruction: 0xf0014620
    8a38:			; <UNDEFINED> instruction: 0xf8d8fb4d
    8a3c:	mrc	0, 0, r3, cr8, cr4, {0}
    8a40:	tstcs	r3, r0, lsl sl
    8a44:			; <UNDEFINED> instruction: 0xf8c81c5a
    8a48:	tstls	pc, #20
    8a4c:	blx	ff2c4a62 <strvisx@@Base+0xff2b0cee>
    8a50:	stmdacs	r0, {r0, r1, r2, r3, ip, pc}
    8a54:	strhi	pc, [r4], #-64	; 0xffffffc0
    8a58:	beq	4442c0 <strvisx@@Base+0x43054c>
    8a5c:			; <UNDEFINED> instruction: 0xf003991f
    8a60:	andls	pc, pc, r5, ror #22
    8a64:			; <UNDEFINED> instruction: 0xf0402800
    8a68:	mrc	3, 0, r8, cr10, cr11, {7}
    8a6c:	vmov	r1, s17
    8a70:			; <UNDEFINED> instruction: 0xf0030a10
    8a74:	andls	pc, pc, pc, lsl #26
    8a78:			; <UNDEFINED> instruction: 0xf0402800
    8a7c:	mrc	3, 0, r8, cr8, cr1, {7}
    8a80:	tstcs	r1, r0, lsl sl
    8a84:	blx	14c4a9a <strvisx@@Base+0x14b0d26>
    8a88:	stmdacs	r0, {r0, r1, r2, r3, ip, pc}
    8a8c:	mvnhi	pc, #64	; 0x40
    8a90:	beq	4442f8 <strvisx@@Base+0x430584>
    8a94:			; <UNDEFINED> instruction: 0xf0014621
    8a98:	andls	pc, pc, r5, lsr #24
    8a9c:			; <UNDEFINED> instruction: 0xf0402800
    8aa0:	mrc	3, 0, r8, cr8, cr15, {6}
    8aa4:			; <UNDEFINED> instruction: 0x46401a10
    8aa8:			; <UNDEFINED> instruction: 0xf88ef7fe
    8aac:	ldmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    8ab0:	bcs	fe444320 <strvisx@@Base+0xfe4305ac>
    8ab4:	ldrbtmi	r9, [r8], #-2335	; 0xfffff6e1
    8ab8:			; <UNDEFINED> instruction: 0xf9bef004
    8abc:	stmdacc	r4, {r0, r1, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    8ac0:	bge	441fc <strvisx@@Base+0x30488>
    8ac4:	ldmdbls	pc, {r0, r5, r9, fp, sp, pc}	; <UNPREDICTABLE>
    8ac8:			; <UNDEFINED> instruction: 0x4640447b
    8acc:	blx	fe646acc <strvisx@@Base+0xfe632d58>
    8ad0:	stmdacs	r0, {r0, r1, r2, ip, pc}
    8ad4:	msrhi	SPSR_sx, #0
    8ad8:	blcs	2f86c <strvisx@@Base+0x1baf8>
    8adc:	addshi	pc, pc, #0
    8ae0:	cmpcs	r1, sp, lsl fp
    8ae4:	beq	444354 <strvisx@@Base+0x4305e0>
    8ae8:	addeq	pc, r0, #67	; 0x43
    8aec:	stcl	7, cr15, [r4, #-996]	; 0xfffffc1c
    8af0:	movwcc	r4, #5635	; 0x1603
    8af4:	beq	444320 <strvisx@@Base+0x4305ac>
    8af8:	msrhi	SPSR_fc, #0
    8afc:	bne	444368 <strvisx@@Base+0x4305f4>
    8b00:	andcs	sl, r3, r2, lsr sl
    8b04:	mrrc	7, 15, pc, r8, cr9	; <UNPREDICTABLE>
    8b08:			; <UNDEFINED> instruction: 0xf0003001
    8b0c:	ldmib	sp, {r2, r3, r4, r5, r6, r8, r9, pc}^
    8b10:	stmdacs	r0, {r1, r2, r3, r4, r5, r8}
    8b14:	movweq	pc, #369	; 0x171	; <UNPREDICTABLE>
    8b18:	orrshi	pc, r3, #192, 4
    8b1c:	ldrcc	lr, [r4], #-2525	; 0xfffff623
    8b20:	smlabteq	r8, sp, r9, lr
    8b24:	svclt	0x0008428c
    8b28:			; <UNDEFINED> instruction: 0xf0c04283
    8b2c:	ldmib	sp, {r0, r2, r5, r7, r8, r9, pc}^
    8b30:	stmib	sp, {r2, r4, r8, sl, lr}^
    8b34:			; <UNDEFINED> instruction: 0xf8df0124
    8b38:	ldmdbls	r6, {r4, r7, r8, r9, sl, ip, sp}
    8b3c:			; <UNDEFINED> instruction: 0x432a4622
    8b40:	andcs	fp, r1, #20, 30	; 0x50
    8b44:	andsls	r2, r7, #0, 4
    8b48:	tstls	ip, #13303808	; 0xcb0000
    8b4c:	blcs	22bc0 <strvisx@@Base+0xee4c>
    8b50:	andcs	fp, r0, #8, 30
    8b54:			; <UNDEFINED> instruction: 0xf0402a00
    8b58:	andcs	r8, r0, #-536870899	; 0xe000000d
    8b5c:			; <UNDEFINED> instruction: 0x376cf8df
    8b60:	andscs	lr, r2, #3358720	; 0x334000
    8b64:	stmdbeq	r1, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    8b68:	stmib	sp, {r1, r3, r4, r9, ip, pc}^
    8b6c:	bls	5913a4 <strvisx@@Base+0x57d630>
    8b70:	smmlslt	ip, pc, r8, pc	; <UNPREDICTABLE>
    8b74:	ldrbtmi	r5, [fp], #2259	; 0x8d3
    8b78:	movwls	r4, #59098	; 0xe6da
    8b7c:	strcc	lr, [r8], #-2525	; 0xfffff623
    8b80:	ldrcc	lr, [r8], #-2509	; 0xfffff633
    8b84:			; <UNDEFINED> instruction: 0x374cf8df
    8b88:	mcr	4, 0, r4, cr8, cr11, {3}
    8b8c:			; <UNDEFINED> instruction: 0xf8df3a90
    8b90:	ldrbtmi	r3, [fp], #-1864	; 0xfffff8b8
    8b94:	bcc	fe4443c0 <strvisx@@Base+0xfe43064c>
    8b98:	ldmdavs	fp, {r1, r2, r3, r8, r9, fp, ip, pc}
    8b9c:			; <UNDEFINED> instruction: 0xf0402b00
    8ba0:	blls	329234 <strvisx@@Base+0x3154c0>
    8ba4:	ldmdble	sl, {r0, r3, r4, r7, r8, sl, lr}^
    8ba8:	svcls	0x000c9b05
    8bac:	ldmib	sp, {r1, r2, r8, r9, ip, pc}^
    8bb0:	ldrmi	r3, [sp], -r8, lsl #8
    8bb4:	blls	19a454 <strvisx@@Base+0x1866e0>
    8bb8:	ldrtmi	r4, [r3], sl, lsr #12
    8bbc:	stmdbvc	r2, {r0, r2, r3, r6, r7, r8, fp, sp, lr, pc}
    8bc0:	ldrbmi	r1, [fp], -sp, ror #17
    8bc4:	streq	pc, [r0], -r6, asr #2
    8bc8:	rscscc	pc, pc, r5, lsl r1	; <UNPREDICTABLE>
    8bcc:	mvnscc	pc, r6, asr #2
    8bd0:	mrsls	r9, (UNDEF: 1)
    8bd4:	andls	r4, r4, #80, 12	; 0x5000000
    8bd8:			; <UNDEFINED> instruction: 0xf92ef004
    8bdc:	andcs	r2, r1, r8, lsl r1
    8be0:			; <UNDEFINED> instruction: 0xf98ef004
    8be4:			; <UNDEFINED> instruction: 0x1014f8d8
    8be8:			; <UNDEFINED> instruction: 0xf04f9b05
    8bec:	bls	10c3f4 <strvisx@@Base+0xf8680>
    8bf0:	strmi	r3, [r4], -r1, lsl #14
    8bf4:			; <UNDEFINED> instruction: 0xf8c81c48
    8bf8:			; <UNDEFINED> instruction: 0x46400014
    8bfc:			; <UNDEFINED> instruction: 0xf1046021
    8c00:	rsbvs	r0, r3, r0, lsl r1
    8c04:			; <UNDEFINED> instruction: 0xc09cf8dd
    8c08:	blcs	c3320 <strvisx@@Base+0xaf5ac>
    8c0c:			; <UNDEFINED> instruction: 0xec04e9c4
    8c10:	andmi	pc, r0, ip, asr #17
    8c14:	stmdbls	r1!, {r0, r1, r2, r5, r8, ip, pc}
    8c18:	ldrdgt	pc, [r0], -r4
    8c1c:	movwcs	lr, #10708	; 0x29d4
    8c20:	stmdbls	r7, {r1, r8, ip, pc}
    8c24:	strbtmi	r9, [r1], -r1, lsl #2
    8c28:	strls	r6, [r0], #-2148	; 0xfffff79c
    8c2c:	blx	feec6c2e <strvisx@@Base+0xfeeb2eba>
    8c30:	bicle	r4, r0, pc, asr #10
    8c34:	ldrdeq	lr, [r8, -sp]
    8c38:	stmne	r3, {r1, r2, r9, fp, ip, pc}
    8c3c:			; <UNDEFINED> instruction: 0xf141930a
    8c40:	andls	r0, fp, #0, 4
    8c44:			; <UNDEFINED> instruction: 0xf1099a0c
    8c48:	ldmib	sp, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp}^
    8c4c:	bne	fe6c907c <strvisx@@Base+0xfe6b5308>
    8c50:			; <UNDEFINED> instruction: 0xf8cd9a05
    8c54:	blx	ff8acd1e <strvisx@@Base+0xff898faa>
    8c58:	stmib	sp, {r0, r1, r8}^
    8c5c:	mufe	f0, f0, #0.0
    8c60:			; <UNDEFINED> instruction: 0xf0020a10
    8c64:	vnmla.f64	d15, d24, d27
    8c68:			; <UNDEFINED> instruction: 0x46401a10
    8c6c:			; <UNDEFINED> instruction: 0xf7fe2200
    8c70:	cdp	8, 1, cr15, cr8, cr11, {1}
    8c74:			; <UNDEFINED> instruction: 0xf10d0a10
    8c78:			; <UNDEFINED> instruction: 0xf002017b
    8c7c:	stmdacs	r0, {r0, r1, r2, r3, r4, r5, r8, r9, sl, fp, ip, sp, lr, pc}
    8c80:	addhi	pc, r5, #64	; 0x40
    8c84:	beq	4444ec <strvisx@@Base+0x430778>
    8c88:			; <UNDEFINED> instruction: 0xf002a91f
    8c8c:	stmdacs	r0, {r0, r2, r3, r8, r9, sl, fp, ip, sp, lr, pc}
    8c90:	rsbshi	pc, sp, #64	; 0x40
    8c94:			; <UNDEFINED> instruction: 0x107bf89d
    8c98:	cfmsub32	mvax2, mvfx4, mvfx8, mvfx11
    8c9c:	bls	7cb6e4 <strvisx@@Base+0x7b7970>
    8ca0:			; <UNDEFINED> instruction: 0xf8caf004
    8ca4:	ldmdbls	pc, {r1, r2, r5, r8, sl, fp, ip, pc}	; <UNPREDICTABLE>
    8ca8:	add	fp, ip, #606208	; 0x94000
    8cac:	vstrcs.16	s12, [r0, #-90]	; 0xffffffa6	; <UNPREDICTABLE>
    8cb0:	addhi	pc, r9, #0
    8cb4:	addmi	r6, fp, #2818048	; 0x2b0000
    8cb8:			; <UNDEFINED> instruction: 0xf89dd1f8
    8cbc:	bcs	1950eb0 <strvisx@@Base+0x193d13c>
    8cc0:	addhi	pc, fp, r0, asr #32
    8cc4:	beq	44452c <strvisx@@Base+0x4307b8>
    8cc8:			; <UNDEFINED> instruction: 0xf002a920
    8ccc:	stmdacs	r0, {r0, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    8cd0:	sbcshi	pc, r9, #64	; 0x40
    8cd4:	stmdbls	sp, {r5, r9, fp, ip, pc}
    8cd8:	bcs	6318c <strvisx@@Base+0x4f418>
    8cdc:	svclt	0x0018696a
    8ce0:	tstls	sp, r1, lsl #2
    8ce4:			; <UNDEFINED> instruction: 0xf0002b00
    8ce8:	cmpvs	sl, sl, ror #2
    8cec:	andcc	lr, r4, #3489792	; 0x354000
    8cf0:	strtmi	r9, [r8], -ip, lsl #18
    8cf4:			; <UNDEFINED> instruction: 0xf04f6013
    8cf8:	vmlane.f16	s1, s24, s0	; <UNPREDICTABLE>
    8cfc:			; <UNDEFINED> instruction: 0xf7f9940c
    8d00:			; <UNDEFINED> instruction: 0x4623eb7c
    8d04:			; <UNDEFINED> instruction: 0xf47f2b00
    8d08:	blls	734a2c <strvisx@@Base+0x720cb8>
    8d0c:	ldmdavs	fp, {r0, r1, r2, r4, r9, fp, ip, pc}
    8d10:	svclt	0x00082b00
    8d14:	bcs	1151c <setlogin@@Base+0x260>
    8d18:	andshi	pc, r0, #64	; 0x40
    8d1c:	blcs	2f9bc <strvisx@@Base+0x1bc48>
    8d20:	subhi	pc, r7, #64	; 0x40
    8d24:	bls	36fab8 <strvisx@@Base+0x35bd44>
    8d28:	blls	3d05a0 <strvisx@@Base+0x3bc82c>
    8d2c:	strcs	fp, [r1], #-3864	; 0xfffff0e8
    8d30:			; <UNDEFINED> instruction: 0xf0404313
    8d34:	blls	3a925c <strvisx@@Base+0x3954e8>
    8d38:	blcs	22dac <strvisx@@Base+0xf038>
    8d3c:	cmphi	r3, r0, asr #32	; <UNPREDICTABLE>
    8d40:	strbmi	r9, [r0], -r1, lsr #20
    8d44:			; <UNDEFINED> instruction: 0xf7fe9907
    8d48:	movwcs	pc, #19755	; 0x4d2b	; <UNPREDICTABLE>
    8d4c:			; <UNDEFINED> instruction: 0xf0002800
    8d50:			; <UNDEFINED> instruction: 0x93208194
    8d54:	blcs	2fae4 <strvisx@@Base+0x1bd70>
    8d58:	orrshi	pc, sl, r0, asr #32
    8d5c:			; <UNDEFINED> instruction: 0xf0839b12
    8d60:	andsmi	r0, ip, #67108864	; 0x4000000
    8d64:	mvnshi	pc, r0, asr #32
    8d68:	blcs	2fb00 <strvisx@@Base+0x1bd8c>
    8d6c:			; <UNDEFINED> instruction: 0x81b9f040
    8d70:	beq	4445dc <strvisx@@Base+0x430868>
    8d74:	ldc	7, cr15, [sl], #-996	; 0xfffffc1c
    8d78:	beq	4445e0 <strvisx@@Base+0x43086c>
    8d7c:	blx	fe8c4d8c <strvisx@@Base+0xfe8b1018>
    8d80:			; <UNDEFINED> instruction: 0xf7f99807
    8d84:	stmdals	r0!, {r1, r3, r4, r5, r8, r9, fp, sp, lr, pc}
    8d88:	svclt	0x00183800
    8d8c:			; <UNDEFINED> instruction: 0xf00c2001
    8d90:			; <UNDEFINED> instruction: 0xf8dff8c5
    8d94:			; <UNDEFINED> instruction: 0xf8df2548
    8d98:	ldrbtmi	r3, [sl], #-1312	; 0xfffffae0
    8d9c:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    8da0:	subsmi	r9, sl, r1, asr fp
    8da4:	andhi	pc, sp, #64	; 0x40
    8da8:	ldc	0, cr11, [sp], #332	; 0x14c
    8dac:	pop	{r1, r2, r8, r9, fp, pc}
    8db0:	ldmibvs	r2, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8db4:	cmnmi	r0, r2, lsl #8	; <UNPREDICTABLE>
    8db8:	andeq	pc, r8, #134217731	; 0x8000003
    8dbc:	svcmi	0x0000f5b1
    8dc0:			; <UNDEFINED> instruction: 0xf43f921d
    8dc4:			; <UNDEFINED> instruction: 0xf8dfae23
    8dc8:	mrc	5, 0, r0, cr10, cr8, {0}
    8dcc:	ldrbtmi	r1, [r8], #-2704	; 0xfffff570
    8dd0:			; <UNDEFINED> instruction: 0xff44f003
    8dd4:	rscscc	pc, pc, pc, asr #32
    8dd8:	bcs	1a02d4c <strvisx@@Base+0x19eefd8>
    8ddc:	bicshi	pc, r2, r0, asr #32
    8de0:	beq	444648 <strvisx@@Base+0x4308d4>
    8de4:	stmdbge	r2!, {r0, r1, r5, r9, fp, sp, pc}
    8de8:			; <UNDEFINED> instruction: 0xffcef002
    8dec:	stmdacs	r0, {r2, r9, sl, lr}
    8df0:	subshi	pc, r4, #64	; 0x40
    8df4:	strcs	r9, [r0], -r3, lsr #18
    8df8:	stmiavs	fp!, {r1, r3, r5, r7, fp, sp, lr}^
    8dfc:	mvnscc	pc, r1, lsl r1	; <UNPREDICTABLE>
    8e00:	ldrbtcc	pc, [pc], r6, asr #2	; <UNPREDICTABLE>
    8e04:	bl	10cf030 <strvisx@@Base+0x10bb2bc>
    8e08:	cfmsub32	mvax0, mvfx0, mvfx9, mvfx6
    8e0c:	stmib	sp, {r4, r7, r9, fp}^
    8e10:			; <UNDEFINED> instruction: 0xf0041600
    8e14:	stmdavs	sl!, {r0, r4, fp, ip, sp, lr, pc}^
    8e18:	addmi	r9, sl, #573440	; 0x8c000
    8e1c:	bichi	pc, sp, r0, asr #1
    8e20:	movwcs	lr, #10709	; 0x29d5
    8e24:	beq	444690 <strvisx@@Base+0x43091c>
    8e28:			; <UNDEFINED> instruction: 0xf7f99400
    8e2c:	tstcc	r1, lr, lsl ip
    8e30:			; <UNDEFINED> instruction: 0xf1b0bf04
    8e34:	stcls	15, cr3, [r3], #-1020	; 0xfffffc04
    8e38:	ldcls	0, cr13, [r6], {12}
    8e3c:	strteq	pc, [r4], #2271	; 0x8df
    8e40:	bne	4446ac <strvisx@@Base+0x430938>
    8e44:			; <UNDEFINED> instruction: 0x2322e9dd
    8e48:			; <UNDEFINED> instruction: 0xf0045820
    8e4c:			; <UNDEFINED> instruction: 0x9c23f95b
    8e50:	subsle	r4, r0, r0, lsr #5
    8e54:	cdpcs	14, 0, cr9, cr0, cr15, {0}
    8e58:			; <UNDEFINED> instruction: 0xf7f9d14d
    8e5c:	ssatmi	lr, #18, r2, asr #26
    8e60:	tstls	sl, #196608	; 0x30000
    8e64:	movwls	r2, #62209	; 0xf301
    8e68:	ldrdeq	lr, [r4, -sp]!
    8e6c:	movwcs	r4, #1570	; 0x622
    8e70:			; <UNDEFINED> instruction: 0xff82f00b
    8e74:	stmdals	r2!, {r1, r9, sl, lr}
    8e78:	stmib	sp, {r0, r1, r3, r9, sl, lr}^
    8e7c:			; <UNDEFINED> instruction: 0xf7f92324
    8e80:	stmdavs	r9!, {r2, r3, r4, r5, r7, r9, fp, sp, lr, pc}^
    8e84:	adcmi	r9, r1, #8960	; 0x2300
    8e88:	ldmib	r5, {r4, r6, r8, ip, lr, pc}^
    8e8c:	blcs	156a4 <strvisx@@Base+0x1930>
    8e90:	addshi	pc, r7, r0
    8e94:	ldmib	r5, {r1, r3, r4, r6, r8, sp, lr}^
    8e98:	andsvs	r3, r3, r4, lsl #4
    8e9c:			; <UNDEFINED> instruction: 0xf7f94628
    8ea0:	blls	343958 <strvisx@@Base+0x32fbe4>
    8ea4:	movwls	r3, #51969	; 0xcb01
    8ea8:	svceq	0x0000f1b9
    8eac:	ldmib	sp, {r0, r1, r2, r4, r5, ip, lr, pc}^
    8eb0:	ldmib	sp, {r2, r4, sl, ip, sp}^
    8eb4:	addsmi	r1, r4, #8, 4	; 0x80000000
    8eb8:	addmi	fp, fp, #8, 30
    8ebc:			; <UNDEFINED> instruction: 0xf0039b17
    8ec0:	svclt	0x00280301
    8ec4:	blcs	11acc <setlogin@@Base+0x810>
    8ec8:			; <UNDEFINED> instruction: 0xf8d8d16c
    8ecc:	strbmi	r3, [fp, #-12]
    8ed0:	movwcs	sp, #4978	; 0x1372
    8ed4:	blls	32db24 <strvisx@@Base+0x319db0>
    8ed8:	stmdbeq	r1, {r0, r3, r8, ip, sp, lr, pc}
    8edc:	movweq	lr, #39491	; 0x9a43
    8ee0:			; <UNDEFINED> instruction: 0xf47f2b00
    8ee4:			; <UNDEFINED> instruction: 0xe710ae59
    8ee8:	blcs	2fb20 <strvisx@@Base+0x1bdac>
    8eec:	svcge	0x000df43f
    8ef0:	stmdbeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    8ef4:	blls	5029c8 <strvisx@@Base+0x4eec54>
    8ef8:			; <UNDEFINED> instruction: 0xd1b52b00
    8efc:	movwcs	lr, #10709	; 0x29d5
    8f00:			; <UNDEFINED> instruction: 0x0118e9dd
    8f04:	svclt	0x00084299
    8f08:	svclt	0x003c4290
    8f0c:	tstls	r3, #67108864	; 0x4000000
    8f10:	ldmdbne	r0, {r1, r3, r5, r7, r8, r9, ip, lr, pc}
    8f14:	tsteq	r0, r3, asr #2	; <UNPREDICTABLE>
    8f18:	tsteq	r8, sp, asr #19
    8f1c:	blls	342db4 <strvisx@@Base+0x32f040>
    8f20:	andsls	r2, r2, #268435456	; 0x10000000
    8f24:			; <UNDEFINED> instruction: 0xf47f2b00
    8f28:			; <UNDEFINED> instruction: 0xe6eeae37
    8f2c:	movwcs	lr, #10709	; 0x29d5
    8f30:			; <UNDEFINED> instruction: 0xf11248ed
    8f34:			; <UNDEFINED> instruction: 0x961036ff
    8f38:	ldrbtmi	r9, [r8], #-3596	; 0xfffff1f4
    8f3c:			; <UNDEFINED> instruction: 0xf1439602
    8f40:			; <UNDEFINED> instruction: 0x961136ff
    8f44:	ldmib	sp, {r1, r4, r8, fp, ip}^
    8f48:			; <UNDEFINED> instruction: 0xf1436710
    8f4c:	ldmdane	r6!, {r8, r9}^
    8f50:	streq	pc, [r0, -r7, asr #2]
    8f54:	strvs	lr, [r0, -sp, asr #19]
    8f58:			; <UNDEFINED> instruction: 0xff6ef003
    8f5c:			; <UNDEFINED> instruction: 0x1014f8d8
    8f60:	mcrrne	6, 4, r4, fp, cr0
    8f64:	andscc	pc, r4, r8, asr #17
    8f68:	ldmib	r5, {r0, r3, r5, sp, lr}^
    8f6c:	cdpls	3, 2, cr2, cr3, cr2, {0}
    8f70:	ldmibne	r2, {r2, r3, r5, r6, fp, sp, lr}
    8f74:			; <UNDEFINED> instruction: 0xf1439f21
    8f78:	blne	fe909b80 <strvisx@@Base+0xfe8f5e0c>
    8f7c:	movwcs	lr, #10693	; 0x29c5
    8f80:	strls	r6, [r0], #-108	; 0xffffff94
    8f84:	stmib	sp, {r0, r1, r2, sl, fp, ip, pc}^
    8f88:			; <UNDEFINED> instruction: 0xf7fe4701
    8f8c:	blls	9077c0 <strvisx@@Base+0x8f3a4c>
    8f90:	addsmi	r9, r3, #20480	; 0x5000
    8f94:			; <UNDEFINED> instruction: 0xf5b3d288
    8f98:	svclt	0x00387f00
    8f9c:	movwvc	pc, #1103	; 0x44f	; <UNPREDICTABLE>
    8fa0:	str	r9, [r1, r5, lsl #6]
    8fa4:			; <UNDEFINED> instruction: 0xf04f9b0c
    8fa8:	ldmmi	r0, {r0, r8, fp}^
    8fac:	ldrbtmi	r9, [r8], #-768	; 0xfffffd00
    8fb0:			; <UNDEFINED> instruction: 0x460a4613
    8fb4:			; <UNDEFINED> instruction: 0xff40f003
    8fb8:	tstls	r2, #67108864	; 0x4000000
    8fbc:	eorls	lr, r7, #236, 10	; 0x3b000000
    8fc0:	eorls	lr, r7, #157286400	; 0x9600000
    8fc4:	blls	502d70 <strvisx@@Base+0x4eeffc>
    8fc8:	cmple	pc, ip, lsl r2	; <UNPREDICTABLE>
    8fcc:			; <UNDEFINED> instruction: 0x5618e9dd
    8fd0:	strtmi	r4, [sl], -r7, asr #17
    8fd4:			; <UNDEFINED> instruction: 0x46334478
    8fd8:	cdp2	0, 13, cr15, cr10, cr3, {0}
    8fdc:	beq	444848 <strvisx@@Base+0x430ad4>
    8fe0:	ldrtmi	r4, [r3], -sl, lsr #12
    8fe4:	mcrr	7, 15, pc, r8, cr9	; <UNPREDICTABLE>
    8fe8:			; <UNDEFINED> instruction: 0xf0003001
    8fec:	blls	36929c <strvisx@@Base+0x355528>
    8ff0:	blls	3f7d24 <strvisx@@Base+0x3e3fb0>
    8ff4:			; <UNDEFINED> instruction: 0xf43f2b00
    8ff8:	ldmdals	sl, {r0, r1, r5, r7, r9, sl, fp, sp, pc}
    8ffc:	ldm	sl!, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    9000:	bne	444870 <strvisx@@Base+0x430afc>
    9004:	ldmmi	fp!, {r1, r9, sl, lr}
    9008:			; <UNDEFINED> instruction: 0xf0034478
    900c:	bls	8888b0 <strvisx@@Base+0x874b3c>
    9010:	strbmi	r9, [r0], -r7, lsl #18
    9014:			; <UNDEFINED> instruction: 0x93202304
    9018:	blx	ff0c701a <strvisx@@Base+0xff0b32a6>
    901c:	blls	782ac4 <strvisx@@Base+0x76ed50>
    9020:	cmpcs	r1, r0, asr #4	; <UNPREDICTABLE>
    9024:	beq	444894 <strvisx@@Base+0x430b20>
    9028:	addeq	pc, r0, #67	; 0x43
    902c:	b	fe947018 <strvisx@@Base+0xfe9332a4>
    9030:	movwcc	r4, #5635	; 0x1603
    9034:	beq	444860 <strvisx@@Base+0x430aec>
    9038:	sbchi	pc, r9, r0
    903c:	mrscs	r2, (UNDEF: 0)
    9040:	smlabteq	r8, sp, r9, lr
    9044:	stmdals	r0!, {r0, r1, r4, r5, r6, r8, sl, sp, lr, pc}
    9048:			; <UNDEFINED> instruction: 0xf990f001
    904c:	bne	fe4448bc <strvisx@@Base+0xfe430b48>
    9050:	stmiami	r9!, {r1, r9, sl, lr}
    9054:			; <UNDEFINED> instruction: 0xf0034478
    9058:	bls	888864 <strvisx@@Base+0x874af0>
    905c:	strbmi	r9, [r0], -r7, lsl #18
    9060:	mvnscc	pc, #79	; 0x4f
    9064:			; <UNDEFINED> instruction: 0xf7fe9320
    9068:	pkhbt	pc, r1, fp, lsl #23	; <UNPREDICTABLE>
    906c:	cdp	8, 1, cr4, cr10, cr3, {5}
    9070:	ldrbtmi	r1, [r8], #-2576	; 0xfffff5f0
    9074:	ldc2l	0, cr15, [r2, #12]!
    9078:	blls	3c2f20 <strvisx@@Base+0x3af1ac>
    907c:	blcs	230f0 <strvisx@@Base+0xf37c>
    9080:	movwcs	fp, #20244	; 0x4f14
    9084:	nopls	{0}	; <UNPREDICTABLE>
    9088:	blcs	2fe18 <strvisx@@Base+0x1c0a4>
    908c:	mcrge	4, 3, pc, cr6, cr15, {1}	; <UNPREDICTABLE>
    9090:	beq	4448fc <strvisx@@Base+0x430b88>
    9094:			; <UNDEFINED> instruction: 0xf7f9991d
    9098:	andcc	lr, r1, sl, lsl ip
    909c:	blls	6fd238 <strvisx@@Base+0x6e94c4>
    90a0:			; <UNDEFINED> instruction: 0x071b681b
    90a4:	mrcge	5, 2, APSR_nzcv, cr10, cr15, {3}
    90a8:	stmdbge	sp, {r0, r1, r3, r4, r8, r9, fp, ip, pc}^
    90ac:	beq	44491c <strvisx@@Base+0x430ba8>
    90b0:	bvs	6e3820 <strvisx@@Base+0x6cfaac>
    90b4:	movtls	r9, #62029	; 0xf24d
    90b8:	cmpls	r0, #0, 6
    90bc:			; <UNDEFINED> instruction: 0xf7f9934e
    90c0:	ldrdcc	lr, [r1], -r0
    90c4:	mcrge	4, 2, pc, cr10, cr15, {3}	; <UNPREDICTABLE>
    90c8:	ldc	7, cr15, [sl], {249}	; 0xf9
    90cc:			; <UNDEFINED> instruction: 0xf7f96800
    90d0:	mrc	8, 0, lr, cr10, cr2, {4}
    90d4:			; <UNDEFINED> instruction: 0x46021a10
    90d8:	ldrbtmi	r4, [r8], #-2185	; 0xfffff777
    90dc:	ldc2	0, cr15, [lr, #12]!
    90e0:	stmmi	r8, {r2, r3, r4, r5, r9, sl, sp, lr, pc}
    90e4:	bne	444954 <strvisx@@Base+0x430be0>
    90e8:			; <UNDEFINED> instruction: 0xf0034478
    90ec:	mrc	14, 0, APSR_nzcv, cr9, cr1, {2}
    90f0:			; <UNDEFINED> instruction: 0xf7f90a10
    90f4:	andcc	lr, r1, r4, asr #18
    90f8:	mrcge	4, 1, APSR_nzcv, cr10, cr15, {3}
    90fc:	stc	7, cr15, [r0], {249}	; 0xf9
    9100:			; <UNDEFINED> instruction: 0xf7f96800
    9104:	mrc	8, 0, lr, cr10, cr8, {3}
    9108:			; <UNDEFINED> instruction: 0x46021a10
    910c:	ldrbtmi	r4, [r8], #-2174	; 0xfffff782
    9110:	stc2	0, cr15, [r4, #12]!
    9114:	stmdbge	r4!, {r2, r3, r5, r9, sl, sp, lr, pc}
    9118:	beq	fe444988 <strvisx@@Base+0xfe430c14>
    911c:	tstcs	r4, #3620864	; 0x374000
    9120:			; <UNDEFINED> instruction: 0xf0019100
    9124:	ldr	pc, [r8, #-3645]	; 0xfffff1c3
    9128:			; <UNDEFINED> instruction: 0xf7fe4622
    912c:	andsls	pc, fp, r1, lsr #29
    9130:			; <UNDEFINED> instruction: 0xf47f2800
    9134:			; <UNDEFINED> instruction: 0xf04fac63
    9138:			; <UNDEFINED> instruction: 0xe62a30ff
    913c:	cdp2	0, 6, cr15, cr8, cr1, {0}
    9140:			; <UNDEFINED> instruction: 0xf7f9e5ec
    9144:	stmdavs	r0, {r1, r2, r3, r4, r6, r7, r8, r9, fp, sp, lr, pc}
    9148:	ldmda	r4, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    914c:	bne	4449bc <strvisx@@Base+0x430c48>
    9150:	stmdami	lr!, {r1, r9, sl, lr}^
    9154:			; <UNDEFINED> instruction: 0xf0034478
    9158:	strb	pc, [r8, -r1, lsl #27]	; <UNPREDICTABLE>
    915c:	cdp	8, 1, cr4, cr10, cr12, {3}
    9160:	ldrbtmi	r1, [r8], #-2576	; 0xfffff5f0
    9164:	stc2l	0, cr15, [r0, #12]
    9168:			; <UNDEFINED> instruction: 0xf7f9e602
    916c:	stmdavs	r0, {r1, r3, r6, r7, r8, r9, fp, sp, lr, pc}
    9170:	stmda	r0, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    9174:	bne	4449e4 <strvisx@@Base+0x430c70>
    9178:	stmdami	r6!, {r1, r9, sl, lr}^
    917c:			; <UNDEFINED> instruction: 0xf0034478
    9180:	str	pc, [ip, sp, ror #26]
    9184:	cmncs	r7, r4, ror #16
    9188:			; <UNDEFINED> instruction: 0xf0034478
    918c:			; <UNDEFINED> instruction: 0xf001faab
    9190:	blmi	18c8b54 <strvisx@@Base+0x18b4de0>
    9194:			; <UNDEFINED> instruction: 0xf503447b
    9198:	strmi	r7, [r2], -r6, lsl #3
    919c:	ldrbtmi	r4, [r8], #-2144	; 0xfffff7a0
    91a0:	blx	fe8451b4 <strvisx@@Base+0xfe831440>
    91a4:	beq	444a0c <strvisx@@Base+0x430c98>
    91a8:			; <UNDEFINED> instruction: 0xf88cf002
    91ac:	rscscc	pc, pc, pc, asr #32
    91b0:	ldmdami	ip, {r0, r1, r2, r3, r5, r6, r7, r8, sl, sp, lr, pc}^
    91b4:			; <UNDEFINED> instruction: 0xf0034478
    91b8:	ldmdami	fp, {r0, r2, r4, r7, r9, fp, ip, sp, lr, pc}^
    91bc:			; <UNDEFINED> instruction: 0xf0034478
    91c0:			; <UNDEFINED> instruction: 0xf7f9fa91
    91c4:	ldmdami	r9, {r1, r3, r5, r6, r9, fp, sp, lr, pc}^
    91c8:			; <UNDEFINED> instruction: 0xf0034478
    91cc:			; <UNDEFINED> instruction: 0xf7f9fa8b
    91d0:	stmdavs	r0, {r3, r4, r7, r8, r9, fp, sp, lr, pc}
    91d4:	stmda	lr, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    91d8:	bne	444a48 <strvisx@@Base+0x430cd4>
    91dc:	ldmdami	r4, {r1, r9, sl, lr}^
    91e0:			; <UNDEFINED> instruction: 0xf0034478
    91e4:	stcls	13, cr15, [r7], {59}	; 0x3b
    91e8:	strbmi	r9, [r0], -r1, lsr #20
    91ec:			; <UNDEFINED> instruction: 0xf7fe4621
    91f0:	mrc	10, 0, APSR_nzcv, cr8, cr7, {6}
    91f4:			; <UNDEFINED> instruction: 0xf0020a10
    91f8:	strtmi	pc, [r0], -r5, ror #16
    91fc:	ldm	ip!, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    9200:	rscscc	pc, pc, pc, asr #32
    9204:			; <UNDEFINED> instruction: 0xf7f9e5c5
    9208:	stmdavs	r0, {r2, r3, r4, r5, r6, r8, r9, fp, sp, lr, pc}
    920c:	svc	0x00f2f7f8
    9210:	bne	444a80 <strvisx@@Base+0x430d0c>
    9214:	stmdami	r7, {r1, r9, sl, lr}^
    9218:			; <UNDEFINED> instruction: 0xf0034478
    921c:	stcls	13, cr15, [r7], {31}
    9220:	bls	85ab28 <strvisx@@Base+0x846db4>
    9224:			; <UNDEFINED> instruction: 0xf7fe4621
    9228:	mrc	10, 0, APSR_nzcv, cr8, cr11, {5}
    922c:			; <UNDEFINED> instruction: 0xf0020a10
    9230:	strtmi	pc, [r0], -r9, asr #16
    9234:	stmia	r0!, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    9238:	beq	444aa4 <strvisx@@Base+0x430d30>
    923c:	ldmib	r6, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    9240:	ldmdami	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, sp, lr, pc}
    9244:	bne	444ab4 <strvisx@@Base+0x430d40>
    9248:			; <UNDEFINED> instruction: 0xf0034478
    924c:	strb	pc, [r6, r7, lsl #26]!	; <UNPREDICTABLE>
    9250:	ldmdami	fp!, {r1, r3, r4, r5, r8, fp, lr}
    9254:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    9258:	orrvc	pc, r6, r1, lsl #10
    925c:	blx	10c5270 <strvisx@@Base+0x10b14fc>
    9260:			; <UNDEFINED> instruction: 0xf001980f
    9264:	blmi	e08a80 <strvisx@@Base+0xdf4d0c>
    9268:			; <UNDEFINED> instruction: 0xf503447b
    926c:	strmi	r7, [r2], -r6, lsl #3
    9270:	ldrbtmi	r4, [r8], #-2101	; 0xfffff7cb
    9274:	blx	dc5288 <strvisx@@Base+0xdb1514>
    9278:	mrc	8, 0, r4, cr10, cr4, {1}
    927c:	ldrbtmi	r1, [r8], #-2576	; 0xfffff5f0
    9280:	stc2l	0, cr15, [ip], #12
    9284:			; <UNDEFINED> instruction: 0xf001e7cb
    9288:	blmi	c88a5c <strvisx@@Base+0xc74ce8>
    928c:			; <UNDEFINED> instruction: 0xf503447b
    9290:	strmi	r7, [r2], -r6, lsl #3
    9294:	ldrbtmi	r4, [r8], #-2095	; 0xfffff7d1
    9298:	blx	9452ac <strvisx@@Base+0x931538>
    929c:	stc2l	0, cr15, [r8, #4]!
    92a0:	ldrbtmi	r4, [fp], #-2861	; 0xfffff4d3
    92a4:	orrvc	pc, r6, r3, lsl #10
    92a8:	stmdami	ip!, {r1, r9, sl, lr}
    92ac:			; <UNDEFINED> instruction: 0xf0034478
    92b0:	svclt	0x0000fa19
    92b4:	andeq	r1, r2, r2, lsr r3
    92b8:	andeq	r0, r0, r0, asr #5
    92bc:	andeq	r1, r2, r6, lsl r3
    92c0:	andeq	lr, r0, lr, lsr #8
    92c4:	andeq	lr, r0, r4, asr #8
    92c8:			; <UNDEFINED> instruction: 0x000002b8
    92cc:	andeq	r0, r0, ip, lsr #5
    92d0:	andeq	lr, r0, sl, asr r4
    92d4:	andeq	lr, r0, ip, ror #8
    92d8:	andeq	lr, r0, r2, lsl #9
    92dc:	andeq	r0, r2, r6, ror #30
    92e0:	andeq	lr, r0, lr, ror #1
    92e4:	andeq	r0, r0, r0, lsr #5
    92e8:	andeq	lr, r0, r2, lsr #2
    92ec:	andeq	lr, r0, r2, ror #1
    92f0:	andeq	lr, r0, r0, ror r1
    92f4:	muleq	r0, r0, r1
    92f8:	andeq	lr, r0, r8, lsl r1
    92fc:	muleq	r0, r2, r0
    9300:	strdeq	lr, [r0], -sl
    9304:	andeq	lr, r0, r4, lsr #2
    9308:	andeq	lr, r0, lr, lsl #2
    930c:	andeq	lr, r0, r4
    9310:	andeq	lr, r0, lr, lsl #1
    9314:	andeq	lr, r0, r8, lsr r0
    9318:	andeq	sp, r0, r0, lsr #30
    931c:	andeq	lr, r0, r8, lsr #9
    9320:	muleq	r0, r6, r4
    9324:	andeq	sp, r0, r0, lsr #30
    9328:	andeq	sp, r0, r4, ror lr
    932c:	andeq	lr, r0, r0, ror r0
    9330:	andeq	sp, r0, r0, asr #26
    9334:	andeq	sp, r0, r8, lsr sp
    9338:	andeq	sp, r0, ip, lsr #26
    933c:	andeq	lr, r0, r8, ror #7
    9340:	andeq	sp, r0, r2, lsr #9
    9344:	ldrdeq	lr, [r0], -r4
    9348:	andeq	sp, r0, r2, asr #7
    934c:	andeq	sp, r0, lr, lsl #26
    9350:			; <UNDEFINED> instruction: 0x0000e3b0
    9354:	muleq	r0, lr, r3
    9358:	muleq	r0, sl, r3
    935c:	andeq	sp, r0, r8, lsl #7
    9360:	svcmi	0x00f0e92d
    9364:	stc	6, cr4, [sp, #-84]!	; 0xffffffac
    9368:	strcs	r8, [r0], #-2824	; 0xfffff4f8
    936c:	strmi	r4, [r7], -r2, lsr #12
    9370:			; <UNDEFINED> instruction: 0xf8df4608
    9374:	mcr	5, 0, fp, cr10, cr0, {6}
    9378:			; <UNDEFINED> instruction: 0xf8df5a90
    937c:	adcslt	r5, r7, ip, asr #11
    9380:	bne	444bb4 <strvisx@@Base+0x430e40>
    9384:			; <UNDEFINED> instruction: 0x4621447d
    9388:	ldrbtmi	r9, [fp], #774	; 0x306
    938c:	ldrcc	pc, [ip, #2271]!	; 0x8df
    9390:	ldmdavs	fp, {r0, r1, r3, r5, r6, r7, fp, ip, lr}
    9394:			; <UNDEFINED> instruction: 0xf04f9335
    9398:	blge	389fa0 <strvisx@@Base+0x37622c>
    939c:	strls	r9, [lr], #-1033	; 0xfffffbf7
    93a0:	mcrrls	3, 0, r9, r8, cr15
    93a4:	stmia	r8!, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    93a8:	beq	fe444bd4 <strvisx@@Base+0xfe430e60>
    93ac:			; <UNDEFINED> instruction: 0xf0003001
    93b0:	mrcge	2, 0, r8, cr10, cr11, {3}
    93b4:	bne	fe444c20 <strvisx@@Base+0xfe430eac>
    93b8:	ldrtmi	r2, [r2], -r3
    93bc:	svc	0x00fcf7f8
    93c0:	strmi	r1, [r5], -r2, asr #24
    93c4:	subshi	pc, sp, #0
    93c8:			; <UNDEFINED> instruction: 0xf4039b1e
    93cc:			; <UNDEFINED> instruction: 0xf5b34370
    93d0:			; <UNDEFINED> instruction: 0xf0404f00
    93d4:	blge	429cf0 <strvisx@@Base+0x415f7c>
    93d8:			; <UNDEFINED> instruction: 0x46194630
    93dc:	bcc	fe444c10 <strvisx@@Base+0xfe430e9c>
    93e0:	cdp2	0, 8, cr15, cr6, cr0, {0}
    93e4:	bls	430044 <strvisx@@Base+0x41c2d0>
    93e8:	movweq	pc, #33731	; 0x83c3	; <UNPREDICTABLE>
    93ec:	blls	1ae04c <strvisx@@Base+0x19a2d8>
    93f0:	tsteq	r3, r2, lsr #32	; <UNPREDICTABLE>
    93f4:	ldmdblt	r3, {r4, r8, ip, pc}
    93f8:	andeq	pc, fp, #34	; 0x22
    93fc:	sfmcs	f1, 1, [r0], {16}
    9400:	addshi	pc, r1, r0, asr #32
    9404:			; <UNDEFINED> instruction: 0xf0014625
    9408:	strmi	pc, [r6], -pc, asr #29
    940c:			; <UNDEFINED> instruction: 0xf0002800
    9410:	ldmdbvs	fp!, {r3, r4, r6, r9, pc}^
    9414:	ldfnee	f2, [sl], {3}
    9418:	movwls	r6, #20858	; 0x517a
    941c:			; <UNDEFINED> instruction: 0xf0029203
    9420:	stmdacs	r0, {r0, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    9424:	subshi	pc, r5, #64	; 0x40
    9428:	ldrtmi	r9, [r0], -r5, lsl #18
    942c:	cdp2	0, 7, cr15, cr14, cr2, {0}
    9430:			; <UNDEFINED> instruction: 0xf0402800
    9434:	cdp	2, 1, cr8, cr10, cr14, {2}
    9438:			; <UNDEFINED> instruction: 0x46301a90
    943c:			; <UNDEFINED> instruction: 0xf82af003
    9440:			; <UNDEFINED> instruction: 0xf0402800
    9444:	sfmcs	f0, 1, [r0], {70}	; 0x46
    9448:	svclt	0x00144630
    944c:	tstcs	sl, lr, lsl #2
    9450:	cdp2	0, 6, cr15, cr12, cr2, {0}
    9454:			; <UNDEFINED> instruction: 0xf0402800
    9458:	mrc	2, 0, r8, cr11, cr12, {1}
    945c:			; <UNDEFINED> instruction: 0x46301a90
    9460:			; <UNDEFINED> instruction: 0xff40f000
    9464:			; <UNDEFINED> instruction: 0xf0402800
    9468:			; <UNDEFINED> instruction: 0x46318234
    946c:			; <UNDEFINED> instruction: 0xf7fd4638
    9470:			; <UNDEFINED> instruction: 0xf8ddfbab
    9474:			; <UNDEFINED> instruction: 0xf8df8014
    9478:	mrc	4, 0, r0, cr10, cr8, {6}
    947c:			; <UNDEFINED> instruction: 0x46412a90
    9480:			; <UNDEFINED> instruction: 0xf0034478
    9484:			; <UNDEFINED> instruction: 0x4630fcd9
    9488:			; <UNDEFINED> instruction: 0xffd8f001
    948c:	strbcc	pc, [r4], #2271	; 0x8df	; <UNPREDICTABLE>
    9490:	bge	44bcc <strvisx@@Base+0x30e58>
    9494:	ldrbtmi	sl, [fp], #-2570	; 0xfffff5f6
    9498:	ldrtmi	r4, [r8], -r1, asr #12
    949c:	ldc2	7, cr15, [r0, #1012]!	; 0x3f4
    94a0:	beq	444cd0 <strvisx@@Base+0x430f5c>
    94a4:			; <UNDEFINED> instruction: 0xf0002800
    94a8:	ldmvs	r8!, {r0, r1, r2, r3, r4, r9, pc}
    94ac:	stmdaeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    94b0:	ldc2	0, cr15, [r2, #-12]
    94b4:	stmdbeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    94b8:	smlabblt	ip, r2, r6, r4
    94bc:	stmdbhi	r2, {r0, r2, r4, r6, r7, r8, fp, sp, lr, pc}
    94c0:	ldrcc	pc, [r4], #2271	; 0x8df
    94c4:	stmdbhi	ip, {r0, r2, r3, r6, r7, r8, fp, sp, lr, pc}
    94c8:	andcc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    94cc:	ldmdavs	fp, {r0, r1, r2, r8, r9, ip, pc}
    94d0:			; <UNDEFINED> instruction: 0xf0402b00
    94d4:	bls	169aa8 <strvisx@@Base+0x155d34>
    94d8:			; <UNDEFINED> instruction: 0xf8df2400
    94dc:	andls	r3, r2, #128, 8	; 0x80000000
    94e0:	ldrbtcs	pc, [ip], #-2271	; 0xfffff721	; <UNPREDICTABLE>
    94e4:	andcc	pc, r3, fp, asr r8	; <UNPREDICTABLE>
    94e8:	movwls	r4, #17530	; 0x447a
    94ec:	bcs	fe444d14 <strvisx@@Base+0xfe430fa0>
    94f0:	ldrbtcc	pc, [r0], #-2271	; 0xfffff721	; <UNPREDICTABLE>
    94f4:	ldrbtcs	pc, [r0], #-2271	; 0xfffff721	; <UNPREDICTABLE>
    94f8:	ldrbtmi	r4, [sl], #-1147	; 0xfffffb85
    94fc:	bcc	444d24 <strvisx@@Base+0x430fb0>
    9500:	bcs	444d2c <strvisx@@Base+0x430fb8>
    9504:	ldmdavs	sl, {r2, r8, r9, fp, ip, pc}
    9508:	tstmi	r3, #9216	; 0x2400
    950c:	blls	3bd5d8 <strvisx@@Base+0x3a9864>
    9510:			; <UNDEFINED> instruction: 0xf0002b00
    9514:	stfcsd	f0, [r0], {23}
    9518:			; <UNDEFINED> instruction: 0xf8dfd144
    951c:	stmdbls	r2, {r4, r6, sl}
    9520:			; <UNDEFINED> instruction: 0xf0034478
    9524:	mrc	8, 0, APSR_nzcv, cr10, cr15, {6}
    9528:	andcs	r1, r0, #144, 20	; 0x90000
    952c:			; <UNDEFINED> instruction: 0xf7fe4638
    9530:			; <UNDEFINED> instruction: 0x4605fc9f
    9534:	ldmib	r0, {r5, r7, r8, ip, sp, pc}^
    9538:	ldmib	sp, {r1, r8, r9, sp}^
    953c:	addmi	r0, r2, #-2147483639	; 0x80000009
    9540:	tsteq	r1, r3, ror fp
    9544:	bicshi	pc, ip, r0, lsl #5
    9548:	mufe	f2, f1, f0
    954c:			; <UNDEFINED> instruction: 0x91000a90
    9550:	stm	sl, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    9554:	svclt	0x00083101
    9558:	svccc	0x00fff1b0
    955c:	svcge	0x0053f47f
    9560:	mvnscc	pc, #79	; 0x4f
    9564:	beq	fe444dd0 <strvisx@@Base+0xfe43105c>
    9568:	bcc	fe444d94 <strvisx@@Base+0xfe431020>
    956c:	ldmda	lr!, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    9570:	mrc	1, 0, lr, cr9, cr5, {0}
    9574:	ldmvs	sl!, {r4, r7, r9, fp, ip, lr}
    9578:			; <UNDEFINED> instruction: 0x46284651
    957c:	svc	0x0042f7f8
    9580:	cmnle	pc, r3, asr #24
    9584:	ldmib	ip!, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    9588:	stmdacs	fp, {fp, sp, lr}
    958c:	stmdacs	r4, {r3, r4, r8, r9, sl, fp, ip, sp, pc}
    9590:			; <UNDEFINED> instruction: 0xf7f8d0f1
    9594:	mrc	14, 0, lr, cr11, cr0, {1}
    9598:			; <UNDEFINED> instruction: 0x46021a10
    959c:	ldrbtmi	r4, [r8], #-2292	; 0xfffff70c
    95a0:			; <UNDEFINED> instruction: 0xf8a0f003
    95a4:	ldrdlt	pc, [r8], -sp
    95a8:	ldrtmi	r2, [r0], -r0, lsl #10
    95ac:			; <UNDEFINED> instruction: 0xff46f001
    95b0:			; <UNDEFINED> instruction: 0x46384631
    95b4:			; <UNDEFINED> instruction: 0xf7fd2200
    95b8:			; <UNDEFINED> instruction: 0xf10dfb87
    95bc:	ldrtmi	r0, [r0], -r3, lsr #2
    95c0:	blx	fe7455d0 <strvisx@@Base+0xfe73185c>
    95c4:			; <UNDEFINED> instruction: 0xf0402800
    95c8:	stmdbge	fp, {r6, r8, pc}
    95cc:			; <UNDEFINED> instruction: 0xf0024630
    95d0:	stmdacs	r0, {r0, r1, r3, r5, r6, r9, fp, ip, sp, lr, pc}
    95d4:	teqhi	r9, r0, asr #32	; <UNPREDICTABLE>
    95d8:	mlacs	r3, sp, r8, pc	; <UNPREDICTABLE>
    95dc:			; <UNDEFINED> instruction: 0xf0402a65
    95e0:	stmdbge	r9, {r5, r7, r8, pc}
    95e4:			; <UNDEFINED> instruction: 0xf0024630
    95e8:	stmdacs	r0, {r0, r1, r2, r3, r4, r6, r9, fp, ip, sp, lr, pc}
    95ec:	orrshi	pc, lr, r0, asr #32
    95f0:	vnmls.f16	s18, s16, s18
    95f4:			; <UNDEFINED> instruction: 0xf0030a90
    95f8:	blls	3c867c <strvisx@@Base+0x3b4908>
    95fc:	ldmdblt	fp, {r0, r1, r3, r8, fp, ip, pc}
    9600:	blcs	41c34 <strvisx@@Base+0x2dec0>
    9604:	orrhi	pc, r9, r0
    9608:			; <UNDEFINED> instruction: 0x461c681a
    960c:	addmi	r6, sl, #442368	; 0x6c000
    9610:	stmdbvs	r2!, {r0, r1, r2, r4, r5, r6, r7, r8, ip, lr, pc}^
    9614:			; <UNDEFINED> instruction: 0xf0002b00
    9618:			; <UNDEFINED> instruction: 0x615a8093
    961c:	andcc	lr, r4, #212, 18	; 0x350000
    9620:			; <UNDEFINED> instruction: 0xf8cd6013
    9624:	ldmib	r4, {r3, ip, sp, pc}^
    9628:	blls	f8638 <strvisx@@Base+0xe48c4>
    962c:	stmdavs	r1!, {r1, r5, r6, fp, sp, lr}
    9630:	cdp	3, 1, cr3, cr9, cr1, {0}
    9634:	stmib	sp, {r4, r9, fp}^
    9638:	movwls	fp, #15360	; 0x3c00
    963c:	blx	fff45652 <strvisx@@Base+0xfff318de>
    9640:	movwcs	r6, #2146	; 0x862
    9644:	ldrdeq	lr, [ip, -sp]
    9648:	blx	fe5c567e <strvisx@@Base+0xfe5b190a>
    964c:	strtmi	r4, [r0], -r2, lsl #12
    9650:	stmib	sp, {r0, r1, r3, r9, sl, lr}^
    9654:			; <UNDEFINED> instruction: 0xf7f8230c
    9658:	ubfxne	lr, r0, #29, #12
    965c:	strbmi	r4, [r9], -r0, asr #12
    9660:			; <UNDEFINED> instruction: 0xf00b462a
    9664:	stmdacs	r0, {r0, r3, r7, r8, r9, fp, ip, sp, lr, pc}
    9668:			; <UNDEFINED> instruction: 0xf1714680
    966c:	strmi	r0, [r9], r0, lsl #6
    9670:	svcge	0x0048f6bf
    9674:	stmiami	r0, {r0, r1, r2, r3, r4, r5, r7, r8, fp, lr}^
    9678:	ldrbtmi	r4, [r8], #-1145	; 0xfffffb87
    967c:	orrvc	pc, ip, r1, lsl #10
    9680:			; <UNDEFINED> instruction: 0xf830f003
    9684:	stmdacs	r0, {r0, r2, r9, sl, lr}
    9688:	svcge	0x0041f43f
    968c:	andcs	r2, r1, r8, lsl r1
    9690:	ldc2	0, cr15, [r6], #-12
    9694:	andcs	r9, r0, #2048	; 0x800
    9698:	bleq	85aac <strvisx@@Base+0x71d38>
    969c:	strmi	r6, [r4], -r5, asr #32
    96a0:	andlt	pc, r0, r0, asr #17
    96a4:	blls	3daf6c <strvisx@@Base+0x3c71f8>
    96a8:			; <UNDEFINED> instruction: 0xf1046122
    96ac:	stmib	r4, {r4, r9}^
    96b0:	cmnvs	r3, r2, lsl #18
    96b4:	andls	r6, pc, #28
    96b8:	cdp2	0, 12, cr15, cr0, cr1, {0}
    96bc:	ldrtmi	r2, [r0], -r6, lsl #2
    96c0:	ldc2	0, cr15, [r0, #8]
    96c4:			; <UNDEFINED> instruction: 0xf0402800
    96c8:	stmdavs	r1!, {r0, r2, r4, r5, r7, pc}
    96cc:			; <UNDEFINED> instruction: 0xf0024630
    96d0:	stmdacs	r0, {r0, r2, r3, r5, r8, sl, fp, ip, sp, lr, pc}
    96d4:	adchi	pc, lr, r0, asr #32
    96d8:	bne	444f48 <strvisx@@Base+0x4311d4>
    96dc:	bls	29afa4 <strvisx@@Base+0x287230>
    96e0:	cdp2	0, 9, cr15, cr6, cr2, {0}
    96e4:			; <UNDEFINED> instruction: 0xf0402800
    96e8:	strbmi	r8, [r2], -r5, lsr #1
    96ec:	ldrtmi	r4, [r0], -fp, asr #12
    96f0:	stc2l	0, cr15, [r4], #8
    96f4:			; <UNDEFINED> instruction: 0xf0402800
    96f8:			; <UNDEFINED> instruction: 0x462a809d
    96fc:			; <UNDEFINED> instruction: 0x46304651
    9700:	cdp2	0, 8, cr15, cr6, cr2, {0}
    9704:			; <UNDEFINED> instruction: 0xf0402800
    9708:			; <UNDEFINED> instruction: 0x46318095
    970c:			; <UNDEFINED> instruction: 0xf7fd4638
    9710:			; <UNDEFINED> instruction: 0x4642fa5b
    9714:	cfmsub32	mvax2, mvfx4, mvfx8, mvfx11
    9718:			; <UNDEFINED> instruction: 0x46590a10
    971c:			; <UNDEFINED> instruction: 0xf0039500
    9720:	blls	188554 <strvisx@@Base+0x1747e0>
    9724:	addsmi	r9, r3, #8192	; 0x2000
    9728:	svcge	0x003ff43f
    972c:	ldmvs	fp!, {r0, r1, r9, fp, ip, pc}^
    9730:	andeq	lr, r2, #175104	; 0x2ac00
    9734:	svclt	0x0038429a
    9738:	andlt	pc, r8, sp, asr #17
    973c:	ldr	sp, [r4, -sp, lsl #7]!
    9740:	strb	r9, [sp, -pc, lsl #4]!
    9744:			; <UNDEFINED> instruction: 0xf0014630
    9748:	blls	208e44 <strvisx@@Base+0x1f50d0>
    974c:	blcs	237c0 <strvisx@@Base+0xfa4c>
    9750:	ldrbmi	sp, [r0], -sp, ror #2
    9754:	mrc	7, 2, APSR_nzcv, cr0, cr8, {7}
    9758:	stmdacs	r0, {r0, r3, fp, ip, pc}
    975c:	mnfem	f5, f7
    9760:			; <UNDEFINED> instruction: 0xf7f80a90
    9764:	andcc	lr, r1, r4, asr #30
    9768:	blls	1bd8b8 <strvisx@@Base+0x1a9b44>
    976c:	blcs	2ff9c <strvisx@@Base+0x1c228>
    9770:	blls	127dc48 <strvisx@@Base+0x1269ed4>
    9774:			; <UNDEFINED> instruction: 0xee1abb5b
    9778:			; <UNDEFINED> instruction: 0x46381a10
    977c:			; <UNDEFINED> instruction: 0xf810f7fe
    9780:	movwcs	fp, #16648	; 0x4108
    9784:	cdp	3, 1, cr9, cr10, cr9, {0}
    9788:			; <UNDEFINED> instruction: 0xf7f80a10
    978c:	stmdals	r9, {r1, r2, r4, r5, r9, sl, fp, sp, lr, pc}
    9790:	svclt	0x00183800
    9794:			; <UNDEFINED> instruction: 0xf00b2001
    9798:	vmls.f64	d15, d25, d1
    979c:	bmi	1dcc1e4 <strvisx@@Base+0x1db8470>
    97a0:	ldrbtmi	r4, [sl], #-2922	; 0xfffff496
    97a4:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    97a8:	subsmi	r9, sl, r5, lsr fp
    97ac:	mnfez	f5, f7
    97b0:	mlaslt	r7, r0, sl, r0
    97b4:	blhi	244ab0 <strvisx@@Base+0x230d3c>
    97b8:	svchi	0x00f0e8bd
    97bc:	vnmls.f16	s20, s22, s24
    97c0:	ldmib	sp, {r4, r9, fp}^
    97c4:	tstls	r0, r6, lsr #6
    97c8:	blx	ffac57d4 <strvisx@@Base+0xffab1a60>
    97cc:	cfmsub32	mvax4, mvfx14, mvfx10, mvfx3
    97d0:			; <UNDEFINED> instruction: 0x46381a10
    97d4:	mcr2	7, 4, pc, cr12, cr14, {7}	; <UNPREDICTABLE>
    97d8:	strb	r9, [ip, sl, lsl #20]
    97dc:	bcc	fe445050 <strvisx@@Base+0xfe4312dc>
    97e0:	mrc	6, 0, r4, cr10, cr8, {1}
    97e4:			; <UNDEFINED> instruction: 0xf7fe1a10
    97e8:	bls	2c8704 <strvisx@@Base+0x2b4990>
    97ec:			; <UNDEFINED> instruction: 0xf000e7c1
    97f0:	mrc	13, 0, APSR_nzcv, cr10, cr13, {5}
    97f4:			; <UNDEFINED> instruction: 0x46021a90
    97f8:	ldrbtmi	r4, [r8], #-2145	; 0xfffff79f
    97fc:	blx	bc5810 <strvisx@@Base+0xbb1a9c>
    9800:	beq	fe44506c <strvisx@@Base+0xfe4312f8>
    9804:	movwls	r2, #37636	; 0x9304
    9808:	mrc	7, 7, APSR_nzcv, cr0, cr8, {7}
    980c:			; <UNDEFINED> instruction: 0xd1ac3001
    9810:	ldmda	r6!, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    9814:			; <UNDEFINED> instruction: 0xf7f86800
    9818:	cdp	12, 1, cr14, cr11, cr14, {7}
    981c:			; <UNDEFINED> instruction: 0x46021a10
    9820:	ldrbtmi	r4, [r8], #-2136	; 0xfffff7a8
    9824:	blx	6c5838 <strvisx@@Base+0x6b1ac4>
    9828:	movwls	r2, #37636	; 0x9304
    982c:			; <UNDEFINED> instruction: 0xf001e79d
    9830:	str	pc, [lr, pc, ror #21]
    9834:	blx	745842 <strvisx@@Base+0x731ace>
    9838:	ldrbtmi	r4, [fp], #-2899	; 0xfffff4ad
    983c:	orrvc	pc, ip, r3, lsl #10
    9840:	ldmdami	r2, {r1, r9, sl, lr}^
    9844:			; <UNDEFINED> instruction: 0xf0024478
    9848:			; <UNDEFINED> instruction: 0xf001ff4d
    984c:	blmi	1448498 <strvisx@@Base+0x1434724>
    9850:			; <UNDEFINED> instruction: 0xf503447b
    9854:	strmi	r7, [r2], -ip, lsl #3
    9858:	ldrbtmi	r4, [r8], #-2126	; 0xfffff7b2
    985c:			; <UNDEFINED> instruction: 0xff42f002
    9860:	cdp	8, 1, cr4, cr11, cr13, {2}
    9864:	ldrbtmi	r1, [r8], #-2576	; 0xfffff5f0
    9868:			; <UNDEFINED> instruction: 0xf9f8f003
    986c:	beq	fe4450d8 <strvisx@@Base+0xfe431364>
    9870:	mrc	7, 5, APSR_nzcv, cr12, cr8, {7}
    9874:	mvnscc	pc, #79	; 0x4f
    9878:	bcc	fe4450a4 <strvisx@@Base+0xfe431330>
    987c:			; <UNDEFINED> instruction: 0xf7f8e78f
    9880:			; <UNDEFINED> instruction: 0xf7f9ef0c
    9884:	stmdavs	r0, {r1, r2, r3, r4, r5, fp, sp, lr, pc}
    9888:	ldc	7, cr15, [r4], #992	; 0x3e0
    988c:	bne	445100 <strvisx@@Base+0x43138c>
    9890:	stmdami	r2, {r1, r9, sl, lr}^
    9894:			; <UNDEFINED> instruction: 0xf0034478
    9898:	vnmla.f16	s30, s19, s3
    989c:			; <UNDEFINED> instruction: 0xf7f80a90
    98a0:	cdp	14, 0, cr14, cr9, cr6, {5}
    98a4:			; <UNDEFINED> instruction: 0xe77a5a90
    98a8:	stmda	sl!, {r0, r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    98ac:			; <UNDEFINED> instruction: 0xf7f86800
    98b0:	cdp	12, 1, cr14, cr11, cr2, {5}
    98b4:			; <UNDEFINED> instruction: 0x46021a10
    98b8:	ldrbtmi	r4, [r8], #-2105	; 0xfffff7c7
    98bc:			; <UNDEFINED> instruction: 0xf9cef003
    98c0:	ldmdbmi	r8!, {r0, r2, r3, r5, r6, r8, r9, sl, sp, lr, pc}
    98c4:	ldrbtmi	r4, [r9], #-2104	; 0xfffff7c8
    98c8:			; <UNDEFINED> instruction: 0xf5014478
    98cc:			; <UNDEFINED> instruction: 0xf002718c
    98d0:			; <UNDEFINED> instruction: 0xf001ff09
    98d4:	blmi	d88410 <strvisx@@Base+0xd7469c>
    98d8:			; <UNDEFINED> instruction: 0xf503447b
    98dc:	strmi	r7, [r2], -ip, lsl #3
    98e0:	ldrbtmi	r4, [r8], #-2099	; 0xfffff7cd
    98e4:	cdp2	0, 15, cr15, cr14, cr2, {0}
    98e8:	mvnscc	pc, #79	; 0x4f
    98ec:	beq	fe445158 <strvisx@@Base+0xfe4313e4>
    98f0:	bcc	fe44511c <strvisx@@Base+0xfe4313a8>
    98f4:	mrc	7, 3, APSR_nzcv, cr10, cr8, {7}
    98f8:			; <UNDEFINED> instruction: 0xf0014630
    98fc:	strb	pc, [lr, -r3, ror #25]	; <UNPREDICTABLE>
    9900:	ldrbtmi	r4, [r8], #-2092	; 0xfffff7d4
    9904:			; <UNDEFINED> instruction: 0xf9aaf003
    9908:	beq	fe445174 <strvisx@@Base+0xfe431400>
    990c:	mcr	7, 3, pc, cr14, cr8, {7}	; <UNPREDICTABLE>
    9910:	mvnscc	pc, #79	; 0x4f
    9914:	bcc	fe445140 <strvisx@@Base+0xfe4313cc>
    9918:	stmdami	r7!, {r0, r6, r8, r9, sl, sp, lr, pc}
    991c:			; <UNDEFINED> instruction: 0xf0024478
    9920:	stmdami	r6!, {r0, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    9924:	ldrbtmi	r2, [r8], #-357	; 0xfffffe9b
    9928:	cdp2	0, 13, cr15, cr12, cr2, {0}
    992c:	blx	fe845938 <strvisx@@Base+0xfe831bc4>
    9930:	ldrbtmi	r4, [fp], #-2851	; 0xfffff4dd
    9934:	orrvc	pc, ip, r3, lsl #10
    9938:	stmdami	r2!, {r1, r9, sl, lr}
    993c:			; <UNDEFINED> instruction: 0xf0024478
    9940:	svclt	0x0000fed1
    9944:	andeq	r0, r2, r6, ror r9
    9948:	andeq	r0, r2, ip, ror r9
    994c:	andeq	r0, r0, r0, asr #5
    9950:	andeq	sp, r0, r4, ror #20
    9954:	andeq	sp, r0, r6, ror sl
    9958:			; <UNDEFINED> instruction: 0x000002b8
    995c:	andeq	r0, r0, ip, lsr #5
    9960:	andeq	sp, r0, r4, asr r2
    9964:	strdeq	sp, [r0], -r8
    9968:	andeq	sp, r0, r6, ror #28
    996c:	andeq	sp, r0, r0, lsl #28
    9970:	andeq	sp, r0, sl, ror #28
    9974:	andeq	sp, r0, r4, asr #31
    9978:	andeq	sp, r0, r2, lsl sp
    997c:	andeq	r0, r2, lr, asr r5
    9980:	andeq	sp, r0, r2, lsr #23
    9984:	andeq	sp, r0, r2, lsr #23
    9988:	andeq	sp, r0, r2, lsl #28
    998c:	strdeq	ip, [r0], -r0
    9990:	andeq	sp, r0, ip, ror #27
    9994:	ldrdeq	ip, [r0], -sl
    9998:	andeq	sp, r0, sl, lsr sl
    999c:	andeq	sp, r0, r8, ror #19
    99a0:	muleq	r0, r2, r9
    99a4:	andeq	sp, r0, r6, ror sp
    99a8:	andeq	ip, r0, r0, lsr lr
    99ac:	andeq	sp, r0, r4, ror #26
    99b0:	andeq	ip, r0, r2, asr sp
    99b4:			; <UNDEFINED> instruction: 0x0000d9ba
    99b8:	andeq	sp, r0, ip, asr #21
    99bc:	andeq	sp, r0, lr, lsl #20
    99c0:	andeq	sp, r0, sl, lsl #26
    99c4:	strdeq	ip, [r0], -r8
    99c8:			; <UNDEFINED> instruction: 0x460fb5f8
    99cc:			; <UNDEFINED> instruction: 0xf7f84605
    99d0:	strmi	lr, [r4], -r8, ror #26
    99d4:			; <UNDEFINED> instruction: 0xf7f84638
    99d8:	strmi	lr, [r4], #-3428	; 0xfffff29c
    99dc:	strtmi	r3, [r0], -r2, lsl #8
    99e0:	blx	1ec59f4 <strvisx@@Base+0x1eb1c80>
    99e4:	strtmi	r4, [r9], -r2, lsr #12
    99e8:			; <UNDEFINED> instruction: 0xf0094606
    99ec:	stmdavc	fp!, {r0, r2, r4, r7, r8, sl, fp, ip, sp, lr, pc}
    99f0:			; <UNDEFINED> instruction: 0x4628b13b
    99f4:	ldcl	7, cr15, [r4, #-992]	; 0xfffffc20
    99f8:			; <UNDEFINED> instruction: 0xf8104428
    99fc:	blcs	bd8a08 <strvisx@@Base+0xbc4c94>
    9a00:	strtmi	sp, [r2], -r6, lsl #2
    9a04:			; <UNDEFINED> instruction: 0x46304639
    9a08:	stc2l	0, cr15, [lr, #-36]	; 0xffffffdc
    9a0c:	ldcllt	6, cr4, [r8, #192]!	; 0xc0
    9a10:	strtmi	r4, [r2], -r6, lsl #18
    9a14:	ldrbtmi	r4, [r9], #-1584	; 0xfffff9d0
    9a18:	stc2l	0, cr15, [r6, #-36]	; 0xffffffdc
    9a1c:	ldrtmi	r4, [r9], -r2, lsr #12
    9a20:			; <UNDEFINED> instruction: 0xf0094630
    9a24:	ldrtmi	pc, [r0], -r1, asr #26	; <UNPREDICTABLE>
    9a28:	svclt	0x0000bdf8
    9a2c:	andeq	sp, r0, lr, lsl #20
    9a30:	svcmi	0x00f0e92d
    9a34:	stc	6, cr4, [sp, #-576]!	; 0xfffffdc0
    9a38:	blcs	102c648 <strvisx@@Base+0x10188d4>
    9a3c:	bmi	fe95ccd4 <strvisx@@Base+0xfe948f60>
    9a40:	mcrmi	4, 5, r4, cr5, cr12, {3}
    9a44:	ldrbtmi	fp, [lr], #-147	; 0xffffff6d
    9a48:	stmiapl	r2!, {r0, r3, r8, r9, ip, pc}
    9a4c:	ldrsbtge	pc, [r8], #-141	; 0xffffff73	; <UNPREDICTABLE>
    9a50:	andsls	r6, r1, #1179648	; 0x120000
    9a54:	andeq	pc, r0, #79	; 0x4f
    9a58:	msrhi	CPSR_fx, r0
    9a5c:	strmi	r4, [r9], r3, lsl #13
    9a60:	svceq	0x0000f1ba
    9a64:	mrshi	pc, (UNDEF: 4)	; <UNPREDICTABLE>
    9a68:			; <UNDEFINED> instruction: 0x3018f8da
    9a6c:	cmnmi	r0, #50331648	; 0x3000000	; <UNPREDICTABLE>
    9a70:	svcmi	0x0080f5b3
    9a74:	tsthi	r4, r0, asr #32	; <UNPREDICTABLE>
    9a78:	blcs	30700 <strvisx@@Base+0x1c98c>
    9a7c:	rschi	pc, ip, r0, asr #32
    9a80:	ldrdcc	pc, [r0], -sl
    9a84:			; <UNDEFINED> instruction: 0xf140075d
    9a88:			; <UNDEFINED> instruction: 0xf8da80df
    9a8c:	vmov.i32	d17, #152	; 0x00000098
    9a90:	strbmi	r0, [r0], -r9, lsl #2
    9a94:	bl	feec7a7c <strvisx@@Base+0xfeeb3d08>
    9a98:	strmi	r1, [r7], -r4, asr #24
    9a9c:			; <UNDEFINED> instruction: 0xf7f8d105
    9aa0:	stmdavs	r0, {r4, r5, r8, r9, sl, fp, sp, lr, pc}
    9aa4:			; <UNDEFINED> instruction: 0xf0402811
    9aa8:	bge	329e78 <strvisx@@Base+0x316104>
    9aac:	ldrbmi	r4, [r8], -r9, asr #12
    9ab0:	mrc2	7, 6, pc, cr8, cr13, {7}
    9ab4:	ldclne	6, cr4, [r8], #-28	; 0xffffffe4
    9ab8:	mrshi	pc, (UNDEF: 2)	; <UNPREDICTABLE>
    9abc:	ldmdavs	ip, {r2, r3, r8, r9, fp, ip, pc}
    9ac0:	strtmi	r4, [r7], -r5, lsr #12
    9ac4:	eorsle	r2, pc, r0, lsl #24
    9ac8:	strcs	r4, [r0, #-2692]	; 0xfffff57c
    9acc:	strtmi	r4, [ip], -r4, lsl #23
    9ad0:	mcr	4, 0, r4, cr8, cr10, {3}
    9ad4:	bmi	fe0d431c <strvisx@@Base+0xfe0c05a8>
    9ad8:	andls	r4, sl, #2046820352	; 0x7a000000
    9adc:			; <UNDEFINED> instruction: 0x462e58f3
    9ae0:	bpl	20421c <strvisx@@Base+0x1f04a8>
    9ae4:			; <UNDEFINED> instruction: 0xf8da469a
    9ae8:	bllt	16d5af0 <strvisx@@Base+0x16c1d7c>
    9aec:			; <UNDEFINED> instruction: 0xf7f84628
    9af0:	strtmi	lr, [r0], -r4, lsl #25
    9af4:	stc	7, cr15, [r0], {248}	; 0xf8
    9af8:	strbmi	r9, [r0], -ip, lsl #22
    9afc:	ldmdavs	pc, {r0, r1, r3, r4, r7, r8, fp, ip, lr}	; <UNPREDICTABLE>
    9b00:			; <UNDEFINED> instruction: 0xf7ff4639
    9b04:	ldrtmi	pc, [r9], -r1, ror #30	; <UNPREDICTABLE>
    9b08:	strbmi	r4, [r8], -r5, lsl #12
    9b0c:			; <UNDEFINED> instruction: 0xff5cf7ff
    9b10:	ldrsbtgt	pc, [r0], -sp	; <UNPREDICTABLE>
    9b14:	andcs	pc, r6, ip, asr r8	; <UNPREDICTABLE>
    9b18:	vst1.8	{d6-d7}, [r3 :64], r3
    9b1c:			; <UNDEFINED> instruction: 0xf5b34370
    9b20:	strmi	r4, [r4], -r0, lsl #31
    9b24:			; <UNDEFINED> instruction: 0xf5b3d02c
    9b28:	subsle	r4, r5, r0, lsl #30
    9b2c:	cfmsub32	mvax0, mvfx4, mvfx8, mvfx1
    9b30:			; <UNDEFINED> instruction: 0xf0030a10
    9b34:			; <UNDEFINED> instruction: 0xf8ddf8d9
    9b38:			; <UNDEFINED> instruction: 0x3604c030
    9b3c:	andcc	pc, r6, ip, asr r8	; <UNPREDICTABLE>
    9b40:	bicsle	r2, r0, r0, lsl #22
    9b44:	bvc	2042c0 <strvisx@@Base+0x1f054c>
    9b48:			; <UNDEFINED> instruction: 0xf7f84628
    9b4c:			; <UNDEFINED> instruction: 0x4620ec56
    9b50:	mrrc	7, 15, pc, r2, cr8	; <UNPREDICTABLE>
    9b54:	blcs	307d8 <strvisx@@Base+0x1ca64>
    9b58:	stmdals	ip, {r0, r1, r2, r4, r6, r8, ip, lr, pc}
    9b5c:			; <UNDEFINED> instruction: 0xf7fdb108
    9b60:	bmi	1888d14 <strvisx@@Base+0x1874fa0>
    9b64:	ldrbtmi	r4, [sl], #-2907	; 0xfffff4a5
    9b68:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    9b6c:	subsmi	r9, sl, r1, lsl fp
    9b70:	adchi	pc, ip, r0, asr #32
    9b74:	andslt	r4, r3, r8, lsr r6
    9b78:	blhi	c4e74 <strvisx@@Base+0xb1100>
    9b7c:	svchi	0x00f0e8bd
    9b80:	blcs	ba7c74 <strvisx@@Base+0xb93f00>
    9b84:	ldmdavc	fp!, {r1, r8, ip, lr, pc}^
    9b88:	sbcsle	r2, r6, r0, lsl #22
    9b8c:	blcs	ba7c80 <strvisx@@Base+0xb93f0c>
    9b90:	ldmdavc	fp!, {r0, r2, r8, ip, lr, pc}^
    9b94:	tstle	r2, lr, lsr #22
    9b98:	blcs	27e8c <strvisx@@Base+0x14118>
    9b9c:	stmdals	r9, {r0, r2, r3, r6, r7, ip, lr, pc}
    9ba0:	andls	r2, fp, #1073741824	; 0x40000000
    9ba4:			; <UNDEFINED> instruction: 0xf8d4f00b
    9ba8:	bls	2f1830 <strvisx@@Base+0x2ddabc>
    9bac:			; <UNDEFINED> instruction: 0xf1029702
    9bb0:	svcls	0x001f0108
    9bb4:	tstls	r0, r2, lsr #20
    9bb8:	strls	r4, [r1, -r1, lsr #12]
    9bbc:	strtmi	r9, [sl], -r4, lsl #4
    9bc0:	stmdals	r1!, {r0, r1, r9, sl, lr}
    9bc4:	ldrbmi	r9, [r8], -r3
    9bc8:			; <UNDEFINED> instruction: 0xff32f7ff
    9bcc:			; <UNDEFINED> instruction: 0xd1b21c41
    9bd0:	ldrsbtgt	pc, [r0], -sp	; <UNPREDICTABLE>
    9bd4:	ldr	r9, [r0, r7]!
    9bd8:	ldmdbls	pc, {r1, r5, r8, r9, fp, ip, pc}	; <UNPREDICTABLE>
    9bdc:			; <UNDEFINED> instruction: 0xf1029302
    9be0:	bls	84a808 <strvisx@@Base+0x836a94>
    9be4:	strmi	r9, [r1], -r0, lsl #2
    9be8:	andls	r4, r1, #88, 12	; 0x5800000
    9bec:			; <UNDEFINED> instruction: 0xf7fe462a
    9bf0:	mcrrne	14, 14, pc, r2, cr3	; <UNPREDICTABLE>
    9bf4:	orrsle	r4, lr, r3, lsl #12
    9bf8:	strtmi	r9, [sl], -sl, lsl #16
    9bfc:	movwls	r4, #30241	; 0x7621
    9c00:			; <UNDEFINED> instruction: 0xf82cf003
    9c04:	ldrsbtgt	pc, [r0], -sp	; <UNPREDICTABLE>
    9c08:			; <UNDEFINED> instruction: 0xf8dae797
    9c0c:	ldreq	r3, [fp, -r0]
    9c10:			; <UNDEFINED> instruction: 0xf8dad528
    9c14:	stmdbge	sp, {r2, r3, r4, ip, sp}
    9c18:	ldrdcs	pc, [r0], -sl	; <UNPREDICTABLE>
    9c1c:	movwls	r4, #54848	; 0xd640
    9c20:	stmib	sp, {r8, r9, sp}^
    9c24:	movwls	r2, #58127	; 0xe30f
    9c28:	mrc	7, 0, APSR_nzcv, cr10, cr8, {7}
    9c2c:	orrsle	r3, r4, r1
    9c30:	mcr	7, 3, pc, cr6, cr8, {7}	; <UNPREDICTABLE>
    9c34:			; <UNDEFINED> instruction: 0xf7f86800
    9c38:			; <UNDEFINED> instruction: 0x4641eade
    9c3c:	stmdami	fp!, {r1, r9, sl, lr}
    9c40:			; <UNDEFINED> instruction: 0xf0034478
    9c44:	str	pc, [r8, fp, lsl #16]
    9c48:	strbmi	r4, [r1], -r9, lsr #16
    9c4c:			; <UNDEFINED> instruction: 0xf0034478
    9c50:	vtst.8	d31, d16, d15
    9c54:			; <UNDEFINED> instruction: 0xe71c11ff
    9c58:	strbmi	r4, [r9], -r6, lsr #16
    9c5c:			; <UNDEFINED> instruction: 0xf0064478
    9c60:			; <UNDEFINED> instruction: 0xe70dfbf7
    9c64:	strbmi	r4, [r1], -r4, lsr #16
    9c68:			; <UNDEFINED> instruction: 0xf0034478
    9c6c:			; <UNDEFINED> instruction: 0xe774f891
    9c70:			; <UNDEFINED> instruction: 0xf7fe2201
    9c74:			; <UNDEFINED> instruction: 0x4682f8fd
    9c78:			; <UNDEFINED> instruction: 0xf47f2800
    9c7c:	ldmdami	pc, {r0, r2, r4, r5, r6, r7, r9, sl, fp, sp, pc}	; <UNPREDICTABLE>
    9c80:			; <UNDEFINED> instruction: 0xf04f4649
    9c84:	ldrbtmi	r3, [r8], #-2047	; 0xfffff801
    9c88:			; <UNDEFINED> instruction: 0xffe8f002
    9c8c:			; <UNDEFINED> instruction: 0xf7f8e769
    9c90:			; <UNDEFINED> instruction: 0x4641eab2
    9c94:	ldmdami	sl, {r1, r9, sl, lr}
    9c98:			; <UNDEFINED> instruction: 0xf0024478
    9c9c:			; <UNDEFINED> instruction: 0xe760ffdf
    9ca0:			; <UNDEFINED> instruction: 0x46494818
    9ca4:	ldrbcc	pc, [pc, pc, asr #32]!	; <UNPREDICTABLE>
    9ca8:			; <UNDEFINED> instruction: 0xf0024478
    9cac:	smmls	r8, r7, pc, pc	; <UNPREDICTABLE>
    9cb0:			; <UNDEFINED> instruction: 0x46194815
    9cb4:	ldrbcc	pc, [pc, pc, asr #32]!	; <UNPREDICTABLE>
    9cb8:			; <UNDEFINED> instruction: 0xf0024478
    9cbc:	ldrb	pc, [r0, -pc, asr #31]	; <UNPREDICTABLE>
    9cc0:			; <UNDEFINED> instruction: 0x46494812
    9cc4:			; <UNDEFINED> instruction: 0xf0024478
    9cc8:	strb	pc, [sl, -r9, asr #31]	; <UNPREDICTABLE>
    9ccc:	stcl	7, cr15, [r4], #992	; 0x3e0
    9cd0:	andeq	r0, r2, r0, asr #5
    9cd4:	andeq	r0, r0, r0, asr #5
    9cd8:			; <UNDEFINED> instruction: 0x000202ba
    9cdc:	andeq	sp, r0, ip, asr #20
    9ce0:	andeq	r0, r0, ip, lsr #5
    9ce4:	andeq	sp, r0, r0, lsr #20
    9ce8:	muleq	r2, sl, r1
    9cec:	muleq	r0, r4, r5
    9cf0:	andeq	sp, r0, r0, asr #16
    9cf4:	andeq	sp, r0, r0, lsr #16
    9cf8:	andeq	sp, r0, ip, asr #17
    9cfc:	andeq	sp, r0, lr, asr #15
    9d00:	andeq	sp, r0, r8, lsr #16
    9d04:	andeq	fp, r0, r0, lsl #20
    9d08:	andeq	sp, r0, r0, ror r7
    9d0c:	andeq	sp, r0, ip, lsl #16
    9d10:	mvnsmi	lr, sp, lsr #18
    9d14:	ldrmi	fp, [r7], -r6, lsl #1
    9d18:			; <UNDEFINED> instruction: 0x4606461d
    9d1c:			; <UNDEFINED> instruction: 0xf7fe4688
    9d20:	biclt	pc, r0, fp, asr #18
    9d24:	strmi	r9, [r4], -pc, lsl #22
    9d28:	ldrtmi	r9, [sl], -ip, lsl #18
    9d2c:	strls	r4, [r0, #-1584]	; 0xfffff9d0
    9d30:	blls	3ae948 <strvisx@@Base+0x39abd4>
    9d34:	strtmi	r9, [r1], -r1, lsl #2
    9d38:	blls	36e94c <strvisx@@Base+0x35abd8>
    9d3c:	movwcs	r9, #770	; 0x302
    9d40:	mrc2	7, 3, pc, cr6, cr15, {7}
    9d44:	strtmi	r4, [r0], -r3, lsl #12
    9d48:			; <UNDEFINED> instruction: 0xf7f8461c
    9d4c:			; <UNDEFINED> instruction: 0x4620eb56
    9d50:	pop	{r1, r2, ip, sp, pc}
    9d54:	stmdami	r4, {r4, r5, r6, r7, r8, pc}
    9d58:			; <UNDEFINED> instruction: 0xf04f4641
    9d5c:	ldrbtmi	r3, [r8], #-1279	; 0xfffffb01
    9d60:			; <UNDEFINED> instruction: 0xff7cf002
    9d64:	svclt	0x0000e7f3
    9d68:	andeq	sp, r0, r6, lsl #16
    9d6c:	svcmi	0x00f0e92d
    9d70:	stc	6, cr4, [sp, #-92]!	; 0xffffffa4
    9d74:	blcs	102c98c <strvisx@@Base+0x1018c18>
    9d78:			; <UNDEFINED> instruction: 0xf8df4ab2
    9d7c:	cdp	2, 0, cr9, cr8, cr12, {6}
    9d80:	ldmmi	r2!, {r4, r7, r9, fp}
    9d84:	ldrbtmi	fp, [r9], #177	; 0xb1
    9d88:	movwls	r4, #33912	; 0x8478
    9d8c:	ldmdavs	r2, {r1, r7, fp, ip, lr}
    9d90:			; <UNDEFINED> instruction: 0xf04f922f
    9d94:			; <UNDEFINED> instruction: 0xf0000200
    9d98:			; <UNDEFINED> instruction: 0xf10d811e
    9d9c:	andcs	r0, r3, r0, asr sl
    9da0:	bne	4455c8 <strvisx@@Base+0x431854>
    9da4:			; <UNDEFINED> instruction: 0xf7f84652
    9da8:			; <UNDEFINED> instruction: 0x4603ec52
    9dac:	andls	r3, r5, r1, lsl #6
    9db0:	msrhi	CPSR_s, r0
    9db4:			; <UNDEFINED> instruction: 0xf4039b18
    9db8:			; <UNDEFINED> instruction: 0xf5b34370
    9dbc:			; <UNDEFINED> instruction: 0xf0404f80
    9dc0:	blls	fea214 <strvisx@@Base+0xfd64a0>
    9dc4:			; <UNDEFINED> instruction: 0xf0402b00
    9dc8:			; <UNDEFINED> instruction: 0xf10d80ed
    9dcc:	ldrbmi	r0, [r8], -r8, lsr #22
    9dd0:			; <UNDEFINED> instruction: 0xf980f000
    9dd4:			; <UNDEFINED> instruction: 0x46504659
    9dd8:			; <UNDEFINED> instruction: 0xf98af000
    9ddc:	bls	2b0a24 <strvisx@@Base+0x29ccb0>
    9de0:	movweq	pc, #37827	; 0x93c3	; <UNPREDICTABLE>
    9de4:	blls	faea2c <strvisx@@Base+0xf9acb8>
    9de8:	tsteq	r3, r2, lsr #32	; <UNPREDICTABLE>
    9dec:	ldmdblt	r3, {r1, r3, r8, ip, pc}
    9df0:	andeq	pc, fp, #34	; 0x22
    9df4:	cdp	2, 1, cr9, cr8, cr10, {0}
    9df8:	movwcs	r0, #2704	; 0xa90
    9dfc:			; <UNDEFINED> instruction: 0x4639465a
    9e00:			; <UNDEFINED> instruction: 0xffdcf7fd
    9e04:			; <UNDEFINED> instruction: 0xf0402800
    9e08:	mrc	0, 0, r8, cr8, cr3, {4}
    9e0c:			; <UNDEFINED> instruction: 0xf7f80a10
    9e10:	strmi	lr, [r6], -lr, lsr #20
    9e14:			; <UNDEFINED> instruction: 0xf0002800
    9e18:	blmi	fe36a228 <strvisx@@Base+0xfe3564b4>
    9e1c:	cfcpys	mvf2, mvf9
    9e20:			; <UNDEFINED> instruction: 0x4625aa10
    9e24:	movwls	r4, #25723	; 0x647b
    9e28:	strls	r4, [r5], #-2954	; 0xfffff476
    9e2c:	movwls	r4, #38011	; 0x947b
    9e30:	ldrbtmi	r4, [fp], #-2953	; 0xfffff477
    9e34:	ldrtmi	r9, [r0], -r7, lsl #6
    9e38:	stcl	7, cr15, [ip], {248}	; 0xf8
    9e3c:	stmdacs	r0, {r7, r9, sl, lr}
    9e40:	blmi	fe1bdf20 <strvisx@@Base+0xfe1aa1ac>
    9e44:	andcc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    9e48:	bllt	fe2e3ebc <strvisx@@Base+0xfe2d0148>
    9e4c:	movwcs	lr, #2520	; 0x9d8
    9e50:	rscsle	r4, r0, r3, lsl r3
    9e54:			; <UNDEFINED> instruction: 0xf1084620
    9e58:			; <UNDEFINED> instruction: 0xf7f80a13
    9e5c:	strtmi	lr, [r8], -lr, asr #21
    9e60:	b	ff2c7e48 <strvisx@@Base+0xff2b40d4>
    9e64:			; <UNDEFINED> instruction: 0x46384651
    9e68:	stc2	7, cr15, [lr, #1020]!	; 0x3fc
    9e6c:			; <UNDEFINED> instruction: 0x46044651
    9e70:	beq	4456d8 <strvisx@@Base+0x431964>
    9e74:	stc2	7, cr15, [r8, #1020]!	; 0x3fc
    9e78:	bcs	4456e4 <strvisx@@Base+0x431970>
    9e7c:	andcs	r4, r3, r5, lsl #12
    9e80:			; <UNDEFINED> instruction: 0xf7f84629
    9e84:	mcrrne	12, 10, lr, r1, cr2
    9e88:	blls	63e038 <strvisx@@Base+0x62a2c4>
    9e8c:	cmnmi	r0, #50331648	; 0x3000000	; <UNPREDICTABLE>
    9e90:	svcmi	0x0080f5b3
    9e94:			; <UNDEFINED> instruction: 0xf5b3d02a
    9e98:	rsble	r4, sp, r0, lsl #30
    9e9c:	ldrbmi	r9, [r1], -r6, lsl #16
    9ea0:			; <UNDEFINED> instruction: 0xff22f002
    9ea4:			; <UNDEFINED> instruction: 0xf7f84630
    9ea8:	pkhbtmi	lr, r0, r6, lsl #25
    9eac:	bicle	r2, r8, r0, lsl #16
    9eb0:			; <UNDEFINED> instruction: 0xf7f84620
    9eb4:	strtmi	lr, [r8], -r2, lsr #21
    9eb8:	b	fe7c7ea0 <strvisx@@Base+0xfe7b412c>
    9ebc:	beq	fe445724 <strvisx@@Base+0xfe4319b0>
    9ec0:			; <UNDEFINED> instruction: 0x4639465a
    9ec4:			; <UNDEFINED> instruction: 0xf82cf7fe
    9ec8:			; <UNDEFINED> instruction: 0xf7f84630
    9ecc:	bmi	1944d44 <strvisx@@Base+0x1930fd0>
    9ed0:	ldrbtmi	r4, [sl], #-2908	; 0xfffff4a4
    9ed4:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    9ed8:	subsmi	r9, sl, pc, lsr #22
    9edc:	adchi	pc, pc, r0, asr #32
    9ee0:	eorslt	r9, r1, r5, lsl #16
    9ee4:	blhi	1451e0 <strvisx@@Base+0x13146c>
    9ee8:	svchi	0x00f0e8bd
    9eec:	mulscc	r3, r8, r8
    9ef0:	subsle	r2, lr, lr, lsr #22
    9ef4:	mulscc	r3, r8, r8
    9ef8:	rsble	r2, r0, lr, lsr #22
    9efc:	tstcs	r1, r8, lsl #16
    9f00:			; <UNDEFINED> instruction: 0xff26f00a
    9f04:	ldmdbls	pc!, {r0, r6, r9, fp, ip, pc}	; <UNPREDICTABLE>
    9f08:	bls	102e71c <strvisx@@Base+0x101a9a8>
    9f0c:	strtmi	r9, [r9], -r1, lsl #2
    9f10:	strtmi	r9, [r2], -r2, lsl #4
    9f14:	ldmdals	lr!, {r0, r1, r9, sl, lr}
    9f18:	cdp	0, 1, cr9, cr8, cr0, {0}
    9f1c:			; <UNDEFINED> instruction: 0xf7ff0a90
    9f20:	blls	189bbc <strvisx@@Base+0x175e48>
    9f24:	svclt	0x00083001
    9f28:	mvnscc	pc, #79	; 0x4f
    9f2c:	str	r9, [r2, r5, lsl #6]
    9f30:	beq	fe445798 <strvisx@@Base+0xfe431a24>
    9f34:	ldrtmi	r2, [r9], -r0, lsl #4
    9f38:			; <UNDEFINED> instruction: 0xff9af7fd
    9f3c:	rsble	r2, sl, r0, lsl #16
    9f40:	vst2.32	{d6,d8}, [r3], r3
    9f44:			; <UNDEFINED> instruction: 0xf5b34370
    9f48:			; <UNDEFINED> instruction: 0xf43f4f80
    9f4c:	stmdami	r5, {r1, r2, r3, r4, r6, r8, r9, sl, fp, sp, pc}^
    9f50:	ldrbtmi	r4, [r8], #-1593	; 0xfffff9c7
    9f54:	cdp2	0, 8, cr15, cr2, cr2, {0}
    9f58:	mvnscc	pc, #79	; 0x4f
    9f5c:	ldr	r9, [r6, r5, lsl #6]!
    9f60:			; <UNDEFINED> instruction: 0xf7f89005
    9f64:	stmdavs	r0, {r1, r2, r3, r6, r7, sl, fp, sp, lr, pc}
    9f68:	stmdb	r4, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    9f6c:			; <UNDEFINED> instruction: 0x46024651
    9f70:			; <UNDEFINED> instruction: 0xf0029807
    9f74:			; <UNDEFINED> instruction: 0xe75efeb9
    9f78:	strtmi	r9, [r9], -r1, asr #22
    9f7c:	vnmla.f32	s18, s16, s0
    9f80:	movwls	r0, #6800	; 0x1a90
    9f84:	strtmi	r9, [r2], -r0, lsl #4
    9f88:			; <UNDEFINED> instruction: 0xf7ff9b3e
    9f8c:	mcrrne	9, 14, pc, r2, cr9	; <UNPREDICTABLE>
    9f90:			; <UNDEFINED> instruction: 0xf47f4603
    9f94:	stmdals	r9, {r4, r6, r8, r9, sl, fp, sp, pc}
    9f98:	strtmi	r4, [r9], -r2, lsr #12
    9f9c:			; <UNDEFINED> instruction: 0xf0029305
    9fa0:	smlsld	pc, r8, sp, lr	; <UNPREDICTABLE>
    9fa4:	mrc	8, 0, r4, cr8, cr0, {1}
    9fa8:	ldrbtmi	r1, [r8], #-2576	; 0xfffff5f0
    9fac:	blx	1445fcc <strvisx@@Base+0x1432258>
    9fb0:			; <UNDEFINED> instruction: 0xf89ae70b
    9fb4:	blcs	15fc0 <strvisx@@Base+0x224c>
    9fb8:	svcge	0x003df43f
    9fbc:			; <UNDEFINED> instruction: 0xf89ae79a
    9fc0:			; <UNDEFINED> instruction: 0xf10a3001
    9fc4:	blcs	b8c7d0 <strvisx@@Base+0xb78a5c>
    9fc8:			; <UNDEFINED> instruction: 0xf89ad198
    9fcc:	blcs	15fd8 <strvisx@@Base+0x2264>
    9fd0:	svcge	0x0031f43f
    9fd4:	stmdami	r5!, {r1, r4, r7, r8, r9, sl, sp, lr, pc}
    9fd8:	ldrbtmi	r4, [r8], #-1561	; 0xfffff9e7
    9fdc:	cdp2	0, 3, cr15, cr14, cr2, {0}
    9fe0:	mvnscc	pc, #79	; 0x4f
    9fe4:	ldrb	r9, [r2, -r5, lsl #6]!
    9fe8:	cdp	8, 1, cr4, cr8, cr1, {1}
    9fec:	ldrbtmi	r1, [r8], #-2576	; 0xfffff5f0
    9ff0:	cdp2	0, 3, cr15, cr4, cr2, {0}
    9ff4:	mvnscc	pc, #79	; 0x4f
    9ff8:	strb	r9, [r8, -r5, lsl #6]!
    9ffc:	stc	7, cr15, [r0], {248}	; 0xf8
    a000:			; <UNDEFINED> instruction: 0xf7f86800
    a004:	mrc	8, 0, lr, cr8, cr8, {7}
    a008:			; <UNDEFINED> instruction: 0x46021a10
    a00c:	ldrbtmi	r4, [r8], #-2073	; 0xfffff7e7
    a010:	cdp2	0, 2, cr15, cr4, cr2, {0}
    a014:			; <UNDEFINED> instruction: 0xf04fe75b
    a018:	movwls	r3, #21503	; 0x53ff
    a01c:			; <UNDEFINED> instruction: 0xf7f8e757
    a020:			; <UNDEFINED> instruction: 0xf04fec70
    a024:	movwls	r3, #21503	; 0x53ff
    a028:			; <UNDEFINED> instruction: 0xf7f86800
    a02c:	cdp	8, 1, cr14, cr8, cr4, {7}
    a030:			; <UNDEFINED> instruction: 0x46021a10
    a034:	ldrbtmi	r4, [r8], #-2064	; 0xfffff7f0
    a038:	cdp2	0, 1, cr15, cr0, cr2, {0}
    a03c:			; <UNDEFINED> instruction: 0xf7f8e747
    a040:	svclt	0x0000eb2c
    a044:	andeq	r0, r0, r0, asr #5
    a048:	andeq	pc, r1, sl, ror pc	; <UNPREDICTABLE>
    a04c:	andeq	pc, r1, r8, ror pc	; <UNPREDICTABLE>
    a050:	strdeq	sp, [r0], -r8
    a054:	andeq	sp, r0, ip, ror #15
    a058:	andeq	sp, r0, sl, asr #15
    a05c:	andeq	r0, r0, ip, lsr #5
    a060:	andeq	pc, r1, lr, lsr #28
    a064:	andeq	sp, r0, sl, ror #12
    a068:	andeq	sp, r0, r2, lsl #12
    a06c:	andeq	sp, r0, lr, asr #8
    a070:			; <UNDEFINED> instruction: 0x0000b6ba
    a074:	andeq	sp, r0, sl, ror r5
    a078:	andeq	sp, r0, sl, lsr #11
    a07c:	mvnsmi	lr, sp, lsr #18
    a080:	addlt	r4, r4, r8, lsl #13
    a084:			; <UNDEFINED> instruction: 0x46154611
    a088:			; <UNDEFINED> instruction: 0x4607461e
    a08c:			; <UNDEFINED> instruction: 0xff94f7fd
    a090:	blls	336758 <strvisx@@Base+0x3229e4>
    a094:	strtmi	r4, [r2], -r4, lsl #12
    a098:	ldrtmi	r4, [r8], -r1, asr #12
    a09c:	movwls	r9, #13824	; 0x3600
    a0a0:	movwls	r9, #11019	; 0x2b0b
    a0a4:	movwls	r9, #6922	; 0x1b0a
    a0a8:			; <UNDEFINED> instruction: 0xf7ff2300
    a0ac:			; <UNDEFINED> instruction: 0x4603fe5f
    a0b0:	ldrmi	r4, [ip], -r0, lsr #12
    a0b4:	stmib	r0!, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    a0b8:	andlt	r4, r4, r0, lsr #12
    a0bc:	ldrhhi	lr, [r0, #141]!	; 0x8d
    a0c0:	strtmi	r4, [r9], -r3, lsl #16
    a0c4:	ldrbtcc	pc, [pc], #79	; a0cc <el_source@plt+0x7790>	; <UNPREDICTABLE>
    a0c8:			; <UNDEFINED> instruction: 0xf0024478
    a0cc:	ldrb	pc, [r3, r7, asr #27]!	; <UNPREDICTABLE>
    a0d0:	muleq	r0, ip, r4
    a0d4:	andvs	r2, r3, r0, lsl #6
    a0d8:	strcs	fp, [r0], #-1072	; 0xfffffbd0
    a0dc:	stmib	r0, {r8, sl, sp}^
    a0e0:	stmib	r0, {r2, r8, r9, ip, sp}^
    a0e4:	stmib	r0, {r1, r8, sl, lr}^
    a0e8:	ldclt	3, cr3, [r0], #-24	; 0xffffffe8
    a0ec:	ldrbmi	r6, [r0, -r3, lsl #4]!
    a0f0:	andcs	r2, r1, #0, 6
    a0f4:	movwcc	lr, #22977	; 0x59c1
    a0f8:	stmib	r1, {r1, r3, sp, lr}^
    a0fc:	tstvs	fp, r7, lsl #6
    a100:	strcs	fp, [r0], #-1072	; 0xfffffbd0
    a104:	stmib	r1, {r8, sl, sp}^
    a108:	ldmib	r0, {r1, r8, sl, lr}^
    a10c:	strcs	r2, [r3], #-780	; 0xfffffcf4
    a110:	strcs	r6, [r7, #-12]
    a114:	stmib	r1, {r0, r1, r2, r3, sl, sp}^
    a118:	stmibvs	r3, {r1, r8, r9, sp}
    a11c:	stmibvs	r3, {r0, r1, r3, r8, sp, lr}^
    a120:	cmpvs	fp, sp
    a124:	andvs	r6, ip, r3, lsl #18
    a128:	orrvs	fp, fp, r0, lsr ip
    a12c:	bicvs	r6, fp, r3, lsl #25
    a130:	andvs	r6, fp, #3, 26	; 0xc0
    a134:	svclt	0x00004770
    a138:	ldrlt	r2, [r0, #-616]	; 0xfffffd98
    a13c:	strmi	r4, [r8], -r4, lsl #12
    a140:			; <UNDEFINED> instruction: 0xf7f82100
    a144:	stmdavs	r2!, {r3, r8, fp, sp, lr, pc}
    a148:			; <UNDEFINED> instruction: 0x460307d1
    a14c:	ldmib	r4, {r1, r6, r8, r9, sl, fp, ip, sp, pc}^
    a150:	stmib	r3, {r1, r8}^
    a154:	stmdavs	r2!, {r2, r3, r8}
    a158:	strle	r0, [r4, #-1936]	; 0xfffff870
    a15c:	orrsvs	r6, sl, r2, lsr #18
    a160:	bicsvs	r6, sl, r2, ror #18
    a164:	ldrbeq	r6, [r1, -r2, lsr #16]
    a168:	stmibvs	r2!, {r1, r6, r8, r9, sl, fp, ip, sp, pc}
    a16c:	stmdavs	r2!, {r1, r3, r4, r8, sp, lr}
    a170:	svclt	0x00410712
    a174:	ldrvs	r6, [sl], #2530	; 0x9e2
    a178:	ldrvs	r6, [sl, #-2594]	; 0xfffff5de
    a17c:	svclt	0x0000bd10
    a180:	blmi	14dcad0 <strvisx@@Base+0x14c8d5c>
    a184:	push	{r1, r3, r4, r5, r6, sl, lr}
    a188:	strdlt	r4, [r7], r0
    a18c:	andcs	r5, r0, #13828096	; 0xd30000
    a190:	strmi	r4, [r6], -ip, lsl #12
    a194:	movwls	r6, #22555	; 0x581b
    a198:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    a19c:	stmib	r1, {r8, r9, sp}^
    a1a0:	movwcs	r2, #770	; 0x302
    a1a4:	tstvs	fp, fp
    a1a8:	movwcc	lr, #22977	; 0x59c1
    a1ac:	movwcc	lr, #31169	; 0x79c1
    a1b0:	ldc2l	0, cr15, [sl], #-4
    a1b4:	ldmdblt	r0, {r0, r2, r9, sl, lr}^
    a1b8:	ldrbeq	r6, [pc, r3, lsr #16]
    a1bc:			; <UNDEFINED> instruction: 0x0798d413
    a1c0:	ldrbeq	sp, [r9, -sl, lsr #8]
    a1c4:	ldreq	sp, [sl, -r9, ror #8]
    a1c8:	blcs	3f22c <strvisx@@Base+0x2b4b8>
    a1cc:	bmi	1080ea4 <strvisx@@Base+0x106d130>
    a1d0:	ldrbtmi	r4, [sl], #-2879	; 0xfffff4c1
    a1d4:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    a1d8:	subsmi	r9, sl, r5, lsl #22
    a1dc:	strtmi	sp, [r8], -sl, ror #2
    a1e0:	pop	{r0, r1, r2, ip, sp, pc}
    a1e4:			; <UNDEFINED> instruction: 0xf10483f0
    a1e8:	ldrtmi	r0, [r0], -r8, lsl #2
    a1ec:	mcrr2	0, 0, pc, r6, cr1	; <UNPREDICTABLE>
    a1f0:	stmdavs	r3!, {r7, r8, fp, ip, sp, pc}
    a1f4:	strble	r0, [r4, #1944]!	; 0x798
    a1f8:			; <UNDEFINED> instruction: 0xf104e00e
    a1fc:			; <UNDEFINED> instruction: 0x4630011c
    a200:	mrrc2	0, 0, pc, r2, cr1	; <UNPREDICTABLE>
    a204:			; <UNDEFINED> instruction: 0xf104b930
    a208:	ldrtmi	r0, [r0], -r0, lsr #2
    a20c:	mcrr2	0, 0, pc, ip, cr1	; <UNPREDICTABLE>
    a210:	suble	r2, fp, r0, lsl #16
    a214:	ldrb	r4, [sl, r5, lsl #12]
    a218:	tsteq	r0, r4, lsl #2	; <UNPREDICTABLE>
    a21c:			; <UNDEFINED> instruction: 0xf0014630
    a220:	stmdacs	r0, {r0, r1, r6, sl, fp, ip, sp, lr, pc}
    a224:			; <UNDEFINED> instruction: 0xf104d1f6
    a228:			; <UNDEFINED> instruction: 0x46300114
    a22c:	ldc2	0, cr15, [ip], #-4
    a230:	mvnle	r2, r0, lsl #16
    a234:	strb	r6, [r4, r3, lsr #16]
    a238:	ldrtmi	sl, [r0], -r4, lsl #18
    a23c:	ldc2	0, cr15, [r4], #-4
    a240:	stmdacs	r0, {r2, r9, sl, lr}
    a244:	blls	13e72c <strvisx@@Base+0x12a9b8>
    a248:	eorsle	r2, r1, r0, lsl #22
    a24c:	ldrdls	pc, [r8], pc	; <UNPREDICTABLE>
    a250:			; <UNDEFINED> instruction: 0xf10daf01
    a254:	ldrbtmi	r0, [r9], #2060	; 0x80c
    a258:	stmdbge	r2, {r1, r2, r4, sp, lr, pc}
    a25c:	ldrtmi	r4, [r0], -r2, asr #12
    a260:	ldc2	0, cr15, [r2, #4]
    a264:	stmdacs	r0, {r0, r2, r9, sl, lr}
    a268:	bls	fe934 <strvisx@@Base+0xeabc0>
    a26c:	stmdbls	r1, {r3, r6, r9, sl, lr}
    a270:			; <UNDEFINED> instruction: 0xf0023401
    a274:	stmdals	r1, {r0, r5, r6, r7, r8, sl, fp, ip, sp, lr, pc}
    a278:	ldm	lr!, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    a27c:			; <UNDEFINED> instruction: 0xf7f89802
    a280:	blls	144578 <strvisx@@Base+0x130804>
    a284:	ldmdble	r3, {r0, r1, r5, r7, r9, lr}
    a288:	ldrtmi	r2, [r9], -r0, lsl #4
    a28c:			; <UNDEFINED> instruction: 0xf0014630
    a290:			; <UNDEFINED> instruction: 0x4605fdbd
    a294:	rscle	r2, r0, r0, lsl #16
    a298:			; <UNDEFINED> instruction: 0xf104e799
    a29c:			; <UNDEFINED> instruction: 0x46300118
    a2a0:	stc2	0, cr15, [r2], {1}
    a2a4:			; <UNDEFINED> instruction: 0xd1b52800
    a2a8:	str	r6, [ip, r3, lsr #16]
    a2ac:	str	r6, [ip, r3, lsr #16]
    a2b0:	str	r2, [ip, r0, lsl #10]
    a2b4:	ldmib	r0!, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    a2b8:	ldc2l	0, cr15, [sl]
    a2bc:	ldrbtmi	r4, [r9], #-2311	; 0xfffff6f9
    a2c0:	stmdami	r7, {r1, r9, sl, lr}
    a2c4:			; <UNDEFINED> instruction: 0xf0024478
    a2c8:	svclt	0x0000fa0d
    a2cc:	andeq	pc, r1, ip, ror fp	; <UNPREDICTABLE>
    a2d0:	andeq	r0, r0, r0, asr #5
    a2d4:	andeq	pc, r1, lr, lsr #22
    a2d8:	andeq	sp, r0, sl, lsl #10
    a2dc:			; <UNDEFINED> instruction: 0x0000d5be
    a2e0:	andeq	ip, r0, r0, ror r3
    a2e4:			; <UNDEFINED> instruction: 0x460cb570
    a2e8:	strmi	r6, [r6], -r9, lsl #16
    a2ec:			; <UNDEFINED> instruction: 0xff1ef001
    a2f0:	stmdblt	r0, {r0, r2, r9, sl, lr}^
    a2f4:	ldrbeq	r6, [r8, r3, lsr #16]
    a2f8:	ldreq	sp, [r9, r7, lsl #8]
    a2fc:	smmlaeq	sl, r2, r4, sp
    a300:	ldreq	sp, [fp, -fp, lsr #8]
    a304:			; <UNDEFINED> instruction: 0x4628d41c
    a308:	ldmib	r4, {r4, r5, r6, r8, sl, fp, ip, sp, pc}^
    a30c:	ldrtmi	r2, [r0], -r2, lsl #6
    a310:	cdp2	0, 13, cr15, cr4, cr1, {0}
    a314:	stmdavs	r3!, {r3, r4, r8, fp, ip, sp, pc}
    a318:	ldrble	r0, [r0, #1945]!	; 0x799
    a31c:	strmi	lr, [r5], -r2
    a320:	ldcllt	6, cr4, [r0, #-160]!	; 0xffffff60
    a324:	ldrtmi	r6, [r0], -r1, lsr #18
    a328:			; <UNDEFINED> instruction: 0xff00f001
    a32c:	mvnsle	r2, r0, lsl #16
    a330:	ldrtmi	r6, [r0], -r1, ror #18
    a334:	cdp2	0, 15, cr15, cr10, cr1, {0}
    a338:	mvnsle	r2, r0, lsl #16
    a33c:	ldrb	r6, [lr, r3, lsr #16]
    a340:	ldrtmi	r6, [r0], -r1, ror #19
    a344:	cdp2	0, 15, cr15, cr2, cr1, {0}
    a348:	stmdacs	r0, {r0, r2, r9, sl, lr}
    a34c:	bvs	87eac0 <strvisx@@Base+0x86ad4c>
    a350:	pop	{r4, r5, r9, sl, lr}
    a354:			; <UNDEFINED> instruction: 0xf0014070
    a358:	stmibvs	r1!, {r0, r3, r5, r6, r7, r9, sl, fp, ip, sp, pc}
    a35c:			; <UNDEFINED> instruction: 0xf0014630
    a360:	stmdacs	r0, {r0, r2, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    a364:	stmdavs	r3!, {r0, r1, r3, r4, r6, r7, r8, ip, lr, pc}
    a368:	svclt	0x0000e7cb
    a36c:	stmdale	r1!, {r3, fp, sp}
    a370:			; <UNDEFINED> instruction: 0xf000e8df
    a374:	ldrne	r0, [r4, -r8, lsl #10]
    a378:	tstne	lr, sl, lsl sp
    a37c:	stmdami	pc, {r0, r1, r3}	; <UNPREDICTABLE>
    a380:			; <UNDEFINED> instruction: 0x47704478
    a384:	ldrbtmi	r4, [r8], #-2062	; 0xfffff7f2
    a388:	stmdami	lr, {r4, r5, r6, r8, r9, sl, lr}
    a38c:			; <UNDEFINED> instruction: 0x47704478
    a390:	ldrbtmi	r4, [r8], #-2061	; 0xfffff7f3
    a394:	stmdami	sp, {r4, r5, r6, r8, r9, sl, lr}
    a398:			; <UNDEFINED> instruction: 0x47704478
    a39c:	ldrbtmi	r4, [r8], #-2060	; 0xfffff7f4
    a3a0:	stmdami	ip, {r4, r5, r6, r8, r9, sl, lr}
    a3a4:			; <UNDEFINED> instruction: 0x47704478
    a3a8:	ldrbtmi	r4, [r8], #-2059	; 0xfffff7f5
    a3ac:	stmdami	fp, {r4, r5, r6, r8, r9, sl, lr}
    a3b0:			; <UNDEFINED> instruction: 0x47704478
    a3b4:	ldrbtmi	r4, [r8], #-2058	; 0xfffff7f6
    a3b8:	svclt	0x00004770
    a3bc:	muleq	r0, ip, r4
    a3c0:	andeq	sp, r0, lr, lsl #8
    a3c4:	andeq	sp, r0, r8, ror r4
    a3c8:	andeq	sp, r0, r2, asr r4
    a3cc:	andeq	sp, r0, ip, asr r4
    a3d0:	andeq	sp, r0, r2, lsl #8
    a3d4:	andeq	sp, r0, r8, lsl r4
    a3d8:	andeq	sp, r0, r6, lsr #8
    a3dc:	andeq	sp, r0, r8, lsr #8
    a3e0:	andeq	sp, r0, lr, asr #7
    a3e4:	svcmi	0x00f0e92d
    a3e8:	bmi	1c5bc44 <strvisx@@Base+0x1c47ed0>
    a3ec:	blmi	1c5be54 <strvisx@@Base+0x1c480e0>
    a3f0:	sfmmi	f7, 1, [r4, #692]	; 0x2b4
    a3f4:			; <UNDEFINED> instruction: 0x460c447a
    a3f8:	tstls	sp, r1, lsl #12
    a3fc:			; <UNDEFINED> instruction: 0xf10458d3
    a400:			; <UNDEFINED> instruction: 0xf10d0050
    a404:	ldmdavs	fp, {r3, r6, r9, fp}
    a408:	ldrbtcc	pc, [ip], #-2253	; 0xfffff733	; <UNPREDICTABLE>
    a40c:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    a410:	svc	0x0026f7f7
    a414:			; <UNDEFINED> instruction: 0x46064651
    a418:			; <UNDEFINED> instruction: 0xf0096920
    a41c:	stccs	8, cr15, [r0, #-668]	; 0xfffffd64
    a420:	addhi	pc, r5, r0
    a424:	movwcs	r6, #51618	; 0xc9a2
    a428:	ldmdage	r5, {r0, r1, r5, r6, r8, sl, fp, lr}
    a42c:			; <UNDEFINED> instruction: 0xf10d4619
    a430:	ldrbtmi	r0, [sp], #-2880	; 0xfffff4c0
    a434:	strls	r9, [r0, #-513]	; 0xfffffdff
    a438:	strmi	r2, [r7], -r1, lsl #4
    a43c:	ldm	ip!, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    a440:	movwcs	r6, #51682	; 0xc9e2
    a444:	stmib	sp, {r0, r3, r4, r9, sl, lr}^
    a448:	lfmge	f5, 4, [r8, #-0]
    a44c:	strtmi	r2, [r8], -r1, lsl #4
    a450:	ldm	r2!, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    a454:			; <UNDEFINED> instruction: 0x46584959
    a458:	ldrbtmi	r2, [r9], #-520	; 0xfffffdf8
    a45c:			; <UNDEFINED> instruction: 0xf85cf009
    a460:	rsbsle	r2, sp, r0, lsl #28
    a464:			; <UNDEFINED> instruction: 0xf7f82000
    a468:	stcvs	8, cr14, [r3, #-896]!	; 0xfffffc80
    a46c:	cmpvs	r0, r6, asr #4	; <UNPREDICTABLE>
    a470:	smlabtvc	pc, pc, r6, pc	; <UNPREDICTABLE>
    a474:	strmi	r9, [r1], ip, lsl #6
    a478:	stc2l	0, cr15, [sl], #-40	; 0xffffffd8
    a47c:	strbmi	r9, [fp, #-2828]	; 0xfffff4f4
    a480:	addsmi	fp, r8, #216, 30	; 0x360
    a484:	stmdbeq	ip!, {r0, r2, r3, r8, ip, sp, lr, pc}^
    a488:	vmvn.i32	d20, #50331648	; 0x03000000
    a48c:	bmi	132a6b4 <strvisx@@Base+0x1316940>
    a490:	strbmi	r2, [r8], -sp, lsl #2
    a494:			; <UNDEFINED> instruction: 0xf7f8447a
    a498:	ldmdblt	r0, {r1, r3, r4, r6, r8, fp, sp, lr, pc}
    a49c:			; <UNDEFINED> instruction: 0xf8892300
    a4a0:	ldrtmi	r3, [r8], -r0
    a4a4:	svc	0x00fcf7f7
    a4a8:	blcs	21bcbc <strvisx@@Base+0x207f48>
    a4ac:	svclt	0x00384628
    a4b0:	movwls	r2, #49928	; 0xc308
    a4b4:	svc	0x00f4f7f7
    a4b8:	andne	lr, ip, #212, 18	; 0x350000
    a4bc:	svclt	0x00382808
    a4c0:	strmi	r2, [r4], -r8
    a4c4:	svceq	0x0000f1b8
    a4c8:			; <UNDEFINED> instruction: 0xf10dd04d
    a4cc:			; <UNDEFINED> instruction: 0x46080838
    a4d0:	mrcge	6, 0, r4, cr15, cr1, {0}
    a4d4:			; <UNDEFINED> instruction: 0xf0074642
    a4d8:	bls	38905c <strvisx@@Base+0x3752e8>
    a4dc:	strvc	lr, [r4], #-2509	; 0xfffff633
    a4e0:	orrvs	pc, r0, #1325400064	; 0x4f000000
    a4e4:	ldrtmi	r9, [r0], -ip, lsl #24
    a4e8:	ldrsbgt	pc, [r8], #143	; 0x8f	; <UNPREDICTABLE>
    a4ec:	andls	r4, r9, #26214400	; 0x1900000
    a4f0:	ldrbtmi	r2, [ip], #513	; 0x201
    a4f4:	andshi	pc, ip, sp, asr #17
    a4f8:	eorls	pc, r0, sp, asr #17
    a4fc:	stmib	sp, {r1, r2, r8, sl, ip, pc}^
    a500:			; <UNDEFINED> instruction: 0xf8cdb402
    a504:			; <UNDEFINED> instruction: 0xf8cda004
    a508:			; <UNDEFINED> instruction: 0xf7f8c000
    a50c:			; <UNDEFINED> instruction: 0x4630e856
    a510:	ldc2	0, cr15, [r8, #-8]!
    a514:	blmi	9dcdcc <strvisx@@Base+0x9c9058>
    a518:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    a51c:			; <UNDEFINED> instruction: 0xf8dd681a
    a520:	subsmi	r3, sl, ip, ror r4
    a524:	vrhadd.s8	<illegal reg q6.5>, <illegal reg q6.5>, q1
    a528:	pop	{r2, r7, r8, sl, fp, lr}
    a52c:	qsub8mi	r8, r9, r0
    a530:			; <UNDEFINED> instruction: 0xf00869a0
    a534:	strtmi	pc, [r9], -r7, lsl #29
    a538:	bleq	1046974 <strvisx@@Base+0x1032c00>
    a53c:	stmibvs	r0!, {r0, r1, r2, r9, sl, lr}^
    a540:	cdp2	0, 13, cr15, cr14, cr8, {0}
    a544:	movwcs	r4, #35105	; 0x8921
    a548:	ldrbtmi	r2, [r9], #-513	; 0xfffffdff
    a54c:	stmdbvs	r0!, {r0, r2, r9, sl, lr}^
    a550:	ldrmi	r9, [r9], -r0, lsl #2
    a554:	ldrbmi	r9, [r8], -r1
    a558:	stmda	lr!, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    a55c:	orrle	r2, r1, r0, lsl #28
    a560:	stmdbeq	ip!, {r0, r2, r3, r8, ip, sp, lr, pc}^
    a564:	blls	3843d4 <strvisx@@Base+0x370660>
    a568:	strls	sl, [r5], #-3615	; 0xfffff1e1
    a56c:	ldrtmi	r9, [r0], -ip, lsl #24
    a570:	ldrsbgt	pc, [ip], #-143	; 0xffffff71	; <UNPREDICTABLE>
    a574:	vst2.8	{d25-d28}, [pc], fp
    a578:	stmib	sp, {r7, r8, r9, sp, lr}^
    a57c:	ldrbtmi	r1, [ip], #520	; 0x208
    a580:	andcs	r4, r1, #26214400	; 0x1900000
    a584:	eorls	pc, r8, sp, asr #17
    a588:	strls	r9, [r4, -r6, lsl #10]
    a58c:	strlt	lr, [r2], #-2509	; 0xfffff633
    a590:	andge	pc, r4, sp, asr #17
    a594:	andgt	pc, r0, sp, asr #17
    a598:	stmda	lr, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    a59c:	bmi	384480 <strvisx@@Base+0x37070c>
    a5a0:	strbmi	r2, [r8], -sp, lsl #2
    a5a4:			; <UNDEFINED> instruction: 0xf7f8447a
    a5a8:			; <UNDEFINED> instruction: 0xe776e8d2
    a5ac:	ldmda	r4!, {r3, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    a5b0:	andeq	pc, r1, ip, lsl #18
    a5b4:	andeq	r0, r0, r0, asr #5
    a5b8:	andeq	ip, r0, sl, asr r4
    a5bc:	andeq	ip, r0, lr, lsl #3
    a5c0:	andeq	sp, r0, r0, lsr #7
    a5c4:	andeq	sp, r0, lr, asr #6
    a5c8:	andeq	pc, r1, r8, ror #15
    a5cc:	andeq	ip, r0, r2, asr #6
    a5d0:	ldrdeq	sp, [r0], -lr
    a5d4:	andeq	sp, r0, r4, lsl #5
    a5d8:	andcs	r4, r1, #8, 22	; 0x2000
    a5dc:	ldrbtmi	fp, [fp], #-1296	; 0xfffffaf0
    a5e0:	strmi	r4, [r1], -ip, lsl #12
    a5e4:			; <UNDEFINED> instruction: 0xf7fd6818
    a5e8:	msrlt	CPSR_, r3, asr #24
    a5ec:			; <UNDEFINED> instruction: 0xf7ff4621
    a5f0:	andcs	pc, r0, r3, lsr #27
    a5f4:			; <UNDEFINED> instruction: 0xf04fbd10
    a5f8:	ldclt	0, cr3, [r0, #-1020]	; 0xfffffc04
    a5fc:	andeq	r1, r2, r6, asr #26
    a600:	andcs	r4, r1, #8, 22	; 0x2000
    a604:	ldrbtmi	fp, [fp], #-1296	; 0xfffffaf0
    a608:	strmi	r4, [r1], -ip, lsl #12
    a60c:			; <UNDEFINED> instruction: 0xf7fd6818
    a610:	msrlt	CPSR_, r3, asr ip
    a614:			; <UNDEFINED> instruction: 0xf7ff4621
    a618:	andcs	pc, r0, pc, lsl #27
    a61c:			; <UNDEFINED> instruction: 0xf04fbd10
    a620:	ldclt	0, cr3, [r0, #-1020]	; 0xfffffc04
    a624:	andeq	r1, r2, lr, lsl sp
    a628:			; <UNDEFINED> instruction: 0x4604b510
    a62c:			; <UNDEFINED> instruction: 0xf7fd6800
    a630:			; <UNDEFINED> instruction: 0x4620fb95
    a634:			; <UNDEFINED> instruction: 0x4010e8bd
    a638:	mrclt	7, 6, APSR_nzcv, cr12, cr7, {7}
    a63c:	tstcs	r8, r8, lsr r5
    a640:	andcs	r4, r1, r5, lsl #12
    a644:	mrrc2	0, 0, pc, ip, cr2	; <UNPREDICTABLE>
    a648:	strtmi	r4, [r9], -r8, lsl #22
    a64c:			; <UNDEFINED> instruction: 0x4604447b
    a650:	ldmdavs	r8, {r1, r9, sl, lr}
    a654:	blx	fe048652 <strvisx@@Base+0xfe0348de>
    a658:	rsbvs	fp, r0, r0, lsl r9
    a65c:	ldclt	6, cr4, [r8, #-128]!	; 0xffffff80
    a660:	strcs	r4, [r0], #-1568	; 0xfffff9e0
    a664:	mcr	7, 6, pc, cr8, cr7, {7}	; <UNPREDICTABLE>
    a668:	svclt	0x0000e7f8
    a66c:	ldrdeq	r1, [r2], -r8
    a670:	mvnsmi	lr, sp, lsr #18
    a674:	ldmib	r0, {r0, r2, r9, sl, lr}^
    a678:			; <UNDEFINED> instruction: 0xf8533200
    a67c:	teqlt	r0, #34	; 0x22
    a680:	vfma.f32	d20, d1, d5
    a684:	tstcs	r0, r8, lsl r2
    a688:	ldrbtmi	r4, [ip], #-3604	; 0xfffff1ec
    a68c:			; <UNDEFINED> instruction: 0x4620447e
    a690:	mcr	7, 3, pc, cr0, cr7, {7}	; <UNPREDICTABLE>
    a694:			; <UNDEFINED> instruction: 0x8700e9d5
    a698:	ldrtmi	r2, [r8], -r1, lsl #2
    a69c:	blx	16466ce <strvisx@@Base+0x163295a>
    a6a0:	addvc	pc, r0, #1325400064	; 0x4f000000
    a6a4:			; <UNDEFINED> instruction: 0xf1046068
    a6a8:			; <UNDEFINED> instruction: 0xf8580013
    a6ac:	ldmdavs	r9, {r0, r1, r2, r5, ip, sp}
    a6b0:			; <UNDEFINED> instruction: 0xff32f008
    a6b4:	tstcs	r1, r5, lsr r8
    a6b8:			; <UNDEFINED> instruction: 0xf00a4628
    a6bc:	strbne	pc, [fp, r9, asr #22]!	; <UNPREDICTABLE>
    a6c0:	rsbvs	r6, r3, r5, lsr #32
    a6c4:	stmdblt	r0!, {r4, r5, sp, lr}
    a6c8:	movwcs	r4, #5664	; 0x1620
    a6cc:	pop	{r0, r1, r4, r5, sp, lr}
    a6d0:			; <UNDEFINED> instruction: 0x462081f0
    a6d4:	ldrhhi	lr, [r0, #141]!	; 0x8d
    a6d8:	muleq	r2, lr, ip
    a6dc:	andeq	pc, r1, r0, lsl #19
    a6e0:			; <UNDEFINED> instruction: 0x4684b4f0
    a6e4:	strmi	r4, [r8], -lr, lsl #26
    a6e8:	ldrmi	r9, [r1], -r4, lsl #24
    a6ec:	svcmi	0x000d447d
    a6f0:	ldrmi	r4, [sl], -sp, lsl #28
    a6f4:			; <UNDEFINED> instruction: 0xf8c5447f
    a6f8:	ldrbtmi	ip, [lr], #-0
    a6fc:	stmib	r4, {r0, r1, r3, r8, sl, fp, lr}^
    a700:	strtmi	r6, [r3], -r8, lsl #14
    a704:	ldrbtmi	r4, [sp], #-3850	; 0xfffff0f6
    a708:			; <UNDEFINED> instruction: 0xf0414e0a
    a70c:	ldrbtmi	r0, [pc], #-320	; a714 <el_source@plt+0x7dd8>
    a710:	ldrbtmi	r6, [lr], #-487	; 0xfffffe19
    a714:	strvs	lr, [sl, #-2500]	; 0xfffff63c
    a718:			; <UNDEFINED> instruction: 0xf008bcf0
    a71c:	svclt	0x0000bcc7
    a720:	andeq	r1, r2, r8, lsr ip
    a724:			; <UNDEFINED> instruction: 0xffffff45
    a728:			; <UNDEFINED> instruction: 0xffffff73
    a72c:			; <UNDEFINED> instruction: 0xfffffecf
    a730:			; <UNDEFINED> instruction: 0xffffff17
    a734:			; <UNDEFINED> instruction: 0xfffffeeb
    a738:	andcs	r4, r1, #2048	; 0x800
    a73c:	andsvs	r4, sl, fp, ror r4
    a740:	svclt	0x00004770
    a744:	andeq	r2, r2, r8, lsl #26
    a748:	ldrdgt	pc, [r0], #-143	; 0xffffff71	; <UNPREDICTABLE>
    a74c:	tstmi	r3, r5, asr #4	; <UNPREDICTABLE>
    a750:	andcs	r4, r1, r7, lsl fp
    a754:	strlt	r4, [r0, #-1276]	; 0xfffffb04
    a758:			; <UNDEFINED> instruction: 0xf85cb085
    a75c:	bge	56770 <strvisx@@Base+0x429fc>
    a760:	movwls	r6, #14363	; 0x381b
    a764:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    a768:	mcr	7, 4, pc, cr8, cr7, {7}	; <UNPREDICTABLE>
    a76c:	andle	r3, r2, r1
    a770:			; <UNDEFINED> instruction: 0x0006f8bd
    a774:	subscs	fp, r1, r0, ror r9
    a778:	bmi	3dd3b8 <strvisx@@Base+0x3c9644>
    a77c:	ldrbtmi	r4, [sl], #-1147	; 0xfffffb85
    a780:	blmi	2e28e8 <strvisx@@Base+0x2ceb74>
    a784:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    a788:	subsmi	r9, sl, r3, lsl #22
    a78c:	andlt	sp, r5, ip, lsl #2
    a790:	blx	14890e <strvisx@@Base+0x134b9a>
    a794:	svcvc	0x0000f5b0
    a798:	vmax.f32	d27, d16, d8
    a79c:	stmiale	fp!, {r0, sp}^
    a7a0:			; <UNDEFINED> instruction: 0xf00a2101
    a7a4:	ubfx	pc, r5, #21, #8
    a7a8:	svc	0x0076f7f7
    a7ac:	andeq	pc, r1, ip, lsr #11
    a7b0:	andeq	r0, r0, r0, asr #5
    a7b4:	andeq	r2, r2, r8, asr #25
    a7b8:	andeq	pc, r1, r2, lsl #11
    a7bc:	andcs	r4, r1, r2, lsl #22
    a7c0:	addsvs	r4, r8, fp, ror r4
    a7c4:	mcrlt	7, 5, pc, cr4, cr7, {7}	; <UNPREDICTABLE>
    a7c8:	andeq	r2, r2, r4, lsl #25
    a7cc:	svcmi	0x00f0e92d
    a7d0:	cfstr32	mvfx2, [sp, #-0]
    a7d4:	bmi	ff86d3f4 <strvisx@@Base+0xff859680>
    a7d8:	ldrbtmi	r4, [sl], #-3041	; 0xfffff41f
    a7dc:			; <UNDEFINED> instruction: 0xf5ad4ce1
    a7e0:			; <UNDEFINED> instruction: 0xf8df7d13
    a7e4:	ldmpl	r3, {r2, r7, r8, r9, sp, pc}^
    a7e8:	ldrbtmi	r4, [sl], #1148	; 0x47c
    a7ec:	orrsls	r6, r1, #1769472	; 0x1b0000
    a7f0:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    a7f4:	stmdavs	r3!, {r0, r2, r5, r7, sp, lr}
    a7f8:			; <UNDEFINED> instruction: 0xf0402b00
    a7fc:	blmi	ff6eb214 <strvisx@@Base+0xff6d74a0>
    a800:	msrlt	SPSR_fs, #14614528	; 0xdf0000
    a804:	ldrbtmi	r4, [fp], #1147	; 0x47b
    a808:	strmi	lr, [r4, #-2515]	; 0xfffff62d
    a80c:	b	1524b7c <strvisx@@Base+0x1510e08>
    a810:	ldmib	r2, {r0, r2, r8}^
    a814:	svclt	0x00088900
    a818:	strmi	lr, [r6, #-2515]	; 0xfffff62d
    a81c:	movwcs	lr, #2514	; 0x9d2
    a820:	movwcs	lr, #18891	; 0x49cb
    a824:			; <UNDEFINED> instruction: 0xf85af004
    a828:			; <UNDEFINED> instruction: 0x6708e9db
    a82c:	movwcs	lr, #18907	; 0x49db
    a830:			; <UNDEFINED> instruction: 0x46394630
    a834:	blls	10462fc <strvisx@@Base+0x1032588>
    a838:	blx	ff446868 <strvisx@@Base+0xff432af4>
    a83c:	smlabteq	r8, sp, r9, lr
    a840:	movwcs	lr, #35293	; 0x89dd
    a844:			; <UNDEFINED> instruction: 0xf1732a01
    a848:	vsubw.s8	q8, q0, d0
    a84c:	strtmi	r8, [r2], -r2, asr #4
    a850:	strbmi	r4, [r0], -fp, lsr #12
    a854:			; <UNDEFINED> instruction: 0xf00a4649
    a858:	vldr	s30, [fp, #772]	; 0x304
    a85c:			; <UNDEFINED> instruction: 0xf8db8b0a
    a860:	mrc	0, 1, r4, cr9, cr0, {1}
    a864:	andls	r8, sl, r8, asr #22
    a868:	asns	f1, #3.0
    a86c:	vneg.f64	d24, d0
    a870:	svclt	0x0008fa10
    a874:	bvc	2c5ef0 <strvisx@@Base+0x2b217c>
    a878:	ldmib	sp, {r0, r3, ip, lr, pc}^
    a87c:			; <UNDEFINED> instruction: 0xf00a010a
    a880:	mcrr	8, 11, pc, r1, cr13	; <UNPREDICTABLE>
    a884:	vdup.32	d7, r0
    a888:	vmov.f64	d7, #216	; 0xbec00000 -0.375
    a88c:	cmnlt	ip, r7, asr #23
    a890:	blvs	feb85f14 <strvisx@@Base+0xfeb721a0>
    a894:	blpl	febc5f18 <strvisx@@Base+0xfebb21a4>
    a898:	blvc	ff206380 <strvisx@@Base+0xff1f260c>
    a89c:	blvc	1c6140 <strvisx@@Base+0x1b23cc>
    a8a0:	bmi	fe4460c0 <strvisx@@Base+0xfe43234c>
    a8a4:	blvs	ff9c638c <strvisx@@Base+0xff9b2618>
    a8a8:	blvc	1860c8 <strvisx@@Base+0x172354>
    a8ac:	blvc	ff2063a8 <strvisx@@Base+0xff1f2634>
    a8b0:	sbchi	pc, r0, #14614528	; 0xdf0000
    a8b4:	movwcs	sl, #3088	; 0xc10
    a8b8:	msreq	CPSR_xc, pc, rrx
    a8bc:	strdvc	r4, [r3], -r8	; <UNPREDICTABLE>
    a8c0:	ldrdpl	pc, [r4], -r8
    a8c4:	bvc	345eec <strvisx@@Base+0x332178>
    a8c8:			; <UNDEFINED> instruction: 0xf00a4628
    a8cc:	bge	4091d8 <strvisx@@Base+0x3f5464>
    a8d0:	andsvs	r2, r0, r0, lsl #16
    a8d4:			; <UNDEFINED> instruction: 0xf8d8dd11
    a8d8:	vst4.16	{d21-d24}, [pc], r0
    a8dc:	blmi	fe9a6ce4 <strvisx@@Base+0xfe992f70>
    a8e0:			; <UNDEFINED> instruction: 0xf10d9000
    a8e4:	strls	r0, [r1, #-65]	; 0xffffffbf
    a8e8:	strcs	r4, [sp, #-1147]	; 0xfffffb85
    a8ec:			; <UNDEFINED> instruction: 0xf0057025
    a8f0:	ldmib	r8, {r0, r1, r2, r4, r8, sl, fp, ip, sp, lr, pc}^
    a8f4:			; <UNDEFINED> instruction: 0xf8d86708
    a8f8:	b	159e910 <strvisx@@Base+0x158ab9c>
    a8fc:	andsle	r0, sp, r7, lsl #6
    a900:	ldrbtmi	r4, [fp], #-2974	; 0xfffff462
    a904:	ldrdeq	lr, [r4, -r3]
    a908:	svclt	0x000842b9
    a90c:			; <UNDEFINED> instruction: 0xd01542b0
    a910:			; <UNDEFINED> instruction: 0xf972f00a
    a914:			; <UNDEFINED> instruction: 0x46034639
    a918:	mcr	6, 0, r4, cr10, cr0, {1}
    a91c:			; <UNDEFINED> instruction: 0xf00a3a10
    a920:	vldr.16	s30, [pc, #214]	; a9fe <el_source@plt+0x80c2>
    a924:	vmla.f32	s14, s15, s26
    a928:			; <UNDEFINED> instruction: 0xeeca0a90
    a92c:	vmul.f32	s15, s14, s15
    a930:			; <UNDEFINED> instruction: 0xeefd7a87
    a934:	vnmla.f32	s14, s15, s15
    a938:	mul	r0, r0, sl
    a93c:	strtmi	r2, [r0], -r4, ror #12
    a940:	stc	7, cr15, [lr, #988]!	; 0x3dc
    a944:			; <UNDEFINED> instruction: 0xf04f4a8e
    a948:			; <UNDEFINED> instruction: 0x960133ff
    a94c:	andls	r4, r0, #2046820352	; 0x7a000000
    a950:	bne	a5315c <strvisx@@Base+0xa3f3e8>
    a954:			; <UNDEFINED> instruction: 0xf7f74420
    a958:			; <UNDEFINED> instruction: 0x4620ee30
    a95c:	stc	7, cr15, [r0, #988]!	; 0x3dc
    a960:	vmla.i8	d20, d18, d8
    a964:	movwcs	r7, #527	; 0x20f
    a968:	ldmib	r1, {r0, r3, r4, r5, r6, sl, lr}^
    a96c:	stmdavs	sp, {r2, r8, r9, sl, sp, lr}^
    a970:	bl	1cdb440 <strvisx@@Base+0x1cc76cc>
    a974:	bl	10ad98 <strvisx@@Base+0xf7024>
    a978:	bl	fe94d580 <strvisx@@Base+0xfe93980c>
    a97c:	vqdmlal.s<illegal width 8>	q0, d0, d0
    a980:	stfmid	f0, [r1, #888]	; 0x378
    a984:	stmdaeq	fp, {r0, r1, r2, r3, r6, ip, sp, lr, pc}^
    a988:	movwcs	lr, #51661	; 0xc9cd
    a98c:	strcc	r4, [r2, #-1149]	; 0xfffffb83
    a990:			; <UNDEFINED> instruction: 0xf815e001
    a994:	ldrtmi	r8, [r0], -r1, lsl #22
    a998:	vst1.8	{d20-d22}, [pc :256], r9
    a99c:	movwcs	r7, #512	; 0x200
    a9a0:			; <UNDEFINED> instruction: 0xf9eaf00a
    a9a4:	movwcs	lr, #51677	; 0xc9dd
    a9a8:	addne	r0, pc, #548864	; 0x86000
    a9ac:	strpl	lr, [r1], r6, asr #20
    a9b0:			; <UNDEFINED> instruction: 0x41bb42b2
    a9b4:	orrhi	pc, r9, r0, lsl #5
    a9b8:	svceq	0x0054f1b8
    a9bc:	blmi	1cff168 <strvisx@@Base+0x1ceb3f4>
    a9c0:	ldrbtmi	r4, [fp], #-1602	; 0xfffff9be
    a9c4:	ldrdgt	pc, [r8, #143]	; 0x8f
    a9c8:	ldclmi	6, cr4, [r2, #-292]!	; 0xfffffedc
    a9cc:	ldrbtmi	r4, [ip], #1624	; 0x658
    a9d0:	strvs	lr, [r2, -sp, asr #19]
    a9d4:	andgt	pc, r0, sp, asr #17
    a9d8:	movwls	r4, #21629	; 0x547d
    a9dc:	mvnscc	pc, #79	; 0x4f
    a9e0:	andcs	r9, r1, #4, 4	; 0x40000000
    a9e4:	stcl	7, cr15, [r8, #988]!	; 0x3dc
    a9e8:	stmdavs	sl!, {r0, r1, r3, r5, r6, r8, fp, lr}^
    a9ec:	ldrbtmi	r4, [r9], #-1568	; 0xfffff9e0
    a9f0:			; <UNDEFINED> instruction: 0xf0082700
    a9f4:			; <UNDEFINED> instruction: 0x4620fd59
    a9f8:	ldcl	7, cr15, [r2, #-988]	; 0xfffffc24
    a9fc:	stmdavs	lr!, {r0, r3, r5, r8, r9, fp, sp, lr}^
    aa00:	movwcs	r2, #612	; 0x264
    aa04:	strmi	r4, [r8], -r5, lsl #12
    aa08:	bl	110934 <strvisx@@Base+0xfcbc0>
    aa0c:			; <UNDEFINED> instruction: 0xf00a0805
    aa10:	blne	1d8924c <strvisx@@Base+0x1d754d8>
    aa14:	ldrvs	pc, [pc], r8, asr #4
    aa18:	streq	pc, [r1], -r0, asr #5
    aa1c:	strmi	r4, [r2], -r6, lsl #5
    aa20:			; <UNDEFINED> instruction: 0x0c01eb77
    aa24:	vsubhn.i16	d4, q0, <illegal reg q5.5>
    aa28:	ldmdbmi	ip, {r0, r1, r2, r5, r8, pc}^
    aa2c:	strvs	lr, [ip, -sp, asr #19]
    aa30:	ldrbtmi	r2, [r9], #-1867	; 0xfffff8b5
    aa34:	strcc	r4, [r2], -lr, lsl #12
    aa38:			; <UNDEFINED> instruction: 0xf816e001
    aa3c:	ldrmi	r7, [r0], -r1, lsl #22
    aa40:	vst1.8	{d20-d22}, [pc :64], r9
    aa44:	movwcs	r7, #512	; 0x200
    aa48:			; <UNDEFINED> instruction: 0xf996f00a
    aa4c:	addne	r0, fp, #532480	; 0x82000
    aa50:	addpl	lr, r1, #270336	; 0x42000
    aa54:	ldrdeq	lr, [ip, -sp]
    aa58:			; <UNDEFINED> instruction: 0x41994290
    aa5c:	svccs	0x0054da01
    aa60:	ldrmi	sp, [r0], -fp, ror #3
    aa64:	andcs	r4, r5, #26214400	; 0x1900000
    aa68:			; <UNDEFINED> instruction: 0xf00a2300
    aa6c:	rsbcs	pc, r4, #2179072	; 0x214000
    aa70:	strmi	r2, [r6], -r0, lsl #6
    aa74:			; <UNDEFINED> instruction: 0xf00a468b
    aa78:	andcs	pc, sl, #16580608	; 0xfd0000
    aa7c:	strmi	r2, [ip], r0, lsl #6
    aa80:	ldrbmi	r4, [r9], -r1, lsl #13
    aa84:			; <UNDEFINED> instruction: 0x46664630
    aa88:			; <UNDEFINED> instruction: 0xf8f4f00a
    aa8c:	movwcs	r2, #522	; 0x20a
    aa90:			; <UNDEFINED> instruction: 0xf8f0f00a
    aa94:			; <UNDEFINED> instruction: 0x4629469e
    aa98:	ldrdgt	pc, [r4, -pc]
    aa9c:			; <UNDEFINED> instruction: 0xf04f4d41
    aaa0:			; <UNDEFINED> instruction: 0x970633ff
    aaa4:	svcmi	0x004044fc
    aaa8:	andls	r4, r4, #2097152000	; 0x7d000000
    aaac:	andcs	r4, r1, #64, 12	; 0x4000000
    aab0:	ands	pc, r4, sp, asr #17
    aab4:	andsgt	pc, ip, sp, asr #17
    aab8:			; <UNDEFINED> instruction: 0xf8cd447f
    aabc:	strls	r9, [r3], -r8
    aac0:			; <UNDEFINED> instruction: 0xf7f79500
    aac4:	ldmdbmi	r9!, {r1, r3, r4, r5, r6, r8, sl, fp, sp, lr, pc}
    aac8:			; <UNDEFINED> instruction: 0x4620687a
    aacc:			; <UNDEFINED> instruction: 0xf0084479
    aad0:	ldmib	sp, {r0, r1, r3, r5, r6, r7, sl, fp, ip, sp, lr, pc}^
    aad4:	tstmi	r3, #671088640	; 0x28000000
    aad8:	ldfp	f5, [r7, #456]	; 0x1c8
    aadc:	ldmdavs	lr!, {r0, r4, r9, fp, ip, sp, lr}^
    aae0:	blvc	ffa065c8 <strvisx@@Base+0xff9f2854>
    aae4:	blvc	2463c8 <strvisx@@Base+0x232654>
    aae8:	blvc	ff2066e4 <strvisx@@Base+0xff1f2970>
    aaec:	bcc	fe446350 <strvisx@@Base+0xfe4325dc>
    aaf0:	bvc	486214 <strvisx@@Base+0x4724a0>
    aaf4:	vstmdble	r6!, {d18-d19}
    aaf8:	ldrtmi	r4, [r2], -sp, lsr #18
    aafc:	ldrbtmi	r4, [r9], #-1568	; 0xfffff9e0
    ab00:	ldc2l	0, cr15, [r2], {8}
    ab04:			; <UNDEFINED> instruction: 0xf04f4d2b
    ab08:	mcrmi	1, 1, r3, cr11, cr15, {7}
    ab0c:	stmdavs	r8!, {r0, r2, r3, r4, r5, r6, sl, lr}^
    ab10:			; <UNDEFINED> instruction: 0xf91ef00a
    ab14:	tstcs	r1, r2, lsr #12
    ab18:			; <UNDEFINED> instruction: 0xf85a4603
    ab1c:			; <UNDEFINED> instruction: 0xf0020006
    ab20:	vstr	s30, [r5, #964]	; 0x3c4
    ab24:	bmi	971754 <strvisx@@Base+0x95d9e0>
    ab28:	ldrbtmi	r4, [sl], #-2829	; 0xfffff4f3
    ab2c:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    ab30:			; <UNDEFINED> instruction: 0x405a9b91
    ab34:	tsthi	r7, r0, asr #32	; <UNPREDICTABLE>
    ab38:	cfldr32vc	mvfx15, [r3, #-52]	; 0xffffffcc
    ab3c:	blhi	1c5e38 <strvisx@@Base+0x1b20c4>
    ab40:	svchi	0x00f0e8bd
    ab44:	andhi	pc, r0, pc, lsr #7
    ab48:	ldmibls	r9, {r3, r4, r7, r8, fp, ip, pc}
    ab4c:	svccc	0x00b99999
    ab50:	stclgt	12, cr12, [ip], {205}	; 0xcd
    ab54:	svccc	0x00eccccc
    ab58:	sbcmi	r0, r8, #0
    ab5c:	andeq	pc, r1, r6, lsr #10
    ab60:	andeq	r0, r0, r0, asr #5
    ab64:	andeq	r2, r2, ip, asr ip
    ab68:	andeq	pc, r1, r6, lsl r5	; <UNPREDICTABLE>
    ab6c:	andeq	r2, r2, r0, asr #24
    ab70:	andeq	r2, r2, lr, lsr ip
    ab74:	andeq	r2, r2, r8, lsl #23
    ab78:	andeq	sl, r0, r8, ror #19
    ab7c:	andeq	r2, r2, r2, asr #22
    ab80:	andeq	ip, r0, r4, asr #30
    ab84:	ldrdeq	r2, [r2], -ip
    ab88:	andeq	ip, r0, r0, ror pc
    ab8c:	andeq	ip, r0, sl, asr #29
    ab90:	andeq	ip, r0, sl, asr #29
    ab94:	andeq	r2, r2, ip, ror #20
    ab98:	andeq	lr, r0, r2, lsl #4
    ab9c:	andeq	ip, r0, sl, asr #29
    aba0:	andeq	ip, r0, r8, ror #27
    aba4:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
    aba8:	andeq	r2, r2, ip, lsl #19
    abac:	andeq	ip, r0, r8, ror #27
    abb0:			; <UNDEFINED> instruction: 0x0000cdba
    abb4:	andeq	r2, r2, r8, lsr r9
    abb8:	andeq	r0, r0, r0, lsr #5
    abbc:	ldrdeq	pc, [r1], -r6
    abc0:	movwcs	r6, #2174	; 0x87e
    abc4:	blmi	1863db8 <strvisx@@Base+0x1850044>
    abc8:	blvs	69bdbc <strvisx@@Base+0x688048>
    abcc:			; <UNDEFINED> instruction: 0xf0402a00
    abd0:	ldmib	sp, {r1, r2, r3, r7, pc}^
    abd4:	tstmi	r3, #8, 6	; 0x20000000
    abd8:	adchi	pc, sl, r0, asr #32
    abdc:	blvc	ff2467d8 <strvisx@@Base+0xff232a64>
    abe0:	bpl	fe446444 <strvisx@@Base+0xfe4326d0>
    abe4:	biccc	pc, r5, #-1342177276	; 0xb0000004
    abe8:			; <UNDEFINED> instruction: 0x13a2f2c9
    abec:	vabd.s8	<illegal reg q8.5>, <illegal reg q15.5>, <illegal reg q15.5>
    abf0:	blx	fe0cf3ba <strvisx@@Base+0xfe0bb646>
    abf4:			; <UNDEFINED> instruction: 0xf6cf2305
    abf8:	strtmi	r7, [fp], #-511	; 0xfffffe01
    abfc:	strbcs	lr, [r3, r7, asr #23]!
    ac00:			; <UNDEFINED> instruction: 0xf00a4638
    ac04:	strtmi	pc, [r9], -r9, lsl #18
    ac08:			; <UNDEFINED> instruction: 0xf8a2f00a
    ac0c:	orreq	pc, r9, #72, 12	; 0x4800000
    ac10:	orreq	pc, r8, #200, 12	; 0xc800000
    ac14:	teqeq	fp, pc, rrx	; <UNPREDICTABLE>
    ac18:	movwcs	pc, #2947	; 0xb83	; <UNPREDICTABLE>
    ac1c:	stmiavc	r0!, {r0, r1, r2, r3, r6, r9, fp, sp, lr, pc}^
    ac20:	strmi	r4, [r3], #-1541	; 0xfffff9fb
    ac24:	stmdane	r3!, {r3, r6, r7, r8, r9, fp, sp, lr, pc}^
    ac28:			; <UNDEFINED> instruction: 0xf00a4640
    ac2c:			; <UNDEFINED> instruction: 0x4629f8f5
    ac30:			; <UNDEFINED> instruction: 0xf88ef00a
    ac34:	strtmi	r4, [r0], -r5, lsl #12
    ac38:	ldc	7, cr15, [r2], #-988	; 0xfffffc24
    ac3c:	strtmi	r1, [r0], #-2609	; 0xfffff5cf
    ac40:	rsble	r2, r4, r0, lsl #30
    ac44:			; <UNDEFINED> instruction: 0xf04f4e42
    ac48:	andcs	r3, r1, #-67108861	; 0xfc000003
    ac4c:	strhi	lr, [r2, #-2509]	; 0xfffff633
    ac50:	smlsdxls	r1, lr, r4, r4
    ac54:			; <UNDEFINED> instruction: 0xf7f79600
    ac58:	blmi	fc5f20 <strvisx@@Base+0xfb21ac>
    ac5c:	ldrdeq	lr, [r8, -sp]
    ac60:	stmdacs	r1, {r0, r1, r3, r4, r5, r6, sl, lr}
    ac64:			; <UNDEFINED> instruction: 0xf171685a
    ac68:	blle	16cb870 <strvisx@@Base+0x16b7afc>
    ac6c:			; <UNDEFINED> instruction: 0x4620493a
    ac70:			; <UNDEFINED> instruction: 0xf0084479
    ac74:	smlald	pc, r5, r9, ip	; <UNPREDICTABLE>
    ac78:	andvc	pc, r0, #1325400064	; 0x4f000000
    ac7c:			; <UNDEFINED> instruction: 0xf00a2300
    ac80:	smusdxcs	r0, fp, r8
    ac84:	movwcs	r2, #517	; 0x205
    ac88:			; <UNDEFINED> instruction: 0xf3c617ce
    ac8c:	ldmdane	r0!, {r0, r3, r9, sl}
    ac90:	tsteq	r1, r7, asr #22
    ac94:	b	100d69c <strvisx@@Base+0xff9928>
    ac98:	addne	r5, r9, #129	; 0x81
    ac9c:			; <UNDEFINED> instruction: 0xf86cf00a
    aca0:	movwcs	r2, #612	; 0x264
    aca4:	strmi	r4, [r3], pc, lsl #12
    aca8:			; <UNDEFINED> instruction: 0xffe4f009
    acac:	movwcs	r2, #522	; 0x20a
    acb0:	strmi	r4, [lr], -r1, lsl #13
    acb4:			; <UNDEFINED> instruction: 0x46394658
    acb8:			; <UNDEFINED> instruction: 0xffdcf009
    acbc:	movwcs	r2, #522	; 0x20a
    acc0:			; <UNDEFINED> instruction: 0xf009274b
    acc4:			; <UNDEFINED> instruction: 0x469effd7
    acc8:	blmi	944864 <strvisx@@Base+0x930af0>
    accc:	ldrbtmi	r4, [fp], #-1602	; 0xfffff9be
    acd0:	ldmib	fp, {r3, r4, r5, r6, r9, sl, sp, lr, pc}^
    acd4:	ldrtmi	r2, [r0], -r6, lsl #6
    acd8:	ldc	6, cr4, [fp, #228]	; 0xe4
    acdc:			; <UNDEFINED> instruction: 0xf00a8b0e
    ace0:	strcs	pc, [r0], #-2173	; 0xfffff783
    ace4:	blhi	12465d0 <strvisx@@Base+0x123285c>
    ace8:	smlabteq	sl, sp, r9, lr
    acec:	ldmib	sp, {r0, r2, r3, r4, r5, r7, r8, sl, sp, lr, pc}^
    acf0:	stmdacs	r1, {r3, r8}
    acf4:	movweq	pc, #369	; 0x171	; <UNPREDICTABLE>
    acf8:	svcge	0x0070f6ff
    acfc:			; <UNDEFINED> instruction: 0xf00917d3
    ad00:			; <UNDEFINED> instruction: 0x4605ffb9
    ad04:			; <UNDEFINED> instruction: 0xf7ffe76e
    ad08:	eorvs	pc, r5, pc, lsl sp	; <UNPREDICTABLE>
    ad0c:	bmi	5442f0 <strvisx@@Base+0x53057c>
    ad10:	mvnscc	pc, #79	; 0x4f
    ad14:	strhi	lr, [r1, #-2509]	; 0xfffff633
    ad18:	andls	r4, r0, #2046820352	; 0x7a000000
    ad1c:			; <UNDEFINED> instruction: 0xf7f72201
    ad20:	ldr	lr, [sl, ip, asr #24]
    ad24:	strtmi	r4, [r0], -pc, lsl #18
    ad28:			; <UNDEFINED> instruction: 0xf0084479
    ad2c:			; <UNDEFINED> instruction: 0xe6e9fbbd
    ad30:	ldrtmi	r4, [r2], -sp, lsl #18
    ad34:	ldrbtmi	r4, [r9], #-1568	; 0xfffff9e0
    ad38:	blx	fedc6d62 <strvisx@@Base+0xfedb2fee>
    ad3c:	blmi	3048cc <strvisx@@Base+0x2f0b58>
    ad40:	ldrbtmi	r2, [fp], #-544	; 0xfffffde0
    ad44:			; <UNDEFINED> instruction: 0xf7f7e63e
    ad48:	svclt	0x0000eca8
    ad4c:	andeq	r2, r2, ip, ror r8
    ad50:	andeq	ip, r0, r0, lsl #25
    ad54:	andeq	r2, r2, r4, ror #15
    ad58:	andeq	ip, r0, ip, ror ip
    ad5c:			; <UNDEFINED> instruction: 0x0000cbbe
    ad60:	andeq	ip, r0, r8, asr #23
    ad64:	andeq	ip, r0, ip, asr #23
    ad68:	andeq	ip, r0, lr, lsl #23
    ad6c:	andeq	sp, r0, lr, lsr #29
    ad70:	blmi	2b9218 <strvisx@@Base+0x2a54a4>
    ad74:	ldmvs	sl, {r0, r1, r3, r4, r5, r6, sl, lr}
    ad78:	ldmdavs	fp, {r1, r3, r8, fp, ip, sp, pc}
    ad7c:	ldrlt	fp, [r0, #-355]	; 0xfffffe9d
    ad80:	b	ac8d64 <strvisx@@Base+0xab4ff0>
    ad84:	andcs	r4, r1, r4, lsl #12
    ad88:	bl	748d6c <strvisx@@Base+0x734ff8>
    ad8c:	andle	r4, r0, r4, lsl #5
    ad90:	pop	{r4, r8, sl, fp, ip, sp, pc}
    ad94:	ldr	r4, [r9, #-16]
    ad98:	svclt	0x00004770
    ad9c:	ldrdeq	r2, [r2], -r0
    ada0:	mvnsmi	lr, #737280	; 0xb4000
    ada4:			; <UNDEFINED> instruction: 0x46074615
    ada8:	ldrmi	r9, [ip], -r8, lsl #28
    adac:	ldc2	0, cr15, [r6, #12]
    adb0:	movwcs	r4, #2324	; 0x914
    adb4:	stmdbhi	r0, {r1, r2, r4, r6, r7, r8, fp, sp, lr, pc}
    adb8:	strbvs	r4, [fp], #-1145	; 0xfffffb87
    adbc:	stmib	r1, {r0, r1, r3, r8, r9, sp, lr}^
    adc0:	strcs	r5, [r0], #-1032	; 0xfffffbf8
    adc4:	strcs	r6, [r0, #-1039]	; 0xfffffbf1
    adc8:	stmib	r1, {r1, r2, r3, r6, r7, sp, lr}^
    adcc:	stmib	r1, {r1, r2, r8, fp, pc}^
    add0:	cfstr32	mvfx4, [r1, #16]
    add4:	vstr	d0, [r1, #40]	; 0x28
    add8:			; <UNDEFINED> instruction: 0xf7ff0b0e
    addc:			; <UNDEFINED> instruction: 0x2001fcb5
    ade0:			; <UNDEFINED> instruction: 0xffc6f7ff
    ade4:	andcs	r4, lr, r8, lsl #18
    ade8:			; <UNDEFINED> instruction: 0xf0054479
    adec:	stmdbmi	r7, {r0, r1, r5, r6, fp, ip, sp, lr, pc}
    adf0:	ldrbtmi	r2, [r9], #-28	; 0xffffffe4
    adf4:			; <UNDEFINED> instruction: 0xf85ef005
    adf8:	mvnsmi	lr, #12386304	; 0xbd0000
    adfc:			; <UNDEFINED> instruction: 0xf7f72001
    ae00:	svclt	0x0000bb87
    ae04:	andeq	r2, r2, ip, lsl #13
    ae08:			; <UNDEFINED> instruction: 0xfffff9d1
    ae0c:			; <UNDEFINED> instruction: 0xfffff943
    ae10:	andcs	fp, r0, r0, ror r5
    ae14:	bl	1fc8df8 <strvisx@@Base+0x1fb5084>
    ae18:			; <UNDEFINED> instruction: 0xf7f74d11
    ae1c:	ldrbtmi	lr, [sp], #-2526	; 0xfffff622
    ae20:	andcs	r4, r1, r4, lsl #12
    ae24:	b	ff3c8e08 <strvisx@@Base+0xff3b5094>
    ae28:	tstle	r7, r4, lsl #5
    ae2c:	ldrbtmi	r4, [fp], #-2829	; 0xfffff4f3
    ae30:	ldrdeq	lr, [r4, -r3]
    ae34:	movwcs	lr, #35283	; 0x89d3
    ae38:	svclt	0x00084299
    ae3c:			; <UNDEFINED> instruction: 0xd1094290
    ae40:	movwcs	r4, #6153	; 0x1809
    ae44:	ldrmi	r4, [r9], -r9, lsl #20
    ae48:	ldrbtmi	r5, [sl], #-2088	; 0xfffff7d8
    ae4c:	ldrhtmi	lr, [r0], #-141	; 0xffffff73
    ae50:	ldmdblt	r8, {r1, ip, sp, lr, pc}^
    ae54:			; <UNDEFINED> instruction: 0xf7ff2001
    ae58:	ldrb	pc, [r1, fp, lsl #31]!	; <UNPREDICTABLE>
    ae5c:	svclt	0x0000bd70
    ae60:	andeq	lr, r1, r2, ror #29
    ae64:	andeq	r2, r2, r6, lsl r6
    ae68:	andeq	r0, r0, r0, lsr #5
    ae6c:	andeq	sl, r0, r2, ror #5
    ae70:	strlt	r3, [r8, #-60]	; 0xffffffc4
    ae74:	vtst.8	d2, d0, d28
    ae78:	ldm	pc, {r1, r3, r4, r5, r6, r7, pc}^	; <UNPREDICTABLE>
    ae7c:	addseq	pc, fp, r0, lsl r0	; <UNPREDICTABLE>
    ae80:	addseq	r0, lr, r1, lsr #1
    ae84:	adceq	r0, sl, sp, lsr #1
    ae88:	adceq	r0, r4, r7, lsr #1
    ae8c:	sbceq	r0, r2, r5, asr #1
    ae90:	ldrhteq	r0, [ip], pc
    ae94:	ldrhteq	r0, [r6], r9
    ae98:	ldrhteq	r0, [r0], r3
    ae9c:	ldrshteq	r0, [r2], #5
    aea0:	rsceq	r0, ip, pc, ror #1
    aea4:	rsceq	r0, r6, r9, ror #1
    aea8:	rsceq	r0, r0, r3, ror #1
    aeac:	ldrsbeq	r0, [sl], #13
    aeb0:	ldrsbeq	r0, [r4], #7
    aeb4:	ldrsbteq	r0, [r4], #-1
    aeb8:	rsbeq	r0, lr, r1, ror r0
    aebc:	rsbeq	r0, r8, fp, rrx
    aec0:	rsbeq	r0, r2, r5, rrx
    aec4:	subseq	r0, r8, pc, asr r0
    aec8:	subseq	r0, r2, r5, asr r0
    aecc:	subeq	r0, ip, pc, asr #32
    aed0:	subeq	r0, r6, r9, asr #32
    aed4:	addeq	r0, ip, r3, asr #32
    aed8:	addeq	r0, r6, r9, lsl #1
    aedc:	addeq	r0, r0, r3, lsl #1
    aee0:	rsbseq	r0, sl, sp, ror r0
    aee4:	addseq	r0, r8, r7, ror r0
    aee8:	umullseq	r0, r2, r5, r0
    aeec:	sbceq	r0, fp, pc, lsl #1
    aef0:	sbceq	r0, lr, r8, asr #1
    aef4:	eorseq	r0, sp, r0, asr #32
    aef8:	ldrbtmi	r4, [r8], #-2142	; 0xfffff7a2
    aefc:	ldmdami	lr, {r3, r8, sl, fp, ip, sp, pc}^
    af00:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af04:	ldrbtmi	r4, [r8], #-2141	; 0xfffff7a3
    af08:	ldmdami	sp, {r3, r8, sl, fp, ip, sp, pc}^
    af0c:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af10:	ldrbtmi	r4, [r8], #-2140	; 0xfffff7a4
    af14:	ldmdami	ip, {r3, r8, sl, fp, ip, sp, pc}^
    af18:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af1c:	ldrbtmi	r4, [r8], #-2139	; 0xfffff7a5
    af20:	ldmdami	fp, {r3, r8, sl, fp, ip, sp, pc}^
    af24:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af28:	ldrbtmi	r4, [r8], #-2138	; 0xfffff7a6
    af2c:			; <UNDEFINED> instruction: 0xf7f7bd08
    af30:	pop	{r3, r5, r6, r7, sl, fp, sp, lr, pc}
    af34:	stmdavs	r0, {r3, lr}
    af38:	ldmdblt	sl, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    af3c:	ldrbtmi	r4, [r8], #-2134	; 0xfffff7aa
    af40:	ldmdami	r6, {r3, r8, sl, fp, ip, sp, pc}^
    af44:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af48:	ldrbtmi	r4, [r8], #-2133	; 0xfffff7ab
    af4c:	ldmdami	r5, {r3, r8, sl, fp, ip, sp, pc}^
    af50:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af54:	ldrbtmi	r4, [r8], #-2132	; 0xfffff7ac
    af58:	ldmdami	r4, {r3, r8, sl, fp, ip, sp, pc}^
    af5c:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af60:	ldrbtmi	r4, [r8], #-2131	; 0xfffff7ad
    af64:	ldmdami	r3, {r3, r8, sl, fp, ip, sp, pc}^
    af68:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af6c:	ldrbtmi	r4, [r8], #-2130	; 0xfffff7ae
    af70:	ldmdami	r2, {r3, r8, sl, fp, ip, sp, pc}^
    af74:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af78:	ldrbtmi	r4, [r8], #-2129	; 0xfffff7af
    af7c:	ldmdami	r1, {r3, r8, sl, fp, ip, sp, pc}^
    af80:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af84:	ldrbtmi	r4, [r8], #-2128	; 0xfffff7b0
    af88:	ldmdami	r0, {r3, r8, sl, fp, ip, sp, pc}^
    af8c:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af90:	ldrbtmi	r4, [r8], #-2127	; 0xfffff7b1
    af94:	stmdami	pc, {r3, r8, sl, fp, ip, sp, pc}^	; <UNPREDICTABLE>
    af98:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    af9c:	ldrbtmi	r4, [r8], #-2126	; 0xfffff7b2
    afa0:	stmdami	lr, {r3, r8, sl, fp, ip, sp, pc}^
    afa4:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    afa8:	ldrbtmi	r4, [r8], #-2125	; 0xfffff7b3
    afac:	stmdami	sp, {r3, r8, sl, fp, ip, sp, pc}^
    afb0:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    afb4:	ldrbtmi	r4, [r8], #-2124	; 0xfffff7b4
    afb8:	stmdami	ip, {r3, r8, sl, fp, ip, sp, pc}^
    afbc:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    afc0:	ldrbtmi	r4, [r8], #-2123	; 0xfffff7b5
    afc4:	stmdami	fp, {r3, r8, sl, fp, ip, sp, pc}^
    afc8:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    afcc:	ldrbtmi	r4, [r8], #-2122	; 0xfffff7b6
    afd0:	stmdami	sl, {r3, r8, sl, fp, ip, sp, pc}^
    afd4:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    afd8:	ldrbtmi	r4, [r8], #-2121	; 0xfffff7b7
    afdc:	stmdami	r9, {r3, r8, sl, fp, ip, sp, pc}^
    afe0:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    afe4:	ldrbtmi	r4, [r8], #-2120	; 0xfffff7b8
    afe8:	stmdami	r8, {r3, r8, sl, fp, ip, sp, pc}^
    afec:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    aff0:	ldrbtmi	r4, [r8], #-2119	; 0xfffff7b9
    aff4:	stmdami	r7, {r3, r8, sl, fp, ip, sp, pc}^
    aff8:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    affc:	ldrbtmi	r4, [r8], #-2118	; 0xfffff7ba
    b000:	stmdami	r6, {r3, r8, sl, fp, ip, sp, pc}^
    b004:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b008:	ldrbtmi	r4, [r8], #-2117	; 0xfffff7bb
    b00c:	stmdami	r5, {r3, r8, sl, fp, ip, sp, pc}^
    b010:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b014:	ldrbtmi	r4, [r8], #-2116	; 0xfffff7bc
    b018:	stmdami	r4, {r3, r8, sl, fp, ip, sp, pc}^
    b01c:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b020:	ldrbtmi	r4, [r8], #-2115	; 0xfffff7bd
    b024:	stmdami	r3, {r3, r8, sl, fp, ip, sp, pc}^
    b028:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b02c:	ldrbtmi	r4, [r8], #-2114	; 0xfffff7be
    b030:	stmdami	r2, {r3, r8, sl, fp, ip, sp, pc}^
    b034:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b038:	ldrbtmi	r4, [r8], #-2113	; 0xfffff7bf
    b03c:	stmdami	r1, {r3, r8, sl, fp, ip, sp, pc}^
    b040:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b044:	ldrbtmi	r4, [r8], #-2112	; 0xfffff7c0
    b048:	stmdami	r0, {r3, r8, sl, fp, ip, sp, pc}^
    b04c:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b050:	ldrbtmi	r4, [r8], #-2111	; 0xfffff7c1
    b054:	ldmdami	pc!, {r3, r8, sl, fp, ip, sp, pc}	; <UNPREDICTABLE>
    b058:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b05c:	ldrbtmi	r4, [r8], #-2110	; 0xfffff7c2
    b060:	ldmdami	lr!, {r3, r8, sl, fp, ip, sp, pc}
    b064:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b068:	ldrbtmi	r4, [r8], #-2109	; 0xfffff7c3
    b06c:	ldmdami	sp!, {r3, r8, sl, fp, ip, sp, pc}
    b070:	cfstrslt	mvf4, [r8, #-480]	; 0xfffffe20
    b074:	andeq	ip, r0, sl, lsl sl
    b078:	andeq	sp, r0, ip, asr r0
    b07c:	andeq	ip, r0, lr, lsl #23
    b080:	andeq	ip, r0, r4, lsr #23
    b084:	andeq	ip, r0, r6, asr #23
    b088:	andeq	ip, r0, r0, ror #23
    b08c:	strdeq	ip, [r0], -sl
    b090:	andeq	ip, r0, r8, lsl #24
    b094:	andeq	ip, r0, r6, lsl ip
    b098:	andeq	ip, r0, sl, lsr #24
    b09c:	andeq	ip, r0, r8, lsr ip
    b0a0:	andeq	ip, r0, r2, asr ip
    b0a4:	andeq	ip, r0, r4, ror #24
    b0a8:	andeq	ip, r0, sl, ror ip
    b0ac:	andeq	ip, r0, r4, lsl #25
    b0b0:	andeq	ip, r0, r6, lsr #25
    b0b4:			; <UNDEFINED> instruction: 0x0000ccbc
    b0b8:	andeq	ip, r0, lr, lsr sl
    b0bc:	andeq	ip, r0, r4, asr sl
    b0c0:	andeq	ip, r0, r2, ror #20
    b0c4:	andeq	ip, r0, r4, ror sl
    b0c8:	andeq	ip, r0, r6, lsl #21
    b0cc:	muleq	r0, r8, sl
    b0d0:			; <UNDEFINED> instruction: 0x0000cab2
    b0d4:	andeq	ip, r0, ip, asr #21
    b0d8:	andeq	ip, r0, lr, lsr #19
    b0dc:			; <UNDEFINED> instruction: 0x0000c9bc
    b0e0:	andeq	ip, r0, sl, asr #19
    b0e4:	ldrdeq	ip, [r0], -r8
    b0e8:	muleq	r0, r2, pc	; <UNPREDICTABLE>
    b0ec:	andeq	ip, r0, r8, asr #30
    b0f0:	andeq	ip, r0, r6, ror #30
    b0f4:	andeq	ip, r0, ip, ror #29
    b0f8:	strdeq	ip, [r0], -lr
    b0fc:	andeq	ip, r0, r8, lsl #30
    b100:	andeq	ip, r0, r6, lsl pc
    b104:	andeq	ip, r0, r0, lsr #28
    b108:	andeq	ip, r0, sl, lsr #28
    b10c:	andeq	ip, r0, r8, lsr lr
    b110:	andeq	ip, r0, r2, asr lr
    b114:	andeq	ip, r0, r0, ror lr
    b118:	andeq	ip, r0, lr, lsl #29
    b11c:	andeq	fp, r0, r8, asr #12
    b120:	muleq	r0, r2, lr
    b124:	andeq	ip, r0, r8, lsr #18
    b128:	andeq	sp, r0, r2, lsr r5
    b12c:	andeq	ip, r0, r0, lsl #18
    b130:	andeq	ip, r0, sl, lsl ip
    b134:	andeq	ip, r0, ip, lsr ip
    b138:	andeq	ip, r0, lr, asr ip
    b13c:			; <UNDEFINED> instruction: 0x0000ccb4
    b140:	andeq	ip, r0, r2, ror ip
    b144:	andeq	ip, r0, r8, lsl #25
    b148:			; <UNDEFINED> instruction: 0x0000ccba
    b14c:	ldrdeq	ip, [r0], -r4
    b150:	andeq	ip, r0, r2, lsl #26
    b154:	andeq	ip, r0, r8, lsl sp
    b158:	andeq	ip, r0, sl, lsr sp
    b15c:	andeq	ip, r0, ip, ror #26
    b160:	andeq	ip, r0, r6, ror sp
    b164:	muleq	r0, r4, r8
    b168:	cmnlt	fp, r3, lsl #17
    b16c:			; <UNDEFINED> instruction: 0x4604b510
    b170:	ldmdblt	r2, {r1, r7, r8, fp, sp, lr}^
    b174:	bcs	65984 <strvisx@@Base+0x51c10>
    b178:	stmdblt	r1, {r0, r1, r2, fp, ip, lr, pc}^
    b17c:	svcpl	0x0000f5b3
    b180:	stmiavs	r2, {r0, r1, r8, r9, ip, lr, pc}^
    b184:	svceq	0x0052ebb3
    b188:	lfmlt	f5, 1, [r0, #-8]
    b18c:	stmiavs	r2, {r4, r5, r6, r8, r9, sl, lr}^
    b190:	bne	ff4a5218 <strvisx@@Base+0xff4914a4>
    b194:			; <UNDEFINED> instruction: 0xf7f718c1
    b198:	ldmib	r4, {r1, r6, r7, r9, fp, sp, lr, pc}^
    b19c:	tstcs	r0, r2, lsl #6
    b1a0:	bne	fe6e342c <strvisx@@Base+0xfe6cf6b8>
    b1a4:	ldclt	0, cr6, [r0, #-908]	; 0xfffffc74
    b1a8:	tstcs	r1, r0, lsl r5
    b1ac:			; <UNDEFINED> instruction: 0xf7f72028
    b1b0:	strmi	lr, [r4], -r6, asr #17
    b1b4:	movwcs	fp, #384	; 0x180
    b1b8:	orrvc	pc, r0, pc, asr #8
    b1bc:			; <UNDEFINED> instruction: 0xf04f2001
    b1c0:			; <UNDEFINED> instruction: 0x61a36200
    b1c4:	cmnvs	r1, r3, ror #4
    b1c8:			; <UNDEFINED> instruction: 0x61226220
    b1cc:	ldm	r6!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    b1d0:	stmib	r4, {r0, r1, r9, sl, lr}^
    b1d4:	mrslt	r0, (UNDEF: 8)
    b1d8:	ldclt	6, cr4, [r0, #-128]	; 0xffffff80
    b1dc:	ldrmi	r4, [ip], -r0, lsr #12
    b1e0:	stmdb	sl, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    b1e4:	svclt	0x0000e7f8
    b1e8:	svcvs	0x0000f1b1
    b1ec:	svclt	0x0094b570
    b1f0:	strcs	r2, [r1, #-1280]	; 0xfffffb00
    b1f4:	svclt	0x00082800
    b1f8:	stmiblt	r5, {r0, r8, sl, sp}
    b1fc:	strmi	r4, [r6], -ip, lsl #12
    b200:	eorcs	r2, r8, r1, lsl #2
    b204:	ldm	sl, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    b208:	movwcs	fp, #4416	; 0x1140
    b20c:	sbcvs	r6, r4, r4, lsl #2
    b210:	subvs	r6, r5, #68, 2
    b214:	strpl	lr, [r0], -r0, asr #19
    b218:	andvs	r6, r3, #-1073741792	; 0xc0000020
    b21c:	andcs	fp, r0, r0, ror sp
    b220:	svclt	0x0000bd70
    b224:	teqlt	r0, r8, lsl #10
    b228:	cmnlt	r3, r3, lsl #19
    b22c:	blcc	65a40 <strvisx@@Base+0x51ccc>
    b230:	svcne	0x0080f5b3
    b234:	tstcs	r0, r2, lsl r3
    b238:			; <UNDEFINED> instruction: 0xf004200b
    b23c:	andcs	pc, fp, fp, lsr lr	; <UNPREDICTABLE>
    b240:	stmib	r8!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    b244:	rscscc	pc, pc, pc, asr #32
    b248:	ldmib	r0, {r3, r8, sl, fp, ip, sp, pc}^
    b24c:	addsmi	r2, sl, #0, 6
    b250:	bvs	ffa1c <strvisx@@Base+0xebca8>
    b254:			; <UNDEFINED> instruction: 0xf5b33b01
    b258:	rscle	r1, ip, #128, 30	; 0x200
    b25c:	blcs	25370 <strvisx@@Base+0x115fc>
    b260:	stmdbvs	r3, {r0, r3, r5, r6, r7, ip, lr, pc}
    b264:	svcvs	0x0000f1b3
    b268:	stmdbvs	r2, {r0, r2, r5, r6, r7, fp, ip, lr, pc}^
    b26c:	mvnle	r4, #805306377	; 0x30000009
    b270:	addsmi	r6, sl, #12779520	; 0xc30000
    b274:	stmvs	r2, {r0, r1, r2, r3, r4, r6, r7, r8, r9, ip, lr, pc}
    b278:	bicsle	r4, ip, #805306377	; 0x30000009
    b27c:	sbcsle	r2, sl, r0, lsl #18
    b280:	ldmdblt	fp, {r0, r1, r3, r7, r8, fp, sp, lr}
    b284:	movwcs	lr, #2513	; 0x9d1
    b288:			; <UNDEFINED> instruction: 0xd1d4429a
    b28c:	blcc	65ac0 <strvisx@@Base+0x51d4c>
    b290:	svcne	0x0080f5b3
    b294:	stmdavs	fp, {r0, r1, r2, r3, r6, r7, r9, ip, lr, pc}^
    b298:	sbcle	r2, ip, r0, lsl #22
    b29c:			; <UNDEFINED> instruction: 0xf1b3690b
    b2a0:	stmiale	r8, {r8, r9, sl, fp, sp, lr}^
    b2a4:	addsmi	r6, r3, #1212416	; 0x128000
    b2a8:	stmiavs	fp, {r0, r2, r6, r7, r8, r9, ip, lr, pc}^
    b2ac:	bicle	r4, r2, #-1610612727	; 0xa0000009
    b2b0:	addsmi	r6, r3, #9043968	; 0x8a0000
    b2b4:	subvs	sp, r1, #-67108862	; 0xfc000002
    b2b8:	bvs	2d32c0 <strvisx@@Base+0x2bf54c>
    b2bc:	andvs	r3, fp, #67108864	; 0x4000000
    b2c0:	svclt	0x0000bd08
    b2c4:	ldrlt	fp, [r8, #-432]!	; 0xfffffe50
    b2c8:	stmibvs	r3, {r2, r9, sl, lr}
    b2cc:	bvs	977880 <strvisx@@Base+0x963b0c>
    b2d0:			; <UNDEFINED> instruction: 0xf5b53d01
    b2d4:	movwle	r1, #61312	; 0xef80
    b2d8:	andcs	r2, fp, r0, lsl #2
    b2dc:	stc2l	0, cr15, [sl, #16]!
    b2e0:	ldrhtmi	lr, [r8], -sp
    b2e4:			; <UNDEFINED> instruction: 0xf7f7200b
    b2e8:	ldmib	r0, {r0, r1, r4, r6, r8, fp, ip, sp, pc}^
    b2ec:	addsmi	r2, sl, #0, 6
    b2f0:			; <UNDEFINED> instruction: 0xe7ecd1f2
    b2f4:	stmdavs	r3!, {r4, r5, r6, r8, r9, sl, lr}^
    b2f8:	rscle	r2, sp, r0, lsl #22
    b2fc:			; <UNDEFINED> instruction: 0xf1b36923
    b300:	stmiale	r9!, {r8, r9, sl, fp, sp, lr}^
    b304:	addsmi	r6, r3, #1605632	; 0x188000
    b308:	stmiavs	r3!, {r1, r2, r5, r6, r7, r8, r9, ip, lr, pc}^
    b30c:	mvnle	r4, #-1610612727	; 0xa0000009
    b310:	addsmi	r6, r3, #10616832	; 0xa20000
    b314:	eorvs	sp, r5, #224, 6	; 0x80000003
    b318:	bvs	1839934 <strvisx@@Base+0x1825bc0>
    b31c:			; <UNDEFINED> instruction: 0xffd2f7ff
    b320:	rsbvs	r6, r5, #2670592	; 0x28c000
    b324:			; <UNDEFINED> instruction: 0x4620b15b
    b328:	rscscc	pc, pc, #79	; 0x4f
    b32c:			; <UNDEFINED> instruction: 0xf7f72128
    b330:			; <UNDEFINED> instruction: 0x4620e8fa
    b334:	ldrhtmi	lr, [r8], -sp
    b338:	ldmdalt	ip, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    b33c:	stmdavs	r0!, {r3, r4, r5, r8, sl, fp, ip, sp, pc}
    b340:	rscscc	pc, pc, #79	; 0x4f
    b344:			; <UNDEFINED> instruction: 0xf7f76961
    b348:	stmdavs	r0!, {r1, r2, r3, r5, r6, r7, fp, sp, lr, pc}
    b34c:	ldmda	r4, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    b350:	svclt	0x0000e7e9
    b354:	teqlt	r8, r0, ror r5
    b358:	strmi	r6, [r4], -r1, lsl #19
    b35c:	bvs	8f7928 <strvisx@@Base+0x8e3bb4>
    b360:			; <UNDEFINED> instruction: 0xf5b33b01
    b364:	tstle	r2, #128, 30	; 0x200
    b368:	andcs	r2, fp, r0, lsl #2
    b36c:	stc2	0, cr15, [r2, #16]!
    b370:			; <UNDEFINED> instruction: 0xf7f7200b
    b374:	strcs	lr, [r0, #-2320]	; 0xfffff6f0
    b378:	ldcllt	6, cr4, [r0, #-160]!	; 0xffffff60
    b37c:	movwcs	lr, #2512	; 0x9d0
    b380:			; <UNDEFINED> instruction: 0xd1f1429a
    b384:	blcc	65c18 <strvisx@@Base+0x51ea4>
    b388:	svcne	0x0080f5b3
    b38c:	stmdavs	r3!, {r2, r3, r5, r6, r7, r9, ip, lr, pc}^
    b390:	rscle	r2, r9, r0, lsl #22
    b394:			; <UNDEFINED> instruction: 0xf1b26922
    b398:	stmiale	r5!, {r8, r9, sl, fp, sp, lr}^
    b39c:	addmi	r6, r2, #96, 18	; 0x180000
    b3a0:	stmiavs	r6!, {r1, r5, r6, r7, r8, r9, ip, lr, pc}^
    b3a4:	bicsle	r4, pc, #176, 4
    b3a8:	adcmi	r6, lr, #10813440	; 0xa50000
    b3ac:	teqlt	r1, #220, 6	; 0x70000003
    b3b0:			; <UNDEFINED> instruction: 0xf1b2441d
    b3b4:	stmdale	sl, {r8, r9, sl, fp, sp, lr}
    b3b8:	addsmi	r6, sl, #1622016	; 0x18c000
    b3bc:	stmiavs	r1!, {r0, r1, r2, r8, r9, ip, lr, pc}^
    b3c0:	movwle	r4, #17035	; 0x428b
    b3c4:	addsmi	r6, r9, #10682368	; 0xa30000
    b3c8:	bne	ff27b070 <strvisx@@Base+0xff2672fc>
    b3cc:	tstcs	r0, r7, lsl #4
    b3d0:			; <UNDEFINED> instruction: 0xf004200b
    b3d4:	andcs	pc, fp, pc, ror #26
    b3d8:	ldm	ip, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    b3dc:	strtmi	r2, [r8], -r0, lsl #2
    b3e0:			; <UNDEFINED> instruction: 0xff02f7ff
    b3e4:	stmdacs	r0, {r0, r2, r9, sl, lr}
    b3e8:	strtmi	sp, [r1], -r6, asr #1
    b3ec:			; <UNDEFINED> instruction: 0xff1af7ff
    b3f0:	sbcle	r2, r1, r0, lsl #16
    b3f4:	strcs	r4, [r0, #-1576]	; 0xfffff9d8
    b3f8:			; <UNDEFINED> instruction: 0xff64f7ff
    b3fc:	stmdavs	r2!, {r2, r3, r4, r5, r7, r8, r9, sl, sp, lr, pc}
    b400:	mulle	sp, r3, r2
    b404:			; <UNDEFINED> instruction: 0xf004200b
    b408:	andcs	pc, fp, r5, asr sp	; <UNPREDICTABLE>
    b40c:	stmia	r2, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    b410:	ldmdblt	r3, {r0, r1, r5, r7, r8, fp, sp, lr}^
    b414:	movwcs	lr, #2516	; 0x9d4
    b418:	mulle	r6, r3, r2
    b41c:	ldrb	r2, [r6, r0, lsl #10]
    b420:	blcs	1c49c <strvisx@@Base+0x8728>
    b424:	stmdbvs	r2!, {r0, r1, r4, r6, r7, ip, lr, pc}
    b428:	bvs	90533c <strvisx@@Base+0x8f15c8>
    b42c:			; <UNDEFINED> instruction: 0xf5b33b01
    b430:	rscsle	r1, r3, #128, 30	; 0x200
    b434:	strcs	r6, [r0, #-2147]	; 0xfffff79d
    b438:	svclt	0x0000e7f3
    b43c:			; <UNDEFINED> instruction: 0x4604b510
    b440:	ldmdblt	r3, {r0, r1, r7, r8, fp, sp, lr}
    b444:	blcs	65c58 <strvisx@@Base+0x51ee4>
    b448:	stmiavs	r3!, {r1, r8, fp, ip, lr, pc}^
    b44c:	ldclt	0, cr6, [r0, #-652]	; 0xfffffd74
    b450:	andeq	lr, r0, #208, 18	; 0x340000
    b454:	movweq	pc, #4227	; 0x1083	; <UNPREDICTABLE>
    b458:	movweq	pc, #4099	; 0x1003	; <UNPREDICTABLE>
    b45c:	svclt	0x00184290
    b460:	movweq	pc, #4163	; 0x1043	; <UNPREDICTABLE>
    b464:	tstcs	r0, r3, lsr #6
    b468:			; <UNDEFINED> instruction: 0xf004200b
    b46c:	andcs	pc, fp, r3, lsr #26
    b470:	ldm	r0, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    b474:	stmdavs	r0!, {r0, r5, r6, r8, fp, sp, lr}
    b478:	svcvc	0x0080f5b1
    b47c:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    b480:	movwcc	lr, #10692	; 0x29c4
    b484:	movwcs	sp, #4106	; 0x100a
    b488:	addvc	pc, r0, #1325400064	; 0x4f000000
    b48c:			; <UNDEFINED> instruction: 0xff9af007
    b490:	vst4.16	{d27,d29,d31,d33}, [pc :128], r0
    b494:	eorvs	r7, r0, r0, lsl #7
    b498:	cmnvs	r3, r0, rrx
    b49c:			; <UNDEFINED> instruction: 0x4010e8bd
    b4a0:	rscscc	pc, pc, #79	; 0x4f
    b4a4:	orrvc	pc, r0, pc, asr #8
    b4a8:	ldmdalt	sl!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    b4ac:	ldrb	r6, [r5, r0, lsr #16]!
    b4b0:	sbcsle	r2, r8, r0, lsl #20
    b4b4:			; <UNDEFINED> instruction: 0xf1b36923
    b4b8:	ldmle	r4, {r8, r9, sl, fp, sp, lr}^
    b4bc:	addmi	r6, fp, #1589248	; 0x184000
    b4c0:	stmiavs	r3!, {r0, r4, r6, r7, r8, r9, ip, lr, pc}^
    b4c4:	bicle	r4, lr, #-1879048183	; 0x90000009
    b4c8:	addsmi	r6, r3, #10616832	; 0xa20000
    b4cc:			; <UNDEFINED> instruction: 0xe7cad2d4
    b4d0:	ldrbmi	r6, [r0, -r0, lsl #18]!
    b4d4:	ldrbmi	r6, [r0, -r0, asr #18]!
    b4d8:	ldrbmi	r6, [r0, -r0, asr #20]!
    b4dc:	ldrbmi	r6, [r0, -r0, lsl #20]!
    b4e0:	strdlt	fp, [r0, #-88]	; 0xffffffa8
    b4e4:	strmi	r6, [lr], -r5, lsl #19
    b4e8:	cmnlt	sp, r4, lsl #12
    b4ec:	vnmlsne.f32	s13, s20, s7
    b4f0:	svcne	0x0080f5b2
    b4f4:	tstcs	r0, r3, lsl r3
    b4f8:			; <UNDEFINED> instruction: 0xf004200b
    b4fc:	ldrdcs	pc, [fp], -fp
    b500:	stmda	r8, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    b504:	ldrbcc	pc, [pc, #79]!	; b55b <el_source@plt+0x8c1f>	; <UNPREDICTABLE>
    b508:	ldcllt	6, cr4, [r8, #160]!	; 0xa0
    b50c:	movwcs	lr, #2512	; 0x9d0
    b510:			; <UNDEFINED> instruction: 0xd1f0429a
    b514:	vnmlsne.f32	s13, s20, s7
    b518:	svcne	0x0080f5b2
    b51c:	stmdavs	r2!, {r0, r1, r3, r5, r6, r7, r9, ip, lr, pc}^
    b520:	rscle	r2, r8, r0, lsl #20
    b524:			; <UNDEFINED> instruction: 0xf1b26922
    b528:	stmiale	r4!, {r8, r9, sl, fp, sp, lr}^
    b52c:	addmi	r6, r2, #96, 18	; 0x180000
    b530:	stmiavs	r1!, {r0, r5, r6, r7, r8, r9, ip, lr, pc}^
    b534:	bicsle	r4, lr, #136, 4	; 0x80000008
    b538:	addmi	r6, r1, #160, 16	; 0xa00000
    b53c:	addsmi	sp, r6, #1811939331	; 0x6c000003
    b540:	bllt	fe57f5f8 <strvisx@@Base+0xfe56b884>
    b544:	teqle	r0, r1, lsl #22
    b548:	svcvs	0x0000f1b6
    b54c:	addmi	sp, lr, #2686976	; 0x290000
    b550:	svclt	0x002c4620
    b554:	mrscs	r2, (UNDEF: 17)
    b558:	mcr2	7, 0, pc, cr6, cr15, {7}	; <UNPREDICTABLE>
    b55c:	adcsmi	r6, r1, #1589248	; 0x184000
    b560:	stmiavs	r7!, {r0, r3, r4, r8, fp, ip, lr, pc}^
    b564:	andsle	r4, ip, #1879048203	; 0x7000000b
    b568:	stmdavs	r0!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
    b56c:	ldrbcc	fp, [pc, r8, lsl #31]!
    b570:	movweq	pc, #4175	; 0x104f	; <UNPREDICTABLE>
    b574:			; <UNDEFINED> instruction: 0xf027bf8c
    b578:	vst1.64	{d16}, [pc :256]
    b57c:	adcsmi	r7, r7, #128, 14	; 0x2000000
    b580:	ldrtmi	fp, [r7], -r8, lsr #30
    b584:			; <UNDEFINED> instruction: 0xf007463a
    b588:	orrlt	pc, r8, sp, lsl pc	; <UNPREDICTABLE>
    b58c:	stmib	r4, {r0, r1, r2, r4, r5, r7, r9, lr}^
    b590:	cmnvs	r7, r0
    b594:	strtmi	sp, [r8], -r5, lsl #16
    b598:	ldflte	f6, [r8, #152]!	; 0x98
    b59c:	strtmi	r2, [r8], -r0, lsl #10
    b5a0:			; <UNDEFINED> instruction: 0xf06fbdf8
    b5a4:	strtmi	r0, [r8], -r8, lsl #10
    b5a8:			; <UNDEFINED> instruction: 0xf06fbdf8
    b5ac:			; <UNDEFINED> instruction: 0xe7ab0530
    b5b0:	streq	pc, [r1, #-111]	; 0xffffff91
    b5b4:	svclt	0x0000e7a8
    b5b8:	teqlt	r0, r8, lsl #10
    b5bc:	cmnlt	fp, r3, lsl #19
    b5c0:	blcc	65dd4 <strvisx@@Base+0x52060>
    b5c4:	svcne	0x0080f5b3
    b5c8:	tstcs	r0, r1, lsl r3
    b5cc:			; <UNDEFINED> instruction: 0xf004200b
    b5d0:	andcs	pc, fp, r1, ror ip	; <UNPREDICTABLE>
    b5d4:	svc	0x00def7f6
    b5d8:	stclt	0, cr2, [r8, #-0]
    b5dc:	movwcs	lr, #2512	; 0x9d0
    b5e0:			; <UNDEFINED> instruction: 0xd1f2429a
    b5e4:	blcc	65df8 <strvisx@@Base+0x52084>
    b5e8:	svcne	0x0080f5b3
    b5ec:	stmdavs	r3, {r0, r2, r3, r5, r6, r7, r9, ip, lr, pc}^
    b5f0:	rscle	r2, sl, r0, lsl #22
    b5f4:			; <UNDEFINED> instruction: 0xf1b36903
    b5f8:	stmiale	r6!, {r8, r9, sl, fp, sp, lr}^
    b5fc:	addsmi	r6, r3, #1081344	; 0x108000
    b600:	stmiavs	r3, {r0, r1, r5, r6, r7, r8, r9, ip, lr, pc}^
    b604:	mvnle	r4, #-1610612727	; 0xa0000009
    b608:	addmi	r6, r3, #128, 16	; 0x800000
    b60c:	bne	63b2b4 <strvisx@@Base+0x627540>
    b610:	stclt	3, cr13, [r8, #-876]	; 0xfffffc94
    b614:	teqlt	r0, r8, lsr r5
    b618:	cmnlt	fp, r3, lsl #19
    b61c:	vnmlsne.f32	s13, s2, s4
    b620:	svcne	0x0080f5b1
    b624:	tstcs	r0, r1, lsl r3
    b628:			; <UNDEFINED> instruction: 0xf004200b
    b62c:	andcs	pc, fp, r3, asr #24
    b630:	svc	0x00b0f7f6
    b634:	ldclt	0, cr2, [r8, #-0]
    b638:	andne	lr, r0, #208, 18	; 0x340000
    b63c:			; <UNDEFINED> instruction: 0xd1f24291
    b640:	vnmlsne.f32	s13, s2, s4
    b644:	svcne	0x0080f5b1
    b648:	stmdavs	r1, {r0, r2, r3, r5, r6, r7, r9, ip, lr, pc}^
    b64c:	rscle	r2, sl, r0, lsl #18
    b650:			; <UNDEFINED> instruction: 0xf1b16901
    b654:	stmiale	r6!, {r8, r9, sl, fp, sp, lr}^
    b658:	adcmi	r6, r9, #1130496	; 0x114000
    b65c:	stmiavs	r4, {r0, r1, r5, r6, r7, r8, r9, ip, lr, pc}^
    b660:	mvnle	r4, #1342177290	; 0x5000000a
    b664:	addmi	r6, r4, #128, 16	; 0x800000
    b668:	ldmdblt	r3!, {r0, r2, r3, r4, r6, r7, r8, r9, ip, lr, pc}
    b66c:	svclt	0x00042a01
    b670:	blne	11778 <setlogin@@Base+0x4bc>
    b674:			; <UNDEFINED> instruction: 0x4618d0df
    b678:	andcs	fp, r0, r8, lsr sp
    b67c:	svclt	0x0000bd38
    b680:	teqlt	r0, r8, lsl #10
    b684:	cmnlt	fp, r3, lsl #19
    b688:	blcc	65e9c <strvisx@@Base+0x52128>
    b68c:	svcne	0x0080f5b3
    b690:	tstcs	r0, r1, lsl r3
    b694:			; <UNDEFINED> instruction: 0xf004200b
    b698:	andcs	pc, fp, sp, lsl #24
    b69c:	svc	0x007af7f6
    b6a0:	stclt	0, cr2, [r8, #-0]
    b6a4:	movwcs	lr, #2512	; 0x9d0
    b6a8:			; <UNDEFINED> instruction: 0xd1f2429a
    b6ac:	blcc	65ec0 <strvisx@@Base+0x5214c>
    b6b0:	svcne	0x0080f5b3
    b6b4:	stmdavs	r3, {r0, r2, r3, r5, r6, r7, r9, ip, lr, pc}^
    b6b8:	rscle	r2, sl, r0, lsl #22
    b6bc:			; <UNDEFINED> instruction: 0xf1b26902
    b6c0:	stmiale	r6!, {r8, r9, sl, fp, sp, lr}^
    b6c4:	addmi	r6, sl, #1064960	; 0x104000
    b6c8:	stmiavs	r2, {r0, r1, r5, r6, r7, r8, r9, ip, lr, pc}^
    b6cc:	mvnle	r4, #268435465	; 0x10000009
    b6d0:	addmi	r6, r2, #128, 16	; 0x800000
    b6d4:	stmiane	r0, {r3, r5, r8, r9, sl, fp, ip, sp, pc}^
    b6d8:	stclt	3, cr13, [r8, #-876]	; 0xfffffc94
    b6dc:	teqlt	r0, r8, lsr r5
    b6e0:	cmnlt	fp, r3, lsl #19
    b6e4:	vnmlsne.f32	s13, s2, s4
    b6e8:	svcne	0x0080f5b1
    b6ec:	tstcs	r0, r1, lsl r3
    b6f0:			; <UNDEFINED> instruction: 0xf004200b
    b6f4:	ldrdcs	pc, [fp], -pc	; <UNPREDICTABLE>
    b6f8:	svc	0x004cf7f6
    b6fc:	ldclt	0, cr2, [r8, #-0]
    b700:	andne	lr, r0, #208, 18	; 0x340000
    b704:			; <UNDEFINED> instruction: 0xd1f24291
    b708:	vnmlsne.f32	s13, s2, s4
    b70c:	svcne	0x0080f5b1
    b710:	stmdavs	r1, {r0, r2, r3, r5, r6, r7, r9, ip, lr, pc}^
    b714:	rscle	r2, sl, r0, lsl #18
    b718:			; <UNDEFINED> instruction: 0xf1b16901
    b71c:	stmiale	r6!, {r8, r9, sl, fp, sp, lr}^
    b720:	adcmi	r6, r1, #68, 18	; 0x110000
    b724:	stmiavs	r5, {r0, r1, r5, r6, r7, r8, r9, ip, lr, pc}^
    b728:	mvnle	r4, #172, 4	; 0xc000000a
    b72c:	addmi	r6, sp, #8454144	; 0x810000
    b730:	ldmdblt	r3!, {r0, r2, r3, r4, r6, r7, r8, r9, ip, lr, pc}
    b734:	svclt	0x00182a01
    b738:	mvnle	r4, r8, lsl r6
    b73c:	strmi	r6, [r8], #-2048	; 0xfffff800
    b740:	andcs	fp, r0, r8, lsr sp
    b744:	svclt	0x0000bd38
    b748:	teqlt	r0, r0, ror r5
    b74c:	cmnlt	fp, r3, lsl #19
    b750:	vmulne.f32	s13, s20, s10
    b754:	svcne	0x0080f5b2
    b758:	tstcs	r0, r3, lsl r3
    b75c:			; <UNDEFINED> instruction: 0xf004200b
    b760:	andcs	pc, fp, r9, lsr #23
    b764:	svc	0x0016f7f6
    b768:	mvnscc	pc, #79	; 0x4f
    b76c:	ldcllt	6, cr4, [r0, #-96]!	; 0xffffffa0
    b770:	andmi	lr, r0, #208, 18	; 0x340000
    b774:			; <UNDEFINED> instruction: 0xd1f04294
    b778:	vmulne.f32	s13, s20, s10
    b77c:	svcne	0x0080f5b2
    b780:	stmdavs	r2, {r0, r1, r3, r5, r6, r7, r9, ip, lr, pc}^
    b784:	rscle	r2, r8, r0, lsl #20
    b788:			; <UNDEFINED> instruction: 0xf1b26902
    b78c:	stmiale	r4!, {r8, r9, sl, fp, sp, lr}^
    b790:	adcsmi	r6, r2, #1146880	; 0x118000
    b794:	stmiavs	r4, {r0, r5, r6, r7, r8, r9, ip, lr, pc}^
    b798:	bicsle	r4, lr, #1610612746	; 0x6000000a
    b79c:	addmi	r6, r4, #128, 16	; 0x800000
    b7a0:	ldmdblt	fp, {r0, r1, r3, r4, r6, r7, r8, r9, ip, lr, pc}^
    b7a4:	tstle	r9, r1, lsl #26
    b7a8:	stmdale	sl, {r0, r4, r7, r9, lr}
    b7ac:	bne	8920f8 <strvisx@@Base+0x87e384>
    b7b0:	svclt	0x00384291
    b7b4:	movweq	pc, #32879	; 0x806f	; <UNPREDICTABLE>
    b7b8:	ldcllt	6, cr4, [r0, #-96]!	; 0xffffffa0
    b7bc:	teqeq	r0, #111	; 0x6f	; <UNPREDICTABLE>
    b7c0:			; <UNDEFINED> instruction: 0xf06fe7d4
    b7c4:	ldrb	r0, [r1, r8, lsl #6]
    b7c8:			; <UNDEFINED> instruction: 0x4604b570
    b7cc:			; <UNDEFINED> instruction: 0xf7ff460e
    b7d0:			; <UNDEFINED> instruction: 0x4605ffbb
    b7d4:	strtmi	fp, [r8], -r8, lsl #2
    b7d8:	stmiavs	r3!, {r4, r5, r6, r8, sl, fp, ip, sp, pc}^
    b7dc:	stmdbvs	r1!, {r5, r9, sl, lr}
    b7e0:	addmi	r4, fp, #855638016	; 0x33000000
    b7e4:			; <UNDEFINED> instruction: 0x2100bf94
    b7e8:			; <UNDEFINED> instruction: 0xf7ff2101
    b7ec:	stmiavs	r3!, {r0, r2, r3, r4, r5, r7, sl, fp, ip, sp, lr, pc}^
    b7f0:	ldrtmi	r6, [r3], #-2401	; 0xfffff69f
    b7f4:	stmible	lr!, {r0, r1, r3, r7, r9, lr}^
    b7f8:			; <UNDEFINED> instruction: 0xf1036922
    b7fc:			; <UNDEFINED> instruction: 0xf02505ff
    b800:	stmdavs	r0!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl}
    b804:	svclt	0x00884295
    b808:	movwcs	r4, #5661	; 0x161d
    b80c:			; <UNDEFINED> instruction: 0xf007462a
    b810:			; <UNDEFINED> instruction: 0x4603fdd9
    b814:	cmnvs	r5, r0, asr r1
    b818:	eorvs	r4, r0, r1, lsr r6
    b81c:	rsbvs	r4, r3, r0, lsr #12
    b820:			; <UNDEFINED> instruction: 0xff92f7ff
    b824:	strbvc	lr, [r0, #2560]!	; 0xa00
    b828:	ldcllt	6, cr4, [r0, #-160]!	; 0xffffff60
    b82c:	streq	pc, [r1, #-111]	; 0xffffff91
    b830:	svclt	0x0000e7d1
    b834:			; <UNDEFINED> instruction: 0x4605b570
    b838:	cmnlt	r2, lr, lsl #12
    b83c:	andsvs	r2, r3, r0, lsl #6
    b840:			; <UNDEFINED> instruction: 0xf7ff4614
    b844:	stmdblt	r8!, {r0, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
    b848:	stmdavs	fp!, {r1, r3, r5, r6, r7, fp, sp, lr}
    b84c:	rscvs	r4, lr, r6, lsl r4
    b850:	eorvs	r4, r3, r3, lsl r4
    b854:			; <UNDEFINED> instruction: 0xf7ffbd70
    b858:	stmdacs	r0, {r0, r1, r2, r4, r5, r7, r8, r9, sl, fp, ip, sp, lr, pc}
    b85c:	stmiavs	r9!, {r1, r3, r4, r5, r6, r7, r8, ip, lr, pc}^
    b860:	rscvs	r4, r9, r1, lsr r4
    b864:	svclt	0x0000bd70
    b868:	hvclt	2896	; 0xb50
    b86c:	strmi	r6, [sp], -r6, lsl #19
    b870:	cmnlt	r6, r4, lsl #12
    b874:	blcc	66108 <strvisx@@Base+0x52394>
    b878:	svcne	0x0080f5b3
    b87c:	tstcs	r0, r2, lsl r3
    b880:			; <UNDEFINED> instruction: 0xf004200b
    b884:	andcs	pc, fp, r7, lsl fp	; <UNPREDICTABLE>
    b888:	mcr	7, 4, pc, cr4, cr6, {7}	; <UNPREDICTABLE>
    b88c:	rscscc	pc, pc, pc, asr #32
    b890:	ldmib	r0, {r4, r5, r6, r8, sl, fp, ip, sp, pc}^
    b894:	addsmi	r2, sl, #0, 6
    b898:	bvs	900064 <strvisx@@Base+0x8ec2f0>
    b89c:			; <UNDEFINED> instruction: 0xf5b33b01
    b8a0:	rscle	r1, ip, #128, 30	; 0x200
    b8a4:	blcs	25a38 <strvisx@@Base+0x11cc4>
    b8a8:	stmdbvs	r2!, {r0, r3, r5, r6, r7, ip, lr, pc}
    b8ac:	svcvs	0x0000f1b2
    b8b0:	stmdbvs	r0!, {r0, r2, r5, r6, r7, fp, ip, lr, pc}^
    b8b4:	mvnle	r4, #536870920	; 0x20000008
    b8b8:	addmi	r6, r8, #14745600	; 0xe10000
    b8bc:	stmiavs	r2!, {r0, r1, r2, r3, r4, r6, r7, r8, r9, ip, lr, pc}
    b8c0:	bicsle	r4, ip, #268435465	; 0x10000009
    b8c4:	ldmiblt	lr, {r0, r2, r4, r7, r8, ip, sp, pc}
    b8c8:	addmi	r6, r3, #32, 16	; 0x200000
    b8cc:			; <UNDEFINED> instruction: 0x4631d010
    b8d0:			; <UNDEFINED> instruction: 0xf004200b
    b8d4:	andcs	pc, fp, pc, ror #21
    b8d8:	mrc	7, 2, APSR_nzcv, cr12, cr6, {7}
    b8dc:	stmdale	sp, {r0, r2, r4, r5, r7, r9, lr}
    b8e0:	movwne	lr, #10708	; 0x29d4
    b8e4:	adcvs	r4, r5, sp, lsl #8
    b8e8:	mulle	r3, sp, r2
    b8ec:	ldcllt	0, cr2, [r0, #-0]
    b8f0:	ldrb	r1, [r3, lr, lsl #21]!
    b8f4:	stmib	r4, {sp}^
    b8f8:	ldcllt	0, cr0, [r0, #-8]!
    b8fc:	andeq	pc, r2, pc, rrx
    b900:	svclt	0x0000bd70
    b904:	hvclt	2896	; 0xb50
    b908:	strmi	r6, [sp], -r6, lsl #19
    b90c:	cmnlt	r6, r4, lsl #12
    b910:	blcc	661a4 <strvisx@@Base+0x52430>
    b914:	svcne	0x0080f5b3
    b918:	tstcs	r0, r2, lsl r3
    b91c:			; <UNDEFINED> instruction: 0xf004200b
    b920:	andcs	pc, fp, r9, asr #21
    b924:	mrc	7, 1, APSR_nzcv, cr6, cr6, {7}
    b928:	rscscc	pc, pc, pc, asr #32
    b92c:	ldmib	r0, {r4, r5, r6, r8, sl, fp, ip, sp, pc}^
    b930:	addsmi	r2, sl, #0, 6
    b934:	bvs	900100 <strvisx@@Base+0x8ec38c>
    b938:			; <UNDEFINED> instruction: 0xf5b33b01
    b93c:	rscle	r1, ip, #128, 30	; 0x200
    b940:	blcs	25ad4 <strvisx@@Base+0x11d60>
    b944:	stmdbvs	r2!, {r0, r3, r5, r6, r7, ip, lr, pc}
    b948:	svcvs	0x0000f1b2
    b94c:	stmdbvs	r0!, {r0, r2, r5, r6, r7, fp, ip, lr, pc}^
    b950:	mvnle	r4, #536870920	; 0x20000008
    b954:	addmi	r6, r8, #14745600	; 0xe10000
    b958:	stmiavs	r2!, {r0, r1, r2, r3, r4, r6, r7, r8, r9, ip, lr, pc}
    b95c:	bicsle	r4, ip, #268435465	; 0x10000009
    b960:	stccs	6, cr4, [r0, #-160]	; 0xffffff60
    b964:	ldmiblt	lr, {r1, r5, r6, r7, ip, lr, pc}
    b968:	addmi	r6, r3, #32, 16	; 0x200000
    b96c:			; <UNDEFINED> instruction: 0x4631d010
    b970:			; <UNDEFINED> instruction: 0xf004200b
    b974:	mulcs	fp, pc, sl	; <UNPREDICTABLE>
    b978:	mcr	7, 0, pc, cr12, cr6, {7}	; <UNPREDICTABLE>
    b97c:	svclt	0x009b42b5
    b980:	andcs	r6, r0, r1, ror #17
    b984:	andeq	pc, r2, pc, rrx
    b988:	svclt	0x00981b49
    b98c:	ldcllt	0, cr6, [r0, #-900]!	; 0xfffffc7c
    b990:	ldrb	r1, [r3, lr, lsl #21]!
    b994:	mvnsmi	lr, sp, lsr #18
    b998:	andsvs	r2, pc, r0, lsl #14
    b99c:			; <UNDEFINED> instruction: 0x460d461e
    b9a0:	pkhbtmi	r4, r0, r4, lsl #12
    b9a4:	mcr2	7, 3, pc, cr12, cr15, {7}	; <UNPREDICTABLE>
    b9a8:	mvnmi	fp, #184, 2	; 0x2e
    b9ac:	andsle	r4, r1, #-805306359	; 0xd0000009
    b9b0:	strtmi	r4, [ip], #-1600	; 0xfffff9c0
    b9b4:	mcr2	7, 0, pc, cr0, cr15, {7}	; <UNPREDICTABLE>
    b9b8:	svclt	0x00884284
    b9bc:	andeq	pc, r2, pc, rrx
    b9c0:	strbmi	sp, [r0], -r6, lsl #16
    b9c4:	mrc2	7, 2, pc, cr12, cr15, {7}
    b9c8:	ldrtmi	r4, [r8], -r1, lsl #12
    b9cc:	eorsvs	r4, r5, sp, lsl #8
    b9d0:	ldrhhi	lr, [r0, #141]!	; 0x8d
    b9d4:	andeq	pc, r9, pc, rrx
    b9d8:			; <UNDEFINED> instruction: 0xf04fe7fa
    b9dc:	udf	#29455	; 0x730f
    b9e0:	mvnsmi	lr, sp, lsr #18
    b9e4:	stmdaeq	r0, {r0, r1, r2, r3, r6, ip, sp, lr, pc}
    b9e8:	andhi	pc, r0, r3, asr #17
    b9ec:			; <UNDEFINED> instruction: 0x460d461f
    b9f0:			; <UNDEFINED> instruction: 0x46064614
    b9f4:	mcr2	7, 2, pc, cr4, cr15, {7}	; <UNPREDICTABLE>
    b9f8:	mvnmi	fp, #240, 2	; 0x3c
    b9fc:	andsle	r4, r5, #-805306359	; 0xd0000009
    ba00:	strtmi	r4, [ip], #-1584	; 0xfffff9d0
    ba04:	ldc2l	7, cr15, [r8, #1020]	; 0x3fc
    ba08:	svclt	0x00884284
    ba0c:	andeq	pc, r8, pc, rrx
    ba10:	ldrtmi	sp, [r0], -sl, lsl #16
    ba14:	mcr2	7, 3, pc, cr2, cr15, {7}	; <UNPREDICTABLE>
    ba18:			; <UNDEFINED> instruction: 0x4630b158
    ba1c:	mrc2	7, 2, pc, cr14, cr15, {7}
    ba20:	strbmi	r4, [r0], -r1, lsl #12
    ba24:	eorsvs	r4, sp, sp, lsl #8
    ba28:	ldrhhi	lr, [r0, #141]!	; 0x8d
    ba2c:	andeq	pc, r9, pc, rrx
    ba30:			; <UNDEFINED> instruction: 0xf06fe7fa
    ba34:			; <UNDEFINED> instruction: 0xe7f70030
    ba38:	rscscc	pc, pc, pc, asr #32
    ba3c:	svclt	0x0000e7f4
    ba40:			; <UNDEFINED> instruction: 0x4614b570
    ba44:	strmi	r4, [lr], -r5, lsl #12
    ba48:	mrc2	7, 0, pc, cr10, cr15, {7}
    ba4c:	strmi	r4, [r3], -r1, lsr #12
    ba50:	ldrmi	r4, [sp], -r8, lsr #12
    ba54:			; <UNDEFINED> instruction: 0xff08f7ff
    ba58:	blle	1d5a60 <strvisx@@Base+0x1c1cec>
    ba5c:	svclt	0x00181e23
    ba60:	cdpcs	3, 0, cr2, cr0, cr1, {0}
    ba64:	sadd16mi	fp, r8, r4
    ba68:	stmdblt	r0, {sp}
    ba6c:			; <UNDEFINED> instruction: 0x4622bd70
    ba70:	ldrtmi	r4, [r0], -r9, lsr #12
    ba74:	stc	7, cr15, [r6, #-984]!	; 0xfffffc28
    ba78:	ldcllt	0, cr2, [r0, #-0]
    ba7c:			; <UNDEFINED> instruction: 0x4606b570
    ba80:			; <UNDEFINED> instruction: 0xf7ff460c
    ba84:	strdcs	pc, [r8, -sp]
    ba88:	ldrtmi	r4, [r0], -r5, lsl #12
    ba8c:	mcr2	7, 7, pc, cr12, cr15, {7}	; <UNPREDICTABLE>
    ba90:	blle	215a98 <strvisx@@Base+0x201d24>
    ba94:	teqlt	r4, r0, lsr #12
    ba98:	andcs	r6, r0, sl, lsr #16
    ba9c:	blt	4a5c50 <strvisx@@Base+0x491edc>
    baa0:	blt	6e3c30 <strvisx@@Base+0x6cfebc>
    baa4:	ldcllt	0, cr6, [r0, #-140]!	; 0xffffff74
    baa8:			; <UNDEFINED> instruction: 0x4605b538
    baac:			; <UNDEFINED> instruction: 0xf7ff460c
    bab0:	smlattcs	r4, r7, sp, pc	; <UNPREDICTABLE>
    bab4:	strtmi	r4, [r8], -r3, lsl #12
    bab8:			; <UNDEFINED> instruction: 0xf7ff461d
    babc:	stmdacs	r0, {r0, r2, r4, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    bac0:	strtmi	sp, [r0], -r5, lsl #22
    bac4:	stmdavs	fp!, {r2, r3, r4, r8, ip, sp, pc}
    bac8:	blt	6d3ad0 <strvisx@@Base+0x6bfd5c>
    bacc:	ldclt	0, cr6, [r8, #-140]!	; 0xffffff74
    bad0:			; <UNDEFINED> instruction: 0x4606b570
    bad4:			; <UNDEFINED> instruction: 0xf7ff460c
    bad8:	ldrdcs	pc, [r2, -r3]
    badc:	ldrtmi	r4, [r0], -r5, lsl #12
    bae0:	mcr2	7, 6, pc, cr2, cr15, {7}	; <UNPREDICTABLE>
    bae4:	blle	1d5aec <strvisx@@Base+0x1c1d78>
    bae8:			; <UNDEFINED> instruction: 0xb12c4620
    baec:	andcs	r7, r0, sl, lsr #16
    baf0:	b	10e9ca4 <strvisx@@Base+0x10d5f30>
    baf4:	eorhi	r2, r3, r2, lsl #6
    baf8:	svclt	0x0000bd70
    bafc:			; <UNDEFINED> instruction: 0x4605b538
    bb00:			; <UNDEFINED> instruction: 0xf7ff460c
    bb04:			; <UNDEFINED> instruction: 0x2101fdbd
    bb08:	strtmi	r4, [r8], -r3, lsl #12
    bb0c:			; <UNDEFINED> instruction: 0xf7ff461d
    bb10:	stmdacs	r0, {r0, r1, r3, r5, r7, r9, sl, fp, ip, sp, lr, pc}
    bb14:	strtmi	sp, [r0], -r4, lsl #22
    bb18:	stmdavc	fp!, {r2, r4, r8, ip, sp, pc}
    bb1c:	eorvc	r2, r3, r0
    bb20:	svclt	0x0000bd38
    bb24:	addlt	fp, r2, r0, lsl r5
    bb28:	blmi	5deb88 <strvisx@@Base+0x5cae14>
    bb2c:	stmiapl	r3!, {r2, r3, r4, r5, r6, sl, lr}^
    bb30:	movwls	r6, #6171	; 0x181b
    bb34:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    bb38:	movwls	r2, #768	; 0x300
    bb3c:			; <UNDEFINED> instruction: 0x4614b1d2
    bb40:	andcs	r2, r0, #0, 6
    bb44:	movwcs	lr, #2500	; 0x9c4
    bb48:	andcs	r4, r8, #112197632	; 0x6b00000
    bb4c:			; <UNDEFINED> instruction: 0xff22f7ff
    bb50:	blls	3a018 <strvisx@@Base+0x262a4>
    bb54:	ldmdavs	fp, {r1, r3, r4, fp, sp, lr}^
    bb58:	rsbvs	fp, r2, r2, lsl sl
    bb5c:	eorvs	fp, r3, fp, lsl sl
    bb60:	blmi	25e390 <strvisx@@Base+0x24a61c>
    bb64:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    bb68:	blls	65bd8 <strvisx@@Base+0x51e64>
    bb6c:	qaddle	r4, sl, r6
    bb70:	ldclt	0, cr11, [r0, #-8]
    bb74:	andcs	r4, r8, #112197632	; 0x6b00000
    bb78:			; <UNDEFINED> instruction: 0xff0cf7ff
    bb7c:			; <UNDEFINED> instruction: 0xf7f6e7f0
    bb80:	svclt	0x0000ed8c
    bb84:	ldrdeq	lr, [r1], -r4
    bb88:	andeq	r0, r0, r0, asr #5
    bb8c:	muleq	r1, ip, r1
    bb90:	addlt	fp, r2, r0, lsl r5
    bb94:	blmi	51ebe8 <strvisx@@Base+0x50ae74>
    bb98:	stmiapl	r3!, {r2, r3, r4, r5, r6, sl, lr}^
    bb9c:	movwls	r6, #6171	; 0x181b
    bba0:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    bba4:	movwls	r2, #768	; 0x300
    bba8:	andsvs	fp, r3, r2, lsr #3
    bbac:			; <UNDEFINED> instruction: 0x466b4614
    bbb0:			; <UNDEFINED> instruction: 0xf7ff2204
    bbb4:	ldmdblt	r8, {r0, r1, r2, r3, r5, r6, r7, r9, sl, fp, ip, sp, lr, pc}
    bbb8:	ldmdavs	fp, {r8, r9, fp, ip, pc}
    bbbc:	eorvs	fp, r3, fp, lsl sl
    bbc0:	blmi	25e3f0 <strvisx@@Base+0x24a67c>
    bbc4:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    bbc8:	blls	65c38 <strvisx@@Base+0x51ec4>
    bbcc:	qaddle	r4, sl, r6
    bbd0:	ldclt	0, cr11, [r0, #-8]
    bbd4:	andcs	r4, r4, #112197632	; 0x6b00000
    bbd8:	mrc2	7, 6, pc, cr12, cr15, {7}
    bbdc:			; <UNDEFINED> instruction: 0xf7f6e7f0
    bbe0:	svclt	0x0000ed5c
    bbe4:	andeq	lr, r1, r8, ror #2
    bbe8:	andeq	r0, r0, r0, asr #5
    bbec:	andeq	lr, r1, ip, lsr r1
    bbf0:	addlt	fp, r2, r0, lsl r5
    bbf4:	blmi	55ec4c <strvisx@@Base+0x54aed8>
    bbf8:	stmiapl	r3!, {r2, r3, r4, r5, r6, sl, lr}^
    bbfc:	movwls	r6, #6171	; 0x181b
    bc00:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    bc04:	movwls	r2, #768	; 0x300
    bc08:			; <UNDEFINED> instruction: 0x8013b1b2
    bc0c:			; <UNDEFINED> instruction: 0x466b4614
    bc10:			; <UNDEFINED> instruction: 0xf7ff2202
    bc14:	stmdblt	r8!, {r0, r1, r2, r3, r4, r5, r7, r9, sl, fp, ip, sp, lr, pc}
    bc18:	ldmdavc	r1, {r9, fp, ip, pc}
    bc1c:	b	10e9d70 <strvisx@@Base+0x10d5ffc>
    bc20:	eorhi	r2, r3, r1, lsl #6
    bc24:	blmi	25e454 <strvisx@@Base+0x24a6e0>
    bc28:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    bc2c:	blls	65c9c <strvisx@@Base+0x51f28>
    bc30:	qaddle	r4, sl, r6
    bc34:	ldclt	0, cr11, [r0, #-8]
    bc38:	andcs	r4, r2, #112197632	; 0x6b00000
    bc3c:	mcr2	7, 5, pc, cr10, cr15, {7}	; <UNPREDICTABLE>
    bc40:			; <UNDEFINED> instruction: 0xf7f6e7f0
    bc44:	svclt	0x0000ed2a
    bc48:	andeq	lr, r1, r8, lsl #2
    bc4c:	andeq	r0, r0, r0, asr #5
    bc50:	ldrdeq	lr, [r1], -r8
    bc54:	addlt	fp, r2, r0, lsl r5
    bc58:	blmi	4deca8 <strvisx@@Base+0x4caf34>
    bc5c:	stmiapl	r3!, {r2, r3, r4, r5, r6, sl, lr}^
    bc60:	movwls	r6, #6171	; 0x181b
    bc64:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    bc68:	movwls	r2, #768	; 0x300
    bc6c:	mulsvc	r3, sl, r1
    bc70:			; <UNDEFINED> instruction: 0x466b4614
    bc74:			; <UNDEFINED> instruction: 0xf7ff2201
    bc78:	ldmdblt	r0, {r0, r2, r3, r7, r9, sl, fp, ip, sp, lr, pc}
    bc7c:	ldmdavc	fp, {r8, r9, fp, ip, pc}
    bc80:	bmi	2a7d14 <strvisx@@Base+0x293fa0>
    bc84:	ldrbtmi	r4, [sl], #-2824	; 0xfffff4f8
    bc88:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    bc8c:	subsmi	r9, sl, r1, lsl #22
    bc90:	andlt	sp, r2, r6, lsl #2
    bc94:			; <UNDEFINED> instruction: 0x466bbd10
    bc98:			; <UNDEFINED> instruction: 0xf7ff2201
    bc9c:			; <UNDEFINED> instruction: 0xe7f0fe7b
    bca0:	ldcl	7, cr15, [sl], #984	; 0x3d8
    bca4:	andeq	lr, r1, r4, lsr #1
    bca8:	andeq	r0, r0, r0, asr #5
    bcac:	andeq	lr, r1, sl, ror r0
    bcb0:	mvnsmi	lr, sp, lsr #18
    bcb4:	ldrmi	r4, [r4], -sp, lsl #12
    bcb8:			; <UNDEFINED> instruction: 0xf7ff4680
    bcbc:	strmi	pc, [r6], -r1, ror #25
    bcc0:	movwcs	fp, #269	; 0x10d
    bcc4:	tstlt	ip, fp, lsr #32
    bcc8:	eorvs	r2, r3, r0, lsl #6
    bccc:			; <UNDEFINED> instruction: 0xf7ff4640
    bcd0:	stmdacs	r3, {r0, r1, r4, r5, r6, sl, fp, ip, sp, lr, pc}
    bcd4:	ldmdavs	r7!, {r0, r3, r4, r8, fp, ip, lr, pc}
    bcd8:	mvnsvc	pc, #82837504	; 0x4f00000
    bcdc:	mvnsvc	pc, #192, 4
    bce0:	addsmi	fp, pc, #258048	; 0x3f000
    bce4:	strbmi	sp, [r0], -lr, lsl #16
    bce8:	stc2l	7, cr15, [r6], #-1020	; 0xfffffc04
    bcec:	adcsmi	r3, r8, #4, 16	; 0x40000
    bcf0:	tstlt	sp, fp, lsl #6
    bcf4:	eorvs	r3, lr, r4, lsl #12
    bcf8:	tstlt	ip, r0, lsr #12
    bcfc:	eorvs	r2, r7, r0
    bd00:	ldrhhi	lr, [r0, #141]!	; 0x8d
    bd04:	andeq	pc, r5, pc, rrx
    bd08:			; <UNDEFINED> instruction: 0xf06fe7fa
    bd0c:	ldrb	r0, [r7, r2]!
    bd10:			; <UNDEFINED> instruction: 0x4614b570
    bd14:	addlt	r4, r4, r9, lsl sl
    bd18:			; <UNDEFINED> instruction: 0x46064b19
    bd1c:			; <UNDEFINED> instruction: 0x460d447a
    bd20:	ldmdavs	fp, {r0, r1, r4, r6, r7, fp, ip, lr}
    bd24:			; <UNDEFINED> instruction: 0xf04f9303
    bd28:	mrslt	r0, (UNDEF: 57)
    bd2c:	andvs	r2, fp, r0, lsl #6
    bd30:	movwcs	fp, #268	; 0x10c
    bd34:	bge	63dc8 <strvisx@@Base+0x50054>
    bd38:	ldrtmi	sl, [r0], -r2, lsl #18
    bd3c:			; <UNDEFINED> instruction: 0xffb8f7ff
    bd40:	blle	395d48 <strvisx@@Base+0x381fd4>
    bd44:	blls	b8180 <strvisx@@Base+0xa440c>
    bd48:	stmdbls	r1, {r0, r1, r3, r5, sp, lr}
    bd4c:	eorvs	fp, r1, r4, lsl #2
    bd50:	ldrtmi	r3, [r0], -r4, lsl #2
    bd54:	stc2	7, cr15, [r8, #1020]	; 0x3fc
    bd58:	svclt	0x00183800
    bd5c:			; <UNDEFINED> instruction: 0xf0092001
    bd60:	bmi	24a0dc <strvisx@@Base+0x236368>
    bd64:	ldrbtmi	r4, [sl], #-2822	; 0xfffff4fa
    bd68:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    bd6c:	subsmi	r9, sl, r3, lsl #22
    bd70:	andlt	sp, r4, r1, lsl #2
    bd74:			; <UNDEFINED> instruction: 0xf7f6bd70
    bd78:	svclt	0x0000ec90
    bd7c:	andeq	sp, r1, r4, ror #31
    bd80:	andeq	r0, r0, r0, asr #5
    bd84:	muleq	r1, sl, pc	; <UNPREDICTABLE>
    bd88:			; <UNDEFINED> instruction: 0x4614b5f0
    bd8c:	addlt	r4, r5, ip, lsl sl
    bd90:			; <UNDEFINED> instruction: 0x460d4b1c
    bd94:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    bd98:	movwls	r6, #14363	; 0x381b
    bd9c:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    bda0:	movwcs	fp, #265	; 0x109
    bda4:	tstlt	ip, fp
    bda8:	eorvs	r2, r3, r0, lsl #6
    bdac:	stmdbge	r1, {r1, r9, fp, sp, pc}
    bdb0:			; <UNDEFINED> instruction: 0xffaef7ff
    bdb4:	blle	3d5dbc <strvisx@@Base+0x3c2048>
    bdb8:	svcls	0x0002b14d
    bdbc:			; <UNDEFINED> instruction: 0xf7f61c78
    bdc0:			; <UNDEFINED> instruction: 0x4606ec5a
    bdc4:	biclt	r6, r0, r8, lsr #32
    bdc8:	movwcs	fp, #2439	; 0x987
    bdcc:			; <UNDEFINED> instruction: 0x462055f3
    bdd0:	blls	b8228 <strvisx@@Base+0xa44b4>
    bdd4:	eorvs	r2, r3, r0
    bdd8:	blmi	29e60c <strvisx@@Base+0x28a898>
    bddc:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    bde0:	blls	e5e50 <strvisx@@Base+0xd20dc>
    bde4:	qaddle	r4, sl, r6
    bde8:	ldcllt	0, cr11, [r0, #20]!
    bdec:	ldrtmi	r9, [sl], -r1, lsl #18
    bdf0:	bl	1a49dd0 <strvisx@@Base+0x1a3605c>
    bdf4:			; <UNDEFINED> instruction: 0xf7f6e7e9
    bdf8:			; <UNDEFINED> instruction: 0xf06fec50
    bdfc:	strb	r0, [fp, r1]!
    be00:	andeq	sp, r1, ip, ror #30
    be04:	andeq	r0, r0, r0, asr #5
    be08:	andeq	sp, r1, r4, lsr #30
    be0c:	mvnsmi	lr, #737280	; 0xb4000
    be10:	bmi	b9d66c <strvisx@@Base+0xb898f8>
    be14:	blmi	bb8030 <strvisx@@Base+0xba42bc>
    be18:	ldrbtmi	r4, [sl], #-1664	; 0xfffff980
    be1c:	ldmpl	r3, {r1, r2, r3, r9, sl, lr}^
    be20:	movwls	r6, #14363	; 0x381b
    be24:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    be28:	movwcs	fp, #265	; 0x109
    be2c:	tstlt	sp, fp
    be30:	eorvs	r2, fp, r0, lsl #6
    be34:	stmdbge	r2, {r0, r9, fp, sp, pc}
    be38:			; <UNDEFINED> instruction: 0xf7ff4640
    be3c:			; <UNDEFINED> instruction: 0x4604ff39
    be40:	svcls	0x0001bb38
    be44:			; <UNDEFINED> instruction: 0xf8ddb15f
    be48:	strmi	r9, [r1], -r8
    be4c:			; <UNDEFINED> instruction: 0x4648463a
    be50:	ldc	7, cr15, [r6, #-984]!	; 0xfffffc28
    be54:	svccc	0x0001b118
    be58:	adcsmi	r4, r8, #1325400064	; 0x4f000000
    be5c:	andcs	sp, r0, #-1476395008	; 0xa8000000
    be60:	ldrmi	r4, [r1], -r0, asr #12
    be64:			; <UNDEFINED> instruction: 0xff54f7ff
    be68:	bllt	c1d680 <strvisx@@Base+0xc0990c>
    be6c:			; <UNDEFINED> instruction: 0xf8ddb176
    be70:			; <UNDEFINED> instruction: 0xf1088004
    be74:			; <UNDEFINED> instruction: 0xf7f60001
    be78:			; <UNDEFINED> instruction: 0x4607ebfe
    be7c:	movwlt	r6, #32816	; 0x8030
    be80:	svceq	0x0000f1b8
    be84:	movwcs	sp, #273	; 0x111
    be88:	andcc	pc, r8, r7, lsl #16
    be8c:	blls	782c8 <strvisx@@Base+0x64554>
    be90:	bmi	423f44 <strvisx@@Base+0x4101d0>
    be94:	ldrbtmi	r4, [sl], #-2830	; 0xfffff4f2
    be98:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    be9c:	subsmi	r9, sl, r3, lsl #22
    bea0:	strtmi	sp, [r0], -lr, lsl #2
    bea4:	pop	{r0, r2, ip, sp, pc}
    bea8:	stmdbls	r2, {r4, r5, r6, r7, r8, r9, pc}
    beac:			; <UNDEFINED> instruction: 0xf7f64642
    beb0:	strb	lr, [r8, sl, lsl #22]!
    beb4:	streq	pc, [r3], #-111	; 0xffffff91
    beb8:			; <UNDEFINED> instruction: 0xf04fe7eb
    bebc:			; <UNDEFINED> instruction: 0xe7e834ff
    bec0:	bl	ffac9ea0 <strvisx@@Base+0xffab612c>
    bec4:	streq	pc, [r1], #-111	; 0xffffff91
    bec8:	svclt	0x0000e7e3
    becc:	andeq	sp, r1, r6, ror #29
    bed0:	andeq	r0, r0, r0, asr #5
    bed4:	andeq	sp, r1, sl, ror #28
    bed8:	andcs	fp, r0, #48, 10	; 0xc000000
    bedc:	addlt	r4, r5, r6, lsl ip
    bee0:			; <UNDEFINED> instruction: 0x460d4b16
    bee4:			; <UNDEFINED> instruction: 0x4611447c
    bee8:	strmi	r5, [r4], -r3, ror #17
    beec:	movwls	r6, #14363	; 0x381b
    bef0:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    bef4:	mrc2	7, 6, pc, cr12, cr15, {7}
    bef8:	bmi	478420 <strvisx@@Base+0x4646ac>
    befc:	ldrbtmi	r4, [sl], #-2831	; 0xfffff4f1
    bf00:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    bf04:	subsmi	r9, sl, r3, lsl #22
    bf08:	andlt	sp, r5, r4, lsl r1
    bf0c:	stmdbge	r1, {r4, r5, r8, sl, fp, ip, sp, pc}
    bf10:			; <UNDEFINED> instruction: 0xf7ff4620
    bf14:	stmdacs	r0, {r0, r3, r6, r7, r8, sl, fp, ip, sp, lr, pc}
    bf18:	stmdbls	r1, {r0, r1, r2, r3, r5, r6, r7, r8, ip, lr, pc}
    bf1c:	strtmi	sl, [r8], -r2, lsl #20
    bf20:	stc2	7, cr15, [r8], {255}	; 0xff
    bf24:	mvnle	r2, r0, lsl #16
    bf28:	ldrdcs	lr, [r1, -sp]
    bf2c:			; <UNDEFINED> instruction: 0xf7ff4620
    bf30:	strb	pc, [r2, r7, lsl #27]!	; <UNPREDICTABLE>
    bf34:	bl	fec49f14 <strvisx@@Base+0xfec361a0>
    bf38:	andeq	sp, r1, ip, lsl lr
    bf3c:	andeq	r0, r0, r0, asr #5
    bf40:	andeq	sp, r1, r2, lsl #28
    bf44:	ldrsbgt	pc, [r0], #-143	; 0xffffff71	; <UNPREDICTABLE>
    bf48:	ldrbtmi	r4, [ip], #2836	; 0xb14
    bf4c:	addlt	fp, r3, r0, lsr r5
    bf50:	andcc	pc, r3, ip, asr r8	; <UNPREDICTABLE>
    bf54:			; <UNDEFINED> instruction: 0x460d4614
    bf58:	strtmi	r4, [r1], -sl, ror #12
    bf5c:	movwls	r6, #6171	; 0x181b
    bf60:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    bf64:	stc2l	7, cr15, [r6], #-1020	; 0xfffffc04
    bf68:	blle	55f70 <strvisx@@Base+0x421fc>
    bf6c:	stmdblt	ip, {r5, r9, sl, lr}^
    bf70:	blmi	29e7a4 <strvisx@@Base+0x28aa30>
    bf74:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    bf78:	blls	65fe8 <strvisx@@Base+0x52274>
    bf7c:	qaddle	r4, sl, r8
    bf80:	ldclt	0, cr11, [r0, #-12]!
    bf84:	strtmi	r9, [r2], -r0, lsl #16
    bf88:			; <UNDEFINED> instruction: 0xf7f64629
    bf8c:	mulcs	r0, ip, sl
    bf90:			; <UNDEFINED> instruction: 0xf7f6e7ee
    bf94:	svclt	0x0000eb82
    bf98:			; <UNDEFINED> instruction: 0x0001ddb6
    bf9c:	andeq	r0, r0, r0, asr #5
    bfa0:	andeq	sp, r1, ip, lsl #27
    bfa4:			; <UNDEFINED> instruction: 0x4605b530
    bfa8:	strmi	fp, [r8], -r3, lsl #1
    bfac:			; <UNDEFINED> instruction: 0xf7ff460c
    bfb0:	andls	pc, r1, r7, ror #22
    bfb4:			; <UNDEFINED> instruction: 0xf7ff4620
    bfb8:	stmdbls	r1, {r0, r1, r2, r3, r4, r5, r6, r7, r9, fp, ip, sp, lr, pc}
    bfbc:	strtmi	r4, [r8], -r2, lsl #12
    bfc0:	pop	{r0, r1, ip, sp, pc}
    bfc4:			; <UNDEFINED> instruction: 0xf7ff4030
    bfc8:	svclt	0x0000bfbd
    bfcc:			; <UNDEFINED> instruction: 0xc094f8df
    bfd0:	mvnscc	pc, #79	; 0x4f
    bfd4:	ldrbtmi	fp, [ip], #1520	; 0x5f0
    bfd8:	addlt	r4, r9, r3, lsr #24
    bfdc:	ldrmi	r4, [r5], -lr, lsl #12
    bfe0:	andvs	lr, r0, #3358720	; 0x334000
    bfe4:	strls	r2, [r5, #-256]	; 0xffffff00
    bfe8:			; <UNDEFINED> instruction: 0xf85c4607
    bfec:	strmi	r4, [r8], -r4
    bff0:	stmdavs	r4!, {r0, r9, sp}
    bff4:			; <UNDEFINED> instruction: 0xf04f9407
    bff8:			; <UNDEFINED> instruction: 0xf7f60400
    bffc:			; <UNDEFINED> instruction: 0x1e04eab2
    c000:	tstle	sl, fp, lsr #22
    c004:	blmi	61e870 <strvisx@@Base+0x60aafc>
    c008:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    c00c:	blls	1e607c <strvisx@@Base+0x1d2308>
    c010:	qsuble	r4, sl, r5
    c014:	andlt	r4, r9, r0, lsr #12
    c018:	stclne	13, cr11, [r1], #-960	; 0xfffffc40
    c01c:	ldrtmi	sl, [r8], -r6, lsl #20
    c020:	tstls	r3, r5, lsl #10
    c024:	stc2	7, cr15, [r6], {255}	; 0xff
    c028:	svclt	0x00b81e03
    c02c:	blle	ffa5d8a4 <strvisx@@Base+0xffa49b30>
    c030:			; <UNDEFINED> instruction: 0xf04f9d05
    c034:	stmdbls	r3, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, ip, sp}
    c038:	stmdals	r6, {r0, r9, sp}
    c03c:	strls	r9, [r1, #-1536]	; 0xfffffa00
    c040:	b	fe3ca020 <strvisx@@Base+0xfe3b62ac>
    c044:	smlabble	r5, r4, r2, r4
    c048:	tstcs	r1, r8, lsr r6
    c04c:	mrrc2	7, 15, pc, sl, cr15	; <UNPREDICTABLE>
    c050:	ldrb	r4, [r7, r4, lsl #12]
    c054:	ldrbtcc	pc, [pc], #79	; c05c <el_source@plt+0x9720>	; <UNPREDICTABLE>
    c058:			; <UNDEFINED> instruction: 0xf06fe7d4
    c05c:	ldrb	r0, [r1, r9, lsl #8]
    c060:	bl	6ca040 <strvisx@@Base+0x6b62cc>
    c064:	andeq	sp, r1, sl, lsr #26
    c068:	andeq	r0, r0, r0, asr #5
    c06c:	strdeq	sp, [r1], -r8
    c070:	stmdbmi	pc, {r1, r2, r3, sl, ip, sp, pc}	; <UNPREDICTABLE>
    c074:	addlt	fp, r2, r0, lsl #10
    c078:	bge	decb8 <strvisx@@Base+0xcaf44>
    c07c:	stmiapl	fp, {r0, r3, r4, r5, r6, sl, lr}^
    c080:	blne	14a1d0 <strvisx@@Base+0x13645c>
    c084:	movwls	r6, #6171	; 0x181b
    c088:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    c08c:			; <UNDEFINED> instruction: 0xf7ff9200
    c090:	bmi	28bf0c <strvisx@@Base+0x278198>
    c094:	ldrbtmi	r4, [sl], #-2823	; 0xfffff4f9
    c098:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    c09c:	subsmi	r9, sl, r1, lsl #22
    c0a0:	andlt	sp, r2, r4, lsl #2
    c0a4:	bl	14a220 <strvisx@@Base+0x1364ac>
    c0a8:	ldrbmi	fp, [r0, -r3]!
    c0ac:	b	ffd4a08c <strvisx@@Base+0xffd36318>
    c0b0:	andeq	sp, r1, r4, lsl #25
    c0b4:	andeq	r0, r0, r0, asr #5
    c0b8:	andeq	sp, r1, sl, ror #24
    c0bc:			; <UNDEFINED> instruction: 0x461db570
    c0c0:	addlt	r4, r2, r7, lsl lr
    c0c4:			; <UNDEFINED> instruction: 0x46144b17
    c0c8:			; <UNDEFINED> instruction: 0x466a447e
    c0cc:	ldmpl	r3!, {r3, r8, sp}^
    c0d0:	movwls	r6, #6171	; 0x181b
    c0d4:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    c0d8:	blx	feb4a0de <strvisx@@Base+0xfeb3636a>
    c0dc:	blle	4d60e4 <strvisx@@Base+0x4c2370>
    c0e0:	vmuleq.f64	d9, d8, d0
    c0e4:	beq	a8f190 <strvisx@@Base+0xa7b41c>
    c0e8:	andsvc	r0, r8, r6, lsr #28
    c0ec:	blls	140f4 <strvisx@@Base+0x380>
    c0f0:	stceq	0, cr7, [r1], #-356	; 0xfffffe9c
    c0f4:	addsvc	r9, sl, r0, lsl #22
    c0f8:	blls	e988 <error@@Base+0x1d2c>
    c0fc:	blls	28478 <strvisx@@Base+0x14704>
    c100:			; <UNDEFINED> instruction: 0x711e71dc
    c104:	orrsvc	r7, sl, r9, asr r1
    c108:	blmi	19e92c <strvisx@@Base+0x18abb8>
    c10c:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    c110:	blls	66180 <strvisx@@Base+0x5240c>
    c114:	qaddle	r4, sl, r1
    c118:	ldcllt	0, cr11, [r0, #-8]!
    c11c:	b	fef4a0fc <strvisx@@Base+0xfef36388>
    c120:	andeq	sp, r1, r8, lsr ip
    c124:	andeq	r0, r0, r0, asr #5
    c128:	strdeq	sp, [r1], -r4
    c12c:	addlt	fp, r3, r0, lsr r5
    c130:			; <UNDEFINED> instruction: 0x460c4d13
    c134:			; <UNDEFINED> instruction: 0x466a4b13
    c138:	tstcs	r4, sp, ror r4
    c13c:	ldmdavs	fp, {r0, r1, r3, r5, r6, r7, fp, ip, lr}
    c140:			; <UNDEFINED> instruction: 0xf04f9301
    c144:			; <UNDEFINED> instruction: 0xf7ff0300
    c148:	stmdacs	r0, {r0, r2, r4, r5, r6, r8, r9, fp, ip, sp, lr, pc}
    c14c:	blls	42d80 <strvisx@@Base+0x2f00c>
    c150:	stceq	14, cr0, [r1], #-148	; 0xffffff6c
    c154:	andcs	r0, r0, r2, lsr #20
    c158:	blls	281d4 <strvisx@@Base+0x14460>
    c15c:	blls	282c8 <strvisx@@Base+0x14554>
    c160:	blls	283d0 <strvisx@@Base+0x1465c>
    c164:	bmi	2284dc <strvisx@@Base+0x214768>
    c168:	ldrbtmi	r4, [sl], #-2822	; 0xfffff4fa
    c16c:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    c170:	subsmi	r9, sl, r1, lsl #22
    c174:	andlt	sp, r3, r1, lsl #2
    c178:			; <UNDEFINED> instruction: 0xf7f6bd30
    c17c:	svclt	0x0000ea8e
    c180:	andeq	sp, r1, r8, asr #23
    c184:	andeq	r0, r0, r0, asr #5
    c188:	muleq	r1, r6, fp
    c18c:	ldrdgt	pc, [r8], #-143	; 0xffffff71
    c190:	ldrbtmi	r4, [ip], #2834	; 0xb12
    c194:	addlt	fp, r2, r0, lsl r5
    c198:	andcc	pc, r3, ip, asr r8	; <UNPREDICTABLE>
    c19c:	strbtmi	r4, [sl], -ip, lsl #12
    c1a0:	ldmdavs	fp, {r1, r8, sp}
    c1a4:			; <UNDEFINED> instruction: 0xf04f9301
    c1a8:			; <UNDEFINED> instruction: 0xf7ff0300
    c1ac:	stmdacs	r0, {r0, r1, r6, r8, r9, fp, ip, sp, lr, pc}
    c1b0:	blls	42dcc <strvisx@@Base+0x2f058>
    c1b4:	andcs	r0, r0, r2, lsr #20
    c1b8:	blls	28228 <strvisx@@Base+0x144b4>
    c1bc:	bmi	228334 <strvisx@@Base+0x2145c0>
    c1c0:	ldrbtmi	r4, [sl], #-2822	; 0xfffff4fa
    c1c4:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    c1c8:	subsmi	r9, sl, r1, lsl #22
    c1cc:	andlt	sp, r2, r1, lsl #2
    c1d0:			; <UNDEFINED> instruction: 0xf7f6bd10
    c1d4:	svclt	0x0000ea62
    c1d8:	andeq	sp, r1, lr, ror #22
    c1dc:	andeq	r0, r0, r0, asr #5
    c1e0:	andeq	sp, r1, lr, lsr fp
    c1e4:	ldrdgt	pc, [r0], #-143	; 0xffffff71
    c1e8:	ldrbtmi	r4, [ip], #2832	; 0xb10
    c1ec:	addlt	fp, r2, r0, lsl r5
    c1f0:	andcc	pc, r3, ip, asr r8	; <UNPREDICTABLE>
    c1f4:	strbtmi	r4, [sl], -ip, lsl #12
    c1f8:	ldmdavs	fp, {r0, r8, sp}
    c1fc:			; <UNDEFINED> instruction: 0xf04f9301
    c200:			; <UNDEFINED> instruction: 0xf7ff0300
    c204:	bmi	2cae68 <strvisx@@Base+0x2b70f4>
    c208:	stmdacs	r0, {r1, r3, r4, r5, r6, sl, lr}
    c20c:	blls	3c09c <strvisx@@Base+0x28328>
    c210:	andsvc	r2, ip, r0
    c214:	ldmpl	r3, {r0, r2, r8, r9, fp, lr}^
    c218:	blls	66288 <strvisx@@Base+0x52514>
    c21c:	qaddle	r4, sl, r1
    c220:	ldclt	0, cr11, [r0, #-8]
    c224:	b	e4a204 <strvisx@@Base+0xe36490>
    c228:	andeq	sp, r1, r6, lsl fp
    c22c:	andeq	r0, r0, r0, asr #5
    c230:	strdeq	sp, [r1], -r8
    c234:	ldrdgt	pc, [r4], #-143	; 0xffffff71	; <UNPREDICTABLE>
    c238:	ldrbtmi	fp, [ip], #1392	; 0x570
    c23c:	addlt	r4, r2, r8, lsl lr
    c240:			; <UNDEFINED> instruction: 0x461d4614
    c244:	strbtmi	r2, [fp], -r8, lsl #4
    c248:	andvs	pc, r6, ip, asr r8	; <UNPREDICTABLE>
    c24c:			; <UNDEFINED> instruction: 0x96016836
    c250:	streq	pc, [r0], -pc, asr #32
    c254:	strls	r2, [r0], -r0, lsl #12
    c258:	blx	ff0ca25e <strvisx@@Base+0xff0b64ea>
    c25c:	blls	3a8a4 <strvisx@@Base+0x26b30>
    c260:	stceq	14, cr0, [r9], #-184	; 0xffffff48
    c264:	andsvc	r0, lr, sl, lsr #20
    c268:	blls	fb08 <error@@Base+0x2eac>
    c26c:	stceq	0, cr7, [r1], #-356	; 0xfffffe9c
    c270:	addsvc	r9, sl, r0, lsl #22
    c274:	blls	eb04 <error@@Base+0x1ea8>
    c278:	blls	285f4 <strvisx@@Base+0x14880>
    c27c:			; <UNDEFINED> instruction: 0x711e71dc
    c280:	orrsvc	r7, sl, r9, asr r1
    c284:	blmi	19eaa8 <strvisx@@Base+0x18ad34>
    c288:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    c28c:	blls	662fc <strvisx@@Base+0x52588>
    c290:	qaddle	r4, sl, r1
    c294:	ldcllt	0, cr11, [r0, #-8]!
    c298:	ldmib	lr!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    c29c:	andeq	sp, r1, r6, asr #21
    c2a0:	andeq	r0, r0, r0, asr #5
    c2a4:	andeq	sp, r1, r8, ror sl
    c2a8:	ldrsbgt	pc, [r4], #-143	; 0xffffff71	; <UNPREDICTABLE>
    c2ac:	ldrbtmi	fp, [ip], #1328	; 0x530
    c2b0:	addlt	r4, r3, r4, lsl sp
    c2b4:	andcs	r4, r4, #20, 12	; 0x1400000
    c2b8:			; <UNDEFINED> instruction: 0xf85c466b
    c2bc:	stmdavs	sp!, {r0, r2, ip, lr}
    c2c0:			; <UNDEFINED> instruction: 0xf04f9501
    c2c4:	strcs	r0, [r0, #-1280]	; 0xfffffb00
    c2c8:			; <UNDEFINED> instruction: 0xf7ff9500
    c2cc:	ldmdblt	r0, {r0, r3, r7, r8, r9, fp, ip, sp, lr, pc}^
    c2d0:	vmuleq.f64	d9, d5, d0
    c2d4:	beq	88f360 <strvisx@@Base+0x87b5ec>
    c2d8:	blls	28354 <strvisx@@Base+0x145e0>
    c2dc:	blls	28448 <strvisx@@Base+0x146d4>
    c2e0:	blls	28550 <strvisx@@Base+0x147dc>
    c2e4:	bmi	22865c <strvisx@@Base+0x2148e8>
    c2e8:	ldrbtmi	r4, [sl], #-2822	; 0xfffff4fa
    c2ec:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    c2f0:	subsmi	r9, sl, r1, lsl #22
    c2f4:	andlt	sp, r3, r1, lsl #2
    c2f8:			; <UNDEFINED> instruction: 0xf7f6bd30
    c2fc:	svclt	0x0000e9ce
    c300:	andeq	sp, r1, r2, asr sl
    c304:	andeq	r0, r0, r0, asr #5
    c308:	andeq	sp, r1, r6, lsl sl
    c30c:	ldrdgt	pc, [r8], #-143	; 0xffffff71
    c310:	ldrbtmi	fp, [ip], #1328	; 0x530
    c314:	addlt	r4, r3, r1, lsl sp
    c318:	andcs	r4, r2, #20, 12	; 0x1400000
    c31c:			; <UNDEFINED> instruction: 0xf85c466b
    c320:	stmdavs	sp!, {r0, r2, ip, lr}
    c324:			; <UNDEFINED> instruction: 0xf04f9501
    c328:	strcs	r0, [r0, #-1280]	; 0xfffffb00
    c32c:			; <UNDEFINED> instruction: 0xf7ff9500
    c330:	stmdblt	r0!, {r0, r1, r2, r4, r6, r8, r9, fp, ip, sp, lr, pc}
    c334:	beq	8b2f3c <strvisx@@Base+0x89f1c8>
    c338:	blls	283a8 <strvisx@@Base+0x14634>
    c33c:	bmi	2284b4 <strvisx@@Base+0x214740>
    c340:	ldrbtmi	r4, [sl], #-2822	; 0xfffff4fa
    c344:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    c348:	subsmi	r9, sl, r1, lsl #22
    c34c:	andlt	sp, r3, r1, lsl #2
    c350:			; <UNDEFINED> instruction: 0xf7f6bd30
    c354:	svclt	0x0000e9a2
    c358:	andeq	sp, r1, lr, ror #19
    c35c:	andeq	r0, r0, r0, asr #5
    c360:			; <UNDEFINED> instruction: 0x0001d9be
    c364:	ldrdgt	pc, [r0], #-143	; 0xffffff71
    c368:	ldrbtmi	fp, [ip], #1328	; 0x530
    c36c:	addlt	r4, r3, pc, lsl #26
    c370:	andcs	r4, r1, #20, 12	; 0x1400000
    c374:			; <UNDEFINED> instruction: 0xf85c466b
    c378:	stmdavs	sp!, {r0, r2, ip, lr}
    c37c:			; <UNDEFINED> instruction: 0xf04f9501
    c380:	strcs	r0, [r0, #-1280]	; 0xfffffb00
    c384:			; <UNDEFINED> instruction: 0xf7ff9500
    c388:	stmdblt	r8, {r0, r1, r3, r5, r8, r9, fp, ip, sp, lr, pc}
    c38c:	andsvc	r9, ip, r0, lsl #22
    c390:	blmi	19ebb4 <strvisx@@Base+0x18ae40>
    c394:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    c398:	blls	66408 <strvisx@@Base+0x52694>
    c39c:	qaddle	r4, sl, r1
    c3a0:	ldclt	0, cr11, [r0, #-12]!
    c3a4:	ldmdb	r8!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    c3a8:	muleq	r1, r6, r9
    c3ac:	andeq	r0, r0, r0, asr #5
    c3b0:	andeq	sp, r1, ip, ror #18
    c3b4:	ldrdgt	pc, [ip], #-143	; 0xffffff71
    c3b8:	ldrbtmi	fp, [ip], #1328	; 0x530
    c3bc:	addlt	r4, r5, r2, lsl ip
    c3c0:			; <UNDEFINED> instruction: 0x461a4615
    c3c4:	blge	b0bd0 <strvisx@@Base+0x9ce5c>
    c3c8:	andmi	pc, r4, ip, asr r8	; <UNPREDICTABLE>
    c3cc:	strls	r6, [r3], #-2084	; 0xfffff7dc
    c3d0:	streq	pc, [r0], #-79	; 0xffffffb1
    c3d4:	strls	r2, [r2], #-1024	; 0xfffffc00
    c3d8:	blx	ca3de <strvisx@@Base+0xb666a>
    c3dc:	stmdblt	r0!, {r2, r9, sl, lr}
    c3e0:	strtmi	r9, [r9], -r1, lsl #20
    c3e4:			; <UNDEFINED> instruction: 0xf7f69802
    c3e8:	bmi	2465a8 <strvisx@@Base+0x232834>
    c3ec:	ldrbtmi	r4, [sl], #-2822	; 0xfffff4fa
    c3f0:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    c3f4:	subsmi	r9, sl, r3, lsl #22
    c3f8:	strtmi	sp, [r0], -r2, lsl #2
    c3fc:	ldclt	0, cr11, [r0, #-20]!	; 0xffffffec
    c400:	stmdb	sl, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}^
    c404:	andeq	sp, r1, r6, asr #18
    c408:	andeq	r0, r0, r0, asr #5
    c40c:	andeq	sp, r1, r2, lsl r9
    c410:			; <UNDEFINED> instruction: 0x460db530
    c414:			; <UNDEFINED> instruction: 0x4614491c
    c418:			; <UNDEFINED> instruction: 0xf64f4a1c
    c41c:	ldrbtmi	r7, [r9], #-1020	; 0xfffffc04
    c420:	mvnsvc	pc, #192, 4
    c424:	umulllt	r4, r3, ip, r2
    c428:	ldmdavs	r2, {r1, r3, r7, fp, ip, lr}
    c42c:			; <UNDEFINED> instruction: 0xf04f9201
    c430:	stmdale	r4!, {r9}
    c434:	strbtmi	r1, [sl], -r1, lsr #26
    c438:			; <UNDEFINED> instruction: 0xf9fcf7ff
    c43c:	blle	316444 <strvisx@@Base+0x3026d0>
    c440:	cdpeq	8, 2, cr9, cr1, cr0, {0}
    c444:	beq	8cf4d4 <strvisx@@Base+0x8bb760>
    c448:	strtmi	r7, [r0], -r1
    c44c:	subvc	r9, sl, r0, lsl #18
    c450:	addsvc	r9, r3, r0, lsl #20
    c454:	sbcsvc	r9, ip, r0, lsl #22
    c458:	bmi	37a990 <strvisx@@Base+0x366c1c>
    c45c:	ldrbtmi	r4, [sl], #-2827	; 0xfffff4f5
    c460:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    c464:	subsmi	r9, sl, r1, lsl #22
    c468:	andlt	sp, r3, ip, lsl #2
    c46c:	stmdals	r0, {r4, r5, r8, sl, fp, ip, sp, pc}
    c470:	strtmi	r4, [r9], -r2, lsr #12
    c474:			; <UNDEFINED> instruction: 0xf7f63004
    c478:	andcs	lr, r0, r6, lsr #16
    c47c:			; <UNDEFINED> instruction: 0xf06fe7ed
    c480:	strb	r0, [sl, r8]!
    c484:	stmdb	r8, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    c488:	andeq	sp, r1, r2, ror #17
    c48c:	andeq	r0, r0, r0, asr #5
    c490:	andeq	sp, r1, r2, lsr #17
    c494:			; <UNDEFINED> instruction: 0x460ab538
    c498:	strmi	r4, [ip], -r5, lsl #12
    c49c:			; <UNDEFINED> instruction: 0x4608b119
    c4a0:	svc	0x00fef7f5
    c4a4:	strtmi	r4, [r1], -r2, lsl #12
    c4a8:	pop	{r3, r5, r9, sl, lr}
    c4ac:			; <UNDEFINED> instruction: 0xf7ff4038
    c4b0:	svclt	0x0000bfaf
    c4b4:			; <UNDEFINED> instruction: 0x460ab530
    c4b8:	strmi	fp, [ip], -r3, lsl #1
    c4bc:			; <UNDEFINED> instruction: 0x4605b151
    c4c0:			; <UNDEFINED> instruction: 0xf7ff4608
    c4c4:	ldrdls	pc, [r1], -sp
    c4c8:			; <UNDEFINED> instruction: 0xf7ff4620
    c4cc:	stmdbls	r1, {r0, r2, r4, r5, r6, fp, ip, sp, lr, pc}
    c4d0:	strtmi	r4, [r8], -r2, lsl #12
    c4d4:	pop	{r0, r1, ip, sp, pc}
    c4d8:			; <UNDEFINED> instruction: 0xf7ff4030
    c4dc:	svclt	0x0000bf99
    c4e0:	blx	fec79ca8 <strvisx@@Base+0xfec65f34>
    c4e4:	stcmi	3, cr15, [r1], #-516	; 0xfffffdfc
    c4e8:	bmi	878704 <strvisx@@Base+0x864990>
    c4ec:	ldrbtmi	r0, [ip], #-2395	; 0xfffff6a5
    c4f0:	svclt	0x00082800
    c4f4:	stmiapl	r2!, {r0, r8, r9, sp}
    c4f8:	andls	r6, r3, #1179648	; 0x120000
    c4fc:	andeq	pc, r0, #79	; 0x4f
    c500:	andvs	fp, fp, r3, ror #22
    c504:	strmi	sl, [sp], -r2, lsl #20
    c508:	strmi	sl, [r6], -r1, lsl #18
    c50c:	blx	ff44a512 <strvisx@@Base+0xff43679e>
    c510:	cmplt	r0, r4, lsl #12
    c514:	blmi	59ed78 <strvisx@@Base+0x58b004>
    c518:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    c51c:	blls	e658c <strvisx@@Base+0xd2818>
    c520:	qsuble	r4, sl, r1
    c524:	andlt	r4, r5, r0, lsr #12
    c528:	ldmib	sp, {r4, r5, r6, r7, r8, sl, fp, ip, sp, pc}^
    c52c:			; <UNDEFINED> instruction: 0xf7fe0101
    c530:			; <UNDEFINED> instruction: 0x4607fe5b
    c534:	stmdbls	r2, {r3, r5, r7, r8, ip, sp, pc}
    c538:	tstcc	r4, r0, lsr r6
    c53c:			; <UNDEFINED> instruction: 0xf994f7ff
    c540:	ldmdblt	r8!, {r2, r9, sl, lr}
    c544:			; <UNDEFINED> instruction: 0x46384631
    c548:	mcr2	7, 3, pc, cr12, cr14, {7}	; <UNPREDICTABLE>
    c54c:	stmdblt	r8, {r2, r9, sl, lr}
    c550:	ldrb	r6, [pc, pc, lsr #32]
    c554:			; <UNDEFINED> instruction: 0xf7fe4638
    c558:			; <UNDEFINED> instruction: 0xe7dbfeb5
    c55c:	streq	pc, [r9], #-111	; 0xffffff91
    c560:			; <UNDEFINED> instruction: 0xf06fe7d8
    c564:	ldrb	r0, [r5, r1, lsl #8]
    c568:	ldm	r6, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    c56c:	andeq	sp, r1, r2, lsl r8
    c570:	andeq	r0, r0, r0, asr #5
    c574:	andeq	sp, r1, r8, ror #15
    c578:	mvnsmi	lr, sp, lsr #18
    c57c:	stmdbmi	r9!, {r0, r2, r3, r9, sl, lr}
    c580:	bmi	a5ddd8 <strvisx@@Base+0xa4a064>
    c584:	mvnsvc	pc, #82837504	; 0x4f00000
    c588:	vmvn.i32	q10, #589824	; 0x00090000
    c58c:	addsmi	r7, ip, #-67108861	; 0xfc000003
    c590:	stmpl	sl, {r1, r7, ip, sp, pc}
    c594:	andls	r6, r1, #1179648	; 0x120000
    c598:	andeq	pc, r0, #79	; 0x4f
    c59c:	cmnlt	r4, sp, lsr r8
    c5a0:	and	r4, r2, fp, lsr #12
    c5a4:	ldrmi	r3, [sp], -r1, lsl #24
    c5a8:	ldmdavc	lr, {r0, r3, ip, lr, pc}
    c5ac:	movwcc	r4, #5661	; 0x161d
    c5b0:	rscsle	r2, r7, r0, lsl #28
    c5b4:	ldmdbne	r7!, {r1, r2, r4, r5, r6, r7, r8, fp}
    c5b8:			; <UNDEFINED> instruction: 0x46b01d39
    c5bc:	strtmi	lr, [r7], -r3
    c5c0:	smlatbcs	r4, r0, r6, r4
    c5c4:	strbtmi	r4, [sl], -r6, lsr #12
    c5c8:			; <UNDEFINED> instruction: 0xf934f7ff
    c5cc:	blle	4165d4 <strvisx@@Base+0x402860>
    c5d0:	vaddeq.f64	d9, d8, d0
    c5d4:	beq	e8f6c0 <strvisx@@Base+0xe7b94c>
    c5d8:	blls	28640 <strvisx@@Base+0x148cc>
    c5dc:	blls	28748 <strvisx@@Base+0x149d4>
    c5e0:	blls	28850 <strvisx@@Base+0x14adc>
    c5e4:	ldrsblt	r7, [r6, -pc]
    c5e8:	andcs	r9, r0, #0, 22
    c5ec:	ldmdblt	ip, {r1, r3, r4, r8, ip, sp, lr}^
    c5f0:	bmi	3945f8 <strvisx@@Base+0x380884>
    c5f4:	ldrbtmi	r4, [sl], #-2828	; 0xfffff4f4
    c5f8:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    c5fc:	subsmi	r9, sl, r1, lsl #22
    c600:	andlt	sp, r2, lr, lsl #2
    c604:	ldrhhi	lr, [r0, #141]!	; 0x8d
    c608:			; <UNDEFINED> instruction: 0xf1089800
    c60c:	strtmi	r0, [r2], -r4, lsl #16
    c610:	strbmi	r4, [r0], #-1577	; 0xfffff9d7
    c614:	svc	0x0056f7f5
    c618:			; <UNDEFINED> instruction: 0xf06fe7ea
    c61c:	strb	r0, [r8, r8]!
    c620:	ldmda	sl!, {r1, r2, r4, r5, r6, r7, r8, r9, sl, ip, sp, lr, pc}
    c624:	andeq	sp, r1, r8, ror r7
    c628:	andeq	r0, r0, r0, asr #5
    c62c:	andeq	sp, r1, sl, lsl #14
    c630:	mvnsmi	lr, #737280	; 0xb4000
    c634:	stcmi	0, cr11, [r8], #-532	; 0xfffffdec
    c638:	blmi	a1de7c <strvisx@@Base+0xa0a108>
    c63c:	ldrbtmi	sl, [ip], #-2305	; 0xfffff6ff
    c640:	bge	9e088 <strvisx@@Base+0x8a314>
    c644:	stmiapl	r3!, {r0, r7, r9, sl, lr}^
    c648:	movwls	r6, #14363	; 0x381b
    c64c:	movweq	pc, #79	; 0x4f	; <UNPREDICTABLE>
    c650:	blx	bca656 <strvisx@@Base+0xbb68e2>
    c654:	blle	a5665c <strvisx@@Base+0xa428e8>
    c658:	stmdbcs	r0, {r1, r8, fp, ip, pc}
    c65c:	stcls	0, cr13, [r1, #-196]	; 0xffffff3c
    c660:	strteq	r7, [r3], -ip, lsr #16
    c664:			; <UNDEFINED> instruction: 0xf640d432
    c668:	addsmi	r0, r9, #67108864	; 0x4000000
    c66c:	tstle	r0, fp, lsr #16
    c670:			; <UNDEFINED> instruction: 0x1c6bbb4c
    c674:	ldmdane	sl, {r0, r2, r3, sl, lr}^
    c678:	adcmi	lr, fp, #4
    c67c:	eorle	r9, r0, r1, lsl #6
    c680:	blmi	8a6d4 <strvisx@@Base+0x76960>
    c684:			; <UNDEFINED> instruction: 0x2c001ad6
    c688:	strdlt	sp, [pc, -r7]
    c68c:	eorsvs	r9, fp, r1, lsl #22
    c690:	svceq	0x0000f1b8
    c694:			; <UNDEFINED> instruction: 0xf8c8d001
    c698:	mrscc	r6, (UNDEF: 4)
    c69c:			; <UNDEFINED> instruction: 0xf7ff4648
    c6a0:	stmdacc	r0, {r0, r1, r5, r6, r7, fp, ip, sp, lr, pc}
    c6a4:	andcs	fp, r1, r8, lsl pc
    c6a8:	ldc2	0, cr15, [r8], #-32	; 0xffffffe0
    c6ac:	blmi	2deee4 <strvisx@@Base+0x2cb170>
    c6b0:	ldmpl	r3, {r1, r3, r4, r5, r6, sl, lr}^
    c6b4:	blls	e6724 <strvisx@@Base+0xd29b0>
    c6b8:	qaddle	r4, sl, sl
    c6bc:	pop	{r0, r2, ip, sp, pc}
    c6c0:			; <UNDEFINED> instruction: 0x260083f0
    c6c4:			; <UNDEFINED> instruction: 0xf06fe7e1
    c6c8:	strb	r0, [pc, r6]!
    c6cc:	andeq	pc, r4, pc, rrx
    c6d0:			; <UNDEFINED> instruction: 0xf7f5e7ec
    c6d4:	svclt	0x0000efe2
    c6d8:	andeq	sp, r1, r2, asr #13
    c6dc:	andeq	r0, r0, r0, asr #5
    c6e0:	andeq	sp, r1, r0, asr r6
    c6e4:	andcs	fp, r1, pc, lsl #8
    c6e8:	addlt	fp, r3, r0, lsl #10
    c6ec:	ldrdgt	pc, [r4], -pc	; <UNPREDICTABLE>
    c6f0:	blmi	276f08 <strvisx@@Base+0x263194>
    c6f4:			; <UNDEFINED> instruction: 0xf85244fc
    c6f8:			; <UNDEFINED> instruction: 0xf85c1b04
    c6fc:	ldmdavs	fp, {r0, r1, ip, sp}
    c700:			; <UNDEFINED> instruction: 0xf04f9301
    c704:	andls	r0, r0, #0, 6
    c708:			; <UNDEFINED> instruction: 0xf99cf000
    c70c:			; <UNDEFINED> instruction: 0xf00420ff
    c710:	svclt	0x0000fa47
    c714:	andeq	sp, r1, ip, lsl #12
    c718:	andeq	r0, r0, r0, asr #5
    c71c:	ldrbtmi	r4, [fp], #-2817	; 0xfffff4ff
    c720:			; <UNDEFINED> instruction: 0x47706818
    c724:	strdeq	sp, [r1], -r2
    c728:	ldrblt	fp, [r0, #-496]!	; 0xfffffe10
    c72c:	cfmsub32mi	mvax0, mvfx4, mvfx0, mvfx5
    c730:	ldmdami	r0, {sl, sp}
    c734:	ldrbtmi	r4, [r8], #-1150	; 0xfffffb82
    c738:			; <UNDEFINED> instruction: 0xf008e005
    c73c:	strmi	pc, [r4], -r9, lsl #22
    c740:	eorseq	pc, r0, r6, asr r8	; <UNPREDICTABLE>
    c744:	strtmi	fp, [r9], -r8, ror #2
    c748:	ldcl	7, cr15, [lr, #980]	; 0x3d4
    c74c:	strmi	r2, [r3], -r1, lsl #2
    c750:	blcs	1dfd8 <strvisx@@Base+0xa264>
    c754:	blmi	240f20 <strvisx@@Base+0x22d1ac>
    c758:	bl	dd94c <strvisx@@Base+0xc9bd8>
    c75c:	stmdavs	r0!, {r2, r6, r7, sl}^
    c760:			; <UNDEFINED> instruction: 0xf04fbd70
    c764:	ldcllt	0, cr3, [r0, #-1020]!	; 0xfffffc04
    c768:	rscscc	pc, pc, pc, asr #32
    c76c:	svclt	0x00004770
    c770:	andeq	sp, r1, r4, lsr #6
    c774:	andeq	fp, r0, r2, asr #16
    c778:	andeq	sp, r1, r0, lsl #6
    c77c:	tstcs	r0, r6, lsl #22
    c780:	ldrbtmi	r4, [fp], #-2566	; 0xfffff5fa
    c784:	and	r4, r3, sl, ror r4
    c788:	svccs	0x0008f853
    c78c:	ldmdavs	r9, {r1, r4, r8, ip, sp, pc}^
    c790:	mvnsle	r4, r8, lsl #5
    c794:			; <UNDEFINED> instruction: 0x47704610
    c798:	ldrdeq	sp, [r1], -r6
    c79c:	strdeq	fp, [r0], -r4
    c7a0:	ldrblt	fp, [r0, #-504]!	; 0xfffffe08
    c7a4:	ldcmi	6, cr4, [r0, #-24]	; 0xffffffe8
    c7a8:	ldmdami	r0, {sl, sp}
    c7ac:	ldrbtmi	r4, [r8], #-1149	; 0xfffffb83
    c7b0:	and	r3, r5, r8, ror #10
    c7b4:	blx	ff3487dc <strvisx@@Base+0xff334a68>
    c7b8:			; <UNDEFINED> instruction: 0xf8554604
    c7bc:	cmnlt	r8, r0, lsr r0
    c7c0:			; <UNDEFINED> instruction: 0xf7f54631
    c7c4:	smlatbcs	r1, r2, sp, lr
    c7c8:	strtmi	r4, [r0], -r3, lsl #12
    c7cc:	mvnsle	r2, r0, lsl #22
    c7d0:	ldrbtmi	r4, [fp], #-2823	; 0xfffff4f9
    c7d4:	strbeq	lr, [r4], #2819	; 0xb03
    c7d8:	ldcllt	14, cr6, [r0, #-896]!	; 0xfffffc80
    c7dc:	rscscc	pc, pc, pc, asr #32
    c7e0:			; <UNDEFINED> instruction: 0xf04fbd70
    c7e4:			; <UNDEFINED> instruction: 0x477030ff
    c7e8:	andeq	sp, r1, ip, lsr #5
    c7ec:	ldrdeq	fp, [r0], -r2
    c7f0:	andeq	sp, r1, r6, lsl #5
    c7f4:	tstcs	r0, r7, lsl #22
    c7f8:	ldrbtmi	r4, [fp], #-2567	; 0xfffff5f9
    c7fc:	cmncc	r8, #2046820352	; 0x7a000000
    c800:			; <UNDEFINED> instruction: 0xf853e003
    c804:	tstlt	r2, r8, lsl #30
    c808:	addmi	r6, r8, #5832704	; 0x590000
    c80c:			; <UNDEFINED> instruction: 0x4610d1f9
    c810:	svclt	0x00004770
    c814:	andeq	sp, r1, lr, asr r2
    c818:	andeq	fp, r0, r4, lsl #15
    c81c:	andcs	fp, r1, pc, lsl #8
    c820:			; <UNDEFINED> instruction: 0xf7f5b508
    c824:	svclt	0x0000eddc
    c828:	cfstr64mi	mvdx11, [r5], {112}	; 0x70
    c82c:	ldrbtmi	r4, [ip], #-3653	; 0xfffff1bb
    c830:	eorvs	r4, r0, lr, ror r4
    c834:	stmdbcs	r7, {r5, r8, ip, sp, pc}
    c838:	mcrrmi	8, 7, sp, r3, cr0
    c83c:	eorvs	r4, r1, ip, ror r4
    c840:	strcs	r4, [r0, #-2370]	; 0xfffff6be
    c844:	ldrbtmi	r4, [r9], #-3138	; 0xfffff3be
    c848:	stmib	r1, {r2, r3, r4, r5, r6, sl, lr}^
    c84c:	rsbvs	r5, r3, r1, lsl #10
    c850:	bcs	2fad84 <strvisx@@Base+0x2e7010>
    c854:	ldm	pc, {r1, r2, r3, r5, r6, fp, ip, lr, pc}^	; <UNPREDICTABLE>
    c858:	ldrcs	pc, [r4, #-2]
    c85c:	ldfccs	f3, [r7, #-172]!	; 0xffffff54
    c860:	strbpl	r4, [pc, #-2371]	; bf25 <el_source@plt+0x95e9>
    c864:	ldcllt	7, cr0, [r0, #-364]!	; 0xfffffe94
    c868:			; <UNDEFINED> instruction: 0x21b84b3a
    c86c:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c870:			; <UNDEFINED> instruction: 0xb1686099
    c874:			; <UNDEFINED> instruction: 0xf7f52101
    c878:	pop	{r1, r4, r6, r7, r8, sl, fp, sp, lr, pc}
    c87c:			; <UNDEFINED> instruction: 0xf7f54070
    c880:	blmi	d7c6ac <strvisx@@Base+0xd68938>
    c884:			; <UNDEFINED> instruction: 0x460a2118
    c888:	addsvs	r4, r9, fp, ror r4
    c88c:	mvnsle	r2, r0, lsl #16
    c890:	tstcs	r1, r2, lsr fp
    c894:	ldmdavs	r8, {r0, r1, r4, r5, r6, r7, fp, ip, lr}
    c898:	stcl	7, cr15, [r0, #980]	; 0x3d4
    c89c:	ldrhtmi	lr, [r0], #-141	; 0xffffff73
    c8a0:	svclt	0x0078f7f5
    c8a4:	tstcs	r8, lr, lsr #22
    c8a8:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c8ac:			; <UNDEFINED> instruction: 0xe7e06099
    c8b0:			; <UNDEFINED> instruction: 0x21204b2c
    c8b4:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c8b8:	bfi	r6, r9, #1, #26
    c8bc:	cmpcs	r0, sl, lsr #22
    c8c0:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c8c4:	bfi	r6, r9, #1, #20
    c8c8:	orrcs	r4, r0, r8, lsr #22
    c8cc:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c8d0:	bfi	r6, r9, #1, #14
    c8d4:	orrcs	r4, r8, r6, lsr #22
    c8d8:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c8dc:	bfi	r6, r9, #1, #8
    c8e0:	orrscs	r4, r0, r4, lsr #22
    c8e4:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c8e8:	bfi	r6, r9, #1, #2
    c8ec:	orrscs	r4, r8, r2, lsr #22
    c8f0:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c8f4:			; <UNDEFINED> instruction: 0xe7bc6099
    c8f8:	lsrcs	r4, r0, #22
    c8fc:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c900:			; <UNDEFINED> instruction: 0xe7b66099
    c904:			; <UNDEFINED> instruction: 0x21a84b1e
    c908:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c90c:			; <UNDEFINED> instruction: 0xe7b06099
    c910:	lslscs	r4, ip, fp
    c914:	ldrbtmi	r4, [fp], #-1546	; 0xfffff9f6
    c918:			; <UNDEFINED> instruction: 0xe7aa6099
    c91c:			; <UNDEFINED> instruction: 0x460b4a1a
    c920:	ldrbtmi	r4, [sl], #-2074	; 0xfffff7e6
    c924:	tstcs	r1, r0, lsr r8
    c928:			; <UNDEFINED> instruction: 0xf7f56800
    c92c:	andcs	lr, r1, r8, asr #29
    c930:	svc	0x00daf7f5
    c934:	bmi	59e188 <strvisx@@Base+0x58a414>
    c938:	ldrbtmi	r4, [sl], #-2068	; 0xfffff7ec
    c93c:	svclt	0x0000e7f2
    c940:	andeq	r0, r2, lr, asr ip
    c944:	ldrdeq	sp, [r1], -r0
    c948:	ldrdeq	sp, [r1], -r4
    c94c:	andeq	r0, r2, r6, asr #24
    c950:	andeq	sp, r1, r8, asr #15
    c954:	andeq	sp, r1, r2, lsr #15
    c958:	andeq	sp, r1, r8, lsl #15
    c95c:	andeq	r0, r0, r0, lsl #5
    c960:	andeq	sp, r1, r6, ror #14
    c964:	andeq	sp, r1, sl, asr r7
    c968:	andeq	sp, r1, lr, asr #14
    c96c:	andeq	sp, r1, r2, asr #14
    c970:	andeq	sp, r1, r6, lsr r7
    c974:	andeq	sp, r1, sl, lsr #14
    c978:	andeq	sp, r1, lr, lsl r7
    c97c:	andeq	sp, r1, r2, lsl r7
    c980:	andeq	sp, r1, r6, lsl #14
    c984:	strdeq	sp, [r1], -sl
    c988:	andeq	fp, r0, r6, ror #12
    c98c:	andeq	r0, r0, r4, ror #5
    c990:	andeq	fp, r0, sl, ror r6
    c994:	strmi	r4, [r3], -r7, lsl #20
    c998:	ldmdavs	r0, {r1, r3, r4, r5, r6, sl, lr}
    c99c:	blcs	1f8ea4 <strvisx@@Base+0x1e5130>
    c9a0:	bmi	1829b8 <strvisx@@Base+0x16ec44>
    c9a4:	ldrbtmi	r2, [sl], #-0
    c9a8:			; <UNDEFINED> instruction: 0x47706013
    c9ac:	rscscc	pc, pc, pc, asr #32
    c9b0:	svclt	0x00004770
    c9b4:	strdeq	r0, [r2], -r4
    c9b8:	andeq	sp, r1, sl, ror #12
    c9bc:	ldrbtmi	r4, [fp], #-2821	; 0xfffff4fb
    c9c0:			; <UNDEFINED> instruction: 0xb1286858
    c9c4:			; <UNDEFINED> instruction: 0xf1a068d8
    c9c8:	blx	fec0c9d8 <strvisx@@Base+0xfebf8c64>
    c9cc:	stmdbeq	r0, {r7, ip, sp, lr, pc}^
    c9d0:	svclt	0x00004770
    c9d4:	andeq	sp, r1, r2, asr r6
    c9d8:	vst3.8	{d27,d29,d31}, [pc :256], r0
    c9dc:	addlt	r7, r3, r0, asr #5
    c9e0:	cmpmi	r1, r0, asr #4	; <UNPREDICTABLE>
    c9e4:			; <UNDEFINED> instruction: 0xf7f54604
    c9e8:	blmi	3c8110 <strvisx@@Base+0x3b439c>
    c9ec:	cfstrdne	mvd4, [r2], {123}	; 0x7b
    c9f0:	blmi	380a08 <strvisx@@Base+0x36cc94>
    c9f4:	sbcsvs	r4, r8, fp, ror r4
    c9f8:	ldclt	0, cr11, [r0, #-12]!
    c9fc:	ldmpl	fp, {r0, r1, r3, r9, fp, lr}
    ca00:			; <UNDEFINED> instruction: 0xf7f5681d
    ca04:	stmdavs	r0, {r1, r2, r3, r4, r5, r6, r8, r9, sl, fp, sp, lr, pc}
    ca08:	bl	ffd4a9e4 <strvisx@@Base+0xffd36c70>
    ca0c:	tstcs	r1, r3, lsr #12
    ca10:	andls	r4, r0, #2097152	; 0x200000
    ca14:	strtmi	r4, [r8], -r6, lsl #20
    ca18:			; <UNDEFINED> instruction: 0xf7f5447a
    ca1c:	andcs	lr, r1, r0, asr lr
    ca20:	svc	0x0062f7f5
    ca24:	andeq	sp, r1, r4, lsl r3
    ca28:	andeq	sp, r1, ip, lsl r6
    ca2c:	andeq	r0, r0, r4, ror #5
    ca30:	andeq	fp, r0, ip, asr #11
    ca34:	ldrbtmi	r4, [fp], #-2818	; 0xfffff4fe
    ca38:	smlabteq	r1, r3, r9, lr
    ca3c:	svclt	0x00004770
    ca40:	andeq	r0, r2, r6, asr sl
    ca44:	push	{r4, r5, r6, r8, r9, fp, lr}
    ca48:	ldrbtmi	r4, [fp], #-4080	; 0xfffff010
    ca4c:	stmdbmi	pc!, {r1, r3, r7, r9, sl, lr}^	; <UNPREDICTABLE>
    ca50:	bmi	1bde2b0 <strvisx@@Base+0x1bca53c>
    ca54:	ldmdavs	fp, {r0, r3, r4, r5, r6, sl, lr}
    ca58:			; <UNDEFINED> instruction: 0x91b8f8df
    ca5c:	stceq	6, cr15, [r4, #-692]!	; 0xfffffd4c
    ca60:	addmi	r5, r3, #9043968	; 0x8a0000
    ca64:	ldmdavs	r2, {r0, r3, r4, r5, r6, r7, sl, lr}
    ca68:	ldmdacs	ip, {r0, r2, r3, r6, r7, fp, ip, sp, lr, pc}
    ca6c:	andeq	pc, r0, #79	; 0x4f
    ca70:			; <UNDEFINED> instruction: 0x4604db3d
    ca74:	svc	0x0044f7f5
    ca78:			; <UNDEFINED> instruction: 0xf8d01e63
    ca7c:	strmi	fp, [r5], -r0
    ca80:	vqdmulh.s<illegal width 8>	d2, d0, d6
    ca84:	ldm	pc, {r0, r1, r3, r4, r5, r7, pc}^	; <UNPREDICTABLE>
    ca88:	strbvc	pc, [fp, #-3]!	; <UNPREDICTABLE>
    ca8c:	eorsvs	r0, pc, #4, 8	; 0x4000000
    ca90:	movwcs	r0, #24679	; 0x6067
    ca94:	svcge	0x00079305
    ca98:	orrvs	pc, r0, #1325400064	; 0x4f000000
    ca9c:	andcs	r4, r1, #26214400	; 0x1900000
    caa0:			; <UNDEFINED> instruction: 0x96014638
    caa4:	andge	pc, r0, sp, asr #17
    caa8:	ldmdami	ip, {r0, r2, r3, r9, ip, sp, lr, pc}
    caac:	ldcl	7, cr15, [r8, #-980]	; 0xfffffc2c
    cab0:	ldrdge	pc, [r4, #-143]!	; 0xffffff71
    cab4:	addvs	pc, r0, #1325400064	; 0x4f000000
    cab8:			; <UNDEFINED> instruction: 0x46394e58
    cabc:			; <UNDEFINED> instruction: 0x464044fa
    cac0:			; <UNDEFINED> instruction: 0xf8da447e
    cac4:	blcs	18adc <strvisx@@Base+0x4d68>
    cac8:			; <UNDEFINED> instruction: 0x2321bf14
    cacc:			; <UNDEFINED> instruction: 0xf007231b
    cad0:	ldmdavs	r3!, {r0, r1, r2, r3, r4, r5, fp, ip, sp, lr, pc}^
    cad4:	subsle	r2, r6, r0, lsl #22
    cad8:	ldmvs	r2!, {r5, r9, sl, lr}
    cadc:	movwls	r4, #22081	; 0x5641
    cae0:	rsbsvs	r2, r4, r0, lsl #8
    cae4:	blls	15e94c <strvisx@@Base+0x14abd8>
    cae8:			; <UNDEFINED> instruction: 0xf8c56073
    caec:	bmi	1338af4 <strvisx@@Base+0x1324d80>
    caf0:	ldrbtmi	r4, [sl], #-2887	; 0xfffff4b9
    caf4:	ldmdavs	sl, {r0, r1, r4, r6, r7, fp, ip, lr}
    caf8:	ldmdacc	ip, {r0, r2, r3, r4, r6, r7, fp, ip, sp, lr, pc}
    cafc:	cmnle	fp, sl, asr r0
    cb00:	stceq	6, cr15, [r4, #-52]!	; 0xffffffcc
    cb04:	svchi	0x00f0e8bd
    cb08:	movwcs	r4, #31302	; 0x7a46
    cb0c:	ldrbtmi	r9, [sl], #-773	; 0xfffffcfb
    cb10:	ldrbtmi	r4, [fp], #-2885	; 0xfffff4bb
    cb14:	blcs	26c88 <strvisx@@Base+0x12f14>
    cb18:	vand	d13, d29, d29
    cb1c:	stmdbmi	r3, {r2, r3, r4, fp, lr}^
    cb20:	orrvs	pc, r0, #1325400064	; 0x4f000000
    cb24:	bcs	87260 <strvisx@@Base+0x734ec>
    cb28:	svcge	0x00074479
    cb2c:	strbmi	r9, [r0], -r0, lsl #2
    cb30:	andcs	r4, r1, #26214400	; 0x1900000
    cb34:	stcl	7, cr15, [r0, #-980]	; 0xfffffc2c
    cb38:	orrvs	pc, r0, #1325400064	; 0x4f000000
    cb3c:			; <UNDEFINED> instruction: 0x46194638
    cb40:			; <UNDEFINED> instruction: 0xf8cd2201
    cb44:	strls	r8, [r1], -r0
    cb48:	stc	7, cr15, [sl, #-980]	; 0xfffffc2c
    cb4c:	bmi	e46a14 <strvisx@@Base+0xe32ca0>
    cb50:	movwls	r2, #21255	; 0x5307
    cb54:			; <UNDEFINED> instruction: 0xe7db447a
    cb58:	strls	r4, [r5], #-2614	; 0xfffff5ca
    cb5c:			; <UNDEFINED> instruction: 0xe7d7447a
    cb60:	ldrbtmi	r4, [fp], #-2869	; 0xfffff4cb
    cb64:	blcs	26cd8 <strvisx@@Base+0x12f64>
    cb68:	bmi	d41068 <strvisx@@Base+0xd2d2f4>
    cb6c:	movwls	r2, #21250	; 0x5302
    cb70:			; <UNDEFINED> instruction: 0xe7cd447a
    cb74:	ldrbtmi	r4, [fp], #-2866	; 0xfffff4ce
    cb78:	bllt	fe4e6cec <strvisx@@Base+0xfe4d2f78>
    cb7c:	movwcs	r4, #14897	; 0x3a31
    cb80:	ldrbtmi	r9, [sl], #-773	; 0xfffffcfb
    cb84:			; <UNDEFINED> instruction: 0xf8dae7c4
    cb88:	stmiblt	fp, {r2, ip, sp}
    cb8c:	cmnlt	r0, #48, 16	; 0x300000
    cb90:	tstcs	r1, sp, lsr #22
    cb94:	ldmvs	sl, {r0, r1, r3, r4, r5, r6, sl, lr}
    cb98:	mcrr	7, 15, pc, r0, cr5	; <UNPREDICTABLE>
    cb9c:	stmdals	r5, {r0, r1, r3, r5, r9, fp, lr}
    cba0:	ldrbtmi	r4, [sl], #-1603	; 0xfffff9bd
    cba4:			; <UNDEFINED> instruction: 0xf7f52101
    cba8:			; <UNDEFINED> instruction: 0xf7f5ed1a
    cbac:			; <UNDEFINED> instruction: 0xe79cedf6
    cbb0:	vst1.8	{d20-d21}, [pc :128], r7
    cbb4:	ldrmi	r6, [r9], -r0, lsl #7
    cbb8:	rscscc	pc, sp, r0, asr #4
    cbbc:			; <UNDEFINED> instruction: 0xf8cd447a
    cbc0:	stmib	sp, {r3, pc}^
    cbc4:	andcs	r2, r1, #0
    cbc8:			; <UNDEFINED> instruction: 0xf7f54638
    cbcc:			; <UNDEFINED> instruction: 0x4638ecf6
    cbd0:	stcl	7, cr15, [r6], #-980	; 0xfffffc2c
    cbd4:			; <UNDEFINED> instruction: 0x46024639
    cbd8:	ldrdeq	pc, [ip], -sl
    cbdc:	ldc	7, cr15, [r8], {245}	; 0xf5
    cbe0:	movwcs	lr, #14211	; 0x3783
    cbe4:	ldrb	r9, [r6, -r5, lsl #6]
    cbe8:	movwls	r2, #21250	; 0x5302
    cbec:	blmi	686940 <strvisx@@Base+0x672bcc>
    cbf0:	andcc	pc, r3, r9, asr r8	; <UNPREDICTABLE>
    cbf4:	bfi	r6, r8, (invalid: 16:11)
    cbf8:	stcl	7, cr15, [lr, #-980]	; 0xfffffc2c
    cbfc:	movwcs	r4, #14870	; 0x3a16
    cc00:	ldrbtmi	r9, [sl], #-773	; 0xfffffcfb
    cc04:	svclt	0x0000e784
    cc08:	andeq	sp, r1, r6, asr #11
    cc0c:	andeq	sp, r1, ip, lsr #5
    cc10:	andeq	r0, r0, r0, asr #5
    cc14:	muleq	r1, ip, r2
    cc18:	andeq	sp, r1, r4, asr r5
    cc1c:	andeq	r0, r2, ip, asr #19
    cc20:	andeq	sp, r1, lr, lsl #4
    cc24:	strdeq	fp, [r0], -r6
    cc28:	andeq	r0, r2, sl, ror r9
    cc2c:	andeq	fp, r0, r0, asr #23
    cc30:			; <UNDEFINED> instruction: 0x0000b4b8
    cc34:			; <UNDEFINED> instruction: 0x0000b4b8
    cc38:	andeq	sp, r1, lr, lsr #9
    cc3c:			; <UNDEFINED> instruction: 0x0000b4bc
    cc40:	muleq	r1, sl, r4
    cc44:	andeq	fp, r0, lr, ror #7
    cc48:	andeq	sp, r1, ip, ror r4
    cc4c:	muleq	r0, sl, r4
    cc50:	andeq	fp, r0, r8, ror r4
    cc54:	andeq	r0, r0, r0, lsl #5
    cc58:	andeq	fp, r0, sl, lsl r4

0000cc5c <error@@Base>:
    cc5c:	push	{r0, r1, r2, r3}
    cc5e:	movs	r0, #2
    cc60:	push	{lr}
    cc62:	sub	sp, #12
    cc64:	ldr.w	ip, [pc, #60]	; cca4 <error@@Base+0x48>
    cc68:	add	r2, sp, #16
    cc6a:	ldr	r3, [pc, #60]	; (cca8 <error@@Base+0x4c>)
    cc6c:	add	ip, pc
    cc6e:	ldr.w	r1, [r2], #4
    cc72:	ldr.w	r3, [ip, r3]
    cc76:	ldr	r3, [r3, #0]
    cc78:	str	r3, [sp, #4]
    cc7a:	mov.w	r3, #0
    cc7e:	str	r2, [sp, #0]
    cc80:	bl	ca44 <el_source@plt+0xa108>
    cc84:	ldr	r2, [pc, #36]	; (ccac <error@@Base+0x50>)
    cc86:	ldr	r3, [pc, #32]	; (cca8 <error@@Base+0x4c>)
    cc88:	add	r2, pc
    cc8a:	ldr	r3, [r2, r3]
    cc8c:	ldr	r2, [r3, #0]
    cc8e:	ldr	r3, [sp, #4]
    cc90:	eors	r2, r3
    cc92:	bne.n	cc9e <error@@Base+0x42>
    cc94:	add	sp, #12
    cc96:	ldr.w	lr, [sp], #4
    cc9a:	add	sp, #16
    cc9c:	bx	lr
    cc9e:	blx	2698 <__stack_chk_fail@plt>
    cca2:	nop
    cca4:	beq.n	cbd0 <el_source@plt+0xa294>
    cca6:	movs	r1, r0
    cca8:	lsls	r0, r0, #11
    ccaa:	movs	r0, r0
    ccac:	beq.n	cda0 <error@@Base+0x144>
    ccae:	movs	r1, r0
    ccb0:	push	{r0, r1, r2, r3}
    ccb2:	movs	r0, #3
    ccb4:	push	{lr}
    ccb6:	sub	sp, #12
    ccb8:	ldr.w	ip, [pc, #36]	; cce0 <error@@Base+0x84>
    ccbc:	add	r2, sp, #16
    ccbe:	ldr	r3, [pc, #36]	; (cce4 <error@@Base+0x88>)
    ccc0:	add	ip, pc
    ccc2:	ldr.w	r1, [r2], #4
    ccc6:	ldr.w	r3, [ip, r3]
    ccca:	ldr	r3, [r3, #0]
    cccc:	str	r3, [sp, #4]
    ccce:	mov.w	r3, #0
    ccd2:	str	r2, [sp, #0]
    ccd4:	bl	ca44 <el_source@plt+0xa108>
    ccd8:	movs	r0, #255	; 0xff
    ccda:	bl	10ba0 <error@@Base+0x3f44>
    ccde:	nop
    cce0:	beq.n	cd64 <error@@Base+0x108>
    cce2:	movs	r1, r0
    cce4:	lsls	r0, r0, #11
    cce6:	movs	r0, r0
    cce8:	push	{r0, r1, r2, r3}
    ccea:	movs	r0, #3
    ccec:	push	{lr}
    ccee:	sub	sp, #12
    ccf0:	ldr.w	ip, [pc, #60]	; cd30 <error@@Base+0xd4>
    ccf4:	add	r2, sp, #16
    ccf6:	ldr	r3, [pc, #60]	; (cd34 <error@@Base+0xd8>)
    ccf8:	add	ip, pc
    ccfa:	ldr.w	r1, [r2], #4
    ccfe:	ldr.w	r3, [ip, r3]
    cd02:	ldr	r3, [r3, #0]
    cd04:	str	r3, [sp, #4]
    cd06:	mov.w	r3, #0
    cd0a:	str	r2, [sp, #0]
    cd0c:	bl	ca44 <el_source@plt+0xa108>
    cd10:	ldr	r2, [pc, #36]	; (cd38 <error@@Base+0xdc>)
    cd12:	ldr	r3, [pc, #32]	; (cd34 <error@@Base+0xd8>)
    cd14:	add	r2, pc
    cd16:	ldr	r3, [r2, r3]
    cd18:	ldr	r2, [r3, #0]
    cd1a:	ldr	r3, [sp, #4]
    cd1c:	eors	r2, r3
    cd1e:	bne.n	cd2a <error@@Base+0xce>
    cd20:	add	sp, #12
    cd22:	ldr.w	lr, [sp], #4
    cd26:	add	sp, #16
    cd28:	bx	lr
    cd2a:	blx	2698 <__stack_chk_fail@plt>
    cd2e:	nop
    cd30:	beq.n	cd44 <error@@Base+0xe8>
    cd32:	movs	r1, r0
    cd34:	lsls	r0, r0, #11
    cd36:	movs	r0, r0
    cd38:	ldmia	r7, {r2, r3, r5, r6, r7}
    cd3a:	movs	r1, r0
    cd3c:	push	{r0, r1, r2, r3}
    cd3e:	movs	r0, #4
    cd40:	push	{lr}
    cd42:	sub	sp, #12
    cd44:	ldr.w	ip, [pc, #60]	; cd84 <error@@Base+0x128>
    cd48:	add	r2, sp, #16
    cd4a:	ldr	r3, [pc, #60]	; (cd88 <error@@Base+0x12c>)
    cd4c:	add	ip, pc
    cd4e:	ldr.w	r1, [r2], #4
    cd52:	ldr.w	r3, [ip, r3]
    cd56:	ldr	r3, [r3, #0]
    cd58:	str	r3, [sp, #4]
    cd5a:	mov.w	r3, #0
    cd5e:	str	r2, [sp, #0]
    cd60:	bl	ca44 <el_source@plt+0xa108>
    cd64:	ldr	r2, [pc, #36]	; (cd8c <error@@Base+0x130>)
    cd66:	ldr	r3, [pc, #32]	; (cd88 <error@@Base+0x12c>)
    cd68:	add	r2, pc
    cd6a:	ldr	r3, [r2, r3]
    cd6c:	ldr	r2, [r3, #0]
    cd6e:	ldr	r3, [sp, #4]
    cd70:	eors	r2, r3
    cd72:	bne.n	cd7e <error@@Base+0x122>
    cd74:	add	sp, #12
    cd76:	ldr.w	lr, [sp], #4
    cd7a:	add	sp, #16
    cd7c:	bx	lr
    cd7e:	blx	2698 <__stack_chk_fail@plt>
    cd82:	nop
    cd84:	ldmia	r7, {r2, r4, r5, r7}
    cd86:	movs	r1, r0
    cd88:	lsls	r0, r0, #11
    cd8a:	movs	r0, r0
    cd8c:	ldmia	r7, {r3, r4, r7}
    cd8e:	movs	r1, r0
    cd90:	push	{r0, r1, r2, r3}
    cd92:	movs	r0, #5
    cd94:	push	{lr}
    cd96:	sub	sp, #12
    cd98:	ldr.w	ip, [pc, #60]	; cdd8 <error@@Base+0x17c>
    cd9c:	add	r2, sp, #16
    cd9e:	ldr	r3, [pc, #60]	; (cddc <error@@Base+0x180>)
    cda0:	add	ip, pc
    cda2:	ldr.w	r1, [r2], #4
    cda6:	ldr.w	r3, [ip, r3]
    cdaa:	ldr	r3, [r3, #0]
    cdac:	str	r3, [sp, #4]
    cdae:	mov.w	r3, #0
    cdb2:	str	r2, [sp, #0]
    cdb4:	bl	ca44 <el_source@plt+0xa108>
    cdb8:	ldr	r2, [pc, #36]	; (cde0 <error@@Base+0x184>)
    cdba:	ldr	r3, [pc, #32]	; (cddc <error@@Base+0x180>)
    cdbc:	add	r2, pc
    cdbe:	ldr	r3, [r2, r3]
    cdc0:	ldr	r2, [r3, #0]
    cdc2:	ldr	r3, [sp, #4]
    cdc4:	eors	r2, r3
    cdc6:	bne.n	cdd2 <error@@Base+0x176>
    cdc8:	add	sp, #12
    cdca:	ldr.w	lr, [sp], #4
    cdce:	add	sp, #16
    cdd0:	bx	lr
    cdd2:	blx	2698 <__stack_chk_fail@plt>
    cdd6:	nop
    cdd8:	ldmia	r7!, {r5, r6}
    cdda:	movs	r1, r0
    cddc:	lsls	r0, r0, #11
    cdde:	movs	r0, r0
    cde0:	ldmia	r7!, {r2, r6}
    cde2:	movs	r1, r0
    cde4:	push	{r0, r1, r2, r3}
    cde6:	movs	r0, #6
    cde8:	push	{lr}
    cdea:	sub	sp, #12
    cdec:	ldr.w	ip, [pc, #60]	; ce2c <error@@Base+0x1d0>
    cdf0:	add	r2, sp, #16
    cdf2:	ldr	r3, [pc, #60]	; (ce30 <error@@Base+0x1d4>)
    cdf4:	add	ip, pc
    cdf6:	ldr.w	r1, [r2], #4
    cdfa:	ldr.w	r3, [ip, r3]
    cdfe:	ldr	r3, [r3, #0]
    ce00:	str	r3, [sp, #4]
    ce02:	mov.w	r3, #0
    ce06:	str	r2, [sp, #0]
    ce08:	bl	ca44 <el_source@plt+0xa108>
    ce0c:	ldr	r2, [pc, #36]	; (ce34 <error@@Base+0x1d8>)
    ce0e:	ldr	r3, [pc, #32]	; (ce30 <error@@Base+0x1d4>)
    ce10:	add	r2, pc
    ce12:	ldr	r3, [r2, r3]
    ce14:	ldr	r2, [r3, #0]
    ce16:	ldr	r3, [sp, #4]
    ce18:	eors	r2, r3
    ce1a:	bne.n	ce26 <error@@Base+0x1ca>
    ce1c:	add	sp, #12
    ce1e:	ldr.w	lr, [sp], #4
    ce22:	add	sp, #16
    ce24:	bx	lr
    ce26:	blx	2698 <__stack_chk_fail@plt>
    ce2a:	nop
    ce2c:	ldmia	r7!, {r2, r3}
    ce2e:	movs	r1, r0
    ce30:	lsls	r0, r0, #11
    ce32:	movs	r0, r0
    ce34:	ldmia	r6, {r4, r5, r6, r7}
    ce36:	movs	r1, r0
    ce38:	push	{r0, r1, r2, r3}
    ce3a:	movs	r0, #7
    ce3c:	push	{lr}
    ce3e:	sub	sp, #12
    ce40:	ldr.w	ip, [pc, #60]	; ce80 <error@@Base+0x224>
    ce44:	add	r2, sp, #16
    ce46:	ldr	r3, [pc, #60]	; (ce84 <error@@Base+0x228>)
    ce48:	add	ip, pc
    ce4a:	ldr.w	r1, [r2], #4
    ce4e:	ldr.w	r3, [ip, r3]
    ce52:	ldr	r3, [r3, #0]
    ce54:	str	r3, [sp, #4]
    ce56:	mov.w	r3, #0
    ce5a:	str	r2, [sp, #0]
    ce5c:	bl	ca44 <el_source@plt+0xa108>
    ce60:	ldr	r2, [pc, #36]	; (ce88 <error@@Base+0x22c>)
    ce62:	ldr	r3, [pc, #32]	; (ce84 <error@@Base+0x228>)
    ce64:	add	r2, pc
    ce66:	ldr	r3, [r2, r3]
    ce68:	ldr	r2, [r3, #0]
    ce6a:	ldr	r3, [sp, #4]
    ce6c:	eors	r2, r3
    ce6e:	bne.n	ce7a <error@@Base+0x21e>
    ce70:	add	sp, #12
    ce72:	ldr.w	lr, [sp], #4
    ce76:	add	sp, #16
    ce78:	bx	lr
    ce7a:	blx	2698 <__stack_chk_fail@plt>
    ce7e:	nop
    ce80:	ldmia	r6!, {r3, r4, r5, r7}
    ce82:	movs	r1, r0
    ce84:	lsls	r0, r0, #11
    ce86:	movs	r0, r0
    ce88:	ldmia	r6!, {r2, r3, r4, r7}
    ce8a:	movs	r1, r0
    ce8c:	push	{r1, r2, r3}
    ce8e:	ldr	r1, [pc, #60]	; (cecc <error@@Base+0x270>)
    ce90:	push	{lr}
    ce92:	sub	sp, #8
    ce94:	ldr	r3, [pc, #56]	; (ced0 <error@@Base+0x274>)
    ce96:	add	r2, sp, #12
    ce98:	add	r1, pc
    ce9a:	ldr	r3, [r1, r3]
    ce9c:	ldr.w	r1, [r2], #4
    cea0:	ldr	r3, [r3, #0]
    cea2:	str	r3, [sp, #4]
    cea4:	mov.w	r3, #0
    cea8:	str	r2, [sp, #0]
    ceaa:	bl	ca44 <el_source@plt+0xa108>
    ceae:	ldr	r2, [pc, #36]	; (ced4 <error@@Base+0x278>)
    ceb0:	ldr	r3, [pc, #28]	; (ced0 <error@@Base+0x274>)
    ceb2:	add	r2, pc
    ceb4:	ldr	r3, [r2, r3]
    ceb6:	ldr	r2, [r3, #0]
    ceb8:	ldr	r3, [sp, #4]
    ceba:	eors	r2, r3
    cebc:	bne.n	cec8 <error@@Base+0x26c>
    cebe:	add	sp, #8
    cec0:	ldr.w	lr, [sp], #4
    cec4:	add	sp, #12
    cec6:	bx	lr
    cec8:	blx	2698 <__stack_chk_fail@plt>
    cecc:	ldmia	r6, {r3, r5, r6}
    cece:	movs	r1, r0
    ced0:	lsls	r0, r0, #11
    ced2:	movs	r0, r0
    ced4:	ldmia	r6, {r1, r2, r3, r6}
    ced6:	movs	r1, r0
    ced8:	push	{r4, lr}
    ceda:	cbz	r0, cee6 <error@@Base+0x28a>
    cedc:	mov	r4, r0
    cede:	blx	2674 <malloc@plt>
    cee2:	cbz	r0, ceee <error@@Base+0x292>
    cee4:	pop	{r4, pc}
    cee6:	ldr	r0, [pc, #16]	; (cef8 <error@@Base+0x29c>)
    cee8:	add	r0, pc
    ceea:	bl	c6e4 <el_source@plt+0x9da8>
    ceee:	ldr	r0, [pc, #12]	; (cefc <error@@Base+0x2a0>)
    cef0:	mov	r1, r4
    cef2:	add	r0, pc
    cef4:	bl	c6e4 <el_source@plt+0x9da8>
    cef8:	sxth	r0, r0
    cefa:	movs	r0, r0
    cefc:	sxth	r2, r1
    cefe:	movs	r0, r0
    cf00:	cmp	r0, #0
    cf02:	it	ne
    cf04:	cmpne	r1, #0
    cf06:	push	{r3, r4, r5, lr}
    cf08:	beq.n	cf24 <error@@Base+0x2c8>
    cf0a:	umull	r2, r3, r0, r1
    cf0e:	mov	r5, r0
    cf10:	mov	r4, r1
    cf12:	cbnz	r3, cf1c <error@@Base+0x2c0>
    cf14:	blx	233c <calloc@plt+0x4>
    cf18:	cbz	r0, cf2c <error@@Base+0x2d0>
    cf1a:	pop	{r3, r4, r5, pc}
    cf1c:	ldr	r0, [pc, #24]	; (cf38 <error@@Base+0x2dc>)
    cf1e:	add	r0, pc
    cf20:	bl	c6e4 <el_source@plt+0x9da8>
    cf24:	ldr	r0, [pc, #20]	; (cf3c <error@@Base+0x2e0>)
    cf26:	add	r0, pc
    cf28:	bl	c6e4 <el_source@plt+0x9da8>
    cf2c:	ldr	r0, [pc, #16]	; (cf40 <error@@Base+0x2e4>)
    cf2e:	mul.w	r1, r5, r4
    cf32:	add	r0, pc
    cf34:	bl	c6e4 <el_source@plt+0x9da8>
    cf38:	sxth	r2, r4
    cf3a:	movs	r0, r0
    cf3c:	sxth	r6, r0
    cf3e:	movs	r0, r0
    cf40:	sxth	r2, r6
    cf42:	movs	r0, r0
    cf44:	push	{r3, r4, r5, lr}
    cf46:	mov	r4, r1
    cf48:	mov	r5, r2
    cf4a:	blx	2320 <reallocarray@plt>
    cf4e:	cbz	r0, cf52 <error@@Base+0x2f6>
    cf50:	pop	{r3, r4, r5, pc}
    cf52:	ldr	r0, [pc, #12]	; (cf60 <error@@Base+0x304>)
    cf54:	mov	r2, r5
    cf56:	mov	r1, r4
    cf58:	add	r0, pc
    cf5a:	bl	c6e4 <el_source@plt+0x9da8>
    cf5e:	nop
    cf60:	sxth	r4, r7
    cf62:	movs	r0, r0
    cf64:	push	{r3, r4, r5, lr}
    cf66:	mov	r4, r2
    cf68:	mov	r5, r3
    cf6a:	bl	133c4 <setlogin@@Base+0x2108>
    cf6e:	cbz	r0, cf72 <error@@Base+0x316>
    cf70:	pop	{r3, r4, r5, pc}
    cf72:	ldr	r0, [pc, #12]	; (cf80 <error@@Base+0x324>)
    cf74:	mov	r2, r5
    cf76:	mov	r1, r4
    cf78:	add	r0, pc
    cf7a:	bl	c6e4 <el_source@plt+0x9da8>
    cf7e:	nop
    cf80:	sxtb	r0, r3
    cf82:	movs	r0, r0
    cf84:	push	{r4, lr}
    cf86:	sub	sp, #8
    cf88:	str	r0, [sp, #4]
    cf8a:	blx	24a0 <strlen@plt>
    cf8e:	adds	r2, r0, #1
    cf90:	str	r2, [sp, #0]
    cf92:	mov	r0, r2
    cf94:	bl	ced8 <error@@Base+0x27c>
    cf98:	ldrd	r2, r1, [sp]
    cf9c:	mov	r4, r0
    cf9e:	bl	13518 <strlcpy@@Base>
    cfa2:	mov	r0, r4
    cfa4:	add	sp, #8
    cfa6:	pop	{r4, pc}
    cfa8:	mov	r3, r2
    cfaa:	mov	r2, r1
    cfac:	push	{r4, lr}
    cfae:	movs	r1, #1
    cfb0:	mov	r4, r0
    cfb2:	blx	28f4 <__vasprintf_chk@plt>
    cfb6:	cmp	r0, #0
    cfb8:	blt.n	cfc0 <error@@Base+0x364>
    cfba:	ldr	r3, [r4, #0]
    cfbc:	cbz	r3, cfc0 <error@@Base+0x364>
    cfbe:	pop	{r4, pc}
    cfc0:	ldr	r0, [pc, #4]	; (cfc8 <error@@Base+0x36c>)
    cfc2:	add	r0, pc
    cfc4:	bl	c6e4 <el_source@plt+0x9da8>
    cfc8:	sxtb	r2, r1
    cfca:	movs	r0, r0
    cfcc:	push	{r1, r2, r3}
    cfce:	ldr	r1, [pc, #60]	; (d00c <error@@Base+0x3b0>)
    cfd0:	push	{lr}
    cfd2:	sub	sp, #8
    cfd4:	ldr	r3, [pc, #56]	; (d010 <error@@Base+0x3b4>)
    cfd6:	add	r2, sp, #12
    cfd8:	add	r1, pc
    cfda:	ldr	r3, [r1, r3]
    cfdc:	ldr.w	r1, [r2], #4
    cfe0:	ldr	r3, [r3, #0]
    cfe2:	str	r3, [sp, #4]
    cfe4:	mov.w	r3, #0
    cfe8:	str	r2, [sp, #0]
    cfea:	bl	cfa8 <error@@Base+0x34c>
    cfee:	ldr	r2, [pc, #36]	; (d014 <error@@Base+0x3b8>)
    cff0:	ldr	r3, [pc, #28]	; (d010 <error@@Base+0x3b4>)
    cff2:	add	r2, pc
    cff4:	ldr	r3, [r2, r3]
    cff6:	ldr	r2, [r3, #0]
    cff8:	ldr	r3, [sp, #4]
    cffa:	eors	r2, r3
    cffc:	bne.n	d008 <error@@Base+0x3ac>
    cffe:	add	sp, #8
    d000:	ldr.w	lr, [sp], #4
    d004:	add	sp, #12
    d006:	bx	lr
    d008:	blx	2698 <__stack_chk_fail@plt>
    d00c:	ldmia	r5, {r3, r5}
    d00e:	movs	r1, r0
    d010:	lsls	r0, r0, #11
    d012:	movs	r0, r0
    d014:	ldmia	r5!, {r1, r2, r3}
    d016:	movs	r1, r0
    d018:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d01c:	mov	r7, r1
    d01e:	ldr	r6, [pc, #208]	; (d0f0 <error@@Base+0x494>)
    d020:	sub	sp, #28
    d022:	ldr	r1, [pc, #208]	; (d0f4 <error@@Base+0x498>)
    d024:	mov	r8, r2
    d026:	add	r6, pc
    d028:	ldr	r4, [pc, #204]	; (d0f8 <error@@Base+0x49c>)
    d02a:	ldr	r5, [pc, #208]	; (d0fc <error@@Base+0x4a0>)
    d02c:	ldr	r1, [r6, r1]
    d02e:	add	r4, pc
    d030:	ldrd	r9, sl, [sp, #64]	; 0x40
    d034:	ldr	r1, [r1, #0]
    d036:	str	r1, [sp, #20]
    d038:	mov.w	r1, #0
    d03c:	mov	r1, r4
    d03e:	str	r7, [sp, #12]
    d040:	ldr	r4, [r4, r5]
    d042:	cmp	r0, r4
    d044:	ite	eq
    d046:	moveq	r2, #1
    d048:	movne	r2, #4
    d04a:	strh.w	r2, [sp, #16]
    d04e:	cbz	r3, d0b4 <error@@Base+0x458>
    d050:	add.w	fp, sp, #12
    d054:	mov	r6, r0
    d056:	mov	r5, r3
    d058:	movs	r4, #0
    d05a:	add.w	r1, r8, r4
    d05e:	subs	r2, r5, r4
    d060:	mov	r0, r7
    d062:	blx	r6
    d064:	adds	r3, r0, #1
    d066:	mov	r1, r0
    d068:	beq.n	d0a2 <error@@Base+0x446>
    d06a:	cbz	r0, d098 <error@@Base+0x43c>
    d06c:	add	r4, r0
    d06e:	cmp.w	r9, #0
    d072:	beq.n	d07c <error@@Base+0x420>
    d074:	mov	r0, sl
    d076:	blx	r9
    d078:	adds	r0, #1
    d07a:	beq.n	d0d4 <error@@Base+0x478>
    d07c:	cmp	r5, r4
    d07e:	bhi.n	d05a <error@@Base+0x3fe>
    d080:	ldr	r2, [pc, #124]	; (d100 <error@@Base+0x4a4>)
    d082:	ldr	r3, [pc, #112]	; (d0f4 <error@@Base+0x498>)
    d084:	add	r2, pc
    d086:	ldr	r3, [r2, r3]
    d088:	ldr	r2, [r3, #0]
    d08a:	ldr	r3, [sp, #20]
    d08c:	eors	r2, r3
    d08e:	bne.n	d0ea <error@@Base+0x48e>
    d090:	mov	r0, r4
    d092:	add	sp, #28
    d094:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d098:	blx	2900 <__errno_location@plt>
    d09c:	movs	r3, #32
    d09e:	str	r3, [r0, #0]
    d0a0:	b.n	d080 <error@@Base+0x424>
    d0a2:	str	r0, [sp, #0]
    d0a4:	blx	2900 <__errno_location@plt>
    d0a8:	ldr	r1, [sp, #0]
    d0aa:	ldr	r2, [r0, #0]
    d0ac:	cmp	r2, #4
    d0ae:	beq.n	d0b8 <error@@Base+0x45c>
    d0b0:	cmp	r2, #11
    d0b2:	beq.n	d0de <error@@Base+0x482>
    d0b4:	movs	r4, #0
    d0b6:	b.n	d080 <error@@Base+0x424>
    d0b8:	strd	r0, r2, [sp]
    d0bc:	cmp.w	r9, #0
    d0c0:	beq.n	d07c <error@@Base+0x420>
    d0c2:	movs	r1, #0
    d0c4:	mov	r0, sl
    d0c6:	blx	r9
    d0c8:	ldrd	r3, r2, [sp]
    d0cc:	adds	r0, #1
    d0ce:	bne.n	d07c <error@@Base+0x420>
    d0d0:	str	r2, [r3, #0]
    d0d2:	b.n	d080 <error@@Base+0x424>
    d0d4:	blx	2900 <__errno_location@plt>
    d0d8:	movs	r3, #4
    d0da:	str	r3, [r0, #0]
    d0dc:	b.n	d080 <error@@Base+0x424>
    d0de:	mov	r2, r1
    d0e0:	mov	r0, fp
    d0e2:	movs	r1, #1
    d0e4:	blx	26c8 <poll@plt>
    d0e8:	b.n	d07c <error@@Base+0x420>
    d0ea:	blx	2698 <__stack_chk_fail@plt>
    d0ee:	nop
    d0f0:	ldmia	r4, {r1, r3, r4, r6, r7}
    d0f2:	movs	r1, r0
    d0f4:	lsls	r0, r0, #11
    d0f6:	movs	r0, r0
    d0f8:	ldmia	r4, {r1, r4, r6, r7}
    d0fa:	movs	r1, r0
    d0fc:	lsls	r4, r3, #10
    d0fe:	movs	r0, r0
    d100:	ldmia	r4, {r2, r3, r4, r5, r6}
    d102:	movs	r1, r0
    d104:	push	{r4, lr}
    d106:	sub	sp, #8
    d108:	movs	r4, #0
    d10a:	strd	r4, r4, [sp]
    d10e:	bl	d018 <error@@Base+0x3bc>
    d112:	add	sp, #8
    d114:	pop	{r4, pc}
    d116:	nop
    d118:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d11c:	mov	r7, r0
    d11e:	ldr	r0, [pc, #392]	; (d2a8 <error@@Base+0x64c>)
    d120:	mov	r8, r1
    d122:	ldr	r1, [pc, #392]	; (d2ac <error@@Base+0x650>)
    d124:	sub.w	sp, sp, #8192	; 0x2000
    d128:	add	r0, pc
    d12a:	sub	sp, #36	; 0x24
    d12c:	mov	r4, r3
    d12e:	add.w	r3, sp, #8192	; 0x2000
    d132:	ldr	r1, [r0, r1]
    d134:	adds	r3, #28
    d136:	ldr	r5, [pc, #376]	; (d2b0 <error@@Base+0x654>)
    d138:	cmp.w	r4, #1024	; 0x400
    d13c:	ldr	r1, [r1, #0]
    d13e:	str	r1, [r3, #0]
    d140:	mov.w	r1, #0
    d144:	add.w	r3, sp, #8256	; 0x2040
    d148:	add.w	r3, r3, #8
    d14c:	add	r5, pc
    d14e:	ldr	r3, [r3, #0]
    d150:	str	r3, [sp, #4]
    d152:	add.w	r3, sp, #8256	; 0x2040
    d156:	add.w	r3, r3, #12
    d15a:	ldr	r3, [r3, #0]
    d15c:	str	r3, [sp, #8]
    d15e:	bls.n	d190 <error@@Base+0x534>
    d160:	blx	2900 <__errno_location@plt>
    d164:	mov.w	r9, #0
    d168:	movs	r3, #22
    d16a:	str	r3, [r0, #0]
    d16c:	ldr	r1, [pc, #324]	; (d2b4 <error@@Base+0x658>)
    d16e:	add.w	r3, sp, #8192	; 0x2000
    d172:	ldr	r2, [pc, #312]	; (d2ac <error@@Base+0x650>)
    d174:	adds	r3, #28
    d176:	add	r1, pc
    d178:	ldr	r2, [r1, r2]
    d17a:	ldr	r1, [r2, #0]
    d17c:	ldr	r2, [r3, #0]
    d17e:	eors	r1, r2
    d180:	bne.w	d29a <error@@Base+0x63e>
    d184:	mov	r0, r9
    d186:	add.w	sp, sp, #8192	; 0x2000
    d18a:	add	sp, #36	; 0x24
    d18c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d190:	add	r6, sp, #32
    d192:	mov	r1, r2
    d194:	sub.w	sl, r6, #4
    d198:	mov.w	r3, #8192	; 0x2000
    d19c:	lsls	r2, r4, #3
    d19e:	mov.w	r9, #0
    d1a2:	mov	r0, sl
    d1a4:	blx	2440 <__memcpy_chk@plt>
    d1a8:	ldr	r3, [pc, #268]	; (d2b8 <error@@Base+0x65c>)
    d1aa:	str.w	r8, [r6, #-12]!
    d1ae:	ldr	r3, [r5, r3]
    d1b0:	cmp	r7, r3
    d1b2:	ite	eq
    d1b4:	moveq	r3, #1
    d1b6:	movne	r3, #4
    d1b8:	strh	r3, [r6, #4]
    d1ba:	cmp	r4, #0
    d1bc:	beq.n	d22c <error@@Base+0x5d0>
    d1be:	ldr.w	r2, [sl, #4]
    d1c2:	cmp	r2, #0
    d1c4:	beq.n	d16c <error@@Base+0x510>
    d1c6:	mov	r2, r4
    d1c8:	mov	r1, sl
    d1ca:	mov	r0, r8
    d1cc:	blx	r7
    d1ce:	adds	r3, r0, #1
    d1d0:	mov	r5, r0
    d1d2:	beq.n	d21c <error@@Base+0x5c0>
    d1d4:	cbz	r0, d232 <error@@Base+0x5d6>
    d1d6:	add	r9, r0
    d1d8:	mov	fp, r0
    d1da:	ldr.w	r3, [sl, #4]
    d1de:	cmp	r3, fp
    d1e0:	bhi.n	d256 <error@@Base+0x5fa>
    d1e2:	mov	r0, r4
    d1e4:	mov.w	r1, #4294967295	; 0xffffffff
    d1e8:	sub.w	fp, fp, r3
    d1ec:	bl	14d50 <strvisx@@Base+0xfdc>
    d1f0:	add.w	sl, sl, #8
    d1f4:	mov	r4, r0
    d1f6:	cmp	r0, #0
    d1f8:	bne.n	d1da <error@@Base+0x57e>
    d1fa:	cmp.w	fp, #0
    d1fe:	bne.n	d28e <error@@Base+0x632>
    d200:	ldr	r3, [sp, #4]
    d202:	cmp	r3, #0
    d204:	beq.n	d16c <error@@Base+0x510>
    d206:	ldrd	r3, r0, [sp, #4]
    d20a:	mov	r1, r5
    d20c:	blx	r3
    d20e:	adds	r0, #1
    d210:	bne.n	d16c <error@@Base+0x510>
    d212:	blx	2900 <__errno_location@plt>
    d216:	movs	r3, #4
    d218:	str	r3, [r0, #0]
    d21a:	b.n	d16c <error@@Base+0x510>
    d21c:	blx	2900 <__errno_location@plt>
    d220:	ldr	r3, [r0, #0]
    d222:	mov	fp, r0
    d224:	cmp	r3, #4
    d226:	beq.n	d23c <error@@Base+0x5e0>
    d228:	cmp	r3, #11
    d22a:	beq.n	d282 <error@@Base+0x626>
    d22c:	mov.w	r9, #0
    d230:	b.n	d16c <error@@Base+0x510>
    d232:	blx	2900 <__errno_location@plt>
    d236:	movs	r3, #32
    d238:	str	r3, [r0, #0]
    d23a:	b.n	d16c <error@@Base+0x510>
    d23c:	str	r3, [sp, #12]
    d23e:	ldr	r3, [sp, #4]
    d240:	cmp	r3, #0
    d242:	beq.n	d1be <error@@Base+0x562>
    d244:	ldr	r0, [sp, #8]
    d246:	movs	r1, #0
    d248:	blx	r3
    d24a:	ldr	r3, [sp, #12]
    d24c:	adds	r0, #1
    d24e:	bne.n	d1be <error@@Base+0x562>
    d250:	str.w	r3, [fp]
    d254:	b.n	d16c <error@@Base+0x510>
    d256:	cmp.w	fp, #0
    d25a:	beq.n	d29e <error@@Base+0x642>
    d25c:	sub.w	r3, r3, fp
    d260:	str.w	r3, [sl, #4]
    d264:	ldr	r3, [sp, #4]
    d266:	ldr.w	r1, [sl]
    d26a:	add	r1, fp
    d26c:	str.w	r1, [sl]
    d270:	cmp	r3, #0
    d272:	beq.n	d1be <error@@Base+0x562>
    d274:	ldrd	r3, r0, [sp, #4]
    d278:	mov	r1, r5
    d27a:	blx	r3
    d27c:	adds	r0, #1
    d27e:	bne.n	d1be <error@@Base+0x562>
    d280:	b.n	d212 <error@@Base+0x5b6>
    d282:	mov	r2, r5
    d284:	movs	r1, #1
    d286:	mov	r0, r6
    d288:	blx	26c8 <poll@plt>
    d28c:	b.n	d1be <error@@Base+0x562>
    d28e:	blx	2900 <__errno_location@plt>
    d292:	mov	r9, r4
    d294:	movs	r3, #14
    d296:	str	r3, [r0, #0]
    d298:	b.n	d16c <error@@Base+0x510>
    d29a:	blx	2698 <__stack_chk_fail@plt>
    d29e:	ldr	r3, [sp, #4]
    d2a0:	cmp	r3, #0
    d2a2:	beq.n	d1be <error@@Base+0x562>
    d2a4:	b.n	d274 <error@@Base+0x618>
    d2a6:	nop
    d2a8:	ldmia	r3, {r3, r4, r6, r7}
    d2aa:	movs	r1, r0
    d2ac:	lsls	r0, r0, #11
    d2ae:	movs	r0, r0
    d2b0:	ldmia	r3!, {r2, r4, r5, r7}
    d2b2:	movs	r1, r0
    d2b4:	ldmia	r3, {r1, r3, r7}
    d2b6:	movs	r1, r0
    d2b8:	lsls	r4, r5, #11
    d2ba:	movs	r0, r0
    d2bc:	push	{r4, lr}
    d2be:	sub	sp, #8
    d2c0:	movs	r4, #0
    d2c2:	strd	r4, r4, [sp]
    d2c6:	bl	d118 <error@@Base+0x4bc>
    d2ca:	add	sp, #8
    d2cc:	pop	{r4, pc}
    d2ce:	nop
    d2d0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d2d4:	sub	sp, #8
    d2d6:	ldr	r7, [r0, #0]
    d2d8:	cmp	r7, #0
    d2da:	beq.n	d384 <error@@Base+0x728>
    d2dc:	mov	r4, r0
    d2de:	mov	r6, r1
    d2e0:	cbnz	r1, d33c <error@@Base+0x6e0>
    d2e2:	ldr	r1, [pc, #184]	; (d39c <error@@Base+0x740>)
    d2e4:	add	r1, pc
    d2e6:	mov	r0, r7
    d2e8:	blx	28b4 <strpbrk@plt>
    d2ec:	mov	r5, r0
    d2ee:	str	r0, [r4, #0]
    d2f0:	cbz	r0, d334 <error@@Base+0x6d8>
    d2f2:	ldrb.w	r8, [r0]
    d2f6:	cmp.w	r8, #34	; 0x22
    d2fa:	beq.n	d35e <error@@Base+0x702>
    d2fc:	cbz	r6, d342 <error@@Base+0x6e6>
    d2fe:	movs	r3, #0
    d300:	ldr	r1, [pc, #156]	; (d3a0 <error@@Base+0x744>)
    d302:	strb	r3, [r0, #0]
    d304:	ldr	r5, [r4, #0]
    d306:	add	r1, pc
    d308:	str	r1, [sp, #4]
    d30a:	adds	r0, r5, #1
    d30c:	blx	27b0 <strspn@plt>
    d310:	cmp.w	r8, #61	; 0x3d
    d314:	ldr	r1, [sp, #4]
    d316:	add.w	r0, r0, #1
    d31a:	add.w	r6, r5, r0
    d31e:	str	r6, [r4, #0]
    d320:	ldrb	r3, [r5, r0]
    d322:	sub.w	r3, r3, #61	; 0x3d
    d326:	clz	r3, r3
    d32a:	mov.w	r3, r3, lsr #5
    d32e:	it	eq
    d330:	moveq	r3, #0
    d332:	cbnz	r3, d38e <error@@Base+0x732>
    d334:	mov	r0, r7
    d336:	add	sp, #8
    d338:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d33c:	ldr	r1, [pc, #100]	; (d3a4 <error@@Base+0x748>)
    d33e:	add	r1, pc
    d340:	b.n	d2e6 <error@@Base+0x68a>
    d342:	ldr	r1, [pc, #100]	; (d3a8 <error@@Base+0x74c>)
    d344:	strb	r6, [r0, #0]
    d346:	ldr	r5, [r4, #0]
    d348:	add	r1, pc
    d34a:	adds	r0, r5, #1
    d34c:	blx	27b0 <strspn@plt>
    d350:	adds	r0, #1
    d352:	add	r5, r0
    d354:	mov	r0, r7
    d356:	str	r5, [r4, #0]
    d358:	add	sp, #8
    d35a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d35e:	blx	24a0 <strlen@plt>
    d362:	adds	r1, r5, #1
    d364:	mov	r2, r0
    d366:	mov	r0, r5
    d368:	blx	271c <memmove@plt>
    d36c:	ldr	r0, [r4, #0]
    d36e:	mov	r1, r8
    d370:	blx	22f0 <strchr@plt>
    d374:	str	r0, [r4, #0]
    d376:	cbz	r0, d384 <error@@Base+0x728>
    d378:	ldr	r1, [pc, #48]	; (d3ac <error@@Base+0x750>)
    d37a:	movs	r3, #0
    d37c:	strb	r3, [r0, #0]
    d37e:	add	r1, pc
    d380:	ldr	r5, [r4, #0]
    d382:	b.n	d34a <error@@Base+0x6ee>
    d384:	movs	r7, #0
    d386:	mov	r0, r7
    d388:	add	sp, #8
    d38a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d38e:	adds	r0, r6, #1
    d390:	blx	27b0 <strspn@plt>
    d394:	adds	r0, #1
    d396:	add	r6, r0
    d398:	str	r6, [r4, #0]
    d39a:	b.n	d334 <error@@Base+0x6d8>
    d39c:	add	r7, sp, #352	; 0x160
    d39e:	movs	r0, r0
    d3a0:	strh	r6, [r7, #6]
    d3a2:	movs	r0, r0
    d3a4:	add	r6, sp, #984	; 0x3d8
    d3a6:	movs	r0, r0
    d3a8:	strh	r4, [r7, #4]
    d3aa:	movs	r0, r0
    d3ac:	strh	r6, [r0, #4]
    d3ae:	movs	r0, r0
    d3b0:	ldr	r2, [pc, #268]	; (d4c0 <error@@Base+0x864>)
    d3b2:	ldr	r3, [pc, #272]	; (d4c4 <error@@Base+0x868>)
    d3b4:	add	r2, pc
    d3b6:	push	{r4, r5, r6, r7, lr}
    d3b8:	sub	sp, #12
    d3ba:	ldr	r3, [r2, r3]
    d3bc:	mov	r4, r0
    d3be:	ldr	r3, [r3, #0]
    d3c0:	str	r3, [sp, #4]
    d3c2:	mov.w	r3, #0
    d3c6:	blx	24a0 <strlen@plt>
    d3ca:	adds	r0, #1
    d3cc:	bl	ced8 <error@@Base+0x27c>
    d3d0:	ldrb	r3, [r4, #0]
    d3d2:	mov	r7, r0
    d3d4:	cmp	r3, #0
    d3d6:	beq.n	d4b8 <error@@Base+0x85c>
    d3d8:	adds	r5, r0, #1
    d3da:	movs	r6, #32
    d3dc:	b.n	d3ee <error@@Base+0x792>
    d3de:	mov	r2, r4
    d3e0:	mov	r1, r5
    d3e2:	strb.w	r6, [r5, #-1]
    d3e6:	ldrb	r3, [r2, #1]
    d3e8:	adds	r5, #1
    d3ea:	adds	r4, r2, #1
    d3ec:	cbz	r3, d408 <error@@Base+0x7ac>
    d3ee:	cmp	r3, #37	; 0x25
    d3f0:	beq.n	d422 <error@@Base+0x7c6>
    d3f2:	cmp	r3, #43	; 0x2b
    d3f4:	beq.n	d3de <error@@Base+0x782>
    d3f6:	mov	r2, r4
    d3f8:	strb.w	r3, [r5, #-1]
    d3fc:	ldrb	r3, [r2, #1]
    d3fe:	mov	r1, r5
    d400:	adds	r4, r2, #1
    d402:	adds	r5, #1
    d404:	cmp	r3, #0
    d406:	bne.n	d3ee <error@@Base+0x792>
    d408:	movs	r3, #0
    d40a:	strb	r3, [r1, #0]
    d40c:	ldr	r2, [pc, #184]	; (d4c8 <error@@Base+0x86c>)
    d40e:	ldr	r3, [pc, #180]	; (d4c4 <error@@Base+0x868>)
    d410:	add	r2, pc
    d412:	ldr	r3, [r2, r3]
    d414:	ldr	r2, [r3, #0]
    d416:	ldr	r3, [sp, #4]
    d418:	eors	r2, r3
    d41a:	bne.n	d4bc <error@@Base+0x860>
    d41c:	mov	r0, r7
    d41e:	add	sp, #12
    d420:	pop	{r4, r5, r6, r7, pc}
    d422:	blx	2640 <__ctype_b_loc@plt>
    d426:	ldrb	r3, [r4, #1]
    d428:	ldr	r2, [r0, #0]
    d42a:	ldrh.w	r1, [r2, r3, lsl #1]
    d42e:	lsls	r1, r1, #19
    d430:	bpl.n	d4ae <error@@Base+0x852>
    d432:	ldrb	r1, [r4, #2]
    d434:	ldrh.w	r2, [r2, r1, lsl #1]
    d438:	lsls	r2, r2, #19
    d43a:	bpl.n	d4ae <error@@Base+0x852>
    d43c:	sub.w	r2, r3, #48	; 0x30
    d440:	uxtb	r2, r2
    d442:	cmp	r2, #9
    d444:	bls.n	d4a0 <error@@Base+0x844>
    d446:	sub.w	r2, r3, #97	; 0x61
    d44a:	cmp	r2, #5
    d44c:	bls.n	d4a6 <error@@Base+0x84a>
    d44e:	sub.w	r2, r3, #65	; 0x41
    d452:	cmp	r2, #5
    d454:	bhi.n	d4ae <error@@Base+0x852>
    d456:	subs	r3, #55	; 0x37
    d458:	strb.w	r3, [sp]
    d45c:	sub.w	r3, r1, #48	; 0x30
    d460:	adds	r2, r4, #2
    d462:	uxtb	r3, r3
    d464:	cmp	r3, #9
    d466:	it	ls
    d468:	strbls.w	r3, [sp, #1]
    d46c:	bls.n	d48c <error@@Base+0x830>
    d46e:	sub.w	r3, r1, #97	; 0x61
    d472:	cmp	r3, #5
    d474:	itt	ls
    d476:	subls	r1, #87	; 0x57
    d478:	strbls.w	r1, [sp, #1]
    d47c:	bls.n	d48c <error@@Base+0x830>
    d47e:	sub.w	r3, r1, #65	; 0x41
    d482:	cmp	r3, #5
    d484:	bhi.n	d4ae <error@@Base+0x852>
    d486:	subs	r1, #55	; 0x37
    d488:	strb.w	r1, [sp, #1]
    d48c:	ldrb.w	r0, [sp]
    d490:	mov	r1, r5
    d492:	ldrb.w	r3, [sp, #1]
    d496:	orr.w	r3, r3, r0, lsl #4
    d49a:	strb.w	r3, [r5, #-1]
    d49e:	b.n	d3e6 <error@@Base+0x78a>
    d4a0:	strb.w	r2, [sp]
    d4a4:	b.n	d45c <error@@Base+0x800>
    d4a6:	subs	r3, #87	; 0x57
    d4a8:	strb.w	r3, [sp]
    d4ac:	b.n	d45c <error@@Base+0x800>
    d4ae:	mov	r0, r7
    d4b0:	movs	r7, #0
    d4b2:	blx	23f8 <free@plt+0x4>
    d4b6:	b.n	d40c <error@@Base+0x7b0>
    d4b8:	mov	r1, r0
    d4ba:	b.n	d408 <error@@Base+0x7ac>
    d4bc:	blx	2698 <__stack_chk_fail@plt>
    d4c0:	ldmia	r1!, {r2, r3, r6}
    d4c2:	movs	r1, r0
    d4c4:	lsls	r0, r0, #11
    d4c6:	movs	r0, r0
    d4c8:	ldmia	r0!, {r4, r5, r6, r7}
    d4ca:	movs	r1, r0
    d4cc:	ldrb	r3, [r0, #0]
    d4ce:	cbz	r3, d4e8 <error@@Base+0x88c>
    d4d0:	mov	r2, r0
    d4d2:	b.n	d4da <error@@Base+0x87e>
    d4d4:	ldrb.w	r3, [r2, #1]!
    d4d8:	cbz	r3, d4e8 <error@@Base+0x88c>
    d4da:	cmp	r3, #13
    d4dc:	it	ne
    d4de:	cmpne	r3, #10
    d4e0:	bne.n	d4d4 <error@@Base+0x878>
    d4e2:	movs	r3, #0
    d4e4:	strb	r3, [r2, #0]
    d4e6:	bx	lr
    d4e8:	bx	lr
    d4ea:	nop
    d4ec:	push	{r4, r5, r6, lr}
    d4ee:	movs	r1, #3
    d4f0:	mov	r5, r0
    d4f2:	blx	25a0 <fcntl64@plt>
    d4f6:	mov	r4, r0
    d4f8:	adds	r0, #1
    d4fa:	beq.n	d530 <error@@Base+0x8d4>
    d4fc:	ands.w	r6, r4, #2048	; 0x800
    d500:	mov	r1, r5
    d502:	bne.n	d522 <error@@Base+0x8c6>
    d504:	ldr	r0, [pc, #92]	; (d564 <error@@Base+0x908>)
    d506:	add	r0, pc
    d508:	bl	cde4 <error@@Base+0x188>
    d50c:	orr.w	r2, r4, #2048	; 0x800
    d510:	movs	r1, #4
    d512:	mov	r0, r5
    d514:	blx	25a0 <fcntl64@plt>
    d518:	adds	r3, r0, #1
    d51a:	mov	r4, r0
    d51c:	beq.n	d54a <error@@Base+0x8ee>
    d51e:	mov	r0, r6
    d520:	pop	{r4, r5, r6, pc}
    d522:	ldr	r0, [pc, #68]	; (d568 <error@@Base+0x90c>)
    d524:	movs	r6, #0
    d526:	add	r0, pc
    d528:	bl	ce38 <error@@Base+0x1dc>
    d52c:	mov	r0, r6
    d52e:	pop	{r4, r5, r6, pc}
    d530:	blx	2900 <__errno_location@plt>
    d534:	mov	r6, r4
    d536:	ldr	r0, [r0, #0]
    d538:	blx	21f4 <strerror@plt+0x4>
    d53c:	mov	r1, r5
    d53e:	mov	r2, r0
    d540:	ldr	r0, [pc, #40]	; (d56c <error@@Base+0x910>)
    d542:	add	r0, pc
    d544:	bl	cc5c <error@@Base>
    d548:	b.n	d51e <error@@Base+0x8c2>
    d54a:	blx	2900 <__errno_location@plt>
    d54e:	mov	r6, r4
    d550:	ldr	r0, [r0, #0]
    d552:	blx	21f4 <strerror@plt+0x4>
    d556:	mov	r1, r5
    d558:	mov	r2, r0
    d55a:	ldr	r0, [pc, #20]	; (d570 <error@@Base+0x914>)
    d55c:	add	r0, pc
    d55e:	bl	cd90 <error@@Base+0x134>
    d562:	b.n	d51e <error@@Base+0x8c2>
    d564:	add	r5, sp, #424	; 0x1a8
    d566:	movs	r0, r0
    d568:	add	r5, sp, #216	; 0xd8
    d56a:	movs	r0, r0
    d56c:	add	r5, sp, #8
    d56e:	movs	r0, r0
    d570:	add	r5, sp, #192	; 0xc0
    d572:	movs	r0, r0
    d574:	push	{r4, r5, r6, lr}
    d576:	movs	r1, #3
    d578:	mov	r6, r0
    d57a:	blx	25a0 <fcntl64@plt>
    d57e:	mov	r4, r0
    d580:	adds	r0, #1
    d582:	beq.n	d5ba <error@@Base+0x95e>
    d584:	ands.w	r5, r4, #2048	; 0x800
    d588:	mov	r1, r6
    d58a:	beq.n	d5ae <error@@Base+0x952>
    d58c:	ldr	r0, [pc, #92]	; (d5ec <error@@Base+0x990>)
    d58e:	add	r0, pc
    d590:	bl	cd90 <error@@Base+0x134>
    d594:	bic.w	r2, r4, #2048	; 0x800
    d598:	movs	r1, #4
    d59a:	mov	r0, r6
    d59c:	blx	25a0 <fcntl64@plt>
    d5a0:	adds	r3, r0, #1
    d5a2:	mov	r5, r0
    d5a4:	it	ne
    d5a6:	movne	r5, #0
    d5a8:	beq.n	d5d4 <error@@Base+0x978>
    d5aa:	mov	r0, r5
    d5ac:	pop	{r4, r5, r6, pc}
    d5ae:	ldr	r0, [pc, #64]	; (d5f0 <error@@Base+0x994>)
    d5b0:	add	r0, pc
    d5b2:	bl	ce38 <error@@Base+0x1dc>
    d5b6:	mov	r0, r5
    d5b8:	pop	{r4, r5, r6, pc}
    d5ba:	blx	2900 <__errno_location@plt>
    d5be:	mov	r5, r4
    d5c0:	ldr	r0, [r0, #0]
    d5c2:	blx	21f4 <strerror@plt+0x4>
    d5c6:	mov	r1, r6
    d5c8:	mov	r2, r0
    d5ca:	ldr	r0, [pc, #40]	; (d5f4 <error@@Base+0x998>)
    d5cc:	add	r0, pc
    d5ce:	bl	cc5c <error@@Base>
    d5d2:	b.n	d5aa <error@@Base+0x94e>
    d5d4:	blx	2900 <__errno_location@plt>
    d5d8:	ldr	r0, [r0, #0]
    d5da:	blx	21f4 <strerror@plt+0x4>
    d5de:	mov	r1, r6
    d5e0:	mov	r2, r0
    d5e2:	ldr	r0, [pc, #20]	; (d5f8 <error@@Base+0x99c>)
    d5e4:	add	r0, pc
    d5e6:	bl	cd90 <error@@Base+0x134>
    d5ea:	b.n	d5aa <error@@Base+0x94e>
    d5ec:	add	r5, sp, #232	; 0xe8
    d5ee:	movs	r0, r0
    d5f0:	add	r5, sp, #0
    d5f2:	movs	r0, r0
    d5f4:	add	r4, sp, #480	; 0x1e0
    d5f6:	movs	r0, r0
    d5f8:	add	r5, sp, #0
    d5fa:	movs	r0, r0
    d5fc:	push	{r4, lr}
    d5fe:	mov	r4, r0
    d600:	adds	r0, #11
    d602:	bne.n	d60c <error@@Base+0x9b0>
    d604:	blx	2900 <__errno_location@plt>
    d608:	ldr	r0, [r0, #0]
    d60a:	cbnz	r0, d616 <error@@Base+0x9ba>
    d60c:	mov	r0, r4
    d60e:	ldmia.w	sp!, {r4, lr}
    d612:	b.w	2360 <gai_strerror@plt>
    d616:	ldmia.w	sp!, {r4, lr}
    d61a:	b.w	21f0 <strerror@plt>
    d61e:	nop
    d620:	push	{r4, r5, r6, lr}
    d622:	sub	sp, #32
    d624:	ldr	r5, [pc, #160]	; (d6c8 <error@@Base+0xa6c>)
    d626:	add	r3, sp, #20
    d628:	ldr	r4, [pc, #160]	; (d6cc <error@@Base+0xa70>)
    d62a:	add	r1, sp, #24
    d62c:	add	r5, pc
    d62e:	str	r3, [sp, #12]
    d630:	str	r1, [sp, #0]
    d632:	movs	r2, #1
    d634:	ldr	r4, [r5, r4]
    d636:	movs	r1, #6
    d638:	movs	r5, #4
    d63a:	ldr	r4, [r4, #0]
    d63c:	str	r4, [sp, #28]
    d63e:	mov.w	r4, #0
    d642:	mov	r4, r0
    d644:	str	r5, [sp, #24]
    d646:	blx	2890 <getsockopt@plt>
    d64a:	ldr	r3, [sp, #12]
    d64c:	adds	r0, #1
    d64e:	beq.n	d6ae <error@@Base+0xa52>
    d650:	ldr	r2, [sp, #20]
    d652:	cmp	r2, #1
    d654:	beq.n	d68c <error@@Base+0xa30>
    d656:	ldr	r0, [pc, #120]	; (d6d0 <error@@Base+0xa74>)
    d658:	movs	r6, #1
    d65a:	mov	r1, r4
    d65c:	str	r3, [sp, #12]
    d65e:	add	r0, pc
    d660:	str	r6, [sp, #20]
    d662:	bl	cde4 <error@@Base+0x188>
    d666:	ldr	r3, [sp, #12]
    d668:	mov	r2, r6
    d66a:	mov	r0, r4
    d66c:	movs	r1, #6
    d66e:	str	r5, [sp, #0]
    d670:	blx	289c <setsockopt@plt>
    d674:	adds	r0, #1
    d676:	beq.n	d698 <error@@Base+0xa3c>
    d678:	ldr	r2, [pc, #88]	; (d6d4 <error@@Base+0xa78>)
    d67a:	ldr	r3, [pc, #80]	; (d6cc <error@@Base+0xa70>)
    d67c:	add	r2, pc
    d67e:	ldr	r3, [r2, r3]
    d680:	ldr	r2, [r3, #0]
    d682:	ldr	r3, [sp, #28]
    d684:	eors	r2, r3
    d686:	bne.n	d6c4 <error@@Base+0xa68>
    d688:	add	sp, #32
    d68a:	pop	{r4, r5, r6, pc}
    d68c:	ldr	r0, [pc, #72]	; (d6d8 <error@@Base+0xa7c>)
    d68e:	mov	r1, r4
    d690:	add	r0, pc
    d692:	bl	cde4 <error@@Base+0x188>
    d696:	b.n	d678 <error@@Base+0xa1c>
    d698:	blx	2900 <__errno_location@plt>
    d69c:	ldr	r0, [r0, #0]
    d69e:	blx	21f4 <strerror@plt+0x4>
    d6a2:	mov	r1, r0
    d6a4:	ldr	r0, [pc, #52]	; (d6dc <error@@Base+0xa80>)
    d6a6:	add	r0, pc
    d6a8:	bl	cc5c <error@@Base>
    d6ac:	b.n	d678 <error@@Base+0xa1c>
    d6ae:	blx	2900 <__errno_location@plt>
    d6b2:	ldr	r0, [r0, #0]
    d6b4:	blx	21f4 <strerror@plt+0x4>
    d6b8:	mov	r1, r0
    d6ba:	ldr	r0, [pc, #36]	; (d6e0 <error@@Base+0xa84>)
    d6bc:	add	r0, pc
    d6be:	bl	cd90 <error@@Base+0x134>
    d6c2:	b.n	d678 <error@@Base+0xa1c>
    d6c4:	blx	2698 <__stack_chk_fail@plt>
    d6c8:	stmia	r6!, {r2, r4, r6, r7}
    d6ca:	movs	r1, r0
    d6cc:	lsls	r0, r0, #11
    d6ce:	movs	r0, r0
    d6d0:	add	r4, sp, #904	; 0x388
    d6d2:	movs	r0, r0
    d6d4:	stmia	r6!, {r2, r7}
    d6d6:	movs	r1, r0
    d6d8:	add	r4, sp, #608	; 0x260
    d6da:	movs	r0, r0
    d6dc:	add	r4, sp, #728	; 0x2d8
    d6de:	movs	r0, r0
    d6e0:	add	r4, sp, #304	; 0x130
    d6e2:	movs	r0, r0
    d6e4:	push	{r4, r5, lr}
    d6e6:	sub	sp, #20
    d6e8:	ldr	r5, [pc, #92]	; (d748 <error@@Base+0xaec>)
    d6ea:	movs	r3, #4
    d6ec:	ldr	r4, [pc, #92]	; (d74c <error@@Base+0xaf0>)
    d6ee:	movs	r1, #1
    d6f0:	add	r5, pc
    d6f2:	str	r3, [sp, #0]
    d6f4:	movs	r2, #2
    d6f6:	add	r3, sp, #8
    d6f8:	ldr	r4, [r5, r4]
    d6fa:	mov	r5, r0
    d6fc:	ldr	r4, [r4, #0]
    d6fe:	str	r4, [sp, #12]
    d700:	mov.w	r4, #0
    d704:	str	r1, [sp, #8]
    d706:	blx	289c <setsockopt@plt>
    d70a:	adds	r3, r0, #1
    d70c:	it	ne
    d70e:	movne	r4, #0
    d710:	beq.n	d728 <error@@Base+0xacc>
    d712:	ldr	r2, [pc, #60]	; (d750 <error@@Base+0xaf4>)
    d714:	ldr	r3, [pc, #52]	; (d74c <error@@Base+0xaf0>)
    d716:	add	r2, pc
    d718:	ldr	r3, [r2, r3]
    d71a:	ldr	r2, [r3, #0]
    d71c:	ldr	r3, [sp, #12]
    d71e:	eors	r2, r3
    d720:	bne.n	d742 <error@@Base+0xae6>
    d722:	mov	r0, r4
    d724:	add	sp, #20
    d726:	pop	{r4, r5, pc}
    d728:	mov	r4, r0
    d72a:	blx	2900 <__errno_location@plt>
    d72e:	ldr	r0, [r0, #0]
    d730:	blx	21f4 <strerror@plt+0x4>
    d734:	mov	r1, r5
    d736:	mov	r2, r0
    d738:	ldr	r0, [pc, #24]	; (d754 <error@@Base+0xaf8>)
    d73a:	add	r0, pc
    d73c:	bl	cc5c <error@@Base>
    d740:	b.n	d712 <error@@Base+0xab6>
    d742:	blx	2698 <__stack_chk_fail@plt>
    d746:	nop
    d748:	stmia	r6!, {r4}
    d74a:	movs	r1, r0
    d74c:	lsls	r0, r0, #11
    d74e:	movs	r0, r0
    d750:	stmia	r5!, {r1, r3, r5, r6, r7}
    d752:	movs	r1, r0
    d754:	add	r4, sp, #264	; 0x108
    d756:	movs	r0, r0
    d758:	b.w	13dbc <strvisx@@Base+0x48>
    d75c:	b.w	13e48 <strvisx@@Base+0xd4>
    d760:	movs	r1, #1
    d762:	b.n	d2d0 <error@@Base+0x674>
    d764:	movs	r1, #0
    d766:	b.n	d2d0 <error@@Base+0x674>
    d768:	push	{r3, r4, r5, lr}
    d76a:	movs	r1, #28
    d76c:	mov	r5, r0
    d76e:	movs	r0, #1
    d770:	bl	cf00 <error@@Base+0x2a4>
    d774:	mov	r4, r0
    d776:	ldr	r0, [r5, #0]
    d778:	bl	cf84 <error@@Base+0x328>
    d77c:	str	r0, [r4, #0]
    d77e:	ldr	r0, [r5, #4]
    d780:	bl	cf84 <error@@Base+0x328>
    d784:	str	r0, [r4, #4]
    d786:	ldr	r0, [r5, #16]
    d788:	bl	cf84 <error@@Base+0x328>
    d78c:	str	r0, [r4, #16]
    d78e:	ldr	r3, [r5, #8]
    d790:	str	r3, [r4, #8]
    d792:	ldr	r3, [r5, #12]
    d794:	str	r3, [r4, #12]
    d796:	ldr	r0, [r5, #20]
    d798:	bl	cf84 <error@@Base+0x328>
    d79c:	str	r0, [r4, #20]
    d79e:	ldr	r0, [r5, #24]
    d7a0:	bl	cf84 <error@@Base+0x328>
    d7a4:	mov	r3, r0
    d7a6:	mov	r0, r4
    d7a8:	str	r3, [r4, #24]
    d7aa:	pop	{r3, r4, r5, pc}
    d7ac:	push	{r4, r5, lr}
    d7ae:	sub	sp, #28
    d7b0:	movw	r4, #65535	; 0xffff
    d7b4:	movs	r5, #0
    d7b6:	strd	r4, r5, [sp]
    d7ba:	add	r3, sp, #16
    d7bc:	ldr	r4, [pc, #76]	; (d80c <error@@Base+0xbb0>)
    d7be:	movs	r2, #0
    d7c0:	ldr	r1, [pc, #76]	; (d810 <error@@Base+0xbb4>)
    d7c2:	add	r4, pc
    d7c4:	str	r3, [sp, #8]
    d7c6:	movs	r3, #0
    d7c8:	ldr	r1, [r4, r1]
    d7ca:	mov	r4, r0
    d7cc:	ldr	r1, [r1, #0]
    d7ce:	str	r1, [sp, #20]
    d7d0:	mov.w	r1, #0
    d7d4:	bl	1370c <strtonum@@Base>
    d7d8:	ldr	r3, [sp, #16]
    d7da:	cbz	r3, d7ee <error@@Base+0xb92>
    d7dc:	ldr	r1, [pc, #52]	; (d814 <error@@Base+0xbb8>)
    d7de:	mov	r0, r4
    d7e0:	add	r1, pc
    d7e2:	blx	2884 <getservbyname@plt>
    d7e6:	cbz	r0, d802 <error@@Base+0xba6>
    d7e8:	ldr	r0, [r0, #8]
    d7ea:	rev16	r0, r0
    d7ec:	uxth	r0, r0
    d7ee:	ldr	r2, [pc, #40]	; (d818 <error@@Base+0xbbc>)
    d7f0:	ldr	r3, [pc, #28]	; (d810 <error@@Base+0xbb4>)
    d7f2:	add	r2, pc
    d7f4:	ldr	r3, [r2, r3]
    d7f6:	ldr	r2, [r3, #0]
    d7f8:	ldr	r3, [sp, #20]
    d7fa:	eors	r2, r3
    d7fc:	bne.n	d808 <error@@Base+0xbac>
    d7fe:	add	sp, #28
    d800:	pop	{r4, r5, pc}
    d802:	mov.w	r0, #4294967295	; 0xffffffff
    d806:	b.n	d7ee <error@@Base+0xb92>
    d808:	blx	2698 <__stack_chk_fail@plt>
    d80c:	stmia	r5!, {r1, r2, r3, r4, r5}
    d80e:	movs	r1, r0
    d810:	lsls	r0, r0, #11
    d812:	movs	r0, r0
    d814:	add	r3, sp, #768	; 0x300
    d816:	movs	r0, r0
    d818:	stmia	r5!, {r1, r2, r3}
    d81a:	movs	r1, r0
    d81c:	ldr	r2, [pc, #204]	; (d8ec <error@@Base+0xc90>)
    d81e:	ldr	r3, [pc, #208]	; (d8f0 <error@@Base+0xc94>)
    d820:	add	r2, pc
    d822:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d826:	sub	sp, #24
    d828:	ldr	r3, [r2, r3]
    d82a:	movs	r6, #0
    d82c:	mov	r8, r0
    d82e:	ldr	r3, [r3, #0]
    d830:	str	r3, [sp, #20]
    d832:	mov.w	r3, #0
    d836:	str	r6, [sp, #16]
    d838:	cbz	r1, d896 <error@@Base+0xc3a>
    d83a:	mvn.w	r3, #2147483648	; 0x80000000
    d83e:	str	r3, [r1, #0]
    d840:	mov	r4, r1
    d842:	bl	cf84 <error@@Base+0x328>
    d846:	movs	r1, #58	; 0x3a
    d848:	mov	r7, r0
    d84a:	blx	22f0 <strchr@plt>
    d84e:	mov	r5, r0
    d850:	cmp	r0, #0
    d852:	beq.n	d8d4 <error@@Base+0xc78>
    d854:	mov	r1, r6
    d856:	strb.w	r6, [r0], #1
    d85a:	bl	d81c <error@@Base+0xbc0>
    d85e:	mov	r1, r6
    d860:	str	r0, [r4, #0]
    d862:	mov	r0, r7
    d864:	bl	d81c <error@@Base+0xbc0>
    d868:	mov	r5, r0
    d86a:	mov	r0, r7
    d86c:	blx	23f8 <free@plt+0x4>
    d870:	ldr	r2, [r4, #0]
    d872:	movw	r3, #65534	; 0xfffe
    d876:	movt	r3, #32767	; 0x7fff
    d87a:	cmp	r2, r3
    d87c:	beq.n	d8ca <error@@Base+0xc6e>
    d87e:	ldr	r2, [pc, #116]	; (d8f4 <error@@Base+0xc98>)
    d880:	ldr	r3, [pc, #108]	; (d8f0 <error@@Base+0xc94>)
    d882:	add	r2, pc
    d884:	ldr	r3, [r2, r3]
    d886:	ldr	r2, [r3, #0]
    d888:	ldr	r3, [sp, #20]
    d88a:	eors	r2, r3
    d88c:	bne.n	d8e6 <error@@Base+0xc8a>
    d88e:	mov	r0, r5
    d890:	add	sp, #24
    d892:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d896:	ldr	r1, [pc, #96]	; (d8f8 <error@@Base+0xc9c>)
    d898:	mvn.w	r5, #2147483648	; 0x80000000
    d89c:	add	r1, pc
    d89e:	blx	2308 <strcasecmp@plt>
    d8a2:	cmp	r0, #0
    d8a4:	beq.n	d87e <error@@Base+0xc22>
    d8a6:	add	r3, sp, #16
    d8a8:	movs	r5, #0
    d8aa:	str	r3, [sp, #8]
    d8ac:	mov	r0, r8
    d8ae:	movs	r3, #0
    d8b0:	movw	r4, #65533	; 0xfffd
    d8b4:	movs	r2, #0
    d8b6:	movt	r4, #32767	; 0x7fff
    d8ba:	strd	r4, r5, [sp]
    d8be:	bl	1370c <strtonum@@Base>
    d8c2:	ldr	r3, [sp, #16]
    d8c4:	mov	r5, r0
    d8c6:	cmp	r3, #0
    d8c8:	beq.n	d87e <error@@Base+0xc22>
    d8ca:	movw	r5, #65534	; 0xfffe
    d8ce:	movt	r5, #32767	; 0x7fff
    d8d2:	b.n	d87e <error@@Base+0xc22>
    d8d4:	mov	r0, r7
    d8d6:	blx	23f8 <free@plt+0x4>
    d8da:	mov	r1, r5
    d8dc:	mov	r0, r8
    d8de:	bl	d81c <error@@Base+0xbc0>
    d8e2:	mov	r5, r0
    d8e4:	b.n	d87e <error@@Base+0xc22>
    d8e6:	blx	2698 <__stack_chk_fail@plt>
    d8ea:	nop
    d8ec:	stmia	r4!, {r5, r6, r7}
    d8ee:	movs	r1, r0
    d8f0:	lsls	r0, r0, #11
    d8f2:	movs	r0, r0
    d8f4:	stmia	r4!, {r1, r2, r3, r4, r5, r6}
    d8f6:	movs	r1, r0
    d8f8:	add	r3, sp, #32
    d8fa:	movs	r0, r0
    d8fc:	ldr	r2, [pc, #340]	; (da54 <error@@Base+0xdf8>)
    d8fe:	ldr	r3, [pc, #344]	; (da58 <error@@Base+0xdfc>)
    d900:	add	r2, pc
    d902:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d906:	sub	sp, #20
    d908:	ldr	r3, [r2, r3]
    d90a:	mov	r9, r0
    d90c:	movs	r4, #0
    d90e:	ldr	r3, [r3, #0]
    d910:	str	r3, [sp, #12]
    d912:	mov.w	r3, #0
    d916:	blx	2900 <__errno_location@plt>
    d91a:	str	r4, [r0, #0]
    d91c:	cmp.w	r9, #0
    d920:	beq.n	da0a <error@@Base+0xdae>
    d922:	ldrb.w	r2, [r9]
    d926:	cmp	r2, #0
    d928:	beq.n	da0a <error@@Base+0xdae>
    d92a:	movw	r7, #6699	; 0x1a2b
    d92e:	mov.w	sl, #14976	; 0x3a80
    d932:	movt	r7, #9
    d936:	movt	sl, #9
    d93a:	add.w	r8, sp, #8
    d93e:	mov	r6, r0
    d940:	movs	r5, #1
    d942:	mov.w	r3, #20864	; 0x5180
    d946:	movt	r3, #1
    d94a:	str	r3, [sp, #4]
    d94c:	movs	r2, #10
    d94e:	mov	r1, r8
    d950:	mov	r0, r9
    d952:	blx	253c <strtol@plt>
    d956:	ldr	r2, [sp, #8]
    d958:	cmp	r2, r9
    d95a:	mov	fp, r0
    d95c:	beq.n	da0a <error@@Base+0xdae>
    d95e:	ldr	r3, [r6, #0]
    d960:	cmp	r3, #34	; 0x22
    d962:	beq.n	da00 <error@@Base+0xda4>
    d964:	cmp.w	fp, #0
    d968:	blt.n	da0a <error@@Base+0xdae>
    d96a:	adds	r3, r2, #1
    d96c:	str	r3, [sp, #8]
    d96e:	ldrb	r3, [r2, #0]
    d970:	cmp	r3, #0
    d972:	beq.n	da42 <error@@Base+0xde6>
    d974:	subs	r3, #68	; 0x44
    d976:	uxtb	r2, r3
    d978:	cmp	r2, #51	; 0x33
    d97a:	bhi.n	da0a <error@@Base+0xdae>
    d97c:	cmp	r3, #51	; 0x33
    d97e:	bhi.n	da0a <error@@Base+0xdae>
    d980:	tbb	[pc, r3]
    d984:	muls	r5, r2
    d986:	muls	r3, r0
    d988:	orrs	r2, r7
    d98a:	muls	r3, r0
    d98c:	subs	r3, r0, r1
    d98e:	muls	r3, r0
    d990:	muls	r3, r0
    d992:	ldr	r3, [r0, r5]
    d994:	muls	r3, r0
    d996:	str	r3, [r0, r5]
    d998:	muls	r3, r0
    d99a:	muls	r3, r0
    d99c:	muls	r3, r0
    d99e:	muls	r3, r0
    d9a0:	muls	r3, r0
    d9a2:	muls	r3, r0
    d9a4:	muls	r5, r2
    d9a6:	muls	r3, r0
    d9a8:	orrs	r2, r7
    d9aa:	muls	r3, r0
    d9ac:	subs	r3, r0, r1
    d9ae:	muls	r3, r0
    d9b0:	muls	r3, r0
    d9b2:	ldr	r3, [r0, r5]
    d9b4:	muls	r3, r0
    d9b6:	str	r3, [r0, r5]
    d9b8:	movw	r0, #8738	; 0x2222
    d9bc:	movt	r0, #546	; 0x222
    d9c0:	movs	r5, #60	; 0x3c
    d9c2:	cmp	r0, fp
    d9c4:	ble.n	da0a <error@@Base+0xdae>
    d9c6:	mov	r1, fp
    d9c8:	mov	r0, r5
    d9ca:	bl	14e18 <strvisx@@Base+0x10a4>
    d9ce:	mov	r1, r0
    d9d0:	mvn.w	r0, #2147483648	; 0x80000000
    d9d4:	str	r1, [sp, #0]
    d9d6:	bl	14db4 <strvisx@@Base+0x1040>
    d9da:	cmp	r0, r4
    d9dc:	ble.n	da0a <error@@Base+0xdae>
    d9de:	mov	r0, r4
    d9e0:	ldr	r1, [sp, #0]
    d9e2:	bl	14d50 <strvisx@@Base+0xfdc>
    d9e6:	subs	r4, r0, #0
    d9e8:	blt.n	da0a <error@@Base+0xdae>
    d9ea:	ldr.w	r9, [sp, #8]
    d9ee:	ldrb.w	r2, [r9]
    d9f2:	cmp	r2, #0
    d9f4:	bne.n	d94c <error@@Base+0xcf0>
    d9f6:	b.n	da0e <error@@Base+0xdb2>
    d9f8:	mov	r0, r7
    d9fa:	mov.w	r5, #3600	; 0xe10
    d9fe:	b.n	d9c2 <error@@Base+0xd66>
    da00:	add.w	r3, r0, #2147483648	; 0x80000000
    da04:	subs	r3, #1
    da06:	adds	r3, #3
    da08:	bls.n	d964 <error@@Base+0xd08>
    da0a:	mov.w	r4, #4294967295	; 0xffffffff
    da0e:	ldr	r2, [pc, #76]	; (da5c <error@@Base+0xe00>)
    da10:	ldr	r3, [pc, #68]	; (da58 <error@@Base+0xdfc>)
    da12:	add	r2, pc
    da14:	ldr	r3, [r2, r3]
    da16:	ldr	r2, [r3, #0]
    da18:	ldr	r3, [sp, #12]
    da1a:	eors	r2, r3
    da1c:	bne.n	da50 <error@@Base+0xdf4>
    da1e:	mov	r0, r4
    da20:	add	sp, #20
    da22:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    da26:	movw	r0, #3550	; 0xdde
    da2a:	mov	r5, sl
    da2c:	b.n	d9c2 <error@@Base+0xd66>
    da2e:	ldr	r5, [sp, #4]
    da30:	movw	r0, #24855	; 0x6117
    da34:	b.n	d9c2 <error@@Base+0xd66>
    da36:	mov	r1, r5
    da38:	mvn.w	r0, #2147483648	; 0x80000000
    da3c:	bl	14430 <strvisx@@Base+0x6bc>
    da40:	b.n	d9c2 <error@@Base+0xd66>
    da42:	mov	r1, r5
    da44:	mvn.w	r0, #2147483648	; 0x80000000
    da48:	str	r2, [sp, #8]
    da4a:	bl	14430 <strvisx@@Base+0x6bc>
    da4e:	b.n	d9c2 <error@@Base+0xd66>
    da50:	blx	2698 <__stack_chk_fail@plt>
    da54:	stmia	r4!, {}
    da56:	movs	r1, r0
    da58:	lsls	r0, r0, #11
    da5a:	movs	r0, r0
    da5c:	stmia	r2!, {r1, r2, r3, r5, r6, r7}
    da5e:	movs	r1, r0
    da60:	ldr	r2, [pc, #108]	; (dad0 <error@@Base+0xe74>)
    da62:	cmp	r1, #22
    da64:	it	ne
    da66:	cmpne	r1, #0
    da68:	ldr	r3, [pc, #104]	; (dad4 <error@@Base+0xe78>)
    da6a:	add	r2, pc
    da6c:	push	{lr}
    da6e:	sub	sp, #20
    da70:	ldr	r3, [r2, r3]
    da72:	ldr	r3, [r3, #0]
    da74:	str	r3, [sp, #12]
    da76:	mov.w	r3, #0
    da7a:	beq.n	dab2 <error@@Base+0xe56>
    da7c:	ldr	r2, [pc, #88]	; (dad8 <error@@Base+0xe7c>)
    da7e:	mov	r3, r0
    da80:	str	r1, [sp, #0]
    da82:	add	r0, sp, #8
    da84:	add	r2, pc
    da86:	movs	r1, #1
    da88:	blx	2434 <__asprintf_chk@plt>
    da8c:	adds	r0, #1
    da8e:	beq.n	dabc <error@@Base+0xe60>
    da90:	ldr	r0, [pc, #72]	; (dadc <error@@Base+0xe80>)
    da92:	ldr	r1, [sp, #8]
    da94:	add	r0, pc
    da96:	bl	ce38 <error@@Base+0x1dc>
    da9a:	ldr	r0, [sp, #8]
    da9c:	ldr	r2, [pc, #64]	; (dae0 <error@@Base+0xe84>)
    da9e:	ldr	r3, [pc, #52]	; (dad4 <error@@Base+0xe78>)
    daa0:	add	r2, pc
    daa2:	ldr	r3, [r2, r3]
    daa4:	ldr	r2, [r3, #0]
    daa6:	ldr	r3, [sp, #12]
    daa8:	eors	r2, r3
    daaa:	bne.n	dab8 <error@@Base+0xe5c>
    daac:	add	sp, #20
    daae:	ldr.w	pc, [sp], #4
    dab2:	bl	cf84 <error@@Base+0x328>
    dab6:	b.n	da9c <error@@Base+0xe40>
    dab8:	blx	2698 <__stack_chk_fail@plt>
    dabc:	blx	2900 <__errno_location@plt>
    dac0:	ldr	r0, [r0, #0]
    dac2:	blx	21f4 <strerror@plt+0x4>
    dac6:	mov	r1, r0
    dac8:	ldr	r0, [pc, #24]	; (dae4 <error@@Base+0xe88>)
    daca:	add	r0, pc
    dacc:	bl	c6e4 <el_source@plt+0x9da8>
    dad0:	stmia	r2!, {r1, r2, r4, r7}
    dad2:	movs	r1, r0
    dad4:	lsls	r0, r0, #11
    dad6:	movs	r0, r0
    dad8:	add	r1, sp, #144	; 0x90
    dada:	movs	r0, r0
    dadc:	add	r1, sp, #224	; 0xe0
    dade:	movs	r0, r0
    dae0:	stmia	r2!, {r5, r6}
    dae2:	movs	r1, r0
    dae4:	add	r0, sp, #920	; 0x398
    dae6:	movs	r0, r0
    dae8:	push	{r4, r5, r6, lr}
    daea:	mov	r4, r0
    daec:	cbz	r0, db14 <error@@Base+0xeb8>
    daee:	ldr	r5, [r0, #0]
    daf0:	cbz	r5, db16 <error@@Base+0xeba>
    daf2:	ldrb	r3, [r5, #0]
    daf4:	mov	r6, r1
    daf6:	cmp	r3, #91	; 0x5b
    daf8:	beq.n	db20 <error@@Base+0xec4>
    dafa:	ldr	r1, [pc, #84]	; (db50 <error@@Base+0xef4>)
    dafc:	mov	r0, r5
    dafe:	add	r1, pc
    db00:	blx	28b4 <strpbrk@plt>
    db04:	mov	r3, r0
    db06:	cbz	r0, db46 <error@@Base+0xeea>
    db08:	ldrb	r2, [r3, #0]
    db0a:	cmp	r2, #47	; 0x2f
    db0c:	beq.n	db36 <error@@Base+0xeda>
    db0e:	cmp	r2, #58	; 0x3a
    db10:	beq.n	db36 <error@@Base+0xeda>
    db12:	cbz	r2, db1a <error@@Base+0xebe>
    db14:	movs	r5, #0
    db16:	mov	r0, r5
    db18:	pop	{r4, r5, r6, pc}
    db1a:	mov	r0, r5
    db1c:	str	r2, [r4, #0]
    db1e:	pop	{r4, r5, r6, pc}
    db20:	movs	r1, #93	; 0x5d
    db22:	mov	r0, r5
    db24:	blx	22f0 <strchr@plt>
    db28:	mov	r3, r0
    db2a:	cmp	r0, #0
    db2c:	beq.n	db14 <error@@Base+0xeb8>
    db2e:	ldrb	r2, [r3, #1]
    db30:	adds	r3, #1
    db32:	cmp	r2, #47	; 0x2f
    db34:	bne.n	db0e <error@@Base+0xeb2>
    db36:	cbz	r6, db3a <error@@Base+0xede>
    db38:	strb	r2, [r6, #0]
    db3a:	movs	r2, #0
    db3c:	mov	r0, r5
    db3e:	strb.w	r2, [r3], #1
    db42:	str	r3, [r4, #0]
    db44:	pop	{r4, r5, r6, pc}
    db46:	mov	r0, r5
    db48:	blx	24a0 <strlen@plt>
    db4c:	adds	r3, r5, r0
    db4e:	b.n	db08 <error@@Base+0xeac>
    db50:	add	r0, sp, #904	; 0x388
    db52:	movs	r0, r0
    db54:	movs	r1, #0
    db56:	b.w	dae8 <error@@Base+0xe8c>
    db5a:	nop
    db5c:	push	{r4, lr}
    db5e:	mov	r4, r0
    db60:	ldrb	r3, [r0, #0]
    db62:	cmp	r3, #91	; 0x5b
    db64:	bne.n	db78 <error@@Base+0xf1c>
    db66:	blx	24a0 <strlen@plt>
    db6a:	subs	r0, #1
    db6c:	ldrb	r3, [r4, r0]
    db6e:	cmp	r3, #93	; 0x5d
    db70:	ittt	eq
    db72:	moveq	r3, #0
    db74:	strbeq	r3, [r4, r0]
    db76:	addeq	r4, #1
    db78:	mov	r0, r4
    db7a:	pop	{r4, pc}
    db7c:	ldrb	r3, [r0, #0]
    db7e:	cmp	r3, #58	; 0x3a
    db80:	beq.n	dbb6 <error@@Base+0xf5a>
    db82:	sub.w	r2, r3, #91	; 0x5b
    db86:	clz	r2, r2
    db8a:	lsrs	r2, r2, #5
    db8c:	cbnz	r3, dba0 <error@@Base+0xf44>
    db8e:	b.n	dbb6 <error@@Base+0xf5a>
    db90:	cmp	r3, #93	; 0x5d
    db92:	bne.n	dbba <error@@Base+0xf5e>
    db94:	ldrb	r3, [r0, #1]
    db96:	cmp	r3, #58	; 0x3a
    db98:	beq.n	dbc4 <error@@Base+0xf68>
    db9a:	ldrb	r3, [r0, #1]
    db9c:	adds	r0, #1
    db9e:	cbz	r3, dbb6 <error@@Base+0xf5a>
    dba0:	cmp	r3, #64	; 0x40
    dba2:	bne.n	db90 <error@@Base+0xf34>
    dba4:	ldrb	r3, [r0, #1]
    dba6:	cmp	r3, #91	; 0x5b
    dba8:	bne.n	db9a <error@@Base+0xf3e>
    dbaa:	ldrb	r3, [r0, #2]
    dbac:	adds	r0, #1
    dbae:	adds	r0, #1
    dbb0:	movs	r2, #1
    dbb2:	cmp	r3, #0
    dbb4:	bne.n	dba0 <error@@Base+0xf44>
    dbb6:	movs	r0, #0
    dbb8:	bx	lr
    dbba:	cmp	r3, #58	; 0x3a
    dbbc:	bne.n	dbcc <error@@Base+0xf70>
    dbbe:	cmp	r2, #0
    dbc0:	bne.n	db9a <error@@Base+0xf3e>
    dbc2:	bx	lr
    dbc4:	cmp	r2, #0
    dbc6:	beq.n	db9a <error@@Base+0xf3e>
    dbc8:	adds	r0, #1
    dbca:	bx	lr
    dbcc:	cmp	r3, #47	; 0x2f
    dbce:	bne.n	db9a <error@@Base+0xf3e>
    dbd0:	movs	r0, #0
    dbd2:	bx	lr
    dbd4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    dbd8:	mov	r6, r2
    dbda:	mov	r5, r3
    dbdc:	mov	r7, r1
    dbde:	cbz	r1, dbe4 <error@@Base+0xf88>
    dbe0:	movs	r3, #0
    dbe2:	str	r3, [r1, #0]
    dbe4:	cbz	r6, dbea <error@@Base+0xf8e>
    dbe6:	movs	r3, #0
    dbe8:	str	r3, [r6, #0]
    dbea:	cbz	r5, dbf0 <error@@Base+0xf94>
    dbec:	movs	r3, #0
    dbee:	str	r3, [r5, #0]
    dbf0:	bl	cf84 <error@@Base+0x328>
    dbf4:	mov	r8, r0
    dbf6:	bl	db7c <error@@Base+0xf20>
    dbfa:	mov	r4, r0
    dbfc:	cmp	r0, #0
    dbfe:	beq.n	dc8c <error@@Base+0x1030>
    dc00:	ldrb	r3, [r0, #1]
    dc02:	movs	r2, #0
    dc04:	adds	r0, #1
    dc06:	strb.w	r2, [r0, #-1]
    dc0a:	cbz	r3, dc6e <error@@Base+0x1012>
    dc0c:	bl	cf84 <error@@Base+0x328>
    dc10:	movs	r1, #64	; 0x40
    dc12:	mov	r9, r0
    dc14:	mov	r0, r8
    dc16:	blx	2370 <strrchr@plt>
    dc1a:	mov	r4, r0
    dc1c:	cbz	r0, dc7e <error@@Base+0x1022>
    dc1e:	movs	r3, #0
    dc20:	strb.w	r3, [r0], #1
    dc24:	bl	db5c <error@@Base+0xf00>
    dc28:	bl	cf84 <error@@Base+0x328>
    dc2c:	ldrb.w	r4, [r8]
    dc30:	mov	sl, r0
    dc32:	cbnz	r4, dc74 <error@@Base+0x1018>
    dc34:	cbz	r7, dc3a <error@@Base+0xfde>
    dc36:	str	r4, [r7, #0]
    dc38:	movs	r4, #0
    dc3a:	cbz	r6, dc44 <error@@Base+0xfe8>
    dc3c:	str.w	sl, [r6]
    dc40:	mov.w	sl, #0
    dc44:	cbz	r5, dc50 <error@@Base+0xff4>
    dc46:	str.w	r9, [r5]
    dc4a:	mov.w	r9, #0
    dc4e:	mov	r5, r9
    dc50:	mov	r0, r8
    dc52:	blx	23f8 <free@plt+0x4>
    dc56:	mov	r0, r4
    dc58:	blx	23f8 <free@plt+0x4>
    dc5c:	mov	r0, sl
    dc5e:	blx	23f8 <free@plt+0x4>
    dc62:	mov	r0, r9
    dc64:	blx	23f8 <free@plt+0x4>
    dc68:	mov	r0, r5
    dc6a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    dc6e:	ldr	r0, [pc, #40]	; (dc98 <error@@Base+0x103c>)
    dc70:	add	r0, pc
    dc72:	b.n	dc0c <error@@Base+0xfb0>
    dc74:	mov	r0, r8
    dc76:	bl	cf84 <error@@Base+0x328>
    dc7a:	mov	r4, r0
    dc7c:	b.n	dc34 <error@@Base+0xfd8>
    dc7e:	mov	r0, r8
    dc80:	bl	db5c <error@@Base+0xf00>
    dc84:	bl	cf84 <error@@Base+0x328>
    dc88:	mov	sl, r0
    dc8a:	b.n	dc34 <error@@Base+0xfd8>
    dc8c:	mov	r9, r0
    dc8e:	mov	sl, r0
    dc90:	mov.w	r5, #4294967295	; 0xffffffff
    dc94:	b.n	dc50 <error@@Base+0xff4>
    dc96:	nop
    dc98:	strh	r0, [r0, #60]	; 0x3c
    dc9a:	movs	r0, r0
    dc9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    dca0:	mov	r7, r2
    dca2:	ldr	r2, [pc, #236]	; (dd90 <error@@Base+0x1134>)
    dca4:	mov	r5, r3
    dca6:	ldr	r3, [pc, #236]	; (dd94 <error@@Base+0x1138>)
    dca8:	sub	sp, #12
    dcaa:	add	r2, pc
    dcac:	mov	r8, r1
    dcae:	ldr	r3, [r2, r3]
    dcb0:	ldr	r3, [r3, #0]
    dcb2:	str	r3, [sp, #4]
    dcb4:	mov.w	r3, #0
    dcb8:	cbz	r1, dcbe <error@@Base+0x1062>
    dcba:	movs	r3, #0
    dcbc:	str	r3, [r1, #0]
    dcbe:	cbz	r7, dcc4 <error@@Base+0x1068>
    dcc0:	movs	r3, #0
    dcc2:	str	r3, [r7, #0]
    dcc4:	cbz	r5, dccc <error@@Base+0x1070>
    dcc6:	mov.w	r3, #4294967295	; 0xffffffff
    dcca:	str	r3, [r5, #0]
    dccc:	blx	265c <strdup@plt+0x4>
    dcd0:	mov	r4, r0
    dcd2:	str	r0, [sp, #0]
    dcd4:	cmp	r0, #0
    dcd6:	beq.n	dd8a <error@@Base+0x112e>
    dcd8:	movs	r1, #64	; 0x40
    dcda:	blx	2370 <strrchr@plt>
    dcde:	mov	r6, r0
    dce0:	cmp	r0, #0
    dce2:	beq.n	dd82 <error@@Base+0x1126>
    dce4:	movs	r3, #0
    dce6:	strb	r3, [r0, #0]
    dce8:	ldrb	r3, [r4, #0]
    dcea:	cbnz	r3, dd1e <error@@Base+0x10c2>
    dcec:	movs	r6, #0
    dcee:	mov.w	r5, #4294967295	; 0xffffffff
    dcf2:	mov	r9, r6
    dcf4:	mov	r0, r4
    dcf6:	blx	23f8 <free@plt+0x4>
    dcfa:	mov	r0, r9
    dcfc:	blx	23f8 <free@plt+0x4>
    dd00:	mov	r0, r6
    dd02:	blx	23f8 <free@plt+0x4>
    dd06:	ldr	r2, [pc, #144]	; (dd98 <error@@Base+0x113c>)
    dd08:	ldr	r3, [pc, #136]	; (dd94 <error@@Base+0x1138>)
    dd0a:	add	r2, pc
    dd0c:	ldr	r3, [r2, r3]
    dd0e:	ldr	r2, [r3, #0]
    dd10:	ldr	r3, [sp, #4]
    dd12:	eors	r2, r3
    dd14:	bne.n	dd86 <error@@Base+0x112a>
    dd16:	mov	r0, r5
    dd18:	add	sp, #12
    dd1a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    dd1e:	mov	r0, r4
    dd20:	blx	265c <strdup@plt+0x4>
    dd24:	mov	r9, r0
    dd26:	cmp	r0, #0
    dd28:	beq.n	dcec <error@@Base+0x1090>
    dd2a:	adds	r6, #1
    dd2c:	str	r6, [sp, #0]
    dd2e:	movs	r1, #0
    dd30:	mov	r0, sp
    dd32:	bl	dae8 <error@@Base+0xe8c>
    dd36:	mov	r6, r0
    dd38:	cbz	r0, dd7c <error@@Base+0x1120>
    dd3a:	ldrb	r6, [r0, #0]
    dd3c:	cbz	r6, dd7c <error@@Base+0x1120>
    dd3e:	bl	db5c <error@@Base+0xf00>
    dd42:	bl	cf84 <error@@Base+0x328>
    dd46:	ldr	r3, [sp, #0]
    dd48:	mov	r6, r0
    dd4a:	cbz	r3, dd50 <error@@Base+0x10f4>
    dd4c:	ldrb	r2, [r3, #0]
    dd4e:	cbnz	r2, dd72 <error@@Base+0x1116>
    dd50:	mov.w	r0, #4294967295	; 0xffffffff
    dd54:	cmp.w	r8, #0
    dd58:	beq.n	dd62 <error@@Base+0x1106>
    dd5a:	str.w	r9, [r8]
    dd5e:	mov.w	r9, #0
    dd62:	cbz	r7, dd68 <error@@Base+0x110c>
    dd64:	str	r6, [r7, #0]
    dd66:	movs	r6, #0
    dd68:	cmp	r5, #0
    dd6a:	beq.n	dcf4 <error@@Base+0x1098>
    dd6c:	str	r0, [r5, #0]
    dd6e:	movs	r5, #0
    dd70:	b.n	dcf4 <error@@Base+0x1098>
    dd72:	mov	r0, r3
    dd74:	bl	d7ac <error@@Base+0xb50>
    dd78:	cmp	r0, #0
    dd7a:	bgt.n	dd54 <error@@Base+0x10f8>
    dd7c:	mov.w	r5, #4294967295	; 0xffffffff
    dd80:	b.n	dcf4 <error@@Base+0x1098>
    dd82:	mov	r9, r0
    dd84:	b.n	dd2e <error@@Base+0x10d2>
    dd86:	blx	2698 <__stack_chk_fail@plt>
    dd8a:	mov.w	r5, #4294967295	; 0xffffffff
    dd8e:	b.n	dd06 <error@@Base+0x10aa>
    dd90:	stmia	r0!, {r1, r2, r4, r6}
    dd92:	movs	r1, r0
    dd94:	lsls	r0, r0, #11
    dd96:	movs	r0, r0
    dd98:	itet	<und>
    dd9a:	mov<und>	r1, r0
    dd9c:	pushal	{r1, r2, r3}
    dd9e:	mov<und>	r1, #1
    dda0:	push	{r4, r5, r6, lr}
    dda2:	sub	sp, #20
    dda4:	ldr	r6, [pc, #128]	; (de28 <error@@Base+0x11cc>)
    dda6:	add	r3, sp, #36	; 0x24
    dda8:	ldr	r5, [pc, #128]	; (de2c <error@@Base+0x11d0>)
    ddaa:	mov	r4, r0
    ddac:	add	r6, pc
    ddae:	ldr.w	r2, [r3], #4
    ddb2:	add	r0, sp, #8
    ddb4:	ldr	r5, [r6, r5]
    ddb6:	ldr	r5, [r5, #0]
    ddb8:	str	r5, [sp, #12]
    ddba:	mov.w	r5, #0
    ddbe:	str	r3, [sp, #4]
    ddc0:	blx	28f4 <__vasprintf_chk@plt>
    ddc4:	adds	r0, #1
    ddc6:	beq.n	de1c <error@@Base+0x11c0>
    ddc8:	ldr	r0, [r4, #0]
    ddca:	ldr	r1, [r4, #8]
    ddcc:	cbz	r0, de16 <error@@Base+0x11ba>
    ddce:	ldr	r3, [r4, #4]
    ddd0:	adds	r3, #2
    ddd2:	cmp	r3, r1
    ddd4:	ite	cs
    ddd6:	lslcs	r5, r1, #1
    ddd8:	movcc	r5, r1
    ddda:	movs	r3, #4
    dddc:	mov	r2, r5
    ddde:	bl	cf64 <error@@Base+0x308>
    dde2:	ldr	r3, [r4, #4]
    dde4:	ldr	r2, [sp, #8]
    dde6:	movs	r1, #0
    dde8:	adds	r6, r3, #1
    ddea:	strd	r6, r5, [r4, #4]
    ddee:	str	r0, [r4, #0]
    ddf0:	str.w	r2, [r0, r3, lsl #2]
    ddf4:	ldrd	r3, r2, [r4]
    ddf8:	str.w	r1, [r3, r2, lsl #2]
    ddfc:	ldr	r2, [pc, #48]	; (de30 <error@@Base+0x11d4>)
    ddfe:	ldr	r3, [pc, #44]	; (de2c <error@@Base+0x11d0>)
    de00:	add	r2, pc
    de02:	ldr	r3, [r2, r3]
    de04:	ldr	r2, [r3, #0]
    de06:	ldr	r3, [sp, #12]
    de08:	eors	r2, r3
    de0a:	bne.n	de24 <error@@Base+0x11c8>
    de0c:	add	sp, #20
    de0e:	ldmia.w	sp!, {r4, r5, r6, lr}
    de12:	add	sp, #12
    de14:	bx	lr
    de16:	movs	r5, #32
    de18:	str	r0, [r4, #4]
    de1a:	b.n	ddda <error@@Base+0x117e>
    de1c:	ldr	r0, [pc, #20]	; (de34 <error@@Base+0x11d8>)
    de1e:	add	r0, pc
    de20:	bl	c6e4 <el_source@plt+0x9da8>
    de24:	blx	2698 <__stack_chk_fail@plt>
    de28:	ite	pl
    de2a:	movpl	r1, r0
    de2c:	lslmi	r0, r0, #11
    de2e:	movs	r0, r0
    de30:	nop
    de32:	movs	r1, r0
    de34:	add	r5, pc, #792	; (adr r5, e150 <error@@Base+0x14f4>)
    de36:	movs	r0, r0
    de38:	push	{r2, r3}
    de3a:	push	{r4, r5, lr}
    de3c:	sub	sp, #20
    de3e:	ldr.w	lr, [pc, #120]	; deb8 <error@@Base+0x125c>
    de42:	add	r3, sp, #32
    de44:	ldr.w	ip, [pc, #116]	; debc <error@@Base+0x1260>
    de48:	mov	r5, r0
    de4a:	add	lr, pc
    de4c:	ldr.w	r2, [r3], #4
    de50:	add	r0, sp, #8
    de52:	mov	r4, r1
    de54:	ldr.w	ip, [lr, ip]
    de58:	movs	r1, #1
    de5a:	ldr.w	ip, [ip]
    de5e:	str.w	ip, [sp, #12]
    de62:	mov.w	ip, #0
    de66:	str	r3, [sp, #4]
    de68:	blx	28f4 <__vasprintf_chk@plt>
    de6c:	adds	r0, #1
    de6e:	beq.n	dea2 <error@@Base+0x1246>
    de70:	ldr	r2, [r5, #4]
    de72:	cmp	r2, r4
    de74:	bls.n	deae <error@@Base+0x1252>
    de76:	ldr	r3, [r5, #0]
    de78:	ldr.w	r0, [r3, r4, lsl #2]
    de7c:	blx	23f8 <free@plt+0x4>
    de80:	ldr	r3, [r5, #0]
    de82:	ldr	r2, [sp, #8]
    de84:	str.w	r2, [r3, r4, lsl #2]
    de88:	ldr	r2, [pc, #52]	; (dec0 <error@@Base+0x1264>)
    de8a:	ldr	r3, [pc, #48]	; (debc <error@@Base+0x1260>)
    de8c:	add	r2, pc
    de8e:	ldr	r3, [r2, r3]
    de90:	ldr	r2, [r3, #0]
    de92:	ldr	r3, [sp, #12]
    de94:	eors	r2, r3
    de96:	bne.n	deaa <error@@Base+0x124e>
    de98:	add	sp, #20
    de9a:	ldmia.w	sp!, {r4, r5, lr}
    de9e:	add	sp, #8
    dea0:	bx	lr
    dea2:	ldr	r0, [pc, #32]	; (dec4 <error@@Base+0x1268>)
    dea4:	add	r0, pc
    dea6:	bl	c6e4 <el_source@plt+0x9da8>
    deaa:	blx	2698 <__stack_chk_fail@plt>
    deae:	ldr	r0, [pc, #24]	; (dec8 <error@@Base+0x126c>)
    deb0:	mov	r1, r4
    deb2:	add	r0, pc
    deb4:	bl	c6e4 <el_source@plt+0x9da8>
    deb8:	bkpt	0x00b6
    deba:	movs	r1, r0
    debc:	lsls	r0, r0, #11
    debe:	movs	r0, r0
    dec0:	bkpt	0x0074
    dec2:	movs	r1, r0
    dec4:	add	r5, pc, #368	; (adr r5, e038 <error@@Base+0x13dc>)
    dec6:	movs	r0, r0
    dec8:	add	r5, pc, #440	; (adr r5, e084 <error@@Base+0x1428>)
    deca:	movs	r0, r0
    decc:	push	{r3, r4, r5, lr}
    dece:	mov	r5, r0
    ded0:	ldr	r0, [r0, #0]
    ded2:	cbz	r0, def8 <error@@Base+0x129c>
    ded4:	ldr	r3, [r5, #4]
    ded6:	cbz	r3, deec <error@@Base+0x1290>
    ded8:	movs	r4, #0
    deda:	ldr.w	r0, [r0, r4, lsl #2]
    dede:	adds	r4, #1
    dee0:	blx	23f8 <free@plt+0x4>
    dee4:	ldrd	r0, r3, [r5]
    dee8:	cmp	r3, r4
    deea:	bhi.n	deda <error@@Base+0x127e>
    deec:	blx	23f8 <free@plt+0x4>
    def0:	movs	r3, #0
    def2:	strd	r3, r3, [r5, #4]
    def6:	str	r3, [r5, #0]
    def8:	pop	{r3, r4, r5, pc}
    defa:	nop
    defc:	push	{r4, r5, r6, r7, lr}
    defe:	mov	r6, r1
    df00:	ldr	r1, [pc, #280]	; (e01c <error@@Base+0x13c0>)
    df02:	sub	sp, #156	; 0x9c
    df04:	ldr	r2, [pc, #280]	; (e020 <error@@Base+0x13c4>)
    df06:	add	r1, pc
    df08:	ldrb	r3, [r0, #0]
    df0a:	ldr	r2, [r1, r2]
    df0c:	cmp	r3, #126	; 0x7e
    df0e:	ldr	r2, [r2, #0]
    df10:	str	r2, [sp, #148]	; 0x94
    df12:	mov.w	r2, #0
    df16:	bne.n	df9a <error@@Base+0x133e>
    df18:	mov	r4, r0
    df1a:	adds	r4, #1
    df1c:	movs	r1, #47	; 0x2f
    df1e:	mov	r0, r4
    df20:	blx	22f0 <strchr@plt>
    df24:	cmp	r0, #0
    df26:	it	ne
    df28:	cmpne	r4, r0
    df2a:	mov	r5, r0
    df2c:	bcs.n	df7a <error@@Base+0x131e>
    df2e:	mov	r1, r4
    df30:	bl	14db4 <strvisx@@Base+0x1040>
    df34:	cmp	r0, #127	; 0x7f
    df36:	mov	r6, r0
    df38:	bhi.n	e008 <error@@Base+0x13ac>
    df3a:	add	r7, sp, #20
    df3c:	movs	r3, #128	; 0x80
    df3e:	mov	r2, r0
    df40:	mov	r1, r4
    df42:	mov	r0, r7
    df44:	blx	2440 <__memcpy_chk@plt>
    df48:	add	r3, sp, #152	; 0x98
    df4a:	add	r6, r3
    df4c:	mov	r0, r7
    df4e:	movs	r3, #0
    df50:	strb.w	r3, [r6, #-132]
    df54:	blx	2918 <getpwnam@plt>
    df58:	cmp	r0, #0
    df5a:	beq.n	dffe <error@@Base+0x13a2>
    df5c:	ldr	r2, [r0, #20]
    df5e:	mov	r0, r2
    df60:	str	r2, [sp, #12]
    df62:	blx	24a0 <strlen@plt>
    df66:	ldr	r2, [sp, #12]
    df68:	cbz	r0, dfb2 <error@@Base+0x1356>
    df6a:	add	r0, r2
    df6c:	ldrb.w	r3, [r0, #-1]
    df70:	cmp	r3, #47	; 0x2f
    df72:	beq.n	dfea <error@@Base+0x138e>
    df74:	ldr	r3, [pc, #172]	; (e024 <error@@Base+0x13c8>)
    df76:	add	r3, pc
    df78:	b.n	dfb6 <error@@Base+0x135a>
    df7a:	mov	r0, r6
    df7c:	blx	24ec <getpwuid@plt>
    df80:	cmp	r0, #0
    df82:	beq.n	e010 <error@@Base+0x13b4>
    df84:	ldr	r2, [r0, #20]
    df86:	mov	r0, r2
    df88:	str	r2, [sp, #12]
    df8a:	blx	24a0 <strlen@plt>
    df8e:	ldr	r2, [sp, #12]
    df90:	cbnz	r0, dfd6 <error@@Base+0x137a>
    df92:	ldr	r3, [pc, #148]	; (e028 <error@@Base+0x13cc>)
    df94:	add	r3, pc
    df96:	cbz	r5, dfb8 <error@@Base+0x135c>
    df98:	b.n	dfb6 <error@@Base+0x135a>
    df9a:	bl	cf84 <error@@Base+0x328>
    df9e:	ldr	r2, [pc, #140]	; (e02c <error@@Base+0x13d0>)
    dfa0:	ldr	r3, [pc, #124]	; (e020 <error@@Base+0x13c4>)
    dfa2:	add	r2, pc
    dfa4:	ldr	r3, [r2, r3]
    dfa6:	ldr	r2, [r3, #0]
    dfa8:	ldr	r3, [sp, #148]	; 0x94
    dfaa:	eors	r2, r3
    dfac:	bne.n	dffa <error@@Base+0x139e>
    dfae:	add	sp, #156	; 0x9c
    dfb0:	pop	{r4, r5, r6, r7, pc}
    dfb2:	ldr	r3, [pc, #124]	; (e030 <error@@Base+0x13d4>)
    dfb4:	add	r3, pc
    dfb6:	adds	r4, r5, #1
    dfb8:	ldr	r1, [pc, #120]	; (e034 <error@@Base+0x13d8>)
    dfba:	add	r0, sp, #16
    dfbc:	str	r4, [sp, #0]
    dfbe:	add	r1, pc
    dfc0:	bl	cfcc <error@@Base+0x370>
    dfc4:	cmp.w	r0, #4096	; 0x1000
    dfc8:	it	lt
    dfca:	ldrlt	r0, [sp, #16]
    dfcc:	blt.n	df9e <error@@Base+0x1342>
    dfce:	ldr	r0, [pc, #104]	; (e038 <error@@Base+0x13dc>)
    dfd0:	add	r0, pc
    dfd2:	bl	c6e4 <el_source@plt+0x9da8>
    dfd6:	add	r0, r2
    dfd8:	ldrb.w	r3, [r0, #-1]
    dfdc:	cmp	r3, #47	; 0x2f
    dfde:	beq.n	dff0 <error@@Base+0x1394>
    dfe0:	ldr	r3, [pc, #88]	; (e03c <error@@Base+0x13e0>)
    dfe2:	add	r3, pc
    dfe4:	cmp	r5, #0
    dfe6:	beq.n	dfb8 <error@@Base+0x135c>
    dfe8:	b.n	dfb6 <error@@Base+0x135a>
    dfea:	ldr	r3, [pc, #84]	; (e040 <error@@Base+0x13e4>)
    dfec:	add	r3, pc
    dfee:	b.n	dfb6 <error@@Base+0x135a>
    dff0:	ldr	r3, [pc, #80]	; (e044 <error@@Base+0x13e8>)
    dff2:	add	r3, pc
    dff4:	cmp	r5, #0
    dff6:	beq.n	dfb8 <error@@Base+0x135c>
    dff8:	b.n	dfb6 <error@@Base+0x135a>
    dffa:	blx	2698 <__stack_chk_fail@plt>
    dffe:	ldr	r0, [pc, #72]	; (e048 <error@@Base+0x13ec>)
    e000:	mov	r1, r7
    e002:	add	r0, pc
    e004:	bl	c6e4 <el_source@plt+0x9da8>
    e008:	ldr	r0, [pc, #64]	; (e04c <error@@Base+0x13f0>)
    e00a:	add	r0, pc
    e00c:	bl	c6e4 <el_source@plt+0x9da8>
    e010:	ldr	r0, [pc, #60]	; (e050 <error@@Base+0x13f4>)
    e012:	mov	r1, r6
    e014:	add	r0, pc
    e016:	bl	c6e4 <el_source@plt+0x9da8>
    e01a:	nop
    e01c:	pop	{r1, r3, r4, r5, r6, r7, pc}
    e01e:	movs	r1, r0
    e020:	lsls	r0, r0, #11
    e022:	movs	r0, r0
    e024:	str	r4, [sp, #696]	; 0x2b8
    e026:	movs	r0, r0
    e028:	str	r4, [sp, #576]	; 0x240
    e02a:	movs	r0, r0
    e02c:	pop	{r1, r2, r3, r4, r6, pc}
    e02e:	movs	r1, r0
    e030:	str	r4, [sp, #448]	; 0x1c0
    e032:	movs	r0, r0
    e034:	add	r5, pc, #72	; (adr r5, e080 <error@@Base+0x1424>)
    e036:	movs	r0, r0
    e038:	add	r5, pc, #32	; (adr r5, e05c <error@@Base+0x1400>)
    e03a:	movs	r0, r0
    e03c:	str	r4, [sp, #264]	; 0x108
    e03e:	movs	r0, r0
    e040:	strb	r4, [r3, #16]
    e042:	movs	r0, r0
    e044:	strb	r6, [r2, #16]
    e046:	movs	r0, r0
    e048:	add	r4, pc, #504	; (adr r4, e244 <error@@Base+0x15e8>)
    e04a:	movs	r0, r0
    e04c:	add	r4, pc, #296	; (adr r4, e178 <error@@Base+0x151c>)
    e04e:	movs	r0, r0
    e050:	add	r4, pc, #592	; (adr r4, e2a4 <error@@Base+0x1648>)
    e052:	movs	r0, r0
    e054:	push	{r0, r1, r2, r3}
    e056:	ldr	r2, [pc, #380]	; (e1d4 <error@@Base+0x1578>)
    e058:	ldr	r3, [pc, #380]	; (e1d8 <error@@Base+0x157c>)
    e05a:	add	r2, pc
    e05c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e060:	sub	sp, #148	; 0x94
    e062:	ldr	r3, [r2, r3]
    e064:	ldr	r7, [sp, #184]	; 0xb8
    e066:	ldr	r3, [r3, #0]
    e068:	str	r3, [sp, #140]	; 0x8c
    e06a:	mov.w	r3, #0
    e06e:	bl	b1a8 <el_source@plt+0x886c>
    e072:	cmp	r0, #0
    e074:	beq.w	e198 <error@@Base+0x153c>
    e078:	add	r4, sp, #188	; 0xbc
    e07a:	add.w	r9, sp, #12
    e07e:	mov	sl, r0
    e080:	movs	r5, #0
    e082:	mov	r0, r4
    e084:	mov	r3, r9
    e086:	str	r4, [sp, #8]
    e088:	b.n	e08c <error@@Base+0x1430>
    e08a:	mov	r0, r1
    e08c:	ldr.w	r2, [r4, r5, lsl #3]
    e090:	str	r2, [r3, #0]
    e092:	cbz	r2, e0b2 <error@@Base+0x1456>
    e094:	ldr	r2, [r0, #4]
    e096:	add.w	r1, r0, #8
    e09a:	str	r2, [r3, #4]
    e09c:	cmp	r2, #0
    e09e:	beq.n	e18c <error@@Base+0x1530>
    e0a0:	adds	r5, #1
    e0a2:	adds	r3, #8
    e0a4:	cmp	r5, #16
    e0a6:	bne.n	e08a <error@@Base+0x142e>
    e0a8:	ldr	r3, [r0, #8]
    e0aa:	adds	r0, #12
    e0ac:	str	r0, [sp, #8]
    e0ae:	cmp	r3, #0
    e0b0:	bne.n	e180 <error@@Base+0x1524>
    e0b2:	ldrb	r3, [r7, #0]
    e0b4:	cbnz	r3, e0d2 <error@@Base+0x1476>
    e0b6:	b.n	e142 <error@@Base+0x14e6>
    e0b8:	ldrb	r1, [r7, #0]
    e0ba:	mov	r8, r7
    e0bc:	mov	r0, sl
    e0be:	bl	c1e4 <el_source@plt+0x98a8>
    e0c2:	cmp	r0, #0
    e0c4:	bne.n	e16e <error@@Base+0x1512>
    e0c6:	ldrb.w	r3, [r8, #1]
    e0ca:	add.w	r7, r8, #1
    e0ce:	cmp	r3, #0
    e0d0:	beq.n	e142 <error@@Base+0x14e6>
    e0d2:	cmp	r3, #37	; 0x25
    e0d4:	bne.n	e0b8 <error@@Base+0x145c>
    e0d6:	ldrb	r1, [r7, #1]
    e0d8:	add.w	r8, r7, #1
    e0dc:	cmp	r1, #37	; 0x25
    e0de:	beq.n	e0bc <error@@Base+0x1460>
    e0e0:	cmp	r1, #0
    e0e2:	beq.n	e1c6 <error@@Base+0x156a>
    e0e4:	mov	fp, r1
    e0e6:	cbz	r5, e134 <error@@Base+0x14d8>
    e0e8:	movs	r4, #1
    e0ea:	b.n	e0f6 <error@@Base+0x149a>
    e0ec:	cmp	r4, r5
    e0ee:	add.w	r3, r4, #1
    e0f2:	beq.n	e134 <error@@Base+0x14d8>
    e0f4:	mov	r4, r3
    e0f6:	add.w	r3, r9, r4, lsl #3
    e0fa:	str	r1, [sp, #4]
    e0fc:	subs	r6, r4, #1
    e0fe:	ldr.w	r0, [r3, #-8]
    e102:	blx	22f0 <strchr@plt>
    e106:	ldr	r1, [sp, #4]
    e108:	cmp	r0, #0
    e10a:	beq.n	e0ec <error@@Base+0x1490>
    e10c:	add	r3, sp, #144	; 0x90
    e10e:	add.w	r3, r3, r6, lsl #3
    e112:	ldr.w	r1, [r3, #-128]
    e116:	mov	r0, r1
    e118:	str	r1, [sp, #4]
    e11a:	blx	24a0 <strlen@plt>
    e11e:	ldr	r1, [sp, #4]
    e120:	mov	r2, r0
    e122:	mov	r0, sl
    e124:	bl	bf44 <el_source@plt+0x9608>
    e128:	cmp	r0, #0
    e12a:	bne.n	e1b4 <error@@Base+0x1558>
    e12c:	cmp	r6, r5
    e12e:	bcc.n	e0c6 <error@@Base+0x146a>
    e130:	ldrb.w	fp, [r7, #1]
    e134:	ldr	r1, [pc, #164]	; (e1dc <error@@Base+0x1580>)
    e136:	mov	r2, fp
    e138:	ldr	r0, [pc, #164]	; (e1e0 <error@@Base+0x1584>)
    e13a:	add	r1, pc
    e13c:	add	r0, pc
    e13e:	bl	c6e4 <el_source@plt+0x9da8>
    e142:	mov	r0, sl
    e144:	bl	109e4 <error@@Base+0x3d88>
    e148:	mov	r4, r0
    e14a:	cbz	r0, e1a8 <error@@Base+0x154c>
    e14c:	mov	r0, sl
    e14e:	bl	b2c4 <el_source@plt+0x8988>
    e152:	ldr	r2, [pc, #144]	; (e1e4 <error@@Base+0x1588>)
    e154:	ldr	r3, [pc, #128]	; (e1d8 <error@@Base+0x157c>)
    e156:	add	r2, pc
    e158:	ldr	r3, [r2, r3]
    e15a:	ldr	r2, [r3, #0]
    e15c:	ldr	r3, [sp, #140]	; 0x8c
    e15e:	eors	r2, r3
    e160:	bne.n	e1a4 <error@@Base+0x1548>
    e162:	mov	r0, r4
    e164:	add	sp, #148	; 0x94
    e166:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e16a:	add	sp, #16
    e16c:	bx	lr
    e16e:	bl	ae70 <el_source@plt+0x8534>
    e172:	ldr	r1, [pc, #116]	; (e1e8 <error@@Base+0x158c>)
    e174:	add	r1, pc
    e176:	mov	r2, r0
    e178:	ldr	r0, [pc, #112]	; (e1ec <error@@Base+0x1590>)
    e17a:	add	r0, pc
    e17c:	bl	c6e4 <el_source@plt+0x9da8>
    e180:	ldr	r1, [pc, #108]	; (e1f0 <error@@Base+0x1594>)
    e182:	ldr	r0, [pc, #112]	; (e1f4 <error@@Base+0x1598>)
    e184:	add	r1, pc
    e186:	add	r0, pc
    e188:	bl	c6e4 <el_source@plt+0x9da8>
    e18c:	ldr	r1, [pc, #104]	; (e1f8 <error@@Base+0x159c>)
    e18e:	ldr	r0, [pc, #108]	; (e1fc <error@@Base+0x15a0>)
    e190:	add	r1, pc
    e192:	add	r0, pc
    e194:	bl	c6e4 <el_source@plt+0x9da8>
    e198:	ldr	r1, [pc, #100]	; (e200 <error@@Base+0x15a4>)
    e19a:	ldr	r0, [pc, #104]	; (e204 <error@@Base+0x15a8>)
    e19c:	add	r1, pc
    e19e:	add	r0, pc
    e1a0:	bl	c6e4 <el_source@plt+0x9da8>
    e1a4:	blx	2698 <__stack_chk_fail@plt>
    e1a8:	ldr	r1, [pc, #92]	; (e208 <error@@Base+0x15ac>)
    e1aa:	ldr	r0, [pc, #96]	; (e20c <error@@Base+0x15b0>)
    e1ac:	add	r1, pc
    e1ae:	add	r0, pc
    e1b0:	bl	c6e4 <el_source@plt+0x9da8>
    e1b4:	bl	ae70 <el_source@plt+0x8534>
    e1b8:	ldr	r1, [pc, #84]	; (e210 <error@@Base+0x15b4>)
    e1ba:	add	r1, pc
    e1bc:	mov	r2, r0
    e1be:	ldr	r0, [pc, #84]	; (e214 <error@@Base+0x15b8>)
    e1c0:	add	r0, pc
    e1c2:	bl	c6e4 <el_source@plt+0x9da8>
    e1c6:	ldr	r1, [pc, #80]	; (e218 <error@@Base+0x15bc>)
    e1c8:	ldr	r0, [pc, #80]	; (e21c <error@@Base+0x15c0>)
    e1ca:	add	r1, pc
    e1cc:	add	r0, pc
    e1ce:	bl	c6e4 <el_source@plt+0x9da8>
    e1d2:	nop
    e1d4:	pop	{r1, r2, r5, r7}
    e1d6:	movs	r1, r0
    e1d8:	lsls	r0, r0, #11
    e1da:	movs	r0, r0
    e1dc:	add	r1, sp, #600	; 0x258
    e1de:	movs	r0, r0
    e1e0:	add	r4, pc, #192	; (adr r4, e2a4 <error@@Base+0x1648>)
    e1e2:	movs	r0, r0
    e1e4:	cbnz	r2, e252 <error@@Base+0x15f6>
    e1e6:	movs	r1, r0
    e1e8:	add	r1, sp, #368	; 0x170
    e1ea:	movs	r0, r0
    e1ec:	add	r3, pc, #712	; (adr r3, e4b8 <error@@Base+0x185c>)
    e1ee:	movs	r0, r0
    e1f0:	add	r1, sp, #304	; 0x130
    e1f2:	movs	r0, r0
    e1f4:	add	r3, pc, #584	; (adr r3, e440 <error@@Base+0x17e4>)
    e1f6:	movs	r0, r0
    e1f8:	add	r1, sp, #256	; 0x100
    e1fa:	movs	r0, r0
    e1fc:	add	r3, pc, #440	; (adr r3, e3b8 <error@@Base+0x175c>)
    e1fe:	movs	r0, r0
    e200:	add	r1, sp, #208	; 0xd0
    e202:	movs	r0, r0
    e204:	strh	r2, [r3, #42]	; 0x2a
    e206:	movs	r0, r0
    e208:	add	r1, sp, #144	; 0x90
    e20a:	movs	r0, r0
    e20c:	add	r3, pc, #856	; (adr r3, e568 <error@@Base+0x190c>)
    e20e:	movs	r0, r0
    e210:	add	r1, sp, #88	; 0x58
    e212:	movs	r0, r0
    e214:	add	r3, pc, #608	; (adr r3, e478 <error@@Base+0x181c>)
    e216:	movs	r0, r0
    e218:	add	r1, sp, #24
    e21a:	movs	r0, r0
    e21c:	add	r3, pc, #480	; (adr r3, e400 <error@@Base+0x17a4>)
    e21e:	movs	r0, r0
    e220:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e224:	mov	r6, r0
    e226:	ldr	r0, [r0, #24]
    e228:	mov	r7, r1
    e22a:	bl	10654 <error@@Base+0x39f8>
    e22e:	cbnz	r0, e23c <error@@Base+0x15e0>
    e230:	ldr	r3, [r6, #24]
    e232:	cmp	r3, r7
    e234:	beq.n	e23c <error@@Base+0x15e0>
    e236:	movs	r0, #0
    e238:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e23c:	ldr	r3, [r6, #16]
    e23e:	ands.w	r5, r3, #2
    e242:	bne.n	e236 <error@@Base+0x15da>
    e244:	lsls	r3, r3, #27
    e246:	it	pl
    e248:	movpl	r0, #1
    e24a:	bpl.n	e238 <error@@Base+0x15dc>
    e24c:	ldr	r0, [r6, #28]
    e24e:	blx	26f8 <getgrgid@plt>
    e252:	mov	r8, r0
    e254:	cmp	r0, #0
    e256:	beq.n	e236 <error@@Base+0x15da>
    e258:	blx	2838 <getpwent@plt>
    e25c:	mov	r4, r0
    e25e:	cbz	r0, e284 <error@@Base+0x1628>
    e260:	ldr	r2, [r4, #12]
    e262:	ldr.w	r3, [r8, #8]
    e266:	cmp	r2, r3
    e268:	bne.n	e258 <error@@Base+0x15fc>
    e26a:	mov	r0, r5
    e26c:	movs	r1, #1
    e26e:	bl	14d50 <strvisx@@Base+0xfdc>
    e272:	ldr	r3, [r4, #8]
    e274:	cmp	r7, r3
    e276:	mov	r5, r0
    e278:	bne.n	e236 <error@@Base+0x15da>
    e27a:	blx	2838 <getpwent@plt>
    e27e:	mov	r4, r0
    e280:	cmp	r0, #0
    e282:	bne.n	e260 <error@@Base+0x1604>
    e284:	blx	277c <endpwent@plt>
    e288:	ldr	r0, [r6, #24]
    e28a:	blx	24ec <getpwuid@plt>
    e28e:	cmp	r0, #0
    e290:	beq.n	e236 <error@@Base+0x15da>
    e292:	ldr.w	r4, [r8, #12]
    e296:	ldr	r1, [r4, #0]
    e298:	cbz	r1, e2ae <error@@Base+0x1652>
    e29a:	ldr	r0, [r0, #0]
    e29c:	blx	28dc <strcmp@plt+0x4>
    e2a0:	cmp	r0, #0
    e2a2:	bne.n	e236 <error@@Base+0x15da>
    e2a4:	ldr	r0, [r4, #4]
    e2a6:	clz	r0, r0
    e2aa:	lsrs	r0, r0, #5
    e2ac:	b.n	e238 <error@@Base+0x15dc>
    e2ae:	subs	r0, r5, #0
    e2b0:	it	ne
    e2b2:	movne	r0, #1
    e2b4:	b.n	e238 <error@@Base+0x15dc>
    e2b6:	nop
    e2b8:	b.w	13ee4 <strvisx@@Base+0x170>
    e2bc:	ldr	r0, [pc, #168]	; (e368 <error@@Base+0x170c>)
    e2be:	movs	r1, #2
    e2c0:	push	{r3, r4, r5, r6, r7, lr}
    e2c2:	add	r0, pc
    e2c4:	blx	2578 <open64@plt>
    e2c8:	ldr	r7, [pc, #160]	; (e36c <error@@Base+0x1710>)
    e2ca:	add	r7, pc
    e2cc:	adds	r3, r0, #1
    e2ce:	beq.n	e342 <error@@Base+0x16e6>
    e2d0:	movs	r1, #1
    e2d2:	mov	r6, r0
    e2d4:	bl	14d50 <strvisx@@Base+0xfdc>
    e2d8:	cmp	r0, #2
    e2da:	mov	r4, r0
    e2dc:	ble.n	e2ee <error@@Base+0x1692>
    e2de:	b.n	e332 <error@@Base+0x16d6>
    e2e0:	mov	r0, r4
    e2e2:	movs	r1, #1
    e2e4:	bl	14d50 <strvisx@@Base+0xfdc>
    e2e8:	cmp	r0, #3
    e2ea:	mov	r4, r0
    e2ec:	beq.n	e332 <error@@Base+0x16d6>
    e2ee:	movs	r1, #3
    e2f0:	mov	r0, r4
    e2f2:	blx	25a0 <fcntl64@plt>
    e2f6:	adds	r0, #1
    e2f8:	bne.n	e2e0 <error@@Base+0x1684>
    e2fa:	blx	2900 <__errno_location@plt>
    e2fe:	ldr	r3, [r0, #0]
    e300:	mov	r5, r0
    e302:	cmp	r3, #9
    e304:	bne.n	e2e0 <error@@Base+0x1684>
    e306:	mov	r1, r4
    e308:	mov	r0, r6
    e30a:	blx	2734 <dup2@plt>
    e30e:	adds	r0, #1
    e310:	bne.n	e2e0 <error@@Base+0x1684>
    e312:	ldr	r3, [pc, #92]	; (e370 <error@@Base+0x1714>)
    e314:	ldr	r0, [r5, #0]
    e316:	ldr	r3, [r7, r3]
    e318:	ldr	r4, [r3, #0]
    e31a:	blx	21f4 <strerror@plt+0x4>
    e31e:	ldr	r2, [pc, #84]	; (e374 <error@@Base+0x1718>)
    e320:	movs	r1, #1
    e322:	add	r2, pc
    e324:	mov	r3, r0
    e326:	mov	r0, r4
    e328:	blx	26bc <__fprintf_chk@plt>
    e32c:	movs	r0, #1
    e32e:	blx	28e8 <exit@plt>
    e332:	cmp	r6, #2
    e334:	bgt.n	e338 <error@@Base+0x16dc>
    e336:	pop	{r3, r4, r5, r6, r7, pc}
    e338:	mov	r0, r6
    e33a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    e33e:	b.w	25e8 <close@plt>
    e342:	ldr	r3, [pc, #44]	; (e370 <error@@Base+0x1714>)
    e344:	ldr	r3, [r7, r3]
    e346:	ldr	r4, [r3, #0]
    e348:	blx	2900 <__errno_location@plt>
    e34c:	ldr	r0, [r0, #0]
    e34e:	blx	21f4 <strerror@plt+0x4>
    e352:	ldr	r2, [pc, #36]	; (e378 <error@@Base+0x171c>)
    e354:	movs	r1, #1
    e356:	add	r2, pc
    e358:	mov	r3, r0
    e35a:	mov	r0, r4
    e35c:	blx	26bc <__fprintf_chk@plt>
    e360:	movs	r0, #1
    e362:	blx	28e8 <exit@plt>
    e366:	nop
    e368:	add	r2, pc, #904	; (adr r2, e6f4 <error@@Base+0x1a98>)
    e36a:	movs	r0, r0
    e36c:	rev	r6, r6
    e36e:	movs	r1, r0
    e370:	lsls	r4, r4, #11
    e372:	movs	r0, r0
    e374:	ldr	r6, [r1, #116]	; 0x74
    e376:	movs	r0, r0
    e378:	add	r2, pc, #360	; (adr r2, e4e4 <error@@Base+0x1888>)
    e37a:	movs	r0, r0
    e37c:	ldr	r2, [pc, #140]	; (e40c <error@@Base+0x17b0>)
    e37e:	cmp.w	r1, #65536	; 0x10000
    e382:	ldr	r3, [pc, #140]	; (e410 <error@@Base+0x17b4>)
    e384:	add	r2, pc
    e386:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    e38a:	sub	sp, #20
    e38c:	ldr	r3, [r2, r3]
    e38e:	ldr	r3, [r3, #0]
    e390:	str	r3, [sp, #12]
    e392:	mov.w	r3, #0
    e396:	bhi.n	e3fa <error@@Base+0x179e>
    e398:	mov.w	r8, r1, lsl #1
    e39c:	mov	r4, r0
    e39e:	movs	r0, #1
    e3a0:	add	r8, r0
    e3a2:	mov	r5, r1
    e3a4:	mov	r1, r8
    e3a6:	bl	cf00 <error@@Base+0x2a4>
    e3aa:	mov	r7, r0
    e3ac:	cbz	r5, e3e2 <error@@Base+0x1786>
    e3ae:	ldr.w	r9, [pc, #100]	; e414 <error@@Base+0x17b8>
    e3b2:	subs	r5, #1
    e3b4:	add	r5, r4
    e3b6:	add	r6, sp, #8
    e3b8:	add	r9, pc
    e3ba:	subs	r4, #1
    e3bc:	ldrb.w	ip, [r4, #1]!
    e3c0:	movs	r3, #3
    e3c2:	mov	r1, r3
    e3c4:	movs	r2, #1
    e3c6:	mov	r0, r6
    e3c8:	str.w	r9, [sp]
    e3cc:	str.w	ip, [sp, #4]
    e3d0:	blx	25b8 <__snprintf_chk@plt>
    e3d4:	mov	r2, r8
    e3d6:	mov	r1, r6
    e3d8:	mov	r0, r7
    e3da:	bl	134a8 <strlcat@@Base>
    e3de:	cmp	r4, r5
    e3e0:	bne.n	e3bc <error@@Base+0x1760>
    e3e2:	ldr	r2, [pc, #52]	; (e418 <error@@Base+0x17bc>)
    e3e4:	ldr	r3, [pc, #40]	; (e410 <error@@Base+0x17b4>)
    e3e6:	add	r2, pc
    e3e8:	ldr	r3, [r2, r3]
    e3ea:	ldr	r2, [r3, #0]
    e3ec:	ldr	r3, [sp, #12]
    e3ee:	eors	r2, r3
    e3f0:	bne.n	e406 <error@@Base+0x17aa>
    e3f2:	mov	r0, r7
    e3f4:	add	sp, #20
    e3f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    e3fa:	ldr	r0, [pc, #32]	; (e41c <error@@Base+0x17c0>)
    e3fc:	add	r0, pc
    e3fe:	bl	cf84 <error@@Base+0x328>
    e402:	mov	r7, r0
    e404:	b.n	e3e2 <error@@Base+0x1786>
    e406:	blx	2698 <__stack_chk_fail@plt>
    e40a:	nop
    e40c:	cbnz	r4, e42e <error@@Base+0x17d2>
    e40e:	movs	r1, r0
    e410:	lsls	r0, r0, #11
    e412:	movs	r0, r0
    e414:	add	r2, pc, #192	; (adr r2, e4d8 <error@@Base+0x187c>)
    e416:	movs	r0, r0
    e418:	cbnz	r2, e422 <error@@Base+0x17c6>
    e41a:	movs	r1, r0
    e41c:	add	r1, pc, #848	; (adr r1, e770 <error@@Base+0x1b14>)
    e41e:	movs	r0, r0
    e420:	push	{r2, r3}
    e422:	push	{r4, r5, r6, lr}
    e424:	sub	sp, #24
    e426:	ldr	r6, [pc, #124]	; (e4a4 <error@@Base+0x1848>)
    e428:	add	r2, sp, #40	; 0x28
    e42a:	mov	r5, r1
    e42c:	ldr	r1, [pc, #120]	; (e4a8 <error@@Base+0x184c>)
    e42e:	add	r6, pc
    e430:	ldr.w	r3, [r2], #4
    e434:	mov	r4, r0
    e436:	add	r0, sp, #12
    e438:	ldr	r1, [r6, r1]
    e43a:	ldr	r1, [r1, #0]
    e43c:	str	r1, [sp, #20]
    e43e:	mov.w	r1, #0
    e442:	mov	r1, r3
    e444:	str	r2, [sp, #8]
    e446:	bl	cfa8 <error@@Base+0x34c>
    e44a:	ldr	r2, [r4, #0]
    e44c:	cbz	r2, e48e <error@@Base+0x1832>
    e44e:	ldrb	r3, [r2, #0]
    e450:	cbz	r3, e48e <error@@Base+0x1832>
    e452:	cbz	r5, e49a <error@@Base+0x183e>
    e454:	ldr	r6, [sp, #12]
    e456:	mov	r3, r5
    e458:	ldr	r1, [pc, #80]	; (e4ac <error@@Base+0x1850>)
    e45a:	add	r0, sp, #16
    e45c:	add	r1, pc
    e45e:	str	r6, [sp, #0]
    e460:	bl	cfcc <error@@Base+0x370>
    e464:	ldr	r0, [sp, #12]
    e466:	blx	23f8 <free@plt+0x4>
    e46a:	ldr	r0, [r4, #0]
    e46c:	blx	23f8 <free@plt+0x4>
    e470:	ldr	r3, [sp, #16]
    e472:	str	r3, [r4, #0]
    e474:	ldr	r2, [pc, #56]	; (e4b0 <error@@Base+0x1854>)
    e476:	ldr	r3, [pc, #48]	; (e4a8 <error@@Base+0x184c>)
    e478:	add	r2, pc
    e47a:	ldr	r3, [r2, r3]
    e47c:	ldr	r2, [r3, #0]
    e47e:	ldr	r3, [sp, #20]
    e480:	eors	r2, r3
    e482:	bne.n	e4a0 <error@@Base+0x1844>
    e484:	add	sp, #24
    e486:	ldmia.w	sp!, {r4, r5, r6, lr}
    e48a:	add	sp, #8
    e48c:	bx	lr
    e48e:	mov	r0, r2
    e490:	blx	23f8 <free@plt+0x4>
    e494:	ldr	r3, [sp, #12]
    e496:	str	r3, [r4, #0]
    e498:	b.n	e474 <error@@Base+0x1818>
    e49a:	ldr	r5, [pc, #24]	; (e4b4 <error@@Base+0x1858>)
    e49c:	add	r5, pc
    e49e:	b.n	e454 <error@@Base+0x17f8>
    e4a0:	blx	2698 <__stack_chk_fail@plt>
    e4a4:			; <UNDEFINED> instruction: 0xb8d2
    e4a6:	movs	r1, r0
    e4a8:	lsls	r0, r0, #11
    e4aa:	movs	r0, r0
    e4ac:	add	r0, pc, #464	; (adr r0, e680 <error@@Base+0x1a24>)
    e4ae:	movs	r0, r0
    e4b0:			; <UNDEFINED> instruction: 0xb888
    e4b2:	movs	r1, r0
    e4b4:	ldr	r4, [r5, #116]	; 0x74
    e4b6:	movs	r0, r0
    e4b8:	ldr	r1, [r0, #0]
    e4ba:	ldr	r0, [r0, #4]
    e4bc:	rev	r1, r1
    e4be:	rev	r0, r0
    e4c0:	bx	lr
    e4c2:	nop
    e4c4:	ldr	r0, [r0, #0]
    e4c6:	rev	r0, r0
    e4c8:	bx	lr
    e4ca:	nop
    e4cc:	ldr	r0, [r0, #0]
    e4ce:	bx	lr
    e4d0:	ldrh	r0, [r0, #0]
    e4d2:	rev16	r0, r0
    e4d4:	uxth	r0, r0
    e4d6:	bx	lr
    e4d8:	push	{r4}
    e4da:	lsrs	r1, r3, #16
    e4dc:	lsrs	r4, r3, #24
    e4de:	strb	r3, [r0, #3]
    e4e0:	strb	r2, [r0, #7]
    e4e2:	lsrs	r3, r3, #8
    e4e4:	strb	r4, [r0, #0]
    e4e6:	strb	r1, [r0, #1]
    e4e8:	lsrs	r1, r2, #24
    e4ea:	strb	r3, [r0, #2]
    e4ec:	lsrs	r3, r2, #16
    e4ee:	ldr.w	r4, [sp], #4
    e4f2:	lsrs	r2, r2, #8
    e4f4:	strb	r1, [r0, #4]
    e4f6:	strb	r3, [r0, #5]
    e4f8:	strb	r2, [r0, #6]
    e4fa:	bx	lr
    e4fc:	lsrs	r2, r1, #24
    e4fe:	lsrs	r3, r1, #16
    e500:	strb	r1, [r0, #3]
    e502:	lsrs	r1, r1, #8
    e504:	strb	r2, [r0, #0]
    e506:	strb	r3, [r0, #1]
    e508:	strb	r1, [r0, #2]
    e50a:	bx	lr
    e50c:	lsrs	r2, r1, #8
    e50e:	lsrs	r3, r1, #16
    e510:	strb	r1, [r0, #0]
    e512:	lsrs	r1, r1, #24
    e514:	strb	r2, [r0, #1]
    e516:	strb	r3, [r0, #2]
    e518:	strb	r1, [r0, #3]
    e51a:	bx	lr
    e51c:	strb	r1, [r0, #1]
    e51e:	lsrs	r1, r1, #8
    e520:	strb	r1, [r0, #0]
    e522:	bx	lr
    e524:	bic.w	r2, r1, r1, asr #31
    e528:	movw	r3, #19923	; 0x4dd3
    e52c:	movt	r3, #4194	; 0x1062
    e530:	mov.w	r1, #1000	; 0x3e8
    e534:	push	{r4, lr}
    e536:	umull	r4, r3, r3, r2
    e53a:	mov	r4, r0
    e53c:	lsrs	r3, r3, #6
    e53e:	str	r3, [r0, #0]
    e540:	mls	r0, r1, r3, r2
    e544:	bl	14e18 <strvisx@@Base+0x10a4>
    e548:	str	r0, [r4, #4]
    e54a:	pop	{r4, pc}
    e54c:	push	{r4, r5, r6, lr}
    e54e:	sub	sp, #16
    e550:	ldr	r6, [pc, #132]	; (e5d8 <error@@Base+0x197c>)
    e552:	mov	r4, r0
    e554:	ldr	r2, [pc, #132]	; (e5dc <error@@Base+0x1980>)
    e556:	ldr	r3, [pc, #136]	; (e5e0 <error@@Base+0x1984>)
    e558:	add	r6, pc
    e55a:	add	r2, pc
    e55c:	ldr	r5, [r6, #0]
    e55e:	ldr	r3, [r2, r3]
    e560:	ldr	r3, [r3, #0]
    e562:	str	r3, [sp, #12]
    e564:	mov.w	r3, #0
    e568:	cbnz	r5, e5b8 <error@@Base+0x195c>
    e56a:	mov	r1, r0
    e56c:	movs	r0, #7
    e56e:	blx	2284 <clock_gettime@plt>
    e572:	cbnz	r0, e588 <error@@Base+0x192c>
    e574:	ldr	r2, [pc, #108]	; (e5e4 <error@@Base+0x1988>)
    e576:	ldr	r3, [pc, #104]	; (e5e0 <error@@Base+0x1984>)
    e578:	add	r2, pc
    e57a:	ldr	r3, [r2, r3]
    e57c:	ldr	r2, [r3, #0]
    e57e:	ldr	r3, [sp, #12]
    e580:	eors	r2, r3
    e582:	bne.n	e5d2 <error@@Base+0x1976>
    e584:	add	sp, #16
    e586:	pop	{r4, r5, r6, pc}
    e588:	mov	r1, r4
    e58a:	movs	r0, #1
    e58c:	blx	2284 <clock_gettime@plt>
    e590:	cmp	r0, #0
    e592:	beq.n	e574 <error@@Base+0x1918>
    e594:	mov	r0, r5
    e596:	mov	r1, r4
    e598:	blx	2284 <clock_gettime@plt>
    e59c:	cmp	r0, #0
    e59e:	beq.n	e574 <error@@Base+0x1918>
    e5a0:	blx	2900 <__errno_location@plt>
    e5a4:	ldr	r0, [r0, #0]
    e5a6:	blx	21f4 <strerror@plt+0x4>
    e5aa:	mov	r1, r0
    e5ac:	ldr	r0, [pc, #56]	; (e5e8 <error@@Base+0x198c>)
    e5ae:	add	r0, pc
    e5b0:	bl	ce38 <error@@Base+0x1dc>
    e5b4:	movs	r3, #1
    e5b6:	str	r3, [r6, #0]
    e5b8:	movs	r1, #0
    e5ba:	add	r0, sp, #4
    e5bc:	blx	2428 <gettimeofday@plt>
    e5c0:	ldr	r3, [sp, #4]
    e5c2:	ldr	r0, [sp, #8]
    e5c4:	mov.w	r1, #1000	; 0x3e8
    e5c8:	str	r3, [r4, #0]
    e5ca:	bl	14e18 <strvisx@@Base+0x10a4>
    e5ce:	str	r0, [r4, #4]
    e5d0:	b.n	e574 <error@@Base+0x1918>
    e5d2:	blx	2698 <__stack_chk_fail@plt>
    e5d6:	nop
    e5d8:	vhadd.s8	d16, d0, d1
    e5dc:			; <UNDEFINED> instruction: 0xb7a6
    e5de:	movs	r1, r0
    e5e0:	lsls	r0, r0, #11
    e5e2:	movs	r0, r0
    e5e4:			; <UNDEFINED> instruction: 0xb788
    e5e6:	movs	r1, r0
    e5e8:	add	r0, pc, #264	; (adr r0, e6f4 <error@@Base+0x1a98>)
    e5ea:	movs	r0, r0
    e5ec:	ldr	r2, [pc, #164]	; (e694 <error@@Base+0x1a38>)
    e5ee:	ldr	r3, [pc, #168]	; (e698 <error@@Base+0x1a3c>)
    e5f0:	add	r2, pc
    e5f2:	push	{r4, r5, r6, r7, lr}
    e5f4:	sub	sp, #20
    e5f6:	ldr	r3, [r2, r3]
    e5f8:	mov	r7, r0
    e5fa:	add	r0, sp, #4
    e5fc:	mov	r5, r1
    e5fe:	ldr	r3, [r3, #0]
    e600:	str	r3, [sp, #12]
    e602:	mov.w	r3, #0
    e606:	bl	e54c <error@@Base+0x18f0>
    e60a:	ldr	r3, [sp, #8]
    e60c:	movw	r4, #19923	; 0x4dd3
    e610:	movt	r4, #4194	; 0x1062
    e614:	ldr	r1, [r7, #0]
    e616:	ldr	r0, [sp, #4]
    e618:	smull	r2, r4, r4, r3
    e61c:	asrs	r3, r3, #31
    e61e:	rsb	r4, r3, r4, asr #6
    e622:	bl	14db4 <strvisx@@Base+0x1040>
    e626:	ldr	r1, [r7, #4]
    e628:	mov	r6, r0
    e62a:	mov	r0, r4
    e62c:	bl	14db4 <strvisx@@Base+0x1040>
    e630:	subs	r4, r0, #0
    e632:	bge.n	e650 <error@@Base+0x19f4>
    e634:	mov	r0, r6
    e636:	mov.w	r1, #4294967295	; 0xffffffff
    e63a:	bl	14d50 <strvisx@@Base+0xfdc>
    e63e:	movw	r1, #16960	; 0x4240
    e642:	movt	r1, #15
    e646:	mov	r6, r0
    e648:	mov	r0, r4
    e64a:	bl	14d50 <strvisx@@Base+0xfdc>
    e64e:	mov	r4, r0
    e650:	mov.w	r1, #1000	; 0x3e8
    e654:	mov	r0, r6
    e656:	bl	14e18 <strvisx@@Base+0x10a4>
    e65a:	movw	r3, #19923	; 0x4dd3
    e65e:	movt	r3, #4194	; 0x1062
    e662:	asrs	r1, r4, #31
    e664:	smull	r3, r4, r3, r4
    e668:	rsb	r1, r1, r4, asr #6
    e66c:	bl	14d50 <strvisx@@Base+0xfdc>
    e670:	mov	r1, r0
    e672:	ldr	r0, [r5, #0]
    e674:	bl	14db4 <strvisx@@Base+0x1040>
    e678:	ldr	r2, [pc, #32]	; (e69c <error@@Base+0x1a40>)
    e67a:	ldr	r3, [pc, #28]	; (e698 <error@@Base+0x1a3c>)
    e67c:	add	r2, pc
    e67e:	str	r0, [r5, #0]
    e680:	ldr	r3, [r2, r3]
    e682:	ldr	r2, [r3, #0]
    e684:	ldr	r3, [sp, #12]
    e686:	eors	r2, r3
    e688:	bne.n	e68e <error@@Base+0x1a32>
    e68a:	add	sp, #20
    e68c:	pop	{r4, r5, r6, r7, pc}
    e68e:	blx	2698 <__stack_chk_fail@plt>
    e692:	nop
    e694:			; <UNDEFINED> instruction: 0xb710
    e696:	movs	r1, r0
    e698:	lsls	r0, r0, #11
    e69a:	movs	r0, r0
    e69c:			; <UNDEFINED> instruction: 0xb684
    e69e:	movs	r1, r0
    e6a0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    e6a4:	mov	r6, r2
    e6a6:	ldr	r2, [pc, #172]	; (e754 <error@@Base+0x1af8>)
    e6a8:	sub	sp, #28
    e6aa:	ldr	r3, [pc, #172]	; (e758 <error@@Base+0x1afc>)
    e6ac:	add.w	r8, sp, #12
    e6b0:	add	r2, pc
    e6b2:	mov	r5, r0
    e6b4:	mov	r0, r8
    e6b6:	mov	r7, r1
    e6b8:	ldr	r3, [r2, r3]
    e6ba:	add.w	r9, sp, #4
    e6be:	ldr	r3, [r3, #0]
    e6c0:	str	r3, [sp, #20]
    e6c2:	mov.w	r3, #0
    e6c6:	bl	e54c <error@@Base+0x18f0>
    e6ca:	ldr	r3, [sp, #16]
    e6cc:	movw	r1, #19923	; 0x4dd3
    e6d0:	movt	r1, #4194	; 0x1062
    e6d4:	ldr	r4, [sp, #12]
    e6d6:	strh.w	r6, [sp, #16]
    e6da:	smull	r2, r1, r1, r3
    e6de:	asrs	r3, r3, #31
    e6e0:	str	r5, [sp, #12]
    e6e2:	str	r4, [sp, #4]
    e6e4:	rsb	r3, r3, r1, asr #6
    e6e8:	str	r3, [sp, #8]
    e6ea:	blx	2900 <__errno_location@plt>
    e6ee:	mov	r6, r0
    e6f0:	b.n	e722 <error@@Base+0x1ac6>
    e6f2:	movs	r1, #1
    e6f4:	mov	r0, r8
    e6f6:	blx	26c8 <poll@plt>
    e6fa:	ldr	r5, [r6, #0]
    e6fc:	mov	r1, r7
    e6fe:	mov	r4, r0
    e700:	mov	r0, r9
    e702:	bl	e5ec <error@@Base+0x1990>
    e706:	cmp	r4, #0
    e708:	str	r5, [r6, #0]
    e70a:	bgt.n	e746 <error@@Base+0x1aea>
    e70c:	sub.w	r3, r4, #4294967295	; 0xffffffff
    e710:	cmp	r5, #11
    e712:	clz	r3, r3
    e716:	mov.w	r3, r3, lsr #5
    e71a:	it	eq
    e71c:	moveq	r3, #0
    e71e:	cbnz	r3, e74a <error@@Base+0x1aee>
    e720:	cbz	r4, e728 <error@@Base+0x1acc>
    e722:	ldr	r2, [r7, #0]
    e724:	cmp	r2, #0
    e726:	bge.n	e6f2 <error@@Base+0x1a96>
    e728:	mov.w	r0, #4294967295	; 0xffffffff
    e72c:	movs	r3, #110	; 0x6e
    e72e:	str	r3, [r6, #0]
    e730:	ldr	r2, [pc, #40]	; (e75c <error@@Base+0x1b00>)
    e732:	ldr	r3, [pc, #36]	; (e758 <error@@Base+0x1afc>)
    e734:	add	r2, pc
    e736:	ldr	r3, [r2, r3]
    e738:	ldr	r2, [r3, #0]
    e73a:	ldr	r3, [sp, #20]
    e73c:	eors	r2, r3
    e73e:	bne.n	e750 <error@@Base+0x1af4>
    e740:	add	sp, #28
    e742:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    e746:	movs	r0, #0
    e748:	b.n	e730 <error@@Base+0x1ad4>
    e74a:	mov.w	r0, #4294967295	; 0xffffffff
    e74e:	b.n	e730 <error@@Base+0x1ad4>
    e750:	blx	2698 <__stack_chk_fail@plt>
    e754:	setend	le
    e756:	movs	r1, r0
    e758:	lsls	r0, r0, #11
    e75a:	movs	r0, r0
    e75c:	push	{r2, r3, r6, r7, lr}
    e75e:	movs	r1, r0
    e760:	movs	r2, #1
    e762:	b.n	e6a0 <error@@Base+0x1a44>
    e764:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    e768:	mov	r5, r1
    e76a:	ldr	r1, [pc, #192]	; (e82c <error@@Base+0x1bd0>)
    e76c:	mov	r6, r2
    e76e:	ldr	r2, [pc, #192]	; (e830 <error@@Base+0x1bd4>)
    e770:	sub	sp, #24
    e772:	add	r1, pc
    e774:	mov	r4, r3
    e776:	movs	r7, #4
    e778:	movs	r3, #0
    e77a:	ldr	r2, [r1, r2]
    e77c:	mov	r8, r0
    e77e:	ldr	r2, [r2, #0]
    e780:	str	r2, [sp, #20]
    e782:	mov.w	r2, #0
    e786:	strd	r3, r7, [sp, #12]
    e78a:	cmp	r4, #0
    e78c:	beq.n	e7f8 <error@@Base+0x1b9c>
    e78e:	ldr	r3, [r4, #0]
    e790:	cmp	r3, #0
    e792:	ble.n	e7f8 <error@@Base+0x1b9c>
    e794:	bl	d4ec <error@@Base+0x890>
    e798:	mov	r2, r6
    e79a:	mov	r1, r5
    e79c:	mov	r0, r8
    e79e:	blx	223c <connect@plt>
    e7a2:	cbz	r0, e7d8 <error@@Base+0x1b7c>
    e7a4:	blx	2900 <__errno_location@plt>
    e7a8:	ldr	r3, [r0, #0]
    e7aa:	mov	r5, r0
    e7ac:	cmp	r3, #115	; 0x73
    e7ae:	bne.n	e806 <error@@Base+0x1baa>
    e7b0:	mov	r1, r4
    e7b2:	movs	r2, #5
    e7b4:	mov	r0, r8
    e7b6:	bl	e6a0 <error@@Base+0x1a44>
    e7ba:	adds	r0, #1
    e7bc:	beq.n	e806 <error@@Base+0x1baa>
    e7be:	add	r3, sp, #12
    e7c0:	add	r1, sp, #16
    e7c2:	mov	r2, r7
    e7c4:	str	r1, [sp, #0]
    e7c6:	mov	r0, r8
    e7c8:	movs	r1, #1
    e7ca:	blx	2890 <getsockopt@plt>
    e7ce:	adds	r3, r0, #1
    e7d0:	mov	r4, r0
    e7d2:	beq.n	e814 <error@@Base+0x1bb8>
    e7d4:	ldr	r3, [sp, #12]
    e7d6:	cbnz	r3, e80c <error@@Base+0x1bb0>
    e7d8:	mov	r0, r8
    e7da:	movs	r4, #0
    e7dc:	bl	d574 <error@@Base+0x918>
    e7e0:	ldr	r2, [pc, #80]	; (e834 <error@@Base+0x1bd8>)
    e7e2:	ldr	r3, [pc, #76]	; (e830 <error@@Base+0x1bd4>)
    e7e4:	add	r2, pc
    e7e6:	ldr	r3, [r2, r3]
    e7e8:	ldr	r2, [r3, #0]
    e7ea:	ldr	r3, [sp, #20]
    e7ec:	eors	r2, r3
    e7ee:	bne.n	e826 <error@@Base+0x1bca>
    e7f0:	mov	r0, r4
    e7f2:	add	sp, #24
    e7f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    e7f8:	mov	r2, r6
    e7fa:	mov	r1, r5
    e7fc:	mov	r0, r8
    e7fe:	blx	223c <connect@plt>
    e802:	mov	r4, r0
    e804:	b.n	e7e0 <error@@Base+0x1b84>
    e806:	mov.w	r4, #4294967295	; 0xffffffff
    e80a:	b.n	e7e0 <error@@Base+0x1b84>
    e80c:	mov.w	r4, #4294967295	; 0xffffffff
    e810:	str	r3, [r5, #0]
    e812:	b.n	e7e0 <error@@Base+0x1b84>
    e814:	ldr	r0, [r5, #0]
    e816:	blx	21f4 <strerror@plt+0x4>
    e81a:	mov	r1, r0
    e81c:	ldr	r0, [pc, #24]	; (e838 <error@@Base+0x1bdc>)
    e81e:	add	r0, pc
    e820:	bl	cd90 <error@@Base+0x134>
    e824:	b.n	e7e0 <error@@Base+0x1b84>
    e826:	blx	2698 <__stack_chk_fail@plt>
    e82a:	nop
    e82c:	push	{r1, r2, r3, r7, lr}
    e82e:	movs	r1, r0
    e830:	lsls	r0, r0, #11
    e832:	movs	r0, r0
    e834:	push	{r2, r3, r4, lr}
    e836:	movs	r1, r0
    e838:	ldr	r5, [sp, #920]	; 0x398
    e83a:	movs	r0, r0
    e83c:	ldr	r2, [pc, #76]	; (e88c <error@@Base+0x1c30>)
    e83e:	ldr	r3, [pc, #80]	; (e890 <error@@Base+0x1c34>)
    e840:	add	r2, pc
    e842:	push	{r4, lr}
    e844:	sub	sp, #16
    e846:	ldr	r3, [r2, r3]
    e848:	mov	r4, r0
    e84a:	add	r0, sp, #4
    e84c:	ldr	r3, [r3, #0]
    e84e:	str	r3, [sp, #12]
    e850:	mov.w	r3, #0
    e854:	bl	e54c <error@@Base+0x18f0>
    e858:	ldr	r3, [sp, #8]
    e85a:	movw	r2, #19923	; 0x4dd3
    e85e:	movt	r2, #4194	; 0x1062
    e862:	ldr	r1, [sp, #4]
    e864:	smull	r0, r2, r2, r3
    e868:	asrs	r3, r3, #31
    e86a:	str	r1, [r4, #0]
    e86c:	rsb	r3, r3, r2, asr #6
    e870:	ldr	r2, [pc, #32]	; (e894 <error@@Base+0x1c38>)
    e872:	str	r3, [r4, #4]
    e874:	ldr	r3, [pc, #24]	; (e890 <error@@Base+0x1c34>)
    e876:	add	r2, pc
    e878:	ldr	r3, [r2, r3]
    e87a:	ldr	r2, [r3, #0]
    e87c:	ldr	r3, [sp, #12]
    e87e:	eors	r2, r3
    e880:	bne.n	e886 <error@@Base+0x1c2a>
    e882:	add	sp, #16
    e884:	pop	{r4, pc}
    e886:	blx	2698 <__stack_chk_fail@plt>
    e88a:	nop
    e88c:	push	{r6, r7}
    e88e:	movs	r1, r0
    e890:	lsls	r0, r0, #11
    e892:	movs	r0, r0
    e894:	push	{r1, r3, r7}
    e896:	movs	r1, r0
    e898:	ldr	r2, [pc, #52]	; (e8d0 <error@@Base+0x1c74>)
    e89a:	ldr	r3, [pc, #56]	; (e8d4 <error@@Base+0x1c78>)
    e89c:	add	r2, pc
    e89e:	push	{lr}
    e8a0:	sub	sp, #20
    e8a2:	ldr	r3, [r2, r3]
    e8a4:	add	r0, sp, #4
    e8a6:	ldr	r3, [r3, #0]
    e8a8:	str	r3, [sp, #12]
    e8aa:	mov.w	r3, #0
    e8ae:	bl	e54c <error@@Base+0x18f0>
    e8b2:	ldr	r2, [pc, #36]	; (e8d8 <error@@Base+0x1c7c>)
    e8b4:	ldr	r3, [pc, #28]	; (e8d4 <error@@Base+0x1c78>)
    e8b6:	add	r2, pc
    e8b8:	ldr	r0, [sp, #4]
    e8ba:	ldr	r3, [r2, r3]
    e8bc:	ldr	r2, [r3, #0]
    e8be:	ldr	r3, [sp, #12]
    e8c0:	eors	r2, r3
    e8c2:	bne.n	e8ca <error@@Base+0x1c6e>
    e8c4:	add	sp, #20
    e8c6:	ldr.w	pc, [sp], #4
    e8ca:	blx	2698 <__stack_chk_fail@plt>
    e8ce:	nop
    e8d0:	push	{r2, r5, r6}
    e8d2:	movs	r1, r0
    e8d4:	lsls	r0, r0, #11
    e8d6:	movs	r0, r0
    e8d8:	push	{r1, r3, r6}
    e8da:	movs	r1, r0
    e8dc:	ldr	r2, [pc, #88]	; (e938 <error@@Base+0x1cdc>)
    e8de:	ldr	r3, [pc, #92]	; (e93c <error@@Base+0x1ce0>)
    e8e0:	add	r2, pc
    e8e2:	push	{lr}
    e8e4:	sub	sp, #20
    e8e6:	ldr	r3, [r2, r3]
    e8e8:	add	r0, sp, #4
    e8ea:	ldr	r3, [r3, #0]
    e8ec:	str	r3, [sp, #12]
    e8ee:	mov.w	r3, #0
    e8f2:	bl	e54c <error@@Base+0x18f0>
    e8f6:	vldr	s15, [sp, #8]
    e8fa:	ldr	r2, [pc, #68]	; (e940 <error@@Base+0x1ce4>)
    e8fc:	ldr	r3, [pc, #60]	; (e93c <error@@Base+0x1ce0>)
    e8fe:	vldr	d5, [pc, #48]	; e930 <error@@Base+0x1cd4>
    e902:	add	r2, pc
    e904:	ldr	r3, [r2, r3]
    e906:	vcvt.f64.s32	d7, s15
    e90a:	ldr	r2, [r3, #0]
    e90c:	ldr	r3, [sp, #12]
    e90e:	eors	r2, r3
    e910:	vdiv.f64	d6, d7, d5
    e914:	vldr	s15, [sp, #4]
    e918:	vcvt.f64.s32	d0, s15
    e91c:	vadd.f64	d0, d6, d0
    e920:	bne.n	e928 <error@@Base+0x1ccc>
    e922:	add	sp, #20
    e924:	ldr.w	pc, [sp], #4
    e928:	blx	2698 <__stack_chk_fail@plt>
    e92c:	nop.w
    e930:	movs	r0, r0
    e932:	movs	r0, r0
    e934:	ldmia	r5, {r0, r2, r5, r6}
    e936:	rors	r5, r1
    e938:	push	{r5}
    e93a:	movs	r1, r0
    e93c:	lsls	r0, r0, #11
    e93e:	movs	r0, r0
    e940:	cbz	r6, e9c2 <error@@Base+0x1d66>
    e942:	movs	r1, r0
    e944:	push	{r4, r5}
    e946:	mov	r5, r3
    e948:	ldr	r1, [sp, #8]
    e94a:	movs	r3, #0
    e94c:	mov	r4, r2
    e94e:	strd	r3, r3, [r0, #32]
    e952:	strd	r4, r5, [r0, #8]
    e956:	movs	r4, #0
    e958:	movs	r5, #0
    e95a:	str	r1, [r0, #0]
    e95c:	strd	r4, r5, [r0, #24]
    e960:	strd	r1, r3, [r0, #16]
    e964:	pop	{r4, r5}
    e966:	strd	r3, r3, [r0, #40]	; 0x28
    e96a:	bx	lr
    e96c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e970:	mov	r4, r0
    e972:	vpush	{d8}
    e976:	ldr	r2, [pc, #568]	; (ebb0 <error@@Base+0x1f54>)
    e978:	ldr	r3, [pc, #568]	; (ebb4 <error@@Base+0x1f58>)
    e97a:	add	r2, pc
    e97c:	sub	sp, #44	; 0x2c
    e97e:	ldrd	r6, r7, [r0, #24]
    e982:	ldr	r3, [r2, r3]
    e984:	adds	r6, r6, r1
    e986:	ldr	r3, [r3, #0]
    e988:	str	r3, [sp, #36]	; 0x24
    e98a:	mov.w	r3, #0
    e98e:	ldr	r3, [r0, #32]
    e990:	adc.w	r7, r7, #0
    e994:	strd	r6, r7, [r0, #24]
    e998:	cbnz	r3, e9a2 <error@@Base+0x1d46>
    e99a:	ldr	r3, [r0, #36]	; 0x24
    e99c:	add	r0, sp, #28
    e99e:	cmp	r3, #0
    e9a0:	beq.n	ea88 <error@@Base+0x1e2c>
    e9a2:	ldrd	r2, r3, [r4, #16]
    e9a6:	cmp	r7, r3
    e9a8:	it	eq
    e9aa:	cmpeq	r6, r2
    e9ac:	bcs.n	e9ca <error@@Base+0x1d6e>
    e9ae:	ldr	r2, [pc, #520]	; (ebb8 <error@@Base+0x1f5c>)
    e9b0:	ldr	r3, [pc, #512]	; (ebb4 <error@@Base+0x1f58>)
    e9b2:	add	r2, pc
    e9b4:	ldr	r3, [r2, r3]
    e9b6:	ldr	r2, [r3, #0]
    e9b8:	ldr	r3, [sp, #36]	; 0x24
    e9ba:	eors	r2, r3
    e9bc:	bne.w	eba4 <error@@Base+0x1f48>
    e9c0:	add	sp, #44	; 0x2c
    e9c2:	vpop	{d8}
    e9c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e9ca:	add	r7, sp, #28
    e9cc:	movw	r5, #19923	; 0x4dd3
    e9d0:	movt	r5, #4194	; 0x1062
    e9d4:	mov	r0, r7
    e9d6:	bl	e54c <error@@Base+0x18f0>
    e9da:	ldr	r3, [sp, #32]
    e9dc:	ldr	r1, [r4, #32]
    e9de:	ldr	r0, [sp, #28]
    e9e0:	smull	r2, r5, r5, r3
    e9e4:	asrs	r3, r3, #31
    e9e6:	rsb	r5, r3, r5, asr #6
    e9ea:	bl	14db4 <strvisx@@Base+0x1040>
    e9ee:	ldr	r1, [r4, #36]	; 0x24
    e9f0:	mov	r3, r0
    e9f2:	mov	r0, r5
    e9f4:	str	r3, [r4, #40]	; 0x28
    e9f6:	mov	r5, r3
    e9f8:	bl	14db4 <strvisx@@Base+0x1040>
    e9fc:	cmp	r0, #0
    e9fe:	mov	r6, r0
    ea00:	str	r0, [r4, #44]	; 0x2c
    ea02:	blt.w	eb24 <error@@Base+0x1ec8>
    ea06:	cbnz	r5, ea0e <error@@Base+0x1db2>
    ea08:	ldr	r3, [r4, #44]	; 0x2c
    ea0a:	cmp	r3, #0
    ea0c:	beq.n	e9ae <error@@Base+0x1d52>
    ea0e:	ldrd	r0, r1, [r4, #24]
    ea12:	lsls	r1, r1, #3
    ea14:	orr.w	r1, r1, r0, lsr #29
    ea18:	lsls	r0, r0, #3
    ea1a:	strd	r0, r1, [r4, #24]
    ea1e:	bl	149ec <strvisx@@Base+0xc78>
    ea22:	vldr	d7, [pc, #388]	; eba8 <error@@Base+0x1f4c>
    ea26:	vmov	d8, r0, r1
    ea2a:	ldrd	r0, r1, [r4, #8]
    ea2e:	vmul.f64	d8, d8, d7
    ea32:	bl	149ec <strvisx@@Base+0xc78>
    ea36:	vmov	d7, r0, r1
    ea3a:	vdiv.f64	d7, d8, d7
    ea3e:	vmov	r0, r1, d7
    ea42:	bl	14f40 <strvisx@@Base+0x11cc>
    ea46:	movs	r3, #0
    ea48:	movw	r2, #16960	; 0x4240
    ea4c:	movt	r2, #15
    ea50:	mov	sl, r1
    ea52:	mov	fp, r0
    ea54:	bl	14d14 <strvisx@@Base+0xfa0>
    ea58:	mov	r1, sl
    ea5a:	movw	r2, #16960	; 0x4240
    ea5e:	movs	r3, #0
    ea60:	movt	r2, #15
    ea64:	mov	r6, r0
    ea66:	mov	r0, fp
    ea68:	str	r6, [r4, #32]
    ea6a:	bl	14d14 <strvisx@@Base+0xfa0>
    ea6e:	cmp	r6, r5
    ea70:	mov	sl, r2
    ea72:	str	r2, [r4, #36]	; 0x24
    ea74:	beq.n	eb66 <error@@Base+0x1f0a>
    ea76:	ite	gt
    ea78:	movgt	r3, #1
    ea7a:	movle	r3, #0
    ea7c:	cbnz	r3, eaa8 <error@@Base+0x1e4c>
    ea7e:	mov	r0, r7
    ea80:	movs	r2, #0
    ea82:	movs	r3, #0
    ea84:	strd	r2, r3, [r4, #24]
    ea88:	bl	e54c <error@@Base+0x18f0>
    ea8c:	ldr	r3, [sp, #32]
    ea8e:	movw	r2, #19923	; 0x4dd3
    ea92:	movt	r2, #4194	; 0x1062
    ea96:	ldr	r1, [sp, #28]
    ea98:	smull	r0, r2, r2, r3
    ea9c:	asrs	r3, r3, #31
    ea9e:	str	r1, [r4, #32]
    eaa0:	rsb	r3, r3, r2, asr #6
    eaa4:	str	r3, [r4, #36]	; 0x24
    eaa6:	b.n	e9ae <error@@Base+0x1d52>
    eaa8:	mov	r1, r5
    eaaa:	mov	r0, r6
    eaac:	bl	14db4 <strvisx@@Base+0x1040>
    eab0:	ldr	r1, [r4, #44]	; 0x2c
    eab2:	mov	r6, r0
    eab4:	mov	r0, sl
    eab6:	str	r6, [r4, #40]	; 0x28
    eab8:	bl	14db4 <strvisx@@Base+0x1040>
    eabc:	cmp	r0, #0
    eabe:	mov	r5, r0
    eac0:	str	r0, [r4, #44]	; 0x2c
    eac2:	blt.n	eb44 <error@@Base+0x1ee8>
    eac4:	cmp	r6, #0
    eac6:	beq.n	eb76 <error@@Base+0x1f1a>
    eac8:	ldr	r0, [r4, #0]
    eaca:	ldr	r1, [r4, #20]
    eacc:	str	r0, [sp, #4]
    eace:	ldr	r0, [r4, #16]
    ead0:	lsrs	r3, r1, #1
    ead2:	lsrs	r2, r0, #1
    ead4:	ldr	r0, [sp, #4]
    ead6:	orr.w	r2, r2, r1, lsl #31
    eada:	movs	r1, #0
    eadc:	cmp	r3, r1
    eade:	strd	r2, r3, [r4, #16]
    eae2:	mov.w	r0, r0, lsr #2
    eae6:	it	eq
    eae8:	cmpeq	r2, r0
    eaea:	it	cc
    eaec:	strdcc	r0, r1, [r4, #16]
    eaf0:	mov	r0, r5
    eaf2:	mov.w	r1, #1000	; 0x3e8
    eaf6:	str	r6, [sp, #12]
    eaf8:	bl	14e18 <strvisx@@Base+0x10a4>
    eafc:	add	r6, sp, #20
    eafe:	add	r5, sp, #12
    eb00:	str	r0, [sp, #16]
    eb02:	b.n	eb16 <error@@Base+0x1eba>
    eb04:	blx	2900 <__errno_location@plt>
    eb08:	ldr	r3, [r0, #0]
    eb0a:	cmp	r3, #4
    eb0c:	bne.n	ea7e <error@@Base+0x1e22>
    eb0e:	ldmia.w	r6, {r0, r1}
    eb12:	stmia.w	r5, {r0, r1}
    eb16:	mov	r1, r6
    eb18:	mov	r0, r5
    eb1a:	blx	2854 <nanosleep@plt>
    eb1e:	adds	r0, #1
    eb20:	beq.n	eb04 <error@@Base+0x1ea8>
    eb22:	b.n	ea7e <error@@Base+0x1e22>
    eb24:	mov	r0, r5
    eb26:	mov.w	r1, #4294967295	; 0xffffffff
    eb2a:	bl	14d50 <strvisx@@Base+0xfdc>
    eb2e:	movw	r1, #16960	; 0x4240
    eb32:	movt	r1, #15
    eb36:	mov	r5, r0
    eb38:	mov	r0, r6
    eb3a:	str	r5, [r4, #40]	; 0x28
    eb3c:	bl	14d50 <strvisx@@Base+0xfdc>
    eb40:	str	r0, [r4, #44]	; 0x2c
    eb42:	b.n	ea06 <error@@Base+0x1daa>
    eb44:	mov	r0, r6
    eb46:	mov.w	r1, #4294967295	; 0xffffffff
    eb4a:	bl	14d50 <strvisx@@Base+0xfdc>
    eb4e:	movw	r1, #16960	; 0x4240
    eb52:	movt	r1, #15
    eb56:	mov	r6, r0
    eb58:	mov	r0, r5
    eb5a:	str	r6, [r4, #40]	; 0x28
    eb5c:	bl	14d50 <strvisx@@Base+0xfdc>
    eb60:	mov	r5, r0
    eb62:	str	r0, [r4, #44]	; 0x2c
    eb64:	b.n	eac4 <error@@Base+0x1e68>
    eb66:	ldr	r3, [r4, #44]	; 0x2c
    eb68:	cmp	sl, r3
    eb6a:	ite	le
    eb6c:	movle	r3, #0
    eb6e:	movgt	r3, #1
    eb70:	cmp	r3, #0
    eb72:	bne.n	eaa8 <error@@Base+0x1e4c>
    eb74:	b.n	ea7e <error@@Base+0x1e22>
    eb76:	movw	r3, #9999	; 0x270f
    eb7a:	cmp	r5, r3
    eb7c:	bgt.n	eaf0 <error@@Base+0x1e94>
    eb7e:	ldrd	r3, r1, [r4, #16]
    eb82:	ldr	r2, [r4, #0]
    eb84:	adds.w	r8, r3, r3
    eb88:	mov.w	r3, #0
    eb8c:	adc.w	r9, r1, r1
    eb90:	strd	r8, r9, [r4, #16]
    eb94:	lsls	r2, r2, #3
    eb96:	cmp	r3, r9
    eb98:	it	eq
    eb9a:	cmpeq	r2, r8
    eb9c:	it	cc
    eb9e:	strdcc	r2, r3, [r4, #16]
    eba2:	b.n	eaf0 <error@@Base+0x1e94>
    eba4:	blx	2698 <__stack_chk_fail@plt>
    eba8:	movs	r0, r0
    ebaa:	movs	r0, r0
    ebac:	strh	r0, [r0, #36]	; 0x24
    ebae:	asrs	r6, r5
    ebb0:	cbz	r6, ec14 <error@@Base+0x1fb8>
    ebb2:	movs	r1, r0
    ebb4:	lsls	r0, r0, #11
    ebb6:	movs	r0, r0
    ebb8:	cbz	r6, ec0e <error@@Base+0x1fb2>
    ebba:	movs	r1, r0
    ebbc:	push	{r4, r5, r6, lr}
    ebbe:	mov	r5, r0
    ebc0:	ldr	r0, [pc, #96]	; (ec24 <error@@Base+0x1fc8>)
    ebc2:	sub	sp, #8
    ebc4:	mov	r4, r1
    ebc6:	add	r0, pc
    ebc8:	blx	22d8 <getenv@plt>
    ebcc:	cbz	r0, ebf8 <error@@Base+0x1f9c>
    ebce:	ldr	r6, [pc, #88]	; (ec28 <error@@Base+0x1fcc>)
    ebd0:	mov.w	r3, #4294967295	; 0xffffffff
    ebd4:	str	r0, [sp, #4]
    ebd6:	movs	r2, #1
    ebd8:	add	r6, pc
    ebda:	mov	r1, r4
    ebdc:	mov	r0, r5
    ebde:	str	r6, [sp, #0]
    ebe0:	blx	25b8 <__snprintf_chk@plt>
    ebe4:	cmp	r0, #0
    ebe6:	ite	gt
    ebe8:	movgt	r3, #1
    ebea:	movle	r3, #0
    ebec:	cmp	r0, r4
    ebee:	ite	cs
    ebf0:	movcs	r0, #0
    ebf2:	andcc.w	r0, r3, #1
    ebf6:	cbnz	r0, ec12 <error@@Base+0x1fb6>
    ebf8:	ldr	r2, [pc, #48]	; (ec2c <error@@Base+0x1fd0>)
    ebfa:	mov	r1, r4
    ebfc:	mov	r0, r5
    ebfe:	add	r2, pc
    ec00:	blx	27ec <snprintf@plt>
    ec04:	cmp	r0, r4
    ec06:	ite	cc
    ec08:	movcc	r4, #0
    ec0a:	movcs	r4, #1
    ec0c:	orrs.w	r3, r4, r0, lsr #31
    ec10:	bne.n	ec16 <error@@Base+0x1fba>
    ec12:	add	sp, #8
    ec14:	pop	{r4, r5, r6, pc}
    ec16:	ldr	r1, [pc, #24]	; (ec30 <error@@Base+0x1fd4>)
    ec18:	ldr	r0, [pc, #24]	; (ec34 <error@@Base+0x1fd8>)
    ec1a:	add	r1, pc
    ec1c:	add	r0, pc
    ec1e:	adds	r1, #16
    ec20:	bl	c6e4 <el_source@plt+0x9da8>
    ec24:	ldr	r2, [sp, #312]	; 0x138
    ec26:	movs	r0, r0
    ec28:	ldr	r2, [sp, #368]	; 0x170
    ec2a:	movs	r0, r0
    ec2c:	ldr	r2, [sp, #120]	; 0x78
    ec2e:	movs	r0, r0
    ec30:	ldr	r6, [sp, #728]	; 0x2d8
    ec32:	movs	r0, r0
    ec34:	ldr	r2, [sp, #176]	; 0xb0
    ec36:	movs	r0, r0
    ec38:	ldr	r2, [pc, #116]	; (ecb0 <error@@Base+0x2054>)
    ec3a:	ldr	r3, [pc, #120]	; (ecb4 <error@@Base+0x2058>)
    ec3c:	add	r2, pc
    ec3e:	push	{r4, r5, r6, lr}
    ec40:	sub	sp, #8
    ec42:	ldr	r3, [r2, r3]
    ec44:	ldr	r3, [r3, #0]
    ec46:	str	r3, [sp, #4]
    ec48:	mov.w	r3, #0
    ec4c:	cbz	r0, eca4 <error@@Base+0x2048>
    ec4e:	ldr	r1, [pc, #104]	; (ecb8 <error@@Base+0x205c>)
    ec50:	mov	r5, r0
    ec52:	ldr	r6, [pc, #104]	; (ecbc <error@@Base+0x2060>)
    ec54:	movs	r4, #0
    ec56:	add	r1, pc
    ec58:	add	r6, pc
    ec5a:	b.n	ec64 <error@@Base+0x2008>
    ec5c:	adds	r4, #1
    ec5e:	ldr.w	r1, [r6, r4, lsl #3]
    ec62:	cbz	r1, ec8c <error@@Base+0x2030>
    ec64:	mov	r0, r5
    ec66:	blx	2308 <strcasecmp@plt>
    ec6a:	cmp	r0, #0
    ec6c:	bne.n	ec5c <error@@Base+0x2000>
    ec6e:	ldr	r3, [pc, #80]	; (ecc0 <error@@Base+0x2064>)
    ec70:	add	r3, pc
    ec72:	add.w	r4, r3, r4, lsl #3
    ec76:	ldr	r0, [r4, #4]
    ec78:	ldr	r2, [pc, #72]	; (ecc4 <error@@Base+0x2068>)
    ec7a:	ldr	r3, [pc, #56]	; (ecb4 <error@@Base+0x2058>)
    ec7c:	add	r2, pc
    ec7e:	ldr	r3, [r2, r3]
    ec80:	ldr	r2, [r3, #0]
    ec82:	ldr	r3, [sp, #4]
    ec84:	eors	r2, r3
    ec86:	bne.n	ecaa <error@@Base+0x204e>
    ec88:	add	sp, #8
    ec8a:	pop	{r4, r5, r6, pc}
    ec8c:	mov	r2, r1
    ec8e:	mov	r0, r5
    ec90:	mov	r1, sp
    ec92:	blx	253c <strtol@plt>
    ec96:	ldrb	r3, [r5, #0]
    ec98:	cbz	r3, eca4 <error@@Base+0x2048>
    ec9a:	ldr	r3, [sp, #0]
    ec9c:	ldrb	r3, [r3, #0]
    ec9e:	cbnz	r3, eca4 <error@@Base+0x2048>
    eca0:	cmp	r0, #255	; 0xff
    eca2:	bls.n	ec78 <error@@Base+0x201c>
    eca4:	mov.w	r0, #4294967295	; 0xffffffff
    eca8:	b.n	ec78 <error@@Base+0x201c>
    ecaa:	blx	2698 <__stack_chk_fail@plt>
    ecae:	nop
    ecb0:	sub	sp, #272	; 0x110
    ecb2:	movs	r1, r0
    ecb4:	lsls	r0, r0, #11
    ecb6:	movs	r0, r0
    ecb8:	ldr	r2, [sp, #72]	; 0x48
    ecba:	movs	r0, r0
    ecbc:	add	r6, sp, #768	; 0x300
    ecbe:	movs	r1, r0
    ecc0:	add	r6, sp, #672	; 0x2a0
    ecc2:	movs	r1, r0
    ecc4:	sub	sp, #16
    ecc6:	movs	r1, r0
    ecc8:	push	{r4, r5, lr}
    ecca:	mvn.w	r1, #2147483648	; 0x80000000
    ecce:	ldr	r3, [pc, #60]	; (ed0c <error@@Base+0x20b0>)
    ecd0:	sub	sp, #12
    ecd2:	ldr	r4, [pc, #60]	; (ed10 <error@@Base+0x20b4>)
    ecd4:	add	r3, pc
    ecd6:	add	r4, pc
    ecd8:	b.n	ece2 <error@@Base+0x2086>
    ecda:	ldr.w	r4, [r3, #8]!
    ecde:	cbz	r4, ecec <error@@Base+0x2090>
    ece0:	ldr	r1, [r3, #4]
    ece2:	cmp	r0, r1
    ece4:	bne.n	ecda <error@@Base+0x207e>
    ece6:	mov	r0, r4
    ece8:	add	sp, #12
    ecea:	pop	{r4, r5, pc}
    ecec:	ldr	r2, [pc, #36]	; (ed14 <error@@Base+0x20b8>)
    ecee:	movs	r3, #5
    ecf0:	ldr	r5, [pc, #36]	; (ed18 <error@@Base+0x20bc>)
    ecf2:	mov	r1, r3
    ecf4:	add	r2, pc
    ecf6:	str	r0, [sp, #4]
    ecf8:	adds	r4, r2, #4
    ecfa:	add	r5, pc
    ecfc:	movs	r2, #1
    ecfe:	str	r5, [sp, #0]
    ed00:	mov	r0, r4
    ed02:	blx	25b8 <__snprintf_chk@plt>
    ed06:	mov	r0, r4
    ed08:	add	sp, #12
    ed0a:	pop	{r4, r5, pc}
    ed0c:	add	r6, sp, #272	; 0x110
    ed0e:	movs	r1, r0
    ed10:	ldr	r1, [sp, #584]	; 0x248
    ed12:	movs	r0, r0
    ed14:	b.n	ec60 <error@@Base+0x2004>
    ed16:	movs	r1, r0
    ed18:	ldr	r1, [sp, #472]	; 0x1d8
    ed1a:	movs	r0, r0
    ed1c:	push	{r3, r4, r5, lr}
    ed1e:	ldrb	r5, [r0, #0]
    ed20:	cbz	r5, ed38 <error@@Base+0x20dc>
    ed22:	mov	r4, r0
    ed24:	blx	24f8 <__ctype_tolower_loc@plt>
    ed28:	ldr	r3, [r0, #0]
    ed2a:	ldr.w	r3, [r3, r5, lsl #2]
    ed2e:	strb	r3, [r4, #0]
    ed30:	ldrb.w	r5, [r4, #1]!
    ed34:	cmp	r5, #0
    ed36:	bne.n	ed28 <error@@Base+0x20cc>
    ed38:	pop	{r3, r4, r5, pc}
    ed3a:	nop
    ed3c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ed40:	sub	sp, #120	; 0x78
    ed42:	ldr	r4, [pc, #340]	; (ee98 <error@@Base+0x223c>)
    ed44:	add.w	r8, sp, #4
    ed48:	ldr	r3, [pc, #336]	; (ee9c <error@@Base+0x2240>)
    ed4a:	mov	r5, r0
    ed4c:	add	r4, pc
    ed4e:	mov	r7, r1
    ed50:	mov	r6, r2
    ed52:	movs	r1, #0
    ed54:	ldr	r3, [r4, r3]
    ed56:	movs	r2, #110	; 0x6e
    ed58:	mov	r0, r8
    ed5a:	movs	r4, #1
    ed5c:	ldr	r3, [r3, #0]
    ed5e:	str	r3, [sp, #116]	; 0x74
    ed60:	mov.w	r3, #0
    ed64:	blx	2354 <memset@plt>
    ed68:	add.w	r0, sp, #6
    ed6c:	mov	r1, r5
    ed6e:	movs	r2, #108	; 0x6c
    ed70:	strh.w	r4, [sp, #4]
    ed74:	bl	13518 <strlcpy@@Base>
    ed78:	cmp	r0, #107	; 0x6b
    ed7a:	bhi.n	edec <error@@Base+0x2190>
    ed7c:	mov	r1, r4
    ed7e:	mov	r0, r4
    ed80:	movs	r2, #0
    ed82:	blx	2458 <socket@plt>
    ed86:	adds	r1, r0, #1
    ed88:	mov	r4, r0
    ed8a:	beq.n	ee70 <error@@Base+0x2214>
    ed8c:	cmp	r6, #1
    ed8e:	beq.n	edc6 <error@@Base+0x216a>
    ed90:	movs	r2, #110	; 0x6e
    ed92:	mov	r1, r8
    ed94:	mov	r0, r4
    ed96:	blx	25d0 <bind@plt>
    ed9a:	adds	r2, r0, #1
    ed9c:	mov	r6, r0
    ed9e:	beq.n	ee0a <error@@Base+0x21ae>
    eda0:	mov	r1, r7
    eda2:	mov	r0, r4
    eda4:	blx	232c <listen@plt>
    eda8:	adds	r3, r0, #1
    edaa:	mov	r6, r0
    edac:	beq.n	ee3a <error@@Base+0x21de>
    edae:	ldr	r2, [pc, #240]	; (eea0 <error@@Base+0x2244>)
    edb0:	ldr	r3, [pc, #232]	; (ee9c <error@@Base+0x2240>)
    edb2:	add	r2, pc
    edb4:	ldr	r3, [r2, r3]
    edb6:	ldr	r2, [r3, #0]
    edb8:	ldr	r3, [sp, #116]	; 0x74
    edba:	eors	r2, r3
    edbc:	bne.n	ee92 <error@@Base+0x2236>
    edbe:	mov	r0, r4
    edc0:	add	sp, #120	; 0x78
    edc2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    edc6:	mov	r0, r5
    edc8:	blx	24ac <unlink@plt>
    edcc:	cmp	r0, #0
    edce:	beq.n	ed90 <error@@Base+0x2134>
    edd0:	blx	2900 <__errno_location@plt>
    edd4:	ldr	r0, [r0, #0]
    edd6:	cmp	r0, #2
    edd8:	beq.n	ed90 <error@@Base+0x2134>
    edda:	blx	21f4 <strerror@plt+0x4>
    edde:	mov	r1, r5
    ede0:	mov	r2, r0
    ede2:	ldr	r0, [pc, #192]	; (eea4 <error@@Base+0x2248>)
    ede4:	add	r0, pc
    ede6:	bl	cc5c <error@@Base>
    edea:	b.n	ed90 <error@@Base+0x2134>
    edec:	ldr	r1, [pc, #184]	; (eea8 <error@@Base+0x224c>)
    edee:	mov	r2, r5
    edf0:	ldr	r0, [pc, #184]	; (eeac <error@@Base+0x2250>)
    edf2:	mov.w	r4, #4294967295	; 0xffffffff
    edf6:	add	r1, pc
    edf8:	add	r0, pc
    edfa:	adds	r1, #32
    edfc:	bl	cc5c <error@@Base>
    ee00:	blx	2900 <__errno_location@plt>
    ee04:	movs	r3, #36	; 0x24
    ee06:	str	r3, [r0, #0]
    ee08:	b.n	edae <error@@Base+0x2152>
    ee0a:	blx	2900 <__errno_location@plt>
    ee0e:	ldr.w	r8, [r0]
    ee12:	mov	r7, r0
    ee14:	mov	r0, r8
    ee16:	blx	21f4 <strerror@plt+0x4>
    ee1a:	ldr	r1, [pc, #148]	; (eeb0 <error@@Base+0x2254>)
    ee1c:	mov	r2, r5
    ee1e:	add	r1, pc
    ee20:	adds	r1, #32
    ee22:	mov	r3, r0
    ee24:	ldr	r0, [pc, #140]	; (eeb4 <error@@Base+0x2258>)
    ee26:	add	r0, pc
    ee28:	bl	cc5c <error@@Base>
    ee2c:	mov	r0, r4
    ee2e:	blx	25ec <close@plt+0x4>
    ee32:	mov	r4, r6
    ee34:	str.w	r8, [r7]
    ee38:	b.n	edae <error@@Base+0x2152>
    ee3a:	blx	2900 <__errno_location@plt>
    ee3e:	ldr.w	r8, [r0]
    ee42:	mov	r7, r0
    ee44:	mov	r0, r8
    ee46:	blx	21f4 <strerror@plt+0x4>
    ee4a:	ldr	r1, [pc, #108]	; (eeb8 <error@@Base+0x225c>)
    ee4c:	mov	r2, r5
    ee4e:	add	r1, pc
    ee50:	adds	r1, #32
    ee52:	mov	r3, r0
    ee54:	ldr	r0, [pc, #100]	; (eebc <error@@Base+0x2260>)
    ee56:	add	r0, pc
    ee58:	bl	cc5c <error@@Base>
    ee5c:	mov	r0, r4
    ee5e:	blx	25ec <close@plt+0x4>
    ee62:	mov	r0, r5
    ee64:	blx	24ac <unlink@plt>
    ee68:	mov	r4, r6
    ee6a:	str.w	r8, [r7]
    ee6e:	b.n	edae <error@@Base+0x2152>
    ee70:	blx	2900 <__errno_location@plt>
    ee74:	ldr	r6, [r0, #0]
    ee76:	mov	r5, r0
    ee78:	mov	r0, r6
    ee7a:	blx	21f4 <strerror@plt+0x4>
    ee7e:	ldr	r1, [pc, #64]	; (eec0 <error@@Base+0x2264>)
    ee80:	add	r1, pc
    ee82:	adds	r1, #32
    ee84:	mov	r2, r0
    ee86:	ldr	r0, [pc, #60]	; (eec4 <error@@Base+0x2268>)
    ee88:	add	r0, pc
    ee8a:	bl	cc5c <error@@Base>
    ee8e:	str	r6, [r5, #0]
    ee90:	b.n	edae <error@@Base+0x2152>
    ee92:	blx	2698 <__stack_chk_fail@plt>
    ee96:	nop
    ee98:	add	r7, sp, #720	; 0x2d0
    ee9a:	movs	r1, r0
    ee9c:	lsls	r0, r0, #11
    ee9e:	movs	r0, r0
    eea0:	add	r7, sp, #312	; 0x138
    eea2:	movs	r1, r0
    eea4:	ldr	r0, [sp, #864]	; 0x360
    eea6:	movs	r0, r0
    eea8:	ldr	r4, [sp, #872]	; 0x368
    eeaa:	movs	r0, r0
    eeac:	ldr	r0, [sp, #512]	; 0x200
    eeae:	movs	r0, r0
    eeb0:	ldr	r4, [sp, #712]	; 0x2c8
    eeb2:	movs	r0, r0
    eeb4:	ldr	r0, [sp, #680]	; 0x2a8
    eeb6:	movs	r0, r0
    eeb8:	ldr	r4, [sp, #520]	; 0x208
    eeba:	movs	r0, r0
    eebc:	ldr	r0, [sp, #616]	; 0x268
    eebe:	movs	r0, r0
    eec0:	ldr	r4, [sp, #320]	; 0x140
    eec2:	movs	r0, r0
    eec4:	ldr	r0, [sp, #128]	; 0x80
    eec6:	movs	r0, r0
    eec8:	ldr.w	ip, [pc, #108]	; ef38 <error@@Base+0x22dc>
    eecc:	ldr	r3, [pc, #108]	; (ef3c <error@@Base+0x22e0>)
    eece:	add	ip, pc
    eed0:	ldr	r1, [pc, #108]	; (ef40 <error@@Base+0x22e4>)
    eed2:	push	{r4, lr}
    eed4:	mov	r4, r0
    eed6:	ldr	r0, [pc, #108]	; (ef44 <error@@Base+0x22e8>)
    eed8:	sub	sp, #16
    eeda:	ldr.w	r3, [ip, r3]
    eede:	add	r1, pc
    eee0:	add	r0, pc
    eee2:	adds	r1, #48	; 0x30
    eee4:	mov	r2, r4
    eee6:	ldr	r3, [r3, #0]
    eee8:	str	r3, [sp, #12]
    eeea:	mov.w	r3, #0
    eeee:	movs	r3, #1
    eef0:	str	r3, [sp, #8]
    eef2:	bl	ce38 <error@@Base+0x1dc>
    eef6:	movs	r2, #4
    eef8:	add	r3, sp, #8
    eefa:	str	r2, [sp, #0]
    eefc:	mov	r0, r4
    eefe:	movs	r2, #26
    ef00:	movs	r1, #41	; 0x29
    ef02:	blx	289c <setsockopt@plt>
    ef06:	adds	r0, #1
    ef08:	beq.n	ef1e <error@@Base+0x22c2>
    ef0a:	ldr	r2, [pc, #60]	; (ef48 <error@@Base+0x22ec>)
    ef0c:	ldr	r3, [pc, #44]	; (ef3c <error@@Base+0x22e0>)
    ef0e:	add	r2, pc
    ef10:	ldr	r3, [r2, r3]
    ef12:	ldr	r2, [r3, #0]
    ef14:	ldr	r3, [sp, #12]
    ef16:	eors	r2, r3
    ef18:	bne.n	ef34 <error@@Base+0x22d8>
    ef1a:	add	sp, #16
    ef1c:	pop	{r4, pc}
    ef1e:	blx	2900 <__errno_location@plt>
    ef22:	ldr	r0, [r0, #0]
    ef24:	blx	21f4 <strerror@plt+0x4>
    ef28:	mov	r1, r0
    ef2a:	ldr	r0, [pc, #32]	; (ef4c <error@@Base+0x22f0>)
    ef2c:	add	r0, pc
    ef2e:	bl	cc5c <error@@Base>
    ef32:	b.n	ef0a <error@@Base+0x22ae>
    ef34:	blx	2698 <__stack_chk_fail@plt>
    ef38:	add	r6, sp, #200	; 0xc8
    ef3a:	movs	r1, r0
    ef3c:	lsls	r0, r0, #11
    ef3e:	movs	r0, r0
    ef40:	ldr	r3, [sp, #968]	; 0x3c8
    ef42:	movs	r0, r0
    ef44:	ldr	r0, [sp, #208]	; 0xd0
    ef46:	movs	r0, r0
    ef48:	add	r5, sp, #968	; 0x3c8
    ef4a:	movs	r1, r0
    ef4c:	ldr	r0, [sp, #32]
    ef4e:	movs	r0, r0
    ef50:	push	{r3, r4, r6, lr}
    ef52:	mov	r6, r0
    ef54:	mov	r4, r1
    ef56:	ldr	r0, [r0, #0]
    ef58:	ldr	r1, [r1, #0]
    ef5a:	clz	r3, r0
    ef5e:	clz	r2, r1
    ef62:	lsrs	r3, r3, #5
    ef64:	lsrs	r2, r2, #5
    ef66:	cmp	r2, r3
    ef68:	bne.n	efdc <error@@Base+0x2380>
    ef6a:	cbz	r0, ef72 <error@@Base+0x2316>
    ef6c:	blx	28dc <strcmp@plt+0x4>
    ef70:	cbnz	r0, efdc <error@@Base+0x2380>
    ef72:	ldr	r2, [r6, #4]
    ef74:	ldr	r3, [r4, #4]
    ef76:	cmp	r2, r3
    ef78:	bne.n	efdc <error@@Base+0x2380>
    ef7a:	ldr	r0, [r6, #8]
    ef7c:	ldr	r1, [r4, #8]
    ef7e:	clz	r2, r0
    ef82:	clz	r3, r1
    ef86:	lsrs	r2, r2, #5
    ef88:	lsrs	r3, r3, #5
    ef8a:	cmp	r2, r3
    ef8c:	bne.n	efdc <error@@Base+0x2380>
    ef8e:	cbz	r0, ef96 <error@@Base+0x233a>
    ef90:	blx	28dc <strcmp@plt+0x4>
    ef94:	cbnz	r0, efdc <error@@Base+0x2380>
    ef96:	ldr	r0, [r6, #12]
    ef98:	ldr	r1, [r4, #12]
    ef9a:	clz	r2, r0
    ef9e:	clz	r3, r1
    efa2:	lsrs	r2, r2, #5
    efa4:	lsrs	r3, r3, #5
    efa6:	cmp	r2, r3
    efa8:	bne.n	efdc <error@@Base+0x2380>
    efaa:	cbz	r0, efb2 <error@@Base+0x2356>
    efac:	blx	28dc <strcmp@plt+0x4>
    efb0:	cbnz	r0, efdc <error@@Base+0x2380>
    efb2:	ldr	r2, [r6, #16]
    efb4:	ldr	r3, [r4, #16]
    efb6:	cmp	r2, r3
    efb8:	bne.n	efdc <error@@Base+0x2380>
    efba:	ldr	r0, [r6, #20]
    efbc:	ldr	r1, [r4, #20]
    efbe:	clz	r2, r0
    efc2:	clz	r3, r1
    efc6:	lsrs	r2, r2, #5
    efc8:	lsrs	r3, r3, #5
    efca:	cmp	r2, r3
    efcc:	bne.n	efdc <error@@Base+0x2380>
    efce:	cbz	r0, efe0 <error@@Base+0x2384>
    efd0:	blx	28dc <strcmp@plt+0x4>
    efd4:	clz	r0, r0
    efd8:	lsrs	r0, r0, #5
    efda:	pop	{r3, r4, r6, pc}
    efdc:	movs	r0, #0
    efde:	pop	{r3, r4, r6, pc}
    efe0:	movs	r0, #1
    efe2:	pop	{r3, r4, r6, pc}
    efe4:	ldr	r0, [pc, #68]	; (f02c <error@@Base+0x23d0>)
    efe6:	mov.w	r1, #256	; 0x100
    efea:	push	{r3, r4, r5, lr}
    efec:	add	r0, pc
    efee:	blx	2578 <open64@plt>
    eff2:	cmp	r0, #0
    eff4:	bge.n	f006 <error@@Base+0x23aa>
    eff6:	blx	2504 <getppid@plt>
    effa:	cmp	r0, #1
    effc:	mov	r4, r0
    effe:	beq.n	f010 <error@@Base+0x23b4>
    f000:	movs	r4, #0
    f002:	mov	r0, r4
    f004:	pop	{r3, r4, r5, pc}
    f006:	movs	r4, #0
    f008:	blx	25ec <close@plt+0x4>
    f00c:	mov	r0, r4
    f00e:	pop	{r3, r4, r5, pc}
    f010:	movs	r0, #0
    f012:	blx	28a8 <getsid@plt>
    f016:	mov	r5, r0
    f018:	blx	2764 <getpid@plt>
    f01c:	cmp	r5, r0
    f01e:	bne.n	f000 <error@@Base+0x23a4>
    f020:	ldr	r0, [pc, #12]	; (f030 <error@@Base+0x23d4>)
    f022:	add	r0, pc
    f024:	bl	ce38 <error@@Base+0x1dc>
    f028:	b.n	f002 <error@@Base+0x23a6>
    f02a:	nop
    f02c:	str	r7, [sp, #400]	; 0x190
    f02e:	movs	r0, r0
    f030:	str	r7, [sp, #232]	; 0xe8
    f032:	movs	r0, r0
    f034:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f038:	sub	sp, #12
    f03a:	mov	r6, r0
    f03c:	mov	r5, r1
    f03e:	str	r1, [sp, #4]
    f040:	movs	r0, #1
    f042:	movs	r1, #4
    f044:	mov	fp, r2
    f046:	bl	cf00 <error@@Base+0x2a4>
    f04a:	movs	r4, #0
    f04c:	str.w	r4, [fp]
    f050:	str	r4, [r5, #0]
    f052:	ldrb	r7, [r6, #0]
    f054:	mov	r9, r0
    f056:	cmp	r7, #0
    f058:	beq.n	f15a <error@@Base+0x24fe>
    f05a:	mov	r5, r4
    f05c:	mov	r3, r4
    f05e:	b.n	f074 <error@@Base+0x2418>
    f060:	mov	r0, r4
    f062:	movs	r1, #1
    f064:	bl	14d50 <strvisx@@Base+0xfdc>
    f068:	mov	r4, r0
    f06a:	ldrb	r7, [r6, r4]
    f06c:	mov	r3, r4
    f06e:	cmp	r7, #0
    f070:	beq.w	f17c <error@@Base+0x2520>
    f074:	cmp	r7, #9
    f076:	it	ne
    f078:	cmpne	r7, #32
    f07a:	ite	eq
    f07c:	moveq.w	r8, #1
    f080:	movne.w	r8, #0
    f084:	beq.n	f060 <error@@Base+0x2404>
    f086:	cmp	r7, #92	; 0x5c
    f088:	beq.n	f188 <error@@Base+0x252c>
    f08a:	cmp	r7, #34	; 0x22
    f08c:	it	ne
    f08e:	cmpne	r7, #39	; 0x27
    f090:	ite	eq
    f092:	moveq.w	r8, #1
    f096:	movne.w	r8, #0
    f09a:	bne.n	f0a8 <error@@Base+0x244c>
    f09c:	mov	r0, r4
    f09e:	movs	r1, #1
    f0a0:	bl	14d50 <strvisx@@Base+0xfdc>
    f0a4:	mov	r8, r7
    f0a6:	mov	r4, r0
    f0a8:	movs	r1, #2
    f0aa:	mov	r0, r5
    f0ac:	bl	14d50 <strvisx@@Base+0xfdc>
    f0b0:	movs	r2, #4
    f0b2:	mov	r1, r0
    f0b4:	mov	r0, r9
    f0b6:	bl	cf44 <error@@Base+0x2e8>
    f0ba:	mov	r9, r0
    f0bc:	adds	r0, r6, r4
    f0be:	blx	24a0 <strlen@plt>
    f0c2:	movs	r1, #1
    f0c4:	add.w	sl, r9, r5, lsl #2
    f0c8:	mov	r7, r0
    f0ca:	mov	r0, r5
    f0cc:	bl	14d50 <strvisx@@Base+0xfdc>
    f0d0:	adds	r1, r7, #1
    f0d2:	mov	r3, r0
    f0d4:	movs	r0, #1
    f0d6:	mov	r7, r3
    f0d8:	bl	cf00 <error@@Base+0x2a4>
    f0dc:	movs	r3, #0
    f0de:	str.w	r0, [r9, r5, lsl #2]
    f0e2:	str.w	r3, [sl, #4]
    f0e6:	ldrb	r5, [r6, r4]
    f0e8:	cbz	r5, f154 <error@@Base+0x24f8>
    f0ea:	mov	sl, r0
    f0ec:	b.n	f10a <error@@Base+0x24ae>
    f0ee:	mov	r4, r0
    f0f0:	cmp.w	r8, #0
    f0f4:	bne.n	f16a <error@@Base+0x250e>
    f0f6:	cmp	r5, #9
    f0f8:	it	ne
    f0fa:	cmpne	r5, #32
    f0fc:	beq.n	f16e <error@@Base+0x2512>
    f0fe:	strb.w	r5, [sl]
    f102:	ldrb	r5, [r6, r4]
    f104:	add.w	sl, sl, #1
    f108:	cbz	r5, f154 <error@@Base+0x24f8>
    f10a:	movs	r1, #1
    f10c:	mov	r0, r4
    f10e:	bl	14d50 <strvisx@@Base+0xfdc>
    f112:	cmp	r5, #92	; 0x5c
    f114:	mov	r2, r0
    f116:	bne.n	f0ee <error@@Base+0x2492>
    f118:	add.w	ip, r6, r4
    f11c:	mov	r0, r4
    f11e:	movs	r1, #2
    f120:	ldrb.w	r4, [ip, #1]
    f124:	cmp	r4, #34	; 0x22
    f126:	it	ne
    f128:	cmpne	r4, #39	; 0x27
    f12a:	ite	eq
    f12c:	moveq.w	ip, #1
    f130:	movne.w	ip, #0
    f134:	cmp	r4, #92	; 0x5c
    f136:	ite	ne
    f138:	movne	r3, ip
    f13a:	orreq.w	r3, ip, #1
    f13e:	cbz	r3, f180 <error@@Base+0x2524>
    f140:	strb.w	r4, [sl]
    f144:	add.w	sl, sl, #1
    f148:	bl	14d50 <strvisx@@Base+0xfdc>
    f14c:	mov	r4, r0
    f14e:	ldrb	r5, [r6, r4]
    f150:	cmp	r5, #0
    f152:	bne.n	f10a <error@@Base+0x24ae>
    f154:	cmp.w	r8, #0
    f158:	bne.n	f1b2 <error@@Base+0x2556>
    f15a:	ldr	r3, [sp, #4]
    f15c:	movs	r0, #0
    f15e:	str	r7, [r3, #0]
    f160:	str.w	r9, [fp]
    f164:	add	sp, #12
    f166:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f16a:	cmp	r5, r8
    f16c:	bne.n	f0fe <error@@Base+0x24a2>
    f16e:	mov	r4, r2
    f170:	mov	r5, r7
    f172:	ldrb	r7, [r6, r4]
    f174:	mov	r3, r4
    f176:	cmp	r7, #0
    f178:	bne.w	f074 <error@@Base+0x2418>
    f17c:	mov	r7, r5
    f17e:	b.n	f15a <error@@Base+0x24fe>
    f180:	mov	r4, r2
    f182:	strb.w	r5, [sl]
    f186:	b.n	f102 <error@@Base+0x24a6>
    f188:	add	r3, r6
    f18a:	ldrb	r3, [r3, #1]
    f18c:	cmp	r3, #34	; 0x22
    f18e:	it	ne
    f190:	cmpne	r3, #39	; 0x27
    f192:	ite	eq
    f194:	moveq	r7, #1
    f196:	movne	r7, #0
    f198:	cmp	r3, #92	; 0x5c
    f19a:	it	eq
    f19c:	orreq.w	r7, r7, #1
    f1a0:	cbz	r7, f1ae <error@@Base+0x2552>
    f1a2:	mov	r0, r4
    f1a4:	movs	r1, #1
    f1a6:	bl	14d50 <strvisx@@Base+0xfdc>
    f1aa:	mov	r4, r0
    f1ac:	b.n	f0a8 <error@@Base+0x244c>
    f1ae:	mov	r8, r7
    f1b0:	b.n	f0a8 <error@@Base+0x244c>
    f1b2:	cmp.w	r9, #0
    f1b6:	beq.n	f1da <error@@Base+0x257e>
    f1b8:	add.w	r7, r9, r7, lsl #2
    f1bc:	mov	r4, r9
    f1be:	ldr.w	r0, [r4], #4
    f1c2:	blx	23f8 <free@plt+0x4>
    f1c6:	cmp	r7, r4
    f1c8:	bne.n	f1be <error@@Base+0x2562>
    f1ca:	mov	r0, r9
    f1cc:	blx	23f8 <free@plt+0x4>
    f1d0:	mvn.w	r0, #3
    f1d4:	add	sp, #12
    f1d6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f1da:	mvn.w	r0, #3
    f1de:	b.n	f164 <error@@Base+0x2508>
    f1e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f1e4:	sub	sp, #12
    f1e6:	mov	fp, r0
    f1e8:	mov	r7, r1
    f1ea:	bl	b1a8 <el_source@plt+0x886c>
    f1ee:	cmp	r0, #0
    f1f0:	beq.w	f378 <error@@Base+0x271c>
    f1f4:	mov	sl, r0
    f1f6:	bl	b1a8 <el_source@plt+0x886c>
    f1fa:	mov	r6, r0
    f1fc:	cmp	r0, #0
    f1fe:	beq.w	f378 <error@@Base+0x271c>
    f202:	cmp.w	fp, #0
    f206:	itt	gt
    f208:	subgt	r7, #4
    f20a:	movgt.w	r9, #0
    f20e:	ble.n	f2bc <error@@Base+0x2660>
    f210:	mov	r0, r6
    f212:	bl	b43c <el_source@plt+0x8b00>
    f216:	ldr.w	r3, [r7, #4]!
    f21a:	ldrb	r4, [r3, #0]
    f21c:	cmp	r4, #0
    f21e:	beq.w	f358 <error@@Base+0x26fc>
    f222:	mov.w	r8, #0
    f226:	mov	r5, r8
    f228:	cmp	r4, #39	; 0x27
    f22a:	bhi.n	f25c <error@@Base+0x2600>
    f22c:	cmp	r4, #8
    f22e:	bls.n	f260 <error@@Base+0x2604>
    f230:	sub.w	r3, r4, #9
    f234:	cmp	r3, #30
    f236:	bhi.n	f260 <error@@Base+0x2604>
    f238:	tbb	[pc, r3]
    f23c:	asrs	r6, r6, #9
    f23e:	asrs	r2, r2, #8
    f240:	asrs	r2, r2, #8
    f242:	asrs	r2, r2, #8
    f244:	asrs	r2, r2, #8
    f246:	asrs	r2, r2, #8
    f248:	asrs	r2, r2, #8
    f24a:	asrs	r2, r2, #8
    f24c:	asrs	r2, r2, #8
    f24e:	asrs	r2, r2, #8
    f250:	asrs	r2, r2, #8
    f252:	strb	r2, [r2, #24]
    f254:	str	r2, [r2, #80]	; 0x50
    f256:	asrs	r2, r2, #8
    f258:	asrs	r2, r2, #8
    f25a:	lsls	r5, r4, #1
    f25c:	cmp	r4, #92	; 0x5c
    f25e:	beq.n	f306 <error@@Base+0x26aa>
    f260:	mov	r1, r4
    f262:	mov	r0, r6
    f264:	bl	c1e4 <el_source@plt+0x98a8>
    f268:	cmp	r0, #0
    f26a:	bne.n	f312 <error@@Base+0x26b6>
    f26c:	mov	r0, r5
    f26e:	movs	r1, #1
    f270:	bl	14d50 <strvisx@@Base+0xfdc>
    f274:	ldr	r3, [r7, #0]
    f276:	ldrb	r4, [r3, r0]
    f278:	mov	r5, r0
    f27a:	cmp	r4, #0
    f27c:	bne.n	f228 <error@@Base+0x25cc>
    f27e:	cmp.w	r9, #0
    f282:	bne.n	f336 <error@@Base+0x26da>
    f284:	cmp.w	r8, #0
    f288:	beq.n	f36a <error@@Base+0x270e>
    f28a:	movs	r1, #34	; 0x22
    f28c:	mov	r0, sl
    f28e:	bl	c1e4 <el_source@plt+0x98a8>
    f292:	cmp	r0, #0
    f294:	bne.n	f342 <error@@Base+0x26e6>
    f296:	mov	r1, r6
    f298:	mov	r0, sl
    f29a:	bl	bfa4 <el_source@plt+0x9668>
    f29e:	cmp	r0, #0
    f2a0:	bne.n	f342 <error@@Base+0x26e6>
    f2a2:	movs	r1, #34	; 0x22
    f2a4:	mov	r0, sl
    f2a6:	bl	c1e4 <el_source@plt+0x98a8>
    f2aa:	cmp	r0, #0
    f2ac:	bne.n	f342 <error@@Base+0x26e6>
    f2ae:	mov	r0, r9
    f2b0:	movs	r1, #1
    f2b2:	bl	14d50 <strvisx@@Base+0xfdc>
    f2b6:	cmp	fp, r0
    f2b8:	mov	r9, r0
    f2ba:	bne.n	f210 <error@@Base+0x25b4>
    f2bc:	mov	r0, sl
    f2be:	bl	b5b8 <el_source@plt+0x8c7c>
    f2c2:	adds	r0, #1
    f2c4:	blx	2674 <malloc@plt>
    f2c8:	mov	r4, r0
    f2ca:	cmp	r0, #0
    f2cc:	beq.n	f386 <error@@Base+0x272a>
    f2ce:	mov	r0, sl
    f2d0:	bl	b680 <el_source@plt+0x8d44>
    f2d4:	str	r0, [sp, #4]
    f2d6:	mov	r0, sl
    f2d8:	bl	b5b8 <el_source@plt+0x8c7c>
    f2dc:	ldr	r1, [sp, #4]
    f2de:	mov	r2, r0
    f2e0:	mov	r0, r4
    f2e2:	blx	24c4 <memcpy@plt>
    f2e6:	mov	r0, sl
    f2e8:	bl	b5b8 <el_source@plt+0x8c7c>
    f2ec:	movs	r2, #0
    f2ee:	mov	r3, r0
    f2f0:	mov	r0, sl
    f2f2:	strb	r2, [r4, r3]
    f2f4:	bl	b2c4 <el_source@plt+0x8988>
    f2f8:	mov	r0, r6
    f2fa:	bl	b2c4 <el_source@plt+0x8988>
    f2fe:	mov	r0, r4
    f300:	add	sp, #12
    f302:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f306:	movs	r1, #92	; 0x5c
    f308:	mov	r0, r6
    f30a:	bl	c1e4 <el_source@plt+0x98a8>
    f30e:	cmp	r0, #0
    f310:	beq.n	f260 <error@@Base+0x2604>
    f312:	bl	ae70 <el_source@plt+0x8534>
    f316:	ldr	r3, [pc, #124]	; (f394 <error@@Base+0x2738>)
    f318:	add	r3, pc
    f31a:	add.w	r1, r3, #64	; 0x40
    f31e:	mov	r2, r0
    f320:	ldr	r0, [pc, #116]	; (f398 <error@@Base+0x273c>)
    f322:	add	r0, pc
    f324:	bl	c6e4 <el_source@plt+0x9da8>
    f328:	mov	r1, r4
    f32a:	mov	r0, r6
    f32c:	bl	c1e4 <el_source@plt+0x98a8>
    f330:	mov.w	r8, #1
    f334:	b.n	f268 <error@@Base+0x260c>
    f336:	movs	r1, #32
    f338:	mov	r0, sl
    f33a:	bl	c1e4 <el_source@plt+0x98a8>
    f33e:	cmp	r0, #0
    f340:	beq.n	f284 <error@@Base+0x2628>
    f342:	bl	ae70 <el_source@plt+0x8534>
    f346:	ldr	r3, [pc, #84]	; (f39c <error@@Base+0x2740>)
    f348:	add	r3, pc
    f34a:	add.w	r1, r3, #64	; 0x40
    f34e:	mov	r2, r0
    f350:	ldr	r0, [pc, #76]	; (f3a0 <error@@Base+0x2744>)
    f352:	add	r0, pc
    f354:	bl	c6e4 <el_source@plt+0x9da8>
    f358:	cmp.w	r9, #0
    f35c:	beq.n	f36a <error@@Base+0x270e>
    f35e:	movs	r1, #32
    f360:	mov	r0, sl
    f362:	bl	c1e4 <el_source@plt+0x98a8>
    f366:	cmp	r0, #0
    f368:	bne.n	f342 <error@@Base+0x26e6>
    f36a:	mov	r1, r6
    f36c:	mov	r0, sl
    f36e:	bl	bfa4 <el_source@plt+0x9668>
    f372:	cmp	r0, #0
    f374:	beq.n	f2ae <error@@Base+0x2652>
    f376:	b.n	f342 <error@@Base+0x26e6>
    f378:	ldr	r1, [pc, #40]	; (f3a4 <error@@Base+0x2748>)
    f37a:	ldr	r0, [pc, #44]	; (f3a8 <error@@Base+0x274c>)
    f37c:	add	r1, pc
    f37e:	add	r0, pc
    f380:	adds	r1, #64	; 0x40
    f382:	bl	c6e4 <el_source@plt+0x9da8>
    f386:	ldr	r1, [pc, #36]	; (f3ac <error@@Base+0x2750>)
    f388:	ldr	r0, [pc, #36]	; (f3b0 <error@@Base+0x2754>)
    f38a:	add	r1, pc
    f38c:	add	r0, pc
    f38e:	adds	r1, #64	; 0x40
    f390:	bl	c6e4 <el_source@plt+0x9da8>
    f394:	str	r7, [sp, #736]	; 0x2e0
    f396:	movs	r0, r0
    f398:	str	r2, [sp, #40]	; 0x28
    f39a:	movs	r0, r0
    f39c:	str	r7, [sp, #544]	; 0x220
    f39e:	movs	r0, r0
    f3a0:	strb	r2, [r4, #11]
    f3a2:	movs	r0, r0
    f3a4:	str	r7, [sp, #336]	; 0x150
    f3a6:	movs	r0, r0
    f3a8:	strb	r2, [r7, #13]
    f3aa:	movs	r0, r0
    f3ac:	str	r7, [sp, #280]	; 0x118
    f3ae:	movs	r0, r0
    f3b0:	str	r3, [sp, #912]	; 0x390
    f3b2:	movs	r0, r0
    f3b4:	stmdb	sp!, {r4, r6, r7, r8, r9, sl, lr}
    f3b8:	mov	r9, r2
    f3ba:	ldr	r2, [pc, #172]	; (f468 <error@@Base+0x280c>)
    f3bc:	mov	sl, r3
    f3be:	ldr	r3, [pc, #172]	; (f46c <error@@Base+0x2810>)
    f3c0:	sub	sp, #20
    f3c2:	add	r2, pc
    f3c4:	add	r7, sp, #8
    f3c6:	mov	r6, r0
    f3c8:	mov	r8, r1
    f3ca:	ldr	r3, [r2, r3]
    f3cc:	ldr	r3, [r3, #0]
    f3ce:	str	r3, [sp, #12]
    f3d0:	mov.w	r3, #0
    f3d4:	b.n	f3e0 <error@@Base+0x2784>
    f3d6:	blx	2900 <__errno_location@plt>
    f3da:	ldr	r0, [r0, #0]
    f3dc:	cmp	r0, #4
    f3de:	bne.n	f422 <error@@Base+0x27c6>
    f3e0:	movs	r2, #0
    f3e2:	mov	r1, r7
    f3e4:	mov	r0, r6
    f3e6:	blx	2548 <waitpid@plt>
    f3ea:	adds	r3, r0, #1
    f3ec:	mov	r4, r0
    f3ee:	beq.n	f3d6 <error@@Base+0x277a>
    f3f0:	ldr	r1, [sp, #8]
    f3f2:	and.w	r3, r1, #127	; 0x7f
    f3f6:	adds	r2, r3, #1
    f3f8:	sbfx	r2, r2, #1, #7
    f3fc:	cmp	r2, #0
    f3fe:	bgt.n	f452 <error@@Base+0x27f6>
    f400:	tst.w	r1, #65280	; 0xff00
    f404:	ubfx	r4, r1, #8, #8
    f408:	bne.n	f434 <error@@Base+0x27d8>
    f40a:	ldr	r2, [pc, #100]	; (f470 <error@@Base+0x2814>)
    f40c:	ldr	r3, [pc, #92]	; (f46c <error@@Base+0x2810>)
    f40e:	add	r2, pc
    f410:	ldr	r3, [r2, r3]
    f412:	ldr	r2, [r3, #0]
    f414:	ldr	r3, [sp, #12]
    f416:	eors	r2, r3
    f418:	bne.n	f464 <error@@Base+0x2808>
    f41a:	mov	r0, r4
    f41c:	add	sp, #20
    f41e:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, pc}
    f422:	blx	21f4 <strerror@plt+0x4>
    f426:	mov	r1, r8
    f428:	mov	r2, r0
    f42a:	ldr	r0, [pc, #72]	; (f474 <error@@Base+0x2818>)
    f42c:	add	r0, pc
    f42e:	bl	cc5c <error@@Base>
    f432:	b.n	f40a <error@@Base+0x27ae>
    f434:	cmp.w	sl, #0
    f438:	ldr	r1, [pc, #60]	; (f478 <error@@Base+0x281c>)
    f43a:	str	r4, [sp, #0]
    f43c:	mov	r3, r9
    f43e:	add	r1, pc
    f440:	mov	r2, r8
    f442:	ite	ne
    f444:	movne	r0, #5
    f446:	moveq	r0, #3
    f448:	bl	ce8c <error@@Base+0x230>
    f44c:	mov.w	r4, #4294967295	; 0xffffffff
    f450:	b.n	f40a <error@@Base+0x27ae>
    f452:	ldr	r0, [pc, #40]	; (f47c <error@@Base+0x2820>)
    f454:	mov	r2, r9
    f456:	mov	r1, r8
    f458:	mov.w	r4, #4294967295	; 0xffffffff
    f45c:	add	r0, pc
    f45e:	bl	cc5c <error@@Base>
    f462:	b.n	f40a <error@@Base+0x27ae>
    f464:	blx	2698 <__stack_chk_fail@plt>
    f468:	add	r1, sp, #248	; 0xf8
    f46a:	movs	r1, r0
    f46c:	lsls	r0, r0, #11
    f46e:	movs	r0, r0
    f470:	add	r0, sp, #968	; 0x3c8
    f472:	movs	r1, r0
    f474:	str	r3, [sp, #352]	; 0x160
    f476:	movs	r0, r0
    f478:	str	r3, [sp, #456]	; 0x1c8
    f47a:	movs	r0, r0
    f47c:	str	r3, [sp, #224]	; 0xe0
    f47e:	movs	r0, r0
    f480:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    f484:	sub.w	sp, sp, #8320	; 0x2080
    f488:	ldr.w	lr, [pc, #344]	; f5e4 <error@@Base+0x2988>
    f48c:	sub	sp, #4
    f48e:	ldr.w	ip, [pc, #344]	; f5e8 <error@@Base+0x298c>
    f492:	mov	r7, r3
    f494:	add	lr, pc
    f496:	add.w	r3, sp, #8256	; 0x2040
    f49a:	adds	r3, #60	; 0x3c
    f49c:	add	r4, sp, #124	; 0x7c
    f49e:	ldr.w	ip, [lr, ip]
    f4a2:	mov	r5, r1
    f4a4:	mov	r6, r2
    f4a6:	mov	r1, r4
    f4a8:	ldr.w	ip, [ip]
    f4ac:	str.w	ip, [r3]
    f4b0:	mov.w	ip, #0
    f4b4:	add.w	r3, sp, #8320	; 0x2080
    f4b8:	mov.w	r2, #4096	; 0x1000
    f4bc:	adds	r3, #32
    f4be:	mov	r9, r0
    f4c0:	ldr.w	r8, [r3]
    f4c4:	blx	27bc <__realpath_chk@plt>
    f4c8:	cmp	r0, #0
    f4ca:	beq.n	f5ae <error@@Base+0x2952>
    f4cc:	cbz	r6, f4e4 <error@@Base+0x2888>
    f4ce:	add.w	r1, sp, #4192	; 0x1060
    f4d2:	mov	r0, r6
    f4d4:	adds	r1, #28
    f4d6:	mov.w	r2, #4096	; 0x1000
    f4da:	blx	27bc <__realpath_chk@plt>
    f4de:	subs	r6, r0, #0
    f4e0:	it	ne
    f4e2:	movne	r6, #1
    f4e4:	ldr	r3, [r5, #16]
    f4e6:	and.w	r3, r3, #61440	; 0xf000
    f4ea:	cmp.w	r3, #32768	; 0x8000
    f4ee:	bne.n	f5a2 <error@@Base+0x2946>
    f4f0:	mov	r0, r5
    f4f2:	mov	r1, r7
    f4f4:	bl	e220 <error@@Base+0x15c4>
    f4f8:	cmp	r0, #0
    f4fa:	beq.n	f5a8 <error@@Base+0x294c>
    f4fc:	add	r5, sp, #16
    f4fe:	mov	r0, r4
    f500:	blx	2314 <dirname@plt>
    f504:	mov	r1, r0
    f506:	cmp	r0, #0
    f508:	beq.n	f58a <error@@Base+0x292e>
    f50a:	mov.w	r2, #4096	; 0x1000
    f50e:	mov	r0, r4
    f510:	bl	13518 <strlcpy@@Base>
    f514:	mov	r2, r5
    f516:	mov	r1, r4
    f518:	movs	r0, #3
    f51a:	blx	264c <__xstat64@plt>
    f51e:	adds	r0, #1
    f520:	beq.n	f568 <error@@Base+0x290c>
    f522:	mov	r1, r7
    f524:	mov	r0, r5
    f526:	bl	e220 <error@@Base+0x15c4>
    f52a:	cbz	r0, f568 <error@@Base+0x290c>
    f52c:	cbz	r6, f53c <error@@Base+0x28e0>
    f52e:	add.w	r0, sp, #4192	; 0x1060
    f532:	mov	r1, r4
    f534:	adds	r0, #28
    f536:	blx	28dc <strcmp@plt+0x4>
    f53a:	cbz	r0, f548 <error@@Base+0x28ec>
    f53c:	ldrh	r3, [r4, #0]
    f53e:	cmp	r3, #47	; 0x2f
    f540:	beq.n	f546 <error@@Base+0x28ea>
    f542:	cmp	r3, #46	; 0x2e
    f544:	bne.n	f4fe <error@@Base+0x28a2>
    f546:	movs	r0, #0
    f548:	ldr	r1, [pc, #160]	; (f5ec <error@@Base+0x2990>)
    f54a:	add.w	r3, sp, #8256	; 0x2040
    f54e:	ldr	r2, [pc, #152]	; (f5e8 <error@@Base+0x298c>)
    f550:	adds	r3, #60	; 0x3c
    f552:	add	r1, pc
    f554:	ldr	r2, [r1, r2]
    f556:	ldr	r1, [r2, #0]
    f558:	ldr	r2, [r3, #0]
    f55a:	eors	r1, r2
    f55c:	bne.n	f5e0 <error@@Base+0x2984>
    f55e:	add.w	sp, sp, #8320	; 0x2080
    f562:	add	sp, #4
    f564:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    f568:	ldr	r5, [pc, #132]	; (f5f0 <error@@Base+0x2994>)
    f56a:	add	r5, pc
    f56c:	add.w	r1, sp, #8320	; 0x2080
    f570:	str	r4, [sp, #4]
    f572:	adds	r1, #36	; 0x24
    f574:	mov	r0, r8
    f576:	mov.w	r3, #4294967295	; 0xffffffff
    f57a:	movs	r2, #1
    f57c:	ldr	r1, [r1, #0]
    f57e:	str	r5, [sp, #0]
    f580:	blx	25b8 <__snprintf_chk@plt>
    f584:	mov.w	r0, #4294967295	; 0xffffffff
    f588:	b.n	f548 <error@@Base+0x28ec>
    f58a:	add.w	r3, sp, #8320	; 0x2080
    f58e:	ldr	r2, [pc, #100]	; (f5f4 <error@@Base+0x2998>)
    f590:	mov	r0, r8
    f592:	adds	r3, #36	; 0x24
    f594:	add	r2, pc
    f596:	ldr	r1, [r3, #0]
    f598:	blx	27ec <snprintf@plt>
    f59c:	mov.w	r0, #4294967295	; 0xffffffff
    f5a0:	b.n	f548 <error@@Base+0x28ec>
    f5a2:	ldr	r5, [pc, #84]	; (f5f8 <error@@Base+0x299c>)
    f5a4:	add	r5, pc
    f5a6:	b.n	f56c <error@@Base+0x2910>
    f5a8:	ldr	r5, [pc, #80]	; (f5fc <error@@Base+0x29a0>)
    f5aa:	add	r5, pc
    f5ac:	b.n	f56c <error@@Base+0x2910>
    f5ae:	blx	2900 <__errno_location@plt>
    f5b2:	ldr	r0, [r0, #0]
    f5b4:	blx	21f4 <strerror@plt+0x4>
    f5b8:	ldr	r1, [pc, #68]	; (f600 <error@@Base+0x29a4>)
    f5ba:	str.w	r9, [sp, #4]
    f5be:	movs	r2, #1
    f5c0:	add	r1, pc
    f5c2:	str	r1, [sp, #0]
    f5c4:	add.w	r1, sp, #8320	; 0x2080
    f5c8:	adds	r1, #36	; 0x24
    f5ca:	mov	r3, r0
    f5cc:	mov	r0, r8
    f5ce:	str	r3, [sp, #8]
    f5d0:	mov.w	r3, #4294967295	; 0xffffffff
    f5d4:	ldr	r1, [r1, #0]
    f5d6:	blx	25b8 <__snprintf_chk@plt>
    f5da:	mov.w	r0, #4294967295	; 0xffffffff
    f5de:	b.n	f548 <error@@Base+0x28ec>
    f5e0:	blx	2698 <__stack_chk_fail@plt>
    f5e4:	add	r0, sp, #432	; 0x1b0
    f5e6:	movs	r1, r0
    f5e8:	lsls	r0, r0, #11
    f5ea:	movs	r0, r0
    f5ec:	add	r7, pc, #696	; (adr r7, f8a8 <error@@Base+0x2c4c>)
    f5ee:	movs	r1, r0
    f5f0:	str	r2, [sp, #696]	; 0x2b8
    f5f2:	movs	r0, r0
    f5f4:	str	r2, [sp, #448]	; 0x1c0
    f5f6:	movs	r0, r0
    f5f8:	ldrb	r4, [r7, #19]
    f5fa:	movs	r0, r0
    f5fc:	str	r2, [sp, #216]	; 0xd8
    f5fe:	movs	r0, r0
    f600:	str	r2, [sp, #32]
    f602:	movs	r0, r0
    f604:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    f608:	mov	r6, r3
    f60a:	ldr	r4, [pc, #124]	; (f688 <error@@Base+0x2a2c>)
    f60c:	sub	sp, #128	; 0x80
    f60e:	ldr	r3, [pc, #124]	; (f68c <error@@Base+0x2a30>)
    f610:	add	r7, sp, #16
    f612:	add	r4, pc
    f614:	mov	r8, r1
    f616:	mov	r5, r2
    f618:	mov	r1, r0
    f61a:	ldr	r3, [r4, r3]
    f61c:	mov	r2, r7
    f61e:	movs	r0, #3
    f620:	ldr	r3, [r3, #0]
    f622:	str	r3, [sp, #124]	; 0x7c
    f624:	mov.w	r3, #0
    f628:	blx	23b8 <__fxstat64@plt>
    f62c:	adds	r3, r0, #1
    f62e:	beq.n	f65c <error@@Base+0x2a00>
    f630:	ldr	r3, [sp, #152]	; 0x98
    f632:	mov	r1, r7
    f634:	str	r6, [sp, #0]
    f636:	mov	r0, r8
    f638:	str	r3, [sp, #4]
    f63a:	ldr	r3, [r5, #8]
    f63c:	ldr	r2, [r5, #20]
    f63e:	bl	f480 <error@@Base+0x2824>
    f642:	mov	r4, r0
    f644:	ldr	r2, [pc, #72]	; (f690 <error@@Base+0x2a34>)
    f646:	ldr	r3, [pc, #68]	; (f68c <error@@Base+0x2a30>)
    f648:	add	r2, pc
    f64a:	ldr	r3, [r2, r3]
    f64c:	ldr	r2, [r3, #0]
    f64e:	ldr	r3, [sp, #124]	; 0x7c
    f650:	eors	r2, r3
    f652:	bne.n	f684 <error@@Base+0x2a28>
    f654:	mov	r0, r4
    f656:	add	sp, #128	; 0x80
    f658:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    f65c:	mov	r4, r0
    f65e:	blx	2900 <__errno_location@plt>
    f662:	ldr	r0, [r0, #0]
    f664:	blx	21f4 <strerror@plt+0x4>
    f668:	ldr	r1, [pc, #40]	; (f694 <error@@Base+0x2a38>)
    f66a:	movs	r2, #1
    f66c:	str.w	r8, [sp, #4]
    f670:	add	r1, pc
    f672:	str	r1, [sp, #0]
    f674:	ldr	r1, [sp, #152]	; 0x98
    f676:	mov	r3, r0
    f678:	mov	r0, r6
    f67a:	str	r3, [sp, #8]
    f67c:	mov	r3, r4
    f67e:	blx	25b8 <__snprintf_chk@plt>
    f682:	b.n	f644 <error@@Base+0x29e8>
    f684:	blx	2698 <__stack_chk_fail@plt>
    f688:	add	r6, pc, #952	; (adr r6, fa44 <error@@Base+0x2de8>)
    f68a:	movs	r1, r0
    f68c:	lsls	r0, r0, #11
    f68e:	movs	r0, r0
    f690:	add	r6, pc, #736	; (adr r6, f974 <error@@Base+0x2d18>)
    f692:	movs	r1, r0
    f694:	str	r1, [sp, #832]	; 0x340
    f696:	movs	r0, r0
    f698:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f69c:	sub	sp, #28
    f69e:	mov	sl, r1
    f6a0:	mov	r9, r0
    f6a2:	movs	r1, #61	; 0x3d
    f6a4:	mov	r0, r2
    f6a6:	mov	r6, r2
    f6a8:	mov	r8, r3
    f6aa:	str.w	sl, [sp, #20]
    f6ae:	blx	22f0 <strchr@plt>
    f6b2:	cmp	r0, #0
    f6b4:	bne.n	f756 <error@@Base+0x2afa>
    f6b6:	ldr.w	r7, [r9]
    f6ba:	cmp	r7, #0
    f6bc:	beq.n	f76e <error@@Base+0x2b12>
    f6be:	mov	r0, r6
    f6c0:	blx	24a0 <strlen@plt>
    f6c4:	ldr.w	fp, [r7]
    f6c8:	mov	sl, r0
    f6ca:	cmp.w	fp, #0
    f6ce:	beq.n	f7cc <error@@Base+0x2b70>
    f6d0:	movs	r4, #0
    f6d2:	mov	r2, sl
    f6d4:	mov	r1, r6
    f6d6:	mov	r0, fp
    f6d8:	lsls	r5, r4, #2
    f6da:	blx	282c <strncmp@plt>
    f6de:	cbnz	r0, f6e8 <error@@Base+0x2a8c>
    f6e0:	ldrb.w	r3, [fp, sl]
    f6e4:	cmp	r3, #61	; 0x3d
    f6e6:	beq.n	f766 <error@@Base+0x2b0a>
    f6e8:	adds	r4, #1
    f6ea:	adds	r5, #4
    f6ec:	ldr.w	fp, [r7, r4, lsl #2]
    f6f0:	cmp.w	fp, #0
    f6f4:	bne.n	f6d2 <error@@Base+0x2a76>
    f6f6:	ldr	r3, [sp, #20]
    f6f8:	ldr	r1, [r3, #0]
    f6fa:	subs	r3, r1, #1
    f6fc:	cmp	r4, r3
    f6fe:	itt	cc
    f700:	addcc	r4, #1
    f702:	lslcc	r4, r4, #2
    f704:	bcs.n	f7a4 <error@@Base+0x2b48>
    f706:	movs	r3, #0
    f708:	str	r3, [r7, r4]
    f70a:	mov	r0, r6
    f70c:	blx	24a0 <strlen@plt>
    f710:	mov	r4, r0
    f712:	mov	r0, r8
    f714:	blx	24a0 <strlen@plt>
    f718:	add	r0, r4
    f71a:	adds	r0, #2
    f71c:	bl	ced8 <error@@Base+0x27c>
    f720:	mov	r9, r0
    f722:	mov	r0, r6
    f724:	str.w	r9, [r7, r5]
    f728:	blx	24a0 <strlen@plt>
    f72c:	ldr	r5, [pc, #172]	; (f7dc <error@@Base+0x2b80>)
    f72e:	add	r5, pc
    f730:	mov	r4, r0
    f732:	mov	r0, r8
    f734:	blx	24a0 <strlen@plt>
    f738:	mov.w	r3, #4294967295	; 0xffffffff
    f73c:	movs	r2, #1
    f73e:	str.w	r8, [sp, #8]
    f742:	str	r6, [sp, #4]
    f744:	str	r5, [sp, #0]
    f746:	adds	r1, r4, r0
    f748:	mov	r0, r9
    f74a:	adds	r1, #2
    f74c:	blx	25b8 <__snprintf_chk@plt>
    f750:	add	sp, #28
    f752:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f756:	ldr	r0, [pc, #136]	; (f7e0 <error@@Base+0x2b84>)
    f758:	mov	r1, r6
    f75a:	add	r0, pc
    f75c:	add	sp, #28
    f75e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f762:	b.w	cc5c <error@@Base>
    f766:	mov	r0, fp
    f768:	blx	23f8 <free@plt+0x4>
    f76c:	b.n	f70a <error@@Base+0x2aae>
    f76e:	ldr	r3, [sp, #20]
    f770:	ldr	r5, [r3, #0]
    f772:	cmp	r5, #0
    f774:	bne.n	f6be <error@@Base+0x2a62>
    f776:	movs	r0, #4
    f778:	movs	r4, #1
    f77a:	bl	ced8 <error@@Base+0x27c>
    f77e:	ldr	r3, [sp, #20]
    f780:	str.w	r0, [r9]
    f784:	str	r5, [r0, #0]
    f786:	mov	r0, r6
    f788:	str	r4, [r3, #0]
    f78a:	blx	24a0 <strlen@plt>
    f78e:	ldr.w	r7, [r9]
    f792:	mov	r1, r4
    f794:	movs	r4, #4
    f796:	ldr.w	fp, [r7]
    f79a:	mov	sl, r0
    f79c:	cmp.w	fp, #0
    f7a0:	bne.n	f6d0 <error@@Base+0x2a74>
    f7a2:	b.n	f7b0 <error@@Base+0x2b54>
    f7a4:	cmp.w	r1, #1000	; 0x3e8
    f7a8:	itt	cc
    f7aa:	addcc	r4, #1
    f7ac:	lslcc	r4, r4, #2
    f7ae:	bcs.n	f7d2 <error@@Base+0x2b76>
    f7b0:	add.w	fp, r1, #50	; 0x32
    f7b4:	mov	r0, r7
    f7b6:	movs	r2, #4
    f7b8:	mov	r1, fp
    f7ba:	bl	cf44 <error@@Base+0x2e8>
    f7be:	ldr	r3, [sp, #20]
    f7c0:	str.w	r0, [r9]
    f7c4:	mov	r7, r0
    f7c6:	str.w	fp, [r3]
    f7ca:	b.n	f706 <error@@Base+0x2aaa>
    f7cc:	mov	r4, fp
    f7ce:	mov	r5, fp
    f7d0:	b.n	f6f6 <error@@Base+0x2a9a>
    f7d2:	ldr	r0, [pc, #16]	; (f7e4 <error@@Base+0x2b88>)
    f7d4:	add	r0, pc
    f7d6:	bl	c6e4 <el_source@plt+0x9da8>
    f7da:	nop
    f7dc:	str	r1, [sp, #472]	; 0x1d8
    f7de:	movs	r0, r0
    f7e0:	str	r0, [sp, #1016]	; 0x3f8
    f7e2:	movs	r0, r0
    f7e4:	str	r0, [sp, #688]	; 0x2b0
    f7e6:	movs	r0, r0
    f7e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f7ec:	sub	sp, #12
    f7ee:	mov	r9, r1
    f7f0:	mov	r8, r2
    f7f2:	mov	r6, r0
    f7f4:	blx	24a0 <strlen@plt>
    f7f8:	cmp	r0, #0
    f7fa:	beq.n	f8be <error@@Base+0x2c62>
    f7fc:	mov	r7, r0
    f7fe:	blx	2640 <__ctype_b_loc@plt>
    f802:	ldrb.w	fp, [r6]
    f806:	ldr	r3, [r0, #0]
    f808:	mov	sl, r0
    f80a:	ldrh.w	r3, [r3, fp, lsl #1]
    f80e:	and.w	r3, r3, #3072	; 0xc00
    f812:	cmp	r3, #0
    f814:	beq.n	f8d2 <error@@Base+0x2c76>
    f816:	blx	24f8 <__ctype_tolower_loc@plt>
    f81a:	subs	r1, r6, #1
    f81c:	add	r1, r7
    f81e:	mov	r4, r6
    f820:	movs	r5, #0
    f822:	b.n	f828 <error@@Base+0x2bcc>
    f824:	ldrb.w	fp, [r4, #1]!
    f828:	ldr	r3, [r0, #0]
    f82a:	ldrb.w	r3, [r3, fp, lsl #2]
    f82e:	cmp.w	r9, #0
    f832:	beq.n	f836 <error@@Base+0x2bda>
    f834:	strb	r3, [r4, #0]
    f836:	cmp	r5, #46	; 0x2e
    f838:	it	eq
    f83a:	cmpeq	r3, #46	; 0x2e
    f83c:	sub.w	r2, r3, #45	; 0x2d
    f840:	mov	r5, r3
    f842:	beq.n	f88a <error@@Base+0x2c2e>
    f844:	cmp	r2, #1
    f846:	bls.n	f864 <error@@Base+0x2c08>
    f848:	ldr.w	r2, [sl]
    f84c:	subs.w	ip, r3, #95	; 0x5f
    f850:	it	ne
    f852:	movne.w	ip, #1
    f856:	ldrh.w	r3, [r2, r3, lsl #1]
    f85a:	eor.w	r3, r3, #8
    f85e:	ands.w	r3, ip, r3, lsr #3
    f862:	bne.n	f8e0 <error@@Base+0x2c84>
    f864:	cmp	r1, r4
    f866:	bne.n	f824 <error@@Base+0x2bc8>
    f868:	subs	r7, #1
    f86a:	movs	r0, #1
    f86c:	ldrb	r3, [r6, r7]
    f86e:	cmp	r3, #46	; 0x2e
    f870:	itt	eq
    f872:	moveq	r3, #0
    f874:	strbeq	r3, [r6, r7]
    f876:	cmp.w	r8, #0
    f87a:	beq.n	f884 <error@@Base+0x2c28>
    f87c:	movs	r0, #1
    f87e:	movs	r3, #0
    f880:	str.w	r3, [r8]
    f884:	add	sp, #12
    f886:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f88a:	ldr	r4, [pc, #100]	; (f8f0 <error@@Base+0x2c94>)
    f88c:	mov.w	r3, #256	; 0x100
    f890:	ldr	r0, [pc, #96]	; (f8f4 <error@@Base+0x2c98>)
    f892:	add	r4, pc
    f894:	add	r0, pc
    f896:	adds	r0, #12
    f898:	mov	r1, r3
    f89a:	movs	r2, #1
    f89c:	str	r6, [sp, #4]
    f89e:	str	r4, [sp, #0]
    f8a0:	blx	25b8 <__snprintf_chk@plt>
    f8a4:	mov	r0, r8
    f8a6:	cmp.w	r8, #0
    f8aa:	beq.n	f884 <error@@Base+0x2c28>
    f8ac:	ldr	r3, [pc, #72]	; (f8f8 <error@@Base+0x2c9c>)
    f8ae:	movs	r0, #0
    f8b0:	add	r3, pc
    f8b2:	adds	r3, #12
    f8b4:	str.w	r3, [r8]
    f8b8:	add	sp, #12
    f8ba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f8be:	ldr	r0, [pc, #60]	; (f8fc <error@@Base+0x2ca0>)
    f8c0:	mov.w	r2, #256	; 0x100
    f8c4:	ldr	r1, [pc, #56]	; (f900 <error@@Base+0x2ca4>)
    f8c6:	add	r0, pc
    f8c8:	add	r1, pc
    f8ca:	adds	r0, #12
    f8cc:	bl	13518 <strlcpy@@Base>
    f8d0:	b.n	f8a4 <error@@Base+0x2c48>
    f8d2:	ldr	r4, [pc, #48]	; (f904 <error@@Base+0x2ca8>)
    f8d4:	mov.w	r3, #256	; 0x100
    f8d8:	ldr	r0, [pc, #44]	; (f908 <error@@Base+0x2cac>)
    f8da:	add	r4, pc
    f8dc:	add	r0, pc
    f8de:	b.n	f896 <error@@Base+0x2c3a>
    f8e0:	ldr	r4, [pc, #40]	; (f90c <error@@Base+0x2cb0>)
    f8e2:	mov.w	r3, #256	; 0x100
    f8e6:	ldr	r0, [pc, #40]	; (f910 <error@@Base+0x2cb4>)
    f8e8:	add	r4, pc
    f8ea:	add	r0, pc
    f8ec:	b.n	f896 <error@@Base+0x2c3a>
    f8ee:	nop
    f8f0:	str	r0, [sp, #392]	; 0x188
    f8f2:	movs	r0, r0
    f8f4:	bgt.n	f900 <error@@Base+0x2ca4>
    f8f6:	movs	r1, r0
    f8f8:	blt.n	f8cc <error@@Base+0x2c70>
    f8fa:	movs	r1, r0
    f8fc:	blt.n	f8a4 <error@@Base+0x2c48>
    f8fe:	movs	r1, r0
    f900:	ldrh	r4, [r4, #62]	; 0x3e
    f902:	movs	r0, r0
    f904:	ldrh	r6, [r4, #62]	; 0x3e
    f906:	movs	r0, r0
    f908:	blt.n	f884 <error@@Base+0x2c28>
    f90a:	movs	r1, r0
    f90c:	str	r0, [sp, #272]	; 0x110
    f90e:	movs	r0, r0
    f910:	blt.n	f870 <error@@Base+0x2c14>
    f912:	movs	r1, r0
    f914:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f918:	mov	r6, r2
    f91a:	ldr	r2, [pc, #484]	; (fb00 <error@@Base+0x2ea4>)
    f91c:	mov	r7, r3
    f91e:	ldr	r3, [pc, #484]	; (fb04 <error@@Base+0x2ea8>)
    f920:	sub	sp, #28
    f922:	add	r2, pc
    f924:	mov	r4, r1
    f926:	ldr	r3, [r2, r3]
    f928:	ldr	r3, [r3, #0]
    f92a:	str	r3, [sp, #20]
    f92c:	mov.w	r3, #0
    f930:	str	r0, [sp, #0]
    f932:	blx	24a0 <strlen@plt>
    f936:	ldr	r1, [sp, #0]
    f938:	ldr.w	r9, [sp, #64]	; 0x40
    f93c:	mov	r5, r0
    f93e:	mov	r0, r4
    f940:	mov	r2, r5
    f942:	blx	282c <strncmp@plt>
    f946:	ldr.w	sl, [sp, #68]	; 0x44
    f94a:	cbnz	r0, f954 <error@@Base+0x2cf8>
    f94c:	ldrb	r3, [r4, r5]
    f94e:	adds	r2, r4, r5
    f950:	cmp	r3, #58	; 0x3a
    f952:	beq.n	f972 <error@@Base+0x2d16>
    f954:	mov.w	r8, #1
    f958:	ldr	r2, [pc, #428]	; (fb08 <error@@Base+0x2eac>)
    f95a:	ldr	r3, [pc, #424]	; (fb04 <error@@Base+0x2ea8>)
    f95c:	add	r2, pc
    f95e:	ldr	r3, [r2, r3]
    f960:	ldr	r2, [r3, #0]
    f962:	ldr	r3, [sp, #20]
    f964:	eors	r2, r3
    f966:	bne.w	fafa <error@@Base+0x2e9e>
    f96a:	mov	r0, r8
    f96c:	add	sp, #28
    f96e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f972:	ldrb	r3, [r2, #1]
    f974:	cmp	r3, #47	; 0x2f
    f976:	bne.n	f954 <error@@Base+0x2cf8>
    f978:	ldrb.w	r8, [r2, #2]
    f97c:	subs.w	r8, r8, #47	; 0x2f
    f980:	bne.n	f954 <error@@Base+0x2cf8>
    f982:	adds	r0, r5, #3
    f984:	add	r0, r4
    f986:	cbz	r6, f98c <error@@Base+0x2d30>
    f988:	str.w	r8, [r6]
    f98c:	cbz	r7, f992 <error@@Base+0x2d36>
    f98e:	movs	r3, #0
    f990:	str	r3, [r7, #0]
    f992:	cmp.w	r9, #0
    f996:	beq.n	f9a0 <error@@Base+0x2d44>
    f998:	mov.w	r3, #4294967295	; 0xffffffff
    f99c:	str.w	r3, [r9]
    f9a0:	cmp.w	sl, #0
    f9a4:	beq.n	f9ac <error@@Base+0x2d50>
    f9a6:	movs	r3, #0
    f9a8:	str.w	r3, [sl]
    f9ac:	bl	cf84 <error@@Base+0x328>
    f9b0:	movs	r1, #64	; 0x40
    f9b2:	mov	fp, r0
    f9b4:	str	r0, [sp, #16]
    f9b6:	blx	22f0 <strchr@plt>
    f9ba:	mov	r5, r0
    f9bc:	cbz	r0, f9ea <error@@Base+0x2d8e>
    f9be:	movs	r3, #0
    f9c0:	strb	r3, [r0, #0]
    f9c2:	ldr	r4, [sp, #16]
    f9c4:	movs	r1, #59	; 0x3b
    f9c6:	mov	r0, r4
    f9c8:	blx	22f0 <strchr@plt>
    f9cc:	cbz	r0, f9d4 <error@@Base+0x2d78>
    f9ce:	movs	r3, #0
    f9d0:	strb	r3, [r0, #0]
    f9d2:	ldr	r4, [sp, #16]
    f9d4:	ldrb	r3, [r4, #0]
    f9d6:	cmp	r3, #0
    f9d8:	beq.n	fa66 <error@@Base+0x2e0a>
    f9da:	mov	r0, r4
    f9dc:	bl	d3b0 <error@@Base+0x754>
    f9e0:	cmp	r0, #0
    f9e2:	beq.n	fa66 <error@@Base+0x2e0a>
    f9e4:	adds	r3, r5, #1
    f9e6:	mov	r5, r0
    f9e8:	str	r3, [sp, #16]
    f9ea:	add.w	r1, sp, #15
    f9ee:	add	r0, sp, #16
    f9f0:	bl	dae8 <error@@Base+0xe8c>
    f9f4:	mov	r3, r0
    f9f6:	cmp	r0, #0
    f9f8:	beq.n	fab8 <error@@Base+0x2e5c>
    f9fa:	ldrb	r4, [r0, #0]
    f9fc:	cmp	r4, #0
    f9fe:	beq.n	fa8e <error@@Base+0x2e32>
    fa00:	bl	db5c <error@@Base+0xf00>
    fa04:	bl	cf84 <error@@Base+0x328>
    fa08:	movs	r2, #0
    fa0a:	mov	r1, r2
    fa0c:	str	r0, [sp, #0]
    fa0e:	bl	f7e8 <error@@Base+0x2b8c>
    fa12:	ldr	r3, [sp, #0]
    fa14:	cmp	r0, #0
    fa16:	beq.n	fac0 <error@@Base+0x2e64>
    fa18:	ldr	r4, [sp, #16]
    fa1a:	cmp	r4, #0
    fa1c:	beq.n	fa98 <error@@Base+0x2e3c>
    fa1e:	ldrb	r2, [r4, #0]
    fa20:	cbz	r2, fa96 <error@@Base+0x2e3a>
    fa22:	ldrb.w	r2, [sp, #15]
    fa26:	cmp	r2, #58	; 0x3a
    fa28:	it	ne
    fa2a:	movne.w	r2, #4294967295	; 0xffffffff
    fa2e:	beq.n	fac8 <error@@Base+0x2e6c>
    fa30:	mov	r0, r4
    fa32:	strd	r3, r2, [sp]
    fa36:	bl	d3b0 <error@@Base+0x754>
    fa3a:	ldrd	r3, r2, [sp]
    fa3e:	mov	r4, r0
    fa40:	cbz	r0, fab2 <error@@Base+0x2e56>
    fa42:	cbz	r6, fa48 <error@@Base+0x2dec>
    fa44:	str	r5, [r6, #0]
    fa46:	movs	r5, #0
    fa48:	cbz	r7, fa4e <error@@Base+0x2df2>
    fa4a:	str	r3, [r7, #0]
    fa4c:	movs	r3, #0
    fa4e:	cmp.w	r9, #0
    fa52:	beq.n	fa58 <error@@Base+0x2dfc>
    fa54:	str.w	r2, [r9]
    fa58:	cmp.w	sl, #0
    fa5c:	beq.n	fa70 <error@@Base+0x2e14>
    fa5e:	str.w	r4, [sl]
    fa62:	movs	r4, #0
    fa64:	b.n	fa70 <error@@Base+0x2e14>
    fa66:	movs	r4, #0
    fa68:	mov.w	r8, #4294967295	; 0xffffffff
    fa6c:	mov	r3, r4
    fa6e:	mov	r5, r4
    fa70:	mov	r0, fp
    fa72:	str	r3, [sp, #0]
    fa74:	blx	23f8 <free@plt+0x4>
    fa78:	mov	r0, r5
    fa7a:	blx	23f8 <free@plt+0x4>
    fa7e:	ldr	r3, [sp, #0]
    fa80:	mov	r0, r3
    fa82:	blx	23f8 <free@plt+0x4>
    fa86:	mov	r0, r4
    fa88:	blx	23f8 <free@plt+0x4>
    fa8c:	b.n	f958 <error@@Base+0x2cfc>
    fa8e:	mov.w	r8, #4294967295	; 0xffffffff
    fa92:	mov	r3, r4
    fa94:	b.n	fa70 <error@@Base+0x2e14>
    fa96:	mov	r4, r2
    fa98:	mov.w	r2, #4294967295	; 0xffffffff
    fa9c:	b.n	fa42 <error@@Base+0x2de6>
    fa9e:	strd	r3, r0, [sp]
    faa2:	mov	r0, r4
    faa4:	bl	d7ac <error@@Base+0xb50>
    faa8:	ldrd	r3, r1, [sp]
    faac:	subs	r2, r0, #0
    faae:	bgt.n	faf6 <error@@Base+0x2e9a>
    fab0:	mov	r4, r1
    fab2:	mov.w	r8, #4294967295	; 0xffffffff
    fab6:	b.n	fa70 <error@@Base+0x2e14>
    fab8:	mov	r4, r0
    faba:	mov.w	r8, #4294967295	; 0xffffffff
    fabe:	b.n	fa70 <error@@Base+0x2e14>
    fac0:	mov	r4, r0
    fac2:	mov.w	r8, #4294967295	; 0xffffffff
    fac6:	b.n	fa70 <error@@Base+0x2e14>
    fac8:	movs	r1, #47	; 0x2f
    faca:	mov	r0, r4
    facc:	blx	22f0 <strchr@plt>
    fad0:	ldr	r3, [sp, #0]
    fad2:	cmp	r0, #0
    fad4:	beq.n	fa9e <error@@Base+0x2e42>
    fad6:	movs	r4, #0
    fad8:	strb	r4, [r0, #0]
    fada:	str	r0, [sp, #0]
    fadc:	ldr	r0, [sp, #16]
    fade:	str	r3, [sp, #4]
    fae0:	bl	d7ac <error@@Base+0xb50>
    fae4:	ldr	r3, [sp, #4]
    fae6:	subs	r2, r0, #0
    fae8:	ble.n	fab2 <error@@Base+0x2e56>
    faea:	ldr	r1, [sp, #0]
    faec:	adds	r4, r1, #1
    faee:	str	r4, [sp, #16]
    faf0:	ldrb	r1, [r1, #1]
    faf2:	cmp	r1, #0
    faf4:	bne.n	fa30 <error@@Base+0x2dd4>
    faf6:	mov	r4, r1
    faf8:	b.n	fa42 <error@@Base+0x2de6>
    fafa:	blx	2698 <__stack_chk_fail@plt>
    fafe:	nop
    fb00:	add	r3, pc, #888	; (adr r3, fe7c <error@@Base+0x3220>)
    fb02:	movs	r1, r0
    fb04:	lsls	r0, r0, #11
    fb06:	movs	r0, r0
    fb08:	add	r3, pc, #656	; (adr r3, fd9c <error@@Base+0x3140>)
    fb0a:	movs	r1, r0
    fb0c:	push	{r3, r4, r5, lr}
    fb0e:	ldrb	r4, [r0, #0]
    fb10:	cbz	r4, fb3a <error@@Base+0x2ede>
    fb12:	mov	r5, r0
    fb14:	blx	2640 <__ctype_b_loc@plt>
    fb18:	ldr	r2, [r0, #0]
    fb1a:	ldrh.w	r3, [r2, r4, lsl #1]
    fb1e:	subs	r4, #95	; 0x5f
    fb20:	eor.w	r3, r3, #8
    fb24:	it	ne
    fb26:	movne	r4, #1
    fb28:	ands.w	r3, r4, r3, lsr #3
    fb2c:	bne.n	fb3a <error@@Base+0x2ede>
    fb2e:	ldrb.w	r4, [r5, #1]!
    fb32:	cmp	r4, #0
    fb34:	bne.n	fb1a <error@@Base+0x2ebe>
    fb36:	movs	r0, #1
    fb38:	pop	{r3, r4, r5, pc}
    fb3a:	movs	r0, #0
    fb3c:	pop	{r3, r4, r5, pc}
    fb3e:	nop
    fb40:	ldr	r2, [pc, #96]	; (fba4 <error@@Base+0x2f48>)
    fb42:	ldr	r3, [pc, #100]	; (fba8 <error@@Base+0x2f4c>)
    fb44:	add	r2, pc
    fb46:	push	{r4, r6, r7, lr}
    fb48:	sub	sp, #24
    fb4a:	ldr	r3, [r2, r3]
    fb4c:	movs	r2, #0
    fb4e:	ldr	r3, [r3, #0]
    fb50:	str	r3, [sp, #20]
    fb52:	mov.w	r3, #0
    fb56:	str	r2, [sp, #16]
    fb58:	cbz	r0, fb9a <error@@Base+0x2f3e>
    fb5a:	ldrb	r3, [r0, #0]
    fb5c:	cbnz	r3, fb78 <error@@Base+0x2f1c>
    fb5e:	ldr	r3, [pc, #76]	; (fbac <error@@Base+0x2f50>)
    fb60:	add	r3, pc
    fb62:	ldr	r1, [pc, #76]	; (fbb0 <error@@Base+0x2f54>)
    fb64:	ldr	r2, [pc, #64]	; (fba8 <error@@Base+0x2f4c>)
    fb66:	add	r1, pc
    fb68:	ldr	r2, [r1, r2]
    fb6a:	ldr	r1, [r2, #0]
    fb6c:	ldr	r2, [sp, #20]
    fb6e:	eors	r1, r2
    fb70:	bne.n	fba0 <error@@Base+0x2f44>
    fb72:	mov	r0, r3
    fb74:	add	sp, #24
    fb76:	pop	{r4, r6, r7, pc}
    fb78:	add	r3, sp, #16
    fb7a:	mvn.w	r6, #2147483648	; 0x80000000
    fb7e:	str	r3, [sp, #8]
    fb80:	movs	r7, #0
    fb82:	movs	r3, #0
    fb84:	movs	r2, #0
    fb86:	strd	r6, r7, [sp]
    fb8a:	mov	r4, r1
    fb8c:	bl	1370c <strtonum@@Base>
    fb90:	ldr	r3, [sp, #16]
    fb92:	cmp	r3, #0
    fb94:	bne.n	fb62 <error@@Base+0x2f06>
    fb96:	str	r0, [r4, #0]
    fb98:	b.n	fb62 <error@@Base+0x2f06>
    fb9a:	ldr	r3, [pc, #24]	; (fbb4 <error@@Base+0x2f58>)
    fb9c:	add	r3, pc
    fb9e:	b.n	fb62 <error@@Base+0x2f06>
    fba0:	blx	2698 <__stack_chk_fail@plt>
    fba4:	add	r1, pc, #752	; (adr r1, fe98 <error@@Base+0x323c>)
    fba6:	movs	r1, r0
    fba8:	lsls	r0, r0, #11
    fbaa:	movs	r0, r0
    fbac:	ldrh	r0, [r0, #48]	; 0x30
    fbae:	movs	r0, r0
    fbb0:	add	r1, pc, #616	; (adr r1, fe1c <error@@Base+0x31c0>)
    fbb2:	movs	r1, r0
    fbb4:	ldrh	r4, [r0, #46]	; 0x2e
    fbb6:	movs	r0, r0
    fbb8:	ldr	r2, [pc, #256]	; (fcbc <error@@Base+0x3060>)
    fbba:	ldr	r3, [pc, #260]	; (fcc0 <error@@Base+0x3064>)
    fbbc:	add	r2, pc
    fbbe:	push	{r4, r5, r6, r7, lr}
    fbc0:	sub	sp, #116	; 0x74
    fbc2:	ldr	r3, [r2, r3]
    fbc4:	movs	r2, #0
    fbc6:	mov	r5, r1
    fbc8:	mov	r4, r0
    fbca:	ldr	r3, [r3, #0]
    fbcc:	str	r3, [sp, #108]	; 0x6c
    fbce:	mov.w	r3, #0
    fbd2:	movs	r3, #0
    fbd4:	strd	r2, r3, [r1]
    fbd8:	blx	24a0 <strlen@plt>
    fbdc:	cmp	r0, #12
    fbde:	beq.n	fc00 <error@@Base+0x2fa4>
    fbe0:	cmp	r0, #14
    fbe2:	beq.n	fc82 <error@@Base+0x3026>
    fbe4:	cmp	r0, #8
    fbe6:	beq.n	fc5e <error@@Base+0x3002>
    fbe8:	mvn.w	r0, #3
    fbec:	ldr	r2, [pc, #212]	; (fcc4 <error@@Base+0x3068>)
    fbee:	ldr	r3, [pc, #208]	; (fcc0 <error@@Base+0x3064>)
    fbf0:	add	r2, pc
    fbf2:	ldr	r3, [r2, r3]
    fbf4:	ldr	r2, [r3, #0]
    fbf6:	ldr	r3, [sp, #108]	; 0x6c
    fbf8:	eors	r2, r3
    fbfa:	bne.n	fcb8 <error@@Base+0x305c>
    fbfc:	add	sp, #116	; 0x74
    fbfe:	pop	{r4, r5, r6, r7, pc}
    fc00:	ldr	r2, [pc, #196]	; (fcc8 <error@@Base+0x306c>)
    fc02:	add	r6, sp, #76	; 0x4c
    fc04:	movs	r3, #32
    fc06:	str	r4, [sp, #4]
    fc08:	add	r2, pc
    fc0a:	mov	r0, r6
    fc0c:	str	r2, [sp, #0]
    fc0e:	mov	r1, r3
    fc10:	add.w	r2, r4, #10
    fc14:	str	r2, [sp, #20]
    fc16:	add.w	r2, r4, #8
    fc1a:	str	r2, [sp, #16]
    fc1c:	adds	r2, r4, #6
    fc1e:	adds	r4, #4
    fc20:	strd	r4, r2, [sp, #8]
    fc24:	movs	r2, #1
    fc26:	blx	25b8 <__snprintf_chk@plt>
    fc2a:	ldr	r7, [pc, #160]	; (fccc <error@@Base+0x3070>)
    fc2c:	add	r7, pc
    fc2e:	add	r4, sp, #32
    fc30:	movs	r2, #44	; 0x2c
    fc32:	movs	r1, #0
    fc34:	mov	r0, r4
    fc36:	blx	2354 <memset@plt>
    fc3a:	mov	r2, r4
    fc3c:	mov	r1, r7
    fc3e:	mov	r0, r6
    fc40:	blx	22a8 <strptime@plt>
    fc44:	cmp	r0, #0
    fc46:	beq.n	fbe8 <error@@Base+0x2f8c>
    fc48:	mov	r0, r4
    fc4a:	blx	2348 <mktime@plt>
    fc4e:	cmp	r0, #0
    fc50:	blt.n	fbe8 <error@@Base+0x2f8c>
    fc52:	asrs	r3, r0, #31
    fc54:	mov	r2, r0
    fc56:	movs	r0, #0
    fc58:	strd	r2, r3, [r5]
    fc5c:	b.n	fbec <error@@Base+0x2f90>
    fc5e:	ldr	r2, [pc, #112]	; (fcd0 <error@@Base+0x3074>)
    fc60:	add	r6, sp, #76	; 0x4c
    fc62:	movs	r3, #32
    fc64:	ldr	r7, [pc, #108]	; (fcd4 <error@@Base+0x3078>)
    fc66:	add	r2, pc
    fc68:	str	r4, [sp, #4]
    fc6a:	str	r2, [sp, #0]
    fc6c:	mov	r0, r6
    fc6e:	adds	r2, r4, #6
    fc70:	mov	r1, r3
    fc72:	adds	r4, #4
    fc74:	strd	r4, r2, [sp, #8]
    fc78:	movs	r2, #1
    fc7a:	add	r7, pc
    fc7c:	blx	25b8 <__snprintf_chk@plt>
    fc80:	b.n	fc2e <error@@Base+0x2fd2>
    fc82:	ldr	r2, [pc, #84]	; (fcd8 <error@@Base+0x307c>)
    fc84:	add	r6, sp, #76	; 0x4c
    fc86:	movs	r3, #32
    fc88:	ldr	r7, [pc, #80]	; (fcdc <error@@Base+0x3080>)
    fc8a:	add	r2, pc
    fc8c:	str	r4, [sp, #4]
    fc8e:	str	r2, [sp, #0]
    fc90:	mov	r0, r6
    fc92:	add.w	r2, r4, #12
    fc96:	mov	r1, r3
    fc98:	str	r2, [sp, #24]
    fc9a:	add.w	r2, r4, #10
    fc9e:	str	r2, [sp, #20]
    fca0:	add.w	r2, r4, #8
    fca4:	str	r2, [sp, #16]
    fca6:	adds	r2, r4, #6
    fca8:	adds	r4, #4
    fcaa:	strd	r4, r2, [sp, #8]
    fcae:	movs	r2, #1
    fcb0:	add	r7, pc
    fcb2:	blx	25b8 <__snprintf_chk@plt>
    fcb6:	b.n	fc2e <error@@Base+0x2fd2>
    fcb8:	blx	2698 <__stack_chk_fail@plt>
    fcbc:	add	r1, pc, #272	; (adr r1, fdd0 <error@@Base+0x3174>)
    fcbe:	movs	r1, r0
    fcc0:	lsls	r0, r0, #11
    fcc2:	movs	r0, r0
    fcc4:	add	r1, pc, #64	; (adr r1, fd08 <error@@Base+0x30ac>)
    fcc6:	movs	r1, r0
    fcc8:	ldrh	r0, [r4, #44]	; 0x2c
    fcca:	movs	r0, r0
    fccc:	ldrh	r0, [r1, #42]	; 0x2a
    fcce:	movs	r0, r0
    fcd0:	ldrh	r2, [r6, #40]	; 0x28
    fcd2:	movs	r0, r0
    fcd4:	ldrh	r6, [r5, #38]	; 0x26
    fcd6:	movs	r0, r0
    fcd8:	ldrh	r2, [r7, #40]	; 0x28
    fcda:	movs	r0, r0
    fcdc:	ldrh	r4, [r2, #38]	; 0x26
    fcde:	movs	r0, r0
    fce0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    fce4:	mov	r6, r2
    fce6:	ldr	r2, [pc, #96]	; (fd48 <error@@Base+0x30ec>)
    fce8:	mov	r7, r3
    fcea:	ldr	r3, [pc, #96]	; (fd4c <error@@Base+0x30f0>)
    fcec:	sub	sp, #68	; 0x44
    fcee:	add	r2, pc
    fcf0:	mov.w	r9, #0
    fcf4:	cmp	r9, r1
    fcf6:	mvn.w	r8, #2147483648	; 0x80000000
    fcfa:	ldr	r3, [r2, r3]
    fcfc:	it	eq
    fcfe:	cmpeq	r8, r0
    fd00:	ldr	r3, [r3, #0]
    fd02:	str	r3, [sp, #60]	; 0x3c
    fd04:	mov.w	r3, #0
    fd08:	add	r3, sp, #16
    fd0a:	it	cs
    fd0c:	movcs	r4, r0
    fd0e:	add	r0, sp, #12
    fd10:	mov	r1, r3
    fd12:	it	cc
    fd14:	movcc	r4, r8
    fd16:	str	r3, [sp, #4]
    fd18:	str	r4, [sp, #12]
    fd1a:	blx	2218 <localtime_r@plt>
    fd1e:	ldr	r2, [pc, #48]	; (fd50 <error@@Base+0x30f4>)
    fd20:	mov	r1, r7
    fd22:	ldr	r3, [sp, #4]
    fd24:	mov	r0, r6
    fd26:	add	r2, pc
    fd28:	blx	274c <strftime@plt>
    fd2c:	ldr	r2, [pc, #36]	; (fd54 <error@@Base+0x30f8>)
    fd2e:	ldr	r3, [pc, #28]	; (fd4c <error@@Base+0x30f0>)
    fd30:	add	r2, pc
    fd32:	ldr	r3, [r2, r3]
    fd34:	ldr	r2, [r3, #0]
    fd36:	ldr	r3, [sp, #60]	; 0x3c
    fd38:	eors	r2, r3
    fd3a:	bne.n	fd42 <error@@Base+0x30e6>
    fd3c:	add	sp, #68	; 0x44
    fd3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    fd42:	blx	2698 <__stack_chk_fail@plt>
    fd46:	nop
    fd48:	add	r0, pc, #72	; (adr r0, fd94 <error@@Base+0x3138>)
    fd4a:	movs	r1, r0
    fd4c:	lsls	r0, r0, #11
    fd4e:	movs	r0, r0
    fd50:	ldrh	r6, [r3, #34]	; 0x22
    fd52:	movs	r0, r0
    fd54:	ldr	r7, [sp, #832]	; 0x340
    fd56:	movs	r1, r0
    fd58:	ldrb	r0, [r0, #0]
    fd5a:	sub.w	r0, r0, #47	; 0x2f
    fd5e:	clz	r0, r0
    fd62:	lsrs	r0, r0, #5
    fd64:	bx	lr
    fd66:	nop
    fd68:	ldr	r2, [r0, #0]
    fd6a:	ldrb	r3, [r2, #0]
    fd6c:	cmp	r3, #9
    fd6e:	it	ne
    fd70:	cmpne	r3, #32
    fd72:	bne.n	fd80 <error@@Base+0x3124>
    fd74:	ldrb.w	r3, [r2, #1]!
    fd78:	cmp	r3, #9
    fd7a:	it	ne
    fd7c:	cmpne	r3, #32
    fd7e:	beq.n	fd74 <error@@Base+0x3118>
    fd80:	str	r2, [r0, #0]
    fd82:	bx	lr
    fd84:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    fd88:	mov	r6, r2
    fd8a:	mov	r4, r1
    fd8c:	mov	r8, r0
    fd8e:	blx	24a0 <strlen@plt>
    fd92:	ldr	r5, [r6, #0]
    fd94:	mov	r7, r0
    fd96:	cbz	r4, fda8 <error@@Base+0x314c>
    fd98:	ldr	r1, [pc, #48]	; (fdcc <error@@Base+0x3170>)
    fd9a:	movs	r2, #3
    fd9c:	mov	r0, r5
    fd9e:	movs	r4, #0
    fda0:	add	r1, pc
    fda2:	blx	261c <strncasecmp@plt>
    fda6:	cbz	r0, fdc0 <error@@Base+0x3164>
    fda8:	mov	r1, r8
    fdaa:	mov	r2, r7
    fdac:	mov	r0, r5
    fdae:	blx	261c <strncasecmp@plt>
    fdb2:	cbnz	r0, fdc6 <error@@Base+0x316a>
    fdb4:	eor.w	r0, r4, #1
    fdb8:	add	r5, r7
    fdba:	str	r5, [r6, #0]
    fdbc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    fdc0:	adds	r5, #3
    fdc2:	movs	r4, #1
    fdc4:	b.n	fda8 <error@@Base+0x314c>
    fdc6:	mov.w	r0, #4294967295	; 0xffffffff
    fdca:	b.n	fdbc <error@@Base+0x3160>
    fdcc:	ldrh	r4, [r0, #34]	; 0x22
    fdce:	movs	r0, r0
    fdd0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    fdd4:	mov	r7, r0
    fdd6:	ldr	r5, [r0, #0]
    fdd8:	movs	r0, #0
    fdda:	str	r0, [r1, #0]
    fddc:	mov	r8, r1
    fdde:	ldrb	r3, [r5, #0]
    fde0:	cmp	r3, #34	; 0x22
    fde2:	bne.n	fe46 <error@@Base+0x31ea>
    fde4:	adds	r4, r5, #1
    fde6:	mov	r0, r4
    fde8:	blx	24a0 <strlen@plt>
    fdec:	adds	r0, #1
    fdee:	blx	2674 <malloc@plt>
    fdf2:	cmp	r0, #0
    fdf4:	beq.n	fe60 <error@@Base+0x3204>
    fdf6:	ldrb	r5, [r5, #1]
    fdf8:	cmp	r5, #34	; 0x22
    fdfa:	it	ne
    fdfc:	cmpne	r5, #0
    fdfe:	ittte	ne
    fe00:	addne.w	r2, r0, #4294967295	; 0xffffffff
    fe04:	rsbne	r1, r0, #2
    fe08:	movne	r6, #1
    fe0a:	moveq	r6, #0
    fe0c:	bne.n	fe3c <error@@Base+0x31e0>
    fe0e:	cbz	r5, fe50 <error@@Base+0x31f4>
    fe10:	adds	r4, #1
    fe12:	movs	r3, #0
    fe14:	str	r4, [r7, #0]
    fe16:	strb	r3, [r0, r6]
    fe18:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    fe1c:	ldrb	r5, [r4, #1]
    fe1e:	cmp	r5, #34	; 0x22
    fe20:	it	eq
    fe22:	addeq	r4, #2
    fe24:	beq.n	fe2c <error@@Base+0x31d0>
    fe26:	ldrb	r5, [r4, #0]
    fe28:	mov	r3, r4
    fe2a:	mov	r4, r6
    fe2c:	adds	r6, r1, r2
    fe2e:	strb.w	r5, [r2, #1]!
    fe32:	ldrb	r5, [r3, #1]
    fe34:	cmp	r5, #0
    fe36:	it	ne
    fe38:	cmpne	r5, #34	; 0x22
    fe3a:	beq.n	fe0e <error@@Base+0x31b2>
    fe3c:	adds	r3, r4, #1
    fe3e:	cmp	r5, #92	; 0x5c
    fe40:	mov	r6, r3
    fe42:	bne.n	fe26 <error@@Base+0x31ca>
    fe44:	b.n	fe1c <error@@Base+0x31c0>
    fe46:	ldr	r3, [pc, #36]	; (fe6c <error@@Base+0x3210>)
    fe48:	add	r3, pc
    fe4a:	str	r3, [r1, #0]
    fe4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    fe50:	ldr	r3, [pc, #28]	; (fe70 <error@@Base+0x3214>)
    fe52:	add	r3, pc
    fe54:	str.w	r3, [r8]
    fe58:	blx	23f8 <free@plt+0x4>
    fe5c:	mov	r0, r5
    fe5e:	b.n	fe18 <error@@Base+0x31bc>
    fe60:	ldr	r3, [pc, #16]	; (fe74 <error@@Base+0x3218>)
    fe62:	add	r3, pc
    fe64:	str.w	r3, [r8]
    fe68:	b.n	fe18 <error@@Base+0x31bc>
    fe6a:	nop
    fe6c:	ldrh	r0, [r4, #28]
    fe6e:	movs	r0, r0
    fe70:	ldrh	r2, [r5, #28]
    fe72:	movs	r0, r0
    fe74:	ldrb	r2, [r7, #10]
    fe76:	movs	r0, r0
    fe78:	push	{r4, r5, r6, lr}
    fe7a:	sub	sp, #8
    fe7c:	mov	r5, r0
    fe7e:	mov	r0, r1
    fe80:	str	r1, [sp, #4]
    fe82:	blx	24a0 <strlen@plt>
    fe86:	ldr	r6, [r5, #0]
    fe88:	ldr	r1, [sp, #4]
    fe8a:	mov	r4, r0
    fe8c:	mov	r0, r6
    fe8e:	mov	r2, r4
    fe90:	blx	261c <strncasecmp@plt>
    fe94:	cbnz	r0, fea0 <error@@Base+0x3244>
    fe96:	ldrb	r3, [r6, r4]
    fe98:	cmp	r3, #61	; 0x3d
    fe9a:	beq.n	fea6 <error@@Base+0x324a>
    fe9c:	add	sp, #8
    fe9e:	pop	{r4, r5, r6, pc}
    fea0:	movs	r0, #0
    fea2:	add	sp, #8
    fea4:	pop	{r4, r5, r6, pc}
    fea6:	adds	r4, #1
    fea8:	movs	r0, #1
    feaa:	add	r4, r6
    feac:	str	r4, [r5, #0]
    feae:	add	sp, #8
    feb0:	pop	{r4, r5, r6, pc}
    feb2:	nop
    feb4:	push	{r4, r5, r6, lr}
    feb6:	sub	sp, #296	; 0x128
    feb8:	add	r3, sp, #16
    feba:	ldr.w	ip, [pc, #132]	; ff40 <error@@Base+0x32e4>
    febe:	mov	r5, r0
    fec0:	add	r6, sp, #12
    fec2:	mov	r0, r3
    fec4:	ldr	r3, [pc, #124]	; (ff44 <error@@Base+0x32e8>)
    fec6:	add	ip, pc
    fec8:	mov	r4, r1
    feca:	movs	r2, #136	; 0x88
    fecc:	movs	r1, #0
    fece:	ldr.w	r3, [ip, r3]
    fed2:	ldr	r3, [r3, #0]
    fed4:	str	r3, [sp, #292]	; 0x124
    fed6:	mov.w	r3, #0
    feda:	blx	2354 <memset@plt>
    fede:	str	r4, [r6, #0]
    fee0:	blx	2728 <sigfillset@plt>
    fee4:	cmp	r5, #14
    fee6:	add	r2, sp, #152	; 0x98
    fee8:	mov	r1, r6
    feea:	mov	r0, r5
    feec:	itt	ne
    feee:	movne.w	r3, #268435456	; 0x10000000
    fef2:	strne.w	r3, [r6, #132]	; 0x84
    fef6:	blx	26a4 <sigaction@plt>
    fefa:	adds	r3, r0, #1
    fefc:	mov	r4, r0
    fefe:	it	ne
    ff00:	ldrne	r0, [sp, #152]	; 0x98
    ff02:	beq.n	ff18 <error@@Base+0x32bc>
    ff04:	ldr	r2, [pc, #64]	; (ff48 <error@@Base+0x32ec>)
    ff06:	ldr	r3, [pc, #60]	; (ff44 <error@@Base+0x32e8>)
    ff08:	add	r2, pc
    ff0a:	ldr	r3, [r2, r3]
    ff0c:	ldr	r2, [r3, #0]
    ff0e:	ldr	r3, [sp, #292]	; 0x124
    ff10:	eors	r2, r3
    ff12:	bne.n	ff3a <error@@Base+0x32de>
    ff14:	add	sp, #296	; 0x128
    ff16:	pop	{r4, r5, r6, pc}
    ff18:	mov	r0, r5
    ff1a:	blx	2494 <strsignal@plt>
    ff1e:	str	r0, [sp, #4]
    ff20:	blx	2900 <__errno_location@plt>
    ff24:	ldr	r0, [r0, #0]
    ff26:	blx	21f4 <strerror@plt+0x4>
    ff2a:	ldr	r1, [sp, #4]
    ff2c:	mov	r2, r0
    ff2e:	ldr	r0, [pc, #28]	; (ff4c <error@@Base+0x32f0>)
    ff30:	add	r0, pc
    ff32:	bl	ce38 <error@@Base+0x1dc>
    ff36:	mov	r0, r4
    ff38:	b.n	ff04 <error@@Base+0x32a8>
    ff3a:	blx	2698 <__stack_chk_fail@plt>
    ff3e:	nop
    ff40:	ldr	r6, [sp, #232]	; 0xe8
    ff42:	movs	r1, r0
    ff44:	lsls	r0, r0, #11
    ff46:	movs	r0, r0
    ff48:	ldr	r5, [sp, #992]	; 0x3e0
    ff4a:	movs	r1, r0
    ff4c:	ldrh	r0, [r4, #22]
    ff4e:	movs	r0, r0
    ff50:	push	{r4, lr}
    ff52:	movs	r0, #14
    ff54:	blx	2680 <nl_langinfo@plt>
    ff58:	ldr	r1, [pc, #68]	; (ffa0 <error@@Base+0x3344>)
    ff5a:	add	r1, pc
    ff5c:	mov	r4, r0
    ff5e:	blx	28dc <strcmp@plt+0x4>
    ff62:	cbz	r0, ff9c <error@@Base+0x3340>
    ff64:	ldr	r1, [pc, #60]	; (ffa4 <error@@Base+0x3348>)
    ff66:	mov	r0, r4
    ff68:	add	r1, pc
    ff6a:	blx	28dc <strcmp@plt+0x4>
    ff6e:	cbz	r0, ff9c <error@@Base+0x3340>
    ff70:	ldr	r1, [pc, #52]	; (ffa8 <error@@Base+0x334c>)
    ff72:	mov	r0, r4
    ff74:	add	r1, pc
    ff76:	blx	28dc <strcmp@plt+0x4>
    ff7a:	cbz	r0, ff9c <error@@Base+0x3340>
    ff7c:	ldr	r1, [pc, #44]	; (ffac <error@@Base+0x3350>)
    ff7e:	mov	r0, r4
    ff80:	add	r1, pc
    ff82:	blx	28dc <strcmp@plt+0x4>
    ff86:	cbz	r0, ff9c <error@@Base+0x3340>
    ff88:	ldr	r1, [pc, #36]	; (ffb0 <error@@Base+0x3354>)
    ff8a:	mov	r0, r4
    ff8c:	add	r1, pc
    ff8e:	blx	28dc <strcmp@plt+0x4>
    ff92:	cbz	r0, ff9c <error@@Base+0x3340>
    ff94:	ldrb	r0, [r4, #0]
    ff96:	subs	r0, #0
    ff98:	it	ne
    ff9a:	movne	r0, #1
    ff9c:	pop	{r4, pc}
    ff9e:	nop
    ffa0:	ldrh	r2, [r4, #30]
    ffa2:	movs	r0, r0
    ffa4:	ldrh	r4, [r3, #30]
    ffa6:	movs	r0, r0
    ffa8:	ldrh	r4, [r3, #30]
    ffaa:	movs	r0, r0
    ffac:	ldrh	r0, [r4, #30]
    ffae:	movs	r0, r0
    ffb0:	ldrh	r0, [r4, #30]
    ffb2:	movs	r0, r0
    ffb4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ffb8:	mov	r5, r0
    ffba:	vpush	{d8-d9}
    ffbe:	mov	r4, r2
    ffc0:	mov	r6, r3
    ffc2:	mov	r9, r1
    ffc4:	mov	r2, r6
    ffc6:	movs	r1, #1
    ffc8:	sub	sp, #44	; 0x2c
    ffca:	add	r0, sp, #28
    ffcc:	str	r5, [sp, #16]
    ffce:	ldr	r5, [pc, #836]	; (10314 <error@@Base+0x36b8>)
    ffd0:	str	r4, [sp, #8]
    ffd2:	ldr	r4, [pc, #836]	; (10318 <error@@Base+0x36bc>)
    ffd4:	add	r5, pc
    ffd6:	ldr	r3, [sp, #96]	; 0x60
    ffd8:	ldr	r4, [r5, r4]
    ffda:	movs	r5, #0
    ffdc:	ldr	r4, [r4, #0]
    ffde:	str	r4, [sp, #36]	; 0x24
    ffe0:	mov.w	r4, #0
    ffe4:	str	r5, [sp, #28]
    ffe6:	blx	28f4 <__vasprintf_chk@plt>
    ffea:	subs	r4, r0, #0
    ffec:	ble.w	10214 <error@@Base+0x35b8>
    fff0:	ldr.w	r8, [sp, #28]
    fff4:	mov	r0, r8
    fff6:	blx	24a0 <strlen@plt>
    fffa:	adds	r3, r0, #1
    fffc:	str	r3, [sp, #12]
    fffe:	mov	r0, r3
   10000:	blx	2674 <malloc@plt>
   10004:	mov	fp, r0
   10006:	cmp	r0, #0
   10008:	beq.w	102b0 <error@@Base+0x3654>
   1000c:	mov	r3, r9
   1000e:	cmp	r3, #0
   10010:	it	lt
   10012:	mvnlt.w	r3, #2147483648	; 0x80000000
   10016:	vmov	s16, r3
   1001a:	ldr	r3, [sp, #8]
   1001c:	cmp	r3, #0
   1001e:	beq.w	10264 <error@@Base+0x3608>
   10022:	ldr	r3, [r3, #0]
   10024:	ldrb.w	r4, [r8]
   10028:	vmov	s17, r3
   1002c:	cmp	r4, #0
   1002e:	beq.w	10294 <error@@Base+0x3638>
   10032:	add	r3, sp, #32
   10034:	mov	r7, fp
   10036:	mov.w	r9, #1
   1003a:	movs	r4, #0
   1003c:	vmov	s18, r3
   10040:	str	r4, [sp, #4]
   10042:	blx	229c <__ctype_get_mb_cur_max@plt>
   10046:	mov	r1, r8
   10048:	mov	r2, r0
   1004a:	vmov	r0, s18
   1004e:	blx	2788 <mbtowc@plt>
   10052:	adds	r2, r0, #1
   10054:	mov	r6, r0
   10056:	beq.w	1024c <error@@Base+0x35f0>
   1005a:	ldr	r3, [sp, #8]
   1005c:	ldr	r0, [sp, #32]
   1005e:	cmp	r3, #0
   10060:	beq.w	101fa <error@@Base+0x359e>
   10064:	blx	2820 <wcwidth@plt>
   10068:	adds	r3, r0, #1
   1006a:	mov	r5, r0
   1006c:	beq.n	10134 <error@@Base+0x34d8>
   1006e:	cmp	r0, #0
   10070:	blt.n	1013e <error@@Base+0x34e2>
   10072:	cmp.w	r9, #0
   10076:	beq.n	100ce <error@@Base+0x3472>
   10078:	mov	r1, fp
   1007a:	mov	r0, r7
   1007c:	bl	14db4 <strvisx@@Base+0x1040>
   10080:	mov	r1, r6
   10082:	mov	sl, r0
   10084:	vmov	r0, s16
   10088:	bl	14db4 <strvisx@@Base+0x1040>
   1008c:	cmp	sl, r0
   1008e:	bge.w	1020e <error@@Base+0x35b2>
   10092:	vmov	r0, s17
   10096:	mov	r1, r5
   10098:	bl	14db4 <strvisx@@Base+0x1040>
   1009c:	ldr	r3, [sp, #4]
   1009e:	cmp	r0, r3
   100a0:	blt.w	1020e <error@@Base+0x35b2>
   100a4:	ldr	r1, [sp, #12]
   100a6:	adds	r3, r7, r6
   100a8:	add.w	r2, fp, r1
   100ac:	cmp	r3, r2
   100ae:	bcs.w	10226 <error@@Base+0x35ca>
   100b2:	mov	r1, r5
   100b4:	ldr	r0, [sp, #4]
   100b6:	str	r3, [sp, #20]
   100b8:	bl	14d50 <strvisx@@Base+0xfdc>
   100bc:	ldr	r3, [sp, #20]
   100be:	mov	r2, r6
   100c0:	mov	r1, r8
   100c2:	mov	r5, r0
   100c4:	mov	r0, r7
   100c6:	str	r5, [sp, #4]
   100c8:	mov	r7, r3
   100ca:	blx	24c4 <memcpy@plt>
   100ce:	cmp	r4, #0
   100d0:	add	r8, r6
   100d2:	blt.n	100de <error@@Base+0x3482>
   100d4:	mov	r0, r4
   100d6:	mov	r1, r6
   100d8:	bl	14d50 <strvisx@@Base+0xfdc>
   100dc:	mov	r4, r0
   100de:	ldrb.w	r3, [r8]
   100e2:	cmp	r3, #0
   100e4:	bne.n	10042 <error@@Base+0x33e6>
   100e6:	ldr	r0, [sp, #28]
   100e8:	eor.w	r9, r9, #1
   100ec:	blx	23f8 <free@plt+0x4>
   100f0:	vmov	r3, s16
   100f4:	movs	r2, #0
   100f6:	strb	r2, [r7, #0]
   100f8:	ldr	r2, [sp, #16]
   100fa:	str.w	fp, [r2]
   100fe:	ldr	r2, [sp, #8]
   10100:	cmp	r4, r3
   10102:	ite	ge
   10104:	movge	r3, #0
   10106:	andlt.w	r3, r9, #1
   1010a:	cbz	r2, 10110 <error@@Base+0x34b4>
   1010c:	ldr	r1, [sp, #4]
   1010e:	str	r1, [r2, #0]
   10110:	cmp	r3, #0
   10112:	bne.w	1028e <error@@Base+0x3632>
   10116:	ldr	r2, [pc, #516]	; (1031c <error@@Base+0x36c0>)
   10118:	ldr	r3, [pc, #508]	; (10318 <error@@Base+0x36bc>)
   1011a:	add	r2, pc
   1011c:	ldr	r3, [r2, r3]
   1011e:	ldr	r2, [r3, #0]
   10120:	ldr	r3, [sp, #36]	; 0x24
   10122:	eors	r2, r3
   10124:	bne.w	1030e <error@@Base+0x36b2>
   10128:	mov	r0, r4
   1012a:	add	sp, #44	; 0x2c
   1012c:	vpop	{d8-d9}
   10130:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10134:	bl	ff50 <error@@Base+0x32f4>
   10138:	cmp	r0, #0
   1013a:	bne.w	1028a <error@@Base+0x362e>
   1013e:	cmp	r6, #0
   10140:	ble.n	100de <error@@Base+0x3482>
   10142:	mov	r3, r6
   10144:	mov	r5, r8
   10146:	mov	r6, r9
   10148:	mov	r9, r3
   1014a:	cmp	r6, #0
   1014c:	beq.n	101f4 <error@@Base+0x3598>
   1014e:	mov	r1, fp
   10150:	mov	r0, r7
   10152:	bl	14db4 <strvisx@@Base+0x1040>
   10156:	mvn.w	r1, #3
   1015a:	mov	sl, r0
   1015c:	vmov	r0, s16
   10160:	bl	14d50 <strvisx@@Base+0xfdc>
   10164:	cmp	sl, r0
   10166:	bge.n	101f2 <error@@Base+0x3596>
   10168:	vmov	r0, s17
   1016c:	mvn.w	r1, #3
   10170:	bl	14d50 <strvisx@@Base+0xfdc>
   10174:	ldr	r3, [sp, #4]
   10176:	cmp	r0, r3
   10178:	blt.n	101f2 <error@@Base+0x3596>
   1017a:	ldr	r1, [sp, #12]
   1017c:	adds	r3, r7, #4
   1017e:	add.w	r2, fp, r1
   10182:	cmp	r3, r2
   10184:	bcc.n	101ae <error@@Base+0x3552>
   10186:	vmov	r3, s16
   1018a:	add.w	r2, r1, #128	; 0x80
   1018e:	mov	r0, fp
   10190:	cmp	r2, r3
   10192:	it	cs
   10194:	movcs	r2, r3
   10196:	movs	r3, #1
   10198:	str	r2, [sp, #12]
   1019a:	bl	133c4 <setlogin@@Base+0x2108>
   1019e:	ldr	r2, [sp, #12]
   101a0:	cmp	r0, #0
   101a2:	beq.w	102ce <error@@Base+0x3672>
   101a6:	add.w	r7, r0, sl
   101aa:	mov	fp, r0
   101ac:	str	r2, [sp, #12]
   101ae:	movs	r3, #0
   101b0:	movw	r2, #1025	; 0x401
   101b4:	ldrb	r1, [r5, #0]
   101b6:	mov	r0, r7
   101b8:	bl	1386c <vis@@Base>
   101bc:	mov	r1, r7
   101be:	mov	r7, r0
   101c0:	bl	14db4 <strvisx@@Base+0x1040>
   101c4:	mov	sl, r0
   101c6:	ldr	r0, [sp, #4]
   101c8:	mov	r1, sl
   101ca:	bl	14d50 <strvisx@@Base+0xfdc>
   101ce:	str	r0, [sp, #4]
   101d0:	cmp	r4, #0
   101d2:	add.w	r5, r5, #1
   101d6:	blt.n	101e2 <error@@Base+0x3586>
   101d8:	mov	r0, r4
   101da:	mov	r1, sl
   101dc:	bl	14d50 <strvisx@@Base+0xfdc>
   101e0:	mov	r4, r0
   101e2:	add.w	r3, r8, r9
   101e6:	subs	r3, r3, r5
   101e8:	cmp	r3, #0
   101ea:	bgt.n	1014a <error@@Base+0x34ee>
   101ec:	mov	r9, r6
   101ee:	mov	r8, r5
   101f0:	b.n	100de <error@@Base+0x3482>
   101f2:	movs	r6, #0
   101f4:	mov.w	sl, #4
   101f8:	b.n	101d0 <error@@Base+0x3574>
   101fa:	sub.w	r3, r0, #9
   101fe:	cmp	r0, #13
   10200:	it	ne
   10202:	cmpne	r3, #1
   10204:	it	ls
   10206:	ldrls	r5, [sp, #8]
   10208:	bls.w	10072 <error@@Base+0x3416>
   1020c:	b.n	10064 <error@@Base+0x3408>
   1020e:	mov.w	r9, #0
   10212:	b.n	100ce <error@@Base+0x3472>
   10214:	ldr	r3, [sp, #8]
   10216:	cbz	r3, 1021a <error@@Base+0x35be>
   10218:	str	r5, [r3, #0]
   1021a:	cmp	r4, #0
   1021c:	bne.n	102be <error@@Base+0x3662>
   1021e:	ldr	r3, [sp, #28]
   10220:	ldr	r2, [sp, #16]
   10222:	str	r3, [r2, #0]
   10224:	b.n	10116 <error@@Base+0x34ba>
   10226:	vmov	r3, s16
   1022a:	add.w	r2, r1, #128	; 0x80
   1022e:	mov	r0, fp
   10230:	cmp	r2, r3
   10232:	it	cs
   10234:	movcs	r2, r3
   10236:	movs	r3, #1
   10238:	str	r2, [sp, #12]
   1023a:	bl	133c4 <setlogin@@Base+0x2108>
   1023e:	cmp	r0, #0
   10240:	beq.n	102ec <error@@Base+0x3690>
   10242:	add.w	r7, r0, sl
   10246:	mov	fp, r0
   10248:	adds	r3, r7, r6
   1024a:	b.n	100b2 <error@@Base+0x3456>
   1024c:	blx	229c <__ctype_get_mb_cur_max@plt>
   10250:	movs	r1, #0
   10252:	mov	r2, r0
   10254:	mov	r0, r1
   10256:	blx	2788 <mbtowc@plt>
   1025a:	bl	ff50 <error@@Base+0x32f4>
   1025e:	cbnz	r0, 102ca <error@@Base+0x366e>
   10260:	movs	r6, #1
   10262:	b.n	10142 <error@@Base+0x34e6>
   10264:	ldrb.w	r5, [r8]
   10268:	mvn.w	r3, #2147483648	; 0x80000000
   1026c:	vmov	s17, r3
   10270:	cmp	r5, #0
   10272:	bne.w	10032 <error@@Base+0x33d6>
   10276:	mov	r0, r8
   10278:	mov	r4, r5
   1027a:	blx	23f8 <free@plt+0x4>
   1027e:	ldr	r3, [sp, #16]
   10280:	strb.w	r5, [fp]
   10284:	str.w	fp, [r3]
   10288:	b.n	10116 <error@@Base+0x34ba>
   1028a:	mov	r4, r5
   1028c:	b.n	100e6 <error@@Base+0x348a>
   1028e:	mov.w	r4, #4294967295	; 0xffffffff
   10292:	b.n	10116 <error@@Base+0x34ba>
   10294:	mov	r0, r8
   10296:	str	r4, [sp, #4]
   10298:	blx	23f8 <free@plt+0x4>
   1029c:	ldr	r3, [sp, #16]
   1029e:	strb.w	r4, [fp]
   102a2:	str.w	fp, [r3]
   102a6:	ldr	r3, [sp, #8]
   102a8:	mov	r2, r3
   102aa:	ldr	r3, [sp, #4]
   102ac:	str	r3, [r2, #0]
   102ae:	b.n	10116 <error@@Base+0x34ba>
   102b0:	mov	r0, r8
   102b2:	blx	23f8 <free@plt+0x4>
   102b6:	ldr	r3, [sp, #8]
   102b8:	cbz	r3, 102be <error@@Base+0x3662>
   102ba:	str.w	fp, [r3]
   102be:	ldr	r2, [sp, #16]
   102c0:	movs	r3, #0
   102c2:	mov.w	r4, #4294967295	; 0xffffffff
   102c6:	str	r3, [r2, #0]
   102c8:	b.n	10116 <error@@Base+0x34ba>
   102ca:	mov	r4, r6
   102cc:	b.n	100e6 <error@@Base+0x348a>
   102ce:	str	r0, [sp, #12]
   102d0:	mov.w	r4, #4294967295	; 0xffffffff
   102d4:	ldr	r0, [sp, #28]
   102d6:	blx	23f8 <free@plt+0x4>
   102da:	ldr	r3, [sp, #12]
   102dc:	strb	r3, [r7, #0]
   102de:	ldr	r3, [sp, #16]
   102e0:	str.w	fp, [r3]
   102e4:	ldr	r3, [sp, #8]
   102e6:	cmp	r3, #0
   102e8:	bne.n	102a6 <error@@Base+0x364a>
   102ea:	b.n	10116 <error@@Base+0x34ba>
   102ec:	str	r0, [sp, #12]
   102ee:	ldr	r0, [sp, #28]
   102f0:	blx	23f8 <free@plt+0x4>
   102f4:	ldr	r3, [sp, #12]
   102f6:	strb	r3, [r7, #0]
   102f8:	ldr	r3, [sp, #16]
   102fa:	str.w	fp, [r3]
   102fe:	ldr	r3, [sp, #8]
   10300:	cmp	r3, #0
   10302:	beq.n	1028e <error@@Base+0x3632>
   10304:	ldr	r2, [sp, #4]
   10306:	mov.w	r4, #4294967295	; 0xffffffff
   1030a:	str	r2, [r3, #0]
   1030c:	b.n	10116 <error@@Base+0x34ba>
   1030e:	blx	2698 <__stack_chk_fail@plt>
   10312:	nop
   10314:	ldr	r5, [sp, #176]	; 0xb0
   10316:	movs	r1, r0
   10318:	lsls	r0, r0, #11
   1031a:	movs	r0, r0
   1031c:	ldr	r3, [sp, #920]	; 0x398
   1031e:	movs	r1, r0
   10320:	push	{r3}
   10322:	ldr.w	ip, [pc, #100]	; 10388 <error@@Base+0x372c>
   10326:	push	{r4, r5, r6, lr}
   10328:	sub	sp, #28
   1032a:	add	r4, sp, #44	; 0x2c
   1032c:	ldr	r6, [pc, #92]	; (1038c <error@@Base+0x3730>)
   1032e:	add	ip, pc
   10330:	mov	r5, r0
   10332:	ldr.w	r3, [r4], #4
   10336:	add	r0, sp, #16
   10338:	ldr.w	r6, [ip, r6]
   1033c:	ldr	r6, [r6, #0]
   1033e:	str	r6, [sp, #20]
   10340:	mov.w	r6, #0
   10344:	str	r4, [sp, #0]
   10346:	mov	r6, r1
   10348:	str	r4, [sp, #12]
   1034a:	bl	ffb4 <error@@Base+0x3358>
   1034e:	ldr	r1, [sp, #16]
   10350:	mov	r4, r0
   10352:	cbz	r1, 1037e <error@@Base+0x3722>
   10354:	mov	r2, r6
   10356:	mov	r0, r5
   10358:	bl	13518 <strlcpy@@Base>
   1035c:	ldr	r0, [sp, #16]
   1035e:	blx	23f8 <free@plt+0x4>
   10362:	ldr	r2, [pc, #44]	; (10390 <error@@Base+0x3734>)
   10364:	ldr	r3, [pc, #36]	; (1038c <error@@Base+0x3730>)
   10366:	add	r2, pc
   10368:	ldr	r3, [r2, r3]
   1036a:	ldr	r2, [r3, #0]
   1036c:	ldr	r3, [sp, #20]
   1036e:	eors	r2, r3
   10370:	bne.n	10382 <error@@Base+0x3726>
   10372:	mov	r0, r4
   10374:	add	sp, #28
   10376:	ldmia.w	sp!, {r4, r5, r6, lr}
   1037a:	add	sp, #4
   1037c:	bx	lr
   1037e:	strb	r1, [r5, #0]
   10380:	b.n	10362 <error@@Base+0x3706>
   10382:	blx	2698 <__stack_chk_fail@plt>
   10386:	nop
   10388:	ldr	r1, [sp, #840]	; 0x348
   1038a:	movs	r1, r0
   1038c:	lsls	r0, r0, #11
   1038e:	movs	r0, r0
   10390:	ldr	r1, [sp, #616]	; 0x268
   10392:	movs	r1, r0
   10394:	ldr.w	ip, [pc, #96]	; 103f8 <error@@Base+0x379c>
   10398:	mov	r3, r1
   1039a:	push	{r4, r5, lr}
   1039c:	add	ip, pc
   1039e:	ldr	r4, [pc, #92]	; (103fc <error@@Base+0x37a0>)
   103a0:	sub	sp, #20
   103a2:	mov	r5, r0
   103a4:	mvn.w	r1, #2147483648	; 0x80000000
   103a8:	str	r2, [sp, #0]
   103aa:	add	r0, sp, #8
   103ac:	ldr.w	r4, [ip, r4]
   103b0:	movs	r2, #0
   103b2:	ldr	r4, [r4, #0]
   103b4:	str	r4, [sp, #12]
   103b6:	mov.w	r4, #0
   103ba:	bl	ffb4 <error@@Base+0x3358>
   103be:	subs	r4, r0, #0
   103c0:	blt.n	103ee <error@@Base+0x3792>
   103c2:	ldr	r0, [sp, #8]
   103c4:	mov	r1, r5
   103c6:	blx	2930 <fputs@plt>
   103ca:	adds	r0, #1
   103cc:	ldr	r0, [sp, #8]
   103ce:	it	eq
   103d0:	moveq.w	r4, #4294967295	; 0xffffffff
   103d4:	blx	23f8 <free@plt+0x4>
   103d8:	ldr	r2, [pc, #36]	; (10400 <error@@Base+0x37a4>)
   103da:	ldr	r3, [pc, #32]	; (103fc <error@@Base+0x37a0>)
   103dc:	add	r2, pc
   103de:	ldr	r3, [r2, r3]
   103e0:	ldr	r2, [r3, #0]
   103e2:	ldr	r3, [sp, #12]
   103e4:	eors	r2, r3
   103e6:	bne.n	103f4 <error@@Base+0x3798>
   103e8:	mov	r0, r4
   103ea:	add	sp, #20
   103ec:	pop	{r4, r5, pc}
   103ee:	mov.w	r4, #4294967295	; 0xffffffff
   103f2:	b.n	103d8 <error@@Base+0x377c>
   103f4:	blx	2698 <__stack_chk_fail@plt>
   103f8:	ldr	r1, [sp, #400]	; 0x190
   103fa:	movs	r1, r0
   103fc:	lsls	r0, r0, #11
   103fe:	movs	r0, r0
   10400:	ldr	r1, [sp, #144]	; 0x90
   10402:	movs	r1, r0
   10404:	push	{r1, r2, r3}
   10406:	ldr	r1, [pc, #60]	; (10444 <error@@Base+0x37e8>)
   10408:	push	{lr}
   1040a:	sub	sp, #8
   1040c:	ldr	r3, [pc, #56]	; (10448 <error@@Base+0x37ec>)
   1040e:	add	r2, sp, #12
   10410:	add	r1, pc
   10412:	ldr	r3, [r1, r3]
   10414:	ldr.w	r1, [r2], #4
   10418:	ldr	r3, [r3, #0]
   1041a:	str	r3, [sp, #4]
   1041c:	mov.w	r3, #0
   10420:	str	r2, [sp, #0]
   10422:	bl	10394 <error@@Base+0x3738>
   10426:	ldr	r2, [pc, #36]	; (1044c <error@@Base+0x37f0>)
   10428:	ldr	r3, [pc, #28]	; (10448 <error@@Base+0x37ec>)
   1042a:	add	r2, pc
   1042c:	ldr	r3, [r2, r3]
   1042e:	ldr	r2, [r3, #0]
   10430:	ldr	r3, [sp, #4]
   10432:	eors	r2, r3
   10434:	bne.n	10440 <error@@Base+0x37e4>
   10436:	add	sp, #8
   10438:	ldr.w	lr, [sp], #4
   1043c:	add	sp, #12
   1043e:	bx	lr
   10440:	blx	2698 <__stack_chk_fail@plt>
   10444:	ldr	r0, [sp, #960]	; 0x3c0
   10446:	movs	r1, r0
   10448:	lsls	r0, r0, #11
   1044a:	movs	r0, r0
   1044c:	ldr	r0, [sp, #856]	; 0x358
   1044e:	movs	r1, r0
   10450:	ldr.w	ip, [pc, #76]	; 104a0 <error@@Base+0x3844>
   10454:	push	{r0, r1, r2, r3}
   10456:	add	ip, pc
   10458:	ldr	r0, [pc, #72]	; (104a4 <error@@Base+0x3848>)
   1045a:	push	{lr}
   1045c:	sub	sp, #12
   1045e:	ldr.w	r0, [ip, r0]
   10462:	add	r2, sp, #16
   10464:	ldr	r3, [pc, #64]	; (104a8 <error@@Base+0x384c>)
   10466:	ldr	r0, [r0, #0]
   10468:	str	r0, [sp, #4]
   1046a:	mov.w	r0, #0
   1046e:	ldr.w	r1, [r2], #4
   10472:	ldr	r0, [pc, #56]	; (104ac <error@@Base+0x3850>)
   10474:	add	r3, pc
   10476:	str	r2, [sp, #0]
   10478:	ldr	r3, [r3, r0]
   1047a:	ldr	r0, [r3, #0]
   1047c:	bl	10394 <error@@Base+0x3738>
   10480:	ldr	r2, [pc, #44]	; (104b0 <error@@Base+0x3854>)
   10482:	ldr	r3, [pc, #32]	; (104a4 <error@@Base+0x3848>)
   10484:	add	r2, pc
   10486:	ldr	r3, [r2, r3]
   10488:	ldr	r2, [r3, #0]
   1048a:	ldr	r3, [sp, #4]
   1048c:	eors	r2, r3
   1048e:	bne.n	1049a <error@@Base+0x383e>
   10490:	add	sp, #12
   10492:	ldr.w	lr, [sp], #4
   10496:	add	sp, #16
   10498:	bx	lr
   1049a:	blx	2698 <__stack_chk_fail@plt>
   1049e:	nop
   104a0:	ldr	r0, [sp, #680]	; 0x2a8
   104a2:	movs	r1, r0
   104a4:	lsls	r0, r0, #11
   104a6:	movs	r0, r0
   104a8:	ldr	r0, [sp, #560]	; 0x230
   104aa:	movs	r1, r0
   104ac:	lsls	r4, r3, #11
   104ae:	movs	r0, r0
   104b0:	ldr	r0, [sp, #496]	; 0x1f0
   104b2:	movs	r1, r0
   104b4:	ldr	r1, [pc, #208]	; (10588 <error@@Base+0x392c>)
   104b6:	ldr	r2, [pc, #212]	; (1058c <error@@Base+0x3930>)
   104b8:	add	r1, pc
   104ba:	ldr	r3, [pc, #212]	; (10590 <error@@Base+0x3934>)
   104bc:	push	{r4, r5, r6, lr}
   104be:	add	r3, pc
   104c0:	ldr	r2, [r1, r2]
   104c2:	sub	sp, #24
   104c4:	ldr	r5, [pc, #204]	; (10594 <error@@Base+0x3938>)
   104c6:	add	r4, sp, #4
   104c8:	ldr	r2, [r2, #0]
   104ca:	str	r2, [sp, #20]
   104cc:	mov.w	r2, #0
   104d0:	add	r6, sp, #8
   104d2:	ldmia	r3, {r0, r1, r2, r3}
   104d4:	add	r5, pc
   104d6:	stmia.w	r4, {r0, r1, r2, r3}
   104da:	mov	r0, r5
   104dc:	blx	22d8 <getenv@plt>
   104e0:	mov	r4, r0
   104e2:	cbz	r0, 1051e <error@@Base+0x38c2>
   104e4:	ldr	r1, [pc, #176]	; (10598 <error@@Base+0x393c>)
   104e6:	movs	r2, #2
   104e8:	add	r1, pc
   104ea:	blx	261c <strncasecmp@plt>
   104ee:	cbnz	r0, 10526 <error@@Base+0x38ca>
   104f0:	ldr	r1, [pc, #168]	; (1059c <error@@Base+0x3940>)
   104f2:	mov	r0, r4
   104f4:	add	r1, pc
   104f6:	blx	2254 <strcasestr@plt>
   104fa:	cbz	r0, 10546 <error@@Base+0x38ea>
   104fc:	ldr	r1, [pc, #160]	; (105a0 <error@@Base+0x3944>)
   104fe:	movs	r0, #0
   10500:	add	r1, pc
   10502:	blx	24d4 <setlocale@plt+0x4>
   10506:	cmp	r0, #0
   10508:	beq.n	10574 <error@@Base+0x3918>
   1050a:	ldr	r2, [pc, #152]	; (105a4 <error@@Base+0x3948>)
   1050c:	ldr	r3, [pc, #124]	; (1058c <error@@Base+0x3930>)
   1050e:	add	r2, pc
   10510:	ldr	r3, [r2, r3]
   10512:	ldr	r2, [r3, #0]
   10514:	ldr	r3, [sp, #20]
   10516:	eors	r2, r3
   10518:	bne.n	10582 <error@@Base+0x3926>
   1051a:	add	sp, #24
   1051c:	pop	{r4, r5, r6, pc}
   1051e:	ldr.w	r5, [r6], #4
   10522:	cmp	r5, #0
   10524:	bne.n	104da <error@@Base+0x387e>
   10526:	ldr	r2, [pc, #128]	; (105a8 <error@@Base+0x394c>)
   10528:	ldr	r3, [pc, #96]	; (1058c <error@@Base+0x3930>)
   1052a:	add	r2, pc
   1052c:	ldr	r3, [r2, r3]
   1052e:	ldr	r2, [r3, #0]
   10530:	ldr	r3, [sp, #20]
   10532:	eors	r2, r3
   10534:	bne.n	10582 <error@@Base+0x3926>
   10536:	ldr	r1, [pc, #116]	; (105ac <error@@Base+0x3950>)
   10538:	movs	r0, #0
   1053a:	add	r1, pc
   1053c:	add	sp, #24
   1053e:	ldmia.w	sp!, {r4, r5, r6, lr}
   10542:	b.w	24d0 <setlocale@plt>
   10546:	ldr	r1, [pc, #104]	; (105b0 <error@@Base+0x3954>)
   10548:	mov	r0, r4
   1054a:	add	r1, pc
   1054c:	blx	2254 <strcasestr@plt>
   10550:	cmp	r0, #0
   10552:	bne.n	104fc <error@@Base+0x38a0>
   10554:	ldr	r2, [pc, #92]	; (105b4 <error@@Base+0x3958>)
   10556:	ldr	r3, [pc, #52]	; (1058c <error@@Base+0x3930>)
   10558:	add	r2, pc
   1055a:	ldr	r3, [r2, r3]
   1055c:	ldr	r2, [r3, #0]
   1055e:	ldr	r3, [sp, #20]
   10560:	eors	r2, r3
   10562:	bne.n	10582 <error@@Base+0x3926>
   10564:	ldr	r1, [pc, #80]	; (105b8 <error@@Base+0x395c>)
   10566:	movs	r0, #0
   10568:	add	r1, pc
   1056a:	add	sp, #24
   1056c:	ldmia.w	sp!, {r4, r5, r6, lr}
   10570:	b.w	24d0 <setlocale@plt>
   10574:	ldr	r1, [pc, #68]	; (105bc <error@@Base+0x3960>)
   10576:	add	r1, pc
   10578:	blx	24d4 <setlocale@plt+0x4>
   1057c:	cmp	r0, #0
   1057e:	bne.n	1050a <error@@Base+0x38ae>
   10580:	b.n	10554 <error@@Base+0x38f8>
   10582:	blx	2698 <__stack_chk_fail@plt>
   10586:	nop
   10588:	ldr	r0, [sp, #288]	; 0x120
   1058a:	movs	r1, r0
   1058c:	lsls	r0, r0, #11
   1058e:	movs	r0, r0
   10590:	ldr	r3, [sp, #392]	; 0x188
   10592:	movs	r1, r0
   10594:	strh	r4, [r1, #50]	; 0x32
   10596:	movs	r0, r0
   10598:	strh	r0, [r1, #52]	; 0x34
   1059a:	movs	r0, r0
   1059c:	strh	r0, [r1, #50]	; 0x32
   1059e:	movs	r0, r0
   105a0:	strh	r0, [r0, #52]	; 0x34
   105a2:	movs	r0, r0
   105a4:	str	r7, [sp, #968]	; 0x3c8
   105a6:	movs	r1, r0
   105a8:	str	r7, [sp, #856]	; 0x358
   105aa:	movs	r1, r0
   105ac:	ldr	r6, [pc, #824]	; (108e8 <error@@Base+0x3c8c>)
   105ae:	movs	r0, r0
   105b0:	strh	r2, [r5, #48]	; 0x30
   105b2:	movs	r0, r0
   105b4:	str	r7, [sp, #672]	; 0x2a0
   105b6:	movs	r1, r0
   105b8:	strh	r4, [r2, #48]	; 0x30
   105ba:	movs	r0, r0
   105bc:	strh	r2, [r2, #48]	; 0x30
   105be:	movs	r0, r0
   105c0:	ldr	r2, [pc, #124]	; (10640 <error@@Base+0x39e4>)
   105c2:	ldr	r3, [pc, #128]	; (10644 <error@@Base+0x39e8>)
   105c4:	add	r2, pc
   105c6:	push	{lr}
   105c8:	sub	sp, #68	; 0x44
   105ca:	ldr	r3, [r2, r3]
   105cc:	ldr	r3, [r3, #0]
   105ce:	str	r3, [sp, #60]	; 0x3c
   105d0:	mov.w	r3, #0
   105d4:	bl	11300 <setlogin@@Base+0x44>
   105d8:	blx	23d0 <OpenSSL_version_num@plt>
   105dc:	mov	r1, r0
   105de:	movw	r0, #4207	; 0x106f
   105e2:	movt	r0, #4112	; 0x1010
   105e6:	bl	112c4 <setlogin@@Base+0x8>
   105ea:	cbz	r0, 1061e <error@@Base+0x39c2>
   105ec:	blx	27f8 <RAND_status@plt>
   105f0:	cmp	r0, #1
   105f2:	bne.n	10638 <error@@Base+0x39dc>
   105f4:	add	r0, sp, #12
   105f6:	movs	r1, #48	; 0x30
   105f8:	str	r0, [sp, #4]
   105fa:	bl	1119c <arc4random_buf@@Base>
   105fe:	movs	r2, #48	; 0x30
   10600:	ldr	r0, [sp, #4]
   10602:	mov	r1, r2
   10604:	blx	2524 <__explicit_bzero_chk@plt+0x4>
   10608:	ldr	r2, [pc, #60]	; (10648 <error@@Base+0x39ec>)
   1060a:	ldr	r3, [pc, #56]	; (10644 <error@@Base+0x39e8>)
   1060c:	add	r2, pc
   1060e:	ldr	r3, [r2, r3]
   10610:	ldr	r2, [r3, #0]
   10612:	ldr	r3, [sp, #60]	; 0x3c
   10614:	eors	r2, r3
   10616:	bne.n	10634 <error@@Base+0x39d8>
   10618:	add	sp, #68	; 0x44
   1061a:	ldr.w	pc, [sp], #4
   1061e:	blx	23d0 <OpenSSL_version_num@plt>
   10622:	movw	r1, #4207	; 0x106f
   10626:	movt	r1, #4112	; 0x1010
   1062a:	mov	r2, r0
   1062c:	ldr	r0, [pc, #28]	; (1064c <error@@Base+0x39f0>)
   1062e:	add	r0, pc
   10630:	bl	c6e4 <el_source@plt+0x9da8>
   10634:	blx	2698 <__stack_chk_fail@plt>
   10638:	ldr	r0, [pc, #20]	; (10650 <error@@Base+0x39f4>)
   1063a:	add	r0, pc
   1063c:	bl	c6e4 <el_source@plt+0x9da8>
   10640:	str	r7, [sp, #240]	; 0xf0
   10642:	movs	r1, r0
   10644:	lsls	r0, r0, #11
   10646:	movs	r0, r0
   10648:	str	r6, [sp, #976]	; 0x3d0
   1064a:	movs	r1, r0
   1064c:	strh	r6, [r4, #42]	; 0x2a
   1064e:	movs	r0, r0
   10650:	strh	r6, [r2, #44]	; 0x2c
   10652:	movs	r0, r0
   10654:	clz	r0, r0
   10658:	lsrs	r0, r0, #5
   1065a:	bx	lr
   1065c:	cmp	r1, #0
   1065e:	beq.n	10734 <error@@Base+0x3ad8>
   10660:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10664:	mov	sl, r0
   10666:	ldr	r3, [pc, #208]	; (10738 <error@@Base+0x3adc>)
   10668:	mov	r6, r2
   1066a:	ldr.w	r9, [pc, #208]	; 1073c <error@@Base+0x3ae0>
   1066e:	mov	r8, r1
   10670:	ldr.w	fp, [pc, #204]	; 10740 <error@@Base+0x3ae4>
   10674:	add	r3, pc
   10676:	vpush	{d8}
   1067a:	add	r9, pc
   1067c:	add	fp, pc
   1067e:	movs	r7, #0
   10680:	vmov	s16, r3
   10684:	mov	r3, r7
   10686:	mov	r5, r7
   10688:	vmov	r2, s16
   1068c:	adds	r7, #16
   1068e:	movs	r1, #1
   10690:	mov	r0, r6
   10692:	blx	26bc <__fprintf_chk@plt>
   10696:	cmp	r5, r7
   10698:	bcs.n	1071e <error@@Base+0x3ac2>
   1069a:	mov	r4, r5
   1069c:	b.n	106b0 <error@@Base+0x3a54>
   1069e:	ldrb.w	r3, [sl, r4]
   106a2:	mov	r2, fp
   106a4:	adds	r4, #1
   106a6:	mov	r0, r6
   106a8:	blx	26bc <__fprintf_chk@plt>
   106ac:	cmp	r4, r7
   106ae:	beq.n	106ca <error@@Base+0x3a6e>
   106b0:	cmp	r8, r4
   106b2:	mov	r3, r6
   106b4:	mov.w	r2, #3
   106b8:	mov.w	r1, #1
   106bc:	mov	r0, r9
   106be:	bhi.n	1069e <error@@Base+0x3a42>
   106c0:	adds	r4, #1
   106c2:	blx	25f8 <fwrite@plt>
   106c6:	cmp	r4, r7
   106c8:	bne.n	106b0 <error@@Base+0x3a54>
   106ca:	mov	r1, r6
   106cc:	movs	r0, #32
   106ce:	blx	26e0 <fputc@plt>
   106d2:	b.n	106e2 <error@@Base+0x3a86>
   106d4:	mov	r1, r6
   106d6:	movs	r0, #46	; 0x2e
   106d8:	blx	26e0 <fputc@plt>
   106dc:	adds	r5, #1
   106de:	cmp	r5, r7
   106e0:	beq.n	1070a <error@@Base+0x3aae>
   106e2:	cmp	r8, r5
   106e4:	bls.n	106dc <error@@Base+0x3a80>
   106e6:	ldrb.w	r4, [sl, r5]
   106ea:	lsls	r2, r4, #24
   106ec:	bmi.n	106d4 <error@@Base+0x3a78>
   106ee:	blx	2640 <__ctype_b_loc@plt>
   106f2:	ldr	r3, [r0, #0]
   106f4:	ldrh.w	r3, [r3, r4, lsl #1]
   106f8:	lsls	r3, r3, #17
   106fa:	bpl.n	106d4 <error@@Base+0x3a78>
   106fc:	adds	r5, #1
   106fe:	mov	r0, r4
   10700:	mov	r1, r6
   10702:	blx	26e0 <fputc@plt>
   10706:	cmp	r5, r7
   10708:	bne.n	106e2 <error@@Base+0x3a86>
   1070a:	mov	r1, r6
   1070c:	movs	r0, #10
   1070e:	blx	26e0 <fputc@plt>
   10712:	cmp	r8, r7
   10714:	bhi.n	10684 <error@@Base+0x3a28>
   10716:	vpop	{d8}
   1071a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1071e:	mov	r1, r6
   10720:	movs	r0, #32
   10722:	blx	26e0 <fputc@plt>
   10726:	mov	r1, r6
   10728:	movs	r0, #10
   1072a:	blx	26e0 <fputc@plt>
   1072e:	cmp	r8, r7
   10730:	bhi.n	10684 <error@@Base+0x3a28>
   10732:	b.n	10716 <error@@Base+0x3aba>
   10734:	bx	lr
   10736:	nop
   10738:	strh	r0, [r6, #42]	; 0x2a
   1073a:	movs	r0, r0
   1073c:	strh	r2, [r7, #42]	; 0x2a
   1073e:	movs	r0, r0
   10740:	strh	r0, [r6, #42]	; 0x2a
   10742:	movs	r0, r0
   10744:	push	{r4, r5, r6, lr}
   10746:	sub	sp, #8
   10748:	mov	r5, r1
   1074a:	mov	r4, r0
   1074c:	bl	b5b8 <el_source@plt+0x8c7c>
   10750:	ldr	r2, [pc, #44]	; (10780 <error@@Base+0x3b24>)
   10752:	mov	r3, r4
   10754:	movs	r1, #1
   10756:	add	r2, pc
   10758:	str	r0, [sp, #0]
   1075a:	mov	r0, r5
   1075c:	blx	26bc <__fprintf_chk@plt>
   10760:	mov	r0, r4
   10762:	bl	b680 <el_source@plt+0x8d44>
   10766:	mov	r6, r0
   10768:	mov	r0, r4
   1076a:	bl	b5b8 <el_source@plt+0x8c7c>
   1076e:	mov	r2, r5
   10770:	mov	r1, r0
   10772:	mov	r0, r6
   10774:	add	sp, #8
   10776:	ldmia.w	sp!, {r4, r5, r6, lr}
   1077a:	b.w	1065c <error@@Base+0x3a00>
   1077e:	nop
   10780:	strh	r2, [r4, #36]	; 0x24
   10782:	movs	r0, r0
   10784:	ldr	r2, [pc, #176]	; (10838 <error@@Base+0x3bdc>)
   10786:	ldr	r3, [pc, #180]	; (1083c <error@@Base+0x3be0>)
   10788:	add	r2, pc
   1078a:	push	{r4, r5, r6, r7, lr}
   1078c:	sub	sp, #28
   1078e:	ldr	r3, [r2, r3]
   10790:	mov	r5, r0
   10792:	ldr	r6, [pc, #172]	; (10840 <error@@Base+0x3be4>)
   10794:	ldr	r3, [r3, #0]
   10796:	str	r3, [sp, #20]
   10798:	mov.w	r3, #0
   1079c:	bl	b5b8 <el_source@plt+0x8c7c>
   107a0:	add	r6, pc
   107a2:	mov	r4, r0
   107a4:	mov	r0, r5
   107a6:	bl	b680 <el_source@plt+0x8d44>
   107aa:	mov	r5, sp
   107ac:	mov	r7, r0
   107ae:	ldmia	r6!, {r0, r1, r2, r3}
   107b0:	ldr	r6, [r6, #0]
   107b2:	stmia	r5!, {r0, r1, r2, r3}
   107b4:	strb	r6, [r5, #0]
   107b6:	cbz	r4, 10816 <error@@Base+0x3bba>
   107b8:	mvn.w	r3, #2147483648	; 0x80000000
   107bc:	cmp	r4, r3
   107be:	bcs.n	10812 <error@@Base+0x3bb6>
   107c0:	lsls	r5, r4, #1
   107c2:	adds	r0, r5, #1
   107c4:	blx	2674 <malloc@plt>
   107c8:	cbz	r0, 10812 <error@@Base+0x3bb6>
   107ca:	subs	r1, r7, #1
   107cc:	add	r5, r0
   107ce:	mov	r2, r0
   107d0:	ldrb.w	r3, [r1, #1]!
   107d4:	add	r6, sp, #24
   107d6:	adds	r2, #2
   107d8:	add.w	r3, r6, r3, lsr #4
   107dc:	ldrb.w	r3, [r3, #-24]
   107e0:	strb.w	r3, [r2, #-2]
   107e4:	ldrb	r3, [r1, #0]
   107e6:	and.w	r3, r3, #15
   107ea:	add	r3, r6
   107ec:	ldrb.w	r3, [r3, #-24]
   107f0:	strb.w	r3, [r2, #-1]
   107f4:	cmp	r5, r2
   107f6:	bne.n	107d0 <error@@Base+0x3b74>
   107f8:	movs	r3, #0
   107fa:	strb.w	r3, [r0, r4, lsl #1]
   107fe:	ldr	r2, [pc, #68]	; (10844 <error@@Base+0x3be8>)
   10800:	ldr	r3, [pc, #56]	; (1083c <error@@Base+0x3be0>)
   10802:	add	r2, pc
   10804:	ldr	r3, [r2, r3]
   10806:	ldr	r2, [r3, #0]
   10808:	ldr	r3, [sp, #20]
   1080a:	eors	r2, r3
   1080c:	bne.n	10834 <error@@Base+0x3bd8>
   1080e:	add	sp, #28
   10810:	pop	{r4, r5, r6, r7, pc}
   10812:	movs	r0, #0
   10814:	b.n	107fe <error@@Base+0x3ba2>
   10816:	ldr	r2, [pc, #48]	; (10848 <error@@Base+0x3bec>)
   10818:	ldr	r3, [pc, #32]	; (1083c <error@@Base+0x3be0>)
   1081a:	add	r2, pc
   1081c:	ldr	r3, [r2, r3]
   1081e:	ldr	r2, [r3, #0]
   10820:	ldr	r3, [sp, #20]
   10822:	eors	r2, r3
   10824:	bne.n	10834 <error@@Base+0x3bd8>
   10826:	ldr	r0, [pc, #36]	; (1084c <error@@Base+0x3bf0>)
   10828:	add	r0, pc
   1082a:	add	sp, #28
   1082c:	ldmia.w	sp!, {r4, r5, r6, r7, lr}
   10830:	b.w	2658 <strdup@plt>
   10834:	blx	2698 <__stack_chk_fail@plt>
   10838:	str	r5, [sp, #480]	; 0x1e0
   1083a:	movs	r1, r0
   1083c:	lsls	r0, r0, #11
   1083e:	movs	r0, r0
   10840:	strh	r0, [r6, #34]	; 0x22
   10842:	movs	r0, r0
   10844:	str	r4, [sp, #1016]	; 0x3f8
   10846:	movs	r1, r0
   10848:	str	r4, [sp, #920]	; 0x398
   1084a:	movs	r1, r0
   1084c:	ldr	r3, [pc, #896]	; (10bd0 <error@@Base+0x3f74>)
   1084e:	movs	r0, r0
   10850:	cmp	r1, #0
   10852:	it	ne
   10854:	cmpne	r0, #0
   10856:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1085a:	vpush	{d8}
   1085e:	beq.w	10968 <error@@Base+0x3d0c>
   10862:	mov	r8, r2
   10864:	mov	r5, r1
   10866:	mov	r4, r0
   10868:	bl	b5b8 <el_source@plt+0x8c7c>
   1086c:	mvn.w	r3, #2147483648	; 0x80000000
   10870:	cmp	r0, r3
   10872:	bcs.n	10968 <error@@Base+0x3d0c>
   10874:	mov	r0, r4
   10876:	bl	b5b8 <el_source@plt+0x8c7c>
   1087a:	mov	fp, r0
   1087c:	cbnz	r0, 10888 <error@@Base+0x3c2c>
   1087e:	vpop	{d8}
   10882:	mov	r0, fp
   10884:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10888:	mov	r0, r4
   1088a:	bl	b5b8 <el_source@plt+0x8c7c>
   1088e:	movw	r3, #43691	; 0xaaab
   10892:	movt	r3, #43690	; 0xaaaa
   10896:	adds	r6, r0, #2
   10898:	umull	r3, r6, r3, r6
   1089c:	lsrs	r6, r6, #1
   1089e:	lsls	r6, r6, #2
   108a0:	adds	r3, r6, #1
   108a2:	mov	r0, r3
   108a4:	vmov	s16, r3
   108a8:	mov	r6, r3
   108aa:	blx	2674 <malloc@plt>
   108ae:	mov	r7, r0
   108b0:	cmp	r0, #0
   108b2:	beq.n	1096e <error@@Base+0x3d12>
   108b4:	mov	r0, r4
   108b6:	bl	b680 <el_source@plt+0x8d44>
   108ba:	mov	r9, r0
   108bc:	mov	r0, r4
   108be:	bl	b5b8 <el_source@plt+0x8c7c>
   108c2:	mov	r3, r6
   108c4:	mov	r2, r7
   108c6:	mov	r1, r0
   108c8:	mov	r0, r9
   108ca:	bl	11324 <setlogin@@Base+0x68>
   108ce:	cmp.w	r0, #4294967295	; 0xffffffff
   108d2:	mov	fp, r0
   108d4:	beq.n	10926 <error@@Base+0x3cca>
   108d6:	cmp.w	r8, #0
   108da:	beq.n	1093a <error@@Base+0x3cde>
   108dc:	ldrb	r1, [r7, #0]
   108de:	cbz	r1, 1095c <error@@Base+0x3d00>
   108e0:	movw	r8, #41195	; 0xa0eb
   108e4:	adds	r6, r7, #1
   108e6:	movt	r8, #59918	; 0xea0e
   108ea:	mvn.w	r9, r7
   108ee:	mov.w	sl, #70	; 0x46
   108f2:	b.n	108fa <error@@Base+0x3c9e>
   108f4:	ldrb.w	r1, [r6], #1
   108f8:	cbz	r1, 10958 <error@@Base+0x3cfc>
   108fa:	mov	r0, r5
   108fc:	bl	c1e4 <el_source@plt+0x98a8>
   10900:	add.w	r2, r9, r6
   10904:	mov	fp, r0
   10906:	cbnz	r0, 10926 <error@@Base+0x3cca>
   10908:	lsrs	r4, r2, #1
   1090a:	umull	r3, r4, r8, r4
   1090e:	lsrs	r4, r4, #5
   10910:	mls	r4, sl, r4, r2
   10914:	cmp	r4, #69	; 0x45
   10916:	bne.n	108f4 <error@@Base+0x3c98>
   10918:	movs	r1, #10
   1091a:	mov	r0, r5
   1091c:	bl	c1e4 <el_source@plt+0x98a8>
   10920:	cmp	r0, #0
   10922:	beq.n	108f4 <error@@Base+0x3c98>
   10924:	mov	fp, r0
   10926:	vmov	r1, s16
   1092a:	mov	r0, r7
   1092c:	bl	11d40 <setlogin@@Base+0xa84>
   10930:	vpop	{d8}
   10934:	mov	r0, fp
   10936:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1093a:	mov	r0, r7
   1093c:	blx	24a0 <strlen@plt>
   10940:	mov	r1, r7
   10942:	mov	r2, r0
   10944:	mov	r0, r5
   10946:	bl	bf44 <el_source@plt+0x9608>
   1094a:	vmov	r1, s16
   1094e:	mov	fp, r0
   10950:	mov	r0, r7
   10952:	bl	11d40 <setlogin@@Base+0xa84>
   10956:	b.n	10930 <error@@Base+0x3cd4>
   10958:	cmp	r4, #69	; 0x45
   1095a:	beq.n	10926 <error@@Base+0x3cca>
   1095c:	mov	r0, r5
   1095e:	movs	r1, #10
   10960:	bl	c1e4 <el_source@plt+0x98a8>
   10964:	mov	fp, r0
   10966:	b.n	10926 <error@@Base+0x3cca>
   10968:	mvn.w	fp, #9
   1096c:	b.n	1087e <error@@Base+0x3c22>
   1096e:	mvn.w	fp, #1
   10972:	b.n	1087e <error@@Base+0x3c22>
   10974:	push	{r3, r4, r5, r6, r7, lr}
   10976:	mov	r7, r0
   10978:	mov	r0, r1
   1097a:	mov	r5, r1
   1097c:	blx	24a0 <strlen@plt>
   10980:	mov	r4, r0
   10982:	cbnz	r0, 1098a <error@@Base+0x3d2e>
   10984:	mov	r5, r0
   10986:	mov	r0, r5
   10988:	pop	{r3, r4, r5, r6, r7, pc}
   1098a:	blx	2674 <malloc@plt>
   1098e:	mov	r6, r0
   10990:	cbz	r0, 109dc <error@@Base+0x3d80>
   10992:	mov	r2, r4
   10994:	mov	r0, r5
   10996:	mov	r1, r6
   10998:	bl	1146c <setlogin@@Base+0x1b0>
   1099c:	subs	r2, r0, #0
   1099e:	blt.n	109c4 <error@@Base+0x3d68>
   109a0:	mov	r1, r6
   109a2:	mov	r0, r7
   109a4:	bl	bf44 <el_source@plt+0x9608>
   109a8:	mov	r1, r4
   109aa:	mov.w	r2, #4294967295	; 0xffffffff
   109ae:	subs	r5, r0, #0
   109b0:	mov	r0, r6
   109b2:	it	ge
   109b4:	movge	r5, #0
   109b6:	blx	2524 <__explicit_bzero_chk@plt+0x4>
   109ba:	mov	r0, r6
   109bc:	blx	23f8 <free@plt+0x4>
   109c0:	mov	r0, r5
   109c2:	pop	{r3, r4, r5, r6, r7, pc}
   109c4:	mov	r0, r6
   109c6:	mov	r1, r4
   109c8:	mov.w	r2, #4294967295	; 0xffffffff
   109cc:	mvn.w	r5, #3
   109d0:	blx	2524 <__explicit_bzero_chk@plt+0x4>
   109d4:	mov	r0, r6
   109d6:	blx	23f8 <free@plt+0x4>
   109da:	b.n	10986 <error@@Base+0x3d2a>
   109dc:	mvn.w	r5, #1
   109e0:	b.n	10986 <error@@Base+0x3d2a>
   109e2:	nop
   109e4:	push	{r4, r5, r6, lr}
   109e6:	mov	r4, r0
   109e8:	bl	b680 <el_source@plt+0x8d44>
   109ec:	mov	r5, r0
   109ee:	mov	r0, r4
   109f0:	bl	b5b8 <el_source@plt+0x8c7c>
   109f4:	cbz	r5, 10a30 <error@@Base+0x3dd4>
   109f6:	mov	r4, r0
   109f8:	cbz	r0, 10a24 <error@@Base+0x3dc8>
   109fa:	mov	r2, r0
   109fc:	movs	r1, #0
   109fe:	mov	r0, r5
   10a00:	blx	28c0 <memchr@plt>
   10a04:	cbz	r0, 10a36 <error@@Base+0x3dda>
   10a06:	subs	r6, r4, #1
   10a08:	adds	r3, r5, r6
   10a0a:	cmp	r0, r3
   10a0c:	bne.n	10a30 <error@@Base+0x3dd4>
   10a0e:	mov	r0, r4
   10a10:	blx	2674 <malloc@plt>
   10a14:	mov	r3, r0
   10a16:	cbz	r0, 10a30 <error@@Base+0x3dd4>
   10a18:	cbnz	r6, 10a52 <error@@Base+0x3df6>
   10a1a:	mov	r4, r3
   10a1c:	movs	r2, #0
   10a1e:	mov	r0, r3
   10a20:	strb	r2, [r4, #0]
   10a22:	pop	{r4, r5, r6, pc}
   10a24:	movs	r0, #1
   10a26:	blx	2674 <malloc@plt>
   10a2a:	mov	r3, r0
   10a2c:	cmp	r0, #0
   10a2e:	bne.n	10a1a <error@@Base+0x3dbe>
   10a30:	movs	r3, #0
   10a32:	mov	r0, r3
   10a34:	pop	{r4, r5, r6, pc}
   10a36:	adds	r0, r4, #1
   10a38:	blx	2674 <malloc@plt>
   10a3c:	mov	r3, r0
   10a3e:	cmp	r0, #0
   10a40:	beq.n	10a30 <error@@Base+0x3dd4>
   10a42:	mov	r2, r4
   10a44:	mov	r0, r3
   10a46:	mov	r1, r5
   10a48:	blx	24c4 <memcpy@plt>
   10a4c:	add	r4, r0
   10a4e:	mov	r3, r0
   10a50:	b.n	10a1c <error@@Base+0x3dc0>
   10a52:	mov	r4, r6
   10a54:	b.n	10a42 <error@@Base+0x3de6>
   10a56:	nop
   10a58:	push	{r4, r5, r6, lr}
   10a5a:	mov	r5, r0
   10a5c:	mov	r6, r1
   10a5e:	bl	b1a8 <el_source@plt+0x886c>
   10a62:	mov	r4, r0
   10a64:	cbz	r0, 10a82 <error@@Base+0x3e26>
   10a66:	mov	r2, r6
   10a68:	mov	r0, r5
   10a6a:	mov	r1, r4
   10a6c:	bl	10850 <error@@Base+0x3bf4>
   10a70:	cbnz	r0, 10a86 <error@@Base+0x3e2a>
   10a72:	mov	r0, r4
   10a74:	bl	109e4 <error@@Base+0x3d88>
   10a78:	mov	r1, r0
   10a7a:	mov	r0, r4
   10a7c:	mov	r4, r1
   10a7e:	bl	b2c4 <el_source@plt+0x8988>
   10a82:	mov	r0, r4
   10a84:	pop	{r4, r5, r6, pc}
   10a86:	mov	r0, r4
   10a88:	movs	r4, #0
   10a8a:	bl	b2c4 <el_source@plt+0x8988>
   10a8e:	mov	r0, r4
   10a90:	pop	{r4, r5, r6, pc}
   10a92:	nop
   10a94:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   10a98:	mov	r4, r1
   10a9a:	mov	r7, r2
   10a9c:	mov	r5, r3
   10a9e:	mov	r6, r0
   10aa0:	bl	b680 <el_source@plt+0x8d44>
   10aa4:	cbz	r0, 10aea <error@@Base+0x3e8e>
   10aa6:	subs	r3, r5, #1
   10aa8:	cmp.w	r4, #134217728	; 0x8000000
   10aac:	it	ls
   10aae:	cmpls.w	r3, #134217728	; 0x8000000
   10ab2:	bcs.n	10ade <error@@Base+0x3e82>
   10ab4:	mov	r0, r6
   10ab6:	add.w	r8, r4, r5
   10aba:	bl	b5b8 <el_source@plt+0x8c7c>
   10abe:	cmp	r8, r0
   10ac0:	bhi.n	10ae4 <error@@Base+0x3e88>
   10ac2:	mov	r0, r6
   10ac4:	bl	b680 <el_source@plt+0x8d44>
   10ac8:	mov	r2, r5
   10aca:	mov	r1, r7
   10acc:	add	r0, r4
   10ace:	bl	13840 <strtonum@@Base+0x134>
   10ad2:	cmp	r0, #0
   10ad4:	it	ne
   10ad6:	mvnne.w	r0, #3
   10ada:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   10ade:	mvn.w	r0, #9
   10ae2:	b.n	10ada <error@@Base+0x3e7e>
   10ae4:	mvn.w	r0, #2
   10ae8:	b.n	10ada <error@@Base+0x3e7e>
   10aea:	mov.w	r0, #4294967295	; 0xffffffff
   10aee:	b.n	10ada <error@@Base+0x3e7e>
   10af0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10af4:	mov	r5, r0
   10af6:	ldr.w	r8, [sp, #32]
   10afa:	mov	r4, r1
   10afc:	mov	r9, r2
   10afe:	mov	r7, r3
   10b00:	cmp.w	r8, #0
   10b04:	beq.n	10b0c <error@@Base+0x3eb0>
   10b06:	movs	r3, #0
   10b08:	str.w	r3, [r8]
   10b0c:	mov	r0, r5
   10b0e:	bl	b680 <el_source@plt+0x8d44>
   10b12:	cmp	r0, #0
   10b14:	beq.n	10b92 <error@@Base+0x3f36>
   10b16:	subs	r6, r7, #1
   10b18:	cmp.w	r4, #134217728	; 0x8000000
   10b1c:	it	ls
   10b1e:	cmpls.w	r6, #134217728	; 0x8000000
   10b22:	ite	cs
   10b24:	movcs	r6, #1
   10b26:	movcc	r6, #0
   10b28:	bcs.n	10b8c <error@@Base+0x3f30>
   10b2a:	mov	r0, r5
   10b2c:	bl	b5b8 <el_source@plt+0x8c7c>
   10b30:	cmp	r0, r4
   10b32:	bcc.n	10b86 <error@@Base+0x3f2a>
   10b34:	mov	r0, r5
   10b36:	add.w	sl, r4, r7
   10b3a:	bl	b5b8 <el_source@plt+0x8c7c>
   10b3e:	cmp	sl, r0
   10b40:	bhi.n	10b86 <error@@Base+0x3f2a>
   10b42:	mov	r0, r5
   10b44:	bl	b680 <el_source@plt+0x8d44>
   10b48:	add.w	sl, r0, r4
   10b4c:	mov	r0, r5
   10b4e:	bl	b5b8 <el_source@plt+0x8c7c>
   10b52:	mov	r3, r7
   10b54:	mov	r2, r9
   10b56:	mov	r1, r0
   10b58:	mov	r0, sl
   10b5a:	subs	r1, r1, r4
   10b5c:	blx	2584 <memmem@plt>
   10b60:	mov	r4, r0
   10b62:	cbz	r0, 10b98 <error@@Base+0x3f3c>
   10b64:	mov	r0, r8
   10b66:	cmp.w	r8, #0
   10b6a:	beq.n	10b82 <error@@Base+0x3f26>
   10b6c:	mov	r0, r5
   10b6e:	bl	b680 <el_source@plt+0x8d44>
   10b72:	mov	r1, r0
   10b74:	mov	r0, r4
   10b76:	bl	14db4 <strvisx@@Base+0x1040>
   10b7a:	mov	r3, r0
   10b7c:	mov	r0, r6
   10b7e:	str.w	r3, [r8]
   10b82:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10b86:	mvn.w	r0, #2
   10b8a:	b.n	10b82 <error@@Base+0x3f26>
   10b8c:	mvn.w	r0, #9
   10b90:	b.n	10b82 <error@@Base+0x3f26>
   10b92:	mov.w	r0, #4294967295	; 0xffffffff
   10b96:	b.n	10b82 <error@@Base+0x3f26>
   10b98:	mvn.w	r0, #3
   10b9c:	b.n	10b82 <error@@Base+0x3f26>
   10b9e:	nop
   10ba0:	push	{r3, lr}
   10ba2:	blx	23dc <_exit@plt>
   10ba6:	nop
   10ba8:	ldr	r3, [pc, #80]	; (10bfc <error@@Base+0x3fa0>)
   10baa:	movw	r1, #11570	; 0x2d32
   10bae:	push	{r4, r5, r6}
   10bb0:	add	r3, pc
   10bb2:	ldr	r2, [r0, #0]
   10bb4:	movt	r1, #31074	; 0x7962
   10bb8:	movw	r5, #30821	; 0x7865
   10bbc:	movw	r4, #25710	; 0x646e
   10bc0:	movt	r5, #24944	; 0x6170
   10bc4:	movt	r4, #13088	; 0x3320
   10bc8:	str	r2, [r3, #16]
   10bca:	movw	r2, #25972	; 0x6574
   10bce:	ldr	r6, [r0, #4]
   10bd0:	movt	r2, #27424	; 0x6b20
   10bd4:	str	r6, [r3, #20]
   10bd6:	ldr	r6, [r0, #8]
   10bd8:	str	r6, [r3, #24]
   10bda:	ldr	r6, [r0, #12]
   10bdc:	str	r6, [r3, #28]
   10bde:	ldr	r6, [r0, #16]
   10be0:	str	r6, [r3, #32]
   10be2:	ldr	r6, [r0, #20]
   10be4:	str	r6, [r3, #36]	; 0x24
   10be6:	ldr	r6, [r0, #24]
   10be8:	str	r6, [r3, #40]	; 0x28
   10bea:	ldr	r0, [r0, #28]
   10bec:	strd	r5, r4, [r3]
   10bf0:	strd	r1, r2, [r3, #8]
   10bf4:	str	r0, [r3, #44]	; 0x2c
   10bf6:	pop	{r4, r5, r6}
   10bf8:	bx	lr
   10bfa:	nop
   10bfc:	ldmia	r1!, {r2, r4, r5, r6, r7}
   10bfe:	movs	r1, r0
   10c00:	ldr	r1, [pc, #848]	; (10f54 <error@@Base+0x42f8>)
   10c02:	ldr	r2, [pc, #852]	; (10f58 <error@@Base+0x42fc>)
   10c04:	add	r1, pc
   10c06:	ldr	r3, [pc, #852]	; (10f5c <error@@Base+0x4300>)
   10c08:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c0c:	sub	sp, #188	; 0xbc
   10c0e:	ldr	r2, [r1, r2]
   10c10:	add	r3, pc
   10c12:	ldr	r2, [r2, #0]
   10c14:	str	r2, [sp, #180]	; 0xb4
   10c16:	mov.w	r2, #0
   10c1a:	mov.w	r2, #1024	; 0x400
   10c1e:	str	r2, [sp, #48]	; 0x30
   10c20:	add.w	r2, r3, #64	; 0x40
   10c24:	str	r2, [sp, #36]	; 0x24
   10c26:	ldr	r2, [r3, #48]	; 0x30
   10c28:	ldr	r1, [r3, #0]
   10c2a:	str	r2, [sp, #108]	; 0x6c
   10c2c:	str	r2, [sp, #40]	; 0x28
   10c2e:	ldr	r2, [r3, #8]
   10c30:	str	r1, [sp, #52]	; 0x34
   10c32:	ldr	r1, [r3, #4]
   10c34:	str	r2, [sp, #60]	; 0x3c
   10c36:	ldr	r2, [r3, #12]
   10c38:	str	r1, [sp, #56]	; 0x38
   10c3a:	str	r2, [sp, #64]	; 0x40
   10c3c:	ldr	r2, [r3, #16]
   10c3e:	str	r2, [sp, #68]	; 0x44
   10c40:	ldr	r2, [r3, #20]
   10c42:	str	r2, [sp, #72]	; 0x48
   10c44:	ldr	r2, [r3, #24]
   10c46:	str	r2, [sp, #76]	; 0x4c
   10c48:	ldr	r2, [r3, #28]
   10c4a:	str	r2, [sp, #80]	; 0x50
   10c4c:	ldr	r2, [r3, #32]
   10c4e:	str	r2, [sp, #84]	; 0x54
   10c50:	ldr	r2, [r3, #36]	; 0x24
   10c52:	str	r2, [sp, #88]	; 0x58
   10c54:	ldr	r2, [r3, #40]	; 0x28
   10c56:	str	r2, [sp, #92]	; 0x5c
   10c58:	ldr	r2, [r3, #44]	; 0x2c
   10c5a:	str	r2, [sp, #96]	; 0x60
   10c5c:	ldr	r2, [r3, #52]	; 0x34
   10c5e:	str	r2, [sp, #44]	; 0x2c
   10c60:	ldr	r2, [r3, #56]	; 0x38
   10c62:	ldr	r3, [r3, #60]	; 0x3c
   10c64:	str	r2, [sp, #100]	; 0x64
   10c66:	str	r3, [sp, #104]	; 0x68
   10c68:	ldr	r3, [sp, #104]	; 0x68
   10c6a:	movs	r1, #10
   10c6c:	ldr	r2, [sp, #76]	; 0x4c
   10c6e:	ldr	r7, [sp, #92]	; 0x5c
   10c70:	str	r3, [sp, #20]
   10c72:	ldr	r6, [sp, #96]	; 0x60
   10c74:	ldr	r3, [sp, #80]	; 0x50
   10c76:	ldr.w	ip, [sp, #88]	; 0x58
   10c7a:	str	r2, [sp, #32]
   10c7c:	ldr.w	r8, [sp, #64]	; 0x40
   10c80:	ldr.w	lr, [sp, #84]	; 0x54
   10c84:	str	r3, [sp, #4]
   10c86:	str	r1, [sp, #28]
   10c88:	strd	r7, r6, [sp, #8]
   10c8c:	ldr	r0, [sp, #100]	; 0x64
   10c8e:	ldr.w	r9, [sp, #60]	; 0x3c
   10c92:	ldr	r4, [sp, #44]	; 0x2c
   10c94:	ldr	r2, [sp, #72]	; 0x48
   10c96:	ldr.w	sl, [sp, #56]	; 0x38
   10c9a:	ldr	r5, [sp, #40]	; 0x28
   10c9c:	ldr	r3, [sp, #68]	; 0x44
   10c9e:	ldr.w	fp, [sp, #52]	; 0x34
   10ca2:	ldr	r1, [sp, #20]
   10ca4:	ldr	r7, [sp, #32]
   10ca6:	str.w	ip, [sp, #24]
   10caa:	mov	ip, r8
   10cac:	str.w	lr, [sp, #16]
   10cb0:	add.w	r8, r9, r7
   10cb4:	add	fp, r3
   10cb6:	eor.w	r0, r8, r0
   10cba:	eor.w	r5, fp, r5
   10cbe:	add	sl, r2
   10cc0:	ldr	r6, [sp, #4]
   10cc2:	mov.w	r0, r0, ror #16
   10cc6:	str	r0, [sp, #20]
   10cc8:	ldr	r0, [sp, #16]
   10cca:	mov.w	r5, r5, ror #16
   10cce:	eor.w	r4, sl, r4
   10cd2:	add	ip, r6
   10cd4:	add	r0, r5
   10cd6:	str	r0, [sp, #16]
   10cd8:	ldr	r0, [sp, #24]
   10cda:	mov.w	r4, r4, ror #16
   10cde:	str	r4, [sp, #24]
   10ce0:	eor.w	r1, ip, r1
   10ce4:	mov	r9, r0
   10ce6:	ldr	r0, [sp, #12]
   10ce8:	add	r9, r4
   10cea:	ldr	r4, [sp, #8]
   10cec:	mov.w	r1, r1, ror #16
   10cf0:	mov	lr, r0
   10cf2:	ldr	r0, [sp, #16]
   10cf4:	mov	r6, r4
   10cf6:	ldr	r4, [sp, #20]
   10cf8:	add	lr, r1
   10cfa:	add	r6, r4
   10cfc:	eor.w	r4, r0, r3
   10d00:	ldr	r3, [sp, #4]
   10d02:	eor.w	r0, r9, r2
   10d06:	str	r6, [sp, #12]
   10d08:	eors	r7, r6
   10d0a:	mov.w	r0, r0, ror #20
   10d0e:	eor.w	r6, lr, r3
   10d12:	ldr	r3, [sp, #24]
   10d14:	add	sl, r0
   10d16:	mov.w	r4, r4, ror #20
   10d1a:	ldr	r2, [sp, #20]
   10d1c:	add	fp, r4
   10d1e:	eor.w	r3, r3, sl
   10d22:	eor.w	r5, r5, fp
   10d26:	mov.w	r7, r7, ror #20
   10d2a:	mov.w	r3, r3, ror #24
   10d2e:	str	r3, [sp, #8]
   10d30:	ldr	r3, [sp, #16]
   10d32:	mov.w	r5, r5, ror #24
   10d36:	add	r8, r7
   10d38:	mov.w	r6, r6, ror #20
   10d3c:	add	r3, r5
   10d3e:	str	r3, [sp, #4]
   10d40:	ldr	r3, [sp, #8]
   10d42:	eor.w	r2, r2, r8
   10d46:	add	ip, r6
   10d48:	add	r9, r3
   10d4a:	ldr	r3, [sp, #12]
   10d4c:	mov.w	r2, r2, ror #24
   10d50:	eor.w	r1, r1, ip
   10d54:	add	r3, r2
   10d56:	str	r3, [sp, #16]
   10d58:	ldr	r3, [sp, #4]
   10d5a:	mov.w	r1, r1, ror #24
   10d5e:	add	lr, r1
   10d60:	eor.w	r0, r0, r9
   10d64:	eors	r4, r3
   10d66:	eor.w	r6, r6, lr
   10d6a:	ldr	r3, [sp, #16]
   10d6c:	mov.w	r4, r4, ror #25
   10d70:	mov.w	r6, r6, ror #25
   10d74:	add	ip, r4
   10d76:	eors	r7, r3
   10d78:	eor.w	r2, r2, ip
   10d7c:	mov.w	r3, r0, ror #25
   10d80:	add	r8, r6
   10d82:	add	fp, r3
   10d84:	mov.w	r2, r2, ror #16
   10d88:	eor.w	r1, r1, fp
   10d8c:	ldr	r0, [sp, #8]
   10d8e:	mov.w	r7, r7, ror #25
   10d92:	str	r3, [sp, #12]
   10d94:	mov	r3, r8
   10d96:	str.w	r8, [sp, #24]
   10d9a:	add.w	r8, r9, r2
   10d9e:	str	r2, [sp, #32]
   10da0:	mov.w	r1, r1, ror #16
   10da4:	ldr	r2, [sp, #16]
   10da6:	add	sl, r7
   10da8:	eors	r0, r3
   10daa:	eor.w	r5, r5, sl
   10dae:	add	r2, r1
   10db0:	str.w	r8, [sp, #8]
   10db4:	mov.w	r3, r0, ror #16
   10db8:	mov.w	r5, r5, ror #16
   10dbc:	mov	r0, r2
   10dbe:	ldr	r2, [sp, #4]
   10dc0:	add	lr, r5
   10dc2:	str	r0, [sp, #20]
   10dc4:	add	r2, r3
   10dc6:	str.w	lr, [sp, #16]
   10dca:	str	r2, [sp, #4]
   10dcc:	mov	r2, r8
   10dce:	eors	r4, r2
   10dd0:	mov	r2, r0
   10dd2:	ldr	r0, [sp, #12]
   10dd4:	eors	r0, r2
   10dd6:	mov	r2, lr
   10dd8:	eors	r7, r2
   10dda:	ldr	r2, [sp, #4]
   10ddc:	mov.w	r8, r0, ror #20
   10de0:	eor.w	r9, r6, r2
   10de4:	ldr	r2, [sp, #24]
   10de6:	mov.w	lr, r7, ror #20
   10dea:	mov.w	r6, r4, ror #20
   10dee:	mov.w	r7, r9, ror #20
   10df2:	add	ip, r6
   10df4:	add.w	r9, r2, r7
   10df8:	ldr	r2, [sp, #32]
   10dfa:	add	fp, r8
   10dfc:	eor.w	r3, r3, r9
   10e00:	eor.w	r2, r2, ip
   10e04:	eor.w	r1, r1, fp
   10e08:	add	sl, lr
   10e0a:	mov.w	r4, r3, ror #24
   10e0e:	mov.w	r0, r2, ror #24
   10e12:	ldr	r2, [sp, #8]
   10e14:	eor.w	r5, r5, sl
   10e18:	mov.w	r1, r1, ror #24
   10e1c:	adds	r3, r2, r0
   10e1e:	ldr	r2, [sp, #20]
   10e20:	mov.w	r5, r5, ror #24
   10e24:	str	r3, [sp, #24]
   10e26:	add	r2, r1
   10e28:	str	r2, [sp, #8]
   10e2a:	ldr	r2, [sp, #16]
   10e2c:	eors	r3, r6
   10e2e:	add	r2, r5
   10e30:	str	r2, [sp, #12]
   10e32:	ldr	r2, [sp, #4]
   10e34:	mov.w	r3, r3, ror #25
   10e38:	add	r2, r4
   10e3a:	str	r2, [sp, #16]
   10e3c:	ldr	r2, [sp, #8]
   10e3e:	eor.w	r8, r8, r2
   10e42:	ldr	r2, [sp, #12]
   10e44:	eor.w	lr, lr, r2
   10e48:	ldr	r2, [sp, #16]
   10e4a:	eor.w	r6, r7, r2
   10e4e:	mov.w	r2, r8, ror #25
   10e52:	mov.w	r7, lr, ror #25
   10e56:	mov.w	r6, r6, ror #25
   10e5a:	str	r6, [sp, #4]
   10e5c:	ldr	r6, [sp, #28]
   10e5e:	subs	r6, #1
   10e60:	str	r6, [sp, #28]
   10e62:	bne.w	10cb0 <error@@Base+0x4054>
   10e66:	str	r1, [sp, #20]
   10e68:	mov	r8, ip
   10e6a:	ldr	r1, [sp, #52]	; 0x34
   10e6c:	str	r7, [sp, #32]
   10e6e:	add	r1, fp
   10e70:	ldr	r7, [sp, #8]
   10e72:	str	r1, [sp, #8]
   10e74:	ldr	r1, [sp, #56]	; 0x38
   10e76:	ldrd	r6, lr, [sp, #12]
   10e7a:	add	r1, sl
   10e7c:	str	r1, [sp, #12]
   10e7e:	ldr	r1, [sp, #60]	; 0x3c
   10e80:	ldr.w	ip, [sp, #24]
   10e84:	add	r9, r1
   10e86:	ldr	r1, [sp, #64]	; 0x40
   10e88:	add	r8, r1
   10e8a:	ldr	r1, [sp, #68]	; 0x44
   10e8c:	add	r3, r1
   10e8e:	str	r3, [sp, #16]
   10e90:	ldr	r3, [sp, #72]	; 0x48
   10e92:	ldr	r1, [sp, #76]	; 0x4c
   10e94:	adds	r3, r2, r3
   10e96:	str	r3, [sp, #24]
   10e98:	ldr	r3, [sp, #32]
   10e9a:	ldr	r2, [sp, #20]
   10e9c:	mov	sl, r3
   10e9e:	ldr	r3, [sp, #4]
   10ea0:	add	sl, r1
   10ea2:	ldr	r1, [sp, #80]	; 0x50
   10ea4:	add	r3, r1
   10ea6:	ldr	r1, [sp, #44]	; 0x2c
   10ea8:	mov	fp, r3
   10eaa:	ldr	r3, [sp, #84]	; 0x54
   10eac:	add	r4, r1
   10eae:	ldr	r1, [sp, #100]	; 0x64
   10eb0:	add	lr, r3
   10eb2:	ldr	r3, [sp, #88]	; 0x58
   10eb4:	add	r1, r0
   10eb6:	str	r1, [sp, #4]
   10eb8:	add	ip, r3
   10eba:	ldr	r3, [sp, #92]	; 0x5c
   10ebc:	ldr	r1, [sp, #104]	; 0x68
   10ebe:	add	r7, r3
   10ec0:	ldr	r3, [sp, #96]	; 0x60
   10ec2:	add	r2, r1
   10ec4:	add	r6, r3
   10ec6:	ldr	r3, [sp, #40]	; 0x28
   10ec8:	mov	r1, r2
   10eca:	add	r5, r3
   10ecc:	adds	r3, #1
   10ece:	str	r3, [sp, #40]	; 0x28
   10ed0:	ittt	eq
   10ed2:	ldreq	r3, [sp, #44]	; 0x2c
   10ed4:	addeq	r3, #1
   10ed6:	streq	r3, [sp, #44]	; 0x2c
   10ed8:	ldr	r0, [sp, #36]	; 0x24
   10eda:	ldr	r3, [sp, #8]
   10edc:	ldr	r2, [sp, #16]
   10ede:	str.w	r9, [r0, #8]
   10ee2:	str	r3, [r0, #0]
   10ee4:	str	r2, [r0, #16]
   10ee6:	ldr	r3, [sp, #12]
   10ee8:	ldr	r2, [sp, #24]
   10eea:	str.w	r8, [r0, #12]
   10eee:	str	r3, [r0, #4]
   10ef0:	mov	r3, r0
   10ef2:	strd	r2, sl, [r0, #20]
   10ef6:	strd	fp, lr, [r0, #28]
   10efa:	strd	ip, r7, [r0, #36]	; 0x24
   10efe:	strd	r6, r5, [r0, #44]	; 0x2c
   10f02:	str	r4, [r0, #52]	; 0x34
   10f04:	ldr	r0, [sp, #4]
   10f06:	str	r1, [r3, #60]	; 0x3c
   10f08:	str	r0, [r3, #56]	; 0x38
   10f0a:	ldr	r3, [sp, #48]	; 0x30
   10f0c:	cmp	r3, #64	; 0x40
   10f0e:	beq.n	10f2a <error@@Base+0x42ce>
   10f10:	ldr	r3, [sp, #48]	; 0x30
   10f12:	ldr	r2, [sp, #36]	; 0x24
   10f14:	subs	r3, #64	; 0x40
   10f16:	str	r3, [sp, #48]	; 0x30
   10f18:	cmp	r3, #63	; 0x3f
   10f1a:	add.w	r2, r2, #64	; 0x40
   10f1e:	it	ls
   10f20:	addls	r3, sp, #116	; 0x74
   10f22:	str	r2, [sp, #36]	; 0x24
   10f24:	it	ls
   10f26:	strls	r3, [sp, #36]	; 0x24
   10f28:	b.n	10c68 <error@@Base+0x400c>
   10f2a:	ldr	r2, [pc, #52]	; (10f60 <error@@Base+0x4304>)
   10f2c:	ldr	r1, [sp, #44]	; 0x2c
   10f2e:	add	r2, pc
   10f30:	ldr	r3, [sp, #108]	; 0x6c
   10f32:	adds	r3, #16
   10f34:	strd	r3, r1, [r2, #48]	; 0x30
   10f38:	ldr	r2, [pc, #40]	; (10f64 <error@@Base+0x4308>)
   10f3a:	ldr	r3, [pc, #28]	; (10f58 <error@@Base+0x42fc>)
   10f3c:	add	r2, pc
   10f3e:	ldr	r3, [r2, r3]
   10f40:	ldr	r2, [r3, #0]
   10f42:	ldr	r3, [sp, #180]	; 0xb4
   10f44:	eors	r2, r3
   10f46:	bne.n	10f4e <error@@Base+0x42f2>
   10f48:	add	sp, #188	; 0xbc
   10f4a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f4e:	blx	2698 <__stack_chk_fail@plt>
   10f52:	nop
   10f54:	str	r0, [sp, #1008]	; 0x3f0
   10f56:	movs	r1, r0
   10f58:	lsls	r0, r0, #11
   10f5a:	movs	r0, r0
   10f5c:	ldmia	r1!, {r2, r4, r7}
   10f5e:	movs	r1, r0
   10f60:	stmia	r6!, {r1, r2, r4, r5, r6}
   10f62:	movs	r1, r0
   10f64:	ldrh	r4, [r0, #46]	; 0x2e
   10f66:	movs	r1, r0
   10f68:	ldr	r3, [pc, #16]	; (10f7c <error@@Base+0x4320>)
   10f6a:	movs	r2, #0
   10f6c:	add	r3, pc
   10f6e:	strd	r2, r2, [r3, #48]	; 0x30
   10f72:	ldr	r2, [r0, #0]
   10f74:	str	r2, [r3, #56]	; 0x38
   10f76:	ldr	r2, [r0, #4]
   10f78:	str	r2, [r3, #60]	; 0x3c
   10f7a:	bx	lr
   10f7c:	stmia	r6!, {r3, r4, r5}
   10f7e:	movs	r1, r0
   10f80:	ldr	r2, [pc, #208]	; (11054 <error@@Base+0x43f8>)
   10f82:	movs	r1, #40	; 0x28
   10f84:	ldr	r3, [pc, #208]	; (11058 <error@@Base+0x43fc>)
   10f86:	push	{r4, r5, r6, lr}
   10f88:	add	r2, pc
   10f8a:	sub	sp, #48	; 0x30
   10f8c:	add	r5, sp, #4
   10f8e:	ldr	r3, [r2, r3]
   10f90:	mov	r0, r5
   10f92:	ldr	r3, [r3, #0]
   10f94:	str	r3, [sp, #44]	; 0x2c
   10f96:	mov.w	r3, #0
   10f9a:	blx	2770 <RAND_bytes@plt>
   10f9e:	cmp	r0, #0
   10fa0:	ble.n	11046 <error@@Base+0x43ea>
   10fa2:	ldr	r4, [pc, #184]	; (1105c <error@@Base+0x4400>)
   10fa4:	add	r4, pc
   10fa6:	ldr.w	r3, [r4, #1088]	; 0x440
   10faa:	cmp	r3, #0
   10fac:	beq.n	1102e <error@@Base+0x43d2>
   10fae:	bl	10c00 <error@@Base+0x3fa4>
   10fb2:	add.w	r3, r4, #63	; 0x3f
   10fb6:	add.w	r1, sp, #3
   10fba:	adds	r4, #103	; 0x67
   10fbc:	ldrb.w	r2, [r3, #1]!
   10fc0:	ldrb.w	r0, [r1, #1]!
   10fc4:	cmp	r3, r4
   10fc6:	eor.w	r2, r2, r0
   10fca:	strb	r2, [r3, #0]
   10fcc:	bne.n	10fbc <error@@Base+0x4360>
   10fce:	ldr	r6, [pc, #144]	; (11060 <error@@Base+0x4404>)
   10fd0:	add	r6, pc
   10fd2:	add.w	r4, r6, #64	; 0x40
   10fd6:	mov	r0, r4
   10fd8:	bl	10ba8 <error@@Base+0x3f4c>
   10fdc:	add.w	r0, r6, #96	; 0x60
   10fe0:	bl	10f68 <error@@Base+0x430c>
   10fe4:	mov	r0, r4
   10fe6:	movs	r2, #40	; 0x28
   10fe8:	movs	r1, #0
   10fea:	blx	2354 <memset@plt>
   10fee:	ldr	r4, [pc, #116]	; (11064 <error@@Base+0x4408>)
   10ff0:	movs	r2, #40	; 0x28
   10ff2:	mov	r1, r2
   10ff4:	mov	r0, r5
   10ff6:	add	r4, pc
   10ff8:	blx	2524 <__explicit_bzero_chk@plt+0x4>
   10ffc:	movs	r1, #0
   10ffe:	mov.w	r2, #1024	; 0x400
   11002:	add.w	r0, r4, #64	; 0x40
   11006:	str.w	r1, [r4, #1092]	; 0x444
   1100a:	blx	2354 <memset@plt>
   1100e:	ldr	r2, [pc, #88]	; (11068 <error@@Base+0x440c>)
   11010:	mov.w	r3, #27136	; 0x6a00
   11014:	movt	r3, #24
   11018:	str.w	r3, [r4, #1096]	; 0x448
   1101c:	add	r2, pc
   1101e:	ldr	r3, [pc, #56]	; (11058 <error@@Base+0x43fc>)
   11020:	ldr	r3, [r2, r3]
   11022:	ldr	r2, [r3, #0]
   11024:	ldr	r3, [sp, #44]	; 0x2c
   11026:	eors	r2, r3
   11028:	bne.n	11042 <error@@Base+0x43e6>
   1102a:	add	sp, #48	; 0x30
   1102c:	pop	{r4, r5, r6, pc}
   1102e:	mov	r0, r5
   11030:	movs	r3, #1
   11032:	str.w	r3, [r4, #1088]	; 0x440
   11036:	bl	10ba8 <error@@Base+0x3f4c>
   1103a:	add	r0, sp, #36	; 0x24
   1103c:	bl	10f68 <error@@Base+0x430c>
   11040:	b.n	10fee <error@@Base+0x4392>
   11042:	blx	2698 <__stack_chk_fail@plt>
   11046:	blx	2248 <ERR_get_error@plt>
   1104a:	mov	r1, r0
   1104c:	ldr	r0, [pc, #28]	; (1106c <error@@Base+0x4410>)
   1104e:	add	r0, pc
   11050:	bl	c6e4 <el_source@plt+0x9da8>
   11054:	ldrh	r0, [r7, #42]	; 0x2a
   11056:	movs	r1, r0
   11058:	lsls	r0, r0, #11
   1105a:	movs	r0, r0
   1105c:	stmia	r6!, {}
   1105e:	movs	r1, r0
   11060:	stmia	r5!, {r2, r4, r6, r7}
   11062:	movs	r1, r0
   11064:	stmia	r5!, {r1, r2, r3, r5, r7}
   11066:	movs	r1, r0
   11068:	ldrh	r4, [r4, #38]	; 0x26
   1106a:	movs	r1, r0
   1106c:	ldrb	r6, [r2, #15]
	...

00011070 <arc4random_stir@@Base>:
   11070:	b.n	10f80 <error@@Base+0x4324>
   11072:	nop

00011074 <arc4random_addrandom@@Base>:
   11074:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   11078:	mov	r5, r0
   1107a:	ldr	r3, [pc, #128]	; (110fc <arc4random_addrandom@@Base+0x88>)
   1107c:	mov	r4, r1
   1107e:	add	r3, pc
   11080:	ldr.w	r3, [r3, #1088]	; 0x440
   11084:	cbz	r3, 110f6 <arc4random_addrandom@@Base+0x82>
   11086:	cmp	r4, #0
   11088:	ble.n	110f2 <arc4random_addrandom@@Base+0x7e>
   1108a:	ldr	r6, [pc, #116]	; (11100 <arc4random_addrandom@@Base+0x8c>)
   1108c:	ldr.w	r8, [pc, #116]	; 11104 <arc4random_addrandom@@Base+0x90>
   11090:	add	r6, pc
   11092:	add	r8, pc
   11094:	add.w	r7, r6, #64	; 0x40
   11098:	cmp	r4, #40	; 0x28
   1109a:	mov	r9, r4
   1109c:	it	ge
   1109e:	movge.w	r9, #40	; 0x28
   110a2:	bl	10c00 <error@@Base+0x3fa4>
   110a6:	cbz	r5, 110c4 <arc4random_addrandom@@Base+0x50>
   110a8:	subs	r3, r5, #1
   110aa:	add.w	r1, r8, #63	; 0x3f
   110ae:	add.w	ip, r3, r9
   110b2:	ldrb.w	r0, [r3, #1]!
   110b6:	ldrb.w	r2, [r1, #1]!
   110ba:	cmp	r3, ip
   110bc:	eor.w	r2, r2, r0
   110c0:	strb	r2, [r1, #0]
   110c2:	bne.n	110b2 <arc4random_addrandom@@Base+0x3e>
   110c4:	mov	r0, r7
   110c6:	add	r5, r9
   110c8:	bl	10ba8 <error@@Base+0x3f4c>
   110cc:	add.w	r0, r6, #96	; 0x60
   110d0:	bl	10f68 <error@@Base+0x430c>
   110d4:	movs	r2, #40	; 0x28
   110d6:	movs	r1, #0
   110d8:	mov	r0, r7
   110da:	blx	2354 <memset@plt>
   110de:	mov	r0, r4
   110e0:	mov.w	r3, #984	; 0x3d8
   110e4:	mov	r1, r9
   110e6:	str.w	r3, [r6, #1092]	; 0x444
   110ea:	bl	14db4 <strvisx@@Base+0x1040>
   110ee:	subs	r4, r0, #0
   110f0:	bgt.n	11098 <arc4random_addrandom@@Base+0x24>
   110f2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   110f6:	bl	10f80 <error@@Base+0x4324>
   110fa:	b.n	11086 <arc4random_addrandom@@Base+0x12>
   110fc:	stmia	r5!, {r1, r2, r5}
   110fe:	movs	r1, r0
   11100:	stmia	r5!, {r2, r4}
   11102:	movs	r1, r0
   11104:	stmia	r5!, {r1, r4}
   11106:	movs	r1, r0

00011108 <arc4random@@Base>:
   11108:	push	{r3, r4, r5, lr}
   1110a:	blx	2764 <getpid@plt>
   1110e:	ldr	r3, [pc, #124]	; (1118c <arc4random@@Base+0x84>)
   11110:	add	r3, pc
   11112:	ldr.w	r2, [r3, #1096]	; 0x448
   11116:	cmp	r2, #4
   11118:	bls.n	11120 <arc4random@@Base+0x18>
   1111a:	ldr.w	r1, [r3, #1088]	; 0x440
   1111e:	cbnz	r1, 11152 <arc4random@@Base+0x4a>
   11120:	ldr	r3, [pc, #108]	; (11190 <arc4random@@Base+0x88>)
   11122:	add	r3, pc
   11124:	str.w	r0, [r3, #1100]	; 0x44c
   11128:	bl	10f80 <error@@Base+0x4324>
   1112c:	ldr	r4, [pc, #100]	; (11194 <arc4random@@Base+0x8c>)
   1112e:	add	r4, pc
   11130:	ldr.w	r3, [r4, #1092]	; 0x444
   11134:	cmp	r3, #3
   11136:	bls.n	11162 <arc4random@@Base+0x5a>
   11138:	rsb	r1, r3, #1024	; 0x400
   1113c:	subs	r3, #4
   1113e:	ldr	r2, [pc, #88]	; (11198 <arc4random@@Base+0x90>)
   11140:	movs	r5, #0
   11142:	add	r2, pc
   11144:	add.w	r4, r2, #64	; 0x40
   11148:	str.w	r3, [r2, #1092]	; 0x444
   1114c:	ldr	r0, [r4, r1]
   1114e:	str	r5, [r4, r1]
   11150:	pop	{r3, r4, r5, pc}
   11152:	ldr.w	r1, [r3, #1100]	; 0x44c
   11156:	cmp	r0, r1
   11158:	bne.n	11120 <arc4random@@Base+0x18>
   1115a:	subs	r2, #4
   1115c:	str.w	r2, [r3, #1096]	; 0x448
   11160:	b.n	1112c <arc4random@@Base+0x24>
   11162:	add.w	r5, r4, #64	; 0x40
   11166:	bl	10c00 <error@@Base+0x3fa4>
   1116a:	mov	r0, r5
   1116c:	bl	10ba8 <error@@Base+0x3f4c>
   11170:	add.w	r0, r4, #96	; 0x60
   11174:	bl	10f68 <error@@Base+0x430c>
   11178:	movs	r1, #0
   1117a:	mov	r0, r5
   1117c:	movs	r2, #40	; 0x28
   1117e:	blx	2354 <memset@plt>
   11182:	mov.w	r3, #980	; 0x3d4
   11186:	movs	r1, #40	; 0x28
   11188:	b.n	1113e <arc4random@@Base+0x36>
   1118a:	nop
   1118c:	stmia	r4!, {r2, r4, r7}
   1118e:	movs	r1, r0
   11190:	stmia	r4!, {r1, r7}
   11192:	movs	r1, r0
   11194:	stmia	r4!, {r1, r2, r4, r5, r6}
   11196:	movs	r1, r0
   11198:	stmia	r4!, {r1, r5, r6}
   1119a:	movs	r1, r0

0001119c <arc4random_buf@@Base>:
   1119c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111a0:	mov	r4, r1
   111a2:	mov	r6, r0
   111a4:	blx	2764 <getpid@plt>
   111a8:	ldr	r3, [pc, #168]	; (11254 <arc4random_buf@@Base+0xb8>)
   111aa:	add	r3, pc
   111ac:	ldr.w	r2, [r3, #1096]	; 0x448
   111b0:	cmp	r4, r2
   111b2:	bcs.n	111bc <arc4random_buf@@Base+0x20>
   111b4:	ldr.w	r1, [r3, #1088]	; 0x440
   111b8:	cmp	r1, #0
   111ba:	bne.n	11244 <arc4random_buf@@Base+0xa8>
   111bc:	ldr	r3, [pc, #152]	; (11258 <arc4random_buf@@Base+0xbc>)
   111be:	add	r3, pc
   111c0:	str.w	r0, [r3, #1100]	; 0x44c
   111c4:	bl	10f80 <error@@Base+0x4324>
   111c8:	cbz	r4, 11208 <arc4random_buf@@Base+0x6c>
   111ca:	ldr.w	r9, [pc, #144]	; 1125c <arc4random_buf@@Base+0xc0>
   111ce:	ldr.w	r8, [pc, #144]	; 11260 <arc4random_buf@@Base+0xc4>
   111d2:	add	r9, pc
   111d4:	add	r8, pc
   111d6:	add.w	sl, r9, #64	; 0x40
   111da:	ldr.w	r5, [r8, #1092]	; 0x444
   111de:	cbnz	r5, 1120c <arc4random_buf@@Base+0x70>
   111e0:	bl	10c00 <error@@Base+0x3fa4>
   111e4:	mov	r0, sl
   111e6:	bl	10ba8 <error@@Base+0x3f4c>
   111ea:	add.w	r0, r9, #96	; 0x60
   111ee:	bl	10f68 <error@@Base+0x430c>
   111f2:	movs	r2, #40	; 0x28
   111f4:	movs	r1, #0
   111f6:	mov	r0, sl
   111f8:	blx	2354 <memset@plt>
   111fc:	mov.w	r3, #984	; 0x3d8
   11200:	str.w	r3, [r9, #1092]	; 0x444
   11204:	cmp	r4, #0
   11206:	bne.n	111da <arc4random_buf@@Base+0x3e>
   11208:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1120c:	cmp	r5, r4
   1120e:	sub.w	fp, r8, r5
   11212:	add.w	fp, fp, #1088	; 0x440
   11216:	mov	r7, r5
   11218:	it	cs
   1121a:	movcs	r7, r4
   1121c:	mov	r0, r6
   1121e:	mov	r2, r7
   11220:	mov	r1, fp
   11222:	subs	r5, r5, r7
   11224:	blx	24c4 <memcpy@plt>
   11228:	mov	r2, r7
   1122a:	mov	r0, fp
   1122c:	movs	r1, #0
   1122e:	subs	r4, r4, r7
   11230:	blx	2354 <memset@plt>
   11234:	add	r6, r7
   11236:	str.w	r5, [r8, #1092]	; 0x444
   1123a:	cmp	r5, #0
   1123c:	beq.n	111e0 <arc4random_buf@@Base+0x44>
   1123e:	cmp	r4, #0
   11240:	bne.n	111da <arc4random_buf@@Base+0x3e>
   11242:	b.n	11208 <arc4random_buf@@Base+0x6c>
   11244:	ldr.w	r1, [r3, #1100]	; 0x44c
   11248:	cmp	r0, r1
   1124a:	bne.n	111bc <arc4random_buf@@Base+0x20>
   1124c:	subs	r2, r2, r4
   1124e:	str.w	r2, [r3, #1096]	; 0x448
   11252:	b.n	111c8 <arc4random_buf@@Base+0x2c>
   11254:	stmia	r3!, {r1, r3, r4, r5, r6, r7}
   11256:	movs	r1, r0
   11258:	stmia	r3!, {r1, r2, r5, r6, r7}
   1125a:	movs	r1, r0
   1125c:	stmia	r3!, {r1, r4, r6, r7}
   1125e:	movs	r1, r0
   11260:	stmia	r3!, {r4, r6, r7}
   11262:	movs	r1, r0

00011264 <arc4random_uniform@@Base>:
   11264:	cmp	r0, #1
   11266:	bls.n	11288 <arc4random_uniform@@Base+0x24>
   11268:	push	{r3, r4, r5, lr}
   1126a:	mov	r1, r0
   1126c:	mov	r5, r0
   1126e:	negs	r0, r0
   11270:	bl	14414 <strvisx@@Base+0x6a0>
   11274:	mov	r4, r1
   11276:	bl	11108 <arc4random@@Base>
   1127a:	cmp	r4, r0
   1127c:	bhi.n	11276 <arc4random_uniform@@Base+0x12>
   1127e:	mov	r1, r5
   11280:	bl	14414 <strvisx@@Base+0x6a0>
   11284:	mov	r0, r1
   11286:	pop	{r3, r4, r5, pc}
   11288:	movs	r0, #0
   1128a:	bx	lr
   1128c:	push	{r3, lr}
   1128e:	ldr	r3, [pc, #32]	; (112b0 <arc4random_uniform@@Base+0x4c>)
   11290:	ldr	r2, [pc, #32]	; (112b4 <arc4random_uniform@@Base+0x50>)
   11292:	add	r3, pc
   11294:	ldr	r3, [r3, r2]
   11296:	ldr	r0, [r3, #0]
   11298:	blx	265c <strdup@plt+0x4>
   1129c:	cbz	r0, 112a0 <arc4random_uniform@@Base+0x3c>
   1129e:	pop	{r3, pc}
   112a0:	ldr	r0, [pc, #20]	; (112b8 <arc4random_uniform@@Base+0x54>)
   112a2:	add	r0, pc
   112a4:	blx	2394 <perror@plt>
   112a8:	movs	r0, #1
   112aa:	blx	28e8 <exit@plt>
   112ae:	nop
   112b0:	ldrh	r6, [r5, #18]
   112b2:	movs	r1, r0
   112b4:	lsls	r0, r0, #10
   112b6:	movs	r0, r0
   112b8:	ldrb	r6, [r5, #6]
	...

000112bc <setlogin@@Base>:
   112bc:	movs	r0, #0
   112be:	bx	lr
   112c0:	movs	r0, #0
   112c2:	bx	lr
   112c4:	cmp	r0, r1
   112c6:	beq.n	112fc <setlogin@@Base+0x40>
   112c8:	movs	r2, #14
   112ca:	movt	r2, #4096	; 0x1000
   112ce:	cmp	r0, r2
   112d0:	eor.w	r3, r0, r1
   112d4:	ble.n	112f0 <setlogin@@Base+0x34>
   112d6:	lsrs	r3, r3, #20
   112d8:	ubfx	r0, r0, #12, #8
   112dc:	ubfx	r1, r1, #12, #8
   112e0:	lsls	r3, r3, #20
   112e2:	cmp	r0, r1
   112e4:	it	le
   112e6:	cmple	r3, #0
   112e8:	ite	eq
   112ea:	moveq	r0, #1
   112ec:	movne	r0, #0
   112ee:	bx	lr
   112f0:	bics.w	r3, r3, #4080	; 0xff0
   112f4:	ite	eq
   112f6:	moveq	r0, #1
   112f8:	movne	r0, #0
   112fa:	bx	lr
   112fc:	movs	r0, #1
   112fe:	bx	lr
   11300:	movs	r2, #0
   11302:	movs	r1, #0
   11304:	push	{r3, lr}
   11306:	movs	r0, #12
   11308:	blx	2808 <OPENSSL_init_crypto@plt+0x4>
   1130c:	blx	2530 <ENGINE_load_builtin_engines@plt>
   11310:	blx	2758 <ENGINE_register_all_complete@plt>
   11314:	ldmia.w	sp!, {r3, lr}
   11318:	movs	r2, #0
   1131a:	movs	r0, #76	; 0x4c
   1131c:	movs	r1, #0
   1131e:	b.w	2804 <OPENSSL_init_crypto@plt>
   11322:	nop
   11324:	cmp	r1, #2
   11326:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1132a:	bls.w	11456 <setlogin@@Base+0x19a>
   1132e:	ldrb	r6, [r0, #1]
   11330:	add.w	ip, r0, #3
   11334:	ldrb	r7, [r0, #0]
   11336:	cmp	r3, #3
   11338:	ldrb	r4, [r0, #2]
   1133a:	sub.w	r1, r1, #3
   1133e:	mov.w	r5, r6, lsl #2
   11342:	mov.w	r0, r7, lsl #4
   11346:	and.w	r5, r5, #60	; 0x3c
   1134a:	and.w	r0, r0, #48	; 0x30
   1134e:	add.w	r5, r5, r4, lsr #6
   11352:	mov.w	r7, r7, lsr #2
   11356:	add.w	r0, r0, r6, lsr #4
   1135a:	and.w	r4, r4, #63	; 0x3f
   1135e:	bls.n	1144e <setlogin@@Base+0x192>
   11360:	ldr.w	lr, [pc, #256]	; 11464 <setlogin@@Base+0x1a8>
   11364:	mov	r6, r2
   11366:	mov.w	r8, #4
   1136a:	add	lr, pc
   1136c:	b.n	113aa <setlogin@@Base+0xee>
   1136e:	ldrb.w	r7, [ip]
   11372:	add.w	ip, ip, #3
   11376:	ldrb.w	r9, [ip, #-2]
   1137a:	add.w	r8, r8, #4
   1137e:	cmp	r3, r8
   11380:	sub.w	r1, r1, #3
   11384:	mov.w	r0, r7, lsl #4
   11388:	mov.w	r7, r7, lsr #2
   1138c:	ldrb.w	r4, [ip, #-1]
   11390:	mov.w	r5, r9, lsl #2
   11394:	and.w	r0, r0, #48	; 0x30
   11398:	and.w	r5, r5, #60	; 0x3c
   1139c:	add.w	r0, r0, r9, lsr #4
   113a0:	add.w	r5, r5, r4, lsr #6
   113a4:	and.w	r4, r4, #63	; 0x3f
   113a8:	bcc.n	1144e <setlogin@@Base+0x192>
   113aa:	ldrb.w	r9, [lr, r7]
   113ae:	cmp	r1, #2
   113b0:	ldrb.w	r7, [lr, r0]
   113b4:	add.w	r6, r6, #4
   113b8:	ldrb.w	r5, [lr, r5]
   113bc:	ldrb.w	r0, [lr, r4]
   113c0:	strb.w	r9, [r6, #-4]
   113c4:	strb.w	r7, [r6, #-3]
   113c8:	strb.w	r5, [r6, #-2]
   113cc:	strb.w	r0, [r6, #-1]
   113d0:	bhi.n	1136e <setlogin@@Base+0xb2>
   113d2:	cbnz	r1, 113e4 <setlogin@@Base+0x128>
   113d4:	cmp	r8, r3
   113d6:	bcs.n	1144e <setlogin@@Base+0x192>
   113d8:	movs	r3, #0
   113da:	mov	r0, r8
   113dc:	strb.w	r3, [r2, r8]
   113e0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   113e4:	cmp	r1, #2
   113e6:	ldrb.w	r4, [ip]
   113ea:	add.w	r6, r8, #4
   113ee:	ite	eq
   113f0:	ldrbeq.w	r0, [ip, #1]
   113f4:	movne	r7, #0
   113f6:	mov.w	r5, r4, lsl #4
   113fa:	it	ne
   113fc:	movne	r0, r7
   113fe:	and.w	r5, r5, #48	; 0x30
   11402:	mov.w	r4, r4, lsr #2
   11406:	ittt	eq
   11408:	lsleq	r7, r0, #2
   1140a:	lsreq	r0, r0, #4
   1140c:	andeq.w	r7, r7, #60	; 0x3c
   11410:	cmp	r6, r3
   11412:	add	r0, r5
   11414:	bhi.n	1144e <setlogin@@Base+0x192>
   11416:	ldr	r5, [pc, #80]	; (11468 <setlogin@@Base+0x1ac>)
   11418:	cmp	r1, #1
   1141a:	add.w	lr, r2, r8
   1141e:	add.w	ip, r8, #2
   11422:	add	r5, pc
   11424:	it	eq
   11426:	moveq	r1, #61	; 0x3d
   11428:	ldrb.w	r9, [r5, r4]
   1142c:	it	ne
   1142e:	ldrbne	r1, [r5, r7]
   11430:	ldrb	r4, [r5, r0]
   11432:	add.w	r0, r8, #3
   11436:	strb.w	r9, [r2, r8]
   1143a:	ite	eq
   1143c:	moveq	r8, r6
   1143e:	movne	r8, r6
   11440:	strb.w	r4, [lr, #1]
   11444:	strb.w	r1, [r2, ip]
   11448:	movs	r1, #61	; 0x3d
   1144a:	strb	r1, [r2, r0]
   1144c:	b.n	113d4 <setlogin@@Base+0x118>
   1144e:	mov.w	r0, #4294967295	; 0xffffffff
   11452:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   11456:	mov	ip, r0
   11458:	mov.w	r8, #0
   1145c:	cmp	r1, #0
   1145e:	beq.n	113d4 <setlogin@@Base+0x118>
   11460:	b.n	113e4 <setlogin@@Base+0x128>
   11462:	nop
   11464:	ldrb	r6, [r5, #3]
   11466:	movs	r0, r0
   11468:	ldrb	r6, [r6, #0]
   1146a:	movs	r0, r0
   1146c:	ldr	r3, [pc, #652]	; (116fc <setlogin@@Base+0x440>)
   1146e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11472:	add	r3, pc
   11474:	vpush	{d8-d11}
   11478:	mov.w	r8, #0
   1147c:	mov	r9, r0
   1147e:	mov	r7, r1
   11480:	mov	r6, r8
   11482:	vmov	s16, r3
   11486:	ldr	r3, [pc, #632]	; (11700 <setlogin@@Base+0x444>)
   11488:	sub	sp, #12
   1148a:	add	r3, pc
   1148c:	str	r2, [sp, #0]
   1148e:	vmov	s21, r3
   11492:	ldr	r3, [pc, #624]	; (11704 <setlogin@@Base+0x448>)
   11494:	add	r3, pc
   11496:	vmov	s17, r3
   1149a:	ldr	r3, [pc, #620]	; (11708 <setlogin@@Base+0x44c>)
   1149c:	add	r3, pc
   1149e:	vmov	s22, r3
   114a2:	ldr	r3, [pc, #616]	; (1170c <setlogin@@Base+0x450>)
   114a4:	add	r3, pc
   114a6:	vmov	s18, r3
   114aa:	ldr	r3, [pc, #612]	; (11710 <setlogin@@Base+0x454>)
   114ac:	add	r3, pc
   114ae:	vmov	s23, r3
   114b2:	ldr	r3, [pc, #608]	; (11714 <setlogin@@Base+0x458>)
   114b4:	add	r3, pc
   114b6:	vmov	s19, r3
   114ba:	ldr	r3, [pc, #604]	; (11718 <setlogin@@Base+0x45c>)
   114bc:	add	r3, pc
   114be:	vmov	s20, r3
   114c2:	ldr	r3, [pc, #600]	; (1171c <setlogin@@Base+0x460>)
   114c4:	add	r3, pc
   114c6:	str	r3, [sp, #4]
   114c8:	mov	r4, r9
   114ca:	ldrb.w	sl, [r4], #1
   114ce:	cmp.w	sl, #0
   114d2:	beq.w	11650 <setlogin@@Base+0x394>
   114d6:	blx	2640 <__ctype_b_loc@plt>
   114da:	ldr.w	fp, [r0]
   114de:	mov	r5, r0
   114e0:	ldrh.w	r3, [fp, sl, lsl #1]
   114e4:	lsls	r3, r3, #18
   114e6:	bmi.w	11640 <setlogin@@Base+0x384>
   114ea:	cmp.w	sl, #61	; 0x3d
   114ee:	beq.w	116ac <setlogin@@Base+0x3f0>
   114f2:	vmov	r0, s16
   114f6:	mov	r1, sl
   114f8:	blx	22f0 <strchr@plt>
   114fc:	cmp	r0, #0
   114fe:	beq.w	11632 <setlogin@@Base+0x376>
   11502:	cmp.w	r8, #2
   11506:	beq.w	11662 <setlogin@@Base+0x3a6>
   1150a:	cmp.w	r8, #3
   1150e:	beq.n	115b0 <setlogin@@Base+0x2f4>
   11510:	cmp.w	r8, #1
   11514:	bne.n	115ee <setlogin@@Base+0x332>
   11516:	add.w	r8, r6, #1
   1151a:	cbz	r7, 1153a <setlogin@@Base+0x27e>
   1151c:	ldr	r3, [sp, #0]
   1151e:	cmp	r3, r8
   11520:	bls.w	11632 <setlogin@@Base+0x376>
   11524:	vmov	r1, s19
   11528:	bl	14db4 <strvisx@@Base+0x1040>
   1152c:	ldrb	r3, [r7, r6]
   1152e:	lsls	r2, r0, #4
   11530:	orr.w	r0, r3, r0, asr #4
   11534:	strb	r0, [r7, r6]
   11536:	strb.w	r2, [r7, r8]
   1153a:	mov	r9, r4
   1153c:	ldrb.w	r1, [r9], #1
   11540:	cmp	r1, #0
   11542:	beq.n	11632 <setlogin@@Base+0x376>
   11544:	ldr.w	fp, [r5]
   11548:	ldrh.w	r3, [fp, r1, lsl #1]
   1154c:	lsls	r2, r3, #18
   1154e:	bmi.w	1166e <setlogin@@Base+0x3b2>
   11552:	cmp	r1, #61	; 0x3d
   11554:	beq.w	116f4 <setlogin@@Base+0x438>
   11558:	vmov	r0, s23
   1155c:	blx	22f0 <strchr@plt>
   11560:	cmp	r0, #0
   11562:	beq.n	11632 <setlogin@@Base+0x376>
   11564:	add.w	r6, r8, #1
   11568:	cbz	r7, 11588 <setlogin@@Base+0x2cc>
   1156a:	ldr	r3, [sp, #0]
   1156c:	cmp	r3, r6
   1156e:	bls.n	11632 <setlogin@@Base+0x376>
   11570:	vmov	r1, s18
   11574:	bl	14db4 <strvisx@@Base+0x1040>
   11578:	ldrb.w	r3, [r7, r8]
   1157c:	lsls	r2, r0, #6
   1157e:	orr.w	r0, r3, r0, asr #2
   11582:	strb.w	r0, [r7, r8]
   11586:	strb	r2, [r7, r6]
   11588:	mov	r4, r9
   1158a:	ldrb.w	r1, [r4], #1
   1158e:	cmp	r1, #0
   11590:	beq.n	11632 <setlogin@@Base+0x376>
   11592:	ldr.w	fp, [r5]
   11596:	ldrh.w	r3, [fp, r1, lsl #1]
   1159a:	lsls	r3, r3, #18
   1159c:	bmi.n	11676 <setlogin@@Base+0x3ba>
   1159e:	cmp	r1, #61	; 0x3d
   115a0:	beq.w	116ea <setlogin@@Base+0x42e>
   115a4:	vmov	r0, s22
   115a8:	blx	22f0 <strchr@plt>
   115ac:	cmp	r0, #0
   115ae:	beq.n	11632 <setlogin@@Base+0x376>
   115b0:	cbz	r7, 115c6 <setlogin@@Base+0x30a>
   115b2:	ldr	r3, [sp, #0]
   115b4:	cmp	r3, r6
   115b6:	bls.n	11632 <setlogin@@Base+0x376>
   115b8:	vmov	r1, s17
   115bc:	bl	14db4 <strvisx@@Base+0x1040>
   115c0:	ldrb	r3, [r7, r6]
   115c2:	orrs	r0, r3
   115c4:	strb	r0, [r7, r6]
   115c6:	mov	r9, r4
   115c8:	adds	r6, #1
   115ca:	ldrb.w	r1, [r9], #1
   115ce:	cmp	r1, #0
   115d0:	beq.n	11656 <setlogin@@Base+0x39a>
   115d2:	ldr.w	fp, [r5]
   115d6:	ldrh.w	r3, [fp, r1, lsl #1]
   115da:	lsls	r0, r3, #18
   115dc:	bmi.n	11668 <setlogin@@Base+0x3ac>
   115de:	cmp	r1, #61	; 0x3d
   115e0:	beq.n	11632 <setlogin@@Base+0x376>
   115e2:	vmov	r0, s21
   115e6:	blx	22f0 <strchr@plt>
   115ea:	cbz	r0, 11632 <setlogin@@Base+0x376>
   115ec:	mov	r4, r9
   115ee:	cmp	r7, #0
   115f0:	beq.n	1167e <setlogin@@Base+0x3c2>
   115f2:	ldr	r3, [sp, #0]
   115f4:	cmp	r3, r6
   115f6:	bls.n	11632 <setlogin@@Base+0x376>
   115f8:	vmov	r1, s20
   115fc:	mov	r9, r4
   115fe:	bl	14db4 <strvisx@@Base+0x1040>
   11602:	lsls	r0, r0, #2
   11604:	strb	r0, [r7, r6]
   11606:	ldrb.w	r1, [r9], #1
   1160a:	cbz	r1, 11632 <setlogin@@Base+0x376>
   1160c:	ldr	r3, [r5, #0]
   1160e:	ldrh.w	r3, [r3, r1, lsl #1]
   11612:	lsls	r0, r3, #18
   11614:	bmi.n	11690 <setlogin@@Base+0x3d4>
   11616:	cmp	r1, #61	; 0x3d
   11618:	beq.n	11632 <setlogin@@Base+0x376>
   1161a:	vmov	r0, s20
   1161e:	blx	22f0 <strchr@plt>
   11622:	cbz	r0, 11632 <setlogin@@Base+0x376>
   11624:	add.w	r8, r6, #1
   11628:	mov	r4, r9
   1162a:	b.n	1151c <setlogin@@Base+0x260>
   1162c:	cbz	r7, 11656 <setlogin@@Base+0x39a>
   1162e:	ldrb	r3, [r7, r6]
   11630:	cbz	r3, 11656 <setlogin@@Base+0x39a>
   11632:	mov.w	r0, #4294967295	; 0xffffffff
   11636:	add	sp, #12
   11638:	vpop	{d8-d11}
   1163c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11640:	mov	r9, r4
   11642:	mov	r4, r9
   11644:	ldrb.w	sl, [r4], #1
   11648:	cmp.w	sl, #0
   1164c:	bne.w	114d6 <setlogin@@Base+0x21a>
   11650:	cmp.w	r8, #0
   11654:	bne.n	11632 <setlogin@@Base+0x376>
   11656:	mov	r0, r6
   11658:	add	sp, #12
   1165a:	vpop	{d8-d11}
   1165e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11662:	mov	r9, r4
   11664:	mov	r8, r6
   11666:	b.n	11564 <setlogin@@Base+0x2a8>
   11668:	mov.w	r8, #0
   1166c:	b.n	114c8 <setlogin@@Base+0x20c>
   1166e:	mov	r6, r8
   11670:	mov.w	r8, #2
   11674:	b.n	114c8 <setlogin@@Base+0x20c>
   11676:	mov	r9, r4
   11678:	mov.w	r8, #3
   1167c:	b.n	114c8 <setlogin@@Base+0x20c>
   1167e:	mov	r9, r4
   11680:	ldrb.w	r1, [r9], #1
   11684:	cmp	r1, #0
   11686:	beq.n	11632 <setlogin@@Base+0x376>
   11688:	ldrh.w	r3, [fp, r1, lsl #1]
   1168c:	lsls	r4, r3, #18
   1168e:	bpl.n	11696 <setlogin@@Base+0x3da>
   11690:	mov.w	r8, #1
   11694:	b.n	114c8 <setlogin@@Base+0x20c>
   11696:	cmp	r1, #61	; 0x3d
   11698:	beq.n	11632 <setlogin@@Base+0x376>
   1169a:	ldr	r0, [sp, #4]
   1169c:	blx	22f0 <strchr@plt>
   116a0:	cmp	r0, #0
   116a2:	beq.n	11632 <setlogin@@Base+0x376>
   116a4:	add.w	r8, r6, #1
   116a8:	mov	r4, r9
   116aa:	b.n	1153a <setlogin@@Base+0x27e>
   116ac:	cmp.w	r8, #2
   116b0:	ldrb	r3, [r4, #0]
   116b2:	add.w	r1, r9, #2
   116b6:	bne.n	116d2 <setlogin@@Base+0x416>
   116b8:	cbnz	r3, 116c4 <setlogin@@Base+0x408>
   116ba:	b.n	11632 <setlogin@@Base+0x376>
   116bc:	ldrb.w	r3, [r1], #1
   116c0:	cmp	r3, #0
   116c2:	beq.n	11632 <setlogin@@Base+0x376>
   116c4:	ldrh.w	r2, [fp, r3, lsl #1]
   116c8:	lsls	r2, r2, #18
   116ca:	bmi.n	116bc <setlogin@@Base+0x400>
   116cc:	cmp	r3, #61	; 0x3d
   116ce:	beq.n	116e4 <setlogin@@Base+0x428>
   116d0:	b.n	11632 <setlogin@@Base+0x376>
   116d2:	cmp.w	r8, #3
   116d6:	bne.n	11632 <setlogin@@Base+0x376>
   116d8:	cmp	r3, #0
   116da:	beq.n	1162c <setlogin@@Base+0x370>
   116dc:	ldrh.w	r3, [fp, r3, lsl #1]
   116e0:	lsls	r3, r3, #18
   116e2:	bpl.n	11632 <setlogin@@Base+0x376>
   116e4:	ldrb.w	r3, [r1], #1
   116e8:	b.n	116d8 <setlogin@@Base+0x41c>
   116ea:	ldrb.w	r3, [r9, #1]
   116ee:	add.w	r1, r9, #2
   116f2:	b.n	116d8 <setlogin@@Base+0x41c>
   116f4:	ldrb	r3, [r4, #1]
   116f6:	adds	r1, r4, #2
   116f8:	mov	r6, r8
   116fa:	b.n	116b8 <setlogin@@Base+0x3fc>
   116fc:	strb	r6, [r4, #31]
   116fe:	movs	r0, r0
   11700:	strb	r6, [r1, #31]
   11702:	movs	r0, r0
   11704:	strb	r4, [r0, #31]
   11706:	movs	r0, r0
   11708:	strb	r4, [r7, #30]
   1170a:	movs	r0, r0
   1170c:	strb	r4, [r6, #30]
   1170e:	movs	r0, r0
   11710:	strb	r4, [r5, #30]
   11712:	movs	r0, r0
   11714:	strb	r4, [r4, #30]
   11716:	movs	r0, r0
   11718:	strb	r4, [r3, #30]
   1171a:	movs	r0, r0
   1171c:	strb	r4, [r2, #30]
   1171e:	movs	r0, r0
   11720:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11724:	sub	sp, #36	; 0x24
   11726:	ldrb	r6, [r0, #0]
   11728:	mov	r4, r0
   1172a:	str	r1, [sp, #24]
   1172c:	lsls	r5, r6, #24
   1172e:	bmi.w	1187e <setlogin@@Base+0x5c2>
   11732:	blx	2640 <__ctype_b_loc@plt>
   11736:	ldr	r3, [r0, #0]
   11738:	b.n	11744 <setlogin@@Base+0x488>
   1173a:	ldrb.w	r6, [r4, #1]!
   1173e:	lsls	r0, r6, #24
   11740:	bmi.w	1187e <setlogin@@Base+0x5c2>
   11744:	ldrh.w	r5, [r3, r6, lsl #1]
   11748:	ands.w	r5, r5, #8192	; 0x2000
   1174c:	bne.n	1173a <setlogin@@Base+0x47e>
   1174e:	ldrb	r6, [r4, #0]
   11750:	sub.w	r3, r6, #43	; 0x2b
   11754:	tst.w	r3, #253	; 0xfd
   11758:	beq.w	1188a <setlogin@@Base+0x5ce>
   1175c:	bics.w	sl, r6, #127	; 0x7f
   11760:	ittt	ne
   11762:	movne.w	r8, #0
   11766:	movne.w	r9, #0
   1176a:	strdne	r8, r9, [sp]
   1176e:	beq.w	118c8 <setlogin@@Base+0x60c>
   11772:	ldr	r7, [pc, #796]	; (11a90 <setlogin@@Base+0x7d4>)
   11774:	mov.w	sl, #66	; 0x42
   11778:	strd	r8, r9, [sp, #8]
   1177c:	mov	r9, r6
   1177e:	add	r7, pc
   11780:	cmp	r9, sl
   11782:	add.w	r3, r7, #6
   11786:	str	r4, [sp, #16]
   11788:	mov	fp, r7
   1178a:	sub.w	r6, fp, r7
   1178e:	mov	r4, r3
   11790:	beq.n	117b2 <setlogin@@Base+0x4f6>
   11792:	blx	24f8 <__ctype_tolower_loc@plt>
   11796:	ldr	r2, [r0, #0]
   11798:	ldr.w	r2, [r2, sl, lsl #2]
   1179c:	cmp	r2, r9
   1179e:	beq.n	117b2 <setlogin@@Base+0x4f6>
   117a0:	cmp	r4, fp
   117a2:	beq.w	11a34 <setlogin@@Base+0x778>
   117a6:	ldrb.w	sl, [fp, #1]!
   117aa:	cmp	r9, sl
   117ac:	sub.w	r6, fp, r7
   117b0:	bne.n	11792 <setlogin@@Base+0x4d6>
   117b2:	blx	2640 <__ctype_b_loc@plt>
   117b6:	ldr	r4, [sp, #16]
   117b8:	ldrd	r8, r9, [sp, #8]
   117bc:	ldrb	r2, [r4, #1]
   117be:	ldr	r3, [r0, #0]
   117c0:	ldrh.w	r3, [r3, r2, lsl #1]
   117c4:	lsls	r3, r3, #28
   117c6:	bmi.w	11a34 <setlogin@@Base+0x778>
   117ca:	ldr	r3, [pc, #712]	; (11a94 <setlogin@@Base+0x7d8>)
   117cc:	mov.w	r0, #4294967295	; 0xffffffff
   117d0:	mvn.w	r1, #2147483648	; 0x80000000
   117d4:	add	r3, pc
   117d6:	add.w	fp, r3, r6, lsl #3
   117da:	ldrd	sl, fp, [fp, #8]
   117de:	mov	r3, fp
   117e0:	mov	r2, sl
   117e2:	bl	14c74 <strvisx@@Base+0xf00>
   117e6:	cmp	r0, r8
   117e8:	mov	r6, r0
   117ea:	sbcs.w	r3, r1, r9
   117ee:	mov	r7, r1
   117f0:	blt.w	11a48 <setlogin@@Base+0x78c>
   117f4:	mov	r3, fp
   117f6:	mov	r2, sl
   117f8:	movs	r0, #0
   117fa:	mov.w	r1, #2147483648	; 0x80000000
   117fe:	bl	14c74 <strvisx@@Base+0xf00>
   11802:	cmp	r8, r0
   11804:	sbcs.w	r3, r9, r1
   11808:	blt.w	11a48 <setlogin@@Base+0x78c>
   1180c:	mov	r2, r8
   1180e:	mov	r3, r9
   11810:	mov	r0, sl
   11812:	mov	r1, fp
   11814:	bl	14e2c <strvisx@@Base+0x10b8>
   11818:	ldrd	r2, r3, [sp]
   1181c:	cmp	r2, r6
   1181e:	mov	r4, r1
   11820:	sbcs.w	r1, r3, r7
   11824:	mov	r8, r0
   11826:	blt.n	11846 <setlogin@@Base+0x58a>
   11828:	mov	r0, r2
   1182a:	mov	r1, r3
   1182c:	movs	r2, #10
   1182e:	movs	r3, #0
   11830:	bl	14c74 <strvisx@@Base+0xf00>
   11834:	subs	r5, #1
   11836:	cmp	r0, r6
   11838:	mov	r3, r1
   1183a:	sbcs.w	r1, r3, r7
   1183e:	mov	r2, r0
   11840:	bge.n	11828 <setlogin@@Base+0x56c>
   11842:	strd	r2, r3, [sp]
   11846:	ldrd	r2, r3, [sp]
   1184a:	mov	r0, sl
   1184c:	mov	r1, fp
   1184e:	bl	14e2c <strvisx@@Base+0x10b8>
   11852:	cmp	r5, #1
   11854:	bls.n	11868 <setlogin@@Base+0x5ac>
   11856:	subs	r5, #1
   11858:	movs	r6, #0
   1185a:	adds	r6, #1
   1185c:	movs	r2, #10
   1185e:	movs	r3, #0
   11860:	bl	14c74 <strvisx@@Base+0xf00>
   11864:	cmp	r6, r5
   11866:	bne.n	1185a <setlogin@@Base+0x59e>
   11868:	mov	r2, r8
   1186a:	mov	r3, r4
   1186c:	bl	14d78 <strvisx@@Base+0x1004>
   11870:	mov	r3, r1
   11872:	ldr	r1, [sp, #24]
   11874:	mov	r2, r0
   11876:	movs	r0, #0
   11878:	strd	r2, r3, [r1]
   1187c:	b.n	11a42 <setlogin@@Base+0x786>
   1187e:	sub.w	r3, r6, #43	; 0x2b
   11882:	tst.w	r3, #253	; 0xfd
   11886:	bne.w	11a6e <setlogin@@Base+0x7b2>
   1188a:	mov.w	sl, #0
   1188e:	mov	r2, sl
   11890:	b.n	118a4 <setlogin@@Base+0x5e8>
   11892:	cmp	r6, #43	; 0x2b
   11894:	beq.w	119d2 <setlogin@@Base+0x716>
   11898:	ldrb	r6, [r4, #0]
   1189a:	sub.w	r3, r6, #43	; 0x2b
   1189e:	tst.w	r3, #253	; 0xfd
   118a2:	bne.n	118c0 <setlogin@@Base+0x604>
   118a4:	cmp	r6, #45	; 0x2d
   118a6:	bne.n	11892 <setlogin@@Base+0x5d6>
   118a8:	cmp	r2, #0
   118aa:	bne.w	11a34 <setlogin@@Base+0x778>
   118ae:	ldrb	r6, [r4, #1]
   118b0:	adds	r4, #1
   118b2:	mov.w	r2, #4294967295	; 0xffffffff
   118b6:	sub.w	r3, r6, #43	; 0x2b
   118ba:	tst.w	r3, #253	; 0xfd
   118be:	beq.n	118a4 <setlogin@@Base+0x5e8>
   118c0:	lsls	r1, r6, #24
   118c2:	mov	sl, r2
   118c4:	bmi.w	11a7e <setlogin@@Base+0x7c2>
   118c8:	blx	2640 <__ctype_b_loc@plt>
   118cc:	movs	r2, #0
   118ce:	movs	r3, #0
   118d0:	movs	r5, #0
   118d2:	str.w	sl, [sp, #28]
   118d6:	mov	r8, r2
   118d8:	mov	r9, r3
   118da:	mov	sl, r2
   118dc:	str	r5, [sp, #8]
   118de:	ldr.w	fp, [r0]
   118e2:	mov	r0, r6
   118e4:	str.w	fp, [sp]
   118e8:	mov	fp, r3
   118ea:	b.n	1195e <setlogin@@Base+0x6a2>
   118ec:	mvn.w	r1, #47	; 0x2f
   118f0:	bl	14d50 <strvisx@@Base+0xfdc>
   118f4:	mov	r6, r0
   118f6:	cmp	r5, #0
   118f8:	beq.n	119da <setlogin@@Base+0x71e>
   118fa:	cmp	r5, #19
   118fc:	bhi.n	11956 <setlogin@@Base+0x69a>
   118fe:	mov.w	r2, #3435973836	; 0xcccccccc
   11902:	movw	r3, #52428	; 0xcccc
   11906:	cmp	r2, sl
   11908:	movt	r3, #3276	; 0xccc
   1190c:	sbcs.w	r3, r3, fp
   11910:	add.w	r5, r5, #1
   11914:	blt.w	11a48 <setlogin@@Base+0x78c>
   11918:	mov	r0, sl
   1191a:	mov	r1, fp
   1191c:	movs	r2, #10
   1191e:	movs	r3, #0
   11920:	bl	14e2c <strvisx@@Base+0x10b8>
   11924:	mov	r2, r0
   11926:	mov	r3, r1
   11928:	strd	r1, r0, [sp, #16]
   1192c:	mov.w	r0, #4294967295	; 0xffffffff
   11930:	mvn.w	r1, #2147483648	; 0x80000000
   11934:	bl	14ddc <strvisx@@Base+0x1068>
   11938:	mov	sl, r0
   1193a:	cmp	sl, r6
   1193c:	mov	fp, r1
   1193e:	mov.w	r1, #0
   11942:	sbcs.w	r3, fp, r1
   11946:	mov	r0, r6
   11948:	ldrd	r3, r2, [sp, #16]
   1194c:	blt.n	11a48 <setlogin@@Base+0x78c>
   1194e:	bl	14d78 <strvisx@@Base+0x1004>
   11952:	mov	sl, r0
   11954:	mov	fp, r1
   11956:	ldrb.w	r0, [r4, #1]!
   1195a:	lsls	r2, r0, #24
   1195c:	bmi.n	11986 <setlogin@@Base+0x6ca>
   1195e:	ldr	r3, [sp, #0]
   11960:	ldrh.w	r3, [r3, r0, lsl #1]
   11964:	ubfx	r3, r3, #11, #1
   11968:	cmp	r0, #46	; 0x2e
   1196a:	it	eq
   1196c:	orreq.w	r3, r3, #1
   11970:	cmp	r3, #0
   11972:	beq.n	11a5c <setlogin@@Base+0x7a0>
   11974:	cmp	r0, #46	; 0x2e
   11976:	bne.n	118ec <setlogin@@Base+0x630>
   11978:	cmp	r5, #0
   1197a:	bne.n	11a34 <setlogin@@Base+0x778>
   1197c:	ldrb.w	r0, [r4, #1]!
   11980:	movs	r5, #1
   11982:	lsls	r2, r0, #24
   11984:	bpl.n	1195e <setlogin@@Base+0x6a2>
   11986:	strd	sl, fp, [sp]
   1198a:	mov	r6, r0
   1198c:	ldr.w	sl, [sp, #28]
   11990:	cmp.w	sl, #0
   11994:	beq.w	11772 <setlogin@@Base+0x4b6>
   11998:	mov.w	fp, sl, asr #31
   1199c:	mov	r0, r8
   1199e:	mov	r1, r9
   119a0:	mov	r2, sl
   119a2:	mov	r3, fp
   119a4:	bl	14e2c <strvisx@@Base+0x10b8>
   119a8:	mov	r2, sl
   119aa:	mov	r3, fp
   119ac:	mov	r7, r1
   119ae:	mov	r8, r0
   119b0:	ldrd	r0, r1, [sp]
   119b4:	mov	r9, r7
   119b6:	bl	14e2c <strvisx@@Base+0x10b8>
   119ba:	strd	r0, r1, [sp]
   119be:	cmp	r6, #0
   119c0:	bne.w	11772 <setlogin@@Base+0x4b6>
   119c4:	ldr	r3, [sp, #24]
   119c6:	mov	r0, r6
   119c8:	strd	r8, r9, [r3]
   119cc:	add	sp, #36	; 0x24
   119ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   119d2:	adds	r4, #1
   119d4:	cbnz	r2, 11a34 <setlogin@@Base+0x778>
   119d6:	movs	r2, #1
   119d8:	b.n	11898 <setlogin@@Base+0x5dc>
   119da:	ldr	r3, [sp, #8]
   119dc:	adds	r3, #1
   119de:	str	r3, [sp, #8]
   119e0:	cmp	r3, #20
   119e2:	bhi.n	11a48 <setlogin@@Base+0x78c>
   119e4:	mov.w	r2, #3435973836	; 0xcccccccc
   119e8:	movw	r3, #52428	; 0xcccc
   119ec:	cmp	r2, r8
   119ee:	movt	r3, #3276	; 0xccc
   119f2:	sbcs.w	r3, r3, r9
   119f6:	blt.n	11a48 <setlogin@@Base+0x78c>
   119f8:	movs	r2, #10
   119fa:	movs	r3, #0
   119fc:	mov	r0, r8
   119fe:	mov	r1, r9
   11a00:	bl	14e2c <strvisx@@Base+0x10b8>
   11a04:	movs	r7, #0
   11a06:	mov	r2, r0
   11a08:	mov	r3, r1
   11a0a:	strd	r1, r0, [sp, #16]
   11a0e:	mov.w	r0, #4294967295	; 0xffffffff
   11a12:	mvn.w	r1, #2147483648	; 0x80000000
   11a16:	bl	14ddc <strvisx@@Base+0x1068>
   11a1a:	cmp	r0, r6
   11a1c:	sbcs.w	r3, r1, r7
   11a20:	ldrd	r3, r2, [sp, #16]
   11a24:	blt.n	11a48 <setlogin@@Base+0x78c>
   11a26:	mov	r0, r6
   11a28:	mov	r1, r7
   11a2a:	bl	14d78 <strvisx@@Base+0x1004>
   11a2e:	mov	r8, r0
   11a30:	mov	r9, r1
   11a32:	b.n	11956 <setlogin@@Base+0x69a>
   11a34:	blx	2900 <__errno_location@plt>
   11a38:	movs	r2, #22
   11a3a:	mov	r3, r0
   11a3c:	mov.w	r0, #4294967295	; 0xffffffff
   11a40:	str	r2, [r3, #0]
   11a42:	add	sp, #36	; 0x24
   11a44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a48:	blx	2900 <__errno_location@plt>
   11a4c:	movs	r2, #34	; 0x22
   11a4e:	mov	r3, r0
   11a50:	mov.w	r0, #4294967295	; 0xffffffff
   11a54:	str	r2, [r3, #0]
   11a56:	add	sp, #36	; 0x24
   11a58:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a5c:	strd	sl, fp, [sp]
   11a60:	mov	r6, r0
   11a62:	ldr.w	sl, [sp, #28]
   11a66:	cmp.w	sl, #0
   11a6a:	beq.n	119be <setlogin@@Base+0x702>
   11a6c:	b.n	11998 <setlogin@@Base+0x6dc>
   11a6e:	movs	r2, #0
   11a70:	movs	r3, #0
   11a72:	movs	r5, #0
   11a74:	mov	r8, r2
   11a76:	mov	r9, r3
   11a78:	strd	r2, r3, [sp]
   11a7c:	b.n	11772 <setlogin@@Base+0x4b6>
   11a7e:	movs	r2, #0
   11a80:	movs	r3, #0
   11a82:	movs	r5, #0
   11a84:	mov	r8, r2
   11a86:	mov	r9, r3
   11a88:	strd	r2, r3, [sp]
   11a8c:	b.n	11990 <setlogin@@Base+0x6d4>
   11a8e:	nop
   11a90:	strb	r6, [r7, #20]
   11a92:	movs	r0, r0
   11a94:	strb	r0, [r5, #19]
   11a96:	movs	r0, r0
   11a98:	asrs	r3, r1, #31
   11a9a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a9e:	eor.w	r6, r3, r0
   11aa2:	eor.w	r7, r3, r1
   11aa6:	sub	sp, #60	; 0x3c
   11aa8:	mov	r4, r0
   11aaa:	mov	r5, r1
   11aac:	mov	sl, r2
   11aae:	mov	r0, r6
   11ab0:	mov	r2, r3
   11ab2:	mov	r1, r7
   11ab4:	bl	14ddc <strvisx@@Base+0x1068>
   11ab8:	cmp	r0, #0
   11aba:	sbcs.w	r3, r1, #0
   11abe:	blt.w	11d12 <setlogin@@Base+0xa56>
   11ac2:	mov.w	r8, r0, lsr #10
   11ac6:	mov.w	r9, r1, asr #10
   11aca:	orr.w	r8, r8, r1, lsl #22
   11ace:	mov	r6, r0
   11ad0:	orrs.w	r3, r8, r9
   11ad4:	mov	r7, r1
   11ad6:	beq.w	11cd0 <setlogin@@Base+0xa14>
   11ada:	cmp.w	r8, #1024	; 0x400
   11ade:	sbcs.w	r3, r9, #0
   11ae2:	blt.w	11cd6 <setlogin@@Base+0xa1a>
   11ae6:	cmp.w	r8, #1048576	; 0x100000
   11aea:	sbcs.w	r3, r9, #0
   11aee:	blt.w	11ce4 <setlogin@@Base+0xa28>
   11af2:	cmp.w	r8, #1073741824	; 0x40000000
   11af6:	sbcs.w	r3, r9, #0
   11afa:	blt.w	11cf0 <setlogin@@Base+0xa34>
   11afe:	cmp.w	r8, #0
   11b02:	sbcs.w	r3, r9, #256	; 0x100
   11b06:	blt.w	11cfc <setlogin@@Base+0xa40>
   11b0a:	movs	r0, #0
   11b0c:	cmp	r8, r0
   11b0e:	mov.w	r1, #262144	; 0x40000
   11b12:	sbcs.w	r3, r9, r1
   11b16:	blt.w	11d08 <setlogin@@Base+0xa4c>
   11b1a:	movs	r2, #0
   11b1c:	mov.w	r3, #268435456	; 0x10000000
   11b20:	mov.w	r8, #6
   11b24:	ldr	r1, [pc, #508]	; (11d24 <setlogin@@Base+0xa68>)
   11b26:	add	r1, pc
   11b28:	add.w	r1, r1, r8, lsl #2
   11b2c:	ldr.w	fp, [r1, #64]	; 0x40
   11b30:	mov	r0, r4
   11b32:	mov	r1, r5
   11b34:	strd	r3, r2, [sp, #40]	; 0x28
   11b38:	bl	14c74 <strvisx@@Base+0xf00>
   11b3c:	ldr	r2, [sp, #44]	; 0x2c
   11b3e:	add.w	r8, r8, #4294967295	; 0xffffffff
   11b42:	ldr	r3, [sp, #40]	; 0x28
   11b44:	mov	ip, r1
   11b46:	mov	r4, r0
   11b48:	mov	r1, r7
   11b4a:	mov	r0, r6
   11b4c:	mov	r5, ip
   11b4e:	bl	14c74 <strvisx@@Base+0xf00>
   11b52:	mov	r1, r3
   11b54:	ldr	r3, [pc, #464]	; (11d28 <setlogin@@Base+0xa6c>)
   11b56:	mov	r0, r2
   11b58:	add	r3, pc
   11b5a:	add.w	r3, r3, r8, lsl #3
   11b5e:	ldrd	r2, r3, [r3, #8]
   11b62:	bl	14c74 <strvisx@@Base+0xf00>
   11b66:	movs	r2, #10
   11b68:	movs	r3, #0
   11b6a:	bl	14e2c <strvisx@@Base+0x10b8>
   11b6e:	mov.w	r2, #512	; 0x200
   11b72:	movs	r3, #0
   11b74:	bl	14d78 <strvisx@@Base+0x1004>
   11b78:	cmp.w	r0, #10240	; 0x2800
   11b7c:	mov	r3, r1
   11b7e:	sbcs.w	r1, r3, #0
   11b82:	mov	r2, r0
   11b84:	blt.n	11c00 <setlogin@@Base+0x944>
   11b86:	cmp	r4, #0
   11b88:	mov	r0, r4
   11b8a:	sbcs.w	r3, r5, #0
   11b8e:	mov	r1, r5
   11b90:	mov.w	r8, #0
   11b94:	mov.w	r9, #0
   11b98:	itete	ge
   11b9a:	movge	r2, #1
   11b9c:	movlt.w	r2, #4294967295	; 0xffffffff
   11ba0:	movge	r3, #0
   11ba2:	movlt.w	r3, #4294967295	; 0xffffffff
   11ba6:	bl	14d78 <strvisx@@Base+0x1004>
   11baa:	adds.w	r3, r0, #99	; 0x63
   11bae:	str	r3, [sp, #32]
   11bb0:	adc.w	r3, r1, #0
   11bb4:	str	r3, [sp, #36]	; 0x24
   11bb6:	ldrd	r2, r3, [sp, #32]
   11bba:	mov	r4, r0
   11bbc:	mov	r5, r1
   11bbe:	cmp	r3, #0
   11bc0:	it	eq
   11bc2:	cmpeq	r2, #199	; 0xc7
   11bc4:	ite	cs
   11bc6:	movcs	r3, #1
   11bc8:	movcc	r3, #0
   11bca:	cmp.w	fp, #0
   11bce:	it	eq
   11bd0:	moveq	r3, #1
   11bd2:	cmp	r3, #0
   11bd4:	beq.n	11ca2 <setlogin@@Base+0x9e6>
   11bd6:	ldr	r2, [pc, #340]	; (11d2c <setlogin@@Base+0xa70>)
   11bd8:	mov	r0, sl
   11bda:	strd	r4, r5, [sp, #8]
   11bde:	mov.w	r3, #4294967295	; 0xffffffff
   11be2:	add	r2, pc
   11be4:	ldr	r1, [pc, #328]	; (11d30 <setlogin@@Base+0xa74>)
   11be6:	ldrb.w	r4, [r2, fp]
   11bea:	add	r1, pc
   11bec:	movs	r2, #1
   11bee:	str	r1, [sp, #0]
   11bf0:	movs	r1, #7
   11bf2:	str	r4, [sp, #16]
   11bf4:	blx	25b8 <__snprintf_chk@plt>
   11bf8:	movs	r0, #0
   11bfa:	add	sp, #60	; 0x3c
   11bfc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c00:	asrs	r6, r3, #31
   11c02:	movw	r0, #64513	; 0xfc01
   11c06:	ubfx	r6, r6, #0, #10
   11c0a:	movt	r0, #65535	; 0xffff
   11c0e:	adds	r6, r6, r2
   11c10:	mov.w	r7, #0
   11c14:	adc.w	r7, r3, r7
   11c18:	cmp	r2, r0
   11c1a:	mov.w	r1, #4294967295	; 0xffffffff
   11c1e:	sbcs	r3, r1
   11c20:	mov.w	r6, r6, lsr #10
   11c24:	mov.w	r9, r7, asr #10
   11c28:	orr.w	r8, r6, r7, lsl #22
   11c2c:	itt	lt
   11c2e:	movlt.w	r9, #0
   11c32:	movlt.w	r8, #0
   11c36:	orrs.w	r3, r4, r5
   11c3a:	bne.n	11c50 <setlogin@@Base+0x994>
   11c3c:	ldr	r1, [pc, #244]	; (11d34 <setlogin@@Base+0xa78>)
   11c3e:	mov	r0, sl
   11c40:	movs	r2, #7
   11c42:	add	r1, pc
   11c44:	bl	13518 <strlcpy@@Base>
   11c48:	movs	r0, #0
   11c4a:	add	sp, #60	; 0x3c
   11c4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c50:	adds.w	r3, r4, #99	; 0x63
   11c54:	str	r3, [sp, #48]	; 0x30
   11c56:	adc.w	r3, r5, #0
   11c5a:	str	r3, [sp, #52]	; 0x34
   11c5c:	ldrd	r2, r3, [sp, #48]	; 0x30
   11c60:	cmp	r3, #0
   11c62:	it	eq
   11c64:	cmpeq	r2, #199	; 0xc7
   11c66:	ite	cs
   11c68:	movcs	r3, #1
   11c6a:	movcc	r3, #0
   11c6c:	cmp.w	fp, #0
   11c70:	it	eq
   11c72:	moveq	r3, #1
   11c74:	cbz	r3, 11ca2 <setlogin@@Base+0x9e6>
   11c76:	cmp.w	r8, #5
   11c7a:	sbcs.w	r3, r9, #0
   11c7e:	blt.n	11bd6 <setlogin@@Base+0x91a>
   11c80:	cmp	r4, #0
   11c82:	mov	r0, r4
   11c84:	sbcs.w	r3, r5, #0
   11c88:	mov	r1, r5
   11c8a:	ittee	ge
   11c8c:	movge	r2, #1
   11c8e:	movge	r3, #0
   11c90:	movlt.w	r2, #4294967295	; 0xffffffff
   11c94:	movlt.w	r3, #4294967295	; 0xffffffff
   11c98:	bl	14d78 <strvisx@@Base+0x1004>
   11c9c:	mov	r4, r0
   11c9e:	mov	r5, r1
   11ca0:	b.n	11bd6 <setlogin@@Base+0x91a>
   11ca2:	ldr	r2, [pc, #148]	; (11d38 <setlogin@@Base+0xa7c>)
   11ca4:	mov	r0, sl
   11ca6:	ldr	r6, [pc, #148]	; (11d3c <setlogin@@Base+0xa80>)
   11ca8:	mov.w	r3, #4294967295	; 0xffffffff
   11cac:	add	r2, pc
   11cae:	movs	r1, #7
   11cb0:	add	r6, pc
   11cb2:	strd	r8, r9, [sp, #16]
   11cb6:	ldrb.w	r7, [r2, fp]
   11cba:	movs	r2, #1
   11cbc:	strd	r4, r5, [sp, #8]
   11cc0:	str	r6, [sp, #0]
   11cc2:	str	r7, [sp, #24]
   11cc4:	blx	25b8 <__snprintf_chk@plt>
   11cc8:	movs	r0, #0
   11cca:	add	sp, #60	; 0x3c
   11ccc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11cd0:	mov.w	fp, #0
   11cd4:	b.n	11c36 <setlogin@@Base+0x97a>
   11cd6:	mov.w	r8, #1
   11cda:	mov.w	r2, #1024	; 0x400
   11cde:	mov	fp, r8
   11ce0:	movs	r3, #0
   11ce2:	b.n	11b30 <setlogin@@Base+0x874>
   11ce4:	mov.w	r2, #1048576	; 0x100000
   11ce8:	movs	r3, #0
   11cea:	mov.w	r8, #2
   11cee:	b.n	11b24 <setlogin@@Base+0x868>
   11cf0:	mov.w	r2, #1073741824	; 0x40000000
   11cf4:	movs	r3, #0
   11cf6:	mov.w	r8, #3
   11cfa:	b.n	11b24 <setlogin@@Base+0x868>
   11cfc:	movs	r2, #0
   11cfe:	mov.w	r3, #256	; 0x100
   11d02:	mov.w	r8, #4
   11d06:	b.n	11b24 <setlogin@@Base+0x868>
   11d08:	mov	r2, r0
   11d0a:	mov	r3, r1
   11d0c:	mov.w	r8, #5
   11d10:	b.n	11b24 <setlogin@@Base+0x868>
   11d12:	blx	2900 <__errno_location@plt>
   11d16:	movs	r2, #34	; 0x22
   11d18:	mov	r3, r0
   11d1a:	mov.w	r0, #4294967295	; 0xffffffff
   11d1e:	str	r2, [r3, #0]
   11d20:	b.n	11bfa <setlogin@@Base+0x93e>
   11d22:	nop
   11d24:	strb	r6, [r2, #6]
   11d26:	movs	r0, r0
   11d28:	strb	r4, [r4, #5]
   11d2a:	movs	r0, r0
   11d2c:	strb	r2, [r3, #3]
   11d2e:	movs	r0, r0
   11d30:	strb	r6, [r6, #2]
   11d32:	movs	r0, r0
   11d34:	strb	r2, [r3, #1]
   11d36:	movs	r0, r0
   11d38:	strb	r0, [r2, #0]
   11d3a:	movs	r0, r0
   11d3c:	ldr	r0, [r7, #124]	; 0x7c
   11d3e:	movs	r0, r0
   11d40:	cbz	r0, 11d58 <setlogin@@Base+0xa9c>
   11d42:	push	{r4, lr}
   11d44:	mov.w	r2, #4294967295	; 0xffffffff
   11d48:	mov	r4, r0
   11d4a:	blx	2524 <__explicit_bzero_chk@plt+0x4>
   11d4e:	mov	r0, r4
   11d50:	ldmia.w	sp!, {r4, lr}
   11d54:	b.w	23f4 <free@plt>
   11d58:	bx	lr
   11d5a:	nop
   11d5c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d60:	mov	r8, r1
   11d62:	vpush	{d8}
   11d66:	mov	r1, r0
   11d68:	mov	r7, r0
   11d6a:	mov	r0, r8
   11d6c:	mov	r6, r2
   11d6e:	mov	r5, r3
   11d70:	sub	sp, #12
   11d72:	bl	14db4 <strvisx@@Base+0x1040>
   11d76:	mov	r1, r8
   11d78:	mov	sl, r0
   11d7a:	mov	r0, r6
   11d7c:	bl	14db4 <strvisx@@Base+0x1040>
   11d80:	vmov	s16, sl
   11d84:	mov	r9, r0
   11d86:	mov	r0, sl
   11d88:	mov	r1, r9
   11d8a:	bl	146c4 <strvisx@@Base+0x950>
   11d8e:	cmp	r1, #0
   11d90:	beq.n	11e20 <setlogin@@Base+0xb64>
   11d92:	mov	r0, r9
   11d94:	mov	r4, r1
   11d96:	bl	146c4 <strvisx@@Base+0x950>
   11d9a:	mov	r0, r4
   11d9c:	cmp	r1, #0
   11d9e:	bne.n	11d94 <setlogin@@Base+0xad8>
   11da0:	mov	r1, r7
   11da2:	mov	r0, r6
   11da4:	bl	14db4 <strvisx@@Base+0x1040>
   11da8:	mov	r1, r4
   11daa:	bl	14430 <strvisx@@Base+0x6bc>
   11dae:	cmp	r4, #0
   11db0:	mov	r7, r0
   11db2:	ble.n	11e16 <setlogin@@Base+0xb5a>
   11db4:	add.w	r6, r5, r8, lsl #2
   11db8:	add.w	r3, r4, r8
   11dbc:	str.w	r8, [sp]
   11dc0:	str	r3, [sp, #4]
   11dc2:	cmp	r7, #0
   11dc4:	ldr.w	sl, [sp]
   11dc8:	itt	gt
   11dca:	ldrgt	r4, [r6, #0]
   11dcc:	movgt.w	fp, #0
   11dd0:	bgt.n	11df8 <setlogin@@Base+0xb3c>
   11dd2:	b.n	11e08 <setlogin@@Base+0xb4c>
   11dd4:	vmov	r1, s16
   11dd8:	bl	14db4 <strvisx@@Base+0x1040>
   11ddc:	mov	sl, r0
   11dde:	ldr.w	r3, [r5, sl, lsl #2]
   11de2:	mov	r0, fp
   11de4:	str.w	r4, [r5, sl, lsl #2]
   11de8:	movs	r1, #1
   11dea:	str	r3, [r6, #0]
   11dec:	mov	r4, r3
   11dee:	bl	14d50 <strvisx@@Base+0xfdc>
   11df2:	cmp	r7, r0
   11df4:	mov	fp, r0
   11df6:	beq.n	11e08 <setlogin@@Base+0xb4c>
   11df8:	cmp	r8, sl
   11dfa:	mov	r1, r9
   11dfc:	mov	r0, sl
   11dfe:	ble.n	11dd4 <setlogin@@Base+0xb18>
   11e00:	bl	14d50 <strvisx@@Base+0xfdc>
   11e04:	mov	sl, r0
   11e06:	b.n	11dde <setlogin@@Base+0xb22>
   11e08:	ldr	r3, [sp, #0]
   11e0a:	adds	r6, #4
   11e0c:	ldr	r2, [sp, #4]
   11e0e:	adds	r3, #1
   11e10:	str	r3, [sp, #0]
   11e12:	cmp	r2, r3
   11e14:	bne.n	11dc2 <setlogin@@Base+0xb06>
   11e16:	add	sp, #12
   11e18:	vpop	{d8}
   11e1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e20:	mov	r4, r9
   11e22:	b.n	11da0 <setlogin@@Base+0xae4>
   11e24:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e28:	sub	sp, #20
   11e2a:	ldr	r6, [pc, #788]	; (12140 <setlogin@@Base+0xe84>)
   11e2c:	str	r0, [sp, #4]
   11e2e:	add	r6, pc
   11e30:	cmp	r2, #0
   11e32:	beq.n	11eb2 <setlogin@@Base+0xbf6>
   11e34:	ldr	r3, [pc, #780]	; (12144 <setlogin@@Base+0xe88>)
   11e36:	mov	r8, r1
   11e38:	mov	r5, r2
   11e3a:	ldr.w	r9, [r6, r3]
   11e3e:	ldr.w	r3, [r9]
   11e42:	cmp	r3, #0
   11e44:	beq.n	11ebe <setlogin@@Base+0xc02>
   11e46:	ldr	r3, [pc, #768]	; (12148 <setlogin@@Base+0xe8c>)
   11e48:	add	r3, pc
   11e4a:	ldr	r3, [r3, #0]
   11e4c:	adds	r3, #1
   11e4e:	ldr	r3, [pc, #764]	; (1214c <setlogin@@Base+0xe90>)
   11e50:	ldr	r7, [r6, r3]
   11e52:	beq.n	11eca <setlogin@@Base+0xc0e>
   11e54:	ldr	r2, [r7, #0]
   11e56:	cmp	r2, #0
   11e58:	bne.n	11eca <setlogin@@Base+0xc0e>
   11e5a:	ldrb	r3, [r5, #0]
   11e5c:	cmp	r3, #45	; 0x2d
   11e5e:	beq.n	11ee6 <setlogin@@Base+0xc2a>
   11e60:	cmp	r3, #43	; 0x2b
   11e62:	mov.w	fp, #0
   11e66:	beq.n	11eea <setlogin@@Base+0xc2e>
   11e68:	ldr	r3, [pc, #740]	; (12150 <setlogin@@Base+0xe94>)
   11e6a:	movs	r1, #0
   11e6c:	ldr	r3, [r6, r3]
   11e6e:	str	r3, [sp, #12]
   11e70:	str	r1, [r3, #0]
   11e72:	cmp	r2, #0
   11e74:	beq.n	11f0c <setlogin@@Base+0xc50>
   11e76:	ldr	r3, [pc, #732]	; (12154 <setlogin@@Base+0xe98>)
   11e78:	mov.w	r2, #4294967295	; 0xffffffff
   11e7c:	add	r3, pc
   11e7e:	strd	r2, r2, [r3, #4]
   11e82:	movs	r3, #0
   11e84:	ldr.w	sl, [r9]
   11e88:	str	r3, [r7, #0]
   11e8a:	ldr	r3, [sp, #4]
   11e8c:	cmp	r3, sl
   11e8e:	ble.w	11faa <setlogin@@Base+0xcee>
   11e92:	ldr.w	r7, [r8, sl, lsl #2]
   11e96:	ldr	r3, [pc, #704]	; (12158 <setlogin@@Base+0xe9c>)
   11e98:	ldrb	r1, [r7, #0]
   11e9a:	add	r3, pc
   11e9c:	cmp	r1, #45	; 0x2d
   11e9e:	str	r7, [r3, #0]
   11ea0:	beq.n	11f5e <setlogin@@Base+0xca2>
   11ea2:	ldr	r3, [pc, #696]	; (1215c <setlogin@@Base+0xea0>)
   11ea4:	ldr	r1, [pc, #696]	; (12160 <setlogin@@Base+0xea4>)
   11ea6:	add	r3, pc
   11ea8:	add	r1, pc
   11eaa:	str	r1, [r3, #0]
   11eac:	cmp.w	fp, #0
   11eb0:	bne.n	11eee <setlogin@@Base+0xc32>
   11eb2:	mov.w	r4, #4294967295	; 0xffffffff
   11eb6:	mov	r0, r4
   11eb8:	add	sp, #20
   11eba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ebe:	ldr	r3, [pc, #652]	; (1214c <setlogin@@Base+0xe90>)
   11ec0:	movs	r2, #1
   11ec2:	ldr	r7, [r6, r3]
   11ec4:	str.w	r2, [r9]
   11ec8:	str	r2, [r7, #0]
   11eca:	ldr	r0, [pc, #664]	; (12164 <setlogin@@Base+0xea8>)
   11ecc:	add	r0, pc
   11ece:	blx	22d8 <getenv@plt>
   11ed2:	ldr	r3, [pc, #660]	; (12168 <setlogin@@Base+0xeac>)
   11ed4:	ldr	r2, [r7, #0]
   11ed6:	add	r3, pc
   11ed8:	subs	r0, #0
   11eda:	it	ne
   11edc:	movne	r0, #1
   11ede:	str	r0, [r3, #0]
   11ee0:	ldrb	r3, [r5, #0]
   11ee2:	cmp	r3, #45	; 0x2d
   11ee4:	bne.n	11e60 <setlogin@@Base+0xba4>
   11ee6:	mov.w	fp, #2
   11eea:	adds	r5, #1
   11eec:	b.n	11e68 <setlogin@@Base+0xbac>
   11eee:	movs	r1, #1
   11ef0:	mov	r0, sl
   11ef2:	bl	14d50 <strvisx@@Base+0xfdc>
   11ef6:	ldr	r2, [sp, #12]
   11ef8:	movs	r4, #1
   11efa:	str.w	r0, [r9]
   11efe:	mov	r0, r4
   11f00:	ldr.w	r3, [r8, sl, lsl #2]
   11f04:	str	r3, [r2, #0]
   11f06:	add	sp, #20
   11f08:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f0c:	ldr	r3, [pc, #604]	; (1216c <setlogin@@Base+0xeb0>)
   11f0e:	add	r3, pc
   11f10:	ldr	r1, [r3, #0]
   11f12:	ldrb	r4, [r1, #0]
   11f14:	cmp	r4, #0
   11f16:	beq.n	11e82 <setlogin@@Base+0xbc6>
   11f18:	ldrb	r3, [r1, #1]
   11f1a:	ldr	r2, [pc, #596]	; (12170 <setlogin@@Base+0xeb4>)
   11f1c:	cmp	r4, #58	; 0x3a
   11f1e:	add.w	r7, r1, #1
   11f22:	add	r2, pc
   11f24:	str	r7, [r2, #0]
   11f26:	beq.n	12002 <setlogin@@Base+0xd46>
   11f28:	cmp	r4, #45	; 0x2d
   11f2a:	beq.w	1205e <setlogin@@Base+0xda2>
   11f2e:	mov	r1, r4
   11f30:	mov	r0, r5
   11f32:	str	r3, [sp, #8]
   11f34:	blx	22f0 <strchr@plt>
   11f38:	ldr	r3, [sp, #8]
   11f3a:	mov	fp, r0
   11f3c:	cmp	r0, #0
   11f3e:	beq.n	12002 <setlogin@@Base+0xd46>
   11f40:	ldrb.w	r2, [fp, #1]
   11f44:	cmp	r2, #58	; 0x3a
   11f46:	beq.w	12080 <setlogin@@Base+0xdc4>
   11f4a:	cmp	r3, #0
   11f4c:	bne.n	11eb6 <setlogin@@Base+0xbfa>
   11f4e:	ldr.w	r0, [r9]
   11f52:	movs	r1, #1
   11f54:	bl	14d50 <strvisx@@Base+0xfdc>
   11f58:	str.w	r0, [r9]
   11f5c:	b.n	11eb6 <setlogin@@Base+0xbfa>
   11f5e:	ldrb	r4, [r7, #1]
   11f60:	str	r3, [sp, #8]
   11f62:	cmp	r4, #0
   11f64:	bne.n	12030 <setlogin@@Base+0xd74>
   11f66:	mov	r0, r5
   11f68:	blx	22f0 <strchr@plt>
   11f6c:	ldr	r3, [sp, #8]
   11f6e:	cmp	r0, #0
   11f70:	beq.n	11ea2 <setlogin@@Base+0xbe6>
   11f72:	ldr	r1, [pc, #512]	; (12174 <setlogin@@Base+0xeb8>)
   11f74:	add	r1, pc
   11f76:	ldr.w	fp, [r1, #8]
   11f7a:	cmp.w	fp, #4294967295	; 0xffffffff
   11f7e:	beq.w	120a4 <setlogin@@Base+0xde8>
   11f82:	ldr	r3, [r1, #4]
   11f84:	adds	r3, #1
   11f86:	beq.n	12072 <setlogin@@Base+0xdb6>
   11f88:	ldr	r3, [pc, #492]	; (12178 <setlogin@@Base+0xebc>)
   11f8a:	adds	r7, #1
   11f8c:	add	r3, pc
   11f8e:	str	r7, [r3, #0]
   11f90:	movs	r1, #45	; 0x2d
   11f92:	mov	r0, r5
   11f94:	blx	22f0 <strchr@plt>
   11f98:	mov	fp, r0
   11f9a:	cmp	r0, #0
   11f9c:	beq.n	11eb2 <setlogin@@Base+0xbf6>
   11f9e:	ldrb	r3, [r0, #1]
   11fa0:	cmp	r3, #58	; 0x3a
   11fa2:	beq.w	120aa <setlogin@@Base+0xdee>
   11fa6:	movs	r4, #45	; 0x2d
   11fa8:	b.n	11f4e <setlogin@@Base+0xc92>
   11faa:	ldr	r3, [pc, #464]	; (1217c <setlogin@@Base+0xec0>)
   11fac:	ldr	r1, [pc, #464]	; (12180 <setlogin@@Base+0xec4>)
   11fae:	add	r3, pc
   11fb0:	ldr	r5, [pc, #464]	; (12184 <setlogin@@Base+0xec8>)
   11fb2:	add	r1, pc
   11fb4:	ldrd	r4, r6, [r3, #4]
   11fb8:	add	r5, pc
   11fba:	str	r5, [r1, #0]
   11fbc:	adds	r1, r4, #1
   11fbe:	bne.n	11fde <setlogin@@Base+0xd22>
   11fc0:	adds	r2, r6, #1
   11fc2:	it	ne
   11fc4:	strne.w	r6, [r9]
   11fc8:	ldr	r3, [pc, #444]	; (12188 <setlogin@@Base+0xecc>)
   11fca:	mov.w	r2, #4294967295	; 0xffffffff
   11fce:	mov	r4, r2
   11fd0:	add	r3, pc
   11fd2:	mov	r0, r4
   11fd4:	strd	r2, r2, [r3, #4]
   11fd8:	add	sp, #20
   11fda:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fde:	mov	r1, r4
   11fe0:	mov	r3, r8
   11fe2:	mov	r2, sl
   11fe4:	mov	r0, r6
   11fe6:	bl	11d5c <setlogin@@Base+0xaa0>
   11fea:	mov	r1, r6
   11fec:	mov	r0, r4
   11fee:	bl	14db4 <strvisx@@Base+0x1040>
   11ff2:	mov	r1, r0
   11ff4:	ldr.w	r0, [r9]
   11ff8:	bl	14db4 <strvisx@@Base+0x1040>
   11ffc:	str.w	r0, [r9]
   12000:	b.n	11fc8 <setlogin@@Base+0xd0c>
   12002:	cbnz	r3, 12012 <setlogin@@Base+0xd56>
   12004:	ldr.w	r0, [r9]
   12008:	movs	r1, #1
   1200a:	bl	14d50 <strvisx@@Base+0xfdc>
   1200e:	str.w	r0, [r9]
   12012:	ldr	r3, [pc, #376]	; (1218c <setlogin@@Base+0xed0>)
   12014:	ldr	r3, [r6, r3]
   12016:	ldr	r3, [r3, #0]
   12018:	cbz	r3, 12020 <setlogin@@Base+0xd64>
   1201a:	ldrb	r3, [r5, #0]
   1201c:	cmp	r3, #58	; 0x3a
   1201e:	bne.n	12066 <setlogin@@Base+0xdaa>
   12020:	ldr	r3, [pc, #364]	; (12190 <setlogin@@Base+0xed4>)
   12022:	ldr	r3, [r6, r3]
   12024:	str	r4, [r3, #0]
   12026:	movs	r4, #63	; 0x3f
   12028:	mov	r0, r4
   1202a:	add	sp, #20
   1202c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12030:	ldr	r3, [pc, #352]	; (12194 <setlogin@@Base+0xed8>)
   12032:	add	r3, pc
   12034:	ldr.w	fp, [r3, #8]
   12038:	cmp.w	fp, #4294967295	; 0xffffffff
   1203c:	beq.n	12044 <setlogin@@Base+0xd88>
   1203e:	ldr	r3, [r3, #4]
   12040:	adds	r3, #1
   12042:	beq.n	12072 <setlogin@@Base+0xdb6>
   12044:	ldr	r2, [pc, #336]	; (12198 <setlogin@@Base+0xedc>)
   12046:	cmp	r4, #45	; 0x2d
   12048:	add.w	r1, r7, #1
   1204c:	ldrb	r3, [r7, #2]
   1204e:	add	r2, pc
   12050:	str	r1, [r2, #0]
   12052:	bne.w	11f1a <setlogin@@Base+0xc5e>
   12056:	cmp	r3, #0
   12058:	beq.n	1210e <setlogin@@Base+0xe52>
   1205a:	adds	r7, #2
   1205c:	str	r7, [r2, #0]
   1205e:	cmp	r3, #0
   12060:	beq.n	11f90 <setlogin@@Base+0xcd4>
   12062:	movs	r4, #45	; 0x2d
   12064:	b.n	12012 <setlogin@@Base+0xd56>
   12066:	ldr	r0, [pc, #308]	; (1219c <setlogin@@Base+0xee0>)
   12068:	mov	r1, r4
   1206a:	add	r0, pc
   1206c:	bl	cce8 <error@@Base+0x8c>
   12070:	b.n	12020 <setlogin@@Base+0xd64>
   12072:	ldr	r3, [pc, #300]	; (121a0 <setlogin@@Base+0xee4>)
   12074:	add	r3, pc
   12076:	str.w	sl, [r3, #4]
   1207a:	cmp	r4, #0
   1207c:	beq.n	11f88 <setlogin@@Base+0xccc>
   1207e:	b.n	12044 <setlogin@@Base+0xd88>
   12080:	ldr.w	r0, [r9]
   12084:	movs	r1, #1
   12086:	str	r3, [sp, #8]
   12088:	bl	14d50 <strvisx@@Base+0xfdc>
   1208c:	ldr	r3, [sp, #8]
   1208e:	cbz	r3, 120b6 <setlogin@@Base+0xdfa>
   12090:	ldr	r3, [sp, #12]
   12092:	str	r7, [r3, #0]
   12094:	ldr	r3, [pc, #268]	; (121a4 <setlogin@@Base+0xee8>)
   12096:	ldr	r2, [pc, #272]	; (121a8 <setlogin@@Base+0xeec>)
   12098:	add	r3, pc
   1209a:	str.w	r0, [r9]
   1209e:	add	r2, pc
   120a0:	str	r2, [r3, #0]
   120a2:	b.n	11eb6 <setlogin@@Base+0xbfa>
   120a4:	adds	r7, #1
   120a6:	str	r7, [r3, #0]
   120a8:	b.n	11f90 <setlogin@@Base+0xcd4>
   120aa:	ldr.w	r0, [r9]
   120ae:	movs	r1, #1
   120b0:	bl	14d50 <strvisx@@Base+0xfdc>
   120b4:	movs	r4, #45	; 0x2d
   120b6:	ldrb.w	r3, [fp, #2]
   120ba:	cmp	r3, #58	; 0x3a
   120bc:	beq.n	12094 <setlogin@@Base+0xdd8>
   120be:	ldr	r3, [sp, #4]
   120c0:	str.w	r0, [r9]
   120c4:	cmp	r3, r0
   120c6:	ble.n	120d8 <setlogin@@Base+0xe1c>
   120c8:	ldr.w	r3, [r8, r0, lsl #2]
   120cc:	movs	r1, #1
   120ce:	ldr	r2, [sp, #12]
   120d0:	str	r3, [r2, #0]
   120d2:	bl	14d50 <strvisx@@Base+0xfdc>
   120d6:	b.n	12094 <setlogin@@Base+0xdd8>
   120d8:	ldr	r2, [pc, #208]	; (121ac <setlogin@@Base+0xef0>)
   120da:	ldr	r3, [pc, #176]	; (1218c <setlogin@@Base+0xed0>)
   120dc:	ldr	r1, [pc, #208]	; (121b0 <setlogin@@Base+0xef4>)
   120de:	add	r2, pc
   120e0:	add	r1, pc
   120e2:	str	r1, [r2, #0]
   120e4:	ldr	r3, [r6, r3]
   120e6:	ldr	r3, [r3, #0]
   120e8:	cbz	r3, 120fc <setlogin@@Base+0xe40>
   120ea:	ldrb	r3, [r5, #0]
   120ec:	cmp	r3, #58	; 0x3a
   120ee:	beq.n	120fc <setlogin@@Base+0xe40>
   120f0:	ldr	r0, [pc, #192]	; (121b4 <setlogin@@Base+0xef8>)
   120f2:	mov	r1, r4
   120f4:	add	r0, pc
   120f6:	adds	r0, #24
   120f8:	bl	cce8 <error@@Base+0x8c>
   120fc:	ldr	r3, [pc, #144]	; (12190 <setlogin@@Base+0xed4>)
   120fe:	ldr	r3, [r6, r3]
   12100:	str	r4, [r3, #0]
   12102:	ldrb	r3, [r5, #0]
   12104:	cmp	r3, #58	; 0x3a
   12106:	ite	eq
   12108:	moveq	r4, #58	; 0x3a
   1210a:	movne	r4, #63	; 0x3f
   1210c:	b.n	11eb6 <setlogin@@Base+0xbfa>
   1210e:	movs	r1, #1
   12110:	mov	r0, sl
   12112:	str	r2, [sp, #4]
   12114:	bl	14d50 <strvisx@@Base+0xfdc>
   12118:	ldr	r1, [pc, #156]	; (121b8 <setlogin@@Base+0xefc>)
   1211a:	ldr	r2, [sp, #4]
   1211c:	add	r1, pc
   1211e:	ldr	r3, [pc, #156]	; (121bc <setlogin@@Base+0xf00>)
   12120:	ldr	r4, [r1, #4]
   12122:	add	r3, pc
   12124:	str	r3, [r2, #0]
   12126:	adds	r3, r4, #1
   12128:	str.w	r0, [r9]
   1212c:	beq.w	11fc8 <setlogin@@Base+0xd0c>
   12130:	mov	r2, r0
   12132:	mov	r1, r4
   12134:	mov	r3, r8
   12136:	mov	r0, fp
   12138:	bl	11d5c <setlogin@@Base+0xaa0>
   1213c:	mov	r1, fp
   1213e:	b.n	11fec <setlogin@@Base+0xd30>
   12140:	ldrb	r2, [r2, #27]
   12142:	movs	r1, r0
   12144:	lsls	r0, r6, #11
   12146:	movs	r0, r0
   12148:	strh	r0, [r5, #14]
   1214a:	movs	r1, r0
   1214c:	lsls	r4, r1, #11
   1214e:	movs	r0, r0
   12150:	lsls	r4, r4, #10
   12152:	movs	r0, r0
   12154:	strh	r4, [r6, #12]
   12156:	movs	r1, r0
   12158:	strh	r6, [r5, #12]
   1215a:	movs	r1, r0
   1215c:	strh	r2, [r4, #12]
   1215e:	movs	r1, r0
   12160:	adds	r5, #96	; 0x60
   12162:	movs	r0, r0
   12164:	ldr	r4, [r1, #100]	; 0x64
   12166:	movs	r0, r0
   12168:	strh	r2, [r3, #10]
   1216a:	movs	r1, r0
   1216c:	strh	r2, [r7, #8]
   1216e:	movs	r1, r0
   12170:	strh	r6, [r4, #8]
   12172:	movs	r1, r0
   12174:	strh	r4, [r7, #4]
   12176:	movs	r1, r0
   12178:	strh	r4, [r7, #4]
   1217a:	movs	r1, r0
   1217c:	strh	r2, [r0, #4]
   1217e:	movs	r1, r0
   12180:	strh	r6, [r2, #4]
   12182:	movs	r1, r0
   12184:	adds	r4, #80	; 0x50
   12186:	movs	r0, r0
   12188:	strh	r0, [r4, #2]
   1218a:	movs	r1, r0
   1218c:	lsls	r4, r7, #9
   1218e:	movs	r0, r0
   12190:	lsls	r4, r6, #10
   12192:	movs	r0, r0
   12194:	ldrb	r6, [r7, #31]
   12196:	movs	r1, r0
   12198:	ldrb	r2, [r7, #31]
   1219a:	movs	r1, r0
   1219c:	ldr	r6, [r7, #72]	; 0x48
   1219e:	movs	r0, r0
   121a0:	ldrb	r4, [r7, #30]
   121a2:	movs	r1, r0
   121a4:	ldrb	r0, [r6, #30]
   121a6:	movs	r1, r0
   121a8:	adds	r3, #106	; 0x6a
   121aa:	movs	r0, r0
   121ac:	ldrb	r2, [r5, #29]
   121ae:	movs	r1, r0
   121b0:	adds	r3, #40	; 0x28
   121b2:	movs	r0, r0
   121b4:	ldr	r4, [r6, #64]	; 0x40
   121b6:	movs	r0, r0
   121b8:	ldrb	r4, [r2, #28]
   121ba:	movs	r1, r0
   121bc:	adds	r2, #230	; 0xe6
   121be:	movs	r0, r0
   121c0:	ldr	r0, [r0, #0]
   121c2:	ldr	r1, [r1, #0]
   121c4:	b.w	28d8 <strcmp@plt>
   121c8:	ldr	r0, [r0, #0]
   121ca:	ldr	r1, [r1, #0]
   121cc:	b.w	28d8 <strcmp@plt>
   121d0:	push	{r4, r5, r6, r7, lr}
   121d2:	sub.w	sp, sp, #4096	; 0x1000
   121d6:	ldr.w	lr, [pc, #120]	; 12250 <setlogin@@Base+0xf94>
   121da:	sub	sp, #12
   121dc:	ldr.w	ip, [pc, #116]	; 12254 <setlogin@@Base+0xf98>
   121e0:	add.w	r4, sp, #4096	; 0x1000
   121e4:	add	lr, pc
   121e6:	add	r7, sp, #4
   121e8:	adds	r4, #4
   121ea:	add.w	r6, r0, #8192	; 0x2000
   121ee:	ldr.w	ip, [lr, ip]
   121f2:	mov	r5, r7
   121f4:	ldr.w	ip, [ip]
   121f8:	str.w	ip, [r4]
   121fc:	mov.w	ip, #0
   12200:	ldrh.w	r4, [r0], #2
   12204:	uxtb	r4, r4
   12206:	strb.w	r4, [r5], #1
   1220a:	cbz	r4, 12232 <setlogin@@Base+0xf76>
   1220c:	cmp	r6, r0
   1220e:	bne.n	12200 <setlogin@@Base+0xf44>
   12210:	mov.w	r0, #4294967295	; 0xffffffff
   12214:	ldr	r1, [pc, #64]	; (12258 <setlogin@@Base+0xf9c>)
   12216:	add.w	r3, sp, #4096	; 0x1000
   1221a:	ldr	r2, [pc, #56]	; (12254 <setlogin@@Base+0xf98>)
   1221c:	adds	r3, #4
   1221e:	add	r1, pc
   12220:	ldr	r2, [r1, r2]
   12222:	ldr	r1, [r2, #0]
   12224:	ldr	r2, [r3, #0]
   12226:	eors	r1, r2
   12228:	bne.n	1224c <setlogin@@Base+0xf90>
   1222a:	add.w	sp, sp, #4096	; 0x1000
   1222e:	add	sp, #12
   12230:	pop	{r4, r5, r6, r7, pc}
   12232:	ldr	r2, [r2, #0]
   12234:	lsls	r2, r2, #25
   12236:	bpl.n	12240 <setlogin@@Base+0xf84>
   12238:	ldr	r3, [r3, #0]
   1223a:	mov	r0, r7
   1223c:	blx	r3
   1223e:	b.n	12214 <setlogin@@Base+0xf58>
   12240:	mov	r2, r1
   12242:	movs	r0, #3
   12244:	mov	r1, r7
   12246:	blx	27c8 <__lxstat64@plt>
   1224a:	b.n	12214 <setlogin@@Base+0xf58>
   1224c:	blx	2698 <__stack_chk_fail@plt>
   12250:	ldrb	r4, [r3, #12]
   12252:	movs	r1, r0
   12254:	lsls	r0, r0, #11
   12256:	movs	r0, r0
   12258:	ldrb	r2, [r4, #11]
   1225a:	movs	r1, r0
   1225c:	push	{r4, r5, r6, r7, lr}
   1225e:	sub.w	sp, sp, #4096	; 0x1000
   12262:	ldr.w	lr, [pc, #120]	; 122dc <setlogin@@Base+0x1020>
   12266:	sub	sp, #12
   12268:	ldr.w	ip, [pc, #116]	; 122e0 <setlogin@@Base+0x1024>
   1226c:	add.w	r4, sp, #4096	; 0x1000
   12270:	add	lr, pc
   12272:	add	r7, sp, #4
   12274:	adds	r4, #4
   12276:	add.w	r6, r0, #8192	; 0x2000
   1227a:	ldr.w	ip, [lr, ip]
   1227e:	mov	r5, r7
   12280:	ldr.w	ip, [ip]
   12284:	str.w	ip, [r4]
   12288:	mov.w	ip, #0
   1228c:	ldrh.w	r4, [r0], #2
   12290:	uxtb	r4, r4
   12292:	strb.w	r4, [r5], #1
   12296:	cbz	r4, 122be <setlogin@@Base+0x1002>
   12298:	cmp	r6, r0
   1229a:	bne.n	1228c <setlogin@@Base+0xfd0>
   1229c:	mov.w	r0, #4294967295	; 0xffffffff
   122a0:	ldr	r1, [pc, #64]	; (122e4 <setlogin@@Base+0x1028>)
   122a2:	add.w	r3, sp, #4096	; 0x1000
   122a6:	ldr	r2, [pc, #56]	; (122e0 <setlogin@@Base+0x1024>)
   122a8:	adds	r3, #4
   122aa:	add	r1, pc
   122ac:	ldr	r2, [r1, r2]
   122ae:	ldr	r1, [r2, #0]
   122b0:	ldr	r2, [r3, #0]
   122b2:	eors	r1, r2
   122b4:	bne.n	122d8 <setlogin@@Base+0x101c>
   122b6:	add.w	sp, sp, #4096	; 0x1000
   122ba:	add	sp, #12
   122bc:	pop	{r4, r5, r6, r7, pc}
   122be:	ldr	r2, [r2, #0]
   122c0:	lsls	r2, r2, #25
   122c2:	bpl.n	122cc <setlogin@@Base+0x1010>
   122c4:	ldr	r3, [r3, #0]
   122c6:	mov	r0, r7
   122c8:	blx	r3
   122ca:	b.n	122a0 <setlogin@@Base+0xfe4>
   122cc:	mov	r2, r1
   122ce:	movs	r0, #3
   122d0:	mov	r1, r7
   122d2:	blx	264c <__xstat64@plt>
   122d6:	b.n	122a0 <setlogin@@Base+0xfe4>
   122d8:	blx	2698 <__stack_chk_fail@plt>
   122dc:	ldrb	r0, [r2, #10]
   122de:	movs	r1, r0
   122e0:	lsls	r0, r0, #11
   122e2:	movs	r0, r0
   122e4:	ldrb	r6, [r2, #9]
   122e6:	movs	r1, r0
   122e8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122ec:	mov	r4, r1
   122ee:	ldr	r6, [r4, #8]
   122f0:	mvn.w	r7, #2147483648	; 0x80000000
   122f4:	ldr	r1, [r1, #0]
   122f6:	mvn.w	ip, #3221225472	; 0xc0000000
   122fa:	mov	sl, r3
   122fc:	ldr	r3, [r4, #16]
   122fe:	cmp	r6, r7
   12300:	it	cc
   12302:	cmpcc	r1, r7
   12304:	add.w	fp, r1, r6
   12308:	add.w	r9, fp, #2
   1230c:	ite	cs
   1230e:	movcs	r7, #1
   12310:	movcc	r7, #0
   12312:	cmp	r9, ip
   12314:	it	cs
   12316:	orrcs.w	r7, r7, #1
   1231a:	cmp	r7, #0
   1231c:	bne.w	1248a <setlogin@@Base+0x11ce>
   12320:	mov	r5, r0
   12322:	mov	r8, r2
   12324:	mov	r0, r3
   12326:	movs	r2, #4
   12328:	mov	r1, r9
   1232a:	blx	2320 <reallocarray@plt>
   1232e:	mov	r7, r0
   12330:	cmp	r0, #0
   12332:	beq.w	12486 <setlogin@@Base+0x11ca>
   12336:	ldr	r2, [r4, #16]
   12338:	cmp	r2, #0
   1233a:	beq.w	12446 <setlogin@@Base+0x118a>
   1233e:	ldr	r3, [r4, #12]
   12340:	str	r7, [r4, #16]
   12342:	lsls	r2, r3, #17
   12344:	bmi.n	123d4 <setlogin@@Base+0x1118>
   12346:	mov	r0, r5
   12348:	ldrh.w	r3, [r0], #2
   1234c:	cmp	r3, #0
   1234e:	bne.n	12348 <setlogin@@Base+0x108c>
   12350:	mov	r1, r5
   12352:	bl	14db4 <strvisx@@Base+0x1040>
   12356:	ldr.w	r3, [r8]
   1235a:	asrs	r6, r0, #1
   1235c:	add	r3, r6
   1235e:	str.w	r3, [r8]
   12362:	mov	r0, r6
   12364:	blx	2674 <malloc@plt>
   12368:	cmp	r0, #0
   1236a:	beq.w	12474 <setlogin@@Base+0x11b8>
   1236e:	adds	r1, r0, r6
   12370:	mov	r2, r0
   12372:	b.n	12380 <setlogin@@Base+0x10c4>
   12374:	ldrh.w	r3, [r5], #2
   12378:	uxtb	r3, r3
   1237a:	strb.w	r3, [r2], #1
   1237e:	cbz	r3, 12392 <setlogin@@Base+0x10d6>
   12380:	cmp	r2, r1
   12382:	bne.n	12374 <setlogin@@Base+0x10b8>
   12384:	blx	23f8 <free@plt+0x4>
   12388:	mov.w	r3, #4294967295	; 0xffffffff
   1238c:	mov	r0, r3
   1238e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12392:	ldr	r1, [r4, #0]
   12394:	ldr	r2, [r4, #8]
   12396:	adds	r5, r1, #1
   12398:	str	r5, [r4, #0]
   1239a:	add	r2, r1
   1239c:	str.w	r0, [r7, r2, lsl #2]
   123a0:	ldr	r2, [r4, #8]
   123a2:	ldr	r1, [r4, #0]
   123a4:	add	r2, r1
   123a6:	str.w	r3, [r7, r2, lsl #2]
   123aa:	ldr	r3, [r4, #12]
   123ac:	ands.w	r3, r3, #8192	; 0x2000
   123b0:	beq.n	1238c <setlogin@@Base+0x10d0>
   123b2:	ldr.w	r3, [r8]
   123b6:	add.w	r9, r3, r9, lsl #2
   123ba:	cmp.w	r9, #65536	; 0x10000
   123be:	bhi.w	124dc <setlogin@@Base+0x1220>
   123c2:	clz	r0, r0
   123c6:	lsrs	r0, r0, #5
   123c8:	bl	14f1c <strvisx@@Base+0x11a8>
   123cc:	mov	r3, r0
   123ce:	mov	r0, r3
   123d0:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   123d4:	ldr	r0, [r4, #20]
   123d6:	movs	r2, #4
   123d8:	mov	r1, r9
   123da:	blx	2320 <reallocarray@plt>
   123de:	mov	r6, r0
   123e0:	cmp	r0, #0
   123e2:	beq.n	12486 <setlogin@@Base+0x11ca>
   123e4:	ldr	r2, [r4, #20]
   123e6:	cmp	r2, #0
   123e8:	beq.n	12458 <setlogin@@Base+0x119c>
   123ea:	str	r6, [r4, #20]
   123ec:	cmp.w	sl, #0
   123f0:	beq.n	12468 <setlogin@@Base+0x11ac>
   123f2:	ldr.w	r3, [r8]
   123f6:	adds	r3, #104	; 0x68
   123f8:	str.w	r3, [r8]
   123fc:	ldr	r2, [r4, #12]
   123fe:	cmp.w	r3, #65536	; 0x10000
   12402:	ite	cc
   12404:	movcc	r3, #0
   12406:	movcs	r3, #1
   12408:	ands.w	r3, r3, r2, lsr #13
   1240c:	bne.n	124dc <setlogin@@Base+0x1220>
   1240e:	ldr	r3, [r4, #8]
   12410:	movs	r0, #104	; 0x68
   12412:	ldr	r2, [r4, #0]
   12414:	add.w	fp, r3, r2
   12418:	blx	2674 <malloc@plt>
   1241c:	str.w	r0, [r6, fp, lsl #2]
   12420:	cmp	r0, #0
   12422:	beq.n	12388 <setlogin@@Base+0x10cc>
   12424:	ldr	r0, [r4, #8]
   12426:	mov	r1, sl
   12428:	ldr	r3, [r4, #0]
   1242a:	movs	r2, #104	; 0x68
   1242c:	add	r3, r0
   1242e:	ldr.w	r0, [r6, r3, lsl #2]
   12432:	blx	24c4 <memcpy@plt>
   12436:	ldr	r3, [r4, #8]
   12438:	movs	r2, #0
   1243a:	ldr	r1, [r4, #0]
   1243c:	add	r3, r1
   1243e:	adds	r3, #1
   12440:	str.w	r2, [r6, r3, lsl #2]
   12444:	b.n	12346 <setlogin@@Base+0x108a>
   12446:	ldr	r3, [r4, #8]
   12448:	cmp	r3, #0
   1244a:	beq.w	1233e <setlogin@@Base+0x1082>
   1244e:	add.w	r3, r0, r3, lsl #2
   12452:	str.w	r2, [r3, #-4]!
   12456:	b.n	12452 <setlogin@@Base+0x1196>
   12458:	ldr	r3, [r4, #8]
   1245a:	cmp	r3, #0
   1245c:	beq.n	123ea <setlogin@@Base+0x112e>
   1245e:	add.w	r6, r0, r3, lsl #2
   12462:	str.w	r2, [r6, #-4]!
   12466:	b.n	12462 <setlogin@@Base+0x11a6>
   12468:	ldr	r3, [r4, #8]
   1246a:	ldr	r2, [r4, #0]
   1246c:	add	r3, r2
   1246e:	str.w	sl, [r6, r3, lsl #2]
   12472:	b.n	12436 <setlogin@@Base+0x117a>
   12474:	ldr	r3, [r4, #8]
   12476:	ldr	r2, [r4, #0]
   12478:	add	r3, r2
   1247a:	str.w	r0, [r7, r3, lsl #2]
   1247e:	ldr	r3, [r4, #12]
   12480:	lsls	r3, r3, #18
   12482:	bmi.n	123b2 <setlogin@@Base+0x10f6>
   12484:	b.n	12388 <setlogin@@Base+0x10cc>
   12486:	ldr	r6, [r4, #8]
   12488:	ldr	r3, [r4, #16]
   1248a:	cmp	fp, r6
   1248c:	bls.n	124c4 <setlogin@@Base+0x1208>
   1248e:	cbz	r3, 124be <setlogin@@Base+0x1202>
   12490:	ldr.w	r0, [r3, r6, lsl #2]
   12494:	lsls	r5, r6, #2
   12496:	cbz	r0, 124b6 <setlogin@@Base+0x11fa>
   12498:	blx	23f8 <free@plt+0x4>
   1249c:	ldr	r3, [r4, #12]
   1249e:	tst.w	r3, #16384	; 0x4000
   124a2:	ldr	r3, [r4, #16]
   124a4:	beq.n	124b6 <setlogin@@Base+0x11fa>
   124a6:	cbz	r3, 124be <setlogin@@Base+0x1202>
   124a8:	ldr	r2, [r3, r5]
   124aa:	cbz	r2, 124b6 <setlogin@@Base+0x11fa>
   124ac:	ldr	r3, [r4, #20]
   124ae:	ldr	r0, [r3, r5]
   124b0:	blx	23f8 <free@plt+0x4>
   124b4:	ldr	r3, [r4, #16]
   124b6:	adds	r6, #1
   124b8:	cmp	fp, r6
   124ba:	bne.n	1248e <setlogin@@Base+0x11d2>
   124bc:	b.n	124c4 <setlogin@@Base+0x1208>
   124be:	adds	r6, #1
   124c0:	cmp	fp, r6
   124c2:	bne.n	124b6 <setlogin@@Base+0x11fa>
   124c4:	mov	r0, r3
   124c6:	movs	r5, #0
   124c8:	blx	23f8 <free@plt+0x4>
   124cc:	ldr	r0, [r4, #20]
   124ce:	str	r5, [r4, #16]
   124d0:	blx	23f8 <free@plt+0x4>
   124d4:	mov.w	r3, #4294967295	; 0xffffffff
   124d8:	str	r5, [r4, #20]
   124da:	b.n	1238c <setlogin@@Base+0x10d0>
   124dc:	blx	2900 <__errno_location@plt>
   124e0:	movs	r2, #0
   124e2:	mov.w	r3, #4294967295	; 0xffffffff
   124e6:	str	r2, [r0, #0]
   124e8:	b.n	1238c <setlogin@@Base+0x10d0>
   124ea:	nop
   124ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124f0:	mov	r8, r2
   124f2:	ldr	r2, [pc, #420]	; (12698 <setlogin@@Base+0x13dc>)
   124f4:	sub	sp, #148	; 0x94
   124f6:	mov	r7, r3
   124f8:	ldr	r3, [pc, #416]	; (1269c <setlogin@@Base+0x13e0>)
   124fa:	add	r2, pc
   124fc:	ldr.w	ip, [sp, #184]	; 0xb8
   12500:	ldrd	sl, fp, [sp, #192]	; 0xc0
   12504:	mov	r9, r0
   12506:	ldr	r3, [r2, r3]
   12508:	ldrh.w	r4, [ip]
   1250c:	ldr	r3, [r3, #0]
   1250e:	str	r3, [sp, #140]	; 0x8c
   12510:	mov.w	r3, #0
   12514:	ldr	r3, [sp, #188]	; 0xbc
   12516:	str	r3, [sp, #28]
   12518:	cmp	r4, #0
   1251a:	beq.n	125aa <setlogin@@Base+0x12ee>
   1251c:	sub.w	lr, r7, #2
   12520:	movs	r2, #47	; 0x2f
   12522:	cmp	r4, #47	; 0x2f
   12524:	itt	eq
   12526:	moveq	r0, ip
   12528:	moveq	r3, r8
   1252a:	beq.n	1257a <setlogin@@Base+0x12be>
   1252c:	add.w	r5, ip, #2
   12530:	mov	r3, r8
   12532:	movs	r6, #0
   12534:	b.n	12548 <setlogin@@Base+0x128c>
   12536:	mov	r0, r5
   12538:	strh.w	r4, [r3, #-2]
   1253c:	ldrh.w	r4, [r5], #2
   12540:	cmp	r4, #0
   12542:	it	ne
   12544:	cmpne	r4, #47	; 0x2f
   12546:	beq.n	12572 <setlogin@@Base+0x12b6>
   12548:	tst.w	r4, #32768	; 0x8000
   1254c:	add.w	r3, r3, #2
   12550:	it	ne
   12552:	movne	r6, #1
   12554:	cmp	r3, r7
   12556:	bls.n	12536 <setlogin@@Base+0x127a>
   12558:	movs	r0, #1
   1255a:	ldr	r2, [pc, #324]	; (126a0 <setlogin@@Base+0x13e4>)
   1255c:	ldr	r3, [pc, #316]	; (1269c <setlogin@@Base+0x13e0>)
   1255e:	add	r2, pc
   12560:	ldr	r3, [r2, r3]
   12562:	ldr	r2, [r3, #0]
   12564:	ldr	r3, [sp, #140]	; 0x8c
   12566:	eors	r2, r3
   12568:	bne.w	1267e <setlogin@@Base+0x13c2>
   1256c:	add	sp, #148	; 0x94
   1256e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12572:	cmp	r6, #0
   12574:	bne.n	12628 <setlogin@@Base+0x136c>
   12576:	cmp	r4, #47	; 0x2f
   12578:	bne.n	1261c <setlogin@@Base+0x1360>
   1257a:	adds	r4, r3, #2
   1257c:	cmp	r7, r4
   1257e:	bcc.n	12558 <setlogin@@Base+0x129c>
   12580:	sub.w	r4, lr, r3
   12584:	subs	r5, r3, #2
   12586:	bic.w	r4, r4, #1
   1258a:	adds	r0, #2
   1258c:	add	r3, r4
   1258e:	b.n	12594 <setlogin@@Base+0x12d8>
   12590:	cmp	r5, r3
   12592:	beq.n	12558 <setlogin@@Base+0x129c>
   12594:	add.w	r8, r5, #4
   12598:	mov	ip, r0
   1259a:	strh.w	r2, [r5, #2]!
   1259e:	ldrh.w	r4, [r0], #2
   125a2:	cmp	r4, #47	; 0x2f
   125a4:	beq.n	12590 <setlogin@@Base+0x12d4>
   125a6:	cmp	r4, #0
   125a8:	bne.n	12522 <setlogin@@Base+0x1266>
   125aa:	movs	r4, #0
   125ac:	strh.w	r4, [r8]
   125b0:	ldr.w	r3, [sl, #12]
   125b4:	lsls	r2, r3, #18
   125b6:	bpl.n	125ca <setlogin@@Base+0x130e>
   125b8:	ldr.w	r3, [fp, #4]
   125bc:	cmp.w	r3, #2048	; 0x800
   125c0:	add.w	r2, r3, #1
   125c4:	str.w	r2, [fp, #4]
   125c8:	bcs.n	12682 <setlogin@@Base+0x13c6>
   125ca:	add	r4, sp, #32
   125cc:	add.w	r2, sl, #12
   125d0:	add.w	r3, sl, #40	; 0x28
   125d4:	mov	r0, r9
   125d6:	mov	r1, r4
   125d8:	str	r2, [sp, #28]
   125da:	bl	121d0 <setlogin@@Base+0xf14>
   125de:	cbnz	r0, 12646 <setlogin@@Base+0x138a>
   125e0:	ldr.w	r3, [sl, #12]
   125e4:	lsls	r3, r3, #28
   125e6:	bpl.n	12604 <setlogin@@Base+0x1348>
   125e8:	ldrh.w	r3, [r8, #-2]
   125ec:	cmp	r3, #47	; 0x2f
   125ee:	beq.n	12604 <setlogin@@Base+0x1348>
   125f0:	ldr	r3, [sp, #48]	; 0x30
   125f2:	ldr	r2, [sp, #28]
   125f4:	and.w	r3, r3, #61440	; 0xf000
   125f8:	cmp.w	r3, #16384	; 0x4000
   125fc:	beq.n	12666 <setlogin@@Base+0x13aa>
   125fe:	cmp.w	r3, #40960	; 0xa000
   12602:	beq.n	1264a <setlogin@@Base+0x138e>
   12604:	ldr.w	r1, [sl, #4]
   12608:	mov	r3, r4
   1260a:	mov	r2, fp
   1260c:	mov	r0, r9
   1260e:	adds	r1, #1
   12610:	str.w	r1, [sl, #4]
   12614:	mov	r1, sl
   12616:	bl	122e8 <setlogin@@Base+0x102c>
   1261a:	b.n	1255a <setlogin@@Base+0x129e>
   1261c:	mov	ip, r0
   1261e:	mov	r8, r3
   12620:	cmp	r4, #0
   12622:	bne.w	12522 <setlogin@@Base+0x1266>
   12626:	b.n	125aa <setlogin@@Base+0x12ee>
   12628:	ldr	r4, [sp, #28]
   1262a:	mov	r3, r7
   1262c:	mov	r2, r8
   1262e:	str.w	fp, [sp, #16]
   12632:	str.w	sl, [sp, #12]
   12636:	strd	r0, r4, [sp, #4]
   1263a:	mov	r0, r9
   1263c:	str.w	ip, [sp]
   12640:	bl	126a4 <setlogin@@Base+0x13e8>
   12644:	b.n	1255a <setlogin@@Base+0x129e>
   12646:	movs	r0, #0
   12648:	b.n	1255a <setlogin@@Base+0x129e>
   1264a:	add.w	r3, sl, #44	; 0x2c
   1264e:	mov	r1, r4
   12650:	mov	r0, r9
   12652:	bl	1225c <setlogin@@Base+0xfa0>
   12656:	cmp	r0, #0
   12658:	bne.n	12604 <setlogin@@Base+0x1348>
   1265a:	ldr	r3, [sp, #48]	; 0x30
   1265c:	and.w	r3, r3, #61440	; 0xf000
   12660:	cmp.w	r3, #16384	; 0x4000
   12664:	bne.n	12604 <setlogin@@Base+0x1348>
   12666:	add.w	r3, r8, #2
   1266a:	cmp	r7, r3
   1266c:	bcc.w	12558 <setlogin@@Base+0x129c>
   12670:	movs	r3, #47	; 0x2f
   12672:	strh.w	r3, [r8]
   12676:	movs	r3, #0
   12678:	strh.w	r3, [r8, #2]
   1267c:	b.n	12604 <setlogin@@Base+0x1348>
   1267e:	blx	2698 <__stack_chk_fail@plt>
   12682:	blx	2900 <__errno_location@plt>
   12686:	movs	r3, #47	; 0x2f
   12688:	str	r4, [r0, #0]
   1268a:	mov.w	r0, #4294967295	; 0xffffffff
   1268e:	strh.w	r4, [r8, #2]
   12692:	strh.w	r3, [r8]
   12696:	b.n	1255a <setlogin@@Base+0x129e>
   12698:	ldrb	r6, [r0, #0]
   1269a:	movs	r1, r0
   1269c:	lsls	r0, r0, #11
   1269e:	movs	r0, r0
   126a0:	strb	r2, [r4, #30]
   126a2:	movs	r1, r0
   126a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126a8:	mov	r6, r0
   126aa:	vpush	{d8}
   126ae:	mov	fp, r3
   126b0:	ldr	r4, [pc, #856]	; (12a0c <setlogin@@Base+0x1750>)
   126b2:	cmp	r2, fp
   126b4:	vmov	s17, r1
   126b8:	ldr	r1, [pc, #852]	; (12a10 <setlogin@@Base+0x1754>)
   126ba:	sub.w	sp, sp, #4160	; 0x1040
   126be:	add	r4, pc
   126c0:	sub	sp, #12
   126c2:	it	hi
   126c4:	movhi	r4, #1
   126c6:	add.w	r3, sp, #4160	; 0x1040
   126ca:	str	r0, [sp, #52]	; 0x34
   126cc:	add.w	r3, r3, #4
   126d0:	ldr	r0, [pc, #832]	; (12a14 <setlogin@@Base+0x1758>)
   126d2:	str	r2, [sp, #24]
   126d4:	add	r0, pc
   126d6:	ldr	r1, [r0, r1]
   126d8:	ldr	r1, [r1, #0]
   126da:	str	r1, [r3, #0]
   126dc:	mov.w	r1, #0
   126e0:	add.w	r3, sp, #4192	; 0x1060
   126e4:	add.w	r3, r3, #24
   126e8:	ldr	r1, [r3, #0]
   126ea:	add.w	r3, sp, #4192	; 0x1060
   126ee:	add.w	r3, r3, #28
   126f2:	ldr.w	sl, [r3]
   126f6:	add.w	r3, sp, #4224	; 0x1080
   126fa:	str	r1, [sp, #36]	; 0x24
   126fc:	ldr	r1, [r3, #0]
   126fe:	add.w	r3, sp, #4224	; 0x1080
   12702:	add.w	r3, r3, #4
   12706:	str	r1, [sp, #56]	; 0x38
   12708:	ldr	r1, [r3, #0]
   1270a:	add.w	r3, sp, #4224	; 0x1080
   1270e:	add.w	r3, r3, #8
   12712:	str	r1, [sp, #20]
   12714:	ldr	r1, [r3, #0]
   12716:	str	r1, [sp, #48]	; 0x30
   12718:	bls.n	12742 <setlogin@@Base+0x1486>
   1271a:	ldr	r1, [pc, #764]	; (12a18 <setlogin@@Base+0x175c>)
   1271c:	add.w	r3, sp, #4160	; 0x1040
   12720:	ldr	r2, [pc, #748]	; (12a10 <setlogin@@Base+0x1754>)
   12722:	adds	r3, #4
   12724:	add	r1, pc
   12726:	ldr	r2, [r1, r2]
   12728:	ldr	r1, [r2, #0]
   1272a:	ldr	r2, [r3, #0]
   1272c:	eors	r1, r2
   1272e:	bne.w	12a08 <setlogin@@Base+0x174c>
   12732:	mov	r0, r4
   12734:	add.w	sp, sp, #4160	; 0x1040
   12738:	add	sp, #12
   1273a:	vpop	{d8}
   1273e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12742:	movs	r5, #0
   12744:	strh	r5, [r2, #0]
   12746:	blx	2900 <__errno_location@plt>
   1274a:	str	r5, [r0, #0]
   1274c:	add	r5, sp, #68	; 0x44
   1274e:	ldrh	r3, [r6, #0]
   12750:	str	r0, [sp, #60]	; 0x3c
   12752:	cbz	r3, 1279c <setlogin@@Base+0x14e0>
   12754:	add.w	r0, r6, #8160	; 0x1fe0
   12758:	mov	r2, r6
   1275a:	adds	r0, #30
   1275c:	mov	r1, r5
   1275e:	b.n	12764 <setlogin@@Base+0x14a8>
   12760:	ldrh.w	r3, [r2, #2]!
   12764:	uxtb	r3, r3
   12766:	strb.w	r3, [r1], #1
   1276a:	cbz	r3, 127aa <setlogin@@Base+0x14ee>
   1276c:	cmp	r2, r0
   1276e:	bne.n	12760 <setlogin@@Base+0x14a4>
   12770:	ldr	r3, [sp, #20]
   12772:	ldr	r4, [r3, #24]
   12774:	cmp	r4, #0
   12776:	beq.w	129ec <setlogin@@Base+0x1730>
   1277a:	ldr	r0, [sp, #52]	; 0x34
   1277c:	mov	r2, r5
   1277e:	add.w	r1, r0, #8192	; 0x2000
   12782:	ldrh.w	r3, [r0], #2
   12786:	uxtb	r3, r3
   12788:	strb.w	r3, [r2], #1
   1278c:	cmp	r3, #0
   1278e:	beq.w	129d4 <setlogin@@Base+0x1718>
   12792:	cmp	r0, r1
   12794:	bne.n	12782 <setlogin@@Base+0x14c6>
   12796:	mvn.w	r4, #1
   1279a:	b.n	1271a <setlogin@@Base+0x145e>
   1279c:	ldr	r1, [pc, #636]	; (12a1c <setlogin@@Base+0x1760>)
   1279e:	mov.w	r2, #4096	; 0x1000
   127a2:	mov	r0, r5
   127a4:	add	r1, pc
   127a6:	bl	13518 <strlcpy@@Base>
   127aa:	ldr	r2, [sp, #20]
   127ac:	ldr	r3, [r2, #12]
   127ae:	lsls	r6, r3, #25
   127b0:	bpl.n	12844 <setlogin@@Base+0x1588>
   127b2:	ldr	r3, [r2, #36]	; 0x24
   127b4:	mov	r0, r5
   127b6:	blx	r3
   127b8:	vmov	s16, r0
   127bc:	vmov	r3, s16
   127c0:	cmp	r3, #0
   127c2:	beq.n	12770 <setlogin@@Base+0x14b4>
   127c4:	ldr	r2, [sp, #20]
   127c6:	ldr	r3, [r2, #12]
   127c8:	lsls	r1, r3, #25
   127ca:	bmi.n	12850 <setlogin@@Base+0x1594>
   127cc:	ldr	r3, [pc, #592]	; (12a20 <setlogin@@Base+0x1764>)
   127ce:	ldr	r3, [r4, r3]
   127d0:	str	r3, [sp, #40]	; 0x28
   127d2:	ldr	r3, [pc, #592]	; (12a24 <setlogin@@Base+0x1768>)
   127d4:	str.w	fp, [sp, #28]
   127d8:	add	r3, pc
   127da:	str	r3, [sp, #44]	; 0x2c
   127dc:	vmov	r0, s16
   127e0:	ldr	r3, [sp, #40]	; 0x28
   127e2:	blx	r3
   127e4:	cmp	r0, #0
   127e6:	beq.n	128c4 <setlogin@@Base+0x1608>
   127e8:	ldr	r3, [sp, #20]
   127ea:	ldr	r3, [r3, #12]
   127ec:	lsls	r2, r3, #18
   127ee:	bpl.n	12802 <setlogin@@Base+0x1546>
   127f0:	ldr	r1, [sp, #48]	; 0x30
   127f2:	ldr	r3, [r1, #8]
   127f4:	cmp.w	r3, #16384	; 0x4000
   127f8:	add.w	r2, r3, #1
   127fc:	str	r2, [r1, #8]
   127fe:	bcs.w	129f0 <setlogin@@Base+0x1734>
   12802:	ldrb	r3, [r0, #19]
   12804:	cmp	r3, #46	; 0x2e
   12806:	bne.n	12810 <setlogin@@Base+0x1554>
   12808:	ldr	r3, [sp, #36]	; 0x24
   1280a:	ldrh	r3, [r3, #0]
   1280c:	cmp	r3, #46	; 0x2e
   1280e:	bne.n	127dc <setlogin@@Base+0x1520>
   12810:	ldrd	r8, r2, [sp, #24]
   12814:	adds	r0, #19
   12816:	b.n	12826 <setlogin@@Base+0x156a>
   12818:	ldrb.w	r6, [r0], #1
   1281c:	mov	r3, r8
   1281e:	strh.w	r6, [r3], #2
   12822:	cbz	r6, 12856 <setlogin@@Base+0x159a>
   12824:	mov	r8, r3
   12826:	cmp	r8, r2
   12828:	bcc.n	12818 <setlogin@@Base+0x155c>
   1282a:	mov	r2, r8
   1282c:	movs	r4, #1
   1282e:	movs	r3, #0
   12830:	strh	r3, [r2, #0]
   12832:	ldr	r2, [sp, #20]
   12834:	ldr	r3, [r2, #12]
   12836:	lsls	r3, r3, #25
   12838:	bpl.n	128ce <setlogin@@Base+0x1612>
   1283a:	vmov	r0, s16
   1283e:	ldr	r3, [r2, #28]
   12840:	blx	r3
   12842:	b.n	1271a <setlogin@@Base+0x145e>
   12844:	mov	r0, r5
   12846:	blx	226c <opendir@plt>
   1284a:	vmov	s16, r0
   1284e:	b.n	127bc <setlogin@@Base+0x1500>
   12850:	ldr	r3, [r2, #32]
   12852:	str	r3, [sp, #40]	; 0x28
   12854:	b.n	127d2 <setlogin@@Base+0x1516>
   12856:	ldr	r2, [sp, #28]
   12858:	cmp	r2, r3
   1285a:	bls.w	12a04 <setlogin@@Base+0x1748>
   1285e:	ldr	r1, [sp, #36]	; 0x24
   12860:	mov	fp, r6
   12862:	ldr	r5, [sp, #24]
   12864:	cmp	sl, r1
   12866:	bhi.n	12878 <setlogin@@Base+0x15bc>
   12868:	ldrh	r3, [r5, #0]
   1286a:	cbz	r3, 128a2 <setlogin@@Base+0x15e6>
   1286c:	cmp	r6, #0
   1286e:	beq.n	128e2 <setlogin@@Base+0x1626>
   12870:	mov	r1, fp
   12872:	cmp	sl, r1
   12874:	mov	r5, r6
   12876:	bls.n	12868 <setlogin@@Base+0x15ac>
   12878:	mov	r4, r1
   1287a:	movw	r2, #32831	; 0x803f
   1287e:	ldrh.w	r3, [r4], #2
   12882:	cmp	r3, r2
   12884:	beq.n	128d8 <setlogin@@Base+0x161c>
   12886:	movw	r2, #32859	; 0x805b
   1288a:	cmp	r3, r2
   1288c:	beq.n	12912 <setlogin@@Base+0x1656>
   1288e:	movw	r2, #32810	; 0x802a
   12892:	cmp	r3, r2
   12894:	beq.n	128ea <setlogin@@Base+0x162e>
   12896:	ldrh	r2, [r5, #0]
   12898:	cmp	r2, r3
   1289a:	bne.n	1286c <setlogin@@Base+0x15b0>
   1289c:	adds	r5, #2
   1289e:	mov	r1, r4
   128a0:	b.n	12864 <setlogin@@Base+0x15a8>
   128a2:	ldr	r3, [sp, #48]	; 0x30
   128a4:	mov	r2, r8
   128a6:	ldr	r1, [sp, #56]	; 0x38
   128a8:	ldr	r0, [sp, #52]	; 0x34
   128aa:	str	r3, [sp, #12]
   128ac:	ldr	r3, [sp, #20]
   128ae:	str	r1, [sp, #4]
   128b0:	str.w	sl, [sp]
   128b4:	str	r3, [sp, #8]
   128b6:	vmov	r1, s17
   128ba:	ldr	r3, [sp, #28]
   128bc:	bl	124ec <setlogin@@Base+0x1230>
   128c0:	cmp	r0, #0
   128c2:	beq.n	127dc <setlogin@@Base+0x1520>
   128c4:	ldr	r2, [sp, #20]
   128c6:	mov	r4, r0
   128c8:	ldr	r3, [r2, #12]
   128ca:	lsls	r3, r3, #25
   128cc:	bmi.n	1283a <setlogin@@Base+0x157e>
   128ce:	vmov	r0, s16
   128d2:	blx	2604 <closedir@plt>
   128d6:	b.n	1271a <setlogin@@Base+0x145e>
   128d8:	ldrh	r3, [r5, #0]
   128da:	cmp	r3, #0
   128dc:	bne.n	1289c <setlogin@@Base+0x15e0>
   128de:	cmp	r6, #0
   128e0:	bne.n	12870 <setlogin@@Base+0x15b4>
   128e2:	ldr	r2, [sp, #24]
   128e4:	movs	r3, #0
   128e6:	strh	r3, [r2, #0]
   128e8:	b.n	127dc <setlogin@@Base+0x1520>
   128ea:	cmp	sl, r4
   128ec:	bhi.n	128f6 <setlogin@@Base+0x163a>
   128ee:	b.n	129d0 <setlogin@@Base+0x1714>
   128f0:	cmp	sl, r4
   128f2:	mov	r1, r4
   128f4:	bls.n	12900 <setlogin@@Base+0x1644>
   128f6:	mov	r1, r4
   128f8:	adds	r4, #2
   128fa:	ldrh	r2, [r1, #0]
   128fc:	cmp	r2, r3
   128fe:	beq.n	128f0 <setlogin@@Base+0x1634>
   12900:	cmp	sl, r1
   12902:	beq.n	128a2 <setlogin@@Base+0x15e6>
   12904:	ldrh	r3, [r5, #0]
   12906:	cmp	r3, #0
   12908:	beq.n	128e2 <setlogin@@Base+0x1626>
   1290a:	adds	r6, r5, #2
   1290c:	sub.w	fp, r1, #2
   12910:	b.n	12864 <setlogin@@Base+0x15a8>
   12912:	mov	r3, r5
   12914:	ldrh.w	r7, [r3], #2
   12918:	str	r3, [sp, #16]
   1291a:	cmp	r7, #0
   1291c:	beq.n	1286c <setlogin@@Base+0x15b0>
   1291e:	ldrh	r5, [r1, #2]
   12920:	movw	r3, #32801	; 0x8021
   12924:	cmp	r5, r3
   12926:	ite	eq
   12928:	moveq	r3, #1
   1292a:	movne	r3, #0
   1292c:	str	r3, [sp, #32]
   1292e:	beq.n	129c0 <setlogin@@Base+0x1704>
   12930:	movw	r3, #32861	; 0x805d
   12934:	cmp	r5, r3
   12936:	add.w	r1, r1, #4
   1293a:	beq.n	1286c <setlogin@@Base+0x15b0>
   1293c:	mov.w	r9, #0
   12940:	movw	r2, #32826	; 0x803a
   12944:	movw	r3, #32813	; 0x802d
   12948:	b.n	12968 <setlogin@@Base+0x16ac>
   1294a:	ldrh	r0, [r1, #0]
   1294c:	cmp	r0, r3
   1294e:	beq.n	12996 <setlogin@@Base+0x16da>
   12950:	cmp	r7, r5
   12952:	mov	r5, r0
   12954:	movw	r0, #32861	; 0x805d
   12958:	mov	r4, r1
   1295a:	it	eq
   1295c:	moveq.w	r9, #1
   12960:	cmp	r5, r0
   12962:	add.w	r1, r4, #2
   12966:	beq.n	129b4 <setlogin@@Base+0x16f8>
   12968:	cmp	r5, r2
   1296a:	bne.n	1294a <setlogin@@Base+0x168e>
   1296c:	ldrh	r1, [r4, #2]
   1296e:	cmp	r1, #11
   12970:	bhi.n	1298e <setlogin@@Base+0x16d2>
   12972:	ldr	r3, [sp, #44]	; 0x2c
   12974:	mov	r0, r7
   12976:	add.w	r1, r3, r1, lsl #3
   1297a:	ldr	r1, [r1, #4]
   1297c:	blx	r1
   1297e:	movw	r3, #32813	; 0x802d
   12982:	movw	r2, #32826	; 0x803a
   12986:	cmp	r0, #0
   12988:	it	ne
   1298a:	movne.w	r9, #1
   1298e:	ldrh	r0, [r4, #4]
   12990:	adds	r1, r4, #4
   12992:	cmp	r0, r3
   12994:	bne.n	12950 <setlogin@@Base+0x1694>
   12996:	cmp	r7, r5
   12998:	bcc.n	129a4 <setlogin@@Base+0x16e8>
   1299a:	ldrh	r0, [r1, #2]
   1299c:	cmp	r0, r7
   1299e:	it	cs
   129a0:	movcs.w	r9, #1
   129a4:	ldrh	r5, [r1, #4]
   129a6:	movw	r0, #32861	; 0x805d
   129aa:	adds	r4, r1, #4
   129ac:	cmp	r5, r0
   129ae:	add.w	r1, r4, #2
   129b2:	bne.n	12968 <setlogin@@Base+0x16ac>
   129b4:	ldr	r3, [sp, #32]
   129b6:	cmp	r3, r9
   129b8:	beq.w	1286c <setlogin@@Base+0x15b0>
   129bc:	ldr	r5, [sp, #16]
   129be:	b.n	12864 <setlogin@@Base+0x15a8>
   129c0:	ldrh	r5, [r1, #4]
   129c2:	movw	r3, #32861	; 0x805d
   129c6:	adds	r4, r1, #4
   129c8:	adds	r1, #6
   129ca:	cmp	r5, r3
   129cc:	bne.n	1293c <setlogin@@Base+0x1680>
   129ce:	b.n	129bc <setlogin@@Base+0x1700>
   129d0:	mov	r1, r4
   129d2:	b.n	12900 <setlogin@@Base+0x1644>
   129d4:	ldr	r3, [sp, #60]	; 0x3c
   129d6:	mov	r0, r5
   129d8:	ldr	r1, [r3, #0]
   129da:	blx	r4
   129dc:	cmp	r0, #0
   129de:	bne.w	12796 <setlogin@@Base+0x14da>
   129e2:	ldr	r3, [sp, #20]
   129e4:	ldr	r3, [r3, #12]
   129e6:	lsls	r0, r3, #29
   129e8:	bmi.w	12796 <setlogin@@Base+0x14da>
   129ec:	movs	r4, #0
   129ee:	b.n	1271a <setlogin@@Base+0x145e>
   129f0:	ldr	r2, [sp, #60]	; 0x3c
   129f2:	movs	r3, #0
   129f4:	ldr	r1, [sp, #24]
   129f6:	mov.w	r4, #4294967295	; 0xffffffff
   129fa:	str	r3, [r2, #0]
   129fc:	movs	r2, #47	; 0x2f
   129fe:	strh	r3, [r1, #2]
   12a00:	strh	r2, [r1, #0]
   12a02:	b.n	12832 <setlogin@@Base+0x1576>
   12a04:	mov	r2, r3
   12a06:	b.n	1282c <setlogin@@Base+0x1570>
   12a08:	blx	2698 <__stack_chk_fail@plt>
   12a0c:	strb	r2, [r0, #25]
   12a0e:	movs	r1, r0
   12a10:	lsls	r0, r0, #11
   12a12:	movs	r0, r0
   12a14:	strb	r4, [r5, #24]
   12a16:	movs	r1, r0
   12a18:	strb	r4, [r3, #23]
   12a1a:	movs	r1, r0
   12a1c:	subs	r4, #76	; 0x4c
   12a1e:	movs	r0, r0
   12a20:	lsls	r0, r5, #11
   12a22:	movs	r0, r0
   12a24:	ldrb	r4, [r6, #1]
   12a26:	movs	r1, r0
   12a28:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a2c:	mov	r5, r0
   12a2e:	ldr.w	r4, [pc, #1088]	; 12e70 <setlogin@@Base+0x1bb4>
   12a32:	sub.w	sp, sp, #16384	; 0x4000
   12a36:	mov	r7, r1
   12a38:	ldr.w	r1, [pc, #1080]	; 12e74 <setlogin@@Base+0x1bb8>
   12a3c:	sub	sp, #60	; 0x3c
   12a3e:	add	r4, pc
   12a40:	ldrh.w	r3, [r5], #2
   12a44:	str	r2, [sp, #28]
   12a46:	add.w	r2, sp, #16384	; 0x4000
   12a4a:	str	r0, [sp, #20]
   12a4c:	cmp	r3, #126	; 0x7e
   12a4e:	ldr	r1, [r4, r1]
   12a50:	add.w	r2, r2, #52	; 0x34
   12a54:	ldr	r1, [r1, #0]
   12a56:	str	r1, [r2, #0]
   12a58:	mov.w	r1, #0
   12a5c:	bne.n	12ada <setlogin@@Base+0x181e>
   12a5e:	ldr	r2, [r7, #12]
   12a60:	lsls	r1, r2, #20
   12a62:	bpl.w	12ddc <setlogin@@Base+0x1b20>
   12a66:	add.w	sl, sp, #52	; 0x34
   12a6a:	add.w	r0, r0, #16320	; 0x3fc0
   12a6e:	add	r3, sp, #56	; 0x38
   12a70:	adds	r0, #62	; 0x3e
   12a72:	str	r3, [sp, #16]
   12a74:	mov	r1, sl
   12a76:	mov	r3, r5
   12a78:	b.n	12a84 <setlogin@@Base+0x17c8>
   12a7a:	cmp	r0, r3
   12a7c:	mov	r4, r3
   12a7e:	strb.w	r2, [r1], #1
   12a82:	beq.n	12a92 <setlogin@@Base+0x17d6>
   12a84:	mov	r4, r3
   12a86:	ldrh.w	r2, [r3], #2
   12a8a:	cmp	r2, #47	; 0x2f
   12a8c:	it	ne
   12a8e:	cmpne	r2, #0
   12a90:	bne.n	12a7a <setlogin@@Base+0x17be>
   12a92:	movs	r3, #0
   12a94:	strb	r3, [r1, #0]
   12a96:	ldr	r3, [sp, #16]
   12a98:	ldrb.w	r3, [r3, #-4]
   12a9c:	cmp	r3, #0
   12a9e:	beq.w	12dec <setlogin@@Base+0x1b30>
   12aa2:	mov	r0, sl
   12aa4:	blx	2918 <getpwnam@plt>
   12aa8:	cmp	r0, #0
   12aaa:	beq.w	12e08 <setlogin@@Base+0x1b4c>
   12aae:	ldr	r0, [r0, #20]
   12ab0:	subs	r2, r0, #1
   12ab2:	addw	r0, r0, #4094	; 0xffe
   12ab6:	mov	r3, sl
   12ab8:	ldrb.w	r1, [r2, #1]!
   12abc:	cmp	r1, #0
   12abe:	beq.w	12e22 <setlogin@@Base+0x1b66>
   12ac2:	cmp	r2, r0
   12ac4:	strh.w	r1, [r3], #2
   12ac8:	bne.n	12ab8 <setlogin@@Base+0x17fc>
   12aca:	ldr	r1, [sp, #16]
   12acc:	movs	r2, #0
   12ace:	mov	r4, sl
   12ad0:	strh	r2, [r3, #0]
   12ad2:	subs	r5, r1, #2
   12ad4:	ldrh.w	r3, [r1, #-4]
   12ad8:	b.n	12ae4 <setlogin@@Base+0x1828>
   12ada:	ldr	r4, [sp, #20]
   12adc:	add.w	sl, sp, #52	; 0x34
   12ae0:	add	r2, sp, #56	; 0x38
   12ae2:	str	r2, [sp, #16]
   12ae4:	ldr	r2, [r7, #0]
   12ae6:	str	r2, [sp, #24]
   12ae8:	cmp	r3, #0
   12aea:	beq.w	12e4e <setlogin@@Base+0x1b92>
   12aee:	ldr	r1, [pc, #904]	; (12e78 <setlogin@@Base+0x1bbc>)
   12af0:	mov	r2, sl
   12af2:	ldr.w	r9, [pc, #904]	; 12e7c <setlogin@@Base+0x1bc0>
   12af6:	movw	r8, #32826	; 0x803a
   12afa:	add	r1, pc
   12afc:	add	r9, pc
   12afe:	ldr	r1, [r1, #0]
   12b00:	str	r1, [sp, #32]
   12b02:	b.n	12b16 <setlogin@@Base+0x185a>
   12b04:	cmp	r3, #42	; 0x2a
   12b06:	beq.n	12baa <setlogin@@Base+0x18ee>
   12b08:	mov	r4, r5
   12b0a:	adds	r5, #2
   12b0c:	uxtb	r3, r3
   12b0e:	strh.w	r3, [r2], #2
   12b12:	ldrh	r3, [r4, #0]
   12b14:	cbz	r3, 12b40 <setlogin@@Base+0x1884>
   12b16:	cmp	r3, #63	; 0x3f
   12b18:	beq.n	12b94 <setlogin@@Base+0x18d8>
   12b1a:	cmp	r3, #91	; 0x5b
   12b1c:	bne.n	12b04 <setlogin@@Base+0x1848>
   12b1e:	ldrh	r6, [r4, #2]
   12b20:	adds	r1, r2, #2
   12b22:	cmp	r6, #33	; 0x21
   12b24:	beq.n	12bd8 <setlogin@@Base+0x191c>
   12b26:	mov	r4, r5
   12b28:	ldrh.w	r0, [r4], #2
   12b2c:	cmp	r0, #0
   12b2e:	bne.n	12be8 <setlogin@@Base+0x192c>
   12b30:	mov	r0, r4
   12b32:	mov	r4, r5
   12b34:	strh	r3, [r2, #0]
   12b36:	mov	r5, r0
   12b38:	ldrh	r3, [r4, #0]
   12b3a:	mov	r2, r1
   12b3c:	cmp	r3, #0
   12b3e:	bne.n	12b16 <setlogin@@Base+0x185a>
   12b40:	movs	r3, #0
   12b42:	strh	r3, [r2, #0]
   12b44:	ldr	r3, [sp, #16]
   12b46:	ldrh.w	r3, [r3, #-4]
   12b4a:	cmp	r3, #0
   12b4c:	bne.w	12d1a <setlogin@@Base+0x1a5e>
   12b50:	ldr	r3, [r7, #12]
   12b52:	lsls	r2, r3, #27
   12b54:	bmi.n	12b62 <setlogin@@Base+0x18a6>
   12b56:	and.w	r3, r3, #768	; 0x300
   12b5a:	cmp.w	r3, #512	; 0x200
   12b5e:	bne.w	12e52 <setlogin@@Base+0x1b96>
   12b62:	ldr	r2, [sp, #28]
   12b64:	mov	r1, r7
   12b66:	ldr	r0, [sp, #20]
   12b68:	movs	r3, #0
   12b6a:	bl	122e8 <setlogin@@Base+0x102c>
   12b6e:	mov	r8, r0
   12b70:	ldr	r1, [pc, #780]	; (12e80 <setlogin@@Base+0x1bc4>)
   12b72:	add.w	r3, sp, #16384	; 0x4000
   12b76:	ldr	r2, [pc, #764]	; (12e74 <setlogin@@Base+0x1bb8>)
   12b78:	adds	r3, #52	; 0x34
   12b7a:	add	r1, pc
   12b7c:	ldr	r2, [r1, r2]
   12b7e:	ldr	r1, [r2, #0]
   12b80:	ldr	r2, [r3, #0]
   12b82:	eors	r1, r2
   12b84:	bne.w	12e66 <setlogin@@Base+0x1baa>
   12b88:	mov	r0, r8
   12b8a:	add.w	sp, sp, #16384	; 0x4000
   12b8e:	add	sp, #60	; 0x3c
   12b90:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12b94:	ldr	r3, [r7, #12]
   12b96:	movw	r1, #32831	; 0x803f
   12b9a:	mov	r4, r5
   12b9c:	strh.w	r1, [r2], #2
   12ba0:	orr.w	r3, r3, #256	; 0x100
   12ba4:	adds	r5, #2
   12ba6:	str	r3, [r7, #12]
   12ba8:	b.n	12b12 <setlogin@@Base+0x1856>
   12baa:	ldr	r3, [r7, #12]
   12bac:	cmp	r2, sl
   12bae:	add.w	r1, r5, #2
   12bb2:	mov	r4, r5
   12bb4:	orr.w	r3, r3, #256	; 0x100
   12bb8:	str	r3, [r7, #12]
   12bba:	beq.n	12bcc <setlogin@@Base+0x1910>
   12bbc:	ldrh.w	r0, [r2, #-2]
   12bc0:	movw	r3, #32810	; 0x802a
   12bc4:	cmp	r0, r3
   12bc6:	it	eq
   12bc8:	moveq	r5, r1
   12bca:	beq.n	12b12 <setlogin@@Base+0x1856>
   12bcc:	movw	r3, #32810	; 0x802a
   12bd0:	mov	r5, r1
   12bd2:	strh.w	r3, [r2], #2
   12bd6:	b.n	12b12 <setlogin@@Base+0x1856>
   12bd8:	ldrh	r0, [r4, #4]
   12bda:	adds	r5, r4, #4
   12bdc:	cbnz	r0, 12be6 <setlogin@@Base+0x192a>
   12bde:	strh	r3, [r2, #0]
   12be0:	subs	r4, r5, #2
   12be2:	mov	r2, r1
   12be4:	b.n	12b12 <setlogin@@Base+0x1856>
   12be6:	adds	r4, #6
   12be8:	subs	r0, r4, #2
   12bea:	b.n	12bf2 <setlogin@@Base+0x1936>
   12bec:	cmp	r3, #0
   12bee:	beq.w	12d04 <setlogin@@Base+0x1a48>
   12bf2:	ldrh.w	r3, [r0, #2]!
   12bf6:	cmp	r3, #93	; 0x5d
   12bf8:	bne.n	12bec <setlogin@@Base+0x1930>
   12bfa:	cmp	r6, #33	; 0x21
   12bfc:	movw	r3, #32859	; 0x805b
   12c00:	strh	r3, [r2, #0]
   12c02:	beq.w	12dd2 <setlogin@@Base+0x1b16>
   12c06:	ldr	r2, [r7, #12]
   12c08:	ldrh	r3, [r5, #0]
   12c0a:	str	r2, [sp, #36]	; 0x24
   12c0c:	and.w	r2, r2, #16
   12c10:	strd	r2, r7, [sp, #40]	; 0x28
   12c14:	ldr	r7, [sp, #32]
   12c16:	b.n	12c30 <setlogin@@Base+0x1974>
   12c18:	uxtb	r3, r3
   12c1a:	mov	r5, r1
   12c1c:	mov	r1, r5
   12c1e:	strh.w	r3, [r1], #2
   12c22:	ldrh	r3, [r4, #0]
   12c24:	cmp	r3, #45	; 0x2d
   12c26:	beq.n	12ca4 <setlogin@@Base+0x19e8>
   12c28:	cmp	r3, #93	; 0x5d
   12c2a:	add.w	r4, r4, #2
   12c2e:	beq.n	12cc0 <setlogin@@Base+0x1a04>
   12c30:	cmp	r3, #91	; 0x5b
   12c32:	bne.n	12c18 <setlogin@@Base+0x195c>
   12c34:	ldrh	r2, [r4, #0]
   12c36:	mov	r5, r1
   12c38:	cmp	r2, #58	; 0x3a
   12c3a:	bne.n	12c1c <setlogin@@Base+0x1960>
   12c3c:	adds	r1, r4, #2
   12c3e:	mov	r3, r1
   12c40:	b.n	12c44 <setlogin@@Base+0x1988>
   12c42:	cbz	r2, 12c96 <setlogin@@Base+0x19da>
   12c44:	mov	r0, r3
   12c46:	ldrh.w	r2, [r3], #2
   12c4a:	cmp	r2, #58	; 0x3a
   12c4c:	bne.n	12c42 <setlogin@@Base+0x1986>
   12c4e:	ldrh	r3, [r0, #2]
   12c50:	cmp	r3, #93	; 0x5d
   12c52:	bne.n	12c96 <setlogin@@Base+0x19da>
   12c54:	bl	14db4 <strvisx@@Base+0x1040>
   12c58:	mov.w	fp, r0, asr #1
   12c5c:	mov	r6, r0
   12c5e:	cbz	r7, 12c8e <setlogin@@Base+0x19d2>
   12c60:	ldr	r0, [pc, #544]	; (12e84 <setlogin@@Base+0x1bc8>)
   12c62:	mov	r3, r7
   12c64:	add	r0, pc
   12c66:	add.w	ip, r3, fp
   12c6a:	mov	r2, r4
   12c6c:	b.n	12c7c <setlogin@@Base+0x19c0>
   12c6e:	ldrh.w	lr, [r2, #2]!
   12c72:	ldrb.w	r1, [r3], #1
   12c76:	cmp	r1, lr
   12c78:	bne.n	12c86 <setlogin@@Base+0x19ca>
   12c7a:	cbz	r1, 12c80 <setlogin@@Base+0x19c4>
   12c7c:	cmp	r3, ip
   12c7e:	bne.n	12c6e <setlogin@@Base+0x19b2>
   12c80:	ldrb.w	r3, [ip]
   12c84:	cbz	r3, 12cd8 <setlogin@@Base+0x1a1c>
   12c86:	ldr.w	r3, [r0, #8]!
   12c8a:	cmp	r3, #0
   12c8c:	bne.n	12c66 <setlogin@@Base+0x19aa>
   12c8e:	ldr	r3, [sp, #40]	; 0x28
   12c90:	cmp	r3, #0
   12c92:	beq.w	12e52 <setlogin@@Base+0x1b96>
   12c96:	mov	r1, r5
   12c98:	movs	r3, #91	; 0x5b
   12c9a:	strh.w	r3, [r1], #2
   12c9e:	ldrh	r3, [r4, #0]
   12ca0:	cmp	r3, #45	; 0x2d
   12ca2:	bne.n	12c28 <setlogin@@Base+0x196c>
   12ca4:	ldrh	r2, [r4, #2]
   12ca6:	cmp	r2, #93	; 0x5d
   12ca8:	beq.n	12d00 <setlogin@@Base+0x1a44>
   12caa:	movw	r3, #32813	; 0x802d
   12cae:	uxtb	r2, r2
   12cb0:	strh	r3, [r5, #2]
   12cb2:	adds	r4, #4
   12cb4:	strh	r2, [r5, #4]
   12cb6:	adds	r1, r5, #6
   12cb8:	ldrh	r3, [r4, #0]
   12cba:	adds	r4, #2
   12cbc:	cmp	r3, #93	; 0x5d
   12cbe:	bne.n	12c30 <setlogin@@Base+0x1974>
   12cc0:	ldr	r7, [sp, #44]	; 0x2c
   12cc2:	ldr	r3, [sp, #36]	; 0x24
   12cc4:	mov	r2, r1
   12cc6:	adds	r5, r4, #2
   12cc8:	orr.w	r3, r3, #256	; 0x100
   12ccc:	str	r3, [r7, #12]
   12cce:	movw	r3, #32861	; 0x805d
   12cd2:	strh.w	r3, [r2], #2
   12cd6:	b.n	12b12 <setlogin@@Base+0x1856>
   12cd8:	strh.w	r8, [r5], #4
   12cdc:	mov	r1, r9
   12cde:	bl	14db4 <strvisx@@Base+0x1040>
   12ce2:	adds	r6, #6
   12ce4:	add	r6, r4
   12ce6:	mov	r4, r6
   12ce8:	asrs	r0, r0, #3
   12cea:	strh.w	r0, [r5, #-2]
   12cee:	ldrh.w	r3, [r4], #2
   12cf2:	cmp	r3, #91	; 0x5b
   12cf4:	bne.w	12e5e <setlogin@@Base+0x1ba2>
   12cf8:	ldrh	r2, [r6, #2]
   12cfa:	cmp	r2, #58	; 0x3a
   12cfc:	beq.n	12c3c <setlogin@@Base+0x1980>
   12cfe:	b.n	12c1c <setlogin@@Base+0x1960>
   12d00:	adds	r4, #2
   12d02:	b.n	12c18 <setlogin@@Base+0x195c>
   12d04:	cmp	r6, #33	; 0x21
   12d06:	mov.w	r3, #91	; 0x5b
   12d0a:	strh	r3, [r2, #0]
   12d0c:	beq.w	12be0 <setlogin@@Base+0x1924>
   12d10:	mov	r3, r4
   12d12:	mov	r2, r1
   12d14:	mov	r4, r5
   12d16:	mov	r5, r3
   12d18:	b.n	12b12 <setlogin@@Base+0x1856>
   12d1a:	add.w	r2, sp, #8192	; 0x2000
   12d1e:	ldr	r0, [sp, #28]
   12d20:	adds	r2, #52	; 0x34
   12d22:	movw	r1, #8190	; 0x1ffe
   12d26:	adds	r3, r2, r1
   12d28:	add	r1, sl
   12d2a:	strd	r7, r0, [sp, #8]
   12d2e:	mov	r0, r2
   12d30:	strd	sl, r1, [sp]
   12d34:	mov	r1, r3
   12d36:	bl	124ec <setlogin@@Base+0x1230>
   12d3a:	mov	r8, r0
   12d3c:	cmp	r0, #0
   12d3e:	bne.w	12b70 <setlogin@@Base+0x18b4>
   12d42:	ldr	r6, [r7, #0]
   12d44:	ldr	r2, [sp, #24]
   12d46:	ldr	r3, [r7, #12]
   12d48:	cmp	r2, r6
   12d4a:	beq.w	12b52 <setlogin@@Base+0x1896>
   12d4e:	ands.w	r4, r3, #32
   12d52:	bne.w	12b70 <setlogin@@Base+0x18b4>
   12d56:	ldr	r1, [sp, #24]
   12d58:	ands.w	r8, r3, #16384	; 0x4000
   12d5c:	ldr	r2, [r7, #8]
   12d5e:	sub.w	r6, r6, r1
   12d62:	add.w	r5, r1, r2
   12d66:	beq.n	12e0e <setlogin@@Base+0x1b52>
   12d68:	movs	r1, #8
   12d6a:	mov	r0, r6
   12d6c:	blx	233c <calloc@plt+0x4>
   12d70:	mov	r8, r0
   12d72:	cmp	r0, #0
   12d74:	beq.n	12e58 <setlogin@@Base+0x1b9c>
   12d76:	ldr	r1, [r7, #16]
   12d78:	lsls	r5, r5, #2
   12d7a:	ldr	r2, [r7, #20]
   12d7c:	add.w	r9, r0, #4
   12d80:	add	r1, r5
   12d82:	mov	r3, r4
   12d84:	add	r2, r5
   12d86:	ldr.w	r0, [r1], #4
   12d8a:	str.w	r0, [r8, r3, lsl #3]
   12d8e:	ldr.w	r0, [r2], #4
   12d92:	str.w	r0, [r9, r3, lsl #3]
   12d96:	adds	r3, #1
   12d98:	cmp	r3, r6
   12d9a:	bcc.n	12d86 <setlogin@@Base+0x1aca>
   12d9c:	ldr	r3, [pc, #232]	; (12e88 <setlogin@@Base+0x1bcc>)
   12d9e:	movs	r2, #8
   12da0:	mov	r1, r6
   12da2:	mov	r0, r8
   12da4:	add	r3, pc
   12da6:	blx	21e4 <qsort@plt>
   12daa:	movs	r3, #0
   12dac:	ldr.w	r1, [r8, r3, lsl #3]
   12db0:	ldr	r2, [r7, #16]
   12db2:	str	r1, [r2, r5]
   12db4:	ldr	r2, [r7, #20]
   12db6:	ldr.w	r1, [r9, r3, lsl #3]
   12dba:	adds	r3, #1
   12dbc:	cmp	r3, r6
   12dbe:	str	r1, [r2, r5]
   12dc0:	add.w	r5, r5, #4
   12dc4:	bcc.n	12dac <setlogin@@Base+0x1af0>
   12dc6:	mov	r0, r8
   12dc8:	mov.w	r8, #0
   12dcc:	blx	23f8 <free@plt+0x4>
   12dd0:	b.n	12b70 <setlogin@@Base+0x18b4>
   12dd2:	movw	r3, #32801	; 0x8021
   12dd6:	adds	r1, r2, #4
   12dd8:	strh	r3, [r2, #2]
   12dda:	b.n	12c06 <setlogin@@Base+0x194a>
   12ddc:	ldr	r2, [r7, #0]
   12dde:	add.w	sl, sp, #52	; 0x34
   12de2:	ldr	r4, [sp, #20]
   12de4:	str	r2, [sp, #24]
   12de6:	add	r2, sp, #56	; 0x38
   12de8:	str	r2, [sp, #16]
   12dea:	b.n	12aee <setlogin@@Base+0x1832>
   12dec:	blx	23e8 <getuid@plt>
   12df0:	mov	r6, r0
   12df2:	blx	2224 <geteuid@plt>
   12df6:	cmp	r6, r0
   12df8:	beq.n	12e3e <setlogin@@Base+0x1b82>
   12dfa:	blx	23e8 <getuid@plt>
   12dfe:	blx	24ec <getpwuid@plt>
   12e02:	cmp	r0, #0
   12e04:	bne.w	12aae <setlogin@@Base+0x17f2>
   12e08:	ldr	r4, [sp, #20]
   12e0a:	ldrh	r3, [r4, #0]
   12e0c:	b.n	12ae4 <setlogin@@Base+0x1828>
   12e0e:	ldr	r0, [r7, #16]
   12e10:	mov	r1, r6
   12e12:	ldr	r3, [pc, #120]	; (12e8c <setlogin@@Base+0x1bd0>)
   12e14:	movs	r2, #4
   12e16:	add.w	r0, r0, r5, lsl #2
   12e1a:	add	r3, pc
   12e1c:	blx	21e4 <qsort@plt>
   12e20:	b.n	12b70 <setlogin@@Base+0x18b4>
   12e22:	add.w	r1, sl, #8160	; 0x1fe0
   12e26:	subs	r4, #2
   12e28:	adds	r1, #30
   12e2a:	cmp	r3, r1
   12e2c:	bcs.w	12aca <setlogin@@Base+0x180e>
   12e30:	ldrh.w	r2, [r4, #2]!
   12e34:	strh.w	r2, [r3], #2
   12e38:	cmp	r2, #0
   12e3a:	bne.n	12e2a <setlogin@@Base+0x1b6e>
   12e3c:	b.n	12aca <setlogin@@Base+0x180e>
   12e3e:	ldr	r0, [pc, #80]	; (12e90 <setlogin@@Base+0x1bd4>)
   12e40:	add	r0, pc
   12e42:	blx	22d8 <getenv@plt>
   12e46:	cmp	r0, #0
   12e48:	bne.w	12ab0 <setlogin@@Base+0x17f4>
   12e4c:	b.n	12dfa <setlogin@@Base+0x1b3e>
   12e4e:	mov	r2, sl
   12e50:	b.n	12b40 <setlogin@@Base+0x1884>
   12e52:	mvn.w	r8, #2
   12e56:	b.n	12b70 <setlogin@@Base+0x18b4>
   12e58:	mov.w	r8, #4294967295	; 0xffffffff
   12e5c:	b.n	12b70 <setlogin@@Base+0x18b4>
   12e5e:	cmp	r3, #93	; 0x5d
   12e60:	beq.n	12e6a <setlogin@@Base+0x1bae>
   12e62:	uxtb	r3, r3
   12e64:	b.n	12c1c <setlogin@@Base+0x1960>
   12e66:	blx	2698 <__stack_chk_fail@plt>
   12e6a:	ldr	r7, [sp, #44]	; 0x2c
   12e6c:	mov	r1, r5
   12e6e:	b.n	12cc2 <setlogin@@Base+0x1a06>
   12e70:	strb	r2, [r0, #11]
   12e72:	movs	r1, r0
   12e74:	lsls	r0, r0, #11
   12e76:	movs	r0, r0
   12e78:	strb	r2, [r2, #21]
   12e7a:	movs	r1, r0
   12e7c:	strb	r0, [r2, #21]
   12e7e:	movs	r1, r0
   12e80:	strb	r6, [r0, #6]
   12e82:	movs	r1, r0
   12e84:	strb	r0, [r5, #15]
   12e86:	movs	r1, r0
   12e88:	bl	ffc34e8a <strvisx@@Base+0xffc21116>
   12e8c:	bl	3b6e8e <strvisx@@Base+0x3a311a>
   12e90:	ldrsh	r4, [r4, r4]
   12e92:	movs	r0, r0
   12e94:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12e98:	mov	r9, r2
   12e9a:	ldr	r4, [pc, #456]	; (13064 <setlogin@@Base+0x1da8>)
   12e9c:	sub.w	sp, sp, #8192	; 0x2000
   12ea0:	ldr	r2, [pc, #452]	; (13068 <setlogin@@Base+0x1dac>)
   12ea2:	sub	sp, #20
   12ea4:	add	r4, pc
   12ea6:	mov	sl, r3
   12ea8:	cmp	r1, r0
   12eaa:	add.w	r3, sp, #8192	; 0x2000
   12eae:	ldr	r2, [r4, r2]
   12eb0:	add.w	r3, r3, #12
   12eb4:	ldr	r2, [r2, #0]
   12eb6:	str	r2, [r3, #0]
   12eb8:	mov.w	r2, #0
   12ebc:	beq.n	12f98 <setlogin@@Base+0x1cdc>
   12ebe:	add.w	r8, sp, #16
   12ec2:	mov	r3, r1
   12ec4:	sub.w	r2, r8, #6
   12ec8:	ldrh.w	r4, [r3], #2
   12ecc:	cmp	r0, r3
   12ece:	strh.w	r4, [r2, #2]!
   12ed2:	bne.n	12ec8 <setlogin@@Base+0x1c0c>
   12ed4:	sub.w	r8, r8, #4
   12ed8:	subs	r1, r0, r1
   12eda:	add.w	r3, r8, r1
   12ede:	str	r3, [sp, #4]
   12ee0:	ldr	r3, [sp, #4]
   12ee2:	mov.w	fp, #0
   12ee6:	ldrh	r7, [r0, #2]
   12ee8:	adds	r6, r0, #2
   12eea:	strh.w	fp, [r3]
   12eee:	cbz	r7, 12f08 <setlogin@@Base+0x1c4c>
   12ef0:	mov	r4, r6
   12ef2:	mov	r1, r7
   12ef4:	cmp	r1, #91	; 0x5b
   12ef6:	beq.n	12f68 <setlogin@@Base+0x1cac>
   12ef8:	cmp	r1, #123	; 0x7b
   12efa:	beq.n	12f38 <setlogin@@Base+0x1c7c>
   12efc:	cmp	r1, #125	; 0x7d
   12efe:	beq.n	12f4c <setlogin@@Base+0x1c90>
   12f00:	ldrh.w	r1, [r4, #2]!
   12f04:	cmp	r1, #0
   12f06:	bne.n	12ef4 <setlogin@@Base+0x1c38>
   12f08:	mov	r2, sl
   12f0a:	mov	r1, r9
   12f0c:	mov	r0, r8
   12f0e:	bl	12a28 <setlogin@@Base+0x176c>
   12f12:	mov	fp, r0
   12f14:	ldr	r1, [pc, #340]	; (1306c <setlogin@@Base+0x1db0>)
   12f16:	add.w	r3, sp, #8192	; 0x2000
   12f1a:	ldr	r2, [pc, #332]	; (13068 <setlogin@@Base+0x1dac>)
   12f1c:	adds	r3, #12
   12f1e:	add	r1, pc
   12f20:	ldr	r2, [r1, r2]
   12f22:	ldr	r1, [r2, #0]
   12f24:	ldr	r2, [r3, #0]
   12f26:	eors	r1, r2
   12f28:	bne.w	13060 <setlogin@@Base+0x1da4>
   12f2c:	mov	r0, fp
   12f2e:	add.w	sp, sp, #8192	; 0x2000
   12f32:	add	sp, #20
   12f34:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f38:	mov	r0, fp
   12f3a:	movs	r1, #1
   12f3c:	bl	14d50 <strvisx@@Base+0xfdc>
   12f40:	ldrh.w	r1, [r4, #2]!
   12f44:	mov	fp, r0
   12f46:	cmp	r1, #0
   12f48:	bne.n	12ef4 <setlogin@@Base+0x1c38>
   12f4a:	b.n	12f08 <setlogin@@Base+0x1c4c>
   12f4c:	cmp.w	fp, #0
   12f50:	beq.n	12fa2 <setlogin@@Base+0x1ce6>
   12f52:	mov	r0, fp
   12f54:	mov.w	r1, #4294967295	; 0xffffffff
   12f58:	bl	14d50 <strvisx@@Base+0xfdc>
   12f5c:	ldrh.w	r1, [r4, #2]!
   12f60:	mov	fp, r0
   12f62:	cmp	r1, #0
   12f64:	bne.n	12ef4 <setlogin@@Base+0x1c38>
   12f66:	b.n	12f08 <setlogin@@Base+0x1c4c>
   12f68:	ldrh	r1, [r4, #2]
   12f6a:	adds	r0, r4, #2
   12f6c:	cmp	r1, #0
   12f6e:	it	ne
   12f70:	cmpne	r1, #93	; 0x5d
   12f72:	beq.n	12f8a <setlogin@@Base+0x1cce>
   12f74:	mov	r2, r0
   12f76:	mov	r4, r2
   12f78:	ldrh.w	r5, [r2, #2]!
   12f7c:	cmp	r5, #93	; 0x5d
   12f7e:	it	ne
   12f80:	cmpne	r5, #0
   12f82:	bne.n	12f76 <setlogin@@Base+0x1cba>
   12f84:	cbnz	r5, 12f8e <setlogin@@Base+0x1cd2>
   12f86:	mov	r4, r0
   12f88:	b.n	12ef4 <setlogin@@Base+0x1c38>
   12f8a:	cmp	r1, #0
   12f8c:	beq.n	12f08 <setlogin@@Base+0x1c4c>
   12f8e:	ldrh.w	r1, [r4, #4]!
   12f92:	cmp	r1, #0
   12f94:	bne.n	12ef4 <setlogin@@Base+0x1c38>
   12f96:	b.n	12f08 <setlogin@@Base+0x1c4c>
   12f98:	add.w	r8, sp, #12
   12f9c:	str.w	r8, [sp, #4]
   12fa0:	b.n	12ee0 <setlogin@@Base+0x1c24>
   12fa2:	cmp	r6, r4
   12fa4:	itt	ls
   12fa6:	movls	r5, r6
   12fa8:	movls	r0, fp
   12faa:	bhi.n	12f14 <setlogin@@Base+0x1c58>
   12fac:	cmp	r7, #123	; 0x7b
   12fae:	beq.n	12fe8 <setlogin@@Base+0x1d2c>
   12fb0:	bhi.n	12ff2 <setlogin@@Base+0x1d36>
   12fb2:	cmp	r7, #44	; 0x2c
   12fb4:	beq.n	13004 <setlogin@@Base+0x1d48>
   12fb6:	cmp	r7, #91	; 0x5b
   12fb8:	bne.n	13000 <setlogin@@Base+0x1d44>
   12fba:	ldrh	r3, [r5, #2]
   12fbc:	adds	r1, r5, #2
   12fbe:	cmp	r3, #0
   12fc0:	it	ne
   12fc2:	cmpne	r3, #93	; 0x5d
   12fc4:	mov	r2, r1
   12fc6:	beq.n	12fd4 <setlogin@@Base+0x1d18>
   12fc8:	ldrh.w	r3, [r2, #2]!
   12fcc:	cmp	r3, #93	; 0x5d
   12fce:	it	ne
   12fd0:	cmpne	r3, #0
   12fd2:	bne.n	12fc8 <setlogin@@Base+0x1d0c>
   12fd4:	mov	r6, r5
   12fd6:	cbz	r3, 12fdc <setlogin@@Base+0x1d20>
   12fd8:	adds	r1, r2, #2
   12fda:	mov	r5, r2
   12fdc:	cmp	r4, r1
   12fde:	bcc.n	12f14 <setlogin@@Base+0x1c58>
   12fe0:	ldrh	r7, [r5, #2]
   12fe2:	mov	r5, r1
   12fe4:	cmp	r7, #123	; 0x7b
   12fe6:	bne.n	12fb0 <setlogin@@Base+0x1cf4>
   12fe8:	movs	r1, #1
   12fea:	bl	14d50 <strvisx@@Base+0xfdc>
   12fee:	adds	r1, r5, #2
   12ff0:	b.n	12fdc <setlogin@@Base+0x1d20>
   12ff2:	cmp	r7, #125	; 0x7d
   12ff4:	bne.n	13000 <setlogin@@Base+0x1d44>
   12ff6:	cbz	r0, 13008 <setlogin@@Base+0x1d4c>
   12ff8:	mov.w	r1, #4294967295	; 0xffffffff
   12ffc:	bl	14d50 <strvisx@@Base+0xfdc>
   13000:	adds	r1, r5, #2
   13002:	b.n	12fdc <setlogin@@Base+0x1d20>
   13004:	cmp	r0, #0
   13006:	bne.n	13000 <setlogin@@Base+0x1d44>
   13008:	cmp	r5, r6
   1300a:	ldr	r3, [sp, #4]
   1300c:	bls.n	1302c <setlogin@@Base+0x1d70>
   1300e:	subs	r2, r3, #2
   13010:	mov	r3, r6
   13012:	ldrh.w	r1, [r3], #2
   13016:	cmp	r3, r5
   13018:	strh.w	r1, [r2, #2]!
   1301c:	bcc.n	13012 <setlogin@@Base+0x1d56>
   1301e:	subs	r3, r5, #1
   13020:	ldr	r2, [sp, #4]
   13022:	subs	r3, r3, r6
   13024:	bic.w	r3, r3, #1
   13028:	adds	r3, #2
   1302a:	add	r3, r2
   1302c:	subs	r3, #2
   1302e:	adds	r1, r4, #2
   13030:	ldrh.w	r2, [r1], #2
   13034:	strh.w	r2, [r3, #2]!
   13038:	cmp	r2, #0
   1303a:	bne.n	13030 <setlogin@@Base+0x1d74>
   1303c:	mov	r2, sl
   1303e:	mov	r1, r9
   13040:	mov	r0, r8
   13042:	bl	13070 <setlogin@@Base+0x1db4>
   13046:	adds	r3, r0, #3
   13048:	it	ne
   1304a:	movne	r3, #1
   1304c:	cmp	r0, #0
   1304e:	it	eq
   13050:	moveq	r3, #0
   13052:	cmp	r3, #0
   13054:	bne.w	12f12 <setlogin@@Base+0x1c56>
   13058:	adds	r6, r5, #2
   1305a:	mov	r0, r3
   1305c:	mov	r1, r6
   1305e:	b.n	12fdc <setlogin@@Base+0x1d20>
   13060:	blx	2698 <__stack_chk_fail@plt>
   13064:	ldr	r4, [r3, #100]	; 0x64
   13066:	movs	r1, r0
   13068:	lsls	r0, r0, #11
   1306a:	movs	r0, r0
   1306c:	ldr	r2, [r4, #92]	; 0x5c
   1306e:	movs	r1, r0
   13070:	push	{r4, r5, r6}
   13072:	ldrh	r4, [r0, #0]
   13074:	cmp	r4, #123	; 0x7b
   13076:	it	ne
   13078:	movne	r5, r0
   1307a:	bne.n	13082 <setlogin@@Base+0x1dc6>
   1307c:	b.n	13090 <setlogin@@Base+0x1dd4>
   1307e:	ldrh.w	r4, [r5, #2]!
   13082:	cmp	r4, #123	; 0x7b
   13084:	mov	r6, r5
   13086:	beq.n	1309e <setlogin@@Base+0x1de2>
   13088:	cmp	r4, #0
   1308a:	bne.n	1307e <setlogin@@Base+0x1dc2>
   1308c:	pop	{r4, r5, r6}
   1308e:	b.n	12a28 <setlogin@@Base+0x176c>
   13090:	ldrh	r3, [r0, #2]
   13092:	cmp	r3, #125	; 0x7d
   13094:	bne.n	1309c <setlogin@@Base+0x1de0>
   13096:	ldrh	r3, [r0, #4]
   13098:	cmp	r3, #0
   1309a:	beq.n	1308c <setlogin@@Base+0x1dd0>
   1309c:	mov	r6, r0
   1309e:	mov	r3, r2
   130a0:	mov	r2, r1
   130a2:	mov	r1, r0
   130a4:	mov	r0, r6
   130a6:	pop	{r4, r5, r6}
   130a8:	b.n	12e94 <setlogin@@Base+0x1bd8>
   130aa:	nop
   130ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   130b0:	mov	r4, r0
   130b2:	ldr	r0, [pc, #304]	; (131e4 <setlogin@@Base+0x1f28>)
   130b4:	mov	r9, r1
   130b6:	sub.w	sp, sp, #8192	; 0x2000
   130ba:	ldr	r1, [pc, #300]	; (131e8 <setlogin@@Base+0x1f2c>)
   130bc:	sub	sp, #20
   130be:	add	r0, pc
   130c0:	add	r5, sp, #16
   130c2:	mov	r8, r3
   130c4:	ldr	r1, [r0, r1]
   130c6:	add.w	r3, sp, #8192	; 0x2000
   130ca:	sub.w	r7, r5, #16
   130ce:	adds	r3, #12
   130d0:	ldr	r1, [r1, #0]
   130d2:	str	r1, [r3, #0]
   130d4:	mov.w	r1, #0
   130d8:	movs	r3, #0
   130da:	strd	r3, r3, [r7, #4]
   130de:	str.w	r3, [r5, #-16]
   130e2:	ands.w	r3, r9, #1
   130e6:	bne.n	130fa <setlogin@@Base+0x1e3e>
   130e8:	str.w	r3, [r8]
   130ec:	strd	r3, r3, [r8, #16]
   130f0:	ands.w	r3, r9, #2
   130f4:	it	eq
   130f6:	streq.w	r3, [r8, #8]
   130fa:	movs	r3, #0
   130fc:	str.w	r2, [r8, #24]
   13100:	mov.w	r1, #4096	; 0x1000
   13104:	bic.w	r2, r9, #256	; 0x100
   13108:	mov	r0, r4
   1310a:	str.w	r2, [r8, #12]
   1310e:	str.w	r3, [r8, #4]
   13112:	blx	26d4 <strnlen@plt>
   13116:	cmp.w	r0, #4096	; 0x1000
   1311a:	beq.n	131da <setlogin@@Base+0x1f1e>
   1311c:	ldr.w	r2, [r8, #8]
   13120:	mvn.w	r3, #2147483648	; 0x80000000
   13124:	cmp	r2, r3
   13126:	bcs.n	131d4 <setlogin@@Base+0x1f18>
   13128:	ldr.w	r1, [r8]
   1312c:	cmp	r1, r3
   1312e:	bcs.n	131d4 <setlogin@@Base+0x1f18>
   13130:	movw	r3, #65534	; 0xfffe
   13134:	movt	r3, #32767	; 0x7fff
   13138:	subs	r3, r3, r2
   1313a:	cmp	r3, r1
   1313c:	bls.n	131d4 <setlogin@@Base+0x1f18>
   1313e:	tst.w	r9, #4096	; 0x1000
   13142:	sub.w	r0, r5, #4
   13146:	itt	ne
   13148:	addwne	r3, r4, #4095	; 0xfff
   1314c:	movne	r2, r0
   1314e:	bne.n	1318a <setlogin@@Base+0x1ece>
   13150:	add.w	r3, r0, #8160	; 0x1fe0
   13154:	mov	r2, r0
   13156:	adds	r3, #30
   13158:	b.n	13162 <setlogin@@Base+0x1ea6>
   1315a:	cmp	r2, r3
   1315c:	strh.w	r6, [r2, #-2]
   13160:	beq.n	13192 <setlogin@@Base+0x1ed6>
   13162:	mov	r5, r4
   13164:	ldrb.w	r6, [r5], #1
   13168:	cbz	r6, 13192 <setlogin@@Base+0x1ed6>
   1316a:	cmp	r6, #92	; 0x5c
   1316c:	add.w	r2, r2, #2
   13170:	it	ne
   13172:	movne	r4, r5
   13174:	bne.n	1315a <setlogin@@Base+0x1e9e>
   13176:	ldrb	r6, [r4, #1]
   13178:	cbz	r6, 131cc <setlogin@@Base+0x1f10>
   1317a:	adds	r4, #2
   1317c:	orr.w	r6, r6, #16384	; 0x4000
   13180:	b.n	1315a <setlogin@@Base+0x1e9e>
   13182:	cmp	r4, r3
   13184:	strh.w	r5, [r2], #2
   13188:	beq.n	13192 <setlogin@@Base+0x1ed6>
   1318a:	ldrb.w	r5, [r4], #1
   1318e:	cmp	r5, #0
   13190:	bne.n	13182 <setlogin@@Base+0x1ec6>
   13192:	tst.w	r9, #128	; 0x80
   13196:	mov.w	r3, #0
   1319a:	mov	r1, r8
   1319c:	strh	r3, [r2, #0]
   1319e:	mov	r2, r7
   131a0:	bne.n	131c6 <setlogin@@Base+0x1f0a>
   131a2:	bl	12a28 <setlogin@@Base+0x176c>
   131a6:	ldr	r1, [pc, #68]	; (131ec <setlogin@@Base+0x1f30>)
   131a8:	add.w	r3, sp, #8192	; 0x2000
   131ac:	ldr	r2, [pc, #56]	; (131e8 <setlogin@@Base+0x1f2c>)
   131ae:	adds	r3, #12
   131b0:	add	r1, pc
   131b2:	ldr	r2, [r1, r2]
   131b4:	ldr	r1, [r2, #0]
   131b6:	ldr	r2, [r3, #0]
   131b8:	eors	r1, r2
   131ba:	bne.n	131e0 <setlogin@@Base+0x1f24>
   131bc:	add.w	sp, sp, #8192	; 0x2000
   131c0:	add	sp, #20
   131c2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   131c6:	bl	13070 <setlogin@@Base+0x1db4>
   131ca:	b.n	131a6 <setlogin@@Base+0x1eea>
   131cc:	mov	r4, r5
   131ce:	movw	r6, #16476	; 0x405c
   131d2:	b.n	1315a <setlogin@@Base+0x1e9e>
   131d4:	mov.w	r0, #4294967295	; 0xffffffff
   131d8:	b.n	131a6 <setlogin@@Base+0x1eea>
   131da:	mvn.w	r0, #2
   131de:	b.n	131a6 <setlogin@@Base+0x1eea>
   131e0:	blx	2698 <__stack_chk_fail@plt>
   131e4:	ldr	r2, [r0, #68]	; 0x44
   131e6:	movs	r1, r0
   131e8:	lsls	r0, r0, #11
   131ea:	movs	r0, r0
   131ec:	ldr	r0, [r2, #52]	; 0x34
   131ee:	movs	r1, r0
   131f0:	push	{r4, r5, r6, lr}
   131f2:	mov	r5, r0
   131f4:	ldr	r0, [r0, #16]
   131f6:	cbz	r0, 1321c <setlogin@@Base+0x1f60>
   131f8:	ldr	r6, [r5, #8]
   131fa:	ldr	r3, [r5, #0]
   131fc:	add.w	r6, r0, r6, lsl #2
   13200:	subs	r4, r3, #1
   13202:	cbz	r3, 13214 <setlogin@@Base+0x1f58>
   13204:	ldr.w	r0, [r6], #4
   13208:	subs	r4, #1
   1320a:	blx	23f8 <free@plt+0x4>
   1320e:	adds	r3, r4, #1
   13210:	bne.n	13204 <setlogin@@Base+0x1f48>
   13212:	ldr	r0, [r5, #16]
   13214:	blx	23f8 <free@plt+0x4>
   13218:	movs	r3, #0
   1321a:	str	r3, [r5, #16]
   1321c:	ldr	r0, [r5, #20]
   1321e:	cbz	r0, 13240 <setlogin@@Base+0x1f84>
   13220:	ldr	r3, [r5, #0]
   13222:	cbz	r3, 13238 <setlogin@@Base+0x1f7c>
   13224:	movs	r4, #0
   13226:	ldr.w	r0, [r0, r4, lsl #2]
   1322a:	adds	r4, #1
   1322c:	blx	23f8 <free@plt+0x4>
   13230:	ldr	r3, [r5, #0]
   13232:	ldr	r0, [r5, #20]
   13234:	cmp	r3, r4
   13236:	bhi.n	13226 <setlogin@@Base+0x1f6a>
   13238:	blx	23f8 <free@plt+0x4>
   1323c:	movs	r3, #0
   1323e:	str	r3, [r5, #20]
   13240:	pop	{r4, r5, r6, pc}
   13242:	nop
   13244:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   13248:	and.w	r7, r0, #63	; 0x3f
   1324c:	ldr	r5, [pc, #160]	; (132f0 <setlogin@@Base+0x2034>)
   1324e:	sub	sp, #12
   13250:	mov	r6, r0
   13252:	mov	r9, r1
   13254:	add	r5, pc
   13256:	adds	r5, #16
   13258:	add.w	r8, r5, r7, lsl #3
   1325c:	ldr.w	r3, [r5, r7, lsl #3]
   13260:	cmp	r3, r0
   13262:	beq.n	132e0 <setlogin@@Base+0x2024>
   13264:	ldr	r3, [pc, #140]	; (132f4 <setlogin@@Base+0x2038>)
   13266:	add	r3, pc
   13268:	ldr.w	r2, [r3, #528]	; 0x210
   1326c:	cbz	r2, 1329a <setlogin@@Base+0x1fde>
   1326e:	mov	r0, r6
   13270:	blx	24ec <getpwuid@plt>
   13274:	mov	r4, r0
   13276:	cbz	r0, 132ac <setlogin@@Base+0x1ff0>
   13278:	str.w	r6, [r5, r7, lsl #3]
   1327c:	ldr.w	r0, [r8, #4]
   13280:	cbz	r0, 13286 <setlogin@@Base+0x1fca>
   13282:	blx	23f8 <free@plt+0x4>
   13286:	ldr	r0, [r4, #0]
   13288:	blx	265c <strdup@plt+0x4>
   1328c:	mov	r4, r0
   1328e:	str.w	r0, [r8, #4]
   13292:	mov	r0, r4
   13294:	add	sp, #12
   13296:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1329a:	mov	r0, r6
   1329c:	movs	r2, #1
   1329e:	str.w	r2, [r3, #528]	; 0x210
   132a2:	blx	24ec <getpwuid@plt>
   132a6:	mov	r4, r0
   132a8:	cmp	r0, #0
   132aa:	bne.n	13278 <setlogin@@Base+0x1fbc>
   132ac:	cmp.w	r9, #0
   132b0:	bne.n	13292 <setlogin@@Base+0x1fd6>
   132b2:	ldr	r4, [pc, #68]	; (132f8 <setlogin@@Base+0x203c>)
   132b4:	movs	r3, #15
   132b6:	ldr.w	ip, [pc, #68]	; 132fc <setlogin@@Base+0x2040>
   132ba:	mov	r1, r3
   132bc:	add	r4, pc
   132be:	movs	r2, #1
   132c0:	add	ip, pc
   132c2:	str	r6, [sp, #4]
   132c4:	mov	r0, r4
   132c6:	str.w	ip, [sp]
   132ca:	blx	25b8 <__snprintf_chk@plt>
   132ce:	str.w	r6, [r5, r7, lsl #3]
   132d2:	ldr.w	r0, [r8, #4]
   132d6:	cbz	r0, 132dc <setlogin@@Base+0x2020>
   132d8:	blx	23f8 <free@plt+0x4>
   132dc:	mov	r0, r4
   132de:	b.n	13288 <setlogin@@Base+0x1fcc>
   132e0:	ldr.w	r4, [r8, #4]
   132e4:	cmp	r4, #0
   132e6:	beq.n	13264 <setlogin@@Base+0x1fa8>
   132e8:	mov	r0, r4
   132ea:	add	sp, #12
   132ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   132f0:	add	r7, pc, #640	; (adr r7, 13574 <strmode@@Base+0x8>)
   132f2:	movs	r1, r0
   132f4:	add	r7, pc, #568	; (adr r7, 13530 <strlcpy@@Base+0x18>)
   132f6:	movs	r1, r0
   132f8:	add	r7, pc, #224	; (adr r7, 133dc <setlogin@@Base+0x2120>)
   132fa:	movs	r1, r0
   132fc:	ldrh	r4, [r0, r4]
   132fe:	movs	r0, r0
   13300:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   13304:	and.w	r7, r0, #63	; 0x3f
   13308:	ldr	r5, [pc, #168]	; (133b4 <setlogin@@Base+0x20f8>)
   1330a:	sub	sp, #12
   1330c:	mov	r6, r0
   1330e:	mov	r9, r1
   13310:	add	r5, pc
   13312:	add.w	r5, r5, #548	; 0x224
   13316:	add.w	r8, r5, r7, lsl #3
   1331a:	ldr.w	r3, [r5, r7, lsl #3]
   1331e:	cmp	r3, r0
   13320:	beq.n	133a2 <setlogin@@Base+0x20e6>
   13322:	ldr	r3, [pc, #148]	; (133b8 <setlogin@@Base+0x20fc>)
   13324:	add	r3, pc
   13326:	ldr.w	r2, [r3, #1060]	; 0x424
   1332a:	cbz	r2, 13358 <setlogin@@Base+0x209c>
   1332c:	mov	r0, r6
   1332e:	blx	26f8 <getgrgid@plt>
   13332:	mov	r4, r0
   13334:	cbz	r0, 1336a <setlogin@@Base+0x20ae>
   13336:	str.w	r6, [r5, r7, lsl #3]
   1333a:	ldr.w	r0, [r8, #4]
   1333e:	cbz	r0, 13344 <setlogin@@Base+0x2088>
   13340:	blx	23f8 <free@plt+0x4>
   13344:	ldr	r0, [r4, #0]
   13346:	blx	265c <strdup@plt+0x4>
   1334a:	mov	r4, r0
   1334c:	str.w	r0, [r8, #4]
   13350:	mov	r0, r4
   13352:	add	sp, #12
   13354:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   13358:	mov	r0, r6
   1335a:	movs	r2, #1
   1335c:	str.w	r2, [r3, #1060]	; 0x424
   13360:	blx	26f8 <getgrgid@plt>
   13364:	mov	r4, r0
   13366:	cmp	r0, #0
   13368:	bne.n	13336 <setlogin@@Base+0x207a>
   1336a:	cmp.w	r9, #0
   1336e:	bne.n	13350 <setlogin@@Base+0x2094>
   13370:	ldr	r0, [pc, #72]	; (133bc <setlogin@@Base+0x2100>)
   13372:	movs	r3, #15
   13374:	ldr.w	ip, [pc, #72]	; 133c0 <setlogin@@Base+0x2104>
   13378:	mov	r1, r3
   1337a:	add	r0, pc
   1337c:	movs	r2, #1
   1337e:	add.w	r4, r0, #532	; 0x214
   13382:	add	ip, pc
   13384:	str	r6, [sp, #4]
   13386:	mov	r0, r4
   13388:	str.w	ip, [sp]
   1338c:	blx	25b8 <__snprintf_chk@plt>
   13390:	str.w	r6, [r5, r7, lsl #3]
   13394:	ldr.w	r0, [r8, #4]
   13398:	cbz	r0, 1339e <setlogin@@Base+0x20e2>
   1339a:	blx	23f8 <free@plt+0x4>
   1339e:	mov	r0, r4
   133a0:	b.n	13346 <setlogin@@Base+0x208a>
   133a2:	ldr.w	r4, [r8, #4]
   133a6:	cmp	r4, #0
   133a8:	beq.n	13322 <setlogin@@Base+0x2066>
   133aa:	mov	r0, r4
   133ac:	add	sp, #12
   133ae:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   133b2:	nop
   133b4:	add	r6, pc, #912	; (adr r6, 13748 <strtonum@@Base+0x3c>)
   133b6:	movs	r1, r0
   133b8:	add	r6, pc, #832	; (adr r6, 136fc <strmode@@Base+0x190>)
   133ba:	movs	r1, r0
   133bc:	add	r6, pc, #488	; (adr r6, 135a8 <strmode@@Base+0x3c>)
   133be:	movs	r1, r0
   133c0:	ldrh	r2, [r0, r1]
   133c2:	movs	r0, r0
   133c4:	cmp	r0, #0
   133c6:	beq.n	134a0 <setlogin@@Base+0x21e4>
   133c8:	push	{r3, r4, r5, r6, r7, lr}
   133ca:	movw	r6, #65535	; 0xffff
   133ce:	cmp	r3, r6
   133d0:	mov	r5, r0
   133d2:	ite	ls
   133d4:	movls	r4, #0
   133d6:	movhi	r4, #1
   133d8:	cmp	r2, r6
   133da:	ite	ls
   133dc:	movls	r6, r4
   133de:	orrhi.w	r6, r4, #1
   133e2:	cmp	r2, #0
   133e4:	it	eq
   133e6:	moveq	r6, #0
   133e8:	cmp	r6, #0
   133ea:	bne.n	13472 <setlogin@@Base+0x21b6>
   133ec:	cmp.w	r1, #65536	; 0x10000
   133f0:	it	cs
   133f2:	orrcs.w	r4, r4, #1
   133f6:	cmp	r1, #0
   133f8:	it	eq
   133fa:	moveq	r4, #0
   133fc:	mul.w	r7, r3, r2
   13400:	cmp	r4, #0
   13402:	bne.n	13486 <setlogin@@Base+0x21ca>
   13404:	mul.w	r4, r1, r3
   13408:	cmp	r7, r4
   1340a:	bhi.n	13454 <setlogin@@Base+0x2198>
   1340c:	subs	r6, r4, r7
   1340e:	cmp.w	r6, r4, lsr #1
   13412:	bcc.n	1343e <setlogin@@Base+0x2182>
   13414:	mov	r0, r7
   13416:	blx	2674 <malloc@plt>
   1341a:	mov	r6, r0
   1341c:	cmp	r0, #0
   1341e:	beq.n	1349a <setlogin@@Base+0x21de>
   13420:	mov	r2, r7
   13422:	mov	r1, r5
   13424:	blx	24c4 <memcpy@plt>
   13428:	mov	r0, r5
   1342a:	mov	r1, r4
   1342c:	mov.w	r2, #4294967295	; 0xffffffff
   13430:	blx	2524 <__explicit_bzero_chk@plt+0x4>
   13434:	mov	r0, r5
   13436:	blx	23f8 <free@plt+0x4>
   1343a:	mov	r0, r6
   1343c:	pop	{r3, r4, r5, r6, r7, pc}
   1343e:	blx	2924 <getpagesize@plt>
   13442:	cmp	r0, r6
   13444:	bls.n	13414 <setlogin@@Base+0x2158>
   13446:	mov	r2, r6
   13448:	adds	r0, r5, r7
   1344a:	movs	r1, #0
   1344c:	mov	r6, r5
   1344e:	blx	2354 <memset@plt>
   13452:	b.n	1343a <setlogin@@Base+0x217e>
   13454:	mov	r0, r7
   13456:	blx	2674 <malloc@plt>
   1345a:	mov	r6, r0
   1345c:	cbz	r0, 1349a <setlogin@@Base+0x21de>
   1345e:	mov	r2, r4
   13460:	mov	r1, r5
   13462:	blx	24c4 <memcpy@plt>
   13466:	subs	r2, r7, r4
   13468:	adds	r0, r6, r4
   1346a:	movs	r1, #0
   1346c:	blx	2354 <memset@plt>
   13470:	b.n	13428 <setlogin@@Base+0x216c>
   13472:	umull	r6, r0, r2, r3
   13476:	cmp	r0, #0
   13478:	beq.n	133ec <setlogin@@Base+0x2130>
   1347a:	blx	2900 <__errno_location@plt>
   1347e:	movs	r6, #0
   13480:	movs	r3, #12
   13482:	str	r3, [r0, #0]
   13484:	b.n	1343a <setlogin@@Base+0x217e>
   13486:	umull	r0, r2, r1, r3
   1348a:	cmp	r2, #0
   1348c:	beq.n	13404 <setlogin@@Base+0x2148>
   1348e:	blx	2900 <__errno_location@plt>
   13492:	movs	r6, #0
   13494:	movs	r3, #22
   13496:	str	r3, [r0, #0]
   13498:	b.n	1343a <setlogin@@Base+0x217e>
   1349a:	movs	r6, #0
   1349c:	mov	r0, r6
   1349e:	pop	{r3, r4, r5, r6, r7, pc}
   134a0:	mov	r1, r3
   134a2:	mov	r0, r2
   134a4:	b.w	2338 <calloc@plt>

000134a8 <strlcat@@Base>:
   134a8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   134ac:	mov	r7, r1
   134ae:	mov	r5, r2
   134b0:	cbz	r2, 13508 <strlcat@@Base+0x60>
   134b2:	adds	r6, r2, r0
   134b4:	mov	r3, r0
   134b6:	b.n	134be <strlcat@@Base+0x16>
   134b8:	cmp	r6, r3
   134ba:	mov	r4, r3
   134bc:	beq.n	134c8 <strlcat@@Base+0x20>
   134be:	mov	r4, r3
   134c0:	adds	r3, #1
   134c2:	ldrb	r2, [r4, #0]
   134c4:	cmp	r2, #0
   134c6:	bne.n	134b8 <strlcat@@Base+0x10>
   134c8:	mov	r1, r0
   134ca:	mov	r0, r4
   134cc:	bl	14db4 <strvisx@@Base+0x1040>
   134d0:	subs	r2, r5, r0
   134d2:	mov	r8, r0
   134d4:	beq.n	1350a <strlcat@@Base+0x62>
   134d6:	ldrb	r5, [r7, #0]
   134d8:	mov	r0, r7
   134da:	cbz	r5, 134fe <strlcat@@Base+0x56>
   134dc:	mov	r3, r4
   134de:	cmp	r2, #1
   134e0:	itt	ne
   134e2:	strbne.w	r5, [r3], #1
   134e6:	addne.w	r2, r2, #4294967295	; 0xffffffff
   134ea:	ldrb.w	r5, [r0, #1]!
   134ee:	it	ne
   134f0:	movne	r4, r3
   134f2:	cmp	r5, #0
   134f4:	bne.n	134dc <strlcat@@Base+0x34>
   134f6:	mov	r1, r7
   134f8:	bl	14db4 <strvisx@@Base+0x1040>
   134fc:	add	r8, r0
   134fe:	movs	r3, #0
   13500:	mov	r0, r8
   13502:	strb	r3, [r4, #0]
   13504:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13508:	mov	r8, r2
   1350a:	mov	r0, r7
   1350c:	blx	24a0 <strlen@plt>
   13510:	add	r8, r0
   13512:	mov	r0, r8
   13514:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00013518 <strlcpy@@Base>:
   13518:	push	{r4, lr}
   1351a:	cbz	r2, 13554 <strlcpy@@Base+0x3c>
   1351c:	subs	r2, #1
   1351e:	mov	r3, r0
   13520:	mov	r0, r1
   13522:	adds	r4, r3, r2
   13524:	b.n	13530 <strlcpy@@Base+0x18>
   13526:	ldrb.w	r2, [r0, #-1]
   1352a:	strb.w	r2, [r3], #1
   1352e:	cbz	r2, 13546 <strlcpy@@Base+0x2e>
   13530:	cmp	r4, r3
   13532:	mov	r2, r0
   13534:	add.w	r0, r0, #1
   13538:	bne.n	13526 <strlcpy@@Base+0xe>
   1353a:	mov	r0, r2
   1353c:	movs	r3, #0
   1353e:	strb	r3, [r4, #0]
   13540:	ldrb.w	r3, [r0], #1
   13544:	cbnz	r3, 13556 <strlcpy@@Base+0x3e>
   13546:	bl	14db4 <strvisx@@Base+0x1040>
   1354a:	mov.w	r1, #4294967295	; 0xffffffff
   1354e:	bl	14d50 <strvisx@@Base+0xfdc>
   13552:	pop	{r4, pc}
   13554:	mov	r0, r1
   13556:	ldrb.w	r3, [r0], #1
   1355a:	cmp	r3, #0
   1355c:	bne.n	13556 <strlcpy@@Base+0x3e>
   1355e:	bl	14db4 <strvisx@@Base+0x1040>
   13562:	mov.w	r1, #4294967295	; 0xffffffff
   13566:	bl	14d50 <strvisx@@Base+0xfdc>
   1356a:	pop	{r4, pc}

0001356c <strmode@@Base>:
   1356c:	and.w	r3, r0, #61440	; 0xf000
   13570:	cmp.w	r3, #24576	; 0x6000
   13574:	push	{r4, r5, r6, r7}
   13576:	beq.w	136fa <strmode@@Base+0x18e>
   1357a:	bgt.n	13658 <strmode@@Base+0xec>
   1357c:	cmp.w	r3, #8192	; 0x2000
   13580:	beq.w	13700 <strmode@@Base+0x194>
   13584:	cmp.w	r3, #16384	; 0x4000
   13588:	itt	eq
   1358a:	moveq	r3, #100	; 0x64
   1358c:	strbeq	r3, [r1, #0]
   1358e:	bne.w	136ae <strmode@@Base+0x142>
   13592:	tst.w	r0, #256	; 0x100
   13596:	and.w	r3, r0, #2112	; 0x840
   1359a:	add.w	ip, r1, #3
   1359e:	add.w	r4, r1, #4
   135a2:	ite	ne
   135a4:	movne	r2, #114	; 0x72
   135a6:	moveq	r2, #45	; 0x2d
   135a8:	tst.w	r0, #128	; 0x80
   135ac:	strb	r2, [r1, #1]
   135ae:	add.w	r7, r1, #6
   135b2:	add.w	r6, r1, #7
   135b6:	ite	ne
   135b8:	movne	r2, #119	; 0x77
   135ba:	moveq	r2, #45	; 0x2d
   135bc:	cmp.w	r3, #2048	; 0x800
   135c0:	strb	r2, [r1, #2]
   135c2:	add.w	r2, r1, #5
   135c6:	beq.w	136e6 <strmode@@Base+0x17a>
   135ca:	bgt.n	13692 <strmode@@Base+0x126>
   135cc:	cmp	r3, #0
   135ce:	beq.w	136f0 <strmode@@Base+0x184>
   135d2:	cmp	r3, #64	; 0x40
   135d4:	ittt	eq
   135d6:	addeq.w	r5, r1, #8
   135da:	moveq	r3, #120	; 0x78
   135dc:	strbeq	r3, [r1, #3]
   135de:	bne.n	136a2 <strmode@@Base+0x136>
   135e0:	tst.w	r0, #32
   135e4:	and.w	r3, r0, #1032	; 0x408
   135e8:	ite	ne
   135ea:	movne	r1, #114	; 0x72
   135ec:	moveq	r1, #45	; 0x2d
   135ee:	tst.w	r0, #16
   135f2:	strb	r1, [r4, #0]
   135f4:	ite	ne
   135f6:	movne	r1, #119	; 0x77
   135f8:	moveq	r1, #45	; 0x2d
   135fa:	cmp.w	r3, #1024	; 0x400
   135fe:	strb	r1, [r2, #0]
   13600:	beq.n	136c6 <strmode@@Base+0x15a>
   13602:	bgt.n	1367c <strmode@@Base+0x110>
   13604:	cmp	r3, #0
   13606:	beq.n	136be <strmode@@Base+0x152>
   13608:	cmp	r3, #8
   1360a:	ittt	eq
   1360c:	moveq	r3, #120	; 0x78
   1360e:	strbeq	r3, [r7, #0]
   13610:	addeq	r3, r5, #1
   13612:	bne.n	1368a <strmode@@Base+0x11e>
   13614:	tst.w	r0, #4
   13618:	movw	r2, #513	; 0x201
   1361c:	ite	ne
   1361e:	movne	r1, #114	; 0x72
   13620:	moveq	r1, #45	; 0x2d
   13622:	tst.w	r0, #2
   13626:	and.w	r0, r0, r2
   1362a:	strb	r1, [r6, #0]
   1362c:	ite	ne
   1362e:	movne	r1, #119	; 0x77
   13630:	moveq	r1, #45	; 0x2d
   13632:	cmp.w	r0, #512	; 0x200
   13636:	strb	r1, [r5, #0]
   13638:	beq.n	136ce <strmode@@Base+0x162>
   1363a:	cmp	r0, r2
   1363c:	beq.n	136de <strmode@@Base+0x172>
   1363e:	cmp	r0, #0
   13640:	beq.n	136d6 <strmode@@Base+0x16a>
   13642:	cmp	r0, #1
   13644:	itt	eq
   13646:	moveq	r2, #120	; 0x78
   13648:	strbeq.w	r2, [r3], #1
   1364c:	movs	r1, #32
   1364e:	movs	r2, #0
   13650:	strb	r1, [r3, #0]
   13652:	strb	r2, [r3, #1]
   13654:	pop	{r4, r5, r6, r7}
   13656:	bx	lr
   13658:	cmp.w	r3, #40960	; 0xa000
   1365c:	beq.n	13706 <strmode@@Base+0x19a>
   1365e:	cmp.w	r3, #49152	; 0xc000
   13662:	itt	eq
   13664:	moveq	r3, #115	; 0x73
   13666:	strbeq	r3, [r1, #0]
   13668:	beq.n	13592 <strmode@@Base+0x26>
   1366a:	cmp.w	r3, #32768	; 0x8000
   1366e:	itt	eq
   13670:	moveq	r3, #45	; 0x2d
   13672:	strbeq	r3, [r1, #0]
   13674:	beq.n	13592 <strmode@@Base+0x26>
   13676:	movs	r3, #63	; 0x3f
   13678:	strb	r3, [r1, #0]
   1367a:	b.n	13592 <strmode@@Base+0x26>
   1367c:	cmp.w	r3, #1032	; 0x408
   13680:	ittt	eq
   13682:	addeq	r3, r5, #1
   13684:	moveq	r2, #115	; 0x73
   13686:	strbeq	r2, [r7, #0]
   13688:	beq.n	13614 <strmode@@Base+0xa8>
   1368a:	mov	r3, r5
   1368c:	mov	r5, r6
   1368e:	mov	r6, r7
   13690:	b.n	13614 <strmode@@Base+0xa8>
   13692:	cmp.w	r3, #2112	; 0x840
   13696:	ittt	eq
   13698:	addeq.w	r5, r1, #8
   1369c:	moveq	r3, #115	; 0x73
   1369e:	strbeq	r3, [r1, #3]
   136a0:	beq.n	135e0 <strmode@@Base+0x74>
   136a2:	mov	r5, r6
   136a4:	mov	r6, r7
   136a6:	mov	r7, r2
   136a8:	mov	r2, r4
   136aa:	mov	r4, ip
   136ac:	b.n	135e0 <strmode@@Base+0x74>
   136ae:	cmp.w	r3, #4096	; 0x1000
   136b2:	itt	eq
   136b4:	moveq	r3, #112	; 0x70
   136b6:	strbeq	r3, [r1, #0]
   136b8:	beq.w	13592 <strmode@@Base+0x26>
   136bc:	b.n	13676 <strmode@@Base+0x10a>
   136be:	movs	r3, #45	; 0x2d
   136c0:	strb	r3, [r7, #0]
   136c2:	adds	r3, r5, #1
   136c4:	b.n	13614 <strmode@@Base+0xa8>
   136c6:	movs	r3, #83	; 0x53
   136c8:	strb	r3, [r7, #0]
   136ca:	adds	r3, r5, #1
   136cc:	b.n	13614 <strmode@@Base+0xa8>
   136ce:	movs	r2, #84	; 0x54
   136d0:	strb.w	r2, [r3], #1
   136d4:	b.n	1364c <strmode@@Base+0xe0>
   136d6:	movs	r2, #45	; 0x2d
   136d8:	strb.w	r2, [r3], #1
   136dc:	b.n	1364c <strmode@@Base+0xe0>
   136de:	movs	r2, #116	; 0x74
   136e0:	strb.w	r2, [r3], #1
   136e4:	b.n	1364c <strmode@@Base+0xe0>
   136e6:	movs	r3, #83	; 0x53
   136e8:	add.w	r5, r1, #8
   136ec:	strb	r3, [r1, #3]
   136ee:	b.n	135e0 <strmode@@Base+0x74>
   136f0:	movs	r3, #45	; 0x2d
   136f2:	add.w	r5, r1, #8
   136f6:	strb	r3, [r1, #3]
   136f8:	b.n	135e0 <strmode@@Base+0x74>
   136fa:	movs	r3, #98	; 0x62
   136fc:	strb	r3, [r1, #0]
   136fe:	b.n	13592 <strmode@@Base+0x26>
   13700:	movs	r3, #99	; 0x63
   13702:	strb	r3, [r1, #0]
   13704:	b.n	13592 <strmode@@Base+0x26>
   13706:	movs	r3, #108	; 0x6c
   13708:	strb	r3, [r1, #0]
   1370a:	b.n	13592 <strmode@@Base+0x26>

0001370c <strtonum@@Base>:
   1370c:	ldr.w	ip, [pc, #288]	; 13830 <strtonum@@Base+0x124>
   13710:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13714:	add	ip, pc
   13716:	ldr.w	r9, [pc, #284]	; 13834 <strtonum@@Base+0x128>
   1371a:	mov	lr, r3
   1371c:	mov	r6, r2
   1371e:	ldr.w	r8, [pc, #280]	; 13838 <strtonum@@Base+0x12c>
   13722:	mov	r5, r0
   13724:	add	r9, pc
   13726:	ldmia.w	ip!, {r0, r1, r2, r3}
   1372a:	sub	sp, #44	; 0x2c
   1372c:	ldr.w	r8, [r9, r8]
   13730:	add	r4, sp, #4
   13732:	mov	r7, lr
   13734:	ldrd	sl, fp, [sp, #80]	; 0x50
   13738:	ldr.w	r8, [r8]
   1373c:	str.w	r8, [sp, #36]	; 0x24
   13740:	mov.w	r8, #0
   13744:	ldr.w	r8, [sp, #88]	; 0x58
   13748:	stmia	r4!, {r0, r1, r2, r3}
   1374a:	ldmia.w	ip, {r0, r1, r2, r3}
   1374e:	stmia.w	r4, {r0, r1, r2, r3}
   13752:	blx	2900 <__errno_location@plt>
   13756:	cmp	sl, r6
   13758:	mov.w	r3, #0
   1375c:	ldr.w	r9, [r0]
   13760:	mov	r4, r0
   13762:	str	r3, [r0, #0]
   13764:	sbcs.w	r3, fp, r7
   13768:	bge.n	137a4 <strtonum@@Base+0x98>
   1376a:	movs	r3, #1
   1376c:	add	r2, sp, #40	; 0x28
   1376e:	add.w	r3, r2, r3, lsl #3
   13772:	ldr.w	r1, [r3, #-32]
   13776:	cmp.w	r8, #0
   1377a:	beq.n	137f0 <strtonum@@Base+0xe4>
   1377c:	ldr.w	r0, [r3, #-36]
   13780:	movs	r2, #0
   13782:	movs	r3, #0
   13784:	str.w	r0, [r8]
   13788:	str	r1, [r4, #0]
   1378a:	ldr	r0, [pc, #176]	; (1383c <strtonum@@Base+0x130>)
   1378c:	ldr	r1, [pc, #168]	; (13838 <strtonum@@Base+0x12c>)
   1378e:	add	r0, pc
   13790:	ldr	r1, [r0, r1]
   13792:	ldr	r0, [r1, #0]
   13794:	ldr	r1, [sp, #36]	; 0x24
   13796:	eors	r0, r1
   13798:	bne.n	1382a <strtonum@@Base+0x11e>
   1379a:	mov	r0, r2
   1379c:	mov	r1, r3
   1379e:	add	sp, #44	; 0x2c
   137a0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   137a4:	movs	r2, #10
   137a6:	mov	r1, sp
   137a8:	mov	r0, r5
   137aa:	blx	23a0 <strtoll@plt>
   137ae:	ldr.w	ip, [sp]
   137b2:	cmp	ip, r5
   137b4:	mov	r2, r0
   137b6:	mov	r3, r1
   137b8:	beq.n	1376a <strtonum@@Base+0x5e>
   137ba:	ldrb.w	r1, [ip]
   137be:	cmp	r1, #0
   137c0:	bne.n	1376a <strtonum@@Base+0x5e>
   137c2:	cmp.w	r3, #2147483648	; 0x80000000
   137c6:	it	eq
   137c8:	cmpeq	r2, #0
   137ca:	beq.n	137f8 <strtonum@@Base+0xec>
   137cc:	cmp	r2, r6
   137ce:	sbcs.w	r1, r3, r7
   137d2:	blt.n	13806 <strtonum@@Base+0xfa>
   137d4:	mvn.w	r1, #2147483648	; 0x80000000
   137d8:	cmp	r3, r1
   137da:	mov.w	r0, #4294967295	; 0xffffffff
   137de:	it	eq
   137e0:	cmpeq	r2, r0
   137e2:	beq.n	1381c <strtonum@@Base+0x110>
   137e4:	cmp	sl, r2
   137e6:	sbcs.w	r1, fp, r3
   137ea:	bge.n	1380a <strtonum@@Base+0xfe>
   137ec:	movs	r3, #3
   137ee:	b.n	1376c <strtonum@@Base+0x60>
   137f0:	movs	r2, #0
   137f2:	movs	r3, #0
   137f4:	str	r1, [r4, #0]
   137f6:	b.n	1378a <strtonum@@Base+0x7e>
   137f8:	ldr	r1, [r4, #0]
   137fa:	cmp	r1, #34	; 0x22
   137fc:	beq.n	13806 <strtonum@@Base+0xfa>
   137fe:	cmp	r7, r3
   13800:	it	eq
   13802:	cmpeq	r6, r2
   13804:	beq.n	1380a <strtonum@@Base+0xfe>
   13806:	movs	r3, #2
   13808:	b.n	1376c <strtonum@@Base+0x60>
   1380a:	cmp.w	r8, #0
   1380e:	beq.n	13824 <strtonum@@Base+0x118>
   13810:	ldr	r1, [sp, #4]
   13812:	str.w	r1, [r8]
   13816:	str.w	r9, [r4]
   1381a:	b.n	1378a <strtonum@@Base+0x7e>
   1381c:	ldr	r1, [r4, #0]
   1381e:	cmp	r1, #34	; 0x22
   13820:	bne.n	137e4 <strtonum@@Base+0xd8>
   13822:	b.n	137ec <strtonum@@Base+0xe0>
   13824:	str.w	r9, [r4]
   13828:	b.n	1378a <strtonum@@Base+0x7e>
   1382a:	blx	2698 <__stack_chk_fail@plt>
   1382e:	nop
   13830:	ldr	r0, [r4, #24]
   13832:	movs	r1, r0
   13834:	str	r4, [r3, #92]	; 0x5c
   13836:	movs	r1, r0
   13838:	lsls	r0, r0, #11
   1383a:	movs	r0, r0
   1383c:	str	r2, [r6, #84]	; 0x54
   1383e:	movs	r1, r0
   13840:	cbz	r2, 13866 <strtonum@@Base+0x15a>
   13842:	push	{r4, r5}
   13844:	adds	r5, r0, r2
   13846:	movs	r2, #0
   13848:	ldrb.w	r3, [r0], #1
   1384c:	ldrb.w	r4, [r1], #1
   13850:	cmp	r0, r5
   13852:	eor.w	r3, r3, r4
   13856:	orr.w	r2, r2, r3
   1385a:	bne.n	13848 <strtonum@@Base+0x13c>
   1385c:	subs	r0, r2, #0
   1385e:	pop	{r4, r5}
   13860:	it	ne
   13862:	movne	r0, #1
   13864:	bx	lr
   13866:	mov	r0, r2
   13868:	bx	lr
   1386a:	nop

0001386c <vis@@Base>:
   1386c:	cmp	r1, #92	; 0x5c
   1386e:	push	{r3, r4, r5, r6, r7, lr}
   13870:	mov	r6, r0
   13872:	mov	r4, r1
   13874:	mov	r5, r2
   13876:	mov	r7, r3
   13878:	beq.w	13a48 <vis@@Base+0x1dc>
   1387c:	lsls	r1, r2, #21
   1387e:	bmi.n	138ea <vis@@Base+0x7e>
   13880:	cmp	r4, #255	; 0xff
   13882:	bls.w	13a24 <vis@@Base+0x1b8>
   13886:	sub.w	r3, r4, #32
   1388a:	eor.w	r2, r5, #4
   1388e:	clz	r3, r3
   13892:	lsrs	r3, r3, #5
   13894:	ands.w	r3, r3, r2, lsr #2
   13898:	bne.w	13a66 <vis@@Base+0x1fa>
   1389c:	sub.w	r3, r4, #9
   138a0:	eor.w	r2, r5, #8
   138a4:	clz	r3, r3
   138a8:	lsrs	r3, r3, #5
   138aa:	ands.w	r3, r3, r2, lsr #3
   138ae:	bne.w	13a66 <vis@@Base+0x1fa>
   138b2:	sub.w	r3, r4, #10
   138b6:	eor.w	r2, r5, #16
   138ba:	clz	r3, r3
   138be:	lsrs	r3, r3, #5
   138c0:	ands.w	r3, r3, r2, lsr #4
   138c4:	bne.w	13a66 <vis@@Base+0x1fa>
   138c8:	lsls	r3, r5, #26
   138ca:	bpl.n	138ea <vis@@Base+0x7e>
   138cc:	subs	r3, r4, #7
   138ce:	cmp	r4, #13
   138d0:	it	ne
   138d2:	cmpne	r3, #1
   138d4:	bls.w	13a58 <vis@@Base+0x1ec>
   138d8:	blx	2640 <__ctype_b_loc@plt>
   138dc:	uxtb	r2, r4
   138de:	ldr	r3, [r0, #0]
   138e0:	ldrsh.w	r3, [r3, r2, lsl #1]
   138e4:	cmp	r3, #0
   138e6:	blt.w	13a58 <vis@@Base+0x1ec>
   138ea:	lsls	r0, r5, #30
   138ec:	bmi.n	1396e <vis@@Base+0x102>
   138ee:	and.w	r7, r4, #127	; 0x7f
   138f2:	cmp	r7, #32
   138f4:	beq.w	13a00 <vis@@Base+0x194>
   138f8:	lsls	r1, r5, #31
   138fa:	bmi.w	13a00 <vis@@Base+0x194>
   138fe:	lsls	r3, r5, #23
   13900:	bpl.n	1392a <vis@@Base+0xbe>
   13902:	sub.w	r3, r4, #35	; 0x23
   13906:	sub.w	r2, r4, #91	; 0x5b
   1390a:	clz	r2, r2
   1390e:	cmp	r3, #28
   13910:	mov.w	r2, r2, lsr #5
   13914:	bhi.n	13926 <vis@@Base+0xba>
   13916:	movs	r1, #129	; 0x81
   13918:	movt	r1, #4096	; 0x1000
   1391c:	lsr.w	r3, r1, r3
   13920:	and.w	r3, r3, #1
   13924:	orrs	r2, r3
   13926:	cmp	r2, #0
   13928:	bne.n	13a00 <vis@@Base+0x194>
   1392a:	lsls	r5, r5, #25
   1392c:	itt	pl
   1392e:	movpl	r3, #92	; 0x5c
   13930:	strbpl.w	r3, [r6], #1
   13934:	lsls	r0, r4, #24
   13936:	iteet	pl
   13938:	uxtbpl	r5, r4
   1393a:	movmi	r3, #77	; 0x4d
   1393c:	strbmi.w	r3, [r6], #1
   13940:	movpl	r7, r4
   13942:	it	mi
   13944:	movmi	r5, r7
   13946:	blx	2640 <__ctype_b_loc@plt>
   1394a:	uxtb	r3, r7
   1394c:	ldr	r2, [r0, #0]
   1394e:	adds	r0, r6, #2
   13950:	ldrh.w	r2, [r2, r5, lsl #1]
   13954:	lsls	r1, r2, #30
   13956:	bpl.w	13a84 <vis@@Base+0x218>
   1395a:	cmp	r7, #127	; 0x7f
   1395c:	mov.w	r2, #94	; 0x5e
   13960:	it	ne
   13962:	addne	r3, #64	; 0x40
   13964:	strb	r2, [r6, #0]
   13966:	it	eq
   13968:	moveq	r3, #63	; 0x3f
   1396a:	strb	r3, [r6, #1]
   1396c:	b.n	13a1e <vis@@Base+0x1b2>
   1396e:	cmp	r4, #32
   13970:	bhi.n	138ee <vis@@Base+0x82>
   13972:	add	r3, pc, #8	; (adr r3, 1397c <vis@@Base+0x110>)
   13974:	ldr.w	r2, [r3, r4, lsl #2]
   13978:	add	r3, r2
   1397a:	bx	r3
   1397c:	lsls	r1, r0, #6
   1397e:	movs	r0, r0
   13980:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   13984:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   13988:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   1398c:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   13990:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   13994:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   13998:	lsls	r3, r6, #5
   1399a:	movs	r0, r0
   1399c:	lsls	r5, r4, #5
   1399e:	movs	r0, r0
   139a0:	lsls	r7, r2, #5
   139a2:	movs	r0, r0
   139a4:	lsls	r1, r1, #5
   139a6:	movs	r0, r0
   139a8:	lsls	r3, r7, #4
   139aa:	movs	r0, r0
   139ac:	lsls	r5, r5, #4
   139ae:	movs	r0, r0
   139b0:	lsls	r7, r3, #4
   139b2:	movs	r0, r0
   139b4:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139b8:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139bc:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139c0:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139c4:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139c8:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139cc:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139d0:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139d4:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139d8:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139dc:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139e0:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139e4:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139e8:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139ec:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139f0:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139f4:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139f8:	vminnm.f16	<illegal reg q15.5>, <illegal reg q9.5>, <illegal reg q15.5>
   139fc:	lsls	r1, r2, #4
   139fe:	movs	r0, r0
   13a00:	adds	r0, r6, #4
   13a02:	ubfx	r2, r4, #6, #2
   13a06:	ubfx	r3, r4, #3, #3
   13a0a:	and.w	r4, r4, #7
   13a0e:	adds	r3, #48	; 0x30
   13a10:	adds	r2, #48	; 0x30
   13a12:	adds	r4, #48	; 0x30
   13a14:	strb	r3, [r6, #2]
   13a16:	strb	r2, [r6, #1]
   13a18:	movs	r3, #92	; 0x5c
   13a1a:	strb	r4, [r6, #3]
   13a1c:	strb	r3, [r6, #0]
   13a1e:	movs	r3, #0
   13a20:	strb	r3, [r0, #0]
   13a22:	pop	{r3, r4, r5, r6, r7, pc}
   13a24:	lsls	r2, r4, #24
   13a26:	bmi.w	13886 <vis@@Base+0x1a>
   13a2a:	subs.w	r3, r4, #91	; 0x5b
   13a2e:	sub.w	r2, r4, #35	; 0x23
   13a32:	it	ne
   13a34:	movne	r3, #1
   13a36:	cmp	r2, #28
   13a38:	itttt	ls
   13a3a:	movls	r1, #129	; 0x81
   13a3c:	movtls	r1, #4096	; 0x1000
   13a40:	lsrls.w	r2, r1, r2
   13a44:	bicls	r3, r2
   13a46:	cbz	r3, 13a7c <vis@@Base+0x210>
   13a48:	blx	2640 <__ctype_b_loc@plt>
   13a4c:	ldr	r3, [r0, #0]
   13a4e:	ldrsh.w	r3, [r3, r4, lsl #1]
   13a52:	cmp	r3, #0
   13a54:	bge.w	13886 <vis@@Base+0x1a>
   13a58:	cmp	r4, #34	; 0x22
   13a5a:	bne.n	13a72 <vis@@Base+0x206>
   13a5c:	lsls	r7, r5, #22
   13a5e:	bpl.n	13a66 <vis@@Base+0x1fa>
   13a60:	movs	r3, #92	; 0x5c
   13a62:	strb.w	r3, [r6], #1
   13a66:	mov	r0, r6
   13a68:	movs	r3, #0
   13a6a:	strb.w	r4, [r0], #1
   13a6e:	strb	r3, [r6, #1]
   13a70:	pop	{r3, r4, r5, r6, r7, pc}
   13a72:	cmp	r4, #92	; 0x5c
   13a74:	bne.n	13a66 <vis@@Base+0x1fa>
   13a76:	lsls	r5, r5, #25
   13a78:	bmi.n	13a66 <vis@@Base+0x1fa>
   13a7a:	b.n	13a60 <vis@@Base+0x1f4>
   13a7c:	lsls	r2, r5, #23
   13a7e:	bmi.w	13886 <vis@@Base+0x1a>
   13a82:	b.n	13a48 <vis@@Base+0x1dc>
   13a84:	strb	r3, [r6, #1]
   13a86:	movs	r3, #45	; 0x2d
   13a88:	strb	r3, [r6, #0]
   13a8a:	b.n	13a1e <vis@@Base+0x1b2>
   13a8c:	mov	r0, r6
   13a8e:	movs	r2, #92	; 0x5c
   13a90:	movs	r3, #115	; 0x73
   13a92:	strb.w	r2, [r0], #2
   13a96:	strb	r3, [r6, #1]
   13a98:	b.n	13a1e <vis@@Base+0x1b2>
   13a9a:	mov	r0, r6
   13a9c:	movs	r2, #92	; 0x5c
   13a9e:	movs	r3, #114	; 0x72
   13aa0:	strb.w	r2, [r0], #2
   13aa4:	strb	r3, [r6, #1]
   13aa6:	b.n	13a1e <vis@@Base+0x1b2>
   13aa8:	mov	r0, r6
   13aaa:	movs	r2, #92	; 0x5c
   13aac:	movs	r3, #102	; 0x66
   13aae:	strb.w	r2, [r0], #2
   13ab2:	strb	r3, [r6, #1]
   13ab4:	b.n	13a1e <vis@@Base+0x1b2>
   13ab6:	mov	r0, r6
   13ab8:	movs	r2, #92	; 0x5c
   13aba:	movs	r3, #118	; 0x76
   13abc:	strb.w	r2, [r0], #2
   13ac0:	strb	r3, [r6, #1]
   13ac2:	b.n	13a1e <vis@@Base+0x1b2>
   13ac4:	mov	r0, r6
   13ac6:	movs	r2, #92	; 0x5c
   13ac8:	movs	r3, #110	; 0x6e
   13aca:	strb.w	r2, [r0], #2
   13ace:	strb	r3, [r6, #1]
   13ad0:	b.n	13a1e <vis@@Base+0x1b2>
   13ad2:	mov	r0, r6
   13ad4:	movs	r2, #92	; 0x5c
   13ad6:	movs	r3, #116	; 0x74
   13ad8:	strb.w	r2, [r0], #2
   13adc:	strb	r3, [r6, #1]
   13ade:	b.n	13a1e <vis@@Base+0x1b2>
   13ae0:	mov	r0, r6
   13ae2:	movs	r2, #92	; 0x5c
   13ae4:	movs	r3, #98	; 0x62
   13ae6:	strb.w	r2, [r0], #2
   13aea:	strb	r3, [r6, #1]
   13aec:	b.n	13a1e <vis@@Base+0x1b2>
   13aee:	mov	r0, r6
   13af0:	movs	r2, #92	; 0x5c
   13af2:	movs	r3, #97	; 0x61
   13af4:	strb.w	r2, [r0], #2
   13af8:	strb	r3, [r6, #1]
   13afa:	b.n	13a1e <vis@@Base+0x1b2>
   13afc:	sub.w	r3, r7, #48	; 0x30
   13b00:	movs	r2, #48	; 0x30
   13b02:	movs	r1, #92	; 0x5c
   13b04:	strb	r2, [r6, #1]
   13b06:	uxtb	r3, r3
   13b08:	strb	r1, [r6, #0]
   13b0a:	cmp	r3, #7
   13b0c:	itett	ls
   13b0e:	strbls	r2, [r6, #2]
   13b10:	addhi	r0, r6, #2
   13b12:	addls	r0, r6, #4
   13b14:	strbls	r2, [r6, #3]
   13b16:	b.n	13a1e <vis@@Base+0x1b2>

00013b18 <strvis@@Base>:
   13b18:	push	{r3, r4, r5, r6, r7, lr}
   13b1a:	mov	r5, r1
   13b1c:	ldrb	r1, [r1, #0]
   13b1e:	mov	r7, r0
   13b20:	cbz	r1, 13b46 <strvis@@Base+0x2e>
   13b22:	mov	r6, r2
   13b24:	mov	r4, r0
   13b26:	ldrb.w	r3, [r5, #1]!
   13b2a:	mov	r0, r4
   13b2c:	mov	r2, r6
   13b2e:	bl	1386c <vis@@Base>
   13b32:	ldrb	r1, [r5, #0]
   13b34:	mov	r4, r0
   13b36:	cmp	r1, #0
   13b38:	bne.n	13b26 <strvis@@Base+0xe>
   13b3a:	mov	r1, r7
   13b3c:	bl	14db4 <strvisx@@Base+0x1040>
   13b40:	movs	r3, #0
   13b42:	strb	r3, [r4, #0]
   13b44:	pop	{r3, r4, r5, r6, r7, pc}
   13b46:	mov	r4, r0
   13b48:	movs	r3, #0
   13b4a:	mov	r0, r1
   13b4c:	strb	r3, [r4, #0]
   13b4e:	pop	{r3, r4, r5, r6, r7, pc}

00013b50 <strnvis@@Base>:
   13b50:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b54:	sub	sp, #36	; 0x24
   13b56:	add.w	sl, r2, #4294967295	; 0xffffffff
   13b5a:	mov	r6, r3
   13b5c:	str	r2, [sp, #12]
   13b5e:	add	sl, r0
   13b60:	ldr	r2, [pc, #424]	; (13d0c <strnvis@@Base+0x1bc>)
   13b62:	mov	r7, r1
   13b64:	ldr	r3, [pc, #424]	; (13d10 <strnvis@@Base+0x1c0>)
   13b66:	add	r2, pc
   13b68:	ldrb	r4, [r1, #0]
   13b6a:	str	r0, [sp, #8]
   13b6c:	ldr	r3, [r2, r3]
   13b6e:	cmp	r4, #0
   13b70:	it	ne
   13b72:	cmpne	r0, sl
   13b74:	ldr	r3, [r3, #0]
   13b76:	str	r3, [sp, #28]
   13b78:	mov.w	r3, #0
   13b7c:	bcs.w	13cfa <strnvis@@Base+0x1aa>
   13b80:	eor.w	fp, r6, #4
   13b84:	mov	r5, r0
   13b86:	ubfx	r3, fp, #2, #1
   13b8a:	mov	r8, r1
   13b8c:	str	r3, [sp, #4]
   13b8e:	b.n	13c2c <strnvis@@Base+0xdc>
   13b90:	lsls	r1, r6, #21
   13b92:	bmi.n	13bec <strnvis@@Base+0x9c>
   13b94:	lsls	r3, r4, #24
   13b96:	bpl.n	13c96 <strnvis@@Base+0x146>
   13b98:	ldr	r3, [sp, #4]
   13b9a:	cmp	r4, #32
   13b9c:	ite	ne
   13b9e:	movne	r3, #0
   13ba0:	andeq.w	r3, r3, #1
   13ba4:	cmp	r3, #0
   13ba6:	bne.n	13c52 <strnvis@@Base+0x102>
   13ba8:	sub.w	r2, r4, #9
   13bac:	eor.w	r3, r6, #8
   13bb0:	clz	r2, r2
   13bb4:	lsrs	r2, r2, #5
   13bb6:	ands.w	r3, r2, r3, lsr #3
   13bba:	bne.n	13c52 <strnvis@@Base+0x102>
   13bbc:	sub.w	r2, r4, #10
   13bc0:	eor.w	r3, r6, #16
   13bc4:	clz	r2, r2
   13bc8:	lsrs	r2, r2, #5
   13bca:	ands.w	r3, r2, r3, lsr #4
   13bce:	bne.n	13c52 <strnvis@@Base+0x102>
   13bd0:	lsls	r0, r6, #26
   13bd2:	bpl.n	13bec <strnvis@@Base+0x9c>
   13bd4:	subs	r3, r4, #7
   13bd6:	cmp	r4, #13
   13bd8:	it	ne
   13bda:	cmpne	r3, #1
   13bdc:	bls.n	13c3e <strnvis@@Base+0xee>
   13bde:	blx	2640 <__ctype_b_loc@plt>
   13be2:	ldr	r3, [r0, #0]
   13be4:	ldrsh.w	r3, [r3, r4, lsl #1]
   13be8:	cmp	r3, #0
   13bea:	blt.n	13c3e <strnvis@@Base+0xee>
   13bec:	add.w	r9, sp, #20
   13bf0:	mov	r1, r4
   13bf2:	ldrb.w	r3, [r8, #1]
   13bf6:	mov	r2, r6
   13bf8:	mov	r0, r9
   13bfa:	add.w	r7, r8, #1
   13bfe:	bl	1386c <vis@@Base>
   13c02:	mov	r1, r9
   13c04:	bl	14db4 <strvisx@@Base+0x1040>
   13c08:	str	r7, [sp, #0]
   13c0a:	adds	r4, r5, r0
   13c0c:	mov	fp, r0
   13c0e:	cmp	r4, sl
   13c10:	bhi.n	13cc6 <strnvis@@Base+0x176>
   13c12:	mov	r0, r5
   13c14:	mov	r1, r9
   13c16:	mov	r2, fp
   13c18:	mov	r5, r4
   13c1a:	blx	24c4 <memcpy@plt>
   13c1e:	ldr	r3, [sp, #0]
   13c20:	ldrb	r4, [r3, #0]
   13c22:	mov	r8, r3
   13c24:	cmp	r4, #0
   13c26:	it	ne
   13c28:	cmpne	r5, sl
   13c2a:	bcs.n	13c6c <strnvis@@Base+0x11c>
   13c2c:	cmp	r4, #92	; 0x5c
   13c2e:	bne.n	13b90 <strnvis@@Base+0x40>
   13c30:	blx	2640 <__ctype_b_loc@plt>
   13c34:	ldr	r3, [r0, #0]
   13c36:	ldrsh.w	r3, [r3, r4, lsl #1]
   13c3a:	cmp	r3, #0
   13c3c:	bge.n	13b98 <strnvis@@Base+0x48>
   13c3e:	cmp	r4, #34	; 0x22
   13c40:	bne.n	13cbc <strnvis@@Base+0x16c>
   13c42:	lsls	r1, r6, #22
   13c44:	bpl.n	13c52 <strnvis@@Base+0x102>
   13c46:	adds	r3, r5, #1
   13c48:	cmp	r3, sl
   13c4a:	bcs.n	13d00 <strnvis@@Base+0x1b0>
   13c4c:	movs	r2, #92	; 0x5c
   13c4e:	strb	r2, [r5, #0]
   13c50:	mov	r5, r3
   13c52:	add.w	r3, r8, #1
   13c56:	strb.w	r4, [r5], #1
   13c5a:	mov.w	fp, #1
   13c5e:	ldrb	r4, [r3, #0]
   13c60:	mov	r7, r3
   13c62:	mov	r8, r3
   13c64:	cmp	r4, #0
   13c66:	it	ne
   13c68:	cmpne	r5, sl
   13c6a:	bcc.n	13c2c <strnvis@@Base+0xdc>
   13c6c:	add.w	r4, r5, fp
   13c70:	ldr	r3, [sp, #12]
   13c72:	cbnz	r3, 13ccc <strnvis@@Base+0x17c>
   13c74:	cmp	sl, r4
   13c76:	bcc.n	13cd6 <strnvis@@Base+0x186>
   13c78:	ldr	r1, [sp, #8]
   13c7a:	mov	r0, r5
   13c7c:	bl	14db4 <strvisx@@Base+0x1040>
   13c80:	ldr	r2, [pc, #144]	; (13d14 <strnvis@@Base+0x1c4>)
   13c82:	ldr	r3, [pc, #140]	; (13d10 <strnvis@@Base+0x1c0>)
   13c84:	add	r2, pc
   13c86:	ldr	r3, [r2, r3]
   13c88:	ldr	r2, [r3, #0]
   13c8a:	ldr	r3, [sp, #28]
   13c8c:	eors	r2, r3
   13c8e:	bne.n	13d06 <strnvis@@Base+0x1b6>
   13c90:	add	sp, #36	; 0x24
   13c92:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13c96:	subs.w	r3, r4, #91	; 0x5b
   13c9a:	sub.w	r1, r4, #35	; 0x23
   13c9e:	it	ne
   13ca0:	movne	r3, #1
   13ca2:	cmp	r1, #28
   13ca4:	itttt	ls
   13ca6:	movls	r2, #129	; 0x81
   13ca8:	movtls	r2, #4096	; 0x1000
   13cac:	lsrls	r2, r1
   13cae:	bicls	r3, r2
   13cb0:	cmp	r3, #0
   13cb2:	bne.n	13c30 <strnvis@@Base+0xe0>
   13cb4:	lsls	r7, r6, #23
   13cb6:	bmi.w	13b98 <strnvis@@Base+0x48>
   13cba:	b.n	13c30 <strnvis@@Base+0xe0>
   13cbc:	cmp	r4, #92	; 0x5c
   13cbe:	bne.n	13c52 <strnvis@@Base+0x102>
   13cc0:	lsls	r3, r6, #25
   13cc2:	bmi.n	13c52 <strnvis@@Base+0x102>
   13cc4:	b.n	13c46 <strnvis@@Base+0xf6>
   13cc6:	ldr	r3, [sp, #12]
   13cc8:	mov	r7, r8
   13cca:	cbz	r3, 13cd6 <strnvis@@Base+0x186>
   13ccc:	cmp	sl, r4
   13cce:	mov.w	r3, #0
   13cd2:	strb	r3, [r5, #0]
   13cd4:	bcs.n	13c78 <strnvis@@Base+0x128>
   13cd6:	ldrb	r1, [r7, #0]
   13cd8:	cmp	r1, #0
   13cda:	beq.n	13c78 <strnvis@@Base+0x128>
   13cdc:	add	r4, sp, #20
   13cde:	ldrb.w	r3, [r7, #1]!
   13ce2:	mov	r2, r6
   13ce4:	mov	r0, r4
   13ce6:	bl	1386c <vis@@Base>
   13cea:	mov	r1, r4
   13cec:	bl	14db4 <strvisx@@Base+0x1040>
   13cf0:	ldrb	r1, [r7, #0]
   13cf2:	add	r5, r0
   13cf4:	cmp	r1, #0
   13cf6:	bne.n	13cde <strnvis@@Base+0x18e>
   13cf8:	b.n	13c78 <strnvis@@Base+0x128>
   13cfa:	ldr	r5, [sp, #8]
   13cfc:	mov	r4, r5
   13cfe:	b.n	13c70 <strnvis@@Base+0x120>
   13d00:	adds	r4, r5, #2
   13d02:	mov	r7, r8
   13d04:	b.n	13c70 <strnvis@@Base+0x120>
   13d06:	blx	2698 <__stack_chk_fail@plt>
   13d0a:	nop
   13d0c:	str	r2, [r3, #24]
   13d0e:	movs	r1, r0
   13d10:	lsls	r0, r0, #11
   13d12:	movs	r0, r0
   13d14:	str	r4, [r7, #4]
   13d16:	movs	r1, r0

00013d18 <stravis@@Base>:
   13d18:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13d1c:	mov	r6, r0
   13d1e:	mov	r0, r1
   13d20:	mov	r5, r1
   13d22:	mov	r7, r2
   13d24:	blx	24a0 <strlen@plt>
   13d28:	movs	r1, #4
   13d2a:	adds	r2, r0, #1
   13d2c:	movs	r0, #0
   13d2e:	blx	2320 <reallocarray@plt>
   13d32:	cbz	r0, 13d64 <stravis@@Base+0x4c>
   13d34:	mov	r2, r7
   13d36:	mov	r1, r5
   13d38:	mov	r4, r0
   13d3a:	bl	13b18 <strvis@@Base>
   13d3e:	mov	r5, r0
   13d40:	blx	2900 <__errno_location@plt>
   13d44:	movs	r1, #1
   13d46:	mov	r7, r0
   13d48:	mov	r0, r5
   13d4a:	bl	14d50 <strvisx@@Base+0xfdc>
   13d4e:	ldr.w	r8, [r7]
   13d52:	mov	r1, r0
   13d54:	mov	r0, r4
   13d56:	blx	286c <realloc@plt>
   13d5a:	str	r0, [r6, #0]
   13d5c:	cbz	r0, 13d6a <stravis@@Base+0x52>
   13d5e:	mov	r0, r5
   13d60:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13d64:	mov.w	r5, #4294967295	; 0xffffffff
   13d68:	b.n	13d5e <stravis@@Base+0x46>
   13d6a:	str	r4, [r6, #0]
   13d6c:	str.w	r8, [r7]
   13d70:	b.n	13d5e <stravis@@Base+0x46>
   13d72:	nop

00013d74 <strvisx@@Base>:
   13d74:	cmp	r2, #1
   13d76:	push	{r3, r4, r5, r6, r7, lr}
   13d78:	mov	r6, r0
   13d7a:	mov	r4, r1
   13d7c:	mov	r7, r3
   13d7e:	bls.n	13dac <strvisx@@Base+0x38>
   13d80:	subs	r5, r2, #1
   13d82:	add	r5, r1
   13d84:	ldrb	r1, [r4, #0]
   13d86:	mov	r2, r7
   13d88:	ldrb.w	r3, [r4, #1]!
   13d8c:	bl	1386c <vis@@Base>
   13d90:	cmp	r5, r4
   13d92:	bne.n	13d84 <strvisx@@Base+0x10>
   13d94:	ldrb	r1, [r5, #0]
   13d96:	mov	r2, r7
   13d98:	movs	r3, #0
   13d9a:	bl	1386c <vis@@Base>
   13d9e:	mov	r1, r6
   13da0:	mov	r6, r0
   13da2:	bl	14db4 <strvisx@@Base+0x1040>
   13da6:	movs	r3, #0
   13da8:	strb	r3, [r6, #0]
   13daa:	pop	{r3, r4, r5, r6, r7, pc}
   13dac:	mov	r0, r2
   13dae:	cbnz	r2, 13db6 <strvisx@@Base+0x42>
   13db0:	movs	r3, #0
   13db2:	strb	r3, [r6, #0]
   13db4:	pop	{r3, r4, r5, r6, r7, pc}
   13db6:	mov	r5, r1
   13db8:	mov	r0, r6
   13dba:	b.n	13d94 <strvisx@@Base+0x20>
   13dbc:	push	{r4, r5, r6, lr}
   13dbe:	sub	sp, #40	; 0x28
   13dc0:	ldr	r6, [pc, #112]	; (13e34 <strvisx@@Base+0xc0>)
   13dc2:	add	r5, sp, #16
   13dc4:	ldr	r4, [pc, #112]	; (13e38 <strvisx@@Base+0xc4>)
   13dc6:	add	r1, sp, #12
   13dc8:	add	r6, pc
   13dca:	str	r1, [sp, #0]
   13dcc:	movs	r2, #25
   13dce:	mov	r3, r5
   13dd0:	ldr	r4, [r6, r4]
   13dd2:	movs	r1, #1
   13dd4:	movs	r6, #16
   13dd6:	ldr	r4, [r4, #0]
   13dd8:	str	r4, [sp, #36]	; 0x24
   13dda:	mov.w	r4, #0
   13dde:	mov	r4, r0
   13de0:	str	r6, [sp, #12]
   13de2:	blx	2890 <getsockopt@plt>
   13de6:	adds	r0, #1
   13de8:	beq.n	13e10 <strvisx@@Base+0x9c>
   13dea:	ldr	r2, [sp, #12]
   13dec:	add	r1, sp, #40	; 0x28
   13dee:	mov	r0, r5
   13df0:	movs	r3, #0
   13df2:	add	r2, r1
   13df4:	strb.w	r3, [r2, #-24]
   13df8:	blx	265c <strdup@plt+0x4>
   13dfc:	ldr	r2, [pc, #60]	; (13e3c <strvisx@@Base+0xc8>)
   13dfe:	ldr	r3, [pc, #56]	; (13e38 <strvisx@@Base+0xc4>)
   13e00:	add	r2, pc
   13e02:	ldr	r3, [r2, r3]
   13e04:	ldr	r2, [r3, #0]
   13e06:	ldr	r3, [sp, #36]	; 0x24
   13e08:	eors	r2, r3
   13e0a:	bne.n	13e2e <strvisx@@Base+0xba>
   13e0c:	add	sp, #40	; 0x28
   13e0e:	pop	{r4, r5, r6, pc}
   13e10:	blx	2900 <__errno_location@plt>
   13e14:	ldr	r0, [r0, #0]
   13e16:	blx	21f4 <strerror@plt+0x4>
   13e1a:	ldr	r1, [pc, #36]	; (13e40 <strvisx@@Base+0xcc>)
   13e1c:	mov	r2, r4
   13e1e:	add	r1, pc
   13e20:	mov	r3, r0
   13e22:	ldr	r0, [pc, #32]	; (13e44 <strvisx@@Base+0xd0>)
   13e24:	add	r0, pc
   13e26:	bl	cc5c <error@@Base>
   13e2a:	movs	r0, #0
   13e2c:	b.n	13dfc <strvisx@@Base+0x88>
   13e2e:	blx	2698 <__stack_chk_fail@plt>
   13e32:	nop
   13e34:	ldrsh	r0, [r7, r4]
   13e36:	movs	r1, r0
   13e38:	lsls	r0, r0, #11
   13e3a:	movs	r0, r0
   13e3c:	ldrsh	r0, [r0, r4]
   13e3e:	movs	r1, r0
   13e40:	str	r2, [r5, r3]
   13e42:	movs	r0, r0
   13e44:	ldr	r7, [pc, #736]	; (14128 <strvisx@@Base+0x3b4>)
   13e46:	movs	r0, r0
   13e48:	push	{r4, r5, r6, lr}
   13e4a:	mov	r6, r0
   13e4c:	sub	sp, #8
   13e4e:	mov	r0, r1
   13e50:	mov	r5, r1
   13e52:	blx	24a0 <strlen@plt>
   13e56:	mov	r3, r5
   13e58:	movs	r2, #25
   13e5a:	movs	r1, #1
   13e5c:	str	r0, [sp, #0]
   13e5e:	mov	r0, r6
   13e60:	blx	289c <setsockopt@plt>
   13e64:	adds	r3, r0, #1
   13e66:	it	ne
   13e68:	movne	r4, #0
   13e6a:	beq.n	13e72 <strvisx@@Base+0xfe>
   13e6c:	mov	r0, r4
   13e6e:	add	sp, #8
   13e70:	pop	{r4, r5, r6, pc}
   13e72:	mov	r4, r0
   13e74:	blx	2900 <__errno_location@plt>
   13e78:	ldr	r0, [r0, #0]
   13e7a:	blx	21f4 <strerror@plt+0x4>
   13e7e:	ldr	r1, [pc, #20]	; (13e94 <strvisx@@Base+0x120>)
   13e80:	mov	r3, r5
   13e82:	mov	r2, r6
   13e84:	add	r1, pc
   13e86:	adds	r1, #16
   13e88:	str	r0, [sp, #0]
   13e8a:	ldr	r0, [pc, #12]	; (13e98 <strvisx@@Base+0x124>)
   13e8c:	add	r0, pc
   13e8e:	bl	cc5c <error@@Base>
   13e92:	b.n	13e6c <strvisx@@Base+0xf8>
   13e94:	str	r4, [r0, r2]
   13e96:	movs	r0, r0
   13e98:	ldr	r7, [pc, #480]	; (1407c <strvisx@@Base+0x308>)
   13e9a:	movs	r0, r0
   13e9c:	push	{r4, r5, lr}
   13e9e:	movs	r2, #0
   13ea0:	sub	sp, #12
   13ea2:	mov	r5, r0
   13ea4:	movs	r1, #1
   13ea6:	movs	r0, #2
   13ea8:	blx	2458 <socket@plt>
   13eac:	adds	r3, r0, #1
   13eae:	it	eq
   13eb0:	moveq	r0, #0
   13eb2:	beq.n	13ed6 <strvisx@@Base+0x162>
   13eb4:	mov	r4, r0
   13eb6:	mov	r0, r5
   13eb8:	blx	24a0 <strlen@plt>
   13ebc:	mov	r3, r5
   13ebe:	movs	r2, #25
   13ec0:	movs	r1, #1
   13ec2:	str	r0, [sp, #0]
   13ec4:	mov	r0, r4
   13ec6:	blx	289c <setsockopt@plt>
   13eca:	adds	r0, #1
   13ecc:	mov	r0, r4
   13ece:	beq.n	13eda <strvisx@@Base+0x166>
   13ed0:	blx	25ec <close@plt+0x4>
   13ed4:	movs	r0, #1
   13ed6:	add	sp, #12
   13ed8:	pop	{r4, r5, pc}
   13eda:	blx	25ec <close@plt+0x4>
   13ede:	movs	r0, #0
   13ee0:	add	sp, #12
   13ee2:	pop	{r4, r5, pc}
   13ee4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13ee8:	mov	r7, r1
   13eea:	ldr	r1, [pc, #356]	; (14050 <strvisx@@Base+0x2dc>)
   13eec:	sub	sp, #48	; 0x30
   13eee:	ldr	r3, [pc, #356]	; (14054 <strvisx@@Base+0x2e0>)
   13ef0:	mov	r6, r0
   13ef2:	add	r1, pc
   13ef4:	mov	r5, r2
   13ef6:	ldr	r3, [r1, r3]
   13ef8:	ldr	r3, [r3, #0]
   13efa:	str	r3, [sp, #44]	; 0x2c
   13efc:	mov.w	r3, #0
   13f00:	cbz	r2, 13f06 <strvisx@@Base+0x192>
   13f02:	movs	r3, #0
   13f04:	str	r3, [r2, #0]
   13f06:	ldr.w	r8, [pc, #336]	; 14058 <strvisx@@Base+0x2e4>
   13f0a:	movs	r1, #2
   13f0c:	add	r8, pc
   13f0e:	mov	r0, r8
   13f10:	blx	2578 <open64@plt>
   13f14:	adds	r3, r0, #1
   13f16:	mov	r4, r0
   13f18:	beq.n	1400e <strvisx@@Base+0x29a>
   13f1a:	add.w	r8, sp, #12
   13f1e:	movs	r2, #32
   13f20:	movs	r1, #0
   13f22:	mov	r0, r8
   13f24:	blx	2354 <memset@plt>
   13f28:	cmp	r7, #2
   13f2a:	beq.n	13faa <strvisx@@Base+0x236>
   13f2c:	movw	r3, #4097	; 0x1001
   13f30:	ldr	r2, [pc, #296]	; (1405c <strvisx@@Base+0x2e8>)
   13f32:	strh.w	r3, [sp, #28]
   13f36:	mvn.w	r3, #2147483648	; 0x80000000
   13f3a:	cmp	r6, r3
   13f3c:	add	r2, pc
   13f3e:	beq.n	13fbe <strvisx@@Base+0x24a>
   13f40:	movw	r3, #65534	; 0xfffe
   13f44:	movt	r3, #32767	; 0x7fff
   13f48:	cmp	r6, r3
   13f4a:	beq.n	1402c <strvisx@@Base+0x2b8>
   13f4c:	movs	r3, #16
   13f4e:	strd	r2, r6, [sp]
   13f52:	mov	r1, r3
   13f54:	movs	r2, #1
   13f56:	mov	r0, r8
   13f58:	blx	25b8 <__snprintf_chk@plt>
   13f5c:	mov	r2, r8
   13f5e:	movw	r1, #21706	; 0x54ca
   13f62:	mov	r0, r4
   13f64:	movt	r1, #16388	; 0x4004
   13f68:	blx	247c <ioctl@plt>
   13f6c:	adds	r0, #1
   13f6e:	beq.n	13fe6 <strvisx@@Base+0x272>
   13f70:	ldr	r1, [pc, #236]	; (14060 <strvisx@@Base+0x2ec>)
   13f72:	mov	r3, r7
   13f74:	ldr	r0, [pc, #236]	; (14064 <strvisx@@Base+0x2f0>)
   13f76:	mov	r2, r8
   13f78:	add	r1, pc
   13f7a:	str	r4, [sp, #0]
   13f7c:	adds	r1, #32
   13f7e:	add	r0, pc
   13f80:	bl	cd90 <error@@Base+0x134>
   13f84:	cbz	r5, 13f92 <strvisx@@Base+0x21e>
   13f86:	mov	r0, r8
   13f88:	blx	265c <strdup@plt+0x4>
   13f8c:	str	r0, [r5, #0]
   13f8e:	cmp	r0, #0
   13f90:	beq.n	14002 <strvisx@@Base+0x28e>
   13f92:	ldr	r2, [pc, #212]	; (14068 <strvisx@@Base+0x2f4>)
   13f94:	ldr	r3, [pc, #188]	; (14054 <strvisx@@Base+0x2e0>)
   13f96:	add	r2, pc
   13f98:	ldr	r3, [r2, r3]
   13f9a:	ldr	r2, [r3, #0]
   13f9c:	ldr	r3, [sp, #44]	; 0x2c
   13f9e:	eors	r2, r3
   13fa0:	bne.n	1404a <strvisx@@Base+0x2d6>
   13fa2:	mov	r0, r4
   13fa4:	add	sp, #48	; 0x30
   13fa6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13faa:	movw	r3, #4098	; 0x1002
   13fae:	ldr	r2, [pc, #188]	; (1406c <strvisx@@Base+0x2f8>)
   13fb0:	strh.w	r3, [sp, #28]
   13fb4:	mvn.w	r3, #2147483648	; 0x80000000
   13fb8:	cmp	r6, r3
   13fba:	add	r2, pc
   13fbc:	bne.n	13f40 <strvisx@@Base+0x1cc>
   13fbe:	movw	r1, #21706	; 0x54ca
   13fc2:	mov	r2, r8
   13fc4:	movt	r1, #16388	; 0x4004
   13fc8:	mov	r0, r4
   13fca:	blx	247c <ioctl@plt>
   13fce:	adds	r0, #1
   13fd0:	beq.n	13fe6 <strvisx@@Base+0x272>
   13fd2:	ldr	r1, [pc, #156]	; (14070 <strvisx@@Base+0x2fc>)
   13fd4:	mov	r2, r7
   13fd6:	ldr	r0, [pc, #156]	; (14074 <strvisx@@Base+0x300>)
   13fd8:	mov	r3, r4
   13fda:	add	r1, pc
   13fdc:	add	r0, pc
   13fde:	adds	r1, #32
   13fe0:	bl	cd90 <error@@Base+0x134>
   13fe4:	b.n	13f84 <strvisx@@Base+0x210>
   13fe6:	blx	2900 <__errno_location@plt>
   13fea:	ldr	r0, [r0, #0]
   13fec:	blx	21f4 <strerror@plt+0x4>
   13ff0:	ldr	r1, [pc, #132]	; (14078 <strvisx@@Base+0x304>)
   13ff2:	mov	r2, r7
   13ff4:	add	r1, pc
   13ff6:	adds	r1, #32
   13ff8:	mov	r3, r0
   13ffa:	ldr	r0, [pc, #128]	; (1407c <strvisx@@Base+0x308>)
   13ffc:	add	r0, pc
   13ffe:	bl	cd90 <error@@Base+0x134>
   14002:	mov	r0, r4
   14004:	mov.w	r4, #4294967295	; 0xffffffff
   14008:	blx	25ec <close@plt+0x4>
   1400c:	b.n	13f92 <strvisx@@Base+0x21e>
   1400e:	blx	2900 <__errno_location@plt>
   14012:	ldr	r0, [r0, #0]
   14014:	blx	21f4 <strerror@plt+0x4>
   14018:	ldr	r1, [pc, #100]	; (14080 <strvisx@@Base+0x30c>)
   1401a:	mov	r2, r8
   1401c:	add	r1, pc
   1401e:	adds	r1, #32
   14020:	mov	r3, r0
   14022:	ldr	r0, [pc, #96]	; (14084 <strvisx@@Base+0x310>)
   14024:	add	r0, pc
   14026:	bl	cd90 <error@@Base+0x134>
   1402a:	b.n	13f92 <strvisx@@Base+0x21e>
   1402c:	blx	2900 <__errno_location@plt>
   14030:	ldr	r0, [r0, #0]
   14032:	blx	21f4 <strerror@plt+0x4>
   14036:	ldr	r1, [pc, #80]	; (14088 <strvisx@@Base+0x314>)
   14038:	mov	r2, r6
   1403a:	add	r1, pc
   1403c:	adds	r1, #32
   1403e:	mov	r3, r0
   14040:	ldr	r0, [pc, #72]	; (1408c <strvisx@@Base+0x318>)
   14042:	add	r0, pc
   14044:	bl	cd90 <error@@Base+0x134>
   14048:	b.n	14002 <strvisx@@Base+0x28e>
   1404a:	blx	2698 <__stack_chk_fail@plt>
   1404e:	nop
   14050:	ldrsh	r6, [r1, r0]
   14052:	movs	r1, r0
   14054:	lsls	r0, r0, #11
   14056:	movs	r0, r0
   14058:	ldr	r7, [pc, #208]	; (1412c <strvisx@@Base+0x3b8>)
   1405a:	movs	r0, r0
   1405c:	ldr	r6, [pc, #976]	; (14430 <strvisx@@Base+0x6bc>)
   1405e:	movs	r0, r0
   14060:	ldr	r7, [pc, #576]	; (142a4 <strvisx@@Base+0x530>)
   14062:	movs	r0, r0
   14064:	ldr	r7, [pc, #456]	; (14230 <strvisx@@Base+0x4bc>)
   14066:	movs	r0, r0
   14068:	ldrb	r2, [r5, r5]
   1406a:	movs	r1, r0
   1406c:	ldr	r6, [pc, #504]	; (14268 <strvisx@@Base+0x4f4>)
   1406e:	movs	r0, r0
   14070:	ldr	r7, [pc, #184]	; (1412c <strvisx@@Base+0x3b8>)
   14072:	movs	r0, r0
   14074:	ldr	r6, [pc, #992]	; (14458 <strvisx@@Base+0x6e4>)
   14076:	movs	r0, r0
   14078:	ldr	r7, [pc, #80]	; (140cc <strvisx@@Base+0x358>)
   1407a:	movs	r0, r0
   1407c:	ldr	r6, [pc, #672]	; (14320 <strvisx@@Base+0x5ac>)
   1407e:	movs	r0, r0
   14080:	ldr	r6, [pc, #944]	; (14434 <strvisx@@Base+0x6c0>)
   14082:	movs	r0, r0
   14084:	ldr	r6, [pc, #176]	; (14138 <strvisx@@Base+0x3c4>)
   14086:	movs	r0, r0
   14088:	ldr	r6, [pc, #824]	; (143c4 <strvisx@@Base+0x650>)
   1408a:	movs	r0, r0
   1408c:	ldr	r6, [pc, #264]	; (14198 <strvisx@@Base+0x424>)
   1408e:	movs	r0, r0
   14090:	ldr	r0, [pc, #200]	; (1415c <strvisx@@Base+0x3e8>)
   14092:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   14096:	mov	r8, r1
   14098:	ldr	r1, [pc, #196]	; (14160 <strvisx@@Base+0x3ec>)
   1409a:	add	r0, pc
   1409c:	sub.w	sp, sp, #16384	; 0x4000
   140a0:	mov	r4, r2
   140a2:	sub	sp, #28
   140a4:	subs	r7, r3, #0
   140a6:	add.w	r2, sp, #16384	; 0x4000
   140aa:	ldr	r1, [r0, r1]
   140ac:	add.w	r2, r2, #20
   140b0:	ldr	r1, [r1, #0]
   140b2:	str	r1, [r2, #0]
   140b4:	mov.w	r1, #0
   140b8:	blt.n	1413a <strvisx@@Base+0x3c6>
   140ba:	sub.w	r2, r7, #21
   140be:	movw	r3, #16359	; 0x3fe7
   140c2:	cmp	r2, r3
   140c4:	bhi.n	1413a <strvisx@@Base+0x3c6>
   140c6:	ldr	r0, [r4, #0]
   140c8:	mov	r6, sp
   140ca:	ldr	r1, [r4, #4]
   140cc:	add	r5, sp, #24
   140ce:	ldr	r2, [r4, #8]
   140d0:	add.w	r9, sp, #20
   140d4:	ldr	r3, [r4, #12]
   140d6:	stmia	r6!, {r0, r1, r2, r3}
   140d8:	mov	r1, r4
   140da:	ldr	r0, [r4, #16]
   140dc:	movw	r3, #16380	; 0x3ffc
   140e0:	mov	r2, r7
   140e2:	str	r0, [r6, #0]
   140e4:	mov	r0, r5
   140e6:	ldrb.w	r4, [r5, #-24]
   140ea:	and.w	r4, r4, #240	; 0xf0
   140ee:	cmp	r4, #96	; 0x60
   140f0:	ite	eq
   140f2:	moveq	r4, #24
   140f4:	movne	r4, #2
   140f6:	blx	2440 <__memcpy_chk@plt>
   140fa:	ldr.w	r0, [r8, #68]	; 0x44
   140fe:	adds	r2, r7, #4
   14100:	mov	r1, r9
   14102:	movs	r3, #0
   14104:	strb.w	r4, [r5, #-1]
   14108:	strh.w	r3, [r5, #-4]
   1410c:	strb.w	r3, [r5, #-2]
   14110:	bl	c410 <el_source@plt+0x9ad4>
   14114:	mov	r3, r0
   14116:	cbnz	r0, 14144 <strvisx@@Base+0x3d0>
   14118:	ldr	r0, [pc, #72]	; (14164 <strvisx@@Base+0x3f0>)
   1411a:	add.w	r2, sp, #16384	; 0x4000
   1411e:	ldr	r1, [pc, #64]	; (14160 <strvisx@@Base+0x3ec>)
   14120:	adds	r2, #20
   14122:	add	r0, pc
   14124:	ldr	r1, [r0, r1]
   14126:	ldr	r0, [r1, #0]
   14128:	ldr	r1, [r2, #0]
   1412a:	eors	r0, r1
   1412c:	bne.n	14140 <strvisx@@Base+0x3cc>
   1412e:	mov	r0, r3
   14130:	add.w	sp, sp, #16384	; 0x4000
   14134:	add	sp, #28
   14136:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1413a:	mov.w	r3, #4294967295	; 0xffffffff
   1413e:	b.n	14118 <strvisx@@Base+0x3a4>
   14140:	blx	2698 <__stack_chk_fail@plt>
   14144:	bl	ae70 <el_source@plt+0x8534>
   14148:	ldr	r3, [pc, #28]	; (14168 <strvisx@@Base+0x3f4>)
   1414a:	add	r3, pc
   1414c:	add.w	r1, r3, #48	; 0x30
   14150:	mov	r2, r0
   14152:	ldr	r0, [pc, #24]	; (1416c <strvisx@@Base+0x3f8>)
   14154:	add	r0, pc
   14156:	bl	c6e4 <el_source@plt+0x9da8>
   1415a:	nop
   1415c:	ldrb	r6, [r4, r1]
   1415e:	movs	r1, r0
   14160:	lsls	r0, r0, #11
   14162:	movs	r0, r0
   14164:	ldrh	r6, [r3, r7]
   14166:	movs	r1, r0
   14168:	ldr	r5, [pc, #760]	; (14464 <strvisx@@Base+0x6f0>)
   1416a:	movs	r0, r0
   1416c:	movs	r4, #224	; 0xe0
   1416e:	movs	r0, r0
   14170:	push	{r3, r4, r5, lr}
   14172:	mov	r5, r2
   14174:	ldr	r0, [r1, #72]	; 0x48
   14176:	mov	r2, r3
   14178:	mov	r1, r5
   1417a:	mov	r4, r3
   1417c:	bl	bd88 <el_source@plt+0x944c>
   14180:	cbnz	r0, 14198 <strvisx@@Base+0x424>
   14182:	ldr	r3, [r4, #0]
   14184:	cmp	r3, #3
   14186:	ittte	hi
   14188:	subhi	r3, #4
   1418a:	strhi	r3, [r4, #0]
   1418c:	ldrhi	r0, [r5, #0]
   1418e:	movls	r1, r0
   14190:	ite	ls
   14192:	movls	r0, r1
   14194:	addhi	r0, #4
   14196:	pop	{r3, r4, r5, pc}
   14198:	bl	ae70 <el_source@plt+0x8534>
   1419c:	ldr	r3, [pc, #16]	; (141b0 <strvisx@@Base+0x43c>)
   1419e:	add	r3, pc
   141a0:	add.w	r1, r3, #68	; 0x44
   141a4:	mov	r2, r0
   141a6:	ldr	r0, [pc, #12]	; (141b4 <strvisx@@Base+0x440>)
   141a8:	add	r0, pc
   141aa:	bl	c6e4 <el_source@plt+0x9da8>
   141ae:	nop
   141b0:	ldr	r5, [pc, #424]	; (1435c <strvisx@@Base+0x5e8>)
   141b2:	movs	r0, r0
   141b4:	movs	r4, #140	; 0x8c
   141b6:	movs	r0, r0
   141b8:	subs	r2, r1, #1
   141ba:	it	eq
   141bc:	bxeq	lr
   141be:	bcc.w	1440a <strvisx@@Base+0x696>
   141c2:	cmp	r0, r1
   141c4:	bls.w	143f4 <strvisx@@Base+0x680>
   141c8:	tst	r1, r2
   141ca:	beq.w	143fc <strvisx@@Base+0x688>
   141ce:	clz	r3, r0
   141d2:	clz	r2, r1
   141d6:	sub.w	r3, r2, r3
   141da:	rsb	r3, r3, #31
   141de:	add	r2, pc, #16	; (adr r2, 141f0 <strvisx@@Base+0x47c>)
   141e0:	add.w	r3, r2, r3, lsl #4
   141e4:	mov.w	r2, #0
   141e8:	mov	pc, r3
   141ea:	nop
   141ec:	nop.w
   141f0:	cmp.w	r0, r1, lsl #31
   141f4:	nop
   141f6:	adc.w	r2, r2, r2
   141fa:	it	cs
   141fc:	subcs.w	r0, r0, r1, lsl #31
   14200:	cmp.w	r0, r1, lsl #30
   14204:	nop
   14206:	adc.w	r2, r2, r2
   1420a:	it	cs
   1420c:	subcs.w	r0, r0, r1, lsl #30
   14210:	cmp.w	r0, r1, lsl #29
   14214:	nop
   14216:	adc.w	r2, r2, r2
   1421a:	it	cs
   1421c:	subcs.w	r0, r0, r1, lsl #29
   14220:	cmp.w	r0, r1, lsl #28
   14224:	nop
   14226:	adc.w	r2, r2, r2
   1422a:	it	cs
   1422c:	subcs.w	r0, r0, r1, lsl #28
   14230:	cmp.w	r0, r1, lsl #27
   14234:	nop
   14236:	adc.w	r2, r2, r2
   1423a:	it	cs
   1423c:	subcs.w	r0, r0, r1, lsl #27
   14240:	cmp.w	r0, r1, lsl #26
   14244:	nop
   14246:	adc.w	r2, r2, r2
   1424a:	it	cs
   1424c:	subcs.w	r0, r0, r1, lsl #26
   14250:	cmp.w	r0, r1, lsl #25
   14254:	nop
   14256:	adc.w	r2, r2, r2
   1425a:	it	cs
   1425c:	subcs.w	r0, r0, r1, lsl #25
   14260:	cmp.w	r0, r1, lsl #24
   14264:	nop
   14266:	adc.w	r2, r2, r2
   1426a:	it	cs
   1426c:	subcs.w	r0, r0, r1, lsl #24
   14270:	cmp.w	r0, r1, lsl #23
   14274:	nop
   14276:	adc.w	r2, r2, r2
   1427a:	it	cs
   1427c:	subcs.w	r0, r0, r1, lsl #23
   14280:	cmp.w	r0, r1, lsl #22
   14284:	nop
   14286:	adc.w	r2, r2, r2
   1428a:	it	cs
   1428c:	subcs.w	r0, r0, r1, lsl #22
   14290:	cmp.w	r0, r1, lsl #21
   14294:	nop
   14296:	adc.w	r2, r2, r2
   1429a:	it	cs
   1429c:	subcs.w	r0, r0, r1, lsl #21
   142a0:	cmp.w	r0, r1, lsl #20
   142a4:	nop
   142a6:	adc.w	r2, r2, r2
   142aa:	it	cs
   142ac:	subcs.w	r0, r0, r1, lsl #20
   142b0:	cmp.w	r0, r1, lsl #19
   142b4:	nop
   142b6:	adc.w	r2, r2, r2
   142ba:	it	cs
   142bc:	subcs.w	r0, r0, r1, lsl #19
   142c0:	cmp.w	r0, r1, lsl #18
   142c4:	nop
   142c6:	adc.w	r2, r2, r2
   142ca:	it	cs
   142cc:	subcs.w	r0, r0, r1, lsl #18
   142d0:	cmp.w	r0, r1, lsl #17
   142d4:	nop
   142d6:	adc.w	r2, r2, r2
   142da:	it	cs
   142dc:	subcs.w	r0, r0, r1, lsl #17
   142e0:	cmp.w	r0, r1, lsl #16
   142e4:	nop
   142e6:	adc.w	r2, r2, r2
   142ea:	it	cs
   142ec:	subcs.w	r0, r0, r1, lsl #16
   142f0:	cmp.w	r0, r1, lsl #15
   142f4:	nop
   142f6:	adc.w	r2, r2, r2
   142fa:	it	cs
   142fc:	subcs.w	r0, r0, r1, lsl #15
   14300:	cmp.w	r0, r1, lsl #14
   14304:	nop
   14306:	adc.w	r2, r2, r2
   1430a:	it	cs
   1430c:	subcs.w	r0, r0, r1, lsl #14
   14310:	cmp.w	r0, r1, lsl #13
   14314:	nop
   14316:	adc.w	r2, r2, r2
   1431a:	it	cs
   1431c:	subcs.w	r0, r0, r1, lsl #13
   14320:	cmp.w	r0, r1, lsl #12
   14324:	nop
   14326:	adc.w	r2, r2, r2
   1432a:	it	cs
   1432c:	subcs.w	r0, r0, r1, lsl #12
   14330:	cmp.w	r0, r1, lsl #11
   14334:	nop
   14336:	adc.w	r2, r2, r2
   1433a:	it	cs
   1433c:	subcs.w	r0, r0, r1, lsl #11
   14340:	cmp.w	r0, r1, lsl #10
   14344:	nop
   14346:	adc.w	r2, r2, r2
   1434a:	it	cs
   1434c:	subcs.w	r0, r0, r1, lsl #10
   14350:	cmp.w	r0, r1, lsl #9
   14354:	nop
   14356:	adc.w	r2, r2, r2
   1435a:	it	cs
   1435c:	subcs.w	r0, r0, r1, lsl #9
   14360:	cmp.w	r0, r1, lsl #8
   14364:	nop
   14366:	adc.w	r2, r2, r2
   1436a:	it	cs
   1436c:	subcs.w	r0, r0, r1, lsl #8
   14370:	cmp.w	r0, r1, lsl #7
   14374:	nop
   14376:	adc.w	r2, r2, r2
   1437a:	it	cs
   1437c:	subcs.w	r0, r0, r1, lsl #7
   14380:	cmp.w	r0, r1, lsl #6
   14384:	nop
   14386:	adc.w	r2, r2, r2
   1438a:	it	cs
   1438c:	subcs.w	r0, r0, r1, lsl #6
   14390:	cmp.w	r0, r1, lsl #5
   14394:	nop
   14396:	adc.w	r2, r2, r2
   1439a:	it	cs
   1439c:	subcs.w	r0, r0, r1, lsl #5
   143a0:	cmp.w	r0, r1, lsl #4
   143a4:	nop
   143a6:	adc.w	r2, r2, r2
   143aa:	it	cs
   143ac:	subcs.w	r0, r0, r1, lsl #4
   143b0:	cmp.w	r0, r1, lsl #3
   143b4:	nop
   143b6:	adc.w	r2, r2, r2
   143ba:	it	cs
   143bc:	subcs.w	r0, r0, r1, lsl #3
   143c0:	cmp.w	r0, r1, lsl #2
   143c4:	nop
   143c6:	adc.w	r2, r2, r2
   143ca:	it	cs
   143cc:	subcs.w	r0, r0, r1, lsl #2
   143d0:	cmp.w	r0, r1, lsl #1
   143d4:	nop
   143d6:	adc.w	r2, r2, r2
   143da:	it	cs
   143dc:	subcs.w	r0, r0, r1, lsl #1
   143e0:	cmp.w	r0, r1
   143e4:	nop
   143e6:	adc.w	r2, r2, r2
   143ea:	it	cs
   143ec:	subcs.w	r0, r0, r1
   143f0:	mov	r0, r2
   143f2:	bx	lr
   143f4:	ite	eq
   143f6:	moveq	r0, #1
   143f8:	movne	r0, #0
   143fa:	bx	lr
   143fc:	clz	r2, r1
   14400:	rsb	r2, r2, #31
   14404:	lsr.w	r0, r0, r2
   14408:	bx	lr
   1440a:	cbz	r0, 14410 <strvisx@@Base+0x69c>
   1440c:	mov.w	r0, #4294967295	; 0xffffffff
   14410:	b.w	14d44 <strvisx@@Base+0xfd0>
   14414:	cmp	r1, #0
   14416:	beq.n	1440a <strvisx@@Base+0x696>
   14418:	stmdb	sp!, {r0, r1, lr}
   1441c:	bl	141b8 <strvisx@@Base+0x444>
   14420:	ldmia.w	sp!, {r1, r2, lr}
   14424:	mul.w	r3, r2, r0
   14428:	sub.w	r1, r1, r3
   1442c:	bx	lr
   1442e:	nop
   14430:	cmp	r1, #0
   14432:	beq.w	146b2 <strvisx@@Base+0x93e>
   14436:	eor.w	ip, r0, r1
   1443a:	it	mi
   1443c:	negmi	r1, r1
   1443e:	subs	r2, r1, #1
   14440:	beq.w	14682 <strvisx@@Base+0x90e>
   14444:	movs	r3, r0
   14446:	it	mi
   14448:	negmi	r3, r0
   1444a:	cmp	r3, r1
   1444c:	bls.w	1468c <strvisx@@Base+0x918>
   14450:	tst	r1, r2
   14452:	beq.w	1469c <strvisx@@Base+0x928>
   14456:	clz	r2, r3
   1445a:	clz	r0, r1
   1445e:	sub.w	r2, r0, r2
   14462:	rsb	r2, r2, #31
   14466:	add	r0, pc, #16	; (adr r0, 14478 <strvisx@@Base+0x704>)
   14468:	add.w	r2, r0, r2, lsl #4
   1446c:	mov.w	r0, #0
   14470:	mov	pc, r2
   14472:	nop
   14474:	nop.w
   14478:	cmp.w	r3, r1, lsl #31
   1447c:	nop
   1447e:	adc.w	r0, r0, r0
   14482:	it	cs
   14484:	subcs.w	r3, r3, r1, lsl #31
   14488:	cmp.w	r3, r1, lsl #30
   1448c:	nop
   1448e:	adc.w	r0, r0, r0
   14492:	it	cs
   14494:	subcs.w	r3, r3, r1, lsl #30
   14498:	cmp.w	r3, r1, lsl #29
   1449c:	nop
   1449e:	adc.w	r0, r0, r0
   144a2:	it	cs
   144a4:	subcs.w	r3, r3, r1, lsl #29
   144a8:	cmp.w	r3, r1, lsl #28
   144ac:	nop
   144ae:	adc.w	r0, r0, r0
   144b2:	it	cs
   144b4:	subcs.w	r3, r3, r1, lsl #28
   144b8:	cmp.w	r3, r1, lsl #27
   144bc:	nop
   144be:	adc.w	r0, r0, r0
   144c2:	it	cs
   144c4:	subcs.w	r3, r3, r1, lsl #27
   144c8:	cmp.w	r3, r1, lsl #26
   144cc:	nop
   144ce:	adc.w	r0, r0, r0
   144d2:	it	cs
   144d4:	subcs.w	r3, r3, r1, lsl #26
   144d8:	cmp.w	r3, r1, lsl #25
   144dc:	nop
   144de:	adc.w	r0, r0, r0
   144e2:	it	cs
   144e4:	subcs.w	r3, r3, r1, lsl #25
   144e8:	cmp.w	r3, r1, lsl #24
   144ec:	nop
   144ee:	adc.w	r0, r0, r0
   144f2:	it	cs
   144f4:	subcs.w	r3, r3, r1, lsl #24
   144f8:	cmp.w	r3, r1, lsl #23
   144fc:	nop
   144fe:	adc.w	r0, r0, r0
   14502:	it	cs
   14504:	subcs.w	r3, r3, r1, lsl #23
   14508:	cmp.w	r3, r1, lsl #22
   1450c:	nop
   1450e:	adc.w	r0, r0, r0
   14512:	it	cs
   14514:	subcs.w	r3, r3, r1, lsl #22
   14518:	cmp.w	r3, r1, lsl #21
   1451c:	nop
   1451e:	adc.w	r0, r0, r0
   14522:	it	cs
   14524:	subcs.w	r3, r3, r1, lsl #21
   14528:	cmp.w	r3, r1, lsl #20
   1452c:	nop
   1452e:	adc.w	r0, r0, r0
   14532:	it	cs
   14534:	subcs.w	r3, r3, r1, lsl #20
   14538:	cmp.w	r3, r1, lsl #19
   1453c:	nop
   1453e:	adc.w	r0, r0, r0
   14542:	it	cs
   14544:	subcs.w	r3, r3, r1, lsl #19
   14548:	cmp.w	r3, r1, lsl #18
   1454c:	nop
   1454e:	adc.w	r0, r0, r0
   14552:	it	cs
   14554:	subcs.w	r3, r3, r1, lsl #18
   14558:	cmp.w	r3, r1, lsl #17
   1455c:	nop
   1455e:	adc.w	r0, r0, r0
   14562:	it	cs
   14564:	subcs.w	r3, r3, r1, lsl #17
   14568:	cmp.w	r3, r1, lsl #16
   1456c:	nop
   1456e:	adc.w	r0, r0, r0
   14572:	it	cs
   14574:	subcs.w	r3, r3, r1, lsl #16
   14578:	cmp.w	r3, r1, lsl #15
   1457c:	nop
   1457e:	adc.w	r0, r0, r0
   14582:	it	cs
   14584:	subcs.w	r3, r3, r1, lsl #15
   14588:	cmp.w	r3, r1, lsl #14
   1458c:	nop
   1458e:	adc.w	r0, r0, r0
   14592:	it	cs
   14594:	subcs.w	r3, r3, r1, lsl #14
   14598:	cmp.w	r3, r1, lsl #13
   1459c:	nop
   1459e:	adc.w	r0, r0, r0
   145a2:	it	cs
   145a4:	subcs.w	r3, r3, r1, lsl #13
   145a8:	cmp.w	r3, r1, lsl #12
   145ac:	nop
   145ae:	adc.w	r0, r0, r0
   145b2:	it	cs
   145b4:	subcs.w	r3, r3, r1, lsl #12
   145b8:	cmp.w	r3, r1, lsl #11
   145bc:	nop
   145be:	adc.w	r0, r0, r0
   145c2:	it	cs
   145c4:	subcs.w	r3, r3, r1, lsl #11
   145c8:	cmp.w	r3, r1, lsl #10
   145cc:	nop
   145ce:	adc.w	r0, r0, r0
   145d2:	it	cs
   145d4:	subcs.w	r3, r3, r1, lsl #10
   145d8:	cmp.w	r3, r1, lsl #9
   145dc:	nop
   145de:	adc.w	r0, r0, r0
   145e2:	it	cs
   145e4:	subcs.w	r3, r3, r1, lsl #9
   145e8:	cmp.w	r3, r1, lsl #8
   145ec:	nop
   145ee:	adc.w	r0, r0, r0
   145f2:	it	cs
   145f4:	subcs.w	r3, r3, r1, lsl #8
   145f8:	cmp.w	r3, r1, lsl #7
   145fc:	nop
   145fe:	adc.w	r0, r0, r0
   14602:	it	cs
   14604:	subcs.w	r3, r3, r1, lsl #7
   14608:	cmp.w	r3, r1, lsl #6
   1460c:	nop
   1460e:	adc.w	r0, r0, r0
   14612:	it	cs
   14614:	subcs.w	r3, r3, r1, lsl #6
   14618:	cmp.w	r3, r1, lsl #5
   1461c:	nop
   1461e:	adc.w	r0, r0, r0
   14622:	it	cs
   14624:	subcs.w	r3, r3, r1, lsl #5
   14628:	cmp.w	r3, r1, lsl #4
   1462c:	nop
   1462e:	adc.w	r0, r0, r0
   14632:	it	cs
   14634:	subcs.w	r3, r3, r1, lsl #4
   14638:	cmp.w	r3, r1, lsl #3
   1463c:	nop
   1463e:	adc.w	r0, r0, r0
   14642:	it	cs
   14644:	subcs.w	r3, r3, r1, lsl #3
   14648:	cmp.w	r3, r1, lsl #2
   1464c:	nop
   1464e:	adc.w	r0, r0, r0
   14652:	it	cs
   14654:	subcs.w	r3, r3, r1, lsl #2
   14658:	cmp.w	r3, r1, lsl #1
   1465c:	nop
   1465e:	adc.w	r0, r0, r0
   14662:	it	cs
   14664:	subcs.w	r3, r3, r1, lsl #1
   14668:	cmp.w	r3, r1
   1466c:	nop
   1466e:	adc.w	r0, r0, r0
   14672:	it	cs
   14674:	subcs.w	r3, r3, r1
   14678:	cmp.w	ip, #0
   1467c:	it	mi
   1467e:	negmi	r0, r0
   14680:	bx	lr
   14682:	teq	ip, r0
   14686:	it	mi
   14688:	negmi	r0, r0
   1468a:	bx	lr
   1468c:	it	cc
   1468e:	movcc	r0, #0
   14690:	itt	eq
   14692:	moveq.w	r0, ip, asr #31
   14696:	orreq.w	r0, r0, #1
   1469a:	bx	lr
   1469c:	clz	r2, r1
   146a0:	rsb	r2, r2, #31
   146a4:	cmp.w	ip, #0
   146a8:	lsr.w	r0, r3, r2
   146ac:	it	mi
   146ae:	negmi	r0, r0
   146b0:	bx	lr
   146b2:	cmp	r0, #0
   146b4:	it	gt
   146b6:	mvngt.w	r0, #2147483648	; 0x80000000
   146ba:	it	lt
   146bc:	movlt.w	r0, #2147483648	; 0x80000000
   146c0:	b.w	14d44 <strvisx@@Base+0xfd0>
   146c4:	cmp	r1, #0
   146c6:	beq.n	146b2 <strvisx@@Base+0x93e>
   146c8:	stmdb	sp!, {r0, r1, lr}
   146cc:	bl	14436 <strvisx@@Base+0x6c2>
   146d0:	ldmia.w	sp!, {r1, r2, lr}
   146d4:	mul.w	r3, r2, r0
   146d8:	sub.w	r1, r1, r3
   146dc:	bx	lr
   146de:	nop
   146e0:	eor.w	r1, r1, #2147483648	; 0x80000000
   146e4:	b.n	146ec <strvisx@@Base+0x978>
   146e6:	nop
   146e8:	eor.w	r3, r3, #2147483648	; 0x80000000
   146ec:	push	{r4, r5, lr}
   146ee:	mov.w	r4, r1, lsl #1
   146f2:	mov.w	r5, r3, lsl #1
   146f6:	teq	r4, r5
   146fa:	it	eq
   146fc:	teqeq	r0, r2
   14700:	itttt	ne
   14702:	orrsne.w	ip, r4, r0
   14706:	orrsne.w	ip, r5, r2
   1470a:	mvnsne.w	ip, r4, asr #21
   1470e:	mvnsne.w	ip, r5, asr #21
   14712:	beq.w	148da <strvisx@@Base+0xb66>
   14716:	mov.w	r4, r4, lsr #21
   1471a:	rsbs	r5, r4, r5, lsr #21
   1471e:	it	lt
   14720:	neglt	r5, r5
   14722:	ble.n	1473e <strvisx@@Base+0x9ca>
   14724:	add	r4, r5
   14726:	eor.w	r2, r0, r2
   1472a:	eor.w	r3, r1, r3
   1472e:	eor.w	r0, r2, r0
   14732:	eor.w	r1, r3, r1
   14736:	eor.w	r2, r0, r2
   1473a:	eor.w	r3, r1, r3
   1473e:	cmp	r5, #54	; 0x36
   14740:	it	hi
   14742:	pophi	{r4, r5, pc}
   14744:	tst.w	r1, #2147483648	; 0x80000000
   14748:	mov.w	r1, r1, lsl #12
   1474c:	mov.w	ip, #1048576	; 0x100000
   14750:	orr.w	r1, ip, r1, lsr #12
   14754:	beq.n	1475c <strvisx@@Base+0x9e8>
   14756:	negs	r0, r0
   14758:	sbc.w	r1, r1, r1, lsl #1
   1475c:	tst.w	r3, #2147483648	; 0x80000000
   14760:	mov.w	r3, r3, lsl #12
   14764:	orr.w	r3, ip, r3, lsr #12
   14768:	beq.n	14770 <strvisx@@Base+0x9fc>
   1476a:	negs	r2, r2
   1476c:	sbc.w	r3, r3, r3, lsl #1
   14770:	teq	r4, r5
   14774:	beq.w	148c6 <strvisx@@Base+0xb52>
   14778:	sub.w	r4, r4, #1
   1477c:	rsbs	lr, r5, #32
   14780:	blt.n	1479e <strvisx@@Base+0xa2a>
   14782:	lsl.w	ip, r2, lr
   14786:	lsr.w	r2, r2, r5
   1478a:	adds	r0, r0, r2
   1478c:	adc.w	r1, r1, #0
   14790:	lsl.w	r2, r3, lr
   14794:	adds	r0, r0, r2
   14796:	asr.w	r3, r3, r5
   1479a:	adcs	r1, r3
   1479c:	b.n	147bc <strvisx@@Base+0xa48>
   1479e:	sub.w	r5, r5, #32
   147a2:	add.w	lr, lr, #32
   147a6:	cmp	r2, #1
   147a8:	lsl.w	ip, r3, lr
   147ac:	it	cs
   147ae:	orrcs.w	ip, ip, #2
   147b2:	asr.w	r3, r3, r5
   147b6:	adds	r0, r0, r3
   147b8:	adcs.w	r1, r1, r3, asr #31
   147bc:	and.w	r5, r1, #2147483648	; 0x80000000
   147c0:	bpl.n	147d2 <strvisx@@Base+0xa5e>
   147c2:	mov.w	lr, #0
   147c6:	rsbs	ip, ip, #0
   147ca:	sbcs.w	r0, lr, r0
   147ce:	sbc.w	r1, lr, r1
   147d2:	cmp.w	r1, #1048576	; 0x100000
   147d6:	bcc.n	14810 <strvisx@@Base+0xa9c>
   147d8:	cmp.w	r1, #2097152	; 0x200000
   147dc:	bcc.n	147f8 <strvisx@@Base+0xa84>
   147de:	lsrs	r1, r1, #1
   147e0:	movs.w	r0, r0, rrx
   147e4:	mov.w	ip, ip, rrx
   147e8:	add.w	r4, r4, #1
   147ec:	mov.w	r2, r4, lsl #21
   147f0:	cmn.w	r2, #4194304	; 0x400000
   147f4:	bcs.w	1492c <strvisx@@Base+0xbb8>
   147f8:	cmp.w	ip, #2147483648	; 0x80000000
   147fc:	it	eq
   147fe:	movseq.w	ip, r0, lsr #1
   14802:	adcs.w	r0, r0, #0
   14806:	adc.w	r1, r1, r4, lsl #20
   1480a:	orr.w	r1, r1, r5
   1480e:	pop	{r4, r5, pc}
   14810:	movs.w	ip, ip, lsl #1
   14814:	adcs	r0, r0
   14816:	adc.w	r1, r1, r1
   1481a:	subs	r4, #1
   1481c:	it	cs
   1481e:	cmpcs.w	r1, #1048576	; 0x100000
   14822:	bcs.n	147f8 <strvisx@@Base+0xa84>
   14824:	teq	r1, #0
   14828:	itt	eq
   1482a:	moveq	r1, r0
   1482c:	moveq	r0, #0
   1482e:	clz	r3, r1
   14832:	it	eq
   14834:	addeq	r3, #32
   14836:	sub.w	r3, r3, #11
   1483a:	subs.w	r2, r3, #32
   1483e:	bge.n	1485a <strvisx@@Base+0xae6>
   14840:	adds	r2, #12
   14842:	ble.n	14856 <strvisx@@Base+0xae2>
   14844:	add.w	ip, r2, #20
   14848:	rsb	r2, r2, #12
   1484c:	lsl.w	r0, r1, ip
   14850:	lsr.w	r1, r1, r2
   14854:	b.n	14870 <strvisx@@Base+0xafc>
   14856:	add.w	r2, r2, #20
   1485a:	it	le
   1485c:	rsble	ip, r2, #32
   14860:	lsl.w	r1, r1, r2
   14864:	lsr.w	ip, r0, ip
   14868:	itt	le
   1486a:	orrle.w	r1, r1, ip
   1486e:	lslle	r0, r2
   14870:	subs	r4, r4, r3
   14872:	ittt	ge
   14874:	addge.w	r1, r1, r4, lsl #20
   14878:	orrge	r1, r5
   1487a:	popge	{r4, r5, pc}
   1487c:	mvn.w	r4, r4
   14880:	subs	r4, #31
   14882:	bge.n	148be <strvisx@@Base+0xb4a>
   14884:	adds	r4, #12
   14886:	bgt.n	148a6 <strvisx@@Base+0xb32>
   14888:	add.w	r4, r4, #20
   1488c:	rsb	r2, r4, #32
   14890:	lsr.w	r0, r0, r4
   14894:	lsl.w	r3, r1, r2
   14898:	orr.w	r0, r0, r3
   1489c:	lsr.w	r3, r1, r4
   148a0:	orr.w	r1, r5, r3
   148a4:	pop	{r4, r5, pc}
   148a6:	rsb	r4, r4, #12
   148aa:	rsb	r2, r4, #32
   148ae:	lsr.w	r0, r0, r2
   148b2:	lsl.w	r3, r1, r4
   148b6:	orr.w	r0, r0, r3
   148ba:	mov	r1, r5
   148bc:	pop	{r4, r5, pc}
   148be:	lsr.w	r0, r1, r4
   148c2:	mov	r1, r5
   148c4:	pop	{r4, r5, pc}
   148c6:	teq	r4, #0
   148ca:	eor.w	r3, r3, #1048576	; 0x100000
   148ce:	itte	eq
   148d0:	eoreq.w	r1, r1, #1048576	; 0x100000
   148d4:	addeq	r4, #1
   148d6:	subne	r5, #1
   148d8:	b.n	14778 <strvisx@@Base+0xa04>
   148da:	mvns.w	ip, r4, asr #21
   148de:	it	ne
   148e0:	mvnsne.w	ip, r5, asr #21
   148e4:	beq.n	1493a <strvisx@@Base+0xbc6>
   148e6:	teq	r4, r5
   148ea:	it	eq
   148ec:	teqeq	r0, r2
   148f0:	beq.n	148fe <strvisx@@Base+0xb8a>
   148f2:	orrs.w	ip, r4, r0
   148f6:	itt	eq
   148f8:	moveq	r1, r3
   148fa:	moveq	r0, r2
   148fc:	pop	{r4, r5, pc}
   148fe:	teq	r1, r3
   14902:	ittt	ne
   14904:	movne	r1, #0
   14906:	movne	r0, #0
   14908:	popne	{r4, r5, pc}
   1490a:	movs.w	ip, r4, lsr #21
   1490e:	bne.n	1491c <strvisx@@Base+0xba8>
   14910:	lsls	r0, r0, #1
   14912:	adcs	r1, r1
   14914:	it	cs
   14916:	orrcs.w	r1, r1, #2147483648	; 0x80000000
   1491a:	pop	{r4, r5, pc}
   1491c:	adds.w	r4, r4, #4194304	; 0x400000
   14920:	itt	cc
   14922:	addcc.w	r1, r1, #1048576	; 0x100000
   14926:	popcc	{r4, r5, pc}
   14928:	and.w	r5, r1, #2147483648	; 0x80000000
   1492c:	orr.w	r1, r5, #2130706432	; 0x7f000000
   14930:	orr.w	r1, r1, #15728640	; 0xf00000
   14934:	mov.w	r0, #0
   14938:	pop	{r4, r5, pc}
   1493a:	mvns.w	ip, r4, asr #21
   1493e:	itte	ne
   14940:	movne	r1, r3
   14942:	movne	r0, r2
   14944:	mvnseq.w	ip, r5, asr #21
   14948:	itt	ne
   1494a:	movne	r3, r1
   1494c:	movne	r2, r0
   1494e:	orrs.w	r4, r0, r1, lsl #12
   14952:	itte	eq
   14954:	orrseq.w	r5, r2, r3, lsl #12
   14958:	teqeq	r1, r3
   1495c:	orrne.w	r1, r1, #524288	; 0x80000
   14960:	pop	{r4, r5, pc}
   14962:	nop
   14964:	teq	r0, #0
   14968:	itt	eq
   1496a:	moveq	r1, #0
   1496c:	bxeq	lr
   1496e:	push	{r4, r5, lr}
   14970:	mov.w	r4, #1024	; 0x400
   14974:	add.w	r4, r4, #50	; 0x32
   14978:	mov.w	r5, #0
   1497c:	mov.w	r1, #0
   14980:	b.n	14824 <strvisx@@Base+0xab0>
   14982:	nop
   14984:	teq	r0, #0
   14988:	itt	eq
   1498a:	moveq	r1, #0
   1498c:	bxeq	lr
   1498e:	push	{r4, r5, lr}
   14990:	mov.w	r4, #1024	; 0x400
   14994:	add.w	r4, r4, #50	; 0x32
   14998:	ands.w	r5, r0, #2147483648	; 0x80000000
   1499c:	it	mi
   1499e:	negmi	r0, r0
   149a0:	mov.w	r1, #0
   149a4:	b.n	14824 <strvisx@@Base+0xab0>
   149a6:	nop
   149a8:	lsls	r2, r0, #1
   149aa:	mov.w	r1, r2, asr #3
   149ae:	mov.w	r1, r1, rrx
   149b2:	mov.w	r0, r2, lsl #28
   149b6:	itttt	ne
   149b8:	andsne.w	r3, r2, #4278190080	; 0xff000000
   149bc:	teqne	r3, #4278190080	; 0xff000000
   149c0:	eorne.w	r1, r1, #939524096	; 0x38000000
   149c4:	bxne	lr
   149c6:	bics.w	r2, r2, #4278190080	; 0xff000000
   149ca:	it	eq
   149cc:	bxeq	lr
   149ce:	teq	r3, #4278190080	; 0xff000000
   149d2:	itt	eq
   149d4:	orreq.w	r1, r1, #524288	; 0x80000
   149d8:	bxeq	lr
   149da:	push	{r4, r5, lr}
   149dc:	mov.w	r4, #896	; 0x380
   149e0:	and.w	r5, r1, #2147483648	; 0x80000000
   149e4:	bic.w	r1, r1, #2147483648	; 0x80000000
   149e8:	b.n	14824 <strvisx@@Base+0xab0>
   149ea:	nop
   149ec:	orrs.w	r2, r0, r1
   149f0:	it	eq
   149f2:	bxeq	lr
   149f4:	push	{r4, r5, lr}
   149f6:	mov.w	r5, #0
   149fa:	b.n	14a12 <strvisx@@Base+0xc9e>
   149fc:	orrs.w	r2, r0, r1
   14a00:	it	eq
   14a02:	bxeq	lr
   14a04:	push	{r4, r5, lr}
   14a06:	ands.w	r5, r1, #2147483648	; 0x80000000
   14a0a:	bpl.n	14a12 <strvisx@@Base+0xc9e>
   14a0c:	negs	r0, r0
   14a0e:	sbc.w	r1, r1, r1, lsl #1
   14a12:	mov.w	r4, #1024	; 0x400
   14a16:	add.w	r4, r4, #50	; 0x32
   14a1a:	movs.w	ip, r1, lsr #22
   14a1e:	beq.w	147d2 <strvisx@@Base+0xa5e>
   14a22:	mov.w	r2, #3
   14a26:	movs.w	ip, ip, lsr #3
   14a2a:	it	ne
   14a2c:	addne	r2, #3
   14a2e:	movs.w	ip, ip, lsr #3
   14a32:	it	ne
   14a34:	addne	r2, #3
   14a36:	add.w	r2, r2, ip, lsr #3
   14a3a:	rsb	r3, r2, #32
   14a3e:	lsl.w	ip, r0, r3
   14a42:	lsr.w	r0, r0, r2
   14a46:	lsl.w	lr, r1, r3
   14a4a:	orr.w	r0, r0, lr
   14a4e:	lsr.w	r1, r1, r2
   14a52:	add	r4, r2
   14a54:	b.n	147d2 <strvisx@@Base+0xa5e>
   14a56:	nop
   14a58:	eor.w	r0, r0, #2147483648	; 0x80000000
   14a5c:	b.n	14a64 <strvisx@@Base+0xcf0>
   14a5e:	nop
   14a60:	eor.w	r1, r1, #2147483648	; 0x80000000
   14a64:	lsls	r2, r0, #1
   14a66:	itttt	ne
   14a68:	movsne.w	r3, r1, lsl #1
   14a6c:	teqne	r2, r3
   14a70:	mvnsne.w	ip, r2, asr #24
   14a74:	mvnsne.w	ip, r3, asr #24
   14a78:	beq.n	14b50 <strvisx@@Base+0xddc>
   14a7a:	mov.w	r2, r2, lsr #24
   14a7e:	rsbs	r3, r2, r3, lsr #24
   14a82:	itttt	gt
   14a84:	addgt	r2, r2, r3
   14a86:	eorgt	r1, r0
   14a88:	eorgt	r0, r1
   14a8a:	eorgt	r1, r0
   14a8c:	it	lt
   14a8e:	neglt	r3, r3
   14a90:	cmp	r3, #25
   14a92:	it	hi
   14a94:	bxhi	lr
   14a96:	tst.w	r0, #2147483648	; 0x80000000
   14a9a:	orr.w	r0, r0, #8388608	; 0x800000
   14a9e:	bic.w	r0, r0, #4278190080	; 0xff000000
   14aa2:	it	ne
   14aa4:	negne	r0, r0
   14aa6:	tst.w	r1, #2147483648	; 0x80000000
   14aaa:	orr.w	r1, r1, #8388608	; 0x800000
   14aae:	bic.w	r1, r1, #4278190080	; 0xff000000
   14ab2:	it	ne
   14ab4:	negne	r1, r1
   14ab6:	teq	r2, r3
   14aba:	beq.n	14b3c <strvisx@@Base+0xdc8>
   14abc:	sub.w	r2, r2, #1
   14ac0:	asr.w	ip, r1, r3
   14ac4:	adds.w	r0, r0, ip
   14ac8:	rsb	r3, r3, #32
   14acc:	lsl.w	r1, r1, r3
   14ad0:	and.w	r3, r0, #2147483648	; 0x80000000
   14ad4:	bpl.n	14adc <strvisx@@Base+0xd68>
   14ad6:	negs	r1, r1
   14ad8:	sbc.w	r0, r0, r0, lsl #1
   14adc:	cmp.w	r0, #8388608	; 0x800000
   14ae0:	bcc.n	14b0a <strvisx@@Base+0xd96>
   14ae2:	cmp.w	r0, #16777216	; 0x1000000
   14ae6:	bcc.n	14af6 <strvisx@@Base+0xd82>
   14ae8:	lsrs	r0, r0, #1
   14aea:	mov.w	r1, r1, rrx
   14aee:	add.w	r2, r2, #1
   14af2:	cmp	r2, #254	; 0xfe
   14af4:	bcs.n	14b9a <strvisx@@Base+0xe26>
   14af6:	cmp.w	r1, #2147483648	; 0x80000000
   14afa:	adc.w	r0, r0, r2, lsl #23
   14afe:	it	eq
   14b00:	biceq.w	r0, r0, #1
   14b04:	orr.w	r0, r0, r3
   14b08:	bx	lr
   14b0a:	lsls	r1, r1, #1
   14b0c:	adc.w	r0, r0, r0
   14b10:	subs	r2, #1
   14b12:	it	cs
   14b14:	cmpcs.w	r0, #8388608	; 0x800000
   14b18:	bcs.n	14af6 <strvisx@@Base+0xd82>
   14b1a:	clz	ip, r0
   14b1e:	sub.w	ip, ip, #8
   14b22:	subs.w	r2, r2, ip
   14b26:	lsl.w	r0, r0, ip
   14b2a:	itet	ge
   14b2c:	addge.w	r0, r0, r2, lsl #23
   14b30:	neglt	r2, r2
   14b32:	orrge	r0, r3
   14b34:	itt	lt
   14b36:	lsrlt	r0, r2
   14b38:	orrlt	r0, r3
   14b3a:	bx	lr
   14b3c:	teq	r2, #0
   14b40:	eor.w	r1, r1, #8388608	; 0x800000
   14b44:	itte	eq
   14b46:	eoreq.w	r0, r0, #8388608	; 0x800000
   14b4a:	addeq	r2, #1
   14b4c:	subne	r3, #1
   14b4e:	b.n	14abc <strvisx@@Base+0xd48>
   14b50:	mov.w	r3, r1, lsl #1
   14b54:	mvns.w	ip, r2, asr #24
   14b58:	it	ne
   14b5a:	mvnsne.w	ip, r3, asr #24
   14b5e:	beq.n	14ba4 <strvisx@@Base+0xe30>
   14b60:	teq	r2, r3
   14b64:	beq.n	14b70 <strvisx@@Base+0xdfc>
   14b66:	teq	r2, #0
   14b6a:	it	eq
   14b6c:	moveq	r0, r1
   14b6e:	bx	lr
   14b70:	teq	r0, r1
   14b74:	itt	ne
   14b76:	movne	r0, #0
   14b78:	bxne	lr
   14b7a:	tst.w	r2, #4278190080	; 0xff000000
   14b7e:	bne.n	14b8a <strvisx@@Base+0xe16>
   14b80:	lsls	r0, r0, #1
   14b82:	it	cs
   14b84:	orrcs.w	r0, r0, #2147483648	; 0x80000000
   14b88:	bx	lr
   14b8a:	adds.w	r2, r2, #33554432	; 0x2000000
   14b8e:	itt	cc
   14b90:	addcc.w	r0, r0, #8388608	; 0x800000
   14b94:	bxcc	lr
   14b96:	and.w	r3, r0, #2147483648	; 0x80000000
   14b9a:	orr.w	r0, r3, #2130706432	; 0x7f000000
   14b9e:	orr.w	r0, r0, #8388608	; 0x800000
   14ba2:	bx	lr
   14ba4:	mvns.w	r2, r2, asr #24
   14ba8:	itet	ne
   14baa:	movne	r0, r1
   14bac:	mvnseq.w	r3, r3, asr #24
   14bb0:	movne	r1, r0
   14bb2:	lsls	r2, r0, #9
   14bb4:	itte	eq
   14bb6:	movseq.w	r3, r1, lsl #9
   14bba:	teqeq	r0, r1
   14bbe:	orrne.w	r0, r0, #4194304	; 0x400000
   14bc2:	bx	lr
   14bc4:	mov.w	r3, #0
   14bc8:	b.n	14bd4 <strvisx@@Base+0xe60>
   14bca:	nop
   14bcc:	ands.w	r3, r0, #2147483648	; 0x80000000
   14bd0:	it	mi
   14bd2:	negmi	r0, r0
   14bd4:	movs.w	ip, r0
   14bd8:	it	eq
   14bda:	bxeq	lr
   14bdc:	orr.w	r3, r3, #1258291200	; 0x4b000000
   14be0:	mov	r1, r0
   14be2:	mov.w	r0, #0
   14be6:	b.n	14c22 <strvisx@@Base+0xeae>
   14be8:	orrs.w	r2, r0, r1
   14bec:	it	eq
   14bee:	bxeq	lr
   14bf0:	mov.w	r3, #0
   14bf4:	b.n	14c0c <strvisx@@Base+0xe98>
   14bf6:	nop
   14bf8:	orrs.w	r2, r0, r1
   14bfc:	it	eq
   14bfe:	bxeq	lr
   14c00:	ands.w	r3, r1, #2147483648	; 0x80000000
   14c04:	bpl.n	14c0c <strvisx@@Base+0xe98>
   14c06:	negs	r0, r0
   14c08:	sbc.w	r1, r1, r1, lsl #1
   14c0c:	movs.w	ip, r1
   14c10:	ittt	eq
   14c12:	moveq	ip, r0
   14c14:	moveq	r1, r0
   14c16:	moveq	r0, #0
   14c18:	orr.w	r3, r3, #1526726656	; 0x5b000000
   14c1c:	it	eq
   14c1e:	subeq.w	r3, r3, #268435456	; 0x10000000
   14c22:	sub.w	r3, r3, #8388608	; 0x800000
   14c26:	clz	r2, ip
   14c2a:	subs	r2, #8
   14c2c:	sub.w	r3, r3, r2, lsl #23
   14c30:	blt.n	14c54 <strvisx@@Base+0xee0>
   14c32:	lsl.w	ip, r1, r2
   14c36:	add	r3, ip
   14c38:	lsl.w	ip, r0, r2
   14c3c:	rsb	r2, r2, #32
   14c40:	cmp.w	ip, #2147483648	; 0x80000000
   14c44:	lsr.w	r2, r0, r2
   14c48:	adc.w	r0, r3, r2
   14c4c:	it	eq
   14c4e:	biceq.w	r0, r0, #1
   14c52:	bx	lr
   14c54:	add.w	r2, r2, #32
   14c58:	lsl.w	ip, r1, r2
   14c5c:	rsb	r2, r2, #32
   14c60:	orrs.w	r0, r0, ip, lsl #1
   14c64:	lsr.w	r2, r1, r2
   14c68:	adc.w	r0, r3, r2
   14c6c:	it	eq
   14c6e:	biceq.w	r0, r0, ip, lsr #31
   14c72:	bx	lr
   14c74:	cbnz	r3, 14c96 <strvisx@@Base+0xf22>
   14c76:	cbnz	r2, 14c96 <strvisx@@Base+0xf22>
   14c78:	cmp	r1, #0
   14c7a:	ittt	lt
   14c7c:	movlt	r0, #0
   14c7e:	movlt.w	r1, #2147483648	; 0x80000000
   14c82:	blt.n	14c92 <strvisx@@Base+0xf1e>
   14c84:	it	eq
   14c86:	cmpeq	r0, #0
   14c88:	itt	ne
   14c8a:	mvnne.w	r1, #2147483648	; 0x80000000
   14c8e:	movne.w	r0, #4294967295	; 0xffffffff
   14c92:	b.w	14d44 <strvisx@@Base+0xfd0>
   14c96:	sub.w	ip, sp, #8
   14c9a:	strd	ip, lr, [sp, #-16]!
   14c9e:	cmp	r1, #0
   14ca0:	blt.n	14cb6 <strvisx@@Base+0xf42>
   14ca2:	cmp	r3, #0
   14ca4:	blt.n	14cdc <strvisx@@Base+0xf68>
   14ca6:	bl	14f80 <strvisx@@Base+0x120c>
   14caa:	ldr.w	lr, [sp, #4]
   14cae:	ldrd	r2, r3, [sp, #8]
   14cb2:	add	sp, #16
   14cb4:	bx	lr
   14cb6:	negs	r0, r0
   14cb8:	sbc.w	r1, r1, r1, lsl #1
   14cbc:	cmp	r3, #0
   14cbe:	blt.n	14cf8 <strvisx@@Base+0xf84>
   14cc0:	bl	14f80 <strvisx@@Base+0x120c>
   14cc4:	ldr.w	lr, [sp, #4]
   14cc8:	ldrd	r2, r3, [sp, #8]
   14ccc:	add	sp, #16
   14cce:	negs	r0, r0
   14cd0:	sbc.w	r1, r1, r1, lsl #1
   14cd4:	negs	r2, r2
   14cd6:	sbc.w	r3, r3, r3, lsl #1
   14cda:	bx	lr
   14cdc:	negs	r2, r2
   14cde:	sbc.w	r3, r3, r3, lsl #1
   14ce2:	bl	14f80 <strvisx@@Base+0x120c>
   14ce6:	ldr.w	lr, [sp, #4]
   14cea:	ldrd	r2, r3, [sp, #8]
   14cee:	add	sp, #16
   14cf0:	negs	r0, r0
   14cf2:	sbc.w	r1, r1, r1, lsl #1
   14cf6:	bx	lr
   14cf8:	negs	r2, r2
   14cfa:	sbc.w	r3, r3, r3, lsl #1
   14cfe:	bl	14f80 <strvisx@@Base+0x120c>
   14d02:	ldr.w	lr, [sp, #4]
   14d06:	ldrd	r2, r3, [sp, #8]
   14d0a:	add	sp, #16
   14d0c:	negs	r2, r2
   14d0e:	sbc.w	r3, r3, r3, lsl #1
   14d12:	bx	lr
   14d14:	cbnz	r3, 14d2c <strvisx@@Base+0xfb8>
   14d16:	cbnz	r2, 14d2c <strvisx@@Base+0xfb8>
   14d18:	cmp	r1, #0
   14d1a:	it	eq
   14d1c:	cmpeq	r0, #0
   14d1e:	itt	ne
   14d20:	movne.w	r1, #4294967295	; 0xffffffff
   14d24:	movne.w	r0, #4294967295	; 0xffffffff
   14d28:	b.w	14d44 <strvisx@@Base+0xfd0>
   14d2c:	sub.w	ip, sp, #8
   14d30:	strd	ip, lr, [sp, #-16]!
   14d34:	bl	14f80 <strvisx@@Base+0x120c>
   14d38:	ldr.w	lr, [sp, #4]
   14d3c:	ldrd	r2, r3, [sp, #8]
   14d40:	add	sp, #16
   14d42:	bx	lr
   14d44:	push	{r1, lr}
   14d46:	mov.w	r0, #8
   14d4a:	blx	2594 <raise@plt+0x4>
   14d4e:	pop	{r1, pc}
   14d50:	cmp	r1, #0
   14d52:	add.w	r2, r0, r1
   14d56:	blt.n	14d66 <strvisx@@Base+0xff2>
   14d58:	cmp	r0, r2
   14d5a:	ite	le
   14d5c:	movle	r0, #0
   14d5e:	movgt	r0, #1
   14d60:	cbnz	r0, 14d70 <strvisx@@Base+0xffc>
   14d62:	mov	r0, r2
   14d64:	bx	lr
   14d66:	cmp	r0, r2
   14d68:	ite	ge
   14d6a:	movge	r0, #0
   14d6c:	movlt	r0, #1
   14d6e:	b.n	14d60 <strvisx@@Base+0xfec>
   14d70:	push	{r3, lr}
   14d72:	blx	2230 <abort@plt>
   14d76:	nop
   14d78:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   14d7c:	adds.w	r8, r0, r2
   14d80:	adc.w	r9, r1, r3
   14d84:	cmp	r2, #0
   14d86:	sbcs.w	r3, r3, #0
   14d8a:	blt.n	14da2 <strvisx@@Base+0x102e>
   14d8c:	cmp	r8, r0
   14d8e:	sbcs.w	r3, r9, r1
   14d92:	ite	lt
   14d94:	movlt	r3, #1
   14d96:	movge	r3, #0
   14d98:	cbnz	r3, 14db0 <strvisx@@Base+0x103c>
   14d9a:	mov	r0, r8
   14d9c:	mov	r1, r9
   14d9e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   14da2:	cmp	r0, r8
   14da4:	sbcs.w	r3, r1, r9
   14da8:	ite	lt
   14daa:	movlt	r3, #1
   14dac:	movge	r3, #0
   14dae:	b.n	14d98 <strvisx@@Base+0x1024>
   14db0:	blx	2230 <abort@plt>
   14db4:	cmp	r1, #0
   14db6:	sub.w	r2, r0, r1
   14dba:	blt.n	14dca <strvisx@@Base+0x1056>
   14dbc:	cmp	r0, r2
   14dbe:	ite	ge
   14dc0:	movge	r0, #0
   14dc2:	movlt	r0, #1
   14dc4:	cbnz	r0, 14dd4 <strvisx@@Base+0x1060>
   14dc6:	mov	r0, r2
   14dc8:	bx	lr
   14dca:	cmp	r0, r2
   14dcc:	ite	le
   14dce:	movle	r0, #0
   14dd0:	movgt	r0, #1
   14dd2:	b.n	14dc4 <strvisx@@Base+0x1050>
   14dd4:	push	{r3, lr}
   14dd6:	blx	2230 <abort@plt>
   14dda:	nop
   14ddc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   14de0:	subs.w	r8, r0, r2
   14de4:	sbc.w	r9, r1, r3
   14de8:	cmp	r2, #0
   14dea:	sbcs.w	r3, r3, #0
   14dee:	blt.n	14e06 <strvisx@@Base+0x1092>
   14df0:	cmp	r0, r8
   14df2:	sbcs.w	r3, r1, r9
   14df6:	ite	lt
   14df8:	movlt	r3, #1
   14dfa:	movge	r3, #0
   14dfc:	cbnz	r3, 14e14 <strvisx@@Base+0x10a0>
   14dfe:	mov	r0, r8
   14e00:	mov	r1, r9
   14e02:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   14e06:	cmp	r8, r0
   14e08:	sbcs.w	r3, r9, r1
   14e0c:	ite	lt
   14e0e:	movlt	r3, #1
   14e10:	movge	r3, #0
   14e12:	b.n	14dfc <strvisx@@Base+0x1088>
   14e14:	blx	2230 <abort@plt>
   14e18:	smull	r0, r1, r0, r1
   14e1c:	cmp.w	r1, r0, asr #31
   14e20:	bne.n	14e24 <strvisx@@Base+0x10b0>
   14e22:	bx	lr
   14e24:	push	{r3, lr}
   14e26:	blx	2230 <abort@plt>
   14e2a:	nop
   14e2c:	cmp.w	r1, r0, asr #31
   14e30:	push	{r3, r4, r5, r6, r7, lr}
   14e32:	mov.w	r4, r2, asr #31
   14e36:	bne.n	14e42 <strvisx@@Base+0x10ce>
   14e38:	cmp	r4, r3
   14e3a:	bne.n	14e76 <strvisx@@Base+0x1102>
   14e3c:	smull	r0, r1, r0, r2
   14e40:	pop	{r3, r4, r5, r6, r7, pc}
   14e42:	cmp	r4, r3
   14e44:	bne.n	14ea6 <strvisx@@Base+0x1132>
   14e46:	umull	r4, r5, r1, r2
   14e4a:	cmp	r1, #0
   14e4c:	umull	r6, r7, r0, r2
   14e50:	itt	lt
   14e52:	sublt.w	lr, r5, r2
   14e56:	movlt	r5, lr
   14e58:	cmp	r2, #0
   14e5a:	mov	r3, r6
   14e5c:	bge.n	14e64 <strvisx@@Base+0x10f0>
   14e5e:	subs	r4, r4, r0
   14e60:	sbc.w	r5, r5, r1
   14e64:	adds	r4, r4, r7
   14e66:	adc.w	r5, r5, #0
   14e6a:	cmp.w	r5, r4, asr #31
   14e6e:	bne.n	14ebe <strvisx@@Base+0x114a>
   14e70:	mov	r0, r3
   14e72:	mov	r1, r4
   14e74:	pop	{r3, r4, r5, r6, r7, pc}
   14e76:	umull	r4, r5, r3, r0
   14e7a:	cmp	r3, #0
   14e7c:	umull	r6, r7, r2, r0
   14e80:	itt	lt
   14e82:	sublt.w	lr, r5, r0
   14e86:	movlt	r5, lr
   14e88:	cmp	r0, #0
   14e8a:	mov	ip, r6
   14e8c:	bge.n	14e94 <strvisx@@Base+0x1120>
   14e8e:	subs	r4, r4, r2
   14e90:	sbc.w	r5, r5, r3
   14e94:	adds	r4, r4, r7
   14e96:	adc.w	r5, r5, #0
   14e9a:	cmp.w	r5, r4, asr #31
   14e9e:	bne.n	14ebe <strvisx@@Base+0x114a>
   14ea0:	mov	r0, ip
   14ea2:	mov	r1, r4
   14ea4:	pop	{r3, r4, r5, r6, r7, pc}
   14ea6:	cmp	r1, #0
   14ea8:	blt.n	14ec2 <strvisx@@Base+0x114e>
   14eaa:	cmp	r3, #0
   14eac:	blt.n	14eea <strvisx@@Base+0x1176>
   14eae:	orrs	r3, r1
   14eb0:	bne.n	14ebe <strvisx@@Base+0x114a>
   14eb2:	umull	r0, r1, r0, r2
   14eb6:	cmp	r0, #0
   14eb8:	sbcs.w	r3, r1, #0
   14ebc:	bge.n	14e40 <strvisx@@Base+0x10cc>
   14ebe:	blx	2230 <abort@plt>
   14ec2:	cmp	r3, #0
   14ec4:	blt.n	14f02 <strvisx@@Base+0x118e>
   14ec6:	ite	eq
   14ec8:	moveq	r3, #1
   14eca:	movne	r3, #0
   14ecc:	cmp.w	r1, #4294967295	; 0xffffffff
   14ed0:	ite	ne
   14ed2:	movne	r1, #0
   14ed4:	andeq.w	r1, r3, #1
   14ed8:	cmp	r1, #0
   14eda:	beq.n	14ebe <strvisx@@Base+0x114a>
   14edc:	umull	r4, r5, r0, r2
   14ee0:	subs	r3, r5, r2
   14ee2:	bpl.n	14ebe <strvisx@@Base+0x114a>
   14ee4:	mov	r0, r4
   14ee6:	mov	r1, r3
   14ee8:	pop	{r3, r4, r5, r6, r7, pc}
   14eea:	cmp.w	r3, #4294967295	; 0xffffffff
   14eee:	it	eq
   14ef0:	cmpeq	r1, #0
   14ef2:	bne.n	14ebe <strvisx@@Base+0x114a>
   14ef4:	umull	r2, r3, r0, r2
   14ef8:	subs	r4, r3, r0
   14efa:	bpl.n	14ebe <strvisx@@Base+0x114a>
   14efc:	mov	r0, r2
   14efe:	mov	r1, r4
   14f00:	pop	{r3, r4, r5, r6, r7, pc}
   14f02:	ands	r1, r3
   14f04:	adds	r1, #1
   14f06:	bne.n	14ebe <strvisx@@Base+0x114a>
   14f08:	orrs.w	r3, r0, r2
   14f0c:	beq.n	14ebe <strvisx@@Base+0x114a>
   14f0e:	umull	r4, r5, r0, r2
   14f12:	subs	r3, r5, r0
   14f14:	subs	r3, r3, r2
   14f16:	bpl.n	14ee4 <strvisx@@Base+0x1170>
   14f18:	b.n	14ebe <strvisx@@Base+0x114a>
   14f1a:	nop
   14f1c:	cmp	r0, #0
   14f1e:	push	{r3, lr}
   14f20:	rsb	r3, r0, #0
   14f24:	it	lt
   14f26:	lsrlt	r2, r3, #31
   14f28:	blt.n	14f32 <strvisx@@Base+0x11be>
   14f2a:	cmp	r3, #0
   14f2c:	ite	le
   14f2e:	movle	r2, #0
   14f30:	movgt	r2, #1
   14f32:	cbnz	r2, 14f38 <strvisx@@Base+0x11c4>
   14f34:	mov	r0, r3
   14f36:	pop	{r3, pc}
   14f38:	blx	2230 <abort@plt>
   14f3c:	movs	r0, r0
   14f3e:	movs	r0, r0
   14f40:	vldr	d6, [pc, #44]	; 14f70 <strvisx@@Base+0x11fc>
   14f44:	vmov	d7, r0, r1
   14f48:	vmul.f64	d6, d7, d6
   14f4c:	vldr	d5, [pc, #40]	; 14f78 <strvisx@@Base+0x1204>
   14f50:	vcvt.u32.f64	s12, d6
   14f54:	vcvt.f64.u32	d4, s12
   14f58:	vmov	r1, s12
   14f5c:	vmls.f64	d7, d4, d5
   14f60:	vcvt.u32.f64	s15, d7
   14f64:	vmov	r0, s15
   14f68:	bx	lr
   14f6a:	nop
   14f6c:	nop.w
   14f70:	movs	r0, r0
   14f72:	movs	r0, r0
   14f74:	movs	r0, r0
   14f76:	subs	r5, #240	; 0xf0
   14f78:	movs	r0, r0
   14f7a:	movs	r0, r0
   14f7c:	movs	r0, r0
   14f7e:	rors	r0, r6
   14f80:	cmp	r1, r3
   14f82:	it	eq
   14f84:	cmpeq	r0, r2
   14f86:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f8a:	mov	r4, r0
   14f8c:	it	cc
   14f8e:	movcc	r0, #0
   14f90:	mov	r5, r1
   14f92:	ldr.w	ip, [sp, #36]	; 0x24
   14f96:	it	cc
   14f98:	movcc	r1, r0
   14f9a:	bcc.n	15074 <strvisx@@Base+0x1300>
   14f9c:	mov	r8, r2
   14f9e:	mov	r9, r3
   14fa0:	clz	r2, r3
   14fa4:	cmp	r3, #0
   14fa6:	beq.n	1508a <strvisx@@Base+0x1316>
   14fa8:	clz	r3, r5
   14fac:	cmp	r5, #0
   14fae:	beq.n	15082 <strvisx@@Base+0x130e>
   14fb0:	subs	r2, r2, r3
   14fb2:	sub.w	lr, r2, #32
   14fb6:	lsl.w	fp, r9, r2
   14fba:	lsl.w	r3, r8, lr
   14fbe:	rsb	r7, r2, #32
   14fc2:	orr.w	fp, fp, r3
   14fc6:	lsr.w	r3, r8, r7
   14fca:	orr.w	fp, fp, r3
   14fce:	lsl.w	sl, r8, r2
   14fd2:	cmp	r5, fp
   14fd4:	it	eq
   14fd6:	cmpeq	r4, sl
   14fd8:	itt	cc
   14fda:	movcc	r0, #0
   14fdc:	movcc	r1, r0
   14fde:	bcc.n	14ff6 <strvisx@@Base+0x1282>
   14fe0:	movs	r0, #1
   14fe2:	subs.w	r4, r4, sl
   14fe6:	lsl.w	r1, r0, lr
   14fea:	lsr.w	r3, r0, r7
   14fee:	sbc.w	r5, r5, fp
   14ff2:	orrs	r1, r3
   14ff4:	lsls	r0, r2
   14ff6:	cmp	r2, #0
   14ff8:	beq.n	15074 <strvisx@@Base+0x1300>
   14ffa:	mov.w	r8, sl, lsr #1
   14ffe:	mov.w	r9, fp, lsr #1
   15002:	orr.w	r8, r8, fp, lsl #31
   15006:	mov	r6, r2
   15008:	b.n	15022 <strvisx@@Base+0x12ae>
   1500a:	subs.w	r3, r4, r8
   1500e:	sbc.w	sl, r5, r9
   15012:	adds	r3, r3, r3
   15014:	adc.w	sl, sl, sl
   15018:	adds	r4, r3, #1
   1501a:	adc.w	r5, sl, #0
   1501e:	subs	r6, #1
   15020:	beq.n	15032 <strvisx@@Base+0x12be>
   15022:	cmp	r5, r9
   15024:	it	eq
   15026:	cmpeq	r4, r8
   15028:	bcs.n	1500a <strvisx@@Base+0x1296>
   1502a:	adds	r4, r4, r4
   1502c:	adcs	r5, r5
   1502e:	subs	r6, #1
   15030:	bne.n	15022 <strvisx@@Base+0x12ae>
   15032:	lsl.w	r7, r5, r7
   15036:	lsr.w	r3, r4, r2
   1503a:	orrs	r3, r7
   1503c:	lsr.w	lr, r5, lr
   15040:	adds	r0, r0, r4
   15042:	lsr.w	r8, r5, r2
   15046:	orr.w	r4, r3, lr
   1504a:	sub.w	r7, r2, #32
   1504e:	rsb	r6, r2, #32
   15052:	lsl.w	r3, r8, r2
   15056:	lsl.w	r7, r4, r7
   1505a:	lsl.w	r2, r4, r2
   1505e:	orr.w	r3, r3, r7
   15062:	lsr.w	r6, r4, r6
   15066:	adc.w	r1, r5, r1
   1506a:	orrs	r3, r6
   1506c:	subs	r0, r0, r2
   1506e:	mov	r5, r8
   15070:	sbc.w	r1, r1, r3
   15074:	cmp.w	ip, #0
   15078:	beq.n	1507e <strvisx@@Base+0x130a>
   1507a:	strd	r4, r5, [ip]
   1507e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15082:	clz	r3, r4
   15086:	adds	r3, #32
   15088:	b.n	14fb0 <strvisx@@Base+0x123c>
   1508a:	clz	r2, r8
   1508e:	clz	r3, r5
   15092:	adds	r2, #32
   15094:	cmp	r5, #0
   15096:	bne.n	14fb0 <strvisx@@Base+0x123c>
   15098:	b.n	15082 <strvisx@@Base+0x130e>
   1509a:	nop
   1509c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   150a0:	mov	r7, r0
   150a2:	ldr	r6, [pc, #48]	; (150d4 <strvisx@@Base+0x1360>)
   150a4:	mov	r8, r1
   150a6:	ldr	r5, [pc, #48]	; (150d8 <strvisx@@Base+0x1364>)
   150a8:	mov	r9, r2
   150aa:	add	r6, pc
   150ac:	blx	21b8 <getpgrp@plt-0x20>
   150b0:	add	r5, pc
   150b2:	subs	r6, r6, r5
   150b4:	asrs	r6, r6, #2
   150b6:	beq.n	150ce <strvisx@@Base+0x135a>
   150b8:	subs	r5, #4
   150ba:	movs	r4, #0
   150bc:	ldr.w	r3, [r5, #4]!
   150c0:	adds	r4, #1
   150c2:	mov	r2, r9
   150c4:	mov	r1, r8
   150c6:	mov	r0, r7
   150c8:	blx	r3
   150ca:	cmp	r6, r4
   150cc:	bne.n	150bc <strvisx@@Base+0x1348>
   150ce:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   150d2:	nop
   150d4:			; <UNDEFINED> instruction: 0x47fa
   150d6:	movs	r1, r0
   150d8:	blx	lr
   150da:	movs	r1, r0
   150dc:	bx	lr
   150de:	nop

Disassembly of section .fini:

000150e0 <.fini>:
   150e0:	push	{r3, lr}
   150e4:	pop	{r3, pc}
