
ubuntu-preinstalled/btrfstune:     file format elf32-littlearm


Disassembly of section .init:

00008334 <.init>:
    8334:	push	{r3, lr}
    8338:	bl	93c4 <_start@@Base+0x48>
    833c:	pop	{r3, pc}

Disassembly of section .plt:

00008340 <calloc@plt-0x14>:
    8340:	push	{lr}		; (str lr, [sp, #-4]!)
    8344:	ldr	lr, [pc, #4]	; 8350 <calloc@plt-0x4>
    8348:	add	lr, pc, lr
    834c:	ldr	pc, [lr, #8]!
    8350:	andeq	ip, r5, ip, lsr sl

00008354 <calloc@plt>:
    8354:			; <UNDEFINED> instruction: 0xe7fd4778
    8358:	add	ip, pc, #0, 12
    835c:	add	ip, ip, #92, 20	; 0x5c000
    8360:	ldr	pc, [ip, #2616]!	; 0xa38

00008364 <raise@plt>:
    8364:	add	ip, pc, #0, 12
    8368:	add	ip, ip, #92, 20	; 0x5c000
    836c:	ldr	pc, [ip, #2608]!	; 0xa30

00008370 <fsync@plt>:
    8370:	add	ip, pc, #0, 12
    8374:	add	ip, ip, #92, 20	; 0x5c000
    8378:	ldr	pc, [ip, #2600]!	; 0xa28

0000837c <strcmp@plt>:
    837c:	add	ip, pc, #0, 12
    8380:	add	ip, ip, #92, 20	; 0x5c000
    8384:	ldr	pc, [ip, #2592]!	; 0xa20

00008388 <__cxa_finalize@plt>:
    8388:	add	ip, pc, #0, 12
    838c:	add	ip, ip, #92, 20	; 0x5c000
    8390:	ldr	pc, [ip, #2584]!	; 0xa18

00008394 <uuid_unparse@plt>:
    8394:	add	ip, pc, #0, 12
    8398:	add	ip, ip, #92, 20	; 0x5c000
    839c:	ldr	pc, [ip, #2576]!	; 0xa10

000083a0 <posix_fadvise64@plt>:
    83a0:	add	ip, pc, #0, 12
    83a4:	add	ip, ip, #92, 20	; 0x5c000
    83a8:	ldr	pc, [ip, #2568]!	; 0xa08

000083ac <blkid_probe_lookup_value@plt>:
    83ac:	add	ip, pc, #0, 12
    83b0:	add	ip, ip, #92, 20	; 0x5c000
    83b4:	ldr	pc, [ip, #2560]!	; 0xa00

000083b8 <read@plt>:
    83b8:	add	ip, pc, #0, 12
    83bc:	add	ip, ip, #92, 20	; 0x5c000
    83c0:	ldr	pc, [ip, #2552]!	; 0x9f8

000083c4 <fflush@plt>:
    83c4:	add	ip, pc, #0, 12
    83c8:	add	ip, ip, #92, 20	; 0x5c000
    83cc:	ldr	pc, [ip, #2544]!	; 0x9f0

000083d0 <unlinkat@plt>:
    83d0:	add	ip, pc, #0, 12
    83d4:	add	ip, ip, #92, 20	; 0x5c000
    83d8:	ldr	pc, [ip, #2536]!	; 0x9e8

000083dc <memmove@plt>:
    83dc:			; <UNDEFINED> instruction: 0xe7fd4778
    83e0:	add	ip, pc, #0, 12
    83e4:	add	ip, ip, #92, 20	; 0x5c000
    83e8:	ldr	pc, [ip, #2524]!	; 0x9dc

000083ec <free@plt>:
    83ec:			; <UNDEFINED> instruction: 0xe7fd4778
    83f0:	add	ip, pc, #0, 12
    83f4:	add	ip, ip, #92, 20	; 0x5c000
    83f8:	ldr	pc, [ip, #2512]!	; 0x9d0

000083fc <fgets@plt>:
    83fc:	add	ip, pc, #0, 12
    8400:	add	ip, ip, #92, 20	; 0x5c000
    8404:	ldr	pc, [ip, #2504]!	; 0x9c8

00008408 <fgetxattr@plt>:
    8408:	add	ip, pc, #0, 12
    840c:	add	ip, ip, #92, 20	; 0x5c000
    8410:	ldr	pc, [ip, #2496]!	; 0x9c0

00008414 <statfs@plt>:
    8414:	add	ip, pc, #0, 12
    8418:	add	ip, ip, #92, 20	; 0x5c000
    841c:	ldr	pc, [ip, #2488]!	; 0x9b8

00008420 <strndup@plt>:
    8420:	add	ip, pc, #0, 12
    8424:	add	ip, ip, #92, 20	; 0x5c000
    8428:	ldr	pc, [ip, #2480]!	; 0x9b0

0000842c <__vsnprintf_chk@plt>:
    842c:	add	ip, pc, #0, 12
    8430:	add	ip, ip, #92, 20	; 0x5c000
    8434:	ldr	pc, [ip, #2472]!	; 0x9a8

00008438 <memcpy@plt>:
    8438:			; <UNDEFINED> instruction: 0xe7fd4778
    843c:	add	ip, pc, #0, 12
    8440:	add	ip, ip, #92, 20	; 0x5c000
    8444:	ldr	pc, [ip, #2460]!	; 0x99c

00008448 <__memset_chk@plt>:
    8448:	add	ip, pc, #0, 12
    844c:	add	ip, ip, #92, 20	; 0x5c000
    8450:	ldr	pc, [ip, #2452]!	; 0x994

00008454 <time@plt>:
    8454:	add	ip, pc, #0, 12
    8458:	add	ip, ip, #92, 20	; 0x5c000
    845c:	ldr	pc, [ip, #2444]!	; 0x98c

00008460 <memcmp@plt>:
    8460:			; <UNDEFINED> instruction: 0xe7fd4778
    8464:	add	ip, pc, #0, 12
    8468:	add	ip, ip, #92, 20	; 0x5c000
    846c:	ldr	pc, [ip, #2432]!	; 0x980

00008470 <__vprintf_chk@plt>:
    8470:	add	ip, pc, #0, 12
    8474:	add	ip, ip, #92, 20	; 0x5c000
    8478:	ldr	pc, [ip, #2424]!	; 0x978

0000847c <jrand48@plt>:
    847c:			; <UNDEFINED> instruction: 0xe7fd4778
    8480:	add	ip, pc, #0, 12
    8484:	add	ip, ip, #92, 20	; 0x5c000
    8488:	ldr	pc, [ip, #2412]!	; 0x96c

0000848c <blkid_put_cache@plt>:
    848c:	add	ip, pc, #0, 12
    8490:	add	ip, ip, #92, 20	; 0x5c000
    8494:	ldr	pc, [ip, #2404]!	; 0x964

00008498 <uname@plt>:
    8498:	add	ip, pc, #0, 12
    849c:	add	ip, ip, #92, 20	; 0x5c000
    84a0:	ldr	pc, [ip, #2396]!	; 0x95c

000084a4 <blkid_probe_set_device@plt>:
    84a4:	add	ip, pc, #0, 12
    84a8:	add	ip, ip, #92, 20	; 0x5c000
    84ac:	ldr	pc, [ip, #2388]!	; 0x954

000084b0 <strdup@plt>:
    84b0:			; <UNDEFINED> instruction: 0xe7fd4778
    84b4:	add	ip, pc, #0, 12
    84b8:	add	ip, ip, #92, 20	; 0x5c000
    84bc:	ldr	pc, [ip, #2376]!	; 0x948

000084c0 <openat@plt>:
    84c0:	add	ip, pc, #0, 12
    84c4:	add	ip, ip, #92, 20	; 0x5c000
    84c8:	ldr	pc, [ip, #2368]!	; 0x940

000084cc <__stack_chk_fail@plt>:
    84cc:	add	ip, pc, #0, 12
    84d0:	add	ip, ip, #92, 20	; 0x5c000
    84d4:	ldr	pc, [ip, #2360]!	; 0x938

000084d8 <blkid_dev_iterate_begin@plt>:
    84d8:	add	ip, pc, #0, 12
    84dc:	add	ip, ip, #92, 20	; 0x5c000
    84e0:	ldr	pc, [ip, #2352]!	; 0x930

000084e4 <realloc@plt>:
    84e4:			; <UNDEFINED> instruction: 0xe7fd4778
    84e8:	add	ip, pc, #0, 12
    84ec:	add	ip, ip, #92, 20	; 0x5c000
    84f0:	ldr	pc, [ip, #2340]!	; 0x924

000084f4 <localtime_r@plt>:
    84f4:	add	ip, pc, #0, 12
    84f8:	add	ip, ip, #92, 20	; 0x5c000
    84fc:	ldr	pc, [ip, #2332]!	; 0x91c

00008500 <uuid_compare@plt>:
    8500:	add	ip, pc, #0, 12
    8504:	add	ip, ip, #92, 20	; 0x5c000
    8508:	ldr	pc, [ip, #2324]!	; 0x914

0000850c <strcasecmp@plt>:
    850c:	add	ip, pc, #0, 12
    8510:	add	ip, ip, #92, 20	; 0x5c000
    8514:	ldr	pc, [ip, #2316]!	; 0x90c

00008518 <geteuid@plt>:
    8518:	add	ip, pc, #0, 12
    851c:	add	ip, ip, #92, 20	; 0x5c000
    8520:	ldr	pc, [ip, #2308]!	; 0x904

00008524 <perror@plt>:
    8524:	add	ip, pc, #0, 12
    8528:	add	ip, ip, #92, 20	; 0x5c000
    852c:	ldr	pc, [ip, #2300]!	; 0x8fc

00008530 <__xstat@plt>:
    8530:			; <UNDEFINED> instruction: 0xe7fd4778
    8534:	add	ip, pc, #0, 12
    8538:	add	ip, ip, #92, 20	; 0x5c000
    853c:	ldr	pc, [ip, #2288]!	; 0x8f0

00008540 <blkid_dev_set_search@plt>:
    8540:	add	ip, pc, #0, 12
    8544:	add	ip, ip, #92, 20	; 0x5c000
    8548:	ldr	pc, [ip, #2280]!	; 0x8e8

0000854c <__fxstat64@plt>:
    854c:			; <UNDEFINED> instruction: 0xe7fd4778
    8550:	add	ip, pc, #0, 12
    8554:	add	ip, ip, #92, 20	; 0x5c000
    8558:	ldr	pc, [ip, #2268]!	; 0x8dc

0000855c <__memcpy_chk@plt>:
    855c:	add	ip, pc, #0, 12
    8560:	add	ip, ip, #92, 20	; 0x5c000
    8564:	ldr	pc, [ip, #2260]!	; 0x8d4

00008568 <strcat@plt>:
    8568:			; <UNDEFINED> instruction: 0xe7fd4778
    856c:	add	ip, pc, #0, 12
    8570:	add	ip, ip, #92, 20	; 0x5c000
    8574:	ldr	pc, [ip, #2248]!	; 0x8c8

00008578 <ioctl@plt>:
    8578:	add	ip, pc, #0, 12
    857c:	add	ip, ip, #92, 20	; 0x5c000
    8580:	ldr	pc, [ip, #2240]!	; 0x8c0

00008584 <lseek64@plt>:
    8584:	add	ip, pc, #0, 12
    8588:	add	ip, ip, #92, 20	; 0x5c000
    858c:	ldr	pc, [ip, #2232]!	; 0x8b8

00008590 <strtoll@plt>:
    8590:	add	ip, pc, #0, 12
    8594:	add	ip, ip, #92, 20	; 0x5c000
    8598:	ldr	pc, [ip, #2224]!	; 0x8b0

0000859c <__realpath_chk@plt>:
    859c:	add	ip, pc, #0, 12
    85a0:	add	ip, ip, #92, 20	; 0x5c000
    85a4:	ldr	pc, [ip, #2216]!	; 0x8a8

000085a8 <readahead@plt>:
    85a8:	add	ip, pc, #0, 12
    85ac:	add	ip, ip, #92, 20	; 0x5c000
    85b0:	ldr	pc, [ip, #2208]!	; 0x8a0

000085b4 <strcpy@plt>:
    85b4:	add	ip, pc, #0, 12
    85b8:	add	ip, ip, #92, 20	; 0x5c000
    85bc:	ldr	pc, [ip, #2200]!	; 0x898

000085c0 <gettimeofday@plt>:
    85c0:	add	ip, pc, #0, 12
    85c4:	add	ip, ip, #92, 20	; 0x5c000
    85c8:	ldr	pc, [ip, #2192]!	; 0x890

000085cc <pread64@plt>:
    85cc:	add	ip, pc, #0, 12
    85d0:	add	ip, ip, #92, 20	; 0x5c000
    85d4:	ldr	pc, [ip, #2184]!	; 0x888

000085d8 <pthread_create@plt>:
    85d8:	add	ip, pc, #0, 12
    85dc:	add	ip, ip, #92, 20	; 0x5c000
    85e0:	ldr	pc, [ip, #2176]!	; 0x880

000085e4 <strtok_r@plt>:
    85e4:	add	ip, pc, #0, 12
    85e8:	add	ip, ip, #92, 20	; 0x5c000
    85ec:	ldr	pc, [ip, #2168]!	; 0x878

000085f0 <getmntent@plt>:
    85f0:	add	ip, pc, #0, 12
    85f4:	add	ip, ip, #92, 20	; 0x5c000
    85f8:	ldr	pc, [ip, #2160]!	; 0x870

000085fc <opendir@plt>:
    85fc:	add	ip, pc, #0, 12
    8600:	add	ip, ip, #92, 20	; 0x5c000
    8604:	ldr	pc, [ip, #2152]!	; 0x868

00008608 <open64@plt>:
    8608:	add	ip, pc, #0, 12
    860c:	add	ip, ip, #92, 20	; 0x5c000
    8610:	ldr	pc, [ip, #2144]!	; 0x860

00008614 <puts@plt>:
    8614:			; <UNDEFINED> instruction: 0xe7fd4778
    8618:	add	ip, pc, #0, 12
    861c:	add	ip, ip, #92, 20	; 0x5c000
    8620:	ldr	pc, [ip, #2132]!	; 0x854

00008624 <sysinfo@plt>:
    8624:	add	ip, pc, #0, 12
    8628:	add	ip, ip, #92, 20	; 0x5c000
    862c:	ldr	pc, [ip, #2124]!	; 0x84c

00008630 <malloc@plt>:
    8630:			; <UNDEFINED> instruction: 0xe7fd4778
    8634:	add	ip, pc, #0, 12
    8638:	add	ip, ip, #92, 20	; 0x5c000
    863c:	ldr	pc, [ip, #2112]!	; 0x840

00008640 <__libc_start_main@plt>:
    8640:	add	ip, pc, #0, 12
    8644:	add	ip, ip, #92, 20	; 0x5c000
    8648:	ldr	pc, [ip, #2104]!	; 0x838

0000864c <strerror@plt>:
    864c:	add	ip, pc, #0, 12
    8650:	add	ip, ip, #92, 20	; 0x5c000
    8654:	ldr	pc, [ip, #2096]!	; 0x830

00008658 <__fxstat@plt>:
    8658:			; <UNDEFINED> instruction: 0xe7fd4778
    865c:	add	ip, pc, #0, 12
    8660:	add	ip, ip, #92, 20	; 0x5c000
    8664:	ldr	pc, [ip, #2084]!	; 0x824

00008668 <strftime@plt>:
    8668:	add	ip, pc, #0, 12
    866c:	add	ip, ip, #92, 20	; 0x5c000
    8670:	ldr	pc, [ip, #2076]!	; 0x81c

00008674 <__vfprintf_chk@plt>:
    8674:	add	ip, pc, #0, 12
    8678:	add	ip, ip, #92, 20	; 0x5c000
    867c:	ldr	pc, [ip, #2068]!	; 0x814

00008680 <backtrace@plt>:
    8680:	add	ip, pc, #0, 12
    8684:	add	ip, ip, #92, 20	; 0x5c000
    8688:	ldr	pc, [ip, #2060]!	; 0x80c

0000868c <blkid_dev_next@plt>:
    868c:	add	ip, pc, #0, 12
    8690:	add	ip, ip, #92, 20	; 0x5c000
    8694:	ldr	pc, [ip, #2052]!	; 0x804

00008698 <blkid_verify@plt>:
    8698:	add	ip, pc, #0, 12
    869c:	add	ip, ip, #92, 20	; 0x5c000
    86a0:	ldr	pc, [ip, #2044]!	; 0x7fc

000086a4 <__ctype_tolower_loc@plt>:
    86a4:	add	ip, pc, #0, 12
    86a8:	add	ip, ip, #92, 20	; 0x5c000
    86ac:	ldr	pc, [ip, #2036]!	; 0x7f4

000086b0 <__gmon_start__@plt>:
    86b0:	add	ip, pc, #0, 12
    86b4:	add	ip, ip, #92, 20	; 0x5c000
    86b8:	ldr	pc, [ip, #2028]!	; 0x7ec

000086bc <open@plt>:
    86bc:	add	ip, pc, #0, 12
    86c0:	add	ip, ip, #92, 20	; 0x5c000
    86c4:	ldr	pc, [ip, #2020]!	; 0x7e4

000086c8 <timerfd_create@plt>:
    86c8:	add	ip, pc, #0, 12
    86cc:	add	ip, ip, #92, 20	; 0x5c000
    86d0:	ldr	pc, [ip, #2012]!	; 0x7dc

000086d4 <getopt_long@plt>:
    86d4:	add	ip, pc, #0, 12
    86d8:	add	ip, ip, #92, 20	; 0x5c000
    86dc:	ldr	pc, [ip, #2004]!	; 0x7d4

000086e0 <__ctype_b_loc@plt>:
    86e0:	add	ip, pc, #0, 12
    86e4:	add	ip, ip, #92, 20	; 0x5c000
    86e8:	ldr	pc, [ip, #1996]!	; 0x7cc

000086ec <getpid@plt>:
    86ec:	add	ip, pc, #0, 12
    86f0:	add	ip, ip, #92, 20	; 0x5c000
    86f4:	ldr	pc, [ip, #1988]!	; 0x7c4

000086f8 <exit@plt>:
    86f8:	add	ip, pc, #0, 12
    86fc:	add	ip, ip, #92, 20	; 0x5c000
    8700:	ldr	pc, [ip, #1980]!	; 0x7bc

00008704 <strlen@plt>:
    8704:	add	ip, pc, #0, 12
    8708:	add	ip, ip, #92, 20	; 0x5c000
    870c:	ldr	pc, [ip, #1972]!	; 0x7b4

00008710 <strchr@plt>:
    8710:	add	ip, pc, #0, 12
    8714:	add	ip, ip, #92, 20	; 0x5c000
    8718:	ldr	pc, [ip, #1964]!	; 0x7ac

0000871c <openat64@plt>:
    871c:	add	ip, pc, #0, 12
    8720:	add	ip, ip, #92, 20	; 0x5c000
    8724:	ldr	pc, [ip, #1956]!	; 0x7a4

00008728 <memrchr@plt>:
    8728:	add	ip, pc, #0, 12
    872c:	add	ip, ip, #92, 20	; 0x5c000
    8730:	ldr	pc, [ip, #1948]!	; 0x79c

00008734 <__open64_2@plt>:
    8734:	add	ip, pc, #0, 12
    8738:	add	ip, ip, #92, 20	; 0x5c000
    873c:	ldr	pc, [ip, #1940]!	; 0x794

00008740 <__errno_location@plt>:
    8740:	add	ip, pc, #0, 12
    8744:	add	ip, ip, #92, 20	; 0x5c000
    8748:	ldr	pc, [ip, #1932]!	; 0x78c

0000874c <__strcat_chk@plt>:
    874c:	add	ip, pc, #0, 12
    8750:	add	ip, ip, #92, 20	; 0x5c000
    8754:	ldr	pc, [ip, #1924]!	; 0x784

00008758 <__sprintf_chk@plt>:
    8758:	add	ip, pc, #0, 12
    875c:	add	ip, ip, #92, 20	; 0x5c000
    8760:	ldr	pc, [ip, #1916]!	; 0x77c

00008764 <blkid_new_probe@plt>:
    8764:	add	ip, pc, #0, 12
    8768:	add	ip, ip, #92, 20	; 0x5c000
    876c:	ldr	pc, [ip, #1908]!	; 0x774

00008770 <uuid_is_null@plt>:
    8770:	add	ip, pc, #0, 12
    8774:	add	ip, ip, #92, 20	; 0x5c000
    8778:	ldr	pc, [ip, #1900]!	; 0x76c

0000877c <memset@plt>:
    877c:			; <UNDEFINED> instruction: 0xe7fd4778
    8780:	add	ip, pc, #0, 12
    8784:	add	ip, ip, #92, 20	; 0x5c000
    8788:	ldr	pc, [ip, #1888]!	; 0x760

0000878c <putchar@plt>:
    878c:			; <UNDEFINED> instruction: 0xe7fd4778
    8790:	add	ip, pc, #0, 12
    8794:	add	ip, ip, #92, 20	; 0x5c000
    8798:	ldr	pc, [ip, #1876]!	; 0x754

0000879c <strncpy@plt>:
    879c:	add	ip, pc, #0, 12
    87a0:	add	ip, ip, #92, 20	; 0x5c000
    87a4:	ldr	pc, [ip, #1868]!	; 0x74c

000087a8 <pthread_cancel@plt>:
    87a8:	add	ip, pc, #0, 12
    87ac:	add	ip, ip, #92, 20	; 0x5c000
    87b0:	ldr	pc, [ip, #1860]!	; 0x744

000087b4 <fscanf@plt>:
    87b4:	add	ip, pc, #0, 12
    87b8:	add	ip, ip, #92, 20	; 0x5c000
    87bc:	ldr	pc, [ip, #1852]!	; 0x73c

000087c0 <strtoull@plt>:
    87c0:	add	ip, pc, #0, 12
    87c4:	add	ip, ip, #92, 20	; 0x5c000
    87c8:	ldr	pc, [ip, #1844]!	; 0x734

000087cc <fsetxattr@plt>:
    87cc:	add	ip, pc, #0, 12
    87d0:	add	ip, ip, #92, 20	; 0x5c000
    87d4:	ldr	pc, [ip, #1836]!	; 0x72c

000087d8 <blkid_dev_iterate_end@plt>:
    87d8:	add	ip, pc, #0, 12
    87dc:	add	ip, ip, #92, 20	; 0x5c000
    87e0:	ldr	pc, [ip, #1828]!	; 0x724

000087e4 <pwrite64@plt>:
    87e4:	add	ip, pc, #0, 12
    87e8:	add	ip, ip, #92, 20	; 0x5c000
    87ec:	ldr	pc, [ip, #1820]!	; 0x71c

000087f0 <__printf_chk@plt>:
    87f0:			; <UNDEFINED> instruction: 0xe7fd4778
    87f4:	add	ip, pc, #0, 12
    87f8:	add	ip, ip, #92, 20	; 0x5c000
    87fc:	ldr	pc, [ip, #1808]!	; 0x710

00008800 <fstatfs@plt>:
    8800:	add	ip, pc, #0, 12
    8804:	add	ip, ip, #92, 20	; 0x5c000
    8808:	ldr	pc, [ip, #1800]!	; 0x708

0000880c <uuid_generate@plt>:
    880c:	add	ip, pc, #0, 12
    8810:	add	ip, ip, #92, 20	; 0x5c000
    8814:	ldr	pc, [ip, #1792]!	; 0x700

00008818 <__fprintf_chk@plt>:
    8818:			; <UNDEFINED> instruction: 0xe7fd4778
    881c:	add	ip, pc, #0, 12
    8820:	add	ip, ip, #92, 20	; 0x5c000
    8824:	ldr	pc, [ip, #1780]!	; 0x6f4

00008828 <access@plt>:
    8828:	add	ip, pc, #0, 12
    882c:	add	ip, ip, #92, 20	; 0x5c000
    8830:	ldr	pc, [ip, #1772]!	; 0x6ec

00008834 <fclose@plt>:
    8834:	add	ip, pc, #0, 12
    8838:	add	ip, ip, #92, 20	; 0x5c000
    883c:	ldr	pc, [ip, #1764]!	; 0x6e4

00008840 <endmntent@plt>:
    8840:	add	ip, pc, #0, 12
    8844:	add	ip, ip, #92, 20	; 0x5c000
    8848:	ldr	pc, [ip, #1756]!	; 0x6dc

0000884c <strtok@plt>:
    884c:	add	ip, pc, #0, 12
    8850:	add	ip, ip, #92, 20	; 0x5c000
    8854:	ldr	pc, [ip, #1748]!	; 0x6d4

00008858 <blkid_free_probe@plt>:
    8858:	add	ip, pc, #0, 12
    885c:	add	ip, ip, #92, 20	; 0x5c000
    8860:	ldr	pc, [ip, #1740]!	; 0x6cc

00008864 <strrchr@plt>:
    8864:	add	ip, pc, #0, 12
    8868:	add	ip, ip, #92, 20	; 0x5c000
    886c:	ldr	pc, [ip, #1732]!	; 0x6c4

00008870 <pthread_join@plt>:
    8870:	add	ip, pc, #0, 12
    8874:	add	ip, ip, #92, 20	; 0x5c000
    8878:	ldr	pc, [ip, #1724]!	; 0x6bc

0000887c <statfs64@plt>:
    887c:	add	ip, pc, #0, 12
    8880:	add	ip, ip, #92, 20	; 0x5c000
    8884:	ldr	pc, [ip, #1716]!	; 0x6b4

00008888 <uuid_parse@plt>:
    8888:	add	ip, pc, #0, 12
    888c:	add	ip, ip, #92, 20	; 0x5c000
    8890:	ldr	pc, [ip, #1708]!	; 0x6ac

00008894 <fputc@plt>:
    8894:			; <UNDEFINED> instruction: 0xe7fd4778
    8898:	add	ip, pc, #0, 12
    889c:	add	ip, ip, #92, 20	; 0x5c000
    88a0:	ldr	pc, [ip, #1696]!	; 0x6a0

000088a4 <timerfd_settime@plt>:
    88a4:	add	ip, pc, #0, 12
    88a8:	add	ip, ip, #92, 20	; 0x5c000
    88ac:	ldr	pc, [ip, #1688]!	; 0x698

000088b0 <dirfd@plt>:
    88b0:	add	ip, pc, #0, 12
    88b4:	add	ip, ip, #92, 20	; 0x5c000
    88b8:	ldr	pc, [ip, #1680]!	; 0x690

000088bc <getppid@plt>:
    88bc:	add	ip, pc, #0, 12
    88c0:	add	ip, ip, #92, 20	; 0x5c000
    88c4:	ldr	pc, [ip, #1672]!	; 0x688

000088c8 <atoi@plt>:
    88c8:	add	ip, pc, #0, 12
    88cc:	add	ip, ip, #92, 20	; 0x5c000
    88d0:	ldr	pc, [ip, #1664]!	; 0x680

000088d4 <blkid_dev_devname@plt>:
    88d4:	add	ip, pc, #0, 12
    88d8:	add	ip, ip, #92, 20	; 0x5c000
    88dc:	ldr	pc, [ip, #1656]!	; 0x678

000088e0 <fopen64@plt>:
    88e0:	add	ip, pc, #0, 12
    88e4:	add	ip, ip, #92, 20	; 0x5c000
    88e8:	ldr	pc, [ip, #1648]!	; 0x670

000088ec <setmntent@plt>:
    88ec:	add	ip, pc, #0, 12
    88f0:	add	ip, ip, #92, 20	; 0x5c000
    88f4:	ldr	pc, [ip, #1640]!	; 0x668

000088f8 <__tls_get_addr@plt>:
    88f8:	add	ip, pc, #0, 12
    88fc:	add	ip, ip, #92, 20	; 0x5c000
    8900:	ldr	pc, [ip, #1632]!	; 0x660

00008904 <strncat@plt>:
    8904:	add	ip, pc, #0, 12
    8908:	add	ip, ip, #92, 20	; 0x5c000
    890c:	ldr	pc, [ip, #1624]!	; 0x658

00008910 <__xstat64@plt>:
    8910:			; <UNDEFINED> instruction: 0xe7fd4778
    8914:	add	ip, pc, #0, 12
    8918:	add	ip, ip, #92, 20	; 0x5c000
    891c:	ldr	pc, [ip, #1612]!	; 0x64c

00008920 <blkid_get_cache@plt>:
    8920:	add	ip, pc, #0, 12
    8924:	add	ip, ip, #92, 20	; 0x5c000
    8928:	ldr	pc, [ip, #1604]!	; 0x644

0000892c <fputs@plt>:
    892c:			; <UNDEFINED> instruction: 0xe7fd4778
    8930:	add	ip, pc, #0, 12
    8934:	add	ip, ip, #92, 20	; 0x5c000
    8938:	ldr	pc, [ip, #1592]!	; 0x638

0000893c <strncmp@plt>:
    893c:	add	ip, pc, #0, 12
    8940:	add	ip, ip, #92, 20	; 0x5c000
    8944:	ldr	pc, [ip, #1584]!	; 0x630

00008948 <abort@plt>:
    8948:	add	ip, pc, #0, 12
    894c:	add	ip, ip, #92, 20	; 0x5c000
    8950:	ldr	pc, [ip, #1576]!	; 0x628

00008954 <realpath@plt>:
    8954:	add	ip, pc, #0, 12
    8958:	add	ip, ip, #92, 20	; 0x5c000
    895c:	ldr	pc, [ip, #1568]!	; 0x620

00008960 <close@plt>:
    8960:	add	ip, pc, #0, 12
    8964:	add	ip, ip, #92, 20	; 0x5c000
    8968:	ldr	pc, [ip, #1560]!	; 0x618

0000896c <blkid_probe_all@plt>:
    896c:	add	ip, pc, #0, 12
    8970:	add	ip, ip, #92, 20	; 0x5c000
    8974:	ldr	pc, [ip, #1552]!	; 0x610

00008978 <closedir@plt>:
    8978:	add	ip, pc, #0, 12
    897c:	add	ip, ip, #92, 20	; 0x5c000
    8980:	ldr	pc, [ip, #1544]!	; 0x608

00008984 <__snprintf_chk@plt>:
    8984:	add	ip, pc, #0, 12
    8988:	add	ip, ip, #92, 20	; 0x5c000
    898c:	ldr	pc, [ip, #1536]!	; 0x600

00008990 <backtrace_symbols_fd@plt>:
    8990:	add	ip, pc, #0, 12
    8994:	add	ip, ip, #92, 20	; 0x5c000
    8998:	ldr	pc, [ip, #1528]!	; 0x5f8

0000899c <__assert_fail@plt>:
    899c:	add	ip, pc, #0, 12
    89a0:	add	ip, ip, #92, 20	; 0x5c000
    89a4:	ldr	pc, [ip, #1520]!	; 0x5f0

Disassembly of section .text:

000089a8 <main@@Base>:
    89a8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    89ac:	movs	r4, #0
    89ae:	vpush	{d8-d9}
    89b2:	mov	r9, r0
    89b4:	ldr.w	r2, [pc, #2300]	; 92b4 <main@@Base+0x90c>
    89b8:	mov	r6, r1
    89ba:	ldr.w	r3, [pc, #2300]	; 92b8 <main@@Base+0x910>
    89be:	mov.w	sl, #1
    89c2:	add	r2, pc
    89c4:	ldr.w	fp, [pc, #2292]	; 92bc <main@@Base+0x914>
    89c8:	sub	sp, #252	; 0xfc
    89ca:	ldr.w	r8, [pc, #2292]	; 92c0 <main@@Base+0x918>
    89ce:	ldr	r3, [r2, r3]
    89d0:	movs	r2, #0
    89d2:	add	fp, pc
    89d4:	add	r8, pc
    89d6:	ldr	r3, [r3, #0]
    89d8:	str	r3, [sp, #244]	; 0xf4
    89da:	mov.w	r3, #0
    89de:	movs	r3, #0
    89e0:	strd	r3, r4, [sp, #8]
    89e4:	movs	r3, #0
    89e6:	strd	r2, r3, [sp, #16]
    89ea:	movs	r4, #0
    89ec:	ldr.w	r2, [pc, #2260]	; 92c4 <main@@Base+0x91c>
    89f0:	mov	r7, r4
    89f2:	ldr.w	r3, [pc, #2260]	; 92c8 <main@@Base+0x920>
    89f6:	mov	r5, r4
    89f8:	add	r2, pc
    89fa:	str	r4, [sp, #24]
    89fc:	add	r3, pc
    89fe:	str	r3, [sp, #28]
    8a00:	movs	r1, #0
    8a02:	mov	r3, fp
    8a04:	str	r1, [sp, #0]
    8a06:	mov	r0, r9
    8a08:	mov	r1, r6
    8a0a:	str	r2, [sp, #40]	; 0x28
    8a0c:	blx	86d4 <getopt_long@plt>
    8a10:	cmp	r0, #0
    8a12:	blt.n	8afc <main@@Base+0x154>
    8a14:	cmp	r0, #120	; 0x78
    8a16:	bgt.n	8a2c <main@@Base+0x84>
    8a18:	cmp	r0, #108	; 0x6c
    8a1a:	ldr	r2, [sp, #40]	; 0x28
    8a1c:	bgt.n	8a5e <main@@Base+0xb6>
    8a1e:	cmp	r0, #85	; 0x55
    8a20:	beq.n	8ae0 <main@@Base+0x138>
    8a22:	bgt.n	8aa0 <main@@Base+0xf8>
    8a24:	cmp	r0, #77	; 0x4d
    8a26:	beq.n	8aec <main@@Base+0x144>
    8a28:	cmp	r0, #83	; 0x53
    8a2a:	beq.n	8aac <main@@Base+0x104>
    8a2c:	str	r0, [sp, #8]
    8a2e:	bl	948c <_start@@Base+0x110>
    8a32:	ldr	r0, [sp, #8]
    8a34:	subs.w	r7, r0, #270	; 0x10e
    8a38:	it	ne
    8a3a:	movne	r7, #1
    8a3c:	ldr.w	r2, [pc, #2188]	; 92cc <main@@Base+0x924>
    8a40:	ldr.w	r3, [pc, #2164]	; 92b8 <main@@Base+0x910>
    8a44:	add	r2, pc
    8a46:	ldr	r3, [r2, r3]
    8a48:	ldr	r2, [r3, #0]
    8a4a:	ldr	r3, [sp, #244]	; 0xf4
    8a4c:	eors	r2, r3
    8a4e:	beq.w	92a8 <main@@Base+0x900>
    8a52:	blx	84cc <__stack_chk_fail@plt>
    8a56:	movs	r7, #1
    8a58:	movw	sl, #1025	; 0x401
    8a5c:	b.n	8a00 <main@@Base+0x58>
    8a5e:	sub.w	r1, r0, #109	; 0x6d
    8a62:	cmp	r1, #11
    8a64:	bhi.n	8a2c <main@@Base+0x84>
    8a66:	add	r3, pc, #8	; (adr r3, 8a70 <main@@Base+0xc8>)
    8a68:	ldr.w	r1, [r3, r1, lsl #2]
    8a6c:	add	r3, r1
    8a6e:	bx	r3
    8a70:	lsls	r7, r0, #2
    8a72:	movs	r0, r0
    8a74:	lsls	r1, r5, #1
    8a76:	movs	r0, r0
    8a78:			; <UNDEFINED> instruction: 0xffbdffff
    8a7c:			; <UNDEFINED> instruction: 0xffbdffff
    8a80:			; <UNDEFINED> instruction: 0xffbdffff
    8a84:	lsls	r7, r2, #1
    8a86:	movs	r0, r0
    8a88:			; <UNDEFINED> instruction: 0xffbdffff
    8a8c:			; <UNDEFINED> instruction: 0xffbdffff
    8a90:			; <UNDEFINED> instruction: 0xffe7ffff
    8a94:			; <UNDEFINED> instruction: 0xffbdffff
    8a98:			; <UNDEFINED> instruction: 0xffbdffff
    8a9c:	lsls	r1, r4, #1
    8a9e:	movs	r0, r0
    8aa0:	cmp	r0, #102	; 0x66
    8aa2:	bne.n	8a2c <main@@Base+0x84>
    8aa4:	ldr	r3, [sp, #28]
    8aa6:	movs	r1, #1
    8aa8:	str	r1, [r3, #0]
    8aaa:	b.n	8a00 <main@@Base+0x58>
    8aac:	ldr.w	r1, [pc, #2080]	; 92d0 <main@@Base+0x928>
    8ab0:	movs	r5, #1
    8ab2:	str	r2, [sp, #40]	; 0x28
    8ab4:	ldr.w	r1, [r8, r1]
    8ab8:	ldr	r0, [r1, #0]
    8aba:	bl	1773c <arg_strtou64@@Base>
    8abe:	ldr	r2, [sp, #40]	; 0x28
    8ac0:	strd	r0, r1, [sp, #16]
    8ac4:	b.n	8a00 <main@@Base+0x58>
    8ac6:	ldr	r3, [sp, #8]
    8ac8:	orr.w	r0, r3, #64	; 0x40
    8acc:	str	r0, [sp, #8]
    8ace:	b.n	8a00 <main@@Base+0x58>
    8ad0:	ldr	r3, [sp, #8]
    8ad2:	orr.w	r0, r3, #256	; 0x100
    8ad6:	b.n	8acc <main@@Base+0x124>
    8ad8:	ldr	r3, [sp, #8]
    8ada:	orr.w	r0, r3, #512	; 0x200
    8ade:	b.n	8acc <main@@Base+0x124>
    8ae0:	ldr.w	r1, [pc, #2028]	; 92d0 <main@@Base+0x928>
    8ae4:	ldr.w	r1, [r8, r1]
    8ae8:	ldr	r4, [r1, #0]
    8aea:	b.n	8a58 <main@@Base+0xb0>
    8aec:	ldr.w	r1, [pc, #2016]	; 92d0 <main@@Base+0x928>
    8af0:	ldr.w	r1, [r8, r1]
    8af4:	ldr	r4, [r1, #0]
    8af6:	movs	r3, #1
    8af8:	str	r3, [sp, #24]
    8afa:	b.n	8a58 <main@@Base+0xb0>
    8afc:	mov	r0, r6
    8afe:	bl	11004 <set_argv0@@Base>
    8b02:	ldr.w	r3, [pc, #2000]	; 92d4 <main@@Base+0x92c>
    8b06:	movs	r1, #1
    8b08:	ldr.w	r3, [r8, r3]
    8b0c:	ldr	r0, [r3, #0]
    8b0e:	ldr.w	r3, [pc, #1992]	; 92d8 <main@@Base+0x930>
    8b12:	ldr.w	r2, [r6, r0, lsl #2]
    8b16:	add	r3, pc
    8b18:	sub.w	r0, r9, r0
    8b1c:	str	r2, [r3, #4]
    8b1e:	bl	11024 <check_argc_exact@@Base>
    8b22:	cbnz	r0, 8b52 <main@@Base+0x1aa>
    8b24:	cbz	r7, 8b34 <main@@Base+0x18c>
    8b26:	cbz	r4, 8b84 <main@@Base+0x1dc>
    8b28:	ldr.w	r0, [pc, #1968]	; 92dc <main@@Base+0x934>
    8b2c:	add	r0, pc
    8b2e:	bl	1747c <__btrfs_error@@Base>
    8b32:	b.n	8a3c <main@@Base+0x94>
    8b34:	ldrd	r2, r3, [sp, #8]
    8b38:	orrs	r3, r2
    8b3a:	bne.n	8b56 <main@@Base+0x1ae>
    8b3c:	cbnz	r5, 8b56 <main@@Base+0x1ae>
    8b3e:	cbnz	r4, 8b58 <main@@Base+0x1b0>
    8b40:	ldr	r3, [sp, #24]
    8b42:	cbnz	r3, 8b84 <main@@Base+0x1dc>
    8b44:	ldr.w	r0, [pc, #1944]	; 92e0 <main@@Base+0x938>
    8b48:	add	r0, pc
    8b4a:	bl	1747c <__btrfs_error@@Base>
    8b4e:	bl	948c <_start@@Base+0x110>
    8b52:	movs	r7, #1
    8b54:	b.n	8a3c <main@@Base+0x94>
    8b56:	cbz	r4, 8b84 <main@@Base+0x1dc>
    8b58:	add	r1, sp, #204	; 0xcc
    8b5a:	mov	r0, r4
    8b5c:	blx	8888 <uuid_parse@plt>
    8b60:	cmp	r0, #0
    8b62:	bge.n	8b72 <main@@Base+0x1ca>
    8b64:	ldr.w	r0, [pc, #1916]	; 92e4 <main@@Base+0x93c>
    8b68:	mov	r1, r4
    8b6a:	add	r0, pc
    8b6c:	bl	1747c <__btrfs_error@@Base>
    8b70:	b.n	8b52 <main@@Base+0x1aa>
    8b72:	mov	r0, r4
    8b74:	bl	2efc0 <test_uuid_unique@@Base>
    8b78:	cbnz	r0, 8b84 <main@@Base+0x1dc>
    8b7a:	ldr.w	r0, [pc, #1900]	; 92e8 <main@@Base+0x940>
    8b7e:	mov	r1, r4
    8b80:	add	r0, pc
    8b82:	b.n	8b6c <main@@Base+0x1c4>
    8b84:	ldr.w	r9, [pc, #1892]	; 92ec <main@@Base+0x944>
    8b88:	movs	r1, #2
    8b8a:	add	r9, pc
    8b8c:	ldr.w	r0, [r9, #4]
    8b90:	blx	8608 <open64@plt>
    8b94:	subs	r6, r0, #0
    8b96:	bge.n	8ba4 <main@@Base+0x1fc>
    8b98:	ldr.w	r0, [pc, #1876]	; 92f0 <main@@Base+0x948>
    8b9c:	ldr.w	r1, [r9, #4]
    8ba0:	add	r0, pc
    8ba2:	b.n	8b6c <main@@Base+0x1c4>
    8ba4:	movs	r3, #0
    8ba6:	movs	r2, #4
    8ba8:	strd	r3, r2, [sp]
    8bac:	mov	r2, r3
    8bae:	ldr.w	r1, [r9, #4]
    8bb2:	bl	30074 <check_mounted_where@@Base>
    8bb6:	subs	r3, r0, #0
    8bb8:	str	r3, [sp, #28]
    8bba:	bge.n	8bdc <main@@Base+0x234>
    8bbc:	blx	8740 <__errno_location@plt>
    8bc0:	ldr	r3, [sp, #28]
    8bc2:	ldr.w	r1, [r9, #4]
    8bc6:	negs	r3, r3
    8bc8:	str	r3, [r0, #0]
    8bca:	ldr.w	r0, [pc, #1832]	; 92f4 <main@@Base+0x94c>
    8bce:	add	r0, pc
    8bd0:	bl	1747c <__btrfs_error@@Base>
    8bd4:	mov	r0, r6
    8bd6:	blx	8960 <close@plt>
    8bda:	b.n	8b52 <main@@Base+0x1aa>
    8bdc:	ldr.w	r1, [r9, #4]
    8be0:	beq.n	8bea <main@@Base+0x242>
    8be2:	ldr.w	r0, [pc, #1812]	; 92f8 <main@@Base+0x950>
    8be6:	add	r0, pc
    8be8:	b.n	8bd0 <main@@Base+0x228>
    8bea:	mov	r0, r6
    8bec:	movs	r2, #0
    8bee:	movs	r3, #0
    8bf0:	str.w	sl, [sp]
    8bf4:	bl	1e33c <open_ctree_fd@@Base>
    8bf8:	mov	r6, r0
    8bfa:	cbnz	r0, 8c08 <main@@Base+0x260>
    8bfc:	ldr.w	r0, [pc, #1788]	; 92fc <main@@Base+0x954>
    8c00:	add	r0, pc
    8c02:	bl	1747c <__btrfs_error@@Base>
    8c06:	b.n	8b52 <main@@Base+0x1aa>
    8c08:	cmp	r5, #0
    8c0a:	beq.w	8d62 <main@@Base+0x3ba>
    8c0e:	ldr.w	r3, [r0, #464]	; 0x1d0
    8c12:	ldr.w	r3, [r3, #308]	; 0x134
    8c16:	ldr.w	r1, [r3, #188]	; 0xbc
    8c1a:	ldr	r3, [sp, #28]
    8c1c:	and.w	r2, r1, #1024	; 0x400
    8c20:	orrs	r3, r2
    8c22:	beq.n	8c48 <main@@Base+0x2a0>
    8c24:	ldr.w	r3, [pc, #1752]	; 9300 <main@@Base+0x958>
    8c28:	ldr.w	r0, [pc, #1752]	; 9304 <main@@Base+0x95c>
    8c2c:	ldr.w	r3, [r8, r3]
    8c30:	add	r0, pc
    8c32:	ldr	r1, [r3, #0]
    8c34:	blx	8930 <fputs@plt+0x4>
    8c38:	ldr.w	r0, [r6, #464]	; 0x1d0
    8c3c:	mov	r7, r5
    8c3e:	bl	1d38c <close_ctree_fs_info@@Base>
    8c42:	bl	28000 <btrfs_close_all_devices@@Base>
    8c46:	b.n	8a3c <main@@Base+0x94>
    8c48:	ldrd	r2, r3, [sp, #16]
    8c4c:	orrs	r3, r2
    8c4e:	bne.n	8c7e <main@@Base+0x2d6>
    8c50:	ldr.w	r3, [r9]
    8c54:	cbnz	r3, 8c7e <main@@Base+0x2d6>
    8c56:	ldr.w	r0, [pc, #1712]	; 9308 <main@@Base+0x960>
    8c5a:	add	r0, pc
    8c5c:	bl	17400 <__btrfs_warning@@Base>
    8c60:	ldr.w	r0, [pc, #1704]	; 930c <main@@Base+0x964>
    8c64:	add	r0, pc
    8c66:	bl	312b6 <ask_user@@Base>
    8c6a:	cbnz	r0, 8c7e <main@@Base+0x2d6>
    8c6c:	ldr.w	r3, [pc, #1680]	; 9300 <main@@Base+0x958>
    8c70:	ldr.w	r0, [pc, #1692]	; 9310 <main@@Base+0x968>
    8c74:	ldr.w	r3, [r8, r3]
    8c78:	add	r0, pc
    8c7a:	ldr	r1, [r3, #0]
    8c7c:	b.n	8c34 <main@@Base+0x28c>
    8c7e:	ldr.w	r3, [r6, #464]	; 0x1d0
    8c82:	movs	r2, #0
    8c84:	ldr.w	fp, [sp, #16]
    8c88:	ldr.w	r9, [r3, #308]	; 0x134
    8c8c:	mov	r1, fp
    8c8e:	ldr.w	r3, [r9, #56]	; 0x38
    8c92:	str	r3, [sp, #40]	; 0x28
    8c94:	ldr.w	sl, [r9, #60]	; 0x3c
    8c98:	and.w	r3, sl, #1
    8c9c:	cmp	r1, #0
    8c9e:	beq.n	8d24 <main@@Base+0x37c>
    8ca0:	orrs	r3, r2
    8ca2:	beq.n	8d04 <main@@Base+0x35c>
    8ca4:	ldr.w	r3, [pc, #1644]	; 9314 <main@@Base+0x96c>
    8ca8:	add	r3, pc
    8caa:	ldr.w	fp, [r3]
    8cae:	cmp.w	fp, #0
    8cb2:	bne.n	8d62 <main@@Base+0x3ba>
    8cb4:	ldr.w	r0, [pc, #1632]	; 9318 <main@@Base+0x970>
    8cb8:	ldr	r1, [r3, #4]
    8cba:	add	r0, pc
    8cbc:	bl	17400 <__btrfs_warning@@Base>
    8cc0:	mov	sl, r5
    8cc2:	ldrd	r2, r3, [sp, #8]
    8cc6:	orrs	r3, r2
    8cc8:	beq.n	8d80 <main@@Base+0x3d8>
    8cca:	ldr.w	r3, [r6, #464]	; 0x1d0
    8cce:	movs	r1, #1
    8cd0:	ldr	r2, [sp, #8]
    8cd2:	mov	r0, r6
    8cd4:	ldr.w	r9, [r3, #308]	; 0x134
    8cd8:	ldr.w	r3, [r9, #188]	; 0xbc
    8cdc:	ldr.w	sl, [r9, #192]	; 0xc0
    8ce0:	orrs	r3, r2
    8ce2:	str	r3, [sp, #16]
    8ce4:	ldr	r3, [sp, #12]
    8ce6:	orr.w	sl, sl, r3
    8cea:	bl	2af7c <btrfs_start_transaction@@Base>
    8cee:	ldr	r3, [sp, #16]
    8cf0:	cmn.w	r0, #4096	; 0x1000
    8cf4:	bls.n	8d68 <main@@Base+0x3c0>
    8cf6:	ldr.w	r0, [pc, #1572]	; 931c <main@@Base+0x974>
    8cfa:	movs	r2, #1
    8cfc:	movs	r1, #198	; 0xc6
    8cfe:	add	r0, pc
    8d00:	adds	r0, #20
    8d02:	b.n	8d20 <main@@Base+0x378>
    8d04:	orr.w	sl, sl, #1
    8d08:	movs	r1, #1
    8d0a:	mov	r0, r6
    8d0c:	bl	2af7c <btrfs_start_transaction@@Base>
    8d10:	cmn.w	r0, #4096	; 0x1000
    8d14:	bls.n	8d48 <main@@Base+0x3a0>
    8d16:	ldr.w	r0, [pc, #1544]	; 9320 <main@@Base+0x978>
    8d1a:	movs	r2, #1
    8d1c:	movs	r1, #70	; 0x46
    8d1e:	add	r0, pc
    8d20:	bl	9750 <_start@@Base+0x3d4>
    8d24:	ldr.w	r1, [pc, #1532]	; 9324 <main@@Base+0x97c>
    8d28:	orrs	r3, r2
    8d2a:	add	r1, pc
    8d2c:	ldr	r1, [r1, #4]
    8d2e:	bne.n	8d38 <main@@Base+0x390>
    8d30:	ldr.w	r0, [pc, #1524]	; 9328 <main@@Base+0x980>
    8d34:	add	r0, pc
    8d36:	b.n	8cbc <main@@Base+0x314>
    8d38:	ldr.w	r0, [pc, #1520]	; 932c <main@@Base+0x984>
    8d3c:	bic.w	sl, sl, #1
    8d40:	add	r0, pc
    8d42:	bl	17400 <__btrfs_warning@@Base>
    8d46:	b.n	8d08 <main@@Base+0x360>
    8d48:	ldr	r3, [sp, #40]	; 0x28
    8d4a:	mov	r1, r6
    8d4c:	str.w	sl, [r9, #60]	; 0x3c
    8d50:	str.w	r3, [r9, #56]	; 0x38
    8d54:	bl	2b1fc <btrfs_commit_transaction@@Base>
    8d58:	clz	fp, r0
    8d5c:	mov.w	fp, fp, lsr #5
    8d60:	b.n	8cc0 <main@@Base+0x318>
    8d62:	mov	sl, r5
    8d64:	mov	fp, r5
    8d66:	b.n	8cc2 <main@@Base+0x31a>
    8d68:	mov	r1, r6
    8d6a:	str.w	r3, [r9, #188]	; 0xbc
    8d6e:	str.w	sl, [r9, #192]	; 0xc0
    8d72:	bl	2b1fc <btrfs_commit_transaction@@Base>
    8d76:	cbnz	r0, 8d7c <main@@Base+0x3d4>
    8d78:	add.w	fp, fp, #1
    8d7c:	add.w	sl, r5, #1
    8d80:	ldr	r3, [sp, #24]
    8d82:	cbz	r3, 8daa <main@@Base+0x402>
    8d84:	cbz	r5, 8d98 <main@@Base+0x3f0>
    8d86:	ldr.w	r3, [pc, #1400]	; 9300 <main@@Base+0x958>
    8d8a:	ldr.w	r0, [pc, #1444]	; 9330 <main@@Base+0x988>
    8d8e:	ldr.w	r3, [r8, r3]
    8d92:	add	r0, pc
    8d94:	ldr	r1, [r3, #0]
    8d96:	b.n	8c34 <main@@Base+0x28c>
    8d98:	mov	r1, r4
    8d9a:	mov	r0, r6
    8d9c:	bl	95b0 <_start@@Base+0x234>
    8da0:	cbnz	r0, 8da6 <main@@Base+0x3fe>
    8da2:	add.w	fp, fp, #1
    8da6:	add.w	sl, sl, #1
    8daa:	cbnz	r7, 8db6 <main@@Base+0x40e>
    8dac:	cmp	r4, #0
    8dae:	beq.n	8e56 <main@@Base+0x4ae>
    8db0:	ldr	r3, [sp, #24]
    8db2:	cmp	r3, #0
    8db4:	bne.n	8e56 <main@@Base+0x4ae>
    8db6:	ldr.w	r3, [r6, #464]	; 0x1d0
    8dba:	ldr.w	r3, [r3, #308]	; 0x134
    8dbe:	ldr.w	r1, [r3, #188]	; 0xbc
    8dc2:	movs	r3, #0
    8dc4:	and.w	r2, r1, #1024	; 0x400
    8dc8:	orrs	r3, r2
    8dca:	beq.n	8de4 <main@@Base+0x43c>
    8dcc:	ldr.w	r3, [pc, #1328]	; 9300 <main@@Base+0x958>
    8dd0:	ldr.w	r0, [pc, #1376]	; 9334 <main@@Base+0x98c>
    8dd4:	ldr.w	r3, [r8, r3]
    8dd8:	add	r0, pc
    8dda:	ldr	r1, [r3, #0]
    8ddc:	blx	8930 <fputs@plt+0x4>
    8de0:	movs	r5, #1
    8de2:	b.n	8c38 <main@@Base+0x290>
    8de4:	ldr.w	r3, [pc, #1360]	; 9338 <main@@Base+0x990>
    8de8:	add	r3, pc
    8dea:	ldr	r3, [r3, #0]
    8dec:	cbnz	r3, 8e16 <main@@Base+0x46e>
    8dee:	ldr.w	r0, [pc, #1356]	; 933c <main@@Base+0x994>
    8df2:	add	r0, pc
    8df4:	bl	17400 <__btrfs_warning@@Base>
    8df8:	ldr.w	r0, [pc, #1348]	; 9340 <main@@Base+0x998>
    8dfc:	add	r0, pc
    8dfe:	bl	312b6 <ask_user@@Base>
    8e02:	cbnz	r0, 8e16 <main@@Base+0x46e>
    8e04:	ldr.w	r3, [pc, #1272]	; 9300 <main@@Base+0x958>
    8e08:	ldr.w	r0, [pc, #1336]	; 9344 <main@@Base+0x99c>
    8e0c:	ldr.w	r3, [r8, r3]
    8e10:	add	r0, pc
    8e12:	ldr	r1, [r3, #0]
    8e14:	b.n	8ddc <main@@Base+0x434>
    8e16:	ldr.w	r5, [r6, #464]	; 0x1d0
    8e1a:	add.w	r8, sp, #172	; 0xac
    8e1e:	add	r7, sp, #156	; 0x9c
    8e20:	mov	r2, r8
    8e22:	mov	r1, r7
    8e24:	mov	r0, r5
    8e26:	bl	9560 <_start@@Base+0x1e4>
    8e2a:	cbz	r0, 8e78 <main@@Base+0x4d0>
    8e2c:	cbz	r4, 8e8c <main@@Base+0x4e4>
    8e2e:	add.w	r9, sp, #204	; 0xcc
    8e32:	mov	r0, r4
    8e34:	mov	r1, r9
    8e36:	blx	8888 <uuid_parse@plt>
    8e3a:	movs	r2, #16
    8e3c:	mov	r1, r7
    8e3e:	mov	r0, r9
    8e40:	blx	8464 <memcmp@plt+0x4>
    8e44:	cbz	r0, 8e8c <main@@Base+0x4e4>
    8e46:	ldr.w	r0, [pc, #1280]	; 9348 <main@@Base+0x9a0>
    8e4a:	mov	r1, r4
    8e4c:	add	r0, pc
    8e4e:	bl	1747c <__btrfs_error@@Base>
    8e52:	add.w	sl, sl, #1
    8e56:	cmp	fp, sl
    8e58:	beq.w	92a4 <main@@Base+0x8fc>
    8e5c:	ldr.w	r2, [r6, #464]	; 0x1d0
    8e60:	ldr.w	r0, [pc, #1256]	; 934c <main@@Base+0x9a4>
    8e64:	ldrb.w	r3, [r2, #364]	; 0x16c
    8e68:	add	r0, pc
    8e6a:	orr.w	r3, r3, #2
    8e6e:	strb.w	r3, [r2, #364]	; 0x16c
    8e72:	bl	1747c <__btrfs_error@@Base>
    8e76:	b.n	8de0 <main@@Base+0x438>
    8e78:	cmp	r4, #0
    8e7a:	beq.w	9064 <main@@Base+0x6bc>
    8e7e:	mov	r1, r7
    8e80:	mov	r0, r4
    8e82:	blx	8888 <uuid_parse@plt>
    8e86:	mov	r0, r8
    8e88:	blx	880c <uuid_generate@plt>
    8e8c:	ldr.w	r3, [r5, #352]	; 0x160
    8e90:	add	r2, sp, #188	; 0xbc
    8e92:	str.w	r8, [r5, #16]
    8e96:	add.w	lr, r3, #16
    8e9a:	mov	ip, r2
    8e9c:	ldr	r0, [r3, #0]
    8e9e:	adds	r3, #8
    8ea0:	ldr.w	r1, [r3, #-4]
    8ea4:	cmp	r3, lr
    8ea6:	mov	r4, r2
    8ea8:	stmia	r4!, {r0, r1}
    8eaa:	mov	r2, r4
    8eac:	bne.n	8e9c <main@@Base+0x4f4>
    8eae:	add	r4, sp, #204	; 0xcc
    8eb0:	mov	r0, ip
    8eb2:	mov	r1, r4
    8eb4:	blx	8394 <uuid_unparse@plt>
    8eb8:	ldr.w	r1, [pc, #1172]	; 9350 <main@@Base+0x9a8>
    8ebc:	mov	r2, r4
    8ebe:	movs	r0, #1
    8ec0:	add	r1, pc
    8ec2:	blx	87f4 <__printf_chk@plt+0x4>
    8ec6:	mov	r1, r4
    8ec8:	mov	r0, r7
    8eca:	blx	8394 <uuid_unparse@plt>
    8ece:	ldr.w	r1, [pc, #1156]	; 9354 <main@@Base+0x9ac>
    8ed2:	mov	r2, r4
    8ed4:	movs	r0, #1
    8ed6:	add	r1, pc
    8ed8:	blx	87f4 <__printf_chk@plt+0x4>
    8edc:	ldr.w	r0, [pc, #1144]	; 9358 <main@@Base+0x9b0>
    8ee0:	add	r0, pc
    8ee2:	blx	8618 <puts@plt+0x4>
    8ee6:	ldr.w	r3, [r5, #308]	; 0x134
    8eea:	ldr	r4, [r5, #28]
    8eec:	mov	ip, r7
    8eee:	ldr	r1, [r3, #56]	; 0x38
    8ef0:	ldr	r2, [r3, #60]	; 0x3c
    8ef2:	str	r1, [r3, #56]	; 0x38
    8ef4:	orr.w	r2, r2, #8
    8ef8:	str	r2, [r3, #60]	; 0x3c
    8efa:	ldr.w	r3, [r5, #308]	; 0x134
    8efe:	adds	r3, #32
    8f00:	mov	r2, ip
    8f02:	adds	r3, #8
    8f04:	ldmia	r2!, {r0, r1}
    8f06:	cmp	r2, r8
    8f08:	str.w	r0, [r3, #-8]
    8f0c:	mov	ip, r2
    8f0e:	str.w	r1, [r3, #-4]
    8f12:	bne.n	8f00 <main@@Base+0x558>
    8f14:	mov	r0, r5
    8f16:	bl	1ced4 <write_all_supers@@Base>
    8f1a:	cmp	r0, #0
    8f1c:	blt.n	8e52 <main@@Base+0x4aa>
    8f1e:	ldr.w	r3, [r5, #352]	; 0x160
    8f22:	adds	r3, #16
    8f24:	mov	r2, r7
    8f26:	adds	r3, #8
    8f28:	ldmia	r2!, {r0, r1}
    8f2a:	cmp	r2, r8
    8f2c:	str.w	r0, [r3, #-8]
    8f30:	mov	r7, r2
    8f32:	str.w	r1, [r3, #-4]
    8f36:	bne.n	8f24 <main@@Base+0x57c>
    8f38:	ldr	r1, [r5, #16]
    8f3a:	movs	r3, #16
    8f3c:	ldr	r0, [r4, #0]
    8f3e:	movs	r2, #64	; 0x40
    8f40:	bl	17330 <write_extent_buffer@@Base>
    8f44:	ldr	r2, [r4, #0]
    8f46:	mov	r1, r5
    8f48:	movs	r0, #0
    8f4a:	bl	1d5dc <write_tree_block@@Base>
    8f4e:	cmp	r0, #0
    8f50:	blt.w	8e52 <main@@Base+0x4aa>
    8f54:	ldr.w	r0, [pc, #1028]	; 935c <main@@Base+0x9b4>
    8f58:	add.w	r9, sp, #57	; 0x39
    8f5c:	mov.w	r8, #0
    8f60:	add	r0, pc
    8f62:	blx	8618 <puts@plt+0x4>
    8f66:	ldr	r3, [r5, #24]
    8f68:	strd	r8, r8, [sp, #48]	; 0x30
    8f6c:	strb.w	r8, [sp, #56]	; 0x38
    8f70:	str	r3, [sp, #16]
    8f72:	add	r3, sp, #88	; 0x58
    8f74:	strb.w	r8, [sp, #57]	; 0x39
    8f78:	mov	r0, r3
    8f7a:	str	r3, [sp, #8]
    8f7c:	strb.w	r8, [r9, #1]
    8f80:	strb.w	r8, [r9, #2]
    8f84:	strb.w	r8, [r9, #3]
    8f88:	strb.w	r8, [r9, #4]
    8f8c:	strb.w	r8, [r9, #5]
    8f90:	strb.w	r8, [r9, #6]
    8f94:	strb.w	r8, [r9, #7]
    8f98:	bl	17e48 <btrfs_init_path@@Base>
    8f9c:	ldr	r3, [sp, #8]
    8f9e:	add	r2, sp, #48	; 0x30
    8fa0:	ldr	r1, [sp, #16]
    8fa2:	mov	r0, r8
    8fa4:	strd	r8, r8, [sp]
    8fa8:	bl	1a23c <btrfs_search_slot@@Base>
    8fac:	subs	r4, r0, #0
    8fae:	blt.n	904e <main@@Base+0x6a6>
    8fb0:	strd	r8, r8, [sp, #40]	; 0x28
    8fb4:	add	r3, sp, #68	; 0x44
    8fb6:	vmov	s18, r3
    8fba:	ldr	r2, [sp, #120]	; 0x78
    8fbc:	movs	r4, #25
    8fbe:	movs	r3, #17
    8fc0:	vmov	r1, s18
    8fc4:	ldr	r0, [sp, #88]	; 0x58
    8fc6:	muls	r2, r4
    8fc8:	adds	r2, #101	; 0x65
    8fca:	bl	1731a <read_extent_buffer@@Base>
    8fce:	ldr.w	r3, [sp, #81]	; 0x51
    8fd2:	ldr.w	r2, [sp, #77]	; 0x4d
    8fd6:	ldr.w	r8, [sp, #72]	; 0x48
    8fda:	str.w	r3, [sp, #61]	; 0x3d
    8fde:	ldrb.w	r3, [sp, #76]	; 0x4c
    8fe2:	str.w	r2, [sp, #57]	; 0x39
    8fe6:	ldr	r2, [sp, #68]	; 0x44
    8fe8:	strb.w	r3, [sp, #56]	; 0x38
    8fec:	adds	r3, #88	; 0x58
    8fee:	uxtb	r3, r3
    8ff0:	vmov	s16, r2
    8ff4:	cmp	r3, #1
    8ff6:	strd	r2, r8, [sp, #48]	; 0x30
    8ffa:	bhi.n	90e2 <main@@Base+0x73a>
    8ffc:	ldr	r3, [sp, #88]	; 0x58
    8ffe:	ldr	r2, [sp, #120]	; 0x78
    9000:	adds	r3, #96	; 0x60
    9002:	mla	r2, r4, r2, r3
    9006:	ldr.w	r2, [r2, #118]	; 0x76
    900a:	add	r3, r2
    900c:	ldr.w	r3, [r3, #117]	; 0x75
    9010:	and.w	r3, r3, #2
    9014:	str	r3, [sp, #32]
    9016:	movs	r3, #0
    9018:	str	r3, [sp, #36]	; 0x24
    901a:	ldrd	r3, r4, [sp, #32]
    901e:	orrs	r3, r4
    9020:	beq.n	90e2 <main@@Base+0x73a>
    9022:	ldr	r3, [sp, #40]	; 0x28
    9024:	mov	r0, r5
    9026:	vmov	r2, s16
    902a:	str	r3, [sp, #0]
    902c:	ldr	r3, [sp, #44]	; 0x2c
    902e:	str	r3, [sp, #4]
    9030:	mov	r3, r8
    9032:	bl	1d684 <read_tree_block@@Base>
    9036:	cmn.w	r0, #4096	; 0x1000
    903a:	mov	r7, r0
    903c:	bls.n	906c <main@@Base+0x6c4>
    903e:	ldr	r0, [pc, #800]	; (9360 <main@@Base+0x9b8>)
    9040:	mov	r3, r8
    9042:	vmov	r2, s16
    9046:	mov	r4, r7
    9048:	add	r0, pc
    904a:	bl	1747c <__btrfs_error@@Base>
    904e:	add.w	r8, sp, #88	; 0x58
    9052:	mov	r0, r8
    9054:	bl	17e58 <btrfs_release_path@@Base>
    9058:	cmp	r4, #0
    905a:	bge.n	9112 <main@@Base+0x76a>
    905c:	ldr	r0, [pc, #772]	; (9364 <main@@Base+0x9bc>)
    905e:	mov	r1, r4
    9060:	add	r0, pc
    9062:	b.n	8e4e <main@@Base+0x4a6>
    9064:	mov	r0, r7
    9066:	blx	880c <uuid_generate@plt>
    906a:	b.n	8e86 <main@@Base+0x4de>
    906c:	ldr	r3, [r0, #92]	; 0x5c
    906e:	movs	r2, #32
    9070:	str	r3, [sp, #8]
    9072:	add	r3, sp, #156	; 0x9c
    9074:	vmov	s17, r3
    9078:	movs	r3, #16
    907a:	vmov	r1, s17
    907e:	bl	17308 <memcmp_extent_buffer@@Base>
    9082:	ldr	r1, [sp, #8]
    9084:	movs	r3, #16
    9086:	movs	r2, #64	; 0x40
    9088:	ldr	r1, [r1, #16]
    908a:	str	r0, [sp, #24]
    908c:	mov	r0, r7
    908e:	bl	17308 <memcmp_extent_buffer@@Base>
    9092:	ldr	r3, [sp, #24]
    9094:	mov	r4, r0
    9096:	cbnz	r3, 90ce <main@@Base+0x726>
    9098:	cbz	r0, 90b4 <main@@Base+0x70c>
    909a:	ldr	r1, [sp, #8]
    909c:	movs	r3, #16
    909e:	movs	r2, #64	; 0x40
    90a0:	mov	r0, r7
    90a2:	ldr	r1, [r1, #16]
    90a4:	bl	17330 <write_extent_buffer@@Base>
    90a8:	ldr	r1, [sp, #8]
    90aa:	mov	r2, r7
    90ac:	movs	r0, #0
    90ae:	bl	1d5dc <write_tree_block@@Base>
    90b2:	mov	r4, r0
    90b4:	mov	r0, r7
    90b6:	bl	16c20 <free_extent_buffer@@Base>
    90ba:	cmp	r4, #0
    90bc:	bge.n	90e2 <main@@Base+0x73a>
    90be:	ldr	r0, [pc, #680]	; (9368 <main@@Base+0x9c0>)
    90c0:	mov	r3, r8
    90c2:	vmov	r2, s16
    90c6:	add	r0, pc
    90c8:	bl	1747c <__btrfs_error@@Base>
    90cc:	b.n	904e <main@@Base+0x6a6>
    90ce:	vmov	r1, s17
    90d2:	movs	r3, #16
    90d4:	movs	r2, #32
    90d6:	mov	r0, r7
    90d8:	bl	17330 <write_extent_buffer@@Base>
    90dc:	cmp	r4, #0
    90de:	beq.n	90a8 <main@@Base+0x700>
    90e0:	b.n	909a <main@@Base+0x6f2>
    90e2:	ldr	r2, [sp, #88]	; 0x58
    90e4:	ldr	r3, [sp, #120]	; 0x78
    90e6:	adds	r3, #1
    90e8:	str	r3, [sp, #120]	; 0x78
    90ea:	ldr.w	r2, [r2, #192]	; 0xc0
    90ee:	cmp	r3, r2
    90f0:	bcc.w	8fba <main@@Base+0x612>
    90f4:	movs	r3, #0
    90f6:	strb.w	r3, [sp, #153]	; 0x99
    90fa:	ldr	r3, [sp, #16]
    90fc:	add	r1, sp, #88	; 0x58
    90fe:	ldr.w	r0, [r3, #464]	; 0x1d0
    9102:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    9106:	subs	r4, r0, #0
    9108:	blt.n	904e <main@@Base+0x6a6>
    910a:	beq.w	8fb4 <main@@Base+0x60c>
    910e:	ldr	r4, [sp, #28]
    9110:	b.n	904e <main@@Base+0x6a6>
    9112:	ldr	r0, [pc, #600]	; (936c <main@@Base+0x9c4>)
    9114:	movs	r4, #0
    9116:	add	r0, pc
    9118:	blx	8618 <puts@plt+0x4>
    911c:	ldr	r7, [r5, #32]
    911e:	mov	r0, r8
    9120:	movs	r2, #0
    9122:	movs	r3, #0
    9124:	strb.w	r4, [sp, #56]	; 0x38
    9128:	strd	r2, r3, [sp, #48]	; 0x30
    912c:	strb.w	r4, [sp, #57]	; 0x39
    9130:	strb.w	r4, [r9, #1]
    9134:	strb.w	r4, [r9, #2]
    9138:	strb.w	r4, [r9, #3]
    913c:	strb.w	r4, [r9, #4]
    9140:	strb.w	r4, [r9, #5]
    9144:	strb.w	r4, [r9, #6]
    9148:	strb.w	r4, [r9, #7]
    914c:	bl	17e48 <btrfs_init_path@@Base>
    9150:	mov	r0, r4
    9152:	strd	r4, r4, [sp]
    9156:	add	r2, sp, #48	; 0x30
    9158:	mov	r3, r8
    915a:	mov	r1, r7
    915c:	bl	1a23c <btrfs_search_slot@@Base>
    9160:	subs	r4, r0, #0
    9162:	blt.n	9216 <main@@Base+0x86e>
    9164:	add.w	r9, sp, #68	; 0x44
    9168:	mov.w	r8, #25
    916c:	ldr	r2, [sp, #120]	; 0x78
    916e:	movs	r3, #17
    9170:	mov	r1, r9
    9172:	ldr	r0, [sp, #88]	; 0x58
    9174:	mul.w	r2, r8, r2
    9178:	adds	r2, #101	; 0x65
    917a:	bl	1731a <read_extent_buffer@@Base>
    917e:	ldr.w	r2, [sp, #77]	; 0x4d
    9182:	ldr.w	r3, [sp, #81]	; 0x51
    9186:	ldrb.w	r1, [sp, #76]	; 0x4c
    918a:	str.w	r2, [sp, #57]	; 0x39
    918e:	str.w	r3, [sp, #61]	; 0x3d
    9192:	cmp	r1, #216	; 0xd8
    9194:	ldrd	r2, r3, [sp, #68]	; 0x44
    9198:	strb.w	r1, [sp, #56]	; 0x38
    919c:	strd	r2, r3, [sp, #48]	; 0x30
    91a0:	beq.n	91cc <main@@Base+0x824>
    91a2:	ldr	r2, [sp, #88]	; 0x58
    91a4:	ldr	r3, [sp, #120]	; 0x78
    91a6:	adds	r3, #1
    91a8:	str	r3, [sp, #120]	; 0x78
    91aa:	ldr.w	r2, [r2, #192]	; 0xc0
    91ae:	cmp	r3, r2
    91b0:	bcc.n	916c <main@@Base+0x7c4>
    91b2:	movs	r3, #0
    91b4:	strb.w	r3, [sp, #153]	; 0x99
    91b8:	ldr.w	r0, [r7, #464]	; 0x1d0
    91bc:	add	r1, sp, #88	; 0x58
    91be:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    91c2:	subs	r4, r0, #0
    91c4:	blt.n	9216 <main@@Base+0x86e>
    91c6:	beq.n	916c <main@@Base+0x7c4>
    91c8:	ldr	r4, [sp, #28]
    91ca:	b.n	9216 <main@@Base+0x86e>
    91cc:	cmp	r3, #0
    91ce:	it	eq
    91d0:	cmpeq	r2, #1
    91d2:	bne.n	91a2 <main@@Base+0x7fa>
    91d4:	ldr	r4, [sp, #88]	; 0x58
    91d6:	add	r1, sp, #156	; 0x9c
    91d8:	str	r1, [sp, #8]
    91da:	ldr	r3, [r4, #92]	; 0x5c
    91dc:	mov	r0, r4
    91de:	vmov	s16, r3
    91e2:	ldr	r3, [sp, #120]	; 0x78
    91e4:	mla	r3, r8, r3, r4
    91e8:	ldr.w	r2, [r3, #214]	; 0xd6
    91ec:	movs	r3, #16
    91ee:	adds	r2, #183	; 0xb7
    91f0:	str	r2, [sp, #16]
    91f2:	bl	17308 <memcmp_extent_buffer@@Base>
    91f6:	cmp	r0, #0
    91f8:	beq.n	91a2 <main@@Base+0x7fa>
    91fa:	mov	r0, r4
    91fc:	ldr	r2, [sp, #16]
    91fe:	ldr	r1, [sp, #8]
    9200:	movs	r3, #16
    9202:	bl	17330 <write_extent_buffer@@Base>
    9206:	mov	r2, r4
    9208:	vmov	r1, s16
    920c:	movs	r0, #0
    920e:	bl	1d5dc <write_tree_block@@Base>
    9212:	subs	r4, r0, #0
    9214:	bge.n	91a2 <main@@Base+0x7fa>
    9216:	add	r0, sp, #88	; 0x58
    9218:	bl	17e58 <btrfs_release_path@@Base>
    921c:	cbz	r4, 9226 <main@@Base+0x87e>
    921e:	ldr	r0, [pc, #336]	; (9370 <main@@Base+0x9c8>)
    9220:	mov	r1, r4
    9222:	add	r0, pc
    9224:	b.n	8e4e <main@@Base+0x4a6>
    9226:	add.w	ip, sp, #156	; 0x9c
    922a:	ldr.w	r2, [r5, #352]	; 0x160
    922e:	add	r7, sp, #172	; 0xac
    9230:	mov	r4, ip
    9232:	mov	r3, ip
    9234:	adds	r2, #8
    9236:	ldmia	r3!, {r0, r1}
    9238:	cmp	r3, r7
    923a:	str.w	r0, [r2, #-8]
    923e:	mov	ip, r3
    9240:	str.w	r1, [r2, #-4]
    9244:	bne.n	9232 <main@@Base+0x88a>
    9246:	ldr.w	r3, [r5, #308]	; 0x134
    924a:	adds	r3, #32
    924c:	mov	r2, r4
    924e:	adds	r3, #8
    9250:	ldmia	r2!, {r0, r1}
    9252:	cmp	r2, r7
    9254:	str.w	r0, [r3, #-8]
    9258:	mov	r4, r2
    925a:	str.w	r1, [r3, #-4]
    925e:	bne.n	924c <main@@Base+0x8a4>
    9260:	mov	r0, r5
    9262:	bl	1ced4 <write_all_supers@@Base>
    9266:	cmp	r0, #0
    9268:	blt.w	8e52 <main@@Base+0x4aa>
    926c:	ldr	r0, [pc, #260]	; (9374 <main@@Base+0x9cc>)
    926e:	add	r0, pc
    9270:	blx	8618 <puts@plt+0x4>
    9274:	ldr.w	r3, [r5, #308]	; 0x134
    9278:	mov	r0, r5
    927a:	ldr	r1, [r3, #56]	; 0x38
    927c:	ldr	r2, [r3, #60]	; 0x3c
    927e:	str	r1, [r3, #56]	; 0x38
    9280:	bic.w	r2, r2, #8
    9284:	str	r2, [r3, #60]	; 0x3c
    9286:	bl	1ced4 <write_all_supers@@Base>
    928a:	movs	r3, #0
    928c:	str	r3, [r5, #16]
    928e:	mov	r4, r0
    9290:	ldr	r0, [pc, #228]	; (9378 <main@@Base+0x9d0>)
    9292:	add	r0, pc
    9294:	blx	8618 <puts@plt+0x4>
    9298:	cmp	r4, #0
    929a:	bne.w	8e52 <main@@Base+0x4aa>
    929e:	add.w	fp, fp, #1
    92a2:	b.n	8e52 <main@@Base+0x4aa>
    92a4:	ldr	r5, [sp, #28]
    92a6:	b.n	8c38 <main@@Base+0x290>
    92a8:	mov	r0, r7
    92aa:	add	sp, #252	; 0xfc
    92ac:	vpop	{d8-d9}
    92b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    92b4:	stmia	r3!, {r1, r2, r6, r7}
    92b6:	movs	r5, r0
    92b8:	lsls	r4, r4, #8
    92ba:	movs	r0, r0
    92bc:	cbnz	r2, 933a <main@@Base+0x992>
    92be:	movs	r5, r0
    92c0:	stmia	r3!, {r2, r4, r5, r7}
    92c2:	movs	r5, r0
    92c4:	asrs	r4, r2, #3
    92c6:	movs	r3, r0
    92c8:	bhi.n	9354 <main@@Base+0x9ac>
    92ca:	movs	r5, r0
    92cc:	stmia	r3!, {r2, r6}
    92ce:	movs	r5, r0
    92d0:	lsls	r0, r6, #9
    92d2:	movs	r0, r0
    92d4:	lsls	r0, r5, #8
    92d6:	movs	r0, r0
    92d8:	bvc.n	9330 <main@@Base+0x988>
    92da:	movs	r5, r0
    92dc:	lsrs	r5, r5, #30
    92de:	movs	r3, r0
    92e0:	lsrs	r7, r7, #30
    92e2:	movs	r3, r0
    92e4:	lsrs	r5, r0, #31
    92e6:	movs	r3, r0
    92e8:	lsrs	r0, r1, #31
    92ea:	movs	r3, r0
    92ec:	bvs.n	925c <main@@Base+0x8b4>
    92ee:	movs	r5, r0
    92f0:	lsrs	r6, r7, #30
    92f2:	movs	r3, r0
    92f4:	lsrs	r0, r6, #30
    92f6:	movs	r3, r0
    92f8:	lsrs	r7, r7, #30
    92fa:	movs	r3, r0
    92fc:	lsrs	r3, r6, #30
    92fe:	movs	r3, r0
    9300:	lsls	r4, r6, #8
    9302:	movs	r0, r0
    9304:	lsrs	r5, r2, #30
    9306:	movs	r3, r0
    9308:	lsrs	r6, r4, #30
    930a:	movs	r3, r0
    930c:	lsrs	r3, r7, #31
    930e:	movs	r3, r0
    9310:	asrs	r5, r3, #32
    9312:	movs	r3, r0
    9314:	bpl.n	9248 <main@@Base+0x8a0>
    9316:	movs	r5, r0
    9318:	lsrs	r0, r7, #31
    931a:	movs	r3, r0
    931c:	asrs	r1, r2, #13
    931e:	movs	r3, r0
    9320:	asrs	r1, r6, #12
    9322:	movs	r3, r0
    9324:	bpl.n	9354 <main@@Base+0x9ac>
    9326:	movs	r5, r0
    9328:	lsrs	r0, r4, #30
    932a:	movs	r3, r0
    932c:	lsrs	r2, r6, #30
    932e:	movs	r3, r0
    9330:	lsrs	r3, r7, #29
    9332:	movs	r3, r0
    9334:	lsrs	r5, r5, #29
    9336:	movs	r3, r0
    9338:	bmi.n	93ec <_start@@Base+0x70>
    933a:	movs	r5, r0
    933c:	lsrs	r2, r0, #31
    933e:	movs	r3, r0
    9340:	asrs	r2, r1, #2
    9342:	movs	r3, r0
    9344:	asrs	r2, r4, #2
    9346:	movs	r3, r0
    9348:	asrs	r4, r7, #1
    934a:	movs	r3, r0
    934c:	asrs	r6, r2, #7
    934e:	movs	r3, r0
    9350:	asrs	r0, r0, #1
    9352:	movs	r3, r0
    9354:	asrs	r4, r7, #32
    9356:	movs	r3, r0
    9358:	asrs	r0, r0, #1
    935a:	movs	r3, r0
    935c:	lsrs	r2, r4, #31
    935e:	movs	r3, r0
    9360:	lsrs	r1, r2, #28
    9362:	movs	r3, r0
    9364:	lsrs	r3, r0, #29
    9366:	movs	r3, r0
    9368:	lsrs	r3, r6, #26
    936a:	movs	r3, r0
    936c:	lsrs	r3, r6, #26
    936e:	movs	r3, r0
    9370:	lsrs	r6, r7, #22
    9372:	movs	r3, r0
    9374:	lsrs	r7, r2, #22
    9376:	movs	r3, r0
    9378:	lsrs	r7, r2, #22
    937a:	movs	r3, r0

0000937c <_start@@Base>:
    937c:	mov.w	fp, #0
    9380:	mov.w	lr, #0
    9384:	pop	{r1}
    9386:	mov	r2, sp
    9388:	push	{r2}
    938a:	push	{r0}
    938c:	ldr.w	sl, [pc, #36]	; 93b4 <_start@@Base+0x38>
    9390:	add	r3, pc, #32	; (adr r3, 93b4 <_start@@Base+0x38>)
    9392:	add	sl, r3
    9394:	ldr.w	ip, [pc, #32]	; 93b8 <_start@@Base+0x3c>
    9398:	ldr.w	ip, [sl, ip]
    939c:	str.w	ip, [sp, #-4]!
    93a0:	ldr	r3, [pc, #24]	; (93bc <_start@@Base+0x40>)
    93a2:	ldr.w	r3, [sl, r3]
    93a6:	ldr	r0, [pc, #24]	; (93c0 <_start@@Base+0x44>)
    93a8:	ldr.w	r0, [sl, r0]
    93ac:	blx	8640 <__libc_start_main@plt>
    93b0:	blx	8948 <abort@plt>
    93b4:	cbnz	r0, 93ee <_start@@Base+0x72>
    93b6:	movs	r5, r0
    93b8:	lsls	r4, r2, #8
    93ba:	movs	r0, r0
    93bc:	lsls	r0, r2, #9
    93be:	movs	r0, r0
    93c0:	lsls	r0, r4, #9
    93c2:	movs	r0, r0
    93c4:	adds	r0, #20
    93c6:	b.n	8f08 <main@@Base+0x560>
    93c8:	movs	r0, #20
    93ca:	b.n	8f0c <main@@Base+0x564>
    93cc:	adds	r0, #3
    93ce:	b.n	94f0 <_start@@Base+0x174>
    93d0:	movs	r0, #2
    93d2:	b.n	92fc <main@@Base+0x954>
    93d4:	movs	r0, r0
    93d6:	b.n	9a7e <btrfs_match_dir_item_name@@Base+0x20c>
    93d8:	vrhadd.u16	d0, d14, d31
    93dc:	ldc2	10, cr14, [r3], #1020	; 0x3fc	; <UNPREDICTABLE>
    93e0:	cbnz	r0, 9412 <_start@@Base+0x96>
    93e2:	movs	r5, r0
    93e4:	lsls	r0, r0, #9
    93e6:	movs	r0, r0
    93e8:	ldr	r0, [pc, #24]	; (9404 <_start@@Base+0x88>)
    93ea:	ldr	r3, [pc, #28]	; (9408 <_start@@Base+0x8c>)
    93ec:	add	r0, pc
    93ee:	ldr	r2, [pc, #28]	; (940c <_start@@Base+0x90>)
    93f0:	add	r3, pc
    93f2:	cmp	r3, r0
    93f4:	add	r2, pc
    93f6:	beq.n	9400 <_start@@Base+0x84>
    93f8:	ldr	r3, [pc, #20]	; (9410 <_start@@Base+0x94>)
    93fa:	ldr	r3, [r2, r3]
    93fc:	cbz	r3, 9400 <_start@@Base+0x84>
    93fe:	bx	r3
    9400:	bx	lr
    9402:	nop
    9404:	ldmia	r6, {r4, r6}
    9406:	movs	r5, r0
    9408:	ldmia	r6, {r2, r3, r6}
    940a:	movs	r5, r0
    940c:	cbnz	r4, 9434 <_start@@Base+0xb8>
    940e:	movs	r5, r0
    9410:	lsls	r4, r3, #8
    9412:	movs	r0, r0
    9414:	ldr	r0, [pc, #32]	; (9438 <_start@@Base+0xbc>)
    9416:	ldr	r1, [pc, #36]	; (943c <_start@@Base+0xc0>)
    9418:	add	r0, pc
    941a:	ldr	r2, [pc, #36]	; (9440 <_start@@Base+0xc4>)
    941c:	add	r1, pc
    941e:	subs	r1, r1, r0
    9420:	add	r2, pc
    9422:	lsrs	r3, r1, #31
    9424:	add.w	r1, r3, r1, asr #2
    9428:	asrs	r1, r1, #1
    942a:	beq.n	9434 <_start@@Base+0xb8>
    942c:	ldr	r3, [pc, #20]	; (9444 <_start@@Base+0xc8>)
    942e:	ldr	r3, [r2, r3]
    9430:	cbz	r3, 9434 <_start@@Base+0xb8>
    9432:	bx	r3
    9434:	bx	lr
    9436:	nop
    9438:	ldmia	r6!, {r2, r5}
    943a:	movs	r5, r0
    943c:	ldmia	r6!, {r5}
    943e:	movs	r5, r0
    9440:	cbnz	r0, 945e <_start@@Base+0xe2>
    9442:	movs	r5, r0
    9444:	lsls	r0, r5, #9
    9446:	movs	r0, r0
    9448:	push	{r3, lr}
    944a:	ldr	r3, [pc, #40]	; (9474 <_start@@Base+0xf8>)
    944c:	ldr	r2, [pc, #40]	; (9478 <_start@@Base+0xfc>)
    944e:	add	r3, pc
    9450:	add	r2, pc
    9452:	ldrb	r3, [r3, #0]
    9454:	cbnz	r3, 9472 <_start@@Base+0xf6>
    9456:	ldr	r3, [pc, #36]	; (947c <_start@@Base+0x100>)
    9458:	ldr	r3, [r2, r3]
    945a:	cbz	r3, 9466 <_start@@Base+0xea>
    945c:	ldr	r3, [pc, #32]	; (9480 <_start@@Base+0x104>)
    945e:	add	r3, pc
    9460:	ldr	r0, [r3, #0]
    9462:	blx	8388 <__cxa_finalize@plt>
    9466:	bl	93e8 <_start@@Base+0x6c>
    946a:	ldr	r3, [pc, #24]	; (9484 <_start@@Base+0x108>)
    946c:	movs	r2, #1
    946e:	add	r3, pc
    9470:	strb	r2, [r3, #0]
    9472:	pop	{r3, pc}
    9474:	ldmia	r5, {r1, r2, r3, r5, r6, r7}
    9476:	movs	r5, r0
    9478:	cbnz	r0, 948a <_start@@Base+0x10e>
    947a:	movs	r5, r0
    947c:	lsls	r0, r3, #8
    947e:	movs	r0, r0
    9480:	cbnz	r2, 94ec <_start@@Base+0x170>
    9482:	movs	r5, r0
    9484:	ldmia	r5!, {r1, r2, r3, r6, r7}
    9486:	movs	r5, r0
    9488:	b.n	9414 <_start@@Base+0x98>
    948a:	nop
    948c:	ldr	r0, [pc, #140]	; (951c <_start@@Base+0x1a0>)
    948e:	push	{r3, lr}
    9490:	add	r0, pc
    9492:	blx	8618 <puts@plt+0x4>
    9496:	ldr	r0, [pc, #136]	; (9520 <_start@@Base+0x1a4>)
    9498:	add	r0, pc
    949a:	blx	8618 <puts@plt+0x4>
    949e:	ldr	r0, [pc, #132]	; (9524 <_start@@Base+0x1a8>)
    94a0:	add	r0, pc
    94a2:	blx	8618 <puts@plt+0x4>
    94a6:	ldr	r0, [pc, #128]	; (9528 <_start@@Base+0x1ac>)
    94a8:	add	r0, pc
    94aa:	blx	8618 <puts@plt+0x4>
    94ae:	ldr	r0, [pc, #124]	; (952c <_start@@Base+0x1b0>)
    94b0:	add	r0, pc
    94b2:	blx	8618 <puts@plt+0x4>
    94b6:	ldr	r0, [pc, #120]	; (9530 <_start@@Base+0x1b4>)
    94b8:	add	r0, pc
    94ba:	blx	8618 <puts@plt+0x4>
    94be:	ldr	r0, [pc, #116]	; (9534 <_start@@Base+0x1b8>)
    94c0:	add	r0, pc
    94c2:	blx	8618 <puts@plt+0x4>
    94c6:	ldr	r0, [pc, #112]	; (9538 <_start@@Base+0x1bc>)
    94c8:	add	r0, pc
    94ca:	blx	8618 <puts@plt+0x4>
    94ce:	ldr	r0, [pc, #108]	; (953c <_start@@Base+0x1c0>)
    94d0:	add	r0, pc
    94d2:	blx	8618 <puts@plt+0x4>
    94d6:	ldr	r0, [pc, #104]	; (9540 <_start@@Base+0x1c4>)
    94d8:	add	r0, pc
    94da:	blx	8618 <puts@plt+0x4>
    94de:	ldr	r0, [pc, #100]	; (9544 <_start@@Base+0x1c8>)
    94e0:	add	r0, pc
    94e2:	blx	8618 <puts@plt+0x4>
    94e6:	ldr	r0, [pc, #96]	; (9548 <_start@@Base+0x1cc>)
    94e8:	add	r0, pc
    94ea:	blx	8618 <puts@plt+0x4>
    94ee:	ldr	r0, [pc, #92]	; (954c <_start@@Base+0x1d0>)
    94f0:	add	r0, pc
    94f2:	blx	8618 <puts@plt+0x4>
    94f6:	ldr	r0, [pc, #88]	; (9550 <_start@@Base+0x1d4>)
    94f8:	add	r0, pc
    94fa:	blx	8618 <puts@plt+0x4>
    94fe:	ldr	r0, [pc, #84]	; (9554 <_start@@Base+0x1d8>)
    9500:	add	r0, pc
    9502:	blx	8618 <puts@plt+0x4>
    9506:	ldr	r0, [pc, #80]	; (9558 <_start@@Base+0x1dc>)
    9508:	add	r0, pc
    950a:	blx	8618 <puts@plt+0x4>
    950e:	ldr	r0, [pc, #76]	; (955c <_start@@Base+0x1e0>)
    9510:	ldmia.w	sp!, {r3, lr}
    9514:	add	r0, pc
    9516:	b.w	8614 <puts@plt>
    951a:	nop
    951c:	lsls	r0, r6, #9
    951e:	movs	r3, r0
    9520:	lsls	r2, r1, #10
    9522:	movs	r3, r0
    9524:	lsls	r7, r7, #10
    9526:	movs	r3, r0
    9528:	lsls	r0, r0, #11
    952a:	movs	r3, r0
    952c:	lsls	r1, r2, #11
    952e:	movs	r3, r0
    9530:	lsls	r5, r2, #12
    9532:	movs	r3, r0
    9534:	lsls	r5, r2, #13
    9536:	movs	r3, r0
    9538:	lsls	r6, r5, #14
    953a:	movs	r3, r0
    953c:	lsls	r0, r3, #15
    953e:	movs	r3, r0
    9540:	lsls	r0, r4, #15
    9542:	movs	r3, r0
    9544:	lsls	r4, r0, #16
    9546:	movs	r3, r0
    9548:	lsls	r6, r3, #16
    954a:	movs	r3, r0
    954c:	lsls	r1, r2, #17
    954e:	movs	r3, r0
    9550:	lsls	r5, r0, #18
    9552:	movs	r3, r0
    9554:	lsls	r7, r5, #18
    9556:	movs	r3, r0
    9558:	lsls	r2, r6, #18
    955a:	movs	r3, r0
    955c:	lsls	r3, r7, #19
    955e:	movs	r3, r0
    9560:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    9564:	mov	r7, r2
    9566:	ldr.w	r4, [r0, #308]	; 0x134
    956a:	mov	r3, r1
    956c:	movs	r1, #0
    956e:	mov	r8, r1
    9570:	ldr	r2, [r4, #60]	; 0x3c
    9572:	and.w	r9, r2, #24
    9576:	orrs.w	r2, r8, r9
    957a:	beq.n	95ac <_start@@Base+0x230>
    957c:	ldr.w	ip, [r0, #28]
    9580:	add.w	r5, r4, #32
    9584:	adds	r4, #48	; 0x30
    9586:	ldr	r0, [r5, #0]
    9588:	adds	r5, #8
    958a:	ldr.w	r1, [r5, #-4]
    958e:	cmp	r5, r4
    9590:	mov	r6, r3
    9592:	stmia	r6!, {r0, r1}
    9594:	mov	r3, r6
    9596:	bne.n	9586 <_start@@Base+0x20a>
    9598:	ldr.w	r0, [ip]
    959c:	movs	r3, #16
    959e:	movs	r2, #64	; 0x40
    95a0:	mov	r1, r7
    95a2:	bl	1731a <read_extent_buffer@@Base>
    95a6:	movs	r0, #1
    95a8:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    95ac:	mov	r0, r1
    95ae:	b.n	95a8 <_start@@Base+0x22c>
    95b0:	ldr	r2, [pc, #384]	; (9734 <_start@@Base+0x3b8>)
    95b2:	ldr	r3, [pc, #388]	; (9738 <_start@@Base+0x3bc>)
    95b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    95b8:	add	r2, pc
    95ba:	mov	r7, r0
    95bc:	ldr.w	r0, [r0, #464]	; 0x1d0
    95c0:	ldr	r3, [r2, r3]
    95c2:	sub	sp, #68	; 0x44
    95c4:	ldr	r5, [pc, #372]	; (973c <_start@@Base+0x3c0>)
    95c6:	movs	r2, #0
    95c8:	ldr.w	r6, [r0, #308]	; 0x134
    95cc:	ldr	r3, [r3, #0]
    95ce:	str	r3, [sp, #60]	; 0x3c
    95d0:	mov.w	r3, #0
    95d4:	add	r5, pc
    95d6:	mov	r4, r1
    95d8:	ldr	r3, [r6, #56]	; 0x38
    95da:	str	r3, [sp, #0]
    95dc:	ldr.w	r9, [r6, #60]	; 0x3c
    95e0:	and.w	r3, r9, #1
    95e4:	orrs	r3, r2
    95e6:	beq.n	960e <_start@@Base+0x292>
    95e8:	ldr	r3, [pc, #340]	; (9740 <_start@@Base+0x3c4>)
    95ea:	ldr	r0, [pc, #344]	; (9744 <_start@@Base+0x3c8>)
    95ec:	ldr	r3, [r5, r3]
    95ee:	add	r0, pc
    95f0:	ldr	r1, [r3, #0]
    95f2:	blx	8930 <fputs@plt+0x4>
    95f6:	movs	r0, #1
    95f8:	ldr	r2, [pc, #332]	; (9748 <_start@@Base+0x3cc>)
    95fa:	ldr	r3, [pc, #316]	; (9738 <_start@@Base+0x3bc>)
    95fc:	add	r2, pc
    95fe:	ldr	r3, [r2, r3]
    9600:	ldr	r2, [r3, #0]
    9602:	ldr	r3, [sp, #60]	; 0x3c
    9604:	eors	r2, r3
    9606:	beq.w	972c <_start@@Base+0x3b0>
    960a:	blx	84cc <__stack_chk_fail@plt>
    960e:	add.w	sl, sp, #28
    9612:	add	r2, sp, #44	; 0x2c
    9614:	ldr.w	r8, [r6, #188]	; 0xbc
    9618:	mov	r1, sl
    961a:	ldr.w	fp, [r6, #192]	; 0xc0
    961e:	bl	9560 <_start@@Base+0x1e4>
    9622:	cbz	r0, 9630 <_start@@Base+0x2b4>
    9624:	ldr	r3, [pc, #280]	; (9740 <_start@@Base+0x3c4>)
    9626:	ldr	r0, [pc, #292]	; (974c <_start@@Base+0x3d0>)
    9628:	ldr	r3, [r5, r3]
    962a:	add	r0, pc
    962c:	ldr	r1, [r3, #0]
    962e:	b.n	95f2 <_start@@Base+0x276>
    9630:	add	r5, sp, #12
    9632:	cmp	r4, #0
    9634:	beq.n	96d6 <_start@@Base+0x35a>
    9636:	mov	r1, r5
    9638:	mov	r0, r4
    963a:	blx	8888 <uuid_parse@plt>
    963e:	add.w	r4, r6, #32
    9642:	movs	r2, #16
    9644:	mov	r0, r5
    9646:	mov	r1, r4
    9648:	blx	8464 <memcmp@plt+0x4>
    964c:	movs	r1, #1
    964e:	str	r0, [sp, #4]
    9650:	mov	r0, r7
    9652:	bl	2af7c <btrfs_start_transaction@@Base>
    9656:	ldr	r3, [sp, #0]
    9658:	orr.w	r2, r9, #16
    965c:	mov	r1, r7
    965e:	str	r2, [r6, #60]	; 0x3c
    9660:	str	r3, [r6, #56]	; 0x38
    9662:	bl	2b1fc <btrfs_commit_transaction@@Base>
    9666:	cmp	r0, #0
    9668:	blt.n	95f8 <_start@@Base+0x27c>
    966a:	ldr	r3, [sp, #4]
    966c:	cmp	r3, #0
    966e:	beq.n	9728 <_start@@Base+0x3ac>
    9670:	and.w	r0, r8, #1024	; 0x400
    9674:	movs	r1, #0
    9676:	orrs.w	r2, r0, r1
    967a:	addw	r3, r6, #571	; 0x23b
    967e:	beq.n	96f4 <_start@@Base+0x378>
    9680:	mov	r0, r3
    9682:	movs	r2, #16
    9684:	mov	r1, r5
    9686:	str	r3, [sp, #4]
    9688:	blx	8464 <memcmp@plt+0x4>
    968c:	ldr	r3, [sp, #4]
    968e:	cbnz	r0, 96de <_start@@Base+0x362>
    9690:	mov	r2, r5
    9692:	adds	r4, #8
    9694:	ldmia	r2!, {r0, r1}
    9696:	cmp	r2, sl
    9698:	str.w	r0, [r4, #-8]
    969c:	mov	r5, r2
    969e:	str.w	r1, [r4, #-4]
    96a2:	bne.n	9690 <_start@@Base+0x314>
    96a4:	bic.w	r8, r8, #1024	; 0x400
    96a8:	movs	r2, #16
    96aa:	movs	r1, #0
    96ac:	mov	r0, r3
    96ae:	str.w	r8, [r6, #188]	; 0xbc
    96b2:	str.w	fp, [r6, #192]	; 0xc0
    96b6:	blx	8780 <memset@plt+0x4>
    96ba:	movs	r1, #1
    96bc:	mov	r0, r7
    96be:	bl	2af7c <btrfs_start_transaction@@Base>
    96c2:	ldr	r3, [sp, #0]
    96c4:	bic.w	r9, r9, #16
    96c8:	mov	r1, r7
    96ca:	str.w	r9, [r6, #60]	; 0x3c
    96ce:	str	r3, [r6, #56]	; 0x38
    96d0:	bl	2b1fc <btrfs_commit_transaction@@Base>
    96d4:	b.n	95f8 <_start@@Base+0x27c>
    96d6:	mov	r0, r5
    96d8:	blx	880c <uuid_generate@plt>
    96dc:	b.n	963e <_start@@Base+0x2c2>
    96de:	mov	r3, r5
    96e0:	adds	r4, #8
    96e2:	ldmia	r3!, {r0, r1}
    96e4:	cmp	r3, sl
    96e6:	str.w	r0, [r4, #-8]
    96ea:	mov	r5, r3
    96ec:	str.w	r1, [r4, #-4]
    96f0:	bne.n	96de <_start@@Base+0x362>
    96f2:	b.n	96ba <_start@@Base+0x33e>
    96f4:	add.w	r1, r6, #48	; 0x30
    96f8:	mov	r2, r4
    96fa:	orr.w	r8, r8, #1024	; 0x400
    96fe:	str.w	fp, [r6, #192]	; 0xc0
    9702:	str.w	r8, [r6, #188]	; 0xbc
    9706:	ldr.w	r0, [r2], #4
    970a:	cmp	r2, r1
    970c:	str.w	r0, [r3], #4
    9710:	bne.n	9706 <_start@@Base+0x38a>
    9712:	mov	r3, r5
    9714:	adds	r4, #8
    9716:	ldmia	r3!, {r0, r1}
    9718:	cmp	r3, sl
    971a:	str.w	r0, [r4, #-8]
    971e:	mov	r5, r3
    9720:	str.w	r1, [r4, #-4]
    9724:	bne.n	9712 <_start@@Base+0x396>
    9726:	b.n	96ba <_start@@Base+0x33e>
    9728:	mov	r0, r3
    972a:	b.n	95f8 <_start@@Base+0x27c>
    972c:	add	sp, #68	; 0x44
    972e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9732:	nop
    9734:			; <UNDEFINED> instruction: 0xb7d0
    9736:	movs	r5, r0
    9738:	lsls	r4, r4, #8
    973a:	movs	r0, r0
    973c:			; <UNDEFINED> instruction: 0xb7b4
    973e:	movs	r5, r0
    9740:	lsls	r4, r6, #8
    9742:	movs	r0, r0
    9744:	lsls	r6, r7, #16
    9746:	movs	r3, r0
    9748:			; <UNDEFINED> instruction: 0xb78c
    974a:	movs	r5, r0
    974c:	lsls	r5, r5, #16
    974e:	movs	r3, r0
    9750:	ldr.w	ip, [pc, #80]	; 97a4 <_start@@Base+0x428>
    9754:	ldr	r4, [pc, #80]	; (97a8 <_start@@Base+0x42c>)
    9756:	add	ip, pc
    9758:	ldr	r3, [pc, #80]	; (97ac <_start@@Base+0x430>)
    975a:	push	{lr}
    975c:	sub	sp, #92	; 0x5c
    975e:	ldr.w	r4, [ip, r4]
    9762:	add	r3, pc
    9764:	ldr	r4, [r4, #0]
    9766:	str	r4, [sp, #84]	; 0x54
    9768:	mov.w	r4, #0
    976c:	ldr	r4, [pc, #64]	; (97b0 <_start@@Base+0x434>)
    976e:	ldr	r4, [r3, r4]
    9770:	ldr	r3, [pc, #64]	; (97b4 <_start@@Base+0x438>)
    9772:	str	r2, [sp, #12]
    9774:	add	r3, pc
    9776:	ldr	r2, [pc, #64]	; (97b8 <_start@@Base+0x43c>)
    9778:	strd	r0, r3, [sp, #4]
    977c:	ldr	r3, [pc, #60]	; (97bc <_start@@Base+0x440>)
    977e:	add	r2, pc
    9780:	str	r1, [sp, #0]
    9782:	movs	r1, #1
    9784:	ldr	r0, [r4, #0]
    9786:	add	r4, sp, #20
    9788:	add	r3, pc
    978a:	blx	881c <__fprintf_chk@plt+0x4>
    978e:	movs	r1, #16
    9790:	mov	r0, r4
    9792:	blx	8680 <backtrace@plt>
    9796:	movs	r2, #2
    9798:	mov	r1, r0
    979a:	mov	r0, r4
    979c:	blx	8990 <backtrace_symbols_fd@plt>
    97a0:	blx	8948 <abort@plt>
    97a4:			; <UNDEFINED> instruction: 0xb632
    97a6:	movs	r5, r0
    97a8:	lsls	r4, r4, #8
    97aa:	movs	r0, r0
    97ac:			; <UNDEFINED> instruction: 0xb626
    97ae:	movs	r5, r0
    97b0:	lsls	r4, r6, #8
    97b2:	movs	r0, r0
    97b4:	lsls	r2, r1, #13
    97b6:	movs	r3, r0
    97b8:	lsls	r3, r2, #12
    97ba:	movs	r3, r0
    97bc:	lsls	r5, r7, #11
    97be:	movs	r3, r0
    97c0:	ldr	r2, [pc, #60]	; (9800 <_start@@Base+0x484>)
    97c2:	movs	r1, #16
    97c4:	ldr	r3, [pc, #60]	; (9804 <_start@@Base+0x488>)
    97c6:	push	{r4, lr}
    97c8:	add	r2, pc
    97ca:	sub	sp, #72	; 0x48
    97cc:	add	r4, sp, #4
    97ce:	ldr	r3, [r2, r3]
    97d0:	mov	r0, r4
    97d2:	ldr	r3, [r3, #0]
    97d4:	str	r3, [sp, #68]	; 0x44
    97d6:	mov.w	r3, #0
    97da:	blx	8680 <backtrace@plt>
    97de:	movs	r2, #2
    97e0:	mov	r1, r0
    97e2:	mov	r0, r4
    97e4:	blx	8990 <backtrace_symbols_fd@plt>
    97e8:	ldr	r2, [pc, #28]	; (9808 <_start@@Base+0x48c>)
    97ea:	ldr	r3, [pc, #24]	; (9804 <_start@@Base+0x488>)
    97ec:	add	r2, pc
    97ee:	ldr	r3, [r2, r3]
    97f0:	ldr	r2, [r3, #0]
    97f2:	ldr	r3, [sp, #68]	; 0x44
    97f4:	eors	r2, r3
    97f6:	beq.n	97fc <_start@@Base+0x480>
    97f8:	blx	84cc <__stack_chk_fail@plt>
    97fc:	add	sp, #72	; 0x48
    97fe:	pop	{r4, pc}
    9800:	push	{r6, r7, lr}
    9802:	movs	r5, r0
    9804:	lsls	r4, r4, #8
    9806:	movs	r0, r0
    9808:	push	{r2, r3, r4, r7, lr}
    980a:	movs	r5, r0

0000980c <btrfs_delete_one_dir_name@@Base>:
    980c:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    9810:	mov	r6, r3
    9812:	ldr.w	ip, [r2]
    9816:	movs	r7, #25
    9818:	mov	r8, r1
    981a:	mov	r5, r2
    981c:	add.w	lr, ip, #96	; 0x60
    9820:	add	r3, lr
    9822:	ldrh.w	r4, [r3, #27]
    9826:	ldrh.w	r3, [r3, #25]
    982a:	add	r4, r3
    982c:	ldr	r3, [r2, #32]
    982e:	adds	r4, #30
    9830:	mla	r7, r7, r3, lr
    9834:	add.w	lr, r7, #101	; 0x65
    9838:	ldr.w	r7, [r7, #122]	; 0x7a
    983c:	cmp	r4, r7
    983e:	bcc.n	984e <btrfs_delete_one_dir_name@@Base+0x42>
    9840:	movs	r4, #1
    9842:	str	r4, [sp, #0]
    9844:	bl	1b3f8 <btrfs_del_items@@Base>
    9848:	add	sp, #8
    984a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    984e:	ldr.w	r3, [lr, #17]
    9852:	adds	r2, r4, r6
    9854:	mov	r0, ip
    9856:	mov	r1, r6
    9858:	add	r3, r7
    985a:	adds	r3, #101	; 0x65
    985c:	subs	r3, r3, r2
    985e:	bl	1738c <memmove_extent_buffer@@Base>
    9862:	subs	r2, r7, r4
    9864:	movs	r3, #1
    9866:	mov	r1, r5
    9868:	mov	r0, r8
    986a:	bl	19e7c <btrfs_truncate_item@@Base>
    986e:	movs	r0, #0
    9870:	b.n	9848 <btrfs_delete_one_dir_name@@Base+0x3c>

00009872 <btrfs_match_dir_item_name@@Base>:
    9872:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9876:	mov	r4, r1
    9878:	ldr.w	fp, [r4]
    987c:	mov	r7, r3
    987e:	ldr	r3, [r4, #32]
    9880:	mov	r1, r2
    9882:	add.w	r9, fp, #96	; 0x60
    9886:	movs	r2, #25
    9888:	ldr.w	r8, [pc, #188]	; 9948 <btrfs_match_dir_item_name@@Base+0xd6>
    988c:	sub	sp, #20
    988e:	mla	r3, r2, r3, r9
    9892:	add	r8, pc
    9894:	add.w	r5, r3, #101	; 0x65
    9898:	ldr.w	r4, [r3, #118]	; 0x76
    989c:	adds	r4, #101	; 0x65
    989e:	add.w	r2, r9, r4
    98a2:	ldrh.w	r3, [r2, #27]
    98a6:	ldrh.w	r2, [r2, #25]
    98aa:	cmp	r3, #255	; 0xff
    98ac:	bls.n	98c6 <btrfs_match_dir_item_name@@Base+0x54>
    98ae:	ldr	r3, [pc, #156]	; (994c <btrfs_match_dir_item_name@@Base+0xda>)
    98b0:	movs	r1, #1
    98b2:	ldr.w	r0, [r8, r3]
    98b6:	mov	r3, r2
    98b8:	ldr	r2, [pc, #148]	; (9950 <btrfs_match_dir_item_name@@Base+0xde>)
    98ba:	ldr	r0, [r0, #0]
    98bc:	add	r2, pc
    98be:	blx	881c <__fprintf_chk@plt+0x4>
    98c2:	movs	r4, #0
    98c4:	b.n	993e <btrfs_match_dir_item_name@@Base+0xcc>
    98c6:	ldr.w	r0, [r0, #464]	; 0x1d0
    98ca:	adds	r6, r2, r3
    98cc:	ldr.w	r0, [r0, #384]	; 0x180
    98d0:	subs	r0, #156	; 0x9c
    98d2:	cmp	r6, r0
    98d4:	bhi.n	990a <btrfs_match_dir_item_name@@Base+0x98>
    98d6:	ldr.w	sl, [r5, #21]
    98da:	movs	r6, #0
    98dc:	cmp	r6, sl
    98de:	bcs.n	98c2 <btrfs_match_dir_item_name@@Base+0x50>
    98e0:	add.w	r2, r9, r4
    98e4:	ldrh.w	r3, [r2, #27]
    98e8:	ldrh.w	r5, [r2, #25]
    98ec:	sub.w	r2, sl, r6
    98f0:	add	r5, r3
    98f2:	adds	r5, #30
    98f4:	cmp	r2, r5
    98f6:	bcs.n	9920 <btrfs_match_dir_item_name@@Base+0xae>
    98f8:	ldr	r3, [pc, #80]	; (994c <btrfs_match_dir_item_name@@Base+0xda>)
    98fa:	ldr	r0, [pc, #88]	; (9954 <btrfs_match_dir_item_name@@Base+0xe2>)
    98fc:	ldr.w	r3, [r8, r3]
    9900:	add	r0, pc
    9902:	ldr	r1, [r3, #0]
    9904:	blx	8930 <fputs@plt+0x4>
    9908:	b.n	98c2 <btrfs_match_dir_item_name@@Base+0x50>
    990a:	ldr	r1, [pc, #64]	; (994c <btrfs_match_dir_item_name@@Base+0xda>)
    990c:	ldr.w	r0, [r8, r1]
    9910:	movs	r1, #1
    9912:	str	r2, [sp, #0]
    9914:	ldr	r2, [pc, #64]	; (9958 <btrfs_match_dir_item_name@@Base+0xe6>)
    9916:	ldr	r0, [r0, #0]
    9918:	add	r2, pc
    991a:	blx	881c <__fprintf_chk@plt+0x4>
    991e:	b.n	98c2 <btrfs_match_dir_item_name@@Base+0x50>
    9920:	cmp	r3, r7
    9922:	beq.n	992a <btrfs_match_dir_item_name@@Base+0xb8>
    9924:	add	r6, r5
    9926:	add	r4, r5
    9928:	b.n	98dc <btrfs_match_dir_item_name@@Base+0x6a>
    992a:	add.w	r2, r4, #30
    992e:	mov	r3, r7
    9930:	mov	r0, fp
    9932:	str	r1, [sp, #12]
    9934:	bl	17308 <memcmp_extent_buffer@@Base>
    9938:	ldr	r1, [sp, #12]
    993a:	cmp	r0, #0
    993c:	bne.n	9924 <btrfs_match_dir_item_name@@Base+0xb2>
    993e:	mov	r0, r4
    9940:	add	sp, #20
    9942:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9946:	nop
    9948:	push	{r1, r2, r4, r5, r6, r7}
    994a:	movs	r5, r0
    994c:	lsls	r4, r6, #8
    994e:	movs	r0, r0
    9950:	lsls	r0, r0, #31
    9952:	movs	r3, r0
    9954:	lsls	r6, r0, #31
    9956:	movs	r3, r0
    9958:	lsls	r3, r0, #30
    995a:	movs	r3, r0
    995c:	ldr.w	ip, [pc, #292]	; 9a84 <btrfs_match_dir_item_name@@Base+0x212>
    9960:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    9964:	add	ip, pc
    9966:	ldr	r4, [pc, #288]	; (9a88 <btrfs_match_dir_item_name@@Base+0x216>)
    9968:	sub	sp, #24
    996a:	mov.w	r9, #1
    996e:	mov	r8, r1
    9970:	ldrd	r6, sl, [sp, #56]	; 0x38
    9974:	mov	r5, r2
    9976:	ldr.w	r4, [ip, r4]
    997a:	ldr	r7, [pc, #272]	; (9a8c <btrfs_match_dir_item_name@@Base+0x21a>)
    997c:	ldr	r4, [r4, #0]
    997e:	str	r4, [sp, #20]
    9980:	mov.w	r4, #0
    9984:	add	r4, sp, #16
    9986:	str.w	r9, [sp, #4]
    998a:	add	r7, pc
    998c:	str	r4, [sp, #0]
    998e:	str	r6, [sp, #16]
    9990:	bl	1b00c <btrfs_insert_empty_items@@Base>
    9994:	cmn.w	r0, #17
    9998:	mov	r4, r0
    999a:	bne.n	9a12 <btrfs_match_dir_item_name@@Base+0x1a0>
    999c:	ldr	r3, [sp, #64]	; 0x40
    999e:	mov	r2, sl
    99a0:	mov	r1, r5
    99a2:	mov	r0, r8
    99a4:	bl	9872 <btrfs_match_dir_item_name@@Base>
    99a8:	cmp	r0, #0
    99aa:	bne.n	9a16 <btrfs_match_dir_item_name@@Base+0x1a4>
    99ac:	mov	r2, r6
    99ae:	mov	r1, r5
    99b0:	mov	r0, r8
    99b2:	bl	1a030 <btrfs_extend_item@@Base>
    99b6:	subs	r4, r0, #0
    99b8:	ble.n	9a12 <btrfs_match_dir_item_name@@Base+0x1a0>
    99ba:	ldr	r3, [pc, #212]	; (9a90 <btrfs_match_dir_item_name@@Base+0x21e>)
    99bc:	mov	r1, r9
    99be:	ldr	r2, [pc, #212]	; (9a94 <btrfs_match_dir_item_name@@Base+0x222>)
    99c0:	ldr	r0, [r7, r3]
    99c2:	add	r2, pc
    99c4:	ldr	r3, [pc, #208]	; (9a98 <btrfs_match_dir_item_name@@Base+0x226>)
    99c6:	str.w	r9, [sp, #12]
    99ca:	add	r3, pc
    99cc:	str	r3, [sp, #8]
    99ce:	ldr	r3, [pc, #204]	; (9a9c <btrfs_match_dir_item_name@@Base+0x22a>)
    99d0:	add	r3, pc
    99d2:	str	r3, [sp, #4]
    99d4:	movs	r3, #46	; 0x2e
    99d6:	str	r3, [sp, #0]
    99d8:	ldr	r3, [pc, #196]	; (9aa0 <btrfs_match_dir_item_name@@Base+0x22e>)
    99da:	ldr	r0, [r0, #0]
    99dc:	add	r3, pc
    99de:	blx	881c <__fprintf_chk@plt+0x4>
    99e2:	bl	97c0 <_start@@Base+0x444>
    99e6:	ldr	r3, [pc, #168]	; (9a90 <btrfs_match_dir_item_name@@Base+0x21e>)
    99e8:	movs	r1, #1
    99ea:	ldr	r2, [pc, #184]	; (9aa4 <btrfs_match_dir_item_name@@Base+0x232>)
    99ec:	ldr	r0, [r7, r3]
    99ee:	add	r2, pc
    99f0:	ldr	r3, [pc, #180]	; (9aa8 <btrfs_match_dir_item_name@@Base+0x236>)
    99f2:	str	r1, [sp, #12]
    99f4:	add	r3, pc
    99f6:	str	r3, [sp, #8]
    99f8:	ldr	r3, [pc, #176]	; (9aac <btrfs_match_dir_item_name@@Base+0x23a>)
    99fa:	add	r3, pc
    99fc:	str	r3, [sp, #4]
    99fe:	movs	r3, #50	; 0x32
    9a00:	str	r3, [sp, #0]
    9a02:	ldr	r3, [pc, #172]	; (9ab0 <btrfs_match_dir_item_name@@Base+0x23e>)
    9a04:	ldr	r0, [r0, #0]
    9a06:	add	r3, pc
    9a08:	blx	881c <__fprintf_chk@plt+0x4>
    9a0c:	bl	97c0 <_start@@Base+0x444>
    9a10:	b.n	9a1c <btrfs_match_dir_item_name@@Base+0x1aa>
    9a12:	cmp	r4, #0
    9a14:	bge.n	9a1a <btrfs_match_dir_item_name@@Base+0x1a8>
    9a16:	mov	r0, r4
    9a18:	b.n	9a68 <btrfs_match_dir_item_name@@Base+0x1f6>
    9a1a:	bne.n	99e6 <btrfs_match_dir_item_name@@Base+0x174>
    9a1c:	ldr	r2, [r5, #0]
    9a1e:	movs	r1, #25
    9a20:	ldr	r3, [r5, #32]
    9a22:	mla	r3, r1, r3, r2
    9a26:	ldr.w	r0, [r3, #214]	; 0xd6
    9a2a:	add.w	r4, r0, #101	; 0x65
    9a2e:	ldr.w	r0, [r3, #218]	; 0xda
    9a32:	cmp	r6, r0
    9a34:	bls.n	9a64 <btrfs_match_dir_item_name@@Base+0x1f2>
    9a36:	ldr	r3, [pc, #88]	; (9a90 <btrfs_match_dir_item_name@@Base+0x21e>)
    9a38:	movs	r1, #1
    9a3a:	ldr	r2, [pc, #120]	; (9ab4 <btrfs_match_dir_item_name@@Base+0x242>)
    9a3c:	ldr	r0, [r7, r3]
    9a3e:	add	r2, pc
    9a40:	ldr	r3, [pc, #116]	; (9ab8 <btrfs_match_dir_item_name@@Base+0x246>)
    9a42:	str	r1, [sp, #12]
    9a44:	add	r3, pc
    9a46:	str	r3, [sp, #8]
    9a48:	ldr	r3, [pc, #112]	; (9abc <btrfs_match_dir_item_name@@Base+0x24a>)
    9a4a:	add	r3, pc
    9a4c:	str	r3, [sp, #4]
    9a4e:	movs	r3, #54	; 0x36
    9a50:	str	r3, [sp, #0]
    9a52:	ldr	r3, [pc, #108]	; (9ac0 <btrfs_match_dir_item_name@@Base+0x24e>)
    9a54:	ldr	r0, [r0, #0]
    9a56:	add	r3, pc
    9a58:	blx	881c <__fprintf_chk@plt+0x4>
    9a5c:	bl	97c0 <_start@@Base+0x444>
    9a60:	blx	8948 <abort@plt>
    9a64:	subs	r0, r0, r6
    9a66:	add	r0, r4
    9a68:	ldr	r2, [pc, #88]	; (9ac4 <btrfs_match_dir_item_name@@Base+0x252>)
    9a6a:	ldr	r3, [pc, #28]	; (9a88 <btrfs_match_dir_item_name@@Base+0x216>)
    9a6c:	add	r2, pc
    9a6e:	ldr	r3, [r2, r3]
    9a70:	ldr	r2, [r3, #0]
    9a72:	ldr	r3, [sp, #20]
    9a74:	eors	r2, r3
    9a76:	beq.n	9a7c <btrfs_match_dir_item_name@@Base+0x20a>
    9a78:	blx	84cc <__stack_chk_fail@plt>
    9a7c:	add	sp, #24
    9a7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    9a82:	nop
    9a84:	push	{r2, r5}
    9a86:	movs	r5, r0
    9a88:	lsls	r4, r4, #8
    9a8a:	movs	r0, r0
    9a8c:	cbz	r6, 9b0e <btrfs_insert_xattr_item@@Base+0x46>
    9a8e:	movs	r5, r0
    9a90:	lsls	r4, r6, #8
    9a92:	movs	r0, r0
    9a94:	lsls	r6, r4, #28
    9a96:	movs	r3, r0
    9a98:	adds	r2, #195	; 0xc3
    9a9a:	movs	r3, r0
    9a9c:	lsls	r7, r0, #30
    9a9e:	movs	r3, r0
    9aa0:	lsls	r1, r0, #28
    9aa2:	movs	r3, r0
    9aa4:	lsls	r2, r7, #27
    9aa6:	movs	r3, r0
    9aa8:	adds	r2, #153	; 0x99
    9aaa:	movs	r3, r0
    9aac:	lsls	r5, r3, #29
    9aae:	movs	r3, r0
    9ab0:	lsls	r7, r2, #27
    9ab2:	movs	r3, r0
    9ab4:	lsls	r3, r2, #1
    9ab6:	movs	r3, r0
    9ab8:	lsls	r2, r3, #27
    9aba:	movs	r3, r0
    9abc:	lsls	r5, r1, #28
    9abe:	movs	r3, r0
    9ac0:	lsls	r7, r0, #26
    9ac2:	movs	r3, r0
    9ac4:	cbz	r4, 9b0e <btrfs_insert_xattr_item@@Base+0x46>
    9ac6:	movs	r5, r0

00009ac8 <btrfs_insert_xattr_item@@Base>:
    9ac8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9acc:	mov	r5, r3
    9ace:	vpush	{d8}
    9ad2:	mov	r7, r2
    9ad4:	ldr	r2, [pc, #320]	; (9c18 <btrfs_insert_xattr_item@@Base+0x150>)
    9ad6:	mov	r9, r0
    9ad8:	mov	sl, r1
    9ada:	mvn.w	r0, #1
    9ade:	add	r2, pc
    9ae0:	mov	r1, r7
    9ae2:	sub	sp, #76	; 0x4c
    9ae4:	movs	r4, #0
    9ae6:	ldr.w	fp, [pc, #308]	; 9c1c <btrfs_insert_xattr_item@@Base+0x154>
    9aea:	ldr	r3, [sp, #120]	; 0x78
    9aec:	ldrh.w	r8, [sp, #124]	; 0x7c
    9af0:	add	fp, pc
    9af2:	vmov	s16, r3
    9af6:	ldr	r3, [pc, #296]	; (9c20 <btrfs_insert_xattr_item@@Base+0x158>)
    9af8:	ldr	r3, [r2, r3]
    9afa:	mov	r2, r5
    9afc:	ldr	r3, [r3, #0]
    9afe:	str	r3, [sp, #68]	; 0x44
    9b00:	mov.w	r3, #0
    9b04:	ldr	r3, [sp, #128]	; 0x80
    9b06:	str	r3, [sp, #28]
    9b08:	ldr	r3, [sp, #132]	; 0x84
    9b0a:	str	r3, [sp, #32]
    9b0c:	movs	r3, #24
    9b0e:	strb.w	r3, [sp, #36]	; 0x24
    9b12:	bl	173fa <crc32c_le@@Base>
    9b16:	str.w	r4, [sp, #41]	; 0x29
    9b1a:	str.w	r0, [sp, #37]	; 0x25
    9b1e:	bl	17e50 <btrfs_alloc_path@@Base>
    9b22:	mov	r6, r0
    9b24:	cmp	r0, #0
    9b26:	beq.n	9c08 <btrfs_insert_xattr_item@@Base+0x140>
    9b28:	add.w	r3, r8, #30
    9b2c:	mov	r2, r0
    9b2e:	add	r3, r5
    9b30:	mov	r0, r9
    9b32:	str	r3, [sp, #0]
    9b34:	mov	r1, sl
    9b36:	add	r3, sp, #28
    9b38:	strd	r7, r5, [sp, #4]
    9b3c:	bl	995c <btrfs_match_dir_item_name@@Base+0xea>
    9b40:	cmn.w	r0, #4096	; 0x1000
    9b44:	mov	r9, r0
    9b46:	bls.n	9b7a <btrfs_insert_xattr_item@@Base+0xb2>
    9b48:	ldr	r3, [pc, #216]	; (9c24 <btrfs_insert_xattr_item@@Base+0x15c>)
    9b4a:	movs	r1, #1
    9b4c:	ldr	r2, [pc, #216]	; (9c28 <btrfs_insert_xattr_item@@Base+0x160>)
    9b4e:	ldr.w	r0, [fp, r3]
    9b52:	add	r2, pc
    9b54:	ldr	r3, [pc, #212]	; (9c2c <btrfs_insert_xattr_item@@Base+0x164>)
    9b56:	str	r1, [sp, #12]
    9b58:	add	r3, pc
    9b5a:	str	r3, [sp, #8]
    9b5c:	ldr	r3, [pc, #208]	; (9c30 <btrfs_insert_xattr_item@@Base+0x168>)
    9b5e:	add	r3, pc
    9b60:	adds	r3, #21
    9b62:	str	r3, [sp, #4]
    9b64:	movs	r3, #89	; 0x59
    9b66:	str	r3, [sp, #0]
    9b68:	ldr	r3, [pc, #200]	; (9c34 <btrfs_insert_xattr_item@@Base+0x16c>)
    9b6a:	ldr	r0, [r0, #0]
    9b6c:	add	r3, pc
    9b6e:	blx	881c <__fprintf_chk@plt+0x4>
    9b72:	bl	97c0 <_start@@Base+0x444>
    9b76:	blx	8948 <abort@plt>
    9b7a:	ldr	r0, [r6, #0]
    9b7c:	add	r1, sp, #48	; 0x30
    9b7e:	movs	r2, #0
    9b80:	movs	r3, #0
    9b82:	strd	r2, r3, [sp, #48]	; 0x30
    9b86:	movs	r3, #17
    9b88:	mov	r2, r9
    9b8a:	str	r0, [sp, #20]
    9b8c:	strb.w	r4, [sp, #57]	; 0x39
    9b90:	strb.w	r4, [sp, #58]	; 0x3a
    9b94:	strb.w	r4, [sp, #59]	; 0x3b
    9b98:	strb.w	r4, [sp, #60]	; 0x3c
    9b9c:	strb.w	r4, [sp, #61]	; 0x3d
    9ba0:	strb.w	r4, [sp, #62]	; 0x3e
    9ba4:	strb.w	r4, [sp, #63]	; 0x3f
    9ba8:	strb.w	r4, [sp, #64]	; 0x40
    9bac:	strb.w	r4, [sp, #56]	; 0x38
    9bb0:	bl	17330 <write_extent_buffer@@Base>
    9bb4:	ldr	r0, [sp, #20]
    9bb6:	movs	r2, #8
    9bb8:	mov	r1, r7
    9bba:	add.w	r3, r0, #96	; 0x60
    9bbe:	add	r3, r9
    9bc0:	strb	r2, [r3, #29]
    9bc2:	add.w	r2, r9, #30
    9bc6:	add.w	sl, r2, r5
    9bca:	strh.w	r5, [r3, #27]
    9bce:	strh.w	r8, [r3, #25]
    9bd2:	mov	r3, r5
    9bd4:	bl	17330 <write_extent_buffer@@Base>
    9bd8:	vmov	r1, s16
    9bdc:	mov	r3, r8
    9bde:	mov	r2, sl
    9be0:	ldr	r0, [sp, #20]
    9be2:	bl	17330 <write_extent_buffer@@Base>
    9be6:	ldr	r0, [r6, #0]
    9be8:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    9bec:	mov	r0, r6
    9bee:	bl	17e7e <btrfs_free_path@@Base>
    9bf2:	mov	r0, r4
    9bf4:	ldr	r2, [pc, #64]	; (9c38 <btrfs_insert_xattr_item@@Base+0x170>)
    9bf6:	ldr	r3, [pc, #40]	; (9c20 <btrfs_insert_xattr_item@@Base+0x158>)
    9bf8:	add	r2, pc
    9bfa:	ldr	r3, [r2, r3]
    9bfc:	ldr	r2, [r3, #0]
    9bfe:	ldr	r3, [sp, #68]	; 0x44
    9c00:	eors	r2, r3
    9c02:	beq.n	9c0e <btrfs_insert_xattr_item@@Base+0x146>
    9c04:	blx	84cc <__stack_chk_fail@plt>
    9c08:	mvn.w	r0, #11
    9c0c:	b.n	9bf4 <btrfs_insert_xattr_item@@Base+0x12c>
    9c0e:	add	sp, #76	; 0x4c
    9c10:	vpop	{d8}
    9c14:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9c18:	uxth	r2, r5
    9c1a:	movs	r5, r0
    9c1c:	uxth	r0, r3
    9c1e:	movs	r5, r0
    9c20:	lsls	r4, r4, #8
    9c22:	movs	r0, r0
    9c24:	lsls	r4, r6, #8
    9c26:	movs	r0, r0
    9c28:	vhadd.u<illegal width 64>	d0, d15, d2
    9c2c:	lsls	r6, r5, #23
    9c2e:	movs	r3, r0
    9c30:	lsls	r1, r7, #23
    9c32:	movs	r3, r0
    9c34:	lsls	r1, r6, #21
    9c36:	movs	r3, r0
    9c38:	cbz	r0, 9c60 <btrfs_insert_dir_item@@Base+0x24>
    9c3a:	movs	r5, r0

00009c3c <btrfs_insert_dir_item@@Base>:
    9c3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9c40:	sub	sp, #92	; 0x5c
    9c42:	mov	r5, r3
    9c44:	mov	r8, r2
    9c46:	ldr	r3, [sp, #144]	; 0x90
    9c48:	mov	sl, r0
    9c4a:	ldr	r2, [pc, #404]	; (9de0 <btrfs_insert_dir_item@@Base+0x1a4>)
    9c4c:	mov	r9, r1
    9c4e:	mvn.w	r0, #1
    9c52:	mov	r1, r8
    9c54:	str	r3, [sp, #24]
    9c56:	add	r2, pc
    9c58:	ldr	r3, [sp, #148]	; 0x94
    9c5a:	movs	r4, #0
    9c5c:	ldr	r6, [sp, #136]	; 0x88
    9c5e:	ldrb.w	fp, [sp, #140]	; 0x8c
    9c62:	str	r3, [sp, #28]
    9c64:	ldr	r3, [pc, #380]	; (9de4 <btrfs_insert_dir_item@@Base+0x1a8>)
    9c66:	ldr	r3, [r2, r3]
    9c68:	mov	r2, r5
    9c6a:	ldr	r3, [r3, #0]
    9c6c:	str	r3, [sp, #84]	; 0x54
    9c6e:	mov.w	r3, #0
    9c72:	ldr	r3, [sp, #128]	; 0x80
    9c74:	str	r3, [sp, #44]	; 0x2c
    9c76:	ldr	r3, [sp, #132]	; 0x84
    9c78:	str	r3, [sp, #48]	; 0x30
    9c7a:	movs	r3, #84	; 0x54
    9c7c:	strb.w	r3, [sp, #52]	; 0x34
    9c80:	bl	173fa <crc32c_le@@Base>
    9c84:	str.w	r4, [sp, #57]	; 0x39
    9c88:	str.w	r0, [sp, #53]	; 0x35
    9c8c:	bl	17e50 <btrfs_alloc_path@@Base>
    9c90:	mov	r7, r0
    9c92:	cmp	r0, #0
    9c94:	beq.w	9dd2 <btrfs_insert_dir_item@@Base+0x196>
    9c98:	add.w	r3, r5, #30
    9c9c:	mov	r2, r0
    9c9e:	str	r3, [sp, #20]
    9ca0:	mov	r1, r9
    9ca2:	str	r3, [sp, #0]
    9ca4:	mov	r0, sl
    9ca6:	add	r3, sp, #44	; 0x2c
    9ca8:	strd	r8, r5, [sp, #4]
    9cac:	bl	995c <btrfs_match_dir_item_name@@Base+0xea>
    9cb0:	cmn.w	r0, #4096	; 0x1000
    9cb4:	mov	r2, r0
    9cb6:	bls.n	9ce0 <btrfs_insert_dir_item@@Base+0xa4>
    9cb8:	cmn.w	r0, #17
    9cbc:	beq.n	9d32 <btrfs_insert_dir_item@@Base+0xf6>
    9cbe:	mov	r5, r0
    9cc0:	mov	r0, r7
    9cc2:	cmp	r5, #0
    9cc4:	it	ne
    9cc6:	movne	r4, r5
    9cc8:	bl	17e7e <btrfs_free_path@@Base>
    9ccc:	ldr	r2, [pc, #280]	; (9de8 <btrfs_insert_dir_item@@Base+0x1ac>)
    9cce:	ldr	r3, [pc, #276]	; (9de4 <btrfs_insert_dir_item@@Base+0x1a8>)
    9cd0:	add	r2, pc
    9cd2:	ldr	r3, [r2, r3]
    9cd4:	ldr	r2, [r3, #0]
    9cd6:	ldr	r3, [sp, #84]	; 0x54
    9cd8:	eors	r2, r3
    9cda:	beq.n	9dd8 <btrfs_insert_dir_item@@Base+0x19c>
    9cdc:	blx	84cc <__stack_chk_fail@plt>
    9ce0:	ldr.w	r3, [r6, #13]
    9ce4:	ldr.w	r1, [r6, #9]
    9ce8:	ldr	r0, [r7, #0]
    9cea:	str.w	r3, [sp, #77]	; 0x4d
    9cee:	ldrb	r3, [r6, #8]
    9cf0:	str.w	r1, [sp, #73]	; 0x49
    9cf4:	ldr	r1, [r6, #0]
    9cf6:	strb.w	r3, [sp, #72]	; 0x48
    9cfa:	ldr	r3, [r6, #4]
    9cfc:	str	r2, [sp, #36]	; 0x24
    9cfe:	str	r0, [sp, #32]
    9d00:	strd	r1, r3, [sp, #64]	; 0x40
    9d04:	add	r1, sp, #64	; 0x40
    9d06:	movs	r3, #17
    9d08:	bl	17330 <write_extent_buffer@@Base>
    9d0c:	ldr	r0, [sp, #32]
    9d0e:	ldr	r2, [sp, #36]	; 0x24
    9d10:	mov	r1, r8
    9d12:	add.w	r3, r0, #96	; 0x60
    9d16:	add	r3, r2
    9d18:	adds	r2, #30
    9d1a:	strb.w	fp, [r3, #29]
    9d1e:	strb	r4, [r3, #25]
    9d20:	strb	r4, [r3, #26]
    9d22:	strh.w	r5, [r3, #27]
    9d26:	mov	r3, r5
    9d28:	bl	17330 <write_extent_buffer@@Base>
    9d2c:	ldr	r0, [sp, #32]
    9d2e:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    9d32:	ldr.w	r3, [r9, #464]	; 0x1d0
    9d36:	ldr	r3, [r3, #28]
    9d38:	cmp	r3, r9
    9d3a:	beq.n	9dcc <btrfs_insert_dir_item@@Base+0x190>
    9d3c:	mov	r0, r7
    9d3e:	bl	17e58 <btrfs_release_path@@Base>
    9d42:	movs	r3, #96	; 0x60
    9d44:	strb.w	r3, [sp, #52]	; 0x34
    9d48:	mov	r1, r9
    9d4a:	ldr	r3, [sp, #24]
    9d4c:	mov	r2, r7
    9d4e:	mov	r0, sl
    9d50:	strd	r8, r5, [sp, #4]
    9d54:	str.w	r3, [sp, #53]	; 0x35
    9d58:	ldr	r3, [sp, #28]
    9d5a:	str.w	r3, [sp, #57]	; 0x39
    9d5e:	ldr	r3, [sp, #20]
    9d60:	str	r3, [sp, #0]
    9d62:	add	r3, sp, #44	; 0x2c
    9d64:	bl	995c <btrfs_match_dir_item_name@@Base+0xea>
    9d68:	cmn.w	r0, #4096	; 0x1000
    9d6c:	mov	r9, r0
    9d6e:	bls.n	9d76 <btrfs_insert_dir_item@@Base+0x13a>
    9d70:	mov	r4, r0
    9d72:	movs	r5, #0
    9d74:	b.n	9cc0 <btrfs_insert_dir_item@@Base+0x84>
    9d76:	ldr.w	r3, [r6, #13]
    9d7a:	add	r1, sp, #64	; 0x40
    9d7c:	ldr	r0, [r7, #0]
    9d7e:	movs	r4, #0
    9d80:	ldr.w	r2, [r6, #9]
    9d84:	str.w	r3, [sp, #77]	; 0x4d
    9d88:	ldrb	r3, [r6, #8]
    9d8a:	str.w	r2, [sp, #73]	; 0x49
    9d8e:	ldr	r2, [r6, #0]
    9d90:	strb.w	r3, [sp, #72]	; 0x48
    9d94:	ldr	r3, [r6, #4]
    9d96:	str	r0, [sp, #20]
    9d98:	strd	r2, r3, [sp, #64]	; 0x40
    9d9c:	mov	r2, r9
    9d9e:	movs	r3, #17
    9da0:	bl	17330 <write_extent_buffer@@Base>
    9da4:	ldr	r0, [sp, #20]
    9da6:	add.w	r2, r9, #30
    9daa:	mov	r1, r8
    9dac:	add.w	r3, r0, #96	; 0x60
    9db0:	add	r3, r9
    9db2:	strb.w	fp, [r3, #29]
    9db6:	strb	r4, [r3, #25]
    9db8:	strb	r4, [r3, #26]
    9dba:	strh.w	r5, [r3, #27]
    9dbe:	mov	r3, r5
    9dc0:	bl	17330 <write_extent_buffer@@Base>
    9dc4:	ldr	r0, [sp, #20]
    9dc6:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    9dca:	b.n	9d72 <btrfs_insert_dir_item@@Base+0x136>
    9dcc:	movs	r4, #0
    9dce:	mov	r5, r4
    9dd0:	b.n	9cc0 <btrfs_insert_dir_item@@Base+0x84>
    9dd2:	mvn.w	r4, #11
    9dd6:	b.n	9ccc <btrfs_insert_dir_item@@Base+0x90>
    9dd8:	mov	r0, r4
    9dda:	add	sp, #92	; 0x5c
    9ddc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9de0:	cbz	r2, 9df0 <btrfs_lookup_dir_item@@Base+0x4>
    9de2:	movs	r5, r0
    9de4:	lsls	r4, r4, #8
    9de6:	movs	r0, r0
    9de8:	sub	sp, #224	; 0xe0
    9dea:	movs	r5, r0

00009dec <btrfs_lookup_dir_item@@Base>:
    9dec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9df0:	mov	r4, r2
    9df2:	sub	sp, #60	; 0x3c
    9df4:	ldr	r2, [pc, #208]	; (9ec8 <btrfs_lookup_dir_item@@Base+0xdc>)
    9df6:	ldr	r3, [pc, #212]	; (9ecc <btrfs_lookup_dir_item@@Base+0xe0>)
    9df8:	mov	fp, r0
    9dfa:	ldrd	r8, r9, [sp, #104]	; 0x68
    9dfe:	add	r2, pc
    9e00:	ldrd	r6, r7, [sp, #96]	; 0x60
    9e04:	mov	r5, r1
    9e06:	ldr	r3, [r2, r3]
    9e08:	mvn.w	r0, #1
    9e0c:	mov	r1, r8
    9e0e:	mov	r2, r9
    9e10:	ldr	r3, [r3, #0]
    9e12:	str	r3, [sp, #52]	; 0x34
    9e14:	mov.w	r3, #0
    9e18:	ldr.w	sl, [sp, #112]	; 0x70
    9e1c:	movs	r3, #84	; 0x54
    9e1e:	strd	r6, r7, [sp, #12]
    9e22:	strb.w	r3, [sp, #20]
    9e26:	bl	173fa <crc32c_le@@Base>
    9e2a:	movs	r3, #0
    9e2c:	str.w	r3, [sp, #25]
    9e30:	subs.w	r3, sl, r3
    9e34:	add	r2, sp, #12
    9e36:	mov	r1, r5
    9e38:	it	ne
    9e3a:	movne	r3, #1
    9e3c:	str	r3, [sp, #4]
    9e3e:	mov.w	r3, sl, asr #31
    9e42:	str	r3, [sp, #0]
    9e44:	mov	r3, r4
    9e46:	str.w	r0, [sp, #21]
    9e4a:	mov	r0, fp
    9e4c:	bl	1a23c <btrfs_search_slot@@Base>
    9e50:	cmp	r0, #0
    9e52:	blt.n	9e5c <btrfs_lookup_dir_item@@Base+0x70>
    9e54:	beq.n	9e74 <btrfs_lookup_dir_item@@Base+0x88>
    9e56:	ldr	r3, [r4, #32]
    9e58:	cbnz	r3, 9e70 <btrfs_lookup_dir_item@@Base+0x84>
    9e5a:	movs	r0, #0
    9e5c:	ldr	r2, [pc, #112]	; (9ed0 <btrfs_lookup_dir_item@@Base+0xe4>)
    9e5e:	ldr	r3, [pc, #108]	; (9ecc <btrfs_lookup_dir_item@@Base+0xe0>)
    9e60:	add	r2, pc
    9e62:	ldr	r3, [r2, r3]
    9e64:	ldr	r2, [r3, #0]
    9e66:	ldr	r3, [sp, #52]	; 0x34
    9e68:	eors	r2, r3
    9e6a:	beq.n	9ec2 <btrfs_lookup_dir_item@@Base+0xd6>
    9e6c:	blx	84cc <__stack_chk_fail@plt>
    9e70:	subs	r3, #1
    9e72:	str	r3, [r4, #32]
    9e74:	ldr	r3, [r4, #32]
    9e76:	movs	r2, #25
    9e78:	ldr	r0, [r4, #0]
    9e7a:	add	r1, sp, #32
    9e7c:	muls	r2, r3
    9e7e:	movs	r3, #17
    9e80:	adds	r2, #101	; 0x65
    9e82:	bl	1731a <read_extent_buffer@@Base>
    9e86:	ldrd	r2, r3, [sp, #32]
    9e8a:	ldr.w	r0, [sp, #41]	; 0x29
    9e8e:	cmp	r7, r3
    9e90:	ldr.w	r1, [sp, #45]	; 0x2d
    9e94:	it	eq
    9e96:	cmpeq	r6, r2
    9e98:	ldrb.w	ip, [sp, #40]	; 0x28
    9e9c:	bne.n	9e5a <btrfs_lookup_dir_item@@Base+0x6e>
    9e9e:	cmp.w	ip, #84	; 0x54
    9ea2:	bne.n	9e5a <btrfs_lookup_dir_item@@Base+0x6e>
    9ea4:	ldr.w	r3, [sp, #25]
    9ea8:	ldr.w	r2, [sp, #21]
    9eac:	cmp	r3, r1
    9eae:	it	eq
    9eb0:	cmpeq	r2, r0
    9eb2:	bne.n	9e5a <btrfs_lookup_dir_item@@Base+0x6e>
    9eb4:	mov	r3, r9
    9eb6:	mov	r2, r8
    9eb8:	mov	r1, r4
    9eba:	mov	r0, r5
    9ebc:	bl	9872 <btrfs_match_dir_item_name@@Base>
    9ec0:	b.n	9e5c <btrfs_lookup_dir_item@@Base+0x70>
    9ec2:	add	sp, #60	; 0x3c
    9ec4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    9ec8:	add	r7, sp, #552	; 0x228
    9eca:	movs	r5, r0
    9ecc:	lsls	r4, r4, #8
    9ece:	movs	r0, r0
    9ed0:	add	r7, sp, #160	; 0xa0
    9ed2:	movs	r5, r0

00009ed4 <btrfs_lookup_dir_index@@Base>:
    9ed4:	ldr.w	ip, [pc, #128]	; 9f58 <btrfs_lookup_dir_index@@Base+0x84>
    9ed8:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    9edc:	mov	r4, r2
    9ede:	ldr	r2, [pc, #124]	; (9f5c <btrfs_lookup_dir_index@@Base+0x88>)
    9ee0:	add	ip, pc
    9ee2:	sub	sp, #32
    9ee4:	mov	r5, r1
    9ee6:	ldr.w	r2, [ip, r2]
    9eea:	ldr	r3, [sp, #80]	; 0x50
    9eec:	ldr	r2, [r2, #0]
    9eee:	str	r2, [sp, #28]
    9ef0:	mov.w	r2, #0
    9ef4:	movs	r2, #96	; 0x60
    9ef6:	strb.w	r2, [sp, #16]
    9efa:	ldr	r2, [sp, #72]	; 0x48
    9efc:	ldrd	r8, r9, [sp, #56]	; 0x38
    9f00:	ldr	r6, [sp, #64]	; 0x40
    9f02:	str.w	r2, [sp, #17]
    9f06:	ldr	r2, [sp, #76]	; 0x4c
    9f08:	strd	r8, r9, [sp, #8]
    9f0c:	str.w	r2, [sp, #21]
    9f10:	subs	r2, r3, #0
    9f12:	mov.w	r3, r3, asr #31
    9f16:	str	r3, [sp, #0]
    9f18:	it	ne
    9f1a:	movne	r2, #1
    9f1c:	mov	r3, r4
    9f1e:	str	r2, [sp, #4]
    9f20:	add	r2, sp, #8
    9f22:	bl	1a23c <btrfs_search_slot@@Base>
    9f26:	cmp	r0, #0
    9f28:	blt.n	9f38 <btrfs_lookup_dir_index@@Base+0x64>
    9f2a:	bne.n	9f4c <btrfs_lookup_dir_index@@Base+0x78>
    9f2c:	ldr	r3, [sp, #68]	; 0x44
    9f2e:	mov	r2, r6
    9f30:	mov	r1, r4
    9f32:	mov	r0, r5
    9f34:	bl	9872 <btrfs_match_dir_item_name@@Base>
    9f38:	ldr	r2, [pc, #36]	; (9f60 <btrfs_lookup_dir_index@@Base+0x8c>)
    9f3a:	ldr	r3, [pc, #32]	; (9f5c <btrfs_lookup_dir_index@@Base+0x88>)
    9f3c:	add	r2, pc
    9f3e:	ldr	r3, [r2, r3]
    9f40:	ldr	r2, [r3, #0]
    9f42:	ldr	r3, [sp, #28]
    9f44:	eors	r2, r3
    9f46:	beq.n	9f52 <btrfs_lookup_dir_index@@Base+0x7e>
    9f48:	blx	84cc <__stack_chk_fail@plt>
    9f4c:	mvn.w	r0, #1
    9f50:	b.n	9f38 <btrfs_lookup_dir_index@@Base+0x64>
    9f52:	add	sp, #32
    9f54:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    9f58:	add	r6, sp, #672	; 0x2a0
    9f5a:	movs	r5, r0
    9f5c:	lsls	r4, r4, #8
    9f5e:	movs	r0, r0
    9f60:	add	r6, sp, #304	; 0x130
    9f62:	movs	r5, r0

00009f64 <btrfs_find_free_objectid@@Base>:
    9f64:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9f68:	mov	sl, r0
    9f6a:	vpush	{d8}
    9f6e:	mov	r5, r1
    9f70:	ldr	r3, [pc, #444]	; (a130 <btrfs_find_free_objectid@@Base+0x1cc>)
    9f72:	ldr	r2, [pc, #448]	; (a134 <btrfs_find_free_objectid@@Base+0x1d0>)
    9f74:	add	r3, pc
    9f76:	sub	sp, #140	; 0x8c
    9f78:	add	r2, pc
    9f7a:	str	r3, [sp, #20]
    9f7c:	ldr	r3, [pc, #440]	; (a138 <btrfs_find_free_objectid@@Base+0x1d4>)
    9f7e:	ldr.w	r8, [sp, #184]	; 0xb8
    9f82:	ldr	r3, [r2, r3]
    9f84:	ldr	r3, [r3, #0]
    9f86:	str	r3, [sp, #132]	; 0x84
    9f88:	mov.w	r3, #0
    9f8c:	bl	17e50 <btrfs_alloc_path@@Base>
    9f90:	mov	r4, r0
    9f92:	cmp	r0, #0
    9f94:	beq.w	a11a <btrfs_find_free_objectid@@Base+0x1b6>
    9f98:	ldrd	r6, r7, [r5, #504]	; 0x1f8
    9f9c:	mov.w	r9, #0
    9fa0:	strb.w	r9, [sp, #37]	; 0x25
    9fa4:	cmp	r7, #0
    9fa6:	strb.w	r9, [sp, #38]	; 0x26
    9faa:	it	eq
    9fac:	cmpeq.w	r6, #256	; 0x100
    9fb0:	strb.w	r9, [sp, #39]	; 0x27
    9fb4:	strb.w	r9, [sp, #40]	; 0x28
    9fb8:	itt	cc
    9fba:	movcc.w	r6, #256	; 0x100
    9fbe:	movcc	r7, #0
    9fc0:	strb.w	r9, [sp, #41]	; 0x29
    9fc4:	strd	r6, r7, [sp, #28]
    9fc8:	strb.w	r9, [sp, #42]	; 0x2a
    9fcc:	strb.w	r9, [sp, #43]	; 0x2b
    9fd0:	strb.w	r9, [sp, #44]	; 0x2c
    9fd4:	strb.w	r9, [sp, #36]	; 0x24
    9fd8:	bl	17e48 <btrfs_init_path@@Base>
    9fdc:	mov	r3, r4
    9fde:	add	r2, sp, #28
    9fe0:	mov	r1, r5
    9fe2:	mov	r0, sl
    9fe4:	strd	r9, r9, [sp]
    9fe8:	bl	1a23c <btrfs_search_slot@@Base>
    9fec:	subs	r3, r0, #0
    9fee:	blt.w	a0fc <btrfs_find_free_objectid@@Base+0x198>
    9ff2:	ldr	r3, [r4, #32]
    9ff4:	cmp	r3, r9
    9ff6:	mov.w	r9, #0
    9ffa:	itt	gt
    9ffc:	addgt.w	r3, r3, #4294967295	; 0xffffffff
    a000:	strgt	r3, [r4, #32]
    a002:	add	r3, sp, #48	; 0x30
    a004:	mov	fp, r9
    a006:	mov	sl, r9
    a008:	vmov	s16, r3
    a00c:	ldr	r0, [r4, #0]
    a00e:	ldr	r2, [r4, #32]
    a010:	ldr.w	r3, [r0, #192]	; 0xc0
    a014:	cmp	r2, r3
    a016:	bcc.n	a0a8 <btrfs_find_free_objectid@@Base+0x144>
    a018:	movs	r3, #0
    a01a:	mov	r1, r4
    a01c:	strb.w	r3, [r4, #65]	; 0x41
    a020:	ldr.w	r0, [r5, #464]	; 0x1d0
    a024:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    a028:	subs	r3, r0, #0
    a02a:	beq.n	a00c <btrfs_find_free_objectid@@Base+0xa8>
    a02c:	blt.n	a0fc <btrfs_find_free_objectid@@Base+0x198>
    a02e:	cmp.w	r9, #0
    a032:	bne.n	a092 <btrfs_find_free_objectid@@Base+0x12e>
    a034:	strd	r6, r7, [r8]
    a038:	ldrd	r2, r3, [r8]
    a03c:	mov	r0, r4
    a03e:	strd	r2, r3, [r5, #504]	; 0x1f8
    a042:	bl	17e7e <btrfs_free_path@@Base>
    a046:	ldrd	r2, r3, [r8]
    a04a:	cmp	r3, r7
    a04c:	it	eq
    a04e:	cmpeq	r2, r6
    a050:	bcs.n	a120 <btrfs_find_free_objectid@@Base+0x1bc>
    a052:	ldr	r2, [sp, #20]
    a054:	add	r4, sp, #68	; 0x44
    a056:	ldr	r3, [pc, #228]	; (a13c <btrfs_find_free_objectid@@Base+0x1d8>)
    a058:	movs	r1, #1
    a05a:	ldr	r0, [r2, r3]
    a05c:	ldr	r3, [pc, #224]	; (a140 <btrfs_find_free_objectid@@Base+0x1dc>)
    a05e:	ldr	r2, [pc, #228]	; (a144 <btrfs_find_free_objectid@@Base+0x1e0>)
    a060:	add	r3, pc
    a062:	str	r3, [sp, #8]
    a064:	ldr	r3, [pc, #224]	; (a148 <btrfs_find_free_objectid@@Base+0x1e4>)
    a066:	add	r2, pc
    a068:	str	r1, [sp, #12]
    a06a:	add	r3, pc
    a06c:	str	r3, [sp, #4]
    a06e:	movs	r3, #98	; 0x62
    a070:	str	r3, [sp, #0]
    a072:	ldr	r3, [pc, #216]	; (a14c <btrfs_find_free_objectid@@Base+0x1e8>)
    a074:	ldr	r0, [r0, #0]
    a076:	add	r3, pc
    a078:	blx	881c <__fprintf_chk@plt+0x4>
    a07c:	movs	r1, #16
    a07e:	mov	r0, r4
    a080:	blx	8680 <backtrace@plt>
    a084:	movs	r2, #2
    a086:	mov	r1, r0
    a088:	mov	r0, r4
    a08a:	blx	8990 <backtrace_symbols_fd@plt>
    a08e:	blx	8948 <abort@plt>
    a092:	cmp	sl, r7
    a094:	mov	r2, fp
    a096:	it	eq
    a098:	cmpeq	fp, r6
    a09a:	mov	r3, sl
    a09c:	itt	cc
    a09e:	movcc	r2, r6
    a0a0:	movcc	r3, r7
    a0a2:	strd	r2, r3, [r8]
    a0a6:	b.n	a038 <btrfs_find_free_objectid@@Base+0xd4>
    a0a8:	movs	r3, #25
    a0aa:	vmov	r1, s16
    a0ae:	muls	r2, r3
    a0b0:	movs	r3, #17
    a0b2:	adds	r2, #101	; 0x65
    a0b4:	bl	1731a <read_extent_buffer@@Base>
    a0b8:	ldrd	r2, r3, [sp, #48]	; 0x30
    a0bc:	cmp	r3, r7
    a0be:	it	eq
    a0c0:	cmpeq	r2, r6
    a0c2:	bcc.n	a0e8 <btrfs_find_free_objectid@@Base+0x184>
    a0c4:	cmp.w	r9, #0
    a0c8:	beq.n	a0e8 <btrfs_find_free_objectid@@Base+0x184>
    a0ca:	cmp	sl, r7
    a0cc:	mov	r0, fp
    a0ce:	it	eq
    a0d0:	cmpeq	fp, r6
    a0d2:	mov	r1, sl
    a0d4:	itt	cc
    a0d6:	movcc	r0, r6
    a0d8:	movcc	r1, r7
    a0da:	cmp	r1, r3
    a0dc:	it	eq
    a0de:	cmpeq	r0, r2
    a0e0:	bcs.n	a0e8 <btrfs_find_free_objectid@@Base+0x184>
    a0e2:	strd	r0, r1, [r8]
    a0e6:	b.n	a038 <btrfs_find_free_objectid@@Base+0xd4>
    a0e8:	adds.w	fp, r2, #1
    a0ec:	mov.w	r9, #1
    a0f0:	adc.w	sl, r3, #0
    a0f4:	ldr	r3, [r4, #32]
    a0f6:	adds	r3, #1
    a0f8:	str	r3, [r4, #32]
    a0fa:	b.n	a00c <btrfs_find_free_objectid@@Base+0xa8>
    a0fc:	mov	r0, r4
    a0fe:	str	r3, [sp, #20]
    a100:	bl	17e7e <btrfs_free_path@@Base>
    a104:	ldr	r3, [sp, #20]
    a106:	ldr	r1, [pc, #72]	; (a150 <btrfs_find_free_objectid@@Base+0x1ec>)
    a108:	ldr	r2, [pc, #44]	; (a138 <btrfs_find_free_objectid@@Base+0x1d4>)
    a10a:	add	r1, pc
    a10c:	ldr	r2, [r1, r2]
    a10e:	ldr	r1, [r2, #0]
    a110:	ldr	r2, [sp, #132]	; 0x84
    a112:	eors	r1, r2
    a114:	beq.n	a124 <btrfs_find_free_objectid@@Base+0x1c0>
    a116:	blx	84cc <__stack_chk_fail@plt>
    a11a:	mvn.w	r3, #11
    a11e:	b.n	a106 <btrfs_find_free_objectid@@Base+0x1a2>
    a120:	movs	r3, #0
    a122:	b.n	a106 <btrfs_find_free_objectid@@Base+0x1a2>
    a124:	mov	r0, r3
    a126:	add	sp, #140	; 0x8c
    a128:	vpop	{d8}
    a12c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a130:	add	r6, sp, #80	; 0x50
    a132:	movs	r5, r0
    a134:	add	r6, sp, #64	; 0x40
    a136:	movs	r5, r0
    a138:	lsls	r4, r4, #8
    a13a:	movs	r0, r0
    a13c:	lsls	r4, r6, #8
    a13e:	movs	r0, r0
    a140:	lsls	r0, r6, #4
    a142:	movs	r3, r0
    a144:			; <UNDEFINED> instruction: 0xfa2b0002
    a148:	lsls	r7, r7, #4
    a14a:	movs	r3, r0
    a14c:	lsls	r6, r1, #4
    a14e:	movs	r3, r0
    a150:	add	r4, sp, #504	; 0x1f8
    a152:	movs	r5, r0
    a154:	push	{r4, r5, lr}
    a156:	ldrd	r4, r5, [r0, #40]	; 0x28
    a15a:	ldrd	r0, r1, [r1, #40]	; 0x28
    a15e:	cmp	r1, r5
    a160:	it	eq
    a162:	cmpeq	r0, r4
    a164:	bcc.n	a17a <btrfs_find_free_objectid@@Base+0x216>
    a166:	cmp	r5, r1
    a168:	it	eq
    a16a:	cmpeq	r4, r0
    a16c:	ite	cc
    a16e:	movcc.w	r0, #4294967295	; 0xffffffff
    a172:	movcs	r0, #0
    a174:	cbz	r2, a178 <btrfs_find_free_objectid@@Base+0x214>
    a176:	negs	r0, r0
    a178:	pop	{r4, r5, pc}
    a17a:	movs	r0, #1
    a17c:	b.n	a174 <btrfs_find_free_objectid@@Base+0x210>
    a17e:	push	{r4, r5, lr}
    a180:	ldrd	r4, r5, [r0, #56]	; 0x38
    a184:	ldrd	r0, r1, [r1, #56]	; 0x38
    a188:	cmp	r1, r5
    a18a:	it	eq
    a18c:	cmpeq	r0, r4
    a18e:	bcc.n	a1a4 <btrfs_find_free_objectid@@Base+0x240>
    a190:	cmp	r5, r1
    a192:	it	eq
    a194:	cmpeq	r4, r0
    a196:	ite	cc
    a198:	movcc.w	r0, #4294967295	; 0xffffffff
    a19c:	movcs	r0, #0
    a19e:	cbz	r2, a1a2 <btrfs_find_free_objectid@@Base+0x23e>
    a1a0:	negs	r0, r0
    a1a2:	pop	{r4, r5, pc}
    a1a4:	movs	r0, #1
    a1a6:	b.n	a19e <btrfs_find_free_objectid@@Base+0x23a>
    a1a8:	push	{r4, r5, lr}
    a1aa:	ldrd	r4, r5, [r0, #72]	; 0x48
    a1ae:	ldrd	r0, r1, [r1, #72]	; 0x48
    a1b2:	cmp	r1, r5
    a1b4:	it	eq
    a1b6:	cmpeq	r0, r4
    a1b8:	bcc.n	a1ce <btrfs_find_free_objectid@@Base+0x26a>
    a1ba:	cmp	r5, r1
    a1bc:	it	eq
    a1be:	cmpeq	r4, r0
    a1c0:	ite	cc
    a1c2:	movcc.w	r0, #4294967295	; 0xffffffff
    a1c6:	movcs	r0, #0
    a1c8:	cbz	r2, a1cc <btrfs_find_free_objectid@@Base+0x268>
    a1ca:	negs	r0, r0
    a1cc:	pop	{r4, r5, pc}
    a1ce:	movs	r0, #1
    a1d0:	b.n	a1c8 <btrfs_find_free_objectid@@Base+0x264>
    a1d2:	push	{r4, r5, lr}
    a1d4:	ldrd	r4, r5, [r0, #96]	; 0x60
    a1d8:	ldrd	r0, r1, [r1, #96]	; 0x60
    a1dc:	cmp	r1, r5
    a1de:	it	eq
    a1e0:	cmpeq	r0, r4
    a1e2:	bcc.n	a1f8 <btrfs_find_free_objectid@@Base+0x294>
    a1e4:	cmp	r5, r1
    a1e6:	it	eq
    a1e8:	cmpeq	r4, r0
    a1ea:	ite	cc
    a1ec:	movcc.w	r0, #4294967295	; 0xffffffff
    a1f0:	movcs	r0, #0
    a1f2:	cbz	r2, a1f6 <btrfs_find_free_objectid@@Base+0x292>
    a1f4:	negs	r0, r0
    a1f6:	pop	{r4, r5, pc}
    a1f8:	movs	r0, #1
    a1fa:	b.n	a1f2 <btrfs_find_free_objectid@@Base+0x28e>
    a1fc:	push	{r4, r5, lr}
    a1fe:	ldrd	r4, r5, [r0, #104]	; 0x68
    a202:	ldrd	r0, r1, [r1, #104]	; 0x68
    a206:	cmp	r1, r5
    a208:	it	eq
    a20a:	cmpeq	r0, r4
    a20c:	bcc.n	a222 <btrfs_find_free_objectid@@Base+0x2be>
    a20e:	cmp	r5, r1
    a210:	it	eq
    a212:	cmpeq	r4, r0
    a214:	ite	cc
    a216:	movcc.w	r0, #4294967295	; 0xffffffff
    a21a:	movcs	r0, #0
    a21c:	cbz	r2, a220 <btrfs_find_free_objectid@@Base+0x2bc>
    a21e:	negs	r0, r0
    a220:	pop	{r4, r5, pc}
    a222:	movs	r0, #1
    a224:	b.n	a21c <btrfs_find_free_objectid@@Base+0x2b8>
    a226:	push	{r4, r5, lr}
    a228:	mov	r4, r2
    a22a:	mov	r5, r3
    a22c:	orrs.w	r3, r4, r5
    a230:	beq.n	a246 <btrfs_find_free_objectid@@Base+0x2e2>
    a232:	ldrd	r4, r5, [r2, #40]	; 0x28
    a236:	ldrd	r2, r3, [r0, #40]	; 0x28
    a23a:	cmp	r5, r3
    a23c:	itte	eq
    a23e:	cmpeq	r4, r2
    a240:	moveq	r0, #1
    a242:	movne	r0, #0
    a244:	pop	{r4, r5, pc}
    a246:	movs	r0, #0
    a248:	b.n	a244 <btrfs_find_free_objectid@@Base+0x2e0>
    a24a:	push	{r3, r4, r5, lr}
    a24c:	mov	r2, r0
    a24e:	mov	r3, r1
    a250:	mov	r5, r0
    a252:	movs	r1, #0
    a254:	ldr	r4, [r2, #0]
    a256:	cbnz	r4, a26e <btrfs_find_free_objectid@@Base+0x30a>
    a258:	add.w	r0, r3, #24
    a25c:	strd	r1, r4, [r3, #24]
    a260:	str	r4, [r3, #32]
    a262:	mov	r1, r5
    a264:	str	r0, [r2, #0]
    a266:	bl	13b2a <rb_insert_color@@Base>
    a26a:	mov	r0, r4
    a26c:	pop	{r3, r4, r5, pc}
    a26e:	sub.w	r1, r4, #24
    a272:	movs	r2, #0
    a274:	mov	r0, r3
    a276:	bl	a154 <btrfs_find_free_objectid@@Base+0x1f0>
    a27a:	cmp	r0, #0
    a27c:	bge.n	a286 <btrfs_find_free_objectid@@Base+0x322>
    a27e:	add.w	r2, r4, #8
    a282:	mov	r1, r4
    a284:	b.n	a254 <btrfs_find_free_objectid@@Base+0x2f0>
    a286:	beq.n	a28c <btrfs_find_free_objectid@@Base+0x328>
    a288:	adds	r2, r4, #4
    a28a:	b.n	a282 <btrfs_find_free_objectid@@Base+0x31e>
    a28c:	mvn.w	r0, #16
    a290:	b.n	a26c <btrfs_find_free_objectid@@Base+0x308>
    a292:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}
    a296:	mov	r5, r0
    a298:	mov	r0, r2
    a29a:	ldr	r2, [pc, #144]	; (a32c <btrfs_find_free_objectid@@Base+0x3c8>)
    a29c:	mov	r1, r3
    a29e:	ldr	r3, [pc, #144]	; (a330 <btrfs_find_free_objectid@@Base+0x3cc>)
    a2a0:	add	r2, pc
    a2a2:	ldr	r3, [r2, r3]
    a2a4:	ldr	r3, [r3, #0]
    a2a6:	str	r3, [sp, #4]
    a2a8:	mov.w	r3, #0
    a2ac:	orrs.w	r3, r0, r1
    a2b0:	bne.n	a2c8 <btrfs_find_free_objectid@@Base+0x364>
    a2b2:	movs	r0, #0
    a2b4:	ldr	r2, [pc, #124]	; (a334 <btrfs_find_free_objectid@@Base+0x3d0>)
    a2b6:	ldr	r3, [pc, #120]	; (a330 <btrfs_find_free_objectid@@Base+0x3cc>)
    a2b8:	add	r2, pc
    a2ba:	ldr	r3, [r2, r3]
    a2bc:	ldr	r2, [r3, #0]
    a2be:	ldr	r3, [sp, #4]
    a2c0:	eors	r2, r3
    a2c2:	beq.n	a326 <btrfs_find_free_objectid@@Base+0x3c2>
    a2c4:	blx	84cc <__stack_chk_fail@plt>
    a2c8:	ldrd	r2, r3, [r5, #40]	; 0x28
    a2cc:	ldrd	r6, r7, [r0, #40]	; 0x28
    a2d0:	cmp	r3, r7
    a2d2:	it	eq
    a2d4:	cmpeq	r2, r6
    a2d6:	bne.n	a2dc <btrfs_find_free_objectid@@Base+0x378>
    a2d8:	movs	r0, #1
    a2da:	b.n	a2b4 <btrfs_find_free_objectid@@Base+0x350>
    a2dc:	mov	r8, sp
    a2de:	mov	r1, r0
    a2e0:	mov	r0, r8
    a2e2:	movs	r3, #0
    a2e4:	str	r3, [sp, #0]
    a2e6:	bl	a24a <btrfs_find_free_objectid@@Base+0x2e6>
    a2ea:	mov	r0, r8
    a2ec:	bl	13e46 <rb_first@@Base>
    a2f0:	mov	r4, r0
    a2f2:	cmp	r0, #0
    a2f4:	beq.n	a2b2 <btrfs_find_free_objectid@@Base+0x34e>
    a2f6:	ldr	r6, [r4, #104]	; 0x68
    a2f8:	add.w	sl, r4, #104	; 0x68
    a2fc:	cmp	sl, r6
    a2fe:	bne.n	a30a <btrfs_find_free_objectid@@Base+0x3a6>
    a300:	mov	r1, r8
    a302:	mov	r0, r4
    a304:	bl	13bd0 <rb_erase@@Base>
    a308:	b.n	a2ea <btrfs_find_free_objectid@@Base+0x386>
    a30a:	ldr	r1, [r6, #16]
    a30c:	ldrd	r2, r3, [r5, #40]	; 0x28
    a310:	ldrd	fp, ip, [r1, #40]	; 0x28
    a314:	cmp	ip, r3
    a316:	it	eq
    a318:	cmpeq	fp, r2
    a31a:	beq.n	a2d8 <btrfs_find_free_objectid@@Base+0x374>
    a31c:	mov	r0, r8
    a31e:	bl	a24a <btrfs_find_free_objectid@@Base+0x2e6>
    a322:	ldr	r6, [r6, #0]
    a324:	b.n	a2fc <btrfs_find_free_objectid@@Base+0x398>
    a326:	add	sp, #8
    a328:	ldmia.w	sp!, {r4, r5, r6, r7, r8, sl, fp, pc}
    a32c:	add	r2, sp, #928	; 0x3a0
    a32e:	movs	r5, r0
    a330:	lsls	r4, r4, #8
    a332:	movs	r0, r0
    a334:	add	r2, sp, #832	; 0x340
    a336:	movs	r5, r0
    a338:	ldr	r3, [pc, #28]	; (a358 <btrfs_find_free_objectid@@Base+0x3f4>)
    a33a:	movs	r2, #20
    a33c:	push	{r4, lr}
    a33e:	add	r3, pc
    a340:	mla	r0, r2, r0, r3
    a344:	ldr	r4, [r0, #16]
    a346:	subs	r4, r4, r1
    a348:	subs	r4, #1
    a34a:	bcs.n	a34e <btrfs_find_free_objectid@@Base+0x3ea>
    a34c:	pop	{r4, pc}
    a34e:	movs	r0, #32
    a350:	blx	8790 <putchar@plt+0x4>
    a354:	b.n	a348 <btrfs_find_free_objectid@@Base+0x3e4>
    a356:	nop
    a358:	add	r4, sp, #792	; 0x318
    a35a:	movs	r5, r0
    a35c:	push	{r4, lr}
    a35e:	mov	r4, r3
    a360:	bl	30500 <pretty_size_mode@@Base>
    a364:	ldr	r1, [pc, #16]	; (a378 <btrfs_find_free_objectid@@Base+0x414>)
    a366:	mov	r2, r4
    a368:	ldmia.w	sp!, {r4, lr}
    a36c:	add	r1, pc
    a36e:	mov	r3, r0
    a370:	movs	r0, #1
    a372:	b.w	87f0 <__printf_chk@plt>
    a376:	nop
    a378:	cdp2	0, 5, cr0, cr6, cr2, {0}
    a37c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a380:	mov	r9, r0
    a382:	ldr	r4, [r0, #0]
    a384:	mov	r7, r1
    a386:	mov	r8, r2
    a388:	cbz	r4, a3b4 <btrfs_find_free_objectid@@Base+0x450>
    a38a:	ldr	r2, [r4, #16]
    a38c:	ldr	r5, [r4, #8]
    a38e:	add	r5, r2
    a390:	ldr	r2, [r4, #24]
    a392:	add	r5, r2
    a394:	adds	r0, r5, r7
    a396:	movs	r1, #1
    a398:	adds	r0, #9
    a39a:	lsls	r0, r0, #3
    a39c:	blx	8358 <calloc@plt+0x4>
    a3a0:	mov	r6, r0
    a3a2:	cbnz	r0, a3b8 <btrfs_find_free_objectid@@Base+0x454>
    a3a4:	ldr	r0, [pc, #104]	; (a410 <btrfs_find_free_objectid@@Base+0x4ac>)
    a3a6:	add	r0, pc
    a3a8:	bl	1747c <__btrfs_error@@Base>
    a3ac:	mvn.w	r0, #11
    a3b0:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a3b4:	mov	r5, r4
    a3b6:	b.n	a394 <btrfs_find_free_objectid@@Base+0x430>
    a3b8:	cbz	r4, a400 <btrfs_find_free_objectid@@Base+0x49c>
    a3ba:	ldrd	r2, r3, [r4, #8]
    a3be:	add.w	fp, r4, #72	; 0x48
    a3c2:	mov.w	sl, r8, lsl #3
    a3c6:	mov	r1, fp
    a3c8:	strd	r2, r3, [r0, #8]
    a3cc:	ldrd	r2, r3, [r4, #16]
    a3d0:	strd	r2, r3, [r0, #16]
    a3d4:	ldrd	r2, r3, [r4, #24]
    a3d8:	strd	r2, r3, [r0, #24]
    a3dc:	add.w	r3, r0, #72	; 0x48
    a3e0:	mov	r2, sl
    a3e2:	mov	r0, r3
    a3e4:	blx	843c <memcpy@plt+0x4>
    a3e8:	sub.w	r2, r5, r8
    a3ec:	add.w	r1, fp, sl
    a3f0:	lsls	r2, r2, #3
    a3f2:	mov	r3, r0
    a3f4:	add.w	r0, r8, r7
    a3f8:	add.w	r0, r3, r0, lsl #3
    a3fc:	blx	843c <memcpy@plt+0x4>
    a400:	mov	r0, r4
    a402:	blx	83f0 <free@plt+0x4>
    a406:	movs	r0, #0
    a408:	str.w	r6, [r9]
    a40c:	b.n	a3b0 <btrfs_find_free_objectid@@Base+0x44c>
    a40e:	nop
    a410:	cdp2	0, 2, cr0, cr0, cr2, {0}
    a414:	push	{r4, lr}
    a416:	sub	sp, #152	; 0x98
    a418:	ldr	r4, [pc, #72]	; (a464 <btrfs_find_free_objectid@@Base+0x500>)
    a41a:	ldr	r1, [pc, #76]	; (a468 <btrfs_find_free_objectid@@Base+0x504>)
    a41c:	add	r4, pc
    a41e:	ldr	r1, [r4, r1]
    a420:	mov	r4, sp
    a422:	ldr	r1, [r1, #0]
    a424:	str	r1, [sp, #148]	; 0x94
    a426:	mov.w	r1, #0
    a42a:	strd	r2, r3, [sp, #40]	; 0x28
    a42e:	mov	r3, r0
    a430:	cbnz	r3, a446 <btrfs_find_free_objectid@@Base+0x4e2>
    a432:	ldr	r1, [pc, #56]	; (a46c <btrfs_find_free_objectid@@Base+0x508>)
    a434:	ldr	r2, [pc, #48]	; (a468 <btrfs_find_free_objectid@@Base+0x504>)
    a436:	add	r1, pc
    a438:	ldr	r2, [r1, r2]
    a43a:	ldr	r1, [r2, #0]
    a43c:	ldr	r2, [sp, #148]	; 0x94
    a43e:	eors	r1, r2
    a440:	beq.n	a45e <btrfs_find_free_objectid@@Base+0x4fa>
    a442:	blx	84cc <__stack_chk_fail@plt>
    a446:	movs	r2, #0
    a448:	mov	r1, r3
    a44a:	mov	r0, r4
    a44c:	bl	a154 <btrfs_find_free_objectid@@Base+0x1f0>
    a450:	cmp	r0, #0
    a452:	bge.n	a458 <btrfs_find_free_objectid@@Base+0x4f4>
    a454:	ldr	r3, [r3, #8]
    a456:	b.n	a430 <btrfs_find_free_objectid@@Base+0x4cc>
    a458:	beq.n	a432 <btrfs_find_free_objectid@@Base+0x4ce>
    a45a:	ldr	r3, [r3, #4]
    a45c:	b.n	a430 <btrfs_find_free_objectid@@Base+0x4cc>
    a45e:	mov	r0, r3
    a460:	add	sp, #152	; 0x98
    a462:	pop	{r4, pc}
    a464:	add	r1, sp, #432	; 0x1b0
    a466:	movs	r5, r0
    a468:	lsls	r4, r4, #8
    a46a:	movs	r0, r0
    a46c:	add	r1, sp, #328	; 0x148
    a46e:	movs	r5, r0
    a470:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a474:	movs	r1, #144	; 0x90
    a476:	mov	r8, r0
    a478:	movs	r0, #1
    a47a:	mov	r7, r2
    a47c:	mov	r6, r3
    a47e:	blx	8358 <calloc@plt+0x4>
    a482:	mov	r4, r0
    a484:	cbnz	r0, a498 <btrfs_find_free_objectid@@Base+0x534>
    a486:	ldr	r0, [pc, #124]	; (a504 <btrfs_find_free_objectid@@Base+0x5a0>)
    a488:	mvn.w	r4, #11
    a48c:	add	r0, pc
    a48e:	bl	1747c <__btrfs_error@@Base>
    a492:	mov	r0, r4
    a494:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a498:	add.w	r3, r0, #128	; 0x80
    a49c:	movs	r2, #0
    a49e:	strd	r3, r3, [r0, #128]	; 0x80
    a4a2:	add.w	r3, r0, #136	; 0x88
    a4a6:	strd	r3, r3, [r0, #136]	; 0x88
    a4aa:	mov	r3, r8
    a4ac:	strd	r7, r6, [r0, #40]	; 0x28
    a4b0:	ldr	r5, [r3, #0]
    a4b2:	cbnz	r5, a4c6 <btrfs_find_free_objectid@@Base+0x562>
    a4b4:	strd	r2, r5, [r4]
    a4b8:	mov	r1, r8
    a4ba:	str	r5, [r4, #8]
    a4bc:	mov	r0, r4
    a4be:	str	r4, [r3, #0]
    a4c0:	bl	13b2a <rb_insert_color@@Base>
    a4c4:	b.n	a492 <btrfs_find_free_objectid@@Base+0x52e>
    a4c6:	movs	r2, #0
    a4c8:	mov	r1, r5
    a4ca:	mov	r0, r4
    a4cc:	bl	a154 <btrfs_find_free_objectid@@Base+0x1f0>
    a4d0:	cmp	r0, #0
    a4d2:	bge.n	a4dc <btrfs_find_free_objectid@@Base+0x578>
    a4d4:	add.w	r3, r5, #8
    a4d8:	mov	r2, r5
    a4da:	b.n	a4b0 <btrfs_find_free_objectid@@Base+0x54c>
    a4dc:	beq.n	a4e2 <btrfs_find_free_objectid@@Base+0x57e>
    a4de:	adds	r3, r5, #4
    a4e0:	b.n	a4d8 <btrfs_find_free_objectid@@Base+0x574>
    a4e2:	blx	8740 <__errno_location@plt>
    a4e6:	movs	r3, #17
    a4e8:	mov	r2, r7
    a4ea:	str	r3, [r0, #0]
    a4ec:	mov	r3, r6
    a4ee:	ldr	r0, [pc, #24]	; (a508 <btrfs_find_free_objectid@@Base+0x5a4>)
    a4f0:	add	r0, pc
    a4f2:	bl	1747c <__btrfs_error@@Base>
    a4f6:	mov	r0, r4
    a4f8:	blx	83f0 <free@plt+0x4>
    a4fc:	mvn.w	r4, #16
    a500:	b.n	a492 <btrfs_find_free_objectid@@Base+0x52e>
    a502:	nop
    a504:	stc2l	0, cr0, [ip, #-8]
    a508:	stc2	0, cr0, [r1, #-8]
    a50c:	ldr.w	ip, [pc, #104]	; a578 <btrfs_find_free_objectid@@Base+0x614>
    a510:	push	{r4, r5, lr}
    a512:	add	ip, pc
    a514:	ldr	r5, [pc, #100]	; (a57c <btrfs_find_free_objectid@@Base+0x618>)
    a516:	sub	sp, #92	; 0x5c
    a518:	ldr	r4, [pc, #100]	; (a580 <btrfs_find_free_objectid@@Base+0x61c>)
    a51a:	ldr.w	r5, [ip, r5]
    a51e:	add	r4, pc
    a520:	ldr	r5, [r5, #0]
    a522:	str	r5, [sp, #84]	; 0x54
    a524:	mov.w	r5, #0
    a528:	cbnz	r3, a55e <btrfs_find_free_objectid@@Base+0x5fa>
    a52a:	ldr	r5, [pc, #88]	; (a584 <btrfs_find_free_objectid@@Base+0x620>)
    a52c:	ldr	r4, [r4, r5]
    a52e:	strd	r2, r1, [sp]
    a532:	movs	r1, #1
    a534:	strd	r0, r3, [sp, #8]
    a538:	ldr	r2, [pc, #76]	; (a588 <btrfs_find_free_objectid@@Base+0x624>)
    a53a:	ldr	r3, [pc, #80]	; (a58c <btrfs_find_free_objectid@@Base+0x628>)
    a53c:	ldr	r0, [r4, #0]
    a53e:	add	r4, sp, #20
    a540:	add	r3, pc
    a542:	add	r2, pc
    a544:	blx	881c <__fprintf_chk@plt+0x4>
    a548:	movs	r1, #16
    a54a:	mov	r0, r4
    a54c:	blx	8680 <backtrace@plt>
    a550:	movs	r2, #2
    a552:	mov	r1, r0
    a554:	mov	r0, r4
    a556:	blx	8990 <backtrace_symbols_fd@plt>
    a55a:	blx	8948 <abort@plt>
    a55e:	ldr	r2, [pc, #48]	; (a590 <btrfs_find_free_objectid@@Base+0x62c>)
    a560:	ldr	r3, [pc, #24]	; (a57c <btrfs_find_free_objectid@@Base+0x618>)
    a562:	add	r2, pc
    a564:	ldr	r3, [r2, r3]
    a566:	ldr	r2, [r3, #0]
    a568:	ldr	r3, [sp, #84]	; 0x54
    a56a:	eors	r2, r3
    a56c:	beq.n	a572 <btrfs_find_free_objectid@@Base+0x60e>
    a56e:	blx	84cc <__stack_chk_fail@plt>
    a572:	add	sp, #92	; 0x5c
    a574:	pop	{r4, r5, pc}
    a576:	nop
    a578:	add	r0, sp, #472	; 0x1d8
    a57a:	movs	r5, r0
    a57c:	lsls	r4, r4, #8
    a57e:	movs	r0, r0
    a580:	add	r0, sp, #424	; 0x1a8
    a582:	movs	r5, r0
    a584:	lsls	r4, r6, #8
    a586:	movs	r0, r0
    a588:	ldc2l	0, cr0, [ip], {2}
    a58c:	ldc2l	0, cr0, [r5], {2}
    a590:	add	r0, sp, #152	; 0x98
    a592:	movs	r5, r0
    a594:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    a598:	mov	r5, r0
    a59a:	bl	13e46 <rb_first@@Base>
    a59e:	ldr	r6, [pc, #112]	; (a610 <btrfs_find_free_objectid@@Base+0x6ac>)
    a5a0:	ldr	r7, [pc, #112]	; (a614 <btrfs_find_free_objectid@@Base+0x6b0>)
    a5a2:	mov	r4, r0
    a5a4:	cbnz	r4, a5aa <btrfs_find_free_objectid@@Base+0x646>
    a5a6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    a5aa:	mov	r1, r5
    a5ac:	mov	r0, r4
    a5ae:	bl	13bd0 <rb_erase@@Base>
    a5b2:	add.w	r8, r4, #128	; 0x80
    a5b6:	ldr.w	r0, [r4, #128]	; 0x80
    a5ba:	cmp	r0, r8
    a5bc:	bne.n	a5da <btrfs_find_free_objectid@@Base+0x676>
    a5be:	add.w	r8, r4, #136	; 0x88
    a5c2:	ldr.w	r0, [r4, #136]	; 0x88
    a5c6:	cmp	r0, r8
    a5c8:	bne.n	a5f0 <btrfs_find_free_objectid@@Base+0x68c>
    a5ca:	mov	r0, r4
    a5cc:	blx	83f0 <free@plt+0x4>
    a5d0:	mov	r0, r5
    a5d2:	bl	13e46 <rb_first@@Base>
    a5d6:	mov	r4, r0
    a5d8:	b.n	a5a4 <btrfs_find_free_objectid@@Base+0x640>
    a5da:	ldrd	r2, r3, [r0]
    a5de:	str	r3, [r2, #4]
    a5e0:	str	r2, [r3, #0]
    a5e2:	ldrd	r2, r3, [r0, #8]
    a5e6:	str	r3, [r2, #4]
    a5e8:	str	r2, [r3, #0]
    a5ea:	blx	83f0 <free@plt+0x4>
    a5ee:	b.n	a5b6 <btrfs_find_free_objectid@@Base+0x652>
    a5f0:	ldrd	r1, r2, [r0, #-8]
    a5f4:	str	r2, [r1, #4]
    a5f6:	str	r1, [r2, #0]
    a5f8:	ldrd	r1, r2, [r0]
    a5fc:	strd	r6, r7, [r0, #-8]
    a600:	str	r2, [r1, #4]
    a602:	str	r1, [r2, #0]
    a604:	strd	r6, r7, [r0]
    a608:	subs	r0, #8
    a60a:	blx	83f0 <free@plt+0x4>
    a60e:	b.n	a5c2 <btrfs_find_free_objectid@@Base+0x65e>
    a610:	lsls	r0, r0, #4
    a612:	movs	r0, r2
    a614:	lsls	r0, r0, #8
    a616:	movs	r0, r4
    a618:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a61c:	mov	r7, r2
    a61e:	vpush	{d8-d9}
    a622:	mov	r4, r1
    a624:	vmov	s16, r0
    a628:	ldrd	r2, r3, [r1, #8]
    a62c:	sub	sp, #92	; 0x5c
    a62e:	strd	r2, r3, [sp, #56]	; 0x38
    a632:	ldrd	r2, r3, [r1, #16]
    a636:	strd	r2, r3, [sp, #48]	; 0x30
    a63a:	ldrd	r2, r3, [r1, #24]
    a63e:	strd	r2, r3, [sp, #64]	; 0x40
    a642:	ldrd	r2, r3, [r1, #32]
    a646:	strd	r2, r3, [sp, #80]	; 0x50
    a64a:	ldr	r3, [r1, #56]	; 0x38
    a64c:	str	r3, [sp, #76]	; 0x4c
    a64e:	ldr	r3, [r1, #60]	; 0x3c
    a650:	str	r3, [sp, #72]	; 0x48
    a652:	movs	r3, #0
    a654:	str	r3, [r7, #0]
    a656:	ldr	r3, [pc, #716]	; (a924 <btrfs_find_free_objectid@@Base+0x9c0>)
    a658:	add	r3, pc
    a65a:	vmov	s19, r3
    a65e:	vmov	r0, s16
    a662:	mov	r2, r4
    a664:	ldr	r1, [pc, #696]	; (a920 <btrfs_find_free_objectid@@Base+0x9bc>)
    a666:	blx	8578 <ioctl@plt>
    a66a:	subs.w	fp, r0, #0
    a66e:	bge.n	a68c <btrfs_find_free_objectid@@Base+0x728>
    a670:	blx	8740 <__errno_location@plt>
    a674:	ldr	r0, [r0, #0]
    a676:	cmp	r0, #2
    a678:	beq.w	a918 <btrfs_find_free_objectid@@Base+0x9b4>
    a67c:	rsb	fp, r0, #0
    a680:	mov	r0, fp
    a682:	add	sp, #92	; 0x5c
    a684:	vpop	{d8-d9}
    a688:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a68c:	ldr	r3, [r4, #64]	; 0x40
    a68e:	cmp	r3, #0
    a690:	beq.n	a680 <btrfs_find_free_objectid@@Base+0x71c>
    a692:	movs	r3, #0
    a694:	str	r3, [sp, #16]
    a696:	mov	r5, r3
    a698:	ldr	r3, [pc, #652]	; (a928 <btrfs_find_free_objectid@@Base+0x9c4>)
    a69a:	add	r3, pc
    a69c:	vmov	s17, r3
    a6a0:	ldr	r3, [pc, #648]	; (a92c <btrfs_find_free_objectid@@Base+0x9c8>)
    a6a2:	add	r3, pc
    a6a4:	vmov	s18, r3
    a6a8:	ldr	r3, [r4, #64]	; 0x40
    a6aa:	ldr	r2, [sp, #16]
    a6ac:	cmp	r2, r3
    a6ae:	bcc.n	a6d0 <btrfs_find_free_objectid@@Base+0x76c>
    a6b0:	ldrd	r0, r1, [r4, #24]
    a6b4:	mov.w	r3, #4096	; 0x1000
    a6b8:	str	r3, [r4, #64]	; 0x40
    a6ba:	adds	r3, r1, #1
    a6bc:	it	eq
    a6be:	cmpeq.w	r0, #4294967295	; 0xffffffff
    a6c2:	beq.n	a680 <btrfs_find_free_objectid@@Base+0x71c>
    a6c4:	adds	r2, r0, #1
    a6c6:	adc.w	r3, r1, #0
    a6ca:	strd	r2, r3, [r4, #24]
    a6ce:	b.n	a65e <btrfs_find_free_objectid@@Base+0x6fa>
    a6d0:	add.w	r6, r4, #104	; 0x68
    a6d4:	ldrd	r0, r1, [sp, #56]	; 0x38
    a6d8:	add.w	r8, r6, r5
    a6dc:	adds	r5, #32
    a6de:	ldr.w	r3, [r8, #8]
    a6e2:	ldr.w	r9, [r8, #16]
    a6e6:	ldr.w	sl, [r8, #20]
    a6ea:	str	r3, [sp, #8]
    a6ec:	ldr.w	r3, [r8, #12]
    a6f0:	str	r3, [sp, #12]
    a6f2:	ldr.w	r3, [r8, #24]
    a6f6:	uxtb	r3, r3
    a6f8:	str	r3, [sp, #20]
    a6fa:	ldrd	r2, r3, [sp, #8]
    a6fe:	cmp	r3, r1
    a700:	it	eq
    a702:	cmpeq	r2, r0
    a704:	bcc.w	a810 <btrfs_find_free_objectid@@Base+0x8ac>
    a708:	ldrd	r2, r3, [sp, #48]	; 0x30
    a70c:	ldrd	r0, r1, [sp, #8]
    a710:	cmp	r3, r1
    a712:	it	eq
    a714:	cmpeq	r2, r0
    a716:	bcc.n	a810 <btrfs_find_free_objectid@@Base+0x8ac>
    a718:	ldr	r3, [sp, #20]
    a71a:	ldr	r2, [sp, #76]	; 0x4c
    a71c:	cmp	r3, r2
    a71e:	bcc.n	a810 <btrfs_find_free_objectid@@Base+0x8ac>
    a720:	ldr	r3, [sp, #72]	; 0x48
    a722:	ldr	r2, [sp, #20]
    a724:	cmp	r3, r2
    a726:	bcc.n	a810 <btrfs_find_free_objectid@@Base+0x8ac>
    a728:	ldrd	r2, r3, [sp, #64]	; 0x40
    a72c:	cmp	sl, r3
    a72e:	it	eq
    a730:	cmpeq	r9, r2
    a732:	bcc.n	a810 <btrfs_find_free_objectid@@Base+0x8ac>
    a734:	ldrd	r2, r3, [sp, #80]	; 0x50
    a738:	cmp	r3, sl
    a73a:	it	eq
    a73c:	cmpeq	r2, r9
    a73e:	bcc.n	a810 <btrfs_find_free_objectid@@Base+0x8ac>
    a740:	ldr	r3, [sp, #20]
    a742:	subs	r3, #240	; 0xf0
    a744:	cmp	r3, #6
    a746:	bhi.n	a680 <btrfs_find_free_objectid@@Base+0x71c>
    a748:	add	r2, pc, #8	; (adr r2, a754 <btrfs_find_free_objectid@@Base+0x7f0>)
    a74a:	ldr.w	r3, [r2, r3, lsl #2]
    a74e:	add	r2, r3
    a750:	bx	r2
    a752:	nop
    a754:	movs	r5, r3
    a756:	movs	r0, r0
    a758:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    a75c:	lsls	r7, r5, #1
    a75e:	movs	r0, r0
    a760:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    a764:	lsls	r3, r3, #3
    a766:	movs	r0, r0
    a768:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
    a76c:	lsls	r1, r5, #4
    a76e:	movs	r0, r0
    a770:	add	r6, r5
    a772:	movs	r3, #0
    a774:	ldr	r2, [r6, #16]
    a776:	and.w	r1, r2, #1
    a77a:	strd	r1, r3, [sp, #24]
    a77e:	ldrd	r0, r1, [sp, #24]
    a782:	orrs	r1, r0
    a784:	bne.n	a796 <btrfs_find_free_objectid@@Base+0x832>
    a786:	vmov	r0, s18
    a78a:	bl	17400 <__btrfs_warning@@Base>
    a78e:	cmp.w	fp, #0
    a792:	beq.n	a810 <btrfs_find_free_objectid@@Base+0x8ac>
    a794:	b.n	a680 <btrfs_find_free_objectid@@Base+0x71c>
    a796:	and.w	r1, r2, #2
    a79a:	strd	r1, r3, [sp, #32]
    a79e:	ldrd	r0, r1, [sp, #32]
    a7a2:	orrs	r1, r0
    a7a4:	beq.n	a7ac <btrfs_find_free_objectid@@Base+0x848>
    a7a6:	vmov	r0, s17
    a7aa:	b.n	a78a <btrfs_find_free_objectid@@Base+0x826>
    a7ac:	and.w	r2, r2, #4
    a7b0:	strd	r2, r3, [sp, #40]	; 0x28
    a7b4:	ldrd	r2, r3, [sp, #40]	; 0x28
    a7b8:	orrs	r3, r2
    a7ba:	beq.n	a78e <btrfs_find_free_objectid@@Base+0x82a>
    a7bc:	vmov	r0, s19
    a7c0:	b.n	a78a <btrfs_find_free_objectid@@Base+0x826>
    a7c2:	ldr	r0, [r7, #0]
    a7c4:	mov	r2, r9
    a7c6:	mov	r3, sl
    a7c8:	bl	a414 <btrfs_find_free_objectid@@Base+0x4b0>
    a7cc:	cbnz	r0, a7dc <btrfs_find_free_objectid@@Base+0x878>
    a7ce:	mov	r2, r9
    a7d0:	mov	r3, sl
    a7d2:	mov	r0, r7
    a7d4:	bl	a470 <btrfs_find_free_objectid@@Base+0x50c>
    a7d8:	cmp	r0, #0
    a7da:	beq.n	a878 <btrfs_find_free_objectid@@Base+0x914>
    a7dc:	cmn.w	r0, #4096	; 0x1000
    a7e0:	bhi.n	a878 <btrfs_find_free_objectid@@Base+0x914>
    a7e2:	adds	r3, r6, r5
    a7e4:	ldr	r1, [r6, r5]
    a7e6:	ldr	r2, [r3, #4]
    a7e8:	strd	r1, r2, [r0, #48]	; 0x30
    a7ec:	ldr	r1, [r3, #8]
    a7ee:	ldr	r2, [r3, #12]
    a7f0:	strd	r1, r2, [r0, #56]	; 0x38
    a7f4:	ldr	r1, [r3, #16]
    a7f6:	ldr	r2, [r3, #20]
    a7f8:	strd	r1, r2, [r0, #64]	; 0x40
    a7fc:	ldr	r2, [r3, #28]
    a7fe:	ldr	r1, [r3, #24]
    a800:	strd	r1, r2, [r0, #72]	; 0x48
    a804:	ldr	r2, [r3, #32]
    a806:	ldr	r3, [r3, #36]	; 0x24
    a808:	strd	r2, r3, [r0, #80]	; 0x50
    a80c:	mov.w	fp, #0
    a810:	ldr.w	r3, [r8, #28]
    a814:	strd	r9, sl, [r4, #24]
    a818:	add	r5, r3
    a81a:	ldr	r3, [sp, #20]
    a81c:	str	r3, [r4, #56]	; 0x38
    a81e:	ldrd	r2, r3, [sp, #8]
    a822:	strd	r2, r3, [r4, #8]
    a826:	ldr	r3, [sp, #16]
    a828:	adds	r3, #1
    a82a:	str	r3, [sp, #16]
    a82c:	b.n	a6a8 <btrfs_find_free_objectid@@Base+0x744>
    a82e:	ldr	r0, [r7, #0]
    a830:	mov	r2, r9
    a832:	mov	r3, sl
    a834:	bl	a414 <btrfs_find_free_objectid@@Base+0x4b0>
    a838:	cbnz	r0, a846 <btrfs_find_free_objectid@@Base+0x8e2>
    a83a:	mov	r2, r9
    a83c:	mov	r3, sl
    a83e:	mov	r0, r7
    a840:	bl	a470 <btrfs_find_free_objectid@@Base+0x50c>
    a844:	cbz	r0, a878 <btrfs_find_free_objectid@@Base+0x914>
    a846:	cmn.w	r0, #4096	; 0x1000
    a84a:	bhi.n	a878 <btrfs_find_free_objectid@@Base+0x914>
    a84c:	adds	r3, r6, r5
    a84e:	ldr	r1, [r6, r5]
    a850:	ldr	r2, [r3, #4]
    a852:	strd	r1, r2, [r0, #88]	; 0x58
    a856:	ldr	r1, [r3, #8]
    a858:	ldr	r2, [r3, #12]
    a85a:	strd	r1, r2, [r0, #96]	; 0x60
    a85e:	ldr	r1, [r3, #16]
    a860:	ldr	r2, [r3, #20]
    a862:	strd	r1, r2, [r0, #104]	; 0x68
    a866:	ldr	r2, [r3, #28]
    a868:	ldr	r1, [r3, #24]
    a86a:	strd	r1, r2, [r0, #112]	; 0x70
    a86e:	ldr	r2, [r3, #32]
    a870:	ldr	r3, [r3, #36]	; 0x24
    a872:	strd	r2, r3, [r0, #120]	; 0x78
    a876:	b.n	a80c <btrfs_find_free_objectid@@Base+0x8a8>
    a878:	mov	fp, r0
    a87a:	b.n	a78e <btrfs_find_free_objectid@@Base+0x82a>
    a87c:	ldrd	r2, r3, [sp, #8]
    a880:	cmp	sl, r3
    a882:	it	eq
    a884:	cmpeq	r9, r2
    a886:	bcs.n	a78e <btrfs_find_free_objectid@@Base+0x82a>
    a888:	ldr.w	fp, [r7]
    a88c:	mov	r2, r9
    a88e:	mov	r3, sl
    a890:	mov	r0, fp
    a892:	bl	a414 <btrfs_find_free_objectid@@Base+0x4b0>
    a896:	mov	r6, r0
    a898:	cbnz	r0, a8b6 <btrfs_find_free_objectid@@Base+0x952>
    a89a:	uxth.w	r3, sl
    a89e:	strd	r9, r3, [sp]
    a8a2:	mov	r3, r0
    a8a4:	ldr	r0, [pc, #136]	; (a930 <btrfs_find_free_objectid@@Base+0x9cc>)
    a8a6:	mov.w	r2, sl, lsr #16
    a8aa:	add	r0, pc
    a8ac:	bl	1747c <__btrfs_error@@Base>
    a8b0:	mvn.w	fp, #1
    a8b4:	b.n	a680 <btrfs_find_free_objectid@@Base+0x71c>
    a8b6:	mov	r0, fp
    a8b8:	ldrd	r2, r3, [sp, #8]
    a8bc:	bl	a414 <btrfs_find_free_objectid@@Base+0x4b0>
    a8c0:	mov	fp, r0
    a8c2:	cbnz	r0, a8da <btrfs_find_free_objectid@@Base+0x976>
    a8c4:	ldrh.w	r3, [sp, #12]
    a8c8:	ldr	r2, [sp, #8]
    a8ca:	strd	r2, r3, [sp]
    a8ce:	ldr	r3, [sp, #12]
    a8d0:	lsrs	r2, r3, #16
    a8d2:	mov	r3, r0
    a8d4:	ldr	r0, [pc, #92]	; (a934 <btrfs_find_free_objectid@@Base+0x9d0>)
    a8d6:	add	r0, pc
    a8d8:	b.n	a8ac <btrfs_find_free_objectid@@Base+0x948>
    a8da:	movs	r0, #24
    a8dc:	blx	8634 <malloc@plt+0x4>
    a8e0:	cbnz	r0, a8f0 <btrfs_find_free_objectid@@Base+0x98c>
    a8e2:	ldr	r0, [pc, #84]	; (a938 <btrfs_find_free_objectid@@Base+0x9d4>)
    a8e4:	mvn.w	fp, #11
    a8e8:	add	r0, pc
    a8ea:	bl	1747c <__btrfs_error@@Base>
    a8ee:	b.n	a680 <btrfs_find_free_objectid@@Base+0x71c>
    a8f0:	strd	fp, r6, [r0, #16]
    a8f4:	adds	r6, #128	; 0x80
    a8f6:	ldr	r3, [r6, #4]
    a8f8:	add.w	r1, r0, #8
    a8fc:	str	r0, [r6, #4]
    a8fe:	strd	r6, r3, [r0]
    a902:	str	r0, [r3, #0]
    a904:	add.w	r3, fp, #136	; 0x88
    a908:	ldr.w	r2, [fp, #140]	; 0x8c
    a90c:	str.w	r1, [fp, #140]	; 0x8c
    a910:	strd	r3, r2, [r0, #8]
    a914:	str	r1, [r2, #0]
    a916:	b.n	a80c <btrfs_find_free_objectid@@Base+0x8a8>
    a918:	mvn.w	fp, #24
    a91c:	b.n	a680 <btrfs_find_free_objectid@@Base+0x71c>
    a91e:	nop
    a920:	str	r4, [sp, #68]	; 0x44
    a922:	beq.n	a926 <btrfs_find_free_objectid@@Base+0x9c2>
    a924:	mrrc2	0, 0, r0, r2, cr2
    a928:	umlal	r0, r0, r0, r2
    a92c:	umull	r0, r0, r9, r2
    a930:			; <UNDEFINED> instruction: 0xfa2d0002
    a934:			; <UNDEFINED> instruction: 0xfa010002
    a938:	ldr??.w	r0, [r0, #2]
    a93c:	push	{r4, r5, r6, r7, lr}
    a93e:	mov	r5, r1
    a940:	ldr	r1, [pc, #168]	; (a9ec <btrfs_find_free_objectid@@Base+0xa88>)
    a942:	sub.w	sp, sp, #4096	; 0x1000
    a946:	ldr	r2, [pc, #168]	; (a9f0 <btrfs_find_free_objectid@@Base+0xa8c>)
    a948:	sub	sp, #12
    a94a:	add	r1, pc
    a94c:	add.w	r3, sp, #4096	; 0x1000
    a950:	adds	r3, #4
    a952:	mov.w	r6, #4096	; 0x1000
    a956:	ldr	r2, [r1, r2]
    a958:	mov	r4, r0
    a95a:	movs	r1, #0
    a95c:	add	r7, sp, #8
    a95e:	ldr	r2, [r2, #0]
    a960:	str	r2, [r3, #0]
    a962:	mov.w	r2, #0
    a966:	mov	r3, sp
    a968:	mov	r2, r6
    a96a:	mov	r0, r3
    a96c:	blx	8780 <memset@plt+0x4>
    a970:	movs	r1, #0
    a972:	movs	r2, #246	; 0xf6
    a974:	mov	r3, r0
    a976:	movs	r0, #8
    a978:	strd	r0, r1, [r7, #-8]
    a97c:	mov.w	r0, #4294967295	; 0xffffffff
    a980:	mov.w	r1, #4294967295	; 0xffffffff
    a984:	strd	r0, r1, [r3, #16]
    a988:	strd	r0, r1, [r3, #32]
    a98c:	strd	r0, r1, [r3, #48]	; 0x30
    a990:	movs	r1, #240	; 0xf0
    a992:	mov	r0, r4
    a994:	strd	r1, r2, [r3, #56]	; 0x38
    a998:	mov	r2, r5
    a99a:	mov	r1, r3
    a99c:	str	r6, [r3, #64]	; 0x40
    a99e:	bl	a618 <btrfs_find_free_objectid@@Base+0x6b4>
    a9a2:	cmn.w	r0, #25
    a9a6:	mov	r4, r0
    a9a8:	bne.n	a9cc <btrfs_find_free_objectid@@Base+0xa68>
    a9aa:	ldr	r0, [pc, #72]	; (a9f4 <btrfs_find_free_objectid@@Base+0xa90>)
    a9ac:	add	r0, pc
    a9ae:	bl	1747c <__btrfs_error@@Base>
    a9b2:	ldr	r1, [pc, #68]	; (a9f8 <btrfs_find_free_objectid@@Base+0xa94>)
    a9b4:	add.w	r3, sp, #4096	; 0x1000
    a9b8:	ldr	r2, [pc, #52]	; (a9f0 <btrfs_find_free_objectid@@Base+0xa8c>)
    a9ba:	adds	r3, #4
    a9bc:	add	r1, pc
    a9be:	ldr	r2, [r1, r2]
    a9c0:	ldr	r1, [r2, #0]
    a9c2:	ldr	r2, [r3, #0]
    a9c4:	eors	r1, r2
    a9c6:	beq.n	a9e2 <btrfs_find_free_objectid@@Base+0xa7e>
    a9c8:	blx	84cc <__stack_chk_fail@plt>
    a9cc:	cmp	r0, #0
    a9ce:	bge.n	a9b2 <btrfs_find_free_objectid@@Base+0xa4e>
    a9d0:	negs	r0, r0
    a9d2:	blx	864c <strerror@plt>
    a9d6:	mov	r1, r0
    a9d8:	ldr	r0, [pc, #32]	; (a9fc <btrfs_find_free_objectid@@Base+0xa98>)
    a9da:	add	r0, pc
    a9dc:	bl	1747c <__btrfs_error@@Base>
    a9e0:	b.n	a9b2 <btrfs_find_free_objectid@@Base+0xa4e>
    a9e2:	mov	r0, r4
    a9e4:	add.w	sp, sp, #4096	; 0x1000
    a9e8:	add	sp, #12
    a9ea:	pop	{r4, r5, r6, r7, pc}
    a9ec:	add	r4, pc, #248	; (adr r4, aae8 <btrfs_qgroup_setup_comparer@@Base+0x58>)
    a9ee:	movs	r5, r0
    a9f0:	lsls	r4, r4, #8
    a9f2:	movs	r0, r0
    a9f4:	vst4.8	{d16-d19}, [ip], r2
    a9f8:	add	r3, pc, #816	; (adr r3, ad2c <btrfs_qgroup_query@@Base+0x90>)
    a9fa:	movs	r5, r0
    a9fc:	vst4.8	{d16-d19}, [r5], r2

0000aa00 <btrfs_qgroup_setup_print_column@@Base>:
    aa00:	cmp	r0, #7
    aa02:	ldr	r1, [pc, #68]	; (aa48 <btrfs_qgroup_setup_print_column@@Base+0x48>)
    aa04:	push	{r4, lr}
    aa06:	mov	r4, r0
    aa08:	ldr	r0, [pc, #64]	; (aa4c <btrfs_qgroup_setup_print_column@@Base+0x4c>)
    aa0a:	ite	hi
    aa0c:	movhi	r3, #0
    aa0e:	movls	r3, #1
    aa10:	add	r1, pc
    aa12:	add	r0, pc
    aa14:	movs	r2, #143	; 0x8f
    aa16:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    aa1a:	cmp	r4, #6
    aa1c:	bls.n	aa36 <btrfs_qgroup_setup_print_column@@Base+0x36>
    aa1e:	ldr	r3, [pc, #48]	; (aa50 <btrfs_qgroup_setup_print_column@@Base+0x50>)
    aa20:	movs	r2, #1
    aa22:	add	r3, pc
    aa24:	str	r2, [r3, #8]
    aa26:	str	r2, [r3, #28]
    aa28:	str	r2, [r3, #48]	; 0x30
    aa2a:	str	r2, [r3, #68]	; 0x44
    aa2c:	str	r2, [r3, #88]	; 0x58
    aa2e:	str	r2, [r3, #108]	; 0x6c
    aa30:	str.w	r2, [r3, #128]	; 0x80
    aa34:	pop	{r4, pc}
    aa36:	ldr	r0, [pc, #28]	; (aa54 <btrfs_qgroup_setup_print_column@@Base+0x54>)
    aa38:	movs	r3, #20
    aa3a:	add	r0, pc
    aa3c:	mla	r4, r3, r4, r0
    aa40:	movs	r3, #1
    aa42:	str	r3, [r4, #8]
    aa44:	b.n	aa34 <btrfs_qgroup_setup_print_column@@Base+0x34>
    aa46:	nop
    aa48:	smlabb	r0, r7, r2, r0
    aa4c:	vld4.8	{d0-d3}, [r4], r2
    aa50:	add	r5, pc, #904	; (adr r5, addc <btrfs_show_qgroups@@Base+0x48>)
    aa52:	movs	r5, r0
    aa54:	add	r5, pc, #808	; (adr r5, ad80 <btrfs_qgroup_query@@Base+0xe4>)
    aa56:	movs	r5, r0

0000aa58 <btrfs_qgroup_setup_units@@Base>:
    aa58:	ldr	r3, [pc, #12]	; (aa68 <btrfs_qgroup_setup_units@@Base+0x10>)
    aa5a:	add	r3, pc
    aa5c:	str	r0, [r3, #32]
    aa5e:	str	r0, [r3, #52]	; 0x34
    aa60:	str	r0, [r3, #72]	; 0x48
    aa62:	str	r0, [r3, #92]	; 0x5c
    aa64:	bx	lr
    aa66:	nop
    aa68:	add	r5, pc, #680	; (adr r5, ad14 <btrfs_qgroup_query@@Base+0x78>)
    aa6a:	movs	r5, r0

0000aa6c <btrfs_qgroup_alloc_comparer_set@@Base>:
    aa6c:	push	{r3, lr}
    aa6e:	movs	r1, #88	; 0x58
    aa70:	movs	r0, #1
    aa72:	blx	8358 <calloc@plt+0x4>
    aa76:	cbnz	r0, aa86 <btrfs_qgroup_alloc_comparer_set@@Base+0x1a>
    aa78:	ldr	r0, [pc, #16]	; (aa8c <btrfs_qgroup_alloc_comparer_set@@Base+0x20>)
    aa7a:	add	r0, pc
    aa7c:	bl	1747c <__btrfs_error@@Base>
    aa80:	movs	r0, #1
    aa82:	blx	86f8 <exit@plt>
    aa86:	movs	r2, #10
    aa88:	str	r2, [r0, #0]
    aa8a:	pop	{r3, pc}
    aa8c:			; <UNDEFINED> instruction: 0xf75e0002

0000aa90 <btrfs_qgroup_setup_comparer@@Base>:
    aa90:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
    aa94:	mov	r6, r1
    aa96:	ldr	r4, [r0, #0]
    aa98:	mov	r7, r0
    aa9a:	ldr	r1, [pc, #188]	; (ab58 <btrfs_qgroup_setup_comparer@@Base+0xc8>)
    aa9c:	mov	r8, r2
    aa9e:	subs	r3, r4, #0
    aaa0:	ldr	r0, [pc, #184]	; (ab5c <btrfs_qgroup_setup_comparer@@Base+0xcc>)
    aaa2:	add	r1, pc
    aaa4:	movw	r2, #457	; 0x1c9
    aaa8:	it	ne
    aaaa:	movne	r3, #1
    aaac:	adds	r1, #32
    aaae:	add	r0, pc
    aab0:	str	r1, [sp, #4]
    aab2:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    aab6:	cmp	r6, #4
    aab8:	ldr	r0, [pc, #164]	; (ab60 <btrfs_qgroup_setup_comparer@@Base+0xd0>)
    aaba:	mov.w	r2, #458	; 0x1ca
    aabe:	ite	hi
    aac0:	movhi	r3, #0
    aac2:	movls	r3, #1
    aac4:	ldr	r1, [sp, #4]
    aac6:	add	r0, pc
    aac8:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    aacc:	ldrd	r9, r5, [r4]
    aad0:	ldr	r0, [pc, #144]	; (ab64 <btrfs_qgroup_setup_comparer@@Base+0xd4>)
    aad2:	movw	r2, #459	; 0x1cb
    aad6:	cmp	r5, r9
    aad8:	ldr	r1, [sp, #4]
    aada:	add	r0, pc
    aadc:	ite	gt
    aade:	movgt	r3, #0
    aae0:	movle	r3, #1
    aae2:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    aae6:	cmp	r5, r9
    aae8:	bne.n	ab22 <btrfs_qgroup_setup_comparer@@Base+0x92>
    aaea:	adds	r5, #11
    aaec:	mov	r0, r4
    aaee:	lsls	r1, r5, #3
    aaf0:	blx	84e8 <realloc@plt+0x4>
    aaf4:	mov	r5, r0
    aaf6:	cbnz	r0, ab08 <btrfs_qgroup_setup_comparer@@Base+0x78>
    aaf8:	mov	r0, r4
    aafa:	blx	83f0 <free@plt+0x4>
    aafe:	mvn.w	r0, #11
    ab02:	add	sp, #12
    ab04:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    ab08:	ldr	r0, [r0, #0]
    ab0a:	movs	r2, #80	; 0x50
    ab0c:	movs	r1, #0
    ab0e:	mov	r4, r5
    ab10:	adds	r0, #1
    ab12:	add.w	r0, r5, r0, lsl #3
    ab16:	blx	8780 <memset@plt+0x4>
    ab1a:	ldr	r3, [r5, #0]
    ab1c:	adds	r3, #10
    ab1e:	str	r3, [r5, #0]
    ab20:	str	r5, [r7, #0]
    ab22:	ldr	r5, [r4, #4]
    ab24:	movw	r2, #481	; 0x1e1
    ab28:	ldr	r1, [pc, #60]	; (ab68 <btrfs_qgroup_setup_comparer@@Base+0xd8>)
    ab2a:	ldr	r0, [pc, #64]	; (ab6c <btrfs_qgroup_setup_comparer@@Base+0xdc>)
    ab2c:	add.w	r7, r4, r5, lsl #3
    ab30:	add	r1, pc
    ab32:	add	r0, pc
    ab34:	adds	r1, #32
    ab36:	ldr	r3, [r7, #8]
    ab38:	adds	r5, #1
    ab3a:	clz	r3, r3
    ab3e:	lsrs	r3, r3, #5
    ab40:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    ab44:	ldr	r3, [pc, #40]	; (ab70 <btrfs_qgroup_setup_comparer@@Base+0xe0>)
    ab46:	movs	r0, #0
    ab48:	add	r3, pc
    ab4a:	ldr.w	r3, [r3, r6, lsl #2]
    ab4e:	strd	r3, r8, [r7, #8]
    ab52:	str	r5, [r4, #4]
    ab54:	b.n	ab02 <btrfs_qgroup_setup_comparer@@Base+0x72>
    ab56:	nop
    ab58:			; <UNDEFINED> instruction: 0xfa850002
    ab5c:	ldrh.w	r0, [r2, #2]
    ab60:	strh.w	r0, [r6, #2]
    ab64:	ldrh.w	r0, [r3, #2]
    ab68:	ldr??.w	r0, [r7, #2]
    ab6c:	ldr??.w	r0, [r5, r2]
    ab70:	ldr	r2, [sp, #592]	; 0x250
    ab72:	movs	r5, r0

0000ab74 <btrfs_qgroup_alloc_filter_set@@Base>:
    ab74:	push	{r3, lr}
    ab76:	movs	r1, #72	; 0x48
    ab78:	movs	r0, #1
    ab7a:	blx	8358 <calloc@plt+0x4>
    ab7e:	cbnz	r0, ab8e <btrfs_qgroup_alloc_filter_set@@Base+0x1a>
    ab80:	ldr	r0, [pc, #16]	; (ab94 <btrfs_qgroup_alloc_filter_set@@Base+0x20>)
    ab82:	add	r0, pc
    ab84:	bl	1747c <__btrfs_error@@Base>
    ab88:	movs	r0, #1
    ab8a:	blx	86f8 <exit@plt>
    ab8e:	movs	r2, #4
    ab90:	str	r2, [r0, #0]
    ab92:	pop	{r3, pc}
    ab94:			; <UNDEFINED> instruction: 0xf6560002

0000ab98 <btrfs_qgroup_setup_filter@@Base>:
    ab98:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
    ab9c:	mov	r8, r1
    ab9e:	ldr	r4, [r0, #0]
    aba0:	mov	r9, r0
    aba2:	ldr	r1, [pc, #216]	; (ac7c <btrfs_qgroup_setup_filter@@Base+0xe4>)
    aba4:	mov	r6, r3
    aba6:	ldr	r0, [pc, #216]	; (ac80 <btrfs_qgroup_setup_filter@@Base+0xe8>)
    aba8:	subs	r3, r4, #0
    abaa:	add	r1, pc
    abac:	mov	r7, r2
    abae:	it	ne
    abb0:	movne	r3, #1
    abb2:	adds	r1, #60	; 0x3c
    abb4:	add	r0, pc
    abb6:	mov.w	r2, #836	; 0x344
    abba:	str	r1, [sp, #4]
    abbc:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    abc0:	cmp.w	r8, #1
    abc4:	ldr	r0, [pc, #188]	; (ac84 <btrfs_qgroup_setup_filter@@Base+0xec>)
    abc6:	ldr	r1, [sp, #4]
    abc8:	movw	r2, #837	; 0x345
    abcc:	ite	hi
    abce:	movhi	r3, #0
    abd0:	movls	r3, #1
    abd2:	add	r0, pc
    abd4:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    abd8:	ldrd	sl, r5, [r4]
    abdc:	ldr	r0, [pc, #168]	; (ac88 <btrfs_qgroup_setup_filter@@Base+0xf0>)
    abde:	movw	r2, #838	; 0x346
    abe2:	cmp	r5, sl
    abe4:	ldr	r1, [sp, #4]
    abe6:	add	r0, pc
    abe8:	ite	gt
    abea:	movgt	r3, #0
    abec:	movle	r3, #1
    abee:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    abf2:	cmp	r5, sl
    abf4:	bne.n	ac36 <btrfs_qgroup_setup_filter@@Base+0x9e>
    abf6:	lsls	r5, r5, #4
    abf8:	mov	r0, r4
    abfa:	add.w	r1, r5, #72	; 0x48
    abfe:	blx	84e8 <realloc@plt+0x4>
    ac02:	mov	r5, r0
    ac04:	cbnz	r0, ac1a <btrfs_qgroup_setup_filter@@Base+0x82>
    ac06:	ldr	r0, [pc, #132]	; (ac8c <btrfs_qgroup_setup_filter@@Base+0xf4>)
    ac08:	add	r0, pc
    ac0a:	bl	1747c <__btrfs_error@@Base>
    ac0e:	mov	r0, r4
    ac10:	blx	83f0 <free@plt+0x4>
    ac14:	movs	r0, #1
    ac16:	blx	86f8 <exit@plt>
    ac1a:	ldr	r0, [r0, #0]
    ac1c:	movs	r2, #64	; 0x40
    ac1e:	movs	r1, #0
    ac20:	mov	r4, r5
    ac22:	add.w	r0, r5, r0, lsl #4
    ac26:	adds	r0, #8
    ac28:	blx	8780 <memset@plt+0x4>
    ac2c:	ldr	r3, [r5, #0]
    ac2e:	adds	r3, #4
    ac30:	str	r3, [r5, #0]
    ac32:	str.w	r5, [r9]
    ac36:	ldr	r5, [r4, #4]
    ac38:	mov.w	r2, #860	; 0x35c
    ac3c:	ldr	r1, [pc, #80]	; (ac90 <btrfs_qgroup_setup_filter@@Base+0xf8>)
    ac3e:	ldr	r0, [pc, #84]	; (ac94 <btrfs_qgroup_setup_filter@@Base+0xfc>)
    ac40:	add.w	r9, r4, r5, lsl #4
    ac44:	add	r1, pc
    ac46:	adds	r1, #60	; 0x3c
    ac48:	add	r0, pc
    ac4a:	ldr.w	r3, [r9, #8]
    ac4e:	adds	r5, #1
    ac50:	clz	r3, r3
    ac54:	lsrs	r3, r3, #5
    ac56:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    ac5a:	ldr	r1, [pc, #60]	; (ac98 <btrfs_qgroup_setup_filter@@Base+0x100>)
    ac5c:	movs	r0, #0
    ac5e:	add	r1, pc
    ac60:	add.w	r8, r1, r8, lsl #2
    ac64:	ldr.w	r3, [r8, #20]
    ac68:	str.w	r3, [r9, #8]
    ac6c:	add.w	r3, r4, r5, lsl #4
    ac70:	strd	r7, r6, [r3]
    ac74:	str	r5, [r4, #4]
    ac76:	add	sp, #8
    ac78:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ac7c:	ldr??.w	r0, [sp, r2]
    ac80:			; <UNDEFINED> instruction: 0xf7ac0002
    ac84:			; <UNDEFINED> instruction: 0xf7ff0002
    ac88:	strb.w	r0, [ip, r2]
    ac8c:	rsbs	r0, r0, #8519680	; 0x820000
    ac90:	str??.w	r0, [r3, #2]
    ac94:			; <UNDEFINED> instruction: 0xf7c60002
    ac98:	ldr	r1, [sp, #504]	; 0x1f8
    ac9a:	movs	r5, r0

0000ac9c <btrfs_qgroup_query@@Base>:
    ac9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    aca0:	sub.w	sp, sp, #4096	; 0x1000
    aca4:	sub	sp, #16
    aca6:	ldr	r1, [pc, #224]	; (ad88 <btrfs_qgroup_query@@Base+0xec>)
    aca8:	mov	r7, r2
    acaa:	mov	r6, r3
    acac:	ldr	r2, [pc, #220]	; (ad8c <btrfs_qgroup_query@@Base+0xf0>)
    acae:	add.w	r3, sp, #4128	; 0x1020
    acb2:	add	r1, pc
    acb4:	add	r4, sp, #8
    acb6:	ldr	r5, [r3, #16]
    acb8:	adds	r3, #16
    acba:	ldr	r2, [r1, r2]
    acbc:	add.w	r3, sp, #4096	; 0x1000
    acc0:	add.w	r8, sp, #16
    acc4:	mov.w	sl, #4096	; 0x1000
    acc8:	ldr	r2, [r2, #0]
    acca:	str	r2, [r3, #12]
    accc:	mov.w	r2, #0
    acd0:	mov	r9, r0
    acd2:	mov	r2, sl
    acd4:	mov	r0, r4
    acd6:	movs	r1, #0
    acd8:	adds	r3, #12
    acda:	blx	8780 <memset@plt+0x4>
    acde:	movs	r0, #8
    ace0:	movs	r1, #0
    ace2:	mov.w	r2, #4294967295	; 0xffffffff
    ace6:	strd	r0, r1, [r8, #-8]
    acea:	mov.w	r3, #4294967295	; 0xffffffff
    acee:	strd	r7, r6, [r8, #16]
    acf2:	mov	r1, r4
    acf4:	strd	r2, r3, [r8, #40]	; 0x28
    acf8:	movs	r2, #242	; 0xf2
    acfa:	movs	r3, #244	; 0xf4
    acfc:	strd	r7, r6, [r8, #24]
    ad00:	strd	r2, r3, [r8, #48]	; 0x30
    ad04:	mov	r0, r9
    ad06:	str.w	sl, [r8, #56]	; 0x38
    ad0a:	sub.w	r8, r8, #12
    ad0e:	mov	r2, r8
    ad10:	bl	a618 <btrfs_find_free_objectid@@Base+0x6b4>
    ad14:	subs	r4, r0, #0
    ad16:	blt.n	ad5c <btrfs_qgroup_query@@Base+0xc0>
    ad18:	mov	r0, r8
    ad1a:	bl	13e46 <rb_first@@Base>
    ad1e:	mov	r4, r0
    ad20:	cbz	r0, ad76 <btrfs_qgroup_query@@Base+0xda>
    ad22:	ldrd	r2, r3, [r0, #40]	; 0x28
    ad26:	add.w	r7, r0, #48	; 0x30
    ad2a:	mov	r6, r5
    ad2c:	adds	r4, #88	; 0x58
    ad2e:	adds	r5, #48	; 0x30
    ad30:	strd	r2, r3, [r6], #8
    ad34:	ldmia	r7!, {r0, r1, r2, r3}
    ad36:	stmia	r6!, {r0, r1, r2, r3}
    ad38:	ldmia	r7!, {r0, r1, r2, r3}
    ad3a:	stmia	r6!, {r0, r1, r2, r3}
    ad3c:	ldmia.w	r7, {r0, r1}
    ad40:	stmia.w	r6, {r0, r1}
    ad44:	ldmia	r4!, {r0, r1, r2, r3}
    ad46:	stmia	r5!, {r0, r1, r2, r3}
    ad48:	ldmia	r4!, {r0, r1, r2, r3}
    ad4a:	stmia	r5!, {r0, r1, r2, r3}
    ad4c:	ldmia.w	r4, {r0, r1}
    ad50:	movs	r4, #0
    ad52:	stmia.w	r5, {r0, r1}
    ad56:	mov	r0, r8
    ad58:	bl	a594 <btrfs_find_free_objectid@@Base+0x630>
    ad5c:	ldr	r1, [pc, #48]	; (ad90 <btrfs_qgroup_query@@Base+0xf4>)
    ad5e:	add.w	r3, sp, #4096	; 0x1000
    ad62:	ldr	r2, [pc, #40]	; (ad8c <btrfs_qgroup_query@@Base+0xf0>)
    ad64:	adds	r3, #12
    ad66:	add	r1, pc
    ad68:	ldr	r2, [r1, r2]
    ad6a:	ldr	r1, [r2, #0]
    ad6c:	ldr	r2, [r3, #0]
    ad6e:	eors	r1, r2
    ad70:	beq.n	ad7c <btrfs_qgroup_query@@Base+0xe0>
    ad72:	blx	84cc <__stack_chk_fail@plt>
    ad76:	mvn.w	r4, #60	; 0x3c
    ad7a:	b.n	ad56 <btrfs_qgroup_query@@Base+0xba>
    ad7c:	mov	r0, r4
    ad7e:	add.w	sp, sp, #4096	; 0x1000
    ad82:	add	sp, #16
    ad84:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ad88:	add	r0, pc, #856	; (adr r0, b0e4 <btrfs_show_qgroups@@Base+0x350>)
    ad8a:	movs	r5, r0
    ad8c:	lsls	r4, r4, #8
    ad8e:	movs	r0, r0
    ad90:	add	r0, pc, #136	; (adr r0, ae1c <btrfs_show_qgroups@@Base+0x88>)
    ad92:	movs	r5, r0

0000ad94 <btrfs_show_qgroups@@Base>:
    ad94:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ad98:	mov	fp, r1
    ad9a:	vpush	{d8}
    ad9e:	ldr.w	r3, [pc, #1460]	; b354 <btrfs_show_qgroups@@Base+0x5c0>
    ada2:	sub	sp, #164	; 0xa4
    ada4:	add	r6, sp, #48	; 0x30
    ada6:	str	r2, [sp, #20]
    ada8:	ldr.w	r2, [pc, #1452]	; b358 <btrfs_show_qgroups@@Base+0x5c4>
    adac:	mov	r1, r6
    adae:	add	r2, pc
    adb0:	ldr	r3, [r2, r3]
    adb2:	ldr	r3, [r3, #0]
    adb4:	str	r3, [sp, #156]	; 0x9c
    adb6:	mov.w	r3, #0
    adba:	bl	a93c <btrfs_find_free_objectid@@Base+0x9d8>
    adbe:	str	r0, [sp, #16]
    adc0:	cmp	r0, #0
    adc2:	bne.n	aea6 <btrfs_show_qgroups@@Base+0x112>
    adc4:	ldr.w	r9, [pc, #1428]	; b35c <btrfs_show_qgroups@@Base+0x5c8>
    adc8:	mov	r4, fp
    adca:	ldr.w	sl, [pc, #1428]	; b360 <btrfs_show_qgroups@@Base+0x5cc>
    adce:	mov	r5, r0
    add0:	ldr.w	r7, [fp, #4]
    add4:	add	r9, pc
    add6:	ldr.w	r8, [sp, #48]	; 0x30
    adda:	add	sl, pc
    addc:	str	r0, [sp, #52]	; 0x34
    adde:	cmp	r5, r7
    ade0:	blt.n	aec0 <btrfs_show_qgroups@@Base+0x12c>
    ade2:	mov	r0, r6
    ade4:	bl	13e56 <rb_last@@Base>
    ade8:	ldr.w	r3, [pc, #1400]	; b364 <btrfs_show_qgroups@@Base+0x5d0>
    adec:	add	r3, pc
    adee:	adds	r3, #86	; 0x56
    adf0:	vmov	s17, r3
    adf4:	mov	r4, r0
    adf6:	cmp	r4, #0
    adf8:	bne.n	aee0 <btrfs_show_qgroups@@Base+0x14c>
    adfa:	ldr.w	r3, [pc, #1388]	; b368 <btrfs_show_qgroups@@Base+0x5d4>
    adfe:	ldr.w	r6, [pc, #1388]	; b36c <btrfs_show_qgroups@@Base+0x5d8>
    ae02:	ldr.w	r7, [pc, #1388]	; b370 <btrfs_show_qgroups@@Base+0x5dc>
    ae06:	add	r3, pc
    ae08:	add	r6, pc
    ae0a:	str	r3, [sp, #20]
    ae0c:	add	r7, pc
    ae0e:	mov	r5, r3
    ae10:	ldr	r3, [r5, #8]
    ae12:	cbz	r3, ae32 <btrfs_show_qgroups@@Base+0x9e>
    ae14:	subs	r3, r4, #5
    ae16:	ldr	r2, [r5, #16]
    ae18:	cmp	r3, #1
    ae1a:	ldr	r3, [r5, #0]
    ae1c:	bls.n	ae24 <btrfs_show_qgroups@@Base+0x90>
    ae1e:	cmp	r4, #0
    ae20:	bne.w	b140 <btrfs_show_qgroups@@Base+0x3ac>
    ae24:	mov	r1, r6
    ae26:	movs	r0, #1
    ae28:	blx	87f4 <__printf_chk@plt+0x4>
    ae2c:	movs	r0, #32
    ae2e:	blx	8790 <putchar@plt+0x4>
    ae32:	adds	r4, #1
    ae34:	adds	r5, #20
    ae36:	cmp	r4, #7
    ae38:	bne.n	ae10 <btrfs_show_qgroups@@Base+0x7c>
    ae3a:	movs	r0, #10
    ae3c:	movs	r6, #0
    ae3e:	blx	8790 <putchar@plt+0x4>
    ae42:	ldr	r4, [sp, #20]
    ae44:	ldr	r3, [r4, #8]
    ae46:	cbz	r3, ae78 <btrfs_show_qgroups@@Base+0xe4>
    ae48:	subs	r3, r6, #5
    ae4a:	ldr	r5, [r4, #16]
    ae4c:	cmp	r3, #1
    ae4e:	ldr	r0, [r4, #0]
    ae50:	bls.n	ae58 <btrfs_show_qgroups@@Base+0xc4>
    ae52:	cmp	r6, #0
    ae54:	bne.w	b154 <btrfs_show_qgroups@@Base+0x3c0>
    ae58:	blx	8704 <strlen@plt>
    ae5c:	mov	r7, r0
    ae5e:	subs	r7, #1
    ae60:	bcs.w	b144 <btrfs_show_qgroups@@Base+0x3b0>
    ae64:	ldr	r0, [r4, #0]
    ae66:	blx	8704 <strlen@plt>
    ae6a:	subs	r5, r5, r0
    ae6c:	subs	r5, #1
    ae6e:	bcs.w	b14c <btrfs_show_qgroups@@Base+0x3b8>
    ae72:	movs	r0, #32
    ae74:	blx	8790 <putchar@plt+0x4>
    ae78:	adds	r6, #1
    ae7a:	adds	r4, #20
    ae7c:	cmp	r6, #7
    ae7e:	bne.n	ae44 <btrfs_show_qgroups@@Base+0xb0>
    ae80:	movs	r0, #10
    ae82:	blx	8790 <putchar@plt+0x4>
    ae86:	add	r0, sp, #52	; 0x34
    ae88:	bl	13e46 <rb_first@@Base>
    ae8c:	ldr.w	r3, [pc, #1252]	; b374 <btrfs_show_qgroups@@Base+0x5e0>
    ae90:	add	r3, pc
    ae92:	adds	r3, #111	; 0x6f
    ae94:	vmov	s17, r3
    ae98:	mov	r4, r0
    ae9a:	cmp	r4, #0
    ae9c:	bne.w	b17c <btrfs_show_qgroups@@Base+0x3e8>
    aea0:	add	r0, sp, #48	; 0x30
    aea2:	bl	a594 <btrfs_find_free_objectid@@Base+0x630>
    aea6:	ldr.w	r2, [pc, #1232]	; b378 <btrfs_show_qgroups@@Base+0x5e4>
    aeaa:	ldr.w	r3, [pc, #1192]	; b354 <btrfs_show_qgroups@@Base+0x5c0>
    aeae:	add	r2, pc
    aeb0:	ldr	r3, [r2, r3]
    aeb2:	ldr	r2, [r3, #0]
    aeb4:	ldr	r3, [sp, #156]	; 0x9c
    aeb6:	eors	r2, r3
    aeb8:	beq.w	b348 <btrfs_show_qgroups@@Base+0x5b4>
    aebc:	blx	84cc <__stack_chk_fail@plt>
    aec0:	ldr	r3, [r4, #8]
    aec2:	cmp	r3, r9
    aec4:	beq.n	aeca <btrfs_show_qgroups@@Base+0x136>
    aec6:	cmp	r3, sl
    aec8:	bne.n	aeda <btrfs_show_qgroups@@Base+0x146>
    aeca:	ldrd	r2, r3, [r4, #16]
    aece:	mov	r0, r8
    aed0:	bl	a414 <btrfs_find_free_objectid@@Base+0x4b0>
    aed4:	movs	r1, #0
    aed6:	str	r1, [r4, #20]
    aed8:	str	r0, [r4, #16]
    aeda:	adds	r5, #1
    aedc:	adds	r4, #16
    aede:	b.n	adde <btrfs_show_qgroups@@Base+0x4a>
    aee0:	ldr.w	r3, [fp, #4]
    aee4:	cbnz	r3, af32 <btrfs_show_qgroups@@Base+0x19e>
    aee6:	add	r5, sp, #52	; 0x34
    aee8:	ldr.w	r2, [pc, #1168]	; b37c <btrfs_show_qgroups@@Base+0x5e8>
    aeec:	movs	r3, #0
    aeee:	mov	sl, r5
    aef0:	add	r2, pc
    aef2:	str	r2, [sp, #40]	; 0x28
    aef4:	ldr	r6, [r5, #0]
    aef6:	cbnz	r6, af38 <btrfs_show_qgroups@@Base+0x1a4>
    aef8:	add.w	r0, r4, #12
    aefc:	strd	r3, r6, [r4, #12]
    af00:	str	r6, [r4, #20]
    af02:	mov	r1, sl
    af04:	str	r0, [r5, #0]
    af06:	bl	13b2a <rb_insert_color@@Base>
    af0a:	b.n	af74 <btrfs_show_qgroups@@Base+0x1e0>
    af0c:	adds	r5, #1
    af0e:	ldr.w	r3, [fp, #4]
    af12:	cmp	r5, r3
    af14:	bge.n	aee6 <btrfs_show_qgroups@@Base+0x152>
    af16:	ldr	r1, [r6, #8]
    af18:	cmp	r1, #0
    af1a:	beq.n	aee6 <btrfs_show_qgroups@@Base+0x152>
    af1c:	ldrd	r2, r3, [r6, #16]!
    af20:	mov	r0, r4
    af22:	blx	r1
    af24:	cmp	r0, #0
    af26:	bne.n	af0c <btrfs_show_qgroups@@Base+0x178>
    af28:	mov	r0, r4
    af2a:	bl	13e92 <rb_prev@@Base>
    af2e:	mov	r4, r0
    af30:	b.n	adf6 <btrfs_show_qgroups@@Base+0x62>
    af32:	mov	r6, fp
    af34:	movs	r5, #0
    af36:	b.n	af0e <btrfs_show_qgroups@@Base+0x17a>
    af38:	ldr	r3, [sp, #20]
    af3a:	sub.w	r1, r6, #12
    af3e:	cbnz	r3, af56 <btrfs_show_qgroups@@Base+0x1c2>
    af40:	movs	r2, #0
    af42:	mov	r0, r4
    af44:	bl	a154 <btrfs_find_free_objectid@@Base+0x1f0>
    af48:	cmp	r0, #0
    af4a:	blt.w	b340 <btrfs_show_qgroups@@Base+0x5ac>
    af4e:	beq.n	af74 <btrfs_show_qgroups@@Base+0x1e0>
    af50:	ldr	r5, [r5, #0]
    af52:	adds	r5, #4
    af54:	b.n	b344 <btrfs_show_qgroups@@Base+0x5b0>
    af56:	ldr	r3, [sp, #20]
    af58:	ldr	r3, [r3, #4]
    af5a:	cmp	r3, #0
    af5c:	beq.n	af40 <btrfs_show_qgroups@@Base+0x1ac>
    af5e:	ldr.w	r8, [sp, #20]
    af62:	movs	r7, #0
    af64:	mov	r9, r7
    af66:	ldr	r3, [sp, #20]
    af68:	ldr	r3, [r3, #4]
    af6a:	cmp	r7, r3
    af6c:	blt.n	afb4 <btrfs_show_qgroups@@Base+0x220>
    af6e:	cmp.w	r9, #0
    af72:	beq.n	af40 <btrfs_show_qgroups@@Base+0x1ac>
    af74:	ldr.w	r3, [pc, #1032]	; b380 <btrfs_show_qgroups@@Base+0x5ec>
    af78:	movs	r7, #0
    af7a:	ldr.w	r8, [pc, #1032]	; b384 <btrfs_show_qgroups@@Base+0x5f0>
    af7e:	add	r3, pc
    af80:	add	r8, pc
    af82:	vmov	s16, r3
    af86:	ldr.w	r3, [r8, #8]
    af8a:	cmp	r3, #0
    af8c:	beq.n	b014 <btrfs_show_qgroups@@Base+0x280>
    af8e:	movs	r3, #1
    af90:	vmov	r1, s17
    af94:	vmov	r0, s16
    af98:	mov.w	r2, #936	; 0x3a8
    af9c:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    afa0:	subs	r3, r7, #1
    afa2:	ldr.w	r5, [r8, #12]
    afa6:	cmp	r3, #5
    afa8:	bhi.n	afe0 <btrfs_show_qgroups@@Base+0x24c>
    afaa:	tbb	[pc, r3]
    afae:	bx	r7
    afb0:	str	r5, [r2, #52]	; 0x34
    afb2:	ldr	r1, [sp, #452]	; 0x1c4
    afb4:	ldr.w	r3, [r8, #8]
    afb8:	cmp	r3, #0
    afba:	beq.n	af6e <btrfs_show_qgroups@@Base+0x1da>
    afbc:	ldr.w	r2, [r8, #12]
    afc0:	mov	r0, r4
    afc2:	str	r1, [sp, #44]	; 0x2c
    afc4:	blx	r3
    afc6:	cmp	r0, #0
    afc8:	bne.w	b33c <btrfs_show_qgroups@@Base+0x5a8>
    afcc:	ldr.w	r3, [r8, #8]!
    afd0:	adds	r7, #1
    afd2:	ldr	r2, [sp, #40]	; 0x28
    afd4:	ldr	r1, [sp, #44]	; 0x2c
    afd6:	cmp	r3, r2
    afd8:	it	eq
    afda:	moveq.w	r9, #1
    afde:	b.n	af66 <btrfs_show_qgroups@@Base+0x1d2>
    afe0:	ldrd	r1, r3, [r4, #40]	; 0x28
    afe4:	add	r5, sp, #56	; 0x38
    afe6:	mov	r0, r5
    afe8:	uxth	r2, r3
    afea:	lsrs	r3, r3, #16
    afec:	str	r3, [sp, #0]
    afee:	movs	r3, #0
    aff0:	str	r3, [sp, #4]
    aff2:	ldr	r3, [pc, #916]	; (b388 <btrfs_show_qgroups@@Base+0x5f4>)
    aff4:	strd	r1, r2, [sp, #8]
    aff8:	movs	r2, #100	; 0x64
    affa:	add	r3, pc
    affc:	movs	r1, #1
    affe:	blx	8758 <__sprintf_chk@plt>
    b002:	mov	r0, r5
    b004:	blx	8704 <strlen@plt>
    b008:	ldr	r3, [pc, #896]	; (b38c <btrfs_show_qgroups@@Base+0x5f8>)
    b00a:	add	r3, pc
    b00c:	ldr	r2, [r3, #16]
    b00e:	cmp	r0, r2
    b010:	ble.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b012:	str	r0, [r3, #16]
    b014:	adds	r7, #1
    b016:	add.w	r8, r8, #20
    b01a:	cmp	r7, #7
    b01c:	bne.n	af86 <btrfs_show_qgroups@@Base+0x1f2>
    b01e:	b.n	af28 <btrfs_show_qgroups@@Base+0x194>
    b020:	mov	r2, r5
    b022:	ldrd	r0, r1, [r4, #56]	; 0x38
    b026:	bl	30500 <pretty_size_mode@@Base>
    b02a:	blx	8704 <strlen@plt>
    b02e:	ldr	r3, [pc, #864]	; (b390 <btrfs_show_qgroups@@Base+0x5fc>)
    b030:	add	r3, pc
    b032:	ldr	r2, [r3, #36]	; 0x24
    b034:	cmp	r0, r2
    b036:	ble.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b038:	str	r0, [r3, #36]	; 0x24
    b03a:	b.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b03c:	mov	r2, r5
    b03e:	ldrd	r0, r1, [r4, #72]	; 0x48
    b042:	bl	30500 <pretty_size_mode@@Base>
    b046:	blx	8704 <strlen@plt>
    b04a:	ldr	r3, [pc, #840]	; (b394 <btrfs_show_qgroups@@Base+0x600>)
    b04c:	add	r3, pc
    b04e:	ldr	r2, [r3, #56]	; 0x38
    b050:	cmp	r0, r2
    b052:	ble.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b054:	str	r0, [r3, #56]	; 0x38
    b056:	b.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b058:	mov	r2, r5
    b05a:	ldrd	r0, r1, [r4, #96]	; 0x60
    b05e:	bl	30500 <pretty_size_mode@@Base>
    b062:	blx	8704 <strlen@plt>
    b066:	ldr	r3, [pc, #816]	; (b398 <btrfs_show_qgroups@@Base+0x604>)
    b068:	add	r3, pc
    b06a:	ldr	r2, [r3, #76]	; 0x4c
    b06c:	cmp	r0, r2
    b06e:	ble.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b070:	str	r0, [r3, #76]	; 0x4c
    b072:	b.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b074:	mov	r2, r5
    b076:	ldrd	r0, r1, [r4, #104]	; 0x68
    b07a:	bl	30500 <pretty_size_mode@@Base>
    b07e:	blx	8704 <strlen@plt>
    b082:	ldr	r3, [pc, #792]	; (b39c <btrfs_show_qgroups@@Base+0x608>)
    b084:	add	r3, pc
    b086:	ldr	r2, [r3, #96]	; 0x60
    b088:	cmp	r0, r2
    b08a:	ble.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b08c:	str	r0, [r3, #96]	; 0x60
    b08e:	b.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b090:	ldr	r3, [pc, #780]	; (b3a0 <btrfs_show_qgroups@@Base+0x60c>)
    b092:	mov	r9, r4
    b094:	ldr.w	r6, [r9, #128]!
    b098:	add.w	sl, sp, #56	; 0x38
    b09c:	add	r3, pc
    b09e:	movs	r5, #0
    b0a0:	cmp	r9, r6
    b0a2:	bne.n	b0b2 <btrfs_show_qgroups@@Base+0x31e>
    b0a4:	ldr	r3, [pc, #764]	; (b3a4 <btrfs_show_qgroups@@Base+0x610>)
    b0a6:	add	r3, pc
    b0a8:	ldr	r2, [r3, #116]	; 0x74
    b0aa:	cmp	r5, r2
    b0ac:	ble.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b0ae:	str	r5, [r3, #116]	; 0x74
    b0b0:	b.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b0b2:	ldr	r2, [r6, #16]
    b0b4:	str	r3, [sp, #40]	; 0x28
    b0b6:	ldrd	r0, r2, [r2, #40]	; 0x28
    b0ba:	uxth	r1, r2
    b0bc:	lsrs	r2, r2, #16
    b0be:	strd	r0, r1, [sp, #8]
    b0c2:	movs	r1, #1
    b0c4:	str	r2, [sp, #0]
    b0c6:	mov	r0, sl
    b0c8:	movs	r2, #0
    b0ca:	str	r2, [sp, #4]
    b0cc:	movs	r2, #100	; 0x64
    b0ce:	blx	8758 <__sprintf_chk@plt>
    b0d2:	ldr	r6, [r6, #0]
    b0d4:	ldr	r3, [sp, #40]	; 0x28
    b0d6:	cmp	r6, r9
    b0d8:	add	r5, r0
    b0da:	it	ne
    b0dc:	addne	r5, #1
    b0de:	b.n	b0a0 <btrfs_show_qgroups@@Base+0x30c>
    b0e0:	mov	r9, r4
    b0e2:	ldr	r3, [pc, #708]	; (b3a8 <btrfs_show_qgroups@@Base+0x614>)
    b0e4:	ldr.w	r5, [r9, #136]!
    b0e8:	add.w	sl, sp, #56	; 0x38
    b0ec:	add	r3, pc
    b0ee:	movs	r6, #0
    b0f0:	subs	r5, #8
    b0f2:	add.w	r2, r5, #8
    b0f6:	cmp	r9, r2
    b0f8:	bne.n	b10c <btrfs_show_qgroups@@Base+0x378>
    b0fa:	ldr	r3, [pc, #688]	; (b3ac <btrfs_show_qgroups@@Base+0x618>)
    b0fc:	add	r3, pc
    b0fe:	ldr.w	r2, [r3, #136]	; 0x88
    b102:	cmp	r6, r2
    b104:	it	gt
    b106:	strgt.w	r6, [r3, #136]	; 0x88
    b10a:	b.n	b014 <btrfs_show_qgroups@@Base+0x280>
    b10c:	ldr	r2, [r5, #20]
    b10e:	str	r3, [sp, #40]	; 0x28
    b110:	ldrd	r0, r2, [r2, #40]	; 0x28
    b114:	uxth	r1, r2
    b116:	lsrs	r2, r2, #16
    b118:	strd	r0, r1, [sp, #8]
    b11c:	movs	r1, #1
    b11e:	str	r2, [sp, #0]
    b120:	mov	r0, sl
    b122:	movs	r2, #0
    b124:	str	r2, [sp, #4]
    b126:	movs	r2, #100	; 0x64
    b128:	blx	8758 <__sprintf_chk@plt>
    b12c:	ldr	r2, [r5, #8]
    b12e:	ldr	r5, [r5, #8]
    b130:	cmp	r2, r9
    b132:	ldr	r3, [sp, #40]	; 0x28
    b134:	sub.w	r5, r5, #8
    b138:	add	r6, r0
    b13a:	it	ne
    b13c:	addne	r6, #1
    b13e:	b.n	b0f2 <btrfs_show_qgroups@@Base+0x35e>
    b140:	mov	r1, r7
    b142:	b.n	ae26 <btrfs_show_qgroups@@Base+0x92>
    b144:	movs	r0, #45	; 0x2d
    b146:	blx	8790 <putchar@plt+0x4>
    b14a:	b.n	ae5e <btrfs_show_qgroups@@Base+0xca>
    b14c:	movs	r0, #32
    b14e:	blx	8790 <putchar@plt+0x4>
    b152:	b.n	ae6c <btrfs_show_qgroups@@Base+0xd8>
    b154:	blx	8704 <strlen@plt>
    b158:	subs	r5, r5, r0
    b15a:	subs	r5, #1
    b15c:	bcs.n	b174 <btrfs_show_qgroups@@Base+0x3e0>
    b15e:	ldr	r0, [r4, #0]
    b160:	blx	8704 <strlen@plt>
    b164:	mov	r5, r0
    b166:	subs	r5, #1
    b168:	bcc.w	ae72 <btrfs_show_qgroups@@Base+0xde>
    b16c:	movs	r0, #45	; 0x2d
    b16e:	blx	8790 <putchar@plt+0x4>
    b172:	b.n	b166 <btrfs_show_qgroups@@Base+0x3d2>
    b174:	movs	r0, #32
    b176:	blx	8790 <putchar@plt+0x4>
    b17a:	b.n	b15a <btrfs_show_qgroups@@Base+0x3c6>
    b17c:	ldr	r3, [pc, #560]	; (b3b0 <btrfs_show_qgroups@@Base+0x61c>)
    b17e:	mov.w	r9, #0
    b182:	ldr	r7, [sp, #20]
    b184:	add	r3, pc
    b186:	vmov	s16, r3
    b18a:	ldr	r3, [r7, #8]
    b18c:	cmp	r3, #0
    b18e:	beq.w	b2ee <btrfs_show_qgroups@@Base+0x55a>
    b192:	movs	r3, #1
    b194:	vmov	r1, s17
    b198:	vmov	r0, s16
    b19c:	movs	r2, #217	; 0xd9
    b19e:	bl	a50c <btrfs_find_free_objectid@@Base+0x5a8>
    b1a2:	add.w	r3, r9, #4294967295	; 0xffffffff
    b1a6:	ldrd	r6, r5, [r7, #12]
    b1aa:	cmp	r3, #5
    b1ac:	bhi.n	b1b8 <btrfs_show_qgroups@@Base+0x424>
    b1ae:	tbb	[pc, r3]
    b1b2:	subs	r7, r2, #0
    b1b4:	ldr	r5, [r2, #84]	; 0x54
    b1b6:	strh	r3, [r4, #16]
    b1b8:	ldrd	r1, r2, [r4, #28]
    b1bc:	movs	r0, #1
    b1be:	uxth	r3, r2
    b1c0:	strd	r1, r3, [sp]
    b1c4:	ldr	r1, [pc, #492]	; (b3b4 <btrfs_show_qgroups@@Base+0x620>)
    b1c6:	lsrs	r2, r2, #16
    b1c8:	movs	r3, #0
    b1ca:	add	r1, pc
    b1cc:	blx	87f4 <__printf_chk@plt+0x4>
    b1d0:	mov	r1, r0
    b1d2:	movs	r0, #0
    b1d4:	bl	a338 <btrfs_find_free_objectid@@Base+0x3d4>
    b1d8:	movs	r0, #32
    b1da:	blx	8790 <putchar@plt+0x4>
    b1de:	b.n	b2ee <btrfs_show_qgroups@@Base+0x55a>
    b1e0:	ldrd	r0, r1, [r4, #44]	; 0x2c
    b1e4:	mov	r3, r5
    b1e6:	mov	r2, r6
    b1e8:	bl	a35c <btrfs_find_free_objectid@@Base+0x3f8>
    b1ec:	b.n	b1d8 <btrfs_show_qgroups@@Base+0x444>
    b1ee:	ldrd	r0, r1, [r4, #60]	; 0x3c
    b1f2:	mov	r3, r5
    b1f4:	mov	r2, r6
    b1f6:	b.n	b1e8 <btrfs_show_qgroups@@Base+0x454>
    b1f8:	ldr.w	sl, [pc, #444]	; b3b8 <btrfs_show_qgroups@@Base+0x624>
    b1fc:	mov	r6, r4
    b1fe:	ldr.w	fp, [pc, #444]	; b3bc <btrfs_show_qgroups@@Base+0x628>
    b202:	movs	r5, #0
    b204:	ldr.w	r8, [r6, #116]!
    b208:	add	sl, pc
    b20a:	add	fp, pc
    b20c:	cmp	r6, r8
    b20e:	bne.n	b228 <btrfs_show_qgroups@@Base+0x494>
    b210:	ldr	r3, [r4, #116]	; 0x74
    b212:	cmp	r6, r3
    b214:	bne.n	b222 <btrfs_show_qgroups@@Base+0x48e>
    b216:	ldr	r1, [pc, #424]	; (b3c0 <btrfs_show_qgroups@@Base+0x62c>)
    b218:	movs	r0, #1
    b21a:	add	r1, pc
    b21c:	blx	87f4 <__printf_chk@plt+0x4>
    b220:	add	r5, r0
    b222:	mov	r1, r5
    b224:	movs	r0, #5
    b226:	b.n	b1d4 <btrfs_show_qgroups@@Base+0x440>
    b228:	ldr.w	r3, [r8, #16]
    b22c:	movs	r0, #1
    b22e:	ldrd	r1, r2, [r3, #40]	; 0x28
    b232:	uxth	r3, r2
    b234:	lsrs	r2, r2, #16
    b236:	strd	r1, r3, [sp]
    b23a:	movs	r3, #0
    b23c:	mov	r1, sl
    b23e:	blx	87f4 <__printf_chk@plt+0x4>
    b242:	ldr.w	r3, [r8]
    b246:	cmp	r3, r6
    b248:	add	r5, r0
    b24a:	beq.n	b256 <btrfs_show_qgroups@@Base+0x4c2>
    b24c:	mov	r1, fp
    b24e:	movs	r0, #1
    b250:	blx	87f4 <__printf_chk@plt+0x4>
    b254:	add	r5, r0
    b256:	ldr.w	r8, [r8]
    b25a:	b.n	b20c <btrfs_show_qgroups@@Base+0x478>
    b25c:	ldr	r3, [r4, #76]	; 0x4c
    b25e:	and.w	r3, r3, #1
    b262:	str	r3, [sp, #24]
    b264:	movs	r3, #0
    b266:	str	r3, [sp, #28]
    b268:	ldrd	r2, r3, [sp, #24]
    b26c:	orrs	r3, r2
    b26e:	beq.n	b27a <btrfs_show_qgroups@@Base+0x4e6>
    b270:	ldrd	r0, r1, [r4, #84]	; 0x54
    b274:	mov	r3, r5
    b276:	mov	r2, r6
    b278:	b.n	b1e8 <btrfs_show_qgroups@@Base+0x454>
    b27a:	ldr	r3, [pc, #328]	; (b3c4 <btrfs_show_qgroups@@Base+0x630>)
    b27c:	mov	r2, r5
    b27e:	ldr	r1, [pc, #328]	; (b3c8 <btrfs_show_qgroups@@Base+0x634>)
    b280:	add	r3, pc
    b282:	add	r1, pc
    b284:	movs	r0, #1
    b286:	blx	87f4 <__printf_chk@plt+0x4>
    b28a:	b.n	b1d8 <btrfs_show_qgroups@@Base+0x444>
    b28c:	ldr	r3, [r4, #76]	; 0x4c
    b28e:	and.w	r3, r3, #2
    b292:	str	r3, [sp, #32]
    b294:	movs	r3, #0
    b296:	str	r3, [sp, #36]	; 0x24
    b298:	ldrd	r2, r3, [sp, #32]
    b29c:	orrs	r3, r2
    b29e:	beq.n	b2aa <btrfs_show_qgroups@@Base+0x516>
    b2a0:	ldrd	r0, r1, [r4, #92]	; 0x5c
    b2a4:	mov	r3, r5
    b2a6:	mov	r2, r6
    b2a8:	b.n	b1e8 <btrfs_show_qgroups@@Base+0x454>
    b2aa:	ldr	r3, [pc, #288]	; (b3cc <btrfs_show_qgroups@@Base+0x638>)
    b2ac:	mov	r2, r5
    b2ae:	ldr	r1, [pc, #288]	; (b3d0 <btrfs_show_qgroups@@Base+0x63c>)
    b2b0:	add	r3, pc
    b2b2:	add	r1, pc
    b2b4:	b.n	b284 <btrfs_show_qgroups@@Base+0x4f0>
    b2b6:	mov	r8, r4
    b2b8:	ldr.w	sl, [pc, #280]	; b3d4 <btrfs_show_qgroups@@Base+0x640>
    b2bc:	ldr.w	r5, [r8, #124]!
    b2c0:	movs	r6, #0
    b2c2:	ldr.w	fp, [pc, #276]	; b3d8 <btrfs_show_qgroups@@Base+0x644>
    b2c6:	add	sl, pc
    b2c8:	subs	r5, #8
    b2ca:	add	fp, pc
    b2cc:	add.w	r3, r5, #8
    b2d0:	cmp	r8, r3
    b2d2:	bne.n	b30c <btrfs_show_qgroups@@Base+0x578>
    b2d4:	ldr	r3, [r4, #124]	; 0x7c
    b2d6:	cmp	r8, r3
    b2d8:	bne.n	b2e6 <btrfs_show_qgroups@@Base+0x552>
    b2da:	ldr	r1, [pc, #256]	; (b3dc <btrfs_show_qgroups@@Base+0x648>)
    b2dc:	movs	r0, #1
    b2de:	add	r1, pc
    b2e0:	blx	87f4 <__printf_chk@plt+0x4>
    b2e4:	add	r6, r0
    b2e6:	mov	r1, r6
    b2e8:	movs	r0, #6
    b2ea:	bl	a338 <btrfs_find_free_objectid@@Base+0x3d4>
    b2ee:	add.w	r9, r9, #1
    b2f2:	adds	r7, #20
    b2f4:	cmp.w	r9, #7
    b2f8:	bne.w	b18a <btrfs_show_qgroups@@Base+0x3f6>
    b2fc:	movs	r0, #10
    b2fe:	blx	8790 <putchar@plt+0x4>
    b302:	mov	r0, r4
    b304:	bl	13e66 <rb_next@@Base>
    b308:	mov	r4, r0
    b30a:	b.n	ae9a <btrfs_show_qgroups@@Base+0x106>
    b30c:	ldr	r3, [r5, #20]
    b30e:	movs	r0, #1
    b310:	ldrd	r1, r2, [r3, #40]	; 0x28
    b314:	uxth	r3, r2
    b316:	lsrs	r2, r2, #16
    b318:	strd	r1, r3, [sp]
    b31c:	movs	r3, #0
    b31e:	mov	r1, sl
    b320:	blx	87f4 <__printf_chk@plt+0x4>
    b324:	ldr	r3, [r5, #8]
    b326:	cmp	r3, r8
    b328:	add	r6, r0
    b32a:	beq.n	b336 <btrfs_show_qgroups@@Base+0x5a2>
    b32c:	mov	r1, fp
    b32e:	movs	r0, #1
    b330:	blx	87f4 <__printf_chk@plt+0x4>
    b334:	add	r6, r0
    b336:	ldr	r5, [r5, #8]
    b338:	subs	r5, #8
    b33a:	b.n	b2cc <btrfs_show_qgroups@@Base+0x538>
    b33c:	bge.w	af50 <btrfs_show_qgroups@@Base+0x1bc>
    b340:	ldr	r5, [r5, #0]
    b342:	adds	r5, #8
    b344:	mov	r3, r6
    b346:	b.n	aef4 <btrfs_show_qgroups@@Base+0x160>
    b348:	ldr	r0, [sp, #16]
    b34a:	add	sp, #164	; 0xa4
    b34c:	vpop	{d8}
    b350:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b354:	lsls	r4, r4, #8
    b356:	movs	r0, r0
    b358:	ldr	r7, [sp, #872]	; 0x368
    b35a:	movs	r5, r0
    b35c:	bl	ffcc735e <__bss_end__@@Base+0xffc610ce>
    b360:	bl	ffc55362 <__bss_end__@@Base+0xffbef0d2>
    b364:			; <UNDEFINED> instruction: 0xf73b0002
    b368:	add	r1, pc, #1016	; (adr r1, b764 <list_sort@@Base+0x144>)
    b36a:	movs	r5, r0
    b36c:			; <UNDEFINED> instruction: 0xf65f0002
    b370:			; <UNDEFINED> instruction: 0xf3b60002
    b374:			; <UNDEFINED> instruction: 0xf6970002
    b378:	ldr	r6, [sp, #872]	; 0x368
    b37a:	movs	r5, r0
    b37c:	bl	26d37e <__bss_end__@@Base+0x2070ee>
    b380:			; <UNDEFINED> instruction: 0xf4c00002
    b384:	add	r0, pc, #528	; (adr r0, b598 <qgroup_inherit_add_copy@@Base+0x94>)
    b386:	movs	r5, r0
    b388:			; <UNDEFINED> instruction: 0xf2f40002
    b38c:	ldr	r7, [sp, #1000]	; 0x3e8
    b38e:	movs	r5, r0
    b390:	ldr	r7, [sp, #848]	; 0x350
    b392:	movs	r5, r0
    b394:	ldr	r7, [sp, #736]	; 0x2e0
    b396:	movs	r5, r0
    b398:	ldr	r7, [sp, #624]	; 0x270
    b39a:	movs	r5, r0
    b39c:	ldr	r7, [sp, #512]	; 0x200
    b39e:	movs	r5, r0
    b3a0:			; <UNDEFINED> instruction: 0xf2520002
    b3a4:	ldr	r7, [sp, #376]	; 0x178
    b3a6:	movs	r5, r0
    b3a8:	addw	r0, r2, #2
    b3ac:	ldr	r7, [sp, #32]
    b3ae:	movs	r5, r0
    b3b0:			; <UNDEFINED> instruction: 0xf2ba0002
    b3b4:			; <UNDEFINED> instruction: 0xf1240002
    b3b8:			; <UNDEFINED> instruction: 0xf0e60002
    b3bc:			; <UNDEFINED> instruction: 0xf2620002
    b3c0:			; <UNDEFINED> instruction: 0xf2540002
    b3c4:	lsls	r1, r4, #27
    b3c6:	movs	r3, r0
    b3c8:	vhadd.s8	d16, d0, d2
    b3cc:	lsls	r1, r6, #26
    b3ce:	movs	r3, r0
    b3d0:	vhadd.s16	d0, d0, d2
    b3d4:	bic.w	r0, r8, #2
    b3d8:	sub.w	r0, r2, #2
    b3dc:			; <UNDEFINED> instruction: 0xf1900002

0000b3e0 <btrfs_qgroup_parse_sort_string@@Base>:
    b3e0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b3e4:	mov	r7, r1
    b3e6:	blx	84b4 <strdup@plt+0x4>
    b3ea:	mov	r5, r0
    b3ec:	cmp	r0, #0
    b3ee:	beq.n	b474 <btrfs_qgroup_parse_sort_string@@Base+0x94>
    b3f0:	ldr	r1, [pc, #160]	; (b494 <btrfs_qgroup_parse_sort_string@@Base+0xb4>)
    b3f2:	ldr.w	r8, [pc, #164]	; b498 <btrfs_qgroup_parse_sort_string@@Base+0xb8>
    b3f6:	add	r1, pc
    b3f8:	ldr.w	r9, [pc, #160]	; b49c <btrfs_qgroup_parse_sort_string@@Base+0xbc>
    b3fc:	blx	884c <strtok@plt>
    b400:	add	r8, pc
    b402:	add	r9, pc
    b404:	mov	r4, r0
    b406:	cbz	r4, b436 <btrfs_qgroup_parse_sort_string@@Base+0x56>
    b408:	add.w	fp, r8, #160	; 0xa0
    b40c:	add.w	sl, r4, #1
    b410:	mov	r6, fp
    b412:	b.n	b42c <btrfs_qgroup_parse_sort_string@@Base+0x4c>
    b414:	mov	r1, r4
    b416:	mov	r0, r3
    b418:	str	r3, [sp, #4]
    b41a:	blx	837c <strcmp@plt>
    b41e:	cbz	r0, b444 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    b420:	ldr	r3, [sp, #4]
    b422:	mov	r1, sl
    b424:	mov	r0, r3
    b426:	blx	837c <strcmp@plt>
    b42a:	cbz	r0, b444 <btrfs_qgroup_parse_sort_string@@Base+0x64>
    b42c:	ldr.w	r3, [r6], #4
    b430:	cmp	r3, #0
    b432:	bne.n	b414 <btrfs_qgroup_parse_sort_string@@Base+0x34>
    b434:	movs	r4, #1
    b436:	mov	r0, r5
    b438:	blx	83f0 <free@plt+0x4>
    b43c:	mov	r0, r4
    b43e:	add	sp, #12
    b440:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b444:	ldrb	r3, [r4, #0]
    b446:	cmp	r3, #43	; 0x2b
    b448:	bne.n	b450 <btrfs_qgroup_parse_sort_string@@Base+0x70>
    b44a:	adds	r4, #1
    b44c:	movs	r2, #0
    b44e:	b.n	b458 <btrfs_qgroup_parse_sort_string@@Base+0x78>
    b450:	cmp	r3, #45	; 0x2d
    b452:	bne.n	b44c <btrfs_qgroup_parse_sort_string@@Base+0x6c>
    b454:	adds	r4, #1
    b456:	movs	r2, #1
    b458:	movs	r6, #0
    b45a:	ldr.w	r1, [fp], #4
    b45e:	mov	r0, r4
    b460:	str	r2, [sp, #4]
    b462:	blx	837c <strcmp@plt>
    b466:	ldr	r2, [sp, #4]
    b468:	mov	sl, r0
    b46a:	cbz	r0, b47a <btrfs_qgroup_parse_sort_string@@Base+0x9a>
    b46c:	adds	r6, #1
    b46e:	cmp	r6, #5
    b470:	bne.n	b45a <btrfs_qgroup_parse_sort_string@@Base+0x7a>
    b472:	b.n	b434 <btrfs_qgroup_parse_sort_string@@Base+0x54>
    b474:	mvn.w	r4, #11
    b478:	b.n	b43c <btrfs_qgroup_parse_sort_string@@Base+0x5c>
    b47a:	mov	r1, r6
    b47c:	mov	r0, r7
    b47e:	bl	aa90 <btrfs_qgroup_setup_comparer@@Base>
    b482:	subs	r4, r0, #0
    b484:	blt.n	b436 <btrfs_qgroup_parse_sort_string@@Base+0x56>
    b486:	mov	r1, r9
    b488:	mov	r0, sl
    b48a:	blx	884c <strtok@plt>
    b48e:	mov	r4, r0
    b490:	b.n	b406 <btrfs_qgroup_parse_sort_string@@Base+0x26>
    b492:	nop
    b494:	orns	r0, r6, #2
    b498:	ldr	r4, [sp, #16]
    b49a:	movs	r5, r0
    b49c:	orn	r0, sl, #2

0000b4a0 <qgroup_inherit_size@@Base>:
    b4a0:	ldr	r3, [r0, #24]
    b4a2:	ldr	r2, [r0, #16]
    b4a4:	adds	r2, r3, r2
    b4a6:	ldr	r3, [r0, #8]
    b4a8:	adds	r3, #9
    b4aa:	add.w	r0, r3, r2, lsl #1
    b4ae:	lsls	r0, r0, #3
    b4b0:	bx	lr

0000b4b2 <qgroup_inherit_add_group@@Base>:
    b4b2:	push	{r4, r5, r6, lr}
    b4b4:	mov	r6, r0
    b4b6:	mov	r0, r1
    b4b8:	bl	309b4 <parse_qgroupid@@Base>
    b4bc:	mov	r4, r0
    b4be:	mov	r5, r1
    b4c0:	orrs.w	r3, r4, r5
    b4c4:	bne.n	b4d4 <qgroup_inherit_add_group@@Base+0x22>
    b4c6:	ldr	r0, [pc, #56]	; (b500 <qgroup_inherit_add_group@@Base+0x4e>)
    b4c8:	add	r0, pc
    b4ca:	bl	1747c <__btrfs_error@@Base>
    b4ce:	mvn.w	r0, #21
    b4d2:	pop	{r4, r5, r6, pc}
    b4d4:	ldr	r2, [r6, #0]
    b4d6:	cbz	r2, b4da <qgroup_inherit_add_group@@Base+0x28>
    b4d8:	ldr	r2, [r2, #8]
    b4da:	movs	r1, #1
    b4dc:	mov	r0, r6
    b4de:	bl	a37c <btrfs_find_free_objectid@@Base+0x418>
    b4e2:	cmp	r0, #0
    b4e4:	bne.n	b4d2 <qgroup_inherit_add_group@@Base+0x20>
    b4e6:	ldr	r3, [r6, #0]
    b4e8:	ldrd	r2, r1, [r3, #8]
    b4ec:	adds	r6, r2, #1
    b4ee:	adc.w	r1, r1, #0
    b4f2:	strd	r6, r1, [r3, #8]
    b4f6:	add.w	r3, r3, r2, lsl #3
    b4fa:	strd	r4, r5, [r3, #72]	; 0x48
    b4fe:	b.n	b4d2 <qgroup_inherit_add_group@@Base+0x20>
    b500:	vaddl.s32	q0, d10, d2

0000b504 <qgroup_inherit_add_copy@@Base>:
    b504:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    b508:	mov	r6, r1
    b50a:	mov	sl, r0
    b50c:	movs	r1, #58	; 0x3a
    b50e:	mov	r0, r6
    b510:	mov	r5, r2
    b512:	blx	8710 <strchr@plt>
    b516:	mov	r4, r0
    b518:	cbnz	r0, b52a <qgroup_inherit_add_copy@@Base+0x26>
    b51a:	ldr	r0, [pc, #152]	; (b5b4 <qgroup_inherit_add_copy@@Base+0xb0>)
    b51c:	add	r0, pc
    b51e:	bl	1747c <__btrfs_error@@Base>
    b522:	mvn.w	r0, #21
    b526:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b52a:	mov	r8, r0
    b52c:	movs	r3, #0
    b52e:	mov	r0, r6
    b530:	strb.w	r3, [r8], #1
    b534:	bl	309b4 <parse_qgroupid@@Base>
    b538:	mov	r6, r0
    b53a:	mov	r0, r8
    b53c:	mov	r7, r1
    b53e:	bl	309b4 <parse_qgroupid@@Base>
    b542:	movs	r3, #58	; 0x3a
    b544:	strb	r3, [r4, #0]
    b546:	orrs.w	r3, r6, r7
    b54a:	mov	r8, r0
    b54c:	mov	r9, r1
    b54e:	beq.n	b51a <qgroup_inherit_add_copy@@Base+0x16>
    b550:	orrs.w	r3, r8, r9
    b554:	beq.n	b51a <qgroup_inherit_add_copy@@Base+0x16>
    b556:	ldr.w	r4, [sl]
    b55a:	cbz	r4, b566 <qgroup_inherit_add_copy@@Base+0x62>
    b55c:	ldr	r2, [r4, #16]
    b55e:	ldr	r4, [r4, #8]
    b560:	muls	r2, r5
    b562:	add.w	r4, r4, r2, lsl #1
    b566:	mov	r2, r4
    b568:	movs	r1, #2
    b56a:	mov	r0, sl
    b56c:	bl	a37c <btrfs_find_free_objectid@@Base+0x418>
    b570:	cmp	r0, #0
    b572:	bne.n	b526 <qgroup_inherit_add_copy@@Base+0x22>
    b574:	ldr.w	r3, [sl]
    b578:	add.w	r3, r3, r4, lsl #3
    b57c:	strd	r6, r7, [r3, #72]	; 0x48
    b580:	ldr.w	r2, [sl]
    b584:	add.w	r2, r2, r4, lsl #3
    b588:	strd	r8, r9, [r2, #80]	; 0x50
    b58c:	ldr.w	r3, [sl]
    b590:	cbnz	r5, b5a2 <qgroup_inherit_add_copy@@Base+0x9e>
    b592:	ldrd	r2, r1, [r3, #16]
    b596:	adds	r2, #1
    b598:	adc.w	r1, r1, #0
    b59c:	strd	r2, r1, [r3, #16]
    b5a0:	b.n	b526 <qgroup_inherit_add_copy@@Base+0x22>
    b5a2:	ldrd	r2, r1, [r3, #24]
    b5a6:	adds	r2, #1
    b5a8:	adc.w	r1, r1, #0
    b5ac:	strd	r2, r1, [r3, #24]
    b5b0:	b.n	b526 <qgroup_inherit_add_copy@@Base+0x22>
    b5b2:	nop
    b5b4:	vaddl.s8	q0, d8, d2
    b5b8:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    b5bc:	mov	r5, r2
    b5be:	ldr	r2, [pc, #84]	; (b614 <qgroup_inherit_add_copy@@Base+0x110>)
    b5c0:	mov	r4, r3
    b5c2:	ldr	r3, [pc, #84]	; (b618 <qgroup_inherit_add_copy@@Base+0x114>)
    b5c4:	add	r6, sp, #4
    b5c6:	add	r2, pc
    b5c8:	mov	r7, r0
    b5ca:	mov	r8, r1
    b5cc:	ldr	r3, [r2, r3]
    b5ce:	ldr	r3, [r3, #0]
    b5d0:	str	r3, [sp, #12]
    b5d2:	mov.w	r3, #0
    b5d6:	cbz	r5, b5dc <qgroup_inherit_add_copy@@Base+0xd8>
    b5d8:	cbnz	r4, b5f4 <qgroup_inherit_add_copy@@Base+0xf0>
    b5da:	mov	r4, r5
    b5dc:	ldr	r2, [pc, #60]	; (b61c <qgroup_inherit_add_copy@@Base+0x118>)
    b5de:	ldr	r3, [pc, #56]	; (b618 <qgroup_inherit_add_copy@@Base+0x114>)
    b5e0:	add	r2, pc
    b5e2:	str	r4, [r6, #0]
    b5e4:	ldr	r0, [sp, #4]
    b5e6:	ldr	r3, [r2, r3]
    b5e8:	ldr	r2, [r3, #0]
    b5ea:	ldr	r3, [sp, #12]
    b5ec:	eors	r2, r3
    b5ee:	beq.n	b60c <qgroup_inherit_add_copy@@Base+0x108>
    b5f0:	blx	84cc <__stack_chk_fail@plt>
    b5f4:	mov	r2, r4
    b5f6:	mov	r1, r5
    b5f8:	mov	r0, r7
    b5fa:	blx	r8
    b5fc:	cmp	r0, #0
    b5fe:	itete	le
    b600:	strle	r5, [r6, #0]
    b602:	strgt	r4, [r6, #0]
    b604:	ldrle	r5, [r5, #0]
    b606:	ldrgt	r4, [r4, #0]
    b608:	ldr	r6, [r6, #0]
    b60a:	b.n	b5d6 <qgroup_inherit_add_copy@@Base+0xd2>
    b60c:	add	sp, #16
    b60e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    b612:	nop
    b614:	str	r7, [sp, #776]	; 0x308
    b616:	movs	r5, r0
    b618:	lsls	r4, r4, #8
    b61a:	movs	r0, r0
    b61c:	str	r7, [sp, #672]	; 0x2a0
    b61e:	movs	r5, r0

0000b620 <list_sort@@Base>:
    b620:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b624:	mov	r7, r2
    b626:	ldr	r2, [pc, #268]	; (b734 <list_sort@@Base+0x114>)
    b628:	sub	sp, #100	; 0x64
    b62a:	ldr	r3, [pc, #268]	; (b738 <list_sort@@Base+0x118>)
    b62c:	mov	r8, r0
    b62e:	add	r2, pc
    b630:	mov	r4, r1
    b632:	ldr	r3, [r2, r3]
    b634:	ldr	r3, [r3, #0]
    b636:	str	r3, [sp, #92]	; 0x5c
    b638:	mov.w	r3, #0
    b63c:	ldr	r3, [r1, #0]
    b63e:	cmp	r1, r3
    b640:	beq.n	b694 <list_sort@@Base+0x74>
    b642:	add.w	r9, sp, #8
    b646:	movs	r2, #84	; 0x54
    b648:	movs	r1, #0
    b64a:	ldr.w	fp, [pc, #240]	; b73c <list_sort@@Base+0x11c>
    b64e:	mov	r0, r9
    b650:	movs	r5, #0
    b652:	blx	8780 <memset@plt+0x4>
    b656:	ldr	r3, [r4, #4]
    b658:	add	fp, pc
    b65a:	str	r5, [r3, #0]
    b65c:	ldr	r3, [r4, #0]
    b65e:	cbnz	r3, b6a8 <list_sort@@Base+0x88>
    b660:	mov	r6, r3
    b662:	cmp	r6, r5
    b664:	bne.n	b6f6 <list_sort@@Base+0xd6>
    b666:	add	r2, sp, #96	; 0x60
    b668:	mov	r5, r4
    b66a:	add.w	r6, r2, r6, lsl #2
    b66e:	ldr.w	r6, [r6, #-88]
    b672:	cbz	r6, b67a <list_sort@@Base+0x5a>
    b674:	cmp	r3, #0
    b676:	bne.n	b70a <list_sort@@Base+0xea>
    b678:	mov	r3, r6
    b67a:	str	r3, [r5, #0]
    b67c:	ldr	r2, [r5, #0]
    b67e:	mov	r0, r8
    b680:	mov	r1, r2
    b682:	blx	r7
    b684:	ldr	r3, [r5, #0]
    b686:	str	r5, [r3, #4]
    b688:	ldr	r5, [r5, #0]
    b68a:	ldr	r3, [r5, #0]
    b68c:	cmp	r3, #0
    b68e:	bne.n	b67c <list_sort@@Base+0x5c>
    b690:	str	r4, [r5, #0]
    b692:	str	r5, [r4, #4]
    b694:	ldr	r2, [pc, #168]	; (b740 <list_sort@@Base+0x120>)
    b696:	ldr	r3, [pc, #160]	; (b738 <list_sort@@Base+0x118>)
    b698:	add	r2, pc
    b69a:	ldr	r3, [r2, r3]
    b69c:	ldr	r2, [r3, #0]
    b69e:	ldr	r3, [sp, #92]	; 0x5c
    b6a0:	eors	r2, r3
    b6a2:	beq.n	b72c <list_sort@@Base+0x10c>
    b6a4:	blx	84cc <__stack_chk_fail@plt>
    b6a8:	ldr	r2, [r3, #0]
    b6aa:	mov	sl, r9
    b6ac:	str	r2, [sp, #0]
    b6ae:	movs	r2, #0
    b6b0:	mov	r6, r2
    b6b2:	str	r2, [r3, #0]
    b6b4:	ldr.w	r2, [sl], #4
    b6b8:	cbnz	r2, b6de <list_sort@@Base+0xbe>
    b6ba:	cmp	r6, r5
    b6bc:	ble.n	b6d0 <list_sort@@Base+0xb0>
    b6be:	cmp	r6, #20
    b6c0:	bne.n	b6f2 <list_sort@@Base+0xd2>
    b6c2:	mov	r0, fp
    b6c4:	str	r3, [sp, #4]
    b6c6:	blx	8618 <puts@plt+0x4>
    b6ca:	ldr	r3, [sp, #4]
    b6cc:	movs	r5, #19
    b6ce:	mov	r6, r5
    b6d0:	add	r2, sp, #96	; 0x60
    b6d2:	add.w	r6, r2, r6, lsl #2
    b6d6:	str.w	r3, [r6, #-88]
    b6da:	ldr	r3, [sp, #0]
    b6dc:	b.n	b65e <list_sort@@Base+0x3e>
    b6de:	mov	r1, r7
    b6e0:	mov	r0, r8
    b6e2:	bl	b5b8 <qgroup_inherit_add_copy@@Base+0xb4>
    b6e6:	adds	r6, #1
    b6e8:	movs	r2, #0
    b6ea:	str.w	r2, [sl, #-4]
    b6ee:	mov	r3, r0
    b6f0:	b.n	b6b4 <list_sort@@Base+0x94>
    b6f2:	mov	r5, r6
    b6f4:	b.n	b6d0 <list_sort@@Base+0xb0>
    b6f6:	ldr.w	r2, [r9, r6, lsl #2]
    b6fa:	cbz	r2, b706 <list_sort@@Base+0xe6>
    b6fc:	mov	r1, r7
    b6fe:	mov	r0, r8
    b700:	bl	b5b8 <qgroup_inherit_add_copy@@Base+0xb4>
    b704:	mov	r3, r0
    b706:	adds	r6, #1
    b708:	b.n	b662 <list_sort@@Base+0x42>
    b70a:	mov	r2, r3
    b70c:	mov	r1, r6
    b70e:	mov	r0, r8
    b710:	str	r3, [sp, #0]
    b712:	blx	r7
    b714:	ldr	r3, [sp, #0]
    b716:	cmp	r0, #0
    b718:	itete	le
    b71a:	strle	r6, [r5, #0]
    b71c:	strgt	r3, [r5, #0]
    b71e:	strle	r5, [r6, #4]
    b720:	strgt	r5, [r3, #4]
    b722:	ite	le
    b724:	ldrle	r6, [r6, #0]
    b726:	ldrgt	r3, [r3, #0]
    b728:	ldr	r5, [r5, #0]
    b72a:	b.n	b672 <list_sort@@Base+0x52>
    b72c:	add	sp, #100	; 0x64
    b72e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b732:	nop
    b734:	str	r7, [sp, #360]	; 0x168
    b736:	movs	r5, r0
    b738:	lsls	r4, r4, #8
    b73a:	movs	r0, r0
    b73c:	vhadd.s16	d16, d2, d2
    b740:	str	r6, [sp, #960]	; 0x3c0
    b742:	movs	r5, r0
    b744:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    b748:	mov	r8, r1
    b74a:	ldr	r1, [pc, #392]	; (b8d4 <list_sort@@Base+0x2b4>)
    b74c:	mov	r5, r2
    b74e:	ldr	r2, [pc, #392]	; (b8d8 <list_sort@@Base+0x2b8>)
    b750:	subs	r4, r3, #0
    b752:	add	r1, pc
    b754:	sub	sp, #24
    b756:	mov.w	r9, #0
    b75a:	mov	r0, r8
    b75c:	ldr	r2, [r1, r2]
    b75e:	add	r1, sp, #16
    b760:	ldr.w	sl, [pc, #376]	; b8dc <list_sort@@Base+0x2bc>
    b764:	ldr	r2, [r2, #0]
    b766:	str	r2, [sp, #20]
    b768:	mov.w	r2, #0
    b76c:	ite	ne
    b76e:	movne	r2, #2
    b770:	moveq	r2, r9
    b772:	str.w	r9, [sp, #16]
    b776:	bl	30b2c <open_file_or_dir3@@Base>
    b77a:	add	sl, pc
    b77c:	adds	r3, r0, #1
    b77e:	mov	r7, r0
    b780:	bne.n	b7c6 <list_sort@@Base+0x1a6>
    b782:	blx	8740 <__errno_location@plt>
    b786:	mov	r1, r8
    b788:	mov	r6, r9
    b78a:	ldr	r4, [r0, #0]
    b78c:	ldr	r0, [pc, #336]	; (b8e0 <list_sort@@Base+0x2c0>)
    b78e:	negs	r4, r4
    b790:	add	r0, pc
    b792:	bl	1747c <__btrfs_error@@Base>
    b796:	movs	r5, #0
    b798:	mov	r0, r6
    b79a:	blx	83f0 <free@plt+0x4>
    b79e:	mov	r0, r5
    b7a0:	blx	83f0 <free@plt+0x4>
    b7a4:	cmp	r7, #0
    b7a6:	blt.n	b7b0 <list_sort@@Base+0x190>
    b7a8:	ldr	r1, [sp, #16]
    b7aa:	mov	r0, r7
    b7ac:	bl	30d60 <close_file_or_dir@@Base>
    b7b0:	ldr	r2, [pc, #304]	; (b8e4 <list_sort@@Base+0x2c4>)
    b7b2:	ldr	r3, [pc, #292]	; (b8d8 <list_sort@@Base+0x2b8>)
    b7b4:	add	r2, pc
    b7b6:	ldr	r3, [r2, r3]
    b7b8:	ldr	r2, [r3, #0]
    b7ba:	ldr	r3, [sp, #20]
    b7bc:	eors	r2, r3
    b7be:	beq.w	b8cc <list_sort@@Base+0x2ac>
    b7c2:	blx	84cc <__stack_chk_fail@plt>
    b7c6:	mov	r0, r5
    b7c8:	blx	8704 <strlen@plt>
    b7cc:	adds	r0, #7
    b7ce:	blx	8634 <malloc@plt+0x4>
    b7d2:	mov	r6, r0
    b7d4:	cmp	r0, #0
    b7d6:	beq.n	b8c0 <list_sort@@Base+0x2a0>
    b7d8:	ldr	r3, [pc, #268]	; (b8e8 <list_sort@@Base+0x2c8>)
    b7da:	add	r3, pc
    b7dc:	ldr	r0, [r3, #0]
    b7de:	ldrh	r3, [r3, #4]
    b7e0:	str	r0, [r6, #0]
    b7e2:	mov	r0, r5
    b7e4:	strh	r3, [r6, #4]
    b7e6:	blx	8704 <strlen@plt>
    b7ea:	mov	r1, r5
    b7ec:	mov	r2, r0
    b7ee:	adds	r0, r6, #6
    b7f0:	blx	843c <memcpy@plt+0x4>
    b7f4:	mov	r0, r5
    b7f6:	blx	8704 <strlen@plt>
    b7fa:	add	r0, r6
    b7fc:	strb.w	r9, [r0, #6]
    b800:	cbz	r4, b844 <list_sort@@Base+0x224>
    b802:	ldr	r1, [pc, #232]	; (b8ec <list_sort@@Base+0x2cc>)
    b804:	mov	r0, r4
    b806:	add	r1, pc
    b808:	blx	837c <strcmp@plt>
    b80c:	cbz	r0, b838 <list_sort@@Base+0x218>
    b80e:	ldr	r1, [pc, #224]	; (b8f0 <list_sort@@Base+0x2d0>)
    b810:	mov	r0, r4
    b812:	add	r1, pc
    b814:	blx	837c <strcmp@plt>
    b818:	cbz	r0, b83e <list_sort@@Base+0x21e>
    b81a:	mov	r0, r4
    b81c:	movs	r5, #0
    b81e:	blx	8704 <strlen@plt>
    b822:	mov	r2, r4
    b824:	mov	r1, r6
    b826:	str	r5, [sp, #0]
    b828:	mov	r3, r0
    b82a:	mov	r0, r7
    b82c:	blx	87cc <fsetxattr@plt>
    b830:	cmp	r0, r5
    b832:	blt.n	b854 <list_sort@@Base+0x234>
    b834:	mov	r4, r5
    b836:	b.n	b798 <list_sort@@Base+0x178>
    b838:	ldr	r4, [pc, #184]	; (b8f4 <list_sort@@Base+0x2d4>)
    b83a:	add	r4, pc
    b83c:	b.n	b81a <list_sort@@Base+0x1fa>
    b83e:	ldr	r4, [pc, #184]	; (b8f8 <list_sort@@Base+0x2d8>)
    b840:	add	r4, pc
    b842:	b.n	b81a <list_sort@@Base+0x1fa>
    b844:	mov	r3, r4
    b846:	mov	r2, r4
    b848:	mov	r1, r6
    b84a:	mov	r0, r7
    b84c:	blx	8408 <fgetxattr@plt>
    b850:	subs	r3, r0, #0
    b852:	bge.n	b878 <list_sort@@Base+0x258>
    b854:	blx	8740 <__errno_location@plt>
    b858:	ldr	r3, [r0, #0]
    b85a:	cmp	r3, #61	; 0x3d
    b85c:	beq.n	b8c8 <list_sort@@Base+0x2a8>
    b85e:	cbnz	r4, b872 <list_sort@@Base+0x252>
    b860:	ldr	r1, [pc, #152]	; (b8fc <list_sort@@Base+0x2dc>)
    b862:	add	r1, pc
    b864:	ldr	r0, [pc, #152]	; (b900 <list_sort@@Base+0x2e0>)
    b866:	mov	r2, r8
    b868:	negs	r4, r3
    b86a:	add	r0, pc
    b86c:	bl	1747c <__btrfs_error@@Base>
    b870:	b.n	b796 <list_sort@@Base+0x176>
    b872:	ldr	r1, [pc, #144]	; (b904 <list_sort@@Base+0x2e4>)
    b874:	add	r1, pc
    b876:	b.n	b864 <list_sort@@Base+0x244>
    b878:	str	r3, [sp, #12]
    b87a:	blx	8634 <malloc@plt+0x4>
    b87e:	mov	r5, r0
    b880:	cbz	r0, b8c2 <list_sort@@Base+0x2a2>
    b882:	ldr	r3, [sp, #12]
    b884:	mov	r2, r0
    b886:	mov	r1, r6
    b888:	mov	r0, r7
    b88a:	blx	8408 <fgetxattr@plt>
    b88e:	ldr	r3, [sp, #12]
    b890:	cmp	r0, #0
    b892:	bge.n	b8a8 <list_sort@@Base+0x288>
    b894:	blx	8740 <__errno_location@plt>
    b898:	mov	r1, r8
    b89a:	ldr	r4, [r0, #0]
    b89c:	ldr	r0, [pc, #104]	; (b908 <list_sort@@Base+0x2e8>)
    b89e:	negs	r4, r4
    b8a0:	add	r0, pc
    b8a2:	bl	1747c <__btrfs_error@@Base>
    b8a6:	b.n	b798 <list_sort@@Base+0x178>
    b8a8:	ldr	r2, [pc, #96]	; (b90c <list_sort@@Base+0x2ec>)
    b8aa:	movs	r1, #1
    b8ac:	ldr.w	r2, [sl, r2]
    b8b0:	str	r5, [sp, #0]
    b8b2:	mov	r0, r2
    b8b4:	ldr	r2, [pc, #88]	; (b910 <list_sort@@Base+0x2f0>)
    b8b6:	ldr	r0, [r0, #0]
    b8b8:	add	r2, pc
    b8ba:	blx	881c <__fprintf_chk@plt+0x4>
    b8be:	b.n	b798 <list_sort@@Base+0x178>
    b8c0:	mov	r5, r0
    b8c2:	mvn.w	r4, #11
    b8c6:	b.n	b798 <list_sort@@Base+0x178>
    b8c8:	movs	r5, #0
    b8ca:	b.n	b834 <list_sort@@Base+0x214>
    b8cc:	mov	r0, r4
    b8ce:	add	sp, #24
    b8d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    b8d4:	str	r6, [sp, #216]	; 0xd8
    b8d6:	movs	r5, r0
    b8d8:	lsls	r4, r4, #8
    b8da:	movs	r0, r0
    b8dc:	str	r6, [sp, #56]	; 0x38
    b8de:	movs	r5, r0
    b8e0:	cdp	0, 5, cr0, cr12, cr2, {0}
    b8e4:	str	r5, [sp, #848]	; 0x350
    b8e6:	movs	r5, r0
    b8e8:	cdp	0, 2, cr0, cr8, cr2, {0}
    b8ec:	cdp	0, 0, cr0, cr3, cr2, {0}
    b8f0:	lsls	r7, r1, #5
    b8f2:	movs	r3, r0
    b8f4:	bic.w	r0, r2, #2
    b8f8:	ands.w	r0, ip, #2
    b8fc:	stc	0, cr0, [r6, #8]
    b900:	stc	0, cr0, [r2, #8]!
    b904:	rors	r2, r3
    b906:	movs	r3, r0
    b908:	ldc	0, cr0, [r0, #8]
    b90c:	lsls	r0, r3, #9
    b90e:	movs	r0, r0
    b910:	ldc	0, cr0, [sp, #8]
    b914:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    b916:	mov	r5, r1
    b918:	ldr	r1, [pc, #268]	; (ba28 <list_sort@@Base+0x408>)
    b91a:	mov	r4, r3
    b91c:	ldr	r2, [pc, #268]	; (ba2c <list_sort@@Base+0x40c>)
    b91e:	add	r1, pc
    b920:	ldr	r2, [r1, r2]
    b922:	ldr	r2, [r2, #0]
    b924:	str	r2, [sp, #12]
    b926:	mov.w	r2, #0
    b92a:	cmp	r3, #0
    b92c:	beq.n	b9be <list_sort@@Base+0x39e>
    b92e:	ldr	r1, [pc, #256]	; (ba30 <list_sort@@Base+0x410>)
    b930:	mov	r0, r3
    b932:	add	r1, pc
    b934:	blx	837c <strcmp@plt>
    b938:	cbnz	r0, b980 <list_sort@@Base+0x360>
    b93a:	movs	r3, #1
    b93c:	strb.w	r3, [sp, #11]
    b940:	ldrb.w	r1, [sp, #11]
    b944:	mov	r0, r5
    b946:	bl	32b68 <btrfs_util_set_subvolume_read_only@@Base>
    b94a:	mov	r4, r0
    b94c:	cbz	r0, b9a0 <list_sort@@Base+0x380>
    b94e:	blx	8740 <__errno_location@plt>
    b952:	mov	r5, r0
    b954:	ldr	r0, [r0, #0]
    b956:	blx	864c <strerror@plt>
    b95a:	mov	r6, r0
    b95c:	mov	r0, r4
    b95e:	bl	38d08 <btrfs_util_strerror@@Base>
    b962:	mov	r1, r0
    b964:	cbz	r0, b9b4 <list_sort@@Base+0x394>
    b966:	str	r0, [sp, #4]
    b968:	mov	r0, r6
    b96a:	blx	837c <strcmp@plt>
    b96e:	ldr	r1, [sp, #4]
    b970:	cbz	r0, b9b4 <list_sort@@Base+0x394>
    b972:	ldr	r0, [pc, #192]	; (ba34 <list_sort@@Base+0x414>)
    b974:	add	r0, pc
    b976:	bl	1747c <__btrfs_error@@Base>
    b97a:	ldr	r0, [r5, #0]
    b97c:	negs	r0, r0
    b97e:	b.n	b9a0 <list_sort@@Base+0x380>
    b980:	ldr	r1, [pc, #180]	; (ba38 <list_sort@@Base+0x418>)
    b982:	mov	r0, r4
    b984:	add	r1, pc
    b986:	blx	837c <strcmp@plt>
    b98a:	cbnz	r0, b992 <list_sort@@Base+0x372>
    b98c:	strb.w	r0, [sp, #11]
    b990:	b.n	b940 <list_sort@@Base+0x320>
    b992:	ldr	r0, [pc, #168]	; (ba3c <list_sort@@Base+0x41c>)
    b994:	mov	r1, r4
    b996:	add	r0, pc
    b998:	bl	1747c <__btrfs_error@@Base>
    b99c:	mvn.w	r0, #21
    b9a0:	ldr	r2, [pc, #156]	; (ba40 <list_sort@@Base+0x420>)
    b9a2:	ldr	r3, [pc, #136]	; (ba2c <list_sort@@Base+0x40c>)
    b9a4:	add	r2, pc
    b9a6:	ldr	r3, [r2, r3]
    b9a8:	ldr	r2, [r3, #0]
    b9aa:	ldr	r3, [sp, #12]
    b9ac:	eors	r2, r3
    b9ae:	beq.n	ba24 <list_sort@@Base+0x404>
    b9b0:	blx	84cc <__stack_chk_fail@plt>
    b9b4:	ldr	r0, [pc, #140]	; (ba44 <list_sort@@Base+0x424>)
    b9b6:	add	r0, pc
    b9b8:	bl	1747c <__btrfs_error@@Base>
    b9bc:	b.n	b97a <list_sort@@Base+0x35a>
    b9be:	mov	r0, r5
    b9c0:	add.w	r1, sp, #11
    b9c4:	bl	32abc <btrfs_util_get_subvolume_read_only@@Base>
    b9c8:	mov	r5, r0
    b9ca:	cbz	r0, ba06 <list_sort@@Base+0x3e6>
    b9cc:	blx	8740 <__errno_location@plt>
    b9d0:	mov	r4, r0
    b9d2:	ldr	r0, [r0, #0]
    b9d4:	blx	864c <strerror@plt>
    b9d8:	mov	r6, r0
    b9da:	mov	r0, r5
    b9dc:	bl	38d08 <btrfs_util_strerror@@Base>
    b9e0:	mov	r1, r0
    b9e2:	cbz	r0, b9fc <list_sort@@Base+0x3dc>
    b9e4:	str	r0, [sp, #4]
    b9e6:	mov	r0, r6
    b9e8:	blx	837c <strcmp@plt>
    b9ec:	ldr	r1, [sp, #4]
    b9ee:	cbz	r0, b9fc <list_sort@@Base+0x3dc>
    b9f0:	ldr	r0, [pc, #84]	; (ba48 <list_sort@@Base+0x428>)
    b9f2:	add	r0, pc
    b9f4:	bl	1747c <__btrfs_error@@Base>
    b9f8:	ldr	r0, [r4, #0]
    b9fa:	b.n	b97c <list_sort@@Base+0x35c>
    b9fc:	ldr	r0, [pc, #76]	; (ba4c <list_sort@@Base+0x42c>)
    b9fe:	add	r0, pc
    ba00:	bl	1747c <__btrfs_error@@Base>
    ba04:	b.n	b9f8 <list_sort@@Base+0x3d8>
    ba06:	ldrb.w	r3, [sp, #11]
    ba0a:	cbnz	r3, ba1e <list_sort@@Base+0x3fe>
    ba0c:	ldr	r2, [pc, #64]	; (ba50 <list_sort@@Base+0x430>)
    ba0e:	add	r2, pc
    ba10:	ldr	r1, [pc, #64]	; (ba54 <list_sort@@Base+0x434>)
    ba12:	movs	r0, #1
    ba14:	add	r1, pc
    ba16:	blx	87f4 <__printf_chk@plt+0x4>
    ba1a:	movs	r0, #0
    ba1c:	b.n	b9a0 <list_sort@@Base+0x380>
    ba1e:	ldr	r2, [pc, #56]	; (ba58 <list_sort@@Base+0x438>)
    ba20:	add	r2, pc
    ba22:	b.n	ba10 <list_sort@@Base+0x3f0>
    ba24:	add	sp, #16
    ba26:	pop	{r4, r5, r6, pc}
    ba28:	str	r4, [sp, #424]	; 0x1a8
    ba2a:	movs	r5, r0
    ba2c:	lsls	r4, r4, #8
    ba2e:	movs	r0, r0
    ba30:	ldc	0, cr0, [r5, #-8]!
    ba34:	ldrb	r7, [r7, #25]
    ba36:	movs	r4, r0
    ba38:	stcl	0, cr0, [r8], #8
    ba3c:	ldcl	0, cr0, [ip], {2}
    ba40:	str	r3, [sp, #912]	; 0x390
    ba42:	movs	r5, r0
    ba44:	mov	r5, pc
    ba46:	movs	r3, r0
    ba48:	ldrb	r1, [r0, #24]
    ba4a:	movs	r4, r0
    ba4c:	mov	r5, r6
    ba4e:	movs	r3, r0
    ba50:	mrrc	0, 0, r0, lr, cr2
    ba54:	ldcl	0, cr0, [sp], #-8
    ba58:	mcrr	0, 0, r0, r7, cr2
    ba5c:	mov	r0, r1
    ba5e:	ldr	r1, [pc, #96]	; (bac0 <list_sort@@Base+0x4a0>)
    ba60:	ldr	r2, [pc, #96]	; (bac4 <list_sort@@Base+0x4a4>)
    ba62:	add	r1, pc
    ba64:	push	{r4, r5, lr}
    ba66:	sub	sp, #276	; 0x114
    ba68:	ldr	r2, [r1, r2]
    ba6a:	mov	r1, r3
    ba6c:	ldr	r5, [pc, #88]	; (bac8 <list_sort@@Base+0x4a8>)
    ba6e:	ldr	r2, [r2, #0]
    ba70:	str	r2, [sp, #268]	; 0x10c
    ba72:	mov.w	r2, #0
    ba76:	add	r5, pc
    ba78:	cbz	r3, ba94 <list_sort@@Base+0x474>
    ba7a:	bl	30692 <set_label@@Base>
    ba7e:	mov	r4, r0
    ba80:	ldr	r2, [pc, #72]	; (bacc <list_sort@@Base+0x4ac>)
    ba82:	ldr	r3, [pc, #64]	; (bac4 <list_sort@@Base+0x4a4>)
    ba84:	add	r2, pc
    ba86:	ldr	r3, [r2, r3]
    ba88:	ldr	r2, [r3, #0]
    ba8a:	ldr	r3, [sp, #268]	; 0x10c
    ba8c:	eors	r2, r3
    ba8e:	beq.n	bab8 <list_sort@@Base+0x498>
    ba90:	blx	84cc <__stack_chk_fail@plt>
    ba94:	add	r3, sp, #12
    ba96:	str	r3, [sp, #4]
    ba98:	mov	r1, r3
    ba9a:	bl	30664 <get_label@@Base>
    ba9e:	ldr	r3, [sp, #4]
    baa0:	mov	r4, r0
    baa2:	cmp	r0, #0
    baa4:	bne.n	ba80 <list_sort@@Base+0x460>
    baa6:	ldr	r2, [pc, #40]	; (bad0 <list_sort@@Base+0x4b0>)
    baa8:	movs	r1, #1
    baaa:	ldr	r0, [r5, r2]
    baac:	ldr	r2, [pc, #36]	; (bad4 <list_sort@@Base+0x4b4>)
    baae:	ldr	r0, [r0, #0]
    bab0:	add	r2, pc
    bab2:	blx	881c <__fprintf_chk@plt+0x4>
    bab6:	b.n	ba80 <list_sort@@Base+0x460>
    bab8:	mov	r0, r4
    baba:	add	sp, #276	; 0x114
    babc:	pop	{r4, r5, pc}
    babe:	nop
    bac0:	str	r3, [sp, #152]	; 0x98
    bac2:	movs	r5, r0
    bac4:	lsls	r4, r4, #8
    bac6:	movs	r0, r0
    bac8:	str	r3, [sp, #72]	; 0x48
    baca:	movs	r5, r0
    bacc:	str	r3, [sp, #16]
    bace:	movs	r5, r0
    bad0:	lsls	r0, r3, #9
    bad2:	movs	r0, r0
    bad4:			; <UNDEFINED> instruction: 0xebe80002
    bad8:	ldr	r2, [pc, #60]	; (bb18 <list_sort@@Base+0x4f8>)
    bada:	movs	r1, #16
    badc:	ldr	r3, [pc, #60]	; (bb1c <list_sort@@Base+0x4fc>)
    bade:	push	{r4, lr}
    bae0:	add	r2, pc
    bae2:	sub	sp, #72	; 0x48
    bae4:	add	r4, sp, #4
    bae6:	ldr	r3, [r2, r3]
    bae8:	mov	r0, r4
    baea:	ldr	r3, [r3, #0]
    baec:	str	r3, [sp, #68]	; 0x44
    baee:	mov.w	r3, #0
    baf2:	blx	8680 <backtrace@plt>
    baf6:	movs	r2, #2
    baf8:	mov	r1, r0
    bafa:	mov	r0, r4
    bafc:	blx	8990 <backtrace_symbols_fd@plt>
    bb00:	ldr	r2, [pc, #28]	; (bb20 <list_sort@@Base+0x500>)
    bb02:	ldr	r3, [pc, #24]	; (bb1c <list_sort@@Base+0x4fc>)
    bb04:	add	r2, pc
    bb06:	ldr	r3, [r2, r3]
    bb08:	ldr	r2, [r3, #0]
    bb0a:	ldr	r3, [sp, #68]	; 0x44
    bb0c:	eors	r2, r3
    bb0e:	beq.n	bb14 <list_sort@@Base+0x4f4>
    bb10:	blx	84cc <__stack_chk_fail@plt>
    bb14:	add	sp, #72	; 0x48
    bb16:	pop	{r4, pc}
    bb18:	str	r2, [sp, #672]	; 0x2a0
    bb1a:	movs	r5, r0
    bb1c:	lsls	r4, r4, #8
    bb1e:	movs	r0, r0
    bb20:	str	r2, [sp, #528]	; 0x210
    bb22:	movs	r5, r0

0000bb24 <ulist_init@@Base>:
    bb24:	adds	r3, r0, #4
    bb26:	strd	r3, r3, [r0, #4]
    bb2a:	movs	r3, #0
    bb2c:	str	r3, [r0, #12]
    bb2e:	str	r3, [r0, #0]
    bb30:	bx	lr

0000bb32 <ulist_release@@Base>:
    bb32:	push	{r4, r5, r6, lr}
    bb34:	mov	r5, r0
    bb36:	mov	r4, r0
    bb38:	ldr.w	r0, [r5, #4]!
    bb3c:	ldr.w	r6, [r0], #-16
    bb40:	subs	r6, #16
    bb42:	add.w	r3, r0, #16
    bb46:	cmp	r5, r3
    bb48:	bne.n	bb54 <ulist_release@@Base+0x22>
    bb4a:	movs	r3, #0
    bb4c:	strd	r5, r5, [r4, #4]
    bb50:	str	r3, [r4, #12]
    bb52:	pop	{r4, r5, r6, pc}
    bb54:	blx	83f0 <free@plt+0x4>
    bb58:	ldr	r3, [r6, #16]
    bb5a:	mov	r0, r6
    bb5c:	sub.w	r6, r3, #16
    bb60:	b.n	bb42 <ulist_release@@Base+0x10>

0000bb62 <ulist_reinit@@Base>:
    bb62:	push	{r4, lr}
    bb64:	mov	r4, r0
    bb66:	bl	bb32 <ulist_release@@Base>
    bb6a:	mov	r0, r4
    bb6c:	ldmia.w	sp!, {r4, lr}
    bb70:	b.w	bb24 <ulist_init@@Base>

0000bb74 <ulist_alloc@@Base>:
    bb74:	push	{r4, lr}
    bb76:	movs	r0, #16
    bb78:	blx	8634 <malloc@plt+0x4>
    bb7c:	mov	r4, r0
    bb7e:	cbz	r0, bb84 <ulist_alloc@@Base+0x10>
    bb80:	bl	bb24 <ulist_init@@Base>
    bb84:	mov	r0, r4
    bb86:	pop	{r4, pc}

0000bb88 <ulist_free@@Base>:
    bb88:	push	{r4, lr}
    bb8a:	mov	r4, r0
    bb8c:	cbz	r0, bb9c <ulist_free@@Base+0x14>
    bb8e:	bl	bb32 <ulist_release@@Base>
    bb92:	mov	r0, r4
    bb94:	ldmia.w	sp!, {r4, lr}
    bb98:	b.w	83ec <free@plt>
    bb9c:	pop	{r4, pc}

0000bb9e <ulist_add_merge@@Base>:
    bb9e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    bba2:	sub	sp, #20
    bba4:	mov	r6, r0
    bba6:	ldr	r7, [pc, #220]	; (bc84 <ulist_add_merge@@Base+0xe6>)
    bba8:	ldr	r0, [sp, #56]	; 0x38
    bbaa:	mov	r8, r2
    bbac:	ldr	r5, [r6, #12]
    bbae:	mov	r9, r3
    bbb0:	add	r7, pc
    bbb2:	cbnz	r5, bbc4 <ulist_add_merge@@Base+0x26>
    bbb4:	movs	r0, #40	; 0x28
    bbb6:	blx	8634 <malloc@plt+0x4>
    bbba:	mov	r4, r0
    bbbc:	cbnz	r0, bbe0 <ulist_add_merge@@Base+0x42>
    bbbe:	mvn.w	r0, #11
    bbc2:	b.n	bc7e <ulist_add_merge@@Base+0xe0>
    bbc4:	ldrd	r2, r3, [r5, #-24]
    bbc8:	cmp	r3, r9
    bbca:	it	eq
    bbcc:	cmpeq	r2, r8
    bbce:	bcs.n	bbd4 <ulist_add_merge@@Base+0x36>
    bbd0:	ldr	r5, [r5, #4]
    bbd2:	b.n	bbb2 <ulist_add_merge@@Base+0x14>
    bbd4:	cmp	r9, r3
    bbd6:	it	eq
    bbd8:	cmpeq	r8, r2
    bbda:	bcs.n	bc72 <ulist_add_merge@@Base+0xd4>
    bbdc:	ldr	r5, [r5, #8]
    bbde:	b.n	bbb2 <ulist_add_merge@@Base+0x14>
    bbe0:	ldrd	r2, r3, [sp, #48]	; 0x30
    bbe4:	add.w	ip, r6, #12
    bbe8:	strd	r8, r9, [r4]
    bbec:	strd	r2, r3, [r4, #8]
    bbf0:	mov	r2, ip
    bbf2:	ldr	r3, [r2, #0]
    bbf4:	cbnz	r3, bc22 <ulist_add_merge@@Base+0x84>
    bbf6:	add.w	r0, r4, #24
    bbfa:	strd	r5, r3, [r4, #24]
    bbfe:	str	r3, [r4, #32]
    bc00:	mov	r1, ip
    bc02:	str	r0, [r2, #0]
    bc04:	bl	13b2a <rb_insert_color@@Base>
    bc08:	ldr	r3, [r6, #8]
    bc0a:	add.w	r2, r4, #16
    bc0e:	adds	r1, r6, #4
    bc10:	str	r2, [r6, #8]
    bc12:	movs	r0, #1
    bc14:	strd	r1, r3, [r4, #16]
    bc18:	str	r2, [r3, #0]
    bc1a:	ldr	r3, [r6, #0]
    bc1c:	adds	r3, #1
    bc1e:	str	r3, [r6, #0]
    bc20:	b.n	bc7e <ulist_add_merge@@Base+0xe0>
    bc22:	ldrd	r0, r1, [r3, #-24]
    bc26:	cmp	r1, r9
    bc28:	it	eq
    bc2a:	cmpeq	r0, r8
    bc2c:	bcs.n	bc34 <ulist_add_merge@@Base+0x96>
    bc2e:	adds	r2, r3, #4
    bc30:	mov	r5, r3
    bc32:	b.n	bbf2 <ulist_add_merge@@Base+0x54>
    bc34:	cmp	r9, r1
    bc36:	it	eq
    bc38:	cmpeq	r8, r0
    bc3a:	bcs.n	bc42 <ulist_add_merge@@Base+0xa4>
    bc3c:	add.w	r2, r3, #8
    bc40:	b.n	bc30 <ulist_add_merge@@Base+0x92>
    bc42:	ldr	r3, [pc, #68]	; (bc88 <ulist_add_merge@@Base+0xea>)
    bc44:	movs	r1, #1
    bc46:	ldr	r2, [pc, #68]	; (bc8c <ulist_add_merge@@Base+0xee>)
    bc48:	ldr	r0, [r7, r3]
    bc4a:	movs	r3, #0
    bc4c:	str	r3, [sp, #12]
    bc4e:	add	r2, pc
    bc50:	ldr	r3, [pc, #60]	; (bc90 <ulist_add_merge@@Base+0xf2>)
    bc52:	add	r3, pc
    bc54:	str	r3, [sp, #8]
    bc56:	ldr	r3, [pc, #60]	; (bc94 <ulist_add_merge@@Base+0xf6>)
    bc58:	add	r3, pc
    bc5a:	str	r3, [sp, #4]
    bc5c:	movs	r3, #211	; 0xd3
    bc5e:	str	r3, [sp, #0]
    bc60:	ldr	r3, [pc, #52]	; (bc98 <ulist_add_merge@@Base+0xfa>)
    bc62:	ldr	r0, [r0, #0]
    bc64:	add	r3, pc
    bc66:	blx	881c <__fprintf_chk@plt+0x4>
    bc6a:	bl	bad8 <list_sort@@Base+0x4b8>
    bc6e:	blx	8948 <abort@plt>
    bc72:	cbz	r0, bc7e <ulist_add_merge@@Base+0xe0>
    bc74:	ldrd	r2, r3, [r5, #-16]
    bc78:	strd	r2, r3, [r0]
    bc7c:	movs	r0, #0
    bc7e:	add	sp, #20
    bc80:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    bc84:	str	r1, [sp, #864]	; 0x360
    bc86:	movs	r5, r0
    bc88:	lsls	r4, r6, #8
    bc8a:	movs	r0, r0
    bc8c:	b.n	b830 <list_sort@@Base+0x210>
    bc8e:	movs	r2, r0
    bc90:			; <UNDEFINED> instruction: 0xeae00002
    bc94:			; <UNDEFINED> instruction: 0xeaf20002
    bc98:			; <UNDEFINED> instruction: 0xeab80002

0000bc9c <ulist_add@@Base>:
    bc9c:	push	{r4, r5, lr}
    bc9e:	sub	sp, #20
    bca0:	ldr	r1, [sp, #40]	; 0x28
    bca2:	ldrd	r4, r5, [sp, #32]
    bca6:	str	r1, [sp, #12]
    bca8:	movs	r1, #0
    bcaa:	strd	r4, r5, [sp]
    bcae:	str	r1, [sp, #8]
    bcb0:	bl	bb9e <ulist_add_merge@@Base>
    bcb4:	add	sp, #20
    bcb6:	pop	{r4, r5, pc}

0000bcb8 <ulist_del@@Base>:
    bcb8:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
    bcbc:	mov	r5, r0
    bcbe:	ldr	r4, [r5, #12]
    bcc0:	mov	r0, r2
    bcc2:	ldr.w	r8, [pc, #152]	; bd5c <ulist_del@@Base+0xa4>
    bcc6:	mov	r1, r3
    bcc8:	add	r8, pc
    bcca:	cbnz	r4, bcd0 <ulist_del@@Base+0x18>
    bccc:	movs	r0, #1
    bcce:	b.n	bcf2 <ulist_del@@Base+0x3a>
    bcd0:	ldrd	r2, r3, [r4, #-24]
    bcd4:	cmp	r3, r1
    bcd6:	it	eq
    bcd8:	cmpeq	r2, r0
    bcda:	bcs.n	bce0 <ulist_del@@Base+0x28>
    bcdc:	ldr	r4, [r4, #4]
    bcde:	b.n	bcca <ulist_del@@Base+0x12>
    bce0:	cmp	r1, r3
    bce2:	it	eq
    bce4:	cmpeq	r0, r2
    bce6:	bcs.n	bcf8 <ulist_del@@Base+0x40>
    bce8:	ldr	r4, [r4, #8]
    bcea:	b.n	bcca <ulist_del@@Base+0x12>
    bcec:	movs	r0, #0
    bcee:	subs	r3, #1
    bcf0:	str	r3, [r5, #0]
    bcf2:	add	sp, #16
    bcf4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    bcf8:	ldrd	r6, r7, [r4, #-16]
    bcfc:	ldrd	r2, r3, [sp, #40]	; 0x28
    bd00:	cmp	r7, r3
    bd02:	it	eq
    bd04:	cmpeq	r6, r2
    bd06:	bne.n	bccc <ulist_del@@Base+0x14>
    bd08:	add.w	r1, r5, #12
    bd0c:	mov	r0, r4
    bd0e:	bl	13bd0 <rb_erase@@Base>
    bd12:	ldrd	r2, r3, [r4, #-8]
    bd16:	sub.w	r6, r4, #24
    bd1a:	str	r3, [r2, #4]
    bd1c:	mov	r0, r6
    bd1e:	str	r2, [r3, #0]
    bd20:	blx	83f0 <free@plt+0x4>
    bd24:	ldr	r3, [r5, #0]
    bd26:	cmp	r3, #0
    bd28:	bne.n	bcec <ulist_del@@Base+0x34>
    bd2a:	ldr	r3, [pc, #52]	; (bd60 <ulist_del@@Base+0xa8>)
    bd2c:	movs	r1, #1
    bd2e:	ldr	r2, [pc, #52]	; (bd64 <ulist_del@@Base+0xac>)
    bd30:	ldr.w	r0, [r8, r3]
    bd34:	add	r2, pc
    bd36:	ldr	r3, [pc, #48]	; (bd68 <ulist_del@@Base+0xb0>)
    bd38:	str	r1, [sp, #12]
    bd3a:	add	r3, pc
    bd3c:	str	r3, [sp, #8]
    bd3e:	ldr	r3, [pc, #44]	; (bd6c <ulist_del@@Base+0xb4>)
    bd40:	add	r3, pc
    bd42:	adds	r3, #16
    bd44:	str	r3, [sp, #4]
    bd46:	movs	r3, #140	; 0x8c
    bd48:	str	r3, [sp, #0]
    bd4a:	ldr	r3, [pc, #36]	; (bd70 <ulist_del@@Base+0xb8>)
    bd4c:	ldr	r0, [r0, #0]
    bd4e:	add	r3, pc
    bd50:	blx	881c <__fprintf_chk@plt+0x4>
    bd54:	bl	bad8 <list_sort@@Base+0x4b8>
    bd58:	blx	8948 <abort@plt>
    bd5c:	str	r0, [sp, #768]	; 0x300
    bd5e:	movs	r5, r0
    bd60:	lsls	r4, r6, #8
    bd62:	movs	r0, r0
    bd64:	ble.n	be22 <ulist_next@@Base+0xae>
    bd66:	movs	r2, r0
    bd68:	ldrd	r0, r0, [sp, #8]!
    bd6c:	and.w	r0, sl, r2
    bd70:	strd	r0, r0, [lr, #8]

0000bd74 <ulist_next@@Base>:
    bd74:	ldr	r3, [r0, #4]
    bd76:	adds	r2, r0, #4
    bd78:	cmp	r2, r3
    bd7a:	beq.n	bd8e <ulist_next@@Base+0x1a>
    bd7c:	ldr	r0, [r1, #0]
    bd7e:	cbz	r0, bd86 <ulist_next@@Base+0x12>
    bd80:	ldr	r3, [r0, #0]
    bd82:	cmp	r2, r3
    bd84:	beq.n	bd8e <ulist_next@@Base+0x1a>
    bd86:	str	r3, [r1, #0]
    bd88:	ldr	r0, [r1, #0]
    bd8a:	subs	r0, #16
    bd8c:	bx	lr
    bd8e:	movs	r0, #0
    bd90:	bx	lr
    bd92:	nop
    bd94:	ldrd	r2, r3, [r0]
    bd98:	str	r3, [r2, #4]
    bd9a:	str	r2, [r3, #0]
    bd9c:	ldr	r2, [pc, #8]	; (bda8 <ulist_next@@Base+0x34>)
    bd9e:	ldr	r3, [pc, #12]	; (bdac <ulist_next@@Base+0x38>)
    bda0:	strd	r2, r3, [r0]
    bda4:	bx	lr
    bda6:	nop
    bda8:	lsls	r0, r0, #4
    bdaa:	movs	r0, r2
    bdac:	lsls	r0, r0, #8
    bdae:	movs	r0, r4
    bdb0:	mov	r3, r1
    bdb2:	ldr	r1, [pc, #44]	; (bde0 <ulist_next@@Base+0x6c>)
    bdb4:	mov	r2, r0
    bdb6:	add	r1, pc
    bdb8:	push	{r4, r5, lr}
    bdba:	ldr	r0, [r1, #0]
    bdbc:	cbz	r0, bdd8 <ulist_next@@Base+0x64>
    bdbe:	ldrd	r4, r5, [r0, #-96]	; 0x60
    bdc2:	cmp	r3, r5
    bdc4:	it	eq
    bdc6:	cmpeq	r2, r4
    bdc8:	bcs.n	bdce <ulist_next@@Base+0x5a>
    bdca:	ldr	r0, [r0, #8]
    bdcc:	b.n	bdbc <ulist_next@@Base+0x48>
    bdce:	cmp	r5, r3
    bdd0:	it	eq
    bdd2:	cmpeq	r4, r2
    bdd4:	bcc.n	bdda <ulist_next@@Base+0x66>
    bdd6:	subs	r0, #96	; 0x60
    bdd8:	pop	{r4, r5, pc}
    bdda:	ldr	r0, [r0, #4]
    bddc:	b.n	bdbc <ulist_next@@Base+0x48>
    bdde:	nop
    bde0:	add	r4, pc, #600	; (adr r4, c03c <ulist_next@@Base+0x2c8>)
    bde2:	movs	r5, r0
    bde4:	subs	r0, #32
    bde6:	b.w	83ec <free@plt>
    bdea:	ldr	r3, [pc, #92]	; (be48 <ulist_next@@Base+0xd4>)
    bdec:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    bdf0:	add	r3, pc
    bdf2:	mov	r4, r0
    bdf4:	mov	r5, r1
    bdf6:	ldr	r3, [r3, #24]
    bdf8:	cbz	r3, be24 <ulist_next@@Base+0xb0>
    bdfa:	ldrd	r0, r1, [r3, #-32]
    bdfe:	cmp	r5, r1
    be00:	it	eq
    be02:	cmpeq	r4, r0
    be04:	bcs.n	be0a <ulist_next@@Base+0x96>
    be06:	ldr	r3, [r3, #8]
    be08:	b.n	bdf8 <ulist_next@@Base+0x84>
    be0a:	cmp	r1, r5
    be0c:	it	eq
    be0e:	cmpeq	r0, r4
    be10:	bcs.n	be16 <ulist_next@@Base+0xa2>
    be12:	ldr	r3, [r3, #4]
    be14:	b.n	bdf8 <ulist_next@@Base+0x84>
    be16:	sub.w	r4, r3, #32
    be1a:	mov	r0, r3
    be1c:	bl	13e92 <rb_prev@@Base>
    be20:	mov	r3, r4
    be22:	cbnz	r0, be2a <ulist_next@@Base+0xb6>
    be24:	mov	r0, r3
    be26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    be2a:	ldrd	r6, r7, [r0, #-32]
    be2e:	sub.w	r8, r0, #32
    be32:	ldrd	r4, r5, [r3]
    be36:	cmp	r7, r5
    be38:	it	eq
    be3a:	cmpeq	r6, r4
    be3c:	bne.n	be24 <ulist_next@@Base+0xb0>
    be3e:	bl	13e92 <rb_prev@@Base>
    be42:	mov	r3, r8
    be44:	b.n	be22 <ulist_next@@Base+0xae>
    be46:	nop
    be48:	add	r4, pc, #368	; (adr r4, bfbc <ulist_next@@Base+0x248>)
    be4a:	movs	r5, r0
    be4c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    be50:	mov	r1, r3
    be52:	sub	sp, #28
    be54:	mov	r5, r0
    be56:	mov	r0, r2
    be58:	mov	r6, r2
    be5a:	mov	r7, r3
    be5c:	bl	bdea <ulist_next@@Base+0x76>
    be60:	cbnz	r0, be70 <ulist_next@@Base+0xfc>
    be62:	ldr	r0, [pc, #208]	; (bf34 <ulist_next@@Base+0x1c0>)
    be64:	mov	r2, r6
    be66:	mov	r3, r7
    be68:	add	r0, pc
    be6a:	bl	1747c <__btrfs_error@@Base>
    be6e:	b.n	be8e <ulist_next@@Base+0x11a>
    be70:	mov	r4, r0
    be72:	ldrd	r8, r9, [r4], #32
    be76:	cmp	r9, r7
    be78:	it	eq
    be7a:	cmpeq	r8, r6
    be7c:	beq.n	be98 <ulist_next@@Base+0x124>
    be7e:	ldr	r0, [pc, #184]	; (bf38 <ulist_next@@Base+0x1c4>)
    be80:	mov	r2, r8
    be82:	mov	r3, r9
    be84:	strd	r6, r7, [sp]
    be88:	add	r0, pc
    be8a:	bl	1747c <__btrfs_error@@Base>
    be8e:	mvn.w	r0, #4
    be92:	add	sp, #28
    be94:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    be98:	str	r0, [sp, #20]
    be9a:	mov	r0, r4
    be9c:	bl	13e92 <rb_prev@@Base>
    bea0:	ldr	r1, [sp, #20]
    bea2:	cbz	r0, beb6 <ulist_next@@Base+0x142>
    bea4:	ldrd	r2, r3, [r0, #-32]
    bea8:	cmp	r3, r9
    beaa:	it	eq
    beac:	cmpeq	r2, r8
    beae:	bne.n	beb6 <ulist_next@@Base+0x142>
    beb0:	ldr	r0, [pc, #136]	; (bf3c <ulist_next@@Base+0x1c8>)
    beb2:	add	r0, pc
    beb4:	b.n	be6a <ulist_next@@Base+0xf6>
    beb6:	mov.w	sl, #0
    beba:	mov.w	fp, #0
    bebe:	ldrd	r2, r3, [r1, #24]
    bec2:	orrs.w	r0, r2, r3
    bec6:	beq.n	beee <ulist_next@@Base+0x17a>
    bec8:	cmp	r3, #0
    beca:	it	eq
    becc:	cmpeq	r2, #5
    bece:	beq.n	beda <ulist_next@@Base+0x166>
    bed0:	cmp.w	r2, #256	; 0x100
    bed4:	sbcs.w	r1, r3, #0
    bed8:	blt.n	bf0a <ulist_next@@Base+0x196>
    beda:	movs	r1, #0
    bedc:	mov	r0, r5
    bede:	str	r1, [sp, #8]
    bee0:	strd	sl, fp, [sp]
    bee4:	bl	bc9c <ulist_add@@Base>
    bee8:	cmp	r0, #0
    beea:	bge.n	bf0a <ulist_next@@Base+0x196>
    beec:	b.n	be92 <ulist_next@@Base+0x11e>
    beee:	ldrd	r2, r3, [r1, #16]
    bef2:	ldrd	r8, r9, [r1]
    bef6:	cmp	r3, r9
    bef8:	it	eq
    befa:	cmpeq	r2, r8
    befc:	bne.n	bf2a <ulist_next@@Base+0x1b6>
    befe:	mvn.w	r2, #7
    bf02:	mov.w	r3, #4294967295	; 0xffffffff
    bf06:	strd	r2, r3, [r1, #24]
    bf0a:	mov	r0, r4
    bf0c:	bl	13e66 <rb_next@@Base>
    bf10:	mov	r4, r0
    bf12:	cmp	r0, #0
    bf14:	beq.n	be92 <ulist_next@@Base+0x11e>
    bf16:	ldrd	r2, r3, [r0, #-32]
    bf1a:	sub.w	r1, r0, #32
    bf1e:	cmp	r3, r7
    bf20:	it	eq
    bf22:	cmpeq	r2, r6
    bf24:	beq.n	bebe <ulist_next@@Base+0x14a>
    bf26:	movs	r0, #0
    bf28:	b.n	be92 <ulist_next@@Base+0x11e>
    bf2a:	mov	r0, r5
    bf2c:	bl	be4c <ulist_next@@Base+0xd8>
    bf30:	b.n	bee8 <ulist_next@@Base+0x174>
    bf32:	nop
    bf34:	stmdb	r5, {r1}
    bf38:	stmdb	sl, {r1}
    bf3c:	ldmdb	r5, {r1}
    bf40:	ldr	r2, [pc, #80]	; (bf94 <ulist_next@@Base+0x220>)
    bf42:	ldr	r3, [pc, #84]	; (bf98 <ulist_next@@Base+0x224>)
    bf44:	push	{r0, r1, r4, r5, r6, lr}
    bf46:	add	r2, pc
    bf48:	ldr	r4, [pc, #80]	; (bf9c <ulist_next@@Base+0x228>)
    bf4a:	ldr	r3, [r2, r3]
    bf4c:	add	r4, pc
    bf4e:	ldr	r3, [r3, #0]
    bf50:	str	r3, [sp, #4]
    bf52:	mov.w	r3, #0
    bf56:	ldr	r3, [r4, #28]
    bf58:	cbz	r3, bf74 <ulist_next@@Base+0x200>
    bf5a:	mov	r6, sp
    bf5c:	movs	r3, #0
    bf5e:	str	r3, [sp, #0]
    bf60:	ldr	r0, [r4, #28]
    bf62:	mov	r1, r6
    bf64:	bl	bd74 <ulist_next@@Base>
    bf68:	mov	r5, r0
    bf6a:	cbnz	r0, bf88 <ulist_next@@Base+0x214>
    bf6c:	ldr	r0, [r4, #28]
    bf6e:	bl	bb88 <ulist_free@@Base>
    bf72:	str	r5, [r4, #28]
    bf74:	ldr	r2, [pc, #40]	; (bfa0 <ulist_next@@Base+0x22c>)
    bf76:	ldr	r3, [pc, #32]	; (bf98 <ulist_next@@Base+0x224>)
    bf78:	add	r2, pc
    bf7a:	ldr	r3, [r2, r3]
    bf7c:	ldr	r2, [r3, #0]
    bf7e:	ldr	r3, [sp, #4]
    bf80:	eors	r2, r3
    bf82:	beq.n	bf90 <ulist_next@@Base+0x21c>
    bf84:	blx	84cc <__stack_chk_fail@plt>
    bf88:	ldr	r0, [r5, #8]
    bf8a:	blx	83f0 <free@plt+0x4>
    bf8e:	b.n	bf60 <ulist_next@@Base+0x1ec>
    bf90:	add	sp, #8
    bf92:	pop	{r4, r5, r6, pc}
    bf94:	ldrh	r2, [r0, #50]	; 0x32
    bf96:	movs	r5, r0
    bf98:	lsls	r4, r4, #8
    bf9a:	movs	r0, r0
    bf9c:	add	r3, pc, #0	; (adr r3, bfa0 <ulist_next@@Base+0x22c>)
    bf9e:	movs	r5, r0
    bfa0:	ldrh	r0, [r2, #48]	; 0x30
    bfa2:	movs	r5, r0
    bfa4:	ldr.w	ip, [pc, #76]	; bff4 <ulist_next@@Base+0x280>
    bfa8:	ldr	r5, [pc, #76]	; (bff8 <ulist_next@@Base+0x284>)
    bfaa:	add	ip, pc
    bfac:	ldr	r4, [pc, #76]	; (bffc <ulist_next@@Base+0x288>)
    bfae:	push	{lr}
    bfb0:	sub	sp, #92	; 0x5c
    bfb2:	ldr.w	r5, [ip, r5]
    bfb6:	add	r4, pc
    bfb8:	ldr	r5, [r5, #0]
    bfba:	str	r5, [sp, #84]	; 0x54
    bfbc:	mov.w	r5, #0
    bfc0:	ldr	r5, [pc, #60]	; (c000 <ulist_next@@Base+0x28c>)
    bfc2:	ldr	r4, [r4, r5]
    bfc4:	ldr	r5, [sp, #96]	; 0x60
    bfc6:	strd	r3, r2, [sp]
    bfca:	mov	r3, r1
    bfcc:	ldr	r2, [pc, #52]	; (c004 <ulist_next@@Base+0x290>)
    bfce:	movs	r1, #1
    bfd0:	strd	r0, r5, [sp, #8]
    bfd4:	ldr	r0, [r4, #0]
    bfd6:	add	r4, sp, #20
    bfd8:	add	r2, pc
    bfda:	blx	881c <__fprintf_chk@plt+0x4>
    bfde:	movs	r1, #16
    bfe0:	mov	r0, r4
    bfe2:	blx	8680 <backtrace@plt>
    bfe6:	movs	r2, #2
    bfe8:	mov	r1, r0
    bfea:	mov	r0, r4
    bfec:	blx	8990 <backtrace_symbols_fd@plt>
    bff0:	blx	8948 <abort@plt>
    bff4:	ldrh	r6, [r3, #46]	; 0x2e
    bff6:	movs	r5, r0
    bff8:	lsls	r4, r4, #8
    bffa:	movs	r0, r0
    bffc:	ldrh	r2, [r2, #46]	; 0x2e
    bffe:	movs	r5, r0
    c000:	lsls	r4, r6, #8
    c002:	movs	r0, r0
    c004:	bge.n	bf7a <ulist_next@@Base+0x206>
    c006:	movs	r2, r0
    c008:	push	{r0, r1, r2, lr}
    c00a:	cbz	r3, c01c <ulist_next@@Base+0x2a8>
    c00c:	movs	r3, #1
    c00e:	str	r3, [sp, #0]
    c010:	mov	r3, r2
    c012:	mov	r2, r1
    c014:	ldr	r1, [pc, #12]	; (c024 <ulist_next@@Base+0x2b0>)
    c016:	add	r1, pc
    c018:	bl	bfa4 <ulist_next@@Base+0x230>
    c01c:	add	sp, #12
    c01e:	ldr.w	pc, [sp], #4
    c022:	nop
    c024:	b.n	bfe4 <ulist_next@@Base+0x270>
    c026:	movs	r2, r0
    c028:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c02c:	vpush	{d8-d9}
    c030:	sub	sp, #76	; 0x4c
    c032:	strd	r2, r3, [sp, #24]
    c036:	ldr.w	r2, [pc, #1040]	; c448 <ulist_next@@Base+0x6d4>
    c03a:	ldr.w	r3, [pc, #1040]	; c44c <ulist_next@@Base+0x6d8>
    c03e:	add	r2, pc
    c040:	str	r0, [sp, #52]	; 0x34
    c042:	movs	r0, #0
    c044:	ldr	r3, [r2, r3]
    c046:	ldr	r3, [r3, #0]
    c048:	str	r3, [sp, #68]	; 0x44
    c04a:	mov.w	r3, #0
    c04e:	bl	bb74 <ulist_alloc@@Base>
    c052:	mov	r4, r0
    c054:	ldr	r0, [pc, #1016]	; (c450 <ulist_next@@Base+0x6dc>)
    c056:	add	r0, pc
    c058:	adds	r0, #24
    c05a:	bl	13e46 <rb_first@@Base>
    c05e:	ldr	r3, [pc, #1012]	; (c454 <ulist_next@@Base+0x6e0>)
    c060:	add	r3, pc
    c062:	adds	r3, #17
    c064:	vmov	s18, r3
    c068:	mov	fp, r0
    c06a:	mov	r0, r4
    c06c:	cmp.w	fp, #0
    c070:	bne.n	c08e <ulist_next@@Base+0x31a>
    c072:	bl	bb88 <ulist_free@@Base>
    c076:	mov	r0, fp
    c078:	ldr	r2, [pc, #988]	; (c458 <ulist_next@@Base+0x6e4>)
    c07a:	ldr	r3, [pc, #976]	; (c44c <ulist_next@@Base+0x6d8>)
    c07c:	add	r2, pc
    c07e:	ldr	r3, [r2, r3]
    c080:	ldr	r2, [r3, #0]
    c082:	ldr	r3, [sp, #68]	; 0x44
    c084:	eors	r2, r3
    c086:	beq.w	c43c <ulist_next@@Base+0x6c8>
    c08a:	blx	84cc <__stack_chk_fail@plt>
    c08e:	ldr	r6, [pc, #972]	; (c45c <ulist_next@@Base+0x6e8>)
    c090:	bl	bb62 <ulist_reinit@@Base>
    c094:	ldr	r7, [pc, #968]	; (c460 <ulist_next@@Base+0x6ec>)
    c096:	sub.w	r5, fp, #32
    c09a:	ldr.w	sl, [pc, #968]	; c464 <ulist_next@@Base+0x6f0>
    c09e:	add	r6, pc
    c0a0:	ldrd	r2, r3, [fp, #-24]
    c0a4:	add	r7, pc
    c0a6:	ldrd	r8, r9, [fp, #-32]
    c0aa:	add	sl, pc
    c0ac:	strd	r2, r3, [sp, #16]
    c0b0:	ldrd	r2, r3, [r5]
    c0b4:	mov	r1, r6
    c0b6:	mov	r0, r7
    c0b8:	cmp	r3, r9
    c0ba:	it	eq
    c0bc:	cmpeq	r2, r8
    c0be:	movw	r2, #545	; 0x221
    c0c2:	ite	ne
    c0c4:	movne	r3, #1
    c0c6:	moveq	r3, #0
    c0c8:	bl	c008 <ulist_next@@Base+0x294>
    c0cc:	ldrd	r2, r3, [r5, #8]
    c0d0:	ldrd	r0, r1, [sp, #16]
    c0d4:	cmp	r3, r1
    c0d6:	mov	r1, r6
    c0d8:	it	eq
    c0da:	cmpeq	r2, r0
    c0dc:	movw	r2, #546	; 0x222
    c0e0:	mov	r0, sl
    c0e2:	ite	ne
    c0e4:	movne	r3, #1
    c0e6:	moveq	r3, #0
    c0e8:	bl	c008 <ulist_next@@Base+0x294>
    c0ec:	ldrd	r2, r3, [r5, #24]
    c0f0:	orrs.w	r1, r2, r3
    c0f4:	beq.n	c1d8 <ulist_next@@Base+0x464>
    c0f6:	cmp	r3, #0
    c0f8:	it	eq
    c0fa:	cmpeq	r2, #5
    c0fc:	beq.n	c1b4 <ulist_next@@Base+0x440>
    c0fe:	cmp.w	r2, #256	; 0x100
    c102:	sbcs.w	r1, r3, #0
    c106:	bge.n	c1b4 <ulist_next@@Base+0x440>
    c108:	mov	r0, fp
    c10a:	bl	13e66 <rb_next@@Base>
    c10e:	mov	fp, r0
    c110:	cmp	r0, #0
    c112:	bne.n	c1e4 <ulist_next@@Base+0x470>
    c114:	ldrd	r2, r3, [sp, #24]
    c118:	orrs	r3, r2
    c11a:	beq.n	c18a <ulist_next@@Base+0x416>
    c11c:	ldr	r5, [pc, #840]	; (c468 <ulist_next@@Base+0x6f4>)
    c11e:	movs	r3, #0
    c120:	str	r3, [sp, #60]	; 0x3c
    c122:	add	r5, pc
    c124:	add	r1, sp, #60	; 0x3c
    c126:	mov	r0, r4
    c128:	bl	bd74 <ulist_next@@Base>
    c12c:	cbz	r0, c18a <ulist_next@@Base+0x416>
    c12e:	ldrd	r6, r7, [r0]
    c132:	movw	r2, #1465	; 0x5b9
    c136:	vmov	r1, s18
    c13a:	mov	r0, r5
    c13c:	orrs.w	r3, r6, r7
    c140:	ite	eq
    c142:	moveq	r3, #1
    c144:	movne	r3, #0
    c146:	bl	c008 <ulist_next@@Base+0x294>
    c14a:	ldrd	r2, r3, [sp, #24]
    c14e:	cmp	r3, r7
    c150:	it	eq
    c152:	cmpeq	r2, r6
    c154:	bne.n	c124 <ulist_next@@Base+0x3b0>
    c156:	ldr	r3, [r4, #0]
    c158:	add	r5, sp, #64	; 0x40
    c15a:	ldr	r6, [pc, #784]	; (c46c <ulist_next@@Base+0x6f8>)
    c15c:	movs	r0, #1
    c15e:	ldr	r1, [pc, #784]	; (c470 <ulist_next@@Base+0x6fc>)
    c160:	str	r3, [sp, #8]
    c162:	add	r6, pc
    c164:	ldrd	r2, r3, [sp, #16]
    c168:	add	r1, pc
    c16a:	strd	r2, r3, [sp]
    c16e:	mov	r3, r9
    c170:	mov	r2, r8
    c172:	blx	87f4 <__printf_chk@plt+0x4>
    c176:	movs	r3, #0
    c178:	str	r3, [sp, #64]	; 0x40
    c17a:	mov	r1, r5
    c17c:	mov	r0, r4
    c17e:	bl	bd74 <ulist_next@@Base>
    c182:	cbnz	r0, c1f8 <ulist_next@@Base+0x484>
    c184:	movs	r0, #10
    c186:	blx	8790 <putchar@plt+0x4>
    c18a:	ldr	r3, [sp, #52]	; 0x34
    c18c:	cmp	r3, #0
    c18e:	beq.w	c06a <ulist_next@@Base+0x2f6>
    c192:	movs	r0, #0
    c194:	bl	bb74 <ulist_alloc@@Base>
    c198:	mov	r7, r0
    c19a:	movs	r0, #0
    c19c:	bl	bb74 <ulist_alloc@@Base>
    c1a0:	mov	r5, r0
    c1a2:	cbz	r7, c1a6 <ulist_next@@Base+0x432>
    c1a4:	cbnz	r0, c206 <ulist_next@@Base+0x492>
    c1a6:	mov	r0, r7
    c1a8:	bl	bb88 <ulist_free@@Base>
    c1ac:	mov	r0, r5
    c1ae:	bl	bb88 <ulist_free@@Base>
    c1b2:	b.n	c1ca <ulist_next@@Base+0x456>
    c1b4:	movs	r1, #0
    c1b6:	movs	r0, #0
    c1b8:	str	r1, [sp, #8]
    c1ba:	movs	r1, #0
    c1bc:	strd	r0, r1, [sp]
    c1c0:	mov	r0, r4
    c1c2:	bl	bc9c <ulist_add@@Base>
    c1c6:	cmp	r0, #0
    c1c8:	bge.n	c108 <ulist_next@@Base+0x394>
    c1ca:	ldr	r0, [pc, #680]	; (c474 <ulist_next@@Base+0x700>)
    c1cc:	add	r0, pc
    c1ce:	bl	1747c <__btrfs_error@@Base>
    c1d2:	mvn.w	r0, #11
    c1d6:	b.n	c078 <ulist_next@@Base+0x304>
    c1d8:	ldrd	r2, r3, [r5, #16]
    c1dc:	mov	r0, r4
    c1de:	bl	be4c <ulist_next@@Base+0xd8>
    c1e2:	b.n	c1c6 <ulist_next@@Base+0x452>
    c1e4:	ldrd	r2, r3, [r0, #-32]
    c1e8:	sub.w	r5, r0, #32
    c1ec:	cmp	r3, r9
    c1ee:	it	eq
    c1f0:	cmpeq	r2, r8
    c1f2:	beq.w	c0b0 <ulist_next@@Base+0x33c>
    c1f6:	b.n	c114 <ulist_next@@Base+0x3a0>
    c1f8:	ldrd	r2, r3, [r0]
    c1fc:	mov	r1, r6
    c1fe:	movs	r0, #1
    c200:	blx	87f4 <__printf_chk@plt+0x4>
    c204:	b.n	c17a <ulist_next@@Base+0x406>
    c206:	movs	r3, #0
    c208:	str	r3, [sp, #60]	; 0x3c
    c20a:	ldr	r3, [pc, #620]	; (c478 <ulist_next@@Base+0x704>)
    c20c:	add	r3, pc
    c20e:	adds	r3, #35	; 0x23
    c210:	vmov	s17, r3
    c214:	ldr.w	sl, [pc, #612]	; c47c <ulist_next@@Base+0x708>
    c218:	add	sl, pc
    c21a:	add.w	r8, sp, #60	; 0x3c
    c21e:	mov	r0, r4
    c220:	mov	r1, r8
    c222:	bl	bd74 <ulist_next@@Base>
    c226:	cbnz	r0, c276 <ulist_next@@Base+0x502>
    c228:	ldr	r3, [r4, #0]
    c22a:	mov.w	sl, #0
    c22e:	str	r0, [sp, #60]	; 0x3c
    c230:	mov	r9, r3
    c232:	ldr	r3, [pc, #588]	; (c480 <ulist_next@@Base+0x70c>)
    c234:	add	r3, pc
    c236:	str	r3, [sp, #32]
    c238:	mov	r1, r8
    c23a:	mov	r0, r7
    c23c:	bl	bd74 <ulist_next@@Base>
    c240:	cmp	r0, #0
    c242:	bne.w	c3b8 <ulist_next@@Base+0x644>
    c246:	ldr	r6, [pc, #572]	; (c484 <ulist_next@@Base+0x710>)
    c248:	ldr	r1, [r4, #0]
    c24a:	add	r6, pc
    c24c:	adds	r1, #1
    c24e:	ldrd	r2, r3, [r6]
    c252:	adds	r2, r2, r1
    c254:	adc.w	r3, r3, r1, asr #31
    c258:	strd	r2, r3, [r6]
    c25c:	mov	r3, r0
    c25e:	mov	r0, r7
    c260:	str	r3, [sp, #16]
    c262:	bl	bb88 <ulist_free@@Base>
    c266:	mov	r0, r5
    c268:	bl	bb88 <ulist_free@@Base>
    c26c:	ldr	r3, [sp, #16]
    c26e:	cmp	r3, #0
    c270:	beq.w	c06a <ulist_next@@Base+0x2f6>
    c274:	b.n	c1ca <ulist_next@@Base+0x456>
    c276:	ldrd	r8, r9, [r0]
    c27a:	mov.w	r2, #422	; 0x1a6
    c27e:	vmov	r1, s17
    c282:	mov	r0, sl
    c284:	orrs.w	r3, r8, r9
    c288:	ite	eq
    c28a:	moveq	r3, #1
    c28c:	movne	r3, #0
    c28e:	bl	c008 <ulist_next@@Base+0x294>
    c292:	mov	r0, r8
    c294:	mov	r1, r9
    c296:	bl	bdb0 <ulist_next@@Base+0x3c>
    c29a:	mov	r6, r0
    c29c:	cmp	r0, #0
    c29e:	beq.n	c21a <ulist_next@@Base+0x4a6>
    c2a0:	cmp.w	r9, #0
    c2a4:	it	eq
    c2a6:	cmpeq.w	r8, #5
    c2aa:	beq.w	c3b4 <ulist_next@@Base+0x640>
    c2ae:	cmp.w	r8, #256	; 0x100
    c2b2:	sbcs.w	r3, r9, #0
    c2b6:	ite	ge
    c2b8:	movge	r3, #1
    c2ba:	movlt	r3, #0
    c2bc:	ldr	r1, [pc, #456]	; (c488 <ulist_next@@Base+0x714>)
    c2be:	eor.w	r3, r3, #1
    c2c2:	ldr	r0, [pc, #456]	; (c48c <ulist_next@@Base+0x718>)
    c2c4:	mov.w	r2, #432	; 0x1b0
    c2c8:	add	r1, pc
    c2ca:	mov.w	r8, #0
    c2ce:	adds	r1, #35	; 0x23
    c2d0:	add	r0, pc
    c2d2:	bl	c008 <ulist_next@@Base+0x294>
    c2d6:	str.w	r8, [sp, #8]
    c2da:	strd	r6, r8, [sp]
    c2de:	mov	r0, r7
    c2e0:	ldrd	r2, r3, [r6]
    c2e4:	bl	bc9c <ulist_add@@Base>
    c2e8:	subs	r3, r0, #0
    c2ea:	blt.n	c25e <ulist_next@@Base+0x4ea>
    c2ec:	mov	r0, r5
    c2ee:	bl	bb62 <ulist_reinit@@Base>
    c2f2:	str.w	r8, [sp, #8]
    c2f6:	strd	r6, r8, [sp]
    c2fa:	mov	r0, r5
    c2fc:	ldrd	r2, r3, [r6]
    c300:	bl	bc9c <ulist_add@@Base>
    c304:	subs	r3, r0, #0
    c306:	blt.n	c25e <ulist_next@@Base+0x4ea>
    c308:	ldr	r3, [pc, #388]	; (c490 <ulist_next@@Base+0x71c>)
    c30a:	str.w	r8, [sp, #64]	; 0x40
    c30e:	add	r3, pc
    c310:	adds	r3, #35	; 0x23
    c312:	vmov	s16, r3
    c316:	add	r1, sp, #64	; 0x40
    c318:	mov	r0, r5
    c31a:	bl	bd74 <ulist_next@@Base>
    c31e:	cmp	r0, #0
    c320:	beq.w	c214 <ulist_next@@Base+0x4a0>
    c324:	ldr	r3, [pc, #364]	; (c494 <ulist_next@@Base+0x720>)
    c326:	ldr	r6, [r0, #8]
    c328:	add	r3, pc
    c32a:	ldr.w	sl, [pc, #364]	; c498 <ulist_next@@Base+0x724>
    c32e:	ldrd	r0, r1, [r3]
    c332:	add	sl, pc
    c334:	ldrd	r2, r3, [r6, #128]	; 0x80
    c338:	ldr.w	r8, [r6, #108]	; 0x6c
    c33c:	cmp	r3, r1
    c33e:	it	eq
    c340:	cmpeq	r2, r0
    c342:	it	cc
    c344:	strdcc	r0, r1, [r6, #128]	; 0x80
    c348:	ldrd	r3, r2, [r6, #128]	; 0x80
    c34c:	adds	r3, #1
    c34e:	adc.w	r2, r2, #0
    c352:	strd	r3, r2, [r6, #128]	; 0x80
    c356:	add.w	r3, r6, #108	; 0x6c
    c35a:	cmp	r8, r3
    c35c:	beq.n	c316 <ulist_next@@Base+0x5a2>
    c35e:	ldr.w	r9, [r8, #16]
    c362:	mov	r0, sl
    c364:	vmov	r1, s16
    c368:	ldrd	r2, r3, [r9]
    c36c:	strd	r2, r3, [sp, #32]
    c370:	clz	r3, r6
    c374:	mov.w	r2, #458	; 0x1ca
    c378:	lsrs	r3, r3, #5
    c37a:	bl	c008 <ulist_next@@Base+0x294>
    c37e:	movs	r1, #0
    c380:	ldrd	r2, r3, [sp, #32]
    c384:	mov	r0, r7
    c386:	str	r1, [sp, #8]
    c388:	strd	r9, r1, [sp]
    c38c:	bl	bc9c <ulist_add@@Base>
    c390:	subs	r3, r0, #0
    c392:	blt.w	c25e <ulist_next@@Base+0x4ea>
    c396:	movs	r1, #0
    c398:	ldrd	r2, r3, [sp, #32]
    c39c:	mov	r0, r5
    c39e:	str	r1, [sp, #8]
    c3a0:	strd	r9, r1, [sp]
    c3a4:	bl	bc9c <ulist_add@@Base>
    c3a8:	subs	r3, r0, #0
    c3aa:	blt.w	c25e <ulist_next@@Base+0x4ea>
    c3ae:	ldr.w	r8, [r8]
    c3b2:	b.n	c356 <ulist_next@@Base+0x5e2>
    c3b4:	ldr	r3, [sp, #52]	; 0x34
    c3b6:	b.n	c2bc <ulist_next@@Base+0x548>
    c3b8:	ldr.w	ip, [r0, #8]
    c3bc:	ldr	r3, [sp, #32]
    c3be:	ldrd	r0, r1, [ip, #128]	; 0x80
    c3c2:	ldrd	r2, r3, [r3]
    c3c6:	cmp	r1, r3
    c3c8:	it	eq
    c3ca:	cmpeq	r0, r2
    c3cc:	bcc.w	c238 <ulist_next@@Base+0x4c4>
    c3d0:	subs	r6, r0, r2
    c3d2:	str	r6, [sp, #40]	; 0x28
    c3d4:	sbc.w	r6, r1, r3
    c3d8:	cmp	r1, r3
    c3da:	it	eq
    c3dc:	cmpeq	r0, r2
    c3de:	str	r6, [sp, #44]	; 0x2c
    c3e0:	beq.w	c238 <ulist_next@@Base+0x4c4>
    c3e4:	ldrd	r3, r2, [ip, #64]	; 0x40
    c3e8:	ldr	r1, [sp, #16]
    c3ea:	adds	r3, r3, r1
    c3ec:	ldr	r1, [sp, #20]
    c3ee:	adc.w	r2, r1, r2
    c3f2:	ldr	r1, [sp, #16]
    c3f4:	strd	r3, r2, [ip, #64]	; 0x40
    c3f8:	ldrd	r3, r2, [ip, #72]	; 0x48
    c3fc:	adds	r3, r3, r1
    c3fe:	ldr	r1, [sp, #20]
    c400:	adc.w	r2, r1, r2
    c404:	strd	r3, r2, [ip, #72]	; 0x48
    c408:	ldrd	r2, r3, [sp, #40]	; 0x28
    c40c:	cmp	sl, r3
    c40e:	it	eq
    c410:	cmpeq	r9, r2
    c412:	bne.w	c238 <ulist_next@@Base+0x4c4>
    c416:	ldrd	r3, r2, [ip, #80]	; 0x50
    c41a:	ldr	r1, [sp, #16]
    c41c:	adds	r3, r3, r1
    c41e:	ldr	r1, [sp, #20]
    c420:	adc.w	r2, r1, r2
    c424:	ldr	r1, [sp, #16]
    c426:	strd	r3, r2, [ip, #80]	; 0x50
    c42a:	ldrd	r3, r2, [ip, #88]	; 0x58
    c42e:	adds	r3, r3, r1
    c430:	ldr	r1, [sp, #20]
    c432:	adc.w	r2, r1, r2
    c436:	strd	r3, r2, [ip, #88]	; 0x58
    c43a:	b.n	c238 <ulist_next@@Base+0x4c4>
    c43c:	add	sp, #76	; 0x4c
    c43e:	vpop	{d8-d9}
    c442:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c446:	nop
    c448:	ldrh	r2, [r1, #42]	; 0x2a
    c44a:	movs	r5, r0
    c44c:	lsls	r4, r4, #8
    c44e:	movs	r0, r0
    c450:	add	r1, pc, #984	; (adr r1, c82c <ulist_next@@Base+0xab8>)
    c452:	movs	r5, r0
    c454:	sub.w	r0, sp, r2
    c458:	ldrh	r4, [r1, #40]	; 0x28
    c45a:	movs	r5, r0
    c45c:	sbc.w	r0, pc, r2
    c460:	b.n	c330 <ulist_next@@Base+0x5bc>
    c462:	movs	r2, r0
    c464:	b.n	c354 <ulist_next@@Base+0x5e0>
    c466:	movs	r2, r0
    c468:	b.n	c2a0 <ulist_next@@Base+0x52c>
    c46a:	movs	r2, r0
    c46c:	b.n	c266 <ulist_next@@Base+0x4f2>
    c46e:	movs	r2, r0
    c470:	b.n	c242 <ulist_next@@Base+0x4ce>
    c472:	movs	r2, r0
    c474:	b.n	c1e2 <ulist_next@@Base+0x46e>
    c476:	movs	r2, r0
    c478:	and.w	r0, r1, r2
    c47c:	b.n	c0c8 <ulist_next@@Base+0x354>
    c47e:	movs	r2, r0
    c480:	ldrh	r0, [r1, #52]	; 0x34
    c482:	movs	r5, r0
    c484:	ldrh	r2, [r6, #50]	; 0x32
    c486:	movs	r5, r0
    c488:	strd	r0, r0, [r5, #-8]
    c48c:	b.n	bfb6 <ulist_next@@Base+0x242>
    c48e:	movs	r2, r0
    c490:	ldrd	r0, r0, [pc], #8	; c49c <ulist_next@@Base+0x728>
    c494:	ldrh	r4, [r2, #44]	; 0x2c
    c496:	movs	r5, r0
    c498:	b.n	bf2c <ulist_next@@Base+0x1b8>
    c49a:	movs	r2, r0
    c49c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c4a0:	mov	r5, r3
    c4a2:	ldr	r3, [pc, #292]	; (c5c8 <ulist_next@@Base+0x854>)
    c4a4:	mov	r6, r0
    c4a6:	ldrd	r8, r9, [sp, #40]	; 0x28
    c4aa:	mov	r7, r1
    c4ac:	add	r3, pc
    c4ae:	mov	r4, r2
    c4b0:	ldr.w	sl, [r3, #24]
    c4b4:	cmp.w	sl, #0
    c4b8:	beq.n	c4fa <ulist_next@@Base+0x786>
    c4ba:	ldrd	r2, r3, [sl, #-32]
    c4be:	cmp	r7, r3
    c4c0:	it	eq
    c4c2:	cmpeq	r6, r2
    c4c4:	bcc.n	c56a <ulist_next@@Base+0x7f6>
    c4c6:	cmp	r3, r7
    c4c8:	it	eq
    c4ca:	cmpeq	r2, r6
    c4cc:	bcc.n	c5c0 <ulist_next@@Base+0x84c>
    c4ce:	ldrd	r2, r3, [sl, #-16]
    c4d2:	cmp	r9, r3
    c4d4:	it	eq
    c4d6:	cmpeq	r8, r2
    c4d8:	bcc.n	c56a <ulist_next@@Base+0x7f6>
    c4da:	cmp	r3, r9
    c4dc:	it	eq
    c4de:	cmpeq	r2, r8
    c4e0:	bcc.n	c5c0 <ulist_next@@Base+0x84c>
    c4e2:	ldrd	r2, r3, [sl, #-8]
    c4e6:	cmp	r5, r3
    c4e8:	it	eq
    c4ea:	cmpeq	r4, r2
    c4ec:	bcc.n	c56a <ulist_next@@Base+0x7f6>
    c4ee:	cmp	r3, r5
    c4f0:	it	eq
    c4f2:	cmpeq	r2, r4
    c4f4:	bcc.n	c5c0 <ulist_next@@Base+0x84c>
    c4f6:	sub.w	sl, sl, #32
    c4fa:	orrs.w	r3, r8, r9
    c4fe:	beq.n	c570 <ulist_next@@Base+0x7fc>
    c500:	orrs.w	r3, r4, r5
    c504:	ite	ne
    c506:	movne	r3, #1
    c508:	moveq	r3, #0
    c50a:	ldr	r1, [pc, #192]	; (c5cc <ulist_next@@Base+0x858>)
    c50c:	mov.w	r2, #302	; 0x12e
    c510:	ldr	r0, [pc, #188]	; (c5d0 <ulist_next@@Base+0x85c>)
    c512:	add	r1, pc
    c514:	adds	r1, #54	; 0x36
    c516:	add	r0, pc
    c518:	bl	c008 <ulist_next@@Base+0x294>
    c51c:	cmp.w	sl, #0
    c520:	bne.n	c5bc <ulist_next@@Base+0x848>
    c522:	movs	r1, #48	; 0x30
    c524:	movs	r0, #1
    c526:	blx	8358 <calloc@plt+0x4>
    c52a:	mov	fp, r0
    c52c:	cbz	r0, c564 <ulist_next@@Base+0x7f0>
    c52e:	ldrd	r2, r3, [sp, #48]	; 0x30
    c532:	strd	r6, r7, [r0]
    c536:	strd	r4, r5, [r0, #24]
    c53a:	strd	r2, r3, [r0, #8]
    c53e:	ldr	r3, [pc, #148]	; (c5d4 <ulist_next@@Base+0x860>)
    c540:	strd	r8, r9, [r0, #16]
    c544:	add	r3, pc
    c546:	adds	r3, #24
    c548:	ldr	r1, [r3, #0]
    c54a:	cbnz	r1, c574 <ulist_next@@Base+0x800>
    c54c:	strd	sl, r1, [fp, #32]
    c550:	add.w	r0, fp, #32
    c554:	str.w	r1, [fp, #40]	; 0x28
    c558:	ldr	r1, [pc, #124]	; (c5d8 <ulist_next@@Base+0x864>)
    c55a:	str	r0, [r3, #0]
    c55c:	add	r1, pc
    c55e:	adds	r1, #24
    c560:	bl	13b2a <rb_insert_color@@Base>
    c564:	mov	r0, fp
    c566:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c56a:	ldr.w	sl, [sl, #8]
    c56e:	b.n	c4b4 <ulist_next@@Base+0x740>
    c570:	movs	r3, #0
    c572:	b.n	c50a <ulist_next@@Base+0x796>
    c574:	ldrd	r2, r3, [r1, #-32]
    c578:	cmp	r7, r3
    c57a:	it	eq
    c57c:	cmpeq	r6, r2
    c57e:	bcc.n	c5b4 <ulist_next@@Base+0x840>
    c580:	cmp	r3, r7
    c582:	it	eq
    c584:	cmpeq	r2, r6
    c586:	bcc.n	c5b0 <ulist_next@@Base+0x83c>
    c588:	ldrd	r2, r3, [r1, #-16]
    c58c:	cmp	r9, r3
    c58e:	it	eq
    c590:	cmpeq	r8, r2
    c592:	bcc.n	c5b4 <ulist_next@@Base+0x840>
    c594:	cmp	r3, r9
    c596:	it	eq
    c598:	cmpeq	r2, r8
    c59a:	bcc.n	c5b0 <ulist_next@@Base+0x83c>
    c59c:	ldrd	r2, r3, [r1, #-8]
    c5a0:	cmp	r5, r3
    c5a2:	it	eq
    c5a4:	cmpeq	r4, r2
    c5a6:	bcc.n	c5b4 <ulist_next@@Base+0x840>
    c5a8:	cmp	r3, r5
    c5aa:	it	eq
    c5ac:	cmpeq	r2, r4
    c5ae:	bcs.n	c564 <ulist_next@@Base+0x7f0>
    c5b0:	adds	r3, r1, #4
    c5b2:	b.n	c5b8 <ulist_next@@Base+0x844>
    c5b4:	add.w	r3, r1, #8
    c5b8:	mov	sl, r1
    c5ba:	b.n	c548 <ulist_next@@Base+0x7d4>
    c5bc:	mov	fp, sl
    c5be:	b.n	c564 <ulist_next@@Base+0x7f0>
    c5c0:	ldr.w	sl, [sl, #4]
    c5c4:	b.n	c4b4 <ulist_next@@Base+0x740>
    c5c6:	nop
    c5c8:	ldr	r5, [sp, #640]	; 0x280
    c5ca:	movs	r5, r0
    c5cc:	b.n	c3c6 <ulist_next@@Base+0x652>
    c5ce:	movs	r2, r0
    c5d0:	b.n	cd0a <report_qgroups@@Base+0xd6>
    c5d2:	movs	r2, r0
    c5d4:	ldr	r5, [sp, #32]
    c5d6:	movs	r5, r0
    c5d8:	ldr	r4, [sp, #960]	; 0x3c0
    c5da:	movs	r5, r0
    c5dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c5e0:	movs	r6, #0
    c5e2:	vpush	{d8}
    c5e6:	mov	r4, r6
    c5e8:	ldr	r3, [pc, #864]	; (c94c <ulist_next@@Base+0xbd8>)
    c5ea:	ldr	r2, [pc, #868]	; (c950 <ulist_next@@Base+0xbdc>)
    c5ec:	add	r3, pc
    c5ee:	sub	sp, #180	; 0xb4
    c5f0:	add	r2, pc
    c5f2:	str	r3, [sp, #32]
    c5f4:	ldr	r3, [pc, #860]	; (c954 <ulist_next@@Base+0xbe0>)
    c5f6:	str	r0, [sp, #56]	; 0x38
    c5f8:	ldr	r3, [r2, r3]
    c5fa:	ldr	r3, [r3, #0]
    c5fc:	str	r3, [sp, #172]	; 0xac
    c5fe:	mov.w	r3, #0
    c602:	ldr	r3, [r0, #24]
    c604:	str	r3, [sp, #36]	; 0x24
    c606:	add	r3, sp, #104	; 0x68
    c608:	str	r3, [sp, #16]
    c60a:	mov	r0, r3
    c60c:	bl	17e48 <btrfs_init_path@@Base>
    c610:	ldr	r3, [sp, #16]
    c612:	ldr	r1, [sp, #36]	; 0x24
    c614:	add	r2, sp, #64	; 0x40
    c616:	mov	r0, r6
    c618:	strd	r6, r6, [sp]
    c61c:	strd	r6, r6, [sp, #64]	; 0x40
    c620:	strb.w	r6, [sp, #72]	; 0x48
    c624:	strb.w	r6, [sp, #73]	; 0x49
    c628:	strb.w	r6, [sp, #74]	; 0x4a
    c62c:	strb.w	r6, [sp, #75]	; 0x4b
    c630:	strb.w	r6, [sp, #76]	; 0x4c
    c634:	strb.w	r6, [sp, #77]	; 0x4d
    c638:	strb.w	r6, [sp, #78]	; 0x4e
    c63c:	strb.w	r6, [sp, #79]	; 0x4f
    c640:	strb.w	r6, [sp, #80]	; 0x50
    c644:	bl	1a23c <btrfs_search_slot@@Base>
    c648:	subs	r7, r0, #0
    c64a:	bge.n	c662 <ulist_next@@Base+0x8ee>
    c64c:	ldr	r3, [pc, #776]	; (c958 <ulist_next@@Base+0xbe4>)
    c64e:	ldr	r2, [sp, #32]
    c650:	ldr	r0, [r2, r3]
    c652:	mov	r3, r7
    c654:	ldr	r2, [pc, #772]	; (c95c <ulist_next@@Base+0xbe8>)
    c656:	add	r2, pc
    c658:	movs	r1, #1
    c65a:	ldr	r0, [r0, #0]
    c65c:	blx	881c <__fprintf_chk@plt+0x4>
    c660:	b.n	c818 <ulist_next@@Base+0xaa4>
    c662:	movs	r3, #1
    c664:	strb.w	r3, [sp, #168]	; 0xa8
    c668:	ldr	r3, [pc, #756]	; (c960 <ulist_next@@Base+0xbec>)
    c66a:	mov	sl, r6
    c66c:	mov	fp, r6
    c66e:	str	r6, [sp, #24]
    c670:	add	r3, pc
    c672:	adds	r3, #93	; 0x5d
    c674:	vmov	s16, r3
    c678:	ldr	r7, [sp, #104]	; 0x68
    c67a:	mov.w	r8, #197	; 0xc5
    c67e:	ldr.w	r3, [r7, #192]	; 0xc0
    c682:	str	r3, [sp, #60]	; 0x3c
    c684:	movs	r3, #0
    c686:	str	r3, [sp, #28]
    c688:	ldr	r3, [pc, #728]	; (c964 <ulist_next@@Base+0xbf0>)
    c68a:	add	r3, pc
    c68c:	vmov	s17, r3
    c690:	ldr	r3, [sp, #60]	; 0x3c
    c692:	ldr	r2, [sp, #28]
    c694:	cmp	r3, r2
    c696:	bgt.n	c6c0 <ulist_next@@Base+0x94c>
    c698:	ldr	r3, [sp, #36]	; 0x24
    c69a:	add	r1, sp, #104	; 0x68
    c69c:	movs	r5, #0
    c69e:	strb.w	r5, [sp, #169]	; 0xa9
    c6a2:	ldr.w	r0, [r3, #464]	; 0x1d0
    c6a6:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    c6aa:	subs	r7, r0, #0
    c6ac:	beq.n	c678 <ulist_next@@Base+0x904>
    c6ae:	bge.w	c93a <ulist_next@@Base+0xbc6>
    c6b2:	ldr	r3, [pc, #676]	; (c958 <ulist_next@@Base+0xbe4>)
    c6b4:	ldr	r2, [sp, #32]
    c6b6:	ldr	r0, [r2, r3]
    c6b8:	mov	r3, r7
    c6ba:	ldr	r2, [pc, #684]	; (c968 <ulist_next@@Base+0xbf4>)
    c6bc:	add	r2, pc
    c6be:	b.n	c658 <ulist_next@@Base+0x8e4>
    c6c0:	sub.w	r2, r8, #96	; 0x60
    c6c4:	movs	r3, #17
    c6c6:	add	r1, sp, #84	; 0x54
    c6c8:	mov	r0, r7
    c6ca:	bl	1731a <read_extent_buffer@@Base>
    c6ce:	ldr	r3, [sp, #84]	; 0x54
    c6d0:	ldrb.w	r5, [sp, #92]	; 0x5c
    c6d4:	ldr.w	r6, [sp, #93]	; 0x5d
    c6d8:	str	r3, [sp, #16]
    c6da:	ldr	r3, [sp, #88]	; 0x58
    c6dc:	ldr.w	r9, [sp, #97]	; 0x61
    c6e0:	str.w	r6, [sp, #73]	; 0x49
    c6e4:	str	r3, [sp, #20]
    c6e6:	ldrd	r2, r3, [sp, #16]
    c6ea:	str.w	r9, [sp, #77]	; 0x4d
    c6ee:	strb.w	r5, [sp, #72]	; 0x48
    c6f2:	strd	r2, r3, [sp, #64]	; 0x40
    c6f6:	add.w	r3, r5, #88	; 0x58
    c6fa:	uxtb	r3, r3
    c6fc:	cmp	r3, #1
    c6fe:	bhi.w	c88c <ulist_next@@Base+0xb18>
    c702:	ldr	r2, [pc, #616]	; (c96c <ulist_next@@Base+0xbf8>)
    c704:	cmp	r5, #169	; 0xa9
    c706:	add.w	sl, r7, r8
    c70a:	it	ne
    c70c:	strne.w	r9, [sp, #24]
    c710:	add	r2, pc
    c712:	it	ne
    c714:	movne	r4, r6
    c716:	ldr.w	r5, [sl, #17]
    c71a:	add.w	r6, r7, #96	; 0x60
    c71e:	ldr	r3, [r2, #32]
    c720:	ldr.w	fp, [sl, #21]
    c724:	add.w	r3, r3, #1
    c728:	str	r3, [r2, #32]
    c72a:	ittet	eq
    c72c:	ldreq	r3, [sp, #56]	; 0x38
    c72e:	moveq	r2, #1
    c730:	movne	r2, #0
    c732:	ldreq.w	r4, [r3, #384]	; 0x180
    c736:	itt	eq
    c738:	moveq	r3, #0
    c73a:	streq	r3, [sp, #24]
    c73c:	add.w	r3, r5, #101	; 0x65
    c740:	adds	r1, r6, r3
    c742:	ldr	r1, [r1, #16]
    c744:	and.w	r1, r1, #2
    c748:	str	r1, [sp, #40]	; 0x28
    c74a:	movs	r1, #0
    c74c:	str	r1, [sp, #44]	; 0x2c
    c74e:	ldrd	r0, r1, [sp, #40]	; 0x28
    c752:	orrs	r1, r0
    c754:	beq.n	c7cc <ulist_next@@Base+0xa58>
    c756:	cmp	r2, #0
    c758:	bne.n	c7cc <ulist_next@@Base+0xa58>
    c75a:	adds	r5, #143	; 0x8f
    c75c:	add	fp, r3
    c75e:	cmp	fp, r5
    c760:	bhi.n	c7d2 <ulist_next@@Base+0xa5e>
    c762:	ldr.w	r3, [sl, #17]
    c766:	ldrb.w	r2, [sp, #72]	; 0x48
    c76a:	adds	r3, #101	; 0x65
    c76c:	add	r6, r3
    c76e:	ldr	r3, [r6, #16]
    c770:	and.w	r3, r3, #2
    c774:	str	r3, [sp, #48]	; 0x30
    c776:	movs	r3, #0
    c778:	str	r3, [sp, #52]	; 0x34
    c77a:	ldrd	r0, r1, [sp, #48]	; 0x30
    c77e:	orrs.w	r3, r0, r1
    c782:	beq.n	c882 <ulist_next@@Base+0xb0e>
    c784:	cmp	r2, #169	; 0xa9
    c786:	beq.n	c886 <ulist_next@@Base+0xb12>
    c788:	ldrb.w	r6, [r6, #41]	; 0x29
    c78c:	cmp	r6, #0
    c78e:	beq.w	c912 <ulist_next@@Base+0xb9e>
    c792:	movs	r1, #16
    c794:	movs	r0, #1
    c796:	blx	8358 <calloc@plt+0x4>
    c79a:	mov	r5, r0
    c79c:	cbz	r0, c7c8 <ulist_next@@Base+0xa54>
    c79e:	ldr	r1, [pc, #464]	; (c970 <ulist_next@@Base+0xbfc>)
    c7a0:	ldr	r3, [sp, #24]
    c7a2:	add	r1, pc
    c7a4:	str	r4, [r0, #8]
    c7a6:	str	r6, [r0, #0]
    c7a8:	str	r3, [r0, #12]
    c7aa:	movs	r3, #0
    c7ac:	str	r3, [sp, #8]
    c7ae:	strd	r0, r3, [sp]
    c7b2:	ldrd	r2, r3, [sp, #16]
    c7b6:	ldr	r0, [r1, #28]
    c7b8:	bl	bc9c <ulist_add@@Base>
    c7bc:	cmp	r0, #0
    c7be:	bge.w	c912 <ulist_next@@Base+0xb9e>
    c7c2:	mov	r0, r5
    c7c4:	blx	83f0 <free@plt+0x4>
    c7c8:	movs	r7, #12
    c7ca:	b.n	c81e <ulist_next@@Base+0xaaa>
    c7cc:	add.w	r5, r3, #24
    c7d0:	b.n	c75c <ulist_next@@Base+0x9e8>
    c7d2:	adds	r1, r6, r5
    c7d4:	ldrb.w	r9, [r6, r5]
    c7d8:	mov	r3, r1
    c7da:	sub.w	r0, r9, #176	; 0xb0
    c7de:	ldr.w	r2, [r3, #1]!
    c7e2:	ldr	r3, [r3, #4]
    c7e4:	cmp	r0, #8
    c7e6:	bhi.n	c816 <ulist_next@@Base+0xaa2>
    c7e8:	tbb	[pc, r0]
    c7ec:	asrs	r0, r5, #20
    c7ee:	asrs	r4, r4, #20
    c7f0:	asrs	r5, r2, #20
    c7f2:	asrs	r5, r0, #20
    c7f4:	movs	r5, r0
    c7f6:	mov	r1, r2
    c7f8:	movs	r2, #0
    c7fa:	mov	ip, r3
    c7fc:	mov	r3, r2
    c7fe:	ldr	r0, [sp, #24]
    c800:	strd	r1, ip, [sp]
    c804:	str	r4, [sp, #8]
    c806:	str	r0, [sp, #12]
    c808:	ldrd	r0, r1, [sp, #16]
    c80c:	bl	c49c <ulist_next@@Base+0x728>
    c810:	cbnz	r0, c842 <ulist_next@@Base+0xace>
    c812:	movs	r7, #12
    c814:	b.n	c818 <ulist_next@@Base+0xaa4>
    c816:	movs	r7, #1
    c818:	add	r0, sp, #104	; 0x68
    c81a:	bl	17e58 <btrfs_release_path@@Base>
    c81e:	ldr	r2, [pc, #340]	; (c974 <ulist_next@@Base+0xc00>)
    c820:	ldr	r3, [pc, #304]	; (c954 <ulist_next@@Base+0xbe0>)
    c822:	add	r2, pc
    c824:	ldr	r3, [r2, r3]
    c826:	ldr	r2, [r3, #0]
    c828:	ldr	r3, [sp, #172]	; 0xac
    c82a:	eors	r2, r3
    c82c:	beq.w	c93e <ulist_next@@Base+0xbca>
    c830:	blx	84cc <__stack_chk_fail@plt>
    c834:	mov	r3, r1
    c836:	ldr.w	r2, [r3, #1]!
    c83a:	ldr	r3, [r3, #4]
    c83c:	movs	r1, #0
    c83e:	mov	ip, r1
    c840:	b.n	c7fe <ulist_next@@Base+0xa8a>
    c842:	cmp.w	r9, #176	; 0xb0
    c846:	beq.n	c874 <ulist_next@@Base+0xb00>
    c848:	cmp.w	r9, #182	; 0xb6
    c84c:	beq.n	c874 <ulist_next@@Base+0xb00>
    c84e:	cmp.w	r9, #184	; 0xb8
    c852:	beq.n	c87a <ulist_next@@Base+0xb06>
    c854:	cmp.w	r9, #178	; 0xb2
    c858:	beq.n	c87e <ulist_next@@Base+0xb0a>
    c85a:	ldr	r2, [pc, #284]	; (c978 <ulist_next@@Base+0xc04>)
    c85c:	movs	r3, #1
    c85e:	ldr	r1, [pc, #284]	; (c97c <ulist_next@@Base+0xc08>)
    c860:	ldr	r0, [pc, #284]	; (c980 <ulist_next@@Base+0xc0c>)
    c862:	add	r2, pc
    c864:	str	r3, [sp, #0]
    c866:	adds	r2, #64	; 0x40
    c868:	add	r1, pc
    c86a:	add	r0, pc
    c86c:	movw	r3, #1818	; 0x71a
    c870:	bl	bfa4 <ulist_next@@Base+0x230>
    c874:	movs	r3, #9
    c876:	add	r5, r3
    c878:	b.n	c75e <ulist_next@@Base+0x9ea>
    c87a:	movs	r3, #13
    c87c:	b.n	c876 <ulist_next@@Base+0xb02>
    c87e:	movs	r3, #29
    c880:	b.n	c876 <ulist_next@@Base+0xb02>
    c882:	cmp	r2, #169	; 0xa9
    c884:	bne.n	c912 <ulist_next@@Base+0xb9e>
    c886:	ldr.w	r6, [sp, #73]	; 0x49
    c88a:	b.n	c78c <ulist_next@@Base+0xa18>
    c88c:	add.w	r3, r5, #80	; 0x50
    c890:	uxtb	r3, r3
    c892:	cmp	r3, #8
    c894:	bhi.n	c90e <ulist_next@@Base+0xb9a>
    c896:	ldrd	r2, r3, [sp, #16]
    c89a:	subs	r5, #176	; 0xb0
    c89c:	vmov	r1, s16
    c8a0:	cmp	fp, r3
    c8a2:	vmov	r0, s17
    c8a6:	it	eq
    c8a8:	cmpeq	sl, r2
    c8aa:	movw	r2, #1229	; 0x4cd
    c8ae:	ite	ne
    c8b0:	movne	r3, #1
    c8b2:	moveq	r3, #0
    c8b4:	bl	c008 <ulist_next@@Base+0x294>
    c8b8:	cmp	r5, #8
    c8ba:	bhi.n	c816 <ulist_next@@Base+0xaa2>
    c8bc:	add	r3, pc, #8	; (adr r3, c8c8 <ulist_next@@Base+0xb54>)
    c8be:	ldr.w	r2, [r3, r5, lsl #2]
    c8c2:	add	r3, r2
    c8c4:	bx	r3
    c8c6:	nop
    c8c8:	lsls	r5, r5, #1
    c8ca:	movs	r0, r0
    c8cc:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c8d0:	lsls	r3, r3, #1
    c8d2:	movs	r0, r0
    c8d4:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c8d8:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c8dc:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c8e0:	movs	r5, r4
    c8e2:	movs	r0, r0
    c8e4:	vmaxnm.f32	<illegal reg q15.5>, <illegal reg q15.5>, <illegal reg q15.5>
    c8e8:	movs	r5, r4
    c8ea:	movs	r0, r0
    c8ec:	mov	r3, r6
    c8ee:	movs	r6, #0
    c8f0:	mov	r2, r9
    c8f2:	mov	r9, r6
    c8f4:	ldr	r1, [sp, #24]
    c8f6:	mov	r0, sl
    c8f8:	strd	r3, r2, [sp]
    c8fc:	mov	r2, r6
    c8fe:	mov	r3, r9
    c900:	str	r4, [sp, #8]
    c902:	str	r1, [sp, #12]
    c904:	mov	r1, fp
    c906:	bl	c49c <ulist_next@@Base+0x728>
    c90a:	cmp	r0, #0
    c90c:	beq.n	c812 <ulist_next@@Base+0xa9e>
    c90e:	strd	sl, fp, [sp, #16]
    c912:	ldr	r3, [sp, #28]
    c914:	add.w	r8, r8, #25
    c918:	ldrd	sl, fp, [sp, #16]
    c91c:	adds	r3, #1
    c91e:	str	r3, [sp, #28]
    c920:	b.n	c690 <ulist_next@@Base+0x91c>
    c922:	add.w	r3, r7, r8
    c926:	ldr.w	r3, [r3, #17]
    c92a:	add	r3, r7
    c92c:	ldr.w	r6, [r3, #197]!
    c930:	ldr.w	r9, [r3, #4]
    c934:	movs	r3, #0
    c936:	mov	r2, r3
    c938:	b.n	c8f4 <ulist_next@@Base+0xb80>
    c93a:	mov	r7, r5
    c93c:	b.n	c818 <ulist_next@@Base+0xaa4>
    c93e:	mov	r0, r7
    c940:	add	sp, #180	; 0xb4
    c942:	vpop	{d8}
    c946:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c94a:	nop
    c94c:	strh	r4, [r3, #60]	; 0x3c
    c94e:	movs	r5, r0
    c950:	strh	r0, [r3, #60]	; 0x3c
    c952:	movs	r5, r0
    c954:	lsls	r4, r4, #8
    c956:	movs	r0, r0
    c958:	lsls	r4, r6, #8
    c95a:	movs	r0, r0
    c95c:	b.n	ce34 <report_qgroups@@Base+0x200>
    c95e:	movs	r2, r0
    c960:	b.n	c49e <ulist_next@@Base+0x72a>
    c962:	movs	r2, r0
    c964:	b.n	ce2a <report_qgroups@@Base+0x1f6>
    c966:	movs	r2, r0
    c968:	b.n	cdf8 <report_qgroups@@Base+0x1c4>
    c96a:	movs	r2, r0
    c96c:	ldr	r3, [sp, #240]	; 0xf0
    c96e:	movs	r5, r0
    c970:	ldr	r2, [sp, #680]	; 0x2a8
    c972:	movs	r5, r0
    c974:	strh	r6, [r4, #42]	; 0x2a
    c976:	movs	r5, r0
    c978:	b.n	d0d2 <qgroup_verify_all@@Base+0x16a>
    c97a:	movs	r2, r0
    c97c:	b.n	ca72 <ulist_next@@Base+0xcfe>
    c97e:	movs	r2, r0
    c980:	asrs	r1, r0, #22
    c982:	movs	r3, r0
    c984:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c988:	mov	r7, r1
    c98a:	ldr	r4, [pc, #352]	; (caec <ulist_next@@Base+0xd78>)
    c98c:	sub	sp, #44	; 0x2c
    c98e:	ldr	r1, [pc, #352]	; (caf0 <ulist_next@@Base+0xd7c>)
    c990:	mov.w	sl, #0
    c994:	add	r4, pc
    c996:	mov.w	fp, #0
    c99a:	mov	r6, r0
    c99c:	mov	r8, r2
    c99e:	ldr	r1, [r4, r1]
    c9a0:	mov	r9, r3
    c9a2:	ldr	r1, [r1, #0]
    c9a4:	str	r1, [sp, #36]	; 0x24
    c9a6:	mov.w	r1, #0
    c9aa:	strd	sl, fp, [sp]
    c9ae:	bl	1d684 <read_tree_block@@Base>
    c9b2:	mov	r4, r0
    c9b4:	cmp	r0, #0
    c9b6:	beq.w	cade <ulist_next@@Base+0xd6a>
    c9ba:	cmn.w	r0, #4096	; 0x1000
    c9be:	bhi.w	cade <ulist_next@@Base+0xd6a>
    c9c2:	ldr	r3, [r0, #84]	; 0x54
    c9c4:	lsls	r3, r3, #29
    c9c6:	bpl.w	cade <ulist_next@@Base+0xd6a>
    c9ca:	ldrd	r2, r3, [sp, #88]	; 0x58
    c9ce:	cmp	r9, r3
    c9d0:	it	eq
    c9d2:	cmpeq	r8, r2
    c9d4:	bne.n	ca2e <ulist_next@@Base+0xcba>
    c9d6:	ldrb.w	r5, [r4, #196]	; 0xc4
    c9da:	ldr.w	r8, [r4, #192]	; 0xc0
    c9de:	cmp	r5, #0
    c9e0:	beq.n	cad8 <ulist_next@@Base+0xd64>
    c9e2:	ldr.w	r9, [pc, #272]	; caf4 <ulist_next@@Base+0xd80>
    c9e6:	movs	r5, #0
    c9e8:	mov	fp, r5
    c9ea:	mov	sl, r5
    c9ec:	add	r9, pc
    c9ee:	cmp	r5, r8
    c9f0:	bge.n	ca78 <ulist_next@@Base+0xd04>
    c9f2:	ldr.w	r2, [r9, #36]	; 0x24
    c9f6:	ldrd	r3, r1, [r2]
    c9fa:	adds	r3, #1
    c9fc:	adc.w	r1, r1, #0
    ca00:	strd	r3, r1, [r2]
    ca04:	add.w	r3, r5, r5, lsl #5
    ca08:	ldrd	r0, r1, [sp, #88]	; 0x58
    ca0c:	add	r3, r4
    ca0e:	adds	r5, #1
    ca10:	ldr.w	r2, [r3, #214]!
    ca14:	ldr	r3, [r3, #4]
    ca16:	strd	r0, r1, [sp, #8]
    ca1a:	mov	r0, r6
    ca1c:	ldr.w	r1, [r6, #384]	; 0x180
    ca20:	strd	r1, sl, [sp]
    ca24:	mov	r1, r7
    ca26:	bl	c984 <ulist_next@@Base+0xc10>
    ca2a:	mov	fp, r0
    ca2c:	b.n	c9ee <ulist_next@@Base+0xc7a>
    ca2e:	ldrd	r2, r3, [sp, #80]	; 0x50
    ca32:	mov	r0, r8
    ca34:	mov	r1, r9
    ca36:	strd	r2, r3, [sp, #8]
    ca3a:	ldrd	r2, r3, [sp, #88]	; 0x58
    ca3e:	strd	r2, r3, [sp]
    ca42:	mov	r2, sl
    ca44:	mov	r3, fp
    ca46:	bl	c49c <ulist_next@@Base+0x728>
    ca4a:	cmp	r0, #0
    ca4c:	bne.n	c9d6 <ulist_next@@Base+0xc62>
    ca4e:	mov.w	fp, #12
    ca52:	b.n	ca7e <ulist_next@@Base+0xd0a>
    ca54:	mul.w	r9, r6, r5
    ca58:	movs	r3, #17
    ca5a:	mov	r1, r7
    ca5c:	mov	r0, r4
    ca5e:	add.w	r2, r9, #101	; 0x65
    ca62:	bl	1731a <read_extent_buffer@@Base>
    ca66:	ldrb.w	r3, [sp, #24]
    ca6a:	cmp	r3, #108	; 0x6c
    ca6c:	beq.n	ca92 <ulist_next@@Base+0xd1e>
    ca6e:	adds	r5, #1
    ca70:	cmp	r5, r8
    ca72:	blt.n	ca54 <ulist_next@@Base+0xce0>
    ca74:	mov.w	fp, #0
    ca78:	mov	r0, r4
    ca7a:	bl	16c20 <free_extent_buffer@@Base>
    ca7e:	ldr	r2, [pc, #120]	; (caf8 <ulist_next@@Base+0xd84>)
    ca80:	ldr	r3, [pc, #108]	; (caf0 <ulist_next@@Base+0xd7c>)
    ca82:	add	r2, pc
    ca84:	ldr	r3, [r2, r3]
    ca86:	ldr	r2, [r3, #0]
    ca88:	ldr	r3, [sp, #36]	; 0x24
    ca8a:	eors	r2, r3
    ca8c:	beq.n	cae4 <ulist_next@@Base+0xd70>
    ca8e:	blx	84cc <__stack_chk_fail@plt>
    ca92:	add	r9, r4
    ca94:	ldr.w	r2, [r9, #214]	; 0xd6
    ca98:	add	r2, r4
    ca9a:	add.w	r3, r2, #197	; 0xc5
    ca9e:	ldrb.w	r2, [r2, #217]	; 0xd9
    caa2:	cmp	r2, #0
    caa4:	beq.n	ca6e <ulist_next@@Base+0xcfa>
    caa6:	mov	r2, r3
    caa8:	ldr.w	r0, [r2, #21]!
    caac:	ldr	r1, [r2, #4]
    caae:	orrs.w	r2, r0, r1
    cab2:	beq.n	ca6e <ulist_next@@Base+0xcfa>
    cab4:	ldr.w	r2, [r3, #29]!
    cab8:	ldr	r3, [r3, #4]
    caba:	strd	r2, r3, [sp, #8]
    cabe:	ldrd	r2, r3, [sp, #88]	; 0x58
    cac2:	strd	r2, r3, [sp]
    cac6:	movs	r2, #0
    cac8:	movs	r3, #0
    caca:	bl	c49c <ulist_next@@Base+0x728>
    cace:	cmp	r0, #0
    cad0:	bne.n	ca6e <ulist_next@@Base+0xcfa>
    cad2:	mov.w	fp, #12
    cad6:	b.n	ca78 <ulist_next@@Base+0xd04>
    cad8:	add	r7, sp, #16
    cada:	movs	r6, #25
    cadc:	b.n	ca70 <ulist_next@@Base+0xcfc>
    cade:	mvn.w	fp, #4
    cae2:	b.n	ca7e <ulist_next@@Base+0xd0a>
    cae4:	mov	r0, fp
    cae6:	add	sp, #44	; 0x2c
    cae8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    caec:	strh	r4, [r6, #30]
    caee:	movs	r5, r0
    caf0:	lsls	r4, r4, #8
    caf2:	movs	r0, r0
    caf4:	ldr	r0, [sp, #384]	; 0x180
    caf6:	movs	r5, r0
    caf8:	strh	r6, [r0, #24]
    cafa:	movs	r5, r0
    cafc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cb00:	mov	r4, r0
    cb02:	vpush	{d8}
    cb06:	ldr	r2, [pc, #264]	; (cc10 <ulist_next@@Base+0xe9c>)
    cb08:	ldr	r3, [pc, #264]	; (cc14 <ulist_next@@Base+0xea0>)
    cb0a:	add	r2, pc
    cb0c:	ldr	r5, [pc, #264]	; (cc18 <ulist_next@@Base+0xea4>)
    cb0e:	sub	sp, #60	; 0x3c
    cb10:	ldr	r3, [r2, r3]
    cb12:	add	r5, pc
    cb14:	adds	r5, #106	; 0x6a
    cb16:	ldr	r3, [r3, #0]
    cb18:	str	r3, [sp, #52]	; 0x34
    cb1a:	mov.w	r3, #0
    cb1e:	movs	r3, #0
    cb20:	str	r3, [sp, #28]
    cb22:	ldr	r3, [pc, #248]	; (cc1c <ulist_next@@Base+0xea8>)
    cb24:	add	r3, pc
    cb26:	str	r3, [sp, #20]
    cb28:	ldr	r3, [sp, #20]
    cb2a:	add	r1, sp, #28
    cb2c:	ldr	r0, [r3, #28]
    cb2e:	bl	bd74 <ulist_next@@Base>
    cb32:	cmp	r0, #0
    cb34:	beq.n	cbd0 <ulist_next@@Base+0xe5c>
    cb36:	ldr	r3, [pc, #232]	; (cc20 <ulist_next@@Base+0xeac>)
    cb38:	ldrd	r7, r6, [r0]
    cb3c:	add	r3, pc
    cb3e:	ldr.w	r9, [r0, #8]
    cb42:	vmov	s16, r3
    cb46:	mov	sl, r7
    cb48:	mov	fp, r6
    cb4a:	mov	r1, fp
    cb4c:	mov	r0, sl
    cb4e:	bl	bdea <ulist_next@@Base+0x76>
    cb52:	movw	r2, #590	; 0x24e
    cb56:	mov	r1, r5
    cb58:	clz	r3, r0
    cb5c:	mov	r8, r0
    cb5e:	vmov	r0, s16
    cb62:	lsrs	r3, r3, #5
    cb64:	bl	c008 <ulist_next@@Base+0x294>
    cb68:	ldrd	r2, r3, [r8, #24]
    cb6c:	orrs.w	r1, r2, r3
    cb70:	bne.n	cb84 <ulist_next@@Base+0xe10>
    cb72:	ldrd	r2, r3, [r8, #16]
    cb76:	cmp	fp, r3
    cb78:	it	eq
    cb7a:	cmpeq	sl, r2
    cb7c:	beq.n	cb28 <ulist_next@@Base+0xdb4>
    cb7e:	mov	sl, r2
    cb80:	mov	fp, r3
    cb82:	b.n	cb4a <ulist_next@@Base+0xdd6>
    cb84:	mov.w	r1, #4294967295	; 0xffffffff
    cb88:	cmp	r3, r1
    cb8a:	mvn.w	r0, #7
    cb8e:	it	eq
    cb90:	cmpeq	r2, r0
    cb92:	beq.n	cb28 <ulist_next@@Base+0xdb4>
    cb94:	add	r1, sp, #32
    cb96:	mov	r0, r4
    cb98:	strd	r2, r3, [sp, #32]
    cb9c:	mov.w	r2, #4294967295	; 0xffffffff
    cba0:	movs	r3, #132	; 0x84
    cba2:	strb.w	r2, [sp, #41]	; 0x29
    cba6:	strb.w	r3, [sp, #40]	; 0x28
    cbaa:	strb.w	r2, [sp, #42]	; 0x2a
    cbae:	strb.w	r2, [sp, #43]	; 0x2b
    cbb2:	strb.w	r2, [sp, #44]	; 0x2c
    cbb6:	strb.w	r2, [sp, #45]	; 0x2d
    cbba:	strb.w	r2, [sp, #46]	; 0x2e
    cbbe:	strb.w	r2, [sp, #47]	; 0x2f
    cbc2:	strb.w	r2, [sp, #48]	; 0x30
    cbc6:	bl	1da06 <btrfs_read_fs_root@@Base>
    cbca:	mov	r1, r0
    cbcc:	cbnz	r0, cbe4 <ulist_next@@Base+0xe70>
    cbce:	movs	r0, #2
    cbd0:	ldr	r2, [pc, #80]	; (cc24 <ulist_next@@Base+0xeb0>)
    cbd2:	ldr	r3, [pc, #64]	; (cc14 <ulist_next@@Base+0xea0>)
    cbd4:	add	r2, pc
    cbd6:	ldr	r3, [r2, r3]
    cbd8:	ldr	r2, [r3, #0]
    cbda:	ldr	r3, [sp, #52]	; 0x34
    cbdc:	eors	r2, r3
    cbde:	beq.n	cc06 <ulist_next@@Base+0xe92>
    cbe0:	blx	84cc <__stack_chk_fail@plt>
    cbe4:	cmn.w	r0, #4096	; 0x1000
    cbe8:	bhi.n	cbce <ulist_next@@Base+0xe5a>
    cbea:	strd	r7, r6, [sp, #8]
    cbee:	mov	r0, r4
    cbf0:	ldrd	r2, r3, [r9, #8]
    cbf4:	strd	r2, r3, [sp]
    cbf8:	mov	r2, r7
    cbfa:	mov	r3, r6
    cbfc:	bl	c984 <ulist_next@@Base+0xc10>
    cc00:	cmp	r0, #0
    cc02:	beq.n	cb28 <ulist_next@@Base+0xdb4>
    cc04:	b.n	cbd0 <ulist_next@@Base+0xe5c>
    cc06:	add	sp, #60	; 0x3c
    cc08:	vpop	{d8}
    cc0c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cc10:	strh	r6, [r7, #18]
    cc12:	movs	r5, r0
    cc14:	lsls	r4, r4, #8
    cc16:	movs	r0, r0
    cc18:	b.n	ce12 <report_qgroups@@Base+0x1de>
    cc1a:	movs	r2, r0
    cc1c:	str	r7, [sp, #160]	; 0xa0
    cc1e:	movs	r5, r0
    cc20:	ble.n	cbea <ulist_next@@Base+0xe76>
    cc22:	movs	r2, r0
    cc24:	strh	r4, [r6, #12]
    cc26:	movs	r5, r0

0000cc28 <qgroup_set_item_count_ptr@@Base>:
    cc28:	ldr	r3, [pc, #4]	; (cc30 <qgroup_set_item_count_ptr@@Base+0x8>)
    cc2a:	add	r3, pc
    cc2c:	str	r0, [r3, #36]	; 0x24
    cc2e:	bx	lr
    cc30:	str	r6, [sp, #136]	; 0x88
    cc32:	movs	r5, r0

0000cc34 <report_qgroups@@Base>:
    cc34:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cc38:	mov	r5, r0
    cc3a:	ldr	r4, [pc, #552]	; (ce64 <report_qgroups@@Base+0x230>)
    cc3c:	sub	sp, #60	; 0x3c
    cc3e:	ldr	r3, [pc, #552]	; (ce68 <report_qgroups@@Base+0x234>)
    cc40:	add	r4, pc
    cc42:	ldr	r3, [r4, r3]
    cc44:	ldr	r3, [r3, #0]
    cc46:	cbnz	r3, cc5c <report_qgroups@@Base+0x28>
    cc48:	ldr	r3, [pc, #544]	; (ce6c <report_qgroups@@Base+0x238>)
    cc4a:	add	r3, pc
    cc4c:	ldrb	r3, [r3, #8]
    cc4e:	lsls	r3, r3, #31
    cc50:	bpl.n	cc5c <report_qgroups@@Base+0x28>
    cc52:	cbz	r0, cc90 <report_qgroups@@Base+0x5c>
    cc54:	ldr	r0, [pc, #536]	; (ce70 <report_qgroups@@Base+0x23c>)
    cc56:	add	r0, pc
    cc58:	blx	8618 <puts@plt+0x4>
    cc5c:	ldr	r6, [pc, #532]	; (ce74 <report_qgroups@@Base+0x240>)
    cc5e:	add	r6, pc
    cc60:	ldrb	r3, [r6, #8]
    cc62:	and.w	r3, r3, #3
    cc66:	cmp	r3, #2
    cc68:	bne.n	cca0 <report_qgroups@@Base+0x6c>
    cc6a:	ldr	r0, [pc, #524]	; (ce78 <report_qgroups@@Base+0x244>)
    cc6c:	add	r0, pc
    cc6e:	blx	8618 <puts@plt+0x4>
    cc72:	ldrb	r3, [r6, #8]
    cc74:	and.w	r3, r3, #3
    cc78:	cmp	r3, #2
    cc7a:	bne.n	cc8a <report_qgroups@@Base+0x56>
    cc7c:	ldr	r3, [pc, #508]	; (ce7c <report_qgroups@@Base+0x248>)
    cc7e:	ldr	r0, [pc, #512]	; (ce80 <report_qgroups@@Base+0x24c>)
    cc80:	ldr	r3, [r4, r3]
    cc82:	add	r0, pc
    cc84:	ldr	r1, [r3, #0]
    cc86:	blx	8930 <fputs@plt+0x4>
    cc8a:	mov.w	r8, #1
    cc8e:	b.n	cca4 <report_qgroups@@Base+0x70>
    cc90:	ldr	r0, [pc, #496]	; (ce84 <report_qgroups@@Base+0x250>)
    cc92:	add	r0, pc
    cc94:	blx	8618 <puts@plt+0x4>
    cc98:	mov	r0, r5
    cc9a:	add	sp, #60	; 0x3c
    cc9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    cca0:	mov.w	r8, #0
    cca4:	ldr	r0, [pc, #480]	; (ce88 <report_qgroups@@Base+0x254>)
    cca6:	movs	r7, #0
    cca8:	ldr.w	r9, [pc, #480]	; ce8c <report_qgroups@@Base+0x258>
    ccac:	add	r0, pc
    ccae:	ldr.w	sl, [pc, #480]	; ce90 <report_qgroups@@Base+0x25c>
    ccb2:	bl	13e46 <rb_first@@Base>
    ccb6:	ldr	r6, [pc, #476]	; (ce94 <report_qgroups@@Base+0x260>)
    ccb8:	add	r9, pc
    ccba:	add	sl, pc
    ccbc:	add	r6, pc
    ccbe:	mov	r4, r0
    ccc0:	cbnz	r4, ccd6 <report_qgroups@@Base+0xa2>
    ccc2:	cmp	r7, #0
    ccc4:	beq.w	ce60 <report_qgroups@@Base+0x22c>
    ccc8:	cmp.w	r8, #0
    cccc:	ite	ne
    ccce:	movne	r5, #0
    ccd0:	mvneq.w	r5, #116	; 0x74
    ccd4:	b.n	cc98 <report_qgroups@@Base+0x64>
    ccd6:	ldrd	r2, r0, [r4, #-16]
    ccda:	ldrd	r3, r1, [r4, #-48]	; 0x30
    ccde:	subs	r3, r2, r3
    cce0:	str	r3, [sp, #24]
    cce2:	sbc.w	r3, r0, r1
    cce6:	ldrd	r2, r0, [r4, #-32]
    ccea:	str	r3, [sp, #28]
    ccec:	ldrd	r3, r1, [r4, #-64]	; 0x40
    ccf0:	subs	r3, r2, r3
    ccf2:	str	r3, [sp, #32]
    ccf4:	ldr	r2, [sp, #32]
    ccf6:	sbc.w	r3, r0, r1
    ccfa:	str	r3, [sp, #36]	; 0x24
    ccfc:	ldr	r3, [sp, #24]
    ccfe:	orrs	r3, r2
    cd00:	ldr	r2, [sp, #36]	; 0x24
    cd02:	str	r3, [sp, #40]	; 0x28
    cd04:	ldr	r3, [sp, #28]
    cd06:	orrs	r3, r2
    cd08:	str	r3, [sp, #44]	; 0x2c
    cd0a:	cbnz	r5, cd28 <report_qgroups@@Base+0xf4>
    cd0c:	ldrd	r2, r3, [sp, #40]	; 0x28
    cd10:	orrs	r3, r2
    cd12:	beq.w	ce56 <report_qgroups@@Base+0x222>
    cd16:	ldr.w	r3, [r4, #-88]
    cd1a:	cbnz	r3, cd28 <report_qgroups@@Base+0xf4>
    cd1c:	ldrh.w	r2, [r4, #-90]
    cd20:	mov	r3, r5
    cd22:	orrs	r3, r2
    cd24:	beq.w	ce32 <report_qgroups@@Base+0x1fe>
    cd28:	ldrd	fp, ip, [sp, #40]	; 0x28
    cd2c:	ldrd	r0, r3, [r4, #-96]	; 0x60
    cd30:	orrs.w	r1, fp, ip
    cd34:	mov.w	r2, r3, lsr #16
    cd38:	uxth	r3, r3
    cd3a:	bne.w	ce48 <report_qgroups@@Base+0x214>
    cd3e:	ldr	r1, [pc, #344]	; (ce98 <report_qgroups@@Base+0x264>)
    cd40:	add	r1, pc
    cd42:	strd	r0, r3, [sp]
    cd46:	movs	r3, #0
    cd48:	str	r1, [sp, #8]
    cd4a:	movs	r0, #1
    cd4c:	mov	r1, sl
    cd4e:	blx	87f4 <__printf_chk@plt+0x4>
    cd52:	ldrd	r2, r3, [r4, #-24]
    cd56:	str	r6, [sp, #8]
    cd58:	movs	r0, #1
    cd5a:	ldr	r1, [pc, #320]	; (ce9c <report_qgroups@@Base+0x268>)
    cd5c:	strd	r2, r3, [sp, #16]
    cd60:	ldrd	r2, r3, [r4, #-32]
    cd64:	add	r1, pc
    cd66:	str	r1, [sp, #52]	; 0x34
    cd68:	strd	r2, r3, [sp]
    cd6c:	mov	r3, r6
    cd6e:	ldr	r2, [pc, #304]	; (cea0 <report_qgroups@@Base+0x26c>)
    cd70:	add	r2, pc
    cd72:	blx	87f4 <__printf_chk@plt+0x4>
    cd76:	ldrd	r2, r3, [r4, #-56]	; 0x38
    cd7a:	str	r6, [sp, #8]
    cd7c:	movs	r0, #1
    cd7e:	ldr	r1, [sp, #52]	; 0x34
    cd80:	strd	r2, r3, [sp, #16]
    cd84:	ldrd	r2, r3, [r4, #-64]	; 0x40
    cd88:	strd	r2, r3, [sp]
    cd8c:	mov	r3, r6
    cd8e:	ldr	r2, [pc, #276]	; (cea4 <report_qgroups@@Base+0x270>)
    cd90:	add	r2, pc
    cd92:	blx	87f4 <__printf_chk@plt+0x4>
    cd96:	ldrd	r2, r3, [sp, #32]
    cd9a:	orrs	r3, r2
    cd9c:	beq.n	cdbc <report_qgroups@@Base+0x188>
    cd9e:	ldrd	r2, r3, [sp, #32]
    cda2:	movs	r0, #1
    cda4:	ldr	r1, [pc, #256]	; (cea8 <report_qgroups@@Base+0x274>)
    cda6:	str	r6, [sp, #8]
    cda8:	strd	r2, r3, [sp, #16]
    cdac:	add	r1, pc
    cdae:	strd	r2, r3, [sp]
    cdb2:	mov	r3, r6
    cdb4:	ldr	r2, [pc, #244]	; (ceac <report_qgroups@@Base+0x278>)
    cdb6:	add	r2, pc
    cdb8:	blx	87f4 <__printf_chk@plt+0x4>
    cdbc:	ldrd	r2, r3, [r4, #-8]
    cdc0:	movs	r0, #1
    cdc2:	ldr.w	fp, [pc, #236]	; ceb0 <report_qgroups@@Base+0x27c>
    cdc6:	ldr	r1, [pc, #236]	; (ceb4 <report_qgroups@@Base+0x280>)
    cdc8:	add	fp, pc
    cdca:	strd	r2, r3, [sp, #16]
    cdce:	str.w	fp, [sp, #8]
    cdd2:	add	r1, pc
    cdd4:	ldrd	r2, r3, [r4, #-16]
    cdd8:	str	r1, [sp, #52]	; 0x34
    cdda:	strd	r2, r3, [sp]
    cdde:	mov	r3, fp
    cde0:	ldr	r2, [pc, #212]	; (ceb8 <report_qgroups@@Base+0x284>)
    cde2:	add	r2, pc
    cde4:	blx	87f4 <__printf_chk@plt+0x4>
    cde8:	ldrd	r2, r3, [r4, #-40]	; 0x28
    cdec:	str.w	fp, [sp, #8]
    cdf0:	movs	r0, #1
    cdf2:	ldr	r1, [sp, #52]	; 0x34
    cdf4:	strd	r2, r3, [sp, #16]
    cdf8:	ldrd	r2, r3, [r4, #-48]	; 0x30
    cdfc:	strd	r2, r3, [sp]
    ce00:	mov	r3, fp
    ce02:	ldr	r2, [pc, #184]	; (cebc <report_qgroups@@Base+0x288>)
    ce04:	add	r2, pc
    ce06:	blx	87f4 <__printf_chk@plt+0x4>
    ce0a:	ldrd	r2, r3, [sp, #24]
    ce0e:	orrs	r3, r2
    ce10:	beq.n	ce4e <report_qgroups@@Base+0x21a>
    ce12:	ldrd	r2, r3, [sp, #24]
    ce16:	movs	r0, #1
    ce18:	ldr	r1, [pc, #164]	; (cec0 <report_qgroups@@Base+0x28c>)
    ce1a:	str.w	fp, [sp, #8]
    ce1e:	strd	r2, r3, [sp, #16]
    ce22:	add	r1, pc
    ce24:	strd	r2, r3, [sp]
    ce28:	mov	r3, fp
    ce2a:	ldr	r2, [pc, #152]	; (cec4 <report_qgroups@@Base+0x290>)
    ce2c:	add	r2, pc
    ce2e:	blx	87f4 <__printf_chk@plt+0x4>
    ce32:	ldr.w	r2, [r9, #4]
    ce36:	add.w	r3, r4, #40	; 0x28
    ce3a:	movs	r7, #1
    ce3c:	str.w	r3, [r9, #4]
    ce40:	strd	r9, r2, [r4, #40]	; 0x28
    ce44:	str	r3, [r2, #0]
    ce46:	b.n	ce56 <report_qgroups@@Base+0x222>
    ce48:	ldr	r1, [pc, #124]	; (cec8 <report_qgroups@@Base+0x294>)
    ce4a:	add	r1, pc
    ce4c:	b.n	cd42 <report_qgroups@@Base+0x10e>
    ce4e:	ldrd	r2, r3, [sp, #40]	; 0x28
    ce52:	orrs	r3, r2
    ce54:	bne.n	ce32 <report_qgroups@@Base+0x1fe>
    ce56:	mov	r0, r4
    ce58:	bl	13e66 <rb_next@@Base>
    ce5c:	mov	r4, r0
    ce5e:	b.n	ccc0 <report_qgroups@@Base+0x8c>
    ce60:	mov	r5, r7
    ce62:	b.n	cc98 <report_qgroups@@Base+0x64>
    ce64:	strh	r0, [r1, #10]
    ce66:	movs	r5, r0
    ce68:	lsls	r4, r0, #9
    ce6a:	movs	r0, r0
    ce6c:	str	r6, [sp, #8]
    ce6e:	movs	r5, r0
    ce70:	bgt.n	ce3a <report_qgroups@@Base+0x206>
    ce72:	movs	r2, r0
    ce74:	str	r5, [sp, #952]	; 0x3b8
    ce76:	movs	r5, r0
    ce78:	ble.n	cf0c <free_qgroup_counts@@Base+0x40>
    ce7a:	movs	r2, r0
    ce7c:	lsls	r4, r6, #8
    ce7e:	movs	r0, r0
    ce80:	ble.n	cd84 <report_qgroups@@Base+0x150>
    ce82:	movs	r2, r0
    ce84:	bgt.n	ce5e <report_qgroups@@Base+0x22a>
    ce86:	movs	r2, r0
    ce88:	str	r5, [sp, #640]	; 0x280
    ce8a:	movs	r5, r0
    ce8c:	strh	r4, [r1, #32]
    ce8e:	movs	r5, r0
    ce90:	ble.n	cf6c <qgroup_verify_all@@Base+0x4>
    ce92:	movs	r2, r0
    ce94:	ble.n	cdb4 <report_qgroups@@Base+0x180>
    ce96:	movs	r2, r0
    ce98:	blt.n	ced4 <free_qgroup_counts@@Base+0x8>
    ce9a:	movs	r2, r0
    ce9c:	bgt.n	ce8c <report_qgroups@@Base+0x258>
    ce9e:	movs	r2, r0
    cea0:	bgt.n	ce6e <report_qgroups@@Base+0x23a>
    cea2:	movs	r2, r0
    cea4:	bgt.n	ce7c <report_qgroups@@Base+0x248>
    cea6:	movs	r2, r0
    cea8:	bgt.n	ce60 <report_qgroups@@Base+0x22c>
    ceaa:	movs	r2, r0
    ceac:	bgt.n	ce44 <report_qgroups@@Base+0x210>
    ceae:	movs	r2, r0
    ceb0:	bgt.n	ce70 <report_qgroups@@Base+0x23c>
    ceb2:	movs	r2, r0
    ceb4:	bgt.n	cdc8 <report_qgroups@@Base+0x194>
    ceb6:	movs	r2, r0
    ceb8:	bgt.n	cfa2 <qgroup_verify_all@@Base+0x3a>
    ceba:	movs	r2, r0
    cebc:	bgt.n	cfac <qgroup_verify_all@@Base+0x44>
    cebe:	movs	r2, r0
    cec0:	bgt.n	cf8c <qgroup_verify_all@@Base+0x24>
    cec2:	movs	r2, r0
    cec4:	bgt.n	cf70 <qgroup_verify_all@@Base+0x8>
    cec6:	movs	r2, r0
    cec8:	bge.n	ce8e <report_qgroups@@Base+0x25a>
    ceca:	movs	r2, r0

0000cecc <free_qgroup_counts@@Base>:
    cecc:	ldr	r0, [pc, #144]	; (cf60 <free_qgroup_counts@@Base+0x94>)
    cece:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    ced2:	add	r0, pc
    ced4:	bl	13e46 <rb_first@@Base>
    ced8:	ldr	r6, [pc, #136]	; (cf64 <free_qgroup_counts@@Base+0x98>)
    ceda:	add	r6, pc
    cedc:	mov	r4, r0
    cede:	cbnz	r4, cee4 <free_qgroup_counts@@Base+0x18>
    cee0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    cee4:	add.w	r0, r4, #40	; 0x28
    cee8:	mov	r5, r4
    ceea:	bl	bd94 <ulist_next@@Base+0x20>
    ceee:	ldr.w	r1, [r5, #12]!
    cef2:	sub.w	r7, r4, #96	; 0x60
    cef6:	ldr.w	r8, [r1]
    cefa:	cmp	r1, r5
    cefc:	bne.n	cf26 <free_qgroup_counts@@Base+0x5a>
    cefe:	mov	r5, r4
    cf00:	ldr.w	r1, [r5, #20]!
    cf04:	ldr.w	r8, [r1]
    cf08:	cmp	r1, r5
    cf0a:	bne.n	cf42 <free_qgroup_counts@@Base+0x76>
    cf0c:	mov	r0, r4
    cf0e:	bl	13e66 <rb_next@@Base>
    cf12:	mov	r1, r6
    cf14:	mov	r5, r0
    cf16:	mov	r0, r4
    cf18:	bl	13bd0 <rb_erase@@Base>
    cf1c:	mov	r0, r7
    cf1e:	blx	83f0 <free@plt+0x4>
    cf22:	mov	r4, r5
    cf24:	b.n	cede <free_qgroup_counts@@Base+0x12>
    cf26:	mov	r0, r1
    cf28:	bl	bd94 <ulist_next@@Base+0x20>
    cf2c:	add.w	r0, r1, #8
    cf30:	bl	bd94 <ulist_next@@Base+0x20>
    cf34:	mov	r0, r1
    cf36:	blx	83f0 <free@plt+0x4>
    cf3a:	mov	r1, r8
    cf3c:	ldr.w	r8, [r8]
    cf40:	b.n	cefa <free_qgroup_counts@@Base+0x2e>
    cf42:	mov	r0, r1
    cf44:	bl	bd94 <ulist_next@@Base+0x20>
    cf48:	add.w	r0, r1, #8
    cf4c:	bl	bd94 <ulist_next@@Base+0x20>
    cf50:	mov	r0, r1
    cf52:	blx	83f0 <free@plt+0x4>
    cf56:	mov	r1, r8
    cf58:	ldr.w	r8, [r8]
    cf5c:	b.n	cf08 <free_qgroup_counts@@Base+0x3c>
    cf5e:	nop
    cf60:	str	r3, [sp, #488]	; 0x1e8
    cf62:	movs	r5, r0
    cf64:	str	r3, [sp, #456]	; 0x1c8
    cf66:	movs	r5, r0

0000cf68 <qgroup_verify_all@@Base>:
    cf68:	ldr	r2, [pc, #956]	; (d328 <qgroup_verify_all@@Base+0x3c0>)
    cf6a:	ldr	r3, [pc, #960]	; (d32c <qgroup_verify_all@@Base+0x3c4>)
    cf6c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    cf70:	add	r2, pc
    cf72:	ldrb.w	r4, [r0, #364]	; 0x16c
    cf76:	mov	r9, r0
    cf78:	ldr.w	r8, [pc, #948]	; d330 <qgroup_verify_all@@Base+0x3c8>
    cf7c:	sub	sp, #196	; 0xc4
    cf7e:	ldr	r3, [r2, r3]
    cf80:	ands.w	r0, r4, #16
    cf84:	add	r8, pc
    cf86:	ldr	r3, [r3, #0]
    cf88:	str	r3, [sp, #188]	; 0xbc
    cf8a:	mov.w	r3, #0
    cf8e:	beq.w	d31a <qgroup_verify_all@@Base+0x3b2>
    cf92:	movs	r0, #0
    cf94:	bl	bb74 <ulist_alloc@@Base>
    cf98:	ldr	r3, [pc, #920]	; (d334 <qgroup_verify_all@@Base+0x3cc>)
    cf9a:	add	r3, pc
    cf9c:	str	r0, [r3, #28]
    cf9e:	cbnz	r0, cfc8 <qgroup_verify_all@@Base+0x60>
    cfa0:	ldr	r3, [pc, #916]	; (d338 <qgroup_verify_all@@Base+0x3d0>)
    cfa2:	movs	r4, #12
    cfa4:	ldr	r0, [pc, #916]	; (d33c <qgroup_verify_all@@Base+0x3d4>)
    cfa6:	ldr.w	r3, [r8, r3]
    cfaa:	add	r0, pc
    cfac:	ldr	r1, [r3, #0]
    cfae:	blx	8930 <fputs@plt+0x4>
    cfb2:	ldr	r2, [pc, #908]	; (d340 <qgroup_verify_all@@Base+0x3d8>)
    cfb4:	ldr	r3, [pc, #884]	; (d32c <qgroup_verify_all@@Base+0x3c4>)
    cfb6:	add	r2, pc
    cfb8:	ldr	r3, [r2, r3]
    cfba:	ldr	r2, [r3, #0]
    cfbc:	ldr	r3, [sp, #188]	; 0xbc
    cfbe:	eors	r2, r3
    cfc0:	beq.w	d31e <qgroup_verify_all@@Base+0x3b6>
    cfc4:	blx	84cc <__stack_chk_fail@plt>
    cfc8:	ldr.w	r3, [r9, #44]	; 0x2c
    cfcc:	mov.w	fp, #0
    cfd0:	mov.w	sl, #2
    cfd4:	mov	r6, fp
    cfd6:	str	r3, [sp, #40]	; 0x28
    cfd8:	ldr	r3, [pc, #872]	; (d344 <qgroup_verify_all@@Base+0x3dc>)
    cfda:	add	r3, pc
    cfdc:	str	r3, [sp, #52]	; 0x34
    cfde:	add	r3, sp, #120	; 0x78
    cfe0:	str	r3, [sp, #8]
    cfe2:	mov	r0, r3
    cfe4:	bl	17e48 <btrfs_init_path@@Base>
    cfe8:	ldr	r3, [sp, #8]
    cfea:	strb.w	r6, [sp, #69]	; 0x45
    cfee:	strb.w	r6, [sp, #70]	; 0x46
    cff2:	strb.w	r6, [sp, #71]	; 0x47
    cff6:	strb.w	r6, [sp, #72]	; 0x48
    cffa:	strb.w	r6, [sp, #73]	; 0x49
    cffe:	strb.w	r6, [sp, #74]	; 0x4a
    d002:	strb.w	r6, [sp, #75]	; 0x4b
    d006:	strb.w	r6, [sp, #76]	; 0x4c
    d00a:	cmp.w	fp, #0
    d00e:	bne.n	d09c <qgroup_verify_all@@Base+0x134>
    d010:	movs	r2, #246	; 0xf6
    d012:	mov	r1, fp
    d014:	strd	r2, r1, [sp, #60]	; 0x3c
    d018:	movs	r0, #0
    d01a:	movs	r2, #0
    d01c:	ldr	r1, [sp, #40]	; 0x28
    d01e:	strd	r2, r2, [sp]
    d022:	add	r2, sp, #60	; 0x3c
    d024:	strb.w	r6, [sp, #68]	; 0x44
    d028:	bl	1a23c <btrfs_search_slot@@Base>
    d02c:	subs	r4, r0, #0
    d02e:	blt.n	d0a2 <qgroup_verify_all@@Base+0x13a>
    d030:	ldr	r3, [pc, #788]	; (d348 <qgroup_verify_all@@Base+0x3e0>)
    d032:	add	r3, pc
    d034:	str	r3, [sp, #36]	; 0x24
    d036:	ldr	r3, [sp, #120]	; 0x78
    d038:	str	r3, [sp, #20]
    d03a:	ldr.w	r3, [r3, #192]	; 0xc0
    d03e:	str	r3, [sp, #44]	; 0x2c
    d040:	ldr	r3, [sp, #20]
    d042:	adds	r3, #197	; 0xc5
    d044:	str	r3, [sp, #28]
    d046:	movs	r3, #0
    d048:	str	r3, [sp, #24]
    d04a:	ldr	r3, [pc, #768]	; (d34c <qgroup_verify_all@@Base+0x3e4>)
    d04c:	add	r3, pc
    d04e:	str	r3, [sp, #32]
    d050:	ldr	r3, [sp, #44]	; 0x2c
    d052:	ldr	r2, [sp, #24]
    d054:	cmp	r3, r2
    d056:	bgt.n	d0de <qgroup_verify_all@@Base+0x176>
    d058:	ldr	r3, [sp, #40]	; 0x28
    d05a:	add	r4, sp, #120	; 0x78
    d05c:	strb.w	r6, [sp, #185]	; 0xb9
    d060:	mov	r1, r4
    d062:	ldr.w	r0, [r3, #464]	; 0x1d0
    d066:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    d06a:	cmp	r0, #0
    d06c:	beq.n	d036 <qgroup_verify_all@@Base+0xce>
    d06e:	mov	r0, r4
    d070:	mov.w	fp, #1
    d074:	bl	17e58 <btrfs_release_path@@Base>
    d078:	cmp	sl, fp
    d07a:	bne.n	d098 <qgroup_verify_all@@Base+0x130>
    d07c:	mov	r0, r9
    d07e:	bl	c5dc <ulist_next@@Base+0x868>
    d082:	mov	r4, r0
    d084:	cmp	r0, #0
    d086:	beq.w	d2f4 <qgroup_verify_all@@Base+0x38c>
    d08a:	ldr	r3, [pc, #684]	; (d338 <qgroup_verify_all@@Base+0x3d0>)
    d08c:	ldr	r2, [pc, #704]	; (d350 <qgroup_verify_all@@Base+0x3e8>)
    d08e:	ldr.w	r0, [r8, r3]
    d092:	add	r2, pc
    d094:	mov	r3, r4
    d096:	b.n	d0c2 <qgroup_verify_all@@Base+0x15a>
    d098:	mov	sl, fp
    d09a:	b.n	cfde <qgroup_verify_all@@Base+0x76>
    d09c:	movs	r2, #0
    d09e:	mov	r1, r2
    d0a0:	b.n	d014 <qgroup_verify_all@@Base+0xac>
    d0a2:	ldr	r3, [pc, #660]	; (d338 <qgroup_verify_all@@Base+0x3d0>)
    d0a4:	movs	r1, #1
    d0a6:	ldr	r2, [pc, #684]	; (d354 <qgroup_verify_all@@Base+0x3ec>)
    d0a8:	ldr.w	r0, [r8, r3]
    d0ac:	add	r2, pc
    d0ae:	mov	r3, r4
    d0b0:	ldr	r0, [r0, #0]
    d0b2:	blx	881c <__fprintf_chk@plt+0x4>
    d0b6:	ldr	r3, [pc, #640]	; (d338 <qgroup_verify_all@@Base+0x3d0>)
    d0b8:	ldr	r2, [pc, #668]	; (d358 <qgroup_verify_all@@Base+0x3f0>)
    d0ba:	add	r2, pc
    d0bc:	ldr.w	r0, [r8, r3]
    d0c0:	mov	r3, r4
    d0c2:	ldr	r0, [r0, #0]
    d0c4:	movs	r1, #1
    d0c6:	blx	881c <__fprintf_chk@plt+0x4>
    d0ca:	bl	bf40 <ulist_next@@Base+0x1cc>
    d0ce:	ldr	r0, [pc, #652]	; (d35c <qgroup_verify_all@@Base+0x3f4>)
    d0d0:	ldr	r1, [pc, #652]	; (d360 <qgroup_verify_all@@Base+0x3f8>)
    d0d2:	add	r0, pc
    d0d4:	add	r1, pc
    d0d6:	adds	r0, #24
    d0d8:	bl	178fe <rb_free_nodes@@Base>
    d0dc:	b.n	cfb2 <qgroup_verify_all@@Base+0x4a>
    d0de:	ldr	r3, [sp, #24]
    d0e0:	movs	r2, #25
    d0e2:	add	r7, sp, #100	; 0x64
    d0e4:	ldr	r0, [sp, #20]
    d0e6:	muls	r2, r3
    d0e8:	mov	r1, r7
    d0ea:	movs	r3, #17
    d0ec:	adds	r2, #101	; 0x65
    d0ee:	bl	1731a <read_extent_buffer@@Base>
    d0f2:	ldr.w	r3, [sp, #109]	; 0x6d
    d0f6:	ldrd	r0, r1, [sp, #100]	; 0x64
    d0fa:	str	r3, [sp, #8]
    d0fc:	ldr.w	r3, [sp, #113]	; 0x71
    d100:	strd	r0, r1, [sp, #60]	; 0x3c
    d104:	str	r3, [sp, #12]
    d106:	ldr	r3, [sp, #8]
    d108:	str.w	r3, [sp, #69]	; 0x45
    d10c:	ldr	r3, [sp, #12]
    d10e:	str.w	r3, [sp, #73]	; 0x49
    d112:	ldrb.w	r3, [sp, #108]	; 0x6c
    d116:	strb.w	r3, [sp, #68]	; 0x44
    d11a:	cmp.w	fp, #0
    d11e:	beq.n	d190 <qgroup_verify_all@@Base+0x228>
    d120:	cmp	r3, #246	; 0xf6
    d122:	bne.n	d16e <qgroup_verify_all@@Base+0x206>
    d124:	ldrd	r3, r4, [sp, #8]
    d128:	cmp	r4, r1
    d12a:	it	eq
    d12c:	cmpeq	r3, r0
    d12e:	bcc.n	d16e <qgroup_verify_all@@Base+0x206>
    d130:	bl	bdb0 <ulist_next@@Base+0x3c>
    d134:	mov	r5, r0
    d136:	ldrd	r0, r1, [sp, #8]
    d13a:	bl	bdb0 <ulist_next@@Base+0x3c>
    d13e:	mov	r4, r0
    d140:	cbz	r5, d17c <qgroup_verify_all@@Base+0x214>
    d142:	cbz	r0, d17c <qgroup_verify_all@@Base+0x214>
    d144:	movs	r1, #24
    d146:	movs	r0, #1
    d148:	blx	8358 <calloc@plt+0x4>
    d14c:	cbz	r0, d18a <qgroup_verify_all@@Base+0x222>
    d14e:	strd	r4, r5, [r0, #16]
    d152:	adds	r5, #108	; 0x6c
    d154:	ldr	r3, [r5, #4]
    d156:	add.w	r1, r0, #8
    d15a:	str	r0, [r5, #4]
    d15c:	adds	r4, #116	; 0x74
    d15e:	strd	r5, r3, [r0]
    d162:	str	r0, [r3, #0]
    d164:	ldr	r2, [r4, #4]
    d166:	str	r1, [r4, #4]
    d168:	strd	r4, r2, [r0, #8]
    d16c:	str	r1, [r2, #0]
    d16e:	ldr	r3, [sp, #24]
    d170:	adds	r3, #1
    d172:	str	r3, [sp, #24]
    d174:	ldr	r3, [sp, #28]
    d176:	adds	r3, #25
    d178:	str	r3, [sp, #28]
    d17a:	b.n	d050 <qgroup_verify_all@@Base+0xe8>
    d17c:	mvn.w	r4, #1
    d180:	ldr	r0, [pc, #480]	; (d364 <qgroup_verify_all@@Base+0x3fc>)
    d182:	add	r0, pc
    d184:	bl	1747c <__btrfs_error@@Base>
    d188:	b.n	d0b6 <qgroup_verify_all@@Base+0x14e>
    d18a:	mvn.w	r4, #11
    d18e:	b.n	d180 <qgroup_verify_all@@Base+0x218>
    d190:	cmp	r3, #240	; 0xf0
    d192:	bne.n	d1c2 <qgroup_verify_all@@Base+0x25a>
    d194:	ldr	r3, [sp, #28]
    d196:	ldr	r2, [sp, #20]
    d198:	ldr	r1, [sp, #32]
    d19a:	ldr.w	r3, [r3, #17]
    d19e:	add	r3, r2
    d1a0:	ldrb	r1, [r1, #8]
    d1a2:	ldr.w	r2, [r3, #213]	; 0xd5
    d1a6:	bic.w	r1, r1, #3
    d1aa:	ubfx	r2, r2, #1, #2
    d1ae:	orrs	r2, r1
    d1b0:	ldr	r1, [sp, #32]
    d1b2:	strb	r2, [r1, #8]
    d1b4:	ldr.w	r2, [r3, #221]	; 0xdd
    d1b8:	ldr.w	r3, [r3, #225]	; 0xe1
    d1bc:	str	r2, [r1, #16]
    d1be:	str	r3, [r1, #20]
    d1c0:	b.n	d16e <qgroup_verify_all@@Base+0x206>
    d1c2:	cmp	r3, #242	; 0xf2
    d1c4:	bne.n	d16e <qgroup_verify_all@@Base+0x206>
    d1c6:	ldr	r3, [sp, #20]
    d1c8:	movs	r1, #144	; 0x90
    d1ca:	movs	r0, #1
    d1cc:	adds	r3, #96	; 0x60
    d1ce:	str	r3, [sp, #48]	; 0x30
    d1d0:	ldr	r3, [sp, #28]
    d1d2:	ldr.w	r5, [r3, #17]
    d1d6:	blx	8358 <calloc@plt+0x4>
    d1da:	adds	r5, #101	; 0x65
    d1dc:	mov	r4, r0
    d1de:	cmp	r0, #0
    d1e0:	beq.n	d2e0 <qgroup_verify_all@@Base+0x378>
    d1e2:	ldrd	r2, r3, [sp, #8]
    d1e6:	mov	ip, r0
    d1e8:	strd	r2, r3, [ip], #12
    d1ec:	ldmia	r7!, {r0, r1, r2, r3}
    d1ee:	stmia.w	ip!, {r0, r1, r2, r3}
    d1f2:	ldr	r3, [r7, #0]
    d1f4:	strb.w	r3, [ip]
    d1f8:	ldr	r3, [sp, #48]	; 0x30
    d1fa:	add	r3, r5
    d1fc:	ldr	r2, [r3, #8]
    d1fe:	mov	r5, r3
    d200:	ldr	r3, [r3, #12]
    d202:	strd	r2, r3, [r4, #32]
    d206:	ldr	r2, [r5, #16]
    d208:	ldr	r3, [r5, #20]
    d20a:	strd	r2, r3, [r4, #40]	; 0x28
    d20e:	ldr	r2, [r5, #24]
    d210:	ldr	r3, [r5, #28]
    d212:	strd	r2, r3, [r4, #48]	; 0x30
    d216:	ldr	r2, [r5, #32]
    d218:	ldr	r3, [r5, #36]	; 0x24
    d21a:	mov	r5, fp
    d21c:	strd	r2, r3, [r4, #56]	; 0x38
    d220:	add.w	r3, r4, #108	; 0x6c
    d224:	strd	r3, r3, [r4, #108]	; 0x6c
    d228:	add.w	r3, r4, #116	; 0x74
    d22c:	strd	r3, r3, [r4, #116]	; 0x74
    d230:	add.w	r3, r4, #136	; 0x88
    d234:	ldr	r2, [sp, #52]	; 0x34
    d236:	strd	r3, r3, [r4, #136]	; 0x88
    d23a:	ldr	r7, [r2, #0]
    d23c:	cmp	r7, #0
    d23e:	bne.n	d2b2 <qgroup_verify_all@@Base+0x34a>
    d240:	ldr	r1, [sp, #36]	; 0x24
    d242:	ldr	r0, [sp, #36]	; 0x24
    d244:	strd	r5, r7, [r4, #96]	; 0x60
    d248:	ldr	r1, [r1, #4]
    d24a:	str	r7, [r4, #104]	; 0x68
    d24c:	adds	r1, #1
    d24e:	str	r1, [r0, #4]
    d250:	add.w	r0, r4, #96	; 0x60
    d254:	ldr	r1, [sp, #36]	; 0x24
    d256:	str	r0, [r2, #0]
    d258:	bl	13b2a <rb_insert_color@@Base>
    d25c:	ldr.w	r2, [sp, #69]	; 0x45
    d260:	ldr.w	r3, [sp, #73]	; 0x49
    d264:	add	r1, sp, #80	; 0x50
    d266:	mov	r0, r9
    d268:	strd	r2, r3, [sp, #80]	; 0x50
    d26c:	mov.w	r2, #4294967295	; 0xffffffff
    d270:	movs	r3, #132	; 0x84
    d272:	strb.w	r2, [sp, #89]	; 0x59
    d276:	strb.w	r3, [sp, #88]	; 0x58
    d27a:	strb.w	r2, [sp, #90]	; 0x5a
    d27e:	strb.w	r2, [sp, #91]	; 0x5b
    d282:	strb.w	r2, [sp, #92]	; 0x5c
    d286:	strb.w	r2, [sp, #93]	; 0x5d
    d28a:	strb.w	r2, [sp, #94]	; 0x5e
    d28e:	strb.w	r2, [sp, #95]	; 0x5f
    d292:	strb.w	r2, [sp, #96]	; 0x60
    d296:	bl	1d904 <btrfs_read_fs_root_no_cache@@Base>
    d29a:	cmp	r0, #0
    d29c:	beq.w	d16e <qgroup_verify_all@@Base+0x206>
    d2a0:	cmn.w	r0, #4096	; 0x1000
    d2a4:	bhi.w	d16e <qgroup_verify_all@@Base+0x206>
    d2a8:	movs	r3, #1
    d2aa:	str	r3, [r4, #8]
    d2ac:	bl	1c5ea <btrfs_free_fs_root@@Base>
    d2b0:	b.n	d16e <qgroup_verify_all@@Base+0x206>
    d2b2:	ldrd	r0, r1, [r7, #-96]	; 0x60
    d2b6:	ldrd	r2, r3, [sp, #8]
    d2ba:	cmp	r3, r1
    d2bc:	it	eq
    d2be:	cmpeq	r2, r0
    d2c0:	bcs.n	d2ca <qgroup_verify_all@@Base+0x362>
    d2c2:	add.w	r2, r7, #8
    d2c6:	mov	r5, r7
    d2c8:	b.n	d23a <qgroup_verify_all@@Base+0x2d2>
    d2ca:	ldrd	r2, r3, [sp, #8]
    d2ce:	cmp	r1, r3
    d2d0:	it	eq
    d2d2:	cmpeq	r0, r2
    d2d4:	bcs.n	d2da <qgroup_verify_all@@Base+0x372>
    d2d6:	adds	r2, r7, #4
    d2d8:	b.n	d2c6 <qgroup_verify_all@@Base+0x35e>
    d2da:	mov	r0, r4
    d2dc:	blx	83f0 <free@plt+0x4>
    d2e0:	ldr	r3, [pc, #84]	; (d338 <qgroup_verify_all@@Base+0x3d0>)
    d2e2:	movs	r4, #12
    d2e4:	ldr	r0, [pc, #128]	; (d368 <qgroup_verify_all@@Base+0x400>)
    d2e6:	ldr.w	r3, [r8, r3]
    d2ea:	add	r0, pc
    d2ec:	ldr	r1, [r3, #0]
    d2ee:	blx	8930 <fputs@plt+0x4>
    d2f2:	b.n	d0b6 <qgroup_verify_all@@Base+0x14e>
    d2f4:	mov	r0, r9
    d2f6:	bl	cafc <ulist_next@@Base+0xd88>
    d2fa:	mov	r4, r0
    d2fc:	cbz	r0, d30c <qgroup_verify_all@@Base+0x3a4>
    d2fe:	ldr	r3, [pc, #56]	; (d338 <qgroup_verify_all@@Base+0x3d0>)
    d300:	ldr	r2, [pc, #104]	; (d36c <qgroup_verify_all@@Base+0x404>)
    d302:	ldr.w	r0, [r8, r3]
    d306:	add	r2, pc
    d308:	mov	r3, r4
    d30a:	b.n	d0c2 <qgroup_verify_all@@Base+0x15a>
    d30c:	movs	r2, #0
    d30e:	movs	r3, #0
    d310:	mov	r0, sl
    d312:	bl	c028 <ulist_next@@Base+0x2b4>
    d316:	mov	r4, r0
    d318:	b.n	d0ca <qgroup_verify_all@@Base+0x162>
    d31a:	mov	r4, r0
    d31c:	b.n	cfb2 <qgroup_verify_all@@Base+0x4a>
    d31e:	mov	r0, r4
    d320:	add	sp, #196	; 0xc4
    d322:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d326:	nop
    d328:	ldrb	r0, [r3, #24]
    d32a:	movs	r5, r0
    d32c:	lsls	r4, r4, #8
    d32e:	movs	r0, r0
    d330:	ldrb	r4, [r0, #24]
    d332:	movs	r5, r0
    d334:	str	r2, [sp, #712]	; 0x2c8
    d336:	movs	r5, r0
    d338:	lsls	r4, r6, #8
    d33a:	movs	r0, r0
    d33c:	blt.n	d34c <qgroup_verify_all@@Base+0x3e4>
    d33e:	movs	r2, r0
    d340:	ldrb	r2, [r2, #23]
    d342:	movs	r5, r0
    d344:	str	r2, [sp, #456]	; 0x1c8
    d346:	movs	r5, r0
    d348:	str	r2, [sp, #104]	; 0x68
    d34a:	movs	r5, r0
    d34c:	str	r2, [sp, #0]
    d34e:	movs	r5, r0
    d350:	bge.n	d280 <qgroup_verify_all@@Base+0x318>
    d352:	movs	r2, r0
    d354:	bhi.n	d380 <print_extent_state@@Base+0x10>
    d356:	movs	r2, r0
    d358:	bge.n	d3ec <print_extent_state@@Base+0x7c>
    d35a:	movs	r2, r0
    d35c:	str	r1, [sp, #488]	; 0x1e8
    d35e:	movs	r5, r0
    d360:	stc	15, cr15, [sp, #-1020]	; 0xfffffc04
    d364:	bls.n	d420 <print_extent_state@@Base+0xb0>
    d366:	movs	r2, r0
    d368:	bhi.n	d370 <print_extent_state@@Base>
    d36a:	movs	r2, r0
    d36c:	bhi.n	d402 <print_extent_state@@Base+0x92>
    d36e:	movs	r2, r0

0000d370 <print_extent_state@@Base>:
    d370:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    d374:	mov	r6, r0
    d376:	movs	r0, #0
    d378:	mov	r7, r3
    d37a:	mov	r8, r2
    d37c:	bl	bb74 <ulist_alloc@@Base>
    d380:	ldr	r3, [pc, #124]	; (d400 <print_extent_state@@Base+0x90>)
    d382:	ldr	r5, [pc, #128]	; (d404 <print_extent_state@@Base+0x94>)
    d384:	add	r3, pc
    d386:	add	r5, pc
    d388:	str	r0, [r3, #28]
    d38a:	cbnz	r0, d3a2 <print_extent_state@@Base+0x32>
    d38c:	ldr	r3, [pc, #120]	; (d408 <print_extent_state@@Base+0x98>)
    d38e:	movs	r4, #12
    d390:	ldr	r0, [pc, #120]	; (d40c <print_extent_state@@Base+0x9c>)
    d392:	ldr	r3, [r5, r3]
    d394:	add	r0, pc
    d396:	ldr	r1, [r3, #0]
    d398:	blx	8930 <fputs@plt+0x4>
    d39c:	mov	r0, r4
    d39e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d3a2:	mov	r0, r6
    d3a4:	bl	c5dc <ulist_next@@Base+0x868>
    d3a8:	mov	r4, r0
    d3aa:	cbz	r0, d3d2 <print_extent_state@@Base+0x62>
    d3ac:	ldr	r3, [pc, #88]	; (d408 <print_extent_state@@Base+0x98>)
    d3ae:	ldr	r2, [pc, #96]	; (d410 <print_extent_state@@Base+0xa0>)
    d3b0:	add	r2, pc
    d3b2:	ldr	r0, [r5, r3]
    d3b4:	mov	r3, r4
    d3b6:	ldr	r0, [r0, #0]
    d3b8:	movs	r1, #1
    d3ba:	blx	881c <__fprintf_chk@plt+0x4>
    d3be:	bl	bf40 <ulist_next@@Base+0x1cc>
    d3c2:	ldr	r0, [pc, #80]	; (d414 <print_extent_state@@Base+0xa4>)
    d3c4:	ldr	r1, [pc, #80]	; (d418 <print_extent_state@@Base+0xa8>)
    d3c6:	add	r0, pc
    d3c8:	add	r1, pc
    d3ca:	adds	r0, #24
    d3cc:	bl	178fe <rb_free_nodes@@Base>
    d3d0:	b.n	d39c <print_extent_state@@Base+0x2c>
    d3d2:	mov	r0, r6
    d3d4:	bl	cafc <ulist_next@@Base+0xd88>
    d3d8:	mov	r4, r0
    d3da:	cbz	r0, d3e8 <print_extent_state@@Base+0x78>
    d3dc:	ldr	r3, [pc, #40]	; (d408 <print_extent_state@@Base+0x98>)
    d3de:	ldr	r2, [pc, #60]	; (d41c <print_extent_state@@Base+0xac>)
    d3e0:	ldr	r0, [r5, r3]
    d3e2:	add	r2, pc
    d3e4:	mov	r3, r4
    d3e6:	b.n	d3b6 <print_extent_state@@Base+0x46>
    d3e8:	ldr	r0, [pc, #52]	; (d420 <print_extent_state@@Base+0xb0>)
    d3ea:	add	r0, pc
    d3ec:	blx	8618 <puts@plt+0x4>
    d3f0:	mov	r0, r4
    d3f2:	mov	r2, r8
    d3f4:	mov	r3, r7
    d3f6:	bl	c028 <ulist_next@@Base+0x2b4>
    d3fa:	mov	r4, r0
    d3fc:	b.n	d3be <print_extent_state@@Base+0x4e>
    d3fe:	nop
    d400:	ldrh	r0, [r1, #54]	; 0x36
    d402:	movs	r5, r0
    d404:	ldrb	r2, [r0, #8]
    d406:	movs	r5, r0
    d408:	lsls	r4, r6, #8
    d40a:	movs	r0, r0
    d40c:	bvc.n	d448 <repair_qgroups@@Base+0x24>
    d40e:	movs	r2, r0
    d410:	bvc.n	d504 <repair_qgroups@@Base+0xe0>
    d412:	movs	r2, r0
    d414:	ldrh	r6, [r0, #52]	; 0x34
    d416:	movs	r5, r0
    d418:			; <UNDEFINED> instruction: 0xea19ffff
    d41c:	bvc.n	d4fa <repair_qgroups@@Base+0xd6>
    d41e:	movs	r2, r0
    d420:	bvc.n	d32c <qgroup_verify_all@@Base+0x3c4>
    d422:	movs	r2, r0

0000d424 <repair_qgroups@@Base>:
    d424:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d428:	mov	r6, r1
    d42a:	vpush	{d8}
    d42e:	ldr	r1, [pc, #620]	; (d69c <repair_qgroups@@Base+0x278>)
    d430:	ldr	r2, [pc, #620]	; (d6a0 <repair_qgroups@@Base+0x27c>)
    d432:	add	r1, pc
    d434:	ldr	r3, [pc, #620]	; (d6a4 <repair_qgroups@@Base+0x280>)
    d436:	sub	sp, #124	; 0x7c
    d438:	add	r3, pc
    d43a:	str	r0, [sp, #16]
    d43c:	ldr	r2, [r1, r2]
    d43e:	ldr	r2, [r2, #0]
    d440:	str	r2, [sp, #116]	; 0x74
    d442:	mov.w	r2, #0
    d446:	movs	r2, #0
    d448:	str	r2, [r6, #0]
    d44a:	ldr	r2, [pc, #604]	; (d6a8 <repair_qgroups@@Base+0x284>)
    d44c:	ldr	r3, [r3, r2]
    d44e:	ldr	r3, [r3, #0]
    d450:	cbnz	r3, d46a <repair_qgroups@@Base+0x46>
    d452:	movs	r4, #0
    d454:	ldr	r2, [pc, #596]	; (d6ac <repair_qgroups@@Base+0x288>)
    d456:	ldr	r3, [pc, #584]	; (d6a0 <repair_qgroups@@Base+0x27c>)
    d458:	add	r2, pc
    d45a:	ldr	r3, [r2, r3]
    d45c:	ldr	r2, [r3, #0]
    d45e:	ldr	r3, [sp, #116]	; 0x74
    d460:	eors	r2, r3
    d462:	beq.w	d68e <repair_qgroups@@Base+0x26a>
    d466:	blx	84cc <__stack_chk_fail@plt>
    d46a:	ldr	r3, [pc, #580]	; (d6b0 <repair_qgroups@@Base+0x28c>)
    d46c:	add	r3, pc
    d46e:	str	r3, [sp, #20]
    d470:	ldr	r5, [r3, #0]
    d472:	ldr	r3, [pc, #576]	; (d6b4 <repair_qgroups@@Base+0x290>)
    d474:	add	r3, pc
    d476:	ldr.w	r2, [r5], #-136
    d47a:	vmov	s16, r3
    d47e:	ldr	r3, [pc, #568]	; (d6b8 <repair_qgroups@@Base+0x294>)
    d480:	sub.w	r8, r2, #136	; 0x88
    d484:	add	r3, pc
    d486:	vmov	s17, r3
    d48a:	ldr	r2, [sp, #20]
    d48c:	add.w	r3, r5, #136	; 0x88
    d490:	str	r3, [sp, #12]
    d492:	cmp	r3, r2
    d494:	bne.n	d4d2 <repair_qgroups@@Base+0xae>
    d496:	ldr	r3, [r6, #0]
    d498:	cbnz	r3, d4a4 <repair_qgroups@@Base+0x80>
    d49a:	ldr	r3, [pc, #544]	; (d6bc <repair_qgroups@@Base+0x298>)
    d49c:	add	r3, pc
    d49e:	ldrb	r3, [r3, #8]
    d4a0:	lsls	r3, r3, #30
    d4a2:	beq.n	d452 <repair_qgroups@@Base+0x2e>
    d4a4:	ldr	r3, [sp, #16]
    d4a6:	ldr	r0, [pc, #536]	; (d6c0 <repair_qgroups@@Base+0x29c>)
    d4a8:	ldr.w	r8, [r3, #44]	; 0x2c
    d4ac:	add	r0, pc
    d4ae:	blx	8618 <puts@plt+0x4>
    d4b2:	movs	r1, #1
    d4b4:	mov	r0, r8
    d4b6:	bl	2af7c <btrfs_start_transaction@@Base>
    d4ba:	cmn.w	r0, #4096	; 0x1000
    d4be:	mov	r5, r0
    d4c0:	bls.w	d5dc <repair_qgroups@@Base+0x1b8>
    d4c4:	mov	r4, r0
    d4c6:	cmp	r4, #0
    d4c8:	bne.n	d454 <repair_qgroups@@Base+0x30>
    d4ca:	ldr	r3, [r6, #0]
    d4cc:	adds	r3, #1
    d4ce:	str	r3, [r6, #0]
    d4d0:	b.n	d454 <repair_qgroups@@Base+0x30>
    d4d2:	ldr	r3, [sp, #16]
    d4d4:	mov.w	r9, #0
    d4d8:	ldrd	r1, r2, [r5]
    d4dc:	movs	r0, #1
    d4de:	ldr.w	fp, [r3, #44]	; 0x2c
    d4e2:	uxth	r3, r2
    d4e4:	lsrs	r2, r2, #16
    d4e6:	strd	r1, r3, [sp]
    d4ea:	mov	r3, r9
    d4ec:	vmov	r1, s16
    d4f0:	blx	87f4 <__printf_chk@plt+0x4>
    d4f4:	movs	r1, #1
    d4f6:	mov	r0, fp
    d4f8:	bl	2af7c <btrfs_start_transaction@@Base>
    d4fc:	cmn.w	r0, #4096	; 0x1000
    d500:	mov	r7, r0
    d502:	bls.n	d52a <repair_qgroups@@Base+0x106>
    d504:	mov	r4, r0
    d506:	cmp	r4, #0
    d508:	bne.n	d454 <repair_qgroups@@Base+0x30>
    d50a:	ldr	r3, [r6, #0]
    d50c:	adds	r3, #1
    d50e:	str	r3, [r6, #0]
    d510:	ldrd	r2, r3, [r5, #136]	; 0x88
    d514:	str	r3, [r2, #4]
    d516:	str	r2, [r3, #0]
    d518:	ldr	r3, [sp, #12]
    d51a:	strd	r3, r3, [r5, #136]	; 0x88
    d51e:	mov	r5, r8
    d520:	ldr.w	r3, [r8, #136]	; 0x88
    d524:	sub.w	r8, r3, #136	; 0x88
    d528:	b.n	d48a <repair_qgroups@@Base+0x66>
    d52a:	add.w	sl, sp, #48	; 0x30
    d52e:	mov	r0, sl
    d530:	bl	17e48 <btrfs_init_path@@Base>
    d534:	movs	r3, #242	; 0xf2
    d536:	strd	r9, r9, [sp, #28]
    d53a:	mov	r1, fp
    d53c:	strb.w	r3, [sp, #36]	; 0x24
    d540:	mov	r0, r7
    d542:	ldrd	r2, r3, [r5]
    d546:	str.w	r2, [sp, #37]	; 0x25
    d54a:	add	r2, sp, #28
    d54c:	str.w	r3, [sp, #41]	; 0x29
    d550:	movs	r3, #1
    d552:	strd	r9, r3, [sp]
    d556:	mov	r3, sl
    d558:	bl	1a23c <btrfs_search_slot@@Base>
    d55c:	mov	r4, r0
    d55e:	cbz	r0, d58e <repair_qgroups@@Base+0x16a>
    d560:	ldrd	r1, r2, [r5]
    d564:	vmov	r0, s17
    d568:	uxth	r3, r2
    d56a:	lsrs	r2, r2, #16
    d56c:	strd	r1, r3, [sp]
    d570:	mov	r3, r9
    d572:	bl	1747c <__btrfs_error@@Base>
    d576:	cmp	r4, #0
    d578:	it	gt
    d57a:	mvngt.w	r4, #1
    d57e:	mov	r1, fp
    d580:	mov	r0, r7
    d582:	bl	2b1fc <btrfs_commit_transaction@@Base>
    d586:	mov	r0, sl
    d588:	bl	17e58 <btrfs_release_path@@Base>
    d58c:	b.n	d506 <repair_qgroups@@Base+0xe2>
    d58e:	ldr	r2, [sp, #48]	; 0x30
    d590:	movs	r1, #25
    d592:	ldr	r3, [sp, #80]	; 0x50
    d594:	adds	r2, #96	; 0x60
    d596:	ldr	r0, [r7, #12]
    d598:	mla	r3, r1, r3, r2
    d59c:	ldr	r1, [r7, #8]
    d59e:	ldr.w	r3, [r3, #118]	; 0x76
    d5a2:	adds	r3, #101	; 0x65
    d5a4:	add.w	ip, r2, r3
    d5a8:	str	r1, [r2, r3]
    d5aa:	str.w	r0, [ip, #4]
    d5ae:	ldr	r0, [sp, #48]	; 0x30
    d5b0:	ldrd	r2, r1, [r5, #64]	; 0x40
    d5b4:	add.w	ip, r0, #96	; 0x60
    d5b8:	add	r3, ip
    d5ba:	str	r2, [r3, #8]
    d5bc:	str	r1, [r3, #12]
    d5be:	ldrd	r1, r2, [r5, #72]	; 0x48
    d5c2:	str	r1, [r3, #16]
    d5c4:	str	r2, [r3, #20]
    d5c6:	ldrd	r1, r2, [r5, #80]	; 0x50
    d5ca:	str	r1, [r3, #24]
    d5cc:	str	r2, [r3, #28]
    d5ce:	ldrd	r1, r2, [r5, #88]	; 0x58
    d5d2:	str	r1, [r3, #32]
    d5d4:	str	r2, [r3, #36]	; 0x24
    d5d6:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    d5da:	b.n	d57e <repair_qgroups@@Base+0x15a>
    d5dc:	add	r7, sp, #48	; 0x30
    d5de:	mov.w	r9, #1
    d5e2:	mov	r0, r7
    d5e4:	bl	17e48 <btrfs_init_path@@Base>
    d5e8:	movs	r3, #0
    d5ea:	movs	r2, #240	; 0xf0
    d5ec:	strd	r3, r3, [sp, #28]
    d5f0:	strb.w	r2, [sp, #36]	; 0x24
    d5f4:	mov	r1, r8
    d5f6:	strb.w	r3, [sp, #37]	; 0x25
    d5fa:	add	r2, sp, #28
    d5fc:	strb.w	r3, [sp, #38]	; 0x26
    d600:	mov	r0, r5
    d602:	strb.w	r3, [sp, #39]	; 0x27
    d606:	strb.w	r3, [sp, #40]	; 0x28
    d60a:	strb.w	r3, [sp, #41]	; 0x29
    d60e:	strb.w	r3, [sp, #42]	; 0x2a
    d612:	strb.w	r3, [sp, #43]	; 0x2b
    d616:	strb.w	r3, [sp, #44]	; 0x2c
    d61a:	strd	r3, r9, [sp]
    d61e:	mov	r3, r7
    d620:	bl	1a23c <btrfs_search_slot@@Base>
    d624:	mov	r4, r0
    d626:	cbz	r0, d648 <repair_qgroups@@Base+0x224>
    d628:	ldr	r0, [pc, #152]	; (d6c4 <repair_qgroups@@Base+0x2a0>)
    d62a:	add	r0, pc
    d62c:	bl	1747c <__btrfs_error@@Base>
    d630:	cmp	r4, #0
    d632:	it	gt
    d634:	mvngt.w	r4, #1
    d638:	mov	r1, r8
    d63a:	mov	r0, r5
    d63c:	bl	2b1fc <btrfs_commit_transaction@@Base>
    d640:	mov	r0, r7
    d642:	bl	17e58 <btrfs_release_path@@Base>
    d646:	b.n	d4c6 <repair_qgroups@@Base+0xa2>
    d648:	ldr	r0, [sp, #48]	; 0x30
    d64a:	movs	r1, #25
    d64c:	ldr	r2, [sp, #80]	; 0x50
    d64e:	add.w	r3, r0, #96	; 0x60
    d652:	mla	r2, r1, r2, r3
    d656:	ldr.w	r2, [r2, #118]	; 0x76
    d65a:	adds	r2, #101	; 0x65
    d65c:	add	r3, r2
    d65e:	strb.w	r9, [r3, #16]
    d662:	strb	r4, [r3, #17]
    d664:	strb	r4, [r3, #18]
    d666:	strb	r4, [r3, #19]
    d668:	strb	r4, [r3, #20]
    d66a:	strb	r4, [r3, #21]
    d66c:	strb	r4, [r3, #22]
    d66e:	strb	r4, [r3, #23]
    d670:	strb	r4, [r3, #24]
    d672:	strb	r4, [r3, #25]
    d674:	strb	r4, [r3, #26]
    d676:	strb	r4, [r3, #27]
    d678:	strb	r4, [r3, #28]
    d67a:	strb	r4, [r3, #29]
    d67c:	strb	r4, [r3, #30]
    d67e:	strb	r4, [r3, #31]
    d680:	ldrd	r1, r2, [r5, #8]
    d684:	str	r1, [r3, #8]
    d686:	str	r2, [r3, #12]
    d688:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    d68c:	b.n	d638 <repair_qgroups@@Base+0x214>
    d68e:	mov	r0, r4
    d690:	add	sp, #124	; 0x7c
    d692:	vpop	{d8}
    d696:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d69a:	nop
    d69c:	ldrb	r6, [r2, #5]
    d69e:	movs	r5, r0
    d6a0:	lsls	r4, r4, #8
    d6a2:	movs	r0, r0
    d6a4:	ldrb	r0, [r2, #5]
    d6a6:	movs	r5, r0
    d6a8:	lsls	r4, r0, #9
    d6aa:	movs	r0, r0
    d6ac:	ldrb	r0, [r6, #4]
    d6ae:	movs	r5, r0
    d6b0:	ldrb	r0, [r3, #17]
    d6b2:	movs	r5, r0
    d6b4:	bvc.n	d6e4 <repair_qgroups@@Base+0x2c0>
    d6b6:	movs	r2, r0
    d6b8:	bvc.n	d6fa <repair_qgroups@@Base+0x2d6>
    d6ba:	movs	r2, r0
    d6bc:	ldrh	r0, [r6, #44]	; 0x2c
    d6be:	movs	r5, r0
    d6c0:	bvc.n	d70e <repair_qgroups@@Base+0x2ea>
    d6c2:	movs	r2, r0
    d6c4:	bpl.n	d64a <repair_qgroups@@Base+0x226>
    d6c6:	movs	r2, r0
    d6c8:	push	{r4, lr}
    d6ca:	cbnz	r0, d6ce <repair_qgroups@@Base+0x2aa>
    d6cc:	pop	{r4, pc}
    d6ce:	ldr	r4, [r0, #16]
    d6d0:	blx	83f0 <free@plt+0x4>
    d6d4:	mov	r0, r4
    d6d6:	b.n	d6ca <repair_qgroups@@Base+0x2a6>
    d6d8:	ldr	r2, [pc, #92]	; (d738 <repair_qgroups@@Base+0x314>)
    d6da:	ldr	r3, [pc, #96]	; (d73c <repair_qgroups@@Base+0x318>)
    d6dc:	add	r2, pc
    d6de:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    d6e2:	mov	r5, r0
    d6e4:	ldr	r3, [r2, r3]
    d6e6:	mov	r8, sp
    d6e8:	movs	r6, #0
    d6ea:	movs	r7, #0
    d6ec:	ldr	r3, [r3, #0]
    d6ee:	str	r3, [sp, #4]
    d6f0:	mov.w	r3, #0
    d6f4:	movs	r3, #0
    d6f6:	str	r3, [sp, #0]
    d6f8:	mov	r1, r8
    d6fa:	mov	r0, r5
    d6fc:	bl	bd74 <ulist_next@@Base>
    d700:	mov	r4, r0
    d702:	cbnz	r0, d71e <repair_qgroups@@Base+0x2fa>
    d704:	mov	r0, r5
    d706:	bl	bb88 <ulist_free@@Base>
    d70a:	ldr	r2, [pc, #52]	; (d740 <repair_qgroups@@Base+0x31c>)
    d70c:	ldr	r3, [pc, #44]	; (d73c <repair_qgroups@@Base+0x318>)
    d70e:	add	r2, pc
    d710:	ldr	r3, [r2, r3]
    d712:	ldr	r2, [r3, #0]
    d714:	ldr	r3, [sp, #4]
    d716:	eors	r2, r3
    d718:	beq.n	d732 <repair_qgroups@@Base+0x30e>
    d71a:	blx	84cc <__stack_chk_fail@plt>
    d71e:	ldrd	r0, r1, [r4, #8]
    d722:	orrs.w	r3, r0, r1
    d726:	beq.n	d6f8 <repair_qgroups@@Base+0x2d4>
    d728:	bl	d6c8 <repair_qgroups@@Base+0x2a4>
    d72c:	strd	r6, r7, [r4, #8]
    d730:	b.n	d6f8 <repair_qgroups@@Base+0x2d4>
    d732:	add	sp, #8
    d734:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    d738:	strb	r4, [r5, #26]
    d73a:	movs	r5, r0
    d73c:	lsls	r4, r4, #8
    d73e:	movs	r0, r0
    d740:	strb	r2, [r7, #25]
    d742:	movs	r5, r0
    d744:	push	{r4, lr}
    d746:	mov	r4, r1
    d748:	ldr	r1, [pc, #84]	; (d7a0 <repair_qgroups@@Base+0x37c>)
    d74a:	sub	sp, #24
    d74c:	ldr	r3, [pc, #84]	; (d7a4 <repair_qgroups@@Base+0x380>)
    d74e:	add	r1, pc
    d750:	ldr	r3, [r1, r3]
    d752:	mov	r1, sp
    d754:	ldr	r3, [r3, #0]
    d756:	str	r3, [sp, #20]
    d758:	mov.w	r3, #0
    d75c:	movs	r3, #25
    d75e:	muls	r2, r3
    d760:	movs	r3, #17
    d762:	adds	r2, #101	; 0x65
    d764:	bl	1731a <read_extent_buffer@@Base>
    d768:	ldr.w	r3, [sp, #13]
    d76c:	ldr.w	r2, [sp, #9]
    d770:	str.w	r3, [r4, #13]
    d774:	ldrb.w	r3, [sp, #8]
    d778:	str.w	r2, [r4, #9]
    d77c:	ldr	r2, [pc, #40]	; (d7a8 <repair_qgroups@@Base+0x384>)
    d77e:	strb	r3, [r4, #8]
    d780:	ldr	r3, [sp, #0]
    d782:	add	r2, pc
    d784:	str	r3, [r4, #0]
    d786:	ldr	r3, [sp, #4]
    d788:	str	r3, [r4, #4]
    d78a:	ldr	r3, [pc, #24]	; (d7a4 <repair_qgroups@@Base+0x380>)
    d78c:	ldr	r3, [r2, r3]
    d78e:	ldr	r2, [r3, #0]
    d790:	ldr	r3, [sp, #20]
    d792:	eors	r2, r3
    d794:	beq.n	d79a <repair_qgroups@@Base+0x376>
    d796:	blx	84cc <__stack_chk_fail@plt>
    d79a:	add	sp, #24
    d79c:	pop	{r4, pc}
    d79e:	nop
    d7a0:	strb	r2, [r7, #24]
    d7a2:	movs	r5, r0
    d7a4:	lsls	r4, r4, #8
    d7a6:	movs	r0, r0
    d7a8:	strb	r6, [r0, #24]
    d7aa:	movs	r5, r0
    d7ac:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d7b0:	adds	r1, #96	; 0x60
    d7b2:	add	r2, r1
    d7b4:	ldrd	r8, r9, [sp, #48]	; 0x30
    d7b8:	ldr.w	fp, [sp, #56]	; 0x38
    d7bc:	mov	sl, r0
    d7be:	ldrb	r3, [r2, #16]
    d7c0:	cmp	r3, #0
    d7c2:	bne.n	d83c <repair_qgroups@@Base+0x418>
    d7c4:	ldrb	r3, [r2, #17]
    d7c6:	cmp	r3, #0
    d7c8:	bne.n	d83c <repair_qgroups@@Base+0x418>
    d7ca:	ldrh	r3, [r2, #18]
    d7cc:	cbnz	r3, d83c <repair_qgroups@@Base+0x418>
    d7ce:	mov	r3, r2
    d7d0:	ldr.w	r1, [r3, #37]!
    d7d4:	ldr	r3, [r3, #4]
    d7d6:	str	r1, [sp, #0]
    d7d8:	str	r3, [sp, #4]
    d7da:	ldrd	r4, r5, [sp]
    d7de:	ldr.w	r3, [r2, #45]!
    d7e2:	cmp	r9, r5
    d7e4:	it	eq
    d7e6:	cmpeq	r8, r4
    d7e8:	ldr	r1, [r2, #4]
    d7ea:	bcc.n	d842 <repair_qgroups@@Base+0x41e>
    d7ec:	ldr	r2, [sp, #0]
    d7ee:	adds	r6, r3, r2
    d7f0:	ldr	r3, [sp, #4]
    d7f2:	adc.w	r7, r1, r3
    d7f6:	cmp	r9, r7
    d7f8:	it	eq
    d7fa:	cmpeq	r8, r6
    d7fc:	bcs.n	d842 <repair_qgroups@@Base+0x41e>
    d7fe:	ldr	r3, [sp, #4]
    d800:	subs.w	r4, r8, r2
    d804:	sbc.w	r5, r9, r3
    d808:	movs	r0, #24
    d80a:	blx	8634 <malloc@plt+0x4>
    d80e:	cbz	r0, d846 <repair_qgroups@@Base+0x422>
    d810:	ldr.w	r3, [fp]
    d814:	str	r3, [r0, #16]
    d816:	ldrd	r2, r3, [sl]
    d81a:	strd	r2, r3, [r0]
    d81e:	ldr.w	r3, [sl, #9]
    d822:	ldr.w	r2, [sl, #13]
    d826:	adds	r3, r3, r4
    d828:	str.w	r0, [fp]
    d82c:	adc.w	r2, r5, r2
    d830:	strd	r3, r2, [r0, #8]
    d834:	movs	r0, #0
    d836:	add	sp, #12
    d838:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    d83c:	movs	r4, #0
    d83e:	mov	r5, r4
    d840:	b.n	d808 <repair_qgroups@@Base+0x3e4>
    d842:	movs	r0, #1
    d844:	b.n	d836 <repair_qgroups@@Base+0x412>
    d846:	mvn.w	r0, #11
    d84a:	b.n	d836 <repair_qgroups@@Base+0x412>
    d84c:	ldr	r2, [pc, #60]	; (d88c <repair_qgroups@@Base+0x468>)
    d84e:	movs	r1, #16
    d850:	ldr	r3, [pc, #60]	; (d890 <repair_qgroups@@Base+0x46c>)
    d852:	push	{r4, lr}
    d854:	add	r2, pc
    d856:	sub	sp, #72	; 0x48
    d858:	add	r4, sp, #4
    d85a:	ldr	r3, [r2, r3]
    d85c:	mov	r0, r4
    d85e:	ldr	r3, [r3, #0]
    d860:	str	r3, [sp, #68]	; 0x44
    d862:	mov.w	r3, #0
    d866:	blx	8680 <backtrace@plt>
    d86a:	movs	r2, #2
    d86c:	mov	r1, r0
    d86e:	mov	r0, r4
    d870:	blx	8990 <backtrace_symbols_fd@plt>
    d874:	ldr	r2, [pc, #28]	; (d894 <repair_qgroups@@Base+0x470>)
    d876:	ldr	r3, [pc, #24]	; (d890 <repair_qgroups@@Base+0x46c>)
    d878:	add	r2, pc
    d87a:	ldr	r3, [r2, r3]
    d87c:	ldr	r2, [r3, #0]
    d87e:	ldr	r3, [sp, #68]	; 0x44
    d880:	eors	r2, r3
    d882:	beq.n	d888 <repair_qgroups@@Base+0x464>
    d884:	blx	84cc <__stack_chk_fail@plt>
    d888:	add	sp, #72	; 0x48
    d88a:	pop	{r4, pc}
    d88c:	strb	r4, [r6, #20]
    d88e:	movs	r5, r0
    d890:	lsls	r4, r4, #8
    d892:	movs	r0, r0
    d894:	strb	r0, [r2, #20]
    d896:	movs	r5, r0
    d898:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    d89c:	mov	r8, r0
    d89e:	movs	r0, #64	; 0x40
    d8a0:	ldr	r5, [sp, #32]
    d8a2:	ldrd	r6, r7, [sp, #40]	; 0x28
    d8a6:	mov	sl, r2
    d8a8:	mov	r9, r3
    d8aa:	blx	8634 <malloc@plt+0x4>
    d8ae:	mov	r4, r0
    d8b0:	cbz	r0, d910 <repair_qgroups@@Base+0x4ec>
    d8b2:	strd	sl, r9, [r0, #8]
    d8b6:	adds	r0, #16
    d8b8:	cbz	r5, d8f4 <repair_qgroups@@Base+0x4d0>
    d8ba:	mov	ip, r0
    d8bc:	ldmia	r5!, {r0, r1, r2, r3}
    d8be:	stmia.w	ip!, {r0, r1, r2, r3}
    d8c2:	ldr	r3, [r5, #0]
    d8c4:	strb.w	r3, [ip]
    d8c8:	ldr	r3, [sp, #36]	; 0x24
    d8ca:	movs	r1, #0
    d8cc:	mov	r0, r1
    d8ce:	str	r1, [r4, #44]	; 0x2c
    d8d0:	strd	r6, r7, [r4, #48]	; 0x30
    d8d4:	str	r3, [r4, #36]	; 0x24
    d8d6:	ldr	r3, [sp, #56]	; 0x38
    d8d8:	str	r3, [r4, #40]	; 0x28
    d8da:	ldrd	r2, r3, [sp, #48]	; 0x30
    d8de:	strd	r2, r3, [r4, #56]	; 0x38
    d8e2:	ldr.w	r3, [r8, #4]
    d8e6:	str.w	r4, [r8, #4]
    d8ea:	strd	r8, r3, [r4]
    d8ee:	str	r4, [r3, #0]
    d8f0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    d8f4:	orrs.w	r3, r6, r7
    d8f8:	mov.w	r2, #17
    d8fc:	mov	r1, r5
    d8fe:	beq.n	d906 <repair_qgroups@@Base+0x4e2>
    d900:	blx	8780 <memset@plt+0x4>
    d904:	b.n	d8c8 <repair_qgroups@@Base+0x4a4>
    d906:	blx	8780 <memset@plt+0x4>
    d90a:	add.w	r8, r8, #8
    d90e:	b.n	d8c8 <repair_qgroups@@Base+0x4a4>
    d910:	mvn.w	r0, #11
    d914:	b.n	d8f0 <repair_qgroups@@Base+0x4cc>
    d916:	push	{r0, r1, r2, r3, r4, lr}
    d918:	ldr	r4, [pc, #36]	; (d940 <repair_qgroups@@Base+0x51c>)
    d91a:	ldr	r5, [pc, #40]	; (d944 <repair_qgroups@@Base+0x520>)
    d91c:	add	r4, pc
    d91e:	ldr	r4, [r4, r5]
    d920:	ldr	r5, [sp, #24]
    d922:	strd	r3, r2, [sp]
    d926:	mov	r3, r1
    d928:	ldr	r2, [pc, #28]	; (d948 <repair_qgroups@@Base+0x524>)
    d92a:	movs	r1, #1
    d92c:	strd	r0, r5, [sp, #8]
    d930:	add	r2, pc
    d932:	ldr	r0, [r4, #0]
    d934:	blx	881c <__fprintf_chk@plt+0x4>
    d938:	bl	d84c <repair_qgroups@@Base+0x428>
    d93c:	blx	8948 <abort@plt>
    d940:	strb	r4, [r5, #17]
    d942:	movs	r5, r0
    d944:	lsls	r4, r6, #8
    d946:	movs	r0, r0
    d948:	stmia	r1!, {r0, r5, r6}
    d94a:	movs	r2, r0
    d94c:	push	{r0, r1, r2, lr}
    d94e:	movs	r3, #1
    d950:	ldr	r2, [pc, #20]	; (d968 <repair_qgroups@@Base+0x544>)
    d952:	ldr	r1, [pc, #24]	; (d96c <repair_qgroups@@Base+0x548>)
    d954:	ldr	r0, [pc, #24]	; (d970 <repair_qgroups@@Base+0x54c>)
    d956:	add	r2, pc
    d958:	str	r3, [sp, #0]
    d95a:	add	r1, pc
    d95c:	add	r0, pc
    d95e:	movw	r3, #1818	; 0x71a
    d962:	bl	d916 <repair_qgroups@@Base+0x4f2>
    d966:	nop
    d968:	bmi.n	da50 <repair_qgroups@@Base+0x62c>
    d96a:	movs	r2, r0
    d96c:	ldmia	r7, {r0, r3, r7}
    d96e:	movs	r2, r0
    d970:	lsls	r7, r1, #18
    d972:	movs	r3, r0
    d974:	push	{r0, r1, r2, r3, r4, lr}
    d976:	ldr	r3, [pc, #40]	; (d9a0 <repair_qgroups@@Base+0x57c>)
    d978:	ldr	r4, [pc, #40]	; (d9a4 <repair_qgroups@@Base+0x580>)
    d97a:	add	r3, pc
    d97c:	ldr	r4, [r3, r4]
    d97e:	movs	r3, #0
    d980:	strd	r2, r1, [sp]
    d984:	movs	r1, #1
    d986:	strd	r0, r3, [sp, #8]
    d98a:	ldr	r2, [pc, #28]	; (d9a8 <repair_qgroups@@Base+0x584>)
    d98c:	ldr	r3, [pc, #28]	; (d9ac <repair_qgroups@@Base+0x588>)
    d98e:	add	r2, pc
    d990:	ldr	r0, [r4, #0]
    d992:	add	r3, pc
    d994:	blx	881c <__fprintf_chk@plt+0x4>
    d998:	bl	d84c <repair_qgroups@@Base+0x428>
    d99c:	blx	8948 <abort@plt>
    d9a0:	strb	r6, [r1, #16]
    d9a2:	movs	r5, r0
    d9a4:	lsls	r4, r6, #8
    d9a6:	movs	r0, r0
    d9a8:	ldmia	r0!, {r4, r7}
    d9aa:	movs	r2, r0
    d9ac:	bcs.n	d99c <repair_qgroups@@Base+0x578>
    d9ae:	movs	r2, r0
    d9b0:	push	{r0, r1, r2, lr}
    d9b2:	cbz	r3, d9c4 <repair_qgroups@@Base+0x5a0>
    d9b4:	movs	r3, #1
    d9b6:	str	r3, [sp, #0]
    d9b8:	mov	r3, r2
    d9ba:	mov	r2, r1
    d9bc:	ldr	r1, [pc, #12]	; (d9cc <repair_qgroups@@Base+0x5a8>)
    d9be:	add	r1, pc
    d9c0:	bl	d916 <repair_qgroups@@Base+0x4f2>
    d9c4:	add	sp, #12
    d9c6:	ldr.w	pc, [sp], #4
    d9ca:	nop
    d9cc:	bcs.n	d964 <repair_qgroups@@Base+0x540>
    d9ce:	movs	r2, r0
    d9d0:	push	{r4, r5, lr}
    d9d2:	sub	sp, #20
    d9d4:	ldr	r4, [pc, #36]	; (d9fc <repair_qgroups@@Base+0x5d8>)
    d9d6:	ldr	r5, [pc, #40]	; (da00 <repair_qgroups@@Base+0x5dc>)
    d9d8:	add	r4, pc
    d9da:	ldr	r4, [r4, r5]
    d9dc:	strd	r2, r1, [sp]
    d9e0:	movs	r1, #1
    d9e2:	strd	r0, r3, [sp, #8]
    d9e6:	ldr	r2, [pc, #28]	; (da04 <repair_qgroups@@Base+0x5e0>)
    d9e8:	ldr	r3, [pc, #28]	; (da08 <repair_qgroups@@Base+0x5e4>)
    d9ea:	ldr	r0, [r4, #0]
    d9ec:	add	r2, pc
    d9ee:	add	r3, pc
    d9f0:	blx	881c <__fprintf_chk@plt+0x4>
    d9f4:	add	sp, #20
    d9f6:	ldmia.w	sp!, {r4, r5, lr}
    d9fa:	b.n	d84c <repair_qgroups@@Base+0x428>
    d9fc:	strb	r0, [r6, #14]
    d9fe:	movs	r5, r0
    da00:	lsls	r4, r6, #8
    da02:	movs	r0, r0
    da04:	stmia	r6!, {r2, r3, r4, r5, r6, r7}
    da06:	movs	r2, r0
    da08:	bcs.n	d940 <repair_qgroups@@Base+0x51c>
    da0a:	movs	r2, r0
    da0c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    da10:	mov	r5, r0
    da12:	ldr	r4, [r0, #0]
    da14:	mov	r9, r1
    da16:	cmp	r4, r5
    da18:	bne.n	da1e <repair_qgroups@@Base+0x5fa>
    da1a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    da1e:	ldr	r0, [r4, #0]
    da20:	ldr.w	r8, [r0]
    da24:	cmp	r0, r5
    da26:	bne.n	da2c <repair_qgroups@@Base+0x608>
    da28:	ldr	r4, [r4, #0]
    da2a:	b.n	da16 <repair_qgroups@@Base+0x5f2>
    da2c:	cmp.w	r9, #1
    da30:	bne.n	daac <repair_qgroups@@Base+0x688>
    da32:	ldr	r2, [r4, #36]	; 0x24
    da34:	ldr	r3, [r0, #36]	; 0x24
    da36:	cmp	r2, r3
    da38:	bne.n	dac0 <repair_qgroups@@Base+0x69c>
    da3a:	ldrd	r6, r7, [r4, #8]
    da3e:	ldrd	r2, r3, [r0, #8]
    da42:	cmp	r7, r3
    da44:	it	eq
    da46:	cmpeq	r6, r2
    da48:	bne.n	dac0 <repair_qgroups@@Base+0x69c>
    da4a:	ldrb	r2, [r4, #24]
    da4c:	ldrb	r3, [r0, #24]
    da4e:	cmp	r2, r3
    da50:	bne.n	dac0 <repair_qgroups@@Base+0x69c>
    da52:	ldrd	r6, r7, [r4, #16]
    da56:	ldrd	r2, r3, [r0, #16]
    da5a:	cmp	r7, r3
    da5c:	it	eq
    da5e:	cmpeq	r6, r2
    da60:	bne.n	dac0 <repair_qgroups@@Base+0x69c>
    da62:	ldr.w	r7, [r4, #29]
    da66:	ldr.w	r3, [r0, #29]
    da6a:	ldr.w	r6, [r4, #25]
    da6e:	ldr.w	r2, [r0, #25]
    da72:	cmp	r7, r3
    da74:	it	eq
    da76:	cmpeq	r6, r2
    da78:	bne.n	dac0 <repair_qgroups@@Base+0x69c>
    da7a:	ldrd	r6, r7, [r4, #48]	; 0x30
    da7e:	ldrd	r2, r3, [r0, #48]	; 0x30
    da82:	cmp	r7, r3
    da84:	it	eq
    da86:	cmpeq	r6, r2
    da88:	bne.n	dac0 <repair_qgroups@@Base+0x69c>
    da8a:	ldr	r3, [r4, #44]	; 0x2c
    da8c:	cbz	r3, dacc <repair_qgroups@@Base+0x6a8>
    da8e:	ldr	r2, [r3, #16]
    da90:	cbnz	r2, dac8 <repair_qgroups@@Base+0x6a4>
    da92:	ldr	r2, [r0, #44]	; 0x2c
    da94:	str	r2, [r3, #16]
    da96:	ldr	r2, [r0, #40]	; 0x28
    da98:	ldr	r3, [r4, #40]	; 0x28
    da9a:	add	r3, r2
    da9c:	str	r3, [r4, #40]	; 0x28
    da9e:	ldrd	r2, r3, [r0]
    daa2:	str	r3, [r2, #4]
    daa4:	str	r2, [r3, #0]
    daa6:	blx	83f0 <free@plt+0x4>
    daaa:	b.n	dac0 <repair_qgroups@@Base+0x69c>
    daac:	ldrd	r6, r7, [r4, #48]	; 0x30
    dab0:	orrs.w	r3, r6, r7
    dab4:	beq.n	dac0 <repair_qgroups@@Base+0x69c>
    dab6:	ldrd	r2, r3, [r0, #48]	; 0x30
    daba:	orrs.w	r1, r2, r3
    dabe:	bne.n	da82 <repair_qgroups@@Base+0x65e>
    dac0:	mov	r0, r8
    dac2:	ldr.w	r8, [r8]
    dac6:	b.n	da24 <repair_qgroups@@Base+0x600>
    dac8:	mov	r3, r2
    daca:	b.n	da8c <repair_qgroups@@Base+0x668>
    dacc:	ldr	r3, [r0, #44]	; 0x2c
    dace:	str	r3, [r4, #44]	; 0x2c
    dad0:	b.n	da96 <repair_qgroups@@Base+0x672>
    dad2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dad6:	movs	r6, #0
    dad8:	vpush	{d8}
    dadc:	mov	r5, r0
    dade:	sub	sp, #204	; 0xcc
    dae0:	strd	r2, r3, [sp, #32]
    dae4:	ldr	r3, [sp, #248]	; 0xf8
    dae6:	ldr.w	r2, [pc, #2924]	; e654 <repair_qgroups@@Base+0x1230>
    daea:	str	r1, [sp, #44]	; 0x2c
    daec:	vmov	s17, r3
    daf0:	ldr	r3, [sp, #252]	; 0xfc
    daf2:	add	r2, pc
    daf4:	str	r3, [sp, #76]	; 0x4c
    daf6:	ldr	r3, [sp, #256]	; 0x100
    daf8:	str	r3, [sp, #72]	; 0x48
    dafa:	ldr.w	r3, [pc, #2908]	; e658 <repair_qgroups@@Base+0x1234>
    dafe:	ldr	r3, [r2, r3]
    db00:	mov.w	r2, #4294967295	; 0xffffffff
    db04:	ldr	r3, [r3, #0]
    db06:	str	r3, [sp, #196]	; 0xc4
    db08:	mov.w	r3, #0
    db0c:	add	r3, sp, #172	; 0xac
    db0e:	strd	r3, r3, [sp, #172]	; 0xac
    db12:	add	r3, sp, #180	; 0xb4
    db14:	strd	r3, r3, [sp, #180]	; 0xb4
    db18:	add	r3, sp, #188	; 0xbc
    db1a:	strd	r3, r3, [sp, #188]	; 0xbc
    db1e:	ldrd	r3, r4, [sp, #32]
    db22:	strb.w	r2, [sp, #121]	; 0x79
    db26:	strb.w	r2, [sp, #122]	; 0x7a
    db2a:	strd	r3, r4, [sp, #112]	; 0x70
    db2e:	ldr.w	r3, [r1, #308]	; 0x134
    db32:	strb.w	r2, [sp, #123]	; 0x7b
    db36:	strb.w	r2, [sp, #124]	; 0x7c
    db3a:	strb.w	r2, [sp, #125]	; 0x7d
    db3e:	strb.w	r2, [sp, #126]	; 0x7e
    db42:	strb.w	r2, [sp, #127]	; 0x7f
    db46:	strb.w	r2, [sp, #128]	; 0x80
    db4a:	str	r6, [sp, #92]	; 0x5c
    db4c:	ldr.w	r1, [r3, #188]	; 0xbc
    db50:	mov	r3, r6
    db52:	and.w	r2, r1, #256	; 0x100
    db56:	orrs	r3, r2
    db58:	ite	ne
    db5a:	movne	r3, #169	; 0xa9
    db5c:	moveq	r3, #168	; 0xa8
    db5e:	strb.w	r3, [sp, #120]	; 0x78
    db62:	bl	17e50 <btrfs_alloc_path@@Base>
    db66:	mov	r4, r0
    db68:	cmp	r0, #0
    db6a:	beq.w	e638 <repair_qgroups@@Base+0x1214>
    db6e:	ldr	r1, [sp, #44]	; 0x2c
    db70:	add	r7, sp, #112	; 0x70
    db72:	mov	r3, r0
    db74:	strd	r6, r6, [sp]
    db78:	mov	r2, r7
    db7a:	mov	r0, r5
    db7c:	ldr	r1, [r1, #24]
    db7e:	bl	1a23c <btrfs_search_slot@@Base>
    db82:	subs.w	r8, r0, #0
    db86:	blt.w	dd1c <repair_qgroups@@Base+0x8f8>
    db8a:	ldr.w	r5, [pc, #2768]	; e65c <repair_qgroups@@Base+0x1238>
    db8e:	movw	r2, #762	; 0x2fa
    db92:	ldr.w	r0, [pc, #2764]	; e660 <repair_qgroups@@Base+0x123c>
    db96:	it	eq
    db98:	moveq	r3, #1
    db9a:	add	r5, pc
    db9c:	it	ne
    db9e:	movne	r3, r6
    dba0:	add.w	r1, r5, #29
    dba4:	add	r0, pc
    dba6:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    dbaa:	ldr	r2, [r4, #32]
    dbac:	cmp	r2, #0
    dbae:	beq.w	e00e <repair_qgroups@@Base+0xbea>
    dbb2:	subs	r2, #1
    dbb4:	ldr	r0, [r4, #0]
    dbb6:	mov	r1, r7
    dbb8:	str	r2, [r4, #32]
    dbba:	bl	d744 <repair_qgroups@@Base+0x320>
    dbbe:	ldrd	r2, r3, [sp, #112]	; 0x70
    dbc2:	ldrd	r0, r1, [sp, #32]
    dbc6:	cmp	r1, r3
    dbc8:	it	eq
    dbca:	cmpeq	r0, r2
    dbcc:	bne.w	e00e <repair_qgroups@@Base+0xbea>
    dbd0:	ldrb.w	r3, [sp, #120]	; 0x78
    dbd4:	adds	r3, #88	; 0x58
    dbd6:	uxtb	r3, r3
    dbd8:	cmp	r3, #1
    dbda:	bhi.w	e00e <repair_qgroups@@Base+0xbea>
    dbde:	ldr.w	sl, [r4]
    dbe2:	movs	r3, #25
    dbe4:	ldr.w	r9, [r4, #32]
    dbe8:	adds	r5, #47	; 0x2f
    dbea:	add.w	fp, sl, #96	; 0x60
    dbee:	ldr.w	r0, [pc, #2676]	; e664 <repair_qgroups@@Base+0x1240>
    dbf2:	movw	r2, #559	; 0x22f
    dbf6:	mov	r1, r5
    dbf8:	mla	r3, r3, r9, fp
    dbfc:	add	r0, pc
    dbfe:	add.w	r7, r3, #101	; 0x65
    dc02:	ldr.w	r3, [r3, #122]	; 0x7a
    dc06:	cmp	r3, #23
    dc08:	str	r3, [sp, #48]	; 0x30
    dc0a:	ite	hi
    dc0c:	movhi	r3, #0
    dc0e:	movls	r3, #1
    dc10:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    dc14:	ldr.w	r8, [r7, #17]
    dc18:	mov	r0, sl
    dc1a:	add	r1, sp, #152	; 0x98
    dc1c:	add.w	r3, r8, #101	; 0x65
    dc20:	str	r3, [sp, #64]	; 0x40
    dc22:	add.w	r2, fp, r3
    dc26:	add.w	sl, r8, #125	; 0x7d
    dc2a:	ldr	r3, [r2, #0]
    dc2c:	ldr	r7, [r2, #16]
    dc2e:	str	r3, [sp, #56]	; 0x38
    dc30:	ldr	r3, [r2, #4]
    dc32:	mov	r2, r9
    dc34:	str	r3, [sp, #60]	; 0x3c
    dc36:	bl	d744 <repair_qgroups@@Base+0x320>
    dc3a:	ldr	r3, [sp, #48]	; 0x30
    dc3c:	mov	r2, r3
    dc3e:	ldr	r3, [sp, #64]	; 0x40
    dc40:	add.w	r9, r2, r3
    dc44:	ldrb.w	r3, [sp, #160]	; 0xa0
    dc48:	cmp	r3, #168	; 0xa8
    dc4a:	bne.n	dca0 <repair_qgroups@@Base+0x87c>
    dc4c:	and.w	r2, r7, #2
    dc50:	mov	r3, r6
    dc52:	orrs	r3, r2
    dc54:	beq.n	dcaa <repair_qgroups@@Base+0x886>
    dc56:	add	sl, fp
    dc58:	ldr.w	r0, [pc, #2572]	; e668 <repair_qgroups@@Base+0x1244>
    dc5c:	mov.w	r2, #576	; 0x240
    dc60:	mov	r1, r5
    dc62:	ldrb.w	r6, [sl, #17]
    dc66:	add.w	sl, r8, #143	; 0x8f
    dc6a:	cmp	r9, sl
    dc6c:	add	r0, pc
    dc6e:	ite	cs
    dc70:	movcs	r3, #0
    dc72:	movcc	r3, #1
    dc74:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    dc78:	ldr.w	r5, [pc, #2544]	; e66c <repair_qgroups@@Base+0x1248>
    dc7c:	ldr.w	r7, [pc, #2544]	; e670 <repair_qgroups@@Base+0x124c>
    dc80:	add	r5, pc
    dc82:	adds	r5, #47	; 0x2f
    dc84:	add	r7, pc
    dc86:	cmp	r9, sl
    dc88:	bhi.n	dcca <repair_qgroups@@Base+0x8a6>
    dc8a:	ldr	r3, [sp, #44]	; 0x2c
    dc8c:	ldr.w	r5, [pc, #2532]	; e674 <repair_qgroups@@Base+0x1250>
    dc90:	ldr.w	r7, [pc, #2532]	; e678 <repair_qgroups@@Base+0x1254>
    dc94:	ldr	r3, [r3, #24]
    dc96:	add	r5, pc
    dc98:	adds	r5, #65	; 0x41
    dc9a:	add	r7, pc
    dc9c:	str	r3, [sp, #48]	; 0x30
    dc9e:	b.n	deb6 <repair_qgroups@@Base+0xa92>
    dca0:	cmp	r3, #169	; 0xa9
    dca2:	bne.n	dcaa <repair_qgroups@@Base+0x886>
    dca4:	ldr.w	r6, [sp, #161]	; 0xa1
    dca8:	b.n	dc78 <repair_qgroups@@Base+0x854>
    dcaa:	ldr.w	r1, [pc, #2512]	; e67c <repair_qgroups@@Base+0x1258>
    dcae:	mvns	r3, r7
    dcb0:	ldr.w	r0, [pc, #2508]	; e680 <repair_qgroups@@Base+0x125c>
    dcb4:	and.w	r3, r3, #1
    dcb8:	add	r1, pc
    dcba:	mov.w	r2, #580	; 0x244
    dcbe:	adds	r1, #47	; 0x2f
    dcc0:	add	r0, pc
    dcc2:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    dcc6:	movs	r6, #0
    dcc8:	b.n	dc78 <repair_qgroups@@Base+0x854>
    dcca:	add.w	r0, fp, sl
    dcce:	ldrb.w	r8, [fp, sl]
    dcd2:	mov	r1, r0
    dcd4:	ldr.w	r2, [r1, #1]!
    dcd8:	ldr	r3, [r1, #4]
    dcda:	sub.w	r1, r8, #176	; 0xb0
    dcde:	cmp	r1, #8
    dce0:	bhi.w	de18 <repair_qgroups@@Base+0x9f4>
    dce4:	tbb	[pc, r1]
    dce8:	ldr	r0, [sp, #300]	; 0x12c
    dcea:	ldr	r0, [sp, #392]	; 0x188
    dcec:	ldr	r0, [sp, #608]	; 0x260
    dcee:	ldr	r0, [sp, #20]
    dcf0:	movs	r5, r6
    dcf2:	movs	r1, #1
    dcf4:	str	r1, [sp, #24]
    dcf6:	ldrd	r0, r1, [sp, #32]
    dcfa:	strd	r2, r3, [sp, #8]
    dcfe:	adds	r3, r6, #1
    dd00:	movs	r2, #0
    dd02:	str	r3, [sp, #4]
    dd04:	movs	r3, #0
    dd06:	str	r3, [sp, #0]
    dd08:	movs	r3, #0
    dd0a:	strd	r0, r1, [sp, #16]
    dd0e:	add	r0, sp, #172	; 0xac
    dd10:	bl	d898 <repair_qgroups@@Base+0x474>
    dd14:	mov	r8, r0
    dd16:	cmp	r0, #0
    dd18:	beq.w	de42 <repair_qgroups@@Base+0xa1e>
    dd1c:	mov	r0, r4
    dd1e:	add	r4, sp, #172	; 0xac
    dd20:	bl	17e7e <btrfs_free_path@@Base>
    dd24:	ldr	r0, [sp, #172]	; 0xac
    dd26:	cmp	r0, r4
    dd28:	bne.w	e628 <repair_qgroups@@Base+0x1204>
    dd2c:	cmp.w	r8, #0
    dd30:	bge.n	dd38 <repair_qgroups@@Base+0x914>
    dd32:	ldr	r0, [sp, #92]	; 0x5c
    dd34:	bl	d6c8 <repair_qgroups@@Base+0x2a4>
    dd38:	ldr.w	r2, [pc, #2376]	; e684 <repair_qgroups@@Base+0x1260>
    dd3c:	ldr.w	r3, [pc, #2328]	; e658 <repair_qgroups@@Base+0x1234>
    dd40:	add	r2, pc
    dd42:	ldr	r3, [r2, r3]
    dd44:	ldr	r2, [r3, #0]
    dd46:	ldr	r3, [sp, #196]	; 0xc4
    dd48:	eors	r2, r3
    dd4a:	beq.w	e646 <repair_qgroups@@Base+0x1222>
    dd4e:	blx	84cc <__stack_chk_fail@plt>
    dd52:	ldr.w	r1, [r0, #9]
    dd56:	strd	r2, r3, [sp, #8]
    dd5a:	movs	r3, #0
    dd5c:	movs	r2, #0
    dd5e:	strd	r3, r3, [sp]
    dd62:	str	r1, [sp, #24]
    dd64:	movs	r3, #0
    dd66:	ldrd	r0, r1, [sp, #32]
    dd6a:	strd	r0, r1, [sp, #16]
    dd6e:	add	r0, sp, #172	; 0xac
    dd70:	bl	d898 <repair_qgroups@@Base+0x474>
    dd74:	mov	r8, r0
    dd76:	cmp	r0, #0
    dd78:	bne.n	dd1c <repair_qgroups@@Base+0x8f8>
    dd7a:	movs	r3, #13
    dd7c:	b.n	dde6 <repair_qgroups@@Base+0x9c2>
    dd7e:	mov.w	r1, #4294967295	; 0xffffffff
    dd82:	cmp	r3, r1
    dd84:	mvn.w	r0, #8
    dd88:	it	eq
    dd8a:	cmpeq	r2, r0
    dd8c:	beq.n	de42 <repair_qgroups@@Base+0xa1e>
    dd8e:	movs	r1, #1
    dd90:	str	r1, [sp, #24]
    dd92:	ldrd	r0, r1, [sp, #32]
    dd96:	strd	r0, r1, [sp, #16]
    dd9a:	movs	r1, #0
    dd9c:	movs	r0, #0
    dd9e:	strd	r0, r1, [sp, #8]
    dda2:	adds	r1, r6, #1
    dda4:	str	r1, [sp, #4]
    dda6:	movs	r1, #0
    dda8:	str	r1, [sp, #0]
    ddaa:	b.n	dd0e <repair_qgroups@@Base+0x8ea>
    ddac:	add.w	r3, sl, #1
    ddb0:	add	r3, fp
    ddb2:	ldr	r1, [r3, #8]
    ddb4:	ldr	r2, [r3, #12]
    ddb6:	ldr.w	ip, [r3, #24]
    ddba:	strd	r1, r2, [sp, #132]	; 0x84
    ddbe:	movs	r2, #108	; 0x6c
    ddc0:	strb.w	r2, [sp, #140]	; 0x8c
    ddc4:	ldr	r1, [r3, #16]
    ddc6:	ldr	r2, [r3, #20]
    ddc8:	str.w	r1, [sp, #141]	; 0x8d
    ddcc:	str.w	r2, [sp, #145]	; 0x91
    ddd0:	mvn.w	r2, #8
    ddd4:	ldr	r1, [r3, #4]
    ddd6:	ldr	r0, [r3, #0]
    ddd8:	mov.w	r3, #4294967295	; 0xffffffff
    dddc:	cmp	r1, r3
    ddde:	it	eq
    dde0:	cmpeq	r0, r2
    dde2:	bne.n	ddea <repair_qgroups@@Base+0x9c6>
    dde4:	movs	r3, #29
    dde6:	add	sl, r3
    dde8:	b.n	dc86 <repair_qgroups@@Base+0x862>
    ddea:	ldrd	r2, r3, [sp, #32]
    ddee:	str.w	ip, [sp, #24]
    ddf2:	strd	r2, r3, [sp, #16]
    ddf6:	movs	r2, #0
    ddf8:	movs	r3, #0
    ddfa:	strd	r2, r3, [sp, #8]
    ddfe:	movs	r3, #0
    de00:	mov	r2, r0
    de02:	str	r3, [sp, #4]
    de04:	add	r0, sp, #172	; 0xac
    de06:	add	r3, sp, #132	; 0x84
    de08:	str	r3, [sp, #0]
    de0a:	mov	r3, r1
    de0c:	bl	d898 <repair_qgroups@@Base+0x474>
    de10:	mov	r8, r0
    de12:	cmp	r0, #0
    de14:	beq.n	dde4 <repair_qgroups@@Base+0x9c0>
    de16:	b.n	dd1c <repair_qgroups@@Base+0x8f8>
    de18:	movs	r3, #1
    de1a:	movw	r2, #630	; 0x276
    de1e:	mov	r1, r5
    de20:	mov	r0, r7
    de22:	bl	d9d0 <repair_qgroups@@Base+0x5ac>
    de26:	cmp.w	r8, #176	; 0xb0
    de2a:	beq.n	de42 <repair_qgroups@@Base+0xa1e>
    de2c:	cmp.w	r8, #182	; 0xb6
    de30:	beq.n	de42 <repair_qgroups@@Base+0xa1e>
    de32:	cmp.w	r8, #184	; 0xb8
    de36:	beq.n	dd7a <repair_qgroups@@Base+0x956>
    de38:	cmp.w	r8, #178	; 0xb2
    de3c:	beq.n	dde4 <repair_qgroups@@Base+0x9c0>
    de3e:	bl	d94c <repair_qgroups@@Base+0x528>
    de42:	movs	r3, #9
    de44:	b.n	dde6 <repair_qgroups@@Base+0x9c2>
    de46:	ldr	r3, [sp, #48]	; 0x30
    de48:	mov	r1, r4
    de4a:	strb.w	r9, [r4, #65]	; 0x41
    de4e:	ldr.w	r0, [r3, #464]	; 0x1d0
    de52:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    de56:	subs.w	r8, r0, #0
    de5a:	blt.w	dd1c <repair_qgroups@@Base+0x8f8>
    de5e:	beq.n	dece <repair_qgroups@@Base+0xaaa>
    de60:	b.n	def0 <repair_qgroups@@Base+0xacc>
    de62:	ldrb.w	r3, [sp, #160]	; 0xa0
    de66:	cmp	r3, #175	; 0xaf
    de68:	bls.n	debe <repair_qgroups@@Base+0xa9a>
    de6a:	cmp	r3, #184	; 0xb8
    de6c:	bhi.n	def0 <repair_qgroups@@Base+0xacc>
    de6e:	subs	r3, #176	; 0xb0
    de70:	cmp	r3, #8
    de72:	bhi.w	dffe <repair_qgroups@@Base+0xbda>
    de76:	tbb	[pc, r3]
    de7a:	stmia	r2!, {r4, r5, r6}
    de7c:	stmia	r2!, {r0, r1, r3, r7}
    de7e:	stmia	r2!, {r1, r6, r7}
    de80:	stmia	r2!, {r0, r2}
    de82:	lsls	r0, r3, #1
    de84:	movs	r3, #1
    de86:	str	r3, [sp, #24]
    de88:	ldrd	r2, r3, [sp, #32]
    de8c:	strd	r2, r3, [sp, #16]
    de90:	ldr.w	r3, [sp, #165]	; 0xa5
    de94:	ldr.w	r2, [sp, #161]	; 0xa1
    de98:	strd	r2, r3, [sp, #8]
    de9c:	adds	r3, r6, #1
    de9e:	str	r3, [sp, #4]
    dea0:	movs	r3, #0
    dea2:	str	r3, [sp, #0]
    dea4:	movs	r2, #0
    dea6:	movs	r3, #0
    dea8:	add	r0, sp, #172	; 0xac
    deaa:	bl	d898 <repair_qgroups@@Base+0x474>
    deae:	mov	r8, r0
    deb0:	cmp	r0, #0
    deb2:	bne.w	dd1c <repair_qgroups@@Base+0x8f8>
    deb6:	add.w	sl, sp, #152	; 0x98
    deba:	mov.w	r9, #0
    debe:	ldr	r2, [r4, #0]
    dec0:	ldr	r3, [r4, #32]
    dec2:	adds	r3, #1
    dec4:	str	r3, [r4, #32]
    dec6:	ldr.w	r2, [r2, #192]	; 0xc0
    deca:	cmp	r3, r2
    decc:	bcs.n	de46 <repair_qgroups@@Base+0xa22>
    dece:	ldr.w	fp, [r4, #32]
    ded2:	mov	r1, sl
    ded4:	ldr.w	r8, [r4]
    ded8:	mov	r2, fp
    deda:	mov	r0, r8
    dedc:	bl	d744 <repair_qgroups@@Base+0x320>
    dee0:	ldrd	r2, r3, [sp, #32]
    dee4:	ldrd	r0, r1, [sp, #152]	; 0x98
    dee8:	cmp	r3, r1
    deea:	it	eq
    deec:	cmpeq	r2, r0
    deee:	beq.n	de62 <repair_qgroups@@Base+0xa3e>
    def0:	mov	r0, r4
    def2:	ldr.w	r6, [pc, #1940]	; e688 <repair_qgroups@@Base+0x1264>
    def6:	bl	17e58 <btrfs_release_path@@Base>
    defa:	ldr.w	fp, [pc, #1936]	; e68c <repair_qgroups@@Base+0x1268>
    defe:	add	r6, pc
    df00:	adds	r6, #82	; 0x52
    df02:	add	fp, pc
    df04:	ldr	r5, [sp, #180]	; 0xb4
    df06:	add	r3, sp, #180	; 0xb4
    df08:	cmp	r5, r3
    df0a:	bne.w	e018 <repair_qgroups@@Base+0xbf4>
    df0e:	add	r0, sp, #172	; 0xac
    df10:	movs	r1, #1
    df12:	bl	da0c <repair_qgroups@@Base+0x5e8>
    df16:	movs	r0, #0
    df18:	bl	bb74 <ulist_alloc@@Base>
    df1c:	mov	r7, r0
    df1e:	cmp	r0, #0
    df20:	bne.w	e1ec <repair_qgroups@@Base+0xdc8>
    df24:	mvn.w	r8, #11
    df28:	b.n	dd1c <repair_qgroups@@Base+0x8f8>
    df2a:	add.w	r8, r8, #96	; 0x60
    df2e:	movs	r2, #25
    df30:	mla	r2, r2, fp, r8
    df34:	ldr.w	r0, [r2, #118]	; 0x76
    df38:	add	r8, r0
    df3a:	ldr.w	r3, [r8, #101]	; 0x65
    df3e:	str	r3, [sp, #24]
    df40:	ldrd	r2, r3, [sp, #32]
    df44:	strd	r2, r3, [sp, #16]
    df48:	ldr.w	r3, [sp, #165]	; 0xa5
    df4c:	ldr.w	r2, [sp, #161]	; 0xa1
    df50:	strd	r2, r3, [sp, #8]
    df54:	movs	r3, #0
    df56:	str	r3, [sp, #4]
    df58:	b.n	dea2 <repair_qgroups@@Base+0xa7e>
    df5a:	ldr.w	r3, [sp, #165]	; 0xa5
    df5e:	mov.w	r1, #4294967295	; 0xffffffff
    df62:	ldr.w	r2, [sp, #161]	; 0xa1
    df66:	mvn.w	r0, #8
    df6a:	cmp	r3, r1
    df6c:	it	eq
    df6e:	cmpeq	r2, r0
    df70:	beq.n	deb6 <repair_qgroups@@Base+0xa92>
    df72:	movs	r1, #1
    df74:	str	r1, [sp, #24]
    df76:	ldrd	r0, r1, [sp, #32]
    df7a:	strd	r0, r1, [sp, #16]
    df7e:	movs	r1, #0
    df80:	movs	r0, #0
    df82:	strd	r0, r1, [sp, #8]
    df86:	adds	r1, r6, #1
    df88:	str	r1, [sp, #4]
    df8a:	movs	r1, #0
    df8c:	str	r1, [sp, #0]
    df8e:	b.n	dea8 <repair_qgroups@@Base+0xa84>
    df90:	add.w	r8, r8, #96	; 0x60
    df94:	movs	r2, #25
    df96:	mov.w	r1, #4294967295	; 0xffffffff
    df9a:	mla	fp, r2, fp, r8
    df9e:	ldr.w	r0, [fp, #118]	; 0x76
    dfa2:	adds	r0, #101	; 0x65
    dfa4:	add	r8, r0
    dfa6:	mvn.w	r0, #8
    dfaa:	ldr.w	r2, [r8, #8]
    dfae:	ldr.w	r3, [r8, #12]
    dfb2:	ldr.w	ip, [r8, #24]
    dfb6:	strd	r2, r3, [sp, #152]	; 0x98
    dfba:	movs	r3, #108	; 0x6c
    dfbc:	strb.w	r3, [sp, #160]	; 0xa0
    dfc0:	ldr.w	r2, [r8, #16]
    dfc4:	ldr.w	r3, [r8, #20]
    dfc8:	str.w	r2, [sp, #161]	; 0xa1
    dfcc:	str.w	r3, [sp, #165]	; 0xa5
    dfd0:	ldr.w	r3, [r8, #4]
    dfd4:	ldr.w	r2, [r8]
    dfd8:	cmp	r3, r1
    dfda:	it	eq
    dfdc:	cmpeq	r2, r0
    dfde:	beq.w	deb6 <repair_qgroups@@Base+0xa92>
    dfe2:	ldrd	r0, r1, [sp, #32]
    dfe6:	str.w	ip, [sp, #24]
    dfea:	strd	r0, r1, [sp, #16]
    dfee:	movs	r1, #0
    dff0:	movs	r0, #0
    dff2:	strd	r0, r1, [sp, #8]
    dff6:	movs	r1, #0
    dff8:	str	r1, [sp, #4]
    dffa:	add	r1, sp, #152	; 0x98
    dffc:	b.n	df8c <repair_qgroups@@Base+0xb68>
    dffe:	movs	r3, #1
    e000:	movw	r2, #714	; 0x2ca
    e004:	mov	r1, r5
    e006:	mov	r0, r7
    e008:	bl	d9d0 <repair_qgroups@@Base+0x5ac>
    e00c:	b.n	deb6 <repair_qgroups@@Base+0xa92>
    e00e:	movs	r2, #0
    e010:	movs	r3, #0
    e012:	strd	r2, r3, [sp, #56]	; 0x38
    e016:	b.n	def0 <repair_qgroups@@Base+0xacc>
    e018:	ldr	r3, [r5, #8]
    e01a:	cbnz	r3, e032 <repair_qgroups@@Base+0xc0e>
    e01c:	ldr.w	r1, [pc, #1648]	; e690 <repair_qgroups@@Base+0x126c>
    e020:	mov.w	r2, #456	; 0x1c8
    e024:	ldr.w	r0, [pc, #1644]	; e694 <repair_qgroups@@Base+0x1270>
    e028:	add	r1, pc
    e02a:	adds	r1, #82	; 0x52
    e02c:	add	r0, pc
    e02e:	bl	d974 <repair_qgroups@@Base+0x550>
    e032:	ldrd	r8, r9, [r5, #48]	; 0x30
    e036:	orrs.w	r3, r8, r9
    e03a:	beq.n	e050 <repair_qgroups@@Base+0xc2c>
    e03c:	ldr.w	r1, [pc, #1624]	; e698 <repair_qgroups@@Base+0x1274>
    e040:	movw	r2, #457	; 0x1c9
    e044:	ldr.w	r0, [pc, #1620]	; e69c <repair_qgroups@@Base+0x1278>
    e048:	add	r1, pc
    e04a:	adds	r1, #82	; 0x52
    e04c:	add	r0, pc
    e04e:	b.n	e02e <repair_qgroups@@Base+0xc0a>
    e050:	ldrb	r3, [r5, #24]
    e052:	cbz	r3, e068 <repair_qgroups@@Base+0xc44>
    e054:	ldr.w	r1, [pc, #1608]	; e6a0 <repair_qgroups@@Base+0x127c>
    e058:	mov.w	r2, #458	; 0x1ca
    e05c:	ldr.w	r0, [pc, #1604]	; e6a4 <repair_qgroups@@Base+0x1280>
    e060:	add	r1, pc
    e062:	adds	r1, #82	; 0x52
    e064:	add	r0, pc
    e066:	b.n	e02e <repair_qgroups@@Base+0xc0a>
    e068:	ldrd	sl, r7, [r5, #56]	; 0x38
    e06c:	movw	r2, #459	; 0x1cb
    e070:	mov	r1, r6
    e072:	mov	r0, fp
    e074:	orrs.w	r3, sl, r7
    e078:	ite	eq
    e07a:	moveq	r3, #1
    e07c:	movne	r3, #0
    e07e:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    e082:	mov	r3, r7
    e084:	ldr	r0, [sp, #44]	; 0x2c
    e086:	mov	r2, sl
    e088:	strd	r8, r9, [sp]
    e08c:	bl	1d684 <read_tree_block@@Base>
    e090:	mov	r7, r0
    e092:	cbz	r0, e0d0 <repair_qgroups@@Base+0xcac>
    e094:	cmn.w	r0, #4096	; 0x1000
    e098:	bhi.n	e0d0 <repair_qgroups@@Base+0xcac>
    e09a:	ldr	r3, [r0, #84]	; 0x54
    e09c:	lsls	r2, r3, #29
    e09e:	bpl.n	e0d0 <repair_qgroups@@Base+0xcac>
    e0a0:	ldrb.w	r2, [r0, #196]	; 0xc4
    e0a4:	cbz	r2, e0dc <repair_qgroups@@Base+0xcb8>
    e0a6:	movs	r3, #17
    e0a8:	movs	r2, #101	; 0x65
    e0aa:	add	r1, sp, #152	; 0x98
    e0ac:	bl	1731a <read_extent_buffer@@Base>
    e0b0:	ldr.w	r3, [sp, #165]	; 0xa5
    e0b4:	ldr.w	r2, [sp, #161]	; 0xa1
    e0b8:	str.w	r3, [r5, #29]
    e0bc:	str.w	r2, [r5, #25]
    e0c0:	ldrb.w	r3, [sp, #160]	; 0xa0
    e0c4:	strb	r3, [r5, #24]
    e0c6:	ldr	r3, [sp, #152]	; 0x98
    e0c8:	str	r3, [r5, #16]
    e0ca:	ldr	r3, [sp, #156]	; 0x9c
    e0cc:	str	r3, [r5, #20]
    e0ce:	b.n	e0e4 <repair_qgroups@@Base+0xcc0>
    e0d0:	mov	r0, r7
    e0d2:	bl	16c20 <free_extent_buffer@@Base>
    e0d6:	mvn.w	r8, #4
    e0da:	b.n	dd1c <repair_qgroups@@Base+0x8f8>
    e0dc:	add.w	r1, r5, #16
    e0e0:	bl	d744 <repair_qgroups@@Base+0x320>
    e0e4:	mov	r0, r7
    e0e6:	bl	16c20 <free_extent_buffer@@Base>
    e0ea:	ldrd	r2, r3, [r5]
    e0ee:	str	r3, [r2, #4]
    e0f0:	str	r2, [r3, #0]
    e0f2:	ldr	r3, [sp, #172]	; 0xac
    e0f4:	str	r5, [r3, #4]
    e0f6:	str	r3, [r5, #0]
    e0f8:	add	r3, sp, #172	; 0xac
    e0fa:	str	r5, [sp, #172]	; 0xac
    e0fc:	str	r3, [r5, #4]
    e0fe:	b.n	df04 <repair_qgroups@@Base+0xae0>
    e100:	ldrd	r2, r3, [r5]
    e104:	str	r3, [r2, #4]
    e106:	str	r2, [r3, #0]
    e108:	ldr	r3, [sp, #172]	; 0xac
    e10a:	str	r5, [r3, #4]
    e10c:	str	r3, [r5, #0]
    e10e:	add	r3, sp, #172	; 0xac
    e110:	str	r3, [r5, #4]
    e112:	ldrd	r2, r3, [r5, #48]	; 0x30
    e116:	str	r5, [sp, #172]	; 0xac
    e118:	strd	r2, r3, [sp, #64]	; 0x40
    e11c:	orrs	r3, r2
    e11e:	beq.n	e134 <repair_qgroups@@Base+0xd10>
    e120:	ldr.w	r1, [pc, #1412]	; e6a8 <repair_qgroups@@Base+0x1284>
    e124:	movw	r2, #381	; 0x17d
    e128:	ldr.w	r0, [pc, #1408]	; e6ac <repair_qgroups@@Base+0x1288>
    e12c:	add	r1, pc
    e12e:	adds	r1, #101	; 0x65
    e130:	add	r0, pc
    e132:	b.n	e02e <repair_qgroups@@Base+0xc0a>
    e134:	ldr	r3, [r5, #40]	; 0x28
    e136:	cbnz	r3, e14c <repair_qgroups@@Base+0xd28>
    e138:	ldr.w	r1, [pc, #1396]	; e6b0 <repair_qgroups@@Base+0x128c>
    e13c:	mov.w	r2, #382	; 0x17e
    e140:	ldr.w	r0, [pc, #1392]	; e6b4 <repair_qgroups@@Base+0x1290>
    e144:	add	r1, pc
    e146:	adds	r1, #101	; 0x65
    e148:	add	r0, pc
    e14a:	b.n	e02e <repair_qgroups@@Base+0xc0a>
    e14c:	ldr	r3, [r5, #8]
    e14e:	add	r1, sp, #132	; 0x84
    e150:	ldr	r6, [r5, #36]	; 0x24
    e152:	mov.w	r2, #4294967295	; 0xffffffff
    e156:	ldr	r0, [sp, #44]	; 0x2c
    e158:	str	r3, [sp, #132]	; 0x84
    e15a:	ldr	r3, [r5, #12]
    e15c:	strb.w	r2, [sp, #141]	; 0x8d
    e160:	strb.w	r2, [sp, #142]	; 0x8e
    e164:	str	r3, [sp, #136]	; 0x88
    e166:	movs	r3, #132	; 0x84
    e168:	strb.w	r2, [sp, #143]	; 0x8f
    e16c:	strb.w	r3, [sp, #140]	; 0x8c
    e170:	strb.w	r2, [sp, #144]	; 0x90
    e174:	strb.w	r2, [sp, #145]	; 0x91
    e178:	strb.w	r2, [sp, #146]	; 0x92
    e17c:	strb.w	r2, [sp, #147]	; 0x93
    e180:	strb.w	r2, [sp, #148]	; 0x94
    e184:	bl	1da06 <btrfs_read_fs_root@@Base>
    e188:	cmn.w	r0, #4096	; 0x1000
    e18c:	mov	r9, r0
    e18e:	bls.w	e332 <repair_qgroups@@Base+0xf0e>
    e192:	mov	r8, r0
    e194:	movs	r3, #0
    e196:	mov	r0, r4
    e198:	strb.w	r3, [r4, #65]	; 0x41
    e19c:	bl	17e58 <btrfs_release_path@@Base>
    e1a0:	cmn.w	r8, #2
    e1a4:	beq.n	e1ec <repair_qgroups@@Base+0xdc8>
    e1a6:	cmp.w	r8, #0
    e1aa:	bne.n	e1f8 <repair_qgroups@@Base+0xdd4>
    e1ac:	add	r1, sp, #96	; 0x60
    e1ae:	mov	r0, r7
    e1b0:	str.w	r8, [sp, #96]	; 0x60
    e1b4:	bl	bd74 <ulist_next@@Base>
    e1b8:	cbz	r0, e1c2 <repair_qgroups@@Base+0xd9e>
    e1ba:	ldrd	r2, r3, [r0]
    e1be:	strd	r2, r3, [sp, #64]	; 0x40
    e1c2:	ldrd	r2, r3, [sp, #64]	; 0x40
    e1c6:	strd	r2, r3, [r5, #48]	; 0x30
    e1ca:	cbz	r0, e1ce <repair_qgroups@@Base+0xdaa>
    e1cc:	ldr	r0, [r0, #8]
    e1ce:	add	r6, sp, #96	; 0x60
    e1d0:	add.w	r8, r5, #64	; 0x40
    e1d4:	str	r0, [r5, #44]	; 0x2c
    e1d6:	mov	r1, r6
    e1d8:	mov	r0, r7
    e1da:	bl	bd74 <ulist_next@@Base>
    e1de:	mov	r9, r0
    e1e0:	cmp	r0, #0
    e1e2:	bne.w	e4f6 <repair_qgroups@@Base+0x10d2>
    e1e6:	mov	r0, r7
    e1e8:	bl	bb62 <ulist_reinit@@Base>
    e1ec:	ldr	r5, [sp, #188]	; 0xbc
    e1ee:	add	r3, sp, #188	; 0xbc
    e1f0:	cmp	r5, r3
    e1f2:	bne.n	e100 <repair_qgroups@@Base+0xcdc>
    e1f4:	mov.w	r8, #0
    e1f8:	mov	r0, r7
    e1fa:	bl	bb88 <ulist_free@@Base>
    e1fe:	cmp.w	r8, #0
    e202:	bne.w	dd1c <repair_qgroups@@Base+0x8f8>
    e206:	add	r0, sp, #172	; 0xac
    e208:	movs	r1, #2
    e20a:	bl	da0c <repair_qgroups@@Base+0x5e8>
    e20e:	ldr	r2, [sp, #180]	; 0xb4
    e210:	ldr.w	r1, [pc, #1188]	; e6b8 <repair_qgroups@@Base+0x1294>
    e214:	add	r3, sp, #180	; 0xb4
    e216:	subs	r3, r2, r3
    e218:	ldr.w	r0, [pc, #1184]	; e6bc <repair_qgroups@@Base+0x1298>
    e21c:	add	r1, pc
    e21e:	movw	r2, #801	; 0x321
    e222:	add.w	r1, r1, #29
    e226:	it	ne
    e228:	movne	r3, #1
    e22a:	add	r0, pc
    e22c:	str	r1, [sp, #48]	; 0x30
    e22e:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    e232:	ldr	r2, [sp, #188]	; 0xbc
    e234:	add	r3, sp, #188	; 0xbc
    e236:	ldr.w	r0, [pc, #1160]	; e6c0 <repair_qgroups@@Base+0x129c>
    e23a:	subs	r3, r2, r3
    e23c:	ldr	r1, [sp, #48]	; 0x30
    e23e:	add	r0, pc
    e240:	movw	r2, #802	; 0x322
    e244:	it	ne
    e246:	movne	r3, #1
    e248:	ldr.w	r6, [pc, #1144]	; e6c4 <repair_qgroups@@Base+0x12a0>
    e24c:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    e250:	ldr.w	r3, [pc, #1140]	; e6c8 <repair_qgroups@@Base+0x12a4>
    e254:	add	r6, pc
    e256:	add	r3, pc
    e258:	adds	r6, #29
    e25a:	vmov	s16, r3
    e25e:	ldr	r5, [sp, #172]	; 0xac
    e260:	add	r3, sp, #172	; 0xac
    e262:	cmp	r5, r3
    e264:	beq.w	dd1c <repair_qgroups@@Base+0x8f8>
    e268:	ldr	r3, [r5, #40]	; 0x28
    e26a:	cmp	r3, #0
    e26c:	bge.n	e27e <repair_qgroups@@Base+0xe5a>
    e26e:	vmov	r0, s16
    e272:	movs	r3, #1
    e274:	movw	r2, #806	; 0x326
    e278:	mov	r1, r6
    e27a:	bl	d9d0 <repair_qgroups@@Base+0x5ac>
    e27e:	ldr	r3, [sp, #76]	; 0x4c
    e280:	cbz	r3, e2b4 <repair_qgroups@@Base+0xe90>
    e282:	ldr	r3, [r5, #40]	; 0x28
    e284:	cbz	r3, e2b4 <repair_qgroups@@Base+0xe90>
    e286:	ldrd	r2, r3, [r5, #8]
    e28a:	orrs.w	r1, r2, r3
    e28e:	beq.n	e2b4 <repair_qgroups@@Base+0xe90>
    e290:	ldrd	r0, r1, [r5, #48]	; 0x30
    e294:	orrs.w	r7, r0, r1
    e298:	bne.n	e2b4 <repair_qgroups@@Base+0xe90>
    e29a:	mov.w	ip, #0
    e29e:	strd	r0, r1, [sp]
    e2a2:	str.w	ip, [sp, #8]
    e2a6:	ldr	r0, [sp, #76]	; 0x4c
    e2a8:	bl	bc9c <ulist_add@@Base>
    e2ac:	subs.w	r8, r0, #0
    e2b0:	blt.w	dd1c <repair_qgroups@@Base+0x8f8>
    e2b4:	ldr	r3, [r5, #40]	; 0x28
    e2b6:	cmp	r3, #0
    e2b8:	beq.w	e618 <repair_qgroups@@Base+0x11f4>
    e2bc:	ldrd	r2, r3, [r5, #48]	; 0x30
    e2c0:	orrs.w	r1, r2, r3
    e2c4:	beq.w	e618 <repair_qgroups@@Base+0x11f4>
    e2c8:	ldr	r0, [sp, #72]	; 0x48
    e2ca:	ldr	r1, [r5, #44]	; 0x2c
    e2cc:	cmp	r0, #0
    e2ce:	beq.w	e5b0 <repair_qgroups@@Base+0x118c>
    e2d2:	cmp	r1, #0
    e2d4:	bne.w	e5b0 <repair_qgroups@@Base+0x118c>
    e2d8:	ldr.w	sl, [r5, #36]	; 0x24
    e2dc:	cmp.w	sl, #0
    e2e0:	bne.w	e5b0 <repair_qgroups@@Base+0x118c>
    e2e4:	movs	r0, #0
    e2e6:	movs	r1, #0
    e2e8:	strd	r0, r1, [sp]
    e2ec:	ldr	r0, [sp, #44]	; 0x2c
    e2ee:	bl	1d684 <read_tree_block@@Base>
    e2f2:	mov	r9, r0
    e2f4:	cmp	r0, #0
    e2f6:	beq.w	e53a <repair_qgroups@@Base+0x1116>
    e2fa:	cmn.w	r0, #4096	; 0x1000
    e2fe:	bhi.w	e53a <repair_qgroups@@Base+0x1116>
    e302:	ldr	r3, [r0, #84]	; 0x54
    e304:	lsls	r3, r3, #29
    e306:	bpl.w	e53a <repair_qgroups@@Base+0x1116>
    e30a:	ldr	r3, [sp, #72]	; 0x48
    e30c:	add.w	fp, sp, #152	; 0x98
    e310:	ldrd	r2, r3, [r3]
    e314:	strd	r2, r3, [sp, #48]	; 0x30
    e318:	ldr.w	r3, [r0, #192]	; 0xc0
    e31c:	str	r3, [sp, #56]	; 0x38
    e31e:	add.w	r3, r0, #197	; 0xc5
    e322:	str	r3, [sp, #64]	; 0x40
    e324:	ldr	r3, [sp, #56]	; 0x38
    e326:	cmp	r3, sl
    e328:	bgt.w	e53e <repair_qgroups@@Base+0x111a>
    e32c:	mov.w	r8, #0
    e330:	b.n	e59e <repair_qgroups@@Base+0x117a>
    e332:	ldrb.w	r3, [r0, #246]	; 0xf6
    e336:	movs	r0, #0
    e338:	adds	r3, #1
    e33a:	cmp	r6, r3
    e33c:	beq.w	e4f2 <repair_qgroups@@Base+0x10ce>
    e340:	strb.w	r6, [r4, #65]	; 0x41
    e344:	add.w	r2, r5, #16
    e348:	mov	r3, r4
    e34a:	mov	r1, r9
    e34c:	strd	r0, r0, [sp]
    e350:	bl	1a23c <btrfs_search_slot@@Base>
    e354:	subs.w	r8, r0, #0
    e358:	blt.w	e194 <repair_qgroups@@Base+0xd70>
    e35c:	ldr.w	r3, [r4, r6, lsl #2]
    e360:	cbz	r3, e388 <repair_qgroups@@Base+0xf64>
    e362:	movs	r3, #0
    e364:	str	r3, [sp, #100]	; 0x64
    e366:	cbz	r6, e3a8 <repair_qgroups@@Base+0xf84>
    e368:	ldr.w	r2, [r4, r6, lsl #2]
    e36c:	movs	r0, #0
    e36e:	movs	r1, #0
    e370:	str	r3, [sp, #8]
    e372:	strd	r0, r1, [sp]
    e376:	mov	r0, r7
    e378:	ldrd	r2, r3, [r2, #40]	; 0x28
    e37c:	bl	bc9c <ulist_add@@Base>
    e380:	and.w	r6, r0, r0, asr #31
    e384:	mov	r8, r6
    e386:	b.n	e194 <repair_qgroups@@Base+0xd70>
    e388:	cbnz	r6, e3a4 <repair_qgroups@@Base+0xf80>
    e38a:	ldr	r1, [pc, #832]	; (e6cc <repair_qgroups@@Base+0x12a8>)
    e38c:	movs	r3, #1
    e38e:	ldr	r0, [pc, #832]	; (e6d0 <repair_qgroups@@Base+0x12ac>)
    e390:	mov.w	r2, #342	; 0x156
    e394:	add	r1, pc
    e396:	mov.w	r8, #1
    e39a:	adds	r1, #125	; 0x7d
    e39c:	add	r0, pc
    e39e:	bl	d9d0 <repair_qgroups@@Base+0x5ac>
    e3a2:	b.n	e194 <repair_qgroups@@Base+0xd70>
    e3a4:	subs	r6, #1
    e3a6:	b.n	e35c <repair_qgroups@@Base+0xf38>
    e3a8:	ldrd	r2, r3, [r5, #56]	; 0x38
    e3ac:	strd	r2, r3, [sp, #80]	; 0x50
    e3b0:	ldr	r3, [r4, #0]
    e3b2:	ldr	r2, [r4, #32]
    e3b4:	ldr.w	r3, [r3, #192]	; 0xc0
    e3b8:	cmp	r2, r3
    e3ba:	bcc.w	e4ee <repair_qgroups@@Base+0x10ca>
    e3be:	strb.w	r6, [r4, #65]	; 0x41
    e3c2:	mov	r1, r4
    e3c4:	ldr.w	r0, [r9, #464]	; 0x1d0
    e3c8:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    e3cc:	mov	r8, r0
    e3ce:	movs	r3, #0
    e3d0:	movs	r2, #0
    e3d2:	strd	r2, r3, [sp, #48]	; 0x30
    e3d6:	add	r3, sp, #152	; 0x98
    e3d8:	vmov	s16, r3
    e3dc:	b.n	e420 <repair_qgroups@@Base+0xffc>
    e3de:	add	r3, sp, #100	; 0x64
    e3e0:	str	r3, [sp, #8]
    e3e2:	ldr	r3, [sp, #72]	; 0x48
    e3e4:	ldrd	r0, r1, [r3]
    e3e8:	strd	r0, r1, [sp]
    e3ec:	mov	r1, sl
    e3ee:	vmov	r0, s16
    e3f2:	bl	d7ac <repair_qgroups@@Base+0x388>
    e3f6:	subs.w	r8, r0, #0
    e3fa:	blt.n	e4cc <repair_qgroups@@Base+0x10a8>
    e3fc:	beq.n	e4a0 <repair_qgroups@@Base+0x107c>
    e3fe:	ldr	r2, [r4, #0]
    e400:	ldr	r3, [r4, #32]
    e402:	adds	r3, #1
    e404:	str	r3, [r4, #32]
    e406:	ldr.w	r2, [r2, #192]	; 0xc0
    e40a:	cmp	r3, r2
    e40c:	bcc.n	e428 <repair_qgroups@@Base+0x1004>
    e40e:	movs	r3, #0
    e410:	mov	r1, r4
    e412:	strb.w	r3, [r4, #65]	; 0x41
    e416:	ldr.w	r0, [r9, #464]	; 0x1d0
    e41a:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    e41e:	mov	r8, r0
    e420:	cmp.w	r8, #0
    e424:	bne.w	e640 <repair_qgroups@@Base+0x121c>
    e428:	ldrd	r2, r3, [sp, #48]	; 0x30
    e42c:	ldrd	r0, r1, [sp, #56]	; 0x38
    e430:	cmp	r3, r1
    e432:	it	eq
    e434:	cmpeq	r2, r0
    e436:	bcs.n	e384 <repair_qgroups@@Base+0xf60>
    e438:	ldr.w	sl, [r4]
    e43c:	ldr.w	fp, [r4, #32]
    e440:	vmov	r1, s16
    e444:	mov	r0, sl
    e446:	mov	r2, fp
    e448:	bl	d744 <repair_qgroups@@Base+0x320>
    e44c:	ldrd	r0, r1, [sp, #152]	; 0x98
    e450:	ldr	r3, [r5, #20]
    e452:	ldr	r2, [r5, #16]
    e454:	cmp	r1, r3
    e456:	it	eq
    e458:	cmpeq	r0, r2
    e45a:	bne.n	e384 <repair_qgroups@@Base+0xf60>
    e45c:	ldrb.w	r3, [sp, #160]	; 0xa0
    e460:	cmp	r3, #108	; 0x6c
    e462:	bne.n	e384 <repair_qgroups@@Base+0xf60>
    e464:	add.w	r3, sl, #96	; 0x60
    e468:	movs	r2, #25
    e46a:	mla	fp, r2, fp, r3
    e46e:	ldr.w	r2, [fp, #118]	; 0x76
    e472:	ldrd	fp, ip, [sp, #80]	; 0x50
    e476:	adds	r2, #101	; 0x65
    e478:	add	r3, r2
    e47a:	ldr.w	r0, [r3, #21]!
    e47e:	ldr	r1, [r3, #4]
    e480:	cmp	ip, r1
    e482:	it	eq
    e484:	cmpeq	fp, r0
    e486:	bne.n	e3fe <repair_qgroups@@Base+0xfda>
    e488:	movs	r3, #0
    e48a:	str	r3, [sp, #100]	; 0x64
    e48c:	ldr	r3, [sp, #48]	; 0x30
    e48e:	adds	r3, #1
    e490:	str	r3, [sp, #48]	; 0x30
    e492:	ldr	r3, [sp, #52]	; 0x34
    e494:	adc.w	r3, r3, #0
    e498:	str	r3, [sp, #52]	; 0x34
    e49a:	ldr	r3, [sp, #72]	; 0x48
    e49c:	cmp	r3, #0
    e49e:	bne.n	e3de <repair_qgroups@@Base+0xfba>
    e4a0:	ldrd	r0, r1, [sl, #40]	; 0x28
    e4a4:	movs	r2, #0
    e4a6:	movs	r3, #0
    e4a8:	strd	r2, r3, [sp, #104]	; 0x68
    e4ac:	add	r2, sp, #104	; 0x68
    e4ae:	str	r2, [sp, #8]
    e4b0:	ldr	r2, [sp, #100]	; 0x64
    e4b2:	movs	r3, #0
    e4b4:	str	r3, [sp, #12]
    e4b6:	strd	r2, r3, [sp]
    e4ba:	mov	r2, r0
    e4bc:	mov	r3, r1
    e4be:	mov	r0, r7
    e4c0:	bl	bb9e <ulist_add_merge@@Base>
    e4c4:	ldr	r3, [sp, #104]	; 0x68
    e4c6:	subs.w	r8, r0, #0
    e4ca:	bge.n	e4d6 <repair_qgroups@@Base+0x10b2>
    e4cc:	ldr	r0, [sp, #100]	; 0x64
    e4ce:	mov	r6, r8
    e4d0:	bl	d6c8 <repair_qgroups@@Base+0x2a4>
    e4d4:	b.n	e384 <repair_qgroups@@Base+0xf60>
    e4d6:	bne.n	e4e8 <repair_qgroups@@Base+0x10c4>
    e4d8:	ldr	r2, [sp, #72]	; 0x48
    e4da:	cbz	r2, e4e8 <repair_qgroups@@Base+0x10c4>
    e4dc:	mov	r2, r3
    e4de:	ldr	r3, [r3, #16]
    e4e0:	cmp	r3, #0
    e4e2:	bne.n	e4dc <repair_qgroups@@Base+0x10b8>
    e4e4:	ldr	r3, [sp, #100]	; 0x64
    e4e6:	str	r3, [r2, #16]
    e4e8:	movs	r3, #0
    e4ea:	str	r3, [sp, #100]	; 0x64
    e4ec:	b.n	e3fe <repair_qgroups@@Base+0xfda>
    e4ee:	mov	r8, r6
    e4f0:	b.n	e3ce <repair_qgroups@@Base+0xfaa>
    e4f2:	mov	r8, r0
    e4f4:	b.n	e194 <repair_qgroups@@Base+0xd70>
    e4f6:	movs	r0, #64	; 0x40
    e4f8:	blx	8634 <malloc@plt+0x4>
    e4fc:	mov	r3, r0
    e4fe:	cbz	r0, e534 <repair_qgroups@@Base+0x1110>
    e500:	mov	r2, r5
    e502:	mov	lr, r0
    e504:	ldr	r0, [r2, #0]
    e506:	adds	r2, #8
    e508:	ldr.w	r1, [r2, #-4]
    e50c:	cmp	r2, r8
    e50e:	mov	ip, lr
    e510:	stmia.w	ip!, {r0, r1}
    e514:	mov	lr, ip
    e516:	bne.n	e504 <repair_qgroups@@Base+0x10e0>
    e518:	ldrd	r0, r1, [r9]
    e51c:	strd	r0, r1, [r3, #48]	; 0x30
    e520:	add	r1, sp, #172	; 0xac
    e522:	ldr.w	r2, [r9, #8]
    e526:	str	r2, [r3, #44]	; 0x2c
    e528:	ldr	r2, [sp, #176]	; 0xb0
    e52a:	str	r3, [sp, #176]	; 0xb0
    e52c:	strd	r1, r2, [r3]
    e530:	str	r3, [r2, #0]
    e532:	b.n	e1d6 <repair_qgroups@@Base+0xdb2>
    e534:	mvn.w	r8, #11
    e538:	b.n	e1f8 <repair_qgroups@@Base+0xdd4>
    e53a:	mov	r0, r9
    e53c:	b.n	e0d2 <repair_qgroups@@Base+0xcae>
    e53e:	mov	r2, sl
    e540:	mov	r1, fp
    e542:	mov	r0, r9
    e544:	bl	d744 <repair_qgroups@@Base+0x320>
    e548:	ldrb.w	r2, [sp, #160]	; 0xa0
    e54c:	cmp	r2, #108	; 0x6c
    e54e:	beq.n	e556 <repair_qgroups@@Base+0x1132>
    e550:	add.w	sl, sl, #1
    e554:	b.n	e324 <repair_qgroups@@Base+0xf00>
    e556:	ldr	r3, [sp, #64]	; 0x40
    e558:	movs	r2, #25
    e55a:	add.w	r1, r9, #96	; 0x60
    e55e:	mla	r2, r2, sl, r3
    e562:	ldr.w	r2, [r2, #17]
    e566:	adds	r2, #101	; 0x65
    e568:	add	r1, r2
    e56a:	ldrb	r0, [r1, #20]
    e56c:	cmp	r0, #0
    e56e:	beq.n	e550 <repair_qgroups@@Base+0x112c>
    e570:	ldr.w	r3, [r1, #21]!
    e574:	mov	r7, r3
    e576:	ldr	r3, [r1, #4]
    e578:	ldrd	r0, r1, [sp, #32]
    e57c:	cmp	r1, r3
    e57e:	it	eq
    e580:	cmpeq	r0, r7
    e582:	bne.n	e550 <repair_qgroups@@Base+0x112c>
    e584:	add	r1, sp, #92	; 0x5c
    e586:	str	r1, [sp, #8]
    e588:	ldrd	r0, r1, [sp, #48]	; 0x30
    e58c:	strd	r0, r1, [sp]
    e590:	mov	r1, r9
    e592:	mov	r0, fp
    e594:	bl	d7ac <repair_qgroups@@Base+0x388>
    e598:	subs.w	r8, r0, #0
    e59c:	bge.n	e550 <repair_qgroups@@Base+0x112c>
    e59e:	mov	r0, r9
    e5a0:	bl	16c20 <free_extent_buffer@@Base>
    e5a4:	cmp.w	r8, #0
    e5a8:	bne.w	dd1c <repair_qgroups@@Base+0x8f8>
    e5ac:	ldr	r3, [sp, #92]	; 0x5c
    e5ae:	str	r3, [r5, #44]	; 0x2c
    e5b0:	ldrd	r0, r1, [r5, #48]	; 0x30
    e5b4:	movs	r3, #0
    e5b6:	ldr.w	ip, [r5, #44]	; 0x2c
    e5ba:	ldr	r2, [sp, #92]	; 0x5c
    e5bc:	str	r3, [sp, #12]
    e5be:	strd	ip, r3, [sp]
    e5c2:	strd	r2, r3, [sp, #152]	; 0x98
    e5c6:	add	r2, sp, #152	; 0x98
    e5c8:	mov	r3, r1
    e5ca:	str	r2, [sp, #8]
    e5cc:	mov	r2, r0
    e5ce:	vmov	r0, s17
    e5d2:	bl	bb9e <ulist_add_merge@@Base>
    e5d6:	ldr.w	r9, [sp, #152]	; 0x98
    e5da:	str.w	r9, [sp, #92]	; 0x5c
    e5de:	subs.w	r8, r0, #0
    e5e2:	blt.w	dd1c <repair_qgroups@@Base+0x8f8>
    e5e6:	bne.n	e614 <repair_qgroups@@Base+0x11f0>
    e5e8:	ldr	r3, [sp, #72]	; 0x48
    e5ea:	cbz	r3, e614 <repair_qgroups@@Base+0x11f0>
    e5ec:	ldr	r1, [pc, #228]	; (e6d4 <repair_qgroups@@Base+0x12b0>)
    e5ee:	clz	r3, r9
    e5f2:	ldr	r0, [pc, #228]	; (e6d8 <repair_qgroups@@Base+0x12b4>)
    e5f4:	movw	r2, #841	; 0x349
    e5f8:	add	r1, pc
    e5fa:	lsrs	r3, r3, #5
    e5fc:	adds	r1, #29
    e5fe:	add	r0, pc
    e600:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    e604:	mov	r3, r9
    e606:	ldr.w	r9, [r9, #16]
    e60a:	cmp.w	r9, #0
    e60e:	bne.n	e604 <repair_qgroups@@Base+0x11e0>
    e610:	ldr	r2, [r5, #44]	; 0x2c
    e612:	str	r2, [r3, #16]
    e614:	movs	r3, #0
    e616:	str	r3, [sp, #92]	; 0x5c
    e618:	ldrd	r2, r3, [r5]
    e61c:	mov	r0, r5
    e61e:	str	r3, [r2, #4]
    e620:	str	r2, [r3, #0]
    e622:	blx	83f0 <free@plt+0x4>
    e626:	b.n	e25e <repair_qgroups@@Base+0xe3a>
    e628:	ldrd	r2, r3, [r0]
    e62c:	str	r3, [r2, #4]
    e62e:	str	r2, [r3, #0]
    e630:	blx	83f0 <free@plt+0x4>
    e634:	b.w	dd24 <repair_qgroups@@Base+0x900>
    e638:	mvn.w	r8, #11
    e63c:	b.w	dd38 <repair_qgroups@@Base+0x914>
    e640:	bgt.w	e384 <repair_qgroups@@Base+0xf60>
    e644:	b.n	e4cc <repair_qgroups@@Base+0x10a8>
    e646:	mov	r0, r8
    e648:	add	sp, #204	; 0xcc
    e64a:	vpop	{d8}
    e64e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e652:	nop
    e654:	strb	r6, [r2, #10]
    e656:	movs	r5, r0
    e658:	lsls	r4, r4, #8
    e65a:	movs	r0, r0
    e65c:	bcs.n	e6bc <repair_qgroups@@Base+0x1298>
    e65e:	movs	r2, r0
    e660:	beq.n	e640 <repair_qgroups@@Base+0x121c>
    e662:	movs	r2, r0
    e664:	beq.n	e5a6 <repair_qgroups@@Base+0x1182>
    e666:	movs	r2, r0
    e668:	bne.n	e710 <repair_qgroups@@Base+0x12ec>
    e66a:	movs	r2, r0
    e66c:	bne.n	e700 <repair_qgroups@@Base+0x12dc>
    e66e:	movs	r2, r0
    e670:	lsls	r7, r4, #5
    e672:	movs	r3, r0
    e674:	bne.n	e6dc <repair_qgroups@@Base+0x12b8>
    e676:	movs	r2, r0
    e678:	lsls	r1, r2, #5
    e67a:	movs	r3, r0
    e67c:	bne.n	e6a0 <repair_qgroups@@Base+0x127c>
    e67e:	movs	r2, r0
    e680:	ldmia	r7, {r0, r1, r4, r5, r6, r7}
    e682:	movs	r2, r0
    e684:	strb	r0, [r1, #1]
    e686:	movs	r5, r0
    e688:	ldmia	r6, {r1, r3, r6, r7}
    e68a:	movs	r2, r0
    e68c:	ldmia	r6!, {r0, r1, r2}
    e68e:	movs	r2, r0
    e690:	ldmia	r5, {r5, r7}
    e692:	movs	r2, r0
    e694:	ldmia	r4!, {r0, r3, r5, r7}
    e696:	movs	r2, r0
    e698:	ldmia	r5!, {r7}
    e69a:	movs	r2, r0
    e69c:	ldmia	r4, {r1, r2, r4, r7}
    e69e:	movs	r2, r0
    e6a0:	ldmia	r5, {r3, r5, r6}
    e6a2:	movs	r2, r0
    e6a4:	ldmia	r4!, {r0, r1, r3, r7}
    e6a6:	movs	r2, r0
    e6a8:	ldmia	r4, {r2, r3, r4, r7}
    e6aa:	movs	r2, r0
    e6ac:	ldmia	r3!, {r1, r4, r5, r7}
    e6ae:	movs	r2, r0
    e6b0:	ldmia	r4!, {r2, r7}
    e6b2:	movs	r2, r0
    e6b4:	ldmia	r3, {r3, r4, r6, r7}
    e6b6:	movs	r2, r0
    e6b8:	ldmia	r3, {r2, r3, r5, r7}
    e6ba:	movs	r2, r0
    e6bc:	ldmia	r3!, {r0}
    e6be:	movs	r2, r0
    e6c0:	ldmia	r3, {r1, r3, r4}
    e6c2:	movs	r2, r0
    e6c4:	ldmia	r3!, {r2, r4, r5, r6}
    e6c6:	movs	r2, r0
    e6c8:	ldmia	r3!, {r4, r5}
    e6ca:	movs	r2, r0
    e6cc:	ldmia	r2, {r2, r4, r5}
    e6ce:	movs	r2, r0
    e6d0:			; <UNDEFINED> instruction: 0xfa4f0002
    e6d4:	stmia	r7!, {r4, r6, r7}
    e6d6:	movs	r2, r0
    e6d8:	stmia	r7!, {r0, r1, r2, r4, r7}
    e6da:	movs	r2, r0
    e6dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e6e0:	mov	fp, r2
    e6e2:	ldr	r2, [pc, #164]	; (e788 <repair_qgroups@@Base+0x1364>)
    e6e4:	mov	r4, r3
    e6e6:	ldr	r3, [pc, #164]	; (e78c <repair_qgroups@@Base+0x1368>)
    e6e8:	sub	sp, #28
    e6ea:	add	r2, pc
    e6ec:	mov	r7, r0
    e6ee:	movs	r0, #0
    e6f0:	ldr.w	r9, [sp, #64]	; 0x40
    e6f4:	ldr	r3, [r2, r3]
    e6f6:	mov	r8, r1
    e6f8:	ldr	r3, [r3, #0]
    e6fa:	str	r3, [sp, #20]
    e6fc:	mov.w	r3, #0
    e700:	bl	bb74 <ulist_alloc@@Base>
    e704:	mov	r5, r0
    e706:	cbz	r0, e71a <repair_qgroups@@Base+0x12f6>
    e708:	movs	r0, #0
    e70a:	bl	bb74 <ulist_alloc@@Base>
    e70e:	str.w	r0, [r9]
    e712:	cbnz	r0, e720 <repair_qgroups@@Base+0x12fc>
    e714:	mov	r0, r5
    e716:	bl	bb88 <ulist_free@@Base>
    e71a:	mvn.w	r4, #11
    e71e:	b.n	e754 <repair_qgroups@@Base+0x1330>
    e720:	add.w	sl, sp, #16
    e724:	movs	r6, #0
    e726:	str	r6, [sp, #16]
    e728:	str	r6, [sp, #8]
    e72a:	mov	r2, fp
    e72c:	ldr.w	r3, [r9]
    e730:	mov	r1, r8
    e732:	mov	r0, r7
    e734:	strd	r5, r3, [sp]
    e738:	mov	r3, r4
    e73a:	bl	dad2 <repair_qgroups@@Base+0x6ae>
    e73e:	subs	r4, r0, #0
    e740:	bge.n	e768 <repair_qgroups@@Base+0x1344>
    e742:	adds	r3, r4, #2
    e744:	beq.n	e768 <repair_qgroups@@Base+0x1344>
    e746:	mov	r0, r5
    e748:	bl	bb88 <ulist_free@@Base>
    e74c:	ldr.w	r0, [r9]
    e750:	bl	bb88 <ulist_free@@Base>
    e754:	ldr	r2, [pc, #56]	; (e790 <repair_qgroups@@Base+0x136c>)
    e756:	ldr	r3, [pc, #52]	; (e78c <repair_qgroups@@Base+0x1368>)
    e758:	add	r2, pc
    e75a:	ldr	r3, [r2, r3]
    e75c:	ldr	r2, [r3, #0]
    e75e:	ldr	r3, [sp, #20]
    e760:	eors	r2, r3
    e762:	beq.n	e77e <repair_qgroups@@Base+0x135a>
    e764:	blx	84cc <__stack_chk_fail@plt>
    e768:	mov	r1, sl
    e76a:	mov	r0, r5
    e76c:	bl	bd74 <ulist_next@@Base>
    e770:	mov	r4, r0
    e772:	cbz	r0, e77a <repair_qgroups@@Base+0x1356>
    e774:	ldrd	fp, r4, [r0]
    e778:	b.n	e728 <repair_qgroups@@Base+0x1304>
    e77a:	mov	r0, r5
    e77c:	b.n	e750 <repair_qgroups@@Base+0x132c>
    e77e:	mov	r0, r4
    e780:	add	sp, #28
    e782:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e786:	nop
    e788:	str	r6, [r3, #104]	; 0x68
    e78a:	movs	r5, r0
    e78c:	lsls	r4, r4, #8
    e78e:	movs	r0, r0
    e790:	str	r0, [r6, #96]	; 0x60
    e792:	movs	r5, r0

0000e794 <btrfs_find_all_roots@@Base>:
    e794:	push	{r4}
    e796:	ldr	r4, [sp, #12]
    e798:	str	r4, [sp, #4]
    e79a:	ldr.w	r4, [sp], #4
    e79e:	b.n	e6dc <repair_qgroups@@Base+0x12b8>

0000e7a0 <inode_item_info@@Base>:
    e7a0:	ldr.w	ip, [pc, #68]	; e7e8 <inode_item_info@@Base+0x48>
    e7a4:	push	{r4, lr}
    e7a6:	add	ip, pc
    e7a8:	ldr	r4, [pc, #64]	; (e7ec <inode_item_info@@Base+0x4c>)
    e7aa:	sub	sp, #40	; 0x28
    e7ac:	ldr.w	r4, [ip, r4]
    e7b0:	ldr	r4, [r4, #0]
    e7b2:	str	r4, [sp, #36]	; 0x24
    e7b4:	mov.w	r4, #0
    e7b8:	strd	r2, r3, [sp]
    e7bc:	add	r4, sp, #16
    e7be:	mov	r2, r0
    e7c0:	mov	r3, r1
    e7c2:	str	r4, [sp, #12]
    e7c4:	ldrd	r0, r1, [sp, #48]	; 0x30
    e7c8:	movs	r4, #1
    e7ca:	str	r4, [sp, #8]
    e7cc:	bl	1b770 <btrfs_find_item@@Base>
    e7d0:	ldr	r2, [pc, #28]	; (e7f0 <inode_item_info@@Base+0x50>)
    e7d2:	ldr	r3, [pc, #24]	; (e7ec <inode_item_info@@Base+0x4c>)
    e7d4:	add	r2, pc
    e7d6:	ldr	r3, [r2, r3]
    e7d8:	ldr	r2, [r3, #0]
    e7da:	ldr	r3, [sp, #36]	; 0x24
    e7dc:	eors	r2, r3
    e7de:	beq.n	e7e4 <inode_item_info@@Base+0x44>
    e7e0:	blx	84cc <__stack_chk_fail@plt>
    e7e4:	add	sp, #40	; 0x28
    e7e6:	pop	{r4, pc}
    e7e8:	str	r2, [r4, #92]	; 0x5c
    e7ea:	movs	r5, r0
    e7ec:	lsls	r4, r4, #8
    e7ee:	movs	r0, r0
    e7f0:	str	r4, [r6, #88]	; 0x58
    e7f2:	movs	r5, r0

0000e7f4 <btrfs_find_one_extref@@Base>:
    e7f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e7f8:	mov	r6, r2
    e7fa:	ldr	r2, [pc, #204]	; (e8c8 <btrfs_find_one_extref@@Base+0xd4>)
    e7fc:	mov	r7, r3
    e7fe:	ldr	r3, [pc, #204]	; (e8cc <btrfs_find_one_extref@@Base+0xd8>)
    e800:	sub	sp, #60	; 0x3c
    e802:	add	r2, pc
    e804:	mov.w	sl, #0
    e808:	ldrd	r4, r9, [sp, #104]	; 0x68
    e80c:	mov	r1, r0
    e80e:	ldr	r3, [r2, r3]
    e810:	mov	r8, r0
    e812:	mov	r0, sl
    e814:	add	r2, sp, #12
    e816:	ldr	r3, [r3, #0]
    e818:	str	r3, [sp, #52]	; 0x34
    e81a:	mov.w	r3, #0
    e81e:	movs	r3, #13
    e820:	strb.w	r3, [sp, #20]
    e824:	ldr	r3, [sp, #96]	; 0x60
    e826:	strd	sl, sl, [sp]
    e82a:	ldr	r5, [sp, #112]	; 0x70
    e82c:	str.w	r3, [sp, #21]
    e830:	ldr	r3, [sp, #100]	; 0x64
    e832:	strd	r6, r7, [sp, #12]
    e836:	str.w	r3, [sp, #25]
    e83a:	mov	r3, r4
    e83c:	bl	1a23c <btrfs_search_slot@@Base>
    e840:	cmp	r0, #0
    e842:	blt.n	e86a <btrfs_find_one_extref@@Base+0x76>
    e844:	ldr.w	fp, [r4]
    e848:	ldr	r2, [r4, #32]
    e84a:	ldr.w	r3, [fp, #192]	; 0xc0
    e84e:	cmp	r3, r2
    e850:	bhi.n	e87e <btrfs_find_one_extref@@Base+0x8a>
    e852:	strb.w	sl, [r4, #65]	; 0x41
    e856:	mov	r1, r4
    e858:	ldr.w	r0, [r8, #464]	; 0x1d0
    e85c:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
    e860:	cmp	r0, #0
    e862:	beq.n	e844 <btrfs_find_one_extref@@Base+0x50>
    e864:	ble.n	e86a <btrfs_find_one_extref@@Base+0x76>
    e866:	mvn.w	r0, #1
    e86a:	ldr	r2, [pc, #100]	; (e8d0 <btrfs_find_one_extref@@Base+0xdc>)
    e86c:	ldr	r3, [pc, #92]	; (e8cc <btrfs_find_one_extref@@Base+0xd8>)
    e86e:	add	r2, pc
    e870:	ldr	r3, [r2, r3]
    e872:	ldr	r2, [r3, #0]
    e874:	ldr	r3, [sp, #52]	; 0x34
    e876:	eors	r2, r3
    e878:	beq.n	e8c2 <btrfs_find_one_extref@@Base+0xce>
    e87a:	blx	84cc <__stack_chk_fail@plt>
    e87e:	add	r1, sp, #32
    e880:	mov	r0, fp
    e882:	bl	d744 <repair_qgroups@@Base+0x320>
    e886:	ldrd	r2, r3, [sp, #32]
    e88a:	cmp	r7, r3
    e88c:	it	eq
    e88e:	cmpeq	r6, r2
    e890:	bne.n	e866 <btrfs_find_one_extref@@Base+0x72>
    e892:	ldrb.w	r3, [sp, #40]	; 0x28
    e896:	cmp	r3, #13
    e898:	bne.n	e866 <btrfs_find_one_extref@@Base+0x72>
    e89a:	ldr	r3, [r4, #32]
    e89c:	movs	r0, #25
    e89e:	mla	r3, r0, r3, fp
    e8a2:	ldr.w	r3, [r3, #214]	; 0xd6
    e8a6:	adds	r3, #101	; 0x65
    e8a8:	str.w	r3, [r9]
    e8ac:	cbz	r5, e8be <btrfs_find_one_extref@@Base+0xca>
    e8ae:	ldr.w	r2, [sp, #41]	; 0x29
    e8b2:	movs	r0, #0
    e8b4:	ldr.w	r3, [sp, #45]	; 0x2d
    e8b8:	strd	r2, r3, [r5]
    e8bc:	b.n	e86a <btrfs_find_one_extref@@Base+0x76>
    e8be:	mov	r0, r5
    e8c0:	b.n	e86a <btrfs_find_one_extref@@Base+0x76>
    e8c2:	add	sp, #60	; 0x3c
    e8c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e8c8:	str	r6, [r0, #88]	; 0x58
    e8ca:	movs	r5, r0
    e8cc:	lsls	r4, r4, #8
    e8ce:	movs	r0, r0
    e8d0:	str	r2, [r3, #80]	; 0x50
    e8d2:	movs	r5, r0

0000e8d4 <btrfs_ref_to_path@@Base>:
    e8d4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e8d8:	mov	r7, r0
    e8da:	ldr	r0, [pc, #304]	; (ea0c <btrfs_ref_to_path@@Base+0x138>)
    e8dc:	sub	sp, #68	; 0x44
    e8de:	mov	r5, r1
    e8e0:	ldr	r1, [pc, #300]	; (ea10 <btrfs_ref_to_path@@Base+0x13c>)
    e8e2:	add	r0, pc
    e8e4:	mov	ip, r2
    e8e6:	mov	r2, r3
    e8e8:	ldrd	r6, r3, [sp, #120]	; 0x78
    e8ec:	ldr	r1, [r0, r1]
    e8ee:	adds.w	r9, r3, #4294967295	; 0xffffffff
    e8f2:	ldr.w	r8, [sp, #104]	; 0x68
    e8f6:	ldr	r1, [r1, #0]
    e8f8:	str	r1, [sp, #60]	; 0x3c
    e8fa:	mov.w	r1, #0
    e8fe:	mov	r0, r3
    e900:	mov.w	r1, #0
    e904:	adc.w	sl, r1, #4294967295	; 0xffffffff
    e908:	orrs	r1, r0
    e90a:	mov	r4, r8
    e90c:	ittt	ne
    e90e:	addne	r3, r3, r6
    e910:	movne	r1, #0
    e912:	strbne.w	r1, [r3, #-1]
    e916:	add	r3, sp, #40	; 0x28
    e918:	str	r3, [sp, #36]	; 0x24
    e91a:	subs.w	r0, r9, ip
    e91e:	sbc.w	r1, sl, #0
    e922:	cmp	r0, #0
    e924:	sbcs.w	r3, r1, #0
    e928:	strd	r0, r1, [sp, #16]
    e92c:	blt.n	e93a <btrfs_ref_to_path@@Base+0x66>
    e92e:	ldr	r1, [sp, #16]
    e930:	mov	r3, ip
    e932:	mov	r0, r4
    e934:	adds	r1, r6, r1
    e936:	bl	1731a <read_extent_buffer@@Base>
    e93a:	cmp	r4, r8
    e93c:	beq.n	e944 <btrfs_ref_to_path@@Base+0x70>
    e93e:	mov	r0, r4
    e940:	bl	16c20 <free_extent_buffer@@Base>
    e944:	ldr	r3, [sp, #36]	; 0x24
    e946:	movs	r4, #0
    e948:	mov	r1, r5
    e94a:	mov	r0, r7
    e94c:	str	r3, [sp, #12]
    e94e:	movs	r3, #12
    e950:	str	r3, [sp, #8]
    e952:	movs	r3, #0
    e954:	strd	r3, r4, [sp]
    e958:	ldrd	r2, r3, [sp, #112]	; 0x70
    e95c:	bl	1b770 <btrfs_find_item@@Base>
    e960:	subs	r4, r0, #0
    e962:	bgt.n	e9da <btrfs_ref_to_path@@Base+0x106>
    e964:	bne.n	e9de <btrfs_ref_to_path@@Base+0x10a>
    e966:	ldr.w	r3, [sp, #49]	; 0x31
    e96a:	str	r3, [sp, #24]
    e96c:	ldr.w	r3, [sp, #53]	; 0x35
    e970:	str	r3, [sp, #28]
    e972:	ldrd	r0, r1, [sp, #24]
    e976:	ldrd	r2, r3, [sp, #112]	; 0x70
    e97a:	cmp	r3, r1
    e97c:	it	eq
    e97e:	cmpeq	r2, r0
    e980:	beq.n	e9de <btrfs_ref_to_path@@Base+0x10a>
    e982:	ldr	r4, [r5, #0]
    e984:	mov	r0, r5
    e986:	ldr.w	fp, [r5, #32]
    e98a:	cmp	r8, r4
    e98c:	ittt	ne
    e98e:	ldrne	r3, [r4, #80]	; 0x50
    e990:	addne	r3, #1
    e992:	strne	r3, [r4, #80]	; 0x50
    e994:	bl	17e58 <btrfs_release_path@@Base>
    e998:	add.w	r1, r4, #96	; 0x60
    e99c:	movs	r3, #25
    e99e:	mla	fp, r3, fp, r1
    e9a2:	ldr.w	r2, [fp, #118]	; 0x76
    e9a6:	add.w	r3, r2, #101	; 0x65
    e9aa:	adds	r2, #111	; 0x6f
    e9ac:	add	r1, r3
    e9ae:	ldr	r3, [sp, #16]
    e9b0:	adds.w	r9, r3, #4294967295	; 0xffffffff
    e9b4:	ldr	r3, [sp, #20]
    e9b6:	ldrh.w	ip, [r1, #8]
    e9ba:	adc.w	sl, r3, #4294967295	; 0xffffffff
    e9be:	cmp.w	r9, #0
    e9c2:	sbcs.w	r3, sl, #0
    e9c6:	blt.n	e9d0 <btrfs_ref_to_path@@Base+0xfc>
    e9c8:	add.w	r3, r6, r9
    e9cc:	movs	r1, #47	; 0x2f
    e9ce:	strb	r1, [r3, #0]
    e9d0:	ldrd	r0, r1, [sp, #24]
    e9d4:	strd	r0, r1, [sp, #112]	; 0x70
    e9d8:	b.n	e91a <btrfs_ref_to_path@@Base+0x46>
    e9da:	mvn.w	r4, #1
    e9de:	mov	r0, r5
    e9e0:	bl	17e58 <btrfs_release_path@@Base>
    e9e4:	cbz	r4, e9fc <btrfs_ref_to_path@@Base+0x128>
    e9e6:	mov	r0, r4
    e9e8:	ldr	r2, [pc, #40]	; (ea14 <btrfs_ref_to_path@@Base+0x140>)
    e9ea:	ldr	r3, [pc, #36]	; (ea10 <btrfs_ref_to_path@@Base+0x13c>)
    e9ec:	add	r2, pc
    e9ee:	ldr	r3, [r2, r3]
    e9f0:	ldr	r2, [r3, #0]
    e9f2:	ldr	r3, [sp, #60]	; 0x3c
    e9f4:	eors	r2, r3
    e9f6:	beq.n	ea04 <btrfs_ref_to_path@@Base+0x130>
    e9f8:	blx	84cc <__stack_chk_fail@plt>
    e9fc:	ldr	r3, [sp, #16]
    e9fe:	add	r3, r6
    ea00:	mov	r0, r3
    ea02:	b.n	e9e8 <btrfs_ref_to_path@@Base+0x114>
    ea04:	add	sp, #68	; 0x44
    ea06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ea0a:	nop
    ea0c:	str	r6, [r4, #72]	; 0x48
    ea0e:	movs	r5, r0
    ea10:	lsls	r4, r4, #8
    ea12:	movs	r0, r0
    ea14:	str	r4, [r3, #56]	; 0x38
    ea16:	movs	r5, r0
    ea18:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
    ea1c:	sub	sp, #24
    ea1e:	mov	r9, r1
    ea20:	mov	r8, r0
    ea22:	ldr	r4, [sp, #52]	; 0x34
    ea24:	ldr	r1, [r4, #8]
    ea26:	ldr	r6, [r1, #8]
    ea28:	add.w	r5, r1, r6, lsl #2
    ea2c:	ldr	r1, [r1, #0]
    ea2e:	adds	r5, #20
    ea30:	strd	r8, r9, [sp, #8]
    ea34:	cmp	r1, #4
    ea36:	it	cc
    ea38:	movcc	r1, #4
    ea3a:	subs	r1, #4
    ea3c:	strd	r5, r1, [sp, #16]
    ea40:	ldr	r1, [sp, #48]	; 0x30
    ea42:	str	r1, [sp, #0]
    ea44:	ldrd	r1, r0, [r4]
    ea48:	bl	e8d4 <btrfs_ref_to_path@@Base>
    ea4c:	cmn.w	r0, #4096	; 0x1000
    ea50:	bhi.n	ea76 <btrfs_ref_to_path@@Base+0x1a2>
    ea52:	cmp	r5, r0
    ea54:	ldr	r2, [r4, #8]
    ea56:	bcs.n	ea7c <btrfs_ref_to_path@@Base+0x1a8>
    ea58:	adds	r6, #2
    ea5a:	movs	r3, #0
    ea5c:	add.w	r1, r2, r6, lsl #3
    ea60:	str.w	r0, [r2, r6, lsl #3]
    ea64:	subs	r0, r0, r5
    ea66:	str	r3, [r1, #4]
    ea68:	ldr	r1, [r4, #8]
    ea6a:	ldr	r2, [r1, #8]
    ea6c:	adds	r2, #1
    ea6e:	str	r2, [r1, #8]
    ea70:	ldr	r2, [r4, #8]
    ea72:	str	r0, [r2, #0]
    ea74:	mov	r0, r3
    ea76:	add	sp, #24
    ea78:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
    ea7c:	ldr	r3, [r2, #12]
    ea7e:	subs	r0, r5, r0
    ea80:	adds	r3, #1
    ea82:	str	r3, [r2, #12]
    ea84:	ldr	r3, [r4, #8]
    ea86:	ldr	r5, [r3, #4]
    ea88:	add	r0, r5
    ea8a:	str	r0, [r3, #4]
    ea8c:	ldr	r3, [r4, #8]
    ea8e:	movs	r0, #0
    ea90:	str	r0, [r3, #0]
    ea92:	b.n	ea76 <btrfs_ref_to_path@@Base+0x1a2>

0000ea94 <extent_from_logical@@Base>:
    ea94:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ea98:	mov	r8, r2
    ea9a:	ldr	r2, [pc, #380]	; (ec18 <extent_from_logical@@Base+0x184>)
    ea9c:	mov	r9, r3
    ea9e:	ldr	r3, [pc, #380]	; (ec1c <extent_from_logical@@Base+0x188>)
    eaa0:	sub	sp, #40	; 0x28
    eaa2:	add	r2, pc
    eaa4:	mov	r7, r0
    eaa6:	ldrd	r5, r6, [sp, #72]	; 0x48
    eaaa:	ldr	r3, [r2, r3]
    eaac:	ldr.w	sl, [sp, #80]	; 0x50
    eab0:	ldr	r3, [r3, #0]
    eab2:	str	r3, [sp, #36]	; 0x24
    eab4:	mov.w	r3, #0
    eab8:	ldr.w	r3, [r0, #308]	; 0x134
    eabc:	movs	r0, #0
    eabe:	ldr.w	r1, [r3, #188]	; 0xbc
    eac2:	mov	r3, r0
    eac4:	strd	r0, r0, [sp]
    eac8:	and.w	r2, r1, #256	; 0x100
    eacc:	ldr	r1, [r7, #24]
    eace:	orrs	r3, r2
    ead0:	mov.w	r2, #4294967295	; 0xffffffff
    ead4:	strb.w	r2, [sp, #25]
    ead8:	ite	ne
    eada:	movne	r3, #169	; 0xa9
    eadc:	moveq	r3, #168	; 0xa8
    eade:	strb.w	r2, [sp, #26]
    eae2:	strb.w	r3, [sp, #24]
    eae6:	mov	r3, r5
    eae8:	strb.w	r2, [sp, #27]
    eaec:	strb.w	r2, [sp, #28]
    eaf0:	strb.w	r2, [sp, #29]
    eaf4:	strb.w	r2, [sp, #30]
    eaf8:	strb.w	r2, [sp, #31]
    eafc:	strb.w	r2, [sp, #32]
    eb00:	add	r2, sp, #16
    eb02:	strd	r8, r9, [sp, #16]
    eb06:	bl	1a23c <btrfs_search_slot@@Base>
    eb0a:	subs	r4, r0, #0
    eb0c:	blt.n	eb24 <extent_from_logical@@Base+0x90>
    eb0e:	ldr	r0, [r7, #24]
    eb10:	movs	r2, #0
    eb12:	movs	r3, #0
    eb14:	mov	r1, r5
    eb16:	bl	1b998 <btrfs_previous_extent_item@@Base>
    eb1a:	subs	r4, r0, #0
    eb1c:	beq.n	eb38 <extent_from_logical@@Base+0xa4>
    eb1e:	ble.n	eb24 <extent_from_logical@@Base+0x90>
    eb20:	mvn.w	r4, #1
    eb24:	ldr	r2, [pc, #248]	; (ec20 <extent_from_logical@@Base+0x18c>)
    eb26:	ldr	r3, [pc, #244]	; (ec1c <extent_from_logical@@Base+0x188>)
    eb28:	add	r2, pc
    eb2a:	ldr	r3, [r2, r3]
    eb2c:	ldr	r2, [r3, #0]
    eb2e:	ldr	r3, [sp, #36]	; 0x24
    eb30:	eors	r2, r3
    eb32:	beq.n	ec10 <extent_from_logical@@Base+0x17c>
    eb34:	blx	84cc <__stack_chk_fail@plt>
    eb38:	ldr	r2, [r5, #32]
    eb3a:	mov	r1, r6
    eb3c:	ldr	r0, [r5, #0]
    eb3e:	bl	d744 <repair_qgroups@@Base+0x320>
    eb42:	ldrb	r3, [r6, #8]
    eb44:	cmp	r3, #169	; 0xa9
    eb46:	bne.n	ebc6 <extent_from_logical@@Base+0x132>
    eb48:	ldr.w	r1, [r7, #384]	; 0x180
    eb4c:	movs	r0, #0
    eb4e:	ldr	r3, [r6, #4]
    eb50:	ldr	r2, [r6, #0]
    eb52:	cmp	r9, r3
    eb54:	it	eq
    eb56:	cmpeq	r8, r2
    eb58:	bcc.n	eb20 <extent_from_logical@@Base+0x8c>
    eb5a:	adds	r1, r2, r1
    eb5c:	str	r1, [sp, #8]
    eb5e:	adcs	r3, r0
    eb60:	str	r3, [sp, #12]
    eb62:	ldrd	r2, r3, [sp, #8]
    eb66:	cmp	r9, r3
    eb68:	it	eq
    eb6a:	cmpeq	r8, r2
    eb6c:	bcs.n	eb20 <extent_from_logical@@Base+0x8c>
    eb6e:	ldr	r6, [r5, #0]
    eb70:	movs	r2, #25
    eb72:	ldr	r3, [r5, #32]
    eb74:	adds	r6, #96	; 0x60
    eb76:	ldr	r1, [pc, #172]	; (ec24 <extent_from_logical@@Base+0x190>)
    eb78:	ldr	r0, [pc, #172]	; (ec28 <extent_from_logical@@Base+0x194>)
    eb7a:	mla	r3, r2, r3, r6
    eb7e:	add	r1, pc
    eb80:	adds	r1, #148	; 0x94
    eb82:	add	r0, pc
    eb84:	movw	r2, #1178	; 0x49a
    eb88:	str	r1, [sp, #8]
    eb8a:	add.w	r5, r3, #101	; 0x65
    eb8e:	ldr.w	r3, [r3, #122]	; 0x7a
    eb92:	cmp	r3, #23
    eb94:	ite	hi
    eb96:	movhi	r3, #0
    eb98:	movls	r3, #1
    eb9a:	bl	d9b0 <repair_qgroups@@Base+0x58c>
    eb9e:	ldr.w	r3, [r5, #17]
    eba2:	ldr	r1, [sp, #8]
    eba4:	add	r6, r3
    eba6:	ldr.w	r5, [r6, #117]	; 0x75
    ebaa:	cmp.w	sl, #0
    ebae:	beq.n	ebfc <extent_from_logical@@Base+0x168>
    ebb0:	and.w	r2, r5, #2
    ebb4:	movs	r0, #0
    ebb6:	mov	r3, r0
    ebb8:	orrs	r3, r2
    ebba:	beq.n	ebd8 <extent_from_logical@@Base+0x144>
    ebbc:	movs	r2, #2
    ebbe:	movs	r3, #0
    ebc0:	strd	r2, r3, [sl]
    ebc4:	b.n	eb24 <extent_from_logical@@Base+0x90>
    ebc6:	cmp	r3, #168	; 0xa8
    ebc8:	iteet	ne
    ebca:	movne	r1, #0
    ebcc:	ldreq.w	r1, [r6, #9]
    ebd0:	ldreq.w	r0, [r6, #13]
    ebd4:	movne	r0, r1
    ebd6:	b.n	eb4e <extent_from_logical@@Base+0xba>
    ebd8:	and.w	r2, r5, #1
    ebdc:	mov	r3, r0
    ebde:	orrs	r3, r2
    ebe0:	beq.n	ebe6 <extent_from_logical@@Base+0x152>
    ebe2:	movs	r2, #1
    ebe4:	b.n	ebbe <extent_from_logical@@Base+0x12a>
    ebe6:	ldr	r0, [pc, #68]	; (ec2c <extent_from_logical@@Base+0x198>)
    ebe8:	mov	r2, r1
    ebea:	ldr	r1, [pc, #68]	; (ec30 <extent_from_logical@@Base+0x19c>)
    ebec:	movs	r3, #1
    ebee:	add	r0, pc
    ebf0:	str	r3, [sp, #0]
    ebf2:	add	r1, pc
    ebf4:	movw	r3, #1194	; 0x4aa
    ebf8:	bl	d916 <repair_qgroups@@Base+0x4f2>
    ebfc:	ldr	r0, [pc, #52]	; (ec34 <extent_from_logical@@Base+0x1a0>)
    ebfe:	movs	r3, #1
    ec00:	movw	r2, #1197	; 0x4ad
    ec04:	mvn.w	r4, #4
    ec08:	add	r0, pc
    ec0a:	bl	d9d0 <repair_qgroups@@Base+0x5ac>
    ec0e:	b.n	eb24 <extent_from_logical@@Base+0x90>
    ec10:	mov	r0, r4
    ec12:	add	sp, #40	; 0x28
    ec14:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    ec18:	str	r6, [r4, #44]	; 0x2c
    ec1a:	movs	r5, r0
    ec1c:	lsls	r4, r4, #8
    ec1e:	movs	r0, r0
    ec20:	str	r0, [r4, #36]	; 0x24
    ec22:	movs	r5, r0
    ec24:	stmia	r2!, {r1, r3, r6}
    ec26:	movs	r2, r0
    ec28:	stmia	r1!, {r0, r3, r4}
    ec2a:	movs	r2, r0
    ec2c:			; <UNDEFINED> instruction: 0xf1fd0002
    ec30:	stmia	r0!, {r1, r2, r4, r7}
    ec32:	movs	r2, r0
    ec34:			; <UNDEFINED> instruction: 0xf1e30002

0000ec38 <tree_backref_for_extent@@Base>:
    ec38:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ec3c:	mov	r5, r3
    ec3e:	ldr	r3, [r0, #0]
    ec40:	sub	sp, #20
    ec42:	mov	r4, r0
    ec44:	adds	r3, #1
    ec46:	strd	r1, r2, [sp, #8]
    ec4a:	beq.n	eca4 <tree_backref_for_extent@@Base+0x6c>
    ec4c:	ldr.w	sl, [pc, #228]	; ed34 <tree_backref_for_extent@@Base+0xfc>
    ec50:	ldr.w	fp, [pc, #228]	; ed38 <tree_backref_for_extent@@Base+0x100>
    ec54:	add	sl, pc
    ec56:	add.w	sl, sl, #168	; 0xa8
    ec5a:	add	fp, pc
    ec5c:	ldr	r3, [sp, #8]
    ec5e:	add.w	r6, r3, #96	; 0x60
    ec62:	ldr	r3, [r4, #0]
    ec64:	cbz	r3, ecac <tree_backref_for_extent@@Base+0x74>
    ec66:	ldr	r3, [sp, #56]	; 0x38
    ec68:	add.w	r9, r5, r3
    ec6c:	ldr	r3, [r4, #0]
    ec6e:	add.w	r8, r6, r3
    ec72:	ldrb	r7, [r6, r3]
    ec74:	cmp	r7, #176	; 0xb0
    ec76:	bne.n	ecf4 <tree_backref_for_extent@@Base+0xbc>
    ec78:	movs	r2, #9
    ec7a:	add	r3, r2
    ec7c:	str	r3, [r4, #0]
    ec7e:	cmp	r9, r3
    ec80:	bcs.n	ec96 <tree_backref_for_extent@@Base+0x5e>
    ec82:	ldr	r1, [pc, #184]	; (ed3c <tree_backref_for_extent@@Base+0x104>)
    ec84:	movs	r3, #1
    ec86:	ldr	r0, [pc, #184]	; (ed40 <tree_backref_for_extent@@Base+0x108>)
    ec88:	movw	r2, #1247	; 0x4df
    ec8c:	add	r1, pc
    ec8e:	adds	r1, #168	; 0xa8
    ec90:	add	r0, pc
    ec92:	bl	d9d0 <repair_qgroups@@Base+0x5ac>
    ec96:	cmp	r7, #176	; 0xb0
    ec98:	ldr	r3, [r4, #0]
    ec9a:	beq.n	ed0c <tree_backref_for_extent@@Base+0xd4>
    ec9c:	cmp	r7, #182	; 0xb6
    ec9e:	beq.n	ed0c <tree_backref_for_extent@@Base+0xd4>
    eca0:	cmp	r9, r3
    eca2:	bne.n	ec5c <tree_backref_for_extent@@Base+0x24>
    eca4:	movs	r0, #1
    eca6:	add	sp, #20
    eca8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ecac:	adds	r2, r6, r5
    ecae:	ldr	r2, [r2, #16]
    ecb0:	and.w	r2, r2, #2
    ecb4:	strd	r2, r3, [sp]
    ecb8:	ldrd	r2, r3, [sp]
    ecbc:	orrs	r3, r2
    ecbe:	beq.n	ecc8 <tree_backref_for_extent@@Base+0x90>
    ecc0:	ldr	r3, [sp, #12]
    ecc2:	ldrb	r3, [r3, #8]
    ecc4:	cmp	r3, #169	; 0xa9
    ecc6:	bne.n	ecdc <tree_backref_for_extent@@Base+0xa4>
    ecc8:	add.w	r3, r5, #24
    eccc:	ldr	r2, [sp, #56]	; 0x38
    ecce:	str	r3, [r4, #0]
    ecd0:	adds	r2, r5, r2
    ecd2:	cmp	r3, r2
    ecd4:	bcc.n	ec66 <tree_backref_for_extent@@Base+0x2e>
    ecd6:	mvn.w	r0, #1
    ecda:	b.n	eca6 <tree_backref_for_extent@@Base+0x6e>
    ecdc:	cmp	r3, #168	; 0xa8
    ecde:	beq.n	ecee <tree_backref_for_extent@@Base+0xb6>
    ece0:	movs	r3, #1
    ece2:	movw	r2, #1229	; 0x4cd
    ece6:	mov	r1, sl
    ece8:	mov	r0, fp
    ecea:	bl	d9d0 <repair_qgroups@@Base+0x5ac>
    ecee:	add.w	r3, r5, #42	; 0x2a
    ecf2:	b.n	eccc <tree_backref_for_extent@@Base+0x94>
    ecf4:	cmp	r7, #182	; 0xb6
    ecf6:	beq.n	ec78 <tree_backref_for_extent@@Base+0x40>
    ecf8:	cmp	r7, #184	; 0xb8
    ecfa:	beq.n	ed04 <tree_backref_for_extent@@Base+0xcc>
    ecfc:	cmp	r7, #178	; 0xb2
    ecfe:	beq.n	ed08 <tree_backref_for_extent@@Base+0xd0>
    ed00:	bl	d94c <repair_qgroups@@Base+0x528>
    ed04:	movs	r2, #13
    ed06:	b.n	ec7a <tree_backref_for_extent@@Base+0x42>
    ed08:	movs	r2, #29
    ed0a:	b.n	ec7a <tree_backref_for_extent@@Base+0x42>
    ed0c:	ldr.w	r1, [r8, #1]!
    ed10:	add	r5, r6
    ed12:	ldr	r0, [sp, #60]	; 0x3c
    ed14:	cmp	r9, r3
    ed16:	ldr.w	r2, [r8, #4]
    ed1a:	str	r1, [r0, #0]
    ed1c:	str	r2, [r0, #4]
    ed1e:	ldr	r2, [sp, #64]	; 0x40
    ed20:	ldrb.w	r1, [r5, #41]	; 0x29
    ed24:	strb	r1, [r2, #0]
    ed26:	bne.n	ed2e <tree_backref_for_extent@@Base+0xf6>
    ed28:	mov.w	r3, #4294967295	; 0xffffffff
    ed2c:	str	r3, [r4, #0]
    ed2e:	movs	r0, #0
    ed30:	b.n	eca6 <tree_backref_for_extent@@Base+0x6e>
    ed32:	nop
    ed34:	stmia	r1!, {r2, r4, r5, r6}
    ed36:	movs	r2, r0
    ed38:	stmia	r1!, {r6}
    ed3a:	movs	r2, r0
    ed3c:	stmia	r1!, {r2, r3, r4, r5}
    ed3e:	movs	r2, r0
    ed40:	stmia	r1!, {r0, r2, r3, r5}
    ed42:	movs	r2, r0

0000ed44 <iterate_extent_inodes@@Base>:
    ed44:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ed48:	movs	r5, #0
    ed4a:	vpush	{d8}
    ed4e:	vmov	s16, r0
    ed52:	mov	r0, r5
    ed54:	sub	sp, #60	; 0x3c
    ed56:	str	r3, [sp, #16]
    ed58:	ldr	r3, [sp, #116]	; 0x74
    ed5a:	str	r2, [sp, #36]	; 0x24
    ed5c:	ldr	r2, [pc, #240]	; (ee50 <iterate_extent_inodes@@Base+0x10c>)
    ed5e:	str	r3, [sp, #28]
    ed60:	ldr	r3, [sp, #120]	; 0x78
    ed62:	add	r2, pc
    ed64:	str	r3, [sp, #32]
    ed66:	ldr	r3, [pc, #236]	; (ee54 <iterate_extent_inodes@@Base+0x110>)
    ed68:	ldr	r3, [r2, r3]
    ed6a:	ldr	r3, [r3, #0]
    ed6c:	str	r3, [sp, #52]	; 0x34
    ed6e:	mov.w	r3, #0
    ed72:	str	r5, [sp, #40]	; 0x28
    ed74:	bl	bb74 <ulist_alloc@@Base>
    ed78:	mov	r4, r0
    ed7a:	cmp	r0, #0
    ed7c:	beq.n	ee3e <iterate_extent_inodes@@Base+0xfa>
    ed7e:	add	r3, sp, #104	; 0x68
    ed80:	str	r0, [sp, #0]
    ed82:	strd	r5, r3, [sp, #4]
    ed86:	mov	r0, r5
    ed88:	vmov	r1, s16
    ed8c:	ldr	r2, [sp, #36]	; 0x24
    ed8e:	ldr	r3, [sp, #16]
    ed90:	bl	dad2 <repair_qgroups@@Base+0x6ae>
    ed94:	subs.w	r9, r0, #0
    ed98:	bge.n	edba <iterate_extent_inodes@@Base+0x76>
    ed9a:	cmn.w	r9, #2
    ed9e:	beq.n	edba <iterate_extent_inodes@@Base+0x76>
    eda0:	mov	r0, r4
    eda2:	bl	d6d8 <repair_qgroups@@Base+0x2b4>
    eda6:	ldr	r2, [pc, #176]	; (ee58 <iterate_extent_inodes@@Base+0x114>)
    eda8:	ldr	r3, [pc, #168]	; (ee54 <iterate_extent_inodes@@Base+0x110>)
    edaa:	add	r2, pc
    edac:	ldr	r3, [r2, r3]
    edae:	ldr	r2, [r3, #0]
    edb0:	ldr	r3, [sp, #52]	; 0x34
    edb2:	eors	r2, r3
    edb4:	beq.n	ee44 <iterate_extent_inodes@@Base+0x100>
    edb6:	blx	84cc <__stack_chk_fail@plt>
    edba:	add.w	r8, sp, #44	; 0x2c
    edbe:	add.w	sl, sp, #40	; 0x28
    edc2:	movs	r3, #0
    edc4:	str	r3, [sp, #44]	; 0x2c
    edc6:	mov	r1, r8
    edc8:	mov	r0, r4
    edca:	bl	bd74 <ulist_next@@Base>
    edce:	mov	r5, r0
    edd0:	cbnz	r0, edd6 <iterate_extent_inodes@@Base+0x92>
    edd2:	mov	r9, r0
    edd4:	b.n	eda0 <iterate_extent_inodes@@Base+0x5c>
    edd6:	str.w	sl, [sp]
    edda:	movs	r0, #0
    eddc:	vmov	r1, s16
    ede0:	ldrd	r2, r3, [r5]
    ede4:	bl	e6dc <repair_qgroups@@Base+0x12b8>
    ede8:	cbnz	r0, ee3a <iterate_extent_inodes@@Base+0xf6>
    edea:	add.w	fp, sp, #48	; 0x30
    edee:	str	r0, [sp, #48]	; 0x30
    edf0:	ldr	r0, [sp, #40]	; 0x28
    edf2:	mov	r1, fp
    edf4:	bl	bd74 <ulist_next@@Base>
    edf8:	cbnz	r0, ee0a <iterate_extent_inodes@@Base+0xc6>
    edfa:	mov	r9, r0
    edfc:	ldr	r0, [sp, #40]	; 0x28
    edfe:	bl	bb88 <ulist_free@@Base>
    ee02:	cmp.w	r9, #0
    ee06:	beq.n	edc6 <iterate_extent_inodes@@Base+0x82>
    ee08:	b.n	eda0 <iterate_extent_inodes@@Base+0x5c>
    ee0a:	ldrd	r2, r3, [r0]
    ee0e:	ldr	r6, [r5, #8]
    ee10:	strd	r2, r3, [sp, #16]
    ee14:	cmp	r6, #0
    ee16:	beq.n	edf0 <iterate_extent_inodes@@Base+0xac>
    ee18:	ldr	r3, [sp, #32]
    ee1a:	ldr	r7, [sp, #28]
    ee1c:	str	r3, [sp, #8]
    ee1e:	ldrd	r2, r3, [sp, #16]
    ee22:	strd	r2, r3, [sp]
    ee26:	ldrd	r2, r3, [r6, #8]
    ee2a:	ldrd	r0, r1, [r6]
    ee2e:	blx	r7
    ee30:	mov	r9, r0
    ee32:	cmp	r0, #0
    ee34:	bne.n	edfc <iterate_extent_inodes@@Base+0xb8>
    ee36:	ldr	r6, [r6, #16]
    ee38:	b.n	ee14 <iterate_extent_inodes@@Base+0xd0>
    ee3a:	mov	r9, r0
    ee3c:	b.n	eda0 <iterate_extent_inodes@@Base+0x5c>
    ee3e:	mvn.w	r9, #11
    ee42:	b.n	eda6 <iterate_extent_inodes@@Base+0x62>
    ee44:	mov	r0, r9
    ee46:	add	sp, #60	; 0x3c
    ee48:	vpop	{d8}
    ee4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ee50:	str	r6, [r4, #0]
    ee52:	movs	r5, r0
    ee54:	lsls	r4, r4, #8
    ee56:	movs	r0, r0
    ee58:	ldrsh	r6, [r3, r7]
    ee5a:	movs	r5, r0

0000ee5c <iterate_inodes_from_logical@@Base>:
    ee5c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    ee60:	mov	r7, r2
    ee62:	ldr	r2, [pc, #144]	; (eef4 <iterate_inodes_from_logical@@Base+0x98>)
    ee64:	mov	r8, r3
    ee66:	ldr	r3, [pc, #144]	; (eef8 <iterate_inodes_from_logical@@Base+0x9c>)
    ee68:	sub	sp, #56	; 0x38
    ee6a:	add	r2, pc
    ee6c:	mov	r5, r0
    ee6e:	mov	r6, r1
    ee70:	ldrd	r9, sl, [sp, #88]	; 0x58
    ee74:	ldr	r3, [r2, r3]
    ee76:	movs	r2, #0
    ee78:	ldr	r3, [r3, #0]
    ee7a:	str	r3, [sp, #52]	; 0x34
    ee7c:	mov.w	r3, #0
    ee80:	movs	r3, #0
    ee82:	strd	r2, r3, [sp, #24]
    ee86:	mov	r2, r0
    ee88:	add	r3, sp, #24
    ee8a:	mov	r0, r7
    ee8c:	str	r3, [sp, #8]
    ee8e:	add	r3, sp, #32
    ee90:	strd	r8, r3, [sp]
    ee94:	mov	r3, r1
    ee96:	bl	ea94 <extent_from_logical@@Base>
    ee9a:	mov	r4, r0
    ee9c:	mov	r0, r8
    ee9e:	bl	17e58 <btrfs_release_path@@Base>
    eea2:	cmp	r4, #0
    eea4:	blt.n	eed0 <iterate_inodes_from_logical@@Base+0x74>
    eea6:	ldr	r1, [sp, #24]
    eea8:	movs	r0, #0
    eeaa:	mov	r3, r0
    eeac:	and.w	r2, r1, #2
    eeb0:	orrs	r3, r2
    eeb2:	bne.n	eee4 <iterate_inodes_from_logical@@Base+0x88>
    eeb4:	ldrd	r2, r3, [sp, #32]
    eeb8:	str	r0, [sp, #8]
    eeba:	mov	r0, r7
    eebc:	subs	r5, r5, r2
    eebe:	strd	r9, sl, [sp, #12]
    eec2:	sbc.w	r6, r6, r3
    eec6:	strd	r5, r6, [sp]
    eeca:	bl	ed44 <iterate_extent_inodes@@Base>
    eece:	mov	r4, r0
    eed0:	ldr	r2, [pc, #40]	; (eefc <iterate_inodes_from_logical@@Base+0xa0>)
    eed2:	ldr	r3, [pc, #36]	; (eef8 <iterate_inodes_from_logical@@Base+0x9c>)
    eed4:	add	r2, pc
    eed6:	ldr	r3, [r2, r3]
    eed8:	ldr	r2, [r3, #0]
    eeda:	ldr	r3, [sp, #52]	; 0x34
    eedc:	eors	r2, r3
    eede:	beq.n	eeea <iterate_inodes_from_logical@@Base+0x8e>
    eee0:	blx	84cc <__stack_chk_fail@plt>
    eee4:	mvn.w	r4, #21
    eee8:	b.n	eed0 <iterate_inodes_from_logical@@Base+0x74>
    eeea:	mov	r0, r4
    eeec:	add	sp, #56	; 0x38
    eeee:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    eef2:	nop
    eef4:	ldrsh	r6, [r3, r4]
    eef6:	movs	r5, r0
    eef8:	lsls	r4, r4, #8
    eefa:	movs	r0, r0
    eefc:	ldrsh	r4, [r6, r2]
    eefe:	movs	r5, r0

0000ef00 <paths_from_inode@@Base>:
    ef00:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ef04:	mov.w	r8, #0
    ef08:	vpush	{d8-d9}
    ef0c:	mov.w	r9, #0
    ef10:	ldr	r3, [pc, #552]	; (f13c <paths_from_inode@@Base+0x23c>)
    ef12:	vmov	s17, r0
    ef16:	sub	sp, #84	; 0x54
    ef18:	vmov	s18, r1
    ef1c:	str	r2, [sp, #24]
    ef1e:	ldr	r2, [pc, #544]	; (f140 <paths_from_inode@@Base+0x240>)
    ef20:	add	r2, pc
    ef22:	ldr	r3, [r2, r3]
    ef24:	ldr	r3, [r3, #0]
    ef26:	str	r3, [sp, #76]	; 0x4c
    ef28:	mov.w	r3, #0
    ef2c:	ldr	r3, [sp, #24]
    ef2e:	ldr	r3, [r3, #4]
    ef30:	vmov	s16, r3
    ef34:	ldr	r3, [sp, #24]
    ef36:	ldr	r4, [r3, #0]
    ef38:	movs	r3, #0
    ef3a:	str	r3, [sp, #28]
    ef3c:	add	r3, sp, #56	; 0x38
    ef3e:	str	r3, [sp, #40]	; 0x28
    ef40:	ldr	r3, [sp, #40]	; 0x28
    ef42:	mov	r1, r4
    ef44:	vmov	r2, s17
    ef48:	vmov	r0, s16
    ef4c:	str	r3, [sp, #12]
    ef4e:	movs	r3, #12
    ef50:	strd	r8, r9, [sp]
    ef54:	str	r3, [sp, #8]
    ef56:	vmov	r3, s18
    ef5a:	bl	1b770 <btrfs_find_item@@Base>
    ef5e:	subs	r6, r0, #0
    ef60:	blt.w	f098 <paths_from_inode@@Base+0x198>
    ef64:	ldr	r3, [sp, #28]
    ef66:	beq.n	f004 <paths_from_inode@@Base+0x104>
    ef68:	cmp	r3, #0
    ef6a:	ite	ne
    ef6c:	movne.w	fp, #0
    ef70:	mvneq.w	fp, #1
    ef74:	mov	r0, r4
    ef76:	bl	17e58 <btrfs_release_path@@Base>
    ef7a:	cmp.w	fp, #0
    ef7e:	beq.w	f0a2 <paths_from_inode@@Base+0x1a2>
    ef82:	cmn.w	fp, #2
    ef86:	bne.n	efee <paths_from_inode@@Base+0xee>
    ef88:	mov.w	r9, #0
    ef8c:	mov.w	r8, #0
    ef90:	movs	r3, #0
    ef92:	movs	r2, #0
    ef94:	strd	r2, r3, [sp, #56]	; 0x38
    ef98:	add	r3, sp, #56	; 0x38
    ef9a:	str	r3, [sp, #32]
    ef9c:	add	r3, sp, #52	; 0x34
    ef9e:	str	r3, [sp, #36]	; 0x24
    efa0:	ldr	r3, [sp, #32]
    efa2:	vmov	r0, s16
    efa6:	str	r3, [sp, #16]
    efa8:	ldr	r3, [sp, #36]	; 0x24
    efaa:	strd	r4, r3, [sp, #8]
    efae:	ldrd	r2, r3, [sp, #56]	; 0x38
    efb2:	strd	r2, r3, [sp]
    efb6:	vmov	r2, s17
    efba:	vmov	r3, s18
    efbe:	bl	e7f4 <btrfs_find_one_extref@@Base>
    efc2:	subs.w	fp, r0, #0
    efc6:	blt.n	efd8 <paths_from_inode@@Base+0xd8>
    efc8:	beq.n	f0a8 <paths_from_inode@@Base+0x1a8>
    efca:	cmp.w	r8, #0
    efce:	ite	ne
    efd0:	movne.w	fp, #0
    efd4:	mvneq.w	fp, #1
    efd8:	mov	r0, r4
    efda:	bl	17e58 <btrfs_release_path@@Base>
    efde:	cmn.w	fp, #2
    efe2:	bne.n	efee <paths_from_inode@@Base+0xee>
    efe4:	cmp.w	r9, #0
    efe8:	it	ne
    efea:	movne.w	fp, #0
    efee:	ldr	r2, [pc, #340]	; (f144 <paths_from_inode@@Base+0x244>)
    eff0:	ldr	r3, [pc, #328]	; (f13c <paths_from_inode@@Base+0x23c>)
    eff2:	add	r2, pc
    eff4:	ldr	r3, [r2, r3]
    eff6:	ldr	r2, [r3, #0]
    eff8:	ldr	r3, [sp, #76]	; 0x4c
    effa:	eors	r2, r3
    effc:	beq.w	f12e <paths_from_inode@@Base+0x22e>
    f000:	blx	84cc <__stack_chk_fail@plt>
    f004:	ldr	r0, [r4, #0]
    f006:	adds	r3, #1
    f008:	ldr.w	r8, [sp, #65]	; 0x41
    f00c:	ldr.w	r9, [sp, #69]	; 0x45
    f010:	ldr	r7, [r4, #32]
    f012:	str	r3, [sp, #28]
    f014:	bl	17358 <btrfs_clone_extent_buffer@@Base>
    f018:	mov	r5, r0
    f01a:	cmp	r0, #0
    f01c:	beq.n	f09c <paths_from_inode@@Base+0x19c>
    f01e:	ldr	r3, [r0, #80]	; 0x50
    f020:	mov	sl, r6
    f022:	adds	r3, #1
    f024:	str	r3, [r0, #80]	; 0x50
    f026:	mov	r0, r4
    f028:	bl	17e58 <btrfs_release_path@@Base>
    f02c:	add.w	r3, r5, #96	; 0x60
    f030:	movs	r2, #25
    f032:	str	r3, [sp, #32]
    f034:	mla	r7, r2, r7, r3
    f038:	add.w	r3, r7, #101	; 0x65
    f03c:	str	r3, [sp, #36]	; 0x24
    f03e:	ldr.w	r7, [r7, #118]	; 0x76
    f042:	adds	r7, #101	; 0x65
    f044:	ldr	r3, [sp, #36]	; 0x24
    f046:	ldr.w	r3, [r3, #21]
    f04a:	cmp	sl, r3
    f04c:	bcc.n	f06e <paths_from_inode@@Base+0x16e>
    f04e:	mov	fp, r6
    f050:	mov	r0, r5
    f052:	bl	16c20 <free_extent_buffer@@Base>
    f056:	cmp.w	fp, #0
    f05a:	bne.n	ef74 <paths_from_inode@@Base+0x74>
    f05c:	orrs.w	r3, r8, r9
    f060:	beq.w	ef40 <paths_from_inode@@Base+0x40>
    f064:	adds.w	r8, r8, #1
    f068:	adc.w	r9, r9, #0
    f06c:	b.n	ef40 <paths_from_inode@@Base+0x40>
    f06e:	ldr	r3, [sp, #32]
    f070:	mov	r0, r8
    f072:	mov	r1, r9
    f074:	add	r3, r7
    f076:	ldrh	r2, [r3, #8]
    f078:	ldr	r3, [sp, #24]
    f07a:	str	r2, [sp, #44]	; 0x2c
    f07c:	strd	r5, r3, [sp]
    f080:	add.w	r3, r7, #10
    f084:	bl	ea18 <btrfs_ref_to_path@@Base+0x144>
    f088:	mov	fp, r0
    f08a:	cmp	r0, #0
    f08c:	bne.n	f050 <paths_from_inode@@Base+0x150>
    f08e:	ldr	r2, [sp, #44]	; 0x2c
    f090:	adds	r2, #10
    f092:	add	r7, r2
    f094:	add	sl, r2
    f096:	b.n	f044 <paths_from_inode@@Base+0x144>
    f098:	mov	fp, r6
    f09a:	b.n	ef74 <paths_from_inode@@Base+0x74>
    f09c:	mvn.w	fp, #11
    f0a0:	b.n	ef74 <paths_from_inode@@Base+0x74>
    f0a2:	mov.w	r9, #1
    f0a6:	b.n	ef8c <paths_from_inode@@Base+0x8c>
    f0a8:	ldr	r0, [r4, #0]
    f0aa:	add.w	r8, r8, #1
    f0ae:	ldr	r5, [r4, #32]
    f0b0:	bl	17358 <btrfs_clone_extent_buffer@@Base>
    f0b4:	mov	r6, r0
    f0b6:	cmp	r0, #0
    f0b8:	beq.n	f128 <paths_from_inode@@Base+0x228>
    f0ba:	ldr	r2, [r0, #80]	; 0x50
    f0bc:	adds	r2, #1
    f0be:	str	r2, [r0, #80]	; 0x50
    f0c0:	mov	r0, r4
    f0c2:	bl	17e58 <btrfs_release_path@@Base>
    f0c6:	ldr	r7, [r4, #0]
    f0c8:	movs	r3, #25
    f0ca:	adds	r7, #96	; 0x60
    f0cc:	mla	sl, r3, r5, r7
    f0d0:	ldr.w	r3, [sl, #118]	; 0x76
    f0d4:	ldr.w	r5, [sl, #122]	; 0x7a
    f0d8:	add.w	sl, r6, #96	; 0x60
    f0dc:	adds	r3, #101	; 0x65
    f0de:	str	r3, [sp, #28]
    f0e0:	cmp	r5, fp
    f0e2:	bls.n	f106 <paths_from_inode@@Base+0x206>
    f0e4:	ldr	r3, [sp, #28]
    f0e6:	ldr	r2, [sp, #24]
    f0e8:	add	r3, fp
    f0ea:	str	r3, [sp, #52]	; 0x34
    f0ec:	add.w	r1, sl, r3
    f0f0:	adds	r3, #18
    f0f2:	ldrh.w	ip, [r1, #16]
    f0f6:	ldr	r0, [r1, #0]
    f0f8:	ldr	r1, [r1, #4]
    f0fa:	strd	r6, r2, [sp]
    f0fe:	mov	r2, ip
    f100:	bl	ea18 <btrfs_ref_to_path@@Base+0x144>
    f104:	cbz	r0, f11c <paths_from_inode@@Base+0x21c>
    f106:	mov	r0, r6
    f108:	bl	16c20 <free_extent_buffer@@Base>
    f10c:	ldr	r3, [sp, #56]	; 0x38
    f10e:	ldr	r2, [sp, #60]	; 0x3c
    f110:	adds	r3, #1
    f112:	adc.w	r2, r2, #0
    f116:	strd	r3, r2, [sp, #56]	; 0x38
    f11a:	b.n	efa0 <paths_from_inode@@Base+0xa0>
    f11c:	ldr	r3, [sp, #52]	; 0x34
    f11e:	add	r3, r7
    f120:	ldrh	r3, [r3, #16]
    f122:	adds	r3, #18
    f124:	add	fp, r3
    f126:	b.n	f0e0 <paths_from_inode@@Base+0x1e0>
    f128:	mvn.w	fp, #11
    f12c:	b.n	efd8 <paths_from_inode@@Base+0xd8>
    f12e:	mov	r0, fp
    f130:	add	sp, #84	; 0x54
    f132:	vpop	{d8-d9}
    f136:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f13a:	nop
    f13c:	lsls	r4, r4, #8
    f13e:	movs	r0, r0
    f140:	ldrsh	r0, [r5, r1]
    f142:	movs	r5, r0
    f144:	ldrb	r6, [r2, r6]
    f146:	movs	r5, r0

0000f148 <init_data_container@@Base>:
    f148:	cmp	r0, #16
    f14a:	push	{r4, lr}
    f14c:	mov	r4, r0
    f14e:	it	cc
    f150:	movcc	r0, #16
    f152:	blx	8634 <malloc@plt+0x4>
    f156:	cbz	r0, f176 <init_data_container@@Base+0x2e>
    f158:	cmp	r4, #15
    f15a:	mov.w	r3, #0
    f15e:	itete	hi
    f160:	subhi	r4, #16
    f162:	rsbls	r4, r4, #16
    f166:	strdhi	r4, r3, [r0]
    f16a:	strdls	r3, r4, [r0]
    f16e:	movs	r3, #0
    f170:	strd	r3, r3, [r0, #8]
    f174:	pop	{r4, pc}
    f176:	mvn.w	r0, #11
    f17a:	b.n	f174 <init_data_container@@Base+0x2c>

0000f17c <init_ipath@@Base>:
    f17c:	push	{r4, r5, r6, lr}
    f17e:	mov	r5, r1
    f180:	mov	r6, r2
    f182:	bl	f148 <init_data_container@@Base>
    f186:	cmn.w	r0, #4096	; 0x1000
    f18a:	mov	r4, r0
    f18c:	bhi.n	f1a0 <init_ipath@@Base+0x24>
    f18e:	movs	r0, #12
    f190:	blx	8634 <malloc@plt+0x4>
    f194:	cbnz	r0, f1a4 <init_ipath@@Base+0x28>
    f196:	mov	r0, r4
    f198:	mvn.w	r4, #11
    f19c:	blx	83f0 <free@plt+0x4>
    f1a0:	mov	r0, r4
    f1a2:	pop	{r4, r5, r6, pc}
    f1a4:	strd	r5, r4, [r0, #4]
    f1a8:	mov	r4, r0
    f1aa:	str	r6, [r0, #0]
    f1ac:	b.n	f1a0 <init_ipath@@Base+0x24>

0000f1ae <free_ipath@@Base>:
    f1ae:	push	{r4, lr}
    f1b0:	mov	r4, r0
    f1b2:	cbz	r0, f1c4 <free_ipath@@Base+0x16>
    f1b4:	ldr	r0, [r0, #8]
    f1b6:	blx	83f0 <free@plt+0x4>
    f1ba:	mov	r0, r4
    f1bc:	ldmia.w	sp!, {r4, lr}
    f1c0:	b.w	83ec <free@plt>
    f1c4:	pop	{r4, pc}
    f1c6:	nop

0000f1c8 <table_create@@Base>:
    f1c8:	push	{r3, r4, r5, lr}
    f1ca:	mov	r4, r1
    f1cc:	muls	r1, r0
    f1ce:	mov	r5, r0
    f1d0:	movs	r0, #1
    f1d2:	adds	r1, #2
    f1d4:	lsls	r1, r1, #2
    f1d6:	blx	8358 <calloc@plt+0x4>
    f1da:	cbz	r0, f1e0 <table_create@@Base+0x18>
    f1dc:	strd	r5, r4, [r0]
    f1e0:	pop	{r3, r4, r5, pc}

0000f1e2 <table_vprintf@@Base>:
    f1e2:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    f1e4:	mov	r4, r0
    f1e6:	ldr	r7, [r0, #0]
    f1e8:	movs	r0, #100	; 0x64
    f1ea:	mov	r6, r3
    f1ec:	mla	r7, r7, r2, r1
    f1f0:	movs	r1, #1
    f1f2:	blx	8358 <calloc@plt+0x4>
    f1f6:	mov	r5, r0
    f1f8:	cbz	r0, f21a <table_vprintf@@Base+0x38>
    f1fa:	add.w	r4, r4, r7, lsl #2
    f1fe:	ldr	r0, [r4, #8]
    f200:	cbz	r0, f206 <table_vprintf@@Base+0x24>
    f202:	blx	83f0 <free@plt+0x4>
    f206:	ldr	r3, [sp, #32]
    f208:	movs	r2, #1
    f20a:	str	r5, [r4, #8]
    f20c:	movs	r1, #99	; 0x63
    f20e:	mov	r0, r5
    f210:	strd	r6, r3, [sp]
    f214:	movs	r3, #100	; 0x64
    f216:	blx	842c <__vsnprintf_chk@plt>
    f21a:	mov	r0, r5
    f21c:	add	sp, #12
    f21e:	pop	{r4, r5, r6, r7, pc}

0000f220 <table_printf@@Base>:
    f220:	push	{r3}
    f222:	push	{r4, lr}
    f224:	sub	sp, #20
    f226:	ldr.w	lr, [pc, #68]	; f26c <table_printf@@Base+0x4c>
    f22a:	add	r4, sp, #28
    f22c:	ldr.w	ip, [pc, #64]	; f270 <table_printf@@Base+0x50>
    f230:	add	lr, pc
    f232:	ldr.w	r3, [r4], #4
    f236:	ldr.w	ip, [lr, ip]
    f23a:	ldr.w	ip, [ip]
    f23e:	str.w	ip, [sp, #12]
    f242:	mov.w	ip, #0
    f246:	str	r4, [sp, #0]
    f248:	str	r4, [sp, #8]
    f24a:	bl	f1e2 <table_vprintf@@Base>
    f24e:	ldr	r2, [pc, #36]	; (f274 <table_printf@@Base+0x54>)
    f250:	ldr	r3, [pc, #28]	; (f270 <table_printf@@Base+0x50>)
    f252:	add	r2, pc
    f254:	ldr	r3, [r2, r3]
    f256:	ldr	r2, [r3, #0]
    f258:	ldr	r3, [sp, #12]
    f25a:	eors	r2, r3
    f25c:	beq.n	f262 <table_printf@@Base+0x42>
    f25e:	blx	84cc <__stack_chk_fail@plt>
    f262:	add	sp, #20
    f264:	ldmia.w	sp!, {r4, lr}
    f268:	add	sp, #4
    f26a:	bx	lr
    f26c:	ldrh	r0, [r3, r5]
    f26e:	movs	r5, r0
    f270:	lsls	r4, r4, #8
    f272:	movs	r0, r0
    f274:	ldrh	r6, [r6, r4]
    f276:	movs	r5, r0

0000f278 <table_dump@@Base>:
    f278:	ldr	r2, [pc, #296]	; (f3a4 <table_dump@@Base+0x12c>)
    f27a:	ldr	r3, [pc, #300]	; (f3a8 <table_dump@@Base+0x130>)
    f27c:	add	r2, pc
    f27e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f282:	sub	sp, #28
    f284:	ldr	r3, [r2, r3]
    f286:	add	r7, sp, #0
    f288:	movs	r5, #0
    f28a:	mov	r4, r0
    f28c:	ldr	r3, [r3, #0]
    f28e:	str	r3, [r7, #20]
    f290:	mov.w	r3, #0
    f294:	ldr	r3, [r0, #0]
    f296:	mov	lr, r5
    f298:	lsls	r2, r3, #2
    f29a:	adds	r1, r2, #7
    f29c:	bic.w	r1, r1, #7
    f2a0:	sub.w	sp, sp, r1
    f2a4:	ldr	r1, [r0, #4]
    f2a6:	mov	fp, sp
    f2a8:	sub.w	r6, fp, #4
    f2ac:	str	r1, [r7, #12]
    f2ae:	cmp	r5, r3
    f2b0:	blt.n	f2da <table_dump@@Base+0x62>
    f2b2:	ldr.w	r8, [pc, #248]	; f3ac <table_dump@@Base+0x134>
    f2b6:	movs	r6, #0
    f2b8:	ldr.w	r9, [pc, #244]	; f3b0 <table_dump@@Base+0x138>
    f2bc:	add	r8, pc
    f2be:	add	r9, pc
    f2c0:	ldr	r3, [r4, #4]
    f2c2:	cmp	r6, r3
    f2c4:	blt.n	f392 <table_dump@@Base+0x11a>
    f2c6:	ldr	r2, [pc, #236]	; (f3b4 <table_dump@@Base+0x13c>)
    f2c8:	ldr	r3, [pc, #220]	; (f3a8 <table_dump@@Base+0x130>)
    f2ca:	add	r2, pc
    f2cc:	ldr	r3, [r2, r3]
    f2ce:	ldr	r2, [r3, #0]
    f2d0:	ldr	r3, [r7, #20]
    f2d2:	eors	r2, r3
    f2d4:	beq.n	f39c <table_dump@@Base+0x124>
    f2d6:	blx	84cc <__stack_chk_fail@plt>
    f2da:	add.w	r9, r4, r5, lsl #2
    f2de:	mov.w	r8, #0
    f2e2:	str.w	lr, [r6, #4]!
    f2e6:	ldr	r1, [r7, #12]
    f2e8:	cmp	r8, r1
    f2ea:	blt.n	f2f0 <table_dump@@Base+0x78>
    f2ec:	adds	r5, #1
    f2ee:	b.n	f2ae <table_dump@@Base+0x36>
    f2f0:	ldr.w	sl, [r9, #8]
    f2f4:	cmp.w	sl, #0
    f2f8:	beq.n	f322 <table_dump@@Base+0xaa>
    f2fa:	mov	r0, sl
    f2fc:	strd	r2, r3, [r7, #4]
    f300:	blx	8704 <strlen@plt>
    f304:	ldrd	r2, r3, [r7, #4]
    f308:	mov.w	lr, #0
    f30c:	subs	r0, #1
    f30e:	beq.n	f322 <table_dump@@Base+0xaa>
    f310:	ldrb.w	ip, [sl]
    f314:	cmp.w	ip, #42	; 0x2a
    f318:	beq.n	f322 <table_dump@@Base+0xaa>
    f31a:	ldr	r1, [r6, #0]
    f31c:	cmp	r1, r0
    f31e:	it	lt
    f320:	strlt	r0, [r6, #0]
    f322:	add.w	r8, r8, #1
    f326:	add	r9, r2
    f328:	b.n	f2e6 <table_dump@@Base+0x6e>
    f32a:	mla	r3, r3, r6, r5
    f32e:	ldr.w	r2, [fp, r5, lsl #2]
    f332:	adds	r3, #2
    f334:	ldr.w	r3, [r4, r3, lsl #2]
    f338:	cbz	r3, f33e <table_dump@@Base+0xc6>
    f33a:	ldrb	r1, [r3, #0]
    f33c:	cbnz	r1, f34a <table_dump@@Base+0xd2>
    f33e:	mov	r3, r8
    f340:	mov	r1, r9
    f342:	movs	r0, #1
    f344:	blx	87f4 <__printf_chk@plt+0x4>
    f348:	b.n	f356 <table_dump@@Base+0xde>
    f34a:	cmp	r1, #42	; 0x2a
    f34c:	bne.n	f386 <table_dump@@Base+0x10e>
    f34e:	ldrb	r1, [r3, #1]
    f350:	cbz	r1, f38c <table_dump@@Base+0x114>
    f352:	subs	r2, #1
    f354:	bcs.n	f376 <table_dump@@Base+0xfe>
    f356:	ldr	r3, [r4, #0]
    f358:	subs	r3, #1
    f35a:	cmp	r5, r3
    f35c:	beq.n	f364 <table_dump@@Base+0xec>
    f35e:	movs	r0, #32
    f360:	blx	8790 <putchar@plt+0x4>
    f364:	adds	r5, #1
    f366:	ldr	r3, [r4, #0]
    f368:	cmp	r5, r3
    f36a:	blt.n	f32a <table_dump@@Base+0xb2>
    f36c:	movs	r0, #10
    f36e:	adds	r6, #1
    f370:	blx	8790 <putchar@plt+0x4>
    f374:	b.n	f2c0 <table_dump@@Base+0x48>
    f376:	ldrb	r0, [r3, #1]
    f378:	str	r2, [r7, #8]
    f37a:	str	r3, [r7, #12]
    f37c:	blx	8790 <putchar@plt+0x4>
    f380:	ldrd	r2, r3, [r7, #8]
    f384:	b.n	f352 <table_dump@@Base+0xda>
    f386:	cmp	r1, #60	; 0x3c
    f388:	it	eq
    f38a:	negeq	r2, r2
    f38c:	adds	r3, #1
    f38e:	mov	r1, sl
    f390:	b.n	f342 <table_dump@@Base+0xca>
    f392:	ldr.w	sl, [pc, #36]	; f3b8 <table_dump@@Base+0x140>
    f396:	movs	r5, #0
    f398:	add	sl, pc
    f39a:	b.n	f366 <table_dump@@Base+0xee>
    f39c:	adds	r7, #28
    f39e:	mov	sp, r7
    f3a0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f3a4:	ldrh	r4, [r1, r4]
    f3a6:	movs	r5, r0
    f3a8:	lsls	r4, r4, #8
    f3aa:	movs	r0, r0
    f3ac:	push	{r5, r7, lr}
    f3ae:	movs	r2, r0
    f3b0:	add	r7, sp, #16
    f3b2:	movs	r2, r0
    f3b4:	ldrh	r6, [r7, r2]
    f3b6:	movs	r5, r0
    f3b8:	add	r6, sp, #168	; 0xa8
    f3ba:	movs	r2, r0

0000f3bc <table_free@@Base>:
    f3bc:	push	{r3, r4, r5, r6, r7, lr}
    f3be:	add.w	r7, r0, #8
    f3c2:	ldrd	r5, r3, [r0]
    f3c6:	mov	r4, r0
    f3c8:	movs	r6, #0
    f3ca:	muls	r5, r3
    f3cc:	cmp	r6, r5
    f3ce:	blt.n	f3da <table_free@@Base+0x1e>
    f3d0:	mov	r0, r4
    f3d2:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    f3d6:	b.w	83ec <free@plt>
    f3da:	ldr.w	r0, [r7], #4
    f3de:	cbz	r0, f3e4 <table_free@@Base+0x28>
    f3e0:	blx	83f0 <free@plt+0x4>
    f3e4:	adds	r6, #1
    f3e6:	b.n	f3cc <table_free@@Base+0x10>

0000f3e8 <task_init@@Base>:
    f3e8:	push	{r4, r5, r6, lr}
    f3ea:	mov	r5, r0
    f3ec:	mov	r4, r1
    f3ee:	movs	r0, #1
    f3f0:	movs	r1, #32
    f3f2:	mov	r6, r2
    f3f4:	blx	8358 <calloc@plt+0x4>
    f3f8:	cbz	r0, f400 <task_init@@Base+0x18>
    f3fa:	strd	r6, r5, [r0, #20]
    f3fe:	str	r4, [r0, #28]
    f400:	pop	{r4, r5, r6, pc}

0000f402 <task_start@@Base>:
    f402:	push	{r4, r5, r6, lr}
    f404:	mov	r6, r1
    f406:	mov	r5, r2
    f408:	mov	r4, r0
    f40a:	cbz	r0, f43a <task_start@@Base+0x38>
    f40c:	ldr	r3, [r0, #24]
    f40e:	cbz	r3, f43a <task_start@@Base+0x38>
    f410:	cbz	r1, f41a <task_start@@Base+0x18>
    f412:	movs	r0, #0
    f414:	blx	8454 <time@plt>
    f418:	str	r0, [r6, #0]
    f41a:	cbz	r5, f424 <task_start@@Base+0x22>
    f41c:	movs	r2, #0
    f41e:	movs	r3, #0
    f420:	strd	r2, r3, [r5]
    f424:	ldrd	r3, r2, [r4, #20]
    f428:	add.w	r0, r4, #16
    f42c:	movs	r1, #0
    f42e:	blx	85d8 <pthread_create@plt>
    f432:	cbz	r0, f438 <task_start@@Base+0x36>
    f434:	movs	r3, #0
    f436:	str	r3, [r4, #16]
    f438:	pop	{r4, r5, r6, pc}
    f43a:	mov.w	r0, #4294967295	; 0xffffffff
    f43e:	b.n	f438 <task_start@@Base+0x36>

0000f440 <task_stop@@Base>:
    f440:	push	{r4, lr}
    f442:	mov	r4, r0
    f444:	cbz	r0, f472 <task_stop@@Base+0x32>
    f446:	ldr	r0, [r0, #16]
    f448:	cbz	r0, f45a <task_stop@@Base+0x1a>
    f44a:	blx	87a8 <pthread_cancel@plt>
    f44e:	ldr	r0, [r4, #16]
    f450:	movs	r1, #0
    f452:	blx	8870 <pthread_join@plt>
    f456:	movs	r3, #0
    f458:	str	r3, [r4, #16]
    f45a:	ldr	r0, [r4, #0]
    f45c:	cbz	r0, f466 <task_stop@@Base+0x26>
    f45e:	blx	8960 <close@plt>
    f462:	movs	r3, #0
    f464:	str	r3, [r4, #0]
    f466:	ldr	r3, [r4, #28]
    f468:	cbz	r3, f472 <task_stop@@Base+0x32>
    f46a:	ldr	r0, [r4, #20]
    f46c:	ldmia.w	sp!, {r4, lr}
    f470:	bx	r3
    f472:	pop	{r4, pc}

0000f474 <task_deinit@@Base>:
    f474:	cbz	r0, f47a <task_deinit@@Base+0x6>
    f476:	b.w	83ec <free@plt>
    f47a:	bx	lr

0000f47c <task_period_start@@Base>:
    f47c:	ldr	r2, [pc, #128]	; (f500 <task_period_start@@Base+0x84>)
    f47e:	ldr	r3, [pc, #132]	; (f504 <task_period_start@@Base+0x88>)
    f480:	add	r2, pc
    f482:	push	{r4, r5, lr}
    f484:	sub	sp, #28
    f486:	ldr	r3, [r2, r3]
    f488:	mov	r5, r1
    f48a:	mov	r4, r0
    f48c:	ldr	r3, [r3, #0]
    f48e:	str	r3, [sp, #20]
    f490:	mov.w	r3, #0
    f494:	cbz	r0, f4ee <task_period_start@@Base+0x72>
    f496:	movs	r1, #0
    f498:	movs	r0, #1
    f49a:	blx	86c8 <timerfd_create@plt>
    f49e:	mov	r3, r0
    f4a0:	adds	r3, #1
    f4a2:	str	r0, [r4, #0]
    f4a4:	bne.n	f4be <task_period_start@@Base+0x42>
    f4a6:	movs	r0, #0
    f4a8:	str	r0, [r4, #0]
    f4aa:	ldr	r2, [pc, #92]	; (f508 <task_period_start@@Base+0x8c>)
    f4ac:	ldr	r3, [pc, #84]	; (f504 <task_period_start@@Base+0x88>)
    f4ae:	add	r2, pc
    f4b0:	ldr	r3, [r2, r3]
    f4b2:	ldr	r2, [r3, #0]
    f4b4:	ldr	r3, [sp, #20]
    f4b6:	eors	r2, r3
    f4b8:	beq.n	f4f4 <task_period_start@@Base+0x78>
    f4ba:	blx	84cc <__stack_chk_fail@plt>
    f4be:	movs	r2, #0
    f4c0:	movs	r3, #0
    f4c2:	strd	r2, r3, [r4, #8]
    f4c6:	mov.w	r1, #1000	; 0x3e8
    f4ca:	ldr	r2, [pc, #44]	; (f4f8 <task_period_start@@Base+0x7c>)
    f4cc:	umull	r2, r3, r5, r2
    f4d0:	lsrs	r2, r3, #6
    f4d2:	ldr	r3, [pc, #40]	; (f4fc <task_period_start@@Base+0x80>)
    f4d4:	str	r2, [sp, #4]
    f4d6:	mls	r1, r1, r2, r5
    f4da:	muls	r1, r3
    f4dc:	movs	r3, #0
    f4de:	strd	r1, r2, [sp, #8]
    f4e2:	add	r2, sp, #4
    f4e4:	str	r1, [sp, #16]
    f4e6:	mov	r1, r3
    f4e8:	blx	88a4 <timerfd_settime@plt>
    f4ec:	b.n	f4aa <task_period_start@@Base+0x2e>
    f4ee:	mov.w	r0, #4294967295	; 0xffffffff
    f4f2:	b.n	f4aa <task_period_start@@Base+0x2e>
    f4f4:	add	sp, #28
    f4f6:	pop	{r4, r5, pc}
    f4f8:	ldr	r5, [pc, #844]	; (f848 <btrfs_add_link@@Base+0x118>)
    f4fa:	asrs	r2, r4, #1
    f4fc:	negs	r0, r0
    f4fe:	movs	r7, r1
    f500:	ldr	r0, [r1, r4]
    f502:	movs	r5, r0
    f504:	lsls	r4, r4, #8
    f506:	movs	r0, r0
    f508:	ldr	r2, [r3, r3]
    f50a:	movs	r5, r0

0000f50c <task_period_wait@@Base>:
    f50c:	push	{r0, r1, r2, r3, r4, lr}
    f50e:	mov	r4, r0
    f510:	ldr	r2, [pc, #88]	; (f56c <task_period_wait@@Base+0x60>)
    f512:	ldr	r3, [pc, #92]	; (f570 <task_period_wait@@Base+0x64>)
    f514:	add	r2, pc
    f516:	ldr	r3, [r2, r3]
    f518:	ldr	r3, [r3, #0]
    f51a:	str	r3, [sp, #12]
    f51c:	mov.w	r3, #0
    f520:	cbz	r0, f552 <task_period_wait@@Base+0x46>
    f522:	ldr	r0, [r0, #0]
    f524:	cbz	r0, f552 <task_period_wait@@Base+0x46>
    f526:	movs	r2, #8
    f528:	mov	r1, sp
    f52a:	blx	83b8 <read@plt>
    f52e:	adds	r0, #1
    f530:	beq.n	f552 <task_period_wait@@Base+0x46>
    f532:	ldrd	r2, r3, [sp]
    f536:	orrs.w	r1, r2, r3
    f53a:	beq.n	f552 <task_period_wait@@Base+0x46>
    f53c:	adds.w	r1, r2, #4294967295	; 0xffffffff
    f540:	adc.w	r0, r3, #4294967295	; 0xffffffff
    f544:	ldrd	r3, r2, [r4, #8]
    f548:	adds	r3, r3, r1
    f54a:	adc.w	r2, r0, r2
    f54e:	strd	r3, r2, [r4, #8]
    f552:	ldr	r2, [pc, #32]	; (f574 <task_period_wait@@Base+0x68>)
    f554:	ldr	r3, [pc, #24]	; (f570 <task_period_wait@@Base+0x64>)
    f556:	add	r2, pc
    f558:	ldr	r3, [r2, r3]
    f55a:	ldr	r2, [r3, #0]
    f55c:	ldr	r3, [sp, #12]
    f55e:	eors	r2, r3
    f560:	beq.n	f566 <task_period_wait@@Base+0x5a>
    f562:	blx	84cc <__stack_chk_fail@plt>
    f566:	add	sp, #16
    f568:	pop	{r4, pc}
    f56a:	nop
    f56c:	ldr	r4, [r6, r1]
    f56e:	movs	r5, r0
    f570:	lsls	r4, r4, #8
    f572:	movs	r0, r0
    f574:	ldr	r2, [r6, r0]
    f576:	movs	r5, r0

0000f578 <task_period_stop@@Base>:
    f578:	push	{r4, lr}
    f57a:	mov	r4, r0
    f57c:	cbz	r0, f598 <task_period_stop@@Base+0x20>
    f57e:	ldr	r0, [r0, #0]
    f580:	cbz	r0, f598 <task_period_stop@@Base+0x20>
    f582:	movs	r3, #0
    f584:	mov	r2, r3
    f586:	mov	r1, r3
    f588:	blx	88a4 <timerfd_settime@plt>
    f58c:	ldr	r0, [r4, #0]
    f58e:	blx	8960 <close@plt>
    f592:	mov.w	r3, #4294967295	; 0xffffffff
    f596:	str	r3, [r4, #0]
    f598:	pop	{r4, pc}
    f59a:	nop
    f59c:	push	{r4, lr}
    f59e:	mov	r4, r1
    f5a0:	ldr	r1, [pc, #84]	; (f5f8 <task_period_stop@@Base+0x80>)
    f5a2:	sub	sp, #24
    f5a4:	ldr	r3, [pc, #84]	; (f5fc <task_period_stop@@Base+0x84>)
    f5a6:	add	r1, pc
    f5a8:	ldr	r3, [r1, r3]
    f5aa:	mov	r1, sp
    f5ac:	ldr	r3, [r3, #0]
    f5ae:	str	r3, [sp, #20]
    f5b0:	mov.w	r3, #0
    f5b4:	movs	r3, #25
    f5b6:	muls	r2, r3
    f5b8:	movs	r3, #17
    f5ba:	adds	r2, #101	; 0x65
    f5bc:	bl	1731a <read_extent_buffer@@Base>
    f5c0:	ldr.w	r3, [sp, #13]
    f5c4:	ldr.w	r2, [sp, #9]
    f5c8:	str.w	r3, [r4, #13]
    f5cc:	ldrb.w	r3, [sp, #8]
    f5d0:	str.w	r2, [r4, #9]
    f5d4:	ldr	r2, [pc, #40]	; (f600 <task_period_stop@@Base+0x88>)
    f5d6:	strb	r3, [r4, #8]
    f5d8:	ldr	r3, [sp, #0]
    f5da:	add	r2, pc
    f5dc:	str	r3, [r4, #0]
    f5de:	ldr	r3, [sp, #4]
    f5e0:	str	r3, [r4, #4]
    f5e2:	ldr	r3, [pc, #24]	; (f5fc <task_period_stop@@Base+0x84>)
    f5e4:	ldr	r3, [r2, r3]
    f5e6:	ldr	r2, [r3, #0]
    f5e8:	ldr	r3, [sp, #20]
    f5ea:	eors	r2, r3
    f5ec:	beq.n	f5f2 <task_period_stop@@Base+0x7a>
    f5ee:	blx	84cc <__stack_chk_fail@plt>
    f5f2:	add	sp, #24
    f5f4:	pop	{r4, pc}
    f5f6:	nop
    f5f8:	ldrsb	r2, [r4, r7]
    f5fa:	movs	r5, r0
    f5fc:	lsls	r4, r4, #8
    f5fe:	movs	r0, r0
    f600:	ldrsb	r6, [r5, r6]
    f602:	movs	r5, r0

0000f604 <check_dir_conflict@@Base>:
    f604:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    f608:	mov	sl, r2
    f60a:	ldr	r2, [pc, #280]	; (f724 <check_dir_conflict@@Base+0x120>)
    f60c:	sub	sp, #56	; 0x38
    f60e:	ldr	r3, [pc, #280]	; (f728 <check_dir_conflict@@Base+0x124>)
    f610:	mov	r8, r0
    f612:	add	r2, pc
    f614:	ldrd	r6, r7, [sp, #88]	; 0x58
    f618:	mov	r9, r1
    f61a:	ldr	r3, [r2, r3]
    f61c:	ldr	r3, [r3, #0]
    f61e:	str	r3, [sp, #52]	; 0x34
    f620:	mov.w	r3, #0
    f624:	bl	17e50 <btrfs_alloc_path@@Base>
    f628:	mov	r5, r0
    f62a:	cmp	r0, #0
    f62c:	beq.n	f714 <check_dir_conflict@@Base+0x110>
    f62e:	movs	r0, #0
    f630:	movs	r3, #1
    f632:	add	r2, sp, #32
    f634:	strb.w	r3, [sp, #40]	; 0x28
    f638:	mov	r1, r8
    f63a:	mov	r3, r5
    f63c:	strd	r0, r0, [sp]
    f640:	strd	r6, r7, [sp, #32]
    f644:	strb.w	r0, [sp, #41]	; 0x29
    f648:	strb.w	r0, [sp, #42]	; 0x2a
    f64c:	strb.w	r0, [sp, #43]	; 0x2b
    f650:	strb.w	r0, [sp, #44]	; 0x2c
    f654:	strb.w	r0, [sp, #45]	; 0x2d
    f658:	strb.w	r0, [sp, #46]	; 0x2e
    f65c:	strb.w	r0, [sp, #47]	; 0x2f
    f660:	strb.w	r0, [sp, #48]	; 0x30
    f664:	bl	1a23c <btrfs_search_slot@@Base>
    f668:	subs	r4, r0, #0
    f66a:	blt.n	f6ac <check_dir_conflict@@Base+0xa8>
    f66c:	bne.n	f708 <check_dir_conflict@@Base+0x104>
    f66e:	ldr	r3, [r5, #0]
    f670:	movs	r1, #25
    f672:	ldr	r2, [r5, #32]
    f674:	adds	r3, #96	; 0x60
    f676:	mla	r2, r1, r2, r3
    f67a:	ldr.w	r2, [r2, #118]	; 0x76
    f67e:	add	r3, r2
    f680:	ldr.w	r3, [r3, #153]	; 0x99
    f684:	lsls	r3, r3, #17
    f686:	bpl.n	f70e <check_dir_conflict@@Base+0x10a>
    f688:	mov	r0, r5
    f68a:	bl	17e58 <btrfs_release_path@@Base>
    f68e:	mov	r2, r5
    f690:	mov	r1, r8
    f692:	mov	r0, r4
    f694:	strd	sl, r4, [sp, #12]
    f698:	str.w	r9, [sp, #8]
    f69c:	strd	r6, r7, [sp]
    f6a0:	bl	9dec <btrfs_lookup_dir_item@@Base>
    f6a4:	cmn.w	r0, #4096	; 0x1000
    f6a8:	bls.n	f6c6 <check_dir_conflict@@Base+0xc2>
    f6aa:	mov	r4, r0
    f6ac:	mov	r0, r5
    f6ae:	bl	17e7e <btrfs_free_path@@Base>
    f6b2:	ldr	r2, [pc, #120]	; (f72c <check_dir_conflict@@Base+0x128>)
    f6b4:	ldr	r3, [pc, #112]	; (f728 <check_dir_conflict@@Base+0x124>)
    f6b6:	add	r2, pc
    f6b8:	ldr	r3, [r2, r3]
    f6ba:	ldr	r2, [r3, #0]
    f6bc:	ldr	r3, [sp, #52]	; 0x34
    f6be:	eors	r2, r3
    f6c0:	beq.n	f71a <check_dir_conflict@@Base+0x116>
    f6c2:	blx	84cc <__stack_chk_fail@plt>
    f6c6:	cbnz	r0, f702 <check_dir_conflict@@Base+0xfe>
    f6c8:	mov	r0, r5
    f6ca:	bl	17e58 <btrfs_release_path@@Base>
    f6ce:	ldrd	r2, r3, [sp, #96]	; 0x60
    f6d2:	mov	r1, r8
    f6d4:	mov	r0, r4
    f6d6:	str	r4, [sp, #24]
    f6d8:	strd	r2, r3, [sp, #16]
    f6dc:	mov	r2, r5
    f6de:	strd	r9, sl, [sp, #8]
    f6e2:	strd	r6, r7, [sp]
    f6e6:	bl	9ed4 <btrfs_lookup_dir_index@@Base>
    f6ea:	cmn.w	r0, #4096	; 0x1000
    f6ee:	bls.n	f6fe <check_dir_conflict@@Base+0xfa>
    f6f0:	cmn.w	r0, #2
    f6f4:	it	eq
    f6f6:	moveq	r0, r4
    f6f8:	cmn.w	r0, #4096	; 0x1000
    f6fc:	bhi.n	f6aa <check_dir_conflict@@Base+0xa6>
    f6fe:	cmp	r0, #0
    f700:	beq.n	f6ac <check_dir_conflict@@Base+0xa8>
    f702:	mvn.w	r4, #16
    f706:	b.n	f6ac <check_dir_conflict@@Base+0xa8>
    f708:	mvn.w	r4, #1
    f70c:	b.n	f6ac <check_dir_conflict@@Base+0xa8>
    f70e:	mvn.w	r4, #19
    f712:	b.n	f6ac <check_dir_conflict@@Base+0xa8>
    f714:	mvn.w	r4, #11
    f718:	b.n	f6b2 <check_dir_conflict@@Base+0xae>
    f71a:	mov	r0, r4
    f71c:	add	sp, #56	; 0x38
    f71e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    f722:	nop
    f724:	ldrsb	r6, [r6, r5]
    f726:	movs	r5, r0
    f728:	lsls	r4, r4, #8
    f72a:	movs	r0, r0
    f72c:	ldrsb	r2, [r2, r3]
    f72e:	movs	r5, r0

0000f730 <btrfs_add_link@@Base>:
    f730:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    f734:	sub	sp, #92	; 0x5c
    f736:	mov	r4, r3
    f738:	mov	r6, r2
    f73a:	ldr	r3, [sp, #148]	; 0x94
    f73c:	mov	r8, r0
    f73e:	ldr	r2, [pc, #772]	; (fa44 <btrfs_add_link@@Base+0x314>)
    f740:	mov	r7, r1
    f742:	ldr.w	sl, [sp, #136]	; 0x88
    f746:	str	r3, [sp, #32]
    f748:	add	r2, pc
    f74a:	ldr	r3, [pc, #764]	; (fa48 <btrfs_add_link@@Base+0x318>)
    f74c:	ldr	r3, [r2, r3]
    f74e:	ldr	r3, [r3, #0]
    f750:	str	r3, [sp, #84]	; 0x54
    f752:	mov.w	r3, #0
    f756:	bl	17e50 <btrfs_alloc_path@@Base>
    f75a:	mov	r5, r0
    f75c:	cmp	r0, #0
    f75e:	beq.w	fa2a <btrfs_add_link@@Base+0x2fa>
    f762:	ldr	r3, [sp, #32]
    f764:	cbz	r3, f774 <btrfs_add_link@@Base+0x44>
    f766:	ldrd	r2, r3, [r3]
    f76a:	strd	r2, r3, [sp, #24]
    f76e:	orrs	r3, r2
    f770:	bne.w	f878 <btrfs_add_link@@Base+0x148>
    f774:	bl	17e50 <btrfs_alloc_path@@Base>
    f778:	mov	r9, r0
    f77a:	cbnz	r0, f7b8 <btrfs_add_link@@Base+0x88>
    f77c:	mvn.w	fp, #11
    f780:	movs	r3, #0
    f782:	movs	r4, #0
    f784:	strd	r3, r4, [sp, #24]
    f788:	mov	r0, r5
    f78a:	bl	17e7e <btrfs_free_path@@Base>
    f78e:	cmp.w	fp, #0
    f792:	bne.n	f7a2 <btrfs_add_link@@Base+0x72>
    f794:	ldr	r3, [sp, #32]
    f796:	cbz	r3, f7a2 <btrfs_add_link@@Base+0x72>
    f798:	mov	r1, r3
    f79a:	ldrd	r2, r3, [sp, #24]
    f79e:	strd	r2, r3, [r1]
    f7a2:	ldr	r2, [pc, #680]	; (fa4c <btrfs_add_link@@Base+0x31c>)
    f7a4:	ldr	r3, [pc, #672]	; (fa48 <btrfs_add_link@@Base+0x318>)
    f7a6:	add	r2, pc
    f7a8:	ldr	r3, [r2, r3]
    f7aa:	ldr	r2, [r3, #0]
    f7ac:	ldr	r3, [sp, #84]	; 0x54
    f7ae:	eors	r2, r3
    f7b0:	beq.w	fa3a <btrfs_add_link@@Base+0x30a>
    f7b4:	blx	84cc <__stack_chk_fail@plt>
    f7b8:	ldr	r3, [sp, #128]	; 0x80
    f7ba:	mov.w	r1, #4294967295	; 0xffffffff
    f7be:	movs	r2, #96	; 0x60
    f7c0:	movs	r0, #0
    f7c2:	strb.w	r2, [sp, #52]	; 0x34
    f7c6:	add	r2, sp, #44	; 0x2c
    f7c8:	str	r3, [sp, #44]	; 0x2c
    f7ca:	ldr	r3, [sp, #132]	; 0x84
    f7cc:	strb.w	r1, [sp, #53]	; 0x35
    f7d0:	strb.w	r1, [sp, #54]	; 0x36
    f7d4:	str	r3, [sp, #48]	; 0x30
    f7d6:	mov	r3, r9
    f7d8:	strb.w	r1, [sp, #55]	; 0x37
    f7dc:	strb.w	r1, [sp, #56]	; 0x38
    f7e0:	strb.w	r1, [sp, #57]	; 0x39
    f7e4:	strb.w	r1, [sp, #58]	; 0x3a
    f7e8:	strb.w	r1, [sp, #59]	; 0x3b
    f7ec:	strb.w	r1, [sp, #60]	; 0x3c
    f7f0:	mov	r1, r7
    f7f2:	strd	r0, r0, [sp]
    f7f6:	bl	1a23c <btrfs_search_slot@@Base>
    f7fa:	subs.w	fp, r0, #0
    f7fe:	blt.n	f81a <btrfs_add_link@@Base+0xea>
    f800:	ldr.w	r2, [r9, #32]
    f804:	cbnz	r2, f824 <btrfs_add_link@@Base+0xf4>
    f806:	mov	r1, r9
    f808:	mov	r0, r7
    f80a:	bl	1b5e8 <btrfs_prev_leaf@@Base>
    f80e:	subs.w	fp, r0, #0
    f812:	blt.n	f81a <btrfs_add_link@@Base+0xea>
    f814:	beq.n	f82a <btrfs_add_link@@Base+0xfa>
    f816:	mvn.w	fp, #4
    f81a:	movs	r2, #2
    f81c:	movs	r3, #0
    f81e:	strd	r2, r3, [sp, #24]
    f822:	b.n	f86a <btrfs_add_link@@Base+0x13a>
    f824:	subs	r2, #1
    f826:	str.w	r2, [r9, #32]
    f82a:	ldr.w	r2, [r9, #32]
    f82e:	add	r1, sp, #64	; 0x40
    f830:	ldr.w	r0, [r9]
    f834:	bl	f59c <task_period_stop@@Base+0x24>
    f838:	ldrd	r0, r1, [sp, #64]	; 0x40
    f83c:	ldrd	r2, r3, [sp, #128]	; 0x80
    f840:	cmp	r3, r1
    f842:	it	eq
    f844:	cmpeq	r2, r0
    f846:	bne.w	f9b0 <btrfs_add_link@@Base+0x280>
    f84a:	ldrb.w	r2, [sp, #72]	; 0x48
    f84e:	cmp	r2, #96	; 0x60
    f850:	bne.w	f9b0 <btrfs_add_link@@Base+0x280>
    f854:	ldr.w	r2, [sp, #73]	; 0x49
    f858:	mov.w	fp, #0
    f85c:	ldr.w	r1, [sp, #77]	; 0x4d
    f860:	adds	r3, r2, #1
    f862:	str	r3, [sp, #24]
    f864:	adc.w	r3, r1, #0
    f868:	str	r3, [sp, #28]
    f86a:	mov	r0, r9
    f86c:	bl	17e7e <btrfs_free_path@@Base>
    f870:	cmp.w	fp, #0
    f874:	bne.w	fa30 <btrfs_add_link@@Base+0x300>
    f878:	ldrd	r2, r3, [sp, #24]
    f87c:	mov	r1, sl
    f87e:	mov	r0, r7
    f880:	strd	r2, r3, [sp, #8]
    f884:	ldrd	r2, r3, [sp, #128]	; 0x80
    f888:	strd	r2, r3, [sp]
    f88c:	ldr	r2, [sp, #140]	; 0x8c
    f88e:	bl	f604 <check_dir_conflict@@Base>
    f892:	subs.w	fp, r0, #0
    f896:	bge.n	f8a8 <btrfs_add_link@@Base+0x178>
    f898:	ldr	r3, [sp, #156]	; 0x9c
    f89a:	cmp	r3, #0
    f89c:	beq.w	f788 <btrfs_add_link@@Base+0x58>
    f8a0:	cmn.w	fp, #17
    f8a4:	bne.w	f788 <btrfs_add_link@@Base+0x58>
    f8a8:	ldr	r3, [sp, #152]	; 0x98
    f8aa:	cbz	r3, f8e2 <btrfs_add_link@@Base+0x1b2>
    f8ac:	ldrd	r2, r3, [sp, #24]
    f8b0:	mov	r1, r7
    f8b2:	mov	r0, r8
    f8b4:	strd	r6, r4, [sp]
    f8b8:	strd	r2, r3, [sp, #16]
    f8bc:	ldrd	r2, r3, [sp, #128]	; 0x80
    f8c0:	strd	r2, r3, [sp, #8]
    f8c4:	mov	r2, sl
    f8c6:	ldr	r3, [sp, #140]	; 0x8c
    f8c8:	bl	2dc74 <btrfs_insert_inode_ref@@Base>
    f8cc:	subs.w	fp, r0, #0
    f8d0:	bge.n	f9b6 <btrfs_add_link@@Base+0x286>
    f8d2:	ldr	r3, [sp, #156]	; 0x9c
    f8d4:	cmp	r3, #0
    f8d6:	beq.w	f788 <btrfs_add_link@@Base+0x58>
    f8da:	cmn.w	fp, #17
    f8de:	bne.w	f788 <btrfs_add_link@@Base+0x58>
    f8e2:	ldrd	r2, r3, [sp, #24]
    f8e6:	mov	r1, r7
    f8e8:	mov	r0, r8
    f8ea:	strd	r6, r4, [sp, #64]	; 0x40
    f8ee:	mov.w	r9, #1
    f8f2:	movs	r4, #0
    f8f4:	strd	r2, r3, [sp, #16]
    f8f8:	add.w	r6, sp, #73	; 0x49
    f8fc:	ldrb.w	r3, [sp, #144]	; 0x90
    f900:	strb.w	r9, [sp, #72]	; 0x48
    f904:	strb.w	r4, [sp, #73]	; 0x49
    f908:	str	r3, [sp, #12]
    f90a:	add	r3, sp, #64	; 0x40
    f90c:	str	r3, [sp, #36]	; 0x24
    f90e:	str	r3, [sp, #8]
    f910:	ldrd	r2, r3, [sp, #128]	; 0x80
    f914:	strb.w	r4, [sp, #74]	; 0x4a
    f918:	strb.w	r4, [sp, #75]	; 0x4b
    f91c:	strd	r2, r3, [sp]
    f920:	mov	r2, sl
    f922:	ldr	r3, [sp, #140]	; 0x8c
    f924:	strb.w	r4, [sp, #76]	; 0x4c
    f928:	strb.w	r4, [sp, #77]	; 0x4d
    f92c:	strb.w	r4, [sp, #78]	; 0x4e
    f930:	strb.w	r4, [sp, #79]	; 0x4f
    f934:	strb.w	r4, [sp, #80]	; 0x50
    f938:	bl	9c3c <btrfs_insert_dir_item@@Base>
    f93c:	subs.w	fp, r0, #0
    f940:	blt.w	f788 <btrfs_add_link@@Base+0x58>
    f944:	ldrd	r2, r3, [sp, #128]	; 0x80
    f948:	mov	r1, r7
    f94a:	strb	r4, [r6, #1]
    f94c:	mov	r0, r8
    f94e:	strb	r4, [r6, #2]
    f950:	strd	r2, r3, [sp, #64]	; 0x40
    f954:	mov	r3, r5
    f956:	strb	r4, [r6, #3]
    f958:	strb	r4, [r6, #4]
    f95a:	strb	r4, [r6, #5]
    f95c:	strb	r4, [r6, #6]
    f95e:	strb	r4, [r6, #7]
    f960:	ldr	r2, [sp, #36]	; 0x24
    f962:	strd	r9, r9, [sp]
    f966:	strb.w	r9, [sp, #72]	; 0x48
    f96a:	strb.w	r4, [sp, #73]	; 0x49
    f96e:	bl	1a23c <btrfs_search_slot@@Base>
    f972:	mov	fp, r0
    f974:	cmp	r0, #0
    f976:	bne.w	f788 <btrfs_add_link@@Base+0x58>
    f97a:	ldr	r3, [r5, #0]
    f97c:	movs	r0, #25
    f97e:	ldr	r1, [r5, #32]
    f980:	adds	r3, #96	; 0x60
    f982:	ldr	r2, [sp, #140]	; 0x8c
    f984:	mla	r1, r0, r1, r3
    f988:	lsl.w	r4, r2, r9
    f98c:	ldr.w	r1, [r1, #118]	; 0x76
    f990:	adds	r1, #101	; 0x65
    f992:	add	r3, r1
    f994:	ldr	r0, [r3, #16]
    f996:	ldr	r1, [r3, #20]
    f998:	adds	r0, r0, r4
    f99a:	str	r0, [r3, #16]
    f99c:	adc.w	r1, r1, r4, asr #31
    f9a0:	str	r1, [r3, #20]
    f9a2:	ldr	r0, [r5, #0]
    f9a4:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    f9a8:	mov	r0, r5
    f9aa:	bl	17e58 <btrfs_release_path@@Base>
    f9ae:	b.n	f788 <btrfs_add_link@@Base+0x58>
    f9b0:	mov.w	fp, #0
    f9b4:	b.n	f81a <btrfs_add_link@@Base+0xea>
    f9b6:	bne.n	f8e2 <btrfs_add_link@@Base+0x1b2>
    f9b8:	movs	r1, #1
    f9ba:	add	r2, sp, #64	; 0x40
    f9bc:	strb.w	r1, [sp, #72]	; 0x48
    f9c0:	mov	r3, r5
    f9c2:	strd	r1, r1, [sp]
    f9c6:	mov	r0, r8
    f9c8:	mov	r1, r7
    f9ca:	strb.w	fp, [sp, #73]	; 0x49
    f9ce:	strb.w	fp, [sp, #74]	; 0x4a
    f9d2:	strb.w	fp, [sp, #75]	; 0x4b
    f9d6:	strb.w	fp, [sp, #76]	; 0x4c
    f9da:	strb.w	fp, [sp, #77]	; 0x4d
    f9de:	strb.w	fp, [sp, #78]	; 0x4e
    f9e2:	strb.w	fp, [sp, #79]	; 0x4f
    f9e6:	strb.w	fp, [sp, #80]	; 0x50
    f9ea:	strd	r6, r4, [sp, #64]	; 0x40
    f9ee:	bl	1a23c <btrfs_search_slot@@Base>
    f9f2:	subs.w	fp, r0, #0
    f9f6:	beq.n	fa02 <btrfs_add_link@@Base+0x2d2>
    f9f8:	ble.w	f788 <btrfs_add_link@@Base+0x58>
    f9fc:	mvn.w	fp, #1
    fa00:	b.n	f788 <btrfs_add_link@@Base+0x58>
    fa02:	ldr	r3, [r5, #0]
    fa04:	movs	r1, #25
    fa06:	ldr	r2, [r5, #32]
    fa08:	adds	r3, #96	; 0x60
    fa0a:	mla	r2, r1, r2, r3
    fa0e:	ldr.w	r2, [r2, #118]	; 0x76
    fa12:	adds	r2, #101	; 0x65
    fa14:	add	r3, r2
    fa16:	ldr	r2, [r3, #40]	; 0x28
    fa18:	adds	r2, #1
    fa1a:	str	r2, [r3, #40]	; 0x28
    fa1c:	ldr	r0, [r5, #0]
    fa1e:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    fa22:	mov	r0, r5
    fa24:	bl	17e58 <btrfs_release_path@@Base>
    fa28:	b.n	f8e2 <btrfs_add_link@@Base+0x1b2>
    fa2a:	mvn.w	fp, #11
    fa2e:	b.n	f7a2 <btrfs_add_link@@Base+0x72>
    fa30:	movs	r3, #0
    fa32:	movs	r4, #0
    fa34:	strd	r3, r4, [sp, #24]
    fa38:	b.n	f788 <btrfs_add_link@@Base+0x58>
    fa3a:	mov	r0, fp
    fa3c:	add	sp, #92	; 0x5c
    fa3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fa42:	nop
    fa44:	ldrsb	r0, [r0, r1]
    fa46:	movs	r5, r0
    fa48:	lsls	r4, r4, #8
    fa4a:	movs	r0, r0
    fa4c:	strb	r2, [r4, r7]
    fa4e:	movs	r5, r0

0000fa50 <btrfs_add_orphan_item@@Base>:
    fa50:	push	{r4, r5, lr}
    fa52:	sub	sp, #44	; 0x2c
    fa54:	ldr	r4, [pc, #84]	; (faac <btrfs_add_orphan_item@@Base+0x5c>)
    fa56:	mov.w	r5, #4294967295	; 0xffffffff
    fa5a:	ldr	r3, [pc, #84]	; (fab0 <btrfs_add_orphan_item@@Base+0x60>)
    fa5c:	add	r4, pc
    fa5e:	ldr	r3, [r4, r3]
    fa60:	mvn.w	r4, #4
    fa64:	ldr	r3, [r3, #0]
    fa66:	str	r3, [sp, #36]	; 0x24
    fa68:	mov.w	r3, #0
    fa6c:	movs	r3, #48	; 0x30
    fa6e:	strb.w	r3, [sp, #24]
    fa72:	ldr	r3, [sp, #56]	; 0x38
    fa74:	strd	r4, r5, [sp, #16]
    fa78:	str.w	r3, [sp, #25]
    fa7c:	ldr	r3, [sp, #60]	; 0x3c
    fa7e:	str.w	r3, [sp, #29]
    fa82:	movs	r3, #0
    fa84:	str	r3, [sp, #12]
    fa86:	movs	r3, #1
    fa88:	str	r3, [sp, #4]
    fa8a:	add	r3, sp, #12
    fa8c:	str	r3, [sp, #0]
    fa8e:	add	r3, sp, #16
    fa90:	bl	1b00c <btrfs_insert_empty_items@@Base>
    fa94:	ldr	r2, [pc, #28]	; (fab4 <btrfs_add_orphan_item@@Base+0x64>)
    fa96:	ldr	r3, [pc, #24]	; (fab0 <btrfs_add_orphan_item@@Base+0x60>)
    fa98:	add	r2, pc
    fa9a:	ldr	r3, [r2, r3]
    fa9c:	ldr	r2, [r3, #0]
    fa9e:	ldr	r3, [sp, #36]	; 0x24
    faa0:	eors	r2, r3
    faa2:	beq.n	faa8 <btrfs_add_orphan_item@@Base+0x58>
    faa4:	blx	84cc <__stack_chk_fail@plt>
    faa8:	add	sp, #44	; 0x2c
    faaa:	pop	{r4, r5, pc}
    faac:	strh	r4, [r5, r4]
    faae:	movs	r5, r0
    fab0:	lsls	r4, r4, #8
    fab2:	movs	r0, r0
    fab4:	strh	r0, [r6, r3]
    fab6:	movs	r5, r0

0000fab8 <btrfs_unlink@@Base>:
    fab8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fabc:	sub	sp, #76	; 0x4c
    fabe:	mov	r6, r0
    fac0:	mov	sl, r1
    fac2:	strd	r2, r3, [sp, #40]	; 0x28
    fac6:	ldr	r2, [pc, #896]	; (fe48 <btrfs_unlink@@Base+0x390>)
    fac8:	ldr	r3, [pc, #896]	; (fe4c <btrfs_unlink@@Base+0x394>)
    faca:	add	r2, pc
    facc:	ldrd	r7, r5, [sp, #128]	; 0x80
    fad0:	ldr	r3, [r2, r3]
    fad2:	ldr	r3, [r3, #0]
    fad4:	str	r3, [sp, #68]	; 0x44
    fad6:	mov.w	r3, #0
    fada:	bl	17e50 <btrfs_alloc_path@@Base>
    fade:	mov	r4, r0
    fae0:	cmp	r0, #0
    fae2:	beq.w	fe2e <btrfs_unlink@@Base+0x376>
    fae6:	ldrd	r2, r3, [sp, #112]	; 0x70
    faea:	mov.w	r9, #0
    faee:	mov	r1, sl
    faf0:	str.w	r9, [sp, #24]
    faf4:	str	r5, [sp, #0]
    faf6:	strd	r2, r3, [sp, #16]
    fafa:	mov	r2, r0
    fafc:	ldr	r3, [sp, #40]	; 0x28
    fafe:	mov	r0, r6
    fb00:	str	r3, [sp, #8]
    fb02:	ldr	r3, [sp, #44]	; 0x2c
    fb04:	str	r3, [sp, #12]
    fb06:	mov	r3, r7
    fb08:	bl	2d8e8 <btrfs_lookup_inode_ref@@Base>
    fb0c:	cmn.w	r0, #4096	; 0x1000
    fb10:	mov	fp, r0
    fb12:	bhi.n	fbf0 <btrfs_unlink@@Base+0x138>
    fb14:	mov	r0, r4
    fb16:	bl	17e58 <btrfs_release_path@@Base>
    fb1a:	ldrd	r2, r3, [sp, #112]	; 0x70
    fb1e:	mov	r1, sl
    fb20:	mov	r0, r9
    fb22:	strd	r5, r9, [sp, #12]
    fb26:	strd	r2, r3, [sp]
    fb2a:	mov	r2, r4
    fb2c:	str	r7, [sp, #8]
    fb2e:	bl	9dec <btrfs_lookup_dir_item@@Base>
    fb32:	cmn.w	r0, #4096	; 0x1000
    fb36:	mov	r3, r0
    fb38:	str	r0, [sp, #36]	; 0x24
    fb3a:	bls.n	fb40 <btrfs_unlink@@Base+0x88>
    fb3c:	mov	fp, r3
    fb3e:	b.n	fbf0 <btrfs_unlink@@Base+0x138>
    fb40:	mov	r0, r4
    fb42:	bl	17e58 <btrfs_release_path@@Base>
    fb46:	ldrd	r2, r3, [sp, #120]	; 0x78
    fb4a:	mov	r1, sl
    fb4c:	mov	r0, r9
    fb4e:	str.w	r9, [sp, #24]
    fb52:	strd	r2, r3, [sp, #16]
    fb56:	ldrd	r2, r3, [sp, #112]	; 0x70
    fb5a:	strd	r7, r5, [sp, #8]
    fb5e:	strd	r2, r3, [sp]
    fb62:	mov	r2, r4
    fb64:	bl	9ed4 <btrfs_lookup_dir_index@@Base>
    fb68:	cmn.w	r0, #4096	; 0x1000
    fb6c:	mov	r8, r0
    fb6e:	bls.n	fb78 <btrfs_unlink@@Base+0xc0>
    fb70:	cmn.w	r0, #2
    fb74:	bne.n	fbe8 <btrfs_unlink@@Base+0x130>
    fb76:	mov	r8, r9
    fb78:	ldr	r3, [sp, #36]	; 0x24
    fb7a:	mov	r0, r4
    fb7c:	orr.w	r9, fp, r3
    fb80:	orr.w	r9, r8, r9
    fb84:	bl	17e58 <btrfs_release_path@@Base>
    fb88:	cmp.w	r9, #0
    fb8c:	beq.n	fbe2 <btrfs_unlink@@Base+0x12a>
    fb8e:	cmp.w	fp, #0
    fb92:	beq.w	fe34 <btrfs_unlink@@Base+0x37c>
    fb96:	ldr	r3, [sp, #40]	; 0x28
    fb98:	movs	r2, #0
    fb9a:	movs	r1, #1
    fb9c:	strb.w	r2, [sp, #57]	; 0x39
    fba0:	strb.w	r1, [sp, #56]	; 0x38
    fba4:	mov	r0, r6
    fba6:	str	r3, [sp, #48]	; 0x30
    fba8:	ldr	r3, [sp, #44]	; 0x2c
    fbaa:	strb.w	r2, [sp, #58]	; 0x3a
    fbae:	strb.w	r2, [sp, #59]	; 0x3b
    fbb2:	str	r3, [sp, #52]	; 0x34
    fbb4:	mov.w	r3, #4294967295	; 0xffffffff
    fbb8:	strb.w	r2, [sp, #60]	; 0x3c
    fbbc:	strb.w	r2, [sp, #61]	; 0x3d
    fbc0:	strb.w	r2, [sp, #62]	; 0x3e
    fbc4:	strb.w	r2, [sp, #63]	; 0x3f
    fbc8:	strb.w	r2, [sp, #64]	; 0x40
    fbcc:	add	r2, sp, #48	; 0x30
    fbce:	str	r1, [sp, #4]
    fbd0:	mov	r1, sl
    fbd2:	str	r3, [sp, #0]
    fbd4:	mov	r3, r4
    fbd6:	bl	1a23c <btrfs_search_slot@@Base>
    fbda:	subs.w	fp, r0, #0
    fbde:	beq.n	fc0c <btrfs_unlink@@Base+0x154>
    fbe0:	ble.n	fbf0 <btrfs_unlink@@Base+0x138>
    fbe2:	mvn.w	fp, #1
    fbe6:	b.n	fbf0 <btrfs_unlink@@Base+0x138>
    fbe8:	cmn.w	r0, #4096	; 0x1000
    fbec:	bls.n	fb78 <btrfs_unlink@@Base+0xc0>
    fbee:	mov	fp, r0
    fbf0:	mov	r0, r4
    fbf2:	bl	17e7e <btrfs_free_path@@Base>
    fbf6:	ldr	r2, [pc, #600]	; (fe50 <btrfs_unlink@@Base+0x398>)
    fbf8:	ldr	r3, [pc, #592]	; (fe4c <btrfs_unlink@@Base+0x394>)
    fbfa:	add	r2, pc
    fbfc:	ldr	r3, [r2, r3]
    fbfe:	ldr	r2, [r3, #0]
    fc00:	ldr	r3, [sp, #68]	; 0x44
    fc02:	eors	r2, r3
    fc04:	beq.w	fe3e <btrfs_unlink@@Base+0x386>
    fc08:	blx	84cc <__stack_chk_fail@plt>
    fc0c:	ldr	r3, [r4, #0]
    fc0e:	movs	r1, #25
    fc10:	ldr	r2, [r4, #32]
    fc12:	adds	r3, #96	; 0x60
    fc14:	mla	r2, r1, r2, r3
    fc18:	ldr.w	r2, [r2, #118]	; 0x76
    fc1c:	adds	r2, #101	; 0x65
    fc1e:	add	r3, r2
    fc20:	ldr.w	r9, [r3, #40]	; 0x28
    fc24:	cmp.w	r9, #0
    fc28:	beq.n	fc2e <btrfs_unlink@@Base+0x176>
    fc2a:	add.w	r9, r9, #4294967295	; 0xffffffff
    fc2e:	str.w	r9, [r3, #40]	; 0x28
    fc32:	ldr	r0, [r4, #0]
    fc34:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    fc38:	mov	r0, r4
    fc3a:	bl	17e58 <btrfs_release_path@@Base>
    fc3e:	cmp.w	r9, #0
    fc42:	bne.n	fc6c <btrfs_unlink@@Base+0x1b4>
    fc44:	ldr	r3, [sp, #136]	; 0x88
    fc46:	cbz	r3, fc6c <btrfs_unlink@@Base+0x1b4>
    fc48:	ldr	r3, [sp, #40]	; 0x28
    fc4a:	mov	r2, r4
    fc4c:	mov	r1, sl
    fc4e:	mov	r0, r6
    fc50:	str	r3, [sp, #0]
    fc52:	ldr	r3, [sp, #44]	; 0x2c
    fc54:	str	r3, [sp, #4]
    fc56:	bl	fa50 <btrfs_add_orphan_item@@Base>
    fc5a:	subs.w	fp, r0, #0
    fc5e:	blt.n	fbf0 <btrfs_unlink@@Base+0x138>
    fc60:	ldr	r0, [r4, #0]
    fc62:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    fc66:	mov	r0, r4
    fc68:	bl	17e58 <btrfs_release_path@@Base>
    fc6c:	add	r3, sp, #120	; 0x78
    fc6e:	str	r3, [sp, #16]
    fc70:	ldrd	r2, r3, [sp, #112]	; 0x70
    fc74:	mov	r1, sl
    fc76:	mov	r0, r6
    fc78:	strd	r2, r3, [sp, #8]
    fc7c:	mov	r2, r7
    fc7e:	ldr	r3, [sp, #40]	; 0x28
    fc80:	str	r3, [sp, #0]
    fc82:	ldr	r3, [sp, #44]	; 0x2c
    fc84:	str	r3, [sp, #4]
    fc86:	mov	r3, r5
    fc88:	bl	2de50 <btrfs_del_inode_ref@@Base>
    fc8c:	subs.w	fp, r0, #0
    fc90:	blt.n	fbf0 <btrfs_unlink@@Base+0x138>
    fc92:	cmp.w	r8, #0
    fc96:	beq.n	fd60 <btrfs_unlink@@Base+0x2a8>
    fc98:	mov.w	r3, #4294967295	; 0xffffffff
    fc9c:	str	r3, [sp, #24]
    fc9e:	ldrd	r2, r3, [sp, #120]	; 0x78
    fca2:	mov	r1, sl
    fca4:	mov	r0, r6
    fca6:	strd	r7, r5, [sp, #8]
    fcaa:	strd	r2, r3, [sp, #16]
    fcae:	ldrd	r2, r3, [sp, #112]	; 0x70
    fcb2:	strd	r2, r3, [sp]
    fcb6:	mov	r2, r4
    fcb8:	bl	9ed4 <btrfs_lookup_dir_index@@Base>
    fcbc:	cmn.w	r0, #4096	; 0x1000
    fcc0:	mov	r3, r0
    fcc2:	bhi.w	fb3c <btrfs_unlink@@Base+0x84>
    fcc6:	cmp	r0, #0
    fcc8:	beq.n	fbe2 <btrfs_unlink@@Base+0x12a>
    fcca:	mov	r2, r4
    fccc:	mov	r1, sl
    fcce:	mov	r0, r6
    fcd0:	bl	980c <btrfs_delete_one_dir_name@@Base>
    fcd4:	mov	fp, r0
    fcd6:	cmp	r0, #0
    fcd8:	bne.n	fbf0 <btrfs_unlink@@Base+0x138>
    fcda:	mov	r0, r4
    fcdc:	bl	17e58 <btrfs_release_path@@Base>
    fce0:	ldrd	r2, r3, [sp, #112]	; 0x70
    fce4:	mov	r1, sl
    fce6:	mov	r0, r6
    fce8:	strb.w	fp, [sp, #57]	; 0x39
    fcec:	strd	r2, r3, [sp, #48]	; 0x30
    fcf0:	movs	r2, #1
    fcf2:	mov	r3, r4
    fcf4:	strb.w	r2, [sp, #56]	; 0x38
    fcf8:	strd	r2, r2, [sp]
    fcfc:	add	r2, sp, #48	; 0x30
    fcfe:	strb.w	fp, [sp, #58]	; 0x3a
    fd02:	strb.w	fp, [sp, #59]	; 0x3b
    fd06:	strb.w	fp, [sp, #60]	; 0x3c
    fd0a:	strb.w	fp, [sp, #61]	; 0x3d
    fd0e:	strb.w	fp, [sp, #62]	; 0x3e
    fd12:	strb.w	fp, [sp, #63]	; 0x3f
    fd16:	strb.w	fp, [sp, #64]	; 0x40
    fd1a:	bl	1a23c <btrfs_search_slot@@Base>
    fd1e:	mov	fp, r0
    fd20:	cmp	r0, #0
    fd22:	bne.w	fbf0 <btrfs_unlink@@Base+0x138>
    fd26:	ldr	r1, [r4, #0]
    fd28:	movs	r2, #25
    fd2a:	ldr	r3, [r4, #32]
    fd2c:	mov.w	r9, r5, asr #31
    fd30:	adds	r1, #96	; 0x60
    fd32:	mla	r3, r2, r3, r1
    fd36:	ldr.w	r3, [r3, #118]	; 0x76
    fd3a:	adds	r3, #101	; 0x65
    fd3c:	add	r1, r3
    fd3e:	ldr	r3, [r1, #20]
    fd40:	ldr	r2, [r1, #16]
    fd42:	cmp	r3, r9
    fd44:	it	eq
    fd46:	cmpeq	r2, r5
    fd48:	bcc.n	fd50 <btrfs_unlink@@Base+0x298>
    fd4a:	subs	r2, r2, r5
    fd4c:	sbc.w	r3, r3, r9
    fd50:	str	r2, [r1, #16]
    fd52:	str	r3, [r1, #20]
    fd54:	ldr	r0, [r4, #0]
    fd56:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    fd5a:	mov	r0, r4
    fd5c:	bl	17e58 <btrfs_release_path@@Base>
    fd60:	ldr	r3, [sp, #36]	; 0x24
    fd62:	cmp	r3, #0
    fd64:	beq.w	fbf0 <btrfs_unlink@@Base+0x138>
    fd68:	mov.w	r3, #4294967295	; 0xffffffff
    fd6c:	strd	r5, r3, [sp, #12]
    fd70:	ldrd	r2, r3, [sp, #112]	; 0x70
    fd74:	mov	r1, sl
    fd76:	mov	r0, r6
    fd78:	str	r7, [sp, #8]
    fd7a:	strd	r2, r3, [sp]
    fd7e:	mov	r2, r4
    fd80:	bl	9dec <btrfs_lookup_dir_item@@Base>
    fd84:	cmn.w	r0, #4096	; 0x1000
    fd88:	mov	r3, r0
    fd8a:	bhi.w	fb3c <btrfs_unlink@@Base+0x84>
    fd8e:	cmp	r0, #0
    fd90:	beq.w	fbe2 <btrfs_unlink@@Base+0x12a>
    fd94:	mov	r2, r4
    fd96:	mov	r1, sl
    fd98:	mov	r0, r6
    fd9a:	bl	980c <btrfs_delete_one_dir_name@@Base>
    fd9e:	subs.w	fp, r0, #0
    fda2:	blt.w	fbf0 <btrfs_unlink@@Base+0x138>
    fda6:	mov	r0, r4
    fda8:	bl	17e58 <btrfs_release_path@@Base>
    fdac:	ldrd	r2, r3, [sp, #112]	; 0x70
    fdb0:	movs	r1, #1
    fdb2:	mov	r0, r6
    fdb4:	strb.w	r1, [sp, #56]	; 0x38
    fdb8:	strd	r2, r3, [sp, #48]	; 0x30
    fdbc:	movs	r2, #0
    fdbe:	strd	r1, r1, [sp]
    fdc2:	mov	r3, r4
    fdc4:	strb.w	r2, [sp, #57]	; 0x39
    fdc8:	mov	r1, sl
    fdca:	strb.w	r2, [sp, #58]	; 0x3a
    fdce:	strb.w	r2, [sp, #59]	; 0x3b
    fdd2:	strb.w	r2, [sp, #60]	; 0x3c
    fdd6:	strb.w	r2, [sp, #61]	; 0x3d
    fdda:	strb.w	r2, [sp, #62]	; 0x3e
    fdde:	strb.w	r2, [sp, #63]	; 0x3f
    fde2:	strb.w	r2, [sp, #64]	; 0x40
    fde6:	add	r2, sp, #48	; 0x30
    fde8:	bl	1a23c <btrfs_search_slot@@Base>
    fdec:	mov	fp, r0
    fdee:	cmp	r0, #0
    fdf0:	bne.w	fbf0 <btrfs_unlink@@Base+0x138>
    fdf4:	ldr	r1, [r4, #0]
    fdf6:	movs	r2, #25
    fdf8:	ldr	r3, [r4, #32]
    fdfa:	asrs	r7, r5, #31
    fdfc:	adds	r1, #96	; 0x60
    fdfe:	mla	r3, r2, r3, r1
    fe02:	ldr.w	r3, [r3, #118]	; 0x76
    fe06:	adds	r3, #101	; 0x65
    fe08:	add	r1, r3
    fe0a:	ldr	r3, [r1, #20]
    fe0c:	ldr	r2, [r1, #16]
    fe0e:	cmp	r3, r7
    fe10:	it	eq
    fe12:	cmpeq	r2, r5
    fe14:	bcc.n	fe1c <btrfs_unlink@@Base+0x364>
    fe16:	subs	r2, r2, r5
    fe18:	sbc.w	r3, r3, r7
    fe1c:	str	r2, [r1, #16]
    fe1e:	str	r3, [r1, #20]
    fe20:	ldr	r0, [r4, #0]
    fe22:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    fe26:	mov	r0, r4
    fe28:	bl	17e58 <btrfs_release_path@@Base>
    fe2c:	b.n	fbf0 <btrfs_unlink@@Base+0x138>
    fe2e:	mvn.w	fp, #11
    fe32:	b.n	fbf6 <btrfs_unlink@@Base+0x13e>
    fe34:	cmp.w	r8, #0
    fe38:	bne.w	fc98 <btrfs_unlink@@Base+0x1e0>
    fe3c:	b.n	fd68 <btrfs_unlink@@Base+0x2b0>
    fe3e:	mov	r0, fp
    fe40:	add	sp, #76	; 0x4c
    fe42:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fe46:	nop
    fe48:	strh	r6, [r7, r2]
    fe4a:	movs	r5, r0
    fe4c:	lsls	r4, r4, #8
    fe4e:	movs	r0, r0
    fe50:	str	r6, [r1, r6]
    fe52:	movs	r5, r0

0000fe54 <btrfs_new_inode@@Base>:
    fe54:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    fe58:	mov	r9, r2
    fe5a:	ldr	r2, [pc, #124]	; (fed8 <btrfs_new_inode@@Base+0x84>)
    fe5c:	mov	r8, r3
    fe5e:	ldr	r3, [pc, #124]	; (fedc <btrfs_new_inode@@Base+0x88>)
    fe60:	sub	sp, #180	; 0xb4
    fe62:	add	r2, pc
    fe64:	add	r6, sp, #12
    fe66:	mov	r5, r0
    fe68:	mov	r7, r1
    fe6a:	ldr	r3, [r2, r3]
    fe6c:	movs	r1, #0
    fe6e:	mov	r0, r6
    fe70:	movs	r2, #160	; 0xa0
    fe72:	ldr	r3, [r3, #0]
    fe74:	str	r3, [sp, #172]	; 0xac
    fe76:	mov.w	r3, #0
    fe7a:	blx	8780 <memset@plt+0x4>
    fe7e:	movs	r0, #0
    fe80:	movs	r4, #0
    fe82:	blx	8454 <time@plt>
    fe86:	ldr	r3, [r5, #8]
    fe88:	mov	r2, r9
    fe8a:	mov	r1, r7
    fe8c:	str	r6, [sp, #0]
    fe8e:	str	r3, [sp, #12]
    fe90:	ldr	r3, [r5, #12]
    fe92:	strd	r4, r4, [sp, #56]	; 0x38
    fe96:	strd	r4, r4, [sp, #28]
    fe9a:	str	r3, [sp, #16]
    fe9c:	ldr	r3, [sp, #208]	; 0xd0
    fe9e:	str	r4, [sp, #52]	; 0x34
    fea0:	str	r4, [sp, #132]	; 0x84
    fea2:	str	r3, [sp, #64]	; 0x40
    fea4:	str	r4, [sp, #156]	; 0x9c
    fea6:	str	r4, [sp, #144]	; 0x90
    fea8:	asrs	r3, r0, #31
    feaa:	strd	r0, r3, [sp, #124]	; 0x7c
    feae:	strd	r0, r3, [sp, #148]	; 0x94
    feb2:	strd	r0, r3, [sp, #136]	; 0x88
    feb6:	mov	r3, r8
    feb8:	mov	r0, r5
    feba:	bl	2d86c <btrfs_insert_inode@@Base>
    febe:	ldr	r2, [pc, #32]	; (fee0 <btrfs_new_inode@@Base+0x8c>)
    fec0:	ldr	r3, [pc, #24]	; (fedc <btrfs_new_inode@@Base+0x88>)
    fec2:	add	r2, pc
    fec4:	ldr	r3, [r2, r3]
    fec6:	ldr	r2, [r3, #0]
    fec8:	ldr	r3, [sp, #172]	; 0xac
    feca:	eors	r2, r3
    fecc:	beq.n	fed2 <btrfs_new_inode@@Base+0x7e>
    fece:	blx	84cc <__stack_chk_fail@plt>
    fed2:	add	sp, #180	; 0xb4
    fed4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    fed8:	ldr	r7, [pc, #152]	; (ff74 <btrfs_change_inode_flags@@Base+0x90>)
    feda:	movs	r5, r0
    fedc:	lsls	r4, r4, #8
    fede:	movs	r0, r0
    fee0:	ldr	r6, [pc, #792]	; (101fc <btrfs_mksubvol@@Base+0x120>)
    fee2:	movs	r5, r0

0000fee4 <btrfs_change_inode_flags@@Base>:
    fee4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    fee8:	mov	r9, r2
    feea:	ldr	r2, [pc, #180]	; (ffa0 <btrfs_change_inode_flags@@Base+0xbc>)
    feec:	mov	r4, r3
    feee:	ldr	r3, [pc, #180]	; (ffa4 <btrfs_change_inode_flags@@Base+0xc0>)
    fef0:	sub	sp, #44	; 0x2c
    fef2:	add	r2, pc
    fef4:	mov	r8, r0
    fef6:	str	r1, [sp, #12]
    fef8:	ldr	r3, [r2, r3]
    fefa:	ldrd	r7, r6, [sp, #72]	; 0x48
    fefe:	ldr	r3, [r3, #0]
    ff00:	str	r3, [sp, #36]	; 0x24
    ff02:	mov.w	r3, #0
    ff06:	bl	17e50 <btrfs_alloc_path@@Base>
    ff0a:	mov	r5, r0
    ff0c:	cmp	r0, #0
    ff0e:	beq.n	ff92 <btrfs_change_inode_flags@@Base+0xae>
    ff10:	movs	r2, #0
    ff12:	movs	r3, #1
    ff14:	strb.w	r2, [sp, #25]
    ff18:	strd	r2, r3, [sp]
    ff1c:	strb.w	r3, [sp, #24]
    ff20:	mov	r3, r0
    ff22:	strb.w	r2, [sp, #26]
    ff26:	mov	r0, r8
    ff28:	strb.w	r2, [sp, #27]
    ff2c:	strb.w	r2, [sp, #28]
    ff30:	strb.w	r2, [sp, #29]
    ff34:	strb.w	r2, [sp, #30]
    ff38:	strb.w	r2, [sp, #31]
    ff3c:	strb.w	r2, [sp, #32]
    ff40:	add	r2, sp, #16
    ff42:	ldr	r1, [sp, #12]
    ff44:	strd	r9, r4, [sp, #16]
    ff48:	bl	1a23c <btrfs_search_slot@@Base>
    ff4c:	subs	r4, r0, #0
    ff4e:	bgt.n	ff8c <btrfs_change_inode_flags@@Base+0xa8>
    ff50:	bne.n	ff72 <btrfs_change_inode_flags@@Base+0x8e>
    ff52:	ldr	r3, [r5, #0]
    ff54:	movs	r1, #25
    ff56:	ldr	r2, [r5, #32]
    ff58:	adds	r3, #96	; 0x60
    ff5a:	mla	r2, r1, r2, r3
    ff5e:	ldr.w	r2, [r2, #118]	; 0x76
    ff62:	add	r3, r2
    ff64:	str.w	r7, [r3, #165]	; 0xa5
    ff68:	str.w	r6, [r3, #169]	; 0xa9
    ff6c:	ldr	r0, [r5, #0]
    ff6e:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
    ff72:	mov	r0, r5
    ff74:	bl	17e7e <btrfs_free_path@@Base>
    ff78:	ldr	r2, [pc, #44]	; (ffa8 <btrfs_change_inode_flags@@Base+0xc4>)
    ff7a:	ldr	r3, [pc, #40]	; (ffa4 <btrfs_change_inode_flags@@Base+0xc0>)
    ff7c:	add	r2, pc
    ff7e:	ldr	r3, [r2, r3]
    ff80:	ldr	r2, [r3, #0]
    ff82:	ldr	r3, [sp, #36]	; 0x24
    ff84:	eors	r2, r3
    ff86:	beq.n	ff98 <btrfs_change_inode_flags@@Base+0xb4>
    ff88:	blx	84cc <__stack_chk_fail@plt>
    ff8c:	mvn.w	r4, #1
    ff90:	b.n	ff72 <btrfs_change_inode_flags@@Base+0x8e>
    ff92:	mvn.w	r4, #11
    ff96:	b.n	ff78 <btrfs_change_inode_flags@@Base+0x94>
    ff98:	mov	r0, r4
    ff9a:	add	sp, #44	; 0x2c
    ff9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    ffa0:	ldr	r6, [pc, #600]	; (101fc <btrfs_mksubvol@@Base+0x120>)
    ffa2:	movs	r5, r0
    ffa4:	lsls	r4, r4, #8
    ffa6:	movs	r0, r0
    ffa8:	ldr	r6, [pc, #48]	; (ffdc <btrfs_mkdir@@Base+0x30>)
    ffaa:	movs	r5, r0

0000ffac <btrfs_mkdir@@Base>:
    ffac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ffb0:	mov	sl, r2
    ffb2:	ldr	r2, [pc, #284]	; (100d0 <btrfs_mkdir@@Base+0x124>)
    ffb4:	mov	fp, r3
    ffb6:	ldr	r3, [pc, #284]	; (100d4 <btrfs_mkdir@@Base+0x128>)
    ffb8:	sub	sp, #76	; 0x4c
    ffba:	add	r2, pc
    ffbc:	mov	r7, r0
    ffbe:	str	r1, [sp, #36]	; 0x24
    ffc0:	ldr	r3, [r2, r3]
    ffc2:	movs	r2, #0
    ffc4:	ldrd	r8, r9, [sp, #112]	; 0x70
    ffc8:	ldr	r3, [r3, #0]
    ffca:	str	r3, [sp, #68]	; 0x44
    ffcc:	mov.w	r3, #0
    ffd0:	ldr	r6, [sp, #120]	; 0x78
    ffd2:	movs	r3, #0
    ffd4:	strd	r2, r3, [sp, #40]	; 0x28
    ffd8:	bl	17e50 <btrfs_alloc_path@@Base>
    ffdc:	mov	r5, r0
    ffde:	cmp	r0, #0
    ffe0:	beq.n	100c2 <btrfs_mkdir@@Base+0x116>
    ffe2:	ldr	r1, [sp, #36]	; 0x24
    ffe4:	cbz	r6, fff4 <btrfs_mkdir@@Base+0x48>
    ffe6:	ldrd	r2, r3, [r6]
    ffea:	orrs.w	r0, r2, r3
    ffee:	it	ne
    fff0:	strdne	r2, r3, [sp, #40]	; 0x28
    fff4:	movs	r0, #0
    fff6:	mov	r2, r5
    fff8:	strd	fp, r0, [sp, #12]
    fffc:	str.w	sl, [sp, #8]
   10000:	strd	r8, r9, [sp]
   10004:	str	r1, [sp, #36]	; 0x24
   10006:	bl	9dec <btrfs_lookup_dir_item@@Base>
   1000a:	ldr	r1, [sp, #36]	; 0x24
   1000c:	cmn.w	r0, #4096	; 0x1000
   10010:	mov	r4, r0
   10012:	bhi.n	1003c <btrfs_mkdir@@Base+0x90>
   10014:	cbz	r0, 10062 <btrfs_mkdir@@Base+0xb6>
   10016:	mov	r2, r0
   10018:	movs	r3, #17
   1001a:	ldr	r0, [r5, #0]
   1001c:	add	r1, sp, #48	; 0x30
   1001e:	bl	1731a <read_extent_buffer@@Base>
   10022:	ldrd	r2, r3, [sp, #48]	; 0x30
   10026:	strd	r2, r3, [sp, #40]	; 0x28
   1002a:	ldr	r2, [r5, #0]
   1002c:	add	r4, r2
   1002e:	ldrb.w	r3, [r4, #125]	; 0x7d
   10032:	cmp	r3, #2
   10034:	ite	eq
   10036:	moveq	r4, #0
   10038:	mvnne.w	r4, #16
   1003c:	mov	r0, r5
   1003e:	bl	17e7e <btrfs_free_path@@Base>
   10042:	cbnz	r4, 1004e <btrfs_mkdir@@Base+0xa2>
   10044:	cbz	r6, 1004e <btrfs_mkdir@@Base+0xa2>
   10046:	ldrd	r2, r3, [sp, #40]	; 0x28
   1004a:	strd	r2, r3, [r6]
   1004e:	ldr	r2, [pc, #136]	; (100d8 <btrfs_mkdir@@Base+0x12c>)
   10050:	ldr	r3, [pc, #128]	; (100d4 <btrfs_mkdir@@Base+0x128>)
   10052:	add	r2, pc
   10054:	ldr	r3, [r2, r3]
   10056:	ldr	r2, [r3, #0]
   10058:	ldr	r3, [sp, #68]	; 0x44
   1005a:	eors	r2, r3
   1005c:	beq.n	100c8 <btrfs_mkdir@@Base+0x11c>
   1005e:	blx	84cc <__stack_chk_fail@plt>
   10062:	ldrd	r2, r3, [sp, #40]	; 0x28
   10066:	orrs	r3, r2
   10068:	beq.n	100aa <btrfs_mkdir@@Base+0xfe>
   1006a:	ldr	r3, [sp, #124]	; 0x7c
   1006c:	mov	r0, r7
   1006e:	str	r1, [sp, #36]	; 0x24
   10070:	orr.w	r3, r3, #16384	; 0x4000
   10074:	str	r3, [sp, #0]
   10076:	ldrd	r2, r3, [sp, #40]	; 0x28
   1007a:	bl	fe54 <btrfs_new_inode@@Base>
   1007e:	mov	r4, r0
   10080:	cmp	r0, #0
   10082:	bne.n	1003c <btrfs_mkdir@@Base+0x90>
   10084:	movs	r3, #1
   10086:	str	r0, [sp, #28]
   10088:	strd	r0, r3, [sp, #20]
   1008c:	movs	r3, #2
   1008e:	ldr	r1, [sp, #36]	; 0x24
   10090:	mov	r0, r7
   10092:	strd	fp, r3, [sp, #12]
   10096:	str.w	sl, [sp, #8]
   1009a:	ldrd	r2, r3, [sp, #40]	; 0x28
   1009e:	strd	r8, r9, [sp]
   100a2:	bl	f730 <btrfs_add_link@@Base>
   100a6:	mov	r4, r0
   100a8:	b.n	1003c <btrfs_mkdir@@Base+0x90>
   100aa:	add	r3, sp, #40	; 0x28
   100ac:	mov	r2, r8
   100ae:	str	r3, [sp, #0]
   100b0:	mov	r3, r9
   100b2:	str	r1, [sp, #36]	; 0x24
   100b4:	bl	9f64 <btrfs_find_free_objectid@@Base>
   100b8:	ldr	r1, [sp, #36]	; 0x24
   100ba:	mov	r4, r0
   100bc:	cmp	r0, #0
   100be:	beq.n	1006a <btrfs_mkdir@@Base+0xbe>
   100c0:	b.n	1003c <btrfs_mkdir@@Base+0x90>
   100c2:	mvn.w	r4, #11
   100c6:	b.n	1004e <btrfs_mkdir@@Base+0xa2>
   100c8:	mov	r0, r4
   100ca:	add	sp, #76	; 0x4c
   100cc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   100d0:	ldr	r5, [pc, #824]	; (1040c <btrfs_mksubvol@@Base+0x330>)
   100d2:	movs	r5, r0
   100d4:	lsls	r4, r4, #8
   100d6:	movs	r0, r0
   100d8:	ldr	r5, [pc, #216]	; (101b4 <btrfs_mksubvol@@Base+0xd8>)
   100da:	movs	r5, r0

000100dc <btrfs_mksubvol@@Base>:
   100dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   100e0:	mov	r5, r0
   100e2:	vpush	{d8}
   100e6:	mov	r0, r1
   100e8:	vmov	s16, r1
   100ec:	sub	sp, #436	; 0x1b4
   100ee:	strd	r2, r3, [sp, #56]	; 0x38
   100f2:	ldrb.w	r3, [sp, #480]	; 0x1e0
   100f6:	ldr	r2, [pc, #808]	; (10420 <btrfs_mksubvol@@Base+0x344>)
   100f8:	str	r3, [sp, #76]	; 0x4c
   100fa:	add	r2, pc
   100fc:	ldr	r3, [pc, #804]	; (10424 <btrfs_mksubvol@@Base+0x348>)
   100fe:	ldr	r3, [r2, r3]
   10100:	ldr	r3, [r3, #0]
   10102:	str	r3, [sp, #428]	; 0x1ac
   10104:	mov.w	r3, #0
   10108:	blx	8704 <strlen@plt>
   1010c:	mov	r4, r0
   1010e:	str	r0, [sp, #40]	; 0x28
   10110:	cmp	r0, #0
   10112:	beq.w	1040e <btrfs_mksubvol@@Base+0x332>
   10116:	cmp	r0, #255	; 0xff
   10118:	bgt.w	1040e <btrfs_mksubvol@@Base+0x332>
   1011c:	ldr.w	r3, [r5, #464]	; 0x1d0
   10120:	add.w	r8, sp, #104	; 0x68
   10124:	ldr.w	r9, [r5, #176]	; 0xb0
   10128:	add	r6, sp, #84	; 0x54
   1012a:	ldr.w	sl, [r5, #180]	; 0xb4
   1012e:	mov	r0, r8
   10130:	str	r3, [sp, #64]	; 0x40
   10132:	movs	r7, #0
   10134:	ldr	r3, [r3, #28]
   10136:	vmov	s17, r3
   1013a:	bl	17e48 <btrfs_init_path@@Base>
   1013e:	mov.w	r2, #4294967295	; 0xffffffff
   10142:	movs	r3, #96	; 0x60
   10144:	strd	r9, sl, [r6]
   10148:	mov	r1, r5
   1014a:	strb	r3, [r6, #8]
   1014c:	mov	r0, r7
   1014e:	strb.w	r2, [sp, #93]	; 0x5d
   10152:	mov	r3, r8
   10154:	strb.w	r2, [sp, #94]	; 0x5e
   10158:	strb.w	r2, [sp, #95]	; 0x5f
   1015c:	strb.w	r2, [sp, #96]	; 0x60
   10160:	strb.w	r2, [sp, #97]	; 0x61
   10164:	strb.w	r2, [sp, #98]	; 0x62
   10168:	strb.w	r2, [sp, #99]	; 0x63
   1016c:	strb.w	r2, [sp, #100]	; 0x64
   10170:	mov	r2, r6
   10172:	strd	r7, r7, [sp]
   10176:	bl	1a23c <btrfs_search_slot@@Base>
   1017a:	cmp	r0, #0
   1017c:	bgt.n	101a8 <btrfs_mksubvol@@Base+0xcc>
   1017e:	str	r0, [sp, #0]
   10180:	mov	r2, r9
   10182:	ldr	r0, [pc, #676]	; (10428 <btrfs_mksubvol@@Base+0x34c>)
   10184:	mov	r3, sl
   10186:	add	r0, pc
   10188:	bl	1747c <__btrfs_error@@Base>
   1018c:	add	r0, sp, #104	; 0x68
   1018e:	bl	17e48 <btrfs_init_path@@Base>
   10192:	ldr	r2, [pc, #664]	; (1042c <btrfs_mksubvol@@Base+0x350>)
   10194:	ldr	r3, [pc, #652]	; (10424 <btrfs_mksubvol@@Base+0x348>)
   10196:	add	r2, pc
   10198:	ldr	r3, [r2, r3]
   1019a:	ldr	r2, [r3, #0]
   1019c:	ldr	r3, [sp, #428]	; 0x1ac
   1019e:	eors	r2, r3
   101a0:	beq.w	10412 <btrfs_mksubvol@@Base+0x336>
   101a4:	blx	84cc <__stack_chk_fail@plt>
   101a8:	ldr.w	r2, [r8, #32]
   101ac:	cmp	r2, #0
   101ae:	bgt.n	101e0 <btrfs_mksubvol@@Base+0x104>
   101b0:	movs	r3, #2
   101b2:	str	r3, [sp, #48]	; 0x30
   101b4:	movs	r3, #0
   101b6:	add	r2, sp, #104	; 0x68
   101b8:	str	r3, [sp, #52]	; 0x34
   101ba:	str	r2, [sp, #44]	; 0x2c
   101bc:	mov	r0, r2
   101be:	bl	17e58 <btrfs_release_path@@Base>
   101c2:	movs	r1, #1
   101c4:	mov	r0, r5
   101c6:	bl	2af7c <btrfs_start_transaction@@Base>
   101ca:	ldr	r2, [sp, #44]	; 0x2c
   101cc:	cmn.w	r0, #4096	; 0x1000
   101d0:	mov	r8, r0
   101d2:	bls.n	10214 <btrfs_mksubvol@@Base+0x138>
   101d4:	ldr	r0, [pc, #600]	; (10430 <btrfs_mksubvol@@Base+0x354>)
   101d6:	add	r0, pc
   101d8:	bl	1747c <__btrfs_error@@Base>
   101dc:	movs	r7, #0
   101de:	b.n	1018c <btrfs_mksubvol@@Base+0xb0>
   101e0:	subs	r2, #1
   101e2:	ldr.w	r0, [r8]
   101e6:	mov	r1, r6
   101e8:	str.w	r2, [r8, #32]
   101ec:	bl	f59c <task_period_stop@@Base+0x24>
   101f0:	ldrd	r2, r3, [r6]
   101f4:	cmp	r3, sl
   101f6:	it	eq
   101f8:	cmpeq	r2, r9
   101fa:	bne.n	101b0 <btrfs_mksubvol@@Base+0xd4>
   101fc:	ldrb	r3, [r6, #8]
   101fe:	cmp	r3, #96	; 0x60
   10200:	bne.n	101b0 <btrfs_mksubvol@@Base+0xd4>
   10202:	ldr.w	r3, [r6, #9]
   10206:	ldr.w	r2, [r6, #13]
   1020a:	adds	r3, #1
   1020c:	str	r3, [sp, #48]	; 0x30
   1020e:	adc.w	r3, r2, #0
   10212:	b.n	101b6 <btrfs_mksubvol@@Base+0xda>
   10214:	add.w	r6, sp, #93	; 0x5d
   10218:	add.w	fp, sp, #84	; 0x54
   1021c:	movs	r7, #0
   1021e:	movs	r3, #1
   10220:	strd	r9, sl, [fp]
   10224:	mov	r1, r5
   10226:	strb.w	r3, [fp, #8]
   1022a:	strb	r7, [r6, #0]
   1022c:	strb	r7, [r6, #1]
   1022e:	strb	r7, [r6, #2]
   10230:	strb	r7, [r6, #3]
   10232:	strb	r7, [r6, #4]
   10234:	strb	r7, [r6, #5]
   10236:	strb	r7, [r6, #6]
   10238:	strb	r7, [r6, #7]
   1023a:	str	r3, [sp, #0]
   1023c:	mov	r3, fp
   1023e:	str	r2, [sp, #68]	; 0x44
   10240:	bl	2d7c0 <btrfs_lookup_inode@@Base>
   10244:	ldr	r2, [sp, #68]	; 0x44
   10246:	str	r0, [sp, #44]	; 0x2c
   10248:	cbz	r0, 10256 <btrfs_mksubvol@@Base+0x17a>
   1024a:	str	r0, [sp, #0]
   1024c:	mov	r2, r9
   1024e:	ldr	r0, [pc, #484]	; (10434 <btrfs_mksubvol@@Base+0x358>)
   10250:	mov	r3, sl
   10252:	add	r0, pc
   10254:	b.n	10188 <btrfs_mksubvol@@Base+0xac>
   10256:	ldr	r7, [r2, #0]
   10258:	add.w	r3, r7, #96	; 0x60
   1025c:	str	r3, [sp, #68]	; 0x44
   1025e:	ldr	r1, [sp, #68]	; 0x44
   10260:	ldr	r3, [r2, #32]
   10262:	movs	r2, #25
   10264:	mla	r3, r2, r3, r1
   10268:	vmov	r1, s16
   1026c:	mov	r2, r4
   1026e:	ldr.w	r3, [r3, #118]	; 0x76
   10272:	str	r3, [sp, #72]	; 0x48
   10274:	ldr	r3, [sp, #56]	; 0x38
   10276:	str.w	r3, [fp]
   1027a:	ldr	r3, [sp, #60]	; 0x3c
   1027c:	str.w	r3, [fp, #4]
   10280:	mov.w	r3, #4294967295	; 0xffffffff
   10284:	strb	r3, [r6, #0]
   10286:	strb	r3, [r6, #1]
   10288:	strb	r3, [r6, #2]
   1028a:	strb	r3, [r6, #3]
   1028c:	strb	r3, [r6, #4]
   1028e:	strb	r3, [r6, #5]
   10290:	strb	r3, [r6, #6]
   10292:	strb	r3, [r6, #7]
   10294:	add	r6, sp, #172	; 0xac
   10296:	movs	r3, #132	; 0x84
   10298:	strb.w	r3, [fp, #8]
   1029c:	mov	r0, r6
   1029e:	mov.w	r3, #256	; 0x100
   102a2:	blx	855c <__memcpy_chk@plt>
   102a6:	ldr	r3, [sp, #76]	; 0x4c
   102a8:	cbz	r3, 1030c <btrfs_mksubvol@@Base+0x230>
   102aa:	ldr.w	fp, [pc, #396]	; 10438 <btrfs_mksubvol@@Base+0x35c>
   102ae:	mov	r4, r6
   102b0:	add	fp, pc
   102b2:	ldr	r3, [sp, #48]	; 0x30
   102b4:	mov	r2, r4
   102b6:	mov	r1, r5
   102b8:	mov	r0, r8
   102ba:	strd	r9, sl, [sp]
   102be:	str	r3, [sp, #16]
   102c0:	ldr	r3, [sp, #52]	; 0x34
   102c2:	str	r3, [sp, #20]
   102c4:	movs	r3, #2
   102c6:	str	r3, [sp, #12]
   102c8:	add	r3, sp, #84	; 0x54
   102ca:	str	r3, [sp, #8]
   102cc:	ldr	r3, [sp, #40]	; 0x28
   102ce:	bl	9c3c <btrfs_insert_dir_item@@Base>
   102d2:	cmn.w	r0, #17
   102d6:	mov	r6, r0
   102d8:	bne.n	1032c <btrfs_mksubvol@@Base+0x250>
   102da:	ldr	r3, [sp, #44]	; 0x2c
   102dc:	movs	r2, #1
   102de:	mov	r0, r4
   102e0:	str	r3, [sp, #8]
   102e2:	vmov	r3, s16
   102e6:	strd	fp, r3, [sp]
   102ea:	mov.w	r3, #256	; 0x100
   102ee:	mov	r1, r3
   102f0:	blx	8984 <__snprintf_chk@plt>
   102f4:	subs	r3, r0, #1
   102f6:	str	r0, [sp, #40]	; 0x28
   102f8:	cmp	r3, #254	; 0xfe
   102fa:	bhi.w	101dc <btrfs_mksubvol@@Base+0x100>
   102fe:	ldr	r3, [sp, #44]	; 0x2c
   10300:	adds	r3, #1
   10302:	str	r3, [sp, #44]	; 0x2c
   10304:	cmp.w	r3, #1024	; 0x400
   10308:	bne.n	102b2 <btrfs_mksubvol@@Base+0x1d6>
   1030a:	b.n	101dc <btrfs_mksubvol@@Base+0x100>
   1030c:	ldr	r3, [sp, #48]	; 0x30
   1030e:	mov	r2, r6
   10310:	mov	r1, r5
   10312:	mov	r0, r8
   10314:	strd	r9, sl, [sp]
   10318:	str	r3, [sp, #16]
   1031a:	ldr	r3, [sp, #52]	; 0x34
   1031c:	str	r3, [sp, #20]
   1031e:	movs	r3, #2
   10320:	strd	fp, r3, [sp, #8]
   10324:	mov	r3, r4
   10326:	bl	9c3c <btrfs_insert_dir_item@@Base>
   1032a:	mov	r6, r0
   1032c:	cmp	r6, #0
   1032e:	bne.w	101dc <btrfs_mksubvol@@Base+0x100>
   10332:	ldr	r3, [sp, #72]	; 0x48
   10334:	add	r4, sp, #172	; 0xac
   10336:	ldr	r2, [sp, #68]	; 0x44
   10338:	adds	r3, #101	; 0x65
   1033a:	add	r2, r3
   1033c:	mov	r3, r2
   1033e:	ldr	r0, [r2, #16]
   10340:	ldr	r1, [r2, #20]
   10342:	ldr	r2, [sp, #40]	; 0x28
   10344:	lsls	r2, r2, #1
   10346:	adds	r0, r0, r2
   10348:	str	r0, [r3, #16]
   1034a:	adc.w	r1, r1, r2, asr #31
   1034e:	mov	r0, r7
   10350:	str	r1, [r3, #20]
   10352:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   10356:	add	r0, sp, #104	; 0x68
   10358:	bl	17e58 <btrfs_release_path@@Base>
   1035c:	ldr	r3, [sp, #40]	; 0x28
   1035e:	ldr.w	r2, [r5, #447]	; 0x1bf
   10362:	mov	r0, r8
   10364:	vmov	r1, s17
   10368:	str	r3, [sp, #36]	; 0x24
   1036a:	ldr	r3, [sp, #48]	; 0x30
   1036c:	str	r4, [sp, #32]
   1036e:	strd	r9, sl, [sp, #16]
   10372:	str	r3, [sp, #24]
   10374:	ldr	r3, [sp, #52]	; 0x34
   10376:	str	r3, [sp, #28]
   10378:	ldr.w	r3, [r5, #451]	; 0x1c3
   1037c:	strd	r2, r3, [sp, #8]
   10380:	movs	r3, #144	; 0x90
   10382:	str	r3, [sp, #0]
   10384:	ldrd	r2, r3, [sp, #56]	; 0x38
   10388:	bl	27c28 <btrfs_add_root_ref@@Base>
   1038c:	ldr.w	r2, [r5, #447]	; 0x1bf
   10390:	ldr.w	r3, [r5, #451]	; 0x1c3
   10394:	cbz	r0, 103a4 <btrfs_mksubvol@@Base+0x2c8>
   10396:	str	r0, [sp, #0]
   10398:	ldr	r0, [pc, #160]	; (1043c <btrfs_mksubvol@@Base+0x360>)
   1039a:	add	r0, pc
   1039c:	bl	1747c <__btrfs_error@@Base>
   103a0:	mov	r7, r6
   103a2:	b.n	1018c <btrfs_mksubvol@@Base+0xb0>
   103a4:	ldr	r1, [sp, #40]	; 0x28
   103a6:	mov	r0, r8
   103a8:	strd	r9, sl, [sp, #16]
   103ac:	strd	r4, r1, [sp, #32]
   103b0:	ldr	r1, [sp, #48]	; 0x30
   103b2:	str	r1, [sp, #24]
   103b4:	ldr	r1, [sp, #52]	; 0x34
   103b6:	str	r1, [sp, #28]
   103b8:	ldr	r1, [sp, #56]	; 0x38
   103ba:	str	r1, [sp, #8]
   103bc:	ldr	r1, [sp, #60]	; 0x3c
   103be:	str	r1, [sp, #12]
   103c0:	movs	r1, #156	; 0x9c
   103c2:	str	r1, [sp, #0]
   103c4:	vmov	r1, s17
   103c8:	bl	27c28 <btrfs_add_root_ref@@Base>
   103cc:	cbz	r0, 103de <btrfs_mksubvol@@Base+0x302>
   103ce:	str	r0, [sp, #0]
   103d0:	ldr	r0, [pc, #108]	; (10440 <btrfs_mksubvol@@Base+0x364>)
   103d2:	ldr.w	r2, [r5, #447]	; 0x1bf
   103d6:	ldr.w	r3, [r5, #451]	; 0x1c3
   103da:	add	r0, pc
   103dc:	b.n	1039c <btrfs_mksubvol@@Base+0x2c0>
   103de:	mov	r1, r5
   103e0:	mov	r0, r8
   103e2:	bl	2b1fc <btrfs_commit_transaction@@Base>
   103e6:	mov	r1, r0
   103e8:	cbz	r0, 103f4 <btrfs_mksubvol@@Base+0x318>
   103ea:	ldr	r0, [pc, #88]	; (10444 <btrfs_mksubvol@@Base+0x368>)
   103ec:	add	r0, pc
   103ee:	bl	1747c <__btrfs_error@@Base>
   103f2:	b.n	103a0 <btrfs_mksubvol@@Base+0x2c4>
   103f4:	ldr	r0, [sp, #64]	; 0x40
   103f6:	add	r1, sp, #84	; 0x54
   103f8:	bl	1da06 <btrfs_read_fs_root@@Base>
   103fc:	cmn.w	r0, #4096	; 0x1000
   10400:	mov	r7, r0
   10402:	bls.w	1018c <btrfs_mksubvol@@Base+0xb0>
   10406:	mov	r1, r0
   10408:	ldr	r0, [pc, #60]	; (10448 <btrfs_mksubvol@@Base+0x36c>)
   1040a:	add	r0, pc
   1040c:	b.n	103ee <btrfs_mksubvol@@Base+0x312>
   1040e:	movs	r7, #0
   10410:	b.n	10192 <btrfs_mksubvol@@Base+0xb6>
   10412:	mov	r0, r7
   10414:	add	sp, #436	; 0x1b4
   10416:	vpop	{d8}
   1041a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1041e:	nop
   10420:	ldr	r4, [pc, #568]	; (1065c <btrfs_punch_hole@@Base+0x1c>)
   10422:	movs	r5, r0
   10424:	lsls	r4, r4, #8
   10426:	movs	r0, r0
   10428:	add	r5, sp, #8
   1042a:	movs	r2, r0
   1042c:	ldr	r3, [pc, #968]	; (107f8 <btrfs_read_file@@Base+0x13c>)
   1042e:	movs	r5, r0
   10430:	add	r4, sp, #884	; 0x374
   10432:	movs	r2, r0
   10434:	add	r4, sp, #500	; 0x1f4
   10436:	movs	r2, r0
   10438:	add	r4, sp, #276	; 0x114
   1043a:	movs	r2, r0
   1043c:	add	r3, sp, #384	; 0x180
   1043e:	movs	r2, r0
   10440:	add	r3, sp, #288	; 0x120
   10442:	movs	r2, r0
   10444:	add	r3, sp, #360	; 0x168
   10446:	movs	r2, r0
   10448:	add	r3, sp, #360	; 0x168
   1044a:	movs	r2, r0
   1044c:	push	{r4, lr}
   1044e:	mov	r4, r1
   10450:	ldr	r1, [pc, #84]	; (104a8 <btrfs_mksubvol@@Base+0x3cc>)
   10452:	sub	sp, #24
   10454:	ldr	r3, [pc, #84]	; (104ac <btrfs_mksubvol@@Base+0x3d0>)
   10456:	add	r1, pc
   10458:	ldr	r3, [r1, r3]
   1045a:	mov	r1, sp
   1045c:	ldr	r3, [r3, #0]
   1045e:	str	r3, [sp, #20]
   10460:	mov.w	r3, #0
   10464:	movs	r3, #25
   10466:	muls	r2, r3
   10468:	movs	r3, #17
   1046a:	adds	r2, #101	; 0x65
   1046c:	bl	1731a <read_extent_buffer@@Base>
   10470:	ldr.w	r3, [sp, #13]
   10474:	ldr.w	r2, [sp, #9]
   10478:	str.w	r3, [r4, #13]
   1047c:	ldrb.w	r3, [sp, #8]
   10480:	str.w	r2, [r4, #9]
   10484:	ldr	r2, [pc, #40]	; (104b0 <btrfs_mksubvol@@Base+0x3d4>)
   10486:	strb	r3, [r4, #8]
   10488:	ldr	r3, [sp, #0]
   1048a:	add	r2, pc
   1048c:	str	r3, [r4, #0]
   1048e:	ldr	r3, [sp, #4]
   10490:	str	r3, [r4, #4]
   10492:	ldr	r3, [pc, #24]	; (104ac <btrfs_mksubvol@@Base+0x3d0>)
   10494:	ldr	r3, [r2, r3]
   10496:	ldr	r2, [r3, #0]
   10498:	ldr	r3, [sp, #20]
   1049a:	eors	r2, r3
   1049c:	beq.n	104a2 <btrfs_mksubvol@@Base+0x3c6>
   1049e:	blx	84cc <__stack_chk_fail@plt>
   104a2:	add	sp, #24
   104a4:	pop	{r4, pc}
   104a6:	nop
   104a8:	ldr	r1, [pc, #200]	; (10574 <btrfs_get_extent@@Base+0xc0>)
   104aa:	movs	r5, r0
   104ac:	lsls	r4, r4, #8
   104ae:	movs	r0, r0
   104b0:	ldr	r0, [pc, #1016]	; (108ac <btrfs_read_file@@Base+0x1f0>)
   104b2:	movs	r5, r0

000104b4 <btrfs_get_extent@@Base>:
   104b4:	ldr.w	ip, [pc, #380]	; 10634 <btrfs_get_extent@@Base+0x180>
   104b8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   104bc:	mov	r4, r2
   104be:	ldr	r2, [pc, #376]	; (10638 <btrfs_get_extent@@Base+0x184>)
   104c0:	add	ip, pc
   104c2:	sub	sp, #76	; 0x4c
   104c4:	mov	r5, r1
   104c6:	mov.w	r9, #108	; 0x6c
   104ca:	ldr.w	r2, [ip, r2]
   104ce:	ldr	r3, [sp, #136]	; 0x88
   104d0:	ldr	r2, [r2, #0]
   104d2:	str	r2, [sp, #68]	; 0x44
   104d4:	mov.w	r2, #0
   104d8:	ldr	r2, [sp, #120]	; 0x78
   104da:	ldrd	r6, r7, [sp, #112]	; 0x70
   104de:	ldrd	r8, sl, [sp, #128]	; 0x80
   104e2:	str.w	r2, [sp, #37]	; 0x25
   104e6:	ldr	r2, [sp, #124]	; 0x7c
   104e8:	strd	r6, r7, [sp, #28]
   104ec:	strb.w	r9, [sp, #36]	; 0x24
   104f0:	str.w	r2, [sp, #41]	; 0x29
   104f4:	subs	r2, r3, #0
   104f6:	it	ne
   104f8:	movne	r2, #1
   104fa:	strd	r3, r2, [sp]
   104fe:	add	r2, sp, #28
   10500:	mov	r3, r4
   10502:	bl	1a23c <btrfs_search_slot@@Base>
   10506:	subs.w	fp, r0, #0
   1050a:	ble.w	1061e <btrfs_get_extent@@Base+0x16a>
   1050e:	mov	r2, r6
   10510:	mov	r3, r7
   10512:	mov	r1, r4
   10514:	mov	r0, r5
   10516:	str.w	r9, [sp]
   1051a:	bl	1b8f4 <btrfs_previous_item@@Base>
   1051e:	subs.w	fp, r0, #0
   10522:	blt.n	1060a <btrfs_get_extent@@Base+0x156>
   10524:	beq.n	105b2 <btrfs_get_extent@@Base+0xfe>
   10526:	ldr	r2, [r4, #0]
   10528:	ldr	r3, [r4, #32]
   1052a:	adds	r3, #1
   1052c:	str	r3, [r4, #32]
   1052e:	ldr.w	r2, [r2, #192]	; 0xc0
   10532:	cmp	r3, r2
   10534:	bcc.n	1054c <btrfs_get_extent@@Base+0x98>
   10536:	movs	r3, #0
   10538:	mov	r1, r4
   1053a:	strb.w	r3, [r4, #65]	; 0x41
   1053e:	ldr.w	r0, [r5, #464]	; 0x1d0
   10542:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   10546:	mov	fp, r0
   10548:	cmp	r0, #0
   1054a:	bne.n	1060a <btrfs_get_extent@@Base+0x156>
   1054c:	ldr	r2, [r4, #32]
   1054e:	add	r1, sp, #48	; 0x30
   10550:	ldr	r0, [r4, #0]
   10552:	bl	1044c <btrfs_mksubvol@@Base+0x370>
   10556:	ldrd	r2, r3, [sp, #48]	; 0x30
   1055a:	cmp	r3, r7
   1055c:	it	eq
   1055e:	cmpeq	r2, r6
   10560:	bne.n	10620 <btrfs_get_extent@@Base+0x16c>
   10562:	ldrb.w	r3, [sp, #56]	; 0x38
   10566:	cmp	r3, #108	; 0x6c
   10568:	bne.n	10620 <btrfs_get_extent@@Base+0x16c>
   1056a:	ldr	r1, [sp, #120]	; 0x78
   1056c:	ldr.w	r3, [sp, #61]	; 0x3d
   10570:	adds.w	r1, r1, r8
   10574:	str	r1, [sp, #16]
   10576:	ldr	r1, [sp, #124]	; 0x7c
   10578:	ldr.w	r2, [sp, #57]	; 0x39
   1057c:	adc.w	r1, r1, sl
   10580:	str	r1, [sp, #20]
   10582:	ldrd	r0, r1, [sp, #16]
   10586:	cmp	r3, r1
   10588:	ldr	r3, [r4, #32]
   1058a:	it	eq
   1058c:	cmpeq	r2, r0
   1058e:	ite	cs
   10590:	movcs.w	fp, #1
   10594:	movcc.w	fp, #0
   10598:	cmp	r3, #0
   1059a:	bne.n	1060a <btrfs_get_extent@@Base+0x156>
   1059c:	mov	r1, r4
   1059e:	mov	r0, r5
   105a0:	bl	1b5e8 <btrfs_prev_leaf@@Base>
   105a4:	cmp	r0, #0
   105a6:	bne.n	10626 <btrfs_get_extent@@Base+0x172>
   105a8:	ldr	r3, [r4, #0]
   105aa:	ldr.w	r3, [r3, #192]	; 0xc0
   105ae:	str	r3, [r4, #32]
   105b0:	b.n	1060a <btrfs_get_extent@@Base+0x156>
   105b2:	ldr	r2, [r4, #32]
   105b4:	add	r1, sp, #48	; 0x30
   105b6:	ldr	r0, [r4, #0]
   105b8:	bl	1044c <btrfs_mksubvol@@Base+0x370>
   105bc:	ldrd	r2, r3, [sp, #48]	; 0x30
   105c0:	cmp	r3, r7
   105c2:	it	eq
   105c4:	cmpeq	r2, r6
   105c6:	bne.n	10526 <btrfs_get_extent@@Base+0x72>
   105c8:	ldrb.w	r3, [sp, #56]	; 0x38
   105cc:	cmp	r3, #108	; 0x6c
   105ce:	bne.n	10526 <btrfs_get_extent@@Base+0x72>
   105d0:	ldr	r3, [r4, #0]
   105d2:	movs	r1, #25
   105d4:	ldr	r2, [r4, #32]
   105d6:	adds	r3, #96	; 0x60
   105d8:	mla	r2, r1, r2, r3
   105dc:	ldr.w	r1, [sp, #61]	; 0x3d
   105e0:	ldr.w	r2, [r2, #118]	; 0x76
   105e4:	add	r3, r2
   105e6:	ldr.w	r2, [r3, #109]!
   105ea:	ldr	r0, [r3, #4]
   105ec:	ldr.w	r3, [sp, #57]	; 0x39
   105f0:	adds	r3, r2, r3
   105f2:	str	r3, [sp, #8]
   105f4:	adc.w	r3, r0, r1
   105f8:	str	r3, [sp, #12]
   105fa:	ldrd	r0, r1, [sp, #8]
   105fe:	ldrd	r2, r3, [sp, #120]	; 0x78
   10602:	cmp	r3, r1
   10604:	it	eq
   10606:	cmpeq	r2, r0
   10608:	bcs.n	10526 <btrfs_get_extent@@Base+0x72>
   1060a:	ldr	r2, [pc, #48]	; (1063c <btrfs_get_extent@@Base+0x188>)
   1060c:	ldr	r3, [pc, #40]	; (10638 <btrfs_get_extent@@Base+0x184>)
   1060e:	add	r2, pc
   10610:	ldr	r3, [r2, r3]
   10612:	ldr	r2, [r3, #0]
   10614:	ldr	r3, [sp, #68]	; 0x44
   10616:	eors	r2, r3
   10618:	beq.n	1062a <btrfs_get_extent@@Base+0x176>
   1061a:	blx	84cc <__stack_chk_fail@plt>
   1061e:	bne.n	1060a <btrfs_get_extent@@Base+0x156>
   10620:	mov.w	fp, #1
   10624:	b.n	1060a <btrfs_get_extent@@Base+0x156>
   10626:	mov	fp, r0
   10628:	b.n	1060a <btrfs_get_extent@@Base+0x156>
   1062a:	mov	r0, fp
   1062c:	add	sp, #76	; 0x4c
   1062e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10632:	nop
   10634:	ldr	r0, [pc, #800]	; (10958 <btrfs_read_file@@Base+0x29c>)
   10636:	movs	r5, r0
   10638:	lsls	r4, r4, #8
   1063a:	movs	r0, r0
   1063c:	bx	pc
   1063e:	movs	r5, r0

00010640 <btrfs_punch_hole@@Base>:
   10640:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   10644:	sub	sp, #40	; 0x28
   10646:	mov	sl, r0
   10648:	mov	r5, r2
   1064a:	ldrd	r8, r9, [sp, #80]	; 0x50
   1064e:	mov	r7, r3
   10650:	str	r1, [sp, #36]	; 0x24
   10652:	bl	17e50 <btrfs_alloc_path@@Base>
   10656:	mov	r4, r0
   10658:	cbz	r0, 106b6 <btrfs_punch_hole@@Base+0x76>
   1065a:	ldrd	r2, r3, [sp, #72]	; 0x48
   1065e:	movs	r0, #0
   10660:	ldr	r1, [sp, #36]	; 0x24
   10662:	str	r0, [sp, #24]
   10664:	strd	r2, r3, [sp, #8]
   10668:	mov	r2, r4
   1066a:	strd	r8, r9, [sp, #16]
   1066e:	strd	r5, r7, [sp]
   10672:	bl	104b4 <btrfs_get_extent@@Base>
   10676:	subs	r6, r0, #0
   10678:	blt.n	106a2 <btrfs_punch_hole@@Base+0x62>
   1067a:	beq.n	106b0 <btrfs_punch_hole@@Base+0x70>
   1067c:	movs	r2, #0
   1067e:	movs	r3, #0
   10680:	strd	r2, r3, [sp, #16]
   10684:	mov	r0, sl
   10686:	strd	r2, r3, [sp, #8]
   1068a:	ldrd	r2, r3, [sp, #72]	; 0x48
   1068e:	ldr	r1, [sp, #36]	; 0x24
   10690:	strd	r8, r9, [sp, #24]
   10694:	strd	r2, r3, [sp]
   10698:	mov	r2, r5
   1069a:	mov	r3, r7
   1069c:	bl	2e0ca <btrfs_insert_file_extent@@Base>
   106a0:	mov	r6, r0
   106a2:	mov	r0, r4
   106a4:	bl	17e7e <btrfs_free_path@@Base>
   106a8:	mov	r0, r6
   106aa:	add	sp, #40	; 0x28
   106ac:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   106b0:	mvn.w	r6, #16
   106b4:	b.n	106a2 <btrfs_punch_hole@@Base+0x62>
   106b6:	mvn.w	r6, #11
   106ba:	b.n	106a8 <btrfs_punch_hole@@Base+0x68>

000106bc <btrfs_read_file@@Base>:
   106bc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   106c0:	mov	r6, r0
   106c2:	vpush	{d8}
   106c6:	sub	sp, #180	; 0xb4
   106c8:	ldr.w	r8, [r0, #464]	; 0x1d0
   106cc:	strd	r2, r3, [sp, #8]
   106d0:	ldr	r3, [sp, #236]	; 0xec
   106d2:	ldr	r2, [pc, #856]	; (10a2c <btrfs_read_file@@Base+0x370>)
   106d4:	ldr.w	r4, [r8, #388]	; 0x184
   106d8:	vmov	s16, r3
   106dc:	ldr	r3, [pc, #848]	; (10a30 <btrfs_read_file@@Base+0x374>)
   106de:	add	r2, pc
   106e0:	ldrd	sl, fp, [sp, #224]	; 0xe0
   106e4:	ldr	r3, [r2, r3]
   106e6:	movs	r2, #0
   106e8:	ldr	r3, [r3, #0]
   106ea:	str	r3, [sp, #172]	; 0xac
   106ec:	mov.w	r3, #0
   106f0:	ldr.w	r3, [r8, #308]	; 0x134
   106f4:	ldr.w	r3, [r3, #188]	; 0xbc
   106f8:	str	r3, [sp, #68]	; 0x44
   106fa:	adds.w	r3, r4, #4294967295	; 0xffffffff
   106fe:	adc.w	r2, r2, #4294967295	; 0xffffffff
   10702:	and.w	r0, r3, sl
   10706:	and.w	r1, r2, fp
   1070a:	orrs.w	r3, r0, r1
   1070e:	bne.n	10718 <btrfs_read_file@@Base+0x5c>
   10710:	ldr	r3, [sp, #232]	; 0xe8
   10712:	subs	r5, r4, #1
   10714:	ands	r5, r3
   10716:	beq.n	10740 <btrfs_read_file@@Base+0x84>
   10718:	ldr	r2, [pc, #792]	; (10a34 <btrfs_read_file@@Base+0x378>)
   1071a:	mov	r1, r4
   1071c:	ldr	r0, [pc, #792]	; (10a38 <btrfs_read_file@@Base+0x37c>)
   1071e:	mvn.w	r4, #21
   10722:	add	r2, pc
   10724:	add	r0, pc
   10726:	bl	17400 <__btrfs_warning@@Base>
   1072a:	ldr	r2, [pc, #784]	; (10a3c <btrfs_read_file@@Base+0x380>)
   1072c:	ldr	r3, [pc, #768]	; (10a30 <btrfs_read_file@@Base+0x374>)
   1072e:	add	r2, pc
   10730:	ldr	r3, [r2, r3]
   10732:	ldr	r2, [r3, #0]
   10734:	ldr	r3, [sp, #172]	; 0xac
   10736:	eors	r2, r3
   10738:	beq.w	10a1e <btrfs_read_file@@Base+0x362>
   1073c:	blx	84cc <__stack_chk_fail@plt>
   10740:	add.w	r9, sp, #104	; 0x68
   10744:	movs	r7, #108	; 0x6c
   10746:	mov	r0, r9
   10748:	bl	17e48 <btrfs_init_path@@Base>
   1074c:	ldr	r3, [sp, #8]
   1074e:	add	r2, sp, #84	; 0x54
   10750:	mov	r1, r6
   10752:	mov	r0, r5
   10754:	strd	r5, r5, [sp]
   10758:	str	r3, [sp, #84]	; 0x54
   1075a:	ldr	r3, [sp, #12]
   1075c:	str.w	sl, [sp, #93]	; 0x5d
   10760:	str.w	fp, [sp, #97]	; 0x61
   10764:	str	r3, [sp, #88]	; 0x58
   10766:	mov	r3, r9
   10768:	strb.w	r7, [sp, #92]	; 0x5c
   1076c:	bl	1a23c <btrfs_search_slot@@Base>
   10770:	subs	r4, r0, #0
   10772:	blt.w	10908 <btrfs_read_file@@Base+0x24c>
   10776:	beq.n	1078c <btrfs_read_file@@Base+0xd0>
   10778:	ldrd	r2, r3, [sp, #8]
   1077c:	mov	r1, r9
   1077e:	mov	r0, r6
   10780:	str	r7, [sp, #0]
   10782:	bl	1b8f4 <btrfs_previous_item@@Base>
   10786:	subs	r4, r0, #0
   10788:	bgt.w	10a18 <btrfs_read_file@@Base+0x35c>
   1078c:	ldr	r2, [sp, #232]	; 0xe8
   1078e:	movs	r1, #0
   10790:	vmov	r0, s16
   10794:	movs	r5, #0
   10796:	blx	8780 <memset@plt+0x4>
   1079a:	ldr	r3, [sp, #232]	; 0xe8
   1079c:	adds.w	r2, sl, r3
   107a0:	adc.w	r3, fp, r3, asr #31
   107a4:	strd	r2, r3, [sp, #40]	; 0x28
   107a8:	ldr	r7, [sp, #136]	; 0x88
   107aa:	add	r1, sp, #84	; 0x54
   107ac:	ldr	r0, [sp, #104]	; 0x68
   107ae:	mov	r2, r7
   107b0:	str	r0, [sp, #52]	; 0x34
   107b2:	bl	1044c <btrfs_mksubvol@@Base+0x370>
   107b6:	ldrd	r2, r3, [sp, #84]	; 0x54
   107ba:	ldrd	r0, r1, [sp, #8]
   107be:	cmp	r1, r3
   107c0:	it	eq
   107c2:	cmpeq	r0, r2
   107c4:	bcc.n	10858 <btrfs_read_file@@Base+0x19c>
   107c6:	ldrb.w	r1, [sp, #92]	; 0x5c
   107ca:	cmp	r1, #108	; 0x6c
   107cc:	bne.w	1098a <btrfs_read_file@@Base+0x2ce>
   107d0:	ldrd	r0, r1, [sp, #8]
   107d4:	cmp	r3, r1
   107d6:	it	eq
   107d8:	cmpeq	r2, r0
   107da:	bne.w	1098a <btrfs_read_file@@Base+0x2ce>
   107de:	ldrd	r0, r1, [sp, #40]	; 0x28
   107e2:	ldr.w	r3, [sp, #97]	; 0x61
   107e6:	ldr.w	r2, [sp, #93]	; 0x5d
   107ea:	cmp	r3, r1
   107ec:	it	eq
   107ee:	cmpeq	r2, r0
   107f0:	bcs.n	10858 <btrfs_read_file@@Base+0x19c>
   107f2:	ldr	r0, [sp, #52]	; 0x34
   107f4:	movs	r1, #25
   107f6:	add.w	ip, r0, #96	; 0x60
   107fa:	mla	r7, r1, r7, ip
   107fe:	ldr.w	r1, [r7, #118]	; 0x76
   10802:	add.w	r7, r1, #101	; 0x65
   10806:	add	ip, r7
   10808:	str	r1, [sp, #52]	; 0x34
   1080a:	ldrb.w	r7, [ip, #16]
   1080e:	cmp	r7, #0
   10810:	bne.w	10a12 <btrfs_read_file@@Base+0x356>
   10814:	ldrb.w	r7, [ip, #20]
   10818:	cmp	r7, #0
   1081a:	bne.n	10916 <btrfs_read_file@@Base+0x25a>
   1081c:	ldr.w	r7, [ip, #8]
   10820:	ldr.w	lr, [ip, #12]
   10824:	adds	r1, r2, r7
   10826:	str	r1, [sp, #56]	; 0x38
   10828:	adc.w	r3, r3, lr
   1082c:	str	r3, [sp, #60]	; 0x3c
   1082e:	ldrd	r2, r3, [sp, #56]	; 0x38
   10832:	cmp	fp, r3
   10834:	it	eq
   10836:	cmpeq	sl, r2
   10838:	bcs.w	1098a <btrfs_read_file@@Base+0x2ce>
   1083c:	ldr	r2, [sp, #52]	; 0x34
   1083e:	mov	r3, r7
   10840:	vmov	r1, s16
   10844:	subs	r7, #1
   10846:	adds	r2, #122	; 0x7a
   10848:	adds	r5, #1
   1084a:	bl	1731a <read_extent_buffer@@Base>
   1084e:	ldr.w	r3, [r8, #388]	; 0x184
   10852:	subs	r3, #1
   10854:	orrs	r3, r7
   10856:	add	r5, r3
   10858:	ldr	r1, [sp, #68]	; 0x44
   1085a:	movs	r7, #0
   1085c:	mov	r3, r7
   1085e:	and.w	r2, r1, #512	; 0x200
   10862:	orrs	r3, r2
   10864:	beq.n	10908 <btrfs_read_file@@Base+0x24c>
   10866:	mov	r0, r9
   10868:	bl	17e58 <btrfs_release_path@@Base>
   1086c:	ldr	r3, [sp, #8]
   1086e:	mov	r2, r9
   10870:	mov	r1, r6
   10872:	mov	r0, r7
   10874:	str	r7, [sp, #0]
   10876:	str	r3, [sp, #84]	; 0x54
   10878:	ldr	r3, [sp, #12]
   1087a:	strb.w	r7, [sp, #93]	; 0x5d
   1087e:	strb.w	r7, [sp, #94]	; 0x5e
   10882:	str	r3, [sp, #88]	; 0x58
   10884:	movs	r3, #1
   10886:	strb.w	r3, [sp, #92]	; 0x5c
   1088a:	add	r3, sp, #84	; 0x54
   1088c:	strb.w	r7, [sp, #95]	; 0x5f
   10890:	strb.w	r7, [sp, #96]	; 0x60
   10894:	strb.w	r7, [sp, #97]	; 0x61
   10898:	strb.w	r7, [sp, #98]	; 0x62
   1089c:	strb.w	r7, [sp, #99]	; 0x63
   108a0:	strb.w	r7, [sp, #100]	; 0x64
   108a4:	bl	2d7c0 <btrfs_lookup_inode@@Base>
   108a8:	subs	r4, r0, #0
   108aa:	blt.n	10908 <btrfs_read_file@@Base+0x24c>
   108ac:	bne.w	10a18 <btrfs_read_file@@Base+0x35c>
   108b0:	ldr	r3, [sp, #104]	; 0x68
   108b2:	movs	r1, #25
   108b4:	ldr	r2, [sp, #136]	; 0x88
   108b6:	adds	r3, #96	; 0x60
   108b8:	ldr.w	r5, [r8, #388]	; 0x184
   108bc:	mla	r2, r1, r2, r3
   108c0:	subs	r5, #1
   108c2:	ldr.w	r2, [r2, #118]	; 0x76
   108c6:	add	r3, r2
   108c8:	ldr.w	r2, [r3, #117]!
   108cc:	adds.w	r2, r2, #4294967295	; 0xffffffff
   108d0:	ldr	r1, [r3, #4]
   108d2:	ldr	r3, [sp, #232]	; 0xe8
   108d4:	adc.w	r0, r1, #4294967295	; 0xffffffff
   108d8:	orr.w	r1, r2, r5
   108dc:	subs.w	r1, r1, sl
   108e0:	sbc.w	r0, r0, fp
   108e4:	adds	r1, #1
   108e6:	str	r1, [sp, #32]
   108e8:	adc.w	r1, r0, r7
   108ec:	str	r1, [sp, #36]	; 0x24
   108ee:	asrs	r6, r3, #31
   108f0:	ldrd	r0, r1, [sp, #32]
   108f4:	mov	r5, r3
   108f6:	mov	r2, r3
   108f8:	mov	r3, r6
   108fa:	cmp	r6, r1
   108fc:	it	eq
   108fe:	cmpeq	r5, r0
   10900:	it	cc
   10902:	strdcc	r2, r3, [sp, #32]
   10906:	ldr	r5, [sp, #32]
   10908:	add	r0, sp, #104	; 0x68
   1090a:	cmp	r4, #0
   1090c:	it	eq
   1090e:	moveq	r4, r5
   10910:	bl	17e58 <btrfs_release_path@@Base>
   10914:	b.n	1072a <btrfs_read_file@@Base+0x6e>
   10916:	mov	r0, ip
   10918:	ldr.w	r1, [r0, #45]!
   1091c:	adds	r1, r1, r2
   1091e:	str	r1, [sp, #16]
   10920:	ldr	r4, [r0, #4]
   10922:	adc.w	r1, r4, r3
   10926:	str	r1, [sp, #20]
   10928:	ldrd	r0, r1, [sp, #16]
   1092c:	cmp	fp, r1
   1092e:	it	eq
   10930:	cmpeq	sl, r0
   10932:	bcs.n	1098a <btrfs_read_file@@Base+0x2ce>
   10934:	cmp	fp, r3
   10936:	mov	r0, fp
   10938:	it	eq
   1093a:	cmpeq	sl, r2
   1093c:	mov	lr, sl
   1093e:	it	cc
   10940:	movcc	r0, r3
   10942:	ldr	r3, [sp, #40]	; 0x28
   10944:	it	cc
   10946:	movcc	lr, r2
   10948:	ldrd	r1, r2, [sp, #40]	; 0x28
   1094c:	str	r3, [sp, #52]	; 0x34
   1094e:	ldr	r3, [sp, #44]	; 0x2c
   10950:	str	r3, [sp, #64]	; 0x40
   10952:	ldrd	r3, r4, [sp, #16]
   10956:	cmp	r4, r2
   10958:	it	eq
   1095a:	cmpeq	r3, r1
   1095c:	itttt	cc
   1095e:	ldrcc	r3, [sp, #16]
   10960:	strcc	r3, [sp, #52]	; 0x34
   10962:	ldrcc	r3, [sp, #20]
   10964:	strcc	r3, [sp, #64]	; 0x40
   10966:	ldr	r3, [sp, #52]	; 0x34
   10968:	subs.w	r3, r3, lr
   1096c:	str	r3, [sp, #24]
   1096e:	ldr	r3, [sp, #64]	; 0x40
   10970:	sbc.w	r3, r3, r0
   10974:	cmp	r7, #2
   10976:	str	r3, [sp, #28]
   10978:	beq.n	10986 <btrfs_read_file@@Base+0x2ca>
   1097a:	mov	r0, ip
   1097c:	ldr.w	r2, [r0, #29]!
   10980:	ldr	r3, [r0, #4]
   10982:	orrs	r3, r2
   10984:	bne.n	109b4 <btrfs_read_file@@Base+0x2f8>
   10986:	ldr	r3, [sp, #24]
   10988:	add	r5, r3
   1098a:	ldr	r2, [sp, #104]	; 0x68
   1098c:	movs	r7, #0
   1098e:	ldr	r3, [sp, #136]	; 0x88
   10990:	adds	r3, #1
   10992:	str	r3, [sp, #136]	; 0x88
   10994:	ldr.w	r2, [r2, #192]	; 0xc0
   10998:	cmp	r3, r2
   1099a:	bcc.n	10a0e <btrfs_read_file@@Base+0x352>
   1099c:	ldr.w	r0, [r6, #464]	; 0x1d0
   109a0:	add	r1, sp, #104	; 0x68
   109a2:	strb.w	r7, [sp, #169]	; 0xa9
   109a6:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   109aa:	subs	r4, r0, #0
   109ac:	ble.w	107a8 <btrfs_read_file@@Base+0xec>
   109b0:	mov	r4, r7
   109b2:	b.n	10858 <btrfs_read_file@@Base+0x19c>
   109b4:	mov	r3, ip
   109b6:	ldr.w	r4, [ip, #21]!
   109ba:	ldr.w	r2, [r3, #37]!
   109be:	movs	r7, #0
   109c0:	str	r2, [sp, #52]	; 0x34
   109c2:	ldrd	r1, r2, [sp, #24]
   109c6:	ldr	r0, [r3, #4]
   109c8:	ldr.w	r3, [ip, #4]
   109cc:	strd	r1, r2, [sp, #72]	; 0x48
   109d0:	sub.w	r1, lr, sl
   109d4:	ldr	r2, [sp, #52]	; 0x34
   109d6:	str	r7, [sp, #4]
   109d8:	add	r7, sp, #72	; 0x48
   109da:	adds	r2, r2, r4
   109dc:	str	r7, [sp, #0]
   109de:	adc.w	r3, r0, r3
   109e2:	vmov	r0, s16
   109e6:	add	r1, r0
   109e8:	mov	r0, r8
   109ea:	bl	1c3a8 <read_extent_data@@Base>
   109ee:	subs	r4, r0, #0
   109f0:	blt.w	10858 <btrfs_read_file@@Base+0x19c>
   109f4:	ldrd	r2, r3, [sp, #72]	; 0x48
   109f8:	ldrd	r0, r1, [sp, #24]
   109fc:	cmp	r3, r1
   109fe:	it	eq
   10a00:	cmpeq	r2, r0
   10a02:	beq.n	10a0a <btrfs_read_file@@Base+0x34e>
   10a04:	mvn.w	r4, #4
   10a08:	b.n	1072a <btrfs_read_file@@Base+0x6e>
   10a0a:	add	r5, r2
   10a0c:	b.n	1098a <btrfs_read_file@@Base+0x2ce>
   10a0e:	mov	r4, r7
   10a10:	b.n	107a8 <btrfs_read_file@@Base+0xec>
   10a12:	mvn.w	r4, #24
   10a16:	b.n	10858 <btrfs_read_file@@Base+0x19c>
   10a18:	mvn.w	r4, #1
   10a1c:	b.n	10908 <btrfs_read_file@@Base+0x24c>
   10a1e:	mov	r0, r4
   10a20:	add	sp, #180	; 0xb4
   10a22:	vpop	{d8}
   10a26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10a2a:	nop
   10a2c:	mov	sl, r5
   10a2e:	movs	r5, r0
   10a30:	lsls	r4, r4, #8
   10a32:	movs	r0, r0
   10a34:	add	r0, sp, #592	; 0x250
   10a36:	movs	r2, r0
   10a38:	add	r0, sp, #368	; 0x170
   10a3a:	movs	r2, r0
   10a3c:	mov	r2, fp
   10a3e:	movs	r5, r0

00010a40 <btrfs_find_root_search@@Base>:
   10a40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a44:	sub	sp, #180	; 0xb4
   10a46:	mov	sl, r2
   10a48:	ldr	r2, [pc, #644]	; (10cd0 <btrfs_find_root_search@@Base+0x290>)
   10a4a:	str	r3, [sp, #56]	; 0x38
   10a4c:	mov	r7, r1
   10a4e:	ldr	r3, [pc, #644]	; (10cd4 <btrfs_find_root_search@@Base+0x294>)
   10a50:	add	r2, pc
   10a52:	movs	r1, #0
   10a54:	mov	r6, r0
   10a56:	add	r3, pc
   10a58:	str	r3, [sp, #60]	; 0x3c
   10a5a:	ldr	r3, [pc, #636]	; (10cd8 <btrfs_find_root_search@@Base+0x298>)
   10a5c:	ldr	r3, [r2, r3]
   10a5e:	ldr	r3, [r3, #0]
   10a60:	str	r3, [sp, #172]	; 0xac
   10a62:	mov.w	r3, #0
   10a66:	ldr.w	r3, [r0, #308]	; 0x134
   10a6a:	strd	r1, r1, [sp, #88]	; 0x58
   10a6e:	strd	r1, r1, [sp, #96]	; 0x60
   10a72:	ldr.w	r3, [r3, #148]	; 0x94
   10a76:	strd	r1, r1, [sp, #36]	; 0x24
   10a7a:	strd	r1, r1, [sp, #80]	; 0x50
   10a7e:	str	r3, [sp, #44]	; 0x2c
   10a80:	ldrb.w	r3, [r0, #364]	; 0x16c
   10a84:	ubfx	r0, r3, #5, #1
   10a88:	orr.w	r3, r3, #32
   10a8c:	str	r0, [sp, #72]	; 0x48
   10a8e:	strb.w	r3, [r6, #364]	; 0x16c
   10a92:	ldrd	r2, r3, [r7]
   10a96:	add	r1, sp, #88	; 0x58
   10a98:	mov	r0, r6
   10a9a:	cmp	r3, #0
   10a9c:	it	eq
   10a9e:	cmpeq	r2, #3
   10aa0:	add	r2, sp, #96	; 0x60
   10aa2:	ittee	ne
   10aa4:	movne	r4, #4
   10aa6:	movne	r5, #0
   10aa8:	moveq	r3, #2
   10aaa:	moveq	r4, #0
   10aac:	ite	ne
   10aae:	strdne	r4, r5, [sp]
   10ab2:	strdeq	r3, r4, [sp]
   10ab6:	bl	2969c <btrfs_next_bg@@Base>
   10aba:	cbz	r0, 10ae8 <btrfs_find_root_search@@Base+0xa8>
   10abc:	adds	r3, r0, #2
   10abe:	ite	ne
   10ac0:	movne	r4, r0
   10ac2:	moveq	r4, #0
   10ac4:	ldrb.w	r3, [r6, #364]	; 0x16c
   10ac8:	ldr	r2, [sp, #72]	; 0x48
   10aca:	bfi	r3, r2, #5, #1
   10ace:	ldr	r2, [pc, #524]	; (10cdc <btrfs_find_root_search@@Base+0x29c>)
   10ad0:	strb.w	r3, [r6, #364]	; 0x16c
   10ad4:	ldr	r3, [pc, #512]	; (10cd8 <btrfs_find_root_search@@Base+0x298>)
   10ad6:	add	r2, pc
   10ad8:	ldr	r3, [r2, r3]
   10ada:	ldr	r2, [r3, #0]
   10adc:	ldr	r3, [sp, #172]	; 0xac
   10ade:	eors	r2, r3
   10ae0:	beq.w	10cc8 <btrfs_find_root_search@@Base+0x288>
   10ae4:	blx	84cc <__stack_chk_fail@plt>
   10ae8:	ldrd	r3, r4, [sp, #88]	; 0x58
   10aec:	strd	r3, r4, [sp, #24]
   10af0:	ldr	r3, [sp, #44]	; 0x2c
   10af2:	str	r3, [sp, #76]	; 0x4c
   10af4:	ldr	r2, [sp, #96]	; 0x60
   10af6:	ldr	r3, [sp, #88]	; 0x58
   10af8:	adds	r3, r3, r2
   10afa:	ldr	r2, [sp, #92]	; 0x5c
   10afc:	str	r3, [sp, #64]	; 0x40
   10afe:	ldr	r3, [sp, #100]	; 0x64
   10b00:	adc.w	r3, r2, r3
   10b04:	str	r3, [sp, #68]	; 0x44
   10b06:	ldrd	r1, r2, [sp, #64]	; 0x40
   10b0a:	ldrd	r3, r4, [sp, #24]
   10b0e:	cmp	r4, r2
   10b10:	it	eq
   10b12:	cmpeq	r3, r1
   10b14:	bcs.n	10a92 <btrfs_find_root_search@@Base+0x52>
   10b16:	ldr	r3, [sp, #80]	; 0x50
   10b18:	mov	r0, r6
   10b1a:	str	r3, [sp, #0]
   10b1c:	ldr	r3, [sp, #84]	; 0x54
   10b1e:	str	r3, [sp, #4]
   10b20:	ldrd	r2, r3, [sp, #24]
   10b24:	bl	1d684 <read_tree_block@@Base>
   10b28:	mov	r5, r0
   10b2a:	cbnz	r0, 10b3e <btrfs_find_root_search@@Base+0xfe>
   10b2c:	ldr	r3, [sp, #24]
   10b2e:	ldr	r2, [sp, #76]	; 0x4c
   10b30:	adds	r3, r3, r2
   10b32:	str	r3, [sp, #24]
   10b34:	ldr	r3, [sp, #28]
   10b36:	adc.w	r3, r3, #0
   10b3a:	str	r3, [sp, #28]
   10b3c:	b.n	10af4 <btrfs_find_root_search@@Base+0xb4>
   10b3e:	cmn.w	r0, #4096	; 0x1000
   10b42:	bhi.n	10b2c <btrfs_find_root_search@@Base+0xec>
   10b44:	ldrd	r2, r3, [r7]
   10b48:	ldr.w	r1, [r5, #188]	; 0xbc
   10b4c:	ldr.w	r0, [r0, #184]	; 0xb8
   10b50:	cmp	r1, r3
   10b52:	it	eq
   10b54:	cmpeq	r0, r2
   10b56:	bne.w	10cc4 <btrfs_find_root_search@@Base+0x284>
   10b5a:	ldrb.w	r3, [r5, #196]	; 0xc4
   10b5e:	str	r3, [sp, #32]
   10b60:	ldr	r2, [sp, #32]
   10b62:	ldrb	r3, [r7, #16]
   10b64:	cmp	r3, r2
   10b66:	bhi.w	10cc4 <btrfs_find_root_search@@Base+0x284>
   10b6a:	ldr.w	r3, [r5, #176]	; 0xb0
   10b6e:	str	r3, [sp, #16]
   10b70:	ldr.w	r3, [r5, #180]	; 0xb4
   10b74:	str	r3, [sp, #20]
   10b76:	ldrd	r0, r1, [sp, #16]
   10b7a:	ldrd	r2, r3, [r7, #8]
   10b7e:	cmp	r1, r3
   10b80:	it	eq
   10b82:	cmpeq	r0, r2
   10b84:	bcc.w	10cc4 <btrfs_find_root_search@@Base+0x284>
   10b88:	ldrd	r3, r4, [r5, #40]	; 0x28
   10b8c:	mov	r2, r0
   10b8e:	mov	r0, sl
   10b90:	strd	r3, r4, [sp, #48]	; 0x30
   10b94:	mov	r3, r1
   10b96:	bl	15fdc <search_cache_extent@@Base>
   10b9a:	mov	fp, r0
   10b9c:	cbz	r0, 10bae <btrfs_find_root_search@@Base+0x16e>
   10b9e:	ldrd	r2, r3, [r0, #24]
   10ba2:	ldrd	r0, r1, [sp, #16]
   10ba6:	cmp	r1, r3
   10ba8:	it	eq
   10baa:	cmpeq	r0, r2
   10bac:	beq.n	10c40 <btrfs_find_root_search@@Base+0x200>
   10bae:	movs	r0, #56	; 0x38
   10bb0:	blx	8634 <malloc@plt+0x4>
   10bb4:	cbnz	r0, 10bf6 <btrfs_find_root_search@@Base+0x1b6>
   10bb6:	ldr	r2, [sp, #60]	; 0x3c
   10bb8:	add	r4, sp, #108	; 0x6c
   10bba:	ldr	r3, [pc, #292]	; (10ce0 <btrfs_find_root_search@@Base+0x2a0>)
   10bbc:	movs	r1, #1
   10bbe:	ldr	r0, [r2, r3]
   10bc0:	ldr	r3, [pc, #288]	; (10ce4 <btrfs_find_root_search@@Base+0x2a4>)
   10bc2:	ldr	r2, [pc, #292]	; (10ce8 <btrfs_find_root_search@@Base+0x2a8>)
   10bc4:	add	r3, pc
   10bc6:	str	r3, [sp, #8]
   10bc8:	ldr	r3, [pc, #288]	; (10cec <btrfs_find_root_search@@Base+0x2ac>)
   10bca:	add	r2, pc
   10bcc:	str	r1, [sp, #12]
   10bce:	add	r3, pc
   10bd0:	str	r3, [sp, #4]
   10bd2:	movs	r3, #58	; 0x3a
   10bd4:	str	r3, [sp, #0]
   10bd6:	ldr	r3, [pc, #280]	; (10cf0 <btrfs_find_root_search@@Base+0x2b0>)
   10bd8:	ldr	r0, [r0, #0]
   10bda:	add	r3, pc
   10bdc:	blx	881c <__fprintf_chk@plt+0x4>
   10be0:	movs	r1, #16
   10be2:	mov	r0, r4
   10be4:	blx	8680 <backtrace@plt>
   10be8:	movs	r2, #2
   10bea:	mov	r1, r0
   10bec:	mov	r0, r4
   10bee:	blx	8990 <backtrace_symbols_fd@plt>
   10bf2:	blx	8948 <abort@plt>
   10bf6:	ldrd	r3, r4, [sp, #16]
   10bfa:	mov	fp, r0
   10bfc:	adds	r0, #48	; 0x30
   10bfe:	strd	r3, r4, [r0, #-24]
   10c02:	movs	r3, #1
   10c04:	movs	r4, #0
   10c06:	strd	r3, r4, [r0, #-16]
   10c0a:	ldr	r3, [sp, #36]	; 0x24
   10c0c:	str.w	r3, [r0, #-32]
   10c10:	ldr	r3, [sp, #40]	; 0x28
   10c12:	str.w	r3, [r0, #-28]
   10c16:	ldr	r3, [sp, #36]	; 0x24
   10c18:	str.w	r3, [r0, #-8]
   10c1c:	ldr	r3, [sp, #40]	; 0x28
   10c1e:	str.w	r3, [r0, #-4]
   10c22:	bl	15e94 <cache_tree_init@@Base>
   10c26:	mov	r1, fp
   10c28:	mov	r0, sl
   10c2a:	bl	15e9a <insert_cache_extent@@Base>
   10c2e:	subs	r4, r0, #0
   10c30:	bge.n	10c42 <btrfs_find_root_search@@Base+0x202>
   10c32:	mov	r0, r5
   10c34:	bl	16c20 <free_extent_buffer@@Base>
   10c38:	cmp	r4, #0
   10c3a:	beq.w	10b2c <btrfs_find_root_search@@Base+0xec>
   10c3e:	b.n	10ac4 <btrfs_find_root_search@@Base+0x84>
   10c40:	movs	r4, #0
   10c42:	ldrd	r2, r3, [fp, #40]	; 0x28
   10c46:	mov.w	r9, #0
   10c4a:	ldrb.w	r8, [sp, #32]
   10c4e:	cmp	r3, r9
   10c50:	it	eq
   10c52:	cmpeq	r2, r8
   10c54:	bcs.n	10c86 <btrfs_find_root_search@@Base+0x246>
   10c56:	add.w	r0, fp, #48	; 0x30
   10c5a:	bl	160de <free_extent_cache_tree@@Base>
   10c5e:	strd	r8, r9, [fp, #40]	; 0x28
   10c62:	ldr	r3, [sp, #44]	; 0x2c
   10c64:	add.w	r0, fp, #48	; 0x30
   10c68:	mov.w	r8, #0
   10c6c:	strd	r3, r8, [sp]
   10c70:	ldrd	r2, r3, [sp, #48]	; 0x30
   10c74:	bl	15ea8 <add_cache_extent@@Base>
   10c78:	subs	r4, r0, #0
   10c7a:	bge.n	10c82 <btrfs_find_root_search@@Base+0x242>
   10c7c:	cmn.w	r4, #17
   10c80:	bne.n	10c32 <btrfs_find_root_search@@Base+0x1f2>
   10c82:	mov	r4, r8
   10c84:	b.n	10c8e <btrfs_find_root_search@@Base+0x24e>
   10c86:	cmp	r9, r3
   10c88:	it	eq
   10c8a:	cmpeq	r8, r2
   10c8c:	beq.n	10c62 <btrfs_find_root_search@@Base+0x222>
   10c8e:	ldrd	r2, r3, [r7, #24]
   10c92:	ldrd	r0, r1, [sp, #16]
   10c96:	cmp	r1, r3
   10c98:	it	eq
   10c9a:	cmpeq	r0, r2
   10c9c:	bne.n	10c32 <btrfs_find_root_search@@Base+0x1f2>
   10c9e:	ldrb	r3, [r7, #17]
   10ca0:	ldr	r2, [sp, #32]
   10ca2:	cmp	r3, r2
   10ca4:	bne.n	10c32 <btrfs_find_root_search@@Base+0x1f2>
   10ca6:	ldr	r3, [r7, #32]
   10ca8:	cmp	r3, #0
   10caa:	bne.n	10c32 <btrfs_find_root_search@@Base+0x1f2>
   10cac:	ldr	r3, [sp, #56]	; 0x38
   10cae:	cbz	r3, 10cc0 <btrfs_find_root_search@@Base+0x280>
   10cb0:	ldrd	r2, r3, [sp, #48]	; 0x30
   10cb4:	add.w	r0, fp, #48	; 0x30
   10cb8:	bl	15fdc <search_cache_extent@@Base>
   10cbc:	ldr	r3, [sp, #56]	; 0x38
   10cbe:	str	r0, [r3, #0]
   10cc0:	movs	r4, #1
   10cc2:	b.n	10c32 <btrfs_find_root_search@@Base+0x1f2>
   10cc4:	movs	r4, #0
   10cc6:	b.n	10c32 <btrfs_find_root_search@@Base+0x1f2>
   10cc8:	mov	r0, r4
   10cca:	add	sp, #180	; 0xb4
   10ccc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cd0:	orrs	r0, r7
   10cd2:	movs	r5, r0
   10cd4:	orrs	r2, r6
   10cd6:	movs	r5, r0
   10cd8:	lsls	r4, r4, #8
   10cda:	movs	r0, r0
   10cdc:	cmp	r2, r6
   10cde:	movs	r5, r0
   10ce0:	lsls	r4, r6, #8
   10ce2:	movs	r0, r0
   10ce4:	add	r4, pc, #56	; (adr r4, 10d20 <btrfs_find_root_search@@Base+0x2e0>)
   10ce6:	movs	r2, r0
   10ce8:	ldrh	r7, [r0, #54]	; 0x36
   10cea:	movs	r2, r0
   10cec:	add	r4, pc, #60	; (adr r4, 10d2c <btrfs_find_root_search@@Base+0x2ec>)
   10cee:	movs	r2, r0
   10cf0:	add	r3, pc, #944	; (adr r3, 110a4 <check_argc_min@@Base+0x24>)
   10cf2:	movs	r2, r0
   10cf4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10cf8:	sub	sp, #20
   10cfa:	ldr	r7, [pc, #500]	; (10ef0 <btrfs_find_root_search@@Base+0x4b0>)
   10cfc:	mov	r5, r0
   10cfe:	ldrb.w	r8, [sp, #60]	; 0x3c
   10d02:	mov	r6, r1
   10d04:	add	r7, pc
   10d06:	str	r2, [sp, #8]
   10d08:	ldr	r4, [sp, #64]	; 0x40
   10d0a:	eor.w	r8, r8, #1
   10d0e:	ldrb.w	r2, [sp, #56]	; 0x38
   10d12:	cbz	r3, 10d18 <btrfs_find_root_search@@Base+0x2d8>
   10d14:	orr.w	r8, r8, #22
   10d18:	cbz	r2, 10d1e <btrfs_find_root_search@@Base+0x2de>
   10d1a:	orr.w	r8, r8, #8
   10d1e:	cmp	r5, #0
   10d20:	beq.w	10edc <btrfs_find_root_search@@Base+0x49c>
   10d24:	ldr	r3, [r5, #0]
   10d26:	cmp	r3, #0
   10d28:	beq.w	10edc <btrfs_find_root_search@@Base+0x49c>
   10d2c:	ands.w	r9, r8, #8
   10d30:	beq.n	10d60 <btrfs_find_root_search@@Base+0x320>
   10d32:	ldr	r0, [pc, #448]	; (10ef4 <btrfs_find_root_search@@Base+0x4b4>)
   10d34:	add	r0, pc
   10d36:	mov	r1, r4
   10d38:	blx	8930 <fputs@plt+0x4>
   10d3c:	ldr.w	fp, [r5]
   10d40:	movs	r1, #10
   10d42:	mov	r0, fp
   10d44:	blx	8710 <strchr@plt>
   10d48:	cbnz	r0, 10d66 <btrfs_find_root_search@@Base+0x326>
   10d4a:	mov	r1, r4
   10d4c:	mov	r0, fp
   10d4e:	blx	8930 <fputs@plt+0x4>
   10d52:	tst.w	r8, #1
   10d56:	bne.n	10d9e <btrfs_find_root_search@@Base+0x35e>
   10d58:	movs	r0, #0
   10d5a:	add	sp, #20
   10d5c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10d60:	ldr	r0, [pc, #404]	; (10ef8 <btrfs_find_root_search@@Base+0x4b8>)
   10d62:	add	r0, pc
   10d64:	b.n	10d36 <btrfs_find_root_search@@Base+0x2f6>
   10d66:	cmp.w	r9, #0
   10d6a:	beq.n	10d96 <btrfs_find_root_search@@Base+0x356>
   10d6c:	ldr.w	sl, [pc, #396]	; 10efc <btrfs_find_root_search@@Base+0x4bc>
   10d70:	add	sl, pc
   10d72:	add.w	fp, fp, #4294967295	; 0xffffffff
   10d76:	ldrb.w	r0, [fp, #1]!
   10d7a:	cmp	r0, #0
   10d7c:	beq.n	10d52 <btrfs_find_root_search@@Base+0x312>
   10d7e:	mov	r1, r4
   10d80:	blx	8898 <fputc@plt+0x4>
   10d84:	ldrb.w	r3, [fp]
   10d88:	cmp	r3, #10
   10d8a:	bne.n	10d76 <btrfs_find_root_search@@Base+0x336>
   10d8c:	mov	r1, r4
   10d8e:	mov	r0, sl
   10d90:	blx	8930 <fputs@plt+0x4>
   10d94:	b.n	10d76 <btrfs_find_root_search@@Base+0x336>
   10d96:	ldr.w	sl, [pc, #360]	; 10f00 <btrfs_find_root_search@@Base+0x4c0>
   10d9a:	add	sl, pc
   10d9c:	b.n	10d72 <btrfs_find_root_search@@Base+0x332>
   10d9e:	ldr	r3, [r5, #4]
   10da0:	cbnz	r3, 10db6 <btrfs_find_root_search@@Base+0x376>
   10da2:	ldr	r2, [pc, #352]	; (10f04 <btrfs_find_root_search@@Base+0x4c4>)
   10da4:	mov	r3, r6
   10da6:	movs	r1, #1
   10da8:	mov	r0, r4
   10daa:	add	r2, pc
   10dac:	blx	881c <__fprintf_chk@plt+0x4>
   10db0:	mvn.w	r0, #1
   10db4:	b.n	10d5a <btrfs_find_root_search@@Base+0x31a>
   10db6:	mov	r1, r4
   10db8:	movs	r0, #10
   10dba:	blx	8898 <fputc@plt+0x4>
   10dbe:	cmp.w	r9, #0
   10dc2:	bne.n	10e0e <btrfs_find_root_search@@Base+0x3ce>
   10dc4:	mov	r1, r4
   10dc6:	movs	r0, #10
   10dc8:	blx	8898 <fputc@plt+0x4>
   10dcc:	movs	r6, #4
   10dce:	ldr	r3, [r5, #4]
   10dd0:	movs	r1, #1
   10dd2:	ldr	r2, [pc, #308]	; (10f08 <btrfs_find_root_search@@Base+0x4c8>)
   10dd4:	mov	r0, r4
   10dd6:	str	r3, [sp, #4]
   10dd8:	add	r2, pc
   10dda:	ldr	r3, [pc, #304]	; (10f0c <btrfs_find_root_search@@Base+0x4cc>)
   10ddc:	add	r3, pc
   10dde:	str	r3, [sp, #0]
   10de0:	mov	r3, r6
   10de2:	blx	881c <__fprintf_chk@plt+0x4>
   10de6:	ldr	r3, [r5, #8]
   10de8:	cmp	r3, #0
   10dea:	beq.n	10d58 <btrfs_find_root_search@@Base+0x318>
   10dec:	tst.w	r8, #2
   10df0:	beq.n	10d58 <btrfs_find_root_search@@Base+0x318>
   10df2:	ldrb	r3, [r3, #0]
   10df4:	cbz	r3, 10dfe <btrfs_find_root_search@@Base+0x3be>
   10df6:	mov	r1, r4
   10df8:	movs	r0, #10
   10dfa:	blx	8898 <fputc@plt+0x4>
   10dfe:	ldr.w	fp, [pc, #272]	; 10f10 <btrfs_find_root_search@@Base+0x4d0>
   10e02:	adds	r5, #8
   10e04:	ldr.w	sl, [pc, #268]	; 10f14 <btrfs_find_root_search@@Base+0x4d4>
   10e08:	add	fp, pc
   10e0a:	add	sl, pc
   10e0c:	b.n	10e24 <btrfs_find_root_search@@Base+0x3e4>
   10e0e:	movs	r6, #8
   10e10:	b.n	10dce <btrfs_find_root_search@@Base+0x38e>
   10e12:	strd	sl, r3, [sp]
   10e16:	mov	r2, fp
   10e18:	mov	r3, r6
   10e1a:	movs	r1, #1
   10e1c:	mov	r0, r4
   10e1e:	mov	r5, r9
   10e20:	blx	881c <__fprintf_chk@plt+0x4>
   10e24:	mov	r9, r5
   10e26:	ldr.w	r3, [r9], #4
   10e2a:	cmp	r3, #0
   10e2c:	beq.n	10d58 <btrfs_find_root_search@@Base+0x318>
   10e2e:	ldrb	r2, [r3, #0]
   10e30:	cmp	r2, #0
   10e32:	bne.n	10e12 <btrfs_find_root_search@@Base+0x3d2>
   10e34:	tst.w	r8, #4
   10e38:	beq.n	10d58 <btrfs_find_root_search@@Base+0x318>
   10e3a:	ldr.w	sl, [pc, #220]	; 10f18 <btrfs_find_root_search@@Base+0x4d8>
   10e3e:	mov	r1, r4
   10e40:	ldr.w	fp, [pc, #216]	; 10f1c <btrfs_find_root_search@@Base+0x4dc>
   10e44:	movs	r0, #10
   10e46:	blx	8898 <fputc@plt+0x4>
   10e4a:	add	sl, pc
   10e4c:	ldr	r3, [pc, #208]	; (10f20 <btrfs_find_root_search@@Base+0x4e0>)
   10e4e:	add	fp, pc
   10e50:	add	r3, pc
   10e52:	str	r3, [sp, #12]
   10e54:	ldr.w	r8, [r5, #4]!
   10e58:	cmp.w	r8, #0
   10e5c:	beq.w	10d58 <btrfs_find_root_search@@Base+0x318>
   10e60:	mov	r1, sl
   10e62:	mov	r0, r8
   10e64:	blx	837c <strcmp@plt>
   10e68:	cbnz	r0, 10ec6 <btrfs_find_root_search@@Base+0x486>
   10e6a:	mov	r1, r4
   10e6c:	movs	r0, #10
   10e6e:	blx	8898 <fputc@plt+0x4>
   10e72:	ldr.w	r9, [pc, #176]	; 10f24 <btrfs_find_root_search@@Base+0x4e4>
   10e76:	ldr	r2, [pc, #176]	; (10f28 <btrfs_find_root_search@@Base+0x4e8>)
   10e78:	mov	r3, r6
   10e7a:	add	r9, pc
   10e7c:	movs	r1, #1
   10e7e:	add	r2, pc
   10e80:	mov	r0, r4
   10e82:	str.w	r9, [sp]
   10e86:	blx	881c <__fprintf_chk@plt+0x4>
   10e8a:	ldr	r3, [pc, #160]	; (10f2c <btrfs_find_root_search@@Base+0x4ec>)
   10e8c:	ldr	r2, [pc, #160]	; (10f30 <btrfs_find_root_search@@Base+0x4f0>)
   10e8e:	movs	r1, #1
   10e90:	mov	r0, r4
   10e92:	ldr.w	r8, [r7, r3]
   10e96:	add	r2, pc
   10e98:	add.w	r3, r8, #4
   10e9c:	strd	r9, r3, [sp]
   10ea0:	mov	r3, r6
   10ea2:	blx	881c <__fprintf_chk@plt+0x4>
   10ea6:	ldr	r3, [sp, #8]
   10ea8:	lsls	r3, r3, #28
   10eaa:	bpl.n	10ebc <btrfs_find_root_search@@Base+0x47c>
   10eac:	ldr	r2, [pc, #132]	; (10f34 <btrfs_find_root_search@@Base+0x4f4>)
   10eae:	add.w	r3, r8, #16
   10eb2:	movs	r1, #1
   10eb4:	mov	r0, r4
   10eb6:	add	r2, pc
   10eb8:	blx	881c <__fprintf_chk@plt+0x4>
   10ebc:	mov	r1, r4
   10ebe:	movs	r0, #10
   10ec0:	blx	8898 <fputc@plt+0x4>
   10ec4:	b.n	10e54 <btrfs_find_root_search@@Base+0x414>
   10ec6:	ldr	r3, [sp, #12]
   10ec8:	mov	r2, fp
   10eca:	movs	r1, #1
   10ecc:	mov	r0, r4
   10ece:	str.w	r8, [sp, #4]
   10ed2:	str	r3, [sp, #0]
   10ed4:	mov	r3, r6
   10ed6:	blx	881c <__fprintf_chk@plt+0x4>
   10eda:	b.n	10e54 <btrfs_find_root_search@@Base+0x414>
   10edc:	ldr	r2, [pc, #88]	; (10f38 <btrfs_find_root_search@@Base+0x4f8>)
   10ede:	mov	r3, r6
   10ee0:	movs	r1, #1
   10ee2:	mov	r0, r4
   10ee4:	add	r2, pc
   10ee6:	blx	881c <__fprintf_chk@plt+0x4>
   10eea:	mov.w	r0, #4294967295	; 0xffffffff
   10eee:	b.n	10d5a <btrfs_find_root_search@@Base+0x31a>
   10ef0:	lsls	r4, r0
   10ef2:	movs	r5, r0
   10ef4:	add	r2, pc, #788	; (adr r2, 1120c <usage_unknown_option@@Base+0x68>)
   10ef6:	movs	r2, r0
   10ef8:	add	r2, pc, #560	; (adr r2, 1112c <output_format_name@@Base+0x8>)
   10efa:	movs	r2, r0
   10efc:	add	r2, pc, #548	; (adr r2, 11124 <output_format_name@@Base>)
   10efe:	movs	r2, r0
   10f00:	add	r2, pc, #368	; (adr r2, 11074 <check_argc_exact@@Base+0x50>)
   10f02:	movs	r2, r0
   10f04:	add	r2, pc, #336	; (adr r2, 11058 <check_argc_exact@@Base+0x34>)
   10f06:	movs	r2, r0
   10f08:	add	r2, pc, #276	; (adr r2, 11020 <set_argv0@@Base+0x1c>)
   10f0a:	movs	r2, r0
   10f0c:	ldr	r2, [sp, #512]	; 0x200
   10f0e:	movs	r2, r0
   10f10:	add	r2, pc, #84	; (adr r2, 10f68 <btrfs_find_root_search@@Base+0x528>)
   10f12:	movs	r2, r0
   10f14:	ldr	r2, [sp, #328]	; 0x148
   10f16:	movs	r2, r0
   10f18:	add	r1, pc, #872	; (adr r1, 11284 <clean_args_no_options@@Base>)
   10f1a:	movs	r2, r0
   10f1c:	add	r1, pc, #828	; (adr r1, 1125c <usage@@Base+0x10>)
   10f1e:	movs	r2, r0
   10f20:	ldr	r2, [sp, #48]	; 0x30
   10f22:	movs	r2, r0
   10f24:	ldr	r1, [sp, #904]	; 0x388
   10f26:	movs	r2, r0
   10f28:	add	r1, pc, #724	; (adr r1, 11200 <usage_unknown_option@@Base+0x5c>)
   10f2a:	movs	r2, r0
   10f2c:	lsls	r4, r2, #9
   10f2e:	movs	r0, r0
   10f30:	add	r1, pc, #708	; (adr r1, 111f8 <usage_unknown_option@@Base+0x54>)
   10f32:	movs	r2, r0
   10f34:			; <UNDEFINED> instruction: 0xf4f60002
   10f38:	add	r1, pc, #556	; (adr r1, 11168 <usage_command@@Base+0x10>)
   10f3a:	movs	r2, r0
   10f3c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   10f40:	movs	r4, #0
   10f42:	add.w	r8, r0, #8
   10f46:	mov	r6, r1
   10f48:	mov	r7, r2
   10f4a:	mov	r9, r4
   10f4c:	mov.w	sl, #1
   10f50:	ldr.w	r5, [r8], #4
   10f54:	cbnz	r5, 10f5c <btrfs_find_root_search@@Base+0x51c>
   10f56:	add	sp, #16
   10f58:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   10f5c:	ldr	r3, [r5, #16]
   10f5e:	lsls	r3, r3, #31
   10f60:	bmi.n	10fa6 <btrfs_find_root_search@@Base+0x566>
   10f62:	cbz	r6, 10f72 <btrfs_find_root_search@@Base+0x532>
   10f64:	cmp.w	r9, #0
   10f68:	beq.n	10f72 <btrfs_find_root_search@@Base+0x532>
   10f6a:	mov	r1, r7
   10f6c:	movs	r0, #10
   10f6e:	blx	8898 <fputc@plt+0x4>
   10f72:	ldr	r3, [r5, #12]
   10f74:	cbnz	r3, 10fac <btrfs_find_root_search@@Base+0x56c>
   10f76:	cbz	r4, 10f80 <btrfs_find_root_search@@Base+0x540>
   10f78:	mov	r1, r7
   10f7a:	movs	r0, #10
   10f7c:	blx	8898 <fputc@plt+0x4>
   10f80:	ldr	r2, [r5, #16]
   10f82:	str	r7, [sp, #8]
   10f84:	ubfx	r3, r2, #1, #1
   10f88:	strd	sl, r3, [sp]
   10f8c:	mov	r3, r6
   10f8e:	ldr	r1, [r5, #0]
   10f90:	ldr	r0, [r5, #8]
   10f92:	bl	10cf4 <btrfs_find_root_search@@Base+0x2b4>
   10f96:	ldr	r4, [r5, #16]
   10f98:	ands.w	r4, r4, #2
   10f9c:	beq.n	10fa6 <btrfs_find_root_search@@Base+0x566>
   10f9e:	movs	r0, #10
   10fa0:	movs	r4, #0
   10fa2:	blx	8790 <putchar@plt+0x4>
   10fa6:	add.w	r9, r9, #1
   10faa:	b.n	10f50 <btrfs_find_root_search@@Base+0x510>
   10fac:	cbnz	r6, 10fbc <btrfs_find_root_search@@Base+0x57c>
   10fae:	cmp.w	r9, #0
   10fb2:	beq.n	10fbc <btrfs_find_root_search@@Base+0x57c>
   10fb4:	mov	r1, r7
   10fb6:	movs	r0, #10
   10fb8:	blx	8898 <fputc@plt+0x4>
   10fbc:	ldr	r0, [r5, #12]
   10fbe:	mov	r2, r7
   10fc0:	mov	r1, r6
   10fc2:	bl	10f3c <btrfs_find_root_search@@Base+0x4fc>
   10fc6:	cmp	r6, #0
   10fc8:	it	eq
   10fca:	moveq	r4, #1
   10fcc:	b.n	10fa6 <btrfs_find_root_search@@Base+0x566>

00010fce <fixup_argv0@@Base>:
   10fce:	push	{r0, r1, r4, r5, r6, lr}
   10fd0:	mov	r4, r0
   10fd2:	ldr	r5, [pc, #40]	; (10ffc <fixup_argv0@@Base+0x2e>)
   10fd4:	mov	r6, r1
   10fd6:	add	r5, pc
   10fd8:	mov	r0, r5
   10fda:	blx	8704 <strlen@plt>
   10fde:	ldr	r3, [pc, #32]	; (11000 <fixup_argv0@@Base+0x32>)
   10fe0:	movs	r2, #1
   10fe2:	str	r6, [sp, #4]
   10fe4:	add	r3, pc
   10fe6:	str	r3, [sp, #0]
   10fe8:	mov.w	r3, #4294967295	; 0xffffffff
   10fec:	rsb	r1, r0, #4096	; 0x1000
   10ff0:	add	r0, r5
   10ff2:	blx	8984 <__snprintf_chk@plt>
   10ff6:	str	r5, [r4, #0]
   10ff8:	add	sp, #8
   10ffa:	pop	{r4, r5, r6, pc}
   10ffc:	lsrs	r6, r6
   10ffe:	movs	r5, r0
   11000:	ubfx	r0, r9, #0, #3

00011004 <set_argv0@@Base>:
   11004:	push	{r3, lr}
   11006:	mov.w	r2, #4096	; 0x1000
   1100a:	ldr	r3, [pc, #20]	; (11020 <set_argv0@@Base+0x1c>)
   1100c:	ldr	r1, [r0, #0]
   1100e:	add	r3, pc
   11010:	mov	r0, r3
   11012:	blx	879c <strncpy@plt>
   11016:	movs	r2, #0
   11018:	strb.w	r2, [r0, #4095]	; 0xfff
   1101c:	pop	{r3, pc}
   1101e:	nop
   11020:	lsls	r6, r7
   11022:	movs	r5, r0

00011024 <check_argc_exact@@Base>:
   11024:	ldr	r3, [pc, #64]	; (11068 <check_argc_exact@@Base+0x44>)
   11026:	cmp	r0, r1
   11028:	push	{r4, r5, lr}
   1102a:	add	r3, pc
   1102c:	sub	sp, #20
   1102e:	mov	r5, r0
   11030:	mov	r4, r1
   11032:	beq.n	11056 <check_argc_exact@@Base+0x32>
   11034:	ldr	r2, [pc, #52]	; (1106c <check_argc_exact@@Base+0x48>)
   11036:	cmp	r1, #1
   11038:	ldr	r3, [r3, r2]
   1103a:	ldr	r0, [r3, #0]
   1103c:	bgt.n	11060 <check_argc_exact@@Base+0x3c>
   1103e:	ldr	r3, [pc, #48]	; (11070 <check_argc_exact@@Base+0x4c>)
   11040:	add	r3, pc
   11042:	ldr	r2, [pc, #48]	; (11074 <check_argc_exact@@Base+0x50>)
   11044:	movs	r1, #1
   11046:	strd	r3, r5, [sp, #4]
   1104a:	ldr	r3, [pc, #44]	; (11078 <check_argc_exact@@Base+0x54>)
   1104c:	add	r2, pc
   1104e:	str	r4, [sp, #0]
   11050:	add	r3, pc
   11052:	blx	881c <__fprintf_chk@plt+0x4>
   11056:	subs	r0, r5, r4
   11058:	it	ne
   1105a:	movne	r0, #1
   1105c:	add	sp, #20
   1105e:	pop	{r4, r5, pc}
   11060:	ldr	r3, [pc, #24]	; (1107c <check_argc_exact@@Base+0x58>)
   11062:	add	r3, pc
   11064:	b.n	11042 <check_argc_exact@@Base+0x1e>
   11066:	nop
   11068:	subs	r5, #94	; 0x5e
   1106a:	movs	r5, r0
   1106c:	lsls	r4, r6, #8
   1106e:	movs	r0, r0
   11070:	ldr	r0, [sp, #112]	; 0x70
   11072:	movs	r2, r0
   11074:	add	r0, pc, #216	; (adr r0, 11150 <output_format_name@@Base+0x2c>)
   11076:	movs	r2, r0
   11078:	eors	r4, r7
   1107a:	movs	r5, r0
   1107c:	sbfx	r0, sp, #0, #3

00011080 <check_argc_min@@Base>:
   11080:	ldr	r3, [pc, #40]	; (110ac <check_argc_min@@Base+0x2c>)
   11082:	cmp	r0, r1
   11084:	push	{r0, r1, r4, lr}
   11086:	add	r3, pc
   11088:	bge.n	110a8 <check_argc_min@@Base+0x28>
   1108a:	ldr	r2, [pc, #36]	; (110b0 <check_argc_min@@Base+0x30>)
   1108c:	ldr	r4, [r3, r2]
   1108e:	ldr	r3, [pc, #36]	; (110b4 <check_argc_min@@Base+0x34>)
   11090:	ldr	r2, [pc, #36]	; (110b8 <check_argc_min@@Base+0x38>)
   11092:	strd	r0, r1, [sp]
   11096:	add	r3, pc
   11098:	ldr	r0, [r4, #0]
   1109a:	add	r2, pc
   1109c:	movs	r1, #1
   1109e:	blx	881c <__fprintf_chk@plt+0x4>
   110a2:	movs	r0, #1
   110a4:	add	sp, #8
   110a6:	pop	{r4, pc}
   110a8:	movs	r0, #0
   110aa:	b.n	110a4 <check_argc_min@@Base+0x24>
   110ac:	subs	r5, #2
   110ae:	movs	r5, r0
   110b0:	lsls	r4, r6, #8
   110b2:	movs	r0, r0
   110b4:	ands	r6, r6
   110b6:	movs	r5, r0
   110b8:	add	r0, pc, #88	; (adr r0, 11114 <clean_args_no_options_relaxed@@Base+0x1c>)
   110ba:	movs	r2, r0

000110bc <check_argc_max@@Base>:
   110bc:	ldr	r3, [pc, #40]	; (110e8 <check_argc_max@@Base+0x2c>)
   110be:	cmp	r0, r1
   110c0:	push	{r0, r1, r4, lr}
   110c2:	add	r3, pc
   110c4:	ble.n	110e4 <check_argc_max@@Base+0x28>
   110c6:	ldr	r2, [pc, #36]	; (110ec <check_argc_max@@Base+0x30>)
   110c8:	ldr	r4, [r3, r2]
   110ca:	ldr	r3, [pc, #36]	; (110f0 <check_argc_max@@Base+0x34>)
   110cc:	ldr	r2, [pc, #36]	; (110f4 <check_argc_max@@Base+0x38>)
   110ce:	strd	r0, r1, [sp]
   110d2:	add	r3, pc
   110d4:	ldr	r0, [r4, #0]
   110d6:	add	r2, pc
   110d8:	movs	r1, #1
   110da:	blx	881c <__fprintf_chk@plt+0x4>
   110de:	movs	r0, #1
   110e0:	add	sp, #8
   110e2:	pop	{r4, pc}
   110e4:	movs	r0, #0
   110e6:	b.n	110e0 <check_argc_max@@Base+0x24>
   110e8:	subs	r4, #198	; 0xc6
   110ea:	movs	r5, r0
   110ec:	lsls	r4, r6, #8
   110ee:	movs	r0, r0
   110f0:	subs	r7, #250	; 0xfa
   110f2:	movs	r5, r0
   110f4:	add	r0, pc, #68	; (adr r0, 1113c <output_format_name@@Base+0x18>)
   110f6:	movs	r2, r0

000110f8 <clean_args_no_options_relaxed@@Base>:
   110f8:	push	{r4, lr}
   110fa:	cmp	r1, #1
   110fc:	ldr	r4, [pc, #24]	; (11118 <clean_args_no_options_relaxed@@Base+0x20>)
   110fe:	add	r4, pc
   11100:	ble.n	11116 <clean_args_no_options_relaxed@@Base+0x1e>
   11102:	ldr	r1, [pc, #24]	; (1111c <clean_args_no_options_relaxed@@Base+0x24>)
   11104:	ldr	r0, [r2, #4]
   11106:	add	r1, pc
   11108:	blx	837c <strcmp@plt>
   1110c:	cbnz	r0, 11116 <clean_args_no_options_relaxed@@Base+0x1e>
   1110e:	ldr	r3, [pc, #16]	; (11120 <clean_args_no_options_relaxed@@Base+0x28>)
   11110:	movs	r2, #2
   11112:	ldr	r3, [r4, r3]
   11114:	str	r2, [r3, #0]
   11116:	pop	{r4, pc}
   11118:	subs	r4, #138	; 0x8a
   1111a:	movs	r5, r0
   1111c:	str	r3, [sp, #420]	; 0x1a4
   1111e:	movs	r2, r0
   11120:	lsls	r0, r5, #8
	...

00011124 <output_format_name@@Base>:
   11124:	ldr	r3, [pc, #36]	; (1114c <output_format_name@@Base+0x28>)
   11126:	cmp	r0, #4
   11128:	add	r3, pc
   1112a:	beq.n	11140 <output_format_name@@Base+0x1c>
   1112c:	cmp	r0, #8
   1112e:	bne.n	11144 <output_format_name@@Base+0x20>
   11130:	movs	r2, #1
   11132:	movs	r0, #12
   11134:	muls	r0, r2
   11136:	ldr	r2, [pc, #24]	; (11150 <output_format_name@@Base+0x2c>)
   11138:	ldr	r3, [r3, r2]
   1113a:	adds	r0, #4
   1113c:	add	r0, r3
   1113e:	bx	lr
   11140:	movs	r2, #0
   11142:	b.n	11132 <output_format_name@@Base+0xe>
   11144:	ldr	r0, [pc, #12]	; (11154 <output_format_name@@Base+0x30>)
   11146:	add	r0, pc
   11148:	bx	lr
   1114a:	nop
   1114c:	subs	r4, #96	; 0x60
   1114e:	movs	r5, r0
   11150:	lsls	r4, r2, #9
   11152:	movs	r0, r0
   11154:	ldr	r7, [sp, #852]	; 0x354
   11156:	movs	r2, r0

00011158 <usage_command@@Base>:
   11158:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1115a:	mov	r4, r0
   1115c:	ldr	r5, [pc, #56]	; (11198 <usage_command@@Base+0x40>)
   1115e:	mov	r6, r2
   11160:	mov	r3, r1
   11162:	ldr	r0, [r0, #8]
   11164:	add	r5, pc
   11166:	ldr	r1, [r4, #0]
   11168:	ldr	r2, [r4, #16]
   1116a:	cbz	r6, 1118e <usage_command@@Base+0x36>
   1116c:	ldr	r4, [pc, #44]	; (1119c <usage_command@@Base+0x44>)
   1116e:	ldr	r4, [r5, r4]
   11170:	movs	r5, #0
   11172:	ldr	r4, [r4, #0]
   11174:	strd	r5, r5, [sp]
   11178:	str	r4, [sp, #8]
   1117a:	bl	10cf4 <btrfs_find_root_search@@Base+0x2b4>
   1117e:	cbnz	r0, 11192 <usage_command@@Base+0x3a>
   11180:	mov	r1, r4
   11182:	movs	r0, #10
   11184:	add	sp, #16
   11186:	ldmia.w	sp!, {r4, r5, r6, lr}
   1118a:	b.w	8894 <fputc@plt>
   1118e:	ldr	r4, [pc, #16]	; (111a0 <usage_command@@Base+0x48>)
   11190:	b.n	1116e <usage_command@@Base+0x16>
   11192:	add	sp, #16
   11194:	pop	{r4, r5, r6, pc}
   11196:	nop
   11198:	subs	r4, #36	; 0x24
   1119a:	movs	r5, r0
   1119c:	lsls	r4, r6, #8
   1119e:	movs	r0, r0
   111a0:	lsls	r0, r3, #9
	...

000111a4 <usage_unknown_option@@Base>:
   111a4:	push	{r0, r1, r7, lr}
   111a6:	mov	r6, r0
   111a8:	ldr	r3, [r0, #8]
   111aa:	mov	r8, r1
   111ac:	ldr	r7, [pc, #124]	; (1122c <usage_unknown_option@@Base+0x88>)
   111ae:	ldr	r2, [r3, #0]
   111b0:	movs	r3, #0
   111b2:	mov	r4, r3
   111b4:	add	r7, pc
   111b6:	mov	r1, r3
   111b8:	ldrb	r3, [r2, r4]
   111ba:	cmp	r3, #60	; 0x3c
   111bc:	bne.n	11212 <usage_unknown_option@@Base+0x6e>
   111be:	subs	r4, #1
   111c0:	ldr	r3, [pc, #108]	; (11230 <usage_unknown_option@@Base+0x8c>)
   111c2:	movs	r1, #1
   111c4:	ldr	r5, [r7, r3]
   111c6:	mov	r3, r4
   111c8:	str	r2, [sp, #0]
   111ca:	ldr	r2, [pc, #104]	; (11234 <usage_unknown_option@@Base+0x90>)
   111cc:	ldr	r0, [r5, #0]
   111ce:	add	r2, pc
   111d0:	blx	881c <__fprintf_chk@plt+0x4>
   111d4:	ldr	r3, [pc, #96]	; (11238 <usage_unknown_option@@Base+0x94>)
   111d6:	ldr	r3, [r7, r3]
   111d8:	ldr	r3, [r3, #0]
   111da:	cbnz	r3, 11226 <usage_unknown_option@@Base+0x82>
   111dc:	ldr	r3, [pc, #92]	; (1123c <usage_unknown_option@@Base+0x98>)
   111de:	ldr	r2, [pc, #96]	; (11240 <usage_unknown_option@@Base+0x9c>)
   111e0:	ldr	r3, [r7, r3]
   111e2:	add	r2, pc
   111e4:	ldr	r3, [r3, #0]
   111e6:	add.w	r3, r3, #1073741824	; 0x40000000
   111ea:	subs	r3, #1
   111ec:	ldr.w	r3, [r8, r3, lsl #2]
   111f0:	movs	r1, #1
   111f2:	ldr	r0, [r5, #0]
   111f4:	blx	881c <__fprintf_chk@plt+0x4>
   111f8:	ldr	r3, [r6, #8]
   111fa:	ldr	r2, [pc, #72]	; (11244 <usage_unknown_option@@Base+0xa0>)
   111fc:	movs	r1, #1
   111fe:	ldr	r3, [r3, #0]
   11200:	add	r2, pc
   11202:	str	r3, [sp, #0]
   11204:	mov	r3, r4
   11206:	ldr	r0, [r5, #0]
   11208:	blx	881c <__fprintf_chk@plt+0x4>
   1120c:	movs	r0, #1
   1120e:	blx	86f8 <exit@plt>
   11212:	cmp	r3, #91	; 0x5b
   11214:	beq.n	111be <usage_unknown_option@@Base+0x1a>
   11216:	cmp	r1, #32
   11218:	bne.n	1121e <usage_unknown_option@@Base+0x7a>
   1121a:	cmp	r3, #45	; 0x2d
   1121c:	beq.n	111be <usage_unknown_option@@Base+0x1a>
   1121e:	adds	r4, #1
   11220:	cmp	r3, #0
   11222:	bne.n	111b6 <usage_unknown_option@@Base+0x12>
   11224:	b.n	111c0 <usage_unknown_option@@Base+0x1c>
   11226:	ldr	r2, [pc, #32]	; (11248 <usage_unknown_option@@Base+0xa4>)
   11228:	add	r2, pc
   1122a:	b.n	111f0 <usage_unknown_option@@Base+0x4c>
   1122c:	subs	r3, #212	; 0xd4
   1122e:	movs	r5, r0
   11230:	lsls	r4, r6, #8
   11232:	movs	r0, r0
   11234:	ldr	r7, [sp, #340]	; 0x154
   11236:	movs	r2, r0
   11238:	lsls	r0, r6, #8
   1123a:	movs	r0, r0
   1123c:	lsls	r0, r5, #8
   1123e:	movs	r0, r0
   11240:	ldr	r7, [sp, #288]	; 0x120
   11242:	movs	r2, r0
   11244:	ldr	r7, [sp, #356]	; 0x164
   11246:	movs	r2, r0
   11248:	ldr	r7, [sp, #112]	; 0x70
   1124a:	movs	r2, r0

0001124c <usage@@Base>:
   1124c:	push	{r0, r1, r2, r3, r4, lr}
   1124e:	ldr	r3, [pc, #44]	; (1127c <usage@@Base+0x30>)
   11250:	ldr	r2, [pc, #44]	; (11280 <usage@@Base+0x34>)
   11252:	add	r3, pc
   11254:	ldr	r3, [r3, r2]
   11256:	movs	r2, #0
   11258:	mov	r1, r2
   1125a:	ldr	r4, [r3, #0]
   1125c:	movs	r3, #1
   1125e:	strd	r2, r2, [sp]
   11262:	str	r4, [sp, #8]
   11264:	ldr	r0, [r0, #8]
   11266:	bl	10cf4 <btrfs_find_root_search@@Base+0x2b4>
   1126a:	cbnz	r0, 11274 <usage@@Base+0x28>
   1126c:	mov	r1, r4
   1126e:	movs	r0, #10
   11270:	blx	8898 <fputc@plt+0x4>
   11274:	movs	r0, #1
   11276:	blx	86f8 <exit@plt>
   1127a:	nop
   1127c:	subs	r3, #54	; 0x36
   1127e:	movs	r5, r0
   11280:	lsls	r4, r6, #8
	...

00011284 <clean_args_no_options@@Base>:
   11284:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   11288:	mov	r4, r0
   1128a:	ldr	r7, [pc, #56]	; (112c4 <clean_args_no_options@@Base+0x40>)
   1128c:	mov	r5, r1
   1128e:	ldr.w	r8, [pc, #56]	; 112c8 <clean_args_no_options@@Base+0x44>
   11292:	mov	r6, r2
   11294:	add	r7, pc
   11296:	mov.w	r9, #0
   1129a:	add	r8, pc
   1129c:	mov	r3, r7
   1129e:	mov	r2, r8
   112a0:	mov	r1, r6
   112a2:	mov	r0, r5
   112a4:	str.w	r9, [sp]
   112a8:	blx	86d4 <getopt_long@plt>
   112ac:	cmp	r0, #0
   112ae:	blt.n	112bc <clean_args_no_options@@Base+0x38>
   112b0:	ldr	r1, [r4, #8]
   112b2:	cmp	r1, #0
   112b4:	beq.n	1129c <clean_args_no_options@@Base+0x18>
   112b6:	mov	r0, r4
   112b8:	bl	1124c <usage@@Base>
   112bc:	add	sp, #12
   112be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   112c2:	nop
   112c4:	add	r0, pc, #864	; (adr r0, 11628 <help_command_group@@Base+0xe0>)
   112c6:	movs	r2, r0
   112c8:	str	r5, [sp, #776]	; 0x308
   112ca:	movs	r2, r0

000112cc <usage_command_group_short@@Base>:
   112cc:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   112d0:	mov	r5, r0
   112d2:	ldr	r7, [pc, #248]	; (113cc <usage_command_group_short@@Base+0x100>)
   112d4:	ldr	r3, [pc, #248]	; (113d0 <usage_command_group_short@@Base+0x104>)
   112d6:	add	r7, pc
   112d8:	ldr	r6, [r0, #0]
   112da:	ldr	r3, [r7, r3]
   112dc:	ldr	r4, [r3, #0]
   112de:	cmp	r6, #0
   112e0:	bne.n	11360 <usage_command_group_short@@Base+0x94>
   112e2:	mov	r1, r4
   112e4:	movs	r0, #10
   112e6:	blx	8898 <fputc@plt+0x4>
   112ea:	ldr	r0, [pc, #232]	; (113d4 <usage_command_group_short@@Base+0x108>)
   112ec:	mov	r1, r4
   112ee:	ldr.w	r8, [pc, #232]	; 113d8 <usage_command_group_short@@Base+0x10c>
   112f2:	add	r0, pc
   112f4:	adds	r5, #8
   112f6:	blx	8930 <fputs@plt+0x4>
   112fa:	add	r8, pc
   112fc:	mov	r6, r5
   112fe:	ldr.w	r3, [r6], #4
   11302:	cmp	r3, #0
   11304:	bne.n	1138c <usage_command_group_short@@Base+0xc0>
   11306:	ldr	r0, [pc, #212]	; (113dc <usage_command_group_short@@Base+0x110>)
   11308:	mov	r1, r4
   1130a:	ldr	r6, [pc, #212]	; (113e0 <usage_command_group_short@@Base+0x114>)
   1130c:	add	r0, pc
   1130e:	blx	8930 <fputs@plt+0x4>
   11312:	add	r6, pc
   11314:	ldr.w	r3, [r5], #4
   11318:	cmp	r3, #0
   1131a:	bne.n	113aa <usage_command_group_short@@Base+0xde>
   1131c:	mov	r1, r4
   1131e:	movs	r0, #10
   11320:	blx	8898 <fputc@plt+0x4>
   11324:	ldr	r3, [pc, #188]	; (113e4 <usage_command_group_short@@Base+0x118>)
   11326:	ldr	r0, [pc, #192]	; (113e8 <usage_command_group_short@@Base+0x11c>)
   11328:	ldr	r4, [r7, r3]
   1132a:	add	r0, pc
   1132c:	ldr	r1, [r4, #0]
   1132e:	blx	8930 <fputs@plt+0x4>
   11332:	ldr	r0, [pc, #184]	; (113ec <usage_command_group_short@@Base+0x120>)
   11334:	ldr	r1, [r4, #0]
   11336:	add	r0, pc
   11338:	blx	8930 <fputs@plt+0x4>
   1133c:	ldr	r0, [pc, #176]	; (113f0 <usage_command_group_short@@Base+0x124>)
   1133e:	ldr	r1, [r4, #0]
   11340:	add	r0, pc
   11342:	blx	8930 <fputs@plt+0x4>
   11346:	ldr	r0, [pc, #172]	; (113f4 <usage_command_group_short@@Base+0x128>)
   11348:	ldr	r1, [r4, #0]
   1134a:	add	r0, pc
   1134c:	blx	8930 <fputs@plt+0x4>
   11350:	ldr	r0, [pc, #164]	; (113f8 <usage_command_group_short@@Base+0x12c>)
   11352:	ldr	r1, [r4, #0]
   11354:	add	r0, pc
   11356:	add	sp, #8
   11358:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1135c:	b.w	892c <fputs@plt>
   11360:	ldr	r3, [r6, #0]
   11362:	cmp	r3, #0
   11364:	beq.n	112e2 <usage_command_group_short@@Base+0x16>
   11366:	ldr	r2, [pc, #148]	; (113fc <usage_command_group_short@@Base+0x130>)
   11368:	movs	r1, #1
   1136a:	mov	r0, r4
   1136c:	ldr.w	r8, [pc, #144]	; 11400 <usage_command_group_short@@Base+0x134>
   11370:	add	r2, pc
   11372:	blx	881c <__fprintf_chk@plt+0x4>
   11376:	add	r8, pc
   11378:	ldr.w	r3, [r6, #4]!
   1137c:	cmp	r3, #0
   1137e:	beq.n	112e2 <usage_command_group_short@@Base+0x16>
   11380:	mov	r2, r8
   11382:	movs	r1, #1
   11384:	mov	r0, r4
   11386:	blx	881c <__fprintf_chk@plt+0x4>
   1138a:	b.n	11378 <usage_command_group_short@@Base+0xac>
   1138c:	ldr	r2, [r3, #16]
   1138e:	lsls	r1, r2, #31
   11390:	bmi.n	112fe <usage_command_group_short@@Base+0x32>
   11392:	ldr	r1, [r3, #12]
   11394:	cmp	r1, #0
   11396:	beq.n	112fe <usage_command_group_short@@Base+0x32>
   11398:	ldr	r2, [r1, #4]
   1139a:	mov	r0, r4
   1139c:	movs	r1, #1
   1139e:	str	r2, [sp, #0]
   113a0:	mov	r2, r8
   113a2:	ldr	r3, [r3, #0]
   113a4:	blx	881c <__fprintf_chk@plt+0x4>
   113a8:	b.n	112fe <usage_command_group_short@@Base+0x32>
   113aa:	ldr	r2, [r3, #16]
   113ac:	lsls	r2, r2, #31
   113ae:	bmi.n	11314 <usage_command_group_short@@Base+0x48>
   113b0:	ldr	r2, [r3, #12]
   113b2:	cmp	r2, #0
   113b4:	bne.n	11314 <usage_command_group_short@@Base+0x48>
   113b6:	ldr	r2, [r3, #8]
   113b8:	movs	r1, #1
   113ba:	mov	r0, r4
   113bc:	ldr	r2, [r2, #4]
   113be:	str	r2, [sp, #0]
   113c0:	mov	r2, r6
   113c2:	ldr	r3, [r3, #0]
   113c4:	blx	881c <__fprintf_chk@plt+0x4>
   113c8:	b.n	11314 <usage_command_group_short@@Base+0x48>
   113ca:	nop
   113cc:	subs	r2, #178	; 0xb2
   113ce:	movs	r5, r0
   113d0:	lsls	r0, r3, #9
   113d2:	movs	r0, r0
   113d4:	ldr	r6, [sp, #572]	; 0x23c
   113d6:	movs	r2, r0
   113d8:	ldr	r6, [sp, #696]	; 0x2b8
   113da:	movs	r2, r0
   113dc:	ldr	r6, [sp, #676]	; 0x2a4
   113de:	movs	r2, r0
   113e0:	ldr	r6, [sp, #600]	; 0x258
   113e2:	movs	r2, r0
   113e4:	lsls	r4, r6, #8
   113e6:	movs	r0, r0
   113e8:	ldr	r6, [sp, #604]	; 0x25c
   113ea:	movs	r2, r0
   113ec:	ldr	r6, [sp, #808]	; 0x328
   113ee:	movs	r2, r0
   113f0:	ldr	r7, [sp, #28]
   113f2:	movs	r2, r0
   113f4:	ldr	r7, [sp, #256]	; 0x100
   113f6:	movs	r2, r0
   113f8:	ldr	r7, [sp, #476]	; 0x1dc
   113fa:	movs	r2, r0
   113fc:	ldr	r6, [sp, #136]	; 0x88
   113fe:	movs	r2, r0
   11400:	ldr	r6, [sp, #156]	; 0x9c
   11402:	movs	r2, r0

00011404 <usage_command_group@@Base>:
   11404:	ldr	r3, [pc, #120]	; (11480 <usage_command_group@@Base+0x7c>)
   11406:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1140a:	add	r3, pc
   1140c:	ldr	r5, [r0, #0]
   1140e:	mov	r6, r0
   11410:	mov	r7, r1
   11412:	cbz	r2, 1143e <usage_command_group@@Base+0x3a>
   11414:	ldr	r2, [pc, #108]	; (11484 <usage_command_group@@Base+0x80>)
   11416:	ldr	r3, [r3, r2]
   11418:	ldr	r4, [r3, #0]
   1141a:	cbnz	r5, 11442 <usage_command_group@@Base+0x3e>
   1141c:	mov	r1, r4
   1141e:	movs	r0, #10
   11420:	blx	8898 <fputc@plt+0x4>
   11424:	mov	r2, r4
   11426:	mov	r1, r7
   11428:	mov	r0, r6
   1142a:	bl	10f3c <btrfs_find_root_search@@Base+0x4fc>
   1142e:	mov	r1, r4
   11430:	movs	r0, #10
   11432:	blx	8898 <fputc@plt+0x4>
   11436:	ldr	r3, [r6, #4]
   11438:	cbnz	r3, 1146e <usage_command_group@@Base+0x6a>
   1143a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1143e:	ldr	r2, [pc, #72]	; (11488 <usage_command_group@@Base+0x84>)
   11440:	b.n	11416 <usage_command_group@@Base+0x12>
   11442:	ldr	r3, [r5, #0]
   11444:	cmp	r3, #0
   11446:	beq.n	1141c <usage_command_group@@Base+0x18>
   11448:	ldr	r2, [pc, #64]	; (1148c <usage_command_group@@Base+0x88>)
   1144a:	movs	r1, #1
   1144c:	mov	r0, r4
   1144e:	ldr.w	r8, [pc, #64]	; 11490 <usage_command_group@@Base+0x8c>
   11452:	add	r2, pc
   11454:	blx	881c <__fprintf_chk@plt+0x4>
   11458:	add	r8, pc
   1145a:	ldr.w	r3, [r5, #4]!
   1145e:	cmp	r3, #0
   11460:	beq.n	1141c <usage_command_group@@Base+0x18>
   11462:	mov	r2, r8
   11464:	movs	r1, #1
   11466:	mov	r0, r4
   11468:	blx	881c <__fprintf_chk@plt+0x4>
   1146c:	b.n	1145a <usage_command_group@@Base+0x56>
   1146e:	ldr	r2, [pc, #36]	; (11494 <usage_command_group@@Base+0x90>)
   11470:	mov	r0, r4
   11472:	movs	r1, #1
   11474:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   11478:	add	r2, pc
   1147a:	b.w	8818 <__fprintf_chk@plt>
   1147e:	nop
   11480:	subs	r1, #126	; 0x7e
   11482:	movs	r5, r0
   11484:	lsls	r4, r6, #8
   11486:	movs	r0, r0
   11488:	lsls	r0, r3, #9
   1148a:	movs	r0, r0
   1148c:	ldr	r5, [sp, #256]	; 0x100
   1148e:	movs	r2, r0
   11490:	ldr	r5, [sp, #276]	; 0x114
   11492:	movs	r2, r0
   11494:	ldr	r6, [sp, #920]	; 0x398
   11496:	movs	r2, r0

00011498 <help_unknown_token@@Base>:
   11498:	ldr	r3, [pc, #44]	; (114c8 <help_unknown_token@@Base+0x30>)
   1149a:	mov	r4, r1
   1149c:	push	{r0, r1, r2, lr}
   1149e:	add	r3, pc
   114a0:	ldr	r2, [pc, #40]	; (114cc <help_unknown_token@@Base+0x34>)
   114a2:	movs	r1, #1
   114a4:	ldr	r5, [r3, r2]
   114a6:	ldr	r3, [pc, #40]	; (114d0 <help_unknown_token@@Base+0x38>)
   114a8:	ldr	r2, [pc, #40]	; (114d4 <help_unknown_token@@Base+0x3c>)
   114aa:	add	r3, pc
   114ac:	str	r0, [sp, #0]
   114ae:	add	r2, pc
   114b0:	ldr	r0, [r5, #0]
   114b2:	blx	881c <__fprintf_chk@plt+0x4>
   114b6:	mov	r0, r4
   114b8:	movs	r2, #1
   114ba:	movs	r1, #0
   114bc:	bl	11404 <usage_command_group@@Base>
   114c0:	movs	r0, #1
   114c2:	blx	86f8 <exit@plt>
   114c6:	nop
   114c8:	subs	r0, #234	; 0xea
   114ca:	movs	r5, r0
   114cc:	lsls	r4, r6, #8
   114ce:	movs	r0, r0
   114d0:	subs	r4, #34	; 0x22
   114d2:	movs	r5, r0
   114d4:	ldr	r6, [sp, #380]	; 0x17c
   114d6:	movs	r2, r0

000114d8 <help_ambiguous_token@@Base>:
   114d8:	ldr	r3, [pc, #84]	; (11530 <help_ambiguous_token@@Base+0x58>)
   114da:	mov	r4, r1
   114dc:	ldr	r2, [pc, #84]	; (11534 <help_ambiguous_token@@Base+0x5c>)
   114de:	mov	r5, r0
   114e0:	add	r3, pc
   114e2:	ldr.w	r8, [pc, #84]	; 11538 <help_ambiguous_token@@Base+0x60>
   114e6:	push	{r0, r1, r7, lr}
   114e8:	movs	r1, #1
   114ea:	ldr	r7, [r3, r2]
   114ec:	adds	r4, #8
   114ee:	ldr	r3, [pc, #76]	; (1153c <help_ambiguous_token@@Base+0x64>)
   114f0:	add	r8, pc
   114f2:	ldr	r2, [pc, #76]	; (11540 <help_ambiguous_token@@Base+0x68>)
   114f4:	str	r0, [sp, #0]
   114f6:	add	r3, pc
   114f8:	add	r2, pc
   114fa:	ldr	r0, [r7, #0]
   114fc:	blx	881c <__fprintf_chk@plt+0x4>
   11500:	ldr	r0, [pc, #64]	; (11544 <help_ambiguous_token@@Base+0x6c>)
   11502:	ldr	r1, [r7, #0]
   11504:	add	r0, pc
   11506:	blx	8930 <fputs@plt+0x4>
   1150a:	ldr.w	r6, [r4], #4
   1150e:	cbnz	r6, 11516 <help_ambiguous_token@@Base+0x3e>
   11510:	movs	r0, #1
   11512:	blx	86f8 <exit@plt>
   11516:	ldr	r0, [r6, #0]
   11518:	mov	r1, r5
   1151a:	bl	31b3c <prefixcmp@@Base>
   1151e:	cmp	r0, #0
   11520:	bne.n	1150a <help_ambiguous_token@@Base+0x32>
   11522:	ldr	r3, [r6, #0]
   11524:	mov	r2, r8
   11526:	ldr	r0, [r7, #0]
   11528:	movs	r1, #1
   1152a:	blx	881c <__fprintf_chk@plt+0x4>
   1152e:	b.n	1150a <help_ambiguous_token@@Base+0x32>
   11530:	subs	r0, #168	; 0xa8
   11532:	movs	r5, r0
   11534:	lsls	r4, r6, #8
   11536:	movs	r0, r0
   11538:	ldr	r6, [sp, #436]	; 0x1b4
   1153a:	movs	r2, r0
   1153c:	subs	r3, #214	; 0xd6
   1153e:	movs	r5, r0
   11540:	ldr	r6, [sp, #180]	; 0xb4
   11542:	movs	r2, r0
   11544:	ldr	r6, [sp, #236]	; 0xec
   11546:	movs	r2, r0

00011548 <help_command_group@@Base>:
   11548:	cmp	r1, #1
   1154a:	push	{r4, lr}
   1154c:	mov	r4, r0
   1154e:	ble.n	1156c <help_command_group@@Base+0x24>
   11550:	ldr	r1, [pc, #28]	; (11570 <help_command_group@@Base+0x28>)
   11552:	ldr	r0, [r2, #4]
   11554:	add	r1, pc
   11556:	blx	837c <strcmp@plt>
   1155a:	clz	r1, r0
   1155e:	lsrs	r1, r1, #5
   11560:	mov	r0, r4
   11562:	movs	r2, #0
   11564:	ldmia.w	sp!, {r4, lr}
   11568:	b.w	11404 <usage_command_group@@Base>
   1156c:	movs	r1, #0
   1156e:	b.n	11560 <help_command_group@@Base+0x18>
   11570:	ldr	r6, [sp, #56]	; 0x38
   11572:	movs	r2, r0
   11574:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11578:	sub.w	sp, sp, #4096	; 0x1000
   1157c:	sub	sp, #20
   1157e:	mov	r4, r1
   11580:	ldr	r1, [pc, #448]	; (11744 <help_command_group@@Base+0x1fc>)
   11582:	mov	r5, r2
   11584:	mov	r9, r3
   11586:	ldr	r2, [pc, #448]	; (11748 <help_command_group@@Base+0x200>)
   11588:	add.w	r3, sp, #4128	; 0x1020
   1158c:	add	r1, pc
   1158e:	add	r6, sp, #16
   11590:	adds	r3, #24
   11592:	ldr	r2, [r1, r2]
   11594:	mov	fp, r0
   11596:	ldr	r7, [r3, #0]
   11598:	add.w	r3, sp, #4096	; 0x1000
   1159c:	ldr	r2, [r2, #0]
   1159e:	str	r2, [r3, #12]
   115a0:	mov.w	r2, #0
   115a4:	mov	r0, r6
   115a6:	movw	r2, #4092	; 0xffc
   115aa:	movs	r1, #0
   115ac:	adds	r3, #12
   115ae:	str.w	r1, [r6, #-4]
   115b2:	sub.w	sl, r6, #4
   115b6:	blx	8780 <memset@plt+0x4>
   115ba:	mov	r8, r4
   115bc:	mov	r2, r5
   115be:	cmp.w	fp, #0
   115c2:	beq.n	115fa <help_command_group@@Base+0xb2>
   115c4:	add.w	r1, r4, #4096	; 0x1000
   115c8:	mov	r0, r4
   115ca:	bl	138d0 <path_cat_out@@Base>
   115ce:	subs	r4, r0, #0
   115d0:	bge.n	11612 <help_command_group@@Base+0xca>
   115d2:	ldr	r0, [pc, #376]	; (1174c <help_command_group@@Base+0x204>)
   115d4:	mov	r2, r5
   115d6:	mov	r1, r9
   115d8:	add	r0, pc
   115da:	bl	1747c <__btrfs_error@@Base>
   115de:	ldr	r1, [pc, #368]	; (11750 <help_command_group@@Base+0x208>)
   115e0:	add.w	r3, sp, #4096	; 0x1000
   115e4:	ldr	r2, [pc, #352]	; (11748 <help_command_group@@Base+0x200>)
   115e6:	adds	r3, #12
   115e8:	add	r1, pc
   115ea:	ldr	r2, [r1, r2]
   115ec:	ldr	r1, [r2, #0]
   115ee:	ldr	r2, [r3, #0]
   115f0:	eors	r1, r2
   115f2:	beq.w	11736 <help_command_group@@Base+0x1ee>
   115f6:	blx	84cc <__stack_chk_fail@plt>
   115fa:	mov	r1, r4
   115fc:	mov	r0, sl
   115fe:	bl	138d0 <path_cat_out@@Base>
   11602:	subs	r4, r0, #0
   11604:	bge.n	11610 <help_command_group@@Base+0xc8>
   11606:	ldr	r0, [pc, #332]	; (11754 <help_command_group@@Base+0x20c>)
   11608:	mov	r2, r5
   1160a:	mov	r1, r9
   1160c:	add	r0, pc
   1160e:	b.n	115da <help_command_group@@Base+0x92>
   11610:	mov	r8, sl
   11612:	ldr	r1, [pc, #324]	; (11758 <help_command_group@@Base+0x210>)
   11614:	mov	r2, r9
   11616:	movs	r0, #1
   11618:	ldr.w	sl, [pc, #320]	; 1175c <help_command_group@@Base+0x214>
   1161c:	add	r1, pc
   1161e:	movs	r4, #0
   11620:	blx	87f4 <__printf_chk@plt+0x4>
   11624:	mov	r0, r8
   11626:	blx	8704 <strlen@plt>
   1162a:	add	sl, pc
   1162c:	add.w	r9, r8, r0
   11630:	cmp	r8, r9
   11632:	bne.n	11642 <help_command_group@@Base+0xfa>
   11634:	cmp	r7, #0
   11636:	bne.n	11716 <help_command_group@@Base+0x1ce>
   11638:	movs	r0, #10
   1163a:	movs	r4, #0
   1163c:	blx	8790 <putchar@plt+0x4>
   11640:	b.n	115de <help_command_group@@Base+0x96>
   11642:	ldrb.w	r5, [r8], #1
   11646:	cmp	r5, #32
   11648:	bhi.n	11672 <help_command_group@@Base+0x12a>
   1164a:	cmp	r5, #6
   1164c:	bls.n	11676 <help_command_group@@Base+0x12e>
   1164e:	subs	r3, r5, #7
   11650:	cmp	r3, #25
   11652:	bhi.n	11676 <help_command_group@@Base+0x12e>
   11654:	tbb	[pc, r3]
   11658:	cmp	r5, #37	; 0x25
   1165a:	subs	r4, #70	; 0x46
   1165c:	adds	r7, #75	; 0x4b
   1165e:	lsrs	r1, r0, #29
   11660:	lsrs	r7, r1, #28
   11662:	lsrs	r7, r1, #28
   11664:	lsrs	r7, r1, #28
   11666:	lsrs	r7, r1, #28
   11668:	lsrs	r7, r1, #28
   1166a:	lsrs	r7, r1, #28
   1166c:	lsrs	r2, r6, #28
   1166e:	lsrs	r7, r1, #28
   11670:	str	r7, [r1, r0]
   11672:	cmp	r5, #92	; 0x5c
   11674:	beq.n	11702 <help_command_group@@Base+0x1ba>
   11676:	blx	86e0 <__ctype_b_loc@plt>
   1167a:	ldr	r3, [r0, #0]
   1167c:	ldrh.w	r3, [r3, r5, lsl #1]
   11680:	lsls	r3, r3, #17
   11682:	bmi.n	1170c <help_command_group@@Base+0x1c4>
   11684:	ubfx	r3, r5, #3, #3
   11688:	lsrs	r2, r5, #6
   1168a:	and.w	r5, r5, #7
   1168e:	adds	r3, #48	; 0x30
   11690:	adds	r5, #48	; 0x30
   11692:	adds	r2, #48	; 0x30
   11694:	mov	r1, sl
   11696:	movs	r0, #1
   11698:	str	r5, [sp, #0]
   1169a:	adds	r4, #4
   1169c:	blx	87f4 <__printf_chk@plt+0x4>
   116a0:	b.n	11630 <help_command_group@@Base+0xe8>
   116a2:	movs	r0, #92	; 0x5c
   116a4:	blx	8790 <putchar@plt+0x4>
   116a8:	movs	r0, #97	; 0x61
   116aa:	blx	8790 <putchar@plt+0x4>
   116ae:	adds	r4, #2
   116b0:	b.n	11630 <help_command_group@@Base+0xe8>
   116b2:	movs	r0, #92	; 0x5c
   116b4:	blx	8790 <putchar@plt+0x4>
   116b8:	movs	r0, #98	; 0x62
   116ba:	b.n	116aa <help_command_group@@Base+0x162>
   116bc:	movs	r0, #92	; 0x5c
   116be:	blx	8790 <putchar@plt+0x4>
   116c2:	movs	r0, #101	; 0x65
   116c4:	b.n	116aa <help_command_group@@Base+0x162>
   116c6:	movs	r0, #92	; 0x5c
   116c8:	blx	8790 <putchar@plt+0x4>
   116cc:	movs	r0, #102	; 0x66
   116ce:	b.n	116aa <help_command_group@@Base+0x162>
   116d0:	movs	r0, #92	; 0x5c
   116d2:	blx	8790 <putchar@plt+0x4>
   116d6:	movs	r0, #110	; 0x6e
   116d8:	b.n	116aa <help_command_group@@Base+0x162>
   116da:	movs	r0, #92	; 0x5c
   116dc:	blx	8790 <putchar@plt+0x4>
   116e0:	movs	r0, #114	; 0x72
   116e2:	b.n	116aa <help_command_group@@Base+0x162>
   116e4:	movs	r0, #92	; 0x5c
   116e6:	blx	8790 <putchar@plt+0x4>
   116ea:	movs	r0, #116	; 0x74
   116ec:	b.n	116aa <help_command_group@@Base+0x162>
   116ee:	movs	r0, #92	; 0x5c
   116f0:	blx	8790 <putchar@plt+0x4>
   116f4:	movs	r0, #118	; 0x76
   116f6:	b.n	116aa <help_command_group@@Base+0x162>
   116f8:	movs	r0, #92	; 0x5c
   116fa:	blx	8790 <putchar@plt+0x4>
   116fe:	movs	r0, #32
   11700:	b.n	116aa <help_command_group@@Base+0x162>
   11702:	mov	r0, r5
   11704:	blx	8790 <putchar@plt+0x4>
   11708:	mov	r0, r5
   1170a:	b.n	116aa <help_command_group@@Base+0x162>
   1170c:	mov	r0, r5
   1170e:	adds	r4, #1
   11710:	blx	8790 <putchar@plt+0x4>
   11714:	b.n	11630 <help_command_group@@Base+0xe8>
   11716:	adds	r4, #1
   11718:	movs	r0, #32
   1171a:	blx	8790 <putchar@plt+0x4>
   1171e:	cmp	r4, #31
   11720:	ble.n	11716 <help_command_group@@Base+0x1ce>
   11722:	add.w	r2, sp, #4128	; 0x1020
   11726:	mov	r1, r7
   11728:	adds	r2, #28
   1172a:	movs	r0, #1
   1172c:	str.w	r2, [r6, #-8]
   11730:	blx	8470 <__vprintf_chk@plt>
   11734:	b.n	11638 <help_command_group@@Base+0xf0>
   11736:	mov	r0, r4
   11738:	add.w	sp, sp, #4096	; 0x1000
   1173c:	add	sp, #20
   1173e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11742:	nop
   11744:	adds	r7, #252	; 0xfc
   11746:	movs	r5, r0
   11748:	lsls	r4, r4, #8
   1174a:	movs	r0, r0
   1174c:	ldr	r5, [sp, #752]	; 0x2f0
   1174e:	movs	r2, r0
   11750:	adds	r7, #160	; 0xa0
   11752:	movs	r5, r0
   11754:	ldr	r5, [sp, #544]	; 0x220
   11756:	movs	r2, r0
   11758:	ldr	r5, [sp, #568]	; 0x238
   1175a:	movs	r2, r0
   1175c:	ldr	r5, [sp, #536]	; 0x218
   1175e:	movs	r2, r0
   11760:	push	{r4, r5, lr}
   11762:	sub	sp, #28
   11764:	strd	r2, r3, [sp, #8]
   11768:	mov	r2, r0
   1176a:	ldr	r3, [pc, #28]	; (11788 <help_command_group@@Base+0x240>)
   1176c:	movs	r0, #0
   1176e:	ldrd	r4, r5, [sp, #40]	; 0x28
   11772:	add	r3, pc
   11774:	str	r3, [sp, #0]
   11776:	ldr	r3, [pc, #20]	; (1178c <help_command_group@@Base+0x244>)
   11778:	ldr	r1, [sp, #48]	; 0x30
   1177a:	add	r3, pc
   1177c:	strd	r4, r5, [sp, #16]
   11780:	bl	11574 <help_command_group@@Base+0x2c>
   11784:	add	sp, #28
   11786:	pop	{r4, r5, pc}
   11788:	ldr	r4, [sp, #336]	; 0x150
   1178a:	movs	r2, r0
   1178c:	ldr	r4, [sp, #248]	; 0xf8
   1178e:	movs	r2, r0
   11790:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   11792:	strd	r2, r3, [sp, #16]
   11796:	ldrd	r2, r3, [sp, #32]
   1179a:	ldr	r1, [sp, #40]	; 0x28
   1179c:	strd	r2, r3, [sp, #8]
   117a0:	mov	r2, r0
   117a2:	ldr	r3, [pc, #20]	; (117b8 <help_command_group@@Base+0x270>)
   117a4:	movs	r0, #0
   117a6:	add	r3, pc
   117a8:	str	r3, [sp, #0]
   117aa:	ldr	r3, [pc, #16]	; (117bc <help_command_group@@Base+0x274>)
   117ac:	add	r3, pc
   117ae:	bl	11574 <help_command_group@@Base+0x2c>
   117b2:	add	sp, #28
   117b4:	ldr.w	pc, [sp], #4
   117b8:	ldr	r4, [sp, #236]	; 0xec
   117ba:	movs	r2, r0
   117bc:	ldr	r4, [sp, #188]	; 0xbc
   117be:	movs	r2, r0
   117c0:	push	{r0, r1, r2, r3, r4, lr}
   117c2:	strd	r2, r3, [sp, #8]
   117c6:	mov	r2, r0
   117c8:	ldr	r3, [pc, #20]	; (117e0 <help_command_group@@Base+0x298>)
   117ca:	movs	r0, #0
   117cc:	ldr	r1, [sp, #24]
   117ce:	add	r3, pc
   117d0:	str	r3, [sp, #0]
   117d2:	ldr	r3, [pc, #16]	; (117e4 <help_command_group@@Base+0x29c>)
   117d4:	add	r3, pc
   117d6:	bl	11574 <help_command_group@@Base+0x2c>
   117da:	add	sp, #20
   117dc:	ldr.w	pc, [sp], #4
   117e0:	ldr	r4, [sp, #172]	; 0xac
   117e2:	movs	r2, r0
   117e4:	ldr	r4, [sp, #124]	; 0x7c
   117e6:	movs	r2, r0
   117e8:	push	{r0, r1, r2, r3, r4, lr}
   117ea:	strd	r2, r3, [sp, #8]
   117ee:	mov	r2, r0
   117f0:	ldr	r3, [pc, #20]	; (11808 <help_command_group@@Base+0x2c0>)
   117f2:	movs	r0, #0
   117f4:	ldr	r1, [sp, #24]
   117f6:	add	r3, pc
   117f8:	str	r3, [sp, #0]
   117fa:	ldr	r3, [pc, #16]	; (1180c <help_command_group@@Base+0x2c4>)
   117fc:	add	r3, pc
   117fe:	bl	11574 <help_command_group@@Base+0x2c>
   11802:	add	sp, #20
   11804:	ldr.w	pc, [sp], #4
   11808:	ldr	r4, [sp, #88]	; 0x58
   1180a:	movs	r2, r0
   1180c:	ldr	r4, [sp, #28]
   1180e:	movs	r2, r0
   11810:	push	{r0, r1, r2, lr}
   11812:	mov	r3, r1
   11814:	str	r3, [sp, #4]
   11816:	mov	r1, r2
   11818:	ldr	r3, [pc, #20]	; (11830 <help_command_group@@Base+0x2e8>)
   1181a:	mov	r2, r0
   1181c:	movs	r0, #0
   1181e:	add	r3, pc
   11820:	str	r3, [sp, #0]
   11822:	ldr	r3, [pc, #16]	; (11834 <help_command_group@@Base+0x2ec>)
   11824:	add	r3, pc
   11826:	bl	11574 <help_command_group@@Base+0x2c>
   1182a:	add	sp, #12
   1182c:	ldr.w	pc, [sp], #4
   11830:	ldr	r4, [sp, #20]
   11832:	movs	r2, r0
   11834:	ldr	r3, [sp, #968]	; 0x3c8
   11836:	movs	r2, r0
   11838:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1183a:	strd	r2, r3, [sp, #12]
   1183e:	mov	r2, r0
   11840:	strd	r1, r3, [sp, #4]
   11844:	movs	r0, #0
   11846:	ldr	r3, [pc, #20]	; (1185c <help_command_group@@Base+0x314>)
   11848:	ldr	r1, [sp, #32]
   1184a:	add	r3, pc
   1184c:	str	r3, [sp, #0]
   1184e:	ldr	r3, [pc, #16]	; (11860 <help_command_group@@Base+0x318>)
   11850:	add	r3, pc
   11852:	bl	11574 <help_command_group@@Base+0x2c>
   11856:	add	sp, #28
   11858:	ldr.w	pc, [sp], #4
   1185c:	ldr	r3, [sp, #940]	; 0x3ac
   1185e:	movs	r2, r0
   11860:	ldr	r3, [sp, #876]	; 0x36c
   11862:	movs	r2, r0
   11864:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11868:	sub.w	sp, sp, #4128	; 0x1020
   1186c:	sub	sp, #24
   1186e:	mov	r6, r3
   11870:	add.w	r3, sp, #4192	; 0x1060
   11874:	ldr	r4, [pc, #164]	; (1191c <help_command_group@@Base+0x3d4>)
   11876:	adds	r3, #8
   11878:	mov	r5, r0
   1187a:	mov	r7, r2
   1187c:	ldr	r0, [pc, #160]	; (11920 <help_command_group@@Base+0x3d8>)
   1187e:	ldr	r2, [r3, #0]
   11880:	add.w	r3, sp, #4192	; 0x1060
   11884:	add	r4, pc
   11886:	adds	r3, #24
   11888:	add.w	r8, sp, #52	; 0x34
   1188c:	ldr	r1, [r3, #0]
   1188e:	ldr	r0, [r4, r0]
   11890:	add.w	r3, sp, #4128	; 0x1020
   11894:	adds	r3, #20
   11896:	ldr	r0, [r0, #0]
   11898:	str	r0, [r3, #0]
   1189a:	mov.w	r0, #0
   1189e:	mov	r0, r8
   118a0:	strd	r1, r2, [sp, #40]	; 0x28
   118a4:	bl	138d0 <path_cat_out@@Base>
   118a8:	ldrd	r1, r2, [sp, #40]	; 0x28
   118ac:	subs	r4, r0, #0
   118ae:	bge.n	118d6 <help_command_group@@Base+0x38e>
   118b0:	ldr	r1, [pc, #112]	; (11924 <help_command_group@@Base+0x3dc>)
   118b2:	ldr	r0, [pc, #116]	; (11928 <help_command_group@@Base+0x3e0>)
   118b4:	add	r1, pc
   118b6:	add	r0, pc
   118b8:	bl	1747c <__btrfs_error@@Base>
   118bc:	ldr	r1, [pc, #108]	; (1192c <help_command_group@@Base+0x3e4>)
   118be:	add.w	r3, sp, #4128	; 0x1020
   118c2:	ldr	r2, [pc, #92]	; (11920 <help_command_group@@Base+0x3d8>)
   118c4:	adds	r3, #20
   118c6:	add	r1, pc
   118c8:	ldr	r2, [r1, r2]
   118ca:	ldr	r1, [r2, #0]
   118cc:	ldr	r2, [r3, #0]
   118ce:	eors	r1, r2
   118d0:	beq.n	11910 <help_command_group@@Base+0x3c8>
   118d2:	blx	84cc <__stack_chk_fail@plt>
   118d6:	add.w	r3, sp, #4192	; 0x1060
   118da:	movs	r0, #0
   118dc:	adds	r3, #16
   118de:	ldrd	r2, r3, [r3]
   118e2:	str.w	r8, [sp, #24]
   118e6:	strd	r2, r3, [sp, #32]
   118ea:	add.w	r3, sp, #4160	; 0x1040
   118ee:	adds	r3, #16
   118f0:	ldrd	r2, r3, [r3]
   118f4:	strd	r7, r6, [sp, #8]
   118f8:	strd	r2, r3, [sp, #16]
   118fc:	mov	r2, r5
   118fe:	ldr	r3, [pc, #48]	; (11930 <help_command_group@@Base+0x3e8>)
   11900:	add	r3, pc
   11902:	str	r3, [sp, #0]
   11904:	ldr	r3, [pc, #44]	; (11934 <help_command_group@@Base+0x3ec>)
   11906:	add	r3, pc
   11908:	bl	11574 <help_command_group@@Base+0x2c>
   1190c:	mov	r4, r0
   1190e:	b.n	118bc <help_command_group@@Base+0x374>
   11910:	mov	r0, r4
   11912:	add.w	sp, sp, #4128	; 0x1020
   11916:	add	sp, #24
   11918:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1191c:	adds	r5, #4
   1191e:	movs	r5, r0
   11920:	lsls	r4, r4, #8
   11922:	movs	r0, r0
   11924:	ldr	r3, [sp, #616]	; 0x268
   11926:	movs	r2, r0
   11928:	ldr	r2, [sp, #888]	; 0x378
   1192a:	movs	r2, r0
   1192c:	adds	r4, #194	; 0xc2
   1192e:	movs	r5, r0
   11930:	ldr	r3, [sp, #336]	; 0x150
   11932:	movs	r2, r0
   11934:	ldr	r3, [sp, #288]	; 0x120
   11936:	movs	r2, r0
   11938:	push	{r4, r5, lr}
   1193a:	sub	sp, #28
   1193c:	strd	r2, r3, [sp, #8]
   11940:	mov	r2, r0
   11942:	ldr	r3, [pc, #28]	; (11960 <help_command_group@@Base+0x418>)
   11944:	movs	r0, #0
   11946:	ldrd	r4, r5, [sp, #40]	; 0x28
   1194a:	add	r3, pc
   1194c:	str	r3, [sp, #0]
   1194e:	ldr	r3, [pc, #20]	; (11964 <help_command_group@@Base+0x41c>)
   11950:	ldr	r1, [sp, #48]	; 0x30
   11952:	add	r3, pc
   11954:	strd	r4, r5, [sp, #16]
   11958:	bl	11574 <help_command_group@@Base+0x2c>
   1195c:	add	sp, #28
   1195e:	pop	{r4, r5, pc}
   11960:	ldr	r2, [sp, #496]	; 0x1f0
   11962:	movs	r2, r0
   11964:	ldr	r3, [sp, #196]	; 0xc4
   11966:	movs	r2, r0
   11968:	ldr	r3, [pc, #20]	; (11980 <help_command_group@@Base+0x438>)
   1196a:	push	{r0, r1, r2, lr}
   1196c:	add	r3, pc
   1196e:	mov	r2, r0
   11970:	movs	r0, #0
   11972:	str	r0, [sp, #0]
   11974:	bl	11574 <help_command_group@@Base+0x2c>
   11978:	add	sp, #12
   1197a:	ldr.w	pc, [sp], #4
   1197e:	nop
   11980:	movs	r6, #17
   11982:	movs	r4, r0
   11984:	ldr	r3, [pc, #20]	; (1199c <help_command_group@@Base+0x454>)
   11986:	push	{r0, r1, r2, lr}
   11988:	add	r3, pc
   1198a:	mov	r2, r0
   1198c:	movs	r0, #0
   1198e:	str	r0, [sp, #0]
   11990:	bl	11574 <help_command_group@@Base+0x2c>
   11994:	add	sp, #12
   11996:	ldr.w	pc, [sp], #4
   1199a:	nop
   1199c:	movs	r6, #5
   1199e:	movs	r4, r0
   119a0:	push	{r0, r1, r2, lr}
   119a2:	mov	r3, r1
   119a4:	str	r3, [sp, #4]
   119a6:	mov	r1, r2
   119a8:	ldr	r3, [pc, #20]	; (119c0 <help_command_group@@Base+0x478>)
   119aa:	mov	r2, r0
   119ac:	movs	r0, #0
   119ae:	add	r3, pc
   119b0:	str	r3, [sp, #0]
   119b2:	ldr	r3, [pc, #16]	; (119c4 <help_command_group@@Base+0x47c>)
   119b4:	add	r3, pc
   119b6:	bl	11574 <help_command_group@@Base+0x2c>
   119ba:	add	sp, #12
   119bc:	ldr.w	pc, [sp], #4
   119c0:	ldr	r2, [sp, #876]	; 0x36c
   119c2:	movs	r2, r0
   119c4:	ldr	r2, [sp, #924]	; 0x39c
   119c6:	movs	r2, r0
   119c8:	push	{r4, r5, r6, r7, lr}
   119ca:	mov	r6, r0
   119cc:	ldr	r0, [pc, #120]	; (11a48 <help_command_group@@Base+0x500>)
   119ce:	mov	r5, r1
   119d0:	mov	r1, r2
   119d2:	ldr	r2, [pc, #120]	; (11a4c <help_command_group@@Base+0x504>)
   119d4:	add	r0, pc
   119d6:	sub.w	sp, sp, #4096	; 0x1000
   119da:	sub	sp, #28
   119dc:	ldr	r2, [r0, r2]
   119de:	add.w	r3, sp, #4096	; 0x1000
   119e2:	add	r7, sp, #20
   119e4:	adds	r3, #20
   119e6:	ldr	r2, [r2, #0]
   119e8:	str	r2, [r3, #0]
   119ea:	mov.w	r2, #0
   119ee:	mov	r2, r5
   119f0:	mov	r0, r7
   119f2:	str	r1, [sp, #12]
   119f4:	bl	138d0 <path_cat_out@@Base>
   119f8:	ldr	r1, [sp, #12]
   119fa:	subs	r4, r0, #0
   119fc:	bge.n	11a26 <help_command_group@@Base+0x4de>
   119fe:	ldr	r1, [pc, #80]	; (11a50 <help_command_group@@Base+0x508>)
   11a00:	mov	r2, r5
   11a02:	ldr	r0, [pc, #80]	; (11a54 <help_command_group@@Base+0x50c>)
   11a04:	add	r1, pc
   11a06:	add	r0, pc
   11a08:	bl	1747c <__btrfs_error@@Base>
   11a0c:	ldr	r1, [pc, #72]	; (11a58 <help_command_group@@Base+0x510>)
   11a0e:	add.w	r3, sp, #4096	; 0x1000
   11a12:	ldr	r2, [pc, #56]	; (11a4c <help_command_group@@Base+0x504>)
   11a14:	adds	r3, #20
   11a16:	add	r1, pc
   11a18:	ldr	r2, [r1, r2]
   11a1a:	ldr	r1, [r2, #0]
   11a1c:	ldr	r2, [r3, #0]
   11a1e:	eors	r1, r2
   11a20:	beq.n	11a3e <help_command_group@@Base+0x4f6>
   11a22:	blx	84cc <__stack_chk_fail@plt>
   11a26:	ldr	r3, [pc, #52]	; (11a5c <help_command_group@@Base+0x514>)
   11a28:	mov	r2, r6
   11a2a:	movs	r0, #0
   11a2c:	str	r7, [sp, #4]
   11a2e:	add	r3, pc
   11a30:	str	r3, [sp, #0]
   11a32:	ldr	r3, [pc, #44]	; (11a60 <help_command_group@@Base+0x518>)
   11a34:	add	r3, pc
   11a36:	bl	11574 <help_command_group@@Base+0x2c>
   11a3a:	mov	r4, r0
   11a3c:	b.n	11a0c <help_command_group@@Base+0x4c4>
   11a3e:	mov	r0, r4
   11a40:	add.w	sp, sp, #4096	; 0x1000
   11a44:	add	sp, #28
   11a46:	pop	{r4, r5, r6, r7, pc}
   11a48:	adds	r3, #180	; 0xb4
   11a4a:	movs	r5, r0
   11a4c:	lsls	r4, r4, #8
   11a4e:	movs	r0, r0
   11a50:	ldr	r2, [sp, #564]	; 0x234
   11a52:	movs	r2, r0
   11a54:	ldr	r1, [sp, #568]	; 0x238
   11a56:	movs	r2, r0
   11a58:	adds	r3, #114	; 0x72
   11a5a:	movs	r5, r0
   11a5c:	ldr	r2, [sp, #364]	; 0x16c
   11a5e:	movs	r2, r0
   11a60:	ldr	r2, [sp, #372]	; 0x174
   11a62:	movs	r2, r0
   11a64:	push	{r0, r1, r2, lr}
   11a66:	mov	r3, r1
   11a68:	str	r3, [sp, #4]
   11a6a:	mov	r1, r2
   11a6c:	ldr	r3, [pc, #20]	; (11a84 <help_command_group@@Base+0x53c>)
   11a6e:	mov	r2, r0
   11a70:	movs	r0, #0
   11a72:	add	r3, pc
   11a74:	str	r3, [sp, #0]
   11a76:	ldr	r3, [pc, #16]	; (11a88 <help_command_group@@Base+0x540>)
   11a78:	add	r3, pc
   11a7a:	bl	11574 <help_command_group@@Base+0x2c>
   11a7e:	add	sp, #12
   11a80:	ldr.w	pc, [sp], #4
   11a84:	ldr	r2, [sp, #92]	; 0x5c
   11a86:	movs	r2, r0
   11a88:	ldr	r2, [sp, #128]	; 0x80
   11a8a:	movs	r2, r0
   11a8c:	ldr	r3, [pc, #20]	; (11aa4 <help_command_group@@Base+0x55c>)
   11a8e:	push	{r0, r1, r2, lr}
   11a90:	add	r3, pc
   11a92:	mov	r2, r0
   11a94:	movs	r0, #0
   11a96:	str	r0, [sp, #0]
   11a98:	bl	11574 <help_command_group@@Base+0x2c>
   11a9c:	add	sp, #12
   11a9e:	ldr.w	pc, [sp], #4
   11aa2:	nop
   11aa4:	ldr	r2, [sp, #64]	; 0x40
   11aa6:	movs	r2, r0
   11aa8:	ldr	r3, [pc, #20]	; (11ac0 <help_command_group@@Base+0x578>)
   11aaa:	push	{r0, r1, r2, lr}
   11aac:	add	r3, pc
   11aae:	mov	r2, r0
   11ab0:	movs	r0, #0
   11ab2:	str	r0, [sp, #0]
   11ab4:	bl	11574 <help_command_group@@Base+0x2c>
   11ab8:	add	sp, #12
   11aba:	ldr.w	pc, [sp], #4
   11abe:	nop
   11ac0:	ldr	r1, [sp, #1004]	; 0x3ec
   11ac2:	movs	r2, r0
   11ac4:	push	{r4, r5, lr}
   11ac6:	sub	sp, #28
   11ac8:	strd	r2, r3, [sp, #8]
   11acc:	mov	r2, r0
   11ace:	ldr	r3, [pc, #28]	; (11aec <help_command_group@@Base+0x5a4>)
   11ad0:	movs	r0, #0
   11ad2:	ldrd	r4, r5, [sp, #40]	; 0x28
   11ad6:	add	r3, pc
   11ad8:	str	r3, [sp, #0]
   11ada:	ldr	r3, [pc, #20]	; (11af0 <help_command_group@@Base+0x5a8>)
   11adc:	ldr	r1, [sp, #48]	; 0x30
   11ade:	add	r3, pc
   11ae0:	strd	r4, r5, [sp, #16]
   11ae4:	bl	11574 <help_command_group@@Base+0x2c>
   11ae8:	add	sp, #28
   11aea:	pop	{r4, r5, pc}
   11aec:	ldr	r1, [sp, #888]	; 0x378
   11aee:	movs	r2, r0
   11af0:	ldr	r1, [sp, #832]	; 0x340
   11af2:	movs	r2, r0
   11af4:	ldr	r3, [pc, #20]	; (11b0c <help_command_group@@Base+0x5c4>)
   11af6:	push	{r0, r1, r2, lr}
   11af8:	add	r3, pc
   11afa:	mov	r2, r0
   11afc:	movs	r0, #0
   11afe:	str	r0, [sp, #0]
   11b00:	bl	11574 <help_command_group@@Base+0x2c>
   11b04:	add	sp, #12
   11b06:	ldr.w	pc, [sp], #4
   11b0a:	nop
   11b0c:	ldr	r1, [sp, #836]	; 0x344
   11b0e:	movs	r2, r0
   11b10:	ldr	r3, [pc, #20]	; (11b28 <help_command_group@@Base+0x5e0>)
   11b12:	push	{r0, r1, r2, lr}
   11b14:	add	r3, pc
   11b16:	mov	r2, r0
   11b18:	movs	r0, #0
   11b1a:	str	r0, [sp, #0]
   11b1c:	bl	11574 <help_command_group@@Base+0x2c>
   11b20:	add	sp, #12
   11b22:	ldr.w	pc, [sp], #4
   11b26:	nop
   11b28:	ldr	r1, [sp, #748]	; 0x2ec
   11b2a:	movs	r2, r0
   11b2c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11b30:	mov	r6, r2
   11b32:	ldr	r2, [pc, #116]	; (11ba8 <help_command_group@@Base+0x660>)
   11b34:	sub	sp, #120	; 0x78
   11b36:	mov	r5, r3
   11b38:	ldr	r3, [pc, #112]	; (11bac <help_command_group@@Base+0x664>)
   11b3a:	add	r2, pc
   11b3c:	ldr.w	sl, [sp, #152]	; 0x98
   11b40:	add	r7, sp, #36	; 0x24
   11b42:	add.w	r8, sp, #76	; 0x4c
   11b46:	ldr	r3, [r2, r3]
   11b48:	mov	r4, r0
   11b4a:	mov	r0, r1
   11b4c:	mov	r1, r7
   11b4e:	ldr	r3, [r3, #0]
   11b50:	str	r3, [sp, #116]	; 0x74
   11b52:	mov.w	r3, #0
   11b56:	ldr.w	r9, [sp, #168]	; 0xa8
   11b5a:	blx	8394 <uuid_unparse@plt>
   11b5e:	mov	r1, r8
   11b60:	mov	r0, sl
   11b62:	blx	8394 <uuid_unparse@plt>
   11b66:	ldrd	r2, r3, [sp, #160]	; 0xa0
   11b6a:	mov	r1, r9
   11b6c:	movs	r0, #1
   11b6e:	str.w	r8, [sp, #16]
   11b72:	strd	r2, r3, [sp, #24]
   11b76:	mov	r2, r4
   11b78:	ldr	r3, [pc, #52]	; (11bb0 <help_command_group@@Base+0x668>)
   11b7a:	strd	r6, r5, [sp, #8]
   11b7e:	add	r3, pc
   11b80:	str	r3, [sp, #0]
   11b82:	ldr	r3, [pc, #48]	; (11bb4 <help_command_group@@Base+0x66c>)
   11b84:	str	r7, [sp, #4]
   11b86:	add	r3, pc
   11b88:	bl	11574 <help_command_group@@Base+0x2c>
   11b8c:	ldr	r2, [pc, #40]	; (11bb8 <help_command_group@@Base+0x670>)
   11b8e:	ldr	r3, [pc, #28]	; (11bac <help_command_group@@Base+0x664>)
   11b90:	add	r2, pc
   11b92:	ldr	r3, [r2, r3]
   11b94:	ldr	r2, [r3, #0]
   11b96:	ldr	r3, [sp, #116]	; 0x74
   11b98:	eors	r2, r3
   11b9a:	beq.n	11ba0 <help_command_group@@Base+0x658>
   11b9c:	blx	84cc <__stack_chk_fail@plt>
   11ba0:	add	sp, #120	; 0x78
   11ba2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   11ba6:	nop
   11ba8:	adds	r2, #78	; 0x4e
   11baa:	movs	r5, r0
   11bac:	lsls	r4, r4, #8
   11bae:	movs	r0, r0
   11bb0:	ldr	r1, [sp, #352]	; 0x160
   11bb2:	movs	r2, r0
   11bb4:	movs	r4, #197	; 0xc5
   11bb6:	movs	r4, r0
   11bb8:	adds	r1, #248	; 0xf8
   11bba:	movs	r5, r0
   11bbc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   11bc0:	mov	r6, r2
   11bc2:	ldr	r2, [pc, #88]	; (11c1c <help_command_group@@Base+0x6d4>)
   11bc4:	mov	r5, r3
   11bc6:	ldr	r3, [pc, #88]	; (11c20 <help_command_group@@Base+0x6d8>)
   11bc8:	sub	sp, #64	; 0x40
   11bca:	add	r2, pc
   11bcc:	add	r7, sp, #20
   11bce:	mov	r4, r0
   11bd0:	mov	r0, r1
   11bd2:	ldr	r3, [r2, r3]
   11bd4:	mov	r1, r7
   11bd6:	ldr.w	r8, [sp, #88]	; 0x58
   11bda:	ldr	r3, [r3, #0]
   11bdc:	str	r3, [sp, #60]	; 0x3c
   11bde:	mov.w	r3, #0
   11be2:	blx	8394 <uuid_unparse@plt>
   11be6:	ldr	r3, [pc, #60]	; (11c24 <help_command_group@@Base+0x6dc>)
   11be8:	mov	r2, r4
   11bea:	mov	r1, r8
   11bec:	movs	r0, #1
   11bee:	add	r3, pc
   11bf0:	str	r3, [sp, #0]
   11bf2:	ldr	r3, [pc, #52]	; (11c28 <help_command_group@@Base+0x6e0>)
   11bf4:	strd	r6, r5, [sp, #8]
   11bf8:	add	r3, pc
   11bfa:	str	r7, [sp, #4]
   11bfc:	bl	11574 <help_command_group@@Base+0x2c>
   11c00:	ldr	r2, [pc, #40]	; (11c2c <help_command_group@@Base+0x6e4>)
   11c02:	ldr	r3, [pc, #28]	; (11c20 <help_command_group@@Base+0x6d8>)
   11c04:	add	r2, pc
   11c06:	ldr	r3, [r2, r3]
   11c08:	ldr	r2, [r3, #0]
   11c0a:	ldr	r3, [sp, #60]	; 0x3c
   11c0c:	eors	r2, r3
   11c0e:	beq.n	11c14 <help_command_group@@Base+0x6cc>
   11c10:	blx	84cc <__stack_chk_fail@plt>
   11c14:	add	sp, #64	; 0x40
   11c16:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   11c1a:	nop
   11c1c:	adds	r1, #190	; 0xbe
   11c1e:	movs	r5, r0
   11c20:	lsls	r4, r4, #8
   11c22:	movs	r0, r0
   11c24:	ldr	r1, [sp, #156]	; 0x9c
   11c26:	movs	r2, r0
   11c28:	ldr	r1, [sp, #88]	; 0x58
   11c2a:	movs	r2, r0
   11c2c:	adds	r1, #132	; 0x84
   11c2e:	movs	r5, r0
   11c30:	ldr	r2, [pc, #112]	; (11ca4 <help_command_group@@Base+0x75c>)
   11c32:	ldr	r3, [pc, #116]	; (11ca8 <help_command_group@@Base+0x760>)
   11c34:	add	r2, pc
   11c36:	push	{r4, r5, lr}
   11c38:	sub	sp, #68	; 0x44
   11c3a:	ldr	r3, [r2, r3]
   11c3c:	mov	r5, r1
   11c3e:	mov	r4, r0
   11c40:	ldr	r3, [r3, #0]
   11c42:	str	r3, [sp, #60]	; 0x3c
   11c44:	mov.w	r3, #0
   11c48:	add	r3, sp, #16
   11c4a:	str	r3, [sp, #12]
   11c4c:	mov	r1, r3
   11c4e:	blx	84f4 <localtime_r@plt>
   11c52:	ldr	r3, [sp, #12]
   11c54:	cbnz	r0, 11c7e <help_command_group@@Base+0x736>
   11c56:	ldrd	r2, r3, [r4]
   11c5a:	ldr	r0, [pc, #80]	; (11cac <help_command_group@@Base+0x764>)
   11c5c:	str	r3, [sp, #0]
   11c5e:	add	r0, pc
   11c60:	asrs	r3, r2, #31
   11c62:	bl	1747c <__btrfs_error@@Base>
   11c66:	mvn.w	r0, #21
   11c6a:	ldr	r2, [pc, #68]	; (11cb0 <help_command_group@@Base+0x768>)
   11c6c:	ldr	r3, [pc, #56]	; (11ca8 <help_command_group@@Base+0x760>)
   11c6e:	add	r2, pc
   11c70:	ldr	r3, [r2, r3]
   11c72:	ldr	r2, [r3, #0]
   11c74:	ldr	r3, [sp, #60]	; 0x3c
   11c76:	eors	r2, r3
   11c78:	beq.n	11c9e <help_command_group@@Base+0x756>
   11c7a:	blx	84cc <__stack_chk_fail@plt>
   11c7e:	ldr	r2, [pc, #52]	; (11cb4 <help_command_group@@Base+0x76c>)
   11c80:	movs	r1, #63	; 0x3f
   11c82:	mov	r0, r5
   11c84:	add	r2, pc
   11c86:	blx	8668 <strftime@plt>
   11c8a:	cbnz	r0, 11c9a <help_command_group@@Base+0x752>
   11c8c:	ldrd	r2, r3, [r4]
   11c90:	ldr	r0, [pc, #36]	; (11cb8 <help_command_group@@Base+0x770>)
   11c92:	str	r3, [sp, #0]
   11c94:	add	r0, pc
   11c96:	asrs	r3, r2, #31
   11c98:	b.n	11c62 <help_command_group@@Base+0x71a>
   11c9a:	movs	r0, #0
   11c9c:	b.n	11c6a <help_command_group@@Base+0x722>
   11c9e:	add	sp, #68	; 0x44
   11ca0:	pop	{r4, r5, pc}
   11ca2:	nop
   11ca4:	adds	r1, #84	; 0x54
   11ca6:	movs	r5, r0
   11ca8:	lsls	r4, r4, #8
   11caa:	movs	r0, r0
   11cac:	ldr	r0, [sp, #816]	; 0x330
   11cae:	movs	r2, r0
   11cb0:	adds	r1, #26
   11cb2:	movs	r5, r0
   11cb4:	ldr	r0, [sp, #856]	; 0x358
   11cb6:	movs	r2, r0
   11cb8:	ldr	r0, [sp, #824]	; 0x338
   11cba:	movs	r2, r0
   11cbc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   11cc0:	mov	r6, r2
   11cc2:	ldr	r2, [pc, #128]	; (11d44 <help_command_group@@Base+0x7fc>)
   11cc4:	mov	r5, r3
   11cc6:	ldr	r3, [pc, #128]	; (11d48 <help_command_group@@Base+0x800>)
   11cc8:	sub	sp, #220	; 0xdc
   11cca:	add	r2, pc
   11ccc:	add	r7, sp, #20
   11cce:	mov	r4, r0
   11cd0:	mov	r0, r1
   11cd2:	ldr	r3, [r2, r3]
   11cd4:	mov	r1, r7
   11cd6:	ldr.w	r9, [sp, #248]	; 0xf8
   11cda:	ldr	r3, [r3, #0]
   11cdc:	str	r3, [sp, #212]	; 0xd4
   11cde:	mov.w	r3, #0
   11ce2:	bl	11c30 <help_command_group@@Base+0x6e8>
   11ce6:	cmp	r0, #0
   11ce8:	bge.n	11d02 <help_command_group@@Base+0x7ba>
   11cea:	mvn.w	r0, #21
   11cee:	ldr	r2, [pc, #92]	; (11d4c <help_command_group@@Base+0x804>)
   11cf0:	ldr	r3, [pc, #84]	; (11d48 <help_command_group@@Base+0x800>)
   11cf2:	add	r2, pc
   11cf4:	ldr	r3, [r2, r3]
   11cf6:	ldr	r2, [r3, #0]
   11cf8:	ldr	r3, [sp, #212]	; 0xd4
   11cfa:	eors	r2, r3
   11cfc:	beq.n	11d3c <help_command_group@@Base+0x7f4>
   11cfe:	blx	84cc <__stack_chk_fail@plt>
   11d02:	add.w	r8, sp, #84	; 0x54
   11d06:	mov	r0, r6
   11d08:	mov	r1, r8
   11d0a:	bl	11c30 <help_command_group@@Base+0x6e8>
   11d0e:	cmp	r0, #0
   11d10:	blt.n	11cea <help_command_group@@Base+0x7a2>
   11d12:	add	r6, sp, #148	; 0x94
   11d14:	mov	r0, r5
   11d16:	mov	r1, r6
   11d18:	bl	11c30 <help_command_group@@Base+0x6e8>
   11d1c:	cmp	r0, #0
   11d1e:	blt.n	11cea <help_command_group@@Base+0x7a2>
   11d20:	ldr	r3, [pc, #44]	; (11d50 <help_command_group@@Base+0x808>)
   11d22:	mov	r2, r4
   11d24:	mov	r1, r9
   11d26:	strd	r8, r6, [sp, #8]
   11d2a:	add	r3, pc
   11d2c:	str	r3, [sp, #0]
   11d2e:	ldr	r3, [pc, #36]	; (11d54 <help_command_group@@Base+0x80c>)
   11d30:	movs	r0, #0
   11d32:	str	r7, [sp, #4]
   11d34:	add	r3, pc
   11d36:	bl	11574 <help_command_group@@Base+0x2c>
   11d3a:	b.n	11cee <help_command_group@@Base+0x7a6>
   11d3c:	add	sp, #220	; 0xdc
   11d3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   11d42:	nop
   11d44:	adds	r0, #190	; 0xbe
   11d46:	movs	r5, r0
   11d48:	lsls	r4, r4, #8
   11d4a:	movs	r0, r0
   11d4c:	adds	r0, #150	; 0x96
   11d4e:	movs	r5, r0
   11d50:	ldr	r0, [sp, #484]	; 0x1e4
   11d52:	movs	r2, r0
   11d54:	ldr	r0, [sp, #416]	; 0x1a0
   11d56:	movs	r2, r0

00011d58 <btrfs_parse_features_to_string@@Base>:
   11d58:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11d5c:	mov	r5, r0
   11d5e:	ldr.w	r8, [pc, #72]	; 11da8 <btrfs_parse_features_to_string@@Base+0x50>
   11d62:	mov	r9, r2
   11d64:	ldr.w	fp, [pc, #68]	; 11dac <btrfs_parse_features_to_string@@Base+0x54>
   11d68:	mov	sl, r3
   11d6a:	add	r8, pc
   11d6c:	movs	r4, #0
   11d6e:	add	fp, pc
   11d70:	strb	r4, [r0, #0]
   11d72:	ldrd	r2, r3, [r8, #8]
   11d76:	and.w	r6, r9, r2
   11d7a:	and.w	r7, sl, r3
   11d7e:	orrs.w	r3, r6, r7
   11d82:	beq.n	11d9a <btrfs_parse_features_to_string@@Base+0x42>
   11d84:	ldrb	r3, [r5, #0]
   11d86:	cbz	r3, 11d90 <btrfs_parse_features_to_string@@Base+0x38>
   11d88:	mov	r1, fp
   11d8a:	mov	r0, r5
   11d8c:	blx	856c <strcat@plt+0x4>
   11d90:	ldr.w	r1, [r8]
   11d94:	mov	r0, r5
   11d96:	blx	856c <strcat@plt+0x4>
   11d9a:	adds	r4, #1
   11d9c:	add.w	r8, r8, #48	; 0x30
   11da0:	cmp	r4, #7
   11da2:	bne.n	11d72 <btrfs_parse_features_to_string@@Base+0x1a>
   11da4:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11da8:	cmp	r0, #226	; 0xe2
   11daa:	movs	r5, r0
   11dac:	cbz	r6, 11e02 <btrfs_list_all_fs_features@@Base+0xa>
   11dae:	movs	r2, r0

00011db0 <btrfs_process_fs_features@@Base>:
   11db0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   11db4:	mov	r6, r0
   11db6:	ldr	r4, [pc, #56]	; (11df0 <btrfs_process_fs_features@@Base+0x40>)
   11db8:	mov	r7, r1
   11dba:	ldr.w	sl, [pc, #56]	; 11df4 <btrfs_process_fs_features@@Base+0x44>
   11dbe:	movs	r5, #0
   11dc0:	add	r4, pc
   11dc2:	add	sl, pc
   11dc4:	ldrd	r2, r3, [r4, #8]
   11dc8:	and.w	r8, r6, r2
   11dcc:	and.w	r9, r7, r3
   11dd0:	orrs.w	r3, r8, r9
   11dd4:	beq.n	11de2 <btrfs_process_fs_features@@Base+0x32>
   11dd6:	ldr	r3, [r4, #44]	; 0x2c
   11dd8:	mov	r1, sl
   11dda:	ldr	r2, [r4, #0]
   11ddc:	movs	r0, #1
   11dde:	blx	87f4 <__printf_chk@plt+0x4>
   11de2:	adds	r5, #1
   11de4:	adds	r4, #48	; 0x30
   11de6:	cmp	r5, #7
   11de8:	bne.n	11dc4 <btrfs_process_fs_features@@Base+0x14>
   11dea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   11dee:	nop
   11df0:	cmp	r0, #140	; 0x8c
   11df2:	movs	r5, r0
   11df4:	str	r7, [sp, #1008]	; 0x3f0
   11df6:	movs	r2, r0

00011df8 <btrfs_list_all_fs_features@@Base>:
   11df8:	ldr	r3, [pc, #168]	; (11ea4 <btrfs_list_all_fs_features@@Base+0xac>)
   11dfa:	ldr	r2, [pc, #172]	; (11ea8 <btrfs_list_all_fs_features@@Base+0xb0>)
   11dfc:	add	r3, pc
   11dfe:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e02:	mov	r7, r0
   11e04:	ldr	r5, [r3, r2]
   11e06:	sub	sp, #28
   11e08:	ldr	r0, [pc, #160]	; (11eac <btrfs_list_all_fs_features@@Base+0xb4>)
   11e0a:	mov	r8, r1
   11e0c:	ldr	r4, [pc, #160]	; (11eb0 <btrfs_list_all_fs_features@@Base+0xb8>)
   11e0e:	movs	r6, #0
   11e10:	ldr	r1, [r5, #0]
   11e12:	add	r0, pc
   11e14:	blx	8930 <fputs@plt+0x4>
   11e18:	ldr.w	r9, [pc, #152]	; 11eb4 <btrfs_list_all_fs_features@@Base+0xbc>
   11e1c:	ldr.w	sl, [pc, #152]	; 11eb8 <btrfs_list_all_fs_features@@Base+0xc0>
   11e20:	add	r4, pc
   11e22:	ldr.w	fp, [pc, #152]	; 11ebc <btrfs_list_all_fs_features@@Base+0xc4>
   11e26:	add	r9, pc
   11e28:	add	sl, pc
   11e2a:	add	fp, pc
   11e2c:	ldrd	r2, r3, [r4, #8]
   11e30:	and.w	r1, r2, r7
   11e34:	str	r1, [sp, #16]
   11e36:	and.w	r1, r3, r8
   11e3a:	str	r1, [sp, #20]
   11e3c:	ldrd	r0, r1, [sp, #16]
   11e40:	orrs	r1, r0
   11e42:	bne.n	11e94 <btrfs_list_all_fs_features@@Base+0x9c>
   11e44:	strd	r2, r3, [sp, #8]
   11e48:	movs	r1, #1
   11e4a:	ldr	r3, [r4, #44]	; 0x2c
   11e4c:	mov	r2, r9
   11e4e:	str	r3, [sp, #0]
   11e50:	ldr	r3, [r4, #0]
   11e52:	ldr	r0, [r5, #0]
   11e54:	blx	881c <__fprintf_chk@plt+0x4>
   11e58:	ldr	r3, [r4, #24]
   11e5a:	cbz	r3, 11e6a <btrfs_list_all_fs_features@@Base+0x72>
   11e5c:	ldr	r2, [pc, #96]	; (11ec0 <btrfs_list_all_fs_features@@Base+0xc8>)
   11e5e:	movs	r1, #1
   11e60:	ldr	r3, [r4, #20]
   11e62:	ldr	r0, [r5, #0]
   11e64:	add	r2, pc
   11e66:	blx	881c <__fprintf_chk@plt+0x4>
   11e6a:	ldr	r3, [r4, #32]
   11e6c:	cbz	r3, 11e7c <btrfs_list_all_fs_features@@Base+0x84>
   11e6e:	ldr	r2, [pc, #84]	; (11ec4 <btrfs_list_all_fs_features@@Base+0xcc>)
   11e70:	movs	r1, #1
   11e72:	ldr	r3, [r4, #28]
   11e74:	ldr	r0, [r5, #0]
   11e76:	add	r2, pc
   11e78:	blx	881c <__fprintf_chk@plt+0x4>
   11e7c:	ldr	r3, [r4, #40]	; 0x28
   11e7e:	cbz	r3, 11e8c <btrfs_list_all_fs_features@@Base+0x94>
   11e80:	ldr	r3, [r4, #36]	; 0x24
   11e82:	mov	r2, fp
   11e84:	ldr	r0, [r5, #0]
   11e86:	movs	r1, #1
   11e88:	blx	881c <__fprintf_chk@plt+0x4>
   11e8c:	ldr	r1, [r5, #0]
   11e8e:	mov	r0, sl
   11e90:	blx	8930 <fputs@plt+0x4>
   11e94:	adds	r6, #1
   11e96:	adds	r4, #48	; 0x30
   11e98:	cmp	r6, #6
   11e9a:	bne.n	11e2c <btrfs_list_all_fs_features@@Base+0x34>
   11e9c:	add	sp, #28
   11e9e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ea2:	nop
   11ea4:	cmp	r7, #140	; 0x8c
   11ea6:	movs	r5, r0
   11ea8:	lsls	r4, r6, #8
   11eaa:	movs	r0, r0
   11eac:	str	r7, [sp, #840]	; 0x348
   11eae:	movs	r2, r0
   11eb0:	cmp	r0, #44	; 0x2c
   11eb2:	movs	r5, r0
   11eb4:	str	r7, [sp, #888]	; 0x378
   11eb6:	movs	r2, r0
   11eb8:	adds	r4, r2, #6
   11eba:	movs	r4, r0
   11ebc:	ldr	r0, [sp, #8]
   11ebe:	movs	r2, r0
   11ec0:	str	r7, [sp, #712]	; 0x2c8
   11ec2:	movs	r2, r0
   11ec4:	str	r7, [sp, #688]	; 0x2b0
   11ec6:	movs	r2, r0

00011ec8 <btrfs_parse_fs_features@@Base>:
   11ec8:	ldr	r2, [pc, #188]	; (11f88 <btrfs_parse_fs_features@@Base+0xc0>)
   11eca:	ldr	r3, [pc, #192]	; (11f8c <btrfs_parse_fs_features@@Base+0xc4>)
   11ecc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ed0:	add	r2, pc
   11ed2:	sub	sp, #20
   11ed4:	mov	r5, r1
   11ed6:	add	r7, sp, #8
   11ed8:	ldr	r1, [pc, #180]	; (11f90 <btrfs_parse_fs_features@@Base+0xc8>)
   11eda:	ldr	r3, [r2, r3]
   11edc:	add	r1, pc
   11ede:	mov	r2, r7
   11ee0:	ldr	r3, [r3, #0]
   11ee2:	str	r3, [sp, #12]
   11ee4:	mov.w	r3, #0
   11ee8:	movs	r3, #0
   11eea:	str	r3, [sp, #8]
   11eec:	blx	85e4 <strtok_r@plt>
   11ef0:	ldr.w	r9, [pc, #160]	; 11f94 <btrfs_parse_fs_features@@Base+0xcc>
   11ef4:	add	r9, pc
   11ef6:	mov	r4, r0
   11ef8:	cbnz	r4, 11f0e <btrfs_parse_fs_features@@Base+0x46>
   11efa:	ldr	r2, [pc, #156]	; (11f98 <btrfs_parse_fs_features@@Base+0xd0>)
   11efc:	ldr	r3, [pc, #140]	; (11f8c <btrfs_parse_fs_features@@Base+0xc4>)
   11efe:	add	r2, pc
   11f00:	ldr	r3, [r2, r3]
   11f02:	ldr	r2, [r3, #0]
   11f04:	ldr	r3, [sp, #12]
   11f06:	eors	r2, r3
   11f08:	beq.n	11f80 <btrfs_parse_fs_features@@Base+0xb8>
   11f0a:	blx	84cc <__stack_chk_fail@plt>
   11f0e:	ldr	r6, [pc, #140]	; (11f9c <btrfs_parse_fs_features@@Base+0xd4>)
   11f10:	add.w	r8, r4, #1
   11f14:	mov.w	fp, #0
   11f18:	add	r6, pc
   11f1a:	add.w	sl, r6, #336	; 0x150
   11f1e:	ldrb	r2, [r4, #0]
   11f20:	ldr	r3, [r6, #0]
   11f22:	cmp	r2, #94	; 0x5e
   11f24:	bne.n	11f66 <btrfs_parse_fs_features@@Base+0x9e>
   11f26:	mov	r0, r3
   11f28:	mov	r1, r8
   11f2a:	str	r3, [sp, #4]
   11f2c:	blx	837c <strcmp@plt>
   11f30:	ldr	r3, [sp, #4]
   11f32:	cbnz	r0, 11f66 <btrfs_parse_fs_features@@Base+0x9e>
   11f34:	ldrd	r0, r1, [r6, #8]
   11f38:	ldrd	r2, r3, [r5]
   11f3c:	bic.w	r2, r2, r0
   11f40:	bic.w	r3, r3, r1
   11f44:	mov.w	fp, #1
   11f48:	strd	r2, r3, [r5]
   11f4c:	adds	r6, #48	; 0x30
   11f4e:	cmp	sl, r6
   11f50:	bne.n	11f1e <btrfs_parse_fs_features@@Base+0x56>
   11f52:	cmp.w	fp, #0
   11f56:	beq.n	11efa <btrfs_parse_fs_features@@Base+0x32>
   11f58:	mov	r2, r7
   11f5a:	mov	r1, r9
   11f5c:	movs	r0, #0
   11f5e:	blx	85e4 <strtok_r@plt>
   11f62:	mov	r4, r0
   11f64:	b.n	11ef8 <btrfs_parse_fs_features@@Base+0x30>
   11f66:	mov	r1, r4
   11f68:	mov	r0, r3
   11f6a:	blx	837c <strcmp@plt>
   11f6e:	cmp	r0, #0
   11f70:	bne.n	11f4c <btrfs_parse_fs_features@@Base+0x84>
   11f72:	ldrd	r2, r3, [r5]
   11f76:	ldrd	r0, r1, [r6, #8]
   11f7a:	orrs	r2, r0
   11f7c:	orrs	r3, r1
   11f7e:	b.n	11f44 <btrfs_parse_fs_features@@Base+0x7c>
   11f80:	mov	r0, r4
   11f82:	add	sp, #20
   11f84:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11f88:	cmp	r6, #184	; 0xb8
   11f8a:	movs	r5, r0
   11f8c:	lsls	r4, r4, #8
   11f8e:	movs	r0, r0
   11f90:	strh	r0, [r2, #44]	; 0x2c
   11f92:	movs	r2, r0
   11f94:	strh	r0, [r7, #42]	; 0x2a
   11f96:	movs	r2, r0
   11f98:	cmp	r6, #138	; 0x8a
   11f9a:	movs	r5, r0
   11f9c:	movs	r7, #52	; 0x34
   11f9e:	movs	r5, r0

00011fa0 <print_kernel_version@@Base>:
   11fa0:	push	{r0, r1, r2, r4, r5, lr}
   11fa2:	uxtb	r5, r1
   11fa4:	ldr	r2, [pc, #44]	; (11fd4 <print_kernel_version@@Base+0x34>)
   11fa6:	ubfx	r3, r1, #8, #8
   11faa:	str	r3, [sp, #0]
   11fac:	lsrs	r3, r1, #16
   11fae:	add	r2, pc
   11fb0:	movs	r1, #1
   11fb2:	mov	r4, r0
   11fb4:	blx	881c <__fprintf_chk@plt+0x4>
   11fb8:	cbz	r5, 11fce <print_kernel_version@@Base+0x2e>
   11fba:	ldr	r2, [pc, #28]	; (11fd8 <print_kernel_version@@Base+0x38>)
   11fbc:	mov	r3, r5
   11fbe:	movs	r1, #1
   11fc0:	mov	r0, r4
   11fc2:	add	r2, pc
   11fc4:	add	sp, #12
   11fc6:	ldmia.w	sp!, {r4, r5, lr}
   11fca:	b.w	8818 <__fprintf_chk@plt>
   11fce:	add	sp, #12
   11fd0:	pop	{r4, r5, pc}
   11fd2:	nop
   11fd4:	str	r6, [sp, #556]	; 0x22c
   11fd6:	movs	r2, r0
   11fd8:	ldmia	r6, {r0, r3, r5, r6, r7}
   11fda:	movs	r2, r0

00011fdc <get_running_kernel_version@@Base>:
   11fdc:	ldr	r2, [pc, #204]	; (120ac <get_running_kernel_version@@Base+0xd0>)
   11fde:	ldr	r3, [pc, #208]	; (120b0 <get_running_kernel_version@@Base+0xd4>)
   11fe0:	push	{r4, r5, r6, r7, lr}
   11fe2:	add	r2, pc
   11fe4:	sub	sp, #404	; 0x194
   11fe6:	add	r6, sp, #4
   11fe8:	ldr	r3, [r2, r3]
   11fea:	mov	r5, sp
   11fec:	mov	r0, r6
   11fee:	ldr	r3, [r3, #0]
   11ff0:	str	r3, [sp, #396]	; 0x18c
   11ff2:	mov.w	r3, #0
   11ff6:	movs	r3, #0
   11ff8:	str	r3, [r5, #0]
   11ffa:	blx	8498 <uname@plt>
   11ffe:	ldr	r1, [pc, #180]	; (120b4 <get_running_kernel_version@@Base+0xd8>)
   12000:	mov	r0, r6
   12002:	add	r1, pc
   12004:	blx	837c <strcmp@plt>
   12008:	mov	r4, r0
   1200a:	cbz	r0, 1201c <get_running_kernel_version@@Base+0x40>
   1200c:	ldr	r0, [pc, #168]	; (120b8 <get_running_kernel_version@@Base+0xdc>)
   1200e:	mov	r1, r6
   12010:	add	r0, pc
   12012:	bl	1747c <__btrfs_error@@Base>
   12016:	movs	r0, #1
   12018:	blx	86f8 <exit@plt>
   1201c:	add.w	r7, sp, #134	; 0x86
   12020:	movs	r1, #45	; 0x2d
   12022:	mov	r0, r7
   12024:	blx	8710 <strchr@plt>
   12028:	cbz	r0, 1202c <get_running_kernel_version@@Base+0x50>
   1202a:	strb	r4, [r0, #0]
   1202c:	ldr	r6, [pc, #140]	; (120bc <get_running_kernel_version@@Base+0xe0>)
   1202e:	mov	r2, r5
   12030:	mov	r0, r7
   12032:	add	r6, pc
   12034:	mov	r1, r6
   12036:	blx	85e4 <strtok_r@plt>
   1203a:	mov	r4, r0
   1203c:	bl	31b18 <string_is_numerical@@Base>
   12040:	cbnz	r0, 1205a <get_running_kernel_version@@Base+0x7e>
   12042:	mov.w	r4, #4294967295	; 0xffffffff
   12046:	ldr	r2, [pc, #120]	; (120c0 <get_running_kernel_version@@Base+0xe4>)
   12048:	ldr	r3, [pc, #100]	; (120b0 <get_running_kernel_version@@Base+0xd4>)
   1204a:	add	r2, pc
   1204c:	ldr	r3, [r2, r3]
   1204e:	ldr	r2, [r3, #0]
   12050:	ldr	r3, [sp, #396]	; 0x18c
   12052:	eors	r2, r3
   12054:	beq.n	120a4 <get_running_kernel_version@@Base+0xc8>
   12056:	blx	84cc <__stack_chk_fail@plt>
   1205a:	mov	r0, r4
   1205c:	blx	88c8 <atoi@plt>
   12060:	mov	r2, r5
   12062:	mov	r1, r6
   12064:	mov	r4, r0
   12066:	movs	r0, #0
   12068:	blx	85e4 <strtok_r@plt>
   1206c:	mov	r7, r0
   1206e:	bl	31b18 <string_is_numerical@@Base>
   12072:	cmp	r0, #0
   12074:	beq.n	12042 <get_running_kernel_version@@Base+0x66>
   12076:	mov	r0, r7
   12078:	blx	88c8 <atoi@plt>
   1207c:	mov	r2, r5
   1207e:	mov	r1, r6
   12080:	lsls	r3, r0, #8
   12082:	movs	r0, #0
   12084:	orr.w	r4, r3, r4, lsl #16
   12088:	blx	85e4 <strtok_r@plt>
   1208c:	mov	r5, r0
   1208e:	cmp	r0, #0
   12090:	beq.n	12046 <get_running_kernel_version@@Base+0x6a>
   12092:	bl	31b18 <string_is_numerical@@Base>
   12096:	cmp	r0, #0
   12098:	beq.n	12046 <get_running_kernel_version@@Base+0x6a>
   1209a:	mov	r0, r5
   1209c:	blx	88c8 <atoi@plt>
   120a0:	orrs	r4, r0
   120a2:	b.n	12046 <get_running_kernel_version@@Base+0x6a>
   120a4:	mov	r0, r4
   120a6:	add	sp, #404	; 0x194
   120a8:	pop	{r4, r5, r6, r7, pc}
   120aa:	nop
   120ac:	cmp	r5, #166	; 0xa6
   120ae:	movs	r5, r0
   120b0:	lsls	r4, r4, #8
   120b2:	movs	r0, r0
   120b4:	str	r6, [sp, #244]	; 0xf4
   120b6:	movs	r2, r0
   120b8:	str	r6, [sp, #212]	; 0xd4
   120ba:	movs	r2, r0
   120bc:	asrs	r2, r7, #25
   120be:	movs	r4, r0
   120c0:	cmp	r5, #62	; 0x3e
   120c2:	movs	r5, r0

000120c4 <btrfs_check_nodesize@@Base>:
   120c4:	cmp	r0, r1
   120c6:	push	{r4, r6, r7, lr}
   120c8:	mov	r4, r0
   120ca:	bcs.n	120de <btrfs_check_nodesize@@Base+0x1a>
   120cc:	mov	r2, r1
   120ce:	mov	r1, r0
   120d0:	ldr	r0, [pc, #72]	; (1211c <btrfs_check_nodesize@@Base+0x58>)
   120d2:	add	r0, pc
   120d4:	bl	1747c <__btrfs_error@@Base>
   120d8:	mov.w	r0, #4294967295	; 0xffffffff
   120dc:	pop	{r4, r6, r7, pc}
   120de:	cmp.w	r0, #65536	; 0x10000
   120e2:	bls.n	120f0 <btrfs_check_nodesize@@Base+0x2c>
   120e4:	mov	r1, r0
   120e6:	ldr	r0, [pc, #56]	; (12120 <btrfs_check_nodesize@@Base+0x5c>)
   120e8:	mov.w	r2, #65536	; 0x10000
   120ec:	add	r0, pc
   120ee:	b.n	120d4 <btrfs_check_nodesize@@Base+0x10>
   120f0:	subs	r3, r1, #1
   120f2:	ands	r0, r3
   120f4:	beq.n	12100 <btrfs_check_nodesize@@Base+0x3c>
   120f6:	ldr	r0, [pc, #44]	; (12124 <btrfs_check_nodesize@@Base+0x60>)
   120f8:	mov	r2, r1
   120fa:	mov	r1, r4
   120fc:	add	r0, pc
   120fe:	b.n	120d4 <btrfs_check_nodesize@@Base+0x10>
   12100:	and.w	r6, r2, #4
   12104:	mov	r7, r0
   12106:	orrs.w	r3, r6, r7
   1210a:	beq.n	120dc <btrfs_check_nodesize@@Base+0x18>
   1210c:	cmp	r4, r1
   1210e:	beq.n	120dc <btrfs_check_nodesize@@Base+0x18>
   12110:	ldr	r0, [pc, #20]	; (12128 <btrfs_check_nodesize@@Base+0x64>)
   12112:	mov	r2, r1
   12114:	mov	r1, r4
   12116:	add	r0, pc
   12118:	b.n	120d4 <btrfs_check_nodesize@@Base+0x10>
   1211a:	nop
   1211c:	str	r5, [sp, #552]	; 0x228
   1211e:	movs	r2, r0
   12120:	str	r5, [sp, #600]	; 0x258
   12122:	movs	r2, r0
   12124:	str	r5, [sp, #684]	; 0x2ac
   12126:	movs	r2, r0
   12128:	str	r5, [sp, #740]	; 0x2e4
   1212a:	movs	r2, r0
   1212c:	push	{r4, lr}
   1212e:	mov	r4, r0
   12130:	subs	r4, #1
   12132:	bcs.n	12136 <btrfs_check_nodesize@@Base+0x72>
   12134:	pop	{r4, pc}
   12136:	movs	r0, #32
   12138:	blx	8790 <putchar@plt+0x4>
   1213c:	movs	r0, #32
   1213e:	blx	8790 <putchar@plt+0x4>
   12142:	b.n	12130 <btrfs_check_nodesize@@Base+0x6c>
   12144:	push	{r4, lr}
   12146:	mov	r4, r0
   12148:	subs	r4, #1
   1214a:	bcs.n	1214e <btrfs_check_nodesize@@Base+0x8a>
   1214c:	pop	{r4, pc}
   1214e:	movs	r0, #32
   12150:	blx	8790 <putchar@plt+0x4>
   12154:	b.n	12148 <btrfs_check_nodesize@@Base+0x84>
   12156:	ldr	r3, [pc, #92]	; (121b4 <btrfs_check_nodesize@@Base+0xf0>)
   12158:	ldr	r2, [pc, #92]	; (121b8 <btrfs_check_nodesize@@Base+0xf4>)
   1215a:	add	r3, pc
   1215c:	push	{r4, lr}
   1215e:	mov	r4, r0
   12160:	ldr	r3, [r3, r2]
   12162:	ldr	r3, [r3, #0]
   12164:	cmp	r3, #8
   12166:	bne.n	12188 <btrfs_check_nodesize@@Base+0xc4>
   12168:	ldr	r3, [r0, #8]
   1216a:	adds	r3, #8
   1216c:	ldr.w	r3, [r0, r3, lsl #2]
   12170:	cbnz	r3, 1218a <btrfs_check_nodesize@@Base+0xc6>
   12172:	movs	r0, #10
   12174:	blx	8790 <putchar@plt+0x4>
   12178:	ldr	r0, [r4, #8]
   1217a:	bl	1212c <btrfs_check_nodesize@@Base+0x68>
   1217e:	ldr	r3, [r4, #8]
   12180:	movs	r2, #1
   12182:	adds	r3, #8
   12184:	str.w	r2, [r4, r3, lsl #2]
   12188:	pop	{r4, pc}
   1218a:	cmp	r3, #1
   1218c:	bne.n	121a4 <btrfs_check_nodesize@@Base+0xe0>
   1218e:	ldr	r0, [pc, #44]	; (121bc <btrfs_check_nodesize@@Base+0xf8>)
   12190:	add	r0, pc
   12192:	blx	8618 <puts@plt+0x4>
   12196:	ldr	r0, [r4, #8]
   12198:	bl	1212c <btrfs_check_nodesize@@Base+0x68>
   1219c:	ldr	r3, [r4, #8]
   1219e:	movs	r2, #2
   121a0:	adds	r3, #8
   121a2:	b.n	12184 <btrfs_check_nodesize@@Base+0xc0>
   121a4:	ldr	r0, [pc, #24]	; (121c0 <btrfs_check_nodesize@@Base+0xfc>)
   121a6:	add	r0, pc
   121a8:	blx	8618 <puts@plt+0x4>
   121ac:	ldr	r0, [r4, #8]
   121ae:	ldmia.w	sp!, {r4, lr}
   121b2:	b.n	1212c <btrfs_check_nodesize@@Base+0x68>
   121b4:	cmp	r4, #46	; 0x2e
   121b6:	movs	r5, r0
   121b8:	lsls	r0, r4, #8
   121ba:	movs	r0, r0
   121bc:	strh	r4, [r3, #22]
   121be:	movs	r2, r0
   121c0:	strh	r6, [r0, #22]
   121c2:	movs	r2, r0
   121c4:	push	{r4, lr}
   121c6:	ldr	r4, [r0, #4]
   121c8:	ldr	r1, [pc, #32]	; (121ec <btrfs_check_nodesize@@Base+0x128>)
   121ca:	mov	r0, r4
   121cc:	add	r1, pc
   121ce:	blx	837c <strcmp@plt>
   121d2:	cbz	r0, 121ea <btrfs_check_nodesize@@Base+0x126>
   121d4:	ldr	r1, [pc, #24]	; (121f0 <btrfs_check_nodesize@@Base+0x12c>)
   121d6:	mov	r0, r4
   121d8:	add	r1, pc
   121da:	blx	837c <strcmp@plt>
   121de:	cbz	r0, 121ea <btrfs_check_nodesize@@Base+0x126>
   121e0:	ldmia.w	sp!, {r4, lr}
   121e4:	movs	r0, #34	; 0x22
   121e6:	b.w	878c <putchar@plt>
   121ea:	pop	{r4, pc}
   121ec:	str	r6, [sp, #660]	; 0x294
   121ee:	movs	r2, r0
   121f0:	beq.n	12102 <btrfs_check_nodesize@@Base+0x3e>
   121f2:	movs	r2, r0

000121f4 <fmt_end@@Base>:
   121f4:	push	{r3, r4, r5, lr}
   121f6:	mov	r4, r0
   121f8:	ldr	r3, [r0, #8]
   121fa:	ldr	r5, [pc, #88]	; (12254 <fmt_end@@Base+0x60>)
   121fc:	cmp	r3, #1
   121fe:	add	r5, pc
   12200:	beq.n	12210 <fmt_end@@Base+0x1c>
   12202:	ldr	r3, [pc, #84]	; (12258 <fmt_end@@Base+0x64>)
   12204:	ldr	r0, [pc, #84]	; (1225c <fmt_end@@Base+0x68>)
   12206:	ldr	r3, [r5, r3]
   12208:	add	r0, pc
   1220a:	ldr	r1, [r3, #0]
   1220c:	blx	8930 <fputs@plt+0x4>
   12210:	ldr	r3, [pc, #76]	; (12260 <fmt_end@@Base+0x6c>)
   12212:	ldr	r3, [r5, r3]
   12214:	ldr	r3, [r3, #0]
   12216:	lsls	r2, r3, #29
   12218:	bpl.n	12224 <fmt_end@@Base+0x30>
   1221a:	ldmia.w	sp!, {r3, r4, r5, lr}
   1221e:	movs	r0, #10
   12220:	b.w	878c <putchar@plt>
   12224:	lsls	r3, r3, #28
   12226:	bpl.n	12252 <fmt_end@@Base+0x5e>
   12228:	ldr	r3, [r4, #8]
   1222a:	cmp	r3, #0
   1222c:	bgt.n	1223c <fmt_end@@Base+0x48>
   1222e:	ldr	r0, [pc, #52]	; (12264 <fmt_end@@Base+0x70>)
   12230:	add	r0, pc
   12232:	blx	8618 <puts@plt+0x4>
   12236:	movs	r0, #1
   12238:	blx	86f8 <exit@plt>
   1223c:	subs	r3, #1
   1223e:	mov	r0, r4
   12240:	str	r3, [r4, #8]
   12242:	bl	12156 <btrfs_check_nodesize@@Base+0x92>
   12246:	ldr	r0, [pc, #32]	; (12268 <fmt_end@@Base+0x74>)
   12248:	ldmia.w	sp!, {r3, r4, r5, lr}
   1224c:	add	r0, pc
   1224e:	b.w	8614 <puts@plt>
   12252:	pop	{r3, r4, r5, pc}
   12254:	cmp	r3, #138	; 0x8a
   12256:	movs	r5, r0
   12258:	lsls	r4, r6, #8
   1225a:	movs	r0, r0
   1225c:	str	r6, [sp, #440]	; 0x1b8
   1225e:	movs	r2, r0
   12260:	lsls	r0, r4, #8
   12262:	movs	r0, r0
   12264:	str	r6, [sp, #376]	; 0x178
   12266:	movs	r2, r0
   12268:	str	r6, [sp, #432]	; 0x1b0
   1226a:	movs	r2, r0

0001226c <fmt_start_list_value@@Base>:
   1226c:	ldr	r3, [pc, #48]	; (122a0 <fmt_start_list_value@@Base+0x34>)
   1226e:	ldr	r2, [pc, #52]	; (122a4 <fmt_start_list_value@@Base+0x38>)
   12270:	add	r3, pc
   12272:	push	{r4, lr}
   12274:	mov	r4, r0
   12276:	ldr	r3, [r3, r2]
   12278:	ldr	r3, [r3, #0]
   1227a:	cmp	r3, #4
   1227c:	bne.n	12286 <fmt_start_list_value@@Base+0x1a>
   1227e:	ldmia.w	sp!, {r4, lr}
   12282:	ldr	r0, [r0, #4]
   12284:	b.n	12144 <btrfs_check_nodesize@@Base+0x80>
   12286:	cmp	r3, #8
   12288:	bne.n	1229e <fmt_start_list_value@@Base+0x32>
   1228a:	bl	12156 <btrfs_check_nodesize@@Base+0x92>
   1228e:	ldr	r0, [r4, #8]
   12290:	bl	1212c <btrfs_check_nodesize@@Base+0x68>
   12294:	ldmia.w	sp!, {r4, lr}
   12298:	movs	r0, #34	; 0x22
   1229a:	b.w	878c <putchar@plt>
   1229e:	pop	{r4, pc}
   122a0:	cmp	r3, #24
   122a2:	movs	r5, r0
   122a4:	lsls	r0, r4, #8
	...

000122a8 <fmt_end_list_value@@Base>:
   122a8:	ldr	r3, [pc, #28]	; (122c8 <fmt_end_list_value@@Base+0x20>)
   122aa:	ldr	r2, [pc, #32]	; (122cc <fmt_end_list_value@@Base+0x24>)
   122ac:	add	r3, pc
   122ae:	ldr	r3, [r3, r2]
   122b0:	ldr	r3, [r3, #0]
   122b2:	cmp	r3, #4
   122b4:	bne.n	122bc <fmt_end_list_value@@Base+0x14>
   122b6:	movs	r0, #10
   122b8:	b.w	878c <putchar@plt>
   122bc:	cmp	r3, #8
   122be:	bne.n	122c4 <fmt_end_list_value@@Base+0x1c>
   122c0:	movs	r0, #34	; 0x22
   122c2:	b.n	122b8 <fmt_end_list_value@@Base+0x10>
   122c4:	bx	lr
   122c6:	nop
   122c8:	cmp	r2, #220	; 0xdc
   122ca:	movs	r5, r0
   122cc:	lsls	r0, r4, #8
	...

000122d0 <fmt_start_value@@Base>:
   122d0:	ldr	r3, [pc, #64]	; (12314 <fmt_start_value@@Base+0x44>)
   122d2:	mov	r0, r1
   122d4:	ldr	r2, [pc, #64]	; (12318 <fmt_start_value@@Base+0x48>)
   122d6:	add	r3, pc
   122d8:	push	{r4, lr}
   122da:	ldr	r3, [r3, r2]
   122dc:	ldr	r3, [r3, #0]
   122de:	cmp	r3, #4
   122e0:	bne.n	1230a <fmt_start_value@@Base+0x3a>
   122e2:	ldr	r4, [r1, #4]
   122e4:	ldr	r1, [pc, #52]	; (1231c <fmt_start_value@@Base+0x4c>)
   122e6:	mov	r0, r4
   122e8:	add	r1, pc
   122ea:	blx	837c <strcmp@plt>
   122ee:	cbnz	r0, 122fa <fmt_start_value@@Base+0x2a>
   122f0:	ldmia.w	sp!, {r4, lr}
   122f4:	movs	r0, #10
   122f6:	b.w	878c <putchar@plt>
   122fa:	ldr	r1, [pc, #36]	; (12320 <fmt_start_value@@Base+0x50>)
   122fc:	mov	r0, r4
   122fe:	add	r1, pc
   12300:	blx	837c <strcmp@plt>
   12304:	cmp	r0, #0
   12306:	beq.n	122f0 <fmt_start_value@@Base+0x20>
   12308:	pop	{r4, pc}
   1230a:	cmp	r3, #8
   1230c:	bne.n	12308 <fmt_start_value@@Base+0x38>
   1230e:	ldmia.w	sp!, {r4, lr}
   12312:	b.n	121c4 <btrfs_check_nodesize@@Base+0x100>
   12314:	cmp	r2, #178	; 0xb2
   12316:	movs	r5, r0
   12318:	lsls	r0, r4, #8
   1231a:	movs	r0, r0
   1231c:	str	r5, [sp, #548]	; 0x224
   1231e:	movs	r2, r0
   12320:	ldmia	r7!, {r0, r5, r6}
   12322:	movs	r2, r0

00012324 <fmt_end_value@@Base>:
   12324:	ldr	r3, [pc, #16]	; (12338 <fmt_end_value@@Base+0x14>)
   12326:	mov	r0, r1
   12328:	ldr	r2, [pc, #16]	; (1233c <fmt_end_value@@Base+0x18>)
   1232a:	add	r3, pc
   1232c:	ldr	r3, [r3, r2]
   1232e:	ldr	r3, [r3, #0]
   12330:	cmp	r3, #8
   12332:	bne.n	12336 <fmt_end_value@@Base+0x12>
   12334:	b.n	121c4 <btrfs_check_nodesize@@Base+0x100>
   12336:	bx	lr
   12338:	cmp	r2, #94	; 0x5e
   1233a:	movs	r5, r0
   1233c:	lsls	r0, r4, #8
	...

00012340 <fmt_print_start_group@@Base>:
   12340:	ldr	r3, [pc, #108]	; (123b0 <fmt_print_start_group@@Base+0x70>)
   12342:	push	{r4, r5, r6, lr}
   12344:	mov	r4, r2
   12346:	ldr	r2, [pc, #108]	; (123b4 <fmt_print_start_group@@Base+0x74>)
   12348:	add	r3, pc
   1234a:	mov	r5, r0
   1234c:	mov	r6, r1
   1234e:	ldr	r3, [r3, r2]
   12350:	ldr	r3, [r3, #0]
   12352:	cmp	r3, #8
   12354:	bne.n	123ae <fmt_print_start_group@@Base+0x6e>
   12356:	bl	12156 <btrfs_check_nodesize@@Base+0x92>
   1235a:	ldr	r3, [r5, #8]
   1235c:	cmp	r3, #14
   1235e:	ble.n	12372 <fmt_print_start_group@@Base+0x32>
   12360:	ldr	r1, [pc, #84]	; (123b8 <fmt_print_start_group@@Base+0x78>)
   12362:	movs	r2, #16
   12364:	add	r1, pc
   12366:	movs	r0, #1
   12368:	blx	87f4 <__printf_chk@plt+0x4>
   1236c:	movs	r0, #1
   1236e:	blx	86f8 <exit@plt>
   12372:	adds	r2, r3, #1
   12374:	cmp	r4, #1
   12376:	add.w	r1, r5, r2
   1237a:	add.w	r3, r3, #9
   1237e:	str	r2, [r5, #8]
   12380:	strb	r4, [r1, #16]
   12382:	mov.w	r1, #0
   12386:	str.w	r1, [r5, r3, lsl #2]
   1238a:	bne.n	1239c <fmt_print_start_group@@Base+0x5c>
   1238c:	ldr	r1, [pc, #44]	; (123bc <fmt_print_start_group@@Base+0x7c>)
   1238e:	mov	r2, r6
   12390:	add	r1, pc
   12392:	ldmia.w	sp!, {r4, r5, r6, lr}
   12396:	movs	r0, #1
   12398:	b.w	87f0 <__printf_chk@plt>
   1239c:	cmp	r4, #2
   1239e:	bne.n	123a8 <fmt_print_start_group@@Base+0x68>
   123a0:	ldr	r1, [pc, #28]	; (123c0 <fmt_print_start_group@@Base+0x80>)
   123a2:	mov	r2, r6
   123a4:	add	r1, pc
   123a6:	b.n	12392 <fmt_print_start_group@@Base+0x52>
   123a8:	ldr	r1, [pc, #24]	; (123c4 <fmt_print_start_group@@Base+0x84>)
   123aa:	add	r1, pc
   123ac:	b.n	12366 <fmt_print_start_group@@Base+0x26>
   123ae:	pop	{r4, r5, r6, pc}
   123b0:	cmp	r2, #64	; 0x40
   123b2:	movs	r5, r0
   123b4:	lsls	r0, r4, #8
   123b6:	movs	r0, r0
   123b8:	str	r5, [sp, #344]	; 0x158
   123ba:	movs	r2, r0
   123bc:	str	r5, [sp, #344]	; 0x158
   123be:	movs	r2, r0
   123c0:	str	r5, [sp, #296]	; 0x128
   123c2:	movs	r2, r0
   123c4:	str	r5, [sp, #304]	; 0x130
   123c6:	movs	r2, r0

000123c8 <fmt_print_end_group@@Base>:
   123c8:	push	{r3, r4, r5, lr}
   123ca:	mov	r4, r0
   123cc:	ldr	r3, [pc, #88]	; (12428 <fmt_print_end_group@@Base+0x60>)
   123ce:	ldr	r2, [pc, #92]	; (1242c <fmt_print_end_group@@Base+0x64>)
   123d0:	add	r3, pc
   123d2:	ldr	r3, [r3, r2]
   123d4:	ldr	r3, [r3, #0]
   123d6:	cmp	r3, #8
   123d8:	bne.n	12426 <fmt_print_end_group@@Base+0x5e>
   123da:	ldr	r3, [r0, #8]
   123dc:	adds	r2, r0, r3
   123de:	cmp	r3, #0
   123e0:	ldrb	r5, [r2, #16]
   123e2:	bgt.n	123f2 <fmt_print_end_group@@Base+0x2a>
   123e4:	ldr	r0, [pc, #72]	; (12430 <fmt_print_end_group@@Base+0x68>)
   123e6:	add	r0, pc
   123e8:	blx	8618 <puts@plt+0x4>
   123ec:	movs	r0, #1
   123ee:	blx	86f8 <exit@plt>
   123f2:	subs	r3, #1
   123f4:	str	r3, [r0, #8]
   123f6:	movs	r0, #10
   123f8:	blx	8790 <putchar@plt+0x4>
   123fc:	ldr	r0, [r4, #8]
   123fe:	bl	1212c <btrfs_check_nodesize@@Base+0x68>
   12402:	cmp	r5, #1
   12404:	bne.n	12410 <fmt_print_end_group@@Base+0x48>
   12406:	movs	r0, #125	; 0x7d
   12408:	ldmia.w	sp!, {r3, r4, r5, lr}
   1240c:	b.w	878c <putchar@plt>
   12410:	cmp	r5, #2
   12412:	bne.n	12418 <fmt_print_end_group@@Base+0x50>
   12414:	movs	r0, #93	; 0x5d
   12416:	b.n	12408 <fmt_print_end_group@@Base+0x40>
   12418:	ldr	r1, [pc, #24]	; (12434 <fmt_print_end_group@@Base+0x6c>)
   1241a:	movs	r0, #1
   1241c:	ldr	r2, [r4, #8]
   1241e:	add	r1, pc
   12420:	blx	87f4 <__printf_chk@plt+0x4>
   12424:	b.n	123ec <fmt_print_end_group@@Base+0x24>
   12426:	pop	{r3, r4, r5, pc}
   12428:	cmp	r1, #184	; 0xb8
   1242a:	movs	r5, r0
   1242c:	lsls	r0, r4, #8
   1242e:	movs	r0, r0
   12430:	str	r4, [sp, #672]	; 0x2a0
   12432:	movs	r2, r0
   12434:	str	r4, [sp, #864]	; 0x360
   12436:	movs	r2, r0

00012438 <fmt_start@@Base>:
   12438:	push	{r4, r5, r6, lr}
   1243a:	mov	r4, r0
   1243c:	ldr	r0, [pc, #92]	; (1249c <fmt_start@@Base+0x64>)
   1243e:	movs	r5, #1
   12440:	strd	r2, r3, [r4]
   12444:	ldr	r3, [pc, #88]	; (124a0 <fmt_start@@Base+0x68>)
   12446:	add	r0, pc
   12448:	str	r1, [r4, #12]
   1244a:	str	r5, [r4, #8]
   1244c:	ldr	r3, [r0, r3]
   1244e:	ldr	r3, [r3, #0]
   12450:	lsls	r3, r3, #28
   12452:	bpl.n	1249a <fmt_start@@Base+0x62>
   12454:	movs	r0, #123	; 0x7b
   12456:	ldr	r6, [pc, #76]	; (124a4 <fmt_start@@Base+0x6c>)
   12458:	blx	8790 <putchar@plt+0x4>
   1245c:	ldr	r3, [r4, #8]
   1245e:	add	r6, pc
   12460:	mov	r0, r4
   12462:	adds	r2, r4, r3
   12464:	adds	r3, #8
   12466:	mov	r1, r6
   12468:	strb	r5, [r2, #16]
   1246a:	movs	r2, #0
   1246c:	str.w	r2, [r4, r3, lsl #2]
   12470:	mov	r2, r5
   12472:	bl	12340 <fmt_print_start_group@@Base>
   12476:	mov	r0, r4
   12478:	bl	12156 <btrfs_check_nodesize@@Base+0x92>
   1247c:	ldr	r1, [pc, #40]	; (124a8 <fmt_start@@Base+0x70>)
   1247e:	mov	r0, r5
   12480:	add	r1, pc
   12482:	blx	87f4 <__printf_chk@plt+0x4>
   12486:	ldr	r3, [r4, #8]
   12488:	mov	r1, r6
   1248a:	mov	r0, r4
   1248c:	adds	r3, #8
   1248e:	str.w	r5, [r4, r3, lsl #2]
   12492:	ldmia.w	sp!, {r4, r5, r6, lr}
   12496:	b.w	123c8 <fmt_print_end_group@@Base>
   1249a:	pop	{r4, r5, r6, pc}
   1249c:	cmp	r1, #66	; 0x42
   1249e:	movs	r5, r0
   124a0:	lsls	r0, r4, #8
   124a2:	movs	r0, r0
   124a4:	str	r4, [sp, #780]	; 0x30c
   124a6:	movs	r2, r0
   124a8:	str	r4, [sp, #680]	; 0x2a8
   124aa:	movs	r2, r0

000124ac <fmt_print@@Base>:
   124ac:	push	{r1, r2, r3}
   124ae:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   124b2:	mov	r5, r0
   124b4:	sub	sp, #332	; 0x14c
   124b6:	ldr	r0, [pc, #572]	; (126f4 <fmt_print@@Base+0x248>)
   124b8:	add	r3, sp, #356	; 0x164
   124ba:	ldr	r1, [pc, #572]	; (126f8 <fmt_print@@Base+0x24c>)
   124bc:	add	r0, pc
   124be:	ldr	r4, [r5, #12]
   124c0:	ldr.w	r2, [r3], #4
   124c4:	add	r6, sp, #16
   124c6:	ldr	r1, [r0, r1]
   124c8:	ldr	r7, [pc, #560]	; (126fc <fmt_print@@Base+0x250>)
   124ca:	ldr	r1, [r1, #0]
   124cc:	str	r1, [sp, #324]	; 0x144
   124ce:	mov.w	r1, #0
   124d2:	str	r3, [r6, #0]
   124d4:	add	r7, pc
   124d6:	ldr	r1, [r4, #0]
   124d8:	cbnz	r1, 124ea <fmt_print@@Base+0x3e>
   124da:	ldr	r1, [pc, #548]	; (12700 <fmt_print@@Base+0x254>)
   124dc:	movs	r0, #1
   124de:	add	r1, pc
   124e0:	blx	87f4 <__printf_chk@plt+0x4>
   124e4:	movs	r0, #1
   124e6:	blx	86f8 <exit@plt>
   124ea:	mov	r0, r2
   124ec:	str	r2, [sp, #12]
   124ee:	blx	837c <strcmp@plt>
   124f2:	cmp	r0, #0
   124f4:	beq.w	12666 <fmt_print@@Base+0x1ba>
   124f8:	ldr	r2, [sp, #12]
   124fa:	adds	r4, #16
   124fc:	b.n	124d6 <fmt_print@@Base+0x2a>
   124fe:	cmp	r3, #8
   12500:	bne.w	126b2 <fmt_print@@Base+0x206>
   12504:	ldr	r7, [r4, #4]
   12506:	ldr	r1, [pc, #508]	; (12704 <fmt_print@@Base+0x258>)
   12508:	mov	r0, r7
   1250a:	add	r1, pc
   1250c:	blx	837c <strcmp@plt>
   12510:	cbnz	r0, 1251e <fmt_print@@Base+0x72>
   12512:	movs	r2, #2
   12514:	ldr	r1, [r4, #12]
   12516:	mov	r0, r5
   12518:	bl	12340 <fmt_print_start_group@@Base>
   1251c:	b.n	126b2 <fmt_print@@Base+0x206>
   1251e:	ldr	r1, [pc, #488]	; (12708 <fmt_print@@Base+0x25c>)
   12520:	mov	r0, r7
   12522:	add	r1, pc
   12524:	blx	837c <strcmp@plt>
   12528:	cbnz	r0, 1252e <fmt_print@@Base+0x82>
   1252a:	movs	r2, #1
   1252c:	b.n	12514 <fmt_print@@Base+0x68>
   1252e:	mov	r0, r5
   12530:	bl	12156 <btrfs_check_nodesize@@Base+0x92>
   12534:	ldr	r1, [pc, #468]	; (1270c <fmt_print@@Base+0x260>)
   12536:	ldr	r2, [r4, #12]
   12538:	movs	r0, #1
   1253a:	add	r1, pc
   1253c:	blx	87f4 <__printf_chk@plt+0x4>
   12540:	b.n	126b2 <fmt_print@@Base+0x206>
   12542:	ldr	r1, [pc, #460]	; (12710 <fmt_print@@Base+0x264>)
   12544:	mov	r0, r7
   12546:	add	r1, pc
   12548:	blx	837c <strcmp@plt>
   1254c:	cbnz	r0, 12580 <fmt_print@@Base+0xd4>
   1254e:	ldr	r3, [r6, #0]
   12550:	adds	r2, r3, #4
   12552:	str	r2, [r6, #0]
   12554:	ldr	r6, [r3, #0]
   12556:	mov	r0, r6
   12558:	blx	8770 <uuid_is_null@plt>
   1255c:	cbz	r0, 12566 <fmt_print@@Base+0xba>
   1255e:	movs	r0, #45	; 0x2d
   12560:	blx	8790 <putchar@plt+0x4>
   12564:	b.n	126ce <fmt_print@@Base+0x222>
   12566:	add	r2, sp, #68	; 0x44
   12568:	mov	r0, r6
   1256a:	str	r2, [sp, #12]
   1256c:	mov	r1, r2
   1256e:	blx	8394 <uuid_unparse@plt>
   12572:	ldr	r1, [pc, #416]	; (12714 <fmt_print@@Base+0x268>)
   12574:	ldr	r2, [sp, #12]
   12576:	add	r1, pc
   12578:	movs	r0, #1
   1257a:	blx	87f4 <__printf_chk@plt+0x4>
   1257e:	b.n	126ce <fmt_print@@Base+0x222>
   12580:	ldr	r1, [pc, #404]	; (12718 <fmt_print@@Base+0x26c>)
   12582:	mov	r0, r7
   12584:	add	r1, pc
   12586:	blx	837c <strcmp@plt>
   1258a:	cbnz	r0, 125c0 <fmt_print@@Base+0x114>
   1258c:	ldr	r3, [r6, #0]
   1258e:	add	r0, sp, #20
   12590:	adds	r2, r3, #4
   12592:	str	r2, [r6, #0]
   12594:	ldr	r3, [r3, #0]
   12596:	str	r3, [r0, #0]
   12598:	cmp	r3, #0
   1259a:	beq.n	1255e <fmt_print@@Base+0xb2>
   1259c:	add	r3, sp, #24
   1259e:	add	r6, sp, #68	; 0x44
   125a0:	str	r3, [sp, #12]
   125a2:	mov	r1, r3
   125a4:	blx	84f4 <localtime_r@plt>
   125a8:	ldr	r2, [pc, #368]	; (1271c <fmt_print@@Base+0x270>)
   125aa:	mov.w	r1, #256	; 0x100
   125ae:	ldr	r3, [sp, #12]
   125b0:	add	r2, pc
   125b2:	mov	r0, r6
   125b4:	blx	8668 <strftime@plt>
   125b8:	ldr	r1, [pc, #356]	; (12720 <fmt_print@@Base+0x274>)
   125ba:	mov	r2, r6
   125bc:	add	r1, pc
   125be:	b.n	12578 <fmt_print@@Base+0xcc>
   125c0:	ldr	r1, [pc, #352]	; (12724 <fmt_print@@Base+0x278>)
   125c2:	mov	r0, r7
   125c4:	add	r1, pc
   125c6:	blx	837c <strcmp@plt>
   125ca:	cmp	r0, #0
   125cc:	beq.n	126ce <fmt_print@@Base+0x222>
   125ce:	ldr	r1, [pc, #344]	; (12728 <fmt_print@@Base+0x27c>)
   125d0:	mov	r0, r7
   125d2:	add	r1, pc
   125d4:	blx	837c <strcmp@plt>
   125d8:	cmp	r0, #0
   125da:	beq.n	126ce <fmt_print@@Base+0x222>
   125dc:	ldr	r1, [pc, #332]	; (1272c <fmt_print@@Base+0x280>)
   125de:	mov	r0, r7
   125e0:	add	r1, pc
   125e2:	blx	837c <strcmp@plt>
   125e6:	cbnz	r0, 12608 <fmt_print@@Base+0x15c>
   125e8:	ldr	r1, [r6, #0]
   125ea:	movs	r0, #1
   125ec:	adds	r1, #7
   125ee:	bic.w	r1, r1, #7
   125f2:	ldrd	r2, r3, [r1, #8]
   125f6:	strd	r2, r3, [sp]
   125fa:	ldrd	r2, r3, [r1]
   125fe:	ldr	r1, [pc, #304]	; (12730 <fmt_print@@Base+0x284>)
   12600:	add	r1, pc
   12602:	blx	87f4 <__printf_chk@plt+0x4>
   12606:	b.n	126ce <fmt_print@@Base+0x222>
   12608:	ldr	r1, [pc, #296]	; (12734 <fmt_print@@Base+0x288>)
   1260a:	mov	r0, r7
   1260c:	add	r1, pc
   1260e:	blx	837c <strcmp@plt>
   12612:	cbnz	r0, 12638 <fmt_print@@Base+0x18c>
   12614:	ldr	r3, [r6, #0]
   12616:	adds	r3, #7
   12618:	bic.w	r3, r3, #7
   1261c:	mov	r2, r3
   1261e:	ldrd	r0, r1, [r2], #12
   12622:	str	r2, [r6, #0]
   12624:	orrs.w	r2, r0, r1
   12628:	beq.n	1255e <fmt_print@@Base+0xb2>
   1262a:	ldr	r2, [r3, #8]
   1262c:	bl	30500 <pretty_size_mode@@Base>
   12630:	ldr	r1, [pc, #260]	; (12738 <fmt_print@@Base+0x28c>)
   12632:	add	r1, pc
   12634:	mov	r2, r0
   12636:	b.n	12578 <fmt_print@@Base+0xcc>
   12638:	ldr	r1, [pc, #256]	; (1273c <fmt_print@@Base+0x290>)
   1263a:	mov	r0, r7
   1263c:	add	r1, pc
   1263e:	blx	837c <strcmp@plt>
   12642:	cbnz	r0, 1265e <fmt_print@@Base+0x1b2>
   12644:	ldr	r3, [r6, #0]
   12646:	adds	r3, #7
   12648:	bic.w	r3, r3, #7
   1264c:	ldr	r2, [r3, #8]
   1264e:	ldrd	r0, r1, [r3]
   12652:	bl	30500 <pretty_size_mode@@Base>
   12656:	ldr	r1, [pc, #232]	; (12740 <fmt_print@@Base+0x294>)
   12658:	add	r1, pc
   1265a:	mov	r2, r0
   1265c:	b.n	12578 <fmt_print@@Base+0xcc>
   1265e:	ldr	r1, [pc, #228]	; (12744 <fmt_print@@Base+0x298>)
   12660:	mov	r2, r7
   12662:	add	r1, pc
   12664:	b.n	12578 <fmt_print@@Base+0xcc>
   12666:	ldr	r3, [pc, #224]	; (12748 <fmt_print@@Base+0x29c>)
   12668:	ldr	r3, [r7, r3]
   1266a:	ldr	r3, [r3, #0]
   1266c:	cmp	r3, #4
   1266e:	bne.w	124fe <fmt_print@@Base+0x52>
   12672:	ldr	r3, [r4, #8]
   12674:	movs	r0, #10
   12676:	ldrb.w	r8, [r3]
   1267a:	blx	8790 <putchar@plt+0x4>
   1267e:	ldr	r0, [r5, #4]
   12680:	bl	12144 <btrfs_check_nodesize@@Base+0x80>
   12684:	ldr	r2, [r4, #8]
   12686:	mov	r0, r2
   12688:	str	r2, [sp, #12]
   1268a:	blx	8704 <strlen@plt>
   1268e:	ldr	r1, [pc, #188]	; (1274c <fmt_print@@Base+0x2a0>)
   12690:	ldr	r2, [sp, #12]
   12692:	add	r1, pc
   12694:	mov	r7, r0
   12696:	movs	r0, #1
   12698:	blx	87f4 <__printf_chk@plt+0x4>
   1269c:	cmp.w	r8, #0
   126a0:	beq.n	126aa <fmt_print@@Base+0x1fe>
   126a2:	movs	r0, #58	; 0x3a
   126a4:	adds	r7, #1
   126a6:	blx	8790 <putchar@plt+0x4>
   126aa:	ldr	r0, [r5, #0]
   126ac:	subs	r0, r0, r7
   126ae:	bl	12144 <btrfs_check_nodesize@@Base+0x80>
   126b2:	mov	r1, r4
   126b4:	mov	r0, r5
   126b6:	bl	122d0 <fmt_start_value@@Base>
   126ba:	ldr	r7, [r4, #4]
   126bc:	ldrb	r3, [r7, #0]
   126be:	cmp	r3, #37	; 0x25
   126c0:	bne.w	12542 <fmt_print@@Base+0x96>
   126c4:	ldr	r2, [r6, #0]
   126c6:	mov	r1, r7
   126c8:	movs	r0, #1
   126ca:	blx	8470 <__vprintf_chk@plt>
   126ce:	mov	r1, r4
   126d0:	mov	r0, r5
   126d2:	bl	12324 <fmt_end_value@@Base>
   126d6:	ldr	r2, [pc, #120]	; (12750 <fmt_print@@Base+0x2a4>)
   126d8:	ldr	r3, [pc, #28]	; (126f8 <fmt_print@@Base+0x24c>)
   126da:	add	r2, pc
   126dc:	ldr	r3, [r2, r3]
   126de:	ldr	r2, [r3, #0]
   126e0:	ldr	r3, [sp, #324]	; 0x144
   126e2:	eors	r2, r3
   126e4:	beq.n	126ea <fmt_print@@Base+0x23e>
   126e6:	blx	84cc <__stack_chk_fail@plt>
   126ea:	add	sp, #332	; 0x14c
   126ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   126f0:	add	sp, #12
   126f2:	bx	lr
   126f4:	cmp	r0, #204	; 0xcc
   126f6:	movs	r5, r0
   126f8:	lsls	r4, r4, #8
   126fa:	movs	r0, r0
   126fc:	cmp	r0, #180	; 0xb4
   126fe:	movs	r5, r0
   12700:	str	r4, [sp, #684]	; 0x2ac
   12702:	movs	r2, r0
   12704:	str	r3, [sp, #412]	; 0x19c
   12706:	movs	r2, r0
   12708:	ldmia	r5, {r0, r2, r3, r4, r5}
   1270a:	movs	r2, r0
   1270c:	str	r3, [sp, #1020]	; 0x3fc
   1270e:	movs	r2, r0
   12710:	ldr	r1, [sp, #900]	; 0x384
   12712:	movs	r2, r0
   12714:	udf	#56	; 0x38
   12716:	movs	r2, r0
   12718:	str	r3, [sp, #752]	; 0x2f0
   1271a:	movs	r2, r0
   1271c:	str	r3, [sp, #616]	; 0x268
   1271e:	movs	r2, r0
   12720:	ble.n	12708 <fmt_print@@Base+0x25c>
   12722:	movs	r2, r0
   12724:	str	r2, [sp, #692]	; 0x2b4
   12726:	movs	r2, r0
   12728:	ldmia	r4!, {r0, r2, r3, r7}
   1272a:	movs	r2, r0
   1272c:	ldrb	r4, [r6, #27]
   1272e:	movs	r2, r0
   12730:	ldrb	r6, [r5, #19]
   12732:	movs	r2, r0
   12734:	str	r3, [sp, #308]	; 0x134
   12736:	movs	r2, r0
   12738:	ble.n	12834 <fmt_print@@Base+0x388>
   1273a:	movs	r2, r0
   1273c:	lsrs	r5, r3, #28
   1273e:	movs	r4, r0
   12740:	ble.n	127f0 <fmt_print@@Base+0x344>
   12742:	movs	r2, r0
   12744:	str	r3, [sp, #16]
   12746:	movs	r2, r0
   12748:	lsls	r0, r4, #8
   1274a:	movs	r0, r0
   1274c:	ble.n	12788 <fmt_print@@Base+0x2dc>
   1274e:	movs	r2, r0
   12750:	movs	r6, #174	; 0xae
   12752:	movs	r5, r0
   12754:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   12758:	mov	r6, r0
   1275a:	ldr	r5, [sp, #32]
   1275c:	mov	r8, r2
   1275e:	mov	r7, r3
   12760:	mov	r0, r5
   12762:	blx	8634 <malloc@plt+0x4>
   12766:	mov	r4, r0
   12768:	cbz	r0, 12798 <fmt_print@@Base+0x2ec>
   1276a:	mov	r2, r5
   1276c:	movs	r1, #0
   1276e:	blx	8780 <memset@plt+0x4>
   12772:	mov	r2, r5
   12774:	mov	r1, r4
   12776:	mov	r0, r6
   12778:	strd	r8, r7, [sp]
   1277c:	blx	87e4 <pwrite64@plt>
   12780:	cmp	r0, r5
   12782:	mov	r0, r4
   12784:	ite	eq
   12786:	moveq	r5, #0
   12788:	mvnne.w	r5, #4
   1278c:	blx	83f0 <free@plt+0x4>
   12790:	mov	r0, r5
   12792:	add	sp, #8
   12794:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   12798:	mvn.w	r5, #11
   1279c:	b.n	12790 <fmt_print@@Base+0x2e4>
   1279e:	ldr	r1, [pc, #292]	; (128c4 <fmt_print@@Base+0x418>)
   127a0:	ldr	r2, [pc, #292]	; (128c8 <fmt_print@@Base+0x41c>)
   127a2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   127a6:	add	r1, pc
   127a8:	sub.w	sp, sp, #8192	; 0x2000
   127ac:	mov	r7, r0
   127ae:	sub	sp, #36	; 0x24
   127b0:	ldr	r2, [r1, r2]
   127b2:	add	r5, sp, #32
   127b4:	add.w	r3, sp, #8192	; 0x2000
   127b8:	ldr	r2, [r2, #0]
   127ba:	str	r2, [r3, #28]
   127bc:	mov.w	r2, #0
   127c0:	adds	r3, #28
   127c2:	movs	r3, #0
   127c4:	str.w	r3, [r5, #-12]
   127c8:	str.w	r3, [r5, #-8]
   127cc:	blx	8764 <blkid_new_probe@plt>
   127d0:	sub.w	r8, r5, #12
   127d4:	sub.w	r4, r5, #8
   127d8:	mov	r6, r0
   127da:	cmp	r0, #0
   127dc:	beq.n	128b0 <fmt_print@@Base+0x404>
   127de:	movs	r3, #0
   127e0:	movs	r2, #0
   127e2:	mov	r1, r7
   127e4:	strd	r2, r3, [sp]
   127e8:	blx	84a4 <blkid_probe_set_device@plt>
   127ec:	mov	r3, r0
   127ee:	cmp	r0, #0
   127f0:	bne.n	128aa <fmt_print@@Base+0x3fe>
   127f2:	ldr	r1, [pc, #216]	; (128cc <fmt_print@@Base+0x420>)
   127f4:	mov	r2, r8
   127f6:	mov	r0, r6
   127f8:	add	r1, pc
   127fa:	blx	83ac <blkid_probe_lookup_value@plt>
   127fe:	mov	r2, r0
   12800:	cbz	r0, 12824 <fmt_print@@Base+0x378>
   12802:	movs	r4, #1
   12804:	mov	r0, r6
   12806:	blx	8858 <blkid_free_probe@plt>
   1280a:	ldr	r1, [pc, #196]	; (128d0 <fmt_print@@Base+0x424>)
   1280c:	add.w	r3, sp, #8192	; 0x2000
   12810:	ldr	r2, [pc, #180]	; (128c8 <fmt_print@@Base+0x41c>)
   12812:	adds	r3, #28
   12814:	add	r1, pc
   12816:	ldr	r2, [r1, r2]
   12818:	ldr	r1, [r2, #0]
   1281a:	ldr	r2, [r3, #0]
   1281c:	eors	r1, r2
   1281e:	beq.n	128b6 <fmt_print@@Base+0x40a>
   12820:	blx	84cc <__stack_chk_fail@plt>
   12824:	ldr	r1, [pc, #172]	; (128d4 <fmt_print@@Base+0x428>)
   12826:	mov	r3, r4
   12828:	mov	r0, r6
   1282a:	add	r1, pc
   1282c:	blx	83ac <blkid_probe_lookup_value@plt>
   12830:	mov	r1, r0
   12832:	cmp	r0, #0
   12834:	bne.n	12802 <fmt_print@@Base+0x356>
   12836:	ldr	r3, [r4, #0]
   12838:	cmp	r3, #0
   1283a:	beq.n	12802 <fmt_print@@Base+0x356>
   1283c:	ldr.w	r0, [r8]
   12840:	cmp	r0, #0
   12842:	beq.n	12802 <fmt_print@@Base+0x356>
   12844:	movs	r2, #10
   12846:	blx	8590 <strtoll@plt>
   1284a:	ldr	r3, [r4, #0]
   1284c:	cmp.w	r3, #8192	; 0x2000
   12850:	itt	hi
   12852:	movhi.w	r3, #8192	; 0x2000
   12856:	strhi	r3, [r4, #0]
   12858:	subs	r4, r5, #4
   1285a:	ldr.w	r2, [r5, #-8]
   1285e:	mov.w	r3, #8192	; 0x2000
   12862:	str	r2, [sp, #12]
   12864:	mov	r9, r0
   12866:	mov	r8, r1
   12868:	mov	r0, r4
   1286a:	movs	r1, #0
   1286c:	blx	8448 <__memset_chk@plt>
   12870:	mov	r1, r4
   12872:	ldr	r2, [sp, #12]
   12874:	mov	r0, r7
   12876:	strd	r9, r8, [sp]
   1287a:	blx	87e4 <pwrite64@plt>
   1287e:	subs	r4, r0, #0
   12880:	bge.n	12896 <fmt_print@@Base+0x3ea>
   12882:	ldr	r0, [pc, #84]	; (128d8 <fmt_print@@Base+0x42c>)
   12884:	add	r0, pc
   12886:	bl	1747c <__btrfs_error@@Base>
   1288a:	mov.w	r4, #4294967295	; 0xffffffff
   1288e:	mov	r0, r7
   12890:	blx	8370 <fsync@plt>
   12894:	b.n	12804 <fmt_print@@Base+0x358>
   12896:	ldr.w	r2, [r5, #-8]
   1289a:	cmp	r4, r2
   1289c:	beq.n	1288e <fmt_print@@Base+0x3e2>
   1289e:	ldr	r0, [pc, #60]	; (128dc <fmt_print@@Base+0x430>)
   128a0:	mov	r1, r4
   128a2:	add	r0, pc
   128a4:	bl	1747c <__btrfs_error@@Base>
   128a8:	b.n	1288a <fmt_print@@Base+0x3de>
   128aa:	mov.w	r4, #4294967295	; 0xffffffff
   128ae:	b.n	12804 <fmt_print@@Base+0x358>
   128b0:	mov.w	r4, #4294967295	; 0xffffffff
   128b4:	b.n	1280a <fmt_print@@Base+0x35e>
   128b6:	mov	r0, r4
   128b8:	add.w	sp, sp, #8192	; 0x2000
   128bc:	add	sp, #36	; 0x24
   128be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   128c2:	nop
   128c4:	movs	r5, #226	; 0xe2
   128c6:	movs	r5, r0
   128c8:	lsls	r4, r4, #8
   128ca:	movs	r0, r0
   128cc:	str	r1, [sp, #712]	; 0x2c8
   128ce:	movs	r2, r0
   128d0:	movs	r5, #116	; 0x74
   128d2:	movs	r5, r0
   128d4:	str	r1, [sp, #572]	; 0x23c
   128d6:	movs	r2, r0
   128d8:	str	r1, [sp, #244]	; 0xf4
   128da:	movs	r2, r0
   128dc:	str	r1, [sp, #268]	; 0x10c
   128de:	movs	r2, r0

000128e0 <btrfs_device_size@@Base>:
   128e0:	push	{r0, r1, r2, r3, r4, lr}
   128e2:	ldr	r2, [pc, #92]	; (12940 <btrfs_device_size@@Base+0x60>)
   128e4:	ldr	r3, [pc, #92]	; (12944 <btrfs_device_size@@Base+0x64>)
   128e6:	add	r2, pc
   128e8:	ldr	r3, [r2, r3]
   128ea:	ldr	r3, [r3, #0]
   128ec:	str	r3, [sp, #12]
   128ee:	mov.w	r3, #0
   128f2:	ldr	r3, [r1, #16]
   128f4:	and.w	r3, r3, #61440	; 0xf000
   128f8:	cmp.w	r3, #32768	; 0x8000
   128fc:	bne.n	12916 <btrfs_device_size@@Base+0x36>
   128fe:	ldrd	r0, r1, [r1, #48]	; 0x30
   12902:	ldr	r2, [pc, #68]	; (12948 <btrfs_device_size@@Base+0x68>)
   12904:	ldr	r3, [pc, #60]	; (12944 <btrfs_device_size@@Base+0x64>)
   12906:	add	r2, pc
   12908:	ldr	r3, [r2, r3]
   1290a:	ldr	r2, [r3, #0]
   1290c:	ldr	r3, [sp, #12]
   1290e:	eors	r2, r3
   12910:	beq.n	12934 <btrfs_device_size@@Base+0x54>
   12912:	blx	84cc <__stack_chk_fail@plt>
   12916:	cmp.w	r3, #24576	; 0x6000
   1291a:	bne.n	1292e <btrfs_device_size@@Base+0x4e>
   1291c:	ldr	r1, [pc, #28]	; (1293c <btrfs_device_size@@Base+0x5c>)
   1291e:	mov	r2, sp
   12920:	blx	8578 <ioctl@plt>
   12924:	cmp	r0, #0
   12926:	blt.n	1292e <btrfs_device_size@@Base+0x4e>
   12928:	ldrd	r0, r1, [sp]
   1292c:	b.n	12902 <btrfs_device_size@@Base+0x22>
   1292e:	movs	r0, #0
   12930:	movs	r1, #0
   12932:	b.n	12902 <btrfs_device_size@@Base+0x22>
   12934:	add	sp, #20
   12936:	ldr.w	pc, [sp], #4
   1293a:	nop
   1293c:	asrs	r2, r6, #9
   1293e:	strh	r4, [r0, #0]
   12940:	movs	r4, #162	; 0xa2
   12942:	movs	r5, r0
   12944:	lsls	r4, r4, #8
   12946:	movs	r0, r0
   12948:	movs	r4, #130	; 0x82
   1294a:	movs	r5, r0

0001294c <btrfs_prepare_device@@Base>:
   1294c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12950:	sub	sp, #180	; 0xb4
   12952:	ldr	r3, [pc, #588]	; (12ba0 <btrfs_prepare_device@@Base+0x254>)
   12954:	mov	r7, r1
   12956:	str	r2, [sp, #40]	; 0x28
   12958:	add	r1, sp, #48	; 0x30
   1295a:	ldr	r2, [pc, #584]	; (12ba4 <btrfs_prepare_device@@Base+0x258>)
   1295c:	mov	r6, r0
   1295e:	ldrd	r8, r9, [sp, #216]	; 0xd8
   12962:	add	r2, pc
   12964:	ldr	r3, [r2, r3]
   12966:	ldr	r3, [r3, #0]
   12968:	str	r3, [sp, #172]	; 0xac
   1296a:	mov.w	r3, #0
   1296e:	str	r1, [sp, #32]
   12970:	bl	396c4 <__libc_csu_fini@@Base+0x28>
   12974:	ldr	r1, [sp, #32]
   12976:	cmp	r0, #0
   12978:	bge.n	1299c <btrfs_prepare_device@@Base+0x50>
   1297a:	ldr	r0, [pc, #556]	; (12ba8 <btrfs_prepare_device@@Base+0x25c>)
   1297c:	mov	r1, r7
   1297e:	add	r0, pc
   12980:	bl	1747c <__btrfs_error@@Base>
   12984:	movs	r0, #1
   12986:	ldr	r2, [pc, #548]	; (12bac <btrfs_prepare_device@@Base+0x260>)
   12988:	ldr	r3, [pc, #532]	; (12ba0 <btrfs_prepare_device@@Base+0x254>)
   1298a:	add	r2, pc
   1298c:	ldr	r3, [r2, r3]
   1298e:	ldr	r2, [r3, #0]
   12990:	ldr	r3, [sp, #172]	; 0xac
   12992:	eors	r2, r3
   12994:	beq.w	12b9a <btrfs_prepare_device@@Base+0x24e>
   12998:	blx	84cc <__stack_chk_fail@plt>
   1299c:	mov	r0, r6
   1299e:	bl	128e0 <btrfs_device_size@@Base>
   129a2:	mov	r4, r0
   129a4:	mov	r5, r1
   129a6:	orrs.w	r3, r4, r5
   129aa:	bne.n	129b4 <btrfs_prepare_device@@Base+0x68>
   129ac:	ldr	r0, [pc, #512]	; (12bb0 <btrfs_prepare_device@@Base+0x264>)
   129ae:	mov	r1, r7
   129b0:	add	r0, pc
   129b2:	b.n	12980 <btrfs_prepare_device@@Base+0x34>
   129b4:	orrs.w	r3, r8, r9
   129b8:	beq.n	129c6 <btrfs_prepare_device@@Base+0x7a>
   129ba:	cmp	r9, r1
   129bc:	it	eq
   129be:	cmpeq	r8, r0
   129c0:	itt	cc
   129c2:	movcc	r4, r8
   129c4:	movcc	r5, r9
   129c6:	ldr	r3, [sp, #224]	; 0xe0
   129c8:	lsls	r1, r3, #30
   129ca:	bpl.n	12a80 <btrfs_prepare_device@@Base+0x134>
   129cc:	movs	r2, #0
   129ce:	movs	r3, #0
   129d0:	movw	r1, #4727	; 0x1277
   129d4:	strd	r2, r3, [sp, #152]	; 0x98
   129d8:	strd	r2, r3, [sp, #160]	; 0xa0
   129dc:	mov	r0, r6
   129de:	add	r2, sp, #152	; 0x98
   129e0:	blx	8578 <ioctl@plt>
   129e4:	cmp	r0, #0
   129e6:	bge.n	129f2 <btrfs_prepare_device@@Base+0xa6>
   129e8:	blx	8740 <__errno_location@plt>
   129ec:	ldr	r3, [r0, #0]
   129ee:	cmp	r3, #0
   129f0:	bne.n	12a80 <btrfs_prepare_device@@Base+0x134>
   129f2:	ldr	r3, [sp, #224]	; 0xe0
   129f4:	lsls	r2, r3, #29
   129f6:	bpl.n	12a12 <btrfs_prepare_device@@Base+0xc6>
   129f8:	mov.w	r2, #512	; 0x200
   129fc:	mov	r1, r5
   129fe:	mov	r0, r4
   12a00:	bl	30500 <pretty_size_mode@@Base>
   12a04:	ldr	r1, [pc, #428]	; (12bb4 <btrfs_prepare_device@@Base+0x268>)
   12a06:	mov	r2, r7
   12a08:	add	r1, pc
   12a0a:	mov	r3, r0
   12a0c:	movs	r0, #1
   12a0e:	blx	87f4 <__printf_chk@plt+0x4>
   12a12:	add	r2, sp, #152	; 0x98
   12a14:	mov	r8, r4
   12a16:	mov	r9, r5
   12a18:	movs	r3, #0
   12a1a:	strd	r3, r3, [sp, #32]
   12a1e:	ldr	r3, [sp, #32]
   12a20:	movs	r1, #0
   12a22:	cmp	r1, r9
   12a24:	mov.w	r0, #1073741824	; 0x40000000
   12a28:	it	eq
   12a2a:	cmpeq	r0, r8
   12a2c:	movw	r1, #4727	; 0x1277
   12a30:	str	r3, [sp, #152]	; 0x98
   12a32:	mov	r0, r6
   12a34:	ldr	r3, [sp, #36]	; 0x24
   12a36:	mov	fp, r8
   12a38:	mov	sl, r9
   12a3a:	itt	cc
   12a3c:	movcc.w	fp, #1073741824	; 0x40000000
   12a40:	movcc.w	sl, #0
   12a44:	str	r2, [sp, #44]	; 0x2c
   12a46:	strd	r3, fp, [sp, #156]	; 0x9c
   12a4a:	str.w	sl, [sp, #164]	; 0xa4
   12a4e:	blx	8578 <ioctl@plt>
   12a52:	ldr	r2, [sp, #44]	; 0x2c
   12a54:	cmp	r0, #0
   12a56:	bge.n	12a62 <btrfs_prepare_device@@Base+0x116>
   12a58:	blx	8740 <__errno_location@plt>
   12a5c:	ldr	r2, [sp, #44]	; 0x2c
   12a5e:	ldr	r3, [r0, #0]
   12a60:	cbnz	r3, 12a80 <btrfs_prepare_device@@Base+0x134>
   12a62:	ldr	r3, [sp, #32]
   12a64:	subs.w	r8, r8, fp
   12a68:	sbc.w	r9, r9, sl
   12a6c:	adds.w	r3, r3, fp
   12a70:	str	r3, [sp, #32]
   12a72:	ldr	r3, [sp, #36]	; 0x24
   12a74:	adc.w	r3, r3, sl
   12a78:	str	r3, [sp, #36]	; 0x24
   12a7a:	orrs.w	r3, r8, r9
   12a7e:	bne.n	12a1e <btrfs_prepare_device@@Base+0xd2>
   12a80:	movs	r1, #0
   12a82:	cmp	r1, r5
   12a84:	mov.w	r0, #2097152	; 0x200000
   12a88:	it	eq
   12a8a:	cmpeq	r0, r4
   12a8c:	mov	r3, r4
   12a8e:	mov.w	r2, #0
   12a92:	it	cc
   12a94:	movcc	r3, r0
   12a96:	mov	r0, r6
   12a98:	str	r3, [sp, #0]
   12a9a:	movs	r3, #0
   12a9c:	bl	12754 <fmt_print@@Base+0x2a8>
   12aa0:	mov.w	r8, #0
   12aa4:	mov.w	sl, #12
   12aa8:	mov.w	r9, #16384	; 0x4000
   12aac:	mov	fp, r0
   12aae:	cmp.w	fp, #0
   12ab2:	bne.n	12aee <btrfs_prepare_device@@Base+0x1a2>
   12ab4:	cmp.w	r8, #3
   12ab8:	bne.n	12b06 <btrfs_prepare_device@@Base+0x1ba>
   12aba:	ldr	r3, [sp, #224]	; 0xe0
   12abc:	lsls	r3, r3, #31
   12abe:	bpl.n	12b7e <btrfs_prepare_device@@Base+0x232>
   12ac0:	subs.w	r3, r4, #2097152	; 0x200000
   12ac4:	str	r3, [sp, #16]
   12ac6:	adc.w	r3, r5, #4294967295	; 0xffffffff
   12aca:	str	r3, [sp, #20]
   12acc:	ldrd	r2, r3, [sp, #16]
   12ad0:	mov	r0, r6
   12ad2:	cmp	r5, r3
   12ad4:	it	eq
   12ad6:	cmpeq	r4, r2
   12ad8:	it	cc
   12ada:	strdcc	r4, r5, [sp, #16]
   12ade:	ldr	r3, [sp, #16]
   12ae0:	subs	r3, r4, r3
   12ae2:	str	r3, [sp, #0]
   12ae4:	ldrd	r2, r3, [sp, #16]
   12ae8:	bl	12754 <fmt_print@@Base+0x2a8>
   12aec:	mov	fp, r0
   12aee:	cmp.w	fp, #0
   12af2:	bge.n	12b7e <btrfs_prepare_device@@Base+0x232>
   12af4:	blx	8740 <__errno_location@plt>
   12af8:	rsb	r3, fp, #0
   12afc:	mov	r1, r7
   12afe:	str	r3, [r0, #0]
   12b00:	ldr	r0, [pc, #180]	; (12bb8 <btrfs_prepare_device@@Base+0x26c>)
   12b02:	add	r0, pc
   12b04:	b.n	12980 <btrfs_prepare_device@@Base+0x34>
   12b06:	cmp.w	r8, #0
   12b0a:	beq.n	12b72 <btrfs_prepare_device@@Base+0x226>
   12b0c:	mul.w	r3, sl, r8
   12b10:	sub.w	r1, r3, #32
   12b14:	rsb	r2, r3, #32
   12b18:	lsl.w	r1, r9, r1
   12b1c:	lsr.w	r2, r9, r2
   12b20:	orrs	r1, r2
   12b22:	lsl.w	r3, r9, r3
   12b26:	str	r1, [sp, #12]
   12b28:	str	r3, [sp, #8]
   12b2a:	ldrd	r0, r1, [sp, #8]
   12b2e:	mov	r2, r4
   12b30:	mov	r3, r5
   12b32:	add.w	r8, r8, #1
   12b36:	cmp	r1, r5
   12b38:	ldr	r1, [sp, #8]
   12b3a:	it	eq
   12b3c:	cmpeq	r0, r4
   12b3e:	it	cc
   12b40:	ldrdcc	r2, r3, [sp, #8]
   12b44:	adds.w	r1, r1, #4096	; 0x1000
   12b48:	str	r1, [sp, #24]
   12b4a:	ldr	r1, [sp, #12]
   12b4c:	adc.w	r1, r1, #0
   12b50:	str	r1, [sp, #28]
   12b52:	ldrd	r0, r1, [sp, #24]
   12b56:	cmp	r5, r1
   12b58:	it	eq
   12b5a:	cmpeq	r4, r0
   12b5c:	it	cc
   12b5e:	strdcc	r4, r5, [sp, #24]
   12b62:	ldr	r1, [sp, #24]
   12b64:	mov	r0, r6
   12b66:	subs	r1, r1, r2
   12b68:	str	r1, [sp, #0]
   12b6a:	bl	12754 <fmt_print@@Base+0x2a8>
   12b6e:	mov	fp, r0
   12b70:	b.n	12aae <btrfs_prepare_device@@Base+0x162>
   12b72:	mov.w	r2, #65536	; 0x10000
   12b76:	movs	r3, #0
   12b78:	strd	r2, r3, [sp, #8]
   12b7c:	b.n	12b2a <btrfs_prepare_device@@Base+0x1de>
   12b7e:	mov	r0, r6
   12b80:	bl	1279e <fmt_print@@Base+0x2f2>
   12b84:	cmp	r0, #0
   12b86:	bge.n	12b90 <btrfs_prepare_device@@Base+0x244>
   12b88:	ldr	r0, [pc, #48]	; (12bbc <btrfs_prepare_device@@Base+0x270>)
   12b8a:	mov	r1, r7
   12b8c:	add	r0, pc
   12b8e:	b.n	12980 <btrfs_prepare_device@@Base+0x34>
   12b90:	ldr	r3, [sp, #40]	; 0x28
   12b92:	movs	r0, #0
   12b94:	strd	r4, r5, [r3]
   12b98:	b.n	12986 <btrfs_prepare_device@@Base+0x3a>
   12b9a:	add	sp, #180	; 0xb4
   12b9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ba0:	lsls	r4, r4, #8
   12ba2:	movs	r0, r0
   12ba4:	movs	r4, #38	; 0x26
   12ba6:	movs	r5, r0
   12ba8:	str	r0, [sp, #608]	; 0x260
   12baa:	movs	r2, r0
   12bac:	movs	r3, #254	; 0xfe
   12bae:	movs	r5, r0
   12bb0:	str	r0, [sp, #496]	; 0x1f0
   12bb2:	movs	r2, r0
   12bb4:	str	r0, [sp, #268]	; 0x10c
   12bb6:	movs	r2, r0
   12bb8:	ldrh	r2, [r6, #58]	; 0x3a
   12bba:	movs	r2, r0
   12bbc:	ldrh	r7, [r0, #56]	; 0x38
   12bbe:	movs	r2, r0

00012bc0 <disk_size@@Base>:
   12bc0:	ldr	r2, [pc, #76]	; (12c10 <disk_size@@Base+0x50>)
   12bc2:	ldr	r3, [pc, #80]	; (12c14 <disk_size@@Base+0x54>)
   12bc4:	add	r2, pc
   12bc6:	push	{r4, lr}
   12bc8:	sub	sp, #96	; 0x60
   12bca:	ldr	r3, [r2, r3]
   12bcc:	mov	r1, sp
   12bce:	ldr	r3, [r3, #0]
   12bd0:	str	r3, [sp, #92]	; 0x5c
   12bd2:	mov.w	r3, #0
   12bd6:	blx	887c <statfs64@plt>
   12bda:	cmp	r0, #0
   12bdc:	blt.n	12c06 <disk_size@@Base+0x46>
   12bde:	ldr	r2, [sp, #4]
   12be0:	ldrd	r4, r3, [sp, #8]
   12be4:	asrs	r1, r2, #31
   12be6:	muls	r3, r2
   12be8:	mla	r3, r4, r1, r3
   12bec:	umull	r0, r1, r4, r2
   12bf0:	add	r1, r3
   12bf2:	ldr	r2, [pc, #36]	; (12c18 <disk_size@@Base+0x58>)
   12bf4:	ldr	r3, [pc, #28]	; (12c14 <disk_size@@Base+0x54>)
   12bf6:	add	r2, pc
   12bf8:	ldr	r3, [r2, r3]
   12bfa:	ldr	r2, [r3, #0]
   12bfc:	ldr	r3, [sp, #92]	; 0x5c
   12bfe:	eors	r2, r3
   12c00:	beq.n	12c0c <disk_size@@Base+0x4c>
   12c02:	blx	84cc <__stack_chk_fail@plt>
   12c06:	movs	r0, #0
   12c08:	movs	r1, #0
   12c0a:	b.n	12bf2 <disk_size@@Base+0x32>
   12c0c:	add	sp, #96	; 0x60
   12c0e:	pop	{r4, pc}
   12c10:	movs	r1, #196	; 0xc4
   12c12:	movs	r5, r0
   12c14:	lsls	r4, r4, #8
   12c16:	movs	r0, r0
   12c18:	movs	r1, #146	; 0x92
   12c1a:	movs	r5, r0

00012c1c <get_partition_size@@Base>:
   12c1c:	push	{r0, r1, r2, r3, r4, lr}
   12c1e:	movs	r1, #0
   12c20:	ldr	r2, [pc, #80]	; (12c74 <get_partition_size@@Base+0x58>)
   12c22:	ldr	r3, [pc, #84]	; (12c78 <get_partition_size@@Base+0x5c>)
   12c24:	add	r2, pc
   12c26:	ldr	r3, [r2, r3]
   12c28:	ldr	r3, [r3, #0]
   12c2a:	str	r3, [sp, #12]
   12c2c:	mov.w	r3, #0
   12c30:	blx	8608 <open64@plt>
   12c34:	subs	r4, r0, #0
   12c36:	blt.n	12c4a <get_partition_size@@Base+0x2e>
   12c38:	ldr	r1, [pc, #52]	; (12c70 <get_partition_size@@Base+0x54>)
   12c3a:	mov	r2, sp
   12c3c:	blx	8578 <ioctl@plt>
   12c40:	cmp	r0, #0
   12c42:	mov	r0, r4
   12c44:	bge.n	12c50 <get_partition_size@@Base+0x34>
   12c46:	blx	8960 <close@plt>
   12c4a:	movs	r0, #0
   12c4c:	movs	r1, #0
   12c4e:	b.n	12c58 <get_partition_size@@Base+0x3c>
   12c50:	blx	8960 <close@plt>
   12c54:	ldrd	r0, r1, [sp]
   12c58:	ldr	r2, [pc, #32]	; (12c7c <get_partition_size@@Base+0x60>)
   12c5a:	ldr	r3, [pc, #28]	; (12c78 <get_partition_size@@Base+0x5c>)
   12c5c:	add	r2, pc
   12c5e:	ldr	r3, [r2, r3]
   12c60:	ldr	r2, [r3, #0]
   12c62:	ldr	r3, [sp, #12]
   12c64:	eors	r2, r3
   12c66:	beq.n	12c6c <get_partition_size@@Base+0x50>
   12c68:	blx	84cc <__stack_chk_fail@plt>
   12c6c:	add	sp, #16
   12c6e:	pop	{r4, pc}
   12c70:	asrs	r2, r6, #9
   12c72:	strh	r4, [r0, #0]
   12c74:	movs	r1, #100	; 0x64
   12c76:	movs	r5, r0
   12c78:	lsls	r4, r4, #8
   12c7a:	movs	r0, r0
   12c7c:	movs	r1, #44	; 0x2c
   12c7e:	movs	r5, r0
   12c80:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c84:	sub.w	sp, sp, #8192	; 0x2000
   12c88:	sub	sp, #36	; 0x24
   12c8a:	mov	r5, r1
   12c8c:	add.w	r3, sp, #8256	; 0x2040
   12c90:	ldr	r1, [pc, #476]	; (12e70 <get_partition_size@@Base+0x254>)
   12c92:	mov	r4, r2
   12c94:	ldr	r2, [pc, #476]	; (12e74 <get_partition_size@@Base+0x258>)
   12c96:	ldrd	r8, r9, [r3, #8]
   12c9a:	add	r1, pc
   12c9c:	adds	r3, #8
   12c9e:	ldr	r7, [pc, #472]	; (12e78 <get_partition_size@@Base+0x25c>)
   12ca0:	cmp.w	r9, #0
   12ca4:	add.w	r3, sp, #8192	; 0x2000
   12ca8:	ldr	r2, [r1, r2]
   12caa:	it	eq
   12cac:	cmpeq.w	r8, #5
   12cb0:	add	r7, pc
   12cb2:	add.w	r3, r3, #28
   12cb6:	mov	r6, r0
   12cb8:	ldr	r2, [r2, #0]
   12cba:	str	r2, [r3, #0]
   12cbc:	mov.w	r2, #0
   12cc0:	bne.n	12cf6 <get_partition_size@@Base+0xda>
   12cc2:	ldr	r3, [r4, #0]
   12cc4:	cbnz	r3, 12ce6 <get_partition_size@@Base+0xca>
   12cc6:	mvn.w	fp, #74	; 0x4a
   12cca:	ldr	r1, [pc, #432]	; (12e7c <get_partition_size@@Base+0x260>)
   12ccc:	add.w	r3, sp, #8192	; 0x2000
   12cd0:	ldr	r2, [pc, #416]	; (12e74 <get_partition_size@@Base+0x258>)
   12cd2:	adds	r3, #28
   12cd4:	add	r1, pc
   12cd6:	ldr	r2, [r1, r2]
   12cd8:	ldr	r1, [r2, #0]
   12cda:	ldr	r2, [r3, #0]
   12cdc:	eors	r1, r2
   12cde:	beq.w	12e5a <get_partition_size@@Base+0x23e>
   12ce2:	blx	84cc <__stack_chk_fail@plt>
   12ce6:	mov.w	fp, #0
   12cea:	strb.w	fp, [r5]
   12cee:	ldr	r2, [r4, #0]
   12cf0:	subs	r2, #1
   12cf2:	str	r2, [r4, #0]
   12cf4:	b.n	12cca <get_partition_size@@Base+0xae>
   12cf6:	add	r3, sp, #32
   12cf8:	mov.w	r2, #4096	; 0x1000
   12cfc:	sub.w	sl, r3, #8
   12d00:	movs	r1, #0
   12d02:	str	r3, [sp, #16]
   12d04:	mov	r0, sl
   12d06:	blx	8780 <memset@plt+0x4>
   12d0a:	ldr	r1, [sp, #16]
   12d0c:	movs	r2, #1
   12d0e:	movs	r3, #0
   12d10:	mov	r0, r6
   12d12:	strd	r8, r9, [sl, #8]
   12d16:	strd	r2, r3, [r1, #-8]
   12d1a:	mov.w	r2, #4294967295	; 0xffffffff
   12d1e:	movs	r3, #144	; 0x90
   12d20:	ldr	r1, [pc, #324]	; (12e68 <get_partition_size@@Base+0x24c>)
   12d22:	strd	r3, r3, [sl, #56]	; 0x38
   12d26:	mov.w	r3, #4294967295	; 0xffffffff
   12d2a:	strd	r2, r3, [sl, #32]
   12d2e:	strd	r2, r3, [sl, #48]	; 0x30
   12d32:	mov	r2, sl
   12d34:	movs	r3, #1
   12d36:	strd	r8, r9, [sl, #16]
   12d3a:	str.w	r3, [sl, #64]	; 0x40
   12d3e:	blx	8578 <ioctl@plt>
   12d42:	movs	r3, #1
   12d44:	subs.w	fp, r0, #0
   12d48:	bge.n	12d64 <get_partition_size@@Base+0x148>
   12d4a:	ldr	r2, [pc, #308]	; (12e80 <get_partition_size@@Base+0x264>)
   12d4c:	mov	r1, r3
   12d4e:	ldr	r0, [r7, r2]
   12d50:	ldr	r2, [pc, #304]	; (12e84 <get_partition_size@@Base+0x268>)
   12d52:	str.w	fp, [sp, #8]
   12d56:	strd	r8, r9, [sp]
   12d5a:	add	r2, pc
   12d5c:	ldr	r0, [r0, #0]
   12d5e:	blx	881c <__fprintf_chk@plt+0x4>
   12d62:	b.n	12cca <get_partition_size@@Base+0xae>
   12d64:	ldr.w	r2, [sl, #64]	; 0x40
   12d68:	cbnz	r2, 12d84 <get_partition_size@@Base+0x168>
   12d6a:	ldr	r2, [pc, #276]	; (12e80 <get_partition_size@@Base+0x264>)
   12d6c:	mov	r1, r3
   12d6e:	mvn.w	fp, #1
   12d72:	ldr	r0, [r7, r2]
   12d74:	ldr	r2, [pc, #272]	; (12e88 <get_partition_size@@Base+0x26c>)
   12d76:	strd	r8, r9, [sp]
   12d7a:	add	r2, pc
   12d7c:	ldr	r0, [r0, #0]
   12d7e:	blx	881c <__fprintf_chk@plt+0x4>
   12d82:	b.n	12cca <get_partition_size@@Base+0xae>
   12d84:	ldrd	r2, r3, [sl, #120]	; 0x78
   12d88:	cmp	r3, #0
   12d8a:	it	eq
   12d8c:	cmpeq	r2, #5
   12d8e:	beq.n	12dba <get_partition_size@@Base+0x19e>
   12d90:	strd	r2, r3, [sp]
   12d94:	mov	r1, r5
   12d96:	mov	r2, r4
   12d98:	mov	r0, r6
   12d9a:	bl	12c80 <get_partition_size@@Base+0x64>
   12d9e:	mov	fp, r0
   12da0:	cmp	r0, #0
   12da2:	bne.n	12cca <get_partition_size@@Base+0xae>
   12da4:	ldr	r3, [r4, #0]
   12da6:	cmp	r3, #0
   12da8:	beq.n	12cc6 <get_partition_size@@Base+0xaa>
   12daa:	ldr	r1, [pc, #224]	; (12e8c <get_partition_size@@Base+0x270>)
   12dac:	mov	r0, r5
   12dae:	add	r1, pc
   12db0:	blx	856c <strcat@plt+0x4>
   12db4:	ldr	r3, [r4, #0]
   12db6:	subs	r3, #1
   12db8:	str	r3, [r4, #0]
   12dba:	ldrd	r8, r9, [sl, #136]	; 0x88
   12dbe:	cmp.w	r9, #0
   12dc2:	it	eq
   12dc4:	cmpeq.w	r8, #256	; 0x100
   12dc8:	beq.n	12e36 <get_partition_size@@Base+0x21a>
   12dca:	add.w	fp, sp, #4128	; 0x1020
   12dce:	mov.w	r2, #4096	; 0x1000
   12dd2:	sub.w	r3, fp, #8
   12dd6:	movs	r1, #0
   12dd8:	mov	r0, r3
   12dda:	blx	8780 <memset@plt+0x4>
   12dde:	mov	r3, r0
   12de0:	ldrd	r0, r1, [sl, #120]	; 0x78
   12de4:	mov	r2, r3
   12de6:	strd	r8, r9, [r3, #8]
   12dea:	strd	r0, r1, [fp, #-8]
   12dee:	mov	r0, r6
   12df0:	ldr	r1, [pc, #120]	; (12e6c <get_partition_size@@Base+0x250>)
   12df2:	blx	8578 <ioctl@plt>
   12df6:	subs.w	fp, r0, #0
   12dfa:	bge.n	12e10 <get_partition_size@@Base+0x1f4>
   12dfc:	ldr	r3, [pc, #128]	; (12e80 <get_partition_size@@Base+0x264>)
   12dfe:	movs	r1, #1
   12e00:	ldr	r2, [pc, #140]	; (12e90 <get_partition_size@@Base+0x274>)
   12e02:	ldr	r0, [r7, r3]
   12e04:	add	r2, pc
   12e06:	mov	r3, fp
   12e08:	ldr	r0, [r0, #0]
   12e0a:	blx	881c <__fprintf_chk@plt+0x4>
   12e0e:	b.n	12cca <get_partition_size@@Base+0xae>
   12e10:	add.w	r1, sp, #4128	; 0x1020
   12e14:	adds	r1, #8
   12e16:	str	r1, [sp, #20]
   12e18:	mov	r0, r1
   12e1a:	blx	8704 <strlen@plt>
   12e1e:	ldr	r3, [r4, #0]
   12e20:	cmp	r0, r3
   12e22:	mov	r6, r0
   12e24:	bhi.w	12cc6 <get_partition_size@@Base+0xaa>
   12e28:	ldr	r1, [sp, #20]
   12e2a:	mov	r0, r5
   12e2c:	blx	856c <strcat@plt+0x4>
   12e30:	ldr	r0, [r4, #0]
   12e32:	subs	r0, r0, r6
   12e34:	str	r0, [r4, #0]
   12e36:	ldrh.w	r6, [sl, #152]	; 0x98
   12e3a:	ldr	r3, [r4, #0]
   12e3c:	cmp	r3, r6
   12e3e:	bcc.w	12cc6 <get_partition_size@@Base+0xaa>
   12e42:	ldr	r1, [sp, #16]
   12e44:	mov	r2, r6
   12e46:	mov	r0, r5
   12e48:	mov.w	fp, #0
   12e4c:	adds	r1, #146	; 0x92
   12e4e:	blx	8904 <strncat@plt>
   12e52:	ldr	r3, [r4, #0]
   12e54:	subs	r3, r3, r6
   12e56:	str	r3, [r4, #0]
   12e58:	b.n	12cca <get_partition_size@@Base+0xae>
   12e5a:	mov	r0, fp
   12e5c:	add.w	sp, sp, #8192	; 0x2000
   12e60:	add	sp, #36	; 0x24
   12e62:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e66:	nop
   12e68:	str	r4, [sp, #68]	; 0x44
   12e6a:	beq.n	12e6e <get_partition_size@@Base+0x252>
   12e6c:	str	r4, [sp, #72]	; 0x48
   12e6e:	beq.n	12e72 <get_partition_size@@Base+0x256>
   12e70:	movs	r0, #238	; 0xee
   12e72:	movs	r5, r0
   12e74:	lsls	r4, r4, #8
   12e76:	movs	r0, r0
   12e78:	movs	r0, #216	; 0xd8
   12e7a:	movs	r5, r0
   12e7c:	movs	r0, #180	; 0xb4
   12e7e:	movs	r5, r0
   12e80:	lsls	r4, r6, #8
   12e82:	movs	r0, r0
   12e84:	ldrh	r7, [r2, #42]	; 0x2a
   12e86:	movs	r2, r0
   12e88:	ldrh	r7, [r6, #42]	; 0x2a
   12e8a:	movs	r2, r0
   12e8c:	ldrh	r5, [r4, #42]	; 0x2a
   12e8e:	movs	r2, r0
   12e90:	ldrh	r1, [r2, #40]	; 0x28
   12e92:	movs	r2, r0

00012e94 <btrfs_subvolid_resolve@@Base>:
   12e94:	push	{r0, r1, r2, r3, r4, lr}
   12e96:	cbz	r2, 12eb4 <btrfs_subvolid_resolve@@Base+0x20>
   12e98:	subs	r2, #1
   12e9a:	movs	r4, #0
   12e9c:	str	r2, [sp, #12]
   12e9e:	strb	r4, [r1, #0]
   12ea0:	strb	r4, [r1, r2]
   12ea2:	ldrd	r2, r3, [sp, #24]
   12ea6:	strd	r2, r3, [sp]
   12eaa:	add	r2, sp, #12
   12eac:	bl	12c80 <get_partition_size@@Base+0x64>
   12eb0:	add	sp, #16
   12eb2:	pop	{r4, pc}
   12eb4:	mvn.w	r0, #74	; 0x4a
   12eb8:	b.n	12eb0 <btrfs_subvolid_resolve@@Base+0x1c>

00012eba <subvol_uuid_search_add@@Base>:
   12eba:	add.w	ip, r0, #8
   12ebe:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   12ec2:	mov	r5, r0
   12ec4:	mov	r4, r1
   12ec6:	mov	r0, ip
   12ec8:	movs	r6, #0
   12eca:	ldr	r1, [r0, #0]
   12ecc:	cmp	r1, #0
   12ece:	bne.n	12f7e <subvol_uuid_search_add@@Base+0xc4>
   12ed0:	strd	r6, r1, [r4]
   12ed4:	str	r1, [r4, #8]
   12ed6:	mov	r1, ip
   12ed8:	str	r4, [r0, #0]
   12eda:	mov	r0, r4
   12edc:	bl	13b2a <rb_insert_color@@Base>
   12ee0:	add.w	r7, r5, #20
   12ee4:	movs	r2, #0
   12ee6:	mov	r3, r7
   12ee8:	ldr	r6, [r3, #0]
   12eea:	cmp	r6, #0
   12eec:	bne.n	12fa6 <subvol_uuid_search_add@@Base+0xec>
   12eee:	add.w	r0, r4, #36	; 0x24
   12ef2:	strd	r2, r6, [r4, #36]	; 0x24
   12ef6:	str	r6, [r4, #44]	; 0x2c
   12ef8:	mov	r1, r7
   12efa:	str	r0, [r3, #0]
   12efc:	bl	13b2a <rb_insert_color@@Base>
   12f00:	add.w	r8, r4, #56	; 0x38
   12f04:	add.w	r2, r4, #55	; 0x37
   12f08:	add.w	r1, r4, #71	; 0x47
   12f0c:	movs	r3, #0
   12f0e:	ldrb.w	r0, [r2, #1]!
   12f12:	cbnz	r0, 12f16 <subvol_uuid_search_add@@Base+0x5c>
   12f14:	adds	r3, #1
   12f16:	cmp	r2, r1
   12f18:	bne.n	12f0e <subvol_uuid_search_add@@Base+0x54>
   12f1a:	cmp	r3, #16
   12f1c:	beq.n	12f3e <subvol_uuid_search_add@@Base+0x84>
   12f1e:	add.w	r7, r5, #12
   12f22:	movs	r2, #0
   12f24:	mov	r3, r7
   12f26:	ldr	r6, [r3, #0]
   12f28:	cmp	r6, #0
   12f2a:	bne.n	12fca <subvol_uuid_search_add@@Base+0x110>
   12f2c:	add.w	r0, r4, #12
   12f30:	strd	r2, r6, [r4, #12]
   12f34:	str	r6, [r4, #20]
   12f36:	mov	r1, r7
   12f38:	str	r0, [r3, #0]
   12f3a:	bl	13b2a <rb_insert_color@@Base>
   12f3e:	add.w	r7, r4, #88	; 0x58
   12f42:	add.w	r2, r4, #87	; 0x57
   12f46:	add.w	r1, r4, #103	; 0x67
   12f4a:	movs	r3, #0
   12f4c:	ldrb.w	r0, [r2, #1]!
   12f50:	cbnz	r0, 12f54 <subvol_uuid_search_add@@Base+0x9a>
   12f52:	adds	r3, #1
   12f54:	cmp	r2, r1
   12f56:	bne.n	12f4c <subvol_uuid_search_add@@Base+0x92>
   12f58:	cmp	r3, #16
   12f5a:	beq.n	13018 <subvol_uuid_search_add@@Base+0x15e>
   12f5c:	adds	r5, #16
   12f5e:	movs	r2, #0
   12f60:	mov	r3, r5
   12f62:	ldr	r6, [r3, #0]
   12f64:	cmp	r6, #0
   12f66:	bne.n	12ff0 <subvol_uuid_search_add@@Base+0x136>
   12f68:	add.w	r0, r4, #24
   12f6c:	strd	r2, r6, [r4, #24]
   12f70:	str	r6, [r4, #32]
   12f72:	mov	r1, r5
   12f74:	str	r0, [r3, #0]
   12f76:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   12f7a:	b.w	13b2a <rb_insert_color@@Base>
   12f7e:	ldrd	r0, r7, [r4, #48]	; 0x30
   12f82:	ldr	r6, [r1, #48]	; 0x30
   12f84:	subs	r2, r6, r0
   12f86:	ldr	r0, [r1, #52]	; 0x34
   12f88:	sbc.w	r3, r0, r7
   12f8c:	cmp	r2, #0
   12f8e:	sbcs.w	r0, r3, #0
   12f92:	bge.n	12f9c <subvol_uuid_search_add@@Base+0xe2>
   12f94:	add.w	r0, r1, #8
   12f98:	mov	r6, r1
   12f9a:	b.n	12eca <subvol_uuid_search_add@@Base+0x10>
   12f9c:	orrs.w	r0, r2, r3
   12fa0:	beq.n	12ee0 <subvol_uuid_search_add@@Base+0x26>
   12fa2:	adds	r0, r1, #4
   12fa4:	b.n	12f98 <subvol_uuid_search_add@@Base+0xde>
   12fa6:	ldr.w	r1, [r4, #136]	; 0x88
   12faa:	ldr	r0, [r6, #100]	; 0x64
   12fac:	blx	837c <strcmp@plt>
   12fb0:	cmp	r0, #0
   12fb2:	mov.w	r3, r0, asr #31
   12fb6:	mov	r2, r0
   12fb8:	bge.n	12fc2 <subvol_uuid_search_add@@Base+0x108>
   12fba:	add.w	r3, r6, #8
   12fbe:	mov	r2, r6
   12fc0:	b.n	12ee8 <subvol_uuid_search_add@@Base+0x2e>
   12fc2:	orrs	r3, r2
   12fc4:	beq.n	12f00 <subvol_uuid_search_add@@Base+0x46>
   12fc6:	adds	r3, r6, #4
   12fc8:	b.n	12fbe <subvol_uuid_search_add@@Base+0x104>
   12fca:	movs	r2, #16
   12fcc:	add.w	r0, r6, #44	; 0x2c
   12fd0:	mov	r1, r8
   12fd2:	blx	8464 <memcmp@plt+0x4>
   12fd6:	cmp	r0, #0
   12fd8:	mov.w	r3, r0, asr #31
   12fdc:	mov	r2, r0
   12fde:	bge.n	12fe8 <subvol_uuid_search_add@@Base+0x12e>
   12fe0:	add.w	r3, r6, #8
   12fe4:	mov	r2, r6
   12fe6:	b.n	12f26 <subvol_uuid_search_add@@Base+0x6c>
   12fe8:	orrs	r3, r2
   12fea:	beq.n	12f3e <subvol_uuid_search_add@@Base+0x84>
   12fec:	adds	r3, r6, #4
   12fee:	b.n	12fe4 <subvol_uuid_search_add@@Base+0x12a>
   12ff0:	add.w	r0, r6, #64	; 0x40
   12ff4:	movs	r2, #16
   12ff6:	mov	r1, r7
   12ff8:	blx	8464 <memcmp@plt+0x4>
   12ffc:	asrs	r3, r0, #31
   12ffe:	cbnz	r0, 1301c <subvol_uuid_search_add@@Base+0x162>
   13000:	ldrd	r2, r3, [r6, #96]	; 0x60
   13004:	ldrd	r0, r1, [r4, #120]	; 0x78
   13008:	cmp	r3, r1
   1300a:	it	eq
   1300c:	cmpeq	r2, r0
   1300e:	bcc.n	13024 <subvol_uuid_search_add@@Base+0x16a>
   13010:	cmp	r1, r3
   13012:	it	eq
   13014:	cmpeq	r0, r2
   13016:	bcc.n	1302c <subvol_uuid_search_add@@Base+0x172>
   13018:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1301c:	cmp	r0, #0
   1301e:	sbcs.w	r3, r3, #0
   13022:	bge.n	1302c <subvol_uuid_search_add@@Base+0x172>
   13024:	add.w	r3, r6, #8
   13028:	mov	r2, r6
   1302a:	b.n	12f62 <subvol_uuid_search_add@@Base+0xa8>
   1302c:	adds	r3, r6, #4
   1302e:	b.n	13028 <subvol_uuid_search_add@@Base+0x16e>

00013030 <subvol_uuid_search2@@Base>:
   13030:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13034:	mov	r4, r0
   13036:	vpush	{d8-d9}
   1303a:	ldr.w	ip, [pc, #1180]	; 134d8 <subvol_uuid_search2@@Base+0x4a8>
   1303e:	ldr.w	r0, [pc, #1180]	; 134dc <subvol_uuid_search2@@Base+0x4ac>
   13042:	add	ip, pc
   13044:	ldr.w	r5, [pc, #1176]	; 134e0 <subvol_uuid_search2@@Base+0x4b0>
   13048:	sub.w	sp, sp, #4576	; 0x11e0
   1304c:	sub	sp, #20
   1304e:	add	r5, pc
   13050:	add.w	r1, sp, #4640	; 0x1220
   13054:	add.w	sl, sp, #48	; 0x30
   13058:	adds	r1, #8
   1305a:	strd	r2, r3, [sl, #-8]
   1305e:	ldr.w	r8, [r1]
   13062:	add.w	r1, sp, #4640	; 0x1220
   13066:	adds	r1, #24
   13068:	ldr.w	r0, [ip, r0]
   1306c:	vldr	s16, [r1]
   13070:	add.w	r1, sp, #4640	; 0x1220
   13074:	adds	r1, #28
   13076:	ldr.w	fp, [r1]
   1307a:	add.w	r1, sp, #4576	; 0x11e0
   1307e:	ldr	r0, [r0, #0]
   13080:	str	r0, [r1, #12]
   13082:	mov.w	r0, #0
   13086:	ldr	r0, [r4, #4]
   13088:	adds	r1, #12
   1308a:	cmp	r0, #0
   1308c:	bne.w	131be <subvol_uuid_search2@@Base+0x18e>
   13090:	cmp.w	fp, #2
   13094:	mov	r9, r2
   13096:	str	r3, [sp, #16]
   13098:	bne.n	130a2 <subvol_uuid_search2@@Base+0x72>
   1309a:	ldr	r4, [r4, #16]
   1309c:	cbnz	r4, 130c2 <subvol_uuid_search2@@Base+0x92>
   1309e:	mov	sl, r4
   130a0:	b.n	13108 <subvol_uuid_search2@@Base+0xd8>
   130a2:	cmp.w	fp, #1
   130a6:	bne.n	130ac <subvol_uuid_search2@@Base+0x7c>
   130a8:	ldr	r4, [r4, #12]
   130aa:	b.n	1309c <subvol_uuid_search2@@Base+0x6c>
   130ac:	cmp.w	fp, #0
   130b0:	bne.n	130b6 <subvol_uuid_search2@@Base+0x86>
   130b2:	ldr	r4, [r4, #8]
   130b4:	b.n	1309c <subvol_uuid_search2@@Base+0x6c>
   130b6:	cmp.w	fp, #3
   130ba:	bne.w	134b4 <subvol_uuid_search2@@Base+0x484>
   130be:	ldr	r4, [r4, #20]
   130c0:	b.n	1309c <subvol_uuid_search2@@Base+0x6c>
   130c2:	cmp.w	fp, #2
   130c6:	bne.n	13124 <subvol_uuid_search2@@Base+0xf4>
   130c8:	add.w	r0, r4, #64	; 0x40
   130cc:	movs	r2, #16
   130ce:	mov	r1, r8
   130d0:	sub.w	sl, r4, #24
   130d4:	blx	8464 <memcmp@plt+0x4>
   130d8:	asrs	r3, r0, #31
   130da:	cmp	r0, #0
   130dc:	bne.w	134b8 <subvol_uuid_search2@@Base+0x488>
   130e0:	add.w	r3, sp, #4640	; 0x1220
   130e4:	ldrd	r0, r1, [r4, #96]	; 0x60
   130e8:	adds	r3, #16
   130ea:	ldrd	r2, r3, [r3]
   130ee:	cmp	r1, r3
   130f0:	it	eq
   130f2:	cmpeq	r0, r2
   130f4:	bcc.n	130b2 <subvol_uuid_search2@@Base+0x82>
   130f6:	add.w	r3, sp, #4640	; 0x1220
   130fa:	adds	r3, #16
   130fc:	ldrd	r2, r3, [r3]
   13100:	cmp	r3, r1
   13102:	it	eq
   13104:	cmpeq	r2, r0
   13106:	bcc.n	13164 <subvol_uuid_search2@@Base+0x134>
   13108:	ldr	r1, [pc, #984]	; (134e4 <subvol_uuid_search2@@Base+0x4b4>)
   1310a:	add.w	r3, sp, #4576	; 0x11e0
   1310e:	ldr	r2, [pc, #972]	; (134dc <subvol_uuid_search2@@Base+0x4ac>)
   13110:	adds	r3, #12
   13112:	add	r1, pc
   13114:	ldr	r2, [r1, r2]
   13116:	ldr	r1, [r2, #0]
   13118:	ldr	r2, [r3, #0]
   1311a:	eors	r1, r2
   1311c:	beq.w	134c4 <subvol_uuid_search2@@Base+0x494>
   13120:	blx	84cc <__stack_chk_fail@plt>
   13124:	cmp.w	fp, #1
   13128:	bne.n	13140 <subvol_uuid_search2@@Base+0x110>
   1312a:	add.w	r0, r4, #44	; 0x2c
   1312e:	movs	r2, #16
   13130:	mov	r1, r8
   13132:	sub.w	sl, r4, #12
   13136:	blx	8464 <memcmp@plt+0x4>
   1313a:	asrs	r7, r0, #31
   1313c:	mov	r6, r0
   1313e:	b.n	13156 <subvol_uuid_search2@@Base+0x126>
   13140:	cmp.w	fp, #0
   13144:	bne.n	13168 <subvol_uuid_search2@@Base+0x138>
   13146:	ldrd	r3, r2, [r4, #48]	; 0x30
   1314a:	mov	sl, r4
   1314c:	subs.w	r6, r3, r9
   13150:	ldr	r3, [sp, #16]
   13152:	sbc.w	r7, r2, r3
   13156:	cmp	r6, #0
   13158:	sbcs.w	r3, r7, #0
   1315c:	blt.n	130b2 <subvol_uuid_search2@@Base+0x82>
   1315e:	orrs.w	r3, r6, r7
   13162:	beq.n	13108 <subvol_uuid_search2@@Base+0xd8>
   13164:	ldr	r4, [r4, #4]
   13166:	b.n	1309c <subvol_uuid_search2@@Base+0x6c>
   13168:	cmp.w	fp, #3
   1316c:	bne.n	1317e <subvol_uuid_search2@@Base+0x14e>
   1316e:	vmov	r1, s16
   13172:	sub.w	sl, r4, #36	; 0x24
   13176:	ldr	r0, [r4, #100]	; 0x64
   13178:	blx	837c <strcmp@plt>
   1317c:	b.n	1313a <subvol_uuid_search2@@Base+0x10a>
   1317e:	ldr	r3, [pc, #872]	; (134e8 <subvol_uuid_search2@@Base+0x4b8>)
   13180:	add	r4, sp, #488	; 0x1e8
   13182:	ldr	r2, [pc, #872]	; (134ec <subvol_uuid_search2@@Base+0x4bc>)
   13184:	movs	r1, #1
   13186:	ldr	r0, [r5, r3]
   13188:	add	r2, pc
   1318a:	ldr	r3, [pc, #868]	; (134f0 <subvol_uuid_search2@@Base+0x4c0>)
   1318c:	str	r1, [sp, #12]
   1318e:	add	r3, pc
   13190:	str	r3, [sp, #8]
   13192:	ldr	r3, [pc, #864]	; (134f4 <subvol_uuid_search2@@Base+0x4c4>)
   13194:	add	r3, pc
   13196:	str	r3, [sp, #4]
   13198:	mov.w	r3, #402	; 0x192
   1319c:	str	r3, [sp, #0]
   1319e:	ldr	r3, [pc, #856]	; (134f8 <subvol_uuid_search2@@Base+0x4c8>)
   131a0:	ldr	r0, [r0, #0]
   131a2:	add	r3, pc
   131a4:	blx	881c <__fprintf_chk@plt+0x4>
   131a8:	movs	r1, #16
   131aa:	mov	r0, r4
   131ac:	blx	8680 <backtrace@plt>
   131b0:	movs	r2, #2
   131b2:	mov	r1, r0
   131b4:	mov	r0, r4
   131b6:	blx	8990 <backtrace_symbols_fd@plt>
   131ba:	blx	8948 <abort@plt>
   131be:	cmp.w	fp, #3
   131c2:	bhi.w	134a8 <subvol_uuid_search2@@Base+0x478>
   131c6:	tbb	[pc, fp]
   131ca:	ldmia	r3, {r2, r3}
   131cc:	bcs.n	131d4 <subvol_uuid_search2@@Base+0x1a4>
   131ce:	ldr	r0, [r4, #0]
   131d0:	sub.w	r2, sl, #8
   131d4:	mov	r1, r8
   131d6:	bl	17736 <btrfs_lookup_uuid_received_subvol_item@@Base>
   131da:	mov	r6, r0
   131dc:	cmp	r6, #0
   131de:	bne.w	13434 <subvol_uuid_search2@@Base+0x404>
   131e2:	ldr	r3, [r4, #0]
   131e4:	add	r6, sp, #488	; 0x1e8
   131e6:	add	r7, sp, #496	; 0x1f0
   131e8:	mov.w	r8, #4096	; 0x1000
   131ec:	movs	r1, #0
   131ee:	mov	r0, r6
   131f0:	vmov	s17, r3
   131f4:	ldrd	r2, r3, [sl, #-8]
   131f8:	strd	r2, r3, [sp, #16]
   131fc:	mov	r2, r8
   131fe:	blx	8780 <memset@plt+0x4>
   13202:	movs	r2, #1
   13204:	movs	r3, #0
   13206:	strd	r2, r3, [r7, #-8]
   1320a:	ldrd	r2, r3, [sp, #16]
   1320e:	movs	r7, #0
   13210:	str.w	r8, [r6, #64]	; 0x40
   13214:	strd	r2, r3, [r6, #8]
   13218:	strd	r2, r3, [r6, #16]
   1321c:	mov.w	r2, #4294967295	; 0xffffffff
   13220:	movs	r3, #132	; 0x84
   13222:	strd	r3, r3, [r6, #56]	; 0x38
   13226:	mov.w	r3, #4294967295	; 0xffffffff
   1322a:	strd	r2, r3, [r6, #32]
   1322e:	strd	r2, r3, [r6, #48]	; 0x30
   13232:	add	r2, sp, #48	; 0x30
   13234:	mov	r3, r7
   13236:	vmov	s18, r2
   1323a:	vmov	r0, s17
   1323e:	mov	r2, r6
   13240:	ldr	r1, [pc, #656]	; (134d4 <subvol_uuid_search2@@Base+0x4a4>)
   13242:	str	r3, [sp, #28]
   13244:	blx	8578 <ioctl@plt>
   13248:	ldr	r3, [sp, #28]
   1324a:	cmp	r0, #0
   1324c:	bge.w	133ae <subvol_uuid_search2@@Base+0x37e>
   13250:	ldr	r3, [pc, #660]	; (134e8 <subvol_uuid_search2@@Base+0x4b8>)
   13252:	movs	r1, #1
   13254:	ldr	r2, [pc, #676]	; (134fc <subvol_uuid_search2@@Base+0x4cc>)
   13256:	ldr	r3, [r5, r3]
   13258:	add	r2, pc
   1325a:	ldr	r0, [r3, #0]
   1325c:	blx	881c <__fprintf_chk@plt+0x4>
   13260:	movw	r3, #439	; 0x1b7
   13264:	cmp	r7, r3
   13266:	add	r5, sp, #48	; 0x30
   13268:	bne.n	1327e <subvol_uuid_search2@@Base+0x24e>
   1326a:	ldrd	r2, r3, [r5, #160]	; 0xa0
   1326e:	ldr.w	r1, [r5, #243]	; 0xf3
   13272:	ldr.w	r0, [r5, #239]	; 0xef
   13276:	cmp	r3, r1
   13278:	it	eq
   1327a:	cmpeq	r2, r0
   1327c:	beq.n	1328a <subvol_uuid_search2@@Base+0x25a>
   1327e:	add.w	r0, r5, #239	; 0xef
   13282:	movs	r2, #200	; 0xc8
   13284:	movs	r1, #0
   13286:	blx	8780 <memset@plt+0x4>
   1328a:	movs	r1, #144	; 0x90
   1328c:	movs	r0, #1
   1328e:	blx	8358 <calloc@plt+0x4>
   13292:	mov	sl, r0
   13294:	cmp	r0, #0
   13296:	beq.w	134ae <subvol_uuid_search2@@Base+0x47e>
   1329a:	ldrd	r6, r7, [r5, #-8]
   1329e:	add.w	r2, r5, #247	; 0xf7
   132a2:	add.w	lr, r0, #56	; 0x38
   132a6:	addw	r8, r5, #263	; 0x107
   132aa:	strd	r6, r7, [r0, #48]	; 0x30
   132ae:	ldr	r0, [r2, #0]
   132b0:	adds	r2, #8
   132b2:	ldr.w	r1, [r2, #-4]
   132b6:	cmp	r2, r8
   132b8:	mov	ip, lr
   132ba:	stmia.w	ip!, {r0, r1}
   132be:	mov	lr, ip
   132c0:	bne.n	132ae <subvol_uuid_search2@@Base+0x27e>
   132c2:	addw	r2, r5, #279	; 0x117
   132c6:	add.w	lr, sl, #88	; 0x58
   132ca:	addw	r8, r5, #295	; 0x127
   132ce:	ldr	r0, [r2, #0]
   132d0:	adds	r2, #8
   132d2:	ldr.w	r1, [r2, #-4]
   132d6:	cmp	r2, r8
   132d8:	mov	ip, lr
   132da:	stmia.w	ip!, {r0, r1}
   132de:	mov	lr, ip
   132e0:	bne.n	132ce <subvol_uuid_search2@@Base+0x29e>
   132e2:	addw	r2, r5, #263	; 0x107
   132e6:	add.w	lr, sl, #72	; 0x48
   132ea:	addw	r8, r5, #279	; 0x117
   132ee:	ldr	r0, [r2, #0]
   132f0:	adds	r2, #8
   132f2:	ldr.w	r1, [r2, #-4]
   132f6:	cmp	r2, r8
   132f8:	mov	ip, lr
   132fa:	stmia.w	ip!, {r0, r1}
   132fe:	mov	lr, ip
   13300:	bne.n	132ee <subvol_uuid_search2@@Base+0x2be>
   13302:	ldr.w	r1, [r5, #295]	; 0x127
   13306:	cmp.w	fp, #3
   1330a:	ldr.w	r2, [r5, #299]	; 0x12b
   1330e:	strd	r1, r2, [sl, #104]	; 0x68
   13312:	ldr.w	r1, [r5, #303]	; 0x12f
   13316:	ldr.w	r2, [r5, #307]	; 0x133
   1331a:	strd	r1, r2, [sl, #112]	; 0x70
   1331e:	ldr.w	r1, [r5, #311]	; 0x137
   13322:	ldr.w	r2, [r5, #315]	; 0x13b
   13326:	strd	r1, r2, [sl, #120]	; 0x78
   1332a:	ldr.w	r1, [r5, #319]	; 0x13f
   1332e:	ldr.w	r2, [r5, #323]	; 0x143
   13332:	strd	r1, r2, [sl, #128]	; 0x80
   13336:	bne.w	1347c <subvol_uuid_search2@@Base+0x44c>
   1333a:	vmov	r0, s16
   1333e:	blx	84b4 <strdup@plt+0x4>
   13342:	str.w	r0, [sl, #136]	; 0x88
   13346:	cmp	r0, #0
   13348:	bne.w	13108 <subvol_uuid_search2@@Base+0xd8>
   1334c:	mvn.w	r6, #11
   13350:	ldr.w	r0, [sl, #136]	; 0x88
   13354:	blx	83f0 <free@plt+0x4>
   13358:	mov	r0, sl
   1335a:	blx	83f0 <free@plt+0x4>
   1335e:	b.n	13434 <subvol_uuid_search2@@Base+0x404>
   13360:	ldr	r0, [r4, #0]
   13362:	sub.w	r2, sl, #8
   13366:	mov	r1, r8
   13368:	bl	17730 <btrfs_lookup_uuid_subvol_item@@Base>
   1336c:	b.n	131da <subvol_uuid_search2@@Base+0x1aa>
   1336e:	vmov	r1, s16
   13372:	movs	r2, #0
   13374:	ldr	r0, [r4, #0]
   13376:	blx	871c <openat64@plt>
   1337a:	subs	r7, r0, #0
   1337c:	bge.n	1339c <subvol_uuid_search2@@Base+0x36c>
   1337e:	blx	8740 <__errno_location@plt>
   13382:	ldr	r3, [pc, #356]	; (134e8 <subvol_uuid_search2@@Base+0x4b8>)
   13384:	ldr	r2, [pc, #376]	; (13500 <subvol_uuid_search2@@Base+0x4d0>)
   13386:	movs	r1, #1
   13388:	add	r2, pc
   1338a:	ldr	r6, [r0, #0]
   1338c:	ldr	r0, [r5, r3]
   1338e:	vmov	r3, s16
   13392:	negs	r6, r6
   13394:	ldr	r0, [r0, #0]
   13396:	blx	881c <__fprintf_chk@plt+0x4>
   1339a:	b.n	131dc <subvol_uuid_search2@@Base+0x1ac>
   1339c:	sub.w	r1, sl, #8
   133a0:	bl	156c0 <btrfs_list_get_path_rootid@@Base>
   133a4:	mov	r6, r0
   133a6:	mov	r0, r7
   133a8:	blx	8960 <close@plt>
   133ac:	b.n	131dc <subvol_uuid_search2@@Base+0x1ac>
   133ae:	ldr	r2, [r6, #64]	; 0x40
   133b0:	str	r2, [sp, #32]
   133b2:	cbz	r2, 13406 <subvol_uuid_search2@@Base+0x3d6>
   133b4:	add	r2, sp, #592	; 0x250
   133b6:	mov.w	sl, #0
   133ba:	str	r2, [sp, #36]	; 0x24
   133bc:	str.w	sl, [sp, #28]
   133c0:	ldr	r1, [sp, #28]
   133c2:	ldr	r2, [sp, #36]	; 0x24
   133c4:	add.w	ip, r1, #32
   133c8:	add	r2, r1
   133ca:	ldr.w	r8, [r2, #28]
   133ce:	ldr	r0, [r2, #8]
   133d0:	add.w	r1, r8, ip
   133d4:	str	r1, [sp, #28]
   133d6:	ldr	r1, [r2, #12]
   133d8:	ldrd	r8, r9, [sp, #16]
   133dc:	strd	r0, r1, [r6, #8]
   133e0:	ldr	r1, [r2, #24]
   133e2:	str	r1, [r6, #56]	; 0x38
   133e4:	ldr	r0, [r2, #16]
   133e6:	ldr	r1, [r2, #20]
   133e8:	strd	r0, r1, [r6, #24]
   133ec:	ldr	r1, [r2, #12]
   133ee:	ldr	r0, [r2, #8]
   133f0:	cmp	r9, r1
   133f2:	it	eq
   133f4:	cmpeq	r8, r0
   133f6:	bcs.n	13412 <subvol_uuid_search2@@Base+0x3e2>
   133f8:	ldrd	r1, r2, [r6, #24]
   133fc:	adds	r0, r2, #1
   133fe:	it	eq
   13400:	cmpeq.w	r1, #4294967295	; 0xffffffff
   13404:	bne.n	13458 <subvol_uuid_search2@@Base+0x428>
   13406:	cmp	r3, #0
   13408:	bne.w	13260 <subvol_uuid_search2@@Base+0x230>
   1340c:	mvn.w	r6, #1
   13410:	b.n	13434 <subvol_uuid_search2@@Base+0x404>
   13412:	bne.n	1344c <subvol_uuid_search2@@Base+0x41c>
   13414:	ldr	r1, [r2, #24]
   13416:	cmp	r1, #132	; 0x84
   13418:	bne.n	1344c <subvol_uuid_search2@@Base+0x41c>
   1341a:	ldr	r7, [r2, #28]
   1341c:	cmp.w	r7, #440	; 0x1b8
   13420:	bcc.n	13438 <subvol_uuid_search2@@Base+0x408>
   13422:	ldr	r3, [pc, #196]	; (134e8 <subvol_uuid_search2@@Base+0x4b8>)
   13424:	mvn.w	r6, #74	; 0x4a
   13428:	ldr	r0, [pc, #216]	; (13504 <subvol_uuid_search2@@Base+0x4d4>)
   1342a:	ldr	r3, [r5, r3]
   1342c:	add	r0, pc
   1342e:	ldr	r1, [r3, #0]
   13430:	blx	8930 <fputs@plt+0x4>
   13434:	mov	sl, r6
   13436:	b.n	13108 <subvol_uuid_search2@@Base+0xd8>
   13438:	ldr	r1, [sp, #36]	; 0x24
   1343a:	movw	r3, #439	; 0x1b7
   1343e:	vmov	r0, s18
   13442:	mov	r2, r7
   13444:	add	r1, ip
   13446:	blx	855c <__memcpy_chk@plt>
   1344a:	movs	r3, #1
   1344c:	ldr	r2, [sp, #32]
   1344e:	add.w	sl, sl, #1
   13452:	cmp	r2, sl
   13454:	bne.n	133c0 <subvol_uuid_search2@@Base+0x390>
   13456:	b.n	133f8 <subvol_uuid_search2@@Base+0x3c8>
   13458:	adds	r0, r1, #1
   1345a:	adc.w	r2, r2, #0
   1345e:	strd	r0, r2, [r6, #24]
   13462:	ldr	r2, [r6, #56]	; 0x38
   13464:	cmp	r2, #132	; 0x84
   13466:	bne.n	13406 <subvol_uuid_search2@@Base+0x3d6>
   13468:	ldrd	r0, r1, [r6, #8]
   1346c:	ldrd	r8, r9, [sp, #16]
   13470:	cmp	r9, r1
   13472:	it	eq
   13474:	cmpeq	r8, r0
   13476:	beq.w	1323a <subvol_uuid_search2@@Base+0x20a>
   1347a:	b.n	13406 <subvol_uuid_search2@@Base+0x3d6>
   1347c:	mov.w	r0, #4096	; 0x1000
   13480:	blx	8634 <malloc@plt+0x4>
   13484:	mov	r1, r0
   13486:	str.w	r0, [sl, #136]	; 0x88
   1348a:	cmp	r0, #0
   1348c:	beq.w	1334c <subvol_uuid_search2@@Base+0x31c>
   13490:	strd	r6, r7, [sp]
   13494:	mov.w	r2, #4096	; 0x1000
   13498:	ldr	r0, [r4, #0]
   1349a:	bl	12e94 <btrfs_subvolid_resolve@@Base>
   1349e:	mov	r6, r0
   134a0:	cmp	r0, #0
   134a2:	beq.w	13108 <subvol_uuid_search2@@Base+0xd8>
   134a6:	b.n	13350 <subvol_uuid_search2@@Base+0x320>
   134a8:	mvn.w	r6, #21
   134ac:	b.n	13434 <subvol_uuid_search2@@Base+0x404>
   134ae:	mvn.w	r6, #11
   134b2:	b.n	13434 <subvol_uuid_search2@@Base+0x404>
   134b4:	mov	sl, r0
   134b6:	b.n	13108 <subvol_uuid_search2@@Base+0xd8>
   134b8:	cmp	r0, #0
   134ba:	sbcs.w	r3, r3, #0
   134be:	bge.w	13164 <subvol_uuid_search2@@Base+0x134>
   134c2:	b.n	130b2 <subvol_uuid_search2@@Base+0x82>
   134c4:	mov	r0, sl
   134c6:	add.w	sp, sp, #4576	; 0x11e0
   134ca:	add	sp, #20
   134cc:	vpop	{d8-d9}
   134d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134d4:	str	r4, [sp, #68]	; 0x44
   134d6:	beq.n	134da <subvol_uuid_search2@@Base+0x4aa>
   134d8:	adds	r6, r0, #5
   134da:	movs	r5, r0
   134dc:	lsls	r4, r4, #8
   134de:	movs	r0, r0
   134e0:	adds	r2, r7, #4
   134e2:	movs	r5, r0
   134e4:	adds	r6, r6, #1
   134e6:	movs	r5, r0
   134e8:	lsls	r4, r6, #8
   134ea:	movs	r0, r0
   134ec:	ldr	r1, [r1, #16]
   134ee:	movs	r2, r0
   134f0:	add	r4, sp, #372	; 0x174
   134f2:	movs	r2, r0
   134f4:	ldrh	r5, [r6, #20]
   134f6:	movs	r2, r0
   134f8:	ldrh	r2, [r4, #12]
   134fa:	movs	r2, r0
   134fc:	ldrh	r4, [r2, #8]
   134fe:	movs	r2, r0
   13500:	strh	r1, [r1, #62]	; 0x3e
   13502:	movs	r2, r0
   13504:	strh	r6, [r4, #58]	; 0x3a
   13506:	movs	r2, r0

00013508 <subvol_uuid_search@@Base>:
   13508:	push	{r4, r5, lr}
   1350a:	sub	sp, #28
   1350c:	ldr	r1, [sp, #60]	; 0x3c
   1350e:	ldrd	r4, r5, [sp, #48]	; 0x30
   13512:	str	r1, [sp, #20]
   13514:	ldr	r1, [sp, #56]	; 0x38
   13516:	strd	r4, r5, [sp, #8]
   1351a:	str	r1, [sp, #16]
   1351c:	ldr	r1, [sp, #40]	; 0x28
   1351e:	str	r1, [sp, #0]
   13520:	bl	13030 <subvol_uuid_search2@@Base>
   13524:	cmn.w	r0, #4096	; 0x1000
   13528:	it	hi
   1352a:	movhi	r0, #0
   1352c:	add	sp, #28
   1352e:	pop	{r4, r5, pc}

00013530 <subvol_uuid_search_init@@Base>:
   13530:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13534:	mov	r9, r1
   13536:	vpush	{d8}
   1353a:	movs	r6, #0
   1353c:	ldr	r1, [pc, #820]	; (13874 <subvol_uuid_search_init@@Base+0x344>)
   1353e:	mov.w	r5, #4096	; 0x1000
   13542:	ldr	r2, [pc, #820]	; (13878 <subvol_uuid_search_init@@Base+0x348>)
   13544:	mov.w	sl, #4294967295	; 0xffffffff
   13548:	add	r1, pc
   1354a:	ldr	r3, [pc, #816]	; (1387c <subvol_uuid_search_init@@Base+0x34c>)
   1354c:	sub.w	sp, sp, #4608	; 0x1200
   13550:	vmov	s16, r0
   13554:	sub	sp, #4
   13556:	add	r3, pc
   13558:	add	r4, sp, #504	; 0x1f8
   1355a:	add	r7, sp, #512	; 0x200
   1355c:	str	r3, [sp, #12]
   1355e:	add.w	r3, sp, #4576	; 0x11e0
   13562:	ldr	r2, [r1, r2]
   13564:	add	r0, sp, #64	; 0x40
   13566:	movs	r1, #0
   13568:	adds	r3, #28
   1356a:	ldr	r2, [r2, #0]
   1356c:	str	r2, [r3, #0]
   1356e:	mov.w	r2, #0
   13572:	movw	r2, #439	; 0x1b7
   13576:	blx	8780 <memset@plt+0x4>
   1357a:	mov	r2, r5
   1357c:	mov	r1, r6
   1357e:	vstr	s16, [r9]
   13582:	mov	r0, r4
   13584:	strd	r6, r6, [r9, #8]
   13588:	strd	r6, r6, [r9, #16]
   1358c:	mov.w	fp, #4294967295	; 0xffffffff
   13590:	blx	8780 <memset@plt+0x4>
   13594:	movs	r2, #1
   13596:	movs	r3, #0
   13598:	vmov	r0, s16
   1359c:	strd	r2, r3, [r7, #-8]
   135a0:	movs	r2, #9
   135a2:	movs	r3, #0
   135a4:	ldr	r1, [pc, #712]	; (13870 <subvol_uuid_search_init@@Base+0x340>)
   135a6:	strd	r2, r3, [r4, #8]
   135aa:	movs	r7, #1
   135ac:	strd	r2, r3, [r4, #16]
   135b0:	mov	r2, r4
   135b2:	movs	r3, #132	; 0x84
   135b4:	strd	sl, fp, [r4, #32]
   135b8:	strd	r3, r3, [r4, #56]	; 0x38
   135bc:	strd	sl, fp, [r4, #48]	; 0x30
   135c0:	str	r7, [r4, #64]	; 0x40
   135c2:	blx	8578 <ioctl@plt>
   135c6:	subs	r3, r0, #0
   135c8:	str	r3, [sp, #8]
   135ca:	blt.n	13654 <subvol_uuid_search_init@@Base+0x124>
   135cc:	ldr.w	r8, [r4, #64]	; 0x40
   135d0:	cmp.w	r8, #0
   135d4:	beq.n	135f8 <subvol_uuid_search_init@@Base+0xc8>
   135d6:	str.w	r7, [r9, #4]
   135da:	str	r6, [sp, #8]
   135dc:	ldr	r1, [pc, #672]	; (13880 <subvol_uuid_search_init@@Base+0x350>)
   135de:	add.w	r3, sp, #4576	; 0x11e0
   135e2:	ldr	r2, [pc, #660]	; (13878 <subvol_uuid_search_init@@Base+0x348>)
   135e4:	adds	r3, #28
   135e6:	add	r1, pc
   135e8:	ldr	r2, [r1, r2]
   135ea:	ldr	r1, [r2, #0]
   135ec:	ldr	r2, [r3, #0]
   135ee:	eors	r1, r2
   135f0:	beq.w	1385e <subvol_uuid_search_init@@Base+0x32e>
   135f4:	blx	84cc <__stack_chk_fail@plt>
   135f8:	mov	r2, r5
   135fa:	mov	r1, r8
   135fc:	mov	r0, r4
   135fe:	blx	8780 <memset@plt+0x4>
   13602:	str	r5, [r4, #64]	; 0x40
   13604:	mov	r5, r8
   13606:	movs	r3, #0
   13608:	movs	r2, #1
   1360a:	movs	r1, #132	; 0x84
   1360c:	strd	r2, r3, [r4]
   13610:	movs	r3, #144	; 0x90
   13612:	strd	sl, fp, [r4, #16]
   13616:	strd	r1, r3, [r4, #56]	; 0x38
   1361a:	add	r3, sp, #608	; 0x260
   1361c:	strd	sl, fp, [r4, #32]
   13620:	strd	sl, fp, [r4, #48]	; 0x30
   13624:	str.w	r8, [sp, #52]	; 0x34
   13628:	strd	r8, r8, [sp, #28]
   1362c:	strd	r8, r8, [sp, #44]	; 0x2c
   13630:	strd	r8, r8, [sp, #36]	; 0x24
   13634:	str	r3, [sp, #60]	; 0x3c
   13636:	vmov	r0, s16
   1363a:	mov	r2, r4
   1363c:	ldr	r1, [pc, #560]	; (13870 <subvol_uuid_search_init@@Base+0x340>)
   1363e:	blx	8578 <ioctl@plt>
   13642:	subs	r3, r0, #0
   13644:	str	r3, [sp, #8]
   13646:	bge.n	13668 <subvol_uuid_search_init@@Base+0x138>
   13648:	ldr	r2, [sp, #12]
   1364a:	ldr	r3, [pc, #568]	; (13884 <subvol_uuid_search_init@@Base+0x354>)
   1364c:	ldr	r3, [r2, r3]
   1364e:	ldr	r2, [pc, #568]	; (13888 <subvol_uuid_search_init@@Base+0x358>)
   13650:	add	r2, pc
   13652:	b.n	1365e <subvol_uuid_search_init@@Base+0x12e>
   13654:	ldr	r2, [sp, #12]
   13656:	ldr	r3, [pc, #556]	; (13884 <subvol_uuid_search_init@@Base+0x354>)
   13658:	ldr	r3, [r2, r3]
   1365a:	ldr	r2, [pc, #560]	; (1388c <subvol_uuid_search_init@@Base+0x35c>)
   1365c:	add	r2, pc
   1365e:	ldr	r0, [r3, #0]
   13660:	movs	r1, #1
   13662:	blx	881c <__fprintf_chk@plt+0x4>
   13666:	b.n	135dc <subvol_uuid_search_init@@Base+0xac>
   13668:	ldr	r3, [r4, #64]	; 0x40
   1366a:	cmp	r3, #0
   1366c:	beq.n	135dc <subvol_uuid_search_init@@Base+0xac>
   1366e:	mov.w	fp, #0
   13672:	add	r7, sp, #64	; 0x40
   13674:	mov	sl, fp
   13676:	addw	r3, r7, #263	; 0x107
   1367a:	str	r3, [sp, #56]	; 0x38
   1367c:	ldr	r3, [r4, #64]	; 0x40
   1367e:	cmp	r3, sl
   13680:	bhi.n	136a4 <subvol_uuid_search_init@@Base+0x174>
   13682:	ldrd	r0, r1, [r4, #24]
   13686:	mov.w	r3, #4096	; 0x1000
   1368a:	str	r3, [r4, #64]	; 0x40
   1368c:	adds	r2, r1, #1
   1368e:	it	eq
   13690:	cmpeq.w	r0, #4294967295	; 0xffffffff
   13694:	beq.w	13836 <subvol_uuid_search_init@@Base+0x306>
   13698:	adds	r2, r0, #1
   1369a:	adc.w	r3, r1, #0
   1369e:	strd	r2, r3, [r4, #24]
   136a2:	b.n	13636 <subvol_uuid_search_init@@Base+0x106>
   136a4:	ldr	r3, [sp, #60]	; 0x3c
   136a6:	add.w	r6, r3, fp
   136aa:	add.w	r3, fp, #32
   136ae:	str	r3, [sp, #24]
   136b0:	ldr	r3, [r6, #12]
   136b2:	ldr	r2, [r6, #8]
   136b4:	cmp	r3, #0
   136b6:	it	eq
   136b8:	cmpeq	r2, #5
   136ba:	beq.n	136dc <subvol_uuid_search_init@@Base+0x1ac>
   136bc:	subs.w	r1, r2, #256	; 0x100
   136c0:	str	r1, [sp, #16]
   136c2:	adc.w	r1, r3, #4294967295	; 0xffffffff
   136c6:	str	r1, [sp, #20]
   136c8:	ldrd	fp, ip, [sp, #16]
   136cc:	mov.w	r1, #4294967295	; 0xffffffff
   136d0:	mvn.w	r0, #510	; 0x1fe
   136d4:	cmp	ip, r1
   136d6:	it	eq
   136d8:	cmpeq	fp, r0
   136da:	bcs.n	13732 <subvol_uuid_search_init@@Base+0x202>
   136dc:	ldr	r1, [r6, #24]
   136de:	cmp	r1, #132	; 0x84
   136e0:	bne.n	13754 <subvol_uuid_search_init@@Base+0x224>
   136e2:	ldr	r3, [r6, #28]
   136e4:	cmp.w	r3, #438	; 0x1b6
   136e8:	bls.w	13830 <subvol_uuid_search_init@@Base+0x300>
   136ec:	ldr	r3, [sp, #24]
   136ee:	add.w	r8, sp, #608	; 0x260
   136f2:	movw	r2, #439	; 0x1b7
   136f6:	mov	r0, r7
   136f8:	add	r8, r3
   136fa:	mov	r1, r8
   136fc:	blx	843c <memcpy@plt+0x4>
   13700:	ldr.w	r3, [r8, #295]	; 0x127
   13704:	ldr.w	r5, [r8, #319]	; 0x13f
   13708:	str	r3, [sp, #36]	; 0x24
   1370a:	ldr.w	r3, [r8, #299]	; 0x12b
   1370e:	str	r3, [sp, #40]	; 0x28
   13710:	ldr.w	r3, [r8, #303]	; 0x12f
   13714:	str	r3, [sp, #44]	; 0x2c
   13716:	ldr.w	r3, [r8, #307]	; 0x133
   1371a:	str	r3, [sp, #48]	; 0x30
   1371c:	ldr.w	r3, [r8, #311]	; 0x137
   13720:	str	r3, [sp, #28]
   13722:	ldr.w	r3, [r8, #315]	; 0x13b
   13726:	str	r3, [sp, #32]
   13728:	ldr.w	r3, [r8, #323]	; 0x143
   1372c:	mov.w	r8, #1
   13730:	str	r3, [sp, #52]	; 0x34
   13732:	ldr	r3, [r6, #28]
   13734:	add.w	sl, sl, #1
   13738:	ldr	r2, [sp, #24]
   1373a:	add	r2, r3
   1373c:	ldr	r3, [r6, #12]
   1373e:	mov	fp, r2
   13740:	ldr	r2, [r6, #8]
   13742:	strd	r2, r3, [r4, #8]
   13746:	ldr	r3, [r6, #20]
   13748:	ldr	r2, [r6, #16]
   1374a:	strd	r2, r3, [r4, #24]
   1374e:	ldr	r3, [r6, #24]
   13750:	str	r3, [r4, #56]	; 0x38
   13752:	b.n	1367c <subvol_uuid_search_init@@Base+0x14c>
   13754:	cmp.w	r8, #0
   13758:	beq.n	13732 <subvol_uuid_search_init@@Base+0x202>
   1375a:	vmov	r0, s16
   1375e:	bl	15c18 <btrfs_list_path_for_root@@Base>
   13762:	mov	r8, r0
   13764:	cbnz	r0, 13770 <subvol_uuid_search_init@@Base+0x240>
   13766:	ldr	r0, [pc, #296]	; (13890 <subvol_uuid_search_init@@Base+0x360>)
   13768:	add	r0, pc
   1376a:	blx	84b4 <strdup@plt+0x4>
   1376e:	mov	r8, r0
   13770:	cmn.w	r8, #4096	; 0x1000
   13774:	bls.n	13796 <subvol_uuid_search_init@@Base+0x266>
   13776:	ldr	r2, [sp, #12]
   13778:	ldr	r3, [pc, #264]	; (13884 <subvol_uuid_search_init@@Base+0x354>)
   1377a:	ldr	r1, [r6, #8]
   1377c:	str.w	r8, [sp, #8]
   13780:	ldr	r3, [r2, r3]
   13782:	ldr	r2, [r6, #12]
   13784:	strd	r1, r2, [sp]
   13788:	movs	r1, #1
   1378a:	ldr	r2, [pc, #264]	; (13894 <subvol_uuid_search_init@@Base+0x364>)
   1378c:	ldr	r0, [r3, #0]
   1378e:	add	r2, pc
   13790:	blx	881c <__fprintf_chk@plt+0x4>
   13794:	b.n	135dc <subvol_uuid_search_init@@Base+0xac>
   13796:	movs	r1, #144	; 0x90
   13798:	movs	r0, #1
   1379a:	blx	8358 <calloc@plt+0x4>
   1379e:	ldr	r2, [r6, #12]
   137a0:	ldr	r1, [r6, #8]
   137a2:	add.w	lr, r0, #56	; 0x38
   137a6:	strd	r1, r2, [r0, #48]	; 0x30
   137aa:	add.w	r2, r7, #247	; 0xf7
   137ae:	mov	r3, r0
   137b0:	ldr	r1, [r2, #4]
   137b2:	mov	ip, lr
   137b4:	ldr	r0, [r2, #0]
   137b6:	adds	r2, #8
   137b8:	stmia.w	ip!, {r0, r1}
   137bc:	mov	lr, ip
   137be:	ldr	r1, [sp, #56]	; 0x38
   137c0:	cmp	r2, r1
   137c2:	bne.n	137b0 <subvol_uuid_search_init@@Base+0x280>
   137c4:	addw	r1, r7, #279	; 0x117
   137c8:	addw	r2, r7, #263	; 0x107
   137cc:	add.w	lr, r3, #72	; 0x48
   137d0:	mov	fp, r1
   137d2:	ldr	r0, [r2, #0]
   137d4:	adds	r2, #8
   137d6:	ldr.w	r1, [r2, #-4]
   137da:	cmp	r2, fp
   137dc:	mov	ip, lr
   137de:	stmia.w	ip!, {r0, r1}
   137e2:	mov	lr, ip
   137e4:	bne.n	137d2 <subvol_uuid_search_init@@Base+0x2a2>
   137e6:	addw	r1, r7, #295	; 0x127
   137ea:	addw	r2, r7, #279	; 0x117
   137ee:	add.w	lr, r3, #88	; 0x58
   137f2:	mov	fp, r1
   137f4:	ldr	r0, [r2, #0]
   137f6:	adds	r2, #8
   137f8:	ldr.w	r1, [r2, #-4]
   137fc:	cmp	r2, fp
   137fe:	mov	ip, lr
   13800:	stmia.w	ip!, {r0, r1}
   13804:	mov	lr, ip
   13806:	bne.n	137f4 <subvol_uuid_search_init@@Base+0x2c4>
   13808:	ldr	r2, [sp, #36]	; 0x24
   1380a:	mov	r1, r3
   1380c:	mov	r0, r9
   1380e:	str	r2, [r3, #104]	; 0x68
   13810:	ldr	r2, [sp, #40]	; 0x28
   13812:	str	r2, [r3, #108]	; 0x6c
   13814:	ldr	r2, [sp, #44]	; 0x2c
   13816:	str	r2, [r3, #112]	; 0x70
   13818:	ldr	r2, [sp, #48]	; 0x30
   1381a:	str	r2, [r3, #116]	; 0x74
   1381c:	ldr	r2, [sp, #28]
   1381e:	str	r2, [r3, #120]	; 0x78
   13820:	ldr	r2, [sp, #32]
   13822:	strd	r2, r5, [r3, #124]	; 0x7c
   13826:	ldr	r2, [sp, #52]	; 0x34
   13828:	strd	r2, r8, [r3, #132]	; 0x84
   1382c:	bl	12eba <subvol_uuid_search_add@@Base>
   13830:	mov.w	r8, #0
   13834:	b.n	13732 <subvol_uuid_search_init@@Base+0x202>
   13836:	ldrd	r0, r1, [r4, #8]
   1383a:	adds	r3, r1, #1
   1383c:	it	eq
   1383e:	cmpeq.w	r0, #4294967295	; 0xffffffff
   13842:	beq.w	135dc <subvol_uuid_search_init@@Base+0xac>
   13846:	adds	r2, r0, #1
   13848:	adc.w	r3, r1, #0
   1384c:	strd	r2, r3, [r4, #8]
   13850:	movs	r3, #0
   13852:	movs	r2, #0
   13854:	strd	r2, r3, [r4, #24]
   13858:	movs	r3, #0
   1385a:	str	r3, [r4, #56]	; 0x38
   1385c:	b.n	13636 <subvol_uuid_search_init@@Base+0x106>
   1385e:	ldr	r0, [sp, #8]
   13860:	add.w	sp, sp, #4608	; 0x1200
   13864:	add	sp, #4
   13866:	vpop	{d8}
   1386a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1386e:	nop
   13870:	str	r4, [sp, #68]	; 0x44
   13872:	beq.n	13876 <subvol_uuid_search_init@@Base+0x346>
   13874:	adds	r0, r0, r1
   13876:	movs	r5, r0
   13878:	lsls	r4, r4, #8
   1387a:	movs	r0, r0
   1387c:	adds	r2, r6, r0
   1387e:	movs	r5, r0
   13880:	asrs	r2, r4, #30
   13882:	movs	r5, r0
   13884:	lsls	r4, r6, #8
   13886:	movs	r0, r0
   13888:	strh	r4, [r3, #40]	; 0x28
   1388a:	movs	r2, r0
   1388c:	strh	r0, [r0, #44]	; 0x2c
   1388e:	movs	r2, r0
   13890:	strb	r4, [r6, #3]
   13892:	movs	r2, r0
   13894:	strh	r7, [r7, #34]	; 0x22
   13896:	movs	r2, r0

00013898 <subvol_uuid_search_finit@@Base>:
   13898:	push	{r4, r5, r6, lr}
   1389a:	mov	r5, r0
   1389c:	ldr	r3, [r0, #4]
   1389e:	cbz	r3, 138b6 <subvol_uuid_search_finit@@Base+0x1e>
   138a0:	add.w	r6, r0, #8
   138a4:	mov	r0, r6
   138a6:	bl	13e46 <rb_first@@Base>
   138aa:	mov	r4, r0
   138ac:	cbnz	r0, 138b8 <subvol_uuid_search_finit@@Base+0x20>
   138ae:	strd	r0, r0, [r5, #8]
   138b2:	strd	r0, r0, [r5, #16]
   138b6:	pop	{r4, r5, r6, pc}
   138b8:	ldr.w	r0, [r4, #136]	; 0x88
   138bc:	blx	83f0 <free@plt+0x4>
   138c0:	mov	r0, r4
   138c2:	mov	r1, r6
   138c4:	bl	13bd0 <rb_erase@@Base>
   138c8:	mov	r0, r4
   138ca:	blx	83f0 <free@plt+0x4>
   138ce:	b.n	138a4 <subvol_uuid_search_finit@@Base+0xc>

000138d0 <path_cat_out@@Base>:
   138d0:	push	{r4, r5, r6, r7, lr}
   138d2:	mov	r7, r0
   138d4:	sub	sp, #20
   138d6:	mov	r0, r1
   138d8:	mov	r6, r2
   138da:	mov	r5, r1
   138dc:	blx	8704 <strlen@plt>
   138e0:	mov	r4, r0
   138e2:	mov	r0, r6
   138e4:	blx	8704 <strlen@plt>
   138e8:	movw	r2, #4093	; 0xffd
   138ec:	adds	r1, r4, r0
   138ee:	mov	r3, r0
   138f0:	cmp	r1, r2
   138f2:	bgt.n	13934 <path_cat_out@@Base+0x64>
   138f4:	cbz	r4, 13904 <path_cat_out@@Base+0x34>
   138f6:	adds	r2, r5, r4
   138f8:	ldrb.w	r2, [r2, #-1]
   138fc:	cmp	r2, #47	; 0x2f
   138fe:	it	eq
   13900:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   13904:	cbz	r0, 13930 <path_cat_out@@Base+0x60>
   13906:	adds	r2, r6, r0
   13908:	ldrb.w	r2, [r2, #-1]
   1390c:	cmp	r2, #47	; 0x2f
   1390e:	bne.n	13912 <path_cat_out@@Base+0x42>
   13910:	subs	r3, r0, #1
   13912:	strd	r3, r6, [sp, #8]
   13916:	mov.w	r2, #4294967295	; 0xffffffff
   1391a:	ldr	r3, [pc, #32]	; (1393c <path_cat_out@@Base+0x6c>)
   1391c:	movs	r1, #1
   1391e:	mov	r0, r7
   13920:	strd	r4, r5, [sp]
   13924:	add	r3, pc
   13926:	blx	8758 <__sprintf_chk@plt>
   1392a:	movs	r0, #0
   1392c:	add	sp, #20
   1392e:	pop	{r4, r5, r6, r7, pc}
   13930:	mov	r3, r0
   13932:	b.n	13912 <path_cat_out@@Base+0x42>
   13934:	mvn.w	r0, #35	; 0x23
   13938:	b.n	1392c <path_cat_out@@Base+0x5c>
   1393a:	nop
   1393c:	strh	r3, [r3, #24]
   1393e:	movs	r2, r0

00013940 <path_cat3_out@@Base>:
   13940:	stmdb	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   13944:	mov	sl, r0
   13946:	sub	sp, #24
   13948:	mov	r0, r1
   1394a:	mov	r8, r2
   1394c:	mov	r9, r3
   1394e:	mov	r7, r1
   13950:	blx	8704 <strlen@plt>
   13954:	mov	r4, r0
   13956:	mov	r0, r8
   13958:	blx	8704 <strlen@plt>
   1395c:	mov	r6, r0
   1395e:	mov	fp, r0
   13960:	mov	r0, r9
   13962:	blx	8704 <strlen@plt>
   13966:	adds	r2, r4, r6
   13968:	movw	r1, #4092	; 0xffc
   1396c:	add	r2, r0
   1396e:	mov	r3, r0
   13970:	cmp	r2, r1
   13972:	bgt.n	139d2 <path_cat3_out@@Base+0x92>
   13974:	cbz	r4, 13984 <path_cat3_out@@Base+0x44>
   13976:	adds	r2, r7, r4
   13978:	ldrb.w	r2, [r2, #-1]
   1397c:	cmp	r2, #47	; 0x2f
   1397e:	it	eq
   13980:	addeq.w	r4, r4, #4294967295	; 0xffffffff
   13984:	cbz	r6, 139ca <path_cat3_out@@Base+0x8a>
   13986:	add.w	r2, r8, r6
   1398a:	ldrb.w	r2, [r2, #-1]
   1398e:	cmp	r2, #47	; 0x2f
   13990:	bne.n	13996 <path_cat3_out@@Base+0x56>
   13992:	add.w	fp, r6, #4294967295	; 0xffffffff
   13996:	cbz	r0, 139ce <path_cat3_out@@Base+0x8e>
   13998:	add.w	r2, r9, r0
   1399c:	ldrb.w	r2, [r2, #-1]
   139a0:	cmp	r2, #47	; 0x2f
   139a2:	bne.n	139a6 <path_cat3_out@@Base+0x66>
   139a4:	subs	r3, r0, #1
   139a6:	strd	r3, r9, [sp, #16]
   139aa:	mov.w	r2, #4294967295	; 0xffffffff
   139ae:	ldr	r3, [pc, #40]	; (139d8 <path_cat3_out@@Base+0x98>)
   139b0:	movs	r1, #1
   139b2:	mov	r0, sl
   139b4:	strd	fp, r8, [sp, #8]
   139b8:	add	r3, pc
   139ba:	strd	r4, r7, [sp]
   139be:	blx	8758 <__sprintf_chk@plt>
   139c2:	movs	r0, #0
   139c4:	add	sp, #24
   139c6:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   139ca:	mov	fp, r6
   139cc:	b.n	13996 <path_cat3_out@@Base+0x56>
   139ce:	mov	r3, r0
   139d0:	b.n	139a6 <path_cat3_out@@Base+0x66>
   139d2:	mvn.w	r0, #35	; 0x23
   139d6:	b.n	139c4 <path_cat3_out@@Base+0x84>
   139d8:	strh	r2, [r0, #20]
   139da:	movs	r2, r0
   139dc:	push	{r4, lr}
   139de:	orrs	r3, r1
   139e0:	ldr	r4, [r0, #0]
   139e2:	str	r4, [r1, #0]
   139e4:	bics.w	r4, r4, #3
   139e8:	str	r3, [r0, #0]
   139ea:	beq.n	139f8 <path_cat3_out@@Base+0xb8>
   139ec:	ldr	r3, [r4, #8]
   139ee:	cmp	r0, r3
   139f0:	ite	eq
   139f2:	streq	r1, [r4, #8]
   139f4:	strne	r1, [r4, #4]
   139f6:	pop	{r4, pc}
   139f8:	str	r1, [r2, #0]
   139fa:	b.n	139f6 <path_cat3_out@@Base+0xb6>

000139fc <__rb_erase_color@@Base>:
   139fc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13a00:	mov	r6, r2
   13a02:	mov	r4, r0
   13a04:	mov	r7, r1
   13a06:	movs	r2, #0
   13a08:	ldr	r5, [r4, #4]
   13a0a:	cmp	r5, r2
   13a0c:	beq.n	13ab0 <__rb_erase_color@@Base+0xb4>
   13a0e:	ldr	r3, [r5, #0]
   13a10:	ands.w	r3, r3, #1
   13a14:	bne.n	13a36 <__rb_erase_color@@Base+0x3a>
   13a16:	ldr.w	r8, [r5, #8]
   13a1a:	mov	r1, r5
   13a1c:	orr.w	r2, r4, #1
   13a20:	mov	r0, r4
   13a22:	str.w	r8, [r4, #4]
   13a26:	str	r4, [r5, #8]
   13a28:	mov	r5, r8
   13a2a:	str.w	r2, [r8]
   13a2e:	mov	r2, r7
   13a30:	bl	139dc <path_cat3_out@@Base+0x9c>
   13a34:	blx	r6
   13a36:	ldr	r3, [r5, #4]
   13a38:	cbz	r3, 13a40 <__rb_erase_color@@Base+0x44>
   13a3a:	ldr	r2, [r3, #0]
   13a3c:	lsls	r2, r2, #31
   13a3e:	bpl.n	13a84 <__rb_erase_color@@Base+0x88>
   13a40:	ldr.w	r8, [r5, #8]
   13a44:	cmp.w	r8, #0
   13a48:	beq.n	13a52 <__rb_erase_color@@Base+0x56>
   13a4a:	ldr.w	r3, [r8]
   13a4e:	lsls	r3, r3, #31
   13a50:	bpl.n	13a64 <__rb_erase_color@@Base+0x68>
   13a52:	str	r4, [r5, #0]
   13a54:	ldr	r3, [r4, #0]
   13a56:	lsls	r2, r3, #31
   13a58:	bmi.n	13b1e <__rb_erase_color@@Base+0x122>
   13a5a:	orr.w	r3, r3, #1
   13a5e:	str	r3, [r4, #0]
   13a60:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13a64:	ldr.w	r3, [r8, #4]
   13a68:	str	r3, [r5, #8]
   13a6a:	str.w	r5, [r8, #4]
   13a6e:	str.w	r8, [r4, #4]
   13a72:	cbz	r3, 13a7a <__rb_erase_color@@Base+0x7e>
   13a74:	orr.w	r2, r5, #1
   13a78:	str	r2, [r3, #0]
   13a7a:	mov	r0, r5
   13a7c:	mov	r1, r8
   13a7e:	blx	r6
   13a80:	mov	r3, r5
   13a82:	mov	r5, r8
   13a84:	ldr	r2, [r5, #8]
   13a86:	str	r2, [r4, #4]
   13a88:	str	r4, [r5, #8]
   13a8a:	orr.w	r1, r5, #1
   13a8e:	str	r1, [r3, #0]
   13a90:	cbz	r2, 13a9c <__rb_erase_color@@Base+0xa0>
   13a92:	ldr	r3, [r2, #0]
   13a94:	and.w	r3, r3, #1
   13a98:	orrs	r3, r4
   13a9a:	str	r3, [r2, #0]
   13a9c:	movs	r3, #1
   13a9e:	mov	r2, r7
   13aa0:	mov	r1, r5
   13aa2:	mov	r0, r4
   13aa4:	bl	139dc <path_cat3_out@@Base+0x9c>
   13aa8:	mov	r3, r6
   13aaa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   13aae:	bx	r3
   13ab0:	ldr	r5, [r4, #8]
   13ab2:	ldr	r3, [r5, #0]
   13ab4:	ands.w	r3, r3, #1
   13ab8:	bne.n	13ada <__rb_erase_color@@Base+0xde>
   13aba:	ldr.w	r8, [r5, #4]
   13abe:	mov	r1, r5
   13ac0:	orr.w	r2, r4, #1
   13ac4:	mov	r0, r4
   13ac6:	str.w	r8, [r4, #8]
   13aca:	str	r4, [r5, #4]
   13acc:	mov	r5, r8
   13ace:	str.w	r2, [r8]
   13ad2:	mov	r2, r7
   13ad4:	bl	139dc <path_cat3_out@@Base+0x9c>
   13ad8:	blx	r6
   13ada:	ldr	r3, [r5, #8]
   13adc:	cbz	r3, 13ae4 <__rb_erase_color@@Base+0xe8>
   13ade:	ldr	r2, [r3, #0]
   13ae0:	lsls	r0, r2, #31
   13ae2:	bpl.n	13b16 <__rb_erase_color@@Base+0x11a>
   13ae4:	ldr.w	r8, [r5, #4]
   13ae8:	cmp.w	r8, #0
   13aec:	beq.n	13a52 <__rb_erase_color@@Base+0x56>
   13aee:	ldr.w	r3, [r8]
   13af2:	lsls	r1, r3, #31
   13af4:	bmi.n	13a52 <__rb_erase_color@@Base+0x56>
   13af6:	ldr.w	r3, [r8, #8]
   13afa:	str	r3, [r5, #4]
   13afc:	str.w	r5, [r8, #8]
   13b00:	str.w	r8, [r4, #8]
   13b04:	cbz	r3, 13b0c <__rb_erase_color@@Base+0x110>
   13b06:	orr.w	r2, r5, #1
   13b0a:	str	r2, [r3, #0]
   13b0c:	mov	r0, r5
   13b0e:	mov	r1, r8
   13b10:	blx	r6
   13b12:	mov	r3, r5
   13b14:	mov	r5, r8
   13b16:	ldr	r2, [r5, #4]
   13b18:	str	r2, [r4, #8]
   13b1a:	str	r4, [r5, #4]
   13b1c:	b.n	13a8a <__rb_erase_color@@Base+0x8e>
   13b1e:	bics.w	r3, r3, #3
   13b22:	beq.n	13a60 <__rb_erase_color@@Base+0x64>
   13b24:	mov	r2, r4
   13b26:	mov	r4, r3
   13b28:	b.n	13a08 <__rb_erase_color@@Base+0xc>

00013b2a <rb_insert_color@@Base>:
   13b2a:	push	{r4, r5, r6}
   13b2c:	mov	r3, r0
   13b2e:	ldr	r4, [r0, #0]
   13b30:	mov	r2, r1
   13b32:	cbnz	r4, 13b3c <rb_insert_color@@Base+0x12>
   13b34:	movs	r2, #1
   13b36:	str	r2, [r3, #0]
   13b38:	pop	{r4, r5, r6}
   13b3a:	bx	lr
   13b3c:	ldr	r0, [r4, #0]
   13b3e:	lsls	r5, r0, #31
   13b40:	bmi.n	13b38 <rb_insert_color@@Base+0xe>
   13b42:	ldr	r5, [r0, #4]
   13b44:	cmp	r4, r5
   13b46:	beq.n	13b92 <rb_insert_color@@Base+0x68>
   13b48:	cbz	r5, 13b64 <rb_insert_color@@Base+0x3a>
   13b4a:	ldr	r1, [r5, #0]
   13b4c:	lsls	r1, r1, #31
   13b4e:	bmi.n	13b64 <rb_insert_color@@Base+0x3a>
   13b50:	orr.w	r3, r0, #1
   13b54:	str	r3, [r5, #0]
   13b56:	str	r3, [r4, #0]
   13b58:	mov	r3, r0
   13b5a:	ldr	r4, [r0, #0]
   13b5c:	bic.w	r4, r4, #3
   13b60:	str	r4, [r0, #0]
   13b62:	b.n	13b32 <rb_insert_color@@Base+0x8>
   13b64:	ldr	r5, [r4, #4]
   13b66:	cmp	r5, r3
   13b68:	bne.n	13b7e <rb_insert_color@@Base+0x54>
   13b6a:	ldr	r1, [r3, #8]
   13b6c:	str	r1, [r4, #4]
   13b6e:	str	r4, [r3, #8]
   13b70:	cbz	r1, 13b78 <rb_insert_color@@Base+0x4e>
   13b72:	orr.w	r5, r4, #1
   13b76:	str	r5, [r1, #0]
   13b78:	str	r3, [r4, #0]
   13b7a:	mov	r4, r3
   13b7c:	ldr	r5, [r3, #4]
   13b7e:	str	r5, [r0, #8]
   13b80:	str	r0, [r4, #4]
   13b82:	cbz	r5, 13b8a <rb_insert_color@@Base+0x60>
   13b84:	orr.w	r3, r0, #1
   13b88:	str	r3, [r5, #0]
   13b8a:	movs	r3, #0
   13b8c:	mov	r1, r4
   13b8e:	pop	{r4, r5, r6}
   13b90:	b.n	139dc <path_cat3_out@@Base+0x9c>
   13b92:	ldr	r1, [r0, #8]
   13b94:	cbz	r1, 13ba4 <rb_insert_color@@Base+0x7a>
   13b96:	ldr	r6, [r1, #0]
   13b98:	lsls	r6, r6, #31
   13b9a:	bmi.n	13ba4 <rb_insert_color@@Base+0x7a>
   13b9c:	orr.w	r3, r0, #1
   13ba0:	str	r3, [r1, #0]
   13ba2:	b.n	13b56 <rb_insert_color@@Base+0x2c>
   13ba4:	ldr	r4, [r5, #8]
   13ba6:	cmp	r4, r3
   13ba8:	bne.n	13bbe <rb_insert_color@@Base+0x94>
   13baa:	ldr	r1, [r3, #4]
   13bac:	str	r1, [r5, #8]
   13bae:	str	r5, [r3, #4]
   13bb0:	cbz	r1, 13bb8 <rb_insert_color@@Base+0x8e>
   13bb2:	orr.w	r4, r5, #1
   13bb6:	str	r4, [r1, #0]
   13bb8:	str	r3, [r5, #0]
   13bba:	mov	r5, r3
   13bbc:	ldr	r4, [r3, #8]
   13bbe:	str	r4, [r0, #4]
   13bc0:	str	r0, [r5, #8]
   13bc2:	cbz	r4, 13bca <rb_insert_color@@Base+0xa0>
   13bc4:	orr.w	r3, r0, #1
   13bc8:	str	r3, [r4, #0]
   13bca:	movs	r3, #0
   13bcc:	mov	r1, r5
   13bce:	b.n	13b8e <rb_insert_color@@Base+0x64>

00013bd0 <rb_erase@@Base>:
   13bd0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   13bd4:	mov	r2, r1
   13bd6:	mov	r4, r0
   13bd8:	ldrd	r1, r0, [r0, #4]
   13bdc:	cbnz	r0, 13c08 <rb_erase@@Base+0x38>
   13bde:	ldr	r5, [r4, #0]
   13be0:	bic.w	r3, r5, #3
   13be4:	mov	r0, r3
   13be6:	cbz	r3, 13bfa <rb_erase@@Base+0x2a>
   13be8:	ldr	r6, [r3, #8]
   13bea:	cmp	r4, r6
   13bec:	ite	eq
   13bee:	streq	r1, [r3, #8]
   13bf0:	strne	r1, [r3, #4]
   13bf2:	cbz	r1, 13bfe <rb_erase@@Base+0x2e>
   13bf4:	str	r5, [r1, #0]
   13bf6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   13bfa:	str	r1, [r2, #0]
   13bfc:	b.n	13bf2 <rb_erase@@Base+0x22>
   13bfe:	lsls	r5, r5, #31
   13c00:	bpl.n	13bf6 <rb_erase@@Base+0x26>
   13c02:	cmp	r3, #0
   13c04:	bne.n	13c84 <rb_erase@@Base+0xb4>
   13c06:	b.n	13bf6 <rb_erase@@Base+0x26>
   13c08:	cbnz	r1, 13c24 <rb_erase@@Base+0x54>
   13c0a:	ldr	r3, [r4, #0]
   13c0c:	str	r3, [r0, #0]
   13c0e:	bics.w	r3, r3, #3
   13c12:	beq.n	13c20 <rb_erase@@Base+0x50>
   13c14:	ldr	r2, [r3, #8]
   13c16:	cmp	r4, r2
   13c18:	ite	eq
   13c1a:	streq	r0, [r3, #8]
   13c1c:	strne	r0, [r3, #4]
   13c1e:	b.n	13bf6 <rb_erase@@Base+0x26>
   13c20:	str	r0, [r2, #0]
   13c22:	b.n	13bf6 <rb_erase@@Base+0x26>
   13c24:	ldr	r3, [r1, #8]
   13c26:	cbnz	r3, 13c5a <rb_erase@@Base+0x8a>
   13c28:	ldr	r6, [r1, #4]
   13c2a:	mov	r3, r1
   13c2c:	mov	r0, r1
   13c2e:	ldr	r5, [r4, #8]
   13c30:	str	r5, [r3, #8]
   13c32:	ldr	r1, [r5, #0]
   13c34:	and.w	r1, r1, #1
   13c38:	orrs	r1, r3
   13c3a:	str	r1, [r5, #0]
   13c3c:	ldr	r1, [r4, #0]
   13c3e:	bics.w	r5, r1, #3
   13c42:	beq.n	13c78 <rb_erase@@Base+0xa8>
   13c44:	ldr	r7, [r5, #8]
   13c46:	cmp	r4, r7
   13c48:	ite	eq
   13c4a:	streq	r3, [r5, #8]
   13c4c:	strne	r3, [r5, #4]
   13c4e:	cbz	r6, 13c7c <rb_erase@@Base+0xac>
   13c50:	orr.w	r0, r0, #1
   13c54:	str	r1, [r3, #0]
   13c56:	str	r0, [r6, #0]
   13c58:	b.n	13bf6 <rb_erase@@Base+0x26>
   13c5a:	mov	r0, r1
   13c5c:	ldr	r5, [r3, #8]
   13c5e:	cbnz	r5, 13c72 <rb_erase@@Base+0xa2>
   13c60:	ldr	r6, [r3, #4]
   13c62:	str	r6, [r0, #8]
   13c64:	str	r1, [r3, #4]
   13c66:	ldr	r5, [r1, #0]
   13c68:	and.w	r5, r5, #1
   13c6c:	orrs	r5, r3
   13c6e:	str	r5, [r1, #0]
   13c70:	b.n	13c2e <rb_erase@@Base+0x5e>
   13c72:	mov	r0, r3
   13c74:	mov	r3, r5
   13c76:	b.n	13c5c <rb_erase@@Base+0x8c>
   13c78:	str	r3, [r2, #0]
   13c7a:	b.n	13c4e <rb_erase@@Base+0x7e>
   13c7c:	ldr	r4, [r3, #0]
   13c7e:	str	r1, [r3, #0]
   13c80:	lsls	r4, r4, #31
   13c82:	bpl.n	13bf6 <rb_erase@@Base+0x26>
   13c84:	movs	r1, #0
   13c86:	ldr	r4, [r0, #4]
   13c88:	cmp	r4, r1
   13c8a:	beq.n	13d02 <rb_erase@@Base+0x132>
   13c8c:	ldr	r3, [r4, #0]
   13c8e:	ands.w	r3, r3, #1
   13c92:	bne.n	13ca8 <rb_erase@@Base+0xd8>
   13c94:	ldr	r5, [r4, #8]
   13c96:	orr.w	r1, r0, #1
   13c9a:	str	r5, [r0, #4]
   13c9c:	str	r0, [r4, #8]
   13c9e:	str	r1, [r5, #0]
   13ca0:	mov	r1, r4
   13ca2:	bl	139dc <path_cat3_out@@Base+0x9c>
   13ca6:	mov	r4, r5
   13ca8:	ldr	r3, [r4, #4]
   13caa:	cbz	r3, 13cb2 <rb_erase@@Base+0xe2>
   13cac:	ldr	r1, [r3, #0]
   13cae:	lsls	r1, r1, #31
   13cb0:	bpl.n	13cfc <rb_erase@@Base+0x12c>
   13cb2:	ldr	r1, [r4, #8]
   13cb4:	cbz	r1, 13cbc <rb_erase@@Base+0xec>
   13cb6:	ldr	r3, [r1, #0]
   13cb8:	lsls	r7, r3, #31
   13cba:	bpl.n	13ccc <rb_erase@@Base+0xfc>
   13cbc:	str	r0, [r4, #0]
   13cbe:	ldr	r3, [r0, #0]
   13cc0:	lsls	r1, r3, #31
   13cc2:	bmi.n	13d36 <rb_erase@@Base+0x166>
   13cc4:	orr.w	r3, r3, #1
   13cc8:	str	r3, [r0, #0]
   13cca:	b.n	13bf6 <rb_erase@@Base+0x26>
   13ccc:	ldr	r3, [r1, #4]
   13cce:	str	r3, [r4, #8]
   13cd0:	str	r4, [r1, #4]
   13cd2:	str	r1, [r0, #4]
   13cd4:	cbz	r3, 13cdc <rb_erase@@Base+0x10c>
   13cd6:	orr.w	r5, r4, #1
   13cda:	str	r5, [r3, #0]
   13cdc:	ldr	r5, [r1, #8]
   13cde:	orr.w	r3, r1, #1
   13ce2:	str	r5, [r0, #4]
   13ce4:	str	r0, [r1, #8]
   13ce6:	str	r3, [r4, #0]
   13ce8:	cbz	r5, 13cf4 <rb_erase@@Base+0x124>
   13cea:	ldr	r3, [r5, #0]
   13cec:	and.w	r3, r3, #1
   13cf0:	orrs	r3, r0
   13cf2:	str	r3, [r5, #0]
   13cf4:	movs	r3, #1
   13cf6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   13cfa:	b.n	139dc <path_cat3_out@@Base+0x9c>
   13cfc:	mov	r1, r4
   13cfe:	mov	r4, r3
   13d00:	b.n	13cdc <rb_erase@@Base+0x10c>
   13d02:	ldr	r1, [r0, #8]
   13d04:	ldr	r3, [r1, #0]
   13d06:	ands.w	r3, r3, #1
   13d0a:	bne.n	13d1e <rb_erase@@Base+0x14e>
   13d0c:	ldr	r4, [r1, #4]
   13d0e:	orr.w	r5, r0, #1
   13d12:	str	r4, [r0, #8]
   13d14:	str	r0, [r1, #4]
   13d16:	str	r5, [r4, #0]
   13d18:	bl	139dc <path_cat3_out@@Base+0x9c>
   13d1c:	mov	r1, r4
   13d1e:	ldr	r3, [r1, #8]
   13d20:	cbz	r3, 13d28 <rb_erase@@Base+0x158>
   13d22:	ldr	r4, [r3, #0]
   13d24:	lsls	r6, r4, #31
   13d26:	bpl.n	13d72 <rb_erase@@Base+0x1a2>
   13d28:	ldr	r4, [r1, #4]
   13d2a:	cbz	r4, 13d32 <rb_erase@@Base+0x162>
   13d2c:	ldr	r3, [r4, #0]
   13d2e:	lsls	r5, r3, #31
   13d30:	bpl.n	13d44 <rb_erase@@Base+0x174>
   13d32:	str	r0, [r1, #0]
   13d34:	b.n	13cbe <rb_erase@@Base+0xee>
   13d36:	bics.w	r3, r3, #3
   13d3a:	beq.w	13bf6 <rb_erase@@Base+0x26>
   13d3e:	mov	r1, r0
   13d40:	mov	r0, r3
   13d42:	b.n	13c86 <rb_erase@@Base+0xb6>
   13d44:	ldr	r3, [r4, #8]
   13d46:	str	r3, [r1, #4]
   13d48:	str	r1, [r4, #8]
   13d4a:	str	r4, [r0, #8]
   13d4c:	cbz	r3, 13d54 <rb_erase@@Base+0x184>
   13d4e:	orr.w	r5, r1, #1
   13d52:	str	r5, [r3, #0]
   13d54:	ldr	r5, [r4, #4]
   13d56:	orr.w	r3, r4, #1
   13d5a:	str	r5, [r0, #8]
   13d5c:	str	r0, [r4, #4]
   13d5e:	str	r3, [r1, #0]
   13d60:	cbz	r5, 13d6c <rb_erase@@Base+0x19c>
   13d62:	ldr	r3, [r5, #0]
   13d64:	and.w	r3, r3, #1
   13d68:	orrs	r3, r0
   13d6a:	str	r3, [r5, #0]
   13d6c:	movs	r3, #1
   13d6e:	mov	r1, r4
   13d70:	b.n	13cf6 <rb_erase@@Base+0x126>
   13d72:	mov	r4, r1
   13d74:	mov	r1, r3
   13d76:	b.n	13d54 <rb_erase@@Base+0x184>

00013d78 <__rb_insert_augmented@@Base>:
   13d78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13d7c:	mov	r6, r0
   13d7e:	ldr	r4, [r0, #0]
   13d80:	mov	r9, r1
   13d82:	mov	r8, r2
   13d84:	cbnz	r4, 13d8e <__rb_insert_augmented@@Base+0x16>
   13d86:	movs	r3, #1
   13d88:	str	r3, [r6, #0]
   13d8a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   13d8e:	ldr	r5, [r4, #0]
   13d90:	lsls	r0, r5, #31
   13d92:	bmi.n	13d8a <__rb_insert_augmented@@Base+0x12>
   13d94:	ldr	r7, [r5, #4]
   13d96:	cmp	r4, r7
   13d98:	beq.n	13df8 <__rb_insert_augmented@@Base+0x80>
   13d9a:	cbz	r7, 13db6 <__rb_insert_augmented@@Base+0x3e>
   13d9c:	ldr	r3, [r7, #0]
   13d9e:	lsls	r1, r3, #31
   13da0:	bmi.n	13db6 <__rb_insert_augmented@@Base+0x3e>
   13da2:	orr.w	r3, r5, #1
   13da6:	str	r3, [r7, #0]
   13da8:	str	r3, [r4, #0]
   13daa:	ldr	r4, [r5, #0]
   13dac:	mov	r6, r5
   13dae:	bic.w	r4, r4, #3
   13db2:	str	r4, [r5, #0]
   13db4:	b.n	13d84 <__rb_insert_augmented@@Base+0xc>
   13db6:	ldr	r3, [r4, #4]
   13db8:	cmp	r3, r6
   13dba:	bne.n	13dd6 <__rb_insert_augmented@@Base+0x5e>
   13dbc:	ldr	r3, [r6, #8]
   13dbe:	str	r3, [r4, #4]
   13dc0:	str	r4, [r6, #8]
   13dc2:	cbz	r3, 13dca <__rb_insert_augmented@@Base+0x52>
   13dc4:	orr.w	r2, r4, #1
   13dc8:	str	r2, [r3, #0]
   13dca:	mov	r0, r4
   13dcc:	str	r6, [r4, #0]
   13dce:	mov	r1, r6
   13dd0:	mov	r4, r6
   13dd2:	blx	r8
   13dd4:	ldr	r3, [r6, #4]
   13dd6:	str	r3, [r5, #8]
   13dd8:	str	r5, [r4, #4]
   13dda:	cbz	r3, 13de2 <__rb_insert_augmented@@Base+0x6a>
   13ddc:	orr.w	r2, r5, #1
   13de0:	str	r2, [r3, #0]
   13de2:	movs	r3, #0
   13de4:	mov	r2, r9
   13de6:	mov	r1, r4
   13de8:	mov	r0, r5
   13dea:	bl	139dc <path_cat3_out@@Base+0x9c>
   13dee:	mov	r0, r5
   13df0:	mov	r3, r8
   13df2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   13df6:	bx	r3
   13df8:	ldr	r3, [r5, #8]
   13dfa:	cbz	r3, 13e0c <__rb_insert_augmented@@Base+0x94>
   13dfc:	ldr	r2, [r3, #0]
   13dfe:	lsls	r2, r2, #31
   13e00:	bmi.n	13e0c <__rb_insert_augmented@@Base+0x94>
   13e02:	orr.w	r2, r5, #1
   13e06:	str	r2, [r3, #0]
   13e08:	str	r2, [r4, #0]
   13e0a:	b.n	13daa <__rb_insert_augmented@@Base+0x32>
   13e0c:	ldr	r3, [r7, #8]
   13e0e:	cmp	r3, r6
   13e10:	bne.n	13e2c <__rb_insert_augmented@@Base+0xb4>
   13e12:	ldr	r3, [r6, #4]
   13e14:	str	r3, [r7, #8]
   13e16:	str	r7, [r6, #4]
   13e18:	cbz	r3, 13e20 <__rb_insert_augmented@@Base+0xa8>
   13e1a:	orr.w	r2, r7, #1
   13e1e:	str	r2, [r3, #0]
   13e20:	mov	r0, r7
   13e22:	str	r6, [r7, #0]
   13e24:	mov	r1, r6
   13e26:	mov	r7, r6
   13e28:	blx	r8
   13e2a:	ldr	r3, [r6, #8]
   13e2c:	str	r3, [r5, #4]
   13e2e:	str	r5, [r7, #8]
   13e30:	cbz	r3, 13e38 <__rb_insert_augmented@@Base+0xc0>
   13e32:	orr.w	r2, r5, #1
   13e36:	str	r2, [r3, #0]
   13e38:	movs	r3, #0
   13e3a:	mov	r2, r9
   13e3c:	mov	r1, r7
   13e3e:	mov	r0, r5
   13e40:	bl	139dc <path_cat3_out@@Base+0x9c>
   13e44:	b.n	13dee <__rb_insert_augmented@@Base+0x76>

00013e46 <rb_first@@Base>:
   13e46:	ldr	r0, [r0, #0]
   13e48:	cbz	r0, 13e54 <rb_first@@Base+0xe>
   13e4a:	mov	r3, r0
   13e4c:	ldr	r0, [r0, #8]
   13e4e:	cmp	r0, #0
   13e50:	bne.n	13e4a <rb_first@@Base+0x4>
   13e52:	mov	r0, r3
   13e54:	bx	lr

00013e56 <rb_last@@Base>:
   13e56:	ldr	r0, [r0, #0]
   13e58:	cbz	r0, 13e64 <rb_last@@Base+0xe>
   13e5a:	mov	r3, r0
   13e5c:	ldr	r0, [r0, #4]
   13e5e:	cmp	r0, #0
   13e60:	bne.n	13e5a <rb_last@@Base+0x4>
   13e62:	mov	r0, r3
   13e64:	bx	lr

00013e66 <rb_next@@Base>:
   13e66:	ldr	r3, [r0, #0]
   13e68:	cmp	r0, r3
   13e6a:	beq.n	13e8e <rb_next@@Base+0x28>
   13e6c:	ldr	r3, [r0, #4]
   13e6e:	cbz	r3, 13e7a <rb_next@@Base+0x14>
   13e70:	mov	r0, r3
   13e72:	ldr	r3, [r3, #8]
   13e74:	cmp	r3, #0
   13e76:	bne.n	13e70 <rb_next@@Base+0xa>
   13e78:	bx	lr
   13e7a:	ldr	r3, [r0, #0]
   13e7c:	mov	r2, r0
   13e7e:	bic.w	r3, r3, #3
   13e82:	mov	r0, r3
   13e84:	cbz	r3, 13e90 <rb_next@@Base+0x2a>
   13e86:	ldr	r3, [r3, #4]
   13e88:	cmp	r3, r2
   13e8a:	beq.n	13e7a <rb_next@@Base+0x14>
   13e8c:	bx	lr
   13e8e:	movs	r0, #0
   13e90:	bx	lr

00013e92 <rb_prev@@Base>:
   13e92:	ldr	r3, [r0, #0]
   13e94:	cmp	r0, r3
   13e96:	beq.n	13eba <rb_prev@@Base+0x28>
   13e98:	ldr	r3, [r0, #8]
   13e9a:	cbz	r3, 13ea6 <rb_prev@@Base+0x14>
   13e9c:	mov	r0, r3
   13e9e:	ldr	r3, [r3, #4]
   13ea0:	cmp	r3, #0
   13ea2:	bne.n	13e9c <rb_prev@@Base+0xa>
   13ea4:	bx	lr
   13ea6:	ldr	r3, [r0, #0]
   13ea8:	mov	r2, r0
   13eaa:	bic.w	r3, r3, #3
   13eae:	mov	r0, r3
   13eb0:	cbz	r3, 13ebc <rb_prev@@Base+0x2a>
   13eb2:	ldr	r3, [r3, #8]
   13eb4:	cmp	r3, r2
   13eb6:	beq.n	13ea6 <rb_prev@@Base+0x14>
   13eb8:	bx	lr
   13eba:	movs	r0, #0
   13ebc:	bx	lr

00013ebe <rb_replace_node@@Base>:
   13ebe:	mov	r3, r1
   13ec0:	ldr	r1, [r0, #0]
   13ec2:	bics.w	r1, r1, #3
   13ec6:	beq.n	13ef6 <rb_replace_node@@Base+0x38>
   13ec8:	ldr	r2, [r1, #8]
   13eca:	cmp	r0, r2
   13ecc:	ite	eq
   13ece:	streq	r3, [r1, #8]
   13ed0:	strne	r3, [r1, #4]
   13ed2:	ldr	r1, [r0, #8]
   13ed4:	cbz	r1, 13ee0 <rb_replace_node@@Base+0x22>
   13ed6:	ldr	r2, [r1, #0]
   13ed8:	and.w	r2, r2, #1
   13edc:	orrs	r2, r3
   13ede:	str	r2, [r1, #0]
   13ee0:	ldr	r1, [r0, #4]
   13ee2:	cbz	r1, 13eee <rb_replace_node@@Base+0x30>
   13ee4:	ldr	r2, [r1, #0]
   13ee6:	and.w	r2, r2, #1
   13eea:	orrs	r2, r3
   13eec:	str	r2, [r1, #0]
   13eee:	ldmia	r0, {r0, r1, r2}
   13ef0:	stmia.w	r3, {r0, r1, r2}
   13ef4:	bx	lr
   13ef6:	str	r3, [r2, #0]
   13ef8:	b.n	13ed2 <rb_replace_node@@Base+0x14>

00013efa <rb_next_postorder@@Base>:
   13efa:	mov	r2, r0
   13efc:	cbz	r0, 13f20 <rb_next_postorder@@Base+0x26>
   13efe:	ldr	r3, [r0, #0]
   13f00:	bics.w	r0, r3, #3
   13f04:	beq.n	13f20 <rb_next_postorder@@Base+0x26>
   13f06:	ldr	r3, [r0, #8]
   13f08:	cmp	r3, r2
   13f0a:	bne.n	13f20 <rb_next_postorder@@Base+0x26>
   13f0c:	ldr	r3, [r0, #4]
   13f0e:	cbz	r3, 13f20 <rb_next_postorder@@Base+0x26>
   13f10:	mov	r0, r3
   13f12:	ldr	r3, [r3, #8]
   13f14:	cmp	r3, #0
   13f16:	bne.n	13f10 <rb_next_postorder@@Base+0x16>
   13f18:	ldr	r3, [r0, #4]
   13f1a:	cmp	r3, #0
   13f1c:	bne.n	13f10 <rb_next_postorder@@Base+0x16>
   13f1e:	bx	lr
   13f20:	bx	lr

00013f22 <rb_first_postorder@@Base>:
   13f22:	ldr	r0, [r0, #0]
   13f24:	cbz	r0, 13f36 <rb_first_postorder@@Base+0x14>
   13f26:	mov	r3, r0
   13f28:	ldr	r0, [r0, #8]
   13f2a:	cmp	r0, #0
   13f2c:	bne.n	13f26 <rb_first_postorder@@Base+0x4>
   13f2e:	ldr	r0, [r3, #4]
   13f30:	cmp	r0, #0
   13f32:	bne.n	13f26 <rb_first_postorder@@Base+0x4>
   13f34:	mov	r0, r3
   13f36:	bx	lr
   13f38:	push	{r4, r5, lr}
   13f3a:	ldrd	r4, r5, [r0, #24]
   13f3e:	ldrd	r0, r1, [r1, #24]
   13f42:	cmp	r1, r5
   13f44:	it	eq
   13f46:	cmpeq	r0, r4
   13f48:	bcc.n	13f5e <rb_first_postorder@@Base+0x3c>
   13f4a:	cmp	r5, r1
   13f4c:	it	eq
   13f4e:	cmpeq	r4, r0
   13f50:	ite	cc
   13f52:	movcc.w	r0, #4294967295	; 0xffffffff
   13f56:	movcs	r0, #0
   13f58:	cbz	r2, 13f5c <rb_first_postorder@@Base+0x3a>
   13f5a:	negs	r0, r0
   13f5c:	pop	{r4, r5, pc}
   13f5e:	movs	r0, #1
   13f60:	b.n	13f58 <rb_first_postorder@@Base+0x36>
   13f62:	push	{r4, r5, lr}
   13f64:	ldrd	r4, r5, [r0, #72]	; 0x48
   13f68:	ldrd	r0, r1, [r1, #72]	; 0x48
   13f6c:	cmp	r1, r5
   13f6e:	it	eq
   13f70:	cmpeq	r0, r4
   13f72:	bcc.n	13f88 <rb_first_postorder@@Base+0x66>
   13f74:	cmp	r5, r1
   13f76:	it	eq
   13f78:	cmpeq	r4, r0
   13f7a:	ite	cc
   13f7c:	movcc.w	r0, #4294967295	; 0xffffffff
   13f80:	movcs	r0, #0
   13f82:	cbz	r2, 13f86 <rb_first_postorder@@Base+0x64>
   13f84:	negs	r0, r0
   13f86:	pop	{r4, r5, pc}
   13f88:	movs	r0, #1
   13f8a:	b.n	13f82 <rb_first_postorder@@Base+0x60>
   13f8c:	push	{r4, r5, lr}
   13f8e:	ldrd	r4, r5, [r0, #80]	; 0x50
   13f92:	ldrd	r0, r1, [r1, #80]	; 0x50
   13f96:	cmp	r1, r5
   13f98:	it	eq
   13f9a:	cmpeq	r0, r4
   13f9c:	bcc.n	13fb2 <rb_first_postorder@@Base+0x90>
   13f9e:	cmp	r5, r1
   13fa0:	it	eq
   13fa2:	cmpeq	r4, r0
   13fa4:	ite	cc
   13fa6:	movcc.w	r0, #4294967295	; 0xffffffff
   13faa:	movcs	r0, #0
   13fac:	cbz	r2, 13fb0 <rb_first_postorder@@Base+0x8e>
   13fae:	negs	r0, r0
   13fb0:	pop	{r4, r5, pc}
   13fb2:	movs	r0, #1
   13fb4:	b.n	13fac <rb_first_postorder@@Base+0x8a>
   13fb6:	ldrd	r0, r1, [r0, #24]
   13fba:	cmp	r1, r3
   13fbc:	itte	eq
   13fbe:	cmpeq	r0, r2
   13fc0:	moveq	r0, #1
   13fc2:	movne	r0, #0
   13fc4:	bx	lr
   13fc6:	ldrd	r2, r3, [r0, #32]
   13fca:	orrs	r3, r2
   13fcc:	ite	ne
   13fce:	movne	r0, #1
   13fd0:	moveq	r0, #0
   13fd2:	bx	lr
   13fd4:	ldr	r0, [r0, #40]	; 0x28
   13fd6:	ands	r0, r2
   13fd8:	bx	lr
   13fda:	ldrd	r0, r1, [r0, #72]	; 0x48
   13fde:	cmp	r1, r3
   13fe0:	it	eq
   13fe2:	cmpeq	r0, r2
   13fe4:	ite	cs
   13fe6:	movcs	r0, #1
   13fe8:	movcc	r0, #0
   13fea:	bx	lr
   13fec:	ldrd	r0, r1, [r0, #72]	; 0x48
   13ff0:	cmp	r3, r1
   13ff2:	it	eq
   13ff4:	cmpeq	r2, r0
   13ff6:	ite	cs
   13ff8:	movcs	r0, #1
   13ffa:	movcc	r0, #0
   13ffc:	bx	lr
   13ffe:	ldrd	r0, r1, [r0, #72]	; 0x48
   14002:	cmp	r1, r3
   14004:	itte	eq
   14006:	cmpeq	r0, r2
   14008:	moveq	r0, #1
   1400a:	movne	r0, #0
   1400c:	bx	lr
   1400e:	ldrd	r0, r1, [r0, #80]	; 0x50
   14012:	cmp	r1, r3
   14014:	it	eq
   14016:	cmpeq	r0, r2
   14018:	ite	cs
   1401a:	movcs	r0, #1
   1401c:	movcc	r0, #0
   1401e:	bx	lr
   14020:	ldrd	r0, r1, [r0, #80]	; 0x50
   14024:	cmp	r3, r1
   14026:	it	eq
   14028:	cmpeq	r2, r0
   1402a:	ite	cs
   1402c:	movcs	r0, #1
   1402e:	movcc	r0, #0
   14030:	bx	lr
   14032:	ldrd	r0, r1, [r0, #80]	; 0x50
   14036:	cmp	r1, r3
   14038:	itte	eq
   1403a:	cmpeq	r0, r2
   1403c:	moveq	r0, #1
   1403e:	movne	r0, #0
   14040:	bx	lr
   14042:	ldrd	r0, r1, [r0, #64]	; 0x40
   14046:	cmp	r1, r3
   14048:	itte	eq
   1404a:	cmpeq	r0, r2
   1404c:	moveq	r0, #1
   1404e:	movne	r0, #0
   14050:	bx	lr
   14052:	ldr.w	r0, [r0, #152]	; 0x98
   14056:	bx	lr
   14058:	ldr	r2, [pc, #60]	; (14098 <rb_first_postorder@@Base+0x176>)
   1405a:	movs	r1, #16
   1405c:	ldr	r3, [pc, #60]	; (1409c <rb_first_postorder@@Base+0x17a>)
   1405e:	push	{r4, lr}
   14060:	add	r2, pc
   14062:	sub	sp, #72	; 0x48
   14064:	add	r4, sp, #4
   14066:	ldr	r3, [r2, r3]
   14068:	mov	r0, r4
   1406a:	ldr	r3, [r3, #0]
   1406c:	str	r3, [sp, #68]	; 0x44
   1406e:	mov.w	r3, #0
   14072:	blx	8680 <backtrace@plt>
   14076:	movs	r2, #2
   14078:	mov	r1, r0
   1407a:	mov	r0, r4
   1407c:	blx	8990 <backtrace_symbols_fd@plt>
   14080:	ldr	r2, [pc, #28]	; (140a0 <rb_first_postorder@@Base+0x17e>)
   14082:	ldr	r3, [pc, #24]	; (1409c <rb_first_postorder@@Base+0x17a>)
   14084:	add	r2, pc
   14086:	ldr	r3, [r2, r3]
   14088:	ldr	r2, [r3, #0]
   1408a:	ldr	r3, [sp, #68]	; 0x44
   1408c:	eors	r2, r3
   1408e:	beq.n	14094 <rb_first_postorder@@Base+0x172>
   14090:	blx	84cc <__stack_chk_fail@plt>
   14094:	add	sp, #72	; 0x48
   14096:	pop	{r4, pc}
   14098:	lsrs	r0, r5, #20
   1409a:	movs	r5, r0
   1409c:	lsls	r4, r4, #8
   1409e:	movs	r0, r0
   140a0:	lsrs	r4, r0, #20
   140a2:	movs	r5, r0
   140a4:	push	{r4, lr}
   140a6:	mov	r4, r0
   140a8:	ldr.w	r0, [r0, #144]	; 0x90
   140ac:	blx	83f0 <free@plt+0x4>
   140b0:	ldr.w	r0, [r4, #140]	; 0x8c
   140b4:	blx	83f0 <free@plt+0x4>
   140b8:	ldr.w	r0, [r4, #148]	; 0x94
   140bc:	blx	83f0 <free@plt+0x4>
   140c0:	mov	r0, r4
   140c2:	ldmia.w	sp!, {r4, lr}
   140c6:	b.w	83ec <free@plt>
   140ca:	mov	r1, r2
   140cc:	adds	r0, #108	; 0x6c
   140ce:	push	{r3, lr}
   140d0:	blx	8500 <uuid_compare@plt>
   140d4:	clz	r0, r0
   140d8:	lsrs	r0, r0, #5
   140da:	pop	{r3, pc}
   140dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   140e0:	mov	r6, r0
   140e2:	mov	r0, r2
   140e4:	ldr	r2, [pc, #188]	; (141a4 <rb_first_postorder@@Base+0x282>)
   140e6:	mov	r1, r3
   140e8:	ldr	r3, [pc, #188]	; (141a8 <rb_first_postorder@@Base+0x286>)
   140ea:	add	r2, pc
   140ec:	ldr.w	r7, [r6, #148]	; 0x94
   140f0:	ldr.w	r8, [pc, #184]	; 141ac <rb_first_postorder@@Base+0x28a>
   140f4:	sub	sp, #20
   140f6:	ldr	r3, [r2, r3]
   140f8:	add	r8, pc
   140fa:	ldr	r3, [r3, #0]
   140fc:	str	r3, [sp, #12]
   140fe:	mov.w	r3, #0
   14102:	cmp	r7, #0
   14104:	beq.n	14186 <rb_first_postorder@@Base+0x264>
   14106:	ldrd	r2, r3, [r6, #64]	; 0x40
   1410a:	cmp	r3, r1
   1410c:	it	eq
   1410e:	cmpeq	r2, r0
   14110:	beq.n	14186 <rb_first_postorder@@Base+0x264>
   14112:	ldr	r2, [pc, #156]	; (141b0 <rb_first_postorder@@Base+0x28e>)
   14114:	mov	r3, sp
   14116:	mov	fp, sp
   14118:	add	r2, pc
   1411a:	ldr	r1, [r2, #4]
   1411c:	ldr	r0, [r2, #0]
   1411e:	ldrh	r2, [r2, #8]
   14120:	stmia	r3!, {r0, r1}
   14122:	mov	r0, fp
   14124:	strh	r2, [r3, #0]
   14126:	blx	8704 <strlen@plt>
   1412a:	mov	r5, r0
   1412c:	mov	r0, r7
   1412e:	blx	8704 <strlen@plt>
   14132:	add.w	r9, r5, r0
   14136:	mov	sl, r0
   14138:	add.w	r0, r9, #2
   1413c:	blx	8634 <malloc@plt+0x4>
   14140:	mov	r4, r0
   14142:	cbnz	r0, 1415a <rb_first_postorder@@Base+0x238>
   14144:	ldr	r3, [pc, #108]	; (141b4 <rb_first_postorder@@Base+0x292>)
   14146:	ldr	r0, [pc, #112]	; (141b8 <rb_first_postorder@@Base+0x296>)
   14148:	ldr.w	r3, [r8, r3]
   1414c:	add	r0, pc
   1414e:	ldr	r1, [r3, #0]
   14150:	blx	8930 <fputs@plt+0x4>
   14154:	movs	r0, #1
   14156:	blx	86f8 <exit@plt>
   1415a:	adds	r0, r5, #1
   1415c:	add	r9, r4
   1415e:	mov	r2, sl
   14160:	mov	r1, r7
   14162:	add	r0, r4
   14164:	blx	843c <memcpy@plt+0x4>
   14168:	movs	r3, #0
   1416a:	mov	r2, r5
   1416c:	strb.w	r3, [r9, #1]
   14170:	mov	r1, fp
   14172:	movs	r3, #47	; 0x2f
   14174:	mov	r0, r4
   14176:	strb	r3, [r4, r5]
   14178:	blx	843c <memcpy@plt+0x4>
   1417c:	mov	r0, r7
   1417e:	blx	83f0 <free@plt+0x4>
   14182:	str.w	r4, [r6, #148]	; 0x94
   14186:	ldr	r2, [pc, #52]	; (141bc <rb_first_postorder@@Base+0x29a>)
   14188:	ldr	r3, [pc, #28]	; (141a8 <rb_first_postorder@@Base+0x286>)
   1418a:	add	r2, pc
   1418c:	ldr	r3, [r2, r3]
   1418e:	ldr	r2, [r3, #0]
   14190:	ldr	r3, [sp, #12]
   14192:	eors	r2, r3
   14194:	beq.n	1419a <rb_first_postorder@@Base+0x278>
   14196:	blx	84cc <__stack_chk_fail@plt>
   1419a:	movs	r0, #1
   1419c:	add	sp, #20
   1419e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   141a2:	nop
   141a4:	lsrs	r6, r3, #18
   141a6:	movs	r5, r0
   141a8:	lsls	r4, r4, #8
   141aa:	movs	r0, r0
   141ac:	lsrs	r0, r2, #18
   141ae:	movs	r5, r0
   141b0:	ldrb	r7, [r2, #13]
   141b2:	movs	r2, r0
   141b4:	lsls	r4, r6, #8
   141b6:	movs	r0, r0
   141b8:	ldrb	r1, [r1, #12]
   141ba:	movs	r2, r0
   141bc:	lsrs	r6, r7, #15
   141be:	movs	r5, r0
   141c0:	push	{r4, lr}
   141c2:	mov	r4, r2
   141c4:	ldr.w	r1, [r1, #148]	; 0x94
   141c8:	ldr.w	r0, [r0, #148]	; 0x94
   141cc:	blx	837c <strcmp@plt>
   141d0:	cmp	r0, #0
   141d2:	bgt.n	141e2 <rb_first_postorder@@Base+0x2c0>
   141d4:	ite	ne
   141d6:	movne.w	r0, #4294967295	; 0xffffffff
   141da:	moveq	r0, #0
   141dc:	cbz	r4, 141e0 <rb_first_postorder@@Base+0x2be>
   141de:	negs	r0, r0
   141e0:	pop	{r4, pc}
   141e2:	movs	r0, #1
   141e4:	b.n	141dc <rb_first_postorder@@Base+0x2ba>
   141e6:	push	{r4, lr}
   141e8:	sub	sp, #168	; 0xa8
   141ea:	ldr	r4, [pc, #76]	; (14238 <rb_first_postorder@@Base+0x316>)
   141ec:	ldr	r1, [pc, #76]	; (1423c <rb_first_postorder@@Base+0x31a>)
   141ee:	add	r4, pc
   141f0:	ldr	r1, [r4, r1]
   141f2:	mov	r4, sp
   141f4:	ldr	r1, [r1, #0]
   141f6:	str	r1, [sp, #164]	; 0xa4
   141f8:	mov.w	r1, #0
   141fc:	strd	r2, r3, [sp, #24]
   14200:	mov	r3, r0
   14202:	cbnz	r3, 14218 <rb_first_postorder@@Base+0x2f6>
   14204:	ldr	r1, [pc, #56]	; (14240 <rb_first_postorder@@Base+0x31e>)
   14206:	ldr	r2, [pc, #52]	; (1423c <rb_first_postorder@@Base+0x31a>)
   14208:	add	r1, pc
   1420a:	ldr	r2, [r1, r2]
   1420c:	ldr	r1, [r2, #0]
   1420e:	ldr	r2, [sp, #164]	; 0xa4
   14210:	eors	r1, r2
   14212:	beq.n	14230 <rb_first_postorder@@Base+0x30e>
   14214:	blx	84cc <__stack_chk_fail@plt>
   14218:	movs	r2, #0
   1421a:	mov	r1, r3
   1421c:	mov	r0, r4
   1421e:	bl	13f38 <rb_first_postorder@@Base+0x16>
   14222:	cmp	r0, #0
   14224:	bge.n	1422a <rb_first_postorder@@Base+0x308>
   14226:	ldr	r3, [r3, #8]
   14228:	b.n	14202 <rb_first_postorder@@Base+0x2e0>
   1422a:	beq.n	14204 <rb_first_postorder@@Base+0x2e2>
   1422c:	ldr	r3, [r3, #4]
   1422e:	b.n	14202 <rb_first_postorder@@Base+0x2e0>
   14230:	mov	r0, r3
   14232:	add	sp, #168	; 0xa8
   14234:	pop	{r4, pc}
   14236:	nop
   14238:	lsrs	r2, r3, #14
   1423a:	movs	r5, r0
   1423c:	lsls	r4, r4, #8
   1423e:	movs	r0, r0
   14240:	lsrs	r0, r0, #14
   14242:	movs	r5, r0
   14244:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14248:	sub	sp, #20
   1424a:	mov	r9, r0
   1424c:	ldr	r0, [r0, #0]
   1424e:	strd	r2, r3, [sp]
   14252:	bl	141e6 <rb_first_postorder@@Base+0x2c4>
   14256:	ldr.w	fp, [pc, #656]	; 144e8 <rb_first_postorder@@Base+0x5c6>
   1425a:	ldrd	r6, r7, [sp, #64]	; 0x40
   1425e:	add	fp, pc
   14260:	ldrd	sl, r8, [sp, #88]	; 0x58
   14264:	ldr	r5, [sp, #124]	; 0x7c
   14266:	mov	r4, r0
   14268:	cmp	r0, #0
   1426a:	beq.w	143a2 <rb_first_postorder@@Base+0x480>
   1426e:	ldrd	r2, r3, [r0, #24]
   14272:	ldrd	r0, r1, [sp]
   14276:	cmp	r1, r3
   14278:	it	eq
   1427a:	cmpeq	r0, r2
   1427c:	bne.w	143a2 <rb_first_postorder@@Base+0x480>
   14280:	cmp.w	sl, #0
   14284:	beq.n	142c6 <rb_first_postorder@@Base+0x3a4>
   14286:	cmp.w	r8, #0
   1428a:	beq.n	142c6 <rb_first_postorder@@Base+0x3a4>
   1428c:	ldr.w	r0, [r4, #144]	; 0x90
   14290:	blx	83f0 <free@plt+0x4>
   14294:	add.w	r0, r8, #1
   14298:	blx	8634 <malloc@plt+0x4>
   1429c:	str.w	r0, [r4, #144]	; 0x90
   142a0:	cbnz	r0, 142b4 <rb_first_postorder@@Base+0x392>
   142a2:	ldr	r3, [pc, #584]	; (144ec <rb_first_postorder@@Base+0x5ca>)
   142a4:	ldr	r0, [pc, #584]	; (144f0 <rb_first_postorder@@Base+0x5ce>)
   142a6:	ldr.w	r3, [fp, r3]
   142aa:	add	r0, pc
   142ac:	ldr	r1, [r3, #0]
   142ae:	blx	8930 <fputs@plt+0x4>
   142b2:	b.n	143b6 <rb_first_postorder@@Base+0x494>
   142b4:	mov	r2, r8
   142b6:	mov	r1, sl
   142b8:	blx	879c <strncpy@plt>
   142bc:	ldr.w	r3, [r4, #144]	; 0x90
   142c0:	movs	r2, #0
   142c2:	strb.w	r2, [r3, r8]
   142c6:	ldrd	r2, r3, [sp, #56]	; 0x38
   142ca:	orrs	r3, r2
   142cc:	itt	ne
   142ce:	ldrdne	r2, r3, [sp, #56]	; 0x38
   142d2:	strdne	r2, r3, [r4, #48]	; 0x30
   142d6:	orrs.w	r3, r6, r7
   142da:	ldrd	r2, r3, [sp, #72]	; 0x48
   142de:	it	ne
   142e0:	strdne	r6, r7, [r4, #32]
   142e4:	orrs	r3, r2
   142e6:	itt	ne
   142e8:	ldrdne	r2, r3, [sp, #72]	; 0x48
   142ec:	strdne	r2, r3, [r4, #40]	; 0x28
   142f0:	ldrd	r2, r3, [sp, #80]	; 0x50
   142f4:	orrs	r3, r2
   142f6:	itt	ne
   142f8:	ldrdne	r2, r3, [sp, #80]	; 0x50
   142fc:	strdne	r2, r3, [r4, #56]	; 0x38
   14300:	ldrd	r2, r3, [sp, #104]	; 0x68
   14304:	orrs	r3, r2
   14306:	itt	ne
   14308:	ldrdne	r2, r3, [sp, #104]	; 0x68
   1430c:	strdne	r2, r3, [r4, #72]	; 0x48
   14310:	ldrd	r2, r3, [sp, #96]	; 0x60
   14314:	orrs	r3, r2
   14316:	beq.n	1438e <rb_first_postorder@@Base+0x46c>
   14318:	ldrd	r2, r3, [sp, #96]	; 0x60
   1431c:	strd	r2, r3, [r4, #80]	; 0x50
   14320:	ldr	r3, [sp, #112]	; 0x70
   14322:	cbz	r3, 14326 <rb_first_postorder@@Base+0x404>
   14324:	str	r3, [r4, #88]	; 0x58
   14326:	ldr	r3, [sp, #116]	; 0x74
   14328:	cbz	r3, 14348 <rb_first_postorder@@Base+0x426>
   1432a:	add.w	r2, r4, #92	; 0x5c
   1432e:	add.w	ip, r3, #16
   14332:	mov	r7, r3
   14334:	mov	r3, r7
   14336:	adds	r2, #8
   14338:	ldmia	r3!, {r0, r1}
   1433a:	cmp	r3, ip
   1433c:	str.w	r0, [r2, #-8]
   14340:	mov	r7, r3
   14342:	str.w	r1, [r2, #-4]
   14346:	bne.n	14334 <rb_first_postorder@@Base+0x412>
   14348:	ldr	r3, [sp, #120]	; 0x78
   1434a:	cbz	r3, 1436a <rb_first_postorder@@Base+0x448>
   1434c:	add.w	r2, r4, #108	; 0x6c
   14350:	add.w	r7, r3, #16
   14354:	mov	r6, r3
   14356:	mov	r3, r6
   14358:	adds	r2, #8
   1435a:	ldmia	r3!, {r0, r1}
   1435c:	cmp	r3, r7
   1435e:	str.w	r0, [r2, #-8]
   14362:	mov	r6, r3
   14364:	str.w	r1, [r2, #-4]
   14368:	bne.n	14356 <rb_first_postorder@@Base+0x434>
   1436a:	cbz	r5, 14386 <rb_first_postorder@@Base+0x464>
   1436c:	adds	r4, #124	; 0x7c
   1436e:	add.w	r2, r5, #16
   14372:	mov	r3, r5
   14374:	adds	r4, #8
   14376:	ldmia	r3!, {r0, r1}
   14378:	cmp	r3, r2
   1437a:	str.w	r0, [r4, #-8]
   1437e:	mov	r5, r3
   14380:	str.w	r1, [r4, #-4]
   14384:	bne.n	14372 <rb_first_postorder@@Base+0x450>
   14386:	movs	r0, #0
   14388:	add	sp, #20
   1438a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1438e:	ldrd	r2, r3, [r4, #80]	; 0x50
   14392:	orrs	r3, r2
   14394:	bne.n	14320 <rb_first_postorder@@Base+0x3fe>
   14396:	orrs.w	r3, r6, r7
   1439a:	it	ne
   1439c:	strdne	r6, r7, [r4, #80]	; 0x50
   143a0:	b.n	14320 <rb_first_postorder@@Base+0x3fe>
   143a2:	movs	r1, #160	; 0xa0
   143a4:	movs	r0, #1
   143a6:	blx	8358 <calloc@plt+0x4>
   143aa:	mov	r4, r0
   143ac:	cbnz	r0, 143bc <rb_first_postorder@@Base+0x49a>
   143ae:	ldr	r0, [pc, #324]	; (144f4 <rb_first_postorder@@Base+0x5d2>)
   143b0:	add	r0, pc
   143b2:	blx	8618 <puts@plt+0x4>
   143b6:	movs	r0, #1
   143b8:	blx	86f8 <exit@plt>
   143bc:	ldrd	r2, r3, [sp]
   143c0:	strd	r2, r3, [r0, #24]
   143c4:	cmp.w	sl, #0
   143c8:	beq.n	143fe <rb_first_postorder@@Base+0x4dc>
   143ca:	cmp.w	r8, #0
   143ce:	beq.n	143fe <rb_first_postorder@@Base+0x4dc>
   143d0:	add.w	r0, r8, #1
   143d4:	blx	8634 <malloc@plt+0x4>
   143d8:	str.w	r0, [r4, #144]	; 0x90
   143dc:	cbnz	r0, 143ec <rb_first_postorder@@Base+0x4ca>
   143de:	ldr	r3, [pc, #268]	; (144ec <rb_first_postorder@@Base+0x5ca>)
   143e0:	ldr	r0, [pc, #276]	; (144f8 <rb_first_postorder@@Base+0x5d6>)
   143e2:	ldr.w	r3, [fp, r3]
   143e6:	add	r0, pc
   143e8:	ldr	r1, [r3, #0]
   143ea:	b.n	142ae <rb_first_postorder@@Base+0x38c>
   143ec:	mov	r2, r8
   143ee:	mov	r1, sl
   143f0:	str	r0, [sp, #12]
   143f2:	blx	879c <strncpy@plt>
   143f6:	ldr	r3, [sp, #12]
   143f8:	movs	r2, #0
   143fa:	strb.w	r2, [r3, r8]
   143fe:	ldrd	r2, r3, [sp, #56]	; 0x38
   14402:	orrs	r3, r2
   14404:	itt	ne
   14406:	ldrdne	r2, r3, [sp, #56]	; 0x38
   1440a:	strdne	r2, r3, [r4, #48]	; 0x30
   1440e:	ldrd	r2, r3, [sp, #80]	; 0x50
   14412:	orrs	r3, r2
   14414:	itt	ne
   14416:	ldrdne	r2, r3, [sp, #80]	; 0x50
   1441a:	strdne	r2, r3, [r4, #56]	; 0x38
   1441e:	orrs.w	r3, r6, r7
   14422:	ldrd	r2, r3, [sp, #72]	; 0x48
   14426:	it	ne
   14428:	strdne	r6, r7, [r4, #32]
   1442c:	orrs	r3, r2
   1442e:	itt	ne
   14430:	ldrdne	r2, r3, [sp, #72]	; 0x48
   14434:	strdne	r2, r3, [r4, #40]	; 0x28
   14438:	ldrd	r2, r3, [sp, #104]	; 0x68
   1443c:	orrs	r3, r2
   1443e:	itt	ne
   14440:	ldrdne	r2, r3, [sp, #104]	; 0x68
   14444:	strdne	r2, r3, [r4, #72]	; 0x48
   14448:	ldrd	r2, r3, [sp, #96]	; 0x60
   1444c:	orrs	r3, r2
   1444e:	beq.n	144a2 <rb_first_postorder@@Base+0x580>
   14450:	ldrd	r2, r3, [sp, #96]	; 0x60
   14454:	strd	r2, r3, [r4, #80]	; 0x50
   14458:	ldr	r3, [sp, #112]	; 0x70
   1445a:	cbz	r3, 1445e <rb_first_postorder@@Base+0x53c>
   1445c:	str	r3, [r4, #88]	; 0x58
   1445e:	ldr	r3, [sp, #116]	; 0x74
   14460:	cbz	r3, 1446c <rb_first_postorder@@Base+0x54a>
   14462:	ldmia	r3, {r0, r1, r2, r3}
   14464:	add.w	ip, r4, #92	; 0x5c
   14468:	stmia.w	ip, {r0, r1, r2, r3}
   1446c:	ldr	r3, [sp, #120]	; 0x78
   1446e:	cbz	r3, 1447a <rb_first_postorder@@Base+0x558>
   14470:	ldmia	r3, {r0, r1, r2, r3}
   14472:	add.w	r7, r4, #108	; 0x6c
   14476:	stmia.w	r7, {r0, r1, r2, r3}
   1447a:	cbz	r5, 14488 <rb_first_postorder@@Base+0x566>
   1447c:	ldmia.w	r5, {r0, r1, r2, r3}
   14480:	add.w	r6, r4, #124	; 0x7c
   14484:	stmia.w	r6, {r0, r1, r2, r3}
   14488:	mov	r2, r9
   1448a:	movs	r1, #0
   1448c:	ldr	r3, [r2, #0]
   1448e:	cbnz	r3, 144b6 <rb_first_postorder@@Base+0x594>
   14490:	strd	r1, r3, [r4]
   14494:	mov	r0, r4
   14496:	str	r3, [r4, #8]
   14498:	mov	r1, r9
   1449a:	str	r4, [r2, #0]
   1449c:	bl	13b2a <rb_insert_color@@Base>
   144a0:	b.n	14386 <rb_first_postorder@@Base+0x464>
   144a2:	ldrd	r2, r3, [r4, #80]	; 0x50
   144a6:	orrs	r3, r2
   144a8:	bne.n	14458 <rb_first_postorder@@Base+0x536>
   144aa:	orrs.w	r3, r6, r7
   144ae:	it	ne
   144b0:	strdne	r6, r7, [r4, #80]	; 0x50
   144b4:	b.n	14458 <rb_first_postorder@@Base+0x536>
   144b6:	movs	r2, #0
   144b8:	mov	r1, r3
   144ba:	mov	r0, r4
   144bc:	bl	13f38 <rb_first_postorder@@Base+0x16>
   144c0:	cmp	r0, #0
   144c2:	bge.n	144cc <rb_first_postorder@@Base+0x5aa>
   144c4:	add.w	r2, r3, #8
   144c8:	mov	r1, r3
   144ca:	b.n	1448c <rb_first_postorder@@Base+0x56a>
   144cc:	beq.n	144d2 <rb_first_postorder@@Base+0x5b0>
   144ce:	adds	r2, r3, #4
   144d0:	b.n	144c8 <rb_first_postorder@@Base+0x5a6>
   144d2:	blx	8740 <__errno_location@plt>
   144d6:	movs	r3, #17
   144d8:	str	r3, [r0, #0]
   144da:	ldr	r0, [pc, #32]	; (144fc <rb_first_postorder@@Base+0x5da>)
   144dc:	ldrd	r2, r3, [sp]
   144e0:	add	r0, pc
   144e2:	bl	1747c <__btrfs_error@@Base>
   144e6:	b.n	143b6 <rb_first_postorder@@Base+0x494>
   144e8:	lsrs	r2, r5, #12
   144ea:	movs	r5, r0
   144ec:	lsls	r4, r6, #8
   144ee:	movs	r0, r0
   144f0:	ldrb	r3, [r5, #6]
   144f2:	movs	r2, r0
   144f4:	ldrsh	r0, [r5, r0]
   144f6:	movs	r2, r0
   144f8:	ldrb	r7, [r5, #1]
   144fa:	movs	r2, r0
   144fc:	strb	r1, [r3, #30]
   144fe:	movs	r2, r0
   14500:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14504:	sub	sp, #20
   14506:	movs	r6, #0
   14508:	mov	r9, r1
   1450a:	mov	r5, r1
   1450c:	mov	r4, r6
   1450e:	mov.w	sl, #47	; 0x2f
   14512:	mov	fp, r6
   14514:	str	r0, [sp, #8]
   14516:	strd	r2, r3, [sp]
   1451a:	ldrd	r2, r3, [r5, #48]	; 0x30
   1451e:	orrs	r3, r2
   14520:	bne.n	14532 <rb_first_postorder@@Base+0x610>
   14522:	mov	r0, r4
   14524:	blx	83f0 <free@plt+0x4>
   14528:	mvn.w	r0, #1
   1452c:	add	sp, #20
   1452e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14532:	ldr.w	r8, [r5, #140]	; 0x8c
   14536:	mov	r0, r8
   14538:	blx	8704 <strlen@plt>
   1453c:	mov	r7, r0
   1453e:	cmp	r4, #0
   14540:	beq.n	145c8 <rb_first_postorder@@Base+0x6a6>
   14542:	adds	r0, #2
   14544:	add	r0, r6
   14546:	blx	8634 <malloc@plt+0x4>
   1454a:	mov	r8, r0
   1454c:	cbnz	r0, 1455c <rb_first_postorder@@Base+0x63a>
   1454e:	ldr	r0, [pc, #140]	; (145dc <rb_first_postorder@@Base+0x6ba>)
   14550:	add	r0, pc
   14552:	blx	8524 <perror@plt>
   14556:	movs	r0, #1
   14558:	blx	86f8 <exit@plt>
   1455c:	adds	r3, r7, #1
   1455e:	mov	r2, r6
   14560:	add	r0, r3
   14562:	mov	r1, r4
   14564:	str	r3, [sp, #12]
   14566:	blx	843c <memcpy@plt+0x4>
   1456a:	mov	r2, r7
   1456c:	strb.w	sl, [r8, r7]
   14570:	mov	r0, r8
   14572:	ldr.w	r1, [r5, #140]	; 0x8c
   14576:	blx	843c <memcpy@plt+0x4>
   1457a:	add.w	r0, r8, r6
   1457e:	add	r7, r0
   14580:	mov	r0, r4
   14582:	mov	r4, r8
   14584:	strb.w	fp, [r7, #1]
   14588:	blx	83f0 <free@plt+0x4>
   1458c:	ldr	r3, [sp, #12]
   1458e:	add	r6, r3
   14590:	ldrd	r2, r3, [r9, #64]	; 0x40
   14594:	ldrd	r0, r1, [sp]
   14598:	orrs	r3, r2
   1459a:	itt	eq
   1459c:	ldrdeq	r2, r3, [r5, #48]	; 0x30
   145a0:	strdeq	r2, r3, [r9, #64]	; 0x40
   145a4:	ldrd	r2, r3, [r5, #48]	; 0x30
   145a8:	cmp	r3, r1
   145aa:	it	eq
   145ac:	cmpeq	r2, r0
   145ae:	beq.n	145d4 <rb_first_postorder@@Base+0x6b2>
   145b0:	cmp	r3, #0
   145b2:	it	eq
   145b4:	cmpeq	r2, #5
   145b6:	beq.n	145d4 <rb_first_postorder@@Base+0x6b2>
   145b8:	ldr	r1, [sp, #8]
   145ba:	ldr	r0, [r1, #0]
   145bc:	bl	141e6 <rb_first_postorder@@Base+0x2c4>
   145c0:	mov	r5, r0
   145c2:	cmp	r0, #0
   145c4:	bne.n	1451a <rb_first_postorder@@Base+0x5f8>
   145c6:	b.n	14522 <rb_first_postorder@@Base+0x600>
   145c8:	mov	r0, r8
   145ca:	mov	r6, r7
   145cc:	blx	84b4 <strdup@plt+0x4>
   145d0:	mov	r4, r0
   145d2:	b.n	14590 <rb_first_postorder@@Base+0x66e>
   145d4:	movs	r0, #0
   145d6:	str.w	r4, [r9, #148]	; 0x94
   145da:	b.n	1452c <rb_first_postorder@@Base+0x60a>
   145dc:	strb	r5, [r2, #29]
   145de:	movs	r2, r0
   145e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   145e4:	mov	r4, r1
   145e6:	ldr	r1, [pc, #260]	; (146ec <rb_first_postorder@@Base+0x7ca>)
   145e8:	sub.w	sp, sp, #4096	; 0x1000
   145ec:	ldr	r2, [pc, #256]	; (146f0 <rb_first_postorder@@Base+0x7ce>)
   145ee:	sub	sp, #16
   145f0:	add	r1, pc
   145f2:	ldr.w	r6, [r4, #140]	; 0x8c
   145f6:	add.w	r3, sp, #4096	; 0x1000
   145fa:	mov	r5, r0
   145fc:	ldr	r2, [r1, r2]
   145fe:	adds	r3, #12
   14600:	ldr	r2, [r2, #0]
   14602:	str	r2, [r3, #0]
   14604:	mov.w	r2, #0
   14608:	cmp	r6, #0
   1460a:	bne.n	146c6 <rb_first_postorder@@Base+0x7a4>
   1460c:	ldrd	r8, r9, [r4, #48]	; 0x30
   14610:	orrs.w	r3, r8, r9
   14614:	beq.n	14654 <rb_first_postorder@@Base+0x732>
   14616:	add	r7, sp, #8
   14618:	mov.w	r2, #4096	; 0x1000
   1461c:	mov	r1, r6
   1461e:	add.w	sl, sp, #16
   14622:	mov	r0, r7
   14624:	blx	8780 <memset@plt+0x4>
   14628:	ldrd	r2, r3, [r4, #56]	; 0x38
   1462c:	mov	r0, r5
   1462e:	ldr	r1, [pc, #184]	; (146e8 <rb_first_postorder@@Base+0x7c6>)
   14630:	strd	r8, r9, [sl, #-8]
   14634:	strd	r2, r3, [r7, #8]
   14638:	mov	r2, r7
   1463a:	blx	8578 <ioctl@plt>
   1463e:	subs	r5, r0, #0
   14640:	bge.n	14680 <rb_first_postorder@@Base+0x75e>
   14642:	blx	8740 <__errno_location@plt>
   14646:	ldr	r3, [r0, #0]
   14648:	cmp	r3, #2
   1464a:	bne.n	1465a <rb_first_postorder@@Base+0x738>
   1464c:	movs	r2, #0
   1464e:	movs	r3, #0
   14650:	strd	r2, r3, [r4, #48]	; 0x30
   14654:	mvn.w	r5, #1
   14658:	b.n	14666 <rb_first_postorder@@Base+0x744>
   1465a:	ldr	r0, [pc, #152]	; (146f4 <rb_first_postorder@@Base+0x7d2>)
   1465c:	ldrd	r2, r3, [r4, #48]	; 0x30
   14660:	add	r0, pc
   14662:	bl	1747c <__btrfs_error@@Base>
   14666:	ldr	r1, [pc, #144]	; (146f8 <rb_first_postorder@@Base+0x7d6>)
   14668:	add.w	r3, sp, #4096	; 0x1000
   1466c:	ldr	r2, [pc, #128]	; (146f0 <rb_first_postorder@@Base+0x7ce>)
   1466e:	adds	r3, #12
   14670:	add	r1, pc
   14672:	ldr	r2, [r1, r2]
   14674:	ldr	r1, [r2, #0]
   14676:	ldr	r2, [r3, #0]
   14678:	eors	r1, r2
   1467a:	beq.n	146dc <rb_first_postorder@@Base+0x7ba>
   1467c:	blx	84cc <__stack_chk_fail@plt>
   14680:	ldr.w	r8, [r4, #144]	; 0x90
   14684:	ldrb	r3, [r7, #16]
   14686:	mov	r0, r8
   14688:	cbz	r3, 146ca <rb_first_postorder@@Base+0x7a8>
   1468a:	blx	8704 <strlen@plt>
   1468e:	add	r1, sp, #24
   14690:	str	r1, [sp, #4]
   14692:	mov	r5, r0
   14694:	mov	r0, r1
   14696:	blx	8704 <strlen@plt>
   1469a:	add	r0, r5
   1469c:	adds	r0, #1
   1469e:	blx	8634 <malloc@plt+0x4>
   146a2:	ldr	r1, [sp, #4]
   146a4:	mov	r5, r0
   146a6:	str.w	r0, [r4, #140]	; 0x8c
   146aa:	cbnz	r0, 146ba <rb_first_postorder@@Base+0x798>
   146ac:	ldr	r0, [pc, #76]	; (146fc <rb_first_postorder@@Base+0x7da>)
   146ae:	add	r0, pc
   146b0:	blx	8524 <perror@plt>
   146b4:	movs	r0, #1
   146b6:	blx	86f8 <exit@plt>
   146ba:	blx	85b4 <strcpy@plt>
   146be:	mov	r1, r8
   146c0:	mov	r0, r5
   146c2:	blx	856c <strcat@plt+0x4>
   146c6:	movs	r5, #0
   146c8:	b.n	14666 <rb_first_postorder@@Base+0x744>
   146ca:	blx	84b4 <strdup@plt+0x4>
   146ce:	str.w	r0, [r4, #140]	; 0x8c
   146d2:	cmp	r0, #0
   146d4:	bne.n	146c6 <rb_first_postorder@@Base+0x7a4>
   146d6:	ldr	r0, [pc, #40]	; (14700 <rb_first_postorder@@Base+0x7de>)
   146d8:	add	r0, pc
   146da:	b.n	146b0 <rb_first_postorder@@Base+0x78e>
   146dc:	mov	r0, r5
   146de:	add.w	sp, sp, #4096	; 0x1000
   146e2:	add	sp, #16
   146e4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   146e8:	str	r4, [sp, #72]	; 0x48
   146ea:	beq.n	146ee <rb_first_postorder@@Base+0x7cc>
   146ec:	lsls	r0, r3, #30
   146ee:	movs	r5, r0
   146f0:	lsls	r4, r4, #8
   146f2:	movs	r0, r0
   146f4:	strb	r3, [r2, #25]
   146f6:	movs	r2, r0
   146f8:	lsls	r0, r3, #28
   146fa:	movs	r5, r0
   146fc:	strb	r7, [r6, #23]
   146fe:	movs	r2, r0
   14700:	strb	r3, [r0, #24]
   14702:	movs	r2, r0
   14704:	push	{r3, r4, r5, lr}
   14706:	mov	r5, r0
   14708:	mov	r0, r1
   1470a:	bl	13e46 <rb_first@@Base>
   1470e:	mov	r4, r0
   14710:	cbnz	r0, 14714 <rb_first_postorder@@Base+0x7f2>
   14712:	pop	{r3, r4, r5, pc}
   14714:	mov	r1, r4
   14716:	mov	r0, r5
   14718:	bl	145e0 <rb_first_postorder@@Base+0x6be>
   1471c:	cbz	r0, 14722 <rb_first_postorder@@Base+0x800>
   1471e:	adds	r3, r0, #2
   14720:	bne.n	14712 <rb_first_postorder@@Base+0x7f0>
   14722:	mov	r0, r4
   14724:	bl	13e66 <rb_next@@Base>
   14728:	b.n	1470e <rb_first_postorder@@Base+0x7ec>
   1472a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1472e:	mov	r6, r1
   14730:	vpush	{d8}
   14734:	ldr	r1, [pc, #748]	; (14a24 <rb_first_postorder@@Base+0xb02>)
   14736:	ldr	r2, [pc, #752]	; (14a28 <rb_first_postorder@@Base+0xb06>)
   14738:	add	r1, pc
   1473a:	vmov	s16, r0
   1473e:	sub.w	sp, sp, #4288	; 0x10c0
   14742:	sub	sp, #28
   14744:	ldr	r2, [r1, r2]
   14746:	add	r4, sp, #160	; 0xa0
   14748:	add.w	r3, sp, #4288	; 0x10c0
   1474c:	add	r5, sp, #184	; 0xb8
   1474e:	ldr	r2, [r2, #0]
   14750:	str	r2, [r3, #20]
   14752:	mov.w	r2, #0
   14756:	movs	r1, #0
   14758:	mov.w	r2, #4096	; 0x1000
   1475c:	mov	r0, r4
   1475e:	str	r1, [r6, #0]
   14760:	adds	r3, #20
   14762:	blx	8780 <memset@plt+0x4>
   14766:	movs	r2, #1
   14768:	movs	r3, #0
   1476a:	strd	r2, r3, [r5, #-24]
   1476e:	movs	r2, #132	; 0x84
   14770:	movs	r3, #144	; 0x90
   14772:	strd	r2, r3, [r4, #56]	; 0x38
   14776:	movs	r2, #5
   14778:	movs	r3, #0
   1477a:	strd	r2, r3, [r4, #8]
   1477e:	mvn.w	r2, #255	; 0xff
   14782:	mov.w	r3, #4294967295	; 0xffffffff
   14786:	strd	r2, r3, [r4, #16]
   1478a:	mov.w	r2, #4294967295	; 0xffffffff
   1478e:	mov.w	r3, #4294967295	; 0xffffffff
   14792:	strd	r2, r3, [r4, #32]
   14796:	strd	r2, r3, [r4, #48]	; 0x30
   1479a:	vmov	r0, s16
   1479e:	mov	r2, r4
   147a0:	ldr	r1, [pc, #636]	; (14a20 <rb_first_postorder@@Base+0xafe>)
   147a2:	mov.w	r3, #4096	; 0x1000
   147a6:	str	r3, [r4, #64]	; 0x40
   147a8:	blx	8578 <ioctl@plt>
   147ac:	cmp	r0, #0
   147ae:	blt.n	147ba <rb_first_postorder@@Base+0x898>
   147b0:	ldr	r3, [r4, #64]	; 0x40
   147b2:	cmp	r3, #0
   147b4:	bne.w	14a02 <rb_first_postorder@@Base+0xae0>
   147b8:	movs	r0, #0
   147ba:	ldr	r1, [pc, #624]	; (14a2c <rb_first_postorder@@Base+0xb0a>)
   147bc:	add.w	r3, sp, #4288	; 0x10c0
   147c0:	ldr	r2, [pc, #612]	; (14a28 <rb_first_postorder@@Base+0xb06>)
   147c2:	adds	r3, #20
   147c4:	add	r1, pc
   147c6:	ldr	r2, [r1, r2]
   147c8:	ldr	r1, [r2, #0]
   147ca:	ldr	r2, [r3, #0]
   147cc:	eors	r1, r2
   147ce:	beq.w	14a10 <rb_first_postorder@@Base+0xaee>
   147d2:	blx	84cc <__stack_chk_fail@plt>
   147d6:	ldr	r3, [sp, #104]	; 0x68
   147d8:	add	r5, sp, #128	; 0x80
   147da:	adds	r3, #80	; 0x50
   147dc:	mov	lr, r5
   147de:	add	r3, r2
   147e0:	add.w	r8, r3, #32
   147e4:	ldr	r0, [r3, #0]
   147e6:	adds	r3, #8
   147e8:	ldr.w	r1, [r3, #-4]
   147ec:	cmp	r3, r8
   147ee:	mov	ip, lr
   147f0:	stmia.w	ip!, {r0, r1}
   147f4:	mov	lr, ip
   147f6:	bne.n	147e4 <rb_first_postorder@@Base+0x8c2>
   147f8:	ldr.w	r8, [r5, #24]
   147fc:	add.w	r9, r2, #32
   14800:	cmp.w	r8, #144	; 0x90
   14804:	bne.n	148be <rb_first_postorder@@Base+0x99c>
   14806:	ldr	r3, [sp, #124]	; 0x7c
   14808:	movs	r0, #0
   1480a:	movs	r1, #0
   1480c:	movs	r2, #0
   1480e:	add	r3, r9
   14810:	strd	r2, r2, [sp, #64]	; 0x40
   14814:	strd	r2, r2, [sp, #56]	; 0x38
   14818:	strd	r0, r1, [sp, #48]	; 0x30
   1481c:	strd	r0, r1, [sp, #40]	; 0x28
   14820:	ldrh	r2, [r3, #16]
   14822:	str	r2, [sp, #36]	; 0x24
   14824:	add.w	r2, r3, #18
   14828:	str	r2, [sp, #32]
   1482a:	ldr	r2, [r3, #0]
   1482c:	ldr	r3, [r3, #4]
   1482e:	strd	r0, r1, [sp, #16]
   14832:	strd	r0, r1, [sp, #8]
   14836:	strd	r2, r3, [sp, #24]
   1483a:	ldrd	r2, r3, [r5, #16]
   1483e:	strd	r2, r3, [sp]
   14842:	ldrd	r2, r3, [r5, #8]
   14846:	mov	r0, r6
   14848:	bl	14244 <rb_first_postorder@@Base+0x322>
   1484c:	ldrd	r0, r1, [r5, #8]
   14850:	adds	r7, #1
   14852:	ldr	r2, [r5, #28]
   14854:	str.w	r8, [r4, #56]	; 0x38
   14858:	strd	r0, r1, [r4, #8]
   1485c:	add	r2, r9
   1485e:	ldrd	r0, r1, [r5, #16]
   14862:	strd	r0, r1, [r4, #24]
   14866:	ldr	r3, [r4, #64]	; 0x40
   14868:	cmp	r7, r3
   1486a:	bcc.n	147d6 <rb_first_postorder@@Base+0x8b4>
   1486c:	ldrd	r3, r2, [r4, #24]
   14870:	adds	r3, #1
   14872:	str	r3, [sp, #72]	; 0x48
   14874:	adc.w	r3, r2, #0
   14878:	str	r3, [sp, #76]	; 0x4c
   1487a:	ldrd	r2, r3, [sp, #72]	; 0x48
   1487e:	strd	r2, r3, [r4, #24]
   14882:	orrs	r3, r2
   14884:	bne.n	1479a <rb_first_postorder@@Base+0x878>
   14886:	ldr	r3, [r4, #56]	; 0x38
   14888:	adds	r3, #1
   1488a:	str	r3, [r4, #56]	; 0x38
   1488c:	cmp	r3, #144	; 0x90
   1488e:	bls.n	1479a <rb_first_postorder@@Base+0x878>
   14890:	movs	r3, #132	; 0x84
   14892:	str	r3, [r4, #56]	; 0x38
   14894:	ldrd	r3, r2, [r4, #8]
   14898:	adds	r3, #1
   1489a:	str	r3, [sp, #80]	; 0x50
   1489c:	adc.w	r3, r2, #0
   148a0:	str	r3, [sp, #84]	; 0x54
   148a2:	ldrd	r2, r3, [sp, #80]	; 0x50
   148a6:	ldrd	r0, r1, [sp, #80]	; 0x50
   148aa:	strd	r2, r3, [r4, #8]
   148ae:	ldrd	r2, r3, [r4, #16]
   148b2:	cmp	r3, r1
   148b4:	it	eq
   148b6:	cmpeq	r2, r0
   148b8:	bcs.w	1479a <rb_first_postorder@@Base+0x878>
   148bc:	b.n	147b8 <rb_first_postorder@@Base+0x896>
   148be:	cmp.w	r8, #132	; 0x84
   148c2:	bne.n	1484c <rb_first_postorder@@Base+0x92a>
   148c4:	ldrd	r2, r3, [r5, #8]
   148c8:	cmp	r3, #0
   148ca:	it	eq
   148cc:	cmpeq.w	r2, #256	; 0x100
   148d0:	strd	r2, r3, [sp, #88]	; 0x58
   148d4:	bcs.n	148de <rb_first_postorder@@Base+0x9bc>
   148d6:	cmp	r3, #0
   148d8:	it	eq
   148da:	cmpeq	r2, #5
   148dc:	bne.n	1484c <rb_first_postorder@@Base+0x92a>
   148de:	add	r3, sp, #264	; 0x108
   148e0:	add	r3, r9
   148e2:	ldr.w	r2, [r3, #160]	; 0xa0
   148e6:	str	r2, [sp, #116]	; 0x74
   148e8:	ldr.w	r2, [r3, #164]	; 0xa4
   148ec:	str	r2, [sp, #120]	; 0x78
   148ee:	ldr.w	r2, [r3, #208]	; 0xd0
   148f2:	str	r2, [sp, #108]	; 0x6c
   148f4:	ldr.w	r2, [r3, #212]	; 0xd4
   148f8:	str	r2, [sp, #112]	; 0x70
   148fa:	ldr	r2, [r5, #28]
   148fc:	cmp	r2, #239	; 0xef
   148fe:	bls.n	149ce <rb_first_postorder@@Base+0xaac>
   14900:	ldr.w	r2, [r3, #303]	; 0x12f
   14904:	add.w	sl, sp, #4256	; 0x10a0
   14908:	ldr.w	ip, [r3, #339]	; 0x153
   1490c:	add.w	sl, sl, #4
   14910:	addw	fp, r3, #263	; 0x107
   14914:	str	r2, [sp, #96]	; 0x60
   14916:	ldr.w	r2, [r3, #307]	; 0x133
   1491a:	str	r2, [sp, #100]	; 0x64
   1491c:	add.w	r2, r3, #247	; 0xf7
   14920:	ldr	r0, [r2, #0]
   14922:	adds	r2, #8
   14924:	ldr.w	r1, [r2, #-4]
   14928:	cmp	r2, fp
   1492a:	mov	lr, sl
   1492c:	stmia.w	lr!, {r0, r1}
   14930:	mov	sl, lr
   14932:	bne.n	14920 <rb_first_postorder@@Base+0x9fe>
   14934:	add.w	sl, sp, #4256	; 0x10a0
   14938:	addw	r2, r3, #263	; 0x107
   1493c:	add.w	sl, sl, #20
   14940:	addw	fp, r3, #279	; 0x117
   14944:	ldr	r0, [r2, #0]
   14946:	adds	r2, #8
   14948:	ldr.w	r1, [r2, #-4]
   1494c:	cmp	r2, fp
   1494e:	mov	lr, sl
   14950:	stmia.w	lr!, {r0, r1}
   14954:	mov	sl, lr
   14956:	bne.n	14944 <rb_first_postorder@@Base+0xa22>
   14958:	add.w	lr, sp, #4288	; 0x10c0
   1495c:	addw	r2, r3, #279	; 0x117
   14960:	add.w	lr, lr, #4
   14964:	addw	r3, r3, #295	; 0x127
   14968:	ldr	r0, [r2, #0]
   1496a:	adds	r2, #8
   1496c:	ldr.w	r1, [r2, #-4]
   14970:	cmp	r2, r3
   14972:	mov	sl, lr
   14974:	stmia.w	sl!, {r0, r1}
   14978:	mov	lr, sl
   1497a:	bne.n	14968 <rb_first_postorder@@Base+0xa46>
   1497c:	add.w	r3, sp, #4288	; 0x10c0
   14980:	movs	r0, #0
   14982:	adds	r3, #4
   14984:	str	r3, [sp, #68]	; 0x44
   14986:	add.w	r3, sp, #4256	; 0x10a0
   1498a:	movs	r1, #0
   1498c:	adds	r3, #20
   1498e:	str	r3, [sp, #64]	; 0x40
   14990:	add.w	r3, sp, #4256	; 0x10a0
   14994:	strd	r0, r1, [sp, #24]
   14998:	adds	r3, #4
   1499a:	strd	ip, r3, [sp, #56]	; 0x38
   1499e:	ldr	r3, [sp, #116]	; 0x74
   149a0:	str	r3, [sp, #48]	; 0x30
   149a2:	ldr	r3, [sp, #120]	; 0x78
   149a4:	str	r3, [sp, #52]	; 0x34
   149a6:	ldr	r3, [sp, #96]	; 0x60
   149a8:	str	r3, [sp, #40]	; 0x28
   149aa:	ldr	r3, [sp, #100]	; 0x64
   149ac:	str	r3, [sp, #44]	; 0x2c
   149ae:	movs	r3, #0
   149b0:	strd	r3, r3, [sp, #32]
   149b4:	ldr	r3, [sp, #108]	; 0x6c
   149b6:	str	r3, [sp, #16]
   149b8:	ldr	r3, [sp, #112]	; 0x70
   149ba:	str	r3, [sp, #20]
   149bc:	ldrd	r2, r3, [r5, #16]
   149c0:	strd	r0, r1, [sp]
   149c4:	strd	r2, r3, [sp, #8]
   149c8:	ldrd	r2, r3, [sp, #88]	; 0x58
   149cc:	b.n	14846 <rb_first_postorder@@Base+0x924>
   149ce:	add.w	r0, sp, #4256	; 0x10a0
   149d2:	movs	r2, #16
   149d4:	movs	r1, #0
   149d6:	adds	r0, #4
   149d8:	blx	8780 <memset@plt+0x4>
   149dc:	add.w	r0, sp, #4256	; 0x10a0
   149e0:	movs	r2, #16
   149e2:	movs	r1, #0
   149e4:	adds	r0, #20
   149e6:	blx	8780 <memset@plt+0x4>
   149ea:	add.w	r0, sp, #4288	; 0x10c0
   149ee:	adds	r0, #4
   149f0:	movs	r2, #16
   149f2:	movs	r1, #0
   149f4:	blx	8780 <memset@plt+0x4>
   149f8:	mov.w	ip, #0
   149fc:	strd	ip, ip, [sp, #96]	; 0x60
   14a00:	b.n	1497c <rb_first_postorder@@Base+0xa5a>
   14a02:	movs	r7, #0
   14a04:	add	r3, sp, #184	; 0xb8
   14a06:	mov	r2, r7
   14a08:	str	r3, [sp, #104]	; 0x68
   14a0a:	add	r3, sp, #264	; 0x108
   14a0c:	str	r3, [sp, #124]	; 0x7c
   14a0e:	b.n	14866 <rb_first_postorder@@Base+0x944>
   14a10:	add.w	sp, sp, #4288	; 0x10c0
   14a14:	add	sp, #28
   14a16:	vpop	{d8}
   14a1a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14a1e:	nop
   14a20:	str	r4, [sp, #68]	; 0x44
   14a22:	beq.n	14a26 <rb_first_postorder@@Base+0xb04>
   14a24:	lsls	r0, r2, #25
   14a26:	movs	r5, r0
   14a28:	lsls	r4, r4, #8
   14a2a:	movs	r0, r0
   14a2c:	lsls	r4, r0, #23
   14a2e:	movs	r5, r0
   14a30:	push	{r4, r5, r6, lr}
   14a32:	mov	r5, r0
   14a34:	mov	r6, r1
   14a36:	bl	1472a <rb_first_postorder@@Base+0x808>
   14a3a:	mov	r4, r0
   14a3c:	cbnz	r0, 14a48 <rb_first_postorder@@Base+0xb26>
   14a3e:	mov	r1, r6
   14a40:	mov	r0, r5
   14a42:	ldmia.w	sp!, {r4, r5, r6, lr}
   14a46:	b.n	14704 <rb_first_postorder@@Base+0x7e2>
   14a48:	ldr	r0, [pc, #8]	; (14a54 <rb_first_postorder@@Base+0xb32>)
   14a4a:	add	r0, pc
   14a4c:	bl	1747c <__btrfs_error@@Base>
   14a50:	mov	r0, r4
   14a52:	pop	{r4, r5, r6, pc}
   14a54:	strb	r7, [r3, #10]
   14a56:	movs	r2, r0
   14a58:	push	{r0, r1, r2, r3, r4, lr}
   14a5a:	ldr	r3, [pc, #40]	; (14a84 <rb_first_postorder@@Base+0xb62>)
   14a5c:	ldr	r4, [pc, #40]	; (14a88 <rb_first_postorder@@Base+0xb66>)
   14a5e:	add	r3, pc
   14a60:	ldr	r4, [r3, r4]
   14a62:	movs	r3, #0
   14a64:	strd	r2, r1, [sp]
   14a68:	movs	r1, #1
   14a6a:	strd	r0, r3, [sp, #8]
   14a6e:	ldr	r2, [pc, #28]	; (14a8c <rb_first_postorder@@Base+0xb6a>)
   14a70:	ldr	r3, [pc, #28]	; (14a90 <rb_first_postorder@@Base+0xb6e>)
   14a72:	add	r2, pc
   14a74:	ldr	r0, [r4, #0]
   14a76:	add	r3, pc
   14a78:	blx	881c <__fprintf_chk@plt+0x4>
   14a7c:	bl	14058 <rb_first_postorder@@Base+0x136>
   14a80:	blx	8948 <abort@plt>
   14a84:	lsls	r2, r5, #12
   14a86:	movs	r5, r0
   14a88:	lsls	r4, r6, #8
   14a8a:	movs	r0, r0
   14a8c:	ldrsb	r4, [r5, r6]
   14a8e:	movs	r2, r0
   14a90:	strb	r0, [r2, #10]
   14a92:	movs	r2, r0
   14a94:	push	{r4, lr}
   14a96:	subs	r1, #1
   14a98:	ldr	r4, [pc, #288]	; (14bbc <rb_first_postorder@@Base+0xc9a>)
   14a9a:	sub	sp, #328	; 0x148
   14a9c:	ldr	r2, [pc, #288]	; (14bc0 <rb_first_postorder@@Base+0xc9e>)
   14a9e:	add	r4, pc
   14aa0:	ldr	r3, [pc, #288]	; (14bc4 <rb_first_postorder@@Base+0xca2>)
   14aa2:	ldr	r2, [r4, r2]
   14aa4:	add	r3, pc
   14aa6:	ldr	r2, [r2, #0]
   14aa8:	str	r2, [sp, #324]	; 0x144
   14aaa:	mov.w	r2, #0
   14aae:	cmp	r1, #8
   14ab0:	bhi.n	14ac0 <rb_first_postorder@@Base+0xb9e>
   14ab2:	tbb	[pc, r1]
   14ab6:	subs	r6, r2, r4
   14ab8:	movs	r5, #32
   14aba:	ldrb	r2, [r5, r0]
   14abc:	ldr	r0, [pc, #380]	; (14c3c <btrfs_list_setup_print_column@@Base+0x30>)
   14abe:	lsls	r2, r4, #1
   14ac0:	ldr	r1, [pc, #260]	; (14bc8 <rb_first_postorder@@Base+0xca6>)
   14ac2:	ldrd	r2, r3, [r0, #24]
   14ac6:	add	r1, pc
   14ac8:	movs	r0, #1
   14aca:	blx	87f4 <__printf_chk@plt+0x4>
   14ace:	ldr	r2, [pc, #252]	; (14bcc <rb_first_postorder@@Base+0xcaa>)
   14ad0:	ldr	r3, [pc, #236]	; (14bc0 <rb_first_postorder@@Base+0xc9e>)
   14ad2:	add	r2, pc
   14ad4:	ldr	r3, [r2, r3]
   14ad6:	ldr	r2, [r3, #0]
   14ad8:	ldr	r3, [sp, #324]	; 0x144
   14ada:	eors	r2, r3
   14adc:	beq.n	14bb6 <rb_first_postorder@@Base+0xc94>
   14ade:	blx	84cc <__stack_chk_fail@plt>
   14ae2:	ldr	r1, [pc, #236]	; (14bd0 <rb_first_postorder@@Base+0xcae>)
   14ae4:	ldrd	r2, r3, [r0, #72]	; 0x48
   14ae8:	add	r1, pc
   14aea:	b.n	14ac8 <rb_first_postorder@@Base+0xba6>
   14aec:	ldr	r1, [pc, #228]	; (14bd4 <rb_first_postorder@@Base+0xcb2>)
   14aee:	ldrd	r2, r3, [r0, #80]	; 0x50
   14af2:	add	r1, pc
   14af4:	b.n	14ac8 <rb_first_postorder@@Base+0xba6>
   14af6:	ldr	r1, [pc, #224]	; (14bd8 <rb_first_postorder@@Base+0xcb6>)
   14af8:	ldrd	r2, r3, [r0, #48]	; 0x30
   14afc:	add	r1, pc
   14afe:	b.n	14ac8 <rb_first_postorder@@Base+0xba6>
   14b00:	ldr	r1, [pc, #216]	; (14bdc <rb_first_postorder@@Base+0xcba>)
   14b02:	ldrd	r2, r3, [r0, #64]	; 0x40
   14b06:	add	r1, pc
   14b08:	b.n	14ac8 <rb_first_postorder@@Base+0xba6>
   14b0a:	ldr	r3, [r0, #88]	; 0x58
   14b0c:	add	r4, sp, #68	; 0x44
   14b0e:	cbz	r3, 14b3a <rb_first_postorder@@Base+0xc18>
   14b10:	add	r3, sp, #24
   14b12:	adds	r0, #88	; 0x58
   14b14:	str	r3, [sp, #20]
   14b16:	mov	r1, r3
   14b18:	blx	84f4 <localtime_r@plt>
   14b1c:	ldr	r2, [pc, #192]	; (14be0 <rb_first_postorder@@Base+0xcbe>)
   14b1e:	ldr	r3, [sp, #20]
   14b20:	mov.w	r1, #256	; 0x100
   14b24:	add	r2, pc
   14b26:	mov	r0, r4
   14b28:	blx	8668 <strftime@plt>
   14b2c:	ldr	r1, [pc, #180]	; (14be4 <rb_first_postorder@@Base+0xcc2>)
   14b2e:	mov	r2, r4
   14b30:	add	r1, pc
   14b32:	movs	r0, #1
   14b34:	blx	87f4 <__printf_chk@plt+0x4>
   14b38:	b.n	14ace <rb_first_postorder@@Base+0xbac>
   14b3a:	ldr	r1, [pc, #172]	; (14be8 <rb_first_postorder@@Base+0xcc6>)
   14b3c:	mov	r0, r4
   14b3e:	add	r1, pc
   14b40:	blx	85b4 <strcpy@plt>
   14b44:	b.n	14b2c <rb_first_postorder@@Base+0xc0a>
   14b46:	add.w	r4, r0, #92	; 0x5c
   14b4a:	mov	r0, r4
   14b4c:	blx	8770 <uuid_is_null@plt>
   14b50:	cbz	r0, 14b64 <rb_first_postorder@@Base+0xc42>
   14b52:	ldr	r1, [pc, #152]	; (14bec <rb_first_postorder@@Base+0xcca>)
   14b54:	add	r0, sp, #68	; 0x44
   14b56:	add	r1, pc
   14b58:	blx	85b4 <strcpy@plt>
   14b5c:	ldr	r1, [pc, #144]	; (14bf0 <rb_first_postorder@@Base+0xcce>)
   14b5e:	add	r2, sp, #68	; 0x44
   14b60:	add	r1, pc
   14b62:	b.n	14b32 <rb_first_postorder@@Base+0xc10>
   14b64:	add	r1, sp, #68	; 0x44
   14b66:	mov	r0, r4
   14b68:	blx	8394 <uuid_unparse@plt>
   14b6c:	b.n	14b5c <rb_first_postorder@@Base+0xc3a>
   14b6e:	add.w	r4, r0, #108	; 0x6c
   14b72:	b.n	14b4a <rb_first_postorder@@Base+0xc28>
   14b74:	add.w	r4, r0, #124	; 0x7c
   14b78:	b.n	14b4a <rb_first_postorder@@Base+0xc28>
   14b7a:	ldr.w	r2, [r0, #148]	; 0x94
   14b7e:	cbnz	r2, 14bb0 <rb_first_postorder@@Base+0xc8e>
   14b80:	ldr	r2, [pc, #112]	; (14bf4 <rb_first_postorder@@Base+0xcd2>)
   14b82:	movs	r1, #1
   14b84:	ldr	r0, [r3, r2]
   14b86:	ldr	r3, [pc, #112]	; (14bf8 <rb_first_postorder@@Base+0xcd6>)
   14b88:	ldr	r2, [pc, #112]	; (14bfc <rb_first_postorder@@Base+0xcda>)
   14b8a:	add	r3, pc
   14b8c:	str	r3, [sp, #8]
   14b8e:	ldr	r3, [pc, #112]	; (14c00 <rb_first_postorder@@Base+0xcde>)
   14b90:	add	r2, pc
   14b92:	str	r1, [sp, #12]
   14b94:	add	r3, pc
   14b96:	str	r3, [sp, #4]
   14b98:	movw	r3, #1380	; 0x564
   14b9c:	str	r3, [sp, #0]
   14b9e:	ldr	r3, [pc, #100]	; (14c04 <rb_first_postorder@@Base+0xce2>)
   14ba0:	ldr	r0, [r0, #0]
   14ba2:	add	r3, pc
   14ba4:	blx	881c <__fprintf_chk@plt+0x4>
   14ba8:	bl	14058 <rb_first_postorder@@Base+0x136>
   14bac:	blx	8948 <abort@plt>
   14bb0:	ldr	r1, [pc, #84]	; (14c08 <rb_first_postorder@@Base+0xce6>)
   14bb2:	add	r1, pc
   14bb4:	b.n	14b32 <rb_first_postorder@@Base+0xc10>
   14bb6:	add	sp, #328	; 0x148
   14bb8:	pop	{r4, pc}
   14bba:	nop
   14bbc:	lsls	r2, r5, #11
   14bbe:	movs	r5, r0
   14bc0:	lsls	r4, r4, #8
   14bc2:	movs	r0, r0
   14bc4:	lsls	r4, r4, #11
   14bc6:	movs	r5, r0
   14bc8:			; <UNDEFINED> instruction: 0xb601
   14bca:	movs	r2, r0
   14bcc:	lsls	r6, r6, #10
   14bce:	movs	r5, r0
   14bd0:	push	{r0, r1, r2, r3, r4, r6, r7, lr}
   14bd2:	movs	r2, r0
   14bd4:	push	{r0, r2, r4, r6, r7, lr}
   14bd6:	movs	r2, r0
   14bd8:	push	{r0, r1, r3, r6, r7, lr}
   14bda:	movs	r2, r0
   14bdc:	push	{r0, r6, r7, lr}
   14bde:	movs	r2, r0
   14be0:	strb	r7, [r5, #7]
   14be2:	movs	r2, r0
   14be4:			; <UNDEFINED> instruction: 0xb87e
   14be6:	movs	r2, r0
   14be8:	ldr	r2, [r6, r4]
   14bea:	movs	r2, r0
   14bec:	ldr	r2, [r3, r4]
   14bee:	movs	r2, r0
   14bf0:	strb	r7, [r7, #6]
   14bf2:	movs	r2, r0
   14bf4:	lsls	r4, r6, #8
   14bf6:	movs	r0, r0
   14bf8:	strb	r3, [r3, #6]
   14bfa:	movs	r2, r0
   14bfc:	ldr	r7, [pc, #4]	; (14c04 <rb_first_postorder@@Base+0xce2>)
   14bfe:	movs	r2, r0
   14c00:	strb	r3, [r5, #14]
   14c02:	movs	r2, r0
   14c04:	strb	r4, [r4, #5]
   14c06:	movs	r2, r0
   14c08:			; <UNDEFINED> instruction: 0xb7fc
   14c0a:	movs	r2, r0

00014c0c <btrfs_list_setup_print_column@@Base>:
   14c0c:	cmp	r0, #10
   14c0e:	push	{r3, lr}
   14c10:	bls.n	14c22 <btrfs_list_setup_print_column@@Base+0x16>
   14c12:	ldr	r1, [pc, #56]	; (14c4c <btrfs_list_setup_print_column@@Base+0x40>)
   14c14:	movs	r2, #126	; 0x7e
   14c16:	ldr	r0, [pc, #56]	; (14c50 <btrfs_list_setup_print_column@@Base+0x44>)
   14c18:	add	r1, pc
   14c1a:	adds	r1, #23
   14c1c:	add	r0, pc
   14c1e:	bl	14a58 <rb_first_postorder@@Base+0xb36>
   14c22:	beq.n	14c34 <btrfs_list_setup_print_column@@Base+0x28>
   14c24:	ldr	r3, [pc, #44]	; (14c54 <btrfs_list_setup_print_column@@Base+0x48>)
   14c26:	movs	r2, #12
   14c28:	add	r3, pc
   14c2a:	mla	r0, r2, r0, r3
   14c2e:	movs	r3, #1
   14c30:	str	r3, [r0, #8]
   14c32:	pop	{r3, pc}
   14c34:	ldr	r2, [pc, #32]	; (14c58 <btrfs_list_setup_print_column@@Base+0x4c>)
   14c36:	movs	r3, #0
   14c38:	movs	r1, #1
   14c3a:	add	r2, pc
   14c3c:	adds	r3, #1
   14c3e:	str	r1, [r2, #8]
   14c40:	cmp	r3, #10
   14c42:	add.w	r2, r2, #12
   14c46:	bne.n	14c3c <btrfs_list_setup_print_column@@Base+0x30>
   14c48:	b.n	14c32 <btrfs_list_setup_print_column@@Base+0x26>
   14c4a:	nop
   14c4c:	strb	r7, [r4, #12]
   14c4e:	movs	r2, r0
   14c50:	strb	r2, [r3, #4]
   14c52:	movs	r2, r0
   14c54:	asrs	r0, r7, #19
   14c56:	movs	r5, r0
   14c58:	asrs	r6, r4, #19
   14c5a:	movs	r5, r0

00014c5c <btrfs_list_alloc_comparer_set@@Base>:
   14c5c:	push	{r4, lr}
   14c5e:	movs	r1, #72	; 0x48
   14c60:	ldr	r4, [pc, #36]	; (14c88 <btrfs_list_alloc_comparer_set@@Base+0x2c>)
   14c62:	movs	r0, #1
   14c64:	add	r4, pc
   14c66:	blx	8358 <calloc@plt+0x4>
   14c6a:	cbnz	r0, 14c80 <btrfs_list_alloc_comparer_set@@Base+0x24>
   14c6c:	ldr	r3, [pc, #28]	; (14c8c <btrfs_list_alloc_comparer_set@@Base+0x30>)
   14c6e:	ldr	r0, [pc, #32]	; (14c90 <btrfs_list_alloc_comparer_set@@Base+0x34>)
   14c70:	ldr	r3, [r4, r3]
   14c72:	add	r0, pc
   14c74:	ldr	r1, [r3, #0]
   14c76:	blx	8930 <fputs@plt+0x4>
   14c7a:	movs	r0, #1
   14c7c:	blx	86f8 <exit@plt>
   14c80:	movs	r2, #8
   14c82:	str	r2, [r0, #0]
   14c84:	pop	{r4, pc}
   14c86:	nop
   14c88:	lsls	r4, r4, #4
   14c8a:	movs	r5, r0
   14c8c:	lsls	r4, r6, #8
   14c8e:	movs	r0, r0
   14c90:	ldr	r3, [r4, #124]	; 0x7c
   14c92:	movs	r2, r0

00014c94 <btrfs_list_get_default_subvolume@@Base>:
   14c94:	push	{r4, r5, r6, r7, lr}
   14c96:	mov	r5, r1
   14c98:	ldr	r1, [pc, #184]	; (14d54 <btrfs_list_get_default_subvolume@@Base+0xc0>)
   14c9a:	sub.w	sp, sp, #4096	; 0x1000
   14c9e:	ldr	r2, [pc, #184]	; (14d58 <btrfs_list_get_default_subvolume@@Base+0xc4>)
   14ca0:	sub	sp, #12
   14ca2:	add	r1, pc
   14ca4:	add.w	r3, sp, #4096	; 0x1000
   14ca8:	add	r7, sp, #8
   14caa:	adds	r3, #4
   14cac:	ldr	r2, [r1, r2]
   14cae:	mov	r4, sp
   14cb0:	mov	r6, r0
   14cb2:	mov	r0, r4
   14cb4:	ldr	r2, [r2, #0]
   14cb6:	str	r2, [r3, #0]
   14cb8:	mov.w	r2, #0
   14cbc:	movs	r1, #0
   14cbe:	mov.w	r2, #4096	; 0x1000
   14cc2:	blx	8780 <memset@plt+0x4>
   14cc6:	movs	r2, #1
   14cc8:	movs	r3, #0
   14cca:	ldr	r1, [pc, #132]	; (14d50 <btrfs_list_get_default_subvolume@@Base+0xbc>)
   14ccc:	strd	r2, r3, [r7, #-8]
   14cd0:	mov	r0, r6
   14cd2:	movs	r2, #6
   14cd4:	movs	r3, #1
   14cd6:	str	r3, [r7, #56]	; 0x38
   14cd8:	movs	r3, #0
   14cda:	strd	r2, r3, [r7, #8]
   14cde:	strd	r2, r3, [r4, #8]
   14ce2:	mov.w	r2, #4294967295	; 0xffffffff
   14ce6:	movs	r3, #84	; 0x54
   14ce8:	strd	r3, r3, [r7, #48]	; 0x30
   14cec:	mov.w	r3, #4294967295	; 0xffffffff
   14cf0:	strd	r2, r3, [r7, #24]
   14cf4:	strd	r2, r3, [r7, #40]	; 0x28
   14cf8:	mov	r2, r4
   14cfa:	blx	8578 <ioctl@plt>
   14cfe:	cmp	r0, #0
   14d00:	blt.n	14d28 <btrfs_list_get_default_subvolume@@Base+0x94>
   14d02:	ldr	r3, [r7, #56]	; 0x38
   14d04:	cbz	r3, 14d42 <btrfs_list_get_default_subvolume@@Base+0xae>
   14d06:	ldr	r3, [r7, #120]	; 0x78
   14d08:	cmp	r3, #84	; 0x54
   14d0a:	bne.n	14d42 <btrfs_list_get_default_subvolume@@Base+0xae>
   14d0c:	ldr	r0, [pc, #76]	; (14d5c <btrfs_list_get_default_subvolume@@Base+0xc8>)
   14d0e:	add.w	r1, sp, #166	; 0xa6
   14d12:	ldrh.w	r2, [r7, #155]	; 0x9b
   14d16:	add	r0, pc
   14d18:	blx	893c <strncmp@plt>
   14d1c:	cbnz	r0, 14d42 <btrfs_list_get_default_subvolume@@Base+0xae>
   14d1e:	ldrd	r2, r3, [r7, #128]	; 0x80
   14d22:	movs	r0, #0
   14d24:	strd	r2, r3, [r5]
   14d28:	ldr	r1, [pc, #52]	; (14d60 <btrfs_list_get_default_subvolume@@Base+0xcc>)
   14d2a:	add.w	r3, sp, #4096	; 0x1000
   14d2e:	ldr	r2, [pc, #40]	; (14d58 <btrfs_list_get_default_subvolume@@Base+0xc4>)
   14d30:	adds	r3, #4
   14d32:	add	r1, pc
   14d34:	ldr	r2, [r1, r2]
   14d36:	ldr	r1, [r2, #0]
   14d38:	ldr	r2, [r3, #0]
   14d3a:	eors	r1, r2
   14d3c:	beq.n	14d48 <btrfs_list_get_default_subvolume@@Base+0xb4>
   14d3e:	blx	84cc <__stack_chk_fail@plt>
   14d42:	movs	r2, #0
   14d44:	movs	r3, #0
   14d46:	b.n	14d22 <btrfs_list_get_default_subvolume@@Base+0x8e>
   14d48:	add.w	sp, sp, #4096	; 0x1000
   14d4c:	add	sp, #12
   14d4e:	pop	{r4, r5, r6, r7, pc}
   14d50:	str	r4, [sp, #68]	; 0x44
   14d52:	beq.n	14d56 <btrfs_list_get_default_subvolume@@Base+0xc2>
   14d54:	lsls	r6, r4, #3
   14d56:	movs	r5, r0
   14d58:	lsls	r4, r4, #8
   14d5a:	movs	r0, r0
   14d5c:	strb	r0, [r1, #1]
   14d5e:	movs	r2, r0
   14d60:	lsls	r6, r2, #1
   14d62:	movs	r5, r0

00014d64 <btrfs_list_alloc_filter_set@@Base>:
   14d64:	push	{r4, lr}
   14d66:	mov.w	r1, #432	; 0x1b0
   14d6a:	ldr	r4, [pc, #36]	; (14d90 <btrfs_list_alloc_filter_set@@Base+0x2c>)
   14d6c:	movs	r0, #1
   14d6e:	add	r4, pc
   14d70:	blx	8358 <calloc@plt+0x4>
   14d74:	cbnz	r0, 14d8a <btrfs_list_alloc_filter_set@@Base+0x26>
   14d76:	ldr	r3, [pc, #28]	; (14d94 <btrfs_list_alloc_filter_set@@Base+0x30>)
   14d78:	ldr	r0, [pc, #28]	; (14d98 <btrfs_list_alloc_filter_set@@Base+0x34>)
   14d7a:	ldr	r3, [r4, r3]
   14d7c:	add	r0, pc
   14d7e:	ldr	r1, [r3, #0]
   14d80:	blx	8930 <fputs@plt+0x4>
   14d84:	movs	r0, #1
   14d86:	blx	86f8 <exit@plt>
   14d8a:	movs	r2, #26
   14d8c:	str	r2, [r0, #0]
   14d8e:	pop	{r4, pc}
   14d90:	movs	r2, r3
   14d92:	movs	r5, r0
   14d94:	lsls	r4, r6, #8
   14d96:	movs	r0, r0
   14d98:	ldr	r1, [r3, #108]	; 0x6c
   14d9a:	movs	r2, r0

00014d9c <btrfs_list_setup_filter@@Base>:
   14d9c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   14da0:	mov	r9, r0
   14da2:	ldr	r4, [r0, #0]
   14da4:	mov	r6, r1
   14da6:	ldr.w	sl, [pc, #208]	; 14e78 <btrfs_list_setup_filter@@Base+0xdc>
   14daa:	mov	r8, r2
   14dac:	mov	r7, r3
   14dae:	add	sl, pc
   14db0:	cbnz	r4, 14dc4 <btrfs_list_setup_filter@@Base+0x28>
   14db2:	ldr	r1, [pc, #200]	; (14e7c <btrfs_list_setup_filter@@Base+0xe0>)
   14db4:	movw	r2, #1210	; 0x4ba
   14db8:	ldr	r0, [pc, #196]	; (14e80 <btrfs_list_setup_filter@@Base+0xe4>)
   14dba:	add	r1, pc
   14dbc:	adds	r1, #53	; 0x35
   14dbe:	add	r0, pc
   14dc0:	bl	14a58 <rb_first_postorder@@Base+0xb36>
   14dc4:	cmp	r1, #12
   14dc6:	bls.n	14dd8 <btrfs_list_setup_filter@@Base+0x3c>
   14dc8:	ldr	r1, [pc, #184]	; (14e84 <btrfs_list_setup_filter@@Base+0xe8>)
   14dca:	movw	r2, #1211	; 0x4bb
   14dce:	ldr	r0, [pc, #184]	; (14e88 <btrfs_list_setup_filter@@Base+0xec>)
   14dd0:	add	r1, pc
   14dd2:	adds	r1, #53	; 0x35
   14dd4:	add	r0, pc
   14dd6:	b.n	14dc0 <btrfs_list_setup_filter@@Base+0x24>
   14dd8:	ldrd	r3, r1, [r4]
   14ddc:	cmp	r1, r3
   14dde:	ble.n	14df0 <btrfs_list_setup_filter@@Base+0x54>
   14de0:	ldr	r1, [pc, #168]	; (14e8c <btrfs_list_setup_filter@@Base+0xf0>)
   14de2:	movw	r2, #1212	; 0x4bc
   14de6:	ldr	r0, [pc, #168]	; (14e90 <btrfs_list_setup_filter@@Base+0xf4>)
   14de8:	add	r1, pc
   14dea:	adds	r1, #53	; 0x35
   14dec:	add	r0, pc
   14dee:	b.n	14dc0 <btrfs_list_setup_filter@@Base+0x24>
   14df0:	bne.n	14e3a <btrfs_list_setup_filter@@Base+0x9e>
   14df2:	adds	r1, #27
   14df4:	mov	r0, r4
   14df6:	lsls	r1, r1, #4
   14df8:	blx	84e8 <realloc@plt+0x4>
   14dfc:	mov	r5, r0
   14dfe:	cbnz	r0, 14e1c <btrfs_list_setup_filter@@Base+0x80>
   14e00:	ldr	r3, [pc, #144]	; (14e94 <btrfs_list_setup_filter@@Base+0xf8>)
   14e02:	ldr	r0, [pc, #148]	; (14e98 <btrfs_list_setup_filter@@Base+0xfc>)
   14e04:	ldr.w	r3, [sl, r3]
   14e08:	add	r0, pc
   14e0a:	ldr	r1, [r3, #0]
   14e0c:	blx	8930 <fputs@plt+0x4>
   14e10:	mov	r0, r4
   14e12:	blx	83f0 <free@plt+0x4>
   14e16:	movs	r0, #1
   14e18:	blx	86f8 <exit@plt>
   14e1c:	ldr	r0, [r0, #0]
   14e1e:	mov.w	r2, #416	; 0x1a0
   14e22:	movs	r1, #0
   14e24:	mov	r4, r5
   14e26:	adds	r0, #1
   14e28:	add.w	r0, r5, r0, lsl #4
   14e2c:	blx	8780 <memset@plt+0x4>
   14e30:	ldr	r3, [r5, #0]
   14e32:	adds	r3, #26
   14e34:	str	r3, [r5, #0]
   14e36:	str.w	r5, [r9]
   14e3a:	ldr	r0, [r4, #4]
   14e3c:	add.w	r3, r4, r0, lsl #4
   14e40:	lsls	r1, r0, #4
   14e42:	ldr	r2, [r3, #16]
   14e44:	cbz	r2, 14e56 <btrfs_list_setup_filter@@Base+0xba>
   14e46:	ldr	r1, [pc, #84]	; (14e9c <btrfs_list_setup_filter@@Base+0x100>)
   14e48:	movw	r2, #1234	; 0x4d2
   14e4c:	ldr	r0, [pc, #80]	; (14ea0 <btrfs_list_setup_filter@@Base+0x104>)
   14e4e:	add	r1, pc
   14e50:	adds	r1, #53	; 0x35
   14e52:	add	r0, pc
   14e54:	b.n	14dc0 <btrfs_list_setup_filter@@Base+0x24>
   14e56:	cmp	r6, #12
   14e58:	add	r1, r4
   14e5a:	add.w	r0, r0, #1
   14e5e:	itt	eq
   14e60:	moveq	r2, #1
   14e62:	streq	r2, [r4, #8]
   14e64:	ldr	r2, [pc, #60]	; (14ea4 <btrfs_list_setup_filter@@Base+0x108>)
   14e66:	add	r2, pc
   14e68:	ldr.w	r2, [r2, r6, lsl #2]
   14e6c:	str	r2, [r3, #16]
   14e6e:	strd	r8, r7, [r1, #24]
   14e72:	str	r0, [r4, #4]
   14e74:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   14e78:	vaddl.u16	q8, d10, d4
   14e7c:	strb	r5, [r0, #6]
   14e7e:	movs	r2, r0
   14e80:	strb	r2, [r4, r6]
   14e82:	movs	r2, r0
   14e84:	strb	r7, [r5, #5]
   14e86:	movs	r2, r0
   14e88:	ldr	r2, [r2, #120]	; 0x78
   14e8a:	movs	r2, r0
   14e8c:	strb	r7, [r2, #5]
   14e8e:	movs	r2, r0
   14e90:	ldrsb	r6, [r0, r0]
   14e92:	movs	r2, r0
   14e94:	lsls	r4, r6, #8
   14e96:	movs	r0, r0
   14e98:	ldr	r5, [r1, #100]	; 0x64
   14e9a:	movs	r2, r0
   14e9c:	strb	r1, [r6, #3]
   14e9e:	movs	r2, r0
   14ea0:	strb	r4, [r7, r6]
   14ea2:	movs	r2, r0
   14ea4:	ldrsh.w	r0, [r6, r4]

00014ea8 <btrfs_list_find_updated_files@@Base>:
   14ea8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14eac:	mov	r7, r2
   14eae:	vpush	{d8-d9}
   14eb2:	mov	r6, r3
   14eb4:	ldr	r1, [pc, #904]	; (15240 <btrfs_list_find_updated_files@@Base+0x398>)
   14eb6:	mov.w	r9, #4096	; 0x1000
   14eba:	ldr	r2, [pc, #904]	; (15244 <btrfs_list_find_updated_files@@Base+0x39c>)
   14ebc:	add	r1, pc
   14ebe:	vmov	s16, r0
   14ec2:	sub.w	sp, sp, #12480	; 0x30c0
   14ec6:	sub	sp, #20
   14ec8:	ldr	r2, [r1, r2]
   14eca:	add.w	r3, sp, #12480	; 0x30c0
   14ece:	add.w	r8, sp, #200	; 0xc8
   14ed2:	ldr	r2, [r2, #0]
   14ed4:	str	r2, [r3, #12]
   14ed6:	mov.w	r2, #0
   14eda:	adds	r3, #12
   14edc:	add	r3, sp, #144	; 0x90
   14ede:	movs	r2, #53	; 0x35
   14ee0:	movs	r1, #0
   14ee2:	str	r3, [sp, #40]	; 0x28
   14ee4:	mov	r0, r3
   14ee6:	add	r4, sp, #208	; 0xd0
   14ee8:	blx	8780 <memset@plt+0x4>
   14eec:	mov	r2, r9
   14eee:	movs	r1, #0
   14ef0:	mov	r0, r8
   14ef2:	blx	8780 <memset@plt+0x4>
   14ef6:	movs	r3, #108	; 0x6c
   14ef8:	str.w	r3, [r8, #60]	; 0x3c
   14efc:	add.w	r3, sp, #12544	; 0x3100
   14f00:	adds	r3, #8
   14f02:	add.w	r5, sp, #4288	; 0x10c0
   14f06:	adds	r5, #16
   14f08:	strd	r7, r6, [r4, #-8]
   14f0c:	sub.w	fp, r5, #8
   14f10:	ldrd	r3, r4, [r3]
   14f14:	mov	r2, r9
   14f16:	movs	r1, #0
   14f18:	mov	r0, fp
   14f1a:	mov.w	r6, #4294967295	; 0xffffffff
   14f1e:	mov.w	r7, #4294967295	; 0xffffffff
   14f22:	strd	r3, r4, [r8, #40]	; 0x28
   14f26:	strd	r6, r7, [r8, #16]
   14f2a:	movs	r4, #0
   14f2c:	strd	r6, r7, [r8, #32]
   14f30:	strd	r6, r7, [r8, #48]	; 0x30
   14f34:	str.w	r9, [r8, #64]	; 0x40
   14f38:	blx	8780 <memset@plt+0x4>
   14f3c:	vmov	r0, s16
   14f40:	mov	r2, fp
   14f42:	ldr	r1, [pc, #756]	; (15238 <btrfs_list_find_updated_files@@Base+0x390>)
   14f44:	mov.w	r3, #256	; 0x100
   14f48:	strd	r3, r4, [fp, #8]
   14f4c:	blx	8578 <ioctl@plt>
   14f50:	movs	r4, #0
   14f52:	mov.w	r3, #256	; 0x100
   14f56:	cmp	r0, #0
   14f58:	bge.n	14fda <btrfs_list_find_updated_files@@Base+0x132>
   14f5a:	ldr	r0, [pc, #748]	; (15248 <btrfs_list_find_updated_files@@Base+0x3a0>)
   14f5c:	mov	r2, r3
   14f5e:	mov	r3, r4
   14f60:	add	r0, pc
   14f62:	bl	1747c <__btrfs_error@@Base>
   14f66:	movs	r3, #0
   14f68:	movs	r4, #0
   14f6a:	strd	r3, r4, [sp, #56]	; 0x38
   14f6e:	movs	r3, #0
   14f70:	movs	r2, #0
   14f72:	strd	r2, r3, [sp, #72]	; 0x48
   14f76:	movs	r4, #0
   14f78:	strd	r2, r3, [sp, #88]	; 0x58
   14f7c:	mov	r7, r4
   14f7e:	ldr	r3, [pc, #716]	; (1524c <btrfs_list_find_updated_files@@Base+0x3a4>)
   14f80:	add	r3, pc
   14f82:	vmov	s18, r3
   14f86:	vmov	r0, s16
   14f8a:	mov	r2, r8
   14f8c:	ldr	r1, [pc, #684]	; (1523c <btrfs_list_find_updated_files@@Base+0x394>)
   14f8e:	blx	8578 <ioctl@plt>
   14f92:	subs	r3, r0, #0
   14f94:	vmov	s17, r3
   14f98:	bge.w	15108 <btrfs_list_find_updated_files@@Base+0x260>
   14f9c:	ldr	r0, [pc, #688]	; (15250 <btrfs_list_find_updated_files@@Base+0x3a8>)
   14f9e:	add	r0, pc
   14fa0:	bl	1747c <__btrfs_error@@Base>
   14fa4:	mov	r0, r7
   14fa6:	blx	83f0 <free@plt+0x4>
   14faa:	mov	r0, r4
   14fac:	blx	83f0 <free@plt+0x4>
   14fb0:	ldr	r1, [pc, #672]	; (15254 <btrfs_list_find_updated_files@@Base+0x3ac>)
   14fb2:	ldrd	r2, r3, [sp, #56]	; 0x38
   14fb6:	movs	r0, #1
   14fb8:	add	r1, pc
   14fba:	blx	87f4 <__printf_chk@plt+0x4>
   14fbe:	ldr	r1, [pc, #664]	; (15258 <btrfs_list_find_updated_files@@Base+0x3b0>)
   14fc0:	ldr	r2, [pc, #640]	; (15244 <btrfs_list_find_updated_files@@Base+0x39c>)
   14fc2:	add.w	r3, sp, #12480	; 0x30c0
   14fc6:	add	r1, pc
   14fc8:	adds	r3, #12
   14fca:	ldr	r2, [r1, r2]
   14fcc:	ldr	r1, [r2, #0]
   14fce:	ldr	r2, [r3, #0]
   14fd0:	eors	r1, r2
   14fd2:	beq.w	154b2 <btrfs_list_find_updated_files@@Base+0x60a>
   14fd6:	blx	84cc <__stack_chk_fail@plt>
   14fda:	add.w	sl, sp, #8384	; 0x20c0
   14fde:	mov	r2, r9
   14fe0:	add.w	sl, sl, #16
   14fe4:	movs	r1, #0
   14fe6:	sub.w	r4, sl, #8
   14fea:	mov	r0, r4
   14fec:	blx	8780 <memset@plt+0x4>
   14ff0:	ldrd	r2, r3, [r5, #-8]
   14ff4:	movs	r0, #1
   14ff6:	movs	r1, #0
   14ff8:	strd	r0, r1, [sl, #-8]
   14ffc:	strd	r2, r3, [r4, #8]
   15000:	strd	r2, r3, [r4, #16]
   15004:	movs	r3, #132	; 0x84
   15006:	movs	r2, #0
   15008:	strd	r3, r3, [r4, #56]	; 0x38
   1500c:	movs	r3, #0
   1500e:	strd	r2, r3, [sp, #56]	; 0x38
   15012:	ldr	r3, [sp, #40]	; 0x28
   15014:	strd	r6, r7, [r4, #32]
   15018:	sub.w	r5, r3, #32
   1501c:	strd	r6, r7, [r4, #48]	; 0x30
   15020:	str.w	r9, [r4, #64]	; 0x40
   15024:	vmov	r0, s16
   15028:	mov	r2, r4
   1502a:	ldr	r1, [pc, #528]	; (1523c <btrfs_list_find_updated_files@@Base+0x394>)
   1502c:	blx	8578 <ioctl@plt>
   15030:	cmp	r0, #0
   15032:	bge.n	1503e <btrfs_list_find_updated_files@@Base+0x196>
   15034:	ldr	r0, [pc, #548]	; (1525c <btrfs_list_find_updated_files@@Base+0x3b4>)
   15036:	add	r0, pc
   15038:	bl	1747c <__btrfs_error@@Base>
   1503c:	b.n	14f66 <btrfs_list_find_updated_files@@Base+0xbe>
   1503e:	ldr.w	ip, [r4, #64]	; 0x40
   15042:	cmp.w	ip, #0
   15046:	beq.n	14f6e <btrfs_list_find_updated_files@@Base+0xc6>
   15048:	movs	r7, #0
   1504a:	add.w	r3, sl, #96	; 0x60
   1504e:	mov	r6, r7
   15050:	str	r3, [sp, #40]	; 0x28
   15052:	add.w	r3, sp, #8448	; 0x2100
   15056:	adds	r3, #48	; 0x30
   15058:	str	r3, [sp, #48]	; 0x30
   1505a:	ldr	r3, [sp, #40]	; 0x28
   1505c:	mov	lr, r5
   1505e:	add	r3, r6
   15060:	add.w	r9, r3, #32
   15064:	ldr	r0, [r3, #0]
   15066:	adds	r3, #8
   15068:	ldr.w	r1, [r3, #-4]
   1506c:	cmp	r3, r9
   1506e:	mov	r2, lr
   15070:	stmia	r2!, {r0, r1}
   15072:	mov	lr, r2
   15074:	bne.n	15064 <btrfs_list_find_updated_files@@Base+0x1bc>
   15076:	ldrd	r0, r1, [r5, #16]
   1507a:	add.w	lr, r6, #32
   1507e:	ldrd	r2, r3, [r5, #8]
   15082:	ldr.w	r9, [r5, #24]
   15086:	strd	r0, r1, [r4, #24]
   1508a:	ldrd	r0, r1, [fp]
   1508e:	ldr	r6, [r5, #28]
   15090:	cmp	r1, r3
   15092:	strd	r2, r3, [r4, #8]
   15096:	it	eq
   15098:	cmpeq	r0, r2
   1509a:	add	r6, lr
   1509c:	str.w	r9, [r4, #56]	; 0x38
   150a0:	bcs.n	150d6 <btrfs_list_find_updated_files@@Base+0x22e>
   150a2:	ldrd	r0, r1, [r4, #24]
   150a6:	adds	r6, r1, #1
   150a8:	it	eq
   150aa:	cmpeq.w	r0, #4294967295	; 0xffffffff
   150ae:	beq.w	14f6e <btrfs_list_find_updated_files@@Base+0xc6>
   150b2:	adds	r2, r0, #1
   150b4:	adc.w	r3, r1, #0
   150b8:	strd	r2, r3, [r4, #24]
   150bc:	ldr	r3, [r4, #56]	; 0x38
   150be:	cmp	r3, #132	; 0x84
   150c0:	bne.w	14f6e <btrfs_list_find_updated_files@@Base+0xc6>
   150c4:	ldrd	r0, r1, [r4, #8]
   150c8:	ldrd	r2, r3, [fp]
   150cc:	cmp	r1, r3
   150ce:	it	eq
   150d0:	cmpeq	r0, r2
   150d2:	beq.n	15024 <btrfs_list_find_updated_files@@Base+0x17c>
   150d4:	b.n	14f6e <btrfs_list_find_updated_files@@Base+0xc6>
   150d6:	cmp	r3, r1
   150d8:	it	eq
   150da:	cmpeq	r2, r0
   150dc:	bne.n	15100 <btrfs_list_find_updated_files@@Base+0x258>
   150de:	cmp.w	r9, #132	; 0x84
   150e2:	bne.n	15100 <btrfs_list_find_updated_files@@Base+0x258>
   150e4:	ldr	r3, [sp, #48]	; 0x30
   150e6:	ldrd	r0, r1, [sp, #56]	; 0x38
   150ea:	add	lr, r3
   150ec:	ldr.w	r2, [lr, #160]	; 0xa0
   150f0:	ldr.w	r3, [lr, #164]	; 0xa4
   150f4:	cmp	r1, r3
   150f6:	it	eq
   150f8:	cmpeq	r0, r2
   150fa:	it	cc
   150fc:	strdcc	r2, r3, [sp, #56]	; 0x38
   15100:	adds	r7, #1
   15102:	cmp	r7, ip
   15104:	bne.n	1505a <btrfs_list_find_updated_files@@Base+0x1b2>
   15106:	b.n	150a2 <btrfs_list_find_updated_files@@Base+0x1fa>
   15108:	ldr.w	r3, [r8, #64]	; 0x40
   1510c:	cmp	r3, #0
   1510e:	beq.w	14fa4 <btrfs_list_find_updated_files@@Base+0xfc>
   15112:	movs	r3, #0
   15114:	str	r3, [sp, #84]	; 0x54
   15116:	mov	r5, r3
   15118:	add	r3, sp, #304	; 0x130
   1511a:	str	r3, [sp, #108]	; 0x6c
   1511c:	ldr.w	r3, [r8, #64]	; 0x40
   15120:	ldr	r2, [sp, #84]	; 0x54
   15122:	cmp	r3, r2
   15124:	bhi.n	1514a <btrfs_list_find_updated_files@@Base+0x2a2>
   15126:	ldrd	r0, r1, [r8, #24]
   1512a:	mov.w	r3, #4096	; 0x1000
   1512e:	str.w	r3, [r8, #64]	; 0x40
   15132:	adds	r2, r1, #1
   15134:	it	eq
   15136:	cmpeq.w	r0, #4294967295	; 0xffffffff
   1513a:	beq.w	15460 <btrfs_list_find_updated_files@@Base+0x5b8>
   1513e:	adds	r2, r0, #1
   15140:	adc.w	r3, r1, #0
   15144:	strd	r2, r3, [r8, #24]
   15148:	b.n	14f86 <btrfs_list_find_updated_files@@Base+0xde>
   1514a:	ldr	r3, [sp, #108]	; 0x6c
   1514c:	add.w	sl, sp, #112	; 0x70
   15150:	add	r3, r5
   15152:	mov	r6, sl
   15154:	add.w	ip, r3, #32
   15158:	ldr	r0, [r3, #0]
   1515a:	adds	r3, #8
   1515c:	ldr.w	r1, [r3, #-4]
   15160:	cmp	r3, ip
   15162:	mov	r2, r6
   15164:	stmia	r2!, {r0, r1}
   15166:	mov	r6, r2
   15168:	bne.n	15158 <btrfs_list_find_updated_files@@Base+0x2b0>
   1516a:	add.w	r3, r5, #32
   1516e:	str	r3, [sp, #104]	; 0x68
   15170:	ldr.w	r3, [sl, #28]
   15174:	str	r3, [sp, #96]	; 0x60
   15176:	cmp	r3, #0
   15178:	beq.n	15228 <btrfs_list_find_updated_files@@Base+0x380>
   1517a:	ldrd	r2, r3, [sp, #104]	; 0x68
   1517e:	adds	r5, r3, r2
   15180:	ldr.w	r3, [sl, #24]
   15184:	str	r3, [sp, #100]	; 0x64
   15186:	ldrd	r2, r3, [sl, #8]
   1518a:	strd	r2, r3, [sp, #40]	; 0x28
   1518e:	ldr	r3, [sp, #100]	; 0x64
   15190:	cmp	r3, #108	; 0x6c
   15192:	bne.w	15422 <btrfs_list_find_updated_files@@Base+0x57a>
   15196:	ldr	r3, [r5, #0]
   15198:	add.w	r1, sp, #12544	; 0x3100
   1519c:	adds	r1, #8
   1519e:	str	r3, [sp, #48]	; 0x30
   151a0:	ldr	r3, [r5, #4]
   151a2:	ldrd	r0, r1, [r1]
   151a6:	str	r3, [sp, #52]	; 0x34
   151a8:	ldrd	r2, r3, [sp, #48]	; 0x30
   151ac:	cmp	r3, r1
   151ae:	it	eq
   151b0:	cmpeq	r2, r0
   151b2:	bcc.w	15422 <btrfs_list_find_updated_files@@Base+0x57a>
   151b6:	ldrd	r2, r3, [sp, #72]	; 0x48
   151ba:	ldrd	r0, r1, [sp, #40]	; 0x28
   151be:	cmp	r3, r1
   151c0:	it	eq
   151c2:	cmpeq	r2, r0
   151c4:	bne.n	1522c <btrfs_list_find_updated_files@@Base+0x384>
   151c6:	cmp	r4, #0
   151c8:	bne.w	1533e <btrfs_list_find_updated_files@@Base+0x496>
   151cc:	mov.w	r2, #4096	; 0x1000
   151d0:	movs	r1, #0
   151d2:	mov	r0, fp
   151d4:	blx	8780 <memset@plt+0x4>
   151d8:	ldrd	r3, r4, [sp, #40]	; 0x28
   151dc:	movs	r1, #12
   151de:	mov.w	r2, #4294967295	; 0xffffffff
   151e2:	str.w	r1, [fp, #60]	; 0x3c
   151e6:	strd	r3, r4, [fp, #8]
   151ea:	strd	r3, r4, [fp, #16]
   151ee:	mov.w	r3, #4294967295	; 0xffffffff
   151f2:	str.w	r1, [fp, #56]	; 0x38
   151f6:	strd	r2, r3, [fp, #32]
   151fa:	strd	r2, r3, [fp, #48]	; 0x30
   151fe:	movs	r3, #1
   15200:	vmov	r0, s16
   15204:	mov	r2, fp
   15206:	ldr	r1, [pc, #52]	; (1523c <btrfs_list_find_updated_files@@Base+0x394>)
   15208:	str.w	r3, [fp, #64]	; 0x40
   1520c:	blx	8578 <ioctl@plt>
   15210:	cmp	r0, #0
   15212:	bge.n	15264 <btrfs_list_find_updated_files@@Base+0x3bc>
   15214:	ldr	r0, [pc, #72]	; (15260 <btrfs_list_find_updated_files@@Base+0x3b8>)
   15216:	add	r0, pc
   15218:	bl	1747c <__btrfs_error@@Base>
   1521c:	ldrd	r3, r4, [sp, #40]	; 0x28
   15220:	strd	r3, r4, [sp, #72]	; 0x48
   15224:	movs	r4, #0
   15226:	b.n	15422 <btrfs_list_find_updated_files@@Base+0x57a>
   15228:	add	r5, sp, #144	; 0x90
   1522a:	b.n	15180 <btrfs_list_find_updated_files@@Base+0x2d8>
   1522c:	cmp	r4, #0
   1522e:	beq.n	151cc <btrfs_list_find_updated_files@@Base+0x324>
   15230:	mov	r0, r4
   15232:	blx	83f0 <free@plt+0x4>
   15236:	b.n	151cc <btrfs_list_find_updated_files@@Base+0x324>
   15238:	str	r4, [sp, #72]	; 0x48
   1523a:	beq.n	1523e <btrfs_list_find_updated_files@@Base+0x396>
   1523c:	str	r4, [sp, #68]	; 0x44
   1523e:	beq.n	15242 <btrfs_list_find_updated_files@@Base+0x39a>
   15240:	cdp2	0, 12, cr0, cr12, cr4, {0}
   15244:	lsls	r4, r4, #8
   15246:	movs	r0, r0
   15248:	ldr	r7, [r4, #96]	; 0x60
   1524a:	movs	r2, r0
   1524c:	ldr	r2, [r6, #100]	; 0x64
   1524e:	movs	r2, r0
   15250:	ldr	r3, [r1, #84]	; 0x54
   15252:	movs	r2, r0
   15254:	ldr	r4, [r4, #104]	; 0x68
   15256:	movs	r2, r0
   15258:	stc2l	0, cr0, [r2, #16]
   1525c:	ldr	r3, [r6, #72]	; 0x48
   1525e:	movs	r2, r0
   15260:	ldr	r3, [r2, #44]	; 0x2c
   15262:	movs	r2, r0
   15264:	ldr.w	r3, [fp, #64]	; 0x40
   15268:	cmp	r3, #0
   1526a:	beq.n	1521c <btrfs_list_find_updated_files@@Base+0x374>
   1526c:	ldr.w	r3, [fp, #128]	; 0x80
   15270:	cmp	r3, #12
   15272:	bne.n	1521c <btrfs_list_find_updated_files@@Base+0x374>
   15274:	ldrd	r3, r4, [fp, #120]	; 0x78
   15278:	add.w	r0, sp, #4288	; 0x10c0
   1527c:	adds	r0, #16
   1527e:	ldrh.w	r1, [fp, #144]	; 0x90
   15282:	adds	r0, #138	; 0x8a
   15284:	strd	r3, r4, [sp, #64]	; 0x40
   15288:	blx	8420 <strndup@plt>
   1528c:	ldrd	r3, r4, [sp, #64]	; 0x40
   15290:	ldrd	r1, r2, [sp, #88]	; 0x58
   15294:	cmp	r4, r2
   15296:	it	eq
   15298:	cmpeq	r3, r1
   1529a:	mov	r6, r0
   1529c:	bne.n	152a4 <btrfs_list_find_updated_files@@Base+0x3fc>
   1529e:	cmp	r7, #0
   152a0:	bne.w	153e6 <btrfs_list_find_updated_files@@Base+0x53e>
   152a4:	add.w	r4, sp, #8384	; 0x20c0
   152a8:	mov.w	r2, #4096	; 0x1000
   152ac:	adds	r4, #8
   152ae:	movs	r1, #0
   152b0:	mov	r0, r4
   152b2:	blx	8780 <memset@plt+0x4>
   152b6:	ldrd	r2, r3, [sp, #64]	; 0x40
   152ba:	vmov	r0, s16
   152be:	ldr	r1, [pc, #516]	; (154c4 <btrfs_list_find_updated_files@@Base+0x61c>)
   152c0:	strd	r2, r3, [r4, #8]
   152c4:	mov	r2, r4
   152c6:	blx	8578 <ioctl@plt>
   152ca:	subs.w	r9, r0, #0
   152ce:	bge.n	15314 <btrfs_list_find_updated_files@@Base+0x46c>
   152d0:	ldr	r0, [pc, #500]	; (154c8 <btrfs_list_find_updated_files@@Base+0x620>)
   152d2:	ldrd	r2, r3, [sp, #64]	; 0x40
   152d6:	add	r0, pc
   152d8:	bl	1747c <__btrfs_error@@Base>
   152dc:	mov	r0, r9
   152de:	blx	8704 <strlen@plt>
   152e2:	mov	r4, r0
   152e4:	mov	r0, r6
   152e6:	blx	8704 <strlen@plt>
   152ea:	add	r0, r4
   152ec:	adds	r0, #1
   152ee:	blx	8634 <malloc@plt+0x4>
   152f2:	mov	r4, r0
   152f4:	cbz	r0, 15304 <btrfs_list_find_updated_files@@Base+0x45c>
   152f6:	mov	r1, r9
   152f8:	blx	85b4 <strcpy@plt>
   152fc:	mov	r1, r6
   152fe:	mov	r0, r4
   15300:	blx	856c <strcat@plt+0x4>
   15304:	cbz	r7, 15310 <btrfs_list_find_updated_files@@Base+0x468>
   15306:	cmp	r9, r7
   15308:	beq.n	1532a <btrfs_list_find_updated_files@@Base+0x482>
   1530a:	mov	r0, r7
   1530c:	blx	83f0 <free@plt+0x4>
   15310:	mov	r7, r9
   15312:	b.n	1532a <btrfs_list_find_updated_files@@Base+0x482>
   15314:	ldrb.w	r9, [r4, #16]
   15318:	cmp.w	r9, #0
   1531c:	bne.n	153c8 <btrfs_list_find_updated_files@@Base+0x520>
   1531e:	mov	r0, r6
   15320:	blx	84b4 <strdup@plt+0x4>
   15324:	mov	r4, r0
   15326:	cmp	r7, #0
   15328:	bne.n	1530a <btrfs_list_find_updated_files@@Base+0x462>
   1532a:	mov	r0, r6
   1532c:	blx	83f0 <free@plt+0x4>
   15330:	cmp	r4, #0
   15332:	beq.w	1544e <btrfs_list_find_updated_files@@Base+0x5a6>
   15336:	ldrd	r2, r3, [sp, #64]	; 0x40
   1533a:	strd	r2, r3, [sp, #88]	; 0x58
   1533e:	ldrd	r2, r3, [sl, #16]
   15342:	ldrb	r6, [r5, #20]
   15344:	ldrb.w	r9, [r5, #16]
   15348:	strd	r2, r3, [sp, #64]	; 0x40
   1534c:	subs	r3, r6, #1
   1534e:	cmp	r3, #1
   15350:	bhi.n	153ea <btrfs_list_find_updated_files@@Base+0x542>
   15352:	ldr.w	r3, [r5, #45]	; 0x2d
   15356:	ldr.w	r0, [r5, #21]
   1535a:	ldr.w	r1, [r5, #25]
   1535e:	ldr.w	lr, [r5, #37]	; 0x25
   15362:	ldr.w	ip, [r5, #41]	; 0x29
   15366:	str	r3, [sp, #72]	; 0x48
   15368:	ldr.w	r5, [r5, #49]	; 0x31
   1536c:	ldrd	r2, r3, [sp, #48]	; 0x30
   15370:	strd	r0, r1, [sp, #16]
   15374:	movs	r0, #1
   15376:	vmov	r1, s18
   1537a:	strd	r2, r3, [sp, #32]
   1537e:	ldr	r3, [sp, #72]	; 0x48
   15380:	strd	lr, ip, [sp, #24]
   15384:	strd	r3, r5, [sp, #8]
   15388:	ldrd	r2, r3, [sp, #64]	; 0x40
   1538c:	strd	r2, r3, [sp]
   15390:	ldrd	r2, r3, [sp, #40]	; 0x28
   15394:	blx	87f4 <__printf_chk@plt+0x4>
   15398:	cmp.w	r9, #0
   1539c:	beq.n	1548a <btrfs_list_find_updated_files@@Base+0x5e2>
   1539e:	ldr	r1, [pc, #300]	; (154cc <btrfs_list_find_updated_files@@Base+0x624>)
   153a0:	movs	r0, #1
   153a2:	add	r1, pc
   153a4:	blx	87f4 <__printf_chk@plt+0x4>
   153a8:	cmp	r6, #2
   153aa:	bne.n	15494 <btrfs_list_find_updated_files@@Base+0x5ec>
   153ac:	ldr	r2, [pc, #288]	; (154d0 <btrfs_list_find_updated_files@@Base+0x628>)
   153ae:	add	r2, pc
   153b0:	ldr	r1, [pc, #288]	; (154d4 <btrfs_list_find_updated_files@@Base+0x62c>)
   153b2:	add	r1, pc
   153b4:	movs	r0, #1
   153b6:	blx	87f4 <__printf_chk@plt+0x4>
   153ba:	ldr	r1, [pc, #284]	; (154d8 <btrfs_list_find_updated_files@@Base+0x630>)
   153bc:	mov	r2, r4
   153be:	movs	r0, #1
   153c0:	add	r1, pc
   153c2:	blx	87f4 <__printf_chk@plt+0x4>
   153c6:	b.n	1541a <btrfs_list_find_updated_files@@Base+0x572>
   153c8:	add.w	r0, sp, #8384	; 0x20c0
   153cc:	adds	r0, #24
   153ce:	blx	84b4 <strdup@plt+0x4>
   153d2:	mov	r9, r0
   153d4:	cmp	r0, #0
   153d6:	bne.n	152dc <btrfs_list_find_updated_files@@Base+0x434>
   153d8:	ldr	r0, [pc, #256]	; (154dc <btrfs_list_find_updated_files@@Base+0x634>)
   153da:	mvn.w	r9, #11
   153de:	add	r0, pc
   153e0:	blx	8524 <perror@plt>
   153e4:	b.n	152dc <btrfs_list_find_updated_files@@Base+0x434>
   153e6:	mov	r9, r7
   153e8:	b.n	152dc <btrfs_list_find_updated_files@@Base+0x434>
   153ea:	cbnz	r6, 153fc <btrfs_list_find_updated_files@@Base+0x554>
   153ec:	ldr	r3, [r5, #8]
   153ee:	mov	lr, r6
   153f0:	mov	ip, r6
   153f2:	mov	r0, r6
   153f4:	mov	r1, r6
   153f6:	str	r3, [sp, #72]	; 0x48
   153f8:	ldr	r5, [r5, #12]
   153fa:	b.n	1536c <btrfs_list_find_updated_files@@Base+0x4c4>
   153fc:	ldrd	r2, r3, [sp, #48]	; 0x30
   15400:	mov	r1, r6
   15402:	ldr	r0, [pc, #220]	; (154e0 <btrfs_list_find_updated_files@@Base+0x638>)
   15404:	strd	r2, r3, [sp, #8]
   15408:	add	r0, pc
   1540a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1540e:	strd	r2, r3, [sp]
   15412:	ldrd	r2, r3, [sp, #40]	; 0x28
   15416:	bl	1747c <__btrfs_error@@Base>
   1541a:	ldrd	r2, r3, [sp, #40]	; 0x28
   1541e:	strd	r2, r3, [sp, #72]	; 0x48
   15422:	ldr	r2, [sp, #104]	; 0x68
   15424:	ldr	r3, [sp, #96]	; 0x60
   15426:	add	r3, r2
   15428:	mov	r5, r3
   1542a:	ldrd	r2, r3, [sp, #40]	; 0x28
   1542e:	strd	r2, r3, [r8, #8]
   15432:	ldrd	r2, r3, [sl, #16]
   15436:	strd	r2, r3, [r8, #24]
   1543a:	ldr	r3, [sp, #100]	; 0x64
   1543c:	str.w	r3, [r8, #56]	; 0x38
   15440:	ldr	r3, [sp, #84]	; 0x54
   15442:	adds	r3, #1
   15444:	str	r3, [sp, #84]	; 0x54
   15446:	b.n	1511c <btrfs_list_find_updated_files@@Base+0x274>
   15448:	ldr	r2, [pc, #152]	; (154e4 <btrfs_list_find_updated_files@@Base+0x63c>)
   1544a:	add	r2, pc
   1544c:	b.n	1549c <btrfs_list_find_updated_files@@Base+0x5f4>
   1544e:	ldrd	r2, r3, [sp, #40]	; 0x28
   15452:	strd	r2, r3, [sp, #72]	; 0x48
   15456:	ldrd	r2, r3, [sp, #64]	; 0x40
   1545a:	strd	r2, r3, [sp, #88]	; 0x58
   1545e:	b.n	15422 <btrfs_list_find_updated_files@@Base+0x57a>
   15460:	ldrd	r0, r1, [r8, #8]
   15464:	adds	r3, r1, #1
   15466:	it	eq
   15468:	cmpeq.w	r0, #4294967295	; 0xffffffff
   1546c:	beq.w	14fa4 <btrfs_list_find_updated_files@@Base+0xfc>
   15470:	adds	r2, r0, #1
   15472:	adc.w	r3, r1, #0
   15476:	strd	r2, r3, [r8, #8]
   1547a:	movs	r3, #0
   1547c:	movs	r2, #0
   1547e:	strd	r2, r3, [r8, #24]
   15482:	movs	r3, #0
   15484:	str.w	r3, [r8, #56]	; 0x38
   15488:	b.n	14f86 <btrfs_list_find_updated_files@@Base+0xde>
   1548a:	cmp	r6, #2
   1548c:	bne.n	154a2 <btrfs_list_find_updated_files@@Base+0x5fa>
   1548e:	ldr	r2, [pc, #88]	; (154e8 <btrfs_list_find_updated_files@@Base+0x640>)
   15490:	add	r2, pc
   15492:	b.n	153b0 <btrfs_list_find_updated_files@@Base+0x508>
   15494:	cmp	r6, #0
   15496:	bne.n	153ba <btrfs_list_find_updated_files@@Base+0x512>
   15498:	ldr	r2, [pc, #80]	; (154ec <btrfs_list_find_updated_files@@Base+0x644>)
   1549a:	add	r2, pc
   1549c:	ldr	r1, [pc, #80]	; (154f0 <btrfs_list_find_updated_files@@Base+0x648>)
   1549e:	add	r1, pc
   154a0:	b.n	153b4 <btrfs_list_find_updated_files@@Base+0x50c>
   154a2:	cmp	r6, #0
   154a4:	beq.n	15448 <btrfs_list_find_updated_files@@Base+0x5a0>
   154a6:	ldr	r1, [pc, #76]	; (154f4 <btrfs_list_find_updated_files@@Base+0x64c>)
   154a8:	movs	r0, #1
   154aa:	add	r1, pc
   154ac:	blx	87f4 <__printf_chk@plt+0x4>
   154b0:	b.n	153ba <btrfs_list_find_updated_files@@Base+0x512>
   154b2:	vmov	r0, s17
   154b6:	add.w	sp, sp, #12480	; 0x30c0
   154ba:	add	sp, #20
   154bc:	vpop	{d8-d9}
   154c0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   154c4:	str	r4, [sp, #72]	; 0x48
   154c6:	beq.n	154ca <btrfs_list_find_updated_files@@Base+0x622>
   154c8:	ldr	r1, [r6, #40]	; 0x28
   154ca:	movs	r2, r0
   154cc:	ldr	r1, [sp, #760]	; 0x2f8
   154ce:	movs	r2, r0
   154d0:	ldr	r7, [r2, #28]
   154d2:	movs	r2, r0
   154d4:	ldr	r1, [r2, #40]	; 0x28
   154d6:	movs	r2, r0
   154d8:	ldrb	r0, [r6, r7]
   154da:	movs	r2, r0
   154dc:	ldr	r7, [r0, #12]
   154de:	movs	r2, r0
   154e0:	ldr	r0, [r5, #24]
   154e2:	movs	r2, r0
   154e4:	strb	r2, [r2, r0]
   154e6:	movs	r2, r0
   154e8:	strh	r4, [r1, r7]
   154ea:	movs	r2, r0
   154ec:	ldr	r3, [r5, #12]
   154ee:	movs	r2, r0
   154f0:	ldr	r0, [r6, #24]
   154f2:	movs	r2, r0
   154f4:	ldr	r5, [r5, #24]
   154f6:	movs	r2, r0

000154f8 <btrfs_list_parse_sort_string@@Base>:
   154f8:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154fc:	mov	r4, r1
   154fe:	ldr.w	sl, [pc, #324]	; 15644 <btrfs_list_parse_sort_string@@Base+0x14c>
   15502:	ldr.w	fp, [pc, #324]	; 15648 <btrfs_list_parse_sort_string@@Base+0x150>
   15506:	ldr	r7, [pc, #324]	; (1564c <btrfs_list_parse_sort_string@@Base+0x154>)
   15508:	add	sl, pc
   1550a:	ldr	r3, [pc, #324]	; (15650 <btrfs_list_parse_sort_string@@Base+0x158>)
   1550c:	add	fp, pc
   1550e:	add	r7, pc
   15510:	add	r3, pc
   15512:	str	r3, [sp, #0]
   15514:	mov	r1, sl
   15516:	blx	884c <strtok@plt>
   1551a:	mov	r9, r0
   1551c:	cbz	r0, 15550 <btrfs_list_parse_sort_string@@Base+0x58>
   1551e:	ldr	r3, [sp, #0]
   15520:	add.w	r8, r0, #1
   15524:	add.w	r5, r3, #132	; 0x84
   15528:	mov	r6, r5
   1552a:	b.n	15544 <btrfs_list_parse_sort_string@@Base+0x4c>
   1552c:	mov	r1, r9
   1552e:	mov	r0, r2
   15530:	str	r2, [sp, #4]
   15532:	blx	837c <strcmp@plt>
   15536:	cbz	r0, 15556 <btrfs_list_parse_sort_string@@Base+0x5e>
   15538:	ldr	r2, [sp, #4]
   1553a:	mov	r1, r8
   1553c:	mov	r0, r2
   1553e:	blx	837c <strcmp@plt>
   15542:	cbz	r0, 15556 <btrfs_list_parse_sort_string@@Base+0x5e>
   15544:	ldr.w	r2, [r6], #4
   15548:	cmp	r2, #0
   1554a:	bne.n	1552c <btrfs_list_parse_sort_string@@Base+0x34>
   1554c:	mov.w	r0, #4294967295	; 0xffffffff
   15550:	add	sp, #12
   15552:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15556:	ldrb.w	r2, [r9]
   1555a:	cmp	r2, #43	; 0x2b
   1555c:	bne.n	15566 <btrfs_list_parse_sort_string@@Base+0x6e>
   1555e:	add.w	r9, r9, #1
   15562:	movs	r6, #0
   15564:	b.n	15570 <btrfs_list_parse_sort_string@@Base+0x78>
   15566:	cmp	r2, #45	; 0x2d
   15568:	bne.n	15562 <btrfs_list_parse_sort_string@@Base+0x6a>
   1556a:	add.w	r9, r9, #1
   1556e:	movs	r6, #1
   15570:	mov.w	r8, #0
   15574:	ldr.w	r1, [r5], #4
   15578:	mov	r0, r9
   1557a:	blx	837c <strcmp@plt>
   1557e:	cbz	r0, 1558e <btrfs_list_parse_sort_string@@Base+0x96>
   15580:	add.w	r8, r8, #1
   15584:	cmp.w	r8, #4
   15588:	bne.n	15574 <btrfs_list_parse_sort_string@@Base+0x7c>
   1558a:	mov.w	r8, #4294967295	; 0xffffffff
   1558e:	ldr	r5, [r4, #0]
   15590:	cbnz	r5, 155a2 <btrfs_list_parse_sort_string@@Base+0xaa>
   15592:	ldr	r1, [pc, #192]	; (15654 <btrfs_list_parse_sort_string@@Base+0x15c>)
   15594:	movs	r2, #251	; 0xfb
   15596:	ldr	r0, [pc, #192]	; (15658 <btrfs_list_parse_sort_string@@Base+0x160>)
   15598:	add	r1, pc
   1559a:	adds	r1, #77	; 0x4d
   1559c:	add	r0, pc
   1559e:	bl	14a58 <rb_first_postorder@@Base+0xb36>
   155a2:	cmp.w	r8, #3
   155a6:	bls.n	155b6 <btrfs_list_parse_sort_string@@Base+0xbe>
   155a8:	ldr	r1, [pc, #176]	; (1565c <btrfs_list_parse_sort_string@@Base+0x164>)
   155aa:	movs	r2, #252	; 0xfc
   155ac:	ldr	r0, [pc, #176]	; (15660 <btrfs_list_parse_sort_string@@Base+0x168>)
   155ae:	add	r1, pc
   155b0:	adds	r1, #77	; 0x4d
   155b2:	add	r0, pc
   155b4:	b.n	1559e <btrfs_list_parse_sort_string@@Base+0xa6>
   155b6:	ldrd	r3, r1, [r5]
   155ba:	cmp	r1, r3
   155bc:	ble.n	155cc <btrfs_list_parse_sort_string@@Base+0xd4>
   155be:	ldr	r1, [pc, #164]	; (15664 <btrfs_list_parse_sort_string@@Base+0x16c>)
   155c0:	movs	r2, #253	; 0xfd
   155c2:	ldr	r0, [pc, #164]	; (15668 <btrfs_list_parse_sort_string@@Base+0x170>)
   155c4:	add	r1, pc
   155c6:	adds	r1, #77	; 0x4d
   155c8:	add	r0, pc
   155ca:	b.n	1559e <btrfs_list_parse_sort_string@@Base+0xa6>
   155cc:	bne.n	15616 <btrfs_list_parse_sort_string@@Base+0x11e>
   155ce:	adds	r1, #9
   155d0:	mov	r0, r5
   155d2:	lsls	r1, r1, #3
   155d4:	blx	84e8 <realloc@plt+0x4>
   155d8:	mov	r9, r0
   155da:	cbnz	r0, 155f6 <btrfs_list_parse_sort_string@@Base+0xfe>
   155dc:	ldr	r3, [pc, #140]	; (1566c <btrfs_list_parse_sort_string@@Base+0x174>)
   155de:	ldr	r0, [pc, #144]	; (15670 <btrfs_list_parse_sort_string@@Base+0x178>)
   155e0:	ldr	r3, [r7, r3]
   155e2:	add	r0, pc
   155e4:	ldr	r1, [r3, #0]
   155e6:	blx	8930 <fputs@plt+0x4>
   155ea:	mov	r0, r5
   155ec:	blx	83f0 <free@plt+0x4>
   155f0:	movs	r0, #1
   155f2:	blx	86f8 <exit@plt>
   155f6:	ldr	r0, [r0, #0]
   155f8:	movs	r2, #64	; 0x40
   155fa:	movs	r1, #0
   155fc:	mov	r5, r9
   155fe:	adds	r0, #1
   15600:	add.w	r0, r9, r0, lsl #3
   15604:	blx	8780 <memset@plt+0x4>
   15608:	ldr.w	r2, [r9]
   1560c:	adds	r2, #8
   1560e:	str.w	r2, [r9]
   15612:	str.w	r9, [r4]
   15616:	ldr	r3, [r5, #4]
   15618:	add.w	r1, r5, r3, lsl #3
   1561c:	ldr	r0, [r1, #8]
   1561e:	cbz	r0, 15630 <btrfs_list_parse_sort_string@@Base+0x138>
   15620:	ldr	r1, [pc, #80]	; (15674 <btrfs_list_parse_sort_string@@Base+0x17c>)
   15622:	movw	r2, #275	; 0x113
   15626:	ldr	r0, [pc, #80]	; (15678 <btrfs_list_parse_sort_string@@Base+0x180>)
   15628:	add	r1, pc
   1562a:	adds	r1, #77	; 0x4d
   1562c:	add	r0, pc
   1562e:	b.n	1559e <btrfs_list_parse_sort_string@@Base+0xa6>
   15630:	add.w	r8, fp, r8, lsl #2
   15634:	adds	r3, #1
   15636:	ldr.w	r2, [r8, #52]	; 0x34
   1563a:	strd	r2, r6, [r1, #8]
   1563e:	str	r3, [r5, #4]
   15640:	b.n	15514 <btrfs_list_parse_sort_string@@Base+0x1c>
   15642:	nop
   15644:	ldr	r7, [pc, #400]	; (157d8 <btrfs_list_subvols_print@@Base+0xfc>)
   15646:	movs	r2, r0
   15648:			; <UNDEFINED> instruction: 0xf2900004
   1564c:	ldr??.w	r0, [sl, r4]
   15650:	lsrs	r0, r2, #16
   15652:	movs	r5, r0
   15654:	ldr	r7, [r4, #24]
   15656:	movs	r2, r0
   15658:	ldr	r5, [pc, #784]	; (1596c <btrfs_list_subvols_print@@Base+0x290>)
   1565a:	movs	r2, r0
   1565c:	ldr	r1, [r2, #24]
   1565e:	movs	r2, r0
   15660:	ldr	r3, [r0, #12]
   15662:	movs	r2, r0
   15664:	ldr	r3, [r7, #20]
   15666:	movs	r2, r0
   15668:	ldr	r5, [pc, #788]	; (15980 <btrfs_list_subvols_print@@Base+0x2a4>)
   1566a:	movs	r2, r0
   1566c:	lsls	r4, r6, #8
   1566e:	movs	r0, r0
   15670:	str	r3, [r6, #100]	; 0x64
   15672:	movs	r2, r0
   15674:	ldr	r7, [r2, #16]
   15676:	movs	r2, r0
   15678:	ldr	r5, [pc, #492]	; (15868 <btrfs_list_subvols_print@@Base+0x18c>)
   1567a:	movs	r2, r0

0001567c <btrfs_list_parse_filter_string@@Base>:
   1567c:	push	{r3, r4, r5, lr}
   1567e:	mov	r3, r0
   15680:	mov	r5, r2
   15682:	ldrb.w	r2, [r3], #1
   15686:	mov	r4, r1
   15688:	cmp	r2, #43	; 0x2b
   1568a:	beq.n	1569c <btrfs_list_parse_filter_string@@Base+0x20>
   1568c:	cmp	r2, #45	; 0x2d
   1568e:	beq.n	156b2 <btrfs_list_parse_filter_string@@Base+0x36>
   15690:	bl	1773c <arg_strtou64@@Base>
   15694:	mov	r3, r1
   15696:	mov	r2, r0
   15698:	mov	r1, r5
   1569a:	b.n	156a8 <btrfs_list_parse_filter_string@@Base+0x2c>
   1569c:	mov	r0, r3
   1569e:	bl	1773c <arg_strtou64@@Base>
   156a2:	mov	r3, r1
   156a4:	adds	r1, r5, #2
   156a6:	mov	r2, r0
   156a8:	mov	r0, r4
   156aa:	bl	14d9c <btrfs_list_setup_filter@@Base>
   156ae:	movs	r0, #0
   156b0:	pop	{r3, r4, r5, pc}
   156b2:	mov	r0, r3
   156b4:	bl	1773c <arg_strtou64@@Base>
   156b8:	mov	r3, r1
   156ba:	mov	r2, r0
   156bc:	adds	r1, r5, #1
   156be:	b.n	156a8 <btrfs_list_parse_filter_string@@Base+0x2c>

000156c0 <btrfs_list_get_path_rootid@@Base>:
   156c0:	push	{r4, lr}
   156c2:	bl	177e4 <lookup_path_rootid@@Base>
   156c6:	subs	r4, r0, #0
   156c8:	bge.n	156d2 <btrfs_list_get_path_rootid@@Base+0x12>
   156ca:	ldr	r0, [pc, #12]	; (156d8 <btrfs_list_get_path_rootid@@Base+0x18>)
   156cc:	add	r0, pc
   156ce:	bl	1747c <__btrfs_error@@Base>
   156d2:	mov	r0, r4
   156d4:	pop	{r4, pc}
   156d6:	nop
   156d8:	str	r0, [r1, #124]	; 0x7c
   156da:	movs	r2, r0

000156dc <btrfs_list_subvols_print@@Base>:
   156dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   156e0:	sub	sp, #76	; 0x4c
   156e2:	mov	r9, r2
   156e4:	mov	r7, r3
   156e6:	ldrd	r3, r2, [sp, #112]	; 0x70
   156ea:	mov	r8, r1
   156ec:	ldr	r1, [pc, #828]	; (15a2c <btrfs_list_subvols_print@@Base+0x350>)
   156ee:	mov.w	sl, #0
   156f2:	mov.w	fp, #0
   156f6:	mov	r4, r0
   156f8:	str	r2, [sp, #12]
   156fa:	add	r1, pc
   156fc:	ldr	r2, [pc, #816]	; (15a30 <btrfs_list_subvols_print@@Base+0x354>)
   156fe:	ldr	r2, [r1, r2]
   15700:	ldr	r2, [r2, #0]
   15702:	str	r2, [sp, #68]	; 0x44
   15704:	mov.w	r2, #0
   15708:	strd	sl, fp, [sp, #40]	; 0x28
   1570c:	cmp	r3, #0
   1570e:	bne.n	157ea <btrfs_list_subvols_print@@Base+0x10e>
   15710:	add	r5, sp, #32
   15712:	mov	r0, r4
   15714:	mov	r1, r5
   15716:	bl	14a30 <rb_first_postorder@@Base+0xb0e>
   1571a:	mov	r6, r0
   1571c:	cmp	r0, #0
   1571e:	bne.n	157f6 <btrfs_list_subvols_print@@Base+0x11a>
   15720:	ldrd	r3, r4, [sp, #40]	; 0x28
   15724:	str	r0, [sp, #36]	; 0x24
   15726:	mov	r0, r5
   15728:	strd	r3, r4, [sp, #16]
   1572c:	bl	13e56 <rb_last@@Base>
   15730:	ldr	r3, [pc, #768]	; (15a34 <btrfs_list_subvols_print@@Base+0x358>)
   15732:	add	r3, pc
   15734:	str	r3, [sp, #24]
   15736:	mov	r4, r0
   15738:	cmp	r4, #0
   1573a:	bne.n	1580c <btrfs_list_subvols_print@@Base+0x130>
   1573c:	cmp	r7, #1
   1573e:	bne.n	157c4 <btrfs_list_subvols_print@@Base+0xe8>
   15740:	ldr	r5, [pc, #756]	; (15a38 <btrfs_list_subvols_print@@Base+0x35c>)
   15742:	ldr.w	r9, [pc, #760]	; 15a3c <btrfs_list_subvols_print@@Base+0x360>
   15746:	add	r5, pc
   15748:	add	r9, pc
   1574a:	mov	r8, r5
   1574c:	ldr.w	r3, [r8, #8]
   15750:	cbz	r3, 1575e <btrfs_list_subvols_print@@Base+0x82>
   15752:	ldr.w	r2, [r8]
   15756:	mov	r1, r9
   15758:	movs	r0, #1
   1575a:	blx	87f4 <__printf_chk@plt+0x4>
   1575e:	cmp	r4, #9
   15760:	bne.n	15768 <btrfs_list_subvols_print@@Base+0x8c>
   15762:	movs	r0, #10
   15764:	blx	8790 <putchar@plt+0x4>
   15768:	adds	r4, #1
   1576a:	add.w	r8, r8, #12
   1576e:	cmp	r4, #10
   15770:	bne.n	1574c <btrfs_list_subvols_print@@Base+0x70>
   15772:	ldr.w	r9, [pc, #716]	; 15a40 <btrfs_list_subvols_print@@Base+0x364>
   15776:	mov.w	r8, #0
   1577a:	ldr.w	sl, [pc, #712]	; 15a44 <btrfs_list_subvols_print@@Base+0x368>
   1577e:	add	r9, pc
   15780:	add	sl, pc
   15782:	add.w	fp, sp, #48	; 0x30
   15786:	movs	r2, #20
   15788:	movs	r1, #0
   1578a:	mov	r0, fp
   1578c:	blx	8780 <memset@plt+0x4>
   15790:	ldr	r3, [r5, #8]
   15792:	cbz	r3, 157ac <btrfs_list_subvols_print@@Base+0xd0>
   15794:	ldr	r0, [r5, #0]
   15796:	blx	8704 <strlen@plt>
   1579a:	mov	r4, r0
   1579c:	subs	r4, #1
   1579e:	bcs.w	15934 <btrfs_list_subvols_print@@Base+0x258>
   157a2:	mov	r2, fp
   157a4:	mov	r1, sl
   157a6:	movs	r0, #1
   157a8:	blx	87f4 <__printf_chk@plt+0x4>
   157ac:	cmp.w	r8, #9
   157b0:	bne.n	157b8 <btrfs_list_subvols_print@@Base+0xdc>
   157b2:	movs	r0, #10
   157b4:	blx	8790 <putchar@plt+0x4>
   157b8:	add.w	r8, r8, #1
   157bc:	adds	r5, #12
   157be:	cmp.w	r8, #10
   157c2:	bne.n	15782 <btrfs_list_subvols_print@@Base+0xa6>
   157c4:	add	r0, sp, #36	; 0x24
   157c6:	ldr.w	r9, [pc, #640]	; 15a48 <btrfs_list_subvols_print@@Base+0x36c>
   157ca:	bl	13e46 <rb_first@@Base>
   157ce:	ldr.w	sl, [pc, #636]	; 15a4c <btrfs_list_subvols_print@@Base+0x370>
   157d2:	add	r9, pc
   157d4:	add	sl, pc
   157d6:	mov	r4, r0
   157d8:	cmp	r4, #0
   157da:	bne.w	15940 <btrfs_list_subvols_print@@Base+0x264>
   157de:	ldr	r1, [pc, #624]	; (15a50 <btrfs_list_subvols_print@@Base+0x374>)
   157e0:	add	r0, sp, #32
   157e2:	add	r1, pc
   157e4:	bl	178fe <rb_free_nodes@@Base>
   157e8:	b.n	157f6 <btrfs_list_subvols_print@@Base+0x11a>
   157ea:	add	r1, sp, #40	; 0x28
   157ec:	bl	156c0 <btrfs_list_get_path_rootid@@Base>
   157f0:	mov	r6, r0
   157f2:	cmp	r0, #0
   157f4:	beq.n	15710 <btrfs_list_subvols_print@@Base+0x34>
   157f6:	ldr	r2, [pc, #604]	; (15a54 <btrfs_list_subvols_print@@Base+0x378>)
   157f8:	ldr	r3, [pc, #564]	; (15a30 <btrfs_list_subvols_print@@Base+0x354>)
   157fa:	add	r2, pc
   157fc:	ldr	r3, [r2, r3]
   157fe:	ldr	r2, [r3, #0]
   15800:	ldr	r3, [sp, #68]	; 0x44
   15802:	eors	r2, r3
   15804:	beq.w	15a22 <btrfs_list_subvols_print@@Base+0x346>
   15808:	blx	84cc <__stack_chk_fail@plt>
   1580c:	ldrd	r2, r3, [sp, #16]
   15810:	add	r0, sp, #32
   15812:	mov	r1, r4
   15814:	bl	14500 <rb_first_postorder@@Base+0x5de>
   15818:	adds	r0, #2
   1581a:	bne.n	1583a <btrfs_list_subvols_print@@Base+0x15e>
   1581c:	ldrd	r2, r3, [r4, #24]
   15820:	cmp	r3, #0
   15822:	it	eq
   15824:	cmpeq	r2, #5
   15826:	beq.n	15864 <btrfs_list_subvols_print@@Base+0x188>
   15828:	ldr	r0, [pc, #556]	; (15a58 <btrfs_list_subvols_print@@Base+0x37c>)
   1582a:	add	r0, pc
   1582c:	blx	84b4 <strdup@plt+0x4>
   15830:	movs	r3, #1
   15832:	str.w	r0, [r4, #148]	; 0x94
   15836:	str.w	r3, [r4, #152]	; 0x98
   1583a:	cmp.w	r8, #0
   1583e:	bne.n	15874 <btrfs_list_subvols_print@@Base+0x198>
   15840:	add	r5, sp, #36	; 0x24
   15842:	movs	r3, #0
   15844:	ldr.w	sl, [r5]
   15848:	cmp.w	sl, #0
   1584c:	bne.n	158b6 <btrfs_list_subvols_print@@Base+0x1da>
   1584e:	add.w	r0, r4, #12
   15852:	strd	r3, sl, [r4, #12]
   15856:	str.w	sl, [r4, #20]
   1585a:	add	r1, sp, #36	; 0x24
   1585c:	str	r0, [r5, #0]
   1585e:	bl	13b2a <rb_insert_color@@Base>
   15862:	b.n	15880 <btrfs_list_subvols_print@@Base+0x1a4>
   15864:	ldr	r0, [pc, #500]	; (15a5c <btrfs_list_subvols_print@@Base+0x380>)
   15866:	add	r0, pc
   15868:	blx	84b4 <strdup@plt+0x4>
   1586c:	movs	r3, #0
   1586e:	str.w	r0, [r4, #148]	; 0x94
   15872:	b.n	15836 <btrfs_list_subvols_print@@Base+0x15a>
   15874:	ldr.w	r2, [r8, #8]
   15878:	ldr.w	r3, [r4, #152]	; 0x98
   1587c:	cbz	r2, 1588a <btrfs_list_subvols_print@@Base+0x1ae>
   1587e:	cbnz	r3, 1588e <btrfs_list_subvols_print@@Base+0x1b2>
   15880:	mov	r0, r4
   15882:	bl	13e92 <rb_prev@@Base>
   15886:	mov	r4, r0
   15888:	b.n	15738 <btrfs_list_subvols_print@@Base+0x5c>
   1588a:	cmp	r3, #0
   1588c:	bne.n	15880 <btrfs_list_subvols_print@@Base+0x1a4>
   1588e:	mov	r5, r8
   15890:	mov.w	sl, #0
   15894:	ldr.w	r3, [r8, #4]
   15898:	cmp	sl, r3
   1589a:	bge.n	15840 <btrfs_list_subvols_print@@Base+0x164>
   1589c:	ldr	r1, [r5, #16]
   1589e:	cmp	r1, #0
   158a0:	beq.n	15840 <btrfs_list_subvols_print@@Base+0x164>
   158a2:	ldrd	r2, r3, [r5, #24]
   158a6:	mov	r0, r4
   158a8:	blx	r1
   158aa:	adds	r5, #16
   158ac:	cmp	r0, #0
   158ae:	beq.n	15880 <btrfs_list_subvols_print@@Base+0x1a4>
   158b0:	add.w	sl, sl, #1
   158b4:	b.n	15894 <btrfs_list_subvols_print@@Base+0x1b8>
   158b6:	sub.w	r1, sl, #12
   158ba:	cmp.w	r9, #0
   158be:	beq.n	158e4 <btrfs_list_subvols_print@@Base+0x208>
   158c0:	ldr.w	r3, [r9, #4]
   158c4:	cbz	r3, 158e4 <btrfs_list_subvols_print@@Base+0x208>
   158c6:	movs	r3, #0
   158c8:	str.w	r9, [sp, #8]
   158cc:	mov	fp, r3
   158ce:	str	r3, [sp, #4]
   158d0:	ldr.w	r3, [r9, #4]
   158d4:	ldr	r2, [sp, #4]
   158d6:	cmp	r2, r3
   158d8:	blt.n	158f8 <btrfs_list_subvols_print@@Base+0x21c>
   158da:	cmp.w	fp, #0
   158de:	bne.n	15880 <btrfs_list_subvols_print@@Base+0x1a4>
   158e0:	mov	r2, fp
   158e2:	b.n	158e6 <btrfs_list_subvols_print@@Base+0x20a>
   158e4:	movs	r2, #0
   158e6:	mov	r0, r4
   158e8:	bl	13f38 <rb_first_postorder@@Base+0x16>
   158ec:	cmp	r0, #0
   158ee:	bge.n	1592c <btrfs_list_subvols_print@@Base+0x250>
   158f0:	ldr	r5, [r5, #0]
   158f2:	adds	r5, #8
   158f4:	mov	r3, sl
   158f6:	b.n	15844 <btrfs_list_subvols_print@@Base+0x168>
   158f8:	ldr	r3, [sp, #8]
   158fa:	ldr	r3, [r3, #8]
   158fc:	cmp	r3, #0
   158fe:	beq.n	158da <btrfs_list_subvols_print@@Base+0x1fe>
   15900:	ldr	r2, [sp, #8]
   15902:	mov	r0, r4
   15904:	str	r1, [sp, #28]
   15906:	ldr	r2, [r2, #12]
   15908:	blx	r3
   1590a:	cmp	r0, #0
   1590c:	bne.w	15a1c <btrfs_list_subvols_print@@Base+0x340>
   15910:	ldr	r2, [sp, #8]
   15912:	ldr	r1, [sp, #28]
   15914:	ldr.w	r3, [r2, #8]!
   15918:	str	r2, [sp, #8]
   1591a:	ldr	r2, [sp, #24]
   1591c:	cmp	r3, r2
   1591e:	it	eq
   15920:	moveq.w	fp, #1
   15924:	ldr	r3, [sp, #4]
   15926:	adds	r3, #1
   15928:	str	r3, [sp, #4]
   1592a:	b.n	158d0 <btrfs_list_subvols_print@@Base+0x1f4>
   1592c:	beq.n	15880 <btrfs_list_subvols_print@@Base+0x1a4>
   1592e:	ldr	r5, [r5, #0]
   15930:	adds	r5, #4
   15932:	b.n	158f4 <btrfs_list_subvols_print@@Base+0x218>
   15934:	movs	r2, #20
   15936:	mov	r1, r9
   15938:	mov	r0, fp
   1593a:	blx	874c <__strcat_chk@plt>
   1593e:	b.n	1579c <btrfs_list_subvols_print@@Base+0xc0>
   15940:	ldrd	r2, r3, [r4, #12]
   15944:	sub.w	r5, r4, #12
   15948:	cmp	r3, #0
   1594a:	it	eq
   1594c:	cmpeq	r2, #5
   1594e:	beq.n	1599c <btrfs_list_subvols_print@@Base+0x2c0>
   15950:	cmp	r7, #1
   15952:	beq.n	159a6 <btrfs_list_subvols_print@@Base+0x2ca>
   15954:	cmp	r7, #2
   15956:	beq.n	159e6 <btrfs_list_subvols_print@@Base+0x30a>
   15958:	cbnz	r7, 1599c <btrfs_list_subvols_print@@Base+0x2c0>
   1595a:	ldr.w	fp, [pc, #260]	; 15a60 <btrfs_list_subvols_print@@Base+0x384>
   1595e:	mov	r8, r7
   15960:	add	fp, pc
   15962:	ldr.w	r3, [fp, #8]
   15966:	cbz	r3, 15988 <btrfs_list_subvols_print@@Base+0x2ac>
   15968:	ldr.w	r2, [fp]
   1596c:	mov	r1, sl
   1596e:	movs	r0, #1
   15970:	blx	87f4 <__printf_chk@plt+0x4>
   15974:	mov	r1, r8
   15976:	mov	r0, r5
   15978:	bl	14a94 <rb_first_postorder@@Base+0xb72>
   1597c:	cmp.w	r8, #9
   15980:	beq.n	15988 <btrfs_list_subvols_print@@Base+0x2ac>
   15982:	movs	r0, #32
   15984:	blx	8790 <putchar@plt+0x4>
   15988:	add.w	r8, r8, #1
   1598c:	add.w	fp, fp, #12
   15990:	cmp.w	r8, #10
   15994:	bne.n	15962 <btrfs_list_subvols_print@@Base+0x286>
   15996:	movs	r0, #10
   15998:	blx	8790 <putchar@plt+0x4>
   1599c:	mov	r0, r4
   1599e:	bl	13e66 <rb_next@@Base>
   159a2:	mov	r4, r0
   159a4:	b.n	157d8 <btrfs_list_subvols_print@@Base+0xfc>
   159a6:	ldr.w	r8, [pc, #188]	; 15a64 <btrfs_list_subvols_print@@Base+0x388>
   159aa:	mov.w	fp, #0
   159ae:	add	r8, pc
   159b0:	ldr.w	r3, [r8, #8]
   159b4:	cbz	r3, 159d6 <btrfs_list_subvols_print@@Base+0x2fa>
   159b6:	mov	r1, fp
   159b8:	mov	r0, r5
   159ba:	bl	14a94 <rb_first_postorder@@Base+0xb72>
   159be:	cmp.w	fp, #9
   159c2:	beq.n	159d6 <btrfs_list_subvols_print@@Base+0x2fa>
   159c4:	movs	r0, #9
   159c6:	blx	8790 <putchar@plt+0x4>
   159ca:	cmp.w	fp, #4
   159ce:	bne.n	159d6 <btrfs_list_subvols_print@@Base+0x2fa>
   159d0:	movs	r0, #9
   159d2:	blx	8790 <putchar@plt+0x4>
   159d6:	add.w	fp, fp, #1
   159da:	add.w	r8, r8, #12
   159de:	cmp.w	fp, #10
   159e2:	bne.n	159b0 <btrfs_list_subvols_print@@Base+0x2d4>
   159e4:	b.n	15996 <btrfs_list_subvols_print@@Base+0x2ba>
   159e6:	ldr.w	fp, [pc, #128]	; 15a68 <btrfs_list_subvols_print@@Base+0x38c>
   159ea:	mov.w	r8, #0
   159ee:	add	fp, pc
   159f0:	ldr.w	r3, [fp, #8]
   159f4:	cbz	r3, 15a0c <btrfs_list_subvols_print@@Base+0x330>
   159f6:	ldr	r3, [sp, #12]
   159f8:	cbz	r3, 15a04 <btrfs_list_subvols_print@@Base+0x328>
   159fa:	mov	r2, r3
   159fc:	mov	r1, r9
   159fe:	movs	r0, #1
   15a00:	blx	87f4 <__printf_chk@plt+0x4>
   15a04:	mov	r1, r8
   15a06:	mov	r0, r5
   15a08:	bl	14a94 <rb_first_postorder@@Base+0xb72>
   15a0c:	add.w	r8, r8, #1
   15a10:	add.w	fp, fp, #12
   15a14:	cmp.w	r8, #10
   15a18:	bne.n	159f0 <btrfs_list_subvols_print@@Base+0x314>
   15a1a:	b.n	15996 <btrfs_list_subvols_print@@Base+0x2ba>
   15a1c:	blt.w	158f0 <btrfs_list_subvols_print@@Base+0x214>
   15a20:	b.n	1592e <btrfs_list_subvols_print@@Base+0x252>
   15a22:	mov	r0, r6
   15a24:	add	sp, #76	; 0x4c
   15a26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a2a:	nop
   15a2c:			; <UNDEFINED> instruction: 0xf68e0004
   15a30:	lsls	r4, r4, #8
   15a32:	movs	r0, r0
   15a34:			; <UNDEFINED> instruction: 0xe803ffff
   15a38:	lsrs	r2, r3, #7
   15a3a:	movs	r5, r0
   15a3c:	str	r0, [r0, #120]	; 0x78
   15a3e:	movs	r2, r0
   15a40:	ldr	r4, [pc, #968]	; (15e0c <btrfs_list_path_for_root@@Base+0x1f4>)
   15a42:	movs	r2, r0
   15a44:	str	r0, [r1, #116]	; 0x74
   15a46:	movs	r2, r0
   15a48:	add	r3, sp, #880	; 0x370
   15a4a:	movs	r2, r0
   15a4c:	str	r0, [r7, #108]	; 0x6c
   15a4e:	movs	r2, r0
   15a50:	ldmia.w	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   15a54:			; <UNDEFINED> instruction: 0xf58e0004
   15a58:	str	r5, [r1, #104]	; 0x68
   15a5a:	movs	r2, r0
   15a5c:	str	r1, [r3, #100]	; 0x64
   15a5e:	movs	r2, r0
   15a60:	lsls	r0, r0, #31
   15a62:	movs	r5, r0
   15a64:	lsls	r2, r6, #29
   15a66:	movs	r5, r0
   15a68:	lsls	r2, r6, #28
   15a6a:	movs	r5, r0

00015a6c <btrfs_get_toplevel_subvol@@Base>:
   15a6c:	ldr	r2, [pc, #152]	; (15b08 <btrfs_get_toplevel_subvol@@Base+0x9c>)
   15a6e:	ldr	r3, [pc, #156]	; (15b0c <btrfs_get_toplevel_subvol@@Base+0xa0>)
   15a70:	add	r2, pc
   15a72:	push	{r4, r5, r6, r7, lr}
   15a74:	sub	sp, #28
   15a76:	ldr	r3, [r2, r3]
   15a78:	mov	r5, r1
   15a7a:	add	r1, sp, #8
   15a7c:	mov	r7, r0
   15a7e:	ldr	r3, [r3, #0]
   15a80:	str	r3, [sp, #20]
   15a82:	mov.w	r3, #0
   15a86:	bl	156c0 <btrfs_list_get_path_rootid@@Base>
   15a8a:	mov	r4, r0
   15a8c:	cbnz	r0, 15ae6 <btrfs_get_toplevel_subvol@@Base+0x7a>
   15a8e:	add	r6, sp, #4
   15a90:	mov	r0, r7
   15a92:	mov	r1, r6
   15a94:	bl	14a30 <rb_first_postorder@@Base+0xb0e>
   15a98:	mov	r4, r0
   15a9a:	cbnz	r0, 15ae6 <btrfs_get_toplevel_subvol@@Base+0x7a>
   15a9c:	mov	r0, r6
   15a9e:	bl	13e46 <rb_first@@Base>
   15aa2:	ldrd	r2, r3, [r0, #24]
   15aa6:	mov	r1, r0
   15aa8:	cmp	r3, #0
   15aaa:	it	eq
   15aac:	cmpeq	r2, #5
   15aae:	bne.n	15afa <btrfs_get_toplevel_subvol@@Base+0x8e>
   15ab0:	ldr	r7, [pc, #92]	; (15b10 <btrfs_get_toplevel_subvol@@Base+0xa4>)
   15ab2:	movs	r2, #140	; 0x8c
   15ab4:	mov	r0, r5
   15ab6:	add	r7, pc
   15ab8:	blx	843c <memcpy@plt+0x4>
   15abc:	mov	r0, r7
   15abe:	blx	84b4 <strdup@plt+0x4>
   15ac2:	str.w	r0, [r5, #140]	; 0x8c
   15ac6:	ldr	r0, [pc, #76]	; (15b14 <btrfs_get_toplevel_subvol@@Base+0xa8>)
   15ac8:	add	r0, pc
   15aca:	blx	84b4 <strdup@plt+0x4>
   15ace:	str.w	r0, [r5, #144]	; 0x90
   15ad2:	mov	r0, r7
   15ad4:	blx	84b4 <strdup@plt+0x4>
   15ad8:	ldr	r1, [pc, #60]	; (15b18 <btrfs_get_toplevel_subvol@@Base+0xac>)
   15ada:	add	r1, pc
   15adc:	str.w	r0, [r5, #148]	; 0x94
   15ae0:	mov	r0, r6
   15ae2:	bl	178fe <rb_free_nodes@@Base>
   15ae6:	ldr	r2, [pc, #52]	; (15b1c <btrfs_get_toplevel_subvol@@Base+0xb0>)
   15ae8:	ldr	r3, [pc, #32]	; (15b0c <btrfs_get_toplevel_subvol@@Base+0xa0>)
   15aea:	add	r2, pc
   15aec:	ldr	r3, [r2, r3]
   15aee:	ldr	r2, [r3, #0]
   15af0:	ldr	r3, [sp, #20]
   15af2:	eors	r2, r3
   15af4:	beq.n	15b00 <btrfs_get_toplevel_subvol@@Base+0x94>
   15af6:	blx	84cc <__stack_chk_fail@plt>
   15afa:	mvn.w	r4, #1
   15afe:	b.n	15ae6 <btrfs_get_toplevel_subvol@@Base+0x7a>
   15b00:	mov	r0, r4
   15b02:	add	sp, #28
   15b04:	pop	{r4, r5, r6, r7, pc}
   15b06:	nop
   15b08:			; <UNDEFINED> instruction: 0xf3180004
   15b0c:	lsls	r4, r4, #8
   15b0e:	movs	r0, r0
   15b10:	str	r5, [r3, #4]
   15b12:	movs	r2, r0
   15b14:	str	r7, [r4, #24]
   15b16:	movs	r2, r0
   15b18:	b.n	156aa <btrfs_list_parse_filter_string@@Base+0x2e>
   15b1a:	vrshr.u64	d31, d14, #1
   15b1e:	movs	r4, r0

00015b20 <btrfs_get_subvol@@Base>:
   15b20:	ldr	r2, [pc, #228]	; (15c08 <btrfs_get_subvol@@Base+0xe8>)
   15b22:	ldr	r3, [pc, #232]	; (15c0c <btrfs_get_subvol@@Base+0xec>)
   15b24:	add	r2, pc
   15b26:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15b2a:	sub	sp, #28
   15b2c:	ldr	r3, [r2, r3]
   15b2e:	mov	r6, r1
   15b30:	add	r1, sp, #8
   15b32:	mov	r4, r0
   15b34:	ldr	r3, [r3, #0]
   15b36:	str	r3, [sp, #20]
   15b38:	mov.w	r3, #0
   15b3c:	bl	156c0 <btrfs_list_get_path_rootid@@Base>
   15b40:	mov	r5, r0
   15b42:	cmp	r0, #0
   15b44:	bne.n	15bca <btrfs_get_subvol@@Base+0xaa>
   15b46:	add	r7, sp, #4
   15b48:	mov	r0, r4
   15b4a:	mov	r1, r7
   15b4c:	bl	14a30 <rb_first_postorder@@Base+0xb0e>
   15b50:	mov	r5, r0
   15b52:	cbnz	r0, 15bca <btrfs_get_subvol@@Base+0xaa>
   15b54:	mov	r0, r7
   15b56:	add.w	r9, r6, #92	; 0x5c
   15b5a:	bl	13e46 <rb_first@@Base>
   15b5e:	mov	r4, r0
   15b60:	cbz	r4, 15bc0 <btrfs_get_subvol@@Base+0xa0>
   15b62:	ldrd	r2, r3, [sp, #8]
   15b66:	mov	r1, r4
   15b68:	mov	r0, r7
   15b6a:	bl	14500 <rb_first_postorder@@Base+0x5de>
   15b6e:	cmn.w	r0, #2
   15b72:	mov	r8, r0
   15b74:	bne.n	15b82 <btrfs_get_subvol@@Base+0x62>
   15b76:	mov	r0, r4
   15b78:	bl	13e66 <rb_next@@Base>
   15b7c:	mov	r4, r0
   15b7e:	mov	r5, r8
   15b80:	b.n	15b60 <btrfs_get_subvol@@Base+0x40>
   15b82:	movs	r2, #0
   15b84:	mov	r1, r4
   15b86:	mov	r0, r6
   15b88:	bl	13f38 <rb_first_postorder@@Base+0x16>
   15b8c:	cbnz	r0, 15bde <btrfs_get_subvol@@Base+0xbe>
   15b8e:	movs	r2, #140	; 0x8c
   15b90:	mov	r1, r4
   15b92:	mov	r0, r6
   15b94:	blx	843c <memcpy@plt+0x4>
   15b98:	ldr.w	r0, [r4, #140]	; 0x8c
   15b9c:	cbnz	r0, 15bf8 <btrfs_get_subvol@@Base+0xd8>
   15b9e:	str.w	r0, [r6, #140]	; 0x8c
   15ba2:	ldr.w	r0, [r4, #144]	; 0x90
   15ba6:	cbz	r0, 15bac <btrfs_get_subvol@@Base+0x8c>
   15ba8:	blx	84b4 <strdup@plt+0x4>
   15bac:	str.w	r0, [r6, #144]	; 0x90
   15bb0:	ldr.w	r0, [r4, #148]	; 0x94
   15bb4:	cbz	r0, 15bba <btrfs_get_subvol@@Base+0x9a>
   15bb6:	blx	84b4 <strdup@plt+0x4>
   15bba:	movs	r5, #0
   15bbc:	str.w	r0, [r6, #148]	; 0x94
   15bc0:	ldr	r1, [pc, #76]	; (15c10 <btrfs_get_subvol@@Base+0xf0>)
   15bc2:	mov	r0, r7
   15bc4:	add	r1, pc
   15bc6:	bl	178fe <rb_free_nodes@@Base>
   15bca:	ldr	r2, [pc, #72]	; (15c14 <btrfs_get_subvol@@Base+0xf4>)
   15bcc:	ldr	r3, [pc, #60]	; (15c0c <btrfs_get_subvol@@Base+0xec>)
   15bce:	add	r2, pc
   15bd0:	ldr	r3, [r2, r3]
   15bd2:	ldr	r2, [r3, #0]
   15bd4:	ldr	r3, [sp, #20]
   15bd6:	eors	r2, r3
   15bd8:	beq.n	15bfe <btrfs_get_subvol@@Base+0xde>
   15bda:	blx	84cc <__stack_chk_fail@plt>
   15bde:	add.w	r1, r4, #92	; 0x5c
   15be2:	mov	r0, r9
   15be4:	blx	8500 <uuid_compare@plt>
   15be8:	cmp	r0, #0
   15bea:	beq.n	15b8e <btrfs_get_subvol@@Base+0x6e>
   15bec:	mov	r0, r4
   15bee:	mov	r8, r5
   15bf0:	bl	13e66 <rb_next@@Base>
   15bf4:	mov	r4, r0
   15bf6:	b.n	15b7e <btrfs_get_subvol@@Base+0x5e>
   15bf8:	blx	84b4 <strdup@plt+0x4>
   15bfc:	b.n	15b9e <btrfs_get_subvol@@Base+0x7e>
   15bfe:	mov	r0, r5
   15c00:	add	sp, #28
   15c02:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15c06:	nop
   15c08:			; <UNDEFINED> instruction: 0xf2640004
   15c0c:	lsls	r4, r4, #8
   15c0e:	movs	r0, r0
   15c10:	b.n	155ce <btrfs_list_parse_sort_string@@Base+0xd6>
   15c12:	vsra.u64	d31, d26, #1
   15c16:	movs	r4, r0

00015c18 <btrfs_list_path_for_root@@Base>:
   15c18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15c1c:	mov	r6, r2
   15c1e:	ldr	r2, [pc, #168]	; (15cc8 <btrfs_list_path_for_root@@Base+0xb0>)
   15c20:	mov	r7, r3
   15c22:	ldr	r3, [pc, #168]	; (15ccc <btrfs_list_path_for_root@@Base+0xb4>)
   15c24:	sub	sp, #28
   15c26:	add	r2, pc
   15c28:	add	r1, sp, #8
   15c2a:	mov	r5, r0
   15c2c:	ldr	r3, [r2, r3]
   15c2e:	ldr	r3, [r3, #0]
   15c30:	str	r3, [sp, #20]
   15c32:	mov.w	r3, #0
   15c36:	bl	156c0 <btrfs_list_get_path_rootid@@Base>
   15c3a:	mov	r9, r0
   15c3c:	cbz	r0, 15c54 <btrfs_list_path_for_root@@Base+0x3c>
   15c3e:	mov	r4, r0
   15c40:	ldr	r2, [pc, #140]	; (15cd0 <btrfs_list_path_for_root@@Base+0xb8>)
   15c42:	ldr	r3, [pc, #136]	; (15ccc <btrfs_list_path_for_root@@Base+0xb4>)
   15c44:	add	r2, pc
   15c46:	ldr	r3, [r2, r3]
   15c48:	ldr	r2, [r3, #0]
   15c4a:	ldr	r3, [sp, #20]
   15c4c:	eors	r2, r3
   15c4e:	beq.n	15cc0 <btrfs_list_path_for_root@@Base+0xa8>
   15c50:	blx	84cc <__stack_chk_fail@plt>
   15c54:	add.w	r8, sp, #4
   15c58:	mov	r0, r5
   15c5a:	mov	r1, r8
   15c5c:	bl	1472a <rb_first_postorder@@Base+0x808>
   15c60:	subs	r4, r0, #0
   15c62:	blt.n	15c40 <btrfs_list_path_for_root@@Base+0x28>
   15c64:	mov	r1, r8
   15c66:	mov	r0, r5
   15c68:	bl	14704 <rb_first_postorder@@Base+0x7e2>
   15c6c:	subs	r4, r0, #0
   15c6e:	blt.n	15c40 <btrfs_list_path_for_root@@Base+0x28>
   15c70:	mov	r0, r8
   15c72:	mov	r4, r9
   15c74:	bl	13e56 <rb_last@@Base>
   15c78:	mov	r5, r0
   15c7a:	cbnz	r5, 15c88 <btrfs_list_path_for_root@@Base+0x70>
   15c7c:	ldr	r1, [pc, #84]	; (15cd4 <btrfs_list_path_for_root@@Base+0xbc>)
   15c7e:	mov	r0, r8
   15c80:	add	r1, pc
   15c82:	bl	178fe <rb_free_nodes@@Base>
   15c86:	b.n	15c40 <btrfs_list_path_for_root@@Base+0x28>
   15c88:	ldrd	r2, r3, [sp, #8]
   15c8c:	mov	r1, r5
   15c8e:	mov	r0, r8
   15c90:	bl	14500 <rb_first_postorder@@Base+0x5de>
   15c94:	ldrd	r2, r3, [r5, #24]
   15c98:	adds	r0, #2
   15c9a:	bne.n	15ca8 <btrfs_list_path_for_root@@Base+0x90>
   15c9c:	cmp	r3, r7
   15c9e:	it	eq
   15ca0:	cmpeq	r2, r6
   15ca2:	bne.n	15cb6 <btrfs_list_path_for_root@@Base+0x9e>
   15ca4:	movs	r4, #0
   15ca6:	b.n	15c7c <btrfs_list_path_for_root@@Base+0x64>
   15ca8:	cmp	r3, r7
   15caa:	ittt	eq
   15cac:	cmpeq	r2, r6
   15cae:	ldreq.w	r4, [r5, #148]	; 0x94
   15cb2:	streq.w	r9, [r5, #148]	; 0x94
   15cb6:	mov	r0, r5
   15cb8:	bl	13e92 <rb_prev@@Base>
   15cbc:	mov	r5, r0
   15cbe:	b.n	15c7a <btrfs_list_path_for_root@@Base+0x62>
   15cc0:	mov	r0, r4
   15cc2:	add	sp, #28
   15cc4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15cc8:	sbc.w	r0, r2, #4
   15ccc:	lsls	r4, r4, #8
   15cce:	movs	r0, r0
   15cd0:	adc.w	r0, r4, #4
   15cd4:	b.n	1551a <btrfs_list_parse_sort_string@@Base+0x22>
   15cd6:	vtbl.8	d30, {d15-d16}, d29
   15cda:	mvns	r0, r6
   15cdc:	ldrd	r2, r3, [r0, #24]
   15ce0:	ldrd	ip, r0, [r0, #32]
   15ce4:	ldrd	r4, r5, [r1, #8]
   15ce8:	adds.w	r8, r2, ip
   15cec:	adc.w	r9, r3, r0
   15cf0:	cmp	r5, r9
   15cf2:	it	eq
   15cf4:	cmpeq	r4, r8
   15cf6:	bcs.n	15d14 <btrfs_list_path_for_root@@Base+0xfc>
   15cf8:	ldrd	r0, r1, [r1, #16]
   15cfc:	adds	r6, r4, r0
   15cfe:	adc.w	r7, r5, r1
   15d02:	cmp	r3, r7
   15d04:	it	eq
   15d06:	cmpeq	r2, r6
   15d08:	ite	cs
   15d0a:	movcs.w	r0, #4294967295	; 0xffffffff
   15d0e:	movcc	r0, #0
   15d10:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15d14:	movs	r0, #1
   15d16:	b.n	15d10 <btrfs_list_path_for_root@@Base+0xf8>
   15d18:	ldr	r2, [pc, #64]	; (15d5c <btrfs_list_path_for_root@@Base+0x144>)
   15d1a:	ldr	r3, [pc, #68]	; (15d60 <btrfs_list_path_for_root@@Base+0x148>)
   15d1c:	add	r2, pc
   15d1e:	push	{lr}
   15d20:	sub	sp, #36	; 0x24
   15d22:	ldr	r3, [r2, r3]
   15d24:	ldr	r3, [r3, #0]
   15d26:	str	r3, [sp, #28]
   15d28:	mov.w	r3, #0
   15d2c:	ldrd	r2, r3, [r1, #24]
   15d30:	strd	r2, r3, [sp, #8]
   15d34:	ldrd	r2, r3, [r1, #32]
   15d38:	mov	r1, sp
   15d3a:	strd	r2, r3, [sp, #16]
   15d3e:	bl	15cd8 <btrfs_list_path_for_root@@Base+0xc0>
   15d42:	ldr	r2, [pc, #32]	; (15d64 <btrfs_list_path_for_root@@Base+0x14c>)
   15d44:	ldr	r3, [pc, #24]	; (15d60 <btrfs_list_path_for_root@@Base+0x148>)
   15d46:	add	r2, pc
   15d48:	ldr	r3, [r2, r3]
   15d4a:	ldr	r2, [r3, #0]
   15d4c:	ldr	r3, [sp, #28]
   15d4e:	eors	r2, r3
   15d50:	beq.n	15d56 <btrfs_list_path_for_root@@Base+0x13e>
   15d52:	blx	84cc <__stack_chk_fail@plt>
   15d56:	add	sp, #36	; 0x24
   15d58:	ldr.w	pc, [sp], #4
   15d5c:	orn	r0, ip, #4
   15d60:	lsls	r4, r4, #8
   15d62:	movs	r0, r0
   15d64:	orr.w	r0, r2, #4
   15d68:	b.w	83ec <free@plt>
   15d6c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   15d70:	ldrd	r2, r3, [r0, #16]
   15d74:	ldrd	r8, r9, [r1]
   15d78:	cmp	r3, r9
   15d7a:	it	eq
   15d7c:	cmpeq	r2, r8
   15d7e:	bcc.n	15dc8 <btrfs_list_path_for_root@@Base+0x1b0>
   15d80:	cmp	r9, r3
   15d82:	it	eq
   15d84:	cmpeq	r8, r2
   15d86:	bcc.n	15dc2 <btrfs_list_path_for_root@@Base+0x1aa>
   15d88:	ldrd	r2, r3, [r0, #24]
   15d8c:	ldrd	ip, r0, [r0, #32]
   15d90:	ldrd	r8, r9, [r1, #8]
   15d94:	adds.w	r6, r2, ip
   15d98:	adc.w	r7, r3, r0
   15d9c:	cmp	r9, r7
   15d9e:	it	eq
   15da0:	cmpeq	r8, r6
   15da2:	bcs.n	15dc8 <btrfs_list_path_for_root@@Base+0x1b0>
   15da4:	ldrd	r0, r1, [r1, #16]
   15da8:	adds.w	r4, r8, r0
   15dac:	adc.w	r5, r9, r1
   15db0:	cmp	r3, r5
   15db2:	it	eq
   15db4:	cmpeq	r2, r4
   15db6:	ite	cs
   15db8:	movcs.w	r0, #4294967295	; 0xffffffff
   15dbc:	movcc	r0, #0
   15dbe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   15dc2:	mov.w	r0, #4294967295	; 0xffffffff
   15dc6:	b.n	15dbe <btrfs_list_path_for_root@@Base+0x1a6>
   15dc8:	movs	r0, #1
   15dca:	b.n	15dbe <btrfs_list_path_for_root@@Base+0x1a6>
   15dcc:	ldr	r2, [pc, #72]	; (15e18 <btrfs_list_path_for_root@@Base+0x200>)
   15dce:	ldr	r3, [pc, #76]	; (15e1c <btrfs_list_path_for_root@@Base+0x204>)
   15dd0:	add	r2, pc
   15dd2:	push	{lr}
   15dd4:	sub	sp, #36	; 0x24
   15dd6:	ldr	r3, [r2, r3]
   15dd8:	ldr	r3, [r3, #0]
   15dda:	str	r3, [sp, #28]
   15ddc:	mov.w	r3, #0
   15de0:	ldrd	r2, r3, [r1, #16]
   15de4:	strd	r2, r3, [sp]
   15de8:	ldrd	r2, r3, [r1, #24]
   15dec:	strd	r2, r3, [sp, #8]
   15df0:	ldrd	r2, r3, [r1, #32]
   15df4:	mov	r1, sp
   15df6:	strd	r2, r3, [sp, #16]
   15dfa:	bl	15d6c <btrfs_list_path_for_root@@Base+0x154>
   15dfe:	ldr	r2, [pc, #32]	; (15e20 <btrfs_list_path_for_root@@Base+0x208>)
   15e00:	ldr	r3, [pc, #24]	; (15e1c <btrfs_list_path_for_root@@Base+0x204>)
   15e02:	add	r2, pc
   15e04:	ldr	r3, [r2, r3]
   15e06:	ldr	r2, [r3, #0]
   15e08:	ldr	r3, [sp, #28]
   15e0a:	eors	r2, r3
   15e0c:	beq.n	15e12 <btrfs_list_path_for_root@@Base+0x1fa>
   15e0e:	blx	84cc <__stack_chk_fail@plt>
   15e12:	add	sp, #36	; 0x24
   15e14:	ldr.w	pc, [sp], #4
   15e18:	vext.8	d0, d8, d4, #0
   15e1c:	lsls	r4, r4, #8
   15e1e:	movs	r0, r0
   15e20:	vaddl.s8	q0, d6, d4
   15e24:	ldr.w	ip, [pc, #80]	; 15e78 <btrfs_list_path_for_root@@Base+0x260>
   15e28:	ldr	r4, [pc, #80]	; (15e7c <btrfs_list_path_for_root@@Base+0x264>)
   15e2a:	add	ip, pc
   15e2c:	ldr	r3, [pc, #80]	; (15e80 <btrfs_list_path_for_root@@Base+0x268>)
   15e2e:	push	{lr}
   15e30:	sub	sp, #92	; 0x5c
   15e32:	ldr.w	r4, [ip, r4]
   15e36:	add	r3, pc
   15e38:	ldr	r4, [r4, #0]
   15e3a:	str	r4, [sp, #84]	; 0x54
   15e3c:	mov.w	r4, #0
   15e40:	ldr	r4, [pc, #64]	; (15e84 <btrfs_list_path_for_root@@Base+0x26c>)
   15e42:	ldr	r4, [r3, r4]
   15e44:	ldr	r3, [pc, #64]	; (15e88 <btrfs_list_path_for_root@@Base+0x270>)
   15e46:	strd	r0, r2, [sp, #8]
   15e4a:	add	r3, pc
   15e4c:	ldr	r2, [pc, #60]	; (15e8c <btrfs_list_path_for_root@@Base+0x274>)
   15e4e:	strd	r1, r3, [sp]
   15e52:	movs	r1, #1
   15e54:	ldr	r3, [pc, #56]	; (15e90 <btrfs_list_path_for_root@@Base+0x278>)
   15e56:	add	r2, pc
   15e58:	ldr	r0, [r4, #0]
   15e5a:	add	r4, sp, #20
   15e5c:	add	r3, pc
   15e5e:	blx	881c <__fprintf_chk@plt+0x4>
   15e62:	movs	r1, #16
   15e64:	mov	r0, r4
   15e66:	blx	8680 <backtrace@plt>
   15e6a:	movs	r2, #2
   15e6c:	mov	r1, r0
   15e6e:	mov	r0, r4
   15e70:	blx	8990 <backtrace_symbols_fd@plt>
   15e74:	blx	8948 <abort@plt>
   15e78:	vhadd.s16	d16, d14, d4
   15e7c:	lsls	r4, r4, #8
   15e7e:	movs	r0, r0
   15e80:	vhadd.s16	d16, d2, d4
   15e84:	lsls	r4, r6, #8
   15e86:	movs	r0, r0
   15e88:	str	r7, [r6, #24]
   15e8a:	movs	r2, r0
   15e8c:	subs	r4, #59	; 0x3b
   15e8e:	movs	r2, r0
   15e90:	str	r2, [r1, #20]
   15e92:	movs	r2, r0

00015e94 <cache_tree_init@@Base>:
   15e94:	movs	r3, #0
   15e96:	str	r3, [r0, #0]
   15e98:	bx	lr

00015e9a <insert_cache_extent@@Base>:
   15e9a:	ldr	r2, [pc, #8]	; (15ea4 <insert_cache_extent@@Base+0xa>)
   15e9c:	add	r2, pc
   15e9e:	b.w	17878 <rb_insert@@Base>
   15ea2:	nop
   15ea4:	mrc2	15, 3, pc, cr9, cr15, {7}

00015ea8 <add_cache_extent@@Base>:
   15ea8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   15eac:	mov	r5, r0
   15eae:	movs	r0, #40	; 0x28
   15eb0:	mov	r7, r2
   15eb2:	mov	r6, r3
   15eb4:	blx	8634 <malloc@plt+0x4>
   15eb8:	ldr.w	r8, [pc, #72]	; 15f04 <add_cache_extent@@Base+0x5c>
   15ebc:	add	r8, pc
   15ebe:	mov	r4, r0
   15ec0:	cbz	r0, 15eee <add_cache_extent@@Base+0x46>
   15ec2:	movs	r2, #0
   15ec4:	movs	r3, #0
   15ec6:	strd	r2, r3, [r0, #16]
   15eca:	mov	r1, r0
   15ecc:	ldrd	r2, r3, [sp, #24]
   15ed0:	strd	r7, r6, [r0, #24]
   15ed4:	strd	r2, r3, [r0, #32]
   15ed8:	mov	r0, r5
   15eda:	bl	15e9a <insert_cache_extent@@Base>
   15ede:	mov	r5, r0
   15ee0:	cbz	r0, 15ee8 <add_cache_extent@@Base+0x40>
   15ee2:	mov	r0, r4
   15ee4:	blx	83f0 <free@plt+0x4>
   15ee8:	mov	r0, r5
   15eea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   15eee:	ldr	r3, [pc, #24]	; (15f08 <add_cache_extent@@Base+0x60>)
   15ef0:	ldr	r0, [pc, #24]	; (15f0c <add_cache_extent@@Base+0x64>)
   15ef2:	ldr.w	r3, [r8, r3]
   15ef6:	add	r0, pc
   15ef8:	ldr	r1, [r3, #0]
   15efa:	blx	8930 <fputs@plt+0x4>
   15efe:	movs	r0, #1
   15f00:	blx	86f8 <exit@plt>
   15f04:	cdp	0, 12, cr0, cr12, cr4, {0}
   15f08:	lsls	r4, r6, #8
   15f0a:	movs	r0, r0
   15f0c:	ldrb	r7, [r3, r5]
   15f0e:	movs	r2, r0

00015f10 <insert_cache_extent2@@Base>:
   15f10:	ldr	r2, [pc, #4]	; (15f18 <insert_cache_extent2@@Base+0x8>)
   15f12:	add	r2, pc
   15f14:	b.w	17878 <rb_insert@@Base>
   15f18:	mrc2	15, 5, pc, cr7, cr15, {7}

00015f1c <lookup_cache_extent@@Base>:
   15f1c:	ldr.w	ip, [pc, #72]	; 15f68 <lookup_cache_extent@@Base+0x4c>
   15f20:	ldr	r1, [pc, #72]	; (15f6c <lookup_cache_extent@@Base+0x50>)
   15f22:	add	ip, pc
   15f24:	push	{lr}
   15f26:	sub	sp, #36	; 0x24
   15f28:	ldr.w	r1, [ip, r1]
   15f2c:	ldr	r1, [r1, #0]
   15f2e:	str	r1, [sp, #28]
   15f30:	mov.w	r1, #0
   15f34:	strd	r2, r3, [sp, #8]
   15f38:	ldrd	r2, r3, [sp, #40]	; 0x28
   15f3c:	mov	r1, sp
   15f3e:	strd	r2, r3, [sp, #16]
   15f42:	movs	r3, #0
   15f44:	ldr	r2, [pc, #40]	; (15f70 <lookup_cache_extent@@Base+0x54>)
   15f46:	add	r2, pc
   15f48:	bl	178c0 <rb_search@@Base>
   15f4c:	ldr	r2, [pc, #36]	; (15f74 <lookup_cache_extent@@Base+0x58>)
   15f4e:	ldr	r3, [pc, #28]	; (15f6c <lookup_cache_extent@@Base+0x50>)
   15f50:	add	r2, pc
   15f52:	ldr	r3, [r2, r3]
   15f54:	ldr	r2, [r3, #0]
   15f56:	ldr	r3, [sp, #28]
   15f58:	eors	r2, r3
   15f5a:	beq.n	15f60 <lookup_cache_extent@@Base+0x44>
   15f5c:	blx	84cc <__stack_chk_fail@plt>
   15f60:	add	sp, #36	; 0x24
   15f62:	ldr.w	pc, [sp], #4
   15f66:	nop
   15f68:	cdp	0, 6, cr0, cr6, cr4, {0}
   15f6c:	lsls	r4, r4, #8
   15f6e:	movs	r0, r0
   15f70:	stc2	15, cr15, [pc, #1020]	; 16370 <add_merge_cache_extent@@Base+0x284>
   15f74:	cdp	0, 3, cr0, cr8, cr4, {0}

00015f78 <lookup_cache_extent2@@Base>:
   15f78:	ldr.w	ip, [pc, #80]	; 15fcc <lookup_cache_extent2@@Base+0x54>
   15f7c:	ldr	r1, [pc, #80]	; (15fd0 <lookup_cache_extent2@@Base+0x58>)
   15f7e:	add	ip, pc
   15f80:	push	{lr}
   15f82:	sub	sp, #36	; 0x24
   15f84:	ldr.w	r1, [ip, r1]
   15f88:	ldr	r1, [r1, #0]
   15f8a:	str	r1, [sp, #28]
   15f8c:	mov.w	r1, #0
   15f90:	strd	r2, r3, [sp]
   15f94:	ldrd	r2, r3, [sp, #40]	; 0x28
   15f98:	mov	r1, sp
   15f9a:	strd	r2, r3, [sp, #8]
   15f9e:	ldrd	r2, r3, [sp, #48]	; 0x30
   15fa2:	strd	r2, r3, [sp, #16]
   15fa6:	movs	r3, #0
   15fa8:	ldr	r2, [pc, #40]	; (15fd4 <lookup_cache_extent2@@Base+0x5c>)
   15faa:	add	r2, pc
   15fac:	bl	178c0 <rb_search@@Base>
   15fb0:	ldr	r2, [pc, #36]	; (15fd8 <lookup_cache_extent2@@Base+0x60>)
   15fb2:	ldr	r3, [pc, #28]	; (15fd0 <lookup_cache_extent2@@Base+0x58>)
   15fb4:	add	r2, pc
   15fb6:	ldr	r3, [r2, r3]
   15fb8:	ldr	r2, [r3, #0]
   15fba:	ldr	r3, [sp, #28]
   15fbc:	eors	r2, r3
   15fbe:	beq.n	15fc4 <lookup_cache_extent2@@Base+0x4c>
   15fc0:	blx	84cc <__stack_chk_fail@plt>
   15fc4:	add	sp, #36	; 0x24
   15fc6:	ldr.w	pc, [sp], #4
   15fca:	nop
   15fcc:	cdp	0, 0, cr0, cr10, cr4, {0}
   15fd0:	lsls	r4, r4, #8
   15fd2:	movs	r0, r0
   15fd4:	ldc2	15, cr15, [pc, #1020]!	; 163d4 <add_merge_cache_extent@@Base+0x2e8>
   15fd8:	ldcl	0, cr0, [r4, #16]

00015fdc <search_cache_extent@@Base>:
   15fdc:	ldr.w	ip, [pc, #76]	; 1602c <search_cache_extent@@Base+0x50>
   15fe0:	ldr	r1, [pc, #76]	; (16030 <search_cache_extent@@Base+0x54>)
   15fe2:	add	ip, pc
   15fe4:	push	{lr}
   15fe6:	sub	sp, #44	; 0x2c
   15fe8:	ldr.w	r1, [ip, r1]
   15fec:	ldr	r1, [r1, #0]
   15fee:	str	r1, [sp, #36]	; 0x24
   15ff0:	mov.w	r1, #0
   15ff4:	strd	r2, r3, [sp, #16]
   15ff8:	movs	r2, #1
   15ffa:	movs	r3, #0
   15ffc:	strd	r2, r3, [sp, #24]
   16000:	add	r1, sp, #8
   16002:	ldr	r2, [pc, #48]	; (16034 <search_cache_extent@@Base+0x58>)
   16004:	add	r3, sp, #4
   16006:	add	r2, pc
   16008:	bl	178c0 <rb_search@@Base>
   1600c:	cbnz	r0, 16010 <search_cache_extent@@Base+0x34>
   1600e:	ldr	r0, [sp, #4]
   16010:	ldr	r2, [pc, #36]	; (16038 <search_cache_extent@@Base+0x5c>)
   16012:	ldr	r3, [pc, #28]	; (16030 <search_cache_extent@@Base+0x54>)
   16014:	add	r2, pc
   16016:	ldr	r3, [r2, r3]
   16018:	ldr	r2, [r3, #0]
   1601a:	ldr	r3, [sp, #36]	; 0x24
   1601c:	eors	r2, r3
   1601e:	beq.n	16024 <search_cache_extent@@Base+0x48>
   16020:	blx	84cc <__stack_chk_fail@plt>
   16024:	add	sp, #44	; 0x2c
   16026:	ldr.w	pc, [sp], #4
   1602a:	nop
   1602c:	stc	0, cr0, [r6, #16]!
   16030:	lsls	r4, r4, #8
   16032:	movs	r0, r0
   16034:	stc2l	15, cr15, [pc], {255}	; 0xff
   16038:	ldcl	0, cr0, [r4, #-16]!

0001603c <search_cache_extent2@@Base>:
   1603c:	ldr.w	ip, [pc, #84]	; 16094 <search_cache_extent2@@Base+0x58>
   16040:	ldr	r1, [pc, #84]	; (16098 <search_cache_extent2@@Base+0x5c>)
   16042:	add	ip, pc
   16044:	push	{lr}
   16046:	sub	sp, #44	; 0x2c
   16048:	ldr.w	r1, [ip, r1]
   1604c:	ldr	r1, [r1, #0]
   1604e:	str	r1, [sp, #36]	; 0x24
   16050:	mov.w	r1, #0
   16054:	strd	r2, r3, [sp, #8]
   16058:	ldrd	r2, r3, [sp, #48]	; 0x30
   1605c:	add	r1, sp, #8
   1605e:	strd	r2, r3, [sp, #16]
   16062:	movs	r2, #1
   16064:	movs	r3, #0
   16066:	strd	r2, r3, [sp, #24]
   1606a:	ldr	r2, [pc, #48]	; (1609c <search_cache_extent2@@Base+0x60>)
   1606c:	add	r3, sp, #4
   1606e:	add	r2, pc
   16070:	bl	178c0 <rb_search@@Base>
   16074:	cbnz	r0, 16078 <search_cache_extent2@@Base+0x3c>
   16076:	ldr	r0, [sp, #4]
   16078:	ldr	r2, [pc, #36]	; (160a0 <search_cache_extent2@@Base+0x64>)
   1607a:	ldr	r3, [pc, #28]	; (16098 <search_cache_extent2@@Base+0x5c>)
   1607c:	add	r2, pc
   1607e:	ldr	r3, [r2, r3]
   16080:	ldr	r2, [r3, #0]
   16082:	ldr	r3, [sp, #36]	; 0x24
   16084:	eors	r2, r3
   16086:	beq.n	1608c <search_cache_extent2@@Base+0x50>
   16088:	blx	84cc <__stack_chk_fail@plt>
   1608c:	add	sp, #44	; 0x2c
   1608e:	ldr.w	pc, [sp], #4
   16092:	nop
   16094:	stcl	0, cr0, [r6, #-16]
   16098:	lsls	r4, r4, #8
   1609a:	movs	r0, r0
   1609c:	ldc2l	15, cr15, [fp], #1020	; 0x3fc
   160a0:	stc	0, cr0, [ip, #-16]

000160a4 <first_cache_extent@@Base>:
   160a4:	b.w	13e46 <rb_first@@Base>

000160a8 <last_cache_extent@@Base>:
   160a8:	b.w	13e56 <rb_last@@Base>

000160ac <prev_cache_extent@@Base>:
   160ac:	b.w	13e92 <rb_prev@@Base>

000160b0 <next_cache_extent@@Base>:
   160b0:	b.w	13e66 <rb_next@@Base>

000160b4 <remove_cache_extent@@Base>:
   160b4:	mov	r3, r1
   160b6:	mov	r1, r0
   160b8:	mov	r0, r3
   160ba:	b.w	13bd0 <rb_erase@@Base>

000160be <cache_tree_free_extents@@Base>:
   160be:	push	{r4, r5, r6, lr}
   160c0:	mov	r5, r0
   160c2:	mov	r6, r1
   160c4:	mov	r0, r5
   160c6:	bl	160a4 <first_cache_extent@@Base>
   160ca:	mov	r4, r0
   160cc:	cbnz	r0, 160d0 <cache_tree_free_extents@@Base+0x12>
   160ce:	pop	{r4, r5, r6, pc}
   160d0:	mov	r0, r5
   160d2:	mov	r1, r4
   160d4:	bl	160b4 <remove_cache_extent@@Base>
   160d8:	mov	r0, r4
   160da:	blx	r6
   160dc:	b.n	160c4 <cache_tree_free_extents@@Base+0x6>

000160de <free_extent_cache_tree@@Base>:
   160de:	ldr	r1, [pc, #8]	; (160e8 <free_extent_cache_tree@@Base+0xa>)
   160e0:	add	r1, pc
   160e2:	b.w	160be <cache_tree_free_extents@@Base>
   160e6:	nop
   160e8:	stc2	15, cr15, [r5], {255}	; 0xff

000160ec <add_merge_cache_extent@@Base>:
   160ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160f0:	sub	sp, #36	; 0x24
   160f2:	ldr	r4, [r0, #0]
   160f4:	mov	r5, r0
   160f6:	ldr	r1, [sp, #72]	; 0x48
   160f8:	mov	sl, r2
   160fa:	mov	fp, r3
   160fc:	str	r1, [sp, #0]
   160fe:	ldr	r1, [sp, #76]	; 0x4c
   16100:	str	r1, [sp, #4]
   16102:	cmp	r4, #0
   16104:	beq.w	1625e <add_merge_cache_extent@@Base+0x172>
   16108:	bl	15fdc <search_cache_extent@@Base>
   1610c:	mov	r7, r0
   1610e:	cbnz	r0, 16120 <add_merge_cache_extent@@Base+0x34>
   16110:	mov	r0, r5
   16112:	bl	160a8 <last_cache_extent@@Base>
   16116:	mov	r4, r0
   16118:	cmp	r0, #0
   1611a:	bne.n	16190 <add_merge_cache_extent@@Base+0xa4>
   1611c:	movs	r7, #0
   1611e:	b.n	161ce <add_merge_cache_extent@@Base+0xe2>
   16120:	ldrd	r2, r3, [r0, #24]
   16124:	cmp	r3, fp
   16126:	it	eq
   16128:	cmpeq	r2, sl
   1612a:	bcc.n	1615a <add_merge_cache_extent@@Base+0x6e>
   1612c:	bl	160ac <prev_cache_extent@@Base>
   16130:	mov	r4, r0
   16132:	mov	r0, r7
   16134:	ldr	r3, [sp, #0]
   16136:	adds.w	r3, sl, r3
   1613a:	str	r3, [sp, #8]
   1613c:	ldr	r3, [sp, #4]
   1613e:	adc.w	r3, fp, r3
   16142:	str	r3, [sp, #12]
   16144:	ldrd	r6, r7, [sp, #8]
   16148:	ldrd	r2, r3, [r0, #24]
   1614c:	cmp	r3, r7
   1614e:	it	eq
   16150:	cmpeq	r2, r6
   16152:	bcc.w	16266 <add_merge_cache_extent@@Base+0x17a>
   16156:	cbz	r4, 16198 <add_merge_cache_extent@@Base+0xac>
   16158:	b.n	16164 <add_merge_cache_extent@@Base+0x78>
   1615a:	bl	160b0 <next_cache_extent@@Base>
   1615e:	mov	r4, r7
   16160:	cmp	r0, #0
   16162:	bne.n	16134 <add_merge_cache_extent@@Base+0x48>
   16164:	ldrd	r2, r1, [r4, #32]
   16168:	ldrd	r3, r7, [r4, #24]
   1616c:	adds	r3, r3, r2
   1616e:	str	r3, [sp, #16]
   16170:	adc.w	r3, r7, r1
   16174:	str	r3, [sp, #20]
   16176:	ldrd	r2, r3, [sp, #16]
   1617a:	cmp	fp, r3
   1617c:	it	eq
   1617e:	cmpeq	sl, r2
   16180:	bcs.n	16194 <add_merge_cache_extent@@Base+0xa8>
   16182:	ldr	r0, [pc, #248]	; (1627c <add_merge_cache_extent@@Base+0x190>)
   16184:	movs	r2, #1
   16186:	mov.w	r1, #306	; 0x132
   1618a:	add	r0, pc
   1618c:	bl	15e24 <btrfs_list_path_for_root@@Base+0x20c>
   16190:	mov	r0, r7
   16192:	b.n	16164 <add_merge_cache_extent@@Base+0x78>
   16194:	cmp	r0, #0
   16196:	beq.n	1611c <add_merge_cache_extent@@Base+0x30>
   16198:	ldr	r1, [sp, #0]
   1619a:	ldrd	r2, r3, [r0, #24]
   1619e:	adds.w	r8, sl, r1
   161a2:	ldr	r1, [sp, #4]
   161a4:	adc.w	r9, fp, r1
   161a8:	cmp	r9, r3
   161aa:	it	eq
   161ac:	cmpeq	r8, r2
   161ae:	bne.n	1611c <add_merge_cache_extent@@Base+0x30>
   161b0:	ldrd	r3, r2, [r0, #32]
   161b4:	movs	r7, #1
   161b6:	strd	sl, fp, [r0, #24]
   161ba:	adds.w	r3, r8, r3
   161be:	adc.w	r2, r9, r2
   161c2:	subs.w	r3, r3, sl
   161c6:	sbc.w	r2, r2, fp
   161ca:	strd	r3, r2, [r0, #32]
   161ce:	cbz	r4, 16224 <add_merge_cache_extent@@Base+0x138>
   161d0:	ldrd	ip, lr, [r4, #24]
   161d4:	ldr	r3, [r4, #32]
   161d6:	adds.w	r3, ip, r3
   161da:	str	r3, [sp, #24]
   161dc:	ldr	r3, [r4, #36]	; 0x24
   161de:	adc.w	r3, lr, r3
   161e2:	str	r3, [sp, #28]
   161e4:	ldrd	r2, r3, [sp, #24]
   161e8:	cmp	r3, fp
   161ea:	it	eq
   161ec:	cmpeq	r2, sl
   161ee:	bne.n	16262 <add_merge_cache_extent@@Base+0x176>
   161f0:	cbz	r7, 16242 <add_merge_cache_extent@@Base+0x156>
   161f2:	ldrd	r3, r2, [r0, #24]
   161f6:	ldr	r1, [r0, #32]
   161f8:	adds	r3, r3, r1
   161fa:	ldr	r1, [r0, #36]	; 0x24
   161fc:	adc.w	r2, r1, r2
   16200:	subs.w	r3, r3, ip
   16204:	sbc.w	r2, r2, lr
   16208:	strd	r3, r2, [r0, #32]
   1620c:	ldrd	r2, r3, [r4, #24]
   16210:	mov	r1, r4
   16212:	strd	r2, r3, [r0, #24]
   16216:	mov	r0, r5
   16218:	bl	160b4 <remove_cache_extent@@Base>
   1621c:	mov	r0, r4
   1621e:	blx	83f0 <free@plt+0x4>
   16222:	mov	r4, r7
   16224:	orrs.w	r3, r7, r4
   16228:	bne.n	16272 <add_merge_cache_extent@@Base+0x186>
   1622a:	ldr	r3, [sp, #0]
   1622c:	mov	r2, sl
   1622e:	mov	r0, r5
   16230:	str	r3, [sp, #72]	; 0x48
   16232:	ldr	r3, [sp, #4]
   16234:	str	r3, [sp, #76]	; 0x4c
   16236:	mov	r3, fp
   16238:	add	sp, #36	; 0x24
   1623a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1623e:	b.w	15ea8 <add_cache_extent@@Base>
   16242:	ldr	r3, [sp, #0]
   16244:	adds.w	r1, sl, r3
   16248:	ldr	r3, [sp, #4]
   1624a:	adc.w	r2, fp, r3
   1624e:	subs.w	r1, r1, ip
   16252:	sbc.w	r2, r2, lr
   16256:	strd	r1, r2, [r4, #32]
   1625a:	movs	r4, #1
   1625c:	b.n	16224 <add_merge_cache_extent@@Base+0x138>
   1625e:	mov	r7, r4
   16260:	b.n	16224 <add_merge_cache_extent@@Base+0x138>
   16262:	movs	r4, #0
   16264:	b.n	16224 <add_merge_cache_extent@@Base+0x138>
   16266:	ldr	r0, [pc, #24]	; (16280 <add_merge_cache_extent@@Base+0x194>)
   16268:	movs	r2, #1
   1626a:	movw	r1, #305	; 0x131
   1626e:	add	r0, pc
   16270:	b.n	1618c <add_merge_cache_extent@@Base+0xa0>
   16272:	movs	r0, #0
   16274:	add	sp, #36	; 0x24
   16276:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1627a:	nop
   1627c:	ldrsh	r3, [r5, r0]
   1627e:	movs	r2, r0
   16280:	ldrb	r0, [r6, r5]
   16282:	movs	r2, r0
   16284:	ldrd	r3, r2, [r0, #48]	; 0x30
   16288:	push	{r4, lr}
   1628a:	adds	r3, #1
   1628c:	ldrd	r1, r4, [r0, #40]	; 0x28
   16290:	adc.w	r2, r2, #0
   16294:	subs	r3, r3, r1
   16296:	sbc.w	r2, r2, r4
   1629a:	strd	r1, r4, [r0, #24]
   1629e:	strd	r3, r2, [r0, #32]
   162a2:	pop	{r4, pc}
   162a4:	push	{r3, lr}
   162a6:	movs	r0, #72	; 0x48
   162a8:	blx	8634 <malloc@plt+0x4>
   162ac:	cbz	r0, 162c4 <add_merge_cache_extent@@Base+0x1d8>
   162ae:	movs	r2, #0
   162b0:	movs	r3, #0
   162b2:	mov.w	ip, #1
   162b6:	movs	r1, #0
   162b8:	strd	r2, r3, [r0, #16]
   162bc:	strd	ip, r1, [r0, #56]	; 0x38
   162c0:	strd	r2, r3, [r0, #64]	; 0x40
   162c4:	pop	{r3, pc}
   162c6:	push	{r3, r4, r5, r6, r7, lr}
   162c8:	mov	r4, r0
   162ca:	ldr	r7, [sp, #24]
   162cc:	movs	r0, #1
   162ce:	mov	r6, r2
   162d0:	mov	r5, r3
   162d2:	add.w	r1, r7, #96	; 0x60
   162d6:	blx	8358 <calloc@plt+0x4>
   162da:	cbz	r0, 1631a <add_merge_cache_extent@@Base+0x22e>
   162dc:	movs	r3, #1
   162de:	movs	r1, #0
   162e0:	mov.w	r2, #4294967295	; 0xffffffff
   162e4:	strd	r3, r1, [r0, #80]	; 0x50
   162e8:	str	r4, [r0, #92]	; 0x5c
   162ea:	mov.w	r3, #4294967295	; 0xffffffff
   162ee:	adds	r4, #64	; 0x40
   162f0:	str	r3, [r0, #88]	; 0x58
   162f2:	strd	r6, r5, [r0, #40]	; 0x28
   162f6:	mov.w	r3, #4294967295	; 0xffffffff
   162fa:	str	r7, [r0, #76]	; 0x4c
   162fc:	strd	r2, r3, [r0, #48]	; 0x30
   16300:	add.w	r3, r0, #68	; 0x44
   16304:	strd	r6, r5, [r0, #24]
   16308:	strd	r3, r3, [r0, #68]	; 0x44
   1630c:	add.w	r3, r0, #60	; 0x3c
   16310:	strd	r7, r1, [r0, #32]
   16314:	str	r4, [r0, #56]	; 0x38
   16316:	strd	r3, r3, [r0, #60]	; 0x3c
   1631a:	pop	{r3, r4, r5, r6, r7, pc}
   1631c:	ldr.w	ip, [pc, #104]	; 16388 <add_merge_cache_extent@@Base+0x29c>
   16320:	push	{r4, r5, lr}
   16322:	add	ip, pc
   16324:	ldr	r5, [pc, #100]	; (1638c <add_merge_cache_extent@@Base+0x2a0>)
   16326:	sub	sp, #92	; 0x5c
   16328:	ldr	r4, [pc, #100]	; (16390 <add_merge_cache_extent@@Base+0x2a4>)
   1632a:	ldr.w	r5, [ip, r5]
   1632e:	add	r4, pc
   16330:	ldr	r5, [r5, #0]
   16332:	str	r5, [sp, #84]	; 0x54
   16334:	mov.w	r5, #0
   16338:	cbz	r3, 1636e <add_merge_cache_extent@@Base+0x282>
   1633a:	ldr	r5, [pc, #88]	; (16394 <add_merge_cache_extent@@Base+0x2a8>)
   1633c:	ldr	r4, [r4, r5]
   1633e:	strd	r2, r1, [sp]
   16342:	movs	r1, #1
   16344:	strd	r0, r3, [sp, #8]
   16348:	ldr	r2, [pc, #76]	; (16398 <add_merge_cache_extent@@Base+0x2ac>)
   1634a:	ldr	r3, [pc, #80]	; (1639c <add_merge_cache_extent@@Base+0x2b0>)
   1634c:	ldr	r0, [r4, #0]
   1634e:	add	r4, sp, #20
   16350:	add	r3, pc
   16352:	add	r2, pc
   16354:	blx	881c <__fprintf_chk@plt+0x4>
   16358:	movs	r1, #16
   1635a:	mov	r0, r4
   1635c:	blx	8680 <backtrace@plt>
   16360:	movs	r2, #2
   16362:	mov	r1, r0
   16364:	mov	r0, r4
   16366:	blx	8990 <backtrace_symbols_fd@plt>
   1636a:	blx	8948 <abort@plt>
   1636e:	ldr	r2, [pc, #48]	; (163a0 <add_merge_cache_extent@@Base+0x2b4>)
   16370:	ldr	r3, [pc, #24]	; (1638c <add_merge_cache_extent@@Base+0x2a0>)
   16372:	add	r2, pc
   16374:	ldr	r3, [r2, r3]
   16376:	ldr	r2, [r3, #0]
   16378:	ldr	r3, [sp, #84]	; 0x54
   1637a:	eors	r2, r3
   1637c:	beq.n	16382 <add_merge_cache_extent@@Base+0x296>
   1637e:	blx	84cc <__stack_chk_fail@plt>
   16382:	add	sp, #92	; 0x5c
   16384:	pop	{r4, r5, pc}
   16386:	nop
   16388:	orn	r0, r6, r4
   1638c:	lsls	r4, r4, #8
   1638e:	movs	r0, r0
   16390:	orrs.w	r0, sl, r4
   16394:	lsls	r4, r6, #8
   16396:	movs	r0, r0
   16398:	adds	r7, #63	; 0x3f
   1639a:	movs	r2, r0
   1639c:	ldrb	r0, [r1, r3]
   1639e:	movs	r2, r0
   163a0:	ands.w	r0, r6, r4
   163a4:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   163a8:	mov	r4, r2
   163aa:	ldrd	r2, r3, [r1, #40]	; 0x28
   163ae:	mov	r5, r1
   163b0:	ldrd	r6, r8, [sp, #24]
   163b4:	mov	r7, r0
   163b6:	mov	r0, r4
   163b8:	strd	r2, r3, [r4, #40]	; 0x28
   163bc:	adds.w	r2, r6, #4294967295	; 0xffffffff
   163c0:	adc.w	r3, r8, #4294967295	; 0xffffffff
   163c4:	strd	r2, r3, [r4, #48]	; 0x30
   163c8:	ldr	r3, [r1, #60]	; 0x3c
   163ca:	str	r3, [r4, #60]	; 0x3c
   163cc:	bl	16284 <add_merge_cache_extent@@Base+0x198>
   163d0:	mov	r0, r5
   163d2:	strd	r6, r8, [r5, #40]	; 0x28
   163d6:	bl	16284 <add_merge_cache_extent@@Base+0x198>
   163da:	mov	r1, r4
   163dc:	mov	r0, r7
   163de:	bl	15e9a <insert_cache_extent@@Base>
   163e2:	ldr	r1, [pc, #20]	; (163f8 <add_merge_cache_extent@@Base+0x30c>)
   163e4:	movs	r2, #185	; 0xb9
   163e6:	add	r1, pc
   163e8:	mov	r3, r0
   163ea:	ldr	r0, [pc, #16]	; (163fc <add_merge_cache_extent@@Base+0x310>)
   163ec:	add	r0, pc
   163ee:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   163f2:	movs	r0, #0
   163f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   163f8:	ldrb	r6, [r6, r6]
   163fa:	movs	r2, r0
   163fc:	muls	r7, r0
   163fe:	movs	r2, r0
   16400:	ldr	r1, [pc, #124]	; (16480 <add_merge_cache_extent@@Base+0x394>)
   16402:	movw	r2, #649	; 0x289
   16406:	push	{r3, r4, r5, lr}
   16408:	mov	r4, r0
   1640a:	ldr	r5, [r0, #56]	; 0x38
   1640c:	add	r1, pc
   1640e:	ldr	r3, [r0, #80]	; 0x50
   16410:	adds	r1, #12
   16412:	ldr	r0, [pc, #112]	; (16484 <add_merge_cache_extent@@Base+0x398>)
   16414:	add	r0, pc
   16416:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   1641a:	cbz	r5, 1647a <add_merge_cache_extent@@Base+0x38e>
   1641c:	ldrd	r2, r3, [r5, #16]
   16420:	movs	r1, #0
   16422:	ldr	r0, [r4, #76]	; 0x4c
   16424:	cmp	r3, r1
   16426:	it	eq
   16428:	cmpeq	r2, r0
   1642a:	ite	cc
   1642c:	movcc	r3, #1
   1642e:	movcs	r3, #0
   16430:	ldr	r1, [pc, #84]	; (16488 <add_merge_cache_extent@@Base+0x39c>)
   16432:	movw	r2, #650	; 0x28a
   16436:	ldr	r0, [pc, #84]	; (1648c <add_merge_cache_extent@@Base+0x3a0>)
   16438:	add	r1, pc
   1643a:	adds	r1, #12
   1643c:	add	r0, pc
   1643e:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   16442:	ldrd	r1, r2, [r4, #60]	; 0x3c
   16446:	add.w	r3, r4, #60	; 0x3c
   1644a:	str	r2, [r1, #4]
   1644c:	str	r1, [r2, #0]
   1644e:	strd	r3, r3, [r4, #60]	; 0x3c
   16452:	ldr	r3, [r4, #84]	; 0x54
   16454:	lsls	r3, r3, #20
   16456:	bmi.n	16470 <add_merge_cache_extent@@Base+0x384>
   16458:	mov	r1, r4
   1645a:	adds	r0, r5, #4
   1645c:	bl	160b4 <remove_cache_extent@@Base>
   16460:	ldrd	r2, r3, [r5, #16]
   16464:	ldr	r1, [r4, #76]	; 0x4c
   16466:	subs	r2, r2, r1
   16468:	sbc.w	r3, r3, #0
   1646c:	strd	r2, r3, [r5, #16]
   16470:	mov	r0, r4
   16472:	ldmia.w	sp!, {r3, r4, r5, lr}
   16476:	b.w	83ec <free@plt>
   1647a:	mov	r3, r5
   1647c:	b.n	16430 <add_merge_cache_extent@@Base+0x344>
   1647e:	nop
   16480:	ldrb	r0, [r2, r6]
   16482:	movs	r2, r0
   16484:	ldrb	r0, [r2, r0]
   16486:	movs	r2, r0
   16488:	ldrb	r4, [r4, r5]
   1648a:	movs	r2, r0
   1648c:	ldrh	r1, [r6, r7]
   1648e:	movs	r2, r0
   16490:	push	{r3, r4, r5, lr}
   16492:	mov	r4, r0
   16494:	ldr	r5, [r0, #56]	; 0x38
   16496:	movs	r2, #67	; 0x43
   16498:	ldr	r1, [pc, #32]	; (164bc <add_merge_cache_extent@@Base+0x3d0>)
   1649a:	subs	r5, #1
   1649c:	str	r5, [r0, #56]	; 0x38
   1649e:	ldr	r0, [pc, #32]	; (164c0 <add_merge_cache_extent@@Base+0x3d4>)
   164a0:	add	r1, pc
   164a2:	lsrs	r3, r5, #31
   164a4:	adds	r1, #37	; 0x25
   164a6:	add	r0, pc
   164a8:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   164ac:	cbnz	r5, 164b8 <add_merge_cache_extent@@Base+0x3cc>
   164ae:	mov	r0, r4
   164b0:	ldmia.w	sp!, {r3, r4, r5, lr}
   164b4:	b.w	83ec <free@plt>
   164b8:	pop	{r3, r4, r5, pc}
   164ba:	nop
   164bc:	ldrb	r4, [r7, r3]
   164be:	movs	r2, r0
   164c0:	ldrh	r2, [r5, r6]
   164c2:	movs	r2, r0
   164c4:	b.n	16490 <add_merge_cache_extent@@Base+0x3a4>
   164c6:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   164ca:	mov	r5, r0
   164cc:	ldr	r3, [r1, #60]	; 0x3c
   164ce:	mov	r4, r1
   164d0:	tst.w	r3, #10
   164d4:	bne.n	1655c <add_merge_cache_extent@@Base+0x470>
   164d6:	mov	r0, r1
   164d8:	bl	160ac <prev_cache_extent@@Base>
   164dc:	mov	sl, r0
   164de:	cbz	r0, 1651c <add_merge_cache_extent@@Base+0x430>
   164e0:	ldrd	r3, r2, [r4, #40]	; 0x28
   164e4:	adds.w	r8, r3, #4294967295	; 0xffffffff
   164e8:	adc.w	r9, r2, #4294967295	; 0xffffffff
   164ec:	ldrd	r2, r3, [r0, #48]	; 0x30
   164f0:	cmp	r3, r9
   164f2:	it	eq
   164f4:	cmpeq	r2, r8
   164f6:	bne.n	1651c <add_merge_cache_extent@@Base+0x430>
   164f8:	ldr	r2, [r0, #60]	; 0x3c
   164fa:	ldr	r3, [r4, #60]	; 0x3c
   164fc:	cmp	r2, r3
   164fe:	bne.n	1651c <add_merge_cache_extent@@Base+0x430>
   16500:	ldrd	r2, r3, [r0, #40]	; 0x28
   16504:	mov	r0, r4
   16506:	strd	r2, r3, [r4, #40]	; 0x28
   1650a:	bl	16284 <add_merge_cache_extent@@Base+0x198>
   1650e:	mov	r0, r5
   16510:	mov	r1, sl
   16512:	bl	160b4 <remove_cache_extent@@Base>
   16516:	mov	r0, sl
   16518:	bl	16490 <add_merge_cache_extent@@Base+0x3a4>
   1651c:	mov	r0, r4
   1651e:	bl	160b0 <next_cache_extent@@Base>
   16522:	cbz	r0, 1655c <add_merge_cache_extent@@Base+0x470>
   16524:	ldrd	r3, r2, [r4, #48]	; 0x30
   16528:	adds	r6, r3, #1
   1652a:	adc.w	r7, r2, #0
   1652e:	ldrd	r2, r3, [r0, #40]	; 0x28
   16532:	cmp	r3, r7
   16534:	it	eq
   16536:	cmpeq	r2, r6
   16538:	bne.n	1655c <add_merge_cache_extent@@Base+0x470>
   1653a:	ldr	r2, [r0, #60]	; 0x3c
   1653c:	ldr	r3, [r4, #60]	; 0x3c
   1653e:	cmp	r2, r3
   16540:	bne.n	1655c <add_merge_cache_extent@@Base+0x470>
   16542:	ldrd	r2, r3, [r4, #40]	; 0x28
   16546:	strd	r2, r3, [r0, #40]	; 0x28
   1654a:	bl	16284 <add_merge_cache_extent@@Base+0x198>
   1654e:	mov	r0, r5
   16550:	mov	r1, r4
   16552:	bl	160b4 <remove_cache_extent@@Base>
   16556:	mov	r0, r4
   16558:	bl	16490 <add_merge_cache_extent@@Base+0x3a4>
   1655c:	movs	r0, #0
   1655e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   16562:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   16566:	mov	r5, r0
   16568:	ldrd	r8, r9, [sp, #32]
   1656c:	mov	r4, r1
   1656e:	ldr.w	sl, [pc, #96]	; 165d0 <add_merge_cache_extent@@Base+0x4e4>
   16572:	mov	r7, r3
   16574:	cmp	r9, r3
   16576:	ldr	r0, [pc, #92]	; (165d4 <add_merge_cache_extent@@Base+0x4e8>)
   16578:	add	sl, pc
   1657a:	it	eq
   1657c:	cmpeq	r8, r2
   1657e:	add.w	sl, sl, #61	; 0x3d
   16582:	mov	r6, r2
   16584:	ite	cc
   16586:	movcc	r3, #1
   16588:	movcs	r3, #0
   1658a:	mov	r1, sl
   1658c:	add	r0, pc
   1658e:	movs	r2, #158	; 0x9e
   16590:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   16594:	ldr	r2, [sp, #40]	; 0x28
   16596:	ldr	r3, [r4, #60]	; 0x3c
   16598:	mov	r0, r4
   1659a:	strd	r6, r7, [r4, #40]	; 0x28
   1659e:	orrs	r3, r2
   165a0:	strd	r8, r9, [r4, #48]	; 0x30
   165a4:	str	r3, [r4, #60]	; 0x3c
   165a6:	bl	16284 <add_merge_cache_extent@@Base+0x198>
   165aa:	mov	r1, r4
   165ac:	mov	r0, r5
   165ae:	bl	15e9a <insert_cache_extent@@Base>
   165b2:	movs	r2, #164	; 0xa4
   165b4:	mov	r1, sl
   165b6:	mov	r3, r0
   165b8:	ldr	r0, [pc, #28]	; (165d8 <add_merge_cache_extent@@Base+0x4ec>)
   165ba:	add	r0, pc
   165bc:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   165c0:	mov	r1, r4
   165c2:	mov	r0, r5
   165c4:	bl	164c6 <add_merge_cache_extent@@Base+0x3da>
   165c8:	movs	r0, #0
   165ca:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   165ce:	nop
   165d0:	ldrb	r4, [r4, r0]
   165d2:	movs	r2, r0
   165d4:	ldrh	r4, [r2, r3]
   165d6:	movs	r2, r0
   165d8:	adcs	r1, r7
   165da:	movs	r2, r0
   165dc:	push	{r3, r4, r5, lr}
   165de:	mov	r4, r1
   165e0:	ldr	r3, [r1, #60]	; 0x3c
   165e2:	and.w	r5, r2, r3
   165e6:	bic.w	r2, r3, r2
   165ea:	str	r2, [r1, #60]	; 0x3c
   165ec:	cbnz	r2, 165fc <add_merge_cache_extent@@Base+0x510>
   165ee:	bl	160b4 <remove_cache_extent@@Base>
   165f2:	mov	r0, r4
   165f4:	bl	16490 <add_merge_cache_extent@@Base+0x3a4>
   165f8:	mov	r0, r5
   165fa:	pop	{r3, r4, r5, pc}
   165fc:	bl	164c6 <add_merge_cache_extent@@Base+0x3da>
   16600:	b.n	165f8 <add_merge_cache_extent@@Base+0x50c>
   16602:	push	{r0, r1, r4, r5, r6, lr}
   16604:	mov	r6, r1
   16606:	mov	r4, r0
   16608:	cbz	r0, 16664 <add_merge_cache_extent@@Base+0x578>
   1660a:	cmn.w	r0, #4096	; 0x1000
   1660e:	bhi.n	16664 <add_merge_cache_extent@@Base+0x578>
   16610:	ldr	r5, [r0, #80]	; 0x50
   16612:	movw	r2, #665	; 0x299
   16616:	ldr	r1, [pc, #80]	; (16668 <add_merge_cache_extent@@Base+0x57c>)
   16618:	subs	r5, #1
   1661a:	str	r5, [r0, #80]	; 0x50
   1661c:	ldr	r0, [pc, #76]	; (1666c <add_merge_cache_extent@@Base+0x580>)
   1661e:	add	r1, pc
   16620:	lsrs	r3, r5, #31
   16622:	adds	r1, #74	; 0x4a
   16624:	add	r0, pc
   16626:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   1662a:	cbnz	r5, 16664 <add_merge_cache_extent@@Base+0x578>
   1662c:	ldr	r3, [r4, #84]	; 0x54
   1662e:	lsls	r2, r3, #31
   16630:	bpl.n	16642 <add_merge_cache_extent@@Base+0x556>
   16632:	ldr	r3, [r4, #76]	; 0x4c
   16634:	ldr	r0, [pc, #56]	; (16670 <add_merge_cache_extent@@Base+0x584>)
   16636:	str	r3, [sp, #0]
   16638:	add	r0, pc
   1663a:	ldrd	r2, r3, [r4, #40]	; 0x28
   1663e:	bl	17400 <__btrfs_warning@@Base>
   16642:	ldrd	r1, r2, [r4, #68]	; 0x44
   16646:	add.w	r3, r4, #68	; 0x44
   1664a:	str	r2, [r1, #4]
   1664c:	str	r1, [r2, #0]
   1664e:	strd	r3, r3, [r4, #68]	; 0x44
   16652:	ldr	r3, [r4, #84]	; 0x54
   16654:	lsls	r3, r3, #20
   16656:	bmi.n	1665a <add_merge_cache_extent@@Base+0x56e>
   16658:	cbz	r6, 16664 <add_merge_cache_extent@@Base+0x578>
   1665a:	mov	r0, r4
   1665c:	add	sp, #8
   1665e:	ldmia.w	sp!, {r4, r5, r6, lr}
   16662:	b.n	16400 <add_merge_cache_extent@@Base+0x314>
   16664:	add	sp, #8
   16666:	pop	{r4, r5, r6, pc}
   16668:	ldrh	r6, [r7, r5]
   1666a:	movs	r2, r0
   1666c:	ldrh	r0, [r1, r1]
   1666e:	movs	r2, r0
   16670:	ldrh	r1, [r0, r1]
   16672:	movs	r2, r0

00016674 <extent_io_tree_init@@Base>:
   16674:	push	{r4, lr}
   16676:	mov	r4, r0
   16678:	bl	15e94 <cache_tree_init@@Base>
   1667c:	adds	r0, r4, #4
   1667e:	bl	15e94 <cache_tree_init@@Base>
   16682:	add.w	r3, r4, #8
   16686:	movs	r2, #0
   16688:	strd	r3, r3, [r4, #8]
   1668c:	movs	r3, #0
   1668e:	strd	r2, r3, [r4, #16]
   16692:	bl	31c54 <total_memory@@Base>
   16696:	movs	r3, #0
   16698:	str	r3, [r4, #28]
   1669a:	lsrs	r0, r0, #2
   1669c:	str	r0, [r4, #24]
   1669e:	pop	{r4, pc}

000166a0 <extent_io_tree_init_cache_max@@Base>:
   166a0:	push	{r4, r5, r6, lr}
   166a2:	mov	r4, r0
   166a4:	mov	r6, r2
   166a6:	mov	r5, r3
   166a8:	bl	16674 <extent_io_tree_init@@Base>
   166ac:	strd	r6, r5, [r4, #24]
   166b0:	pop	{r4, r5, r6, pc}

000166b2 <extent_buffer_bitmap_set@@Base>:
   166b2:	adds	r0, #96	; 0x60
   166b4:	add.w	r1, r1, r2, lsr #3
   166b8:	push	{r4, r5, r6, lr}
   166ba:	add	r1, r0
   166bc:	movs	r4, #255	; 0xff
   166be:	and.w	r0, r2, #7
   166c2:	lsls	r4, r0
   166c4:	rsb	r5, r0, #8
   166c8:	mov	r0, r3
   166ca:	uxtb	r4, r4
   166cc:	cmp	r5, r0
   166ce:	bls.n	166ea <extent_buffer_bitmap_set@@Base+0x38>
   166d0:	cbz	r0, 166e8 <extent_buffer_bitmap_set@@Base+0x36>
   166d2:	add	r2, r3
   166d4:	movs	r3, #255	; 0xff
   166d6:	negs	r2, r2
   166d8:	and.w	r2, r2, #7
   166dc:	asr.w	r2, r3, r2
   166e0:	ands	r4, r2
   166e2:	ldrb	r2, [r1, #0]
   166e4:	orrs	r4, r2
   166e6:	strb	r4, [r1, #0]
   166e8:	pop	{r4, r5, r6, pc}
   166ea:	ldrb	r6, [r1, #0]
   166ec:	subs	r0, r0, r5
   166ee:	movs	r5, #8
   166f0:	orrs	r4, r6
   166f2:	strb.w	r4, [r1], #1
   166f6:	movs	r4, #255	; 0xff
   166f8:	b.n	166cc <extent_buffer_bitmap_set@@Base+0x1a>

000166fa <extent_buffer_bitmap_clear@@Base>:
   166fa:	adds	r0, #96	; 0x60
   166fc:	add.w	r1, r1, r2, lsr #3
   16700:	push	{r4, r5, r6, lr}
   16702:	add	r1, r0
   16704:	and.w	r4, r2, #7
   16708:	movs	r0, #255	; 0xff
   1670a:	lsls	r0, r4
   1670c:	rsb	r5, r4, #8
   16710:	mov	r4, r3
   16712:	uxtb	r0, r0
   16714:	cmp	r5, r4
   16716:	bls.n	16734 <extent_buffer_bitmap_clear@@Base+0x3a>
   16718:	cbz	r4, 16732 <extent_buffer_bitmap_clear@@Base+0x38>
   1671a:	add	r2, r3
   1671c:	movs	r3, #255	; 0xff
   1671e:	negs	r2, r2
   16720:	and.w	r2, r2, #7
   16724:	asr.w	r2, r3, r2
   16728:	ands	r0, r2
   1672a:	ldrb	r2, [r1, #0]
   1672c:	bic.w	r0, r2, r0
   16730:	strb	r0, [r1, #0]
   16732:	pop	{r4, r5, r6, pc}
   16734:	ldrb	r6, [r1, #0]
   16736:	subs	r4, r4, r5
   16738:	movs	r5, #8
   1673a:	bic.w	r0, r6, r0
   1673e:	strb.w	r0, [r1], #1
   16742:	movs	r0, #255	; 0xff
   16744:	b.n	16714 <extent_buffer_bitmap_clear@@Base+0x1a>

00016746 <clear_extent_bits@@Base>:
   16746:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1674a:	mov	r7, r3
   1674c:	ldr	r3, [pc, #348]	; (168ac <clear_extent_bits@@Base+0x166>)
   1674e:	mov.w	r8, #0
   16752:	vpush	{d8}
   16756:	mov	r9, r0
   16758:	add	r3, pc
   1675a:	mov	r6, r2
   1675c:	adds	r3, #102	; 0x66
   1675e:	mov	r4, r8
   16760:	vmov	s16, r3
   16764:	ldr	r3, [pc, #328]	; (168b0 <clear_extent_bits@@Base+0x16a>)
   16766:	sub	sp, #12
   16768:	add	r3, pc
   1676a:	vmov	s17, r3
   1676e:	cbnz	r4, 1677c <clear_extent_bits@@Base+0x36>
   16770:	bl	162a4 <add_merge_cache_extent@@Base+0x1b8>
   16774:	mov	r4, r0
   16776:	cmp	r0, #0
   16778:	beq.w	168a4 <clear_extent_bits@@Base+0x15e>
   1677c:	mov	r2, r6
   1677e:	mov	r3, r7
   16780:	mov	r0, r9
   16782:	bl	15fdc <search_cache_extent@@Base>
   16786:	mov	r5, r0
   16788:	cmp	r0, #0
   1678a:	beq.w	1689c <clear_extent_bits@@Base+0x156>
   1678e:	ldrd	r2, r3, [r0, #40]	; 0x28
   16792:	ldrd	r0, r1, [sp, #56]	; 0x38
   16796:	cmp	r1, r3
   16798:	it	eq
   1679a:	cmpeq	r0, r2
   1679c:	bcc.n	1689c <clear_extent_bits@@Base+0x156>
   1679e:	cmp	r3, r7
   167a0:	ldrd	sl, fp, [r5, #48]	; 0x30
   167a4:	it	eq
   167a6:	cmpeq	r2, r6
   167a8:	bcs.n	16820 <clear_extent_bits@@Base+0xda>
   167aa:	mov	r2, r4
   167ac:	mov	r1, r5
   167ae:	mov	r0, r9
   167b0:	strd	r6, r7, [sp]
   167b4:	bl	163a4 <add_merge_cache_extent@@Base+0x2b8>
   167b8:	vmov	r1, s16
   167bc:	movw	r2, #311	; 0x137
   167c0:	cmn.w	r0, #17
   167c4:	mov	r4, r0
   167c6:	vmov	r0, s17
   167ca:	ite	ne
   167cc:	movne	r3, #0
   167ce:	moveq	r3, #1
   167d0:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   167d4:	cmp	r4, #0
   167d6:	bne.n	1686e <clear_extent_bits@@Base+0x128>
   167d8:	ldrd	r2, r3, [r5, #48]	; 0x30
   167dc:	ldrd	r0, r1, [sp, #56]	; 0x38
   167e0:	cmp	r1, r3
   167e2:	it	eq
   167e4:	cmpeq	r0, r2
   167e6:	bcc.n	1681a <clear_extent_bits@@Base+0xd4>
   167e8:	ldr	r2, [sp, #64]	; 0x40
   167ea:	mov	r1, r5
   167ec:	mov	r0, r9
   167ee:	bl	165dc <add_merge_cache_extent@@Base+0x4f0>
   167f2:	cmp.w	fp, #4294967295	; 0xffffffff
   167f6:	it	eq
   167f8:	cmpeq.w	sl, #4294967295	; 0xffffffff
   167fc:	orr.w	r8, r8, r0
   16800:	beq.n	1686e <clear_extent_bits@@Base+0x128>
   16802:	adds.w	r6, sl, #1
   16806:	adc.w	r7, fp, #0
   1680a:	ldrd	r2, r3, [sp, #56]	; 0x38
   1680e:	cmp	r3, r7
   16810:	it	eq
   16812:	cmpeq	r2, r6
   16814:	bcs.n	1676e <clear_extent_bits@@Base+0x28>
   16816:	cbz	r4, 1686e <clear_extent_bits@@Base+0x128>
   16818:	b.n	1689c <clear_extent_bits@@Base+0x156>
   1681a:	ldrd	r6, r7, [r5, #40]	; 0x28
   1681e:	b.n	1680a <clear_extent_bits@@Base+0xc4>
   16820:	ldrd	r2, r3, [sp, #56]	; 0x38
   16824:	cmp	r3, fp
   16826:	it	eq
   16828:	cmpeq	r2, sl
   1682a:	bcs.n	1687a <clear_extent_bits@@Base+0x134>
   1682c:	ldr	r3, [sp, #56]	; 0x38
   1682e:	mov	r1, r5
   16830:	mov	r0, r9
   16832:	adds	r2, r3, #1
   16834:	ldr	r3, [sp, #60]	; 0x3c
   16836:	adc.w	r3, r3, #0
   1683a:	strd	r2, r3, [sp]
   1683e:	mov	r2, r4
   16840:	bl	163a4 <add_merge_cache_extent@@Base+0x2b8>
   16844:	ldr	r1, [pc, #108]	; (168b4 <clear_extent_bits@@Base+0x16e>)
   16846:	movw	r2, #333	; 0x14d
   1684a:	add	r1, pc
   1684c:	adds	r1, #102	; 0x66
   1684e:	adds	r0, #17
   16850:	ldr	r0, [pc, #100]	; (168b8 <clear_extent_bits@@Base+0x172>)
   16852:	it	ne
   16854:	movne	r3, #0
   16856:	add	r0, pc
   16858:	it	eq
   1685a:	moveq	r3, #1
   1685c:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   16860:	ldr	r2, [sp, #64]	; 0x40
   16862:	mov	r1, r4
   16864:	mov	r0, r9
   16866:	bl	165dc <add_merge_cache_extent@@Base+0x4f0>
   1686a:	orr.w	r8, r8, r0
   1686e:	mov	r0, r8
   16870:	add	sp, #12
   16872:	vpop	{d8}
   16876:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1687a:	adds.w	r6, sl, #1
   1687e:	ldr	r2, [sp, #64]	; 0x40
   16880:	mov	r1, r5
   16882:	mov	r0, r9
   16884:	adc.w	r7, fp, #0
   16888:	bl	165dc <add_merge_cache_extent@@Base+0x4f0>
   1688c:	cmp.w	fp, #4294967295	; 0xffffffff
   16890:	it	eq
   16892:	cmpeq.w	sl, #4294967295	; 0xffffffff
   16896:	orr.w	r8, r8, r0
   1689a:	bne.n	1680a <clear_extent_bits@@Base+0xc4>
   1689c:	mov	r0, r4
   1689e:	bl	16490 <add_merge_cache_extent@@Base+0x3a4>
   168a2:	b.n	1686e <clear_extent_bits@@Base+0x128>
   168a4:	mvn.w	r8, #11
   168a8:	b.n	1686e <clear_extent_bits@@Base+0x128>
   168aa:	nop
   168ac:	ldrh	r4, [r0, r1]
   168ae:	movs	r2, r0
   168b0:	ldr	r2, [r0, r5]
   168b2:	movs	r2, r0
   168b4:	ldr	r2, [r2, r5]
   168b6:	movs	r2, r0
   168b8:	ldr	r4, [r2, r1]
   168ba:	movs	r2, r0

000168bc <set_extent_bits@@Base>:
   168bc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   168c0:	mov	r7, r3
   168c2:	ldr	r3, [pc, #516]	; (16ac8 <set_extent_bits@@Base+0x20c>)
   168c4:	mov	r9, r0
   168c6:	vpush	{d8}
   168ca:	mov	r6, r2
   168cc:	add	r3, pc
   168ce:	mov.w	r8, #0
   168d2:	adds	r3, #120	; 0x78
   168d4:	vmov	s16, r3
   168d8:	ldr	r3, [pc, #496]	; (16acc <set_extent_bits@@Base+0x210>)
   168da:	sub	sp, #28
   168dc:	add	r3, pc
   168de:	ldrd	sl, fp, [sp, #72]	; 0x48
   168e2:	vmov	s17, r3
   168e6:	cmp.w	r8, #0
   168ea:	bne.n	168f8 <set_extent_bits@@Base+0x3c>
   168ec:	bl	162a4 <add_merge_cache_extent@@Base+0x1b8>
   168f0:	mov	r8, r0
   168f2:	cmp	r0, #0
   168f4:	beq.w	16ac0 <set_extent_bits@@Base+0x204>
   168f8:	mov	r2, r6
   168fa:	mov	r3, r7
   168fc:	mov	r0, r9
   168fe:	bl	15fdc <search_cache_extent@@Base>
   16902:	mov	r5, r0
   16904:	cbnz	r0, 16944 <set_extent_bits@@Base+0x88>
   16906:	ldr	r3, [sp, #80]	; 0x50
   16908:	mov	r2, r6
   1690a:	mov	r1, r8
   1690c:	mov	r0, r9
   1690e:	strd	sl, fp, [sp]
   16912:	str	r3, [sp, #8]
   16914:	mov	r3, r7
   16916:	bl	16562 <add_merge_cache_extent@@Base+0x476>
   1691a:	ldr	r1, [pc, #436]	; (16ad0 <set_extent_bits@@Base+0x214>)
   1691c:	mov.w	r2, #382	; 0x17e
   16920:	add	r1, pc
   16922:	adds	r1, #120	; 0x78
   16924:	cmn.w	r0, #17
   16928:	mov	r4, r0
   1692a:	ldr	r0, [pc, #424]	; (16ad4 <set_extent_bits@@Base+0x218>)
   1692c:	ite	ne
   1692e:	movne	r3, #0
   16930:	moveq	r3, #1
   16932:	add	r0, pc
   16934:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   16938:	mov	r0, r4
   1693a:	add	sp, #28
   1693c:	vpop	{d8}
   16940:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16944:	ldrd	r2, r3, [r0, #40]	; 0x28
   16948:	ldrd	r0, r1, [r0, #48]	; 0x30
   1694c:	cmp	r7, r3
   1694e:	it	eq
   16950:	cmpeq	r6, r2
   16952:	strd	r0, r1, [sp, #16]
   16956:	bne.n	169a0 <set_extent_bits@@Base+0xe4>
   16958:	cmp	fp, r1
   1695a:	it	eq
   1695c:	cmpeq	sl, r0
   1695e:	bcc.w	16a7a <set_extent_bits@@Base+0x1be>
   16962:	ldr	r3, [r5, #60]	; 0x3c
   16964:	mov	r1, r5
   16966:	ldr	r2, [sp, #80]	; 0x50
   16968:	mov	r0, r9
   1696a:	orrs	r3, r2
   1696c:	str	r3, [r5, #60]	; 0x3c
   1696e:	bl	164c6 <add_merge_cache_extent@@Base+0x3da>
   16972:	ldrd	r3, r4, [sp, #16]
   16976:	adds	r4, #1
   16978:	it	eq
   1697a:	cmpeq.w	r3, #4294967295	; 0xffffffff
   1697e:	beq.n	16998 <set_extent_bits@@Base+0xdc>
   16980:	ldr	r3, [sp, #16]
   16982:	adds	r6, r3, #1
   16984:	ldr	r3, [sp, #20]
   16986:	adc.w	r7, r3, #0
   1698a:	cmp	fp, r7
   1698c:	it	eq
   1698e:	cmpeq	sl, r6
   16990:	bcs.n	168e6 <set_extent_bits@@Base+0x2a>
   16992:	cmp.w	r8, #0
   16996:	beq.n	16a02 <set_extent_bits@@Base+0x146>
   16998:	mov	r0, r8
   1699a:	bl	16490 <add_merge_cache_extent@@Base+0x3a4>
   1699e:	b.n	16a02 <set_extent_bits@@Base+0x146>
   169a0:	cmp	r3, r7
   169a2:	it	eq
   169a4:	cmpeq	r2, r6
   169a6:	bcs.n	16a1a <set_extent_bits@@Base+0x15e>
   169a8:	mov	r2, r8
   169aa:	mov	r1, r5
   169ac:	mov	r0, r9
   169ae:	strd	r6, r7, [sp]
   169b2:	bl	163a4 <add_merge_cache_extent@@Base+0x2b8>
   169b6:	ldr	r1, [pc, #288]	; (16ad8 <set_extent_bits@@Base+0x21c>)
   169b8:	movw	r2, #423	; 0x1a7
   169bc:	add	r1, pc
   169be:	adds	r1, #120	; 0x78
   169c0:	cmn.w	r0, #17
   169c4:	mov	r4, r0
   169c6:	ldr	r0, [pc, #276]	; (16adc <set_extent_bits@@Base+0x220>)
   169c8:	ite	ne
   169ca:	movne	r3, #0
   169cc:	moveq	r3, #1
   169ce:	add	r0, pc
   169d0:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   169d4:	cmp	r4, #0
   169d6:	bne.n	16938 <set_extent_bits@@Base+0x7c>
   169d8:	ldrd	r2, r3, [r5, #48]	; 0x30
   169dc:	cmp	fp, r3
   169de:	it	eq
   169e0:	cmpeq	sl, r2
   169e2:	bcc.n	16a12 <set_extent_bits@@Base+0x156>
   169e4:	ldr	r3, [r5, #60]	; 0x3c
   169e6:	mov	r1, r5
   169e8:	ldr	r2, [sp, #80]	; 0x50
   169ea:	mov	r0, r9
   169ec:	orrs	r3, r2
   169ee:	str	r3, [r5, #60]	; 0x3c
   169f0:	bl	164c6 <add_merge_cache_extent@@Base+0x3da>
   169f4:	ldrd	r2, r3, [sp, #16]
   169f8:	adds	r3, #1
   169fa:	it	eq
   169fc:	cmpeq.w	r2, #4294967295	; 0xffffffff
   16a00:	bne.n	16a06 <set_extent_bits@@Base+0x14a>
   16a02:	movs	r4, #0
   16a04:	b.n	16938 <set_extent_bits@@Base+0x7c>
   16a06:	ldr	r3, [sp, #16]
   16a08:	adds	r6, r3, #1
   16a0a:	ldr	r3, [sp, #20]
   16a0c:	adc.w	r7, r3, #0
   16a10:	b.n	16a16 <set_extent_bits@@Base+0x15a>
   16a12:	ldrd	r6, r7, [r5, #40]	; 0x28
   16a16:	mov	r8, r4
   16a18:	b.n	1698a <set_extent_bits@@Base+0xce>
   16a1a:	cmp	r7, r3
   16a1c:	it	eq
   16a1e:	cmpeq	r6, r2
   16a20:	bcs.n	16a7a <set_extent_bits@@Base+0x1be>
   16a22:	cmp	fp, r3
   16a24:	it	eq
   16a26:	cmpeq	sl, r2
   16a28:	bcc.n	16a72 <set_extent_bits@@Base+0x1b6>
   16a2a:	adds.w	r5, r2, #4294967295	; 0xffffffff
   16a2e:	adc.w	r3, r3, #4294967295	; 0xffffffff
   16a32:	str	r3, [sp, #16]
   16a34:	ldr	r3, [sp, #80]	; 0x50
   16a36:	mov	r2, r6
   16a38:	mov	r1, r8
   16a3a:	mov	r0, r9
   16a3c:	str	r5, [sp, #0]
   16a3e:	str	r3, [sp, #8]
   16a40:	ldr	r3, [sp, #16]
   16a42:	str	r3, [sp, #4]
   16a44:	mov	r3, r7
   16a46:	bl	16562 <add_merge_cache_extent@@Base+0x476>
   16a4a:	vmov	r1, s16
   16a4e:	mov.w	r2, #454	; 0x1c6
   16a52:	cmn.w	r0, #17
   16a56:	mov	r4, r0
   16a58:	vmov	r0, s17
   16a5c:	ite	ne
   16a5e:	movne	r3, #0
   16a60:	moveq	r3, #1
   16a62:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   16a66:	cmp	r4, #0
   16a68:	bne.w	16938 <set_extent_bits@@Base+0x7c>
   16a6c:	ldr	r3, [sp, #16]
   16a6e:	adds	r6, r5, #1
   16a70:	b.n	16a0c <set_extent_bits@@Base+0x150>
   16a72:	mov	r5, sl
   16a74:	str.w	fp, [sp, #16]
   16a78:	b.n	16a34 <set_extent_bits@@Base+0x178>
   16a7a:	adds.w	r2, sl, #1
   16a7e:	mov	r1, r5
   16a80:	adc.w	r3, fp, #0
   16a84:	mov	r0, r9
   16a86:	strd	r2, r3, [sp]
   16a8a:	mov	r2, r8
   16a8c:	bl	163a4 <add_merge_cache_extent@@Base+0x2b8>
   16a90:	ldr	r1, [pc, #76]	; (16ae0 <set_extent_bits@@Base+0x224>)
   16a92:	mov.w	r2, #468	; 0x1d4
   16a96:	add	r1, pc
   16a98:	adds	r1, #120	; 0x78
   16a9a:	cmn.w	r0, #17
   16a9e:	mov	r4, r0
   16aa0:	ldr	r0, [pc, #64]	; (16ae4 <set_extent_bits@@Base+0x228>)
   16aa2:	ite	ne
   16aa4:	movne	r3, #0
   16aa6:	moveq	r3, #1
   16aa8:	add	r0, pc
   16aaa:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   16aae:	ldr	r3, [r5, #60]	; 0x3c
   16ab0:	ldr	r2, [sp, #80]	; 0x50
   16ab2:	mov	r1, r8
   16ab4:	mov	r0, r9
   16ab6:	orrs	r3, r2
   16ab8:	str	r3, [r5, #60]	; 0x3c
   16aba:	bl	164c6 <add_merge_cache_extent@@Base+0x3da>
   16abe:	b.n	16938 <set_extent_bits@@Base+0x7c>
   16ac0:	mvn.w	r4, #11
   16ac4:	b.n	16938 <set_extent_bits@@Base+0x7c>
   16ac6:	nop
   16ac8:	ldr	r0, [r2, r3]
   16aca:	movs	r2, r0
   16acc:	ldrsb	r6, [r1, r7]
   16ace:	movs	r2, r0
   16ad0:	ldr	r4, [r7, r1]
   16ad2:	movs	r2, r0
   16ad4:	ldrsb	r0, [r7, r5]
   16ad6:	movs	r2, r0
   16ad8:	ldrsb	r0, [r4, r7]
   16ada:	movs	r2, r0
   16adc:	ldrsb	r4, [r3, r3]
   16ade:	movs	r2, r0
   16ae0:	ldrsb	r6, [r0, r4]
   16ae2:	movs	r2, r0
   16ae4:	ldrsb	r2, [r0, r0]
   16ae6:	movs	r2, r0

00016ae8 <set_extent_dirty@@Base>:
   16ae8:	push	{r4, r5, lr}
   16aea:	sub	sp, #20
   16aec:	movs	r1, #1
   16aee:	ldrd	r4, r5, [sp, #32]
   16af2:	str	r1, [sp, #8]
   16af4:	strd	r4, r5, [sp]
   16af8:	bl	168bc <set_extent_bits@@Base>
   16afc:	add	sp, #20
   16afe:	pop	{r4, r5, pc}

00016b00 <clear_extent_dirty@@Base>:
   16b00:	push	{r4, r5, lr}
   16b02:	sub	sp, #20
   16b04:	movs	r1, #1
   16b06:	ldrd	r4, r5, [sp, #32]
   16b0a:	str	r1, [sp, #8]
   16b0c:	strd	r4, r5, [sp]
   16b10:	bl	16746 <clear_extent_bits@@Base>
   16b14:	add	sp, #20
   16b16:	pop	{r4, r5, pc}

00016b18 <find_first_extent_bit@@Base>:
   16b18:	push	{r3, r4, r5, r6, r7, lr}
   16b1a:	mov	r6, r2
   16b1c:	ldr	r4, [sp, #32]
   16b1e:	mov	r7, r3
   16b20:	bl	15fdc <search_cache_extent@@Base>
   16b24:	cbz	r0, 16b56 <find_first_extent_bit@@Base+0x3e>
   16b26:	ldrd	r2, r3, [r0, #48]	; 0x30
   16b2a:	cmp	r3, r7
   16b2c:	it	eq
   16b2e:	cmpeq	r2, r6
   16b30:	bcc.n	16b50 <find_first_extent_bit@@Base+0x38>
   16b32:	ldr	r3, [r0, #60]	; 0x3c
   16b34:	tst	r4, r3
   16b36:	beq.n	16b50 <find_first_extent_bit@@Base+0x38>
   16b38:	ldrd	r4, r5, [r0, #40]	; 0x28
   16b3c:	ldr	r3, [sp, #24]
   16b3e:	strd	r4, r5, [r3]
   16b42:	ldr	r3, [sp, #28]
   16b44:	ldrd	r0, r1, [r0, #48]	; 0x30
   16b48:	strd	r0, r1, [r3]
   16b4c:	movs	r0, #0
   16b4e:	pop	{r3, r4, r5, r6, r7, pc}
   16b50:	bl	160b0 <next_cache_extent@@Base>
   16b54:	b.n	16b24 <find_first_extent_bit@@Base+0xc>
   16b56:	movs	r0, #1
   16b58:	b.n	16b4e <find_first_extent_bit@@Base+0x36>

00016b5a <test_range_bit@@Base>:
   16b5a:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   16b5e:	mov	r4, r2
   16b60:	ldrd	r8, r9, [sp, #32]
   16b64:	mov	r5, r3
   16b66:	ldr	r7, [sp, #44]	; 0x2c
   16b68:	bl	15fdc <search_cache_extent@@Base>
   16b6c:	movs	r6, #0
   16b6e:	cbnz	r0, 16bae <test_range_bit@@Base+0x54>
   16b70:	mov	r0, r6
   16b72:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   16b76:	cmp	r9, r3
   16b78:	it	eq
   16b7a:	cmpeq	r8, r2
   16b7c:	bcc.n	16b70 <test_range_bit@@Base+0x16>
   16b7e:	ldr	r3, [r0, #60]	; 0x3c
   16b80:	ldr	r2, [sp, #40]	; 0x28
   16b82:	tst	r2, r3
   16b84:	beq.n	16ba8 <test_range_bit@@Base+0x4e>
   16b86:	movs	r6, #1
   16b88:	cmp	r7, #0
   16b8a:	beq.n	16b70 <test_range_bit@@Base+0x16>
   16b8c:	ldrd	r3, r2, [r0, #48]	; 0x30
   16b90:	adds	r4, r3, #1
   16b92:	adc.w	r5, r2, #0
   16b96:	cmp	r9, r5
   16b98:	it	eq
   16b9a:	cmpeq	r8, r4
   16b9c:	bcc.n	16b70 <test_range_bit@@Base+0x16>
   16b9e:	bl	160b0 <next_cache_extent@@Base>
   16ba2:	cbnz	r0, 16bae <test_range_bit@@Base+0x54>
   16ba4:	cbnz	r7, 16bc6 <test_range_bit@@Base+0x6c>
   16ba6:	b.n	16b70 <test_range_bit@@Base+0x16>
   16ba8:	cmp	r7, #0
   16baa:	beq.n	16b8c <test_range_bit@@Base+0x32>
   16bac:	b.n	16bc6 <test_range_bit@@Base+0x6c>
   16bae:	cmp	r9, r5
   16bb0:	it	eq
   16bb2:	cmpeq	r8, r4
   16bb4:	bcc.n	16b70 <test_range_bit@@Base+0x16>
   16bb6:	ldrd	r2, r3, [r0, #40]	; 0x28
   16bba:	cmp	r7, #0
   16bbc:	beq.n	16b76 <test_range_bit@@Base+0x1c>
   16bbe:	cmp	r5, r3
   16bc0:	it	eq
   16bc2:	cmpeq	r4, r2
   16bc4:	bcs.n	16b7e <test_range_bit@@Base+0x24>
   16bc6:	movs	r6, #0
   16bc8:	b.n	16b70 <test_range_bit@@Base+0x16>

00016bca <set_state_private@@Base>:
   16bca:	push	{r3, r4, r5, lr}
   16bcc:	mov	r4, r2
   16bce:	mov	r5, r3
   16bd0:	bl	15fdc <search_cache_extent@@Base>
   16bd4:	cbz	r0, 16bee <set_state_private@@Base+0x24>
   16bd6:	ldrd	r2, r3, [r0, #40]	; 0x28
   16bda:	cmp	r3, r5
   16bdc:	it	eq
   16bde:	cmpeq	r2, r4
   16be0:	bne.n	16bee <set_state_private@@Base+0x24>
   16be2:	ldrd	r2, r3, [sp, #16]
   16be6:	strd	r2, r3, [r0, #64]	; 0x40
   16bea:	movs	r0, #0
   16bec:	pop	{r3, r4, r5, pc}
   16bee:	mvn.w	r0, #1
   16bf2:	b.n	16bec <set_state_private@@Base+0x22>

00016bf4 <get_state_private@@Base>:
   16bf4:	push	{r3, r4, r5, lr}
   16bf6:	mov	r4, r2
   16bf8:	mov	r5, r3
   16bfa:	bl	15fdc <search_cache_extent@@Base>
   16bfe:	cbz	r0, 16c1a <get_state_private@@Base+0x26>
   16c00:	ldrd	r2, r3, [r0, #40]	; 0x28
   16c04:	cmp	r3, r5
   16c06:	it	eq
   16c08:	cmpeq	r2, r4
   16c0a:	bne.n	16c1a <get_state_private@@Base+0x26>
   16c0c:	ldrd	r0, r1, [r0, #64]	; 0x40
   16c10:	ldr	r3, [sp, #16]
   16c12:	strd	r0, r1, [r3]
   16c16:	movs	r0, #0
   16c18:	pop	{r3, r4, r5, pc}
   16c1a:	mvn.w	r0, #1
   16c1e:	b.n	16c18 <get_state_private@@Base+0x24>

00016c20 <free_extent_buffer@@Base>:
   16c20:	movs	r1, #0
   16c22:	b.n	16602 <add_merge_cache_extent@@Base+0x516>

00016c24 <free_extent_buffer_nocache@@Base>:
   16c24:	movs	r1, #1
   16c26:	b.n	16602 <add_merge_cache_extent@@Base+0x516>

00016c28 <extent_io_tree_cleanup@@Base>:
   16c28:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16c2c:	add.w	r8, r0, #8
   16c30:	ldr.w	r9, [pc, #84]	; 16c88 <extent_io_tree_cleanup@@Base+0x60>
   16c34:	sub	sp, #20
   16c36:	ldr	r5, [pc, #84]	; (16c8c <extent_io_tree_cleanup@@Base+0x64>)
   16c38:	mov	r4, r0
   16c3a:	add	r9, pc
   16c3c:	add	r5, pc
   16c3e:	ldr	r3, [r4, #8]
   16c40:	cmp	r3, r8
   16c42:	bne.n	16c54 <extent_io_tree_cleanup@@Base+0x2c>
   16c44:	ldr	r1, [pc, #72]	; (16c90 <extent_io_tree_cleanup@@Base+0x68>)
   16c46:	mov	r0, r4
   16c48:	add	r1, pc
   16c4a:	add	sp, #20
   16c4c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   16c50:	b.w	160be <cache_tree_free_extents@@Base>
   16c54:	ldr	r2, [r3, #20]
   16c56:	sub.w	r7, r3, #60	; 0x3c
   16c5a:	cbz	r2, 16c7e <extent_io_tree_cleanup@@Base+0x56>
   16c5c:	ldr	r2, [pc, #52]	; (16c94 <extent_io_tree_cleanup@@Base+0x6c>)
   16c5e:	ldr	r6, [r5, r2]
   16c60:	ldr	r2, [r3, #16]
   16c62:	str	r2, [sp, #8]
   16c64:	mov	r2, r9
   16c66:	ldrd	r0, r1, [r3, #-20]
   16c6a:	strd	r0, r1, [sp]
   16c6e:	movs	r1, #1
   16c70:	ldr	r0, [r6, #0]
   16c72:	blx	881c <__fprintf_chk@plt+0x4>
   16c76:	mov	r0, r7
   16c78:	bl	16c24 <free_extent_buffer_nocache@@Base>
   16c7c:	b.n	16c3e <extent_io_tree_cleanup@@Base+0x16>
   16c7e:	mov	r0, r7
   16c80:	bl	16400 <add_merge_cache_extent@@Base+0x314>
   16c84:	b.n	16c3e <extent_io_tree_cleanup@@Base+0x16>
   16c86:	nop
   16c88:	strb	r7, [r7, r1]
   16c8a:	movs	r2, r0
   16c8c:	b.n	16f28 <read_data_from_disk@@Base+0x7e>
   16c8e:	movs	r4, r0
   16c90:	ldr??.w	pc, [r9, #255]!
   16c94:	lsls	r4, r6, #8
	...

00016c98 <find_extent_buffer@@Base>:
   16c98:	stmdb	sp!, {r0, r1, r4, r6, r7, r8, r9, lr}
   16c9c:	mov	r4, r0
   16c9e:	ldr	r6, [sp, #32]
   16ca0:	movs	r7, #0
   16ca2:	adds	r0, #4
   16ca4:	mov	r8, r2
   16ca6:	mov	r9, r3
   16ca8:	strd	r6, r7, [sp]
   16cac:	bl	15f1c <lookup_cache_extent@@Base>
   16cb0:	cbz	r0, 16ce8 <find_extent_buffer@@Base+0x50>
   16cb2:	ldrd	r2, r3, [r0, #24]
   16cb6:	cmp	r3, r9
   16cb8:	it	eq
   16cba:	cmpeq	r2, r8
   16cbc:	bne.n	16cee <find_extent_buffer@@Base+0x56>
   16cbe:	ldrd	r2, r3, [r0, #32]
   16cc2:	cmp	r7, r3
   16cc4:	it	eq
   16cc6:	cmpeq	r6, r2
   16cc8:	bne.n	16cee <find_extent_buffer@@Base+0x56>
   16cca:	ldrd	r1, r2, [r0, #60]	; 0x3c
   16cce:	add.w	r3, r0, #60	; 0x3c
   16cd2:	adds	r4, #8
   16cd4:	str	r2, [r1, #4]
   16cd6:	str	r1, [r2, #0]
   16cd8:	ldr	r2, [r4, #4]
   16cda:	str	r3, [r4, #4]
   16cdc:	strd	r4, r2, [r0, #60]	; 0x3c
   16ce0:	str	r3, [r2, #0]
   16ce2:	ldr	r3, [r0, #80]	; 0x50
   16ce4:	adds	r3, #1
   16ce6:	str	r3, [r0, #80]	; 0x50
   16ce8:	add	sp, #8
   16cea:	ldmia.w	sp!, {r4, r6, r7, r8, r9, pc}
   16cee:	movs	r0, #0
   16cf0:	b.n	16ce8 <find_extent_buffer@@Base+0x50>

00016cf2 <find_first_extent_buffer@@Base>:
   16cf2:	push	{r4, lr}
   16cf4:	mov	r4, r0
   16cf6:	adds	r0, #4
   16cf8:	bl	15fdc <search_cache_extent@@Base>
   16cfc:	cbz	r0, 16d1c <find_first_extent_buffer@@Base+0x2a>
   16cfe:	ldrd	r1, r2, [r0, #60]	; 0x3c
   16d02:	add.w	r3, r0, #60	; 0x3c
   16d06:	adds	r4, #8
   16d08:	str	r2, [r1, #4]
   16d0a:	str	r1, [r2, #0]
   16d0c:	ldr	r2, [r4, #4]
   16d0e:	str	r3, [r4, #4]
   16d10:	strd	r4, r2, [r0, #60]	; 0x3c
   16d14:	str	r3, [r2, #0]
   16d16:	ldr	r3, [r0, #80]	; 0x50
   16d18:	adds	r3, #1
   16d1a:	str	r3, [r0, #80]	; 0x50
   16d1c:	pop	{r4, pc}

00016d1e <alloc_extent_buffer@@Base>:
   16d1e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16d22:	sub	sp, #20
   16d24:	add.w	sl, r0, #68	; 0x44
   16d28:	mov	r5, r0
   16d2a:	ldr.w	fp, [sp, #56]	; 0x38
   16d2e:	movs	r7, #0
   16d30:	mov	r0, sl
   16d32:	mov	r8, r2
   16d34:	mov	r9, r3
   16d36:	mov	r6, fp
   16d38:	strd	r6, r7, [sp]
   16d3c:	bl	15f1c <lookup_cache_extent@@Base>
   16d40:	mov	r4, r0
   16d42:	cbz	r0, 16d88 <alloc_extent_buffer@@Base+0x6a>
   16d44:	ldrd	r2, r3, [r0, #24]
   16d48:	cmp	r3, r9
   16d4a:	it	eq
   16d4c:	cmpeq	r2, r8
   16d4e:	bne.n	16d82 <alloc_extent_buffer@@Base+0x64>
   16d50:	ldrd	r2, r3, [r0, #32]
   16d54:	cmp	r7, r3
   16d56:	it	eq
   16d58:	cmpeq	fp, r2
   16d5a:	bne.n	16d82 <alloc_extent_buffer@@Base+0x64>
   16d5c:	ldrd	r1, r2, [r0, #60]	; 0x3c
   16d60:	add.w	r3, r0, #60	; 0x3c
   16d64:	adds	r5, #72	; 0x48
   16d66:	str	r2, [r1, #4]
   16d68:	str	r1, [r2, #0]
   16d6a:	ldr	r2, [r5, #4]
   16d6c:	str	r3, [r5, #4]
   16d6e:	strd	r5, r2, [r0, #60]	; 0x3c
   16d72:	str	r3, [r2, #0]
   16d74:	ldr	r3, [r0, #80]	; 0x50
   16d76:	adds	r3, #1
   16d78:	str	r3, [r0, #80]	; 0x50
   16d7a:	mov	r0, r4
   16d7c:	add	sp, #20
   16d7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16d82:	mov	r0, r4
   16d84:	bl	16c20 <free_extent_buffer@@Base>
   16d88:	mov	r2, r8
   16d8a:	mov	r3, r9
   16d8c:	mov	r0, r5
   16d8e:	str.w	fp, [sp]
   16d92:	bl	162c6 <add_merge_cache_extent@@Base+0x1da>
   16d96:	mov	r4, r0
   16d98:	cmp	r0, #0
   16d9a:	beq.n	16d7a <alloc_extent_buffer@@Base+0x5c>
   16d9c:	mov	r1, r0
   16d9e:	mov	r0, sl
   16da0:	bl	15e9a <insert_cache_extent@@Base>
   16da4:	cbz	r0, 16db0 <alloc_extent_buffer@@Base+0x92>
   16da6:	mov	r0, r4
   16da8:	movs	r4, #0
   16daa:	blx	83f0 <free@plt+0x4>
   16dae:	b.n	16d7a <alloc_extent_buffer@@Base+0x5c>
   16db0:	ldr	r2, [r5, #76]	; 0x4c
   16db2:	add.w	r3, r4, #60	; 0x3c
   16db6:	add.w	r8, r5, #72	; 0x48
   16dba:	str	r3, [r5, #76]	; 0x4c
   16dbc:	strd	r8, r2, [r4, #60]	; 0x3c
   16dc0:	str	r3, [r2, #0]
   16dc2:	ldrd	r3, r2, [r5, #80]	; 0x50
   16dc6:	adds	r3, r6, r3
   16dc8:	str	r3, [sp, #8]
   16dca:	adc.w	r3, r7, r2
   16dce:	str	r3, [sp, #12]
   16dd0:	ldrd	r2, r3, [sp, #8]
   16dd4:	ldrd	r0, r1, [sp, #8]
   16dd8:	strd	r2, r3, [r5, #80]	; 0x50
   16ddc:	ldrd	r2, r3, [r5, #88]	; 0x58
   16de0:	cmp	r1, r3
   16de2:	it	eq
   16de4:	cmpeq	r0, r2
   16de6:	bcc.n	16d7a <alloc_extent_buffer@@Base+0x5c>
   16de8:	ldr	r0, [r5, #72]	; 0x48
   16dea:	movs	r7, #9
   16dec:	ldr.w	r6, [r0], #-60
   16df0:	subs	r6, #60	; 0x3c
   16df2:	add.w	r3, r0, #60	; 0x3c
   16df6:	cmp	r8, r3
   16df8:	beq.n	16d7a <alloc_extent_buffer@@Base+0x5c>
   16dfa:	ldr	r3, [r0, #80]	; 0x50
   16dfc:	cbnz	r3, 16e02 <alloc_extent_buffer@@Base+0xe4>
   16dfe:	bl	16400 <add_merge_cache_extent@@Base+0x314>
   16e02:	ldrd	r0, r3, [r5, #88]	; 0x58
   16e06:	movs	r2, #10
   16e08:	umull	r0, r1, r0, r7
   16e0c:	mla	r1, r7, r3, r1
   16e10:	movs	r3, #0
   16e12:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   16e16:	ldrd	r2, r3, [r5, #80]	; 0x50
   16e1a:	cmp	r1, r3
   16e1c:	it	eq
   16e1e:	cmpeq	r0, r2
   16e20:	bcs.n	16d7a <alloc_extent_buffer@@Base+0x5c>
   16e22:	ldr	r3, [r6, #60]	; 0x3c
   16e24:	mov	r0, r6
   16e26:	sub.w	r6, r3, #60	; 0x3c
   16e2a:	b.n	16df2 <alloc_extent_buffer@@Base+0xd4>

00016e2c <alloc_dummy_extent_buffer@@Base>:
   16e2c:	push	{r0, r1, r2, lr}
   16e2e:	ldr	r1, [sp, #16]
   16e30:	str	r1, [sp, #0]
   16e32:	bl	162c6 <add_merge_cache_extent@@Base+0x1da>
   16e36:	cbz	r0, 16e44 <alloc_dummy_extent_buffer@@Base+0x18>
   16e38:	movs	r3, #0
   16e3a:	str	r3, [r0, #56]	; 0x38
   16e3c:	ldr	r3, [r0, #84]	; 0x54
   16e3e:	orr.w	r3, r3, #2048	; 0x800
   16e42:	str	r3, [r0, #84]	; 0x54
   16e44:	add	sp, #12
   16e46:	ldr.w	pc, [sp], #4

00016e4a <read_extent_from_disk@@Base>:
   16e4a:	push	{r0, r1, r4, r6, r7, lr}
   16e4c:	add.w	r3, r0, #96	; 0x60
   16e50:	ldrd	r6, r7, [r0, #48]	; 0x30
   16e54:	add	r1, r3
   16e56:	mov	r4, r2
   16e58:	strd	r6, r7, [sp]
   16e5c:	ldr	r0, [r0, #88]	; 0x58
   16e5e:	blx	85cc <pread64@plt>
   16e62:	cmp	r0, #0
   16e64:	bge.n	16e72 <read_extent_from_disk@@Base+0x28>
   16e66:	blx	8740 <__errno_location@plt>
   16e6a:	ldr	r0, [r0, #0]
   16e6c:	negs	r0, r0
   16e6e:	add	sp, #8
   16e70:	pop	{r4, r6, r7, pc}
   16e72:	cmp	r0, r4
   16e74:	ite	eq
   16e76:	moveq	r0, #0
   16e78:	mvnne.w	r0, #4
   16e7c:	b.n	16e6e <read_extent_from_disk@@Base+0x24>

00016e7e <write_extent_to_disk@@Base>:
   16e7e:	push	{r0, r1, r4, lr}
   16e80:	add.w	r1, r0, #96	; 0x60
   16e84:	ldrd	r2, r3, [r0, #48]	; 0x30
   16e88:	mov	r4, r0
   16e8a:	strd	r2, r3, [sp]
   16e8e:	ldr	r2, [r0, #76]	; 0x4c
   16e90:	ldr	r0, [r0, #88]	; 0x58
   16e92:	blx	87e4 <pwrite64@plt>
   16e96:	cmp	r0, #0
   16e98:	blt.n	16ea6 <write_extent_to_disk@@Base+0x28>
   16e9a:	ldr	r3, [r4, #76]	; 0x4c
   16e9c:	cmp	r3, r0
   16e9e:	ite	eq
   16ea0:	moveq	r0, #0
   16ea2:	mvnne.w	r0, #4
   16ea6:	add	sp, #8
   16ea8:	pop	{r4, pc}

00016eaa <read_data_from_disk@@Base>:
   16eaa:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16eae:	mov	r5, r2
   16eb0:	ldr	r2, [pc, #292]	; (16fd8 <read_data_from_disk@@Base+0x12e>)
   16eb2:	mov	r8, r3
   16eb4:	ldr	r3, [pc, #292]	; (16fdc <read_data_from_disk@@Base+0x132>)
   16eb6:	sub	sp, #68	; 0x44
   16eb8:	add	r2, pc
   16eba:	ldr	r7, [pc, #292]	; (16fe0 <read_data_from_disk@@Base+0x136>)
   16ebc:	str	r1, [sp, #24]
   16ebe:	mov	r9, r0
   16ec0:	ldr	r3, [r2, r3]
   16ec2:	add	r7, pc
   16ec4:	ldrd	sl, fp, [sp, #104]	; 0x68
   16ec8:	ldr	r3, [r3, #0]
   16eca:	str	r3, [sp, #60]	; 0x3c
   16ecc:	mov.w	r3, #0
   16ed0:	movs	r3, #0
   16ed2:	mov	r6, r3
   16ed4:	str	r3, [sp, #44]	; 0x2c
   16ed6:	str	r3, [sp, #28]
   16ed8:	add	r3, sp, #44	; 0x2c
   16eda:	str	r3, [sp, #32]
   16edc:	add	r3, sp, #48	; 0x30
   16ede:	str	r3, [sp, #36]	; 0x24
   16ee0:	orrs.w	r3, sl, fp
   16ee4:	bne.n	16eea <read_data_from_disk@@Base+0x40>
   16ee6:	movs	r4, #0
   16ee8:	b.n	16f24 <read_data_from_disk@@Base+0x7a>
   16eea:	ldr	r3, [sp, #28]
   16eec:	mov	r2, r5
   16eee:	movs	r1, #0
   16ef0:	mov	r0, r9
   16ef2:	strd	sl, fp, [sp, #48]	; 0x30
   16ef6:	str	r3, [sp, #12]
   16ef8:	ldr	r3, [sp, #112]	; 0x70
   16efa:	str	r3, [sp, #8]
   16efc:	ldr	r3, [sp, #32]
   16efe:	str	r3, [sp, #4]
   16f00:	ldr	r3, [sp, #36]	; 0x24
   16f02:	str	r3, [sp, #0]
   16f04:	mov	r3, r8
   16f06:	bl	29e28 <btrfs_map_block@@Base>
   16f0a:	cbz	r0, 16f38 <read_data_from_disk@@Base+0x8e>
   16f0c:	ldr	r3, [pc, #212]	; (16fe4 <read_data_from_disk@@Base+0x13a>)
   16f0e:	movs	r1, #1
   16f10:	ldr	r2, [pc, #212]	; (16fe8 <read_data_from_disk@@Base+0x13e>)
   16f12:	ldr	r3, [r7, r3]
   16f14:	add	r2, pc
   16f16:	strd	r5, r8, [sp]
   16f1a:	ldr	r0, [r3, #0]
   16f1c:	blx	881c <__fprintf_chk@plt+0x4>
   16f20:	mvn.w	r4, #4
   16f24:	ldr	r2, [pc, #196]	; (16fec <read_data_from_disk@@Base+0x142>)
   16f26:	ldr	r3, [pc, #180]	; (16fdc <read_data_from_disk@@Base+0x132>)
   16f28:	add	r2, pc
   16f2a:	ldr	r3, [r2, r3]
   16f2c:	ldr	r2, [r3, #0]
   16f2e:	ldr	r3, [sp, #60]	; 0x3c
   16f30:	eors	r2, r3
   16f32:	beq.n	16fd0 <read_data_from_disk@@Base+0x126>
   16f34:	blx	84cc <__stack_chk_fail@plt>
   16f38:	ldr	r1, [sp, #44]	; 0x2c
   16f3a:	ldrd	r2, r3, [sp, #48]	; 0x30
   16f3e:	ldr	r0, [r1, #8]
   16f40:	cmp	fp, r3
   16f42:	it	eq
   16f44:	cmpeq	sl, r2
   16f46:	ldr	r4, [r0, #24]
   16f48:	itt	cc
   16f4a:	movcc	r2, sl
   16f4c:	movcc	r3, fp
   16f4e:	strd	r2, r3, [sp, #48]	; 0x30
   16f52:	cmp	r4, #0
   16f54:	bgt.n	16f5e <read_data_from_disk@@Base+0xb4>
   16f56:	mov	r0, r1
   16f58:	blx	83f0 <free@plt+0x4>
   16f5c:	b.n	16f20 <read_data_from_disk@@Base+0x76>
   16f5e:	ldrd	r0, r1, [r1, #16]
   16f62:	ldr	r3, [sp, #24]
   16f64:	strd	r0, r1, [sp]
   16f68:	adds	r1, r3, r6
   16f6a:	mov	r0, r4
   16f6c:	blx	85cc <pread64@plt>
   16f70:	mov	r4, r0
   16f72:	ldr	r0, [sp, #44]	; 0x2c
   16f74:	blx	83f0 <free@plt+0x4>
   16f78:	cmp	r4, #0
   16f7a:	bge.n	16f94 <read_data_from_disk@@Base+0xea>
   16f7c:	ldr	r3, [pc, #100]	; (16fe4 <read_data_from_disk@@Base+0x13a>)
   16f7e:	movs	r1, #1
   16f80:	ldr	r2, [pc, #108]	; (16ff0 <read_data_from_disk@@Base+0x146>)
   16f82:	ldr	r3, [r7, r3]
   16f84:	add	r2, pc
   16f86:	str	r4, [sp, #8]
   16f88:	strd	r5, r8, [sp]
   16f8c:	ldr	r0, [r3, #0]
   16f8e:	blx	881c <__fprintf_chk@plt+0x4>
   16f92:	b.n	16f24 <read_data_from_disk@@Base+0x7a>
   16f94:	ldrd	r0, r1, [sp, #48]	; 0x30
   16f98:	asrs	r3, r4, #31
   16f9a:	cmp	r3, r1
   16f9c:	it	eq
   16f9e:	cmpeq	r4, r0
   16fa0:	beq.n	16fbe <read_data_from_disk@@Base+0x114>
   16fa2:	ldr	r3, [pc, #64]	; (16fe4 <read_data_from_disk@@Base+0x13a>)
   16fa4:	ldr	r2, [pc, #76]	; (16ff4 <read_data_from_disk@@Base+0x14a>)
   16fa6:	ldr	r3, [r7, r3]
   16fa8:	add	r2, pc
   16faa:	strd	r0, r1, [sp, #16]
   16fae:	movs	r1, #1
   16fb0:	str	r4, [sp, #8]
   16fb2:	strd	r5, r8, [sp]
   16fb6:	ldr	r0, [r3, #0]
   16fb8:	blx	881c <__fprintf_chk@plt+0x4>
   16fbc:	b.n	16f20 <read_data_from_disk@@Base+0x76>
   16fbe:	subs.w	sl, sl, r4
   16fc2:	sbc.w	fp, fp, r3
   16fc6:	adds	r5, r5, r4
   16fc8:	adc.w	r8, r8, r3
   16fcc:	adds	r6, r6, r4
   16fce:	b.n	16ee0 <read_data_from_disk@@Base+0x36>
   16fd0:	mov	r0, r4
   16fd2:	add	sp, #68	; 0x44
   16fd4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16fd8:	udf	#208	; 0xd0
   16fda:	movs	r4, r0
   16fdc:	lsls	r4, r4, #8
   16fde:	movs	r0, r0
   16fe0:	udf	#198	; 0xc6
   16fe2:	movs	r4, r0
   16fe4:	lsls	r4, r6, #8
   16fe6:	movs	r0, r0
   16fe8:	str	r4, [r1, r7]
   16fea:	movs	r2, r0
   16fec:	udf	#96	; 0x60
   16fee:	movs	r4, r0
   16ff0:	str	r0, [r7, r5]
   16ff2:	movs	r2, r0
   16ff4:	str	r3, [r5, r5]
   16ff6:	movs	r2, r0

00016ff8 <write_data_to_disk@@Base>:
   16ff8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16ffc:	mov	r6, r2
   16ffe:	vpush	{d8}
   17002:	mov	r7, r3
   17004:	ldr	r2, [pc, #600]	; (17260 <write_data_to_disk@@Base+0x268>)
   17006:	mov	r8, r0
   17008:	ldr	r3, [pc, #600]	; (17264 <write_data_to_disk@@Base+0x26c>)
   1700a:	add	r2, pc
   1700c:	ldr.w	r9, [pc, #600]	; 17268 <write_data_to_disk@@Base+0x270>
   17010:	sub	sp, #68	; 0x44
   17012:	add	r9, pc
   17014:	str	r1, [sp, #32]
   17016:	ldr	r3, [r2, r3]
   17018:	ldr	r3, [r3, #0]
   1701a:	str	r3, [sp, #60]	; 0x3c
   1701c:	mov.w	r3, #0
   17020:	movs	r3, #0
   17022:	strd	r3, r3, [sp, #40]	; 0x28
   17026:	str	r3, [sp, #20]
   17028:	ldr	r3, [pc, #576]	; (1726c <write_data_to_disk@@Base+0x274>)
   1702a:	add	r3, pc
   1702c:	adds	r3, #136	; 0x88
   1702e:	vmov	s16, r3
   17032:	ldr	r3, [pc, #572]	; (17270 <write_data_to_disk@@Base+0x278>)
   17034:	add	r3, pc
   17036:	vmov	s17, r3
   1703a:	ldrd	r3, r4, [sp, #112]	; 0x70
   1703e:	orrs	r3, r4
   17040:	bne.n	17046 <write_data_to_disk@@Base+0x4e>
   17042:	movs	r4, #0
   17044:	b.n	1711a <write_data_to_disk@@Base+0x122>
   17046:	ldrd	r3, r4, [sp, #112]	; 0x70
   1704a:	mov	r2, r6
   1704c:	movs	r1, #1
   1704e:	mov	r0, r8
   17050:	strd	r3, r4, [sp, #48]	; 0x30
   17054:	add	r3, sp, #44	; 0x2c
   17056:	str	r3, [sp, #12]
   17058:	ldr	r3, [sp, #120]	; 0x78
   1705a:	str	r3, [sp, #8]
   1705c:	add	r3, sp, #40	; 0x28
   1705e:	str	r3, [sp, #4]
   17060:	add	r3, sp, #48	; 0x30
   17062:	str	r3, [sp, #0]
   17064:	mov	r3, r7
   17066:	bl	29e28 <btrfs_map_block@@Base>
   1706a:	mov	sl, r0
   1706c:	cbz	r0, 1708a <write_data_to_disk@@Base+0x92>
   1706e:	ldr	r3, [pc, #516]	; (17274 <write_data_to_disk@@Base+0x27c>)
   17070:	movs	r1, #1
   17072:	ldr	r2, [pc, #516]	; (17278 <write_data_to_disk@@Base+0x280>)
   17074:	ldr.w	r3, [r9, r3]
   17078:	add	r2, pc
   1707a:	strd	r6, r7, [sp]
   1707e:	ldr	r0, [r3, #0]
   17080:	blx	881c <__fprintf_chk@plt+0x4>
   17084:	mvn.w	r4, #4
   17088:	b.n	1711a <write_data_to_disk@@Base+0x122>
   1708a:	ldr.w	fp, [sp, #44]	; 0x2c
   1708e:	cmp.w	fp, #0
   17092:	bne.n	170ba <write_data_to_disk@@Base+0xc2>
   17094:	ldr	r3, [sp, #32]
   17096:	ldr	r2, [sp, #20]
   17098:	add.w	fp, r3, r2
   1709c:	ldr	r3, [sp, #40]	; 0x28
   1709e:	ldr	r2, [r3, #4]
   170a0:	cmp	r2, sl
   170a2:	ble.n	17186 <write_data_to_disk@@Base+0x18e>
   170a4:	add.w	r2, r3, sl, lsl #4
   170a8:	ldr	r2, [r2, #8]
   170aa:	ldr	r0, [r2, #24]
   170ac:	cmp	r0, #0
   170ae:	bgt.w	171d4 <write_data_to_disk@@Base+0x1dc>
   170b2:	mov	r0, r3
   170b4:	blx	83f0 <free@plt+0x4>
   170b8:	b.n	17084 <write_data_to_disk@@Base+0x8c>
   170ba:	ldrd	r3, r4, [sp, #48]	; 0x30
   170be:	mov	r5, r0
   170c0:	strd	r3, r4, [sp, #24]
   170c4:	ldrd	r2, r3, [sp, #24]
   170c8:	ldr.w	r4, [r8, #384]	; 0x180
   170cc:	cmp	r3, r0
   170ce:	it	eq
   170d0:	cmpeq	r2, r4
   170d2:	itt	cc
   170d4:	movcc	r4, r2
   170d6:	movcc	r5, r3
   170d8:	ldrd	r2, r3, [sp, #112]	; 0x70
   170dc:	cmp	r3, r5
   170de:	it	eq
   170e0:	cmpeq	r2, r4
   170e2:	it	cc
   170e4:	movcc	r4, r2
   170e6:	add.w	r2, r4, #96	; 0x60
   170ea:	it	cc
   170ec:	movcc	r5, r3
   170ee:	str	r2, [sp, #36]	; 0x24
   170f0:	mov	r0, r2
   170f2:	strd	r4, r5, [sp, #48]	; 0x30
   170f6:	blx	8634 <malloc@plt+0x4>
   170fa:	ldr	r2, [sp, #36]	; 0x24
   170fc:	mov	sl, r0
   170fe:	cbnz	r0, 17130 <write_data_to_disk@@Base+0x138>
   17100:	ldr	r3, [pc, #368]	; (17274 <write_data_to_disk@@Base+0x27c>)
   17102:	mvn.w	r4, #11
   17106:	ldr	r0, [pc, #372]	; (1727c <write_data_to_disk@@Base+0x284>)
   17108:	ldr.w	r3, [r9, r3]
   1710c:	add	r0, pc
   1710e:	ldr	r1, [r3, #0]
   17110:	blx	8930 <fputs@plt+0x4>
   17114:	ldr	r0, [sp, #44]	; 0x2c
   17116:	blx	83f0 <free@plt+0x4>
   1711a:	ldr	r2, [pc, #356]	; (17280 <write_data_to_disk@@Base+0x288>)
   1711c:	ldr	r3, [pc, #324]	; (17264 <write_data_to_disk@@Base+0x26c>)
   1711e:	add	r2, pc
   17120:	ldr	r3, [r2, r3]
   17122:	ldr	r2, [r3, #0]
   17124:	ldr	r3, [sp, #60]	; 0x3c
   17126:	eors	r2, r3
   17128:	beq.w	17252 <write_data_to_disk@@Base+0x25a>
   1712c:	blx	84cc <__stack_chk_fail@plt>
   17130:	movs	r1, #0
   17132:	blx	8780 <memset@plt+0x4>
   17136:	ldr	r3, [sp, #32]
   17138:	ldr	r1, [sp, #20]
   1713a:	mov	r2, r4
   1713c:	str.w	r4, [sl, #76]	; 0x4c
   17140:	add.w	r0, sl, #96	; 0x60
   17144:	adds	r1, r3, r1
   17146:	strd	r6, r7, [sl, #40]	; 0x28
   1714a:	blx	843c <memcpy@plt+0x4>
   1714e:	ldrd	r3, r4, [sp, #24]
   17152:	ldr	r2, [sp, #40]	; 0x28
   17154:	mov	r1, sl
   17156:	mov	r0, r8
   17158:	str.w	fp, [sp, #8]
   1715c:	strd	r3, r4, [sp]
   17160:	bl	2a790 <write_raid56_with_parity@@Base>
   17164:	vmov	r1, s16
   17168:	movw	r2, #922	; 0x39a
   1716c:	mov	r3, r0
   1716e:	vmov	r0, s17
   17172:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   17176:	mov	r0, sl
   17178:	blx	83f0 <free@plt+0x4>
   1717c:	ldr	r0, [sp, #44]	; 0x2c
   1717e:	blx	83f0 <free@plt+0x4>
   17182:	movs	r3, #0
   17184:	str	r3, [sp, #44]	; 0x2c
   17186:	ldrd	r2, r3, [sp, #112]	; 0x70
   1718a:	ldrd	r4, r5, [sp, #48]	; 0x30
   1718e:	ldr	r1, [pc, #244]	; (17284 <write_data_to_disk@@Base+0x28c>)
   17190:	cmp	r3, r5
   17192:	ldr	r0, [pc, #244]	; (17288 <write_data_to_disk@@Base+0x290>)
   17194:	it	eq
   17196:	cmpeq	r2, r4
   17198:	add	r1, pc
   1719a:	add.w	r1, r1, #136	; 0x88
   1719e:	add	r0, pc
   171a0:	ite	cc
   171a2:	movcc	r3, #1
   171a4:	movcs	r3, #0
   171a6:	movw	r2, #954	; 0x3ba
   171aa:	bl	1631c <add_merge_cache_extent@@Base+0x230>
   171ae:	ldr	r3, [sp, #112]	; 0x70
   171b0:	ldr	r0, [sp, #40]	; 0x28
   171b2:	subs	r3, r3, r4
   171b4:	str	r3, [sp, #112]	; 0x70
   171b6:	ldr	r3, [sp, #116]	; 0x74
   171b8:	sbc.w	r3, r3, r5
   171bc:	str	r3, [sp, #116]	; 0x74
   171be:	ldr	r3, [sp, #20]
   171c0:	adds	r6, r6, r4
   171c2:	adc.w	r7, r5, r7
   171c6:	adds	r3, r3, r4
   171c8:	str	r3, [sp, #20]
   171ca:	blx	83f0 <free@plt+0x4>
   171ce:	movs	r3, #0
   171d0:	str	r3, [sp, #40]	; 0x28
   171d2:	b.n	1703a <write_data_to_disk@@Base+0x42>
   171d4:	add.w	sl, sl, #1
   171d8:	mov	r1, fp
   171da:	add.w	r3, r3, sl, lsl #4
   171de:	ldrd	r3, r4, [r3]
   171e2:	strd	r3, r4, [sp, #24]
   171e6:	ldrd	r2, r3, [sp, #48]	; 0x30
   171ea:	ldrd	r4, r5, [sp, #112]	; 0x70
   171ee:	cmp	r5, r3
   171f0:	it	eq
   171f2:	cmpeq	r4, r2
   171f4:	itt	cc
   171f6:	movcc	r2, r4
   171f8:	movcc	r3, r5
   171fa:	ldrd	r4, r5, [sp, #24]
   171fe:	strd	r2, r3, [sp, #48]	; 0x30
   17202:	strd	r4, r5, [sp]
   17206:	blx	87e4 <pwrite64@plt>
   1720a:	ldrd	r2, r3, [sp, #48]	; 0x30
   1720e:	asrs	r5, r0, #31
   17210:	cmp	r5, r3
   17212:	it	eq
   17214:	cmpeq	r0, r2
   17216:	beq.w	1709c <write_data_to_disk@@Base+0xa4>
   1721a:	ldr	r3, [pc, #88]	; (17274 <write_data_to_disk@@Base+0x27c>)
   1721c:	cmp	r0, #0
   1721e:	ldr.w	r3, [r9, r3]
   17222:	ldr	r5, [r3, #0]
   17224:	bge.n	17244 <write_data_to_disk@@Base+0x24c>
   17226:	blx	8740 <__errno_location@plt>
   1722a:	ldr	r2, [pc, #96]	; (1728c <write_data_to_disk@@Base+0x294>)
   1722c:	movs	r1, #1
   1722e:	add	r2, pc
   17230:	ldr	r3, [r0, #0]
   17232:	mov	r4, r0
   17234:	mov	r0, r5
   17236:	blx	881c <__fprintf_chk@plt+0x4>
   1723a:	ldr	r0, [sp, #40]	; 0x28
   1723c:	ldr	r4, [r4, #0]
   1723e:	blx	83f0 <free@plt+0x4>
   17242:	b.n	1711a <write_data_to_disk@@Base+0x122>
   17244:	ldr	r0, [pc, #72]	; (17290 <write_data_to_disk@@Base+0x298>)
   17246:	mov	r1, r5
   17248:	add	r0, pc
   1724a:	blx	8930 <fputs@plt+0x4>
   1724e:	ldr	r0, [sp, #40]	; 0x28
   17250:	b.n	170b4 <write_data_to_disk@@Base+0xbc>
   17252:	mov	r0, r4
   17254:	add	sp, #68	; 0x44
   17256:	vpop	{d8}
   1725a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1725e:	nop
   17260:	ble.n	17360 <btrfs_clone_extent_buffer@@Base+0x8>
   17262:	movs	r4, r0
   17264:	lsls	r4, r4, #8
   17266:	movs	r0, r0
   17268:	ble.n	17358 <btrfs_clone_extent_buffer@@Base>
   1726a:	movs	r4, r0
   1726c:	str	r2, [r6, r5]
   1726e:	movs	r2, r0
   17270:	adds	r6, #255	; 0xff
   17272:	movs	r2, r0
   17274:	lsls	r4, r6, #8
   17276:	movs	r0, r0
   17278:	str	r0, [r5, r1]
   1727a:	movs	r2, r0
   1727c:	str	r2, [r6, r0]
   1727e:	movs	r2, r0
   17280:	bgt.n	17358 <btrfs_clone_extent_buffer@@Base>
   17282:	movs	r4, r0
   17284:	str	r4, [r0, r0]
   17286:	movs	r2, r0
   17288:	ldr	r7, [pc, #928]	; (1762c <btrfs_uuid_to_key@@Base+0x3c>)
   1728a:	movs	r2, r0
   1728c:	ldr	r7, [pc, #188]	; (1734c <copy_extent_buffer@@Base+0xa>)
   1728e:	movs	r2, r0
   17290:	ldr	r7, [pc, #196]	; (17358 <btrfs_clone_extent_buffer@@Base>)
   17292:	movs	r2, r0

00017294 <set_extent_buffer_dirty@@Base>:
   17294:	push	{r0, r1, r4, r6, r7, lr}
   17296:	mov	r4, r0
   17298:	ldr	r3, [r0, #84]	; 0x54
   1729a:	lsls	r2, r3, #31
   1729c:	bmi.n	172c8 <set_extent_buffer_dirty@@Base+0x34>
   1729e:	orr.w	r3, r3, #1
   172a2:	str	r3, [r0, #84]	; 0x54
   172a4:	ldrd	r2, r3, [r0, #40]	; 0x28
   172a8:	ldr	r1, [r0, #76]	; 0x4c
   172aa:	adds.w	r6, r2, #4294967295	; 0xffffffff
   172ae:	adc.w	r7, r3, #4294967295	; 0xffffffff
   172b2:	adds	r6, r6, r1
   172b4:	adc.w	r7, r7, #0
   172b8:	strd	r6, r7, [sp]
   172bc:	ldr	r0, [r0, #56]	; 0x38
   172be:	bl	16ae8 <set_extent_dirty@@Base>
   172c2:	ldr	r3, [r4, #80]	; 0x50
   172c4:	adds	r3, #1
   172c6:	str	r3, [r4, #80]	; 0x50
   172c8:	movs	r0, #0
   172ca:	add	sp, #8
   172cc:	pop	{r4, r6, r7, pc}

000172ce <clear_extent_buffer_dirty@@Base>:
   172ce:	push	{r0, r1, r4, r6, r7, lr}
   172d0:	mov	r4, r0
   172d2:	ldr	r3, [r0, #84]	; 0x54
   172d4:	lsls	r2, r3, #31
   172d6:	bpl.n	17302 <clear_extent_buffer_dirty@@Base+0x34>
   172d8:	bic.w	r3, r3, #1
   172dc:	str	r3, [r0, #84]	; 0x54
   172de:	ldrd	r2, r3, [r0, #40]	; 0x28
   172e2:	ldr	r1, [r0, #76]	; 0x4c
   172e4:	adds.w	r6, r2, #4294967295	; 0xffffffff
   172e8:	adc.w	r7, r3, #4294967295	; 0xffffffff
   172ec:	adds	r6, r6, r1
   172ee:	adc.w	r7, r7, #0
   172f2:	strd	r6, r7, [sp]
   172f6:	ldr	r0, [r0, #56]	; 0x38
   172f8:	bl	16b00 <clear_extent_dirty@@Base>
   172fc:	mov	r0, r4
   172fe:	bl	16c20 <free_extent_buffer@@Base>
   17302:	movs	r0, #0
   17304:	add	sp, #8
   17306:	pop	{r4, r6, r7, pc}

00017308 <memcmp_extent_buffer@@Base>:
   17308:	push	{r5}
   1730a:	adds	r0, #96	; 0x60
   1730c:	mov	r5, r2
   1730e:	mov	r2, r3
   17310:	add	r0, r5
   17312:	ldr.w	r5, [sp], #4
   17316:	b.w	8460 <memcmp@plt>

0001731a <read_extent_buffer@@Base>:
   1731a:	adds	r0, #96	; 0x60
   1731c:	push	{r5}
   1731e:	mov	r5, r1
   17320:	mov	r1, r2
   17322:	mov	r2, r3
   17324:	add	r1, r0
   17326:	mov	r0, r5
   17328:	ldr.w	r5, [sp], #4
   1732c:	b.w	8438 <memcpy@plt>

00017330 <write_extent_buffer@@Base>:
   17330:	push	{r5}
   17332:	adds	r0, #96	; 0x60
   17334:	mov	r5, r2
   17336:	mov	r2, r3
   17338:	add	r0, r5
   1733a:	ldr.w	r5, [sp], #4
   1733e:	b.w	8438 <memcpy@plt>

00017342 <copy_extent_buffer@@Base>:
   17342:	push	{r6}
   17344:	adds	r0, #96	; 0x60
   17346:	adds	r1, #96	; 0x60
   17348:	mov	r6, r2
   1734a:	add	r1, r3
   1734c:	ldr	r2, [sp, #4]
   1734e:	add	r0, r6
   17350:	ldr.w	r6, [sp], #4
   17354:	b.w	8438 <memcpy@plt>

00017358 <btrfs_clone_extent_buffer@@Base>:
   17358:	push	{r0, r1, r2, r4, r5, lr}
   1735a:	mov	r5, r0
   1735c:	ldr	r3, [r0, #76]	; 0x4c
   1735e:	str	r3, [sp, #0]
   17360:	ldrd	r2, r3, [r0, #40]	; 0x28
   17364:	ldr	r0, [r0, #92]	; 0x5c
   17366:	bl	162c6 <add_merge_cache_extent@@Base+0x1da>
   1736a:	mov	r4, r0
   1736c:	cbz	r0, 17386 <btrfs_clone_extent_buffer@@Base+0x2e>
   1736e:	movs	r3, #0
   17370:	str	r3, [r0, #56]	; 0x38
   17372:	ldr	r2, [r5, #76]	; 0x4c
   17374:	mov	r1, r5
   17376:	str	r2, [sp, #0]
   17378:	mov	r2, r3
   1737a:	bl	17342 <copy_extent_buffer@@Base>
   1737e:	ldr	r3, [r4, #84]	; 0x54
   17380:	orr.w	r3, r3, #2048	; 0x800
   17384:	str	r3, [r4, #84]	; 0x54
   17386:	mov	r0, r4
   17388:	add	sp, #12
   1738a:	pop	{r4, r5, pc}

0001738c <memmove_extent_buffer@@Base>:
   1738c:	adds	r0, #96	; 0x60
   1738e:	push	{r5}
   17390:	mov	r5, r1
   17392:	mov	r1, r2
   17394:	mov	r2, r3
   17396:	add	r1, r0
   17398:	add	r0, r5
   1739a:	ldr.w	r5, [sp], #4
   1739e:	b.w	83dc <memmove@plt>

000173a2 <memset_extent_buffer@@Base>:
   173a2:	push	{r5}
   173a4:	adds	r0, #96	; 0x60
   173a6:	mov	r5, r2
   173a8:	mov	r2, r3
   173aa:	add	r0, r5
   173ac:	ldr.w	r5, [sp], #4
   173b0:	b.w	877c <memset@plt>

000173b4 <extent_buffer_test_bit@@Base>:
   173b4:	cmp	r2, #0
   173b6:	mov	r3, r2
   173b8:	it	lt
   173ba:	addlt	r3, r2, #7
   173bc:	add	r1, r0
   173be:	and.w	r2, r2, #7
   173c2:	add.w	r0, r1, r3, asr #3
   173c6:	ldrb.w	r0, [r0, #96]	; 0x60
   173ca:	asrs	r0, r2
   173cc:	and.w	r0, r0, #1
   173d0:	bx	lr
   173d2:	nop

000173d4 <__crc32c_le@@Base>:
   173d4:	push	{r4, lr}
   173d6:	add	r2, r1
   173d8:	ldr	r4, [pc, #24]	; (173f4 <__crc32c_le@@Base+0x20>)
   173da:	add	r4, pc
   173dc:	cmp	r1, r2
   173de:	bne.n	173e2 <__crc32c_le@@Base+0xe>
   173e0:	pop	{r4, pc}
   173e2:	ldrb.w	r3, [r1], #1
   173e6:	eors	r3, r0
   173e8:	uxtb	r3, r3
   173ea:	ldr.w	r3, [r4, r3, lsl #2]
   173ee:	eor.w	r0, r3, r0, lsr #8
   173f2:	b.n	173dc <__crc32c_le@@Base+0x8>
   173f4:	ldr	r6, [pc, #376]	; (17570 <__btrfs_warning_on@@Base+0x78>)
   173f6:	movs	r2, r0

000173f8 <crc32c_optimization_init@@Base>:
   173f8:	bx	lr

000173fa <crc32c_le@@Base>:
   173fa:	b.w	173d4 <__crc32c_le@@Base>
   173fe:	nop

00017400 <__btrfs_warning@@Base>:
   17400:	push	{r0, r1, r2, r3}
   17402:	push	{r4, r5, lr}
   17404:	sub	sp, #20
   17406:	add	r4, sp, #32
   17408:	ldr	r1, [pc, #88]	; (17464 <__btrfs_warning@@Base+0x64>)
   1740a:	ldr	r3, [pc, #92]	; (17468 <__btrfs_warning@@Base+0x68>)
   1740c:	ldr.w	r2, [r4], #4
   17410:	add	r1, pc
   17412:	add	r3, pc
   17414:	ldr	r0, [pc, #84]	; (1746c <__btrfs_warning@@Base+0x6c>)
   17416:	str	r2, [sp, #4]
   17418:	add	r0, pc
   1741a:	ldr	r2, [pc, #84]	; (17470 <__btrfs_warning@@Base+0x70>)
   1741c:	ldr	r2, [r1, r2]
   1741e:	ldr	r1, [pc, #84]	; (17474 <__btrfs_warning@@Base+0x74>)
   17420:	ldr	r2, [r2, #0]
   17422:	str	r2, [sp, #12]
   17424:	mov.w	r2, #0
   17428:	ldr	r5, [r3, r1]
   1742a:	ldr	r1, [r5, #0]
   1742c:	blx	8930 <fputs@plt+0x4>
   17430:	ldr	r2, [sp, #4]
   17432:	mov	r3, r4
   17434:	movs	r1, #1
   17436:	ldr	r0, [r5, #0]
   17438:	str	r4, [sp, #8]
   1743a:	blx	8674 <__vfprintf_chk@plt>
   1743e:	ldr	r1, [r5, #0]
   17440:	movs	r0, #10
   17442:	blx	8898 <fputc@plt+0x4>
   17446:	ldr	r2, [pc, #48]	; (17478 <__btrfs_warning@@Base+0x78>)
   17448:	ldr	r3, [pc, #36]	; (17470 <__btrfs_warning@@Base+0x70>)
   1744a:	add	r2, pc
   1744c:	ldr	r3, [r2, r3]
   1744e:	ldr	r2, [r3, #0]
   17450:	ldr	r3, [sp, #12]
   17452:	eors	r2, r3
   17454:	beq.n	1745a <__btrfs_warning@@Base+0x5a>
   17456:	blx	84cc <__stack_chk_fail@plt>
   1745a:	add	sp, #20
   1745c:	ldmia.w	sp!, {r4, r5, lr}
   17460:	add	sp, #16
   17462:	bx	lr
   17464:	bls.n	17558 <__btrfs_warning_on@@Base+0x60>
   17466:	movs	r4, r0
   17468:	bls.n	17558 <__btrfs_warning_on@@Base+0x60>
   1746a:	movs	r4, r0
   1746c:	strh	r0, [r4, r0]
   1746e:	movs	r2, r0
   17470:	lsls	r4, r4, #8
   17472:	movs	r0, r0
   17474:	lsls	r4, r6, #8
   17476:	movs	r0, r0
   17478:	bls.n	174f8 <__btrfs_warning_on@@Base>
   1747a:	movs	r4, r0

0001747c <__btrfs_error@@Base>:
   1747c:	push	{r0, r1, r2, r3}
   1747e:	push	{r4, r5, lr}
   17480:	sub	sp, #20
   17482:	add	r4, sp, #32
   17484:	ldr	r1, [pc, #88]	; (174e0 <__btrfs_error@@Base+0x64>)
   17486:	ldr	r3, [pc, #92]	; (174e4 <__btrfs_error@@Base+0x68>)
   17488:	ldr.w	r2, [r4], #4
   1748c:	add	r1, pc
   1748e:	add	r3, pc
   17490:	ldr	r0, [pc, #84]	; (174e8 <__btrfs_error@@Base+0x6c>)
   17492:	str	r2, [sp, #4]
   17494:	add	r0, pc
   17496:	ldr	r2, [pc, #84]	; (174ec <__btrfs_error@@Base+0x70>)
   17498:	ldr	r2, [r1, r2]
   1749a:	ldr	r1, [pc, #84]	; (174f0 <__btrfs_error@@Base+0x74>)
   1749c:	ldr	r2, [r2, #0]
   1749e:	str	r2, [sp, #12]
   174a0:	mov.w	r2, #0
   174a4:	ldr	r5, [r3, r1]
   174a6:	ldr	r1, [r5, #0]
   174a8:	blx	8930 <fputs@plt+0x4>
   174ac:	ldr	r2, [sp, #4]
   174ae:	mov	r3, r4
   174b0:	movs	r1, #1
   174b2:	ldr	r0, [r5, #0]
   174b4:	str	r4, [sp, #8]
   174b6:	blx	8674 <__vfprintf_chk@plt>
   174ba:	ldr	r1, [r5, #0]
   174bc:	movs	r0, #10
   174be:	blx	8898 <fputc@plt+0x4>
   174c2:	ldr	r2, [pc, #48]	; (174f4 <__btrfs_error@@Base+0x78>)
   174c4:	ldr	r3, [pc, #36]	; (174ec <__btrfs_error@@Base+0x70>)
   174c6:	add	r2, pc
   174c8:	ldr	r3, [r2, r3]
   174ca:	ldr	r2, [r3, #0]
   174cc:	ldr	r3, [sp, #12]
   174ce:	eors	r2, r3
   174d0:	beq.n	174d6 <__btrfs_error@@Base+0x5a>
   174d2:	blx	84cc <__stack_chk_fail@plt>
   174d6:	add	sp, #20
   174d8:	ldmia.w	sp!, {r4, r5, lr}
   174dc:	add	sp, #16
   174de:	bx	lr
   174e0:	bhi.n	174dc <__btrfs_error@@Base+0x60>
   174e2:	movs	r4, r0
   174e4:	bhi.n	174dc <__btrfs_error@@Base+0x60>
   174e6:	movs	r4, r0
   174e8:	str	r6, [r5, r6]
   174ea:	movs	r2, r0
   174ec:	lsls	r4, r4, #8
   174ee:	movs	r0, r0
   174f0:	lsls	r4, r6, #8
   174f2:	movs	r0, r0
   174f4:	bhi.n	1747c <__btrfs_error@@Base>
   174f6:	movs	r4, r0

000174f8 <__btrfs_warning_on@@Base>:
   174f8:	push	{r1, r2, r3}
   174fa:	push	{r4, lr}
   174fc:	sub	sp, #20
   174fe:	ldr	r1, [pc, #92]	; (1755c <__btrfs_warning_on@@Base+0x64>)
   17500:	ldr	r2, [sp, #28]
   17502:	add	r1, pc
   17504:	ldr	r3, [pc, #88]	; (17560 <__btrfs_warning_on@@Base+0x68>)
   17506:	str	r2, [sp, #4]
   17508:	add	r3, pc
   1750a:	ldr	r2, [pc, #88]	; (17564 <__btrfs_warning_on@@Base+0x6c>)
   1750c:	ldr	r2, [r1, r2]
   1750e:	ldr	r2, [r2, #0]
   17510:	str	r2, [sp, #12]
   17512:	mov.w	r2, #0
   17516:	cbz	r0, 1753e <__btrfs_warning_on@@Base+0x46>
   17518:	ldr	r1, [pc, #76]	; (17568 <__btrfs_warning_on@@Base+0x70>)
   1751a:	ldr	r0, [pc, #80]	; (1756c <__btrfs_warning_on@@Base+0x74>)
   1751c:	ldr	r4, [r3, r1]
   1751e:	add	r0, pc
   17520:	ldr	r1, [r4, #0]
   17522:	blx	8930 <fputs@plt+0x4>
   17526:	add	r3, sp, #32
   17528:	ldr	r2, [sp, #4]
   1752a:	movs	r1, #1
   1752c:	ldr	r0, [r4, #0]
   1752e:	str	r3, [sp, #8]
   17530:	blx	8674 <__vfprintf_chk@plt>
   17534:	ldr	r1, [r4, #0]
   17536:	movs	r0, #10
   17538:	blx	8898 <fputc@plt+0x4>
   1753c:	movs	r0, #1
   1753e:	ldr	r2, [pc, #48]	; (17570 <__btrfs_warning_on@@Base+0x78>)
   17540:	ldr	r3, [pc, #32]	; (17564 <__btrfs_warning_on@@Base+0x6c>)
   17542:	add	r2, pc
   17544:	ldr	r3, [r2, r3]
   17546:	ldr	r2, [r3, #0]
   17548:	ldr	r3, [sp, #12]
   1754a:	eors	r2, r3
   1754c:	beq.n	17552 <__btrfs_warning_on@@Base+0x5a>
   1754e:	blx	84cc <__stack_chk_fail@plt>
   17552:	add	sp, #20
   17554:	ldmia.w	sp!, {r4, lr}
   17558:	add	sp, #12
   1755a:	bx	lr
   1755c:	bhi.n	1746c <__btrfs_warning@@Base+0x6c>
   1755e:	movs	r4, r0
   17560:	bhi.n	17464 <__btrfs_warning@@Base+0x64>
   17562:	movs	r4, r0
   17564:	lsls	r4, r4, #8
   17566:	movs	r0, r0
   17568:	lsls	r4, r6, #8
   1756a:	movs	r0, r0
   1756c:	str	r2, [r3, r4]
   1756e:	movs	r2, r0
   17570:	bhi.n	17600 <btrfs_uuid_to_key@@Base+0x10>
   17572:	movs	r4, r0

00017574 <__btrfs_error_on@@Base>:
   17574:	push	{r1, r2, r3}
   17576:	push	{r4, lr}
   17578:	sub	sp, #20
   1757a:	ldr	r1, [pc, #92]	; (175d8 <__btrfs_error_on@@Base+0x64>)
   1757c:	ldr	r2, [sp, #28]
   1757e:	add	r1, pc
   17580:	ldr	r3, [pc, #88]	; (175dc <__btrfs_error_on@@Base+0x68>)
   17582:	str	r2, [sp, #4]
   17584:	add	r3, pc
   17586:	ldr	r2, [pc, #88]	; (175e0 <__btrfs_error_on@@Base+0x6c>)
   17588:	ldr	r2, [r1, r2]
   1758a:	ldr	r2, [r2, #0]
   1758c:	str	r2, [sp, #12]
   1758e:	mov.w	r2, #0
   17592:	cbz	r0, 175ba <__btrfs_error_on@@Base+0x46>
   17594:	ldr	r1, [pc, #76]	; (175e4 <__btrfs_error_on@@Base+0x70>)
   17596:	ldr	r0, [pc, #80]	; (175e8 <__btrfs_error_on@@Base+0x74>)
   17598:	ldr	r4, [r3, r1]
   1759a:	add	r0, pc
   1759c:	ldr	r1, [r4, #0]
   1759e:	blx	8930 <fputs@plt+0x4>
   175a2:	add	r3, sp, #32
   175a4:	ldr	r2, [sp, #4]
   175a6:	movs	r1, #1
   175a8:	ldr	r0, [r4, #0]
   175aa:	str	r3, [sp, #8]
   175ac:	blx	8674 <__vfprintf_chk@plt>
   175b0:	ldr	r1, [r4, #0]
   175b2:	movs	r0, #10
   175b4:	blx	8898 <fputc@plt+0x4>
   175b8:	movs	r0, #1
   175ba:	ldr	r2, [pc, #48]	; (175ec <__btrfs_error_on@@Base+0x78>)
   175bc:	ldr	r3, [pc, #32]	; (175e0 <__btrfs_error_on@@Base+0x6c>)
   175be:	add	r2, pc
   175c0:	ldr	r3, [r2, r3]
   175c2:	ldr	r2, [r3, #0]
   175c4:	ldr	r3, [sp, #12]
   175c6:	eors	r2, r3
   175c8:	beq.n	175ce <__btrfs_error_on@@Base+0x5a>
   175ca:	blx	84cc <__stack_chk_fail@plt>
   175ce:	add	sp, #20
   175d0:	ldmia.w	sp!, {r4, lr}
   175d4:	add	sp, #12
   175d6:	bx	lr
   175d8:	bhi.n	175f0 <btrfs_uuid_to_key@@Base>
   175da:	movs	r4, r0
   175dc:	bhi.n	175e8 <__btrfs_error_on@@Base+0x74>
   175de:	movs	r4, r0
   175e0:	lsls	r4, r4, #8
   175e2:	movs	r0, r0
   175e4:	lsls	r4, r6, #8
   175e6:	movs	r0, r0
   175e8:	str	r0, [r5, r2]
   175ea:	movs	r2, r0
   175ec:	bvc.n	17584 <__btrfs_error_on@@Base+0x10>
   175ee:	movs	r4, r0

000175f0 <btrfs_uuid_to_key@@Base>:
   175f0:	ldr	r2, [r0, #0]
   175f2:	ldr	r3, [r0, #4]
   175f4:	str	r2, [r1, #0]
   175f6:	str	r3, [r1, #4]
   175f8:	ldr	r2, [r0, #8]
   175fa:	ldr	r3, [r0, #12]
   175fc:	str.w	r2, [r1, #9]
   17600:	str.w	r3, [r1, #13]
   17604:	bx	lr
   17606:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   1760a:	mov	r9, r0
   1760c:	mov	r0, r1
   1760e:	ldr	r1, [pc, #260]	; (17714 <btrfs_uuid_to_key@@Base+0x124>)
   17610:	mov	r7, r2
   17612:	sub.w	sp, sp, #4128	; 0x1020
   17616:	ldr	r2, [pc, #256]	; (17718 <btrfs_uuid_to_key@@Base+0x128>)
   17618:	sub	sp, #24
   1761a:	add	r1, pc
   1761c:	add	r6, sp, #56	; 0x38
   1761e:	add	r5, sp, #28
   17620:	sub.w	r4, r6, #8
   17624:	ldr	r2, [r1, r2]
   17626:	mov	r8, r3
   17628:	add.w	r3, sp, #4128	; 0x1020
   1762c:	mov	r1, r5
   1762e:	ldr	r2, [r2, #0]
   17630:	str	r2, [r3, #20]
   17632:	mov.w	r2, #0
   17636:	adds	r3, #20
   17638:	strb.w	r7, [sp, #36]	; 0x24
   1763c:	bl	175f0 <btrfs_uuid_to_key@@Base>
   17640:	mov.w	r2, #4096	; 0x1000
   17644:	movs	r1, #0
   17646:	mov	r0, r4
   17648:	ldr.w	sl, [pc, #208]	; 1771c <btrfs_uuid_to_key@@Base+0x12c>
   1764c:	blx	8780 <memset@plt+0x4>
   17650:	movs	r2, #9
   17652:	movs	r3, #0
   17654:	strd	r2, r3, [r6, #-8]
   17658:	ldrd	r2, r3, [r6, #-28]
   1765c:	mov	r0, r9
   1765e:	strd	r7, r7, [r4, #56]	; 0x38
   17662:	movs	r7, #1
   17664:	ldr	r1, [pc, #168]	; (17710 <btrfs_uuid_to_key@@Base+0x120>)
   17666:	add	sl, pc
   17668:	strd	r2, r3, [r4, #8]
   1766c:	strd	r2, r3, [r4, #16]
   17670:	ldr.w	r2, [r6, #-19]
   17674:	ldr.w	r3, [r6, #-15]
   17678:	str	r7, [r4, #64]	; 0x40
   1767a:	strd	r2, r3, [r4, #24]
   1767e:	strd	r2, r3, [r4, #32]
   17682:	mov.w	r2, #4294967295	; 0xffffffff
   17686:	mov.w	r3, #4294967295	; 0xffffffff
   1768a:	strd	r2, r3, [r4, #48]	; 0x30
   1768e:	mov	r2, r4
   17690:	blx	8578 <ioctl@plt>
   17694:	cmp	r0, #0
   17696:	bge.n	176c6 <btrfs_uuid_to_key@@Base+0xd6>
   17698:	ldr	r3, [pc, #132]	; (17720 <btrfs_uuid_to_key@@Base+0x130>)
   1769a:	ldr.w	r3, [sl, r3]
   1769e:	str	r0, [sp, #16]
   176a0:	ldr.w	r1, [r6, #-19]
   176a4:	ldr.w	r2, [r6, #-15]
   176a8:	strd	r1, r2, [sp, #8]
   176ac:	ldrd	r1, r2, [r6, #-28]
   176b0:	strd	r1, r2, [sp]
   176b4:	mov	r1, r7
   176b6:	ldr	r2, [pc, #108]	; (17724 <btrfs_uuid_to_key@@Base+0x134>)
   176b8:	ldr	r0, [r3, #0]
   176ba:	add	r2, pc
   176bc:	blx	881c <__fprintf_chk@plt+0x4>
   176c0:	mvn.w	r0, #1
   176c4:	b.n	176ec <btrfs_uuid_to_key@@Base+0xfc>
   176c6:	ldr	r3, [r4, #64]	; 0x40
   176c8:	cmp	r3, #0
   176ca:	beq.n	176c0 <btrfs_uuid_to_key@@Base+0xd0>
   176cc:	ldr.w	r2, [r4, #132]	; 0x84
   176d0:	ands.w	r0, r2, #7
   176d4:	bne.n	176d8 <btrfs_uuid_to_key@@Base+0xe8>
   176d6:	cbnz	r2, 176e4 <btrfs_uuid_to_key@@Base+0xf4>
   176d8:	ldr	r1, [pc, #76]	; (17728 <btrfs_uuid_to_key@@Base+0x138>)
   176da:	movs	r0, #1
   176dc:	add	r1, pc
   176de:	blx	87f4 <__printf_chk@plt+0x4>
   176e2:	b.n	176c0 <btrfs_uuid_to_key@@Base+0xd0>
   176e4:	ldrd	r2, r3, [r4, #136]	; 0x88
   176e8:	strd	r2, r3, [r8]
   176ec:	ldr	r1, [pc, #60]	; (1772c <btrfs_uuid_to_key@@Base+0x13c>)
   176ee:	add.w	r3, sp, #4128	; 0x1020
   176f2:	ldr	r2, [pc, #36]	; (17718 <btrfs_uuid_to_key@@Base+0x128>)
   176f4:	adds	r3, #20
   176f6:	add	r1, pc
   176f8:	ldr	r2, [r1, r2]
   176fa:	ldr	r1, [r2, #0]
   176fc:	ldr	r2, [r3, #0]
   176fe:	eors	r1, r2
   17700:	beq.n	17706 <btrfs_uuid_to_key@@Base+0x116>
   17702:	blx	84cc <__stack_chk_fail@plt>
   17706:	add.w	sp, sp, #4128	; 0x1020
   1770a:	add	sp, #24
   1770c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   17710:	str	r4, [sp, #68]	; 0x44
   17712:	beq.n	17716 <btrfs_uuid_to_key@@Base+0x126>
   17714:	bvc.n	177f4 <lookup_path_rootid@@Base+0x10>
   17716:	movs	r4, r0
   17718:	lsls	r4, r4, #8
   1771a:	movs	r0, r0
   1771c:	bvc.n	17764 <arg_strtou64@@Base+0x28>
   1771e:	movs	r4, r0
   17720:	lsls	r4, r6, #8
   17722:	movs	r0, r0
   17724:	ldr	r7, [pc, #576]	; (17968 <rb_free_nodes@@Base+0x6a>)
   17726:	movs	r2, r0
   17728:	ldr	r7, [pc, #784]	; (17a3c <rb_free_nodes@@Base+0x13e>)
   1772a:	movs	r2, r0
   1772c:	bvs.n	17654 <btrfs_uuid_to_key@@Base+0x64>
   1772e:	movs	r4, r0

00017730 <btrfs_lookup_uuid_subvol_item@@Base>:
   17730:	mov	r3, r2
   17732:	movs	r2, #251	; 0xfb
   17734:	b.n	17606 <btrfs_uuid_to_key@@Base+0x16>

00017736 <btrfs_lookup_uuid_received_subvol_item@@Base>:
   17736:	mov	r3, r2
   17738:	movs	r2, #252	; 0xfc
   1773a:	b.n	17606 <btrfs_uuid_to_key@@Base+0x16>

0001773c <arg_strtou64@@Base>:
   1773c:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   1773e:	add	r1, sp, #8
   17740:	ldr	r2, [pc, #128]	; (177c4 <arg_strtou64@@Base+0x88>)
   17742:	ldr	r3, [pc, #132]	; (177c8 <arg_strtou64@@Base+0x8c>)
   17744:	add	r2, pc
   17746:	str	r0, [sp, #4]
   17748:	ldr	r6, [pc, #128]	; (177cc <arg_strtou64@@Base+0x90>)
   1774a:	ldr	r3, [r2, r3]
   1774c:	movs	r2, #0
   1774e:	add	r6, pc
   17750:	ldr	r3, [r3, #0]
   17752:	str	r3, [sp, #12]
   17754:	mov.w	r3, #0
   17758:	str	r2, [sp, #8]
   1775a:	blx	87c0 <strtoull@plt>
   1775e:	ldrd	r3, r2, [sp, #4]
   17762:	mov	r4, r0
   17764:	mov	r5, r1
   17766:	cbz	r2, 17782 <arg_strtou64@@Base+0x46>
   17768:	ldrb	r2, [r2, #0]
   1776a:	cbz	r2, 17782 <arg_strtou64@@Base+0x46>
   1776c:	ldr	r2, [pc, #96]	; (177d0 <arg_strtou64@@Base+0x94>)
   1776e:	ldr	r0, [r6, r2]
   17770:	ldr	r2, [pc, #96]	; (177d4 <arg_strtou64@@Base+0x98>)
   17772:	add	r2, pc
   17774:	ldr	r0, [r0, #0]
   17776:	movs	r1, #1
   17778:	blx	881c <__fprintf_chk@plt+0x4>
   1777c:	movs	r0, #1
   1777e:	blx	86f8 <exit@plt>
   17782:	ldrb	r2, [r3, #0]
   17784:	cmp	r2, #45	; 0x2d
   17786:	bne.n	17792 <arg_strtou64@@Base+0x56>
   17788:	ldr	r2, [pc, #68]	; (177d0 <arg_strtou64@@Base+0x94>)
   1778a:	ldr	r0, [r6, r2]
   1778c:	ldr	r2, [pc, #72]	; (177d8 <arg_strtou64@@Base+0x9c>)
   1778e:	add	r2, pc
   17790:	b.n	17774 <arg_strtou64@@Base+0x38>
   17792:	adds	r2, r5, #1
   17794:	it	eq
   17796:	cmpeq.w	r4, #4294967295	; 0xffffffff
   1779a:	bne.n	177a6 <arg_strtou64@@Base+0x6a>
   1779c:	ldr	r2, [pc, #48]	; (177d0 <arg_strtou64@@Base+0x94>)
   1779e:	ldr	r0, [r6, r2]
   177a0:	ldr	r2, [pc, #56]	; (177dc <arg_strtou64@@Base+0xa0>)
   177a2:	add	r2, pc
   177a4:	b.n	17774 <arg_strtou64@@Base+0x38>
   177a6:	ldr	r2, [pc, #56]	; (177e0 <arg_strtou64@@Base+0xa4>)
   177a8:	ldr	r3, [pc, #28]	; (177c8 <arg_strtou64@@Base+0x8c>)
   177aa:	add	r2, pc
   177ac:	ldr	r3, [r2, r3]
   177ae:	ldr	r2, [r3, #0]
   177b0:	ldr	r3, [sp, #12]
   177b2:	eors	r2, r3
   177b4:	beq.n	177ba <arg_strtou64@@Base+0x7e>
   177b6:	blx	84cc <__stack_chk_fail@plt>
   177ba:	mov	r0, r4
   177bc:	mov	r1, r5
   177be:	add	sp, #16
   177c0:	pop	{r4, r5, r6, pc}
   177c2:	nop
   177c4:	bvs.n	17850 <lookup_path_rootid@@Base+0x6c>
   177c6:	movs	r4, r0
   177c8:	lsls	r4, r4, #8
   177ca:	movs	r0, r0
   177cc:	bvs.n	17844 <lookup_path_rootid@@Base+0x60>
   177ce:	movs	r4, r0
   177d0:	lsls	r4, r6, #8
   177d2:	movs	r0, r0
   177d4:	ldr	r7, [pc, #348]	; (17934 <rb_free_nodes@@Base+0x36>)
   177d6:	movs	r2, r0
   177d8:	ldr	r7, [pc, #400]	; (1796c <rb_free_nodes@@Base+0x6e>)
   177da:	movs	r2, r0
   177dc:	ldr	r7, [pc, #476]	; (179bc <rb_free_nodes@@Base+0xbe>)
   177de:	movs	r2, r0
   177e0:	bpl.n	177a0 <arg_strtou64@@Base+0x64>
   177e2:	movs	r4, r0

000177e4 <lookup_path_rootid@@Base>:
   177e4:	push	{r4, r5, r6, lr}
   177e6:	mov	r4, r1
   177e8:	ldr	r1, [pc, #128]	; (1786c <lookup_path_rootid@@Base+0x88>)
   177ea:	sub.w	sp, sp, #4096	; 0x1000
   177ee:	ldr	r2, [pc, #128]	; (17870 <lookup_path_rootid@@Base+0x8c>)
   177f0:	sub	sp, #8
   177f2:	add	r1, pc
   177f4:	add.w	r3, sp, #4096	; 0x1000
   177f8:	adds	r3, #4
   177fa:	add	r6, sp, #8
   177fc:	ldr	r2, [r1, r2]
   177fe:	mov	r5, r0
   17800:	movs	r1, #0
   17802:	ldr	r2, [r2, #0]
   17804:	str	r2, [r3, #0]
   17806:	mov.w	r2, #0
   1780a:	sub.w	r3, r6, #8
   1780e:	mov.w	r2, #4096	; 0x1000
   17812:	mov	r0, r3
   17814:	blx	8780 <memset@plt+0x4>
   17818:	movs	r1, #0
   1781a:	mov	r3, r0
   1781c:	mov.w	r0, #256	; 0x100
   17820:	mov	r2, r3
   17822:	strd	r0, r1, [r3, #8]
   17826:	ldr	r1, [pc, #64]	; (17868 <lookup_path_rootid@@Base+0x84>)
   17828:	mov	r0, r5
   1782a:	blx	8578 <ioctl@plt>
   1782e:	cmp	r0, #0
   17830:	bge.n	17854 <lookup_path_rootid@@Base+0x70>
   17832:	blx	8740 <__errno_location@plt>
   17836:	ldr	r0, [r0, #0]
   17838:	negs	r0, r0
   1783a:	ldr	r1, [pc, #56]	; (17874 <lookup_path_rootid@@Base+0x90>)
   1783c:	add.w	r3, sp, #4096	; 0x1000
   17840:	ldr	r2, [pc, #44]	; (17870 <lookup_path_rootid@@Base+0x8c>)
   17842:	adds	r3, #4
   17844:	add	r1, pc
   17846:	ldr	r2, [r1, r2]
   17848:	ldr	r1, [r2, #0]
   1784a:	ldr	r2, [r3, #0]
   1784c:	eors	r1, r2
   1784e:	beq.n	17860 <lookup_path_rootid@@Base+0x7c>
   17850:	blx	84cc <__stack_chk_fail@plt>
   17854:	ldrd	r2, r3, [r6, #-8]
   17858:	movs	r0, #0
   1785a:	strd	r2, r3, [r4]
   1785e:	b.n	1783a <lookup_path_rootid@@Base+0x56>
   17860:	add.w	sp, sp, #4096	; 0x1000
   17864:	add	sp, #8
   17866:	pop	{r4, r5, r6, pc}
   17868:	str	r4, [sp, #72]	; 0x48
   1786a:	beq.n	1786e <lookup_path_rootid@@Base+0x8a>
   1786c:	bpl.n	1779c <arg_strtou64@@Base+0x60>
   1786e:	movs	r4, r0
   17870:	lsls	r4, r4, #8
   17872:	movs	r0, r0
   17874:	bpl.n	17900 <rb_free_nodes@@Base+0x2>
   17876:	movs	r4, r0

00017878 <rb_insert@@Base>:
   17878:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1787c:	movs	r3, #0
   1787e:	mov	r7, r0
   17880:	mov	r6, r1
   17882:	mov	r8, r2
   17884:	mov	r4, r0
   17886:	ldr	r5, [r4, #0]
   17888:	cbnz	r5, 178a0 <rb_insert@@Base+0x28>
   1788a:	mov	r0, r6
   1788c:	strd	r3, r5, [r6]
   17890:	str	r5, [r6, #8]
   17892:	mov	r1, r7
   17894:	str	r6, [r4, #0]
   17896:	bl	13b2a <rb_insert_color@@Base>
   1789a:	mov	r0, r5
   1789c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   178a0:	mov	r1, r6
   178a2:	mov	r0, r5
   178a4:	blx	r8
   178a6:	cmp	r0, #0
   178a8:	bge.n	178b2 <rb_insert@@Base+0x3a>
   178aa:	ldr	r4, [r4, #0]
   178ac:	adds	r4, #8
   178ae:	mov	r3, r5
   178b0:	b.n	17886 <rb_insert@@Base+0xe>
   178b2:	beq.n	178ba <rb_insert@@Base+0x42>
   178b4:	ldr	r4, [r4, #0]
   178b6:	adds	r4, #4
   178b8:	b.n	178ae <rb_insert@@Base+0x36>
   178ba:	mvn.w	r0, #16
   178be:	b.n	1789c <rb_insert@@Base+0x24>

000178c0 <rb_search@@Base>:
   178c0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   178c4:	movs	r5, #0
   178c6:	ldr	r4, [r0, #0]
   178c8:	mov	r8, r1
   178ca:	mov	r7, r2
   178cc:	mov	r6, r3
   178ce:	mov	r0, r5
   178d0:	cbnz	r4, 178e6 <rb_search@@Base+0x26>
   178d2:	cbz	r6, 178e0 <rb_search@@Base+0x20>
   178d4:	cbz	r0, 178de <rb_search@@Base+0x1e>
   178d6:	cmp	r5, #0
   178d8:	ble.n	178de <rb_search@@Base+0x1e>
   178da:	bl	13e66 <rb_next@@Base>
   178de:	str	r0, [r6, #0]
   178e0:	mov	r0, r4
   178e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   178e6:	mov	r1, r8
   178e8:	mov	r0, r4
   178ea:	blx	r7
   178ec:	subs	r5, r0, #0
   178ee:	bge.n	178f8 <rb_search@@Base+0x38>
   178f0:	ldr	r3, [r4, #8]
   178f2:	mov	r0, r4
   178f4:	mov	r4, r3
   178f6:	b.n	178d0 <rb_search@@Base+0x10>
   178f8:	beq.n	178e0 <rb_search@@Base+0x20>
   178fa:	ldr	r3, [r4, #4]
   178fc:	b.n	178f2 <rb_search@@Base+0x32>

000178fe <rb_free_nodes@@Base>:
   178fe:	push	{r4, r5, r6, lr}
   17900:	mov	r5, r0
   17902:	mov	r6, r1
   17904:	mov	r0, r5
   17906:	bl	13e46 <rb_first@@Base>
   1790a:	mov	r4, r0
   1790c:	cbnz	r0, 17910 <rb_free_nodes@@Base+0x12>
   1790e:	pop	{r4, r5, r6, pc}
   17910:	mov	r1, r5
   17912:	bl	13bd0 <rb_erase@@Base>
   17916:	mov	r0, r4
   17918:	blx	r6
   1791a:	b.n	17904 <rb_free_nodes@@Base+0x6>
   1791c:	movs	r3, #25
   1791e:	mla	r1, r3, r1, r0
   17922:	ldr.w	r0, [r1, #214]	; 0xd6
   17926:	ldr.w	r3, [r1, #218]	; 0xda
   1792a:	add	r0, r3
   1792c:	bx	lr
   1792e:	add.w	r2, r2, r2, lsl #5
   17932:	movs	r3, #17
   17934:	adds	r2, #101	; 0x65
   17936:	b.w	17330 <write_extent_buffer@@Base>
   1793a:	movs	r3, #25
   1793c:	muls	r2, r3
   1793e:	movs	r3, #17
   17940:	adds	r2, #101	; 0x65
   17942:	b.w	17330 <write_extent_buffer@@Base>
   17946:	movs	r3, #25
   17948:	muls	r2, r3
   1794a:	movs	r3, #17
   1794c:	adds	r2, #101	; 0x65
   1794e:	b.w	1731a <read_extent_buffer@@Base>
   17952:	add.w	r2, r2, r2, lsl #5
   17956:	movs	r3, #17
   17958:	adds	r2, #101	; 0x65
   1795a:	b.w	1731a <read_extent_buffer@@Base>
   1795e:	ldr	r2, [pc, #64]	; (179a0 <rb_free_nodes@@Base+0xa2>)
   17960:	movs	r1, #16
   17962:	ldr	r3, [pc, #64]	; (179a4 <rb_free_nodes@@Base+0xa6>)
   17964:	push	{r4, lr}
   17966:	add	r2, pc
   17968:	sub	sp, #72	; 0x48
   1796a:	add	r4, sp, #4
   1796c:	ldr	r3, [r2, r3]
   1796e:	mov	r0, r4
   17970:	ldr	r3, [r3, #0]
   17972:	str	r3, [sp, #68]	; 0x44
   17974:	mov.w	r3, #0
   17978:	blx	8680 <backtrace@plt>
   1797c:	movs	r2, #2
   1797e:	mov	r1, r0
   17980:	mov	r0, r4
   17982:	blx	8990 <backtrace_symbols_fd@plt>
   17986:	ldr	r2, [pc, #32]	; (179a8 <rb_free_nodes@@Base+0xaa>)
   17988:	ldr	r3, [pc, #24]	; (179a4 <rb_free_nodes@@Base+0xa6>)
   1798a:	add	r2, pc
   1798c:	ldr	r3, [r2, r3]
   1798e:	ldr	r2, [r3, #0]
   17990:	ldr	r3, [sp, #68]	; 0x44
   17992:	eors	r2, r3
   17994:	beq.n	1799a <rb_free_nodes@@Base+0x9c>
   17996:	blx	84cc <__stack_chk_fail@plt>
   1799a:	add	sp, #72	; 0x48
   1799c:	pop	{r4, pc}
   1799e:	nop
   179a0:	bmi.n	179e8 <rb_free_nodes@@Base+0xea>
   179a2:	movs	r4, r0
   179a4:	lsls	r4, r4, #8
   179a6:	movs	r0, r0
   179a8:	bcc.n	179a8 <rb_free_nodes@@Base+0xaa>
   179aa:	movs	r4, r0
   179ac:	cbz	r0, 179be <rb_free_nodes@@Base+0xc0>
   179ae:	cmn.w	r0, #4096	; 0x1000
   179b2:	bhi.n	179bc <rb_free_nodes@@Base+0xbe>
   179b4:	ldr	r0, [r0, #84]	; 0x54
   179b6:	ubfx	r0, r0, #2, #1
   179ba:	bx	lr
   179bc:	movs	r0, #0
   179be:	bx	lr
   179c0:	ldr.w	r3, [r1, #192]	; 0xc0
   179c4:	cbnz	r3, 179cc <rb_free_nodes@@Base+0xce>
   179c6:	ldr	r0, [r0, #0]
   179c8:	subs	r0, #101	; 0x65
   179ca:	bx	lr
   179cc:	subs	r3, #1
   179ce:	movs	r2, #25
   179d0:	mla	r1, r2, r3, r1
   179d4:	ldr.w	r0, [r1, #214]	; 0xd6
   179d8:	bx	lr
   179da:	push	{r0, r1, r2, r3, r4, lr}
   179dc:	ldr	r4, [pc, #36]	; (17a04 <rb_free_nodes@@Base+0x106>)
   179de:	ldr	r5, [pc, #40]	; (17a08 <rb_free_nodes@@Base+0x10a>)
   179e0:	add	r4, pc
   179e2:	ldr	r4, [r4, r5]
   179e4:	strd	r2, r1, [sp]
   179e8:	movs	r1, #1
   179ea:	strd	r0, r3, [sp, #8]
   179ee:	ldr	r2, [pc, #28]	; (17a0c <rb_free_nodes@@Base+0x10e>)
   179f0:	ldr	r3, [pc, #28]	; (17a10 <rb_free_nodes@@Base+0x112>)
   179f2:	add	r2, pc
   179f4:	ldr	r0, [r4, #0]
   179f6:	add	r3, pc
   179f8:	blx	881c <__fprintf_chk@plt+0x4>
   179fc:	bl	1795e <rb_free_nodes@@Base+0x60>
   17a00:	blx	8948 <abort@plt>
   17a04:	bcc.n	17958 <rb_free_nodes@@Base+0x5a>
   17a06:	movs	r4, r0
   17a08:	lsls	r4, r6, #8
   17a0a:	movs	r0, r0
   17a0c:	movs	r0, #159	; 0x9f
   17a0e:	movs	r2, r0
   17a10:	ldr	r5, [pc, #240]	; (17b04 <rb_free_nodes@@Base+0x206>)
   17a12:	movs	r2, r0
   17a14:	push	{r3, lr}
   17a16:	cbz	r3, 17a1c <rb_free_nodes@@Base+0x11e>
   17a18:	bl	179da <rb_free_nodes@@Base+0xdc>
   17a1c:	pop	{r3, pc}
   17a1e:	push	{r4, r5, lr}
   17a20:	sub	sp, #20
   17a22:	ldr	r4, [pc, #40]	; (17a4c <rb_free_nodes@@Base+0x14e>)
   17a24:	ldr	r5, [pc, #40]	; (17a50 <rb_free_nodes@@Base+0x152>)
   17a26:	add	r4, pc
   17a28:	ldr	r4, [r4, r5]
   17a2a:	strd	r2, r1, [sp]
   17a2e:	movs	r1, #1
   17a30:	strd	r0, r3, [sp, #8]
   17a34:	ldr	r2, [pc, #28]	; (17a54 <rb_free_nodes@@Base+0x156>)
   17a36:	ldr	r3, [pc, #32]	; (17a58 <rb_free_nodes@@Base+0x15a>)
   17a38:	ldr	r0, [r4, #0]
   17a3a:	add	r2, pc
   17a3c:	add	r3, pc
   17a3e:	blx	881c <__fprintf_chk@plt+0x4>
   17a42:	add	sp, #20
   17a44:	ldmia.w	sp!, {r4, r5, lr}
   17a48:	b.n	1795e <rb_free_nodes@@Base+0x60>
   17a4a:	nop
   17a4c:	bcc.n	17b14 <rb_free_nodes@@Base+0x216>
   17a4e:	movs	r4, r0
   17a50:	lsls	r4, r6, #8
   17a52:	movs	r0, r0
   17a54:	movs	r6, #174	; 0xae
   17a56:	movs	r2, r0
   17a58:	ldr	r4, [pc, #984]	; (17e34 <btrfs_super_num_csums@@Base>)
   17a5a:	movs	r2, r0
   17a5c:	cbz	r3, 17a62 <rb_free_nodes@@Base+0x164>
   17a5e:	movs	r3, #1
   17a60:	b.n	17a1e <rb_free_nodes@@Base+0x120>
   17a62:	bx	lr
   17a64:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17a68:	mov	r8, r3
   17a6a:	ldrd	r6, r3, [sp, #56]	; 0x38
   17a6e:	mov	r7, r0
   17a70:	mov	fp, r1
   17a72:	ldr	r0, [pc, #204]	; (17b40 <rb_free_nodes@@Base+0x242>)
   17a74:	ldr	r1, [pc, #204]	; (17b44 <rb_free_nodes@@Base+0x246>)
   17a76:	ldr.w	r4, [r2, r3, lsl #2]
   17a7a:	add	r0, pc
   17a7c:	add	r1, pc
   17a7e:	mov.w	r2, #1624	; 0x658
   17a82:	clz	r3, r4
   17a86:	str	r1, [sp, #4]
   17a88:	ldrd	sl, r9, [sp, #48]	; 0x30
   17a8c:	lsrs	r3, r3, #5
   17a8e:	bl	17a14 <rb_free_nodes@@Base+0x116>
   17a92:	ldr.w	r5, [r4, #192]	; 0xc0
   17a96:	ldr	r1, [sp, #4]
   17a98:	cmp	r5, r6
   17a9a:	bge.n	17aaa <rb_free_nodes@@Base+0x1ac>
   17a9c:	ldr	r0, [pc, #168]	; (17b48 <rb_free_nodes@@Base+0x24a>)
   17a9e:	movs	r3, #1
   17aa0:	movw	r2, #1628	; 0x65c
   17aa4:	add	r0, pc
   17aa6:	bl	179da <rb_free_nodes@@Base+0xdc>
   17aaa:	ldr.w	r3, [fp]
   17aae:	ldr.w	r2, [r3, #384]	; 0x180
   17ab2:	ldr	r3, [pc, #136]	; (17b3c <rb_free_nodes@@Base+0x23e>)
   17ab4:	subs	r2, #101	; 0x65
   17ab6:	umull	r2, r3, r2, r3
   17aba:	cmp.w	r5, r3, lsr #3
   17abe:	bne.n	17acc <rb_free_nodes@@Base+0x1ce>
   17ac0:	ldr	r0, [pc, #136]	; (17b4c <rb_free_nodes@@Base+0x24e>)
   17ac2:	movs	r3, #1
   17ac4:	movw	r2, #1630	; 0x65e
   17ac8:	add	r0, pc
   17aca:	b.n	17aa6 <rb_free_nodes@@Base+0x1a8>
   17acc:	cmp	r5, r6
   17ace:	add.w	r1, r6, r6, lsl #5
   17ad2:	add.w	fp, r1, #101	; 0x65
   17ad6:	ble.n	17ae8 <rb_free_nodes@@Base+0x1ea>
   17ad8:	subs	r3, r5, r6
   17ada:	adds	r1, #134	; 0x86
   17adc:	mov	r2, fp
   17ade:	mov	r0, r4
   17ae0:	add.w	r3, r3, r3, lsl #5
   17ae4:	bl	1738c <memmove_extent_buffer@@Base>
   17ae8:	mov	r2, r6
   17aea:	add.w	r6, r4, #96	; 0x60
   17aee:	add	r6, fp
   17af0:	mov	r1, r8
   17af2:	mov	r0, r4
   17af4:	adds	r5, #1
   17af6:	bl	1792e <rb_free_nodes@@Base+0x30>
   17afa:	str.w	sl, [r6, #17]
   17afe:	str.w	r9, [r6, #21]
   17b02:	ldrd	r2, r3, [r7]
   17b06:	ldr	r1, [pc, #72]	; (17b50 <rb_free_nodes@@Base+0x252>)
   17b08:	orrs	r3, r2
   17b0a:	ldr	r0, [pc, #72]	; (17b54 <rb_free_nodes@@Base+0x256>)
   17b0c:	add	r1, pc
   17b0e:	mov.w	r2, #1640	; 0x668
   17b12:	ite	eq
   17b14:	moveq	r3, #1
   17b16:	movne	r3, #0
   17b18:	add	r0, pc
   17b1a:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   17b1e:	ldrd	r2, r3, [r7]
   17b22:	mov	r0, r4
   17b24:	str.w	r2, [r6, #25]
   17b28:	str.w	r3, [r6, #29]
   17b2c:	str.w	r5, [r4, #192]	; 0xc0
   17b30:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   17b34:	movs	r0, #0
   17b36:	add	sp, #12
   17b38:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b3c:	strh	r1, [r4, #30]
   17b3e:	subs	r6, #15
   17b40:	ldr	r4, [pc, #768]	; (17e44 <btrfs_csum_type_size@@Base+0xc>)
   17b42:	movs	r2, r0
   17b44:	strh	r4, [r0, r7]
   17b46:	movs	r2, r0
   17b48:	str	r7, [r0, #52]	; 0x34
   17b4a:	movs	r2, r0
   17b4c:	str	r3, [r4, #48]	; 0x30
   17b4e:	movs	r2, r0
   17b50:	strh	r4, [r6, r4]
   17b52:	movs	r2, r0
   17b54:	ldr	r4, [pc, #216]	; (17c30 <rb_free_nodes@@Base+0x332>)
   17b56:	movs	r2, r0
   17b58:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   17b5c:	mov	r6, r0
   17b5e:	mov	r4, r2
   17b60:	ldr.w	r0, [r3, #176]	; 0xb0
   17b64:	mov	r7, r1
   17b66:	mov	r5, r3
   17b68:	ldr.w	r1, [r3, #180]	; 0xb4
   17b6c:	sub	sp, #20
   17b6e:	ldrd	r2, r3, [r6]
   17b72:	cmp	r1, r3
   17b74:	ldr	r3, [pc, #196]	; (17c3c <rb_free_nodes@@Base+0x33e>)
   17b76:	it	eq
   17b78:	cmpeq	r0, r2
   17b7a:	ldr	r0, [pc, #196]	; (17c40 <rb_free_nodes@@Base+0x342>)
   17b7c:	add	r3, pc
   17b7e:	movw	r2, #1494	; 0x5d6
   17b82:	add.w	r1, r3, #11
   17b86:	add	r0, pc
   17b88:	ite	ne
   17b8a:	movne	r3, #1
   17b8c:	moveq	r3, #0
   17b8e:	str	r1, [sp, #12]
   17b90:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   17b94:	ldr.w	r3, [r4, #180]	; 0xb4
   17b98:	ldrd	r8, r9, [r6]
   17b9c:	ldr.w	r2, [r4, #176]	; 0xb0
   17ba0:	cmp	r3, r9
   17ba2:	ldr	r0, [pc, #160]	; (17c44 <rb_free_nodes@@Base+0x346>)
   17ba4:	it	eq
   17ba6:	cmpeq	r2, r8
   17ba8:	ldr	r1, [sp, #12]
   17baa:	movw	r2, #1495	; 0x5d7
   17bae:	add	r0, pc
   17bb0:	ite	ne
   17bb2:	movne	r3, #1
   17bb4:	moveq	r3, #0
   17bb6:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   17bba:	ldr	r3, [r7, #0]
   17bbc:	ldr.w	r8, [r4, #192]	; 0xc0
   17bc0:	ldr.w	r2, [r3, #384]	; 0x180
   17bc4:	ldr	r3, [pc, #112]	; (17c38 <rb_free_nodes@@Base+0x33a>)
   17bc6:	subs	r2, #101	; 0x65
   17bc8:	umull	r2, r3, r2, r3
   17bcc:	rsb	r7, r8, r3, lsr #3
   17bd0:	cmp	r7, #0
   17bd2:	ble.n	17c34 <rb_free_nodes@@Base+0x336>
   17bd4:	ldr.w	r6, [r5, #192]	; 0xc0
   17bd8:	cmp	r6, #3
   17bda:	ble.n	17c34 <rb_free_nodes@@Base+0x336>
   17bdc:	asrs	r3, r6, #1
   17bde:	adds	r3, #1
   17be0:	cmp	r6, r3
   17be2:	ble.n	17c34 <rb_free_nodes@@Base+0x336>
   17be4:	cmp	r7, r3
   17be6:	mov.w	r2, #101	; 0x65
   17bea:	mov	r0, r4
   17bec:	it	ge
   17bee:	movge	r7, r3
   17bf0:	subs	r6, r6, r7
   17bf2:	add.w	r9, r7, r7, lsl #5
   17bf6:	add.w	r3, r8, r8, lsl #5
   17bfa:	add.w	r1, r9, r2
   17bfe:	add	r7, r8
   17c00:	bl	1738c <memmove_extent_buffer@@Base>
   17c04:	add.w	r3, r6, r6, lsl #5
   17c08:	adds	r3, #101	; 0x65
   17c0a:	movs	r2, #101	; 0x65
   17c0c:	mov	r1, r5
   17c0e:	mov	r0, r4
   17c10:	str.w	r9, [sp]
   17c14:	bl	17342 <copy_extent_buffer@@Base>
   17c18:	mov	r0, r5
   17c1a:	str.w	r6, [r5, #192]	; 0xc0
   17c1e:	str.w	r7, [r4, #192]	; 0xc0
   17c22:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   17c26:	mov	r0, r4
   17c28:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   17c2c:	movs	r0, #0
   17c2e:	add	sp, #20
   17c30:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   17c34:	movs	r0, #1
   17c36:	b.n	17c2e <rb_free_nodes@@Base+0x330>
   17c38:	strh	r1, [r4, #30]
   17c3a:	subs	r6, #15
   17c3c:	strh	r4, [r0, r3]
   17c3e:	movs	r2, r0
   17c40:	ldr	r3, [pc, #880]	; (17fb4 <add_root_to_dirty_list@@Base+0x120>)
   17c42:	movs	r2, r0
   17c44:	ldr	r3, [pc, #908]	; (17fd4 <add_root_to_dirty_list@@Base+0x140>)
   17c46:	movs	r2, r0
   17c48:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17c4c:	mov	r5, r2
   17c4e:	ldr.w	r9, [r2, #192]	; 0xc0
   17c52:	mov	r4, r3
   17c54:	ldr.w	r2, [r1, #384]	; 0x180
   17c58:	mov	sl, r0
   17c5a:	ldr.w	r6, [r3, #192]	; 0xc0
   17c5e:	sub	sp, #20
   17c60:	ldr	r3, [pc, #236]	; (17d50 <rb_free_nodes@@Base+0x452>)
   17c62:	subs	r2, #101	; 0x65
   17c64:	ldr.w	r1, [r4, #180]	; 0xb4
   17c68:	ldr.w	r0, [r4, #176]	; 0xb0
   17c6c:	umull	r2, r3, r2, r3
   17c70:	ldr	r7, [sp, #56]	; 0x38
   17c72:	rsb	r8, r9, r3, lsr #3
   17c76:	ldrd	r2, r3, [sl]
   17c7a:	cmp	r1, r3
   17c7c:	ldr	r1, [pc, #212]	; (17d54 <rb_free_nodes@@Base+0x456>)
   17c7e:	it	eq
   17c80:	cmpeq	r0, r2
   17c82:	ldr	r0, [pc, #212]	; (17d58 <rb_free_nodes@@Base+0x45a>)
   17c84:	add	r1, pc
   17c86:	movw	r2, #1430	; 0x596
   17c8a:	ite	ne
   17c8c:	movne	r3, #1
   17c8e:	moveq	r3, #0
   17c90:	adds	r1, #30
   17c92:	add	r0, pc
   17c94:	str	r1, [sp, #12]
   17c96:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   17c9a:	ldrd	r2, r3, [sl]
   17c9e:	ldr.w	ip, [r5, #180]	; 0xb4
   17ca2:	ldr.w	fp, [r5, #176]	; 0xb0
   17ca6:	cmp	ip, r3
   17ca8:	ldr	r0, [pc, #176]	; (17d5c <rb_free_nodes@@Base+0x45e>)
   17caa:	it	eq
   17cac:	cmpeq	fp, r2
   17cae:	ldr	r1, [sp, #12]
   17cb0:	add	r0, pc
   17cb2:	movw	r2, #1431	; 0x597
   17cb6:	ite	ne
   17cb8:	movne	r3, #1
   17cba:	moveq	r3, #0
   17cbc:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   17cc0:	cbnz	r7, 17cdc <rb_free_nodes@@Base+0x3de>
   17cc2:	cmp	r6, #8
   17cc4:	bgt.n	17cca <rb_free_nodes@@Base+0x3cc>
   17cc6:	movs	r7, #1
   17cc8:	b.n	17d46 <rb_free_nodes@@Base+0x448>
   17cca:	cmp.w	r8, #0
   17cce:	ble.n	17cc6 <rb_free_nodes@@Base+0x3c8>
   17cd0:	sub.w	r3, r6, #8
   17cd4:	cmp	r8, r3
   17cd6:	it	ge
   17cd8:	movge	r8, r3
   17cda:	b.n	17cfe <rb_free_nodes@@Base+0x400>
   17cdc:	cmp.w	r8, #0
   17ce0:	ble.n	17d46 <rb_free_nodes@@Base+0x448>
   17ce2:	cmp	r8, r6
   17ce4:	it	ge
   17ce6:	movge	r8, r6
   17ce8:	cmp	r6, r8
   17cea:	ble.n	17cfe <rb_free_nodes@@Base+0x400>
   17cec:	sub.w	r3, r6, r8
   17cf0:	cmp	r3, #7
   17cf2:	bgt.n	17cfe <rb_free_nodes@@Base+0x400>
   17cf4:	cmp.w	r8, #8
   17cf8:	ble.n	17d46 <rb_free_nodes@@Base+0x448>
   17cfa:	sub.w	r8, r8, #8
   17cfe:	add.w	r2, r9, r9, lsl #5
   17d02:	movs	r3, #101	; 0x65
   17d04:	add.w	sl, r8, r8, lsl #5
   17d08:	add	r2, r3
   17d0a:	mov	r1, r4
   17d0c:	mov	r0, r5
   17d0e:	str.w	sl, [sp]
   17d12:	sub.w	r7, r6, r8
   17d16:	bl	17342 <copy_extent_buffer@@Base>
   17d1a:	cmp	r6, r8
   17d1c:	ble.n	17d2e <rb_free_nodes@@Base+0x430>
   17d1e:	add.w	r3, r7, r7, lsl #5
   17d22:	add.w	r2, sl, #101	; 0x65
   17d26:	movs	r1, #101	; 0x65
   17d28:	mov	r0, r4
   17d2a:	bl	1738c <memmove_extent_buffer@@Base>
   17d2e:	str.w	r7, [r4, #192]	; 0xc0
   17d32:	mov	r0, r4
   17d34:	add	r8, r9
   17d36:	str.w	r8, [r5, #192]	; 0xc0
   17d3a:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   17d3e:	mov	r0, r5
   17d40:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   17d44:	movs	r7, #0
   17d46:	mov	r0, r7
   17d48:	add	sp, #20
   17d4a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17d4e:	nop
   17d50:	strh	r1, [r4, #30]
   17d52:	subs	r6, #15
   17d54:	str	r4, [r7, r6]
   17d56:	movs	r2, r0
   17d58:	ldr	r2, [pc, #832]	; (1809c <add_root_to_dirty_list@@Base+0x208>)
   17d5a:	movs	r2, r0
   17d5c:	ldr	r2, [pc, #900]	; (180e4 <btrfs_copy_root@@Base+0x24>)
   17d5e:	movs	r2, r0
   17d60:	push	{r3, r4, r5, r6, r7, lr}
   17d62:	mov	r6, r0
   17d64:	mov	r4, r1
   17d66:	mov	r5, r2
   17d68:	cbz	r2, 17da4 <rb_free_nodes@@Base+0x4a6>
   17d6a:	bl	1791c <rb_free_nodes@@Base+0x1e>
   17d6e:	ldr.w	r3, [r6, #192]	; 0xc0
   17d72:	mov.w	ip, #25
   17d76:	ldr	r1, [pc, #48]	; (17da8 <rb_free_nodes@@Base+0x4aa>)
   17d78:	add	r1, pc
   17d7a:	adds	r1, #45	; 0x2d
   17d7c:	mul.w	r7, ip, r2
   17d80:	adds	r2, r4, r2
   17d82:	cmp	r2, r3
   17d84:	it	ge
   17d86:	movge	r2, r3
   17d88:	subs	r2, #1
   17d8a:	mla	r3, ip, r2, r6
   17d8e:	ldr.w	r2, [r3, #214]	; 0xd6
   17d92:	subs	r2, r7, r2
   17d94:	adds	r5, r2, r0
   17d96:	ldr	r0, [pc, #20]	; (17dac <rb_free_nodes@@Base+0x4ae>)
   17d98:	mov.w	r2, #1752	; 0x6d8
   17d9c:	lsrs	r3, r5, #31
   17d9e:	add	r0, pc
   17da0:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   17da4:	mov	r0, r5
   17da6:	pop	{r3, r4, r5, r6, r7, pc}
   17da8:	str	r0, [r1, r3]
   17daa:	movs	r2, r0
   17dac:	ldr	r2, [pc, #136]	; (17e38 <btrfs_csum_type_size@@Base>)
   17dae:	movs	r2, r0
   17db0:	push	{r4, lr}
   17db2:	mov	r4, r1
   17db4:	ldr	r1, [pc, #76]	; (17e04 <rb_free_nodes@@Base+0x506>)
   17db6:	sub	sp, #24
   17db8:	ldr	r3, [pc, #76]	; (17e08 <rb_free_nodes@@Base+0x50a>)
   17dba:	add	r1, pc
   17dbc:	ldr	r3, [r1, r3]
   17dbe:	mov	r1, sp
   17dc0:	ldr	r3, [r3, #0]
   17dc2:	str	r3, [sp, #20]
   17dc4:	mov.w	r3, #0
   17dc8:	bl	17946 <rb_free_nodes@@Base+0x48>
   17dcc:	ldr.w	r3, [sp, #13]
   17dd0:	ldr.w	r2, [sp, #9]
   17dd4:	str.w	r3, [r4, #13]
   17dd8:	ldrb.w	r3, [sp, #8]
   17ddc:	str.w	r2, [r4, #9]
   17de0:	ldr	r2, [pc, #40]	; (17e0c <rb_free_nodes@@Base+0x50e>)
   17de2:	strb	r3, [r4, #8]
   17de4:	ldr	r3, [sp, #0]
   17de6:	add	r2, pc
   17de8:	str	r3, [r4, #0]
   17dea:	ldr	r3, [sp, #4]
   17dec:	str	r3, [r4, #4]
   17dee:	ldr	r3, [pc, #24]	; (17e08 <rb_free_nodes@@Base+0x50a>)
   17df0:	ldr	r3, [r2, r3]
   17df2:	ldr	r2, [r3, #0]
   17df4:	ldr	r3, [sp, #20]
   17df6:	eors	r2, r3
   17df8:	beq.n	17dfe <rb_free_nodes@@Base+0x500>
   17dfa:	blx	84cc <__stack_chk_fail@plt>
   17dfe:	add	sp, #24
   17e00:	pop	{r4, pc}
   17e02:	nop
   17e04:	ldmia	r7, {r1, r2, r3, r6, r7}
   17e06:	movs	r4, r0
   17e08:	lsls	r4, r4, #8
   17e0a:	movs	r0, r0
   17e0c:	ldmia	r7, {r1, r5, r7}
   17e0e:	movs	r4, r0

00017e10 <btrfs_super_csum_size@@Base>:
   17e10:	ldrh.w	r2, [r0, #196]	; 0xc4
   17e14:	ldr	r3, [pc, #8]	; (17e20 <btrfs_super_csum_size@@Base+0x10>)
   17e16:	add	r3, pc
   17e18:	add.w	r3, r3, r2, lsl #4
   17e1c:	ldrh	r0, [r3, #62]	; 0x3e
   17e1e:	bx	lr
   17e20:	str	r2, [r5, r0]
   17e22:	movs	r2, r0

00017e24 <btrfs_super_csum_name@@Base>:
   17e24:	ldr	r3, [pc, #8]	; (17e30 <btrfs_super_csum_name@@Base+0xc>)
   17e26:	add	r3, pc
   17e28:	add.w	r0, r3, r0, lsl #4
   17e2c:	adds	r0, #64	; 0x40
   17e2e:	bx	lr
   17e30:	str	r2, [r3, r0]
   17e32:	movs	r2, r0

00017e34 <btrfs_super_num_csums@@Base>:
   17e34:	movs	r0, #4
   17e36:	bx	lr

00017e38 <btrfs_csum_type_size@@Base>:
   17e38:	ldr	r3, [pc, #8]	; (17e44 <btrfs_csum_type_size@@Base+0xc>)
   17e3a:	add	r3, pc
   17e3c:	add.w	r0, r3, r0, lsl #4
   17e40:	ldrh	r0, [r0, #62]	; 0x3e
   17e42:	bx	lr
   17e44:	str	r6, [r0, r0]
   17e46:	movs	r2, r0

00017e48 <btrfs_init_path@@Base>:
   17e48:	movs	r2, #68	; 0x44
   17e4a:	movs	r1, #0
   17e4c:	b.w	877c <memset@plt>

00017e50 <btrfs_alloc_path@@Base>:
   17e50:	movs	r1, #68	; 0x44
   17e52:	movs	r0, #1
   17e54:	b.w	8354 <calloc@plt>

00017e58 <btrfs_release_path@@Base>:
   17e58:	push	{r4, r5, r6, lr}
   17e5a:	subs	r5, r0, #4
   17e5c:	add.w	r6, r0, #28
   17e60:	mov	r4, r0
   17e62:	ldr.w	r0, [r5, #4]!
   17e66:	cbz	r0, 17e6c <btrfs_release_path@@Base+0x14>
   17e68:	bl	16c20 <free_extent_buffer@@Base>
   17e6c:	cmp	r5, r6
   17e6e:	bne.n	17e62 <btrfs_release_path@@Base+0xa>
   17e70:	mov	r0, r4
   17e72:	movs	r2, #68	; 0x44
   17e74:	ldmia.w	sp!, {r4, r5, r6, lr}
   17e78:	movs	r1, #0
   17e7a:	b.w	877c <memset@plt>

00017e7e <btrfs_free_path@@Base>:
   17e7e:	push	{r4, lr}
   17e80:	mov	r4, r0
   17e82:	cbz	r0, 17e92 <btrfs_free_path@@Base+0x14>
   17e84:	bl	17e58 <btrfs_release_path@@Base>
   17e88:	mov	r0, r4
   17e8a:	ldmia.w	sp!, {r4, lr}
   17e8e:	b.w	83ec <free@plt>
   17e92:	pop	{r4, pc}

00017e94 <add_root_to_dirty_list@@Base>:
   17e94:	ldr.w	r3, [r0, #492]	; 0x1ec
   17e98:	cbz	r3, 17ec0 <add_root_to_dirty_list@@Base+0x2c>
   17e9a:	ldr.w	r3, [r0, #520]	; 0x208
   17e9e:	add.w	r2, r0, #520	; 0x208
   17ea2:	cmp	r2, r3
   17ea4:	bne.n	17ec0 <add_root_to_dirty_list@@Base+0x2c>
   17ea6:	ldr.w	r3, [r0, #464]	; 0x1d0
   17eaa:	ldr.w	r1, [r3, #336]	; 0x150
   17eae:	str	r2, [r1, #4]
   17eb0:	str.w	r1, [r0, #520]	; 0x208
   17eb4:	add.w	r1, r3, #336	; 0x150
   17eb8:	str.w	r1, [r0, #524]	; 0x20c
   17ebc:	str.w	r2, [r3, #336]	; 0x150
   17ec0:	bx	lr
   17ec2:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ec6:	sub	sp, #76	; 0x4c
   17ec8:	mov	r7, r3
   17eca:	ldr	r3, [pc, #468]	; (180a0 <add_root_to_dirty_list@@Base+0x20c>)
   17ecc:	str	r2, [sp, #36]	; 0x24
   17ece:	mov	r5, r1
   17ed0:	ldr	r2, [pc, #464]	; (180a4 <add_root_to_dirty_list@@Base+0x210>)
   17ed2:	mov	fp, r0
   17ed4:	ldr	r1, [pc, #464]	; (180a8 <add_root_to_dirty_list@@Base+0x214>)
   17ed6:	add.w	r8, sp, #48	; 0x30
   17eda:	add	r2, pc
   17edc:	ldr	r0, [pc, #460]	; (180ac <add_root_to_dirty_list@@Base+0x218>)
   17ede:	add	r1, pc
   17ee0:	ldr	r3, [r2, r3]
   17ee2:	adds	r1, #126	; 0x7e
   17ee4:	add	r0, pc
   17ee6:	movw	r2, #1553	; 0x611
   17eea:	ldr	r3, [r3, #0]
   17eec:	str	r3, [sp, #68]	; 0x44
   17eee:	mov.w	r3, #0
   17ef2:	ldr	r3, [sp, #36]	; 0x24
   17ef4:	str	r1, [sp, #44]	; 0x2c
   17ef6:	add.w	r3, r3, r7, lsl #2
   17efa:	str	r3, [sp, #40]	; 0x28
   17efc:	ldr	r3, [sp, #36]	; 0x24
   17efe:	ldr.w	r3, [r3, r7, lsl #2]
   17f02:	bl	17a14 <rb_free_nodes@@Base+0x116>
   17f06:	ldr	r3, [sp, #40]	; 0x28
   17f08:	ldr	r0, [pc, #420]	; (180b0 <add_root_to_dirty_list@@Base+0x21c>)
   17f0a:	movw	r2, #1554	; 0x612
   17f0e:	ldr	r1, [sp, #44]	; 0x2c
   17f10:	ldr.w	sl, [r3, #-4]
   17f14:	add	r0, pc
   17f16:	ldr	r3, [r5, #0]
   17f18:	subs.w	r3, r3, sl
   17f1c:	it	ne
   17f1e:	movne	r3, #1
   17f20:	bl	17a14 <rb_free_nodes@@Base+0x116>
   17f24:	cmp	r7, #1
   17f26:	mov.w	r2, #0
   17f2a:	mov	r1, r8
   17f2c:	mov	r0, sl
   17f2e:	bne.n	17f84 <add_root_to_dirty_list@@Base+0xf0>
   17f30:	bl	17946 <rb_free_nodes@@Base+0x48>
   17f34:	movs	r2, #0
   17f36:	movs	r3, #0
   17f38:	strd	r2, r3, [sp, #24]
   17f3c:	mov	r0, fp
   17f3e:	ldr	r3, [r5, #0]
   17f40:	ldr.w	r1, [r5, #464]	; 0x1d0
   17f44:	ldrd	r2, r3, [r3, #40]	; 0x28
   17f48:	strd	r8, r7, [sp, #8]
   17f4c:	strd	r2, r3, [sp, #16]
   17f50:	ldr.w	r2, [r5, #447]	; 0x1bf
   17f54:	ldr.w	r3, [r5, #451]	; 0x1c3
   17f58:	strd	r2, r3, [sp]
   17f5c:	ldr.w	r2, [r1, #384]	; 0x180
   17f60:	mov	r1, r5
   17f62:	bl	22a64 <btrfs_alloc_free_block@@Base>
   17f66:	cmn.w	r0, #4096	; 0x1000
   17f6a:	mov	r4, r0
   17f6c:	bls.n	17f8a <add_root_to_dirty_list@@Base+0xf6>
   17f6e:	ldr	r2, [pc, #324]	; (180b4 <add_root_to_dirty_list@@Base+0x220>)
   17f70:	ldr	r3, [pc, #300]	; (180a0 <add_root_to_dirty_list@@Base+0x20c>)
   17f72:	add	r2, pc
   17f74:	ldr	r3, [r2, r3]
   17f76:	ldr	r2, [r3, #0]
   17f78:	ldr	r3, [sp, #68]	; 0x44
   17f7a:	eors	r2, r3
   17f7c:	beq.w	18098 <add_root_to_dirty_list@@Base+0x204>
   17f80:	blx	84cc <__stack_chk_fail@plt>
   17f84:	bl	17952 <rb_free_nodes@@Base+0x54>
   17f88:	b.n	17f34 <add_root_to_dirty_list@@Base+0xa0>
   17f8a:	movs	r2, #0
   17f8c:	movs	r3, #101	; 0x65
   17f8e:	mov	r1, r2
   17f90:	movs	r6, #0
   17f92:	bl	173a2 <memset_extent_buffer@@Base>
   17f96:	movs	r3, #1
   17f98:	strb.w	r3, [r4, #192]	; 0xc0
   17f9c:	ldr	r3, [r4, #40]	; 0x28
   17f9e:	strb.w	r6, [r4, #193]	; 0xc1
   17fa2:	strb.w	r6, [r4, #194]	; 0xc2
   17fa6:	str.w	r3, [r4, #144]	; 0x90
   17faa:	ldr	r3, [r4, #44]	; 0x2c
   17fac:	strb.w	r6, [r4, #195]	; 0xc3
   17fb0:	strb.w	r7, [r4, #196]	; 0xc4
   17fb4:	str.w	r3, [r4, #148]	; 0x94
   17fb8:	ldrd	r2, r3, [fp, #8]
   17fbc:	str.w	r2, [r4, #176]	; 0xb0
   17fc0:	str.w	r3, [r4, #180]	; 0xb4
   17fc4:	ldr.w	r2, [r4, #152]	; 0x98
   17fc8:	ldr.w	r3, [r4, #156]	; 0x9c
   17fcc:	bic.w	r3, r3, #4278190080	; 0xff000000
   17fd0:	str.w	r2, [r4, #152]	; 0x98
   17fd4:	orr.w	r3, r3, #16777216	; 0x1000000
   17fd8:	str.w	r3, [r4, #156]	; 0x9c
   17fdc:	ldr.w	r2, [r5, #447]	; 0x1bf
   17fe0:	ldr.w	r3, [r5, #451]	; 0x1c3
   17fe4:	str.w	r2, [r4, #184]	; 0xb8
   17fe8:	str.w	r3, [r4, #188]	; 0xbc
   17fec:	ldr.w	r0, [r5, #464]	; 0x1d0
   17ff0:	ldr.w	r2, [r5, #200]	; 0xc8
   17ff4:	ldr.w	r3, [r5, #204]	; 0xcc
   17ff8:	ldr.w	r1, [r0, #384]	; 0x180
   17ffc:	adds	r2, r2, r1
   17ffe:	str.w	r2, [r5, #200]	; 0xc8
   18002:	adc.w	r3, r3, #0
   18006:	str.w	r3, [r5, #204]	; 0xcc
   1800a:	ldr.w	r1, [r0, #352]	; 0x160
   1800e:	movs	r3, #16
   18010:	movs	r2, #32
   18012:	mov	r0, r4
   18014:	add	r1, r3
   18016:	bl	17330 <write_extent_buffer@@Base>
   1801a:	movs	r3, #16
   1801c:	ldr.w	r1, [r5, #464]	; 0x1d0
   18020:	movs	r2, #64	; 0x40
   18022:	mov	r0, r4
   18024:	bl	17330 <write_extent_buffer@@Base>
   18028:	mov	r1, r8
   1802a:	mov	r2, r6
   1802c:	mov	r0, r4
   1802e:	bl	1792e <rb_free_nodes@@Base+0x30>
   18032:	ldrd	r2, r3, [sl, #40]	; 0x28
   18036:	ldr	r1, [pc, #128]	; (180b8 <add_root_to_dirty_list@@Base+0x224>)
   18038:	ldr	r0, [pc, #128]	; (180bc <add_root_to_dirty_list@@Base+0x228>)
   1803a:	str.w	r2, [r4, #214]	; 0xd6
   1803e:	add	r1, pc
   18040:	str.w	r3, [r4, #218]	; 0xda
   18044:	adds	r1, #126	; 0x7e
   18046:	ldrd	r2, r3, [fp, #8]
   1804a:	add	r0, pc
   1804c:	ldr.w	r9, [sl, #180]	; 0xb4
   18050:	ldr.w	r8, [sl, #176]	; 0xb0
   18054:	cmp	r3, r9
   18056:	it	eq
   18058:	cmpeq	r2, r8
   1805a:	movw	r2, #1589	; 0x635
   1805e:	ite	ne
   18060:	movne	r3, #1
   18062:	moveq	r3, r6
   18064:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   18068:	mov	r0, r4
   1806a:	str.w	r8, [r4, #222]	; 0xde
   1806e:	str.w	r9, [r4, #226]	; 0xe2
   18072:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   18076:	ldr	r0, [r5, #0]
   18078:	str	r4, [r5, #0]
   1807a:	bl	16c20 <free_extent_buffer@@Base>
   1807e:	mov	r0, r5
   18080:	bl	17e94 <add_root_to_dirty_list@@Base>
   18084:	ldr	r3, [r4, #80]	; 0x50
   18086:	mov	r0, r6
   18088:	adds	r3, #1
   1808a:	str	r3, [r4, #80]	; 0x50
   1808c:	ldr	r3, [sp, #36]	; 0x24
   1808e:	str.w	r4, [r3, r7, lsl #2]
   18092:	ldr	r3, [sp, #40]	; 0x28
   18094:	str	r6, [r3, #32]
   18096:	b.n	17f6e <add_root_to_dirty_list@@Base+0xda>
   18098:	add	sp, #76	; 0x4c
   1809a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1809e:	nop
   180a0:	lsls	r4, r4, #8
   180a2:	movs	r0, r0
   180a4:	ldmia	r6!, {r1, r2, r3, r5, r7}
   180a6:	movs	r4, r0
   180a8:	ldr	r7, [pc, #392]	; (18234 <btrfs_copy_root@@Base+0x174>)
   180aa:	movs	r2, r0
   180ac:	ldr	r0, [pc, #348]	; (1820c <btrfs_copy_root@@Base+0x14c>)
   180ae:	movs	r2, r0
   180b0:	ldr	r0, [pc, #740]	; (18398 <__btrfs_cow_block@@Base+0xdc>)
   180b2:	movs	r2, r0
   180b4:	ldmia	r6!, {r1, r2, r4}
   180b6:	movs	r4, r0
   180b8:	ldr	r6, [pc, #8]	; (180c4 <btrfs_copy_root@@Base+0x4>)
   180ba:	movs	r2, r0
   180bc:			; <UNDEFINED> instruction: 0x47a6
   180be:	movs	r2, r0

000180c0 <btrfs_copy_root@@Base>:
   180c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   180c4:	sub	sp, #68	; 0x44
   180c6:	mov	r4, r2
   180c8:	ldr	r2, [pc, #460]	; (18298 <btrfs_copy_root@@Base+0x1d8>)
   180ca:	str	r3, [sp, #36]	; 0x24
   180cc:	mov	r8, r0
   180ce:	ldr	r3, [pc, #460]	; (1829c <btrfs_copy_root@@Base+0x1dc>)
   180d0:	add	r2, pc
   180d2:	mov.w	r0, #544	; 0x220
   180d6:	ldrd	sl, fp, [sp, #104]	; 0x68
   180da:	mov	r9, r1
   180dc:	ldr	r3, [r2, r3]
   180de:	ldr	r3, [r3, #0]
   180e0:	str	r3, [sp, #60]	; 0x3c
   180e2:	mov.w	r3, #0
   180e6:	blx	8634 <malloc@plt+0x4>
   180ea:	mov	r5, r0
   180ec:	cmp	r0, #0
   180ee:	beq.w	1828a <btrfs_copy_root@@Base+0x1ca>
   180f2:	mov.w	r2, #544	; 0x220
   180f6:	mov	r1, r9
   180f8:	blx	843c <memcpy@plt+0x4>
   180fc:	ldr.w	r3, [r9, #488]	; 0x1e8
   18100:	str.w	sl, [r5, #447]	; 0x1bf
   18104:	str.w	fp, [r5, #451]	; 0x1c3
   18108:	cbz	r3, 18124 <btrfs_copy_root@@Base+0x64>
   1810a:	ldr.w	r3, [r9, #464]	; 0x1d0
   1810e:	ldr.w	r3, [r3, #304]	; 0x130
   18112:	ldrd	r0, r1, [r3, #8]
   18116:	ldrd	r2, r3, [r8, #8]
   1811a:	cmp	r1, r3
   1811c:	itet	eq
   1811e:	cmpeq	r0, r2
   18120:	movne	r3, #1
   18122:	moveq	r3, #0
   18124:	ldr	r1, [pc, #376]	; (182a0 <btrfs_copy_root@@Base+0x1e0>)
   18126:	movs	r2, #142	; 0x8e
   18128:	ldr	r0, [pc, #376]	; (182a4 <btrfs_copy_root@@Base+0x1e4>)
   1812a:	add	r1, pc
   1812c:	add	r1, r2
   1812e:	add	r0, pc
   18130:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   18134:	ldr.w	r3, [r9, #488]	; 0x1e8
   18138:	cbz	r3, 1814c <btrfs_copy_root@@Base+0x8c>
   1813a:	ldrd	r2, r3, [r9, #480]	; 0x1e0
   1813e:	ldrd	r6, r7, [r8, #8]
   18142:	cmp	r7, r3
   18144:	itet	eq
   18146:	cmpeq	r6, r2
   18148:	movne	r3, #1
   1814a:	moveq	r3, #0
   1814c:	ldr	r1, [pc, #344]	; (182a8 <btrfs_copy_root@@Base+0x1e8>)
   1814e:	movs	r2, #144	; 0x90
   18150:	ldr	r0, [pc, #344]	; (182ac <btrfs_copy_root@@Base+0x1ec>)
   18152:	add	r7, sp, #40	; 0x28
   18154:	add	r1, pc
   18156:	adds	r1, #142	; 0x8e
   18158:	add	r0, pc
   1815a:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1815e:	ldrb.w	r6, [r4, #196]	; 0xc4
   18162:	cbnz	r6, 181b4 <btrfs_copy_root@@Base+0xf4>
   18164:	mov	r2, r6
   18166:	mov	r1, r7
   18168:	mov	r0, r4
   1816a:	bl	17946 <rb_free_nodes@@Base+0x48>
   1816e:	movs	r2, #0
   18170:	movs	r3, #0
   18172:	strd	r2, r3, [sp, #24]
   18176:	mov	r1, r5
   18178:	ldrd	r2, r3, [r4, #40]	; 0x28
   1817c:	mov	r0, r8
   1817e:	strd	r7, r6, [sp, #8]
   18182:	strd	sl, fp, [sp]
   18186:	strd	r2, r3, [sp, #16]
   1818a:	ldr	r2, [r4, #76]	; 0x4c
   1818c:	bl	22a64 <btrfs_alloc_free_block@@Base>
   18190:	cmn.w	r0, #4096	; 0x1000
   18194:	mov	r6, r0
   18196:	bls.n	181c0 <btrfs_copy_root@@Base+0x100>
   18198:	mov	r0, r5
   1819a:	mov	r4, r6
   1819c:	blx	83f0 <free@plt+0x4>
   181a0:	ldr	r2, [pc, #268]	; (182b0 <btrfs_copy_root@@Base+0x1f0>)
   181a2:	ldr	r3, [pc, #248]	; (1829c <btrfs_copy_root@@Base+0x1dc>)
   181a4:	add	r2, pc
   181a6:	ldr	r3, [r2, r3]
   181a8:	ldr	r2, [r3, #0]
   181aa:	ldr	r3, [sp, #60]	; 0x3c
   181ac:	eors	r2, r3
   181ae:	beq.n	18290 <btrfs_copy_root@@Base+0x1d0>
   181b0:	blx	84cc <__stack_chk_fail@plt>
   181b4:	movs	r2, #0
   181b6:	mov	r1, r7
   181b8:	mov	r0, r4
   181ba:	bl	17952 <rb_free_nodes@@Base+0x54>
   181be:	b.n	1816e <btrfs_copy_root@@Base+0xae>
   181c0:	ldr	r3, [r0, #76]	; 0x4c
   181c2:	mov	r1, r4
   181c4:	str	r3, [sp, #0]
   181c6:	movs	r3, #0
   181c8:	mov	r2, r3
   181ca:	bl	17342 <copy_extent_buffer@@Base>
   181ce:	ldr	r3, [r6, #40]	; 0x28
   181d0:	mov.w	r1, #4294967295	; 0xffffffff
   181d4:	cmp	fp, r1
   181d6:	mvn.w	r0, #7
   181da:	it	eq
   181dc:	cmpeq	sl, r0
   181de:	str.w	r3, [r6, #144]	; 0x90
   181e2:	mov	r0, r6
   181e4:	ldr	r3, [r6, #44]	; 0x2c
   181e6:	str.w	r3, [r6, #148]	; 0x94
   181ea:	ldrd	r2, r3, [r8, #8]
   181ee:	itt	ne
   181f0:	strne.w	sl, [r6, #184]	; 0xb8
   181f4:	strne.w	fp, [r6, #188]	; 0xbc
   181f8:	str.w	r2, [r6, #176]	; 0xb0
   181fc:	str.w	r3, [r6, #180]	; 0xb4
   18200:	ldr.w	r2, [r6, #156]	; 0x9c
   18204:	ldr.w	r3, [r6, #152]	; 0x98
   18208:	bic.w	r2, r2, #4278190080	; 0xff000000
   1820c:	bic.w	r3, r3, #3
   18210:	orr.w	r2, r2, #16777216	; 0x1000000
   18214:	str.w	r3, [r6, #152]	; 0x98
   18218:	it	eq
   1821a:	orreq.w	r3, r3, #2
   1821e:	str.w	r2, [r6, #156]	; 0x9c
   18222:	mov.w	r2, #32
   18226:	it	eq
   18228:	streq.w	r3, [r6, #152]	; 0x98
   1822c:	ldr.w	r3, [r9, #464]	; 0x1d0
   18230:	ldr.w	r1, [r3, #352]	; 0x160
   18234:	movs	r3, #16
   18236:	add	r1, r3
   18238:	bl	17330 <write_extent_buffer@@Base>
   1823c:	ldrd	r2, r3, [r8, #8]
   18240:	ldr.w	r1, [r4, #180]	; 0xb4
   18244:	ldr.w	r0, [r4, #176]	; 0xb0
   18248:	cmp	r3, r1
   1824a:	ldr	r1, [pc, #104]	; (182b4 <btrfs_copy_root@@Base+0x1f4>)
   1824c:	it	eq
   1824e:	cmpeq	r2, r0
   18250:	ldr	r0, [pc, #100]	; (182b8 <btrfs_copy_root@@Base+0x1f8>)
   18252:	add	r1, pc
   18254:	mov.w	r2, #173	; 0xad
   18258:	ite	cc
   1825a:	movcc	r3, #1
   1825c:	movcs	r3, #0
   1825e:	adds	r1, #142	; 0x8e
   18260:	add	r0, pc
   18262:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   18266:	movs	r3, #0
   18268:	mov	r2, r6
   1826a:	mov	r1, r5
   1826c:	mov	r0, r8
   1826e:	bl	20920 <btrfs_inc_ref@@Base>
   18272:	mov	r4, r0
   18274:	mov	r0, r5
   18276:	blx	83f0 <free@plt+0x4>
   1827a:	cmp	r4, #0
   1827c:	bne.n	181a0 <btrfs_copy_root@@Base+0xe0>
   1827e:	mov	r0, r6
   18280:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   18284:	ldr	r3, [sp, #36]	; 0x24
   18286:	str	r6, [r3, #0]
   18288:	b.n	181a0 <btrfs_copy_root@@Base+0xe0>
   1828a:	mvn.w	r4, #11
   1828e:	b.n	181a0 <btrfs_copy_root@@Base+0xe0>
   18290:	mov	r0, r4
   18292:	add	sp, #68	; 0x44
   18294:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18298:	ldmia	r4, {r3, r4, r5, r7}
   1829a:	movs	r4, r0
   1829c:	lsls	r4, r4, #8
   1829e:	movs	r0, r0
   182a0:	ldr	r5, [pc, #88]	; (182fc <__btrfs_cow_block@@Base+0x40>)
   182a2:	movs	r2, r0
   182a4:	mov	lr, fp
   182a6:	movs	r2, r0
   182a8:	ldr	r4, [pc, #944]	; (1865c <__btrfs_cow_block@@Base+0x3a0>)
   182aa:	movs	r2, r0
   182ac:	bxns	r0
   182ae:	movs	r2, r0
   182b0:	ldmia	r3!, {r2, r5, r6, r7}
   182b2:	movs	r4, r0
   182b4:	ldr	r3, [pc, #952]	; (18670 <__btrfs_cow_block@@Base+0x3b4>)
   182b6:	movs	r2, r0
   182b8:	mov	r7, sl
   182ba:	movs	r2, r0

000182bc <__btrfs_cow_block@@Base>:
   182bc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   182c0:	sub	sp, #100	; 0x64
   182c2:	mov	r5, r2
   182c4:	ldr.w	r2, [pc, #1368]	; 18820 <__btrfs_cow_block@@Base+0x564>
   182c8:	str	r3, [sp, #48]	; 0x30
   182ca:	mov	sl, r0
   182cc:	ldrd	fp, r3, [sp, #136]	; 0x88
   182d0:	add	r2, pc
   182d2:	mov	r4, r1
   182d4:	str	r3, [sp, #52]	; 0x34
   182d6:	ldr.w	r3, [pc, #1356]	; 18824 <__btrfs_cow_block@@Base+0x568>
   182da:	ldr	r3, [r2, r3]
   182dc:	ldr	r3, [r3, #0]
   182de:	str	r3, [sp, #92]	; 0x5c
   182e0:	mov.w	r3, #0
   182e4:	ldr.w	r3, [r1, #488]	; 0x1e8
   182e8:	cbz	r3, 18304 <__btrfs_cow_block@@Base+0x48>
   182ea:	ldr.w	r3, [r1, #464]	; 0x1d0
   182ee:	ldr.w	r3, [r3, #304]	; 0x130
   182f2:	ldrd	r0, r1, [r3, #8]
   182f6:	ldrd	r2, r3, [sl, #8]
   182fa:	cmp	r1, r3
   182fc:	itet	eq
   182fe:	cmpeq	r0, r2
   18300:	movne	r3, #1
   18302:	moveq	r3, #0
   18304:	ldr.w	r1, [pc, #1312]	; 18828 <__btrfs_cow_block@@Base+0x56c>
   18308:	movw	r2, #311	; 0x137
   1830c:	ldr.w	r0, [pc, #1308]	; 1882c <__btrfs_cow_block@@Base+0x570>
   18310:	add	r1, pc
   18312:	adds	r1, #158	; 0x9e
   18314:	add	r0, pc
   18316:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1831a:	ldr.w	r3, [r4, #488]	; 0x1e8
   1831e:	cbz	r3, 18332 <__btrfs_cow_block@@Base+0x76>
   18320:	ldrd	r8, r9, [sl, #8]
   18324:	ldrd	r6, r7, [r4, #480]	; 0x1e0
   18328:	cmp	r9, r7
   1832a:	itet	eq
   1832c:	cmpeq	r8, r6
   1832e:	movne	r3, #1
   18330:	moveq	r3, #0
   18332:	ldr.w	r1, [pc, #1276]	; 18830 <__btrfs_cow_block@@Base+0x574>
   18336:	movw	r2, #313	; 0x139
   1833a:	ldr.w	r0, [pc, #1272]	; 18834 <__btrfs_cow_block@@Base+0x578>
   1833e:	add	r6, sp, #72	; 0x48
   18340:	add	r1, pc
   18342:	adds	r1, #158	; 0x9e
   18344:	add	r0, pc
   18346:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1834a:	ldrb.w	r7, [r5, #196]	; 0xc4
   1834e:	cbnz	r7, 183a6 <__btrfs_cow_block@@Base+0xea>
   18350:	mov	r2, r7
   18352:	mov	r1, r6
   18354:	mov	r0, r5
   18356:	bl	17946 <rb_free_nodes@@Base+0x48>
   1835a:	ldrd	r2, r3, [sp, #152]	; 0x98
   1835e:	mov	r1, r4
   18360:	strd	r6, r7, [sp, #8]
   18364:	mov	r0, sl
   18366:	strd	r2, r3, [sp, #24]
   1836a:	ldrd	r2, r3, [sp, #144]	; 0x90
   1836e:	strd	r2, r3, [sp, #16]
   18372:	ldr.w	r2, [r4, #447]	; 0x1bf
   18376:	ldr.w	r3, [r4, #451]	; 0x1c3
   1837a:	strd	r2, r3, [sp]
   1837e:	ldr	r2, [r5, #76]	; 0x4c
   18380:	bl	22a64 <btrfs_alloc_free_block@@Base>
   18384:	cmn.w	r0, #4096	; 0x1000
   18388:	mov	r6, r0
   1838a:	bls.n	183b2 <__btrfs_cow_block@@Base+0xf6>
   1838c:	ldr.w	r2, [pc, #1192]	; 18838 <__btrfs_cow_block@@Base+0x57c>
   18390:	ldr.w	r3, [pc, #1168]	; 18824 <__btrfs_cow_block@@Base+0x568>
   18394:	add	r2, pc
   18396:	ldr	r3, [r2, r3]
   18398:	ldr	r2, [r3, #0]
   1839a:	ldr	r3, [sp, #92]	; 0x5c
   1839c:	eors	r2, r3
   1839e:	beq.w	1881a <__btrfs_cow_block@@Base+0x55e>
   183a2:	blx	84cc <__stack_chk_fail@plt>
   183a6:	movs	r2, #0
   183a8:	mov	r1, r6
   183aa:	mov	r0, r5
   183ac:	bl	17952 <rb_free_nodes@@Base+0x54>
   183b0:	b.n	1835a <__btrfs_cow_block@@Base+0x9e>
   183b2:	ldr	r3, [r0, #76]	; 0x4c
   183b4:	mov	r1, r5
   183b6:	str	r3, [sp, #0]
   183b8:	movs	r3, #0
   183ba:	mov	r2, r3
   183bc:	bl	17342 <copy_extent_buffer@@Base>
   183c0:	ldr	r3, [r6, #40]	; 0x28
   183c2:	ldr.w	ip, [r6, #152]	; 0x98
   183c6:	mov.w	r1, #4294967295	; 0xffffffff
   183ca:	mvn.w	r0, #7
   183ce:	str.w	r3, [r6, #144]	; 0x90
   183d2:	bic.w	ip, ip, #3
   183d6:	ldr	r3, [r6, #44]	; 0x2c
   183d8:	str.w	r3, [r6, #148]	; 0x94
   183dc:	ldrd	r2, r3, [sl, #8]
   183e0:	str.w	ip, [r6, #152]	; 0x98
   183e4:	str.w	r3, [r6, #180]	; 0xb4
   183e8:	ldr.w	r3, [r6, #156]	; 0x9c
   183ec:	str.w	r2, [r6, #176]	; 0xb0
   183f0:	bic.w	r3, r3, #4278190080	; 0xff000000
   183f4:	orr.w	r3, r3, #16777216	; 0x1000000
   183f8:	str.w	r3, [r6, #156]	; 0x9c
   183fc:	ldr.w	r3, [r4, #451]	; 0x1c3
   18400:	ldr.w	r2, [r4, #447]	; 0x1bf
   18404:	cmp	r3, r1
   18406:	iteet	eq
   18408:	cmpeq	r2, r0
   1840a:	strne.w	r3, [r6, #188]	; 0xbc
   1840e:	strne.w	r2, [r6, #184]	; 0xb8
   18412:	orreq.w	ip, ip, #2
   18416:	it	eq
   18418:	streq.w	ip, [r6, #152]	; 0x98
   1841c:	movs	r2, #32
   1841e:	ldr.w	r3, [r4, #464]	; 0x1d0
   18422:	mov	r0, r6
   18424:	ldr.w	r1, [r3, #352]	; 0x160
   18428:	movs	r3, #16
   1842a:	add	r1, r3
   1842c:	bl	17330 <write_extent_buffer@@Base>
   18430:	ldr	r3, [r5, #84]	; 0x54
   18432:	lsls	r3, r3, #21
   18434:	bmi.w	18572 <__btrfs_cow_block@@Base+0x2b6>
   18438:	ldrd	r2, r3, [sl, #8]
   1843c:	ldr.w	r1, [r5, #180]	; 0xb4
   18440:	ldr.w	r0, [r5, #176]	; 0xb0
   18444:	cmp	r3, r1
   18446:	it	eq
   18448:	cmpeq	r2, r0
   1844a:	ite	cc
   1844c:	movcc	r3, #1
   1844e:	movcs	r3, #0
   18450:	ldr	r1, [pc, #1000]	; (1883c <__btrfs_cow_block@@Base+0x580>)
   18452:	mov.w	r2, #342	; 0x156
   18456:	ldr	r0, [pc, #1000]	; (18840 <__btrfs_cow_block@@Base+0x584>)
   18458:	add	r1, pc
   1845a:	adds	r1, #158	; 0x9e
   1845c:	add	r0, pc
   1845e:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   18462:	ldr.w	r3, [r4, #488]	; 0x1e8
   18466:	cmp	r3, #0
   18468:	beq.w	18576 <__btrfs_cow_block@@Base+0x2ba>
   1846c:	ldr	r3, [r4, #0]
   1846e:	cmp	r5, r3
   18470:	beq.w	18576 <__btrfs_cow_block@@Base+0x2ba>
   18474:	ldr	r3, [r4, #4]
   18476:	cmp	r5, r3
   18478:	beq.n	18576 <__btrfs_cow_block@@Base+0x2ba>
   1847a:	ldr.w	r3, [r5, #180]	; 0xb4
   1847e:	ldr.w	r1, [r4, #212]	; 0xd4
   18482:	ldr.w	r2, [r5, #176]	; 0xb0
   18486:	ldr.w	r0, [r4, #208]	; 0xd0
   1848a:	cmp	r1, r3
   1848c:	it	eq
   1848e:	cmpeq	r0, r2
   18490:	bcs.n	184a0 <__btrfs_cow_block@@Base+0x1e4>
   18492:	ldr.w	r1, [r5, #152]	; 0x98
   18496:	movs	r3, #0
   18498:	and.w	r2, r1, #2
   1849c:	orrs	r3, r2
   1849e:	beq.n	18576 <__btrfs_cow_block@@Base+0x2ba>
   184a0:	ldrb.w	r2, [r5, #196]	; 0xc4
   184a4:	add	r3, sp, #64	; 0x40
   184a6:	ldr.w	r1, [sl]
   184aa:	mov	r0, sl
   184ac:	str	r3, [sp, #16]
   184ae:	add	r3, sp, #56	; 0x38
   184b0:	str	r3, [sp, #12]
   184b2:	movs	r3, #1
   184b4:	str	r3, [sp, #8]
   184b6:	movs	r3, #0
   184b8:	strd	r2, r3, [sp]
   184bc:	ldrd	r2, r3, [r5, #40]	; 0x28
   184c0:	bl	2058c <btrfs_lookup_extent_info@@Base>
   184c4:	ldr	r1, [pc, #892]	; (18844 <__btrfs_cow_block@@Base+0x588>)
   184c6:	movs	r2, #239	; 0xef
   184c8:	add	r1, pc
   184ca:	adds	r1, #176	; 0xb0
   184cc:	str	r1, [sp, #40]	; 0x28
   184ce:	mov	r3, r0
   184d0:	ldr	r0, [pc, #884]	; (18848 <__btrfs_cow_block@@Base+0x58c>)
   184d2:	add	r0, pc
   184d4:	bl	17a14 <rb_free_nodes@@Base+0x116>
   184d8:	ldrd	r2, r3, [sp, #56]	; 0x38
   184dc:	ldr	r0, [pc, #876]	; (1884c <__btrfs_cow_block@@Base+0x590>)
   184de:	orrs	r3, r2
   184e0:	ldr	r1, [sp, #40]	; 0x28
   184e2:	add	r0, pc
   184e4:	mov.w	r2, #240	; 0xf0
   184e8:	ite	eq
   184ea:	moveq	r3, #1
   184ec:	movne	r3, #0
   184ee:	bl	17a14 <rb_free_nodes@@Base+0x116>
   184f2:	ldr.w	r3, [r5, #184]	; 0xb8
   184f6:	ldr	r2, [sp, #64]	; 0x40
   184f8:	str	r3, [sp, #40]	; 0x28
   184fa:	and.w	r8, r2, #256	; 0x100
   184fe:	ldr.w	r3, [r5, #188]	; 0xbc
   18502:	str	r3, [sp, #44]	; 0x2c
   18504:	movs	r3, #0
   18506:	mov	r9, r3
   18508:	orrs.w	r2, r8, r9
   1850c:	bne.n	18524 <__btrfs_cow_block@@Base+0x268>
   1850e:	ldrd	r0, r1, [sp, #40]	; 0x28
   18512:	mov.w	r3, #4294967295	; 0xffffffff
   18516:	mvn.w	r2, #7
   1851a:	cmp	r1, r3
   1851c:	itte	eq
   1851e:	cmpeq	r0, r2
   18520:	moveq	r3, #1
   18522:	movne	r3, r9
   18524:	ldr	r1, [pc, #808]	; (18850 <__btrfs_cow_block@@Base+0x594>)
   18526:	movs	r2, #251	; 0xfb
   18528:	ldr	r0, [pc, #808]	; (18854 <__btrfs_cow_block@@Base+0x598>)
   1852a:	add	r1, pc
   1852c:	adds	r1, #176	; 0xb0
   1852e:	add	r0, pc
   18530:	bl	17a14 <rb_free_nodes@@Base+0x116>
   18534:	ldrd	r2, r3, [sp, #56]	; 0x38
   18538:	cmp	r3, #0
   1853a:	it	eq
   1853c:	cmpeq	r2, #2
   1853e:	bcc.w	1870a <__btrfs_cow_block@@Base+0x44e>
   18542:	ldrd	r0, r1, [sp, #40]	; 0x28
   18546:	ldr.w	r3, [r4, #451]	; 0x1c3
   1854a:	ldr.w	r2, [r4, #447]	; 0x1bf
   1854e:	cmp	r1, r3
   18550:	mov.w	r1, #4294967295	; 0xffffffff
   18554:	it	eq
   18556:	cmpeq	r0, r2
   18558:	mvn.w	r0, #7
   1855c:	beq.n	185ae <__btrfs_cow_block@@Base+0x2f2>
   1855e:	cmp	r3, r1
   18560:	it	eq
   18562:	cmpeq	r2, r0
   18564:	bne.w	18706 <__btrfs_cow_block@@Base+0x44a>
   18568:	orrs.w	r3, r8, r9
   1856c:	bne.w	186e8 <__btrfs_cow_block@@Base+0x42c>
   18570:	b.n	185b6 <__btrfs_cow_block@@Base+0x2fa>
   18572:	movs	r3, #0
   18574:	b.n	18450 <__btrfs_cow_block@@Base+0x194>
   18576:	movs	r2, #1
   18578:	movs	r3, #0
   1857a:	strd	r2, r3, [sp, #56]	; 0x38
   1857e:	mov.w	r1, #4294967295	; 0xffffffff
   18582:	ldr.w	r3, [r4, #451]	; 0x1c3
   18586:	mvn.w	r0, #7
   1858a:	ldr.w	r2, [r4, #447]	; 0x1bf
   1858e:	cmp	r3, r1
   18590:	it	eq
   18592:	cmpeq	r2, r0
   18594:	beq.n	1859e <__btrfs_cow_block@@Base+0x2e2>
   18596:	ldr.w	r3, [r5, #156]	; 0x9c
   1859a:	lsrs	r3, r3, #24
   1859c:	bne.n	185aa <__btrfs_cow_block@@Base+0x2ee>
   1859e:	mov.w	r2, #256	; 0x100
   185a2:	movs	r3, #0
   185a4:	strd	r2, r3, [sp, #64]	; 0x40
   185a8:	b.n	184f2 <__btrfs_cow_block@@Base+0x236>
   185aa:	movs	r2, #0
   185ac:	b.n	185a2 <__btrfs_cow_block@@Base+0x2e6>
   185ae:	orrs.w	r3, r8, r9
   185b2:	bne.w	186dc <__btrfs_cow_block@@Base+0x420>
   185b6:	movs	r3, #1
   185b8:	mov	r2, r5
   185ba:	mov	r1, r4
   185bc:	mov	r0, sl
   185be:	bl	20920 <btrfs_inc_ref@@Base>
   185c2:	ldr.w	r8, [pc, #660]	; 18858 <__btrfs_cow_block@@Base+0x59c>
   185c6:	ldr.w	r9, [pc, #660]	; 1885c <__btrfs_cow_block@@Base+0x5a0>
   185ca:	movw	r2, #259	; 0x103
   185ce:	add	r8, pc
   185d0:	add.w	r8, r8, #176	; 0xb0
   185d4:	add	r9, pc
   185d6:	mov	r1, r8
   185d8:	mov	r3, r0
   185da:	mov	r0, r9
   185dc:	bl	17a14 <rb_free_nodes@@Base+0x116>
   185e0:	ldr.w	r3, [r4, #451]	; 0x1c3
   185e4:	ldr.w	r2, [r4, #447]	; 0x1bf
   185e8:	mov.w	r1, #4294967295	; 0xffffffff
   185ec:	cmp	r3, r1
   185ee:	mvn.w	r0, #7
   185f2:	it	eq
   185f4:	cmpeq	r2, r0
   185f6:	bne.n	1862c <__btrfs_cow_block@@Base+0x370>
   185f8:	movs	r3, #0
   185fa:	mov	r2, r5
   185fc:	mov	r1, r4
   185fe:	mov	r0, sl
   18600:	bl	2092e <btrfs_dec_ref@@Base>
   18604:	mov.w	r2, #264	; 0x108
   18608:	mov	r1, r8
   1860a:	mov	r3, r0
   1860c:	mov	r0, r9
   1860e:	bl	17a14 <rb_free_nodes@@Base+0x116>
   18612:	movs	r3, #1
   18614:	mov	r2, r6
   18616:	mov	r1, r4
   18618:	mov	r0, sl
   1861a:	bl	20920 <btrfs_inc_ref@@Base>
   1861e:	mov.w	r2, #266	; 0x10a
   18622:	mov	r1, r8
   18624:	mov	r3, r0
   18626:	mov	r0, r9
   18628:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1862c:	mov.w	r2, #256	; 0x100
   18630:	movs	r3, #0
   18632:	strd	r2, r3, [sp, #8]
   18636:	mov	r0, sl
   18638:	ldrb.w	r3, [r5, #196]	; 0xc4
   1863c:	str	r3, [sp, #0]
   1863e:	ldrd	r2, r3, [r5, #40]	; 0x28
   18642:	bl	2073c <btrfs_set_block_flags@@Base>
   18646:	ldr	r1, [pc, #536]	; (18860 <__btrfs_cow_block@@Base+0x5a4>)
   18648:	mov.w	r2, #282	; 0x11a
   1864c:	add	r1, pc
   1864e:	adds	r1, #176	; 0xb0
   18650:	mov	r3, r0
   18652:	ldr	r0, [pc, #528]	; (18864 <__btrfs_cow_block@@Base+0x5a8>)
   18654:	add	r0, pc
   18656:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1865a:	ldr	r3, [r4, #0]
   1865c:	uxtb.w	r8, r7
   18660:	mov.w	r9, #0
   18664:	cmp	r3, r5
   18666:	bne.w	18776 <__btrfs_cow_block@@Base+0x4ba>
   1866a:	str	r6, [r4, #0]
   1866c:	movs	r2, #0
   1866e:	ldr	r3, [r6, #80]	; 0x50
   18670:	adds	r3, #1
   18672:	str	r3, [r6, #80]	; 0x50
   18674:	movs	r3, #0
   18676:	ldr.w	r0, [r4, #447]	; 0x1bf
   1867a:	ldr.w	r1, [r4, #451]	; 0x1c3
   1867e:	strd	r2, r3, [sp, #32]
   18682:	strd	r2, r3, [sp, #8]
   18686:	ldr	r3, [r5, #76]	; 0x4c
   18688:	strd	r0, r1, [sp, #16]
   1868c:	mov	r1, r4
   1868e:	mov	r0, sl
   18690:	strd	r8, r9, [sp, #24]
   18694:	str	r3, [sp, #0]
   18696:	movs	r3, #0
   18698:	str	r3, [sp, #4]
   1869a:	ldrd	r2, r3, [r5, #40]	; 0x28
   1869e:	bl	20c4c <btrfs_free_extent@@Base>
   186a2:	mov	r0, r5
   186a4:	bl	16c20 <free_extent_buffer@@Base>
   186a8:	mov	r0, r4
   186aa:	bl	17e94 <add_root_to_dirty_list@@Base>
   186ae:	ldr	r2, [r5, #68]	; 0x44
   186b0:	add.w	r3, r5, #68	; 0x44
   186b4:	cmp	r3, r2
   186b6:	beq.n	186c8 <__btrfs_cow_block@@Base+0x40c>
   186b8:	ldr	r1, [r5, #72]	; 0x48
   186ba:	mov	r0, r5
   186bc:	str	r1, [r2, #4]
   186be:	str	r2, [r1, #0]
   186c0:	strd	r3, r3, [r5, #68]	; 0x44
   186c4:	bl	16c20 <free_extent_buffer@@Base>
   186c8:	mov	r0, r5
   186ca:	bl	16c20 <free_extent_buffer@@Base>
   186ce:	mov	r0, r6
   186d0:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   186d4:	ldr	r3, [sp, #52]	; 0x34
   186d6:	movs	r0, #0
   186d8:	str	r6, [r3, #0]
   186da:	b.n	1838c <__btrfs_cow_block@@Base+0xd0>
   186dc:	ldrd	r2, r3, [sp, #40]	; 0x28
   186e0:	cmp	r3, r1
   186e2:	it	eq
   186e4:	cmpeq	r2, r0
   186e6:	bne.n	18706 <__btrfs_cow_block@@Base+0x44a>
   186e8:	movs	r3, #1
   186ea:	mov	r2, r6
   186ec:	mov	r1, r4
   186ee:	mov	r0, sl
   186f0:	bl	20920 <btrfs_inc_ref@@Base>
   186f4:	ldr	r1, [pc, #368]	; (18868 <__btrfs_cow_block@@Base+0x5ac>)
   186f6:	mov.w	r2, #276	; 0x114
   186fa:	add	r1, pc
   186fc:	adds	r1, #176	; 0xb0
   186fe:	mov	r3, r0
   18700:	ldr	r0, [pc, #360]	; (1886c <__btrfs_cow_block@@Base+0x5b0>)
   18702:	add	r0, pc
   18704:	b.n	18656 <__btrfs_cow_block@@Base+0x39a>
   18706:	movs	r3, #0
   18708:	b.n	186ea <__btrfs_cow_block@@Base+0x42e>
   1870a:	orrs.w	r3, r8, r9
   1870e:	beq.n	1876e <__btrfs_cow_block@@Base+0x4b2>
   18710:	ldr.w	r3, [r4, #451]	; 0x1c3
   18714:	mov.w	r1, #4294967295	; 0xffffffff
   18718:	ldr.w	r2, [r4, #447]	; 0x1bf
   1871c:	mvn.w	r0, #7
   18720:	cmp	r3, r1
   18722:	mov	r1, r4
   18724:	it	eq
   18726:	cmpeq	r2, r0
   18728:	mov	r2, r6
   1872a:	mov	r0, sl
   1872c:	ldr.w	r9, [pc, #320]	; 18870 <__btrfs_cow_block@@Base+0x5b4>
   18730:	ite	eq
   18732:	moveq	r3, #1
   18734:	movne	r3, #0
   18736:	bl	20920 <btrfs_inc_ref@@Base>
   1873a:	ldr.w	r8, [pc, #312]	; 18874 <__btrfs_cow_block@@Base+0x5b8>
   1873e:	add	r9, pc
   18740:	movw	r2, #291	; 0x123
   18744:	add.w	r9, r9, #176	; 0xb0
   18748:	add	r8, pc
   1874a:	mov	r1, r9
   1874c:	mov	r3, r0
   1874e:	mov	r0, r8
   18750:	bl	17a14 <rb_free_nodes@@Base+0x116>
   18754:	movs	r3, #1
   18756:	mov	r2, r5
   18758:	mov	r1, r4
   1875a:	mov	r0, sl
   1875c:	bl	2092e <btrfs_dec_ref@@Base>
   18760:	movw	r2, #293	; 0x125
   18764:	mov	r1, r9
   18766:	mov	r3, r0
   18768:	mov	r0, r8
   1876a:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1876e:	mov	r0, r5
   18770:	bl	1d50c <clean_tree_block@@Base>
   18774:	b.n	1865a <__btrfs_cow_block@@Base+0x39e>
   18776:	ldr	r3, [sp, #48]	; 0x30
   18778:	add.w	fp, fp, fp, lsl #5
   1877c:	ldrd	r1, r2, [r6, #40]	; 0x28
   18780:	add	r3, fp
   18782:	ldr	r7, [pc, #244]	; (18878 <__btrfs_cow_block@@Base+0x5bc>)
   18784:	add.w	fp, r3, #197	; 0xc5
   18788:	ldr	r0, [pc, #240]	; (1887c <__btrfs_cow_block@@Base+0x5c0>)
   1878a:	str.w	r1, [r3, #214]	; 0xd6
   1878e:	add	r7, pc
   18790:	str.w	r2, [r3, #218]	; 0xda
   18794:	adds	r7, #158	; 0x9e
   18796:	ldrd	r2, r3, [sl, #8]
   1879a:	add	r0, pc
   1879c:	mov	r1, r7
   1879e:	orrs	r3, r2
   187a0:	mov.w	r2, #358	; 0x166
   187a4:	ite	eq
   187a6:	moveq	r3, #1
   187a8:	movne	r3, #0
   187aa:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   187ae:	ldrd	r2, r3, [sl, #8]
   187b2:	ldr	r0, [sp, #48]	; 0x30
   187b4:	str.w	r2, [fp, #25]
   187b8:	str.w	r3, [fp, #29]
   187bc:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   187c0:	ldr	r3, [sp, #48]	; 0x30
   187c2:	ldr.w	r0, [r3, #176]	; 0xb0
   187c6:	ldr.w	r1, [r3, #180]	; 0xb4
   187ca:	ldrd	r2, r3, [sl, #8]
   187ce:	cmp	r3, r1
   187d0:	mov	r1, r7
   187d2:	it	eq
   187d4:	cmpeq	r2, r0
   187d6:	ldr	r0, [pc, #168]	; (18880 <__btrfs_cow_block@@Base+0x5c4>)
   187d8:	mov.w	r2, #362	; 0x16a
   187dc:	ite	ne
   187de:	movne	r3, #1
   187e0:	moveq	r3, #0
   187e2:	add	r0, pc
   187e4:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   187e8:	ldr.w	r0, [r4, #447]	; 0x1bf
   187ec:	ldr.w	r1, [r4, #451]	; 0x1c3
   187f0:	movs	r2, #0
   187f2:	movs	r3, #0
   187f4:	strd	r2, r3, [sp, #32]
   187f8:	strd	r2, r3, [sp, #8]
   187fc:	ldr	r3, [r5, #76]	; 0x4c
   187fe:	strd	r0, r1, [sp, #16]
   18802:	mov	r1, r4
   18804:	mov	r0, sl
   18806:	strd	r8, r9, [sp, #24]
   1880a:	str	r3, [sp, #0]
   1880c:	movs	r3, #0
   1880e:	str	r3, [sp, #4]
   18810:	ldrd	r2, r3, [r5, #40]	; 0x28
   18814:	bl	20c4c <btrfs_free_extent@@Base>
   18818:	b.n	186ae <__btrfs_cow_block@@Base+0x3f2>
   1881a:	add	sp, #100	; 0x64
   1881c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18820:	ldmia	r2!, {r3, r4, r5, r7}
   18822:	movs	r4, r0
   18824:	lsls	r4, r4, #8
   18826:	movs	r0, r0
   18828:	ldr	r3, [pc, #192]	; (188ec <btrfs_cow_block@@Base+0x68>)
   1882a:	movs	r2, r0
   1882c:	add	r8, pc
   1882e:	movs	r2, r0
   18830:	ldr	r3, [pc, #0]	; (18834 <__btrfs_cow_block@@Base+0x578>)
   18832:	movs	r2, r0
   18834:	cmp	r0, r3
   18836:	movs	r2, r0
   18838:	ldmia	r1!, {r2, r4, r5, r6, r7}
   1883a:	movs	r4, r0
   1883c:	ldr	r1, [pc, #928]	; (18be0 <btrfs_bin_search@@Base+0x58>)
   1883e:	movs	r2, r0
   18840:	add	r5, r6
   18842:	movs	r2, r0
   18844:	ldr	r1, [pc, #480]	; (18a28 <btrfs_check_node@@Base+0x8>)
   18846:	movs	r2, r0
   18848:	movs	r2, #97	; 0x61
   1884a:	movs	r2, r0
   1884c:	ldrsb	r2, [r7, r1]
   1884e:	movs	r2, r0
   18850:	ldr	r1, [pc, #88]	; (188ac <btrfs_cow_block@@Base+0x28>)
   18852:	movs	r2, r0
   18854:	bics	r7, r6
   18856:	movs	r2, r0
   18858:	ldr	r0, [pc, #456]	; (18a24 <btrfs_check_node@@Base+0x4>)
   1885a:	movs	r2, r0
   1885c:	movs	r1, #95	; 0x5f
   1885e:	movs	r2, r0
   18860:	blxns	lr
   18862:	movs	r2, r0
   18864:	movs	r0, #223	; 0xdf
   18866:	movs	r2, r0
   18868:	bx	r8
   1886a:	movs	r2, r0
   1886c:	movs	r0, #49	; 0x31
   1886e:	movs	r2, r0
   18870:	bx	r0
   18872:	movs	r2, r0
   18874:	subs	r3, r5, #7
   18876:	movs	r2, r0
   18878:	mov	sl, r6
   1887a:	movs	r2, r0
   1887c:	subs	r7, #180	; 0xb4
   1887e:	movs	r2, r0
   18880:	adcs	r2, r2
   18882:	movs	r2, r0

00018884 <btrfs_cow_block@@Base>:
   18884:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18888:	mov	r4, r2
   1888a:	ldr.w	r2, [r1, #464]	; 0x1d0
   1888e:	mov	r6, r0
   18890:	ldrd	r8, r9, [r0, #8]
   18894:	mov	r5, r1
   18896:	sub	sp, #24
   18898:	mov	r7, r3
   1889a:	ldrd	r0, r1, [r2, #232]	; 0xe8
   1889e:	ldr	r3, [pc, #184]	; (18958 <btrfs_cow_block@@Base+0xd4>)
   188a0:	cmp	r9, r1
   188a2:	ldr.w	sl, [sp, #60]	; 0x3c
   188a6:	it	eq
   188a8:	cmpeq	r8, r0
   188aa:	add	r3, pc
   188ac:	beq.n	188da <btrfs_cow_block@@Base+0x56>
   188ae:	ldr	r2, [pc, #172]	; (1895c <btrfs_cow_block@@Base+0xd8>)
   188b0:	ldr	r3, [r3, r2]
   188b2:	ldr	r2, [pc, #172]	; (18960 <btrfs_cow_block@@Base+0xdc>)
   188b4:	strd	r0, r1, [sp, #8]
   188b8:	movs	r1, #1
   188ba:	add	r2, pc
   188bc:	strd	r8, r9, [sp]
   188c0:	ldr	r0, [r3, #0]
   188c2:	blx	881c <__fprintf_chk@plt+0x4>
   188c6:	ldr	r1, [pc, #156]	; (18964 <btrfs_cow_block@@Base+0xe0>)
   188c8:	ldr	r0, [pc, #156]	; (18968 <btrfs_cow_block@@Base+0xe4>)
   188ca:	movs	r3, #1
   188cc:	add	r1, pc
   188ce:	movw	r2, #407	; 0x197
   188d2:	adds	r1, #195	; 0xc3
   188d4:	add	r0, pc
   188d6:	bl	17a1e <rb_free_nodes@@Base+0x120>
   188da:	ldrd	r2, r3, [r6, #8]
   188de:	ldr.w	r1, [r4, #180]	; 0xb4
   188e2:	ldr.w	r0, [r4, #176]	; 0xb0
   188e6:	cmp	r1, r3
   188e8:	it	eq
   188ea:	cmpeq	r0, r2
   188ec:	bne.n	1892e <btrfs_cow_block@@Base+0xaa>
   188ee:	ldr.w	lr, [r4, #152]	; 0x98
   188f2:	mov.w	ip, #0
   188f6:	mov	r3, ip
   188f8:	and.w	r2, lr, #1
   188fc:	orrs	r3, r2
   188fe:	bne.n	1892e <btrfs_cow_block@@Base+0xaa>
   18900:	ldr.w	r3, [r5, #451]	; 0x1c3
   18904:	mov.w	r1, #4294967295	; 0xffffffff
   18908:	ldr.w	r2, [r5, #447]	; 0x1bf
   1890c:	mvn.w	r0, #7
   18910:	cmp	r3, r1
   18912:	it	eq
   18914:	cmpeq	r2, r0
   18916:	beq.n	18922 <btrfs_cow_block@@Base+0x9e>
   18918:	and.w	r2, lr, #2
   1891c:	mov	r3, ip
   1891e:	orrs	r3, r2
   18920:	bne.n	1892e <btrfs_cow_block@@Base+0xaa>
   18922:	movs	r0, #0
   18924:	str.w	r4, [sl]
   18928:	add	sp, #24
   1892a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1892e:	movs	r2, #0
   18930:	movs	r3, #0
   18932:	strd	r2, r3, [sp, #16]
   18936:	mov	r1, r5
   18938:	ldrd	r3, r2, [r4, #40]	; 0x28
   1893c:	mov	r0, r6
   1893e:	str.w	sl, [sp, #4]
   18942:	and.w	r3, r3, #3221225472	; 0xc0000000
   18946:	strd	r3, r2, [sp, #8]
   1894a:	mov	r2, r4
   1894c:	ldr	r3, [sp, #56]	; 0x38
   1894e:	str	r3, [sp, #0]
   18950:	mov	r3, r7
   18952:	bl	182bc <__btrfs_cow_block@@Base>
   18956:	b.n	18928 <btrfs_cow_block@@Base+0xa4>
   18958:	stmia	r4!, {r1, r2, r3, r4, r6, r7}
   1895a:	movs	r4, r0
   1895c:	lsls	r4, r6, #8
   1895e:	movs	r0, r0
   18960:	lsls	r4, r5
   18962:	movs	r2, r0
   18964:	cmp	r4, lr
   18966:	movs	r2, r0
   18968:	strb	r7, [r2, r4]
   1896a:	movs	r2, r0

0001896c <btrfs_comp_cpu_keys@@Base>:
   1896c:	push	{r4, r5, lr}
   1896e:	ldr	r3, [r1, #4]
   18970:	ldr	r5, [r0, #4]
   18972:	ldr	r4, [r0, #0]
   18974:	ldr	r2, [r1, #0]
   18976:	cmp	r3, r5
   18978:	it	eq
   1897a:	cmpeq	r2, r4
   1897c:	bcc.n	189be <btrfs_comp_cpu_keys@@Base+0x52>
   1897e:	cmp	r5, r3
   18980:	it	eq
   18982:	cmpeq	r4, r2
   18984:	bcc.n	189b8 <btrfs_comp_cpu_keys@@Base+0x4c>
   18986:	ldrb	r2, [r0, #8]
   18988:	ldrb	r3, [r1, #8]
   1898a:	cmp	r2, r3
   1898c:	bhi.n	189be <btrfs_comp_cpu_keys@@Base+0x52>
   1898e:	bcc.n	189b8 <btrfs_comp_cpu_keys@@Base+0x4c>
   18990:	ldr.w	r5, [r0, #13]
   18994:	ldr.w	r3, [r1, #13]
   18998:	ldr.w	r4, [r0, #9]
   1899c:	ldr.w	r2, [r1, #9]
   189a0:	cmp	r3, r5
   189a2:	it	eq
   189a4:	cmpeq	r2, r4
   189a6:	bcc.n	189be <btrfs_comp_cpu_keys@@Base+0x52>
   189a8:	cmp	r5, r3
   189aa:	it	eq
   189ac:	cmpeq	r4, r2
   189ae:	ite	cc
   189b0:	movcc.w	r0, #4294967295	; 0xffffffff
   189b4:	movcs	r0, #0
   189b6:	pop	{r4, r5, pc}
   189b8:	mov.w	r0, #4294967295	; 0xffffffff
   189bc:	b.n	189b6 <btrfs_comp_cpu_keys@@Base+0x4a>
   189be:	movs	r0, #1
   189c0:	b.n	189b6 <btrfs_comp_cpu_keys@@Base+0x4a>
   189c2:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   189c4:	ldr	r2, [pc, #76]	; (18a14 <btrfs_comp_cpu_keys@@Base+0xa8>)
   189c6:	ldr	r3, [pc, #80]	; (18a18 <btrfs_comp_cpu_keys@@Base+0xac>)
   189c8:	add	r2, pc
   189ca:	ldr	r3, [r2, r3]
   189cc:	ldr	r3, [r3, #0]
   189ce:	str	r3, [sp, #20]
   189d0:	mov.w	r3, #0
   189d4:	ldr.w	r3, [r0, #13]
   189d8:	ldr.w	r2, [r0, #9]
   189dc:	str.w	r3, [sp, #13]
   189e0:	ldrb	r3, [r0, #8]
   189e2:	str.w	r2, [sp, #9]
   189e6:	ldr	r2, [r0, #0]
   189e8:	strb.w	r3, [sp, #8]
   189ec:	ldr	r3, [r0, #4]
   189ee:	mov	r0, sp
   189f0:	strd	r2, r3, [sp]
   189f4:	bl	1896c <btrfs_comp_cpu_keys@@Base>
   189f8:	ldr	r2, [pc, #32]	; (18a1c <btrfs_comp_cpu_keys@@Base+0xb0>)
   189fa:	ldr	r3, [pc, #28]	; (18a18 <btrfs_comp_cpu_keys@@Base+0xac>)
   189fc:	add	r2, pc
   189fe:	ldr	r3, [r2, r3]
   18a00:	ldr	r2, [r3, #0]
   18a02:	ldr	r3, [sp, #20]
   18a04:	eors	r2, r3
   18a06:	beq.n	18a0c <btrfs_comp_cpu_keys@@Base+0xa0>
   18a08:	blx	84cc <__stack_chk_fail@plt>
   18a0c:	add	sp, #28
   18a0e:	ldr.w	pc, [sp], #4
   18a12:	nop
   18a14:	stmia	r3!, {r6, r7}
   18a16:	movs	r4, r0
   18a18:	lsls	r4, r4, #8
   18a1a:	movs	r0, r0
   18a1c:	stmia	r3!, {r2, r3, r7}
   18a1e:	movs	r4, r0

00018a20 <btrfs_check_node@@Base>:
   18a20:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18a24:	mov	r4, r2
   18a26:	ldr	r2, [pc, #340]	; (18b7c <btrfs_check_node@@Base+0x15c>)
   18a28:	sub	sp, #92	; 0x5c
   18a2a:	ldr	r3, [pc, #340]	; (18b80 <btrfs_check_node@@Base+0x160>)
   18a2c:	mov	r7, r0
   18a2e:	add	r2, pc
   18a30:	ldr.w	r8, [r4, #192]	; 0xc0
   18a34:	mov	r5, r1
   18a36:	ldr	r3, [r2, r3]
   18a38:	ldr	r3, [r3, #0]
   18a3a:	str	r3, [sp, #84]	; 0x54
   18a3c:	mov.w	r3, #0
   18a40:	cmp.w	r8, #0
   18a44:	beq.n	18ae0 <btrfs_check_node@@Base+0xc0>
   18a46:	ldr.w	r2, [r0, #384]	; 0x180
   18a4a:	ldr	r3, [pc, #300]	; (18b78 <btrfs_check_node@@Base+0x158>)
   18a4c:	subs	r2, #101	; 0x65
   18a4e:	umull	r2, r3, r2, r3
   18a52:	cmp.w	r8, r3, lsr #3
   18a56:	bhi.n	18ae0 <btrfs_check_node@@Base+0xc0>
   18a58:	cbnz	r1, 18a76 <btrfs_check_node@@Base+0x56>
   18a5a:	sub.w	sl, r8, #2
   18a5e:	add.w	r9, sp, #44	; 0x2c
   18a62:	add.w	fp, sp, #64	; 0x40
   18a66:	movs	r6, #0
   18a68:	cmp.w	r8, #1
   18a6c:	beq.n	18a72 <btrfs_check_node@@Base+0x52>
   18a6e:	cmp	sl, r6
   18a70:	bhi.n	18a9a <btrfs_check_node@@Base+0x7a>
   18a72:	movs	r6, #0
   18a74:	b.n	18b30 <btrfs_check_node@@Base+0x110>
   18a76:	ldrb	r3, [r1, #8]
   18a78:	cmp	r3, #0
   18a7a:	beq.n	18a5a <btrfs_check_node@@Base+0x3a>
   18a7c:	add	r1, sp, #44	; 0x2c
   18a7e:	movs	r2, #0
   18a80:	mov	r0, r4
   18a82:	str	r1, [sp, #20]
   18a84:	bl	17952 <rb_free_nodes@@Base+0x54>
   18a88:	ldr	r1, [sp, #20]
   18a8a:	movs	r2, #17
   18a8c:	mov	r0, r5
   18a8e:	blx	8464 <memcmp@plt+0x4>
   18a92:	cmp	r0, #0
   18a94:	beq.n	18a5a <btrfs_check_node@@Base+0x3a>
   18a96:	movs	r6, #2
   18a98:	b.n	18ae2 <btrfs_check_node@@Base+0xc2>
   18a9a:	mov	r2, r6
   18a9c:	adds	r6, #1
   18a9e:	mov	r1, r9
   18aa0:	mov	r0, r4
   18aa2:	bl	17952 <rb_free_nodes@@Base+0x54>
   18aa6:	mov	r2, r6
   18aa8:	mov	r1, fp
   18aaa:	mov	r0, r4
   18aac:	bl	17952 <rb_free_nodes@@Base+0x54>
   18ab0:	ldr.w	r3, [sp, #77]	; 0x4d
   18ab4:	ldr.w	r2, [sp, #73]	; 0x49
   18ab8:	add	r1, sp, #24
   18aba:	mov	r0, r9
   18abc:	str.w	r3, [sp, #37]	; 0x25
   18ac0:	ldrb.w	r3, [sp, #72]	; 0x48
   18ac4:	str.w	r2, [sp, #33]	; 0x21
   18ac8:	strb.w	r3, [sp, #32]
   18acc:	ldrd	r2, r3, [sp, #64]	; 0x40
   18ad0:	strd	r2, r3, [sp, #24]
   18ad4:	bl	189c2 <btrfs_comp_cpu_keys@@Base+0x56>
   18ad8:	cmp	r0, #0
   18ada:	blt.n	18a68 <btrfs_check_node@@Base+0x48>
   18adc:	movs	r6, #3
   18ade:	b.n	18ae2 <btrfs_check_node@@Base+0xc2>
   18ae0:	movs	r6, #1
   18ae2:	ldr.w	r3, [r4, #188]	; 0xbc
   18ae6:	ldr.w	r2, [r4, #184]	; 0xb8
   18aea:	cmp	r3, #0
   18aec:	it	eq
   18aee:	cmpeq	r2, #2
   18af0:	bne.n	18b30 <btrfs_check_node@@Base+0x110>
   18af2:	add.w	r8, sp, #33	; 0x21
   18af6:	cbz	r5, 18b44 <btrfs_check_node@@Base+0x124>
   18af8:	ldr.w	r3, [r5, #13]
   18afc:	ldr.w	r2, [r5, #9]
   18b00:	str.w	r3, [r8, #4]
   18b04:	ldrb	r3, [r5, #8]
   18b06:	str.w	r2, [sp, #33]	; 0x21
   18b0a:	ldr	r2, [r5, #0]
   18b0c:	strb.w	r3, [sp, #32]
   18b10:	ldr	r3, [r5, #4]
   18b12:	strd	r2, r3, [sp, #24]
   18b16:	ldrb.w	r3, [r4, #196]	; 0xc4
   18b1a:	add	r1, sp, #24
   18b1c:	mov	r0, r7
   18b1e:	str	r3, [sp, #8]
   18b20:	ldr	r3, [r4, #76]	; 0x4c
   18b22:	str	r3, [sp, #0]
   18b24:	movs	r3, #0
   18b26:	str	r3, [sp, #4]
   18b28:	ldrd	r2, r3, [r4, #40]	; 0x28
   18b2c:	bl	2d5e8 <btrfs_add_corrupt_extent_record@@Base>
   18b30:	ldr	r2, [pc, #80]	; (18b84 <btrfs_check_node@@Base+0x164>)
   18b32:	ldr	r3, [pc, #76]	; (18b80 <btrfs_check_node@@Base+0x160>)
   18b34:	add	r2, pc
   18b36:	ldr	r3, [r2, r3]
   18b38:	ldr	r2, [r3, #0]
   18b3a:	ldr	r3, [sp, #84]	; 0x54
   18b3c:	eors	r2, r3
   18b3e:	beq.n	18b70 <btrfs_check_node@@Base+0x150>
   18b40:	blx	84cc <__stack_chk_fail@plt>
   18b44:	mov	r2, r5
   18b46:	add	r1, sp, #64	; 0x40
   18b48:	mov	r0, r4
   18b4a:	bl	17952 <rb_free_nodes@@Base+0x54>
   18b4e:	ldr.w	r3, [sp, #77]	; 0x4d
   18b52:	ldr.w	r2, [sp, #73]	; 0x49
   18b56:	str.w	r3, [r8, #4]
   18b5a:	ldrb.w	r3, [sp, #72]	; 0x48
   18b5e:	str.w	r2, [sp, #33]	; 0x21
   18b62:	strb.w	r3, [sp, #32]
   18b66:	ldrd	r2, r3, [sp, #64]	; 0x40
   18b6a:	strd	r2, r3, [sp, #24]
   18b6e:	b.n	18b16 <btrfs_check_node@@Base+0xf6>
   18b70:	mov	r0, r6
   18b72:	add	sp, #92	; 0x5c
   18b74:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18b78:	strh	r1, [r4, #30]
   18b7a:	subs	r6, #15
   18b7c:	stmia	r3!, {r1, r3, r4, r6}
   18b7e:	movs	r4, r0
   18b80:	lsls	r4, r4, #8
   18b82:	movs	r0, r0
   18b84:	stmia	r2!, {r2, r4, r6}
   18b86:	movs	r4, r0

00018b88 <btrfs_bin_search@@Base>:
   18b88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   18b8c:	mov	r6, r1
   18b8e:	ldr.w	r5, [r0, #192]	; 0xc0
   18b92:	mov	r7, r3
   18b94:	mov	r9, r2
   18b96:	cbnz	r2, 18bac <btrfs_bin_search@@Base+0x24>
   18b98:	add.w	r8, r0, #96	; 0x60
   18b9c:	mov.w	sl, #25
   18ba0:	cmp	r9, r5
   18ba2:	blt.n	18bde <btrfs_bin_search@@Base+0x56>
   18ba4:	movs	r0, #1
   18ba6:	str.w	r9, [r7]
   18baa:	b.n	18c06 <btrfs_bin_search@@Base+0x7e>
   18bac:	add.w	r8, r0, #96	; 0x60
   18bb0:	mov.w	r9, #0
   18bb4:	cmp	r9, r5
   18bb6:	bge.n	18ba4 <btrfs_bin_search@@Base+0x1c>
   18bb8:	add.w	r4, r9, r5
   18bbc:	mov	r1, r6
   18bbe:	add.w	r4, r4, r4, lsr #31
   18bc2:	asrs	r4, r4, #1
   18bc4:	add.w	r0, r4, r4, lsl #5
   18bc8:	adds	r0, #101	; 0x65
   18bca:	add	r0, r8
   18bcc:	bl	189c2 <btrfs_comp_cpu_keys@@Base+0x56>
   18bd0:	cmp	r0, #0
   18bd2:	bge.n	18c0a <btrfs_bin_search@@Base+0x82>
   18bd4:	add.w	r9, r4, #1
   18bd8:	mov	r4, r5
   18bda:	mov	r5, r4
   18bdc:	b.n	18bb4 <btrfs_bin_search@@Base+0x2c>
   18bde:	add.w	r4, r9, r5
   18be2:	mov	r1, r6
   18be4:	add.w	r4, r4, r4, lsr #31
   18be8:	asrs	r4, r4, #1
   18bea:	mla	r0, sl, r4, r8
   18bee:	adds	r0, #101	; 0x65
   18bf0:	bl	189c2 <btrfs_comp_cpu_keys@@Base+0x56>
   18bf4:	cmp	r0, #0
   18bf6:	bge.n	18c02 <btrfs_bin_search@@Base+0x7a>
   18bf8:	add.w	r9, r4, #1
   18bfc:	mov	r4, r5
   18bfe:	mov	r5, r4
   18c00:	b.n	18ba0 <btrfs_bin_search@@Base+0x18>
   18c02:	bne.n	18bfe <btrfs_bin_search@@Base+0x76>
   18c04:	str	r4, [r7, #0]
   18c06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   18c0a:	bne.n	18bda <btrfs_bin_search@@Base+0x52>
   18c0c:	b.n	18c04 <btrfs_bin_search@@Base+0x7c>

00018c0e <read_node_slot@@Base>:
   18c0e:	push	{r4, r5, r6, r7, lr}
   18c10:	subs	r6, r2, #0
   18c12:	sub	sp, #20
   18c14:	mov	r5, r1
   18c16:	blt.n	18c7c <read_node_slot@@Base+0x6e>
   18c18:	ldr.w	r3, [r1, #192]	; 0xc0
   18c1c:	cmp	r6, r3
   18c1e:	bcs.n	18c7c <read_node_slot@@Base+0x6e>
   18c20:	ldrb.w	r7, [r1, #196]	; 0xc4
   18c24:	cbz	r7, 18c7c <read_node_slot@@Base+0x6e>
   18c26:	add.w	r3, r6, r6, lsl #5
   18c2a:	add	r3, r1
   18c2c:	adds	r3, #197	; 0xc5
   18c2e:	mov	r1, r3
   18c30:	ldr.w	r4, [r3, #25]!
   18c34:	ldr.w	r2, [r1, #17]!
   18c38:	ldr	r3, [r3, #4]
   18c3a:	strd	r4, r3, [sp]
   18c3e:	ldr	r3, [r1, #4]
   18c40:	bl	1d684 <read_tree_block@@Base>
   18c44:	mov	r4, r0
   18c46:	bl	179ac <rb_free_nodes@@Base+0xae>
   18c4a:	cbz	r0, 18c76 <read_node_slot@@Base+0x68>
   18c4c:	ldrb.w	r3, [r4, #196]	; 0xc4
   18c50:	subs	r7, #1
   18c52:	cmp	r3, r7
   18c54:	beq.n	18c7e <read_node_slot@@Base+0x70>
   18c56:	str	r3, [sp, #8]
   18c58:	ldrb.w	r3, [r5, #196]	; 0xc4
   18c5c:	ldr	r0, [pc, #36]	; (18c84 <read_node_slot@@Base+0x76>)
   18c5e:	ldr.w	r2, [r5, #144]	; 0x90
   18c62:	add	r0, pc
   18c64:	strd	r6, r3, [sp]
   18c68:	ldr.w	r3, [r5, #148]	; 0x94
   18c6c:	bl	1747c <__btrfs_error@@Base>
   18c70:	mov	r0, r4
   18c72:	bl	16c20 <free_extent_buffer@@Base>
   18c76:	mvn.w	r4, #4
   18c7a:	b.n	18c7e <read_node_slot@@Base+0x70>
   18c7c:	movs	r4, #0
   18c7e:	mov	r0, r4
   18c80:	add	sp, #20
   18c82:	pop	{r4, r5, r6, r7, pc}
   18c84:	subs	r5, #29
   18c86:	movs	r2, r0

00018c88 <reada_for_search@@Base>:
   18c88:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18c8c:	sub	sp, #92	; 0x5c
   18c8e:	ldr	r4, [pc, #452]	; (18e54 <reada_for_search@@Base+0x1cc>)
   18c90:	cmp	r2, #1
   18c92:	str	r1, [sp, #32]
   18c94:	mov	r9, r0
   18c96:	ldr	r1, [pc, #448]	; (18e58 <reada_for_search@@Base+0x1d0>)
   18c98:	add	r4, pc
   18c9a:	ldr	r1, [r4, r1]
   18c9c:	ldr	r1, [r1, #0]
   18c9e:	str	r1, [sp, #84]	; 0x54
   18ca0:	mov.w	r1, #0
   18ca4:	bne.n	18ce2 <reada_for_search@@Base+0x5a>
   18ca6:	ldr	r2, [sp, #32]
   18ca8:	ldr	r2, [r2, #4]
   18caa:	str	r2, [sp, #24]
   18cac:	cbz	r2, 18ce2 <reada_for_search@@Base+0x5a>
   18cae:	ldr	r2, [sp, #32]
   18cb0:	mov	r6, r3
   18cb2:	ldr	r3, [sp, #24]
   18cb4:	ldrsb.w	r2, [r2, #64]	; 0x40
   18cb8:	adds	r3, #96	; 0x60
   18cba:	str	r3, [sp, #36]	; 0x24
   18cbc:	add.w	r3, r6, r6, lsl #5
   18cc0:	str	r2, [sp, #56]	; 0x38
   18cc2:	ldr	r2, [sp, #36]	; 0x24
   18cc4:	add	r3, r2
   18cc6:	ldr.w	sl, [r3, #118]!
   18cca:	ldr.w	fp, [r3, #4]
   18cce:	mov	r2, sl
   18cd0:	ldr.w	r3, [r0, #384]	; 0x180
   18cd4:	str	r3, [sp, #0]
   18cd6:	mov	r3, fp
   18cd8:	bl	1c228 <btrfs_find_tree_block@@Base>
   18cdc:	cbz	r0, 18cf8 <reada_for_search@@Base+0x70>
   18cde:	bl	16c20 <free_extent_buffer@@Base>
   18ce2:	ldr	r2, [pc, #376]	; (18e5c <reada_for_search@@Base+0x1d4>)
   18ce4:	ldr	r3, [pc, #368]	; (18e58 <reada_for_search@@Base+0x1d0>)
   18ce6:	add	r2, pc
   18ce8:	ldr	r3, [r2, r3]
   18cea:	ldr	r2, [r3, #0]
   18cec:	ldr	r3, [sp, #84]	; 0x54
   18cee:	eors	r2, r3
   18cf0:	beq.w	18e4e <reada_for_search@@Base+0x1c6>
   18cf4:	blx	84cc <__stack_chk_fail@plt>
   18cf8:	ldr	r3, [sp, #24]
   18cfa:	movs	r4, #0
   18cfc:	ldr.w	r3, [r3, #192]	; 0xc0
   18d00:	strd	sl, fp, [sp, #8]
   18d04:	str	r0, [sp, #28]
   18d06:	str	r3, [sp, #60]	; 0x3c
   18d08:	movs	r3, #0
   18d0a:	strd	r3, r4, [sp, #16]
   18d0e:	ldr	r3, [sp, #56]	; 0x38
   18d10:	cmp	r3, #0
   18d12:	bge.n	18dae <reada_for_search@@Base+0x126>
   18d14:	cmp	r6, #0
   18d16:	beq.n	18ce2 <reada_for_search@@Base+0x5a>
   18d18:	subs	r6, #1
   18d1a:	ldr	r3, [sp, #32]
   18d1c:	ldrsb.w	r3, [r3, #64]	; 0x40
   18d20:	cmp	r3, #0
   18d22:	blt.n	18dba <reada_for_search@@Base+0x132>
   18d24:	ldr	r2, [sp, #36]	; 0x24
   18d26:	add.w	r3, r6, r6, lsl #5
   18d2a:	adds	r3, #101	; 0x65
   18d2c:	add	r3, r2
   18d2e:	mov	r2, r3
   18d30:	ldr.w	r4, [r2, #17]!
   18d34:	ldr	r5, [r2, #4]
   18d36:	cmp	r5, fp
   18d38:	it	eq
   18d3a:	cmpeq	r4, sl
   18d3c:	bcs.n	18dde <reada_for_search@@Base+0x156>
   18d3e:	subs.w	r2, sl, r4
   18d42:	str	r2, [sp, #40]	; 0x28
   18d44:	sbc.w	r2, fp, r5
   18d48:	str	r2, [sp, #44]	; 0x2c
   18d4a:	ldrd	r7, r8, [sp, #40]	; 0x28
   18d4e:	movs	r2, #0
   18d50:	mov.w	r1, #32768	; 0x8000
   18d54:	cmp	r2, r8
   18d56:	it	eq
   18d58:	cmpeq	r1, r7
   18d5a:	bcs.n	18e0a <reada_for_search@@Base+0x182>
   18d5c:	ldrd	r1, r2, [sp, #8]
   18d60:	cmp	r2, r5
   18d62:	it	eq
   18d64:	cmpeq	r1, r4
   18d66:	bcc.n	18dea <reada_for_search@@Base+0x162>
   18d68:	ldr	r3, [sp, #28]
   18d6a:	adds	r3, #1
   18d6c:	str	r3, [sp, #28]
   18d6e:	ldr	r3, [sp, #32]
   18d70:	ldrsb.w	r3, [r3, #64]	; 0x40
   18d74:	cmp	r3, #1
   18d76:	bgt.n	18e32 <reada_for_search@@Base+0x1aa>
   18d78:	ldrd	r0, r1, [sp, #16]
   18d7c:	movs	r3, #0
   18d7e:	mov.w	r2, #262144	; 0x40000
   18d82:	cmp	r3, r1
   18d84:	it	eq
   18d86:	cmpeq	r2, r0
   18d88:	bcc.n	18ce2 <reada_for_search@@Base+0x5a>
   18d8a:	ldr	r3, [sp, #28]
   18d8c:	cmp	r3, #32
   18d8e:	bhi.n	18ce2 <reada_for_search@@Base+0x5a>
   18d90:	cmp	r5, fp
   18d92:	ldrd	r2, r3, [sp, #8]
   18d96:	it	eq
   18d98:	cmpeq	r4, sl
   18d9a:	itt	cc
   18d9c:	movcc	sl, r4
   18d9e:	movcc	fp, r5
   18da0:	cmp	r3, r5
   18da2:	it	eq
   18da4:	cmpeq	r2, r4
   18da6:	bcs.n	18d0e <reada_for_search@@Base+0x86>
   18da8:	strd	r4, r5, [sp, #8]
   18dac:	b.n	18d0e <reada_for_search@@Base+0x86>
   18dae:	beq.n	18d1a <reada_for_search@@Base+0x92>
   18db0:	ldr	r3, [sp, #60]	; 0x3c
   18db2:	adds	r6, #1
   18db4:	cmp	r6, r3
   18db6:	bcc.n	18d1a <reada_for_search@@Base+0x92>
   18db8:	b.n	18ce2 <reada_for_search@@Base+0x5a>
   18dba:	ldrd	r3, r4, [sp, #128]	; 0x80
   18dbe:	orrs	r3, r4
   18dc0:	beq.n	18d24 <reada_for_search@@Base+0x9c>
   18dc2:	ldr	r0, [sp, #24]
   18dc4:	add	r1, sp, #64	; 0x40
   18dc6:	mov	r2, r6
   18dc8:	bl	17952 <rb_free_nodes@@Base+0x54>
   18dcc:	ldrd	r2, r3, [sp, #64]	; 0x40
   18dd0:	ldrd	r0, r1, [sp, #128]	; 0x80
   18dd4:	cmp	r1, r3
   18dd6:	it	eq
   18dd8:	cmpeq	r0, r2
   18dda:	beq.n	18d24 <reada_for_search@@Base+0x9c>
   18ddc:	b.n	18ce2 <reada_for_search@@Base+0x5a>
   18dde:	ldrd	r1, r2, [sp, #8]
   18de2:	cmp	r2, r5
   18de4:	it	eq
   18de6:	cmpeq	r1, r4
   18de8:	bcs.n	18e0a <reada_for_search@@Base+0x182>
   18dea:	ldr	r2, [sp, #8]
   18dec:	mov.w	r1, #32768	; 0x8000
   18df0:	subs	r2, r4, r2
   18df2:	str	r2, [sp, #48]	; 0x30
   18df4:	ldr	r2, [sp, #12]
   18df6:	sbc.w	r2, r5, r2
   18dfa:	str	r2, [sp, #52]	; 0x34
   18dfc:	ldrd	r7, r8, [sp, #48]	; 0x30
   18e00:	movs	r2, #0
   18e02:	cmp	r2, r8
   18e04:	it	eq
   18e06:	cmpeq	r1, r7
   18e08:	bcc.n	18d68 <reada_for_search@@Base+0xe0>
   18e0a:	ldr.w	r2, [r3, #25]!
   18e0e:	mov	r0, r9
   18e10:	ldr	r3, [r3, #4]
   18e12:	strd	r2, r3, [sp]
   18e16:	mov	r2, r4
   18e18:	mov	r3, r5
   18e1a:	bl	1d534 <readahead_tree_block@@Base>
   18e1e:	ldrd	r1, r2, [sp, #16]
   18e22:	ldr.w	r3, [r9, #384]	; 0x180
   18e26:	adds	r1, r1, r3
   18e28:	adc.w	r2, r2, #0
   18e2c:	strd	r1, r2, [sp, #16]
   18e30:	b.n	18d68 <reada_for_search@@Base+0xe0>
   18e32:	ldrd	r0, r1, [sp, #16]
   18e36:	movs	r3, #0
   18e38:	mov.w	r2, #1048576	; 0x100000
   18e3c:	cmp	r3, r1
   18e3e:	it	eq
   18e40:	cmpeq	r2, r0
   18e42:	bcc.w	18ce2 <reada_for_search@@Base+0x5a>
   18e46:	ldr	r3, [sp, #28]
   18e48:	cmp	r3, #129	; 0x81
   18e4a:	bne.n	18d90 <reada_for_search@@Base+0x108>
   18e4c:	b.n	18ce2 <reada_for_search@@Base+0x5a>
   18e4e:	add	sp, #92	; 0x5c
   18e50:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e54:	stmia	r0!, {r4, r5, r6, r7}
   18e56:	movs	r4, r0
   18e58:	lsls	r4, r4, #8
   18e5a:	movs	r0, r0
   18e5c:	stmia	r0!, {r1, r5, r7}
   18e5e:	movs	r4, r0

00018e60 <btrfs_fixup_low_keys@@Base>:
   18e60:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   18e64:	add.w	r4, r1, r3, lsl #2
   18e68:	mov	r6, r2
   18e6a:	mov	r5, r3
   18e6c:	cmp	r5, #7
   18e6e:	ble.n	18e74 <btrfs_fixup_low_keys@@Base+0x14>
   18e70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   18e74:	ldr	r0, [r4, #0]
   18e76:	mov	r8, r4
   18e78:	ldr	r7, [r4, #32]
   18e7a:	cmp	r0, #0
   18e7c:	beq.n	18e70 <btrfs_fixup_low_keys@@Base+0x10>
   18e7e:	mov	r2, r7
   18e80:	mov	r1, r6
   18e82:	bl	1792e <rb_free_nodes@@Base+0x30>
   18e86:	ldr.w	r0, [r8]
   18e8a:	adds	r4, #4
   18e8c:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   18e90:	cmp	r7, #0
   18e92:	bne.n	18e70 <btrfs_fixup_low_keys@@Base+0x10>
   18e94:	adds	r5, #1
   18e96:	b.n	18e6c <btrfs_fixup_low_keys@@Base+0xc>

00018e98 <btrfs_set_item_key_safe@@Base>:
   18e98:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   18e9c:	mov	r5, r2
   18e9e:	ldr	r2, [pc, #188]	; (18f5c <btrfs_set_item_key_safe@@Base+0xc4>)
   18ea0:	sub	sp, #28
   18ea2:	ldr	r3, [pc, #188]	; (18f60 <btrfs_set_item_key_safe@@Base+0xc8>)
   18ea4:	mov	r9, r0
   18ea6:	add	r2, pc
   18ea8:	ldr	r4, [r1, #32]
   18eaa:	ldr.w	r8, [r1]
   18eae:	mov	r7, r1
   18eb0:	ldr	r3, [r2, r3]
   18eb2:	cmp	r4, #0
   18eb4:	mov	r6, sp
   18eb6:	ldr	r3, [r3, #0]
   18eb8:	str	r3, [sp, #20]
   18eba:	mov.w	r3, #0
   18ebe:	bgt.n	18efe <btrfs_set_item_key_safe@@Base+0x66>
   18ec0:	ldr.w	r3, [r8, #192]	; 0xc0
   18ec4:	subs	r3, #1
   18ec6:	cmp	r3, r4
   18ec8:	bhi.n	18f2c <btrfs_set_item_key_safe@@Base+0x94>
   18eca:	ldr.w	r3, [r5, #13]
   18ece:	mov	r0, r8
   18ed0:	ldr.w	r2, [r5, #9]
   18ed4:	mov	r1, r6
   18ed6:	str.w	r3, [sp, #13]
   18eda:	ldrb	r3, [r5, #8]
   18edc:	str.w	r2, [sp, #9]
   18ee0:	ldr	r2, [r5, #0]
   18ee2:	strb.w	r3, [sp, #8]
   18ee6:	ldr	r3, [r5, #4]
   18ee8:	strd	r2, r3, [sp]
   18eec:	mov	r2, r4
   18eee:	bl	1793a <rb_free_nodes@@Base+0x3c>
   18ef2:	mov	r0, r8
   18ef4:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   18ef8:	cbz	r4, 18f44 <btrfs_set_item_key_safe@@Base+0xac>
   18efa:	movs	r4, #0
   18efc:	b.n	18f18 <btrfs_set_item_key_safe@@Base+0x80>
   18efe:	subs	r2, r4, #1
   18f00:	mov	r1, r6
   18f02:	mov	r0, r8
   18f04:	bl	17946 <rb_free_nodes@@Base+0x48>
   18f08:	mov	r1, r5
   18f0a:	mov	r0, r6
   18f0c:	bl	189c2 <btrfs_comp_cpu_keys@@Base+0x56>
   18f10:	cmp	r0, #0
   18f12:	blt.n	18ec0 <btrfs_set_item_key_safe@@Base+0x28>
   18f14:	mov.w	r4, #4294967295	; 0xffffffff
   18f18:	ldr	r2, [pc, #72]	; (18f64 <btrfs_set_item_key_safe@@Base+0xcc>)
   18f1a:	ldr	r3, [pc, #68]	; (18f60 <btrfs_set_item_key_safe@@Base+0xc8>)
   18f1c:	add	r2, pc
   18f1e:	ldr	r3, [r2, r3]
   18f20:	ldr	r2, [r3, #0]
   18f22:	ldr	r3, [sp, #20]
   18f24:	eors	r2, r3
   18f26:	beq.n	18f52 <btrfs_set_item_key_safe@@Base+0xba>
   18f28:	blx	84cc <__stack_chk_fail@plt>
   18f2c:	adds	r2, r4, #1
   18f2e:	mov	r1, r6
   18f30:	mov	r0, r8
   18f32:	bl	17946 <rb_free_nodes@@Base+0x48>
   18f36:	mov	r1, r5
   18f38:	mov	r0, r6
   18f3a:	bl	189c2 <btrfs_comp_cpu_keys@@Base+0x56>
   18f3e:	cmp	r0, #0
   18f40:	bgt.n	18eca <btrfs_set_item_key_safe@@Base+0x32>
   18f42:	b.n	18f14 <btrfs_set_item_key_safe@@Base+0x7c>
   18f44:	movs	r3, #1
   18f46:	mov	r2, r6
   18f48:	mov	r1, r7
   18f4a:	mov	r0, r9
   18f4c:	bl	18e60 <btrfs_fixup_low_keys@@Base>
   18f50:	b.n	18f18 <btrfs_set_item_key_safe@@Base+0x80>
   18f52:	mov	r0, r4
   18f54:	add	sp, #28
   18f56:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   18f5a:	nop
   18f5c:	bkpt	0x00e2
   18f5e:	movs	r4, r0
   18f60:	lsls	r4, r4, #8
   18f62:	movs	r0, r0
   18f64:	bkpt	0x006c
   18f66:	movs	r4, r0

00018f68 <btrfs_set_item_key_unsafe@@Base>:
   18f68:	push	{r4, r5, r6, r7, lr}
   18f6a:	mov	r4, r1
   18f6c:	ldr	r1, [pc, #108]	; (18fdc <btrfs_set_item_key_unsafe@@Base+0x74>)
   18f6e:	sub	sp, #36	; 0x24
   18f70:	ldr	r3, [pc, #108]	; (18fe0 <btrfs_set_item_key_unsafe@@Base+0x78>)
   18f72:	add	r6, sp, #8
   18f74:	add	r1, pc
   18f76:	ldr	r7, [r4, #32]
   18f78:	mov	r5, r0
   18f7a:	ldr	r0, [r4, #0]
   18f7c:	ldr	r3, [r1, r3]
   18f7e:	ldr	r3, [r3, #0]
   18f80:	str	r3, [sp, #28]
   18f82:	mov.w	r3, #0
   18f86:	ldr.w	r3, [r2, #13]
   18f8a:	ldr.w	r1, [r2, #9]
   18f8e:	str	r0, [sp, #4]
   18f90:	str.w	r3, [sp, #21]
   18f94:	ldrb	r3, [r2, #8]
   18f96:	str.w	r1, [sp, #17]
   18f9a:	ldr	r1, [r2, #0]
   18f9c:	strb.w	r3, [sp, #16]
   18fa0:	ldr	r3, [r2, #4]
   18fa2:	mov	r2, r7
   18fa4:	strd	r1, r3, [sp, #8]
   18fa8:	mov	r1, r6
   18faa:	bl	1793a <rb_free_nodes@@Base+0x3c>
   18fae:	ldr	r0, [sp, #4]
   18fb0:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   18fb4:	cbnz	r7, 18fc2 <btrfs_set_item_key_unsafe@@Base+0x5a>
   18fb6:	movs	r3, #1
   18fb8:	mov	r2, r6
   18fba:	mov	r1, r4
   18fbc:	mov	r0, r5
   18fbe:	bl	18e60 <btrfs_fixup_low_keys@@Base>
   18fc2:	ldr	r2, [pc, #32]	; (18fe4 <btrfs_set_item_key_unsafe@@Base+0x7c>)
   18fc4:	ldr	r3, [pc, #24]	; (18fe0 <btrfs_set_item_key_unsafe@@Base+0x78>)
   18fc6:	add	r2, pc
   18fc8:	ldr	r3, [r2, r3]
   18fca:	ldr	r2, [r3, #0]
   18fcc:	ldr	r3, [sp, #28]
   18fce:	eors	r2, r3
   18fd0:	beq.n	18fd6 <btrfs_set_item_key_unsafe@@Base+0x6e>
   18fd2:	blx	84cc <__stack_chk_fail@plt>
   18fd6:	add	sp, #36	; 0x24
   18fd8:	pop	{r4, r5, r6, r7, pc}
   18fda:	nop
   18fdc:	bkpt	0x0014
   18fde:	movs	r4, r0
   18fe0:	lsls	r4, r4, #8
   18fe2:	movs	r0, r0
   18fe4:	pop	{r1, r6, r7, pc}
   18fe6:	movs	r4, r0

00018fe8 <btrfs_leaf_free_space@@Base>:
   18fe8:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   18fec:	mov	r4, r0
   18fee:	ldr	r3, [r0, #92]	; 0x5c
   18ff0:	ldr	r7, [pc, #104]	; (1905c <btrfs_leaf_free_space@@Base+0x74>)
   18ff2:	ldr.w	r6, [r0, #192]	; 0xc0
   18ff6:	add	r7, pc
   18ff8:	cbz	r3, 19006 <btrfs_leaf_free_space@@Base+0x1e>
   18ffa:	ldr.w	r3, [r3, #384]	; 0x180
   18ffe:	ldr	r2, [r0, #76]	; 0x4c
   19000:	subs	r3, r3, r2
   19002:	it	ne
   19004:	movne	r3, #1
   19006:	ldr	r1, [pc, #88]	; (19060 <btrfs_leaf_free_space@@Base+0x78>)
   19008:	movw	r2, #1767	; 0x6e7
   1900c:	ldr	r0, [pc, #84]	; (19064 <btrfs_leaf_free_space@@Base+0x7c>)
   1900e:	add	r1, pc
   19010:	adds	r1, #211	; 0xd3
   19012:	add	r0, pc
   19014:	bl	17a14 <rb_free_nodes@@Base+0x116>
   19018:	ldr	r3, [r4, #76]	; 0x4c
   1901a:	mov	r2, r6
   1901c:	movs	r1, #0
   1901e:	mov	r0, r4
   19020:	sub.w	r8, r3, #101	; 0x65
   19024:	bl	17d60 <rb_free_nodes@@Base+0x462>
   19028:	subs.w	r5, r8, r0
   1902c:	bpl.n	19054 <btrfs_leaf_free_space@@Base+0x6c>
   1902e:	ldr	r3, [pc, #56]	; (19068 <btrfs_leaf_free_space@@Base+0x80>)
   19030:	mov	r2, r6
   19032:	movs	r1, #0
   19034:	mov	r0, r4
   19036:	ldr	r3, [r7, r3]
   19038:	ldr	r7, [r3, #0]
   1903a:	bl	17d60 <rb_free_nodes@@Base+0x462>
   1903e:	ldr	r2, [pc, #44]	; (1906c <btrfs_leaf_free_space@@Base+0x84>)
   19040:	mov	r3, r5
   19042:	movs	r1, #1
   19044:	str.w	r8, [sp]
   19048:	add	r2, pc
   1904a:	strd	r0, r6, [sp, #4]
   1904e:	mov	r0, r7
   19050:	blx	881c <__fprintf_chk@plt+0x4>
   19054:	mov	r0, r5
   19056:	add	sp, #16
   19058:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1905c:	pop	{r1, r4, r7, pc}
   1905e:	movs	r4, r0
   19060:	subs	r6, #50	; 0x32
   19062:	movs	r2, r0
   19064:	subs	r1, #187	; 0xbb
   19066:	movs	r2, r0
   19068:	lsls	r4, r6, #8
   1906a:	movs	r0, r0
   1906c:	subs	r1, #187	; 0xbb
   1906e:	movs	r2, r0

00019070 <btrfs_check_leaf@@Base>:
   19070:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19074:	mov	r4, r2
   19076:	ldr	r2, [pc, #640]	; (192f8 <btrfs_check_leaf@@Base+0x288>)
   19078:	sub	sp, #84	; 0x54
   1907a:	ldr	r3, [pc, #640]	; (192fc <btrfs_check_leaf@@Base+0x28c>)
   1907c:	mov	r8, r0
   1907e:	add	r2, pc
   19080:	ldr.w	sl, [r4, #192]	; 0xc0
   19084:	ldr	r7, [pc, #632]	; (19300 <btrfs_check_leaf@@Base+0x290>)
   19086:	mov	r6, r1
   19088:	ldr	r3, [r2, r3]
   1908a:	ldr	r2, [r4, #76]	; 0x4c
   1908c:	add	r7, pc
   1908e:	ldr	r3, [r3, #0]
   19090:	str	r3, [sp, #76]	; 0x4c
   19092:	mov.w	r3, #0
   19096:	movs	r3, #25
   19098:	mul.w	r3, r3, sl
   1909c:	cmp	r3, r2
   1909e:	bls.n	19106 <btrfs_check_leaf@@Base+0x96>
   190a0:	ldr	r3, [pc, #608]	; (19304 <btrfs_check_leaf@@Base+0x294>)
   190a2:	movs	r1, #1
   190a4:	movs	r5, #1
   190a6:	ldr	r0, [r7, r3]
   190a8:	ldrd	r2, r3, [r4, #40]	; 0x28
   190ac:	strd	r2, r3, [sp]
   190b0:	ldr	r2, [pc, #596]	; (19308 <btrfs_check_leaf@@Base+0x298>)
   190b2:	ldr	r0, [r0, #0]
   190b4:	add	r2, pc
   190b6:	blx	881c <__fprintf_chk@plt+0x4>
   190ba:	ldr.w	r3, [r4, #188]	; 0xbc
   190be:	ldr.w	r2, [r4, #184]	; 0xb8
   190c2:	cmp	r3, #0
   190c4:	it	eq
   190c6:	cmpeq	r2, #2
   190c8:	bne.n	19168 <btrfs_check_leaf@@Base+0xf8>
   190ca:	add	r1, sp, #36	; 0x24
   190cc:	cmp	r6, #0
   190ce:	beq.w	192e2 <btrfs_check_leaf@@Base+0x272>
   190d2:	ldr.w	r3, [r6, #13]
   190d6:	ldr.w	r2, [r6, #9]
   190da:	str.w	r3, [sp, #49]	; 0x31
   190de:	ldrb	r3, [r6, #8]
   190e0:	str.w	r2, [sp, #45]	; 0x2d
   190e4:	ldr	r2, [r6, #0]
   190e6:	strb.w	r3, [sp, #44]	; 0x2c
   190ea:	ldr	r3, [r6, #4]
   190ec:	strd	r2, r3, [sp, #36]	; 0x24
   190f0:	ldr	r2, [r4, #76]	; 0x4c
   190f2:	movs	r3, #0
   190f4:	mov	r0, r8
   190f6:	str	r3, [sp, #8]
   190f8:	strd	r2, r3, [sp]
   190fc:	ldrd	r2, r3, [r4, #40]	; 0x28
   19100:	bl	2d5e8 <btrfs_add_corrupt_extent_record@@Base>
   19104:	b.n	19168 <btrfs_check_leaf@@Base+0xf8>
   19106:	ldrb.w	r5, [r4, #196]	; 0xc4
   1910a:	cbz	r5, 1912c <btrfs_check_leaf@@Base+0xbc>
   1910c:	ldr	r3, [pc, #500]	; (19304 <btrfs_check_leaf@@Base+0x294>)
   1910e:	movs	r5, #4
   19110:	ldr.w	r1, [r4, #144]	; 0x90
   19114:	ldr.w	r2, [r4, #148]	; 0x94
   19118:	ldr	r3, [r7, r3]
   1911a:	strd	r1, r2, [sp]
   1911e:	movs	r1, #1
   19120:	ldr	r2, [pc, #488]	; (1930c <btrfs_check_leaf@@Base+0x29c>)
   19122:	ldr	r0, [r3, #0]
   19124:	add	r2, pc
   19126:	blx	881c <__fprintf_chk@plt+0x4>
   1912a:	b.n	190ba <btrfs_check_leaf@@Base+0x4a>
   1912c:	mov	r0, r4
   1912e:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   19132:	cmp	r0, #0
   19134:	bge.n	19160 <btrfs_check_leaf@@Base+0xf0>
   19136:	ldr	r3, [pc, #460]	; (19304 <btrfs_check_leaf@@Base+0x294>)
   19138:	mov	r0, r4
   1913a:	ldr.w	r9, [r4, #144]	; 0x90
   1913e:	ldr	r3, [r7, r3]
   19140:	ldr.w	r7, [r4, #148]	; 0x94
   19144:	ldr	r5, [r3, #0]
   19146:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1914a:	ldr	r2, [pc, #452]	; (19310 <btrfs_check_leaf@@Base+0x2a0>)
   1914c:	movs	r1, #1
   1914e:	strd	r9, r7, [sp]
   19152:	add	r2, pc
   19154:	str	r0, [sp, #8]
   19156:	mov	r0, r5
   19158:	blx	881c <__fprintf_chk@plt+0x4>
   1915c:	movs	r5, #5
   1915e:	b.n	190ba <btrfs_check_leaf@@Base+0x4a>
   19160:	cmp.w	sl, #0
   19164:	bne.n	1917e <btrfs_check_leaf@@Base+0x10e>
   19166:	movs	r5, #0
   19168:	ldr	r2, [pc, #424]	; (19314 <btrfs_check_leaf@@Base+0x2a4>)
   1916a:	ldr	r3, [pc, #400]	; (192fc <btrfs_check_leaf@@Base+0x28c>)
   1916c:	add	r2, pc
   1916e:	ldr	r3, [r2, r3]
   19170:	ldr	r2, [r3, #0]
   19172:	ldr	r3, [sp, #76]	; 0x4c
   19174:	eors	r2, r3
   19176:	beq.w	192f0 <btrfs_check_leaf@@Base+0x280>
   1917a:	blx	84cc <__stack_chk_fail@plt>
   1917e:	add.w	r9, sp, #56	; 0x38
   19182:	mov	r2, r5
   19184:	mov	r0, r4
   19186:	mov	r1, r9
   19188:	bl	17946 <rb_free_nodes@@Base+0x48>
   1918c:	cmp	r6, #0
   1918e:	beq.w	192cc <btrfs_check_leaf@@Base+0x25c>
   19192:	ldrb	r5, [r6, #8]
   19194:	cmp	r5, #0
   19196:	beq.w	192ce <btrfs_check_leaf@@Base+0x25e>
   1919a:	movs	r2, #17
   1919c:	mov	r1, r9
   1919e:	mov	r0, r6
   191a0:	blx	8464 <memcmp@plt+0x4>
   191a4:	mov	r5, r0
   191a6:	cmp	r0, #0
   191a8:	beq.w	192ce <btrfs_check_leaf@@Base+0x25e>
   191ac:	ldr	r3, [pc, #340]	; (19304 <btrfs_check_leaf@@Base+0x294>)
   191ae:	movs	r5, #2
   191b0:	ldr.w	r1, [r4, #144]	; 0x90
   191b4:	ldr.w	r2, [r4, #148]	; 0x94
   191b8:	ldr	r3, [r7, r3]
   191ba:	strd	r1, r2, [sp]
   191be:	movs	r1, #1
   191c0:	ldr	r2, [pc, #340]	; (19318 <btrfs_check_leaf@@Base+0x2a8>)
   191c2:	ldr	r0, [r3, #0]
   191c4:	add	r2, pc
   191c6:	blx	881c <__fprintf_chk@plt+0x4>
   191ca:	b.n	190ba <btrfs_check_leaf@@Base+0x4a>
   191cc:	mov	r2, r5
   191ce:	mov	r1, r9
   191d0:	mov	r0, r4
   191d2:	bl	17946 <rb_free_nodes@@Base+0x48>
   191d6:	adds	r2, r5, #1
   191d8:	mov	r1, fp
   191da:	mov	r0, r4
   191dc:	str	r2, [sp, #24]
   191de:	bl	17db0 <rb_free_nodes@@Base+0x4b2>
   191e2:	mov	r1, fp
   191e4:	mov	r0, r9
   191e6:	bl	189c2 <btrfs_comp_cpu_keys@@Base+0x56>
   191ea:	ldr	r2, [sp, #24]
   191ec:	cmp	r0, #0
   191ee:	blt.n	19208 <btrfs_check_leaf@@Base+0x198>
   191f0:	ldr	r3, [pc, #272]	; (19304 <btrfs_check_leaf@@Base+0x294>)
   191f2:	movs	r1, #1
   191f4:	ldr	r0, [r7, r3]
   191f6:	mov	r3, r5
   191f8:	str	r2, [sp, #0]
   191fa:	movs	r5, #3
   191fc:	ldr	r2, [pc, #284]	; (1931c <btrfs_check_leaf@@Base+0x2ac>)
   191fe:	ldr	r0, [r0, #0]
   19200:	add	r2, pc
   19202:	blx	881c <__fprintf_chk@plt+0x4>
   19206:	b.n	190ba <btrfs_check_leaf@@Base+0x4a>
   19208:	movs	r3, #25
   1920a:	mov	r1, r2
   1920c:	mla	r3, r3, r5, r4
   19210:	mov	r0, r4
   19212:	str	r2, [sp, #24]
   19214:	ldr.w	r3, [r3, #214]	; 0xd6
   19218:	str	r3, [sp, #28]
   1921a:	bl	1791c <rb_free_nodes@@Base+0x1e>
   1921e:	ldr	r3, [sp, #28]
   19220:	ldr	r2, [sp, #24]
   19222:	cmp	r0, r3
   19224:	beq.n	1923c <btrfs_check_leaf@@Base+0x1cc>
   19226:	ldr	r2, [pc, #220]	; (19304 <btrfs_check_leaf@@Base+0x294>)
   19228:	movs	r1, #1
   1922a:	ldr	r5, [r7, r2]
   1922c:	ldr	r2, [pc, #240]	; (19320 <btrfs_check_leaf@@Base+0x2b0>)
   1922e:	str	r0, [sp, #0]
   19230:	ldr	r0, [r5, #0]
   19232:	add	r2, pc
   19234:	blx	881c <__fprintf_chk@plt+0x4>
   19238:	movs	r5, #6
   1923a:	b.n	190ba <btrfs_check_leaf@@Base+0x4a>
   1923c:	cbnz	r5, 19264 <btrfs_check_leaf@@Base+0x1f4>
   1923e:	ldr.w	r2, [r4, #218]	; 0xda
   19242:	ldr.w	r3, [r4, #214]	; 0xd6
   19246:	add	r3, r2
   19248:	ldr.w	r2, [r8, #384]	; 0x180
   1924c:	subs	r2, #101	; 0x65
   1924e:	cmp	r2, r3
   19250:	beq.n	19262 <btrfs_check_leaf@@Base+0x1f2>
   19252:	ldr	r1, [pc, #176]	; (19304 <btrfs_check_leaf@@Base+0x294>)
   19254:	ldr	r0, [r7, r1]
   19256:	movs	r1, #1
   19258:	str	r2, [sp, #0]
   1925a:	ldr	r2, [pc, #200]	; (19324 <btrfs_check_leaf@@Base+0x2b4>)
   1925c:	ldr	r0, [r0, #0]
   1925e:	add	r2, pc
   19260:	b.n	19234 <btrfs_check_leaf@@Base+0x1c4>
   19262:	movs	r2, #1
   19264:	mov	r5, r2
   19266:	cmp.w	sl, #1
   1926a:	bls.n	19272 <btrfs_check_leaf@@Base+0x202>
   1926c:	ldr	r3, [sp, #20]
   1926e:	cmp	r3, r5
   19270:	bhi.n	191cc <btrfs_check_leaf@@Base+0x15c>
   19272:	movs	r5, #0
   19274:	mov	r1, r5
   19276:	mov	r0, r4
   19278:	bl	1791c <rb_free_nodes@@Base+0x1e>
   1927c:	ldr.w	r3, [r8, #384]	; 0x180
   19280:	subs	r3, #101	; 0x65
   19282:	cmp	r0, r3
   19284:	bls.n	192da <btrfs_check_leaf@@Base+0x26a>
   19286:	movs	r2, #0
   19288:	mov	r1, r9
   1928a:	mov	r0, r4
   1928c:	bl	17946 <rb_free_nodes@@Base+0x48>
   19290:	mov	r0, r9
   19292:	bl	24c24 <btrfs_print_key@@Base>
   19296:	ldr	r3, [pc, #144]	; (19328 <btrfs_check_leaf@@Base+0x2b8>)
   19298:	ldr	r3, [r7, r3]
   1929a:	ldr	r0, [r3, #0]
   1929c:	blx	83c4 <fflush@plt>
   192a0:	ldr	r3, [pc, #96]	; (19304 <btrfs_check_leaf@@Base+0x294>)
   192a2:	mov	r1, r5
   192a4:	mov	r0, r4
   192a6:	ldr	r3, [r7, r3]
   192a8:	ldr	r7, [r3, #0]
   192aa:	bl	1791c <rb_free_nodes@@Base+0x1e>
   192ae:	ldr.w	r3, [r8, #384]	; 0x180
   192b2:	movs	r2, #0
   192b4:	movs	r1, #1
   192b6:	subs	r3, #101	; 0x65
   192b8:	strd	r3, r2, [sp, #8]
   192bc:	strd	r0, r2, [sp]
   192c0:	mov	r0, r7
   192c2:	ldr	r2, [pc, #104]	; (1932c <btrfs_check_leaf@@Base+0x2bc>)
   192c4:	add	r2, pc
   192c6:	blx	881c <__fprintf_chk@plt+0x4>
   192ca:	b.n	19238 <btrfs_check_leaf@@Base+0x1c8>
   192cc:	mov	r5, r6
   192ce:	add.w	r3, sl, #4294967295	; 0xffffffff
   192d2:	add.w	fp, sp, #36	; 0x24
   192d6:	str	r3, [sp, #20]
   192d8:	b.n	19266 <btrfs_check_leaf@@Base+0x1f6>
   192da:	adds	r5, #1
   192dc:	cmp	r5, sl
   192de:	bne.n	19274 <btrfs_check_leaf@@Base+0x204>
   192e0:	b.n	19166 <btrfs_check_leaf@@Base+0xf6>
   192e2:	mov	r2, r6
   192e4:	mov	r0, r4
   192e6:	str	r1, [sp, #20]
   192e8:	bl	17db0 <rb_free_nodes@@Base+0x4b2>
   192ec:	ldr	r1, [sp, #20]
   192ee:	b.n	190f0 <btrfs_check_leaf@@Base+0x80>
   192f0:	mov	r0, r5
   192f2:	add	sp, #84	; 0x54
   192f4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   192f8:	pop	{r1, r3, pc}
   192fa:	movs	r4, r0
   192fc:	lsls	r4, r4, #8
   192fe:	movs	r0, r0
   19300:	pop	{r2, r3, r4, r5, r6, r7}
   19302:	movs	r4, r0
   19304:	lsls	r4, r6, #8
   19306:	movs	r0, r0
   19308:	subs	r1, #142	; 0x8e
   1930a:	movs	r2, r0
   1930c:	subs	r1, #60	; 0x3c
   1930e:	movs	r2, r0
   19310:	subs	r1, #39	; 0x27
   19312:	movs	r2, r0
   19314:	pop	{r2, r3, r4}
   19316:	movs	r4, r0
   19318:	subs	r0, #216	; 0xd8
   1931a:	movs	r2, r0
   1931c:	subs	r0, #188	; 0xbc
   1931e:	movs	r2, r0
   19320:	subs	r0, #162	; 0xa2
   19322:	movs	r2, r0
   19324:	subs	r0, #143	; 0x8f
   19326:	movs	r2, r0
   19328:	lsls	r0, r3, #9
   1932a:	movs	r0, r0
   1932c:	subs	r0, #68	; 0x44
   1932e:	movs	r2, r0
   19330:	push	{r4, r5, r6, r7, lr}
   19332:	mov	r5, r2
   19334:	ldr	r2, [pc, #100]	; (1939c <btrfs_check_leaf@@Base+0x32c>)
   19336:	sub	sp, #28
   19338:	ldr	r3, [pc, #100]	; (193a0 <btrfs_check_leaf@@Base+0x330>)
   1933a:	mov	r6, r0
   1933c:	add	r2, pc
   1933e:	mov	r4, r1
   19340:	ldr	r3, [r2, r3]
   19342:	ldr	r3, [r3, #0]
   19344:	str	r3, [sp, #20]
   19346:	mov.w	r3, #0
   1934a:	add.w	r3, r1, r5, lsl #2
   1934e:	ldr	r0, [r3, #4]
   19350:	cbz	r0, 1935e <btrfs_check_leaf@@Base+0x2ee>
   19352:	mov	r7, sp
   19354:	ldr	r2, [r3, #36]	; 0x24
   19356:	mov	r1, r7
   19358:	bl	17952 <rb_free_nodes@@Base+0x54>
   1935c:	mov	r0, r7
   1935e:	cbnz	r5, 19388 <btrfs_check_leaf@@Base+0x318>
   19360:	mov	r1, r0
   19362:	ldr	r2, [r4, #0]
   19364:	mov	r0, r6
   19366:	bl	19070 <btrfs_check_leaf@@Base>
   1936a:	ldr	r2, [pc, #56]	; (193a4 <btrfs_check_leaf@@Base+0x334>)
   1936c:	cmp	r0, #0
   1936e:	ldr	r3, [pc, #48]	; (193a0 <btrfs_check_leaf@@Base+0x330>)
   19370:	add	r2, pc
   19372:	ite	ne
   19374:	mvnne.w	r0, #4
   19378:	moveq	r0, #0
   1937a:	ldr	r3, [r2, r3]
   1937c:	ldr	r2, [r3, #0]
   1937e:	ldr	r3, [sp, #20]
   19380:	eors	r2, r3
   19382:	beq.n	19396 <btrfs_check_leaf@@Base+0x326>
   19384:	blx	84cc <__stack_chk_fail@plt>
   19388:	mov	r1, r0
   1938a:	ldr.w	r2, [r4, r5, lsl #2]
   1938e:	mov	r0, r6
   19390:	bl	18a20 <btrfs_check_node@@Base>
   19394:	b.n	1936a <btrfs_check_leaf@@Base+0x2fa>
   19396:	add	sp, #28
   19398:	pop	{r4, r5, r6, r7, pc}
   1939a:	nop
   1939c:	rev16	r4, r1
   1939e:	movs	r4, r0
   193a0:	lsls	r4, r4, #8
   193a2:	movs	r0, r0
   193a4:	rev	r0, r3
   193a6:	movs	r4, r0
   193a8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   193ac:	mov	r5, r2
   193ae:	vpush	{d8}
   193b2:	mov	r7, r3
   193b4:	ldr	r2, [pc, #596]	; (1960c <btrfs_check_leaf@@Base+0x59c>)
   193b6:	mov	r9, r0
   193b8:	ldr	r3, [pc, #596]	; (19610 <btrfs_check_leaf@@Base+0x5a0>)
   193ba:	add	r2, pc
   193bc:	ldr.w	r8, [r5, #4]
   193c0:	sub	sp, #68	; 0x44
   193c2:	str	r1, [sp, #16]
   193c4:	ldr	r3, [r2, r3]
   193c6:	ldr	r3, [r3, #0]
   193c8:	str	r3, [sp, #60]	; 0x3c
   193ca:	mov.w	r3, #0
   193ce:	cmp.w	r8, #0
   193d2:	beq.n	1944c <btrfs_check_leaf@@Base+0x3dc>
   193d4:	ldr.w	r3, [r8, #192]	; 0xc0
   193d8:	ldr	r2, [r5, #36]	; 0x24
   193da:	subs	r3, #1
   193dc:	cmp	r3, r2
   193de:	bls.n	1944c <btrfs_check_leaf@@Base+0x3dc>
   193e0:	ldr.w	sl, [r1, #464]	; 0x1d0
   193e4:	adds	r3, r2, #1
   193e6:	mov	r1, r8
   193e8:	ldr	r6, [r5, #0]
   193ea:	mov	r2, r3
   193ec:	vmov	s16, r3
   193f0:	mov	r0, sl
   193f2:	bl	18c0e <read_node_slot@@Base>
   193f6:	mov	r4, r0
   193f8:	str	r0, [sp, #36]	; 0x24
   193fa:	bl	179ac <rb_free_nodes@@Base+0xae>
   193fe:	cbnz	r0, 19420 <btrfs_check_leaf@@Base+0x3b0>
   19400:	cmn.w	r4, #4096	; 0x1000
   19404:	it	ls
   19406:	mvnls.w	r4, #4
   1940a:	ldr	r2, [pc, #520]	; (19614 <btrfs_check_leaf@@Base+0x5a4>)
   1940c:	ldr	r3, [pc, #512]	; (19610 <btrfs_check_leaf@@Base+0x5a0>)
   1940e:	add	r2, pc
   19410:	ldr	r3, [r2, r3]
   19412:	ldr	r2, [r3, #0]
   19414:	ldr	r3, [sp, #60]	; 0x3c
   19416:	eors	r2, r3
   19418:	beq.w	19600 <btrfs_check_leaf@@Base+0x590>
   1941c:	blx	84cc <__stack_chk_fail@plt>
   19420:	mov	r0, r4
   19422:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   19426:	cmp	r0, r7
   19428:	bge.n	1942e <btrfs_check_leaf@@Base+0x3be>
   1942a:	ldr	r0, [sp, #36]	; 0x24
   1942c:	b.n	19448 <btrfs_check_leaf@@Base+0x3d8>
   1942e:	add	r3, sp, #36	; 0x24
   19430:	vstr	s16, [sp]
   19434:	str	r3, [sp, #4]
   19436:	mov	r0, r9
   19438:	ldr	r2, [sp, #36]	; 0x24
   1943a:	mov	r3, r8
   1943c:	ldr	r1, [sp, #16]
   1943e:	bl	18884 <btrfs_cow_block@@Base>
   19442:	mov	r4, r0
   19444:	ldr	r0, [sp, #36]	; 0x24
   19446:	cbz	r4, 19450 <btrfs_check_leaf@@Base+0x3e0>
   19448:	bl	16c20 <free_extent_buffer@@Base>
   1944c:	movs	r4, #1
   1944e:	b.n	1940a <btrfs_check_leaf@@Base+0x39a>
   19450:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   19454:	cmp	r7, r0
   19456:	bgt.n	1942a <btrfs_check_leaf@@Base+0x3ba>
   19458:	ldr.w	r3, [r6, #192]	; 0xc0
   1945c:	str	r3, [sp, #12]
   1945e:	cmp	r3, #0
   19460:	beq.n	1942a <btrfs_check_leaf@@Base+0x3ba>
   19462:	ldr	r3, [sp, #112]	; 0x70
   19464:	adds	r7, #25
   19466:	mov	fp, r4
   19468:	mov	r1, r4
   1946a:	rsb	lr, r3, #1
   1946e:	ldr	r3, [sp, #12]
   19470:	mov.w	r9, #25
   19474:	subs	r2, r3, #1
   19476:	cmp	r2, lr
   19478:	bcs.w	195be <btrfs_check_leaf@@Base+0x54e>
   1947c:	cmp.w	fp, #0
   19480:	beq.n	1942a <btrfs_check_leaf@@Base+0x3ba>
   19482:	ldr	r3, [sp, #112]	; 0x70
   19484:	cbnz	r3, 194a0 <btrfs_check_leaf@@Base+0x430>
   19486:	ldr	r3, [sp, #12]
   19488:	cmp	r3, fp
   1948a:	bne.n	194a0 <btrfs_check_leaf@@Base+0x430>
   1948c:	ldr	r1, [pc, #392]	; (19618 <btrfs_check_leaf@@Base+0x5a8>)
   1948e:	movs	r3, #1
   19490:	ldr	r0, [pc, #392]	; (1961c <btrfs_check_leaf@@Base+0x5ac>)
   19492:	movw	r2, #1874	; 0x752
   19496:	add	r1, pc
   19498:	adds	r1, #233	; 0xe9
   1949a:	add	r0, pc
   1949c:	bl	17a1e <rb_free_nodes@@Base+0x120>
   194a0:	ldr	r3, [sp, #36]	; 0x24
   194a2:	mov	r0, r6
   194a4:	add.w	sl, sl, #384	; 0x180
   194a8:	vmov	s15, r3
   194ac:	ldr.w	r3, [r3, #192]	; 0xc0
   194b0:	str	r3, [sp, #20]
   194b2:	ldr	r3, [sp, #12]
   194b4:	sub.w	r9, r3, fp
   194b8:	mov	r1, r9
   194ba:	bl	1791c <rb_free_nodes@@Base+0x1e>
   194be:	mov	r1, r6
   194c0:	mov	r7, r0
   194c2:	mov	r0, sl
   194c4:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   194c8:	vmov	r1, s15
   194cc:	subs	r2, r7, r0
   194ce:	strd	r2, r0, [sp, #24]
   194d2:	mov	r0, sl
   194d4:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   194d8:	ldr	r3, [sp, #28]
   194da:	subs	r7, r3, r7
   194dc:	ldr	r3, [sp, #16]
   194de:	ldr.w	r3, [r3, #464]	; 0x1d0
   194e2:	ldr.w	r3, [r3, #384]	; 0x180
   194e6:	subs	r3, #101	; 0x65
   194e8:	add.w	r2, r0, #101	; 0x65
   194ec:	subs	r3, r3, r0
   194ee:	adds	r1, r2, r7
   194f0:	vmov	r0, s15
   194f4:	bl	1738c <memmove_extent_buffer@@Base>
   194f8:	ldr	r3, [sp, #16]
   194fa:	mov	r1, r6
   194fc:	mov	r0, sl
   194fe:	ldr.w	r3, [r3, #464]	; 0x1d0
   19502:	ldr.w	r2, [r3, #384]	; 0x180
   19506:	add	r2, r7
   19508:	str	r2, [sp, #28]
   1950a:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   1950e:	ldr	r3, [sp, #24]
   19510:	movs	r7, #25
   19512:	ldr	r2, [sp, #28]
   19514:	mul.w	sl, r7, fp
   19518:	mov	r1, r6
   1951a:	str	r3, [sp, #0]
   1951c:	add.w	r3, r0, #101	; 0x65
   19520:	ldr	r0, [sp, #36]	; 0x24
   19522:	bl	17342 <copy_extent_buffer@@Base>
   19526:	ldr	r3, [sp, #20]
   19528:	movs	r2, #101	; 0x65
   1952a:	ldr	r0, [sp, #36]	; 0x24
   1952c:	add.w	r1, sl, r2
   19530:	muls	r3, r7
   19532:	bl	1738c <memmove_extent_buffer@@Base>
   19536:	ldr	r0, [sp, #36]	; 0x24
   19538:	mul.w	r3, r7, r9
   1953c:	movs	r2, #101	; 0x65
   1953e:	mov	r1, r6
   19540:	str.w	sl, [sp]
   19544:	adds	r3, #101	; 0x65
   19546:	bl	17342 <copy_extent_buffer@@Base>
   1954a:	ldr	r3, [sp, #20]
   1954c:	ldr	r2, [sp, #16]
   1954e:	movs	r1, #0
   19550:	add.w	r0, r3, fp
   19554:	ldr	r3, [sp, #36]	; 0x24
   19556:	adds	r3, #197	; 0xc5
   19558:	str.w	r0, [r3, #-5]
   1955c:	ldr.w	r2, [r2, #464]	; 0x1d0
   19560:	ldr.w	r2, [r2, #384]	; 0x180
   19564:	subs	r2, #101	; 0x65
   19566:	cmp	r1, r0
   19568:	bne.n	195e8 <btrfs_check_leaf@@Base+0x578>
   1956a:	str.w	r9, [r6, #192]	; 0xc0
   1956e:	cmp.w	r9, #0
   19572:	beq.n	1957a <btrfs_check_leaf@@Base+0x50a>
   19574:	mov	r0, r6
   19576:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1957a:	ldr	r0, [sp, #36]	; 0x24
   1957c:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   19580:	add	r1, sp, #40	; 0x28
   19582:	ldr	r0, [sp, #36]	; 0x24
   19584:	movs	r2, #0
   19586:	str	r1, [sp, #16]
   19588:	bl	17946 <rb_free_nodes@@Base+0x48>
   1958c:	vmov	r2, s16
   19590:	mov	r0, r8
   19592:	ldr	r1, [sp, #16]
   19594:	bl	1792e <rb_free_nodes@@Base+0x30>
   19598:	mov	r0, r8
   1959a:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1959e:	ldr	r3, [r5, #32]
   195a0:	cmp	r9, r3
   195a2:	bhi.n	195f8 <btrfs_check_leaf@@Base+0x588>
   195a4:	ldr	r2, [sp, #12]
   195a6:	ldr	r0, [r5, #0]
   195a8:	subs	r3, r3, r2
   195aa:	add	r3, fp
   195ac:	str	r3, [r5, #32]
   195ae:	bl	16c20 <free_extent_buffer@@Base>
   195b2:	ldr	r3, [sp, #36]	; 0x24
   195b4:	str	r3, [r5, #0]
   195b6:	ldr	r3, [r5, #36]	; 0x24
   195b8:	adds	r3, #1
   195ba:	str	r3, [r5, #36]	; 0x24
   195bc:	b.n	1940a <btrfs_check_leaf@@Base+0x39a>
   195be:	mla	ip, r9, r2, r6
   195c2:	ldr	r3, [r5, #32]
   195c4:	cmp	r3, r2
   195c6:	it	eq
   195c8:	addeq	r1, r1, r7
   195ca:	ldr.w	ip, [ip, #218]	; 0xda
   195ce:	add.w	ip, ip, #25
   195d2:	add	r1, ip
   195d4:	cmp	r1, r0
   195d6:	bhi.w	1947c <btrfs_check_leaf@@Base+0x40c>
   195da:	add.w	fp, fp, #1
   195de:	cmp	r2, #0
   195e0:	beq.w	19482 <btrfs_check_leaf@@Base+0x412>
   195e4:	subs	r2, #1
   195e6:	b.n	19476 <btrfs_check_leaf@@Base+0x406>
   195e8:	ldr.w	r7, [r3, #21]
   195ec:	adds	r1, #1
   195ee:	adds	r3, #25
   195f0:	subs	r2, r2, r7
   195f2:	str.w	r2, [r3, #-8]
   195f6:	b.n	19566 <btrfs_check_leaf@@Base+0x4f6>
   195f8:	ldr	r0, [sp, #36]	; 0x24
   195fa:	bl	16c20 <free_extent_buffer@@Base>
   195fe:	b.n	1940a <btrfs_check_leaf@@Base+0x39a>
   19600:	mov	r0, r4
   19602:	add	sp, #68	; 0x44
   19604:	vpop	{d8}
   19608:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1960c:	cbnz	r6, 19642 <btrfs_check_leaf@@Base+0x5d2>
   1960e:	movs	r4, r0
   19610:	lsls	r4, r4, #8
   19612:	movs	r0, r0
   19614:	cbnz	r2, 19636 <btrfs_check_leaf@@Base+0x5c6>
   19616:	movs	r4, r0
   19618:	subs	r1, #170	; 0xaa
   1961a:	movs	r2, r0
   1961c:	ldr	r1, [pc, #324]	; (19764 <btrfs_check_leaf@@Base+0x6f4>)
   1961e:	movs	r2, r0
   19620:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19624:	mov	sl, r3
   19626:	vpush	{d8}
   1962a:	mov	r4, r2
   1962c:	ldr	r3, [pc, #744]	; (19918 <btrfs_check_leaf@@Base+0x8a8>)
   1962e:	mov	r5, r0
   19630:	ldr	r2, [pc, #744]	; (1991c <btrfs_check_leaf@@Base+0x8ac>)
   19632:	mov	r8, r1
   19634:	add	r3, pc
   19636:	ldr	r7, [r4, #36]	; 0x24
   19638:	sub	sp, #76	; 0x4c
   1963a:	add	r2, pc
   1963c:	str	r3, [sp, #20]
   1963e:	ldr	r3, [pc, #736]	; (19920 <btrfs_check_leaf@@Base+0x8b0>)
   19640:	ldr.w	fp, [sp, #120]	; 0x78
   19644:	ldr	r3, [r2, r3]
   19646:	ldr	r3, [r3, #0]
   19648:	str	r3, [sp, #68]	; 0x44
   1964a:	mov.w	r3, #0
   1964e:	cbz	r7, 19696 <btrfs_check_leaf@@Base+0x626>
   19650:	ldr	r1, [r4, #4]
   19652:	cbz	r1, 19696 <btrfs_check_leaf@@Base+0x626>
   19654:	ldr	r6, [r4, #0]
   19656:	ldr.w	r3, [r6, #192]	; 0xc0
   1965a:	str	r3, [sp, #12]
   1965c:	cbz	r3, 19696 <btrfs_check_leaf@@Base+0x626>
   1965e:	ldr.w	r9, [r8, #464]	; 0x1d0
   19662:	subs	r7, #1
   19664:	mov	r2, r7
   19666:	mov	r0, r9
   19668:	bl	18c0e <read_node_slot@@Base>
   1966c:	str	r0, [sp, #44]	; 0x2c
   1966e:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   19672:	cmp	r0, sl
   19674:	bge.n	1967a <btrfs_check_leaf@@Base+0x60a>
   19676:	ldr	r0, [sp, #44]	; 0x2c
   19678:	b.n	19692 <btrfs_check_leaf@@Base+0x622>
   1967a:	add	r3, sp, #44	; 0x2c
   1967c:	ldr	r2, [sp, #44]	; 0x2c
   1967e:	strd	r7, r3, [sp]
   19682:	mov	r1, r8
   19684:	ldr	r3, [r4, #4]
   19686:	mov	r0, r5
   19688:	bl	18884 <btrfs_cow_block@@Base>
   1968c:	mov	r7, r0
   1968e:	ldr	r0, [sp, #44]	; 0x2c
   19690:	cbz	r7, 1969a <btrfs_check_leaf@@Base+0x62a>
   19692:	bl	16c20 <free_extent_buffer@@Base>
   19696:	movs	r7, #1
   19698:	b.n	19894 <btrfs_check_leaf@@Base+0x824>
   1969a:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1969e:	cmp	sl, r0
   196a0:	bgt.n	19676 <btrfs_check_leaf@@Base+0x606>
   196a2:	cmp.w	fp, #0
   196a6:	bne.w	198a8 <btrfs_check_leaf@@Base+0x838>
   196aa:	ldr	r3, [sp, #12]
   196ac:	add.w	ip, r3, #4294967295	; 0xffffffff
   196b0:	movs	r2, #0
   196b2:	add.w	r1, r6, #197	; 0xc5
   196b6:	add.w	sl, sl, #25
   196ba:	mov	r5, r2
   196bc:	cmp	r5, ip
   196be:	bne.w	198ae <btrfs_check_leaf@@Base+0x83e>
   196c2:	cmp	r5, #0
   196c4:	beq.n	19676 <btrfs_check_leaf@@Base+0x606>
   196c6:	cmp.w	fp, #0
   196ca:	bne.n	196e8 <btrfs_check_leaf@@Base+0x678>
   196cc:	ldr.w	r3, [r6, #192]	; 0xc0
   196d0:	cmp	r3, r5
   196d2:	bne.n	196e8 <btrfs_check_leaf@@Base+0x678>
   196d4:	ldr	r1, [pc, #588]	; (19924 <btrfs_check_leaf@@Base+0x8b4>)
   196d6:	movs	r3, #1
   196d8:	ldr	r0, [pc, #588]	; (19928 <btrfs_check_leaf@@Base+0x8b8>)
   196da:	movw	r2, #2018	; 0x7e2
   196de:	add	r1, pc
   196e0:	adds	r1, #249	; 0xf9
   196e2:	add	r0, pc
   196e4:	bl	17a1e <rb_free_nodes@@Base+0x120>
   196e8:	mov.w	sl, #25
   196ec:	ldr	r0, [sp, #44]	; 0x2c
   196ee:	mul.w	r3, sl, r5
   196f2:	mov	r1, r6
   196f4:	str	r3, [sp, #16]
   196f6:	ldr.w	r2, [r0, #192]	; 0xc0
   196fa:	str	r3, [sp, #0]
   196fc:	movs	r3, #101	; 0x65
   196fe:	mul.w	r2, sl, r2
   19702:	add	r2, r3
   19704:	bl	17342 <copy_extent_buffer@@Base>
   19708:	subs	r3, r5, #1
   1970a:	ldr.w	fp, [sp, #44]	; 0x2c
   1970e:	mla	r3, sl, r3, r6
   19712:	add.w	r2, r3, #197	; 0xc5
   19716:	str	r2, [sp, #28]
   19718:	ldr.w	r2, [r3, #214]	; 0xd6
   1971c:	ldr.w	r3, [r8, #464]	; 0x1d0
   19720:	ldr.w	r3, [r3, #384]	; 0x180
   19724:	subs	r3, #101	; 0x65
   19726:	strd	r3, r2, [sp, #32]
   1972a:	subs	r1, r3, r2
   1972c:	add.w	r3, r9, #384	; 0x180
   19730:	str	r1, [sp, #24]
   19732:	mov	r1, fp
   19734:	mov	r0, r3
   19736:	vmov	s16, r3
   1973a:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   1973e:	ldr	r3, [sp, #32]
   19740:	ldr	r2, [sp, #36]	; 0x24
   19742:	rsb	r3, r3, #101	; 0x65
   19746:	adds	r1, r3, r2
   19748:	ldr	r3, [sp, #24]
   1974a:	str	r3, [sp, #0]
   1974c:	add.w	r3, r2, #101	; 0x65
   19750:	adds	r2, r1, r0
   19752:	mov	r0, fp
   19754:	mov	r1, r6
   19756:	bl	17342 <copy_extent_buffer@@Base>
   1975a:	ldr.w	r9, [sp, #44]	; 0x2c
   1975e:	ldr	r1, [pc, #460]	; (1992c <btrfs_check_leaf@@Base+0x8bc>)
   19760:	movw	r2, #2035	; 0x7f3
   19764:	ldr	r0, [pc, #456]	; (19930 <btrfs_check_leaf@@Base+0x8c0>)
   19766:	ldr.w	fp, [r9, #192]	; 0xc0
   1976a:	add	r1, pc
   1976c:	adds	r1, #249	; 0xf9
   1976e:	add	r0, pc
   19770:	clz	r3, fp
   19774:	lsrs	r3, r3, #5
   19776:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1977a:	add.w	r3, fp, #4294967295	; 0xffffffff
   1977e:	add.w	r0, fp, r5
   19782:	mov	r2, fp
   19784:	mla	r3, sl, r3, r9
   19788:	ldr.w	r1, [r3, #214]	; 0xd6
   1978c:	add.w	r3, r9, #197	; 0xc5
   19790:	str	r3, [sp, #24]
   19792:	adds	r1, #101	; 0x65
   19794:	cmp	r0, r2
   19796:	bhi.w	198ca <btrfs_check_leaf@@Base+0x85a>
   1979a:	ldr	r3, [sp, #12]
   1979c:	str.w	r0, [r9, #192]	; 0xc0
   197a0:	cmp	r3, r5
   197a2:	bcs.n	197d0 <btrfs_check_leaf@@Base+0x760>
   197a4:	ldr	r2, [sp, #20]
   197a6:	movs	r1, #1
   197a8:	ldr	r3, [pc, #392]	; (19934 <btrfs_check_leaf@@Base+0x8c4>)
   197aa:	ldr	r0, [r2, r3]
   197ac:	ldr	r3, [sp, #12]
   197ae:	ldr	r2, [pc, #392]	; (19938 <btrfs_check_leaf@@Base+0x8c8>)
   197b0:	str	r3, [sp, #0]
   197b2:	add	r2, pc
   197b4:	mov	r3, r5
   197b6:	ldr	r0, [r0, #0]
   197b8:	blx	881c <__fprintf_chk@plt+0x4>
   197bc:	ldr	r1, [pc, #380]	; (1993c <btrfs_check_leaf@@Base+0x8cc>)
   197be:	ldr	r0, [pc, #384]	; (19940 <btrfs_check_leaf@@Base+0x8d0>)
   197c0:	movs	r3, #1
   197c2:	add	r1, pc
   197c4:	movw	r2, #2052	; 0x804
   197c8:	adds	r1, #249	; 0xf9
   197ca:	add	r0, pc
   197cc:	bl	17a1e <rb_free_nodes@@Base+0x120>
   197d0:	ldr	r3, [sp, #12]
   197d2:	cmp	r3, r5
   197d4:	bls.n	19818 <btrfs_check_leaf@@Base+0x7a8>
   197d6:	ldr	r3, [sp, #28]
   197d8:	mov	r1, r6
   197da:	vmov	r0, s16
   197de:	ldr.w	sl, [r3, #17]
   197e2:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   197e6:	ldr.w	r3, [r8, #464]	; 0x1d0
   197ea:	ldr.w	r1, [r3, #384]	; 0x180
   197ee:	sub.w	r1, r1, sl
   197f2:	sub.w	r3, sl, r0
   197f6:	add.w	r2, r0, #101	; 0x65
   197fa:	add	r1, r0
   197fc:	mov	r0, r6
   197fe:	bl	1738c <memmove_extent_buffer@@Base>
   19802:	ldr.w	r3, [r6, #192]	; 0xc0
   19806:	movs	r2, #25
   19808:	movs	r1, #101	; 0x65
   1980a:	subs	r3, r3, r5
   1980c:	mov	r0, r6
   1980e:	muls	r3, r2
   19810:	ldr	r2, [sp, #16]
   19812:	adds	r2, #101	; 0x65
   19814:	bl	1738c <memmove_extent_buffer@@Base>
   19818:	ldr	r3, [sp, #12]
   1981a:	add.w	ip, r6, #197	; 0xc5
   1981e:	movs	r2, #0
   19820:	movs	r0, #25
   19822:	sub.w	r9, r3, r5
   19826:	str.w	r9, [r6, #192]	; 0xc0
   1982a:	ldr.w	r3, [r8, #464]	; 0x1d0
   1982e:	ldr.w	r3, [r3, #384]	; 0x180
   19832:	subs	r3, #101	; 0x65
   19834:	cmp	r9, r2
   19836:	bne.n	198e8 <btrfs_check_leaf@@Base+0x878>
   19838:	ldr	r0, [sp, #44]	; 0x2c
   1983a:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1983e:	cmp.w	r9, #0
   19842:	beq.n	1984a <btrfs_check_leaf@@Base+0x7da>
   19844:	mov	r0, r6
   19846:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1984a:	add.w	r9, sp, #48	; 0x30
   1984e:	movs	r2, #0
   19850:	mov	r0, r6
   19852:	mov	r1, r9
   19854:	bl	17946 <rb_free_nodes@@Base+0x48>
   19858:	movs	r3, #1
   1985a:	mov	r2, r9
   1985c:	mov	r1, r4
   1985e:	mov	r0, r8
   19860:	bl	18e60 <btrfs_fixup_low_keys@@Base>
   19864:	ldr	r3, [r4, #32]
   19866:	cmp	r5, r3
   19868:	ble.n	198fc <btrfs_check_leaf@@Base+0x88c>
   1986a:	add	r3, fp
   1986c:	ldr	r0, [r4, #0]
   1986e:	str	r3, [r4, #32]
   19870:	bl	16c20 <free_extent_buffer@@Base>
   19874:	ldr	r3, [sp, #44]	; 0x2c
   19876:	str	r3, [r4, #0]
   19878:	ldr	r3, [r4, #36]	; 0x24
   1987a:	subs	r3, #1
   1987c:	str	r3, [r4, #36]	; 0x24
   1987e:	ldr	r3, [r4, #32]
   19880:	mov.w	r2, #2096	; 0x830
   19884:	ldr	r1, [pc, #188]	; (19944 <btrfs_check_leaf@@Base+0x8d4>)
   19886:	ldr	r0, [pc, #192]	; (19948 <btrfs_check_leaf@@Base+0x8d8>)
   19888:	add	r1, pc
   1988a:	lsrs	r3, r3, #31
   1988c:	adds	r1, #249	; 0xf9
   1988e:	add	r0, pc
   19890:	bl	17a14 <rb_free_nodes@@Base+0x116>
   19894:	ldr	r2, [pc, #180]	; (1994c <btrfs_check_leaf@@Base+0x8dc>)
   19896:	ldr	r3, [pc, #136]	; (19920 <btrfs_check_leaf@@Base+0x8b0>)
   19898:	add	r2, pc
   1989a:	ldr	r3, [r2, r3]
   1989c:	ldr	r2, [r3, #0]
   1989e:	ldr	r3, [sp, #68]	; 0x44
   198a0:	eors	r2, r3
   198a2:	beq.n	1990a <btrfs_check_leaf@@Base+0x89a>
   198a4:	blx	84cc <__stack_chk_fail@plt>
   198a8:	ldr.w	ip, [sp, #12]
   198ac:	b.n	196b0 <btrfs_check_leaf@@Base+0x640>
   198ae:	ldr	r3, [r4, #32]
   198b0:	adds	r1, #25
   198b2:	cmp	r3, r5
   198b4:	ldr.w	r3, [r1, #-4]
   198b8:	it	eq
   198ba:	addeq	r2, sl
   198bc:	adds	r3, #25
   198be:	add	r2, r3
   198c0:	cmp	r2, r0
   198c2:	bhi.w	196c2 <btrfs_check_leaf@@Base+0x652>
   198c6:	adds	r5, #1
   198c8:	b.n	196bc <btrfs_check_leaf@@Base+0x64c>
   198ca:	ldr	r3, [sp, #24]
   198cc:	mla	ip, sl, r2, r3
   198d0:	ldr.w	r3, [r8, #464]	; 0x1d0
   198d4:	adds	r2, #1
   198d6:	ldr.w	r3, [r3, #384]	; 0x180
   198da:	ldr.w	lr, [ip, #17]
   198de:	subs	r3, r1, r3
   198e0:	add	r3, lr
   198e2:	str.w	r3, [ip, #17]
   198e6:	b.n	19794 <btrfs_check_leaf@@Base+0x724>
   198e8:	mla	r1, r0, r2, ip
   198ec:	adds	r2, #1
   198ee:	ldr.w	lr, [r1, #21]
   198f2:	sub.w	r3, r3, lr
   198f6:	str.w	r3, [r1, #17]
   198fa:	b.n	19834 <btrfs_check_leaf@@Base+0x7c4>
   198fc:	ldr	r0, [sp, #44]	; 0x2c
   198fe:	bl	16c20 <free_extent_buffer@@Base>
   19902:	ldr	r3, [r4, #32]
   19904:	subs	r5, r3, r5
   19906:	str	r5, [r4, #32]
   19908:	b.n	1987e <btrfs_check_leaf@@Base+0x80e>
   1990a:	mov	r0, r7
   1990c:	add	sp, #76	; 0x4c
   1990e:	vpop	{d8}
   19912:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19916:	nop
   19918:			; <UNDEFINED> instruction: 0xb754
   1991a:	movs	r4, r0
   1991c:			; <UNDEFINED> instruction: 0xb74e
   1991e:	movs	r4, r0
   19920:	lsls	r4, r4, #8
   19922:	movs	r0, r0
   19924:	adds	r7, #98	; 0x62
   19926:	movs	r2, r0
   19928:	bx	r1
   1992a:	movs	r2, r0
   1992c:	adds	r6, #214	; 0xd6
   1992e:	movs	r2, r0
   19930:	adds	r3, #192	; 0xc0
   19932:	movs	r2, r0
   19934:	lsls	r4, r6, #8
   19936:	movs	r0, r0
   19938:	adds	r3, #146	; 0x92
   1993a:	movs	r2, r0
   1993c:	adds	r6, #126	; 0x7e
   1993e:	movs	r2, r0
   19940:	mov	r1, r4
   19942:	movs	r2, r0
   19944:	adds	r5, #184	; 0xb8
   19946:	movs	r2, r0
   19948:	adds	r2, #203	; 0xcb
   1994a:	movs	r2, r0
   1994c:	push	{r4, r5, r6, r7}
   1994e:	movs	r4, r0
   19950:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19954:	mov	r5, r3
   19956:	vpush	{d8}
   1995a:	mov	r6, r1
   1995c:	ldr.w	r3, [pc, #1264]	; 19e50 <btrfs_check_leaf@@Base+0xde0>
   19960:	sub	sp, #116	; 0x74
   19962:	str	r2, [sp, #48]	; 0x30
   19964:	ldr.w	r2, [pc, #1260]	; 19e54 <btrfs_check_leaf@@Base+0xde4>
   19968:	str	r0, [sp, #44]	; 0x2c
   1996a:	add	r2, pc
   1996c:	ldr	r3, [r2, r3]
   1996e:	ldr	r3, [r3, #0]
   19970:	str	r3, [sp, #108]	; 0x6c
   19972:	mov.w	r3, #0
   19976:	ldr	r3, [sp, #164]	; 0xa4
   19978:	cbz	r3, 1999e <btrfs_check_leaf@@Base+0x92e>
   1997a:	ldr	r2, [r5, #0]
   1997c:	movs	r1, #25
   1997e:	ldr	r3, [r5, #32]
   19980:	mla	r3, r1, r3, r2
   19984:	ldr.w	r2, [r3, #218]	; 0xda
   19988:	ldr	r3, [sp, #160]	; 0xa0
   1998a:	add	r3, r1
   1998c:	add	r2, r3
   1998e:	ldr.w	r3, [r6, #464]	; 0x1d0
   19992:	ldr.w	r3, [r3, #384]	; 0x180
   19996:	subs	r3, #101	; 0x65
   19998:	cmp	r2, r3
   1999a:	bhi.w	19e3c <btrfs_check_leaf@@Base+0xdcc>
   1999e:	ldr	r3, [sp, #160]	; 0xa0
   199a0:	cmp	r3, #0
   199a2:	bne.n	19a78 <btrfs_check_leaf@@Base+0xa08>
   199a4:	ldr	r3, [r5, #4]
   199a6:	cbnz	r3, 199bc <btrfs_check_leaf@@Base+0x94c>
   199a8:	ldr	r0, [sp, #44]	; 0x2c
   199aa:	movs	r3, #1
   199ac:	mov	r2, r5
   199ae:	mov	r1, r6
   199b0:	bl	17ec2 <add_root_to_dirty_list@@Base+0x2e>
   199b4:	mov	r9, r0
   199b6:	cmp	r0, #0
   199b8:	bne.w	19ac0 <btrfs_check_leaf@@Base+0xa50>
   199bc:	movs	r3, #0
   199be:	str	r3, [sp, #52]	; 0x34
   199c0:	mov	r9, r3
   199c2:	add	r3, sp, #68	; 0x44
   199c4:	vmov	s16, r3
   199c8:	ldr.w	r3, [pc, #1164]	; 19e58 <btrfs_check_leaf@@Base+0xde8>
   199cc:	add	r3, pc
   199ce:	addw	r3, r3, #275	; 0x113
   199d2:	vmov	s17, r3
   199d6:	ldr.w	r8, [r5]
   199da:	ldr.w	fp, [r5, #32]
   199de:	ldr.w	r3, [r8, #192]	; 0xc0
   199e2:	str	r3, [sp, #32]
   199e4:	adds	r3, #1
   199e6:	cmp.w	fp, r3, lsr #1
   199ea:	mov.w	sl, r3, lsr #1
   199ee:	blt.w	19b2e <btrfs_check_leaf@@Base+0xabe>
   199f2:	ldr	r3, [sp, #32]
   199f4:	cmp	r3, #1
   199f6:	bne.n	19ad6 <btrfs_check_leaf@@Base+0xa66>
   199f8:	ldr	r3, [sp, #32]
   199fa:	cmp	fp, r3
   199fc:	bcc.n	19afa <btrfs_check_leaf@@Base+0xa8a>
   199fe:	ldr	r3, [sp, #48]	; 0x30
   19a00:	movs	r7, #0
   19a02:	ldr.w	r2, [r3, #9]
   19a06:	ldr.w	r3, [r3, #13]
   19a0a:	str.w	r2, [sp, #77]	; 0x4d
   19a0e:	str.w	r3, [sp, #81]	; 0x51
   19a12:	ldr	r3, [sp, #48]	; 0x30
   19a14:	ldrb	r3, [r3, #8]
   19a16:	strb.w	r3, [sp, #76]	; 0x4c
   19a1a:	ldr	r3, [sp, #48]	; 0x30
   19a1c:	ldr	r2, [r3, #0]
   19a1e:	ldr	r3, [r3, #4]
   19a20:	strd	r2, r3, [sp, #68]	; 0x44
   19a24:	movs	r2, #0
   19a26:	movs	r3, #0
   19a28:	strd	r2, r3, [sp, #24]
   19a2c:	ldrd	r2, r3, [r8, #40]	; 0x28
   19a30:	vstr	s16, [sp, #8]
   19a34:	ldr.w	r1, [r6, #464]	; 0x1d0
   19a38:	strd	r2, r3, [sp, #16]
   19a3c:	movs	r3, #0
   19a3e:	ldr.w	r2, [r6, #447]	; 0x1bf
   19a42:	str	r3, [sp, #12]
   19a44:	ldr.w	r3, [r6, #451]	; 0x1c3
   19a48:	ldr	r0, [sp, #44]	; 0x2c
   19a4a:	strd	r2, r3, [sp]
   19a4e:	ldr.w	r2, [r1, #384]	; 0x180
   19a52:	mov	r1, r6
   19a54:	bl	22a64 <btrfs_alloc_free_block@@Base>
   19a58:	cmn.w	r0, #4096	; 0x1000
   19a5c:	mov	r4, r0
   19a5e:	bls.w	19b96 <btrfs_check_leaf@@Base+0xb26>
   19a62:	ldr	r1, [pc, #1016]	; (19e5c <btrfs_check_leaf@@Base+0xdec>)
   19a64:	movs	r3, #1
   19a66:	ldr	r0, [pc, #1016]	; (19e60 <btrfs_check_leaf@@Base+0xdf0>)
   19a68:	mov.w	r2, #2272	; 0x8e0
   19a6c:	add	r1, pc
   19a6e:	add.w	r1, r1, #264	; 0x108
   19a72:	add	r0, pc
   19a74:	bl	179da <rb_free_nodes@@Base+0xdc>
   19a78:	ldr	r3, [sp, #48]	; 0x30
   19a7a:	ldrb	r3, [r3, #8]
   19a7c:	cmp	r3, #84	; 0x54
   19a7e:	beq.n	199a4 <btrfs_check_leaf@@Base+0x934>
   19a80:	ldr	r3, [sp, #160]	; 0xa0
   19a82:	movs	r4, #0
   19a84:	ldr	r0, [sp, #44]	; 0x2c
   19a86:	mov	r2, r5
   19a88:	mov	r1, r6
   19a8a:	str	r4, [sp, #0]
   19a8c:	bl	193a8 <btrfs_check_leaf@@Base+0x338>
   19a90:	subs.w	r9, r0, #0
   19a94:	blt.n	19ac0 <btrfs_check_leaf@@Base+0xa50>
   19a96:	bne.n	19aac <btrfs_check_leaf@@Base+0xa3c>
   19a98:	ldr	r0, [r5, #0]
   19a9a:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   19a9e:	ldr	r3, [sp, #160]	; 0xa0
   19aa0:	cmp	r0, r3
   19aa2:	blt.w	199a4 <btrfs_check_leaf@@Base+0x934>
   19aa6:	mov.w	r9, #0
   19aaa:	b.n	19ac0 <btrfs_check_leaf@@Base+0xa50>
   19aac:	ldr	r3, [sp, #160]	; 0xa0
   19aae:	mov	r2, r5
   19ab0:	ldr	r0, [sp, #44]	; 0x2c
   19ab2:	mov	r1, r6
   19ab4:	str	r4, [sp, #0]
   19ab6:	bl	19620 <btrfs_check_leaf@@Base+0x5b0>
   19aba:	subs.w	r9, r0, #0
   19abe:	bge.n	19a98 <btrfs_check_leaf@@Base+0xa28>
   19ac0:	ldr	r2, [pc, #928]	; (19e64 <btrfs_check_leaf@@Base+0xdf4>)
   19ac2:	ldr	r3, [pc, #908]	; (19e50 <btrfs_check_leaf@@Base+0xde0>)
   19ac4:	add	r2, pc
   19ac6:	ldr	r3, [r2, r3]
   19ac8:	ldr	r2, [r3, #0]
   19aca:	ldr	r3, [sp, #108]	; 0x6c
   19acc:	eors	r2, r3
   19ace:	beq.w	19e42 <btrfs_check_leaf@@Base+0xdd2>
   19ad2:	blx	84cc <__stack_chk_fail@plt>
   19ad6:	ldr	r3, [sp, #32]
   19ad8:	mov	r1, sl
   19ada:	mov	r0, r8
   19adc:	sub.w	r2, r3, sl
   19ae0:	bl	17d60 <rb_free_nodes@@Base+0x462>
   19ae4:	ldr	r3, [sp, #160]	; 0xa0
   19ae6:	add	r0, r3
   19ae8:	ldr.w	r3, [r6, #464]	; 0x1d0
   19aec:	ldr.w	r3, [r3, #384]	; 0x180
   19af0:	subs	r3, #101	; 0x65
   19af2:	cmp	r0, r3
   19af4:	bhi.n	199f8 <btrfs_check_leaf@@Base+0x988>
   19af6:	movs	r7, #1
   19af8:	b.n	19b20 <btrfs_check_leaf@@Base+0xab0>
   19afa:	ldr	r3, [sp, #32]
   19afc:	mov	r1, fp
   19afe:	mov	r0, r8
   19b00:	mov	sl, fp
   19b02:	sub.w	r2, r3, fp
   19b06:	bl	17d60 <rb_free_nodes@@Base+0x462>
   19b0a:	ldr	r3, [sp, #160]	; 0xa0
   19b0c:	add	r0, r3
   19b0e:	ldr.w	r3, [r6, #464]	; 0x1d0
   19b12:	ldr.w	r3, [r3, #384]	; 0x180
   19b16:	subs	r3, #101	; 0x65
   19b18:	cmp	r0, r3
   19b1a:	ite	hi
   19b1c:	movhi	r7, #2
   19b1e:	movls	r7, #1
   19b20:	vmov	r1, s16
   19b24:	mov	r2, sl
   19b26:	mov	r0, r8
   19b28:	bl	17946 <rb_free_nodes@@Base+0x48>
   19b2c:	b.n	19a24 <btrfs_check_leaf@@Base+0x9b4>
   19b2e:	mov	r2, sl
   19b30:	movs	r1, #0
   19b32:	mov	r0, r8
   19b34:	bl	17d60 <rb_free_nodes@@Base+0x462>
   19b38:	ldr	r3, [sp, #160]	; 0xa0
   19b3a:	add	r0, r3
   19b3c:	ldr.w	r3, [r6, #464]	; 0x1d0
   19b40:	ldr.w	r3, [r3, #384]	; 0x180
   19b44:	subs	r3, #101	; 0x65
   19b46:	cmp	r0, r3
   19b48:	bls.n	19af6 <btrfs_check_leaf@@Base+0xa86>
   19b4a:	ldr	r3, [sp, #164]	; 0xa4
   19b4c:	cbnz	r3, 19b86 <btrfs_check_leaf@@Base+0xb16>
   19b4e:	ldr	r3, [sp, #160]	; 0xa0
   19b50:	cbz	r3, 19b86 <btrfs_check_leaf@@Base+0xb16>
   19b52:	cmp.w	fp, #0
   19b56:	beq.w	199fe <btrfs_check_leaf@@Base+0x98e>
   19b5a:	ldr	r3, [sp, #32]
   19b5c:	cmp	fp, r3
   19b5e:	beq.n	19b92 <btrfs_check_leaf@@Base+0xb22>
   19b60:	sub.w	r2, r3, fp
   19b64:	mov	r1, fp
   19b66:	mov	r0, r8
   19b68:	mov	sl, fp
   19b6a:	bl	17d60 <rb_free_nodes@@Base+0x462>
   19b6e:	ldr	r3, [sp, #160]	; 0xa0
   19b70:	add	r0, r3
   19b72:	ldr.w	r3, [r6, #464]	; 0x1d0
   19b76:	ldr.w	r3, [r3, #384]	; 0x180
   19b7a:	subs	r3, #101	; 0x65
   19b7c:	cmp	r0, r3
   19b7e:	ite	ls
   19b80:	movls	r7, #1
   19b82:	movhi	r7, #2
   19b84:	b.n	19b20 <btrfs_check_leaf@@Base+0xab0>
   19b86:	cmp.w	fp, #0
   19b8a:	bne.n	19b5a <btrfs_check_leaf@@Base+0xaea>
   19b8c:	movs	r7, #1
   19b8e:	mov	sl, r7
   19b90:	b.n	19b20 <btrfs_check_leaf@@Base+0xab0>
   19b92:	mov	sl, fp
   19b94:	b.n	19af6 <btrfs_check_leaf@@Base+0xa86>
   19b96:	movs	r2, #0
   19b98:	movs	r3, #101	; 0x65
   19b9a:	mov	r1, r2
   19b9c:	bl	173a2 <memset_extent_buffer@@Base>
   19ba0:	ldr	r3, [r4, #40]	; 0x28
   19ba2:	mov	r0, r4
   19ba4:	str.w	r3, [r4, #144]	; 0x90
   19ba8:	ldr	r3, [r4, #44]	; 0x2c
   19baa:	str.w	r3, [r4, #148]	; 0x94
   19bae:	ldr	r3, [sp, #44]	; 0x2c
   19bb0:	ldrd	r2, r3, [r3, #8]
   19bb4:	str.w	r2, [r4, #176]	; 0xb0
   19bb8:	str.w	r3, [r4, #180]	; 0xb4
   19bbc:	ldr.w	r2, [r4, #152]	; 0x98
   19bc0:	ldr.w	r3, [r4, #156]	; 0x9c
   19bc4:	bic.w	r3, r3, #4278190080	; 0xff000000
   19bc8:	str.w	r2, [r4, #152]	; 0x98
   19bcc:	orr.w	r3, r3, #16777216	; 0x1000000
   19bd0:	str.w	r3, [r4, #156]	; 0x9c
   19bd4:	ldr.w	r2, [r6, #447]	; 0x1bf
   19bd8:	ldr.w	r3, [r6, #451]	; 0x1c3
   19bdc:	str.w	r2, [r4, #184]	; 0xb8
   19be0:	movs	r2, #32
   19be2:	str.w	r3, [r4, #188]	; 0xbc
   19be6:	mov.w	r3, #0
   19bea:	strb.w	r3, [r4, #196]	; 0xc4
   19bee:	ldr.w	r3, [r6, #464]	; 0x1d0
   19bf2:	ldr.w	r1, [r3, #352]	; 0x160
   19bf6:	movs	r3, #16
   19bf8:	add	r1, r3
   19bfa:	bl	17330 <write_extent_buffer@@Base>
   19bfe:	ldr.w	r1, [r6, #464]	; 0x1d0
   19c02:	movs	r3, #16
   19c04:	movs	r2, #64	; 0x40
   19c06:	mov	r0, r4
   19c08:	bl	17330 <write_extent_buffer@@Base>
   19c0c:	ldr.w	r1, [r6, #464]	; 0x1d0
   19c10:	ldr.w	r2, [r6, #200]	; 0xc8
   19c14:	ldr.w	r3, [r6, #204]	; 0xcc
   19c18:	ldr.w	r1, [r1, #384]	; 0x180
   19c1c:	adds	r2, r2, r1
   19c1e:	str.w	r2, [r6, #200]	; 0xc8
   19c22:	adc.w	r3, r3, #0
   19c26:	str.w	r3, [r6, #204]	; 0xcc
   19c2a:	cmp	r7, #0
   19c2c:	bne.n	19cd2 <btrfs_check_leaf@@Base+0xc62>
   19c2e:	ldrd	r2, r3, [r4, #40]	; 0x28
   19c32:	cmp	fp, sl
   19c34:	ldr	r0, [sp, #44]	; 0x2c
   19c36:	add.w	r1, r6, #464	; 0x1d0
   19c3a:	strb.w	r7, [r4, #192]	; 0xc0
   19c3e:	add.w	r0, r0, #8
   19c42:	strd	r2, r3, [sp, #32]
   19c46:	strb.w	r7, [r4, #193]	; 0xc1
   19c4a:	strb.w	r7, [r4, #194]	; 0xc2
   19c4e:	strb.w	r7, [r4, #195]	; 0xc3
   19c52:	blt.n	19c8e <btrfs_check_leaf@@Base+0xc1e>
   19c54:	movs	r3, #1
   19c56:	str	r3, [sp, #12]
   19c58:	ldr	r3, [r5, #36]	; 0x24
   19c5a:	adds	r3, #1
   19c5c:	str	r3, [sp, #8]
   19c5e:	ldrd	r2, r3, [sp, #32]
   19c62:	strd	r2, r3, [sp]
   19c66:	mov	r2, r5
   19c68:	vmov	r3, s16
   19c6c:	bl	17a64 <rb_free_nodes@@Base+0x166>
   19c70:	cmp	r0, #0
   19c72:	it	ne
   19c74:	movne	r9, r0
   19c76:	ldr	r0, [r5, #0]
   19c78:	bl	16c20 <free_extent_buffer@@Base>
   19c7c:	ldr	r3, [r5, #36]	; 0x24
   19c7e:	str	r4, [r5, #0]
   19c80:	adds	r3, #1
   19c82:	str	r7, [r5, #32]
   19c84:	str	r3, [r5, #36]	; 0x24
   19c86:	mov	r0, r4
   19c88:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   19c8c:	b.n	19ac0 <btrfs_check_leaf@@Base+0xa50>
   19c8e:	ldr	r3, [r5, #36]	; 0x24
   19c90:	mov.w	r8, #1
   19c94:	str.w	r8, [sp, #12]
   19c98:	str	r3, [sp, #8]
   19c9a:	ldrd	r2, r3, [sp, #32]
   19c9e:	strd	r2, r3, [sp]
   19ca2:	mov	r2, r5
   19ca4:	vmov	r3, s16
   19ca8:	bl	17a64 <rb_free_nodes@@Base+0x166>
   19cac:	cmp	r0, #0
   19cae:	it	ne
   19cb0:	movne	r9, r0
   19cb2:	ldr	r0, [r5, #0]
   19cb4:	bl	16c20 <free_extent_buffer@@Base>
   19cb8:	ldr	r3, [r5, #36]	; 0x24
   19cba:	str	r4, [r5, #0]
   19cbc:	str	r7, [r5, #32]
   19cbe:	cmp	r3, #0
   19cc0:	bne.n	19c86 <btrfs_check_leaf@@Base+0xc16>
   19cc2:	vmov	r2, s16
   19cc6:	mov	r3, r8
   19cc8:	mov	r1, r5
   19cca:	mov	r0, r6
   19ccc:	bl	18e60 <btrfs_fixup_low_keys@@Base>
   19cd0:	b.n	19c86 <btrfs_check_leaf@@Base+0xc16>
   19cd2:	ldr	r3, [sp, #32]
   19cd4:	mov	r1, sl
   19cd6:	mov	r0, r8
   19cd8:	sub.w	r9, r3, sl
   19cdc:	str.w	r9, [r4, #192]	; 0xc0
   19ce0:	bl	1791c <rb_free_nodes@@Base+0x1e>
   19ce4:	mov	r1, r8
   19ce6:	str	r0, [sp, #32]
   19ce8:	ldr.w	r0, [r6, #464]	; 0x1d0
   19cec:	add.w	r0, r0, #384	; 0x180
   19cf0:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   19cf4:	ldr	r3, [sp, #32]
   19cf6:	movs	r2, #25
   19cf8:	mov	r1, r8
   19cfa:	subs	r3, r3, r0
   19cfc:	str	r3, [sp, #60]	; 0x3c
   19cfe:	mul.w	r3, r2, sl
   19d02:	str	r0, [sp, #56]	; 0x38
   19d04:	mul.w	r2, r2, r9
   19d08:	mov	r0, r4
   19d0a:	adds	r3, #101	; 0x65
   19d0c:	str	r2, [sp, #0]
   19d0e:	movs	r2, #101	; 0x65
   19d10:	bl	17342 <copy_extent_buffer@@Base>
   19d14:	ldr.w	r0, [r6, #464]	; 0x1d0
   19d18:	ldr	r3, [sp, #56]	; 0x38
   19d1a:	mov	r1, r8
   19d1c:	add.w	r0, r0, #384	; 0x180
   19d20:	ldr	r2, [r0, #0]
   19d22:	add	r2, r3
   19d24:	ldr	r3, [sp, #32]
   19d26:	subs	r2, r2, r3
   19d28:	str	r2, [sp, #32]
   19d2a:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   19d2e:	ldr	r3, [sp, #60]	; 0x3c
   19d30:	ldr	r2, [sp, #32]
   19d32:	mov	r1, r8
   19d34:	str	r3, [sp, #0]
   19d36:	add.w	r3, r0, #101	; 0x65
   19d3a:	mov	r0, r4
   19d3c:	bl	17342 <copy_extent_buffer@@Base>
   19d40:	mov	r1, sl
   19d42:	mov	r0, r8
   19d44:	bl	1791c <rb_free_nodes@@Base+0x1e>
   19d48:	ldr.w	r3, [r6, #464]	; 0x1d0
   19d4c:	add.w	r2, r4, #197	; 0xc5
   19d50:	ldr.w	r3, [r3, #384]	; 0x180
   19d54:	subs	r3, #101	; 0x65
   19d56:	subs	r0, r3, r0
   19d58:	movs	r3, #0
   19d5a:	cmp	r9, r3
   19d5c:	bgt.n	19e24 <btrfs_check_leaf@@Base+0xdb4>
   19d5e:	add	r3, sp, #88	; 0x58
   19d60:	movs	r2, #0
   19d62:	mov	r0, r4
   19d64:	str.w	sl, [r8, #192]	; 0xc0
   19d68:	mov	r1, r3
   19d6a:	str	r3, [sp, #32]
   19d6c:	bl	17946 <rb_free_nodes@@Base+0x48>
   19d70:	movs	r2, #1
   19d72:	str	r2, [sp, #12]
   19d74:	ldr	r2, [r5, #36]	; 0x24
   19d76:	ldr	r3, [sp, #32]
   19d78:	adds	r2, #1
   19d7a:	str	r2, [sp, #8]
   19d7c:	ldrd	r0, r1, [r4, #40]	; 0x28
   19d80:	mov	r2, r5
   19d82:	strd	r0, r1, [sp]
   19d86:	add.w	r1, r6, #464	; 0x1d0
   19d8a:	ldr	r0, [sp, #44]	; 0x2c
   19d8c:	adds	r0, #8
   19d8e:	bl	17a64 <rb_free_nodes@@Base+0x166>
   19d92:	mov	r9, r0
   19d94:	mov	r0, r4
   19d96:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   19d9a:	mov	r0, r8
   19d9c:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   19da0:	ldr	r3, [r5, #32]
   19da2:	ldr	r0, [pc, #196]	; (19e68 <btrfs_check_leaf@@Base+0xdf8>)
   19da4:	movw	r2, #2154	; 0x86a
   19da8:	subs.w	r3, r3, fp
   19dac:	vmov	r1, s17
   19db0:	add	r0, pc
   19db2:	it	ne
   19db4:	movne	r3, #1
   19db6:	bl	17a14 <rb_free_nodes@@Base+0x116>
   19dba:	cmp	fp, sl
   19dbc:	blt.n	19e34 <btrfs_check_leaf@@Base+0xdc4>
   19dbe:	ldr	r0, [r5, #0]
   19dc0:	bl	16c20 <free_extent_buffer@@Base>
   19dc4:	ldr	r3, [r5, #32]
   19dc6:	str	r4, [r5, #0]
   19dc8:	sub.w	r3, r3, sl
   19dcc:	str	r3, [r5, #32]
   19dce:	ldr	r3, [r5, #36]	; 0x24
   19dd0:	adds	r3, #1
   19dd2:	str	r3, [r5, #36]	; 0x24
   19dd4:	ldr	r3, [r5, #32]
   19dd6:	movw	r2, #2165	; 0x875
   19dda:	ldr	r4, [pc, #144]	; (19e6c <btrfs_check_leaf@@Base+0xdfc>)
   19ddc:	ldr	r0, [pc, #144]	; (19e70 <btrfs_check_leaf@@Base+0xe00>)
   19dde:	add	r4, pc
   19de0:	lsrs	r3, r3, #31
   19de2:	addw	r1, r4, #275	; 0x113
   19de6:	add	r0, pc
   19de8:	bl	17a14 <rb_free_nodes@@Base+0x116>
   19dec:	ldr	r0, [pc, #132]	; (19e74 <btrfs_check_leaf@@Base+0xe04>)
   19dee:	add.w	r1, r4, #264	; 0x108
   19df2:	mov	r3, r9
   19df4:	add	r0, pc
   19df6:	movw	r2, #2325	; 0x915
   19dfa:	str	r1, [sp, #32]
   19dfc:	bl	17a14 <rb_free_nodes@@Base+0x116>
   19e00:	cmp	r7, #2
   19e02:	bne.w	19ac0 <btrfs_check_leaf@@Base+0xa50>
   19e06:	ldr	r3, [sp, #52]	; 0x34
   19e08:	movw	r2, #2328	; 0x918
   19e0c:	ldr	r0, [pc, #104]	; (19e78 <btrfs_check_leaf@@Base+0xe08>)
   19e0e:	subs	r3, #0
   19e10:	ldr	r1, [sp, #32]
   19e12:	add	r0, pc
   19e14:	it	ne
   19e16:	movne	r3, #1
   19e18:	bl	17a14 <rb_free_nodes@@Base+0x116>
   19e1c:	ldr	r3, [sp, #52]	; 0x34
   19e1e:	adds	r3, #1
   19e20:	str	r3, [sp, #52]	; 0x34
   19e22:	b.n	199d6 <btrfs_check_leaf@@Base+0x966>
   19e24:	ldr.w	r1, [r2, #17]
   19e28:	adds	r3, #1
   19e2a:	adds	r2, #25
   19e2c:	add	r1, r0
   19e2e:	str.w	r1, [r2, #-8]
   19e32:	b.n	19d5a <btrfs_check_leaf@@Base+0xcea>
   19e34:	mov	r0, r4
   19e36:	bl	16c20 <free_extent_buffer@@Base>
   19e3a:	b.n	19dd4 <btrfs_check_leaf@@Base+0xd64>
   19e3c:	mvn.w	r9, #74	; 0x4a
   19e40:	b.n	19ac0 <btrfs_check_leaf@@Base+0xa50>
   19e42:	mov	r0, r9
   19e44:	add	sp, #116	; 0x74
   19e46:	vpop	{d8}
   19e4a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19e4e:	nop
   19e50:	lsls	r4, r4, #8
   19e52:	movs	r0, r0
   19e54:	push	{r1, r2, r3, r4}
   19e56:	movs	r4, r0
   19e58:	adds	r4, #116	; 0x74
   19e5a:	movs	r2, r0
   19e5c:	adds	r3, #212	; 0xd4
   19e5e:	movs	r2, r0
   19e60:	muls	r1, r7
   19e62:	movs	r2, r0
   19e64:	uxtb	r4, r0
   19e66:	movs	r4, r0
   19e68:	cmp	r5, #188	; 0xbc
   19e6a:	movs	r2, r0
   19e6c:	adds	r0, #98	; 0x62
   19e6e:	movs	r2, r0
   19e70:	cmp	r5, #115	; 0x73
   19e72:	movs	r2, r0
   19e74:	lsrs	r7, r7, #4
   19e76:	movs	r2, r0
   19e78:	cmp	r5, #113	; 0x71
   19e7a:	movs	r2, r0

00019e7c <btrfs_truncate_item@@Base>:
   19e7c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19e80:	sub	sp, #60	; 0x3c
   19e82:	mov	r6, r2
   19e84:	ldr	r2, [pc, #392]	; (1a010 <btrfs_truncate_item@@Base+0x194>)
   19e86:	str	r3, [sp, #24]
   19e88:	mov.w	sl, #25
   19e8c:	ldr	r3, [pc, #388]	; (1a014 <btrfs_truncate_item@@Base+0x198>)
   19e8e:	add	r2, pc
   19e90:	ldr	r4, [r1, #0]
   19e92:	mov	r9, r0
   19e94:	ldr	r7, [r1, #32]
   19e96:	mov	r8, r1
   19e98:	ldr	r3, [r2, r3]
   19e9a:	ldr	r3, [r3, #0]
   19e9c:	str	r3, [sp, #52]	; 0x34
   19e9e:	mov.w	r3, #0
   19ea2:	add.w	r3, r4, #96	; 0x60
   19ea6:	str	r3, [sp, #16]
   19ea8:	mla	r3, sl, r7, r3
   19eac:	add.w	r2, r3, #101	; 0x65
   19eb0:	str	r2, [sp, #12]
   19eb2:	ldr.w	r5, [r3, #122]	; 0x7a
   19eb6:	cmp	r6, r5
   19eb8:	beq.w	19ff4 <btrfs_truncate_item@@Base+0x178>
   19ebc:	ldr.w	r0, [r0, #464]	; 0x1d0
   19ec0:	mov	r1, r4
   19ec2:	ldr.w	fp, [r4, #192]	; 0xc0
   19ec6:	add.w	r0, r0, #384	; 0x180
   19eca:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   19ece:	ldr	r3, [sp, #12]
   19ed0:	ldr	r1, [pc, #324]	; (1a018 <btrfs_truncate_item@@Base+0x19c>)
   19ed2:	mov.w	r2, #2480	; 0x9b0
   19ed6:	ldr.w	r3, [r3, #17]
   19eda:	add	r1, pc
   19edc:	add.w	r1, r1, #290	; 0x122
   19ee0:	str	r1, [sp, #28]
   19ee2:	str	r3, [sp, #20]
   19ee4:	subs	r3, r5, r6
   19ee6:	str	r3, [sp, #8]
   19ee8:	lsrs	r3, r7, #31
   19eea:	str	r0, [sp, #4]
   19eec:	ldr	r0, [pc, #300]	; (1a01c <btrfs_truncate_item@@Base+0x1a0>)
   19eee:	add	r0, pc
   19ef0:	bl	17a14 <rb_free_nodes@@Base+0x116>
   19ef4:	cmp	r7, fp
   19ef6:	ldr	r0, [pc, #296]	; (1a020 <btrfs_truncate_item@@Base+0x1a4>)
   19ef8:	movw	r2, #2481	; 0x9b1
   19efc:	ite	cc
   19efe:	movcc	r3, #0
   19f00:	movcs	r3, #1
   19f02:	add	r0, pc
   19f04:	ldr	r1, [sp, #28]
   19f06:	bl	17a14 <rb_free_nodes@@Base+0x116>
   19f0a:	add.w	r0, r4, #197	; 0xc5
   19f0e:	mov	r3, r7
   19f10:	cmp	r3, fp
   19f12:	bcc.n	19f68 <btrfs_truncate_item@@Base+0xec>
   19f14:	ldr	r3, [sp, #4]
   19f16:	add.w	sl, r3, #101	; 0x65
   19f1a:	ldr	r3, [sp, #8]
   19f1c:	add.w	fp, r3, sl
   19f20:	ldr	r3, [sp, #24]
   19f22:	cbz	r3, 19f7c <btrfs_truncate_item@@Base+0x100>
   19f24:	ldr	r3, [sp, #20]
   19f26:	mov	r1, fp
   19f28:	ldr	r2, [sp, #4]
   19f2a:	mov	r0, r4
   19f2c:	add	r3, r6
   19f2e:	subs	r3, r3, r2
   19f30:	mov	r2, sl
   19f32:	bl	1738c <memmove_extent_buffer@@Base>
   19f36:	ldr	r3, [sp, #12]
   19f38:	mov	r0, r4
   19f3a:	str.w	r6, [r3, #21]
   19f3e:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   19f42:	mov	r0, r4
   19f44:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   19f48:	cmp	r0, #0
   19f4a:	bge.n	19ff4 <btrfs_truncate_item@@Base+0x178>
   19f4c:	mov	r0, r4
   19f4e:	bl	25020 <btrfs_print_leaf@@Base>
   19f52:	ldr	r1, [pc, #208]	; (1a024 <btrfs_truncate_item@@Base+0x1a8>)
   19f54:	ldr	r0, [pc, #208]	; (1a028 <btrfs_truncate_item@@Base+0x1ac>)
   19f56:	movs	r3, #1
   19f58:	add	r1, pc
   19f5a:	movw	r2, #2542	; 0x9ee
   19f5e:	add.w	r1, r1, #290	; 0x122
   19f62:	add	r0, pc
   19f64:	bl	179da <rb_free_nodes@@Base+0xdc>
   19f68:	mla	r1, sl, r3, r0
   19f6c:	ldr	r2, [sp, #8]
   19f6e:	adds	r3, #1
   19f70:	ldr.w	ip, [r1, #17]
   19f74:	add	r2, ip
   19f76:	str.w	r2, [r1, #17]
   19f7a:	b.n	19f10 <btrfs_truncate_item@@Base+0x94>
   19f7c:	add	r1, sp, #32
   19f7e:	mov	r2, r7
   19f80:	mov	r0, r4
   19f82:	bl	17946 <rb_free_nodes@@Base+0x48>
   19f86:	ldrb.w	r3, [sp, #40]	; 0x28
   19f8a:	cmp	r3, #108	; 0x6c
   19f8c:	bne.n	19faa <btrfs_truncate_item@@Base+0x12e>
   19f8e:	ldr	r3, [sp, #12]
   19f90:	ldr.w	r1, [r3, #17]
   19f94:	ldr	r3, [sp, #16]
   19f96:	adds	r1, #101	; 0x65
   19f98:	subs	r2, r1, r5
   19f9a:	add	r2, r6
   19f9c:	add	r3, r2
   19f9e:	ldrb	r3, [r3, #20]
   19fa0:	cbnz	r3, 19faa <btrfs_truncate_item@@Base+0x12e>
   19fa2:	movs	r3, #21
   19fa4:	mov	r0, r4
   19fa6:	bl	1738c <memmove_extent_buffer@@Base>
   19faa:	ldr	r2, [sp, #4]
   19fac:	mov	r1, fp
   19fae:	ldr	r3, [sp, #20]
   19fb0:	mov	r0, r4
   19fb2:	add	r5, sp, #32
   19fb4:	subs	r3, r3, r2
   19fb6:	mov	r2, sl
   19fb8:	bl	1738c <memmove_extent_buffer@@Base>
   19fbc:	ldr.w	r2, [sp, #41]	; 0x29
   19fc0:	ldr.w	r3, [sp, #45]	; 0x2d
   19fc4:	mov	r0, r4
   19fc6:	mov	r1, r2
   19fc8:	mov	r2, r3
   19fca:	ldr	r3, [sp, #8]
   19fcc:	adds	r1, r1, r3
   19fce:	str.w	r1, [sp, #41]	; 0x29
   19fd2:	adc.w	r2, r2, #0
   19fd6:	mov	r1, r5
   19fd8:	str.w	r2, [sp, #45]	; 0x2d
   19fdc:	mov	r2, r7
   19fde:	bl	1793a <rb_free_nodes@@Base+0x3c>
   19fe2:	cmp	r7, #0
   19fe4:	bne.n	19f36 <btrfs_truncate_item@@Base+0xba>
   19fe6:	movs	r3, #1
   19fe8:	mov	r2, r5
   19fea:	mov	r1, r8
   19fec:	mov	r0, r9
   19fee:	bl	18e60 <btrfs_fixup_low_keys@@Base>
   19ff2:	b.n	19f36 <btrfs_truncate_item@@Base+0xba>
   19ff4:	ldr	r2, [pc, #52]	; (1a02c <btrfs_truncate_item@@Base+0x1b0>)
   19ff6:	ldr	r3, [pc, #28]	; (1a014 <btrfs_truncate_item@@Base+0x198>)
   19ff8:	add	r2, pc
   19ffa:	ldr	r3, [r2, r3]
   19ffc:	ldr	r2, [r3, #0]
   19ffe:	ldr	r3, [sp, #52]	; 0x34
   1a000:	eors	r2, r3
   1a002:	beq.n	1a008 <btrfs_truncate_item@@Base+0x18c>
   1a004:	blx	84cc <__stack_chk_fail@plt>
   1a008:	movs	r0, #0
   1a00a:	add	sp, #60	; 0x3c
   1a00c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a010:	add	r6, sp, #1000	; 0x3e8
   1a012:	movs	r4, r0
   1a014:	lsls	r4, r4, #8
   1a016:	movs	r0, r0
   1a018:	cmp	r7, #102	; 0x66
   1a01a:	movs	r2, r0
   1a01c:	cmp	r4, #166	; 0xa6
   1a01e:	movs	r2, r0
   1a020:	cmp	r4, #155	; 0x9b
   1a022:	movs	r2, r0
   1a024:	cmp	r6, #232	; 0xe8
   1a026:	movs	r2, r0
   1a028:	subs	r6, #137	; 0x89
   1a02a:	movs	r2, r0
   1a02c:	add	r5, sp, #576	; 0x240
   1a02e:	movs	r4, r0

0001a030 <btrfs_extend_item@@Base>:
   1a030:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a034:	mov	r5, r1
   1a036:	ldr	r4, [r1, #0]
   1a038:	sub	sp, #20
   1a03a:	ldr.w	r0, [r0, #464]	; 0x1d0
   1a03e:	mov	r6, r2
   1a040:	ldr.w	fp, [pc, #256]	; 1a144 <btrfs_extend_item@@Base+0x114>
   1a044:	mov	r1, r4
   1a046:	add.w	r0, r0, #384	; 0x180
   1a04a:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   1a04e:	ldr.w	sl, [r4, #192]	; 0xc0
   1a052:	add	fp, pc
   1a054:	mov	r7, r0
   1a056:	mov	r0, r4
   1a058:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1a05c:	cmp	r0, r6
   1a05e:	bcs.n	1a07c <btrfs_extend_item@@Base+0x4c>
   1a060:	mov	r0, r4
   1a062:	bl	25020 <btrfs_print_leaf@@Base>
   1a066:	ldr	r1, [pc, #224]	; (1a148 <btrfs_extend_item@@Base+0x118>)
   1a068:	ldr	r0, [pc, #224]	; (1a14c <btrfs_extend_item@@Base+0x11c>)
   1a06a:	movs	r3, #1
   1a06c:	add	r1, pc
   1a06e:	movw	r2, #2567	; 0xa07
   1a072:	add.w	r1, r1, #310	; 0x136
   1a076:	add	r0, pc
   1a078:	bl	179da <rb_free_nodes@@Base+0xdc>
   1a07c:	ldr	r5, [r5, #32]
   1a07e:	mov	r0, r4
   1a080:	ldr.w	r8, [pc, #204]	; 1a150 <btrfs_extend_item@@Base+0x120>
   1a084:	mov	r1, r5
   1a086:	add	r8, pc
   1a088:	bl	1791c <rb_free_nodes@@Base+0x1e>
   1a08c:	add.w	r8, r8, #310	; 0x136
   1a090:	lsrs	r3, r5, #31
   1a092:	movw	r2, #2572	; 0xa0c
   1a096:	mov	r1, r8
   1a098:	mov	r9, r0
   1a09a:	ldr	r0, [pc, #184]	; (1a154 <btrfs_extend_item@@Base+0x124>)
   1a09c:	add	r0, pc
   1a09e:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1a0a2:	cmp	r5, sl
   1a0a4:	str	r5, [sp, #12]
   1a0a6:	bcs.n	1a0fe <btrfs_extend_item@@Base+0xce>
   1a0a8:	add.w	r1, r4, #197	; 0xc5
   1a0ac:	movs	r0, #25
   1a0ae:	cmp	r5, sl
   1a0b0:	bne.n	1a12a <btrfs_extend_item@@Base+0xfa>
   1a0b2:	add.w	r2, r7, #101	; 0x65
   1a0b6:	sub.w	r3, r9, r7
   1a0ba:	subs	r1, r2, r6
   1a0bc:	mov	r0, r4
   1a0be:	bl	1738c <memmove_extent_buffer@@Base>
   1a0c2:	ldr	r2, [sp, #12]
   1a0c4:	movs	r3, #25
   1a0c6:	mov	r0, r4
   1a0c8:	mla	r3, r3, r2, r4
   1a0cc:	ldr.w	r2, [r3, #218]	; 0xda
   1a0d0:	add	r6, r2
   1a0d2:	str.w	r6, [r3, #218]	; 0xda
   1a0d6:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1a0da:	mov	r0, r4
   1a0dc:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1a0e0:	cmp	r0, #0
   1a0e2:	bge.n	1a13c <btrfs_extend_item@@Base+0x10c>
   1a0e4:	mov	r0, r4
   1a0e6:	bl	25020 <btrfs_print_leaf@@Base>
   1a0ea:	ldr	r1, [pc, #108]	; (1a158 <btrfs_extend_item@@Base+0x128>)
   1a0ec:	ldr	r0, [pc, #108]	; (1a15c <btrfs_extend_item@@Base+0x12c>)
   1a0ee:	movs	r3, #1
   1a0f0:	add	r1, pc
   1a0f2:	movw	r2, #2604	; 0xa2c
   1a0f6:	add.w	r1, r1, #310	; 0x136
   1a0fa:	add	r0, pc
   1a0fc:	b.n	1a078 <btrfs_extend_item@@Base+0x48>
   1a0fe:	mov	r0, r4
   1a100:	bl	25020 <btrfs_print_leaf@@Base>
   1a104:	ldr	r3, [pc, #88]	; (1a160 <btrfs_extend_item@@Base+0x130>)
   1a106:	ldr	r2, [pc, #92]	; (1a164 <btrfs_extend_item@@Base+0x134>)
   1a108:	movs	r1, #1
   1a10a:	ldr.w	r0, [fp, r3]
   1a10e:	add	r2, pc
   1a110:	mov	r3, r5
   1a112:	str.w	sl, [sp]
   1a116:	ldr	r0, [r0, #0]
   1a118:	blx	881c <__fprintf_chk@plt+0x4>
   1a11c:	ldr	r0, [pc, #72]	; (1a168 <btrfs_extend_item@@Base+0x138>)
   1a11e:	movs	r3, #1
   1a120:	mov.w	r2, #2576	; 0xa10
   1a124:	add	r0, pc
   1a126:	mov	r1, r8
   1a128:	b.n	1a078 <btrfs_extend_item@@Base+0x48>
   1a12a:	mla	r2, r0, r5, r1
   1a12e:	adds	r5, #1
   1a130:	ldr.w	r3, [r2, #17]
   1a134:	subs	r3, r3, r6
   1a136:	str.w	r3, [r2, #17]
   1a13a:	b.n	1a0ae <btrfs_extend_item@@Base+0x7e>
   1a13c:	movs	r0, #0
   1a13e:	add	sp, #20
   1a140:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a144:	add	r5, sp, #216	; 0xd8
   1a146:	movs	r4, r0
   1a148:	cmp	r5, #212	; 0xd4
   1a14a:	movs	r2, r0
   1a14c:	subs	r5, #117	; 0x75
   1a14e:	movs	r2, r0
   1a150:	cmp	r5, #186	; 0xba
   1a152:	movs	r2, r0
   1a154:	cmp	r2, #248	; 0xf8
   1a156:	movs	r2, r0
   1a158:	cmp	r5, #80	; 0x50
   1a15a:	movs	r2, r0
   1a15c:	subs	r4, #241	; 0xf1
   1a15e:	movs	r2, r0
   1a160:	lsls	r4, r6, #8
   1a162:	movs	r0, r0
   1a164:	cmp	r2, #159	; 0x9f
   1a166:	movs	r2, r0
   1a168:	subs	r4, #199	; 0xc7
   1a16a:	movs	r2, r0

0001a16c <btrfs_del_ptr@@Base>:
   1a16c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1a170:	mov	r8, r2
   1a172:	ldr	r2, [pc, #180]	; (1a228 <btrfs_del_ptr@@Base+0xbc>)
   1a174:	mov	r5, r3
   1a176:	ldr	r3, [pc, #180]	; (1a22c <btrfs_del_ptr@@Base+0xc0>)
   1a178:	sub	sp, #28
   1a17a:	add	r2, pc
   1a17c:	ldr.w	r4, [r1, r8, lsl #2]
   1a180:	mov	r6, r0
   1a182:	mov	r7, r1
   1a184:	ldr	r3, [r2, r3]
   1a186:	ldr	r3, [r3, #0]
   1a188:	str	r3, [sp, #20]
   1a18a:	mov.w	r3, #0
   1a18e:	ldr.w	r3, [r4, #192]	; 0xc0
   1a192:	add.w	r9, r3, #4294967295	; 0xffffffff
   1a196:	cmp	r9, r5
   1a198:	bls.n	1a1b2 <btrfs_del_ptr@@Base+0x46>
   1a19a:	subs	r3, r3, r5
   1a19c:	add.w	r1, r5, r5, lsl #5
   1a1a0:	add.w	r2, r1, #134	; 0x86
   1a1a4:	mov	r0, r4
   1a1a6:	add.w	r3, r3, r3, lsl #5
   1a1aa:	adds	r1, #101	; 0x65
   1a1ac:	subs	r3, #33	; 0x21
   1a1ae:	bl	1738c <memmove_extent_buffer@@Base>
   1a1b2:	str.w	r9, [r4, #192]	; 0xc0
   1a1b6:	cmp.w	r9, #0
   1a1ba:	bne.n	1a1fe <btrfs_del_ptr@@Base+0x92>
   1a1bc:	ldr	r3, [r6, #0]
   1a1be:	cmp	r3, r4
   1a1c0:	bne.n	1a1fe <btrfs_del_ptr@@Base+0x92>
   1a1c2:	ldrb.w	r3, [r4, #196]	; 0xc4
   1a1c6:	movw	r2, #2775	; 0xad7
   1a1ca:	ldr	r1, [pc, #100]	; (1a230 <btrfs_del_ptr@@Base+0xc4>)
   1a1cc:	subs	r3, #1
   1a1ce:	ldr	r0, [pc, #100]	; (1a234 <btrfs_del_ptr@@Base+0xc8>)
   1a1d0:	add	r1, pc
   1a1d2:	add.w	r1, r1, #328	; 0x148
   1a1d6:	add	r0, pc
   1a1d8:	it	ne
   1a1da:	movne	r3, #1
   1a1dc:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1a1e0:	strb.w	r9, [r4, #196]	; 0xc4
   1a1e4:	mov	r0, r4
   1a1e6:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1a1ea:	ldr	r2, [pc, #76]	; (1a238 <btrfs_del_ptr@@Base+0xcc>)
   1a1ec:	ldr	r3, [pc, #60]	; (1a22c <btrfs_del_ptr@@Base+0xc0>)
   1a1ee:	add	r2, pc
   1a1f0:	ldr	r3, [r2, r3]
   1a1f2:	ldr	r2, [r3, #0]
   1a1f4:	ldr	r3, [sp, #20]
   1a1f6:	eors	r2, r3
   1a1f8:	beq.n	1a21e <btrfs_del_ptr@@Base+0xb2>
   1a1fa:	blx	84cc <__stack_chk_fail@plt>
   1a1fe:	cmp	r5, #0
   1a200:	bne.n	1a1e4 <btrfs_del_ptr@@Base+0x78>
   1a202:	mov	r2, r5
   1a204:	mov	r5, sp
   1a206:	mov	r1, r5
   1a208:	mov	r0, r4
   1a20a:	bl	17952 <rb_free_nodes@@Base+0x54>
   1a20e:	add.w	r3, r8, #1
   1a212:	mov	r2, r5
   1a214:	mov	r1, r7
   1a216:	mov	r0, r6
   1a218:	bl	18e60 <btrfs_fixup_low_keys@@Base>
   1a21c:	b.n	1a1e4 <btrfs_del_ptr@@Base+0x78>
   1a21e:	movs	r0, #0
   1a220:	add	sp, #28
   1a222:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1a226:	nop
   1a228:	add	r4, sp, #56	; 0x38
   1a22a:	movs	r4, r0
   1a22c:	lsls	r4, r4, #8
   1a22e:	movs	r0, r0
   1a230:	cmp	r4, #112	; 0x70
   1a232:	movs	r2, r0
   1a234:	cmp	r1, #246	; 0xf6
   1a236:	movs	r2, r0
   1a238:	add	r3, sp, #616	; 0x268
   1a23a:	movs	r4, r0

0001a23c <btrfs_search_slot@@Base>:
   1a23c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a240:	mov	fp, r3
   1a242:	vpush	{d8-d9}
   1a246:	mov	sl, r0
   1a248:	ldr.w	r3, [pc, #1208]	; 1a704 <btrfs_search_slot@@Base+0x4c8>
   1a24c:	mov	r4, r1
   1a24e:	sub	sp, #140	; 0x8c
   1a250:	str	r2, [sp, #56]	; 0x38
   1a252:	ldr.w	r2, [pc, #1204]	; 1a708 <btrfs_search_slot@@Base+0x4cc>
   1a256:	add	r2, pc
   1a258:	ldr	r3, [r2, r3]
   1a25a:	ldr	r3, [r3, #0]
   1a25c:	str	r3, [sp, #132]	; 0x84
   1a25e:	mov.w	r3, #0
   1a262:	ldrsb.w	r3, [fp, #64]	; 0x40
   1a266:	str	r3, [sp, #88]	; 0x58
   1a268:	ldr.w	r3, [r1, #464]	; 0x1d0
   1a26c:	vmov	s16, r3
   1a270:	ldrb.w	r3, [fp, #65]	; 0x41
   1a274:	str	r3, [sp, #60]	; 0x3c
   1a276:	cmp	r3, #0
   1a278:	beq.n	1a326 <btrfs_search_slot@@Base+0xea>
   1a27a:	ldr	r3, [sp, #192]	; 0xc0
   1a27c:	cmp	r3, #0
   1a27e:	ite	le
   1a280:	movle	r3, #0
   1a282:	movgt	r3, #1
   1a284:	ldr.w	r1, [pc, #1156]	; 1a70c <btrfs_search_slot@@Base+0x4d0>
   1a288:	movw	r2, #1173	; 0x495
   1a28c:	ldr.w	r0, [pc, #1152]	; 1a710 <btrfs_search_slot@@Base+0x4d4>
   1a290:	add	r1, pc
   1a292:	add.w	r1, r1, #342	; 0x156
   1a296:	add	r0, pc
   1a298:	str	r1, [sp, #40]	; 0x28
   1a29a:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1a29e:	ldr.w	r3, [fp]
   1a2a2:	movw	r2, #1174	; 0x496
   1a2a6:	ldr.w	r0, [pc, #1132]	; 1a714 <btrfs_search_slot@@Base+0x4d8>
   1a2aa:	subs	r3, #0
   1a2ac:	ldr	r1, [sp, #40]	; 0x28
   1a2ae:	add	r0, pc
   1a2b0:	it	ne
   1a2b2:	movne	r3, #1
   1a2b4:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1a2b8:	ldr	r3, [sp, #192]	; 0xc0
   1a2ba:	ldr	r2, [sp, #196]	; 0xc4
   1a2bc:	subs	r3, #0
   1a2be:	it	ne
   1a2c0:	movne	r3, #1
   1a2c2:	cmp	r2, #0
   1a2c4:	it	ne
   1a2c6:	movne	r3, #0
   1a2c8:	vmov	s19, r3
   1a2cc:	ldr	r3, [r4, #0]
   1a2ce:	ldr	r2, [r3, #80]	; 0x50
   1a2d0:	str	r3, [sp, #96]	; 0x60
   1a2d2:	adds	r2, #1
   1a2d4:	str	r2, [r3, #80]	; 0x50
   1a2d6:	ldr.w	r3, [pc, #1088]	; 1a718 <btrfs_search_slot@@Base+0x4dc>
   1a2da:	add	r3, pc
   1a2dc:	str	r3, [sp, #92]	; 0x5c
   1a2de:	ldr	r2, [sp, #96]	; 0x60
   1a2e0:	cmp	r2, #0
   1a2e2:	beq.w	1a4c4 <btrfs_search_slot@@Base+0x288>
   1a2e6:	ldr	r3, [sp, #196]	; 0xc4
   1a2e8:	ldrb.w	r5, [r2, #196]	; 0xc4
   1a2ec:	cbz	r3, 1a32a <btrfs_search_slot@@Base+0xee>
   1a2ee:	add.w	r3, fp, r5, lsl #2
   1a2f2:	add	r1, sp, #96	; 0x60
   1a2f4:	str	r1, [sp, #4]
   1a2f6:	mov	r0, sl
   1a2f8:	ldr	r1, [r3, #36]	; 0x24
   1a2fa:	str	r1, [sp, #0]
   1a2fc:	mov	r1, r4
   1a2fe:	ldr	r3, [r3, #4]
   1a300:	bl	18884 <btrfs_cow_block@@Base>
   1a304:	mov	r9, r0
   1a306:	cbz	r0, 1a32a <btrfs_search_slot@@Base+0xee>
   1a308:	ldr	r0, [sp, #96]	; 0x60
   1a30a:	bl	16c20 <free_extent_buffer@@Base>
   1a30e:	ldr.w	r2, [pc, #1036]	; 1a71c <btrfs_search_slot@@Base+0x4e0>
   1a312:	ldr	r3, [pc, #1008]	; (1a704 <btrfs_search_slot@@Base+0x4c8>)
   1a314:	add	r2, pc
   1a316:	ldr	r3, [r2, r3]
   1a318:	ldr	r2, [r3, #0]
   1a31a:	ldr	r3, [sp, #132]	; 0x84
   1a31c:	eors	r2, r3
   1a31e:	beq.w	1adaa <btrfs_search_slot@@Base+0xb6e>
   1a322:	blx	84cc <__stack_chk_fail@plt>
   1a326:	ldr	r3, [sp, #60]	; 0x3c
   1a328:	b.n	1a284 <btrfs_search_slot@@Base+0x48>
   1a32a:	ldr	r3, [sp, #92]	; 0x5c
   1a32c:	movw	r2, #1194	; 0x4aa
   1a330:	ldr	r0, [pc, #1004]	; (1a720 <btrfs_search_slot@@Base+0x4e4>)
   1a332:	add.w	r1, r3, #342	; 0x156
   1a336:	vmov	r3, s19
   1a33a:	add	r0, pc
   1a33c:	str	r1, [sp, #40]	; 0x28
   1a33e:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1a342:	ldr	r3, [sp, #96]	; 0x60
   1a344:	ldrb.w	r3, [r3, #196]	; 0xc4
   1a348:	cmp	r3, r5
   1a34a:	beq.n	1a35c <btrfs_search_slot@@Base+0x120>
   1a34c:	ldr	r0, [pc, #980]	; (1a724 <btrfs_search_slot@@Base+0x4e8>)
   1a34e:	movs	r3, #1
   1a350:	ldr	r1, [sp, #40]	; 0x28
   1a352:	movw	r2, #1196	; 0x4ac
   1a356:	add	r0, pc
   1a358:	bl	17a1e <rb_free_nodes@@Base+0x120>
   1a35c:	ldr	r3, [sp, #96]	; 0x60
   1a35e:	ldrb.w	r2, [r3, #196]	; 0xc4
   1a362:	str.w	r3, [fp, r2, lsl #2]
   1a366:	add.w	r8, fp, r2, lsl #2
   1a36a:	ldrb.w	r3, [fp, #67]	; 0x43
   1a36e:	strd	r2, r2, [sp, #40]	; 0x28
   1a372:	cmp	r3, #0
   1a374:	beq.n	1a3e0 <btrfs_search_slot@@Base+0x1a4>
   1a376:	ldr	r2, [sp, #44]	; 0x2c
   1a378:	add	r3, sp, #100	; 0x64
   1a37a:	ldr	r1, [sp, #56]	; 0x38
   1a37c:	ldr	r0, [sp, #96]	; 0x60
   1a37e:	bl	18b88 <btrfs_bin_search@@Base>
   1a382:	ldr	r2, [sp, #44]	; 0x2c
   1a384:	ldr	r3, [sp, #100]	; 0x64
   1a386:	mov	r9, r0
   1a388:	cmp	r2, #0
   1a38a:	bne.n	1a3f6 <btrfs_search_slot@@Base+0x1ba>
   1a38c:	str.w	r3, [fp, #32]
   1a390:	ldr	r3, [sp, #192]	; 0xc0
   1a392:	cmp	r3, #0
   1a394:	ble.n	1a30e <btrfs_search_slot@@Base+0xd2>
   1a396:	ldr	r0, [sp, #96]	; 0x60
   1a398:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1a39c:	ldr	r3, [sp, #192]	; 0xc0
   1a39e:	cmp	r0, r3
   1a3a0:	bge.n	1a30e <btrfs_search_slot@@Base+0xd2>
   1a3a2:	clz	r3, r9
   1a3a6:	mov	r1, r4
   1a3a8:	ldr	r2, [sp, #56]	; 0x38
   1a3aa:	mov	r0, sl
   1a3ac:	lsrs	r3, r3, #5
   1a3ae:	str	r3, [sp, #4]
   1a3b0:	ldr	r3, [sp, #192]	; 0xc0
   1a3b2:	str	r3, [sp, #0]
   1a3b4:	mov	r3, fp
   1a3b6:	bl	19950 <btrfs_check_leaf@@Base+0x8e0>
   1a3ba:	ldr	r1, [pc, #876]	; (1a728 <btrfs_search_slot@@Base+0x4ec>)
   1a3bc:	movw	r2, #1246	; 0x4de
   1a3c0:	add	r1, pc
   1a3c2:	add.w	r1, r1, #342	; 0x156
   1a3c6:	cmp	r0, #0
   1a3c8:	mov	r4, r0
   1a3ca:	ldr	r0, [pc, #864]	; (1a72c <btrfs_search_slot@@Base+0x4f0>)
   1a3cc:	ite	le
   1a3ce:	movle	r3, #0
   1a3d0:	movgt	r3, #1
   1a3d2:	add	r0, pc
   1a3d4:	cmp	r4, #0
   1a3d6:	it	ne
   1a3d8:	movne	r9, r4
   1a3da:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1a3de:	b.n	1a30e <btrfs_search_slot@@Base+0xd2>
   1a3e0:	vmov	r0, s16
   1a3e4:	mov	r1, fp
   1a3e6:	ldr	r2, [sp, #44]	; 0x2c
   1a3e8:	bl	19330 <btrfs_check_leaf@@Base+0x2c0>
   1a3ec:	cmp	r0, #0
   1a3ee:	beq.n	1a376 <btrfs_search_slot@@Base+0x13a>
   1a3f0:	mov.w	r9, #4294967295	; 0xffffffff
   1a3f4:	b.n	1a30e <btrfs_search_slot@@Base+0xd2>
   1a3f6:	cbz	r0, 1a402 <btrfs_search_slot@@Base+0x1c6>
   1a3f8:	cmp	r3, #0
   1a3fa:	itt	gt
   1a3fc:	addgt.w	r3, r3, #4294967295	; 0xffffffff
   1a400:	strgt	r3, [sp, #100]	; 0x64
   1a402:	ldr	r3, [sp, #100]	; 0x64
   1a404:	str	r3, [sp, #48]	; 0x30
   1a406:	str.w	r3, [r8, #32]
   1a40a:	ldrb.w	r3, [fp, #66]	; 0x42
   1a40e:	cbnz	r3, 1a418 <btrfs_search_slot@@Base+0x1dc>
   1a410:	ldr	r3, [sp, #192]	; 0xc0
   1a412:	cmp	r3, #0
   1a414:	ble.w	1a866 <btrfs_search_slot@@Base+0x62a>
   1a418:	vmov	r3, s16
   1a41c:	ldr.w	r2, [r3, #384]	; 0x180
   1a420:	ldr	r3, [pc, #732]	; (1a700 <btrfs_search_slot@@Base+0x4c4>)
   1a422:	subs	r2, #101	; 0x65
   1a424:	umull	r2, r3, r2, r3
   1a428:	ldr	r2, [sp, #96]	; 0x60
   1a42a:	ldr.w	r2, [r2, #192]	; 0xc0
   1a42e:	lsrs	r3, r3, #3
   1a430:	subs	r3, #3
   1a432:	cmp	r3, r2
   1a434:	bhi.w	1a866 <btrfs_search_slot@@Base+0x62a>
   1a438:	ldr	r3, [sp, #40]	; 0x28
   1a43a:	ldr	r7, [pc, #756]	; (1a730 <btrfs_search_slot@@Base+0x4f4>)
   1a43c:	ldr.w	r6, [fp, r3, lsl #2]
   1a440:	add	r7, pc
   1a442:	ldrd	r2, r3, [sl, #8]
   1a446:	ldr.w	r1, [r6, #180]	; 0xb4
   1a44a:	ldr.w	r0, [r6, #176]	; 0xb0
   1a44e:	cmp	r1, r3
   1a450:	add.w	r1, r7, #360	; 0x168
   1a454:	it	eq
   1a456:	cmpeq	r0, r2
   1a458:	ldr	r0, [pc, #728]	; (1a734 <btrfs_search_slot@@Base+0x4f8>)
   1a45a:	movw	r2, #1668	; 0x684
   1a45e:	ite	ne
   1a460:	movne	r3, #1
   1a462:	moveq	r3, #0
   1a464:	add	r0, pc
   1a466:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1a46a:	ldr	r3, [r4, #0]
   1a46c:	cmp	r6, r3
   1a46e:	bne.n	1a4ca <btrfs_search_slot@@Base+0x28e>
   1a470:	ldr	r3, [sp, #44]	; 0x2c
   1a472:	mov	r2, fp
   1a474:	mov	r1, r4
   1a476:	mov	r0, sl
   1a478:	adds	r3, #1
   1a47a:	bl	17ec2 <add_root_to_dirty_list@@Base+0x2e>
   1a47e:	mov	r9, r0
   1a480:	cmp	r0, #0
   1a482:	beq.w	1a5f8 <btrfs_search_slot@@Base+0x3bc>
   1a486:	ldr	r1, [pc, #688]	; (1a738 <btrfs_search_slot@@Base+0x4fc>)
   1a488:	cmp.w	r9, #0
   1a48c:	ldr	r0, [pc, #684]	; (1a73c <btrfs_search_slot@@Base+0x500>)
   1a48e:	movw	r2, #1211	; 0x4bb
   1a492:	add	r1, pc
   1a494:	ite	le
   1a496:	movle	r3, #0
   1a498:	movgt	r3, #1
   1a49a:	add.w	r1, r1, #342	; 0x156
   1a49e:	add	r0, pc
   1a4a0:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1a4a4:	cmp.w	r9, #0
   1a4a8:	bne.w	1a30e <btrfs_search_slot@@Base+0xd2>
   1a4ac:	ldr	r3, [sp, #40]	; 0x28
   1a4ae:	ldr.w	r3, [fp, r3, lsl #2]
   1a4b2:	str	r3, [sp, #96]	; 0x60
   1a4b4:	ldr.w	r3, [r8, #32]
   1a4b8:	str	r3, [sp, #100]	; 0x64
   1a4ba:	ldr	r3, [sp, #60]	; 0x3c
   1a4bc:	ldr	r2, [sp, #44]	; 0x2c
   1a4be:	cmp	r3, r2
   1a4c0:	bne.w	1ad6e <btrfs_search_slot@@Base+0xb32>
   1a4c4:	mov.w	r9, #1
   1a4c8:	b.n	1a30e <btrfs_search_slot@@Base+0xd2>
   1a4ca:	movs	r3, #0
   1a4cc:	strd	r3, r3, [sp, #104]	; 0x68
   1a4d0:	ldr.w	r3, [r8, #32]
   1a4d4:	ldr.w	r9, [r4, #464]	; 0x1d0
   1a4d8:	str	r3, [sp, #48]	; 0x30
   1a4da:	ldr	r3, [sp, #40]	; 0x28
   1a4dc:	ldr.w	r5, [fp, r3, lsl #2]
   1a4e0:	ldrd	r2, r3, [sl, #8]
   1a4e4:	ldr.w	r1, [r5, #180]	; 0xb4
   1a4e8:	ldr.w	r0, [r5, #176]	; 0xb0
   1a4ec:	cmp	r1, r3
   1a4ee:	addw	r1, r7, #371	; 0x173
   1a4f2:	it	eq
   1a4f4:	cmpeq	r0, r2
   1a4f6:	ldr	r0, [pc, #584]	; (1a740 <btrfs_search_slot@@Base+0x504>)
   1a4f8:	mov.w	r2, #932	; 0x3a4
   1a4fc:	ite	ne
   1a4fe:	movne	r3, #1
   1a500:	moveq	r3, #0
   1a502:	add	r0, pc
   1a504:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1a508:	ldr	r3, [sp, #44]	; 0x2c
   1a50a:	cmp	r3, #6
   1a50c:	ble.n	1a516 <btrfs_search_slot@@Base+0x2da>
   1a50e:	ldr	r3, [sp, #40]	; 0x28
   1a510:	ldr.w	r6, [fp, r3, lsl #2]
   1a514:	b.n	1a5f8 <btrfs_search_slot@@Base+0x3bc>
   1a516:	ldr.w	r6, [r8, #4]
   1a51a:	cmp	r6, #0
   1a51c:	beq.n	1a50e <btrfs_search_slot@@Base+0x2d2>
   1a51e:	ldr.w	r3, [r8, #36]	; 0x24
   1a522:	mov	r1, r6
   1a524:	mov	r0, r9
   1a526:	subs	r7, r3, #1
   1a528:	str	r3, [sp, #52]	; 0x34
   1a52a:	mov	r2, r7
   1a52c:	bl	18c0e <read_node_slot@@Base>
   1a530:	mov	r2, r0
   1a532:	str	r0, [sp, #108]	; 0x6c
   1a534:	bl	179ac <rb_free_nodes@@Base+0xae>
   1a538:	cmp	r0, #0
   1a53a:	beq.w	1a654 <btrfs_search_slot@@Base+0x418>
   1a53e:	ldr.w	r3, [r2, #192]	; 0xc0
   1a542:	ldr.w	r0, [r9, #384]	; 0x180
   1a546:	str	r3, [sp, #64]	; 0x40
   1a548:	subs	r0, #101	; 0x65
   1a54a:	ldr	r3, [pc, #436]	; (1a700 <btrfs_search_slot@@Base+0x4c4>)
   1a54c:	umull	r0, r1, r0, r3
   1a550:	lsrs	r3, r1, #3
   1a552:	ldr	r1, [sp, #64]	; 0x40
   1a554:	subs	r3, #1
   1a556:	cmp	r1, r3
   1a558:	bcs.n	1a64e <btrfs_search_slot@@Base+0x412>
   1a55a:	add	r3, sp, #108	; 0x6c
   1a55c:	mov	r1, r4
   1a55e:	strd	r7, r3, [sp]
   1a562:	mov	r0, sl
   1a564:	mov	r3, r6
   1a566:	bl	18884 <btrfs_cow_block@@Base>
   1a56a:	cmp	r0, #0
   1a56c:	bne.n	1a64e <btrfs_search_slot@@Base+0x412>
   1a56e:	str	r0, [sp, #0]
   1a570:	mov	r3, r5
   1a572:	ldr	r2, [sp, #108]	; 0x6c
   1a574:	add.w	r0, sl, #8
   1a578:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a57c:	bl	17c48 <rb_free_nodes@@Base+0x34a>
   1a580:	mov	r2, r0
   1a582:	cmp	r0, #0
   1a584:	bne.n	1a64e <btrfs_search_slot@@Base+0x412>
   1a586:	ldr	r3, [sp, #48]	; 0x30
   1a588:	mov	r0, r5
   1a58a:	ldr	r1, [sp, #64]	; 0x40
   1a58c:	add	r3, r1
   1a58e:	add	r1, sp, #112	; 0x70
   1a590:	str	r1, [sp, #48]	; 0x30
   1a592:	mov	r7, r3
   1a594:	bl	17952 <rb_free_nodes@@Base+0x54>
   1a598:	ldrd	r1, r2, [sp, #48]	; 0x30
   1a59c:	mov	r0, r6
   1a59e:	bl	1792e <rb_free_nodes@@Base+0x30>
   1a5a2:	mov	r0, r6
   1a5a4:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1a5a8:	ldr	r0, [sp, #108]	; 0x6c
   1a5aa:	ldr.w	r3, [r0, #192]	; 0xc0
   1a5ae:	cmp	r7, r3
   1a5b0:	bcs.n	1a5ca <btrfs_search_slot@@Base+0x38e>
   1a5b2:	ldr	r3, [sp, #40]	; 0x28
   1a5b4:	str.w	r0, [fp, r3, lsl #2]
   1a5b8:	ldr.w	r3, [r8, #36]	; 0x24
   1a5bc:	subs	r3, #1
   1a5be:	str.w	r3, [r8, #36]	; 0x24
   1a5c2:	mov	r0, r5
   1a5c4:	str.w	r7, [r8, #32]
   1a5c8:	b.n	1a5d0 <btrfs_search_slot@@Base+0x394>
   1a5ca:	subs	r7, r7, r3
   1a5cc:	str.w	r7, [r8, #32]
   1a5d0:	bl	16c20 <free_extent_buffer@@Base>
   1a5d4:	ldr	r3, [sp, #40]	; 0x28
   1a5d6:	ldr.w	r6, [fp, r3, lsl #2]
   1a5da:	ldr.w	r3, [r4, #464]	; 0x1d0
   1a5de:	ldr.w	r1, [r6, #192]	; 0xc0
   1a5e2:	ldr.w	r2, [r3, #384]	; 0x180
   1a5e6:	ldr	r3, [pc, #280]	; (1a700 <btrfs_search_slot@@Base+0x4c4>)
   1a5e8:	subs	r2, #101	; 0x65
   1a5ea:	umull	r2, r3, r2, r3
   1a5ee:	lsrs	r3, r3, #3
   1a5f0:	subs	r3, #3
   1a5f2:	cmp	r1, r3
   1a5f4:	bcc.w	1a860 <btrfs_search_slot@@Base+0x624>
   1a5f8:	ldr.w	r3, [r6, #192]	; 0xc0
   1a5fc:	add.w	r9, sp, #112	; 0x70
   1a600:	mov	r0, r6
   1a602:	adds	r7, r3, #1
   1a604:	mov	r1, r9
   1a606:	str	r3, [sp, #48]	; 0x30
   1a608:	lsrs	r7, r7, #1
   1a60a:	mov	r2, r7
   1a60c:	bl	17952 <rb_free_nodes@@Base+0x54>
   1a610:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a614:	movs	r2, #0
   1a616:	movs	r3, #0
   1a618:	strd	r2, r3, [sp, #24]
   1a61c:	mov	r0, sl
   1a61e:	ldrd	r2, r3, [r6, #40]	; 0x28
   1a622:	strd	r2, r3, [sp, #16]
   1a626:	ldr	r3, [sp, #44]	; 0x2c
   1a628:	strd	r9, r3, [sp, #8]
   1a62c:	ldr.w	r2, [r4, #447]	; 0x1bf
   1a630:	ldr.w	r3, [r4, #451]	; 0x1c3
   1a634:	strd	r2, r3, [sp]
   1a638:	ldr.w	r2, [r1, #384]	; 0x180
   1a63c:	mov	r1, r4
   1a63e:	bl	22a64 <btrfs_alloc_free_block@@Base>
   1a642:	cmn.w	r0, #4096	; 0x1000
   1a646:	mov	r5, r0
   1a648:	bls.n	1a744 <btrfs_search_slot@@Base+0x508>
   1a64a:	mov	r9, r0
   1a64c:	b.n	1a486 <btrfs_search_slot@@Base+0x24a>
   1a64e:	ldr	r0, [sp, #108]	; 0x6c
   1a650:	bl	16c20 <free_extent_buffer@@Base>
   1a654:	ldr	r7, [sp, #52]	; 0x34
   1a656:	mov	r1, r6
   1a658:	mov	r0, r9
   1a65a:	adds	r7, #1
   1a65c:	mov	r2, r7
   1a65e:	bl	18c0e <read_node_slot@@Base>
   1a662:	mov	r2, r0
   1a664:	str	r0, [sp, #104]	; 0x68
   1a666:	bl	179ac <rb_free_nodes@@Base+0xae>
   1a66a:	cmp	r0, #0
   1a66c:	beq.w	1a50e <btrfs_search_slot@@Base+0x2d2>
   1a670:	ldr.w	r3, [r4, #464]	; 0x1d0
   1a674:	ldr.w	ip, [r2, #192]	; 0xc0
   1a678:	ldr.w	r0, [r3, #384]	; 0x180
   1a67c:	ldr	r3, [pc, #128]	; (1a700 <btrfs_search_slot@@Base+0x4c4>)
   1a67e:	subs	r0, #101	; 0x65
   1a680:	umull	r0, r1, r0, r3
   1a684:	lsrs	r3, r1, #3
   1a686:	subs	r3, #1
   1a688:	cmp	ip, r3
   1a68a:	bcs.n	1a6f6 <btrfs_search_slot@@Base+0x4ba>
   1a68c:	add	r3, sp, #104	; 0x68
   1a68e:	mov	r1, r4
   1a690:	strd	r7, r3, [sp]
   1a694:	mov	r0, sl
   1a696:	mov	r3, r6
   1a698:	bl	18884 <btrfs_cow_block@@Base>
   1a69c:	cbnz	r0, 1a6f6 <btrfs_search_slot@@Base+0x4ba>
   1a69e:	ldr	r2, [sp, #104]	; 0x68
   1a6a0:	add.w	r1, r4, #464	; 0x1d0
   1a6a4:	add.w	r0, sl, #8
   1a6a8:	mov	r3, r5
   1a6aa:	bl	17b58 <rb_free_nodes@@Base+0x25a>
   1a6ae:	mov	r2, r0
   1a6b0:	cbnz	r0, 1a6f6 <btrfs_search_slot@@Base+0x4ba>
   1a6b2:	add	r1, sp, #112	; 0x70
   1a6b4:	ldr	r0, [sp, #104]	; 0x68
   1a6b6:	str	r1, [sp, #52]	; 0x34
   1a6b8:	bl	17952 <rb_free_nodes@@Base+0x54>
   1a6bc:	mov	r2, r7
   1a6be:	ldr	r1, [sp, #52]	; 0x34
   1a6c0:	mov	r0, r6
   1a6c2:	bl	1792e <rb_free_nodes@@Base+0x30>
   1a6c6:	mov	r0, r6
   1a6c8:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1a6cc:	ldr.w	r3, [r5, #192]	; 0xc0
   1a6d0:	ldr	r2, [sp, #48]	; 0x30
   1a6d2:	cmp	r3, r2
   1a6d4:	bhi.n	1a6f2 <btrfs_search_slot@@Base+0x4b6>
   1a6d6:	ldr	r3, [sp, #104]	; 0x68
   1a6d8:	ldr	r2, [sp, #40]	; 0x28
   1a6da:	str.w	r3, [fp, r2, lsl #2]
   1a6de:	ldr.w	r3, [r8, #36]	; 0x24
   1a6e2:	adds	r3, #1
   1a6e4:	str.w	r3, [r8, #36]	; 0x24
   1a6e8:	ldr	r3, [sp, #48]	; 0x30
   1a6ea:	ldr.w	r7, [r5, #192]	; 0xc0
   1a6ee:	subs	r7, r3, r7
   1a6f0:	b.n	1a5c2 <btrfs_search_slot@@Base+0x386>
   1a6f2:	ldr	r0, [sp, #104]	; 0x68
   1a6f4:	b.n	1a5d0 <btrfs_search_slot@@Base+0x394>
   1a6f6:	ldr	r0, [sp, #104]	; 0x68
   1a6f8:	bl	16c20 <free_extent_buffer@@Base>
   1a6fc:	b.n	1a50e <btrfs_search_slot@@Base+0x2d2>
   1a6fe:	nop
   1a700:	strh	r1, [r4, #30]
   1a702:	subs	r6, #15
   1a704:	lsls	r4, r4, #8
   1a706:	movs	r0, r0
   1a708:	add	r3, sp, #200	; 0xc8
   1a70a:	movs	r4, r0
   1a70c:	cmp	r3, #176	; 0xb0
   1a70e:	movs	r2, r0
   1a710:	cmp	r1, #90	; 0x5a
   1a712:	movs	r2, r0
   1a714:	cmp	r1, #94	; 0x5e
   1a716:	movs	r2, r0
   1a718:	cmp	r3, #102	; 0x66
   1a71a:	movs	r2, r0
   1a71c:	add	r2, sp, #464	; 0x1d0
   1a71e:	movs	r4, r0
   1a720:	cmp	r0, #230	; 0xe6
   1a722:	movs	r2, r0
   1a724:	subs	r2, #149	; 0x95
   1a726:	movs	r2, r0
   1a728:	cmp	r2, #128	; 0x80
   1a72a:	movs	r2, r0
   1a72c:	cmp	r0, #186	; 0xba
   1a72e:	movs	r2, r0
   1a730:	cmp	r2, #0
   1a732:	movs	r2, r0
   1a734:	movs	r7, #204	; 0xcc
   1a736:	movs	r2, r0
   1a738:	cmp	r1, #174	; 0xae
   1a73a:	movs	r2, r0
   1a73c:	movs	r7, #238	; 0xee
   1a73e:	movs	r2, r0
   1a740:	movs	r7, #91	; 0x5b
   1a742:	movs	r2, r0
   1a744:	movs	r2, #0
   1a746:	movs	r3, #101	; 0x65
   1a748:	mov	r1, r2
   1a74a:	bl	173a2 <memset_extent_buffer@@Base>
   1a74e:	ldrb.w	r3, [r6, #196]	; 0xc4
   1a752:	mov	r0, r5
   1a754:	strb.w	r3, [r5, #196]	; 0xc4
   1a758:	ldr	r3, [r5, #40]	; 0x28
   1a75a:	str.w	r3, [r5, #144]	; 0x90
   1a75e:	ldr	r3, [r5, #44]	; 0x2c
   1a760:	str.w	r3, [r5, #148]	; 0x94
   1a764:	ldrd	r2, r3, [sl, #8]
   1a768:	str.w	r2, [r5, #176]	; 0xb0
   1a76c:	str.w	r3, [r5, #180]	; 0xb4
   1a770:	ldr.w	r2, [r5, #152]	; 0x98
   1a774:	ldr.w	r3, [r5, #156]	; 0x9c
   1a778:	bic.w	r3, r3, #4278190080	; 0xff000000
   1a77c:	str.w	r2, [r5, #152]	; 0x98
   1a780:	orr.w	r3, r3, #16777216	; 0x1000000
   1a784:	str.w	r3, [r5, #156]	; 0x9c
   1a788:	ldr.w	r2, [r4, #447]	; 0x1bf
   1a78c:	ldr.w	r3, [r4, #451]	; 0x1c3
   1a790:	str.w	r2, [r5, #184]	; 0xb8
   1a794:	movs	r2, #32
   1a796:	str.w	r3, [r5, #188]	; 0xbc
   1a79a:	ldr.w	r3, [r4, #464]	; 0x1d0
   1a79e:	ldr.w	r1, [r3, #352]	; 0x160
   1a7a2:	movs	r3, #16
   1a7a4:	add	r1, r3
   1a7a6:	bl	17330 <write_extent_buffer@@Base>
   1a7aa:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a7ae:	movs	r3, #16
   1a7b0:	movs	r2, #64	; 0x40
   1a7b2:	mov	r0, r5
   1a7b4:	bl	17330 <write_extent_buffer@@Base>
   1a7b8:	ldr.w	r1, [r4, #464]	; 0x1d0
   1a7bc:	ldr.w	r2, [r4, #200]	; 0xc8
   1a7c0:	mov	r0, r5
   1a7c2:	ldr.w	r3, [r4, #204]	; 0xcc
   1a7c6:	ldr.w	r1, [r1, #384]	; 0x180
   1a7ca:	adds	r2, r2, r1
   1a7cc:	str.w	r2, [r4, #200]	; 0xc8
   1a7d0:	adc.w	r3, r3, #0
   1a7d4:	str.w	r3, [r4, #204]	; 0xcc
   1a7d8:	ldr	r3, [sp, #48]	; 0x30
   1a7da:	mov	r1, r6
   1a7dc:	subs	r3, r3, r7
   1a7de:	str	r3, [sp, #48]	; 0x30
   1a7e0:	ldr	r2, [sp, #48]	; 0x30
   1a7e2:	add.w	r3, r7, r7, lsl #5
   1a7e6:	adds	r3, #101	; 0x65
   1a7e8:	add.w	r2, r2, r2, lsl #5
   1a7ec:	str	r2, [sp, #0]
   1a7ee:	movs	r2, #101	; 0x65
   1a7f0:	bl	17342 <copy_extent_buffer@@Base>
   1a7f4:	ldr	r3, [sp, #48]	; 0x30
   1a7f6:	mov	r0, r6
   1a7f8:	str.w	r3, [r5, #192]	; 0xc0
   1a7fc:	str.w	r7, [r6, #192]	; 0xc0
   1a800:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1a804:	mov	r0, r5
   1a806:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1a80a:	ldr	r3, [sp, #44]	; 0x2c
   1a80c:	add.w	r1, r4, #464	; 0x1d0
   1a810:	add.w	r0, sl, #8
   1a814:	adds	r3, #1
   1a816:	str	r3, [sp, #12]
   1a818:	ldr.w	r3, [r8, #36]	; 0x24
   1a81c:	adds	r3, #1
   1a81e:	str	r3, [sp, #8]
   1a820:	ldrd	r2, r3, [r5, #40]	; 0x28
   1a824:	strd	r2, r3, [sp]
   1a828:	mov	r3, r9
   1a82a:	mov	r2, fp
   1a82c:	bl	17a64 <rb_free_nodes@@Base+0x166>
   1a830:	ldr.w	r3, [r8, #32]
   1a834:	cmp	r7, r3
   1a836:	mov	r9, r0
   1a838:	bgt.n	1a858 <btrfs_search_slot@@Base+0x61c>
   1a83a:	subs	r7, r3, r7
   1a83c:	mov	r0, r6
   1a83e:	str.w	r7, [r8, #32]
   1a842:	bl	16c20 <free_extent_buffer@@Base>
   1a846:	ldr	r3, [sp, #40]	; 0x28
   1a848:	str.w	r5, [fp, r3, lsl #2]
   1a84c:	ldr.w	r3, [r8, #36]	; 0x24
   1a850:	adds	r3, #1
   1a852:	str.w	r3, [r8, #36]	; 0x24
   1a856:	b.n	1a486 <btrfs_search_slot@@Base+0x24a>
   1a858:	mov	r0, r5
   1a85a:	bl	16c20 <free_extent_buffer@@Base>
   1a85e:	b.n	1a486 <btrfs_search_slot@@Base+0x24a>
   1a860:	mov.w	r9, #0
   1a864:	b.n	1a486 <btrfs_search_slot@@Base+0x24a>
   1a866:	ldr	r3, [sp, #192]	; 0xc0
   1a868:	cmp	r3, #0
   1a86a:	bge.w	1a4ba <btrfs_search_slot@@Base+0x27e>
   1a86e:	movs	r3, #0
   1a870:	strd	r3, r3, [sp, #104]	; 0x68
   1a874:	ldr	r3, [sp, #40]	; 0x28
   1a876:	ldr.w	r6, [r4, #464]	; 0x1d0
   1a87a:	ldr.w	r5, [fp, r3, lsl #2]
   1a87e:	ldrd	r2, r3, [sl, #8]
   1a882:	ldr.w	r1, [r5, #180]	; 0xb4
   1a886:	ldr.w	r0, [r5, #176]	; 0xb0
   1a88a:	cmp	r1, r3
   1a88c:	ldr.w	r1, [pc, #1092]	; 1acd4 <btrfs_search_slot@@Base+0xa98>
   1a890:	it	eq
   1a892:	cmpeq	r0, r2
   1a894:	ldr.w	r0, [pc, #1088]	; 1acd8 <btrfs_search_slot@@Base+0xa9c>
   1a898:	add	r1, pc
   1a89a:	movw	r2, #734	; 0x2de
   1a89e:	ite	ne
   1a8a0:	movne	r3, #1
   1a8a2:	moveq	r3, #0
   1a8a4:	addw	r1, r1, #393	; 0x189
   1a8a8:	add	r0, pc
   1a8aa:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1a8ae:	ldr	r3, [sp, #44]	; 0x2c
   1a8b0:	cmp	r3, #6
   1a8b2:	bgt.n	1a8c2 <btrfs_search_slot@@Base+0x686>
   1a8b4:	ldr.w	r7, [r8, #4]
   1a8b8:	adds	r3, #1
   1a8ba:	vmov	s18, r3
   1a8be:	cmp	r7, #0
   1a8c0:	bne.n	1a998 <btrfs_search_slot@@Base+0x75c>
   1a8c2:	ldr.w	r3, [r5, #192]	; 0xc0
   1a8c6:	cmp	r3, #1
   1a8c8:	bne.w	1ac98 <btrfs_search_slot@@Base+0xa5c>
   1a8cc:	movs	r2, #0
   1a8ce:	mov	r1, r5
   1a8d0:	mov	r0, r6
   1a8d2:	ldr.w	r6, [pc, #1032]	; 1acdc <btrfs_search_slot@@Base+0xaa0>
   1a8d6:	bl	18c0e <read_node_slot@@Base>
   1a8da:	mov.w	r9, #0
   1a8de:	add	r6, pc
   1a8e0:	addw	r6, r6, #393	; 0x189
   1a8e4:	mov	r7, r0
   1a8e6:	str	r0, [sp, #112]	; 0x70
   1a8e8:	bl	179ac <rb_free_nodes@@Base+0xae>
   1a8ec:	movw	r2, #755	; 0x2f3
   1a8f0:	mov	r1, r6
   1a8f2:	clz	r3, r0
   1a8f6:	ldr	r0, [pc, #1000]	; (1ace0 <btrfs_search_slot@@Base+0xaa4>)
   1a8f8:	lsrs	r3, r3, #5
   1a8fa:	add	r0, pc
   1a8fc:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1a900:	add	r3, sp, #112	; 0x70
   1a902:	mov	r2, r7
   1a904:	mov	r1, r4
   1a906:	str	r3, [sp, #4]
   1a908:	mov	r0, sl
   1a90a:	mov	r3, r5
   1a90c:	str.w	r9, [sp]
   1a910:	bl	18884 <btrfs_cow_block@@Base>
   1a914:	movw	r2, #757	; 0x2f5
   1a918:	mov	r1, r6
   1a91a:	mov	r3, r0
   1a91c:	ldr	r0, [pc, #964]	; (1ace4 <btrfs_search_slot@@Base+0xaa8>)
   1a91e:	add	r0, pc
   1a920:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1a924:	ldr	r3, [sp, #112]	; 0x70
   1a926:	mov	r0, r4
   1a928:	str	r3, [r4, #0]
   1a92a:	bl	17e94 <add_root_to_dirty_list@@Base>
   1a92e:	ldr	r3, [sp, #40]	; 0x28
   1a930:	mov	r0, r5
   1a932:	str.w	r9, [fp, r3, lsl #2]
   1a936:	bl	1d50c <clean_tree_block@@Base>
   1a93a:	mov	r0, r5
   1a93c:	bl	16c20 <free_extent_buffer@@Base>
   1a940:	ldr	r1, [r5, #76]	; 0x4c
   1a942:	ldr.w	r2, [r4, #200]	; 0xc8
   1a946:	ldrb.w	r0, [sp, #44]	; 0x2c
   1a94a:	ldr.w	r3, [r4, #204]	; 0xcc
   1a94e:	subs	r2, r2, r1
   1a950:	mov.w	r1, #0
   1a954:	str.w	r2, [r4, #200]	; 0xc8
   1a958:	sbc.w	r3, r3, #0
   1a95c:	movs	r2, #0
   1a95e:	str.w	r3, [r4, #204]	; 0xcc
   1a962:	movs	r3, #0
   1a964:	strd	r0, r1, [sp, #24]
   1a968:	strd	r2, r3, [sp, #32]
   1a96c:	ldr.w	r0, [r4, #447]	; 0x1bf
   1a970:	ldr.w	r1, [r4, #451]	; 0x1c3
   1a974:	strd	r2, r3, [sp, #8]
   1a978:	strd	r0, r1, [sp, #16]
   1a97c:	mov	r1, r4
   1a97e:	ldr	r3, [r5, #76]	; 0x4c
   1a980:	mov	r0, sl
   1a982:	strd	r3, r9, [sp]
   1a986:	ldrd	r2, r3, [r5, #40]	; 0x28
   1a98a:	bl	20c4c <btrfs_free_extent@@Base>
   1a98e:	mov	r9, r0
   1a990:	mov	r0, r5
   1a992:	bl	16c20 <free_extent_buffer@@Base>
   1a996:	b.n	1ac90 <btrfs_search_slot@@Base+0xa54>
   1a998:	ldr.w	r2, [r6, #384]	; 0x180
   1a99c:	ldr	r3, [pc, #816]	; (1acd0 <btrfs_search_slot@@Base+0xa94>)
   1a99e:	subs	r2, #101	; 0x65
   1a9a0:	umull	r0, r1, r2, r3
   1a9a4:	ldr.w	r2, [r5, #192]	; 0xc0
   1a9a8:	cmp.w	r2, r1, lsr #5
   1a9ac:	bhi.w	1ac98 <btrfs_search_slot@@Base+0xa5c>
   1a9b0:	ldr	r3, [sp, #48]	; 0x30
   1a9b2:	mov	r1, r7
   1a9b4:	mov	r0, r6
   1a9b6:	add.w	r3, r3, r3, lsl #5
   1a9ba:	add	r3, r5
   1a9bc:	ldr.w	r2, [r3, #214]!
   1a9c0:	ldr	r3, [r3, #4]
   1a9c2:	str	r2, [sp, #64]	; 0x40
   1a9c4:	str	r3, [sp, #68]	; 0x44
   1a9c6:	ldr.w	r3, [r8, #36]	; 0x24
   1a9ca:	add.w	r9, r3, #4294967295	; 0xffffffff
   1a9ce:	str	r3, [sp, #52]	; 0x34
   1a9d0:	mov	r2, r9
   1a9d2:	bl	18c0e <read_node_slot@@Base>
   1a9d6:	mov	r2, r0
   1a9d8:	str	r0, [sp, #108]	; 0x6c
   1a9da:	bl	179ac <rb_free_nodes@@Base+0xae>
   1a9de:	cmp	r0, #0
   1a9e0:	bne.w	1ac68 <btrfs_search_slot@@Base+0xa2c>
   1a9e4:	ldr	r3, [sp, #52]	; 0x34
   1a9e6:	mov	r1, r7
   1a9e8:	mov	r0, r6
   1a9ea:	adds	r3, #1
   1a9ec:	mov	r2, r3
   1a9ee:	vmov	s17, r3
   1a9f2:	bl	18c0e <read_node_slot@@Base>
   1a9f6:	mov	r2, r0
   1a9f8:	str	r0, [sp, #104]	; 0x68
   1a9fa:	bl	179ac <rb_free_nodes@@Base+0xae>
   1a9fe:	cbz	r0, 1aa1a <btrfs_search_slot@@Base+0x7de>
   1aa00:	add	r3, sp, #104	; 0x68
   1aa02:	vstr	s17, [sp]
   1aa06:	str	r3, [sp, #4]
   1aa08:	mov	r1, r4
   1aa0a:	mov	r3, r7
   1aa0c:	mov	r0, sl
   1aa0e:	bl	18884 <btrfs_cow_block@@Base>
   1aa12:	mov	r9, r0
   1aa14:	cmp	r0, #0
   1aa16:	bne.w	1ac80 <btrfs_search_slot@@Base+0xa44>
   1aa1a:	ldr	r2, [sp, #108]	; 0x6c
   1aa1c:	cmp	r2, #0
   1aa1e:	bne.w	1acae <btrfs_search_slot@@Base+0xa72>
   1aa22:	mov	r6, r2
   1aa24:	ldr	r3, [sp, #104]	; 0x68
   1aa26:	cmp	r3, #0
   1aa28:	beq.n	1aadc <btrfs_search_slot@@Base+0x8a0>
   1aa2a:	movs	r2, #1
   1aa2c:	add.w	r0, sl, #8
   1aa30:	str	r2, [sp, #0]
   1aa32:	mov	r2, r5
   1aa34:	ldr.w	r1, [r4, #464]	; 0x1d0
   1aa38:	bl	17c48 <rb_free_nodes@@Base+0x34a>
   1aa3c:	cmp	r0, #0
   1aa3e:	bge.n	1aa48 <btrfs_search_slot@@Base+0x80c>
   1aa40:	cmn.w	r0, #28
   1aa44:	it	ne
   1aa46:	movne	r6, r0
   1aa48:	ldr	r0, [sp, #104]	; 0x68
   1aa4a:	ldr.w	r9, [r0, #192]	; 0xc0
   1aa4e:	cmp.w	r9, #0
   1aa52:	bne.w	1ad00 <btrfs_search_slot@@Base+0xac4>
   1aa56:	ldrd	r2, r3, [r0, #40]	; 0x28
   1aa5a:	strd	r2, r3, [sp, #72]	; 0x48
   1aa5e:	ldr	r3, [r0, #76]	; 0x4c
   1aa60:	str	r3, [sp, #80]	; 0x50
   1aa62:	bl	1d50c <clean_tree_block@@Base>
   1aa66:	ldr	r0, [sp, #104]	; 0x68
   1aa68:	bl	16c20 <free_extent_buffer@@Base>
   1aa6c:	vmov	r3, s17
   1aa70:	vmov	r2, s18
   1aa74:	mov	r1, fp
   1aa76:	mov	r0, r4
   1aa78:	str.w	r9, [sp, #104]	; 0x68
   1aa7c:	bl	1a16c <btrfs_del_ptr@@Base>
   1aa80:	ldr	r1, [sp, #104]	; 0x68
   1aa82:	ldr.w	r2, [r4, #200]	; 0xc8
   1aa86:	ldr.w	r3, [r4, #204]	; 0xcc
   1aa8a:	ldr	r1, [r1, #76]	; 0x4c
   1aa8c:	cmp	r0, #0
   1aa8e:	it	ne
   1aa90:	movne	r6, r0
   1aa92:	ldrb.w	r0, [sp, #44]	; 0x2c
   1aa96:	subs	r2, r2, r1
   1aa98:	mov.w	r1, #0
   1aa9c:	str.w	r2, [r4, #200]	; 0xc8
   1aaa0:	sbc.w	r3, r3, #0
   1aaa4:	movs	r2, #0
   1aaa6:	str.w	r3, [r4, #204]	; 0xcc
   1aaaa:	movs	r3, #0
   1aaac:	strd	r0, r1, [sp, #24]
   1aab0:	strd	r2, r3, [sp, #32]
   1aab4:	ldr.w	r0, [r4, #447]	; 0x1bf
   1aab8:	ldr.w	r1, [r4, #451]	; 0x1c3
   1aabc:	strd	r2, r3, [sp, #8]
   1aac0:	ldr	r3, [sp, #80]	; 0x50
   1aac2:	strd	r0, r1, [sp, #16]
   1aac6:	mov	r1, r4
   1aac8:	mov	r0, sl
   1aaca:	strd	r3, r9, [sp]
   1aace:	ldrd	r2, r3, [sp, #72]	; 0x48
   1aad2:	bl	20c4c <btrfs_free_extent@@Base>
   1aad6:	cmp	r0, #0
   1aad8:	it	ne
   1aada:	movne	r6, r0
   1aadc:	ldr.w	r3, [r5, #192]	; 0xc0
   1aae0:	cmp	r3, #1
   1aae2:	bne.n	1ab60 <btrfs_search_slot@@Base+0x924>
   1aae4:	ldr.w	r9, [sp, #108]	; 0x6c
   1aae8:	mov.w	r2, #848	; 0x350
   1aaec:	ldr	r1, [pc, #504]	; (1ace8 <btrfs_search_slot@@Base+0xaac>)
   1aaee:	clz	r3, r9
   1aaf2:	ldr	r0, [pc, #504]	; (1acec <btrfs_search_slot@@Base+0xab0>)
   1aaf4:	add	r1, pc
   1aaf6:	lsrs	r3, r3, #5
   1aaf8:	addw	r1, r1, #393	; 0x189
   1aafc:	add	r0, pc
   1aafe:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1ab02:	add.w	r3, sl, #8
   1ab06:	add.w	r1, r4, #464	; 0x1d0
   1ab0a:	mov	r2, r5
   1ab0c:	vmov	s17, r3
   1ab10:	mov	r3, r9
   1ab12:	vmov	r0, s17
   1ab16:	bl	17b58 <rb_free_nodes@@Base+0x25a>
   1ab1a:	subs.w	r9, r0, #0
   1ab1e:	blt.w	1ac80 <btrfs_search_slot@@Base+0xa44>
   1ab22:	cmp.w	r9, #1
   1ab26:	bne.n	1ab44 <btrfs_search_slot@@Base+0x908>
   1ab28:	str.w	r9, [sp]
   1ab2c:	mov	r3, r5
   1ab2e:	vmov	r0, s17
   1ab32:	ldr	r2, [sp, #108]	; 0x6c
   1ab34:	ldr.w	r1, [r4, #464]	; 0x1d0
   1ab38:	bl	17c48 <rb_free_nodes@@Base+0x34a>
   1ab3c:	subs.w	r9, r0, #0
   1ab40:	it	lt
   1ab42:	movlt	r6, r9
   1ab44:	add.w	r1, r9, #4294967295	; 0xffffffff
   1ab48:	ldr	r0, [pc, #420]	; (1acf0 <btrfs_search_slot@@Base+0xab4>)
   1ab4a:	negs	r3, r1
   1ab4c:	movw	r2, #859	; 0x35b
   1ab50:	adcs	r3, r1
   1ab52:	ldr	r1, [pc, #416]	; (1acf4 <btrfs_search_slot@@Base+0xab8>)
   1ab54:	add	r0, pc
   1ab56:	add	r1, pc
   1ab58:	addw	r1, r1, #393	; 0x189
   1ab5c:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1ab60:	ldr.w	r3, [r5, #192]	; 0xc0
   1ab64:	mov	r9, r6
   1ab66:	str	r3, [sp, #72]	; 0x48
   1ab68:	cmp	r3, #0
   1ab6a:	bne.w	1ad1e <btrfs_search_slot@@Base+0xae2>
   1ab6e:	ldrd	r2, r3, [r5, #40]	; 0x28
   1ab72:	mov	r0, r5
   1ab74:	ldr	r7, [r5, #76]	; 0x4c
   1ab76:	strd	r2, r3, [sp, #80]	; 0x50
   1ab7a:	bl	1d50c <clean_tree_block@@Base>
   1ab7e:	mov	r0, r5
   1ab80:	bl	16c20 <free_extent_buffer@@Base>
   1ab84:	vmov	r2, s18
   1ab88:	ldr	r3, [sp, #52]	; 0x34
   1ab8a:	mov	r1, fp
   1ab8c:	mov	r0, r4
   1ab8e:	bl	1a16c <btrfs_del_ptr@@Base>
   1ab92:	ldr.w	r2, [r4, #200]	; 0xc8
   1ab96:	ldr.w	r3, [r4, #204]	; 0xcc
   1ab9a:	movs	r1, #0
   1ab9c:	cmp	r0, #0
   1ab9e:	ite	ne
   1aba0:	movne	r9, r0
   1aba2:	moveq	r9, r6
   1aba4:	ldrb.w	r0, [sp, #44]	; 0x2c
   1aba8:	subs	r2, r2, r7
   1abaa:	str.w	r2, [r4, #200]	; 0xc8
   1abae:	sbc.w	r3, r3, #0
   1abb2:	movs	r2, #0
   1abb4:	str.w	r3, [r4, #204]	; 0xcc
   1abb8:	movs	r3, #0
   1abba:	strd	r0, r1, [sp, #24]
   1abbe:	strd	r2, r3, [sp, #32]
   1abc2:	ldr.w	r0, [r4, #447]	; 0x1bf
   1abc6:	ldr.w	r1, [r4, #451]	; 0x1c3
   1abca:	strd	r2, r3, [sp, #8]
   1abce:	movs	r3, #0
   1abd0:	str	r7, [sp, #0]
   1abd2:	strd	r0, r1, [sp, #16]
   1abd6:	mov	r1, r4
   1abd8:	str	r3, [sp, #4]
   1abda:	mov	r0, sl
   1abdc:	ldrd	r2, r3, [sp, #80]	; 0x50
   1abe0:	bl	20c4c <btrfs_free_extent@@Base>
   1abe4:	ldr	r5, [sp, #72]	; 0x48
   1abe6:	cmp	r0, #0
   1abe8:	it	ne
   1abea:	movne	r9, r0
   1abec:	ldr	r2, [sp, #108]	; 0x6c
   1abee:	cbz	r2, 1ac1e <btrfs_search_slot@@Base+0x9e2>
   1abf0:	ldr.w	r3, [r2, #192]	; 0xc0
   1abf4:	ldr	r1, [sp, #48]	; 0x30
   1abf6:	cmp	r3, r1
   1abf8:	bls.w	1ad3c <btrfs_search_slot@@Base+0xb00>
   1abfc:	ldr	r3, [r2, #80]	; 0x50
   1abfe:	adds	r3, #1
   1ac00:	str	r3, [r2, #80]	; 0x50
   1ac02:	ldr	r3, [sp, #40]	; 0x28
   1ac04:	str.w	r2, [fp, r3, lsl #2]
   1ac08:	ldr.w	r3, [r8, #36]	; 0x24
   1ac0c:	str.w	r1, [r8, #32]
   1ac10:	subs	r3, #1
   1ac12:	str.w	r3, [r8, #36]	; 0x24
   1ac16:	cbz	r5, 1ac1e <btrfs_search_slot@@Base+0x9e2>
   1ac18:	mov	r0, r5
   1ac1a:	bl	16c20 <free_extent_buffer@@Base>
   1ac1e:	ldrb.w	r3, [fp, #67]	; 0x43
   1ac22:	cbnz	r3, 1ac30 <btrfs_search_slot@@Base+0x9f4>
   1ac24:	ldr	r2, [sp, #44]	; 0x2c
   1ac26:	mov	r1, fp
   1ac28:	ldr.w	r0, [r4, #464]	; 0x1d0
   1ac2c:	bl	19330 <btrfs_check_leaf@@Base+0x2c0>
   1ac30:	ldr	r3, [sp, #40]	; 0x28
   1ac32:	ldr.w	r2, [r8, #32]
   1ac36:	ldr.w	r3, [fp, r3, lsl #2]
   1ac3a:	add.w	r2, r2, r2, lsl #5
   1ac3e:	add	r3, r2
   1ac40:	ldr.w	r0, [r3, #214]!
   1ac44:	ldr	r1, [r3, #4]
   1ac46:	ldrd	r2, r3, [sp, #64]	; 0x40
   1ac4a:	cmp	r3, r1
   1ac4c:	it	eq
   1ac4e:	cmpeq	r2, r0
   1ac50:	beq.n	1ac80 <btrfs_search_slot@@Base+0xa44>
   1ac52:	ldr	r1, [pc, #164]	; (1acf8 <btrfs_search_slot@@Base+0xabc>)
   1ac54:	movs	r3, #1
   1ac56:	ldr	r0, [pc, #164]	; (1acfc <btrfs_search_slot@@Base+0xac0>)
   1ac58:	mov.w	r2, #904	; 0x388
   1ac5c:	add	r1, pc
   1ac5e:	addw	r1, r1, #393	; 0x189
   1ac62:	add	r0, pc
   1ac64:	bl	179da <rb_free_nodes@@Base+0xdc>
   1ac68:	add	r3, sp, #108	; 0x6c
   1ac6a:	mov	r1, r4
   1ac6c:	strd	r9, r3, [sp]
   1ac70:	mov	r0, sl
   1ac72:	mov	r3, r7
   1ac74:	bl	18884 <btrfs_cow_block@@Base>
   1ac78:	mov	r9, r0
   1ac7a:	cmp	r0, #0
   1ac7c:	beq.w	1a9e4 <btrfs_search_slot@@Base+0x7a8>
   1ac80:	ldr	r0, [sp, #104]	; 0x68
   1ac82:	cbz	r0, 1ac88 <btrfs_search_slot@@Base+0xa4c>
   1ac84:	bl	16c20 <free_extent_buffer@@Base>
   1ac88:	ldr	r0, [sp, #108]	; 0x6c
   1ac8a:	cmp	r0, #0
   1ac8c:	bne.w	1a992 <btrfs_search_slot@@Base+0x756>
   1ac90:	cmp.w	r9, #0
   1ac94:	bne.w	1a30e <btrfs_search_slot@@Base+0xd2>
   1ac98:	ldr	r3, [sp, #40]	; 0x28
   1ac9a:	ldr.w	r3, [fp, r3, lsl #2]
   1ac9e:	str	r3, [sp, #96]	; 0x60
   1aca0:	cmp	r3, #0
   1aca2:	bne.n	1ad46 <btrfs_search_slot@@Base+0xb0a>
   1aca4:	mov	r0, fp
   1aca6:	bl	17e58 <btrfs_release_path@@Base>
   1acaa:	b.w	1a2cc <btrfs_search_slot@@Base+0x90>
   1acae:	ldr.w	r3, [r2, #192]	; 0xc0
   1acb2:	add.w	r0, sl, #8
   1acb6:	ldr	r1, [sp, #48]	; 0x30
   1acb8:	add	r1, r3
   1acba:	movs	r3, #1
   1acbc:	str	r1, [sp, #48]	; 0x30
   1acbe:	str	r3, [sp, #0]
   1acc0:	mov	r3, r5
   1acc2:	ldr.w	r1, [r4, #464]	; 0x1d0
   1acc6:	bl	17c48 <rb_free_nodes@@Base+0x34a>
   1acca:	and.w	r6, r0, r0, asr #31
   1acce:	b.n	1aa24 <btrfs_search_slot@@Base+0x7e8>
   1acd0:	strh	r1, [r4, #30]
   1acd2:	subs	r6, #15
   1acd4:	movs	r5, #168	; 0xa8
   1acd6:	movs	r2, r0
   1acd8:	movs	r3, #181	; 0xb5
   1acda:	movs	r2, r0
   1acdc:	movs	r5, #98	; 0x62
   1acde:	movs	r2, r0
   1ace0:	movs	r3, #155	; 0x9b
   1ace2:	movs	r2, r0
   1ace4:	cdp2	0, 1, cr0, cr5, cr1, {0}
   1ace8:	movs	r3, #76	; 0x4c
   1acea:	movs	r2, r0
   1acec:	movs	r1, #184	; 0xb8
   1acee:	movs	r2, r0
   1acf0:	movs	r1, #102	; 0x66
   1acf2:	movs	r2, r0
   1acf4:	movs	r2, #234	; 0xea
   1acf6:	movs	r2, r0
   1acf8:	movs	r1, #228	; 0xe4
   1acfa:	movs	r2, r0
   1acfc:	adds	r1, #137	; 0x89
   1acfe:	movs	r2, r0
   1ad00:	add	r1, sp, #112	; 0x70
   1ad02:	movs	r2, #0
   1ad04:	str	r1, [sp, #72]	; 0x48
   1ad06:	bl	17952 <rb_free_nodes@@Base+0x54>
   1ad0a:	mov	r0, r7
   1ad0c:	vmov	r2, s17
   1ad10:	ldr	r1, [sp, #72]	; 0x48
   1ad12:	bl	1792e <rb_free_nodes@@Base+0x30>
   1ad16:	mov	r0, r7
   1ad18:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1ad1c:	b.n	1aadc <btrfs_search_slot@@Base+0x8a0>
   1ad1e:	add	r1, sp, #112	; 0x70
   1ad20:	mov	r0, r5
   1ad22:	movs	r2, #0
   1ad24:	str	r1, [sp, #72]	; 0x48
   1ad26:	bl	17952 <rb_free_nodes@@Base+0x54>
   1ad2a:	mov	r0, r7
   1ad2c:	ldr	r2, [sp, #52]	; 0x34
   1ad2e:	ldr	r1, [sp, #72]	; 0x48
   1ad30:	bl	1792e <rb_free_nodes@@Base+0x30>
   1ad34:	mov	r0, r7
   1ad36:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1ad3a:	b.n	1abec <btrfs_search_slot@@Base+0x9b0>
   1ad3c:	ldr	r2, [sp, #48]	; 0x30
   1ad3e:	subs	r3, r2, r3
   1ad40:	str.w	r3, [r8, #32]
   1ad44:	b.n	1ac1e <btrfs_search_slot@@Base+0x9e2>
   1ad46:	ldr.w	r2, [r8, #32]
   1ad4a:	ldr	r1, [pc, #108]	; (1adb8 <btrfs_search_slot@@Base+0xb7c>)
   1ad4c:	ldr	r0, [pc, #108]	; (1adbc <btrfs_search_slot@@Base+0xb80>)
   1ad4e:	str	r2, [sp, #100]	; 0x64
   1ad50:	add	r1, pc
   1ad52:	ldr.w	r3, [r3, #192]	; 0xc0
   1ad56:	add.w	r1, r1, #342	; 0x156
   1ad5a:	add	r0, pc
   1ad5c:	subs	r2, r3, #1
   1ad5e:	negs	r3, r2
   1ad60:	adcs	r3, r2
   1ad62:	movw	r2, #1227	; 0x4cb
   1ad66:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1ad6a:	b.w	1a4ba <btrfs_search_slot@@Base+0x27e>
   1ad6e:	ldr	r3, [sp, #88]	; 0x58
   1ad70:	cbz	r3, 1ad8a <btrfs_search_slot@@Base+0xb4e>
   1ad72:	ldr	r3, [sp, #56]	; 0x38
   1ad74:	mov	r1, fp
   1ad76:	vmov	r0, s16
   1ad7a:	ldr	r2, [r3, #0]
   1ad7c:	ldr	r3, [r3, #4]
   1ad7e:	strd	r2, r3, [sp]
   1ad82:	ldr	r3, [sp, #100]	; 0x64
   1ad84:	ldr	r2, [sp, #44]	; 0x2c
   1ad86:	bl	18c88 <reada_for_search@@Base>
   1ad8a:	vmov	r0, s16
   1ad8e:	ldrd	r1, r2, [sp, #96]	; 0x60
   1ad92:	bl	18c0e <read_node_slot@@Base>
   1ad96:	str	r0, [sp, #96]	; 0x60
   1ad98:	bl	179ac <rb_free_nodes@@Base+0xae>
   1ad9c:	cmp	r0, #0
   1ad9e:	bne.w	1a2de <btrfs_search_slot@@Base+0xa2>
   1ada2:	mvn.w	r9, #4
   1ada6:	b.w	1a30e <btrfs_search_slot@@Base+0xd2>
   1adaa:	mov	r0, r9
   1adac:	add	sp, #140	; 0x8c
   1adae:	vpop	{d8-d9}
   1adb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1adb6:	nop
   1adb8:	movs	r0, #240	; 0xf0
   1adba:	movs	r2, r0
   1adbc:	subs	r2, r5, #5
   1adbe:	movs	r2, r0

0001adc0 <btrfs_split_item@@Base>:
   1adc0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1adc4:	sub	sp, #76	; 0x4c
   1adc6:	mov	r4, r2
   1adc8:	ldr	r2, [pc, #536]	; (1afe4 <btrfs_split_item@@Base+0x224>)
   1adca:	str	r3, [sp, #12]
   1adcc:	add.w	r8, sp, #28
   1add0:	ldr	r3, [pc, #532]	; (1afe8 <btrfs_split_item@@Base+0x228>)
   1add2:	add	r2, pc
   1add4:	ldr	r5, [r4, #0]
   1add6:	mov	r6, r0
   1add8:	mov	r7, r1
   1adda:	mov	r1, r8
   1addc:	ldr	r3, [r2, r3]
   1adde:	mov	r0, r5
   1ade0:	ldr	r2, [r4, #32]
   1ade2:	ldr	r3, [r3, #0]
   1ade4:	str	r3, [sp, #68]	; 0x44
   1ade6:	mov.w	r3, #0
   1adea:	bl	17db0 <rb_free_nodes@@Base+0x4b2>
   1adee:	mov	r0, r5
   1adf0:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1adf4:	cmp	r0, #24
   1adf6:	bhi.n	1ae8c <btrfs_split_item@@Base+0xcc>
   1adf8:	ldr	r3, [r4, #32]
   1adfa:	mov.w	r9, #25
   1adfe:	mov	r0, r4
   1ae00:	mov.w	sl, #0
   1ae04:	mla	r3, r9, r3, r5
   1ae08:	ldr.w	fp, [r3, #218]	; 0xda
   1ae0c:	bl	17e58 <btrfs_release_path@@Base>
   1ae10:	movs	r3, #1
   1ae12:	mov	r2, r8
   1ae14:	strb.w	r3, [r4, #66]	; 0x42
   1ae18:	mov	r1, r7
   1ae1a:	str	r3, [sp, #4]
   1ae1c:	mov	r0, r6
   1ae1e:	mov	r3, r4
   1ae20:	str.w	sl, [sp]
   1ae24:	bl	1a23c <btrfs_search_slot@@Base>
   1ae28:	strb.w	sl, [r4, #66]	; 0x42
   1ae2c:	cmp	r0, #0
   1ae2e:	bne.w	1afd8 <btrfs_split_item@@Base+0x218>
   1ae32:	ldr	r3, [r4, #32]
   1ae34:	ldr	r2, [r4, #0]
   1ae36:	mla	r3, r9, r3, r2
   1ae3a:	ldr.w	r3, [r3, #218]	; 0xda
   1ae3e:	cmp	r3, fp
   1ae40:	bne.w	1afd8 <btrfs_split_item@@Base+0x218>
   1ae44:	mov	r3, r4
   1ae46:	mov	r2, r8
   1ae48:	mov	r1, r7
   1ae4a:	strd	r0, r0, [sp]
   1ae4e:	mov	r0, r6
   1ae50:	bl	19950 <btrfs_check_leaf@@Base+0x8e0>
   1ae54:	ldr	r1, [pc, #404]	; (1afec <btrfs_split_item@@Base+0x22c>)
   1ae56:	movw	r2, #2390	; 0x956
   1ae5a:	add	r1, pc
   1ae5c:	addw	r1, r1, #407	; 0x197
   1ae60:	str	r1, [sp, #16]
   1ae62:	mov	r3, r0
   1ae64:	ldr	r0, [pc, #392]	; (1aff0 <btrfs_split_item@@Base+0x230>)
   1ae66:	add	r0, pc
   1ae68:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1ae6c:	mov	r0, r5
   1ae6e:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1ae72:	ldr	r1, [sp, #16]
   1ae74:	movw	r2, #2392	; 0x958
   1ae78:	cmp	r0, #24
   1ae7a:	ldr	r0, [pc, #376]	; (1aff4 <btrfs_split_item@@Base+0x234>)
   1ae7c:	it	hi
   1ae7e:	movhi	r3, #0
   1ae80:	add	r0, pc
   1ae82:	it	ls
   1ae84:	movls	r3, #1
   1ae86:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1ae8a:	ldr	r5, [r4, #0]
   1ae8c:	ldr	r3, [r4, #32]
   1ae8e:	mov.w	sl, #25
   1ae92:	mul.w	r3, sl, r3
   1ae96:	adds	r3, #101	; 0x65
   1ae98:	str	r3, [sp, #20]
   1ae9a:	ldr	r2, [sp, #20]
   1ae9c:	add.w	r3, r5, #96	; 0x60
   1aea0:	add	r3, r2
   1aea2:	ldr.w	r6, [r3, #21]
   1aea6:	ldr.w	r2, [r3, #17]
   1aeaa:	mov	r0, r6
   1aeac:	str	r2, [sp, #16]
   1aeae:	blx	8634 <malloc@plt+0x4>
   1aeb2:	ldr	r1, [pc, #324]	; (1aff8 <btrfs_split_item@@Base+0x238>)
   1aeb4:	movw	r2, #2402	; 0x962
   1aeb8:	add	r1, pc
   1aeba:	addw	r1, r1, #407	; 0x197
   1aebe:	clz	r3, r0
   1aec2:	mov	r9, r0
   1aec4:	ldr	r0, [pc, #308]	; (1affc <btrfs_split_item@@Base+0x23c>)
   1aec6:	lsrs	r3, r3, #5
   1aec8:	add	r0, pc
   1aeca:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1aece:	ldr	r2, [sp, #16]
   1aed0:	mov	r1, r9
   1aed2:	mov	r0, r5
   1aed4:	adds	r2, #101	; 0x65
   1aed6:	mov	r3, r6
   1aed8:	bl	1731a <read_extent_buffer@@Base>
   1aedc:	ldr	r1, [r4, #32]
   1aede:	ldr	r5, [r4, #0]
   1aee0:	add.w	fp, r1, #1
   1aee4:	mla	r1, r1, sl, sl
   1aee8:	ldr.w	r8, [r5, #192]	; 0xc0
   1aeec:	cmp	fp, r8
   1aeee:	add.w	r7, r1, #101	; 0x65
   1aef2:	bcs.n	1af06 <btrfs_split_item@@Base+0x146>
   1aef4:	sub.w	r3, r8, fp
   1aef8:	adds	r1, #126	; 0x7e
   1aefa:	mov	r2, r7
   1aefc:	mov	r0, r5
   1aefe:	mul.w	r3, sl, r3
   1af02:	bl	1738c <memmove_extent_buffer@@Base>
   1af06:	ldr	r3, [sp, #12]
   1af08:	add	r1, sp, #48	; 0x30
   1af0a:	mov	r0, r5
   1af0c:	add.w	r8, r8, #1
   1af10:	ldr.w	r2, [r3, #9]
   1af14:	ldr.w	r3, [r3, #13]
   1af18:	str.w	r2, [sp, #57]	; 0x39
   1af1c:	str.w	r3, [sp, #61]	; 0x3d
   1af20:	ldr	r3, [sp, #12]
   1af22:	ldrb	r3, [r3, #8]
   1af24:	strb.w	r3, [sp, #56]	; 0x38
   1af28:	ldr	r3, [sp, #12]
   1af2a:	ldr	r2, [r3, #0]
   1af2c:	ldr	r3, [r3, #4]
   1af2e:	strd	r2, r3, [sp, #48]	; 0x30
   1af32:	mov	r2, fp
   1af34:	bl	1793a <rb_free_nodes@@Base+0x3c>
   1af38:	add.w	r2, r5, #96	; 0x60
   1af3c:	ldr	r3, [sp, #16]
   1af3e:	add	r7, r2
   1af40:	ldr	r1, [sp, #16]
   1af42:	mov	r0, r5
   1af44:	str.w	r3, [r7, #17]
   1af48:	ldr	r3, [sp, #112]	; 0x70
   1af4a:	sub.w	sl, r6, r3
   1af4e:	ldr	r3, [sp, #20]
   1af50:	add	r6, r1
   1af52:	ldr	r1, [sp, #112]	; 0x70
   1af54:	add	r3, r2
   1af56:	str.w	sl, [r7, #21]
   1af5a:	subs	r6, r6, r1
   1af5c:	str.w	r1, [r3, #21]
   1af60:	movs	r1, #25
   1af62:	str.w	r6, [r3, #17]
   1af66:	str.w	r8, [r5, #192]	; 0xc0
   1af6a:	ldr	r3, [r4, #32]
   1af6c:	mla	r3, r1, r3, r2
   1af70:	mov	r1, r9
   1af72:	ldr.w	r2, [r3, #118]	; 0x76
   1af76:	ldr	r3, [sp, #112]	; 0x70
   1af78:	adds	r2, #101	; 0x65
   1af7a:	bl	17330 <write_extent_buffer@@Base>
   1af7e:	ldr.w	r2, [r7, #17]
   1af82:	ldr	r1, [sp, #112]	; 0x70
   1af84:	mov	r3, sl
   1af86:	adds	r2, #101	; 0x65
   1af88:	mov	r0, r5
   1af8a:	add	r1, r9
   1af8c:	bl	17330 <write_extent_buffer@@Base>
   1af90:	mov	r0, r5
   1af92:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1af96:	mov	r0, r5
   1af98:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1af9c:	cmp	r0, #0
   1af9e:	bge.n	1afbc <btrfs_split_item@@Base+0x1fc>
   1afa0:	mov	r0, r5
   1afa2:	bl	25020 <btrfs_print_leaf@@Base>
   1afa6:	ldr	r1, [pc, #88]	; (1b000 <btrfs_split_item@@Base+0x240>)
   1afa8:	ldr	r0, [pc, #88]	; (1b004 <btrfs_split_item@@Base+0x244>)
   1afaa:	movs	r3, #1
   1afac:	add	r1, pc
   1afae:	movw	r2, #2446	; 0x98e
   1afb2:	addw	r1, r1, #407	; 0x197
   1afb6:	add	r0, pc
   1afb8:	bl	179da <rb_free_nodes@@Base+0xdc>
   1afbc:	mov	r0, r9
   1afbe:	blx	83f0 <free@plt+0x4>
   1afc2:	movs	r0, #0
   1afc4:	ldr	r2, [pc, #64]	; (1b008 <btrfs_split_item@@Base+0x248>)
   1afc6:	ldr	r3, [pc, #32]	; (1afe8 <btrfs_split_item@@Base+0x228>)
   1afc8:	add	r2, pc
   1afca:	ldr	r3, [r2, r3]
   1afcc:	ldr	r2, [r3, #0]
   1afce:	ldr	r3, [sp, #68]	; 0x44
   1afd0:	eors	r2, r3
   1afd2:	beq.n	1afde <btrfs_split_item@@Base+0x21e>
   1afd4:	blx	84cc <__stack_chk_fail@plt>
   1afd8:	mvn.w	r0, #10
   1afdc:	b.n	1afc4 <btrfs_split_item@@Base+0x204>
   1afde:	add	sp, #76	; 0x4c
   1afe0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1afe4:	ldr	r7, [sp, #728]	; 0x2d8
   1afe6:	movs	r4, r0
   1afe8:	lsls	r4, r4, #8
   1afea:	movs	r0, r0
   1afec:	subs	r6, r4, #7
   1afee:	movs	r2, r0
   1aff0:	str.w	r0, [sp, #1]
   1aff4:	subs	r1, r4, #1
   1aff6:	movs	r2, r0
   1aff8:	subs	r0, r1, #6
   1affa:	movs	r2, r0
   1affc:	subs	r1, r2, #1
   1affe:	movs	r2, r0
   1b000:	subs	r4, r2, #2
   1b002:	movs	r2, r0
   1b004:	cmp	r6, #53	; 0x35
   1b006:	movs	r2, r0
   1b008:	ldr	r5, [sp, #768]	; 0x300
   1b00a:	movs	r4, r0

0001b00c <btrfs_insert_empty_items@@Base>:
   1b00c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b010:	sub	sp, #60	; 0x3c
   1b012:	mov	fp, r3
   1b014:	mov.w	r8, #0
   1b018:	ldr	r3, [sp, #96]	; 0x60
   1b01a:	strd	r1, r2, [sp, #16]
   1b01e:	ldr	r2, [pc, #616]	; (1b288 <btrfs_insert_empty_items@@Base+0x27c>)
   1b020:	str	r3, [sp, #24]
   1b022:	ldr	r3, [pc, #616]	; (1b28c <btrfs_insert_empty_items@@Base+0x280>)
   1b024:	add	r2, pc
   1b026:	add	r3, pc
   1b028:	str	r3, [sp, #28]
   1b02a:	ldr	r3, [pc, #612]	; (1b290 <btrfs_insert_empty_items@@Base+0x284>)
   1b02c:	ldr	r3, [r2, r3]
   1b02e:	ldr	r3, [r3, #0]
   1b030:	str	r3, [sp, #52]	; 0x34
   1b032:	mov.w	r3, #0
   1b036:	mov	r3, r8
   1b038:	ldr	r2, [sp, #100]	; 0x64
   1b03a:	cmp	r3, r2
   1b03c:	blt.n	1b05a <btrfs_insert_empty_items@@Base+0x4e>
   1b03e:	ldr	r3, [sp, #16]
   1b040:	ldr	r3, [r3, #0]
   1b042:	cbnz	r3, 1b066 <btrfs_insert_empty_items@@Base+0x5a>
   1b044:	ldr	r1, [pc, #588]	; (1b294 <btrfs_insert_empty_items@@Base+0x288>)
   1b046:	movs	r3, #1
   1b048:	ldr	r0, [pc, #588]	; (1b298 <btrfs_insert_empty_items@@Base+0x28c>)
   1b04a:	movw	r2, #2636	; 0xa4c
   1b04e:	add	r1, pc
   1b050:	add.w	r1, r1, #424	; 0x1a8
   1b054:	add	r0, pc
   1b056:	bl	179da <rb_free_nodes@@Base+0xdc>
   1b05a:	ldr	r2, [sp, #24]
   1b05c:	ldr.w	r2, [r2, r3, lsl #2]
   1b060:	adds	r3, #1
   1b062:	add	r8, r2
   1b064:	b.n	1b038 <btrfs_insert_empty_items@@Base+0x2c>
   1b066:	ldr	r3, [sp, #100]	; 0x64
   1b068:	movs	r2, #25
   1b06a:	ldr	r1, [sp, #16]
   1b06c:	mov.w	r9, #1
   1b070:	mla	r5, r2, r3, r8
   1b074:	ldr	r3, [sp, #20]
   1b076:	mov	r2, fp
   1b078:	strd	r5, r9, [sp]
   1b07c:	bl	1a23c <btrfs_search_slot@@Base>
   1b080:	cmp	r0, #0
   1b082:	beq.w	1b266 <btrfs_insert_empty_items@@Base+0x25a>
   1b086:	blt.w	1b26a <btrfs_insert_empty_items@@Base+0x25e>
   1b08a:	ldr	r3, [sp, #20]
   1b08c:	ldr	r4, [r3, #0]
   1b08e:	ldr.w	r3, [r4, #192]	; 0xc0
   1b092:	mov	r1, r4
   1b094:	str	r3, [sp, #12]
   1b096:	ldr	r3, [sp, #16]
   1b098:	ldr.w	r0, [r3, #464]	; 0x1d0
   1b09c:	add.w	r0, r0, #384	; 0x180
   1b0a0:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   1b0a4:	mov	r6, r0
   1b0a6:	mov	r0, r4
   1b0a8:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1b0ac:	cmp	r0, r5
   1b0ae:	bcs.n	1b0e8 <btrfs_insert_empty_items@@Base+0xdc>
   1b0b0:	mov	r0, r4
   1b0b2:	bl	25020 <btrfs_print_leaf@@Base>
   1b0b6:	ldr	r2, [sp, #28]
   1b0b8:	ldr	r3, [pc, #480]	; (1b29c <btrfs_insert_empty_items@@Base+0x290>)
   1b0ba:	mov	r0, r4
   1b0bc:	ldr	r3, [r2, r3]
   1b0be:	ldr	r6, [r3, #0]
   1b0c0:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1b0c4:	ldr	r2, [pc, #472]	; (1b2a0 <btrfs_insert_empty_items@@Base+0x294>)
   1b0c6:	mov	r3, r5
   1b0c8:	mov	r1, r9
   1b0ca:	add	r2, pc
   1b0cc:	str	r0, [sp, #0]
   1b0ce:	mov	r0, r6
   1b0d0:	blx	881c <__fprintf_chk@plt+0x4>
   1b0d4:	ldr	r1, [pc, #460]	; (1b2a4 <btrfs_insert_empty_items@@Base+0x298>)
   1b0d6:	ldr	r0, [pc, #464]	; (1b2a8 <btrfs_insert_empty_items@@Base+0x29c>)
   1b0d8:	mov	r3, r9
   1b0da:	add	r1, pc
   1b0dc:	movw	r2, #2655	; 0xa5f
   1b0e0:	add.w	r1, r1, #424	; 0x1a8
   1b0e4:	add	r0, pc
   1b0e6:	b.n	1b056 <btrfs_insert_empty_items@@Base+0x4a>
   1b0e8:	ldr	r3, [sp, #20]
   1b0ea:	movw	r2, #2659	; 0xa63
   1b0ee:	ldr.w	sl, [pc, #444]	; 1b2ac <btrfs_insert_empty_items@@Base+0x2a0>
   1b0f2:	ldr	r0, [pc, #444]	; (1b2b0 <btrfs_insert_empty_items@@Base+0x2a4>)
   1b0f4:	ldr	r5, [r3, #32]
   1b0f6:	add	sl, pc
   1b0f8:	add.w	sl, sl, #424	; 0x1a8
   1b0fc:	add	r0, pc
   1b0fe:	lsrs	r3, r5, #31
   1b100:	mov	r1, sl
   1b102:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1b106:	ldr	r3, [sp, #12]
   1b108:	cmp	r5, r3
   1b10a:	bcs.n	1b152 <btrfs_insert_empty_items@@Base+0x146>
   1b10c:	mov	r1, r5
   1b10e:	mov	r0, r4
   1b110:	bl	1791c <rb_free_nodes@@Base+0x1e>
   1b114:	cmp	r6, r0
   1b116:	mov	r7, r0
   1b118:	bhi.n	1b1d2 <btrfs_insert_empty_items@@Base+0x1c6>
   1b11a:	add.w	ip, r4, #197	; 0xc5
   1b11e:	mov	r2, r5
   1b120:	movs	r3, #25
   1b122:	ldr	r1, [sp, #12]
   1b124:	cmp	r2, r1
   1b126:	bne.n	1b1fe <btrfs_insert_empty_items@@Base+0x1f2>
   1b128:	subs	r0, r1, r5
   1b12a:	ldr	r1, [sp, #100]	; 0x64
   1b12c:	mul.w	r2, r3, r5
   1b130:	add	r1, r5
   1b132:	muls	r1, r3
   1b134:	adds	r2, #101	; 0x65
   1b136:	muls	r3, r0
   1b138:	mov	r0, r4
   1b13a:	adds	r1, #101	; 0x65
   1b13c:	bl	1738c <memmove_extent_buffer@@Base>
   1b140:	add.w	r2, r6, #101	; 0x65
   1b144:	subs	r3, r7, r6
   1b146:	sub.w	r1, r2, r8
   1b14a:	mov	r0, r4
   1b14c:	mov	r6, r7
   1b14e:	bl	1738c <memmove_extent_buffer@@Base>
   1b152:	mov.w	r9, #25
   1b156:	add	r1, sp, #32
   1b158:	mla	r9, r9, r5, r4
   1b15c:	mov	r7, fp
   1b15e:	mov.w	r8, #0
   1b162:	ldr	r3, [sp, #100]	; 0x64
   1b164:	add.w	sl, r9, #25
   1b168:	cmp	r8, r3
   1b16a:	blt.n	1b212 <btrfs_insert_empty_items@@Base+0x206>
   1b16c:	ldr	r3, [sp, #12]
   1b16e:	mov	r0, r4
   1b170:	ldr	r2, [sp, #100]	; 0x64
   1b172:	add	r3, r2
   1b174:	str.w	r3, [r4, #192]	; 0xc0
   1b178:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1b17c:	cbnz	r5, 1b1ae <btrfs_insert_empty_items@@Base+0x1a2>
   1b17e:	ldr.w	r3, [fp, #13]
   1b182:	ldr.w	r2, [fp, #9]
   1b186:	ldrd	r0, r1, [sp, #16]
   1b18a:	str.w	r3, [sp, #45]	; 0x2d
   1b18e:	ldrb.w	r3, [fp, #8]
   1b192:	str.w	r2, [sp, #41]	; 0x29
   1b196:	ldr.w	r2, [fp]
   1b19a:	strb.w	r3, [sp, #40]	; 0x28
   1b19e:	ldr.w	r3, [fp, #4]
   1b1a2:	strd	r2, r3, [sp, #32]
   1b1a6:	add	r2, sp, #32
   1b1a8:	movs	r3, #1
   1b1aa:	bl	18e60 <btrfs_fixup_low_keys@@Base>
   1b1ae:	mov	r0, r4
   1b1b0:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   1b1b4:	cmp	r0, #0
   1b1b6:	bge.n	1b27e <btrfs_insert_empty_items@@Base+0x272>
   1b1b8:	mov	r0, r4
   1b1ba:	bl	25020 <btrfs_print_leaf@@Base>
   1b1be:	ldr	r1, [pc, #244]	; (1b2b4 <btrfs_insert_empty_items@@Base+0x2a8>)
   1b1c0:	ldr	r0, [pc, #244]	; (1b2b8 <btrfs_insert_empty_items@@Base+0x2ac>)
   1b1c2:	movs	r3, #1
   1b1c4:	add	r1, pc
   1b1c6:	movw	r2, #2714	; 0xa9a
   1b1ca:	add.w	r1, r1, #424	; 0x1a8
   1b1ce:	add	r0, pc
   1b1d0:	b.n	1b056 <btrfs_insert_empty_items@@Base+0x4a>
   1b1d2:	mov	r0, r4
   1b1d4:	bl	25020 <btrfs_print_leaf@@Base>
   1b1d8:	ldr	r2, [sp, #28]
   1b1da:	ldr	r3, [pc, #192]	; (1b29c <btrfs_insert_empty_items@@Base+0x290>)
   1b1dc:	mov	r1, r9
   1b1de:	ldr	r0, [r2, r3]
   1b1e0:	mov	r3, r5
   1b1e2:	ldr	r2, [pc, #216]	; (1b2bc <btrfs_insert_empty_items@@Base+0x2b0>)
   1b1e4:	strd	r7, r6, [sp]
   1b1e8:	add	r2, pc
   1b1ea:	ldr	r0, [r0, #0]
   1b1ec:	blx	881c <__fprintf_chk@plt+0x4>
   1b1f0:	ldr	r0, [pc, #204]	; (1b2c0 <btrfs_insert_empty_items@@Base+0x2b4>)
   1b1f2:	mov	r3, r9
   1b1f4:	movw	r2, #2668	; 0xa6c
   1b1f8:	add	r0, pc
   1b1fa:	mov	r1, sl
   1b1fc:	b.n	1b056 <btrfs_insert_empty_items@@Base+0x4a>
   1b1fe:	mla	r0, r3, r2, ip
   1b202:	adds	r2, #1
   1b204:	ldr.w	r1, [r0, #17]
   1b208:	sub.w	r1, r1, r8
   1b20c:	str.w	r1, [r0, #17]
   1b210:	b.n	1b122 <btrfs_insert_empty_items@@Base+0x116>
   1b212:	ldr.w	r3, [r7, #13]
   1b216:	mov	r0, r4
   1b218:	ldr.w	r2, [r7, #9]
   1b21c:	adds	r7, #17
   1b21e:	str	r1, [sp, #28]
   1b220:	str.w	r3, [sp, #45]	; 0x2d
   1b224:	ldrb.w	r3, [r7, #-9]
   1b228:	str.w	r2, [sp, #41]	; 0x29
   1b22c:	ldr.w	r2, [r7, #-17]
   1b230:	strb.w	r3, [sp, #40]	; 0x28
   1b234:	ldr.w	r3, [r7, #-13]
   1b238:	strd	r2, r3, [sp, #32]
   1b23c:	add.w	r2, r5, r8
   1b240:	bl	1793a <rb_free_nodes@@Base+0x3c>
   1b244:	ldr	r3, [sp, #24]
   1b246:	ldr	r1, [sp, #28]
   1b248:	ldr.w	r3, [r3, r8, lsl #2]
   1b24c:	subs	r3, r6, r3
   1b24e:	str.w	r3, [r9, #214]	; 0xd6
   1b252:	ldr	r3, [sp, #24]
   1b254:	ldr.w	r3, [r3, r8, lsl #2]
   1b258:	add.w	r8, r8, #1
   1b25c:	subs	r6, r6, r3
   1b25e:	str.w	r3, [r9, #218]	; 0xda
   1b262:	mov	r9, sl
   1b264:	b.n	1b162 <btrfs_insert_empty_items@@Base+0x156>
   1b266:	mvn.w	r0, #16
   1b26a:	ldr	r2, [pc, #88]	; (1b2c4 <btrfs_insert_empty_items@@Base+0x2b8>)
   1b26c:	ldr	r3, [pc, #32]	; (1b290 <btrfs_insert_empty_items@@Base+0x284>)
   1b26e:	add	r2, pc
   1b270:	ldr	r3, [r2, r3]
   1b272:	ldr	r2, [r3, #0]
   1b274:	ldr	r3, [sp, #52]	; 0x34
   1b276:	eors	r2, r3
   1b278:	beq.n	1b282 <btrfs_insert_empty_items@@Base+0x276>
   1b27a:	blx	84cc <__stack_chk_fail@plt>
   1b27e:	movs	r0, #0
   1b280:	b.n	1b26a <btrfs_insert_empty_items@@Base+0x25e>
   1b282:	add	sp, #60	; 0x3c
   1b284:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b288:	ldr	r5, [sp, #400]	; 0x190
   1b28a:	movs	r4, r0
   1b28c:	ldr	r5, [sp, #392]	; 0x188
   1b28e:	movs	r4, r0
   1b290:	lsls	r4, r4, #8
   1b292:	movs	r0, r0
   1b294:	adds	r2, r6, #7
   1b296:	movs	r2, r0
   1b298:	cmp	r5, #151	; 0x97
   1b29a:	movs	r2, r0
   1b29c:	lsls	r4, r6, #8
   1b29e:	movs	r0, r0
   1b2a0:	adds	r4, r2, #1
   1b2a2:	movs	r2, r0
   1b2a4:	adds	r6, r4, #5
   1b2a6:	movs	r2, r0
   1b2a8:	cmp	r5, #7
   1b2aa:	movs	r2, r0
   1b2ac:	adds	r2, r1, #5
   1b2ae:	movs	r2, r0
   1b2b0:	subs	r0, r3, r2
   1b2b2:	movs	r2, r0
   1b2b4:	adds	r4, r7, #1
   1b2b6:	movs	r2, r0
   1b2b8:	cmp	r4, #29
   1b2ba:	movs	r2, r0
   1b2bc:	subs	r4, r3, r5
   1b2be:	movs	r2, r0
   1b2c0:	cmp	r3, #243	; 0xf3
   1b2c2:	movs	r2, r0
   1b2c4:	ldr	r3, [sp, #104]	; 0x68
   1b2c6:	movs	r4, r0

0001b2c8 <btrfs_insert_item@@Base>:
   1b2c8:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b2cc:	mov	r8, r2
   1b2ce:	ldr	r2, [pc, #132]	; (1b354 <btrfs_insert_item@@Base+0x8c>)
   1b2d0:	mov	r6, r3
   1b2d2:	ldr	r3, [pc, #132]	; (1b358 <btrfs_insert_item@@Base+0x90>)
   1b2d4:	sub	sp, #24
   1b2d6:	add	r2, pc
   1b2d8:	mov	r5, r0
   1b2da:	str	r1, [sp, #12]
   1b2dc:	ldr	r3, [r2, r3]
   1b2de:	ldr	r7, [sp, #48]	; 0x30
   1b2e0:	ldr	r3, [r3, #0]
   1b2e2:	str	r3, [sp, #20]
   1b2e4:	mov.w	r3, #0
   1b2e8:	bl	17e50 <btrfs_alloc_path@@Base>
   1b2ec:	mov	r4, r0
   1b2ee:	cbz	r0, 1b344 <btrfs_insert_item@@Base+0x7c>
   1b2f0:	movs	r3, #1
   1b2f2:	mov	r2, r0
   1b2f4:	str	r3, [sp, #4]
   1b2f6:	mov	r0, r5
   1b2f8:	add	r3, sp, #16
   1b2fa:	ldr	r1, [sp, #12]
   1b2fc:	str	r3, [sp, #0]
   1b2fe:	mov	r3, r8
   1b300:	str	r7, [sp, #16]
   1b302:	bl	1b00c <btrfs_insert_empty_items@@Base>
   1b306:	mov	r5, r0
   1b308:	cbnz	r0, 1b32a <btrfs_insert_item@@Base+0x62>
   1b30a:	ldr	r0, [r4, #0]
   1b30c:	movs	r2, #25
   1b30e:	ldr	r3, [r4, #32]
   1b310:	mov	r1, r6
   1b312:	str	r0, [sp, #12]
   1b314:	mla	r3, r2, r3, r0
   1b318:	ldr.w	r2, [r3, #214]	; 0xd6
   1b31c:	mov	r3, r7
   1b31e:	adds	r2, #101	; 0x65
   1b320:	bl	17330 <write_extent_buffer@@Base>
   1b324:	ldr	r0, [sp, #12]
   1b326:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1b32a:	mov	r0, r4
   1b32c:	bl	17e7e <btrfs_free_path@@Base>
   1b330:	ldr	r2, [pc, #40]	; (1b35c <btrfs_insert_item@@Base+0x94>)
   1b332:	ldr	r3, [pc, #36]	; (1b358 <btrfs_insert_item@@Base+0x90>)
   1b334:	add	r2, pc
   1b336:	ldr	r3, [r2, r3]
   1b338:	ldr	r2, [r3, #0]
   1b33a:	ldr	r3, [sp, #20]
   1b33c:	eors	r2, r3
   1b33e:	beq.n	1b34a <btrfs_insert_item@@Base+0x82>
   1b340:	blx	84cc <__stack_chk_fail@plt>
   1b344:	mvn.w	r5, #11
   1b348:	b.n	1b330 <btrfs_insert_item@@Base+0x68>
   1b34a:	mov	r0, r5
   1b34c:	add	sp, #24
   1b34e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1b352:	nop
   1b354:	ldr	r2, [sp, #712]	; 0x2c8
   1b356:	movs	r4, r0
   1b358:	lsls	r4, r4, #8
   1b35a:	movs	r0, r0
   1b35c:	ldr	r2, [sp, #336]	; 0x150
   1b35e:	movs	r4, r0
   1b360:	push	{r4, r5, r6, r7, lr}
   1b362:	mov	r6, r0
   1b364:	mov	r7, r2
   1b366:	ldr.w	r0, [r3, #176]	; 0xb0
   1b36a:	mov	r4, r1
   1b36c:	mov	r5, r3
   1b36e:	ldr.w	r1, [r3, #180]	; 0xb4
   1b372:	sub	sp, #44	; 0x2c
   1b374:	ldrd	r2, r3, [r6, #8]
   1b378:	cmp	r3, r1
   1b37a:	ldr	r1, [pc, #116]	; (1b3f0 <btrfs_insert_item@@Base+0x128>)
   1b37c:	it	eq
   1b37e:	cmpeq	r2, r0
   1b380:	ldr	r0, [pc, #112]	; (1b3f4 <btrfs_insert_item@@Base+0x12c>)
   1b382:	add	r1, pc
   1b384:	movw	r2, #2805	; 0xaf5
   1b388:	ite	ne
   1b38a:	movne	r3, #1
   1b38c:	moveq	r3, #0
   1b38e:	addw	r1, r1, #449	; 0x1c1
   1b392:	add	r0, pc
   1b394:	bl	17a5c <rb_free_nodes@@Base+0x15e>
   1b398:	ldr	r3, [r7, #36]	; 0x24
   1b39a:	movs	r2, #1
   1b39c:	mov	r1, r7
   1b39e:	mov	r0, r4
   1b3a0:	bl	1a16c <btrfs_del_ptr@@Base>
   1b3a4:	cbnz	r0, 1b3ec <btrfs_insert_item@@Base+0x124>
   1b3a6:	ldr	r1, [r5, #76]	; 0x4c
   1b3a8:	ldr.w	r2, [r4, #200]	; 0xc8
   1b3ac:	ldr.w	r3, [r4, #204]	; 0xcc
   1b3b0:	subs	r2, r2, r1
   1b3b2:	ldr.w	r7, [r4, #447]	; 0x1bf
   1b3b6:	str.w	r2, [r4, #200]	; 0xc8
   1b3ba:	sbc.w	r3, r3, #0
   1b3be:	movs	r2, #0
   1b3c0:	str.w	r3, [r4, #204]	; 0xcc
   1b3c4:	ldr.w	r1, [r4, #451]	; 0x1c3
   1b3c8:	movs	r3, #0
   1b3ca:	strd	r2, r3, [sp, #32]
   1b3ce:	strd	r2, r3, [sp, #24]
   1b3d2:	strd	r2, r3, [sp, #8]
   1b3d6:	ldr	r3, [r5, #76]	; 0x4c
   1b3d8:	strd	r7, r1, [sp, #16]
   1b3dc:	mov	r1, r4
   1b3de:	strd	r3, r0, [sp]
   1b3e2:	mov	r0, r6
   1b3e4:	ldrd	r2, r3, [r5, #40]	; 0x28
   1b3e8:	bl	20c4c <btrfs_free_extent@@Base>
   1b3ec:	add	sp, #44	; 0x2c
   1b3ee:	pop	{r4, r5, r6, r7, pc}
   1b3f0:	subs	r6, r7, r2
   1b3f2:	movs	r2, r0
   1b3f4:	adds	r3, r2, r7
   1b3f6:	movs	r2, r0

0001b3f8 <btrfs_del_items@@Base>:
   1b3f8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b3fc:	mov	r6, r2
   1b3fe:	ldr	r2, [pc, #468]	; (1b5d4 <btrfs_del_items@@Base+0x1dc>)
   1b400:	mov	r8, r3
   1b402:	ldr	r3, [pc, #468]	; (1b5d8 <btrfs_del_items@@Base+0x1e0>)
   1b404:	sub	sp, #52	; 0x34
   1b406:	add	r2, pc
   1b408:	ldr	r5, [r6, #0]
   1b40a:	mov	sl, r0
   1b40c:	mov	r7, r1
   1b40e:	ldr	r3, [r2, r3]
   1b410:	ldr	r3, [r3, #0]
   1b412:	str	r3, [sp, #44]	; 0x2c
   1b414:	mov.w	r3, #0
   1b418:	ldr	r3, [sp, #88]	; 0x58
   1b41a:	add.w	r9, r8, r3
   1b41e:	add.w	r3, r5, #96	; 0x60
   1b422:	str	r3, [sp, #20]
   1b424:	movs	r3, #25
   1b426:	mul.w	r3, r3, r8
   1b42a:	adds	r2, r5, r3
   1b42c:	str	r3, [sp, #12]
   1b42e:	movs	r3, #0
   1b430:	mov	fp, r3
   1b432:	ldr	r0, [sp, #88]	; 0x58
   1b434:	add.w	r1, r2, #25
   1b438:	cmp	r3, r0
   1b43a:	blt.n	1b4b4 <btrfs_del_items@@Base+0xbc>
   1b43c:	ldr.w	r4, [r5, #192]	; 0xc0
   1b440:	str.w	r9, [sp, #16]
   1b444:	cmp	r9, r4
   1b446:	beq.n	1b49c <btrfs_del_items@@Base+0xa4>
   1b448:	ldr.w	r0, [r7, #464]	; 0x1d0
   1b44c:	mov	r1, r5
   1b44e:	add.w	r0, r0, #384	; 0x180
   1b452:	bl	179c0 <rb_free_nodes@@Base+0xc2>
   1b456:	ldr	r3, [sp, #20]
   1b458:	add.w	r1, r9, #4294967295	; 0xffffffff
   1b45c:	mov.w	ip, #25
   1b460:	mla	r1, ip, r1, r3
   1b464:	ldr.w	r3, [r1, #118]	; 0x76
   1b468:	add.w	r2, r0, #101	; 0x65
   1b46c:	subs	r3, r3, r0
   1b46e:	add.w	r1, r2, fp
   1b472:	mov	r0, r5
   1b474:	bl	1738c <memmove_extent_buffer@@Base>
   1b478:	add.w	r0, r5, #197	; 0xc5
   1b47c:	movs	r3, #25
   1b47e:	cmp	r4, r9
   1b480:	bhi.n	1b4c0 <btrfs_del_items@@Base+0xc8>
   1b482:	ldr	r2, [sp, #88]	; 0x58
   1b484:	mov	r0, r5
   1b486:	add.w	r1, r2, r8
   1b48a:	ldr	r2, [sp, #16]
   1b48c:	subs	r1, r4, r1
   1b48e:	muls	r2, r3
   1b490:	muls	r3, r1
   1b492:	ldr	r1, [sp, #12]
   1b494:	adds	r2, #101	; 0x65
   1b496:	adds	r1, #101	; 0x65
   1b498:	bl	1738c <memmove_extent_buffer@@Base>
   1b49c:	ldr	r3, [sp, #88]	; 0x58
   1b49e:	subs	r2, r4, r3
   1b4a0:	str.w	r2, [r5, #192]	; 0xc0
   1b4a4:	cbnz	r2, 1b4fc <btrfs_del_items@@Base+0x104>
   1b4a6:	ldr	r3, [r7, #0]
   1b4a8:	cmp	r3, r5
   1b4aa:	bne.n	1b4d4 <btrfs_del_items@@Base+0xdc>
   1b4ac:	strb.w	r2, [r5, #196]	; 0xc4
   1b4b0:	movs	r4, #0
   1b4b2:	b.n	1b4e8 <btrfs_del_items@@Base+0xf0>
   1b4b4:	ldr.w	r2, [r2, #218]	; 0xda
   1b4b8:	adds	r3, #1
   1b4ba:	add	fp, r2
   1b4bc:	mov	r2, r1
   1b4be:	b.n	1b432 <btrfs_del_items@@Base+0x3a>
   1b4c0:	mla	r1, r3, r9, r0
   1b4c4:	add.w	r9, r9, #1
   1b4c8:	ldr.w	r2, [r1, #17]
   1b4cc:	add	r2, fp
   1b4ce:	str.w	r2, [r1, #17]
   1b4d2:	b.n	1b47e <btrfs_del_items@@Base+0x86>
   1b4d4:	mov	r0, r5
   1b4d6:	bl	1d50c <clean_tree_block@@Base>
   1b4da:	mov	r3, r5
   1b4dc:	mov	r2, r6
   1b4de:	mov	r1, r7
   1b4e0:	mov	r0, sl
   1b4e2:	bl	1b360 <btrfs_insert_item@@Base+0x98>
   1b4e6:	mov	r4, r0
   1b4e8:	ldr	r2, [pc, #240]	; (1b5dc <btrfs_del_items@@Base+0x1e4>)
   1b4ea:	ldr	r3, [pc, #236]	; (1b5d8 <btrfs_del_items@@Base+0x1e0>)
   1b4ec:	add	r2, pc
   1b4ee:	ldr	r3, [r2, r3]
   1b4f0:	ldr	r2, [r3, #0]
   1b4f2:	ldr	r3, [sp, #44]	; 0x2c
   1b4f4:	eors	r2, r3
   1b4f6:	beq.n	1b5cc <btrfs_del_items@@Base+0x1d4>
   1b4f8:	blx	84cc <__stack_chk_fail@plt>
   1b4fc:	movs	r1, #0
   1b4fe:	mov	r0, r5
   1b500:	bl	17d60 <rb_free_nodes@@Base+0x462>
   1b504:	mov	r9, r0
   1b506:	cmp.w	r8, #0
   1b50a:	bne.n	1b524 <btrfs_del_items@@Base+0x12c>
   1b50c:	add	r4, sp, #24
   1b50e:	mov	r2, r8
   1b510:	mov	r0, r5
   1b512:	mov	r1, r4
   1b514:	bl	17946 <rb_free_nodes@@Base+0x48>
   1b518:	movs	r3, #1
   1b51a:	mov	r2, r4
   1b51c:	mov	r1, r6
   1b51e:	mov	r0, r7
   1b520:	bl	18e60 <btrfs_fixup_low_keys@@Base>
   1b524:	ldr.w	r3, [r7, #464]	; 0x1d0
   1b528:	ldr.w	r3, [r3, #384]	; 0x180
   1b52c:	subs	r3, #101	; 0x65
   1b52e:	cmp.w	r9, r3, lsr #2
   1b532:	bcs.n	1b5c4 <btrfs_del_items@@Base+0x1cc>
   1b534:	ldr	r3, [r5, #80]	; 0x50
   1b536:	mov	r2, r6
   1b538:	ldr.w	r8, [r6, #36]	; 0x24
   1b53c:	mov	r1, r7
   1b53e:	adds	r3, #1
   1b540:	mov	r0, sl
   1b542:	str	r3, [r5, #80]	; 0x50
   1b544:	movs	r3, #1
   1b546:	str	r3, [sp, #0]
   1b548:	bl	19620 <btrfs_check_leaf@@Base+0x5b0>
   1b54c:	subs	r4, r0, #0
   1b54e:	bge.n	1b5ba <btrfs_del_items@@Base+0x1c2>
   1b550:	cmn.w	r4, #28
   1b554:	it	eq
   1b556:	moveq	r4, #0
   1b558:	ldr	r3, [r6, #0]
   1b55a:	cmp	r3, r5
   1b55c:	bne.n	1b57e <btrfs_del_items@@Base+0x186>
   1b55e:	ldr.w	r3, [r5, #192]	; 0xc0
   1b562:	cbz	r3, 1b57e <btrfs_del_items@@Base+0x186>
   1b564:	movs	r3, #1
   1b566:	mov	r2, r6
   1b568:	mov	r1, r7
   1b56a:	mov	r0, sl
   1b56c:	str	r3, [sp, #0]
   1b56e:	bl	193a8 <btrfs_check_leaf@@Base+0x338>
   1b572:	cmp	r0, #0
   1b574:	bge.n	1b57e <btrfs_del_items@@Base+0x186>
   1b576:	cmn.w	r0, #28
   1b57a:	it	ne
   1b57c:	movne	r4, r0
   1b57e:	ldr.w	r3, [r5, #192]	; 0xc0
   1b582:	mov	r0, r5
   1b584:	cbnz	r3, 1b5be <btrfs_del_items@@Base+0x1c6>
   1b586:	bl	1d50c <clean_tree_block@@Base>
   1b58a:	mov	r3, r5
   1b58c:	mov	r2, r6
   1b58e:	mov	r1, r7
   1b590:	mov	r0, sl
   1b592:	str.w	r8, [r6, #36]	; 0x24
   1b596:	bl	1b360 <btrfs_insert_item@@Base+0x98>
   1b59a:	ldr	r1, [pc, #68]	; (1b5e0 <btrfs_del_items@@Base+0x1e8>)
   1b59c:	movw	r2, #2909	; 0xb5d
   1b5a0:	add	r1, pc
   1b5a2:	add.w	r1, r1, #464	; 0x1d0
   1b5a6:	mov	r4, r0
   1b5a8:	mov	r3, r0
   1b5aa:	ldr	r0, [pc, #56]	; (1b5e4 <btrfs_del_items@@Base+0x1ec>)
   1b5ac:	add	r0, pc
   1b5ae:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1b5b2:	mov	r0, r5
   1b5b4:	bl	16c20 <free_extent_buffer@@Base>
   1b5b8:	b.n	1b4e8 <btrfs_del_items@@Base+0xf0>
   1b5ba:	movs	r4, #0
   1b5bc:	b.n	1b558 <btrfs_del_items@@Base+0x160>
   1b5be:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1b5c2:	b.n	1b5b2 <btrfs_del_items@@Base+0x1ba>
   1b5c4:	mov	r0, r5
   1b5c6:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1b5ca:	b.n	1b4b0 <btrfs_del_items@@Base+0xb8>
   1b5cc:	mov	r0, r4
   1b5ce:	add	sp, #52	; 0x34
   1b5d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b5d4:	ldr	r1, [sp, #520]	; 0x208
   1b5d6:	movs	r4, r0
   1b5d8:	lsls	r4, r4, #8
   1b5da:	movs	r0, r0
   1b5dc:	ldr	r0, [sp, #624]	; 0x270
   1b5de:	movs	r4, r0
   1b5e0:	adds	r0, r4, r2
   1b5e2:	movs	r2, r0
   1b5e4:			; <UNDEFINED> instruction: 0xf1870001

0001b5e8 <btrfs_prev_leaf@@Base>:
   1b5e8:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1b5ec:	adds	r3, r1, #4
   1b5ee:	mov	r5, r1
   1b5f0:	movs	r6, #1
   1b5f2:	mov	r9, r3
   1b5f4:	ldr.w	r1, [r3], #4
   1b5f8:	cbz	r1, 1b604 <btrfs_prev_leaf@@Base+0x1c>
   1b5fa:	ldr	r7, [r3, #28]
   1b5fc:	cbnz	r7, 1b608 <btrfs_prev_leaf@@Base+0x20>
   1b5fe:	adds	r6, #1
   1b600:	cmp	r6, #8
   1b602:	bne.n	1b5f4 <btrfs_prev_leaf@@Base+0xc>
   1b604:	movs	r0, #1
   1b606:	b.n	1b628 <btrfs_prev_leaf@@Base+0x40>
   1b608:	ldr.w	r8, [r0, #464]	; 0x1d0
   1b60c:	subs	r7, #1
   1b60e:	mov	r2, r7
   1b610:	mov	r0, r8
   1b612:	bl	18c0e <read_node_slot@@Base>
   1b616:	mov	r4, r0
   1b618:	bl	179ac <rb_free_nodes@@Base+0xae>
   1b61c:	cbnz	r0, 1b62c <btrfs_prev_leaf@@Base+0x44>
   1b61e:	cmn.w	r4, #4096	; 0x1000
   1b622:	bhi.n	1b668 <btrfs_prev_leaf@@Base+0x80>
   1b624:	mvn.w	r0, #4
   1b628:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1b62c:	add.w	r3, r6, #8
   1b630:	str.w	r7, [r5, r3, lsl #2]
   1b634:	add.w	r5, r5, r6, lsl #2
   1b638:	ldr.w	r0, [r5, #-4]
   1b63c:	bl	16c20 <free_extent_buffer@@Base>
   1b640:	ldr.w	r2, [r4, #192]	; 0xc0
   1b644:	cbz	r2, 1b648 <btrfs_prev_leaf@@Base+0x60>
   1b646:	subs	r2, #1
   1b648:	cmp	r5, r9
   1b64a:	str.w	r4, [r5, #-4]
   1b64e:	str	r2, [r5, #28]
   1b650:	beq.n	1b66c <btrfs_prev_leaf@@Base+0x84>
   1b652:	mov	r1, r4
   1b654:	mov	r0, r8
   1b656:	bl	18c0e <read_node_slot@@Base>
   1b65a:	subs	r5, #4
   1b65c:	mov	r4, r0
   1b65e:	bl	179ac <rb_free_nodes@@Base+0xae>
   1b662:	cmp	r0, #0
   1b664:	bne.n	1b638 <btrfs_prev_leaf@@Base+0x50>
   1b666:	b.n	1b61e <btrfs_prev_leaf@@Base+0x36>
   1b668:	mov	r0, r4
   1b66a:	b.n	1b628 <btrfs_prev_leaf@@Base+0x40>
   1b66c:	movs	r0, #0
   1b66e:	b.n	1b628 <btrfs_prev_leaf@@Base+0x40>

0001b670 <btrfs_next_sibling_tree_block@@Base>:
   1b670:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b674:	mov	r5, r1
   1b676:	ldrb.w	r3, [r1, #65]	; 0x41
   1b67a:	mov	r7, r0
   1b67c:	ldr	r1, [pc, #232]	; (1b768 <btrfs_next_sibling_tree_block@@Base+0xf8>)
   1b67e:	movw	r2, #2996	; 0xbb4
   1b682:	cmp	r3, #6
   1b684:	ldr	r0, [pc, #228]	; (1b76c <btrfs_next_sibling_tree_block@@Base+0xfc>)
   1b686:	add	r1, pc
   1b688:	add.w	r4, r3, #1
   1b68c:	add.w	r1, r1, #480	; 0x1e0
   1b690:	add	r0, pc
   1b692:	ite	ls
   1b694:	movls	r3, #0
   1b696:	movhi	r3, #1
   1b698:	bl	17a14 <rb_free_nodes@@Base+0x116>
   1b69c:	add.w	r2, r5, #32
   1b6a0:	ldr.w	r6, [r5, r4, lsl #2]
   1b6a4:	cmp	r6, #0
   1b6a6:	beq.n	1b75e <btrfs_next_sibling_tree_block@@Base+0xee>
   1b6a8:	ldr.w	r3, [r2, r4, lsl #2]
   1b6ac:	add.w	r8, r3, #1
   1b6b0:	ldr.w	r3, [r6, #192]	; 0xc0
   1b6b4:	cmp	r8, r3
   1b6b6:	bcc.n	1b726 <btrfs_next_sibling_tree_block@@Base+0xb6>
   1b6b8:	adds	r4, #1
   1b6ba:	cmp	r4, #8
   1b6bc:	beq.n	1b75e <btrfs_next_sibling_tree_block@@Base+0xee>
   1b6be:	cmp	r4, #7
   1b6c0:	ble.n	1b6a0 <btrfs_next_sibling_tree_block@@Base+0x30>
   1b6c2:	movs	r6, #0
   1b6c4:	add.w	r3, r4, #8
   1b6c8:	add.w	sl, r5, r4, lsl #2
   1b6cc:	mov.w	fp, #0
   1b6d0:	mov.w	r9, #0
   1b6d4:	str.w	r8, [r5, r3, lsl #2]
   1b6d8:	mov.w	r8, #0
   1b6dc:	ldr.w	r0, [sl, #-4]
   1b6e0:	subs	r4, #1
   1b6e2:	bl	16c20 <free_extent_buffer@@Base>
   1b6e6:	str.w	r6, [sl, #-4]
   1b6ea:	str.w	fp, [sl, #28]
   1b6ee:	ldrb.w	r3, [r5, #65]	; 0x41
   1b6f2:	cmp	r3, r4
   1b6f4:	beq.n	1b762 <btrfs_next_sibling_tree_block@@Base+0xf2>
   1b6f6:	ldrsb.w	r3, [r5, #64]	; 0x40
   1b6fa:	cbz	r3, 1b70c <btrfs_next_sibling_tree_block@@Base+0x9c>
   1b6fc:	movs	r3, #0
   1b6fe:	mov	r2, r4
   1b700:	mov	r1, r5
   1b702:	mov	r0, r7
   1b704:	strd	r8, r9, [sp]
   1b708:	bl	18c88 <reada_for_search@@Base>
   1b70c:	mov	r1, r6
   1b70e:	movs	r2, #0
   1b710:	mov	r0, r7
   1b712:	sub.w	sl, sl, #4
   1b716:	bl	18c0e <read_node_slot@@Base>
   1b71a:	mov	r6, r0
   1b71c:	bl	179ac <rb_free_nodes@@Base+0xae>
   1b720:	cmp	r0, #0
   1b722:	bne.n	1b6dc <btrfs_next_sibling_tree_block@@Base+0x6c>
   1b724:	b.n	1b754 <btrfs_next_sibling_tree_block@@Base+0xe4>
   1b726:	ldrsb.w	r3, [r5, #64]	; 0x40
   1b72a:	cbz	r3, 1b740 <btrfs_next_sibling_tree_block@@Base+0xd0>
   1b72c:	movs	r2, #0
   1b72e:	movs	r3, #0
   1b730:	mov	r1, r5
   1b732:	strd	r2, r3, [sp]
   1b736:	mov	r0, r7
   1b738:	mov	r3, r8
   1b73a:	mov	r2, r4
   1b73c:	bl	18c88 <reada_for_search@@Base>
   1b740:	mov	r1, r6
   1b742:	mov	r2, r8
   1b744:	mov	r0, r7
   1b746:	bl	18c0e <read_node_slot@@Base>
   1b74a:	mov	r6, r0
   1b74c:	bl	179ac <rb_free_nodes@@Base+0xae>
   1b750:	cmp	r0, #0
   1b752:	bne.n	1b6c4 <btrfs_next_sibling_tree_block@@Base+0x54>
   1b754:	mvn.w	r0, #4
   1b758:	add	sp, #12
   1b75a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b75e:	movs	r0, #1
   1b760:	b.n	1b758 <btrfs_next_sibling_tree_block@@Base+0xe8>
   1b762:	movs	r0, #0
   1b764:	b.n	1b758 <btrfs_next_sibling_tree_block@@Base+0xe8>
   1b766:	nop
   1b768:	asrs	r2, r7, #30
   1b76a:	movs	r2, r0
   1b76c:	asrs	r5, r0, #28
   1b76e:	movs	r2, r0

0001b770 <btrfs_find_item@@Base>:
   1b770:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b774:	mov	r8, r0
   1b776:	ldr	r4, [pc, #200]	; (1b840 <btrfs_find_item@@Base+0xd0>)
   1b778:	sub	sp, #36	; 0x24
   1b77a:	ldr	r0, [pc, #200]	; (1b844 <btrfs_find_item@@Base+0xd4>)
   1b77c:	mov	r6, r1
   1b77e:	add	r4, pc
   1b780:	ldr	r7, [sp, #76]	; 0x4c
   1b782:	ldr	r0, [r4, r0]
   1b784:	ldr	r0, [r0, #0]
   1b786:	str	r0, [sp, #28]
   1b788:	mov.w	r0, #0
   1b78c:	strd	r2, r3, [sp, #8]
   1b790:	ldr	r3, [sp, #64]	; 0x40
   1b792:	ldrb.w	r0, [sp, #72]	; 0x48
   1b796:	str.w	r3, [sp, #17]
   1b79a:	ldr	r3, [sp, #68]	; 0x44
   1b79c:	strb.w	r0, [sp, #16]
   1b7a0:	str.w	r3, [sp, #21]
   1b7a4:	cbnz	r1, 1b7b4 <btrfs_find_item@@Base+0x44>
   1b7a6:	bl	17e50 <btrfs_alloc_path@@Base>
   1b7aa:	mov	r5, r0
   1b7ac:	cbnz	r0, 1b7b6 <btrfs_find_item@@Base+0x46>
   1b7ae:	mvn.w	r4, #11
   1b7b2:	b.n	1b81e <btrfs_find_item@@Base+0xae>
   1b7b4:	mov	r5, r1
   1b7b6:	mov.w	r9, #0
   1b7ba:	add	r2, sp, #8
   1b7bc:	mov	r3, r5
   1b7be:	mov	r1, r8
   1b7c0:	mov	r0, r9
   1b7c2:	strd	r9, r9, [sp]
   1b7c6:	bl	1a23c <btrfs_search_slot@@Base>
   1b7ca:	subs	r4, r0, #0
   1b7cc:	blt.n	1b814 <btrfs_find_item@@Base+0xa4>
   1b7ce:	cbz	r7, 1b814 <btrfs_find_item@@Base+0xa4>
   1b7d0:	ldr	r0, [r5, #0]
   1b7d2:	cbz	r4, 1b7f2 <btrfs_find_item@@Base+0x82>
   1b7d4:	ldr.w	r3, [r0, #192]	; 0xc0
   1b7d8:	ldr	r2, [r5, #32]
   1b7da:	cmp	r2, r3
   1b7dc:	bcc.n	1b7f2 <btrfs_find_item@@Base+0x82>
   1b7de:	strb.w	r9, [r5, #65]	; 0x41
   1b7e2:	mov	r1, r5
   1b7e4:	ldr.w	r0, [r8, #464]	; 0x1d0
   1b7e8:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   1b7ec:	mov	r4, r0
   1b7ee:	cbnz	r0, 1b814 <btrfs_find_item@@Base+0xa4>
   1b7f0:	ldr	r0, [r5, #0]
   1b7f2:	ldr	r2, [r5, #32]
   1b7f4:	mov	r1, r7
   1b7f6:	bl	17db0 <rb_free_nodes@@Base+0x4b2>
   1b7fa:	ldrb	r2, [r7, #8]
   1b7fc:	ldrb.w	r3, [sp, #16]
   1b800:	cmp	r2, r3
   1b802:	bne.n	1b832 <btrfs_find_item@@Base+0xc2>
   1b804:	ldrd	r2, r3, [sp, #8]
   1b808:	ldr	r1, [r7, #4]
   1b80a:	ldr	r0, [r7, #0]
   1b80c:	cmp	r1, r3
   1b80e:	ite	eq
   1b810:	cmpeq	r0, r2
   1b812:	movne	r4, #1
   1b814:	cmp	r5, r6
   1b816:	beq.n	1b81e <btrfs_find_item@@Base+0xae>
   1b818:	mov	r0, r5
   1b81a:	bl	17e7e <btrfs_free_path@@Base>
   1b81e:	ldr	r2, [pc, #40]	; (1b848 <btrfs_find_item@@Base+0xd8>)
   1b820:	ldr	r3, [pc, #32]	; (1b844 <btrfs_find_item@@Base+0xd4>)
   1b822:	add	r2, pc
   1b824:	ldr	r3, [r2, r3]
   1b826:	ldr	r2, [r3, #0]
   1b828:	ldr	r3, [sp, #28]
   1b82a:	eors	r2, r3
   1b82c:	beq.n	1b836 <btrfs_find_item@@Base+0xc6>
   1b82e:	blx	84cc <__stack_chk_fail@plt>
   1b832:	movs	r4, #1
   1b834:	b.n	1b814 <btrfs_find_item@@Base+0xa4>
   1b836:	mov	r0, r4
   1b838:	add	sp, #36	; 0x24
   1b83a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b83e:	nop
   1b840:	str	r6, [sp, #40]	; 0x28
   1b842:	movs	r4, r0
   1b844:	lsls	r4, r4, #8
   1b846:	movs	r0, r0
   1b848:	str	r5, [sp, #408]	; 0x198
   1b84a:	movs	r4, r0

0001b84c <btrfs_search_slot_for_read@@Base>:
   1b84c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   1b850:	mov	r5, r0
   1b852:	ldr.w	r8, [sp, #40]	; 0x28
   1b856:	mov	r6, r1
   1b858:	mov	r4, r2
   1b85a:	mov	r9, r3
   1b85c:	movs	r7, #0
   1b85e:	mov	r3, r4
   1b860:	mov	r2, r6
   1b862:	mov	r1, r5
   1b864:	movs	r0, #0
   1b866:	strd	r7, r7, [sp]
   1b86a:	bl	1a23c <btrfs_search_slot@@Base>
   1b86e:	cmp	r0, #0
   1b870:	ble.n	1b886 <btrfs_search_slot_for_read@@Base+0x3a>
   1b872:	ldr	r3, [r4, #32]
   1b874:	cmp.w	r9, #0
   1b878:	beq.n	1b8b8 <btrfs_search_slot_for_read@@Base+0x6c>
   1b87a:	ldr	r2, [r4, #0]
   1b87c:	ldr.w	r2, [r2, #192]	; 0xc0
   1b880:	cmp	r3, r2
   1b882:	bcs.n	1b88c <btrfs_search_slot_for_read@@Base+0x40>
   1b884:	movs	r0, #0
   1b886:	add	sp, #12
   1b888:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b88c:	strb.w	r7, [r4, #65]	; 0x41
   1b890:	mov	r1, r4
   1b892:	ldr.w	r0, [r5, #464]	; 0x1d0
   1b896:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   1b89a:	cmp	r0, #0
   1b89c:	ble.n	1b886 <btrfs_search_slot_for_read@@Base+0x3a>
   1b89e:	cmp.w	r8, #0
   1b8a2:	bne.n	1b8a8 <btrfs_search_slot_for_read@@Base+0x5c>
   1b8a4:	movs	r0, #1
   1b8a6:	b.n	1b886 <btrfs_search_slot_for_read@@Base+0x3a>
   1b8a8:	mov	r0, r4
   1b8aa:	mov.w	r9, #0
   1b8ae:	bl	17e58 <btrfs_release_path@@Base>
   1b8b2:	mov.w	r8, #0
   1b8b6:	b.n	1b85e <btrfs_search_slot_for_read@@Base+0x12>
   1b8b8:	cbnz	r3, 1b8ec <btrfs_search_slot_for_read@@Base+0xa0>
   1b8ba:	mov	r1, r4
   1b8bc:	mov	r0, r5
   1b8be:	bl	1b5e8 <btrfs_prev_leaf@@Base>
   1b8c2:	cmp	r0, #0
   1b8c4:	blt.n	1b886 <btrfs_search_slot_for_read@@Base+0x3a>
   1b8c6:	bne.n	1b8da <btrfs_search_slot_for_read@@Base+0x8e>
   1b8c8:	ldr	r2, [r4, #0]
   1b8ca:	ldr	r3, [r4, #32]
   1b8cc:	ldr.w	r2, [r2, #192]	; 0xc0
   1b8d0:	cmp	r3, r2
   1b8d2:	bne.n	1b884 <btrfs_search_slot_for_read@@Base+0x38>
   1b8d4:	subs	r3, #1
   1b8d6:	str	r3, [r4, #32]
   1b8d8:	b.n	1b886 <btrfs_search_slot_for_read@@Base+0x3a>
   1b8da:	cmp.w	r8, #0
   1b8de:	beq.n	1b8a4 <btrfs_search_slot_for_read@@Base+0x58>
   1b8e0:	mov	r0, r4
   1b8e2:	mov.w	r9, #1
   1b8e6:	bl	17e58 <btrfs_release_path@@Base>
   1b8ea:	b.n	1b8b2 <btrfs_search_slot_for_read@@Base+0x66>
   1b8ec:	subs	r3, #1
   1b8ee:	mov	r0, r9
   1b8f0:	str	r3, [r4, #32]
   1b8f2:	b.n	1b886 <btrfs_search_slot_for_read@@Base+0x3a>

0001b8f4 <btrfs_previous_item@@Base>:
   1b8f4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1b8f8:	mov	r6, r2
   1b8fa:	ldr	r2, [pc, #144]	; (1b98c <btrfs_previous_item@@Base+0x98>)
   1b8fc:	mov	r7, r3
   1b8fe:	ldr	r3, [pc, #144]	; (1b990 <btrfs_previous_item@@Base+0x9c>)
   1b900:	sub	sp, #28
   1b902:	add	r2, pc
   1b904:	mov	r5, r0
   1b906:	ldr.w	r8, [sp, #56]	; 0x38
   1b90a:	mov	r4, r1
   1b90c:	ldr	r3, [r2, r3]
   1b90e:	mov	r9, sp
   1b910:	ldr	r3, [r3, #0]
   1b912:	str	r3, [sp, #20]
   1b914:	mov.w	r3, #0
   1b918:	ldr	r3, [r4, #32]
   1b91a:	cbnz	r3, 1b93a <btrfs_previous_item@@Base+0x46>
   1b91c:	mov	r1, r4
   1b91e:	mov	r0, r5
   1b920:	bl	1b5e8 <btrfs_prev_leaf@@Base>
   1b924:	cbz	r0, 1b93e <btrfs_previous_item@@Base+0x4a>
   1b926:	ldr	r2, [pc, #108]	; (1b994 <btrfs_previous_item@@Base+0xa0>)
   1b928:	ldr	r3, [pc, #100]	; (1b990 <btrfs_previous_item@@Base+0x9c>)
   1b92a:	add	r2, pc
   1b92c:	ldr	r3, [r2, r3]
   1b92e:	ldr	r2, [r3, #0]
   1b930:	ldr	r3, [sp, #20]
   1b932:	eors	r2, r3
   1b934:	beq.n	1b984 <btrfs_previous_item@@Base+0x90>
   1b936:	blx	84cc <__stack_chk_fail@plt>
   1b93a:	subs	r3, #1
   1b93c:	str	r3, [r4, #32]
   1b93e:	ldr	r0, [r4, #0]
   1b940:	ldr.w	r2, [r0, #192]	; 0xc0
   1b944:	cbnz	r2, 1b94a <btrfs_previous_item@@Base+0x56>
   1b946:	movs	r0, #1
   1b948:	b.n	1b926 <btrfs_previous_item@@Base+0x32>
   1b94a:	ldr	r3, [r4, #32]
   1b94c:	mov	r1, r9
   1b94e:	cmp	r3, r2
   1b950:	itt	eq
   1b952:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1b956:	streq	r3, [r4, #32]
   1b958:	ldr	r2, [r4, #32]
   1b95a:	bl	17db0 <rb_free_nodes@@Base+0x4b2>
   1b95e:	ldrd	r0, r1, [sp]
   1b962:	cmp	r1, r7
   1b964:	it	eq
   1b966:	cmpeq	r0, r6
   1b968:	bcc.n	1b946 <btrfs_previous_item@@Base+0x52>
   1b96a:	ldrb.w	r3, [sp, #8]
   1b96e:	cmp	r3, r8
   1b970:	beq.n	1b980 <btrfs_previous_item@@Base+0x8c>
   1b972:	cmp	r1, r7
   1b974:	it	eq
   1b976:	cmpeq	r0, r6
   1b978:	bne.n	1b918 <btrfs_previous_item@@Base+0x24>
   1b97a:	cmp	r3, r8
   1b97c:	bge.n	1b918 <btrfs_previous_item@@Base+0x24>
   1b97e:	b.n	1b946 <btrfs_previous_item@@Base+0x52>
   1b980:	movs	r0, #0
   1b982:	b.n	1b926 <btrfs_previous_item@@Base+0x32>
   1b984:	add	sp, #28
   1b986:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1b98a:	nop
   1b98c:	str	r4, [sp, #536]	; 0x218
   1b98e:	movs	r4, r0
   1b990:	lsls	r4, r4, #8
   1b992:	movs	r0, r0
   1b994:	str	r4, [sp, #376]	; 0x178
   1b996:	movs	r4, r0

0001b998 <btrfs_previous_extent_item@@Base>:
   1b998:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1b99c:	mov	r6, r2
   1b99e:	ldr	r2, [pc, #144]	; (1ba30 <btrfs_previous_extent_item@@Base+0x98>)
   1b9a0:	mov	r7, r3
   1b9a2:	ldr	r3, [pc, #144]	; (1ba34 <btrfs_previous_extent_item@@Base+0x9c>)
   1b9a4:	sub	sp, #24
   1b9a6:	add	r2, pc
   1b9a8:	mov	r5, r0
   1b9aa:	mov	r4, r1
   1b9ac:	mov	r8, sp
   1b9ae:	ldr	r3, [r2, r3]
   1b9b0:	ldr	r3, [r3, #0]
   1b9b2:	str	r3, [sp, #20]
   1b9b4:	mov.w	r3, #0
   1b9b8:	ldr	r3, [r4, #32]
   1b9ba:	cbnz	r3, 1b9da <btrfs_previous_extent_item@@Base+0x42>
   1b9bc:	mov	r1, r4
   1b9be:	mov	r0, r5
   1b9c0:	bl	1b5e8 <btrfs_prev_leaf@@Base>
   1b9c4:	cbz	r0, 1b9de <btrfs_previous_extent_item@@Base+0x46>
   1b9c6:	ldr	r2, [pc, #112]	; (1ba38 <btrfs_previous_extent_item@@Base+0xa0>)
   1b9c8:	ldr	r3, [pc, #104]	; (1ba34 <btrfs_previous_extent_item@@Base+0x9c>)
   1b9ca:	add	r2, pc
   1b9cc:	ldr	r3, [r2, r3]
   1b9ce:	ldr	r2, [r3, #0]
   1b9d0:	ldr	r3, [sp, #20]
   1b9d2:	eors	r2, r3
   1b9d4:	beq.n	1ba2a <btrfs_previous_extent_item@@Base+0x92>
   1b9d6:	blx	84cc <__stack_chk_fail@plt>
   1b9da:	subs	r3, #1
   1b9dc:	str	r3, [r4, #32]
   1b9de:	ldr	r0, [r4, #0]
   1b9e0:	ldr.w	r2, [r0, #192]	; 0xc0
   1b9e4:	cbnz	r2, 1b9ea <btrfs_previous_extent_item@@Base+0x52>
   1b9e6:	movs	r0, #1
   1b9e8:	b.n	1b9c6 <btrfs_previous_extent_item@@Base+0x2e>
   1b9ea:	ldr	r3, [r4, #32]
   1b9ec:	mov	r1, r8
   1b9ee:	cmp	r3, r2
   1b9f0:	itt	eq
   1b9f2:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   1b9f6:	streq	r3, [r4, #32]
   1b9f8:	ldr	r2, [r4, #32]
   1b9fa:	bl	17db0 <rb_free_nodes@@Base+0x4b2>
   1b9fe:	ldrd	r0, r1, [sp]
   1ba02:	cmp	r1, r7
   1ba04:	it	eq
   1ba06:	cmpeq	r0, r6
   1ba08:	bcc.n	1b9e6 <btrfs_previous_extent_item@@Base+0x4e>
   1ba0a:	ldrb.w	r2, [sp, #8]
   1ba0e:	add.w	r3, r2, #88	; 0x58
   1ba12:	uxtb	r3, r3
   1ba14:	cmp	r3, #1
   1ba16:	bls.n	1ba26 <btrfs_previous_extent_item@@Base+0x8e>
   1ba18:	cmp	r1, r7
   1ba1a:	it	eq
   1ba1c:	cmpeq	r0, r6
   1ba1e:	bne.n	1b9b8 <btrfs_previous_extent_item@@Base+0x20>
   1ba20:	cmp	r2, #167	; 0xa7
   1ba22:	bhi.n	1b9b8 <btrfs_previous_extent_item@@Base+0x20>
   1ba24:	b.n	1b9e6 <btrfs_previous_extent_item@@Base+0x4e>
   1ba26:	movs	r0, #0
   1ba28:	b.n	1b9c6 <btrfs_previous_extent_item@@Base+0x2e>
   1ba2a:	add	sp, #24
   1ba2c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ba30:	str	r3, [sp, #904]	; 0x388
   1ba32:	movs	r4, r0
   1ba34:	lsls	r4, r4, #8
   1ba36:	movs	r0, r0
   1ba38:	str	r3, [sp, #760]	; 0x2f8
   1ba3a:	movs	r4, r0

0001ba3c <btrfs_next_extent_item@@Base>:
   1ba3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1ba40:	mov	r6, r2
   1ba42:	ldr	r2, [pc, #132]	; (1bac8 <btrfs_next_extent_item@@Base+0x8c>)
   1ba44:	mov	r7, r3
   1ba46:	ldr	r3, [pc, #132]	; (1bacc <btrfs_next_extent_item@@Base+0x90>)
   1ba48:	sub	sp, #28
   1ba4a:	add	r2, pc
   1ba4c:	mov	r5, r0
   1ba4e:	mov	r4, r1
   1ba50:	mov.w	r8, #0
   1ba54:	ldr	r3, [r2, r3]
   1ba56:	mov	r9, sp
   1ba58:	ldr	r3, [r3, #0]
   1ba5a:	str	r3, [sp, #20]
   1ba5c:	mov.w	r3, #0
   1ba60:	ldr	r2, [r4, #0]
   1ba62:	ldr	r3, [r4, #32]
   1ba64:	adds	r3, #1
   1ba66:	str	r3, [r4, #32]
   1ba68:	ldr.w	r2, [r2, #192]	; 0xc0
   1ba6c:	cmp	r3, r2
   1ba6e:	bcs.n	1ba8a <btrfs_next_extent_item@@Base+0x4e>
   1ba70:	ldr	r2, [r4, #32]
   1ba72:	mov	r1, r9
   1ba74:	ldr	r0, [r4, #0]
   1ba76:	bl	17db0 <rb_free_nodes@@Base+0x4b2>
   1ba7a:	ldrd	r2, r3, [sp]
   1ba7e:	cmp	r7, r3
   1ba80:	it	eq
   1ba82:	cmpeq	r6, r2
   1ba84:	bcs.n	1bab0 <btrfs_next_extent_item@@Base+0x74>
   1ba86:	movs	r0, #1
   1ba88:	b.n	1ba9c <btrfs_next_extent_item@@Base+0x60>
   1ba8a:	strb.w	r8, [r4, #65]	; 0x41
   1ba8e:	mov	r1, r4
   1ba90:	ldr.w	r0, [r5, #464]	; 0x1d0
   1ba94:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   1ba98:	cmp	r0, #0
   1ba9a:	beq.n	1ba70 <btrfs_next_extent_item@@Base+0x34>
   1ba9c:	ldr	r2, [pc, #48]	; (1bad0 <btrfs_next_extent_item@@Base+0x94>)
   1ba9e:	ldr	r3, [pc, #44]	; (1bacc <btrfs_next_extent_item@@Base+0x90>)
   1baa0:	add	r2, pc
   1baa2:	ldr	r3, [r2, r3]
   1baa4:	ldr	r2, [r3, #0]
   1baa6:	ldr	r3, [sp, #20]
   1baa8:	eors	r2, r3
   1baaa:	beq.n	1bac0 <btrfs_next_extent_item@@Base+0x84>
   1baac:	blx	84cc <__stack_chk_fail@plt>
   1bab0:	ldrb.w	r3, [sp, #8]
   1bab4:	adds	r3, #88	; 0x58
   1bab6:	uxtb	r3, r3
   1bab8:	cmp	r3, #1
   1baba:	bhi.n	1ba60 <btrfs_next_extent_item@@Base+0x24>
   1babc:	movs	r0, #0
   1babe:	b.n	1ba9c <btrfs_next_extent_item@@Base+0x60>
   1bac0:	add	sp, #28
   1bac2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1bac6:	nop
   1bac8:	str	r3, [sp, #248]	; 0xf8
   1baca:	movs	r4, r0
   1bacc:	lsls	r4, r4, #8
   1bace:	movs	r0, r0
   1bad0:	str	r2, [sp, #928]	; 0x3a0
   1bad2:	movs	r4, r0

0001bad4 <btrfs_uuid_tree_add@@Base>:
   1bad4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bad8:	mov	sl, r2
   1bada:	ldr	r2, [pc, #408]	; (1bc74 <btrfs_uuid_tree_add@@Base+0x1a0>)
   1badc:	sub	sp, #60	; 0x3c
   1bade:	ldr	r3, [pc, #408]	; (1bc78 <btrfs_uuid_tree_add@@Base+0x1a4>)
   1bae0:	mov	r8, r0
   1bae2:	add	r2, pc
   1bae4:	mov	r9, r1
   1bae6:	ldr	r3, [r2, r3]
   1bae8:	ldr	r3, [r3, #0]
   1baea:	str	r3, [sp, #52]	; 0x34
   1baec:	mov.w	r3, #0
   1baf0:	ldr	r3, [r0, #0]
   1baf2:	ldr	r7, [r3, #52]	; 0x34
   1baf4:	cbnz	r7, 1bb20 <btrfs_uuid_tree_add@@Base+0x4c>
   1baf6:	ldr	r1, [pc, #388]	; (1bc7c <btrfs_uuid_tree_add@@Base+0x1a8>)
   1baf8:	mvn.w	r4, #21
   1bafc:	ldr	r0, [pc, #384]	; (1bc80 <btrfs_uuid_tree_add@@Base+0x1ac>)
   1bafe:	add	r1, pc
   1bb00:	add.w	r1, r1, #510	; 0x1fe
   1bb04:	add	r0, pc
   1bb06:	bl	17400 <__btrfs_warning@@Base>
   1bb0a:	ldr	r2, [pc, #376]	; (1bc84 <btrfs_uuid_tree_add@@Base+0x1b0>)
   1bb0c:	ldr	r3, [pc, #360]	; (1bc78 <btrfs_uuid_tree_add@@Base+0x1a4>)
   1bb0e:	add	r2, pc
   1bb10:	ldr	r3, [r2, r3]
   1bb12:	ldr	r2, [r3, #0]
   1bb14:	ldr	r3, [sp, #52]	; 0x34
   1bb16:	eors	r2, r3
   1bb18:	beq.w	1bc6c <btrfs_uuid_tree_add@@Base+0x198>
   1bb1c:	blx	84cc <__stack_chk_fail@plt>
   1bb20:	bl	17e50 <btrfs_alloc_path@@Base>
   1bb24:	mov	r5, r0
   1bb26:	cmp	r0, #0
   1bb28:	beq.n	1bba6 <btrfs_uuid_tree_add@@Base+0xd2>
   1bb2a:	add	r2, sp, #32
   1bb2c:	mov	r0, r9
   1bb2e:	str	r2, [sp, #16]
   1bb30:	mov	r1, r2
   1bb32:	bl	175f0 <btrfs_uuid_to_key@@Base>
   1bb36:	movs	r0, #0
   1bb38:	ldr	r2, [sp, #16]
   1bb3a:	mov	r3, r5
   1bb3c:	mov	r1, r7
   1bb3e:	strd	r0, r0, [sp]
   1bb42:	strb.w	sl, [sp, #40]	; 0x28
   1bb46:	bl	1a23c <btrfs_search_slot@@Base>
   1bb4a:	subs	r4, r0, #0
   1bb4c:	blt.n	1bbaa <btrfs_uuid_tree_add@@Base+0xd6>
   1bb4e:	bne.n	1bba0 <btrfs_uuid_tree_add@@Base+0xcc>
   1bb50:	ldr	r0, [r5, #0]
   1bb52:	movs	r2, #25
   1bb54:	ldr	r3, [r5, #32]
   1bb56:	mla	r3, r2, r3, r0
   1bb5a:	ldr.w	r6, [r3, #218]	; 0xda
   1bb5e:	ldr.w	fp, [r3, #214]	; 0xd6
   1bb62:	lsls	r2, r6, #29
   1bb64:	add.w	fp, fp, #101	; 0x65
   1bb68:	bne.n	1bb96 <btrfs_uuid_tree_add@@Base+0xc2>
   1bb6a:	add	r1, sp, #24
   1bb6c:	cbz	r6, 1bba0 <btrfs_uuid_tree_add@@Base+0xcc>
   1bb6e:	movs	r3, #8
   1bb70:	mov	r2, fp
   1bb72:	strd	r0, r1, [sp, #16]
   1bb76:	bl	1731a <read_extent_buffer@@Base>
   1bb7a:	ldrd	r2, r3, [sp, #24]
   1bb7e:	ldrd	r0, r1, [sp, #96]	; 0x60
   1bb82:	cmp	r1, r3
   1bb84:	it	eq
   1bb86:	cmpeq	r0, r2
   1bb88:	beq.n	1bbaa <btrfs_uuid_tree_add@@Base+0xd6>
   1bb8a:	ldrd	r0, r1, [sp, #16]
   1bb8e:	add.w	fp, fp, #8
   1bb92:	subs	r6, #8
   1bb94:	b.n	1bb6c <btrfs_uuid_tree_add@@Base+0x98>
   1bb96:	ldr	r0, [pc, #240]	; (1bc88 <btrfs_uuid_tree_add@@Base+0x1b4>)
   1bb98:	mov	r1, r6
   1bb9a:	add	r0, pc
   1bb9c:	bl	17400 <__btrfs_warning@@Base>
   1bba0:	mvn.w	r4, #1
   1bba4:	b.n	1bbaa <btrfs_uuid_tree_add@@Base+0xd6>
   1bba6:	mvn.w	r4, #11
   1bbaa:	mov	r0, r5
   1bbac:	bl	17e7e <btrfs_free_path@@Base>
   1bbb0:	adds	r3, r4, #2
   1bbb2:	bne.n	1bb0a <btrfs_uuid_tree_add@@Base+0x36>
   1bbb4:	add	r3, sp, #32
   1bbb6:	mov	r0, r9
   1bbb8:	str	r3, [sp, #16]
   1bbba:	mov	r1, r3
   1bbbc:	strb.w	sl, [sp, #40]	; 0x28
   1bbc0:	bl	175f0 <btrfs_uuid_to_key@@Base>
   1bbc4:	bl	17e50 <btrfs_alloc_path@@Base>
   1bbc8:	mov	r5, r0
   1bbca:	cmp	r0, #0
   1bbcc:	beq.n	1bc66 <btrfs_uuid_tree_add@@Base+0x192>
   1bbce:	movs	r2, #1
   1bbd0:	ldr	r3, [sp, #16]
   1bbd2:	str	r2, [sp, #4]
   1bbd4:	add	r6, sp, #24
   1bbd6:	mov	r2, r0
   1bbd8:	mov	r1, r7
   1bbda:	mov	r0, r8
   1bbdc:	str	r6, [sp, #0]
   1bbde:	mov.w	r9, #8
   1bbe2:	str.w	r9, [sp, #24]
   1bbe6:	bl	1b00c <btrfs_insert_empty_items@@Base>
   1bbea:	subs	r4, r0, #0
   1bbec:	blt.n	1bc1a <btrfs_uuid_tree_add@@Base+0x146>
   1bbee:	ldr	r4, [r5, #0]
   1bbf0:	movs	r2, #25
   1bbf2:	ldr	r3, [r5, #32]
   1bbf4:	mla	r3, r2, r3, r4
   1bbf8:	ldr.w	r2, [r3, #214]	; 0xd6
   1bbfc:	adds	r2, #101	; 0x65
   1bbfe:	ldrd	r0, r1, [sp, #96]	; 0x60
   1bc02:	movs	r3, #8
   1bc04:	strd	r0, r1, [sp, #24]
   1bc08:	mov	r0, r4
   1bc0a:	mov	r1, r6
   1bc0c:	bl	17330 <write_extent_buffer@@Base>
   1bc10:	mov	r0, r4
   1bc12:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1bc16:	movs	r4, #0
   1bc18:	b.n	1bc5e <btrfs_uuid_tree_add@@Base+0x18a>
   1bc1a:	cmn.w	r4, #17
   1bc1e:	bne.n	1bc42 <btrfs_uuid_tree_add@@Base+0x16e>
   1bc20:	mov	r2, r9
   1bc22:	mov	r1, r5
   1bc24:	mov	r0, r7
   1bc26:	bl	1a030 <btrfs_extend_item@@Base>
   1bc2a:	ldr	r4, [r5, #0]
   1bc2c:	ldr	r3, [r5, #32]
   1bc2e:	movs	r2, #25
   1bc30:	mla	r3, r2, r3, r4
   1bc34:	ldr.w	r2, [r3, #218]	; 0xda
   1bc38:	ldr.w	r3, [r3, #214]	; 0xd6
   1bc3c:	add	r2, r3
   1bc3e:	adds	r2, #93	; 0x5d
   1bc40:	b.n	1bbfe <btrfs_uuid_tree_add@@Base+0x12a>
   1bc42:	ldr.w	r2, [sp, #41]	; 0x29
   1bc46:	ldr.w	r3, [sp, #45]	; 0x2d
   1bc4a:	ldr	r0, [pc, #64]	; (1bc8c <btrfs_uuid_tree_add@@Base+0x1b8>)
   1bc4c:	strd	sl, r4, [sp, #8]
   1bc50:	strd	r2, r3, [sp]
   1bc54:	add	r0, pc
   1bc56:	ldrd	r2, r3, [sp, #32]
   1bc5a:	bl	17400 <__btrfs_warning@@Base>
   1bc5e:	mov	r0, r5
   1bc60:	bl	17e7e <btrfs_free_path@@Base>
   1bc64:	b.n	1bb0a <btrfs_uuid_tree_add@@Base+0x36>
   1bc66:	mvn.w	r4, #11
   1bc6a:	b.n	1bc5e <btrfs_uuid_tree_add@@Base+0x18a>
   1bc6c:	mov	r0, r4
   1bc6e:	add	sp, #60	; 0x3c
   1bc70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bc74:	str	r2, [sp, #664]	; 0x298
   1bc76:	movs	r4, r0
   1bc78:	lsls	r4, r4, #8
   1bc7a:	movs	r0, r0
   1bc7c:	asrs	r2, r0, #13
   1bc7e:	movs	r2, r0
   1bc80:	asrs	r3, r7, #10
   1bc82:	movs	r2, r0
   1bc84:	str	r2, [sp, #488]	; 0x1e8
   1bc86:	movs	r4, r0
   1bc88:	asrs	r6, r0, #9
   1bc8a:	movs	r2, r0
   1bc8c:	asrs	r5, r5, #6
   1bc8e:	movs	r2, r0
   1bc90:	push	{r4, r5, lr}
   1bc92:	ldrd	r4, r5, [r1]
   1bc96:	ldrd	r2, r3, [r0, #-56]	; 0x38
   1bc9a:	cmp	r3, r5
   1bc9c:	it	eq
   1bc9e:	cmpeq	r2, r4
   1bca0:	bcc.n	1bcb2 <btrfs_uuid_tree_add@@Base+0x1de>
   1bca2:	cmp	r5, r3
   1bca4:	it	eq
   1bca6:	cmpeq	r4, r2
   1bca8:	ite	cc
   1bcaa:	movcc.w	r0, #4294967295	; 0xffffffff
   1bcae:	movcs	r0, #0
   1bcb0:	pop	{r4, r5, pc}
   1bcb2:	movs	r0, #1
   1bcb4:	b.n	1bcb0 <btrfs_uuid_tree_add@@Base+0x1dc>

0001bcb6 <btrfs_fs_roots_compare_roots@@Base>:
   1bcb6:	subs	r1, #56	; 0x38
   1bcb8:	b.n	1bc90 <btrfs_uuid_tree_add@@Base+0x1bc>
   1bcba:	movs	r2, #0
   1bcbc:	addw	r3, r0, #2859	; 0xb2b
   1bcc0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1bcc4:	mov.w	r8, #0
   1bcc8:	ldr	r6, [r0, #72]	; 0x48
   1bcca:	mov.w	r9, #0
   1bcce:	ldr	r7, [r0, #76]	; 0x4c
   1bcd0:	mov	r0, r2
   1bcd2:	ldr	r5, [r3, #12]
   1bcd4:	ldr	r4, [r3, #8]
   1bcd6:	cmp	r5, r7
   1bcd8:	it	eq
   1bcda:	cmpeq	r4, r6
   1bcdc:	beq.n	1bcec <btrfs_fs_roots_compare_roots@@Base+0x36>
   1bcde:	cmp	r9, r5
   1bce0:	it	eq
   1bce2:	cmpeq	r8, r4
   1bce4:	ittt	cc
   1bce6:	movcc	r0, r2
   1bce8:	movcc	r8, r4
   1bcea:	movcc	r9, r5
   1bcec:	adds	r2, #1
   1bcee:	adds	r3, #168	; 0xa8
   1bcf0:	cmp	r2, #4
   1bcf2:	bne.n	1bcd2 <btrfs_fs_roots_compare_roots@@Base+0x1c>
   1bcf4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1bcf8:	ldr	r2, [pc, #60]	; (1bd38 <btrfs_fs_roots_compare_roots@@Base+0x82>)
   1bcfa:	movs	r1, #16
   1bcfc:	ldr	r3, [pc, #60]	; (1bd3c <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1bcfe:	push	{r4, lr}
   1bd00:	add	r2, pc
   1bd02:	sub	sp, #72	; 0x48
   1bd04:	add	r4, sp, #4
   1bd06:	ldr	r3, [r2, r3]
   1bd08:	mov	r0, r4
   1bd0a:	ldr	r3, [r3, #0]
   1bd0c:	str	r3, [sp, #68]	; 0x44
   1bd0e:	mov.w	r3, #0
   1bd12:	blx	8680 <backtrace@plt>
   1bd16:	movs	r2, #2
   1bd18:	mov	r1, r0
   1bd1a:	mov	r0, r4
   1bd1c:	blx	8990 <backtrace_symbols_fd@plt>
   1bd20:	ldr	r2, [pc, #28]	; (1bd40 <btrfs_fs_roots_compare_roots@@Base+0x8a>)
   1bd22:	ldr	r3, [pc, #24]	; (1bd3c <btrfs_fs_roots_compare_roots@@Base+0x86>)
   1bd24:	add	r2, pc
   1bd26:	ldr	r3, [r2, r3]
   1bd28:	ldr	r2, [r3, #0]
   1bd2a:	ldr	r3, [sp, #68]	; 0x44
   1bd2c:	eors	r2, r3
   1bd2e:	beq.n	1bd34 <btrfs_fs_roots_compare_roots@@Base+0x7e>
   1bd30:	blx	84cc <__stack_chk_fail@plt>
   1bd34:	add	sp, #72	; 0x48
   1bd36:	pop	{r4, pc}
   1bd38:	str	r0, [sp, #544]	; 0x220
   1bd3a:	movs	r4, r0
   1bd3c:	lsls	r4, r4, #8
   1bd3e:	movs	r0, r0
   1bd40:	str	r0, [sp, #400]	; 0x190
   1bd42:	movs	r4, r0
   1bd44:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bd48:	mov	r5, r0
   1bd4a:	ldr.w	sl, [r1, #144]	; 0x90
   1bd4e:	mov	r4, r1
   1bd50:	ldr.w	fp, [r1, #148]	; 0x94
   1bd54:	ldr.w	r8, [r0, #352]	; 0x160
   1bd58:	ldr.w	r2, [r0, #384]	; 0x180
   1bd5c:	ldrd	r0, r1, [r1, #40]	; 0x28
   1bd60:	cmp	r1, fp
   1bd62:	it	eq
   1bd64:	cmpeq	r0, sl
   1bd66:	bne.n	1bdf0 <btrfs_fs_roots_compare_roots@@Base+0x13a>
   1bd68:	ldrb.w	r1, [r4, #196]	; 0xc4
   1bd6c:	cmp	r1, #7
   1bd6e:	bhi.n	1bdf6 <btrfs_fs_roots_compare_roots@@Base+0x140>
   1bd70:	ldr.w	r0, [r4, #192]	; 0xc0
   1bd74:	subs	r2, #101	; 0x65
   1bd76:	cbnz	r1, 1bd8e <btrfs_fs_roots_compare_roots@@Base+0xd8>
   1bd78:	ldr	r3, [pc, #136]	; (1be04 <btrfs_fs_roots_compare_roots@@Base+0x14e>)
   1bd7a:	umull	r2, r3, r2, r3
   1bd7e:	lsrs	r3, r3, #3
   1bd80:	cmp	r0, r3
   1bd82:	bhi.n	1bd88 <btrfs_fs_roots_compare_roots@@Base+0xd2>
   1bd84:	cbnz	r0, 1bdea <btrfs_fs_roots_compare_roots@@Base+0x134>
   1bd86:	cbz	r1, 1bdea <btrfs_fs_roots_compare_roots@@Base+0x134>
   1bd88:	mvn.w	r0, #3
   1bd8c:	b.n	1bdde <btrfs_fs_roots_compare_roots@@Base+0x128>
   1bd8e:	ldr	r3, [pc, #120]	; (1be08 <btrfs_fs_roots_compare_roots@@Base+0x152>)
   1bd90:	b.n	1bd7a <btrfs_fs_roots_compare_roots@@Base+0xc4>
   1bd92:	ldr.w	r3, [r5, #352]	; 0x160
   1bd96:	cmp	r3, r8
   1bd98:	bne.n	1bde2 <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1bd9a:	ldr.w	r3, [r5, #308]	; 0x134
   1bd9e:	mov	r7, r9
   1bda0:	ldr.w	r3, [r3, #188]	; 0xbc
   1bda4:	and.w	r6, r3, #1024	; 0x400
   1bda8:	orrs.w	r3, r6, r7
   1bdac:	beq.n	1bde2 <btrfs_fs_roots_compare_roots@@Base+0x12c>
   1bdae:	movs	r3, #16
   1bdb0:	add.w	r1, r8, r3
   1bdb4:	movs	r2, #32
   1bdb6:	mov	r0, r4
   1bdb8:	bl	17308 <memcmp_extent_buffer@@Base>
   1bdbc:	ldrb.w	r3, [r5, #364]	; 0x16c
   1bdc0:	ands.w	r3, r3, #64	; 0x40
   1bdc4:	clz	r0, r0
   1bdc8:	mov.w	r0, r0, lsr #5
   1bdcc:	bne.n	1bdfc <btrfs_fs_roots_compare_roots@@Base+0x146>
   1bdce:	cbnz	r0, 1be00 <btrfs_fs_roots_compare_roots@@Base+0x14a>
   1bdd0:	ldr.w	r8, [r8, #92]	; 0x5c
   1bdd4:	cmp.w	r8, #0
   1bdd8:	bne.n	1bd92 <btrfs_fs_roots_compare_roots@@Base+0xdc>
   1bdda:	mvn.w	r0, #1
   1bdde:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bde2:	movs	r3, #16
   1bde4:	movs	r2, #32
   1bde6:	mov	r1, r8
   1bde8:	b.n	1bdb6 <btrfs_fs_roots_compare_roots@@Base+0x100>
   1bdea:	mov.w	r9, #0
   1bdee:	b.n	1bdd4 <btrfs_fs_roots_compare_roots@@Base+0x11e>
   1bdf0:	mov.w	r0, #4294967295	; 0xffffffff
   1bdf4:	b.n	1bdde <btrfs_fs_roots_compare_roots@@Base+0x128>
   1bdf6:	mvn.w	r0, #2
   1bdfa:	b.n	1bdde <btrfs_fs_roots_compare_roots@@Base+0x128>
   1bdfc:	movs	r0, #0
   1bdfe:	b.n	1bdde <btrfs_fs_roots_compare_roots@@Base+0x128>
   1be00:	mov	r0, r3
   1be02:	b.n	1bdde <btrfs_fs_roots_compare_roots@@Base+0x128>
   1be04:	strh	r7, [r3, #40]	; 0x28
   1be06:	str	r3, [r5, r7]
   1be08:	strh	r1, [r4, #30]
   1be0a:	subs	r6, #15
   1be0c:	b.w	83ec <free@plt>
   1be10:	cbz	r0, 1be22 <btrfs_fs_roots_compare_roots@@Base+0x16c>
   1be12:	cmn.w	r0, #4096	; 0x1000
   1be16:	bhi.n	1be20 <btrfs_fs_roots_compare_roots@@Base+0x16a>
   1be18:	ldr	r0, [r0, #84]	; 0x54
   1be1a:	ubfx	r0, r0, #2, #1
   1be1e:	bx	lr
   1be20:	movs	r0, #0
   1be22:	bx	lr
   1be24:	push	{r4, r5, r6, r7, lr}
   1be26:	mov	r1, r3
   1be28:	ldr	r6, [pc, #100]	; (1be90 <btrfs_fs_roots_compare_roots@@Base+0x1da>)
   1be2a:	sub	sp, #28
   1be2c:	mov	r4, r0
   1be2e:	mov	r0, r2
   1be30:	orrs.w	r3, r0, r1
   1be34:	add	r6, pc
   1be36:	ldr	r5, [sp, #48]	; 0x30
   1be38:	beq.n	1be7e <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1be3a:	ldr.w	r3, [r4, #180]	; 0xb4
   1be3e:	ldr.w	r2, [r4, #176]	; 0xb0
   1be42:	cmp	r1, r3
   1be44:	it	eq
   1be46:	cmpeq	r0, r2
   1be48:	beq.n	1be7e <btrfs_fs_roots_compare_roots@@Base+0x1c8>
   1be4a:	ldr	r7, [pc, #72]	; (1be94 <btrfs_fs_roots_compare_roots@@Base+0x1de>)
   1be4c:	ldr	r6, [r6, r7]
   1be4e:	strd	r2, r3, [sp, #16]
   1be52:	ldrd	r2, r3, [r4, #40]	; 0x28
   1be56:	strd	r0, r1, [sp, #8]
   1be5a:	movs	r1, #1
   1be5c:	strd	r2, r3, [sp]
   1be60:	ldr	r2, [pc, #52]	; (1be98 <btrfs_fs_roots_compare_roots@@Base+0x1e2>)
   1be62:	ldr	r0, [r6, #0]
   1be64:	add	r2, pc
   1be66:	blx	881c <__fprintf_chk@plt+0x4>
   1be6a:	ldr	r3, [r4, #84]	; 0x54
   1be6c:	cbz	r5, 1be82 <btrfs_fs_roots_compare_roots@@Base+0x1cc>
   1be6e:	ldr	r0, [pc, #44]	; (1be9c <btrfs_fs_roots_compare_roots@@Base+0x1e6>)
   1be70:	orr.w	r3, r3, #1024	; 0x400
   1be74:	ldr	r1, [r6, #0]
   1be76:	add	r0, pc
   1be78:	str	r3, [r4, #84]	; 0x54
   1be7a:	blx	8930 <fputs@plt+0x4>
   1be7e:	movs	r0, #0
   1be80:	b.n	1be8a <btrfs_fs_roots_compare_roots@@Base+0x1d4>
   1be82:	movs	r0, #1
   1be84:	bic.w	r3, r3, #4
   1be88:	str	r3, [r4, #84]	; 0x54
   1be8a:	add	sp, #28
   1be8c:	pop	{r4, r5, r6, r7, pc}
   1be8e:	nop
   1be90:	ldrh	r4, [r2, #58]	; 0x3a
   1be92:	movs	r4, r0
   1be94:	lsls	r4, r6, #8
   1be96:	movs	r0, r0
   1be98:	asrs	r6, r5, #7
   1be9a:	movs	r2, r0
   1be9c:	asrs	r1, r3, #8
   1be9e:	movs	r2, r0
   1bea0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1bea4:	mov	r5, r2
   1bea6:	ldr	r2, [pc, #244]	; (1bf9c <btrfs_fs_roots_compare_roots@@Base+0x2e6>)
   1bea8:	sub	sp, #128	; 0x80
   1beaa:	ldr	r3, [pc, #244]	; (1bfa0 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1beac:	movs	r6, #0
   1beae:	add	r2, pc
   1beb0:	ldr.w	r8, [pc, #240]	; 1bfa4 <btrfs_fs_roots_compare_roots@@Base+0x2ee>
   1beb4:	mov	r7, r0
   1beb6:	mov	r4, r1
   1beb8:	ldr	r3, [r2, r3]
   1beba:	mov	r1, r6
   1bebc:	add	r0, sp, #48	; 0x30
   1bebe:	movs	r2, #33	; 0x21
   1bec0:	ldr	r3, [r3, #0]
   1bec2:	str	r3, [sp, #124]	; 0x7c
   1bec4:	mov.w	r3, #0
   1bec8:	str	r6, [sp, #44]	; 0x2c
   1beca:	blx	8780 <memset@plt+0x4>
   1bece:	add	r0, sp, #88	; 0x58
   1bed0:	movs	r2, #33	; 0x21
   1bed2:	mov	r1, r6
   1bed4:	add	r8, pc
   1bed6:	str	r6, [sp, #84]	; 0x54
   1bed8:	blx	8780 <memset@plt+0x4>
   1bedc:	cmp	r5, #0
   1bede:	beq.n	1bf60 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1bee0:	ldr	r3, [pc, #196]	; (1bfa8 <btrfs_fs_roots_compare_roots@@Base+0x2f2>)
   1bee2:	movs	r1, #1
   1bee4:	adds	r5, #4
   1bee6:	ldr.w	r6, [r8, r3]
   1beea:	ldrd	r2, r3, [r4, #40]	; 0x28
   1beee:	strd	r2, r3, [sp]
   1bef2:	ldr	r2, [pc, #184]	; (1bfac <btrfs_fs_roots_compare_roots@@Base+0x2f6>)
   1bef4:	ldr	r0, [r6, #0]
   1bef6:	add	r2, pc
   1bef8:	blx	881c <__fprintf_chk@plt+0x4>
   1befc:	cmp	r5, #3
   1befe:	bhi.n	1bf60 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1bf00:	tbb	[pc, r5]
   1bf04:	subs	r0, #63	; 0x3f
   1bf06:	subs	r2, r0, #0
   1bf08:	add	r5, sp, #28
   1bf0a:	mov	r0, r4
   1bf0c:	add	r4, sp, #84	; 0x54
   1bf0e:	movs	r2, #32
   1bf10:	movs	r3, #16
   1bf12:	mov	r1, r5
   1bf14:	bl	1731a <read_extent_buffer@@Base>
   1bf18:	mov	r1, r4
   1bf1a:	mov	r0, r5
   1bf1c:	blx	8394 <uuid_unparse@plt>
   1bf20:	add	r3, sp, #44	; 0x2c
   1bf22:	ldr	r0, [r7, #0]
   1bf24:	mov	r1, r3
   1bf26:	str	r3, [sp, #20]
   1bf28:	adds	r0, #16
   1bf2a:	blx	8394 <uuid_unparse@plt>
   1bf2e:	ldr	r2, [pc, #128]	; (1bfb0 <btrfs_fs_roots_compare_roots@@Base+0x2fa>)
   1bf30:	ldr	r3, [sp, #20]
   1bf32:	add	r2, pc
   1bf34:	str	r4, [sp, #0]
   1bf36:	ldr	r0, [r6, #0]
   1bf38:	movs	r1, #1
   1bf3a:	blx	881c <__fprintf_chk@plt+0x4>
   1bf3e:	b.n	1bf60 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1bf40:	ldr.w	r2, [r4, #144]	; 0x90
   1bf44:	movs	r1, #1
   1bf46:	ldr.w	r3, [r4, #148]	; 0x94
   1bf4a:	strd	r2, r3, [sp, #8]
   1bf4e:	ldrd	r2, r3, [r4, #40]	; 0x28
   1bf52:	strd	r2, r3, [sp]
   1bf56:	ldr	r2, [pc, #92]	; (1bfb4 <btrfs_fs_roots_compare_roots@@Base+0x2fe>)
   1bf58:	ldr	r0, [r6, #0]
   1bf5a:	add	r2, pc
   1bf5c:	blx	881c <__fprintf_chk@plt+0x4>
   1bf60:	ldr	r2, [pc, #84]	; (1bfb8 <btrfs_fs_roots_compare_roots@@Base+0x302>)
   1bf62:	ldr	r3, [pc, #60]	; (1bfa0 <btrfs_fs_roots_compare_roots@@Base+0x2ea>)
   1bf64:	add	r2, pc
   1bf66:	ldr	r3, [r2, r3]
   1bf68:	ldr	r2, [r3, #0]
   1bf6a:	ldr	r3, [sp, #124]	; 0x7c
   1bf6c:	eors	r2, r3
   1bf6e:	beq.n	1bf94 <btrfs_fs_roots_compare_roots@@Base+0x2de>
   1bf70:	blx	84cc <__stack_chk_fail@plt>
   1bf74:	ldr	r2, [pc, #68]	; (1bfbc <btrfs_fs_roots_compare_roots@@Base+0x306>)
   1bf76:	movs	r3, #8
   1bf78:	str	r3, [sp, #0]
   1bf7a:	add	r2, pc
   1bf7c:	ldrb.w	r3, [r4, #196]	; 0xc4
   1bf80:	b.n	1bf36 <btrfs_fs_roots_compare_roots@@Base+0x280>
   1bf82:	ldr	r2, [pc, #60]	; (1bfc0 <btrfs_fs_roots_compare_roots@@Base+0x30a>)
   1bf84:	movs	r1, #1
   1bf86:	ldr.w	r3, [r4, #192]	; 0xc0
   1bf8a:	ldr	r0, [r6, #0]
   1bf8c:	add	r2, pc
   1bf8e:	blx	881c <__fprintf_chk@plt+0x4>
   1bf92:	b.n	1bf60 <btrfs_fs_roots_compare_roots@@Base+0x2aa>
   1bf94:	add	sp, #128	; 0x80
   1bf96:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1bf9a:	nop
   1bf9c:	ldrh	r2, [r3, #54]	; 0x36
   1bf9e:	movs	r4, r0
   1bfa0:	lsls	r4, r4, #8
   1bfa2:	movs	r0, r0
   1bfa4:	ldrh	r4, [r6, #52]	; 0x34
   1bfa6:	movs	r4, r0
   1bfa8:	lsls	r4, r6, #8
   1bfaa:	movs	r0, r0
   1bfac:	asrs	r3, r6, #6
   1bfae:	movs	r2, r0
   1bfb0:	asrs	r5, r1, #6
   1bfb2:	movs	r2, r0
   1bfb4:	asrs	r6, r0, #6
   1bfb6:	movs	r2, r0
   1bfb8:	ldrh	r4, [r4, #48]	; 0x30
   1bfba:	movs	r4, r0
   1bfbc:	asrs	r5, r1, #6
   1bfbe:	movs	r2, r0
   1bfc0:	asrs	r7, r1, #6
   1bfc2:	movs	r2, r0
   1bfc4:	push	{r0, r1, r2, r3, r4, lr}
   1bfc6:	ldr	r3, [pc, #40]	; (1bff0 <btrfs_fs_roots_compare_roots@@Base+0x33a>)
   1bfc8:	ldr	r4, [pc, #40]	; (1bff4 <btrfs_fs_roots_compare_roots@@Base+0x33e>)
   1bfca:	add	r3, pc
   1bfcc:	ldr	r4, [r3, r4]
   1bfce:	movs	r3, #0
   1bfd0:	strd	r2, r1, [sp]
   1bfd4:	movs	r1, #1
   1bfd6:	strd	r0, r3, [sp, #8]
   1bfda:	ldr	r2, [pc, #28]	; (1bff8 <btrfs_fs_roots_compare_roots@@Base+0x342>)
   1bfdc:	ldr	r3, [pc, #28]	; (1bffc <btrfs_fs_roots_compare_roots@@Base+0x346>)
   1bfde:	add	r2, pc
   1bfe0:	ldr	r0, [r4, #0]
   1bfe2:	add	r3, pc
   1bfe4:	blx	881c <__fprintf_chk@plt+0x4>
   1bfe8:	bl	1bcf8 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1bfec:	blx	8948 <abort@plt>
   1bff0:	ldrh	r6, [r7, #44]	; 0x2c
   1bff2:	movs	r4, r0
   1bff4:	lsls	r4, r6, #8
   1bff6:	movs	r0, r0
   1bff8:	b.n	1c47c <write_and_map_eb@@Base+0x4>
   1bffa:	movs	r1, r0
   1bffc:	asrs	r7, r1, #5
   1bffe:	movs	r2, r0
   1c000:	push	{r0, r1, r2, r3, r4, lr}
   1c002:	ldr	r4, [pc, #40]	; (1c02c <btrfs_fs_roots_compare_roots@@Base+0x376>)
   1c004:	ldr	r5, [pc, #40]	; (1c030 <btrfs_fs_roots_compare_roots@@Base+0x37a>)
   1c006:	add	r4, pc
   1c008:	ldr	r4, [r4, r5]
   1c00a:	strd	r2, r1, [sp]
   1c00e:	movs	r1, #1
   1c010:	strd	r0, r3, [sp, #8]
   1c014:	ldr	r2, [pc, #28]	; (1c034 <btrfs_fs_roots_compare_roots@@Base+0x37e>)
   1c016:	ldr	r3, [pc, #32]	; (1c038 <btrfs_fs_roots_compare_roots@@Base+0x382>)
   1c018:	add	r2, pc
   1c01a:	ldr	r0, [r4, #0]
   1c01c:	add	r3, pc
   1c01e:	blx	881c <__fprintf_chk@plt+0x4>
   1c022:	bl	1bcf8 <btrfs_fs_roots_compare_roots@@Base+0x42>
   1c026:	blx	8948 <abort@plt>
   1c02a:	nop
   1c02c:	ldrh	r2, [r0, #44]	; 0x2c
   1c02e:	movs	r4, r0
   1c030:	lsls	r4, r6, #8
   1c032:	movs	r0, r0
   1c034:	bge.n	1c12a <csum_tree_block_size@@Base+0x4e>
   1c036:	movs	r1, r0
   1c038:	asrs	r5, r2, #4
   1c03a:	movs	r2, r0
   1c03c:	push	{r3, lr}
   1c03e:	cbz	r3, 1c044 <btrfs_fs_roots_compare_roots@@Base+0x38e>
   1c040:	bl	1c000 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1c044:	pop	{r3, pc}

0001c046 <btrfs_csum_data@@Base>:
   1c046:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c04a:	mov	r4, r2
   1c04c:	ldr.w	r8, [pc, #120]	; 1c0c8 <btrfs_csum_data@@Base+0x82>
   1c050:	mov	r7, r0
   1c052:	mov	r5, r1
   1c054:	movs	r2, #32
   1c056:	movs	r1, #0
   1c058:	mov	r0, r4
   1c05a:	add	r8, pc
   1c05c:	mov	r6, r3
   1c05e:	blx	8780 <memset@plt+0x4>
   1c062:	cmp	r7, #3
   1c064:	bhi.n	1c0a6 <btrfs_csum_data@@Base+0x60>
   1c066:	tbb	[pc, r7]
   1c06a:	lsrs	r2, r0, #4
   1c06c:	asrs	r0, r2, #28
   1c06e:	mov	r2, r4
   1c070:	mov	r1, r6
   1c072:	mov	r0, r5
   1c074:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c078:	b.w	33a8c <hash_crc32c@@Base>
   1c07c:	mov	r2, r4
   1c07e:	mov	r1, r6
   1c080:	mov	r0, r5
   1c082:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c086:	b.w	33aa4 <hash_xxhash@@Base>
   1c08a:	mov	r2, r4
   1c08c:	mov	r1, r6
   1c08e:	mov	r0, r5
   1c090:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c094:	b.w	33af4 <hash_sha256@@Base>
   1c098:	mov	r2, r4
   1c09a:	mov	r1, r6
   1c09c:	mov	r0, r5
   1c09e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
   1c0a2:	b.w	33b50 <hash_blake2b@@Base>
   1c0a6:	ldr	r3, [pc, #36]	; (1c0cc <btrfs_csum_data@@Base+0x86>)
   1c0a8:	movs	r1, #1
   1c0aa:	ldr	r2, [pc, #36]	; (1c0d0 <btrfs_csum_data@@Base+0x8a>)
   1c0ac:	ldr.w	r0, [r8, r3]
   1c0b0:	add	r2, pc
   1c0b2:	mov	r3, r7
   1c0b4:	ldr	r0, [r0, #0]
   1c0b6:	blx	881c <__fprintf_chk@plt+0x4>
   1c0ba:	ldr	r1, [pc, #24]	; (1c0d4 <btrfs_csum_data@@Base+0x8e>)
   1c0bc:	ldr	r0, [pc, #24]	; (1c0d8 <btrfs_csum_data@@Base+0x92>)
   1c0be:	movs	r2, #157	; 0x9d
   1c0c0:	add	r1, pc
   1c0c2:	add	r0, pc
   1c0c4:	bl	1bfc4 <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1c0c8:	ldrh	r6, [r5, #40]	; 0x28
   1c0ca:	movs	r4, r0
   1c0cc:	lsls	r4, r6, #8
   1c0ce:	movs	r0, r0
   1c0d0:	asrs	r3, r1, #2
   1c0d2:	movs	r2, r0
   1c0d4:	adds	r7, r2, r5
   1c0d6:	movs	r2, r0
   1c0d8:	lsrs	r0, r5, #10
   1c0da:	movs	r2, r0

0001c0dc <csum_tree_block_size@@Base>:
   1c0dc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c0e0:	mov	r4, r2
   1c0e2:	ldr	r2, [pc, #144]	; (1c174 <csum_tree_block_size@@Base+0x98>)
   1c0e4:	mov	r5, r0
   1c0e6:	mov	r0, r3
   1c0e8:	ldr	r3, [pc, #140]	; (1c178 <csum_tree_block_size@@Base+0x9c>)
   1c0ea:	add	r2, pc
   1c0ec:	sub	sp, #56	; 0x38
   1c0ee:	add	r7, sp, #20
   1c0f0:	ldr.w	r8, [pc, #136]	; 1c17c <csum_tree_block_size@@Base+0xa0>
   1c0f4:	ldr	r3, [r2, r3]
   1c0f6:	mov	r6, r1
   1c0f8:	add.w	r1, r5, #128	; 0x80
   1c0fc:	mov	r2, r7
   1c0fe:	ldr	r3, [r3, #0]
   1c100:	str	r3, [sp, #52]	; 0x34
   1c102:	mov.w	r3, #0
   1c106:	ldr	r3, [r5, #76]	; 0x4c
   1c108:	add	r8, pc
   1c10a:	subs	r3, #32
   1c10c:	bl	1c046 <btrfs_csum_data@@Base>
   1c110:	mov	r3, r6
   1c112:	cbz	r4, 1c15e <csum_tree_block_size@@Base+0x82>
   1c114:	movs	r2, #0
   1c116:	mov	r1, r7
   1c118:	mov	r0, r5
   1c11a:	bl	17308 <memcmp_extent_buffer@@Base>
   1c11e:	mov	r4, r0
   1c120:	cbz	r0, 1c14a <csum_tree_block_size@@Base+0x6e>
   1c122:	ldrb.w	r2, [r5, #96]	; 0x60
   1c126:	movs	r4, #1
   1c128:	ldr	r3, [pc, #84]	; (1c180 <csum_tree_block_size@@Base+0xa4>)
   1c12a:	ldrd	r0, r1, [r5, #40]	; 0x28
   1c12e:	ldr.w	r3, [r8, r3]
   1c132:	str	r2, [sp, #12]
   1c134:	ldrb.w	r2, [sp, #20]
   1c138:	strd	r0, r1, [sp]
   1c13c:	movs	r1, #1
   1c13e:	str	r2, [sp, #8]
   1c140:	ldr	r2, [pc, #64]	; (1c184 <csum_tree_block_size@@Base+0xa8>)
   1c142:	ldr	r0, [r3, #0]
   1c144:	add	r2, pc
   1c146:	blx	881c <__fprintf_chk@plt+0x4>
   1c14a:	ldr	r2, [pc, #60]	; (1c188 <csum_tree_block_size@@Base+0xac>)
   1c14c:	ldr	r3, [pc, #40]	; (1c178 <csum_tree_block_size@@Base+0x9c>)
   1c14e:	add	r2, pc
   1c150:	ldr	r3, [r2, r3]
   1c152:	ldr	r2, [r3, #0]
   1c154:	ldr	r3, [sp, #52]	; 0x34
   1c156:	eors	r2, r3
   1c158:	beq.n	1c16a <csum_tree_block_size@@Base+0x8e>
   1c15a:	blx	84cc <__stack_chk_fail@plt>
   1c15e:	mov	r2, r4
   1c160:	mov	r1, r7
   1c162:	mov	r0, r5
   1c164:	bl	17330 <write_extent_buffer@@Base>
   1c168:	b.n	1c14a <csum_tree_block_size@@Base+0x6e>
   1c16a:	mov	r0, r4
   1c16c:	add	sp, #56	; 0x38
   1c16e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c172:	nop
   1c174:	ldrh	r6, [r3, #36]	; 0x24
   1c176:	movs	r4, r0
   1c178:	lsls	r4, r4, #8
   1c17a:	movs	r0, r0
   1c17c:	ldrh	r0, [r0, #36]	; 0x24
   1c17e:	movs	r4, r0
   1c180:	lsls	r4, r6, #8
   1c182:	movs	r0, r0
   1c184:	asrs	r5, r2, #32
   1c186:	movs	r2, r0
   1c188:	ldrh	r2, [r7, #32]
   1c18a:	movs	r4, r0

0001c18c <verify_tree_block_csum_silent@@Base>:
   1c18c:	push	{r4, r5, r6, lr}
   1c18e:	mov	r4, r0
   1c190:	mov	r0, r2
   1c192:	ldr	r2, [pc, #76]	; (1c1e0 <verify_tree_block_csum_silent@@Base+0x54>)
   1c194:	ldr	r3, [pc, #76]	; (1c1e4 <verify_tree_block_csum_silent@@Base+0x58>)
   1c196:	sub	sp, #40	; 0x28
   1c198:	add	r2, pc
   1c19a:	add	r5, sp, #4
   1c19c:	mov	r6, r1
   1c19e:	add.w	r1, r4, #128	; 0x80
   1c1a2:	ldr	r3, [r2, r3]
   1c1a4:	mov	r2, r5
   1c1a6:	ldr	r3, [r3, #0]
   1c1a8:	str	r3, [sp, #36]	; 0x24
   1c1aa:	mov.w	r3, #0
   1c1ae:	ldr	r3, [r4, #76]	; 0x4c
   1c1b0:	subs	r3, #32
   1c1b2:	bl	1c046 <btrfs_csum_data@@Base>
   1c1b6:	mov	r3, r6
   1c1b8:	movs	r2, #0
   1c1ba:	mov	r1, r5
   1c1bc:	mov	r0, r4
   1c1be:	bl	17308 <memcmp_extent_buffer@@Base>
   1c1c2:	ldr	r2, [pc, #36]	; (1c1e8 <verify_tree_block_csum_silent@@Base+0x5c>)
   1c1c4:	ldr	r3, [pc, #28]	; (1c1e4 <verify_tree_block_csum_silent@@Base+0x58>)
   1c1c6:	add	r2, pc
   1c1c8:	ldr	r3, [r2, r3]
   1c1ca:	subs	r0, #0
   1c1cc:	it	ne
   1c1ce:	movne	r0, #1
   1c1d0:	ldr	r2, [r3, #0]
   1c1d2:	ldr	r3, [sp, #36]	; 0x24
   1c1d4:	eors	r2, r3
   1c1d6:	beq.n	1c1dc <verify_tree_block_csum_silent@@Base+0x50>
   1c1d8:	blx	84cc <__stack_chk_fail@plt>
   1c1dc:	add	sp, #40	; 0x28
   1c1de:	pop	{r4, r5, r6, pc}
   1c1e0:	ldrh	r0, [r6, #30]
   1c1e2:	movs	r4, r0
   1c1e4:	lsls	r4, r4, #8
   1c1e6:	movs	r0, r0
   1c1e8:	ldrh	r2, [r0, #30]
   1c1ea:	movs	r4, r0

0001c1ec <csum_tree_block@@Base>:
   1c1ec:	push	{r4, r5, r6, lr}
   1c1ee:	mov	r4, r0
   1c1f0:	ldr.w	r0, [r0, #308]	; 0x134
   1c1f4:	mov	r5, r1
   1c1f6:	mov	r6, r2
   1c1f8:	bl	17e10 <btrfs_super_csum_size@@Base>
   1c1fc:	ldr.w	r3, [r4, #308]	; 0x134
   1c200:	ldrh.w	r3, [r3, #196]	; 0xc4
   1c204:	mov	r1, r0
   1c206:	cbz	r6, 1c21c <csum_tree_block@@Base+0x30>
   1c208:	ldrb.w	r2, [r4, #364]	; 0x16c
   1c20c:	lsls	r2, r2, #26
   1c20e:	bpl.n	1c21c <csum_tree_block@@Base+0x30>
   1c210:	mov	r0, r5
   1c212:	mov	r2, r3
   1c214:	ldmia.w	sp!, {r4, r5, r6, lr}
   1c218:	b.w	1c18c <verify_tree_block_csum_silent@@Base>
   1c21c:	mov	r2, r6
   1c21e:	mov	r0, r5
   1c220:	ldmia.w	sp!, {r4, r5, r6, lr}
   1c224:	b.w	1c0dc <csum_tree_block_size@@Base>

0001c228 <btrfs_find_tree_block@@Base>:
   1c228:	adds	r0, #64	; 0x40
   1c22a:	b.w	16c98 <find_extent_buffer@@Base>

0001c22e <btrfs_find_create_tree_block@@Base>:
   1c22e:	push	{r0, r1, r2, lr}
   1c230:	ldr.w	r1, [r0, #384]	; 0x180
   1c234:	str	r1, [sp, #0]
   1c236:	bl	16d1e <alloc_extent_buffer@@Base>
   1c23a:	add	sp, #12
   1c23c:	ldr.w	pc, [sp], #4

0001c240 <read_whole_eb@@Base>:
   1c240:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c244:	sub	sp, #60	; 0x3c
   1c246:	ldr	r3, [pc, #328]	; (1c390 <read_whole_eb@@Base+0x150>)
   1c248:	mov	r7, r0
   1c24a:	str	r2, [sp, #16]
   1c24c:	mov	r4, r1
   1c24e:	ldr	r2, [pc, #324]	; (1c394 <read_whole_eb@@Base+0x154>)
   1c250:	movs	r6, #0
   1c252:	ldr	r5, [r1, #76]	; 0x4c
   1c254:	add	r2, pc
   1c256:	ldr.w	r9, [pc, #320]	; 1c398 <read_whole_eb@@Base+0x158>
   1c25a:	ldr	r3, [r2, r3]
   1c25c:	add	r9, pc
   1c25e:	ldr	r3, [r3, #0]
   1c260:	str	r3, [sp, #52]	; 0x34
   1c262:	mov.w	r3, #0
   1c266:	add	r3, sp, #36	; 0x24
   1c268:	str	r6, [sp, #36]	; 0x24
   1c26a:	str	r3, [sp, #20]
   1c26c:	add	r3, sp, #40	; 0x28
   1c26e:	str	r3, [sp, #24]
   1c270:	cbnz	r5, 1c28a <read_whole_eb@@Base+0x4a>
   1c272:	mov	r0, r5
   1c274:	ldr	r2, [pc, #292]	; (1c39c <read_whole_eb@@Base+0x15c>)
   1c276:	ldr	r3, [pc, #280]	; (1c390 <read_whole_eb@@Base+0x150>)
   1c278:	add	r2, pc
   1c27a:	ldr	r3, [r2, r3]
   1c27c:	ldr	r2, [r3, #0]
   1c27e:	ldr	r3, [sp, #52]	; 0x34
   1c280:	eors	r2, r3
   1c282:	beq.w	1c388 <read_whole_eb@@Base+0x148>
   1c286:	blx	84cc <__stack_chk_fail@plt>
   1c28a:	ldrb.w	r1, [r7, #364]	; 0x16c
   1c28e:	mov	sl, r5
   1c290:	mov.w	fp, #0
   1c294:	ldrd	r2, r3, [r4, #40]	; 0x28
   1c298:	ands.w	r1, r1, #4
   1c29c:	strd	sl, fp, [sp, #40]	; 0x28
   1c2a0:	bne.n	1c34a <read_whole_eb@@Base+0x10a>
   1c2a2:	cmp	r3, #0
   1c2a4:	it	eq
   1c2a6:	cmpeq.w	r2, #65536	; 0x10000
   1c2aa:	beq.n	1c34a <read_whole_eb@@Base+0x10a>
   1c2ac:	ldr	r0, [sp, #16]
   1c2ae:	adds	r2, r2, r6
   1c2b0:	str	r1, [sp, #12]
   1c2b2:	adc.w	r3, r3, #0
   1c2b6:	str	r0, [sp, #8]
   1c2b8:	ldr	r0, [sp, #20]
   1c2ba:	str	r0, [sp, #4]
   1c2bc:	ldr	r0, [sp, #24]
   1c2be:	str	r0, [sp, #0]
   1c2c0:	mov	r0, r7
   1c2c2:	bl	29e28 <btrfs_map_block@@Base>
   1c2c6:	mov	r1, r0
   1c2c8:	cbz	r0, 1c2f8 <read_whole_eb@@Base+0xb8>
   1c2ca:	ldr	r3, [pc, #212]	; (1c3a0 <read_whole_eb@@Base+0x160>)
   1c2cc:	movs	r2, #0
   1c2ce:	ldr.w	r0, [r9, r3]
   1c2d2:	ldrd	r3, r1, [r4, #40]	; 0x28
   1c2d6:	adds	r3, r6, r3
   1c2d8:	adc.w	r2, r1, r2
   1c2dc:	strd	r3, r2, [sp]
   1c2e0:	ldr	r2, [pc, #192]	; (1c3a4 <read_whole_eb@@Base+0x164>)
   1c2e2:	movs	r1, #1
   1c2e4:	ldr	r0, [r0, #0]
   1c2e6:	add	r2, pc
   1c2e8:	blx	881c <__fprintf_chk@plt+0x4>
   1c2ec:	ldr	r0, [sp, #36]	; 0x24
   1c2ee:	blx	83f0 <free@plt+0x4>
   1c2f2:	mvn.w	r0, #4
   1c2f6:	b.n	1c274 <read_whole_eb@@Base+0x34>
   1c2f8:	ldr	r0, [sp, #36]	; 0x24
   1c2fa:	ldr.w	ip, [r0, #8]
   1c2fe:	ldr.w	r3, [ip, #24]
   1c302:	cmp	r3, #0
   1c304:	ble.n	1c2ee <read_whole_eb@@Base+0xae>
   1c306:	str	r3, [r4, #88]	; 0x58
   1c308:	ldrd	r3, r2, [ip, #16]
   1c30c:	str	r1, [sp, #28]
   1c30e:	adds	r3, #1
   1c310:	adc.w	r2, r2, #0
   1c314:	strd	r3, r2, [ip, #16]
   1c318:	ldrd	r2, r3, [r0, #16]
   1c31c:	strd	r2, r3, [r4, #48]	; 0x30
   1c320:	blx	83f0 <free@plt+0x4>
   1c324:	ldrd	r2, r3, [sp, #40]	; 0x28
   1c328:	ldr	r1, [sp, #28]
   1c32a:	cmp	fp, r3
   1c32c:	it	eq
   1c32e:	cmpeq	r5, r2
   1c330:	str	r1, [sp, #36]	; 0x24
   1c332:	bcc.n	1c382 <read_whole_eb@@Base+0x142>
   1c334:	ldr	r2, [sp, #40]	; 0x28
   1c336:	mov	r1, r6
   1c338:	mov	r0, r4
   1c33a:	bl	16e4a <read_extent_from_disk@@Base>
   1c33e:	cmp	r0, #0
   1c340:	bne.n	1c2f2 <read_whole_eb@@Base+0xb2>
   1c342:	ldr	r3, [sp, #40]	; 0x28
   1c344:	add	r6, r3
   1c346:	subs	r5, r5, r3
   1c348:	b.n	1c270 <read_whole_eb@@Base+0x30>
   1c34a:	ldr.w	r0, [r7, #352]	; 0x160
   1c34e:	ldr.w	r1, [r0, #72]!
   1c352:	cmp	r1, r0
   1c354:	bne.n	1c36e <read_whole_eb@@Base+0x12e>
   1c356:	ldr	r0, [r1, #24]
   1c358:	strd	r2, r3, [r4, #48]	; 0x30
   1c35c:	str	r0, [r4, #88]	; 0x58
   1c35e:	ldrd	r3, r2, [r1, #16]
   1c362:	adds	r3, #1
   1c364:	adc.w	r2, r2, #0
   1c368:	strd	r3, r2, [r1, #16]
   1c36c:	b.n	1c334 <read_whole_eb@@Base+0xf4>
   1c36e:	ldrd	sl, fp, [r1, #64]	; 0x40
   1c372:	cmp.w	fp, #0
   1c376:	it	eq
   1c378:	cmpeq.w	sl, #1
   1c37c:	beq.n	1c356 <read_whole_eb@@Base+0x116>
   1c37e:	ldr	r1, [r1, #0]
   1c380:	b.n	1c352 <read_whole_eb@@Base+0x112>
   1c382:	strd	sl, fp, [sp, #40]	; 0x28
   1c386:	b.n	1c334 <read_whole_eb@@Base+0xf4>
   1c388:	add	sp, #60	; 0x3c
   1c38a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c38e:	nop
   1c390:	lsls	r4, r4, #8
   1c392:	movs	r0, r0
   1c394:	ldrh	r4, [r6, #24]
   1c396:	movs	r4, r0
   1c398:	ldrh	r4, [r5, #24]
   1c39a:	movs	r4, r0
   1c39c:	ldrh	r0, [r2, #24]
   1c39e:	movs	r4, r0
   1c3a0:	lsls	r4, r6, #8
   1c3a2:	movs	r0, r0
   1c3a4:	ldc2l	0, cr0, [sl, #4]!

0001c3a8 <read_extent_data@@Base>:
   1c3a8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3ac:	mov	r6, r1
   1c3ae:	ldr	r5, [pc, #176]	; (1c460 <read_extent_data@@Base+0xb8>)
   1c3b0:	sub	sp, #28
   1c3b2:	ldr	r1, [pc, #176]	; (1c464 <read_extent_data@@Base+0xbc>)
   1c3b4:	mov	sl, r2
   1c3b6:	add	r5, pc
   1c3b8:	ldr	r4, [sp, #64]	; 0x40
   1c3ba:	mov	r7, r3
   1c3bc:	ldr.w	fp, [pc, #168]	; 1c468 <read_extent_data@@Base+0xc0>
   1c3c0:	ldr	r1, [r5, r1]
   1c3c2:	ldr	r5, [sp, #68]	; 0x44
   1c3c4:	add	fp, pc
   1c3c6:	ldr	r1, [r1, #0]
   1c3c8:	str	r1, [sp, #20]
   1c3ca:	mov.w	r1, #0
   1c3ce:	ldrd	r8, r9, [r4]
   1c3d2:	movs	r1, #0
   1c3d4:	str	r1, [sp, #12]
   1c3d6:	str	r5, [sp, #8]
   1c3d8:	add	r5, sp, #16
   1c3da:	strd	r4, r5, [sp]
   1c3de:	str	r1, [sp, #16]
   1c3e0:	bl	29e28 <btrfs_map_block@@Base>
   1c3e4:	mov	r5, r0
   1c3e6:	cbz	r0, 1c418 <read_extent_data@@Base+0x70>
   1c3e8:	ldr	r3, [pc, #128]	; (1c46c <read_extent_data@@Base+0xc4>)
   1c3ea:	movs	r1, #1
   1c3ec:	ldr	r2, [pc, #128]	; (1c470 <read_extent_data@@Base+0xc8>)
   1c3ee:	ldr.w	r3, [fp, r3]
   1c3f2:	add	r2, pc
   1c3f4:	strd	sl, r7, [sp]
   1c3f8:	ldr	r0, [r3, #0]
   1c3fa:	blx	881c <__fprintf_chk@plt+0x4>
   1c3fe:	ldr	r0, [sp, #16]
   1c400:	blx	83f0 <free@plt+0x4>
   1c404:	ldr	r2, [pc, #108]	; (1c474 <read_extent_data@@Base+0xcc>)
   1c406:	ldr	r3, [pc, #92]	; (1c464 <read_extent_data@@Base+0xbc>)
   1c408:	add	r2, pc
   1c40a:	ldr	r3, [r2, r3]
   1c40c:	ldr	r2, [r3, #0]
   1c40e:	ldr	r3, [sp, #20]
   1c410:	eors	r2, r3
   1c412:	beq.n	1c458 <read_extent_data@@Base+0xb0>
   1c414:	blx	84cc <__stack_chk_fail@plt>
   1c418:	ldr	r1, [sp, #16]
   1c41a:	ldrd	r2, r3, [r4]
   1c41e:	ldr	r0, [r1, #8]
   1c420:	cmp	r9, r3
   1c422:	it	eq
   1c424:	cmpeq	r8, r2
   1c426:	it	cc
   1c428:	strdcc	r8, r9, [r4]
   1c42c:	ldr	r0, [r0, #24]
   1c42e:	cmp	r0, #0
   1c430:	bge.n	1c438 <read_extent_data@@Base+0x90>
   1c432:	mvn.w	r5, #4
   1c436:	b.n	1c3fe <read_extent_data@@Base+0x56>
   1c438:	ldrd	r2, r3, [r1, #16]
   1c43c:	mov	r1, r6
   1c43e:	strd	r2, r3, [sp]
   1c442:	ldr	r2, [r4, #0]
   1c444:	blx	85cc <pread64@plt>
   1c448:	ldrd	r2, r3, [r4]
   1c44c:	asrs	r1, r0, #31
   1c44e:	cmp	r1, r3
   1c450:	it	eq
   1c452:	cmpeq	r0, r2
   1c454:	beq.n	1c3fe <read_extent_data@@Base+0x56>
   1c456:	b.n	1c432 <read_extent_data@@Base+0x8a>
   1c458:	mov	r0, r5
   1c45a:	add	sp, #28
   1c45c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c460:	ldrh	r2, [r2, #14]
   1c462:	movs	r4, r0
   1c464:	lsls	r4, r4, #8
   1c466:	movs	r0, r0
   1c468:	ldrh	r4, [r0, #14]
   1c46a:	movs	r4, r0
   1c46c:	lsls	r4, r6, #8
   1c46e:	movs	r0, r0
   1c470:	lsrs	r6, r3, #22
   1c472:	movs	r2, r0
   1c474:	ldrh	r0, [r0, #12]
   1c476:	movs	r4, r0

0001c478 <write_and_map_eb@@Base>:
   1c478:	ldr	r2, [pc, #248]	; (1c574 <write_and_map_eb@@Base+0xfc>)
   1c47a:	ldr	r3, [pc, #252]	; (1c578 <write_and_map_eb@@Base+0x100>)
   1c47c:	add	r2, pc
   1c47e:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1c482:	sub	sp, #48	; 0x30
   1c484:	ldr	r3, [r2, r3]
   1c486:	mov	r5, r1
   1c488:	ldr	r2, [r1, #76]	; 0x4c
   1c48a:	mov	r6, r0
   1c48c:	ldr	r3, [r3, #0]
   1c48e:	str	r3, [sp, #44]	; 0x2c
   1c490:	mov.w	r3, #0
   1c494:	movs	r3, #0
   1c496:	strd	r3, r3, [sp, #24]
   1c49a:	strd	r2, r3, [sp, #32]
   1c49e:	add	r2, sp, #24
   1c4a0:	strd	r3, r2, [sp, #8]
   1c4a4:	add	r3, sp, #28
   1c4a6:	str	r3, [sp, #4]
   1c4a8:	add	r3, sp, #32
   1c4aa:	str	r3, [sp, #0]
   1c4ac:	ldrd	r2, r3, [r1, #40]	; 0x28
   1c4b0:	movs	r1, #1
   1c4b2:	bl	29e28 <btrfs_map_block@@Base>
   1c4b6:	ldr	r4, [sp, #24]
   1c4b8:	mov	r3, r0
   1c4ba:	cmp	r4, #0
   1c4bc:	beq.n	1c560 <write_and_map_eb@@Base+0xe8>
   1c4be:	ldrd	r2, r3, [sp, #32]
   1c4c2:	mov	r1, r5
   1c4c4:	mov	r0, r6
   1c4c6:	str	r4, [sp, #8]
   1c4c8:	strd	r2, r3, [sp]
   1c4cc:	ldr	r2, [sp, #28]
   1c4ce:	bl	2a790 <write_raid56_with_parity@@Base>
   1c4d2:	ldr	r1, [pc, #168]	; (1c57c <write_and_map_eb@@Base+0x104>)
   1c4d4:	mov.w	r2, #494	; 0x1ee
   1c4d8:	add	r1, pc
   1c4da:	adds	r1, #16
   1c4dc:	mov	r3, r0
   1c4de:	ldr	r0, [pc, #160]	; (1c580 <write_and_map_eb@@Base+0x108>)
   1c4e0:	add	r0, pc
   1c4e2:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1c4e6:	ldr	r0, [sp, #24]
   1c4e8:	blx	83f0 <free@plt+0x4>
   1c4ec:	ldr	r0, [sp, #28]
   1c4ee:	blx	83f0 <free@plt+0x4>
   1c4f2:	ldr	r2, [pc, #144]	; (1c584 <write_and_map_eb@@Base+0x10c>)
   1c4f4:	ldr	r3, [pc, #128]	; (1c578 <write_and_map_eb@@Base+0x100>)
   1c4f6:	add	r2, pc
   1c4f8:	ldr	r3, [r2, r3]
   1c4fa:	ldr	r2, [r3, #0]
   1c4fc:	ldr	r3, [sp, #44]	; 0x2c
   1c4fe:	eors	r2, r3
   1c500:	beq.n	1c56c <write_and_map_eb@@Base+0xf4>
   1c502:	blx	84cc <__stack_chk_fail@plt>
   1c506:	mov.w	r2, #496	; 0x1f0
   1c50a:	mov	r1, r7
   1c50c:	mov	r0, r6
   1c50e:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1c512:	add.w	r1, r8, r4, lsl #4
   1c516:	adds	r4, #1
   1c518:	mov	r0, r5
   1c51a:	ldr	r3, [r1, #8]
   1c51c:	add.w	r8, r8, r4, lsl #4
   1c520:	ldr	r3, [r3, #24]
   1c522:	str	r3, [r5, #88]	; 0x58
   1c524:	ldrd	r2, r3, [r8]
   1c528:	strd	r2, r3, [r5, #48]	; 0x30
   1c52c:	ldr	r2, [r1, #8]
   1c52e:	ldrd	r3, r1, [r2, #16]
   1c532:	adds	r3, #1
   1c534:	adc.w	r1, r1, #0
   1c538:	strd	r3, r1, [r2, #16]
   1c53c:	bl	16e7e <write_extent_to_disk@@Base>
   1c540:	mov.w	r2, #502	; 0x1f6
   1c544:	mov	r1, r7
   1c546:	mov	r3, r0
   1c548:	str	r0, [sp, #20]
   1c54a:	mov	r0, r6
   1c54c:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1c550:	ldr	r3, [sp, #20]
   1c552:	ldr.w	r8, [sp, #28]
   1c556:	ldr.w	r2, [r8, #4]
   1c55a:	cmp	r2, r4
   1c55c:	bgt.n	1c506 <write_and_map_eb@@Base+0x8e>
   1c55e:	b.n	1c4e6 <write_and_map_eb@@Base+0x6e>
   1c560:	ldr	r7, [pc, #36]	; (1c588 <write_and_map_eb@@Base+0x110>)
   1c562:	ldr	r6, [pc, #40]	; (1c58c <write_and_map_eb@@Base+0x114>)
   1c564:	add	r7, pc
   1c566:	adds	r7, #16
   1c568:	add	r6, pc
   1c56a:	b.n	1c552 <write_and_map_eb@@Base+0xda>
   1c56c:	movs	r0, #0
   1c56e:	add	sp, #48	; 0x30
   1c570:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1c574:	ldrh	r4, [r1, #8]
   1c576:	movs	r4, r0
   1c578:	lsls	r4, r4, #8
   1c57a:	movs	r0, r0
   1c57c:	asrs	r7, r7, #20
   1c57e:	movs	r2, r0
   1c580:	b.n	1ca2a <btrfs_check_super@@Base+0x12>
   1c582:	movs	r1, r0
   1c584:	ldrh	r2, [r2, #4]
   1c586:	movs	r4, r0
   1c588:	asrs	r3, r6, #18
   1c58a:	movs	r2, r0
   1c58c:	b.n	1c926 <btrfs_scan_fs_devices@@Base+0xe>
   1c58e:	movs	r1, r0

0001c590 <btrfs_setup_root@@Base>:
   1c590:	push	{r4, r5, r6, lr}
   1c592:	mov	r4, r0
   1c594:	movs	r0, #0
   1c596:	strd	r2, r3, [r4, #472]	; 0x1d8
   1c59a:	mov	r6, r2
   1c59c:	mov	r5, r3
   1c59e:	movs	r2, #0
   1c5a0:	movs	r3, #0
   1c5a2:	strd	r0, r0, [r4]
   1c5a6:	strd	r2, r3, [r4, #480]	; 0x1e0
   1c5aa:	strd	r2, r3, [r4, #504]	; 0x1f8
   1c5ae:	add.w	r3, r4, #520	; 0x208
   1c5b2:	strd	r0, r0, [r4, #488]	; 0x1e8
   1c5b6:	movw	r2, #439	; 0x1b7
   1c5ba:	str.w	r1, [r4, #464]	; 0x1d0
   1c5be:	mov	r1, r0
   1c5c0:	strd	r3, r3, [r4, #520]	; 0x208
   1c5c4:	add.w	r3, r4, #512	; 0x200
   1c5c8:	str.w	r0, [r4, #455]	; 0x1c7
   1c5cc:	str.w	r0, [r4, #459]	; 0x1cb
   1c5d0:	strb.w	r0, [r4, #463]	; 0x1cf
   1c5d4:	add.w	r0, r4, #8
   1c5d8:	strd	r3, r3, [r4, #512]	; 0x200
   1c5dc:	blx	8780 <memset@plt+0x4>
   1c5e0:	str.w	r6, [r4, #447]	; 0x1bf
   1c5e4:	str.w	r5, [r4, #451]	; 0x1c3
   1c5e8:	pop	{r4, r5, r6, pc}

0001c5ea <btrfs_free_fs_root@@Base>:
   1c5ea:	push	{r4, lr}
   1c5ec:	mov	r4, r0
   1c5ee:	ldr	r0, [r0, #0]
   1c5f0:	cbz	r0, 1c5f6 <btrfs_free_fs_root@@Base+0xc>
   1c5f2:	bl	16c20 <free_extent_buffer@@Base>
   1c5f6:	ldr	r0, [r4, #4]
   1c5f8:	cbz	r0, 1c5fe <btrfs_free_fs_root@@Base+0x14>
   1c5fa:	bl	16c20 <free_extent_buffer@@Base>
   1c5fe:	mov	r0, r4
   1c600:	blx	83f0 <free@plt+0x4>
   1c604:	movs	r0, #0
   1c606:	pop	{r4, pc}
   1c608:	sub.w	r0, r0, #528	; 0x210
   1c60c:	b.w	1c5ea <btrfs_free_fs_root@@Base>

0001c610 <btrfs_free_fs_info@@Base>:
   1c610:	push	{r4, lr}
   1c612:	mov	r4, r0
   1c614:	ldr	r0, [r0, #44]	; 0x2c
   1c616:	cbz	r0, 1c61c <btrfs_free_fs_info@@Base+0xc>
   1c618:	blx	83f0 <free@plt+0x4>
   1c61c:	ldr	r0, [r4, #28]
   1c61e:	blx	83f0 <free@plt+0x4>
   1c622:	ldr	r0, [r4, #24]
   1c624:	blx	83f0 <free@plt+0x4>
   1c628:	ldr	r0, [r4, #32]
   1c62a:	blx	83f0 <free@plt+0x4>
   1c62e:	ldr	r0, [r4, #36]	; 0x24
   1c630:	blx	83f0 <free@plt+0x4>
   1c634:	ldr	r0, [r4, #40]	; 0x28
   1c636:	blx	83f0 <free@plt+0x4>
   1c63a:	ldr	r0, [r4, #48]	; 0x30
   1c63c:	blx	83f0 <free@plt+0x4>
   1c640:	ldr	r0, [r4, #52]	; 0x34
   1c642:	blx	83f0 <free@plt+0x4>
   1c646:	ldr.w	r0, [r4, #308]	; 0x134
   1c64a:	blx	83f0 <free@plt+0x4>
   1c64e:	ldr	r0, [r4, #60]	; 0x3c
   1c650:	blx	83f0 <free@plt+0x4>
   1c654:	mov	r0, r4
   1c656:	ldmia.w	sp!, {r4, lr}
   1c65a:	b.w	83ec <free@plt>

0001c65e <btrfs_new_fs_info@@Base>:
   1c65e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c662:	sub	sp, #20
   1c664:	mov	fp, r0
   1c666:	mov.w	r1, #400	; 0x190
   1c66a:	movs	r0, #1
   1c66c:	strd	r2, r3, [sp]
   1c670:	blx	8358 <calloc@plt+0x4>
   1c674:	mov	r4, r0
   1c676:	cmp	r0, #0
   1c678:	beq.n	1c722 <btrfs_new_fs_info@@Base+0xc4>
   1c67a:	mov.w	r1, #544	; 0x220
   1c67e:	movs	r0, #1
   1c680:	blx	8358 <calloc@plt+0x4>
   1c684:	mov.w	r1, #544	; 0x220
   1c688:	str	r0, [r4, #28]
   1c68a:	str	r0, [sp, #12]
   1c68c:	movs	r0, #1
   1c68e:	blx	8358 <calloc@plt+0x4>
   1c692:	mov.w	r1, #544	; 0x220
   1c696:	str	r0, [r4, #24]
   1c698:	str	r0, [sp, #8]
   1c69a:	movs	r0, #1
   1c69c:	blx	8358 <calloc@plt+0x4>
   1c6a0:	mov.w	r1, #544	; 0x220
   1c6a4:	str	r0, [r4, #32]
   1c6a6:	mov	sl, r0
   1c6a8:	movs	r0, #1
   1c6aa:	blx	8358 <calloc@plt+0x4>
   1c6ae:	mov.w	r1, #544	; 0x220
   1c6b2:	str	r0, [r4, #36]	; 0x24
   1c6b4:	mov	r9, r0
   1c6b6:	movs	r0, #1
   1c6b8:	blx	8358 <calloc@plt+0x4>
   1c6bc:	mov.w	r1, #544	; 0x220
   1c6c0:	str	r0, [r4, #40]	; 0x28
   1c6c2:	mov	r8, r0
   1c6c4:	movs	r0, #1
   1c6c6:	blx	8358 <calloc@plt+0x4>
   1c6ca:	mov.w	r1, #544	; 0x220
   1c6ce:	str	r0, [r4, #44]	; 0x2c
   1c6d0:	mov	r7, r0
   1c6d2:	movs	r0, #1
   1c6d4:	blx	8358 <calloc@plt+0x4>
   1c6d8:	mov.w	r1, #544	; 0x220
   1c6dc:	str	r0, [r4, #48]	; 0x30
   1c6de:	mov	r6, r0
   1c6e0:	movs	r0, #1
   1c6e2:	blx	8358 <calloc@plt+0x4>
   1c6e6:	mov.w	r1, #4096	; 0x1000
   1c6ea:	str	r0, [r4, #52]	; 0x34
   1c6ec:	mov	r5, r0
   1c6ee:	movs	r0, #1
   1c6f0:	blx	8358 <calloc@plt+0x4>
   1c6f4:	ldr	r2, [sp, #12]
   1c6f6:	str.w	r0, [r4, #308]	; 0x134
   1c6fa:	cbz	r2, 1c71a <btrfs_new_fs_info@@Base+0xbc>
   1c6fc:	ldr	r3, [sp, #8]
   1c6fe:	cbz	r3, 1c71a <btrfs_new_fs_info@@Base+0xbc>
   1c700:	cmp.w	sl, #0
   1c704:	beq.n	1c71a <btrfs_new_fs_info@@Base+0xbc>
   1c706:	cmp.w	r9, #0
   1c70a:	beq.n	1c71a <btrfs_new_fs_info@@Base+0xbc>
   1c70c:	cmp.w	r8, #0
   1c710:	beq.n	1c71a <btrfs_new_fs_info@@Base+0xbc>
   1c712:	cbz	r7, 1c71a <btrfs_new_fs_info@@Base+0xbc>
   1c714:	cbz	r6, 1c71a <btrfs_new_fs_info@@Base+0xbc>
   1c716:	cbz	r5, 1c71a <btrfs_new_fs_info@@Base+0xbc>
   1c718:	cbnz	r0, 1c72a <btrfs_new_fs_info@@Base+0xcc>
   1c71a:	mov	r0, r4
   1c71c:	movs	r4, #0
   1c71e:	bl	1c610 <btrfs_free_fs_info@@Base>
   1c722:	mov	r0, r4
   1c724:	add	sp, #20
   1c726:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c72a:	add.w	r0, r4, #64	; 0x40
   1c72e:	bl	16674 <extent_io_tree_init@@Base>
   1c732:	add.w	r0, r4, #96	; 0x60
   1c736:	bl	16674 <extent_io_tree_init@@Base>
   1c73a:	add.w	r0, r4, #128	; 0x80
   1c73e:	bl	16674 <extent_io_tree_init@@Base>
   1c742:	add.w	r0, r4, #160	; 0xa0
   1c746:	bl	16674 <extent_io_tree_init@@Base>
   1c74a:	add.w	r0, r4, #192	; 0xc0
   1c74e:	bl	16674 <extent_io_tree_init@@Base>
   1c752:	movs	r3, #0
   1c754:	add.w	r0, r4, #228	; 0xe4
   1c758:	str.w	r3, [r4, #224]	; 0xe0
   1c75c:	str	r3, [r4, #56]	; 0x38
   1c75e:	bl	15e94 <cache_tree_init@@Base>
   1c762:	movs	r3, #1
   1c764:	str.w	r3, [r4, #312]	; 0x138
   1c768:	add.w	r3, r4, #336	; 0x150
   1c76c:	strd	r3, r3, [r4, #336]	; 0x150
   1c770:	add.w	r3, r4, #356	; 0x164
   1c774:	strd	r3, r3, [r4, #356]	; 0x164
   1c778:	add.w	r3, r4, #344	; 0x158
   1c77c:	strd	r3, r3, [r4, #344]	; 0x158
   1c780:	cmp.w	fp, #0
   1c784:	bne.n	1c792 <btrfs_new_fs_info@@Base+0x134>
   1c786:	ldrb.w	r3, [r4, #364]	; 0x16c
   1c78a:	orr.w	r3, r3, #2
   1c78e:	strb.w	r3, [r4, #364]	; 0x16c
   1c792:	ldr	r3, [sp, #0]
   1c794:	mov.w	r2, #4294967295	; 0xffffffff
   1c798:	str.w	r3, [r4, #320]	; 0x140
   1c79c:	ldr	r3, [sp, #4]
   1c79e:	str.w	r3, [r4, #324]	; 0x144
   1c7a2:	mov.w	r3, #4294967295	; 0xffffffff
   1c7a6:	strd	r2, r3, [r4, #272]	; 0x110
   1c7aa:	strd	r2, r3, [r4, #280]	; 0x118
   1c7ae:	strd	r2, r3, [r4, #288]	; 0x120
   1c7b2:	b.n	1c722 <btrfs_new_fs_info@@Base+0xc4>

0001c7b4 <btrfs_check_fs_compatibility@@Base>:
   1c7b4:	push	{r0, r1, r4, r5, r6, lr}
   1c7b6:	ldr.w	r4, [r0, #188]	; 0xbc
   1c7ba:	ldr.w	r5, [r0, #192]	; 0xc0
   1c7be:	bic.w	r2, r4, #4080	; 0xff0
   1c7c2:	ldr	r6, [pc, #128]	; (1c844 <btrfs_check_fs_compatibility@@Base+0x90>)
   1c7c4:	bic.w	r2, r2, #15
   1c7c8:	mov	r3, r5
   1c7ca:	orrs.w	ip, r2, r3
   1c7ce:	add	r6, pc
   1c7d0:	beq.n	1c7ec <btrfs_check_fs_compatibility@@Base+0x38>
   1c7d2:	ldr	r1, [pc, #116]	; (1c848 <btrfs_check_fs_compatibility@@Base+0x94>)
   1c7d4:	ldr	r0, [r6, r1]
   1c7d6:	strd	r2, r3, [sp]
   1c7da:	ldr	r2, [pc, #112]	; (1c84c <btrfs_check_fs_compatibility@@Base+0x98>)
   1c7dc:	add	r2, pc
   1c7de:	ldr	r0, [r0, #0]
   1c7e0:	movs	r1, #1
   1c7e2:	blx	881c <__fprintf_chk@plt+0x4>
   1c7e6:	mvn.w	r0, #94	; 0x5e
   1c7ea:	b.n	1c808 <btrfs_check_fs_compatibility@@Base+0x54>
   1c7ec:	and.w	r2, r4, #1
   1c7f0:	movs	r3, #0
   1c7f2:	orrs	r3, r2
   1c7f4:	ittt	eq
   1c7f6:	streq.w	r5, [r0, #192]	; 0xc0
   1c7fa:	orreq.w	r4, r4, #1
   1c7fe:	streq.w	r4, [r0, #188]	; 0xbc
   1c802:	lsls	r4, r1, #31
   1c804:	bmi.n	1c80c <btrfs_check_fs_compatibility@@Base+0x58>
   1c806:	movs	r0, #0
   1c808:	add	sp, #8
   1c80a:	pop	{r4, r5, r6, pc}
   1c80c:	ldr.w	r3, [r0, #180]	; 0xb4
   1c810:	lsls	r1, r1, #18
   1c812:	ldr.w	r2, [r0, #184]	; 0xb8
   1c816:	bic.w	r4, r3, #3
   1c81a:	itt	mi
   1c81c:	bicmi.w	r3, r3, #2
   1c820:	strmi.w	r3, [r0, #180]	; 0xb4
   1c824:	mov	r5, r2
   1c826:	itt	mi
   1c828:	movmi	r3, r4
   1c82a:	strmi.w	r2, [r0, #184]	; 0xb8
   1c82e:	orrs.w	r1, r4, r5
   1c832:	beq.n	1c806 <btrfs_check_fs_compatibility@@Base+0x52>
   1c834:	ldr	r1, [pc, #16]	; (1c848 <btrfs_check_fs_compatibility@@Base+0x94>)
   1c836:	ldr	r0, [r6, r1]
   1c838:	strd	r3, r2, [sp]
   1c83c:	ldr	r2, [pc, #16]	; (1c850 <btrfs_check_fs_compatibility@@Base+0x9c>)
   1c83e:	add	r2, pc
   1c840:	b.n	1c7de <btrfs_check_fs_compatibility@@Base+0x2a>
   1c842:	nop
   1c844:	strh	r2, [r7, #44]	; 0x2c
   1c846:	movs	r4, r0
   1c848:	lsls	r4, r6, #8
   1c84a:	movs	r0, r0
   1c84c:	lsrs	r1, r2, #7
   1c84e:	movs	r2, r0
   1c850:	lsrs	r5, r5, #6
   1c852:	movs	r2, r0

0001c854 <btrfs_release_all_roots@@Base>:
   1c854:	push	{r4, lr}
   1c856:	mov	r4, r0
   1c858:	ldr	r3, [r0, #48]	; 0x30
   1c85a:	cbz	r3, 1c862 <btrfs_release_all_roots@@Base+0xe>
   1c85c:	ldr	r0, [r3, #0]
   1c85e:	bl	16c20 <free_extent_buffer@@Base>
   1c862:	ldr	r3, [r4, #44]	; 0x2c
   1c864:	cbz	r3, 1c86c <btrfs_release_all_roots@@Base+0x18>
   1c866:	ldr	r0, [r3, #0]
   1c868:	bl	16c20 <free_extent_buffer@@Base>
   1c86c:	ldr	r3, [r4, #40]	; 0x28
   1c86e:	cbz	r3, 1c876 <btrfs_release_all_roots@@Base+0x22>
   1c870:	ldr	r0, [r3, #0]
   1c872:	bl	16c20 <free_extent_buffer@@Base>
   1c876:	ldr	r3, [r4, #36]	; 0x24
   1c878:	cbz	r3, 1c880 <btrfs_release_all_roots@@Base+0x2c>
   1c87a:	ldr	r0, [r3, #0]
   1c87c:	bl	16c20 <free_extent_buffer@@Base>
   1c880:	ldr	r3, [r4, #24]
   1c882:	cbz	r3, 1c88a <btrfs_release_all_roots@@Base+0x36>
   1c884:	ldr	r0, [r3, #0]
   1c886:	bl	16c20 <free_extent_buffer@@Base>
   1c88a:	ldr	r3, [r4, #28]
   1c88c:	cbz	r3, 1c894 <btrfs_release_all_roots@@Base+0x40>
   1c88e:	ldr	r0, [r3, #0]
   1c890:	bl	16c20 <free_extent_buffer@@Base>
   1c894:	ldr	r3, [r4, #60]	; 0x3c
   1c896:	cbz	r3, 1c89e <btrfs_release_all_roots@@Base+0x4a>
   1c898:	ldr	r0, [r3, #0]
   1c89a:	bl	16c20 <free_extent_buffer@@Base>
   1c89e:	ldr	r3, [r4, #32]
   1c8a0:	cbz	r3, 1c8a8 <btrfs_release_all_roots@@Base+0x54>
   1c8a2:	ldr	r0, [r3, #0]
   1c8a4:	bl	16c20 <free_extent_buffer@@Base>
   1c8a8:	ldr	r3, [r4, #52]	; 0x34
   1c8aa:	cbz	r3, 1c8b6 <btrfs_release_all_roots@@Base+0x62>
   1c8ac:	ldmia.w	sp!, {r4, lr}
   1c8b0:	ldr	r0, [r3, #0]
   1c8b2:	b.w	16c20 <free_extent_buffer@@Base>
   1c8b6:	pop	{r4, pc}

0001c8b8 <btrfs_cleanup_all_caches@@Base>:
   1c8b8:	push	{r3, r4, r5, lr}
   1c8ba:	add.w	r5, r0, #344	; 0x158
   1c8be:	mov	r4, r0
   1c8c0:	ldr.w	r0, [r4, #344]	; 0x158
   1c8c4:	cmp	r0, r5
   1c8c6:	bne.n	1c900 <btrfs_cleanup_all_caches@@Base+0x48>
   1c8c8:	ldr	r1, [pc, #72]	; (1c914 <btrfs_cleanup_all_caches@@Base+0x5c>)
   1c8ca:	add.w	r0, r4, #228	; 0xe4
   1c8ce:	add	r1, pc
   1c8d0:	bl	160be <cache_tree_free_extents@@Base>
   1c8d4:	add.w	r0, r4, #64	; 0x40
   1c8d8:	bl	16c28 <extent_io_tree_cleanup@@Base>
   1c8dc:	add.w	r0, r4, #96	; 0x60
   1c8e0:	bl	16c28 <extent_io_tree_cleanup@@Base>
   1c8e4:	add.w	r0, r4, #128	; 0x80
   1c8e8:	bl	16c28 <extent_io_tree_cleanup@@Base>
   1c8ec:	add.w	r0, r4, #160	; 0xa0
   1c8f0:	bl	16c28 <extent_io_tree_cleanup@@Base>
   1c8f4:	add.w	r0, r4, #192	; 0xc0
   1c8f8:	ldmia.w	sp!, {r3, r4, r5, lr}
   1c8fc:	b.w	16c28 <extent_io_tree_cleanup@@Base>
   1c900:	ldrd	r2, r3, [r0]
   1c904:	str	r3, [r2, #4]
   1c906:	str	r2, [r3, #0]
   1c908:	strd	r0, r0, [r0]
   1c90c:	subs	r0, #68	; 0x44
   1c90e:	bl	16c20 <free_extent_buffer@@Base>
   1c912:	b.n	1c8c0 <btrfs_cleanup_all_caches@@Base+0x8>
   1c914:	bl	ffd58916 <__bss_end__@@Base+0xffcf2686>

0001c918 <btrfs_scan_fs_devices@@Base>:
   1c918:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c91c:	mov	fp, r2
   1c91e:	ldr	r2, [pc, #220]	; (1c9fc <btrfs_scan_fs_devices@@Base+0xe4>)
   1c920:	sub	sp, #36	; 0x24
   1c922:	ldr	r3, [pc, #220]	; (1ca00 <btrfs_scan_fs_devices@@Base+0xe8>)
   1c924:	mov	r7, r0
   1c926:	add	r2, pc
   1c928:	ldrd	r4, r5, [sp, #72]	; 0x48
   1c92c:	mov	sl, r1
   1c92e:	ldr	r6, [pc, #212]	; (1ca04 <btrfs_scan_fs_devices@@Base+0xec>)
   1c930:	ldr	r3, [r2, r3]
   1c932:	movs	r2, #0
   1c934:	add	r6, pc
   1c936:	ldr	r3, [r3, #0]
   1c938:	str	r3, [sp, #28]
   1c93a:	mov.w	r3, #0
   1c93e:	orrs.w	r3, r4, r5
   1c942:	mov.w	r3, #2
   1c946:	str	r3, [sp, #0]
   1c948:	mov.w	r3, #0
   1c94c:	itt	eq
   1c94e:	moveq.w	r4, #65536	; 0x10000
   1c952:	moveq	r5, #0
   1c954:	blx	8584 <lseek64@plt>
   1c958:	cmp	r0, #0
   1c95a:	mov	r8, r0
   1c95c:	sbcs.w	r3, r1, #0
   1c960:	mov	r9, r1
   1c962:	bge.n	1c980 <btrfs_scan_fs_devices@@Base+0x68>
   1c964:	blx	8740 <__errno_location@plt>
   1c968:	ldr	r4, [r0, #0]
   1c96a:	negs	r4, r4
   1c96c:	ldr	r2, [pc, #152]	; (1ca08 <btrfs_scan_fs_devices@@Base+0xf0>)
   1c96e:	ldr	r3, [pc, #144]	; (1ca00 <btrfs_scan_fs_devices@@Base+0xe8>)
   1c970:	add	r2, pc
   1c972:	ldr	r3, [r2, r3]
   1c974:	ldr	r2, [r3, #0]
   1c976:	ldr	r3, [sp, #28]
   1c978:	eors	r2, r3
   1c97a:	beq.n	1c9f2 <btrfs_scan_fs_devices@@Base+0xda>
   1c97c:	blx	84cc <__stack_chk_fail@plt>
   1c980:	movs	r3, #0
   1c982:	movs	r2, #0
   1c984:	str	r3, [sp, #0]
   1c986:	mov	r0, r7
   1c988:	movs	r3, #0
   1c98a:	blx	8584 <lseek64@plt>
   1c98e:	cmp	r9, r5
   1c990:	it	eq
   1c992:	cmpeq	r8, r4
   1c994:	bcs.n	1c9ac <btrfs_scan_fs_devices@@Base+0x94>
   1c996:	ldr	r0, [pc, #116]	; (1ca0c <btrfs_scan_fs_devices@@Base+0xf4>)
   1c998:	mov	r2, r4
   1c99a:	mov	r3, r5
   1c99c:	strd	r8, r9, [sp]
   1c9a0:	add	r0, pc
   1c9a2:	mvn.w	r4, #21
   1c9a6:	bl	1747c <__btrfs_error@@Base>
   1c9aa:	b.n	1c96c <btrfs_scan_fs_devices@@Base+0x54>
   1c9ac:	ldr	r3, [sp, #80]	; 0x50
   1c9ae:	mov	r2, fp
   1c9b0:	strd	r4, r5, [sp]
   1c9b4:	mov	r1, sl
   1c9b6:	mov	r0, r7
   1c9b8:	str	r3, [sp, #8]
   1c9ba:	add	r3, sp, #16
   1c9bc:	bl	280ec <btrfs_scan_one_device@@Base>
   1c9c0:	mov	r4, r0
   1c9c2:	cbz	r0, 1c9d8 <btrfs_scan_fs_devices@@Base+0xc0>
   1c9c4:	ldr	r3, [pc, #72]	; (1ca10 <btrfs_scan_fs_devices@@Base+0xf8>)
   1c9c6:	movs	r1, #1
   1c9c8:	ldr	r2, [pc, #72]	; (1ca14 <btrfs_scan_fs_devices@@Base+0xfc>)
   1c9ca:	ldr	r0, [r6, r3]
   1c9cc:	add	r2, pc
   1c9ce:	mov	r3, sl
   1c9d0:	ldr	r0, [r0, #0]
   1c9d2:	blx	881c <__fprintf_chk@plt+0x4>
   1c9d6:	b.n	1c96c <btrfs_scan_fs_devices@@Base+0x54>
   1c9d8:	ldr	r3, [sp, #84]	; 0x54
   1c9da:	cmp	r3, #0
   1c9dc:	bne.n	1c96c <btrfs_scan_fs_devices@@Base+0x54>
   1c9de:	ldrd	r2, r3, [sp, #16]
   1c9e2:	cmp	r3, #0
   1c9e4:	it	eq
   1c9e6:	cmpeq	r2, #1
   1c9e8:	beq.n	1c96c <btrfs_scan_fs_devices@@Base+0x54>
   1c9ea:	bl	2f548 <btrfs_scan_devices@@Base>
   1c9ee:	mov	r4, r0
   1c9f0:	b.n	1c96c <btrfs_scan_fs_devices@@Base+0x54>
   1c9f2:	mov	r0, r4
   1c9f4:	add	sp, #36	; 0x24
   1c9f6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c9fa:	nop
   1c9fc:	strh	r2, [r4, #34]	; 0x22
   1c9fe:	movs	r4, r0
   1ca00:	lsls	r4, r4, #8
   1ca02:	movs	r0, r0
   1ca04:	strh	r4, [r2, #34]	; 0x22
   1ca06:	movs	r4, r0
   1ca08:	strh	r0, [r3, #32]
   1ca0a:	movs	r4, r0
   1ca0c:	lsrs	r7, r1, #2
   1ca0e:	movs	r2, r0
   1ca10:	lsls	r4, r6, #8
   1ca12:	movs	r0, r0
   1ca14:	lsrs	r2, r3, #2
   1ca16:	movs	r2, r0

0001ca18 <btrfs_check_super@@Base>:
   1ca18:	ldr	r2, [pc, #580]	; (1cc60 <btrfs_check_super@@Base+0x248>)
   1ca1a:	ldr	r3, [pc, #584]	; (1cc64 <btrfs_check_super@@Base+0x24c>)
   1ca1c:	add	r2, pc
   1ca1e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1ca22:	sub	sp, #132	; 0x84
   1ca24:	ldr	r3, [r2, r3]
   1ca26:	mov	r4, r0
   1ca28:	mov	r7, r1
   1ca2a:	ldr	r3, [r3, #0]
   1ca2c:	str	r3, [sp, #124]	; 0x7c
   1ca2e:	mov.w	r3, #0
   1ca32:	ldr	r2, [r0, #64]	; 0x40
   1ca34:	ldr	r3, [r0, #68]	; 0x44
   1ca36:	add	r1, pc, #544	; (adr r1, 1cc58 <btrfs_check_super@@Base+0x240>)
   1ca38:	ldrd	r0, r1, [r1]
   1ca3c:	cmp	r3, r1
   1ca3e:	it	eq
   1ca40:	cmpeq	r2, r0
   1ca42:	bne.n	1ca52 <btrfs_check_super@@Base+0x3a>
   1ca44:	lsls	r3, r7, #30
   1ca46:	bmi.n	1ca52 <btrfs_check_super@@Base+0x3a>
   1ca48:	ldr	r0, [pc, #540]	; (1cc68 <btrfs_check_super@@Base+0x250>)
   1ca4a:	add	r0, pc
   1ca4c:	bl	1747c <__btrfs_error@@Base>
   1ca50:	b.n	1ca68 <btrfs_check_super@@Base+0x50>
   1ca52:	ldrh.w	r9, [r4, #196]	; 0xc4
   1ca56:	bl	17e34 <btrfs_super_num_csums@@Base>
   1ca5a:	cmp	r9, r0
   1ca5c:	bcc.n	1ca82 <btrfs_check_super@@Base+0x6a>
   1ca5e:	ldr	r0, [pc, #524]	; (1cc6c <btrfs_check_super@@Base+0x254>)
   1ca60:	mov	r1, r9
   1ca62:	add	r0, pc
   1ca64:	bl	1747c <__btrfs_error@@Base>
   1ca68:	mvn.w	r5, #4
   1ca6c:	ldr	r2, [pc, #512]	; (1cc70 <btrfs_check_super@@Base+0x258>)
   1ca6e:	ldr	r3, [pc, #500]	; (1cc64 <btrfs_check_super@@Base+0x24c>)
   1ca70:	add	r2, pc
   1ca72:	ldr	r3, [r2, r3]
   1ca74:	ldr	r2, [r3, #0]
   1ca76:	ldr	r3, [sp, #124]	; 0x7c
   1ca78:	eors	r2, r3
   1ca7a:	beq.w	1cc4e <btrfs_check_super@@Base+0x236>
   1ca7e:	blx	84cc <__stack_chk_fail@plt>
   1ca82:	mov	r0, r4
   1ca84:	add	r5, sp, #12
   1ca86:	bl	17e10 <btrfs_super_csum_size@@Base>
   1ca8a:	add.w	r6, r4, #32
   1ca8e:	mov	r2, r5
   1ca90:	mov.w	r3, #4064	; 0xfe0
   1ca94:	mov	r1, r6
   1ca96:	mov	r8, r0
   1ca98:	mov	r0, r9
   1ca9a:	bl	1c046 <btrfs_csum_data@@Base>
   1ca9e:	mov	r0, r5
   1caa0:	mov	r2, r8
   1caa2:	mov	r1, r4
   1caa4:	blx	8464 <memcmp@plt+0x4>
   1caa8:	mov	r5, r0
   1caaa:	cbz	r0, 1cab2 <btrfs_check_super@@Base+0x9a>
   1caac:	ldr	r0, [pc, #452]	; (1cc74 <btrfs_check_super@@Base+0x25c>)
   1caae:	add	r0, pc
   1cab0:	b.n	1ca4c <btrfs_check_super@@Base+0x34>
   1cab2:	ldrb.w	r1, [r4, #198]	; 0xc6
   1cab6:	cmp	r1, #7
   1cab8:	bls.n	1cac6 <btrfs_check_super@@Base+0xae>
   1caba:	ldr	r0, [pc, #444]	; (1cc78 <btrfs_check_super@@Base+0x260>)
   1cabc:	movs	r2, #8
   1cabe:	add	r0, pc
   1cac0:	bl	1747c <__btrfs_error@@Base>
   1cac4:	b.n	1cafc <btrfs_check_super@@Base+0xe4>
   1cac6:	ldrb.w	r1, [r4, #199]	; 0xc7
   1caca:	cmp	r1, #7
   1cacc:	bls.n	1cad6 <btrfs_check_super@@Base+0xbe>
   1cace:	ldr	r0, [pc, #428]	; (1cc7c <btrfs_check_super@@Base+0x264>)
   1cad0:	movs	r2, #8
   1cad2:	add	r0, pc
   1cad4:	b.n	1cac0 <btrfs_check_super@@Base+0xa8>
   1cad6:	ldrb.w	r1, [r4, #200]	; 0xc8
   1cada:	cmp	r1, #7
   1cadc:	bls.n	1cae6 <btrfs_check_super@@Base+0xce>
   1cade:	ldr	r0, [pc, #416]	; (1cc80 <btrfs_check_super@@Base+0x268>)
   1cae0:	movs	r2, #8
   1cae2:	add	r0, pc
   1cae4:	b.n	1cac0 <btrfs_check_super@@Base+0xa8>
   1cae6:	ldr	r2, [r4, #80]	; 0x50
   1cae8:	mov	r1, r5
   1caea:	ldr	r3, [r4, #84]	; 0x54
   1caec:	ubfx	r0, r2, #0, #12
   1caf0:	orrs	r1, r0
   1caf2:	beq.n	1cb02 <btrfs_check_super@@Base+0xea>
   1caf4:	ldr	r0, [pc, #396]	; (1cc84 <btrfs_check_super@@Base+0x26c>)
   1caf6:	add	r0, pc
   1caf8:	bl	1747c <__btrfs_error@@Base>
   1cafc:	ldr	r0, [pc, #392]	; (1cc88 <btrfs_check_super@@Base+0x270>)
   1cafe:	add	r0, pc
   1cb00:	b.n	1ca4c <btrfs_check_super@@Base+0x34>
   1cb02:	ldr	r2, [r4, #88]	; 0x58
   1cb04:	mov	r1, r5
   1cb06:	ldr	r3, [r4, #92]	; 0x5c
   1cb08:	ubfx	r0, r2, #0, #12
   1cb0c:	orrs	r1, r0
   1cb0e:	beq.n	1cb16 <btrfs_check_super@@Base+0xfe>
   1cb10:	ldr	r0, [pc, #376]	; (1cc8c <btrfs_check_super@@Base+0x274>)
   1cb12:	add	r0, pc
   1cb14:	b.n	1caf8 <btrfs_check_super@@Base+0xe0>
   1cb16:	ldr	r2, [r4, #96]	; 0x60
   1cb18:	mov	r1, r5
   1cb1a:	ldr	r3, [r4, #100]	; 0x64
   1cb1c:	ubfx	r0, r2, #0, #12
   1cb20:	orrs	r1, r0
   1cb22:	beq.n	1cb2a <btrfs_check_super@@Base+0x112>
   1cb24:	ldr	r0, [pc, #360]	; (1cc90 <btrfs_check_super@@Base+0x278>)
   1cb26:	add	r0, pc
   1cb28:	b.n	1caf8 <btrfs_check_super@@Base+0xe0>
   1cb2a:	ldr.w	r1, [r4, #148]	; 0x94
   1cb2e:	cmp.w	r1, #4096	; 0x1000
   1cb32:	bcs.n	1cb3e <btrfs_check_super@@Base+0x126>
   1cb34:	ldr	r0, [pc, #348]	; (1cc94 <btrfs_check_super@@Base+0x27c>)
   1cb36:	add	r0, pc
   1cb38:	bl	1747c <__btrfs_error@@Base>
   1cb3c:	b.n	1cafc <btrfs_check_super@@Base+0xe4>
   1cb3e:	ubfx	r3, r1, #0, #12
   1cb42:	cbz	r3, 1cb4a <btrfs_check_super@@Base+0x132>
   1cb44:	ldr	r0, [pc, #336]	; (1cc98 <btrfs_check_super@@Base+0x280>)
   1cb46:	add	r0, pc
   1cb48:	b.n	1cb38 <btrfs_check_super@@Base+0x120>
   1cb4a:	ldr.w	ip, [r4, #144]	; 0x90
   1cb4e:	cmp.w	ip, #4096	; 0x1000
   1cb52:	bcs.n	1cb5c <btrfs_check_super@@Base+0x144>
   1cb54:	ldr	r0, [pc, #324]	; (1cc9c <btrfs_check_super@@Base+0x284>)
   1cb56:	mov	r1, ip
   1cb58:	add	r0, pc
   1cb5a:	b.n	1cb38 <btrfs_check_super@@Base+0x120>
   1cb5c:	ubfx	r3, ip, #0, #12
   1cb60:	cbz	r3, 1cb6a <btrfs_check_super@@Base+0x152>
   1cb62:	ldr	r0, [pc, #316]	; (1cca0 <btrfs_check_super@@Base+0x288>)
   1cb64:	mov	r1, ip
   1cb66:	add	r0, pc
   1cb68:	b.n	1cb38 <btrfs_check_super@@Base+0x120>
   1cb6a:	ldr	r2, [r4, #112]	; 0x70
   1cb6c:	ldr	r3, [r4, #116]	; 0x74
   1cb6e:	orrs	r3, r2
   1cb70:	bne.n	1cb7c <btrfs_check_super@@Base+0x164>
   1cb72:	ldr	r0, [pc, #304]	; (1cca4 <btrfs_check_super@@Base+0x28c>)
   1cb74:	add	r0, pc
   1cb76:	bl	1747c <__btrfs_error@@Base>
   1cb7a:	b.n	1cafc <btrfs_check_super@@Base+0xe4>
   1cb7c:	movs	r0, #6
   1cb7e:	ldr	r3, [r4, #124]	; 0x7c
   1cb80:	muls	r0, r1
   1cb82:	ldr	r2, [r4, #120]	; 0x78
   1cb84:	movs	r1, #0
   1cb86:	cmp	r3, r1
   1cb88:	it	eq
   1cb8a:	cmpeq	r2, r0
   1cb8c:	bcs.n	1cb94 <btrfs_check_super@@Base+0x17c>
   1cb8e:	ldr	r0, [pc, #280]	; (1cca8 <btrfs_check_super@@Base+0x290>)
   1cb90:	add	r0, pc
   1cb92:	b.n	1caf8 <btrfs_check_super@@Base+0xe0>
   1cb94:	ldr.w	r1, [r4, #156]	; 0x9c
   1cb98:	cmp.w	r1, #4096	; 0x1000
   1cb9c:	beq.n	1cba8 <btrfs_check_super@@Base+0x190>
   1cb9e:	cmp	r1, ip
   1cba0:	beq.n	1cba8 <btrfs_check_super@@Base+0x190>
   1cba2:	ldr	r0, [pc, #264]	; (1ccac <btrfs_check_super@@Base+0x294>)
   1cba4:	add	r0, pc
   1cba6:	b.n	1cb38 <btrfs_check_super@@Base+0x120>
   1cba8:	ldr.w	r1, [r4, #188]	; 0xbc
   1cbac:	movs	r3, #0
   1cbae:	and.w	r2, r1, #1024	; 0x400
   1cbb2:	orrs	r3, r2
   1cbb4:	mov.w	r2, #16
   1cbb8:	ite	ne
   1cbba:	addwne	r0, r4, #571	; 0x23b
   1cbbe:	moveq	r0, r6
   1cbc0:	addw	r6, r4, #283	; 0x11b
   1cbc4:	mov	r1, r6
   1cbc6:	blx	8464 <memcmp@plt+0x4>
   1cbca:	cbz	r0, 1cbf6 <btrfs_check_super@@Base+0x1de>
   1cbcc:	add	r2, sp, #44	; 0x2c
   1cbce:	addw	r0, r4, #571	; 0x23b
   1cbd2:	str	r2, [sp, #4]
   1cbd4:	mov	r1, r2
   1cbd6:	blx	8394 <uuid_unparse@plt>
   1cbda:	add	r1, sp, #84	; 0x54
   1cbdc:	mov	r0, r6
   1cbde:	str	r1, [sp, #0]
   1cbe0:	blx	8394 <uuid_unparse@plt>
   1cbe4:	tst.w	r7, #4
   1cbe8:	ldrd	r1, r2, [sp]
   1cbec:	beq.n	1cc26 <btrfs_check_super@@Base+0x20e>
   1cbee:	ldr	r0, [pc, #192]	; (1ccb0 <btrfs_check_super@@Base+0x298>)
   1cbf0:	add	r0, pc
   1cbf2:	bl	17400 <__btrfs_warning@@Base>
   1cbf6:	ldr.w	r3, [r4, #140]	; 0x8c
   1cbfa:	movs	r1, #0
   1cbfc:	ldr.w	r2, [r4, #136]	; 0x88
   1cc00:	mov.w	r0, #2147483648	; 0x80000000
   1cc04:	cmp	r1, r3
   1cc06:	it	eq
   1cc08:	cmpeq	r0, r2
   1cc0a:	bcs.n	1cc14 <btrfs_check_super@@Base+0x1fc>
   1cc0c:	ldr	r0, [pc, #164]	; (1ccb4 <btrfs_check_super@@Base+0x29c>)
   1cc0e:	add	r0, pc
   1cc10:	bl	17400 <__btrfs_warning@@Base>
   1cc14:	ldr.w	r2, [r4, #136]	; 0x88
   1cc18:	ldr.w	r3, [r4, #140]	; 0x8c
   1cc1c:	orrs	r3, r2
   1cc1e:	bne.n	1cc2c <btrfs_check_super@@Base+0x214>
   1cc20:	ldr	r0, [pc, #148]	; (1ccb8 <btrfs_check_super@@Base+0x2a0>)
   1cc22:	add	r0, pc
   1cc24:	b.n	1cb76 <btrfs_check_super@@Base+0x15e>
   1cc26:	ldr	r0, [pc, #148]	; (1ccbc <btrfs_check_super@@Base+0x2a4>)
   1cc28:	add	r0, pc
   1cc2a:	b.n	1cac0 <btrfs_check_super@@Base+0xa8>
   1cc2c:	ldr.w	r1, [r4, #160]	; 0xa0
   1cc30:	cmp.w	r1, #2048	; 0x800
   1cc34:	bls.n	1cc40 <btrfs_check_super@@Base+0x228>
   1cc36:	ldr	r0, [pc, #136]	; (1ccc0 <btrfs_check_super@@Base+0x2a8>)
   1cc38:	mov.w	r2, #2048	; 0x800
   1cc3c:	add	r0, pc
   1cc3e:	b.n	1cac0 <btrfs_check_super@@Base+0xa8>
   1cc40:	cmp	r1, #96	; 0x60
   1cc42:	bhi.w	1ca6c <btrfs_check_super@@Base+0x54>
   1cc46:	ldr	r0, [pc, #124]	; (1ccc4 <btrfs_check_super@@Base+0x2ac>)
   1cc48:	movs	r2, #97	; 0x61
   1cc4a:	add	r0, pc
   1cc4c:	b.n	1cac0 <btrfs_check_super@@Base+0xa8>
   1cc4e:	mov	r0, r5
   1cc50:	add	sp, #132	; 0x84
   1cc52:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1cc56:	nop
   1cc58:	tst	r1, r4
   1cc5a:	strh	r0, [r1, r1]
   1cc5c:	strh	r6, [r4, r5]
   1cc5e:	ldr	r5, [pc, #380]	; (1cddc <btrfs_read_dev_super@@Base+0x114>)
   1cc60:	strh	r4, [r5, #26]
   1cc62:	movs	r4, r0
   1cc64:	lsls	r4, r4, #8
   1cc66:	movs	r0, r0
   1cc68:	lsrs	r0, r7, #32
   1cc6a:	movs	r2, r0
   1cc6c:	lsrs	r7, r7, #32
   1cc6e:	movs	r2, r0
   1cc70:	strh	r0, [r3, #24]
   1cc72:	movs	r4, r0
   1cc74:	lsrs	r5, r2, #32
   1cc76:	movs	r2, r0
   1cc78:	lsrs	r2, r4, #32
   1cc7a:	movs	r2, r0
   1cc7c:	lsrs	r0, r6, #32
   1cc7e:	movs	r2, r0
   1cc80:	lsrs	r3, r0, #1
   1cc82:	movs	r2, r0
   1cc84:	lsrs	r0, r2, #1
   1cc86:	movs	r2, r0
   1cc88:	lsrs	r3, r6, #8
   1cc8a:	movs	r2, r0
   1cc8c:	lsrs	r4, r2, #1
   1cc8e:	movs	r2, r0
   1cc90:	lsrs	r1, r4, #1
   1cc92:	movs	r2, r0
   1cc94:	lsrs	r0, r6, #1
   1cc96:	movs	r2, r0
   1cc98:	lsrs	r6, r7, #1
   1cc9a:	movs	r2, r0
   1cc9c:	lsrs	r3, r0, #2
   1cc9e:	movs	r2, r0
   1cca0:	lsrs	r5, r2, #2
   1cca2:	movs	r2, r0
   1cca4:	lsrs	r0, r4, #2
   1cca6:	movs	r2, r0
   1cca8:	lsrs	r2, r3, #2
   1ccaa:	movs	r2, r0
   1ccac:	lsrs	r6, r3, #2
   1ccae:	movs	r2, r0
   1ccb0:	lsrs	r0, r5, #1
   1ccb2:	movs	r2, r0
   1ccb4:	lsrs	r0, r4, #2
   1ccb6:	movs	r2, r0
   1ccb8:	lsrs	r7, r5, #2
   1ccba:	movs	r2, r0
   1ccbc:	lsrs	r2, r3, #1
   1ccbe:	movs	r2, r0
   1ccc0:	lsrs	r4, r5, #2
   1ccc2:	movs	r2, r0
   1ccc4:	lsrs	r1, r0, #3
   1ccc6:	movs	r2, r0

0001ccc8 <btrfs_read_dev_super@@Base>:
   1ccc8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1cccc:	mov	sl, r2
   1ccce:	vpush	{d8-d9}
   1ccd2:	mov	fp, r3
   1ccd4:	ldr	r2, [pc, #496]	; (1cec8 <btrfs_read_dev_super@@Base+0x200>)
   1ccd6:	vmov	s16, r1
   1ccda:	ldr	r1, [pc, #496]	; (1cecc <btrfs_read_dev_super@@Base+0x204>)
   1ccdc:	sub.w	sp, sp, #4160	; 0x1040
   1cce0:	vmov	s17, r0
   1cce4:	add	r1, pc
   1cce6:	sub	sp, #12
   1cce8:	add.w	r3, sp, #4160	; 0x1040
   1ccec:	add	r4, sp, #68	; 0x44
   1ccee:	ldr	r2, [r1, r2]
   1ccf0:	adds	r3, #4
   1ccf2:	ldr	r2, [r2, #0]
   1ccf4:	str	r2, [r3, #0]
   1ccf6:	mov.w	r2, #0
   1ccfa:	add.w	r3, sp, #4224	; 0x1080
   1ccfe:	ldr	r3, [r3, #0]
   1cd00:	tst.w	r3, #1
   1cd04:	ite	ne
   1cd06:	movne	r3, #3
   1cd08:	moveq	r3, #1
   1cd0a:	cmp.w	fp, #0
   1cd0e:	str	r3, [sp, #28]
   1cd10:	it	eq
   1cd12:	cmpeq.w	sl, #65536	; 0x10000
   1cd16:	beq.w	1ce56 <btrfs_read_dev_super@@Base+0x18e>
   1cd1a:	mov.w	r2, #4096	; 0x1000
   1cd1e:	mov	r1, r4
   1cd20:	strd	sl, fp, [sp]
   1cd24:	blx	85cc <pread64@plt>
   1cd28:	cmp	r0, #0
   1cd2a:	bge.n	1cd50 <btrfs_read_dev_super@@Base+0x88>
   1cd2c:	blx	8740 <__errno_location@plt>
   1cd30:	ldr	r0, [r0, #0]
   1cd32:	negs	r0, r0
   1cd34:	ldr	r1, [pc, #408]	; (1ced0 <btrfs_read_dev_super@@Base+0x208>)
   1cd36:	add.w	r3, sp, #4160	; 0x1040
   1cd3a:	ldr	r2, [pc, #396]	; (1cec8 <btrfs_read_dev_super@@Base+0x200>)
   1cd3c:	adds	r3, #4
   1cd3e:	add	r1, pc
   1cd40:	ldr	r2, [r1, r2]
   1cd42:	ldr	r1, [r2, #0]
   1cd44:	ldr	r2, [r3, #0]
   1cd46:	eors	r1, r2
   1cd48:	beq.w	1ceb8 <btrfs_read_dev_super@@Base+0x1f0>
   1cd4c:	blx	84cc <__stack_chk_fail@plt>
   1cd50:	cmp.w	r0, #4096	; 0x1000
   1cd54:	blt.w	1ceac <btrfs_read_dev_super@@Base+0x1e4>
   1cd58:	ldrd	r2, r3, [r4, #48]	; 0x30
   1cd5c:	cmp	fp, r3
   1cd5e:	it	eq
   1cd60:	cmpeq	sl, r2
   1cd62:	bne.w	1ceb2 <btrfs_read_dev_super@@Base+0x1ea>
   1cd66:	add.w	r3, sp, #4224	; 0x1080
   1cd6a:	mov	r0, r4
   1cd6c:	ldr	r1, [r3, #0]
   1cd6e:	bl	1ca18 <btrfs_check_super@@Base>
   1cd72:	cmp	r0, #0
   1cd74:	blt.n	1cd34 <btrfs_read_dev_super@@Base+0x6c>
   1cd76:	vmov	r0, s16
   1cd7a:	mov.w	r2, #4096	; 0x1000
   1cd7e:	mov	r1, r4
   1cd80:	blx	843c <memcpy@plt+0x4>
   1cd84:	movs	r0, #0
   1cd86:	b.n	1cd34 <btrfs_read_dev_super@@Base+0x6c>
   1cd88:	movs	r3, #12
   1cd8a:	mov.w	r2, #16384	; 0x4000
   1cd8e:	muls	r3, r5
   1cd90:	sub.w	r0, r3, #32
   1cd94:	rsb	r1, r3, #32
   1cd98:	lsl.w	fp, r2, r0
   1cd9c:	lsr.w	r1, r2, r1
   1cda0:	orr.w	fp, fp, r1
   1cda4:	lsl.w	sl, r2, r3
   1cda8:	vmov	r0, s17
   1cdac:	mov.w	r2, #4096	; 0x1000
   1cdb0:	mov	r1, r4
   1cdb2:	strd	sl, fp, [sp]
   1cdb6:	blx	85cc <pread64@plt>
   1cdba:	cmp.w	r0, #4096	; 0x1000
   1cdbe:	blt.n	1ce9c <btrfs_read_dev_super@@Base+0x1d4>
   1cdc0:	ldrd	r2, r3, [r4, #48]	; 0x30
   1cdc4:	cmp	fp, r3
   1cdc6:	it	eq
   1cdc8:	cmpeq	sl, r2
   1cdca:	bne.n	1ce92 <btrfs_read_dev_super@@Base+0x1ca>
   1cdcc:	ldrd	r2, r3, [r4, #64]	; 0x40
   1cdd0:	orrs	r3, r2
   1cdd2:	bne.n	1cdd8 <btrfs_read_dev_super@@Base+0x110>
   1cdd4:	cmp	r5, #0
   1cdd6:	beq.n	1ce9c <btrfs_read_dev_super@@Base+0x1d4>
   1cdd8:	add.w	r3, sp, #4224	; 0x1080
   1cddc:	mov	r0, r4
   1cdde:	ldr	r1, [r3, #0]
   1cde0:	bl	1ca18 <btrfs_check_super@@Base>
   1cde4:	cmp	r0, #0
   1cde6:	bne.n	1ce92 <btrfs_read_dev_super@@Base+0x1ca>
   1cde8:	cmp.w	r8, #0
   1cdec:	bne.n	1ce6e <btrfs_read_dev_super@@Base+0x1a6>
   1cdee:	ldr.w	r3, [r4, #188]	; 0xbc
   1cdf2:	and.w	r3, r3, #1024	; 0x400
   1cdf6:	strd	r3, r8, [sp, #16]
   1cdfa:	ldrd	r2, r3, [sp, #16]
   1cdfe:	orrs	r3, r2
   1ce00:	beq.n	1ce22 <btrfs_read_dev_super@@Base+0x15a>
   1ce02:	addw	r3, r6, #567	; 0x237
   1ce06:	sub.w	r7, r6, #20
   1ce0a:	addw	ip, r6, #583	; 0x247
   1ce0e:	ldr	r0, [r3, #0]
   1ce10:	adds	r3, #8
   1ce12:	ldr.w	r1, [r3, #-4]
   1ce16:	cmp	r3, ip
   1ce18:	mov	r2, r7
   1ce1a:	stmia	r2!, {r0, r1}
   1ce1c:	mov	r7, r2
   1ce1e:	bne.n	1ce0e <btrfs_read_dev_super@@Base+0x146>
   1ce20:	movs	r7, #1
   1ce22:	add	r3, sp, #100	; 0x64
   1ce24:	add.w	ip, sp, #36	; 0x24
   1ce28:	ldmia	r3, {r0, r1, r2, r3}
   1ce2a:	stmia.w	ip, {r0, r1, r2, r3}
   1ce2e:	ldrd	r8, r9, [r4, #72]	; 0x48
   1ce32:	ldrd	r2, r3, [sp, #8]
   1ce36:	cmp	r3, r9
   1ce38:	it	eq
   1ce3a:	cmpeq	r2, r8
   1ce3c:	bcs.n	1ce50 <btrfs_read_dev_super@@Base+0x188>
   1ce3e:	vmov	r0, s16
   1ce42:	mov.w	r2, #4096	; 0x1000
   1ce46:	mov	r1, r4
   1ce48:	blx	843c <memcpy@plt+0x4>
   1ce4c:	strd	r8, r9, [sp, #8]
   1ce50:	mov.w	r8, #1
   1ce54:	b.n	1ce92 <btrfs_read_dev_super@@Base+0x1ca>
   1ce56:	movs	r3, #0
   1ce58:	movs	r2, #0
   1ce5a:	strd	r2, r3, [sp, #8]
   1ce5e:	add	r3, sp, #100	; 0x64
   1ce60:	movs	r7, #0
   1ce62:	add	r6, sp, #72	; 0x48
   1ce64:	vmov	s18, r3
   1ce68:	mov	r5, r7
   1ce6a:	mov	r8, r7
   1ce6c:	b.n	1cda8 <btrfs_read_dev_super@@Base+0xe0>
   1ce6e:	vmov	r1, s18
   1ce72:	add	r0, sp, #36	; 0x24
   1ce74:	movs	r2, #16
   1ce76:	blx	8464 <memcmp@plt+0x4>
   1ce7a:	cbnz	r0, 1ce92 <btrfs_read_dev_super@@Base+0x1ca>
   1ce7c:	cmp	r7, #0
   1ce7e:	beq.n	1ce2e <btrfs_read_dev_super@@Base+0x166>
   1ce80:	addw	r1, r6, #567	; 0x237
   1ce84:	sub.w	r0, r6, #20
   1ce88:	movs	r2, #16
   1ce8a:	blx	8464 <memcmp@plt+0x4>
   1ce8e:	cmp	r0, #0
   1ce90:	beq.n	1ce2e <btrfs_read_dev_super@@Base+0x166>
   1ce92:	ldr	r3, [sp, #28]
   1ce94:	adds	r5, #1
   1ce96:	cmp	r3, r5
   1ce98:	bne.w	1cd88 <btrfs_read_dev_super@@Base+0xc0>
   1ce9c:	ldrd	r3, r2, [sp, #8]
   1cea0:	orrs	r3, r2
   1cea2:	ite	eq
   1cea4:	moveq.w	r0, #4294967295	; 0xffffffff
   1cea8:	movne	r0, #0
   1ceaa:	b.n	1cd34 <btrfs_read_dev_super@@Base+0x6c>
   1ceac:	mvn.w	r0, #1
   1ceb0:	b.n	1cd34 <btrfs_read_dev_super@@Base+0x6c>
   1ceb2:	mvn.w	r0, #4
   1ceb6:	b.n	1cd34 <btrfs_read_dev_super@@Base+0x6c>
   1ceb8:	add.w	sp, sp, #4160	; 0x1040
   1cebc:	add	sp, #12
   1cebe:	vpop	{d8-d9}
   1cec2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cec6:	nop
   1cec8:	lsls	r4, r4, #8
   1ceca:	movs	r0, r0
   1cecc:	strh	r4, [r4, #4]
   1cece:	movs	r4, r0
   1ced0:	strh	r2, [r1, #2]
   1ced2:	movs	r4, r0

0001ced4 <write_all_supers@@Base>:
   1ced4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ced8:	mov	r4, r0
   1ceda:	vpush	{d8}
   1cede:	ldr	r2, [pc, #1004]	; (1d2cc <write_all_supers@@Base+0x3f8>)
   1cee0:	ldr	r3, [pc, #1004]	; (1d2d0 <write_all_supers@@Base+0x3fc>)
   1cee2:	add	r2, pc
   1cee4:	ldr.w	r5, [r0, #308]	; 0x134
   1cee8:	sub	sp, #68	; 0x44
   1ceea:	ldr	r3, [r2, r3]
   1ceec:	ldr.w	r7, [r0, #352]	; 0x160
   1cef0:	mov	r0, r5
   1cef2:	ldr	r3, [r3, #0]
   1cef4:	str	r3, [sp, #60]	; 0x3c
   1cef6:	mov.w	r3, #0
   1cefa:	add.w	r3, r7, #72	; 0x48
   1cefe:	str	r3, [sp, #20]
   1cf00:	bl	1bcba <btrfs_fs_roots_compare_roots@@Base+0x4>
   1cf04:	addw	r5, r5, #2859	; 0xb2b
   1cf08:	movs	r3, #168	; 0xa8
   1cf0a:	mla	r3, r3, r0, r5
   1cf0e:	ldr.w	r8, [r3, #8]
   1cf12:	ldr.w	r9, [r3, #12]
   1cf16:	ldr	r3, [r4, #28]
   1cf18:	ldr	r1, [r3, #0]
   1cf1a:	ldr.w	r3, [r1, #180]	; 0xb4
   1cf1e:	ldr.w	r2, [r1, #176]	; 0xb0
   1cf22:	cmp	r9, r3
   1cf24:	it	eq
   1cf26:	cmpeq	r8, r2
   1cf28:	beq.n	1cf3a <write_all_supers@@Base+0x66>
   1cf2a:	adds	r0, #1
   1cf2c:	negs	r3, r0
   1cf2e:	and.w	r0, r0, #3
   1cf32:	and.w	r3, r3, #3
   1cf36:	it	pl
   1cf38:	negpl	r0, r3
   1cf3a:	movs	r2, #168	; 0xa8
   1cf3c:	movs	r1, #0
   1cf3e:	mul.w	r6, r2, r0
   1cf42:	adds	r3, r5, r6
   1cf44:	mov	r0, r3
   1cf46:	blx	8780 <memset@plt+0x4>
   1cf4a:	ldr	r2, [r4, #28]
   1cf4c:	ldr	r2, [r2, #0]
   1cf4e:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cf52:	str	r1, [r5, r6]
   1cf54:	str	r2, [r0, #4]
   1cf56:	mov	r3, r0
   1cf58:	ldr	r2, [r4, #28]
   1cf5a:	ldr	r2, [r2, #0]
   1cf5c:	ldr.w	r1, [r2, #176]	; 0xb0
   1cf60:	ldr.w	r2, [r2, #180]	; 0xb4
   1cf64:	str	r1, [r0, #8]
   1cf66:	str	r2, [r0, #12]
   1cf68:	ldr	r2, [r4, #28]
   1cf6a:	ldr	r2, [r2, #0]
   1cf6c:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cf70:	strb.w	r2, [r0, #152]	; 0x98
   1cf74:	ldr	r2, [r4, #32]
   1cf76:	ldr	r2, [r2, #0]
   1cf78:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cf7c:	str	r1, [r0, #16]
   1cf7e:	str	r2, [r0, #20]
   1cf80:	ldr	r2, [r4, #32]
   1cf82:	ldr	r2, [r2, #0]
   1cf84:	ldr.w	r1, [r2, #176]	; 0xb0
   1cf88:	ldr.w	r2, [r2, #180]	; 0xb4
   1cf8c:	str	r1, [r0, #24]
   1cf8e:	str	r2, [r0, #28]
   1cf90:	ldr	r2, [r4, #32]
   1cf92:	ldr	r2, [r2, #0]
   1cf94:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cf98:	strb.w	r2, [r0, #153]	; 0x99
   1cf9c:	ldr	r2, [r4, #24]
   1cf9e:	ldr	r2, [r2, #0]
   1cfa0:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cfa4:	str	r1, [r0, #32]
   1cfa6:	str	r2, [r0, #36]	; 0x24
   1cfa8:	ldr	r2, [r4, #24]
   1cfaa:	ldr	r2, [r2, #0]
   1cfac:	ldr.w	r1, [r2, #176]	; 0xb0
   1cfb0:	ldr.w	r2, [r2, #180]	; 0xb4
   1cfb4:	str	r1, [r0, #40]	; 0x28
   1cfb6:	str	r2, [r0, #44]	; 0x2c
   1cfb8:	ldr	r2, [r4, #24]
   1cfba:	ldr	r2, [r2, #0]
   1cfbc:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cfc0:	strb.w	r2, [r0, #154]	; 0x9a
   1cfc4:	ldr	r2, [r4, #20]
   1cfc6:	cbz	r2, 1cff0 <write_all_supers@@Base+0x11c>
   1cfc8:	ldr	r2, [r2, #0]
   1cfca:	cbz	r2, 1cff0 <write_all_supers@@Base+0x11c>
   1cfcc:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cfd0:	str	r1, [r0, #48]	; 0x30
   1cfd2:	str	r2, [r0, #52]	; 0x34
   1cfd4:	ldr	r2, [r4, #20]
   1cfd6:	ldr	r2, [r2, #0]
   1cfd8:	ldr.w	r1, [r2, #176]	; 0xb0
   1cfdc:	ldr.w	r2, [r2, #180]	; 0xb4
   1cfe0:	str	r1, [r0, #56]	; 0x38
   1cfe2:	str	r2, [r0, #60]	; 0x3c
   1cfe4:	ldr	r2, [r4, #20]
   1cfe6:	ldr	r2, [r2, #0]
   1cfe8:	ldrb.w	r2, [r2, #196]	; 0xc4
   1cfec:	strb.w	r2, [r0, #155]	; 0x9b
   1cff0:	ldr	r2, [r4, #36]	; 0x24
   1cff2:	add.w	sl, sp, #28
   1cff6:	ldr	r2, [r2, #0]
   1cff8:	ldrd	r1, r2, [r2, #40]	; 0x28
   1cffc:	str	r1, [r3, #64]	; 0x40
   1cffe:	str	r2, [r3, #68]	; 0x44
   1d000:	ldr	r2, [r4, #36]	; 0x24
   1d002:	ldr	r2, [r2, #0]
   1d004:	ldr.w	r1, [r2, #176]	; 0xb0
   1d008:	ldr.w	r2, [r2, #180]	; 0xb4
   1d00c:	str	r1, [r3, #72]	; 0x48
   1d00e:	str	r2, [r3, #76]	; 0x4c
   1d010:	ldr	r2, [r4, #36]	; 0x24
   1d012:	ldr	r2, [r2, #0]
   1d014:	ldrb.w	r2, [r2, #196]	; 0xc4
   1d018:	strb.w	r2, [r3, #156]	; 0x9c
   1d01c:	ldr	r2, [r4, #40]	; 0x28
   1d01e:	ldr	r2, [r2, #0]
   1d020:	ldrd	r1, r2, [r2, #40]	; 0x28
   1d024:	str	r1, [r3, #80]	; 0x50
   1d026:	str	r2, [r3, #84]	; 0x54
   1d028:	ldr	r2, [r4, #40]	; 0x28
   1d02a:	ldr	r2, [r2, #0]
   1d02c:	ldr.w	r1, [r2, #176]	; 0xb0
   1d030:	ldr.w	r2, [r2, #180]	; 0xb4
   1d034:	str	r1, [r3, #88]	; 0x58
   1d036:	str	r2, [r3, #92]	; 0x5c
   1d038:	ldr	r2, [r4, #40]	; 0x28
   1d03a:	ldr	r2, [r2, #0]
   1d03c:	ldrb.w	r2, [r2, #196]	; 0xc4
   1d040:	strb.w	r2, [r3, #157]	; 0x9d
   1d044:	ldr.w	r2, [r4, #308]	; 0x134
   1d048:	ldr	r1, [r2, #112]	; 0x70
   1d04a:	ldr	r2, [r2, #116]	; 0x74
   1d04c:	str	r1, [r3, #96]	; 0x60
   1d04e:	str	r2, [r3, #100]	; 0x64
   1d050:	ldr.w	r2, [r4, #308]	; 0x134
   1d054:	ldr	r1, [r2, #120]	; 0x78
   1d056:	ldr	r2, [r2, #124]	; 0x7c
   1d058:	str	r1, [r3, #104]	; 0x68
   1d05a:	str	r2, [r3, #108]	; 0x6c
   1d05c:	ldr.w	r2, [r4, #308]	; 0x134
   1d060:	ldr.w	r1, [r2, #136]	; 0x88
   1d064:	ldr.w	r2, [r2, #140]	; 0x8c
   1d068:	str	r1, [r3, #112]	; 0x70
   1d06a:	str	r2, [r3, #116]	; 0x74
   1d06c:	ldr	r3, [pc, #612]	; (1d2d4 <write_all_supers@@Base+0x400>)
   1d06e:	ldr.w	r6, [r4, #308]	; 0x134
   1d072:	add	r3, pc
   1d074:	ldr	r5, [r7, #72]	; 0x48
   1d076:	vmov	s17, r3
   1d07a:	ldr	r3, [sp, #20]
   1d07c:	cmp	r5, r3
   1d07e:	bne.n	1d084 <write_all_supers@@Base+0x1b0>
   1d080:	movs	r0, #0
   1d082:	b.n	1d1ce <write_all_supers@@Base+0x2fa>
   1d084:	ldr	r3, [r5, #28]
   1d086:	cmp	r3, #0
   1d088:	beq.n	1d152 <write_all_supers@@Base+0x27e>
   1d08a:	movs	r2, #0
   1d08c:	strb.w	r2, [r6, #245]	; 0xf5
   1d090:	strb.w	r2, [r6, #246]	; 0xf6
   1d094:	strb.w	r2, [r6, #247]	; 0xf7
   1d098:	strb.w	r2, [r6, #248]	; 0xf8
   1d09c:	strb.w	r2, [r6, #249]	; 0xf9
   1d0a0:	strb.w	r2, [r6, #250]	; 0xfa
   1d0a4:	strb.w	r2, [r6, #251]	; 0xfb
   1d0a8:	strb.w	r2, [r6, #252]	; 0xfc
   1d0ac:	ldrd	r1, r2, [r5, #104]	; 0x68
   1d0b0:	str.w	r1, [r6, #237]	; 0xed
   1d0b4:	str.w	r2, [r6, #241]	; 0xf1
   1d0b8:	ldrd	r1, r2, [r5, #64]	; 0x40
   1d0bc:	str.w	r1, [r6, #201]	; 0xc9
   1d0c0:	str.w	r2, [r6, #205]	; 0xcd
   1d0c4:	ldrd	r1, r2, [r5, #72]	; 0x48
   1d0c8:	str.w	r1, [r6, #209]	; 0xd1
   1d0cc:	str.w	r2, [r6, #213]	; 0xd5
   1d0d0:	ldrd	r1, r2, [r5, #80]	; 0x50
   1d0d4:	str.w	r1, [r6, #217]	; 0xd9
   1d0d8:	add.w	r1, r5, #128	; 0x80
   1d0dc:	str.w	r2, [r6, #221]	; 0xdd
   1d0e0:	addw	r2, r6, #267	; 0x10b
   1d0e4:	ldr	r3, [r5, #88]	; 0x58
   1d0e6:	str.w	r3, [r6, #225]	; 0xe1
   1d0ea:	ldr	r3, [r5, #92]	; 0x5c
   1d0ec:	str.w	r3, [r6, #229]	; 0xe5
   1d0f0:	ldr	r3, [r5, #96]	; 0x60
   1d0f2:	str.w	r3, [r6, #233]	; 0xe9
   1d0f6:	add.w	r3, r5, #112	; 0x70
   1d0fa:	ldr.w	r0, [r3], #4
   1d0fe:	cmp	r3, r1
   1d100:	str.w	r0, [r2], #4
   1d104:	bne.n	1d0fa <write_all_supers@@Base+0x226>
   1d106:	ldr.w	r3, [r4, #352]	; 0x160
   1d10a:	addw	r1, r6, #283	; 0x11b
   1d10e:	add.w	r2, r3, #16
   1d112:	adds	r3, #32
   1d114:	ldr.w	r0, [r2], #4
   1d118:	cmp	r2, r3
   1d11a:	str.w	r0, [r1], #4
   1d11e:	bne.n	1d114 <write_all_supers@@Base+0x240>
   1d120:	ldr	r2, [r6, #60]	; 0x3c
   1d122:	ldr	r3, [r6, #56]	; 0x38
   1d124:	ldrh.w	fp, [r6, #196]	; 0xc4
   1d128:	orr.w	r3, r3, #1
   1d12c:	str	r2, [r6, #60]	; 0x3c
   1d12e:	str	r3, [r6, #56]	; 0x38
   1d130:	ldr	r0, [r5, #24]
   1d132:	blx	8370 <fsync@plt>
   1d136:	cmp	r0, #0
   1d138:	bge.n	1d156 <write_all_supers@@Base+0x282>
   1d13a:	ldr	r0, [pc, #412]	; (1d2d8 <write_all_supers@@Base+0x404>)
   1d13c:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d140:	add	r0, pc
   1d142:	bl	1747c <__btrfs_error@@Base>
   1d146:	blx	8740 <__errno_location@plt>
   1d14a:	ldr	r0, [r0, #0]
   1d14c:	negs	r0, r0
   1d14e:	cmp	r0, #0
   1d150:	blt.n	1d1ce <write_all_supers@@Base+0x2fa>
   1d152:	ldr	r5, [r5, #0]
   1d154:	b.n	1d07a <write_all_supers@@Base+0x1a6>
   1d156:	ldrd	r8, r9, [r4, #320]	; 0x140
   1d15a:	cmp.w	r9, #0
   1d15e:	it	eq
   1d160:	cmpeq.w	r8, #65536	; 0x10000
   1d164:	beq.n	1d1f6 <write_all_supers@@Base+0x322>
   1d166:	mov	r2, sl
   1d168:	add.w	r1, r6, #32
   1d16c:	mov.w	r3, #4064	; 0xfe0
   1d170:	mov	r0, fp
   1d172:	str.w	r8, [r6, #48]	; 0x30
   1d176:	mov	r7, sl
   1d178:	str.w	r9, [r6, #52]	; 0x34
   1d17c:	bl	1c046 <btrfs_csum_data@@Base>
   1d180:	add.w	ip, sp, #60	; 0x3c
   1d184:	mov	r2, r6
   1d186:	mov	r3, r7
   1d188:	adds	r2, #8
   1d18a:	ldmia	r3!, {r0, r1}
   1d18c:	cmp	r3, ip
   1d18e:	str.w	r0, [r2, #-8]
   1d192:	mov	r7, r3
   1d194:	str.w	r1, [r2, #-4]
   1d198:	bne.n	1d186 <write_all_supers@@Base+0x2b2>
   1d19a:	ldrd	r2, r3, [r4, #320]	; 0x140
   1d19e:	ldr.w	r1, [r4, #308]	; 0x134
   1d1a2:	strd	r2, r3, [sp]
   1d1a6:	mov.w	r2, #4096	; 0x1000
   1d1aa:	ldr	r0, [r5, #24]
   1d1ac:	blx	87e4 <pwrite64@plt>
   1d1b0:	cmp.w	r0, #4096	; 0x1000
   1d1b4:	beq.n	1d1e2 <write_all_supers@@Base+0x30e>
   1d1b6:	blx	8740 <__errno_location@plt>
   1d1ba:	movs	r3, #5
   1d1bc:	str	r3, [r0, #0]
   1d1be:	ldr	r0, [pc, #284]	; (1d2dc <write_all_supers@@Base+0x408>)
   1d1c0:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d1c4:	add	r0, pc
   1d1c6:	bl	1747c <__btrfs_error@@Base>
   1d1ca:	mvn.w	r0, #4
   1d1ce:	ldr	r2, [pc, #272]	; (1d2e0 <write_all_supers@@Base+0x40c>)
   1d1d0:	ldr	r3, [pc, #252]	; (1d2d0 <write_all_supers@@Base+0x3fc>)
   1d1d2:	add	r2, pc
   1d1d4:	ldr	r3, [r2, r3]
   1d1d6:	ldr	r2, [r3, #0]
   1d1d8:	ldr	r3, [sp, #60]	; 0x3c
   1d1da:	eors	r2, r3
   1d1dc:	beq.n	1d2c2 <write_all_supers@@Base+0x3ee>
   1d1de:	blx	84cc <__stack_chk_fail@plt>
   1d1e2:	ldr	r0, [r5, #24]
   1d1e4:	blx	8370 <fsync@plt>
   1d1e8:	cmp	r0, #0
   1d1ea:	bge.n	1d152 <write_all_supers@@Base+0x27e>
   1d1ec:	ldr	r0, [pc, #244]	; (1d2e4 <write_all_supers@@Base+0x410>)
   1d1ee:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d1f2:	add	r0, pc
   1d1f4:	b.n	1d142 <write_all_supers@@Base+0x26e>
   1d1f6:	add.w	r3, r6, #32
   1d1fa:	movs	r7, #0
   1d1fc:	vmov	s16, r3
   1d200:	b.n	1d23e <write_all_supers@@Base+0x36a>
   1d202:	cbnz	r7, 1d218 <write_all_supers@@Base+0x344>
   1d204:	ldr	r0, [r5, #24]
   1d206:	blx	8370 <fsync@plt>
   1d20a:	cmp	r0, #0
   1d20c:	bge.n	1d218 <write_all_supers@@Base+0x344>
   1d20e:	vmov	r0, s17
   1d212:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d216:	b.n	1d142 <write_all_supers@@Base+0x26e>
   1d218:	adds	r7, #1
   1d21a:	cmp	r7, #3
   1d21c:	beq.n	1d152 <write_all_supers@@Base+0x27e>
   1d21e:	movs	r3, #12
   1d220:	mov.w	r2, #16384	; 0x4000
   1d224:	muls	r3, r7
   1d226:	sub.w	r0, r3, #32
   1d22a:	rsb	r1, r3, #32
   1d22e:	lsl.w	r9, r2, r0
   1d232:	lsr.w	r1, r2, r1
   1d236:	orr.w	r9, r9, r1
   1d23a:	lsl.w	r8, r2, r3
   1d23e:	adds.w	r3, r8, #4096	; 0x1000
   1d242:	str	r3, [sp, #8]
   1d244:	adc.w	r3, r9, #0
   1d248:	str	r3, [sp, #12]
   1d24a:	ldrd	r0, r1, [sp, #8]
   1d24e:	ldrd	r2, r3, [r5, #72]	; 0x48
   1d252:	cmp	r3, r1
   1d254:	it	eq
   1d256:	cmpeq	r2, r0
   1d258:	bcc.w	1d152 <write_all_supers@@Base+0x27e>
   1d25c:	mov	r2, sl
   1d25e:	vmov	r1, s16
   1d262:	mov.w	r3, #4064	; 0xfe0
   1d266:	mov	r0, fp
   1d268:	str.w	r8, [r6, #48]	; 0x30
   1d26c:	str.w	r9, [r6, #52]	; 0x34
   1d270:	bl	1c046 <btrfs_csum_data@@Base>
   1d274:	add.w	lr, sp, #60	; 0x3c
   1d278:	mov	ip, sl
   1d27a:	mov	r2, r6
   1d27c:	mov	r3, ip
   1d27e:	adds	r2, #8
   1d280:	ldmia	r3!, {r0, r1}
   1d282:	cmp	r3, lr
   1d284:	str.w	r0, [r2, #-8]
   1d288:	mov	ip, r3
   1d28a:	str.w	r1, [r2, #-4]
   1d28e:	bne.n	1d27c <write_all_supers@@Base+0x3a8>
   1d290:	strd	r8, r9, [sp]
   1d294:	mov.w	r2, #4096	; 0x1000
   1d298:	ldr.w	r1, [r4, #308]	; 0x134
   1d29c:	ldr	r0, [r5, #24]
   1d29e:	blx	87e4 <pwrite64@plt>
   1d2a2:	cmp.w	r0, #4096	; 0x1000
   1d2a6:	beq.n	1d202 <write_all_supers@@Base+0x32e>
   1d2a8:	blx	8740 <__errno_location@plt>
   1d2ac:	movs	r3, #5
   1d2ae:	mov	r7, r0
   1d2b0:	str	r3, [r0, #0]
   1d2b2:	ldr	r0, [pc, #52]	; (1d2e8 <write_all_supers@@Base+0x414>)
   1d2b4:	ldrd	r2, r3, [r5, #64]	; 0x40
   1d2b8:	add	r0, pc
   1d2ba:	bl	1747c <__btrfs_error@@Base>
   1d2be:	ldr	r0, [r7, #0]
   1d2c0:	b.n	1d14c <write_all_supers@@Base+0x278>
   1d2c2:	add	sp, #68	; 0x44
   1d2c4:	vpop	{d8}
   1d2c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d2cc:	ldrb	r6, [r4, #26]
   1d2ce:	movs	r4, r0
   1d2d0:	lsls	r4, r4, #8
   1d2d2:	movs	r0, r0
   1d2d4:	lsls	r6, r6, #19
   1d2d6:	movs	r2, r0
   1d2d8:	lsls	r0, r5, #16
   1d2da:	movs	r2, r0
   1d2dc:	lsls	r0, r4, #15
   1d2de:	movs	r2, r0
   1d2e0:	ldrb	r6, [r6, #14]
   1d2e2:	movs	r4, r0
   1d2e4:	lsls	r6, r6, #13
   1d2e6:	movs	r2, r0
   1d2e8:	lsls	r4, r5, #11
   1d2ea:	movs	r2, r0

0001d2ec <write_ctree_super@@Base>:
   1d2ec:	push	{r4, r5, r6, lr}
   1d2ee:	mov	r3, r0
   1d2f0:	ldr	r0, [r0, #0]
   1d2f2:	ldr	r5, [pc, #140]	; (1d380 <write_ctree_super@@Base+0x94>)
   1d2f4:	ldrb.w	r2, [r0, #364]	; 0x16c
   1d2f8:	add	r5, pc
   1d2fa:	lsls	r2, r2, #30
   1d2fc:	bmi.n	1d37a <write_ctree_super@@Base+0x8e>
   1d2fe:	ldrd	r1, r2, [r0, #28]
   1d302:	ldr.w	r4, [r0, #308]	; 0x134
   1d306:	ldrd	r6, r3, [r3, #8]
   1d30a:	str	r6, [r4, #72]	; 0x48
   1d30c:	str	r3, [r4, #76]	; 0x4c
   1d30e:	ldr	r4, [r1, #0]
   1d310:	ldr.w	r3, [r0, #308]	; 0x134
   1d314:	ldrd	r6, r4, [r4, #40]	; 0x28
   1d318:	str	r6, [r3, #80]	; 0x50
   1d31a:	str	r4, [r3, #84]	; 0x54
   1d31c:	ldr	r1, [r1, #0]
   1d31e:	ldr.w	r3, [r0, #308]	; 0x134
   1d322:	ldrb.w	r1, [r1, #196]	; 0xc4
   1d326:	strb.w	r1, [r3, #198]	; 0xc6
   1d32a:	ldr	r1, [r2, #0]
   1d32c:	ldr.w	r3, [r0, #308]	; 0x134
   1d330:	ldrd	r4, r1, [r1, #40]	; 0x28
   1d334:	str	r4, [r3, #88]	; 0x58
   1d336:	str	r1, [r3, #92]	; 0x5c
   1d338:	ldr	r1, [r2, #0]
   1d33a:	ldr.w	r3, [r0, #308]	; 0x134
   1d33e:	ldrb.w	r1, [r1, #196]	; 0xc4
   1d342:	strb.w	r1, [r3, #199]	; 0xc7
   1d346:	ldr	r2, [r2, #0]
   1d348:	ldr.w	r3, [r0, #308]	; 0x134
   1d34c:	ldr.w	r1, [r2, #176]	; 0xb0
   1d350:	ldr.w	r2, [r2, #180]	; 0xb4
   1d354:	str.w	r1, [r3, #164]	; 0xa4
   1d358:	str.w	r2, [r3, #168]	; 0xa8
   1d35c:	bl	1ced4 <write_all_supers@@Base>
   1d360:	mov	r4, r0
   1d362:	cbz	r0, 1d376 <write_ctree_super@@Base+0x8a>
   1d364:	ldr	r3, [pc, #28]	; (1d384 <write_ctree_super@@Base+0x98>)
   1d366:	movs	r1, #1
   1d368:	ldr	r2, [pc, #28]	; (1d388 <write_ctree_super@@Base+0x9c>)
   1d36a:	ldr	r0, [r5, r3]
   1d36c:	add	r2, pc
   1d36e:	mov	r3, r4
   1d370:	ldr	r0, [r0, #0]
   1d372:	blx	881c <__fprintf_chk@plt+0x4>
   1d376:	mov	r0, r4
   1d378:	pop	{r4, r5, r6, pc}
   1d37a:	movs	r4, #0
   1d37c:	b.n	1d376 <write_ctree_super@@Base+0x8a>
   1d37e:	nop
   1d380:	ldrb	r0, [r2, #10]
   1d382:	movs	r4, r0
   1d384:	lsls	r4, r6, #8
   1d386:	movs	r0, r0
   1d388:	lsls	r4, r6, #9
   1d38a:	movs	r2, r0

0001d38c <close_ctree_fs_info@@Base>:
   1d38c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   1d390:	mov	r5, r0
   1d392:	ldrd	r2, r3, [r5, #232]	; 0xe8
   1d396:	ldr	r6, [r0, #28]
   1d398:	ldrd	r0, r1, [r0, #240]	; 0xf0
   1d39c:	ldr	r7, [pc, #332]	; (1d4ec <close_ctree_fs_info@@Base+0x160>)
   1d39e:	cmp	r1, r3
   1d3a0:	it	eq
   1d3a2:	cmpeq	r0, r2
   1d3a4:	add	r7, pc
   1d3a6:	bne.n	1d414 <close_ctree_fs_info@@Base+0x88>
   1d3a8:	ldrb.w	r3, [r5, #365]	; 0x16d
   1d3ac:	lsls	r3, r3, #29
   1d3ae:	bpl.w	1d4e8 <close_ctree_fs_info@@Base+0x15c>
   1d3b2:	ldr.w	r3, [r5, #308]	; 0x134
   1d3b6:	movs	r2, #95	; 0x5f
   1d3b8:	movs	r1, #66	; 0x42
   1d3ba:	movs	r4, #0
   1d3bc:	mov	r0, r5
   1d3be:	strb.w	r2, [r3, #64]	; 0x40
   1d3c2:	strb.w	r1, [r3, #65]	; 0x41
   1d3c6:	movs	r1, #72	; 0x48
   1d3c8:	strb.w	r2, [r3, #70]	; 0x46
   1d3cc:	movs	r2, #77	; 0x4d
   1d3ce:	strb.w	r1, [r3, #66]	; 0x42
   1d3d2:	movs	r1, #82	; 0x52
   1d3d4:	strb.w	r2, [r3, #71]	; 0x47
   1d3d8:	strb.w	r1, [r3, #67]	; 0x43
   1d3dc:	movs	r1, #102	; 0x66
   1d3de:	strb.w	r1, [r3, #68]	; 0x44
   1d3e2:	movs	r1, #83	; 0x53
   1d3e4:	strb.w	r1, [r3, #69]	; 0x45
   1d3e8:	ldr.w	r3, [r6, #464]	; 0x1d0
   1d3ec:	ldrb.w	r2, [r3, #365]	; 0x16d
   1d3f0:	bfi	r2, r4, #2, #1
   1d3f4:	strb.w	r2, [r3, #365]	; 0x16d
   1d3f8:	bl	1ced4 <write_all_supers@@Base>
   1d3fc:	cmp	r0, #0
   1d3fe:	beq.n	1d4e8 <close_ctree_fs_info@@Base+0x15c>
   1d400:	ldr	r3, [pc, #236]	; (1d4f0 <close_ctree_fs_info@@Base+0x164>)
   1d402:	movs	r1, #1
   1d404:	ldr	r2, [pc, #236]	; (1d4f4 <close_ctree_fs_info@@Base+0x168>)
   1d406:	ldr	r6, [r7, r3]
   1d408:	add	r2, pc
   1d40a:	mov	r3, r0
   1d40c:	ldr	r0, [r6, #0]
   1d40e:	blx	881c <__fprintf_chk@plt+0x4>
   1d412:	b.n	1d4ae <close_ctree_fs_info@@Base+0x122>
   1d414:	ldr.w	r9, [pc, #224]	; 1d4f8 <close_ctree_fs_info@@Base+0x16c>
   1d418:	clz	r3, r6
   1d41c:	ldr	r0, [pc, #220]	; (1d4fc <close_ctree_fs_info@@Base+0x170>)
   1d41e:	movw	r2, #1870	; 0x74e
   1d422:	add	r9, pc
   1d424:	lsrs	r3, r3, #5
   1d426:	add.w	r9, r9, #33	; 0x21
   1d42a:	add	r0, pc
   1d42c:	mov	r1, r9
   1d42e:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d432:	movs	r1, #1
   1d434:	mov	r0, r6
   1d436:	bl	2af7c <btrfs_start_transaction@@Base>
   1d43a:	cmn.w	r0, #4096	; 0x1000
   1d43e:	mov	r4, r0
   1d440:	bhi.n	1d4ae <close_ctree_fs_info@@Base+0x122>
   1d442:	mov	r1, r6
   1d444:	ldr	r4, [pc, #184]	; (1d500 <close_ctree_fs_info@@Base+0x174>)
   1d446:	bl	2b1fc <btrfs_commit_transaction@@Base>
   1d44a:	movs	r1, #1
   1d44c:	mov	r0, r6
   1d44e:	add	r4, pc
   1d450:	bl	2af7c <btrfs_start_transaction@@Base>
   1d454:	movw	r2, #1878	; 0x756
   1d458:	mov	r1, r9
   1d45a:	cmn.w	r0, #4096	; 0x1000
   1d45e:	mov	r8, r0
   1d460:	ldr	r0, [pc, #160]	; (1d504 <close_ctree_fs_info@@Base+0x178>)
   1d462:	ite	ls
   1d464:	movls	r3, #0
   1d466:	movhi	r3, #1
   1d468:	add	r0, pc
   1d46a:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d46e:	mov	r1, r5
   1d470:	mov	r0, r8
   1d472:	bl	2b008 <commit_tree_roots@@Base>
   1d476:	mov.w	r2, #1880	; 0x758
   1d47a:	mov	r1, r9
   1d47c:	mov	r3, r0
   1d47e:	mov	r0, r4
   1d480:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d484:	mov	r1, r6
   1d486:	mov	r0, r8
   1d488:	bl	2b120 <__commit_transaction@@Base>
   1d48c:	movw	r2, #1882	; 0x75a
   1d490:	mov	r1, r9
   1d492:	mov	r3, r0
   1d494:	mov	r0, r4
   1d496:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1d49a:	mov	r0, r8
   1d49c:	bl	1d2ec <write_ctree_super@@Base>
   1d4a0:	mov	r4, r0
   1d4a2:	mov	r0, r8
   1d4a4:	blx	83f0 <free@plt+0x4>
   1d4a8:	cmp	r4, #0
   1d4aa:	beq.w	1d3a8 <close_ctree_fs_info@@Base+0x1c>
   1d4ae:	mov	r0, r5
   1d4b0:	bl	20dfe <btrfs_free_block_groups@@Base>
   1d4b4:	ldr	r1, [pc, #80]	; (1d508 <close_ctree_fs_info@@Base+0x17c>)
   1d4b6:	add.w	r0, r5, #56	; 0x38
   1d4ba:	add	r1, pc
   1d4bc:	bl	178fe <rb_free_nodes@@Base>
   1d4c0:	mov	r0, r5
   1d4c2:	bl	1c854 <btrfs_release_all_roots@@Base>
   1d4c6:	ldr.w	r0, [r5, #352]	; 0x160
   1d4ca:	bl	27f2c <btrfs_close_devices@@Base>
   1d4ce:	mov	r6, r0
   1d4d0:	mov	r0, r5
   1d4d2:	bl	1c8b8 <btrfs_cleanup_all_caches@@Base>
   1d4d6:	mov	r0, r5
   1d4d8:	bl	1c610 <btrfs_free_fs_info@@Base>
   1d4dc:	cmp	r4, #0
   1d4de:	ite	ne
   1d4e0:	movne	r0, r4
   1d4e2:	moveq	r0, r6
   1d4e4:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   1d4e8:	movs	r4, #0
   1d4ea:	b.n	1d4ae <close_ctree_fs_info@@Base+0x122>
   1d4ec:	ldrb	r4, [r4, #7]
   1d4ee:	movs	r4, r0
   1d4f0:	lsls	r4, r6, #8
   1d4f2:	movs	r0, r0
   1d4f4:	lsls	r0, r3, #7
   1d4f6:	movs	r2, r0
   1d4f8:	lsls	r5, r6, #23
   1d4fa:	movs	r2, r0
   1d4fc:	lsls	r6, r3, #7
   1d4fe:	movs	r2, r0
   1d500:	bcs.n	1d4ce <close_ctree_fs_info@@Base+0x142>
   1d502:	movs	r1, r0
   1d504:	stmia	r6!, {r1, r2, r4, r6}
   1d506:	movs	r1, r0
   1d508:	bl	16950a <__bss_end__@@Base+0x10327a>

0001d50c <clean_tree_block@@Base>:
   1d50c:	b.w	172ce <clear_extent_buffer_dirty@@Base>

0001d510 <btrfs_mark_buffer_dirty@@Base>:
   1d510:	b.w	17294 <set_extent_buffer_dirty@@Base>

0001d514 <btrfs_buffer_uptodate@@Base>:
   1d514:	push	{r0, r1, r2, lr}
   1d516:	mov	r1, r0
   1d518:	bl	1be10 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d51c:	cbz	r0, 1d52e <btrfs_buffer_uptodate@@Base+0x1a>
   1d51e:	movs	r0, #1
   1d520:	str	r0, [sp, #0]
   1d522:	mov	r0, r1
   1d524:	bl	1be24 <btrfs_fs_roots_compare_roots@@Base+0x16e>
   1d528:	clz	r0, r0
   1d52c:	lsrs	r0, r0, #5
   1d52e:	add	sp, #12
   1d530:	ldr.w	pc, [sp], #4

0001d534 <readahead_tree_block@@Base>:
   1d534:	push	{r4, r5, r6, r7, lr}
   1d536:	sub	sp, #44	; 0x2c
   1d538:	ldr	r5, [pc, #148]	; (1d5d0 <readahead_tree_block@@Base+0x9c>)
   1d53a:	mov	r4, r0
   1d53c:	ldr	r1, [pc, #148]	; (1d5d4 <readahead_tree_block@@Base+0xa0>)
   1d53e:	mov	r6, r2
   1d540:	add	r5, pc
   1d542:	mov	r7, r3
   1d544:	ldr	r1, [r5, r1]
   1d546:	ldr	r1, [r1, #0]
   1d548:	str	r1, [sp, #36]	; 0x24
   1d54a:	mov.w	r1, #0
   1d54e:	movs	r1, #0
   1d550:	str	r1, [sp, #20]
   1d552:	ldr.w	r1, [r0, #384]	; 0x180
   1d556:	str	r1, [sp, #0]
   1d558:	bl	1c228 <btrfs_find_tree_block@@Base>
   1d55c:	mov	r5, r0
   1d55e:	cbnz	r0, 1d59e <readahead_tree_block@@Base+0x6a>
   1d560:	add	r3, sp, #20
   1d562:	movs	r1, #0
   1d564:	str	r3, [sp, #4]
   1d566:	mov	r2, r6
   1d568:	add	r3, sp, #24
   1d56a:	mov	r0, r4
   1d56c:	str	r3, [sp, #0]
   1d56e:	mov	r3, r7
   1d570:	strd	r1, r1, [sp, #8]
   1d574:	bl	29e28 <btrfs_map_block@@Base>
   1d578:	cbnz	r0, 1d5aa <readahead_tree_block@@Base+0x76>
   1d57a:	ldr	r0, [sp, #20]
   1d57c:	ldr	r1, [r0, #8]
   1d57e:	ldrd	r3, r2, [r1, #16]
   1d582:	adds	r3, #1
   1d584:	adc.w	r2, r2, #0
   1d588:	strd	r3, r2, [r1, #16]
   1d58c:	ldr.w	r3, [r4, #384]	; 0x180
   1d590:	str	r3, [sp, #0]
   1d592:	ldrd	r2, r3, [r0, #16]
   1d596:	ldr	r0, [r1, #24]
   1d598:	blx	85a8 <readahead@plt>
   1d59c:	b.n	1d5aa <readahead_tree_block@@Base+0x76>
   1d59e:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d5a2:	bl	1d514 <btrfs_buffer_uptodate@@Base>
   1d5a6:	cmp	r0, #0
   1d5a8:	beq.n	1d560 <readahead_tree_block@@Base+0x2c>
   1d5aa:	mov	r0, r5
   1d5ac:	bl	16c20 <free_extent_buffer@@Base>
   1d5b0:	ldr	r0, [sp, #20]
   1d5b2:	blx	83f0 <free@plt+0x4>
   1d5b6:	ldr	r2, [pc, #32]	; (1d5d8 <readahead_tree_block@@Base+0xa4>)
   1d5b8:	ldr	r3, [pc, #24]	; (1d5d4 <readahead_tree_block@@Base+0xa0>)
   1d5ba:	add	r2, pc
   1d5bc:	ldr	r3, [r2, r3]
   1d5be:	ldr	r2, [r3, #0]
   1d5c0:	ldr	r3, [sp, #36]	; 0x24
   1d5c2:	eors	r2, r3
   1d5c4:	beq.n	1d5ca <readahead_tree_block@@Base+0x96>
   1d5c6:	blx	84cc <__stack_chk_fail@plt>
   1d5ca:	add	sp, #44	; 0x2c
   1d5cc:	pop	{r4, r5, r6, r7, pc}
   1d5ce:	nop
   1d5d0:	ldrb	r0, [r1, #1]
   1d5d2:	movs	r4, r0
   1d5d4:	lsls	r4, r4, #8
   1d5d6:	movs	r0, r0
   1d5d8:	strb	r6, [r1, #31]
   1d5da:	movs	r4, r0

0001d5dc <write_tree_block@@Base>:
   1d5dc:	push	{r0, r1, r2, r4, r5, lr}
   1d5de:	mov	r4, r1
   1d5e0:	mov	r5, r0
   1d5e2:	mov	r1, r2
   1d5e4:	mov	r0, r4
   1d5e6:	str	r2, [sp, #4]
   1d5e8:	bl	1bd44 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d5ec:	ldr	r1, [sp, #4]
   1d5ee:	cbz	r0, 1d616 <write_tree_block@@Base+0x3a>
   1d5f0:	mov	r0, r4
   1d5f2:	bl	1bd44 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d5f6:	ldr	r1, [sp, #4]
   1d5f8:	mov	r2, r0
   1d5fa:	add.w	r0, r4, #352	; 0x160
   1d5fe:	bl	1bea0 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   1d602:	ldr	r1, [pc, #100]	; (1d668 <write_tree_block@@Base+0x8c>)
   1d604:	ldr	r0, [pc, #100]	; (1d66c <write_tree_block@@Base+0x90>)
   1d606:	movs	r3, #1
   1d608:	add	r1, pc
   1d60a:	mov.w	r2, #516	; 0x204
   1d60e:	adds	r1, #53	; 0x35
   1d610:	add	r0, pc
   1d612:	bl	1c000 <btrfs_fs_roots_compare_roots@@Base+0x34a>
   1d616:	cbz	r5, 1d63a <write_tree_block@@Base+0x5e>
   1d618:	mov	r0, r1
   1d61a:	ldrd	r2, r3, [r5, #8]
   1d61e:	str	r1, [sp, #4]
   1d620:	bl	1d514 <btrfs_buffer_uptodate@@Base>
   1d624:	ldr	r1, [sp, #4]
   1d626:	cbnz	r0, 1d63a <write_tree_block@@Base+0x5e>
   1d628:	ldr	r1, [pc, #68]	; (1d670 <write_tree_block@@Base+0x94>)
   1d62a:	movs	r3, #1
   1d62c:	ldr	r0, [pc, #68]	; (1d674 <write_tree_block@@Base+0x98>)
   1d62e:	mov.w	r2, #520	; 0x208
   1d632:	add	r1, pc
   1d634:	adds	r1, #53	; 0x35
   1d636:	add	r0, pc
   1d638:	b.n	1d612 <write_tree_block@@Base+0x36>
   1d63a:	ldr.w	r2, [r1, #156]	; 0x9c
   1d63e:	mov	r0, r4
   1d640:	ldr.w	r3, [r1, #152]	; 0x98
   1d644:	str	r1, [sp, #4]
   1d646:	orr.w	r3, r3, #1
   1d64a:	str.w	r2, [r1, #156]	; 0x9c
   1d64e:	str.w	r3, [r1, #152]	; 0x98
   1d652:	movs	r2, #0
   1d654:	bl	1c1ec <csum_tree_block@@Base>
   1d658:	ldr	r1, [sp, #4]
   1d65a:	mov	r0, r4
   1d65c:	add	sp, #12
   1d65e:	ldmia.w	sp!, {r4, r5, lr}
   1d662:	b.w	1c478 <write_and_map_eb@@Base>
   1d666:	nop
   1d668:	lsls	r7, r1, #16
   1d66a:	movs	r2, r0
   1d66c:	lsls	r3, r3, #31
   1d66e:	movs	r2, r0
   1d670:	lsls	r5, r4, #15
   1d672:	movs	r2, r0
   1d674:	lsls	r5, r6, #30
   1d676:	movs	r2, r0

0001d678 <btrfs_set_buffer_uptodate@@Base>:
   1d678:	ldr	r3, [r0, #84]	; 0x54
   1d67a:	orr.w	r3, r3, #4
   1d67e:	str	r3, [r0, #84]	; 0x54
   1d680:	movs	r0, #0
   1d682:	bx	lr

0001d684 <read_tree_block@@Base>:
   1d684:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d688:	mov.w	r9, #0
   1d68c:	ldr.w	r1, [r0, #388]	; 0x184
   1d690:	cmp	r3, r9
   1d692:	ldr.w	fp, [pc, #416]	; 1d834 <read_tree_block@@Base+0x1b0>
   1d696:	sub	sp, #28
   1d698:	it	eq
   1d69a:	cmpeq	r2, r1
   1d69c:	mov	r5, r0
   1d69e:	add	fp, pc
   1d6a0:	mov	r6, r2
   1d6a2:	mov	r7, r3
   1d6a4:	bcc.n	1d6c2 <read_tree_block@@Base+0x3e>
   1d6a6:	adds.w	r4, r1, #4294967295	; 0xffffffff
   1d6aa:	adc.w	ip, r9, #4294967295	; 0xffffffff
   1d6ae:	ands	r4, r2
   1d6b0:	str	r4, [sp, #8]
   1d6b2:	and.w	r4, ip, r3
   1d6b6:	str	r4, [sp, #12]
   1d6b8:	ldrd	r8, r9, [sp, #8]
   1d6bc:	orrs.w	r4, r8, r9
   1d6c0:	beq.n	1d6d6 <read_tree_block@@Base+0x52>
   1d6c2:	ldr	r0, [pc, #372]	; (1d838 <read_tree_block@@Base+0x1b4>)
   1d6c4:	mov	r2, r6
   1d6c6:	mov	r3, r7
   1d6c8:	str	r1, [sp, #0]
   1d6ca:	add	r0, pc
   1d6cc:	bl	1747c <__btrfs_error@@Base>
   1d6d0:	mvn.w	r4, #4
   1d6d4:	b.n	1d782 <read_tree_block@@Base+0xfe>
   1d6d6:	bl	1c22e <btrfs_find_create_tree_block@@Base>
   1d6da:	mov	r4, r0
   1d6dc:	cmp	r0, #0
   1d6de:	beq.w	1d824 <read_tree_block@@Base+0x1a0>
   1d6e2:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d6e6:	bl	1d514 <btrfs_buffer_uptodate@@Base>
   1d6ea:	mov	r6, r0
   1d6ec:	cmp	r0, #0
   1d6ee:	bne.n	1d782 <read_tree_block@@Base+0xfe>
   1d6f0:	ldr	r3, [r4, #76]	; 0x4c
   1d6f2:	add.w	sl, r4, #68	; 0x44
   1d6f6:	mov	r8, r6
   1d6f8:	movs	r7, #1
   1d6fa:	strd	r3, r0, [sp]
   1d6fe:	mov	r0, r5
   1d700:	ldrd	r2, r3, [r4, #40]	; 0x28
   1d704:	bl	295b4 <btrfs_num_copies@@Base>
   1d708:	str	r6, [sp, #20]
   1d70a:	mov	r9, r0
   1d70c:	mov	r2, r7
   1d70e:	mov	r1, r4
   1d710:	mov	r0, r5
   1d712:	bl	1c240 <read_whole_eb@@Base>
   1d716:	cmp	r0, #0
   1d718:	bne.n	1d7a4 <read_tree_block@@Base+0x120>
   1d71a:	movs	r2, #1
   1d71c:	mov	r1, r4
   1d71e:	mov	r0, r5
   1d720:	bl	1c1ec <csum_tree_block@@Base>
   1d724:	cmp	r0, #0
   1d726:	bne.n	1d7a4 <read_tree_block@@Base+0x120>
   1d728:	mov	r1, r4
   1d72a:	mov	r0, r5
   1d72c:	bl	1bd44 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d730:	cbnz	r0, 1d7a4 <read_tree_block@@Base+0x120>
   1d732:	ldrd	r2, r3, [sp, #64]	; 0x40
   1d736:	mov	r0, r4
   1d738:	str	r6, [sp, #0]
   1d73a:	bl	1be24 <btrfs_fs_roots_compare_roots@@Base+0x16e>
   1d73e:	cbnz	r0, 1d7a4 <read_tree_block@@Base+0x120>
   1d740:	ldr	r3, [r4, #84]	; 0x54
   1d742:	lsls	r1, r3, #21
   1d744:	bpl.n	1d766 <read_tree_block@@Base+0xe2>
   1d746:	ldr	r3, [r4, #68]	; 0x44
   1d748:	cmp	sl, r3
   1d74a:	bne.n	1d766 <read_tree_block@@Base+0xe2>
   1d74c:	ldr.w	r3, [r5, #348]	; 0x15c
   1d750:	add.w	r2, r5, #344	; 0x158
   1d754:	str.w	sl, [r5, #348]	; 0x15c
   1d758:	strd	r2, r3, [r4, #68]	; 0x44
   1d75c:	str.w	sl, [r3]
   1d760:	ldr	r3, [r4, #80]	; 0x50
   1d762:	adds	r3, #1
   1d764:	str	r3, [r4, #80]	; 0x50
   1d766:	ldrb.w	r1, [r4, #196]	; 0xc4
   1d76a:	mov	r2, r4
   1d76c:	cbz	r1, 1d794 <read_tree_block@@Base+0x110>
   1d76e:	movs	r1, #0
   1d770:	mov	r0, r5
   1d772:	bl	18a20 <btrfs_check_node@@Base>
   1d776:	cbz	r0, 1d77c <read_tree_block@@Base+0xf8>
   1d778:	cmp	r7, r8
   1d77a:	bne.n	1d79c <read_tree_block@@Base+0x118>
   1d77c:	mov	r0, r4
   1d77e:	bl	1d678 <btrfs_set_buffer_uptodate@@Base>
   1d782:	mov	r0, r4
   1d784:	add	sp, #28
   1d786:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d78a:	movs	r6, #0
   1d78c:	b.n	1d70c <read_tree_block@@Base+0x88>
   1d78e:	mov	r7, r8
   1d790:	movs	r6, #1
   1d792:	b.n	1d70c <read_tree_block@@Base+0x88>
   1d794:	mov	r0, r5
   1d796:	bl	19070 <btrfs_check_leaf@@Base>
   1d79a:	b.n	1d776 <read_tree_block@@Base+0xf2>
   1d79c:	cmp.w	r8, #0
   1d7a0:	bgt.n	1d82a <read_tree_block@@Base+0x1a6>
   1d7a2:	mov	r8, r7
   1d7a4:	cbz	r6, 1d7f0 <read_tree_block@@Base+0x16c>
   1d7a6:	cmp.w	r8, #0
   1d7aa:	bgt.n	1d82e <read_tree_block@@Base+0x1aa>
   1d7ac:	mov	r1, r4
   1d7ae:	mov	r0, r5
   1d7b0:	bl	1bd44 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d7b4:	ldrb.w	r3, [r5, #364]	; 0x16c
   1d7b8:	cbz	r0, 1d7da <read_tree_block@@Base+0x156>
   1d7ba:	lsls	r2, r3, #26
   1d7bc:	bmi.n	1d7d2 <read_tree_block@@Base+0x14e>
   1d7be:	mov	r1, r4
   1d7c0:	mov	r0, r5
   1d7c2:	bl	1bd44 <btrfs_fs_roots_compare_roots@@Base+0x8e>
   1d7c6:	mov	r1, r4
   1d7c8:	mov	r2, r0
   1d7ca:	add.w	r0, r5, #352	; 0x160
   1d7ce:	bl	1bea0 <btrfs_fs_roots_compare_roots@@Base+0x1ea>
   1d7d2:	mov	r0, r4
   1d7d4:	bl	16c24 <free_extent_buffer_nocache@@Base>
   1d7d8:	b.n	1d6d0 <read_tree_block@@Base+0x4c>
   1d7da:	lsls	r3, r3, #26
   1d7dc:	bmi.n	1d7d2 <read_tree_block@@Base+0x14e>
   1d7de:	ldr	r3, [pc, #92]	; (1d83c <read_tree_block@@Base+0x1b8>)
   1d7e0:	ldr	r0, [pc, #92]	; (1d840 <read_tree_block@@Base+0x1bc>)
   1d7e2:	ldr.w	r3, [fp, r3]
   1d7e6:	add	r0, pc
   1d7e8:	ldr	r1, [r3, #0]
   1d7ea:	blx	8930 <fputs@plt+0x4>
   1d7ee:	b.n	1d7d2 <read_tree_block@@Base+0x14e>
   1d7f0:	cmp.w	r9, #1
   1d7f4:	beq.n	1d790 <read_tree_block@@Base+0x10c>
   1d7f6:	ldr.w	r3, [r4, #180]	; 0xb4
   1d7fa:	ldrd	r0, r1, [sp, #8]
   1d7fe:	ldr.w	r2, [r4, #176]	; 0xb0
   1d802:	cmp	r1, r3
   1d804:	it	eq
   1d806:	cmpeq	r0, r2
   1d808:	it	cc
   1d80a:	strcc	r7, [sp, #20]
   1d80c:	add.w	r7, r7, #1
   1d810:	it	cc
   1d812:	strdcc	r2, r3, [sp, #8]
   1d816:	cmp	r9, r7
   1d818:	bge.n	1d78a <read_tree_block@@Base+0x106>
   1d81a:	cmp.w	r8, #0
   1d81e:	bgt.n	1d78e <read_tree_block@@Base+0x10a>
   1d820:	ldr	r7, [sp, #20]
   1d822:	b.n	1d790 <read_tree_block@@Base+0x10c>
   1d824:	mvn.w	r4, #11
   1d828:	b.n	1d782 <read_tree_block@@Base+0xfe>
   1d82a:	cmp	r6, #0
   1d82c:	beq.n	1d7f0 <read_tree_block@@Base+0x16c>
   1d82e:	mov	r7, r8
   1d830:	b.n	1d70c <read_tree_block@@Base+0x88>
   1d832:	nop
   1d834:	strb	r2, [r5, #27]
   1d836:	movs	r4, r0
   1d838:	vhadd.u8	d16, d4, d1
   1d83c:	lsls	r4, r6, #8
   1d83e:	movs	r0, r0
   1d840:	cdp2	0, 5, cr0, cr15, cr1, {0}
   1d844:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   1d848:	mov	r5, r0
   1d84a:	ldr	r4, [sp, #32]
   1d84c:	mov	r7, r3
   1d84e:	mov	r8, r2
   1d850:	mov	r6, r1
   1d852:	mov	r0, r4
   1d854:	bl	1c590 <btrfs_setup_root@@Base>
   1d858:	addw	r3, r4, #447	; 0x1bf
   1d85c:	mov	r0, r5
   1d85e:	str	r3, [sp, #4]
   1d860:	mov	r2, r8
   1d862:	add.w	r3, r4, #8
   1d866:	str	r3, [sp, #0]
   1d868:	mov	r3, r7
   1d86a:	bl	27948 <btrfs_find_last_root@@Base>
   1d86e:	mov	r5, r0
   1d870:	cbnz	r0, 1d89a <read_tree_block@@Base+0x216>
   1d872:	ldr.w	r2, [r4, #168]	; 0xa8
   1d876:	mov	r0, r6
   1d878:	ldr.w	r3, [r4, #172]	; 0xac
   1d87c:	strd	r2, r3, [sp]
   1d880:	ldr.w	r2, [r4, #184]	; 0xb8
   1d884:	ldr.w	r3, [r4, #188]	; 0xbc
   1d888:	bl	1d684 <read_tree_block@@Base>
   1d88c:	str	r0, [r4, #0]
   1d88e:	bl	1be10 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d892:	cmp	r0, #0
   1d894:	it	eq
   1d896:	mvneq.w	r5, #4
   1d89a:	mov	r0, r5
   1d89c:	add	sp, #8
   1d89e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1d8a2:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   1d8a4:	mov	r4, r0
   1d8a6:	str	r2, [sp, #0]
   1d8a8:	mov	r6, r1
   1d8aa:	mov	r5, r2
   1d8ac:	mov	r1, r0
   1d8ae:	ldrd	r2, r3, [sp, #32]
   1d8b2:	ldr	r0, [r0, #28]
   1d8b4:	ldr	r7, [sp, #40]	; 0x28
   1d8b6:	bl	1d844 <read_tree_block@@Base+0x1c0>
   1d8ba:	cbz	r0, 1d8ce <read_tree_block@@Base+0x24a>
   1d8bc:	lsls	r3, r6, #30
   1d8be:	mov	r1, r7
   1d8c0:	bmi.n	1d8d2 <read_tree_block@@Base+0x24e>
   1d8c2:	ldr	r0, [pc, #56]	; (1d8fc <read_tree_block@@Base+0x278>)
   1d8c4:	add	r0, pc
   1d8c6:	bl	1747c <__btrfs_error@@Base>
   1d8ca:	mvn.w	r0, #4
   1d8ce:	add	sp, #12
   1d8d0:	pop	{r4, r5, r6, r7, pc}
   1d8d2:	ldr	r0, [pc, #44]	; (1d900 <read_tree_block@@Base+0x27c>)
   1d8d4:	add	r0, pc
   1d8d6:	bl	17400 <__btrfs_warning@@Base>
   1d8da:	movs	r2, #0
   1d8dc:	movs	r3, #0
   1d8de:	mov	r0, r4
   1d8e0:	bl	1c22e <btrfs_find_create_tree_block@@Base>
   1d8e4:	str	r0, [r5, #0]
   1d8e6:	cbz	r0, 1d8f4 <read_tree_block@@Base+0x270>
   1d8e8:	ldr	r3, [r0, #84]	; 0x54
   1d8ea:	bic.w	r3, r3, #4
   1d8ee:	str	r3, [r0, #84]	; 0x54
   1d8f0:	movs	r0, #0
   1d8f2:	b.n	1d8ce <read_tree_block@@Base+0x24a>
   1d8f4:	mvn.w	r0, #11
   1d8f8:	b.n	1d8ce <read_tree_block@@Base+0x24a>
   1d8fa:	nop
   1d8fc:	ldc2	0, cr0, [r4, #4]
   1d900:	ldc2	0, cr0, [ip, #4]

0001d904 <btrfs_read_fs_root_no_cache@@Base>:
   1d904:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
   1d908:	mov	r7, r0
   1d90a:	ldr.w	sl, [r0, #28]
   1d90e:	mov	r5, r1
   1d910:	movs	r0, #1
   1d912:	mov.w	r1, #544	; 0x220
   1d916:	blx	8358 <calloc@plt+0x4>
   1d91a:	mov	r4, r0
   1d91c:	cbz	r0, 1d96a <btrfs_read_fs_root_no_cache@@Base+0x66>
   1d91e:	ldr.w	r9, [r5, #13]
   1d922:	ldr.w	r8, [r5, #9]
   1d926:	cmp.w	r9, #4294967295	; 0xffffffff
   1d92a:	ldr	r2, [r5, #0]
   1d92c:	it	eq
   1d92e:	cmpeq.w	r8, #4294967295	; 0xffffffff
   1d932:	ldr	r3, [r5, #4]
   1d934:	bne.n	1d956 <btrfs_read_fs_root_no_cache@@Base+0x52>
   1d936:	str	r0, [sp, #0]
   1d938:	mov	r1, r7
   1d93a:	mov	r0, sl
   1d93c:	bl	1d844 <read_tree_block@@Base+0x1c0>
   1d940:	mov	r5, r0
   1d942:	cmp	r0, #0
   1d944:	beq.n	1d9fe <btrfs_read_fs_root_no_cache@@Base+0xfa>
   1d946:	mov	r0, r4
   1d948:	mov	r4, r5
   1d94a:	blx	83f0 <free@plt+0x4>
   1d94e:	mov	r0, r4
   1d950:	add	sp, #8
   1d952:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   1d956:	mov	r1, r7
   1d958:	bl	1c590 <btrfs_setup_root@@Base>
   1d95c:	bl	17e50 <btrfs_alloc_path@@Base>
   1d960:	mov	r6, r0
   1d962:	cbnz	r0, 1d970 <btrfs_read_fs_root_no_cache@@Base+0x6c>
   1d964:	mov	r0, r4
   1d966:	blx	83f0 <free@plt+0x4>
   1d96a:	mvn.w	r4, #11
   1d96e:	b.n	1d94e <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d970:	movs	r0, #0
   1d972:	mov	r3, r6
   1d974:	mov	r2, r5
   1d976:	mov	r1, sl
   1d978:	strd	r0, r0, [sp]
   1d97c:	bl	1a23c <btrfs_search_slot@@Base>
   1d980:	subs.w	r8, r0, #0
   1d984:	beq.n	1d9a2 <btrfs_read_fs_root_no_cache@@Base+0x9e>
   1d986:	ble.n	1d98c <btrfs_read_fs_root_no_cache@@Base+0x88>
   1d988:	mvn.w	r8, #1
   1d98c:	mov	r0, r6
   1d98e:	bl	17e7e <btrfs_free_path@@Base>
   1d992:	cmp.w	r8, #0
   1d996:	beq.n	1d9d8 <btrfs_read_fs_root_no_cache@@Base+0xd4>
   1d998:	mov	r0, r4
   1d99a:	mov	r4, r8
   1d99c:	blx	83f0 <free@plt+0x4>
   1d9a0:	b.n	1d94e <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d9a2:	ldr	r0, [r6, #0]
   1d9a4:	movs	r2, #25
   1d9a6:	ldr	r3, [r6, #32]
   1d9a8:	add.w	r1, r4, #8
   1d9ac:	mla	r3, r2, r3, r0
   1d9b0:	ldr.w	r2, [r3, #214]	; 0xd6
   1d9b4:	movw	r3, #439	; 0x1b7
   1d9b8:	adds	r2, #101	; 0x65
   1d9ba:	bl	1731a <read_extent_buffer@@Base>
   1d9be:	addw	r3, r4, #447	; 0x1bf
   1d9c2:	add.w	r2, r5, #16
   1d9c6:	ldr.w	r1, [r5], #4
   1d9ca:	cmp	r5, r2
   1d9cc:	str.w	r1, [r3], #4
   1d9d0:	bne.n	1d9c6 <btrfs_read_fs_root_no_cache@@Base+0xc2>
   1d9d2:	ldrb	r2, [r5, #0]
   1d9d4:	strb	r2, [r3, #0]
   1d9d6:	b.n	1d98c <btrfs_read_fs_root_no_cache@@Base+0x88>
   1d9d8:	ldrd	r2, r3, [r4, #168]	; 0xa8
   1d9dc:	mov	r0, r7
   1d9de:	strd	r2, r3, [sp]
   1d9e2:	ldrd	r2, r3, [r4, #184]	; 0xb8
   1d9e6:	bl	1d684 <read_tree_block@@Base>
   1d9ea:	str	r0, [r4, #0]
   1d9ec:	bl	1be10 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1d9f0:	cbnz	r0, 1d9fe <btrfs_read_fs_root_no_cache@@Base+0xfa>
   1d9f2:	mov	r0, r4
   1d9f4:	mvn.w	r4, #4
   1d9f8:	blx	83f0 <free@plt+0x4>
   1d9fc:	b.n	1d94e <btrfs_read_fs_root_no_cache@@Base+0x4a>
   1d9fe:	movs	r3, #1
   1da00:	str.w	r3, [r4, #488]	; 0x1e8
   1da04:	b.n	1d94e <btrfs_read_fs_root_no_cache@@Base+0x4a>

0001da06 <btrfs_read_fs_root@@Base>:
   1da06:	ldr	r2, [pc, #320]	; (1db48 <btrfs_read_fs_root@@Base+0x142>)
   1da08:	ldr	r3, [pc, #320]	; (1db4c <btrfs_read_fs_root@@Base+0x146>)
   1da0a:	add	r2, pc
   1da0c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1da10:	sub	sp, #28
   1da12:	ldr	r3, [r2, r3]
   1da14:	mov	r5, r0
   1da16:	ldr	r2, [r1, #0]
   1da18:	mov	r9, r1
   1da1a:	ldr	r3, [r3, #0]
   1da1c:	str	r3, [sp, #20]
   1da1e:	mov.w	r3, #0
   1da22:	ldr	r3, [r1, #4]
   1da24:	ldr.w	r8, [pc, #296]	; 1db50 <btrfs_read_fs_root@@Base+0x14a>
   1da28:	cmp	r3, #0
   1da2a:	it	eq
   1da2c:	cmpeq	r2, #1
   1da2e:	add	r8, pc
   1da30:	strd	r2, r3, [sp, #8]
   1da34:	bne.n	1da4c <btrfs_read_fs_root@@Base+0x46>
   1da36:	ldr	r4, [r0, #28]
   1da38:	ldr	r2, [pc, #280]	; (1db54 <btrfs_read_fs_root@@Base+0x14e>)
   1da3a:	ldr	r3, [pc, #272]	; (1db4c <btrfs_read_fs_root@@Base+0x146>)
   1da3c:	add	r2, pc
   1da3e:	ldr	r3, [r2, r3]
   1da40:	ldr	r2, [r3, #0]
   1da42:	ldr	r3, [sp, #20]
   1da44:	eors	r2, r3
   1da46:	beq.n	1db3e <btrfs_read_fs_root@@Base+0x138>
   1da48:	blx	84cc <__stack_chk_fail@plt>
   1da4c:	cmp	r3, #0
   1da4e:	it	eq
   1da50:	cmpeq	r2, #2
   1da52:	bne.n	1da58 <btrfs_read_fs_root@@Base+0x52>
   1da54:	ldr	r4, [r0, #24]
   1da56:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1da58:	cmp	r3, #0
   1da5a:	it	eq
   1da5c:	cmpeq	r2, #3
   1da5e:	bne.n	1da64 <btrfs_read_fs_root@@Base+0x5e>
   1da60:	ldr	r4, [r0, #32]
   1da62:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1da64:	cmp	r3, #0
   1da66:	it	eq
   1da68:	cmpeq	r2, #4
   1da6a:	bne.n	1da70 <btrfs_read_fs_root@@Base+0x6a>
   1da6c:	ldr	r4, [r0, #36]	; 0x24
   1da6e:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1da70:	cmp	r3, #0
   1da72:	it	eq
   1da74:	cmpeq	r2, #7
   1da76:	bne.n	1da7c <btrfs_read_fs_root@@Base+0x76>
   1da78:	ldr	r4, [r0, #40]	; 0x28
   1da7a:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1da7c:	cmp	r3, #0
   1da7e:	it	eq
   1da80:	cmpeq	r2, #9
   1da82:	bne.n	1da90 <btrfs_read_fs_root@@Base+0x8a>
   1da84:	ldr	r4, [r0, #52]	; 0x34
   1da86:	cmp	r4, #0
   1da88:	it	eq
   1da8a:	mvneq.w	r4, #1
   1da8e:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1da90:	cmp	r3, #0
   1da92:	it	eq
   1da94:	cmpeq	r2, #8
   1da96:	bne.n	1daa4 <btrfs_read_fs_root@@Base+0x9e>
   1da98:	ldrb.w	r3, [r0, #364]	; 0x16c
   1da9c:	lsls	r3, r3, #27
   1da9e:	bpl.n	1db38 <btrfs_read_fs_root@@Base+0x132>
   1daa0:	ldr	r4, [r0, #44]	; 0x2c
   1daa2:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1daa4:	cmp	r3, #0
   1daa6:	it	eq
   1daa8:	cmpeq	r2, #10
   1daaa:	bne.n	1dab0 <btrfs_read_fs_root@@Base+0xaa>
   1daac:	ldr	r4, [r0, #48]	; 0x30
   1daae:	b.n	1da86 <btrfs_read_fs_root@@Base+0x80>
   1dab0:	mov.w	r1, #4294967295	; 0xffffffff
   1dab4:	cmp	r3, r1
   1dab6:	mvn.w	r0, #7
   1daba:	it	eq
   1dabc:	cmpeq	r2, r0
   1dabe:	beq.n	1dafe <btrfs_read_fs_root@@Base+0xf8>
   1dac0:	ldr.w	r3, [r9, #9]
   1dac4:	ldr.w	r2, [r9, #13]
   1dac8:	ands	r3, r2
   1daca:	adds	r3, #1
   1dacc:	it	ne
   1dace:	movne	r3, #1
   1dad0:	ldr	r6, [pc, #132]	; (1db58 <btrfs_read_fs_root@@Base+0x152>)
   1dad2:	movw	r2, #735	; 0x2df
   1dad6:	ldr	r0, [pc, #132]	; (1db5c <btrfs_read_fs_root@@Base+0x156>)
   1dad8:	add.w	r7, r5, #56	; 0x38
   1dadc:	add	r6, pc
   1dade:	adds	r6, #70	; 0x46
   1dae0:	add	r0, pc
   1dae2:	mov	r1, r6
   1dae4:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1dae8:	ldr	r2, [pc, #116]	; (1db60 <btrfs_read_fs_root@@Base+0x15a>)
   1daea:	add	r1, sp, #8
   1daec:	movs	r3, #0
   1daee:	add	r2, pc
   1daf0:	mov	r0, r7
   1daf2:	bl	178c0 <rb_search@@Base>
   1daf6:	cbz	r0, 1db02 <btrfs_read_fs_root@@Base+0xfc>
   1daf8:	sub.w	r4, r0, #528	; 0x210
   1dafc:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1dafe:	movs	r3, #1
   1db00:	b.n	1dad0 <btrfs_read_fs_root@@Base+0xca>
   1db02:	mov	r1, r9
   1db04:	mov	r0, r5
   1db06:	bl	1d904 <btrfs_read_fs_root_no_cache@@Base>
   1db0a:	cmn.w	r0, #4096	; 0x1000
   1db0e:	mov	r4, r0
   1db10:	bhi.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1db12:	ldr	r3, [pc, #80]	; (1db64 <btrfs_read_fs_root@@Base+0x15e>)
   1db14:	add.w	r1, r0, #528	; 0x210
   1db18:	mov	r0, r7
   1db1a:	ldr.w	r3, [r8, r3]
   1db1e:	mov	r2, r3
   1db20:	str	r3, [sp, #4]
   1db22:	bl	17878 <rb_insert@@Base>
   1db26:	movw	r2, #749	; 0x2ed
   1db2a:	mov	r1, r6
   1db2c:	mov	r3, r0
   1db2e:	ldr	r0, [pc, #56]	; (1db68 <btrfs_read_fs_root@@Base+0x162>)
   1db30:	add	r0, pc
   1db32:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1db36:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1db38:	mvn.w	r4, #1
   1db3c:	b.n	1da38 <btrfs_read_fs_root@@Base+0x32>
   1db3e:	mov	r0, r4
   1db40:	add	sp, #28
   1db42:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1db46:	nop
   1db48:	strb	r6, [r7, #13]
   1db4a:	movs	r4, r0
   1db4c:	lsls	r4, r4, #8
   1db4e:	movs	r0, r0
   1db50:	strb	r2, [r3, #13]
   1db52:	movs	r4, r0
   1db54:	strb	r4, [r1, #13]
   1db56:	movs	r4, r0
   1db58:	vhadd.u<illegal width 64>	d0, d11, d1
   1db5c:			; <UNDEFINED> instruction: 0xfbb50001
   1db60:	b.n	1dea2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2e>
   1db62:	vmlal.u<illegal width 64>	q8, d15, d28[0]
   1db66:	movs	r0, r0
   1db68:	ldmia	r4!, {r0, r1}
   1db6a:	movs	r1, r0

0001db6c <btrfs_setup_all_roots@@Base>:
   1db6c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1db70:	mov	r6, r2
   1db72:	ldr	r2, [pc, #716]	; (1de40 <btrfs_setup_all_roots@@Base+0x2d4>)
   1db74:	mov	r7, r3
   1db76:	ldr	r3, [pc, #716]	; (1de44 <btrfs_setup_all_roots@@Base+0x2d8>)
   1db78:	sub	sp, #60	; 0x3c
   1db7a:	add	r2, pc
   1db7c:	ldr.w	r9, [r0, #28]
   1db80:	ldr.w	r5, [r0, #308]	; 0x134
   1db84:	mov	r1, r0
   1db86:	ldr	r3, [r2, r3]
   1db88:	mov	r4, r0
   1db8a:	mov	r0, r9
   1db8c:	movs	r2, #1
   1db8e:	ldr	r3, [r3, #0]
   1db90:	str	r3, [sp, #52]	; 0x34
   1db92:	mov.w	r3, #0
   1db96:	movs	r3, #0
   1db98:	ldr.w	sl, [sp, #96]	; 0x60
   1db9c:	bl	1c590 <btrfs_setup_root@@Base>
   1dba0:	ldr	r3, [r5, #76]	; 0x4c
   1dba2:	orrs.w	r2, r6, r7
   1dba6:	ldr.w	r8, [pc, #672]	; 1de48 <btrfs_setup_all_roots@@Base+0x2dc>
   1dbaa:	ldr.w	fp, [r5, #72]	; 0x48
   1dbae:	add	r8, pc
   1dbb0:	str	r3, [sp, #28]
   1dbb2:	and.w	r3, sl, #4
   1dbb6:	bne.n	1dbe8 <btrfs_setup_all_roots@@Base+0x7c>
   1dbb8:	cbnz	r3, 1dbec <btrfs_setup_all_roots@@Base+0x80>
   1dbba:	ldr	r6, [r5, #80]	; 0x50
   1dbbc:	ldr	r7, [r5, #84]	; 0x54
   1dbbe:	ldr	r3, [sp, #28]
   1dbc0:	mov	r2, r6
   1dbc2:	mov	r0, r4
   1dbc4:	str.w	fp, [sp]
   1dbc8:	str	r3, [sp, #4]
   1dbca:	mov	r3, r7
   1dbcc:	bl	1d684 <read_tree_block@@Base>
   1dbd0:	str.w	r0, [r9]
   1dbd4:	bl	1be10 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1dbd8:	cbnz	r0, 1dc3c <btrfs_setup_all_roots@@Base+0xd0>
   1dbda:	ldr	r3, [pc, #624]	; (1de4c <btrfs_setup_all_roots@@Base+0x2e0>)
   1dbdc:	ldr	r0, [pc, #624]	; (1de50 <btrfs_setup_all_roots@@Base+0x2e4>)
   1dbde:	ldr.w	r3, [r8, r3]
   1dbe2:	add	r0, pc
   1dbe4:	ldr	r1, [r3, #0]
   1dbe6:	b.n	1dc02 <btrfs_setup_all_roots@@Base+0x96>
   1dbe8:	cmp	r3, #0
   1dbea:	beq.n	1dbbe <btrfs_setup_all_roots@@Base+0x52>
   1dbec:	mov	r0, r5
   1dbee:	bl	1bcba <btrfs_fs_roots_compare_roots@@Base+0x4>
   1dbf2:	cmp	r0, #3
   1dbf4:	ble.n	1dc20 <btrfs_setup_all_roots@@Base+0xb4>
   1dbf6:	ldr	r3, [pc, #596]	; (1de4c <btrfs_setup_all_roots@@Base+0x2e0>)
   1dbf8:	ldr	r0, [pc, #600]	; (1de54 <btrfs_setup_all_roots@@Base+0x2e8>)
   1dbfa:	ldr.w	r3, [r8, r3]
   1dbfe:	add	r0, pc
   1dc00:	ldr	r1, [r3, #0]
   1dc02:	blx	8930 <fputs@plt+0x4>
   1dc06:	mvn.w	r6, #4
   1dc0a:	ldr	r2, [pc, #588]	; (1de58 <btrfs_setup_all_roots@@Base+0x2ec>)
   1dc0c:	ldr	r3, [pc, #564]	; (1de44 <btrfs_setup_all_roots@@Base+0x2d8>)
   1dc0e:	add	r2, pc
   1dc10:	ldr	r3, [r2, r3]
   1dc12:	ldr	r2, [r3, #0]
   1dc14:	ldr	r3, [sp, #52]	; 0x34
   1dc16:	eors	r2, r3
   1dc18:	beq.w	1de38 <btrfs_setup_all_roots@@Base+0x2cc>
   1dc1c:	blx	84cc <__stack_chk_fail@plt>
   1dc20:	ldr.w	r3, [r4, #308]	; 0x134
   1dc24:	movs	r2, #168	; 0xa8
   1dc26:	addw	r3, r3, #2859	; 0xb2b
   1dc2a:	mla	r0, r2, r0, r3
   1dc2e:	ldr	r3, [r0, #12]
   1dc30:	ldr.w	fp, [r0, #8]
   1dc34:	ldr	r6, [r0, #0]
   1dc36:	ldr	r7, [r0, #4]
   1dc38:	str	r3, [sp, #28]
   1dc3a:	b.n	1dbbe <btrfs_setup_all_roots@@Base+0x52>
   1dc3c:	ldr	r3, [pc, #540]	; (1de5c <btrfs_setup_all_roots@@Base+0x2f0>)
   1dc3e:	movs	r2, #2
   1dc40:	mov	r1, sl
   1dc42:	mov	r0, r4
   1dc44:	add	r3, pc
   1dc46:	str	r3, [sp, #8]
   1dc48:	movs	r3, #0
   1dc4a:	strd	r2, r3, [sp]
   1dc4e:	ldr	r2, [r4, #24]
   1dc50:	bl	1d8a2 <read_tree_block@@Base+0x21e>
   1dc54:	mov	r6, r0
   1dc56:	cmp	r0, #0
   1dc58:	bne.n	1dc0a <btrfs_setup_all_roots@@Base+0x9e>
   1dc5a:	ldr	r3, [r4, #24]
   1dc5c:	movs	r7, #1
   1dc5e:	movs	r2, #4
   1dc60:	mov	r1, r4
   1dc62:	mov	r0, r9
   1dc64:	str.w	r7, [r3, #492]	; 0x1ec
   1dc68:	ldr	r3, [r4, #36]	; 0x24
   1dc6a:	str	r3, [sp, #0]
   1dc6c:	movs	r3, #0
   1dc6e:	bl	1d844 <read_tree_block@@Base+0x1c0>
   1dc72:	cbz	r0, 1dc82 <btrfs_setup_all_roots@@Base+0x116>
   1dc74:	ldr	r3, [pc, #468]	; (1de4c <btrfs_setup_all_roots@@Base+0x2e0>)
   1dc76:	ldr	r0, [pc, #488]	; (1de60 <btrfs_setup_all_roots@@Base+0x2f4>)
   1dc78:	ldr.w	r3, [r8, r3]
   1dc7c:	add	r0, pc
   1dc7e:	ldr	r1, [r3, #0]
   1dc80:	b.n	1dc02 <btrfs_setup_all_roots@@Base+0x96>
   1dc82:	ldr	r3, [r4, #36]	; 0x24
   1dc84:	movs	r2, #7
   1dc86:	mov	r1, sl
   1dc88:	mov	r0, r4
   1dc8a:	str.w	r7, [r3, #492]	; 0x1ec
   1dc8e:	ldr	r3, [pc, #468]	; (1de64 <btrfs_setup_all_roots@@Base+0x2f8>)
   1dc90:	add	r3, pc
   1dc92:	str	r3, [sp, #8]
   1dc94:	movs	r3, #0
   1dc96:	strd	r2, r3, [sp]
   1dc9a:	ldr	r2, [r4, #40]	; 0x28
   1dc9c:	bl	1d8a2 <read_tree_block@@Base+0x21e>
   1dca0:	mov	r6, r0
   1dca2:	cmp	r0, #0
   1dca4:	bne.n	1dc0a <btrfs_setup_all_roots@@Base+0x9e>
   1dca6:	ldr	r3, [r4, #40]	; 0x28
   1dca8:	movs	r2, #9
   1dcaa:	mov	r1, r4
   1dcac:	mov	r0, r9
   1dcae:	str.w	r7, [r3, #492]	; 0x1ec
   1dcb2:	ldr	r3, [r4, #52]	; 0x34
   1dcb4:	str	r3, [sp, #0]
   1dcb6:	movs	r3, #0
   1dcb8:	bl	1d844 <read_tree_block@@Base+0x1c0>
   1dcbc:	cbz	r0, 1dd14 <btrfs_setup_all_roots@@Base+0x1a8>
   1dcbe:	ldr	r0, [r4, #52]	; 0x34
   1dcc0:	blx	83f0 <free@plt+0x4>
   1dcc4:	str	r6, [r4, #52]	; 0x34
   1dcc6:	ldr	r3, [r4, #44]	; 0x2c
   1dcc8:	movs	r2, #8
   1dcca:	mov	r1, r4
   1dccc:	mov	r0, r9
   1dcce:	str	r3, [sp, #0]
   1dcd0:	movs	r3, #0
   1dcd2:	bl	1d844 <read_tree_block@@Base+0x1c0>
   1dcd6:	cbz	r0, 1dd1c <btrfs_setup_all_roots@@Base+0x1b0>
   1dcd8:	ldr	r0, [r4, #44]	; 0x2c
   1dcda:	blx	83f0 <free@plt+0x4>
   1dcde:	movs	r3, #0
   1dce0:	str	r3, [r4, #44]	; 0x2c
   1dce2:	ldr.w	r3, [r4, #308]	; 0x134
   1dce6:	ldr.w	r1, [r3, #180]	; 0xb4
   1dcea:	movs	r3, #0
   1dcec:	and.w	r2, r1, #1
   1dcf0:	orrs	r3, r2
   1dcf2:	beq.n	1dd32 <btrfs_setup_all_roots@@Base+0x1c6>
   1dcf4:	ldr	r3, [r4, #48]	; 0x30
   1dcf6:	movs	r2, #10
   1dcf8:	mov	r1, r4
   1dcfa:	mov	r0, r9
   1dcfc:	str	r3, [sp, #0]
   1dcfe:	movs	r3, #0
   1dd00:	bl	1d844 <read_tree_block@@Base+0x1c0>
   1dd04:	cbz	r0, 1dd2a <btrfs_setup_all_roots@@Base+0x1be>
   1dd06:	ldr	r3, [pc, #324]	; (1de4c <btrfs_setup_all_roots@@Base+0x2e0>)
   1dd08:	ldr	r0, [pc, #348]	; (1de68 <btrfs_setup_all_roots@@Base+0x2fc>)
   1dd0a:	ldr.w	r3, [r8, r3]
   1dd0e:	add	r0, pc
   1dd10:	ldr	r1, [r3, #0]
   1dd12:	b.n	1dc02 <btrfs_setup_all_roots@@Base+0x96>
   1dd14:	ldr	r3, [r4, #52]	; 0x34
   1dd16:	str.w	r7, [r3, #492]	; 0x1ec
   1dd1a:	b.n	1dcc6 <btrfs_setup_all_roots@@Base+0x15a>
   1dd1c:	ldrb.w	r3, [r4, #364]	; 0x16c
   1dd20:	orr.w	r3, r3, #16
   1dd24:	strb.w	r3, [r4, #364]	; 0x16c
   1dd28:	b.n	1dce2 <btrfs_setup_all_roots@@Base+0x176>
   1dd2a:	ldr	r3, [r4, #48]	; 0x30
   1dd2c:	movs	r2, #1
   1dd2e:	str.w	r2, [r3, #492]	; 0x1ec
   1dd32:	ldr	r3, [r5, #96]	; 0x60
   1dd34:	mov.w	r0, #544	; 0x220
   1dd38:	str	r3, [sp, #16]
   1dd3a:	ldr	r3, [r5, #100]	; 0x64
   1dd3c:	str	r3, [sp, #20]
   1dd3e:	blx	8634 <malloc@plt+0x4>
   1dd42:	mov	r7, r0
   1dd44:	cmp	r0, #0
   1dd46:	beq.n	1ddda <btrfs_setup_all_roots@@Base+0x26e>
   1dd48:	ldrd	r2, r3, [sp, #16]
   1dd4c:	orrs	r3, r2
   1dd4e:	bne.n	1dd96 <btrfs_setup_all_roots@@Base+0x22a>
   1dd50:	blx	83f0 <free@plt+0x4>
   1dd54:	ldr	r3, [sp, #28]
   1dd56:	str.w	fp, [r4, #232]	; 0xe8
   1dd5a:	strd	r3, fp, [r4, #236]	; 0xec
   1dd5e:	str.w	r3, [r4, #244]	; 0xf4
   1dd62:	ldr	r3, [r4, #24]
   1dd64:	ldr	r0, [r3, #0]
   1dd66:	bl	1be10 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1dd6a:	cmp	r0, #0
   1dd6c:	beq.n	1ddf2 <btrfs_setup_all_roots@@Base+0x286>
   1dd6e:	tst.w	sl, #32
   1dd72:	bne.n	1ddf2 <btrfs_setup_all_roots@@Base+0x286>
   1dd74:	mov	r0, r4
   1dd76:	bl	21a90 <btrfs_read_block_groups@@Base>
   1dd7a:	subs	r5, r0, #0
   1dd7c:	bge.n	1ddf2 <btrfs_setup_all_roots@@Base+0x286>
   1dd7e:	adds	r3, r5, #2
   1dd80:	beq.n	1ddf2 <btrfs_setup_all_roots@@Base+0x286>
   1dd82:	blx	8740 <__errno_location@plt>
   1dd86:	negs	r3, r5
   1dd88:	mov	r6, r5
   1dd8a:	str	r3, [r0, #0]
   1dd8c:	ldr	r0, [pc, #220]	; (1de6c <btrfs_setup_all_roots@@Base+0x300>)
   1dd8e:	add	r0, pc
   1dd90:	bl	1747c <__btrfs_error@@Base>
   1dd94:	b.n	1dc0a <btrfs_setup_all_roots@@Base+0x9e>
   1dd96:	mov	r1, r4
   1dd98:	mvn.w	r2, #5
   1dd9c:	mov.w	r3, #4294967295	; 0xffffffff
   1dda0:	bl	1c590 <btrfs_setup_root@@Base>
   1dda4:	ldr	r3, [r5, #72]	; 0x48
   1dda6:	ldr	r2, [r5, #76]	; 0x4c
   1dda8:	mov	r0, r4
   1ddaa:	adds	r3, #1
   1ddac:	adc.w	r2, r2, #0
   1ddb0:	strd	r3, r2, [sp]
   1ddb4:	ldrd	r2, r3, [sp, #16]
   1ddb8:	bl	1d684 <read_tree_block@@Base>
   1ddbc:	str	r7, [r4, #60]	; 0x3c
   1ddbe:	str	r0, [r7, #0]
   1ddc0:	mov	r3, r0
   1ddc2:	bl	1be10 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1ddc6:	mov	r5, r0
   1ddc8:	cmp	r0, #0
   1ddca:	bne.n	1dd54 <btrfs_setup_all_roots@@Base+0x1e8>
   1ddcc:	mov	r0, r3
   1ddce:	bl	16c20 <free_extent_buffer@@Base>
   1ddd2:	mov	r0, r7
   1ddd4:	blx	83f0 <free@plt+0x4>
   1ddd8:	str	r5, [r4, #60]	; 0x3c
   1ddda:	ldr	r3, [pc, #112]	; (1de4c <btrfs_setup_all_roots@@Base+0x2e0>)
   1dddc:	ldr	r0, [pc, #144]	; (1de70 <btrfs_setup_all_roots@@Base+0x304>)
   1ddde:	ldr.w	r3, [r8, r3]
   1dde2:	add	r0, pc
   1dde4:	ldr	r1, [r3, #0]
   1dde6:	blx	8930 <fputs@plt+0x4>
   1ddea:	tst.w	sl, #2
   1ddee:	bne.n	1dd54 <btrfs_setup_all_roots@@Base+0x1e8>
   1ddf0:	b.n	1dc06 <btrfs_setup_all_roots@@Base+0x9a>
   1ddf2:	add	r1, sp, #32
   1ddf4:	mov	r0, r4
   1ddf6:	movs	r2, #5
   1ddf8:	movs	r3, #0
   1ddfa:	strd	r2, r3, [sp, #32]
   1ddfe:	mov.w	r2, #4294967295	; 0xffffffff
   1de02:	movs	r3, #132	; 0x84
   1de04:	strb.w	r2, [sp, #41]	; 0x29
   1de08:	strb.w	r3, [sp, #40]	; 0x28
   1de0c:	strb.w	r2, [sp, #42]	; 0x2a
   1de10:	strb.w	r2, [sp, #43]	; 0x2b
   1de14:	strb.w	r2, [sp, #44]	; 0x2c
   1de18:	strb.w	r2, [sp, #45]	; 0x2d
   1de1c:	strb.w	r2, [sp, #46]	; 0x2e
   1de20:	strb.w	r2, [sp, #47]	; 0x2f
   1de24:	strb.w	r2, [sp, #48]	; 0x30
   1de28:	bl	1da06 <btrfs_read_fs_root@@Base>
   1de2c:	cmn.w	r0, #4096	; 0x1000
   1de30:	str	r0, [r4, #20]
   1de32:	bls.w	1dc0a <btrfs_setup_all_roots@@Base+0x9e>
   1de36:	b.n	1dc06 <btrfs_setup_all_roots@@Base+0x9a>
   1de38:	mov	r0, r6
   1de3a:	add	sp, #60	; 0x3c
   1de3c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de40:	strb	r6, [r1, #8]
   1de42:	movs	r4, r0
   1de44:	lsls	r4, r4, #8
   1de46:	movs	r0, r0
   1de48:	strb	r2, [r3, #7]
   1de4a:	movs	r4, r0
   1de4c:	lsls	r4, r6, #8
   1de4e:	movs	r0, r0
   1de50:	smlabb	r0, lr, r1, r0
   1de54:			; <UNDEFINED> instruction: 0xfae60001
   1de58:	strb	r2, [r7, #5]
   1de5a:	movs	r4, r0
   1de5c:	asrs	r4, r0, #24
   1de5e:	movs	r2, r0
   1de60:			; <UNDEFINED> instruction: 0xfa9d0001
   1de64:			; <UNDEFINED> instruction: 0xfaa50001
   1de68:			; <UNDEFINED> instruction: 0xfa2c0001
   1de6c:	vld1.8	{d16[0]}, [r9], r1
   1de70:	ldr??.w	r0, [r7, r1]

0001de74 <btrfs_setup_chunk_tree_and_device_map@@Base>:
   1de74:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1de78:	mov	r1, r0
   1de7a:	ldr.w	r8, [r0, #308]	; 0x134
   1de7e:	mov	r4, r0
   1de80:	mov	r6, r2
   1de82:	ldr	r0, [r0, #32]
   1de84:	movs	r2, #3
   1de86:	mov	r7, r3
   1de88:	movs	r3, #0
   1de8a:	ldr.w	r9, [pc, #212]	; 1df60 <btrfs_setup_chunk_tree_and_device_map@@Base+0xec>
   1de8e:	bl	1c590 <btrfs_setup_root@@Base>
   1de92:	mov	r0, r4
   1de94:	bl	2a368 <btrfs_read_sys_array@@Base>
   1de98:	add	r9, pc
   1de9a:	mov	r5, r0
   1de9c:	cmp	r0, #0
   1de9e:	bne.n	1df1c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1dea0:	orrs.w	r3, r6, r7
   1dea4:	ldr.w	fp, [r8, #164]	; 0xa4
   1dea8:	ldr.w	sl, [r8, #168]	; 0xa8
   1deac:	beq.n	1deda <btrfs_setup_chunk_tree_and_device_map@@Base+0x66>
   1deae:	ldr.w	ip, [r4, #388]	; 0x184
   1deb2:	movs	r0, #0
   1deb4:	adds.w	r1, ip, #4294967295	; 0xffffffff
   1deb8:	adc.w	r0, r0, #4294967295	; 0xffffffff
   1debc:	and.w	r2, r1, r6
   1dec0:	and.w	r3, r0, r7
   1dec4:	orrs.w	r1, r2, r3
   1dec8:	beq.n	1dee6 <btrfs_setup_chunk_tree_and_device_map@@Base+0x72>
   1deca:	ldr	r0, [pc, #152]	; (1df64 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf0>)
   1decc:	mov	r2, r6
   1dece:	mov	r3, r7
   1ded0:	str.w	ip, [sp]
   1ded4:	add	r0, pc
   1ded6:	bl	17400 <__btrfs_warning@@Base>
   1deda:	ldr.w	r6, [r8, #88]	; 0x58
   1dede:	mov	r2, fp
   1dee0:	ldr.w	r7, [r8, #92]	; 0x5c
   1dee4:	mov	r3, sl
   1dee6:	strd	r2, r3, [sp]
   1deea:	mov	r0, r4
   1deec:	mov	r2, r6
   1deee:	mov	r3, r7
   1def0:	ldr.w	sl, [r4, #32]
   1def4:	bl	1d684 <read_tree_block@@Base>
   1def8:	str.w	r0, [sl]
   1defc:	ldr	r3, [r4, #32]
   1defe:	ldr	r0, [r3, #0]
   1df00:	bl	1be10 <btrfs_fs_roots_compare_roots@@Base+0x15a>
   1df04:	mov	r6, r0
   1df06:	cbnz	r0, 1df32 <btrfs_setup_chunk_tree_and_device_map@@Base+0xbe>
   1df08:	ldrsb.w	r3, [r4, #364]	; 0x16c
   1df0c:	cmp	r3, #0
   1df0e:	bge.n	1df24 <btrfs_setup_chunk_tree_and_device_map@@Base+0xb0>
   1df10:	ldr	r0, [pc, #84]	; (1df68 <btrfs_setup_chunk_tree_and_device_map@@Base+0xf4>)
   1df12:	mov	r5, r6
   1df14:	add	r0, pc
   1df16:	bl	17400 <__btrfs_warning@@Base>
   1df1a:	str	r6, [r4, #32]
   1df1c:	mov	r0, r5
   1df1e:	add	sp, #12
   1df20:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1df24:	ldr	r0, [pc, #68]	; (1df6c <btrfs_setup_chunk_tree_and_device_map@@Base+0xf8>)
   1df26:	mvn.w	r5, #4
   1df2a:	add	r0, pc
   1df2c:	bl	1747c <__btrfs_error@@Base>
   1df30:	b.n	1df1c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1df32:	ldr.w	r1, [r8, #60]	; 0x3c
   1df36:	movs	r2, #0
   1df38:	and.w	r3, r1, #2
   1df3c:	orrs	r3, r2
   1df3e:	bne.n	1df1c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1df40:	mov	r0, r4
   1df42:	bl	2a510 <btrfs_read_chunk_tree@@Base>
   1df46:	mov	r5, r0
   1df48:	cmp	r0, #0
   1df4a:	beq.n	1df1c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1df4c:	ldr	r3, [pc, #32]	; (1df70 <btrfs_setup_chunk_tree_and_device_map@@Base+0xfc>)
   1df4e:	ldr	r0, [pc, #36]	; (1df74 <btrfs_setup_chunk_tree_and_device_map@@Base+0x100>)
   1df50:	ldr.w	r3, [r9, r3]
   1df54:	add	r0, pc
   1df56:	ldr	r1, [r3, #0]
   1df58:	blx	8930 <fputs@plt+0x4>
   1df5c:	b.n	1df1c <btrfs_setup_chunk_tree_and_device_map@@Base+0xa8>
   1df5e:	nop
   1df60:	ldr	r0, [r6, #108]	; 0x6c
   1df62:	movs	r4, r0
   1df64:	str.w	r0, [r3, #1]
   1df68:	ldrh.w	r0, [r8, #1]
   1df6c:	str.w	r0, [sl, #1]
   1df70:	lsls	r4, r6, #8
   1df72:	movs	r0, r0
   1df74:	ldrh.w	r0, [r7, #1]
   1df78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1df7c:	mov	r8, r2
   1df7e:	ldr	r2, [pc, #624]	; (1e1f0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x37c>)
   1df80:	mov	r9, r3
   1df82:	ldr	r3, [pc, #624]	; (1e1f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   1df84:	sub	sp, #36	; 0x24
   1df86:	add	r2, pc
   1df88:	ldr	r7, [pc, #620]	; (1e1f8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x384>)
   1df8a:	ldr	r5, [sp, #88]	; 0x58
   1df8c:	mov	sl, r0
   1df8e:	ldr	r3, [r2, r3]
   1df90:	movs	r2, #0
   1df92:	add	r7, pc
   1df94:	mov	r6, r1
   1df96:	ldr	r3, [r3, #0]
   1df98:	str	r3, [sp, #28]
   1df9a:	mov.w	r3, #0
   1df9e:	movs	r3, #0
   1dfa0:	str	r3, [sp, #24]
   1dfa2:	orrs.w	r3, r8, r9
   1dfa6:	mov.w	r3, #4
   1dfaa:	str	r3, [sp, #8]
   1dfac:	mov.w	r3, #0
   1dfb0:	strd	r2, r3, [sp]
   1dfb4:	itt	eq
   1dfb6:	moveq.w	r8, #65536	; 0x10000
   1dfba:	moveq.w	r9, #0
   1dfbe:	blx	83a0 <posix_fadvise64@plt>
   1dfc2:	cbz	r0, 1dfd2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x15e>
   1dfc4:	ldr	r3, [pc, #564]	; (1e1fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1dfc6:	ldr	r0, [pc, #568]	; (1e200 <btrfs_setup_chunk_tree_and_device_map@@Base+0x38c>)
   1dfc8:	ldr	r3, [r7, r3]
   1dfca:	add	r0, pc
   1dfcc:	ldr	r1, [r3, #0]
   1dfce:	blx	8930 <fputs@plt+0x4>
   1dfd2:	and.w	fp, r5, #1
   1dfd6:	mov	r2, r8
   1dfd8:	mov	r3, r9
   1dfda:	mov	r0, fp
   1dfdc:	bl	1c65e <btrfs_new_fs_info@@Base>
   1dfe0:	mov	r4, r0
   1dfe2:	cbnz	r0, 1e008 <btrfs_setup_chunk_tree_and_device_map@@Base+0x194>
   1dfe4:	ldr	r3, [pc, #532]	; (1e1fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1dfe6:	ldr	r0, [pc, #540]	; (1e204 <btrfs_setup_chunk_tree_and_device_map@@Base+0x390>)
   1dfe8:	ldr	r3, [r7, r3]
   1dfea:	add	r0, pc
   1dfec:	ldr	r1, [r3, #0]
   1dfee:	blx	8930 <fputs@plt+0x4>
   1dff2:	ldr	r2, [pc, #532]	; (1e208 <btrfs_setup_chunk_tree_and_device_map@@Base+0x394>)
   1dff4:	ldr	r3, [pc, #508]	; (1e1f4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x380>)
   1dff6:	add	r2, pc
   1dff8:	ldr	r3, [r2, r3]
   1dffa:	ldr	r2, [r3, #0]
   1dffc:	ldr	r3, [sp, #28]
   1dffe:	eors	r2, r3
   1e000:	beq.w	1e1e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x374>
   1e004:	blx	84cc <__stack_chk_fail@plt>
   1e008:	lsls	r3, r5, #27
   1e00a:	ittt	mi
   1e00c:	ldrbmi.w	r3, [r0, #364]	; 0x16c
   1e010:	orrmi.w	r3, r3, #4
   1e014:	strbmi.w	r3, [r0, #364]	; 0x16c
   1e018:	lsls	r0, r5, #23
   1e01a:	ittt	mi
   1e01c:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   1e020:	orrmi.w	r3, r3, #32
   1e024:	strbmi.w	r3, [r4, #364]	; 0x16c
   1e028:	ands.w	r2, r5, #1024	; 0x400
   1e02c:	ittt	ne
   1e02e:	ldrbne.w	r3, [r4, #364]	; 0x16c
   1e032:	orrne.w	r3, r3, #64	; 0x40
   1e036:	strbne.w	r3, [r4, #364]	; 0x16c
   1e03a:	lsls	r1, r5, #20
   1e03c:	ittt	mi
   1e03e:	ldrbmi.w	r3, [r4, #364]	; 0x16c
   1e042:	orrmi.w	r3, r3, #128	; 0x80
   1e046:	strbmi.w	r3, [r4, #364]	; 0x16c
   1e04a:	movw	r3, #4104	; 0x1008
   1e04e:	bics	r3, r5
   1e050:	bne.n	1e06a <btrfs_setup_chunk_tree_and_device_map@@Base+0x1f6>
   1e052:	ldr	r3, [pc, #424]	; (1e1fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e054:	ldr	r0, [pc, #436]	; (1e20c <btrfs_setup_chunk_tree_and_device_map@@Base+0x398>)
   1e056:	ldr	r3, [r7, r3]
   1e058:	add	r0, pc
   1e05a:	ldr	r1, [r3, #0]
   1e05c:	blx	8930 <fputs@plt+0x4>
   1e060:	mov	r0, r4
   1e062:	movs	r4, #0
   1e064:	bl	1c610 <btrfs_free_fs_info@@Base>
   1e068:	b.n	1dff2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e06a:	ands.w	r3, r5, #4096	; 0x1000
   1e06e:	it	ne
   1e070:	movne	r3, #2
   1e072:	cbz	r2, 1e078 <btrfs_setup_chunk_tree_and_device_map@@Base+0x204>
   1e074:	orr.w	r3, r3, #4
   1e078:	and.w	r2, r5, #128	; 0x80
   1e07c:	mov	r1, r6
   1e07e:	strd	r3, r2, [sp, #8]
   1e082:	mov	r0, sl
   1e084:	add	r2, sp, #24
   1e086:	strd	r8, r9, [sp]
   1e08a:	str	r3, [sp, #20]
   1e08c:	bl	1c918 <btrfs_scan_fs_devices@@Base>
   1e090:	mov	r1, r0
   1e092:	cmp	r0, #0
   1e094:	bne.n	1e060 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e096:	cmp.w	fp, #0
   1e09a:	ldr	r0, [sp, #24]
   1e09c:	ldr	r3, [sp, #20]
   1e09e:	it	ne
   1e0a0:	movne	r1, #2
   1e0a2:	tst.w	r5, #64	; 0x40
   1e0a6:	it	ne
   1e0a8:	orrne.w	r1, r1, #128	; 0x80
   1e0ac:	str.w	r0, [r4, #352]	; 0x160
   1e0b0:	str	r3, [sp, #20]
   1e0b2:	bl	2801c <btrfs_open_devices@@Base>
   1e0b6:	cmp	r0, #0
   1e0b8:	bne.n	1e060 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e0ba:	tst.w	r5, #8
   1e0be:	ldr.w	r6, [r4, #308]	; 0x134
   1e0c2:	ldr	r3, [sp, #20]
   1e0c4:	beq.n	1e0f0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x27c>
   1e0c6:	ldr	r0, [sp, #24]
   1e0c8:	movs	r3, #1
   1e0ca:	str	r3, [sp, #0]
   1e0cc:	mov	r2, r8
   1e0ce:	mov	r3, r9
   1e0d0:	mov	r1, r6
   1e0d2:	ldr	r0, [r0, #64]	; 0x40
   1e0d4:	bl	1ccc8 <btrfs_read_dev_super@@Base>
   1e0d8:	cbz	r0, 1e0fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x288>
   1e0da:	ldr	r3, [pc, #288]	; (1e1fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e0dc:	ldr	r0, [pc, #304]	; (1e210 <btrfs_setup_chunk_tree_and_device_map@@Base+0x39c>)
   1e0de:	ldr	r3, [r7, r3]
   1e0e0:	add	r0, pc
   1e0e2:	ldr	r1, [r3, #0]
   1e0e4:	blx	8930 <fputs@plt+0x4>
   1e0e8:	ldr	r0, [sp, #24]
   1e0ea:	bl	27f2c <btrfs_close_devices@@Base>
   1e0ee:	b.n	1e060 <btrfs_setup_chunk_tree_and_device_map@@Base+0x1ec>
   1e0f0:	str	r3, [sp, #0]
   1e0f2:	mov	r2, r8
   1e0f4:	mov	r3, r9
   1e0f6:	mov	r1, r6
   1e0f8:	mov	r0, sl
   1e0fa:	b.n	1e0d4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x260>
   1e0fc:	ldr	r1, [r6, #60]	; 0x3c
   1e0fe:	mov	r2, r0
   1e100:	and.w	r3, r1, #8
   1e104:	orrs	r3, r2
   1e106:	beq.n	1e11c <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   1e108:	ldrb.w	r3, [r4, #364]	; 0x16c
   1e10c:	lsls	r2, r3, #25
   1e10e:	bmi.n	1e11c <btrfs_setup_chunk_tree_and_device_map@@Base+0x2a8>
   1e110:	ldr	r3, [pc, #232]	; (1e1fc <btrfs_setup_chunk_tree_and_device_map@@Base+0x388>)
   1e112:	ldr	r0, [pc, #256]	; (1e214 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a0>)
   1e114:	ldr	r3, [r7, r3]
   1e116:	add	r0, pc
   1e118:	ldr	r1, [r3, #0]
   1e11a:	b.n	1e0e4 <btrfs_setup_chunk_tree_and_device_map@@Base+0x270>
   1e11c:	ldr.w	r8, [sp, #24]
   1e120:	add.w	r0, r6, #32
   1e124:	movs	r2, #16
   1e126:	mov	r1, r8
   1e128:	blx	8464 <memcmp@plt+0x4>
   1e12c:	cbz	r0, 1e140 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2cc>
   1e12e:	ldr	r1, [pc, #232]	; (1e218 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a4>)
   1e130:	movw	r2, #1251	; 0x4e3
   1e134:	ldr	r0, [pc, #228]	; (1e21c <btrfs_setup_chunk_tree_and_device_map@@Base+0x3a8>)
   1e136:	add	r1, pc
   1e138:	adds	r1, #89	; 0x59
   1e13a:	add	r0, pc
   1e13c:	bl	1bfc4 <btrfs_fs_roots_compare_roots@@Base+0x30e>
   1e140:	ldr.w	r7, [r4, #308]	; 0x134
   1e144:	mov	r3, r0
   1e146:	ldr.w	r1, [r7, #188]	; 0xbc
   1e14a:	and.w	r2, r1, #1024	; 0x400
   1e14e:	orrs	r3, r2
   1e150:	beq.n	1e172 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   1e152:	movs	r2, #16
   1e154:	addw	r0, r6, #571	; 0x23b
   1e158:	add.w	r1, r8, r2
   1e15c:	blx	8464 <memcmp@plt+0x4>
   1e160:	cbz	r0, 1e172 <btrfs_setup_chunk_tree_and_device_map@@Base+0x2fe>
   1e162:	ldr	r1, [pc, #188]	; (1e220 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3ac>)
   1e164:	movw	r2, #1253	; 0x4e5
   1e168:	ldr	r0, [pc, #184]	; (1e224 <btrfs_setup_chunk_tree_and_device_map@@Base+0x3b0>)
   1e16a:	add	r1, pc
   1e16c:	adds	r1, #89	; 0x59
   1e16e:	add	r0, pc
   1e170:	b.n	1e13c <btrfs_setup_chunk_tree_and_device_map@@Base+0x2c8>
   1e172:	ldr.w	r3, [r6, #144]	; 0x90
   1e176:	mov	r1, r5
   1e178:	mov	r0, r7
   1e17a:	str.w	r3, [r4, #388]	; 0x184
   1e17e:	ldr.w	r3, [r6, #148]	; 0x94
   1e182:	str.w	r3, [r4, #384]	; 0x180
   1e186:	ldr.w	r3, [r6, #156]	; 0x9c
   1e18a:	str.w	r3, [r4, #392]	; 0x188
   1e18e:	bl	1c7b4 <btrfs_check_fs_compatibility@@Base>
   1e192:	cmp	r0, #0
   1e194:	bne.n	1e0e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   1e196:	ldrd	r2, r3, [sp, #80]	; 0x50
   1e19a:	mov	r0, r4
   1e19c:	bl	1de74 <btrfs_setup_chunk_tree_and_device_map@@Base>
   1e1a0:	cbz	r0, 1e1b0 <btrfs_setup_chunk_tree_and_device_map@@Base+0x33c>
   1e1a2:	mov	r0, r4
   1e1a4:	bl	1c854 <btrfs_release_all_roots@@Base>
   1e1a8:	mov	r0, r4
   1e1aa:	bl	1c8b8 <btrfs_cleanup_all_caches@@Base>
   1e1ae:	b.n	1e0e8 <btrfs_setup_chunk_tree_and_device_map@@Base+0x274>
   1e1b0:	ldr	r0, [r4, #32]
   1e1b2:	cmp	r0, #0
   1e1b4:	beq.w	1dff2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e1b8:	ldr	r0, [r0, #0]
   1e1ba:	movs	r3, #16
   1e1bc:	movs	r2, #64	; 0x40
   1e1be:	mov	r1, r4
   1e1c0:	bl	1731a <read_extent_buffer@@Base>
   1e1c4:	ldrd	r2, r3, [sp, #72]	; 0x48
   1e1c8:	mov	r0, r4
   1e1ca:	str	r5, [sp, #0]
   1e1cc:	bl	1db6c <btrfs_setup_all_roots@@Base>
   1e1d0:	cmp	r0, #0
   1e1d2:	beq.w	1dff2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e1d6:	lsls	r3, r5, #22
   1e1d8:	bmi.w	1dff2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e1dc:	ldrsb.w	r3, [r4, #364]	; 0x16c
   1e1e0:	cmp	r3, #0
   1e1e2:	blt.w	1dff2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x17e>
   1e1e6:	b.n	1e1a2 <btrfs_setup_chunk_tree_and_device_map@@Base+0x32e>
   1e1e8:	mov	r0, r4
   1e1ea:	add	sp, #36	; 0x24
   1e1ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e1f0:	ldr	r2, [r0, #96]	; 0x60
   1e1f2:	movs	r4, r0
   1e1f4:	lsls	r4, r4, #8
   1e1f6:	movs	r0, r0
   1e1f8:	ldr	r6, [r6, #92]	; 0x5c
   1e1fa:	movs	r4, r0
   1e1fc:	lsls	r4, r6, #8
   1e1fe:	movs	r0, r0
   1e200:	ldr.w	r0, [fp, r1]
   1e204:	ldr.w	r0, [fp, r1]
   1e208:	ldr	r2, [r2, #88]	; 0x58
   1e20a:	movs	r4, r0
   1e20c:	ldrb.w	r0, [r4, r1]
   1e210:			; <UNDEFINED> instruction: 0xf7cd0001
   1e214:			; <UNDEFINED> instruction: 0xf7ad0001
   1e218:	str??.w	r0, [r1, #1]
   1e21c:			; <UNDEFINED> instruction: 0xf7b40001
   1e220:	strh.w	r0, [sp, #1]
   1e224:			; <UNDEFINED> instruction: 0xf7bd0001

0001e228 <open_ctree_fs_info@@Base>:
   1e228:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   1e22c:	mov	r9, r2
   1e22e:	ldr	r2, [pc, #164]	; (1e2d4 <open_ctree_fs_info@@Base+0xac>)
   1e230:	mov	r8, r3
   1e232:	ldr	r3, [pc, #164]	; (1e2d8 <open_ctree_fs_info@@Base+0xb0>)
   1e234:	sub	sp, #140	; 0x8c
   1e236:	add	r2, pc
   1e238:	add	r1, sp, #24
   1e23a:	ldr	r6, [sp, #184]	; 0xb8
   1e23c:	mov	r4, r0
   1e23e:	ldr	r3, [r2, r3]
   1e240:	ldr	r3, [r3, #0]
   1e242:	str	r3, [sp, #132]	; 0x84
   1e244:	mov.w	r3, #0
   1e248:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   1e24c:	cmp	r0, #0
   1e24e:	bge.n	1e270 <open_ctree_fs_info@@Base+0x48>
   1e250:	ldr	r0, [pc, #136]	; (1e2dc <open_ctree_fs_info@@Base+0xb4>)
   1e252:	mov	r1, r4
   1e254:	add	r0, pc
   1e256:	bl	1747c <__btrfs_error@@Base>
   1e25a:	movs	r4, #0
   1e25c:	ldr	r2, [pc, #128]	; (1e2e0 <open_ctree_fs_info@@Base+0xb8>)
   1e25e:	ldr	r3, [pc, #120]	; (1e2d8 <open_ctree_fs_info@@Base+0xb0>)
   1e260:	add	r2, pc
   1e262:	ldr	r3, [r2, r3]
   1e264:	ldr	r2, [r3, #0]
   1e266:	ldr	r3, [sp, #132]	; 0x84
   1e268:	eors	r2, r3
   1e26a:	beq.n	1e2cc <open_ctree_fs_info@@Base+0xa4>
   1e26c:	blx	84cc <__stack_chk_fail@plt>
   1e270:	ldr	r1, [sp, #40]	; 0x28
   1e272:	and.w	r1, r1, #61440	; 0xf000
   1e276:	cmp.w	r1, #32768	; 0x8000
   1e27a:	beq.n	1e28a <open_ctree_fs_info@@Base+0x62>
   1e27c:	cmp.w	r1, #24576	; 0x6000
   1e280:	beq.n	1e28a <open_ctree_fs_info@@Base+0x62>
   1e282:	ldr	r0, [pc, #96]	; (1e2e4 <open_ctree_fs_info@@Base+0xbc>)
   1e284:	mov	r1, r4
   1e286:	add	r0, pc
   1e288:	b.n	1e256 <open_ctree_fs_info@@Base+0x2e>
   1e28a:	tst.w	r6, #1
   1e28e:	mov	r0, r4
   1e290:	ite	ne
   1e292:	movne	r1, #2
   1e294:	moveq	r1, #0
   1e296:	blx	8734 <__open64_2@plt>
   1e29a:	subs	r5, r0, #0
   1e29c:	bge.n	1e2a6 <open_ctree_fs_info@@Base+0x7e>
   1e29e:	ldr	r0, [pc, #72]	; (1e2e8 <open_ctree_fs_info@@Base+0xc0>)
   1e2a0:	mov	r1, r4
   1e2a2:	add	r0, pc
   1e2a4:	b.n	1e256 <open_ctree_fs_info@@Base+0x2e>
   1e2a6:	str	r6, [sp, #16]
   1e2a8:	mov	r1, r4
   1e2aa:	ldrd	r6, r7, [sp, #176]	; 0xb0
   1e2ae:	mov	r2, r9
   1e2b0:	mov	r3, r8
   1e2b2:	strd	r6, r7, [sp, #8]
   1e2b6:	ldrd	r6, r7, [sp, #168]	; 0xa8
   1e2ba:	strd	r6, r7, [sp]
   1e2be:	bl	1df78 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   1e2c2:	mov	r4, r0
   1e2c4:	mov	r0, r5
   1e2c6:	blx	8960 <close@plt>
   1e2ca:	b.n	1e25c <open_ctree_fs_info@@Base+0x34>
   1e2cc:	mov	r0, r4
   1e2ce:	add	sp, #140	; 0x8c
   1e2d0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   1e2d4:	ldr	r2, [r2, #52]	; 0x34
   1e2d6:	movs	r4, r0
   1e2d8:	lsls	r4, r4, #8
   1e2da:	movs	r0, r0
   1e2dc:			; <UNDEFINED> instruction: 0xf7260001
   1e2e0:	ldr	r0, [r5, #48]	; 0x30
   1e2e2:	movs	r4, r0
   1e2e4:			; <UNDEFINED> instruction: 0xf7090001
   1e2e8:			; <UNDEFINED> instruction: 0xf7140001

0001e2ec <open_ctree@@Base>:
   1e2ec:	push	{r4, r5, r6, r7, lr}
   1e2ee:	sub	sp, #28
   1e2f0:	ldr	r1, [pc, #64]	; (1e334 <open_ctree@@Base+0x48>)
   1e2f2:	mov	r5, r0
   1e2f4:	ldr	r4, [sp, #48]	; 0x30
   1e2f6:	mov	r7, r2
   1e2f8:	ldr	r0, [pc, #60]	; (1e338 <open_ctree@@Base+0x4c>)
   1e2fa:	add	r1, pc
   1e2fc:	mov	r6, r3
   1e2fe:	movw	r2, #1335	; 0x537
   1e302:	and.w	r3, r4, #2048	; 0x800
   1e306:	add	r0, pc
   1e308:	adds	r1, #105	; 0x69
   1e30a:	bl	1c03c <btrfs_fs_roots_compare_roots@@Base+0x386>
   1e30e:	movs	r2, #0
   1e310:	movs	r3, #0
   1e312:	mov	r0, r5
   1e314:	strd	r2, r3, [sp, #8]
   1e318:	strd	r2, r3, [sp]
   1e31c:	mov	r2, r7
   1e31e:	mov	r3, r6
   1e320:	str	r4, [sp, #16]
   1e322:	bl	1e228 <open_ctree_fs_info@@Base>
   1e326:	cbz	r0, 1e330 <open_ctree@@Base+0x44>
   1e328:	lsls	r3, r4, #22
   1e32a:	ite	mi
   1e32c:	ldrmi	r0, [r0, #32]
   1e32e:	ldrpl	r0, [r0, #20]
   1e330:	add	sp, #28
   1e332:	pop	{r4, r5, r6, r7, pc}
   1e334:			; <UNDEFINED> instruction: 0xf71d0001
   1e338:	movt	r0, #22529	; 0x5801

0001e33c <open_ctree_fd@@Base>:
   1e33c:	push	{r4, r6, r7, lr}
   1e33e:	sub	sp, #24
   1e340:	ldr	r4, [sp, #40]	; 0x28
   1e342:	lsls	r6, r4, #20
   1e344:	bpl.n	1e358 <open_ctree_fd@@Base+0x1c>
   1e346:	ldr	r0, [pc, #48]	; (1e378 <open_ctree_fd@@Base+0x3c>)
   1e348:	mov	r2, r4
   1e34a:	movs	r3, #0
   1e34c:	add	r0, pc
   1e34e:	bl	1747c <__btrfs_error@@Base>
   1e352:	movs	r0, #0
   1e354:	add	sp, #24
   1e356:	pop	{r4, r6, r7, pc}
   1e358:	movs	r6, #0
   1e35a:	movs	r7, #0
   1e35c:	str	r4, [sp, #16]
   1e35e:	strd	r6, r7, [sp, #8]
   1e362:	strd	r6, r7, [sp]
   1e366:	bl	1df78 <btrfs_setup_chunk_tree_and_device_map@@Base+0x104>
   1e36a:	cmp	r0, #0
   1e36c:	beq.n	1e354 <open_ctree_fd@@Base+0x18>
   1e36e:	lsls	r3, r4, #22
   1e370:	ite	mi
   1e372:	ldrmi	r0, [r0, #32]
   1e374:	ldrpl	r0, [r0, #20]
   1e376:	b.n	1e354 <open_ctree_fd@@Base+0x18>
   1e378:	subw	r0, sl, #2049	; 0x801

0001e37c <btrfs_create_tree@@Base>:
   1e37c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e380:	mov	r9, r2
   1e382:	vpush	{d8}
   1e386:	mov	r8, r3
   1e388:	ldr	r2, [pc, #428]	; (1e538 <btrfs_create_tree@@Base+0x1bc>)
   1e38a:	mov	r7, r0
   1e38c:	ldr	r3, [pc, #428]	; (1e53c <btrfs_create_tree@@Base+0x1c0>)
   1e38e:	mov	sl, r1
   1e390:	add	r2, pc
   1e392:	movs	r0, #1
   1e394:	sub	sp, #60	; 0x3c
   1e396:	ldr	r3, [r2, r3]
   1e398:	ldr	r3, [r3, #0]
   1e39a:	str	r3, [sp, #52]	; 0x34
   1e39c:	mov.w	r3, #0
   1e3a0:	ldr	r3, [r1, #28]
   1e3a2:	mov.w	r1, #544	; 0x220
   1e3a6:	vmov	s16, r3
   1e3aa:	blx	8358 <calloc@plt+0x4>
   1e3ae:	mov	r4, r0
   1e3b0:	cmp	r0, #0
   1e3b2:	beq.w	1e524 <btrfs_create_tree@@Base+0x1a8>
   1e3b6:	mov	r2, r9
   1e3b8:	mov	r3, r8
   1e3ba:	mov	r1, sl
   1e3bc:	mov.w	fp, #132	; 0x84
   1e3c0:	bl	1c590 <btrfs_setup_root@@Base>
   1e3c4:	movs	r6, #0
   1e3c6:	str.w	r9, [r4, #447]	; 0x1bf
   1e3ca:	movs	r2, #0
   1e3cc:	str.w	r8, [r4, #451]	; 0x1c3
   1e3d0:	movs	r3, #0
   1e3d2:	strb.w	fp, [r4, #455]	; 0x1c7
   1e3d6:	mov	r1, r4
   1e3d8:	strd	r2, r3, [r4, #456]	; 0x1c8
   1e3dc:	mov	r0, r7
   1e3de:	strd	r2, r3, [sp, #24]
   1e3e2:	strd	r2, r3, [sp, #16]
   1e3e6:	strd	r6, r6, [sp, #8]
   1e3ea:	ldr.w	r2, [sl, #384]	; 0x180
   1e3ee:	strd	r9, r8, [sp]
   1e3f2:	bl	22a64 <btrfs_alloc_free_block@@Base>
   1e3f6:	cmn.w	r0, #4096	; 0x1000
   1e3fa:	mov	r5, r0
   1e3fc:	bls.n	1e41e <btrfs_create_tree@@Base+0xa2>
   1e3fe:	mov	r6, r0
   1e400:	mov	r0, r4
   1e402:	mov	r4, r6
   1e404:	blx	83f0 <free@plt+0x4>
   1e408:	ldr	r2, [pc, #308]	; (1e540 <btrfs_create_tree@@Base+0x1c4>)
   1e40a:	ldr	r3, [pc, #304]	; (1e53c <btrfs_create_tree@@Base+0x1c0>)
   1e40c:	add	r2, pc
   1e40e:	ldr	r3, [r2, r3]
   1e410:	ldr	r2, [r3, #0]
   1e412:	ldr	r3, [sp, #52]	; 0x34
   1e414:	eors	r2, r3
   1e416:	beq.w	1e52a <btrfs_create_tree@@Base+0x1ae>
   1e41a:	blx	84cc <__stack_chk_fail@plt>
   1e41e:	mov	r2, r6
   1e420:	mov	r1, r6
   1e422:	movs	r3, #101	; 0x65
   1e424:	bl	173a2 <memset_extent_buffer@@Base>
   1e428:	ldr	r3, [r5, #40]	; 0x28
   1e42a:	mov	r0, r5
   1e42c:	str.w	r3, [r5, #144]	; 0x90
   1e430:	ldr	r3, [r5, #44]	; 0x2c
   1e432:	str.w	r3, [r5, #148]	; 0x94
   1e436:	ldrd	r2, r3, [r7, #8]
   1e43a:	str.w	r9, [r5, #184]	; 0xb8
   1e43e:	str.w	r8, [r5, #188]	; 0xbc
   1e442:	str.w	r2, [r5, #176]	; 0xb0
   1e446:	str.w	r3, [r5, #180]	; 0xb4
   1e44a:	ldr.w	r2, [r5, #152]	; 0x98
   1e44e:	ldr.w	r3, [r5, #156]	; 0x9c
   1e452:	bic.w	r3, r3, #4278190080	; 0xff000000
   1e456:	str.w	r2, [r5, #152]	; 0x98
   1e45a:	orr.w	r3, r3, #16777216	; 0x1000000
   1e45e:	str.w	r3, [r5, #156]	; 0x9c
   1e462:	ldr.w	r1, [sl, #352]	; 0x160
   1e466:	movs	r3, #16
   1e468:	movs	r2, #32
   1e46a:	str	r5, [r4, #0]
   1e46c:	add	r1, r3
   1e46e:	bl	17330 <write_extent_buffer@@Base>
   1e472:	movs	r3, #16
   1e474:	movs	r2, #64	; 0x40
   1e476:	mov	r1, sl
   1e478:	mov	r0, r5
   1e47a:	bl	17330 <write_extent_buffer@@Base>
   1e47e:	mov	r0, r5
   1e480:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1e484:	ldr	r2, [r4, #0]
   1e486:	movs	r1, #1
   1e488:	add.w	r0, r4, #255	; 0xff
   1e48c:	ldr	r3, [r2, #80]	; 0x50
   1e48e:	adds	r3, #1
   1e490:	str	r3, [r2, #80]	; 0x50
   1e492:	ldr	r3, [r4, #0]
   1e494:	movs	r2, #0
   1e496:	str.w	r1, [r4, #492]	; 0x1ec
   1e49a:	str	r3, [r4, #4]
   1e49c:	movs	r3, #0
   1e49e:	strd	r2, r3, [r4, #216]	; 0xd8
   1e4a2:	strd	r2, r3, [r4, #192]	; 0xc0
   1e4a6:	ldrd	r2, r3, [r5, #40]	; 0x28
   1e4aa:	strb.w	r6, [r4, #246]	; 0xf6
   1e4ae:	str.w	r1, [r4, #224]	; 0xe0
   1e4b2:	mov	r1, r6
   1e4b4:	strd	r2, r3, [r4, #184]	; 0xb8
   1e4b8:	ldrd	r2, r3, [r7, #8]
   1e4bc:	strd	r2, r3, [r4, #168]	; 0xa8
   1e4c0:	movs	r2, #0
   1e4c2:	ldr	r3, [r5, #76]	; 0x4c
   1e4c4:	strd	r3, r6, [r4, #200]	; 0xc8
   1e4c8:	movs	r3, #0
   1e4ca:	strd	r2, r3, [r4, #208]	; 0xd0
   1e4ce:	strd	r2, r3, [r4, #176]	; 0xb0
   1e4d2:	movs	r2, #16
   1e4d4:	blx	8780 <memset@plt+0x4>
   1e4d8:	strb.w	r6, [r4, #245]	; 0xf5
   1e4dc:	vmov	r1, s16
   1e4e0:	add.w	r3, r4, #8
   1e4e4:	add	r2, sp, #32
   1e4e6:	mov	r0, r7
   1e4e8:	strb.w	r6, [sp, #41]	; 0x29
   1e4ec:	strb.w	r6, [sp, #42]	; 0x2a
   1e4f0:	strb.w	r6, [sp, #43]	; 0x2b
   1e4f4:	strb.w	r6, [sp, #44]	; 0x2c
   1e4f8:	strb.w	r6, [sp, #45]	; 0x2d
   1e4fc:	strb.w	r6, [sp, #46]	; 0x2e
   1e500:	strb.w	r6, [sp, #47]	; 0x2f
   1e504:	strb.w	r6, [sp, #48]	; 0x30
   1e508:	strd	r9, r8, [sp, #32]
   1e50c:	strb.w	fp, [sp, #40]	; 0x28
   1e510:	bl	27bb0 <btrfs_insert_root@@Base>
   1e514:	mov	r6, r0
   1e516:	cmp	r0, #0
   1e518:	beq.w	1e408 <btrfs_create_tree@@Base+0x8c>
   1e51c:	mov	r0, r5
   1e51e:	bl	16c20 <free_extent_buffer@@Base>
   1e522:	b.n	1e400 <btrfs_create_tree@@Base+0x84>
   1e524:	mvn.w	r4, #11
   1e528:	b.n	1e408 <btrfs_create_tree@@Base+0x8c>
   1e52a:	mov	r0, r4
   1e52c:	add	sp, #60	; 0x3c
   1e52e:	vpop	{d8}
   1e532:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e536:	nop
   1e538:	ldr	r0, [r7, #28]
   1e53a:	movs	r4, r0
   1e53c:	lsls	r4, r4, #8
   1e53e:	movs	r0, r0
   1e540:	ldr	r4, [r7, #20]
   1e542:	movs	r4, r0
   1e544:	push	{r4, r5, lr}
   1e546:	mov	r1, r0
   1e548:	ldr.w	r3, [r0, #356]	; 0x164
   1e54c:	and.w	r2, r2, #7
   1e550:	add.w	r1, r1, #356	; 0x164
   1e554:	sub.w	r0, r3, #44	; 0x2c
   1e558:	add.w	r3, r0, #44	; 0x2c
   1e55c:	cmp	r3, r1
   1e55e:	bne.n	1e564 <btrfs_create_tree@@Base+0x1e8>
   1e560:	movs	r0, #0
   1e562:	pop	{r4, r5, pc}
   1e564:	ldr	r3, [r0, #0]
   1e566:	movs	r5, #0
   1e568:	and.w	r4, r2, r3
   1e56c:	orrs.w	r3, r4, r5
   1e570:	bne.n	1e562 <btrfs_create_tree@@Base+0x1e6>
   1e572:	ldr	r0, [r0, #44]	; 0x2c
   1e574:	subs	r0, #44	; 0x2c
   1e576:	b.n	1e558 <btrfs_create_tree@@Base+0x1dc>
   1e578:	push	{r4, r5, r6, r7, lr}
   1e57a:	movs	r3, #0
   1e57c:	and.w	r4, r2, #2040	; 0x7f8
   1e580:	mov	r5, r3
   1e582:	orrs.w	r1, r4, r5
   1e586:	beq.n	1e5d2 <btrfs_create_tree@@Base+0x256>
   1e588:	and.w	r6, r2, #1
   1e58c:	mov	r7, r3
   1e58e:	orrs.w	r3, r6, r7
   1e592:	and.w	r6, r2, #4
   1e596:	mov.w	r7, #0
   1e59a:	ittt	ne
   1e59c:	ldrne.w	r3, [r0, #248]	; 0xf8
   1e5a0:	orrne	r3, r4
   1e5a2:	strne.w	r3, [r0, #248]	; 0xf8
   1e5a6:	orrs.w	r3, r6, r7
   1e5aa:	and.w	r6, r2, #2
   1e5ae:	mov.w	r7, #0
   1e5b2:	itttt	ne
   1e5b4:	ldrdne	r1, r3, [r0, #256]	; 0x100
   1e5b8:	orrne	r3, r5
   1e5ba:	orrne	r1, r4
   1e5bc:	strdne	r1, r3, [r0, #256]	; 0x100
   1e5c0:	orrs.w	r3, r6, r7
   1e5c4:	itttt	ne
   1e5c6:	ldrdne	r2, r3, [r0, #264]	; 0x108
   1e5ca:	orrne	r2, r4
   1e5cc:	orrne	r3, r5
   1e5ce:	strdne	r2, r3, [r0, #264]	; 0x108
   1e5d2:	pop	{r4, r5, r6, r7, pc}
   1e5d4:	push	{r4, lr}
   1e5d6:	mov	r4, r1
   1e5d8:	ldr	r1, [pc, #84]	; (1e630 <btrfs_create_tree@@Base+0x2b4>)
   1e5da:	sub	sp, #24
   1e5dc:	ldr	r3, [pc, #84]	; (1e634 <btrfs_create_tree@@Base+0x2b8>)
   1e5de:	add	r1, pc
   1e5e0:	ldr	r3, [r1, r3]
   1e5e2:	mov	r1, sp
   1e5e4:	ldr	r3, [r3, #0]
   1e5e6:	str	r3, [sp, #20]
   1e5e8:	mov.w	r3, #0
   1e5ec:	movs	r3, #25
   1e5ee:	muls	r2, r3
   1e5f0:	movs	r3, #17
   1e5f2:	adds	r2, #101	; 0x65
   1e5f4:	bl	1731a <read_extent_buffer@@Base>
   1e5f8:	ldr.w	r3, [sp, #13]
   1e5fc:	ldr.w	r2, [sp, #9]
   1e600:	str.w	r3, [r4, #13]
   1e604:	ldrb.w	r3, [sp, #8]
   1e608:	str.w	r2, [r4, #9]
   1e60c:	ldr	r2, [pc, #40]	; (1e638 <btrfs_create_tree@@Base+0x2bc>)
   1e60e:	strb	r3, [r4, #8]
   1e610:	ldr	r3, [sp, #0]
   1e612:	add	r2, pc
   1e614:	str	r3, [r4, #0]
   1e616:	ldr	r3, [sp, #4]
   1e618:	str	r3, [r4, #4]
   1e61a:	ldr	r3, [pc, #24]	; (1e634 <btrfs_create_tree@@Base+0x2b8>)
   1e61c:	ldr	r3, [r2, r3]
   1e61e:	ldr	r2, [r3, #0]
   1e620:	ldr	r3, [sp, #20]
   1e622:	eors	r2, r3
   1e624:	beq.n	1e62a <btrfs_create_tree@@Base+0x2ae>
   1e626:	blx	84cc <__stack_chk_fail@plt>
   1e62a:	add	sp, #24
   1e62c:	pop	{r4, pc}
   1e62e:	nop
   1e630:	str	r2, [r5, #120]	; 0x78
   1e632:	movs	r4, r0
   1e634:	lsls	r4, r4, #8
   1e636:	movs	r0, r0
   1e638:	str	r6, [r6, #116]	; 0x74
   1e63a:	movs	r4, r0
   1e63c:	ldr	r2, [pc, #60]	; (1e67c <btrfs_create_tree@@Base+0x300>)
   1e63e:	movs	r1, #16
   1e640:	ldr	r3, [pc, #60]	; (1e680 <btrfs_create_tree@@Base+0x304>)
   1e642:	push	{r4, lr}
   1e644:	add	r2, pc
   1e646:	sub	sp, #72	; 0x48
   1e648:	add	r4, sp, #4
   1e64a:	ldr	r3, [r2, r3]
   1e64c:	mov	r0, r4
   1e64e:	ldr	r3, [r3, #0]
   1e650:	str	r3, [sp, #68]	; 0x44
   1e652:	mov.w	r3, #0
   1e656:	blx	8680 <backtrace@plt>
   1e65a:	movs	r2, #2
   1e65c:	mov	r1, r0
   1e65e:	mov	r0, r4
   1e660:	blx	8990 <backtrace_symbols_fd@plt>
   1e664:	ldr	r2, [pc, #28]	; (1e684 <btrfs_create_tree@@Base+0x308>)
   1e666:	ldr	r3, [pc, #24]	; (1e680 <btrfs_create_tree@@Base+0x304>)
   1e668:	add	r2, pc
   1e66a:	ldr	r3, [r2, r3]
   1e66c:	ldr	r2, [r3, #0]
   1e66e:	ldr	r3, [sp, #68]	; 0x44
   1e670:	eors	r2, r3
   1e672:	beq.n	1e678 <btrfs_create_tree@@Base+0x2fc>
   1e674:	blx	84cc <__stack_chk_fail@plt>
   1e678:	add	sp, #72	; 0x48
   1e67a:	pop	{r4, pc}
   1e67c:	str	r4, [r0, #116]	; 0x74
   1e67e:	movs	r4, r0
   1e680:	lsls	r4, r4, #8
   1e682:	movs	r0, r0
   1e684:	str	r0, [r4, #112]	; 0x70
   1e686:	movs	r4, r0
   1e688:	push	{r0, r1, r2, lr}
   1e68a:	movs	r3, #1
   1e68c:	str	r3, [sp, #0]
   1e68e:	ldr	r3, [r2, #32]
   1e690:	bl	1b3f8 <btrfs_del_items@@Base>
   1e694:	add	sp, #12
   1e696:	ldr.w	pc, [sp], #4
   1e69a:	push	{r4, r5, lr}
   1e69c:	sub	sp, #20
   1e69e:	ldr	r4, [pc, #40]	; (1e6c8 <btrfs_create_tree@@Base+0x34c>)
   1e6a0:	ldr	r5, [pc, #40]	; (1e6cc <btrfs_create_tree@@Base+0x350>)
   1e6a2:	add	r4, pc
   1e6a4:	ldr	r4, [r4, r5]
   1e6a6:	ldr	r5, [sp, #32]
   1e6a8:	strd	r3, r2, [sp]
   1e6ac:	mov	r3, r1
   1e6ae:	ldr	r2, [pc, #32]	; (1e6d0 <btrfs_create_tree@@Base+0x354>)
   1e6b0:	movs	r1, #1
   1e6b2:	strd	r0, r5, [sp, #8]
   1e6b6:	add	r2, pc
   1e6b8:	ldr	r0, [r4, #0]
   1e6ba:	blx	881c <__fprintf_chk@plt+0x4>
   1e6be:	add	sp, #20
   1e6c0:	ldmia.w	sp!, {r4, r5, lr}
   1e6c4:	b.n	1e63c <btrfs_create_tree@@Base+0x2c0>
   1e6c6:	nop
   1e6c8:	str	r6, [r4, #108]	; 0x6c
   1e6ca:	movs	r4, r0
   1e6cc:	lsls	r4, r6, #8
   1e6ce:	movs	r0, r0
   1e6d0:	rev	r2, r6
   1e6d2:	movs	r1, r0
   1e6d4:	push	{r4}
   1e6d6:	ldr	r4, [sp, #4]
   1e6d8:	cbz	r4, 1e6e4 <btrfs_create_tree@@Base+0x368>
   1e6da:	movs	r4, #1
   1e6dc:	str	r4, [sp, #4]
   1e6de:	ldr.w	r4, [sp], #4
   1e6e2:	b.n	1e69a <btrfs_create_tree@@Base+0x31e>
   1e6e4:	ldr.w	r4, [sp], #4
   1e6e8:	bx	lr
   1e6ea:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e6ee:	mov	r7, r0
   1e6f0:	ldr	r5, [pc, #452]	; (1e8b8 <btrfs_create_tree@@Base+0x53c>)
   1e6f2:	sub	sp, #100	; 0x64
   1e6f4:	ldr	r0, [pc, #452]	; (1e8bc <btrfs_create_tree@@Base+0x540>)
   1e6f6:	mov	r6, r1
   1e6f8:	add	r5, pc
   1e6fa:	mov	r4, r2
   1e6fc:	ldrb.w	r9, [r4, #196]	; 0xc4
   1e700:	ldr	r0, [r5, r0]
   1e702:	ldr	r2, [pc, #444]	; (1e8c0 <btrfs_create_tree@@Base+0x544>)
   1e704:	ldr	r0, [r0, #0]
   1e706:	str	r0, [sp, #92]	; 0x5c
   1e708:	mov.w	r0, #0
   1e70c:	ldr.w	r0, [r6, #488]	; 0x1e8
   1e710:	add	r2, pc
   1e712:	ldr	r1, [sp, #136]	; 0x88
   1e714:	orrs.w	r0, r9, r0
   1e718:	bne.n	1e734 <btrfs_create_tree@@Base+0x3b8>
   1e71a:	mov.w	sl, #0
   1e71e:	ldr	r2, [pc, #420]	; (1e8c4 <btrfs_create_tree@@Base+0x548>)
   1e720:	ldr	r3, [pc, #408]	; (1e8bc <btrfs_create_tree@@Base+0x540>)
   1e722:	add	r2, pc
   1e724:	ldr	r3, [r2, r3]
   1e726:	ldr	r2, [r3, #0]
   1e728:	ldr	r3, [sp, #92]	; 0x5c
   1e72a:	eors	r2, r3
   1e72c:	beq.w	1e8ae <btrfs_create_tree@@Base+0x532>
   1e730:	blx	84cc <__stack_chk_fail@plt>
   1e734:	cmp	r1, #0
   1e736:	bne.w	1e846 <btrfs_create_tree@@Base+0x4ca>
   1e73a:	ldr	r1, [pc, #396]	; (1e8c8 <btrfs_create_tree@@Base+0x54c>)
   1e73c:	ldr.w	r8, [r2, r1]
   1e740:	cmp	r3, #0
   1e742:	beq.w	1e84a <btrfs_create_tree@@Base+0x4ce>
   1e746:	ldrd	r2, r3, [r4, #40]	; 0x28
   1e74a:	strd	r2, r3, [sp, #40]	; 0x28
   1e74e:	movs	r5, #0
   1e750:	ldr.w	r3, [r4, #184]	; 0xb8
   1e754:	str	r3, [sp, #48]	; 0x30
   1e756:	ldr.w	r3, [r4, #188]	; 0xbc
   1e75a:	str	r3, [sp, #52]	; 0x34
   1e75c:	ldr.w	r3, [r4, #192]	; 0xc0
   1e760:	str	r3, [sp, #56]	; 0x38
   1e762:	add.w	r3, r9, #4294967295	; 0xffffffff
   1e766:	asrs	r2, r3, #31
   1e768:	mov	r1, r3
   1e76a:	strd	r1, r2, [sp, #64]	; 0x40
   1e76e:	ldr	r3, [sp, #56]	; 0x38
   1e770:	cmp	r5, r3
   1e772:	beq.n	1e71a <btrfs_create_tree@@Base+0x39e>
   1e774:	cmp.w	r9, #0
   1e778:	bne.n	1e850 <btrfs_create_tree@@Base+0x4d4>
   1e77a:	add	r1, sp, #72	; 0x48
   1e77c:	mov	r2, r5
   1e77e:	mov	r0, r4
   1e780:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   1e784:	ldrb.w	r3, [sp, #80]	; 0x50
   1e788:	cmp	r3, #108	; 0x6c
   1e78a:	bne.w	1e8aa <btrfs_create_tree@@Base+0x52e>
   1e78e:	movs	r3, #25
   1e790:	mla	r3, r3, r5, r4
   1e794:	ldr.w	r2, [r3, #214]	; 0xd6
   1e798:	add	r2, r4
   1e79a:	add.w	r3, r2, #197	; 0xc5
   1e79e:	ldrb.w	r2, [r2, #217]	; 0xd9
   1e7a2:	cmp	r2, #0
   1e7a4:	beq.w	1e8aa <btrfs_create_tree@@Base+0x52e>
   1e7a8:	mov	r2, r3
   1e7aa:	ldr.w	sl, [r2, #21]!
   1e7ae:	ldr.w	fp, [r2, #4]
   1e7b2:	orrs.w	r2, sl, fp
   1e7b6:	beq.n	1e8aa <btrfs_create_tree@@Base+0x52e>
   1e7b8:	mov	r2, r3
   1e7ba:	ldr.w	r0, [r3, #37]!
   1e7be:	ldr.w	r1, [r2, #29]!
   1e7c2:	ldr.w	ip, [r3, #4]
   1e7c6:	ldr.w	lr, [r2, #4]
   1e7ca:	ldr.w	r2, [sp, #81]	; 0x51
   1e7ce:	str	r1, [sp, #60]	; 0x3c
   1e7d0:	ldr.w	r1, [sp, #85]	; 0x55
   1e7d4:	subs	r2, r2, r0
   1e7d6:	str.w	r2, [sp, #81]	; 0x51
   1e7da:	mov	r0, r7
   1e7dc:	sbc.w	r1, r1, ip
   1e7e0:	strd	r2, r1, [sp, #32]
   1e7e4:	ldrd	r2, r3, [sp, #72]	; 0x48
   1e7e8:	str.w	r1, [sp, #85]	; 0x55
   1e7ec:	mov	r1, r6
   1e7ee:	strd	r2, r3, [sp, #24]
   1e7f2:	ldr	r3, [sp, #48]	; 0x30
   1e7f4:	str	r3, [sp, #16]
   1e7f6:	ldr	r3, [sp, #52]	; 0x34
   1e7f8:	str	r3, [sp, #20]
   1e7fa:	ldrd	r2, r3, [sp, #40]	; 0x28
   1e7fe:	strd	r2, r3, [sp, #8]
   1e802:	mov	r2, sl
   1e804:	ldr	r3, [sp, #60]	; 0x3c
   1e806:	strd	r3, lr, [sp]
   1e80a:	mov	r3, fp
   1e80c:	blx	r8
   1e80e:	mov	sl, r0
   1e810:	cmp	r0, #0
   1e812:	beq.n	1e8aa <btrfs_create_tree@@Base+0x52e>
   1e814:	ldr	r2, [pc, #180]	; (1e8cc <btrfs_create_tree@@Base+0x550>)
   1e816:	movs	r3, #1
   1e818:	ldr	r1, [pc, #180]	; (1e8d0 <btrfs_create_tree@@Base+0x554>)
   1e81a:	ldr	r0, [pc, #184]	; (1e8d4 <btrfs_create_tree@@Base+0x558>)
   1e81c:	add	r2, pc
   1e81e:	add	r1, pc
   1e820:	str	r3, [sp, #0]
   1e822:	add	r0, pc
   1e824:	movw	r3, #1502	; 0x5de
   1e828:	bl	1e69a <btrfs_create_tree@@Base+0x31e>
   1e82c:	ldr	r2, [pc, #168]	; (1e8d8 <btrfs_create_tree@@Base+0x55c>)
   1e82e:	ldr	r1, [pc, #172]	; (1e8dc <btrfs_create_tree@@Base+0x560>)
   1e830:	movs	r3, #1
   1e832:	ldr	r0, [pc, #172]	; (1e8e0 <btrfs_create_tree@@Base+0x564>)
   1e834:	add	r2, pc
   1e836:	str	r3, [sp, #0]
   1e838:	add	r1, pc
   1e83a:	add	r0, pc
   1e83c:	movw	r3, #1518	; 0x5ee
   1e840:	bl	1e69a <btrfs_create_tree@@Base+0x31e>
   1e844:	b.n	1e71e <btrfs_create_tree@@Base+0x3a2>
   1e846:	ldr	r1, [pc, #156]	; (1e8e4 <btrfs_create_tree@@Base+0x568>)
   1e848:	b.n	1e73c <btrfs_create_tree@@Base+0x3c0>
   1e84a:	movs	r2, #0
   1e84c:	movs	r3, #0
   1e84e:	b.n	1e74a <btrfs_create_tree@@Base+0x3ce>
   1e850:	add.w	r3, r5, r5, lsl #5
   1e854:	movs	r0, #0
   1e856:	add	r3, r4
   1e858:	movs	r1, #0
   1e85a:	ldr.w	r2, [r3, #214]!
   1e85e:	ldr	r3, [r3, #4]
   1e860:	strd	r0, r1, [sp, #32]
   1e864:	ldrd	r0, r1, [sp, #64]	; 0x40
   1e868:	strd	r0, r1, [sp, #24]
   1e86c:	ldr	r1, [sp, #48]	; 0x30
   1e86e:	str	r1, [sp, #16]
   1e870:	ldr	r1, [sp, #52]	; 0x34
   1e872:	str	r1, [sp, #20]
   1e874:	ldrd	r0, r1, [sp, #40]	; 0x28
   1e878:	strd	r0, r1, [sp, #8]
   1e87c:	mov	r0, r7
   1e87e:	ldr.w	r1, [r6, #464]	; 0x1d0
   1e882:	ldr.w	r1, [r1, #384]	; 0x180
   1e886:	str	r1, [sp, #0]
   1e888:	movs	r1, #0
   1e88a:	str	r1, [sp, #4]
   1e88c:	mov	r1, r6
   1e88e:	blx	r8
   1e890:	mov	sl, r0
   1e892:	cbz	r0, 1e8aa <btrfs_create_tree@@Base+0x52e>
   1e894:	ldr	r2, [pc, #80]	; (1e8e8 <btrfs_create_tree@@Base+0x56c>)
   1e896:	movs	r3, #1
   1e898:	ldr	r1, [pc, #80]	; (1e8ec <btrfs_create_tree@@Base+0x570>)
   1e89a:	ldr	r0, [pc, #84]	; (1e8f0 <btrfs_create_tree@@Base+0x574>)
   1e89c:	add	r2, pc
   1e89e:	str	r3, [sp, #0]
   1e8a0:	add	r1, pc
   1e8a2:	add	r0, pc
   1e8a4:	movw	r3, #1511	; 0x5e7
   1e8a8:	b.n	1e828 <btrfs_create_tree@@Base+0x4ac>
   1e8aa:	adds	r5, #1
   1e8ac:	b.n	1e76e <btrfs_create_tree@@Base+0x3f2>
   1e8ae:	mov	r0, sl
   1e8b0:	add	sp, #100	; 0x64
   1e8b2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e8b6:	nop
   1e8b8:	str	r0, [r2, #104]	; 0x68
   1e8ba:	movs	r4, r0
   1e8bc:	lsls	r4, r4, #8
   1e8be:	movs	r0, r0
   1e8c0:	str	r0, [r7, #100]	; 0x64
   1e8c2:	movs	r4, r0
   1e8c4:	str	r6, [r4, #100]	; 0x64
   1e8c6:	movs	r4, r0
   1e8c8:	lsls	r0, r1, #9
   1e8ca:	movs	r0, r0
   1e8cc:	vld1.8	{d0[0]}, [r0], r1
   1e8d0:			; <UNDEFINED> instruction: 0xf26d0001
   1e8d4:	rsb	r0, r9, #8454144	; 0x810000
   1e8d8:	vst1.8	{d0[0]}, [r8], r1
   1e8dc:			; <UNDEFINED> instruction: 0xf2530001
   1e8e0:	subs.w	r0, r1, #8454144	; 0x810000
   1e8e4:	lsls	r4, r3, #9
   1e8e6:	movs	r0, r0
   1e8e8:	vld4.8	{d0-d3}, [r0], r1
   1e8ec:			; <UNDEFINED> instruction: 0xf1eb0001
   1e8f0:	adc.w	r0, r9, #8454144	; 0x810000
   1e8f4:	push	{r0, r1, r2, r3, r4, lr}
   1e8f6:	ldr	r4, [pc, #40]	; (1e920 <btrfs_create_tree@@Base+0x5a4>)
   1e8f8:	ldr	r5, [pc, #40]	; (1e924 <btrfs_create_tree@@Base+0x5a8>)
   1e8fa:	add	r4, pc
   1e8fc:	ldr	r4, [r4, r5]
   1e8fe:	ldr	r5, [sp, #24]
   1e900:	strd	r3, r2, [sp]
   1e904:	mov	r3, r1
   1e906:	ldr	r2, [pc, #32]	; (1e928 <btrfs_create_tree@@Base+0x5ac>)
   1e908:	movs	r1, #1
   1e90a:	strd	r0, r5, [sp, #8]
   1e90e:	add	r2, pc
   1e910:	ldr	r0, [r4, #0]
   1e912:	blx	881c <__fprintf_chk@plt+0x4>
   1e916:	bl	1e63c <btrfs_create_tree@@Base+0x2c0>
   1e91a:	blx	8948 <abort@plt>
   1e91e:	nop
   1e920:	str	r6, [r1, #72]	; 0x48
   1e922:	movs	r4, r0
   1e924:	lsls	r4, r6, #8
   1e926:	movs	r0, r0
   1e928:	cbz	r3, 1e94c <btrfs_create_tree@@Base+0x5d0>
   1e92a:	movs	r1, r0
   1e92c:	push	{r0, r1, r4, lr}
   1e92e:	ldr	r4, [sp, #16]
   1e930:	cbz	r4, 1e938 <btrfs_create_tree@@Base+0x5bc>
   1e932:	str	r4, [sp, #0]
   1e934:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   1e938:	add	sp, #8
   1e93a:	pop	{r4, pc}
   1e93c:	cmp	r0, #176	; 0xb0
   1e93e:	push	{r0, r1, r2, lr}
   1e940:	beq.n	1e968 <btrfs_create_tree@@Base+0x5ec>
   1e942:	cmp	r0, #182	; 0xb6
   1e944:	beq.n	1e968 <btrfs_create_tree@@Base+0x5ec>
   1e946:	cmp	r0, #184	; 0xb8
   1e948:	beq.n	1e970 <btrfs_create_tree@@Base+0x5f4>
   1e94a:	cmp	r0, #178	; 0xb2
   1e94c:	beq.n	1e974 <btrfs_create_tree@@Base+0x5f8>
   1e94e:	ldr	r2, [pc, #40]	; (1e978 <btrfs_create_tree@@Base+0x5fc>)
   1e950:	movs	r3, #1
   1e952:	ldr	r1, [pc, #40]	; (1e97c <btrfs_create_tree@@Base+0x600>)
   1e954:	ldr	r0, [pc, #40]	; (1e980 <btrfs_create_tree@@Base+0x604>)
   1e956:	add	r2, pc
   1e958:	str	r3, [sp, #0]
   1e95a:	adds	r2, #16
   1e95c:	add	r1, pc
   1e95e:	add	r0, pc
   1e960:	movw	r3, #1818	; 0x71a
   1e964:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   1e968:	movs	r0, #9
   1e96a:	add	sp, #12
   1e96c:	ldr.w	pc, [sp], #4
   1e970:	movs	r0, #13
   1e972:	b.n	1e96a <btrfs_create_tree@@Base+0x5ee>
   1e974:	movs	r0, #29
   1e976:	b.n	1e96a <btrfs_create_tree@@Base+0x5ee>
   1e978:	str??.w	r0, [r6, r1]
   1e97c:	ittee	hi
   1e97e:	movhi	r1, r0
   1e980:	eorhi.w	r0, sp, #8454144	; 0x810000
   1e984:	stmdbls	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e988:	movls	r5, r3
   1e98a:	vpush	{d8}
   1e98e:	mov	r6, r2
   1e990:	movs	r2, #25
   1e992:	mov	r7, r1
   1e994:	vmov	s16, r0
   1e998:	ldr.w	fp, [r1]
   1e99c:	sub	sp, #44	; 0x2c
   1e99e:	ldr	r3, [r1, #32]
   1e9a0:	add.w	r4, fp, #96	; 0x60
   1e9a4:	mla	r3, r2, r3, r4
   1e9a8:	adds	r2, r5, #1
   1e9aa:	ldr.w	r3, [r3, #118]	; 0x76
   1e9ae:	add.w	r3, r3, #101	; 0x65
   1e9b2:	str	r3, [sp, #12]
   1e9b4:	add.w	r8, r4, r3
   1e9b8:	ldr.w	r9, [r4, r3]
   1e9bc:	ldr.w	sl, [r8, #4]
   1e9c0:	bne.n	1ea38 <btrfs_create_tree@@Base+0x6bc>
   1e9c2:	cmp.w	sl, #0
   1e9c6:	itte	eq
   1e9c8:	cmpeq.w	r9, #1
   1e9cc:	moveq	r3, #1
   1e9ce:	movne	r3, #0
   1e9d0:	ldr	r2, [pc, #336]	; (1eb24 <btrfs_create_tree@@Base+0x7a8>)
   1e9d2:	ldr	r1, [pc, #340]	; (1eb28 <btrfs_create_tree@@Base+0x7ac>)
   1e9d4:	ldr	r0, [pc, #340]	; (1eb2c <btrfs_create_tree@@Base+0x7b0>)
   1e9d6:	add	r2, pc
   1e9d8:	adds	r2, #45	; 0x2d
   1e9da:	add	r1, pc
   1e9dc:	str	r3, [sp, #0]
   1e9de:	add	r0, pc
   1e9e0:	movw	r3, #1129	; 0x469
   1e9e4:	strd	r1, r2, [sp, #16]
   1e9e8:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   1e9ec:	asrs	r3, r5, #31
   1e9ee:	mov	r2, r5
   1e9f0:	strd	r2, r3, [sp, #32]
   1e9f4:	ldr	r3, [sp, #12]
   1e9f6:	adds.w	r9, r9, r5
   1e9fa:	adc.w	sl, sl, r5, asr #31
   1e9fe:	ldrd	r1, r2, [sp, #16]
   1ea02:	str.w	r9, [r4, r3]
   1ea06:	str.w	sl, [r8, #4]
   1ea0a:	ldrb.w	sl, [r4, r6]
   1ea0e:	cmp.w	sl, #178	; 0xb2
   1ea12:	bne.n	1ea3c <btrfs_create_tree@@Base+0x6c0>
   1ea14:	add.w	r9, r6, #1
   1ea18:	add.w	r3, r4, r9
   1ea1c:	ldr	r3, [r3, #24]
   1ea1e:	str	r3, [sp, #16]
   1ea20:	movs	r3, #0
   1ea22:	mov	r8, r3
   1ea24:	str	r3, [sp, #20]
   1ea26:	adds	r5, #1
   1ea28:	bne.n	1eacc <btrfs_create_tree@@Base+0x750>
   1ea2a:	ldrd	r3, r2, [sp, #16]
   1ea2e:	orrs	r3, r2
   1ea30:	ite	eq
   1ea32:	moveq	r3, #1
   1ea34:	movne	r3, #0
   1ea36:	b.n	1ea78 <btrfs_create_tree@@Base+0x6fc>
   1ea38:	movs	r3, #0
   1ea3a:	b.n	1e9d0 <btrfs_create_tree@@Base+0x654>
   1ea3c:	cmp.w	sl, #184	; 0xb8
   1ea40:	bne.n	1ea54 <btrfs_create_tree@@Base+0x6d8>
   1ea42:	add.w	r8, r6, #9
   1ea46:	ldr.w	r3, [r4, r8]
   1ea4a:	str	r3, [sp, #16]
   1ea4c:	movs	r3, #0
   1ea4e:	mov	r9, r3
   1ea50:	str	r3, [sp, #20]
   1ea52:	b.n	1ea26 <btrfs_create_tree@@Base+0x6aa>
   1ea54:	adds	r5, #1
   1ea56:	ldr	r0, [pc, #216]	; (1eb30 <btrfs_create_tree@@Base+0x7b4>)
   1ea58:	mov.w	r8, #0
   1ea5c:	movw	r3, #1143	; 0x477
   1ea60:	it	ne
   1ea62:	movne	r5, #1
   1ea64:	add	r0, pc
   1ea66:	str	r5, [sp, #0]
   1ea68:	mov	r9, r8
   1ea6a:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1ea6e:	movs	r3, #1
   1ea70:	str	r3, [sp, #16]
   1ea72:	mov	r3, r8
   1ea74:	str.w	r8, [sp, #20]
   1ea78:	ldr	r2, [pc, #184]	; (1eb34 <btrfs_create_tree@@Base+0x7b8>)
   1ea7a:	ldr	r1, [pc, #188]	; (1eb38 <btrfs_create_tree@@Base+0x7bc>)
   1ea7c:	ldr	r0, [pc, #188]	; (1eb3c <btrfs_create_tree@@Base+0x7c0>)
   1ea7e:	add	r2, pc
   1ea80:	adds	r2, #45	; 0x2d
   1ea82:	str	r3, [sp, #0]
   1ea84:	add	r1, pc
   1ea86:	movw	r3, #1146	; 0x47a
   1ea8a:	add	r0, pc
   1ea8c:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1ea90:	ldr	r2, [sp, #16]
   1ea92:	ldr	r3, [sp, #32]
   1ea94:	adds	r3, r3, r2
   1ea96:	ldr	r2, [sp, #36]	; 0x24
   1ea98:	str	r3, [sp, #24]
   1ea9a:	ldr	r3, [sp, #20]
   1ea9c:	adc.w	r3, r2, r3
   1eaa0:	str	r3, [sp, #28]
   1eaa2:	ldrd	r2, r3, [sp, #24]
   1eaa6:	orrs	r3, r2
   1eaa8:	beq.n	1ead0 <btrfs_create_tree@@Base+0x754>
   1eaaa:	cmp.w	sl, #178	; 0xb2
   1eaae:	ldr	r3, [sp, #24]
   1eab0:	itet	eq
   1eab2:	addeq	r4, r9
   1eab4:	strne.w	r3, [r4, r8]
   1eab8:	streq	r3, [r4, #24]
   1eaba:	mov	r0, fp
   1eabc:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1eac0:	movs	r0, #0
   1eac2:	add	sp, #44	; 0x2c
   1eac4:	vpop	{d8}
   1eac8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eacc:	movs	r3, #0
   1eace:	b.n	1ea78 <btrfs_create_tree@@Base+0x6fc>
   1ead0:	mov	r0, sl
   1ead2:	bl	1e93c <btrfs_create_tree@@Base+0x5c0>
   1ead6:	ldr	r3, [r7, #32]
   1ead8:	movs	r2, #25
   1eada:	mla	r4, r2, r3, r4
   1eade:	ldr	r3, [sp, #12]
   1eae0:	ldr.w	r4, [r4, #122]	; 0x7a
   1eae4:	add	r3, r4
   1eae6:	adds	r2, r6, r0
   1eae8:	mov	r5, r0
   1eaea:	cmp	r3, r2
   1eaec:	bls.n	1eafa <btrfs_create_tree@@Base+0x77e>
   1eaee:	subs	r3, r3, r6
   1eaf0:	mov	r1, r6
   1eaf2:	subs	r3, r3, r0
   1eaf4:	mov	r0, fp
   1eaf6:	bl	1738c <memmove_extent_buffer@@Base>
   1eafa:	subs	r2, r4, r5
   1eafc:	mov	r1, r7
   1eafe:	vmov	r0, s16
   1eb02:	movs	r3, #1
   1eb04:	bl	19e7c <btrfs_truncate_item@@Base>
   1eb08:	ldr	r2, [pc, #52]	; (1eb40 <btrfs_create_tree@@Base+0x7c4>)
   1eb0a:	ldr	r1, [pc, #56]	; (1eb44 <btrfs_create_tree@@Base+0x7c8>)
   1eb0c:	movw	r3, #1164	; 0x48c
   1eb10:	add	r2, pc
   1eb12:	adds	r2, #45	; 0x2d
   1eb14:	add	r1, pc
   1eb16:	str	r0, [sp, #0]
   1eb18:	ldr	r0, [pc, #44]	; (1eb48 <btrfs_create_tree@@Base+0x7cc>)
   1eb1a:	add	r0, pc
   1eb1c:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1eb20:	b.n	1eaba <btrfs_create_tree@@Base+0x73e>
   1eb22:	nop
   1eb24:			; <UNDEFINED> instruction: 0xf7e60001
   1eb28:			; <UNDEFINED> instruction: 0xf0b10001
   1eb2c:			; <UNDEFINED> instruction: 0xf0bb0001
   1eb30:	orn	r0, r0, #1
   1eb34:			; <UNDEFINED> instruction: 0xf73e0001
   1eb38:	and.w	r0, r7, #1
   1eb3c:	orr.w	r0, ip, #1
   1eb40:	subw	r0, ip, #2049	; 0x801
   1eb44:	vhadd.s<illegal width 64>	d16, d7, d1
   1eb48:	pop	{r0, r3, r4}
   1eb4a:	movs	r1, r0
   1eb4c:	push	{r4, r5, r6, r7, lr}
   1eb4e:	mov	r7, r2
   1eb50:	ldr	r2, [pc, #132]	; (1ebd8 <btrfs_create_tree@@Base+0x85c>)
   1eb52:	mov	r4, r3
   1eb54:	ldr	r3, [pc, #132]	; (1ebdc <btrfs_create_tree@@Base+0x860>)
   1eb56:	sub	sp, #36	; 0x24
   1eb58:	add	r2, pc
   1eb5a:	mov	r5, r1
   1eb5c:	mov	r6, r0
   1eb5e:	ldr	r0, [r5, #0]
   1eb60:	ldr	r3, [r2, r3]
   1eb62:	ldr	r2, [r1, #32]
   1eb64:	add	r1, sp, #8
   1eb66:	ldr	r3, [r3, #0]
   1eb68:	str	r3, [sp, #28]
   1eb6a:	mov.w	r3, #0
   1eb6e:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   1eb72:	ldrb.w	r5, [sp, #16]
   1eb76:	movw	r3, #3377	; 0xd31
   1eb7a:	ldr	r2, [pc, #100]	; (1ebe0 <btrfs_create_tree@@Base+0x864>)
   1eb7c:	add.w	r1, r5, #88	; 0x58
   1eb80:	ldr	r0, [pc, #96]	; (1ebe4 <btrfs_create_tree@@Base+0x868>)
   1eb82:	add	r2, pc
   1eb84:	uxtb	r1, r1
   1eb86:	adds	r2, #74	; 0x4a
   1eb88:	cmp	r1, #1
   1eb8a:	add	r0, pc
   1eb8c:	ite	ls
   1eb8e:	movls	r1, #0
   1eb90:	movhi	r1, #1
   1eb92:	str	r1, [sp, #0]
   1eb94:	ldr	r1, [pc, #80]	; (1ebe8 <btrfs_create_tree@@Base+0x86c>)
   1eb96:	add	r1, pc
   1eb98:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1eb9c:	ldrd	r2, r3, [sp, #8]
   1eba0:	cmp	r5, #168	; 0xa8
   1eba2:	strd	r2, r3, [r7]
   1eba6:	iteet	ne
   1eba8:	ldrne	r3, [r6, #0]
   1ebaa:	ldreq.w	r2, [sp, #17]
   1ebae:	ldreq.w	r3, [sp, #21]
   1ebb2:	ldrne.w	r2, [r3, #384]	; 0x180
   1ebb6:	it	ne
   1ebb8:	movne	r3, #0
   1ebba:	strd	r2, r3, [r4]
   1ebbe:	ldr	r2, [pc, #44]	; (1ebec <btrfs_create_tree@@Base+0x870>)
   1ebc0:	ldr	r3, [pc, #24]	; (1ebdc <btrfs_create_tree@@Base+0x860>)
   1ebc2:	add	r2, pc
   1ebc4:	ldr	r3, [r2, r3]
   1ebc6:	ldr	r2, [r3, #0]
   1ebc8:	ldr	r3, [sp, #28]
   1ebca:	eors	r2, r3
   1ebcc:	beq.n	1ebd2 <btrfs_create_tree@@Base+0x856>
   1ebce:	blx	84cc <__stack_chk_fail@plt>
   1ebd2:	add	sp, #36	; 0x24
   1ebd4:	pop	{r4, r5, r6, r7, pc}
   1ebd6:	nop
   1ebd8:	str	r0, [r6, #32]
   1ebda:	movs	r4, r0
   1ebdc:	lsls	r4, r4, #8
   1ebde:	movs	r0, r0
   1ebe0:			; <UNDEFINED> instruction: 0xf63a0001
   1ebe4:	vhadd.s<illegal width 64>	d16, d3, d1
   1ebe8:	cdp	0, 15, cr0, cr5, cr1, {0}
   1ebec:	str	r6, [r0, #28]
   1ebee:	movs	r4, r0
   1ebf0:	push	{r0, r1, r2, r3, r4, r6, r7, lr}
   1ebf2:	mov	r4, r0
   1ebf4:	ldrd	r0, r3, [r0, #48]	; 0x30
   1ebf8:	ldr	r2, [pc, #140]	; (1ec88 <btrfs_create_tree@@Base+0x90c>)
   1ebfa:	orrs	r3, r0
   1ebfc:	ldr	r1, [pc, #140]	; (1ec8c <btrfs_create_tree@@Base+0x910>)
   1ebfe:	ldr	r0, [pc, #144]	; (1ec90 <btrfs_create_tree@@Base+0x914>)
   1ec00:	add	r2, pc
   1ec02:	ite	eq
   1ec04:	moveq	r3, #1
   1ec06:	movne	r3, #0
   1ec08:	adds	r2, #92	; 0x5c
   1ec0a:	add	r1, pc
   1ec0c:	add	r0, pc
   1ec0e:	str	r3, [sp, #0]
   1ec10:	movs	r3, #163	; 0xa3
   1ec12:	strd	r1, r2, [sp, #8]
   1ec16:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   1ec1a:	ldrd	r3, r0, [r4, #48]	; 0x30
   1ec1e:	ldrd	r1, r2, [sp, #8]
   1ec22:	adds.w	r6, r3, #4294967295	; 0xffffffff
   1ec26:	adc.w	r7, r0, #4294967295	; 0xffffffff
   1ec2a:	strd	r6, r7, [r4, #48]	; 0x30
   1ec2e:	orrs.w	r3, r6, r7
   1ec32:	bne.n	1ec84 <btrfs_create_tree@@Base+0x908>
   1ec34:	ldrb.w	r3, [r4, #62]	; 0x3e
   1ec38:	ldr	r0, [pc, #88]	; (1ec94 <btrfs_create_tree@@Base+0x918>)
   1ec3a:	ubfx	r3, r3, #1, #1
   1ec3e:	str	r3, [sp, #0]
   1ec40:	add	r0, pc
   1ec42:	movs	r3, #165	; 0xa5
   1ec44:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   1ec48:	ldrb.w	r3, [r4, #61]	; 0x3d
   1ec4c:	subs	r3, #176	; 0xb0
   1ec4e:	cmp	r3, #8
   1ec50:	bhi.n	1ec6c <btrfs_create_tree@@Base+0x8f0>
   1ec52:	tbb	[pc, r3]
   1ec56:	lsrs	r5, r0, #12
   1ec58:	lsrs	r5, r0, #12
   1ec5a:	lsrs	r3, r1, #12
   1ec5c:	lsrs	r5, r0, #12
   1ec5e:	movs	r5, r0
   1ec60:	mov	r0, r4
   1ec62:	add	sp, #16
   1ec64:	ldmia.w	sp!, {r4, r6, r7, lr}
   1ec68:	b.w	83ec <free@plt>
   1ec6c:	ldr	r2, [pc, #40]	; (1ec98 <btrfs_create_tree@@Base+0x91c>)
   1ec6e:	movs	r3, #1
   1ec70:	ldr	r1, [pc, #40]	; (1ec9c <btrfs_create_tree@@Base+0x920>)
   1ec72:	ldr	r0, [pc, #44]	; (1eca0 <btrfs_create_tree@@Base+0x924>)
   1ec74:	add	r2, pc
   1ec76:	str	r3, [sp, #0]
   1ec78:	adds	r2, #92	; 0x5c
   1ec7a:	add	r1, pc
   1ec7c:	add	r0, pc
   1ec7e:	movs	r3, #176	; 0xb0
   1ec80:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   1ec84:	add	sp, #16
   1ec86:	pop	{r4, r6, r7, pc}
   1ec88:	subs.w	r0, ip, #8454144	; 0x810000
   1ec8c:	vhadd.s<illegal width 64>	d0, d15, d1
   1ec90:	vhadd.s8	d16, d11, d1
   1ec94:	vhadd.s32	d0, d6, d1
   1ec98:	adc.w	r0, r8, #8454144	; 0x810000
   1ec9c:	cdp	0, 12, cr0, cr15, cr1, {0}
   1eca0:	sbc.w	r0, pc, #1
   1eca4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eca8:	mov	r4, r2
   1ecaa:	ldr	r2, [pc, #288]	; (1edcc <btrfs_create_tree@@Base+0xa50>)
   1ecac:	mov	r5, r3
   1ecae:	ldr	r3, [pc, #288]	; (1edd0 <btrfs_create_tree@@Base+0xa54>)
   1ecb0:	sub	sp, #36	; 0x24
   1ecb2:	add	r2, pc
   1ecb4:	ldr.w	r9, [pc, #284]	; 1edd4 <btrfs_create_tree@@Base+0xa58>
   1ecb8:	ldr.w	sl, [pc, #284]	; 1edd8 <btrfs_create_tree@@Base+0xa5c>
   1ecbc:	mov	r8, r0
   1ecbe:	ldr	r3, [r2, r3]
   1ecc0:	add	r9, pc
   1ecc2:	ldr	r0, [pc, #280]	; (1eddc <btrfs_create_tree@@Base+0xa60>)
   1ecc4:	add	sl, pc
   1ecc6:	ldr	r3, [r3, #0]
   1ecc8:	str	r3, [sp, #28]
   1ecca:	mov.w	r3, #0
   1ecce:	mov	r6, r1
   1ecd0:	movs	r3, #0
   1ecd2:	str	r3, [sp, #0]
   1ecd4:	add.w	r2, sl, #114	; 0x72
   1ecd8:	add	r0, pc
   1ecda:	movw	r3, #1223	; 0x4c7
   1ecde:	mov	r1, r9
   1ece0:	ldr	r7, [sp, #72]	; 0x48
   1ece2:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1ece6:	cbz	r5, 1ed0a <btrfs_create_tree@@Base+0x98e>
   1ece8:	mov.w	r3, #4294967295	; 0xffffffff
   1ecec:	mov	r2, r5
   1ecee:	mov	r1, r4
   1ecf0:	mov	r0, r6
   1ecf2:	bl	1e984 <btrfs_create_tree@@Base+0x608>
   1ecf6:	ldr	r2, [pc, #232]	; (1ede0 <btrfs_create_tree@@Base+0xa64>)
   1ecf8:	ldr	r3, [pc, #212]	; (1edd0 <btrfs_create_tree@@Base+0xa54>)
   1ecfa:	add	r2, pc
   1ecfc:	ldr	r3, [r2, r3]
   1ecfe:	ldr	r2, [r3, #0]
   1ed00:	ldr	r3, [sp, #28]
   1ed02:	eors	r2, r3
   1ed04:	beq.n	1edc4 <btrfs_create_tree@@Base+0xa48>
   1ed06:	blx	84cc <__stack_chk_fail@plt>
   1ed0a:	cbz	r7, 1ed62 <btrfs_create_tree@@Base+0x9e6>
   1ed0c:	ldr	r7, [r4, #0]
   1ed0e:	add	r1, sp, #8
   1ed10:	ldr	r2, [r4, #32]
   1ed12:	mov	r0, r7
   1ed14:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   1ed18:	ldrb.w	fp, [sp, #16]
   1ed1c:	add.w	r3, r7, #96	; 0x60
   1ed20:	cmp.w	fp, #178	; 0xb2
   1ed24:	bne.n	1ed6e <btrfs_create_tree@@Base+0x9f2>
   1ed26:	ldr	r2, [r4, #32]
   1ed28:	movs	r1, #25
   1ed2a:	mov	r9, r5
   1ed2c:	mla	r2, r1, r2, r3
   1ed30:	ldr.w	r2, [r2, #118]	; 0x76
   1ed34:	adds	r2, #101	; 0x65
   1ed36:	add	r3, r2
   1ed38:	mov	r5, r2
   1ed3a:	ldr.w	sl, [r3, #24]
   1ed3e:	ldr	r2, [pc, #164]	; (1ede4 <btrfs_create_tree@@Base+0xa68>)
   1ed40:	clz	r3, sl
   1ed44:	ldr	r1, [pc, #160]	; (1ede8 <btrfs_create_tree@@Base+0xa6c>)
   1ed46:	ldr	r0, [pc, #164]	; (1edec <btrfs_create_tree@@Base+0xa70>)
   1ed48:	add	r2, pc
   1ed4a:	lsrs	r3, r3, #5
   1ed4c:	adds	r2, #136	; 0x88
   1ed4e:	str	r3, [sp, #0]
   1ed50:	add	r1, pc
   1ed52:	add	r0, pc
   1ed54:	movw	r3, #733	; 0x2dd
   1ed58:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1ed5c:	subs.w	sl, sl, #1
   1ed60:	bne.n	1eda0 <btrfs_create_tree@@Base+0xa24>
   1ed62:	mov	r2, r4
   1ed64:	mov	r1, r6
   1ed66:	mov	r0, r8
   1ed68:	bl	1e688 <btrfs_create_tree@@Base+0x30c>
   1ed6c:	b.n	1ecf6 <btrfs_create_tree@@Base+0x97a>
   1ed6e:	cmp.w	fp, #184	; 0xb8
   1ed72:	bne.n	1ed8a <btrfs_create_tree@@Base+0xa0e>
   1ed74:	ldr	r2, [r4, #32]
   1ed76:	movs	r1, #25
   1ed78:	mla	r2, r1, r2, r3
   1ed7c:	ldr.w	r9, [r2, #118]	; 0x76
   1ed80:	add.w	r9, r9, #101	; 0x65
   1ed84:	ldr.w	sl, [r3, r9]
   1ed88:	b.n	1ed3e <btrfs_create_tree@@Base+0x9c2>
   1ed8a:	ldr	r0, [pc, #100]	; (1edf0 <btrfs_create_tree@@Base+0xa74>)
   1ed8c:	movs	r3, #1
   1ed8e:	add.w	r2, sl, #136	; 0x88
   1ed92:	str	r3, [sp, #0]
   1ed94:	add	r0, pc
   1ed96:	movw	r3, #730	; 0x2da
   1ed9a:	mov	r1, r9
   1ed9c:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   1eda0:	cmp.w	fp, #178	; 0xb2
   1eda4:	bne.n	1edb6 <btrfs_create_tree@@Base+0xa3a>
   1eda6:	add	r5, r7
   1eda8:	str.w	sl, [r5, #120]	; 0x78
   1edac:	mov	r0, r7
   1edae:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1edb2:	movs	r0, #0
   1edb4:	b.n	1ecf6 <btrfs_create_tree@@Base+0x97a>
   1edb6:	cmp.w	fp, #184	; 0xb8
   1edba:	itt	eq
   1edbc:	addeq	r9, r7
   1edbe:	streq.w	sl, [r9, #96]	; 0x60
   1edc2:	b.n	1edac <btrfs_create_tree@@Base+0xa30>
   1edc4:	add	sp, #36	; 0x24
   1edc6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1edca:	nop
   1edcc:	str	r6, [r2, #12]
   1edce:	movs	r4, r0
   1edd0:	lsls	r4, r4, #8
   1edd2:	movs	r0, r0
   1edd4:	stcl	0, cr0, [fp, #4]
   1edd8:			; <UNDEFINED> instruction: 0xf4f80001
   1eddc:	cdp	0, 9, cr0, cr11, cr1, {0}
   1ede0:	str	r6, [r1, #8]
   1ede2:	movs	r4, r0
   1ede4:	orns	r0, r4, #8454144	; 0x810000
   1ede8:	ldc	0, cr0, [fp, #-4]!
   1edec:	cdp	0, 3, cr0, cr15, cr1, {0}
   1edf0:	orrs.w	r0, r7, #1
   1edf4:	push	{r0, r1, r2, r3, r4, lr}
   1edf6:	ldr	r3, [pc, #40]	; (1ee20 <btrfs_create_tree@@Base+0xaa4>)
   1edf8:	ldr	r4, [pc, #40]	; (1ee24 <btrfs_create_tree@@Base+0xaa8>)
   1edfa:	add	r3, pc
   1edfc:	ldr	r4, [r3, r4]
   1edfe:	movs	r3, #0
   1ee00:	strd	r2, r1, [sp]
   1ee04:	movs	r1, #1
   1ee06:	strd	r0, r3, [sp, #8]
   1ee0a:	ldr	r2, [pc, #28]	; (1ee28 <btrfs_create_tree@@Base+0xaac>)
   1ee0c:	ldr	r3, [pc, #28]	; (1ee2c <btrfs_create_tree@@Base+0xab0>)
   1ee0e:	add	r2, pc
   1ee10:	ldr	r0, [r4, #0]
   1ee12:	add	r3, pc
   1ee14:	blx	881c <__fprintf_chk@plt+0x4>
   1ee18:	bl	1e63c <btrfs_create_tree@@Base+0x2c0>
   1ee1c:	blx	8948 <abort@plt>
   1ee20:	ldrsh	r6, [r1, r6]
   1ee22:	movs	r4, r0
   1ee24:	lsls	r4, r6, #8
   1ee26:	movs	r0, r0
   1ee28:	push	{r4}
   1ee2a:	movs	r1, r0
   1ee2c:	ldcl	0, cr0, [r9], #-4

0001ee30 <btrfs_lookup_first_block_group@@Base>:
   1ee30:	push	{r4, r5, r6, lr}
   1ee32:	cmp	r3, #0
   1ee34:	ldr	r4, [pc, #112]	; (1eea8 <btrfs_lookup_first_block_group@@Base+0x78>)
   1ee36:	it	eq
   1ee38:	cmpeq.w	r2, #69632	; 0x11000
   1ee3c:	ldr	r1, [pc, #108]	; (1eeac <btrfs_lookup_first_block_group@@Base+0x7c>)
   1ee3e:	sub	sp, #48	; 0x30
   1ee40:	add	r4, pc
   1ee42:	add.w	r6, r0, #128	; 0x80
   1ee46:	mov	r5, r3
   1ee48:	it	cc
   1ee4a:	movcc	r5, #0
   1ee4c:	ldr	r1, [r4, r1]
   1ee4e:	mov	r4, r2
   1ee50:	it	cc
   1ee52:	movcc.w	r4, #69632	; 0x11000
   1ee56:	movs	r3, #22
   1ee58:	ldr	r1, [r1, #0]
   1ee5a:	str	r1, [sp, #44]	; 0x2c
   1ee5c:	mov.w	r1, #0
   1ee60:	mov	r2, r4
   1ee62:	str	r3, [sp, #8]
   1ee64:	mov	r0, r6
   1ee66:	add	r3, sp, #32
   1ee68:	str	r3, [sp, #4]
   1ee6a:	add	r3, sp, #24
   1ee6c:	str	r3, [sp, #0]
   1ee6e:	mov	r3, r5
   1ee70:	bl	16b18 <find_first_extent_bit@@Base>
   1ee74:	cbz	r0, 1ee8c <btrfs_lookup_first_block_group@@Base+0x5c>
   1ee76:	movs	r0, #0
   1ee78:	ldr	r2, [pc, #52]	; (1eeb0 <btrfs_lookup_first_block_group@@Base+0x80>)
   1ee7a:	ldr	r3, [pc, #48]	; (1eeac <btrfs_lookup_first_block_group@@Base+0x7c>)
   1ee7c:	add	r2, pc
   1ee7e:	ldr	r3, [r2, r3]
   1ee80:	ldr	r2, [r3, #0]
   1ee82:	ldr	r3, [sp, #44]	; 0x2c
   1ee84:	eors	r2, r3
   1ee86:	beq.n	1eea2 <btrfs_lookup_first_block_group@@Base+0x72>
   1ee88:	blx	84cc <__stack_chk_fail@plt>
   1ee8c:	add	r3, sp, #16
   1ee8e:	mov	r0, r6
   1ee90:	str	r3, [sp, #0]
   1ee92:	ldrd	r2, r3, [sp, #24]
   1ee96:	bl	16bf4 <get_state_private@@Base>
   1ee9a:	cmp	r0, #0
   1ee9c:	bne.n	1ee76 <btrfs_lookup_first_block_group@@Base+0x46>
   1ee9e:	ldr	r0, [sp, #16]
   1eea0:	b.n	1ee78 <btrfs_lookup_first_block_group@@Base+0x48>
   1eea2:	add	sp, #48	; 0x30
   1eea4:	pop	{r4, r5, r6, pc}
   1eea6:	nop
   1eea8:	ldrsh	r0, [r1, r5]
   1eeaa:	movs	r4, r0
   1eeac:	lsls	r4, r4, #8
   1eeae:	movs	r0, r0
   1eeb0:	ldrsh	r4, [r1, r4]
   1eeb2:	movs	r4, r0

0001eeb4 <btrfs_lookup_block_group@@Base>:
   1eeb4:	ldr.w	ip, [pc, #136]	; 1ef40 <btrfs_lookup_block_group@@Base+0x8c>
   1eeb8:	ldr	r1, [pc, #136]	; (1ef44 <btrfs_lookup_block_group@@Base+0x90>)
   1eeba:	add	ip, pc
   1eebc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   1eec0:	add.w	r8, r0, #128	; 0x80
   1eec4:	sub	sp, #48	; 0x30
   1eec6:	ldr.w	r1, [ip, r1]
   1eeca:	mov	r0, r8
   1eecc:	mov	r4, r2
   1eece:	ldr	r1, [r1, #0]
   1eed0:	str	r1, [sp, #44]	; 0x2c
   1eed2:	mov.w	r1, #0
   1eed6:	movs	r1, #22
   1eed8:	str	r1, [sp, #8]
   1eeda:	add	r1, sp, #32
   1eedc:	str	r1, [sp, #4]
   1eede:	add	r1, sp, #24
   1eee0:	str	r1, [sp, #0]
   1eee2:	mov	r5, r3
   1eee4:	bl	16b18 <find_first_extent_bit@@Base>
   1eee8:	cbz	r0, 1ef00 <btrfs_lookup_block_group@@Base+0x4c>
   1eeea:	movs	r0, #0
   1eeec:	ldr	r2, [pc, #88]	; (1ef48 <btrfs_lookup_block_group@@Base+0x94>)
   1eeee:	ldr	r3, [pc, #84]	; (1ef44 <btrfs_lookup_block_group@@Base+0x90>)
   1eef0:	add	r2, pc
   1eef2:	ldr	r3, [r2, r3]
   1eef4:	ldr	r2, [r3, #0]
   1eef6:	ldr	r3, [sp, #44]	; 0x2c
   1eef8:	eors	r2, r3
   1eefa:	beq.n	1ef38 <btrfs_lookup_block_group@@Base+0x84>
   1eefc:	blx	84cc <__stack_chk_fail@plt>
   1ef00:	add	r3, sp, #16
   1ef02:	mov	r0, r8
   1ef04:	str	r3, [sp, #0]
   1ef06:	ldrd	r2, r3, [sp, #24]
   1ef0a:	bl	16bf4 <get_state_private@@Base>
   1ef0e:	cmp	r0, #0
   1ef10:	bne.n	1eeea <btrfs_lookup_block_group@@Base+0x36>
   1ef12:	ldr	r0, [sp, #16]
   1ef14:	ldrd	r2, r3, [r0, #40]	; 0x28
   1ef18:	cmp	r5, r3
   1ef1a:	it	eq
   1ef1c:	cmpeq	r4, r2
   1ef1e:	bcc.n	1eeea <btrfs_lookup_block_group@@Base+0x36>
   1ef20:	ldr.w	r1, [r0, #49]	; 0x31
   1ef24:	ldr.w	ip, [r0, #53]	; 0x35
   1ef28:	adds	r6, r1, r2
   1ef2a:	adc.w	r7, ip, r3
   1ef2e:	cmp	r5, r7
   1ef30:	it	eq
   1ef32:	cmpeq	r4, r6
   1ef34:	bcc.n	1eeec <btrfs_lookup_block_group@@Base+0x38>
   1ef36:	b.n	1eeea <btrfs_lookup_block_group@@Base+0x36>
   1ef38:	add	sp, #48	; 0x30
   1ef3a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   1ef3e:	nop
   1ef40:	ldrsh	r6, [r1, r3]
   1ef42:	movs	r4, r0
   1ef44:	lsls	r4, r4, #8
   1ef46:	movs	r0, r0
   1ef48:	ldrsh	r0, [r3, r2]
   1ef4a:	movs	r4, r0
   1ef4c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ef50:	mov	r8, r0
   1ef52:	ldrd	r6, r7, [sp, #48]	; 0x30
   1ef56:	adds	r0, #160	; 0xa0
   1ef58:	ldr.w	sl, [sp, #56]	; 0x38
   1ef5c:	mov	r9, r2
   1ef5e:	adds.w	r1, r6, #4294967295	; 0xffffffff
   1ef62:	mov	fp, r3
   1ef64:	adc.w	ip, r7, #4294967295	; 0xffffffff
   1ef68:	adds	r1, r1, r2
   1ef6a:	adc.w	ip, ip, r3
   1ef6e:	strd	r1, ip, [sp]
   1ef72:	cmp.w	sl, #0
   1ef76:	beq.n	1ef8a <btrfs_lookup_block_group@@Base+0xd6>
   1ef78:	bl	16ae8 <set_extent_dirty@@Base>
   1ef7c:	orrs.w	r3, r6, r7
   1ef80:	bne.n	1ef90 <btrfs_lookup_block_group@@Base+0xdc>
   1ef82:	movs	r0, #0
   1ef84:	add	sp, #12
   1ef86:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ef8a:	bl	16b00 <clear_extent_dirty@@Base>
   1ef8e:	b.n	1ef7c <btrfs_lookup_block_group@@Base+0xc8>
   1ef90:	mov	r2, r9
   1ef92:	mov	r3, fp
   1ef94:	mov	r0, r8
   1ef96:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   1ef9a:	cbnz	r0, 1efbe <btrfs_lookup_block_group@@Base+0x10a>
   1ef9c:	ldr.w	r4, [r8, #388]	; 0x184
   1efa0:	cmp	r7, r0
   1efa2:	mov	r5, r0
   1efa4:	it	eq
   1efa6:	cmpeq	r6, r4
   1efa8:	bcs.n	1efae <btrfs_lookup_block_group@@Base+0xfa>
   1efaa:	mov	r4, r6
   1efac:	mov	r5, r7
   1efae:	adds.w	r9, r9, r4
   1efb2:	adc.w	fp, fp, r5
   1efb6:	subs	r6, r6, r4
   1efb8:	sbc.w	r7, r7, r5
   1efbc:	b.n	1ef7c <btrfs_lookup_block_group@@Base+0xc8>
   1efbe:	ldr.w	r1, [r0, #49]	; 0x31
   1efc2:	ldrd	r3, r2, [r0, #40]	; 0x28
   1efc6:	ldr.w	ip, [r0, #53]	; 0x35
   1efca:	adds	r3, r1, r3
   1efcc:	adc.w	r2, ip, r2
   1efd0:	subs.w	r4, r3, r9
   1efd4:	sbc.w	r5, r2, fp
   1efd8:	ldrd	r3, r1, [r0, #88]	; 0x58
   1efdc:	cmp	r7, r5
   1efde:	ldr	r2, [r0, #60]	; 0x3c
   1efe0:	it	eq
   1efe2:	cmpeq	r6, r4
   1efe4:	itt	cc
   1efe6:	movcc	r4, r6
   1efe8:	movcc	r5, r7
   1efea:	cmp.w	sl, #0
   1efee:	beq.n	1f018 <btrfs_lookup_block_group@@Base+0x164>
   1eff0:	adds	r3, r3, r4
   1eff2:	adc.w	r1, r5, r1
   1eff6:	strd	r3, r1, [r0, #88]	; 0x58
   1effa:	ldrd	r3, r1, [r2, #24]
   1effe:	adds	r3, r3, r4
   1f000:	adc.w	r1, r5, r1
   1f004:	strd	r3, r1, [r2, #24]
   1f008:	ldrd	r3, r2, [r8, #328]	; 0x148
   1f00c:	adds	r3, r3, r4
   1f00e:	adc.w	r2, r5, r2
   1f012:	strd	r3, r2, [r8, #328]	; 0x148
   1f016:	b.n	1efae <btrfs_lookup_block_group@@Base+0xfa>
   1f018:	subs	r3, r3, r4
   1f01a:	sbc.w	r1, r1, r5
   1f01e:	strd	r3, r1, [r0, #88]	; 0x58
   1f022:	ldrd	r3, r1, [r2, #24]
   1f026:	subs	r3, r3, r4
   1f028:	sbc.w	r1, r1, r5
   1f02c:	strd	r3, r1, [r2, #24]
   1f030:	ldrd	r3, r2, [r8, #328]	; 0x148
   1f034:	subs	r3, r3, r4
   1f036:	sbc.w	r2, r2, r5
   1f03a:	b.n	1f012 <btrfs_lookup_block_group@@Base+0x15e>
   1f03c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f040:	mov	r9, r0
   1f042:	vpush	{d8}
   1f046:	mov	r7, r2
   1f048:	mov	r8, r3
   1f04a:	sub	sp, #28
   1f04c:	ldr.w	r1, [r0, #308]	; 0x134
   1f050:	ldr	r0, [sp, #80]	; 0x50
   1f052:	ldr	r3, [r1, #120]	; 0x78
   1f054:	ldr	r2, [r1, #124]	; 0x7c
   1f056:	cbz	r0, 1f08c <btrfs_lookup_block_group@@Base+0x1d8>
   1f058:	ldr	r0, [sp, #72]	; 0x48
   1f05a:	adds	r3, r0, r3
   1f05c:	ldr	r0, [sp, #76]	; 0x4c
   1f05e:	adc.w	r2, r0, r2
   1f062:	str	r3, [r1, #120]	; 0x78
   1f064:	ldr	r3, [pc, #332]	; (1f1b4 <btrfs_lookup_block_group@@Base+0x300>)
   1f066:	str	r2, [r1, #124]	; 0x7c
   1f068:	add	r3, pc
   1f06a:	adds	r3, #159	; 0x9f
   1f06c:	vmov	s16, r3
   1f070:	ldr	r3, [pc, #324]	; (1f1b8 <btrfs_lookup_block_group@@Base+0x304>)
   1f072:	add	r3, pc
   1f074:	vmov	s17, r3
   1f078:	ldrd	r2, r3, [sp, #72]	; 0x48
   1f07c:	orrs	r3, r2
   1f07e:	bne.n	1f098 <btrfs_lookup_block_group@@Base+0x1e4>
   1f080:	movs	r0, #0
   1f082:	add	sp, #28
   1f084:	vpop	{d8}
   1f088:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f08c:	ldr	r0, [sp, #72]	; 0x48
   1f08e:	subs	r3, r3, r0
   1f090:	ldr	r0, [sp, #76]	; 0x4c
   1f092:	sbc.w	r2, r2, r0
   1f096:	b.n	1f062 <btrfs_lookup_block_group@@Base+0x1ae>
   1f098:	mov	r2, r7
   1f09a:	mov	r3, r8
   1f09c:	mov	r0, r9
   1f09e:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   1f0a2:	mov	r6, r0
   1f0a4:	cmp	r0, #0
   1f0a6:	beq.w	1f1ae <btrfs_lookup_block_group@@Base+0x2fa>
   1f0aa:	ldrd	sl, fp, [r0, #40]	; 0x28
   1f0ae:	ldr.w	r3, [r0, #53]	; 0x35
   1f0b2:	subs.w	r1, r7, sl
   1f0b6:	ldr.w	r2, [r0, #49]	; 0x31
   1f0ba:	str	r1, [sp, #16]
   1f0bc:	sbc.w	r1, r8, fp
   1f0c0:	str	r1, [sp, #20]
   1f0c2:	ldrd	r0, r1, [sp, #16]
   1f0c6:	cmp	r3, r1
   1f0c8:	vmov	r1, s17
   1f0cc:	it	eq
   1f0ce:	cmpeq	r2, r0
   1f0d0:	ldr	r0, [pc, #232]	; (1f1bc <btrfs_lookup_block_group@@Base+0x308>)
   1f0d2:	vmov	r2, s16
   1f0d6:	ite	cc
   1f0d8:	movcc	r3, #1
   1f0da:	movcs	r3, #0
   1f0dc:	add	r0, pc
   1f0de:	str	r3, [sp, #0]
   1f0e0:	mov.w	r3, #1784	; 0x6f8
   1f0e4:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   1f0e8:	ldrd	r2, r3, [r6, #40]	; 0x28
   1f0ec:	movs	r1, #1
   1f0ee:	str	r1, [sp, #8]
   1f0f0:	ldr.w	r1, [r6, #49]	; 0x31
   1f0f4:	ldr.w	r0, [r6, #53]	; 0x35
   1f0f8:	adds	r1, r1, r2
   1f0fa:	adc.w	r0, r3, r0
   1f0fe:	adds.w	r1, r1, #4294967295	; 0xffffffff
   1f102:	adc.w	r0, r0, #4294967295	; 0xffffffff
   1f106:	strd	r1, r0, [sp]
   1f10a:	add.w	r0, r9, #128	; 0x80
   1f10e:	bl	168bc <set_extent_bits@@Base>
   1f112:	ldr.w	r3, [r6, #49]	; 0x31
   1f116:	ldr.w	r0, [r6, #53]	; 0x35
   1f11a:	adds.w	r3, r3, sl
   1f11e:	ldrd	r2, r1, [r6, #72]	; 0x48
   1f122:	adc.w	fp, r0, fp
   1f126:	subs	r4, r3, r7
   1f128:	sbc.w	r5, fp, r8
   1f12c:	ldrd	sl, fp, [sp, #72]	; 0x48
   1f130:	ldr	r0, [sp, #80]	; 0x50
   1f132:	cmp	fp, r5
   1f134:	ldr	r3, [r6, #60]	; 0x3c
   1f136:	it	eq
   1f138:	cmpeq	sl, r4
   1f13a:	itt	cc
   1f13c:	movcc	r4, sl
   1f13e:	movcc	r5, fp
   1f140:	cbz	r0, 1f172 <btrfs_lookup_block_group@@Base+0x2be>
   1f142:	adds.w	sl, r2, r4
   1f146:	adc.w	fp, r1, r5
   1f14a:	ldrd	r2, r1, [r3, #16]
   1f14e:	adds	r2, r2, r4
   1f150:	adc.w	r1, r5, r1
   1f154:	strd	r2, r1, [r3, #16]
   1f158:	ldr	r3, [sp, #72]	; 0x48
   1f15a:	strd	sl, fp, [r6, #72]	; 0x48
   1f15e:	subs	r3, r3, r4
   1f160:	str	r3, [sp, #72]	; 0x48
   1f162:	ldr	r3, [sp, #76]	; 0x4c
   1f164:	sbc.w	r3, r3, r5
   1f168:	adds	r7, r7, r4
   1f16a:	adc.w	r8, r8, r5
   1f16e:	str	r3, [sp, #76]	; 0x4c
   1f170:	b.n	1f078 <btrfs_lookup_block_group@@Base+0x1c4>
   1f172:	subs.w	sl, r2, r4
   1f176:	sbc.w	fp, r1, r5
   1f17a:	ldrd	r2, r1, [r3, #16]
   1f17e:	subs	r2, r2, r4
   1f180:	sbc.w	r1, r1, r5
   1f184:	strd	r2, r1, [r3, #16]
   1f188:	ldr	r3, [sp, #84]	; 0x54
   1f18a:	cmp	r3, #0
   1f18c:	beq.n	1f158 <btrfs_lookup_block_group@@Base+0x2a4>
   1f18e:	adds.w	r3, r7, #4294967295	; 0xffffffff
   1f192:	add.w	r0, r9, #96	; 0x60
   1f196:	adc.w	r2, r8, #4294967295	; 0xffffffff
   1f19a:	adds	r3, r3, r4
   1f19c:	adc.w	r2, r5, r2
   1f1a0:	strd	r3, r2, [sp]
   1f1a4:	mov	r2, r7
   1f1a6:	mov	r3, r8
   1f1a8:	bl	16ae8 <set_extent_dirty@@Base>
   1f1ac:	b.n	1f158 <btrfs_lookup_block_group@@Base+0x2a4>
   1f1ae:	mov.w	r0, #4294967295	; 0xffffffff
   1f1b2:	b.n	1f082 <btrfs_lookup_block_group@@Base+0x1ce>
   1f1b4:	adcs.w	r0, r4, #1
   1f1b8:	ands.w	r0, r9, r1
   1f1bc:	pkhbt	r0, sp, r1
   1f1c0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f1c4:	sub	sp, #108	; 0x6c
   1f1c6:	add.w	fp, r0, #128	; 0x80
   1f1ca:	mov	r5, r1
   1f1cc:	strd	r2, r3, [sp, #16]
   1f1d0:	ldr	r2, [pc, #504]	; (1f3cc <btrfs_lookup_block_group@@Base+0x518>)
   1f1d2:	ldr	r6, [sp, #144]	; 0x90
   1f1d4:	ldr	r3, [pc, #504]	; (1f3d0 <btrfs_lookup_block_group@@Base+0x51c>)
   1f1d6:	add	r2, pc
   1f1d8:	ands.w	r8, r6, #1
   1f1dc:	mov.w	r4, r6, asr #31
   1f1e0:	ldr	r3, [r2, r3]
   1f1e2:	it	ne
   1f1e4:	movne.w	r8, #2
   1f1e8:	lsls	r2, r6, #29
   1f1ea:	ldr	r3, [r3, #0]
   1f1ec:	str	r3, [sp, #100]	; 0x64
   1f1ee:	mov.w	r3, #0
   1f1f2:	it	mi
   1f1f4:	orrmi.w	r8, r8, #4
   1f1f8:	mov	r3, r6
   1f1fa:	strd	r3, r4, [sp, #24]
   1f1fe:	lsls	r3, r6, #30
   1f200:	ldrd	r3, r4, [sp, #16]
   1f204:	it	mi
   1f206:	orrmi.w	r8, r8, #16
   1f20a:	orrs	r3, r4
   1f20c:	bne.n	1f2c6 <btrfs_lookup_block_group@@Base+0x412>
   1f20e:	cmp	r5, #0
   1f210:	bne.w	1f336 <btrfs_lookup_block_group@@Base+0x482>
   1f214:	ldrd	r9, sl, [sp, #16]
   1f218:	movs	r5, #0
   1f21a:	add	r3, sp, #80	; 0x50
   1f21c:	str	r3, [sp, #32]
   1f21e:	add	r3, sp, #72	; 0x48
   1f220:	str	r3, [sp, #40]	; 0x28
   1f222:	ldr	r3, [sp, #32]
   1f224:	mov	r2, r9
   1f226:	mov	r0, fp
   1f228:	str.w	r8, [sp, #8]
   1f22c:	str	r3, [sp, #4]
   1f22e:	ldr	r3, [sp, #40]	; 0x28
   1f230:	str	r3, [sp, #0]
   1f232:	mov	r3, sl
   1f234:	bl	16b18 <find_first_extent_bit@@Base>
   1f238:	cmp	r0, #0
   1f23a:	bne.w	1f3b8 <btrfs_lookup_block_group@@Base+0x504>
   1f23e:	add	r3, sp, #88	; 0x58
   1f240:	mov	r0, fp
   1f242:	str	r3, [sp, #0]
   1f244:	ldrd	r2, r3, [sp, #72]	; 0x48
   1f248:	bl	16bf4 <get_state_private@@Base>
   1f24c:	cmp	r0, #0
   1f24e:	bne.w	1f3b8 <btrfs_lookup_block_group@@Base+0x504>
   1f252:	ldr	r4, [sp, #88]	; 0x58
   1f254:	ldrd	r3, r2, [r4, #40]	; 0x28
   1f258:	ldr.w	r6, [r4, #49]	; 0x31
   1f25c:	ldr.w	r7, [r4, #53]	; 0x35
   1f260:	adds.w	r9, r6, r3
   1f264:	ldr	r3, [r4, #108]	; 0x6c
   1f266:	adc.w	sl, r7, r2
   1f26a:	cmp	r3, #0
   1f26c:	bne.n	1f222 <btrfs_lookup_block_group@@Base+0x36e>
   1f26e:	ldrd	r2, r3, [r4, #96]	; 0x60
   1f272:	ldr	r1, [sp, #24]
   1f274:	ands	r2, r1
   1f276:	str	r2, [sp, #48]	; 0x30
   1f278:	ldr	r2, [sp, #28]
   1f27a:	ands	r3, r2
   1f27c:	str	r3, [sp, #52]	; 0x34
   1f27e:	ldrd	r0, r1, [sp, #48]	; 0x30
   1f282:	ldrd	r2, r3, [sp, #24]
   1f286:	cmp	r3, r1
   1f288:	it	eq
   1f28a:	cmpeq	r2, r0
   1f28c:	bne.n	1f222 <btrfs_lookup_block_group@@Base+0x36e>
   1f28e:	ldr	r3, [r4, #72]	; 0x48
   1f290:	str	r3, [sp, #64]	; 0x40
   1f292:	ldr	r3, [r4, #76]	; 0x4c
   1f294:	str	r3, [sp, #68]	; 0x44
   1f296:	cbnz	r5, 1f2a6 <btrfs_lookup_block_group@@Base+0x3f2>
   1f298:	mov	r0, r6
   1f29a:	mov	r1, r7
   1f29c:	movs	r2, #10
   1f29e:	bl	31ac0 <div_factor@@Base>
   1f2a2:	mov	r6, r0
   1f2a4:	mov	r7, r1
   1f2a6:	ldrd	r3, r2, [r4, #88]	; 0x58
   1f2aa:	ldr	r1, [sp, #64]	; 0x40
   1f2ac:	adds	r3, r1, r3
   1f2ae:	str	r3, [sp, #56]	; 0x38
   1f2b0:	ldr	r3, [sp, #68]	; 0x44
   1f2b2:	adc.w	r3, r2, r3
   1f2b6:	str	r3, [sp, #60]	; 0x3c
   1f2b8:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f2bc:	cmp	r3, r7
   1f2be:	it	eq
   1f2c0:	cmpeq	r2, r6
   1f2c2:	bcs.n	1f222 <btrfs_lookup_block_group@@Base+0x36e>
   1f2c4:	b.n	1f322 <btrfs_lookup_block_group@@Base+0x46e>
   1f2c6:	ldrd	r2, r3, [sp, #16]
   1f2ca:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   1f2ce:	mov	r4, r0
   1f2d0:	cmp	r0, #0
   1f2d2:	beq.n	1f20e <btrfs_lookup_block_group@@Base+0x35a>
   1f2d4:	ldr	r3, [r0, #108]	; 0x6c
   1f2d6:	cmp	r3, #0
   1f2d8:	bne.n	1f20e <btrfs_lookup_block_group@@Base+0x35a>
   1f2da:	ldrd	r0, r1, [r0, #96]	; 0x60
   1f2de:	and.w	r2, r6, r0
   1f2e2:	ldr	r0, [sp, #28]
   1f2e4:	and.w	r3, r0, r1
   1f2e8:	asrs	r1, r6, #31
   1f2ea:	cmp	r1, r3
   1f2ec:	it	eq
   1f2ee:	cmpeq	r6, r2
   1f2f0:	bne.n	1f20e <btrfs_lookup_block_group@@Base+0x35a>
   1f2f2:	ldrd	r2, r1, [r4, #88]	; 0x58
   1f2f6:	ldrd	r3, r0, [r4, #72]	; 0x48
   1f2fa:	adds	r3, r3, r2
   1f2fc:	mov.w	r2, #10
   1f300:	str	r3, [sp, #32]
   1f302:	adc.w	r3, r0, r1
   1f306:	str	r3, [sp, #36]	; 0x24
   1f308:	ldr.w	r0, [r4, #49]	; 0x31
   1f30c:	ldr.w	r1, [r4, #53]	; 0x35
   1f310:	bl	31ac0 <div_factor@@Base>
   1f314:	ldrd	r2, r3, [sp, #32]
   1f318:	cmp	r3, r1
   1f31a:	it	eq
   1f31c:	cmpeq	r2, r0
   1f31e:	bcs.w	1f20e <btrfs_lookup_block_group@@Base+0x35a>
   1f322:	ldr	r2, [pc, #176]	; (1f3d4 <btrfs_lookup_block_group@@Base+0x520>)
   1f324:	ldr	r3, [pc, #168]	; (1f3d0 <btrfs_lookup_block_group@@Base+0x51c>)
   1f326:	add	r2, pc
   1f328:	ldr	r3, [r2, r3]
   1f32a:	ldr	r2, [r3, #0]
   1f32c:	ldr	r3, [sp, #100]	; 0x64
   1f32e:	eors	r2, r3
   1f330:	beq.n	1f3c4 <btrfs_lookup_block_group@@Base+0x510>
   1f332:	blx	84cc <__stack_chk_fail@plt>
   1f336:	ldr	r3, [r5, #108]	; 0x6c
   1f338:	cbnz	r3, 1f398 <btrfs_lookup_block_group@@Base+0x4e4>
   1f33a:	ldrd	r0, r1, [r5, #96]	; 0x60
   1f33e:	and.w	r2, r6, r0
   1f342:	ldr	r0, [sp, #28]
   1f344:	and.w	r3, r0, r1
   1f348:	ldrd	r0, r1, [sp, #24]
   1f34c:	cmp	r1, r3
   1f34e:	it	eq
   1f350:	cmpeq	r0, r2
   1f352:	bne.n	1f398 <btrfs_lookup_block_group@@Base+0x4e4>
   1f354:	ldrd	r2, r1, [r5, #88]	; 0x58
   1f358:	ldrd	r3, r0, [r5, #72]	; 0x48
   1f35c:	adds	r3, r3, r2
   1f35e:	mov.w	r2, #10
   1f362:	str	r3, [sp, #40]	; 0x28
   1f364:	adc.w	r3, r0, r1
   1f368:	str	r3, [sp, #44]	; 0x2c
   1f36a:	ldr.w	r0, [r5, #49]	; 0x31
   1f36e:	ldr.w	r1, [r5, #53]	; 0x35
   1f372:	bl	31ac0 <div_factor@@Base>
   1f376:	ldrd	r3, r4, [sp, #40]	; 0x28
   1f37a:	cmp	r4, r1
   1f37c:	it	eq
   1f37e:	cmpeq	r3, r0
   1f380:	bcc.n	1f3c0 <btrfs_lookup_block_group@@Base+0x50c>
   1f382:	ldrd	r1, r0, [r5, #40]	; 0x28
   1f386:	ldr.w	r3, [r5, #49]	; 0x31
   1f38a:	ldr.w	r2, [r5, #53]	; 0x35
   1f38e:	adds.w	r9, r3, r1
   1f392:	adc.w	sl, r2, r0
   1f396:	b.n	1f218 <btrfs_lookup_block_group@@Base+0x364>
   1f398:	ldrd	r9, sl, [r5, #40]	; 0x28
   1f39c:	ldrd	r3, r4, [sp, #16]
   1f3a0:	cmp	sl, r4
   1f3a2:	it	eq
   1f3a4:	cmpeq	r9, r3
   1f3a6:	bcs.w	1f218 <btrfs_lookup_block_group@@Base+0x364>
   1f3aa:	mov	r9, r3
   1f3ac:	mov	sl, r4
   1f3ae:	b.n	1f218 <btrfs_lookup_block_group@@Base+0x364>
   1f3b0:	ldrd	r9, sl, [sp, #16]
   1f3b4:	movs	r5, #1
   1f3b6:	b.n	1f222 <btrfs_lookup_block_group@@Base+0x36e>
   1f3b8:	cmp	r5, #0
   1f3ba:	beq.n	1f3b0 <btrfs_lookup_block_group@@Base+0x4fc>
   1f3bc:	movs	r4, #0
   1f3be:	b.n	1f322 <btrfs_lookup_block_group@@Base+0x46e>
   1f3c0:	mov	r4, r5
   1f3c2:	b.n	1f322 <btrfs_lookup_block_group@@Base+0x46e>
   1f3c4:	mov	r0, r4
   1f3c6:	add	sp, #108	; 0x6c
   1f3c8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f3cc:	ldrh	r2, [r6, r6]
   1f3ce:	movs	r4, r0
   1f3d0:	lsls	r4, r4, #8
   1f3d2:	movs	r0, r0
   1f3d4:	ldrh	r2, [r4, r1]
   1f3d6:	movs	r4, r0

0001f3d8 <hash_extent_data_ref@@Base>:
   1f3d8:	push	{r4, r5, r6, lr}
   1f3da:	mov	r6, r2
   1f3dc:	ldr	r2, [pc, #100]	; (1f444 <hash_extent_data_ref@@Base+0x6c>)
   1f3de:	mov	r5, r3
   1f3e0:	ldr	r3, [pc, #100]	; (1f448 <hash_extent_data_ref@@Base+0x70>)
   1f3e2:	sub	sp, #24
   1f3e4:	add	r2, pc
   1f3e6:	ldr	r3, [r2, r3]
   1f3e8:	movs	r2, #8
   1f3ea:	ldr	r3, [r3, #0]
   1f3ec:	str	r3, [sp, #20]
   1f3ee:	mov.w	r3, #0
   1f3f2:	strd	r0, r1, [sp, #8]
   1f3f6:	add.w	r1, sp, r2
   1f3fa:	mov.w	r0, #4294967295	; 0xffffffff
   1f3fe:	str	r1, [sp, #4]
   1f400:	bl	173fa <crc32c_le@@Base>
   1f404:	ldr	r1, [sp, #4]
   1f406:	movs	r2, #8
   1f408:	strd	r6, r5, [sp, #8]
   1f40c:	mov	r4, r0
   1f40e:	mov.w	r0, #4294967295	; 0xffffffff
   1f412:	bl	173fa <crc32c_le@@Base>
   1f416:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f41a:	ldr	r1, [sp, #4]
   1f41c:	strd	r2, r3, [sp, #8]
   1f420:	movs	r2, #8
   1f422:	bl	173fa <crc32c_le@@Base>
   1f426:	ldr	r2, [pc, #36]	; (1f44c <hash_extent_data_ref@@Base+0x74>)
   1f428:	ldr	r3, [pc, #28]	; (1f448 <hash_extent_data_ref@@Base+0x70>)
   1f42a:	lsrs	r1, r4, #1
   1f42c:	add	r2, pc
   1f42e:	ldr	r3, [r2, r3]
   1f430:	ldr	r2, [r3, #0]
   1f432:	ldr	r3, [sp, #20]
   1f434:	eors	r2, r3
   1f436:	eor.w	r0, r0, r4, lsl #31
   1f43a:	beq.n	1f440 <hash_extent_data_ref@@Base+0x68>
   1f43c:	blx	84cc <__stack_chk_fail@plt>
   1f440:	add	sp, #24
   1f442:	pop	{r4, r5, r6, pc}
   1f444:	ldr	r4, [r4, r6]
   1f446:	movs	r4, r0
   1f448:	lsls	r4, r4, #8
   1f44a:	movs	r0, r0
   1f44c:	ldr	r4, [r3, r5]
   1f44e:	movs	r4, r0
   1f450:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f454:	sub	sp, #68	; 0x44
   1f456:	mov	r5, r2
   1f458:	ldr	r2, [pc, #836]	; (1f7a0 <hash_extent_data_ref@@Base+0x3c8>)
   1f45a:	str	r3, [sp, #36]	; 0x24
   1f45c:	mov	r4, r0
   1f45e:	ldr	r3, [pc, #836]	; (1f7a4 <hash_extent_data_ref@@Base+0x3cc>)
   1f460:	add	r2, pc
   1f462:	str	r1, [sp, #28]
   1f464:	mov.w	r9, #0
   1f468:	ldrd	sl, fp, [sp, #112]	; 0x70
   1f46c:	ldr	r3, [r2, r3]
   1f46e:	ldr	r3, [r3, #0]
   1f470:	str	r3, [sp, #60]	; 0x3c
   1f472:	mov.w	r3, #0
   1f476:	ldr.w	r3, [r1, #464]	; 0x1d0
   1f47a:	ldr.w	r3, [r3, #308]	; 0x134
   1f47e:	ldr.w	r3, [r3, #188]	; 0xbc
   1f482:	str.w	sl, [sp, #49]	; 0x31
   1f486:	and.w	r8, r3, #256	; 0x100
   1f48a:	ldrd	r2, r3, [sp, #104]	; 0x68
   1f48e:	str.w	fp, [sp, #53]	; 0x35
   1f492:	strd	r2, r3, [sp, #40]	; 0x28
   1f496:	movs	r3, #168	; 0xa8
   1f498:	strb.w	r3, [sp, #48]	; 0x30
   1f49c:	ldrd	r2, r3, [sp, #136]	; 0x88
   1f4a0:	cmp	r3, #0
   1f4a2:	it	eq
   1f4a4:	cmpeq.w	r2, #256	; 0x100
   1f4a8:	ldrd	r2, r3, [sp, #120]	; 0x78
   1f4ac:	bcs.n	1f534 <hash_extent_data_ref@@Base+0x15c>
   1f4ae:	orrs	r3, r2
   1f4b0:	ite	ne
   1f4b2:	movne	r3, #182	; 0xb6
   1f4b4:	moveq	r3, #176	; 0xb0
   1f4b6:	str	r3, [sp, #24]
   1f4b8:	ldr	r3, [sp, #152]	; 0x98
   1f4ba:	cmp	r3, #0
   1f4bc:	beq.w	1f790 <hash_extent_data_ref@@Base+0x3b8>
   1f4c0:	ldr	r0, [sp, #24]
   1f4c2:	bl	1e93c <btrfs_create_tree@@Base+0x5c0>
   1f4c6:	ldrd	r2, r3, [sp, #136]	; 0x88
   1f4ca:	cmp	r3, #0
   1f4cc:	it	eq
   1f4ce:	cmpeq.w	r2, #256	; 0x100
   1f4d2:	str	r0, [sp, #20]
   1f4d4:	bcs.n	1f54a <hash_extent_data_ref@@Base+0x172>
   1f4d6:	orrs.w	r3, r8, r9
   1f4da:	beq.n	1f54a <hash_extent_data_ref@@Base+0x172>
   1f4dc:	movs	r3, #169	; 0xa9
   1f4de:	strb.w	r3, [sp, #48]	; 0x30
   1f4e2:	ldr	r3, [sp, #136]	; 0x88
   1f4e4:	mov.w	r8, #1
   1f4e8:	str.w	r3, [sp, #49]	; 0x31
   1f4ec:	ldr	r3, [sp, #140]	; 0x8c
   1f4ee:	str.w	r3, [sp, #53]	; 0x35
   1f4f2:	add	r6, sp, #40	; 0x28
   1f4f4:	movs	r7, #1
   1f4f6:	mov.w	r9, #168	; 0xa8
   1f4fa:	ldr	r3, [sp, #20]
   1f4fc:	mov	r2, r6
   1f4fe:	ldr	r1, [sp, #28]
   1f500:	mov	r0, r4
   1f502:	str	r7, [sp, #4]
   1f504:	str	r3, [sp, #0]
   1f506:	mov	r3, r5
   1f508:	bl	1a23c <btrfs_search_slot@@Base>
   1f50c:	cmp	r0, #0
   1f50e:	blt.n	1f5e2 <hash_extent_data_ref@@Base+0x20a>
   1f510:	beq.n	1f588 <hash_extent_data_ref@@Base+0x1b0>
   1f512:	cmp.w	r8, #0
   1f516:	beq.n	1f5be <hash_extent_data_ref@@Base+0x1e6>
   1f518:	ldr	r2, [r5, #32]
   1f51a:	cbnz	r2, 1f550 <hash_extent_data_ref@@Base+0x178>
   1f51c:	mov	r0, r5
   1f51e:	strb.w	r9, [sp, #48]	; 0x30
   1f522:	str.w	sl, [sp, #49]	; 0x31
   1f526:	mov.w	r8, #0
   1f52a:	str.w	fp, [sp, #53]	; 0x35
   1f52e:	bl	17e58 <btrfs_release_path@@Base>
   1f532:	b.n	1f4fa <hash_extent_data_ref@@Base+0x122>
   1f534:	orrs	r3, r2
   1f536:	ite	ne
   1f538:	movne	r3, #184	; 0xb8
   1f53a:	moveq	r3, #178	; 0xb2
   1f53c:	str	r3, [sp, #24]
   1f53e:	ldr	r3, [sp, #152]	; 0x98
   1f540:	cmp	r3, #0
   1f542:	bne.n	1f4c0 <hash_extent_data_ref@@Base+0xe8>
   1f544:	mov.w	r3, #4294967295	; 0xffffffff
   1f548:	str	r3, [sp, #20]
   1f54a:	mov.w	r8, #0
   1f54e:	b.n	1f4f2 <hash_extent_data_ref@@Base+0x11a>
   1f550:	subs	r2, #1
   1f552:	ldr	r0, [r5, #0]
   1f554:	mov	r1, r6
   1f556:	str	r2, [r5, #32]
   1f558:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   1f55c:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f560:	ldrd	r0, r1, [sp, #104]	; 0x68
   1f564:	cmp	r3, r1
   1f566:	it	eq
   1f568:	cmpeq	r2, r0
   1f56a:	bne.n	1f51c <hash_extent_data_ref@@Base+0x144>
   1f56c:	ldrb.w	r3, [sp, #48]	; 0x30
   1f570:	cmp	r3, #168	; 0xa8
   1f572:	bne.n	1f51c <hash_extent_data_ref@@Base+0x144>
   1f574:	ldr.w	r3, [sp, #53]	; 0x35
   1f578:	ldr.w	r2, [sp, #49]	; 0x31
   1f57c:	cmp	r3, fp
   1f57e:	it	eq
   1f580:	cmpeq	r2, sl
   1f582:	bne.n	1f51c <hash_extent_data_ref@@Base+0x144>
   1f584:	mov.w	r8, #0
   1f588:	ldr	r4, [r5, #0]
   1f58a:	movs	r3, #25
   1f58c:	ldr	r2, [r5, #32]
   1f58e:	add.w	r7, r4, #96	; 0x60
   1f592:	mla	r3, r3, r2, r7
   1f596:	add.w	r1, r3, #101	; 0x65
   1f59a:	ldr.w	r6, [r3, #122]	; 0x7a
   1f59e:	cmp	r6, #23
   1f5a0:	bhi.n	1f5f8 <hash_extent_data_ref@@Base+0x220>
   1f5a2:	ldr	r1, [pc, #516]	; (1f7a8 <hash_extent_data_ref@@Base+0x3d0>)
   1f5a4:	movs	r3, #24
   1f5a6:	str	r2, [sp, #0]
   1f5a8:	movs	r0, #1
   1f5aa:	add	r1, pc
   1f5ac:	mov	r2, r6
   1f5ae:	blx	87f4 <__printf_chk@plt+0x4>
   1f5b2:	mov	r0, r4
   1f5b4:	bl	25020 <btrfs_print_leaf@@Base>
   1f5b8:	mvn.w	r0, #21
   1f5bc:	b.n	1f5e2 <hash_extent_data_ref@@Base+0x20a>
   1f5be:	ldr.w	r2, [sp, #49]	; 0x31
   1f5c2:	movs	r0, #1
   1f5c4:	ldr.w	r3, [sp, #53]	; 0x35
   1f5c8:	ldr	r1, [pc, #480]	; (1f7ac <hash_extent_data_ref@@Base+0x3d4>)
   1f5ca:	strd	r2, r3, [sp, #8]
   1f5ce:	add	r1, pc
   1f5d0:	ldrb.w	r3, [sp, #48]	; 0x30
   1f5d4:	str	r3, [sp, #0]
   1f5d6:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f5da:	blx	87f4 <__printf_chk@plt+0x4>
   1f5de:	mvn.w	r0, #1
   1f5e2:	ldr	r2, [pc, #460]	; (1f7b0 <hash_extent_data_ref@@Base+0x3d8>)
   1f5e4:	ldr	r3, [pc, #444]	; (1f7a4 <hash_extent_data_ref@@Base+0x3cc>)
   1f5e6:	add	r2, pc
   1f5e8:	ldr	r3, [r2, r3]
   1f5ea:	ldr	r2, [r3, #0]
   1f5ec:	ldr	r3, [sp, #60]	; 0x3c
   1f5ee:	eors	r2, r3
   1f5f0:	beq.w	1f798 <hash_extent_data_ref@@Base+0x3c0>
   1f5f4:	blx	84cc <__stack_chk_fail@plt>
   1f5f8:	ldr.w	ip, [r1, #17]
   1f5fc:	movs	r1, #0
   1f5fe:	add.w	fp, ip, #101	; 0x65
   1f602:	add.w	r4, ip, #125	; 0x7d
   1f606:	add.w	r3, r7, fp
   1f60a:	ldr	r0, [r3, #16]
   1f60c:	add.w	r3, fp, r6
   1f610:	str	r3, [sp, #32]
   1f612:	mov	r3, r1
   1f614:	and.w	r2, r0, #2
   1f618:	orrs	r3, r2
   1f61a:	beq.n	1f67e <hash_extent_data_ref@@Base+0x2a6>
   1f61c:	cmp.w	r8, #0
   1f620:	bne.n	1f648 <hash_extent_data_ref@@Base+0x270>
   1f622:	ldr	r3, [sp, #32]
   1f624:	add.w	r4, ip, #143	; 0x8f
   1f628:	ldr	r2, [pc, #392]	; (1f7b4 <hash_extent_data_ref@@Base+0x3dc>)
   1f62a:	cmp	r3, r4
   1f62c:	ldr	r1, [pc, #392]	; (1f7b8 <hash_extent_data_ref@@Base+0x3e0>)
   1f62e:	ldr	r0, [pc, #396]	; (1f7bc <hash_extent_data_ref@@Base+0x3e4>)
   1f630:	add	r2, pc
   1f632:	ite	cs
   1f634:	movcs	r3, #0
   1f636:	movcc	r3, #1
   1f638:	adds	r2, #178	; 0xb2
   1f63a:	str	r3, [sp, #0]
   1f63c:	add	r1, pc
   1f63e:	add	r0, pc
   1f640:	movw	r3, #943	; 0x3af
   1f644:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1f648:	ldr	r3, [sp, #32]
   1f64a:	cmp	r4, r3
   1f64c:	bcc.n	1f68e <hash_extent_data_ref@@Base+0x2b6>
   1f64e:	ldr	r2, [pc, #368]	; (1f7c0 <hash_extent_data_ref@@Base+0x3e8>)
   1f650:	it	hi
   1f652:	movhi	r3, #1
   1f654:	ldr	r1, [pc, #364]	; (1f7c4 <hash_extent_data_ref@@Base+0x3ec>)
   1f656:	it	ls
   1f658:	movls	r3, #0
   1f65a:	ldr	r0, [pc, #364]	; (1f7c8 <hash_extent_data_ref@@Base+0x3f0>)
   1f65c:	add	r2, pc
   1f65e:	str	r3, [sp, #0]
   1f660:	adds	r2, #178	; 0xb2
   1f662:	add	r1, pc
   1f664:	add	r0, pc
   1f666:	movw	r3, #953	; 0x3b9
   1f66a:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   1f66e:	ldr	r3, [sp, #152]	; 0x98
   1f670:	cmp	r3, #0
   1f672:	bne.n	1f742 <hash_extent_data_ref@@Base+0x36a>
   1f674:	mvn.w	r0, #1
   1f678:	ldr	r3, [sp, #36]	; 0x24
   1f67a:	str	r4, [r3, #0]
   1f67c:	b.n	1f5e2 <hash_extent_data_ref@@Base+0x20a>
   1f67e:	and.w	r2, r0, #1
   1f682:	mov	r3, r1
   1f684:	orrs	r3, r2
   1f686:	bne.n	1f648 <hash_extent_data_ref@@Base+0x270>
   1f688:	mvn.w	r0, #4
   1f68c:	b.n	1f5e2 <hash_extent_data_ref@@Base+0x20a>
   1f68e:	ldrb.w	sl, [r7, r4]
   1f692:	adds	r1, r7, r4
   1f694:	ldr	r3, [sp, #24]
   1f696:	cmp	sl, r3
   1f698:	bgt.n	1f66e <hash_extent_data_ref@@Base+0x296>
   1f69a:	bge.n	1f6a6 <hash_extent_data_ref@@Base+0x2ce>
   1f69c:	mov	r0, sl
   1f69e:	bl	1e93c <btrfs_create_tree@@Base+0x5c0>
   1f6a2:	add	r4, r0
   1f6a4:	b.n	1f648 <hash_extent_data_ref@@Base+0x270>
   1f6a6:	cmp.w	sl, #178	; 0xb2
   1f6aa:	bne.n	1f71c <hash_extent_data_ref@@Base+0x344>
   1f6ac:	adds	r3, r4, #1
   1f6ae:	add.w	ip, r7, r3
   1f6b2:	ldr.w	r8, [r7, r3]
   1f6b6:	ldr.w	r9, [ip, #4]
   1f6ba:	ldr.w	r2, [ip, #8]
   1f6be:	ldr.w	r3, [ip, #12]
   1f6c2:	ldr.w	r0, [ip, #16]
   1f6c6:	ldr.w	r1, [ip, #20]
   1f6ca:	ldrd	fp, ip, [sp, #128]	; 0x80
   1f6ce:	cmp	ip, r9
   1f6d0:	it	eq
   1f6d2:	cmpeq	fp, r8
   1f6d4:	bne.n	1f6ee <hash_extent_data_ref@@Base+0x316>
   1f6d6:	ldrd	fp, ip, [sp, #136]	; 0x88
   1f6da:	cmp	ip, r3
   1f6dc:	it	eq
   1f6de:	cmpeq	fp, r2
   1f6e0:	bne.n	1f6ee <hash_extent_data_ref@@Base+0x316>
   1f6e2:	ldrd	fp, ip, [sp, #144]	; 0x90
   1f6e6:	cmp	ip, r1
   1f6e8:	it	eq
   1f6ea:	cmpeq	fp, r0
   1f6ec:	beq.n	1f78c <hash_extent_data_ref@@Base+0x3b4>
   1f6ee:	strd	r0, r1, [sp]
   1f6f2:	mov	r0, r8
   1f6f4:	mov	r1, r9
   1f6f6:	bl	1f3d8 <hash_extent_data_ref@@Base>
   1f6fa:	ldrd	r2, r3, [sp, #144]	; 0x90
   1f6fe:	strd	r2, r3, [sp]
   1f702:	ldrd	r2, r3, [sp, #136]	; 0x88
   1f706:	mov	r8, r0
   1f708:	mov	r9, r1
   1f70a:	ldrd	r0, r1, [sp, #128]	; 0x80
   1f70e:	bl	1f3d8 <hash_extent_data_ref@@Base>
   1f712:	cmp	r9, r1
   1f714:	it	eq
   1f716:	cmpeq	r8, r0
   1f718:	bcs.n	1f69c <hash_extent_data_ref@@Base+0x2c4>
   1f71a:	b.n	1f66e <hash_extent_data_ref@@Base+0x296>
   1f71c:	ldr.w	r2, [r1, #1]!
   1f720:	ldr	r3, [r1, #4]
   1f722:	ldrd	r0, r1, [sp, #120]	; 0x78
   1f726:	orrs	r1, r0
   1f728:	ite	ne
   1f72a:	ldrdne	r0, r1, [sp, #120]	; 0x78
   1f72e:	ldrdeq	r0, r1, [sp, #128]	; 0x80
   1f732:	cmp	r1, r3
   1f734:	it	eq
   1f736:	cmpeq	r0, r2
   1f738:	beq.n	1f78c <hash_extent_data_ref@@Base+0x3b4>
   1f73a:	cmp	r3, r1
   1f73c:	it	eq
   1f73e:	cmpeq	r2, r0
   1f740:	b.n	1f718 <hash_extent_data_ref@@Base+0x340>
   1f742:	ldr	r3, [sp, #20]
   1f744:	add	r3, r6
   1f746:	mov	r6, r3
   1f748:	ldr	r3, [sp, #28]
   1f74a:	ldr.w	r3, [r3, #464]	; 0x1d0
   1f74e:	ldr.w	r3, [r3, #384]	; 0x180
   1f752:	subs	r3, #101	; 0x65
   1f754:	lsrs	r3, r3, #4
   1f756:	subs	r3, #25
   1f758:	cmp	r6, r3
   1f75a:	bcc.n	1f762 <hash_extent_data_ref@@Base+0x38a>
   1f75c:	mvn.w	r0, #10
   1f760:	b.n	1f5e2 <hash_extent_data_ref@@Base+0x20a>
   1f762:	add	r1, sp, #40	; 0x28
   1f764:	mov	r0, r5
   1f766:	bl	31468 <find_next_key@@Base>
   1f76a:	cmp	r0, #0
   1f76c:	bne.n	1f674 <hash_extent_data_ref@@Base+0x29c>
   1f76e:	ldrd	r2, r3, [sp, #40]	; 0x28
   1f772:	ldrd	r0, r1, [sp, #104]	; 0x68
   1f776:	cmp	r3, r1
   1f778:	it	eq
   1f77a:	cmpeq	r2, r0
   1f77c:	bne.w	1f674 <hash_extent_data_ref@@Base+0x29c>
   1f780:	ldrb.w	r3, [sp, #48]	; 0x30
   1f784:	cmp	r3, #191	; 0xbf
   1f786:	bhi.w	1f674 <hash_extent_data_ref@@Base+0x29c>
   1f78a:	b.n	1f75c <hash_extent_data_ref@@Base+0x384>
   1f78c:	movs	r0, #0
   1f78e:	b.n	1f678 <hash_extent_data_ref@@Base+0x2a0>
   1f790:	mov.w	r3, #4294967295	; 0xffffffff
   1f794:	str	r3, [sp, #20]
   1f796:	b.n	1f4d6 <hash_extent_data_ref@@Base+0xfe>
   1f798:	add	sp, #68	; 0x44
   1f79a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f79e:	nop
   1f7a0:	ldr	r0, [r5, r4]
   1f7a2:	movs	r4, r0
   1f7a4:	lsls	r4, r4, #8
   1f7a6:	movs	r0, r0
   1f7a8:	b.n	1f430 <hash_extent_data_ref@@Base+0x58>
   1f7aa:	movs	r1, r0
   1f7ac:	b.n	1f3aa <btrfs_lookup_block_group@@Base+0x4f6>
   1f7ae:	movs	r1, r0
   1f7b0:	ldrsb	r2, [r4, r6]
   1f7b2:	movs	r4, r0
   1f7b4:			; <UNDEFINED> instruction: 0xeb8c0001
   1f7b8:	b.n	1f05a <btrfs_lookup_block_group@@Base+0x1a6>
   1f7ba:	movs	r1, r0
   1f7bc:			; <UNDEFINED> instruction: 0xb780
   1f7be:	movs	r1, r0
   1f7c0:	sbc.w	r0, r0, r1
   1f7c4:	b.n	1f01a <btrfs_lookup_block_group@@Base+0x166>
   1f7c6:	movs	r1, r0
   1f7c8:			; <UNDEFINED> instruction: 0xb75a
   1f7ca:	movs	r1, r0
   1f7cc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f7d0:	mov	r6, r0
   1f7d2:	vpush	{d8}
   1f7d6:	ldr.w	r1, [pc, #2168]	; 20050 <hash_extent_data_ref@@Base+0xc78>
   1f7da:	ldr.w	r0, [pc, #2168]	; 20054 <hash_extent_data_ref@@Base+0xc7c>
   1f7de:	add	r1, pc
   1f7e0:	sub	sp, #148	; 0x94
   1f7e2:	add	r0, pc
   1f7e4:	str	r1, [sp, #72]	; 0x48
   1f7e6:	ldr.w	r1, [pc, #2160]	; 20058 <hash_extent_data_ref@@Base+0xc80>
   1f7ea:	strd	r2, r3, [sp, #56]	; 0x38
   1f7ee:	ldrd	r8, r9, [sp, #200]	; 0xc8
   1f7f2:	ldr	r1, [r0, r1]
   1f7f4:	ldr	r0, [r6, #0]
   1f7f6:	ldr	r1, [r1, #0]
   1f7f8:	str	r1, [sp, #140]	; 0x8c
   1f7fa:	mov.w	r1, #0
   1f7fe:	ldr.w	sl, [r0, #24]
   1f802:	ldr.w	r1, [sl, #464]	; 0x1d0
   1f806:	ldr.w	r1, [r1, #308]	; 0x134
   1f80a:	ldr.w	r5, [r1, #188]	; 0xbc
   1f80e:	ldr.w	r1, [r0, #372]	; 0x174
   1f812:	cbz	r1, 1f83e <hash_extent_data_ref@@Base+0x466>
   1f814:	ldrd	fp, ip, [sp, #224]	; 0xe0
   1f818:	movs	r4, #1
   1f81a:	strd	r8, r9, [sp, #8]
   1f81e:	str	r4, [sp, #40]	; 0x28
   1f820:	strd	fp, ip, [sp, #32]
   1f824:	ldrd	fp, ip, [sp, #216]	; 0xd8
   1f828:	strd	fp, ip, [sp, #24]
   1f82c:	ldrd	fp, ip, [sp, #208]	; 0xd0
   1f830:	strd	fp, ip, [sp, #16]
   1f834:	ldrd	fp, ip, [sp, #192]	; 0xc0
   1f838:	strd	fp, ip, [sp]
   1f83c:	blx	r1
   1f83e:	bl	17e50 <btrfs_alloc_path@@Base>
   1f842:	mov	r4, r0
   1f844:	cmp	r0, #0
   1f846:	beq.w	1ffe2 <hash_extent_data_ref@@Base+0xc0a>
   1f84a:	movs	r3, #1
   1f84c:	strb.w	r3, [r0, #64]	; 0x40
   1f850:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f854:	movs	r7, #0
   1f856:	ldr.w	r1, [pc, #2052]	; 2005c <hash_extent_data_ref@@Base+0xc84>
   1f85a:	cmp	r3, #0
   1f85c:	ldr.w	r0, [pc, #2048]	; 20060 <hash_extent_data_ref@@Base+0xc88>
   1f860:	it	eq
   1f862:	cmpeq.w	r2, #256	; 0x100
   1f866:	ldr.w	r2, [pc, #2044]	; 20064 <hash_extent_data_ref@@Base+0xc8c>
   1f86a:	add	r1, pc
   1f86c:	add	r0, pc
   1f86e:	add	r2, pc
   1f870:	ite	cs
   1f872:	movcs	r3, #1
   1f874:	movcc	r3, #0
   1f876:	add.w	r2, r2, #207	; 0xcf
   1f87a:	str	r3, [sp, #76]	; 0x4c
   1f87c:	ite	cc
   1f87e:	ubfxcc	r3, r5, #8, #1
   1f882:	movcs	r3, #0
   1f884:	str	r7, [sp, #0]
   1f886:	str	r3, [sp, #64]	; 0x40
   1f888:	movw	r3, #1959	; 0x7a7
   1f88c:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1f890:	ldrd	r2, r3, [sp, #224]	; 0xe0
   1f894:	mov	r1, sl
   1f896:	mov	r0, r6
   1f898:	str	r7, [sp, #48]	; 0x30
   1f89a:	strd	r2, r3, [sp, #40]	; 0x28
   1f89e:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f8a2:	strd	r8, r9, [sp, #16]
   1f8a6:	strd	r2, r3, [sp, #32]
   1f8aa:	ldrd	r2, r3, [sp, #208]	; 0xd0
   1f8ae:	strd	r2, r3, [sp, #24]
   1f8b2:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1f8b6:	strd	r2, r3, [sp, #8]
   1f8ba:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f8be:	strd	r2, r3, [sp]
   1f8c2:	add	r3, sp, #96	; 0x60
   1f8c4:	mov	r2, r4
   1f8c6:	bl	1f450 <hash_extent_data_ref@@Base+0x78>
   1f8ca:	adds	r3, r0, #2
   1f8cc:	mov	r5, r0
   1f8ce:	bne.w	1f9e2 <hash_extent_data_ref@@Base+0x60a>
   1f8d2:	mov	r0, r4
   1f8d4:	bl	17e58 <btrfs_release_path@@Base>
   1f8d8:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f8dc:	str	r7, [sp, #96]	; 0x60
   1f8de:	cmp	r3, #0
   1f8e0:	it	eq
   1f8e2:	cmpeq.w	r2, #256	; 0x100
   1f8e6:	ldrd	r2, r3, [sp, #56]	; 0x38
   1f8ea:	strd	r2, r3, [sp, #120]	; 0x78
   1f8ee:	bcs.n	1f9a6 <hash_extent_data_ref@@Base+0x5ce>
   1f8f0:	orrs.w	r3, r8, r9
   1f8f4:	add.w	r3, sp, #129	; 0x81
   1f8f8:	beq.n	1f994 <hash_extent_data_ref@@Base+0x5bc>
   1f8fa:	movs	r2, #182	; 0xb6
   1f8fc:	str.w	r8, [sp, #129]	; 0x81
   1f900:	strb.w	r2, [sp, #128]	; 0x80
   1f904:	str.w	r9, [r3, #4]
   1f908:	mov.w	r3, #4294967295	; 0xffffffff
   1f90c:	movs	r5, #1
   1f90e:	add	r2, sp, #120	; 0x78
   1f910:	strd	r3, r5, [sp]
   1f914:	mov	r1, sl
   1f916:	mov	r3, r4
   1f918:	mov	r0, r6
   1f91a:	bl	1a23c <btrfs_search_slot@@Base>
   1f91e:	subs	r5, r0, #0
   1f920:	ble.n	1f9e2 <hash_extent_data_ref@@Base+0x60a>
   1f922:	ldr	r2, [sp, #72]	; 0x48
   1f924:	mvn.w	r5, #4
   1f928:	ldr.w	r3, [pc, #1852]	; 20068 <hash_extent_data_ref@@Base+0xc90>
   1f92c:	ldr	r3, [r2, r3]
   1f92e:	ldrd	r1, r2, [sp, #224]	; 0xe0
   1f932:	strd	r8, r9, [sp, #8]
   1f936:	strd	r1, r2, [sp, #32]
   1f93a:	ldrd	r1, r2, [sp, #216]	; 0xd8
   1f93e:	strd	r1, r2, [sp, #24]
   1f942:	ldrd	r1, r2, [sp, #208]	; 0xd0
   1f946:	strd	r1, r2, [sp, #16]
   1f94a:	ldrd	r1, r2, [sp, #56]	; 0x38
   1f94e:	strd	r1, r2, [sp]
   1f952:	movs	r1, #1
   1f954:	ldr.w	r2, [pc, #1812]	; 2006c <hash_extent_data_ref@@Base+0xc94>
   1f958:	ldr	r0, [r3, #0]
   1f95a:	add	r2, pc
   1f95c:	blx	881c <__fprintf_chk@plt+0x4>
   1f960:	ldr.w	r1, [pc, #1804]	; 20070 <hash_extent_data_ref@@Base+0xc98>
   1f964:	ldr	r2, [r4, #32]
   1f966:	movs	r0, #1
   1f968:	add	r1, pc
   1f96a:	blx	87f4 <__printf_chk@plt+0x4>
   1f96e:	ldr	r0, [r4, #0]
   1f970:	bl	25020 <btrfs_print_leaf@@Base>
   1f974:	mov	r0, r4
   1f976:	bl	17e7e <btrfs_free_path@@Base>
   1f97a:	ldr.w	r2, [pc, #1784]	; 20074 <hash_extent_data_ref@@Base+0xc9c>
   1f97e:	ldr.w	r3, [pc, #1752]	; 20058 <hash_extent_data_ref@@Base+0xc80>
   1f982:	add	r2, pc
   1f984:	ldr	r3, [r2, r3]
   1f986:	ldr	r2, [r3, #0]
   1f988:	ldr	r3, [sp, #140]	; 0x8c
   1f98a:	eors	r2, r3
   1f98c:	beq.w	20042 <hash_extent_data_ref@@Base+0xc6a>
   1f990:	blx	84cc <__stack_chk_fail@plt>
   1f994:	movs	r2, #176	; 0xb0
   1f996:	strb.w	r2, [sp, #128]	; 0x80
   1f99a:	ldr	r2, [sp, #208]	; 0xd0
   1f99c:	str.w	r2, [sp, #129]	; 0x81
   1f9a0:	ldr	r2, [sp, #212]	; 0xd4
   1f9a2:	str	r2, [r3, #4]
   1f9a4:	b.n	1f908 <hash_extent_data_ref@@Base+0x530>
   1f9a6:	orrs.w	r3, r8, r9
   1f9aa:	beq.n	1f9e8 <hash_extent_data_ref@@Base+0x610>
   1f9ac:	movs	r3, #184	; 0xb8
   1f9ae:	str.w	r8, [sp, #129]	; 0x81
   1f9b2:	strb.w	r3, [sp, #128]	; 0x80
   1f9b6:	str.w	r9, [sp, #133]	; 0x85
   1f9ba:	add	r3, sp, #120	; 0x78
   1f9bc:	vmov	s16, r3
   1f9c0:	mov.w	r3, #4294967295	; 0xffffffff
   1f9c4:	movs	r0, #1
   1f9c6:	vmov	r2, s16
   1f9ca:	mov	r1, sl
   1f9cc:	strd	r3, r0, [sp]
   1f9d0:	mov	r3, r4
   1f9d2:	mov	r0, r6
   1f9d4:	bl	1a23c <btrfs_search_slot@@Base>
   1f9d8:	subs	r5, r0, #0
   1f9da:	blt.n	1f922 <hash_extent_data_ref@@Base+0x54a>
   1f9dc:	orrs.w	r3, r8, r9
   1f9e0:	beq.n	1fa0c <hash_extent_data_ref@@Base+0x634>
   1f9e2:	cmp	r5, #0
   1f9e4:	beq.n	1faba <hash_extent_data_ref@@Base+0x6e2>
   1f9e6:	b.n	1f922 <hash_extent_data_ref@@Base+0x54a>
   1f9e8:	movs	r3, #178	; 0xb2
   1f9ea:	strb.w	r3, [sp, #128]	; 0x80
   1f9ee:	ldrd	r2, r3, [sp, #224]	; 0xe0
   1f9f2:	ldrd	r0, r1, [sp, #208]	; 0xd0
   1f9f6:	strd	r2, r3, [sp]
   1f9fa:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1f9fe:	bl	1f3d8 <hash_extent_data_ref@@Base>
   1fa02:	str.w	r0, [sp, #129]	; 0x81
   1fa06:	str.w	r1, [sp, #133]	; 0x85
   1fa0a:	b.n	1f9ba <hash_extent_data_ref@@Base+0x5e2>
   1fa0c:	ldr	r7, [r4, #0]
   1fa0e:	movs	r5, #0
   1fa10:	ldr.w	r3, [r7, #192]	; 0xc0
   1fa14:	str	r3, [sp, #80]	; 0x50
   1fa16:	ldr	r3, [r4, #32]
   1fa18:	ldr	r2, [sp, #80]	; 0x50
   1fa1a:	cmp	r3, r2
   1fa1c:	bcc.n	1fa44 <hash_extent_data_ref@@Base+0x66c>
   1fa1e:	mov.w	r3, #0
   1fa22:	mov	r1, r4
   1fa24:	strb.w	r3, [r4, #65]	; 0x41
   1fa28:	ldr.w	r0, [sl, #464]	; 0x1d0
   1fa2c:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   1fa30:	cmp	r0, #0
   1fa32:	blt.w	1f922 <hash_extent_data_ref@@Base+0x54a>
   1fa36:	bne.w	1f922 <hash_extent_data_ref@@Base+0x54a>
   1fa3a:	ldr	r7, [r4, #0]
   1fa3c:	movs	r5, #1
   1fa3e:	ldr.w	r3, [r7, #192]	; 0xc0
   1fa42:	str	r3, [sp, #80]	; 0x50
   1fa44:	vmov	r1, s16
   1fa48:	mov	r0, r7
   1fa4a:	ldr	r2, [r4, #32]
   1fa4c:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   1fa50:	ldrd	r2, r3, [sp, #120]	; 0x78
   1fa54:	ldrd	r0, r1, [sp, #56]	; 0x38
   1fa58:	cmp	r1, r3
   1fa5a:	it	eq
   1fa5c:	cmpeq	r0, r2
   1fa5e:	bne.w	1f922 <hash_extent_data_ref@@Base+0x54a>
   1fa62:	ldrb.w	r3, [sp, #128]	; 0x80
   1fa66:	cmp	r3, #178	; 0xb2
   1fa68:	bne.w	1f922 <hash_extent_data_ref@@Base+0x54a>
   1fa6c:	ldr	r0, [r4, #32]
   1fa6e:	add.w	ip, r7, #96	; 0x60
   1fa72:	movs	r3, #25
   1fa74:	mla	r3, r3, r0, ip
   1fa78:	ldr.w	lr, [r3, #118]	; 0x76
   1fa7c:	add.w	lr, lr, #101	; 0x65
   1fa80:	add.w	r1, ip, lr
   1fa84:	ldr.w	r2, [ip, lr]
   1fa88:	ldr	r3, [r1, #4]
   1fa8a:	ldrd	fp, ip, [sp, #208]	; 0xd0
   1fa8e:	cmp	ip, r3
   1fa90:	it	eq
   1fa92:	cmpeq	fp, r2
   1fa94:	bne.n	1fb30 <hash_extent_data_ref@@Base+0x758>
   1fa96:	ldrd	fp, ip, [sp, #216]	; 0xd8
   1fa9a:	ldr	r3, [r1, #12]
   1fa9c:	ldr	r2, [r1, #8]
   1fa9e:	cmp	ip, r3
   1faa0:	it	eq
   1faa2:	cmpeq	fp, r2
   1faa4:	bne.n	1fb30 <hash_extent_data_ref@@Base+0x758>
   1faa6:	ldrd	fp, ip, [sp, #224]	; 0xe0
   1faaa:	ldr	r3, [r1, #20]
   1faac:	ldr	r2, [r1, #16]
   1faae:	cmp	ip, r3
   1fab0:	it	eq
   1fab2:	cmpeq	fp, r2
   1fab4:	bne.n	1fb30 <hash_extent_data_ref@@Base+0x758>
   1fab6:	cmp	r5, #0
   1fab8:	bne.n	1fb36 <hash_extent_data_ref@@Base+0x75e>
   1faba:	ldr	r7, [r4, #32]
   1fabc:	add	r5, sp, #100	; 0x64
   1fabe:	cmp	r7, #0
   1fac0:	bge.n	1fb3e <hash_extent_data_ref@@Base+0x766>
   1fac2:	ldr.w	r7, [pc, #1460]	; 20078 <hash_extent_data_ref@@Base+0xca0>
   1fac6:	ldr.w	r5, [pc, #1460]	; 2007c <hash_extent_data_ref@@Base+0xca4>
   1faca:	ldr	r3, [sp, #96]	; 0x60
   1facc:	add	r7, pc
   1face:	adds	r7, #207	; 0xcf
   1fad0:	add	r5, pc
   1fad2:	ldr.w	r0, [pc, #1452]	; 20080 <hash_extent_data_ref@@Base+0xca8>
   1fad6:	mov	r2, r7
   1fad8:	mov	r1, r5
   1fada:	add	r0, pc
   1fadc:	str	r3, [sp, #0]
   1fade:	movw	r3, #1987	; 0x7c3
   1fae2:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fae6:	ldr	r3, [sp, #76]	; 0x4c
   1fae8:	mov	r2, r4
   1faea:	mov	r1, sl
   1faec:	mov	r0, r6
   1faee:	str	r3, [sp, #0]
   1faf0:	movs	r3, #0
   1faf2:	bl	1eca4 <btrfs_create_tree@@Base+0x928>
   1faf6:	movw	r3, #1991	; 0x7c7
   1fafa:	mov	r2, r7
   1fafc:	mov	r1, r5
   1fafe:	str	r0, [sp, #0]
   1fb00:	ldr.w	r0, [pc, #1408]	; 20084 <hash_extent_data_ref@@Base+0xcac>
   1fb04:	add	r0, pc
   1fb06:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fb0a:	mov	r0, r4
   1fb0c:	bl	17e58 <btrfs_release_path@@Base>
   1fb10:	ldr	r3, [sp, #56]	; 0x38
   1fb12:	ldr	r2, [sp, #64]	; 0x40
   1fb14:	str	r3, [sp, #100]	; 0x64
   1fb16:	ldr	r3, [sp, #60]	; 0x3c
   1fb18:	str	r3, [sp, #104]	; 0x68
   1fb1a:	add.w	r3, sp, #109	; 0x6d
   1fb1e:	cbnz	r2, 1fb92 <hash_extent_data_ref@@Base+0x7ba>
   1fb20:	movs	r2, #168	; 0xa8
   1fb22:	strb.w	r2, [sp, #108]	; 0x6c
   1fb26:	ldr	r2, [sp, #192]	; 0xc0
   1fb28:	str.w	r2, [sp, #109]	; 0x6d
   1fb2c:	ldr	r2, [sp, #196]	; 0xc4
   1fb2e:	b.n	1fba0 <hash_extent_data_ref@@Base+0x7c8>
   1fb30:	adds	r0, #1
   1fb32:	str	r0, [r4, #32]
   1fb34:	b.n	1fa16 <hash_extent_data_ref@@Base+0x63e>
   1fb36:	mov	r0, r4
   1fb38:	bl	17e58 <btrfs_release_path@@Base>
   1fb3c:	b.n	1f9c0 <hash_extent_data_ref@@Base+0x5e8>
   1fb3e:	ldr	r0, [r4, #0]
   1fb40:	mov	r2, r7
   1fb42:	mov	r1, r5
   1fb44:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   1fb48:	ldrd	r2, r3, [sp, #100]	; 0x64
   1fb4c:	ldrd	r0, r1, [sp, #56]	; 0x38
   1fb50:	cmp	r1, r3
   1fb52:	it	eq
   1fb54:	cmpeq	r0, r2
   1fb56:	bne.n	1fac2 <hash_extent_data_ref@@Base+0x6ea>
   1fb58:	ldrb.w	r3, [sp, #108]	; 0x6c
   1fb5c:	cmp	r3, #168	; 0xa8
   1fb5e:	bne.n	1fb80 <hash_extent_data_ref@@Base+0x7a8>
   1fb60:	ldr.w	r2, [sp, #109]	; 0x6d
   1fb64:	ldr.w	r3, [sp, #113]	; 0x71
   1fb68:	ldrd	r0, r1, [sp, #192]	; 0xc0
   1fb6c:	cmp	r1, r3
   1fb6e:	it	eq
   1fb70:	cmpeq	r0, r2
   1fb72:	beq.n	1fc60 <hash_extent_data_ref@@Base+0x888>
   1fb74:	ldr	r3, [r4, #32]
   1fb76:	subs	r3, r3, r7
   1fb78:	cmp	r3, #5
   1fb7a:	bgt.n	1fac2 <hash_extent_data_ref@@Base+0x6ea>
   1fb7c:	subs	r7, #1
   1fb7e:	b.n	1fabe <hash_extent_data_ref@@Base+0x6e6>
   1fb80:	cmp	r3, #169	; 0xa9
   1fb82:	bne.n	1fb74 <hash_extent_data_ref@@Base+0x79c>
   1fb84:	ldr.w	r2, [sp, #109]	; 0x6d
   1fb88:	ldr.w	r3, [sp, #113]	; 0x71
   1fb8c:	ldrd	r0, r1, [sp, #216]	; 0xd8
   1fb90:	b.n	1fb6c <hash_extent_data_ref@@Base+0x794>
   1fb92:	movs	r2, #169	; 0xa9
   1fb94:	strb.w	r2, [sp, #108]	; 0x6c
   1fb98:	ldr	r2, [sp, #216]	; 0xd8
   1fb9a:	str.w	r2, [sp, #109]	; 0x6d
   1fb9e:	ldr	r2, [sp, #220]	; 0xdc
   1fba0:	add	r7, sp, #100	; 0x64
   1fba2:	str	r2, [r3, #4]
   1fba4:	movs	r1, #1
   1fba6:	mov.w	r3, #4294967295	; 0xffffffff
   1fbaa:	mov	r2, r7
   1fbac:	strd	r3, r1, [sp]
   1fbb0:	mov	r0, r6
   1fbb2:	mov	r3, r4
   1fbb4:	mov	r1, sl
   1fbb6:	bl	1a23c <btrfs_search_slot@@Base>
   1fbba:	subs	r5, r0, #0
   1fbbc:	ble.w	20018 <hash_extent_data_ref@@Base+0xc40>
   1fbc0:	ldr	r3, [sp, #64]	; 0x40
   1fbc2:	cmp	r3, #0
   1fbc4:	beq.w	2001e <hash_extent_data_ref@@Base+0xc46>
   1fbc8:	ldr	r2, [r4, #32]
   1fbca:	cmp	r2, #0
   1fbcc:	beq.w	1ffe8 <hash_extent_data_ref@@Base+0xc10>
   1fbd0:	subs	r2, #1
   1fbd2:	ldr	r0, [r4, #0]
   1fbd4:	mov	r1, r7
   1fbd6:	str	r2, [r4, #32]
   1fbd8:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   1fbdc:	ldrd	r2, r3, [sp, #100]	; 0x64
   1fbe0:	ldrd	r0, r1, [sp, #56]	; 0x38
   1fbe4:	cmp	r1, r3
   1fbe6:	it	eq
   1fbe8:	cmpeq	r0, r2
   1fbea:	bne.w	1ffe8 <hash_extent_data_ref@@Base+0xc10>
   1fbee:	ldrb.w	r3, [sp, #108]	; 0x6c
   1fbf2:	cmp	r3, #168	; 0xa8
   1fbf4:	bne.w	1ffe8 <hash_extent_data_ref@@Base+0xc10>
   1fbf8:	ldrd	r0, r1, [sp, #192]	; 0xc0
   1fbfc:	ldr.w	r3, [sp, #113]	; 0x71
   1fc00:	ldr.w	r2, [sp, #109]	; 0x6d
   1fc04:	cmp	r1, r3
   1fc06:	it	eq
   1fc08:	cmpeq	r0, r2
   1fc0a:	bne.w	1ffe8 <hash_extent_data_ref@@Base+0xc10>
   1fc0e:	movs	r5, #0
   1fc10:	ldr.w	r2, [pc, #1140]	; 20088 <hash_extent_data_ref@@Base+0xcb0>
   1fc14:	mov.w	r3, #2032	; 0x7f0
   1fc18:	ldr.w	r1, [pc, #1136]	; 2008c <hash_extent_data_ref@@Base+0xcb4>
   1fc1c:	mov.w	r8, #0
   1fc20:	ldr.w	r0, [pc, #1132]	; 20090 <hash_extent_data_ref@@Base+0xcb8>
   1fc24:	add	r2, pc
   1fc26:	adds	r2, #207	; 0xcf
   1fc28:	add	r1, pc
   1fc2a:	add	r0, pc
   1fc2c:	str	r5, [sp, #0]
   1fc2e:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fc32:	ldr	r7, [r4, #32]
   1fc34:	ldr	r3, [r4, #0]
   1fc36:	add.w	fp, r3, #96	; 0x60
   1fc3a:	str	r3, [sp, #80]	; 0x50
   1fc3c:	movs	r3, #25
   1fc3e:	mla	r3, r3, r7, fp
   1fc42:	add.w	r2, r3, #101	; 0x65
   1fc46:	ldr.w	r1, [r3, #122]	; 0x7a
   1fc4a:	cmp	r1, #23
   1fc4c:	bhi.n	1fc68 <hash_extent_data_ref@@Base+0x890>
   1fc4e:	ldr.w	r0, [pc, #1092]	; 20094 <hash_extent_data_ref@@Base+0xcbc>
   1fc52:	movs	r2, #24
   1fc54:	mvn.w	r5, #116	; 0x74
   1fc58:	add	r0, pc
   1fc5a:	bl	1747c <__btrfs_error@@Base>
   1fc5e:	b.n	1f974 <hash_extent_data_ref@@Base+0x59c>
   1fc60:	mov.w	r8, #1
   1fc64:	movs	r5, #0
   1fc66:	b.n	1fc34 <hash_extent_data_ref@@Base+0x85c>
   1fc68:	ldr.w	r3, [r2, #17]
   1fc6c:	adds	r3, #101	; 0x65
   1fc6e:	str	r3, [sp, #72]	; 0x48
   1fc70:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1fc74:	cmp	r3, #0
   1fc76:	it	eq
   1fc78:	cmpeq.w	r2, #256	; 0x100
   1fc7c:	bcs.n	1fcdc <hash_extent_data_ref@@Base+0x904>
   1fc7e:	ldrb.w	r3, [sp, #108]	; 0x6c
   1fc82:	cmp	r3, #168	; 0xa8
   1fc84:	bne.n	1fcdc <hash_extent_data_ref@@Base+0x904>
   1fc86:	ldr.w	r0, [pc, #1040]	; 20098 <hash_extent_data_ref@@Base+0xcc0>
   1fc8a:	cmp	r1, #41	; 0x29
   1fc8c:	ldr.w	r2, [pc, #1036]	; 2009c <hash_extent_data_ref@@Base+0xcc4>
   1fc90:	movw	r3, #2063	; 0x80f
   1fc94:	add	r0, pc
   1fc96:	ite	hi
   1fc98:	movhi	r1, #0
   1fc9a:	movls	r1, #1
   1fc9c:	str	r0, [sp, #64]	; 0x40
   1fc9e:	str	r1, [sp, #0]
   1fca0:	mov	r1, r0
   1fca2:	ldr	r0, [pc, #1020]	; (200a0 <hash_extent_data_ref@@Base+0xcc8>)
   1fca4:	add	r2, pc
   1fca6:	adds	r2, #207	; 0xcf
   1fca8:	str	r2, [sp, #84]	; 0x54
   1fcaa:	add	r0, pc
   1fcac:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fcb0:	ldr	r3, [sp, #72]	; 0x48
   1fcb2:	ldrd	r0, r1, [sp, #216]	; 0xd8
   1fcb6:	add	r3, fp
   1fcb8:	ldrb.w	r2, [r3, #41]	; 0x29
   1fcbc:	movs	r3, #0
   1fcbe:	cmp	r3, r1
   1fcc0:	ldr	r1, [sp, #64]	; 0x40
   1fcc2:	it	eq
   1fcc4:	cmpeq	r2, r0
   1fcc6:	ldr	r0, [pc, #988]	; (200a4 <hash_extent_data_ref@@Base+0xccc>)
   1fcc8:	ldr	r2, [sp, #84]	; 0x54
   1fcca:	ite	ne
   1fccc:	movne	r3, #1
   1fcce:	moveq	r3, #0
   1fcd0:	add	r0, pc
   1fcd2:	str	r3, [sp, #0]
   1fcd4:	movw	r3, #2065	; 0x811
   1fcd8:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   1fcdc:	ldr	r3, [sp, #72]	; 0x48
   1fcde:	ldr.w	r9, [pc, #968]	; 200a8 <hash_extent_data_ref@@Base+0xcd0>
   1fce2:	add	r3, fp
   1fce4:	str	r3, [sp, #84]	; 0x54
   1fce6:	ldr	r3, [sp, #72]	; 0x48
   1fce8:	add	r9, pc
   1fcea:	ldr	r0, [pc, #960]	; (200ac <hash_extent_data_ref@@Base+0xcd4>)
   1fcec:	ldr.w	r3, [fp, r3]
   1fcf0:	add	r0, pc
   1fcf2:	str	r3, [sp, #64]	; 0x40
   1fcf4:	ldr	r3, [sp, #84]	; 0x54
   1fcf6:	ldr	r3, [r3, #4]
   1fcf8:	str	r3, [sp, #68]	; 0x44
   1fcfa:	ldr	r3, [pc, #948]	; (200b0 <hash_extent_data_ref@@Base+0xcd8>)
   1fcfc:	add	r3, pc
   1fcfe:	str	r3, [sp, #88]	; 0x58
   1fd00:	add.w	r2, r3, #207	; 0xcf
   1fd04:	ldrd	r3, r1, [sp, #64]	; 0x40
   1fd08:	str	r2, [sp, #92]	; 0x5c
   1fd0a:	orrs	r3, r1
   1fd0c:	mov	r1, r9
   1fd0e:	ite	eq
   1fd10:	moveq	r3, #1
   1fd12:	movne	r3, #0
   1fd14:	str	r3, [sp, #0]
   1fd16:	movw	r3, #2069	; 0x815
   1fd1a:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fd1e:	ldr	r3, [sp, #64]	; 0x40
   1fd20:	adds.w	r1, r3, #4294967295	; 0xffffffff
   1fd24:	ldr	r3, [sp, #68]	; 0x44
   1fd26:	adc.w	ip, r3, #4294967295	; 0xffffffff
   1fd2a:	ldrd	r2, r3, [sp, #64]	; 0x40
   1fd2e:	cmp	r3, #0
   1fd30:	it	eq
   1fd32:	cmpeq	r2, #1
   1fd34:	beq.n	1fd98 <hash_extent_data_ref@@Base+0x9c0>
   1fd36:	ldr	r0, [sp, #96]	; 0x60
   1fd38:	cbz	r0, 1fd84 <hash_extent_data_ref@@Base+0x9ac>
   1fd3a:	ldr	r0, [pc, #888]	; (200b4 <hash_extent_data_ref@@Base+0xcdc>)
   1fd3c:	eor.w	r3, r8, #1
   1fd40:	ldr	r2, [sp, #92]	; 0x5c
   1fd42:	mov	r1, r9
   1fd44:	str	r3, [sp, #0]
   1fd46:	add	r0, pc
   1fd48:	movw	r3, #2078	; 0x81e
   1fd4c:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fd50:	cmp.w	r8, #0
   1fd54:	beq.w	1f974 <hash_extent_data_ref@@Base+0x59c>
   1fd58:	ldr	r3, [sp, #76]	; 0x4c
   1fd5a:	mov	r2, r4
   1fd5c:	mov	r1, sl
   1fd5e:	mov	r0, r6
   1fd60:	str	r3, [sp, #0]
   1fd62:	ldr	r3, [sp, #96]	; 0x60
   1fd64:	bl	1eca4 <btrfs_create_tree@@Base+0x928>
   1fd68:	ldr	r2, [pc, #844]	; (200b8 <hash_extent_data_ref@@Base+0xce0>)
   1fd6a:	ldr	r1, [pc, #848]	; (200bc <hash_extent_data_ref@@Base+0xce4>)
   1fd6c:	movw	r3, #2087	; 0x827
   1fd70:	add	r2, pc
   1fd72:	adds	r2, #207	; 0xcf
   1fd74:	add	r1, pc
   1fd76:	mov	r5, r0
   1fd78:	str	r0, [sp, #0]
   1fd7a:	ldr	r0, [pc, #836]	; (200c0 <hash_extent_data_ref@@Base+0xce8>)
   1fd7c:	add	r0, pc
   1fd7e:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fd82:	b.n	1f974 <hash_extent_data_ref@@Base+0x59c>
   1fd84:	ldr	r3, [sp, #72]	; 0x48
   1fd86:	ldr	r0, [sp, #80]	; 0x50
   1fd88:	str.w	r1, [fp, r3]
   1fd8c:	ldr	r3, [sp, #84]	; 0x54
   1fd8e:	str.w	ip, [r3, #4]
   1fd92:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   1fd96:	b.n	1fd50 <hash_extent_data_ref@@Base+0x978>
   1fd98:	cmp.w	r8, #0
   1fd9c:	beq.w	1ffba <hash_extent_data_ref@@Base+0xbe2>
   1fda0:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1fda4:	cmp	r3, #0
   1fda6:	it	eq
   1fda8:	cmpeq.w	r2, #256	; 0x100
   1fdac:	bcc.w	1ff98 <hash_extent_data_ref@@Base+0xbc0>
   1fdb0:	ldr.w	fp, [r4]
   1fdb4:	add	r1, sp, #120	; 0x78
   1fdb6:	ldr	r5, [sp, #96]	; 0x60
   1fdb8:	ldr	r2, [r4, #32]
   1fdba:	mov	r0, fp
   1fdbc:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   1fdc0:	add.w	r0, fp, #96	; 0x60
   1fdc4:	cmp	r5, #0
   1fdc6:	beq.w	1ff4e <hash_extent_data_ref@@Base+0xb76>
   1fdca:	ldrb	r3, [r0, r5]
   1fdcc:	add	r0, r5
   1fdce:	cmp	r3, #178	; 0xb2
   1fdd0:	ite	eq
   1fdd2:	ldreq.w	r3, [r0, #25]
   1fdd6:	ldrne.w	r3, [r0, #9]
   1fdda:	subs	r3, #1
   1fddc:	it	ne
   1fdde:	movne	r3, #1
   1fde0:	ldr	r2, [pc, #736]	; (200c4 <hash_extent_data_ref@@Base+0xcec>)
   1fde2:	ldr	r1, [pc, #740]	; (200c8 <hash_extent_data_ref@@Base+0xcf0>)
   1fde4:	ldr	r0, [pc, #740]	; (200cc <hash_extent_data_ref@@Base+0xcf4>)
   1fde6:	add	r2, pc
   1fde8:	adds	r2, #207	; 0xcf
   1fdea:	add	r1, pc
   1fdec:	add	r0, pc
   1fdee:	str	r3, [sp, #0]
   1fdf0:	movw	r3, #2093	; 0x82d
   1fdf4:	str	r2, [sp, #72]	; 0x48
   1fdf6:	str	r1, [sp, #64]	; 0x40
   1fdf8:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fdfc:	ldr	r0, [sp, #96]	; 0x60
   1fdfe:	ldr	r3, [r4, #32]
   1fe00:	ldr	r1, [sp, #64]	; 0x40
   1fe02:	ldr	r2, [sp, #72]	; 0x48
   1fe04:	cmp	r0, #0
   1fe06:	beq.w	1ff9c <hash_extent_data_ref@@Base+0xbc4>
   1fe0a:	subs	r7, r7, r3
   1fe0c:	ldr	r0, [pc, #704]	; (200d0 <hash_extent_data_ref@@Base+0xcf8>)
   1fe0e:	mov.w	r3, #2096	; 0x830
   1fe12:	it	ne
   1fe14:	movne	r7, #1
   1fe16:	add	r0, pc
   1fe18:	str	r7, [sp, #0]
   1fe1a:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fe1e:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1fe22:	cmp	r3, #0
   1fe24:	it	eq
   1fe26:	cmpeq.w	r2, #256	; 0x100
   1fe2a:	bcs.w	1ffc6 <hash_extent_data_ref@@Base+0xbee>
   1fe2e:	ldr	r3, [sp, #192]	; 0xc0
   1fe30:	ldr	r0, [r6, #0]
   1fe32:	str	r3, [sp, #0]
   1fe34:	ldrd	r2, r3, [sp, #56]	; 0x38
   1fe38:	bl	1c228 <btrfs_find_tree_block@@Base>
   1fe3c:	mov	r5, r0
   1fe3e:	cmp	r0, #0
   1fe40:	beq.w	1ffc6 <hash_extent_data_ref@@Base+0xbee>
   1fe44:	movs	r2, #0
   1fe46:	movs	r3, #0
   1fe48:	bl	1d514 <btrfs_buffer_uptodate@@Base>
   1fe4c:	cmp	r0, #0
   1fe4e:	beq.w	1ffc0 <hash_extent_data_ref@@Base+0xbe8>
   1fe52:	ldr.w	r3, [r5, #188]	; 0xbc
   1fe56:	mov.w	r1, #4294967295	; 0xffffffff
   1fe5a:	ldr.w	r2, [r5, #184]	; 0xb8
   1fe5e:	mvn.w	r0, #5
   1fe62:	cmp	r3, r1
   1fe64:	it	eq
   1fe66:	cmpeq	r2, r0
   1fe68:	beq.w	1ffc0 <hash_extent_data_ref@@Base+0xbe8>
   1fe6c:	ldrd	r2, r3, [r6, #8]
   1fe70:	ldr.w	r1, [r5, #180]	; 0xb4
   1fe74:	ldr.w	r0, [r5, #176]	; 0xb0
   1fe78:	cmp	r1, r3
   1fe7a:	it	eq
   1fe7c:	cmpeq	r0, r2
   1fe7e:	bne.w	1ffc0 <hash_extent_data_ref@@Base+0xbe8>
   1fe82:	ldr.w	r1, [r5, #152]	; 0x98
   1fe86:	movs	r3, #0
   1fe88:	and.w	r2, r1, #1
   1fe8c:	orrs	r3, r2
   1fe8e:	bne.w	1ffc0 <hash_extent_data_ref@@Base+0xbe8>
   1fe92:	mov	r0, r5
   1fe94:	mov.w	r9, #1
   1fe98:	bl	1d50c <clean_tree_block@@Base>
   1fe9c:	mov	r0, r5
   1fe9e:	bl	16c20 <free_extent_buffer@@Base>
   1fea2:	ldr	r5, [pc, #560]	; (200d4 <hash_extent_data_ref@@Base+0xcfc>)
   1fea4:	movs	r3, #0
   1fea6:	ldr	r7, [pc, #560]	; (200d8 <hash_extent_data_ref@@Base+0xd00>)
   1fea8:	add	r5, pc
   1feaa:	ldr	r0, [pc, #560]	; (200dc <hash_extent_data_ref@@Base+0xd04>)
   1feac:	adds	r5, #207	; 0xcf
   1feae:	add	r7, pc
   1feb0:	add	r0, pc
   1feb2:	str	r3, [sp, #0]
   1feb4:	mov	r2, r5
   1feb6:	movw	r3, #2108	; 0x83c
   1feba:	mov	r1, r7
   1febc:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fec0:	str.w	r8, [sp]
   1fec4:	mov	r2, r4
   1fec6:	ldr	r3, [r4, #32]
   1fec8:	mov	r1, sl
   1feca:	mov	r0, r6
   1fecc:	bl	1b3f8 <btrfs_del_items@@Base>
   1fed0:	ldr.w	r8, [pc, #524]	; 200e0 <hash_extent_data_ref@@Base+0xd08>
   1fed4:	mov.w	r3, #2112	; 0x840
   1fed8:	mov	r2, r5
   1feda:	add	r8, pc
   1fedc:	mov	r1, r7
   1fede:	str	r0, [sp, #0]
   1fee0:	mov	r0, r8
   1fee2:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1fee6:	mov	r0, r4
   1fee8:	bl	17e58 <btrfs_release_path@@Base>
   1feec:	ldrd	r2, r3, [sp, #216]	; 0xd8
   1fef0:	cmp	r3, #0
   1fef2:	it	eq
   1fef4:	cmpeq.w	r2, #256	; 0x100
   1fef8:	bcc.n	1ff1c <hash_extent_data_ref@@Base+0xb44>
   1fefa:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1fefe:	mov	r0, r6
   1ff00:	strd	r2, r3, [sp]
   1ff04:	ldrd	r2, r3, [sp, #56]	; 0x38
   1ff08:	bl	2e770 <btrfs_del_csums@@Base>
   1ff0c:	movw	r3, #2117	; 0x845
   1ff10:	mov	r2, r5
   1ff12:	mov	r1, r7
   1ff14:	str	r0, [sp, #0]
   1ff16:	mov	r0, r8
   1ff18:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1ff1c:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1ff20:	mov	r0, r6
   1ff22:	strd	r2, r3, [sp]
   1ff26:	ldrd	r2, r3, [sp, #56]	; 0x38
   1ff2a:	bl	2ca80 <add_to_free_space_tree@@Base>
   1ff2e:	mov	r5, r0
   1ff30:	cmp	r0, #0
   1ff32:	bne.w	1f974 <hash_extent_data_ref@@Base+0x59c>
   1ff36:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1ff3a:	strd	r0, r9, [sp, #8]
   1ff3e:	ldr	r0, [r6, #0]
   1ff40:	strd	r2, r3, [sp]
   1ff44:	ldrd	r2, r3, [sp, #56]	; 0x38
   1ff48:	bl	1f03c <btrfs_lookup_block_group@@Base+0x188>
   1ff4c:	b.n	1f974 <hash_extent_data_ref@@Base+0x59c>
   1ff4e:	ldrb.w	r3, [sp, #128]	; 0x80
   1ff52:	cmp	r3, #178	; 0xb2
   1ff54:	bne.n	1ff6a <hash_extent_data_ref@@Base+0xb92>
   1ff56:	ldr	r3, [r4, #32]
   1ff58:	movs	r2, #25
   1ff5a:	mla	r3, r2, r3, r0
   1ff5e:	ldr.w	r5, [r3, #118]	; 0x76
   1ff62:	add	r0, r5
   1ff64:	ldr.w	r3, [r0, #125]	; 0x7d
   1ff68:	b.n	1fdda <hash_extent_data_ref@@Base+0xa02>
   1ff6a:	cmp	r3, #184	; 0xb8
   1ff6c:	bne.n	1ff82 <hash_extent_data_ref@@Base+0xbaa>
   1ff6e:	ldr	r3, [r4, #32]
   1ff70:	movs	r2, #25
   1ff72:	mla	r3, r2, r3, r0
   1ff76:	ldr.w	r5, [r3, #118]	; 0x76
   1ff7a:	add	r0, r5
   1ff7c:	ldr.w	r3, [r0, #101]	; 0x65
   1ff80:	b.n	1fdda <hash_extent_data_ref@@Base+0xa02>
   1ff82:	ldr	r2, [sp, #88]	; 0x58
   1ff84:	movs	r3, #1
   1ff86:	ldr	r0, [pc, #348]	; (200e4 <hash_extent_data_ref@@Base+0xd0c>)
   1ff88:	mov	r1, r9
   1ff8a:	str	r3, [sp, #0]
   1ff8c:	adds	r2, #221	; 0xdd
   1ff8e:	add	r0, pc
   1ff90:	movw	r3, #777	; 0x309
   1ff94:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   1ff98:	movs	r3, #0
   1ff9a:	b.n	1fde0 <hash_extent_data_ref@@Base+0xa08>
   1ff9c:	adds	r0, r7, #1
   1ff9e:	mov.w	r8, #2
   1ffa2:	subs	r3, r0, r3
   1ffa4:	ldr	r0, [pc, #320]	; (200e8 <hash_extent_data_ref@@Base+0xd10>)
   1ffa6:	it	ne
   1ffa8:	movne	r3, #1
   1ffaa:	add	r0, pc
   1ffac:	str	r3, [sp, #0]
   1ffae:	movw	r3, #2098	; 0x832
   1ffb2:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   1ffb6:	str	r7, [r4, #32]
   1ffb8:	b.n	1fe1e <hash_extent_data_ref@@Base+0xa46>
   1ffba:	mov.w	r8, #1
   1ffbe:	b.n	1fe1e <hash_extent_data_ref@@Base+0xa46>
   1ffc0:	mov	r0, r5
   1ffc2:	bl	16c20 <free_extent_buffer@@Base>
   1ffc6:	movs	r3, #1
   1ffc8:	str	r3, [sp, #8]
   1ffca:	ldrd	r2, r3, [sp, #192]	; 0xc0
   1ffce:	mov.w	r9, #0
   1ffd2:	ldr	r0, [r6, #0]
   1ffd4:	strd	r2, r3, [sp]
   1ffd8:	ldrd	r2, r3, [sp, #56]	; 0x38
   1ffdc:	bl	1ef4c <btrfs_lookup_block_group@@Base+0x98>
   1ffe0:	b.n	1fea2 <hash_extent_data_ref@@Base+0xaca>
   1ffe2:	mvn.w	r5, #11
   1ffe6:	b.n	1f97a <hash_extent_data_ref@@Base+0x5a2>
   1ffe8:	mov	r0, r4
   1ffea:	bl	17e58 <btrfs_release_path@@Base>
   1ffee:	movs	r3, #168	; 0xa8
   1fff0:	strb.w	r3, [sp, #108]	; 0x6c
   1fff4:	movs	r2, #1
   1fff6:	ldr	r3, [sp, #192]	; 0xc0
   1fff8:	mov	r1, sl
   1fffa:	mov	r0, r6
   1fffc:	str.w	r3, [sp, #109]	; 0x6d
   20000:	ldr	r3, [sp, #196]	; 0xc4
   20002:	str.w	r3, [sp, #113]	; 0x71
   20006:	mov.w	r3, #4294967295	; 0xffffffff
   2000a:	strd	r3, r2, [sp]
   2000e:	add	r2, sp, #100	; 0x64
   20010:	mov	r3, r4
   20012:	bl	1a23c <btrfs_search_slot@@Base>
   20016:	mov	r5, r0
   20018:	cmp	r5, #0
   2001a:	beq.w	1fc0e <hash_extent_data_ref@@Base+0x836>
   2001e:	ldr	r2, [sp, #72]	; 0x48
   20020:	movs	r1, #1
   20022:	ldr	r3, [pc, #68]	; (20068 <hash_extent_data_ref@@Base+0xc90>)
   20024:	ldr	r0, [r2, r3]
   20026:	ldrd	r2, r3, [sp, #56]	; 0x38
   2002a:	strd	r2, r3, [sp]
   2002e:	mov	r3, r5
   20030:	ldr	r2, [pc, #184]	; (200ec <hash_extent_data_ref@@Base+0xd14>)
   20032:	ldr	r0, [r0, #0]
   20034:	add	r2, pc
   20036:	blx	881c <__fprintf_chk@plt+0x4>
   2003a:	ldr	r0, [r4, #0]
   2003c:	bl	25020 <btrfs_print_leaf@@Base>
   20040:	b.n	1fc10 <hash_extent_data_ref@@Base+0x838>
   20042:	mov	r0, r5
   20044:	add	sp, #148	; 0x94
   20046:	vpop	{d8}
   2004a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2004e:	nop
   20050:	strb	r2, [r5, r6]
   20052:	movs	r4, r0
   20054:	strb	r6, [r4, r6]
   20056:	movs	r4, r0
   20058:	lsls	r4, r4, #8
   2005a:	movs	r0, r0
   2005c:	b.n	204a2 <btrfs_inc_extent_ref@@Base+0x3b2>
   2005e:	movs	r1, r0
   20060:	b.n	20672 <btrfs_lookup_extent_info@@Base+0xe6>
   20062:	movs	r1, r0
   20064:	strd	r0, r0, [lr, #-4]
   20068:	lsls	r4, r6, #8
   2006a:	movs	r0, r0
   2006c:	b.n	20646 <btrfs_lookup_extent_info@@Base+0xba>
   2006e:	movs	r1, r0
   20070:	b.n	206d8 <btrfs_lookup_extent_info@@Base+0x14c>
   20072:	movs	r1, r0
   20074:	strb	r6, [r0, r0]
   20076:	movs	r4, r0
   20078:	b.n	1fe5c <hash_extent_data_ref@@Base+0xa84>
   2007a:	movs	r1, r0
   2007c:	svc	187	; 0xbb
   2007e:	movs	r1, r0
   20080:	pop	{r0, r1, r7}
   20082:	movs	r1, r0
   20084:	add	r4, sp, #188	; 0xbc
   20086:	movs	r1, r0
   20088:	b.n	1fbbc <hash_extent_data_ref@@Base+0x7e4>
   2008a:	movs	r1, r0
   2008c:	udf	#99	; 0x63
   2008e:	movs	r1, r0
   20090:	add	r3, sp, #36	; 0x24
   20092:	movs	r1, r0
   20094:	b.n	20164 <btrfs_inc_extent_ref@@Base+0x74>
   20096:	movs	r1, r0
   20098:	ble.n	2008a <hash_extent_data_ref@@Base+0xcb2>
   2009a:	movs	r1, r0
   2009c:	b.n	1fad0 <hash_extent_data_ref@@Base+0x6f8>
   2009e:	movs	r1, r0
   200a0:	b.n	20162 <btrfs_inc_extent_ref@@Base+0x72>
   200a2:	movs	r1, r0
   200a4:	b.n	20166 <btrfs_inc_extent_ref@@Base+0x76>
   200a6:	movs	r1, r0
   200a8:	ble.n	1fff2 <hash_extent_data_ref@@Base+0xc1a>
   200aa:	movs	r1, r0
   200ac:	udf	#165	; 0xa5
   200ae:	movs	r1, r0
   200b0:	b.n	1fa34 <hash_extent_data_ref@@Base+0x65c>
   200b2:	movs	r1, r0
   200b4:	b.n	200f0 <btrfs_inc_extent_ref@@Base>
   200b6:	movs	r1, r0
   200b8:	b.n	1f954 <hash_extent_data_ref@@Base+0x57c>
   200ba:	movs	r1, r0
   200bc:	ble.n	200ee <hash_extent_data_ref@@Base+0xd16>
   200be:	movs	r1, r0
   200c0:	add	r1, sp, #732	; 0x2dc
   200c2:	movs	r1, r0
   200c4:	b.n	20874 <btrfs_set_block_flags@@Base+0x138>
   200c6:	movs	r1, r0
   200c8:	bgt.n	2000e <hash_extent_data_ref@@Base+0xc36>
   200ca:	movs	r1, r0
   200cc:	svc	132	; 0x84
   200ce:	movs	r1, r0
   200d0:	svc	151	; 0x97
   200d2:	movs	r1, r0
   200d4:	b.n	20700 <btrfs_lookup_extent_info@@Base+0x174>
   200d6:	movs	r1, r0
   200d8:	blt.n	20096 <hash_extent_data_ref@@Base+0xcbe>
   200da:	movs	r1, r0
   200dc:	svc	61	; 0x3d
   200de:	movs	r1, r0
   200e0:	add	r0, sp, #356	; 0x164
   200e2:	movs	r1, r0
   200e4:	udf	#93	; 0x5d
   200e6:	movs	r1, r0
   200e8:	udf	#33	; 0x21
   200ea:	movs	r1, r0
   200ec:	blt.n	200aa <hash_extent_data_ref@@Base+0xcd2>
   200ee:	movs	r1, r0

000200f0 <btrfs_inc_extent_ref@@Base>:
   200f0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   200f4:	sub	sp, #100	; 0x64
   200f6:	mov	r6, r0
   200f8:	mov	r7, r1
   200fa:	strd	r2, r3, [sp, #56]	; 0x38
   200fe:	ldr.w	r2, [pc, #1104]	; 20550 <btrfs_inc_extent_ref@@Base+0x460>
   20102:	ldr.w	r3, [pc, #1104]	; 20554 <btrfs_inc_extent_ref@@Base+0x464>
   20106:	add	r2, pc
   20108:	ldrd	sl, fp, [sp, #144]	; 0x90
   2010c:	ldr	r3, [r2, r3]
   2010e:	ldr	r3, [r3, #0]
   20110:	str	r3, [sp, #92]	; 0x5c
   20112:	mov.w	r3, #0
   20116:	bl	17e50 <btrfs_alloc_path@@Base>
   2011a:	mov	r5, r0
   2011c:	cmp	r0, #0
   2011e:	beq.w	20542 <btrfs_inc_extent_ref@@Base+0x452>
   20122:	mov.w	r8, #1
   20126:	strb.w	r8, [r0, #64]	; 0x40
   2012a:	ldr.w	r3, [r7, #464]	; 0x1d0
   2012e:	ldr.w	r9, [r3, #24]
   20132:	ldrd	r3, r4, [sp, #168]	; 0xa8
   20136:	str.w	r8, [sp, #48]	; 0x30
   2013a:	mov	r1, r9
   2013c:	strd	sl, fp, [sp, #16]
   20140:	strd	r3, r4, [sp, #40]	; 0x28
   20144:	ldrd	r3, r4, [sp, #160]	; 0xa0
   20148:	strd	r3, r4, [sp, #32]
   2014c:	ldrd	r3, r4, [sp, #152]	; 0x98
   20150:	strd	r3, r4, [sp, #24]
   20154:	ldrd	r2, r3, [sp, #136]	; 0x88
   20158:	strd	r2, r3, [sp, #8]
   2015c:	mov	r2, r0
   2015e:	ldr	r3, [sp, #56]	; 0x38
   20160:	mov	r0, r6
   20162:	str	r3, [sp, #0]
   20164:	ldr	r3, [sp, #60]	; 0x3c
   20166:	str	r3, [sp, #4]
   20168:	add	r3, sp, #72	; 0x48
   2016a:	bl	1f450 <hash_extent_data_ref@@Base+0x78>
   2016e:	mov	r4, r0
   20170:	cmp	r0, #0
   20172:	bne.w	202b0 <btrfs_inc_extent_ref@@Base+0x1c0>
   20176:	ldrd	r3, r4, [sp, #160]	; 0xa0
   2017a:	ldr	r2, [pc, #988]	; (20558 <btrfs_inc_extent_ref@@Base+0x468>)
   2017c:	cmp	r4, #0
   2017e:	ldr	r1, [pc, #988]	; (2055c <btrfs_inc_extent_ref@@Base+0x46c>)
   20180:	it	eq
   20182:	cmpeq.w	r3, #256	; 0x100
   20186:	ldr	r0, [pc, #984]	; (20560 <btrfs_inc_extent_ref@@Base+0x470>)
   20188:	add	r2, pc
   2018a:	add	r1, pc
   2018c:	ite	cc
   2018e:	movcc	r3, r8
   20190:	movcs	r3, #0
   20192:	adds	r2, #243	; 0xf3
   20194:	add	r0, pc
   20196:	str	r3, [sp, #0]
   20198:	mov.w	r3, #1184	; 0x4a0
   2019c:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   201a0:	ldr	r2, [sp, #72]	; 0x48
   201a2:	mov	r3, r8
   201a4:	mov	r1, r5
   201a6:	mov	r0, r9
   201a8:	bl	1e984 <btrfs_create_tree@@Base+0x608>
   201ac:	mov	r4, r0
   201ae:	cmp	r0, #0
   201b0:	beq.w	20396 <btrfs_inc_extent_ref@@Base+0x2a6>
   201b4:	cmn.w	r4, #11
   201b8:	bne.w	20396 <btrfs_inc_extent_ref@@Base+0x2a6>
   201bc:	ldr	r0, [r5, #0]
   201be:	movs	r2, #25
   201c0:	ldr	r3, [r5, #32]
   201c2:	add.w	r4, r0, #96	; 0x60
   201c6:	mla	r3, r2, r3, r4
   201ca:	ldr.w	r2, [r3, #118]	; 0x76
   201ce:	adds	r2, #101	; 0x65
   201d0:	add.w	ip, r4, r2
   201d4:	ldr	r3, [r4, r2]
   201d6:	ldr.w	r1, [ip, #4]
   201da:	adds	r3, #1
   201dc:	str	r3, [r4, r2]
   201de:	adc.w	r1, r1, #0
   201e2:	str.w	r1, [ip, #4]
   201e6:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   201ea:	mov	r0, r5
   201ec:	bl	17e58 <btrfs_release_path@@Base>
   201f0:	movs	r3, #1
   201f2:	strb.w	r3, [r5, #64]	; 0x40
   201f6:	ldr.w	r3, [r7, #464]	; 0x1d0
   201fa:	ldr	r7, [r3, #24]
   201fc:	ldrd	r3, r4, [sp, #160]	; 0xa0
   20200:	cmp	r4, #0
   20202:	add.w	r4, sp, #81	; 0x51
   20206:	it	eq
   20208:	cmpeq.w	r3, #256	; 0x100
   2020c:	bcc.w	204dc <btrfs_inc_extent_ref@@Base+0x3ec>
   20210:	ldr	r3, [sp, #56]	; 0x38
   20212:	str	r3, [sp, #72]	; 0x48
   20214:	ldr	r3, [sp, #60]	; 0x3c
   20216:	str	r3, [sp, #76]	; 0x4c
   20218:	orrs.w	r3, sl, fp
   2021c:	beq.w	20406 <btrfs_inc_extent_ref@@Base+0x316>
   20220:	mov.w	r8, #4
   20224:	movs	r3, #184	; 0xb8
   20226:	str.w	sl, [sp, #81]	; 0x51
   2022a:	strb.w	r3, [sp, #80]	; 0x50
   2022e:	str.w	fp, [r4, #4]
   20232:	movs	r3, #1
   20234:	mov	r2, r5
   20236:	str	r3, [sp, #4]
   20238:	mov	r1, r7
   2023a:	add	r3, sp, #68	; 0x44
   2023c:	mov	r0, r6
   2023e:	str	r3, [sp, #0]
   20240:	add	r3, sp, #72	; 0x48
   20242:	str.w	r8, [sp, #68]	; 0x44
   20246:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2024a:	mov	r4, r0
   2024c:	cbz	r0, 20256 <btrfs_inc_extent_ref@@Base+0x166>
   2024e:	cmn.w	r0, #17
   20252:	bne.w	20452 <btrfs_inc_extent_ref@@Base+0x362>
   20256:	orrs.w	r3, sl, fp
   2025a:	ldr	r0, [r5, #0]
   2025c:	bne.w	2042c <btrfs_inc_extent_ref@@Base+0x33c>
   20260:	add.w	r9, sp, #72	; 0x48
   20264:	mov.w	sl, #1
   20268:	ldr	r3, [r5, #32]
   2026a:	add.w	r1, r0, #96	; 0x60
   2026e:	movs	r2, #25
   20270:	cmn.w	r4, #17
   20274:	mla	r3, r2, r3, r1
   20278:	ldr.w	r3, [r3, #118]	; 0x76
   2027c:	add.w	r3, r3, #101	; 0x65
   20280:	add	r1, r3
   20282:	beq.w	20462 <btrfs_inc_extent_ref@@Base+0x372>
   20286:	cmp	r4, #0
   20288:	bne.w	204d4 <btrfs_inc_extent_ref@@Base+0x3e4>
   2028c:	ldr	r3, [sp, #152]	; 0x98
   2028e:	strb	r4, [r1, #25]
   20290:	strb	r4, [r1, #26]
   20292:	str	r3, [r1, #0]
   20294:	ldr	r3, [sp, #156]	; 0x9c
   20296:	strb	r4, [r1, #27]
   20298:	str	r3, [r1, #4]
   2029a:	ldr	r3, [sp, #160]	; 0xa0
   2029c:	str	r3, [r1, #8]
   2029e:	ldr	r3, [sp, #164]	; 0xa4
   202a0:	str	r3, [r1, #12]
   202a2:	ldr	r3, [sp, #168]	; 0xa8
   202a4:	str	r3, [r1, #16]
   202a6:	ldr	r3, [sp, #172]	; 0xac
   202a8:	str	r3, [r1, #20]
   202aa:	movs	r3, #1
   202ac:	strb	r3, [r1, #24]
   202ae:	b.n	2044c <btrfs_inc_extent_ref@@Base+0x35c>
   202b0:	adds	r1, r0, #2
   202b2:	bne.w	201b4 <btrfs_inc_extent_ref@@Base+0xc4>
   202b6:	ldr.w	r8, [r5]
   202ba:	movs	r2, #25
   202bc:	ldr	r3, [r5, #32]
   202be:	add.w	r6, r8, #96	; 0x60
   202c2:	ldr	r4, [sp, #72]	; 0x48
   202c4:	mla	r3, r2, r3, r6
   202c8:	subs	r4, #101	; 0x65
   202ca:	ldr.w	r2, [r3, #118]	; 0x76
   202ce:	subs	r4, r4, r2
   202d0:	ldrd	r2, r3, [sp, #160]	; 0xa0
   202d4:	cmp	r3, #0
   202d6:	it	eq
   202d8:	cmpeq.w	r2, #256	; 0x100
   202dc:	bcs.n	203cc <btrfs_inc_extent_ref@@Base+0x2dc>
   202de:	orrs.w	r3, sl, fp
   202e2:	ite	ne
   202e4:	movne	r7, #182	; 0xb6
   202e6:	moveq	r7, #176	; 0xb0
   202e8:	mov	r0, r7
   202ea:	bl	1e93c <btrfs_create_tree@@Base+0x5c0>
   202ee:	mov	r1, r5
   202f0:	mov	r2, r0
   202f2:	str	r0, [sp, #56]	; 0x38
   202f4:	mov	r0, r9
   202f6:	bl	1a030 <btrfs_extend_item@@Base>
   202fa:	ldr	r2, [pc, #616]	; (20564 <btrfs_inc_extent_ref@@Base+0x474>)
   202fc:	ldr	r1, [pc, #616]	; (20568 <btrfs_inc_extent_ref@@Base+0x478>)
   202fe:	movw	r3, #1044	; 0x414
   20302:	add	r2, pc
   20304:	add.w	r2, r2, #272	; 0x110
   20308:	add	r1, pc
   2030a:	str	r0, [sp, #0]
   2030c:	ldr	r0, [pc, #604]	; (2056c <btrfs_inc_extent_ref@@Base+0x47c>)
   2030e:	add	r0, pc
   20310:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   20314:	ldr	r3, [r5, #32]
   20316:	movs	r0, #25
   20318:	mla	r3, r0, r3, r6
   2031c:	ldr.w	r3, [r3, #118]	; 0x76
   20320:	adds	r3, #101	; 0x65
   20322:	add.w	ip, r6, r3
   20326:	add	r4, r3
   20328:	ldr	r2, [r6, r3]
   2032a:	ldr.w	r1, [ip, #4]
   2032e:	adds	r2, #1
   20330:	str	r2, [r6, r3]
   20332:	adc.w	r1, r1, #0
   20336:	str.w	r1, [ip, #4]
   2033a:	ldr	r2, [r5, #32]
   2033c:	mla	r0, r0, r2, r6
   20340:	ldr.w	r2, [r0, #122]	; 0x7a
   20344:	add	r3, r2
   20346:	ldr	r2, [sp, #56]	; 0x38
   20348:	subs	r3, r3, r2
   2034a:	cmp	r4, r3
   2034c:	bcs.n	2035c <btrfs_inc_extent_ref@@Base+0x26c>
   2034e:	ldr	r1, [sp, #56]	; 0x38
   20350:	subs	r3, r3, r4
   20352:	mov	r2, r4
   20354:	mov	r0, r8
   20356:	add	r1, r4
   20358:	bl	1738c <memmove_extent_buffer@@Base>
   2035c:	cmp	r7, #178	; 0xb2
   2035e:	add.w	r3, r6, r4
   20362:	strb	r7, [r6, r4]
   20364:	bne.n	203d8 <btrfs_inc_extent_ref@@Base+0x2e8>
   20366:	ldr	r2, [sp, #152]	; 0x98
   20368:	adds	r4, #1
   2036a:	adds	r3, r6, r4
   2036c:	movs	r1, #1
   2036e:	str	r2, [r6, r4]
   20370:	ldr	r2, [sp, #156]	; 0x9c
   20372:	strb	r1, [r3, #24]
   20374:	str	r2, [r3, #4]
   20376:	ldr	r2, [sp, #160]	; 0xa0
   20378:	str	r2, [r3, #8]
   2037a:	ldr	r2, [sp, #164]	; 0xa4
   2037c:	str	r2, [r3, #12]
   2037e:	ldr	r2, [sp, #168]	; 0xa8
   20380:	str	r2, [r3, #16]
   20382:	ldr	r2, [sp, #172]	; 0xac
   20384:	str	r2, [r3, #20]
   20386:	movs	r2, #0
   20388:	strb	r2, [r3, #25]
   2038a:	strb	r2, [r3, #26]
   2038c:	strb	r2, [r3, #27]
   2038e:	mov	r0, r8
   20390:	movs	r4, #0
   20392:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   20396:	mov	r0, r5
   20398:	bl	17e7e <btrfs_free_path@@Base>
   2039c:	ldr	r2, [pc, #464]	; (20570 <btrfs_inc_extent_ref@@Base+0x480>)
   2039e:	ldr	r1, [pc, #468]	; (20574 <btrfs_inc_extent_ref@@Base+0x484>)
   203a0:	movw	r3, #1282	; 0x502
   203a4:	ldr	r0, [pc, #464]	; (20578 <btrfs_inc_extent_ref@@Base+0x488>)
   203a6:	add	r2, pc
   203a8:	add.w	r2, r2, #322	; 0x142
   203ac:	add	r1, pc
   203ae:	add	r0, pc
   203b0:	str	r4, [sp, #0]
   203b2:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   203b6:	ldr	r2, [pc, #452]	; (2057c <btrfs_inc_extent_ref@@Base+0x48c>)
   203b8:	ldr	r3, [pc, #408]	; (20554 <btrfs_inc_extent_ref@@Base+0x464>)
   203ba:	add	r2, pc
   203bc:	ldr	r3, [r2, r3]
   203be:	ldr	r2, [r3, #0]
   203c0:	ldr	r3, [sp, #92]	; 0x5c
   203c2:	eors	r2, r3
   203c4:	beq.w	20548 <btrfs_inc_extent_ref@@Base+0x458>
   203c8:	blx	84cc <__stack_chk_fail@plt>
   203cc:	orrs.w	r3, sl, fp
   203d0:	ite	ne
   203d2:	movne	r7, #184	; 0xb8
   203d4:	moveq	r7, #178	; 0xb2
   203d6:	b.n	202e8 <btrfs_inc_extent_ref@@Base+0x1f8>
   203d8:	cmp	r7, #184	; 0xb8
   203da:	add.w	r2, r3, #1
   203de:	bne.n	203f6 <btrfs_inc_extent_ref@@Base+0x306>
   203e0:	movs	r1, #0
   203e2:	movs	r0, #1
   203e4:	strb	r1, [r3, #10]
   203e6:	strb	r0, [r3, #9]
   203e8:	strb	r1, [r3, #11]
   203ea:	strb	r1, [r3, #12]
   203ec:	str.w	sl, [r3, #1]
   203f0:	str.w	fp, [r2, #4]
   203f4:	b.n	2038e <btrfs_inc_extent_ref@@Base+0x29e>
   203f6:	cmp	r7, #182	; 0xb6
   203f8:	beq.n	203ec <btrfs_inc_extent_ref@@Base+0x2fc>
   203fa:	ldr	r1, [sp, #152]	; 0x98
   203fc:	str.w	r1, [r3, #1]
   20400:	ldr	r3, [sp, #156]	; 0x9c
   20402:	str	r3, [r2, #4]
   20404:	b.n	2038e <btrfs_inc_extent_ref@@Base+0x29e>
   20406:	movs	r3, #178	; 0xb2
   20408:	strb.w	r3, [sp, #80]	; 0x50
   2040c:	ldrd	r2, r3, [sp, #168]	; 0xa8
   20410:	mov.w	r8, #28
   20414:	ldrd	r0, r1, [sp, #152]	; 0x98
   20418:	strd	r2, r3, [sp]
   2041c:	ldrd	r2, r3, [sp, #160]	; 0xa0
   20420:	bl	1f3d8 <hash_extent_data_ref@@Base>
   20424:	str.w	r0, [sp, #81]	; 0x51
   20428:	str	r1, [r4, #4]
   2042a:	b.n	20232 <btrfs_inc_extent_ref@@Base+0x142>
   2042c:	ldr	r3, [r5, #32]
   2042e:	add.w	r2, r0, #96	; 0x60
   20432:	movs	r1, #25
   20434:	mla	r3, r1, r3, r2
   20438:	ldr.w	r3, [r3, #118]	; 0x76
   2043c:	adds	r3, #101	; 0x65
   2043e:	adds	r1, r2, r3
   20440:	cbnz	r4, 2045a <btrfs_inc_extent_ref@@Base+0x36a>
   20442:	movs	r6, #1
   20444:	strb	r6, [r2, r3]
   20446:	strb	r4, [r1, #1]
   20448:	strb	r4, [r1, #2]
   2044a:	strb	r4, [r1, #3]
   2044c:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   20450:	movs	r4, #0
   20452:	mov	r0, r5
   20454:	bl	17e58 <btrfs_release_path@@Base>
   20458:	b.n	20396 <btrfs_inc_extent_ref@@Base+0x2a6>
   2045a:	ldr	r1, [r1, #0]
   2045c:	adds	r1, #1
   2045e:	str	r1, [r2, r3]
   20460:	b.n	2044c <btrfs_inc_extent_ref@@Base+0x35c>
   20462:	ldrd	fp, ip, [sp, #152]	; 0x98
   20466:	ldr	r3, [r1, #4]
   20468:	ldr	r2, [r1, #0]
   2046a:	cmp	ip, r3
   2046c:	it	eq
   2046e:	cmpeq	fp, r2
   20470:	bne.n	20492 <btrfs_inc_extent_ref@@Base+0x3a2>
   20472:	ldrd	fp, ip, [sp, #160]	; 0xa0
   20476:	ldr	r3, [r1, #12]
   20478:	ldr	r2, [r1, #8]
   2047a:	cmp	ip, r3
   2047c:	it	eq
   2047e:	cmpeq	fp, r2
   20480:	bne.n	20492 <btrfs_inc_extent_ref@@Base+0x3a2>
   20482:	ldrd	fp, ip, [sp, #168]	; 0xa8
   20486:	ldr	r3, [r1, #20]
   20488:	ldr	r2, [r1, #16]
   2048a:	cmp	ip, r3
   2048c:	it	eq
   2048e:	cmpeq	fp, r2
   20490:	beq.n	204d4 <btrfs_inc_extent_ref@@Base+0x3e4>
   20492:	mov	r0, r5
   20494:	bl	17e58 <btrfs_release_path@@Base>
   20498:	ldr.w	r3, [sp, #81]	; 0x51
   2049c:	ldr.w	r2, [sp, #85]	; 0x55
   204a0:	mov	r1, r7
   204a2:	adds	r3, #1
   204a4:	mov	r0, r6
   204a6:	adc.w	r2, r2, #0
   204aa:	str.w	r3, [sp, #81]	; 0x51
   204ae:	str.w	r2, [sp, #85]	; 0x55
   204b2:	add	r3, sp, #68	; 0x44
   204b4:	mov	r2, r5
   204b6:	str	r3, [sp, #0]
   204b8:	str.w	sl, [sp, #4]
   204bc:	mov	r3, r9
   204be:	str.w	r8, [sp, #68]	; 0x44
   204c2:	bl	1b00c <btrfs_insert_empty_items@@Base>
   204c6:	mov	r4, r0
   204c8:	cbz	r0, 204d0 <btrfs_inc_extent_ref@@Base+0x3e0>
   204ca:	cmn.w	r0, #17
   204ce:	bne.n	20452 <btrfs_inc_extent_ref@@Base+0x362>
   204d0:	ldr	r0, [r5, #0]
   204d2:	b.n	20268 <btrfs_inc_extent_ref@@Base+0x178>
   204d4:	ldr	r3, [r1, #24]
   204d6:	adds	r3, #1
   204d8:	str	r3, [r1, #24]
   204da:	b.n	2044c <btrfs_inc_extent_ref@@Base+0x35c>
   204dc:	ldr	r2, [pc, #160]	; (20580 <btrfs_inc_extent_ref@@Base+0x490>)
   204de:	movs	r3, #0
   204e0:	ldr	r1, [pc, #160]	; (20584 <btrfs_inc_extent_ref@@Base+0x494>)
   204e2:	ldr	r0, [pc, #164]	; (20588 <btrfs_inc_extent_ref@@Base+0x498>)
   204e4:	add	r2, pc
   204e6:	str	r3, [sp, #0]
   204e8:	add.w	r2, r2, #300	; 0x12c
   204ec:	mov.w	r3, #1208	; 0x4b8
   204f0:	add	r1, pc
   204f2:	add	r0, pc
   204f4:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   204f8:	ldr	r3, [sp, #56]	; 0x38
   204fa:	str	r3, [sp, #72]	; 0x48
   204fc:	ldr	r3, [sp, #60]	; 0x3c
   204fe:	str	r3, [sp, #76]	; 0x4c
   20500:	orrs.w	r3, sl, fp
   20504:	beq.n	20530 <btrfs_inc_extent_ref@@Base+0x440>
   20506:	movs	r3, #182	; 0xb6
   20508:	str.w	sl, [sp, #81]	; 0x51
   2050c:	strb.w	r3, [sp, #80]	; 0x50
   20510:	str.w	fp, [r4, #4]
   20514:	movs	r3, #0
   20516:	mov	r2, r5
   20518:	str	r3, [sp, #68]	; 0x44
   2051a:	mov	r1, r7
   2051c:	movs	r3, #1
   2051e:	mov	r0, r6
   20520:	str	r3, [sp, #4]
   20522:	add	r3, sp, #68	; 0x44
   20524:	str	r3, [sp, #0]
   20526:	add	r3, sp, #72	; 0x48
   20528:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2052c:	mov	r4, r0
   2052e:	b.n	20452 <btrfs_inc_extent_ref@@Base+0x362>
   20530:	movs	r3, #176	; 0xb0
   20532:	strb.w	r3, [sp, #80]	; 0x50
   20536:	ldr	r3, [sp, #152]	; 0x98
   20538:	str.w	r3, [sp, #81]	; 0x51
   2053c:	ldr	r3, [sp, #156]	; 0x9c
   2053e:	str	r3, [r4, #4]
   20540:	b.n	20514 <btrfs_inc_extent_ref@@Base+0x424>
   20542:	mvn.w	r4, #11
   20546:	b.n	203b6 <btrfs_inc_extent_ref@@Base+0x2c6>
   20548:	mov	r0, r4
   2054a:	add	sp, #100	; 0x64
   2054c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20550:	ldr	r4, [pc, #520]	; (2075c <btrfs_set_block_flags@@Base+0x20>)
   20552:	movs	r4, r0
   20554:	lsls	r4, r4, #8
   20556:	movs	r0, r0
   20558:	b.n	205c4 <btrfs_lookup_extent_info@@Base+0x38>
   2055a:	movs	r1, r0
   2055c:	bls.n	20562 <btrfs_inc_extent_ref@@Base+0x472>
   2055e:	movs	r1, r0
   20560:	bgt.n	20626 <btrfs_lookup_extent_info@@Base+0x9a>
   20562:	movs	r1, r0
   20564:	udf	#186	; 0xba
   20566:	movs	r1, r0
   20568:	bvc.n	20472 <btrfs_inc_extent_ref@@Base+0x382>
   2056a:	movs	r1, r0
   2056c:	add	r4, pc, #148	; (adr r4, 20604 <btrfs_lookup_extent_info@@Base+0x78>)
   2056e:	movs	r1, r0
   20570:	udf	#22
   20572:	movs	r1, r0
   20574:	bvs.n	20536 <btrfs_inc_extent_ref@@Base+0x446>
   20576:	movs	r1, r0
   20578:	bge.n	20670 <btrfs_lookup_extent_info@@Base+0xe4>
   2057a:	movs	r1, r0
   2057c:	ldr	r1, [pc, #824]	; (208b8 <btrfs_set_block_flags@@Base+0x17c>)
   2057e:	movs	r4, r0
   20580:	bgt.n	20534 <btrfs_inc_extent_ref@@Base+0x444>
   20582:	movs	r1, r0
   20584:	bpl.n	204be <btrfs_inc_extent_ref@@Base+0x3ce>
   20586:	movs	r1, r0
   20588:	bls.n	205d6 <btrfs_lookup_extent_info@@Base+0x4a>
   2058a:	movs	r1, r0

0002058c <btrfs_lookup_extent_info@@Base>:
   2058c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20590:	mov	r5, r1
   20592:	vpush	{d8}
   20596:	vmov	s16, r0
   2059a:	sub	sp, #44	; 0x2c
   2059c:	strd	r2, r3, [sp, #8]
   205a0:	ldr	r2, [pc, #384]	; (20724 <btrfs_lookup_extent_info@@Base+0x198>)
   205a2:	ldr	r3, [pc, #388]	; (20728 <btrfs_lookup_extent_info@@Base+0x19c>)
   205a4:	add	r2, pc
   205a6:	ldrd	fp, r7, [sp, #96]	; 0x60
   205aa:	ldrd	sl, r8, [sp, #88]	; 0x58
   205ae:	ldr	r3, [r2, r3]
   205b0:	ldr	r6, [sp, #104]	; 0x68
   205b2:	ldr	r3, [r3, #0]
   205b4:	str	r3, [sp, #36]	; 0x24
   205b6:	mov.w	r3, #0
   205ba:	cmp.w	fp, #0
   205be:	beq.n	205dc <btrfs_lookup_extent_info@@Base+0x50>
   205c0:	ldr.w	r3, [r1, #308]	; 0x134
   205c4:	movs	r1, #0
   205c6:	ldr.w	r0, [r3, #188]	; 0xbc
   205ca:	mov	r3, r1
   205cc:	and.w	r2, r0, #256	; 0x100
   205d0:	orrs	r3, r2
   205d2:	ittt	eq
   205d4:	ldreq.w	sl, [r5, #384]	; 0x180
   205d8:	moveq	r8, r1
   205da:	moveq	fp, r8
   205dc:	bl	17e50 <btrfs_alloc_path@@Base>
   205e0:	mov	r4, r0
   205e2:	cmp	r0, #0
   205e4:	beq.w	20710 <btrfs_lookup_extent_info@@Base+0x184>
   205e8:	movs	r3, #1
   205ea:	strb.w	r3, [r0, #64]	; 0x40
   205ee:	ldrd	r2, r3, [sp, #8]
   205f2:	cmp.w	fp, #0
   205f6:	str.w	sl, [sp, #25]
   205fa:	add.w	r9, sp, #25
   205fe:	add.w	sl, sp, #16
   20602:	str.w	r8, [sp, #29]
   20606:	mov.w	r8, #0
   2060a:	strd	r2, r3, [sp, #16]
   2060e:	ite	eq
   20610:	moveq	r3, #168	; 0xa8
   20612:	movne	r3, #169	; 0xa9
   20614:	strb.w	r3, [sp, #24]
   20618:	mov	r3, r4
   2061a:	vmov	r0, s16
   2061e:	ldr	r1, [r5, #24]
   20620:	mov	r2, sl
   20622:	strd	r8, r8, [sp]
   20626:	bl	1a23c <btrfs_search_slot@@Base>
   2062a:	subs	r3, r0, #0
   2062c:	blt.n	206c2 <btrfs_lookup_extent_info@@Base+0x136>
   2062e:	beq.n	20694 <btrfs_lookup_extent_info@@Base+0x108>
   20630:	cmp.w	fp, #0
   20634:	beq.n	20706 <btrfs_lookup_extent_info@@Base+0x17a>
   20636:	ldr	r2, [r4, #32]
   20638:	cbnz	r2, 2065a <btrfs_lookup_extent_info@@Base+0xce>
   2063a:	mov	r0, r4
   2063c:	mov.w	fp, #0
   20640:	bl	17e58 <btrfs_release_path@@Base>
   20644:	mvn.w	r3, #87	; 0x57
   20648:	strb.w	r3, [sp, #24]
   2064c:	ldr.w	r3, [r5, #384]	; 0x180
   20650:	str.w	r8, [r9, #4]
   20654:	str.w	r3, [r9]
   20658:	b.n	20618 <btrfs_lookup_extent_info@@Base+0x8c>
   2065a:	subs	r2, #1
   2065c:	ldr	r0, [r4, #0]
   2065e:	mov	r1, sl
   20660:	str	r2, [r4, #32]
   20662:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   20666:	ldrd	r2, r3, [sp, #16]
   2066a:	ldrd	r0, r1, [sp, #8]
   2066e:	cmp	r3, r1
   20670:	it	eq
   20672:	cmpeq	r2, r0
   20674:	bne.n	2063a <btrfs_lookup_extent_info@@Base+0xae>
   20676:	ldrb.w	r3, [sp, #24]
   2067a:	cmp	r3, #168	; 0xa8
   2067c:	bne.n	2063a <btrfs_lookup_extent_info@@Base+0xae>
   2067e:	ldr.w	r1, [sp, #29]
   20682:	movs	r3, #0
   20684:	ldr.w	r0, [sp, #25]
   20688:	ldr.w	r2, [r5, #384]	; 0x180
   2068c:	cmp	r1, r3
   2068e:	it	eq
   20690:	cmpeq	r0, r2
   20692:	bne.n	2063a <btrfs_lookup_extent_info@@Base+0xae>
   20694:	ldr	r3, [r4, #0]
   20696:	movs	r1, #25
   20698:	ldr	r2, [r4, #32]
   2069a:	adds	r3, #96	; 0x60
   2069c:	mla	r2, r1, r2, r3
   206a0:	add.w	r1, r2, #101	; 0x65
   206a4:	ldr.w	r2, [r2, #122]	; 0x7a
   206a8:	cmp	r2, #23
   206aa:	bls.n	206e0 <btrfs_lookup_extent_info@@Base+0x154>
   206ac:	ldr.w	r2, [r1, #17]
   206b0:	adds	r2, #101	; 0x65
   206b2:	add	r3, r2
   206b4:	ldr	r1, [r3, #16]
   206b6:	ldr	r2, [r3, #20]
   206b8:	cbnz	r7, 206fc <btrfs_lookup_extent_info@@Base+0x170>
   206ba:	cbz	r6, 2070c <btrfs_lookup_extent_info@@Base+0x180>
   206bc:	movs	r3, #0
   206be:	strd	r1, r2, [r6]
   206c2:	mov	r0, r4
   206c4:	str	r3, [sp, #8]
   206c6:	bl	17e7e <btrfs_free_path@@Base>
   206ca:	ldr	r3, [sp, #8]
   206cc:	ldr	r1, [pc, #92]	; (2072c <btrfs_lookup_extent_info@@Base+0x1a0>)
   206ce:	ldr	r2, [pc, #88]	; (20728 <btrfs_lookup_extent_info@@Base+0x19c>)
   206d0:	add	r1, pc
   206d2:	ldr	r2, [r1, r2]
   206d4:	ldr	r1, [r2, #0]
   206d6:	ldr	r2, [sp, #36]	; 0x24
   206d8:	eors	r1, r2
   206da:	beq.n	20716 <btrfs_lookup_extent_info@@Base+0x18a>
   206dc:	blx	84cc <__stack_chk_fail@plt>
   206e0:	ldr	r2, [pc, #76]	; (20730 <btrfs_lookup_extent_info@@Base+0x1a4>)
   206e2:	movs	r3, #1
   206e4:	ldr	r1, [pc, #76]	; (20734 <btrfs_lookup_extent_info@@Base+0x1a8>)
   206e6:	ldr	r0, [pc, #80]	; (20738 <btrfs_lookup_extent_info@@Base+0x1ac>)
   206e8:	add	r2, pc
   206ea:	str	r3, [sp, #0]
   206ec:	addw	r2, r2, #343	; 0x157
   206f0:	add	r1, pc
   206f2:	add	r0, pc
   206f4:	mov.w	r3, #1360	; 0x550
   206f8:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   206fc:	ldr	r0, [r3, #0]
   206fe:	ldr	r3, [r3, #4]
   20700:	strd	r0, r3, [r7]
   20704:	b.n	206ba <btrfs_lookup_extent_info@@Base+0x12e>
   20706:	mvn.w	r3, #4
   2070a:	b.n	206c2 <btrfs_lookup_extent_info@@Base+0x136>
   2070c:	mov	r3, r6
   2070e:	b.n	206c2 <btrfs_lookup_extent_info@@Base+0x136>
   20710:	mvn.w	r3, #11
   20714:	b.n	206cc <btrfs_lookup_extent_info@@Base+0x140>
   20716:	mov	r0, r3
   20718:	add	sp, #44	; 0x2c
   2071a:	vpop	{d8}
   2071e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20722:	nop
   20724:	blxns	ip
   20726:	movs	r4, r0
   20728:	lsls	r4, r4, #8
   2072a:	movs	r0, r0
   2072c:	mov	r8, r7
   2072e:	movs	r4, r0
   20730:	bge.n	206dc <btrfs_lookup_extent_info@@Base+0x150>
   20732:	movs	r1, r0
   20734:	bcc.n	2066e <btrfs_lookup_extent_info@@Base+0xe2>
   20736:	movs	r1, r0
   20738:	bvs.n	2072e <btrfs_lookup_extent_info@@Base+0x1a2>
   2073a:	movs	r1, r0

0002073c <btrfs_set_block_flags@@Base>:
   2073c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20740:	sub	sp, #52	; 0x34
   20742:	ldr	r4, [r0, #0]
   20744:	mov	r5, r0
   20746:	strd	r2, r3, [sp, #8]
   2074a:	movs	r7, #0
   2074c:	ldr	r3, [sp, #96]	; 0x60
   2074e:	mov	r9, r7
   20750:	ldr	r2, [pc, #420]	; (208f8 <btrfs_set_block_flags@@Base+0x1bc>)
   20752:	ldr	r6, [sp, #88]	; 0x58
   20754:	str	r3, [sp, #16]
   20756:	add	r2, pc
   20758:	ldr	r3, [sp, #100]	; 0x64
   2075a:	ldr.w	fp, [pc, #416]	; 208fc <btrfs_set_block_flags@@Base+0x1c0>
   2075e:	str	r3, [sp, #20]
   20760:	add	fp, pc
   20762:	ldr	r3, [pc, #412]	; (20900 <btrfs_set_block_flags@@Base+0x1c4>)
   20764:	ldr	r3, [r2, r3]
   20766:	ldr	r3, [r3, #0]
   20768:	str	r3, [sp, #44]	; 0x2c
   2076a:	mov.w	r3, #0
   2076e:	ldr.w	r3, [r4, #308]	; 0x134
   20772:	ldr.w	r3, [r3, #188]	; 0xbc
   20776:	and.w	r8, r3, #256	; 0x100
   2077a:	bl	17e50 <btrfs_alloc_path@@Base>
   2077e:	mov	sl, r0
   20780:	cmp	r0, #0
   20782:	beq.w	208e8 <btrfs_set_block_flags@@Base+0x1ac>
   20786:	ldrd	r1, r2, [sp, #8]
   2078a:	movs	r3, #1
   2078c:	strb.w	r3, [r0, #64]	; 0x40
   20790:	strd	r1, r2, [sp, #24]
   20794:	orrs.w	r2, r8, r9
   20798:	add.w	r2, sp, #33	; 0x21
   2079c:	beq.n	207f6 <btrfs_set_block_flags@@Base+0xba>
   2079e:	mov	r8, r3
   207a0:	asrs	r1, r6, #31
   207a2:	str.w	r6, [sp, #33]	; 0x21
   207a6:	str	r1, [r2, #4]
   207a8:	movs	r2, #169	; 0xa9
   207aa:	strb.w	r2, [sp, #32]
   207ae:	add	r7, sp, #24
   207b0:	movs	r6, #0
   207b2:	strd	r6, r6, [sp]
   207b6:	mov	r3, sl
   207b8:	ldr	r1, [r4, #24]
   207ba:	mov	r2, r7
   207bc:	mov	r0, r5
   207be:	bl	1a23c <btrfs_search_slot@@Base>
   207c2:	subs.w	r9, r0, #0
   207c6:	blt.n	20872 <btrfs_set_block_flags@@Base+0x136>
   207c8:	beq.n	20848 <btrfs_set_block_flags@@Base+0x10c>
   207ca:	cmp.w	r8, #0
   207ce:	beq.n	2088c <btrfs_set_block_flags@@Base+0x150>
   207d0:	ldr.w	r2, [sl, #32]
   207d4:	cbnz	r2, 2080a <btrfs_set_block_flags@@Base+0xce>
   207d6:	mov	r0, sl
   207d8:	mov.w	r8, #0
   207dc:	bl	17e58 <btrfs_release_path@@Base>
   207e0:	ldr.w	r3, [r4, #384]	; 0x180
   207e4:	str.w	r6, [sp, #37]	; 0x25
   207e8:	str.w	r3, [sp, #33]	; 0x21
   207ec:	mvn.w	r3, #87	; 0x57
   207f0:	strb.w	r3, [sp, #32]
   207f4:	b.n	207b2 <btrfs_set_block_flags@@Base+0x76>
   207f6:	ldr.w	r3, [r4, #384]	; 0x180
   207fa:	mov	r8, r7
   207fc:	str	r7, [r2, #4]
   207fe:	str.w	r3, [sp, #33]	; 0x21
   20802:	movs	r3, #168	; 0xa8
   20804:	strb.w	r3, [sp, #32]
   20808:	b.n	207ae <btrfs_set_block_flags@@Base+0x72>
   2080a:	subs	r2, #1
   2080c:	ldr.w	r0, [sl]
   20810:	mov	r1, r7
   20812:	str.w	r2, [sl, #32]
   20816:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   2081a:	ldrd	r2, r3, [sp, #24]
   2081e:	ldrd	r0, r1, [sp, #8]
   20822:	cmp	r3, r1
   20824:	it	eq
   20826:	cmpeq	r2, r0
   20828:	bne.n	207d6 <btrfs_set_block_flags@@Base+0x9a>
   2082a:	ldr.w	r9, [sp, #37]	; 0x25
   2082e:	movs	r3, #0
   20830:	ldr.w	r8, [sp, #33]	; 0x21
   20834:	ldr.w	r2, [r4, #384]	; 0x180
   20838:	cmp	r9, r3
   2083a:	it	eq
   2083c:	cmpeq	r8, r2
   2083e:	bne.n	207d6 <btrfs_set_block_flags@@Base+0x9a>
   20840:	ldrb.w	r3, [sp, #32]
   20844:	cmp	r3, #168	; 0xa8
   20846:	bne.n	207d6 <btrfs_set_block_flags@@Base+0x9a>
   20848:	ldr.w	r3, [sl]
   2084c:	movs	r1, #25
   2084e:	ldr.w	r2, [sl, #32]
   20852:	adds	r3, #96	; 0x60
   20854:	mla	r2, r1, r2, r3
   20858:	add.w	r0, r2, #101	; 0x65
   2085c:	ldr.w	r1, [r2, #122]	; 0x7a
   20860:	cmp	r1, #23
   20862:	bhi.n	208ca <btrfs_set_block_flags@@Base+0x18e>
   20864:	ldr	r0, [pc, #156]	; (20904 <btrfs_set_block_flags@@Base+0x1c8>)
   20866:	movs	r2, #24
   20868:	mvn.w	r9, #116	; 0x74
   2086c:	add	r0, pc
   2086e:	bl	1747c <__btrfs_error@@Base>
   20872:	mov	r0, sl
   20874:	bl	17e7e <btrfs_free_path@@Base>
   20878:	ldr	r2, [pc, #140]	; (20908 <btrfs_set_block_flags@@Base+0x1cc>)
   2087a:	ldr	r3, [pc, #132]	; (20900 <btrfs_set_block_flags@@Base+0x1c4>)
   2087c:	add	r2, pc
   2087e:	ldr	r3, [r2, r3]
   20880:	ldr	r2, [r3, #0]
   20882:	ldr	r3, [sp, #44]	; 0x2c
   20884:	eors	r2, r3
   20886:	beq.n	208ee <btrfs_set_block_flags@@Base+0x1b2>
   20888:	blx	84cc <__stack_chk_fail@plt>
   2088c:	ldr.w	r0, [sl]
   20890:	bl	25020 <btrfs_print_leaf@@Base>
   20894:	ldr	r3, [pc, #116]	; (2090c <btrfs_set_block_flags@@Base+0x1d0>)
   20896:	ldrd	r1, r2, [sp, #8]
   2089a:	ldr.w	r3, [fp, r3]
   2089e:	strd	r1, r2, [sp]
   208a2:	movs	r1, #1
   208a4:	ldr	r2, [pc, #104]	; (20910 <btrfs_set_block_flags@@Base+0x1d4>)
   208a6:	ldr	r0, [r3, #0]
   208a8:	add	r2, pc
   208aa:	blx	881c <__fprintf_chk@plt+0x4>
   208ae:	ldr	r2, [pc, #100]	; (20914 <btrfs_set_block_flags@@Base+0x1d8>)
   208b0:	ldr	r1, [pc, #100]	; (20918 <btrfs_set_block_flags@@Base+0x1dc>)
   208b2:	movs	r3, #1
   208b4:	ldr	r0, [pc, #100]	; (2091c <btrfs_set_block_flags@@Base+0x1e0>)
   208b6:	add	r2, pc
   208b8:	str	r3, [sp, #0]
   208ba:	add.w	r2, r2, #368	; 0x170
   208be:	add	r1, pc
   208c0:	add	r0, pc
   208c2:	movw	r3, #1426	; 0x592
   208c6:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   208ca:	ldr.w	r2, [r0, #17]
   208ce:	mov.w	r9, #0
   208d2:	ldr	r0, [sp, #16]
   208d4:	adds	r2, #101	; 0x65
   208d6:	add	r3, r2
   208d8:	ldr	r1, [r3, #16]
   208da:	ldr	r2, [r3, #20]
   208dc:	orrs	r1, r0
   208de:	ldr	r0, [sp, #20]
   208e0:	str	r1, [r3, #16]
   208e2:	orrs	r2, r0
   208e4:	str	r2, [r3, #20]
   208e6:	b.n	20872 <btrfs_set_block_flags@@Base+0x136>
   208e8:	mvn.w	r9, #11
   208ec:	b.n	20878 <btrfs_set_block_flags@@Base+0x13c>
   208ee:	mov	r0, r9
   208f0:	add	sp, #52	; 0x34
   208f2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   208f6:	nop
   208f8:	mov	r2, r6
   208fa:	movs	r4, r0
   208fc:	mov	r0, r5
   208fe:	movs	r4, r0
   20900:	lsls	r4, r4, #8
   20902:	movs	r0, r0
   20904:	bmi.n	209ac <btrfs_write_dirty_block_groups@@Base+0x70>
   20906:	movs	r1, r0
   20908:	cmp	r4, r1
   2090a:	movs	r4, r0
   2090c:	lsls	r4, r6, #8
   2090e:	movs	r0, r0
   20910:	bpl.n	2081c <btrfs_set_block_flags@@Base+0xe0>
   20912:	movs	r1, r0
   20914:	bls.n	20924 <btrfs_inc_ref@@Base+0x4>
   20916:	movs	r1, r0
   20918:	bne.n	208b6 <btrfs_set_block_flags@@Base+0x17a>
   2091a:	movs	r1, r0
   2091c:	bpl.n	20976 <btrfs_write_dirty_block_groups@@Base+0x3a>
   2091e:	movs	r1, r0

00020920 <btrfs_inc_ref@@Base>:
   20920:	push	{r0, r1, r4, lr}
   20922:	movs	r4, #1
   20924:	str	r4, [sp, #0]
   20926:	bl	1e6ea <btrfs_create_tree@@Base+0x36e>
   2092a:	add	sp, #8
   2092c:	pop	{r4, pc}

0002092e <btrfs_dec_ref@@Base>:
   2092e:	push	{r0, r1, r4, lr}
   20930:	movs	r4, #0
   20932:	str	r4, [sp, #0]
   20934:	bl	1e6ea <btrfs_create_tree@@Base+0x36e>
   20938:	add	sp, #8
   2093a:	pop	{r4, pc}

0002093c <btrfs_write_dirty_block_groups@@Base>:
   2093c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20940:	mov	r8, r0
   20942:	vpush	{d8}
   20946:	ldr	r2, [pc, #340]	; (20a9c <btrfs_write_dirty_block_groups@@Base+0x160>)
   20948:	ldr	r3, [pc, #340]	; (20aa0 <btrfs_write_dirty_block_groups@@Base+0x164>)
   2094a:	add	r2, pc
   2094c:	sub	sp, #92	; 0x5c
   2094e:	ldr	r7, [r0, #0]
   20950:	ldr	r3, [r2, r3]
   20952:	ldr	r3, [r3, #0]
   20954:	str	r3, [sp, #84]	; 0x54
   20956:	mov.w	r3, #0
   2095a:	bl	17e50 <btrfs_alloc_path@@Base>
   2095e:	mov	r4, r0
   20960:	cmp	r0, #0
   20962:	beq.w	20a8a <btrfs_write_dirty_block_groups@@Base+0x14e>
   20966:	movs	r3, #0
   20968:	movs	r2, #0
   2096a:	strd	r2, r3, [sp, #16]
   2096e:	adds	r7, #128	; 0x80
   20970:	ldr	r3, [pc, #304]	; (20aa4 <btrfs_write_dirty_block_groups@@Base+0x168>)
   20972:	ldr.w	fp, [pc, #308]	; 20aa8 <btrfs_write_dirty_block_groups@@Base+0x16c>
   20976:	add	r3, pc
   20978:	str	r3, [sp, #24]
   2097a:	add.w	r3, r3, #390	; 0x186
   2097e:	add	fp, pc
   20980:	vmov	s16, r3
   20984:	add	r3, sp, #40	; 0x28
   20986:	mov.w	r9, #1
   2098a:	str	r3, [sp, #4]
   2098c:	mov	r0, r7
   2098e:	add	r3, sp, #32
   20990:	str.w	r9, [sp, #8]
   20994:	str	r3, [sp, #0]
   20996:	ldrd	r2, r3, [sp, #16]
   2099a:	bl	16b18 <find_first_extent_bit@@Base>
   2099e:	mov	r5, r0
   209a0:	cbz	r0, 209b4 <btrfs_write_dirty_block_groups@@Base+0x78>
   209a2:	ldrd	r2, r3, [sp, #16]
   209a6:	orrs	r3, r2
   209a8:	beq.n	20a6e <btrfs_write_dirty_block_groups@@Base+0x132>
   209aa:	movs	r2, #0
   209ac:	movs	r3, #0
   209ae:	strd	r2, r3, [sp, #16]
   209b2:	b.n	20984 <btrfs_write_dirty_block_groups@@Base+0x48>
   209b4:	ldr	r3, [sp, #40]	; 0x28
   209b6:	mov	r0, r7
   209b8:	ldr.w	sl, [pc, #240]	; 20aac <btrfs_write_dirty_block_groups@@Base+0x170>
   209bc:	adds	r3, #1
   209be:	str	r3, [sp, #16]
   209c0:	ldr	r3, [sp, #44]	; 0x2c
   209c2:	add	sl, pc
   209c4:	adc.w	r3, r3, #0
   209c8:	str	r3, [sp, #20]
   209ca:	add	r3, sp, #48	; 0x30
   209cc:	str	r3, [sp, #0]
   209ce:	ldrd	r2, r3, [sp, #32]
   209d2:	bl	16bf4 <get_state_private@@Base>
   209d6:	mov	r1, fp
   209d8:	vmov	r2, s16
   209dc:	mov.w	r3, #1592	; 0x638
   209e0:	str	r0, [sp, #0]
   209e2:	mov	r0, sl
   209e4:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   209e8:	ldrd	r2, r3, [sp, #40]	; 0x28
   209ec:	mov	r0, r7
   209ee:	str.w	r9, [sp, #8]
   209f2:	strd	r2, r3, [sp]
   209f6:	ldrd	r2, r3, [sp, #32]
   209fa:	bl	16746 <clear_extent_bits@@Base>
   209fe:	ldr.w	r1, [r8]
   20a02:	ldr	r6, [sp, #48]	; 0x30
   20a04:	mov	r3, r4
   20a06:	strd	r5, r9, [sp]
   20a0a:	mov	r0, r8
   20a0c:	ldr	r1, [r1, #24]
   20a0e:	add.w	r2, r6, #40	; 0x28
   20a12:	bl	1a23c <btrfs_search_slot@@Base>
   20a16:	cmp	r0, #0
   20a18:	blt.n	20984 <btrfs_write_dirty_block_groups@@Base+0x48>
   20a1a:	ldr	r2, [sp, #24]
   20a1c:	mov	r1, fp
   20a1e:	str	r0, [sp, #0]
   20a20:	movw	r3, #1547	; 0x60b
   20a24:	mov	r0, sl
   20a26:	addw	r2, r2, #421	; 0x1a5
   20a2a:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   20a2e:	ldr	r0, [r4, #0]
   20a30:	ldr	r3, [r4, #32]
   20a32:	movs	r2, #25
   20a34:	add	r1, sp, #60	; 0x3c
   20a36:	str	r0, [sp, #28]
   20a38:	mla	r3, r2, r3, r0
   20a3c:	ldr.w	r2, [r3, #214]	; 0xd6
   20a40:	ldr	r3, [r6, #72]	; 0x48
   20a42:	adds	r2, #101	; 0x65
   20a44:	str	r3, [sp, #60]	; 0x3c
   20a46:	ldr	r3, [r6, #76]	; 0x4c
   20a48:	str	r3, [sp, #64]	; 0x40
   20a4a:	ldr	r3, [r6, #96]	; 0x60
   20a4c:	str	r3, [sp, #76]	; 0x4c
   20a4e:	ldr	r3, [r6, #100]	; 0x64
   20a50:	str	r3, [sp, #80]	; 0x50
   20a52:	mov.w	r3, #256	; 0x100
   20a56:	strd	r3, r5, [sp, #68]	; 0x44
   20a5a:	movs	r3, #24
   20a5c:	bl	17330 <write_extent_buffer@@Base>
   20a60:	ldr	r0, [sp, #28]
   20a62:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   20a66:	mov	r0, r4
   20a68:	bl	17e58 <btrfs_release_path@@Base>
   20a6c:	b.n	20984 <btrfs_write_dirty_block_groups@@Base+0x48>
   20a6e:	mov	r0, r4
   20a70:	bl	17e7e <btrfs_free_path@@Base>
   20a74:	movs	r0, #0
   20a76:	ldr	r2, [pc, #56]	; (20ab0 <btrfs_write_dirty_block_groups@@Base+0x174>)
   20a78:	ldr	r3, [pc, #36]	; (20aa0 <btrfs_write_dirty_block_groups@@Base+0x164>)
   20a7a:	add	r2, pc
   20a7c:	ldr	r3, [r2, r3]
   20a7e:	ldr	r2, [r3, #0]
   20a80:	ldr	r3, [sp, #84]	; 0x54
   20a82:	eors	r2, r3
   20a84:	beq.n	20a90 <btrfs_write_dirty_block_groups@@Base+0x154>
   20a86:	blx	84cc <__stack_chk_fail@plt>
   20a8a:	mvn.w	r0, #11
   20a8e:	b.n	20a76 <btrfs_write_dirty_block_groups@@Base+0x13a>
   20a90:	add	sp, #92	; 0x5c
   20a92:	vpop	{d8}
   20a96:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20a9a:	nop
   20a9c:	add	r6, r7
   20a9e:	movs	r4, r0
   20aa0:	lsls	r4, r4, #8
   20aa2:	movs	r0, r0
   20aa4:	bhi.n	20b34 <update_space_info@@Base+0x80>
   20aa6:	movs	r1, r0
   20aa8:	bne.n	20ac6 <update_space_info@@Base+0x12>
   20aaa:	movs	r1, r0
   20aac:	ldr	r5, [sp, #452]	; 0x1c4
   20aae:	movs	r1, r0
   20ab0:	orrs	r6, r1
   20ab2:	movs	r4, r0

00020ab4 <update_space_info@@Base>:
   20ab4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ab8:	sub	sp, #36	; 0x24
   20aba:	mov	r5, r0
   20abc:	mov	r4, r2
   20abe:	ldr	r1, [sp, #80]	; 0x50
   20ac0:	ldrd	r7, fp, [sp, #72]	; 0x48
   20ac4:	ldr.w	sl, [sp, #84]	; 0x54
   20ac8:	str	r1, [sp, #24]
   20aca:	ldr	r1, [pc, #176]	; (20b7c <update_space_info@@Base+0xc8>)
   20acc:	add	r1, pc
   20ace:	str	r1, [sp, #28]
   20ad0:	bl	1e544 <btrfs_create_tree@@Base+0x1c8>
   20ad4:	mov	r6, r0
   20ad6:	cbz	r0, 20b32 <update_space_info@@Base+0x7e>
   20ad8:	ldrd	r2, r0, [r0, #8]
   20adc:	ldr	r1, [sp, #28]
   20ade:	adds	r3, r7, r2
   20ae0:	str	r3, [sp, #16]
   20ae2:	adc.w	r3, fp, r0
   20ae6:	str	r3, [sp, #20]
   20ae8:	ldrd	r3, r4, [sp, #16]
   20aec:	ldrd	r2, r0, [r6, #16]
   20af0:	strd	r3, r4, [r6, #8]
   20af4:	ldr	r3, [sp, #24]
   20af6:	adds.w	r8, r3, r2
   20afa:	ldrd	r3, r4, [sp, #16]
   20afe:	adc.w	r9, sl, r0
   20b02:	strd	r8, r9, [r6, #16]
   20b06:	cmp	r4, r9
   20b08:	it	eq
   20b0a:	cmpeq	r3, r8
   20b0c:	bcs.n	20b26 <update_space_info@@Base+0x72>
   20b0e:	ldr	r2, [pc, #112]	; (20b80 <update_space_info@@Base+0xcc>)
   20b10:	ldr	r0, [r1, r2]
   20b12:	movs	r1, #1
   20b14:	ldr	r2, [pc, #108]	; (20b84 <update_space_info@@Base+0xd0>)
   20b16:	strd	r8, r9, [sp, #8]
   20b1a:	strd	r3, r4, [sp]
   20b1e:	add	r2, pc
   20b20:	ldr	r0, [r0, #0]
   20b22:	blx	881c <__fprintf_chk@plt+0x4>
   20b26:	ldr	r3, [sp, #88]	; 0x58
   20b28:	str	r6, [r3, #0]
   20b2a:	movs	r0, #0
   20b2c:	add	sp, #36	; 0x24
   20b2e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20b32:	movs	r0, #56	; 0x38
   20b34:	blx	8634 <malloc@plt+0x4>
   20b38:	cbz	r0, 20b76 <update_space_info@@Base+0xc2>
   20b3a:	ldr.w	r1, [r5, #356]	; 0x164
   20b3e:	add.w	r2, r0, #44	; 0x2c
   20b42:	ldr	r3, [sp, #24]
   20b44:	and.w	r4, r4, #7
   20b48:	str	r2, [r1, #4]
   20b4a:	strd	r3, sl, [r0, #16]
   20b4e:	ldr	r3, [sp, #88]	; 0x58
   20b50:	str.w	r2, [r5, #356]	; 0x164
   20b54:	str	r1, [r0, #44]	; 0x2c
   20b56:	add.w	r1, r5, #356	; 0x164
   20b5a:	strd	r4, r6, [r0]
   20b5e:	movs	r5, #0
   20b60:	movs	r4, #0
   20b62:	str	r1, [r0, #48]	; 0x30
   20b64:	strd	r7, fp, [r0, #8]
   20b68:	strd	r4, r5, [r0, #24]
   20b6c:	strd	r4, r5, [r0, #32]
   20b70:	str	r6, [r0, #40]	; 0x28
   20b72:	str	r0, [r3, #0]
   20b74:	b.n	20b2a <update_space_info@@Base+0x76>
   20b76:	mvn.w	r0, #11
   20b7a:	b.n	20b2c <update_space_info@@Base+0x78>
   20b7c:	cmp	r4, r7
   20b7e:	movs	r4, r0
   20b80:	lsls	r4, r6, #8
   20b82:	movs	r0, r0
   20b84:	bcc.n	20be6 <btrfs_finish_extent_commit@@Base+0x5e>
   20b86:	movs	r1, r0

00020b88 <btrfs_finish_extent_commit@@Base>:
   20b88:	ldr	r2, [pc, #156]	; (20c28 <btrfs_finish_extent_commit@@Base+0xa0>)
   20b8a:	ldr	r3, [pc, #160]	; (20c2c <btrfs_finish_extent_commit@@Base+0xa4>)
   20b8c:	add	r2, pc
   20b8e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20b92:	sub	sp, #44	; 0x2c
   20b94:	ldr	r4, [r0, #0]
   20b96:	add	r7, sp, #24
   20b98:	ldr	r3, [r2, r3]
   20b9a:	add.w	r8, sp, #16
   20b9e:	add.w	r5, r4, #96	; 0x60
   20ba2:	adds	r4, #160	; 0xa0
   20ba4:	ldr	r3, [r3, #0]
   20ba6:	str	r3, [sp, #36]	; 0x24
   20ba8:	mov.w	r3, #0
   20bac:	mov	r9, r0
   20bae:	movs	r6, #1
   20bb0:	movs	r2, #0
   20bb2:	movs	r3, #0
   20bb4:	mov	r0, r4
   20bb6:	strd	r7, r6, [sp, #4]
   20bba:	str.w	r8, [sp]
   20bbe:	bl	16b18 <find_first_extent_bit@@Base>
   20bc2:	cbnz	r0, 20c0c <btrfs_finish_extent_commit@@Base+0x84>
   20bc4:	ldr	r1, [sp, #24]
   20bc6:	ldrd	r2, r3, [sp, #16]
   20bca:	str	r0, [sp, #8]
   20bcc:	adds	r1, #1
   20bce:	ldr	r0, [sp, #28]
   20bd0:	adc.w	r0, r0, #0
   20bd4:	subs	r1, r1, r2
   20bd6:	sbc.w	r0, r0, r3
   20bda:	strd	r1, r0, [sp]
   20bde:	ldr.w	r0, [r9]
   20be2:	bl	1ef4c <btrfs_lookup_block_group@@Base+0x98>
   20be6:	ldrd	r2, r3, [sp, #24]
   20bea:	mov	r0, r4
   20bec:	strd	r2, r3, [sp]
   20bf0:	ldrd	r2, r3, [sp, #16]
   20bf4:	bl	16b00 <clear_extent_dirty@@Base>
   20bf8:	ldrd	r2, r3, [sp, #24]
   20bfc:	mov	r0, r5
   20bfe:	strd	r2, r3, [sp]
   20c02:	ldrd	r2, r3, [sp, #16]
   20c06:	bl	16ae8 <set_extent_dirty@@Base>
   20c0a:	b.n	20bb0 <btrfs_finish_extent_commit@@Base+0x28>
   20c0c:	ldr	r2, [pc, #32]	; (20c30 <btrfs_finish_extent_commit@@Base+0xa8>)
   20c0e:	ldr	r3, [pc, #28]	; (20c2c <btrfs_finish_extent_commit@@Base+0xa4>)
   20c10:	add	r2, pc
   20c12:	ldr	r3, [r2, r3]
   20c14:	ldr	r2, [r3, #0]
   20c16:	ldr	r3, [sp, #36]	; 0x24
   20c18:	eors	r2, r3
   20c1a:	beq.n	20c20 <btrfs_finish_extent_commit@@Base+0x98>
   20c1c:	blx	84cc <__stack_chk_fail@plt>
   20c20:	add	sp, #44	; 0x2c
   20c22:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20c26:	nop
   20c28:	rors	r4, r7
   20c2a:	movs	r4, r0
   20c2c:	lsls	r4, r4, #8
   20c2e:	movs	r0, r0
   20c30:	adcs	r0, r7
   20c32:	movs	r4, r0

00020c34 <btrfs_pin_extent@@Base>:
   20c34:	push	{r4, r5, lr}
   20c36:	sub	sp, #20
   20c38:	movs	r1, #1
   20c3a:	ldrd	r4, r5, [sp, #32]
   20c3e:	str	r1, [sp, #8]
   20c40:	strd	r4, r5, [sp]
   20c44:	bl	1ef4c <btrfs_lookup_block_group@@Base+0x98>
   20c48:	add	sp, #20
   20c4a:	pop	{r4, r5, pc}

00020c4c <btrfs_free_extent@@Base>:
   20c4c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20c50:	sub	sp, #84	; 0x54
   20c52:	mov	r6, r2
   20c54:	mov	r5, r3
   20c56:	ldrd	r2, r3, [sp, #128]	; 0x80
   20c5a:	mov	r4, r0
   20c5c:	mov	r0, r1
   20c5e:	ldrd	r8, r9, [sp, #120]	; 0x78
   20c62:	mov.w	ip, #0
   20c66:	ldr	r1, [pc, #296]	; (20d90 <btrfs_free_extent@@Base+0x144>)
   20c68:	strd	r2, r3, [sp, #64]	; 0x40
   20c6c:	cmp	r9, ip
   20c6e:	ldrd	r2, r3, [sp, #136]	; 0x88
   20c72:	add	r1, pc
   20c74:	ldrd	r7, sl, [sp, #152]	; 0x98
   20c78:	mvn.w	fp, #5
   20c7c:	strd	r2, r3, [sp, #56]	; 0x38
   20c80:	ldrd	r2, r3, [sp, #144]	; 0x90
   20c84:	strd	r2, r3, [sp, #48]	; 0x30
   20c88:	ldr.w	r3, [r0, #464]	; 0x1d0
   20c8c:	ldr	r2, [pc, #260]	; (20d94 <btrfs_free_extent@@Base+0x148>)
   20c8e:	ldr	r0, [pc, #264]	; (20d98 <btrfs_free_extent@@Base+0x14c>)
   20c90:	ldr.w	r3, [r3, #388]	; 0x184
   20c94:	add	r2, pc
   20c96:	addw	r2, r2, #443	; 0x1bb
   20c9a:	add	r0, pc
   20c9c:	it	eq
   20c9e:	cmpeq	r8, r3
   20ca0:	strd	r1, r2, [sp, #72]	; 0x48
   20ca4:	ite	cc
   20ca6:	movcc	r3, #1
   20ca8:	movcs	r3, #0
   20caa:	str	r3, [sp, #0]
   20cac:	movw	r3, #2154	; 0x86a
   20cb0:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   20cb4:	ldrd	r2, r3, [sp, #56]	; 0x38
   20cb8:	mov.w	ip, #4294967295	; 0xffffffff
   20cbc:	cmp	r3, ip
   20cbe:	it	eq
   20cc0:	cmpeq	r2, fp
   20cc2:	ldrd	r1, r2, [sp, #72]	; 0x48
   20cc6:	bne.n	20d0e <btrfs_free_extent@@Base+0xc2>
   20cc8:	ldr	r0, [pc, #208]	; (20d9c <btrfs_free_extent@@Base+0x150>)
   20cca:	str	r1, [sp, #64]	; 0x40
   20ccc:	add	r0, pc
   20cce:	str	r2, [sp, #56]	; 0x38
   20cd0:	blx	8618 <puts@plt+0x4>
   20cd4:	ldrd	r2, r3, [sp, #48]	; 0x30
   20cd8:	ldr	r0, [pc, #196]	; (20da0 <btrfs_free_extent@@Base+0x154>)
   20cda:	cmp	r3, #0
   20cdc:	ldr	r1, [sp, #64]	; 0x40
   20cde:	it	eq
   20ce0:	cmpeq.w	r2, #256	; 0x100
   20ce4:	add	r0, pc
   20ce6:	ldr	r2, [sp, #56]	; 0x38
   20ce8:	ite	cs
   20cea:	movcs	r3, #1
   20cec:	movcc	r3, #0
   20cee:	str	r3, [sp, #0]
   20cf0:	movw	r3, #2161	; 0x871
   20cf4:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   20cf8:	ldr	r0, [r4, #0]
   20cfa:	mov	r2, r6
   20cfc:	mov	r3, r5
   20cfe:	strd	r8, r9, [sp]
   20d02:	bl	20c34 <btrfs_pin_extent@@Base>
   20d06:	movs	r0, #0
   20d08:	add	sp, #84	; 0x54
   20d0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20d0e:	ldrd	fp, ip, [sp, #48]	; 0x30
   20d12:	cmp.w	ip, #0
   20d16:	it	eq
   20d18:	cmpeq.w	fp, #256	; 0x100
   20d1c:	bcs.n	20d5e <btrfs_free_extent@@Base+0x112>
   20d1e:	ldr	r0, [pc, #132]	; (20da4 <btrfs_free_extent@@Base+0x158>)
   20d20:	movw	r3, #2165	; 0x875
   20d24:	str	r7, [sp, #0]
   20d26:	add	r0, pc
   20d28:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   20d2c:	movs	r3, #0
   20d2e:	strd	r3, r3, [sp, #36]	; 0x24
   20d32:	mov	r1, r4
   20d34:	str	r3, [sp, #32]
   20d36:	movs	r3, #2
   20d38:	str	r3, [sp, #28]
   20d3a:	ldr	r3, [sp, #48]	; 0x30
   20d3c:	ldr	r0, [r4, #0]
   20d3e:	strd	r8, r9, [sp]
   20d42:	str	r3, [sp, #24]
   20d44:	ldrd	r2, r3, [sp, #56]	; 0x38
   20d48:	strd	r2, r3, [sp, #16]
   20d4c:	ldrd	r2, r3, [sp, #64]	; 0x40
   20d50:	strd	r2, r3, [sp, #8]
   20d54:	mov	r2, r6
   20d56:	mov	r3, r5
   20d58:	bl	23ef4 <btrfs_add_delayed_tree_ref@@Base>
   20d5c:	b.n	20d08 <btrfs_free_extent@@Base+0xbc>
   20d5e:	ldrd	r2, r3, [sp, #48]	; 0x30
   20d62:	mov	r0, r4
   20d64:	strd	r7, sl, [sp, #152]	; 0x98
   20d68:	strd	r8, r9, [sp, #120]	; 0x78
   20d6c:	strd	r2, r3, [sp, #144]	; 0x90
   20d70:	ldrd	r2, r3, [sp, #56]	; 0x38
   20d74:	strd	r2, r3, [sp, #136]	; 0x88
   20d78:	ldrd	r2, r3, [sp, #64]	; 0x40
   20d7c:	strd	r2, r3, [sp, #128]	; 0x80
   20d80:	mov	r2, r6
   20d82:	mov	r3, r5
   20d84:	add	sp, #84	; 0x54
   20d86:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20d8a:	b.w	1f7cc <hash_extent_data_ref@@Base+0x3f4>
   20d8e:	nop
   20d90:	ldmia	r6!, {r0, r3, r4}
   20d92:	movs	r1, r0
   20d94:	bpl.n	20de8 <btrfs_free_tree_block@@Base+0x28>
   20d96:	movs	r1, r0
   20d98:	bne.n	20d6a <btrfs_free_extent@@Base+0x11e>
   20d9a:	movs	r1, r0
   20d9c:	bne.n	20d56 <btrfs_free_extent@@Base+0x10a>
   20d9e:	movs	r1, r0
   20da0:	bne.n	20d62 <btrfs_free_extent@@Base+0x116>
   20da2:	movs	r1, r0
   20da4:	stc	0, cr0, [r5, #-4]!

00020da8 <btrfs_unpin_extent@@Base>:
   20da8:	push	{r4, r5, lr}
   20daa:	sub	sp, #20
   20dac:	movs	r1, #0
   20dae:	ldrd	r4, r5, [sp, #32]
   20db2:	str	r1, [sp, #8]
   20db4:	strd	r4, r5, [sp]
   20db8:	bl	1ef4c <btrfs_lookup_block_group@@Base+0x98>
   20dbc:	add	sp, #20
   20dbe:	pop	{r4, r5, pc}

00020dc0 <btrfs_free_tree_block@@Base>:
   20dc0:	push	{r4, r5, lr}
   20dc2:	sub	sp, #44	; 0x2c
   20dc4:	movs	r4, #0
   20dc6:	movs	r5, #0
   20dc8:	strd	r4, r5, [sp, #32]
   20dcc:	movs	r5, #0
   20dce:	ldrb.w	r4, [r2, #196]	; 0xc4
   20dd2:	ldr.w	r3, [r1, #451]	; 0x1c3
   20dd6:	strd	r4, r5, [sp, #24]
   20dda:	ldr.w	r4, [r1, #447]	; 0x1bf
   20dde:	strd	r4, r3, [sp, #16]
   20de2:	ldrd	r4, r5, [sp, #56]	; 0x38
   20de6:	strd	r4, r5, [sp, #8]
   20dea:	ldr	r3, [r2, #76]	; 0x4c
   20dec:	str	r3, [sp, #0]
   20dee:	movs	r3, #0
   20df0:	str	r3, [sp, #4]
   20df2:	ldrd	r2, r3, [r2, #40]	; 0x28
   20df6:	bl	20c4c <btrfs_free_extent@@Base>
   20dfa:	add	sp, #44	; 0x2c
   20dfc:	pop	{r4, r5, pc}

00020dfe <btrfs_free_block_groups@@Base>:
   20dfe:	ldr	r2, [pc, #260]	; (20f04 <btrfs_free_block_groups@@Base+0x106>)
   20e00:	ldr	r3, [pc, #260]	; (20f08 <btrfs_free_block_groups@@Base+0x10a>)
   20e02:	add	r2, pc
   20e04:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   20e08:	sub	sp, #52	; 0x34
   20e0a:	ldr	r3, [r2, r3]
   20e0c:	add.w	r6, r0, #128	; 0x80
   20e10:	add	r7, sp, #24
   20e12:	mov	r4, r0
   20e14:	ldr	r3, [r3, #0]
   20e16:	str	r3, [sp, #44]	; 0x2c
   20e18:	mov.w	r3, #0
   20e1c:	mov.w	r9, #4294967295	; 0xffffffff
   20e20:	add.w	r8, sp, #16
   20e24:	movs	r2, #0
   20e26:	movs	r3, #0
   20e28:	mov	r0, r6
   20e2a:	strd	r7, r9, [sp, #4]
   20e2e:	str.w	r8, [sp]
   20e32:	bl	16b18 <find_first_extent_bit@@Base>
   20e36:	cbz	r0, 20e76 <btrfs_free_block_groups@@Base+0x78>
   20e38:	add.w	r5, r4, #96	; 0x60
   20e3c:	movs	r6, #1
   20e3e:	movs	r2, #0
   20e40:	movs	r3, #0
   20e42:	mov	r0, r5
   20e44:	strd	r7, r6, [sp, #4]
   20e48:	str.w	r8, [sp]
   20e4c:	bl	16b18 <find_first_extent_bit@@Base>
   20e50:	cbz	r0, 20eb6 <btrfs_free_block_groups@@Base+0xb8>
   20e52:	ldr	r6, [pc, #184]	; (20f0c <btrfs_free_block_groups@@Base+0x10e>)
   20e54:	add.w	r5, r4, #356	; 0x164
   20e58:	add	r6, pc
   20e5a:	ldr.w	r3, [r4, #356]	; 0x164
   20e5e:	cmp	r3, r5
   20e60:	bne.n	20eca <btrfs_free_block_groups@@Base+0xcc>
   20e62:	ldr	r2, [pc, #172]	; (20f10 <btrfs_free_block_groups@@Base+0x112>)
   20e64:	ldr	r3, [pc, #160]	; (20f08 <btrfs_free_block_groups@@Base+0x10a>)
   20e66:	add	r2, pc
   20e68:	ldr	r3, [r2, r3]
   20e6a:	ldr	r2, [r3, #0]
   20e6c:	ldr	r3, [sp, #44]	; 0x2c
   20e6e:	eors	r2, r3
   20e70:	beq.n	20efa <btrfs_free_block_groups@@Base+0xfc>
   20e72:	blx	84cc <__stack_chk_fail@plt>
   20e76:	add	r3, sp, #32
   20e78:	mov	r0, r6
   20e7a:	str	r3, [sp, #0]
   20e7c:	ldrd	r2, r3, [sp, #16]
   20e80:	bl	16bf4 <get_state_private@@Base>
   20e84:	cbnz	r0, 20e9e <btrfs_free_block_groups@@Base+0xa0>
   20e86:	ldr	r5, [sp, #32]
   20e88:	ldr	r3, [r5, #64]	; 0x40
   20e8a:	cbz	r3, 20e98 <btrfs_free_block_groups@@Base+0x9a>
   20e8c:	mov	r0, r5
   20e8e:	bl	26c14 <btrfs_remove_free_space_cache@@Base>
   20e92:	ldr	r0, [r5, #64]	; 0x40
   20e94:	blx	83f0 <free@plt+0x4>
   20e98:	mov	r0, r5
   20e9a:	blx	83f0 <free@plt+0x4>
   20e9e:	ldrd	r2, r3, [sp, #24]
   20ea2:	mov	r0, r6
   20ea4:	str.w	r9, [sp, #8]
   20ea8:	strd	r2, r3, [sp]
   20eac:	ldrd	r2, r3, [sp, #16]
   20eb0:	bl	16746 <clear_extent_bits@@Base>
   20eb4:	b.n	20e20 <btrfs_free_block_groups@@Base+0x22>
   20eb6:	ldrd	r2, r3, [sp, #24]
   20eba:	mov	r0, r5
   20ebc:	strd	r2, r3, [sp]
   20ec0:	ldrd	r2, r3, [sp, #16]
   20ec4:	bl	16b00 <clear_extent_dirty@@Base>
   20ec8:	b.n	20e3e <btrfs_free_block_groups@@Base+0x40>
   20eca:	ldrd	r1, r2, [r3]
   20ece:	sub.w	r7, r3, #44	; 0x2c
   20ed2:	str	r2, [r1, #4]
   20ed4:	str	r1, [r2, #0]
   20ed6:	ldrd	r0, r1, [r3, #-12]
   20eda:	strd	r3, r3, [r3]
   20ede:	orrs.w	r2, r0, r1
   20ee2:	beq.n	20ef2 <btrfs_free_block_groups@@Base+0xf4>
   20ee4:	strd	r0, r1, [sp]
   20ee8:	mov	r0, r6
   20eea:	ldrd	r2, r3, [r3, #-44]	; 0x2c
   20eee:	bl	17400 <__btrfs_warning@@Base>
   20ef2:	mov	r0, r7
   20ef4:	blx	83f0 <free@plt+0x4>
   20ef8:	b.n	20e5a <btrfs_free_block_groups@@Base+0x5c>
   20efa:	movs	r0, #0
   20efc:	add	sp, #52	; 0x34
   20efe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   20f02:	nop
   20f04:	subs	r7, #134	; 0x86
   20f06:	movs	r4, r0
   20f08:	lsls	r4, r4, #8
   20f0a:	movs	r0, r0
   20f0c:	beq.n	20e2c <btrfs_free_block_groups@@Base+0x2e>
   20f0e:	movs	r1, r0
   20f10:	subs	r7, #34	; 0x22
   20f12:	movs	r4, r0

00020f14 <btrfs_make_block_groups@@Base>:
   20f14:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f18:	mov	r7, r1
   20f1a:	vpush	{d8-d9}
   20f1e:	movs	r6, #0
   20f20:	ldr	r2, [pc, #768]	; (21224 <btrfs_make_block_groups@@Base+0x310>)
   20f22:	mov	r8, r6
   20f24:	ldr	r3, [pc, #768]	; (21228 <btrfs_make_block_groups@@Base+0x314>)
   20f26:	mov	r9, r6
   20f28:	add	r2, pc
   20f2a:	vmov	s19, r0
   20f2e:	sub	sp, #124	; 0x7c
   20f30:	ldr	r3, [r2, r3]
   20f32:	ldr	r3, [r3, #0]
   20f34:	str	r3, [sp, #116]	; 0x74
   20f36:	mov.w	r3, #0
   20f3a:	ldr	r3, [r1, #24]
   20f3c:	vmov	s18, r3
   20f40:	add.w	r3, r1, #128	; 0x80
   20f44:	vmov	s16, r3
   20f48:	ldr.w	r3, [r1, #308]	; 0x134
   20f4c:	ldr	r2, [r3, #112]	; 0x70
   20f4e:	str	r2, [sp, #40]	; 0x28
   20f50:	movs	r2, #0
   20f52:	ldr	r3, [r3, #116]	; 0x74
   20f54:	str	r3, [sp, #44]	; 0x2c
   20f56:	ldr.w	r3, [r1, #388]	; 0x184
   20f5a:	lsls	r3, r3, #6
   20f5c:	mov	r1, r3
   20f5e:	movs	r3, #0
   20f60:	strd	r1, r2, [sp, #64]	; 0x40
   20f64:	movs	r2, #12
   20f66:	ldrd	r0, r1, [sp, #40]	; 0x28
   20f6a:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   20f6e:	ldr	r3, [pc, #700]	; (2122c <btrfs_make_block_groups@@Base+0x318>)
   20f70:	str	r6, [sp, #80]	; 0x50
   20f72:	add	r3, pc
   20f74:	strd	r6, r6, [sp, #32]
   20f78:	addw	r3, r3, #461	; 0x1cd
   20f7c:	vmov	s17, r3
   20f80:	strd	r0, r1, [sp, #56]	; 0x38
   20f84:	ldrd	r2, r3, [sp, #40]	; 0x28
   20f88:	cmp	r9, r3
   20f8a:	it	eq
   20f8c:	cmpeq	r8, r2
   20f8e:	bcc.n	20fc8 <btrfs_make_block_groups@@Base+0xb4>
   20f90:	ldr.w	r8, [pc, #668]	; 21230 <btrfs_make_block_groups@@Base+0x31c>
   20f94:	movs	r4, #0
   20f96:	ldr.w	r9, [pc, #668]	; 21234 <btrfs_make_block_groups@@Base+0x320>
   20f9a:	movs	r5, #0
   20f9c:	add	r8, pc
   20f9e:	addw	r8, r8, #461	; 0x1cd
   20fa2:	add	r9, pc
   20fa4:	ldrd	r2, r3, [sp, #40]	; 0x28
   20fa8:	cmp	r5, r3
   20faa:	it	eq
   20fac:	cmpeq	r4, r2
   20fae:	bcc.w	2119e <btrfs_make_block_groups@@Base+0x28a>
   20fb2:	ldr	r2, [pc, #644]	; (21238 <btrfs_make_block_groups@@Base+0x324>)
   20fb4:	ldr	r3, [pc, #624]	; (21228 <btrfs_make_block_groups@@Base+0x314>)
   20fb6:	add	r2, pc
   20fb8:	ldr	r3, [r2, r3]
   20fba:	ldr	r2, [r3, #0]
   20fbc:	ldr	r3, [sp, #116]	; 0x74
   20fbe:	eors	r2, r3
   20fc0:	beq.w	21218 <btrfs_make_block_groups@@Base+0x304>
   20fc4:	blx	84cc <__stack_chk_fail@plt>
   20fc8:	ldr	r3, [sp, #40]	; 0x28
   20fca:	ldrd	sl, fp, [sp, #56]	; 0x38
   20fce:	subs.w	r3, r3, r8
   20fd2:	str	r3, [sp, #24]
   20fd4:	ldr	r3, [sp, #44]	; 0x2c
   20fd6:	sbc.w	r3, r3, r9
   20fda:	str	r3, [sp, #28]
   20fdc:	ldrd	r0, r1, [sp, #24]
   20fe0:	ldrd	r3, r2, [sp, #56]	; 0x38
   20fe4:	cmp	r1, fp
   20fe6:	it	eq
   20fe8:	cmpeq	r0, sl
   20fea:	it	cc
   20fec:	ldrdcc	r3, r2, [sp, #24]
   20ff0:	orrs.w	r1, r8, r9
   20ff4:	bne.w	21102 <btrfs_make_block_groups@@Base+0x1ee>
   20ff8:	ldrd	r0, r1, [sp, #64]	; 0x40
   20ffc:	lsrs	r3, r3, #2
   20ffe:	orr.w	r3, r3, r2, lsl #30
   21002:	negs	r0, r0
   21004:	and.w	r4, r0, r3
   21008:	mov.w	r3, #0
   2100c:	sbc.w	r1, r1, r1, lsl #1
   21010:	and.w	r5, r1, r2, lsr #2
   21014:	mov.w	r2, #33554432	; 0x2000000
   21018:	cmp	r5, #0
   2101a:	it	eq
   2101c:	cmpeq.w	r4, #8388608	; 0x800000
   21020:	itt	cc
   21022:	movcc.w	r4, #8388608	; 0x800000
   21026:	movcc	r5, #0
   21028:	cmp	r3, r5
   2102a:	it	eq
   2102c:	cmpeq	r2, r4
   2102e:	itt	cc
   21030:	movcc	r4, r2
   21032:	movcc	r5, r3
   21034:	movs	r2, #2
   21036:	movs	r3, #0
   21038:	strd	r2, r3, [sp, #48]	; 0x30
   2103c:	movs	r1, #120	; 0x78
   2103e:	movs	r0, #1
   21040:	blx	8358 <calloc@plt+0x4>
   21044:	ldr	r1, [pc, #500]	; (2123c <btrfs_make_block_groups@@Base+0x328>)
   21046:	vmov	r2, s17
   2104a:	movw	r3, #2893	; 0xb4d
   2104e:	add	r1, pc
   21050:	str	r1, [sp, #84]	; 0x54
   21052:	mov	sl, r0
   21054:	clz	r0, r0
   21058:	lsrs	r0, r0, #5
   2105a:	str	r0, [sp, #0]
   2105c:	ldr	r0, [pc, #480]	; (21240 <btrfs_make_block_groups@@Base+0x32c>)
   2105e:	add	r0, pc
   21060:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21064:	ldrd	r0, r1, [sp, #48]	; 0x30
   21068:	strd	r8, r9, [sl, #40]	; 0x28
   2106c:	movs	r2, #0
   2106e:	str.w	r4, [sl, #49]	; 0x31
   21072:	movs	r3, #192	; 0xc0
   21074:	strd	r0, r1, [sl, #96]	; 0x60
   21078:	add.w	r0, sl, #60	; 0x3c
   2107c:	strb.w	r3, [sl, #48]	; 0x30
   21080:	movs	r3, #0
   21082:	str.w	r5, [sl, #53]	; 0x35
   21086:	strd	r2, r3, [sl, #72]	; 0x48
   2108a:	str	r0, [sp, #16]
   2108c:	mov	r0, r7
   2108e:	strd	r2, r3, [sp, #8]
   21092:	strd	r4, r5, [sp]
   21096:	ldrd	r2, r3, [sp, #48]	; 0x30
   2109a:	bl	20ab4 <update_space_info@@Base>
   2109e:	ldr	r1, [sp, #84]	; 0x54
   210a0:	vmov	r2, s17
   210a4:	movw	r3, #2903	; 0xb57
   210a8:	str	r0, [sp, #0]
   210aa:	ldr	r0, [pc, #408]	; (21244 <btrfs_make_block_groups@@Base+0x330>)
   210ac:	add	r0, pc
   210ae:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   210b2:	ldrd	r2, r3, [sp, #48]	; 0x30
   210b6:	mov	r0, r7
   210b8:	bl	1e578 <btrfs_create_tree@@Base+0x1fc>
   210bc:	adds.w	r3, r8, r4
   210c0:	adc.w	r1, r9, r5
   210c4:	vmov	r0, s16
   210c8:	mov	fp, r3
   210ca:	adds.w	r2, fp, #4294967295	; 0xffffffff
   210ce:	mov.w	r3, #24
   210d2:	str	r3, [sp, #8]
   210d4:	adc.w	r3, r1, #4294967295	; 0xffffffff
   210d8:	strd	r2, r3, [sp]
   210dc:	mov	r2, r8
   210de:	mov	r3, r9
   210e0:	str	r1, [sp, #48]	; 0x30
   210e2:	bl	168bc <set_extent_bits@@Base>
   210e6:	movs	r3, #0
   210e8:	mov	r2, r8
   210ea:	str	r3, [sp, #4]
   210ec:	mov	r3, r9
   210ee:	vmov	r0, s16
   210f2:	mov	r8, fp
   210f4:	str.w	sl, [sp]
   210f8:	bl	16bca <set_state_private@@Base>
   210fc:	ldr	r1, [sp, #48]	; 0x30
   210fe:	mov	r9, r1
   21100:	b.n	20f84 <btrfs_make_block_groups@@Base+0x70>
   21102:	ldrd	r0, r1, [sp, #64]	; 0x40
   21106:	negs	r0, r0
   21108:	and.w	r3, r3, r0
   2110c:	sbc.w	r1, r1, r1, lsl #1
   21110:	ands	r2, r1
   21112:	adds	r1, r6, r6
   21114:	str	r1, [sp, #72]	; 0x48
   21116:	ldr	r1, [sp, #80]	; 0x50
   21118:	adcs	r1, r1
   2111a:	str	r1, [sp, #76]	; 0x4c
   2111c:	ldrd	r4, r5, [sp, #72]	; 0x48
   21120:	ldrd	r0, r1, [sp, #32]
   21124:	cmp	r1, r5
   21126:	mov	r5, r2
   21128:	it	eq
   2112a:	cmpeq	r0, r4
   2112c:	mov.w	r2, #1073741824	; 0x40000000
   21130:	mov	r4, r3
   21132:	bcc.n	2117c <btrfs_make_block_groups@@Base+0x268>
   21134:	movs	r3, #0
   21136:	cmp	r3, r5
   21138:	it	eq
   2113a:	cmpeq	r2, r4
   2113c:	it	cc
   2113e:	movcc	r5, r3
   21140:	ldr	r3, [sp, #80]	; 0x50
   21142:	it	cc
   21144:	movcc	r4, r2
   21146:	movs	r2, #4
   21148:	adds	r6, r6, r4
   2114a:	adc.w	r3, r5, r3
   2114e:	str	r3, [sp, #80]	; 0x50
   21150:	ldr	r1, [sp, #28]
   21152:	movs	r3, #0
   21154:	strd	r2, r3, [sp, #48]	; 0x30
   21158:	mov.w	ip, #5
   2115c:	lsls	r3, r1, #2
   2115e:	ldr	r1, [sp, #24]
   21160:	orr.w	r3, r3, r1, lsr #30
   21164:	lsls	r2, r1, #2
   21166:	umull	r0, r1, r4, ip
   2116a:	mla	r1, ip, r5, r1
   2116e:	cmp	r3, r1
   21170:	it	eq
   21172:	cmpeq	r2, r0
   21174:	it	cc
   21176:	ldrdcc	r4, r5, [sp, #24]
   2117a:	b.n	2103c <btrfs_make_block_groups@@Base+0x128>
   2117c:	movs	r3, #1
   2117e:	cmp	r3, r5
   21180:	it	eq
   21182:	cmpeq	r2, r4
   21184:	it	cc
   21186:	movcc	r5, r3
   21188:	ldr	r3, [sp, #32]
   2118a:	it	cc
   2118c:	movcc	r4, r2
   2118e:	movs	r2, #1
   21190:	adds	r3, r3, r4
   21192:	str	r3, [sp, #32]
   21194:	ldr	r3, [sp, #36]	; 0x24
   21196:	adc.w	r3, r5, r3
   2119a:	str	r3, [sp, #36]	; 0x24
   2119c:	b.n	21150 <btrfs_make_block_groups@@Base+0x23c>
   2119e:	mov	r2, r4
   211a0:	mov	r3, r5
   211a2:	mov	r0, r7
   211a4:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   211a8:	movw	r3, #2919	; 0xb67
   211ac:	mov	r2, r8
   211ae:	mov	r1, r9
   211b0:	mov	r6, r0
   211b2:	clz	r0, r0
   211b6:	lsrs	r0, r0, #5
   211b8:	str	r0, [sp, #0]
   211ba:	ldr	r0, [pc, #140]	; (21248 <btrfs_make_block_groups@@Base+0x334>)
   211bc:	add	r0, pc
   211be:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   211c2:	ldr	r3, [r6, #72]	; 0x48
   211c4:	vmov	r1, s18
   211c8:	mov.w	r2, #256	; 0x100
   211cc:	vmov	r0, s19
   211d0:	str	r3, [sp, #92]	; 0x5c
   211d2:	ldr	r3, [r6, #76]	; 0x4c
   211d4:	str	r3, [sp, #96]	; 0x60
   211d6:	ldr	r3, [r6, #96]	; 0x60
   211d8:	str	r3, [sp, #108]	; 0x6c
   211da:	ldr	r3, [r6, #100]	; 0x64
   211dc:	str	r3, [sp, #112]	; 0x70
   211de:	movs	r3, #0
   211e0:	strd	r2, r3, [sp, #100]	; 0x64
   211e4:	add.w	r2, r6, #40	; 0x28
   211e8:	movs	r3, #24
   211ea:	str	r3, [sp, #0]
   211ec:	add	r3, sp, #92	; 0x5c
   211ee:	bl	1b2c8 <btrfs_insert_item@@Base>
   211f2:	movw	r3, #2927	; 0xb6f
   211f6:	mov	r2, r8
   211f8:	mov	r1, r9
   211fa:	str	r0, [sp, #0]
   211fc:	ldr	r0, [pc, #76]	; (2124c <btrfs_make_block_groups@@Base+0x338>)
   211fe:	add	r0, pc
   21200:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21204:	ldrd	r1, r0, [r6, #40]	; 0x28
   21208:	ldr.w	r3, [r6, #49]	; 0x31
   2120c:	ldr.w	r2, [r6, #53]	; 0x35
   21210:	adds	r4, r3, r1
   21212:	adc.w	r5, r2, r0
   21216:	b.n	20fa4 <btrfs_make_block_groups@@Base+0x90>
   21218:	movs	r0, #0
   2121a:	add	sp, #124	; 0x7c
   2121c:	vpop	{d8-d9}
   21220:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21224:	subs	r6, #96	; 0x60
   21226:	movs	r4, r0
   21228:	lsls	r4, r4, #8
   2122a:	movs	r0, r0
   2122c:	bcs.n	212c4 <btrfs_free_block_group@@Base+0x6c>
   2122e:	movs	r1, r0
   21230:	bcs.n	21274 <btrfs_free_block_group@@Base+0x1c>
   21232:	movs	r1, r0
   21234:	ldmia	r2!, {r0, r3, r5, r6, r7}
   21236:	movs	r1, r0
   21238:	subs	r5, #210	; 0xd2
   2123a:	movs	r4, r0
   2123c:	ldmia	r2, {r0, r2, r3, r4, r5}
   2123e:	movs	r1, r0
   21240:	ldmia	r6!, {r0, r1, r2, r3, r4, r5, r7}
   21242:	movs	r1, r0
   21244:	str	r6, [sp, #540]	; 0x21c
   21246:	movs	r1, r0
   21248:	ldmia	r5, {r0, r5, r6}
   2124a:	movs	r1, r0
   2124c:	str	r5, [sp, #212]	; 0xd4
   2124e:	movs	r1, r0

00021250 <btrfs_update_block_group@@Base>:
   21250:	ldr.w	r0, [r0, #464]	; 0x1d0
   21254:	b.w	1f03c <btrfs_lookup_block_group@@Base+0x188>

00021258 <btrfs_free_block_group@@Base>:
   21258:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2125c:	mov	fp, r3
   2125e:	vpush	{d8}
   21262:	mov	sl, r2
   21264:	ldr.w	r3, [pc, #1568]	; 21888 <btrfs_free_block_group@@Base+0x630>
   21268:	mov	r9, r1
   2126a:	ldr.w	r2, [pc, #1568]	; 2188c <btrfs_free_block_group@@Base+0x634>
   2126e:	mov	r8, r0
   21270:	add	r3, pc
   21272:	sub	sp, #164	; 0xa4
   21274:	add	r2, pc
   21276:	ldr	r1, [r1, #24]
   21278:	str	r3, [sp, #36]	; 0x24
   2127a:	ldr.w	r3, [pc, #1556]	; 21890 <btrfs_free_block_group@@Base+0x638>
   2127e:	ldr	r3, [r2, r3]
   21280:	ldr	r3, [r3, #0]
   21282:	str	r3, [sp, #156]	; 0x9c
   21284:	mov.w	r3, #0
   21288:	str	r1, [sp, #24]
   2128a:	bl	17e50 <btrfs_alloc_path@@Base>
   2128e:	str	r0, [sp, #28]
   21290:	cmp	r0, #0
   21292:	beq.w	21874 <btrfs_free_block_group@@Base+0x61c>
   21296:	ldr	r3, [sp, #208]	; 0xd0
   21298:	add	r2, sp, #96	; 0x60
   2129a:	ldr	r1, [sp, #24]
   2129c:	movs	r4, #192	; 0xc0
   2129e:	strd	sl, fp, [sp, #96]	; 0x60
   212a2:	str.w	r3, [sp, #105]	; 0x69
   212a6:	ldr	r3, [sp, #212]	; 0xd4
   212a8:	strb.w	r4, [sp, #104]	; 0x68
   212ac:	str.w	r3, [sp, #109]	; 0x6d
   212b0:	movs	r3, #0
   212b2:	strd	r3, r3, [sp]
   212b6:	mov	r3, r0
   212b8:	mov	r0, r8
   212ba:	bl	1a23c <btrfs_search_slot@@Base>
   212be:	subs	r3, r0, #0
   212c0:	str	r3, [sp, #24]
   212c2:	bgt.w	2186e <btrfs_free_block_group@@Base+0x616>
   212c6:	bne.n	2139a <btrfs_free_block_group@@Base+0x142>
   212c8:	ldr	r3, [sp, #28]
   212ca:	movs	r1, #25
   212cc:	ldr	r2, [sp, #28]
   212ce:	ldr	r3, [r3, #0]
   212d0:	ldr	r2, [r2, #32]
   212d2:	adds	r3, #96	; 0x60
   212d4:	mla	r2, r1, r2, r3
   212d8:	ldr.w	r2, [r2, #118]	; 0x76
   212dc:	add	r3, r2
   212de:	ldr.w	r0, [r3, #101]!
   212e2:	ldr	r1, [r3, #4]
   212e4:	orrs.w	r3, r0, r1
   212e8:	beq.n	2131c <btrfs_free_block_group@@Base+0xc4>
   212ea:	ldr	r2, [sp, #36]	; 0x24
   212ec:	ldr.w	r3, [pc, #1444]	; 21894 <btrfs_free_block_group@@Base+0x63c>
   212f0:	ldr	r3, [r2, r3]
   212f2:	ldr	r2, [sp, #208]	; 0xd0
   212f4:	strd	sl, fp, [sp]
   212f8:	adds.w	r1, sl, r2
   212fc:	ldr	r2, [sp, #212]	; 0xd4
   212fe:	adc.w	r2, fp, r2
   21302:	strd	r1, r2, [sp, #8]
   21306:	ldr.w	r2, [pc, #1424]	; 21898 <btrfs_free_block_group@@Base+0x640>
   2130a:	movs	r1, #1
   2130c:	ldr	r0, [r3, #0]
   2130e:	add	r2, pc
   21310:	blx	881c <__fprintf_chk@plt+0x4>
   21314:	mvn.w	r3, #21
   21318:	str	r3, [sp, #24]
   2131a:	b.n	2139a <btrfs_free_block_group@@Base+0x142>
   2131c:	ldr	r0, [sp, #28]
   2131e:	bl	17e58 <btrfs_release_path@@Base>
   21322:	ldrd	r2, r3, [sp, #208]	; 0xd0
   21326:	mov	r0, r9
   21328:	strd	r2, r3, [sp]
   2132c:	mov	r2, sl
   2132e:	mov	r3, fp
   21330:	bl	20c34 <btrfs_pin_extent@@Base>
   21334:	ldr	r3, [sp, #208]	; 0xd0
   21336:	ldr.w	r1, [r9, #24]
   2133a:	strd	sl, fp, [sp, #136]	; 0x88
   2133e:	str.w	r3, [sp, #145]	; 0x91
   21342:	ldr	r3, [sp, #212]	; 0xd4
   21344:	str	r1, [sp, #32]
   21346:	strb.w	r4, [sp, #144]	; 0x90
   2134a:	str.w	r3, [sp, #149]	; 0x95
   2134e:	bl	17e50 <btrfs_alloc_path@@Base>
   21352:	ldr	r1, [sp, #32]
   21354:	mov	r5, r0
   21356:	cbnz	r0, 213ba <btrfs_free_block_group@@Base+0x162>
   21358:	mvn.w	r4, #11
   2135c:	ldr	r2, [sp, #36]	; 0x24
   2135e:	ldr.w	r3, [pc, #1332]	; 21894 <btrfs_free_block_group@@Base+0x63c>
   21362:	ldr	r3, [r2, r3]
   21364:	ldr	r2, [sp, #208]	; 0xd0
   21366:	strd	sl, fp, [sp]
   2136a:	adds.w	r1, sl, r2
   2136e:	ldr	r2, [sp, #212]	; 0xd4
   21370:	adc.w	r2, fp, r2
   21374:	strd	r1, r2, [sp, #8]
   21378:	ldr.w	r2, [pc, #1312]	; 2189c <btrfs_free_block_group@@Base+0x644>
   2137c:	add	r2, pc
   2137e:	ldr	r0, [r3, #0]
   21380:	movs	r1, #1
   21382:	blx	881c <__fprintf_chk@plt+0x4>
   21386:	ldrd	r2, r3, [sp, #208]	; 0xd0
   2138a:	mov	r0, r9
   2138c:	strd	r2, r3, [sp]
   21390:	mov	r2, sl
   21392:	mov	r3, fp
   21394:	bl	20da8 <btrfs_unpin_extent@@Base>
   21398:	str	r4, [sp, #24]
   2139a:	ldr	r0, [sp, #28]
   2139c:	bl	17e7e <btrfs_free_path@@Base>
   213a0:	ldr.w	r2, [pc, #1276]	; 218a0 <btrfs_free_block_group@@Base+0x648>
   213a4:	ldr.w	r3, [pc, #1256]	; 21890 <btrfs_free_block_group@@Base+0x638>
   213a8:	add	r2, pc
   213aa:	ldr	r3, [r2, r3]
   213ac:	ldr	r2, [r3, #0]
   213ae:	ldr	r3, [sp, #156]	; 0x9c
   213b0:	eors	r2, r3
   213b2:	beq.w	2187c <btrfs_free_block_group@@Base+0x624>
   213b6:	blx	84cc <__stack_chk_fail@plt>
   213ba:	mov.w	r3, #4294967295	; 0xffffffff
   213be:	add	r2, sp, #136	; 0x88
   213c0:	movs	r6, #1
   213c2:	strd	r3, r6, [sp]
   213c6:	mov	r3, r0
   213c8:	mov	r0, r8
   213ca:	str	r1, [sp, #32]
   213cc:	bl	1a23c <btrfs_search_slot@@Base>
   213d0:	subs	r4, r0, #0
   213d2:	bgt.n	21424 <btrfs_free_block_group@@Base+0x1cc>
   213d4:	bne.n	213e2 <btrfs_free_block_group@@Base+0x18a>
   213d6:	ldr	r1, [sp, #32]
   213d8:	mov	r2, r5
   213da:	mov	r0, r8
   213dc:	bl	1e688 <btrfs_create_tree@@Base+0x30c>
   213e0:	mov	r4, r0
   213e2:	mov	r0, r5
   213e4:	bl	17e7e <btrfs_free_path@@Base>
   213e8:	cmp	r4, #0
   213ea:	blt.n	2135c <btrfs_free_block_group@@Base+0x104>
   213ec:	ldr.w	r1, [r9, #32]
   213f0:	str	r1, [sp, #32]
   213f2:	bl	17e50 <btrfs_alloc_path@@Base>
   213f6:	ldr	r1, [sp, #32]
   213f8:	mov	r5, r0
   213fa:	cbnz	r0, 2142a <btrfs_free_block_group@@Base+0x1d2>
   213fc:	mvn.w	r4, #11
   21400:	ldr	r2, [sp, #36]	; 0x24
   21402:	ldr.w	r3, [pc, #1168]	; 21894 <btrfs_free_block_group@@Base+0x63c>
   21406:	ldr	r3, [r2, r3]
   21408:	ldr	r2, [sp, #208]	; 0xd0
   2140a:	strd	sl, fp, [sp]
   2140e:	adds.w	r1, sl, r2
   21412:	ldr	r2, [sp, #212]	; 0xd4
   21414:	adc.w	r2, fp, r2
   21418:	strd	r1, r2, [sp, #8]
   2141c:	ldr.w	r2, [pc, #1156]	; 218a4 <btrfs_free_block_group@@Base+0x64c>
   21420:	add	r2, pc
   21422:	b.n	2137e <btrfs_free_block_group@@Base+0x126>
   21424:	mvn.w	r4, #1
   21428:	b.n	213e2 <btrfs_free_block_group@@Base+0x18a>
   2142a:	movs	r3, #0
   2142c:	mov.w	r4, #256	; 0x100
   21430:	movs	r2, #228	; 0xe4
   21432:	strd	r4, r3, [sp, #116]	; 0x74
   21436:	strb.w	r2, [sp, #124]	; 0x7c
   2143a:	add	r2, sp, #116	; 0x74
   2143c:	strd	r3, r3, [sp]
   21440:	mov	r3, r0
   21442:	mov	r0, r8
   21444:	str.w	sl, [sp, #125]	; 0x7d
   21448:	str.w	fp, [sp, #129]	; 0x81
   2144c:	bl	1a23c <btrfs_search_slot@@Base>
   21450:	subs	r4, r0, #0
   21452:	blt.n	214ae <btrfs_free_block_group@@Base+0x256>
   21454:	bne.w	21560 <btrfs_free_block_group@@Base+0x308>
   21458:	ldr	r3, [r5, #0]
   2145a:	movs	r1, #25
   2145c:	ldr	r2, [r5, #32]
   2145e:	adds	r3, #96	; 0x60
   21460:	str	r4, [sp, #32]
   21462:	mla	r2, r1, r2, r3
   21466:	ldr.w	r6, [r2, #118]	; 0x76
   2146a:	add	r3, r6
   2146c:	adds	r6, #149	; 0x95
   2146e:	ldrh.w	r3, [r3, #145]	; 0x91
   21472:	str	r3, [sp, #40]	; 0x28
   21474:	add	r3, sp, #136	; 0x88
   21476:	vmov	s16, r3
   2147a:	ldr	r3, [sp, #32]
   2147c:	ldr	r2, [sp, #40]	; 0x28
   2147e:	cmp	r3, r2
   21480:	bge.n	214ae <btrfs_free_block_group@@Base+0x256>
   21482:	ldr	r3, [r5, #0]
   21484:	adds	r3, #96	; 0x60
   21486:	adds	r1, r3, r6
   21488:	ldr	r2, [r3, r6]
   2148a:	ldr	r3, [r1, #4]
   2148c:	ldr	r4, [r1, #12]
   2148e:	str	r2, [sp, #56]	; 0x38
   21490:	str	r3, [sp, #44]	; 0x2c
   21492:	ldr	r3, [r1, #8]
   21494:	ldr.w	r1, [r9, #36]	; 0x24
   21498:	str	r3, [sp, #52]	; 0x34
   2149a:	str	r1, [sp, #48]	; 0x30
   2149c:	bl	17e50 <btrfs_alloc_path@@Base>
   214a0:	ldrd	r1, r3, [sp, #48]	; 0x30
   214a4:	ldr	r2, [sp, #56]	; 0x38
   214a6:	mov	r7, r0
   214a8:	cbnz	r0, 21506 <btrfs_free_block_group@@Base+0x2ae>
   214aa:	mvn.w	r4, #11
   214ae:	mov	r0, r5
   214b0:	bl	17e7e <btrfs_free_path@@Base>
   214b4:	cmp	r4, #0
   214b6:	blt.n	21400 <btrfs_free_block_group@@Base+0x1a8>
   214b8:	ldr.w	r1, [r9, #32]
   214bc:	mov.w	r2, #256	; 0x100
   214c0:	movs	r3, #0
   214c2:	str.w	sl, [sp, #145]	; 0x91
   214c6:	strd	r2, r3, [sp, #136]	; 0x88
   214ca:	movs	r3, #228	; 0xe4
   214cc:	str	r1, [sp, #32]
   214ce:	str.w	fp, [sp, #149]	; 0x95
   214d2:	strb.w	r3, [sp, #144]	; 0x90
   214d6:	bl	17e50 <btrfs_alloc_path@@Base>
   214da:	ldr	r1, [sp, #32]
   214dc:	mov	r6, r0
   214de:	cmp	r0, #0
   214e0:	bne.n	21566 <btrfs_free_block_group@@Base+0x30e>
   214e2:	mvn.w	r4, #11
   214e6:	ldr	r2, [sp, #36]	; 0x24
   214e8:	ldr	r3, [pc, #936]	; (21894 <btrfs_free_block_group@@Base+0x63c>)
   214ea:	ldr	r3, [r2, r3]
   214ec:	ldr	r2, [sp, #208]	; 0xd0
   214ee:	strd	sl, fp, [sp]
   214f2:	adds.w	r1, sl, r2
   214f6:	ldr	r2, [sp, #212]	; 0xd4
   214f8:	adc.w	r2, fp, r2
   214fc:	strd	r1, r2, [sp, #8]
   21500:	ldr	r2, [pc, #932]	; (218a8 <btrfs_free_block_group@@Base+0x650>)
   21502:	add	r2, pc
   21504:	b.n	2137e <btrfs_free_block_group@@Base+0x126>
   21506:	str	r2, [sp, #136]	; 0x88
   21508:	movs	r0, #1
   2150a:	ldr	r2, [sp, #44]	; 0x2c
   2150c:	str.w	r3, [sp, #145]	; 0x91
   21510:	mov.w	r3, #4294967295	; 0xffffffff
   21514:	strd	r3, r0, [sp]
   21518:	mov	r3, r7
   2151a:	str	r2, [sp, #140]	; 0x8c
   2151c:	mov	r0, r8
   2151e:	mvn.w	r2, #51	; 0x33
   21522:	strb.w	r2, [sp, #144]	; 0x90
   21526:	vmov	r2, s16
   2152a:	str.w	r4, [sp, #149]	; 0x95
   2152e:	str	r1, [sp, #44]	; 0x2c
   21530:	bl	1a23c <btrfs_search_slot@@Base>
   21534:	subs	r4, r0, #0
   21536:	blt.n	21546 <btrfs_free_block_group@@Base+0x2ee>
   21538:	bne.n	2155a <btrfs_free_block_group@@Base+0x302>
   2153a:	ldr	r1, [sp, #44]	; 0x2c
   2153c:	mov	r2, r7
   2153e:	mov	r0, r8
   21540:	bl	1e688 <btrfs_create_tree@@Base+0x30c>
   21544:	mov	r4, r0
   21546:	mov	r0, r7
   21548:	adds	r6, #32
   2154a:	bl	17e7e <btrfs_free_path@@Base>
   2154e:	cmp	r4, #0
   21550:	blt.n	214ae <btrfs_free_block_group@@Base+0x256>
   21552:	ldr	r3, [sp, #32]
   21554:	adds	r3, #1
   21556:	str	r3, [sp, #32]
   21558:	b.n	2147a <btrfs_free_block_group@@Base+0x222>
   2155a:	mvn.w	r4, #1
   2155e:	b.n	21546 <btrfs_free_block_group@@Base+0x2ee>
   21560:	mvn.w	r4, #1
   21564:	b.n	214ae <btrfs_free_block_group@@Base+0x256>
   21566:	mov.w	r3, #4294967295	; 0xffffffff
   2156a:	movs	r2, #1
   2156c:	strd	r3, r2, [sp]
   21570:	mov	r3, r0
   21572:	add	r2, sp, #136	; 0x88
   21574:	mov	r0, r8
   21576:	str	r1, [sp, #40]	; 0x28
   21578:	bl	1a23c <btrfs_search_slot@@Base>
   2157c:	subs	r3, r0, #0
   2157e:	str	r3, [sp, #32]
   21580:	bgt.w	21696 <btrfs_free_block_group@@Base+0x43e>
   21584:	bne.n	21686 <btrfs_free_block_group@@Base+0x42e>
   21586:	ldr	r3, [r6, #0]
   21588:	movs	r0, #25
   2158a:	ldr	r2, [r6, #32]
   2158c:	adds	r3, #96	; 0x60
   2158e:	ldr	r1, [sp, #40]	; 0x28
   21590:	mla	r2, r0, r2, r3
   21594:	mov	r0, r8
   21596:	ldr.w	r2, [r2, #118]	; 0x76
   2159a:	add	r3, r2
   2159c:	mov	r2, r6
   2159e:	ldr.w	r5, [r3, #125]	; 0x7d
   215a2:	bl	1e688 <btrfs_create_tree@@Base+0x30c>
   215a6:	subs	r4, r0, #0
   215a8:	blt.n	2169a <btrfs_free_block_group@@Base+0x442>
   215aa:	ldr	r3, [sp, #32]
   215ac:	and.w	r2, r5, #2
   215b0:	orrs	r3, r2
   215b2:	beq.n	2169a <btrfs_free_block_group@@Base+0x442>
   215b4:	ldr.w	r3, [r9, #308]	; 0x134
   215b8:	ldr	r5, [sp, #32]
   215ba:	str	r3, [sp, #40]	; 0x28
   215bc:	ldr.w	r3, [r3, #160]	; 0xa0
   215c0:	str	r3, [sp, #44]	; 0x2c
   215c2:	ldr	r3, [sp, #40]	; 0x28
   215c4:	addw	r3, r3, #811	; 0x32b
   215c8:	str	r3, [sp, #48]	; 0x30
   215ca:	ldrd	r3, r4, [sp, #136]	; 0x88
   215ce:	strd	r3, r4, [sp, #80]	; 0x50
   215d2:	ldr.w	r3, [sp, #145]	; 0x91
   215d6:	str	r3, [sp, #56]	; 0x38
   215d8:	ldr.w	r3, [sp, #149]	; 0x95
   215dc:	str	r3, [sp, #60]	; 0x3c
   215de:	ldrb.w	r3, [sp, #144]	; 0x90
   215e2:	str	r3, [sp, #88]	; 0x58
   215e4:	ldr	r3, [pc, #708]	; (218ac <btrfs_free_block_group@@Base+0x654>)
   215e6:	add	r3, pc
   215e8:	addw	r2, r3, #485	; 0x1e5
   215ec:	ldr	r3, [pc, #704]	; (218b0 <btrfs_free_block_group@@Base+0x658>)
   215ee:	add	r3, pc
   215f0:	vmov	s16, r3
   215f4:	ldr	r3, [sp, #44]	; 0x2c
   215f6:	cmp	r3, r5
   215f8:	bhi.n	21602 <btrfs_free_block_group@@Base+0x3aa>
   215fa:	mvn.w	r3, #1
   215fe:	str	r3, [sp, #32]
   21600:	b.n	21686 <btrfs_free_block_group@@Base+0x42e>
   21602:	ldr	r3, [sp, #48]	; 0x30
   21604:	adds	r7, r3, r5
   21606:	ldr	r3, [r3, r5]
   21608:	str	r3, [sp, #64]	; 0x40
   2160a:	ldr	r3, [r7, #4]
   2160c:	str	r3, [sp, #68]	; 0x44
   2160e:	ldrb	r3, [r7, #8]
   21610:	cmp	r3, #228	; 0xe4
   21612:	bne.n	21690 <btrfs_free_block_group@@Base+0x438>
   21614:	ldrh.w	r4, [r7, #61]	; 0x3d
   21618:	ldr	r0, [pc, #664]	; (218b4 <btrfs_free_block_group@@Base+0x65c>)
   2161a:	clz	r3, r4
   2161e:	vmov	r1, s16
   21622:	add	r0, pc
   21624:	lsls	r4, r4, #5
   21626:	lsrs	r3, r3, #5
   21628:	str	r3, [sp, #0]
   2162a:	mov.w	r3, #322	; 0x142
   2162e:	str	r2, [sp, #92]	; 0x5c
   21630:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21634:	ldrd	r0, r1, [sp, #64]	; 0x40
   21638:	add.w	r3, r4, #65	; 0x41
   2163c:	str	r3, [sp, #52]	; 0x34
   2163e:	ldrd	r2, r3, [sp, #80]	; 0x50
   21642:	cmp	r3, r1
   21644:	it	eq
   21646:	cmpeq	r2, r0
   21648:	ldr	r2, [sp, #92]	; 0x5c
   2164a:	bne.n	2168a <btrfs_free_block_group@@Base+0x432>
   2164c:	ldrd	r3, r4, [sp, #56]	; 0x38
   21650:	ldr.w	r1, [r7, #13]
   21654:	ldr.w	r0, [r7, #9]
   21658:	cmp	r4, r1
   2165a:	it	eq
   2165c:	cmpeq	r3, r0
   2165e:	bne.n	2168a <btrfs_free_block_group@@Base+0x432>
   21660:	ldr	r3, [sp, #88]	; 0x58
   21662:	cmp	r3, #228	; 0xe4
   21664:	bne.n	2168a <btrfs_free_block_group@@Base+0x432>
   21666:	ldr	r3, [sp, #52]	; 0x34
   21668:	mov	r0, r7
   2166a:	adds	r1, r5, r3
   2166c:	ldr	r3, [sp, #44]	; 0x2c
   2166e:	subs	r2, r3, r1
   21670:	ldr	r3, [sp, #48]	; 0x30
   21672:	add	r3, r1
   21674:	mov	r1, r3
   21676:	blx	83e0 <memmove@plt+0x4>
   2167a:	ldr	r3, [sp, #44]	; 0x2c
   2167c:	ldr	r2, [sp, #52]	; 0x34
   2167e:	subs	r4, r3, r2
   21680:	ldr	r3, [sp, #40]	; 0x28
   21682:	str.w	r4, [r3, #160]	; 0xa0
   21686:	ldr	r4, [sp, #32]
   21688:	b.n	2169a <btrfs_free_block_group@@Base+0x442>
   2168a:	ldr	r3, [sp, #52]	; 0x34
   2168c:	add	r5, r3
   2168e:	b.n	215f4 <btrfs_free_block_group@@Base+0x39c>
   21690:	mvn.w	r3, #4
   21694:	b.n	215fe <btrfs_free_block_group@@Base+0x3a6>
   21696:	mvn.w	r4, #1
   2169a:	mov	r0, r6
   2169c:	bl	17e7e <btrfs_free_path@@Base>
   216a0:	cmp	r4, #0
   216a2:	blt.w	214e6 <btrfs_free_block_group@@Base+0x28e>
   216a6:	mov	r2, sl
   216a8:	mov	r3, fp
   216aa:	mov	r0, r9
   216ac:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   216b0:	mov	r6, r0
   216b2:	cbnz	r0, 216ce <btrfs_free_block_group@@Base+0x476>
   216b4:	mvn.w	r3, #1
   216b8:	str	r3, [sp, #24]
   216ba:	ldrd	r3, r4, [sp, #208]	; 0xd0
   216be:	mov	r2, sl
   216c0:	mov	r0, r9
   216c2:	strd	r3, r4, [sp]
   216c6:	mov	r3, fp
   216c8:	bl	20da8 <btrfs_unpin_extent@@Base>
   216cc:	b.n	2139a <btrfs_free_block_group@@Base+0x142>
   216ce:	ldr	r3, [r0, #64]	; 0x40
   216d0:	ldrd	r4, r5, [r0, #96]	; 0x60
   216d4:	cbz	r3, 216e0 <btrfs_free_block_group@@Base+0x488>
   216d6:	bl	26c14 <btrfs_remove_free_space_cache@@Base>
   216da:	ldr	r0, [r6, #64]	; 0x40
   216dc:	blx	83f0 <free@plt+0x4>
   216e0:	mov.w	r3, #4294967295	; 0xffffffff
   216e4:	str	r3, [sp, #8]
   216e6:	ldr	r3, [sp, #208]	; 0xd0
   216e8:	add.w	r0, r9, #128	; 0x80
   216ec:	ldr	r2, [sp, #212]	; 0xd4
   216ee:	adds.w	r3, r3, #4294967295	; 0xffffffff
   216f2:	adc.w	r2, r2, #4294967295	; 0xffffffff
   216f6:	adds.w	r3, r3, sl
   216fa:	adc.w	r2, r2, fp
   216fe:	strd	r3, r2, [sp]
   21702:	mov	r2, sl
   21704:	mov	r3, fp
   21706:	bl	16746 <clear_extent_bits@@Base>
   2170a:	mov	r2, r4
   2170c:	mov	r3, r5
   2170e:	mov	r0, r9
   21710:	bl	1e544 <btrfs_create_tree@@Base+0x1c8>
   21714:	cmp	r0, #0
   21716:	beq.n	216b4 <btrfs_free_block_group@@Base+0x45c>
   21718:	ldrd	r4, r5, [r0, #8]
   2171c:	ldrd	r2, r3, [sp, #208]	; 0xd0
   21720:	cmp	r5, r3
   21722:	it	eq
   21724:	cmpeq	r4, r2
   21726:	bcs.n	2174c <btrfs_free_block_group@@Base+0x4f4>
   21728:	ldr	r2, [sp, #36]	; 0x24
   2172a:	ldr	r3, [pc, #360]	; (21894 <btrfs_free_block_group@@Base+0x63c>)
   2172c:	ldr	r3, [r2, r3]
   2172e:	ldrd	r1, r2, [sp, #208]	; 0xd0
   21732:	strd	r4, r5, [sp, #8]
   21736:	strd	r1, r2, [sp]
   2173a:	movs	r1, #1
   2173c:	ldr	r2, [pc, #376]	; (218b8 <btrfs_free_block_group@@Base+0x660>)
   2173e:	ldr	r0, [r3, #0]
   21740:	add	r2, pc
   21742:	blx	881c <__fprintf_chk@plt+0x4>
   21746:	mvn.w	r3, #21
   2174a:	b.n	216b8 <btrfs_free_block_group@@Base+0x460>
   2174c:	ldr	r3, [sp, #208]	; 0xd0
   2174e:	subs	r2, r4, r3
   21750:	ldr	r3, [sp, #212]	; 0xd4
   21752:	sbc.w	r3, r5, r3
   21756:	strd	r2, r3, [r0, #8]
   2175a:	mov	r0, r6
   2175c:	add.w	r6, r9, #228	; 0xe4
   21760:	blx	83f0 <free@plt+0x4>
   21764:	mov	r2, sl
   21766:	mov	r3, fp
   21768:	mov	r0, r6
   2176a:	bl	15fdc <search_cache_extent@@Base>
   2176e:	mov	r4, r0
   21770:	cmp	r0, #0
   21772:	beq.n	216b4 <btrfs_free_block_group@@Base+0x45c>
   21774:	ldrd	r2, r3, [r0, #24]
   21778:	cmp	fp, r3
   2177a:	it	eq
   2177c:	cmpeq	sl, r2
   2177e:	bne.n	216b4 <btrfs_free_block_group@@Base+0x45c>
   21780:	ldr	r5, [sp, #24]
   21782:	add.w	r3, r0, #72	; 0x48
   21786:	str	r3, [sp, #32]
   21788:	ldr	r0, [r4, #64]	; 0x40
   2178a:	cmp	r5, r0
   2178c:	blt.n	2179e <btrfs_free_block_group@@Base+0x546>
   2178e:	mov	r0, r6
   21790:	mov	r1, r4
   21792:	bl	160b4 <remove_cache_extent@@Base>
   21796:	mov	r0, r4
   21798:	blx	83f0 <free@plt+0x4>
   2179c:	b.n	216ba <btrfs_free_block_group@@Base+0x462>
   2179e:	ldr	r2, [sp, #32]
   217a0:	lsls	r3, r5, #4
   217a2:	ldr	r7, [r2, r3]
   217a4:	ldr	r3, [r4, #40]	; 0x28
   217a6:	and.w	r2, r3, #2040	; 0x7f8
   217aa:	str	r2, [sp, #16]
   217ac:	movs	r2, #0
   217ae:	str	r2, [sp, #20]
   217b0:	ldrd	r1, r2, [sp, #16]
   217b4:	cmp	r2, #0
   217b6:	it	eq
   217b8:	cmpeq	r1, #128	; 0x80
   217ba:	beq.n	21832 <btrfs_free_block_group@@Base+0x5da>
   217bc:	cmp	r2, #0
   217be:	it	eq
   217c0:	cmpeq	r1, #129	; 0x81
   217c2:	bcs.n	2180a <btrfs_free_block_group@@Base+0x5b2>
   217c4:	cmp	r2, #0
   217c6:	it	eq
   217c8:	cmpeq	r1, #64	; 0x40
   217ca:	beq.n	21866 <btrfs_free_block_group@@Base+0x60e>
   217cc:	cmp	r2, #0
   217ce:	it	eq
   217d0:	cmpeq	r1, #65	; 0x41
   217d2:	bcs.n	217ee <btrfs_free_block_group@@Base+0x596>
   217d4:	cmp	r2, #0
   217d6:	it	eq
   217d8:	cmpeq	r1, #32
   217da:	beq.n	2182e <btrfs_free_block_group@@Base+0x5d6>
   217dc:	and.w	r3, r3, #2024	; 0x7e8
   217e0:	str	r3, [sp, #72]	; 0x48
   217e2:	movs	r3, #0
   217e4:	str	r3, [sp, #76]	; 0x4c
   217e6:	ldrd	r2, r3, [sp, #72]	; 0x48
   217ea:	orrs	r3, r2
   217ec:	beq.n	2182e <btrfs_free_block_group@@Base+0x5d6>
   217ee:	ldr	r2, [pc, #204]	; (218bc <btrfs_free_block_group@@Base+0x664>)
   217f0:	movs	r3, #1
   217f2:	ldr	r1, [pc, #204]	; (218c0 <btrfs_free_block_group@@Base+0x668>)
   217f4:	ldr	r0, [pc, #204]	; (218c4 <btrfs_free_block_group@@Base+0x66c>)
   217f6:	add	r2, pc
   217f8:	str	r3, [sp, #0]
   217fa:	addw	r2, r2, #507	; 0x1fb
   217fe:	add	r1, pc
   21800:	add	r0, pc
   21802:	movw	r3, #3160	; 0xc58
   21806:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   2180a:	ldrd	r2, r3, [sp, #16]
   2180e:	cmp	r3, #0
   21810:	it	eq
   21812:	cmpeq.w	r2, #256	; 0x100
   21816:	beq.n	21862 <btrfs_free_block_group@@Base+0x60a>
   21818:	bcc.n	217ee <btrfs_free_block_group@@Base+0x596>
   2181a:	cmp	r3, #0
   2181c:	it	eq
   2181e:	cmpeq.w	r2, #512	; 0x200
   21822:	beq.n	2182e <btrfs_free_block_group@@Base+0x5d6>
   21824:	cmp	r3, #0
   21826:	it	eq
   21828:	cmpeq.w	r2, #1024	; 0x400
   2182c:	bne.n	217ee <btrfs_free_block_group@@Base+0x596>
   2182e:	movs	r0, #1
   21830:	b.n	21834 <btrfs_free_block_group@@Base+0x5dc>
   21832:	subs	r0, #1
   21834:	asrs	r3, r0, #31
   21836:	mov	r2, r0
   21838:	ldrd	r0, r1, [r4, #32]
   2183c:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   21840:	ldrd	r3, r2, [r7, #80]	; 0x50
   21844:	subs	r0, r3, r0
   21846:	sbc.w	r1, r2, r1
   2184a:	strd	r0, r1, [r7, #80]	; 0x50
   2184e:	mov	r1, r7
   21850:	mov	r0, r8
   21852:	bl	286d8 <btrfs_update_device@@Base>
   21856:	subs	r3, r0, #0
   21858:	str	r3, [sp, #24]
   2185a:	blt.w	216ba <btrfs_free_block_group@@Base+0x462>
   2185e:	adds	r5, #1
   21860:	b.n	21788 <btrfs_free_block_group@@Base+0x530>
   21862:	subs	r0, #2
   21864:	b.n	21834 <btrfs_free_block_group@@Base+0x5dc>
   21866:	ldr	r1, [r4, #68]	; 0x44
   21868:	bl	38f98 <btrfs_util_strerror@@Base+0x290>
   2186c:	b.n	21834 <btrfs_free_block_group@@Base+0x5dc>
   2186e:	mvn.w	r3, #63	; 0x3f
   21872:	b.n	21318 <btrfs_free_block_group@@Base+0xc0>
   21874:	mvn.w	r3, #11
   21878:	str	r3, [sp, #24]
   2187a:	b.n	213a0 <btrfs_free_block_group@@Base+0x148>
   2187c:	ldr	r0, [sp, #24]
   2187e:	add	sp, #164	; 0xa4
   21880:	vpop	{d8}
   21884:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21888:	subs	r3, #24
   2188a:	movs	r4, r0
   2188c:	subs	r3, #20
   2188e:	movs	r4, r0
   21890:	lsls	r4, r4, #8
   21892:	movs	r0, r0
   21894:	lsls	r4, r6, #8
   21896:	movs	r0, r0
   21898:	ldmia	r4, {r1, r2, r4}
   2189a:	movs	r1, r0
   2189c:	ldmia	r3!, {r0, r1, r2, r4, r6, r7}
   2189e:	movs	r1, r0
   218a0:	subs	r1, #224	; 0xe0
   218a2:	movs	r4, r0
   218a4:	ldmia	r3!, {r2, r5, r6}
   218a6:	movs	r1, r0
   218a8:	ldmia	r2!, {r0, r6, r7}
   218aa:	movs	r1, r0
   218ac:	ldmia	r3!, {r1, r2, r4, r6, r7}
   218ae:	movs	r1, r0
   218b0:	str	r2, [sp, #980]	; 0x3d4
   218b2:	movs	r1, r0
   218b4:	ldmia	r1!, {r4, r7}
   218b6:	movs	r1, r0
   218b8:	ldmia	r0, {r0, r3, r5, r7}
   218ba:	movs	r1, r0
   218bc:	ldmia	r1, {r1, r2, r6, r7}
   218be:	movs	r1, r0
   218c0:	stmia	r2!, {r0, r2, r3, r7}
   218c2:	movs	r1, r0
   218c4:	stmia	r5!, {r0, r1, r3, r5, r6, r7}
   218c6:	movs	r1, r0

000218c8 <free_excluded_extents@@Base>:
   218c8:	push	{r4, r5, lr}
   218ca:	sub	sp, #20
   218cc:	ldrd	r2, r3, [r1, #40]	; 0x28
   218d0:	movs	r4, #4
   218d2:	str	r4, [sp, #8]
   218d4:	adds	r0, #160	; 0xa0
   218d6:	ldr.w	r4, [r1, #49]	; 0x31
   218da:	ldr.w	r5, [r1, #53]	; 0x35
   218de:	adds	r4, r4, r2
   218e0:	adc.w	r5, r3, r5
   218e4:	adds.w	r4, r4, #4294967295	; 0xffffffff
   218e8:	adc.w	r5, r5, #4294967295	; 0xffffffff
   218ec:	strd	r4, r5, [sp]
   218f0:	bl	16746 <clear_extent_bits@@Base>
   218f4:	add	sp, #20
   218f6:	pop	{r4, r5, pc}

000218f8 <exclude_super_stripes@@Base>:
   218f8:	ldr	r2, [pc, #392]	; (21a84 <exclude_super_stripes@@Base+0x18c>)
   218fa:	ldr	r3, [pc, #396]	; (21a88 <exclude_super_stripes@@Base+0x190>)
   218fc:	add	r2, pc
   218fe:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21902:	sub	sp, #68	; 0x44
   21904:	ldr	r3, [r2, r3]
   21906:	mov	r5, r0
   21908:	mov	r4, r1
   2190a:	ldr	r3, [r3, #0]
   2190c:	str	r3, [sp, #60]	; 0x3c
   2190e:	mov.w	r3, #0
   21912:	ldrd	r2, r3, [r1, #40]	; 0x28
   21916:	cmp	r3, #0
   21918:	it	eq
   2191a:	cmpeq.w	r2, #65536	; 0x10000
   2191e:	bcs.n	21958 <exclude_super_stripes@@Base+0x60>
   21920:	ldrd	r0, r1, [r1, #80]	; 0x50
   21924:	rsb	ip, r2, #65536	; 0x10000
   21928:	str.w	ip, [sp, #52]	; 0x34
   2192c:	adds.w	r0, r0, ip
   21930:	adc.w	r1, r1, #0
   21934:	adds.w	r6, r2, #4294967295	; 0xffffffff
   21938:	adc.w	r7, r3, #4294967295	; 0xffffffff
   2193c:	adds.w	r6, r6, ip
   21940:	strd	r0, r1, [r4, #80]	; 0x50
   21944:	adc.w	r7, r7, #0
   21948:	movs	r1, #4
   2194a:	add.w	r0, r5, #160	; 0xa0
   2194e:	str	r1, [sp, #8]
   21950:	strd	r6, r7, [sp]
   21954:	bl	168bc <set_extent_bits@@Base>
   21958:	movs	r6, #0
   2195a:	add.w	r7, r5, #160	; 0xa0
   2195e:	mov.w	r2, #65536	; 0x10000
   21962:	mov	r3, r6
   21964:	add	r1, sp, #52	; 0x34
   21966:	str	r1, [sp, #44]	; 0x2c
   21968:	ldr	r1, [sp, #44]	; 0x2c
   2196a:	mov	r0, r5
   2196c:	strd	r2, r3, [sp]
   21970:	ldrd	r2, r3, [r4, #40]	; 0x28
   21974:	str	r1, [sp, #16]
   21976:	add	r1, sp, #56	; 0x38
   21978:	str	r1, [sp, #12]
   2197a:	add	r1, sp, #48	; 0x30
   2197c:	str	r1, [sp, #8]
   2197e:	bl	296fe <btrfs_rmap_block@@Base>
   21982:	mov	r3, r0
   21984:	cbnz	r0, 2199e <exclude_super_stripes@@Base+0xa6>
   21986:	ldr	r3, [sp, #56]	; 0x38
   21988:	ldr	r0, [sp, #48]	; 0x30
   2198a:	subs	r2, r3, #1
   2198c:	str	r2, [sp, #56]	; 0x38
   2198e:	cbnz	r3, 219d2 <exclude_super_stripes@@Base+0xda>
   21990:	adds	r6, #1
   21992:	str	r3, [sp, #32]
   21994:	blx	83f0 <free@plt+0x4>
   21998:	cmp	r6, #3
   2199a:	ldr	r3, [sp, #32]
   2199c:	bne.n	219b2 <exclude_super_stripes@@Base+0xba>
   2199e:	ldr	r1, [pc, #236]	; (21a8c <exclude_super_stripes@@Base+0x194>)
   219a0:	ldr	r2, [pc, #228]	; (21a88 <exclude_super_stripes@@Base+0x190>)
   219a2:	add	r1, pc
   219a4:	ldr	r2, [r1, r2]
   219a6:	ldr	r1, [r2, #0]
   219a8:	ldr	r2, [sp, #60]	; 0x3c
   219aa:	eors	r1, r2
   219ac:	beq.n	21a7a <exclude_super_stripes@@Base+0x182>
   219ae:	blx	84cc <__stack_chk_fail@plt>
   219b2:	movs	r2, #12
   219b4:	mul.w	r1, r2, r6
   219b8:	mov.w	r2, #16384	; 0x4000
   219bc:	sub.w	r3, r1, #32
   219c0:	rsb	r0, r1, #32
   219c4:	lsl.w	r3, r2, r3
   219c8:	lsr.w	r0, r2, r0
   219cc:	orrs	r3, r0
   219ce:	lsls	r2, r1
   219d0:	b.n	21968 <exclude_super_stripes@@Base+0x70>
   219d2:	add.w	r0, r0, r2, lsl #3
   219d6:	ldr.w	r1, [r4, #49]	; 0x31
   219da:	ldrd	r2, r3, [r4, #40]	; 0x28
   219de:	ldrd	sl, fp, [r0]
   219e2:	ldr.w	r0, [r4, #53]	; 0x35
   219e6:	adds	r1, r1, r2
   219e8:	str	r1, [sp, #24]
   219ea:	adc.w	r1, r0, r3
   219ee:	str	r1, [sp, #28]
   219f0:	ldrd	r0, r1, [sp, #24]
   219f4:	cmp	fp, r1
   219f6:	it	eq
   219f8:	cmpeq	sl, r0
   219fa:	bcs.n	21986 <exclude_super_stripes@@Base+0x8e>
   219fc:	ldr.w	ip, [sp, #52]	; 0x34
   21a00:	mov	r0, ip
   21a02:	asrs	r1, r0, #31
   21a04:	strd	r0, r1, [sp, #32]
   21a08:	adds.w	r0, sl, ip
   21a0c:	adc.w	r1, fp, ip, asr #31
   21a10:	cmp	r3, r1
   21a12:	it	eq
   21a14:	cmpeq	r2, r0
   21a16:	bcs.n	21986 <exclude_super_stripes@@Base+0x8e>
   21a18:	cmp	fp, r3
   21a1a:	it	eq
   21a1c:	cmpeq	sl, r2
   21a1e:	bcs.n	21a58 <exclude_super_stripes@@Base+0x160>
   21a20:	subs.w	r8, r0, r2
   21a24:	sbc.w	r9, r1, r3
   21a28:	ldrd	r1, r0, [r4, #80]	; 0x50
   21a2c:	adds.w	r1, r1, r8
   21a30:	adc.w	r0, r0, r9
   21a34:	strd	r1, r0, [r4, #80]	; 0x50
   21a38:	movs	r1, #4
   21a3a:	str	r1, [sp, #8]
   21a3c:	adds.w	r1, r2, r8
   21a40:	adc.w	r0, r3, r9
   21a44:	adds.w	r1, r1, #4294967295	; 0xffffffff
   21a48:	adc.w	r0, r0, #4294967295	; 0xffffffff
   21a4c:	strd	r1, r0, [sp]
   21a50:	mov	r0, r7
   21a52:	bl	168bc <set_extent_bits@@Base>
   21a56:	b.n	21986 <exclude_super_stripes@@Base+0x8e>
   21a58:	ldr	r3, [sp, #24]
   21a5a:	subs.w	r8, r3, sl
   21a5e:	ldr	r3, [sp, #28]
   21a60:	sbc.w	r9, r3, fp
   21a64:	ldrd	r2, r3, [sp, #32]
   21a68:	cmp	r3, r9
   21a6a:	it	eq
   21a6c:	cmpeq	r2, r8
   21a6e:	itt	cc
   21a70:	movcc	r8, r2
   21a72:	movcc	r9, r3
   21a74:	mov	r2, sl
   21a76:	mov	r3, fp
   21a78:	b.n	21a28 <exclude_super_stripes@@Base+0x130>
   21a7a:	mov	r0, r3
   21a7c:	add	sp, #68	; 0x44
   21a7e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21a82:	nop
   21a84:	adds	r4, #140	; 0x8c
   21a86:	movs	r4, r0
   21a88:	lsls	r4, r4, #8
   21a8a:	movs	r0, r0
   21a8c:	adds	r3, #230	; 0xe6
   21a8e:	movs	r4, r0

00021a90 <btrfs_read_block_groups@@Base>:
   21a90:	ldr	r2, [pc, #660]	; (21d28 <btrfs_read_block_groups@@Base+0x298>)
   21a92:	ldr	r3, [pc, #664]	; (21d2c <btrfs_read_block_groups@@Base+0x29c>)
   21a94:	add	r2, pc
   21a96:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a9a:	sub	sp, #204	; 0xcc
   21a9c:	ldr	r3, [r2, r3]
   21a9e:	movs	r6, #0
   21aa0:	add.w	r9, sp, #104	; 0x68
   21aa4:	ldr.w	r8, [r0, #24]
   21aa8:	mov	r4, r0
   21aaa:	mov	fp, r6
   21aac:	add	r0, sp, #128	; 0x80
   21aae:	ldr	r3, [r3, #0]
   21ab0:	str	r3, [sp, #196]	; 0xc4
   21ab2:	mov.w	r3, #0
   21ab6:	movs	r3, #192	; 0xc0
   21ab8:	strd	r6, r6, [sp, #64]	; 0x40
   21abc:	strb.w	r6, [sp, #73]	; 0x49
   21ac0:	strb.w	r6, [sp, #74]	; 0x4a
   21ac4:	strb.w	r6, [sp, #75]	; 0x4b
   21ac8:	strb.w	r6, [sp, #76]	; 0x4c
   21acc:	strb.w	r6, [sp, #77]	; 0x4d
   21ad0:	strb.w	r6, [sp, #78]	; 0x4e
   21ad4:	strb.w	r6, [sp, #79]	; 0x4f
   21ad8:	strb.w	r6, [sp, #80]	; 0x50
   21adc:	strb.w	r3, [sp, #72]	; 0x48
   21ae0:	bl	17e48 <btrfs_init_path@@Base>
   21ae4:	str	r6, [sp, #52]	; 0x34
   21ae6:	add.w	sl, sp, #128	; 0x80
   21aea:	movs	r5, #0
   21aec:	add	r2, sp, #64	; 0x40
   21aee:	mov	r1, r8
   21af0:	mov	r3, sl
   21af2:	mov	r0, r5
   21af4:	strd	r5, r5, [sp]
   21af8:	bl	1a23c <btrfs_search_slot@@Base>
   21afc:	subs	r7, r0, #0
   21afe:	blt.n	21b20 <btrfs_read_block_groups@@Base+0x90>
   21b00:	ldr	r0, [sp, #128]	; 0x80
   21b02:	ldr	r2, [sp, #160]	; 0xa0
   21b04:	ldr.w	r3, [r0, #192]	; 0xc0
   21b08:	cmp	r3, r2
   21b0a:	bhi.n	21b3c <btrfs_read_block_groups@@Base+0xac>
   21b0c:	ldr.w	r0, [r8, #464]	; 0x1d0
   21b10:	mov	r1, sl
   21b12:	strb.w	r5, [sp, #193]	; 0xc1
   21b16:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   21b1a:	subs	r7, r0, #0
   21b1c:	beq.n	21b00 <btrfs_read_block_groups@@Base+0x70>
   21b1e:	bge.n	21b64 <btrfs_read_block_groups@@Base+0xd4>
   21b20:	add	r0, sp, #128	; 0x80
   21b22:	bl	17e58 <btrfs_release_path@@Base>
   21b26:	ldr	r2, [pc, #520]	; (21d30 <btrfs_read_block_groups@@Base+0x2a0>)
   21b28:	ldr	r3, [pc, #512]	; (21d2c <btrfs_read_block_groups@@Base+0x29c>)
   21b2a:	add	r2, pc
   21b2c:	ldr	r3, [r2, r3]
   21b2e:	ldr	r2, [r3, #0]
   21b30:	ldr	r3, [sp, #196]	; 0xc4
   21b32:	eors	r2, r3
   21b34:	beq.w	21d1e <btrfs_read_block_groups@@Base+0x28e>
   21b38:	blx	84cc <__stack_chk_fail@plt>
   21b3c:	mov	r1, r9
   21b3e:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   21b42:	ldrd	r6, r7, [sp, #104]	; 0x68
   21b46:	ldrd	r2, r3, [sp, #64]	; 0x40
   21b4a:	cmp	r7, r3
   21b4c:	it	eq
   21b4e:	cmpeq	r6, r2
   21b50:	bcc.n	21b5c <btrfs_read_block_groups@@Base+0xcc>
   21b52:	ldrb.w	r3, [sp, #112]	; 0x70
   21b56:	cmp	r3, #192	; 0xc0
   21b58:	beq.w	21ce4 <btrfs_read_block_groups@@Base+0x254>
   21b5c:	ldr	r3, [sp, #160]	; 0xa0
   21b5e:	adds	r3, #1
   21b60:	str	r3, [sp, #160]	; 0xa0
   21b62:	b.n	21b00 <btrfs_read_block_groups@@Base+0x70>
   21b64:	movs	r7, #0
   21b66:	b.n	21b20 <btrfs_read_block_groups@@Base+0x90>
   21b68:	ldr.w	r2, [sp, #93]	; 0x5d
   21b6c:	ldr.w	r3, [sp, #97]	; 0x61
   21b70:	orrs	r3, r2
   21b72:	beq.n	21c0e <btrfs_read_block_groups@@Base+0x17e>
   21b74:	movs	r1, #120	; 0x78
   21b76:	movs	r0, #1
   21b78:	blx	8358 <calloc@plt+0x4>
   21b7c:	mov	r5, r0
   21b7e:	cmp	r0, #0
   21b80:	beq.w	21cd6 <btrfs_read_block_groups@@Base+0x246>
   21b84:	movs	r2, #25
   21b86:	mov	r0, r7
   21b88:	mla	r2, r2, sl, r7
   21b8c:	movs	r3, #24
   21b8e:	mov	r1, r9
   21b90:	add.w	r7, r5, #40	; 0x28
   21b94:	ldr.w	r2, [r2, #214]	; 0xd6
   21b98:	adds	r2, #101	; 0x65
   21b9a:	bl	1731a <read_extent_buffer@@Base>
   21b9e:	ldmia	r6!, {r0, r1, r2, r3}
   21ba0:	stmia	r7!, {r0, r1, r2, r3}
   21ba2:	ldr	r3, [r6, #0]
   21ba4:	movs	r6, #0
   21ba6:	ldrd	r0, r1, [sp, #104]	; 0x68
   21baa:	strb	r3, [r7, #0]
   21bac:	ldr	r3, [sp, #52]	; 0x34
   21bae:	strd	r0, r1, [r5, #72]	; 0x48
   21bb2:	str	r6, [r5, #104]	; 0x68
   21bb4:	strd	r3, fp, [r5, #88]	; 0x58
   21bb8:	ldrd	r2, r3, [sp, #120]	; 0x78
   21bbc:	and.w	r1, r2, #1
   21bc0:	strd	r1, r6, [sp, #24]
   21bc4:	ldrd	r0, r1, [sp, #24]
   21bc8:	strd	r2, r3, [r5, #96]	; 0x60
   21bcc:	orrs	r1, r0
   21bce:	bne.n	21c54 <btrfs_read_block_groups@@Base+0x1c4>
   21bd0:	and.w	r1, r2, #2
   21bd4:	strd	r1, r6, [sp, #32]
   21bd8:	ldrd	r0, r1, [sp, #32]
   21bdc:	orrs	r1, r0
   21bde:	bne.n	21c58 <btrfs_read_block_groups@@Base+0x1c8>
   21be0:	and.w	r1, r2, #4
   21be4:	strd	r1, r6, [sp, #40]	; 0x28
   21be8:	ldrd	r0, r1, [sp, #40]	; 0x28
   21bec:	orrs	r1, r0
   21bee:	it	ne
   21bf0:	movne	r6, #4
   21bf2:	mov	r0, r4
   21bf4:	bl	1e578 <btrfs_create_tree@@Base+0x1fc>
   21bf8:	ldrd	r2, r3, [r5, #40]	; 0x28
   21bfc:	bl	29ec0 <btrfs_chunk_readonly@@Base>
   21c00:	subs	r7, r0, #0
   21c02:	bge.n	21c5c <btrfs_read_block_groups@@Base+0x1cc>
   21c04:	mov	r0, r5
   21c06:	blx	83f0 <free@plt+0x4>
   21c0a:	adds	r3, r7, #2
   21c0c:	bne.n	21b20 <btrfs_read_block_groups@@Base+0x90>
   21c0e:	ldr.w	r0, [sp, #73]	; 0x49
   21c12:	ldr.w	r1, [sp, #77]	; 0x4d
   21c16:	ldrd	r3, r2, [sp, #64]	; 0x40
   21c1a:	orrs.w	r5, r0, r1
   21c1e:	bne.n	21cdc <btrfs_read_block_groups@@Base+0x24c>
   21c20:	adds	r3, #1
   21c22:	adc.w	r2, r2, #0
   21c26:	add	r0, sp, #128	; 0x80
   21c28:	strd	r3, r2, [sp, #64]	; 0x40
   21c2c:	movs	r2, #0
   21c2e:	strb.w	r2, [sp, #73]	; 0x49
   21c32:	strb.w	r2, [sp, #74]	; 0x4a
   21c36:	strb.w	r2, [sp, #75]	; 0x4b
   21c3a:	strb.w	r2, [sp, #76]	; 0x4c
   21c3e:	strb.w	r2, [sp, #77]	; 0x4d
   21c42:	strb.w	r2, [sp, #78]	; 0x4e
   21c46:	strb.w	r2, [sp, #79]	; 0x4f
   21c4a:	strb.w	r2, [sp, #80]	; 0x50
   21c4e:	bl	17e58 <btrfs_release_path@@Base>
   21c52:	b.n	21ae6 <btrfs_read_block_groups@@Base+0x56>
   21c54:	movs	r6, #2
   21c56:	b.n	21bf2 <btrfs_read_block_groups@@Base+0x162>
   21c58:	movs	r6, #16
   21c5a:	b.n	21bf2 <btrfs_read_block_groups@@Base+0x162>
   21c5c:	it	ne
   21c5e:	movne	r3, #1
   21c60:	mov	r1, r5
   21c62:	it	ne
   21c64:	strne	r3, [r5, #108]	; 0x6c
   21c66:	mov	r0, r4
   21c68:	bl	218f8 <exclude_super_stripes@@Base>
   21c6c:	add	r3, sp, #60	; 0x3c
   21c6e:	str	r3, [sp, #16]
   21c70:	mov	r0, r4
   21c72:	ldrd	r2, r3, [r5, #72]	; 0x48
   21c76:	strd	r2, r3, [sp, #8]
   21c7a:	ldr.w	r2, [r5, #49]	; 0x31
   21c7e:	ldr.w	r3, [r5, #53]	; 0x35
   21c82:	strd	r2, r3, [sp]
   21c86:	ldrd	r2, r3, [r5, #96]	; 0x60
   21c8a:	bl	20ab4 <update_space_info@@Base>
   21c8e:	subs	r7, r0, #0
   21c90:	blt.n	21c04 <btrfs_read_block_groups@@Base+0x174>
   21c92:	ldr	r3, [sp, #60]	; 0x3c
   21c94:	orr.w	r6, r6, #8
   21c98:	add.w	r0, r4, #128	; 0x80
   21c9c:	str	r3, [r5, #60]	; 0x3c
   21c9e:	ldrd	r2, r3, [r5, #40]	; 0x28
   21ca2:	str	r6, [sp, #8]
   21ca4:	ldr.w	r1, [r5, #49]	; 0x31
   21ca8:	ldr.w	r6, [r5, #53]	; 0x35
   21cac:	adds	r1, r1, r2
   21cae:	adc.w	r6, r3, r6
   21cb2:	adds.w	r1, r1, #4294967295	; 0xffffffff
   21cb6:	adc.w	r6, r6, #4294967295	; 0xffffffff
   21cba:	strd	r1, r6, [sp]
   21cbe:	mov	r6, r0
   21cc0:	bl	168bc <set_extent_bits@@Base>
   21cc4:	movs	r3, #0
   21cc6:	str	r5, [sp, #0]
   21cc8:	str	r3, [sp, #4]
   21cca:	mov	r0, r6
   21ccc:	ldrd	r2, r3, [r5, #40]	; 0x28
   21cd0:	bl	16bca <set_state_private@@Base>
   21cd4:	b.n	21c0e <btrfs_read_block_groups@@Base+0x17e>
   21cd6:	mvn.w	r7, #11
   21cda:	b.n	21b20 <btrfs_read_block_groups@@Base+0x90>
   21cdc:	adds	r3, r0, r3
   21cde:	adc.w	r2, r1, r2
   21ce2:	b.n	21c26 <btrfs_read_block_groups@@Base+0x196>
   21ce4:	ldr	r2, [sp, #160]	; 0xa0
   21ce6:	add	r1, sp, #64	; 0x40
   21ce8:	ldr	r0, [sp, #128]	; 0x80
   21cea:	add	r6, sp, #84	; 0x54
   21cec:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   21cf0:	ldr	r7, [sp, #128]	; 0x80
   21cf2:	ldr.w	sl, [sp, #160]	; 0xa0
   21cf6:	mov	r1, r6
   21cf8:	mov	r0, r7
   21cfa:	mov	r2, sl
   21cfc:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   21d00:	ldrb.w	r3, [sp, #92]	; 0x5c
   21d04:	cmp	r3, #192	; 0xc0
   21d06:	beq.w	21b68 <btrfs_read_block_groups@@Base+0xd8>
   21d0a:	ldr	r1, [pc, #40]	; (21d34 <btrfs_read_block_groups@@Base+0x2a4>)
   21d0c:	movw	r2, #2684	; 0xa7c
   21d10:	ldr	r0, [pc, #36]	; (21d38 <btrfs_read_block_groups@@Base+0x2a8>)
   21d12:	add	r1, pc
   21d14:	addw	r1, r1, #526	; 0x20e
   21d18:	add	r0, pc
   21d1a:	bl	1edf4 <btrfs_create_tree@@Base+0xa78>
   21d1e:	mov	r0, r7
   21d20:	add	sp, #204	; 0xcc
   21d22:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d26:	nop
   21d28:	adds	r2, #244	; 0xf4
   21d2a:	movs	r4, r0
   21d2c:	lsls	r4, r4, #8
   21d2e:	movs	r0, r0
   21d30:	adds	r2, #94	; 0x5e
   21d32:	movs	r4, r0
   21d34:	stmia	r4!, {r1, r3, r5, r7}
   21d36:	movs	r1, r0
   21d38:	stmia	r3!, {r1, r2}
   21d3a:	movs	r1, r0

00021d3c <btrfs_add_block_group@@Base>:
   21d3c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d40:	sub	sp, #52	; 0x34
   21d42:	mov	r5, r0
   21d44:	add.w	fp, r0, #128	; 0x80
   21d48:	strd	r2, r3, [sp, #40]	; 0x28
   21d4c:	movs	r1, #120	; 0x78
   21d4e:	ldrd	r6, r3, [sp, #88]	; 0x58
   21d52:	movs	r0, #1
   21d54:	ldrd	r7, r8, [sp, #96]	; 0x60
   21d58:	ldr.w	sl, [pc, #320]	; 21e9c <btrfs_add_block_group@@Base+0x160>
   21d5c:	str	r3, [sp, #36]	; 0x24
   21d5e:	ldr	r3, [sp, #104]	; 0x68
   21d60:	add	sl, pc
   21d62:	ldr.w	r9, [pc, #316]	; 21ea0 <btrfs_add_block_group@@Base+0x164>
   21d66:	addw	sl, sl, #547	; 0x223
   21d6a:	str	r3, [sp, #28]
   21d6c:	add	r9, pc
   21d6e:	ldr	r3, [sp, #108]	; 0x6c
   21d70:	str	r3, [sp, #32]
   21d72:	blx	8358 <calloc@plt+0x4>
   21d76:	mov	r2, sl
   21d78:	mov	r1, r9
   21d7a:	movw	r3, #2789	; 0xae5
   21d7e:	mov	r4, r0
   21d80:	clz	r0, r0
   21d84:	lsrs	r0, r0, #5
   21d86:	str	r0, [sp, #0]
   21d88:	ldr	r0, [pc, #280]	; (21ea4 <btrfs_add_block_group@@Base+0x168>)
   21d8a:	add	r0, pc
   21d8c:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21d90:	ldr	r3, [sp, #28]
   21d92:	mov	r1, r4
   21d94:	mov	r0, r5
   21d96:	strd	r7, r8, [r4, #40]	; 0x28
   21d9a:	str.w	r3, [r4, #49]	; 0x31
   21d9e:	ldr	r3, [sp, #32]
   21da0:	str	r6, [r4, #96]	; 0x60
   21da2:	str.w	r3, [r4, #53]	; 0x35
   21da6:	movs	r3, #192	; 0xc0
   21da8:	strb.w	r3, [r4, #48]	; 0x30
   21dac:	ldr	r3, [sp, #40]	; 0x28
   21dae:	str	r3, [r4, #72]	; 0x48
   21db0:	ldr	r3, [sp, #44]	; 0x2c
   21db2:	str	r3, [r4, #76]	; 0x4c
   21db4:	ldr	r3, [sp, #36]	; 0x24
   21db6:	str	r3, [r4, #100]	; 0x64
   21db8:	bl	218f8 <exclude_super_stripes@@Base>
   21dbc:	add.w	r3, r4, #60	; 0x3c
   21dc0:	str	r3, [sp, #16]
   21dc2:	mov	r0, r5
   21dc4:	ldr	r3, [sp, #40]	; 0x28
   21dc6:	str	r3, [sp, #8]
   21dc8:	ldr	r3, [sp, #44]	; 0x2c
   21dca:	str	r3, [sp, #12]
   21dcc:	ldr	r3, [sp, #28]
   21dce:	str	r3, [sp, #0]
   21dd0:	ldr	r3, [sp, #32]
   21dd2:	str	r3, [sp, #4]
   21dd4:	ldrd	r2, r3, [r4, #96]	; 0x60
   21dd8:	bl	20ab4 <update_space_info@@Base>
   21ddc:	mov	r2, sl
   21dde:	mov	r1, r9
   21de0:	mov.w	r3, #2800	; 0xaf0
   21de4:	ldr.w	sl, [pc, #192]	; 21ea8 <btrfs_add_block_group@@Base+0x16c>
   21de8:	ldr.w	r9, [pc, #192]	; 21eac <btrfs_add_block_group@@Base+0x170>
   21dec:	add	sl, pc
   21dee:	addw	sl, sl, #547	; 0x223
   21df2:	add	r9, pc
   21df4:	str	r0, [sp, #0]
   21df6:	ldr	r0, [pc, #184]	; (21eb0 <btrfs_add_block_group@@Base+0x174>)
   21df8:	add	r0, pc
   21dfa:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21dfe:	mov.w	ip, #0
   21e02:	and.w	r2, r6, #1
   21e06:	mov	r3, ip
   21e08:	orrs	r3, r2
   21e0a:	and.w	r0, r6, #4
   21e0e:	mov	r1, ip
   21e10:	ite	eq
   21e12:	moveq	r3, ip
   21e14:	movne	r3, #2
   21e16:	orrs.w	r2, r0, r1
   21e1a:	and.w	r0, r6, #2
   21e1e:	it	ne
   21e20:	orrne.w	r3, r3, #4
   21e24:	movs	r1, #0
   21e26:	orrs.w	r2, r0, r1
   21e2a:	ldr	r2, [sp, #32]
   21e2c:	it	ne
   21e2e:	orrne.w	r3, r3, #16
   21e32:	mov	r0, fp
   21e34:	orr.w	r3, r3, #8
   21e38:	str	r3, [sp, #8]
   21e3a:	ldr	r3, [sp, #28]
   21e3c:	adds.w	r3, r3, #4294967295	; 0xffffffff
   21e40:	adc.w	r2, r2, #4294967295	; 0xffffffff
   21e44:	adds	r3, r3, r7
   21e46:	adc.w	r2, r2, r8
   21e4a:	strd	r3, r2, [sp]
   21e4e:	mov	r2, r7
   21e50:	mov	r3, r8
   21e52:	bl	168bc <set_extent_bits@@Base>
   21e56:	ldr	r1, [pc, #92]	; (21eb4 <btrfs_add_block_group@@Base+0x178>)
   21e58:	mov	r2, sl
   21e5a:	movw	r3, #2806	; 0xaf6
   21e5e:	add	r1, pc
   21e60:	str	r1, [sp, #28]
   21e62:	str	r0, [sp, #0]
   21e64:	mov	r0, r9
   21e66:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21e6a:	mov	r2, r7
   21e6c:	movs	r3, #0
   21e6e:	mov	r0, fp
   21e70:	str	r3, [sp, #4]
   21e72:	mov	r3, r8
   21e74:	str	r4, [sp, #0]
   21e76:	bl	16bca <set_state_private@@Base>
   21e7a:	ldr	r1, [sp, #28]
   21e7c:	mov	r2, sl
   21e7e:	movw	r3, #2810	; 0xafa
   21e82:	str	r0, [sp, #0]
   21e84:	mov	r0, r9
   21e86:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21e8a:	mov	r0, r5
   21e8c:	ldr	r3, [sp, #36]	; 0x24
   21e8e:	mov	r2, r6
   21e90:	bl	1e578 <btrfs_create_tree@@Base+0x1fc>
   21e94:	mov	r0, r4
   21e96:	add	sp, #52	; 0x34
   21e98:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e9c:	stmia	r4!, {r2, r3, r4, r6}
   21e9e:	movs	r1, r0
   21ea0:	pop	{r0, r1, r2, r3, r4, pc}
   21ea2:	movs	r1, r0
   21ea4:	stmia	r1!, {r0, r1, r4, r7}
   21ea6:	movs	r1, r0
   21ea8:	stmia	r3!, {r4, r6, r7}
   21eaa:	movs	r1, r0
   21eac:	ldrh	r1, [r0, #10]
   21eae:	movs	r1, r0
   21eb0:	ldrh	r3, [r7, #8]
   21eb2:	movs	r1, r0
   21eb4:	pop	{r0, r2, r3, r5}
   21eb6:	movs	r1, r0

00021eb8 <btrfs_make_block_group@@Base>:
   21eb8:	push	{r4, r5, r6, r7, lr}
   21eba:	mov	r4, r0
   21ebc:	ldr	r5, [pc, #144]	; (21f50 <btrfs_make_block_group@@Base+0x98>)
   21ebe:	sub	sp, #68	; 0x44
   21ec0:	mov	r0, r1
   21ec2:	ldr	r1, [pc, #144]	; (21f54 <btrfs_make_block_group@@Base+0x9c>)
   21ec4:	add	r5, pc
   21ec6:	ldrd	r6, r7, [sp, #104]	; 0x68
   21eca:	ldr	r1, [r5, r1]
   21ecc:	movs	r5, #0
   21ece:	ldr	r1, [r1, #0]
   21ed0:	str	r1, [sp, #60]	; 0x3c
   21ed2:	mov.w	r1, #0
   21ed6:	ldr	r1, [r0, #24]
   21ed8:	strd	r6, r7, [sp, #16]
   21edc:	ldrd	r6, r7, [sp, #96]	; 0x60
   21ee0:	str	r1, [sp, #28]
   21ee2:	strd	r6, r7, [sp, #8]
   21ee6:	ldrd	r6, r7, [sp, #88]	; 0x58
   21eea:	strd	r6, r7, [sp]
   21eee:	bl	21d3c <btrfs_add_block_group@@Base>
   21ef2:	ldr	r1, [sp, #28]
   21ef4:	ldr	r3, [r0, #72]	; 0x48
   21ef6:	add.w	r2, r0, #40	; 0x28
   21efa:	str	r3, [sp, #36]	; 0x24
   21efc:	ldr	r3, [r0, #76]	; 0x4c
   21efe:	str	r3, [sp, #40]	; 0x28
   21f00:	ldr	r3, [r0, #96]	; 0x60
   21f02:	str	r3, [sp, #52]	; 0x34
   21f04:	ldr	r3, [r0, #100]	; 0x64
   21f06:	mov	r0, r4
   21f08:	str	r3, [sp, #56]	; 0x38
   21f0a:	mov.w	r3, #256	; 0x100
   21f0e:	strd	r3, r5, [sp, #44]	; 0x2c
   21f12:	movs	r3, #24
   21f14:	str	r3, [sp, #0]
   21f16:	add	r3, sp, #36	; 0x24
   21f18:	bl	1b2c8 <btrfs_insert_item@@Base>
   21f1c:	ldr	r2, [pc, #56]	; (21f58 <btrfs_make_block_group@@Base+0xa0>)
   21f1e:	ldr	r1, [pc, #60]	; (21f5c <btrfs_make_block_group@@Base+0xa4>)
   21f20:	movw	r3, #2833	; 0xb11
   21f24:	add	r2, pc
   21f26:	addw	r2, r2, #569	; 0x239
   21f2a:	add	r1, pc
   21f2c:	str	r0, [sp, #0]
   21f2e:	ldr	r0, [pc, #48]	; (21f60 <btrfs_make_block_group@@Base+0xa8>)
   21f30:	add	r0, pc
   21f32:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21f36:	ldr	r2, [pc, #44]	; (21f64 <btrfs_make_block_group@@Base+0xac>)
   21f38:	ldr	r3, [pc, #24]	; (21f54 <btrfs_make_block_group@@Base+0x9c>)
   21f3a:	add	r2, pc
   21f3c:	ldr	r3, [r2, r3]
   21f3e:	ldr	r2, [r3, #0]
   21f40:	ldr	r3, [sp, #60]	; 0x3c
   21f42:	eors	r2, r3
   21f44:	beq.n	21f4a <btrfs_make_block_group@@Base+0x92>
   21f46:	blx	84cc <__stack_chk_fail@plt>
   21f4a:	mov	r0, r5
   21f4c:	add	sp, #68	; 0x44
   21f4e:	pop	{r4, r5, r6, r7, pc}
   21f50:	cmp	r6, #196	; 0xc4
   21f52:	movs	r4, r0
   21f54:	lsls	r4, r4, #8
   21f56:	movs	r0, r0
   21f58:	stmia	r2!, {r3, r4, r7}
   21f5a:	movs	r1, r0
   21f5c:	cbnz	r1, 21fb8 <btrfs_make_block_group@@Base+0x100>
   21f5e:	movs	r1, r0
   21f60:	ldrh	r3, [r0, #0]
   21f62:	movs	r1, r0
   21f64:	cmp	r6, #78	; 0x4e
   21f66:	movs	r4, r0
   21f68:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f6c:	mov	r5, r1
   21f6e:	ldr	r1, [pc, #412]	; (2210c <btrfs_make_block_group@@Base+0x254>)
   21f70:	sub	sp, #76	; 0x4c
   21f72:	mov	r7, r2
   21f74:	ldr	r2, [pc, #408]	; (22110 <btrfs_make_block_group@@Base+0x258>)
   21f76:	add	r1, pc
   21f78:	mov	r9, r3
   21f7a:	ldrd	r6, r3, [sp, #112]	; 0x70
   21f7e:	mov	r4, r0
   21f80:	ldr	r2, [r1, r2]
   21f82:	mov	r0, r5
   21f84:	ldr	r2, [r2, #0]
   21f86:	str	r2, [sp, #68]	; 0x44
   21f88:	mov.w	r2, #0
   21f8c:	mov	r2, r6
   21f8e:	str	r3, [sp, #36]	; 0x24
   21f90:	bl	1e544 <btrfs_create_tree@@Base+0x1c8>
   21f94:	ldr	r3, [sp, #36]	; 0x24
   21f96:	str	r0, [sp, #44]	; 0x2c
   21f98:	cbnz	r0, 21fcc <btrfs_make_block_group@@Base+0x114>
   21f9a:	movs	r1, #0
   21f9c:	movs	r0, #0
   21f9e:	add	r2, sp, #44	; 0x2c
   21fa0:	strd	r0, r1, [sp, #8]
   21fa4:	strd	r0, r1, [sp]
   21fa8:	mov	r0, r5
   21faa:	str	r2, [sp, #16]
   21fac:	mov	r2, r6
   21fae:	bl	20ab4 <update_space_info@@Base>
   21fb2:	ldr	r2, [pc, #352]	; (22114 <btrfs_make_block_group@@Base+0x25c>)
   21fb4:	ldr	r1, [pc, #352]	; (22118 <btrfs_make_block_group@@Base+0x260>)
   21fb6:	mov.w	r3, #1712	; 0x6b0
   21fba:	add	r2, pc
   21fbc:	add.w	r2, r2, #592	; 0x250
   21fc0:	add	r1, pc
   21fc2:	str	r0, [sp, #0]
   21fc4:	ldr	r0, [pc, #340]	; (2211c <btrfs_make_block_group@@Base+0x264>)
   21fc6:	add	r0, pc
   21fc8:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21fcc:	ldr.w	sl, [sp, #44]	; 0x2c
   21fd0:	ldr	r2, [pc, #332]	; (22120 <btrfs_make_block_group@@Base+0x268>)
   21fd2:	ldr	r1, [pc, #336]	; (22124 <btrfs_make_block_group@@Base+0x26c>)
   21fd4:	clz	r3, sl
   21fd8:	ldr	r0, [pc, #332]	; (22128 <btrfs_make_block_group@@Base+0x270>)
   21fda:	add	r2, pc
   21fdc:	lsrs	r3, r3, #5
   21fde:	add.w	r2, r2, #592	; 0x250
   21fe2:	str	r3, [sp, #0]
   21fe4:	add	r1, pc
   21fe6:	add	r0, pc
   21fe8:	movw	r3, #1714	; 0x6b2
   21fec:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   21ff0:	ldr.w	r8, [sl, #40]	; 0x28
   21ff4:	cmp.w	r8, #0
   21ff8:	bne.n	22096 <btrfs_make_block_group@@Base+0x1de>
   21ffa:	ldrd	r0, r1, [sl, #8]
   21ffe:	movs	r2, #7
   22000:	bl	31ac0 <div_factor@@Base>
   22004:	mov	sl, r0
   22006:	ldr	r0, [sp, #44]	; 0x2c
   22008:	mov	fp, r1
   2200a:	ldr	r2, [r0, #24]
   2200c:	ldrd	r3, r1, [r0, #16]
   22010:	adds	r3, r3, r2
   22012:	ldr	r2, [r0, #28]
   22014:	adc.w	r1, r2, r1
   22018:	ldr	r2, [r0, #32]
   2201a:	adds	r3, r3, r2
   2201c:	ldr	r2, [r0, #36]	; 0x24
   2201e:	adc.w	r1, r2, r1
   22022:	adds	r3, r3, r7
   22024:	str	r3, [sp, #24]
   22026:	adc.w	r3, r1, r9
   2202a:	str	r3, [sp, #28]
   2202c:	ldrd	r2, r3, [sp, #24]
   22030:	cmp	r3, fp
   22032:	it	eq
   22034:	cmpeq	r2, sl
   22036:	bcc.n	22096 <btrfs_make_block_group@@Base+0x1de>
   22038:	ldrb.w	r1, [r5, #365]	; 0x16d
   2203c:	lsls	r2, r1, #31
   2203e:	bpl.n	2204a <btrfs_make_block_group@@Base+0x192>
   22040:	and.w	r2, r6, #4
   22044:	mov	r3, r8
   22046:	orrs	r3, r2
   22048:	bne.n	22096 <btrfs_make_block_group@@Base+0x1de>
   2204a:	lsls	r3, r1, #30
   2204c:	bpl.n	22058 <btrfs_make_block_group@@Base+0x1a0>
   2204e:	and.w	r2, r6, #2
   22052:	movs	r3, #0
   22054:	orrs	r3, r2
   22056:	bne.n	22096 <btrfs_make_block_group@@Base+0x1de>
   22058:	ldrb.w	r3, [r4, #33]	; 0x21
   2205c:	ands.w	r8, r3, #1
   22060:	bne.n	22096 <btrfs_make_block_group@@Base+0x1de>
   22062:	orr.w	r3, r3, #1
   22066:	strb.w	r3, [r4, #33]	; 0x21
   2206a:	ldrd	r2, r3, [r0]
   2206e:	mov	r1, r5
   22070:	mov	r0, r4
   22072:	strd	r2, r3, [sp]
   22076:	add	r3, sp, #56	; 0x38
   22078:	add	r2, sp, #48	; 0x30
   2207a:	bl	2881c <btrfs_alloc_chunk@@Base>
   2207e:	cmn.w	r0, #28
   22082:	bne.n	220aa <btrfs_make_block_group@@Base+0x1f2>
   22084:	ldr	r3, [sp, #44]	; 0x2c
   22086:	movs	r2, #1
   22088:	str	r2, [r3, #40]	; 0x28
   2208a:	ldrb.w	r3, [r4, #33]	; 0x21
   2208e:	bfi	r3, r8, #0, #1
   22092:	strb.w	r3, [r4, #33]	; 0x21
   22096:	ldr	r2, [pc, #148]	; (2212c <btrfs_make_block_group@@Base+0x274>)
   22098:	ldr	r3, [pc, #116]	; (22110 <btrfs_make_block_group@@Base+0x258>)
   2209a:	add	r2, pc
   2209c:	ldr	r3, [r2, r3]
   2209e:	ldr	r2, [r3, #0]
   220a0:	ldr	r3, [sp, #68]	; 0x44
   220a2:	eors	r2, r3
   220a4:	beq.n	22104 <btrfs_make_block_group@@Base+0x24c>
   220a6:	blx	84cc <__stack_chk_fail@plt>
   220aa:	ldr.w	r9, [pc, #132]	; 22130 <btrfs_make_block_group@@Base+0x278>
   220ae:	movw	r3, #1751	; 0x6d7
   220b2:	ldr	r7, [pc, #128]	; (22134 <btrfs_make_block_group@@Base+0x27c>)
   220b4:	ldr	r6, [pc, #128]	; (22138 <btrfs_make_block_group@@Base+0x280>)
   220b6:	add	r9, pc
   220b8:	add.w	r9, r9, #592	; 0x250
   220bc:	add	r7, pc
   220be:	add	r6, pc
   220c0:	str	r0, [sp, #0]
   220c2:	mov	r2, r9
   220c4:	mov	r1, r7
   220c6:	mov	r0, r6
   220c8:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   220cc:	ldrd	r2, r3, [sp, #56]	; 0x38
   220d0:	mov	r1, r5
   220d2:	mov	r0, r4
   220d4:	strd	r2, r3, [sp, #16]
   220d8:	ldrd	r2, r3, [sp, #48]	; 0x30
   220dc:	strd	r2, r3, [sp, #8]
   220e0:	ldr	r3, [sp, #44]	; 0x2c
   220e2:	ldrd	r2, r3, [r3]
   220e6:	strd	r2, r3, [sp]
   220ea:	movs	r2, #0
   220ec:	movs	r3, #0
   220ee:	bl	21eb8 <btrfs_make_block_group@@Base>
   220f2:	movw	r3, #1755	; 0x6db
   220f6:	mov	r2, r9
   220f8:	mov	r1, r7
   220fa:	str	r0, [sp, #0]
   220fc:	mov	r0, r6
   220fe:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   22102:	b.n	2208a <btrfs_make_block_group@@Base+0x1d2>
   22104:	movs	r0, #0
   22106:	add	sp, #76	; 0x4c
   22108:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2210c:	cmp	r6, #18
   2210e:	movs	r4, r0
   22110:	lsls	r4, r4, #8
   22112:	movs	r0, r0
   22114:	stmia	r2!, {r1}
   22116:	movs	r1, r0
   22118:	revsh	r3, r1
   2211a:	movs	r1, r0
   2211c:	strh	r5, [r5, #58]	; 0x3a
   2211e:	movs	r1, r0
   22120:	stmia	r1!, {r1, r5, r6, r7}
   22122:	movs	r1, r0
   22124:	hlt	0x0027
   22126:	movs	r1, r0
   22128:	stmia	r0!, {r0, r1, r2, r3, r4, r6}
   2212a:	movs	r1, r0
   2212c:	cmp	r4, #238	; 0xee
   2212e:	movs	r4, r0
   22130:	stmia	r1!, {r1, r2}
   22132:	movs	r1, r0
   22134:	cbnz	r7, 2216a <btrfs_reserve_extent@@Base+0x2e>
   22136:	movs	r1, r0
   22138:	strh	r5, [r6, #50]	; 0x32
   2213a:	movs	r1, r0

0002213c <btrfs_reserve_extent@@Base>:
   2213c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22140:	mov	sl, r2
   22142:	vpush	{d8-d10}
   22146:	mov	r6, r1
   22148:	ldr.w	r2, [pc, #2256]	; 22a1c <btrfs_reserve_extent@@Base+0x8e0>
   2214c:	mov	fp, r3
   2214e:	ldr.w	r1, [pc, #2256]	; 22a20 <btrfs_reserve_extent@@Base+0x8e4>
   22152:	add	r2, pc
   22154:	sub	sp, #252	; 0xfc
   22156:	add	r1, pc
   22158:	ldr.w	r5, [r6, #464]	; 0x1d0
   2215c:	ldr	r3, [sp, #312]	; 0x138
   2215e:	str	r2, [sp, #168]	; 0xa8
   22160:	ldr.w	r2, [pc, #2240]	; 22a24 <btrfs_reserve_extent@@Base+0x8e8>
   22164:	str	r3, [sp, #172]	; 0xac
   22166:	ldrb.w	r3, [sp, #340]	; 0x154
   2216a:	str	r0, [sp, #60]	; 0x3c
   2216c:	ldr	r2, [r1, r2]
   2216e:	ldrd	r8, r9, [sp, #320]	; 0x140
   22172:	ldr	r7, [sp, #336]	; 0x150
   22174:	ldr	r2, [r2, #0]
   22176:	str	r2, [sp, #244]	; 0xf4
   22178:	mov.w	r2, #0
   2217c:	cmp	r3, #0
   2217e:	beq.w	2266c <btrfs_reserve_extent@@Base+0x530>
   22182:	ldrd	r3, r4, [r5, #248]	; 0xf8
   22186:	ldrd	r1, r2, [r5, #272]	; 0x110
   2218a:	ands	r3, r1
   2218c:	orr.w	r3, r3, #1
   22190:	str	r3, [sp, #40]	; 0x28
   22192:	ands	r4, r2
   22194:	ldr.w	r3, [r6, #488]	; 0x1e8
   22198:	cbnz	r3, 221aa <btrfs_reserve_extent@@Base+0x6e>
   2219a:	ldr.w	r3, [r6, #451]	; 0x1c3
   2219e:	ldr.w	r2, [r6, #447]	; 0x1bf
   221a2:	cmp	r3, #0
   221a4:	it	eq
   221a6:	cmpeq	r2, #7
   221a8:	bne.n	22220 <btrfs_reserve_extent@@Base+0xe4>
   221aa:	ldr	r1, [sp, #40]	; 0x28
   221ac:	movs	r3, #0
   221ae:	and.w	r2, r1, #4
   221b2:	orrs	r3, r2
   221b4:	bne.n	221ea <btrfs_reserve_extent@@Base+0xae>
   221b6:	movs	r2, #4
   221b8:	movs	r3, #0
   221ba:	mov	r1, r5
   221bc:	strd	r2, r3, [sp]
   221c0:	ldr	r0, [sp, #60]	; 0x3c
   221c2:	mov	r2, sl
   221c4:	mov	r3, fp
   221c6:	bl	21f68 <btrfs_make_block_group@@Base+0xb0>
   221ca:	ldr.w	r2, [pc, #2140]	; 22a28 <btrfs_reserve_extent@@Base+0x8ec>
   221ce:	ldr.w	r1, [pc, #2140]	; 22a2c <btrfs_reserve_extent@@Base+0x8f0>
   221d2:	movw	r3, #2360	; 0x938
   221d6:	add	r2, pc
   221d8:	addw	r2, r2, #607	; 0x25f
   221dc:	add	r1, pc
   221de:	str	r0, [sp, #0]
   221e0:	ldr.w	r0, [pc, #2124]	; 22a30 <btrfs_reserve_extent@@Base+0x8f4>
   221e4:	add	r0, pc
   221e6:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   221ea:	ldr	r3, [sp, #40]	; 0x28
   221ec:	adds.w	r2, sl, #2097152	; 0x200000
   221f0:	mov	r1, r5
   221f2:	ldr	r0, [sp, #60]	; 0x3c
   221f4:	strd	r3, r4, [sp]
   221f8:	adc.w	r3, fp, #0
   221fc:	bl	21f68 <btrfs_make_block_group@@Base+0xb0>
   22200:	ldr.w	r2, [pc, #2096]	; 22a34 <btrfs_reserve_extent@@Base+0x8f8>
   22204:	ldr.w	r1, [pc, #2096]	; 22a38 <btrfs_reserve_extent@@Base+0x8fc>
   22208:	movw	r3, #2364	; 0x93c
   2220c:	add	r2, pc
   2220e:	addw	r2, r2, #607	; 0x25f
   22212:	add	r1, pc
   22214:	str	r0, [sp, #0]
   22216:	ldr.w	r0, [pc, #2084]	; 22a3c <btrfs_reserve_extent@@Base+0x900>
   2221a:	add	r0, pc
   2221c:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   22220:	ldr.w	r2, [r5, #388]	; 0x184
   22224:	movs	r3, #0
   22226:	ldr.w	r4, [pc, #2072]	; 22a40 <btrfs_reserve_extent@@Base+0x904>
   2222a:	cmp	fp, r3
   2222c:	it	eq
   2222e:	cmpeq	sl, r2
   22230:	ldr.w	r1, [pc, #2064]	; 22a44 <btrfs_reserve_extent@@Base+0x908>
   22234:	ldr.w	r0, [pc, #2064]	; 22a48 <btrfs_reserve_extent@@Base+0x90c>
   22238:	add	r4, pc
   2223a:	ite	cc
   2223c:	movcc	r3, #1
   2223e:	movcs	r3, #0
   22240:	add	r1, pc
   22242:	add	r0, pc
   22244:	addw	r2, r4, #607	; 0x25f
   22248:	str	r3, [sp, #0]
   2224a:	movw	r3, #2367	; 0x93f
   2224e:	str	r1, [sp, #32]
   22250:	str	r0, [sp, #24]
   22252:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   22256:	ldr	r3, [sp, #60]	; 0x3c
   22258:	ldr	r1, [sp, #32]
   2225a:	ldr	r0, [sp, #24]
   2225c:	ldrd	r2, r3, [r3, #16]
   22260:	strd	r2, r3, [sp, #80]	; 0x50
   22264:	ldr	r3, [sp, #60]	; 0x3c
   22266:	ldrd	r2, r3, [r3, #24]
   2226a:	strd	r2, r3, [sp, #88]	; 0x58
   2226e:	ldr.w	r3, [r6, #464]	; 0x1d0
   22272:	ldr	r3, [r3, #24]
   22274:	str	r3, [sp, #44]	; 0x2c
   22276:	ldr.w	r3, [r3, #464]	; 0x1d0
   2227a:	ldr.w	r2, [r3, #388]	; 0x184
   2227e:	vmov	s16, r3
   22282:	movs	r3, #0
   22284:	cmp	fp, r3
   22286:	it	eq
   22288:	cmpeq	sl, r2
   2228a:	add.w	r2, r4, #628	; 0x274
   2228e:	ite	cc
   22290:	movcc	r3, #1
   22292:	movcs	r3, #0
   22294:	str	r3, [sp, #0]
   22296:	mov.w	r3, #2208	; 0x8a0
   2229a:	bl	1e6d4 <btrfs_create_tree@@Base+0x358>
   2229e:	movs	r3, #168	; 0xa8
   222a0:	strb	r3, [r7, #8]
   222a2:	orrs.w	r3, r8, r9
   222a6:	beq.w	2269a <btrfs_reserve_extent@@Base+0x55e>
   222aa:	vmov	r0, s16
   222ae:	mov	r2, r8
   222b0:	mov	r3, r9
   222b2:	bl	1ee30 <btrfs_lookup_first_block_group@@Base>
   222b6:	mov	r1, r0
   222b8:	cbnz	r0, 222c2 <btrfs_reserve_extent@@Base+0x186>
   222ba:	mov.w	r8, #0
   222be:	mov.w	r9, #0
   222c2:	ldr	r3, [sp, #40]	; 0x28
   222c4:	mov	r2, r8
   222c6:	str	r3, [sp, #0]
   222c8:	mov	r3, r9
   222ca:	ldr	r0, [sp, #44]	; 0x2c
   222cc:	ldr.w	r0, [r0, #464]	; 0x1d0
   222d0:	bl	1f1c0 <btrfs_lookup_block_group@@Base+0x30c>
   222d4:	ldr	r3, [sp, #172]	; 0xac
   222d6:	movs	r2, #0
   222d8:	adds.w	r3, sl, r3
   222dc:	str	r3, [sp, #112]	; 0x70
   222de:	movs	r3, #0
   222e0:	strd	r2, r3, [sp, #24]
   222e4:	movs	r3, #0
   222e6:	str	r3, [sp, #56]	; 0x38
   222e8:	str	r3, [sp, #100]	; 0x64
   222ea:	ldr.w	r3, [pc, #1888]	; 22a4c <btrfs_reserve_extent@@Base+0x910>
   222ee:	add	r3, pc
   222f0:	str	r3, [sp, #180]	; 0xb4
   222f2:	adds.w	r3, sl, #4294967295	; 0xffffffff
   222f6:	str	r3, [sp, #184]	; 0xb8
   222f8:	adc.w	r3, fp, #4294967295	; 0xffffffff
   222fc:	str	r3, [sp, #188]	; 0xbc
   222fe:	mov	r4, r0
   22300:	ldr	r3, [sp, #44]	; 0x2c
   22302:	movs	r2, #0
   22304:	ldr	r1, [sp, #24]
   22306:	ldr.w	r3, [r3, #464]	; 0x1d0
   2230a:	ldr.w	r3, [r3, #392]	; 0x188
   2230e:	adds.w	r3, r3, #4294967295	; 0xffffffff
   22312:	adc.w	r2, r2, #4294967295	; 0xffffffff
   22316:	adds.w	r0, r1, #4294967295	; 0xffffffff
   2231a:	ldr	r1, [sp, #28]
   2231c:	orr.w	r3, r3, r0
   22320:	adc.w	r1, r1, #4294967295	; 0xffffffff
   22324:	adds	r3, #1
   22326:	orr.w	r2, r2, r1
   2232a:	str	r3, [sp, #48]	; 0x30
   2232c:	adc.w	r3, r2, #0
   22330:	str	r3, [sp, #52]	; 0x34
   22332:	cbnz	r4, 22352 <btrfs_reserve_extent@@Base+0x216>
   22334:	vmov	r0, s16
   22338:	ldrd	r2, r3, [sp, #48]	; 0x30
   2233c:	bl	1ee30 <btrfs_lookup_first_block_group@@Base>
   22340:	mov	r4, r0
   22342:	cbnz	r0, 22352 <btrfs_reserve_extent@@Base+0x216>
   22344:	vmov	r0, s16
   22348:	movs	r2, #0
   2234a:	movs	r3, #0
   2234c:	bl	1ee30 <btrfs_lookup_first_block_group@@Base>
   22350:	mov	r4, r0
   22352:	movs	r2, #0
   22354:	movs	r3, #0
   22356:	ldr	r1, [sp, #112]	; 0x70
   22358:	strd	r2, r3, [sp, #208]	; 0xd0
   2235c:	strd	r2, r3, [sp, #216]	; 0xd8
   22360:	cmp	r4, #0
   22362:	beq.w	227a6 <btrfs_reserve_extent@@Base+0x66a>
   22366:	ldrd	r2, r3, [sp, #48]	; 0x30
   2236a:	strd	r2, r3, [sp, #24]
   2236e:	movs	r3, #0
   22370:	mov	r2, r1
   22372:	str	r3, [sp, #116]	; 0x74
   22374:	asrs	r3, r1, #31
   22376:	strd	r2, r3, [sp, #104]	; 0x68
   2237a:	ldr	r3, [r4, #104]	; 0x68
   2237c:	cmp	r3, #0
   2237e:	bne.w	22508 <btrfs_reserve_extent@@Base+0x3cc>
   22382:	ldr	r3, [sp, #44]	; 0x2c
   22384:	ldr.w	r3, [r3, #464]	; 0x1d0
   22388:	ldr	r3, [r3, #24]
   2238a:	str	r3, [sp, #96]	; 0x60
   2238c:	ldr.w	r3, [r3, #464]	; 0x1d0
   22390:	mov	r9, r3
   22392:	bl	17e50 <btrfs_alloc_path@@Base>
   22396:	mov	r6, r0
   22398:	cmp	r0, #0
   2239a:	beq.w	227ae <btrfs_reserve_extent@@Base+0x672>
   2239e:	movs	r3, #2
   223a0:	strb.w	r3, [r0, #64]	; 0x40
   223a4:	ldrd	r2, r3, [r4, #40]	; 0x28
   223a8:	mov.w	r8, #0
   223ac:	ldr	r1, [sp, #96]	; 0x60
   223ae:	cmp	r3, #0
   223b0:	strd	r8, r8, [sp]
   223b4:	it	eq
   223b6:	cmpeq.w	r2, #65536	; 0x10000
   223ba:	strd	r2, r3, [sp, #32]
   223be:	strb.w	r8, [sp, #233]	; 0xe9
   223c2:	ittt	cc
   223c4:	movcc.w	r2, #65536	; 0x10000
   223c8:	movcc	r3, #0
   223ca:	strdcc	r2, r3, [sp, #32]
   223ce:	ldrd	r2, r3, [sp, #32]
   223d2:	strb.w	r8, [sp, #234]	; 0xea
   223d6:	strb.w	r8, [sp, #235]	; 0xeb
   223da:	strd	r2, r3, [sp, #224]	; 0xe0
   223de:	add	r2, sp, #224	; 0xe0
   223e0:	mov	r3, r0
   223e2:	mov	r0, r8
   223e4:	strb.w	r8, [sp, #236]	; 0xec
   223e8:	strb.w	r8, [sp, #237]	; 0xed
   223ec:	strb.w	r8, [sp, #238]	; 0xee
   223f0:	strb.w	r8, [sp, #239]	; 0xef
   223f4:	strb.w	r8, [sp, #240]	; 0xf0
   223f8:	strb.w	r8, [sp, #232]	; 0xe8
   223fc:	str	r2, [sp, #176]	; 0xb0
   223fe:	bl	1a23c <btrfs_search_slot@@Base>
   22402:	cmp	r0, r8
   22404:	blt.n	22502 <btrfs_reserve_extent@@Base+0x3c6>
   22406:	ldr	r2, [sp, #176]	; 0xb0
   22408:	mov	r3, r9
   2240a:	adds	r3, #96	; 0x60
   2240c:	str.w	r8, [sp, #176]	; 0xb0
   22410:	vmov	s17, r3
   22414:	vmov	s18, r2
   22418:	ldr	r0, [r6, #0]
   2241a:	ldr	r2, [r6, #32]
   2241c:	ldr.w	r3, [r0, #192]	; 0xc0
   22420:	cmp	r3, r2
   22422:	bhi.w	226a8 <btrfs_reserve_extent@@Base+0x56c>
   22426:	ldr	r3, [sp, #176]	; 0xb0
   22428:	mov	r1, r6
   2242a:	strb.w	r3, [r6, #65]	; 0x41
   2242e:	ldr	r3, [sp, #96]	; 0x60
   22430:	ldr.w	r0, [r3, #464]	; 0x1d0
   22434:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   22438:	cmp	r0, #0
   2243a:	blt.n	22502 <btrfs_reserve_extent@@Base+0x3c6>
   2243c:	beq.n	22418 <btrfs_reserve_extent@@Base+0x2dc>
   2243e:	ldr.w	r3, [r4, #49]	; 0x31
   22442:	ldrd	r1, r0, [r4, #40]	; 0x28
   22446:	ldr.w	r2, [r4, #53]	; 0x35
   2244a:	adds	r3, r3, r1
   2244c:	str	r3, [sp, #72]	; 0x48
   2244e:	adc.w	r3, r2, r0
   22452:	str	r3, [sp, #76]	; 0x4c
   22454:	ldrd	r0, r1, [sp, #72]	; 0x48
   22458:	ldrd	r2, r3, [sp, #32]
   2245c:	cmp	r3, r1
   2245e:	it	eq
   22460:	cmpeq	r2, r0
   22462:	bcs.n	22480 <btrfs_reserve_extent@@Base+0x344>
   22464:	ldr	r3, [sp, #72]	; 0x48
   22466:	vmov	r0, s17
   2246a:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2246e:	ldr	r3, [sp, #76]	; 0x4c
   22470:	adc.w	r3, r3, #4294967295	; 0xffffffff
   22474:	strd	r2, r3, [sp]
   22478:	ldrd	r2, r3, [sp, #32]
   2247c:	bl	16ae8 <set_extent_dirty@@Base>
   22480:	ldr	r1, [sp, #180]	; 0xb4
   22482:	mov.w	r8, #12
   22486:	ldr	r3, [sp, #96]	; 0x60
   22488:	mov.w	r2, #65536	; 0x10000
   2248c:	addw	r1, r1, #645	; 0x285
   22490:	vmov	s18, r1
   22494:	ldr.w	r1, [pc, #1464]	; 22a50 <btrfs_reserve_extent@@Base+0x914>
   22498:	ldr.w	r9, [r3, #464]	; 0x1d0
   2249c:	add	r1, pc
   2249e:	add.w	r3, r9, #96	; 0x60
   224a2:	vmov	s19, r1
   224a6:	ldr.w	r1, [pc, #1452]	; 22a54 <btrfs_reserve_extent@@Base+0x918>
   224aa:	vmov	s17, r3
   224ae:	movs	r3, #0
   224b0:	add	r1, pc
   224b2:	vmov	s20, r1
   224b6:	add	r1, sp, #200	; 0xc8
   224b8:	strd	r2, r3, [sp]
   224bc:	str	r1, [sp, #16]
   224be:	mov	r0, r9
   224c0:	add	r1, sp, #204	; 0xcc
   224c2:	str	r1, [sp, #12]
   224c4:	add	r1, sp, #196	; 0xc4
   224c6:	str	r1, [sp, #8]
   224c8:	ldrd	r2, r3, [r4, #40]	; 0x28
   224cc:	bl	296fe <btrfs_rmap_block@@Base>
   224d0:	vmov	r2, s18
   224d4:	vmov	r1, s19
   224d8:	movs	r3, #71	; 0x47
   224da:	str	r0, [sp, #0]
   224dc:	vmov	r0, s20
   224e0:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   224e4:	ldr	r3, [sp, #204]	; 0xcc
   224e6:	ldr	r0, [sp, #196]	; 0xc4
   224e8:	subs	r2, r3, #1
   224ea:	str	r2, [sp, #204]	; 0xcc
   224ec:	cmp	r3, #0
   224ee:	bne.w	22770 <btrfs_reserve_extent@@Base+0x634>
   224f2:	blx	83f0 <free@plt+0x4>
   224f6:	cmp.w	r8, #36	; 0x24
   224fa:	bne.w	22750 <btrfs_reserve_extent@@Base+0x614>
   224fe:	movs	r3, #1
   22500:	str	r3, [r4, #104]	; 0x68
   22502:	mov	r0, r6
   22504:	bl	17e7e <btrfs_free_path@@Base>
   22508:	ldr	r3, [r4, #108]	; 0x6c
   2250a:	cmp	r3, #0
   2250c:	bne.w	2282a <btrfs_reserve_extent@@Base+0x6ee>
   22510:	ldr	r2, [sp, #40]	; 0x28
   22512:	ldrd	r3, r1, [r4, #96]	; 0x60
   22516:	mov.w	r9, r2, asr #31
   2251a:	ands	r3, r2
   2251c:	and.w	r1, r9, r1
   22520:	str	r3, [sp, #128]	; 0x80
   22522:	str	r1, [sp, #132]	; 0x84
   22524:	ldrd	r0, r1, [sp, #128]	; 0x80
   22528:	cmp	r9, r1
   2252a:	it	eq
   2252c:	cmpeq	r2, r0
   2252e:	bne.w	2282a <btrfs_reserve_extent@@Base+0x6ee>
   22532:	ldrd	r2, r3, [r4, #40]	; 0x28
   22536:	movs	r6, #1
   22538:	strd	r2, r3, [sp, #32]
   2253c:	ldrd	r0, r1, [sp, #32]
   22540:	ldrd	r2, r3, [sp, #48]	; 0x30
   22544:	cmp	r1, r3
   22546:	it	eq
   22548:	cmpeq	r0, r2
   2254a:	it	cc
   2254c:	strdcc	r2, r3, [sp, #32]
   22550:	add	r3, sp, #216	; 0xd8
   22552:	str	r3, [sp, #96]	; 0x60
   22554:	ldr	r3, [sp, #44]	; 0x2c
   22556:	ldr.w	r0, [r3, #464]	; 0x1d0
   2255a:	ldr	r3, [sp, #96]	; 0x60
   2255c:	adds	r0, #96	; 0x60
   2255e:	str	r6, [sp, #8]
   22560:	str	r3, [sp, #4]
   22562:	add	r3, sp, #208	; 0xd0
   22564:	str	r3, [sp, #0]
   22566:	ldrd	r2, r3, [sp, #32]
   2256a:	bl	16b18 <find_first_extent_bit@@Base>
   2256e:	cmp	r0, #0
   22570:	bne.w	2282a <btrfs_reserve_extent@@Base+0x6ee>
   22574:	ldrd	r0, r1, [sp, #32]
   22578:	ldrd	r2, r3, [sp, #208]	; 0xd0
   2257c:	ldrd	r8, r9, [sp, #104]	; 0x68
   22580:	cmp	r3, r1
   22582:	it	eq
   22584:	cmpeq	r2, r0
   22586:	it	cc
   22588:	movcc	r3, r1
   2258a:	ldr	r1, [sp, #216]	; 0xd8
   2258c:	it	cc
   2258e:	movcc	r2, r0
   22590:	strd	r2, r3, [sp, #208]	; 0xd0
   22594:	adds	r1, #1
   22596:	str	r1, [sp, #32]
   22598:	ldr	r1, [sp, #220]	; 0xdc
   2259a:	adc.w	r1, r1, #0
   2259e:	str	r1, [sp, #36]	; 0x24
   225a0:	ldr	r1, [sp, #32]
   225a2:	subs	r1, r1, r2
   225a4:	str	r1, [sp, #136]	; 0x88
   225a6:	ldr	r1, [sp, #36]	; 0x24
   225a8:	sbc.w	r1, r1, r3
   225ac:	str	r1, [sp, #140]	; 0x8c
   225ae:	ldrd	r0, r1, [sp, #136]	; 0x88
   225b2:	cmp	r1, r9
   225b4:	it	eq
   225b6:	cmpeq	r0, r8
   225b8:	bcc.n	22554 <btrfs_reserve_extent@@Base+0x418>
   225ba:	ldr	r1, [sp, #104]	; 0x68
   225bc:	adds	r1, r2, r1
   225be:	str	r1, [sp, #144]	; 0x90
   225c0:	ldr	r1, [sp, #108]	; 0x6c
   225c2:	adc.w	r1, r3, r1
   225c6:	str	r1, [sp, #148]	; 0x94
   225c8:	ldrd	r1, r0, [r4, #40]	; 0x28
   225cc:	ldr.w	r6, [r4, #49]	; 0x31
   225d0:	ldr.w	ip, [r4, #53]	; 0x35
   225d4:	adds	r1, r6, r1
   225d6:	str	r1, [sp, #152]	; 0x98
   225d8:	adc.w	r1, ip, r0
   225dc:	str	r1, [sp, #156]	; 0x9c
   225de:	ldrd	r0, r1, [sp, #152]	; 0x98
   225e2:	ldrd	r8, r9, [sp, #144]	; 0x90
   225e6:	cmp	r1, r9
   225e8:	it	eq
   225ea:	cmpeq	r0, r8
   225ec:	bcc.w	2282a <btrfs_reserve_extent@@Base+0x6ee>
   225f0:	adds.w	r1, sl, r2
   225f4:	str	r2, [r7, #0]
   225f6:	str	r1, [sp, #64]	; 0x40
   225f8:	adc.w	r1, fp, r3
   225fc:	str	r3, [r7, #4]
   225fe:	str.w	sl, [r7, #9]
   22602:	str.w	fp, [r7, #13]
   22606:	str	r1, [sp, #68]	; 0x44
   22608:	ldr.w	r0, [r4, #53]	; 0x35
   2260c:	ldr.w	r1, [r4, #49]	; 0x31
   22610:	ldrd	r6, r4, [r4, #40]	; 0x28
   22614:	ldrd	r8, r9, [sp, #64]	; 0x40
   22618:	adds	r1, r1, r6
   2261a:	str	r1, [sp, #24]
   2261c:	adc.w	r1, r0, r4
   22620:	str	r1, [sp, #28]
   22622:	ldrd	r0, r1, [sp, #24]
   22626:	cmp	r1, r9
   22628:	it	eq
   2262a:	cmpeq	r0, r8
   2262c:	bcc.w	227d8 <btrfs_reserve_extent@@Base+0x69c>
   22630:	movs	r1, #8
   22632:	movs	r0, #0
   22634:	strd	r1, r0, [sp, #8]
   22638:	ldr	r1, [sp, #64]	; 0x40
   2263a:	adds.w	r0, r1, #4294967295	; 0xffffffff
   2263e:	ldr	r1, [sp, #68]	; 0x44
   22640:	adc.w	r1, r1, #4294967295	; 0xffffffff
   22644:	strd	r0, r1, [sp]
   22648:	vmov	r1, s16
   2264c:	add.w	r0, r1, #192	; 0xc0
   22650:	bl	16b5a <test_range_bit@@Base>
   22654:	cmp	r0, #0
   22656:	beq.w	2286a <btrfs_reserve_extent@@Base+0x72e>
   2265a:	ldr	r3, [r7, #0]
   2265c:	ldr	r2, [r7, #4]
   2265e:	adds.w	r3, r3, sl
   22662:	str	r3, [sp, #24]
   22664:	adc.w	r3, r2, fp
   22668:	str	r3, [sp, #28]
   2266a:	b.n	227d8 <btrfs_reserve_extent@@Base+0x69c>
   2266c:	ldrb.w	r3, [r5, #364]	; 0x16c
   22670:	lsls	r4, r3, #31
   22672:	bmi.n	2267a <btrfs_reserve_extent@@Base+0x53e>
   22674:	ldr	r3, [r5, #32]
   22676:	cmp	r3, r6
   22678:	bne.n	2268a <btrfs_reserve_extent@@Base+0x54e>
   2267a:	ldrd	r3, r4, [r5, #264]	; 0x108
   2267e:	ldrd	r1, r2, [r5, #288]	; 0x120
   22682:	ands	r3, r1
   22684:	orr.w	r3, r3, #2
   22688:	b.n	22190 <btrfs_reserve_extent@@Base+0x54>
   2268a:	ldrd	r3, r4, [r5, #256]	; 0x100
   2268e:	ldrd	r1, r2, [r5, #280]	; 0x118
   22692:	ands	r3, r1
   22694:	orr.w	r3, r3, #4
   22698:	b.n	22190 <btrfs_reserve_extent@@Base+0x54>
   2269a:	ldr	r3, [sp, #40]	; 0x28
   2269c:	mov	r2, r8
   2269e:	ldr	r1, [sp, #60]	; 0x3c
   226a0:	str	r3, [sp, #0]
   226a2:	mov	r3, r9
   226a4:	ldr	r1, [r1, #56]	; 0x38
   226a6:	b.n	222ca <btrfs_reserve_extent@@Base+0x18e>
   226a8:	vmov	r1, s18
   226ac:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   226b0:	ldrd	r8, r9, [sp, #224]	; 0xe0
   226b4:	ldrd	r0, r1, [r4, #40]	; 0x28
   226b8:	cmp	r9, r1
   226ba:	it	eq
   226bc:	cmpeq	r8, r0
   226be:	bcc.n	22734 <btrfs_reserve_extent@@Base+0x5f8>
   226c0:	ldr.w	ip, [r4, #49]	; 0x31
   226c4:	ldr.w	lr, [r4, #53]	; 0x35
   226c8:	adds.w	r3, ip, r0
   226cc:	str	r3, [sp, #120]	; 0x78
   226ce:	adc.w	r3, lr, r1
   226d2:	str	r3, [sp, #124]	; 0x7c
   226d4:	ldrd	r2, r3, [sp, #120]	; 0x78
   226d8:	cmp	r9, r3
   226da:	it	eq
   226dc:	cmpeq	r8, r2
   226de:	bcs.w	2243e <btrfs_reserve_extent@@Base+0x302>
   226e2:	ldrb.w	r1, [sp, #232]	; 0xe8
   226e6:	adds	r1, #88	; 0x58
   226e8:	uxtb	r1, r1
   226ea:	cmp	r1, #1
   226ec:	bhi.n	22734 <btrfs_reserve_extent@@Base+0x5f8>
   226ee:	ldrd	r2, r3, [sp, #32]
   226f2:	cmp	r3, r9
   226f4:	it	eq
   226f6:	cmpeq	r2, r8
   226f8:	bcs.n	22712 <btrfs_reserve_extent@@Base+0x5d6>
   226fa:	adds.w	r2, r8, #4294967295	; 0xffffffff
   226fe:	vmov	r0, s17
   22702:	adc.w	r3, r9, #4294967295	; 0xffffffff
   22706:	strd	r2, r3, [sp]
   2270a:	ldrd	r2, r3, [sp, #32]
   2270e:	bl	16ae8 <set_extent_dirty@@Base>
   22712:	ldrb.w	r1, [sp, #232]	; 0xe8
   22716:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2271a:	cmp	r1, #169	; 0xa9
   2271c:	bne.n	2273c <btrfs_reserve_extent@@Base+0x600>
   2271e:	ldr	r1, [sp, #96]	; 0x60
   22720:	ldr.w	r1, [r1, #464]	; 0x1d0
   22724:	ldr.w	r1, [r1, #384]	; 0x180
   22728:	adds.w	r8, r2, r1
   2272c:	adc.w	r9, r3, #0
   22730:	strd	r8, r9, [sp, #32]
   22734:	ldr	r3, [r6, #32]
   22736:	adds	r3, #1
   22738:	str	r3, [r6, #32]
   2273a:	b.n	22418 <btrfs_reserve_extent@@Base+0x2dc>
   2273c:	ldr.w	r1, [sp, #233]	; 0xe9
   22740:	ldr.w	r0, [sp, #237]	; 0xed
   22744:	adds	r1, r1, r2
   22746:	str	r1, [sp, #32]
   22748:	adc.w	r3, r0, r3
   2274c:	str	r3, [sp, #36]	; 0x24
   2274e:	b.n	22734 <btrfs_reserve_extent@@Base+0x5f8>
   22750:	mov.w	r2, #16384	; 0x4000
   22754:	sub.w	r3, r8, #32
   22758:	rsb	r1, r8, #32
   2275c:	lsl.w	r3, r2, r3
   22760:	lsr.w	r1, r2, r1
   22764:	lsl.w	r2, r2, r8
   22768:	orrs	r3, r1
   2276a:	add.w	r8, r8, #12
   2276e:	b.n	224b6 <btrfs_reserve_extent@@Base+0x37a>
   22770:	add.w	r0, r0, r2, lsl #3
   22774:	ldrd	ip, r3, [r0]
   22778:	ldr	r0, [sp, #200]	; 0xc8
   2277a:	asrs	r2, r0, #31
   2277c:	mov	r1, r0
   2277e:	strd	r1, r2, [sp, #32]
   22782:	mov	r2, ip
   22784:	ldr	r1, [sp, #32]
   22786:	adds.w	r0, r1, #4294967295	; 0xffffffff
   2278a:	ldr	r1, [sp, #36]	; 0x24
   2278c:	adc.w	r1, r1, #4294967295	; 0xffffffff
   22790:	adds.w	r0, r0, ip
   22794:	adc.w	r1, r3, r1
   22798:	strd	r0, r1, [sp]
   2279c:	vmov	r0, s17
   227a0:	bl	16b00 <clear_extent_dirty@@Base>
   227a4:	b.n	224e4 <btrfs_reserve_extent@@Base+0x3a8>
   227a6:	ldrd	r3, r4, [sp, #48]	; 0x30
   227aa:	strd	r3, r4, [sp, #24]
   227ae:	ldr	r1, [sp, #44]	; 0x2c
   227b0:	ldrd	r2, r3, [sp, #48]	; 0x30
   227b4:	ldr.w	r0, [r1, #464]	; 0x1d0
   227b8:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   227bc:	cbnz	r0, 227d8 <btrfs_reserve_extent@@Base+0x69c>
   227be:	ldr	r2, [sp, #168]	; 0xa8
   227c0:	ldr	r3, [pc, #660]	; (22a58 <btrfs_reserve_extent@@Base+0x91c>)
   227c2:	ldr	r3, [r2, r3]
   227c4:	ldrd	r1, r2, [sp, #48]	; 0x30
   227c8:	strd	r1, r2, [sp]
   227cc:	movs	r1, #1
   227ce:	ldr	r2, [pc, #652]	; (22a5c <btrfs_reserve_extent@@Base+0x920>)
   227d0:	ldr	r0, [r3, #0]
   227d2:	add	r2, pc
   227d4:	blx	881c <__fprintf_chk@plt+0x4>
   227d8:	vmov	r0, s16
   227dc:	ldrd	r2, r3, [sp, #24]
   227e0:	bl	1ee30 <btrfs_lookup_first_block_group@@Base>
   227e4:	mov	r1, r0
   227e6:	cmp	r0, #0
   227e8:	bne.w	229f4 <btrfs_reserve_extent@@Base+0x8b8>
   227ec:	ldr	r3, [sp, #100]	; 0x64
   227ee:	cmp	r3, #0
   227f0:	bne.w	22a08 <btrfs_reserve_extent@@Base+0x8cc>
   227f4:	ldr	r3, [sp, #56]	; 0x38
   227f6:	cmp	r3, #0
   227f8:	beq.w	229fc <btrfs_reserve_extent@@Base+0x8c0>
   227fc:	ldr	r6, [sp, #56]	; 0x38
   227fe:	movs	r4, #0
   22800:	ldr	r3, [sp, #112]	; 0x70
   22802:	ldr	r2, [sp, #172]	; 0xac
   22804:	subs	r3, r3, r2
   22806:	str	r3, [sp, #112]	; 0x70
   22808:	movs	r3, #0
   2280a:	strd	r3, r4, [sp, #24]
   2280e:	ldr	r3, [sp, #40]	; 0x28
   22810:	ldr	r0, [sp, #44]	; 0x2c
   22812:	str	r3, [sp, #0]
   22814:	ldrd	r2, r3, [sp, #24]
   22818:	ldr.w	r0, [r0, #464]	; 0x1d0
   2281c:	bl	1f1c0 <btrfs_lookup_block_group@@Base+0x30c>
   22820:	ldr	r3, [sp, #56]	; 0x38
   22822:	str	r6, [sp, #56]	; 0x38
   22824:	str	r3, [sp, #100]	; 0x64
   22826:	mov	r4, r0
   22828:	b.n	22300 <btrfs_reserve_extent@@Base+0x1c4>
   2282a:	ldr.w	r3, [r4, #49]	; 0x31
   2282e:	ldrd	r1, r0, [r4, #40]	; 0x28
   22832:	ldr.w	r2, [r4, #53]	; 0x35
   22836:	adds	r3, r3, r1
   22838:	str	r3, [sp, #24]
   2283a:	adc.w	r3, r2, r0
   2283e:	str	r3, [sp, #28]
   22840:	ldr	r1, [sp, #44]	; 0x2c
   22842:	ldrd	r2, r3, [sp, #24]
   22846:	ldr.w	r0, [r1, #464]	; 0x1d0
   2284a:	bl	1ee30 <btrfs_lookup_first_block_group@@Base>
   2284e:	mov	r4, r0
   22850:	cmp	r0, #0
   22852:	bne.w	2237a <btrfs_reserve_extent@@Base+0x23e>
   22856:	ldr	r3, [sp, #116]	; 0x74
   22858:	cmp	r3, #0
   2285a:	bne.n	227ae <btrfs_reserve_extent@@Base+0x672>
   2285c:	movs	r3, #1
   2285e:	str	r3, [sp, #116]	; 0x74
   22860:	ldrd	r3, r4, [sp, #48]	; 0x30
   22864:	strd	r3, r4, [sp, #24]
   22868:	b.n	22840 <btrfs_reserve_extent@@Base+0x704>
   2286a:	ldr	r2, [r7, #0]
   2286c:	movs	r6, #1
   2286e:	ldr	r3, [r7, #4]
   22870:	adds.w	r1, r2, #4294967295	; 0xffffffff
   22874:	str	r0, [sp, #12]
   22876:	adc.w	r0, r3, #4294967295	; 0xffffffff
   2287a:	adds.w	r1, r1, sl
   2287e:	adc.w	r0, r0, fp
   22882:	strd	r1, r0, [sp]
   22886:	vmov	r1, s16
   2288a:	str	r6, [sp, #8]
   2288c:	add.w	r0, r1, #160	; 0xa0
   22890:	bl	16b5a <test_range_bit@@Base>
   22894:	mov	r4, r0
   22896:	cmp	r0, #0
   22898:	bne.w	2265a <btrfs_reserve_extent@@Base+0x51e>
   2289c:	vmov	r3, s16
   228a0:	ldr.w	r0, [r3, #224]	; 0xe0
   228a4:	cbz	r0, 228cc <btrfs_reserve_extent@@Base+0x790>
   228a6:	ldr	r2, [r7, #0]
   228a8:	ldr	r3, [r7, #4]
   228aa:	adds.w	r1, r2, #4294967295	; 0xffffffff
   228ae:	strd	r6, r4, [sp, #8]
   228b2:	adc.w	r6, r3, #4294967295	; 0xffffffff
   228b6:	adds.w	r1, r1, sl
   228ba:	adc.w	r6, r6, fp
   228be:	strd	r1, r6, [sp]
   228c2:	bl	16b5a <test_range_bit@@Base>
   228c6:	cmp	r0, #0
   228c8:	bne.w	2265a <btrfs_reserve_extent@@Base+0x51e>
   228cc:	ldrd	r2, r3, [sp, #88]	; 0x58
   228d0:	ldr.w	r8, [r7]
   228d4:	orrs	r3, r2
   228d6:	ldr.w	r9, [r7, #4]
   228da:	beq.n	22916 <btrfs_reserve_extent@@Base+0x7da>
   228dc:	adds.w	r3, sl, r8
   228e0:	str	r3, [sp, #160]	; 0xa0
   228e2:	adc.w	r3, fp, r9
   228e6:	str	r3, [sp, #164]	; 0xa4
   228e8:	ldrd	r0, r1, [sp, #160]	; 0xa0
   228ec:	ldrd	r2, r3, [sp, #80]	; 0x50
   228f0:	cmp	r3, r1
   228f2:	it	eq
   228f4:	cmpeq	r2, r0
   228f6:	bcs.n	22916 <btrfs_reserve_extent@@Base+0x7da>
   228f8:	ldr	r2, [sp, #88]	; 0x58
   228fa:	ldr	r3, [sp, #80]	; 0x50
   228fc:	adds	r3, r3, r2
   228fe:	ldr	r2, [sp, #92]	; 0x5c
   22900:	str	r3, [sp, #24]
   22902:	ldr	r3, [sp, #84]	; 0x54
   22904:	adcs	r3, r2
   22906:	str	r3, [sp, #28]
   22908:	ldrd	r2, r3, [sp, #24]
   2290c:	cmp	r9, r3
   2290e:	it	eq
   22910:	cmpeq	r8, r2
   22912:	bcc.w	227d8 <btrfs_reserve_extent@@Base+0x69c>
   22916:	ldr	r3, [sp, #40]	; 0x28
   22918:	lsls	r3, r3, #31
   2291a:	bmi.n	229b8 <btrfs_reserve_extent@@Base+0x87c>
   2291c:	vmov	r0, s16
   22920:	mov	r2, r8
   22922:	mov	r3, r9
   22924:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   22928:	cmp	r0, #0
   2292a:	beq.n	229a6 <btrfs_reserve_extent@@Base+0x86a>
   2292c:	ldrd	r3, r6, [r0, #40]	; 0x28
   22930:	ldr	r1, [sp, #184]	; 0xb8
   22932:	subs.w	ip, r8, r3
   22936:	ldr	r2, [r7, #0]
   22938:	sbc.w	r6, r9, r6
   2293c:	ldr	r3, [r7, #4]
   2293e:	mov.w	r8, ip, lsr #16
   22942:	adds.w	ip, r1, ip
   22946:	ldr	r1, [sp, #188]	; 0xbc
   22948:	orr.w	r8, r8, r6, lsl #16
   2294c:	mov.w	r9, r6, lsr #16
   22950:	mov.w	r0, ip, lsr #16
   22954:	adc.w	r6, r1, r6
   22958:	lsrs	r1, r6, #16
   2295a:	orr.w	r0, r0, r6, lsl #16
   2295e:	cmp	r9, r1
   22960:	it	eq
   22962:	cmpeq	r8, r0
   22964:	beq.n	229a6 <btrfs_reserve_extent@@Base+0x86a>
   22966:	vmov	r0, s16
   2296a:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   2296e:	cbz	r0, 229a6 <btrfs_reserve_extent@@Base+0x86a>
   22970:	ldr	r3, [r7, #0]
   22972:	ldrd	r2, r1, [r0, #40]	; 0x28
   22976:	ldr	r0, [r7, #4]
   22978:	adds.w	r3, r3, #4294967295	; 0xffffffff
   2297c:	adc.w	r0, r0, #4294967295	; 0xffffffff
   22980:	adds.w	r3, r3, sl
   22984:	adc.w	r0, r0, fp
   22988:	subs	r3, r3, r2
   2298a:	sbc.w	r0, r0, r1
   2298e:	adds	r2, #1
   22990:	mvn.w	r3, r3, lsr #16
   22994:	adc.w	r1, r1, #0
   22998:	mvn.w	r3, r3, lsl #16
   2299c:	adds	r3, r3, r2
   2299e:	str	r3, [sp, #24]
   229a0:	adc.w	r3, r0, r1
   229a4:	b.n	22668 <btrfs_reserve_extent@@Base+0x52c>
   229a6:	vmov	r0, s16
   229aa:	ldr	r2, [r7, #0]
   229ac:	ldr	r3, [r7, #4]
   229ae:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   229b2:	cbz	r0, 229b8 <btrfs_reserve_extent@@Base+0x87c>
   229b4:	ldr	r3, [sp, #60]	; 0x3c
   229b6:	str	r0, [r3, #56]	; 0x38
   229b8:	ldr	r2, [r7, #0]
   229ba:	ldr	r3, [r7, #4]
   229bc:	adds.w	r1, r2, #4294967295	; 0xffffffff
   229c0:	str.w	sl, [r7, #9]
   229c4:	adc.w	r0, r3, #4294967295	; 0xffffffff
   229c8:	adds.w	r1, r1, sl
   229cc:	adc.w	r0, r0, fp
   229d0:	str.w	fp, [r7, #13]
   229d4:	strd	r1, r0, [sp]
   229d8:	add.w	r0, r5, #96	; 0x60
   229dc:	bl	16b00 <clear_extent_dirty@@Base>
   229e0:	ldr	r2, [pc, #124]	; (22a60 <btrfs_reserve_extent@@Base+0x924>)
   229e2:	ldr	r3, [pc, #64]	; (22a24 <btrfs_reserve_extent@@Base+0x8e8>)
   229e4:	add	r2, pc
   229e6:	ldr	r3, [r2, r3]
   229e8:	ldr	r2, [r3, #0]
   229ea:	ldr	r3, [sp, #244]	; 0xf4
   229ec:	eors	r2, r3
   229ee:	beq.n	22a0e <btrfs_reserve_extent@@Base+0x8d2>
   229f0:	blx	84cc <__stack_chk_fail@plt>
   229f4:	ldr	r3, [sp, #100]	; 0x64
   229f6:	ldr	r6, [sp, #56]	; 0x38
   229f8:	str	r3, [sp, #56]	; 0x38
   229fa:	b.n	2280e <btrfs_reserve_extent@@Base+0x6d2>
   229fc:	movs	r3, #0
   229fe:	movs	r4, #0
   22a00:	movs	r6, #1
   22a02:	strd	r3, r4, [sp, #24]
   22a06:	b.n	2280e <btrfs_reserve_extent@@Base+0x6d2>
   22a08:	mvn.w	r4, #27
   22a0c:	b.n	229e0 <btrfs_reserve_extent@@Base+0x8a4>
   22a0e:	mov	r0, r4
   22a10:	add	sp, #252	; 0xfc
   22a12:	vpop	{d8-d10}
   22a16:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a1a:	nop
   22a1c:	cmp	r4, #54	; 0x36
   22a1e:	movs	r4, r0
   22a20:	cmp	r4, #50	; 0x32
   22a22:	movs	r4, r0
   22a24:	lsls	r4, r4, #8
   22a26:	movs	r0, r0
   22a28:	itte	al
   22a2a:	moval	r1, r0
   22a2c:			; <UNDEFINED> instruction: 0xb8af
   22a2e:	mov<und>	r1, r0
   22a30:	strh	r7, [r1, #42]	; 0x2a
   22a32:	movs	r1, r0
   22a34:	nop	{11}
   22a36:	movs	r1, r0
   22a38:			; <UNDEFINED> instruction: 0xb879
   22a3a:	movs	r1, r0
   22a3c:	strh	r1, [r3, #40]	; 0x28
   22a3e:	movs	r1, r0
   22a40:	itt	hi
   22a42:	movhi	r1, r0
   22a44:			; <UNDEFINED> instruction: 0xb84b
   22a46:	movs	r1, r0
   22a48:	bkpt	0x000f
   22a4a:	movs	r1, r0
   22a4c:	bkpt	0x00ce
   22a4e:	movs	r1, r0
   22a50:	push	{r0, r1, r2, r3, r5, r6, r7, lr}
   22a52:	movs	r1, r0
   22a54:	strh	r3, [r0, #20]
   22a56:	movs	r1, r0
   22a58:	lsls	r4, r6, #8
   22a5a:	movs	r0, r0
   22a5c:			; <UNDEFINED> instruction: 0xb89c
   22a5e:	movs	r1, r0
   22a60:	movs	r3, #164	; 0xa4
   22a62:	movs	r4, r0

00022a64 <btrfs_alloc_free_block@@Base>:
   22a64:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22a68:	mov	r4, r2
   22a6a:	ldr	r2, [pc, #600]	; (22cc4 <btrfs_alloc_free_block@@Base+0x260>)
   22a6c:	sub	sp, #84	; 0x54
   22a6e:	ldr	r3, [pc, #600]	; (22cc8 <btrfs_alloc_free_block@@Base+0x264>)
   22a70:	mov	r7, r0
   22a72:	add	r2, pc
   22a74:	ldr.w	r8, [r1, #464]	; 0x1d0
   22a78:	movs	r0, #32
   22a7a:	ldrd	r9, sl, [sp, #128]	; 0x80
   22a7e:	ldr	r3, [r2, r3]
   22a80:	mov	r6, r1
   22a82:	mov.w	fp, #0
   22a86:	ldr	r3, [r3, #0]
   22a88:	str	r3, [sp, #76]	; 0x4c
   22a8a:	mov.w	r3, #0
   22a8e:	ldr.w	r3, [r8, #308]	; 0x134
   22a92:	ldr.w	r2, [r3, #188]	; 0xbc
   22a96:	str	r2, [sp, #48]	; 0x30
   22a98:	ldr.w	r3, [r3, #192]	; 0xc0
   22a9c:	str	r3, [sp, #52]	; 0x34
   22a9e:	blx	8634 <malloc@plt+0x4>
   22aa2:	mov	r5, r0
   22aa4:	cmp	r0, #0
   22aa6:	beq.w	22ca8 <btrfs_alloc_free_block@@Base+0x244>
   22aaa:	mov	r0, r8
   22aac:	movs	r2, #4
   22aae:	movs	r3, #0
   22ab0:	bl	1e544 <btrfs_create_tree@@Base+0x1c8>
   22ab4:	mov	r8, r0
   22ab6:	cbnz	r0, 22afc <btrfs_alloc_free_block@@Base+0x98>
   22ab8:	ldr	r0, [pc, #528]	; (22ccc <btrfs_alloc_free_block@@Base+0x268>)
   22aba:	mvn.w	r4, #116	; 0x74
   22abe:	add	r0, pc
   22ac0:	bl	1747c <__btrfs_error@@Base>
   22ac4:	ldr	r2, [pc, #520]	; (22cd0 <btrfs_alloc_free_block@@Base+0x26c>)
   22ac6:	cmp	r4, #0
   22ac8:	ldr	r1, [pc, #520]	; (22cd4 <btrfs_alloc_free_block@@Base+0x270>)
   22aca:	ldr	r0, [pc, #524]	; (22cd8 <btrfs_alloc_free_block@@Base+0x274>)
   22acc:	add	r2, pc
   22ace:	ite	le
   22ad0:	movle	r3, #0
   22ad2:	movgt	r3, #1
   22ad4:	addw	r2, r2, #683	; 0x2ab
   22ad8:	str	r3, [sp, #0]
   22ada:	add	r1, pc
   22adc:	add	r0, pc
   22ade:	movw	r3, #2559	; 0x9ff
   22ae2:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   22ae6:	ldr	r2, [pc, #500]	; (22cdc <btrfs_alloc_free_block@@Base+0x278>)
   22ae8:	ldr	r3, [pc, #476]	; (22cc8 <btrfs_alloc_free_block@@Base+0x264>)
   22aea:	add	r2, pc
   22aec:	ldr	r3, [r2, r3]
   22aee:	ldr	r2, [r3, #0]
   22af0:	ldr	r3, [sp, #76]	; 0x4c
   22af2:	eors	r2, r3
   22af4:	beq.w	22cba <btrfs_alloc_free_block@@Base+0x256>
   22af8:	blx	84cc <__stack_chk_fail@plt>
   22afc:	add	r3, sp, #56	; 0x38
   22afe:	mov.w	r2, #4294967295	; 0xffffffff
   22b02:	str	r3, [sp, #24]
   22b04:	mov.w	r3, #4294967295	; 0xffffffff
   22b08:	strd	r2, r3, [sp, #16]
   22b0c:	mov	r1, r6
   22b0e:	ldrd	r2, r3, [sp, #136]	; 0x88
   22b12:	mov	r0, r7
   22b14:	str.w	fp, [sp, #28]
   22b18:	strd	r2, r3, [sp, #8]
   22b1c:	ldrd	r2, r3, [sp, #144]	; 0x90
   22b20:	strd	r2, r3, [sp]
   22b24:	mov	r2, r4
   22b26:	mov	r3, fp
   22b28:	bl	2213c <btrfs_reserve_extent@@Base>
   22b2c:	subs	r4, r0, #0
   22b2e:	blt.n	22ac4 <btrfs_alloc_free_block@@Base+0x60>
   22b30:	cmp.w	r9, #0
   22b34:	beq.w	22c9c <btrfs_alloc_free_block@@Base+0x238>
   22b38:	add.w	r2, r9, #16
   22b3c:	mov	r3, r5
   22b3e:	ldr.w	r1, [r9], #4
   22b42:	cmp	r9, r2
   22b44:	str.w	r1, [r3], #4
   22b48:	bne.n	22b3e <btrfs_alloc_free_block@@Base+0xda>
   22b4a:	ldrb.w	r2, [r9]
   22b4e:	strb	r2, [r3, #0]
   22b50:	movs	r2, #0
   22b52:	movs	r3, #0
   22b54:	strd	r2, r3, [r5, #24]
   22b58:	movs	r1, #0
   22b5a:	ldr	r3, [sp, #48]	; 0x30
   22b5c:	ldr	r2, [sp, #52]	; 0x34
   22b5e:	strb	r1, [r5, #20]
   22b60:	lsrs	r3, r3, #8
   22b62:	strb.w	sl, [r5, #17]
   22b66:	orr.w	r3, r3, r2, lsl #24
   22b6a:	eor.w	r3, r3, #1
   22b6e:	and.w	r3, r3, #1
   22b72:	strb	r3, [r5, #18]
   22b74:	movs	r3, #1
   22b76:	strb	r3, [r5, #19]
   22b78:	ldr.w	r3, [r6, #464]	; 0x1d0
   22b7c:	ldr.w	r4, [sp, #65]	; 0x41
   22b80:	ldr.w	fp, [sp, #69]	; 0x45
   22b84:	ldr.w	r3, [r3, #308]	; 0x134
   22b88:	ldr.w	r0, [r3, #188]	; 0xbc
   22b8c:	mov	r3, r1
   22b8e:	and.w	r2, r0, #256	; 0x100
   22b92:	orrs	r3, r2
   22b94:	beq.n	22ba8 <btrfs_alloc_free_block@@Base+0x144>
   22b96:	mov	r2, sl
   22b98:	str.w	sl, [sp, #65]	; 0x41
   22b9c:	asrs	r3, r2, #31
   22b9e:	str.w	r3, [sp, #69]	; 0x45
   22ba2:	movs	r3, #169	; 0xa9
   22ba4:	strb.w	r3, [sp, #64]	; 0x40
   22ba8:	ldrd	r2, r3, [sp, #120]	; 0x78
   22bac:	cmp	r3, #0
   22bae:	it	eq
   22bb0:	cmpeq	r2, #2
   22bb2:	bne.n	22bf2 <btrfs_alloc_free_block@@Base+0x18e>
   22bb4:	ldrd	r2, r3, [sp, #56]	; 0x38
   22bb8:	movs	r1, #8
   22bba:	str	r1, [sp, #8]
   22bbc:	adds	r1, r2, r4
   22bbe:	adc.w	ip, r3, fp
   22bc2:	adds.w	r1, r1, #4294967295	; 0xffffffff
   22bc6:	adc.w	r0, ip, #4294967295	; 0xffffffff
   22bca:	strd	r1, r0, [sp]
   22bce:	ldr	r1, [r7, #0]
   22bd0:	add.w	r0, r1, #192	; 0xc0
   22bd4:	bl	168bc <set_extent_bits@@Base>
   22bd8:	ldr	r2, [pc, #260]	; (22ce0 <btrfs_alloc_free_block@@Base+0x27c>)
   22bda:	ldr	r1, [pc, #264]	; (22ce4 <btrfs_alloc_free_block@@Base+0x280>)
   22bdc:	movw	r3, #2530	; 0x9e2
   22be0:	add	r2, pc
   22be2:	addw	r2, r2, #666	; 0x29a
   22be6:	add	r1, pc
   22be8:	str	r0, [sp, #0]
   22bea:	ldr	r0, [pc, #252]	; (22ce8 <btrfs_alloc_free_block@@Base+0x284>)
   22bec:	add	r0, pc
   22bee:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   22bf2:	ldrd	r3, r2, [r8, #32]
   22bf6:	mov.w	r9, #0
   22bfa:	mov	r1, r7
   22bfc:	adds	r3, r3, r4
   22bfe:	adc.w	r2, r2, fp
   22c02:	strd	r3, r2, [r8, #32]
   22c06:	movs	r3, #0
   22c08:	strd	r3, r3, [sp, #36]	; 0x24
   22c0c:	movs	r3, #3
   22c0e:	strd	sl, r3, [sp, #24]
   22c12:	ldrd	r2, r3, [sp, #120]	; 0x78
   22c16:	mov.w	r8, #0
   22c1a:	strd	r4, fp, [sp]
   22c1e:	ldr.w	r0, [r6, #464]	; 0x1d0
   22c22:	strd	r2, r3, [sp, #16]
   22c26:	str	r5, [sp, #32]
   22c28:	ldrd	r2, r3, [sp, #56]	; 0x38
   22c2c:	strd	r8, r9, [sp, #8]
   22c30:	bl	23ef4 <btrfs_add_delayed_tree_ref@@Base>
   22c34:	mov	r4, r0
   22c36:	cmp	r0, #0
   22c38:	bne.w	22ac4 <btrfs_alloc_free_block@@Base+0x60>
   22c3c:	ldrd	r2, r3, [sp, #56]	; 0x38
   22c40:	ldr.w	r0, [r6, #464]	; 0x1d0
   22c44:	bl	1c22e <btrfs_find_create_tree_block@@Base>
   22c48:	mov	r4, r0
   22c4a:	cbnz	r0, 22cae <btrfs_alloc_free_block@@Base+0x24a>
   22c4c:	ldr.w	r2, [r6, #447]	; 0x1bf
   22c50:	mov	r1, r6
   22c52:	ldr.w	r3, [r6, #451]	; 0x1c3
   22c56:	mov.w	fp, sl, asr #31
   22c5a:	mov	r0, r7
   22c5c:	strd	r8, r9, [sp, #32]
   22c60:	strd	sl, fp, [sp, #24]
   22c64:	strd	r2, r3, [sp, #16]
   22c68:	ldr.w	r2, [sp, #65]	; 0x41
   22c6c:	ldr.w	r3, [sp, #69]	; 0x45
   22c70:	strd	r8, r9, [sp, #8]
   22c74:	strd	r2, r3, [sp]
   22c78:	ldrd	r2, r3, [sp, #56]	; 0x38
   22c7c:	bl	20c4c <btrfs_free_extent@@Base>
   22c80:	ldr	r2, [pc, #104]	; (22cec <btrfs_alloc_free_block@@Base+0x288>)
   22c82:	ldr	r1, [pc, #108]	; (22cf0 <btrfs_alloc_free_block@@Base+0x28c>)
   22c84:	movs	r3, #1
   22c86:	ldr	r0, [pc, #108]	; (22cf4 <btrfs_alloc_free_block@@Base+0x290>)
   22c88:	add	r2, pc
   22c8a:	str	r3, [sp, #0]
   22c8c:	addw	r2, r2, #683	; 0x2ab
   22c90:	add	r1, pc
   22c92:	add	r0, pc
   22c94:	movw	r3, #2567	; 0xa07
   22c98:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   22c9c:	movs	r2, #17
   22c9e:	mov	r1, r9
   22ca0:	mov	r0, r5
   22ca2:	blx	8780 <memset@plt+0x4>
   22ca6:	b.n	22b50 <btrfs_alloc_free_block@@Base+0xec>
   22ca8:	mvn.w	r4, #11
   22cac:	b.n	22ac4 <btrfs_alloc_free_block@@Base+0x60>
   22cae:	bl	1d678 <btrfs_set_buffer_uptodate@@Base>
   22cb2:	ldr	r3, [r7, #52]	; 0x34
   22cb4:	adds	r3, #1
   22cb6:	str	r3, [r7, #52]	; 0x34
   22cb8:	b.n	22ae6 <btrfs_alloc_free_block@@Base+0x82>
   22cba:	mov	r0, r4
   22cbc:	add	sp, #84	; 0x54
   22cbe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22cc2:	nop
   22cc4:	movs	r3, #22
   22cc6:	movs	r4, r0
   22cc8:	lsls	r4, r4, #8
   22cca:	movs	r0, r0
   22ccc:	push	{r0, r2, r4, r6, r7, lr}
   22cce:	movs	r1, r0
   22cd0:			; <UNDEFINED> instruction: 0xb6f0
   22cd2:	movs	r1, r0
   22cd4:	add	r7, sp, #708	; 0x2c4
   22cd6:	movs	r1, r0
   22cd8:	add	r1, pc, #708	; (adr r1, 22fa0 <btrfs_run_delayed_refs@@Base+0xbc>)
   22cda:	movs	r1, r0
   22cdc:	movs	r2, #158	; 0x9e
   22cde:	movs	r4, r0
   22ce0:	push	{r2, r3, r4, r6, r7, lr}
   22ce2:	movs	r1, r0
   22ce4:	add	r6, sp, #660	; 0x294
   22ce6:	movs	r1, r0
   22ce8:	ldrb	r7, [r0, #13]
   22cea:	movs	r1, r0
   22cec:	push	{r2, r4, r5, lr}
   22cee:	movs	r1, r0
   22cf0:	add	r5, sp, #1004	; 0x3ec
   22cf2:	movs	r1, r0
   22cf4:	cbz	r1, 22d0e <add_new_free_space@@Base+0x16>
   22cf6:	movs	r1, r0

00022cf8 <add_new_free_space@@Base>:
   22cf8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22cfc:	mov	r4, r2
   22cfe:	ldr	r2, [pc, #260]	; (22e04 <add_new_free_space@@Base+0x10c>)
   22d00:	mov	r5, r3
   22d02:	ldr	r3, [pc, #260]	; (22e08 <add_new_free_space@@Base+0x110>)
   22d04:	sub	sp, #44	; 0x2c
   22d06:	add	r2, pc
   22d08:	ldr.w	sl, [pc, #256]	; 22e0c <add_new_free_space@@Base+0x114>
   22d0c:	ldr.w	fp, [pc, #256]	; 22e10 <add_new_free_space@@Base+0x118>
   22d10:	movs	r6, #0
   22d12:	ldr	r3, [r2, r3]
   22d14:	add	sl, pc
   22d16:	addw	sl, sl, #706	; 0x2c2
   22d1a:	add	fp, pc
   22d1c:	ldr	r3, [r3, #0]
   22d1e:	str	r3, [sp, #36]	; 0x24
   22d20:	mov.w	r3, #0
   22d24:	mov	r8, r0
   22d26:	mov	r9, r1
   22d28:	mov	r7, r6
   22d2a:	ldrd	r2, r3, [sp, #80]	; 0x50
   22d2e:	cmp	r5, r3
   22d30:	it	eq
   22d32:	cmpeq	r4, r2
   22d34:	bcc.n	22d4a <add_new_free_space@@Base+0x52>
   22d36:	ldr	r2, [pc, #220]	; (22e14 <add_new_free_space@@Base+0x11c>)
   22d38:	ldr	r3, [pc, #204]	; (22e08 <add_new_free_space@@Base+0x110>)
   22d3a:	add	r2, pc
   22d3c:	ldr	r3, [r2, r3]
   22d3e:	ldr	r2, [r3, #0]
   22d40:	ldr	r3, [sp, #36]	; 0x24
   22d42:	eors	r2, r3
   22d44:	beq.n	22dfa <add_new_free_space@@Base+0x102>
   22d46:	blx	84cc <__stack_chk_fail@plt>
   22d4a:	movs	r3, #5
   22d4c:	add.w	r0, r9, #160	; 0xa0
   22d50:	str	r3, [sp, #8]
   22d52:	mov	r2, r4
   22d54:	add	r3, sp, #24
   22d56:	str	r3, [sp, #4]
   22d58:	add	r3, sp, #16
   22d5a:	str	r3, [sp, #0]
   22d5c:	mov	r3, r5
   22d5e:	bl	16b18 <find_first_extent_bit@@Base>
   22d62:	cbnz	r0, 22dbe <add_new_free_space@@Base+0xc6>
   22d64:	ldrd	r2, r3, [sp, #16]
   22d68:	cmp	r5, r3
   22d6a:	it	eq
   22d6c:	cmpeq	r4, r2
   22d6e:	mov	r0, r2
   22d70:	mov	r1, r3
   22d72:	bcc.n	22d80 <add_new_free_space@@Base+0x88>
   22d74:	ldr	r3, [sp, #24]
   22d76:	adds	r4, r3, #1
   22d78:	ldr	r3, [sp, #28]
   22d7a:	adc.w	r5, r3, #0
   22d7e:	b.n	22d2a <add_new_free_space@@Base+0x32>
   22d80:	ldrd	r2, r3, [sp, #80]	; 0x50
   22d84:	ldr.w	ip, [r8, #64]	; 0x40
   22d88:	cmp	r1, r3
   22d8a:	it	eq
   22d8c:	cmpeq	r0, r2
   22d8e:	bcs.n	22dbe <add_new_free_space@@Base+0xc6>
   22d90:	subs	r2, r0, r4
   22d92:	mov	r0, ip
   22d94:	sbc.w	r3, r1, r5
   22d98:	adds	r6, r6, r2
   22d9a:	strd	r2, r3, [sp]
   22d9e:	adc.w	r7, r3, r7
   22da2:	mov	r2, r4
   22da4:	mov	r3, r5
   22da6:	bl	26c1a <btrfs_add_free_space@@Base>
   22daa:	movw	r3, #3693	; 0xe6d
   22dae:	mov	r2, sl
   22db0:	mov	r1, fp
   22db2:	str	r0, [sp, #0]
   22db4:	ldr	r0, [pc, #96]	; (22e18 <add_new_free_space@@Base+0x120>)
   22db6:	add	r0, pc
   22db8:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   22dbc:	b.n	22d74 <add_new_free_space@@Base+0x7c>
   22dbe:	ldr	r3, [sp, #80]	; 0x50
   22dc0:	ldr	r2, [sp, #84]	; 0x54
   22dc2:	subs	r3, r3, r4
   22dc4:	ldr.w	r0, [r8, #64]	; 0x40
   22dc8:	sbc.w	r2, r2, r5
   22dcc:	adds	r6, r6, r3
   22dce:	strd	r3, r2, [sp]
   22dd2:	adc.w	r7, r2, r7
   22dd6:	mov	r3, r5
   22dd8:	mov	r2, r4
   22dda:	bl	26c1a <btrfs_add_free_space@@Base>
   22dde:	ldr	r2, [pc, #60]	; (22e1c <add_new_free_space@@Base+0x124>)
   22de0:	ldr	r1, [pc, #60]	; (22e20 <add_new_free_space@@Base+0x128>)
   22de2:	movw	r3, #3705	; 0xe79
   22de6:	add	r2, pc
   22de8:	addw	r2, r2, #706	; 0x2c2
   22dec:	add	r1, pc
   22dee:	str	r0, [sp, #0]
   22df0:	ldr	r0, [pc, #48]	; (22e24 <add_new_free_space@@Base+0x12c>)
   22df2:	add	r0, pc
   22df4:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   22df8:	b.n	22d36 <add_new_free_space@@Base+0x3e>
   22dfa:	mov	r0, r6
   22dfc:	mov	r1, r7
   22dfe:	add	sp, #44	; 0x2c
   22e00:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22e04:	movs	r0, #130	; 0x82
   22e06:	movs	r4, r0
   22e08:	lsls	r4, r4, #8
   22e0a:	movs	r0, r0
   22e0c:	push	{r3, r5, r7}
   22e0e:	movs	r1, r0
   22e10:	add	r5, sp, #452	; 0x1c4
   22e12:	movs	r1, r0
   22e14:	movs	r0, #78	; 0x4e
   22e16:	movs	r4, r0
   22e18:	ldrb	r5, [r7, #5]
   22e1a:	movs	r1, r0
   22e1c:	cbz	r6, 22e94 <cleanup_ref_head@@Base+0x6c>
   22e1e:	movs	r1, r0
   22e20:	add	r4, sp, #636	; 0x27c
   22e22:	movs	r1, r0
   22e24:	ldrb	r1, [r0, #5]
   22e26:	movs	r1, r0

00022e28 <cleanup_ref_head@@Base>:
   22e28:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   22e2a:	mov	r5, r0
   22e2c:	ldr	r0, [r2, #48]	; 0x30
   22e2e:	mov	r7, r1
   22e30:	mov	r4, r2
   22e32:	cbz	r0, 22e3c <cleanup_ref_head@@Base+0x14>
   22e34:	movs	r3, #0
   22e36:	str	r3, [r2, #48]	; 0x30
   22e38:	blx	83f0 <free@plt+0x4>
   22e3c:	ldr	r3, [r4, #24]
   22e3e:	cmp	r3, #0
   22e40:	bne.n	22ed8 <cleanup_ref_head@@Base+0xb0>
   22e42:	ldr	r3, [r4, #48]	; 0x30
   22e44:	cmp	r3, #0
   22e46:	bne.n	22ed8 <cleanup_ref_head@@Base+0xb0>
   22e48:	ldr	r3, [r5, #72]	; 0x48
   22e4a:	add.w	r6, r4, #36	; 0x24
   22e4e:	add.w	r1, r5, #64	; 0x40
   22e52:	subs	r3, #1
   22e54:	mov	r0, r6
   22e56:	str	r3, [r5, #72]	; 0x48
   22e58:	bl	13bd0 <rb_erase@@Base>
   22e5c:	ldrb.w	r3, [r4, #60]	; 0x3c
   22e60:	str	r6, [r4, #36]	; 0x24
   22e62:	lsls	r2, r3, #31
   22e64:	bpl.n	22eb2 <cleanup_ref_head@@Base+0x8a>
   22e66:	ldrd	r2, r3, [r4, #8]
   22e6a:	mov	r0, r7
   22e6c:	strd	r2, r3, [sp]
   22e70:	ldrd	r2, r3, [r4]
   22e74:	bl	20c34 <btrfs_pin_extent@@Base>
   22e78:	ldrb.w	r3, [r4, #60]	; 0x3c
   22e7c:	lsls	r3, r3, #30
   22e7e:	bmi.n	22eb2 <cleanup_ref_head@@Base+0x8a>
   22e80:	ldr	r0, [r5, #0]
   22e82:	movs	r2, #4
   22e84:	movs	r3, #0
   22e86:	bl	1e544 <btrfs_create_tree@@Base+0x1c8>
   22e8a:	cbnz	r0, 22ea0 <cleanup_ref_head@@Base+0x78>
   22e8c:	ldr	r1, [pc, #76]	; (22edc <cleanup_ref_head@@Base+0xb4>)
   22e8e:	movw	r2, #3758	; 0xeae
   22e92:	ldr	r0, [pc, #76]	; (22ee0 <cleanup_ref_head@@Base+0xb8>)
   22e94:	add	r1, pc
   22e96:	addw	r1, r1, #725	; 0x2d5
   22e9a:	add	r0, pc
   22e9c:	bl	1edf4 <btrfs_create_tree@@Base+0xa78>
   22ea0:	ldrd	r3, r2, [r0, #32]
   22ea4:	ldrd	r1, r5, [r4, #8]
   22ea8:	subs	r3, r3, r1
   22eaa:	sbc.w	r2, r2, r5
   22eae:	strd	r3, r2, [r0, #32]
   22eb2:	ldrd	r2, r3, [r4, #16]
   22eb6:	adds.w	r0, r2, #4294967295	; 0xffffffff
   22eba:	adc.w	r1, r3, #4294967295	; 0xffffffff
   22ebe:	cmp	r3, #0
   22ec0:	it	eq
   22ec2:	cmpeq	r2, #1
   22ec4:	beq.n	22ed0 <cleanup_ref_head@@Base+0xa8>
   22ec6:	strd	r0, r1, [r4, #16]
   22eca:	movs	r0, #0
   22ecc:	add	sp, #12
   22ece:	pop	{r4, r5, r6, r7, pc}
   22ed0:	mov	r0, r4
   22ed2:	blx	83f0 <free@plt+0x4>
   22ed6:	b.n	22eca <cleanup_ref_head@@Base+0xa2>
   22ed8:	movs	r0, #1
   22eda:	b.n	22ecc <cleanup_ref_head@@Base+0xa4>
   22edc:	cbz	r0, 22f2a <btrfs_run_delayed_refs@@Base+0x46>
   22ede:	movs	r1, r0
   22ee0:	sxth	r3, r5
   22ee2:	movs	r1, r0

00022ee4 <btrfs_run_delayed_refs@@Base>:
   22ee4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ee8:	mov	sl, r0
   22eea:	vpush	{d8}
   22eee:	movs	r6, #0
   22ef0:	ldr	r2, [pc, #736]	; (231d4 <btrfs_run_delayed_refs@@Base+0x2f0>)
   22ef2:	ldr	r3, [pc, #740]	; (231d8 <btrfs_run_delayed_refs@@Base+0x2f4>)
   22ef4:	add	r2, pc
   22ef6:	sub	sp, #132	; 0x84
   22ef8:	ldr	r3, [r2, r3]
   22efa:	mov	r2, r0
   22efc:	ldr	r3, [r3, #0]
   22efe:	str	r3, [sp, #124]	; 0x7c
   22f00:	mov.w	r3, #0
   22f04:	ldr.w	r3, [r2], #64
   22f08:	vmov	s16, r3
   22f0c:	ldr	r3, [pc, #716]	; (231dc <btrfs_run_delayed_refs@@Base+0x2f8>)
   22f0e:	str	r2, [sp, #72]	; 0x48
   22f10:	add	r3, pc
   22f12:	str	r3, [sp, #68]	; 0x44
   22f14:	add.w	r3, r3, #784	; 0x310
   22f18:	vmov	s17, r3
   22f1c:	cbnz	r6, 22f2c <btrfs_run_delayed_refs@@Base+0x48>
   22f1e:	mov	r0, sl
   22f20:	bl	23e3c <btrfs_select_ref_head@@Base>
   22f24:	mov	r6, r0
   22f26:	cmp	r0, #0
   22f28:	beq.w	2341e <btrfs_run_delayed_refs@@Base+0x53a>
   22f2c:	ldr	r1, [sp, #72]	; 0x48
   22f2e:	mov	r2, r6
   22f30:	mov	r0, sl
   22f32:	bl	23d28 <btrfs_merge_delayed_refs@@Base>
   22f36:	ldr	r3, [r6, #24]
   22f38:	cmp	r3, #0
   22f3a:	beq.w	2305c <btrfs_run_delayed_refs@@Base+0x178>
   22f3e:	ldr	r4, [r6, #28]
   22f40:	add.w	r3, r6, #28
   22f44:	add.w	r1, r6, #24
   22f48:	cmp	r4, r3
   22f4a:	beq.n	23032 <btrfs_run_delayed_refs@@Base+0x14e>
   22f4c:	subs	r4, #12
   22f4e:	ldrb.w	r3, [r4, #62]	; 0x3e
   22f52:	mov	r0, r4
   22f54:	bfc	r3, #1, #1
   22f58:	strb.w	r3, [r4, #62]	; 0x3e
   22f5c:	bl	13bd0 <rb_erase@@Base>
   22f60:	mov	r3, r4
   22f62:	str	r4, [r4, #0]
   22f64:	ldr.w	r2, [r3, #12]!
   22f68:	cmp	r2, r3
   22f6a:	beq.n	22f7a <btrfs_run_delayed_refs@@Base+0x96>
   22f6c:	ldr	r3, [r4, #16]
   22f6e:	str	r3, [r2, #4]
   22f70:	str	r2, [r3, #0]
   22f72:	ldr	r2, [pc, #600]	; (231cc <btrfs_run_delayed_refs@@Base+0x2e8>)
   22f74:	ldr	r3, [pc, #600]	; (231d0 <btrfs_run_delayed_refs@@Base+0x2ec>)
   22f76:	strd	r2, r3, [r4, #12]
   22f7a:	ldrb.w	r3, [r4, #60]	; 0x3c
   22f7e:	cmp	r3, #2
   22f80:	beq.n	23070 <btrfs_run_delayed_refs@@Base+0x18c>
   22f82:	and.w	r3, r3, #253	; 0xfd
   22f86:	cmp	r3, #1
   22f88:	bne.n	23078 <btrfs_run_delayed_refs@@Base+0x194>
   22f8a:	ldr	r3, [r6, #56]	; 0x38
   22f8c:	ldr	r2, [r4, #56]	; 0x38
   22f8e:	subs	r3, r3, r2
   22f90:	str	r3, [r6, #56]	; 0x38
   22f92:	ldrb.w	r3, [r6, #60]	; 0x3c
   22f96:	ldr.w	fp, [r6, #48]	; 0x30
   22f9a:	and.w	r2, r3, #1
   22f9e:	bfc	r3, #0, #1
   22fa2:	strb.w	r3, [r6, #60]	; 0x3c
   22fa6:	movs	r3, #0
   22fa8:	str	r3, [r6, #48]	; 0x30
   22faa:	ldrb.w	r3, [r4, #61]	; 0x3d
   22fae:	cmp	r3, #176	; 0xb0
   22fb0:	beq.n	23096 <btrfs_run_delayed_refs@@Base+0x1b2>
   22fb2:	cmp	r3, #182	; 0xb6
   22fb4:	bne.w	233fc <btrfs_run_delayed_refs@@Base+0x518>
   22fb8:	ldrd	r0, r1, [r4, #72]	; 0x48
   22fbc:	ldr	r3, [r4, #56]	; 0x38
   22fbe:	ldrd	r8, r9, [r4, #64]	; 0x40
   22fc2:	cmp	r3, #1
   22fc4:	ldrb.w	r5, [r4, #60]	; 0x3c
   22fc8:	beq.n	2309c <btrfs_run_delayed_refs@@Base+0x1b8>
   22fca:	strd	r0, r1, [sp, #16]
   22fce:	movs	r0, #1
   22fd0:	ldr	r1, [pc, #524]	; (231e0 <btrfs_run_delayed_refs@@Base+0x2fc>)
   22fd2:	strd	r3, r5, [sp]
   22fd6:	mvn.w	r5, #4
   22fda:	strd	r8, r9, [sp, #8]
   22fde:	add	r1, pc
   22fe0:	ldrd	r2, r3, [r4, #24]
   22fe4:	blx	87f4 <__printf_chk@plt+0x4>
   22fe8:	cmp.w	fp, #0
   22fec:	bne.w	23416 <btrfs_run_delayed_refs@@Base+0x532>
   22ff0:	ldrb.w	r3, [sl, #32]
   22ff4:	cbz	r3, 23000 <btrfs_run_delayed_refs@@Base+0x11c>
   22ff6:	ldrb.w	r3, [r4, #60]	; 0x3c
   22ffa:	cmp	r3, #2
   22ffc:	beq.w	2338a <btrfs_run_delayed_refs@@Base+0x4a6>
   23000:	ldrb.w	r3, [r6, #60]	; 0x3c
   23004:	mov	r0, r4
   23006:	bfc	r3, #3, #1
   2300a:	strb.w	r3, [r6, #60]	; 0x3c
   2300e:	ldr.w	r3, [sl, #76]	; 0x4c
   23012:	adds	r3, #1
   23014:	str.w	r3, [sl, #76]	; 0x4c
   23018:	bl	1ebf0 <btrfs_create_tree@@Base+0x874>
   2301c:	ldr	r2, [pc, #452]	; (231e4 <btrfs_run_delayed_refs@@Base+0x300>)
   2301e:	ldr	r3, [pc, #440]	; (231d8 <btrfs_run_delayed_refs@@Base+0x2f4>)
   23020:	add	r2, pc
   23022:	ldr	r3, [r2, r3]
   23024:	ldr	r2, [r3, #0]
   23026:	ldr	r3, [sp, #124]	; 0x7c
   23028:	eors	r2, r3
   2302a:	beq.w	23422 <btrfs_run_delayed_refs@@Base+0x53e>
   2302e:	blx	84cc <__stack_chk_fail@plt>
   23032:	mov	r0, r1
   23034:	str	r1, [sp, #64]	; 0x40
   23036:	bl	13e46 <rb_first@@Base>
   2303a:	ldr	r1, [sp, #64]	; 0x40
   2303c:	ldr	r2, [r0, #12]
   2303e:	add.w	r3, r0, #12
   23042:	mov	r4, r0
   23044:	cmp	r2, r3
   23046:	beq.n	22f4e <btrfs_run_delayed_refs@@Base+0x6a>
   23048:	ldr	r1, [pc, #412]	; (231e8 <btrfs_run_delayed_refs@@Base+0x304>)
   2304a:	movw	r2, #3786	; 0xeca
   2304e:	ldr	r0, [pc, #412]	; (231ec <btrfs_run_delayed_refs@@Base+0x308>)
   23050:	add	r1, pc
   23052:	addw	r1, r1, #742	; 0x2e6
   23056:	add	r0, pc
   23058:	bl	1edf4 <btrfs_create_tree@@Base+0xa78>
   2305c:	vmov	r1, s16
   23060:	mov	r2, r6
   23062:	mov	r0, sl
   23064:	bl	22e28 <cleanup_ref_head@@Base>
   23068:	cmp	r0, #0
   2306a:	bgt.w	22f1c <btrfs_run_delayed_refs@@Base+0x38>
   2306e:	b.n	22f1e <btrfs_run_delayed_refs@@Base+0x3a>
   23070:	ldr	r3, [r6, #56]	; 0x38
   23072:	ldr	r2, [r4, #56]	; 0x38
   23074:	add	r3, r2
   23076:	b.n	22f90 <btrfs_run_delayed_refs@@Base+0xac>
   23078:	ldr	r2, [pc, #372]	; (231f0 <btrfs_run_delayed_refs@@Base+0x30c>)
   2307a:	movs	r3, #1
   2307c:	ldr	r1, [pc, #372]	; (231f4 <btrfs_run_delayed_refs@@Base+0x310>)
   2307e:	ldr	r0, [pc, #376]	; (231f8 <btrfs_run_delayed_refs@@Base+0x314>)
   23080:	add	r2, pc
   23082:	str	r3, [sp, #0]
   23084:	addw	r2, r2, #761	; 0x2f9
   23088:	add	r1, pc
   2308a:	add	r0, pc
   2308c:	movw	r3, #3910	; 0xf46
   23090:	bl	1e69a <btrfs_create_tree@@Base+0x31e>
   23094:	b.n	22f92 <btrfs_run_delayed_refs@@Base+0xae>
   23096:	movs	r0, #0
   23098:	movs	r1, #0
   2309a:	b.n	22fbc <btrfs_run_delayed_refs@@Base+0xd8>
   2309c:	cmp	r5, #1
   2309e:	bne.w	233aa <btrfs_run_delayed_refs@@Base+0x4c6>
   230a2:	cmp	r2, #0
   230a4:	beq.w	233e0 <btrfs_run_delayed_refs@@Base+0x4fc>
   230a8:	cmp.w	fp, #0
   230ac:	beq.n	230b6 <btrfs_run_delayed_refs@@Base+0x1d2>
   230ae:	ldrb.w	r3, [fp, #19]
   230b2:	eor.w	r3, r3, #1
   230b6:	ldr	r1, [pc, #324]	; (231fc <btrfs_run_delayed_refs@@Base+0x318>)
   230b8:	ldr	r0, [pc, #324]	; (23200 <btrfs_run_delayed_refs@@Base+0x31c>)
   230ba:	vmov	r2, s17
   230be:	add	r1, pc
   230c0:	add	r0, pc
   230c2:	str	r3, [sp, #0]
   230c4:	movw	r3, #3815	; 0xee7
   230c8:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   230cc:	ldr.w	r7, [sl]
   230d0:	movs	r2, #4
   230d2:	ldr.w	r3, [r7, #308]	; 0x134
   230d6:	mov	r0, r7
   230d8:	ldr.w	r3, [r3, #188]	; 0xbc
   230dc:	and.w	r3, r3, #256	; 0x100
   230e0:	str	r3, [sp, #40]	; 0x28
   230e2:	movs	r3, #0
   230e4:	str	r3, [sp, #44]	; 0x2c
   230e6:	movs	r3, #0
   230e8:	bl	1e544 <btrfs_create_tree@@Base+0x1c8>
   230ec:	str	r0, [sp, #64]	; 0x40
   230ee:	cbnz	r0, 23100 <btrfs_run_delayed_refs@@Base+0x21c>
   230f0:	ldr	r3, [sp, #68]	; 0x44
   230f2:	movw	r2, #2398	; 0x95e
   230f6:	ldr	r0, [pc, #268]	; (23204 <btrfs_run_delayed_refs@@Base+0x320>)
   230f8:	addw	r1, r3, #805	; 0x325
   230fc:	add	r0, pc
   230fe:	b.n	23058 <btrfs_run_delayed_refs@@Base+0x174>
   23100:	ldrd	r0, r1, [sp, #40]	; 0x28
   23104:	add.w	r5, sp, #113	; 0x71
   23108:	ldrd	r2, r3, [r4, #24]
   2310c:	orrs	r1, r0
   2310e:	strd	r2, r3, [sp, #104]	; 0x68
   23112:	beq.n	2315e <btrfs_run_delayed_refs@@Base+0x27a>
   23114:	ldr.w	ip, [r4, #80]	; 0x50
   23118:	mov	r0, ip
   2311a:	str.w	ip, [sp, #113]	; 0x71
   2311e:	asrs	r1, r0, #31
   23120:	str	r1, [r5, #4]
   23122:	movs	r5, #33	; 0x21
   23124:	movs	r1, #169	; 0xa9
   23126:	strb.w	r1, [sp, #112]	; 0x70
   2312a:	cmp.w	r9, #0
   2312e:	it	eq
   23130:	cmpeq.w	r8, #2
   23134:	bne.n	23220 <btrfs_run_delayed_refs@@Base+0x33c>
   23136:	movs	r1, #8
   23138:	add.w	r0, r7, #192	; 0xc0
   2313c:	str	r1, [sp, #8]
   2313e:	add	r1, sp, #96	; 0x60
   23140:	str	r1, [sp, #4]
   23142:	add	r1, sp, #88	; 0x58
   23144:	str	r1, [sp, #0]
   23146:	bl	16b18 <find_first_extent_bit@@Base>
   2314a:	cbz	r0, 23172 <btrfs_run_delayed_refs@@Base+0x28e>
   2314c:	ldr	r1, [pc, #184]	; (23208 <btrfs_run_delayed_refs@@Base+0x324>)
   2314e:	movw	r2, #2415	; 0x96f
   23152:	ldr	r0, [pc, #184]	; (2320c <btrfs_run_delayed_refs@@Base+0x328>)
   23154:	add	r1, pc
   23156:	addw	r1, r1, #805	; 0x325
   2315a:	add	r0, pc
   2315c:	b.n	23058 <btrfs_run_delayed_refs@@Base+0x174>
   2315e:	ldr	r1, [r4, #32]
   23160:	str.w	r1, [sp, #113]	; 0x71
   23164:	ldr	r1, [r4, #36]	; 0x24
   23166:	str	r1, [r5, #4]
   23168:	movs	r1, #168	; 0xa8
   2316a:	movs	r5, #51	; 0x33
   2316c:	strb.w	r1, [sp, #112]	; 0x70
   23170:	b.n	2312a <btrfs_run_delayed_refs@@Base+0x246>
   23172:	ldrd	r0, r1, [r4, #24]
   23176:	ldrd	r2, r3, [sp, #88]	; 0x58
   2317a:	cmp	r1, r3
   2317c:	it	eq
   2317e:	cmpeq	r0, r2
   23180:	beq.n	23194 <btrfs_run_delayed_refs@@Base+0x2b0>
   23182:	ldr	r1, [pc, #140]	; (23210 <btrfs_run_delayed_refs@@Base+0x32c>)
   23184:	mov.w	r2, #2416	; 0x970
   23188:	ldr	r0, [pc, #136]	; (23214 <btrfs_run_delayed_refs@@Base+0x330>)
   2318a:	add	r1, pc
   2318c:	addw	r1, r1, #805	; 0x325
   23190:	add	r0, pc
   23192:	b.n	23058 <btrfs_run_delayed_refs@@Base+0x174>
   23194:	ldrd	r3, r2, [r4, #32]
   23198:	adds	r3, r0, r3
   2319a:	adc.w	r2, r1, r2
   2319e:	adds.w	r3, r3, #4294967295	; 0xffffffff
   231a2:	str	r3, [sp, #56]	; 0x38
   231a4:	adc.w	r3, r2, #4294967295	; 0xffffffff
   231a8:	str	r3, [sp, #60]	; 0x3c
   231aa:	ldrd	r0, r1, [sp, #56]	; 0x38
   231ae:	ldrd	r2, r3, [sp, #96]	; 0x60
   231b2:	cmp	r1, r3
   231b4:	it	eq
   231b6:	cmpeq	r0, r2
   231b8:	beq.n	23220 <btrfs_run_delayed_refs@@Base+0x33c>
   231ba:	ldr	r1, [pc, #92]	; (23218 <btrfs_run_delayed_refs@@Base+0x334>)
   231bc:	movw	r2, #2417	; 0x971
   231c0:	ldr	r0, [pc, #88]	; (2321c <btrfs_run_delayed_refs@@Base+0x338>)
   231c2:	add	r1, pc
   231c4:	addw	r1, r1, #805	; 0x325
   231c8:	add	r0, pc
   231ca:	b.n	23058 <btrfs_run_delayed_refs@@Base+0x174>
   231cc:	lsls	r0, r0, #4
   231ce:	movs	r0, r2
   231d0:	lsls	r0, r0, #8
   231d2:	movs	r0, r4
   231d4:	subs	r4, r2, #2
   231d6:	movs	r4, r0
   231d8:	lsls	r4, r4, #8
   231da:	movs	r0, r0
   231dc:	uxth	r4, r5
   231de:	movs	r1, r0
   231e0:	cbz	r0, 231e6 <btrfs_run_delayed_refs@@Base+0x302>
   231e2:	movs	r1, r0
   231e4:	adds	r0, r5, #5
   231e6:	movs	r4, r0
   231e8:	cbz	r4, 23206 <btrfs_run_delayed_refs@@Base+0x322>
   231ea:	movs	r1, r0
   231ec:	add	sp, #468	; 0x1d4
   231ee:	movs	r1, r0
   231f0:	cbz	r4, 23202 <btrfs_run_delayed_refs@@Base+0x31e>
   231f2:	movs	r1, r0
   231f4:	add	r2, sp, #12
   231f6:	movs	r1, r0
   231f8:	add	r5, sp, #388	; 0x184
   231fa:	movs	r1, r0
   231fc:	add	r1, sp, #820	; 0x334
   231fe:	movs	r1, r0
   23200:	add	sp, #500	; 0x1f4
   23202:	movs	r1, r0
   23204:	add	r7, sp, #804	; 0x324
   23206:	movs	r1, r0
   23208:	add	sp, #416	; 0x1a0
   2320a:	movs	r1, r0
   2320c:	strb	r0, [r3, #23]
   2320e:	movs	r1, r0
   23210:	add	sp, #200	; 0xc8
   23212:	movs	r1, r0
   23214:	add	r7, sp, #848	; 0x350
   23216:	movs	r1, r0
   23218:	add	r7, sp, #1000	; 0x3e8
   2321a:	movs	r1, r0
   2321c:	add	r7, sp, #712	; 0x2c8
   2321e:	movs	r1, r0
   23220:	bl	17e50 <btrfs_alloc_path@@Base>
   23224:	mov	r8, r0
   23226:	cmp	r0, #0
   23228:	beq.w	233a4 <btrfs_run_delayed_refs@@Base+0x4c0>
   2322c:	ldr	r1, [r7, #24]
   2322e:	movs	r3, #1
   23230:	mov	r2, r0
   23232:	str	r3, [sp, #4]
   23234:	mov	r0, sl
   23236:	add	r3, sp, #84	; 0x54
   23238:	str	r3, [sp, #0]
   2323a:	add	r3, sp, #104	; 0x68
   2323c:	str	r5, [sp, #84]	; 0x54
   2323e:	bl	1b00c <btrfs_insert_empty_items@@Base>
   23242:	mov	r5, r0
   23244:	cmp	r0, #0
   23246:	bne.w	2337e <btrfs_run_delayed_refs@@Base+0x49a>
   2324a:	ldr.w	r0, [r8]
   2324e:	movs	r2, #25
   23250:	ldr.w	r3, [r8, #32]
   23254:	mov.w	r1, #1
   23258:	add.w	r9, r0, #96	; 0x60
   2325c:	mla	r3, r2, r3, r9
   23260:	ldr.w	r3, [r3, #118]	; 0x76
   23264:	add.w	r2, r3, #101	; 0x65
   23268:	str	r3, [sp, #48]	; 0x30
   2326a:	add.w	r3, r9, r2
   2326e:	strb.w	r1, [r9, r2]
   23272:	strb	r5, [r3, #1]
   23274:	strb	r5, [r3, #2]
   23276:	strb	r5, [r3, #3]
   23278:	strb	r5, [r3, #4]
   2327a:	strb	r5, [r3, #5]
   2327c:	strb	r5, [r3, #6]
   2327e:	strb	r5, [r3, #7]
   23280:	ldrd	r1, r2, [sl, #8]
   23284:	str	r1, [r3, #8]
   23286:	str	r2, [r3, #12]
   23288:	ldrd	r2, r1, [fp, #24]
   2328c:	orr.w	r2, r2, #2
   23290:	str	r2, [r3, #16]
   23292:	str	r1, [r3, #20]
   23294:	ldr	r3, [sp, #48]	; 0x30
   23296:	add.w	r5, r3, #125	; 0x7d
   2329a:	ldrd	r2, r3, [sp, #40]	; 0x28
   2329e:	orrs	r3, r2
   232a0:	bne.n	232ba <btrfs_run_delayed_refs@@Base+0x3d6>
   232a2:	movs	r3, #17
   232a4:	mov	r2, r5
   232a6:	mov	r1, fp
   232a8:	str	r0, [sp, #76]	; 0x4c
   232aa:	bl	17330 <write_extent_buffer@@Base>
   232ae:	ldr	r3, [r4, #80]	; 0x50
   232b0:	add	r5, r9
   232b2:	ldr	r0, [sp, #76]	; 0x4c
   232b4:	strb	r3, [r5, #17]
   232b6:	ldr	r5, [sp, #48]	; 0x30
   232b8:	adds	r5, #143	; 0x8f
   232ba:	movs	r2, #176	; 0xb0
   232bc:	strb.w	r2, [r9, r5]
   232c0:	ldrd	r1, r2, [r4, #64]	; 0x40
   232c4:	add.w	r3, r9, r5
   232c8:	str.w	r1, [r3, #1]
   232cc:	str.w	r2, [r3, #5]
   232d0:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   232d4:	mov	r0, r8
   232d6:	bl	17e7e <btrfs_free_path@@Base>
   232da:	ldr.w	r3, [r7, #384]	; 0x180
   232de:	mov	r0, sl
   232e0:	str	r3, [sp, #0]
   232e2:	movs	r3, #0
   232e4:	str	r3, [sp, #4]
   232e6:	ldrd	r2, r3, [sp, #104]	; 0x68
   232ea:	bl	2c7e0 <remove_from_free_space_tree@@Base>
   232ee:	mov	r5, r0
   232f0:	cmp	r0, #0
   232f2:	bne.n	2337e <btrfs_run_delayed_refs@@Base+0x49a>
   232f4:	str	r0, [sp, #12]
   232f6:	mov.w	r8, #1
   232fa:	str.w	r8, [sp, #8]
   232fe:	ldr.w	r3, [r7, #384]	; 0x180
   23302:	strd	r3, r0, [sp]
   23306:	mov	r0, r7
   23308:	ldrd	r2, r3, [sp, #104]	; 0x68
   2330c:	bl	1f03c <btrfs_lookup_block_group@@Base+0x188>
   23310:	ldr.w	r2, [r7, #384]	; 0x180
   23314:	ldr	r3, [sp, #64]	; 0x40
   23316:	movs	r1, #0
   23318:	mov	r5, r0
   2331a:	mov	r0, r2
   2331c:	strd	r0, r1, [sp, #48]	; 0x30
   23320:	ldrd	r0, r1, [r3, #32]
   23324:	ldrd	r2, r3, [sp, #48]	; 0x30
   23328:	cmp	r1, r3
   2332a:	it	eq
   2332c:	cmpeq	r0, r2
   2332e:	bcs.n	23392 <btrfs_run_delayed_refs@@Base+0x4ae>
   23330:	ldr	r2, [pc, #252]	; (23430 <btrfs_run_delayed_refs@@Base+0x54c>)
   23332:	movw	r3, #2462	; 0x99e
   23336:	ldr	r1, [pc, #252]	; (23434 <btrfs_run_delayed_refs@@Base+0x550>)
   23338:	ldr	r0, [pc, #252]	; (23438 <btrfs_run_delayed_refs@@Base+0x554>)
   2333a:	add	r2, pc
   2333c:	addw	r2, r2, #805	; 0x325
   23340:	add	r1, pc
   23342:	add	r0, pc
   23344:	str.w	r8, [sp]
   23348:	bl	1e69a <btrfs_create_tree@@Base+0x31e>
   2334c:	ldr	r3, [sp, #64]	; 0x40
   2334e:	movs	r2, #0
   23350:	mov	r1, r3
   23352:	movs	r3, #0
   23354:	strd	r2, r3, [r1, #32]
   23358:	ldrd	r2, r3, [r4, #64]	; 0x40
   2335c:	cmp	r3, #0
   2335e:	it	eq
   23360:	cmpeq	r2, #2
   23362:	bne.n	2337e <btrfs_run_delayed_refs@@Base+0x49a>
   23364:	movs	r3, #8
   23366:	str	r3, [sp, #8]
   23368:	ldrd	r2, r3, [sp, #96]	; 0x60
   2336c:	ldr.w	r0, [sl]
   23370:	strd	r2, r3, [sp]
   23374:	adds	r0, #192	; 0xc0
   23376:	ldrd	r2, r3, [sp, #88]	; 0x58
   2337a:	bl	16746 <clear_extent_bits@@Base>
   2337e:	cmp.w	fp, #0
   23382:	bne.n	23416 <btrfs_run_delayed_refs@@Base+0x532>
   23384:	cmp	r5, #0
   23386:	bne.w	22ff0 <btrfs_run_delayed_refs@@Base+0x10c>
   2338a:	mov	r0, r4
   2338c:	bl	1ebf0 <btrfs_create_tree@@Base+0x874>
   23390:	b.n	22f1c <btrfs_run_delayed_refs@@Base+0x38>
   23392:	ldr	r3, [sp, #48]	; 0x30
   23394:	subs	r2, r0, r3
   23396:	ldr	r3, [sp, #52]	; 0x34
   23398:	sbc.w	r3, r1, r3
   2339c:	ldr	r1, [sp, #64]	; 0x40
   2339e:	str	r2, [r1, #32]
   233a0:	str	r3, [r1, #36]	; 0x24
   233a2:	b.n	23358 <btrfs_run_delayed_refs@@Base+0x474>
   233a4:	mvn.w	r5, #11
   233a8:	b.n	2337e <btrfs_run_delayed_refs@@Base+0x49a>
   233aa:	cmp	r5, #2
   233ac:	bne.n	233e0 <btrfs_run_delayed_refs@@Base+0x4fc>
   233ae:	movs	r2, #0
   233b0:	movs	r3, #0
   233b2:	strd	r2, r3, [sp, #32]
   233b6:	mov	r0, sl
   233b8:	ldr	r2, [r4, #80]	; 0x50
   233ba:	strd	r8, r9, [sp, #16]
   233be:	asrs	r3, r2, #31
   233c0:	strd	r2, r3, [sp, #24]
   233c4:	ldrd	r2, r3, [r4, #72]	; 0x48
   233c8:	strd	r2, r3, [sp, #8]
   233cc:	ldrd	r2, r3, [r4, #32]
   233d0:	strd	r2, r3, [sp]
   233d4:	ldrd	r2, r3, [r4, #24]
   233d8:	bl	1f7cc <hash_extent_data_ref@@Base+0x3f4>
   233dc:	mov	r5, r0
   233de:	b.n	2337e <btrfs_run_delayed_refs@@Base+0x49a>
   233e0:	ldr	r2, [pc, #88]	; (2343c <btrfs_run_delayed_refs@@Base+0x558>)
   233e2:	movs	r3, #1
   233e4:	ldr	r1, [pc, #88]	; (23440 <btrfs_run_delayed_refs@@Base+0x55c>)
   233e6:	ldr	r0, [pc, #92]	; (23444 <btrfs_run_delayed_refs@@Base+0x560>)
   233e8:	add	r2, pc
   233ea:	add.w	r2, r2, #784	; 0x310
   233ee:	add	r1, pc
   233f0:	add	r0, pc
   233f2:	str	r3, [sp, #0]
   233f4:	movw	r3, #3822	; 0xeee
   233f8:	bl	1e8f4 <btrfs_create_tree@@Base+0x578>
   233fc:	ldr	r2, [pc, #72]	; (23448 <btrfs_run_delayed_refs@@Base+0x564>)
   233fe:	movs	r3, #1
   23400:	ldr	r1, [pc, #72]	; (2344c <btrfs_run_delayed_refs@@Base+0x568>)
   23402:	ldr	r0, [pc, #76]	; (23450 <btrfs_run_delayed_refs@@Base+0x56c>)
   23404:	add	r2, pc
   23406:	str	r3, [sp, #0]
   23408:	addw	r2, r2, #831	; 0x33f
   2340c:	add	r1, pc
   2340e:	add	r0, pc
   23410:	movw	r3, #3842	; 0xf02
   23414:	b.n	233f8 <btrfs_run_delayed_refs@@Base+0x514>
   23416:	mov	r0, fp
   23418:	blx	83f0 <free@plt+0x4>
   2341c:	b.n	23384 <btrfs_run_delayed_refs@@Base+0x4a0>
   2341e:	mov	r5, r0
   23420:	b.n	2301c <btrfs_run_delayed_refs@@Base+0x138>
   23422:	mov	r0, r5
   23424:	add	sp, #132	; 0x84
   23426:	vpop	{d8}
   2342a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2342e:	nop
   23430:	add	r6, sp, #520	; 0x208
   23432:	movs	r1, r0
   23434:	add	r7, pc, #300	; (adr r7, 23564 <btrfs_fix_block_accounting@@Base+0x110>)
   23436:	movs	r1, r0
   23438:	add	r2, sp, #676	; 0x2a4
   2343a:	movs	r1, r0
   2343c:	add	r5, sp, #848	; 0x350
   2343e:	movs	r1, r0
   23440:	add	r6, pc, #628	; (adr r6, 236b8 <btrfs_record_file_extent@@Base+0x7c>)
   23442:	movs	r1, r0
   23444:	add	r1, sp, #1004	; 0x3ec
   23446:	movs	r1, r0
   23448:	add	r5, sp, #736	; 0x2e0
   2344a:	movs	r1, r0
   2344c:	add	r6, pc, #508	; (adr r6, 2364c <btrfs_record_file_extent@@Base+0x10>)
   2344e:	movs	r1, r0
   23450:	add	r1, sp, #884	; 0x374
   23452:	movs	r1, r0

00023454 <btrfs_fix_block_accounting@@Base>:
   23454:	ldr	r2, [pc, #460]	; (23624 <btrfs_fix_block_accounting@@Base+0x1d0>)
   23456:	mov.w	r1, #4294967295	; 0xffffffff
   2345a:	ldr	r3, [pc, #460]	; (23628 <btrfs_fix_block_accounting@@Base+0x1d4>)
   2345c:	add	r2, pc
   2345e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23462:	sub	sp, #124	; 0x7c
   23464:	ldr.w	r8, [r0]
   23468:	mov	r5, r0
   2346a:	ldr	r3, [r2, r3]
   2346c:	ldr.w	r6, [r8, #24]
   23470:	ldr	r3, [r3, #0]
   23472:	str	r3, [sp, #116]	; 0x74
   23474:	mov.w	r3, #0
   23478:	bl	22ee4 <btrfs_run_delayed_refs@@Base>
   2347c:	cmp	r0, #0
   2347e:	bne.w	23618 <btrfs_fix_block_accounting@@Base+0x1c4>
   23482:	movs	r7, #0
   23484:	mov	fp, r7
   23486:	mov	sl, r7
   23488:	mov	r9, r7
   2348a:	mov	r2, r7
   2348c:	mov	r3, fp
   2348e:	mov	r0, r8
   23490:	bl	1ee30 <btrfs_lookup_first_block_group@@Base>
   23494:	mov	r4, r0
   23496:	cbz	r0, 234e4 <btrfs_fix_block_accounting@@Base+0x90>
   23498:	ldrd	r2, r3, [r0, #40]	; 0x28
   2349c:	ldr.w	r7, [r0, #49]	; 0x31
   234a0:	ldr.w	r1, [r0, #53]	; 0x35
   234a4:	adds	r7, r7, r2
   234a6:	strd	sl, r9, [r0, #72]	; 0x48
   234aa:	adc.w	fp, r1, r3
   234ae:	ldr	r3, [r0, #60]	; 0x3c
   234b0:	movs	r1, #1
   234b2:	strd	sl, r9, [r3, #16]
   234b6:	ldrd	r2, r3, [r0, #40]	; 0x28
   234ba:	ldr.w	r0, [r6, #464]	; 0x1d0
   234be:	str	r1, [sp, #8]
   234c0:	ldr.w	ip, [r4, #49]	; 0x31
   234c4:	adds	r0, #128	; 0x80
   234c6:	ldr.w	lr, [r4, #53]	; 0x35
   234ca:	adds.w	ip, ip, r2
   234ce:	adc.w	lr, lr, r3
   234d2:	adds.w	r4, ip, #4294967295	; 0xffffffff
   234d6:	adc.w	lr, lr, #4294967295	; 0xffffffff
   234da:	strd	r4, lr, [sp]
   234de:	bl	168bc <set_extent_bits@@Base>
   234e2:	b.n	2348a <btrfs_fix_block_accounting@@Base+0x36>
   234e4:	add	r7, sp, #48	; 0x30
   234e6:	add.w	sl, sp, #28
   234ea:	mov	r0, r7
   234ec:	bl	17e48 <btrfs_init_path@@Base>
   234f0:	ldr.w	r1, [r6, #464]	; 0x1d0
   234f4:	movs	r3, #168	; 0xa8
   234f6:	strd	r4, r4, [sp]
   234fa:	strb.w	r3, [sp, #36]	; 0x24
   234fe:	mov	r2, sl
   23500:	mov	r3, r7
   23502:	ldr	r1, [r1, #24]
   23504:	mov	r0, r5
   23506:	strb.w	r4, [sp, #37]	; 0x25
   2350a:	strb.w	r4, [sp, #38]	; 0x26
   2350e:	strb.w	r4, [sp, #39]	; 0x27
   23512:	strb.w	r4, [sp, #40]	; 0x28
   23516:	strb.w	r4, [sp, #41]	; 0x29
   2351a:	strb.w	r4, [sp, #42]	; 0x2a
   2351e:	strb.w	r4, [sp, #43]	; 0x2b
   23522:	strb.w	r4, [sp, #44]	; 0x2c
   23526:	strd	r4, r4, [sp, #28]
   2352a:	bl	1a23c <btrfs_search_slot@@Base>
   2352e:	subs	r3, r0, #0
   23530:	blt.n	235f4 <btrfs_fix_block_accounting@@Base+0x1a0>
   23532:	ldr.w	r9, [pc, #248]	; 2362c <btrfs_fix_block_accounting@@Base+0x1d8>
   23536:	movs	r4, #0
   23538:	ldr.w	fp, [pc, #244]	; 23630 <btrfs_fix_block_accounting@@Base+0x1dc>
   2353c:	movs	r5, #0
   2353e:	add	r9, pc
   23540:	addw	r9, r9, #851	; 0x353
   23544:	add	fp, pc
   23546:	ldr	r0, [sp, #48]	; 0x30
   23548:	ldr	r2, [sp, #80]	; 0x50
   2354a:	ldr.w	r3, [r0, #192]	; 0xc0
   2354e:	cmp	r2, r3
   23550:	bcc.n	23570 <btrfs_fix_block_accounting@@Base+0x11c>
   23552:	ldr.w	r0, [r6, #464]	; 0x1d0
   23556:	mov	r1, r7
   23558:	movs	r2, #0
   2355a:	strb.w	r2, [sp, #113]	; 0x71
   2355e:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   23562:	subs	r3, r0, #0
   23564:	blt.n	235f4 <btrfs_fix_block_accounting@@Base+0x1a0>
   23566:	mov.w	r2, #0
   2356a:	bne.n	23608 <btrfs_fix_block_accounting@@Base+0x1b4>
   2356c:	ldr	r0, [sp, #48]	; 0x30
   2356e:	ldr	r2, [sp, #80]	; 0x50
   23570:	mov	r1, sl
   23572:	bl	1e5d4 <btrfs_create_tree@@Base+0x258>
   23576:	ldrb.w	r3, [sp, #36]	; 0x24
   2357a:	cmp	r3, #168	; 0xa8
   2357c:	bne.n	235bc <btrfs_fix_block_accounting@@Base+0x168>
   2357e:	ldr.w	r3, [sp, #37]	; 0x25
   23582:	movs	r1, #1
   23584:	ldr.w	r2, [sp, #41]	; 0x29
   23588:	movs	r0, #0
   2358a:	adds	r4, r4, r3
   2358c:	strd	r1, r0, [sp, #8]
   23590:	adc.w	r5, r2, r5
   23594:	mov	r0, r6
   23596:	strd	r3, r2, [sp]
   2359a:	ldrd	r2, r3, [sp, #28]
   2359e:	bl	21250 <btrfs_update_block_group@@Base>
   235a2:	movw	r3, #3354	; 0xd1a
   235a6:	mov	r2, r9
   235a8:	mov	r1, fp
   235aa:	str	r0, [sp, #0]
   235ac:	ldr	r0, [pc, #132]	; (23634 <btrfs_fix_block_accounting@@Base+0x1e0>)
   235ae:	add	r0, pc
   235b0:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   235b4:	ldr	r3, [sp, #80]	; 0x50
   235b6:	adds	r3, #1
   235b8:	str	r3, [sp, #80]	; 0x50
   235ba:	b.n	23546 <btrfs_fix_block_accounting@@Base+0xf2>
   235bc:	cmp	r3, #169	; 0xa9
   235be:	bne.n	235b4 <btrfs_fix_block_accounting@@Base+0x160>
   235c0:	ldr.w	r3, [r8, #384]	; 0x180
   235c4:	movs	r2, #1
   235c6:	movs	r1, #0
   235c8:	mov	r0, r6
   235ca:	adds	r4, r4, r3
   235cc:	strd	r2, r1, [sp, #8]
   235d0:	str	r3, [sp, #0]
   235d2:	mov.w	r3, #0
   235d6:	str	r3, [sp, #4]
   235d8:	adc.w	r5, r5, #0
   235dc:	ldrd	r2, r3, [sp, #28]
   235e0:	bl	21250 <btrfs_update_block_group@@Base>
   235e4:	mov	r3, r0
   235e6:	cmp	r0, #0
   235e8:	beq.n	235b4 <btrfs_fix_block_accounting@@Base+0x160>
   235ea:	mov	r0, r7
   235ec:	str	r3, [sp, #20]
   235ee:	bl	17e58 <btrfs_release_path@@Base>
   235f2:	ldr	r3, [sp, #20]
   235f4:	ldr	r1, [pc, #64]	; (23638 <btrfs_fix_block_accounting@@Base+0x1e4>)
   235f6:	ldr	r2, [pc, #48]	; (23628 <btrfs_fix_block_accounting@@Base+0x1d4>)
   235f8:	add	r1, pc
   235fa:	ldr	r2, [r1, r2]
   235fc:	ldr	r1, [r2, #0]
   235fe:	ldr	r2, [sp, #116]	; 0x74
   23600:	eors	r1, r2
   23602:	beq.n	2361c <btrfs_fix_block_accounting@@Base+0x1c8>
   23604:	blx	84cc <__stack_chk_fail@plt>
   23608:	ldr.w	r3, [r6, #464]	; 0x1d0
   2360c:	ldr.w	r3, [r3, #308]	; 0x134
   23610:	str	r4, [r3, #120]	; 0x78
   23612:	str	r5, [r3, #124]	; 0x7c
   23614:	mov	r3, r2
   23616:	b.n	235ea <btrfs_fix_block_accounting@@Base+0x196>
   23618:	mov	r3, r0
   2361a:	b.n	235f4 <btrfs_fix_block_accounting@@Base+0x1a0>
   2361c:	mov	r0, r3
   2361e:	add	sp, #124	; 0x7c
   23620:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23624:	adds	r4, r5, r4
   23626:	movs	r4, r0
   23628:	lsls	r4, r4, #8
   2362a:	movs	r0, r0
   2362c:	add	r4, sp, #504	; 0x1f8
   2362e:	movs	r1, r0
   23630:	add	r5, pc, #284	; (adr r5, 23750 <btrfs_record_file_extent@@Base+0x114>)
   23632:	movs	r1, r0
   23634:	strb	r5, [r0, #6]
   23636:	movs	r1, r0
   23638:	asrs	r0, r2, #30
   2363a:	movs	r4, r0

0002363c <btrfs_record_file_extent@@Base>:
   2363c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23640:	mov	r6, r0
   23642:	vpush	{d8}
   23646:	mov	fp, r1
   23648:	sub	sp, #156	; 0x9c
   2364a:	strd	r2, r3, [sp, #96]	; 0x60
   2364e:	ldr	r3, [sp, #200]	; 0xc8
   23650:	ldr.w	r2, [pc, #1080]	; 23a8c <btrfs_record_file_extent@@Base+0x450>
   23654:	ldrd	r9, sl, [sp, #216]	; 0xd8
   23658:	str	r3, [sp, #76]	; 0x4c
   2365a:	add	r2, pc
   2365c:	ldr	r3, [sp, #208]	; 0xd0
   2365e:	str	r3, [sp, #68]	; 0x44
   23660:	ldr	r3, [sp, #212]	; 0xd4
   23662:	str	r3, [sp, #72]	; 0x48
   23664:	ldr.w	r3, [pc, #1064]	; 23a90 <btrfs_record_file_extent@@Base+0x454>
   23668:	ldr	r3, [r2, r3]
   2366a:	ldr	r3, [r3, #0]
   2366c:	str	r3, [sp, #148]	; 0x94
   2366e:	mov.w	r3, #0
   23672:	ldrd	r3, r4, [sp, #224]	; 0xe0
   23676:	strd	r3, r4, [sp, #56]	; 0x38
   2367a:	movs	r4, #0
   2367c:	ldr.w	r3, [pc, #1044]	; 23a94 <btrfs_record_file_extent@@Base+0x458>
   23680:	add	r3, pc
   23682:	addw	r3, r3, #878	; 0x36e
   23686:	vmov	s16, r3
   2368a:	ldr.w	r3, [pc, #1036]	; 23a98 <btrfs_record_file_extent@@Base+0x45c>
   2368e:	add	r3, pc
   23690:	vmov	s17, r3
   23694:	ldrd	r2, r3, [sp, #56]	; 0x38
   23698:	orrs	r3, r2
   2369a:	beq.n	23710 <btrfs_record_file_extent@@Base+0xd4>
   2369c:	orrs.w	r3, r9, sl
   236a0:	bne.n	236fe <btrfs_record_file_extent@@Base+0xc2>
   236a2:	ldrd	r3, r4, [sp, #224]	; 0xe0
   236a6:	mov	r1, fp
   236a8:	mov	r0, r6
   236aa:	strd	r9, sl, [sp, #8]
   236ae:	strd	r3, r4, [sp, #24]
   236b2:	strd	r3, r4, [sp, #16]
   236b6:	ldr	r3, [sp, #68]	; 0x44
   236b8:	str	r3, [sp, #0]
   236ba:	ldr	r3, [sp, #72]	; 0x48
   236bc:	str	r3, [sp, #4]
   236be:	ldrd	r2, r3, [sp, #96]	; 0x60
   236c2:	bl	2e0ca <btrfs_insert_file_extent@@Base>
   236c6:	mov	r4, r0
   236c8:	cmp	r4, #0
   236ca:	blt.n	23710 <btrfs_record_file_extent@@Base+0xd4>
   236cc:	ldr	r3, [sp, #224]	; 0xe0
   236ce:	ldr	r2, [sp, #224]	; 0xe0
   236d0:	adds.w	r9, r9, r3
   236d4:	ldr	r3, [sp, #228]	; 0xe4
   236d6:	adc.w	sl, sl, r3
   236da:	ldr	r3, [sp, #68]	; 0x44
   236dc:	adds	r3, r3, r2
   236de:	ldr	r2, [sp, #228]	; 0xe4
   236e0:	str	r3, [sp, #68]	; 0x44
   236e2:	ldr	r3, [sp, #72]	; 0x48
   236e4:	adc.w	r3, r2, r3
   236e8:	ldr	r2, [sp, #224]	; 0xe0
   236ea:	str	r3, [sp, #72]	; 0x48
   236ec:	ldr	r3, [sp, #56]	; 0x38
   236ee:	subs	r3, r3, r2
   236f0:	ldr	r2, [sp, #228]	; 0xe4
   236f2:	str	r3, [sp, #56]	; 0x38
   236f4:	ldr	r3, [sp, #60]	; 0x3c
   236f6:	sbc.w	r3, r3, r2
   236fa:	str	r3, [sp, #60]	; 0x3c
   236fc:	b.n	23694 <btrfs_record_file_extent@@Base+0x58>
   236fe:	ldr.w	r3, [fp, #464]	; 0x1d0
   23702:	ldr	r7, [r3, #24]
   23704:	bl	17e50 <btrfs_alloc_path@@Base>
   23708:	mov	r5, r0
   2370a:	cbnz	r0, 23726 <btrfs_record_file_extent@@Base+0xea>
   2370c:	mvn.w	r4, #11
   23710:	ldr	r2, [pc, #904]	; (23a9c <btrfs_record_file_extent@@Base+0x460>)
   23712:	ldr	r3, [pc, #892]	; (23a90 <btrfs_record_file_extent@@Base+0x454>)
   23714:	add	r2, pc
   23716:	ldr	r3, [r2, r3]
   23718:	ldr	r2, [r3, #0]
   2371a:	ldr	r3, [sp, #148]	; 0x94
   2371c:	eors	r2, r3
   2371e:	beq.w	23a7e <btrfs_record_file_extent@@Base+0x442>
   23722:	blx	84cc <__stack_chk_fail@plt>
   23726:	mov.w	r2, #4294967295	; 0xffffffff
   2372a:	movs	r3, #108	; 0x6c
   2372c:	movs	r0, #0
   2372e:	strb.w	r3, [sp, #136]	; 0x88
   23732:	strb.w	r2, [sp, #137]	; 0x89
   23736:	mov	r3, r5
   23738:	strb.w	r2, [sp, #138]	; 0x8a
   2373c:	mov	r1, r7
   2373e:	strb.w	r2, [sp, #139]	; 0x8b
   23742:	strb.w	r2, [sp, #140]	; 0x8c
   23746:	strb.w	r2, [sp, #141]	; 0x8d
   2374a:	strb.w	r2, [sp, #142]	; 0x8e
   2374e:	strb.w	r2, [sp, #143]	; 0x8f
   23752:	strb.w	r2, [sp, #144]	; 0x90
   23756:	add	r2, sp, #128	; 0x80
   23758:	strd	r0, r0, [sp]
   2375c:	strd	r9, sl, [sp, #128]	; 0x80
   23760:	bl	1a23c <btrfs_search_slot@@Base>
   23764:	subs	r4, r0, #0
   23766:	blt.w	23a76 <btrfs_record_file_extent@@Base+0x43a>
   2376a:	ldr	r0, [pc, #820]	; (23aa0 <btrfs_record_file_extent@@Base+0x464>)
   2376c:	ite	eq
   2376e:	moveq	r3, #1
   23770:	movne	r3, #0
   23772:	vmov	r2, s16
   23776:	vmov	r1, s17
   2377a:	add	r0, pc
   2377c:	str	r3, [sp, #0]
   2377e:	movw	r3, #3407	; 0xd4f
   23782:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   23786:	movs	r2, #0
   23788:	movs	r3, #0
   2378a:	mov	r1, r5
   2378c:	mov	r0, r7
   2378e:	bl	1b998 <btrfs_previous_extent_item@@Base>
   23792:	subs	r4, r0, #0
   23794:	blt.w	23a76 <btrfs_record_file_extent@@Base+0x43a>
   23798:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2379c:	ldrd	r0, r1, [sp, #224]	; 0xe0
   237a0:	strd	r2, r3, [sp, #40]	; 0x28
   237a4:	movs	r3, #0
   237a6:	cmp	r3, r1
   237a8:	mov.w	r2, #134217728	; 0x8000000
   237ac:	it	eq
   237ae:	cmpeq	r2, r0
   237b0:	it	cc
   237b2:	strdcc	r2, r3, [sp, #40]	; 0x28
   237b6:	cmp	r4, #0
   237b8:	bne.w	23972 <btrfs_record_file_extent@@Base+0x336>
   237bc:	add	r3, sp, #120	; 0x78
   237be:	add	r2, sp, #112	; 0x70
   237c0:	add.w	r0, r7, #464	; 0x1d0
   237c4:	mov	r1, r5
   237c6:	bl	1eb4c <btrfs_create_tree@@Base+0x7d0>
   237ca:	ldr	r2, [sp, #120]	; 0x78
   237cc:	ldr	r3, [sp, #112]	; 0x70
   237ce:	adds	r3, r3, r2
   237d0:	ldr	r2, [sp, #116]	; 0x74
   237d2:	str	r3, [sp, #104]	; 0x68
   237d4:	ldr	r3, [sp, #124]	; 0x7c
   237d6:	adc.w	r3, r2, r3
   237da:	str	r3, [sp, #108]	; 0x6c
   237dc:	ldrd	r3, r4, [sp, #104]	; 0x68
   237e0:	cmp	sl, r4
   237e2:	it	eq
   237e4:	cmpeq	r9, r3
   237e6:	bcs.w	23972 <btrfs_record_file_extent@@Base+0x336>
   237ea:	add.w	r0, r7, #464	; 0x1d0
   237ee:	add	r3, sp, #128	; 0x80
   237f0:	add	r2, sp, #120	; 0x78
   237f2:	mov	r1, r5
   237f4:	bl	1eb4c <btrfs_create_tree@@Base+0x7d0>
   237f8:	ldrd	r3, r4, [sp, #120]	; 0x78
   237fc:	ldr	r2, [pc, #676]	; (23aa4 <btrfs_record_file_extent@@Base+0x468>)
   237fe:	cmp	sl, r4
   23800:	ldr	r1, [pc, #676]	; (23aa8 <btrfs_record_file_extent@@Base+0x46c>)
   23802:	it	eq
   23804:	cmpeq	r9, r3
   23806:	ldr	r0, [pc, #676]	; (23aac <btrfs_record_file_extent@@Base+0x470>)
   23808:	add	r2, pc
   2380a:	strd	r3, r4, [sp, #48]	; 0x30
   2380e:	addw	r2, r2, #906	; 0x38a
   23812:	ite	cc
   23814:	movcc	r3, #1
   23816:	movcs	r3, #0
   23818:	add	r1, pc
   2381a:	str	r3, [sp, #0]
   2381c:	add	r0, pc
   2381e:	movw	r3, #3487	; 0xd9f
   23822:	bl	1e92c <btrfs_create_tree@@Base+0x5b0>
   23826:	ldr	r3, [sp, #48]	; 0x30
   23828:	ldrd	r8, r7, [sp, #128]	; 0x80
   2382c:	subs.w	r3, r9, r3
   23830:	str	r3, [sp, #80]	; 0x50
   23832:	ldr	r3, [sp, #52]	; 0x34
   23834:	sbc.w	r3, sl, r3
   23838:	mov	r0, r5
   2383a:	str	r3, [sp, #84]	; 0x54
   2383c:	bl	17e58 <btrfs_release_path@@Base>
   23840:	ldr	r3, [sp, #96]	; 0x60
   23842:	mov	r2, r5
   23844:	mov	r1, fp
   23846:	mov	r0, r6
   23848:	str	r3, [sp, #128]	; 0x80
   2384a:	ldr	r3, [sp, #100]	; 0x64
   2384c:	str	r3, [sp, #132]	; 0x84
   2384e:	ldr	r3, [sp, #68]	; 0x44
   23850:	str.w	r3, [sp, #137]	; 0x89
   23854:	ldr	r3, [sp, #72]	; 0x48
   23856:	str.w	r3, [sp, #141]	; 0x8d
   2385a:	movs	r3, #108	; 0x6c
   2385c:	strb.w	r3, [sp, #136]	; 0x88
   23860:	movs	r3, #53	; 0x35
   23862:	str	r3, [sp, #120]	; 0x78
   23864:	movs	r3, #1
   23866:	str	r3, [sp, #4]
   23868:	add	r3, sp, #120	; 0x78
   2386a:	str	r3, [sp, #0]
   2386c:	add	r3, sp, #128	; 0x80
   2386e:	bl	1b00c <btrfs_insert_empty_items@@Base>
   23872:	mov	r4, r0
   23874:	cmp	r0, #0
   23876:	bne.w	23a76 <btrfs_record_file_extent@@Base+0x43a>
   2387a:	ldr	r0, [r5, #0]
   2387c:	mov.w	lr, #25
   23880:	ldr	r3, [r5, #32]
   23882:	add.w	r2, r0, #96	; 0x60
   23886:	ldr	r1, [r6, #8]
   23888:	ldr.w	ip, [r6, #12]
   2388c:	mla	r3, lr, r3, r2
   23890:	ldr.w	lr, [r3, #118]	; 0x76
   23894:	add.w	lr, lr, #101	; 0x65
   23898:	add.w	r3, r2, lr
   2389c:	str.w	r1, [r2, lr]
   238a0:	mov.w	r2, #1
   238a4:	strb	r2, [r3, #20]
   238a6:	ldr	r2, [sp, #48]	; 0x30
   238a8:	str.w	ip, [r3, #4]
   238ac:	strb	r4, [r3, #16]
   238ae:	str.w	r2, [r3, #21]
   238b2:	ldr	r2, [sp, #52]	; 0x34
   238b4:	strb	r4, [r3, #17]
   238b6:	strb	r4, [r3, #18]
   238b8:	str.w	r2, [r3, #25]
   238bc:	ldr	r2, [sp, #80]	; 0x50
   238be:	strb	r4, [r3, #19]
   238c0:	str.w	r8, [r3, #29]
   238c4:	str.w	r2, [r3, #37]	; 0x25
   238c8:	ldr	r2, [sp, #84]	; 0x54
   238ca:	str.w	r7, [r3, #33]	; 0x21
   238ce:	str.w	r8, [r3, #8]
   238d2:	str.w	r2, [r3, #41]	; 0x29
   238d6:	ldr	r2, [sp, #40]	; 0x28
   238d8:	str	r7, [r3, #12]
   238da:	str.w	r2, [r3, #45]	; 0x2d
   238de:	ldr	r2, [sp, #44]	; 0x2c
   238e0:	str.w	r2, [r3, #49]	; 0x31
   238e4:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   238e8:	ldr	r3, [sp, #76]	; 0x4c
   238ea:	ldr	r2, [sp, #76]	; 0x4c
   238ec:	mov	r0, r5
   238ee:	ldr	r1, [sp, #40]	; 0x28
   238f0:	ldr	r3, [r3, #24]
   238f2:	ldr	r2, [r2, #28]
   238f4:	adds	r3, r3, r1
   238f6:	ldr	r1, [sp, #44]	; 0x2c
   238f8:	adc.w	r2, r1, r2
   238fc:	ldr	r1, [sp, #76]	; 0x4c
   238fe:	str	r3, [r1, #24]
   23900:	str	r2, [r1, #28]
   23902:	bl	17e58 <btrfs_release_path@@Base>
   23906:	ldr	r3, [sp, #68]	; 0x44
   23908:	ldr	r2, [sp, #80]	; 0x50
   2390a:	mov	r0, r6
   2390c:	ldr	r1, [sp, #84]	; 0x54
   2390e:	subs	r2, r3, r2
   23910:	ldr	r3, [sp, #72]	; 0x48
   23912:	strd	r8, r7, [sp]
   23916:	sbc.w	r3, r3, r1
   2391a:	strd	r2, r3, [sp, #32]
   2391e:	ldr	r3, [sp, #96]	; 0x60
   23920:	mov	r1, fp
   23922:	ldr.w	r2, [fp, #447]	; 0x1bf
   23926:	str	r3, [sp, #24]
   23928:	ldr	r3, [sp, #100]	; 0x64
   2392a:	str	r3, [sp, #28]
   2392c:	ldr.w	r3, [fp, #451]	; 0x1c3
   23930:	strd	r2, r3, [sp, #16]
   23934:	movs	r2, #0
   23936:	movs	r3, #0
   23938:	strd	r2, r3, [sp, #8]
   2393c:	ldrd	r2, r3, [sp, #48]	; 0x30
   23940:	bl	200f0 <btrfs_inc_extent_ref@@Base>
   23944:	mov	r4, r0
   23946:	cmp	r0, #0
   23948:	bne.w	23a76 <btrfs_record_file_extent@@Base+0x43a>
   2394c:	ldr	r3, [sp, #80]	; 0x50
   2394e:	subs.w	r3, r8, r3
   23952:	str	r3, [sp, #224]	; 0xe0
   23954:	ldr	r3, [sp, #84]	; 0x54
   23956:	sbc.w	r3, r7, r3
   2395a:	str	r3, [sp, #228]	; 0xe4
   2395c:	ldrd	r0, r1, [sp, #224]	; 0xe0
   23960:	ldrd	r2, r3, [sp, #40]	; 0x28
   23964:	cmp	r3, r1
   23966:	it	eq
   23968:	cmpeq	r2, r0
   2396a:	it	cc
   2396c:	strdcc	r2, r3, [sp, #224]	; 0xe0
   23970:	b.n	23a76 <btrfs_record_file_extent@@Base+0x43a>
   23972:	ldr	r3, [sp, #40]	; 0x28
   23974:	mov	r1, r5
   23976:	mov	r0, r7
   23978:	adds.w	r3, r9, r3
   2397c:	str	r3, [sp, #88]	; 0x58
   2397e:	ldr	r3, [sp, #44]	; 0x2c
   23980:	adc.w	r3, sl, r3
   23984:	str	r3, [sp, #92]	; 0x5c
   23986:	ldrd	r2, r3, [sp, #88]	; 0x58
   2398a:	bl	1ba3c <btrfs_next_extent_item@@Base>
   2398e:	subs	r4, r0, #0
   23990:	blt.n	23a76 <btrfs_record_file_extent@@Base+0x43a>
   23992:	bne.n	239b4 <btrfs_record_file_extent@@Base+0x378>
   23994:	add	r3, sp, #120	; 0x78
   23996:	add	r2, sp, #112	; 0x70
   23998:	add.w	r0, r7, #464	; 0x1d0
   2399c:	mov	r1, r5
   2399e:	bl	1eb4c <btrfs_create_tree@@Base+0x7d0>
   239a2:	ldrd	r2, r3, [sp, #112]	; 0x70
   239a6:	ldrd	r0, r1, [sp, #88]	; 0x58
   239aa:	cmp	r3, r1
   239ac:	it	eq
   239ae:	cmpeq	r2, r0
   239b0:	bcc.w	237ea <btrfs_record_file_extent@@Base+0x1ae>
   239b4:	mov	r0, r5
   239b6:	mov.w	r8, #1
   239ba:	bl	17e58 <btrfs_release_path@@Base>
   239be:	ldr	r3, [sp, #40]	; 0x28
   239c0:	mov	r2, r5
   239c2:	mov	r1, r7
   239c4:	mov	r0, r6
   239c6:	str.w	r8, [sp, #4]
   239ca:	str.w	r3, [sp, #137]	; 0x89
   239ce:	ldr	r3, [sp, #44]	; 0x2c
   239d0:	strd	r9, sl, [sp, #128]	; 0x80
   239d4:	str.w	r3, [sp, #141]	; 0x8d
   239d8:	movs	r3, #168	; 0xa8
   239da:	strb.w	r3, [sp, #136]	; 0x88
   239de:	movs	r3, #24
   239e0:	str	r3, [sp, #120]	; 0x78
   239e2:	add	r3, sp, #120	; 0x78
   239e4:	str	r3, [sp, #0]
   239e6:	add	r3, sp, #128	; 0x80
   239e8:	bl	1b00c <btrfs_insert_empty_items@@Base>
   239ec:	mov	r4, r0
   239ee:	cmp	r0, #0
   239f0:	bne.n	23a70 <btrfs_record_file_extent@@Base+0x434>
   239f2:	ldr	r0, [r5, #0]
   239f4:	movs	r2, #25
   239f6:	ldr	r3, [r5, #32]
   239f8:	add.w	r1, r0, #96	; 0x60
   239fc:	mla	r3, r2, r3, r1
   23a00:	ldr.w	r2, [r3, #118]	; 0x76
   23a04:	adds	r2, #101	; 0x65
   23a06:	adds	r3, r1, r2
   23a08:	strb	r4, [r1, r2]
   23a0a:	strb	r4, [r3, #1]
   23a0c:	strb	r4, [r3, #2]
   23a0e:	strb	r4, [r3, #3]
   23a10:	strb	r4, [r3, #4]
   23a12:	strb	r4, [r3, #5]
   23a14:	strb	r4, [r3, #6]
   23a16:	strb	r4, [r3, #7]
   23a18:	strb	r4, [r3, #8]
   23a1a:	strb	r4, [r3, #9]
   23a1c:	strb	r4, [r3, #10]
   23a1e:	strb	r4, [r3, #11]
   23a20:	strb	r4, [r3, #12]
   23a22:	strb	r4, [r3, #13]
   23a24:	strb	r4, [r3, #14]
   23a26:	strb	r4, [r3, #15]
   23a28:	strb.w	r8, [r3, #16]
   23a2c:	strb	r4, [r3, #17]
   23a2e:	strb	r4, [r3, #18]
   23a30:	strb	r4, [r3, #19]
   23a32:	strb	r4, [r3, #20]
   23a34:	strb	r4, [r3, #21]
   23a36:	strb	r4, [r3, #22]
   23a38:	strb	r4, [r3, #23]
   23a3a:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   23a3e:	strd	r8, r4, [sp, #8]
   23a42:	ldrd	r3, r4, [sp, #40]	; 0x28
   23a46:	mov	r2, r9
   23a48:	mov	r0, fp
   23a4a:	strd	r3, r4, [sp]
   23a4e:	mov	r3, sl
   23a50:	bl	21250 <btrfs_update_block_group@@Base>
   23a54:	mov	r4, r0
   23a56:	cbnz	r0, 23a76 <btrfs_record_file_extent@@Base+0x43a>
   23a58:	mov.w	r1, #4294967295	; 0xffffffff
   23a5c:	mov	r0, r6
   23a5e:	bl	22ee4 <btrfs_run_delayed_refs@@Base>
   23a62:	movs	r3, #0
   23a64:	ldrd	r8, r7, [sp, #40]	; 0x28
   23a68:	strd	r9, sl, [sp, #48]	; 0x30
   23a6c:	str	r3, [sp, #80]	; 0x50
   23a6e:	b.n	23838 <btrfs_record_file_extent@@Base+0x1fc>
   23a70:	cmn.w	r0, #17
   23a74:	beq.n	23a58 <btrfs_record_file_extent@@Base+0x41c>
   23a76:	mov	r0, r5
   23a78:	bl	17e7e <btrfs_free_path@@Base>
   23a7c:	b.n	236c8 <btrfs_record_file_extent@@Base+0x8c>
   23a7e:	mov	r0, r4
   23a80:	add	sp, #156	; 0x9c
   23a82:	vpop	{d8}
   23a86:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a8a:	nop
   23a8c:	asrs	r6, r5, #28
   23a8e:	movs	r4, r0
   23a90:	lsls	r4, r4, #8
   23a92:	movs	r0, r0
   23a94:	add	r3, sp, #240	; 0xf0
   23a96:	movs	r1, r0
   23a98:	add	r3, pc, #1012	; (adr r3, 23e90 <btrfs_select_ref_head@@Base+0x54>)
   23a9a:	movs	r1, r0
   23a9c:	asrs	r4, r6, #25
   23a9e:	movs	r4, r0
   23aa0:	strb	r0, [r3, #20]
   23aa2:	movs	r1, r0
   23aa4:	add	r1, sp, #720	; 0x2d0
   23aa6:	movs	r1, r0
   23aa8:	add	r2, pc, #460	; (adr r2, 23c78 <btrfs_record_file_extent@@Base+0x63c>)
   23aaa:	movs	r1, r0
   23aac:	add	r1, sp, #544	; 0x220
   23aae:	movs	r1, r0
   23ab0:	ldr	r2, [pc, #60]	; (23af0 <btrfs_record_file_extent@@Base+0x4b4>)
   23ab2:	movs	r1, #16
   23ab4:	ldr	r3, [pc, #60]	; (23af4 <btrfs_record_file_extent@@Base+0x4b8>)
   23ab6:	push	{r4, lr}
   23ab8:	add	r2, pc
   23aba:	sub	sp, #72	; 0x48
   23abc:	add	r4, sp, #4
   23abe:	ldr	r3, [r2, r3]
   23ac0:	mov	r0, r4
   23ac2:	ldr	r3, [r3, #0]
   23ac4:	str	r3, [sp, #68]	; 0x44
   23ac6:	mov.w	r3, #0
   23aca:	blx	8680 <backtrace@plt>
   23ace:	movs	r2, #2
   23ad0:	mov	r1, r0
   23ad2:	mov	r0, r4
   23ad4:	blx	8990 <backtrace_symbols_fd@plt>
   23ad8:	ldr	r2, [pc, #28]	; (23af8 <btrfs_record_file_extent@@Base+0x4bc>)
   23ada:	ldr	r3, [pc, #24]	; (23af4 <btrfs_record_file_extent@@Base+0x4b8>)
   23adc:	add	r2, pc
   23ade:	ldr	r3, [r2, r3]
   23ae0:	ldr	r2, [r3, #0]
   23ae2:	ldr	r3, [sp, #68]	; 0x44
   23ae4:	eors	r2, r3
   23ae6:	beq.n	23aec <btrfs_record_file_extent@@Base+0x4b0>
   23ae8:	blx	84cc <__stack_chk_fail@plt>
   23aec:	add	sp, #72	; 0x48
   23aee:	pop	{r4, pc}
   23af0:	asrs	r0, r2, #11
   23af2:	movs	r4, r0
   23af4:	lsls	r4, r4, #8
   23af6:	movs	r0, r0
   23af8:	asrs	r4, r5, #10
   23afa:	movs	r4, r0
   23afc:	push	{r0, r1, r2, r3, r4, lr}
   23afe:	ldr	r4, [pc, #40]	; (23b28 <btrfs_record_file_extent@@Base+0x4ec>)
   23b00:	ldr	r5, [pc, #40]	; (23b2c <btrfs_record_file_extent@@Base+0x4f0>)
   23b02:	add	r4, pc
   23b04:	ldr	r4, [r4, r5]
   23b06:	ldr	r5, [sp, #24]
   23b08:	strd	r3, r2, [sp]
   23b0c:	mov	r3, r1
   23b0e:	ldr	r2, [pc, #32]	; (23b30 <btrfs_record_file_extent@@Base+0x4f4>)
   23b10:	movs	r1, #1
   23b12:	strd	r0, r5, [sp, #8]
   23b16:	add	r2, pc
   23b18:	ldr	r0, [r4, #0]
   23b1a:	blx	881c <__fprintf_chk@plt+0x4>
   23b1e:	bl	23ab0 <btrfs_record_file_extent@@Base+0x474>
   23b22:	blx	8948 <abort@plt>
   23b26:	nop
   23b28:	asrs	r6, r0, #10
   23b2a:	movs	r4, r0
   23b2c:	lsls	r4, r6, #8
   23b2e:	movs	r0, r0
   23b30:	ldrsh	r3, [r7, r5]
   23b32:	movs	r1, r0
   23b34:	push	{r0, r1, r2, lr}
   23b36:	movs	r3, #1
   23b38:	ldr	r2, [pc, #16]	; (23b4c <btrfs_record_file_extent@@Base+0x510>)
   23b3a:	ldr	r1, [pc, #20]	; (23b50 <btrfs_record_file_extent@@Base+0x514>)
   23b3c:	ldr	r0, [pc, #20]	; (23b54 <btrfs_record_file_extent@@Base+0x518>)
   23b3e:	add	r2, pc
   23b40:	str	r3, [sp, #0]
   23b42:	add	r1, pc
   23b44:	add	r0, pc
   23b46:	movs	r3, #55	; 0x37
   23b48:	bl	23afc <btrfs_record_file_extent@@Base+0x4c0>
   23b4c:	add	r3, sp, #208	; 0xd0
   23b4e:	movs	r1, r0
   23b50:	add	r2, sp, #124	; 0x7c
   23b52:	movs	r1, r0
   23b54:	add	r2, pc, #668	; (adr r2, 23df4 <btrfs_merge_delayed_refs@@Base+0xcc>)
   23b56:	movs	r1, r0
   23b58:	push	{r4, r5, lr}
   23b5a:	sub	sp, #20
   23b5c:	ldr	r4, [pc, #36]	; (23b84 <btrfs_record_file_extent@@Base+0x548>)
   23b5e:	ldr	r5, [pc, #40]	; (23b88 <btrfs_record_file_extent@@Base+0x54c>)
   23b60:	add	r4, pc
   23b62:	ldr	r4, [r4, r5]
   23b64:	ldr	r5, [sp, #32]
   23b66:	strd	r3, r2, [sp]
   23b6a:	mov	r3, r1
   23b6c:	ldr	r2, [pc, #28]	; (23b8c <btrfs_record_file_extent@@Base+0x550>)
   23b6e:	movs	r1, #1
   23b70:	strd	r0, r5, [sp, #8]
   23b74:	add	r2, pc
   23b76:	ldr	r0, [r4, #0]
   23b78:	blx	881c <__fprintf_chk@plt+0x4>
   23b7c:	add	sp, #20
   23b7e:	ldmia.w	sp!, {r4, r5, lr}
   23b82:	b.n	23ab0 <btrfs_record_file_extent@@Base+0x474>
   23b84:	asrs	r0, r5, #8
   23b86:	movs	r4, r0
   23b88:	lsls	r4, r6, #8
   23b8a:	movs	r0, r0
   23b8c:	str	r4, [r6, #84]	; 0x54
   23b8e:	movs	r1, r0
   23b90:	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
   23b94:	mov	r6, r0
   23b96:	mov	r5, r3
   23b98:	mov	r4, r2
   23b9a:	ldr	r3, [r0, #0]
   23b9c:	movs	r0, #0
   23b9e:	cbnz	r3, 23bc2 <btrfs_record_file_extent@@Base+0x586>
   23ba0:	cbz	r0, 23bbe <btrfs_record_file_extent@@Base+0x582>
   23ba2:	ldrd	r2, r3, [r0]
   23ba6:	cmp	r3, r5
   23ba8:	it	eq
   23baa:	cmpeq	r2, r4
   23bac:	bcs.n	23bbe <btrfs_record_file_extent@@Base+0x582>
   23bae:	adds	r0, #36	; 0x24
   23bb0:	bl	13e66 <rb_next@@Base>
   23bb4:	cbnz	r0, 23bbc <btrfs_record_file_extent@@Base+0x580>
   23bb6:	mov	r0, r6
   23bb8:	bl	13e46 <rb_first@@Base>
   23bbc:	subs	r0, #36	; 0x24
   23bbe:	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
   23bc2:	ldrd	r8, r9, [r3, #-36]	; 0x24
   23bc6:	sub.w	r0, r3, #36	; 0x24
   23bca:	cmp	r5, r9
   23bcc:	it	eq
   23bce:	cmpeq	r4, r8
   23bd0:	bcs.n	23bd6 <btrfs_record_file_extent@@Base+0x59a>
   23bd2:	ldr	r3, [r3, #8]
   23bd4:	b.n	23b9e <btrfs_record_file_extent@@Base+0x562>
   23bd6:	cmp	r9, r5
   23bd8:	it	eq
   23bda:	cmpeq	r8, r4
   23bdc:	bcs.n	23bbe <btrfs_record_file_extent@@Base+0x582>
   23bde:	ldr	r3, [r3, #4]
   23be0:	b.n	23b9e <btrfs_record_file_extent@@Base+0x562>
   23be2:	push	{r0, r1, r2, r3, r4, lr}
   23be4:	ldr	r3, [pc, #40]	; (23c10 <btrfs_record_file_extent@@Base+0x5d4>)
   23be6:	ldr	r4, [pc, #44]	; (23c14 <btrfs_record_file_extent@@Base+0x5d8>)
   23be8:	add	r3, pc
   23bea:	ldr	r4, [r3, r4]
   23bec:	movs	r3, #0
   23bee:	strd	r2, r1, [sp]
   23bf2:	movs	r1, #1
   23bf4:	strd	r0, r3, [sp, #8]
   23bf8:	ldr	r2, [pc, #28]	; (23c18 <btrfs_record_file_extent@@Base+0x5dc>)
   23bfa:	ldr	r3, [pc, #32]	; (23c1c <btrfs_record_file_extent@@Base+0x5e0>)
   23bfc:	add	r2, pc
   23bfe:	ldr	r0, [r4, #0]
   23c00:	add	r3, pc
   23c02:	blx	881c <__fprintf_chk@plt+0x4>
   23c06:	bl	23ab0 <btrfs_record_file_extent@@Base+0x474>
   23c0a:	blx	8948 <abort@plt>
   23c0e:	nop
   23c10:	asrs	r0, r4, #6
   23c12:	movs	r4, r0
   23c14:	lsls	r4, r6, #8
   23c16:	movs	r0, r0
   23c18:	str	r2, [r4, #96]	; 0x60
   23c1a:	movs	r1, r0
   23c1c:	add	r1, sp, #388	; 0x184
   23c1e:	movs	r1, r0
   23c20:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   23c22:	mov	r4, r2
   23c24:	adds	r1, #24
   23c26:	mov	r5, r0
   23c28:	mov	r0, r2
   23c2a:	bl	13bd0 <rb_erase@@Base>
   23c2e:	mov	r2, r4
   23c30:	str	r4, [r4, #0]
   23c32:	ldr.w	r3, [r2, #12]!
   23c36:	cmp	r3, r2
   23c38:	beq.n	23c48 <btrfs_record_file_extent@@Base+0x60c>
   23c3a:	ldr	r2, [r4, #16]
   23c3c:	str	r2, [r3, #4]
   23c3e:	str	r3, [r2, #0]
   23c40:	ldr	r2, [pc, #184]	; (23cfc <btrfs_record_file_extent@@Base+0x6c0>)
   23c42:	ldr	r3, [pc, #188]	; (23d00 <btrfs_record_file_extent@@Base+0x6c4>)
   23c44:	strd	r2, r3, [r4, #12]
   23c48:	ldrb.w	r3, [r4, #62]	; 0x3e
   23c4c:	bfc	r3, #1, #1
   23c50:	strb.w	r3, [r4, #62]	; 0x3e
   23c54:	ldrd	r2, r3, [r4, #48]	; 0x30
   23c58:	orrs	r3, r2
   23c5a:	bne.n	23c74 <btrfs_record_file_extent@@Base+0x638>
   23c5c:	ldr	r2, [pc, #164]	; (23d04 <btrfs_record_file_extent@@Base+0x6c8>)
   23c5e:	movs	r3, #1
   23c60:	ldr	r1, [pc, #164]	; (23d08 <btrfs_record_file_extent@@Base+0x6cc>)
   23c62:	ldr	r0, [pc, #168]	; (23d0c <btrfs_record_file_extent@@Base+0x6d0>)
   23c64:	add	r2, pc
   23c66:	str	r3, [sp, #0]
   23c68:	adds	r2, #10
   23c6a:	add	r1, pc
   23c6c:	add	r0, pc
   23c6e:	movs	r3, #163	; 0xa3
   23c70:	bl	23b58 <btrfs_record_file_extent@@Base+0x51c>
   23c74:	ldrd	r3, r2, [r4, #48]	; 0x30
   23c78:	adds.w	r6, r3, #4294967295	; 0xffffffff
   23c7c:	adc.w	r7, r2, #4294967295	; 0xffffffff
   23c80:	strd	r6, r7, [r4, #48]	; 0x30
   23c84:	orrs.w	r3, r6, r7
   23c88:	bne.n	23cc8 <btrfs_record_file_extent@@Base+0x68c>
   23c8a:	ldrb.w	r3, [r4, #62]	; 0x3e
   23c8e:	lsls	r3, r3, #30
   23c90:	bpl.n	23caa <btrfs_record_file_extent@@Base+0x66e>
   23c92:	ldr	r2, [pc, #124]	; (23d10 <btrfs_record_file_extent@@Base+0x6d4>)
   23c94:	movs	r3, #1
   23c96:	ldr	r1, [pc, #124]	; (23d14 <btrfs_record_file_extent@@Base+0x6d8>)
   23c98:	ldr	r0, [pc, #124]	; (23d18 <btrfs_record_file_extent@@Base+0x6dc>)
   23c9a:	add	r2, pc
   23c9c:	str	r3, [sp, #0]
   23c9e:	adds	r2, #10
   23ca0:	add	r1, pc
   23ca2:	add	r0, pc
   23ca4:	movs	r3, #165	; 0xa5
   23ca6:	bl	23b58 <btrfs_record_file_extent@@Base+0x51c>
   23caa:	ldrb.w	r3, [r4, #61]	; 0x3d
   23cae:	subs	r3, #176	; 0xb0
   23cb0:	cmp	r3, #8
   23cb2:	bhi.n	23ce2 <btrfs_record_file_extent@@Base+0x6a6>
   23cb4:	tbb	[pc, r3]
   23cb8:	asrs	r5, r0, #20
   23cba:	asrs	r5, r0, #20
   23cbc:	asrs	r5, r2, #20
   23cbe:	asrs	r5, r0, #20
   23cc0:	movs	r5, r0
   23cc2:	mov	r0, r4
   23cc4:	blx	83f0 <free@plt+0x4>
   23cc8:	ldrd	r0, r1, [r5]
   23ccc:	orrs.w	r3, r0, r1
   23cd0:	beq.n	23cde <btrfs_record_file_extent@@Base+0x6a2>
   23cd2:	adds.w	r2, r0, #4294967295	; 0xffffffff
   23cd6:	adc.w	r3, r1, #4294967295	; 0xffffffff
   23cda:	strd	r2, r3, [r5]
   23cde:	add	sp, #12
   23ce0:	pop	{r4, r5, r6, r7, pc}
   23ce2:	ldr	r2, [pc, #56]	; (23d1c <btrfs_record_file_extent@@Base+0x6e0>)
   23ce4:	movs	r3, #1
   23ce6:	ldr	r1, [pc, #56]	; (23d20 <btrfs_record_file_extent@@Base+0x6e4>)
   23ce8:	ldr	r0, [pc, #56]	; (23d24 <btrfs_record_file_extent@@Base+0x6e8>)
   23cea:	add	r2, pc
   23cec:	str	r3, [sp, #0]
   23cee:	adds	r2, #10
   23cf0:	add	r1, pc
   23cf2:	add	r0, pc
   23cf4:	movs	r3, #176	; 0xb0
   23cf6:	bl	23afc <btrfs_record_file_extent@@Base+0x4c0>
   23cfa:	nop
   23cfc:	lsls	r0, r0, #4
   23cfe:	movs	r0, r2
   23d00:	lsls	r0, r0, #8
   23d02:	movs	r0, r4
   23d04:	add	r2, sp, #56	; 0x38
   23d06:	movs	r1, r0
   23d08:	ldr	r6, [sp, #892]	; 0x37c
   23d0a:	movs	r1, r0
   23d0c:	ldr	r6, [sp, #940]	; 0x3ac
   23d0e:	movs	r1, r0
   23d10:	add	r1, sp, #864	; 0x360
   23d12:	movs	r1, r0
   23d14:	ldr	r6, [sp, #676]	; 0x2a4
   23d16:	movs	r1, r0
   23d18:	ldr	r6, [sp, #784]	; 0x310
   23d1a:	movs	r1, r0
   23d1c:	add	r1, sp, #544	; 0x220
   23d1e:	movs	r1, r0
   23d20:	ldr	r6, [sp, #356]	; 0x164
   23d22:	movs	r1, r0
   23d24:	add	r0, pc, #996	; (adr r0, 2410c <btrfs_add_delayed_tree_ref@@Base+0x218>)
   23d26:	movs	r1, r0

00023d28 <btrfs_merge_delayed_refs@@Base>:
   23d28:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23d2c:	sub	sp, #28
   23d2e:	ldr	r3, [r2, #24]
   23d30:	mov	r5, r2
   23d32:	str	r0, [sp, #16]
   23d34:	cbz	r3, 23d56 <btrfs_merge_delayed_refs@@Base+0x2e>
   23d36:	ldrb.w	r3, [r2, #60]	; 0x3c
   23d3a:	lsls	r3, r3, #30
   23d3c:	bmi.n	23d56 <btrfs_merge_delayed_refs@@Base+0x2e>
   23d3e:	ldr	r3, [pc, #240]	; (23e30 <btrfs_merge_delayed_refs@@Base+0x108>)
   23d40:	add	r3, pc
   23d42:	add.w	r9, r3, #32
   23d46:	add.w	r0, r5, #24
   23d4a:	bl	13e46 <rb_first@@Base>
   23d4e:	mov	fp, r0
   23d50:	cmp.w	fp, #0
   23d54:	bne.n	23d5c <btrfs_merge_delayed_refs@@Base+0x34>
   23d56:	add	sp, #28
   23d58:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23d5c:	mov	r0, fp
   23d5e:	ldr.w	r8, [pc, #212]	; 23e34 <btrfs_merge_delayed_refs@@Base+0x10c>
   23d62:	bl	13e66 <rb_next@@Base>
   23d66:	mov	r4, fp
   23d68:	add	r8, pc
   23d6a:	mov	sl, r0
   23d6c:	cmp.w	sl, #0
   23d70:	bne.n	23d7a <btrfs_merge_delayed_refs@@Base+0x52>
   23d72:	mov	r0, fp
   23d74:	bl	13e66 <rb_next@@Base>
   23d78:	b.n	23d4e <btrfs_merge_delayed_refs@@Base+0x26>
   23d7a:	mov	r0, sl
   23d7c:	bl	13e66 <rb_next@@Base>
   23d80:	ldrb.w	r2, [r4, #61]	; 0x3d
   23d84:	ldrb.w	r3, [sl, #61]	; 0x3d
   23d88:	cmp	r3, r2
   23d8a:	str	r0, [sp, #12]
   23d8c:	bne.n	23d72 <btrfs_merge_delayed_refs@@Base+0x4a>
   23d8e:	cmp	r3, #176	; 0xb0
   23d90:	beq.n	23d9a <btrfs_merge_delayed_refs@@Base+0x72>
   23d92:	cmp	r3, #182	; 0xb6
   23d94:	beq.n	23dfa <btrfs_merge_delayed_refs@@Base+0xd2>
   23d96:	bl	23b34 <btrfs_record_file_extent@@Base+0x4f8>
   23d9a:	ldrd	r2, r3, [r4, #64]	; 0x40
   23d9e:	ldrd	r6, r7, [sl, #64]	; 0x40
   23da2:	cmp	r3, r7
   23da4:	it	eq
   23da6:	cmpeq	r2, r6
   23da8:	bne.n	23d72 <btrfs_merge_delayed_refs@@Base+0x4a>
   23daa:	ldrb.w	r2, [r4, #60]	; 0x3c
   23dae:	ldrb.w	r3, [sl, #60]	; 0x3c
   23db2:	ldr.w	r7, [sl, #56]	; 0x38
   23db6:	cmp	r2, r3
   23db8:	beq.n	23e04 <btrfs_merge_delayed_refs@@Base+0xdc>
   23dba:	ldr	r3, [r4, #56]	; 0x38
   23dbc:	cmp	r3, r7
   23dbe:	itttt	ge
   23dc0:	movge	r3, sl
   23dc2:	movge	sl, r4
   23dc4:	movge	r4, r3
   23dc6:	movge	r6, #0
   23dc8:	ldr	r7, [r4, #56]	; 0x38
   23dca:	mov	r3, r4
   23dcc:	it	lt
   23dce:	movlt	r6, #1
   23dd0:	mov	r4, sl
   23dd2:	negs	r7, r7
   23dd4:	mov	sl, r3
   23dd6:	ldr	r3, [sp, #16]
   23dd8:	mov	r2, sl
   23dda:	mov	r1, r5
   23ddc:	add.w	r0, r3, #40	; 0x28
   23de0:	str	r0, [sp, #20]
   23de2:	bl	23c20 <btrfs_record_file_extent@@Base+0x5e4>
   23de6:	ldr	r3, [r4, #56]	; 0x38
   23de8:	ldr	r0, [sp, #20]
   23dea:	add	r7, r3
   23dec:	str	r7, [r4, #56]	; 0x38
   23dee:	cbnz	r7, 23e08 <btrfs_merge_delayed_refs@@Base+0xe0>
   23df0:	mov	r2, r4
   23df2:	mov	r1, r5
   23df4:	bl	23c20 <btrfs_record_file_extent@@Base+0x5e4>
   23df8:	b.n	23d46 <btrfs_merge_delayed_refs@@Base+0x1e>
   23dfa:	ldrd	r2, r3, [r4, #72]	; 0x48
   23dfe:	ldrd	r6, r7, [sl, #72]	; 0x48
   23e02:	b.n	23da2 <btrfs_merge_delayed_refs@@Base+0x7a>
   23e04:	movs	r6, #0
   23e06:	b.n	23dd6 <btrfs_merge_delayed_refs@@Base+0xae>
   23e08:	ldrb.w	r3, [r4, #61]	; 0x3d
   23e0c:	cmp	r3, #176	; 0xb0
   23e0e:	beq.n	23e14 <btrfs_merge_delayed_refs@@Base+0xec>
   23e10:	cmp	r3, #182	; 0xb6
   23e12:	bne.n	23e26 <btrfs_merge_delayed_refs@@Base+0xfe>
   23e14:	ldr	r0, [pc, #32]	; (23e38 <btrfs_merge_delayed_refs@@Base+0x110>)
   23e16:	movs	r3, #1
   23e18:	mov	r2, r9
   23e1a:	str	r3, [sp, #0]
   23e1c:	add	r0, pc
   23e1e:	movs	r3, #219	; 0xdb
   23e20:	mov	r1, r8
   23e22:	bl	23b58 <btrfs_record_file_extent@@Base+0x51c>
   23e26:	cmp	r6, #0
   23e28:	bne.n	23d46 <btrfs_merge_delayed_refs@@Base+0x1e>
   23e2a:	ldr.w	sl, [sp, #12]
   23e2e:	b.n	23d6c <btrfs_merge_delayed_refs@@Base+0x44>
   23e30:	add	r1, sp, #200	; 0xc8
   23e32:	movs	r1, r0
   23e34:	add	r7, pc, #996	; (adr r7, 2421c <btrfs_add_delayed_tree_ref@@Base+0x328>)
   23e36:	movs	r1, r0
   23e38:	add	r7, pc, #332	; (adr r7, 23f88 <btrfs_add_delayed_tree_ref@@Base+0x94>)
   23e3a:	movs	r1, r0

00023e3c <btrfs_select_ref_head@@Base>:
   23e3c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   23e40:	add.w	r9, r0, #64	; 0x40
   23e44:	mov	r8, r0
   23e46:	movs	r5, #0
   23e48:	movs	r6, #0
   23e4a:	movs	r7, #0
   23e4c:	ldrd	r2, r3, [r8, #88]	; 0x58
   23e50:	mov	r0, r9
   23e52:	bl	23b90 <btrfs_record_file_extent@@Base+0x554>
   23e56:	mov	r4, r0
   23e58:	cbnz	r0, 23e7c <btrfs_select_ref_head@@Base+0x40>
   23e5a:	cbz	r5, 23e66 <btrfs_select_ref_head@@Base+0x2a>
   23e5c:	movs	r4, #0
   23e5e:	mov	r0, r4
   23e60:	add	sp, #12
   23e62:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   23e66:	movs	r2, #0
   23e68:	movs	r3, #0
   23e6a:	mov	r0, r9
   23e6c:	strd	r6, r7, [r8, #88]	; 0x58
   23e70:	bl	23b90 <btrfs_record_file_extent@@Base+0x554>
   23e74:	mov	r4, r0
   23e76:	cmp	r0, #0
   23e78:	beq.n	23e5c <btrfs_select_ref_head@@Base+0x20>
   23e7a:	movs	r5, #1
   23e7c:	ldrb.w	r2, [r4, #60]	; 0x3c
   23e80:	mov	r3, r2
   23e82:	lsls	r2, r2, #28
   23e84:	bmi.n	23ecc <btrfs_select_ref_head@@Base+0x90>
   23e86:	orr.w	r3, r3, #8
   23e8a:	strb.w	r3, [r4, #60]	; 0x3c
   23e8e:	ldr.w	r3, [r8, #76]	; 0x4c
   23e92:	cbnz	r3, 23eae <btrfs_select_ref_head@@Base+0x72>
   23e94:	ldr	r2, [pc, #80]	; (23ee8 <btrfs_select_ref_head@@Base+0xac>)
   23e96:	movs	r3, #1
   23e98:	ldr	r1, [pc, #80]	; (23eec <btrfs_select_ref_head@@Base+0xb0>)
   23e9a:	ldr	r0, [pc, #84]	; (23ef0 <btrfs_select_ref_head@@Base+0xb4>)
   23e9c:	add	r2, pc
   23e9e:	str	r3, [sp, #0]
   23ea0:	adds	r2, #42	; 0x2a
   23ea2:	add	r1, pc
   23ea4:	add	r0, pc
   23ea6:	mov.w	r3, #290	; 0x122
   23eaa:	bl	23b58 <btrfs_record_file_extent@@Base+0x51c>
   23eae:	ldr.w	r3, [r8, #76]	; 0x4c
   23eb2:	subs	r3, #1
   23eb4:	str.w	r3, [r8, #76]	; 0x4c
   23eb8:	ldrd	r3, r2, [r4]
   23ebc:	ldrd	r1, r0, [r4, #8]
   23ec0:	adds	r3, r3, r1
   23ec2:	adc.w	r2, r0, r2
   23ec6:	strd	r3, r2, [r8, #88]	; 0x58
   23eca:	b.n	23e5e <btrfs_select_ref_head@@Base+0x22>
   23ecc:	add.w	r0, r4, #36	; 0x24
   23ed0:	bl	13e66 <rb_next@@Base>
   23ed4:	cbnz	r0, 23ee2 <btrfs_select_ref_head@@Base+0xa6>
   23ed6:	cmp	r5, #0
   23ed8:	bne.n	23e5c <btrfs_select_ref_head@@Base+0x20>
   23eda:	movs	r5, #1
   23edc:	strd	r6, r7, [r8, #88]	; 0x58
   23ee0:	b.n	23e4c <btrfs_select_ref_head@@Base+0x10>
   23ee2:	sub.w	r4, r0, #36	; 0x24
   23ee6:	b.n	23e7c <btrfs_select_ref_head@@Base+0x40>
   23ee8:	add	r7, pc, #856	; (adr r7, 24244 <btrfs_add_delayed_tree_ref@@Base+0x350>)
   23eea:	movs	r1, r0
   23eec:	add	r6, pc, #764	; (adr r6, 241ec <btrfs_add_delayed_tree_ref@@Base+0x2f8>)
   23eee:	movs	r1, r0
   23ef0:	add	r7, pc, #112	; (adr r7, 23f64 <btrfs_add_delayed_tree_ref@@Base+0x70>)
   23ef2:	movs	r1, r0

00023ef4 <btrfs_add_delayed_tree_ref@@Base>:
   23ef4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ef8:	sub	sp, #20
   23efa:	mov	fp, r1
   23efc:	strd	r2, r3, [sp, #8]
   23f00:	ldrd	r3, r4, [sp, #72]	; 0x48
   23f04:	ldrd	r9, r8, [sp, #84]	; 0x54
   23f08:	cmp	r4, #0
   23f0a:	ldr	r7, [sp, #92]	; 0x5c
   23f0c:	itte	eq
   23f0e:	cmpeq	r3, #3
   23f10:	moveq	r6, #1
   23f12:	movne	r6, #0
   23f14:	cmp.w	r8, #0
   23f18:	beq.n	23f3a <btrfs_add_delayed_tree_ref@@Base+0x46>
   23f1a:	ldrb.w	r3, [r8, #20]
   23f1e:	cbz	r3, 23f3a <btrfs_add_delayed_tree_ref@@Base+0x46>
   23f20:	ldr	r2, [pc, #920]	; (242bc <btrfs_add_delayed_tree_ref@@Base+0x3c8>)
   23f22:	movs	r3, #1
   23f24:	ldr	r1, [pc, #920]	; (242c0 <btrfs_add_delayed_tree_ref@@Base+0x3cc>)
   23f26:	ldr	r0, [pc, #924]	; (242c4 <btrfs_add_delayed_tree_ref@@Base+0x3d0>)
   23f28:	add	r2, pc
   23f2a:	adds	r2, #64	; 0x40
   23f2c:	add	r1, pc
   23f2e:	add	r0, pc
   23f30:	str	r3, [sp, #0]
   23f32:	mov.w	r3, #568	; 0x238
   23f36:	bl	23afc <btrfs_record_file_extent@@Base+0x4c0>
   23f3a:	movs	r0, #88	; 0x58
   23f3c:	blx	8634 <malloc@plt+0x4>
   23f40:	mov	r5, r0
   23f42:	cmp	r0, #0
   23f44:	beq.n	23fd0 <btrfs_add_delayed_tree_ref@@Base+0xdc>
   23f46:	ldrd	r3, r4, [sp, #64]	; 0x40
   23f4a:	movs	r2, #1
   23f4c:	add.w	sl, r5, #12
   23f50:	str	r5, [r5, #0]
   23f52:	orrs	r3, r4
   23f54:	mov.w	r3, #0
   23f58:	strd	r2, r3, [r5, #48]	; 0x30
   23f5c:	mov.w	r2, #0
   23f60:	ldrd	r3, r4, [sp, #8]
   23f64:	ite	ne
   23f66:	movne	r0, #182	; 0xb6
   23f68:	moveq	r0, #176	; 0xb0
   23f6a:	cmp.w	r9, #3
   23f6e:	strb.w	r0, [r5, #61]	; 0x3d
   23f72:	mov.w	r0, #64	; 0x40
   23f76:	strd	r3, r4, [r5, #24]
   23f7a:	it	ne
   23f7c:	movne	ip, r9
   23f7e:	ldrd	r3, r4, [sp, #56]	; 0x38
   23f82:	it	eq
   23f84:	moveq.w	ip, #1
   23f88:	strd	sl, sl, [r5, #12]
   23f8c:	strb.w	ip, [r5, #60]	; 0x3c
   23f90:	strd	r3, r4, [r5, #32]
   23f94:	movs	r3, #1
   23f96:	str	r3, [r5, #56]	; 0x38
   23f98:	ldrb.w	r3, [r5, #62]	; 0x3e
   23f9c:	bic.w	r3, r3, #3
   23fa0:	orr.w	r3, r3, #2
   23fa4:	strb.w	r3, [r5, #62]	; 0x3e
   23fa8:	movs	r3, #0
   23faa:	strd	r2, r3, [r5, #40]	; 0x28
   23fae:	ldrd	r3, r4, [sp, #72]	; 0x48
   23fb2:	strd	r3, r4, [r5, #64]	; 0x40
   23fb6:	ldrd	r3, r4, [sp, #64]	; 0x40
   23fba:	strd	r3, r4, [r5, #72]	; 0x48
   23fbe:	ldr	r3, [sp, #80]	; 0x50
   23fc0:	str	r3, [r5, #80]	; 0x50
   23fc2:	blx	8634 <malloc@plt+0x4>
   23fc6:	mov	r4, r0
   23fc8:	cbnz	r0, 23fd6 <btrfs_add_delayed_tree_ref@@Base+0xe2>
   23fca:	mov	r0, r5
   23fcc:	blx	83f0 <free@plt+0x4>
   23fd0:	mvn.w	r0, #11
   23fd4:	b.n	2416c <btrfs_add_delayed_tree_ref@@Base+0x278>
   23fd6:	cmp.w	r9, #4
   23fda:	beq.n	24086 <btrfs_add_delayed_tree_ref@@Base+0x192>
   23fdc:	cmp.w	r9, #2
   23fe0:	sub.w	lr, r9, #3
   23fe4:	ite	ne
   23fe6:	movne.w	ip, #1
   23fea:	moveq.w	ip, #4294967295	; 0xffffffff
   23fee:	rsbs	r3, lr, #0
   23ff2:	adc.w	r3, r3, lr
   23ff6:	movs	r0, #1
   23ff8:	movs	r1, #0
   23ffa:	strd	r0, r1, [r4, #16]
   23ffe:	orr.w	r6, r3, r6, lsl #2
   24002:	ldrd	r1, r2, [sp, #8]
   24006:	add.w	r0, r4, #28
   2400a:	ldrb.w	r9, [r4, #60]	; 0x3c
   2400e:	mov.w	lr, #0
   24012:	strd	r8, ip, [r4, #48]	; 0x30
   24016:	strd	r1, r2, [r4]
   2401a:	bic.w	r9, r9, #15
   2401e:	ldrd	r1, r2, [sp, #56]	; 0x38
   24022:	orr.w	r6, r6, r9
   24026:	str.w	ip, [r4, #56]	; 0x38
   2402a:	add.w	ip, fp, #64	; 0x40
   2402e:	strd	r0, r0, [r4, #28]
   24032:	add.w	r0, r4, #36	; 0x24
   24036:	mov	r8, ip
   24038:	strd	r1, r2, [r4, #8]
   2403c:	str.w	lr, [r4, #24]
   24040:	str	r0, [r4, #36]	; 0x24
   24042:	strb.w	r6, [r4, #60]	; 0x3c
   24046:	ldr.w	r6, [r8]
   2404a:	cbnz	r6, 2408e <btrfs_add_delayed_tree_ref@@Base+0x19a>
   2404c:	strd	lr, r6, [r4, #36]	; 0x24
   24050:	mov	r1, ip
   24052:	str	r6, [r4, #44]	; 0x2c
   24054:	str.w	r0, [r8]
   24058:	bl	13b2a <rb_insert_color@@Base>
   2405c:	cmp	r7, #0
   2405e:	bne.w	241be <btrfs_add_delayed_tree_ref@@Base+0x2ca>
   24062:	ldr.w	r3, [fp, #72]	; 0x48
   24066:	adds	r3, #1
   24068:	str.w	r3, [fp, #72]	; 0x48
   2406c:	ldr.w	r3, [fp, #76]	; 0x4c
   24070:	adds	r3, #1
   24072:	str.w	r3, [fp, #76]	; 0x4c
   24076:	ldrd	r3, r2, [fp, #40]	; 0x28
   2407a:	adds	r3, #1
   2407c:	adc.w	r2, r2, #0
   24080:	strd	r3, r2, [fp, #40]	; 0x28
   24084:	b.n	2411e <btrfs_add_delayed_tree_ref@@Base+0x22a>
   24086:	mov.w	ip, #0
   2408a:	mov	r3, ip
   2408c:	b.n	23ff6 <btrfs_add_delayed_tree_ref@@Base+0x102>
   2408e:	ldrd	r8, r9, [r6, #-36]	; 0x24
   24092:	ldrd	r1, r2, [sp, #8]
   24096:	cmp	r2, r9
   24098:	it	eq
   2409a:	cmpeq	r1, r8
   2409c:	bcs.n	240a6 <btrfs_add_delayed_tree_ref@@Base+0x1b2>
   2409e:	add.w	r8, r6, #8
   240a2:	mov	lr, r6
   240a4:	b.n	24046 <btrfs_add_delayed_tree_ref@@Base+0x152>
   240a6:	ldrd	r1, r2, [sp, #8]
   240aa:	cmp	r9, r2
   240ac:	it	eq
   240ae:	cmpeq	r8, r1
   240b0:	bcs.n	240b8 <btrfs_add_delayed_tree_ref@@Base+0x1c4>
   240b2:	add.w	r8, r6, #4
   240b6:	b.n	240a2 <btrfs_add_delayed_tree_ref@@Base+0x1ae>
   240b8:	ldrb.w	r1, [r4, #60]	; 0x3c
   240bc:	ldrb	r2, [r6, #24]
   240be:	eor.w	r0, r1, r2
   240c2:	lsls	r0, r0, #30
   240c4:	bpl.n	240de <btrfs_add_delayed_tree_ref@@Base+0x1ea>
   240c6:	ldr	r2, [pc, #512]	; (242c8 <btrfs_add_delayed_tree_ref@@Base+0x3d4>)
   240c8:	movs	r3, #1
   240ca:	ldr	r1, [pc, #512]	; (242cc <btrfs_add_delayed_tree_ref@@Base+0x3d8>)
   240cc:	ldr	r0, [pc, #512]	; (242d0 <btrfs_add_delayed_tree_ref@@Base+0x3dc>)
   240ce:	add	r2, pc
   240d0:	str	r3, [sp, #0]
   240d2:	adds	r2, #91	; 0x5b
   240d4:	add	r1, pc
   240d6:	add	r0, pc
   240d8:	movw	r3, #363	; 0x16b
   240dc:	b.n	23f36 <btrfs_add_delayed_tree_ref@@Base+0x42>
   240de:	lsls	r1, r1, #31
   240e0:	itttt	mi
   240e2:	bfimi	r2, r3, #0, #1
   240e6:	strbmi	r2, [r6, #24]
   240e8:	ldrdmi	r2, r3, [r4, #8]
   240ec:	strdmi	r2, r3, [r6, #-28]
   240f0:	ldr	r3, [r4, #48]	; 0x30
   240f2:	cbz	r3, 240fc <btrfs_add_delayed_tree_ref@@Base+0x208>
   240f4:	ldr	r2, [r6, #12]
   240f6:	cmp	r2, #0
   240f8:	bne.n	24172 <btrfs_add_delayed_tree_ref@@Base+0x27e>
   240fa:	str	r3, [r6, #12]
   240fc:	cbz	r7, 24102 <btrfs_add_delayed_tree_ref@@Base+0x20e>
   240fe:	ldr	r3, [r6, #16]
   24100:	str	r3, [r7, #0]
   24102:	ldr	r2, [r4, #56]	; 0x38
   24104:	mov	r0, r4
   24106:	ldr	r3, [r6, #20]
   24108:	sub.w	r7, r6, #36	; 0x24
   2410c:	add	r3, r2
   2410e:	str	r3, [r6, #20]
   24110:	ldr	r3, [r6, #16]
   24112:	ldr	r2, [r4, #56]	; 0x38
   24114:	mov	r4, r7
   24116:	add	r3, r2
   24118:	str	r3, [r6, #16]
   2411a:	blx	83f0 <free@plt+0x4>
   2411e:	ldr	r3, [sp, #96]	; 0x60
   24120:	cbz	r3, 24128 <btrfs_add_delayed_tree_ref@@Base+0x234>
   24122:	ldr	r3, [r4, #52]	; 0x34
   24124:	ldr	r2, [sp, #96]	; 0x60
   24126:	str	r3, [r2, #0]
   24128:	add.w	r1, r4, #24
   2412c:	movs	r0, #0
   2412e:	mov	r3, r1
   24130:	ldr	r2, [r3, #0]
   24132:	cmp	r2, #0
   24134:	bne.n	241c2 <btrfs_add_delayed_tree_ref@@Base+0x2ce>
   24136:	strd	r0, r2, [r5]
   2413a:	mov	r0, r5
   2413c:	str	r2, [r5, #8]
   2413e:	str	r5, [r3, #0]
   24140:	bl	13b2a <rb_insert_color@@Base>
   24144:	ldrb.w	r3, [r5, #60]	; 0x3c
   24148:	cmp	r3, #1
   2414a:	bne.n	2415c <btrfs_add_delayed_tree_ref@@Base+0x268>
   2414c:	ldr	r3, [r4, #32]
   2414e:	adds	r4, #28
   24150:	str.w	sl, [r4, #4]
   24154:	strd	r4, r3, [r5, #12]
   24158:	str.w	sl, [r3]
   2415c:	ldrd	r3, r2, [fp, #40]	; 0x28
   24160:	adds	r3, #1
   24162:	adc.w	r2, r2, #0
   24166:	strd	r3, r2, [fp, #40]	; 0x28
   2416a:	movs	r0, #0
   2416c:	add	sp, #20
   2416e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24172:	ldrb	r1, [r3, #18]
   24174:	cbz	r1, 24190 <btrfs_add_delayed_tree_ref@@Base+0x29c>
   24176:	add.w	r1, r3, #16
   2417a:	ldr.w	r0, [r3], #4
   2417e:	cmp	r3, r1
   24180:	str.w	r0, [r2], #4
   24184:	bne.n	2417a <btrfs_add_delayed_tree_ref@@Base+0x286>
   24186:	ldrb	r3, [r3, #0]
   24188:	strb	r3, [r2, #0]
   2418a:	movs	r2, #1
   2418c:	ldr	r3, [r6, #12]
   2418e:	strb	r2, [r3, #18]
   24190:	ldr	r0, [r4, #48]	; 0x30
   24192:	ldrb	r3, [r0, #19]
   24194:	cbz	r3, 241b2 <btrfs_add_delayed_tree_ref@@Base+0x2be>
   24196:	ldr	r1, [r6, #12]
   24198:	ldrd	r2, r0, [r0, #24]
   2419c:	ldr	r3, [r1, #28]
   2419e:	str	r3, [sp, #8]
   241a0:	ldr	r3, [r1, #24]
   241a2:	orrs	r2, r3
   241a4:	ldr	r3, [sp, #8]
   241a6:	orrs	r3, r0
   241a8:	strd	r2, r3, [r1, #24]
   241ac:	ldr	r3, [r6, #12]
   241ae:	movs	r2, #1
   241b0:	strb	r2, [r3, #19]
   241b2:	ldr	r0, [r4, #48]	; 0x30
   241b4:	cmp	r0, #0
   241b6:	beq.n	240fc <btrfs_add_delayed_tree_ref@@Base+0x208>
   241b8:	blx	83f0 <free@plt+0x4>
   241bc:	b.n	240fc <btrfs_add_delayed_tree_ref@@Base+0x208>
   241be:	str	r6, [r7, #0]
   241c0:	b.n	24062 <btrfs_add_delayed_tree_ref@@Base+0x16e>
   241c2:	ldrb.w	r3, [r5, #61]	; 0x3d
   241c6:	ldrb.w	r0, [r2, #61]	; 0x3d
   241ca:	cmp	r3, r0
   241cc:	bcc.n	2426c <btrfs_add_delayed_tree_ref@@Base+0x378>
   241ce:	bhi.n	241f4 <btrfs_add_delayed_tree_ref@@Base+0x300>
   241d0:	cmp	r3, #176	; 0xb0
   241d2:	beq.n	241dc <btrfs_add_delayed_tree_ref@@Base+0x2e8>
   241d4:	cmp	r3, #182	; 0xb6
   241d6:	beq.n	241f8 <btrfs_add_delayed_tree_ref@@Base+0x304>
   241d8:	bl	23b34 <btrfs_record_file_extent@@Base+0x4f8>
   241dc:	ldrd	r6, r7, [r5, #64]	; 0x40
   241e0:	ldrd	r8, r9, [r2, #64]	; 0x40
   241e4:	cmp	r7, r9
   241e6:	it	eq
   241e8:	cmpeq	r6, r8
   241ea:	bcc.n	2426c <btrfs_add_delayed_tree_ref@@Base+0x378>
   241ec:	cmp	r9, r7
   241ee:	it	eq
   241f0:	cmpeq	r8, r6
   241f2:	bcs.n	24202 <btrfs_add_delayed_tree_ref@@Base+0x30e>
   241f4:	adds	r3, r2, #4
   241f6:	b.n	24270 <btrfs_add_delayed_tree_ref@@Base+0x37c>
   241f8:	ldrd	r6, r7, [r5, #72]	; 0x48
   241fc:	ldrd	r8, r9, [r2, #72]	; 0x48
   24200:	b.n	241e4 <btrfs_add_delayed_tree_ref@@Base+0x2f0>
   24202:	ldrd	r6, r7, [r5, #40]	; 0x28
   24206:	ldrd	r8, r9, [r2, #40]	; 0x28
   2420a:	cmp	r7, r9
   2420c:	it	eq
   2420e:	cmpeq	r6, r8
   24210:	bcc.n	2426c <btrfs_add_delayed_tree_ref@@Base+0x378>
   24212:	cmp	r9, r7
   24214:	it	eq
   24216:	cmpeq	r8, r6
   24218:	bcc.n	241f4 <btrfs_add_delayed_tree_ref@@Base+0x300>
   2421a:	ldrb.w	r0, [r5, #60]	; 0x3c
   2421e:	ldrb.w	r1, [r2, #60]	; 0x3c
   24222:	ldr	r3, [r5, #56]	; 0x38
   24224:	cmp	r1, r0
   24226:	beq.n	24252 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   24228:	ldr	r1, [r2, #56]	; 0x38
   2422a:	cmp	r3, r1
   2422c:	ble.n	242b0 <btrfs_add_delayed_tree_ref@@Base+0x3bc>
   2422e:	strb.w	r0, [r2, #60]	; 0x3c
   24232:	negs	r3, r1
   24234:	ldr	r1, [r5, #56]	; 0x38
   24236:	add.w	r0, r2, #12
   2423a:	str	r1, [r2, #56]	; 0x38
   2423c:	ldrb.w	r1, [r5, #60]	; 0x3c
   24240:	cmp	r1, #1
   24242:	bne.n	24274 <btrfs_add_delayed_tree_ref@@Base+0x380>
   24244:	ldr	r1, [r4, #32]
   24246:	add.w	r6, r4, #28
   2424a:	str	r0, [r4, #32]
   2424c:	strd	r6, r1, [r2, #12]
   24250:	str	r0, [r1, #0]
   24252:	ldr	r1, [r2, #56]	; 0x38
   24254:	add	r3, r1
   24256:	str	r3, [r2, #56]	; 0x38
   24258:	cbnz	r3, 24264 <btrfs_add_delayed_tree_ref@@Base+0x370>
   2425a:	add.w	r0, fp, #40	; 0x28
   2425e:	mov	r1, r4
   24260:	bl	23c20 <btrfs_record_file_extent@@Base+0x5e4>
   24264:	mov	r0, r5
   24266:	blx	83f0 <free@plt+0x4>
   2426a:	b.n	2416a <btrfs_add_delayed_tree_ref@@Base+0x276>
   2426c:	add.w	r3, r2, #8
   24270:	mov	r0, r2
   24272:	b.n	24130 <btrfs_add_delayed_tree_ref@@Base+0x23c>
   24274:	cmp	r1, #2
   24276:	bne.n	242a0 <btrfs_add_delayed_tree_ref@@Base+0x3ac>
   24278:	ldr	r1, [r2, #12]
   2427a:	cmp	r1, r0
   2427c:	bne.n	24290 <btrfs_add_delayed_tree_ref@@Base+0x39c>
   2427e:	ldr	r1, [pc, #84]	; (242d4 <btrfs_add_delayed_tree_ref@@Base+0x3e0>)
   24280:	mov.w	r2, #330	; 0x14a
   24284:	ldr	r0, [pc, #80]	; (242d8 <btrfs_add_delayed_tree_ref@@Base+0x3e4>)
   24286:	add	r1, pc
   24288:	adds	r1, #116	; 0x74
   2428a:	add	r0, pc
   2428c:	bl	23be2 <btrfs_record_file_extent@@Base+0x5a6>
   24290:	ldr	r0, [r2, #16]
   24292:	str	r0, [r1, #4]
   24294:	str	r1, [r0, #0]
   24296:	ldr	r0, [pc, #28]	; (242b4 <btrfs_add_delayed_tree_ref@@Base+0x3c0>)
   24298:	ldr	r1, [pc, #28]	; (242b8 <btrfs_add_delayed_tree_ref@@Base+0x3c4>)
   2429a:	strd	r0, r1, [r2, #12]
   2429e:	b.n	24252 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   242a0:	ldr	r1, [pc, #56]	; (242dc <btrfs_add_delayed_tree_ref@@Base+0x3e8>)
   242a2:	movw	r2, #333	; 0x14d
   242a6:	ldr	r0, [pc, #56]	; (242e0 <btrfs_add_delayed_tree_ref@@Base+0x3ec>)
   242a8:	add	r1, pc
   242aa:	adds	r1, #116	; 0x74
   242ac:	add	r0, pc
   242ae:	b.n	2428c <btrfs_add_delayed_tree_ref@@Base+0x398>
   242b0:	negs	r3, r3
   242b2:	b.n	24252 <btrfs_add_delayed_tree_ref@@Base+0x35e>
   242b4:	lsls	r0, r0, #4
   242b6:	movs	r0, r2
   242b8:	lsls	r0, r0, #8
   242ba:	movs	r0, r4
   242bc:	add	r7, pc, #296	; (adr r7, 243e8 <btrfs_destroy_delayed_refs@@Base+0x104>)
   242be:	movs	r1, r0
   242c0:	add	r6, pc, #212	; (adr r6, 24398 <btrfs_destroy_delayed_refs@@Base+0xb4>)
   242c2:	movs	r1, r0
   242c4:	add	r6, pc, #724	; (adr r6, 2459c <btrfs_destroy_delayed_refs@@Base+0x2b8>)
   242c6:	movs	r1, r0
   242c8:	add	r5, pc, #656	; (adr r5, 2455c <btrfs_destroy_delayed_refs@@Base+0x278>)
   242ca:	movs	r1, r0
   242cc:	add	r4, pc, #564	; (adr r4, 24504 <btrfs_destroy_delayed_refs@@Base+0x220>)
   242ce:	movs	r1, r0
   242d0:	add	r5, pc, #180	; (adr r5, 24388 <btrfs_destroy_delayed_refs@@Base+0xa4>)
   242d2:	movs	r1, r0
   242d4:	add	r3, pc, #944	; (adr r3, 24688 <btrfs_destroy_delayed_refs@@Base+0x3a4>)
   242d6:	movs	r1, r0
   242d8:	add	r3, pc, #632	; (adr r3, 24554 <btrfs_destroy_delayed_refs@@Base+0x270>)
   242da:	movs	r1, r0
   242dc:	add	r3, pc, #808	; (adr r3, 24608 <btrfs_destroy_delayed_refs@@Base+0x324>)
   242de:	movs	r1, r0
   242e0:	ldrh	r6, [r7, #4]
   242e2:	movs	r1, r0

000242e4 <btrfs_destroy_delayed_refs@@Base>:
   242e4:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   242e8:	mov	r5, r0
   242ea:	ldr	r3, [r0, #64]	; 0x40
   242ec:	cbnz	r3, 242fc <btrfs_destroy_delayed_refs@@Base+0x18>
   242ee:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   242f2:	mov	r1, r9
   242f4:	mov	r0, r8
   242f6:	bl	23c20 <btrfs_record_file_extent@@Base+0x5e4>
   242fa:	b.n	24318 <btrfs_destroy_delayed_refs@@Base+0x34>
   242fc:	mov	r6, r0
   242fe:	add.w	r8, r0, #40	; 0x28
   24302:	ldr.w	r7, [r6], #64
   24306:	mov	r0, r6
   24308:	bl	13e46 <rb_first@@Base>
   2430c:	cmp	r0, #0
   2430e:	beq.n	242ee <btrfs_destroy_delayed_refs@@Base+0xa>
   24310:	sub.w	r9, r0, #36	; 0x24
   24314:	sub.w	r4, r0, #12
   24318:	mov	r0, r4
   2431a:	bl	13e46 <rb_first@@Base>
   2431e:	mov	r2, r0
   24320:	cmp	r0, #0
   24322:	bne.n	242f2 <btrfs_destroy_delayed_refs@@Base+0xe>
   24324:	mov	r2, r9
   24326:	mov	r1, r7
   24328:	mov	r0, r5
   2432a:	bl	22e28 <cleanup_ref_head@@Base>
   2432e:	cmp	r0, #0
   24330:	beq.n	24306 <btrfs_destroy_delayed_refs@@Base+0x22>
   24332:	ldr	r1, [pc, #16]	; (24344 <btrfs_destroy_delayed_refs@@Base+0x60>)
   24334:	movw	r2, #629	; 0x275
   24338:	ldr	r0, [pc, #12]	; (24348 <btrfs_destroy_delayed_refs@@Base+0x64>)
   2433a:	add	r1, pc
   2433c:	adds	r1, #135	; 0x87
   2433e:	add	r0, pc
   24340:	bl	23be2 <btrfs_record_file_extent@@Base+0x5a6>
   24344:	add	r3, pc, #224	; (adr r3, 24428 <btrfs_destroy_delayed_refs@@Base+0x144>)
   24346:	movs	r1, r0
   24348:	add	r3, pc, #32	; (adr r3, 2436c <btrfs_destroy_delayed_refs@@Base+0x88>)
   2434a:	movs	r1, r0
   2434c:	ldr.w	ip, [pc, #60]	; 2438c <btrfs_destroy_delayed_refs@@Base+0xa8>
   24350:	push	{r0, r1, r2, r3, r4, lr}
   24352:	add	ip, pc
   24354:	ldr	r3, [pc, #56]	; (24390 <btrfs_destroy_delayed_refs@@Base+0xac>)
   24356:	add.w	r2, r1, r2, lsl #3
   2435a:	mov	r1, sp
   2435c:	ldr.w	r3, [ip, r3]
   24360:	ldr	r3, [r3, #0]
   24362:	str	r3, [sp, #12]
   24364:	mov.w	r3, #0
   24368:	movs	r3, #8
   2436a:	bl	1731a <read_extent_buffer@@Base>
   2436e:	ldr	r2, [pc, #36]	; (24394 <btrfs_destroy_delayed_refs@@Base+0xb0>)
   24370:	ldr	r3, [pc, #28]	; (24390 <btrfs_destroy_delayed_refs@@Base+0xac>)
   24372:	add	r2, pc
   24374:	ldrd	r0, r1, [sp]
   24378:	ldr	r3, [r2, r3]
   2437a:	ldr	r2, [r3, #0]
   2437c:	ldr	r3, [sp, #12]
   2437e:	eors	r2, r3
   24380:	beq.n	24386 <btrfs_destroy_delayed_refs@@Base+0xa2>
   24382:	blx	84cc <__stack_chk_fail@plt>
   24386:	add	sp, #20
   24388:	ldr.w	pc, [sp], #4
   2438c:	lsrs	r6, r6, #8
   2438e:	movs	r4, r0
   24390:	lsls	r4, r4, #8
   24392:	movs	r0, r0
   24394:	lsrs	r6, r2, #8
   24396:	movs	r4, r0
   24398:	ldr	r2, [pc, #60]	; (243d8 <btrfs_destroy_delayed_refs@@Base+0xf4>)
   2439a:	movs	r1, #16
   2439c:	ldr	r3, [pc, #60]	; (243dc <btrfs_destroy_delayed_refs@@Base+0xf8>)
   2439e:	push	{r4, lr}
   243a0:	add	r2, pc
   243a2:	sub	sp, #72	; 0x48
   243a4:	add	r4, sp, #4
   243a6:	ldr	r3, [r2, r3]
   243a8:	mov	r0, r4
   243aa:	ldr	r3, [r3, #0]
   243ac:	str	r3, [sp, #68]	; 0x44
   243ae:	mov.w	r3, #0
   243b2:	blx	8680 <backtrace@plt>
   243b6:	movs	r2, #2
   243b8:	mov	r1, r0
   243ba:	mov	r0, r4
   243bc:	blx	8990 <backtrace_symbols_fd@plt>
   243c0:	ldr	r2, [pc, #28]	; (243e0 <btrfs_destroy_delayed_refs@@Base+0xfc>)
   243c2:	ldr	r3, [pc, #24]	; (243dc <btrfs_destroy_delayed_refs@@Base+0xf8>)
   243c4:	add	r2, pc
   243c6:	ldr	r3, [r2, r3]
   243c8:	ldr	r2, [r3, #0]
   243ca:	ldr	r3, [sp, #68]	; 0x44
   243cc:	eors	r2, r3
   243ce:	beq.n	243d4 <btrfs_destroy_delayed_refs@@Base+0xf0>
   243d0:	blx	84cc <__stack_chk_fail@plt>
   243d4:	add	sp, #72	; 0x48
   243d6:	pop	{r4, pc}
   243d8:	lsrs	r0, r5, #7
   243da:	movs	r4, r0
   243dc:	lsls	r4, r4, #8
   243de:	movs	r0, r0
   243e0:	lsrs	r4, r0, #7
   243e2:	movs	r4, r0
   243e4:	push	{r4, r5, r6, lr}
   243e6:	mov	r6, r0
   243e8:	movs	r4, #0
   243ea:	and.w	r0, r0, #1
   243ee:	mov	r1, r4
   243f0:	orrs.w	r3, r0, r1
   243f4:	beq.n	24486 <btrfs_destroy_delayed_refs@@Base+0x1a2>
   243f6:	ldr	r1, [pc, #240]	; (244e8 <btrfs_destroy_delayed_refs@@Base+0x204>)
   243f8:	mov	r0, r2
   243fa:	add	r1, pc
   243fc:	blx	85b4 <strcpy@plt>
   24400:	mov	r2, r0
   24402:	and.w	r0, r6, #4
   24406:	movs	r1, #0
   24408:	orrs.w	r3, r0, r1
   2440c:	beq.n	24428 <btrfs_destroy_delayed_refs@@Base+0x144>
   2440e:	cbnz	r4, 2441c <btrfs_destroy_delayed_refs@@Base+0x138>
   24410:	ldr	r1, [pc, #216]	; (244ec <btrfs_destroy_delayed_refs@@Base+0x208>)
   24412:	mov	r0, r2
   24414:	add	r1, pc
   24416:	blx	856c <strcat@plt+0x4>
   2441a:	mov	r2, r0
   2441c:	ldr	r1, [pc, #208]	; (244f0 <btrfs_destroy_delayed_refs@@Base+0x20c>)
   2441e:	mov	r0, r2
   24420:	add	r1, pc
   24422:	blx	856c <strcat@plt+0x4>
   24426:	mov	r2, r0
   24428:	and.w	r0, r6, #2
   2442c:	movs	r1, #0
   2442e:	orrs.w	r3, r0, r1
   24432:	beq.n	2444e <btrfs_destroy_delayed_refs@@Base+0x16a>
   24434:	cbnz	r4, 24442 <btrfs_destroy_delayed_refs@@Base+0x15e>
   24436:	ldr	r1, [pc, #188]	; (244f4 <btrfs_destroy_delayed_refs@@Base+0x210>)
   24438:	mov	r0, r2
   2443a:	add	r1, pc
   2443c:	blx	856c <strcat@plt+0x4>
   24440:	mov	r2, r0
   24442:	ldr	r1, [pc, #180]	; (244f8 <btrfs_destroy_delayed_refs@@Base+0x214>)
   24444:	mov	r0, r2
   24446:	add	r1, pc
   24448:	blx	856c <strcat@plt+0x4>
   2444c:	mov	r2, r0
   2444e:	and.w	r4, r6, #2040	; 0x7f8
   24452:	movs	r5, #0
   24454:	cmp	r5, #0
   24456:	it	eq
   24458:	cmpeq	r4, #128	; 0x80
   2445a:	beq.n	244e2 <btrfs_destroy_delayed_refs@@Base+0x1fe>
   2445c:	cmp	r5, #0
   2445e:	it	eq
   24460:	cmpeq	r4, #129	; 0x81
   24462:	bcs.n	24498 <btrfs_destroy_delayed_refs@@Base+0x1b4>
   24464:	cmp	r5, #0
   24466:	it	eq
   24468:	cmpeq	r4, #32
   2446a:	beq.n	244dc <btrfs_destroy_delayed_refs@@Base+0x1f8>
   2446c:	cmp	r5, #0
   2446e:	it	eq
   24470:	cmpeq	r4, #33	; 0x21
   24472:	bcs.n	2448a <btrfs_destroy_delayed_refs@@Base+0x1a6>
   24474:	cmp	r5, #0
   24476:	it	eq
   24478:	cmpeq	r4, #8
   2447a:	beq.n	244bc <btrfs_destroy_delayed_refs@@Base+0x1d8>
   2447c:	cmp	r5, #0
   2447e:	it	eq
   24480:	cmpeq	r4, #16
   24482:	beq.n	244ca <btrfs_destroy_delayed_refs@@Base+0x1e6>
   24484:	pop	{r4, r5, r6, pc}
   24486:	movs	r4, #1
   24488:	b.n	24402 <btrfs_destroy_delayed_refs@@Base+0x11e>
   2448a:	cmp	r5, #0
   2448c:	it	eq
   2448e:	cmpeq	r4, #64	; 0x40
   24490:	bne.n	24484 <btrfs_destroy_delayed_refs@@Base+0x1a0>
   24492:	ldr	r1, [pc, #104]	; (244fc <btrfs_destroy_delayed_refs@@Base+0x218>)
   24494:	add	r1, pc
   24496:	b.n	244c0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   24498:	cmp	r5, #0
   2449a:	it	eq
   2449c:	cmpeq.w	r4, #512	; 0x200
   244a0:	beq.n	244d0 <btrfs_destroy_delayed_refs@@Base+0x1ec>
   244a2:	cmp	r5, #0
   244a4:	it	eq
   244a6:	cmpeq.w	r4, #1024	; 0x400
   244aa:	beq.n	244d6 <btrfs_destroy_delayed_refs@@Base+0x1f2>
   244ac:	cmp	r5, #0
   244ae:	it	eq
   244b0:	cmpeq.w	r4, #256	; 0x100
   244b4:	bne.n	24484 <btrfs_destroy_delayed_refs@@Base+0x1a0>
   244b6:	ldr	r1, [pc, #72]	; (24500 <btrfs_destroy_delayed_refs@@Base+0x21c>)
   244b8:	add	r1, pc
   244ba:	b.n	244c0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   244bc:	ldr	r1, [pc, #68]	; (24504 <btrfs_destroy_delayed_refs@@Base+0x220>)
   244be:	add	r1, pc
   244c0:	ldmia.w	sp!, {r4, r5, r6, lr}
   244c4:	mov	r0, r2
   244c6:	b.w	8568 <strcat@plt>
   244ca:	ldr	r1, [pc, #60]	; (24508 <btrfs_destroy_delayed_refs@@Base+0x224>)
   244cc:	add	r1, pc
   244ce:	b.n	244c0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   244d0:	ldr	r1, [pc, #56]	; (2450c <btrfs_destroy_delayed_refs@@Base+0x228>)
   244d2:	add	r1, pc
   244d4:	b.n	244c0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   244d6:	ldr	r1, [pc, #56]	; (24510 <btrfs_destroy_delayed_refs@@Base+0x22c>)
   244d8:	add	r1, pc
   244da:	b.n	244c0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   244dc:	ldr	r1, [pc, #52]	; (24514 <btrfs_destroy_delayed_refs@@Base+0x230>)
   244de:	add	r1, pc
   244e0:	b.n	244c0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   244e2:	ldr	r1, [pc, #52]	; (24518 <btrfs_destroy_delayed_refs@@Base+0x234>)
   244e4:	add	r1, pc
   244e6:	b.n	244c0 <btrfs_destroy_delayed_refs@@Base+0x1dc>
   244e8:	sxth	r1, r0
   244ea:	movs	r1, r0
   244ec:	ldrb	r1, [r6, #5]
   244ee:	movs	r1, r0
   244f0:	cbz	r2, 2452c <btrfs_destroy_delayed_refs@@Base+0x248>
   244f2:	movs	r1, r0
   244f4:	ldrb	r3, [r1, #5]
   244f6:	movs	r1, r0
   244f8:	cbz	r7, 2452c <btrfs_destroy_delayed_refs@@Base+0x248>
   244fa:	movs	r1, r0
   244fc:	add	r2, pc, #660	; (adr r2, 24794 <btrfs_destroy_delayed_refs@@Base+0x4b0>)
   244fe:	movs	r1, r0
   24500:	add	r2, pc, #576	; (adr r2, 24744 <btrfs_destroy_delayed_refs@@Base+0x460>)
   24502:	movs	r1, r0
   24504:	add	r2, pc, #344	; (adr r2, 24660 <btrfs_destroy_delayed_refs@@Base+0x37c>)
   24506:	movs	r1, r0
   24508:	add	r2, pc, #316	; (adr r2, 24648 <btrfs_destroy_delayed_refs@@Base+0x364>)
   2450a:	movs	r1, r0
   2450c:	add	r2, pc, #320	; (adr r2, 24650 <btrfs_destroy_delayed_refs@@Base+0x36c>)
   2450e:	movs	r1, r0
   24510:	add	r2, pc, #332	; (adr r2, 24660 <btrfs_destroy_delayed_refs@@Base+0x37c>)
   24512:	movs	r1, r0
   24514:	add	r2, pc, #344	; (adr r2, 24670 <btrfs_destroy_delayed_refs@@Base+0x38c>)
   24516:	movs	r1, r0
   24518:	add	r2, pc, #372	; (adr r2, 24690 <btrfs_destroy_delayed_refs@@Base+0x3ac>)
   2451a:	movs	r1, r0
   2451c:	push	{r4, lr}
   2451e:	sub	sp, #24
   24520:	ldr	r2, [r0, #64]	; 0x40
   24522:	mov	r4, r0
   24524:	ldr	r3, [r0, #68]	; 0x44
   24526:	ldr	r1, [pc, #112]	; (24598 <btrfs_destroy_delayed_refs@@Base+0x2b4>)
   24528:	strd	r2, r3, [sp, #16]
   2452c:	add	r1, pc
   2452e:	ldr	r2, [r0, #56]	; 0x38
   24530:	ldr	r3, [r0, #60]	; 0x3c
   24532:	strd	r2, r3, [sp, #8]
   24536:	ldr	r2, [r0, #16]
   24538:	ldr	r3, [r0, #20]
   2453a:	strd	r2, r3, [sp]
   2453e:	ldr	r2, [r0, #0]
   24540:	ldr	r3, [r0, #4]
   24542:	movs	r0, #1
   24544:	blx	87f4 <__printf_chk@plt+0x4>
   24548:	ldr	r2, [r4, #32]
   2454a:	ldr	r3, [r4, #36]	; 0x24
   2454c:	movs	r0, #1
   2454e:	ldr	r1, [pc, #76]	; (2459c <btrfs_destroy_delayed_refs@@Base+0x2b8>)
   24550:	strd	r2, r3, [sp, #8]
   24554:	add	r1, pc
   24556:	ldr	r2, [r4, #24]
   24558:	ldr	r3, [r4, #28]
   2455a:	strd	r2, r3, [sp]
   2455e:	ldr	r3, [r4, #12]
   24560:	ldr	r2, [r4, #8]
   24562:	blx	87f4 <__printf_chk@plt+0x4>
   24566:	ldr	r3, [r4, #76]	; 0x4c
   24568:	ldr	r2, [r4, #48]	; 0x30
   2456a:	movs	r0, #1
   2456c:	ldr	r1, [pc, #48]	; (245a0 <btrfs_destroy_delayed_refs@@Base+0x2bc>)
   2456e:	str	r3, [sp, #12]
   24570:	ldr	r3, [r4, #72]	; 0x48
   24572:	add	r1, pc
   24574:	str	r3, [sp, #8]
   24576:	ldr	r3, [r4, #52]	; 0x34
   24578:	strd	r2, r3, [sp]
   2457c:	ldr	r2, [r4, #40]	; 0x28
   2457e:	ldr	r3, [r4, #44]	; 0x2c
   24580:	blx	87f4 <__printf_chk@plt+0x4>
   24584:	ldr	r1, [pc, #28]	; (245a4 <btrfs_destroy_delayed_refs@@Base+0x2c0>)
   24586:	ldr	r3, [r4, #84]	; 0x54
   24588:	movs	r0, #1
   2458a:	ldr	r2, [r4, #80]	; 0x50
   2458c:	add	r1, pc
   2458e:	add	sp, #24
   24590:	ldmia.w	sp!, {r4, lr}
   24594:	b.w	87f0 <__printf_chk@plt>
   24598:	add	r2, pc, #140	; (adr r2, 24628 <btrfs_destroy_delayed_refs@@Base+0x344>)
   2459a:	movs	r1, r0
   2459c:	add	r2, pc, #184	; (adr r2, 24658 <btrfs_destroy_delayed_refs@@Base+0x374>)
   2459e:	movs	r1, r0
   245a0:	add	r2, pc, #268	; (adr r2, 246b0 <btrfs_destroy_delayed_refs@@Base+0x3cc>)
   245a2:	movs	r1, r0
   245a4:	add	r2, pc, #368	; (adr r2, 24718 <btrfs_destroy_delayed_refs@@Base+0x434>)
   245a6:	movs	r1, r0
   245a8:	push	{r4, r5, r6, r7, lr}
   245aa:	mov	r6, r2
   245ac:	ldr	r2, [pc, #104]	; (24618 <btrfs_destroy_delayed_refs@@Base+0x334>)
   245ae:	sub	sp, #292	; 0x124
   245b0:	ldr	r3, [pc, #104]	; (2461c <btrfs_destroy_delayed_refs@@Base+0x338>)
   245b2:	add.w	r4, r0, #96	; 0x60
   245b6:	add	r2, pc
   245b8:	add	r5, sp, #28
   245ba:	ldr	r3, [r2, r3]
   245bc:	ldr	r3, [r3, #0]
   245be:	str	r3, [sp, #284]	; 0x11c
   245c0:	mov.w	r3, #0
   245c4:	movs	r3, #25
   245c6:	mla	r1, r3, r1, r4
   245ca:	ldr.w	r2, [r1, #118]	; 0x76
   245ce:	mov	r1, r5
   245d0:	add.w	r3, r2, #101	; 0x65
   245d4:	adds	r2, #119	; 0x77
   245d6:	add	r4, r3
   245d8:	ldrh	r7, [r4, #16]
   245da:	mov	r3, r7
   245dc:	bl	1731a <read_extent_buffer@@Base>
   245e0:	strd	r7, r5, [sp, #16]
   245e4:	ldr	r2, [r4, #8]
   245e6:	movs	r0, #1
   245e8:	ldr	r3, [r4, #12]
   245ea:	ldr	r1, [pc, #52]	; (24620 <btrfs_destroy_delayed_refs@@Base+0x33c>)
   245ec:	strd	r2, r3, [sp, #8]
   245f0:	add	r1, pc
   245f2:	ldr	r2, [r4, #0]
   245f4:	ldr	r3, [r4, #4]
   245f6:	strd	r2, r3, [sp]
   245fa:	mov	r2, r6
   245fc:	blx	87f4 <__printf_chk@plt+0x4>
   24600:	ldr	r2, [pc, #32]	; (24624 <btrfs_destroy_delayed_refs@@Base+0x340>)
   24602:	ldr	r3, [pc, #24]	; (2461c <btrfs_destroy_delayed_refs@@Base+0x338>)
   24604:	add	r2, pc
   24606:	ldr	r3, [r2, r3]
   24608:	ldr	r2, [r3, #0]
   2460a:	ldr	r3, [sp, #284]	; 0x11c
   2460c:	eors	r2, r3
   2460e:	beq.n	24614 <btrfs_destroy_delayed_refs@@Base+0x330>
   24610:	blx	84cc <__stack_chk_fail@plt>
   24614:	add	sp, #292	; 0x124
   24616:	pop	{r4, r5, r6, r7, pc}
   24618:	lsls	r2, r2, #31
   2461a:	movs	r4, r0
   2461c:	lsls	r4, r4, #8
   2461e:	movs	r0, r0
   24620:	add	r2, pc, #100	; (adr r2, 24688 <btrfs_destroy_delayed_refs@@Base+0x3a4>)
   24622:	movs	r1, r0
   24624:	lsls	r4, r0, #30
   24626:	movs	r4, r0
   24628:	ldr	r2, [pc, #112]	; (2469c <btrfs_destroy_delayed_refs@@Base+0x3b8>)
   2462a:	ldr	r3, [pc, #116]	; (246a0 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   2462c:	add	r2, pc
   2462e:	push	{r4, r5, r6, r7, lr}
   24630:	sub	sp, #116	; 0x74
   24632:	ldr	r3, [r2, r3]
   24634:	add	r4, sp, #12
   24636:	add	r6, sp, #28
   24638:	movs	r2, #32
   2463a:	ldr	r3, [r3, #0]
   2463c:	str	r3, [sp, #108]	; 0x6c
   2463e:	mov.w	r3, #0
   24642:	mov	r1, r4
   24644:	movs	r3, #16
   24646:	mov	r5, r0
   24648:	bl	1731a <read_extent_buffer@@Base>
   2464c:	mov	r1, r6
   2464e:	mov	r0, r4
   24650:	movs	r7, #0
   24652:	strb.w	r7, [sp, #64]	; 0x40
   24656:	blx	8394 <uuid_unparse@plt>
   2465a:	movs	r2, #64	; 0x40
   2465c:	movs	r3, #16
   2465e:	mov	r1, r4
   24660:	mov	r0, r5
   24662:	bl	1731a <read_extent_buffer@@Base>
   24666:	add	r3, sp, #68	; 0x44
   24668:	mov	r0, r4
   2466a:	str	r3, [sp, #4]
   2466c:	mov	r1, r3
   2466e:	strb.w	r7, [sp, #104]	; 0x68
   24672:	blx	8394 <uuid_unparse@plt>
   24676:	ldr	r1, [pc, #44]	; (246a4 <btrfs_destroy_delayed_refs@@Base+0x3c0>)
   24678:	ldr	r3, [sp, #4]
   2467a:	mov	r2, r6
   2467c:	add	r1, pc
   2467e:	movs	r0, #1
   24680:	blx	87f4 <__printf_chk@plt+0x4>
   24684:	ldr	r2, [pc, #32]	; (246a8 <btrfs_destroy_delayed_refs@@Base+0x3c4>)
   24686:	ldr	r3, [pc, #24]	; (246a0 <btrfs_destroy_delayed_refs@@Base+0x3bc>)
   24688:	add	r2, pc
   2468a:	ldr	r3, [r2, r3]
   2468c:	ldr	r2, [r3, #0]
   2468e:	ldr	r3, [sp, #108]	; 0x6c
   24690:	eors	r2, r3
   24692:	beq.n	24698 <btrfs_destroy_delayed_refs@@Base+0x3b4>
   24694:	blx	84cc <__stack_chk_fail@plt>
   24698:	add	sp, #116	; 0x74
   2469a:	pop	{r4, r5, r6, r7, pc}
   2469c:	lsls	r4, r3, #29
   2469e:	movs	r4, r0
   246a0:	lsls	r4, r4, #8
   246a2:	movs	r0, r0
   246a4:	add	r1, pc, #764	; (adr r1, 249a4 <print_key_type@@Base+0x40>)
   246a6:	movs	r1, r0
   246a8:	lsls	r0, r0, #28
   246aa:	movs	r4, r0
   246ac:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   246b0:	mov	r5, r2
   246b2:	ldr	r2, [pc, #112]	; (24724 <btrfs_destroy_delayed_refs@@Base+0x440>)
   246b4:	sub	sp, #344	; 0x158
   246b6:	ldr	r3, [pc, #112]	; (24728 <btrfs_destroy_delayed_refs@@Base+0x444>)
   246b8:	adds	r0, #96	; 0x60
   246ba:	add	r2, pc
   246bc:	add	r4, sp, #84	; 0x54
   246be:	ldr	r6, [r0, r1]
   246c0:	ldr	r3, [r2, r3]
   246c2:	ldr	r3, [r3, #0]
   246c4:	str	r3, [sp, #340]	; 0x154
   246c6:	mov.w	r3, #0
   246ca:	adds	r3, r0, r1
   246cc:	add	r0, sp, #36	; 0x24
   246ce:	str	r6, [r0, #0]
   246d0:	ldr	r7, [r3, #4]
   246d2:	ldr.w	r8, [r3, #8]
   246d6:	add	r3, sp, #40	; 0x28
   246d8:	str	r3, [sp, #28]
   246da:	mov	r1, r3
   246dc:	blx	84f4 <localtime_r@plt>
   246e0:	ldr	r2, [pc, #72]	; (2472c <btrfs_destroy_delayed_refs@@Base+0x448>)
   246e2:	ldr	r3, [sp, #28]
   246e4:	mov.w	r1, #256	; 0x100
   246e8:	add	r2, pc
   246ea:	mov	r0, r4
   246ec:	blx	8668 <strftime@plt>
   246f0:	ldr	r3, [pc, #60]	; (24730 <btrfs_destroy_delayed_refs@@Base+0x44c>)
   246f2:	ldr	r1, [pc, #64]	; (24734 <btrfs_destroy_delayed_refs@@Base+0x450>)
   246f4:	mov	r2, r5
   246f6:	add	r3, pc
   246f8:	movs	r0, #1
   246fa:	strd	r4, r3, [sp, #12]
   246fe:	add	r1, pc
   24700:	stmia.w	sp, {r6, r7, r8}
   24704:	blx	87f4 <__printf_chk@plt+0x4>
   24708:	ldr	r2, [pc, #44]	; (24738 <btrfs_destroy_delayed_refs@@Base+0x454>)
   2470a:	ldr	r3, [pc, #28]	; (24728 <btrfs_destroy_delayed_refs@@Base+0x444>)
   2470c:	add	r2, pc
   2470e:	ldr	r3, [r2, r3]
   24710:	ldr	r2, [r3, #0]
   24712:	ldr	r3, [sp, #340]	; 0x154
   24714:	eors	r2, r3
   24716:	beq.n	2471c <btrfs_destroy_delayed_refs@@Base+0x438>
   24718:	blx	84cc <__stack_chk_fail@plt>
   2471c:	add	sp, #344	; 0x158
   2471e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   24722:	nop
   24724:	lsls	r6, r1, #27
   24726:	movs	r4, r0
   24728:	lsls	r4, r4, #8
   2472a:	movs	r0, r0
   2472c:	add	r1, pc, #436	; (adr r1, 248e4 <print_chunk_item@@Base+0x130>)
   2472e:	movs	r1, r0
   24730:	cbz	r3, 247aa <btrfs_destroy_delayed_refs@@Base+0x4c6>
   24732:	movs	r1, r0
   24734:	add	r1, pc, #420	; (adr r1, 248dc <print_chunk_item@@Base+0x128>)
   24736:	movs	r1, r0
   24738:	lsls	r4, r7, #25
   2473a:	movs	r4, r0
   2473c:	push	{r0, r1, r2, r3, r4, lr}
   2473e:	ldr	r4, [pc, #40]	; (24768 <btrfs_destroy_delayed_refs@@Base+0x484>)
   24740:	ldr	r5, [pc, #40]	; (2476c <btrfs_destroy_delayed_refs@@Base+0x488>)
   24742:	add	r4, pc
   24744:	ldr	r4, [r4, r5]
   24746:	strd	r2, r1, [sp]
   2474a:	movs	r1, #1
   2474c:	strd	r0, r3, [sp, #8]
   24750:	ldr	r2, [pc, #28]	; (24770 <btrfs_destroy_delayed_refs@@Base+0x48c>)
   24752:	ldr	r3, [pc, #32]	; (24774 <btrfs_destroy_delayed_refs@@Base+0x490>)
   24754:	add	r2, pc
   24756:	ldr	r0, [r4, #0]
   24758:	add	r3, pc
   2475a:	blx	881c <__fprintf_chk@plt+0x4>
   2475e:	bl	24398 <btrfs_destroy_delayed_refs@@Base+0xb4>
   24762:	blx	8948 <abort@plt>
   24766:	nop
   24768:	lsls	r6, r0, #25
   2476a:	movs	r4, r0
   2476c:	lsls	r4, r6, #8
   2476e:	movs	r0, r0
   24770:	strh	r5, [r7, r4]
   24772:	movs	r1, r0
   24774:	str	r3, [r1, #24]
   24776:	movs	r1, r0
   24778:	push	{r3, lr}
   2477a:	ldr	r3, [r0, #92]	; 0x5c
   2477c:	ldr	r2, [r0, #76]	; 0x4c
   2477e:	cbz	r3, 2479a <btrfs_destroy_delayed_refs@@Base+0x4b6>
   24780:	ldr.w	r3, [r3, #384]	; 0x180
   24784:	cmp	r3, r2
   24786:	beq.n	2479a <btrfs_destroy_delayed_refs@@Base+0x4b6>
   24788:	ldr	r1, [pc, #32]	; (247ac <btrfs_destroy_delayed_refs@@Base+0x4c8>)
   2478a:	movs	r3, #1
   2478c:	ldr	r0, [pc, #32]	; (247b0 <btrfs_destroy_delayed_refs@@Base+0x4cc>)
   2478e:	movw	r2, #1246	; 0x4de
   24792:	add	r1, pc
   24794:	add	r0, pc
   24796:	bl	2473c <btrfs_destroy_delayed_refs@@Base+0x458>
   2479a:	ldr	r3, [pc, #12]	; (247a8 <btrfs_destroy_delayed_refs@@Base+0x4c4>)
   2479c:	subs	r2, #101	; 0x65
   2479e:	umull	r2, r3, r2, r3
   247a2:	lsrs	r0, r3, #3
   247a4:	pop	{r3, pc}
   247a6:	nop
   247a8:	strh	r1, [r4, #30]
   247aa:	subs	r6, #15
   247ac:	sxth	r6, r2
   247ae:	movs	r1, r0
   247b0:	add	r0, pc, #912	; (adr r0, 24b44 <print_objectid@@Base+0x190>)
   247b2:	movs	r1, r0

000247b4 <print_chunk_item@@Base>:
   247b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   247b8:	add.w	r8, r0, #96	; 0x60
   247bc:	ldr	r2, [pc, #376]	; (24938 <print_chunk_item@@Base+0x184>)
   247be:	add.w	r9, r8, r1
   247c2:	ldr	r3, [pc, #376]	; (2493c <print_chunk_item@@Base+0x188>)
   247c4:	sub	sp, #148	; 0x94
   247c6:	add	r2, pc
   247c8:	ldrh.w	r6, [r9, #44]	; 0x2c
   247cc:	movs	r5, #0
   247ce:	mov	r7, r0
   247d0:	ldr	r3, [r2, r3]
   247d2:	mov	r4, r1
   247d4:	add	r0, sp, #72	; 0x48
   247d6:	movs	r2, #28
   247d8:	mov	r1, r5
   247da:	ldr	r3, [r3, #0]
   247dc:	str	r3, [sp, #140]	; 0x8c
   247de:	mov.w	r3, #0
   247e2:	str	r5, [sp, #68]	; 0x44
   247e4:	blx	8780 <memset@plt+0x4>
   247e8:	cbnz	r6, 247f8 <print_chunk_item@@Base+0x44>
   247ea:	ldr	r1, [pc, #340]	; (24940 <print_chunk_item@@Base+0x18c>)
   247ec:	mov	r2, r6
   247ee:	add	r1, pc
   247f0:	movs	r0, #1
   247f2:	blx	87f4 <__printf_chk@plt+0x4>
   247f6:	b.n	2480c <print_chunk_item@@Base+0x58>
   247f8:	ldr	r2, [r7, #76]	; 0x4c
   247fa:	add.w	r3, r4, r6, lsl #5
   247fe:	adds	r3, #48	; 0x30
   24800:	cmp	r3, r2
   24802:	bls.n	24822 <print_chunk_item@@Base+0x6e>
   24804:	ldr	r0, [pc, #316]	; (24944 <print_chunk_item@@Base+0x190>)
   24806:	add	r0, pc
   24808:	blx	8618 <puts@plt+0x4>
   2480c:	ldr	r2, [pc, #312]	; (24948 <print_chunk_item@@Base+0x194>)
   2480e:	ldr	r3, [pc, #300]	; (2493c <print_chunk_item@@Base+0x188>)
   24810:	add	r2, pc
   24812:	ldr	r3, [r2, r3]
   24814:	ldr	r2, [r3, #0]
   24816:	ldr	r3, [sp, #140]	; 0x8c
   24818:	eors	r2, r3
   2481a:	beq.w	24930 <print_chunk_item@@Base+0x17c>
   2481e:	blx	84cc <__stack_chk_fail@plt>
   24822:	add.w	sl, sp, #68	; 0x44
   24826:	ldr.w	r0, [r9, #24]
   2482a:	ldr.w	r1, [r9, #28]
   2482e:	adds	r4, #48	; 0x30
   24830:	mov	r2, sl
   24832:	ldr.w	fp, [pc, #280]	; 2494c <print_chunk_item@@Base+0x198>
   24836:	bl	243e4 <btrfs_destroy_delayed_refs@@Base+0x100>
   2483a:	str.w	sl, [sp, #16]
   2483e:	ldr.w	r2, [r9, #16]
   24842:	movs	r0, #1
   24844:	ldr.w	r3, [r9, #20]
   24848:	add	fp, pc
   2484a:	ldr	r1, [pc, #260]	; (24950 <print_chunk_item@@Base+0x19c>)
   2484c:	ldr.w	sl, [pc, #260]	; 24954 <print_chunk_item@@Base+0x1a0>
   24850:	strd	r2, r3, [sp, #8]
   24854:	add	r1, pc
   24856:	ldr.w	r2, [r9, #8]
   2485a:	add	sl, pc
   2485c:	ldr.w	r3, [r9, #12]
   24860:	strd	r2, r3, [sp]
   24864:	ldr.w	r2, [r9]
   24868:	ldr.w	r3, [r9, #4]
   2486c:	blx	87f4 <__printf_chk@plt+0x4>
   24870:	ldr.w	r3, [r9, #40]	; 0x28
   24874:	ldr	r1, [pc, #224]	; (24958 <print_chunk_item@@Base+0x1a4>)
   24876:	movs	r0, #1
   24878:	str	r3, [sp, #0]
   2487a:	add	r1, pc
   2487c:	ldr.w	r3, [r9, #36]	; 0x24
   24880:	ldr.w	r2, [r9, #32]
   24884:	blx	87f4 <__printf_chk@plt+0x4>
   24888:	ldr	r1, [pc, #208]	; (2495c <print_chunk_item@@Base+0x1a8>)
   2488a:	ldrh.w	r3, [r9, #46]	; 0x2e
   2488e:	mov	r2, r6
   24890:	add	r1, pc
   24892:	movs	r0, #1
   24894:	blx	87f4 <__printf_chk@plt+0x4>
   24898:	add.w	r9, sp, #52	; 0x34
   2489c:	add.w	ip, r4, #16
   248a0:	movs	r3, #0
   248a2:	movs	r1, #0
   248a4:	cmp	r3, r1
   248a6:	it	eq
   248a8:	cmpeq	ip, r4
   248aa:	mov	r2, ip
   248ac:	strd	r2, r3, [sp, #24]
   248b0:	bcc.n	248dc <print_chunk_item@@Base+0x128>
   248b2:	ldr	r3, [sp, #24]
   248b4:	adds	r3, #16
   248b6:	str	r3, [sp, #32]
   248b8:	ldr	r3, [sp, #28]
   248ba:	adc.w	r3, r3, #0
   248be:	str	r3, [sp, #36]	; 0x24
   248c0:	adds.w	r3, r4, #32
   248c4:	str	r3, [sp, #40]	; 0x28
   248c6:	adc.w	r3, r1, #0
   248ca:	str	r3, [sp, #44]	; 0x2c
   248cc:	ldrd	r2, r3, [sp, #40]	; 0x28
   248d0:	ldrd	r0, r1, [sp, #32]
   248d4:	cmp	r3, r1
   248d6:	it	eq
   248d8:	cmpeq	r2, r0
   248da:	bcs.n	248e4 <print_chunk_item@@Base+0x130>
   248dc:	ldr	r1, [pc, #128]	; (24960 <print_chunk_item@@Base+0x1ac>)
   248de:	mov	r2, r5
   248e0:	add	r1, pc
   248e2:	b.n	247f0 <print_chunk_item@@Base+0x3c>
   248e4:	mov	r2, ip
   248e6:	movs	r3, #16
   248e8:	mov	r1, r9
   248ea:	mov	r0, r7
   248ec:	bl	1731a <read_extent_buffer@@Base>
   248f0:	add	r3, sp, #100	; 0x64
   248f2:	mov	r0, r9
   248f4:	str	r3, [sp, #24]
   248f6:	mov	r1, r3
   248f8:	blx	8394 <uuid_unparse@plt>
   248fc:	add.w	r2, r8, r4
   24900:	adds	r4, #32
   24902:	ldr	r0, [r2, #8]
   24904:	ldr	r1, [r2, #12]
   24906:	strd	r0, r1, [sp, #8]
   2490a:	movs	r0, #1
   2490c:	ldr	r1, [r2, #0]
   2490e:	ldr	r2, [r2, #4]
   24910:	strd	r1, r2, [sp]
   24914:	mov	r2, r5
   24916:	mov	r1, fp
   24918:	adds	r5, #1
   2491a:	blx	87f4 <__printf_chk@plt+0x4>
   2491e:	ldr	r3, [sp, #24]
   24920:	mov	r1, sl
   24922:	movs	r0, #1
   24924:	mov	r2, r3
   24926:	blx	87f4 <__printf_chk@plt+0x4>
   2492a:	cmp	r6, r5
   2492c:	bgt.n	2489c <print_chunk_item@@Base+0xe8>
   2492e:	b.n	2480c <print_chunk_item@@Base+0x58>
   24930:	add	sp, #148	; 0x94
   24932:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24936:	nop
   24938:	lsls	r2, r0, #23
   2493a:	movs	r4, r0
   2493c:	lsls	r4, r4, #8
   2493e:	movs	r0, r0
   24940:	add	r0, pc, #744	; (adr r0, 24c2c <btrfs_print_key@@Base+0x8>)
   24942:	movs	r1, r0
   24944:	add	r0, pc, #748	; (adr r0, 24c34 <btrfs_print_key@@Base+0x10>)
   24946:	movs	r1, r0
   24948:	lsls	r0, r7, #21
   2494a:	movs	r4, r0
   2494c:	add	r1, pc, #140	; (adr r1, 249dc <print_objectid@@Base+0x28>)
   2494e:	movs	r1, r0
   24950:	add	r0, pc, #520	; (adr r0, 24b5c <print_objectid@@Base+0x1a8>)
   24952:	movs	r1, r0
   24954:	add	r1, pc, #216	; (adr r1, 24a30 <print_objectid@@Base+0x7c>)
   24956:	movs	r1, r0
   24958:	add	r0, pc, #568	; (adr r0, 24b94 <print_objectid@@Base+0x1e0>)
   2495a:	movs	r1, r0
   2495c:	add	r0, pc, #648	; (adr r0, 24be8 <print_objectid@@Base+0x234>)
   2495e:	movs	r1, r0
   24960:	add	r0, pc, #468	; (adr r0, 24b38 <print_objectid@@Base+0x184>)
   24962:	movs	r1, r0

00024964 <print_key_type@@Base>:
   24964:	push	{r4, r5, r6, r7}
   24966:	mov	r5, r3
   24968:	ldrb.w	r3, [sp, #16]
   2496c:	cbnz	r3, 2498a <print_key_type@@Base+0x26>
   2496e:	mov.w	r7, #4294967295	; 0xffffffff
   24972:	cmp	r5, r7
   24974:	mvn.w	r6, #10
   24978:	it	eq
   2497a:	cmpeq	r2, r6
   2497c:	bne.n	2498a <print_key_type@@Base+0x26>
   2497e:	mov	r1, r0
   24980:	ldr	r0, [pc, #36]	; (249a8 <print_key_type@@Base+0x44>)
   24982:	add	r0, pc
   24984:	pop	{r4, r5, r6, r7}
   24986:	b.w	892c <fputs@plt>
   2498a:	ldr	r2, [pc, #32]	; (249ac <print_key_type@@Base+0x48>)
   2498c:	add	r2, pc
   2498e:	ldr.w	r2, [r2, r3, lsl #2]
   24992:	cbz	r2, 2499a <print_key_type@@Base+0x36>
   24994:	mov	r1, r0
   24996:	mov	r0, r2
   24998:	b.n	24984 <print_key_type@@Base+0x20>
   2499a:	ldr	r2, [pc, #20]	; (249b0 <print_key_type@@Base+0x4c>)
   2499c:	movs	r1, #1
   2499e:	pop	{r4, r5, r6, r7}
   249a0:	add	r2, pc
   249a2:	b.w	8818 <__fprintf_chk@plt>
   249a6:	nop
   249a8:	add	r0, pc, #120	; (adr r0, 24a24 <print_objectid@@Base+0x70>)
   249aa:	movs	r1, r0
   249ac:	cdp2	0, 5, cr0, cr4, cr3, {0}
   249b0:	add	r0, pc, #32	; (adr r0, 249d4 <print_objectid@@Base+0x20>)
   249b2:	movs	r1, r0

000249b4 <print_objectid@@Base>:
   249b4:	stmdb	sp!, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl, fp, lr}
   249b8:	mov	r4, r0
   249ba:	ldrb.w	r1, [sp, #48]	; 0x30
   249be:	mov	r6, r2
   249c0:	mov	r7, r3
   249c2:	cmp	r1, #249	; 0xf9
   249c4:	beq.n	24a1c <print_objectid@@Base+0x68>
   249c6:	bhi.n	24a0a <print_objectid@@Base+0x56>
   249c8:	cmp	r1, #204	; 0xcc
   249ca:	beq.n	249f8 <print_objectid@@Base+0x44>
   249cc:	cmp	r1, #246	; 0xf6
   249ce:	beq.n	24a3e <print_objectid@@Base+0x8a>
   249d0:	mov.w	r3, #4294967295	; 0xffffffff
   249d4:	cmp	r7, r3
   249d6:	mvn.w	r2, #254	; 0xfe
   249da:	it	eq
   249dc:	cmpeq	r6, r2
   249de:	beq.w	24ba2 <print_objectid@@Base+0x1ee>
   249e2:	cmp	r3, r7
   249e4:	it	eq
   249e6:	cmpeq	r2, r6
   249e8:	bcc.n	24a9a <print_objectid@@Base+0xe6>
   249ea:	cmp	r7, #0
   249ec:	it	eq
   249ee:	cmpeq	r6, #11
   249f0:	bcs.n	24a84 <print_objectid@@Base+0xd0>
   249f2:	orrs.w	r3, r6, r7
   249f6:	bne.n	24a5c <print_objectid@@Base+0xa8>
   249f8:	ldr	r2, [pc, #440]	; (24bb4 <print_objectid@@Base+0x200>)
   249fa:	movs	r1, #1
   249fc:	mov	r0, r4
   249fe:	strd	r6, r7, [sp]
   24a02:	add	r2, pc
   24a04:	blx	881c <__fprintf_chk@plt+0x4>
   24a08:	b.n	24a56 <print_objectid@@Base+0xa2>
   24a0a:	adds	r3, r1, #5
   24a0c:	uxtb	r3, r3
   24a0e:	cmp	r3, #1
   24a10:	bhi.n	249d0 <print_objectid@@Base+0x1c>
   24a12:	ldr	r2, [pc, #420]	; (24bb8 <print_objectid@@Base+0x204>)
   24a14:	strd	r6, r7, [sp]
   24a18:	add	r2, pc
   24a1a:	b.n	24a3a <print_objectid@@Base+0x86>
   24a1c:	orrs.w	r3, r6, r7
   24a20:	bne.n	24a32 <print_objectid@@Base+0x7e>
   24a22:	mov	r1, r0
   24a24:	ldr	r0, [pc, #404]	; (24bbc <print_objectid@@Base+0x208>)
   24a26:	add	r0, pc
   24a28:	add	sp, #16
   24a2a:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, lr}
   24a2e:	b.w	892c <fputs@plt>
   24a32:	ldr	r2, [pc, #396]	; (24bc0 <print_objectid@@Base+0x20c>)
   24a34:	strd	r6, r7, [sp]
   24a38:	add	r2, pc
   24a3a:	movs	r1, #1
   24a3c:	b.n	24a04 <print_objectid@@Base+0x50>
   24a3e:	uxth	r3, r3
   24a40:	strd	r2, r3, [sp, #8]
   24a44:	ldr	r2, [pc, #380]	; (24bc4 <print_objectid@@Base+0x210>)
   24a46:	lsrs	r3, r7, #16
   24a48:	movs	r1, #1
   24a4a:	str	r3, [sp, #0]
   24a4c:	add	r2, pc
   24a4e:	movs	r3, #0
   24a50:	str	r3, [sp, #4]
   24a52:	blx	881c <__fprintf_chk@plt+0x4>
   24a56:	add	sp, #16
   24a58:	ldmia.w	sp!, {r4, r6, r7, r8, r9, sl, fp, pc}
   24a5c:	subs.w	sl, r6, #2
   24a60:	adc.w	fp, r7, #4294967295	; 0xffffffff
   24a64:	cmp.w	fp, #0
   24a68:	it	eq
   24a6a:	cmpeq.w	sl, #9
   24a6e:	bcs.n	24b00 <print_objectid@@Base+0x14c>
   24a70:	cmp.w	sl, #8
   24a74:	bhi.n	24b00 <print_objectid@@Base+0x14c>
   24a76:	tbb	[pc, sl]
   24a7a:	str	r4, [r1, r1]
   24a7c:	ldr	r4, [r2, r1]
   24a7e:	str	r4, [r3, #4]
   24a80:	ldrh	r0, [r1, #36]	; 0x24
   24a82:	lsls	r0, r2, #2
   24a84:	cmp	r7, #0
   24a86:	it	eq
   24a88:	cmpeq.w	r6, #256	; 0x100
   24a8c:	bne.n	249f8 <print_objectid@@Base+0x44>
   24a8e:	cmp	r1, #228	; 0xe4
   24a90:	bne.n	249f8 <print_objectid@@Base+0x44>
   24a92:	ldr	r0, [pc, #308]	; (24bc8 <print_objectid@@Base+0x214>)
   24a94:	mov	r1, r4
   24a96:	add	r0, pc
   24a98:	b.n	24a28 <print_objectid@@Base+0x74>
   24a9a:	mov.w	r3, #4294967295	; 0xffffffff
   24a9e:	cmp	r3, r7
   24aa0:	mvn.w	r2, #12
   24aa4:	it	eq
   24aa6:	cmpeq	r2, r6
   24aa8:	bcs.n	249f8 <print_objectid@@Base+0x44>
   24aaa:	adds.w	r8, r6, #12
   24aae:	adc.w	r9, r7, #0
   24ab2:	cmp.w	r9, #0
   24ab6:	it	eq
   24ab8:	cmpeq.w	r8, #12
   24abc:	bcs.n	249f8 <print_objectid@@Base+0x44>
   24abe:	cmp.w	r8, #11
   24ac2:	bhi.n	249f8 <print_objectid@@Base+0x44>
   24ac4:	add	r3, pc, #8	; (adr r3, 24ad0 <print_objectid@@Base+0x11c>)
   24ac6:	ldr.w	r2, [r3, r8, lsl #2]
   24aca:	add	r3, r2
   24acc:	bx	r3
   24ace:	nop
   24ad0:	lsls	r3, r6, #2
   24ad2:	movs	r0, r0
   24ad4:	lsls	r3, r5, #2
   24ad6:	movs	r0, r0
   24ad8:	lsls	r3, r4, #2
   24ada:	movs	r0, r0
   24adc:	lsls	r3, r3, #2
   24ade:	movs	r0, r0
   24ae0:	lsls	r3, r2, #2
   24ae2:	movs	r0, r0
   24ae4:	lsls	r3, r1, #2
   24ae6:	movs	r0, r0
   24ae8:	lsls	r3, r0, #2
   24aea:	movs	r0, r0
   24aec:	lsls	r3, r7, #1
   24aee:	movs	r0, r0
   24af0:	lsls	r3, r6, #1
   24af2:	movs	r0, r0
   24af4:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   24af8:	vminnm.f32	<illegal reg q7.5>, <illegal reg q12.5>, <illegal reg q15.5>
   24afc:	lsls	r3, r3, #3
   24afe:	movs	r0, r0
   24b00:	cmp	r1, #216	; 0xd8
   24b02:	mov	r1, r4
   24b04:	bne.n	24b0c <print_objectid@@Base+0x158>
   24b06:	ldr	r0, [pc, #196]	; (24bcc <print_objectid@@Base+0x218>)
   24b08:	add	r0, pc
   24b0a:	b.n	24a28 <print_objectid@@Base+0x74>
   24b0c:	ldr	r0, [pc, #192]	; (24bd0 <print_objectid@@Base+0x21c>)
   24b0e:	add	r0, pc
   24b10:	b.n	24a28 <print_objectid@@Base+0x74>
   24b12:	ldr	r0, [pc, #192]	; (24bd4 <print_objectid@@Base+0x220>)
   24b14:	mov	r1, r4
   24b16:	add	r0, pc
   24b18:	b.n	24a28 <print_objectid@@Base+0x74>
   24b1a:	ldr	r0, [pc, #188]	; (24bd8 <print_objectid@@Base+0x224>)
   24b1c:	mov	r1, r4
   24b1e:	add	r0, pc
   24b20:	b.n	24a28 <print_objectid@@Base+0x74>
   24b22:	ldr	r0, [pc, #184]	; (24bdc <print_objectid@@Base+0x228>)
   24b24:	mov	r1, r4
   24b26:	add	r0, pc
   24b28:	b.n	24a28 <print_objectid@@Base+0x74>
   24b2a:	ldr	r0, [pc, #180]	; (24be0 <print_objectid@@Base+0x22c>)
   24b2c:	mov	r1, r4
   24b2e:	add	r0, pc
   24b30:	b.n	24a28 <print_objectid@@Base+0x74>
   24b32:	ldr	r0, [pc, #176]	; (24be4 <print_objectid@@Base+0x230>)
   24b34:	mov	r1, r4
   24b36:	add	r0, pc
   24b38:	b.n	24a28 <print_objectid@@Base+0x74>
   24b3a:	ldr	r0, [pc, #172]	; (24be8 <print_objectid@@Base+0x234>)
   24b3c:	mov	r1, r4
   24b3e:	add	r0, pc
   24b40:	b.n	24a28 <print_objectid@@Base+0x74>
   24b42:	ldr	r0, [pc, #168]	; (24bec <print_objectid@@Base+0x238>)
   24b44:	mov	r1, r4
   24b46:	add	r0, pc
   24b48:	b.n	24a28 <print_objectid@@Base+0x74>
   24b4a:	ldr	r0, [pc, #164]	; (24bf0 <print_objectid@@Base+0x23c>)
   24b4c:	mov	r1, r4
   24b4e:	add	r0, pc
   24b50:	b.n	24a28 <print_objectid@@Base+0x74>
   24b52:	ldr	r0, [pc, #160]	; (24bf4 <print_objectid@@Base+0x240>)
   24b54:	mov	r1, r4
   24b56:	add	r0, pc
   24b58:	b.n	24a28 <print_objectid@@Base+0x74>
   24b5a:	ldr	r0, [pc, #156]	; (24bf8 <print_objectid@@Base+0x244>)
   24b5c:	mov	r1, r4
   24b5e:	add	r0, pc
   24b60:	b.n	24a28 <print_objectid@@Base+0x74>
   24b62:	ldr	r0, [pc, #152]	; (24bfc <print_objectid@@Base+0x248>)
   24b64:	mov	r1, r4
   24b66:	add	r0, pc
   24b68:	b.n	24a28 <print_objectid@@Base+0x74>
   24b6a:	ldr	r0, [pc, #148]	; (24c00 <print_objectid@@Base+0x24c>)
   24b6c:	mov	r1, r4
   24b6e:	add	r0, pc
   24b70:	b.n	24a28 <print_objectid@@Base+0x74>
   24b72:	ldr	r0, [pc, #144]	; (24c04 <print_objectid@@Base+0x250>)
   24b74:	mov	r1, r4
   24b76:	add	r0, pc
   24b78:	b.n	24a28 <print_objectid@@Base+0x74>
   24b7a:	ldr	r0, [pc, #140]	; (24c08 <print_objectid@@Base+0x254>)
   24b7c:	mov	r1, r4
   24b7e:	add	r0, pc
   24b80:	b.n	24a28 <print_objectid@@Base+0x74>
   24b82:	ldr	r0, [pc, #136]	; (24c0c <print_objectid@@Base+0x258>)
   24b84:	mov	r1, r4
   24b86:	add	r0, pc
   24b88:	b.n	24a28 <print_objectid@@Base+0x74>
   24b8a:	ldr	r0, [pc, #132]	; (24c10 <print_objectid@@Base+0x25c>)
   24b8c:	mov	r1, r4
   24b8e:	add	r0, pc
   24b90:	b.n	24a28 <print_objectid@@Base+0x74>
   24b92:	ldr	r0, [pc, #128]	; (24c14 <print_objectid@@Base+0x260>)
   24b94:	mov	r1, r4
   24b96:	add	r0, pc
   24b98:	b.n	24a28 <print_objectid@@Base+0x74>
   24b9a:	ldr	r0, [pc, #124]	; (24c18 <print_objectid@@Base+0x264>)
   24b9c:	mov	r1, r4
   24b9e:	add	r0, pc
   24ba0:	b.n	24a28 <print_objectid@@Base+0x74>
   24ba2:	ldr	r0, [pc, #120]	; (24c1c <print_objectid@@Base+0x268>)
   24ba4:	mov	r1, r4
   24ba6:	add	r0, pc
   24ba8:	b.n	24a28 <print_objectid@@Base+0x74>
   24baa:	ldr	r0, [pc, #116]	; (24c20 <print_objectid@@Base+0x26c>)
   24bac:	mov	r1, r4
   24bae:	add	r0, pc
   24bb0:	b.n	24a28 <print_objectid@@Base+0x74>
   24bb2:	nop
   24bb4:			; <UNDEFINED> instruction: 0xb6c5
   24bb6:	movs	r1, r0
   24bb8:	ldr	r7, [sp, #660]	; 0x294
   24bba:	movs	r1, r0
   24bbc:	ldr	r7, [sp, #564]	; 0x234
   24bbe:	movs	r1, r0
   24bc0:			; <UNDEFINED> instruction: 0xb68f
   24bc2:	movs	r1, r0
   24bc4:	ldr	r2, [r4, r2]
   24bc6:	movs	r1, r0
   24bc8:	add	r0, pc, #20	; (adr r0, 24be0 <print_objectid@@Base+0x22c>)
   24bca:	movs	r1, r0
   24bcc:	ldr	r6, [sp, #764]	; 0x2fc
   24bce:	movs	r1, r0
   24bd0:	ldr	r6, [sp, #780]	; 0x30c
   24bd2:	movs	r1, r0
   24bd4:	ldr	r6, [sp, #788]	; 0x314
   24bd6:	movs	r1, r0
   24bd8:	ldr	r7, [sp, #524]	; 0x20c
   24bda:	movs	r1, r0
   24bdc:	ldr	r6, [sp, #772]	; 0x304
   24bde:	movs	r1, r0
   24be0:	ldr	r6, [sp, #776]	; 0x308
   24be2:	movs	r1, r0
   24be4:	ldr	r6, [sp, #776]	; 0x308
   24be6:	movs	r1, r0
   24be8:	ldr	r6, [sp, #800]	; 0x320
   24bea:	movs	r1, r0
   24bec:	ldr	r6, [sp, #808]	; 0x328
   24bee:	movs	r1, r0
   24bf0:	ldr	r6, [sp, #808]	; 0x328
   24bf2:	movs	r1, r0
   24bf4:	ldr	r6, [sp, #804]	; 0x324
   24bf6:	movs	r1, r0
   24bf8:	ldr	r6, [sp, #808]	; 0x328
   24bfa:	movs	r1, r0
   24bfc:	ldr	r6, [sp, #816]	; 0x330
   24bfe:	movs	r1, r0
   24c00:	ldr	r6, [sp, #828]	; 0x33c
   24c02:	movs	r1, r0
   24c04:	ldr	r6, [sp, #860]	; 0x35c
   24c06:	movs	r1, r0
   24c08:	ldr	r6, [sp, #876]	; 0x36c
   24c0a:	movs	r1, r0
   24c0c:	ldr	r6, [sp, #888]	; 0x378
   24c0e:	movs	r1, r0
   24c10:	ldr	r6, [sp, #892]	; 0x37c
   24c12:	movs	r1, r0
   24c14:	ldr	r6, [sp, #904]	; 0x388
   24c16:	movs	r1, r0
   24c18:	ldr	r6, [sp, #912]	; 0x390
   24c1a:	movs	r1, r0
   24c1c:	ldr	r6, [sp, #944]	; 0x3b0
   24c1e:	movs	r1, r0
   24c20:	ldrh	r5, [r4, #56]	; 0x38
   24c22:	movs	r1, r0

00024c24 <btrfs_print_key@@Base>:
   24c24:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   24c28:	ldr	r1, [pc, #244]	; (24d20 <btrfs_print_key@@Base+0xfc>)
   24c2a:	ldrb	r6, [r0, #8]
   24c2c:	ldr.w	r8, [r0]
   24c30:	add	r1, pc
   24c32:	ldr.w	r9, [r0, #4]
   24c36:	ldr.w	r4, [r0, #9]
   24c3a:	ldr.w	r5, [r0, #13]
   24c3e:	movs	r0, #1
   24c40:	ldr	r7, [pc, #224]	; (24d24 <btrfs_print_key@@Base+0x100>)
   24c42:	blx	87f4 <__printf_chk@plt+0x4>
   24c46:	ldr	r3, [pc, #224]	; (24d28 <btrfs_print_key@@Base+0x104>)
   24c48:	mov	r2, r8
   24c4a:	add	r7, pc
   24c4c:	ldr	r7, [r7, r3]
   24c4e:	mov	r3, r9
   24c50:	str	r6, [sp, #0]
   24c52:	ldr	r0, [r7, #0]
   24c54:	bl	249b4 <print_objectid@@Base>
   24c58:	movs	r0, #32
   24c5a:	blx	8790 <putchar@plt+0x4>
   24c5e:	str	r6, [sp, #0]
   24c60:	ldr	r0, [r7, #0]
   24c62:	mov	r2, r8
   24c64:	mov	r3, r9
   24c66:	bl	24964 <print_key_type@@Base>
   24c6a:	cmp	r6, #132	; 0x84
   24c6c:	beq.n	24cbc <btrfs_print_key@@Base+0x98>
   24c6e:	add.w	r3, r6, #14
   24c72:	uxtb	r3, r3
   24c74:	cmp	r3, #10
   24c76:	bhi.n	24cfa <btrfs_print_key@@Base+0xd6>
   24c78:	subs	r6, #242	; 0xf2
   24c7a:	cmp	r6, #10
   24c7c:	bhi.n	24cfa <btrfs_print_key@@Base+0xd6>
   24c7e:	tbb	[pc, r6]
   24c82:	subs	r4, #6
   24c84:	subs	r4, #6
   24c86:	subs	r4, #6
   24c88:	subs	r4, #60	; 0x3c
   24c8a:	asrs	r4, r7, #12
   24c8c:	movs	r3, r2
   24c8e:	ldr	r1, [pc, #156]	; (24d2c <btrfs_print_key@@Base+0x108>)
   24c90:	uxth	r3, r5
   24c92:	lsrs	r2, r5, #16
   24c94:	strd	r4, r3, [sp]
   24c98:	add	r1, pc
   24c9a:	movs	r3, #0
   24c9c:	movs	r0, #1
   24c9e:	blx	87f4 <__printf_chk@plt+0x4>
   24ca2:	add	sp, #12
   24ca4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   24ca8:	ldr	r1, [pc, #132]	; (24d30 <btrfs_print_key@@Base+0x10c>)
   24caa:	mov	r2, r4
   24cac:	mov	r3, r5
   24cae:	add	r1, pc
   24cb0:	movs	r0, #1
   24cb2:	add	sp, #12
   24cb4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   24cb8:	b.w	87f0 <__printf_chk@plt>
   24cbc:	movs	r0, #32
   24cbe:	blx	8790 <putchar@plt+0x4>
   24cc2:	mov.w	r3, #4294967295	; 0xffffffff
   24cc6:	cmp	r9, r3
   24cc8:	mvn.w	r2, #7
   24ccc:	it	eq
   24cce:	cmpeq	r8, r2
   24cd0:	bne.n	24cea <btrfs_print_key@@Base+0xc6>
   24cd2:	str	r6, [sp, #0]
   24cd4:	mov	r2, r4
   24cd6:	ldr	r0, [r7, #0]
   24cd8:	mov	r3, r5
   24cda:	bl	249b4 <print_objectid@@Base>
   24cde:	movs	r0, #41	; 0x29
   24ce0:	add	sp, #12
   24ce2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   24ce6:	b.w	878c <putchar@plt>
   24cea:	ldr	r1, [pc, #72]	; (24d34 <btrfs_print_key@@Base+0x110>)
   24cec:	mov	r2, r4
   24cee:	mov	r3, r5
   24cf0:	movs	r0, #1
   24cf2:	add	r1, pc
   24cf4:	blx	87f4 <__printf_chk@plt+0x4>
   24cf8:	b.n	24cde <btrfs_print_key@@Base+0xba>
   24cfa:	adds	r3, r5, #1
   24cfc:	it	eq
   24cfe:	cmpeq.w	r4, #4294967295	; 0xffffffff
   24d02:	bne.n	24d14 <btrfs_print_key@@Base+0xf0>
   24d04:	ldr	r1, [pc, #48]	; (24d38 <btrfs_print_key@@Base+0x114>)
   24d06:	movs	r0, #1
   24d08:	add	r1, pc
   24d0a:	add	sp, #12
   24d0c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   24d10:	b.w	87f0 <__printf_chk@plt>
   24d14:	ldr	r1, [pc, #36]	; (24d3c <btrfs_print_key@@Base+0x118>)
   24d16:	mov	r2, r4
   24d18:	mov	r3, r5
   24d1a:	add	r1, pc
   24d1c:	b.n	24cb0 <btrfs_print_key@@Base+0x8c>
   24d1e:	nop
   24d20:	ldr	r6, [sp, #496]	; 0x1f0
   24d22:	movs	r1, r0
   24d24:	lsls	r6, r7, #4
   24d26:	movs	r4, r0
   24d28:	lsls	r0, r3, #9
   24d2a:	movs	r0, r0
   24d2c:	ldr	r6, [sp, #104]	; 0x68
   24d2e:	movs	r1, r0
   24d30:	ldr	r6, [sp, #64]	; 0x40
   24d32:	movs	r1, r0
   24d34:	cbz	r5, 24dac <print_extent_item@@Base+0x6c>
   24d36:	movs	r1, r0
   24d38:	ldr	r5, [sp, #776]	; 0x308
   24d3a:	movs	r1, r0
   24d3c:	ldr	r5, [sp, #724]	; 0x2d4
   24d3e:	movs	r1, r0

00024d40 <print_extent_item@@Base>:
   24d40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24d44:	sub	sp, #92	; 0x5c
   24d46:	ldr	r3, [pc, #632]	; (24fc0 <print_extent_item@@Base+0x280>)
   24d48:	add.w	r5, r0, #96	; 0x60
   24d4c:	str	r2, [sp, #28]
   24d4e:	movs	r6, #0
   24d50:	ldr	r2, [pc, #624]	; (24fc4 <print_extent_item@@Base+0x284>)
   24d52:	mov	r8, r0
   24d54:	add	r0, sp, #56	; 0x38
   24d56:	ldr.w	sl, [pc, #624]	; 24fc8 <print_extent_item@@Base+0x288>
   24d5a:	add	r2, pc
   24d5c:	add	sl, pc
   24d5e:	ldr	r3, [r2, r3]
   24d60:	movs	r2, #28
   24d62:	ldr	r3, [r3, #0]
   24d64:	str	r3, [sp, #84]	; 0x54
   24d66:	mov.w	r3, #0
   24d6a:	movs	r3, #25
   24d6c:	muls	r1, r3
   24d6e:	str	r6, [sp, #52]	; 0x34
   24d70:	add.w	r7, r1, #101	; 0x65
   24d74:	mov	r1, r6
   24d76:	adds	r4, r5, r7
   24d78:	ldr.w	r3, [r4, #21]
   24d7c:	str	r3, [sp, #24]
   24d7e:	blx	8780 <memset@plt+0x4>
   24d82:	ldr	r3, [sp, #24]
   24d84:	cmp	r3, #23
   24d86:	bls.w	24eb8 <print_extent_item@@Base+0x178>
   24d8a:	ldr.w	r4, [r4, #17]
   24d8e:	mov	r3, r6
   24d90:	adds	r4, #101	; 0x65
   24d92:	add.w	r9, r5, r4
   24d96:	ldr.w	fp, [r9, #16]
   24d9a:	and.w	r2, fp, #1
   24d9e:	orrs	r3, r2
   24da0:	add	r3, sp, #52	; 0x34
   24da2:	beq.w	24ecc <print_extent_item@@Base+0x18c>
   24da6:	ldr	r1, [pc, #548]	; (24fcc <print_extent_item@@Base+0x28c>)
   24da8:	mov	r0, r3
   24daa:	add	r1, pc
   24dac:	blx	85b4 <strcpy@plt>
   24db0:	mov	r3, r0
   24db2:	and.w	r2, fp, #2
   24db6:	str	r2, [sp, #16]
   24db8:	movs	r2, #0
   24dba:	str	r2, [sp, #20]
   24dbc:	ldrd	r1, r2, [sp, #16]
   24dc0:	orrs	r2, r1
   24dc2:	beq.n	24dde <print_extent_item@@Base+0x9e>
   24dc4:	cbnz	r6, 24dd2 <print_extent_item@@Base+0x92>
   24dc6:	ldr	r1, [pc, #520]	; (24fd0 <print_extent_item@@Base+0x290>)
   24dc8:	movs	r2, #32
   24dca:	mov	r0, r3
   24dcc:	add	r1, pc
   24dce:	blx	874c <__strcat_chk@plt>
   24dd2:	ldr	r1, [pc, #512]	; (24fd4 <print_extent_item@@Base+0x294>)
   24dd4:	add	r0, sp, #52	; 0x34
   24dd6:	movs	r2, #32
   24dd8:	add	r1, pc
   24dda:	blx	874c <__strcat_chk@plt>
   24dde:	and.w	r2, fp, #256	; 0x100
   24de2:	movs	r3, #0
   24de4:	orrs	r3, r2
   24de6:	beq.n	24e00 <print_extent_item@@Base+0xc0>
   24de8:	add	r3, sp, #52	; 0x34
   24dea:	ldr	r1, [pc, #492]	; (24fd8 <print_extent_item@@Base+0x298>)
   24dec:	movs	r2, #32
   24dee:	add	r1, pc
   24df0:	mov	r0, r3
   24df2:	blx	874c <__strcat_chk@plt>
   24df6:	ldr	r1, [pc, #484]	; (24fdc <print_extent_item@@Base+0x29c>)
   24df8:	movs	r2, #32
   24dfa:	add	r1, pc
   24dfc:	blx	874c <__strcat_chk@plt>
   24e00:	add	r3, sp, #52	; 0x34
   24e02:	str	r3, [sp, #8]
   24e04:	ldr.w	r2, [r9, #8]
   24e08:	movs	r0, #1
   24e0a:	ldr.w	r3, [r9, #12]
   24e0e:	add.w	r6, r4, #24
   24e12:	ldr	r1, [pc, #460]	; (24fe0 <print_extent_item@@Base+0x2a0>)
   24e14:	strd	r2, r3, [sp]
   24e18:	add	r1, pc
   24e1a:	ldr.w	r2, [r9]
   24e1e:	ldr.w	r3, [r9, #4]
   24e22:	blx	87f4 <__printf_chk@plt+0x4>
   24e26:	ldrd	r2, r3, [sp, #16]
   24e2a:	orrs	r3, r2
   24e2c:	ldr	r3, [sp, #28]
   24e2e:	beq.n	24ed0 <print_extent_item@@Base+0x190>
   24e30:	cmp	r3, #0
   24e32:	bne.n	24ed4 <print_extent_item@@Base+0x194>
   24e34:	add	r7, sp, #32
   24e36:	mov	r2, r6
   24e38:	movs	r3, #17
   24e3a:	mov	r0, r8
   24e3c:	mov	r1, r7
   24e3e:	add	r6, r5
   24e40:	bl	1731a <read_extent_buffer@@Base>
   24e44:	ldr	r1, [pc, #412]	; (24fe4 <print_extent_item@@Base+0x2a4>)
   24e46:	movs	r0, #1
   24e48:	add	r1, pc
   24e4a:	blx	87f4 <__printf_chk@plt+0x4>
   24e4e:	mov	r0, r7
   24e50:	bl	24c24 <btrfs_print_key@@Base>
   24e54:	ldr	r1, [pc, #400]	; (24fe8 <print_extent_item@@Base+0x2a8>)
   24e56:	ldrb	r2, [r6, #17]
   24e58:	movs	r0, #1
   24e5a:	add	r1, pc
   24e5c:	add.w	r6, r4, #42	; 0x2a
   24e60:	blx	87f4 <__printf_chk@plt+0x4>
   24e64:	ldr	r3, [sp, #24]
   24e66:	ldr.w	r8, [pc, #388]	; 24fec <print_extent_item@@Base+0x2ac>
   24e6a:	ldr.w	r9, [pc, #388]	; 24ff0 <print_extent_item@@Base+0x2b0>
   24e6e:	add	r4, r3
   24e70:	ldr.w	fp, [pc, #384]	; 24ff4 <print_extent_item@@Base+0x2b4>
   24e74:	add	r8, pc
   24e76:	add	r9, pc
   24e78:	add	fp, pc
   24e7a:	cmp	r6, r4
   24e7c:	bcc.n	24ef0 <print_extent_item@@Base+0x1b0>
   24e7e:	beq.n	24eb8 <print_extent_item@@Base+0x178>
   24e80:	ldr	r3, [pc, #372]	; (24ff8 <print_extent_item@@Base+0x2b8>)
   24e82:	mov.w	r1, #1
   24e86:	ldr	r2, [pc, #372]	; (24ffc <print_extent_item@@Base+0x2bc>)
   24e88:	ldr.w	r0, [sl, r3]
   24e8c:	ite	hi
   24e8e:	movhi	r3, #1
   24e90:	movls	r3, #0
   24e92:	str	r3, [sp, #12]
   24e94:	ldr	r3, [pc, #360]	; (25000 <print_extent_item@@Base+0x2c0>)
   24e96:	add	r2, pc
   24e98:	add	r3, pc
   24e9a:	str	r3, [sp, #8]
   24e9c:	ldr	r3, [pc, #356]	; (25004 <print_extent_item@@Base+0x2c4>)
   24e9e:	add	r3, pc
   24ea0:	adds	r3, #33	; 0x21
   24ea2:	str	r3, [sp, #4]
   24ea4:	movw	r3, #497	; 0x1f1
   24ea8:	str	r3, [sp, #0]
   24eaa:	ldr	r3, [pc, #348]	; (25008 <print_extent_item@@Base+0x2c8>)
   24eac:	ldr	r0, [r0, #0]
   24eae:	add	r3, pc
   24eb0:	blx	881c <__fprintf_chk@plt+0x4>
   24eb4:	bl	24398 <btrfs_destroy_delayed_refs@@Base+0xb4>
   24eb8:	ldr	r2, [pc, #336]	; (2500c <print_extent_item@@Base+0x2cc>)
   24eba:	ldr	r3, [pc, #260]	; (24fc0 <print_extent_item@@Base+0x280>)
   24ebc:	add	r2, pc
   24ebe:	ldr	r3, [r2, r3]
   24ec0:	ldr	r2, [r3, #0]
   24ec2:	ldr	r3, [sp, #84]	; 0x54
   24ec4:	eors	r2, r3
   24ec6:	beq.n	24fb8 <print_extent_item@@Base+0x278>
   24ec8:	blx	84cc <__stack_chk_fail@plt>
   24ecc:	movs	r6, #1
   24ece:	b.n	24db2 <print_extent_item@@Base+0x72>
   24ed0:	cmp	r3, #0
   24ed2:	beq.n	24e64 <print_extent_item@@Base+0x124>
   24ed4:	add	r1, sp, #32
   24ed6:	mov	r2, r7
   24ed8:	mov	r0, r8
   24eda:	movs	r3, #17
   24edc:	bl	1731a <read_extent_buffer@@Base>
   24ee0:	ldr	r1, [pc, #300]	; (25010 <print_extent_item@@Base+0x2d0>)
   24ee2:	ldr.w	r2, [sp, #41]	; 0x29
   24ee6:	movs	r0, #1
   24ee8:	add	r1, pc
   24eea:	blx	87f4 <__printf_chk@plt+0x4>
   24eee:	b.n	24e64 <print_extent_item@@Base+0x124>
   24ef0:	adds	r0, r5, r6
   24ef2:	ldrb	r1, [r5, r6]
   24ef4:	mov	r3, r0
   24ef6:	subs	r1, #176	; 0xb0
   24ef8:	ldr.w	r2, [r3, #1]!
   24efc:	ldr	r3, [r3, #4]
   24efe:	cmp	r1, #8
   24f00:	bhi.n	24eb8 <print_extent_item@@Base+0x178>
   24f02:	add	r7, pc, #8	; (adr r7, 24f0c <print_extent_item@@Base+0x1cc>)
   24f04:	ldr.w	r1, [r7, r1, lsl #2]
   24f08:	add	r7, r1
   24f0a:	bx	r7
   24f0c:	movs	r5, r4
   24f0e:	movs	r0, r0
   24f10:			; <UNDEFINED> instruction: 0xffadffff
   24f14:	lsls	r7, r3, #1
   24f16:	movs	r0, r0
   24f18:			; <UNDEFINED> instruction: 0xffadffff
   24f1c:			; <UNDEFINED> instruction: 0xffadffff
   24f20:			; <UNDEFINED> instruction: 0xffadffff
   24f24:	lsls	r3, r2, #1
   24f26:	movs	r0, r0
   24f28:			; <UNDEFINED> instruction: 0xffadffff
   24f2c:	lsls	r3, r3, #2
   24f2e:	movs	r0, r0
   24f30:	ldr	r1, [pc, #224]	; (25014 <print_extent_item@@Base+0x2d4>)
   24f32:	movs	r0, #1
   24f34:	str	r3, [sp, #24]
   24f36:	add	r1, pc
   24f38:	str	r2, [sp, #16]
   24f3a:	blx	87f4 <__printf_chk@plt+0x4>
   24f3e:	ldr	r1, [pc, #216]	; (25018 <print_extent_item@@Base+0x2d8>)
   24f40:	movs	r0, #0
   24f42:	ldr	r2, [sp, #16]
   24f44:	ldr	r3, [sp, #24]
   24f46:	ldr.w	r1, [sl, r1]
   24f4a:	str	r0, [sp, #0]
   24f4c:	ldr	r0, [r1, #0]
   24f4e:	bl	249b4 <print_objectid@@Base>
   24f52:	movs	r0, #10
   24f54:	blx	8790 <putchar@plt+0x4>
   24f58:	movs	r3, #9
   24f5a:	add	r6, r3
   24f5c:	b.n	24e7a <print_extent_item@@Base+0x13a>
   24f5e:	ldr	r1, [pc, #188]	; (2501c <print_extent_item@@Base+0x2dc>)
   24f60:	movs	r0, #1
   24f62:	add	r1, pc
   24f64:	blx	87f4 <__printf_chk@plt+0x4>
   24f68:	b.n	24f58 <print_extent_item@@Base+0x218>
   24f6a:	mov	r1, r9
   24f6c:	movs	r0, #1
   24f6e:	blx	87f4 <__printf_chk@plt+0x4>
   24f72:	ldr	r2, [pc, #164]	; (25018 <print_extent_item@@Base+0x2d8>)
   24f74:	adds	r3, r6, #1
   24f76:	adds	r7, r5, r3
   24f78:	ldr.w	r1, [sl, r2]
   24f7c:	movs	r2, #0
   24f7e:	str	r2, [sp, #0]
   24f80:	ldr	r2, [r5, r3]
   24f82:	ldr	r0, [r1, #0]
   24f84:	ldr	r3, [r7, #4]
   24f86:	bl	249b4 <print_objectid@@Base>
   24f8a:	ldr	r3, [r7, #24]
   24f8c:	mov	r1, fp
   24f8e:	movs	r0, #1
   24f90:	str	r3, [sp, #8]
   24f92:	ldr	r2, [r7, #16]
   24f94:	ldr	r3, [r7, #20]
   24f96:	strd	r2, r3, [sp]
   24f9a:	ldr	r3, [r7, #12]
   24f9c:	ldr	r2, [r7, #8]
   24f9e:	blx	87f4 <__printf_chk@plt+0x4>
   24fa2:	movs	r3, #29
   24fa4:	b.n	24f5a <print_extent_item@@Base+0x21a>
   24fa6:	ldr.w	r1, [r0, #9]
   24faa:	movs	r0, #1
   24fac:	str	r1, [sp, #0]
   24fae:	mov	r1, r8
   24fb0:	blx	87f4 <__printf_chk@plt+0x4>
   24fb4:	movs	r3, #13
   24fb6:	b.n	24f5a <print_extent_item@@Base+0x21a>
   24fb8:	add	sp, #92	; 0x5c
   24fba:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24fbe:	nop
   24fc0:	lsls	r4, r4, #8
   24fc2:	movs	r0, r0
   24fc4:	movs	r6, r5
   24fc6:	movs	r4, r0
   24fc8:	movs	r4, r5
   24fca:	movs	r4, r0
   24fcc:	add	r0, sp, #324	; 0x144
   24fce:	movs	r1, r0
   24fd0:	ldr	r1, [r7, #120]	; 0x78
   24fd2:	movs	r1, r0
   24fd4:	ldr	r4, [sp, #1016]	; 0x3f8
   24fd6:	movs	r1, r0
   24fd8:	ldr	r7, [r2, #120]	; 0x78
   24fda:	movs	r1, r0
   24fdc:	ldr	r4, [sp, #924]	; 0x39c
   24fde:	movs	r1, r0
   24fe0:	ldr	r4, [sp, #856]	; 0x358
   24fe2:	movs	r1, r0
   24fe4:	ldr	r4, [sp, #788]	; 0x314
   24fe6:	movs	r1, r0
   24fe8:	ldr	r4, [sp, #848]	; 0x350
   24fea:	movs	r1, r0
   24fec:	ldr	r5, [sp, #276]	; 0x114
   24fee:	movs	r1, r0
   24ff0:	ldr	r5, [sp, #8]
   24ff2:	movs	r1, r0
   24ff4:	ldr	r5, [sp, #112]	; 0x70
   24ff6:	movs	r1, r0
   24ff8:	lsls	r4, r6, #8
   24ffa:	movs	r0, r0
   24ffc:	strh	r2, [r2, r1]
   24ffe:	movs	r1, r0
   25000:	ldrsh	r6, [r4, r4]
   25002:	movs	r1, r0
   25004:	add	r3, sp, #40	; 0x28
   25006:	movs	r1, r0
   25008:	ldr	r5, [sp, #220]	; 0xdc
   2500a:	movs	r1, r0
   2500c:	cdp2	0, 12, cr0, cr12, cr3, {0}
   25010:	ldr	r4, [sp, #204]	; 0xcc
   25012:	movs	r1, r0
   25014:	ldr	r4, [sp, #12]
   25016:	movs	r1, r0
   25018:	lsls	r0, r3, #9
   2501a:	movs	r0, r0
   2501c:	ldr	r3, [sp, #968]	; 0x3c8
   2501e:	movs	r1, r0

00025020 <btrfs_print_leaf@@Base>:
   25020:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25024:	mov.w	r8, #0
   25028:	vpush	{d8-d10}
   2502c:	mov	r9, r0
   2502e:	ldr.w	r2, [pc, #3380]	; 25d64 <btrfs_print_leaf@@Base+0xd44>
   25032:	ldr.w	r3, [pc, #3380]	; 25d68 <btrfs_print_leaf@@Base+0xd48>
   25036:	add	r2, pc
   25038:	ldr.w	r6, [pc, #3376]	; 25d6c <btrfs_print_leaf@@Base+0xd4c>
   2503c:	subw	sp, sp, #1204	; 0x4b4
   25040:	ldr	r3, [r2, r3]
   25042:	add	r6, pc
   25044:	ldr	r3, [r3, #0]
   25046:	str.w	r3, [sp, #1196]	; 0x4ac
   2504a:	mov.w	r3, #0
   2504e:	ldr	r3, [r0, #92]	; 0x5c
   25050:	str	r3, [sp, #104]	; 0x68
   25052:	ldr.w	r3, [r3, #384]	; 0x180
   25056:	subs	r3, #101	; 0x65
   25058:	str	r3, [sp, #108]	; 0x6c
   2505a:	ldr.w	r5, [r0, #152]	; 0x98
   2505e:	mov	r3, r8
   25060:	ldr.w	r4, [r0, #156]	; 0x9c
   25064:	and.w	r2, r5, #1
   25068:	orrs	r3, r2
   2506a:	bic.w	r7, r4, #4278190080	; 0xff000000
   2506e:	add	r3, sp, #812	; 0x32c
   25070:	mov.w	r4, r4, lsr #24
   25074:	beq.w	251c8 <btrfs_print_leaf@@Base+0x1a8>
   25078:	ldr.w	r1, [pc, #3316]	; 25d70 <btrfs_print_leaf@@Base+0xd50>
   2507c:	mov	r0, r3
   2507e:	add	r1, pc
   25080:	blx	85b4 <strcpy@plt>
   25084:	mov	r2, r8
   25086:	mov	r3, r0
   25088:	and.w	r0, r5, #2
   2508c:	movs	r1, #0
   2508e:	orrs	r1, r0
   25090:	beq.n	250b2 <btrfs_print_leaf@@Base+0x92>
   25092:	cbnz	r2, 250a4 <btrfs_print_leaf@@Base+0x84>
   25094:	ldr.w	r1, [pc, #3292]	; 25d74 <btrfs_print_leaf@@Base+0xd54>
   25098:	mov	r0, r3
   2509a:	movs	r2, #128	; 0x80
   2509c:	add	r1, pc
   2509e:	blx	874c <__strcat_chk@plt>
   250a2:	mov	r3, r0
   250a4:	ldr.w	r1, [pc, #3280]	; 25d78 <btrfs_print_leaf@@Base+0xd58>
   250a8:	movs	r2, #128	; 0x80
   250aa:	mov	r0, r3
   250ac:	add	r1, pc
   250ae:	blx	874c <__strcat_chk@plt>
   250b2:	ldr.w	r3, [r9, #192]	; 0xc0
   250b6:	mov	r0, r9
   250b8:	ldr.w	r2, [r9, #144]	; 0x90
   250bc:	add.w	sl, r9, #197	; 0xc5
   250c0:	str	r3, [sp, #240]	; 0xf0
   250c2:	ldr.w	r3, [r9, #148]	; 0x94
   250c6:	str	r2, [sp, #84]	; 0x54
   250c8:	str	r3, [sp, #80]	; 0x50
   250ca:	bl	18fe8 <btrfs_leaf_free_space@@Base>
   250ce:	ldr.w	ip, [r9, #176]	; 0xb0
   250d2:	ldr.w	r1, [r9, #180]	; 0xb4
   250d6:	ldr	r3, [sp, #240]	; 0xf0
   250d8:	strd	ip, r1, [sp, #8]
   250dc:	ldr.w	r1, [pc, #3228]	; 25d7c <btrfs_print_leaf@@Base+0xd5c>
   250e0:	str	r3, [sp, #0]
   250e2:	add	r1, pc
   250e4:	ldrd	r3, r2, [sp, #80]	; 0x50
   250e8:	str	r0, [sp, #4]
   250ea:	movs	r0, #1
   250ec:	blx	87f4 <__printf_chk@plt+0x4>
   250f0:	ldr.w	r3, [pc, #3212]	; 25d80 <btrfs_print_leaf@@Base+0xd60>
   250f4:	ldr.w	r2, [r9, #184]	; 0xb8
   250f8:	ldr	r3, [r6, r3]
   250fa:	movs	r6, #0
   250fc:	str	r6, [sp, #0]
   250fe:	str	r3, [sp, #100]	; 0x64
   25100:	ldr	r1, [sp, #100]	; 0x64
   25102:	ldr.w	r3, [r9, #188]	; 0xbc
   25106:	ldr	r0, [r1, #0]
   25108:	bl	249b4 <print_objectid@@Base>
   2510c:	movs	r0, #10
   2510e:	blx	8790 <putchar@plt+0x4>
   25112:	ldr.w	r1, [pc, #3184]	; 25d84 <btrfs_print_leaf@@Base+0xd64>
   25116:	ldr.w	r2, [r9, #144]	; 0x90
   2511a:	add	r3, sp, #812	; 0x32c
   2511c:	add	r1, pc
   2511e:	str	r3, [sp, #8]
   25120:	movs	r0, #1
   25122:	ldr.w	r3, [r9, #148]	; 0x94
   25126:	str	r4, [sp, #12]
   25128:	strd	r5, r7, [sp]
   2512c:	blx	87f4 <__printf_chk@plt+0x4>
   25130:	mov	r0, r9
   25132:	bl	24628 <btrfs_destroy_delayed_refs@@Base+0x344>
   25136:	ldr	r3, [sp, #100]	; 0x64
   25138:	ldr	r0, [r3, #0]
   2513a:	blx	83c4 <fflush@plt>
   2513e:	ldr.w	r3, [pc, #3144]	; 25d88 <btrfs_print_leaf@@Base+0xd68>
   25142:	str	r6, [sp, #80]	; 0x50
   25144:	add	r3, pc
   25146:	vmov	s20, r3
   2514a:	ldr.w	r3, [pc, #3136]	; 25d8c <btrfs_print_leaf@@Base+0xd6c>
   2514e:	add	r3, pc
   25150:	vmov	s21, r3
   25154:	ldr	r3, [sp, #80]	; 0x50
   25156:	ldr	r2, [sp, #240]	; 0xf0
   25158:	cmp	r3, r2
   2515a:	beq.n	251ac <btrfs_print_leaf@@Base+0x18c>
   2515c:	ldr	r3, [sp, #80]	; 0x50
   2515e:	movs	r2, #25
   25160:	ldr.w	r8, [sl, #17]
   25164:	add.w	fp, r9, #96	; 0x60
   25168:	muls	r2, r3
   2516a:	ldr.w	r3, [sl, #21]
   2516e:	str	r3, [sp, #84]	; 0x54
   25170:	adds	r2, #101	; 0x65
   25172:	ldr	r3, [sp, #108]	; 0x6c
   25174:	cmp	r3, r8
   25176:	bcc.n	25182 <btrfs_print_leaf@@Base+0x162>
   25178:	ldr	r3, [sp, #84]	; 0x54
   2517a:	ldr	r1, [sp, #108]	; 0x6c
   2517c:	add	r3, r8
   2517e:	cmp	r3, r1
   25180:	bls.n	251cc <btrfs_print_leaf@@Base+0x1ac>
   25182:	ldr	r3, [sp, #108]	; 0x6c
   25184:	ldr.w	r0, [pc, #3080]	; 25d90 <btrfs_print_leaf@@Base+0xd70>
   25188:	ldr.w	r2, [r9, #144]	; 0x90
   2518c:	str	r3, [sp, #12]
   2518e:	add	r0, pc
   25190:	ldr	r3, [sp, #84]	; 0x54
   25192:	strd	r8, r3, [sp, #4]
   25196:	ldr	r3, [sp, #80]	; 0x50
   25198:	str	r3, [sp, #0]
   2519a:	ldr.w	r3, [r9, #148]	; 0x94
   2519e:	bl	1747c <__btrfs_error@@Base>
   251a2:	ldr.w	r0, [pc, #3056]	; 25d94 <btrfs_print_leaf@@Base+0xd74>
   251a6:	add	r0, pc
   251a8:	bl	1747c <__btrfs_error@@Base>
   251ac:	ldr.w	r2, [pc, #3048]	; 25d98 <btrfs_print_leaf@@Base+0xd78>
   251b0:	ldr.w	r3, [pc, #2996]	; 25d68 <btrfs_print_leaf@@Base+0xd48>
   251b4:	add	r2, pc
   251b6:	ldr	r3, [r2, r3]
   251b8:	ldr	r2, [r3, #0]
   251ba:	ldr.w	r3, [sp, #1196]	; 0x4ac
   251be:	eors	r2, r3
   251c0:	beq.w	26354 <btrfs_print_leaf@@Base+0x1334>
   251c4:	blx	84cc <__stack_chk_fail@plt>
   251c8:	movs	r2, #1
   251ca:	b.n	25088 <btrfs_print_leaf@@Base+0x68>
   251cc:	add	r1, sp, #252	; 0xfc
   251ce:	movs	r3, #17
   251d0:	mov	r0, r9
   251d2:	str	r1, [sp, #96]	; 0x60
   251d4:	bl	1731a <read_extent_buffer@@Base>
   251d8:	ldr	r3, [sp, #96]	; 0x60
   251da:	vmov	r1, s20
   251de:	movs	r0, #1
   251e0:	ldr	r2, [sp, #80]	; 0x50
   251e2:	add.w	r7, r8, #101	; 0x65
   251e6:	ldrb	r6, [r3, #8]
   251e8:	ldrd	r4, r5, [r3]
   251ec:	ldr.w	r3, [r3, #9]
   251f0:	str	r3, [sp, #88]	; 0x58
   251f2:	ldr	r3, [sp, #96]	; 0x60
   251f4:	ldr.w	r3, [r3, #13]
   251f8:	str	r3, [sp, #92]	; 0x5c
   251fa:	blx	87f4 <__printf_chk@plt+0x4>
   251fe:	ldr	r0, [sp, #96]	; 0x60
   25200:	bl	24c24 <btrfs_print_key@@Base>
   25204:	ldr.w	r1, [pc, #2964]	; 25d9c <btrfs_print_leaf@@Base+0xd7c>
   25208:	ldr.w	r3, [sl, #21]
   2520c:	movs	r0, #1
   2520e:	ldr.w	r2, [sl, #17]
   25212:	add	r1, pc
   25214:	blx	87f4 <__printf_chk@plt+0x4>
   25218:	cmp	r6, #0
   2521a:	bne.n	2529c <btrfs_print_leaf@@Base+0x27c>
   2521c:	mov.w	r3, #4294967295	; 0xffffffff
   25220:	cmp	r5, r3
   25222:	mvn.w	r2, #10
   25226:	it	eq
   25228:	cmpeq	r4, r2
   2522a:	bne.n	25288 <btrfs_print_leaf@@Base+0x268>
   2522c:	ldr.w	r3, [sl, #17]
   25230:	add	r4, sp, #272	; 0x110
   25232:	mov	r0, r9
   25234:	add.w	r5, r3, #101	; 0x65
   25238:	mov	r1, r4
   2523a:	movs	r3, #17
   2523c:	mov	r2, r5
   2523e:	bl	1731a <read_extent_buffer@@Base>
   25242:	ldr.w	r1, [pc, #2908]	; 25da0 <btrfs_print_leaf@@Base+0xd80>
   25246:	movs	r0, #1
   25248:	add	r1, pc
   2524a:	blx	87f4 <__printf_chk@plt+0x4>
   2524e:	mov	r0, r4
   25250:	bl	24c24 <btrfs_print_key@@Base>
   25254:	movs	r0, #10
   25256:	blx	8790 <putchar@plt+0x4>
   2525a:	add.w	r3, fp, r5
   2525e:	mov	r0, r3
   25260:	mov	r1, r3
   25262:	ldr.w	r4, [r0, #33]!
   25266:	ldr.w	r2, [r1, #17]!
   2526a:	ldr	r0, [r0, #4]
   2526c:	strd	r4, r0, [sp, #8]
   25270:	ldr.w	r0, [r3, #25]!
   25274:	ldr	r3, [r3, #4]
   25276:	strd	r0, r3, [sp]
   2527a:	movs	r0, #1
   2527c:	ldr	r3, [r1, #4]
   2527e:	ldr.w	r1, [pc, #2852]	; 25da4 <btrfs_print_leaf@@Base+0xd84>
   25282:	add	r1, pc
   25284:	blx	87f4 <__printf_chk@plt+0x4>
   25288:	ldr	r3, [sp, #100]	; 0x64
   2528a:	add.w	sl, sl, #25
   2528e:	ldr	r0, [r3, #0]
   25290:	blx	83c4 <fflush@plt>
   25294:	ldr	r3, [sp, #80]	; 0x50
   25296:	adds	r3, #1
   25298:	str	r3, [sp, #80]	; 0x50
   2529a:	b.n	25154 <btrfs_print_leaf@@Base+0x134>
   2529c:	cmp	r6, #184	; 0xb8
   2529e:	bhi.w	2543e <btrfs_print_leaf@@Base+0x41e>
   252a2:	cmp	r6, #167	; 0xa7
   252a4:	bhi.n	2534c <btrfs_print_leaf@@Base+0x32c>
   252a6:	cmp	r6, #96	; 0x60
   252a8:	beq.w	253ca <btrfs_print_leaf@@Base+0x3aa>
   252ac:	bhi.w	253ec <btrfs_print_leaf@@Base+0x3cc>
   252b0:	cmp	r6, #13
   252b2:	beq.w	25936 <btrfs_print_leaf@@Base+0x916>
   252b6:	bhi.n	253a0 <btrfs_print_leaf@@Base+0x380>
   252b8:	cmp	r6, #1
   252ba:	beq.w	25536 <btrfs_print_leaf@@Base+0x516>
   252be:	cmp	r6, #12
   252c0:	bne.n	25288 <btrfs_print_leaf@@Base+0x268>
   252c2:	ldr.w	r3, [pc, #2788]	; 25da8 <btrfs_print_leaf@@Base+0xd88>
   252c6:	add	r6, sp, #940	; 0x3ac
   252c8:	movs	r5, #0
   252ca:	add	r3, pc
   252cc:	vmov	s17, r3
   252d0:	b.n	258d2 <btrfs_print_leaf@@Base+0x8b2>
   252d2:	subs	r6, #228	; 0xe4
   252d4:	cmp	r6, #25
   252d6:	bhi.n	25288 <btrfs_print_leaf@@Base+0x268>
   252d8:	add	r3, pc, #8	; (adr r3, 252e4 <btrfs_print_leaf@@Base+0x2c4>)
   252da:	ldr.w	r2, [r3, r6, lsl #2]
   252de:	add	r3, r2
   252e0:	bx	r3
   252e2:	nop
   252e4:	lsrs	r1, r7, #19
   252e6:	movs	r0, r0
   252e8:			; <UNDEFINED> instruction: 0xffa5ffff
   252ec:			; <UNDEFINED> instruction: 0xffa5ffff
   252f0:			; <UNDEFINED> instruction: 0xffa5ffff
   252f4:			; <UNDEFINED> instruction: 0xffa5ffff
   252f8:			; <UNDEFINED> instruction: 0xffa5ffff
   252fc:			; <UNDEFINED> instruction: 0xffa5ffff
   25300:			; <UNDEFINED> instruction: 0xffa5ffff
   25304:			; <UNDEFINED> instruction: 0xffa5ffff
   25308:			; <UNDEFINED> instruction: 0xffa5ffff
   2530c:			; <UNDEFINED> instruction: 0xffa5ffff
   25310:			; <UNDEFINED> instruction: 0xffa5ffff
   25314:	lsrs	r7, r2, #21
   25316:	movs	r0, r0
   25318:			; <UNDEFINED> instruction: 0xffa5ffff
   2531c:	lsrs	r1, r7, #23
   2531e:	movs	r0, r0
   25320:			; <UNDEFINED> instruction: 0xffa5ffff
   25324:	lsrs	r7, r6, #24
   25326:	movs	r0, r0
   25328:			; <UNDEFINED> instruction: 0xffa5ffff
   2532c:			; <UNDEFINED> instruction: 0xffa5ffff
   25330:			; <UNDEFINED> instruction: 0xffa5ffff
   25334:	lsrs	r3, r5, #30
   25336:	movs	r0, r0
   25338:	lsrs	r7, r7, #26
   2533a:	movs	r0, r0
   2533c:			; <UNDEFINED> instruction: 0xffa5ffff
   25340:	lsrs	r5, r5, #25
   25342:	movs	r0, r0
   25344:	lsrs	r5, r5, #25
   25346:	movs	r0, r0
   25348:	lsrs	r7, r5, #26
   2534a:	movs	r0, r0
   2534c:	subs	r6, #168	; 0xa8
   2534e:	cmp	r6, #16
   25350:	bhi.n	25288 <btrfs_print_leaf@@Base+0x268>
   25352:	add	r3, pc, #8	; (adr r3, 2535c <btrfs_print_leaf@@Base+0x33c>)
   25354:	ldr.w	r2, [r3, r6, lsl #2]
   25358:	add	r3, r2
   2535a:	bx	r3
   2535c:	lsrs	r1, r4, #3
   2535e:	movs	r0, r0
   25360:	lsrs	r7, r5, #3
   25362:	movs	r0, r0
   25364:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25368:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2536c:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25370:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25374:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25378:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2537c:	lsrs	r3, r6, #3
   2537e:	movs	r0, r0
   25380:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25384:	lsrs	r3, r0, #4
   25386:	movs	r0, r0
   25388:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2538c:	lsrs	r7, r2, #5
   2538e:	movs	r0, r0
   25390:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   25394:	lsrs	r3, r7, #3
   25396:	movs	r0, r0
   25398:	vminnm.f32	<illegal reg q7.5>, <illegal reg q14.5>, <illegal reg q15.5>
   2539c:	lsrs	r7, r0, #5
   2539e:	movs	r0, r0
   253a0:	cmp	r6, #60	; 0x3c
   253a2:	beq.w	25a38 <btrfs_print_leaf@@Base+0xa18>
   253a6:	bhi.n	253be <btrfs_print_leaf@@Base+0x39e>
   253a8:	cmp	r6, #24
   253aa:	beq.n	253ca <btrfs_print_leaf@@Base+0x3aa>
   253ac:	cmp	r6, #48	; 0x30
   253ae:	bne.w	25288 <btrfs_print_leaf@@Base+0x268>
   253b2:	ldr.w	r0, [pc, #2552]	; 25dac <btrfs_print_leaf@@Base+0xd8c>
   253b6:	add	r0, pc
   253b8:	blx	8618 <puts@plt+0x4>
   253bc:	b.n	25288 <btrfs_print_leaf@@Base+0x268>
   253be:	cmp	r6, #72	; 0x48
   253c0:	beq.w	25a38 <btrfs_print_leaf@@Base+0xa18>
   253c4:	cmp	r6, #84	; 0x54
   253c6:	bne.w	25288 <btrfs_print_leaf@@Base+0x268>
   253ca:	ldr.w	r3, [pc, #2532]	; 25db0 <btrfs_print_leaf@@Base+0xd90>
   253ce:	movs	r6, #0
   253d0:	add	r3, pc
   253d2:	vmov	s17, r3
   253d6:	ldr.w	r3, [pc, #2524]	; 25db4 <btrfs_print_leaf@@Base+0xd94>
   253da:	add	r3, pc
   253dc:	vmov	s18, r3
   253e0:	ldr.w	r3, [pc, #2516]	; 25db8 <btrfs_print_leaf@@Base+0xd98>
   253e4:	add	r3, pc
   253e6:	vmov	s19, r3
   253ea:	b.n	25a28 <btrfs_print_leaf@@Base+0xa08>
   253ec:	cmp	r6, #132	; 0x84
   253ee:	beq.w	25a52 <btrfs_print_leaf@@Base+0xa32>
   253f2:	bhi.n	25422 <btrfs_print_leaf@@Base+0x402>
   253f4:	cmp	r6, #120	; 0x78
   253f6:	beq.w	25cba <btrfs_print_leaf@@Base+0xc9a>
   253fa:	cmp	r6, #128	; 0x80
   253fc:	beq.w	25cc2 <btrfs_print_leaf@@Base+0xca2>
   25400:	cmp	r6, #108	; 0x6c
   25402:	bne.w	25288 <btrfs_print_leaf@@Base+0x268>
   25406:	add.w	r4, fp, r7
   2540a:	add	r0, sp, #940	; 0x3ac
   2540c:	ldrb	r3, [r4, #16]
   2540e:	ldrb	r5, [r4, #20]
   25410:	cmp	r3, #3
   25412:	bhi.w	25ec4 <btrfs_print_leaf@@Base+0xea4>
   25416:	tbh	[pc, r3, lsl #1]
   2541a:	lsls	r6, r5, #17
   2541c:	lsls	r3, r3, #18
   2541e:	lsls	r6, r3, #18
   25420:	lsls	r1, r4, #18
   25422:	cmp	r6, #144	; 0x90
   25424:	beq.w	25c34 <btrfs_print_leaf@@Base+0xc14>
   25428:	cmp	r6, #156	; 0x9c
   2542a:	bne.w	25288 <btrfs_print_leaf@@Base+0x268>
   2542e:	ldr.w	r2, [pc, #2444]	; 25dbc <btrfs_print_leaf@@Base+0xd9c>
   25432:	add	r2, pc
   25434:	ldr	r1, [sp, #80]	; 0x50
   25436:	mov	r0, r9
   25438:	bl	245a8 <btrfs_destroy_delayed_refs@@Base+0x2c4>
   2543c:	b.n	25288 <btrfs_print_leaf@@Base+0x268>
   2543e:	cmp	r6, #253	; 0xfd
   25440:	bhi.w	25288 <btrfs_print_leaf@@Base+0x268>
   25444:	cmp	r6, #227	; 0xe3
   25446:	bhi.w	252d2 <btrfs_print_leaf@@Base+0x2b2>
   2544a:	cmp	r6, #204	; 0xcc
   2544c:	bhi.n	2549c <btrfs_print_leaf@@Base+0x47c>
   2544e:	cmp	r6, #191	; 0xbf
   25450:	bls.w	25288 <btrfs_print_leaf@@Base+0x268>
   25454:	subs	r6, #192	; 0xc0
   25456:	cmp	r6, #12
   25458:	bhi.w	25288 <btrfs_print_leaf@@Base+0x268>
   2545c:	add	r3, pc, #8	; (adr r3, 25468 <btrfs_print_leaf@@Base+0x448>)
   2545e:	ldr.w	r2, [r3, r6, lsl #2]
   25462:	add	r3, r2
   25464:	bx	r3
   25466:	nop
   25468:	lsrs	r5, r2, #12
   2546a:	movs	r0, r0
   2546c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25470:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25474:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25478:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   2547c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25480:	lsrs	r7, r1, #13
   25482:	movs	r0, r0
   25484:	lsrs	r5, r4, #13
   25486:	movs	r0, r0
   25488:	lsrs	r5, r5, #13
   2548a:	movs	r0, r0
   2548c:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25490:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25494:	mcr2	15, 1, pc, cr1, cr15, {7}	; <UNPREDICTABLE>
   25498:	lsrs	r1, r0, #14
   2549a:	movs	r0, r0
   2549c:	cmp	r6, #216	; 0xd8
   2549e:	bne.w	25288 <btrfs_print_leaf@@Base+0x268>
   254a2:	add	r4, sp, #740	; 0x2e4
   254a4:	add.w	r2, r8, #167	; 0xa7
   254a8:	add	r5, sp, #772	; 0x304
   254aa:	movs	r3, #16
   254ac:	mov	r1, r4
   254ae:	mov	r0, r9
   254b0:	bl	1731a <read_extent_buffer@@Base>
   254b4:	mov	r0, r4
   254b6:	add	r4, sp, #756	; 0x2f4
   254b8:	add	r6, sp, #940	; 0x3ac
   254ba:	mov	r1, r5
   254bc:	blx	8394 <uuid_unparse@plt>
   254c0:	add.w	r2, r8, #183	; 0xb7
   254c4:	movs	r3, #16
   254c6:	mov	r1, r4
   254c8:	mov	r0, r9
   254ca:	bl	1731a <read_extent_buffer@@Base>
   254ce:	mov	r1, r6
   254d0:	mov	r0, r4
   254d2:	blx	8394 <uuid_unparse@plt>
   254d6:	add.w	r3, fp, r7
   254da:	strd	r5, r6, [sp, #68]	; 0x44
   254de:	movs	r0, #1
   254e0:	ldrb.w	r2, [r3, #65]	; 0x41
   254e4:	str	r2, [sp, #64]	; 0x40
   254e6:	ldrb.w	r2, [r3, #64]	; 0x40
   254ea:	str	r2, [sp, #60]	; 0x3c
   254ec:	ldr	r2, [r3, #60]	; 0x3c
   254ee:	str	r2, [sp, #56]	; 0x38
   254f0:	ldr	r1, [r3, #52]	; 0x34
   254f2:	ldr	r2, [r3, #56]	; 0x38
   254f4:	strd	r1, r2, [sp, #48]	; 0x30
   254f8:	ldr	r1, [r3, #44]	; 0x2c
   254fa:	ldr	r2, [r3, #48]	; 0x30
   254fc:	strd	r1, r2, [sp, #40]	; 0x28
   25500:	ldr	r1, [r3, #36]	; 0x24
   25502:	ldr	r2, [r3, #40]	; 0x28
   25504:	strd	r1, r2, [sp, #32]
   25508:	ldr	r2, [r3, #32]
   2550a:	str	r2, [sp, #24]
   2550c:	ldr	r2, [r3, #28]
   2550e:	str	r2, [sp, #20]
   25510:	ldr	r2, [r3, #24]
   25512:	str	r2, [sp, #16]
   25514:	ldr	r1, [r3, #16]
   25516:	ldr	r2, [r3, #20]
   25518:	strd	r1, r2, [sp, #8]
   2551c:	ldr	r1, [r3, #8]
   2551e:	ldr	r2, [r3, #12]
   25520:	strd	r1, r2, [sp]
   25524:	ldr.w	r1, [pc, #2200]	; 25dc0 <btrfs_print_leaf@@Base+0xda0>
   25528:	ldr.w	r2, [fp, r7]
   2552c:	ldr	r3, [r3, #4]
   2552e:	add	r1, pc
   25530:	blx	87f4 <__printf_chk@plt+0x4>
   25534:	b.n	25288 <btrfs_print_leaf@@Base+0x268>
   25536:	add	r3, sp, #940	; 0x3ac
   25538:	add	fp, r7
   2553a:	mov.w	r2, #256	; 0x100
   2553e:	movs	r1, #0
   25540:	mov	r0, r3
   25542:	movs	r7, #0
   25544:	blx	8780 <memset@plt+0x4>
   25548:	ldr.w	r5, [fp, #64]	; 0x40
   2554c:	ldr.w	r4, [fp, #68]	; 0x44
   25550:	and.w	r2, r5, #1
   25554:	strd	r2, r7, [sp, #112]	; 0x70
   25558:	ldrd	r1, r2, [sp, #112]	; 0x70
   2555c:	orrs	r2, r1
   2555e:	beq.n	25570 <btrfs_print_leaf@@Base+0x550>
   25560:	ldr.w	r1, [pc, #2144]	; 25dc4 <btrfs_print_leaf@@Base+0xda4>
   25564:	mov.w	r2, #256	; 0x100
   25568:	mov	r6, r7
   2556a:	add	r1, pc
   2556c:	blx	874c <__strcat_chk@plt>
   25570:	and.w	r3, r5, #2
   25574:	str	r3, [sp, #120]	; 0x78
   25576:	movs	r3, #0
   25578:	str	r3, [sp, #124]	; 0x7c
   2557a:	ldrd	r2, r3, [sp, #120]	; 0x78
   2557e:	orrs	r3, r2
   25580:	beq.n	255a6 <btrfs_print_leaf@@Base+0x586>
   25582:	cbnz	r6, 25594 <btrfs_print_leaf@@Base+0x574>
   25584:	ldr.w	r1, [pc, #2112]	; 25dc8 <btrfs_print_leaf@@Base+0xda8>
   25588:	add	r0, sp, #940	; 0x3ac
   2558a:	mov.w	r2, #256	; 0x100
   2558e:	add	r1, pc
   25590:	blx	874c <__strcat_chk@plt>
   25594:	ldr.w	r1, [pc, #2100]	; 25dcc <btrfs_print_leaf@@Base+0xdac>
   25598:	add	r0, sp, #940	; 0x3ac
   2559a:	mov.w	r2, #256	; 0x100
   2559e:	movs	r6, #0
   255a0:	add	r1, pc
   255a2:	blx	874c <__strcat_chk@plt>
   255a6:	and.w	r3, r5, #4
   255aa:	str	r3, [sp, #128]	; 0x80
   255ac:	movs	r3, #0
   255ae:	str	r3, [sp, #132]	; 0x84
   255b0:	ldrd	r2, r3, [sp, #128]	; 0x80
   255b4:	orrs	r3, r2
   255b6:	beq.n	255dc <btrfs_print_leaf@@Base+0x5bc>
   255b8:	cbnz	r6, 255ca <btrfs_print_leaf@@Base+0x5aa>
   255ba:	ldr.w	r1, [pc, #2068]	; 25dd0 <btrfs_print_leaf@@Base+0xdb0>
   255be:	add	r0, sp, #940	; 0x3ac
   255c0:	mov.w	r2, #256	; 0x100
   255c4:	add	r1, pc
   255c6:	blx	874c <__strcat_chk@plt>
   255ca:	ldr.w	r1, [pc, #2056]	; 25dd4 <btrfs_print_leaf@@Base+0xdb4>
   255ce:	add	r0, sp, #940	; 0x3ac
   255d0:	mov.w	r2, #256	; 0x100
   255d4:	movs	r6, #0
   255d6:	add	r1, pc
   255d8:	blx	874c <__strcat_chk@plt>
   255dc:	and.w	r3, r5, #8
   255e0:	str	r3, [sp, #136]	; 0x88
   255e2:	movs	r3, #0
   255e4:	str	r3, [sp, #140]	; 0x8c
   255e6:	ldrd	r2, r3, [sp, #136]	; 0x88
   255ea:	orrs	r3, r2
   255ec:	beq.n	25612 <btrfs_print_leaf@@Base+0x5f2>
   255ee:	cbnz	r6, 25600 <btrfs_print_leaf@@Base+0x5e0>
   255f0:	ldr.w	r1, [pc, #2020]	; 25dd8 <btrfs_print_leaf@@Base+0xdb8>
   255f4:	add	r0, sp, #940	; 0x3ac
   255f6:	mov.w	r2, #256	; 0x100
   255fa:	add	r1, pc
   255fc:	blx	874c <__strcat_chk@plt>
   25600:	ldr.w	r1, [pc, #2008]	; 25ddc <btrfs_print_leaf@@Base+0xdbc>
   25604:	add	r0, sp, #940	; 0x3ac
   25606:	mov.w	r2, #256	; 0x100
   2560a:	movs	r6, #0
   2560c:	add	r1, pc
   2560e:	blx	874c <__strcat_chk@plt>
   25612:	and.w	r3, r5, #16
   25616:	str	r3, [sp, #144]	; 0x90
   25618:	movs	r3, #0
   2561a:	str	r3, [sp, #148]	; 0x94
   2561c:	ldrd	r2, r3, [sp, #144]	; 0x90
   25620:	orrs	r3, r2
   25622:	beq.n	25648 <btrfs_print_leaf@@Base+0x628>
   25624:	cbnz	r6, 25636 <btrfs_print_leaf@@Base+0x616>
   25626:	ldr.w	r1, [pc, #1976]	; 25de0 <btrfs_print_leaf@@Base+0xdc0>
   2562a:	add	r0, sp, #940	; 0x3ac
   2562c:	mov.w	r2, #256	; 0x100
   25630:	add	r1, pc
   25632:	blx	874c <__strcat_chk@plt>
   25636:	ldr.w	r1, [pc, #1964]	; 25de4 <btrfs_print_leaf@@Base+0xdc4>
   2563a:	add	r0, sp, #940	; 0x3ac
   2563c:	mov.w	r2, #256	; 0x100
   25640:	movs	r6, #0
   25642:	add	r1, pc
   25644:	blx	874c <__strcat_chk@plt>
   25648:	and.w	r3, r5, #32
   2564c:	str	r3, [sp, #152]	; 0x98
   2564e:	movs	r3, #0
   25650:	str	r3, [sp, #156]	; 0x9c
   25652:	ldrd	r2, r3, [sp, #152]	; 0x98
   25656:	orrs	r3, r2
   25658:	beq.n	2567e <btrfs_print_leaf@@Base+0x65e>
   2565a:	cbnz	r6, 2566c <btrfs_print_leaf@@Base+0x64c>
   2565c:	ldr.w	r1, [pc, #1928]	; 25de8 <btrfs_print_leaf@@Base+0xdc8>
   25660:	add	r0, sp, #940	; 0x3ac
   25662:	mov.w	r2, #256	; 0x100
   25666:	add	r1, pc
   25668:	blx	874c <__strcat_chk@plt>
   2566c:	ldr.w	r1, [pc, #1916]	; 25dec <btrfs_print_leaf@@Base+0xdcc>
   25670:	add	r0, sp, #940	; 0x3ac
   25672:	mov.w	r2, #256	; 0x100
   25676:	movs	r6, #0
   25678:	add	r1, pc
   2567a:	blx	874c <__strcat_chk@plt>
   2567e:	and.w	r3, r5, #64	; 0x40
   25682:	str	r3, [sp, #160]	; 0xa0
   25684:	movs	r3, #0
   25686:	str	r3, [sp, #164]	; 0xa4
   25688:	ldrd	r2, r3, [sp, #160]	; 0xa0
   2568c:	orrs	r3, r2
   2568e:	beq.n	256b4 <btrfs_print_leaf@@Base+0x694>
   25690:	cbnz	r6, 256a2 <btrfs_print_leaf@@Base+0x682>
   25692:	ldr.w	r1, [pc, #1884]	; 25df0 <btrfs_print_leaf@@Base+0xdd0>
   25696:	add	r0, sp, #940	; 0x3ac
   25698:	mov.w	r2, #256	; 0x100
   2569c:	add	r1, pc
   2569e:	blx	874c <__strcat_chk@plt>
   256a2:	ldr.w	r1, [pc, #1872]	; 25df4 <btrfs_print_leaf@@Base+0xdd4>
   256a6:	add	r0, sp, #940	; 0x3ac
   256a8:	mov.w	r2, #256	; 0x100
   256ac:	movs	r6, #0
   256ae:	add	r1, pc
   256b0:	blx	874c <__strcat_chk@plt>
   256b4:	and.w	r3, r5, #128	; 0x80
   256b8:	str	r3, [sp, #168]	; 0xa8
   256ba:	movs	r3, #0
   256bc:	str	r3, [sp, #172]	; 0xac
   256be:	ldrd	r2, r3, [sp, #168]	; 0xa8
   256c2:	orrs	r3, r2
   256c4:	beq.n	256ea <btrfs_print_leaf@@Base+0x6ca>
   256c6:	cbnz	r6, 256d8 <btrfs_print_leaf@@Base+0x6b8>
   256c8:	ldr.w	r1, [pc, #1836]	; 25df8 <btrfs_print_leaf@@Base+0xdd8>
   256cc:	add	r0, sp, #940	; 0x3ac
   256ce:	mov.w	r2, #256	; 0x100
   256d2:	add	r1, pc
   256d4:	blx	874c <__strcat_chk@plt>
   256d8:	ldr.w	r1, [pc, #1824]	; 25dfc <btrfs_print_leaf@@Base+0xddc>
   256dc:	add	r0, sp, #940	; 0x3ac
   256de:	mov.w	r2, #256	; 0x100
   256e2:	movs	r6, #0
   256e4:	add	r1, pc
   256e6:	blx	874c <__strcat_chk@plt>
   256ea:	and.w	r3, r5, #256	; 0x100
   256ee:	str	r3, [sp, #176]	; 0xb0
   256f0:	movs	r3, #0
   256f2:	str	r3, [sp, #180]	; 0xb4
   256f4:	ldrd	r2, r3, [sp, #176]	; 0xb0
   256f8:	orrs	r3, r2
   256fa:	beq.n	25720 <btrfs_print_leaf@@Base+0x700>
   256fc:	cbnz	r6, 2570e <btrfs_print_leaf@@Base+0x6ee>
   256fe:	ldr.w	r1, [pc, #1792]	; 25e00 <btrfs_print_leaf@@Base+0xde0>
   25702:	add	r0, sp, #940	; 0x3ac
   25704:	mov.w	r2, #256	; 0x100
   25708:	add	r1, pc
   2570a:	blx	874c <__strcat_chk@plt>
   2570e:	ldr.w	r1, [pc, #1780]	; 25e04 <btrfs_print_leaf@@Base+0xde4>
   25712:	add	r0, sp, #940	; 0x3ac
   25714:	mov.w	r2, #256	; 0x100
   25718:	movs	r6, #0
   2571a:	add	r1, pc
   2571c:	blx	874c <__strcat_chk@plt>
   25720:	and.w	r3, r5, #512	; 0x200
   25724:	str	r3, [sp, #184]	; 0xb8
   25726:	movs	r3, #0
   25728:	str	r3, [sp, #188]	; 0xbc
   2572a:	ldrd	r2, r3, [sp, #184]	; 0xb8
   2572e:	orrs	r3, r2
   25730:	beq.n	25756 <btrfs_print_leaf@@Base+0x736>
   25732:	cbnz	r6, 25744 <btrfs_print_leaf@@Base+0x724>
   25734:	ldr.w	r1, [pc, #1744]	; 25e08 <btrfs_print_leaf@@Base+0xde8>
   25738:	add	r0, sp, #940	; 0x3ac
   2573a:	mov.w	r2, #256	; 0x100
   2573e:	add	r1, pc
   25740:	blx	874c <__strcat_chk@plt>
   25744:	ldr.w	r1, [pc, #1732]	; 25e0c <btrfs_print_leaf@@Base+0xdec>
   25748:	add	r0, sp, #940	; 0x3ac
   2574a:	mov.w	r2, #256	; 0x100
   2574e:	movs	r6, #0
   25750:	add	r1, pc
   25752:	blx	874c <__strcat_chk@plt>
   25756:	and.w	r3, r5, #1024	; 0x400
   2575a:	str	r3, [sp, #192]	; 0xc0
   2575c:	movs	r3, #0
   2575e:	str	r3, [sp, #196]	; 0xc4
   25760:	ldrd	r2, r3, [sp, #192]	; 0xc0
   25764:	orrs	r3, r2
   25766:	beq.n	2578c <btrfs_print_leaf@@Base+0x76c>
   25768:	cbnz	r6, 2577a <btrfs_print_leaf@@Base+0x75a>
   2576a:	ldr.w	r1, [pc, #1700]	; 25e10 <btrfs_print_leaf@@Base+0xdf0>
   2576e:	add	r0, sp, #940	; 0x3ac
   25770:	mov.w	r2, #256	; 0x100
   25774:	add	r1, pc
   25776:	blx	874c <__strcat_chk@plt>
   2577a:	ldr.w	r1, [pc, #1688]	; 25e14 <btrfs_print_leaf@@Base+0xdf4>
   2577e:	add	r0, sp, #940	; 0x3ac
   25780:	mov.w	r2, #256	; 0x100
   25784:	movs	r6, #0
   25786:	add	r1, pc
   25788:	blx	874c <__strcat_chk@plt>
   2578c:	and.w	r3, r5, #2048	; 0x800
   25790:	str	r3, [sp, #200]	; 0xc8
   25792:	movs	r3, #0
   25794:	str	r3, [sp, #204]	; 0xcc
   25796:	ldrd	r2, r3, [sp, #200]	; 0xc8
   2579a:	add	r0, sp, #940	; 0x3ac
   2579c:	orrs	r3, r2
   2579e:	beq.n	2587e <btrfs_print_leaf@@Base+0x85e>
   257a0:	cbnz	r6, 257b0 <btrfs_print_leaf@@Base+0x790>
   257a2:	ldr.w	r1, [pc, #1652]	; 25e18 <btrfs_print_leaf@@Base+0xdf8>
   257a6:	mov.w	r2, #256	; 0x100
   257aa:	add	r1, pc
   257ac:	blx	874c <__strcat_chk@plt>
   257b0:	ldr.w	r1, [pc, #1640]	; 25e1c <btrfs_print_leaf@@Base+0xdfc>
   257b4:	add	r0, sp, #940	; 0x3ac
   257b6:	mov.w	r2, #256	; 0x100
   257ba:	add	r1, pc
   257bc:	blx	874c <__strcat_chk@plt>
   257c0:	strd	r5, r4, [sp, #64]	; 0x40
   257c4:	add	r3, sp, #940	; 0x3ac
   257c6:	str	r3, [sp, #72]	; 0x48
   257c8:	movs	r0, #1
   257ca:	ldr.w	r2, [fp, #72]	; 0x48
   257ce:	ldr.w	r3, [fp, #76]	; 0x4c
   257d2:	ldr.w	r1, [pc, #1612]	; 25e20 <btrfs_print_leaf@@Base+0xe00>
   257d6:	strd	r2, r3, [sp, #56]	; 0x38
   257da:	add	r1, pc
   257dc:	ldr.w	r2, [fp, #56]	; 0x38
   257e0:	ldr.w	r3, [fp, #60]	; 0x3c
   257e4:	strd	r2, r3, [sp, #48]	; 0x30
   257e8:	ldr.w	r3, [fp, #48]	; 0x30
   257ec:	str	r3, [sp, #44]	; 0x2c
   257ee:	ldr.w	r3, [fp, #44]	; 0x2c
   257f2:	str	r3, [sp, #40]	; 0x28
   257f4:	ldr.w	r3, [fp, #40]	; 0x28
   257f8:	str	r3, [sp, #36]	; 0x24
   257fa:	ldr.w	r3, [fp, #52]	; 0x34
   257fe:	str	r3, [sp, #32]
   25800:	ldr.w	r2, [fp, #32]
   25804:	ldr.w	r3, [fp, #36]	; 0x24
   25808:	strd	r2, r3, [sp, #24]
   2580c:	ldr.w	r2, [fp, #24]
   25810:	ldr.w	r3, [fp, #28]
   25814:	strd	r2, r3, [sp, #16]
   25818:	ldr.w	r2, [fp, #16]
   2581c:	ldr.w	r3, [fp, #20]
   25820:	strd	r2, r3, [sp, #8]
   25824:	ldr.w	r2, [fp, #8]
   25828:	ldr.w	r3, [fp, #12]
   2582c:	strd	r2, r3, [sp]
   25830:	ldr.w	r3, [fp, #4]
   25834:	ldr.w	r2, [fp]
   25838:	blx	87f4 <__printf_chk@plt+0x4>
   2583c:	ldr.w	r2, [pc, #1508]	; 25e24 <btrfs_print_leaf@@Base+0xe04>
   25840:	add.w	r1, r8, #213	; 0xd5
   25844:	mov	r0, r9
   25846:	add	r2, pc
   25848:	bl	246ac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2584c:	ldr.w	r2, [pc, #1496]	; 25e28 <btrfs_print_leaf@@Base+0xe08>
   25850:	add.w	r1, r8, #225	; 0xe1
   25854:	mov	r0, r9
   25856:	add	r2, pc
   25858:	bl	246ac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2585c:	ldr.w	r2, [pc, #1484]	; 25e2c <btrfs_print_leaf@@Base+0xe0c>
   25860:	add.w	r1, r8, #237	; 0xed
   25864:	mov	r0, r9
   25866:	add	r2, pc
   25868:	bl	246ac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2586c:	ldr.w	r2, [pc, #1472]	; 25e30 <btrfs_print_leaf@@Base+0xe10>
   25870:	add.w	r1, r8, #249	; 0xf9
   25874:	mov	r0, r9
   25876:	add	r2, pc
   25878:	bl	246ac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   2587c:	b.n	25288 <btrfs_print_leaf@@Base+0x268>
   2587e:	cmp	r6, #0
   25880:	beq.n	257c0 <btrfs_print_leaf@@Base+0x7a0>
   25882:	ldr.w	r1, [pc, #1456]	; 25e34 <btrfs_print_leaf@@Base+0xe14>
   25886:	mov.w	r2, #256	; 0x100
   2588a:	add	r1, pc
   2588c:	b.n	257bc <btrfs_print_leaf@@Base+0x79c>
   2588e:	add.w	r3, fp, r7
   25892:	mov	r1, r6
   25894:	mov	r0, r9
   25896:	ldrh	r4, [r3, #8]
   25898:	ldr	r2, [r3, #0]
   2589a:	cmp	r4, #255	; 0xff
   2589c:	ldr.w	r8, [r3, #4]
   258a0:	mov	r3, r4
   258a2:	vmov	s16, r2
   258a6:	it	cs
   258a8:	movcs	r3, #255	; 0xff
   258aa:	add.w	r2, r7, #10
   258ae:	str	r3, [sp, #96]	; 0x60
   258b0:	bl	1731a <read_extent_buffer@@Base>
   258b4:	ldr	r3, [sp, #96]	; 0x60
   258b6:	vmov	r2, s16
   258ba:	movs	r0, #1
   258bc:	vmov	r1, s17
   258c0:	strd	r4, r3, [sp]
   258c4:	mov	r3, r8
   258c6:	str	r6, [sp, #8]
   258c8:	adds	r4, #10
   258ca:	blx	87f4 <__printf_chk@plt+0x4>
   258ce:	add	r7, r4
   258d0:	add	r5, r4
   258d2:	ldr	r3, [sp, #84]	; 0x54
   258d4:	cmp	r3, r5
   258d6:	bhi.n	2588e <btrfs_print_leaf@@Base+0x86e>
   258d8:	b.n	25288 <btrfs_print_leaf@@Base+0x268>
   258da:	add.w	r3, fp, r7
   258de:	mov	r1, r6
   258e0:	mov	r0, r9
   258e2:	ldr	r2, [r3, #8]
   258e4:	ldrh	r4, [r3, #16]
   258e6:	ldr.w	r8, [r3, #12]
   258ea:	vmov	s16, r2
   258ee:	ldr	r2, [r3, #0]
   258f0:	ldr	r3, [r3, #4]
   258f2:	cmp	r4, #255	; 0xff
   258f4:	str	r2, [sp, #96]	; 0x60
   258f6:	add.w	r2, r7, #18
   258fa:	str	r3, [sp, #88]	; 0x58
   258fc:	mov	r3, r4
   258fe:	it	cs
   25900:	movcs	r3, #255	; 0xff
   25902:	str	r3, [sp, #244]	; 0xf4
   25904:	bl	1731a <read_extent_buffer@@Base>
   25908:	ldr	r3, [sp, #244]	; 0xf4
   2590a:	vmov	r2, s16
   2590e:	movs	r0, #1
   25910:	vmov	r1, s17
   25914:	strd	r4, r3, [sp, #8]
   25918:	adds	r4, #18
   2591a:	ldr	r3, [sp, #96]	; 0x60
   2591c:	add	r7, r4
   2591e:	str	r6, [sp, #16]
   25920:	add	r5, r4
   25922:	str	r3, [sp, #0]
   25924:	ldr	r3, [sp, #88]	; 0x58
   25926:	str	r3, [sp, #4]
   25928:	mov	r3, r8
   2592a:	blx	87f4 <__printf_chk@plt+0x4>
   2592e:	ldr	r3, [sp, #84]	; 0x54
   25930:	cmp	r3, r5
   25932:	bhi.n	258da <btrfs_print_leaf@@Base+0x8ba>
   25934:	b.n	25288 <btrfs_print_leaf@@Base+0x268>
   25936:	ldr.w	r3, [pc, #1280]	; 25e38 <btrfs_print_leaf@@Base+0xe18>
   2593a:	add	r6, sp, #940	; 0x3ac
   2593c:	movs	r5, #0
   2593e:	add	r3, pc
   25940:	vmov	s17, r3
   25944:	b.n	2592e <btrfs_print_leaf@@Base+0x90e>
   25946:	add	r4, sp, #272	; 0x110
   25948:	movs	r3, #17
   2594a:	mov	r2, r7
   2594c:	mov	r0, r9
   2594e:	mov	r1, r4
   25950:	add.w	r5, fp, r7
   25954:	bl	1731a <read_extent_buffer@@Base>
   25958:	vmov	r1, s17
   2595c:	movs	r0, #1
   2595e:	blx	87f4 <__printf_chk@plt+0x4>
   25962:	mov	r0, r4
   25964:	bl	24c24 <btrfs_print_key@@Base>
   25968:	vmov	r1, s18
   2596c:	movs	r0, #1
   2596e:	blx	87f4 <__printf_chk@plt+0x4>
   25972:	ldrb	r3, [r5, #29]
   25974:	cmp	r3, #8
   25976:	bhi.n	25a30 <btrfs_print_leaf@@Base+0xa10>
   25978:	ldr.w	r2, [pc, #1216]	; 25e3c <btrfs_print_leaf@@Base+0xe1c>
   2597c:	add	r2, pc
   2597e:	add.w	r2, r2, r3, lsl #2
   25982:	ldr.w	r2, [r2, #1024]	; 0x400
   25986:	cmp	r2, #0
   25988:	beq.n	25a30 <btrfs_print_leaf@@Base+0xa10>
   2598a:	ldr.w	r1, [pc, #1204]	; 25e40 <btrfs_print_leaf@@Base+0xe20>
   2598e:	add	r1, pc
   25990:	movs	r0, #1
   25992:	add.w	r8, sp, #940	; 0x3ac
   25996:	blx	87f4 <__printf_chk@plt+0x4>
   2599a:	movs	r0, #10
   2599c:	blx	8790 <putchar@plt+0x4>
   259a0:	ldrh.w	r4, [r5, #27]
   259a4:	ldrh.w	r3, [r5, #25]
   259a8:	mov	r1, r8
   259aa:	cmp	r4, #255	; 0xff
   259ac:	mov	r0, r9
   259ae:	str	r3, [sp, #96]	; 0x60
   259b0:	mov	r3, r4
   259b2:	it	cs
   259b4:	movcs	r3, #255	; 0xff
   259b6:	vmov	s16, r3
   259ba:	add.w	r3, r7, #30
   259be:	str	r3, [sp, #88]	; 0x58
   259c0:	ldr	r2, [sp, #88]	; 0x58
   259c2:	vmov	r3, s16
   259c6:	bl	1731a <read_extent_buffer@@Base>
   259ca:	ldr.w	r2, [r5, #17]!
   259ce:	ldr	r3, [sp, #96]	; 0x60
   259d0:	movs	r0, #1
   259d2:	ldr.w	r1, [pc, #1136]	; 25e44 <btrfs_print_leaf@@Base+0xe24>
   259d6:	str	r4, [sp, #4]
   259d8:	add	r1, pc
   259da:	str	r3, [sp, #0]
   259dc:	ldr	r3, [r5, #4]
   259de:	blx	87f4 <__printf_chk@plt+0x4>
   259e2:	ldr.w	r1, [pc, #1124]	; 25e48 <btrfs_print_leaf@@Base+0xe28>
   259e6:	mov	r3, r8
   259e8:	vmov	r2, s16
   259ec:	add	r1, pc
   259ee:	movs	r0, #1
   259f0:	blx	87f4 <__printf_chk@plt+0x4>
   259f4:	ldr	r3, [sp, #96]	; 0x60
   259f6:	cbz	r3, 25a1e <btrfs_print_leaf@@Base+0x9fe>
   259f8:	cmp	r3, #255	; 0xff
   259fa:	ldr	r2, [sp, #88]	; 0x58
   259fc:	mov	r5, r3
   259fe:	mov	r1, r8
   25a00:	it	cs
   25a02:	movcs	r5, #255	; 0xff
   25a04:	add	r2, r4
   25a06:	mov	r3, r5
   25a08:	mov	r0, r9
   25a0a:	bl	1731a <read_extent_buffer@@Base>
   25a0e:	ldr.w	r1, [pc, #1084]	; 25e4c <btrfs_print_leaf@@Base+0xe2c>
   25a12:	mov	r3, r8
   25a14:	mov	r2, r5
   25a16:	add	r1, pc
   25a18:	movs	r0, #1
   25a1a:	blx	87f4 <__printf_chk@plt+0x4>
   25a1e:	ldr	r3, [sp, #96]	; 0x60
   25a20:	add	r4, r3
   25a22:	adds	r4, #30
   25a24:	add	r7, r4
   25a26:	add	r6, r4
   25a28:	ldr	r3, [sp, #84]	; 0x54
   25a2a:	cmp	r3, r6
   25a2c:	bhi.n	25946 <btrfs_print_leaf@@Base+0x926>
   25a2e:	b.n	25288 <btrfs_print_leaf@@Base+0x268>
   25a30:	vmov	r1, s19
   25a34:	mov	r2, r3
   25a36:	b.n	25990 <btrfs_print_leaf@@Base+0x970>
   25a38:	ldr.w	r3, [sl, #17]
   25a3c:	ldr.w	r1, [pc, #1040]	; 25e50 <btrfs_print_leaf@@Base+0xe30>
   25a40:	add	r3, fp
   25a42:	add	r1, pc
   25a44:	ldr.w	r2, [r3, #101]!
   25a48:	ldr	r3, [r3, #4]
   25a4a:	movs	r0, #1
   25a4c:	blx	87f4 <__printf_chk@plt+0x4>
   25a50:	b.n	25288 <btrfs_print_leaf@@Base+0x268>
   25a52:	movs	r6, #0
   25a54:	movs	r2, #28
   25a56:	mov	r1, r6
   25a58:	add	r0, sp, #776	; 0x308
   25a5a:	add	r5, sp, #300	; 0x12c
   25a5c:	str	r6, [sp, #772]	; 0x304
   25a5e:	blx	8780 <memset@plt+0x4>
   25a62:	ldr.w	r3, [sl, #21]
   25a66:	ldr.w	r4, [sl, #17]
   25a6a:	movw	r2, #439	; 0x1b7
   25a6e:	mov	r1, r6
   25a70:	mov	r0, r5
   25a72:	str	r3, [sp, #84]	; 0x54
   25a74:	blx	8780 <memset@plt+0x4>
   25a78:	ldr	r3, [sp, #84]	; 0x54
   25a7a:	add.w	r2, r4, #101	; 0x65
   25a7e:	mov	r1, r5
   25a80:	mov	r0, r9
   25a82:	bl	1731a <read_extent_buffer@@Base>
   25a86:	ldr.w	r3, [r5, #208]	; 0xd0
   25a8a:	add	r7, sp, #772	; 0x304
   25a8c:	and.w	r3, r3, #1
   25a90:	strd	r3, r6, [sp, #208]	; 0xd0
   25a94:	ldrd	r2, r3, [sp, #208]	; 0xd0
   25a98:	orrs	r3, r2
   25a9a:	mov.w	r2, #32
   25a9e:	beq.w	25c2e <btrfs_print_leaf@@Base+0xc0e>
   25aa2:	ldr	r1, [pc, #944]	; (25e54 <btrfs_print_leaf@@Base+0xe34>)
   25aa4:	add	r1, pc
   25aa6:	add	r5, sp, #300	; 0x12c
   25aa8:	mov	r0, r7
   25aaa:	blx	874c <__strcat_chk@plt>
   25aae:	ldr	r1, [pc, #936]	; (25e58 <btrfs_print_leaf@@Base+0xe38>)
   25ab0:	ldr.w	r3, [r5, #216]	; 0xd8
   25ab4:	movs	r0, #1
   25ab6:	add	r1, pc
   25ab8:	str	r3, [sp, #20]
   25aba:	ldrb.w	r3, [r5, #238]	; 0xee
   25abe:	str	r3, [sp, #16]
   25ac0:	ldrd	r2, r3, [r5, #176]	; 0xb0
   25ac4:	strd	r2, r3, [sp, #8]
   25ac8:	ldrd	r2, r3, [r5, #168]	; 0xa8
   25acc:	strd	r2, r3, [sp]
   25ad0:	ldrd	r2, r3, [r5, #160]	; 0xa0
   25ad4:	blx	87f4 <__printf_chk@plt+0x4>
   25ad8:	add	r3, sp, #772	; 0x304
   25ada:	str	r3, [sp, #24]
   25adc:	movs	r0, #1
   25ade:	ldrd	r2, r3, [r5, #208]	; 0xd0
   25ae2:	ldr	r1, [pc, #888]	; (25e5c <btrfs_print_leaf@@Base+0xe3c>)
   25ae4:	strd	r2, r3, [sp, #16]
   25ae8:	add	r1, pc
   25aea:	ldrd	r2, r3, [r5, #192]	; 0xc0
   25aee:	strd	r2, r3, [sp, #8]
   25af2:	ldrd	r2, r3, [r5, #184]	; 0xb8
   25af6:	strd	r2, r3, [sp]
   25afa:	ldrd	r2, r3, [r5, #200]	; 0xc8
   25afe:	blx	87f4 <__printf_chk@plt+0x4>
   25b02:	ldrd	r0, r1, [r5, #160]	; 0xa0
   25b06:	ldr.w	r3, [r5, #243]	; 0xf3
   25b0a:	ldr.w	r2, [r5, #239]	; 0xef
   25b0e:	cmp	r1, r3
   25b10:	it	eq
   25b12:	cmpeq	r0, r2
   25b14:	bne.n	25c0c <btrfs_print_leaf@@Base+0xbec>
   25b16:	add	r2, sp, #940	; 0x3ac
   25b18:	addw	r0, sp, #547	; 0x223
   25b1c:	str	r2, [sp, #84]	; 0x54
   25b1e:	mov	r1, r2
   25b20:	blx	8394 <uuid_unparse@plt>
   25b24:	ldr	r1, [pc, #824]	; (25e60 <btrfs_print_leaf@@Base+0xe40>)
   25b26:	ldr	r2, [sp, #84]	; 0x54
   25b28:	movs	r0, #1
   25b2a:	add	r1, pc
   25b2c:	blx	87f4 <__printf_chk@plt+0x4>
   25b30:	addw	r2, sp, #563	; 0x233
   25b34:	movs	r3, #0
   25b36:	ldrb.w	r1, [r2], #1
   25b3a:	cmp	r1, #0
   25b3c:	bne.w	26336 <btrfs_print_leaf@@Base+0x1316>
   25b40:	adds	r3, #1
   25b42:	cmp	r3, #16
   25b44:	bne.n	25b36 <btrfs_print_leaf@@Base+0xb16>
   25b46:	addw	r2, sp, #579	; 0x243
   25b4a:	movs	r3, #0
   25b4c:	ldrb.w	r1, [r2], #1
   25b50:	cmp	r1, #0
   25b52:	bne.w	2631a <btrfs_print_leaf@@Base+0x12fa>
   25b56:	adds	r3, #1
   25b58:	cmp	r3, #16
   25b5a:	bne.n	25b4c <btrfs_print_leaf@@Base+0xb2c>
   25b5c:	ldr.w	r0, [sp, #595]	; 0x253
   25b60:	ldr.w	r1, [sp, #599]	; 0x257
   25b64:	orrs.w	r2, r0, r1
   25b68:	beq.n	25b9c <btrfs_print_leaf@@Base+0xb7c>
   25b6a:	ldr.w	r5, [sp, #619]	; 0x26b
   25b6e:	ldr.w	r2, [sp, #623]	; 0x26f
   25b72:	ldr.w	r3, [sp, #607]	; 0x25f
   25b76:	strd	r5, r2, [sp, #16]
   25b7a:	ldr.w	r2, [sp, #615]	; 0x267
   25b7e:	ldr.w	r5, [sp, #611]	; 0x263
   25b82:	strd	r5, r2, [sp, #8]
   25b86:	ldr.w	r2, [sp, #603]	; 0x25b
   25b8a:	strd	r2, r3, [sp]
   25b8e:	mov	r3, r1
   25b90:	ldr	r1, [pc, #720]	; (25e64 <btrfs_print_leaf@@Base+0xe44>)
   25b92:	mov	r2, r0
   25b94:	movs	r0, #1
   25b96:	add	r1, pc
   25b98:	blx	87f4 <__printf_chk@plt+0x4>
   25b9c:	add.w	r1, r4, #428	; 0x1ac
   25ba0:	add.w	r0, fp, r1
   25ba4:	ldr.w	r2, [fp, r1]
   25ba8:	ldr	r3, [r0, #4]
   25baa:	orrs	r3, r2
   25bac:	beq.n	25bb8 <btrfs_print_leaf@@Base+0xb98>
   25bae:	ldr	r2, [pc, #696]	; (25e68 <btrfs_print_leaf@@Base+0xe48>)
   25bb0:	mov	r0, r9
   25bb2:	add	r2, pc
   25bb4:	bl	246ac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25bb8:	add.w	r1, r4, #440	; 0x1b8
   25bbc:	add.w	r0, fp, r1
   25bc0:	ldr.w	r2, [fp, r1]
   25bc4:	ldr	r3, [r0, #4]
   25bc6:	orrs	r3, r2
   25bc8:	beq.n	25bd4 <btrfs_print_leaf@@Base+0xbb4>
   25bca:	ldr	r2, [pc, #672]	; (25e6c <btrfs_print_leaf@@Base+0xe4c>)
   25bcc:	mov	r0, r9
   25bce:	add	r2, pc
   25bd0:	bl	246ac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25bd4:	add.w	r1, r4, #452	; 0x1c4
   25bd8:	add.w	r0, fp, r1
   25bdc:	ldr.w	r2, [fp, r1]
   25be0:	ldr	r3, [r0, #4]
   25be2:	orrs	r3, r2
   25be4:	beq.n	25bf0 <btrfs_print_leaf@@Base+0xbd0>
   25be6:	ldr	r2, [pc, #648]	; (25e70 <btrfs_print_leaf@@Base+0xe50>)
   25be8:	mov	r0, r9
   25bea:	add	r2, pc
   25bec:	bl	246ac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25bf0:	add.w	r1, r4, #464	; 0x1d0
   25bf4:	add.w	r0, fp, r1
   25bf8:	ldr.w	r2, [fp, r1]
   25bfc:	ldr	r3, [r0, #4]
   25bfe:	orrs	r3, r2
   25c00:	beq.n	25c0c <btrfs_print_leaf@@Base+0xbec>
   25c02:	ldr	r2, [pc, #624]	; (25e74 <btrfs_print_leaf@@Base+0xe54>)
   25c04:	mov	r0, r9
   25c06:	add	r2, pc
   25c08:	bl	246ac <btrfs_destroy_delayed_refs@@Base+0x3c8>
   25c0c:	ldr	r1, [pc, #616]	; (25e78 <btrfs_print_leaf@@Base+0xe58>)
   25c0e:	movs	r0, #1
   25c10:	add	r1, pc
   25c12:	blx	87f4 <__printf_chk@plt+0x4>
   25c16:	add	r0, sp, #520	; 0x208
   25c18:	bl	24c24 <btrfs_print_key@@Base>
   25c1c:	ldr	r1, [pc, #604]	; (25e7c <btrfs_print_leaf@@Base+0xe5c>)
   25c1e:	ldrb.w	r2, [sp, #537]	; 0x219
   25c22:	add	r1, pc
   25c24:	movs	r0, #1
   25c26:	blx	87f4 <__printf_chk@plt+0x4>
   25c2a:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   25c2e:	ldr	r1, [pc, #592]	; (25e80 <btrfs_print_leaf@@Base+0xe60>)
   25c30:	add	r1, pc
   25c32:	b.n	25aa6 <btrfs_print_leaf@@Base+0xa86>
   25c34:	ldr	r2, [pc, #588]	; (25e84 <btrfs_print_leaf@@Base+0xe64>)
   25c36:	add	r2, pc
   25c38:	b.w	25434 <btrfs_print_leaf@@Base+0x414>
   25c3c:	movs	r2, #0
   25c3e:	ldr	r1, [sp, #80]	; 0x50
   25c40:	mov	r0, r9
   25c42:	bl	24d40 <print_extent_item@@Base>
   25c46:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   25c4a:	movs	r2, #1
   25c4c:	b.n	25c3e <btrfs_print_leaf@@Base+0xc1e>
   25c4e:	ldr	r0, [pc, #568]	; (25e88 <btrfs_print_leaf@@Base+0xe68>)
   25c50:	add	r0, pc
   25c52:	b.w	253b8 <btrfs_print_leaf@@Base+0x398>
   25c56:	ldr	r0, [pc, #564]	; (25e8c <btrfs_print_leaf@@Base+0xe6c>)
   25c58:	add	r0, pc
   25c5a:	b.w	253b8 <btrfs_print_leaf@@Base+0x398>
   25c5e:	ldr	r1, [pc, #560]	; (25e90 <btrfs_print_leaf@@Base+0xe70>)
   25c60:	movs	r0, #1
   25c62:	ldr.w	r5, [sl, #17]
   25c66:	add	r1, pc
   25c68:	blx	87f4 <__printf_chk@plt+0x4>
   25c6c:	adds	r5, #101	; 0x65
   25c6e:	ldr	r1, [sp, #100]	; 0x64
   25c70:	add.w	r4, fp, r5
   25c74:	movs	r3, #0
   25c76:	str	r3, [sp, #0]
   25c78:	ldr.w	r2, [fp, r5]
   25c7c:	ldr	r3, [r4, #4]
   25c7e:	ldr	r0, [r1, #0]
   25c80:	bl	249b4 <print_objectid@@Base>
   25c84:	ldr	r3, [r4, #24]
   25c86:	ldr	r1, [pc, #524]	; (25e94 <btrfs_print_leaf@@Base+0xe74>)
   25c88:	str	r3, [sp, #8]
   25c8a:	add	r1, pc
   25c8c:	ldr	r2, [r4, #16]
   25c8e:	ldr	r3, [r4, #20]
   25c90:	strd	r2, r3, [sp]
   25c94:	ldr	r2, [r4, #8]
   25c96:	ldr	r3, [r4, #12]
   25c98:	movs	r0, #1
   25c9a:	blx	87f4 <__printf_chk@plt+0x4>
   25c9e:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   25ca2:	ldr.w	r2, [sl, #17]
   25ca6:	ldr	r1, [pc, #496]	; (25e98 <btrfs_print_leaf@@Base+0xe78>)
   25ca8:	add	r2, fp
   25caa:	add	r1, pc
   25cac:	ldr.w	r2, [r2, #101]	; 0x65
   25cb0:	b.n	25c24 <btrfs_print_leaf@@Base+0xc04>
   25cb2:	ldr	r0, [pc, #488]	; (25e9c <btrfs_print_leaf@@Base+0xe7c>)
   25cb4:	add	r0, pc
   25cb6:	b.w	253b8 <btrfs_print_leaf@@Base+0x398>
   25cba:	ldr	r0, [pc, #484]	; (25ea0 <btrfs_print_leaf@@Base+0xe80>)
   25cbc:	add	r0, pc
   25cbe:	b.w	253b8 <btrfs_print_leaf@@Base+0x398>
   25cc2:	ldr	r3, [sp, #104]	; 0x68
   25cc4:	ldr.w	r0, [r3, #308]	; 0x134
   25cc8:	bl	17e10 <btrfs_super_csum_size@@Base>
   25ccc:	mov	r1, r0
   25cce:	ldr	r0, [sp, #84]	; 0x54
   25cd0:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   25cd4:	ldr	r3, [sp, #104]	; 0x68
   25cd6:	ldr	r1, [pc, #460]	; (25ea4 <btrfs_print_leaf@@Base+0xe84>)
   25cd8:	ldr.w	r3, [r3, #388]	; 0x184
   25cdc:	add	r1, pc
   25cde:	muls	r0, r3
   25ce0:	ldrd	r2, r3, [sp, #88]	; 0x58
   25ce4:	adds	r2, r2, r0
   25ce6:	adc.w	r3, r3, #0
   25cea:	strd	r2, r3, [sp]
   25cee:	str	r0, [sp, #8]
   25cf0:	ldrd	r2, r3, [sp, #88]	; 0x58
   25cf4:	b.n	25c98 <btrfs_print_leaf@@Base+0xc78>
   25cf6:	ldr	r1, [pc, #432]	; (25ea8 <btrfs_print_leaf@@Base+0xe88>)
   25cf8:	add	r1, pc
   25cfa:	blx	85b4 <strcpy@plt>
   25cfe:	cmp	r5, #1
   25d00:	ldr	r2, [r4, #0]
   25d02:	ldr	r3, [r4, #4]
   25d04:	beq.w	25ed6 <btrfs_print_leaf@@Base+0xeb6>
   25d08:	cmp	r5, #2
   25d0a:	beq.w	25ede <btrfs_print_leaf@@Base+0xebe>
   25d0e:	cmp	r5, #0
   25d10:	beq.w	25ee6 <btrfs_print_leaf@@Base+0xec6>
   25d14:	ldr	r1, [pc, #404]	; (25eac <btrfs_print_leaf@@Base+0xe8c>)
   25d16:	add	r1, pc
   25d18:	strd	r5, r1, [sp]
   25d1c:	movs	r0, #1
   25d1e:	ldr	r1, [pc, #400]	; (25eb0 <btrfs_print_leaf@@Base+0xe90>)
   25d20:	add	r1, pc
   25d22:	blx	87f4 <__printf_chk@plt+0x4>
   25d26:	cmp	r5, #0
   25d28:	bne.w	25eee <btrfs_print_leaf@@Base+0xece>
   25d2c:	ldr.w	r2, [sl, #21]
   25d30:	add	r3, sp, #940	; 0x3ac
   25d32:	str	r3, [sp, #12]
   25d34:	movs	r0, #1
   25d36:	ldrb	r3, [r4, #16]
   25d38:	subs	r2, #21
   25d3a:	str	r3, [sp, #8]
   25d3c:	ldr	r1, [r4, #8]
   25d3e:	ldr	r3, [r4, #12]
   25d40:	strd	r1, r3, [sp]
   25d44:	ldr	r1, [pc, #364]	; (25eb4 <btrfs_print_leaf@@Base+0xe94>)
   25d46:	add	r1, pc
   25d48:	blx	87f4 <__printf_chk@plt+0x4>
   25d4c:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   25d50:	ldr	r1, [pc, #356]	; (25eb8 <btrfs_print_leaf@@Base+0xe98>)
   25d52:	add	r1, pc
   25d54:	b.n	25cfa <btrfs_print_leaf@@Base+0xcda>
   25d56:	ldr	r1, [pc, #356]	; (25ebc <btrfs_print_leaf@@Base+0xe9c>)
   25d58:	add	r1, pc
   25d5a:	b.n	25cfa <btrfs_print_leaf@@Base+0xcda>
   25d5c:	ldr	r1, [pc, #352]	; (25ec0 <btrfs_print_leaf@@Base+0xea0>)
   25d5e:	add	r1, pc
   25d60:	b.n	25cfa <btrfs_print_leaf@@Base+0xcda>
   25d62:	nop
   25d64:	ldc2l	0, cr0, [r2, #-12]
   25d68:	lsls	r4, r4, #8
   25d6a:	movs	r0, r0
   25d6c:	stc2l	0, cr0, [r6, #-12]
   25d70:	ldr	r3, [sp, #592]	; 0x250
   25d72:	movs	r1, r0
   25d74:	ldr	r1, [r5, #76]	; 0x4c
   25d76:	movs	r1, r0
   25d78:	ldr	r1, [sp, #556]	; 0x22c
   25d7a:	movs	r1, r0
   25d7c:	ldr	r3, [sp, #224]	; 0xe0
   25d7e:	movs	r1, r0
   25d80:	lsls	r0, r3, #9
   25d82:	movs	r0, r0
   25d84:	ldr	r3, [sp, #216]	; 0xd8
   25d86:	movs	r1, r0
   25d88:	ldr	r3, [sp, #620]	; 0x26c
   25d8a:	movs	r1, r0
   25d8c:	add	r4, pc, #132	; (adr r4, 25e14 <btrfs_print_leaf@@Base+0xdf4>)
   25d8e:	movs	r1, r0
   25d90:	ldr	r2, [sp, #976]	; 0x3d0
   25d92:	movs	r1, r0
   25d94:	ldr	r3, [sp, #144]	; 0x90
   25d96:	movs	r1, r0
   25d98:			; <UNDEFINED> instruction: 0xfbd40003
   25d9c:	ldr	r2, [sp, #860]	; 0x35c
   25d9e:	movs	r1, r0
   25da0:	ldr	r2, [sp, #744]	; 0x2e8
   25da2:	movs	r1, r0
   25da4:	ldr	r2, [sp, #560]	; 0x230
   25da6:	movs	r1, r0
   25da8:	ldr	r3, [sp, #504]	; 0x1f8
   25daa:	movs	r1, r0
   25dac:	ldr	r3, [sp, #316]	; 0x13c
   25dae:	movs	r1, r0
   25db0:	ldr	r1, [sp, #200]	; 0xc8
   25db2:	movs	r1, r0
   25db4:	ldr	r2, [sp, #776]	; 0x308
   25db6:	movs	r1, r0
   25db8:	ldr	r2, [sp, #764]	; 0x2fc
   25dba:	movs	r1, r0
   25dbc:	str	r4, [r5, #48]	; 0x30
   25dbe:	movs	r1, r0
   25dc0:	ldr	r5, [sp, #212]	; 0xd4
   25dc2:	movs	r1, r0
   25dc4:	str	r7, [sp, #860]	; 0x35c
   25dc6:	movs	r1, r0
   25dc8:	str	r7, [r6, #124]	; 0x7c
   25dca:	movs	r1, r0
   25dcc:	str	r7, [sp, #684]	; 0x2ac
   25dce:	movs	r1, r0
   25dd0:	str	r1, [r0, #124]	; 0x7c
   25dd2:	movs	r1, r0
   25dd4:	str	r7, [sp, #508]	; 0x1fc
   25dd6:	movs	r1, r0
   25dd8:	str	r3, [r1, #120]	; 0x78
   25dda:	movs	r1, r0
   25ddc:	str	r7, [sp, #328]	; 0x148
   25dde:	movs	r1, r0
   25de0:	str	r5, [r2, #116]	; 0x74
   25de2:	movs	r1, r0
   25de4:	ldr	r3, [r0, #0]
   25de6:	movs	r1, r0
   25de8:	str	r7, [r3, #112]	; 0x70
   25dea:	movs	r1, r0
   25dec:	str	r7, [sp, #80]	; 0x50
   25dee:	movs	r1, r0
   25df0:	str	r1, [r5, #108]	; 0x6c
   25df2:	movs	r1, r0
   25df4:	str	r6, [sp, #748]	; 0x2ec
   25df6:	movs	r1, r0
   25df8:	str	r3, [r6, #104]	; 0x68
   25dfa:	movs	r1, r0
   25dfc:	str	r6, [sp, #572]	; 0x23c
   25dfe:	movs	r1, r0
   25e00:	str	r5, [r7, #100]	; 0x64
   25e02:	movs	r1, r0
   25e04:	str	r6, [sp, #384]	; 0x180
   25e06:	movs	r1, r0
   25e08:	str	r7, [r0, #100]	; 0x64
   25e0a:	movs	r1, r0
   25e0c:	str	r6, [sp, #196]	; 0xc4
   25e0e:	movs	r1, r0
   25e10:	str	r1, [r2, #96]	; 0x60
   25e12:	movs	r1, r0
   25e14:	str	r6, [sp, #12]
   25e16:	movs	r1, r0
   25e18:	str	r3, [r3, #92]	; 0x5c
   25e1a:	movs	r1, r0
   25e1c:	str	r5, [sp, #664]	; 0x298
   25e1e:	movs	r1, r0
   25e20:	str	r5, [sp, #732]	; 0x2dc
   25e22:	movs	r1, r0
   25e24:	str	r5, [sp, #888]	; 0x378
   25e26:	movs	r1, r0
   25e28:	str	r5, [sp, #860]	; 0x35c
   25e2a:	movs	r1, r0
   25e2c:	str	r5, [sp, #832]	; 0x340
   25e2e:	movs	r1, r0
   25e30:	str	r5, [sp, #804]	; 0x324
   25e32:	movs	r1, r0
   25e34:	str	r7, [r2, #12]
   25e36:	movs	r1, r0
   25e38:	str	r5, [sp, #184]	; 0xb8
   25e3a:	movs	r1, r0
   25e3c:	cdp	0, 6, cr0, cr4, cr3, {0}
   25e40:	add	r2, sp, #128	; 0x80
   25e42:	movs	r1, r0
   25e44:	str	r4, [sp, #860]	; 0x35c
   25e46:	movs	r1, r0
   25e48:	str	r4, [sp, #940]	; 0x3ac
   25e4a:	movs	r1, r0
   25e4c:	str	r4, [sp, #828]	; 0x33c
   25e4e:	movs	r1, r0
   25e50:	str	r4, [sp, #704]	; 0x2c0
   25e52:	movs	r1, r0
   25e54:	str	r4, [sp, #444]	; 0x1bc
   25e56:	movs	r1, r0
   25e58:	str	r4, [sp, #400]	; 0x190
   25e5a:	movs	r1, r0
   25e5c:	str	r4, [sp, #464]	; 0x1d0
   25e5e:	movs	r1, r0
   25e60:	str	r4, [sp, #464]	; 0x1d0
   25e62:	movs	r1, r0
   25e64:	str	r4, [sp, #76]	; 0x4c
   25e66:	movs	r1, r0
   25e68:	str	r2, [sp, #492]	; 0x1ec
   25e6a:	movs	r1, r0
   25e6c:	str	r2, [sp, #452]	; 0x1c4
   25e6e:	movs	r1, r0
   25e70:	str	r3, [sp, #1000]	; 0x3e8
   25e72:	movs	r1, r0
   25e74:	str	r3, [sp, #924]	; 0x39c
   25e76:	movs	r1, r0
   25e78:	str	r3, [sp, #920]	; 0x398
   25e7a:	movs	r1, r0
   25e7c:	str	r3, [sp, #880]	; 0x370
   25e7e:	movs	r1, r0
   25e80:	ldrb	r1, [r6, r4]
   25e82:	movs	r1, r0
   25e84:	str	r3, [sp, #996]	; 0x3e4
   25e86:	movs	r1, r0
   25e88:	str	r3, [sp, #748]	; 0x2ec
   25e8a:	movs	r1, r0
   25e8c:	str	r3, [sp, #800]	; 0x320
   25e8e:	movs	r1, r0
   25e90:	ldrh	r2, [r2, #56]	; 0x38
   25e92:	movs	r1, r0
   25e94:	ldrh	r2, [r1, #56]	; 0x38
   25e96:	movs	r1, r0
   25e98:	str	r3, [sp, #564]	; 0x234
   25e9a:	movs	r1, r0
   25e9c:	str	r3, [sp, #652]	; 0x28c
   25e9e:	movs	r1, r0
   25ea0:	str	r3, [sp, #736]	; 0x2e0
   25ea2:	movs	r1, r0
   25ea4:	str	r3, [sp, #656]	; 0x290
   25ea6:	movs	r1, r0
   25ea8:	ldrb	r1, [r5, r1]
   25eaa:	movs	r1, r0
   25eac:	ldrh	r4, [r6, #54]	; 0x36
   25eae:	movs	r1, r0
   25eb0:	str	r3, [sp, #596]	; 0x254
   25eb2:	movs	r1, r0
   25eb4:	str	r3, [sp, #580]	; 0x244
   25eb6:	movs	r1, r0
   25eb8:	str	r3, [sp, #340]	; 0x154
   25eba:	movs	r1, r0
   25ebc:	str	r3, [sp, #336]	; 0x150
   25ebe:	movs	r1, r0
   25ec0:	str	r3, [sp, #328]	; 0x148
   25ec2:	movs	r1, r0
   25ec4:	str	r3, [sp, #0]
   25ec6:	movs	r2, #16
   25ec8:	ldr.w	r3, [pc, #1172]	; 26360 <btrfs_print_leaf@@Base+0x1340>
   25ecc:	movs	r1, #1
   25ece:	add	r3, pc
   25ed0:	blx	8758 <__sprintf_chk@plt>
   25ed4:	b.n	25cfe <btrfs_print_leaf@@Base+0xcde>
   25ed6:	ldr.w	r1, [pc, #1164]	; 26364 <btrfs_print_leaf@@Base+0x1344>
   25eda:	add	r1, pc
   25edc:	b.n	25d18 <btrfs_print_leaf@@Base+0xcf8>
   25ede:	ldr.w	r1, [pc, #1160]	; 26368 <btrfs_print_leaf@@Base+0x1348>
   25ee2:	add	r1, pc
   25ee4:	b.n	25d18 <btrfs_print_leaf@@Base+0xcf8>
   25ee6:	ldr.w	r1, [pc, #1156]	; 2636c <btrfs_print_leaf@@Base+0x134c>
   25eea:	add	r1, pc
   25eec:	b.n	25d18 <btrfs_print_leaf@@Base+0xcf8>
   25eee:	mov	r1, r4
   25ef0:	mov	r3, r4
   25ef2:	ldr.w	r0, [r1, #29]!
   25ef6:	cmp	r5, #2
   25ef8:	ldr.w	r2, [r3, #21]!
   25efc:	ldr	r1, [r1, #4]
   25efe:	ldr	r3, [r3, #4]
   25f00:	strd	r0, r1, [sp]
   25f04:	bne.n	25f34 <btrfs_print_leaf@@Base+0xf14>
   25f06:	ldr.w	r1, [pc, #1128]	; 26370 <btrfs_print_leaf@@Base+0x1350>
   25f0a:	movs	r0, #1
   25f0c:	add	r1, pc
   25f0e:	blx	87f4 <__printf_chk@plt+0x4>
   25f12:	mov	r3, r4
   25f14:	ldr.w	r0, [r4, #45]!
   25f18:	ldr.w	r2, [r3, #37]!
   25f1c:	ldr	r1, [r4, #4]
   25f1e:	strd	r0, r1, [sp]
   25f22:	movs	r0, #1
   25f24:	ldr.w	r1, [pc, #1100]	; 26374 <btrfs_print_leaf@@Base+0x1354>
   25f28:	ldr	r3, [r3, #4]
   25f2a:	add	r1, pc
   25f2c:	blx	87f4 <__printf_chk@plt+0x4>
   25f30:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   25f34:	ldr.w	r1, [pc, #1088]	; 26378 <btrfs_print_leaf@@Base+0x1358>
   25f38:	movs	r0, #1
   25f3a:	add	r1, pc
   25f3c:	blx	87f4 <__printf_chk@plt+0x4>
   25f40:	ldr	r0, [r4, #8]
   25f42:	ldr	r1, [r4, #12]
   25f44:	mov	r3, r4
   25f46:	ldr.w	r2, [r3, #37]!
   25f4a:	strd	r0, r1, [sp, #8]
   25f4e:	mov	r1, r4
   25f50:	ldr.w	r0, [r1, #45]!
   25f54:	ldr	r1, [r1, #4]
   25f56:	strd	r0, r1, [sp]
   25f5a:	movs	r0, #1
   25f5c:	ldr.w	r1, [pc, #1052]	; 2637c <btrfs_print_leaf@@Base+0x135c>
   25f60:	ldr	r3, [r3, #4]
   25f62:	add	r1, pc
   25f64:	blx	87f4 <__printf_chk@plt+0x4>
   25f68:	ldr.w	r1, [pc, #1044]	; 26380 <btrfs_print_leaf@@Base+0x1360>
   25f6c:	ldrb	r2, [r4, #16]
   25f6e:	add	r3, sp, #940	; 0x3ac
   25f70:	add	r1, pc
   25f72:	movs	r0, #1
   25f74:	blx	87f4 <__printf_chk@plt+0x4>
   25f78:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   25f7c:	add	r4, sp, #272	; 0x110
   25f7e:	add	r5, sp, #940	; 0x3ac
   25f80:	movs	r3, #24
   25f82:	mov	r2, r7
   25f84:	mov	r1, r4
   25f86:	mov	r0, r9
   25f88:	bl	1731a <read_extent_buffer@@Base>
   25f8c:	mov.w	r2, #256	; 0x100
   25f90:	movs	r1, #0
   25f92:	mov	r0, r5
   25f94:	blx	8780 <memset@plt+0x4>
   25f98:	ldrd	r0, r1, [r4, #16]
   25f9c:	mov	r2, r5
   25f9e:	bl	243e4 <btrfs_destroy_delayed_refs@@Base+0x100>
   25fa2:	str	r5, [sp, #8]
   25fa4:	ldrd	r2, r3, [r4, #8]
   25fa8:	ldr	r1, [pc, #984]	; (26384 <btrfs_print_leaf@@Base+0x1364>)
   25faa:	strd	r2, r3, [sp]
   25fae:	add	r1, pc
   25fb0:	ldrd	r2, r3, [sp, #272]	; 0x110
   25fb4:	b.n	25c98 <btrfs_print_leaf@@Base+0xc78>
   25fb6:	ldr.w	r2, [sl, #17]
   25fba:	ldr	r1, [pc, #972]	; (26388 <btrfs_print_leaf@@Base+0x1368>)
   25fbc:	adds	r2, #101	; 0x65
   25fbe:	add.w	r3, fp, r2
   25fc2:	add	r1, pc
   25fc4:	ldr.w	r2, [fp, r2]
   25fc8:	ldr	r3, [r3, #4]
   25fca:	b.n	25f72 <btrfs_print_leaf@@Base+0xf52>
   25fcc:	ldr	r0, [pc, #956]	; (2638c <btrfs_print_leaf@@Base+0x136c>)
   25fce:	add	r0, pc
   25fd0:	b.w	253b8 <btrfs_print_leaf@@Base+0x398>
   25fd4:	ldr	r0, [pc, #952]	; (26390 <btrfs_print_leaf@@Base+0x1370>)
   25fd6:	add	r0, pc
   25fd8:	b.w	253b8 <btrfs_print_leaf@@Base+0x398>
   25fdc:	mov	r1, r7
   25fde:	mov	r0, r9
   25fe0:	bl	247b4 <print_chunk_item@@Base>
   25fe4:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   25fe8:	ldr.w	r4, [sl, #17]
   25fec:	add	r5, sp, #772	; 0x304
   25fee:	add	r6, sp, #940	; 0x3ac
   25ff0:	movs	r3, #16
   25ff2:	add.w	r2, r4, #133	; 0x85
   25ff6:	mov	r1, r5
   25ff8:	mov	r0, r9
   25ffa:	adds	r4, #101	; 0x65
   25ffc:	bl	1731a <read_extent_buffer@@Base>
   26000:	mov	r1, r6
   26002:	mov	r0, r5
   26004:	blx	8394 <uuid_unparse@plt>
   26008:	add.w	r3, fp, r4
   2600c:	str	r6, [sp, #24]
   2600e:	movs	r0, #1
   26010:	ldr	r1, [r3, #24]
   26012:	ldr	r2, [r3, #28]
   26014:	strd	r1, r2, [sp, #16]
   26018:	ldr	r1, [r3, #16]
   2601a:	ldr	r2, [r3, #20]
   2601c:	strd	r1, r2, [sp, #8]
   26020:	ldr	r1, [r3, #8]
   26022:	ldr	r2, [r3, #12]
   26024:	strd	r1, r2, [sp]
   26028:	ldr	r1, [pc, #872]	; (26394 <btrfs_print_leaf@@Base+0x1374>)
   2602a:	ldr.w	r2, [fp, r4]
   2602e:	ldr	r3, [r3, #4]
   26030:	add	r1, pc
   26032:	blx	87f4 <__printf_chk@plt+0x4>
   26036:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   2603a:	add	r3, sp, #940	; 0x3ac
   2603c:	mov.w	r2, #256	; 0x100
   26040:	movs	r1, #0
   26042:	ldr.w	r5, [sl, #17]
   26046:	mov	r0, r3
   26048:	blx	8780 <memset@plt+0x4>
   2604c:	adds	r5, #101	; 0x65
   2604e:	add	r5, fp
   26050:	ldr	r4, [r5, #16]
   26052:	and.w	r2, r4, #1
   26056:	str	r2, [sp, #216]	; 0xd8
   26058:	movs	r2, #0
   2605a:	str	r2, [sp, #220]	; 0xdc
   2605c:	ldrd	r1, r2, [sp, #216]	; 0xd8
   26060:	orrs	r2, r1
   26062:	mov	r3, r0
   26064:	beq.n	260d6 <btrfs_print_leaf@@Base+0x10b6>
   26066:	ldr	r1, [pc, #816]	; (26398 <btrfs_print_leaf@@Base+0x1378>)
   26068:	add	r1, pc
   2606a:	mov	r0, r3
   2606c:	blx	85b4 <strcpy@plt>
   26070:	and.w	r3, r4, #2
   26074:	str	r3, [sp, #224]	; 0xe0
   26076:	movs	r3, #0
   26078:	str	r3, [sp, #228]	; 0xe4
   2607a:	ldrd	r2, r3, [sp, #224]	; 0xe0
   2607e:	orrs	r3, r2
   26080:	beq.n	26090 <btrfs_print_leaf@@Base+0x1070>
   26082:	ldr	r1, [pc, #792]	; (2639c <btrfs_print_leaf@@Base+0x137c>)
   26084:	add	r0, sp, #940	; 0x3ac
   26086:	mov.w	r2, #256	; 0x100
   2608a:	add	r1, pc
   2608c:	blx	874c <__strcat_chk@plt>
   26090:	and.w	r3, r4, #4
   26094:	str	r3, [sp, #232]	; 0xe8
   26096:	movs	r3, #0
   26098:	str	r3, [sp, #236]	; 0xec
   2609a:	ldrd	r3, r4, [sp, #232]	; 0xe8
   2609e:	orrs	r3, r4
   260a0:	beq.n	260b0 <btrfs_print_leaf@@Base+0x1090>
   260a2:	ldr	r1, [pc, #764]	; (263a0 <btrfs_print_leaf@@Base+0x1380>)
   260a4:	add	r0, sp, #940	; 0x3ac
   260a6:	mov.w	r2, #256	; 0x100
   260aa:	add	r1, pc
   260ac:	blx	874c <__strcat_chk@plt>
   260b0:	ldr	r2, [r5, #24]
   260b2:	movs	r0, #1
   260b4:	ldr	r3, [r5, #28]
   260b6:	ldr	r1, [pc, #748]	; (263a4 <btrfs_print_leaf@@Base+0x1384>)
   260b8:	strd	r2, r3, [sp, #16]
   260bc:	add	r3, sp, #940	; 0x3ac
   260be:	str	r3, [sp, #8]
   260c0:	add	r1, pc
   260c2:	ldr	r2, [r5, #8]
   260c4:	ldr	r3, [r5, #12]
   260c6:	strd	r2, r3, [sp]
   260ca:	ldr	r2, [r5, #0]
   260cc:	ldr	r3, [r5, #4]
   260ce:	blx	87f4 <__printf_chk@plt+0x4>
   260d2:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   260d6:	ldr	r1, [pc, #720]	; (263a8 <btrfs_print_leaf@@Base+0x1388>)
   260d8:	add	r1, pc
   260da:	b.n	2606a <btrfs_print_leaf@@Base+0x104a>
   260dc:	ldr.w	r2, [sl, #17]
   260e0:	adds	r2, #101	; 0x65
   260e2:	add.w	r3, fp, r2
   260e6:	ldr	r0, [r3, #32]
   260e8:	ldr	r1, [r3, #36]	; 0x24
   260ea:	strd	r0, r1, [sp, #24]
   260ee:	ldr	r0, [r3, #24]
   260f0:	ldr	r1, [r3, #28]
   260f2:	strd	r0, r1, [sp, #16]
   260f6:	ldr	r0, [r3, #16]
   260f8:	ldr	r1, [r3, #20]
   260fa:	strd	r0, r1, [sp, #8]
   260fe:	ldr	r1, [r3, #12]
   26100:	ldr	r0, [r3, #8]
   26102:	strd	r0, r1, [sp]
   26106:	ldr	r1, [pc, #676]	; (263ac <btrfs_print_leaf@@Base+0x138c>)
   26108:	ldr.w	r2, [fp, r2]
   2610c:	ldr	r3, [r3, #4]
   2610e:	add	r1, pc
   26110:	movs	r0, #1
   26112:	blx	87f4 <__printf_chk@plt+0x4>
   26116:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   2611a:	ldr.w	r2, [sl, #17]
   2611e:	adds	r2, #101	; 0x65
   26120:	add.w	r3, fp, r2
   26124:	ldr	r0, [r3, #32]
   26126:	ldr	r1, [r3, #36]	; 0x24
   26128:	strd	r0, r1, [sp, #24]
   2612c:	ldr	r0, [r3, #24]
   2612e:	ldr	r1, [r3, #28]
   26130:	strd	r0, r1, [sp, #16]
   26134:	ldr	r0, [r3, #16]
   26136:	ldr	r1, [r3, #20]
   26138:	strd	r0, r1, [sp, #8]
   2613c:	ldr	r1, [r3, #12]
   2613e:	ldr	r0, [r3, #8]
   26140:	strd	r0, r1, [sp]
   26144:	ldr	r1, [pc, #616]	; (263b0 <btrfs_print_leaf@@Base+0x1390>)
   26146:	ldr.w	r2, [fp, r2]
   2614a:	ldr	r3, [r3, #4]
   2614c:	add	r1, pc
   2614e:	b.n	26110 <btrfs_print_leaf@@Base+0x10f0>
   26150:	ldr.w	r4, [sl, #21]
   26154:	ldr.w	r5, [sl, #17]
   26158:	lsls	r3, r4, #29
   2615a:	add.w	r5, r5, #101	; 0x65
   2615e:	bne.n	2618a <btrfs_print_leaf@@Base+0x116a>
   26160:	ldr	r7, [pc, #592]	; (263b4 <btrfs_print_leaf@@Base+0x1394>)
   26162:	add	r6, sp, #272	; 0x110
   26164:	add	r7, pc
   26166:	cmp	r4, #0
   26168:	beq.w	25288 <btrfs_print_leaf@@Base+0x268>
   2616c:	mov	r2, r5
   2616e:	movs	r3, #8
   26170:	mov	r1, r6
   26172:	mov	r0, r9
   26174:	bl	1731a <read_extent_buffer@@Base>
   26178:	ldrd	r2, r3, [sp, #272]	; 0x110
   2617c:	mov	r1, r7
   2617e:	movs	r0, #1
   26180:	blx	87f4 <__printf_chk@plt+0x4>
   26184:	subs	r4, #8
   26186:	adds	r5, #8
   26188:	b.n	26166 <btrfs_print_leaf@@Base+0x1146>
   2618a:	ldr	r1, [pc, #556]	; (263b8 <btrfs_print_leaf@@Base+0x1398>)
   2618c:	mov	r2, r4
   2618e:	add	r1, pc
   26190:	b.n	25c24 <btrfs_print_leaf@@Base+0xc04>
   26192:	ldr.w	r3, [sl, #17]
   26196:	ldr	r1, [pc, #548]	; (263bc <btrfs_print_leaf@@Base+0x139c>)
   26198:	adds	r3, #101	; 0x65
   2619a:	ldr	r2, [sp, #84]	; 0x54
   2619c:	add	r3, fp
   2619e:	add	r1, pc
   261a0:	b.n	25f72 <btrfs_print_leaf@@Base+0xf52>
   261a2:	ldr	r1, [pc, #540]	; (263c0 <btrfs_print_leaf@@Base+0x13a0>)
   261a4:	movs	r0, #1
   261a6:	add	r1, pc
   261a8:	blx	87f4 <__printf_chk@plt+0x4>
   261ac:	ldr	r1, [sp, #100]	; 0x64
   261ae:	movs	r3, #249	; 0xf9
   261b0:	mov	r2, r4
   261b2:	str	r3, [sp, #0]
   261b4:	mov	r3, r5
   261b6:	ldr	r0, [r1, #0]
   261b8:	bl	249b4 <print_objectid@@Base>
   261bc:	ldr	r1, [pc, #516]	; (263c4 <btrfs_print_leaf@@Base+0x13a4>)
   261be:	ldrd	r2, r3, [sp, #88]	; 0x58
   261c2:	movs	r0, #1
   261c4:	add	r1, pc
   261c6:	blx	87f4 <__printf_chk@plt+0x4>
   261ca:	orrs.w	r3, r4, r5
   261ce:	bne.n	26282 <btrfs_print_leaf@@Base+0x1262>
   261d0:	ldr	r0, [pc, #500]	; (263c8 <btrfs_print_leaf@@Base+0x13a8>)
   261d2:	add	r0, pc
   261d4:	blx	8618 <puts@plt+0x4>
   261d8:	movs	r2, #0
   261da:	mov	r1, r7
   261dc:	mov	r0, r9
   261de:	bl	2434c <btrfs_destroy_delayed_refs@@Base+0x68>
   261e2:	movs	r2, #1
   261e4:	mov	r4, r0
   261e6:	str	r1, [sp, #244]	; 0xf4
   261e8:	mov	r0, r9
   261ea:	mov	r1, r7
   261ec:	bl	2434c <btrfs_destroy_delayed_refs@@Base+0x68>
   261f0:	movs	r2, #2
   261f2:	mov	r6, r0
   261f4:	mov	r5, r1
   261f6:	mov	r0, r9
   261f8:	mov	r1, r7
   261fa:	bl	2434c <btrfs_destroy_delayed_refs@@Base+0x68>
   261fe:	movs	r2, #3
   26200:	mov	r8, r0
   26202:	mov	fp, r1
   26204:	mov	r0, r9
   26206:	mov	r1, r7
   26208:	bl	2434c <btrfs_destroy_delayed_refs@@Base+0x68>
   2620c:	movs	r2, #4
   2620e:	str	r0, [sp, #96]	; 0x60
   26210:	mov	r0, r9
   26212:	str	r1, [sp, #88]	; 0x58
   26214:	mov	r1, r7
   26216:	bl	2434c <btrfs_destroy_delayed_refs@@Base+0x68>
   2621a:	ldr	r3, [sp, #96]	; 0x60
   2621c:	mov	r2, r4
   2621e:	strd	r8, fp, [sp, #8]
   26222:	strd	r6, r5, [sp]
   26226:	str	r3, [sp, #16]
   26228:	ldr	r3, [sp, #88]	; 0x58
   2622a:	str	r3, [sp, #20]
   2622c:	ldr	r3, [sp, #244]	; 0xf4
   2622e:	strd	r0, r1, [sp, #24]
   26232:	movs	r0, #1
   26234:	ldr	r1, [pc, #404]	; (263cc <btrfs_print_leaf@@Base+0x13ac>)
   26236:	add	r1, pc
   26238:	blx	87f4 <__printf_chk@plt+0x4>
   2623c:	ldr	r3, [sp, #84]	; 0x54
   2623e:	cmp	r3, #40	; 0x28
   26240:	bls.w	25288 <btrfs_print_leaf@@Base+0x268>
   26244:	ldr	r1, [pc, #392]	; (263d0 <btrfs_print_leaf@@Base+0x13b0>)
   26246:	sub.w	r2, r3, #40	; 0x28
   2624a:	movs	r0, #1
   2624c:	movs	r4, #5
   2624e:	add	r1, pc
   26250:	blx	87f4 <__printf_chk@plt+0x4>
   26254:	ldr	r2, [sp, #84]	; 0x54
   26256:	lsls	r3, r4, #3
   26258:	cmp.w	r2, r4, lsl #3
   2625c:	bls.w	25288 <btrfs_print_leaf@@Base+0x268>
   26260:	mov	r2, r4
   26262:	mov	r1, r7
   26264:	mov	r0, r9
   26266:	str	r3, [sp, #96]	; 0x60
   26268:	bl	2434c <btrfs_destroy_delayed_refs@@Base+0x68>
   2626c:	mov	r2, r4
   2626e:	ldr	r3, [sp, #96]	; 0x60
   26270:	adds	r4, #1
   26272:	strd	r0, r1, [sp]
   26276:	movs	r0, #1
   26278:	vmov	r1, s21
   2627c:	blx	87f4 <__printf_chk@plt+0x4>
   26280:	b.n	26254 <btrfs_print_leaf@@Base+0x1234>
   26282:	ldr	r1, [pc, #336]	; (263d4 <btrfs_print_leaf@@Base+0x13b4>)
   26284:	mov	r2, r4
   26286:	mov	r3, r5
   26288:	add	r1, pc
   2628a:	b.w	25a4a <btrfs_print_leaf@@Base+0xa2a>
   2628e:	ldr	r1, [pc, #328]	; (263d8 <btrfs_print_leaf@@Base+0x13b8>)
   26290:	movs	r0, #1
   26292:	add	r1, pc
   26294:	blx	87f4 <__printf_chk@plt+0x4>
   26298:	ldr	r1, [sp, #100]	; 0x64
   2629a:	movs	r3, #248	; 0xf8
   2629c:	mov	r2, r4
   2629e:	str	r3, [sp, #0]
   262a0:	mov	r3, r5
   262a2:	ldr	r0, [r1, #0]
   262a4:	bl	249b4 <print_objectid@@Base>
   262a8:	ldr	r1, [pc, #304]	; (263dc <btrfs_print_leaf@@Base+0x13bc>)
   262aa:	ldrd	r2, r3, [sp, #88]	; 0x58
   262ae:	movs	r0, #1
   262b0:	add	r1, pc
   262b2:	blx	87f4 <__printf_chk@plt+0x4>
   262b6:	mov.w	r3, #4294967295	; 0xffffffff
   262ba:	cmp	r5, r3
   262bc:	mvn.w	r2, #3
   262c0:	it	eq
   262c2:	cmpeq	r4, r2
   262c4:	bne.n	2630e <btrfs_print_leaf@@Base+0x12ee>
   262c6:	add.w	r4, fp, r7
   262ca:	ldr	r1, [pc, #276]	; (263e0 <btrfs_print_leaf@@Base+0x13c0>)
   262cc:	ldr.w	r2, [fp, r7]
   262d0:	movs	r0, #1
   262d2:	ldr	r3, [r4, #4]
   262d4:	add	r1, pc
   262d6:	blx	87f4 <__printf_chk@plt+0x4>
   262da:	ldr	r0, [pc, #264]	; (263e4 <btrfs_print_leaf@@Base+0x13c4>)
   262dc:	add	r0, pc
   262de:	blx	8618 <puts@plt+0x4>
   262e2:	add.w	r0, r4, #8
   262e6:	bl	2451c <btrfs_destroy_delayed_refs@@Base+0x238>
   262ea:	ldr	r0, [pc, #252]	; (263e8 <btrfs_print_leaf@@Base+0x13c8>)
   262ec:	add	r0, pc
   262ee:	blx	8618 <puts@plt+0x4>
   262f2:	add.w	r0, r4, #144	; 0x90
   262f6:	bl	2451c <btrfs_destroy_delayed_refs@@Base+0x238>
   262fa:	ldr	r0, [pc, #240]	; (263ec <btrfs_print_leaf@@Base+0x13cc>)
   262fc:	add	r0, pc
   262fe:	blx	8618 <puts@plt+0x4>
   26302:	add.w	r0, r4, #280	; 0x118
   26306:	bl	2451c <btrfs_destroy_delayed_refs@@Base+0x238>
   2630a:	b.w	25288 <btrfs_print_leaf@@Base+0x268>
   2630e:	ldr	r1, [pc, #224]	; (263f0 <btrfs_print_leaf@@Base+0x13d0>)
   26310:	mov	r2, r4
   26312:	mov	r3, r5
   26314:	add	r1, pc
   26316:	b.w	25a4a <btrfs_print_leaf@@Base+0xa2a>
   2631a:	add	r2, sp, #940	; 0x3ac
   2631c:	addw	r0, sp, #579	; 0x243
   26320:	str	r2, [sp, #84]	; 0x54
   26322:	mov	r1, r2
   26324:	blx	8394 <uuid_unparse@plt>
   26328:	ldr	r1, [pc, #200]	; (263f4 <btrfs_print_leaf@@Base+0x13d4>)
   2632a:	ldr	r2, [sp, #84]	; 0x54
   2632c:	movs	r0, #1
   2632e:	add	r1, pc
   26330:	blx	87f4 <__printf_chk@plt+0x4>
   26334:	b.n	25b5c <btrfs_print_leaf@@Base+0xb3c>
   26336:	add	r2, sp, #940	; 0x3ac
   26338:	addw	r0, sp, #563	; 0x233
   2633c:	str	r2, [sp, #84]	; 0x54
   2633e:	mov	r1, r2
   26340:	blx	8394 <uuid_unparse@plt>
   26344:	ldr	r1, [pc, #176]	; (263f8 <btrfs_print_leaf@@Base+0x13d8>)
   26346:	ldr	r2, [sp, #84]	; 0x54
   26348:	movs	r0, #1
   2634a:	add	r1, pc
   2634c:	blx	87f4 <__printf_chk@plt+0x4>
   26350:	b.w	25b46 <btrfs_print_leaf@@Base+0xb26>
   26354:	addw	sp, sp, #1204	; 0x4b4
   26358:	vpop	{d8-d10}
   2635c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26360:	ldrh	r2, [r3, #22]
   26362:	movs	r1, r0
   26364:	ldrh	r1, [r4, #40]	; 0x28
   26366:	movs	r1, r0
   26368:	ldrh	r0, [r2, #40]	; 0x28
   2636a:	movs	r1, r0
   2636c:	ldrh	r1, [r3, #40]	; 0x28
   2636e:	movs	r1, r0
   26370:	str	r2, [sp, #56]	; 0x38
   26372:	movs	r1, r0
   26374:	str	r2, [sp, #96]	; 0x60
   26376:	movs	r1, r0
   26378:	str	r2, [sp, #180]	; 0xb4
   2637a:	movs	r1, r0
   2637c:	str	r2, [sp, #172]	; 0xac
   2637e:	movs	r1, r0
   26380:	str	r2, [sp, #292]	; 0x124
   26382:	movs	r1, r0
   26384:	str	r2, [sp, #172]	; 0xac
   26386:	movs	r1, r0
   26388:	str	r2, [sp, #308]	; 0x134
   2638a:	movs	r1, r0
   2638c:	str	r2, [sp, #436]	; 0x1b4
   2638e:	movs	r1, r0
   26390:	str	r2, [sp, #484]	; 0x1e4
   26392:	movs	r1, r0
   26394:	str	r2, [sp, #1000]	; 0x3e8
   26396:	movs	r1, r0
   26398:	ldr	r0, [sp, #884]	; 0x374
   2639a:	movs	r1, r0
   2639c:	str	r3, [sp, #44]	; 0x2c
   2639e:	movs	r1, r0
   263a0:	str	r2, [sp, #980]	; 0x3d4
   263a2:	movs	r1, r0
   263a4:	str	r2, [sp, #948]	; 0x3b4
   263a6:	movs	r1, r0
   263a8:	str	r2, [sp, #740]	; 0x2e4
   263aa:	movs	r1, r0
   263ac:	str	r2, [sp, #840]	; 0x348
   263ae:	movs	r1, r0
   263b0:	str	r2, [sp, #1020]	; 0x3fc
   263b2:	movs	r1, r0
   263b4:	str	r3, [sp, #284]	; 0x11c
   263b6:	movs	r1, r0
   263b8:	str	r2, [r2, #80]	; 0x50
   263ba:	movs	r1, r0
   263bc:	str	r3, [sp, #124]	; 0x7c
   263be:	movs	r1, r0
   263c0:	str	r3, [sp, #164]	; 0xa4
   263c2:	movs	r1, r0
   263c4:	strh	r6, [r7, #60]	; 0x3c
   263c6:	movs	r1, r0
   263c8:	str	r3, [sp, #100]	; 0x64
   263ca:	movs	r1, r0
   263cc:	str	r2, [sp, #784]	; 0x310
   263ce:	movs	r1, r0
   263d0:	str	r3, [sp, #12]
   263d2:	movs	r1, r0
   263d4:	str	r3, [sp, #64]	; 0x40
   263d6:	movs	r1, r0
   263d8:	str	r3, [sp, #188]	; 0xbc
   263da:	movs	r1, r0
   263dc:	strh	r2, [r2, #54]	; 0x36
   263de:	movs	r1, r0
   263e0:	str	r3, [sp, #32]
   263e2:	movs	r1, r0
   263e4:	str	r3, [sp, #116]	; 0x74
   263e6:	movs	r1, r0
   263e8:	str	r3, [sp, #80]	; 0x50
   263ea:	movs	r1, r0
   263ec:	str	r3, [sp, #60]	; 0x3c
   263ee:	movs	r1, r0
   263f0:	str	r3, [sp, #0]
   263f2:	movs	r1, r0
   263f4:	str	r3, [sp, #56]	; 0x38
   263f6:	movs	r1, r0
   263f8:	str	r3, [sp, #24]
   263fa:	movs	r1, r0

000263fc <btrfs_print_tree@@Base>:
   263fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26400:	cmp	r2, #1
   26402:	vpush	{d8}
   26406:	mov	r4, r0
   26408:	ldr	r3, [pc, #688]	; (266bc <btrfs_print_tree@@Base+0x2c0>)
   2640a:	it	cs
   2640c:	movcs	r2, #1
   2640e:	mov	r9, r2
   26410:	add	r3, pc
   26412:	sub	sp, #148	; 0x94
   26414:	str	r1, [sp, #44]	; 0x2c
   26416:	ldr	r1, [pc, #680]	; (266c0 <btrfs_print_tree@@Base+0x2c4>)
   26418:	str	r3, [sp, #32]
   2641a:	ldr	r3, [pc, #680]	; (266c4 <btrfs_print_tree@@Base+0x2c8>)
   2641c:	add	r1, pc
   2641e:	ldr	r3, [r1, r3]
   26420:	ldr	r3, [r3, #0]
   26422:	str	r3, [sp, #140]	; 0x8c
   26424:	mov.w	r3, #0
   26428:	ldrb.w	r3, [r0, #196]	; 0xc4
   2642c:	cbnz	r3, 26448 <btrfs_print_tree@@Base+0x4c>
   2642e:	bl	25020 <btrfs_print_leaf@@Base>
   26432:	ldr	r2, [pc, #660]	; (266c8 <btrfs_print_tree@@Base+0x2cc>)
   26434:	ldr	r3, [pc, #652]	; (266c4 <btrfs_print_tree@@Base+0x2c8>)
   26436:	add	r2, pc
   26438:	ldr	r3, [r2, r3]
   2643a:	ldr	r2, [r3, #0]
   2643c:	ldr	r3, [sp, #140]	; 0x8c
   2643e:	eors	r2, r3
   26440:	beq.w	266b2 <btrfs_print_tree@@Base+0x2b6>
   26444:	blx	84cc <__stack_chk_fail@plt>
   26448:	ldr	r3, [r0, #92]	; 0x5c
   2644a:	str	r3, [sp, #36]	; 0x24
   2644c:	ldr.w	r6, [r0, #192]	; 0xc0
   26450:	bl	24778 <btrfs_destroy_delayed_refs@@Base+0x494>
   26454:	cmp	r0, r6
   26456:	mov	r2, r0
   26458:	bcs.n	26464 <btrfs_print_tree@@Base+0x68>
   2645a:	ldr	r0, [pc, #624]	; (266cc <btrfs_print_tree@@Base+0x2d0>)
   2645c:	mov	r1, r6
   2645e:	add	r0, pc
   26460:	bl	17400 <__btrfs_warning@@Base>
   26464:	mov	r0, r4
   26466:	movs	r5, #0
   26468:	bl	24778 <btrfs_destroy_delayed_refs@@Base+0x494>
   2646c:	ldr.w	r2, [r4, #176]	; 0xb0
   26470:	ldr.w	r3, [r4, #180]	; 0xb4
   26474:	add.w	r7, r4, #197	; 0xc5
   26478:	ldr	r1, [pc, #596]	; (266d0 <btrfs_print_tree@@Base+0x2d4>)
   2647a:	add.w	fp, sp, #52	; 0x34
   2647e:	mov	r8, r7
   26480:	strd	r2, r3, [sp, #16]
   26484:	add	r1, pc
   26486:	subs	r0, r0, r6
   26488:	strd	r6, r0, [sp, #4]
   2648c:	ldrb.w	r3, [r4, #196]	; 0xc4
   26490:	movs	r0, #1
   26492:	str	r3, [sp, #0]
   26494:	ldrd	r2, r3, [r4, #40]	; 0x28
   26498:	blx	87f4 <__printf_chk@plt+0x4>
   2649c:	ldr	r2, [sp, #32]
   2649e:	ldr	r3, [pc, #564]	; (266d4 <btrfs_print_tree@@Base+0x2d8>)
   264a0:	ldr	r3, [r2, r3]
   264a2:	str	r5, [sp, #0]
   264a4:	str	r3, [sp, #28]
   264a6:	ldr	r1, [sp, #28]
   264a8:	ldr.w	r2, [r4, #184]	; 0xb8
   264ac:	ldr.w	r3, [r4, #188]	; 0xbc
   264b0:	ldr	r0, [r1, #0]
   264b2:	bl	249b4 <print_objectid@@Base>
   264b6:	movs	r0, #10
   264b8:	blx	8790 <putchar@plt+0x4>
   264bc:	mov	r0, r4
   264be:	bl	24628 <btrfs_destroy_delayed_refs@@Base+0x344>
   264c2:	ldr	r3, [sp, #28]
   264c4:	ldr	r0, [r3, #0]
   264c6:	blx	83c4 <fflush@plt>
   264ca:	mov	r0, r4
   264cc:	bl	24778 <btrfs_destroy_delayed_refs@@Base+0x494>
   264d0:	ldr	r3, [pc, #516]	; (266d8 <btrfs_print_tree@@Base+0x2dc>)
   264d2:	add	r3, pc
   264d4:	vmov	s17, r3
   264d8:	str	r0, [sp, #40]	; 0x28
   264da:	cmp	r5, r6
   264dc:	beq.n	264e4 <btrfs_print_tree@@Base+0xe8>
   264de:	ldr	r3, [sp, #40]	; 0x28
   264e0:	cmp	r5, r3
   264e2:	bne.n	2657c <btrfs_print_tree@@Base+0x180>
   264e4:	ldr	r3, [sp, #44]	; 0x2c
   264e6:	cmp	r3, #0
   264e8:	beq.n	26432 <btrfs_print_tree@@Base+0x36>
   264ea:	ldr	r3, [sp, #36]	; 0x24
   264ec:	cmp	r3, #0
   264ee:	beq.n	26432 <btrfs_print_tree@@Base+0x36>
   264f0:	ldr.w	r8, [r4, #92]	; 0x5c
   264f4:	ldrb.w	r6, [r4, #196]	; 0xc4
   264f8:	cmp.w	r9, #0
   264fc:	bne.w	26606 <btrfs_print_tree@@Base+0x20a>
   26500:	ldr.w	sl, [pc, #472]	; 266dc <btrfs_print_tree@@Base+0x2e0>
   26504:	ldr.w	fp, [pc, #472]	; 266e0 <btrfs_print_tree@@Base+0x2e4>
   26508:	ldr.w	r3, [r4, #192]	; 0xc0
   2650c:	add	sl, pc
   2650e:	add	fp, pc
   26510:	str	r3, [sp, #28]
   26512:	ldr	r3, [sp, #28]
   26514:	cmp	r3, r9
   26516:	ble.n	26432 <btrfs_print_tree@@Base+0x36>
   26518:	mov	r0, r7
   2651a:	mov	r1, r7
   2651c:	ldr.w	r5, [r0, #25]!
   26520:	ldr.w	r2, [r1, #17]!
   26524:	ldr	r0, [r0, #4]
   26526:	ldr	r3, [r1, #4]
   26528:	str	r1, [sp, #36]	; 0x24
   2652a:	strd	r5, r0, [sp]
   2652e:	mov	r0, r8
   26530:	bl	1d684 <read_tree_block@@Base>
   26534:	ldr	r1, [sp, #36]	; 0x24
   26536:	mov	r5, r0
   26538:	cmp	r0, #0
   2653a:	beq.n	265d0 <btrfs_print_tree@@Base+0x1d4>
   2653c:	cmn.w	r0, #4096	; 0x1000
   26540:	bhi.n	265d0 <btrfs_print_tree@@Base+0x1d4>
   26542:	ldr	r3, [r0, #84]	; 0x54
   26544:	lsls	r3, r3, #29
   26546:	bpl.n	265d0 <btrfs_print_tree@@Base+0x1d4>
   26548:	ldrb.w	r3, [r0, #196]	; 0xc4
   2654c:	subs	r2, r6, #1
   2654e:	cmp	r3, r2
   26550:	beq.n	265fc <btrfs_print_tree@@Base+0x200>
   26552:	strd	r3, r2, [sp, #16]
   26556:	ldr.w	r2, [r0, #144]	; 0x90
   2655a:	ldr.w	r3, [r0, #148]	; 0x94
   2655e:	mov	r0, fp
   26560:	strd	r9, r6, [sp]
   26564:	strd	r2, r3, [sp, #8]
   26568:	ldr.w	r2, [r4, #144]	; 0x90
   2656c:	ldr.w	r3, [r4, #148]	; 0x94
   26570:	bl	17400 <__btrfs_warning@@Base>
   26574:	mov	r0, r5
   26576:	bl	16c20 <free_extent_buffer@@Base>
   2657a:	b.n	265f4 <btrfs_print_tree@@Base+0x1f8>
   2657c:	mov	r3, r8
   2657e:	add.w	r2, r5, r5, lsl #5
   26582:	ldr.w	sl, [r3, #17]!
   26586:	adds	r2, #101	; 0x65
   26588:	mov	r1, fp
   2658a:	mov	r0, r4
   2658c:	adds	r5, #1
   2658e:	ldr	r3, [r3, #4]
   26590:	vmov	s16, r3
   26594:	movs	r3, #17
   26596:	bl	1731a <read_extent_buffer@@Base>
   2659a:	movs	r0, #9
   2659c:	blx	8790 <putchar@plt+0x4>
   265a0:	mov	r0, fp
   265a2:	bl	24c24 <btrfs_print_key@@Base>
   265a6:	mov	r3, r8
   265a8:	ldr.w	r2, [r3, #25]!
   265ac:	movs	r0, #1
   265ae:	vmov	r1, s17
   265b2:	add.w	r8, r8, #33	; 0x21
   265b6:	ldr	r3, [r3, #4]
   265b8:	strd	r2, r3, [sp]
   265bc:	mov	r2, sl
   265be:	vmov	r3, s16
   265c2:	blx	87f4 <__printf_chk@plt+0x4>
   265c6:	ldr	r3, [sp, #28]
   265c8:	ldr	r0, [r3, #0]
   265ca:	blx	83c4 <fflush@plt>
   265ce:	b.n	264da <btrfs_print_tree@@Base+0xde>
   265d0:	ldr	r2, [sp, #32]
   265d2:	ldr	r3, [pc, #272]	; (266e4 <btrfs_print_tree@@Base+0x2e8>)
   265d4:	ldr.w	r0, [r4, #184]	; 0xb8
   265d8:	ldr	r3, [r2, r3]
   265da:	ldr.w	r2, [r4, #188]	; 0xbc
   265de:	strd	r0, r2, [sp, #8]
   265e2:	ldr	r0, [r1, #0]
   265e4:	ldr	r2, [r1, #4]
   265e6:	movs	r1, #1
   265e8:	strd	r0, r2, [sp]
   265ec:	mov	r2, sl
   265ee:	ldr	r0, [r3, #0]
   265f0:	blx	881c <__fprintf_chk@plt+0x4>
   265f4:	add.w	r9, r9, #1
   265f8:	adds	r7, #33	; 0x21
   265fa:	b.n	26512 <btrfs_print_tree@@Base+0x116>
   265fc:	movs	r2, #0
   265fe:	movs	r1, #1
   26600:	bl	263fc <btrfs_print_tree@@Base>
   26604:	b.n	26574 <btrfs_print_tree@@Base+0x178>
   26606:	cmp	r6, #0
   26608:	beq.w	26432 <btrfs_print_tree@@Base+0x36>
   2660c:	add	r5, sp, #72	; 0x48
   2660e:	subs	r7, r6, #1
   26610:	add.w	sl, r5, r6, lsl #2
   26614:	mov.w	fp, #0
   26618:	mov	r0, r5
   2661a:	bl	17e48 <btrfs_init_path@@Base>
   2661e:	ldr	r3, [r4, #80]	; 0x50
   26620:	mov	r9, sl
   26622:	adds	r3, #1
   26624:	str	r3, [r4, #80]	; 0x50
   26626:	add	r3, sp, #144	; 0x90
   26628:	add.w	r3, r3, r6, lsl #2
   2662c:	str.w	r4, [r3, #-72]
   26630:	mov	r3, r5
   26632:	movs	r4, #0
   26634:	strb.w	r7, [sp, #137]	; 0x89
   26638:	str.w	fp, [r3, #32]
   2663c:	ldr.w	r0, [r3], #4
   26640:	cbz	r0, 2664a <btrfs_print_tree@@Base+0x24e>
   26642:	str	r3, [sp, #28]
   26644:	bl	16c20 <free_extent_buffer@@Base>
   26648:	ldr	r3, [sp, #28]
   2664a:	adds	r4, #1
   2664c:	cmp	r4, r6
   2664e:	blt.n	26638 <btrfs_print_tree@@Base+0x23c>
   26650:	mov	r4, sl
   26652:	mov	r3, r6
   26654:	ldrb.w	r2, [sp, #137]	; 0x89
   26658:	cmp	r3, r2
   2665a:	bgt.n	26682 <btrfs_print_tree@@Base+0x286>
   2665c:	ldr.w	r0, [r9, #-4]
   26660:	movs	r2, #1
   26662:	movs	r1, #0
   26664:	bl	263fc <btrfs_print_tree@@Base>
   26668:	mov	r1, r5
   2666a:	mov	r0, r8
   2666c:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   26670:	cmp	r0, #0
   26672:	blt.n	26698 <btrfs_print_tree@@Base+0x29c>
   26674:	beq.n	2665c <btrfs_print_tree@@Base+0x260>
   26676:	subs	r7, #1
   26678:	sub.w	r9, r9, #4
   2667c:	adds	r3, r7, #1
   2667e:	bne.n	26630 <btrfs_print_tree@@Base+0x234>
   26680:	b.n	26698 <btrfs_print_tree@@Base+0x29c>
   26682:	ldr	r1, [r4, #0]
   26684:	movs	r2, #0
   26686:	str.w	fp, [r4, #32]
   2668a:	mov	r0, r8
   2668c:	str	r3, [sp, #28]
   2668e:	bl	18c0e <read_node_slot@@Base>
   26692:	subs	r4, #4
   26694:	ldr	r3, [sp, #28]
   26696:	cbnz	r0, 266a0 <btrfs_print_tree@@Base+0x2a4>
   26698:	mov	r0, r5
   2669a:	bl	17e58 <btrfs_release_path@@Base>
   2669e:	b.n	26432 <btrfs_print_tree@@Base+0x36>
   266a0:	cmn.w	r0, #4096	; 0x1000
   266a4:	bhi.n	26698 <btrfs_print_tree@@Base+0x29c>
   266a6:	ldr	r2, [r0, #84]	; 0x54
   266a8:	lsls	r2, r2, #29
   266aa:	bpl.n	26698 <btrfs_print_tree@@Base+0x29c>
   266ac:	subs	r3, #1
   266ae:	str	r0, [r4, #0]
   266b0:	b.n	26654 <btrfs_print_tree@@Base+0x258>
   266b2:	add	sp, #148	; 0x94
   266b4:	vpop	{d8}
   266b8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   266bc:	ldrd	r0, r0, [r8, #-12]!
   266c0:	strd	r0, r0, [ip, #-12]!
   266c4:	lsls	r4, r4, #8
   266c6:	movs	r0, r0
   266c8:	ldrd	r0, r0, [r2, #-12]
   266cc:	str	r2, [sp, #16]
   266ce:	movs	r1, r0
   266d0:	str	r2, [sp, #96]	; 0x60
   266d2:	movs	r1, r0
   266d4:	lsls	r0, r3, #9
   266d6:	movs	r0, r0
   266d8:	str	r2, [sp, #20]
   266da:	movs	r1, r0
   266dc:	str	r1, [sp, #900]	; 0x384
   266de:	movs	r1, r0
   266e0:	str	r2, [sp, #4]
   266e2:	movs	r1, r0
   266e4:	lsls	r4, r6, #8
   266e6:	movs	r0, r0
   266e8:	ldr	r3, [r0, #0]
   266ea:	cbz	r3, 266f2 <btrfs_print_tree@@Base+0x2f6>
   266ec:	movs	r3, #0
   266ee:	strd	r3, r3, [r0]
   266f2:	bx	lr
   266f4:	push	{r4, r5, r6, lr}
   266f6:	lsrs	r4, r2, #5
   266f8:	and.w	r6, r2, #31
   266fc:	bic.w	r2, r2, #31
   26700:	ldr.w	r5, [r0, r4, lsl #2]
   26704:	mov.w	r4, #4294967295	; 0xffffffff
   26708:	lsls	r4, r6
   2670a:	eors	r5, r3
   2670c:	ands	r4, r5
   2670e:	cbz	r4, 26744 <btrfs_print_tree@@Base+0x348>
   26710:	uxth	r3, r4
   26712:	cbnz	r3, 26754 <btrfs_print_tree@@Base+0x358>
   26714:	lsrs	r4, r4, #16
   26716:	movs	r3, #16
   26718:	tst.w	r4, #255	; 0xff
   2671c:	itt	eq
   2671e:	lsreq	r4, r4, #8
   26720:	addeq	r3, #8
   26722:	lsls	r6, r4, #28
   26724:	itt	eq
   26726:	lsreq	r4, r4, #4
   26728:	addeq	r3, #4
   2672a:	lsls	r5, r4, #30
   2672c:	itt	eq
   2672e:	lsreq	r4, r4, #2
   26730:	addeq	r3, #2
   26732:	lsls	r0, r4, #31
   26734:	it	pl
   26736:	addpl	r3, #1
   26738:	add	r3, r2
   2673a:	cmp	r1, r3
   2673c:	it	cs
   2673e:	movcs	r1, r3
   26740:	mov	r0, r1
   26742:	pop	{r4, r5, r6, pc}
   26744:	adds	r2, #32
   26746:	cmp	r2, r1
   26748:	bcs.n	26740 <btrfs_print_tree@@Base+0x344>
   2674a:	lsrs	r4, r2, #5
   2674c:	ldr.w	r4, [r0, r4, lsl #2]
   26750:	eors	r4, r3
   26752:	b.n	2670e <btrfs_print_tree@@Base+0x312>
   26754:	movs	r3, #0
   26756:	b.n	26718 <btrfs_print_tree@@Base+0x31c>
   26758:	ldr.w	ip, [pc, #104]	; 267c4 <btrfs_print_tree@@Base+0x3c8>
   2675c:	push	{r4, r5, lr}
   2675e:	add	ip, pc
   26760:	ldr	r5, [pc, #100]	; (267c8 <btrfs_print_tree@@Base+0x3cc>)
   26762:	sub	sp, #92	; 0x5c
   26764:	ldr	r4, [pc, #100]	; (267cc <btrfs_print_tree@@Base+0x3d0>)
   26766:	ldr.w	r5, [ip, r5]
   2676a:	add	r4, pc
   2676c:	ldr	r5, [r5, #0]
   2676e:	str	r5, [sp, #84]	; 0x54
   26770:	mov.w	r5, #0
   26774:	cbz	r3, 267aa <btrfs_print_tree@@Base+0x3ae>
   26776:	ldr	r5, [pc, #88]	; (267d0 <btrfs_print_tree@@Base+0x3d4>)
   26778:	ldr	r4, [r4, r5]
   2677a:	strd	r2, r1, [sp]
   2677e:	movs	r1, #1
   26780:	strd	r0, r3, [sp, #8]
   26784:	ldr	r2, [pc, #76]	; (267d4 <btrfs_print_tree@@Base+0x3d8>)
   26786:	ldr	r3, [pc, #80]	; (267d8 <btrfs_print_tree@@Base+0x3dc>)
   26788:	ldr	r0, [r4, #0]
   2678a:	add	r4, sp, #20
   2678c:	add	r3, pc
   2678e:	add	r2, pc
   26790:	blx	881c <__fprintf_chk@plt+0x4>
   26794:	movs	r1, #16
   26796:	mov	r0, r4
   26798:	blx	8680 <backtrace@plt>
   2679c:	movs	r2, #2
   2679e:	mov	r1, r0
   267a0:	mov	r0, r4
   267a2:	blx	8990 <backtrace_symbols_fd@plt>
   267a6:	blx	8948 <abort@plt>
   267aa:	ldr	r2, [pc, #48]	; (267dc <btrfs_print_tree@@Base+0x3e0>)
   267ac:	ldr	r3, [pc, #24]	; (267c8 <btrfs_print_tree@@Base+0x3cc>)
   267ae:	add	r2, pc
   267b0:	ldr	r3, [r2, r3]
   267b2:	ldr	r2, [r3, #0]
   267b4:	ldr	r3, [sp, #84]	; 0x54
   267b6:	eors	r2, r3
   267b8:	beq.n	267be <btrfs_print_tree@@Base+0x3c2>
   267ba:	blx	84cc <__stack_chk_fail@plt>
   267be:	add	sp, #92	; 0x5c
   267c0:	pop	{r4, r5, pc}
   267c2:	nop
   267c4:	b.n	2641c <btrfs_print_tree@@Base+0x20>
   267c6:	movs	r3, r0
   267c8:	lsls	r4, r4, #8
   267ca:	movs	r0, r0
   267cc:	b.n	2640c <btrfs_print_tree@@Base+0x10>
   267ce:	movs	r3, r0
   267d0:	lsls	r4, r6, #8
   267d2:	movs	r0, r0
   267d4:	adds	r3, #3
   267d6:	movs	r1, r0
   267d8:	str	r2, [sp, #316]	; 0x13c
   267da:	movs	r1, r0
   267dc:	b.n	26394 <btrfs_print_leaf@@Base+0x1374>
   267de:	movs	r3, r0
   267e0:	push	{r3, r4, r5, lr}
   267e2:	mov	r4, r0
   267e4:	ldrd	r5, r3, [r0, #32]
   267e8:	movs	r2, #83	; 0x53
   267ea:	ldr	r1, [pc, #56]	; (26824 <btrfs_print_tree@@Base+0x428>)
   267ec:	cmp	r5, r3
   267ee:	ldr	r0, [pc, #56]	; (26828 <btrfs_print_tree@@Base+0x42c>)
   267f0:	add	r1, pc
   267f2:	ite	lt
   267f4:	movlt	r3, #0
   267f6:	movge	r3, #1
   267f8:	add	r0, pc
   267fa:	bl	26758 <btrfs_print_tree@@Base+0x35c>
   267fe:	adds	r3, r5, #1
   26800:	str	r3, [r4, #32]
   26802:	ldr	r3, [r4, #12]
   26804:	ldr	r2, [r4, #8]
   26806:	ldr.w	r1, [r3, #464]	; 0x1d0
   2680a:	ldr.w	r1, [r1, #388]	; 0x184
   2680e:	mla	r5, r1, r5, r2
   26812:	strd	r5, r5, [r4]
   26816:	ldr.w	r3, [r3, #464]	; 0x1d0
   2681a:	ldr.w	r3, [r3, #388]	; 0x184
   2681e:	str	r3, [r4, #16]
   26820:	pop	{r3, r4, r5, pc}
   26822:	nop
   26824:	str	r7, [sp, #172]	; 0xac
   26826:	movs	r1, r0
   26828:	str	r1, [sp, #984]	; 0x3d8
   2682a:	movs	r1, r0
   2682c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2682e:	mov	r4, r0
   26830:	ldr	r2, [pc, #144]	; (268c4 <btrfs_print_tree@@Base+0x4c8>)
   26832:	ldr	r3, [pc, #148]	; (268c8 <btrfs_print_tree@@Base+0x4cc>)
   26834:	add	r2, pc
   26836:	ldr	r6, [pc, #148]	; (268cc <btrfs_print_tree@@Base+0x4d0>)
   26838:	ldr	r3, [r2, r3]
   2683a:	add	r6, pc
   2683c:	ldr	r3, [r3, #0]
   2683e:	str	r3, [sp, #4]
   26840:	mov.w	r3, #0
   26844:	mov.w	r3, #4294967295	; 0xffffffff
   26848:	str	r3, [sp, #0]
   2684a:	ldrb.w	r3, [r0, #40]	; 0x28
   2684e:	ands.w	r5, r3, #1
   26852:	bne.n	2685c <btrfs_print_tree@@Base+0x460>
   26854:	bl	267e0 <btrfs_print_tree@@Base+0x3e4>
   26858:	movs	r0, #0
   2685a:	b.n	268a6 <btrfs_print_tree@@Base+0x4aa>
   2685c:	cbnz	r1, 268ba <btrfs_print_tree@@Base+0x4be>
   2685e:	ldr	r5, [r0, #36]	; 0x24
   26860:	lsls	r5, r5, #2
   26862:	ldr	r3, [r4, #8]
   26864:	mov	r0, r4
   26866:	ldr.w	r7, [r3, r1, lsl #2]
   2686a:	bl	267e0 <btrfs_print_tree@@Base+0x3e4>
   2686e:	ldr	r3, [r4, #12]
   26870:	mov.w	r0, #4294967295	; 0xffffffff
   26874:	ldr	r1, [r4, #4]
   26876:	ldr.w	r3, [r3, #464]	; 0x1d0
   2687a:	add	r1, r5
   2687c:	ldr.w	r2, [r3, #388]	; 0x184
   26880:	subs	r2, r2, r5
   26882:	bl	173fa <crc32c_le@@Base>
   26886:	mvns	r0, r0
   26888:	cmp	r0, r7
   2688a:	str	r0, [sp, #0]
   2688c:	beq.n	26858 <btrfs_print_tree@@Base+0x45c>
   2688e:	ldr	r3, [pc, #64]	; (268d0 <btrfs_print_tree@@Base+0x4d4>)
   26890:	ldr	r0, [pc, #64]	; (268d4 <btrfs_print_tree@@Base+0x4d8>)
   26892:	ldr	r3, [r6, r3]
   26894:	add	r0, pc
   26896:	ldr	r1, [r3, #0]
   26898:	blx	8930 <fputs@plt+0x4>
   2689c:	mov	r0, r4
   2689e:	bl	266e8 <btrfs_print_tree@@Base+0x2ec>
   268a2:	mvn.w	r0, #4
   268a6:	ldr	r2, [pc, #48]	; (268d8 <btrfs_print_tree@@Base+0x4dc>)
   268a8:	ldr	r3, [pc, #28]	; (268c8 <btrfs_print_tree@@Base+0x4cc>)
   268aa:	add	r2, pc
   268ac:	ldr	r3, [r2, r3]
   268ae:	ldr	r2, [r3, #0]
   268b0:	ldr	r3, [sp, #4]
   268b2:	eors	r2, r3
   268b4:	beq.n	268be <btrfs_print_tree@@Base+0x4c2>
   268b6:	blx	84cc <__stack_chk_fail@plt>
   268ba:	movs	r5, #0
   268bc:	b.n	26862 <btrfs_print_tree@@Base+0x466>
   268be:	add	sp, #12
   268c0:	pop	{r4, r5, r6, r7, pc}
   268c2:	nop
   268c4:	b.n	26370 <btrfs_print_leaf@@Base+0x1350>
   268c6:	movs	r3, r0
   268c8:	lsls	r4, r4, #8
   268ca:	movs	r0, r0
   268cc:	b.n	2636c <btrfs_print_leaf@@Base+0x134c>
   268ce:	movs	r3, r0
   268d0:	lsls	r4, r6, #8
   268d2:	movs	r0, r0
   268d4:	str	r1, [sp, #500]	; 0x1f4
   268d6:	movs	r1, r0
   268d8:	b.n	26298 <btrfs_print_leaf@@Base+0x1278>
   268da:	movs	r3, r0
   268dc:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   268e0:	mov	sl, r0
   268e2:	ldr	r4, [r0, #0]
   268e4:	mov	r8, r2
   268e6:	mov	r9, r3
   268e8:	movs	r5, #0
   268ea:	cbz	r4, 26928 <btrfs_print_tree@@Base+0x52c>
   268ec:	ldrd	r2, r3, [r4, #16]
   268f0:	cmp	r9, r3
   268f2:	it	eq
   268f4:	cmpeq	r8, r2
   268f6:	bcs.n	26900 <btrfs_print_tree@@Base+0x504>
   268f8:	ldr	r3, [r4, #8]
   268fa:	mov	r5, r4
   268fc:	mov	r4, r3
   268fe:	b.n	268ea <btrfs_print_tree@@Base+0x4ee>
   26900:	cmp	r3, r9
   26902:	it	eq
   26904:	cmpeq	r2, r8
   26906:	bcs.n	269ba <btrfs_print_tree@@Base+0x5be>
   26908:	ldr	r3, [r4, #4]
   2690a:	b.n	268fa <btrfs_print_tree@@Base+0x4fe>
   2690c:	ldrd	r2, r1, [r5, #24]
   26910:	ldrd	r3, r0, [r5, #16]
   26914:	adds	r3, r3, r2
   26916:	str	r3, [sp, #8]
   26918:	adc.w	r3, r0, r1
   2691c:	str	r3, [sp, #12]
   2691e:	ldrd	r2, r3, [sp, #8]
   26922:	b.n	269ae <btrfs_print_tree@@Base+0x5b2>
   26924:	mov	r4, r0
   26926:	b.n	269e2 <btrfs_print_tree@@Base+0x5e6>
   26928:	cmp	r5, #0
   2692a:	beq.n	269e2 <btrfs_print_tree@@Base+0x5e6>
   2692c:	ldrd	r2, r3, [r5, #16]
   26930:	ldr.w	r6, [sl, #44]	; 0x2c
   26934:	cmp	r9, r3
   26936:	it	eq
   26938:	cmpeq	r8, r2
   2693a:	bcs.n	2696c <btrfs_print_tree@@Base+0x570>
   2693c:	mov	r0, r5
   2693e:	bl	13e92 <rb_prev@@Base>
   26942:	mov	r5, r0
   26944:	cmp	r0, #0
   26946:	beq.n	269e2 <btrfs_print_tree@@Base+0x5e6>
   26948:	ldrd	r2, r3, [r0, #16]
   2694c:	ldr	r1, [pc, #156]	; (269ec <btrfs_print_tree@@Base+0x5f0>)
   2694e:	cmp	r9, r3
   26950:	ldr	r0, [pc, #156]	; (269f0 <btrfs_print_tree@@Base+0x5f4>)
   26952:	it	eq
   26954:	cmpeq	r8, r2
   26956:	add	r1, pc
   26958:	add.w	r1, r1, #16
   2695c:	add	r0, pc
   2695e:	ite	cc
   26960:	movcc	r3, #1
   26962:	movcs	r3, #0
   26964:	mov.w	r2, #628	; 0x274
   26968:	bl	26758 <btrfs_print_tree@@Base+0x35c>
   2696c:	ldr	r3, [r5, #32]
   2696e:	cmp	r3, #0
   26970:	beq.n	2690c <btrfs_print_tree@@Base+0x510>
   26972:	mov	r0, r5
   26974:	bl	13e92 <rb_prev@@Base>
   26978:	cbz	r0, 2699c <btrfs_print_tree@@Base+0x5a0>
   2697a:	ldr	r3, [r0, #32]
   2697c:	cbnz	r3, 2699c <btrfs_print_tree@@Base+0x5a0>
   2697e:	ldrd	r2, r1, [r0, #24]
   26982:	ldrd	r3, r7, [r0, #16]
   26986:	adds	r3, r3, r2
   26988:	str	r3, [sp, #0]
   2698a:	adc.w	r3, r7, r1
   2698e:	str	r3, [sp, #4]
   26990:	ldrd	r2, r3, [sp]
   26994:	cmp	r9, r3
   26996:	it	eq
   26998:	cmpeq	r8, r2
   2699a:	bcc.n	26924 <btrfs_print_tree@@Base+0x528>
   2699c:	ldr.w	r3, [sl, #28]
   269a0:	muls	r6, r3
   269a2:	ldrd	r2, r3, [r5, #16]
   269a6:	lsls	r6, r6, #3
   269a8:	adds	r2, r2, r6
   269aa:	adc.w	r3, r3, #0
   269ae:	cmp	r9, r3
   269b0:	it	eq
   269b2:	cmpeq	r8, r2
   269b4:	it	cc
   269b6:	movcc	r4, r5
   269b8:	b.n	269e2 <btrfs_print_tree@@Base+0x5e6>
   269ba:	ldr	r3, [r4, #32]
   269bc:	cbz	r3, 269e2 <btrfs_print_tree@@Base+0x5e6>
   269be:	mov	r0, r4
   269c0:	bl	13e92 <rb_prev@@Base>
   269c4:	cbz	r0, 269e2 <btrfs_print_tree@@Base+0x5e6>
   269c6:	ldr	r3, [r0, #32]
   269c8:	cbnz	r3, 269e2 <btrfs_print_tree@@Base+0x5e6>
   269ca:	ldrd	r3, r5, [r0, #16]
   269ce:	ldrd	r2, r1, [r0, #24]
   269d2:	adds	r6, r3, r2
   269d4:	adc.w	r7, r5, r1
   269d8:	cmp	r9, r7
   269da:	it	eq
   269dc:	cmpeq	r8, r6
   269de:	it	cc
   269e0:	movcc	r4, r0
   269e2:	mov	r0, r4
   269e4:	add	sp, #16
   269e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   269ea:	nop
   269ec:	str	r5, [sp, #788]	; 0x314
   269ee:	movs	r1, r0
   269f0:	str	r0, [sp, #892]	; 0x37c
   269f2:	movs	r1, r0
   269f4:	push	{r3, r4, r5, r6, r7, lr}
   269f6:	mov	r6, r0
   269f8:	ldr	r7, [r1, #32]
   269fa:	mov	r5, r1
   269fc:	cbnz	r7, 26a54 <btrfs_print_tree@@Base+0x658>
   269fe:	ldrd	r2, r3, [r1, #24]
   26a02:	orrs	r3, r2
   26a04:	ite	eq
   26a06:	moveq	r3, #1
   26a08:	movne	r3, #0
   26a0a:	ldr	r1, [pc, #128]	; (26a8c <btrfs_print_tree@@Base+0x690>)
   26a0c:	movw	r2, #685	; 0x2ad
   26a10:	ldr	r0, [pc, #124]	; (26a90 <btrfs_print_tree@@Base+0x694>)
   26a12:	add	r1, pc
   26a14:	adds	r1, #35	; 0x23
   26a16:	add	r0, pc
   26a18:	bl	26758 <btrfs_print_tree@@Base+0x35c>
   26a1c:	ldrd	r0, r1, [r5, #16]
   26a20:	mov	r3, r6
   26a22:	movs	r2, #0
   26a24:	ldr	r4, [r3, #0]
   26a26:	cbnz	r4, 26a58 <btrfs_print_tree@@Base+0x65c>
   26a28:	strd	r2, r4, [r5]
   26a2c:	mov	r1, r6
   26a2e:	mov	r0, r5
   26a30:	str	r4, [r5, #8]
   26a32:	str	r5, [r3, #0]
   26a34:	bl	13b2a <rb_insert_color@@Base>
   26a38:	ldrd	r1, r0, [r5, #24]
   26a3c:	ldrd	r3, r2, [r6, #8]
   26a40:	adds	r3, r3, r1
   26a42:	adc.w	r2, r0, r2
   26a46:	strd	r3, r2, [r6, #8]
   26a4a:	ldr	r3, [r6, #20]
   26a4c:	mov	r0, r4
   26a4e:	adds	r3, #1
   26a50:	str	r3, [r6, #20]
   26a52:	pop	{r3, r4, r5, r6, r7, pc}
   26a54:	movs	r3, #0
   26a56:	b.n	26a0a <btrfs_print_tree@@Base+0x60e>
   26a58:	ldrd	r2, r3, [r4, #16]
   26a5c:	cmp	r1, r3
   26a5e:	it	eq
   26a60:	cmpeq	r0, r2
   26a62:	bcs.n	26a6a <btrfs_print_tree@@Base+0x66e>
   26a64:	add.w	r3, r4, #8
   26a68:	b.n	26a74 <btrfs_print_tree@@Base+0x678>
   26a6a:	cmp	r3, r1
   26a6c:	it	eq
   26a6e:	cmpeq	r2, r0
   26a70:	bcs.n	26a78 <btrfs_print_tree@@Base+0x67c>
   26a72:	adds	r3, r4, #4
   26a74:	mov	r2, r4
   26a76:	b.n	26a24 <btrfs_print_tree@@Base+0x628>
   26a78:	ldr	r3, [r4, #32]
   26a7a:	cbz	r7, 26a86 <btrfs_print_tree@@Base+0x68a>
   26a7c:	cmp	r3, #0
   26a7e:	beq.n	26a72 <btrfs_print_tree@@Base+0x676>
   26a80:	mvn.w	r0, #16
   26a84:	b.n	26a52 <btrfs_print_tree@@Base+0x656>
   26a86:	cmp	r3, #0
   26a88:	bne.n	26a64 <btrfs_print_tree@@Base+0x668>
   26a8a:	b.n	26a80 <btrfs_print_tree@@Base+0x684>
   26a8c:	str	r5, [sp, #36]	; 0x24
   26a8e:	movs	r1, r0
   26a90:	str	r0, [sp, #240]	; 0xf0
   26a92:	movs	r1, r0
   26a94:	push	{r4, lr}
   26a96:	mov	r4, r1
   26a98:	ldr	r1, [pc, #84]	; (26af0 <btrfs_print_tree@@Base+0x6f4>)
   26a9a:	sub	sp, #24
   26a9c:	ldr	r3, [pc, #84]	; (26af4 <btrfs_print_tree@@Base+0x6f8>)
   26a9e:	add	r1, pc
   26aa0:	ldr	r3, [r1, r3]
   26aa2:	mov	r1, sp
   26aa4:	ldr	r3, [r3, #0]
   26aa6:	str	r3, [sp, #20]
   26aa8:	mov.w	r3, #0
   26aac:	movs	r3, #25
   26aae:	muls	r2, r3
   26ab0:	movs	r3, #17
   26ab2:	adds	r2, #101	; 0x65
   26ab4:	bl	1731a <read_extent_buffer@@Base>
   26ab8:	ldr.w	r3, [sp, #13]
   26abc:	ldr.w	r2, [sp, #9]
   26ac0:	str.w	r3, [r4, #13]
   26ac4:	ldrb.w	r3, [sp, #8]
   26ac8:	str.w	r2, [r4, #9]
   26acc:	ldr	r2, [pc, #40]	; (26af8 <btrfs_print_tree@@Base+0x6fc>)
   26ace:	strb	r3, [r4, #8]
   26ad0:	ldr	r3, [sp, #0]
   26ad2:	add	r2, pc
   26ad4:	str	r3, [r4, #0]
   26ad6:	ldr	r3, [sp, #4]
   26ad8:	str	r3, [r4, #4]
   26ada:	ldr	r3, [pc, #24]	; (26af4 <btrfs_print_tree@@Base+0x6f8>)
   26adc:	ldr	r3, [r2, r3]
   26ade:	ldr	r2, [r3, #0]
   26ae0:	ldr	r3, [sp, #20]
   26ae2:	eors	r2, r3
   26ae4:	beq.n	26aea <btrfs_print_tree@@Base+0x6ee>
   26ae6:	blx	84cc <__stack_chk_fail@plt>
   26aea:	add	sp, #24
   26aec:	pop	{r4, pc}
   26aee:	nop
   26af0:	b.n	270c8 <load_free_space_cache@@Base+0x3a8>
   26af2:	movs	r3, r0
   26af4:	lsls	r4, r4, #8
   26af6:	movs	r0, r0
   26af8:	b.n	27068 <load_free_space_cache@@Base+0x348>
   26afa:	movs	r3, r0

00026afc <unlink_free_space@@Base>:
   26afc:	push	{r3, r4, r5, lr}
   26afe:	mov	r5, r1
   26b00:	mov	r4, r0
   26b02:	mov	r1, r0
   26b04:	mov	r0, r5
   26b06:	bl	13bd0 <rb_erase@@Base>
   26b0a:	ldr	r3, [r4, #20]
   26b0c:	subs	r3, #1
   26b0e:	str	r3, [r4, #20]
   26b10:	ldrd	r3, r2, [r4, #8]
   26b14:	ldrd	r1, r0, [r5, #24]
   26b18:	subs	r3, r3, r1
   26b1a:	sbc.w	r2, r2, r0
   26b1e:	strd	r3, r2, [r4, #8]
   26b22:	pop	{r3, r4, r5, pc}

00026b24 <btrfs_find_free_space@@Base>:
   26b24:	b.n	268dc <btrfs_print_tree@@Base+0x4e0>

00026b26 <btrfs_dump_free_space@@Base>:
   26b26:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26b2a:	mov	r5, r0
   26b2c:	sub	sp, #36	; 0x24
   26b2e:	ldr	r0, [r0, #64]	; 0x40
   26b30:	mov	r9, r3
   26b32:	mov	r8, r2
   26b34:	bl	13e46 <rb_first@@Base>
   26b38:	ldr	r7, [pc, #112]	; (26bac <btrfs_dump_free_space@@Base+0x86>)
   26b3a:	ldr	r3, [pc, #116]	; (26bb0 <btrfs_dump_free_space@@Base+0x8a>)
   26b3c:	movs	r6, #0
   26b3e:	add	r7, pc
   26b40:	ldr	r7, [r7, r3]
   26b42:	ldr	r3, [pc, #112]	; (26bb4 <btrfs_dump_free_space@@Base+0x8e>)
   26b44:	add	r3, pc
   26b46:	str	r3, [sp, #24]
   26b48:	ldr	r3, [pc, #108]	; (26bb8 <btrfs_dump_free_space@@Base+0x92>)
   26b4a:	add	r3, pc
   26b4c:	str	r3, [sp, #28]
   26b4e:	mov	r4, r0
   26b50:	cbnz	r4, 26b66 <btrfs_dump_free_space@@Base+0x40>
   26b52:	ldr	r2, [pc, #104]	; (26bbc <btrfs_dump_free_space@@Base+0x96>)
   26b54:	mov	r3, r6
   26b56:	ldr	r0, [r7, #0]
   26b58:	movs	r1, #1
   26b5a:	add	r2, pc
   26b5c:	add	sp, #36	; 0x24
   26b5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26b62:	b.w	8818 <__fprintf_chk@plt>
   26b66:	ldrd	r2, r3, [r4, #24]
   26b6a:	cmp	r3, r9
   26b6c:	it	eq
   26b6e:	cmpeq	r2, r8
   26b70:	bcc.n	26b78 <btrfs_dump_free_space@@Base+0x52>
   26b72:	ldr	r1, [r5, #108]	; 0x6c
   26b74:	cbnz	r1, 26b78 <btrfs_dump_free_space@@Base+0x52>
   26b76:	adds	r6, #1
   26b78:	ldr	r1, [r4, #32]
   26b7a:	ldrd	sl, fp, [r4, #16]
   26b7e:	cmp	r1, #0
   26b80:	ldr	r1, [sp, #24]
   26b82:	ldr	r0, [r7, #0]
   26b84:	strd	r2, r3, [sp, #8]
   26b88:	mov	ip, r1
   26b8a:	ldr	r1, [sp, #28]
   26b8c:	ldr	r2, [pc, #48]	; (26bc0 <btrfs_dump_free_space@@Base+0x9a>)
   26b8e:	it	ne
   26b90:	movne	r1, ip
   26b92:	strd	sl, fp, [sp]
   26b96:	add	r2, pc
   26b98:	str	r1, [sp, #16]
   26b9a:	movs	r1, #1
   26b9c:	blx	881c <__fprintf_chk@plt+0x4>
   26ba0:	mov	r0, r4
   26ba2:	bl	13e66 <rb_next@@Base>
   26ba6:	mov	r4, r0
   26ba8:	b.n	26b50 <btrfs_dump_free_space@@Base+0x2a>
   26baa:	nop
   26bac:	b.n	27044 <load_free_space_cache@@Base+0x324>
   26bae:	movs	r3, r0
   26bb0:	lsls	r4, r6, #8
   26bb2:	movs	r0, r0
   26bb4:	ldrh	r4, [r5, #56]	; 0x38
   26bb6:	movs	r1, r0
   26bb8:	subs	r2, #191	; 0xbf
   26bba:	movs	r1, r0
   26bbc:	ldrh	r4, [r0, #58]	; 0x3a
   26bbe:	movs	r1, r0
   26bc0:	ldrh	r6, [r3, #54]	; 0x36
   26bc2:	movs	r1, r0

00026bc4 <btrfs_init_free_space_ctl@@Base>:
   26bc4:	push	{r3, r4, r5, lr}
   26bc6:	mov	r4, r0
   26bc8:	mov	r5, r1
   26bca:	movs	r0, #1
   26bcc:	movs	r1, #48	; 0x30
   26bce:	blx	8358 <calloc@plt+0x4>
   26bd2:	cbz	r0, 26be8 <btrfs_init_free_space_ctl@@Base+0x24>
   26bd4:	ldrd	r2, r3, [r4, #40]	; 0x28
   26bd8:	str	r5, [r0, #44]	; 0x2c
   26bda:	str	r5, [r0, #28]
   26bdc:	strd	r2, r3, [r0, #32]
   26be0:	str	r4, [r0, #40]	; 0x28
   26be2:	str	r0, [r4, #64]	; 0x40
   26be4:	movs	r0, #0
   26be6:	pop	{r3, r4, r5, pc}
   26be8:	mvn.w	r0, #11
   26bec:	b.n	26be6 <btrfs_init_free_space_ctl@@Base+0x22>

00026bee <__btrfs_remove_free_space_cache@@Base>:
   26bee:	push	{r3, r4, r5, lr}
   26bf0:	mov	r5, r0
   26bf2:	mov	r0, r5
   26bf4:	bl	13e56 <rb_last@@Base>
   26bf8:	mov	r4, r0
   26bfa:	cbnz	r0, 26bfe <__btrfs_remove_free_space_cache@@Base+0x10>
   26bfc:	pop	{r3, r4, r5, pc}
   26bfe:	mov	r1, r4
   26c00:	mov	r0, r5
   26c02:	bl	26afc <unlink_free_space@@Base>
   26c06:	ldr	r0, [r4, #32]
   26c08:	blx	83f0 <free@plt+0x4>
   26c0c:	mov	r0, r4
   26c0e:	blx	83f0 <free@plt+0x4>
   26c12:	b.n	26bf2 <__btrfs_remove_free_space_cache@@Base+0x4>

00026c14 <btrfs_remove_free_space_cache@@Base>:
   26c14:	ldr	r0, [r0, #64]	; 0x40
   26c16:	b.w	26bee <__btrfs_remove_free_space_cache@@Base>

00026c1a <btrfs_add_free_space@@Base>:
   26c1a:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26c1e:	mov	r9, r3
   26c20:	ldr	r3, [pc, #240]	; (26d14 <btrfs_add_free_space@@Base+0xfa>)
   26c22:	mov	r7, r0
   26c24:	movs	r1, #48	; 0x30
   26c26:	movs	r0, #1
   26c28:	add	r3, pc
   26c2a:	ldrd	r5, r6, [sp, #48]	; 0x30
   26c2e:	mov	r8, r2
   26c30:	str	r3, [sp, #4]
   26c32:	blx	8358 <calloc@plt+0x4>
   26c36:	mov	r4, r0
   26c38:	cmp	r0, #0
   26c3a:	beq.n	26d0c <btrfs_add_free_space@@Base+0xf2>
   26c3c:	adds.w	r2, r8, r5
   26c40:	strd	r5, r6, [r0, #24]
   26c44:	adc.w	r3, r9, r6
   26c48:	strd	r8, r9, [r0, #16]
   26c4c:	mov	r0, r7
   26c4e:	bl	268dc <btrfs_print_tree@@Base+0x4e0>
   26c52:	mov	r6, r0
   26c54:	cbz	r0, 26c8a <btrfs_add_free_space@@Base+0x70>
   26c56:	bl	13e92 <rb_prev@@Base>
   26c5a:	cbz	r0, 26c8a <btrfs_add_free_space@@Base+0x70>
   26c5c:	mov	r0, r6
   26c5e:	bl	13e92 <rb_prev@@Base>
   26c62:	mov	r5, r0
   26c64:	ldr	r3, [r6, #32]
   26c66:	cbnz	r3, 26c9e <btrfs_add_free_space@@Base+0x84>
   26c68:	mov	r1, r6
   26c6a:	mov	r0, r7
   26c6c:	bl	26afc <unlink_free_space@@Base>
   26c70:	ldrd	r1, r0, [r6, #24]
   26c74:	ldrd	r3, r2, [r4, #24]
   26c78:	adds	r3, r3, r1
   26c7a:	adc.w	r2, r0, r2
   26c7e:	mov	r0, r6
   26c80:	strd	r3, r2, [r4, #24]
   26c84:	blx	83f0 <free@plt+0x4>
   26c88:	b.n	26c9e <btrfs_add_free_space@@Base+0x84>
   26c8a:	adds.w	r2, r8, #4294967295	; 0xffffffff
   26c8e:	mov	r0, r7
   26c90:	adc.w	r3, r9, #4294967295	; 0xffffffff
   26c94:	bl	268dc <btrfs_print_tree@@Base+0x4e0>
   26c98:	mov	r5, r0
   26c9a:	cmp	r6, #0
   26c9c:	bne.n	26c64 <btrfs_add_free_space@@Base+0x4a>
   26c9e:	cbz	r5, 26ce4 <btrfs_add_free_space@@Base+0xca>
   26ca0:	ldr	r3, [r5, #32]
   26ca2:	cbnz	r3, 26ce4 <btrfs_add_free_space@@Base+0xca>
   26ca4:	ldrd	r3, r0, [r5, #16]
   26ca8:	ldrd	r2, r1, [r5, #24]
   26cac:	adds.w	sl, r3, r2
   26cb0:	adc.w	fp, r0, r1
   26cb4:	cmp	r9, fp
   26cb6:	it	eq
   26cb8:	cmpeq	r8, sl
   26cba:	bne.n	26ce4 <btrfs_add_free_space@@Base+0xca>
   26cbc:	mov	r1, r5
   26cbe:	mov	r0, r7
   26cc0:	bl	26afc <unlink_free_space@@Base>
   26cc4:	ldrd	r2, r3, [r5, #16]
   26cc8:	strd	r2, r3, [r4, #16]
   26ccc:	ldrd	r3, r2, [r4, #24]
   26cd0:	ldrd	r0, r1, [r5, #24]
   26cd4:	adds	r3, r3, r0
   26cd6:	mov	r0, r5
   26cd8:	adc.w	r2, r1, r2
   26cdc:	strd	r3, r2, [r4, #24]
   26ce0:	blx	83f0 <free@plt+0x4>
   26ce4:	mov	r1, r4
   26ce6:	mov	r0, r7
   26ce8:	bl	269f4 <btrfs_print_tree@@Base+0x5f8>
   26cec:	mov	r4, r0
   26cee:	cbz	r0, 26d04 <btrfs_add_free_space@@Base+0xea>
   26cf0:	ldr	r3, [pc, #36]	; (26d18 <btrfs_add_free_space@@Base+0xfe>)
   26cf2:	movs	r1, #1
   26cf4:	ldr	r2, [sp, #4]
   26cf6:	ldr	r0, [r2, r3]
   26cf8:	mov	r3, r4
   26cfa:	ldr	r2, [pc, #32]	; (26d1c <btrfs_add_free_space@@Base+0x102>)
   26cfc:	ldr	r0, [r0, #0]
   26cfe:	add	r2, pc
   26d00:	blx	881c <__fprintf_chk@plt+0x4>
   26d04:	mov	r0, r4
   26d06:	add	sp, #12
   26d08:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26d0c:	mvn.w	r4, #11
   26d10:	b.n	26d04 <btrfs_add_free_space@@Base+0xea>
   26d12:	nop
   26d14:	b.n	26fd8 <load_free_space_cache@@Base+0x2b8>
   26d16:	movs	r3, r0
   26d18:	lsls	r4, r6, #8
   26d1a:	movs	r0, r0
   26d1c:	ldrh	r5, [r2, #46]	; 0x2e
   26d1e:	movs	r1, r0

00026d20 <load_free_space_cache@@Base>:
   26d20:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26d24:	mov	r6, r0
   26d26:	vpush	{d8}
   26d2a:	ldr.w	r2, [pc, #2148]	; 27590 <load_free_space_cache@@Base+0x870>
   26d2e:	ldr.w	r3, [pc, #2148]	; 27594 <load_free_space_cache@@Base+0x874>
   26d32:	add	r2, pc
   26d34:	ldr.w	fp, [pc, #2144]	; 27598 <load_free_space_cache@@Base+0x878>
   26d38:	sub	sp, #244	; 0xf4
   26d3a:	ldr	r5, [r1, #64]	; 0x40
   26d3c:	add	fp, pc
   26d3e:	str	r1, [sp, #72]	; 0x48
   26d40:	ldr	r3, [r2, r3]
   26d42:	ldr	r3, [r3, #0]
   26d44:	str	r3, [sp, #236]	; 0xec
   26d46:	mov.w	r3, #0
   26d4a:	ldr	r3, [r1, #72]	; 0x48
   26d4c:	str	r3, [sp, #88]	; 0x58
   26d4e:	ldr	r3, [r1, #76]	; 0x4c
   26d50:	str	r3, [sp, #92]	; 0x5c
   26d52:	bl	17e50 <btrfs_alloc_path@@Base>
   26d56:	mov	r4, r0
   26d58:	cmp	r0, #0
   26d5a:	beq.w	2757e <load_free_space_cache@@Base+0x85e>
   26d5e:	ldr	r3, [sp, #72]	; 0x48
   26d60:	movs	r7, #0
   26d62:	ldr.w	r9, [r6, #28]
   26d66:	add	r1, sp, #96	; 0x60
   26d68:	mvn.w	r0, #10
   26d6c:	strd	r1, r1, [sp, #96]	; 0x60
   26d70:	ldrd	r2, r3, [r3, #40]	; 0x28
   26d74:	mov.w	r1, #4294967295	; 0xffffffff
   26d78:	strd	r7, r7, [sp]
   26d7c:	strd	r0, r1, [sp, #104]	; 0x68
   26d80:	mov	r1, r9
   26d82:	str.w	r2, [sp, #113]	; 0x71
   26d86:	mov	r0, r7
   26d88:	str.w	r3, [sp, #117]	; 0x75
   26d8c:	add	r2, sp, #104	; 0x68
   26d8e:	mov	r3, r4
   26d90:	strb.w	r7, [sp, #112]	; 0x70
   26d94:	bl	1a23c <btrfs_search_slot@@Base>
   26d98:	subs	r6, r0, #0
   26d9a:	blt.n	26da4 <load_free_space_cache@@Base+0x84>
   26d9c:	beq.n	26daa <load_free_space_cache@@Base+0x8a>
   26d9e:	mov	r0, r4
   26da0:	bl	17e58 <btrfs_release_path@@Base>
   26da4:	mov.w	r8, #0
   26da8:	b.n	26e6e <load_free_space_cache@@Base+0x14e>
   26daa:	ldr.w	ip, [r4]
   26dae:	movs	r7, #25
   26db0:	ldr	r2, [r4, #32]
   26db2:	add.w	r3, ip, #96	; 0x60
   26db6:	mla	r2, r7, r2, r3
   26dba:	ldr.w	r2, [r2, #118]	; 0x76
   26dbe:	adds	r2, #101	; 0x65
   26dc0:	add	r3, r2
   26dc2:	mov	r1, r3
   26dc4:	ldr.w	r0, [r1, #25]!
   26dc8:	ldr	r1, [r1, #4]
   26dca:	str	r0, [sp, #24]
   26dcc:	str	r1, [sp, #28]
   26dce:	mov	r1, r3
   26dd0:	ldr.w	r0, [r1, #33]!
   26dd4:	ldr	r1, [r1, #4]
   26dd6:	str	r0, [sp, #64]	; 0x40
   26dd8:	mov	r0, ip
   26dda:	str	r1, [sp, #76]	; 0x4c
   26ddc:	ldr.w	r1, [r3, #17]!
   26de0:	ldr	r3, [r3, #4]
   26de2:	str	r1, [sp, #40]	; 0x28
   26de4:	add	r1, sp, #144	; 0x90
   26de6:	str	r3, [sp, #44]	; 0x2c
   26de8:	movs	r3, #17
   26dea:	bl	1731a <read_extent_buffer@@Base>
   26dee:	ldr.w	r3, [sp, #157]	; 0x9d
   26df2:	ldr.w	r2, [sp, #153]	; 0x99
   26df6:	mov	r0, r4
   26df8:	str.w	r3, [sp, #137]	; 0x89
   26dfc:	ldrb.w	r3, [sp, #152]	; 0x98
   26e00:	str.w	r2, [sp, #133]	; 0x85
   26e04:	strb.w	r3, [sp, #132]	; 0x84
   26e08:	ldr	r3, [sp, #144]	; 0x90
   26e0a:	str	r3, [sp, #124]	; 0x7c
   26e0c:	ldr	r3, [sp, #148]	; 0x94
   26e0e:	str	r3, [sp, #128]	; 0x80
   26e10:	bl	17e58 <btrfs_release_path@@Base>
   26e14:	add	r2, sp, #124	; 0x7c
   26e16:	mov	r3, r4
   26e18:	mov	r1, r9
   26e1a:	mov	r0, r6
   26e1c:	strd	r6, r6, [sp]
   26e20:	bl	1a23c <btrfs_search_slot@@Base>
   26e24:	mov	r8, r0
   26e26:	cbz	r0, 26e42 <load_free_space_cache@@Base+0x122>
   26e28:	ldr.w	r3, [pc, #1904]	; 2759c <load_free_space_cache@@Base+0x87c>
   26e2c:	movs	r1, #1
   26e2e:	ldr.w	r2, [pc, #1904]	; 275a0 <load_free_space_cache@@Base+0x880>
   26e32:	ldr.w	r0, [fp, r3]
   26e36:	add	r2, pc
   26e38:	mov	r3, r8
   26e3a:	ldr	r0, [r0, #0]
   26e3c:	blx	881c <__fprintf_chk@plt+0x4>
   26e40:	b.n	26da4 <load_free_space_cache@@Base+0x84>
   26e42:	ldr	r3, [r4, #0]
   26e44:	ldr	r2, [r4, #32]
   26e46:	adds	r3, #96	; 0x60
   26e48:	mla	r7, r7, r2, r3
   26e4c:	ldr.w	r2, [r7, #118]	; 0x76
   26e50:	adds	r2, #101	; 0x65
   26e52:	add	r3, r2
   26e54:	ldr	r6, [r3, #16]
   26e56:	ldr	r7, [r3, #20]
   26e58:	orrs.w	r2, r6, r7
   26e5c:	beq.n	26e68 <load_free_space_cache@@Base+0x148>
   26e5e:	ldr	r0, [r3, #0]
   26e60:	ldr	r1, [r3, #4]
   26e62:	orrs.w	r3, r0, r1
   26e66:	bne.n	26f32 <load_free_space_cache@@Base+0x212>
   26e68:	mov	r0, r4
   26e6a:	bl	17e58 <btrfs_release_path@@Base>
   26e6e:	mov	r0, r4
   26e70:	bl	17e7e <btrfs_free_path@@Base>
   26e74:	ldr	r3, [sp, #72]	; 0x48
   26e76:	ldrd	r4, r6, [r5, #8]
   26e7a:	ldr.w	r2, [r3, #49]	; 0x31
   26e7e:	ldr.w	r0, [r3, #53]	; 0x35
   26e82:	ldrd	r1, r7, [r3, #80]	; 0x50
   26e86:	ldr	r3, [sp, #88]	; 0x58
   26e88:	adds	r1, r3, r1
   26e8a:	ldr	r3, [sp, #92]	; 0x5c
   26e8c:	adc.w	r7, r3, r7
   26e90:	adds	r3, r4, r1
   26e92:	adc.w	ip, r6, r7
   26e96:	subs	r3, r3, r2
   26e98:	str	r3, [sp, #56]	; 0x38
   26e9a:	sbc.w	r3, ip, r0
   26e9e:	cmp.w	r8, #1
   26ea2:	str	r3, [sp, #60]	; 0x3c
   26ea4:	bne.w	27566 <load_free_space_cache@@Base+0x846>
   26ea8:	ldrd	r9, sl, [sp, #56]	; 0x38
   26eac:	orrs.w	r3, r9, sl
   26eb0:	beq.n	26f18 <load_free_space_cache@@Base+0x1f8>
   26eb2:	ldr.w	r3, [pc, #1768]	; 2759c <load_free_space_cache@@Base+0x87c>
   26eb6:	subs	r2, r2, r1
   26eb8:	sbc.w	r0, r0, r7
   26ebc:	ldr.w	r3, [fp, r3]
   26ec0:	strd	r2, r0, [sp, #16]
   26ec4:	ldr	r2, [sp, #72]	; 0x48
   26ec6:	strd	r4, r6, [sp, #8]
   26eca:	ldrd	r0, r1, [r2, #40]	; 0x28
   26ece:	ldr.w	r2, [pc, #1748]	; 275a4 <load_free_space_cache@@Base+0x884>
   26ed2:	strd	r0, r1, [sp]
   26ed6:	add	r2, pc
   26ed8:	ldr	r0, [r3, #0]
   26eda:	mov	r1, r8
   26edc:	blx	881c <__fprintf_chk@plt+0x4>
   26ee0:	mov	r0, r5
   26ee2:	bl	26bee <__btrfs_remove_free_space_cache@@Base>
   26ee6:	ldrd	r3, r4, [sp, #56]	; 0x38
   26eea:	cmp	r3, #1
   26eec:	sbcs.w	r3, r4, #0
   26ef0:	bge.w	27558 <load_free_space_cache@@Base+0x838>
   26ef4:	mov.w	r8, #0
   26ef8:	ldr	r2, [sp, #72]	; 0x48
   26efa:	ldr.w	r3, [pc, #1696]	; 2759c <load_free_space_cache@@Base+0x87c>
   26efe:	ldrd	r0, r1, [r2, #40]	; 0x28
   26f02:	ldr.w	r3, [fp, r3]
   26f06:	ldr.w	r2, [pc, #1696]	; 275a8 <load_free_space_cache@@Base+0x888>
   26f0a:	strd	r0, r1, [sp]
   26f0e:	movs	r1, #1
   26f10:	ldr	r0, [r3, #0]
   26f12:	add	r2, pc
   26f14:	blx	881c <__fprintf_chk@plt+0x4>
   26f18:	ldr.w	r2, [pc, #1680]	; 275ac <load_free_space_cache@@Base+0x88c>
   26f1c:	ldr.w	r3, [pc, #1652]	; 27594 <load_free_space_cache@@Base+0x874>
   26f20:	add	r2, pc
   26f22:	ldr	r3, [r2, r3]
   26f24:	ldr	r2, [r3, #0]
   26f26:	ldr	r3, [sp, #236]	; 0xec
   26f28:	eors	r2, r3
   26f2a:	beq.w	27582 <load_free_space_cache@@Base+0x862>
   26f2e:	blx	84cc <__stack_chk_fail@plt>
   26f32:	ldrd	r2, r3, [sp, #40]	; 0x28
   26f36:	cmp	r3, r1
   26f38:	it	eq
   26f3a:	cmpeq	r2, r0
   26f3c:	beq.n	26f62 <load_free_space_cache@@Base+0x242>
   26f3e:	ldr.w	r3, [pc, #1628]	; 2759c <load_free_space_cache@@Base+0x87c>
   26f42:	ldrd	r6, r7, [sp, #40]	; 0x28
   26f46:	ldr.w	r2, [pc, #1640]	; 275b0 <load_free_space_cache@@Base+0x890>
   26f4a:	ldr.w	r3, [fp, r3]
   26f4e:	add	r2, pc
   26f50:	strd	r0, r1, [sp]
   26f54:	strd	r6, r7, [sp, #8]
   26f58:	movs	r1, #1
   26f5a:	ldr	r0, [r3, #0]
   26f5c:	blx	881c <__fprintf_chk@plt+0x4>
   26f60:	b.n	26e68 <load_free_space_cache@@Base+0x148>
   26f62:	mov	r0, r4
   26f64:	bl	17e58 <btrfs_release_path@@Base>
   26f68:	ldrd	r2, r3, [sp, #24]
   26f6c:	orrs	r3, r2
   26f6e:	beq.w	26da4 <load_free_space_cache@@Base+0x84>
   26f72:	ldr	r3, [sp, #124]	; 0x7c
   26f74:	movs	r2, #48	; 0x30
   26f76:	mov	r1, r8
   26f78:	add	r0, sp, #184	; 0xb8
   26f7a:	str	r3, [sp, #32]
   26f7c:	ldr	r3, [sp, #128]	; 0x80
   26f7e:	str	r3, [sp, #36]	; 0x24
   26f80:	blx	8780 <memset@plt+0x4>
   26f84:	ldr.w	r3, [r9, #464]	; 0x1d0
   26f88:	ldr.w	r2, [r3, #388]	; 0x184
   26f8c:	movs	r3, #0
   26f8e:	adds.w	r0, r2, #4294967295	; 0xffffffff
   26f92:	adc.w	r1, r3, #4294967295	; 0xffffffff
   26f96:	adds	r0, r0, r6
   26f98:	adc.w	r1, r7, r1
   26f9c:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   26fa0:	mov	r1, r6
   26fa2:	str	r0, [sp, #220]	; 0xdc
   26fa4:	movs	r0, #1
   26fa6:	blx	8358 <calloc@plt+0x4>
   26faa:	str	r0, [sp, #192]	; 0xc0
   26fac:	cmp	r0, #0
   26fae:	beq.w	27552 <load_free_space_cache@@Base+0x832>
   26fb2:	ldrd	r0, r1, [sp, #32]
   26fb6:	mov.w	r3, #4294967295	; 0xffffffff
   26fba:	mvn.w	r2, #11
   26fbe:	strd	r6, r7, [sp, #208]	; 0xd0
   26fc2:	cmp	r1, r3
   26fc4:	add	r7, sp, #164	; 0xa4
   26fc6:	it	eq
   26fc8:	cmpeq	r0, r2
   26fca:	mov	r1, r9
   26fcc:	mov.w	r0, #0
   26fd0:	mov	r2, r7
   26fd2:	it	ne
   26fd4:	ldrbne.w	r3, [sp, #224]	; 0xe0
   26fd8:	strd	r0, r0, [sp]
   26fdc:	it	ne
   26fde:	orrne.w	r3, r3, #1
   26fe2:	str.w	r9, [sp, #196]	; 0xc4
   26fe6:	it	ne
   26fe8:	strbne.w	r3, [sp, #224]	; 0xe0
   26fec:	ldr	r3, [sp, #32]
   26fee:	strb.w	r0, [sp, #173]	; 0xad
   26ff2:	strb.w	r0, [sp, #174]	; 0xae
   26ff6:	str	r3, [sp, #164]	; 0xa4
   26ff8:	ldr	r3, [sp, #36]	; 0x24
   26ffa:	strb.w	r0, [sp, #175]	; 0xaf
   26ffe:	strb.w	r0, [sp, #176]	; 0xb0
   27002:	str	r3, [sp, #168]	; 0xa8
   27004:	movs	r3, #108	; 0x6c
   27006:	strb.w	r3, [sp, #172]	; 0xac
   2700a:	mov	r3, r4
   2700c:	strb.w	r0, [sp, #177]	; 0xb1
   27010:	strb.w	r0, [sp, #178]	; 0xb2
   27014:	strb.w	r0, [sp, #179]	; 0xb3
   27018:	strb.w	r0, [sp, #180]	; 0xb4
   2701c:	bl	1a23c <btrfs_search_slot@@Base>
   27020:	cmp	r0, #0
   27022:	beq.w	271c6 <load_free_space_cache@@Base+0x4a6>
   27026:	ldr.w	r3, [pc, #1396]	; 2759c <load_free_space_cache@@Base+0x87c>
   2702a:	mvn.w	r8, #21
   2702e:	ldrd	r1, r2, [sp, #32]
   27032:	ldr.w	r3, [fp, r3]
   27036:	strd	r1, r2, [sp]
   2703a:	movs	r1, #1
   2703c:	ldr.w	r2, [pc, #1396]	; 275b4 <load_free_space_cache@@Base+0x894>
   27040:	ldr	r0, [r3, #0]
   27042:	add	r2, pc
   27044:	blx	881c <__fprintf_chk@plt+0x4>
   27048:	mov	r0, r4
   2704a:	bl	17e58 <btrfs_release_path@@Base>
   2704e:	ldr	r0, [sp, #192]	; 0xc0
   27050:	blx	83f0 <free@plt+0x4>
   27054:	b.n	26e6e <load_free_space_cache@@Base+0x14e>
   27056:	ldr	r3, [r4, #0]
   27058:	ldr	r2, [r4, #32]
   2705a:	ldr.w	r3, [r3, #192]	; 0xc0
   2705e:	cmp	r2, r3
   27060:	bcs.n	27106 <load_free_space_cache@@Base+0x3e6>
   27062:	ldr	r7, [r4, #0]
   27064:	vmov	r1, s16
   27068:	ldr	r2, [r4, #32]
   2706a:	mov	r0, r7
   2706c:	bl	26a94 <btrfs_print_tree@@Base+0x698>
   27070:	ldrd	r2, r3, [sp, #164]	; 0xa4
   27074:	ldrd	r0, r1, [sp, #32]
   27078:	cmp	r1, r3
   2707a:	it	eq
   2707c:	cmpeq	r0, r2
   2707e:	beq.n	2711a <load_free_space_cache@@Base+0x3fa>
   27080:	mvn.w	r8, #21
   27084:	mov	r0, r4
   27086:	bl	17e58 <btrfs_release_path@@Base>
   2708a:	cmp.w	r8, #0
   2708e:	bne.n	2704e <load_free_space_cache@@Base+0x32e>
   27090:	mov	r1, r8
   27092:	add	r0, sp, #184	; 0xb8
   27094:	bl	2682c <btrfs_print_tree@@Base+0x430>
   27098:	mov	r8, r0
   2709a:	cbnz	r0, 270f8 <load_free_space_cache@@Base+0x3d8>
   2709c:	ldrb.w	r2, [sp, #224]	; 0xe0
   270a0:	ldr	r3, [sp, #184]	; 0xb8
   270a2:	lsls	r2, r2, #31
   270a4:	ldr	r1, [sp, #200]	; 0xc8
   270a6:	bpl.w	271d6 <load_free_space_cache@@Base+0x4b6>
   270aa:	ldr	r0, [sp, #220]	; 0xdc
   270ac:	lsls	r2, r0, #2
   270ae:	add.w	r3, r3, r0, lsl #2
   270b2:	str	r3, [sp, #184]	; 0xb8
   270b4:	add.w	r3, r2, #8
   270b8:	subs	r3, r1, r3
   270ba:	str	r3, [sp, #200]	; 0xc8
   270bc:	ldr	r3, [sp, #184]	; 0xb8
   270be:	ldrd	r6, r7, [sp, #40]	; 0x28
   270c2:	ldrd	r0, r1, [r3]
   270c6:	cmp	r7, r1
   270c8:	it	eq
   270ca:	cmpeq	r6, r0
   270cc:	beq.w	271e0 <load_free_space_cache@@Base+0x4c0>
   270d0:	ldr.w	r3, [pc, #1224]	; 2759c <load_free_space_cache@@Base+0x87c>
   270d4:	mvn.w	r8, #4
   270d8:	ldr.w	r2, [pc, #1244]	; 275b8 <load_free_space_cache@@Base+0x898>
   270dc:	ldr.w	r3, [fp, r3]
   270e0:	add	r2, pc
   270e2:	strd	r0, r1, [sp]
   270e6:	movs	r1, #1
   270e8:	strd	r6, r7, [sp, #8]
   270ec:	ldr	r0, [r3, #0]
   270ee:	blx	881c <__fprintf_chk@plt+0x4>
   270f2:	add	r0, sp, #184	; 0xb8
   270f4:	bl	266e8 <btrfs_print_tree@@Base+0x2ec>
   270f8:	add	r0, sp, #184	; 0xb8
   270fa:	bl	266e8 <btrfs_print_tree@@Base+0x2ec>
   270fe:	mov	r0, r5
   27100:	bl	26bee <__btrfs_remove_free_space_cache@@Base>
   27104:	b.n	2704e <load_free_space_cache@@Base+0x32e>
   27106:	strb.w	r6, [r4, #65]	; 0x41
   2710a:	mov	r1, r4
   2710c:	ldr.w	r0, [r9, #464]	; 0x1d0
   27110:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   27114:	cmp	r0, #0
   27116:	beq.n	27062 <load_free_space_cache@@Base+0x342>
   27118:	b.n	27080 <load_free_space_cache@@Base+0x360>
   2711a:	ldrb.w	r3, [sp, #172]	; 0xac
   2711e:	cmp	r3, #108	; 0x6c
   27120:	bne.n	27080 <load_free_space_cache@@Base+0x360>
   27122:	ldr	r3, [r4, #0]
   27124:	movs	r1, #25
   27126:	ldr	r2, [r4, #32]
   27128:	adds	r3, #96	; 0x60
   2712a:	mla	r2, r1, r2, r3
   2712e:	ldr.w	r0, [r2, #118]	; 0x76
   27132:	add.w	r2, r0, #101	; 0x65
   27136:	add	r3, r2
   27138:	ldrb	r3, [r3, #20]
   2713a:	cmp	r3, #1
   2713c:	beq.n	27154 <load_free_space_cache@@Base+0x434>
   2713e:	ldr.w	r3, [pc, #1116]	; 2759c <load_free_space_cache@@Base+0x87c>
   27142:	ldr.w	r0, [pc, #1144]	; 275bc <load_free_space_cache@@Base+0x89c>
   27146:	ldr.w	r3, [fp, r3]
   2714a:	add	r0, pc
   2714c:	ldr	r1, [r3, #0]
   2714e:	blx	8930 <fputs@plt+0x4>
   27152:	b.n	27080 <load_free_space_cache@@Base+0x360>
   27154:	add.w	r0, r7, #96	; 0x60
   27158:	ldr.w	r1, [sp, #173]	; 0xad
   2715c:	add	r0, r2
   2715e:	mov	r3, r0
   27160:	ldr.w	r7, [r3, #45]!
   27164:	ldr.w	sl, [r3, #4]
   27168:	mov	r3, r0
   2716a:	ldr.w	r2, [r3, #21]!
   2716e:	ldr.w	lr, [r0, #37]!
   27172:	ldr.w	ip, [r3, #4]
   27176:	adds.w	r2, r2, lr
   2717a:	ldr	r3, [r0, #4]
   2717c:	ldr	r0, [sp, #192]	; 0xc0
   2717e:	str	r6, [sp, #8]
   27180:	adc.w	r3, ip, r3
   27184:	add	r1, r0
   27186:	strd	r7, sl, [sp]
   2718a:	ldr.w	r0, [r9, #464]	; 0x1d0
   2718e:	bl	16eaa <read_data_from_disk@@Base>
   27192:	mov	r8, r0
   27194:	cmp	r0, #0
   27196:	bne.w	27084 <load_free_space_cache@@Base+0x364>
   2719a:	ldr	r3, [sp, #48]	; 0x30
   2719c:	adds	r3, r3, r7
   2719e:	str	r3, [sp, #48]	; 0x30
   271a0:	ldr	r3, [sp, #52]	; 0x34
   271a2:	adc.w	r3, r3, sl
   271a6:	str	r3, [sp, #52]	; 0x34
   271a8:	ldr	r3, [r4, #32]
   271aa:	adds	r3, #1
   271ac:	str	r3, [r4, #32]
   271ae:	ldrd	r2, r3, [sp, #208]	; 0xd0
   271b2:	ldrd	r0, r1, [sp, #48]	; 0x30
   271b6:	cmp	r1, r3
   271b8:	it	eq
   271ba:	cmpeq	r0, r2
   271bc:	bcc.w	27056 <load_free_space_cache@@Base+0x336>
   271c0:	mov.w	r8, #0
   271c4:	b.n	27084 <load_free_space_cache@@Base+0x364>
   271c6:	movs	r2, #0
   271c8:	movs	r3, #0
   271ca:	vmov	s16, r7
   271ce:	mov	r6, r0
   271d0:	strd	r2, r3, [sp, #48]	; 0x30
   271d4:	b.n	271ae <load_free_space_cache@@Base+0x48e>
   271d6:	adds	r3, #8
   271d8:	subs	r1, #16
   271da:	str	r3, [sp, #184]	; 0xb8
   271dc:	str	r1, [sp, #200]	; 0xc8
   271de:	b.n	270bc <load_free_space_cache@@Base+0x39c>
   271e0:	ldr	r7, [pc, #988]	; (275c0 <load_free_space_cache@@Base+0x8a0>)
   271e2:	adds	r3, #8
   271e4:	ldr.w	r9, [pc, #988]	; 275c4 <load_free_space_cache@@Base+0x8a4>
   271e8:	add	r7, pc
   271ea:	str	r3, [sp, #184]	; 0xb8
   271ec:	adds	r7, #51	; 0x33
   271ee:	add	r9, pc
   271f0:	movs	r1, #48	; 0x30
   271f2:	movs	r0, #1
   271f4:	blx	8358 <calloc@plt+0x4>
   271f8:	mov	r6, r0
   271fa:	cmp	r0, #0
   271fc:	beq.w	270f8 <load_free_space_cache@@Base+0x3d8>
   27200:	ldr	r3, [sp, #184]	; 0xb8
   27202:	cbz	r3, 27246 <load_free_space_cache@@Base+0x526>
   27204:	ldr	r3, [sp, #184]	; 0xb8
   27206:	adds	r3, #17
   27208:	ldr.w	r1, [r3, #-17]
   2720c:	ldr.w	r2, [r3, #-13]
   27210:	strd	r1, r2, [r6, #16]
   27214:	ldr.w	r1, [r3, #-9]
   27218:	ldr.w	r2, [r3, #-5]
   2721c:	strd	r1, r2, [r6, #24]
   27220:	ldrb.w	r1, [r3, #-1]
   27224:	str	r3, [sp, #184]	; 0xb8
   27226:	ldr	r3, [sp, #200]	; 0xc8
   27228:	subs	r3, #17
   2722a:	str	r3, [sp, #200]	; 0xc8
   2722c:	cmp	r3, #16
   2722e:	bhi.n	27236 <load_free_space_cache@@Base+0x516>
   27230:	add	r0, sp, #184	; 0xb8
   27232:	bl	266e8 <btrfs_print_tree@@Base+0x2ec>
   27236:	ldrd	r2, r3, [r6, #24]
   2723a:	orrs	r3, r2
   2723c:	bne.n	2725e <load_free_space_cache@@Base+0x53e>
   2723e:	mov	r0, r6
   27240:	blx	83f0 <free@plt+0x4>
   27244:	b.n	270f8 <load_free_space_cache@@Base+0x3d8>
   27246:	ldr	r1, [sp, #216]	; 0xd8
   27248:	add	r0, sp, #184	; 0xb8
   2724a:	bl	2682c <btrfs_print_tree@@Base+0x430>
   2724e:	mov	sl, r0
   27250:	cmp	r0, #0
   27252:	beq.n	27204 <load_free_space_cache@@Base+0x4e4>
   27254:	mov	r0, r6
   27256:	mov	r8, sl
   27258:	blx	83f0 <free@plt+0x4>
   2725c:	b.n	270f8 <load_free_space_cache@@Base+0x3d8>
   2725e:	cmp	r1, #1
   27260:	bne.n	27282 <load_free_space_cache@@Base+0x562>
   27262:	mov	r1, r6
   27264:	mov	r0, r5
   27266:	bl	269f4 <btrfs_print_tree@@Base+0x5f8>
   2726a:	mov	sl, r0
   2726c:	cmp	r0, #0
   2726e:	beq.n	272f2 <load_free_space_cache@@Base+0x5d2>
   27270:	ldr	r3, [pc, #808]	; (2759c <load_free_space_cache@@Base+0x87c>)
   27272:	ldr	r0, [pc, #852]	; (275c8 <load_free_space_cache@@Base+0x8a8>)
   27274:	ldr.w	r3, [fp, r3]
   27278:	add	r0, pc
   2727a:	ldr	r1, [r3, #0]
   2727c:	blx	8930 <fputs@plt+0x4>
   27280:	b.n	27254 <load_free_space_cache@@Base+0x534>
   27282:	ldr	r3, [sp, #64]	; 0x40
   27284:	mov	r1, r7
   27286:	ldr	r2, [sp, #76]	; 0x4c
   27288:	mov	r0, r9
   2728a:	orrs	r3, r2
   2728c:	movw	r2, #387	; 0x183
   27290:	ite	eq
   27292:	moveq	r3, #1
   27294:	movne	r3, #0
   27296:	bl	26758 <btrfs_print_tree@@Base+0x35c>
   2729a:	ldr	r3, [sp, #64]	; 0x40
   2729c:	ldr	r1, [r5, #44]	; 0x2c
   2729e:	movs	r0, #1
   272a0:	adds.w	r3, r3, #4294967295	; 0xffffffff
   272a4:	str	r3, [sp, #64]	; 0x40
   272a6:	ldr	r3, [sp, #76]	; 0x4c
   272a8:	adc.w	r3, r3, #4294967295	; 0xffffffff
   272ac:	str	r3, [sp, #76]	; 0x4c
   272ae:	blx	8358 <calloc@plt+0x4>
   272b2:	str	r0, [r6, #32]
   272b4:	cmp	r0, #0
   272b6:	beq.n	2723e <load_free_space_cache@@Base+0x51e>
   272b8:	mov	r1, r6
   272ba:	mov	r0, r5
   272bc:	bl	269f4 <btrfs_print_tree@@Base+0x5f8>
   272c0:	ldr	r3, [r5, #24]
   272c2:	adds	r3, #1
   272c4:	str	r3, [r5, #24]
   272c6:	mov	sl, r0
   272c8:	cbz	r0, 272e2 <load_free_space_cache@@Base+0x5c2>
   272ca:	ldr	r3, [pc, #720]	; (2759c <load_free_space_cache@@Base+0x87c>)
   272cc:	ldr	r0, [pc, #764]	; (275cc <load_free_space_cache@@Base+0x8ac>)
   272ce:	ldr.w	r3, [fp, r3]
   272d2:	add	r0, pc
   272d4:	ldr	r1, [r3, #0]
   272d6:	blx	8930 <fputs@plt+0x4>
   272da:	ldr	r0, [r6, #32]
   272dc:	blx	83f0 <free@plt+0x4>
   272e0:	b.n	27254 <load_free_space_cache@@Base+0x534>
   272e2:	ldr	r3, [sp, #100]	; 0x64
   272e4:	add.w	r2, r6, #36	; 0x24
   272e8:	add	r1, sp, #96	; 0x60
   272ea:	str	r2, [sp, #100]	; 0x64
   272ec:	strd	r1, r3, [r6, #36]	; 0x24
   272f0:	str	r2, [r3, #0]
   272f2:	ldr	r3, [sp, #24]
   272f4:	adds.w	r3, r3, #4294967295	; 0xffffffff
   272f8:	str	r3, [sp, #24]
   272fa:	ldr	r3, [sp, #28]
   272fc:	adc.w	r3, r3, #4294967295	; 0xffffffff
   27300:	str	r3, [sp, #28]
   27302:	ldrd	r2, r3, [sp, #24]
   27306:	orrs	r3, r2
   27308:	bne.w	271f0 <load_free_space_cache@@Base+0x4d0>
   2730c:	add.w	sl, sp, #184	; 0xb8
   27310:	add.w	r9, sp, #96	; 0x60
   27314:	mov	r0, sl
   27316:	bl	266e8 <btrfs_print_tree@@Base+0x2ec>
   2731a:	ldr	r6, [sp, #96]	; 0x60
   2731c:	ldr.w	r7, [r6], #-36
   27320:	subs	r7, #36	; 0x24
   27322:	add.w	r3, r6, #36	; 0x24
   27326:	cmp	r3, r9
   27328:	bne.n	2735c <load_free_space_cache@@Base+0x63c>
   2732a:	mov	r0, sl
   2732c:	bl	266e8 <btrfs_print_tree@@Base+0x2ec>
   27330:	ldr	r3, [r5, #44]	; 0x2c
   27332:	str	r3, [sp, #48]	; 0x30
   27334:	ldr	r3, [pc, #664]	; (275d0 <load_free_space_cache@@Base+0x8b0>)
   27336:	add	r3, pc
   27338:	adds	r3, #75	; 0x4b
   2733a:	vmov	s16, r3
   2733e:	ldr	r3, [pc, #660]	; (275d4 <load_free_space_cache@@Base+0x8b4>)
   27340:	add	r3, pc
   27342:	vmov	s17, r3
   27346:	mov	r0, r5
   27348:	movs	r6, #0
   2734a:	bl	13e46 <rb_first@@Base>
   2734e:	mov	sl, r0
   27350:	cmp.w	sl, #0
   27354:	bne.n	2739a <load_free_space_cache@@Base+0x67a>
   27356:	mov.w	r8, #1
   2735a:	b.n	2704e <load_free_space_cache@@Base+0x32e>
   2735c:	ldrd	r1, r2, [r6, #36]	; 0x24
   27360:	mov	r0, sl
   27362:	str	r2, [r1, #4]
   27364:	str	r1, [r2, #0]
   27366:	ldr	r1, [sp, #216]	; 0xd8
   27368:	strd	r3, r3, [r6, #36]	; 0x24
   2736c:	bl	2682c <btrfs_print_tree@@Base+0x430>
   27370:	mov	r8, r0
   27372:	cmp	r0, #0
   27374:	bne.w	270f8 <load_free_space_cache@@Base+0x3d8>
   27378:	ldr	r3, [sp, #196]	; 0xc4
   2737a:	ldr	r1, [sp, #184]	; 0xb8
   2737c:	ldr	r0, [r6, #32]
   2737e:	mov	r6, r7
   27380:	ldr.w	r3, [r3, #464]	; 0x1d0
   27384:	ldr.w	r2, [r3, #388]	; 0x184
   27388:	blx	843c <memcpy@plt+0x4>
   2738c:	mov	r0, sl
   2738e:	bl	266e8 <btrfs_print_tree@@Base+0x2ec>
   27392:	ldr	r3, [r7, #36]	; 0x24
   27394:	sub.w	r7, r3, #36	; 0x24
   27398:	b.n	27322 <load_free_space_cache@@Base+0x602>
   2739a:	ldr.w	r3, [sl, #32]
   2739e:	cmp	r3, #0
   273a0:	beq.w	274f0 <load_free_space_cache@@Base+0x7d0>
   273a4:	ldrd	r2, r3, [sl, #16]
   273a8:	mov	r0, r5
   273aa:	strd	r2, r3, [sp, #24]
   273ae:	ldr	r3, [r5, #28]
   273b0:	asrs	r2, r3, #31
   273b2:	mov	r1, r3
   273b4:	strd	r1, r2, [sp, #40]	; 0x28
   273b8:	ldr	r2, [sp, #48]	; 0x30
   273ba:	muls	r3, r2
   273bc:	ldrd	r1, r2, [sp, #24]
   273c0:	lsls	r3, r3, #3
   273c2:	adds	r1, r1, r3
   273c4:	adc.w	r2, r2, #0
   273c8:	strd	r1, r2, [sp, #64]	; 0x40
   273cc:	mov	r1, sl
   273ce:	bl	26afc <unlink_free_space@@Base>
   273d2:	ldrd	r2, r3, [sl, #16]
   273d6:	ldrd	r0, r1, [sp, #24]
   273da:	ldr	r6, [r5, #28]
   273dc:	cmp	r3, r1
   273de:	strd	r2, r3, [sp, #32]
   273e2:	it	eq
   273e4:	cmpeq	r2, r0
   273e6:	mov	r8, r2
   273e8:	mov	r9, r3
   273ea:	ldrd	r2, r3, [sp, #32]
   273ee:	itt	cc
   273f0:	movcc	r8, r0
   273f2:	movcc	r9, r1
   273f4:	cmp	r9, r3
   273f6:	vmov	r1, s16
   273fa:	it	eq
   273fc:	cmpeq	r8, r2
   273fe:	vmov	r0, s17
   27402:	movw	r2, #491	; 0x1eb
   27406:	ite	cc
   27408:	movcc	r3, #1
   2740a:	movcs	r3, #0
   2740c:	bl	26758 <btrfs_print_tree@@Base+0x35c>
   27410:	ldr	r1, [sp, #32]
   27412:	mov	r2, r6
   27414:	movs	r3, #0
   27416:	subs.w	r0, r8, r1
   2741a:	ldr	r1, [sp, #36]	; 0x24
   2741c:	sbc.w	r1, r9, r1
   27420:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   27424:	movs	r3, #0
   27426:	mov	r2, r6
   27428:	mov	r7, r0
   2742a:	ldrd	r0, r1, [sp, #40]	; 0x28
   2742e:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   27432:	ldr	r3, [r5, #44]	; 0x2c
   27434:	ldr.w	r9, [sl, #32]
   27438:	cmp.w	r7, r3, lsl #3
   2743c:	mov.w	r8, r3, lsl #3
   27440:	str	r0, [sp, #40]	; 0x28
   27442:	bcs.n	27486 <load_free_space_cache@@Base+0x766>
   27444:	movs	r3, #0
   27446:	mov	r2, r7
   27448:	mov	r1, r8
   2744a:	mov	r0, r9
   2744c:	bl	266f4 <btrfs_print_tree@@Base+0x2f8>
   27450:	mov	r7, r0
   27452:	cmp	r8, r7
   27454:	bhi.n	27466 <load_free_space_cache@@Base+0x746>
   27456:	ldr.w	r0, [sl, #32]
   2745a:	blx	83f0 <free@plt+0x4>
   2745e:	mov	r0, sl
   27460:	blx	83f0 <free@plt+0x4>
   27464:	b.n	27346 <load_free_space_cache@@Base+0x626>
   27466:	mov.w	r3, #4294967295	; 0xffffffff
   2746a:	mov	r2, r7
   2746c:	mov	r1, r8
   2746e:	mov	r0, r9
   27470:	bl	266f4 <btrfs_print_tree@@Base+0x2f8>
   27474:	ldr	r2, [sp, #40]	; 0x28
   27476:	subs	r3, r0, r7
   27478:	cmp	r2, r3
   2747a:	bls.n	2748a <load_free_space_cache@@Base+0x76a>
   2747c:	adds	r2, r0, #1
   2747e:	cmp	r8, r2
   27480:	bls.n	27486 <load_free_space_cache@@Base+0x766>
   27482:	movs	r3, #0
   27484:	b.n	27448 <load_free_space_cache@@Base+0x728>
   27486:	mov	r7, r8
   27488:	b.n	27452 <load_free_space_cache@@Base+0x732>
   2748a:	cmp	r3, #0
   2748c:	beq.n	27456 <load_free_space_cache@@Base+0x736>
   2748e:	muls	r7, r6
   27490:	ldrd	r8, r9, [sp, #32]
   27494:	asrs	r1, r6, #31
   27496:	mov	r0, r5
   27498:	adds.w	r8, r8, r7
   2749c:	umull	r6, r7, r3, r6
   274a0:	adc.w	r9, r9, #0
   274a4:	mov	r2, r8
   274a6:	mla	r7, r3, r1, r7
   274aa:	mov	r3, r9
   274ac:	strd	r6, r7, [sp]
   274b0:	bl	26c1a <btrfs_add_free_space@@Base>
   274b4:	ldr	r1, [pc, #288]	; (275d8 <load_free_space_cache@@Base+0x8b8>)
   274b6:	movw	r2, #873	; 0x369
   274ba:	add	r1, pc
   274bc:	adds	r1, #89	; 0x59
   274be:	mov	r3, r0
   274c0:	ldr	r0, [pc, #280]	; (275dc <load_free_space_cache@@Base+0x8bc>)
   274c2:	add	r0, pc
   274c4:	bl	26758 <btrfs_print_tree@@Base+0x35c>
   274c8:	adds.w	r3, r8, r6
   274cc:	str	r3, [sp, #24]
   274ce:	adc.w	r3, r9, r7
   274d2:	str	r3, [sp, #28]
   274d4:	ldrd	r2, r3, [sp, #24]
   274d8:	ldrd	r0, r1, [sp, #64]	; 0x40
   274dc:	cmp	r3, r1
   274de:	it	eq
   274e0:	cmpeq	r2, r0
   274e2:	bcs.n	27456 <load_free_space_cache@@Base+0x736>
   274e4:	ldr	r3, [r5, #28]
   274e6:	asrs	r2, r3, #31
   274e8:	mov	r1, r3
   274ea:	strd	r1, r2, [sp, #40]	; 0x28
   274ee:	b.n	273d2 <load_free_space_cache@@Base+0x6b2>
   274f0:	cbz	r6, 27546 <load_free_space_cache@@Base+0x826>
   274f2:	ldrd	r2, r1, [r6, #24]
   274f6:	ldrd	r3, r0, [r6, #16]
   274fa:	adds	r3, r3, r2
   274fc:	str	r3, [sp, #80]	; 0x50
   274fe:	adc.w	r3, r0, r1
   27502:	str	r3, [sp, #84]	; 0x54
   27504:	ldrd	r0, r1, [sp, #80]	; 0x50
   27508:	ldrd	r2, r3, [sl, #16]
   2750c:	cmp	r1, r3
   2750e:	it	eq
   27510:	cmpeq	r0, r2
   27512:	bne.n	27546 <load_free_space_cache@@Base+0x826>
   27514:	mov	r1, r6
   27516:	mov	r0, r5
   27518:	bl	26afc <unlink_free_space@@Base>
   2751c:	mov	r1, sl
   2751e:	mov	r0, r5
   27520:	bl	26afc <unlink_free_space@@Base>
   27524:	ldrd	r1, r0, [sl, #24]
   27528:	ldrd	r3, r2, [r6, #24]
   2752c:	adds	r3, r3, r1
   2752e:	adc.w	r2, r0, r2
   27532:	mov	r0, sl
   27534:	strd	r3, r2, [r6, #24]
   27538:	blx	83f0 <free@plt+0x4>
   2753c:	mov	r1, r6
   2753e:	mov	r0, r5
   27540:	bl	269f4 <btrfs_print_tree@@Base+0x5f8>
   27544:	b.n	27346 <load_free_space_cache@@Base+0x626>
   27546:	mov	r0, sl
   27548:	mov	r6, sl
   2754a:	bl	13e66 <rb_next@@Base>
   2754e:	mov	sl, r0
   27550:	b.n	27350 <load_free_space_cache@@Base+0x630>
   27552:	mvn.w	r8, #11
   27556:	b.n	26e6e <load_free_space_cache@@Base+0x14e>
   27558:	ldr	r0, [pc, #132]	; (275e0 <load_free_space_cache@@Base+0x8c0>)
   2755a:	mov.w	r8, #4294967295	; 0xffffffff
   2755e:	add	r0, pc
   27560:	bl	1747c <__btrfs_error@@Base>
   27564:	b.n	26ef8 <load_free_space_cache@@Base+0x1d8>
   27566:	cmp.w	r8, #0
   2756a:	bge.w	26f18 <load_free_space_cache@@Base+0x1f8>
   2756e:	ldrd	r3, r4, [sp, #56]	; 0x38
   27572:	cmp	r3, #1
   27574:	sbcs.w	r3, r4, #0
   27578:	bge.w	26ef8 <load_free_space_cache@@Base+0x1d8>
   2757c:	b.n	26ef4 <load_free_space_cache@@Base+0x1d4>
   2757e:	mov	r8, r0
   27580:	b.n	26f18 <load_free_space_cache@@Base+0x1f8>
   27582:	mov	r0, r8
   27584:	add	sp, #244	; 0xf4
   27586:	vpop	{d8}
   2758a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2758e:	nop
   27590:	b.n	27640 <btrfs_clear_free_space_cache@@Base+0x5c>
   27592:	movs	r3, r0
   27594:	lsls	r4, r4, #8
   27596:	movs	r0, r0
   27598:	b.n	27634 <btrfs_clear_free_space_cache@@Base+0x50>
   2759a:	movs	r3, r0
   2759c:	lsls	r4, r6, #8
   2759e:	movs	r0, r0
   275a0:	ldrh	r2, [r0, #38]	; 0x26
   275a2:	movs	r1, r0
   275a4:	ldrh	r1, [r0, #44]	; 0x2c
   275a6:	movs	r1, r0
   275a8:	ldrh	r2, [r5, #48]	; 0x30
   275aa:	movs	r1, r0
   275ac:	udf	#104	; 0x68
   275ae:	movs	r3, r0
   275b0:	ldrh	r5, [r1, #30]
   275b2:	movs	r1, r0
   275b4:	ldrh	r6, [r5, #24]
   275b6:	movs	r1, r0
   275b8:	ldrh	r5, [r5, #22]
   275ba:	movs	r1, r0
   275bc:	ldrh	r7, [r3, #18]
   275be:	movs	r1, r0
   275c0:	ldrh	r3, [r6, #40]	; 0x28
   275c2:	movs	r1, r0
   275c4:	ldrh	r6, [r0, #18]
   275c6:	movs	r1, r0
   275c8:	ldrh	r5, [r2, #12]
   275ca:	movs	r1, r0
   275cc:	ldrh	r3, [r7, #8]
   275ce:	movs	r1, r0
   275d0:	ldrh	r5, [r4, #30]
   275d2:	movs	r1, r0
   275d4:	ldrh	r1, [r0, #8]
   275d6:	movs	r1, r0
   275d8:	ldrh	r1, [r4, #18]
   275da:	movs	r1, r0
   275dc:	adds	r2, #113	; 0x71
   275de:	movs	r1, r0
   275e0:	strh	r2, [r3, #58]	; 0x3a
   275e2:	movs	r1, r0

000275e4 <btrfs_clear_free_space_cache@@Base>:
   275e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   275e8:	mov	fp, r1
   275ea:	vpush	{d8}
   275ee:	movs	r1, #1
   275f0:	ldr	r2, [pc, #704]	; (278b4 <btrfs_clear_free_space_cache@@Base+0x2d0>)
   275f2:	ldr	r3, [pc, #708]	; (278b8 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   275f4:	add	r2, pc
   275f6:	ldr	r7, [r0, #28]
   275f8:	sub	sp, #172	; 0xac
   275fa:	ldr	r3, [r2, r3]
   275fc:	mov	r0, r7
   275fe:	ldr	r3, [r3, #0]
   27600:	str	r3, [sp, #164]	; 0xa4
   27602:	mov.w	r3, #0
   27606:	bl	2af7c <btrfs_start_transaction@@Base>
   2760a:	cmn.w	r0, #4096	; 0x1000
   2760e:	mov	r5, r0
   27610:	bls.n	2762a <btrfs_clear_free_space_cache@@Base+0x46>
   27612:	mov	r4, r0
   27614:	ldr	r2, [pc, #676]	; (278bc <btrfs_clear_free_space_cache@@Base+0x2d8>)
   27616:	ldr	r3, [pc, #672]	; (278b8 <btrfs_clear_free_space_cache@@Base+0x2d4>)
   27618:	add	r2, pc
   2761a:	ldr	r3, [r2, r3]
   2761c:	ldr	r2, [r3, #0]
   2761e:	ldr	r3, [sp, #164]	; 0xa4
   27620:	eors	r2, r3
   27622:	beq.w	278a8 <btrfs_clear_free_space_cache@@Base+0x2c4>
   27626:	blx	84cc <__stack_chk_fail@plt>
   2762a:	add	r6, sp, #96	; 0x60
   2762c:	mov.w	r8, #4294967295	; 0xffffffff
   27630:	mov.w	r9, #0
   27634:	add.w	sl, sp, #65	; 0x41
   27638:	mov	r0, r6
   2763a:	bl	17e48 <btrfs_init_path@@Base>
   2763e:	mvn.w	r2, #10
   27642:	mov.w	r3, #4294967295	; 0xffffffff
   27646:	strd	r2, r3, [sp, #56]	; 0x38
   2764a:	ldr.w	r3, [fp, #40]	; 0x28
   2764e:	mov	r1, r7
   27650:	mov	r0, r5
   27652:	strb.w	r9, [sp, #64]	; 0x40
   27656:	str.w	r3, [sp, #65]	; 0x41
   2765a:	ldr.w	r3, [fp, #44]	; 0x2c
   2765e:	str.w	r3, [sp, #69]	; 0x45
   27662:	add	r3, sp, #56	; 0x38
   27664:	vmov	s17, r3
   27668:	movs	r3, #1
   2766a:	strd	r8, r3, [sp]
   2766e:	mov	r3, r6
   27670:	vmov	r2, s17
   27674:	bl	1a23c <btrfs_search_slot@@Base>
   27678:	subs	r4, r0, #0
   2767a:	bgt.w	278a4 <btrfs_clear_free_space_cache@@Base+0x2c0>
   2767e:	bne.n	276c2 <btrfs_clear_free_space_cache@@Base+0xde>
   27680:	ldr	r0, [sp, #96]	; 0x60
   27682:	movs	r2, #25
   27684:	ldr	r3, [sp, #128]	; 0x80
   27686:	add	r1, sp, #76	; 0x4c
   27688:	mla	r3, r2, r3, r0
   2768c:	ldr.w	r2, [r3, #214]	; 0xd6
   27690:	movs	r3, #17
   27692:	adds	r2, #101	; 0x65
   27694:	bl	1731a <read_extent_buffer@@Base>
   27698:	ldrd	r9, r3, [sp, #76]	; 0x4c
   2769c:	mov	r2, r6
   2769e:	mov	r1, r7
   276a0:	mov	r0, r5
   276a2:	vmov	s16, r3
   276a6:	movs	r3, #1
   276a8:	str	r3, [sp, #0]
   276aa:	ldr	r3, [sp, #128]	; 0x80
   276ac:	bl	1b3f8 <btrfs_del_items@@Base>
   276b0:	subs	r4, r0, #0
   276b2:	bge.n	276d6 <btrfs_clear_free_space_cache@@Base+0xf2>
   276b4:	ldr	r0, [pc, #520]	; (278c0 <btrfs_clear_free_space_cache@@Base+0x2dc>)
   276b6:	ldrd	r2, r3, [fp, #40]	; 0x28
   276ba:	add	r0, pc
   276bc:	str	r4, [sp, #0]
   276be:	bl	1747c <__btrfs_error@@Base>
   276c2:	add	r0, sp, #96	; 0x60
   276c4:	bl	17e58 <btrfs_release_path@@Base>
   276c8:	cmp	r4, #0
   276ca:	bne.n	27614 <btrfs_clear_free_space_cache@@Base+0x30>
   276cc:	mov	r1, r7
   276ce:	mov	r0, r5
   276d0:	bl	2b1fc <btrfs_commit_transaction@@Base>
   276d4:	b.n	27614 <btrfs_clear_free_space_cache@@Base+0x30>
   276d6:	mov	r0, r6
   276d8:	bl	17e58 <btrfs_release_path@@Base>
   276dc:	mov.w	r3, #108	; 0x6c
   276e0:	strb.w	r8, [sl]
   276e4:	mov	r1, r7
   276e6:	strb.w	r3, [sp, #64]	; 0x40
   276ea:	mov	r0, r5
   276ec:	movs	r3, #1
   276ee:	strb.w	r8, [sl, #1]
   276f2:	strb.w	r8, [sl, #2]
   276f6:	strb.w	r8, [sl, #3]
   276fa:	strb.w	r8, [sl, #4]
   276fe:	strb.w	r8, [sl, #5]
   27702:	strb.w	r8, [sl, #6]
   27706:	strb.w	r8, [sl, #7]
   2770a:	vmov	r2, s17
   2770e:	strd	r8, r3, [sp]
   27712:	mov	r3, r6
   27714:	vstr	s16, [sp, #60]	; 0x3c
   27718:	str.w	r9, [sp, #56]	; 0x38
   2771c:	bl	1a23c <btrfs_search_slot@@Base>
   27720:	subs	r4, r0, #0
   27722:	blt.n	277c4 <btrfs_clear_free_space_cache@@Base+0x1e0>
   27724:	movs	r3, #108	; 0x6c
   27726:	str	r3, [sp, #44]	; 0x2c
   27728:	ldr	r3, [sp, #44]	; 0x2c
   2772a:	mov	r2, r9
   2772c:	mov	r1, r6
   2772e:	mov	r0, r7
   27730:	str	r3, [sp, #0]
   27732:	vmov	r3, s16
   27736:	bl	1b8f4 <btrfs_previous_item@@Base>
   2773a:	subs	r4, r0, #0
   2773c:	ble.n	277d0 <btrfs_clear_free_space_cache@@Base+0x1ec>
   2773e:	mov	r0, r6
   27740:	bl	17e58 <btrfs_release_path@@Base>
   27744:	movs	r3, #0
   27746:	movs	r2, #1
   27748:	strb.w	r3, [sl, #1]
   2774c:	strb.w	r3, [sl, #2]
   27750:	mov	r1, r7
   27752:	strb.w	r3, [sl, #3]
   27756:	mov	r0, r5
   27758:	strb.w	r3, [sl, #4]
   2775c:	strb.w	r3, [sl, #5]
   27760:	strb.w	r3, [sl, #6]
   27764:	strb.w	r3, [sl, #7]
   27768:	strb.w	r2, [sp, #64]	; 0x40
   2776c:	strb.w	r3, [sp, #65]	; 0x41
   27770:	mov.w	r3, #4294967295	; 0xffffffff
   27774:	str	r2, [sp, #4]
   27776:	add	r2, sp, #56	; 0x38
   27778:	str	r3, [sp, #0]
   2777a:	mov	r3, r6
   2777c:	vstr	s16, [sp, #60]	; 0x3c
   27780:	str.w	r9, [sp, #56]	; 0x38
   27784:	bl	1a23c <btrfs_search_slot@@Base>
   27788:	subs	r4, r0, #0
   2778a:	ble.n	2788c <btrfs_clear_free_space_cache@@Base+0x2a8>
   2778c:	ldr	r0, [pc, #308]	; (278c4 <btrfs_clear_free_space_cache@@Base+0x2e0>)
   2778e:	mov	r2, r9
   27790:	vmov	r3, s16
   27794:	add	r0, pc
   27796:	bl	17400 <__btrfs_warning@@Base>
   2779a:	movs	r3, #1
   2779c:	mov	r2, r6
   2779e:	str	r3, [sp, #0]
   277a0:	mov	r1, r7
   277a2:	ldr	r3, [sp, #128]	; 0x80
   277a4:	mov	r0, r5
   277a6:	bl	1b3f8 <btrfs_del_items@@Base>
   277aa:	subs	r4, r0, #0
   277ac:	bge.n	276c2 <btrfs_clear_free_space_cache@@Base+0xde>
   277ae:	ldrd	r2, r3, [fp, #40]	; 0x28
   277b2:	ldr	r0, [pc, #276]	; (278c8 <btrfs_clear_free_space_cache@@Base+0x2e4>)
   277b4:	str	r4, [sp, #8]
   277b6:	strd	r2, r3, [sp]
   277ba:	add	r0, pc
   277bc:	vmov	r3, s16
   277c0:	mov	r2, r9
   277c2:	b.n	27886 <btrfs_clear_free_space_cache@@Base+0x2a2>
   277c4:	ldr	r0, [pc, #260]	; (278cc <btrfs_clear_free_space_cache@@Base+0x2e8>)
   277c6:	ldrd	r2, r3, [fp, #40]	; 0x28
   277ca:	add	r0, pc
   277cc:	str	r4, [sp, #0]
   277ce:	b.n	276be <btrfs_clear_free_space_cache@@Base+0xda>
   277d0:	beq.n	277de <btrfs_clear_free_space_cache@@Base+0x1fa>
   277d2:	ldr	r0, [pc, #252]	; (278d0 <btrfs_clear_free_space_cache@@Base+0x2ec>)
   277d4:	ldrd	r2, r3, [fp, #40]	; 0x28
   277d8:	add	r0, pc
   277da:	str	r4, [sp, #0]
   277dc:	b.n	276be <btrfs_clear_free_space_cache@@Base+0xda>
   277de:	ldr	r4, [sp, #96]	; 0x60
   277e0:	ldr.w	r8, [sp, #128]	; 0x80
   277e4:	vmov	r1, s17
   277e8:	mov	r0, r4
   277ea:	mov	r2, r8
   277ec:	bl	26a94 <btrfs_print_tree@@Base+0x698>
   277f0:	add.w	r0, r4, #96	; 0x60
   277f4:	movs	r2, #25
   277f6:	ldr.w	r1, [sp, #69]	; 0x45
   277fa:	mla	r8, r2, r8, r0
   277fe:	ldr.w	r4, [r8, #118]	; 0x76
   27802:	adds	r4, #101	; 0x65
   27804:	add.w	ip, r0, r4
   27808:	ldr.w	r4, [sp, #65]	; 0x41
   2780c:	mov	r3, ip
   2780e:	ldr.w	r2, [r3, #21]!
   27812:	ldr	r3, [r3, #4]
   27814:	vstr	s16, [sp, #28]
   27818:	str.w	r9, [sp, #24]
   2781c:	strd	r4, r1, [sp, #32]
   27820:	ldrd	r0, r1, [r7, #472]	; 0x1d8
   27824:	strd	r3, r2, [sp, #48]	; 0x30
   27828:	strd	r0, r1, [sp, #16]
   2782c:	movs	r0, #0
   2782e:	movs	r1, #0
   27830:	strd	r0, r1, [sp, #8]
   27834:	mov	r0, ip
   27836:	ldr.w	r4, [r0, #29]!
   2783a:	ldr	r1, [r0, #4]
   2783c:	mov	r0, r5
   2783e:	strd	r4, r1, [sp]
   27842:	mov	r1, r7
   27844:	bl	20c4c <btrfs_free_extent@@Base>
   27848:	ldrd	r3, r2, [sp, #48]	; 0x30
   2784c:	subs	r4, r0, #0
   2784e:	bge.n	27858 <btrfs_clear_free_space_cache@@Base+0x274>
   27850:	ldr	r0, [pc, #128]	; (278d4 <btrfs_clear_free_space_cache@@Base+0x2f0>)
   27852:	str	r4, [sp, #0]
   27854:	add	r0, pc
   27856:	b.n	276be <btrfs_clear_free_space_cache@@Base+0xda>
   27858:	movs	r3, #1
   2785a:	mov	r2, r6
   2785c:	str	r3, [sp, #0]
   2785e:	mov	r1, r7
   27860:	ldr	r3, [sp, #128]	; 0x80
   27862:	mov	r0, r5
   27864:	bl	1b3f8 <btrfs_del_items@@Base>
   27868:	subs	r4, r0, #0
   2786a:	bge.w	27728 <btrfs_clear_free_space_cache@@Base+0x144>
   2786e:	ldr.w	r2, [sp, #65]	; 0x41
   27872:	ldr.w	r3, [sp, #69]	; 0x45
   27876:	ldr	r0, [pc, #96]	; (278d8 <btrfs_clear_free_space_cache@@Base+0x2f4>)
   27878:	str	r4, [sp, #8]
   2787a:	strd	r2, r3, [sp]
   2787e:	add	r0, pc
   27880:	vmov	r3, s16
   27884:	mov	r2, r9
   27886:	bl	1747c <__btrfs_error@@Base>
   2788a:	b.n	276c2 <btrfs_clear_free_space_cache@@Base+0xde>
   2788c:	beq.n	2779a <btrfs_clear_free_space_cache@@Base+0x1b6>
   2788e:	ldrd	r2, r3, [fp, #40]	; 0x28
   27892:	ldr	r0, [pc, #72]	; (278dc <btrfs_clear_free_space_cache@@Base+0x2f8>)
   27894:	str	r4, [sp, #8]
   27896:	strd	r2, r3, [sp]
   2789a:	add	r0, pc
   2789c:	vmov	r3, s16
   278a0:	mov	r2, r9
   278a2:	b.n	27886 <btrfs_clear_free_space_cache@@Base+0x2a2>
   278a4:	mov	r4, r9
   278a6:	b.n	276c2 <btrfs_clear_free_space_cache@@Base+0xde>
   278a8:	mov	r0, r4
   278aa:	add	sp, #172	; 0xac
   278ac:	vpop	{d8}
   278b0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   278b4:	bvc.n	277e0 <btrfs_clear_free_space_cache@@Base+0x1fc>
   278b6:	movs	r3, r0
   278b8:	lsls	r4, r4, #8
   278ba:	movs	r0, r0
   278bc:	bvc.n	279a0 <btrfs_find_last_root@@Base+0x58>
   278be:	movs	r3, r0
   278c0:	strh	r0, [r7, #52]	; 0x34
   278c2:	movs	r1, r0
   278c4:	strh	r3, [r2, #54]	; 0x36
   278c6:	movs	r1, r0
   278c8:	strh	r3, [r3, #56]	; 0x38
   278ca:	movs	r1, r0
   278cc:	strh	r4, [r4, #46]	; 0x2e
   278ce:	movs	r1, r0
   278d0:	strh	r6, [r2, #46]	; 0x2e
   278d2:	movs	r1, r0
   278d4:	strh	r4, [r3, #44]	; 0x2c
   278d6:	movs	r1, r0
   278d8:	strh	r4, [r4, #44]	; 0x2c
   278da:	movs	r1, r0
   278dc:	strh	r5, [r6, #46]	; 0x2e
   278de:	movs	r1, r0
   278e0:	ldr.w	ip, [pc, #76]	; 27930 <btrfs_clear_free_space_cache@@Base+0x34c>
   278e4:	ldr	r5, [pc, #76]	; (27934 <btrfs_clear_free_space_cache@@Base+0x350>)
   278e6:	add	ip, pc
   278e8:	ldr	r4, [pc, #76]	; (27938 <btrfs_clear_free_space_cache@@Base+0x354>)
   278ea:	push	{lr}
   278ec:	sub	sp, #92	; 0x5c
   278ee:	ldr.w	r5, [ip, r5]
   278f2:	add	r4, pc
   278f4:	ldr	r5, [r5, #0]
   278f6:	str	r5, [sp, #84]	; 0x54
   278f8:	mov.w	r5, #0
   278fc:	ldr	r5, [pc, #60]	; (2793c <btrfs_clear_free_space_cache@@Base+0x358>)
   278fe:	ldr	r4, [r4, r5]
   27900:	strd	r2, r1, [sp]
   27904:	movs	r1, #1
   27906:	strd	r0, r3, [sp, #8]
   2790a:	ldr	r2, [pc, #52]	; (27940 <btrfs_clear_free_space_cache@@Base+0x35c>)
   2790c:	ldr	r3, [pc, #52]	; (27944 <btrfs_clear_free_space_cache@@Base+0x360>)
   2790e:	ldr	r0, [r4, #0]
   27910:	add	r4, sp, #20
   27912:	add	r3, pc
   27914:	add	r2, pc
   27916:	blx	881c <__fprintf_chk@plt+0x4>
   2791a:	movs	r1, #16
   2791c:	mov	r0, r4
   2791e:	blx	8680 <backtrace@plt>
   27922:	movs	r2, #2
   27924:	mov	r1, r0
   27926:	mov	r0, r4
   27928:	blx	8990 <backtrace_symbols_fd@plt>
   2792c:	blx	8948 <abort@plt>
   27930:	bmi.n	27878 <btrfs_clear_free_space_cache@@Base+0x294>
   27932:	movs	r3, r0
   27934:	lsls	r4, r4, #8
   27936:	movs	r0, r0
   27938:	bmi.n	27868 <btrfs_clear_free_space_cache@@Base+0x284>
   2793a:	movs	r3, r0
   2793c:	lsls	r4, r6, #8
   2793e:	movs	r0, r0
   27940:	movs	r1, #125	; 0x7d
   27942:	movs	r1, r0
   27944:	strh	r3, [r6, #50]	; 0x32
   27946:	movs	r1, r0

00027948 <btrfs_find_last_root@@Base>:
   27948:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2794c:	mov	r6, r2
   2794e:	ldr	r2, [pc, #276]	; (27a64 <btrfs_find_last_root@@Base+0x11c>)
   27950:	mov	r7, r3
   27952:	ldr	r3, [pc, #276]	; (27a68 <btrfs_find_last_root@@Base+0x120>)
   27954:	sub	sp, #76	; 0x4c
   27956:	add	r2, pc
   27958:	str	r0, [sp, #12]
   2795a:	ldr	r3, [r2, r3]
   2795c:	ldrd	fp, r5, [sp, #112]	; 0x70
   27960:	ldr	r3, [r3, #0]
   27962:	str	r3, [sp, #68]	; 0x44
   27964:	mov.w	r3, #0
   27968:	bl	17e50 <btrfs_alloc_path@@Base>
   2796c:	mov	r4, r0
   2796e:	cmp	r0, #0
   27970:	beq.n	27a54 <btrfs_find_last_root@@Base+0x10c>
   27972:	mov.w	r8, #0
   27976:	mov.w	r2, #4294967295	; 0xffffffff
   2797a:	movs	r3, #132	; 0x84
   2797c:	strb.w	r2, [sp, #37]	; 0x25
   27980:	strb.w	r3, [sp, #36]	; 0x24
   27984:	mov	r3, r0
   27986:	strb.w	r2, [sp, #38]	; 0x26
   2798a:	mov	r0, r8
   2798c:	strb.w	r2, [sp, #39]	; 0x27
   27990:	strb.w	r2, [sp, #40]	; 0x28
   27994:	strb.w	r2, [sp, #41]	; 0x29
   27998:	strb.w	r2, [sp, #42]	; 0x2a
   2799c:	strb.w	r2, [sp, #43]	; 0x2b
   279a0:	strb.w	r2, [sp, #44]	; 0x2c
   279a4:	add	r2, sp, #28
   279a6:	ldr	r1, [sp, #12]
   279a8:	strd	r8, r8, [sp]
   279ac:	strd	r6, r7, [sp, #28]
   279b0:	bl	1a23c <btrfs_search_slot@@Base>
   279b4:	subs.w	r9, r0, #0
   279b8:	blt.n	279c2 <btrfs_find_last_root@@Base+0x7a>
   279ba:	ldr	r2, [r4, #32]
   279bc:	cbnz	r2, 279dc <btrfs_find_last_root@@Base+0x94>
   279be:	mvn.w	r9, #1
   279c2:	mov	r0, r4
   279c4:	bl	17e7e <btrfs_free_path@@Base>
   279c8:	ldr	r2, [pc, #160]	; (27a6c <btrfs_find_last_root@@Base+0x124>)
   279ca:	ldr	r3, [pc, #156]	; (27a68 <btrfs_find_last_root@@Base+0x120>)
   279cc:	add	r2, pc
   279ce:	ldr	r3, [r2, r3]
   279d0:	ldr	r2, [r3, #0]
   279d2:	ldr	r3, [sp, #68]	; 0x44
   279d4:	eors	r2, r3
   279d6:	beq.n	27a5a <btrfs_find_last_root@@Base+0x112>
   279d8:	blx	84cc <__stack_chk_fail@plt>
   279dc:	cmp.w	r9, #0
   279e0:	bne.n	279f2 <btrfs_find_last_root@@Base+0xaa>
   279e2:	ldr	r1, [pc, #140]	; (27a70 <btrfs_find_last_root@@Base+0x128>)
   279e4:	movs	r3, #1
   279e6:	ldr	r0, [pc, #140]	; (27a74 <btrfs_find_last_root@@Base+0x12c>)
   279e8:	movs	r2, #50	; 0x32
   279ea:	add	r1, pc
   279ec:	add	r0, pc
   279ee:	bl	278e0 <btrfs_clear_free_space_cache@@Base+0x2fc>
   279f2:	subs	r2, #1
   279f4:	movs	r3, #25
   279f6:	ldr	r0, [r4, #0]
   279f8:	add	r1, sp, #48	; 0x30
   279fa:	muls	r2, r3
   279fc:	movs	r3, #17
   279fe:	str	r0, [sp, #16]
   27a00:	adds	r2, #101	; 0x65
   27a02:	str	r2, [sp, #20]
   27a04:	bl	1731a <read_extent_buffer@@Base>
   27a08:	ldrb.w	r9, [sp, #56]	; 0x38
   27a0c:	ldr.w	r3, [sp, #61]	; 0x3d
   27a10:	cmp.w	r9, #132	; 0x84
   27a14:	ldr.w	sl, [sp, #57]	; 0x39
   27a18:	str	r3, [sp, #12]
   27a1a:	ldrd	r2, r3, [sp, #48]	; 0x30
   27a1e:	bne.n	279be <btrfs_find_last_root@@Base+0x76>
   27a20:	cmp	r7, r3
   27a22:	it	eq
   27a24:	cmpeq	r6, r2
   27a26:	ldrd	r0, r2, [sp, #16]
   27a2a:	bne.n	279be <btrfs_find_last_root@@Base+0x76>
   27a2c:	add	r2, r0
   27a2e:	movw	r3, #439	; 0x1b7
   27a32:	mov	r1, fp
   27a34:	ldr.w	r2, [r2, #113]	; 0x71
   27a38:	adds	r2, #101	; 0x65
   27a3a:	bl	1731a <read_extent_buffer@@Base>
   27a3e:	ldr	r3, [sp, #12]
   27a40:	strb.w	r9, [r5, #8]
   27a44:	mov	r9, r8
   27a46:	str	r6, [r5, #0]
   27a48:	str	r7, [r5, #4]
   27a4a:	str.w	sl, [r5, #9]
   27a4e:	str.w	r3, [r5, #13]
   27a52:	b.n	279c2 <btrfs_find_last_root@@Base+0x7a>
   27a54:	mvn.w	r9, #11
   27a58:	b.n	279c8 <btrfs_find_last_root@@Base+0x80>
   27a5a:	mov	r0, r9
   27a5c:	add	sp, #76	; 0x4c
   27a5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a62:	nop
   27a64:	bmi.n	27acc <btrfs_update_root@@Base+0x54>
   27a66:	movs	r3, r0
   27a68:	lsls	r4, r4, #8
   27a6a:	movs	r0, r0
   27a6c:	bcc.n	279e8 <btrfs_find_last_root@@Base+0xa0>
   27a6e:	movs	r3, r0
   27a70:	strh	r0, [r6, #44]	; 0x2c
   27a72:	movs	r1, r0
   27a74:	adds	r2, #166	; 0xa6
   27a76:	movs	r1, r0

00027a78 <btrfs_update_root@@Base>:
   27a78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27a7c:	mov	r8, r2
   27a7e:	ldr	r2, [pc, #284]	; (27b9c <btrfs_update_root@@Base+0x124>)
   27a80:	mov	r6, r3
   27a82:	ldr	r3, [pc, #284]	; (27ba0 <btrfs_update_root@@Base+0x128>)
   27a84:	sub	sp, #20
   27a86:	add	r2, pc
   27a88:	mov	r7, r0
   27a8a:	mov	fp, r1
   27a8c:	ldr	r3, [r2, r3]
   27a8e:	ldr	r3, [r3, #0]
   27a90:	str	r3, [sp, #12]
   27a92:	mov.w	r3, #0
   27a96:	bl	17e50 <btrfs_alloc_path@@Base>
   27a9a:	mov	r5, r0
   27a9c:	cmp	r0, #0
   27a9e:	beq.n	27b8c <btrfs_update_root@@Base+0x114>
   27aa0:	movs	r3, #0
   27aa2:	mov.w	r9, #1
   27aa6:	mov	r2, r8
   27aa8:	strd	r3, r9, [sp]
   27aac:	mov	r1, fp
   27aae:	mov	r3, r0
   27ab0:	mov	r0, r7
   27ab2:	bl	1a23c <btrfs_search_slot@@Base>
   27ab6:	subs	r4, r0, #0
   27ab8:	blt.n	27b0e <btrfs_update_root@@Base+0x96>
   27aba:	beq.n	27ace <btrfs_update_root@@Base+0x56>
   27abc:	ldr	r1, [pc, #228]	; (27ba4 <btrfs_update_root@@Base+0x12c>)
   27abe:	mov	r3, r9
   27ac0:	ldr	r0, [pc, #228]	; (27ba8 <btrfs_update_root@@Base+0x130>)
   27ac2:	movs	r2, #86	; 0x56
   27ac4:	add	r1, pc
   27ac6:	adds	r1, #21
   27ac8:	add	r0, pc
   27aca:	bl	278e0 <btrfs_clear_free_space_cache@@Base+0x2fc>
   27ace:	ldr	r0, [r5, #0]
   27ad0:	mov.w	sl, #25
   27ad4:	ldr	r3, [r5, #32]
   27ad6:	mla	r3, sl, r3, r0
   27ada:	add.w	r2, r3, #197	; 0xc5
   27ade:	ldr.w	r3, [r3, #218]	; 0xda
   27ae2:	cmp.w	r3, #438	; 0x1b6
   27ae6:	bls.n	27b28 <btrfs_update_root@@Base+0xb0>
   27ae8:	ldr.w	r2, [r2, #17]
   27aec:	ldr.w	r1, [r6, #160]	; 0xa0
   27af0:	adds	r2, #101	; 0x65
   27af2:	ldr.w	r3, [r6, #164]	; 0xa4
   27af6:	str.w	r1, [r6, #239]	; 0xef
   27afa:	mov	r1, r6
   27afc:	str.w	r3, [r6, #243]	; 0xf3
   27b00:	movw	r3, #439	; 0x1b7
   27b04:	bl	17330 <write_extent_buffer@@Base>
   27b08:	ldr	r0, [r5, #0]
   27b0a:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   27b0e:	mov	r0, r5
   27b10:	bl	17e7e <btrfs_free_path@@Base>
   27b14:	ldr	r2, [pc, #148]	; (27bac <btrfs_update_root@@Base+0x134>)
   27b16:	ldr	r3, [pc, #136]	; (27ba0 <btrfs_update_root@@Base+0x128>)
   27b18:	add	r2, pc
   27b1a:	ldr	r3, [r2, r3]
   27b1c:	ldr	r2, [r3, #0]
   27b1e:	ldr	r3, [sp, #12]
   27b20:	eors	r2, r3
   27b22:	beq.n	27b92 <btrfs_update_root@@Base+0x11a>
   27b24:	blx	84cc <__stack_chk_fail@plt>
   27b28:	mov	r0, r5
   27b2a:	bl	17e58 <btrfs_release_path@@Base>
   27b2e:	mov.w	r3, #4294967295	; 0xffffffff
   27b32:	mov	r2, r8
   27b34:	str	r3, [sp, #0]
   27b36:	mov	r1, fp
   27b38:	mov	r3, r5
   27b3a:	mov	r0, r7
   27b3c:	str.w	r9, [sp, #4]
   27b40:	bl	1a23c <btrfs_search_slot@@Base>
   27b44:	subs	r4, r0, #0
   27b46:	blt.n	27b0e <btrfs_update_root@@Base+0x96>
   27b48:	str.w	r9, [sp]
   27b4c:	mov	r2, r5
   27b4e:	ldr	r3, [r5, #32]
   27b50:	mov	r1, fp
   27b52:	mov	r0, r7
   27b54:	bl	1b3f8 <btrfs_del_items@@Base>
   27b58:	subs	r4, r0, #0
   27b5a:	blt.n	27b0e <btrfs_update_root@@Base+0x96>
   27b5c:	mov	r0, r5
   27b5e:	bl	17e58 <btrfs_release_path@@Base>
   27b62:	movw	r3, #439	; 0x1b7
   27b66:	mov	r2, r5
   27b68:	strd	r9, r3, [sp, #4]
   27b6c:	mov	r1, fp
   27b6e:	add	r3, sp, #8
   27b70:	mov	r0, r7
   27b72:	str	r3, [sp, #0]
   27b74:	mov	r3, r8
   27b76:	bl	1b00c <btrfs_insert_empty_items@@Base>
   27b7a:	subs	r4, r0, #0
   27b7c:	blt.n	27b0e <btrfs_update_root@@Base+0x96>
   27b7e:	ldr	r0, [r5, #0]
   27b80:	ldr	r3, [r5, #32]
   27b82:	mla	r3, sl, r3, r0
   27b86:	ldr.w	r2, [r3, #214]	; 0xd6
   27b8a:	b.n	27aec <btrfs_update_root@@Base+0x74>
   27b8c:	mvn.w	r4, #11
   27b90:	b.n	27b14 <btrfs_update_root@@Base+0x9c>
   27b92:	mov	r0, r4
   27b94:	add	sp, #20
   27b96:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b9a:	nop
   27b9c:	bcc.n	27ba4 <btrfs_update_root@@Base+0x12c>
   27b9e:	movs	r3, r0
   27ba0:	lsls	r4, r4, #8
   27ba2:	movs	r0, r0
   27ba4:	strh	r6, [r2, #38]	; 0x26
   27ba6:	movs	r1, r0
   27ba8:	strh	r1, [r1, #38]	; 0x26
   27baa:	movs	r1, r0
   27bac:	bcs.n	27c90 <btrfs_add_root_ref@@Base+0x68>
   27bae:	movs	r3, r0

00027bb0 <btrfs_insert_root@@Base>:
   27bb0:	push	{r0, r1, r4, r5, r6, lr}
   27bb2:	movw	r4, #439	; 0x1b7
   27bb6:	ldr.w	r6, [r3, #160]	; 0xa0
   27bba:	ldr.w	r5, [r3, #164]	; 0xa4
   27bbe:	str	r4, [sp, #0]
   27bc0:	str.w	r6, [r3, #239]	; 0xef
   27bc4:	str.w	r5, [r3, #243]	; 0xf3
   27bc8:	bl	1b2c8 <btrfs_insert_item@@Base>
   27bcc:	add	sp, #8
   27bce:	pop	{r4, r5, r6, pc}

00027bd0 <btrfs_del_root@@Base>:
   27bd0:	push	{r4, r5, r6, r7, lr}
   27bd2:	sub	sp, #20
   27bd4:	mov	r6, r0
   27bd6:	strd	r2, r1, [sp, #8]
   27bda:	bl	17e50 <btrfs_alloc_path@@Base>
   27bde:	mov	r5, r0
   27be0:	cbz	r0, 27c22 <btrfs_del_root@@Base+0x52>
   27be2:	ldrd	r2, r1, [sp, #8]
   27be6:	mov.w	r3, #4294967295	; 0xffffffff
   27bea:	movs	r7, #1
   27bec:	strd	r3, r7, [sp]
   27bf0:	mov	r3, r0
   27bf2:	mov	r0, r6
   27bf4:	str	r1, [sp, #8]
   27bf6:	bl	1a23c <btrfs_search_slot@@Base>
   27bfa:	subs	r4, r0, #0
   27bfc:	blt.n	27c10 <btrfs_del_root@@Base+0x40>
   27bfe:	bne.n	27c1c <btrfs_del_root@@Base+0x4c>
   27c00:	str	r7, [sp, #0]
   27c02:	mov	r2, r5
   27c04:	ldr	r3, [r5, #32]
   27c06:	mov	r0, r6
   27c08:	ldr	r1, [sp, #8]
   27c0a:	bl	1b3f8 <btrfs_del_items@@Base>
   27c0e:	mov	r4, r0
   27c10:	mov	r0, r5
   27c12:	bl	17e7e <btrfs_free_path@@Base>
   27c16:	mov	r0, r4
   27c18:	add	sp, #20
   27c1a:	pop	{r4, r5, r6, r7, pc}
   27c1c:	mvn.w	r4, #1
   27c20:	b.n	27c10 <btrfs_del_root@@Base+0x40>
   27c22:	mvn.w	r4, #11
   27c26:	b.n	27c16 <btrfs_del_root@@Base+0x46>

00027c28 <btrfs_add_root_ref@@Base>:
   27c28:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27c2c:	sub	sp, #68	; 0x44
   27c2e:	mov	r7, r3
   27c30:	mov	fp, r2
   27c32:	ldr	r3, [sp, #116]	; 0x74
   27c34:	mov	r6, r0
   27c36:	ldr	r2, [sp, #112]	; 0x70
   27c38:	str	r1, [sp, #28]
   27c3a:	str	r3, [sp, #20]
   27c3c:	ldr	r3, [sp, #128]	; 0x80
   27c3e:	str	r2, [sp, #24]
   27c40:	ldr	r2, [pc, #208]	; (27d14 <btrfs_add_root_ref@@Base+0xec>)
   27c42:	str	r3, [sp, #12]
   27c44:	ldr	r3, [sp, #132]	; 0x84
   27c46:	add	r2, pc
   27c48:	ldrd	sl, r9, [sp, #120]	; 0x78
   27c4c:	ldrd	r8, r5, [sp, #136]	; 0x88
   27c50:	str	r3, [sp, #16]
   27c52:	ldr	r3, [pc, #196]	; (27d18 <btrfs_add_root_ref@@Base+0xf0>)
   27c54:	ldr	r3, [r2, r3]
   27c56:	ldr	r3, [r3, #0]
   27c58:	str	r3, [sp, #60]	; 0x3c
   27c5a:	mov.w	r3, #0
   27c5e:	bl	17e50 <btrfs_alloc_path@@Base>
   27c62:	mov	r4, r0
   27c64:	cmp	r0, #0
   27c66:	beq.n	27d06 <btrfs_add_root_ref@@Base+0xde>
   27c68:	ldrb.w	r0, [sp, #104]	; 0x68
   27c6c:	ldr	r2, [sp, #24]
   27c6e:	ldr	r3, [sp, #20]
   27c70:	strb.w	r0, [sp, #48]	; 0x30
   27c74:	mov	r0, r6
   27c76:	str.w	r2, [sp, #49]	; 0x31
   27c7a:	mov	r2, r4
   27c7c:	str.w	r3, [sp, #53]	; 0x35
   27c80:	add.w	r3, r5, #18
   27c84:	ldr	r1, [sp, #28]
   27c86:	str	r3, [sp, #36]	; 0x24
   27c88:	movs	r3, #1
   27c8a:	str	r3, [sp, #4]
   27c8c:	add	r3, sp, #36	; 0x24
   27c8e:	str	r3, [sp, #0]
   27c90:	add	r3, sp, #40	; 0x28
   27c92:	strd	fp, r7, [sp, #40]	; 0x28
   27c96:	bl	1b00c <btrfs_insert_empty_items@@Base>
   27c9a:	mov	r6, r0
   27c9c:	cbz	r0, 27cb0 <btrfs_add_root_ref@@Base+0x88>
   27c9e:	ldr	r1, [pc, #124]	; (27d1c <btrfs_add_root_ref@@Base+0xf4>)
   27ca0:	mov	r3, r0
   27ca2:	ldr	r0, [pc, #124]	; (27d20 <btrfs_add_root_ref@@Base+0xf8>)
   27ca4:	movs	r2, #209	; 0xd1
   27ca6:	add	r1, pc
   27ca8:	adds	r1, #39	; 0x27
   27caa:	add	r0, pc
   27cac:	bl	278e0 <btrfs_clear_free_space_cache@@Base+0x2fc>
   27cb0:	ldr	r0, [r4, #0]
   27cb2:	movs	r2, #25
   27cb4:	ldr	r3, [r4, #32]
   27cb6:	add.w	r1, r0, #96	; 0x60
   27cba:	mla	r3, r2, r3, r1
   27cbe:	ldr.w	r2, [r3, #118]	; 0x76
   27cc2:	add.w	r7, r2, #101	; 0x65
   27cc6:	adds	r2, #119	; 0x77
   27cc8:	adds	r3, r1, r7
   27cca:	str.w	sl, [r1, r7]
   27cce:	ldr	r1, [sp, #12]
   27cd0:	str.w	r9, [r3, #4]
   27cd4:	strh	r5, [r3, #16]
   27cd6:	str	r1, [r3, #8]
   27cd8:	ldr	r1, [sp, #16]
   27cda:	str	r0, [sp, #12]
   27cdc:	str	r1, [r3, #12]
   27cde:	mov	r3, r5
   27ce0:	mov	r1, r8
   27ce2:	bl	17330 <write_extent_buffer@@Base>
   27ce6:	ldr	r0, [sp, #12]
   27ce8:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   27cec:	mov	r0, r4
   27cee:	bl	17e7e <btrfs_free_path@@Base>
   27cf2:	ldr	r2, [pc, #48]	; (27d24 <btrfs_add_root_ref@@Base+0xfc>)
   27cf4:	ldr	r3, [pc, #32]	; (27d18 <btrfs_add_root_ref@@Base+0xf0>)
   27cf6:	add	r2, pc
   27cf8:	ldr	r3, [r2, r3]
   27cfa:	ldr	r2, [r3, #0]
   27cfc:	ldr	r3, [sp, #60]	; 0x3c
   27cfe:	eors	r2, r3
   27d00:	beq.n	27d0c <btrfs_add_root_ref@@Base+0xe4>
   27d02:	blx	84cc <__stack_chk_fail@plt>
   27d06:	mvn.w	r6, #11
   27d0a:	b.n	27cf2 <btrfs_add_root_ref@@Base+0xca>
   27d0c:	mov	r0, r6
   27d0e:	add	sp, #68	; 0x44
   27d10:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d14:	bne.n	27d9c <btrfs_add_root_ref@@Base+0x174>
   27d16:	movs	r3, r0
   27d18:	lsls	r4, r4, #8
   27d1a:	movs	r0, r0
   27d1c:	strh	r4, [r6, #22]
   27d1e:	movs	r1, r0
   27d20:	cmp	r2, #137	; 0x89
   27d22:	movs	r1, r0
   27d24:	beq.n	27c4c <btrfs_add_root_ref@@Base+0x24>
   27d26:	movs	r3, r0
   27d28:	push	{r4, r5, lr}
   27d2a:	movs	r1, #0
   27d2c:	ldr	r4, [r0, #40]	; 0x28
   27d2e:	mov	r3, r1
   27d30:	ldr	r5, [r0, #64]	; 0x40
   27d32:	and.w	r2, r4, #128	; 0x80
   27d36:	orrs	r3, r2
   27d38:	bne.n	27d4c <btrfs_add_root_ref@@Base+0x124>
   27d3a:	and.w	r2, r4, #256	; 0x100
   27d3e:	mov	r3, r1
   27d40:	orrs	r3, r2
   27d42:	ite	ne
   27d44:	movne	r0, #2
   27d46:	moveq	r0, r1
   27d48:	subs	r0, r5, r0
   27d4a:	pop	{r4, r5, pc}
   27d4c:	movs	r0, #1
   27d4e:	b.n	27d48 <btrfs_add_root_ref@@Base+0x120>
   27d50:	push	{r3, r4, r5, r6, r7, lr}
   27d52:	mov	r6, r0
   27d54:	ldr	r3, [pc, #40]	; (27d80 <btrfs_add_root_ref@@Base+0x158>)
   27d56:	add	r3, pc
   27d58:	ldr	r4, [r3, #0]
   27d5a:	mov	r5, r3
   27d5c:	subs	r4, #80	; 0x50
   27d5e:	add.w	r3, r4, #80	; 0x50
   27d62:	cmp	r5, r3
   27d64:	bne.n	27d6c <btrfs_add_root_ref@@Base+0x144>
   27d66:	movs	r4, #0
   27d68:	mov	r0, r4
   27d6a:	pop	{r3, r4, r5, r6, r7, pc}
   27d6c:	movs	r2, #16
   27d6e:	mov	r1, r4
   27d70:	mov	r0, r6
   27d72:	blx	8464 <memcmp@plt+0x4>
   27d76:	cmp	r0, #0
   27d78:	beq.n	27d68 <btrfs_add_root_ref@@Base+0x140>
   27d7a:	ldr	r4, [r4, #80]	; 0x50
   27d7c:	subs	r4, #80	; 0x50
   27d7e:	b.n	27d5e <btrfs_add_root_ref@@Base+0x136>
   27d80:	b.n	27648 <btrfs_clear_free_space_cache@@Base+0x64>
   27d82:	movs	r3, r0
   27d84:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   27d88:	add.w	r8, r0, #72	; 0x48
   27d8c:	ldr	r5, [sp, #24]
   27d8e:	mov	r6, r2
   27d90:	ldr	r4, [r0, #72]	; 0x48
   27d92:	mov	r7, r3
   27d94:	cmp	r4, r8
   27d96:	bne.n	27da0 <btrfs_add_root_ref@@Base+0x178>
   27d98:	movs	r4, #0
   27d9a:	mov	r0, r4
   27d9c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   27da0:	ldrd	r2, r3, [r4, #64]	; 0x40
   27da4:	cmp	r3, r7
   27da6:	it	eq
   27da8:	cmpeq	r2, r6
   27daa:	bne.n	27dc0 <btrfs_add_root_ref@@Base+0x198>
   27dac:	cmp	r5, #0
   27dae:	beq.n	27d9a <btrfs_add_root_ref@@Base+0x172>
   27db0:	add.w	r0, r4, #112	; 0x70
   27db4:	movs	r2, #16
   27db6:	mov	r1, r5
   27db8:	blx	8464 <memcmp@plt+0x4>
   27dbc:	cmp	r0, #0
   27dbe:	beq.n	27d9a <btrfs_add_root_ref@@Base+0x172>
   27dc0:	ldr	r4, [r4, #0]
   27dc2:	b.n	27d94 <btrfs_add_root_ref@@Base+0x16c>
   27dc4:	push	{r3, r4, r5, r6, r7, lr}
   27dc6:	mov	r1, r0
   27dc8:	mov	r5, r3
   27dca:	and.w	r6, r1, #1584	; 0x630
   27dce:	movs	r3, #0
   27dd0:	mov	r4, r2
   27dd2:	mov	r7, r3
   27dd4:	orrs.w	r2, r6, r7
   27dd8:	ldr	r0, [sp, #24]
   27dda:	bne.n	27dfa <btrfs_add_root_ref@@Base+0x1d2>
   27ddc:	and.w	r6, r1, #64	; 0x40
   27de0:	orrs.w	r2, r6, r7
   27de4:	beq.n	27e00 <btrfs_add_root_ref@@Base+0x1d8>
   27de6:	ldr	r1, [sp, #28]
   27de8:	bl	38f98 <btrfs_util_strerror@@Base+0x290>
   27dec:	asrs	r3, r0, #31
   27dee:	muls	r3, r4
   27df0:	mla	r3, r0, r5, r3
   27df4:	umull	r4, r5, r4, r0
   27df8:	add	r5, r3
   27dfa:	mov	r0, r4
   27dfc:	mov	r1, r5
   27dfe:	pop	{r3, r4, r5, r6, r7, pc}
   27e00:	and.w	r6, r1, #128	; 0x80
   27e04:	orrs.w	r2, r6, r7
   27e08:	beq.n	27e0e <btrfs_add_root_ref@@Base+0x1e6>
   27e0a:	subs	r0, #1
   27e0c:	b.n	27dec <btrfs_add_root_ref@@Base+0x1c4>
   27e0e:	and.w	r6, r1, #256	; 0x100
   27e12:	orrs.w	r3, r6, r7
   27e16:	it	ne
   27e18:	subne	r0, #2
   27e1a:	b.n	27dec <btrfs_add_root_ref@@Base+0x1c4>
   27e1c:	ldr.w	ip, [pc, #76]	; 27e6c <btrfs_add_root_ref@@Base+0x244>
   27e20:	ldr	r5, [pc, #76]	; (27e70 <btrfs_add_root_ref@@Base+0x248>)
   27e22:	add	ip, pc
   27e24:	ldr	r4, [pc, #76]	; (27e74 <btrfs_add_root_ref@@Base+0x24c>)
   27e26:	push	{lr}
   27e28:	sub	sp, #92	; 0x5c
   27e2a:	ldr.w	r5, [ip, r5]
   27e2e:	add	r4, pc
   27e30:	ldr	r5, [r5, #0]
   27e32:	str	r5, [sp, #84]	; 0x54
   27e34:	mov.w	r5, #0
   27e38:	ldr	r5, [pc, #60]	; (27e78 <btrfs_add_root_ref@@Base+0x250>)
   27e3a:	ldr	r4, [r4, r5]
   27e3c:	ldr	r5, [sp, #96]	; 0x60
   27e3e:	strd	r3, r2, [sp]
   27e42:	mov	r3, r1
   27e44:	ldr	r2, [pc, #52]	; (27e7c <btrfs_add_root_ref@@Base+0x254>)
   27e46:	movs	r1, #1
   27e48:	strd	r0, r5, [sp, #8]
   27e4c:	ldr	r0, [r4, #0]
   27e4e:	add	r4, sp, #20
   27e50:	add	r2, pc
   27e52:	blx	881c <__fprintf_chk@plt+0x4>
   27e56:	movs	r1, #16
   27e58:	mov	r0, r4
   27e5a:	blx	8680 <backtrace@plt>
   27e5e:	movs	r2, #2
   27e60:	mov	r1, r0
   27e62:	mov	r0, r4
   27e64:	blx	8990 <backtrace_symbols_fd@plt>
   27e68:	blx	8948 <abort@plt>
   27e6c:	ldmia	r7!, {r1, r2, r5, r6}
   27e6e:	movs	r3, r0
   27e70:	lsls	r4, r4, #8
   27e72:	movs	r0, r0
   27e74:	ldmia	r7!, {r1, r3, r4, r6}
   27e76:	movs	r3, r0
   27e78:	lsls	r4, r6, #8
   27e7a:	movs	r0, r0
   27e7c:	adds	r1, r0, #1
   27e7e:	movs	r1, r0
   27e80:	push	{r0, r1, r4, lr}
   27e82:	ldr	r4, [sp, #16]
   27e84:	cbz	r4, 27e8c <btrfs_add_root_ref@@Base+0x264>
   27e86:	str	r4, [sp, #0]
   27e88:	bl	27e1c <btrfs_add_root_ref@@Base+0x1f4>
   27e8c:	add	sp, #8
   27e8e:	pop	{r4, pc}
   27e90:	push	{r0, r1, r4, lr}
   27e92:	mov	r4, r0
   27e94:	clz	r0, r0
   27e98:	ldr	r2, [pc, #28]	; (27eb8 <btrfs_add_root_ref@@Base+0x290>)
   27e9a:	ldr	r1, [pc, #32]	; (27ebc <btrfs_add_root_ref@@Base+0x294>)
   27e9c:	mov.w	r3, #322	; 0x142
   27ea0:	lsrs	r0, r0, #5
   27ea2:	str	r0, [sp, #0]
   27ea4:	ldr	r0, [pc, #24]	; (27ec0 <btrfs_add_root_ref@@Base+0x298>)
   27ea6:	add	r2, pc
   27ea8:	add	r1, pc
   27eaa:	add	r0, pc
   27eac:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   27eb0:	lsls	r0, r4, #5
   27eb2:	adds	r0, #48	; 0x30
   27eb4:	add	sp, #8
   27eb6:	pop	{r4, pc}
   27eb8:	ldrh	r6, [r5, #4]
   27eba:	movs	r1, r0
   27ebc:	cmp	r2, #59	; 0x3b
   27ebe:	movs	r1, r0
   27ec0:	str	r0, [r1, #16]
   27ec2:	movs	r1, r0
   27ec4:	push	{r4, lr}
   27ec6:	mov	r4, r1
   27ec8:	ldr	r1, [pc, #84]	; (27f20 <btrfs_add_root_ref@@Base+0x2f8>)
   27eca:	sub	sp, #24
   27ecc:	ldr	r3, [pc, #84]	; (27f24 <btrfs_add_root_ref@@Base+0x2fc>)
   27ece:	add	r1, pc
   27ed0:	ldr	r3, [r1, r3]
   27ed2:	mov	r1, sp
   27ed4:	ldr	r3, [r3, #0]
   27ed6:	str	r3, [sp, #20]
   27ed8:	mov.w	r3, #0
   27edc:	movs	r3, #25
   27ede:	muls	r2, r3
   27ee0:	movs	r3, #17
   27ee2:	adds	r2, #101	; 0x65
   27ee4:	bl	1731a <read_extent_buffer@@Base>
   27ee8:	ldr.w	r3, [sp, #13]
   27eec:	ldr.w	r2, [sp, #9]
   27ef0:	str.w	r3, [r4, #13]
   27ef4:	ldrb.w	r3, [sp, #8]
   27ef8:	str.w	r2, [r4, #9]
   27efc:	ldr	r2, [pc, #40]	; (27f28 <btrfs_add_root_ref@@Base+0x300>)
   27efe:	strb	r3, [r4, #8]
   27f00:	ldr	r3, [sp, #0]
   27f02:	add	r2, pc
   27f04:	str	r3, [r4, #0]
   27f06:	ldr	r3, [sp, #4]
   27f08:	str	r3, [r4, #4]
   27f0a:	ldr	r3, [pc, #24]	; (27f24 <btrfs_add_root_ref@@Base+0x2fc>)
   27f0c:	ldr	r3, [r2, r3]
   27f0e:	ldr	r2, [r3, #0]
   27f10:	ldr	r3, [sp, #20]
   27f12:	eors	r2, r3
   27f14:	beq.n	27f1a <btrfs_add_root_ref@@Base+0x2f2>
   27f16:	blx	84cc <__stack_chk_fail@plt>
   27f1a:	add	sp, #24
   27f1c:	pop	{r4, pc}
   27f1e:	nop
   27f20:	ldmia	r6!, {r1, r3, r4, r5, r7}
   27f22:	movs	r3, r0
   27f24:	lsls	r4, r4, #8
   27f26:	movs	r0, r0
   27f28:	ldmia	r6!, {r1, r2, r7}
   27f2a:	movs	r3, r0

00027f2c <btrfs_close_devices@@Base>:
   27f2c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27f30:	sub	sp, #20
   27f32:	ldr.w	sl, [pc, #188]	; 27ff0 <btrfs_close_devices@@Base+0xc4>
   27f36:	mov	r4, r0
   27f38:	ldr	r7, [pc, #184]	; (27ff4 <btrfs_close_devices@@Base+0xc8>)
   27f3a:	movs	r6, #0
   27f3c:	add	sl, pc
   27f3e:	mov.w	r8, #0
   27f42:	mov.w	r9, #0
   27f46:	add	r7, pc
   27f48:	cmp	r4, #0
   27f4a:	beq.n	27fea <btrfs_close_devices@@Base+0xbe>
   27f4c:	ldr.w	fp, [pc, #168]	; 27ff8 <btrfs_close_devices@@Base+0xcc>
   27f50:	add	fp, pc
   27f52:	mov	r3, r4
   27f54:	ldr.w	r5, [r3, #72]!
   27f58:	cmp	r5, r3
   27f5a:	bne.n	27f78 <btrfs_close_devices@@Base+0x4c>
   27f5c:	ldr	r5, [r4, #92]	; 0x5c
   27f5e:	movs	r3, #0
   27f60:	str	r3, [r4, #92]	; 0x5c
   27f62:	mov	r0, r4
   27f64:	ldrd	r2, r3, [r4, #80]	; 0x50
   27f68:	str	r3, [r2, #4]
   27f6a:	str	r2, [r3, #0]
   27f6c:	cmp	r5, #0
   27f6e:	beq.n	27fde <btrfs_close_devices@@Base+0xb2>
   27f70:	blx	83f0 <free@plt+0x4>
   27f74:	mov	r4, r5
   27f76:	b.n	27f48 <btrfs_close_devices@@Base+0x1c>
   27f78:	ldr	r0, [r5, #24]
   27f7a:	adds	r3, r0, #1
   27f7c:	beq.n	27fc2 <btrfs_close_devices@@Base+0x96>
   27f7e:	ldr	r3, [r5, #28]
   27f80:	cbz	r3, 27f9c <btrfs_close_devices@@Base+0x70>
   27f82:	blx	8370 <fsync@plt>
   27f86:	adds	r0, #1
   27f88:	bne.n	27f9c <btrfs_close_devices@@Base+0x70>
   27f8a:	ldrd	r2, r3, [r5, #64]	; 0x40
   27f8e:	mov	r0, fp
   27f90:	bl	17400 <__btrfs_warning@@Base>
   27f94:	blx	8740 <__errno_location@plt>
   27f98:	ldr	r6, [r0, #0]
   27f9a:	negs	r6, r6
   27f9c:	movs	r3, #4
   27f9e:	strd	r8, r9, [sp]
   27fa2:	str	r3, [sp, #8]
   27fa4:	movs	r2, #0
   27fa6:	ldr	r0, [r5, #24]
   27fa8:	movs	r3, #0
   27faa:	blx	83a0 <posix_fadvise64@plt>
   27fae:	cbz	r0, 27fbc <btrfs_close_devices@@Base+0x90>
   27fb0:	ldr	r3, [pc, #72]	; (27ffc <btrfs_close_devices@@Base+0xd0>)
   27fb2:	mov	r0, sl
   27fb4:	ldr	r3, [r7, r3]
   27fb6:	ldr	r1, [r3, #0]
   27fb8:	blx	8930 <fputs@plt+0x4>
   27fbc:	ldr	r0, [r5, #24]
   27fbe:	blx	8960 <close@plt>
   27fc2:	ldrd	r2, r3, [r5]
   27fc6:	str	r3, [r2, #4]
   27fc8:	str	r2, [r3, #0]
   27fca:	ldr	r0, [r5, #32]
   27fcc:	blx	83f0 <free@plt+0x4>
   27fd0:	ldr	r0, [r5, #36]	; 0x24
   27fd2:	blx	83f0 <free@plt+0x4>
   27fd6:	mov	r0, r5
   27fd8:	blx	83f0 <free@plt+0x4>
   27fdc:	b.n	27f52 <btrfs_close_devices@@Base+0x26>
   27fde:	blx	83f0 <free@plt+0x4>
   27fe2:	mov	r0, r6
   27fe4:	add	sp, #20
   27fe6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fea:	mov	r6, r4
   27fec:	b.n	27fe2 <btrfs_close_devices@@Base+0xb6>
   27fee:	nop
   27ff0:	ldr	r1, [r5, r3]
   27ff2:	movs	r1, r0
   27ff4:	ldmia	r6, {r1, r6}
   27ff6:	movs	r3, r0
   27ff8:	strh	r4, [r0, #4]
   27ffa:	movs	r1, r0
   27ffc:	lsls	r4, r6, #8
	...

00028000 <btrfs_close_all_devices@@Base>:
   28000:	push	{r4, lr}
   28002:	ldr	r4, [pc, #20]	; (28018 <btrfs_close_all_devices@@Base+0x18>)
   28004:	add	r4, pc
   28006:	ldr	r0, [r4, #0]
   28008:	cmp	r0, r4
   2800a:	bne.n	2800e <btrfs_close_all_devices@@Base+0xe>
   2800c:	pop	{r4, pc}
   2800e:	subs	r0, #80	; 0x50
   28010:	bl	27f2c <btrfs_close_devices@@Base>
   28014:	b.n	28006 <btrfs_close_all_devices@@Base+0x6>
   28016:	nop
   28018:	b.n	28384 <btrfs_scan_one_device@@Base+0x298>
   2801a:	movs	r3, r0

0002801c <btrfs_open_devices@@Base>:
   2801c:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   28020:	mov	r5, r0
   28022:	ldr.w	sl, [pc, #180]	; 280d8 <btrfs_open_devices@@Base+0xbc>
   28026:	mov	r8, r1
   28028:	ldr.w	r9, [pc, #176]	; 280dc <btrfs_open_devices@@Base+0xc0>
   2802c:	ldr	r4, [r0, #72]	; 0x48
   2802e:	add	sl, pc
   28030:	ldr	r6, [pc, #172]	; (280e0 <btrfs_open_devices@@Base+0xc4>)
   28032:	add	r9, pc
   28034:	add	r6, pc
   28036:	add.w	r3, r5, #72	; 0x48
   2803a:	cmp	r4, r3
   2803c:	bne.n	28042 <btrfs_open_devices@@Base+0x26>
   2803e:	movs	r6, #0
   28040:	b.n	28082 <btrfs_open_devices@@Base+0x66>
   28042:	ldr	r0, [r4, #32]
   28044:	cbnz	r0, 28060 <btrfs_open_devices@@Base+0x44>
   28046:	ldr	r3, [pc, #156]	; (280e4 <btrfs_open_devices@@Base+0xc8>)
   28048:	mov	r2, r9
   2804a:	ldrd	r0, r1, [r4, #64]	; 0x40
   2804e:	ldr	r3, [r6, r3]
   28050:	strd	r0, r1, [sp]
   28054:	movs	r1, #1
   28056:	ldr	r0, [r3, #0]
   28058:	blx	881c <__fprintf_chk@plt+0x4>
   2805c:	ldr	r4, [r4, #0]
   2805e:	b.n	28036 <btrfs_open_devices@@Base+0x1a>
   28060:	mov	r1, r8
   28062:	blx	8734 <__open64_2@plt>
   28066:	subs	r7, r0, #0
   28068:	bge.n	2808a <btrfs_open_devices@@Base+0x6e>
   2806a:	blx	8740 <__errno_location@plt>
   2806e:	ldr	r1, [r4, #32]
   28070:	ldr	r6, [r0, #0]
   28072:	ldr	r0, [pc, #116]	; (280e8 <btrfs_open_devices@@Base+0xcc>)
   28074:	negs	r6, r6
   28076:	add	r0, pc
   28078:	bl	1747c <__btrfs_error@@Base>
   2807c:	mov	r0, r5
   2807e:	bl	27f2c <btrfs_close_devices@@Base>
   28082:	mov	r0, r6
   28084:	add	sp, #16
   28086:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2808a:	movs	r3, #4
   2808c:	movs	r2, #0
   2808e:	str	r3, [sp, #8]
   28090:	movs	r3, #0
   28092:	strd	r2, r3, [sp]
   28096:	blx	83a0 <posix_fadvise64@plt>
   2809a:	cbz	r0, 280a8 <btrfs_open_devices@@Base+0x8c>
   2809c:	ldr	r3, [pc, #68]	; (280e4 <btrfs_open_devices@@Base+0xc8>)
   2809e:	mov	r0, sl
   280a0:	ldr	r3, [r6, r3]
   280a2:	ldr	r1, [r3, #0]
   280a4:	blx	8930 <fputs@plt+0x4>
   280a8:	ldrd	r0, r1, [r4, #64]	; 0x40
   280ac:	ldrd	r2, r3, [r5, #32]
   280b0:	cmp	r1, r3
   280b2:	it	eq
   280b4:	cmpeq	r0, r2
   280b6:	ldrd	r2, r3, [r5, #48]	; 0x30
   280ba:	it	eq
   280bc:	streq	r7, [r5, #64]	; 0x40
   280be:	ldrd	r0, r1, [r4, #64]	; 0x40
   280c2:	cmp	r1, r3
   280c4:	itt	eq
   280c6:	cmpeq	r0, r2
   280c8:	streq	r7, [r5, #68]	; 0x44
   280ca:	tst.w	r8, #2
   280ce:	str	r7, [r4, #24]
   280d0:	itt	ne
   280d2:	movne	r3, #1
   280d4:	strne	r3, [r4, #28]
   280d6:	b.n	2805c <btrfs_open_devices@@Base+0x40>
   280d8:	ldrsb	r7, [r6, r7]
   280da:	movs	r1, r0
   280dc:	ldrb	r2, [r0, #31]
   280de:	movs	r1, r0
   280e0:	ldmia	r5!, {r2, r4, r6}
   280e2:	movs	r3, r0
   280e4:	lsls	r4, r6, #8
   280e6:	movs	r0, r0
   280e8:	ldrb	r4, [r4, #30]
   280ea:	movs	r1, r0

000280ec <btrfs_scan_one_device@@Base>:
   280ec:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   280f0:	sub.w	sp, sp, #4128	; 0x1020
   280f4:	sub	sp, #12
   280f6:	mov	sl, r1
   280f8:	ldr	r1, [pc, #636]	; (28378 <btrfs_scan_one_device@@Base+0x28c>)
   280fa:	mov	r4, r3
   280fc:	str	r2, [sp, #28]
   280fe:	add.w	r3, sp, #4128	; 0x1020
   28102:	ldr	r2, [pc, #632]	; (2837c <btrfs_scan_one_device@@Base+0x290>)
   28104:	add	r1, pc
   28106:	adds	r3, #4
   28108:	add.w	fp, sp, #40	; 0x28
   2810c:	sub.w	r5, fp, #4
   28110:	ldr	r2, [r1, r2]
   28112:	mov	r1, r5
   28114:	ldr	r2, [r2, #0]
   28116:	str	r2, [r3, #0]
   28118:	mov.w	r2, #0
   2811c:	add.w	r3, sp, #4160	; 0x1040
   28120:	adds	r3, #24
   28122:	ldr	r3, [r3, #0]
   28124:	str	r3, [sp, #0]
   28126:	add.w	r3, sp, #4160	; 0x1040
   2812a:	adds	r3, #16
   2812c:	ldrd	r2, r3, [r3]
   28130:	bl	1ccc8 <btrfs_read_dev_super@@Base>
   28134:	cmp	r0, #0
   28136:	blt.w	28368 <btrfs_scan_one_device@@Base+0x27c>
   2813a:	ldr.w	r3, [r5, #201]	; 0xc9
   2813e:	movs	r2, #0
   28140:	mov	r0, r2
   28142:	str	r3, [sp, #16]
   28144:	ldr.w	r3, [r5, #205]	; 0xcd
   28148:	str	r3, [sp, #20]
   2814a:	ldr	r3, [r5, #60]	; 0x3c
   2814c:	and.w	r1, r3, #2
   28150:	orrs.w	r3, r0, r1
   28154:	mov.w	r1, #0
   28158:	mov	r9, r1
   2815a:	add.w	r0, fp, #28
   2815e:	ite	eq
   28160:	ldrdeq	r3, r2, [r5, #136]	; 0x88
   28164:	movne	r3, #1
   28166:	strd	r3, r2, [r4]
   2816a:	ldr.w	r3, [r5, #188]	; 0xbc
   2816e:	ldrd	r6, r7, [r5, #72]	; 0x48
   28172:	and.w	r8, r3, #1024	; 0x400
   28176:	orrs.w	r3, r8, r9
   2817a:	it	ne
   2817c:	addwne	r1, fp, #567	; 0x237
   28180:	bl	27d50 <btrfs_add_root_ref@@Base+0x128>
   28184:	mov	r4, r0
   28186:	cmp	r0, #0
   28188:	bne.n	28272 <btrfs_scan_one_device@@Base+0x186>
   2818a:	movs	r1, #96	; 0x60
   2818c:	movs	r0, #1
   2818e:	blx	8358 <calloc@plt+0x4>
   28192:	mov	r4, r0
   28194:	cbnz	r0, 281b6 <btrfs_scan_one_device@@Base+0xca>
   28196:	mvn.w	r0, #11
   2819a:	ldr	r1, [pc, #484]	; (28380 <btrfs_scan_one_device@@Base+0x294>)
   2819c:	add.w	r3, sp, #4128	; 0x1020
   281a0:	ldr	r2, [pc, #472]	; (2837c <btrfs_scan_one_device@@Base+0x290>)
   281a2:	adds	r3, #4
   281a4:	add	r1, pc
   281a6:	ldr	r2, [r1, r2]
   281a8:	ldr	r1, [r2, #0]
   281aa:	ldr	r2, [r3, #0]
   281ac:	eors	r1, r2
   281ae:	beq.w	2836e <btrfs_scan_one_device@@Base+0x282>
   281b2:	blx	84cc <__stack_chk_fail@plt>
   281b6:	ldr	r2, [pc, #460]	; (28384 <btrfs_scan_one_device@@Base+0x298>)
   281b8:	add.w	r3, r0, #72	; 0x48
   281bc:	strd	r3, r3, [r0, #72]	; 0x48
   281c0:	add.w	r3, r0, #80	; 0x50
   281c4:	add	r2, pc
   281c6:	add.w	ip, r4, #16
   281ca:	ldr	r1, [r2, #0]
   281cc:	str	r3, [r2, #0]
   281ce:	str	r3, [r1, #4]
   281d0:	add	r3, sp, #68	; 0x44
   281d2:	strd	r1, r2, [r0, #80]	; 0x50
   281d6:	ldmia	r3, {r0, r1, r2, r3}
   281d8:	stmia.w	r4, {r0, r1, r2, r3}
   281dc:	orrs.w	r3, r8, r9
   281e0:	beq.n	28268 <btrfs_scan_one_device@@Base+0x17c>
   281e2:	addw	r3, sp, #607	; 0x25f
   281e6:	addw	lr, sp, #623	; 0x26f
   281ea:	ldr	r0, [r3, #0]
   281ec:	adds	r3, #8
   281ee:	ldr.w	r1, [r3, #-4]
   281f2:	cmp	r3, lr
   281f4:	mov	r2, ip
   281f6:	stmia	r2!, {r0, r1}
   281f8:	mov	ip, r2
   281fa:	bne.n	281ea <btrfs_scan_one_device@@Base+0xfe>
   281fc:	ldrd	r2, r3, [sp, #16]
   28200:	strd	r6, r7, [r4, #40]	; 0x28
   28204:	strd	r2, r3, [r4, #32]
   28208:	mov.w	r2, #4294967295	; 0xffffffff
   2820c:	mov.w	r3, #4294967295	; 0xffffffff
   28210:	strd	r2, r3, [r4, #48]	; 0x30
   28214:	movs	r1, #128	; 0x80
   28216:	movs	r0, #1
   28218:	blx	8358 <calloc@plt+0x4>
   2821c:	mov	r8, r0
   2821e:	cmp	r0, #0
   28220:	beq.n	28196 <btrfs_scan_one_device@@Base+0xaa>
   28222:	mov.w	r3, #4294967295	; 0xffffffff
   28226:	str	r3, [r0, #24]
   28228:	ldrd	r2, r3, [sp, #16]
   2822c:	add.w	ip, r0, #112	; 0x70
   28230:	addw	lr, sp, #319	; 0x13f
   28234:	strd	r6, r7, [r0, #56]	; 0x38
   28238:	strd	r2, r3, [r0, #64]	; 0x40
   2823c:	addw	r3, sp, #303	; 0x12f
   28240:	ldr	r0, [r3, #0]
   28242:	adds	r3, #8
   28244:	ldr.w	r1, [r3, #-4]
   28248:	cmp	r3, lr
   2824a:	mov	r2, ip
   2824c:	stmia	r2!, {r0, r1}
   2824e:	mov	ip, r2
   28250:	bne.n	28240 <btrfs_scan_one_device@@Base+0x154>
   28252:	mov	r0, sl
   28254:	blx	84b4 <strdup@plt+0x4>
   28258:	mov	r9, r0
   2825a:	str.w	r0, [r8, #32]
   2825e:	cbnz	r0, 282c2 <btrfs_scan_one_device@@Base+0x1d6>
   28260:	mov	r0, r8
   28262:	blx	83f0 <free@plt+0x4>
   28266:	b.n	28196 <btrfs_scan_one_device@@Base+0xaa>
   28268:	ldmia.w	r4, {r0, r1, r2, r3}
   2826c:	stmia.w	ip, {r0, r1, r2, r3}
   28270:	b.n	281fc <btrfs_scan_one_device@@Base+0x110>
   28272:	addw	r3, fp, #263	; 0x107
   28276:	str	r3, [sp, #0]
   28278:	ldrd	r2, r3, [sp, #16]
   2827c:	bl	27d84 <btrfs_add_root_ref@@Base+0x15c>
   28280:	mov	r8, r0
   28282:	cmp	r0, #0
   28284:	beq.n	28214 <btrfs_scan_one_device@@Base+0x128>
   28286:	ldr.w	r9, [r0, #32]
   2828a:	cmp.w	r9, #0
   2828e:	beq.n	2829a <btrfs_scan_one_device@@Base+0x1ae>
   28290:	mov	r1, sl
   28292:	mov	r0, r9
   28294:	blx	837c <strcmp@plt>
   28298:	cbz	r0, 28316 <btrfs_scan_one_device@@Base+0x22a>
   2829a:	ldrd	r2, r3, [r8, #56]	; 0x38
   2829e:	cmp	r7, r3
   282a0:	it	eq
   282a2:	cmpeq	r6, r2
   282a4:	bcs.n	2834e <btrfs_scan_one_device@@Base+0x262>
   282a6:	ldr	r0, [pc, #224]	; (28388 <btrfs_scan_one_device@@Base+0x29c>)
   282a8:	mov	r1, sl
   282aa:	strd	r2, r3, [sp, #8]
   282ae:	mov	r2, r6
   282b0:	add	r0, pc
   282b2:	mov	r3, r7
   282b4:	str.w	r9, [sp]
   282b8:	bl	17400 <__btrfs_warning@@Base>
   282bc:	mvn.w	r0, #16
   282c0:	b.n	2819a <btrfs_scan_one_device@@Base+0xae>
   282c2:	addw	r0, sp, #335	; 0x14f
   282c6:	blx	84b4 <strdup@plt+0x4>
   282ca:	str.w	r0, [r8, #36]	; 0x24
   282ce:	cbnz	r0, 282d8 <btrfs_scan_one_device@@Base+0x1ec>
   282d0:	mov	r0, r9
   282d2:	blx	83f0 <free@plt+0x4>
   282d6:	b.n	28260 <btrfs_scan_one_device@@Base+0x174>
   282d8:	ldrd	r2, r3, [r5, #136]	; 0x88
   282dc:	strd	r2, r3, [r8, #40]	; 0x28
   282e0:	ldrd	r2, r3, [r5, #120]	; 0x78
   282e4:	strd	r2, r3, [r8, #48]	; 0x30
   282e8:	ldr.w	r2, [r5, #209]	; 0xd1
   282ec:	ldr.w	r3, [r5, #213]	; 0xd5
   282f0:	strd	r2, r3, [r8, #72]	; 0x48
   282f4:	ldr.w	r2, [r5, #217]	; 0xd9
   282f8:	ldr.w	r3, [r5, #221]	; 0xdd
   282fc:	strd	r2, r3, [r8, #80]	; 0x50
   28300:	mov	r3, r4
   28302:	ldr.w	r2, [r3, #72]!
   28306:	str.w	r8, [r2, #4]
   2830a:	strd	r2, r3, [r8]
   2830e:	str.w	r8, [r4, #72]	; 0x48
   28312:	str.w	r4, [r8, #12]
   28316:	ldrd	r2, r3, [r4, #40]	; 0x28
   2831a:	ldrd	r0, r1, [sp, #16]
   2831e:	cmp	r3, r7
   28320:	it	eq
   28322:	cmpeq	r2, r6
   28324:	ittt	cc
   28326:	strdcc	r6, r7, [r4, #40]	; 0x28
   2832a:	ldrdcc	r2, r3, [sp, #16]
   2832e:	strdcc	r2, r3, [r4, #32]
   28332:	ldrd	r2, r3, [r4, #48]	; 0x30
   28336:	cmp	r1, r3
   28338:	it	eq
   2833a:	cmpeq	r0, r2
   2833c:	ittt	cc
   2833e:	movcc	r2, r0
   28340:	movcc	r3, r1
   28342:	strdcc	r2, r3, [r4, #48]	; 0x30
   28346:	movs	r0, #0
   28348:	ldr	r3, [sp, #28]
   2834a:	str	r4, [r3, #0]
   2834c:	b.n	2819a <btrfs_scan_one_device@@Base+0xae>
   2834e:	mov	r0, sl
   28350:	blx	84b4 <strdup@plt+0x4>
   28354:	mov	r5, r0
   28356:	cmp	r0, #0
   28358:	beq.w	28196 <btrfs_scan_one_device@@Base+0xaa>
   2835c:	mov	r0, r9
   2835e:	blx	83f0 <free@plt+0x4>
   28362:	str.w	r5, [r8, #32]
   28366:	b.n	28316 <btrfs_scan_one_device@@Base+0x22a>
   28368:	mvn.w	r0, #4
   2836c:	b.n	2819a <btrfs_scan_one_device@@Base+0xae>
   2836e:	add.w	sp, sp, #4128	; 0x1020
   28372:	add	sp, #12
   28374:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28378:	ldmia	r4!, {r2, r7}
   2837a:	movs	r3, r0
   2837c:	lsls	r4, r4, #8
   2837e:	movs	r0, r0
   28380:	ldmia	r3!, {r2, r5, r6, r7}
   28382:	movs	r3, r0
   28384:	svc	244	; 0xf4
   28386:	movs	r3, r0
   28388:	ldrb	r6, [r0, #22]
   2838a:	movs	r1, r0

0002838c <btrfs_insert_dev_extent@@Base>:
   2838c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28390:	sub	sp, #52	; 0x34
   28392:	mov	r7, r3
   28394:	mov	r8, r2
   28396:	ldrd	sl, r3, [sp, #88]	; 0x58
   2839a:	mov	r4, r0
   2839c:	ldr	r2, [pc, #236]	; (2848c <btrfs_insert_dev_extent@@Base+0x100>)
   2839e:	mov	r6, r1
   283a0:	ldr.w	r9, [sp, #100]	; 0x64
   283a4:	str	r3, [sp, #8]
   283a6:	add	r2, pc
   283a8:	ldr	r3, [sp, #96]	; 0x60
   283aa:	ldr.w	fp, [r1, #8]
   283ae:	str	r3, [sp, #12]
   283b0:	ldr	r3, [pc, #220]	; (28490 <btrfs_insert_dev_extent@@Base+0x104>)
   283b2:	ldr	r3, [r2, r3]
   283b4:	ldr	r3, [r3, #0]
   283b6:	str	r3, [sp, #44]	; 0x2c
   283b8:	mov.w	r3, #0
   283bc:	bl	17e50 <btrfs_alloc_path@@Base>
   283c0:	mov	r5, r0
   283c2:	cmp	r0, #0
   283c4:	beq.n	2847e <btrfs_insert_dev_extent@@Base+0xf2>
   283c6:	ldrd	r0, r1, [r6, #64]	; 0x40
   283ca:	mov	r2, r5
   283cc:	ldr	r3, [sp, #12]
   283ce:	str.w	r9, [sp, #37]	; 0x25
   283d2:	mov.w	r9, #1
   283d6:	strd	r0, r1, [sp, #24]
   283da:	mov	r1, fp
   283dc:	str.w	r3, [sp, #33]	; 0x21
   283e0:	mov	r0, r4
   283e2:	movs	r3, #204	; 0xcc
   283e4:	str.w	r9, [sp, #4]
   283e8:	strb.w	r3, [sp, #32]
   283ec:	movs	r3, #48	; 0x30
   283ee:	str	r3, [sp, #20]
   283f0:	add	r3, sp, #20
   283f2:	str	r3, [sp, #0]
   283f4:	add	r3, sp, #24
   283f6:	bl	1b00c <btrfs_insert_empty_items@@Base>
   283fa:	subs	r6, r0, #0
   283fc:	blt.n	28464 <btrfs_insert_dev_extent@@Base+0xd8>
   283fe:	ldr	r0, [r5, #0]
   28400:	movs	r2, #25
   28402:	ldr	r3, [r5, #32]
   28404:	mov.w	lr, #3
   28408:	add.w	r1, r0, #96	; 0x60
   2840c:	str	r0, [sp, #12]
   2840e:	mla	r3, r2, r3, r1
   28412:	ldr.w	r2, [r3, #118]	; 0x76
   28416:	movs	r3, #0
   28418:	add.w	ip, r2, #101	; 0x65
   2841c:	adds	r2, #133	; 0x85
   2841e:	add.w	r4, r1, ip
   28422:	strb.w	lr, [r1, ip]
   28426:	strb	r3, [r4, #1]
   28428:	strb	r3, [r4, #2]
   2842a:	strb	r3, [r4, #3]
   2842c:	strb	r3, [r4, #4]
   2842e:	strb	r3, [r4, #5]
   28430:	strb	r3, [r4, #6]
   28432:	strb	r3, [r4, #7]
   28434:	strb	r3, [r4, #8]
   28436:	strb	r3, [r4, #10]
   28438:	strb	r3, [r4, #11]
   2843a:	strb	r3, [r4, #12]
   2843c:	strb	r3, [r4, #13]
   2843e:	strb	r3, [r4, #14]
   28440:	strb	r3, [r4, #15]
   28442:	movs	r3, #16
   28444:	strb.w	r9, [r4, #9]
   28448:	str.w	r8, [r4, #16]
   2844c:	str	r7, [r4, #20]
   2844e:	ldr.w	r1, [fp, #464]	; 0x1d0
   28452:	bl	17330 <write_extent_buffer@@Base>
   28456:	ldr	r3, [sp, #8]
   28458:	ldr	r0, [sp, #12]
   2845a:	str.w	sl, [r4, #24]
   2845e:	str	r3, [r4, #28]
   28460:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   28464:	mov	r0, r5
   28466:	bl	17e7e <btrfs_free_path@@Base>
   2846a:	ldr	r2, [pc, #40]	; (28494 <btrfs_insert_dev_extent@@Base+0x108>)
   2846c:	ldr	r3, [pc, #32]	; (28490 <btrfs_insert_dev_extent@@Base+0x104>)
   2846e:	add	r2, pc
   28470:	ldr	r3, [r2, r3]
   28472:	ldr	r2, [r3, #0]
   28474:	ldr	r3, [sp, #44]	; 0x2c
   28476:	eors	r2, r3
   28478:	beq.n	28484 <btrfs_insert_dev_extent@@Base+0xf8>
   2847a:	blx	84cc <__stack_chk_fail@plt>
   2847e:	mvn.w	r6, #11
   28482:	b.n	2846a <btrfs_insert_dev_extent@@Base+0xde>
   28484:	mov	r0, r6
   28486:	add	sp, #52	; 0x34
   28488:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2848c:	ldmia	r1, {r1, r5, r6, r7}
   2848e:	movs	r3, r0
   28490:	lsls	r4, r4, #8
   28492:	movs	r0, r0
   28494:	ldmia	r1, {r1, r3, r4}
   28496:	movs	r3, r0

00028498 <btrfs_add_device@@Base>:
   28498:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2849c:	mov	r5, r2
   2849e:	vpush	{d8}
   284a2:	mov	sl, r1
   284a4:	ldr	r2, [pc, #536]	; (286c0 <btrfs_add_device@@Base+0x228>)
   284a6:	ldr	r3, [pc, #540]	; (286c4 <btrfs_add_device@@Base+0x22c>)
   284a8:	add	r2, pc
   284aa:	vmov	s16, r0
   284ae:	sub	sp, #68	; 0x44
   284b0:	ldr.w	fp, [r1, #32]
   284b4:	ldr	r3, [r2, r3]
   284b6:	ldr	r3, [r3, #0]
   284b8:	str	r3, [sp, #60]	; 0x3c
   284ba:	mov.w	r3, #0
   284be:	bl	17e50 <btrfs_alloc_path@@Base>
   284c2:	mov	r6, r0
   284c4:	cmp	r0, #0
   284c6:	beq.w	286ae <btrfs_add_device@@Base+0x216>
   284ca:	mov.w	r9, #0
   284ce:	movs	r3, #1
   284d0:	strd	r3, r9, [sp, #20]
   284d4:	add	r3, sp, #20
   284d6:	str	r3, [sp, #12]
   284d8:	mov.w	r2, #4294967295	; 0xffffffff
   284dc:	mov	r3, r0
   284de:	strb.w	r2, [sp, #29]
   284e2:	strb.w	r2, [sp, #30]
   284e6:	mov	r1, fp
   284e8:	strb.w	r2, [sp, #31]
   284ec:	mov	r0, r9
   284ee:	strb.w	r2, [sp, #32]
   284f2:	movs	r7, #216	; 0xd8
   284f4:	strb.w	r2, [sp, #33]	; 0x21
   284f8:	strb.w	r2, [sp, #34]	; 0x22
   284fc:	strb.w	r2, [sp, #35]	; 0x23
   28500:	strb.w	r2, [sp, #36]	; 0x24
   28504:	strd	r9, r9, [sp]
   28508:	ldr	r2, [sp, #12]
   2850a:	strb.w	r7, [sp, #28]
   2850e:	bl	1a23c <btrfs_search_slot@@Base>
   28512:	subs	r4, r0, #0
   28514:	blt.w	2869e <btrfs_add_device@@Base+0x206>
   28518:	ldr	r2, [pc, #428]	; (286c8 <btrfs_add_device@@Base+0x230>)
   2851a:	it	eq
   2851c:	moveq	r3, #1
   2851e:	ldr	r1, [pc, #428]	; (286cc <btrfs_add_device@@Base+0x234>)
   28520:	it	ne
   28522:	movne	r3, r9
   28524:	ldr	r0, [pc, #424]	; (286d0 <btrfs_add_device@@Base+0x238>)
   28526:	add	r2, pc
   28528:	adds	r2, #22
   2852a:	add	r1, pc
   2852c:	add	r0, pc
   2852e:	str	r3, [sp, #0]
   28530:	movw	r3, #719	; 0x2cf
   28534:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   28538:	movs	r2, #1
   2853a:	movs	r3, #0
   2853c:	mov	r1, r6
   2853e:	mov	r0, fp
   28540:	str	r7, [sp, #0]
   28542:	bl	1b8f4 <btrfs_previous_item@@Base>
   28546:	mov	r4, r0
   28548:	cmp	r0, #0
   2854a:	bne.w	286a4 <btrfs_add_device@@Base+0x20c>
   2854e:	ldr	r2, [r6, #32]
   28550:	add	r1, sp, #40	; 0x28
   28552:	ldr	r0, [r6, #0]
   28554:	bl	27ec4 <btrfs_add_root_ref@@Base+0x29c>
   28558:	ldr.w	r7, [sp, #49]	; 0x31
   2855c:	ldr.w	r8, [sp, #53]	; 0x35
   28560:	adds	r7, #1
   28562:	adc.w	r8, r8, r9
   28566:	mov	r0, r6
   28568:	bl	17e58 <btrfs_release_path@@Base>
   2856c:	cmp	r4, #0
   2856e:	bne.w	28684 <btrfs_add_device@@Base+0x1ec>
   28572:	movs	r2, #1
   28574:	movs	r3, #0
   28576:	strd	r2, r3, [sp, #40]	; 0x28
   2857a:	movs	r3, #216	; 0xd8
   2857c:	strb.w	r3, [sp, #48]	; 0x30
   28580:	movs	r3, #98	; 0x62
   28582:	str	r3, [sp, #20]
   28584:	movs	r3, #1
   28586:	str	r3, [sp, #4]
   28588:	mov	r2, r6
   2858a:	ldr	r3, [sp, #12]
   2858c:	mov	r1, fp
   2858e:	vmov	r0, s16
   28592:	str.w	r7, [sp, #49]	; 0x31
   28596:	str	r3, [sp, #0]
   28598:	add	r3, sp, #40	; 0x28
   2859a:	str.w	r8, [sp, #53]	; 0x35
   2859e:	bl	1b00c <btrfs_insert_empty_items@@Base>
   285a2:	mov	r4, r0
   285a4:	cmp	r0, #0
   285a6:	bne.n	28684 <btrfs_add_device@@Base+0x1ec>
   285a8:	ldr	r0, [r6, #0]
   285aa:	movs	r1, #25
   285ac:	ldr	r3, [r6, #32]
   285ae:	add.w	r2, r0, #96	; 0x60
   285b2:	mla	r3, r1, r3, r2
   285b6:	ldr.w	r9, [r3, #118]	; 0x76
   285ba:	strd	r7, r8, [r5, #64]	; 0x40
   285be:	add.w	r1, r9, #101	; 0x65
   285c2:	adds	r3, r2, r1
   285c4:	str	r7, [r2, r1]
   285c6:	str.w	r8, [r3, #4]
   285ca:	strb.w	r4, [r3, #44]	; 0x2c
   285ce:	strb.w	r4, [r3, #45]	; 0x2d
   285d2:	strb.w	r4, [r3, #46]	; 0x2e
   285d6:	strb.w	r4, [r3, #47]	; 0x2f
   285da:	strb.w	r4, [r3, #48]	; 0x30
   285de:	strb.w	r4, [r3, #49]	; 0x31
   285e2:	strb.w	r4, [r3, #50]	; 0x32
   285e6:	strb.w	r4, [r3, #51]	; 0x33
   285ea:	ldrd	r1, r2, [r5, #104]	; 0x68
   285ee:	str	r1, [r3, #36]	; 0x24
   285f0:	str	r2, [r3, #40]	; 0x28
   285f2:	ldr	r2, [r5, #88]	; 0x58
   285f4:	str	r2, [r3, #24]
   285f6:	ldr	r2, [r5, #92]	; 0x5c
   285f8:	str	r2, [r3, #28]
   285fa:	ldr	r2, [r5, #96]	; 0x60
   285fc:	str	r2, [r3, #32]
   285fe:	ldrd	r1, r2, [r5, #72]	; 0x48
   28602:	str	r1, [r3, #8]
   28604:	str	r2, [r3, #12]
   28606:	ldrd	r1, r2, [r5, #80]	; 0x50
   2860a:	str	r1, [r3, #16]
   2860c:	add.w	r1, r5, #112	; 0x70
   28610:	str	r2, [r3, #20]
   28612:	add.w	r2, r9, #167	; 0xa7
   28616:	strb.w	r4, [r3, #60]	; 0x3c
   2861a:	strb.w	r4, [r3, #61]	; 0x3d
   2861e:	strb.w	r4, [r3, #62]	; 0x3e
   28622:	strb.w	r4, [r3, #63]	; 0x3f
   28626:	strb.w	r4, [r3, #64]	; 0x40
   2862a:	strb.w	r4, [r3, #65]	; 0x41
   2862e:	strb.w	r4, [r3, #52]	; 0x34
   28632:	strb.w	r4, [r3, #53]	; 0x35
   28636:	strb.w	r4, [r3, #54]	; 0x36
   2863a:	strb.w	r4, [r3, #55]	; 0x37
   2863e:	strb.w	r4, [r3, #56]	; 0x38
   28642:	strb.w	r4, [r3, #57]	; 0x39
   28646:	strb.w	r4, [r3, #58]	; 0x3a
   2864a:	strb.w	r4, [r3, #59]	; 0x3b
   2864e:	movs	r3, #16
   28650:	str	r0, [sp, #12]
   28652:	bl	17330 <write_extent_buffer@@Base>
   28656:	ldr.w	r1, [sl, #352]	; 0x160
   2865a:	movs	r3, #16
   2865c:	add.w	r2, r9, #183	; 0xb7
   28660:	ldr	r0, [sp, #12]
   28662:	add	r1, r3
   28664:	bl	17330 <write_extent_buffer@@Base>
   28668:	ldr	r0, [sp, #12]
   2866a:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2866e:	ldr.w	r2, [sl, #352]	; 0x160
   28672:	ldrd	r0, r5, [r5, #72]	; 0x48
   28676:	ldrd	r3, r1, [r2, #56]	; 0x38
   2867a:	adds	r3, r3, r0
   2867c:	adc.w	r1, r5, r1
   28680:	strd	r3, r1, [r2, #56]	; 0x38
   28684:	mov	r0, r6
   28686:	bl	17e7e <btrfs_free_path@@Base>
   2868a:	ldr	r2, [pc, #72]	; (286d4 <btrfs_add_device@@Base+0x23c>)
   2868c:	ldr	r3, [pc, #52]	; (286c4 <btrfs_add_device@@Base+0x22c>)
   2868e:	add	r2, pc
   28690:	ldr	r3, [r2, r3]
   28692:	ldr	r2, [r3, #0]
   28694:	ldr	r3, [sp, #60]	; 0x3c
   28696:	eors	r2, r3
   28698:	beq.n	286b4 <btrfs_add_device@@Base+0x21c>
   2869a:	blx	84cc <__stack_chk_fail@plt>
   2869e:	movs	r7, #0
   286a0:	mov	r8, r7
   286a2:	b.n	28566 <btrfs_add_device@@Base+0xce>
   286a4:	movs	r7, #1
   286a6:	mov.w	r8, #0
   286aa:	mov	r4, r9
   286ac:	b.n	28566 <btrfs_add_device@@Base+0xce>
   286ae:	mvn.w	r4, #11
   286b2:	b.n	2868a <btrfs_add_device@@Base+0x1f2>
   286b4:	mov	r0, r4
   286b6:	add	sp, #68	; 0x44
   286b8:	vpop	{d8}
   286bc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   286c0:	ldmia	r0!, {r5, r6, r7}
   286c2:	movs	r3, r0
   286c4:	lsls	r4, r4, #8
   286c6:	movs	r0, r0
   286c8:	strh	r6, [r5, #16]
   286ca:	movs	r1, r0
   286cc:	ldrb	r7, [r1, #13]
   286ce:	movs	r1, r0
   286d0:	movs	r7, #102	; 0x66
   286d2:	movs	r1, r0
   286d4:	stmia	r6!, {r1, r3, r4, r5, r6, r7}
   286d6:	movs	r3, r0

000286d8 <btrfs_update_device@@Base>:
   286d8:	ldr	r2, [pc, #212]	; (287b0 <btrfs_update_device@@Base+0xd8>)
   286da:	ldr	r3, [pc, #216]	; (287b4 <btrfs_update_device@@Base+0xdc>)
   286dc:	add	r2, pc
   286de:	push	{r4, r5, r6, r7, lr}
   286e0:	sub	sp, #44	; 0x2c
   286e2:	ldr	r3, [r2, r3]
   286e4:	mov	r4, r1
   286e6:	mov	r6, r0
   286e8:	ldr	r3, [r3, #0]
   286ea:	str	r3, [sp, #36]	; 0x24
   286ec:	mov.w	r3, #0
   286f0:	ldr	r3, [r1, #8]
   286f2:	ldr.w	r3, [r3, #464]	; 0x1d0
   286f6:	ldr	r1, [r3, #32]
   286f8:	str	r1, [sp, #12]
   286fa:	bl	17e50 <btrfs_alloc_path@@Base>
   286fe:	mov	r5, r0
   28700:	cmp	r0, #0
   28702:	beq.n	287a2 <btrfs_update_device@@Base+0xca>
   28704:	movs	r2, #1
   28706:	movs	r3, #0
   28708:	strd	r2, r3, [sp, #16]
   2870c:	movs	r3, #216	; 0xd8
   2870e:	strb.w	r3, [sp, #24]
   28712:	movs	r2, #1
   28714:	ldr	r3, [r4, #64]	; 0x40
   28716:	ldr	r1, [sp, #12]
   28718:	str.w	r3, [sp, #25]
   2871c:	ldr	r3, [r4, #68]	; 0x44
   2871e:	str.w	r3, [sp, #29]
   28722:	movs	r3, #0
   28724:	strd	r3, r2, [sp]
   28728:	mov	r3, r0
   2872a:	add	r2, sp, #16
   2872c:	mov	r0, r6
   2872e:	bl	1a23c <btrfs_search_slot@@Base>
   28732:	subs	r6, r0, #0
   28734:	blt.n	28782 <btrfs_update_device@@Base+0xaa>
   28736:	bne.n	2879c <btrfs_update_device@@Base+0xc4>
   28738:	ldr	r0, [r5, #0]
   2873a:	movs	r2, #25
   2873c:	ldr	r3, [r5, #32]
   2873e:	add.w	r1, r0, #96	; 0x60
   28742:	ldr.w	ip, [r4, #68]	; 0x44
   28746:	ldr	r7, [r4, #64]	; 0x40
   28748:	mla	r3, r2, r3, r1
   2874c:	ldr.w	r3, [r3, #118]	; 0x76
   28750:	adds	r3, #101	; 0x65
   28752:	adds	r2, r1, r3
   28754:	str	r7, [r1, r3]
   28756:	str.w	ip, [r2, #4]
   2875a:	ldrd	r1, r3, [r4, #104]	; 0x68
   2875e:	str	r1, [r2, #36]	; 0x24
   28760:	str	r3, [r2, #40]	; 0x28
   28762:	ldr	r3, [r4, #88]	; 0x58
   28764:	str	r3, [r2, #24]
   28766:	ldr	r3, [r4, #92]	; 0x5c
   28768:	str	r3, [r2, #28]
   2876a:	ldr	r3, [r4, #96]	; 0x60
   2876c:	str	r3, [r2, #32]
   2876e:	ldrd	r1, r3, [r4, #72]	; 0x48
   28772:	str	r1, [r2, #8]
   28774:	str	r3, [r2, #12]
   28776:	ldrd	r1, r3, [r4, #80]	; 0x50
   2877a:	str	r1, [r2, #16]
   2877c:	str	r3, [r2, #20]
   2877e:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   28782:	mov	r0, r5
   28784:	bl	17e7e <btrfs_free_path@@Base>
   28788:	ldr	r2, [pc, #44]	; (287b8 <btrfs_update_device@@Base+0xe0>)
   2878a:	ldr	r3, [pc, #40]	; (287b4 <btrfs_update_device@@Base+0xdc>)
   2878c:	add	r2, pc
   2878e:	ldr	r3, [r2, r3]
   28790:	ldr	r2, [r3, #0]
   28792:	ldr	r3, [sp, #36]	; 0x24
   28794:	eors	r2, r3
   28796:	beq.n	287a8 <btrfs_update_device@@Base+0xd0>
   28798:	blx	84cc <__stack_chk_fail@plt>
   2879c:	mvn.w	r6, #1
   287a0:	b.n	28782 <btrfs_update_device@@Base+0xaa>
   287a2:	mvn.w	r6, #11
   287a6:	b.n	28788 <btrfs_update_device@@Base+0xb0>
   287a8:	mov	r0, r6
   287aa:	add	sp, #44	; 0x2c
   287ac:	pop	{r4, r5, r6, r7, pc}
   287ae:	nop
   287b0:	stmia	r6!, {r2, r3, r5, r7}
   287b2:	movs	r3, r0
   287b4:	lsls	r4, r4, #8
   287b6:	movs	r0, r0
   287b8:	stmia	r5!, {r2, r3, r4, r5, r6, r7}
   287ba:	movs	r3, r0

000287bc <btrfs_add_system_chunk@@Base>:
   287bc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   287c0:	mov	r4, r1
   287c2:	ldr.w	r6, [r0, #308]	; 0x134
   287c6:	mov	r1, r2
   287c8:	add.w	r5, r3, #17
   287cc:	ldr.w	r2, [r6, #160]	; 0xa0
   287d0:	add	r5, r2
   287d2:	cmp.w	r5, #2048	; 0x800
   287d6:	bhi.n	28816 <btrfs_add_system_chunk@@Base+0x5a>
   287d8:	ldr.w	lr, [r4, #9]
   287dc:	addw	r7, r6, #811	; 0x32b
   287e0:	ldr.w	ip, [r4, #13]
   287e4:	adds	r0, r7, r2
   287e6:	ldrb.w	r8, [r4, #8]
   287ea:	adds	r0, #17
   287ec:	ldr.w	r9, [r4]
   287f0:	ldr	r4, [r4, #4]
   287f2:	str.w	r9, [r7, r2]
   287f6:	mov	r2, r3
   287f8:	str.w	r4, [r0, #-13]
   287fc:	strb.w	r8, [r0, #-9]
   28800:	str.w	lr, [r0, #-8]
   28804:	str.w	ip, [r0, #-4]
   28808:	blx	843c <memcpy@plt+0x4>
   2880c:	movs	r0, #0
   2880e:	str.w	r5, [r6, #160]	; 0xa0
   28812:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   28816:	mvn.w	r0, #26
   2881a:	b.n	28812 <btrfs_add_system_chunk@@Base+0x56>

0002881c <btrfs_alloc_chunk@@Base>:
   2881c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28820:	vpush	{d8-d11}
   28824:	vmov	s16, r0
   28828:	sub	sp, #252	; 0xfc
   2882a:	str	r3, [sp, #148]	; 0x94
   2882c:	ldrd	sl, r3, [sp, #320]	; 0x140
   28830:	str	r2, [sp, #176]	; 0xb0
   28832:	ldr.w	r2, [pc, #1252]	; 28d18 <btrfs_alloc_chunk@@Base+0x4fc>
   28836:	str	r3, [sp, #120]	; 0x78
   28838:	ldr.w	r3, [pc, #1248]	; 28d1c <btrfs_alloc_chunk@@Base+0x500>
   2883c:	add	r2, pc
   2883e:	str	r1, [sp, #44]	; 0x2c
   28840:	ldr	r3, [r2, r3]
   28842:	ldr	r3, [r3, #0]
   28844:	str	r3, [sp, #244]	; 0xf4
   28846:	mov.w	r3, #0
   2884a:	ldr	r3, [r1, #24]
   2884c:	str	r3, [sp, #172]	; 0xac
   2884e:	ldr	r3, [r1, #32]
   28850:	vmov	s17, r3
   28854:	ldr.w	r3, [r1, #352]	; 0x160
   28858:	str	r3, [sp, #48]	; 0x30
   2885a:	adds	r3, #72	; 0x48
   2885c:	str	r3, [sp, #108]	; 0x6c
   2885e:	ldr	r3, [sp, #48]	; 0x30
   28860:	ldr	r2, [sp, #108]	; 0x6c
   28862:	ldr	r3, [r3, #72]	; 0x48
   28864:	cmp	r2, r3
   28866:	bne.n	28886 <btrfs_alloc_chunk@@Base+0x6a>
   28868:	mvn.w	r6, #27
   2886c:	ldr.w	r2, [pc, #1200]	; 28d20 <btrfs_alloc_chunk@@Base+0x504>
   28870:	ldr.w	r3, [pc, #1192]	; 28d1c <btrfs_alloc_chunk@@Base+0x500>
   28874:	add	r2, pc
   28876:	ldr	r3, [r2, r3]
   28878:	ldr	r2, [r3, #0]
   2887a:	ldr	r3, [sp, #244]	; 0xf4
   2887c:	eors	r2, r3
   2887e:	beq.w	2935c <btrfs_alloc_chunk@@Base+0xb40>
   28882:	blx	84cc <__stack_chk_fail@plt>
   28886:	and.w	r0, sl, #2040	; 0x7f8
   2888a:	movs	r3, #0
   2888c:	mov	r1, r3
   2888e:	orrs.w	r2, r0, r1
   28892:	beq.w	28af6 <btrfs_alloc_chunk@@Base+0x2da>
   28896:	and.w	r0, sl, #2
   2889a:	orrs.w	r2, r0, r1
   2889e:	bne.w	28ade <btrfs_alloc_chunk@@Base+0x2c2>
   288a2:	and.w	r0, sl, #1
   288a6:	orrs.w	r2, r0, r1
   288aa:	beq.w	28a9c <btrfs_alloc_chunk@@Base+0x280>
   288ae:	ldr	r3, [sp, #44]	; 0x2c
   288b0:	movs	r2, #0
   288b2:	mov.w	r1, #1073741824	; 0x40000000
   288b6:	mov.w	r5, #2147483648	; 0x80000000
   288ba:	strd	r1, r2, [sp, #16]
   288be:	movs	r4, #2
   288c0:	ldr.w	r3, [r3, #384]	; 0x180
   288c4:	mov.w	r2, #67108864	; 0x4000000
   288c8:	subs	r3, #206	; 0xce
   288ca:	lsrs	r3, r3, #5
   288cc:	adds	r3, #1
   288ce:	str	r2, [sp, #72]	; 0x48
   288d0:	and.w	r6, sl, #16
   288d4:	ldr	r2, [sp, #44]	; 0x2c
   288d6:	movs	r7, #0
   288d8:	ldr.w	r1, [r2, #308]	; 0x134
   288dc:	orrs.w	r2, r6, r7
   288e0:	beq.w	28afc <btrfs_alloc_chunk@@Base+0x2e0>
   288e4:	ldr.w	r7, [r1, #140]	; 0x8c
   288e8:	ldr.w	r6, [r1, #136]	; 0x88
   288ec:	cmp	r7, #0
   288ee:	it	eq
   288f0:	cmpeq	r6, #3
   288f2:	it	cs
   288f4:	movcs	r6, #2
   288f6:	cmp	r6, #2
   288f8:	mov	fp, r6
   288fa:	bne.n	28868 <btrfs_alloc_chunk@@Base+0x4c>
   288fc:	and.w	r6, sl, #512	; 0x200
   28900:	movs	r7, #0
   28902:	orrs.w	r2, r6, r7
   28906:	beq.n	28920 <btrfs_alloc_chunk@@Base+0x104>
   28908:	ldr.w	r7, [r1, #140]	; 0x8c
   2890c:	ldr.w	r6, [r1, #136]	; 0x88
   28910:	cmp	r7, #0
   28912:	it	eq
   28914:	cmpeq	r6, #4
   28916:	it	cs
   28918:	movcs	r6, #3
   2891a:	cmp	r6, #3
   2891c:	mov	fp, r6
   2891e:	bne.n	28868 <btrfs_alloc_chunk@@Base+0x4c>
   28920:	and.w	r6, sl, #1024	; 0x400
   28924:	movs	r7, #0
   28926:	orrs.w	r2, r6, r7
   2892a:	beq.n	28944 <btrfs_alloc_chunk@@Base+0x128>
   2892c:	ldr.w	r7, [r1, #140]	; 0x8c
   28930:	ldr.w	r6, [r1, #136]	; 0x88
   28934:	cmp	r7, #0
   28936:	it	eq
   28938:	cmpeq	r6, #5
   2893a:	it	cs
   2893c:	movcs	r6, #4
   2893e:	cmp	r6, #4
   28940:	mov	fp, r6
   28942:	bne.n	28868 <btrfs_alloc_chunk@@Base+0x4c>
   28944:	movs	r2, #0
   28946:	and.w	r0, sl, #32
   2894a:	strd	r0, r2, [sp, #56]	; 0x38
   2894e:	ldrd	r6, r7, [sp, #56]	; 0x38
   28952:	orrs.w	r0, r6, r7
   28956:	and.w	r6, sl, #8
   2895a:	mov	r7, r2
   2895c:	it	ne
   2895e:	movne.w	fp, #2
   28962:	orrs.w	r2, r6, r7
   28966:	beq.w	28b02 <btrfs_alloc_chunk@@Base+0x2e6>
   2896a:	ldr.w	r2, [r1, #136]	; 0x88
   2896e:	cmp	r2, r3
   28970:	it	ge
   28972:	movge	r2, r3
   28974:	mov	fp, r2
   28976:	movs	r2, #2
   28978:	str	r2, [sp, #76]	; 0x4c
   2897a:	and.w	r2, sl, #64	; 0x40
   2897e:	str	r2, [sp, #88]	; 0x58
   28980:	movs	r2, #0
   28982:	str	r2, [sp, #92]	; 0x5c
   28984:	ldrd	r6, r7, [sp, #88]	; 0x58
   28988:	orrs.w	r2, r6, r7
   2898c:	beq.w	28b08 <btrfs_alloc_chunk@@Base+0x2ec>
   28990:	ldr.w	r2, [r1, #136]	; 0x88
   28994:	cmp	r2, r3
   28996:	it	ge
   28998:	movge	r2, r3
   2899a:	cmp	r2, #3
   2899c:	ble.w	28868 <btrfs_alloc_chunk@@Base+0x4c>
   289a0:	bic.w	fp, r2, #1
   289a4:	movs	r2, #2
   289a6:	str	r2, [sp, #52]	; 0x34
   289a8:	movs	r2, #4
   289aa:	str	r2, [sp, #76]	; 0x4c
   289ac:	and.w	r6, sl, #128	; 0x80
   289b0:	movs	r7, #0
   289b2:	orrs.w	r2, r6, r7
   289b6:	beq.n	289ce <btrfs_alloc_chunk@@Base+0x1b2>
   289b8:	ldr.w	r2, [r1, #136]	; 0x88
   289bc:	cmp	r2, r3
   289be:	it	ge
   289c0:	movge	r2, r3
   289c2:	cmp	r2, #1
   289c4:	mov	fp, r2
   289c6:	ble.w	28868 <btrfs_alloc_chunk@@Base+0x4c>
   289ca:	movs	r2, #2
   289cc:	str	r2, [sp, #76]	; 0x4c
   289ce:	and.w	r6, sl, #256	; 0x100
   289d2:	movs	r7, #0
   289d4:	orrs.w	r2, r6, r7
   289d8:	beq.n	289f0 <btrfs_alloc_chunk@@Base+0x1d4>
   289da:	ldr.w	r2, [r1, #136]	; 0x88
   289de:	cmp	r3, r2
   289e0:	it	ge
   289e2:	movge	r3, r2
   289e4:	cmp	r3, #2
   289e6:	mov	fp, r3
   289e8:	ble.w	28868 <btrfs_alloc_chunk@@Base+0x4c>
   289ec:	movs	r3, #3
   289ee:	str	r3, [sp, #76]	; 0x4c
   289f0:	ldr	r0, [r1, #112]	; 0x70
   289f2:	movs	r2, #1
   289f4:	ldr	r1, [r1, #116]	; 0x74
   289f6:	bl	31ac0 <div_factor@@Base>
   289fa:	strd	r5, r4, [sp, #64]	; 0x40
   289fe:	movs	r4, #0
   28a00:	mov	r3, r1
   28a02:	mov	r2, r0
   28a04:	ldrd	r0, r1, [sp, #64]	; 0x40
   28a08:	cmp	r3, r1
   28a0a:	it	eq
   28a0c:	cmpeq	r2, r0
   28a0e:	it	cc
   28a10:	strdcc	r2, r3, [sp, #64]	; 0x40
   28a14:	movs	r3, #0
   28a16:	strd	r3, r4, [sp, #32]
   28a1a:	str	r3, [sp, #168]	; 0xa8
   28a1c:	movs	r4, #0
   28a1e:	movs	r3, #0
   28a20:	strd	r3, r4, [sp, #96]	; 0x60
   28a24:	ldr	r3, [sp, #52]	; 0x34
   28a26:	mov	r0, sl
   28a28:	ldr	r1, [sp, #120]	; 0x78
   28a2a:	strd	fp, r3, [sp]
   28a2e:	ldrd	r2, r3, [sp, #16]
   28a32:	bl	27dc4 <btrfs_add_root_ref@@Base+0x19c>
   28a36:	ldrd	r3, r4, [sp, #64]	; 0x40
   28a3a:	cmp	r4, r1
   28a3c:	ldr	r4, [pc, #724]	; (28d14 <btrfs_alloc_chunk@@Base+0x4f8>)
   28a3e:	it	eq
   28a40:	cmpeq	r3, r0
   28a42:	bcs.n	28a58 <btrfs_alloc_chunk@@Base+0x23c>
   28a44:	mov	r2, fp
   28a46:	ldrd	r0, r1, [sp, #64]	; 0x40
   28a4a:	asrs	r3, r2, #31
   28a4c:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   28a50:	and.w	r3, r4, r0
   28a54:	strd	r3, r1, [sp, #16]
   28a58:	ldr	r3, [sp, #72]	; 0x48
   28a5a:	asrs	r2, r3, #31
   28a5c:	mov	r1, r3
   28a5e:	mov	r3, r2
   28a60:	mov	r2, r1
   28a62:	ldrd	r0, r1, [sp, #16]
   28a66:	cmp	r3, r1
   28a68:	it	eq
   28a6a:	cmpeq	r2, r0
   28a6c:	itt	cc
   28a6e:	movcc	r3, r1
   28a70:	movcc	r2, r0
   28a72:	and.w	r1, r4, r2
   28a76:	strd	r1, r3, [sp, #16]
   28a7a:	add	r3, sp, #196	; 0xc4
   28a7c:	strd	r3, r3, [sp, #196]	; 0xc4
   28a80:	ldr	r3, [sp, #48]	; 0x30
   28a82:	ldr	r5, [r3, #72]	; 0x48
   28a84:	ldrd	r3, r4, [sp, #56]	; 0x38
   28a88:	orrs	r3, r4
   28a8a:	beq.w	28e36 <btrfs_alloc_chunk@@Base+0x61a>
   28a8e:	adds	r3, r1, r1
   28a90:	str	r3, [sp, #128]	; 0x80
   28a92:	ldr	r3, [sp, #20]
   28a94:	adcs	r3, r3
   28a96:	str	r3, [sp, #132]	; 0x84
   28a98:	movs	r7, #0
   28a9a:	b.n	28c28 <btrfs_alloc_chunk@@Base+0x40c>
   28a9c:	and.w	r0, sl, #4
   28aa0:	orrs.w	r2, r0, r1
   28aa4:	beq.n	28af6 <btrfs_alloc_chunk@@Base+0x2da>
   28aa6:	ldr	r3, [sp, #48]	; 0x30
   28aa8:	movs	r1, #12
   28aaa:	mov.w	r0, #2147483648	; 0x80000000
   28aae:	movs	r4, #0
   28ab0:	ldrd	r2, r3, [r3, #56]	; 0x38
   28ab4:	cmp	r1, r3
   28ab6:	it	eq
   28ab8:	cmpeq	r0, r2
   28aba:	mov.w	r2, #33554432	; 0x2000000
   28abe:	ite	cs
   28ac0:	movcs.w	r3, #268435456	; 0x10000000
   28ac4:	movcc.w	r3, #1073741824	; 0x40000000
   28ac8:	strd	r3, r4, [sp, #16]
   28acc:	ldr	r3, [sp, #44]	; 0x2c
   28ace:	ldrd	r5, r4, [sp, #16]
   28ad2:	ldr.w	r3, [r3, #384]	; 0x180
   28ad6:	subs	r3, #206	; 0xce
   28ad8:	lsrs	r3, r3, #5
   28ada:	adds	r3, #1
   28adc:	b.n	288ce <btrfs_alloc_chunk@@Base+0xb2>
   28ade:	movs	r3, #58	; 0x3a
   28ae0:	mov.w	r5, #16777216	; 0x1000000
   28ae4:	movs	r2, #0
   28ae6:	mov.w	r1, #8388608	; 0x800000
   28aea:	movs	r4, #0
   28aec:	strd	r1, r2, [sp, #16]
   28af0:	mov.w	r2, #1048576	; 0x100000
   28af4:	b.n	288ce <btrfs_alloc_chunk@@Base+0xb2>
   28af6:	mov.w	r5, #33554432	; 0x2000000
   28afa:	b.n	28ae4 <btrfs_alloc_chunk@@Base+0x2c8>
   28afc:	mov.w	fp, #1
   28b00:	b.n	288fc <btrfs_alloc_chunk@@Base+0xe0>
   28b02:	str.w	fp, [sp, #76]	; 0x4c
   28b06:	b.n	2897a <btrfs_alloc_chunk@@Base+0x15e>
   28b08:	movs	r2, #1
   28b0a:	str	r2, [sp, #52]	; 0x34
   28b0c:	b.n	289ac <btrfs_alloc_chunk@@Base+0x190>
   28b0e:	ldr	r3, [r5, #8]
   28b10:	str	r3, [sp, #104]	; 0x68
   28b12:	ldr.w	r3, [r3, #464]	; 0x1d0
   28b16:	ldrd	r9, r8, [r3, #296]	; 0x128
   28b1a:	ldrd	r3, r4, [r5, #72]	; 0x48
   28b1e:	strd	r3, r4, [sp, #80]	; 0x50
   28b22:	bl	17e50 <btrfs_alloc_path@@Base>
   28b26:	mov	r4, r0
   28b28:	cbnz	r0, 28b30 <btrfs_alloc_chunk@@Base+0x314>
   28b2a:	mvn.w	r6, #11
   28b2e:	b.n	2886c <btrfs_alloc_chunk@@Base+0x50>
   28b30:	ldrd	r2, r3, [r5, #64]	; 0x40
   28b34:	ldr	r1, [sp, #104]	; 0x68
   28b36:	strd	r2, r3, [sp, #224]	; 0xe0
   28b3a:	ldr	r3, [sp, #104]	; 0x68
   28b3c:	ldr.w	r3, [r3, #464]	; 0x1d0
   28b40:	ldr.w	r2, [r3, #296]	; 0x128
   28b44:	str.w	r2, [sp, #233]	; 0xe9
   28b48:	add	r2, sp, #224	; 0xe0
   28b4a:	ldr.w	r3, [r3, #300]	; 0x12c
   28b4e:	str.w	r3, [sp, #237]	; 0xed
   28b52:	movs	r3, #204	; 0xcc
   28b54:	strb.w	r3, [sp, #232]	; 0xe8
   28b58:	movs	r3, #2
   28b5a:	strb.w	r3, [r0, #64]	; 0x40
   28b5e:	movs	r3, #0
   28b60:	strd	r3, r3, [sp]
   28b64:	mov	r3, r0
   28b66:	vmov	r0, s16
   28b6a:	bl	1a23c <btrfs_search_slot@@Base>
   28b6e:	subs	r6, r0, #0
   28b70:	blt.n	28be0 <btrfs_alloc_chunk@@Base+0x3c4>
   28b72:	ldrb.w	r3, [sp, #232]	; 0xe8
   28b76:	movs	r2, #0
   28b78:	ldr	r0, [sp, #104]	; 0x68
   28b7a:	mov	r1, r4
   28b7c:	str	r3, [sp, #0]
   28b7e:	movs	r3, #0
   28b80:	bl	1b8f4 <btrfs_previous_item@@Base>
   28b84:	subs	r6, r0, #0
   28b86:	blt.n	28be0 <btrfs_alloc_chunk@@Base+0x3c4>
   28b88:	strd	r9, r8, [sp, #24]
   28b8c:	ldrd	r2, r3, [sp, #24]
   28b90:	cmp	r3, #0
   28b92:	it	eq
   28b94:	cmpeq.w	r2, #1048576	; 0x100000
   28b98:	ittt	cc
   28b9a:	movcc.w	r2, #1048576	; 0x100000
   28b9e:	movcc	r3, #0
   28ba0:	strdcc	r2, r3, [sp, #24]
   28ba4:	add	r2, sp, #224	; 0xe0
   28ba6:	movs	r3, #0
   28ba8:	str	r3, [sp, #124]	; 0x7c
   28baa:	vmov	s18, r2
   28bae:	ldr	r2, [r4, #32]
   28bb0:	ldr	r6, [r4, #0]
   28bb2:	str	r2, [sp, #144]	; 0x90
   28bb4:	ldr	r1, [sp, #144]	; 0x90
   28bb6:	ldr.w	r2, [r6, #192]	; 0xc0
   28bba:	cmp	r2, r1
   28bbc:	bhi.w	28d30 <btrfs_alloc_chunk@@Base+0x514>
   28bc0:	str	r3, [sp, #144]	; 0x90
   28bc2:	mov.w	r3, #0
   28bc6:	strb.w	r3, [r4, #65]	; 0x41
   28bca:	mov	r1, r4
   28bcc:	ldr	r3, [sp, #104]	; 0x68
   28bce:	ldr.w	r0, [r3, #464]	; 0x1d0
   28bd2:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   28bd6:	ldr	r3, [sp, #144]	; 0x90
   28bd8:	subs	r6, r0, #0
   28bda:	beq.n	28bae <btrfs_alloc_chunk@@Base+0x392>
   28bdc:	bge.w	28de8 <btrfs_alloc_chunk@@Base+0x5cc>
   28be0:	mov	r0, r4
   28be2:	bl	17e7e <btrfs_free_path@@Base>
   28be6:	cmp	r6, #0
   28be8:	bne.w	2886c <btrfs_alloc_chunk@@Base+0x50>
   28bec:	ldrd	r1, r2, [sp, #32]
   28bf0:	ldrd	r8, r9, [sp, #128]	; 0x80
   28bf4:	ldr	r3, [r5, #0]
   28bf6:	cmp	r2, r9
   28bf8:	it	eq
   28bfa:	cmpeq	r1, r8
   28bfc:	bcc.w	28e1c <btrfs_alloc_chunk@@Base+0x600>
   28c00:	ldr	r2, [r5, #4]
   28c02:	str	r2, [r3, #4]
   28c04:	str	r3, [r2, #0]
   28c06:	ldr	r2, [sp, #196]	; 0xc4
   28c08:	str	r5, [r2, #4]
   28c0a:	str	r2, [r5, #0]
   28c0c:	add	r2, sp, #196	; 0xc4
   28c0e:	str	r2, [r5, #4]
   28c10:	ldrd	r1, r2, [sp, #56]	; 0x38
   28c14:	str	r5, [sp, #196]	; 0xc4
   28c16:	orrs	r2, r1
   28c18:	ite	eq
   28c1a:	addeq	r7, #1
   28c1c:	addne	r7, #2
   28c1e:	ldr	r2, [sp, #108]	; 0x6c
   28c20:	cmp	r2, r3
   28c22:	beq.w	28e40 <btrfs_alloc_chunk@@Base+0x624>
   28c26:	mov	r5, r3
   28c28:	cmp	fp, r7
   28c2a:	bgt.w	28b0e <btrfs_alloc_chunk@@Base+0x2f2>
   28c2e:	ldr	r3, [sp, #44]	; 0x2c
   28c30:	ldr	r5, [r3, #32]
   28c32:	bl	17e50 <btrfs_alloc_path@@Base>
   28c36:	mov	r4, r0
   28c38:	cmp	r0, #0
   28c3a:	beq.w	28b2a <btrfs_alloc_chunk@@Base+0x30e>
   28c3e:	mov.w	r2, #4294967295	; 0xffffffff
   28c42:	movs	r0, #0
   28c44:	mov.w	r3, #256	; 0x100
   28c48:	strb.w	r2, [sp, #213]	; 0xd5
   28c4c:	strd	r3, r0, [sp, #204]	; 0xcc
   28c50:	mov	r1, r5
   28c52:	strb.w	r2, [sp, #214]	; 0xd6
   28c56:	mov	r3, r4
   28c58:	strb.w	r2, [sp, #215]	; 0xd7
   28c5c:	movs	r7, #228	; 0xe4
   28c5e:	strb.w	r2, [sp, #216]	; 0xd8
   28c62:	strb.w	r2, [sp, #217]	; 0xd9
   28c66:	strb.w	r2, [sp, #218]	; 0xda
   28c6a:	strb.w	r2, [sp, #219]	; 0xdb
   28c6e:	strb.w	r2, [sp, #220]	; 0xdc
   28c72:	add	r2, sp, #204	; 0xcc
   28c74:	strd	r0, r0, [sp]
   28c78:	strb.w	r7, [sp, #212]	; 0xd4
   28c7c:	bl	1a23c <btrfs_search_slot@@Base>
   28c80:	subs	r6, r0, #0
   28c82:	blt.n	28cc2 <btrfs_alloc_chunk@@Base+0x4a6>
   28c84:	ldr	r2, [pc, #156]	; (28d24 <btrfs_alloc_chunk@@Base+0x508>)
   28c86:	it	eq
   28c88:	moveq	r3, #1
   28c8a:	ldr	r1, [pc, #156]	; (28d28 <btrfs_alloc_chunk@@Base+0x50c>)
   28c8c:	it	ne
   28c8e:	movne	r3, #0
   28c90:	ldr	r0, [pc, #152]	; (28d2c <btrfs_alloc_chunk@@Base+0x510>)
   28c92:	add	r2, pc
   28c94:	adds	r2, #38	; 0x26
   28c96:	add	r1, pc
   28c98:	add	r0, pc
   28c9a:	str	r3, [sp, #0]
   28c9c:	movw	r3, #681	; 0x2a9
   28ca0:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   28ca4:	movs	r2, #0
   28ca6:	movs	r3, #0
   28ca8:	mov	r1, r4
   28caa:	mov	r0, r5
   28cac:	str	r7, [sp, #0]
   28cae:	bl	1b8f4 <btrfs_previous_item@@Base>
   28cb2:	mov	r6, r0
   28cb4:	cmp	r0, #0
   28cb6:	beq.w	28ea2 <btrfs_alloc_chunk@@Base+0x686>
   28cba:	movs	r3, #0
   28cbc:	strd	r3, r3, [sp, #180]	; 0xb4
   28cc0:	mov	r6, r3
   28cc2:	mov	r0, r4
   28cc4:	bl	17e7e <btrfs_free_path@@Base>
   28cc8:	cmp	r6, #0
   28cca:	bne.w	2886c <btrfs_alloc_chunk@@Base+0x50>
   28cce:	mov.w	r3, #256	; 0x100
   28cd2:	strd	r3, r6, [sp, #204]	; 0xcc
   28cd6:	movs	r3, #228	; 0xe4
   28cd8:	strb.w	r3, [sp, #212]	; 0xd4
   28cdc:	ldr	r3, [sp, #180]	; 0xb4
   28cde:	mov	r0, fp
   28ce0:	str.w	r3, [sp, #213]	; 0xd5
   28ce4:	ldr	r3, [sp, #184]	; 0xb8
   28ce6:	str.w	r3, [sp, #217]	; 0xd9
   28cea:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   28cee:	blx	8634 <malloc@plt+0x4>
   28cf2:	mov	r5, r0
   28cf4:	cmp	r0, #0
   28cf6:	beq.w	28b2a <btrfs_alloc_chunk@@Base+0x30e>
   28cfa:	mov.w	r0, fp, lsl #4
   28cfe:	adds	r0, #72	; 0x48
   28d00:	blx	8634 <malloc@plt+0x4>
   28d04:	mov	r7, r0
   28d06:	cmp	r0, #0
   28d08:	bne.w	28ee8 <btrfs_alloc_chunk@@Base+0x6cc>
   28d0c:	mov	r0, r5
   28d0e:	blx	83f0 <free@plt+0x4>
   28d12:	b.n	28b2a <btrfs_alloc_chunk@@Base+0x30e>
   28d14:	movs	r0, r0
   28d16:			; <UNDEFINED> instruction: 0xffffc54c
   28d1a:	movs	r3, r0
   28d1c:	lsls	r4, r4, #8
   28d1e:	movs	r0, r0
   28d20:	stmia	r5!, {r2, r4}
   28d22:	movs	r3, r0
   28d24:	ldrb	r2, [r0, #11]
   28d26:	movs	r1, r0
   28d28:	strb	r3, [r4, #15]
   28d2a:	movs	r1, r0
   28d2c:	subs	r2, r7, #7
   28d2e:	movs	r1, r0
   28d30:	vmov	r1, s18
   28d34:	mov	r0, r6
   28d36:	ldr	r2, [sp, #144]	; 0x90
   28d38:	str	r3, [sp, #188]	; 0xbc
   28d3a:	bl	27ec4 <btrfs_add_root_ref@@Base+0x29c>
   28d3e:	ldrd	r0, r1, [sp, #224]	; 0xe0
   28d42:	ldrd	r8, r9, [r5, #64]	; 0x40
   28d46:	ldr	r3, [sp, #188]	; 0xbc
   28d48:	cmp	r1, r9
   28d4a:	it	eq
   28d4c:	cmpeq	r0, r8
   28d4e:	bcc.n	28de0 <btrfs_alloc_chunk@@Base+0x5c4>
   28d50:	cmp	r9, r1
   28d52:	it	eq
   28d54:	cmpeq	r8, r0
   28d56:	bcc.n	28de8 <btrfs_alloc_chunk@@Base+0x5cc>
   28d58:	ldrb.w	r2, [sp, #232]	; 0xe8
   28d5c:	cmp	r2, #204	; 0xcc
   28d5e:	bne.n	28de0 <btrfs_alloc_chunk@@Base+0x5c4>
   28d60:	ldrd	r1, r2, [sp, #80]	; 0x50
   28d64:	ldr.w	r9, [sp, #237]	; 0xed
   28d68:	ldr.w	r8, [sp, #233]	; 0xe9
   28d6c:	cmp	r2, r9
   28d6e:	it	eq
   28d70:	cmpeq	r1, r8
   28d72:	bcc.n	28de8 <btrfs_alloc_chunk@@Base+0x5cc>
   28d74:	ldrd	r1, r2, [sp, #24]
   28d78:	cmp	r2, r9
   28d7a:	it	eq
   28d7c:	cmpeq	r1, r8
   28d7e:	bcs.n	28d96 <btrfs_alloc_chunk@@Base+0x57a>
   28d80:	ldr	r2, [sp, #124]	; 0x7c
   28d82:	ldr	r1, [sp, #24]
   28d84:	adds.w	r2, r8, r2
   28d88:	adc.w	r3, r9, r3
   28d8c:	subs	r2, r2, r1
   28d8e:	str	r2, [sp, #124]	; 0x7c
   28d90:	ldr	r2, [sp, #28]
   28d92:	sbc.w	r3, r3, r2
   28d96:	ldr	r2, [sp, #144]	; 0x90
   28d98:	adds	r6, #96	; 0x60
   28d9a:	movs	r1, #25
   28d9c:	mla	r2, r1, r2, r6
   28da0:	ldr.w	r0, [r2, #118]	; 0x76
   28da4:	add	r6, r0
   28da6:	ldr.w	r2, [r6, #125]!
   28daa:	adds.w	r2, r2, r8
   28dae:	str	r2, [sp, #152]	; 0x98
   28db0:	ldr	r1, [r6, #4]
   28db2:	adc.w	r2, r1, r9
   28db6:	str	r2, [sp, #156]	; 0x9c
   28db8:	ldrd	r8, r9, [sp, #152]	; 0x98
   28dbc:	ldrd	r1, r2, [sp, #24]
   28dc0:	cmp	r2, r9
   28dc2:	it	eq
   28dc4:	cmpeq	r1, r8
   28dc6:	ittt	cc
   28dc8:	movcc	r1, r8
   28dca:	movcc	r2, r9
   28dcc:	strdcc	r1, r2, [sp, #24]
   28dd0:	ldrd	r1, r2, [sp, #80]	; 0x50
   28dd4:	ldrd	r8, r9, [sp, #24]
   28dd8:	cmp	r2, r9
   28dda:	it	eq
   28ddc:	cmpeq	r1, r8
   28dde:	bcc.n	28de8 <btrfs_alloc_chunk@@Base+0x5cc>
   28de0:	ldr	r2, [r4, #32]
   28de2:	adds	r2, #1
   28de4:	str	r2, [r4, #32]
   28de6:	b.n	28bae <btrfs_alloc_chunk@@Base+0x392>
   28de8:	ldrd	r1, r2, [sp, #24]
   28dec:	ldrd	r8, r9, [sp, #80]	; 0x50
   28df0:	cmp	r2, r9
   28df2:	it	eq
   28df4:	cmpeq	r1, r8
   28df6:	bcs.n	28e16 <btrfs_alloc_chunk@@Base+0x5fa>
   28df8:	ldr	r1, [sp, #124]	; 0x7c
   28dfa:	ldr	r2, [sp, #80]	; 0x50
   28dfc:	adds	r2, r2, r1
   28dfe:	ldr	r1, [sp, #84]	; 0x54
   28e00:	adc.w	r3, r1, r3
   28e04:	ldr	r1, [sp, #24]
   28e06:	subs	r2, r2, r1
   28e08:	str	r2, [sp, #32]
   28e0a:	ldr	r2, [sp, #28]
   28e0c:	sbc.w	r3, r3, r2
   28e10:	movs	r6, #0
   28e12:	str	r3, [sp, #36]	; 0x24
   28e14:	b.n	28be0 <btrfs_alloc_chunk@@Base+0x3c4>
   28e16:	ldr	r2, [sp, #124]	; 0x7c
   28e18:	str	r2, [sp, #32]
   28e1a:	b.n	28e10 <btrfs_alloc_chunk@@Base+0x5f4>
   28e1c:	ldrd	r1, r2, [sp, #96]	; 0x60
   28e20:	ldrd	r4, r5, [sp, #32]
   28e24:	cmp	r2, r5
   28e26:	it	eq
   28e28:	cmpeq	r1, r4
   28e2a:	ittt	cc
   28e2c:	movcc	r1, r4
   28e2e:	movcc	r2, r5
   28e30:	strdcc	r1, r2, [sp, #96]	; 0x60
   28e34:	b.n	28c1e <btrfs_alloc_chunk@@Base+0x402>
   28e36:	ldrd	r3, r4, [sp, #16]
   28e3a:	strd	r3, r4, [sp, #128]	; 0x80
   28e3e:	b.n	28a98 <btrfs_alloc_chunk@@Base+0x27c>
   28e40:	cmp	fp, r7
   28e42:	ble.w	28c2e <btrfs_alloc_chunk@@Base+0x412>
   28e46:	ldr	r3, [sp, #196]	; 0xc4
   28e48:	add	r2, sp, #196	; 0xc4
   28e4a:	cmp	r3, r2
   28e4c:	beq.n	28e60 <btrfs_alloc_chunk@@Base+0x644>
   28e4e:	ldr	r0, [sp, #108]	; 0x6c
   28e50:	ldr	r2, [sp, #48]	; 0x30
   28e52:	ldr	r1, [sp, #200]	; 0xc8
   28e54:	ldr	r2, [r2, #72]	; 0x48
   28e56:	str	r0, [r3, #4]
   28e58:	ldr	r0, [sp, #48]	; 0x30
   28e5a:	str	r3, [r0, #72]	; 0x48
   28e5c:	str	r2, [r1, #0]
   28e5e:	str	r1, [r2, #4]
   28e60:	ldr	r3, [sp, #76]	; 0x4c
   28e62:	cmp	r3, r7
   28e64:	bgt.n	28e7e <btrfs_alloc_chunk@@Base+0x662>
   28e66:	ldrd	r3, r4, [sp, #88]	; 0x58
   28e6a:	orrs	r3, r4
   28e6c:	beq.n	28e9a <btrfs_alloc_chunk@@Base+0x67e>
   28e6e:	mov	r0, r7
   28e70:	ldr	r1, [sp, #52]	; 0x34
   28e72:	bl	38f98 <btrfs_util_strerror@@Base+0x290>
   28e76:	ldr	r3, [sp, #52]	; 0x34
   28e78:	mul.w	r7, r0, r3
   28e7c:	b.n	28e9a <btrfs_alloc_chunk@@Base+0x67e>
   28e7e:	ldr	r3, [sp, #168]	; 0xa8
   28e80:	cmp	r3, #0
   28e82:	bne.w	28868 <btrfs_alloc_chunk@@Base+0x4c>
   28e86:	ldrd	r3, r4, [sp, #96]	; 0x60
   28e8a:	orrs	r3, r4
   28e8c:	beq.w	28868 <btrfs_alloc_chunk@@Base+0x4c>
   28e90:	ldrd	r3, r4, [sp, #96]	; 0x60
   28e94:	mov	r7, fp
   28e96:	strd	r3, r4, [sp, #16]
   28e9a:	movs	r3, #1
   28e9c:	mov	fp, r7
   28e9e:	str	r3, [sp, #168]	; 0xa8
   28ea0:	b.n	28a24 <btrfs_alloc_chunk@@Base+0x208>
   28ea2:	ldr	r2, [r4, #32]
   28ea4:	add	r1, sp, #224	; 0xe0
   28ea6:	ldr	r0, [r4, #0]
   28ea8:	bl	27ec4 <btrfs_add_root_ref@@Base+0x29c>
   28eac:	ldrd	r2, r3, [sp, #224]	; 0xe0
   28eb0:	cmp	r3, #0
   28eb2:	it	eq
   28eb4:	cmpeq.w	r2, #256	; 0x100
   28eb8:	bne.w	28cba <btrfs_alloc_chunk@@Base+0x49e>
   28ebc:	ldr	r3, [r4, #0]
   28ebe:	movs	r1, #25
   28ec0:	ldr	r2, [r4, #32]
   28ec2:	adds	r3, #96	; 0x60
   28ec4:	mla	r2, r1, r2, r3
   28ec8:	ldr.w	r1, [sp, #237]	; 0xed
   28ecc:	ldr.w	r2, [r2, #118]	; 0x76
   28ed0:	add	r3, r2
   28ed2:	ldr.w	r2, [r3, #101]!
   28ed6:	ldr	r0, [r3, #4]
   28ed8:	ldr.w	r3, [sp, #233]	; 0xe9
   28edc:	adds	r3, r2, r3
   28ede:	str	r3, [sp, #180]	; 0xb4
   28ee0:	adc.w	r3, r0, r1
   28ee4:	str	r3, [sp, #184]	; 0xb8
   28ee6:	b.n	28cc2 <btrfs_alloc_chunk@@Base+0x4a6>
   28ee8:	ldr	r3, [sp, #52]	; 0x34
   28eea:	mov	r0, sl
   28eec:	ldr	r1, [sp, #120]	; 0x78
   28eee:	strd	fp, r3, [sp]
   28ef2:	ldrd	r2, r3, [sp, #16]
   28ef6:	bl	27dc4 <btrfs_add_root_ref@@Base+0x19c>
   28efa:	ldr	r3, [sp, #148]	; 0x94
   28efc:	str	r6, [sp, #76]	; 0x4c
   28efe:	strd	r0, r1, [r3]
   28f02:	add.w	r3, r7, #72	; 0x48
   28f06:	str	r3, [sp, #72]	; 0x48
   28f08:	add.w	r3, r5, #48	; 0x30
   28f0c:	str	r3, [sp, #88]	; 0x58
   28f0e:	ldr.w	r3, [pc, #1112]	; 29368 <btrfs_alloc_chunk@@Base+0xb4c>
   28f12:	add	r3, pc
   28f14:	adds	r3, #54	; 0x36
   28f16:	vmov	s21, r3
   28f1a:	ldr.w	r3, [pc, #1104]	; 2936c <btrfs_alloc_chunk@@Base+0xb50>
   28f1e:	add	r3, pc
   28f20:	vmov	s22, r3
   28f24:	ldr	r3, [sp, #76]	; 0x4c
   28f26:	ldr	r4, [sp, #196]	; 0xc4
   28f28:	cmp	fp, r3
   28f2a:	bgt.w	29038 <btrfs_alloc_chunk@@Base+0x81c>
   28f2e:	ldr.w	r6, [pc, #1088]	; 29370 <btrfs_alloc_chunk@@Base+0xb54>
   28f32:	add	r3, sp, #196	; 0xc4
   28f34:	ldr.w	r1, [pc, #1084]	; 29374 <btrfs_alloc_chunk@@Base+0xb58>
   28f38:	subs	r3, r4, r3
   28f3a:	add	r6, pc
   28f3c:	ldr.w	r0, [pc, #1080]	; 29378 <btrfs_alloc_chunk@@Base+0xb5c>
   28f40:	add.w	r6, r6, #54	; 0x36
   28f44:	add	r1, pc
   28f46:	it	ne
   28f48:	movne	r3, #1
   28f4a:	add	r0, pc
   28f4c:	mov	r2, r6
   28f4e:	str	r3, [sp, #0]
   28f50:	movw	r3, #1223	; 0x4c7
   28f54:	mov	r4, r1
   28f56:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   28f5a:	ldr	r3, [sp, #148]	; 0x94
   28f5c:	ldr	r1, [sp, #52]	; 0x34
   28f5e:	mov	r0, fp
   28f60:	add.w	r8, sp, #204	; 0xcc
   28f64:	ldrd	r2, r3, [r3]
   28f68:	strd	r2, r3, [r5]
   28f6c:	ldr	r3, [sp, #172]	; 0xac
   28f6e:	ldr.w	r2, [r3, #447]	; 0x1bf
   28f72:	ldr.w	r3, [r3, #451]	; 0x1c3
   28f76:	strh	r1, [r5, #46]	; 0x2e
   28f78:	str	r1, [r7, #68]	; 0x44
   28f7a:	strd	r2, r3, [r5, #8]
   28f7e:	mov.w	r2, #65536	; 0x10000
   28f82:	movs	r3, #0
   28f84:	strd	r2, r3, [r5, #16]
   28f88:	ldr	r2, [sp, #44]	; 0x2c
   28f8a:	ldr	r3, [sp, #120]	; 0x78
   28f8c:	str.w	sl, [r5, #24]
   28f90:	ldr.w	r2, [r2, #388]	; 0x184
   28f94:	str	r3, [r5, #28]
   28f96:	mov.w	r3, #65536	; 0x10000
   28f9a:	strd	r3, r3, [r5, #32]
   28f9e:	strd	r3, r2, [r7, #56]	; 0x38
   28fa2:	strd	r3, r3, [r7, #48]	; 0x30
   28fa6:	ldr	r3, [sp, #120]	; 0x78
   28fa8:	str	r2, [r5, #40]	; 0x28
   28faa:	strh.w	fp, [r5, #44]	; 0x2c
   28fae:	str	r3, [r7, #44]	; 0x2c
   28fb0:	str.w	sl, [r7, #40]	; 0x28
   28fb4:	str.w	fp, [r7, #64]	; 0x40
   28fb8:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   28fbc:	vmov	r1, s17
   28fc0:	mov	r3, r5
   28fc2:	mov	r2, r8
   28fc4:	str	r0, [sp, #0]
   28fc6:	vmov	r0, s16
   28fca:	bl	1b2c8 <btrfs_insert_item@@Base>
   28fce:	movw	r3, #1245	; 0x4dd
   28fd2:	mov	r2, r6
   28fd4:	mov	r1, r4
   28fd6:	str	r0, [sp, #0]
   28fd8:	ldr	r0, [pc, #928]	; (2937c <btrfs_alloc_chunk@@Base+0xb60>)
   28fda:	add	r0, pc
   28fdc:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   28fe0:	ldr.w	r2, [sp, #213]	; 0xd5
   28fe4:	ldr.w	r3, [sp, #217]	; 0xd9
   28fe8:	ldr	r1, [sp, #176]	; 0xb0
   28fea:	strd	r2, r3, [r7, #24]
   28fee:	strd	r2, r3, [r1]
   28ff2:	mov	r1, r7
   28ff4:	ldr	r3, [sp, #148]	; 0x94
   28ff6:	ldrd	r2, r3, [r3]
   28ffa:	strd	r2, r3, [r7, #32]
   28ffe:	ldr	r3, [sp, #44]	; 0x2c
   29000:	add.w	r0, r3, #228	; 0xe4
   29004:	bl	15e9a <insert_cache_extent@@Base>
   29008:	subs.w	r9, r0, #0
   2900c:	blt.n	290ca <btrfs_alloc_chunk@@Base+0x8ae>
   2900e:	and.w	r2, sl, #2
   29012:	movs	r3, #0
   29014:	orrs	r3, r2
   29016:	beq.n	2902e <btrfs_alloc_chunk@@Base+0x812>
   29018:	mov	r0, fp
   2901a:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   2901e:	mov	r2, r5
   29020:	mov	r1, r8
   29022:	mov	r3, r0
   29024:	ldr	r0, [sp, #44]	; 0x2c
   29026:	bl	287bc <btrfs_add_system_chunk@@Base>
   2902a:	subs.w	r9, r0, #0
   2902e:	mov	r0, r5
   29030:	mov	r6, r9
   29032:	blx	83f0 <free@plt+0x4>
   29036:	b.n	2886c <btrfs_alloc_chunk@@Base+0x50>
   29038:	add	r3, sp, #196	; 0xc4
   2903a:	ldr	r0, [pc, #836]	; (29380 <btrfs_alloc_chunk@@Base+0xb64>)
   2903c:	subs	r2, r4, r3
   2903e:	vmov	r1, s22
   29042:	negs	r3, r2
   29044:	add	r0, pc
   29046:	adcs	r3, r2
   29048:	vmov	r2, s21
   2904c:	str	r3, [sp, #0]
   2904e:	movw	r3, #1196	; 0x4ac
   29052:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   29056:	ldrd	r2, r3, [sp, #56]	; 0x38
   2905a:	orrs	r3, r2
   2905c:	beq.n	29068 <btrfs_alloc_chunk@@Base+0x84c>
   2905e:	ldr	r2, [sp, #76]	; 0x4c
   29060:	add.w	r3, fp, #4294967295	; 0xffffffff
   29064:	cmp	r3, r2
   29066:	bne.n	29080 <btrfs_alloc_chunk@@Base+0x864>
   29068:	ldrd	r2, r3, [r4]
   2906c:	str	r3, [r2, #4]
   2906e:	str	r2, [r3, #0]
   29070:	ldr	r3, [sp, #48]	; 0x30
   29072:	ldr	r3, [r3, #72]	; 0x48
   29074:	str	r4, [r3, #4]
   29076:	str	r3, [r4, #0]
   29078:	ldr	r3, [sp, #108]	; 0x6c
   2907a:	str	r3, [r4, #4]
   2907c:	ldr	r3, [sp, #48]	; 0x30
   2907e:	str	r4, [r3, #72]	; 0x48
   29080:	ldr.w	r3, [sp, #213]	; 0xd5
   29084:	vmov	s18, r3
   29088:	ldr.w	r3, [sp, #217]	; 0xd9
   2908c:	vmov	s19, r3
   29090:	ldr	r3, [r4, #8]
   29092:	str	r3, [sp, #104]	; 0x68
   29094:	ldrd	r2, r3, [r4, #72]	; 0x48
   29098:	strd	r2, r3, [sp, #80]	; 0x50
   2909c:	ldr	r3, [sp, #104]	; 0x68
   2909e:	ldr.w	r3, [r3, #464]	; 0x1d0
   290a2:	ldrd	r2, r3, [r3, #296]	; 0x128
   290a6:	cmp	r3, #0
   290a8:	it	eq
   290aa:	cmpeq.w	r2, #1048576	; 0x100000
   290ae:	strd	r2, r3, [sp, #24]
   290b2:	ittt	cc
   290b4:	movcc.w	r2, #1048576	; 0x100000
   290b8:	movcc	r3, #0
   290ba:	strdcc	r2, r3, [sp, #24]
   290be:	bl	17e50 <btrfs_alloc_path@@Base>
   290c2:	mov	r6, r0
   290c4:	cbnz	r0, 290d2 <btrfs_alloc_chunk@@Base+0x8b6>
   290c6:	mvn.w	r9, #11
   290ca:	mov	r0, r7
   290cc:	blx	83f0 <free@plt+0x4>
   290d0:	b.n	2902e <btrfs_alloc_chunk@@Base+0x812>
   290d2:	ldrd	r2, r3, [sp, #24]
   290d6:	ldrd	r0, r1, [sp, #80]	; 0x50
   290da:	cmp	r3, r1
   290dc:	it	eq
   290de:	cmpeq	r2, r0
   290e0:	bcs.w	29350 <btrfs_alloc_chunk@@Base+0xb34>
   290e4:	movs	r3, #2
   290e6:	strb.w	r3, [r6, #64]	; 0x40
   290ea:	ldrd	r2, r3, [r4, #64]	; 0x40
   290ee:	movs	r0, #0
   290f0:	ldr	r1, [sp, #104]	; 0x68
   290f2:	strd	r0, r0, [sp]
   290f6:	strd	r2, r3, [sp, #224]	; 0xe0
   290fa:	add	r2, sp, #224	; 0xe0
   290fc:	ldr	r3, [sp, #24]
   290fe:	str.w	r3, [sp, #233]	; 0xe9
   29102:	ldr	r3, [sp, #28]
   29104:	str.w	r3, [sp, #237]	; 0xed
   29108:	movs	r3, #204	; 0xcc
   2910a:	strb.w	r3, [sp, #232]	; 0xe8
   2910e:	mov	r3, r6
   29110:	bl	1a23c <btrfs_search_slot@@Base>
   29114:	subs.w	r9, r0, #0
   29118:	blt.n	291d4 <btrfs_alloc_chunk@@Base+0x9b8>
   2911a:	bne.n	291bc <btrfs_alloc_chunk@@Base+0x9a0>
   2911c:	ldrd	r2, r3, [sp, #24]
   29120:	strd	r2, r3, [sp, #32]
   29124:	movs	r3, #0
   29126:	movs	r2, #0
   29128:	strd	r2, r3, [sp, #64]	; 0x40
   2912c:	add	r3, sp, #224	; 0xe0
   2912e:	vmov	s20, r3
   29132:	ldr.w	ip, [r6]
   29136:	ldr.w	lr, [r6, #32]
   2913a:	ldr.w	r3, [ip, #192]	; 0xc0
   2913e:	cmp	r3, lr
   29140:	bhi.w	2927c <btrfs_alloc_chunk@@Base+0xa60>
   29144:	mov.w	r3, #0
   29148:	strb.w	r3, [r6, #65]	; 0x41
   2914c:	ldr	r3, [sp, #104]	; 0x68
   2914e:	mov	r1, r6
   29150:	ldr.w	r0, [r3, #464]	; 0x1d0
   29154:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   29158:	subs.w	r9, r0, #0
   2915c:	beq.n	29132 <btrfs_alloc_chunk@@Base+0x916>
   2915e:	blt.n	291d4 <btrfs_alloc_chunk@@Base+0x9b8>
   29160:	ldrd	r2, r3, [sp, #32]
   29164:	ldrd	r0, r1, [sp, #80]	; 0x50
   29168:	cmp	r3, r1
   2916a:	it	eq
   2916c:	cmpeq	r2, r0
   2916e:	bcs.n	291a2 <btrfs_alloc_chunk@@Base+0x986>
   29170:	ldr	r2, [sp, #32]
   29172:	ldr	r3, [sp, #80]	; 0x50
   29174:	subs	r3, r3, r2
   29176:	ldr	r2, [sp, #36]	; 0x24
   29178:	str	r3, [sp, #136]	; 0x88
   2917a:	ldr	r3, [sp, #84]	; 0x54
   2917c:	sbc.w	r3, r3, r2
   29180:	str	r3, [sp, #140]	; 0x8c
   29182:	ldrd	r0, r1, [sp, #136]	; 0x88
   29186:	ldrd	r2, r3, [sp, #64]	; 0x40
   2918a:	cmp	r3, r1
   2918c:	it	eq
   2918e:	cmpeq	r2, r0
   29190:	bcs.n	291a2 <btrfs_alloc_chunk@@Base+0x986>
   29192:	mov	r2, r0
   29194:	mov	r3, r1
   29196:	strd	r2, r3, [sp, #64]	; 0x40
   2919a:	ldrd	r2, r3, [sp, #32]
   2919e:	strd	r2, r3, [sp, #24]
   291a2:	ldrd	r2, r3, [sp, #64]	; 0x40
   291a6:	ldrd	r0, r1, [sp, #16]
   291aa:	cmp	r3, r1
   291ac:	it	eq
   291ae:	cmpeq	r2, r0
   291b0:	ite	cc
   291b2:	mvncc.w	r9, #27
   291b6:	movcs.w	r9, #0
   291ba:	b.n	291d4 <btrfs_alloc_chunk@@Base+0x9b8>
   291bc:	ldrb.w	r3, [sp, #232]	; 0xe8
   291c0:	mov	r1, r6
   291c2:	ldr	r0, [sp, #104]	; 0x68
   291c4:	str	r3, [sp, #0]
   291c6:	ldrd	r2, r3, [sp, #224]	; 0xe0
   291ca:	bl	1b8f4 <btrfs_previous_item@@Base>
   291ce:	subs.w	r9, r0, #0
   291d2:	bge.n	2911c <btrfs_alloc_chunk@@Base+0x900>
   291d4:	mov	r0, r6
   291d6:	bl	17e7e <btrfs_free_path@@Base>
   291da:	cmp.w	r9, #0
   291de:	bne.w	290ca <btrfs_alloc_chunk@@Base+0x8ae>
   291e2:	ldrd	r2, r3, [sp, #24]
   291e6:	mov	r1, r4
   291e8:	vmov	r0, s16
   291ec:	strd	r2, r3, [sp, #8]
   291f0:	ldrd	r2, r3, [sp, #16]
   291f4:	strd	r2, r3, [sp]
   291f8:	vmov	r2, s18
   291fc:	vmov	r3, s19
   29200:	bl	2838c <btrfs_insert_dev_extent@@Base>
   29204:	subs.w	r9, r0, #0
   29208:	blt.w	290ca <btrfs_alloc_chunk@@Base+0x8ae>
   2920c:	ldrd	r3, r2, [r4, #80]	; 0x50
   29210:	ldr	r1, [sp, #16]
   29212:	vmov	r0, s16
   29216:	adds	r3, r3, r1
   29218:	ldr	r1, [sp, #20]
   2921a:	adc.w	r2, r1, r2
   2921e:	mov	r1, r4
   29220:	strd	r3, r2, [r4, #80]	; 0x50
   29224:	bl	286d8 <btrfs_update_device@@Base>
   29228:	ldr	r3, [sp, #72]	; 0x48
   2922a:	adds	r3, #16
   2922c:	str	r3, [sp, #72]	; 0x48
   2922e:	ldr	r3, [sp, #88]	; 0x58
   29230:	add.w	r1, r3, #32
   29234:	subs.w	r9, r0, #0
   29238:	blt.w	290ca <btrfs_alloc_chunk@@Base+0x8ae>
   2923c:	ldr	r3, [sp, #72]	; 0x48
   2923e:	str.w	r4, [r3, #-16]
   29242:	mov	r0, r3
   29244:	ldrd	r2, r3, [sp, #24]
   29248:	strd	r2, r3, [r0, #-8]
   2924c:	ldrd	r2, r3, [r4, #64]	; 0x40
   29250:	strd	r2, r3, [r1, #-32]
   29254:	ldrd	r2, r3, [sp, #24]
   29258:	strd	r2, r3, [r1, #-24]
   2925c:	add.w	r3, r4, #112	; 0x70
   29260:	ldr	r2, [sp, #88]	; 0x58
   29262:	adds	r4, #128	; 0x80
   29264:	adds	r2, #16
   29266:	ldr.w	r0, [r3], #4
   2926a:	cmp	r3, r4
   2926c:	str.w	r0, [r2], #4
   29270:	bne.n	29266 <btrfs_alloc_chunk@@Base+0xa4a>
   29272:	ldr	r3, [sp, #76]	; 0x4c
   29274:	str	r1, [sp, #88]	; 0x58
   29276:	adds	r3, #1
   29278:	str	r3, [sp, #76]	; 0x4c
   2927a:	b.n	28f24 <btrfs_alloc_chunk@@Base+0x708>
   2927c:	mov	r2, lr
   2927e:	vmov	r1, s20
   29282:	mov	r0, ip
   29284:	str.w	lr, [sp, #124]	; 0x7c
   29288:	str.w	ip, [sp, #96]	; 0x60
   2928c:	bl	27ec4 <btrfs_add_root_ref@@Base+0x29c>
   29290:	ldrd	r8, r9, [sp, #224]	; 0xe0
   29294:	ldrd	r2, r3, [r4, #64]	; 0x40
   29298:	cmp	r9, r3
   2929a:	it	eq
   2929c:	cmpeq	r8, r2
   2929e:	bcc.n	29348 <btrfs_alloc_chunk@@Base+0xb2c>
   292a0:	cmp	r3, r9
   292a2:	it	eq
   292a4:	cmpeq	r2, r8
   292a6:	bcc.w	29160 <btrfs_alloc_chunk@@Base+0x944>
   292aa:	ldrb.w	r3, [sp, #232]	; 0xe8
   292ae:	cmp	r3, #204	; 0xcc
   292b0:	bne.n	29348 <btrfs_alloc_chunk@@Base+0xb2c>
   292b2:	ldrd	r2, r3, [sp, #32]
   292b6:	ldr.w	r9, [sp, #237]	; 0xed
   292ba:	ldr.w	r8, [sp, #233]	; 0xe9
   292be:	cmp	r3, r9
   292c0:	ldr.w	ip, [sp, #96]	; 0x60
   292c4:	it	eq
   292c6:	cmpeq	r2, r8
   292c8:	ldr.w	lr, [sp, #124]	; 0x7c
   292cc:	bcs.n	2930e <btrfs_alloc_chunk@@Base+0xaf2>
   292ce:	ldr	r3, [sp, #32]
   292d0:	subs.w	r3, r8, r3
   292d4:	str	r3, [sp, #112]	; 0x70
   292d6:	ldr	r3, [sp, #36]	; 0x24
   292d8:	sbc.w	r3, r9, r3
   292dc:	str	r3, [sp, #116]	; 0x74
   292de:	ldrd	r0, r1, [sp, #112]	; 0x70
   292e2:	ldrd	r2, r3, [sp, #64]	; 0x40
   292e6:	cmp	r3, r1
   292e8:	it	eq
   292ea:	cmpeq	r2, r0
   292ec:	bcs.n	292fe <btrfs_alloc_chunk@@Base+0xae2>
   292ee:	mov	r2, r0
   292f0:	mov	r3, r1
   292f2:	strd	r2, r3, [sp, #64]	; 0x40
   292f6:	ldrd	r2, r3, [sp, #32]
   292fa:	strd	r2, r3, [sp, #24]
   292fe:	ldrd	r2, r3, [sp, #112]	; 0x70
   29302:	ldrd	r0, r1, [sp, #16]
   29306:	cmp	r3, r1
   29308:	it	eq
   2930a:	cmpeq	r2, r0
   2930c:	bcs.n	29356 <btrfs_alloc_chunk@@Base+0xb3a>
   2930e:	add.w	r0, ip, #96	; 0x60
   29312:	movs	r3, #25
   29314:	mla	r2, r3, lr, r0
   29318:	ldr.w	r3, [r2, #118]	; 0x76
   2931c:	add	r0, r3
   2931e:	ldr.w	r3, [r0, #125]!
   29322:	adds.w	r3, r3, r8
   29326:	str	r3, [sp, #160]	; 0xa0
   29328:	ldr	r2, [r0, #4]
   2932a:	adc.w	r3, r2, r9
   2932e:	str	r3, [sp, #164]	; 0xa4
   29330:	ldrd	r0, r1, [sp, #160]	; 0xa0
   29334:	ldrd	r2, r3, [sp, #32]
   29338:	cmp	r3, r1
   2933a:	it	eq
   2933c:	cmpeq	r2, r0
   2933e:	ittt	cc
   29340:	movcc	r2, r0
   29342:	movcc	r3, r1
   29344:	strdcc	r2, r3, [sp, #32]
   29348:	ldr	r3, [r6, #32]
   2934a:	adds	r3, #1
   2934c:	str	r3, [r6, #32]
   2934e:	b.n	29132 <btrfs_alloc_chunk@@Base+0x916>
   29350:	mvn.w	r9, #27
   29354:	b.n	291d4 <btrfs_alloc_chunk@@Base+0x9b8>
   29356:	mov.w	r9, #0
   2935a:	b.n	291d4 <btrfs_alloc_chunk@@Base+0x9b8>
   2935c:	mov	r0, r6
   2935e:	add	sp, #252	; 0xfc
   29360:	vpop	{d8-d11}
   29364:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29368:	ldrb	r2, [r0, #1]
   2936a:	movs	r1, r0
   2936c:	strb	r3, [r3, #5]
   2936e:	movs	r1, r0
   29370:	ldrb	r2, [r3, #0]
   29372:	movs	r1, r0
   29374:	strb	r5, [r6, #4]
   29376:	movs	r1, r0
   29378:	strb	r1, [r7, #4]
   2937a:	movs	r1, r0
   2937c:	asrs	r1, r3, #29
   2937e:	movs	r1, r0
   29380:	strb	r0, [r0, #1]
   29382:	movs	r1, r0

00029384 <btrfs_alloc_data_chunk@@Base>:
   29384:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29388:	mov	r7, r1
   2938a:	vpush	{d8}
   2938e:	mov	r8, r0
   29390:	ldr	r1, [pc, #504]	; (2958c <btrfs_alloc_data_chunk@@Base+0x208>)
   29392:	ldr.w	r6, [r7, #352]	; 0x160
   29396:	add	r1, pc
   29398:	sub	sp, #60	; 0x3c
   2939a:	ldrd	sl, fp, [r2]
   2939e:	ldr	r3, [sp, #104]	; 0x68
   293a0:	cmp	fp, fp
   293a2:	str	r3, [sp, #16]
   293a4:	ldr	r3, [sp, #108]	; 0x6c
   293a6:	str	r3, [sp, #20]
   293a8:	ldr	r3, [pc, #484]	; (29590 <btrfs_alloc_data_chunk@@Base+0x20c>)
   293aa:	ldr	r3, [r1, r3]
   293ac:	ldr	r3, [r3, #0]
   293ae:	str	r3, [sp, #52]	; 0x34
   293b0:	mov.w	r3, #0
   293b4:	ldr	r3, [r7, #24]
   293b6:	str	r3, [sp, #24]
   293b8:	ldr	r3, [r7, #32]
   293ba:	vmov	s17, r3
   293be:	ldr.w	r3, [r7, #388]	; 0x184
   293c2:	rsb	r1, r3, #0
   293c6:	mov	r3, fp
   293c8:	and.w	r2, r1, sl
   293cc:	it	eq
   293ce:	cmpeq	sl, r2
   293d0:	beq.n	293f6 <btrfs_alloc_data_chunk@@Base+0x72>
   293d2:	ldr	r0, [pc, #448]	; (29594 <btrfs_alloc_data_chunk@@Base+0x210>)
   293d4:	mov	r2, sl
   293d6:	mvn.w	r5, #21
   293da:	add	r0, pc
   293dc:	bl	1747c <__btrfs_error@@Base>
   293e0:	ldr	r2, [pc, #436]	; (29598 <btrfs_alloc_data_chunk@@Base+0x214>)
   293e2:	ldr	r3, [pc, #428]	; (29590 <btrfs_alloc_data_chunk@@Base+0x20c>)
   293e4:	add	r2, pc
   293e6:	ldr	r3, [r2, r3]
   293e8:	ldr	r2, [r3, #0]
   293ea:	ldr	r3, [sp, #52]	; 0x34
   293ec:	eors	r2, r3
   293ee:	beq.w	29580 <btrfs_alloc_data_chunk@@Base+0x1fc>
   293f2:	blx	84cc <__stack_chk_fail@plt>
   293f6:	movs	r0, #1
   293f8:	mov.w	r2, #256	; 0x100
   293fc:	movs	r3, #0
   293fe:	str.w	sl, [sp, #41]	; 0x29
   29402:	strd	r2, r3, [sp, #32]
   29406:	movs	r3, #228	; 0xe4
   29408:	str.w	fp, [sp, #45]	; 0x2d
   2940c:	strb.w	r3, [sp, #40]	; 0x28
   29410:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   29414:	blx	8634 <malloc@plt+0x4>
   29418:	mov	r4, r0
   2941a:	cbz	r0, 2942c <btrfs_alloc_data_chunk@@Base+0xa8>
   2941c:	movs	r0, #88	; 0x58
   2941e:	blx	8634 <malloc@plt+0x4>
   29422:	mov	r5, r0
   29424:	cbnz	r0, 29432 <btrfs_alloc_data_chunk@@Base+0xae>
   29426:	mov	r0, r4
   29428:	blx	83f0 <free@plt+0x4>
   2942c:	mvn.w	r5, #11
   29430:	b.n	293e0 <btrfs_alloc_data_chunk@@Base+0x5c>
   29432:	ldr	r3, [sp, #16]
   29434:	mov	r2, sl
   29436:	ldr	r6, [r6, #72]	; 0x48
   29438:	mov	r0, r8
   2943a:	strd	sl, fp, [sp, #8]
   2943e:	str	r3, [sp, #0]
   29440:	ldr	r3, [sp, #20]
   29442:	mov	r1, r6
   29444:	ldr.w	r9, [pc, #340]	; 2959c <btrfs_alloc_data_chunk@@Base+0x218>
   29448:	str	r3, [sp, #4]
   2944a:	mov	r3, fp
   2944c:	bl	2838c <btrfs_insert_dev_extent@@Base>
   29450:	ldr	r2, [pc, #332]	; (295a0 <btrfs_alloc_data_chunk@@Base+0x21c>)
   29452:	ldr	r1, [pc, #336]	; (295a4 <btrfs_alloc_data_chunk@@Base+0x220>)
   29454:	add	r9, pc
   29456:	add	r2, pc
   29458:	movw	r3, #1332	; 0x534
   2945c:	add	r1, pc
   2945e:	adds	r2, #72	; 0x48
   29460:	str	r2, [sp, #28]
   29462:	vmov	s16, r1
   29466:	str	r0, [sp, #0]
   29468:	mov	r0, r9
   2946a:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   2946e:	ldrd	r3, r1, [r6, #80]	; 0x50
   29472:	ldr	r2, [sp, #16]
   29474:	mov	r0, r8
   29476:	adds	r3, r3, r2
   29478:	ldr	r2, [sp, #20]
   2947a:	adc.w	r1, r2, r1
   2947e:	strd	r3, r1, [r6, #80]	; 0x50
   29482:	mov	r1, r6
   29484:	bl	286d8 <btrfs_update_device@@Base>
   29488:	ldr	r2, [sp, #28]
   2948a:	mov.w	r3, #1336	; 0x538
   2948e:	vmov	r1, s16
   29492:	str	r0, [sp, #0]
   29494:	mov	r0, r9
   29496:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   2949a:	str	r6, [r5, #72]	; 0x48
   2949c:	strd	sl, fp, [r5, #80]	; 0x50
   294a0:	add.w	ip, r4, #64	; 0x40
   294a4:	ldrd	r2, r3, [r6, #64]	; 0x40
   294a8:	strd	sl, fp, [r4, #56]	; 0x38
   294ac:	strd	r2, r3, [r4, #48]	; 0x30
   294b0:	add.w	r3, r6, #112	; 0x70
   294b4:	adds	r6, #128	; 0x80
   294b6:	ldr	r0, [r3, #0]
   294b8:	adds	r3, #8
   294ba:	ldr.w	r1, [r3, #-4]
   294be:	cmp	r3, r6
   294c0:	mov	r2, ip
   294c2:	stmia	r2!, {r0, r1}
   294c4:	mov	ip, r2
   294c6:	bne.n	294b6 <btrfs_alloc_data_chunk@@Base+0x132>
   294c8:	ldr	r3, [sp, #16]
   294ca:	movs	r0, #1
   294cc:	movs	r1, #0
   294ce:	mov.w	r6, #65537	; 0x10001
   294d2:	str	r3, [r4, #0]
   294d4:	ldr	r3, [sp, #20]
   294d6:	str	r3, [r4, #4]
   294d8:	ldr	r3, [sp, #24]
   294da:	ldr.w	r2, [r3, #447]	; 0x1bf
   294de:	ldr.w	r3, [r3, #451]	; 0x1c3
   294e2:	strd	r0, r1, [r4, #24]
   294e6:	str	r6, [r4, #44]	; 0x2c
   294e8:	strd	r2, r3, [r4, #8]
   294ec:	mov.w	r2, #65536	; 0x10000
   294f0:	movs	r3, #0
   294f2:	strd	r2, r3, [r4, #16]
   294f6:	ldr.w	r2, [r7, #388]	; 0x184
   294fa:	mov.w	r3, #65536	; 0x10000
   294fe:	strd	r0, r1, [r5, #40]	; 0x28
   29502:	strd	r3, r3, [r4, #32]
   29506:	strd	r3, r2, [r5, #56]	; 0x38
   2950a:	str	r2, [r4, #40]	; 0x28
   2950c:	strd	r3, r3, [r5, #48]	; 0x30
   29510:	strd	r0, r0, [r5, #64]	; 0x40
   29514:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   29518:	vmov	r1, s17
   2951c:	add	r2, sp, #32
   2951e:	mov	r3, r4
   29520:	ldr	r6, [pc, #132]	; (295a8 <btrfs_alloc_data_chunk@@Base+0x224>)
   29522:	add	r6, pc
   29524:	str	r0, [sp, #0]
   29526:	mov	r0, r8
   29528:	bl	1b2c8 <btrfs_insert_item@@Base>
   2952c:	ldr.w	r8, [pc, #124]	; 295ac <btrfs_alloc_data_chunk@@Base+0x228>
   29530:	ldr	r2, [pc, #124]	; (295b0 <btrfs_alloc_data_chunk@@Base+0x22c>)
   29532:	movw	r3, #1367	; 0x557
   29536:	add	r8, pc
   29538:	add	r2, pc
   2953a:	adds	r2, #72	; 0x48
   2953c:	mov	r1, r8
   2953e:	str	r2, [sp, #24]
   29540:	str	r0, [sp, #0]
   29542:	mov	r0, r6
   29544:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   29548:	ldr.w	r1, [sp, #41]	; 0x29
   2954c:	ldr.w	r3, [sp, #45]	; 0x2d
   29550:	add.w	r0, r7, #228	; 0xe4
   29554:	strd	r1, r3, [r5, #24]
   29558:	mov	r1, r5
   2955a:	ldr	r3, [sp, #16]
   2955c:	str	r3, [r5, #32]
   2955e:	ldr	r3, [sp, #20]
   29560:	str	r3, [r5, #36]	; 0x24
   29562:	bl	15e9a <insert_cache_extent@@Base>
   29566:	ldr	r2, [sp, #24]
   29568:	movw	r3, #1373	; 0x55d
   2956c:	mov	r1, r8
   2956e:	str	r0, [sp, #0]
   29570:	mov	r5, r0
   29572:	mov	r0, r6
   29574:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   29578:	mov	r0, r4
   2957a:	blx	83f0 <free@plt+0x4>
   2957e:	b.n	293e0 <btrfs_alloc_data_chunk@@Base+0x5c>
   29580:	mov	r0, r5
   29582:	add	sp, #60	; 0x3c
   29584:	vpop	{d8}
   29588:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2958c:	cbnz	r2, 295cc <btrfs_num_copies@@Base+0x18>
   2958e:	movs	r3, r0
   29590:	lsls	r4, r4, #8
   29592:	movs	r0, r0
   29594:	ldr	r4, [r0, #76]	; 0x4c
   29596:	movs	r1, r0
   29598:	cbnz	r4, 295c4 <btrfs_num_copies@@Base+0x10>
   2959a:	movs	r3, r0
   2959c:	asrs	r7, r3, #11
   2959e:	movs	r1, r0
   295a0:	strb	r6, [r7, #11]
   295a2:	movs	r1, r0
   295a4:	ldr	r5, [r3, #64]	; 0x40
   295a6:	movs	r1, r0
   295a8:	asrs	r1, r2, #8
   295aa:	movs	r1, r0
   295ac:	ldr	r3, [r0, #52]	; 0x34
   295ae:	movs	r1, r0
   295b0:	strb	r4, [r3, #8]
   295b2:	movs	r1, r0

000295b4 <btrfs_num_copies@@Base>:
   295b4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   295b8:	sub	sp, #44	; 0x2c
   295ba:	adds	r0, #228	; 0xe4
   295bc:	mov	r4, r2
   295be:	ldrd	fp, r1, [sp, #80]	; 0x50
   295c2:	mov	r5, r3
   295c4:	ldr.w	sl, [pc, #196]	; 2968c <btrfs_num_copies@@Base+0xd8>
   295c8:	str	r1, [sp, #36]	; 0x24
   295ca:	bl	15fdc <search_cache_extent@@Base>
   295ce:	add	sl, pc
   295d0:	ldr	r1, [sp, #36]	; 0x24
   295d2:	cbnz	r0, 295fe <btrfs_num_copies@@Base+0x4a>
   295d4:	ldr	r3, [pc, #184]	; (29690 <btrfs_num_copies@@Base+0xdc>)
   295d6:	adds.w	r2, r4, fp
   295da:	adc.w	r1, r5, r1
   295de:	ldr.w	r3, [sl, r3]
   295e2:	strd	r2, r1, [sp, #8]
   295e6:	movs	r1, #1
   295e8:	ldr	r2, [pc, #168]	; (29694 <btrfs_num_copies@@Base+0xe0>)
   295ea:	strd	r4, r5, [sp]
   295ee:	add	r2, pc
   295f0:	ldr	r0, [r3, #0]
   295f2:	blx	881c <__fprintf_chk@plt+0x4>
   295f6:	movs	r0, #1
   295f8:	add	sp, #44	; 0x2c
   295fa:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   295fe:	ldrd	r8, r9, [r0, #24]
   29602:	ldrd	r3, r2, [r0, #32]
   29606:	adds.w	r6, r8, r3
   2960a:	adc.w	r7, r9, r2
   2960e:	cmp	r5, r9
   29610:	it	eq
   29612:	cmpeq	r4, r8
   29614:	bcc.n	2961e <btrfs_num_copies@@Base+0x6a>
   29616:	cmp	r7, r5
   29618:	it	eq
   2961a:	cmpeq	r6, r4
   2961c:	bcs.n	2964a <btrfs_num_copies@@Base+0x96>
   2961e:	ldr	r3, [pc, #112]	; (29690 <btrfs_num_copies@@Base+0xdc>)
   29620:	adds.w	r2, r4, fp
   29624:	adc.w	r1, r5, r1
   29628:	ldr.w	r3, [sl, r3]
   2962c:	strd	r2, r1, [sp, #8]
   29630:	movs	r1, #1
   29632:	ldr	r2, [pc, #100]	; (29698 <btrfs_num_copies@@Base+0xe4>)
   29634:	strd	r6, r7, [sp, #24]
   29638:	strd	r8, r9, [sp, #16]
   2963c:	add	r2, pc
   2963e:	strd	r4, r5, [sp]
   29642:	ldr	r0, [r3, #0]
   29644:	blx	881c <__fprintf_chk@plt+0x4>
   29648:	b.n	295f6 <btrfs_num_copies@@Base+0x42>
   2964a:	ldr	r2, [r0, #40]	; 0x28
   2964c:	movs	r3, #0
   2964e:	mov	r5, r3
   29650:	and.w	r4, r2, #1584	; 0x630
   29654:	orrs.w	r1, r4, r5
   29658:	beq.n	2965e <btrfs_num_copies@@Base+0xaa>
   2965a:	ldr	r0, [r0, #64]	; 0x40
   2965c:	b.n	295f8 <btrfs_num_copies@@Base+0x44>
   2965e:	and.w	r4, r2, #64	; 0x40
   29662:	orrs.w	r1, r4, r5
   29666:	beq.n	2966c <btrfs_num_copies@@Base+0xb8>
   29668:	ldr	r0, [r0, #68]	; 0x44
   2966a:	b.n	295f8 <btrfs_num_copies@@Base+0x44>
   2966c:	and.w	r0, r2, #128	; 0x80
   29670:	mov	r1, r3
   29672:	orrs	r1, r0
   29674:	bne.n	29688 <btrfs_num_copies@@Base+0xd4>
   29676:	and.w	r0, r2, #256	; 0x100
   2967a:	mov	r1, r3
   2967c:	orrs.w	r3, r0, r1
   29680:	ite	ne
   29682:	movne	r0, #3
   29684:	moveq	r0, #1
   29686:	b.n	295f8 <btrfs_num_copies@@Base+0x44>
   29688:	movs	r0, #2
   2968a:	b.n	295f8 <btrfs_num_copies@@Base+0x44>
   2968c:			; <UNDEFINED> instruction: 0xb7ba
   2968e:	movs	r3, r0
   29690:	lsls	r4, r6, #8
   29692:	movs	r0, r0
   29694:	ldr	r6, [r3, #44]	; 0x2c
   29696:	movs	r1, r0
   29698:	ldr	r2, [r5, #40]	; 0x28
   2969a:	movs	r1, r0

0002969c <btrfs_next_bg@@Base>:
   2969c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   296a0:	adds	r0, #228	; 0xe4
   296a2:	ldrd	r4, r5, [r1]
   296a6:	mov	r7, r2
   296a8:	ldrd	sl, fp, [sp, #40]	; 0x28
   296ac:	mov	r6, r1
   296ae:	mov	r2, r4
   296b0:	mov	r3, r5
   296b2:	bl	15fdc <search_cache_extent@@Base>
   296b6:	cbz	r0, 296c4 <btrfs_next_bg@@Base+0x28>
   296b8:	orrs.w	r3, r4, r5
   296bc:	beq.n	296cc <btrfs_next_bg@@Base+0x30>
   296be:	bl	160b0 <next_cache_extent@@Base>
   296c2:	cbnz	r0, 296cc <btrfs_next_bg@@Base+0x30>
   296c4:	mvn.w	r0, #1
   296c8:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   296cc:	ldrd	r2, r3, [r0, #40]	; 0x28
   296d0:	ldrd	r4, r5, [r0, #24]
   296d4:	and.w	r8, sl, r2
   296d8:	and.w	r9, fp, r3
   296dc:	orrs.w	r3, r8, r9
   296e0:	beq.n	296f2 <btrfs_next_bg@@Base+0x56>
   296e2:	strd	r4, r5, [r6]
   296e6:	ldrd	r2, r3, [r0, #32]
   296ea:	movs	r0, #0
   296ec:	strd	r2, r3, [r7]
   296f0:	b.n	296c8 <btrfs_next_bg@@Base+0x2c>
   296f2:	orrs.w	r3, r4, r5
   296f6:	bne.n	296b6 <btrfs_next_bg@@Base+0x1a>
   296f8:	bl	160b0 <next_cache_extent@@Base>
   296fc:	b.n	296b6 <btrfs_next_bg@@Base+0x1a>

000296fe <btrfs_rmap_block@@Base>:
   296fe:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29702:	adds	r0, #228	; 0xe4
   29704:	sub	sp, #60	; 0x3c
   29706:	bl	15fdc <search_cache_extent@@Base>
   2970a:	ldr	r2, [pc, #464]	; (298dc <btrfs_rmap_block@@Base+0x1de>)
   2970c:	ldr	r1, [pc, #464]	; (298e0 <btrfs_rmap_block@@Base+0x1e2>)
   2970e:	movw	r3, #1467	; 0x5bb
   29712:	add	r2, pc
   29714:	adds	r2, #95	; 0x5f
   29716:	add	r1, pc
   29718:	mov	r4, r0
   2971a:	clz	r0, r0
   2971e:	lsrs	r0, r0, #5
   29720:	str	r0, [sp, #0]
   29722:	ldr	r0, [pc, #448]	; (298e4 <btrfs_rmap_block@@Base+0x1e6>)
   29724:	add	r0, pc
   29726:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   2972a:	ldr	r5, [r4, #56]	; 0x38
   2972c:	ldr	r0, [r4, #40]	; 0x28
   2972e:	movs	r1, #0
   29730:	ldrd	r6, r7, [r4, #32]
   29734:	asrs	r3, r5, #31
   29736:	mov	r2, r5
   29738:	strd	r2, r3, [sp, #8]
   2973c:	and.w	r2, r0, #64	; 0x40
   29740:	mov	r3, r1
   29742:	orrs	r3, r2
   29744:	beq.n	29794 <btrfs_rmap_block@@Base+0x96>
   29746:	ldrd	r0, r1, [r4, #64]	; 0x40
   2974a:	bl	38f98 <btrfs_util_strerror@@Base+0x290>
   2974e:	mov	r2, r0
   29750:	mov	r0, r6
   29752:	mov	r1, r7
   29754:	asrs	r3, r2, #31
   29756:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2975a:	mov	r6, r0
   2975c:	mov	r7, r1
   2975e:	ldr	r1, [r4, #64]	; 0x40
   29760:	movs	r0, #1
   29762:	mov.w	r8, #0
   29766:	mov	sl, r8
   29768:	mov	r9, r8
   2976a:	lsls	r1, r1, #3
   2976c:	blx	8358 <calloc@plt+0x4>
   29770:	strd	r0, r4, [sp, #24]
   29774:	ldr	r5, [r4, #64]	; 0x40
   29776:	cmp	r5, r8
   29778:	bgt.n	297d2 <btrfs_rmap_block@@Base+0xd4>
   2977a:	ldr	r3, [sp, #104]	; 0x68
   2977c:	movs	r0, #0
   2977e:	ldr	r2, [sp, #24]
   29780:	str	r2, [r3, #0]
   29782:	ldr	r3, [sp, #108]	; 0x6c
   29784:	ldr	r2, [sp, #8]
   29786:	str.w	r9, [r3]
   2978a:	ldr	r3, [sp, #112]	; 0x70
   2978c:	str	r2, [r3, #0]
   2978e:	add	sp, #60	; 0x3c
   29790:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29794:	and.w	r8, r0, #8
   29798:	mov	r9, r1
   2979a:	orrs.w	r3, r8, r9
   2979e:	ldr	r2, [r4, #64]	; 0x40
   297a0:	bne.n	29750 <btrfs_rmap_block@@Base+0x52>
   297a2:	and.w	r2, r0, #384	; 0x180
   297a6:	mov	r3, r1
   297a8:	orrs	r3, r2
   297aa:	beq.n	2975e <btrfs_rmap_block@@Base+0x60>
   297ac:	mov	r0, r4
   297ae:	bl	27d28 <btrfs_add_root_ref@@Base+0x100>
   297b2:	mov	r1, r7
   297b4:	asrs	r3, r0, #31
   297b6:	mov	r2, r0
   297b8:	mov	r8, r0
   297ba:	mov	r0, r6
   297bc:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   297c0:	mul.w	r5, r8, r5
   297c4:	asrs	r3, r5, #31
   297c6:	mov	r2, r5
   297c8:	strd	r2, r3, [sp, #8]
   297cc:	mov	r6, r0
   297ce:	mov	r7, r1
   297d0:	b.n	2975e <btrfs_rmap_block@@Base+0x60>
   297d2:	ldr	r3, [sp, #28]
   297d4:	ldrd	fp, ip, [r3, #80]	; 0x50
   297d8:	ldrd	r2, r3, [sp, #96]	; 0x60
   297dc:	cmp	r3, ip
   297de:	it	eq
   297e0:	cmpeq	r2, fp
   297e2:	bcc.n	2988c <btrfs_rmap_block@@Base+0x18e>
   297e4:	adds.w	r3, fp, r6
   297e8:	str	r3, [sp, #32]
   297ea:	adc.w	r3, ip, r7
   297ee:	str	r3, [sp, #36]	; 0x24
   297f0:	ldrd	r0, r1, [sp, #32]
   297f4:	ldrd	r2, r3, [sp, #96]	; 0x60
   297f8:	cmp	r3, r1
   297fa:	it	eq
   297fc:	cmpeq	r2, r0
   297fe:	bcs.n	2988c <btrfs_rmap_block@@Base+0x18e>
   29800:	ldr	r1, [sp, #96]	; 0x60
   29802:	ldr	r2, [r4, #56]	; 0x38
   29804:	subs.w	r0, r1, fp
   29808:	ldr	r1, [sp, #100]	; 0x64
   2980a:	mov.w	r3, r2, asr #31
   2980e:	sbc.w	r1, r1, ip
   29812:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29816:	ldr	r3, [r4, #40]	; 0x28
   29818:	and.w	r2, r3, #64	; 0x40
   2981c:	str	r2, [sp, #40]	; 0x28
   2981e:	movs	r2, #0
   29820:	str	r2, [sp, #44]	; 0x2c
   29822:	ldrd	fp, ip, [sp, #40]	; 0x28
   29826:	orrs.w	r2, fp, ip
   2982a:	mov	lr, r0
   2982c:	beq.n	2989c <btrfs_rmap_block@@Base+0x19e>
   2982e:	asrs	r3, r5, #31
   29830:	ldr	r2, [r4, #68]	; 0x44
   29832:	muls	r1, r5
   29834:	mla	r1, lr, r3, r1
   29838:	asrs	r3, r2, #31
   2983a:	umull	fp, ip, r5, lr
   2983e:	add	ip, r1
   29840:	adds.w	r0, fp, r8
   29844:	adc.w	r1, ip, sl
   29848:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2984c:	mov	lr, r0
   2984e:	ldr	r3, [sp, #12]
   29850:	ldr	r2, [sp, #8]
   29852:	mul.w	r3, lr, r3
   29856:	mla	r1, r2, r1, r3
   2985a:	umull	r2, r3, lr, r2
   2985e:	add	r3, r1
   29860:	ldrd	r1, r0, [r4, #24]
   29864:	adds	r1, r2, r1
   29866:	str	r1, [sp, #16]
   29868:	adcs	r3, r0
   2986a:	str	r3, [sp, #20]
   2986c:	ldr	r3, [sp, #24]
   2986e:	sub.w	r2, r3, #8
   29872:	movs	r3, #0
   29874:	cmp	r3, r9
   29876:	blt.n	298c6 <btrfs_rmap_block@@Base+0x1c8>
   29878:	bne.n	2988c <btrfs_rmap_block@@Base+0x18e>
   2987a:	ldr	r3, [sp, #24]
   2987c:	ldrd	r1, r2, [sp, #16]
   29880:	add.w	r3, r3, r9, lsl #3
   29884:	add.w	r9, r9, #1
   29888:	strd	r1, r2, [r3]
   2988c:	ldr	r3, [sp, #28]
   2988e:	adds.w	r8, r8, #1
   29892:	adc.w	sl, sl, #0
   29896:	adds	r3, #16
   29898:	str	r3, [sp, #28]
   2989a:	b.n	29774 <btrfs_rmap_block@@Base+0x76>
   2989c:	and.w	r3, r3, #8
   298a0:	str	r3, [sp, #48]	; 0x30
   298a2:	movs	r3, #0
   298a4:	str	r3, [sp, #52]	; 0x34
   298a6:	ldrd	r2, r3, [sp, #48]	; 0x30
   298aa:	orrs	r3, r2
   298ac:	beq.n	2984e <btrfs_rmap_block@@Base+0x150>
   298ae:	asrs	r3, r5, #31
   298b0:	muls	r1, r5
   298b2:	mla	r3, lr, r3, r1
   298b6:	umull	r0, r1, r5, lr
   298ba:	add	r1, r3
   298bc:	adds.w	lr, r0, r8
   298c0:	adc.w	r1, r1, sl
   298c4:	b.n	2984e <btrfs_rmap_block@@Base+0x150>
   298c6:	ldrd	r0, r1, [r2, #8]!
   298ca:	ldrd	fp, ip, [sp, #16]
   298ce:	cmp	r1, ip
   298d0:	it	eq
   298d2:	cmpeq	r0, fp
   298d4:	beq.n	2988c <btrfs_rmap_block@@Base+0x18e>
   298d6:	adds	r3, #1
   298d8:	b.n	29874 <btrfs_rmap_block@@Base+0x176>
   298da:	nop
   298dc:	strb	r2, [r0, #1]
   298de:	movs	r1, r0
   298e0:	ldr	r3, [r4, #20]
   298e2:	movs	r1, r0
   298e4:	ldr	r0, [r6, #28]
   298e6:	movs	r1, r0

000298e8 <__btrfs_map_block@@Base>:
   298e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   298ec:	sub	sp, #124	; 0x7c
   298ee:	mov	fp, r1
   298f0:	strd	r2, r3, [sp, #16]
   298f4:	ldrd	r3, r5, [sp, #168]	; 0xa8
   298f8:	cbz	r3, 29932 <__btrfs_map_block@@Base+0x4a>
   298fa:	cmp	r1, #0
   298fc:	ite	eq
   298fe:	moveq	r7, #1
   29900:	movne	r7, #8
   29902:	add.w	sl, r0, #228	; 0xe4
   29906:	movs	r6, #1
   29908:	mov.w	r9, #0
   2990c:	ldrd	r2, r3, [sp, #16]
   29910:	mov	r0, sl
   29912:	bl	15fdc <search_cache_extent@@Base>
   29916:	mov	r4, r0
   29918:	cbnz	r0, 29936 <__btrfs_map_block@@Base+0x4e>
   2991a:	ldr	r1, [sp, #160]	; 0xa0
   2991c:	mov.w	r2, #4294967295	; 0xffffffff
   29920:	mov.w	r3, #4294967295	; 0xffffffff
   29924:	strd	r2, r3, [r1]
   29928:	mvn.w	r0, #1
   2992c:	add	sp, #124	; 0x7c
   2992e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29932:	movs	r7, #8
   29934:	b.n	29902 <__btrfs_map_block@@Base+0x1a>
   29936:	ldrd	r2, r3, [r0, #24]
   2993a:	strd	r2, r3, [sp, #24]
   2993e:	ldrd	r0, r1, [sp, #24]
   29942:	ldrd	r2, r3, [sp, #16]
   29946:	cmp	r3, r1
   29948:	it	eq
   2994a:	cmpeq	r2, r0
   2994c:	bcs.n	29964 <__btrfs_map_block@@Base+0x7c>
   2994e:	ldr	r3, [sp, #24]
   29950:	ldr	r2, [sp, #16]
   29952:	ldr	r1, [sp, #20]
   29954:	subs	r2, r3, r2
   29956:	ldr	r3, [sp, #28]
   29958:	sbc.w	r3, r3, r1
   2995c:	ldr	r1, [sp, #160]	; 0xa0
   2995e:	str	r2, [r1, #0]
   29960:	str	r3, [r1, #4]
   29962:	b.n	29928 <__btrfs_map_block@@Base+0x40>
   29964:	ldr	r3, [sp, #168]	; 0xa8
   29966:	cbz	r3, 2997c <__btrfs_map_block@@Base+0x94>
   29968:	lsls	r1, r7, #4
   2996a:	movs	r0, #1
   2996c:	adds	r1, #8
   2996e:	blx	8358 <calloc@plt+0x4>
   29972:	mov	r8, r0
   29974:	cbnz	r0, 29980 <__btrfs_map_block@@Base+0x98>
   29976:	mvn.w	r0, #11
   2997a:	b.n	2992c <__btrfs_map_block@@Base+0x44>
   2997c:	ldr.w	r8, [sp, #168]	; 0xa8
   29980:	ldr	r3, [r4, #40]	; 0x28
   29982:	cmp.w	fp, #1
   29986:	str	r3, [sp, #76]	; 0x4c
   29988:	bne.n	2999c <__btrfs_map_block@@Base+0xb4>
   2998a:	and.w	r3, r3, #1584	; 0x630
   2998e:	strd	r3, r9, [sp, #8]
   29992:	ldrd	r2, r3, [sp, #8]
   29996:	orrs	r3, r2
   29998:	beq.n	299d8 <__btrfs_map_block@@Base+0xf0>
   2999a:	ldr	r6, [r4, #64]	; 0x40
   2999c:	ldr	r3, [sp, #76]	; 0x4c
   2999e:	and.w	r3, r3, #384	; 0x180
   299a2:	strd	r3, r9, [sp, #48]	; 0x30
   299a6:	ldrd	r2, r3, [sp, #48]	; 0x30
   299aa:	orrs	r3, r2
   299ac:	ldr	r3, [sp, #168]	; 0xa8
   299ae:	beq.n	299ee <__btrfs_map_block@@Base+0x106>
   299b0:	cbz	r3, 299fe <__btrfs_map_block@@Base+0x116>
   299b2:	tst.w	fp, #1
   299b6:	bne.n	299bc <__btrfs_map_block@@Base+0xd4>
   299b8:	cmp	r5, #1
   299ba:	ble.n	299f0 <__btrfs_map_block@@Base+0x108>
   299bc:	ldr	r3, [sp, #176]	; 0xb0
   299be:	cbz	r3, 299f0 <__btrfs_map_block@@Base+0x108>
   299c0:	ldr	r6, [r4, #64]	; 0x40
   299c2:	cmp	r7, r6
   299c4:	blt.n	299f4 <__btrfs_map_block@@Base+0x10c>
   299c6:	lsls	r0, r6, #3
   299c8:	blx	8634 <malloc@plt+0x4>
   299cc:	str	r0, [sp, #8]
   299ce:	cbnz	r0, 29a02 <__btrfs_map_block@@Base+0x11a>
   299d0:	mov	r0, r8
   299d2:	blx	83f0 <free@plt+0x4>
   299d6:	b.n	29976 <__btrfs_map_block@@Base+0x8e>
   299d8:	ldr	r3, [sp, #76]	; 0x4c
   299da:	and.w	r3, r3, #64	; 0x40
   299de:	strd	r3, r9, [sp, #32]
   299e2:	ldrd	r2, r3, [sp, #32]
   299e6:	orrs	r3, r2
   299e8:	it	ne
   299ea:	ldrne	r6, [r4, #68]	; 0x44
   299ec:	b.n	2999c <__btrfs_map_block@@Base+0xb4>
   299ee:	cbz	r3, 299fe <__btrfs_map_block@@Base+0x116>
   299f0:	cmp	r7, r6
   299f2:	bge.n	299fe <__btrfs_map_block@@Base+0x116>
   299f4:	mov	r0, r8
   299f6:	mov	r7, r6
   299f8:	blx	83f0 <free@plt+0x4>
   299fc:	b.n	2990c <__btrfs_map_block@@Base+0x24>
   299fe:	movs	r3, #0
   29a00:	str	r3, [sp, #8]
   29a02:	ldr	r2, [sp, #24]
   29a04:	ldr	r3, [sp, #16]
   29a06:	ldr	r6, [r4, #56]	; 0x38
   29a08:	subs	r3, r3, r2
   29a0a:	ldr	r2, [sp, #28]
   29a0c:	str	r3, [sp, #64]	; 0x40
   29a0e:	ldr	r3, [sp, #20]
   29a10:	sbc.w	r3, r3, r2
   29a14:	str	r3, [sp, #68]	; 0x44
   29a16:	mov	r2, r6
   29a18:	asrs	r3, r6, #31
   29a1a:	ldrd	r0, r1, [sp, #64]	; 0x40
   29a1e:	strd	r2, r3, [sp, #80]	; 0x50
   29a22:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29a26:	mov	r9, r2
   29a28:	ldr	r2, [sp, #84]	; 0x54
   29a2a:	mov	r7, r0
   29a2c:	str	r3, [sp, #100]	; 0x64
   29a2e:	mul.w	r3, r6, r1
   29a32:	str	r1, [sp, #48]	; 0x30
   29a34:	mla	r3, r7, r2, r3
   29a38:	mov	sl, r1
   29a3a:	umull	r1, r2, r6, r7
   29a3e:	str	r0, [sp, #32]
   29a40:	strd	r1, r2, [sp, #56]	; 0x38
   29a44:	ldr	r2, [sp, #60]	; 0x3c
   29a46:	add	r3, r2
   29a48:	str	r3, [sp, #60]	; 0x3c
   29a4a:	ldrd	r0, r1, [sp, #56]	; 0x38
   29a4e:	ldrd	r2, r3, [sp, #64]	; 0x40
   29a52:	cmp	r3, r1
   29a54:	ldr	r1, [pc, #952]	; (29e10 <__btrfs_map_block@@Base+0x528>)
   29a56:	it	eq
   29a58:	cmpeq	r2, r0
   29a5a:	ldr	r2, [pc, #952]	; (29e14 <__btrfs_map_block@@Base+0x52c>)
   29a5c:	ldr	r0, [pc, #952]	; (29e18 <__btrfs_map_block@@Base+0x530>)
   29a5e:	add	r1, pc
   29a60:	add	r2, pc
   29a62:	ite	cc
   29a64:	movcc	r3, #1
   29a66:	movcs	r3, #0
   29a68:	adds	r2, #112	; 0x70
   29a6a:	add	r0, pc
   29a6c:	str	r3, [sp, #0]
   29a6e:	movw	r3, #1638	; 0x666
   29a72:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   29a76:	ldr	r3, [sp, #76]	; 0x4c
   29a78:	movs	r1, #0
   29a7a:	ldrd	r2, r6, [r4, #32]
   29a7e:	and.w	r0, r3, #2040	; 0x7f8
   29a82:	str.w	r9, [sp, #96]	; 0x60
   29a86:	orrs.w	r3, r0, r1
   29a8a:	ldr	r3, [sp, #24]
   29a8c:	ldr	r1, [sp, #16]
   29a8e:	beq.n	29ae8 <__btrfs_map_block@@Base+0x200>
   29a90:	subs	r3, r3, r1
   29a92:	ldr	r0, [sp, #20]
   29a94:	ldr	r1, [sp, #28]
   29a96:	sbc.w	r0, r1, r0
   29a9a:	ldr	r1, [sp, #80]	; 0x50
   29a9c:	adds.w	lr, r1, r3
   29aa0:	ldr	r1, [sp, #84]	; 0x54
   29aa2:	adc.w	ip, r1, r0
   29aa6:	adds	r3, r3, r2
   29aa8:	str	r3, [sp, #88]	; 0x58
   29aaa:	adc.w	r3, r0, r6
   29aae:	str	r3, [sp, #92]	; 0x5c
   29ab0:	ldr	r3, [sp, #56]	; 0x38
   29ab2:	adds.w	r3, lr, r3
   29ab6:	str	r3, [sp, #40]	; 0x28
   29ab8:	ldr	r3, [sp, #60]	; 0x3c
   29aba:	adc.w	r3, ip, r3
   29abe:	str	r3, [sp, #44]	; 0x2c
   29ac0:	ldrd	r0, r1, [sp, #40]	; 0x28
   29ac4:	ldrd	r2, r3, [sp, #88]	; 0x58
   29ac8:	cmp	r3, r1
   29aca:	it	eq
   29acc:	cmpeq	r2, r0
   29ace:	bcs.n	29ad4 <__btrfs_map_block@@Base+0x1ec>
   29ad0:	strd	r2, r3, [sp, #40]	; 0x28
   29ad4:	ldr	r3, [sp, #160]	; 0xa0
   29ad6:	mov	r1, r3
   29ad8:	ldrd	r2, r3, [sp, #40]	; 0x28
   29adc:	strd	r2, r3, [r1]
   29ae0:	ldr	r3, [sp, #168]	; 0xa8
   29ae2:	cbnz	r3, 29afe <__btrfs_map_block@@Base+0x216>
   29ae4:	movs	r0, #0
   29ae6:	b.n	2992c <__btrfs_map_block@@Base+0x44>
   29ae8:	subs	r3, r3, r1
   29aea:	ldr	r0, [sp, #20]
   29aec:	ldr	r1, [sp, #28]
   29aee:	sbc.w	r1, r1, r0
   29af2:	adds	r3, r3, r2
   29af4:	str	r3, [sp, #40]	; 0x28
   29af6:	adc.w	r3, r1, r6
   29afa:	str	r3, [sp, #44]	; 0x2c
   29afc:	b.n	29ad4 <__btrfs_map_block@@Base+0x1ec>
   29afe:	movs	r3, #1
   29b00:	str.w	r3, [r8, #4]
   29b04:	ldr	r1, [r4, #40]	; 0x28
   29b06:	mov.w	r9, #0
   29b0a:	mov	r3, r9
   29b0c:	ldr	r0, [r4, #64]	; 0x40
   29b0e:	and.w	r2, r1, #1552	; 0x610
   29b12:	orrs	r3, r2
   29b14:	beq.n	29b9c <__btrfs_map_block@@Base+0x2b4>
   29b16:	cmp.w	fp, #1
   29b1a:	bne.n	29b88 <__btrfs_map_block@@Base+0x2a0>
   29b1c:	mov	r5, r9
   29b1e:	str.w	r0, [r8, #4]
   29b22:	ldr	r3, [r4, #64]	; 0x40
   29b24:	ldr	r2, [pc, #756]	; (29e1c <__btrfs_map_block@@Base+0x534>)
   29b26:	cmp	r3, r5
   29b28:	ldr	r1, [pc, #756]	; (29e20 <__btrfs_map_block@@Base+0x538>)
   29b2a:	ldr	r0, [pc, #760]	; (29e24 <__btrfs_map_block@@Base+0x53c>)
   29b2c:	add	r2, pc
   29b2e:	ite	gt
   29b30:	movgt	r3, #0
   29b32:	movle	r3, #1
   29b34:	add	r1, pc
   29b36:	add	r0, pc
   29b38:	str	r3, [sp, #0]
   29b3a:	adds	r2, #112	; 0x70
   29b3c:	movw	r3, #1748	; 0x6d4
   29b40:	add.w	r5, r4, r5, lsl #4
   29b44:	bl	27e80 <btrfs_add_root_ref@@Base+0x258>
   29b48:	ldr.w	ip, [r8, #4]
   29b4c:	add.w	r1, r8, #8
   29b50:	movs	r0, #0
   29b52:	cmp	ip, r0
   29b54:	add.w	r5, r5, #16
   29b58:	add.w	r1, r1, #16
   29b5c:	bgt.w	29d50 <__btrfs_map_block@@Base+0x468>
   29b60:	ldr	r3, [sp, #168]	; 0xa8
   29b62:	str.w	r8, [r3]
   29b66:	ldr	r3, [sp, #164]	; 0xa4
   29b68:	cbz	r3, 29b74 <__btrfs_map_block@@Base+0x28c>
   29b6a:	ldrd	r2, r3, [r4, #40]	; 0x28
   29b6e:	ldr	r1, [sp, #164]	; 0xa4
   29b70:	strd	r2, r3, [r1]
   29b74:	ldr	r3, [sp, #8]
   29b76:	cmp	r3, #0
   29b78:	beq.n	29ae4 <__btrfs_map_block@@Base+0x1fc>
   29b7a:	movs	r0, #0
   29b7c:	add.w	r7, ip, #4294967295	; 0xffffffff
   29b80:	add.w	r9, sp, #104	; 0x68
   29b84:	mov	r4, r0
   29b86:	b.n	29df8 <__btrfs_map_block@@Base+0x510>
   29b88:	cbz	r5, 29b8e <__btrfs_map_block@@Base+0x2a6>
   29b8a:	subs	r5, #1
   29b8c:	b.n	29b22 <__btrfs_map_block@@Base+0x23a>
   29b8e:	asrs	r3, r0, #31
   29b90:	mov	r2, r0
   29b92:	mov	r1, sl
   29b94:	mov	r0, r7
   29b96:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29b9a:	b.n	29bcc <__btrfs_map_block@@Base+0x2e4>
   29b9c:	and.w	r2, r1, #64	; 0x40
   29ba0:	mov	r3, r9
   29ba2:	orrs	r3, r2
   29ba4:	beq.n	29bda <__btrfs_map_block@@Base+0x2f2>
   29ba6:	ldr	r6, [r4, #68]	; 0x44
   29ba8:	mov	r1, r6
   29baa:	bl	38f98 <btrfs_util_strerror@@Base+0x290>
   29bae:	mov	r1, sl
   29bb0:	asrs	r3, r0, #31
   29bb2:	mov	r2, r0
   29bb4:	mov	r0, r7
   29bb6:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29bba:	cmp.w	fp, #1
   29bbe:	mul.w	r2, r2, r6
   29bc2:	bne.n	29bd0 <__btrfs_map_block@@Base+0x2e8>
   29bc4:	str.w	r6, [r8, #4]
   29bc8:	str	r0, [sp, #32]
   29bca:	str	r1, [sp, #48]	; 0x30
   29bcc:	mov	r5, r2
   29bce:	b.n	29b22 <__btrfs_map_block@@Base+0x23a>
   29bd0:	cmp	r5, #0
   29bd2:	beq.n	29bc8 <__btrfs_map_block@@Base+0x2e0>
   29bd4:	subs	r5, #1
   29bd6:	add	r2, r5
   29bd8:	b.n	29bc8 <__btrfs_map_block@@Base+0x2e0>
   29bda:	and.w	r2, r1, #32
   29bde:	mov	r3, r9
   29be0:	orrs	r3, r2
   29be2:	beq.n	29bf0 <__btrfs_map_block@@Base+0x308>
   29be4:	cmp.w	fp, #1
   29be8:	beq.n	29b1c <__btrfs_map_block@@Base+0x234>
   29bea:	cmp	r5, #0
   29bec:	beq.n	29b22 <__btrfs_map_block@@Base+0x23a>
   29bee:	b.n	29b8a <__btrfs_map_block@@Base+0x2a2>
   29bf0:	asrs	r3, r0, #31
   29bf2:	mov	r2, r0
   29bf4:	strd	r2, r3, [sp, #16]
   29bf8:	and.w	r2, r1, #384	; 0x180
   29bfc:	mov	r3, r9
   29bfe:	orrs	r3, r2
   29c00:	beq.w	29d3c <__btrfs_map_block@@Base+0x454>
   29c04:	mov	r0, r4
   29c06:	bl	27d28 <btrfs_add_root_ref@@Base+0x100>
   29c0a:	asrs	r3, r0, #31
   29c0c:	mov	r2, r0
   29c0e:	strd	r2, r3, [sp, #24]
   29c12:	mov	r6, r0
   29c14:	ldr	r3, [sp, #8]
   29c16:	cmp	r3, #0
   29c18:	beq.n	29d12 <__btrfs_map_block@@Base+0x42a>
   29c1a:	ldr	r7, [r4, #56]	; 0x38
   29c1c:	mul.w	r5, r0, r7
   29c20:	ldrd	r0, r1, [sp, #64]	; 0x40
   29c24:	mov.w	fp, r5, asr #31
   29c28:	mov	r2, r5
   29c2a:	mov	r3, fp
   29c2c:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29c30:	mov	r2, r7
   29c32:	mul.w	r3, r5, r1
   29c36:	mla	r3, r0, fp, r3
   29c3a:	umull	r0, r1, r5, r0
   29c3e:	add	r1, r3
   29c40:	asrs	r3, r7, #31
   29c42:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29c46:	asrs	r3, r6, #31
   29c48:	mov	r2, r6
   29c4a:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29c4e:	ldrd	r2, r3, [sp, #16]
   29c52:	str	r0, [sp, #32]
   29c54:	str	r1, [sp, #48]	; 0x30
   29c56:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29c5a:	mov	r5, r2
   29c5c:	ldrd	r3, r2, [sp, #28]
   29c60:	muls	r3, r2
   29c62:	ldr	r2, [sp, #48]	; 0x30
   29c64:	mla	r3, r6, r2, r3
   29c68:	ldr	r2, [sp, #32]
   29c6a:	umull	r6, r7, r2, r6
   29c6e:	add	r7, r3
   29c70:	mov	r0, r4
   29c72:	add.w	sl, r9, r5
   29c76:	bl	27d28 <btrfs_add_root_ref@@Base+0x100>
   29c7a:	ldr	r1, [r4, #64]	; 0x40
   29c7c:	cmp	r0, r9
   29c7e:	mov	r0, sl
   29c80:	bgt.n	29cda <__btrfs_map_block@@Base+0x3f2>
   29c82:	bl	3922c <btrfs_util_strerror@@Base+0x524>
   29c86:	ldr	r3, [sp, #8]
   29c88:	mvn.w	r2, #1
   29c8c:	add.w	r1, r3, r1, lsl #3
   29c90:	mov.w	r3, #4294967295	; 0xffffffff
   29c94:	strd	r2, r3, [r1]
   29c98:	movs	r3, #0
   29c9a:	ldr	r1, [r4, #40]	; 0x28
   29c9c:	and.w	r2, r1, #256	; 0x100
   29ca0:	orrs	r3, r2
   29ca2:	beq.n	29cc0 <__btrfs_map_block@@Base+0x3d8>
   29ca4:	ldr	r1, [r4, #64]	; 0x40
   29ca6:	add.w	r0, sl, #1
   29caa:	bl	3922c <btrfs_util_strerror@@Base+0x524>
   29cae:	ldr	r3, [sp, #8]
   29cb0:	mov.w	r2, #4294967295	; 0xffffffff
   29cb4:	add.w	r1, r3, r1, lsl #3
   29cb8:	mov.w	r3, #4294967295	; 0xffffffff
   29cbc:	strd	r2, r3, [r1]
   29cc0:	ldr	r2, [r4, #56]	; 0x38
   29cc2:	ldr	r1, [sp, #160]	; 0xa0
   29cc4:	asrs	r3, r2, #31
   29cc6:	strd	r2, r3, [r1]
   29cca:	ldr	r3, [r4, #64]	; 0x40
   29ccc:	str.w	r3, [r8, #4]
   29cd0:	movs	r3, #0
   29cd2:	mov	r5, r3
   29cd4:	strd	r3, r3, [sp, #96]	; 0x60
   29cd8:	b.n	29b22 <__btrfs_map_block@@Base+0x23a>
   29cda:	bl	3922c <btrfs_util_strerror@@Base+0x524>
   29cde:	ldr	r0, [r4, #56]	; 0x38
   29ce0:	ldr	r3, [sp, #8]
   29ce2:	add.w	r9, r9, #1
   29ce6:	mov.w	fp, r0, asr #31
   29cea:	mul.w	r2, r0, r7
   29cee:	add.w	ip, r3, r1, lsl #3
   29cf2:	umull	r0, r1, r0, r6
   29cf6:	mla	r3, r6, fp, r2
   29cfa:	add	r1, r3
   29cfc:	ldrd	r3, r2, [r4, #24]
   29d00:	adds	r3, r3, r0
   29d02:	adc.w	r2, r1, r2
   29d06:	adds	r6, #1
   29d08:	adc.w	r7, r7, #0
   29d0c:	strd	r3, r2, [ip]
   29d10:	b.n	29c70 <__btrfs_map_block@@Base+0x388>
   29d12:	asrs	r3, r0, #31
   29d14:	mov	r1, sl
   29d16:	mov	r0, r7
   29d18:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29d1c:	cmp	r5, #1
   29d1e:	itte	gt
   29d20:	addgt	r6, r6, r5
   29d22:	subgt	r6, #2
   29d24:	movle	r6, r2
   29d26:	mov	sl, r0
   29d28:	str	r0, [sp, #32]
   29d2a:	adds.w	r0, sl, r6
   29d2e:	mov	fp, r1
   29d30:	str	r1, [sp, #48]	; 0x30
   29d32:	ldrd	r2, r3, [sp, #16]
   29d36:	adc.w	r1, fp, r6, asr #31
   29d3a:	b.n	29b96 <__btrfs_map_block@@Base+0x2ae>
   29d3c:	ldrd	r2, r3, [sp, #16]
   29d40:	mov	r0, r7
   29d42:	mov	r1, sl
   29d44:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   29d48:	mov	r5, r2
   29d4a:	str	r0, [sp, #32]
   29d4c:	str	r1, [sp, #48]	; 0x30
   29d4e:	b.n	29b22 <__btrfs_map_block@@Base+0x23a>
   29d50:	ldrd	r3, r2, [r5, #64]	; 0x40
   29d54:	adds	r0, #1
   29d56:	ldr	r6, [sp, #96]	; 0x60
   29d58:	ldr.w	sl, [r4, #56]	; 0x38
   29d5c:	adds.w	lr, r6, r3
   29d60:	ldr	r6, [sp, #100]	; 0x64
   29d62:	adc.w	r2, r6, r2
   29d66:	mov	r6, sl
   29d68:	asrs	r7, r6, #31
   29d6a:	strd	r6, r7, [sp, #16]
   29d6e:	ldr	r6, [sp, #48]	; 0x30
   29d70:	ldr	r7, [sp, #32]
   29d72:	ldr	r3, [sp, #20]
   29d74:	mul.w	r6, sl, r6
   29d78:	mla	r6, r7, r3, r6
   29d7c:	umull	sl, fp, sl, r7
   29d80:	adds.w	r3, lr, sl
   29d84:	add	fp, r6
   29d86:	adc.w	r2, r2, fp
   29d8a:	strd	r3, r2, [r1, #-8]
   29d8e:	ldr	r3, [r5, #56]	; 0x38
   29d90:	str.w	r3, [r1, #-16]
   29d94:	b.n	29b52 <__btrfs_map_block@@Base+0x26a>
   29d96:	ldr	r3, [sp, #8]
   29d98:	add.w	lr, r4, #1
   29d9c:	add.w	sl, r3, r4, lsl #3
   29da0:	add.w	ip, sl, #8
   29da4:	ldrd	r2, r3, [sl]
   29da8:	strd	r2, r3, [sp, #16]
   29dac:	ldrd	r5, r6, [sp, #16]
   29db0:	ldrd	r2, r3, [sl, #8]
   29db4:	cmp	r3, r6
   29db6:	it	eq
   29db8:	cmpeq	r2, r5
   29dba:	strd	r2, r3, [sp, #24]
   29dbe:	bcs.n	29df6 <__btrfs_map_block@@Base+0x50e>
   29dc0:	add.w	r4, r8, r4, lsl #4
   29dc4:	add.w	r5, r8, lr, lsl #4
   29dc8:	adds	r4, #8
   29dca:	adds	r5, #8
   29dcc:	ldmia.w	r4, {r0, r1, r2, r3}
   29dd0:	stmia.w	r9, {r0, r1, r2, r3}
   29dd4:	ldmia.w	r5, {r0, r1, r2, r3}
   29dd8:	stmia.w	r4, {r0, r1, r2, r3}
   29ddc:	ldrd	r3, r4, [sp, #24]
   29de0:	strd	r3, r4, [sl]
   29de4:	ldmia.w	r9, {r0, r1, r2, r3}
   29de8:	stmia.w	r5, {r0, r1, r2, r3}
   29dec:	movs	r0, #1
   29dee:	ldrd	r3, r4, [sp, #16]
   29df2:	strd	r3, r4, [ip]
   29df6:	mov	r4, lr
   29df8:	cmp	r4, r7
   29dfa:	blt.n	29d96 <__btrfs_map_block@@Base+0x4ae>
   29dfc:	cbnz	r0, 29e08 <__btrfs_map_block@@Base+0x520>
   29dfe:	ldr	r3, [sp, #176]	; 0xb0
   29e00:	mov	r2, r3
   29e02:	ldr	r3, [sp, #8]
   29e04:	str	r3, [r2, #0]
   29e06:	b.n	2992c <__btrfs_map_block@@Base+0x44>
   29e08:	movs	r0, #0
   29e0a:	mov	lr, r0
   29e0c:	b.n	29df6 <__btrfs_map_block@@Base+0x50e>
   29e0e:	nop
   29e10:	str	r3, [r3, #96]	; 0x60
   29e12:	movs	r1, r0
   29e14:	ldr	r4, [r6, #76]	; 0x4c
   29e16:	movs	r1, r0
   29e18:	str	r6, [r5, #104]	; 0x68
   29e1a:	movs	r1, r0
   29e1c:	ldr	r0, [r5, #64]	; 0x40
   29e1e:	movs	r1, r0
   29e20:	str	r5, [r0, #84]	; 0x54
   29e22:	movs	r1, r0
   29e24:	str	r1, [r7, #92]	; 0x5c
   29e26:	movs	r1, r0

00029e28 <btrfs_map_block@@Base>:
   29e28:	push	{r4, lr}
   29e2a:	sub	sp, #24
   29e2c:	ldr	r4, [sp, #44]	; 0x2c
   29e2e:	str	r4, [sp, #16]
   29e30:	ldr	r4, [sp, #40]	; 0x28
   29e32:	str	r4, [sp, #12]
   29e34:	ldr	r4, [sp, #36]	; 0x24
   29e36:	str	r4, [sp, #8]
   29e38:	movs	r4, #0
   29e3a:	str	r4, [sp, #4]
   29e3c:	ldr	r4, [sp, #32]
   29e3e:	str	r4, [sp, #0]
   29e40:	bl	298e8 <__btrfs_map_block@@Base>
   29e44:	add	sp, #24
   29e46:	pop	{r4, pc}

00029e48 <btrfs_find_device@@Base>:
   29e48:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   29e4c:	mov	r6, r0
   29e4e:	ldr	r5, [sp, #36]	; 0x24
   29e50:	mov	r7, r2
   29e52:	ldr.w	r4, [r0, #352]	; 0x160
   29e56:	mov	r8, r3
   29e58:	cbnz	r4, 29e62 <btrfs_find_device@@Base+0x1a>
   29e5a:	mov	r0, r4
   29e5c:	add	sp, #8
   29e5e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   29e62:	cbz	r5, 29e78 <btrfs_find_device@@Base+0x30>
   29e64:	movs	r2, #16
   29e66:	mov	r1, r5
   29e68:	adds	r0, r4, r2
   29e6a:	blx	8464 <memcmp@plt+0x4>
   29e6e:	cbz	r0, 29e78 <btrfs_find_device@@Base+0x30>
   29e70:	ldrb.w	r3, [r6, #364]	; 0x16c
   29e74:	lsls	r3, r3, #25
   29e76:	bpl.n	29e8a <btrfs_find_device@@Base+0x42>
   29e78:	ldr	r3, [sp, #32]
   29e7a:	mov	r2, r7
   29e7c:	mov	r0, r4
   29e7e:	str	r3, [sp, #0]
   29e80:	mov	r3, r8
   29e82:	bl	27d84 <btrfs_add_root_ref@@Base+0x15c>
   29e86:	cmp	r0, #0
   29e88:	bne.n	29e5c <btrfs_find_device@@Base+0x14>
   29e8a:	ldr	r4, [r4, #92]	; 0x5c
   29e8c:	b.n	29e58 <btrfs_find_device@@Base+0x10>

00029e8e <btrfs_find_device_by_devid@@Base>:
   29e8e:	push	{r4, r5, r6, r7, lr}
   29e90:	add.w	r1, r0, #72	; 0x48
   29e94:	mov	r6, r2
   29e96:	ldr	r0, [r0, #72]	; 0x48
   29e98:	ldr	r2, [sp, #20]
   29e9a:	mov	r7, r3
   29e9c:	movs	r3, #0
   29e9e:	cmp	r0, r1
   29ea0:	bne.n	29ea6 <btrfs_find_device_by_devid@@Base+0x18>
   29ea2:	movs	r0, #0
   29ea4:	pop	{r4, r5, r6, r7, pc}
   29ea6:	ldrd	r4, r5, [r0, #64]	; 0x40
   29eaa:	cmp	r5, r7
   29eac:	it	eq
   29eae:	cmpeq	r4, r6
   29eb0:	bne.n	29ebc <btrfs_find_device_by_devid@@Base+0x2e>
   29eb2:	cmp	r3, r2
   29eb4:	add.w	r4, r3, #1
   29eb8:	beq.n	29ea4 <btrfs_find_device_by_devid@@Base+0x16>
   29eba:	mov	r3, r4
   29ebc:	ldr	r0, [r0, #0]
   29ebe:	b.n	29e9e <btrfs_find_device_by_devid@@Base+0x10>

00029ec0 <btrfs_chunk_readonly@@Base>:
   29ec0:	push	{r4, lr}
   29ec2:	ldrb.w	r1, [r0, #364]	; 0x16c
   29ec6:	ands.w	r4, r1, #8
   29eca:	beq.n	29ed0 <btrfs_chunk_readonly@@Base+0x10>
   29ecc:	movs	r0, #0
   29ece:	pop	{r4, pc}
   29ed0:	adds	r0, #228	; 0xe4
   29ed2:	bl	15fdc <search_cache_extent@@Base>
   29ed6:	cbz	r0, 29eee <btrfs_chunk_readonly@@Base+0x2e>
   29ed8:	ldr	r2, [r0, #64]	; 0x40
   29eda:	adds	r0, #72	; 0x48
   29edc:	mov	r3, r4
   29ede:	cmp	r2, r3
   29ee0:	ble.n	29ecc <btrfs_chunk_readonly@@Base+0xc>
   29ee2:	lsls	r1, r3, #4
   29ee4:	ldr	r1, [r0, r1]
   29ee6:	ldr	r1, [r1, #28]
   29ee8:	cbz	r1, 29ef4 <btrfs_chunk_readonly@@Base+0x34>
   29eea:	adds	r3, #1
   29eec:	b.n	29ede <btrfs_chunk_readonly@@Base+0x1e>
   29eee:	mvn.w	r0, #1
   29ef2:	b.n	29ece <btrfs_chunk_readonly@@Base+0xe>
   29ef4:	movs	r0, #1
   29ef6:	b.n	29ece <btrfs_chunk_readonly@@Base+0xe>

00029ef8 <btrfs_check_chunk_valid@@Base>:
   29ef8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29efc:	sub	sp, #36	; 0x24
   29efe:	subs	r6, r3, #0
   29f00:	add.w	r8, r1, #96	; 0x60
   29f04:	ldr	r4, [sp, #72]	; 0x48
   29f06:	str	r4, [sp, #20]
   29f08:	ldr	r4, [sp, #76]	; 0x4c
   29f0a:	str	r4, [sp, #24]
   29f0c:	ldr.w	r4, [r0, #388]	; 0x184
   29f10:	str	r4, [sp, #16]
   29f12:	blt.n	29f3c <btrfs_check_chunk_valid@@Base+0x44>
   29f14:	movs	r3, #25
   29f16:	mla	r3, r3, r6, r8
   29f1a:	ldr.w	r1, [r3, #122]	; 0x7a
   29f1e:	cmp	r1, #79	; 0x4f
   29f20:	bhi.n	29f3c <btrfs_check_chunk_valid@@Base+0x44>
   29f22:	ldr.w	r3, [r0, #384]	; 0x180
   29f26:	movs	r2, #80	; 0x50
   29f28:	ldr	r0, [pc, #528]	; (2a13c <btrfs_check_chunk_valid@@Base+0x244>)
   29f2a:	subs	r3, #101	; 0x65
   29f2c:	add	r0, pc
   29f2e:	bl	1747c <__btrfs_error@@Base>
   29f32:	mvn.w	r0, #116	; 0x74
   29f36:	add	sp, #36	; 0x24
   29f38:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29f3c:	add.w	r7, r8, r2
   29f40:	ldr.w	sl, [r8, r2]
   29f44:	ldr	r3, [r7, #16]
   29f46:	ldrh	r5, [r7, #44]	; 0x2c
   29f48:	ldr.w	fp, [r7, #4]
   29f4c:	str	r3, [sp, #8]
   29f4e:	ldr	r3, [r7, #20]
   29f50:	ldrh.w	r9, [r7, #46]	; 0x2e
   29f54:	ldr	r4, [r7, #24]
   29f56:	str	r3, [sp, #12]
   29f58:	ldr	r3, [r7, #28]
   29f5a:	cbnz	r5, 29f68 <btrfs_check_chunk_valid@@Base+0x70>
   29f5c:	ldr	r0, [pc, #480]	; (2a140 <btrfs_check_chunk_valid@@Base+0x248>)
   29f5e:	mov	r1, r5
   29f60:	add	r0, pc
   29f62:	bl	1747c <__btrfs_error@@Base>
   29f66:	b.n	29f32 <btrfs_check_chunk_valid@@Base+0x3a>
   29f68:	cmp	r6, #0
   29f6a:	blt.n	29f90 <btrfs_check_chunk_valid@@Base+0x98>
   29f6c:	mov	r0, r5
   29f6e:	str	r3, [sp, #28]
   29f70:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   29f74:	movs	r2, #25
   29f76:	mla	r2, r2, r6, r8
   29f7a:	ldr	r3, [sp, #28]
   29f7c:	ldr.w	r1, [r2, #122]	; 0x7a
   29f80:	cmp	r0, r1
   29f82:	beq.n	29f90 <btrfs_check_chunk_valid@@Base+0x98>
   29f84:	mov	r2, r0
   29f86:	ldr	r0, [pc, #444]	; (2a144 <btrfs_check_chunk_valid@@Base+0x24c>)
   29f88:	add	r0, pc
   29f8a:	bl	1747c <__btrfs_error@@Base>
   29f8e:	b.n	29f32 <btrfs_check_chunk_valid@@Base+0x3a>
   29f90:	ldr.w	ip, [sp, #16]
   29f94:	mov.w	lr, #0
   29f98:	ldr	r2, [sp, #20]
   29f9a:	adds.w	ip, ip, #4294967295	; 0xffffffff
   29f9e:	and.w	r0, ip, r2
   29fa2:	ldr	r2, [sp, #24]
   29fa4:	adc.w	lr, lr, #4294967295	; 0xffffffff
   29fa8:	and.w	r1, lr, r2
   29fac:	orrs.w	r2, r0, r1
   29fb0:	beq.n	29fc4 <btrfs_check_chunk_valid@@Base+0xcc>
   29fb2:	ldr	r0, [pc, #404]	; (2a148 <btrfs_check_chunk_valid@@Base+0x250>)
   29fb4:	ldrd	r2, r3, [sp, #20]
   29fb8:	add	r0, pc
   29fba:	bl	1747c <__btrfs_error@@Base>
   29fbe:	mvn.w	r0, #4
   29fc2:	b.n	29f36 <btrfs_check_chunk_valid@@Base+0x3e>
   29fc4:	ldr	r2, [r7, #40]	; 0x28
   29fc6:	ldr	r1, [sp, #16]
   29fc8:	cmp	r1, r2
   29fca:	beq.n	29fd4 <btrfs_check_chunk_valid@@Base+0xdc>
   29fcc:	ldr	r0, [pc, #380]	; (2a14c <btrfs_check_chunk_valid@@Base+0x254>)
   29fce:	movs	r3, #0
   29fd0:	add	r0, pc
   29fd2:	b.n	29fba <btrfs_check_chunk_valid@@Base+0xc2>
   29fd4:	orrs.w	r2, sl, fp
   29fd8:	beq.n	29fe8 <btrfs_check_chunk_valid@@Base+0xf0>
   29fda:	and.w	r0, ip, sl
   29fde:	and.w	r1, lr, fp
   29fe2:	orrs.w	r2, r0, r1
   29fe6:	beq.n	29ff2 <btrfs_check_chunk_valid@@Base+0xfa>
   29fe8:	ldr	r0, [pc, #356]	; (2a150 <btrfs_check_chunk_valid@@Base+0x258>)
   29fea:	mov	r2, sl
   29fec:	mov	r3, fp
   29fee:	add	r0, pc
   29ff0:	b.n	29fba <btrfs_check_chunk_valid@@Base+0xc2>
   29ff2:	ldrd	r1, r2, [sp, #8]
   29ff6:	cmp	r2, #0
   29ff8:	it	eq
   29ffa:	cmpeq.w	r1, #65536	; 0x10000
   29ffe:	beq.n	2a00a <btrfs_check_chunk_valid@@Base+0x112>
   2a000:	ldr	r0, [pc, #336]	; (2a154 <btrfs_check_chunk_valid@@Base+0x25c>)
   2a002:	mov	r3, r2
   2a004:	mov	r2, r1
   2a006:	add	r0, pc
   2a008:	b.n	29fba <btrfs_check_chunk_valid@@Base+0xc2>
   2a00a:	adds	r1, r6, #1
   2a00c:	bne.n	2a022 <btrfs_check_chunk_valid@@Base+0x12a>
   2a00e:	and.w	r0, r4, #2
   2a012:	movs	r1, #0
   2a014:	orrs.w	r2, r0, r1
   2a018:	bne.n	2a022 <btrfs_check_chunk_valid@@Base+0x12a>
   2a01a:	ldr	r0, [pc, #316]	; (2a158 <btrfs_check_chunk_valid@@Base+0x260>)
   2a01c:	mov	r2, r4
   2a01e:	add	r0, pc
   2a020:	b.n	29fba <btrfs_check_chunk_valid@@Base+0xc2>
   2a022:	bic.w	r0, r4, #2040	; 0x7f8
   2a026:	mov	r1, r3
   2a028:	bic.w	r0, r0, #7
   2a02c:	orrs.w	r2, r0, r1
   2a030:	beq.n	2a03a <btrfs_check_chunk_valid@@Base+0x142>
   2a032:	mov	r2, r0
   2a034:	ldr	r0, [pc, #292]	; (2a15c <btrfs_check_chunk_valid@@Base+0x264>)
   2a036:	add	r0, pc
   2a038:	b.n	29fba <btrfs_check_chunk_valid@@Base+0xc2>
   2a03a:	and.w	r0, r4, #7
   2a03e:	movs	r1, #0
   2a040:	orrs.w	r2, r0, r1
   2a044:	bne.n	2a04e <btrfs_check_chunk_valid@@Base+0x156>
   2a046:	ldr	r0, [pc, #280]	; (2a160 <btrfs_check_chunk_valid@@Base+0x268>)
   2a048:	mov	r2, r4
   2a04a:	add	r0, pc
   2a04c:	b.n	29fba <btrfs_check_chunk_valid@@Base+0xc2>
   2a04e:	ands.w	r2, r4, #2040	; 0x7f8
   2a052:	beq.n	2a05a <btrfs_check_chunk_valid@@Base+0x162>
   2a054:	subs	r1, r2, #1
   2a056:	tst	r1, r2
   2a058:	beq.n	2a06e <btrfs_check_chunk_valid@@Base+0x176>
   2a05a:	and.w	r0, r4, #2040	; 0x7f8
   2a05e:	movs	r2, #0
   2a060:	mov	r1, r2
   2a062:	orrs	r1, r0
   2a064:	beq.n	2a070 <btrfs_check_chunk_valid@@Base+0x178>
   2a066:	ldr	r0, [pc, #252]	; (2a164 <btrfs_check_chunk_valid@@Base+0x26c>)
   2a068:	mov	r2, r4
   2a06a:	add	r0, pc
   2a06c:	b.n	29fba <btrfs_check_chunk_valid@@Base+0xc2>
   2a06e:	movs	r2, #1
   2a070:	and.w	sl, r4, #2040	; 0x7f8
   2a074:	mov.w	fp, #0
   2a078:	orrs.w	r1, sl, fp
   2a07c:	beq.n	2a088 <btrfs_check_chunk_valid@@Base+0x190>
   2a07e:	cbnz	r2, 2a088 <btrfs_check_chunk_valid@@Base+0x190>
   2a080:	ldr	r0, [pc, #228]	; (2a168 <btrfs_check_chunk_valid@@Base+0x270>)
   2a082:	mov	r2, r4
   2a084:	add	r0, pc
   2a086:	b.n	29fba <btrfs_check_chunk_valid@@Base+0xc2>
   2a088:	mov	r0, r5
   2a08a:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   2a08e:	adds	r2, r6, #1
   2a090:	bne.n	2a0a4 <btrfs_check_chunk_valid@@Base+0x1ac>
   2a092:	cmp.w	r0, #2048	; 0x800
   2a096:	bls.n	2a0b6 <btrfs_check_chunk_valid@@Base+0x1be>
   2a098:	ldr	r0, [pc, #208]	; (2a16c <btrfs_check_chunk_valid@@Base+0x274>)
   2a09a:	mov	r1, r5
   2a09c:	add	r0, pc
   2a09e:	bl	1747c <__btrfs_error@@Base>
   2a0a2:	b.n	29fbe <btrfs_check_chunk_valid@@Base+0xc6>
   2a0a4:	cmp	r6, #0
   2a0a6:	blt.n	2a0b6 <btrfs_check_chunk_valid@@Base+0x1be>
   2a0a8:	movs	r3, #25
   2a0aa:	mla	r6, r3, r6, r8
   2a0ae:	ldr.w	r3, [r6, #122]	; 0x7a
   2a0b2:	cmp	r0, r3
   2a0b4:	b.n	2a096 <btrfs_check_chunk_valid@@Base+0x19e>
   2a0b6:	and.w	r2, r4, #64	; 0x40
   2a0ba:	movs	r3, #0
   2a0bc:	orrs	r3, r2
   2a0be:	beq.n	2a0ca <btrfs_check_chunk_valid@@Base+0x1d2>
   2a0c0:	cmp.w	r9, #2
   2a0c4:	bne.n	2a126 <btrfs_check_chunk_valid@@Base+0x22e>
   2a0c6:	lsls	r3, r5, #31
   2a0c8:	bmi.n	2a126 <btrfs_check_chunk_valid@@Base+0x22e>
   2a0ca:	and.w	r0, r4, #512	; 0x200
   2a0ce:	movs	r3, #0
   2a0d0:	mov	r1, r3
   2a0d2:	orrs.w	r2, r0, r1
   2a0d6:	beq.n	2a0dc <btrfs_check_chunk_valid@@Base+0x1e4>
   2a0d8:	cmp	r5, #2
   2a0da:	bls.n	2a126 <btrfs_check_chunk_valid@@Base+0x22e>
   2a0dc:	and.w	r0, r4, #1024	; 0x400
   2a0e0:	mov	r1, r3
   2a0e2:	orrs.w	r3, r0, r1
   2a0e6:	beq.n	2a0ec <btrfs_check_chunk_valid@@Base+0x1f4>
   2a0e8:	cmp	r5, #3
   2a0ea:	bls.n	2a126 <btrfs_check_chunk_valid@@Base+0x22e>
   2a0ec:	and.w	r0, r4, #128	; 0x80
   2a0f0:	movs	r3, #0
   2a0f2:	mov	r1, r3
   2a0f4:	orrs.w	r2, r0, r1
   2a0f8:	beq.n	2a0fe <btrfs_check_chunk_valid@@Base+0x206>
   2a0fa:	cmp	r5, #1
   2a0fc:	bls.n	2a126 <btrfs_check_chunk_valid@@Base+0x22e>
   2a0fe:	and.w	r0, r4, #256	; 0x100
   2a102:	mov	r1, r3
   2a104:	orrs.w	r3, r0, r1
   2a108:	beq.n	2a10e <btrfs_check_chunk_valid@@Base+0x216>
   2a10a:	cmp	r5, #2
   2a10c:	bls.n	2a126 <btrfs_check_chunk_valid@@Base+0x22e>
   2a10e:	and.w	r2, r4, #32
   2a112:	movs	r3, #0
   2a114:	orrs	r3, r2
   2a116:	beq.n	2a11c <btrfs_check_chunk_valid@@Base+0x224>
   2a118:	cmp	r5, #2
   2a11a:	bhi.n	2a126 <btrfs_check_chunk_valid@@Base+0x22e>
   2a11c:	orrs.w	r3, sl, fp
   2a120:	bne.n	2a138 <btrfs_check_chunk_valid@@Base+0x240>
   2a122:	cmp	r5, #1
   2a124:	beq.n	2a138 <btrfs_check_chunk_valid@@Base+0x240>
   2a126:	ldr	r0, [pc, #72]	; (2a170 <btrfs_check_chunk_valid@@Base+0x278>)
   2a128:	mov	r2, r9
   2a12a:	mov	r1, r5
   2a12c:	strd	sl, fp, [sp]
   2a130:	add	r0, pc
   2a132:	bl	1747c <__btrfs_error@@Base>
   2a136:	b.n	29fbe <btrfs_check_chunk_valid@@Base+0xc6>
   2a138:	movs	r0, #0
   2a13a:	b.n	29f36 <btrfs_check_chunk_valid@@Base+0x3e>
   2a13c:	str	r4, [r4, #32]
   2a13e:	movs	r1, r0
   2a140:	str	r3, [r4, #32]
   2a142:	movs	r1, r0
   2a144:	str	r0, [r5, #32]
   2a146:	movs	r1, r0
   2a148:	str	r4, [r4, #32]
   2a14a:	movs	r1, r0
   2a14c:	str	r7, [r4, #32]
   2a14e:	movs	r1, r0
   2a150:	str	r7, [r4, #32]
   2a152:	movs	r1, r0
   2a154:	str	r1, [r5, #32]
   2a156:	movs	r1, r0
   2a158:	str	r3, [r6, #32]
   2a15a:	movs	r1, r0
   2a15c:	str	r3, [r6, #32]
   2a15e:	movs	r1, r0
   2a160:	str	r5, [r7, #32]
   2a162:	movs	r1, r0
   2a164:	str	r3, [r7, #32]
   2a166:	movs	r1, r0
   2a168:	str	r7, [r0, #36]	; 0x24
   2a16a:	movs	r1, r0
   2a16c:	str	r0, [r3, #36]	; 0x24
   2a16e:	movs	r1, r0
   2a170:	str	r4, [r3, #28]
   2a172:	movs	r1, r0
   2a174:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a178:	mov	r9, r2
   2a17a:	vpush	{d8}
   2a17e:	mov	r5, r3
   2a180:	ldr	r2, [pc, #444]	; (2a340 <btrfs_check_chunk_valid@@Base+0x448>)
   2a182:	ldr	r3, [pc, #448]	; (2a344 <btrfs_check_chunk_valid@@Base+0x44c>)
   2a184:	add	r2, pc
   2a186:	sub	sp, #68	; 0x44
   2a188:	str	r0, [sp, #20]
   2a18a:	ldr	r3, [r2, r3]
   2a18c:	mov	r2, r5
   2a18e:	ldr	r4, [sp, #112]	; 0x70
   2a190:	ldr	r3, [r3, #0]
   2a192:	str	r3, [sp, #60]	; 0x3c
   2a194:	mov.w	r3, #0
   2a198:	add.w	r3, r9, #96	; 0x60
   2a19c:	adds	r7, r3, r5
   2a19e:	ldr	r3, [r3, r5]
   2a1a0:	ldr.w	sl, [r1, #9]
   2a1a4:	ldr.w	fp, [r1, #13]
   2a1a8:	mov	r1, r9
   2a1aa:	str	r3, [sp, #32]
   2a1ac:	ldr	r3, [r7, #4]
   2a1ae:	ldrh.w	r8, [r7, #44]	; 0x2c
   2a1b2:	strd	sl, fp, [sp]
   2a1b6:	str	r3, [sp, #36]	; 0x24
   2a1b8:	mov	r3, r4
   2a1ba:	bl	29ef8 <btrfs_check_chunk_valid@@Base>
   2a1be:	mov	r6, r0
   2a1c0:	cbz	r0, 2a1f6 <btrfs_check_chunk_valid@@Base+0x2fe>
   2a1c2:	adds	r4, #1
   2a1c4:	bne.n	2a1ec <btrfs_check_chunk_valid@@Base+0x2f4>
   2a1c6:	ldr	r1, [pc, #384]	; (2a348 <btrfs_check_chunk_valid@@Base+0x450>)
   2a1c8:	ldr	r2, [pc, #384]	; (2a34c <btrfs_check_chunk_valid@@Base+0x454>)
   2a1ca:	add	r1, pc
   2a1cc:	add	r2, pc
   2a1ce:	ldr	r0, [pc, #384]	; (2a350 <btrfs_check_chunk_valid@@Base+0x458>)
   2a1d0:	add	r0, pc
   2a1d2:	bl	1747c <__btrfs_error@@Base>
   2a1d6:	ldr	r2, [pc, #380]	; (2a354 <btrfs_check_chunk_valid@@Base+0x45c>)
   2a1d8:	ldr	r3, [pc, #360]	; (2a344 <btrfs_check_chunk_valid@@Base+0x44c>)
   2a1da:	add	r2, pc
   2a1dc:	ldr	r3, [r2, r3]
   2a1de:	ldr	r2, [r3, #0]
   2a1e0:	ldr	r3, [sp, #60]	; 0x3c
   2a1e2:	eors	r2, r3
   2a1e4:	beq.w	2a332 <btrfs_check_chunk_valid@@Base+0x43a>
   2a1e8:	blx	84cc <__stack_chk_fail@plt>
   2a1ec:	ldr	r1, [pc, #360]	; (2a358 <btrfs_check_chunk_valid@@Base+0x460>)
   2a1ee:	ldr	r2, [pc, #364]	; (2a35c <btrfs_check_chunk_valid@@Base+0x464>)
   2a1f0:	add	r1, pc
   2a1f2:	add	r2, pc
   2a1f4:	b.n	2a1ce <btrfs_check_chunk_valid@@Base+0x2d6>
   2a1f6:	ldr	r3, [sp, #20]
   2a1f8:	mov	r2, sl
   2a1fa:	adds	r3, #228	; 0xe4
   2a1fc:	vmov	s16, r3
   2a200:	mov	r3, fp
   2a202:	vmov	r0, s16
   2a206:	bl	15fdc <search_cache_extent@@Base>
   2a20a:	cbz	r0, 2a230 <btrfs_check_chunk_valid@@Base+0x338>
   2a20c:	ldrd	r2, r3, [r0, #24]
   2a210:	cmp	fp, r3
   2a212:	it	eq
   2a214:	cmpeq	sl, r2
   2a216:	bcc.n	2a230 <btrfs_check_chunk_valid@@Base+0x338>
   2a218:	ldrd	r1, r0, [r0, #32]
   2a21c:	adds	r1, r2, r1
   2a21e:	str	r1, [sp, #24]
   2a220:	adcs	r3, r0
   2a222:	str	r3, [sp, #28]
   2a224:	ldrd	r3, r4, [sp, #24]
   2a228:	cmp	fp, r4
   2a22a:	it	eq
   2a22c:	cmpeq	sl, r3
   2a22e:	bcc.n	2a1d6 <btrfs_check_chunk_valid@@Base+0x2de>
   2a230:	mov.w	r3, r8, lsl #4
   2a234:	str	r3, [sp, #24]
   2a236:	add.w	r0, r3, #72	; 0x48
   2a23a:	blx	8634 <malloc@plt+0x4>
   2a23e:	mov	r4, r0
   2a240:	cmp	r0, #0
   2a242:	beq.n	2a32c <btrfs_check_chunk_valid@@Base+0x434>
   2a244:	ldr	r2, [r7, #36]	; 0x24
   2a246:	adds	r5, #48	; 0x30
   2a248:	ldr	r3, [sp, #32]
   2a24a:	mov	r6, r0
   2a24c:	ldr	r1, [r7, #24]
   2a24e:	str	r2, [r0, #52]	; 0x34
   2a250:	ldr	r2, [r7, #32]
   2a252:	str	r3, [r0, #32]
   2a254:	ldr	r3, [sp, #36]	; 0x24
   2a256:	str	r2, [r0, #48]	; 0x30
   2a258:	ldr	r2, [r7, #40]	; 0x28
   2a25a:	strd	sl, fp, [r0, #24]
   2a25e:	add.w	sl, sp, #44	; 0x2c
   2a262:	ldr.w	fp, [pc, #252]	; 2a360 <btrfs_check_chunk_valid@@Base+0x468>
   2a266:	str	r2, [r0, #60]	; 0x3c
   2a268:	ldr	r2, [r7, #16]
   2a26a:	add	fp, pc
   2a26c:	str	r3, [r0, #36]	; 0x24
   2a26e:	ldr	r3, [sp, #24]
   2a270:	str	r2, [r0, #56]	; 0x38
   2a272:	ldr	r2, [r7, #28]
   2a274:	add	r3, r0
   2a276:	str.w	r8, [r0, #64]	; 0x40
   2a27a:	str	r3, [sp, #24]
   2a27c:	add.w	r3, r9, #96	; 0x60
   2a280:	strd	r1, r2, [r0, #40]	; 0x28
   2a284:	ldrh	r2, [r7, #46]	; 0x2e
   2a286:	str	r3, [sp, #32]
   2a288:	str	r2, [r0, #68]	; 0x44
   2a28a:	ldr	r3, [sp, #24]
   2a28c:	cmp	r3, r6
   2a28e:	bne.n	2a2be <btrfs_check_chunk_valid@@Base+0x3c6>
   2a290:	vmov	r0, s16
   2a294:	mov	r1, r4
   2a296:	bl	15e9a <insert_cache_extent@@Base>
   2a29a:	subs	r6, r0, #0
   2a29c:	bge.n	2a1d6 <btrfs_check_chunk_valid@@Base+0x2de>
   2a29e:	blx	8740 <__errno_location@plt>
   2a2a2:	negs	r3, r6
   2a2a4:	str	r3, [r0, #0]
   2a2a6:	str	r6, [sp, #8]
   2a2a8:	ldrd	r2, r3, [r4, #32]
   2a2ac:	ldr	r0, [pc, #180]	; (2a364 <btrfs_check_chunk_valid@@Base+0x46c>)
   2a2ae:	strd	r2, r3, [sp]
   2a2b2:	add	r0, pc
   2a2b4:	ldrd	r2, r3, [r4, #24]
   2a2b8:	bl	1747c <__btrfs_error@@Base>
   2a2bc:	b.n	2a1d6 <btrfs_check_chunk_valid@@Base+0x2de>
   2a2be:	ldr	r3, [sp, #32]
   2a2c0:	mov	r0, r9
   2a2c2:	add	r3, r5
   2a2c4:	ldr	r1, [r3, #8]
   2a2c6:	ldr	r2, [r3, #12]
   2a2c8:	ldr.w	r8, [r3]
   2a2cc:	ldr	r7, [r3, #4]
   2a2ce:	movs	r3, #16
   2a2d0:	strd	r1, r2, [r6, #80]	; 0x50
   2a2d4:	adds	r2, r5, r3
   2a2d6:	mov	r1, sl
   2a2d8:	bl	1731a <read_extent_buffer@@Base>
   2a2dc:	movs	r3, #0
   2a2de:	ldr	r0, [sp, #20]
   2a2e0:	mov	r2, r8
   2a2e2:	strd	sl, r3, [sp]
   2a2e6:	mov	r3, r7
   2a2e8:	bl	29e48 <btrfs_find_device@@Base>
   2a2ec:	str	r0, [r6, #72]	; 0x48
   2a2ee:	cbnz	r0, 2a326 <btrfs_check_chunk_valid@@Base+0x42e>
   2a2f0:	movs	r1, #128	; 0x80
   2a2f2:	movs	r0, #1
   2a2f4:	blx	8358 <calloc@plt+0x4>
   2a2f8:	mov.w	r3, #4294967295	; 0xffffffff
   2a2fc:	mov	r2, r8
   2a2fe:	mov	r1, fp
   2a300:	str	r3, [r0, #24]
   2a302:	mov	r3, r7
   2a304:	strd	r8, r7, [r0, #64]	; 0x40
   2a308:	str	r0, [r6, #72]	; 0x48
   2a30a:	movs	r0, #1
   2a30c:	blx	87f4 <__printf_chk@plt+0x4>
   2a310:	ldr	r2, [sp, #20]
   2a312:	ldr	r3, [r6, #72]	; 0x48
   2a314:	ldr.w	r1, [r2, #352]	; 0x160
   2a318:	mov	r2, r1
   2a31a:	ldr.w	r0, [r2, #72]!
   2a31e:	str	r3, [r0, #4]
   2a320:	strd	r0, r2, [r3]
   2a324:	str	r3, [r1, #72]	; 0x48
   2a326:	adds	r6, #16
   2a328:	adds	r5, #32
   2a32a:	b.n	2a28a <btrfs_check_chunk_valid@@Base+0x392>
   2a32c:	mvn.w	r6, #11
   2a330:	b.n	2a1d6 <btrfs_check_chunk_valid@@Base+0x2de>
   2a332:	mov	r0, r6
   2a334:	add	sp, #68	; 0x44
   2a336:	vpop	{d8}
   2a33a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a33e:	nop
   2a340:	add	r4, sp, #16
   2a342:	movs	r3, r0
   2a344:	lsls	r4, r4, #8
   2a346:	movs	r0, r0
   2a348:	str	r1, [r7, #20]
   2a34a:	movs	r1, r0
   2a34c:	str	r2, [r0, #24]
   2a34e:	movs	r1, r0
   2a350:	str	r5, [r5, #24]
   2a352:	movs	r1, r0
   2a354:	add	r3, sp, #696	; 0x2b8
   2a356:	movs	r3, r0
   2a358:	ldr	r0, [sp, #676]	; 0x2a4
   2a35a:	movs	r2, r0
   2a35c:	lsls	r2, r5, #25
   2a35e:	movs	r1, r0
   2a360:	str	r7, [r0, #20]
   2a362:	movs	r1, r0
   2a364:	str	r0, [r4, #16]
   2a366:	movs	r1, r0

0002a368 <btrfs_read_sys_array@@Base>:
   2a368:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a36c:	mov	r8, r0
   2a36e:	vpush	{d8}
   2a372:	ldr	r2, [pc, #376]	; (2a4ec <btrfs_read_sys_array@@Base+0x184>)
   2a374:	ldr	r3, [pc, #376]	; (2a4f0 <btrfs_read_sys_array@@Base+0x188>)
   2a376:	add	r2, pc
   2a378:	ldr.w	r9, [pc, #376]	; 2a4f4 <btrfs_read_sys_array@@Base+0x18c>
   2a37c:	sub	sp, #44	; 0x2c
   2a37e:	ldr.w	r5, [r0, #308]	; 0x134
   2a382:	ldr	r3, [r2, r3]
   2a384:	add	r9, pc
   2a386:	ldr.w	r2, [r0, #384]	; 0x180
   2a38a:	ldr	r3, [r3, #0]
   2a38c:	str	r3, [sp, #36]	; 0x24
   2a38e:	mov.w	r3, #0
   2a392:	cmp.w	r2, #4096	; 0x1000
   2a396:	bcs.n	2a3bc <btrfs_read_sys_array@@Base+0x54>
   2a398:	ldr	r1, [pc, #348]	; (2a4f8 <btrfs_read_sys_array@@Base+0x190>)
   2a39a:	movs	r0, #1
   2a39c:	add	r1, pc
   2a39e:	blx	87f4 <__printf_chk@plt+0x4>
   2a3a2:	mvn.w	r3, #21
   2a3a6:	ldr	r1, [pc, #340]	; (2a4fc <btrfs_read_sys_array@@Base+0x194>)
   2a3a8:	ldr	r2, [pc, #324]	; (2a4f0 <btrfs_read_sys_array@@Base+0x188>)
   2a3aa:	add	r1, pc
   2a3ac:	ldr	r2, [r1, r2]
   2a3ae:	ldr	r1, [r2, #0]
   2a3b0:	ldr	r2, [sp, #36]	; 0x24
   2a3b2:	eors	r1, r2
   2a3b4:	beq.w	2a4e0 <btrfs_read_sys_array@@Base+0x178>
   2a3b8:	blx	84cc <__stack_chk_fail@plt>
   2a3bc:	mov.w	r3, #4096	; 0x1000
   2a3c0:	mov.w	r2, #65536	; 0x10000
   2a3c4:	str	r3, [sp, #0]
   2a3c6:	movs	r3, #0
   2a3c8:	bl	16e2c <alloc_dummy_extent_buffer@@Base>
   2a3cc:	mov	r6, r0
   2a3ce:	cmp	r0, #0
   2a3d0:	beq.w	2a4da <btrfs_read_sys_array@@Base+0x172>
   2a3d4:	bl	1d678 <btrfs_set_buffer_uptodate@@Base>
   2a3d8:	movw	r3, #3531	; 0xdcb
   2a3dc:	mov	r1, r5
   2a3de:	movs	r2, #0
   2a3e0:	mov	r0, r6
   2a3e2:	movs	r7, #0
   2a3e4:	bl	17330 <write_extent_buffer@@Base>
   2a3e8:	add	r3, sp, #16
   2a3ea:	ldr.w	sl, [r5, #160]	; 0xa0
   2a3ee:	addw	r5, r5, #811	; 0x32b
   2a3f2:	vmov	s16, r3
   2a3f6:	movw	fp, #811	; 0x32b
   2a3fa:	cmp	r7, sl
   2a3fc:	bcc.n	2a402 <btrfs_read_sys_array@@Base+0x9a>
   2a3fe:	movs	r3, #0
   2a400:	b.n	2a490 <btrfs_read_sys_array@@Base+0x128>
   2a402:	add.w	r2, r7, #17
   2a406:	cmp	r2, sl
   2a408:	bhi.n	2a4b4 <btrfs_read_sys_array@@Base+0x14c>
   2a40a:	ldr.w	r1, [r5, #9]
   2a40e:	add.w	fp, fp, #17
   2a412:	ldr.w	r3, [r5, #13]
   2a416:	str.w	r1, [sp, #25]
   2a41a:	str.w	r3, [sp, #29]
   2a41e:	ldrb	r3, [r5, #8]
   2a420:	cmp	r3, #228	; 0xe4
   2a422:	strb.w	r3, [sp, #24]
   2a426:	ldr	r0, [r5, #0]
   2a428:	ldr	r1, [r5, #4]
   2a42a:	strd	r0, r1, [sp, #16]
   2a42e:	bne.n	2a49c <btrfs_read_sys_array@@Base+0x134>
   2a430:	movs	r0, #1
   2a432:	str	r2, [sp, #12]
   2a434:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   2a438:	ldr	r2, [sp, #12]
   2a43a:	adds	r3, r2, r0
   2a43c:	mov	r4, r0
   2a43e:	cmp	r3, sl
   2a440:	bhi.n	2a4b8 <btrfs_read_sys_array@@Base+0x150>
   2a442:	add.w	r3, r6, fp
   2a446:	ldrh.w	r3, [r3, #140]	; 0x8c
   2a44a:	cbnz	r3, 2a466 <btrfs_read_sys_array@@Base+0xfe>
   2a44c:	ldr	r1, [pc, #176]	; (2a500 <btrfs_read_sys_array@@Base+0x198>)
   2a44e:	ldr.w	r0, [r9, r1]
   2a452:	str	r2, [sp, #0]
   2a454:	ldr	r2, [pc, #172]	; (2a504 <btrfs_read_sys_array@@Base+0x19c>)
   2a456:	add	r2, pc
   2a458:	ldr	r0, [r0, #0]
   2a45a:	movs	r1, #1
   2a45c:	blx	881c <__fprintf_chk@plt+0x4>
   2a460:	mvn.w	r3, #4
   2a464:	b.n	2a490 <btrfs_read_sys_array@@Base+0x128>
   2a466:	mov	r0, r3
   2a468:	str	r2, [sp, #12]
   2a46a:	bl	27e90 <btrfs_add_root_ref@@Base+0x268>
   2a46e:	ldr	r2, [sp, #12]
   2a470:	adds	r7, r2, r0
   2a472:	mov	r4, r0
   2a474:	cmp	r7, sl
   2a476:	bhi.n	2a4b8 <btrfs_read_sys_array@@Base+0x150>
   2a478:	mov.w	r3, #4294967295	; 0xffffffff
   2a47c:	vmov	r1, s16
   2a480:	str	r3, [sp, #0]
   2a482:	mov	r2, r6
   2a484:	mov	r3, fp
   2a486:	mov	r0, r8
   2a488:	bl	2a174 <btrfs_check_chunk_valid@@Base+0x27c>
   2a48c:	mov	r3, r0
   2a48e:	cbz	r0, 2a4aa <btrfs_read_sys_array@@Base+0x142>
   2a490:	mov	r0, r6
   2a492:	str	r3, [sp, #12]
   2a494:	bl	16c20 <free_extent_buffer@@Base>
   2a498:	ldr	r3, [sp, #12]
   2a49a:	b.n	2a3a6 <btrfs_read_sys_array@@Base+0x3e>
   2a49c:	ldr	r1, [pc, #96]	; (2a500 <btrfs_read_sys_array@@Base+0x198>)
   2a49e:	ldr.w	r0, [r9, r1]
   2a4a2:	str	r2, [sp, #0]
   2a4a4:	ldr	r2, [pc, #96]	; (2a508 <btrfs_read_sys_array@@Base+0x1a0>)
   2a4a6:	add	r2, pc
   2a4a8:	b.n	2a458 <btrfs_read_sys_array@@Base+0xf0>
   2a4aa:	add.w	r3, r4, #17
   2a4ae:	add	fp, r4
   2a4b0:	add	r5, r3
   2a4b2:	b.n	2a3fa <btrfs_read_sys_array@@Base+0x92>
   2a4b4:	mov	r2, r7
   2a4b6:	movs	r4, #17
   2a4b8:	ldr	r3, [pc, #68]	; (2a500 <btrfs_read_sys_array@@Base+0x198>)
   2a4ba:	movs	r1, #1
   2a4bc:	ldr.w	r0, [r9, r3]
   2a4c0:	mov	r3, r4
   2a4c2:	str	r2, [sp, #0]
   2a4c4:	ldr	r2, [pc, #68]	; (2a50c <btrfs_read_sys_array@@Base+0x1a4>)
   2a4c6:	ldr	r0, [r0, #0]
   2a4c8:	add	r2, pc
   2a4ca:	blx	881c <__fprintf_chk@plt+0x4>
   2a4ce:	mov	r0, r6
   2a4d0:	bl	16c20 <free_extent_buffer@@Base>
   2a4d4:	mvn.w	r3, #4
   2a4d8:	b.n	2a3a6 <btrfs_read_sys_array@@Base+0x3e>
   2a4da:	mvn.w	r3, #11
   2a4de:	b.n	2a3a6 <btrfs_read_sys_array@@Base+0x3e>
   2a4e0:	mov	r0, r3
   2a4e2:	add	sp, #44	; 0x2c
   2a4e4:	vpop	{d8}
   2a4e8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a4ec:	add	r2, sp, #72	; 0x48
   2a4ee:	movs	r3, r0
   2a4f0:	lsls	r4, r4, #8
   2a4f2:	movs	r0, r0
   2a4f4:	add	r2, sp, #16
   2a4f6:	movs	r3, r0
   2a4f8:	str	r3, [r5, #4]
   2a4fa:	movs	r1, r0
   2a4fc:	add	r1, sp, #888	; 0x378
   2a4fe:	movs	r3, r0
   2a500:	lsls	r4, r6, #8
   2a502:	movs	r0, r0
   2a504:	ldrsh	r2, [r4, r7]
   2a506:	movs	r1, r0
   2a508:	ldrsh	r1, [r2, r7]
   2a50a:	movs	r1, r0
   2a50c:	ldrsh	r1, [r5, r7]
   2a50e:	movs	r1, r0

0002a510 <btrfs_read_chunk_tree@@Base>:
   2a510:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a514:	mov	r7, r0
   2a516:	vpush	{d8-d9}
   2a51a:	ldr	r2, [pc, #600]	; (2a774 <btrfs_read_chunk_tree@@Base+0x264>)
   2a51c:	ldr	r3, [pc, #600]	; (2a778 <btrfs_read_chunk_tree@@Base+0x268>)
   2a51e:	add	r2, pc
   2a520:	sub	sp, #100	; 0x64
   2a522:	ldr	r3, [r2, r3]
   2a524:	ldr	r3, [r3, #0]
   2a526:	str	r3, [sp, #92]	; 0x5c
   2a528:	mov.w	r3, #0
   2a52c:	ldr	r3, [r0, #32]
   2a52e:	str	r3, [sp, #8]
   2a530:	bl	17e50 <btrfs_alloc_path@@Base>
   2a534:	mov	r6, r0
   2a536:	cmp	r0, #0
   2a538:	beq.w	2a762 <btrfs_read_chunk_tree@@Base+0x252>
   2a53c:	movs	r0, #0
   2a53e:	movs	r3, #1
   2a540:	ldr	r1, [sp, #8]
   2a542:	add	r2, sp, #20
   2a544:	strd	r3, r0, [sp, #20]
   2a548:	mov	r3, r6
   2a54a:	strd	r0, r0, [sp]
   2a54e:	strb.w	r0, [sp, #29]
   2a552:	strb.w	r0, [sp, #30]
   2a556:	strb.w	r0, [sp, #31]
   2a55a:	strb.w	r0, [sp, #32]
   2a55e:	strb.w	r0, [sp, #33]	; 0x21
   2a562:	strb.w	r0, [sp, #34]	; 0x22
   2a566:	strb.w	r0, [sp, #35]	; 0x23
   2a56a:	strb.w	r0, [sp, #36]	; 0x24
   2a56e:	strb.w	r0, [sp, #28]
   2a572:	bl	1a23c <btrfs_search_slot@@Base>
   2a576:	subs	r3, r0, #0
   2a578:	blt.n	2a5ac <btrfs_read_chunk_tree@@Base+0x9c>
   2a57a:	ldr.w	sl, [pc, #512]	; 2a77c <btrfs_read_chunk_tree@@Base+0x26c>
   2a57e:	add.w	fp, sp, #40	; 0x28
   2a582:	add	sl, pc
   2a584:	ldr.w	r9, [r6]
   2a588:	ldr	r4, [r6, #32]
   2a58a:	ldr.w	r3, [r9, #192]	; 0xc0
   2a58e:	cmp	r4, r3
   2a590:	bcc.n	2a5cc <btrfs_read_chunk_tree@@Base+0xbc>
   2a592:	movs	r3, #0
   2a594:	strb.w	r3, [r6, #65]	; 0x41
   2a598:	ldr	r3, [sp, #8]
   2a59a:	mov	r1, r6
   2a59c:	ldr.w	r0, [r3, #464]	; 0x1d0
   2a5a0:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   2a5a4:	cmp	r0, #0
   2a5a6:	beq.n	2a584 <btrfs_read_chunk_tree@@Base+0x74>
   2a5a8:	and.w	r3, r0, r0, asr #31
   2a5ac:	mov	r0, r6
   2a5ae:	str	r3, [sp, #8]
   2a5b0:	bl	17e7e <btrfs_free_path@@Base>
   2a5b4:	ldr	r3, [sp, #8]
   2a5b6:	ldr	r1, [pc, #456]	; (2a780 <btrfs_read_chunk_tree@@Base+0x270>)
   2a5b8:	ldr	r2, [pc, #444]	; (2a778 <btrfs_read_chunk_tree@@Base+0x268>)
   2a5ba:	add	r1, pc
   2a5bc:	ldr	r2, [r1, r2]
   2a5be:	ldr	r1, [r2, #0]
   2a5c0:	ldr	r2, [sp, #92]	; 0x5c
   2a5c2:	eors	r1, r2
   2a5c4:	beq.w	2a768 <btrfs_read_chunk_tree@@Base+0x258>
   2a5c8:	blx	84cc <__stack_chk_fail@plt>
   2a5cc:	mov	r2, r4
   2a5ce:	mov	r1, fp
   2a5d0:	mov	r0, r9
   2a5d2:	bl	27ec4 <btrfs_add_root_ref@@Base+0x29c>
   2a5d6:	ldrb.w	r3, [sp, #48]	; 0x30
   2a5da:	cmp	r3, #216	; 0xd8
   2a5dc:	bne.w	2a740 <btrfs_read_chunk_tree@@Base+0x230>
   2a5e0:	add.w	r3, r9, #96	; 0x60
   2a5e4:	movs	r2, #25
   2a5e6:	add.w	r8, sp, #60	; 0x3c
   2a5ea:	mov	r0, r9
   2a5ec:	mla	r4, r2, r4, r3
   2a5f0:	ldr.w	r4, [r4, #118]	; 0x76
   2a5f4:	add.w	r2, r4, #101	; 0x65
   2a5f8:	adds	r5, r3, r2
   2a5fa:	ldr	r3, [r3, r2]
   2a5fc:	vmov	s17, r3
   2a600:	ldr	r3, [r5, #4]
   2a602:	vmov	s18, r3
   2a606:	add.w	r3, r4, #167	; 0xa7
   2a60a:	vmov	s16, r3
   2a60e:	add	r3, sp, #76	; 0x4c
   2a610:	str	r3, [sp, #12]
   2a612:	movs	r3, #16
   2a614:	vmov	r2, s16
   2a618:	ldr	r1, [sp, #12]
   2a61a:	bl	1731a <read_extent_buffer@@Base>
   2a61e:	add.w	r2, r4, #183	; 0xb7
   2a622:	mov	r1, r8
   2a624:	mov	r0, r9
   2a626:	movs	r3, #16
   2a628:	bl	1731a <read_extent_buffer@@Base>
   2a62c:	ldr.w	r4, [r7, #352]	; 0x160
   2a630:	movs	r2, #16
   2a632:	mov	r0, r8
   2a634:	mov	r1, r4
   2a636:	blx	8464 <memcmp@plt+0x4>
   2a63a:	cbz	r0, 2a6a2 <btrfs_read_chunk_tree@@Base+0x192>
   2a63c:	ldr	r4, [r4, #92]	; 0x5c
   2a63e:	cbnz	r4, 2a65e <btrfs_read_chunk_tree@@Base+0x14e>
   2a640:	mov	r1, r4
   2a642:	mov	r0, r8
   2a644:	bl	27d50 <btrfs_add_root_ref@@Base+0x128>
   2a648:	mov	r4, r0
   2a64a:	cbnz	r0, 2a688 <btrfs_read_chunk_tree@@Base+0x178>
   2a64c:	movs	r1, #96	; 0x60
   2a64e:	movs	r0, #1
   2a650:	blx	8358 <calloc@plt+0x4>
   2a654:	mov	r4, r0
   2a656:	cbnz	r0, 2a666 <btrfs_read_chunk_tree@@Base+0x156>
   2a658:	mvn.w	r3, #11
   2a65c:	b.n	2a5ac <btrfs_read_chunk_tree@@Base+0x9c>
   2a65e:	movs	r2, #16
   2a660:	mov	r1, r8
   2a662:	mov	r0, r4
   2a664:	b.n	2a636 <btrfs_read_chunk_tree@@Base+0x126>
   2a666:	ldr.w	r2, [sl]
   2a66a:	add.w	r3, r0, #72	; 0x48
   2a66e:	strd	r3, r3, [r0, #72]	; 0x48
   2a672:	add.w	r3, r0, #80	; 0x50
   2a676:	str.w	r3, [sl]
   2a67a:	str	r3, [r2, #4]
   2a67c:	strd	r2, sl, [r0, #80]	; 0x50
   2a680:	ldmia.w	r8, {r0, r1, r2, r3}
   2a684:	stmia.w	r4, {r0, r1, r2, r3}
   2a688:	movs	r1, #0
   2a68a:	mov	r0, r4
   2a68c:	bl	2801c <btrfs_open_devices@@Base>
   2a690:	subs	r3, r0, #0
   2a692:	bne.n	2a75e <btrfs_read_chunk_tree@@Base+0x24e>
   2a694:	ldr.w	r3, [r7, #352]	; 0x160
   2a698:	ldr	r3, [r3, #92]	; 0x5c
   2a69a:	str	r3, [r4, #92]	; 0x5c
   2a69c:	ldr.w	r3, [r7, #352]	; 0x160
   2a6a0:	str	r4, [r3, #92]	; 0x5c
   2a6a2:	ldr	r3, [sp, #12]
   2a6a4:	mov	r0, r7
   2a6a6:	vmov	r2, s17
   2a6aa:	str.w	r8, [sp, #4]
   2a6ae:	str	r3, [sp, #0]
   2a6b0:	vmov	r3, s18
   2a6b4:	bl	29e48 <btrfs_find_device@@Base>
   2a6b8:	mov	r4, r0
   2a6ba:	cbnz	r0, 2a6e2 <btrfs_read_chunk_tree@@Base+0x1d2>
   2a6bc:	movs	r1, #128	; 0x80
   2a6be:	movs	r0, #1
   2a6c0:	blx	8358 <calloc@plt+0x4>
   2a6c4:	mov	r4, r0
   2a6c6:	cmp	r0, #0
   2a6c8:	beq.n	2a658 <btrfs_read_chunk_tree@@Base+0x148>
   2a6ca:	ldr.w	r2, [r7, #352]	; 0x160
   2a6ce:	mov.w	r3, #4294967295	; 0xffffffff
   2a6d2:	str	r3, [r0, #24]
   2a6d4:	mov	r3, r2
   2a6d6:	ldr.w	r1, [r3, #72]!
   2a6da:	str	r0, [r1, #4]
   2a6dc:	strd	r1, r3, [r0]
   2a6e0:	str	r0, [r2, #72]	; 0x48
   2a6e2:	ldr	r2, [r5, #0]
   2a6e4:	add.w	r1, r4, #112	; 0x70
   2a6e8:	ldr	r3, [r5, #4]
   2a6ea:	mov	r0, r9
   2a6ec:	strd	r2, r3, [r4, #64]	; 0x40
   2a6f0:	ldr	r2, [r5, #8]
   2a6f2:	ldr	r3, [r5, #12]
   2a6f4:	strd	r2, r3, [r4, #72]	; 0x48
   2a6f8:	ldr	r2, [r5, #16]
   2a6fa:	ldr	r3, [r5, #20]
   2a6fc:	strd	r2, r3, [r4, #80]	; 0x50
   2a700:	ldr	r2, [r5, #36]	; 0x24
   2a702:	ldr	r3, [r5, #40]	; 0x28
   2a704:	strd	r2, r3, [r4, #104]	; 0x68
   2a708:	ldr	r3, [r5, #24]
   2a70a:	vmov	r2, s16
   2a70e:	str	r3, [r4, #88]	; 0x58
   2a710:	ldr	r3, [r5, #28]
   2a712:	str	r3, [r4, #92]	; 0x5c
   2a714:	ldr	r3, [r5, #32]
   2a716:	str	r3, [r4, #96]	; 0x60
   2a718:	movs	r3, #16
   2a71a:	bl	1731a <read_extent_buffer@@Base>
   2a71e:	ldr	r3, [r7, #36]	; 0x24
   2a720:	str	r3, [r4, #8]
   2a722:	ldr.w	r2, [r7, #352]	; 0x160
   2a726:	ldr	r0, [r5, #8]
   2a728:	ldr	r4, [r5, #12]
   2a72a:	ldrd	r3, r1, [r2, #56]	; 0x38
   2a72e:	adds	r3, r3, r0
   2a730:	adc.w	r1, r4, r1
   2a734:	strd	r3, r1, [r2, #56]	; 0x38
   2a738:	ldr	r3, [r6, #32]
   2a73a:	adds	r3, #1
   2a73c:	str	r3, [r6, #32]
   2a73e:	b.n	2a584 <btrfs_read_chunk_tree@@Base+0x74>
   2a740:	cmp	r3, #228	; 0xe4
   2a742:	bne.n	2a738 <btrfs_read_chunk_tree@@Base+0x228>
   2a744:	movs	r3, #25
   2a746:	mov	r2, r9
   2a748:	mla	r3, r3, r4, r9
   2a74c:	mov	r1, fp
   2a74e:	mov	r0, r7
   2a750:	ldr.w	r3, [r3, #214]	; 0xd6
   2a754:	str	r4, [sp, #0]
   2a756:	adds	r3, #101	; 0x65
   2a758:	bl	2a174 <btrfs_check_chunk_valid@@Base+0x27c>
   2a75c:	subs	r3, r0, #0
   2a75e:	bge.n	2a738 <btrfs_read_chunk_tree@@Base+0x228>
   2a760:	b.n	2a5ac <btrfs_read_chunk_tree@@Base+0x9c>
   2a762:	mvn.w	r3, #11
   2a766:	b.n	2a5b6 <btrfs_read_chunk_tree@@Base+0xa6>
   2a768:	mov	r0, r3
   2a76a:	add	sp, #100	; 0x64
   2a76c:	vpop	{d8-d9}
   2a770:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a774:	add	r0, sp, #424	; 0x1a8
   2a776:	movs	r3, r0
   2a778:	lsls	r4, r4, #8
   2a77a:	movs	r0, r0
   2a77c:	pop	{r1, r2, r4, r5}
   2a77e:	movs	r3, r0
   2a780:	add	r7, pc, #824	; (adr r7, 2aabc <write_raid56_with_parity@@Base+0x32c>)
   2a782:	movs	r3, r0

0002a784 <btrfs_scanned_uuids@@Base>:
   2a784:	ldr	r0, [pc, #4]	; (2a78c <btrfs_scanned_uuids@@Base+0x8>)
   2a786:	add	r0, pc
   2a788:	bx	lr
   2a78a:	nop
   2a78c:	rev	r2, r6
   2a78e:	movs	r3, r0

0002a790 <write_raid56_with_parity@@Base>:
   2a790:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a794:	vpush	{d8}
   2a798:	vmov	s16, r0
   2a79c:	ldr	r3, [r1, #76]	; 0x4c
   2a79e:	sub	sp, #44	; 0x2c
   2a7a0:	str	r1, [sp, #4]
   2a7a2:	str	r3, [sp, #16]
   2a7a4:	ldr	r3, [r2, #4]
   2a7a6:	str	r2, [sp, #12]
   2a7a8:	lsls	r5, r3, #2
   2a7aa:	str	r3, [sp, #8]
   2a7ac:	mov	r0, r5
   2a7ae:	blx	8634 <malloc@plt+0x4>
   2a7b2:	mov	r4, r0
   2a7b4:	mov	r0, r5
   2a7b6:	blx	8634 <malloc@plt+0x4>
   2a7ba:	mov	sl, r0
   2a7bc:	cbz	r4, 2a7c0 <write_raid56_with_parity@@Base+0x30>
   2a7be:	cbnz	r0, 2a7dc <write_raid56_with_parity@@Base+0x4c>
   2a7c0:	mov	r0, r4
   2a7c2:	mvn.w	r9, #11
   2a7c6:	blx	83f0 <free@plt+0x4>
   2a7ca:	mov	r0, sl
   2a7cc:	blx	83f0 <free@plt+0x4>
   2a7d0:	mov	r0, r9
   2a7d2:	add	sp, #44	; 0x2c
   2a7d4:	vpop	{d8}
   2a7d8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a7dc:	ldr	r3, [sp, #16]
   2a7de:	asrs	r2, r3, #31
   2a7e0:	mov	r1, r3
   2a7e2:	mov	r3, r2
   2a7e4:	mov	r2, r1
   2a7e6:	ldrd	r0, r1, [sp, #88]	; 0x58
   2a7ea:	cmp	r3, r1
   2a7ec:	ldr	r3, [sp, #16]
   2a7ee:	it	eq
   2a7f0:	cmpeq	r2, r0
   2a7f2:	ldr	r2, [sp, #88]	; 0x58
   2a7f4:	ldr	r0, [sp, #8]
   2a7f6:	mov.w	r1, #4
   2a7fa:	it	cc
   2a7fc:	movcc	r3, r2
   2a7fe:	str	r3, [sp, #16]
   2a800:	ldr	r3, [sp, #4]
   2a802:	ldrd	r2, r3, [r3, #40]	; 0x28
   2a806:	strd	r2, r3, [sp, #24]
   2a80a:	blx	8358 <calloc@plt+0x4>
   2a80e:	mov	r8, r0
   2a810:	cmp	r0, #0
   2a812:	beq.w	2ab1a <write_raid56_with_parity@@Base+0x38a>
   2a816:	ldr	r3, [sp, #96]	; 0x60
   2a818:	movs	r5, #0
   2a81a:	ldr	r1, [sp, #88]	; 0x58
   2a81c:	mvn.w	r2, #2
   2a820:	subs	r3, #8
   2a822:	str	r3, [sp, #20]
   2a824:	add.w	r7, r1, #96	; 0x60
   2a828:	mov	r6, r3
   2a82a:	mov.w	r3, #4294967295	; 0xffffffff
   2a82e:	ldr	r1, [sp, #8]
   2a830:	cmp	r1, r5
   2a832:	bgt.n	2a83a <write_raid56_with_parity@@Base+0xaa>
   2a834:	mov.w	fp, #0
   2a838:	b.n	2a968 <write_raid56_with_parity@@Base+0x1d8>
   2a83a:	ldrd	r0, r1, [r6, #8]!
   2a83e:	cmp	r3, r1
   2a840:	it	eq
   2a842:	cmpeq	r2, r0
   2a844:	bcc.n	2a834 <write_raid56_with_parity@@Base+0xa4>
   2a846:	mov	r1, r7
   2a848:	movs	r0, #1
   2a84a:	blx	8358 <calloc@plt+0x4>
   2a84e:	str.w	r0, [r8, r5, lsl #2]
   2a852:	cmp	r0, #0
   2a854:	beq.w	2a9f2 <write_raid56_with_parity@@Base+0x262>
   2a858:	adds	r5, #1
   2a85a:	mvn.w	r2, #2
   2a85e:	mov.w	r3, #4294967295	; 0xffffffff
   2a862:	b.n	2a82e <write_raid56_with_parity@@Base+0x9e>
   2a864:	ldr	r3, [sp, #20]
   2a866:	mvn.w	r2, #2
   2a86a:	ldr.w	r5, [r8, fp, lsl #2]
   2a86e:	ldrd	r6, r7, [r3, #8]!
   2a872:	str	r3, [sp, #20]
   2a874:	mov.w	r3, #4294967295	; 0xffffffff
   2a878:	cmp	r3, r7
   2a87a:	it	eq
   2a87c:	cmpeq	r2, r6
   2a87e:	bcc.n	2a970 <write_raid56_with_parity@@Base+0x1e0>
   2a880:	ldr	r3, [sp, #88]	; 0x58
   2a882:	movs	r2, #1
   2a884:	strd	r6, r7, [r5, #40]	; 0x28
   2a888:	str	r3, [r5, #76]	; 0x4c
   2a88a:	movs	r3, #0
   2a88c:	strd	r2, r3, [r5, #80]	; 0x50
   2a890:	mov.w	r3, #4294967295	; 0xffffffff
   2a894:	mov.w	r2, #4294967295	; 0xffffffff
   2a898:	str	r3, [r5, #88]	; 0x58
   2a89a:	mov.w	r3, #4294967295	; 0xffffffff
   2a89e:	strd	r2, r3, [r5, #48]	; 0x30
   2a8a2:	ldrd	r2, r3, [sp, #24]
   2a8a6:	cmp	r7, r3
   2a8a8:	it	eq
   2a8aa:	cmpeq	r6, r2
   2a8ac:	bcc.n	2a8d6 <write_raid56_with_parity@@Base+0x146>
   2a8ae:	ldr	r3, [sp, #4]
   2a8b0:	ldr	r1, [r3, #76]	; 0x4c
   2a8b2:	ldrd	r2, r3, [sp, #24]
   2a8b6:	adds	r2, r2, r1
   2a8b8:	ldr	r1, [sp, #88]	; 0x58
   2a8ba:	adc.w	r3, r3, #0
   2a8be:	adds	r1, r1, r6
   2a8c0:	str	r1, [sp, #32]
   2a8c2:	ldr	r1, [sp, #92]	; 0x5c
   2a8c4:	adcs	r1, r7
   2a8c6:	str	r1, [sp, #36]	; 0x24
   2a8c8:	ldrd	r0, r1, [sp, #32]
   2a8cc:	cmp	r3, r1
   2a8ce:	it	eq
   2a8d0:	cmpeq	r2, r0
   2a8d2:	bcs.w	2a9de <write_raid56_with_parity@@Base+0x24e>
   2a8d6:	vmov	r0, s16
   2a8da:	movs	r2, #0
   2a8dc:	mov	r1, r5
   2a8de:	bl	1c240 <read_whole_eb@@Base>
   2a8e2:	mov	r9, r0
   2a8e4:	cmp	r0, #0
   2a8e6:	bne.w	2a9f6 <write_raid56_with_parity@@Base+0x266>
   2a8ea:	ldr	r3, [sp, #4]
   2a8ec:	ldrd	r0, r1, [r5, #40]	; 0x28
   2a8f0:	ldr.w	ip, [r5, #76]	; 0x4c
   2a8f4:	ldrd	r6, r7, [r3, #40]	; 0x28
   2a8f8:	adds.w	r2, r0, ip
   2a8fc:	adc.w	r3, r1, #0
   2a900:	cmp	r7, r3
   2a902:	it	eq
   2a904:	cmpeq	r6, r2
   2a906:	bcs.n	2a960 <write_raid56_with_parity@@Base+0x1d0>
   2a908:	ldr	r3, [sp, #4]
   2a90a:	ldr.w	lr, [r3, #76]	; 0x4c
   2a90e:	adds.w	r2, r6, lr
   2a912:	adc.w	r3, r7, #0
   2a916:	cmp	r1, r3
   2a918:	it	eq
   2a91a:	cmpeq	r0, r2
   2a91c:	bcs.n	2a960 <write_raid56_with_parity@@Base+0x1d0>
   2a91e:	cmp	r7, r1
   2a920:	ldr	r3, [sp, #88]	; 0x58
   2a922:	it	eq
   2a924:	cmpeq	r6, r0
   2a926:	it	cc
   2a928:	subcc.w	r9, r0, r6
   2a92c:	cmp	r1, r7
   2a92e:	it	eq
   2a930:	cmpeq	r0, r6
   2a932:	sub.w	lr, lr, r9
   2a936:	it	cc
   2a938:	subcc	r6, r6, r0
   2a93a:	add.w	r0, r5, #96	; 0x60
   2a93e:	it	cs
   2a940:	movcs	r6, #0
   2a942:	cmp	lr, r3
   2a944:	sub.w	r2, ip, r6
   2a948:	add	r0, r6
   2a94a:	it	cs
   2a94c:	movcs	lr, r3
   2a94e:	ldr	r3, [sp, #4]
   2a950:	cmp	r2, lr
   2a952:	add.w	r1, r3, #96	; 0x60
   2a956:	add	r1, r9
   2a958:	it	cs
   2a95a:	movcs	r2, lr
   2a95c:	blx	843c <memcpy@plt+0x4>
   2a960:	str.w	r5, [r4, fp, lsl #2]
   2a964:	add.w	fp, fp, #1
   2a968:	ldr	r3, [sp, #8]
   2a96a:	cmp	r3, fp
   2a96c:	bgt.w	2a864 <write_raid56_with_parity@@Base+0xd4>
   2a970:	mov	r0, r8
   2a972:	movs	r6, #0
   2a974:	blx	83f0 <free@plt+0x4>
   2a978:	ldr	r3, [sp, #16]
   2a97a:	ldr	r7, [sp, #12]
   2a97c:	mov	r5, r6
   2a97e:	ldr.w	r8, [sp, #96]	; 0x60
   2a982:	add.w	r9, r3, #96	; 0x60
   2a986:	str	r6, [sp, #8]
   2a988:	ldr	r3, [sp, #12]
   2a98a:	ldr	r0, [r3, #4]
   2a98c:	cmp	r0, r6
   2a98e:	bgt.n	2aa1e <write_raid56_with_parity@@Base+0x28e>
   2a990:	add.w	r3, r0, #1073741824	; 0x40000000
   2a994:	subs	r3, #1
   2a996:	add.w	r2, r4, r3, lsl #2
   2a99a:	cmp	r5, #0
   2a99c:	beq.w	2aac8 <write_raid56_with_parity@@Base+0x338>
   2a9a0:	ldr	r1, [sp, #8]
   2a9a2:	str.w	r1, [r2, #-4]
   2a9a6:	str.w	r5, [r4, r3, lsl #2]
   2a9aa:	movs	r3, #0
   2a9ac:	cmp	r0, r3
   2a9ae:	bgt.w	2aaba <write_raid56_with_parity@@Base+0x32a>
   2a9b2:	ldr	r1, [sp, #88]	; 0x58
   2a9b4:	mov	r2, sl
   2a9b6:	bl	2eafc <raid6_gen_syndrome@@Base>
   2a9ba:	mov.w	r9, #0
   2a9be:	movs	r5, #0
   2a9c0:	ldr	r3, [sp, #12]
   2a9c2:	ldr	r3, [r3, #4]
   2a9c4:	cmp	r3, r5
   2a9c6:	ble.w	2aae4 <write_raid56_with_parity@@Base+0x354>
   2a9ca:	ldr.w	r0, [r4, r5, lsl #2]
   2a9ce:	bl	16e7e <write_extent_to_disk@@Base>
   2a9d2:	subs.w	r9, r0, #0
   2a9d6:	blt.w	2aae4 <write_raid56_with_parity@@Base+0x354>
   2a9da:	adds	r5, #1
   2a9dc:	b.n	2a9c0 <write_raid56_with_parity@@Base+0x230>
   2a9de:	ldr	r3, [sp, #4]
   2a9e0:	add.w	r0, r5, #96	; 0x60
   2a9e4:	ldr	r2, [sp, #88]	; 0x58
   2a9e6:	add.w	r1, r3, #96	; 0x60
   2a9ea:	ldr	r3, [sp, #24]
   2a9ec:	subs	r6, r6, r3
   2a9ee:	add	r1, r6
   2a9f0:	b.n	2a95c <write_raid56_with_parity@@Base+0x1cc>
   2a9f2:	mvn.w	r9, #11
   2a9f6:	movs	r5, #0
   2a9f8:	ldr	r3, [sp, #8]
   2a9fa:	cmp	r3, r5
   2a9fc:	bgt.n	2aa12 <write_raid56_with_parity@@Base+0x282>
   2a9fe:	mov	r0, r8
   2aa00:	blx	83f0 <free@plt+0x4>
   2aa04:	mov	r0, r4
   2aa06:	blx	83f0 <free@plt+0x4>
   2aa0a:	mov	r0, sl
   2aa0c:	blx	83f0 <free@plt+0x4>
   2aa10:	b.n	2a7d0 <write_raid56_with_parity@@Base+0x40>
   2aa12:	ldr.w	r0, [r8, r5, lsl #2]
   2aa16:	adds	r5, #1
   2aa18:	blx	83f0 <free@plt+0x4>
   2aa1c:	b.n	2a9f8 <write_raid56_with_parity@@Base+0x268>
   2aa1e:	ldrd	r2, r3, [r8]
   2aa22:	mov.w	r1, #4294967295	; 0xffffffff
   2aa26:	mvn.w	r0, #2
   2aa2a:	cmp	r1, r3
   2aa2c:	it	eq
   2aa2e:	cmpeq	r0, r2
   2aa30:	bcc.n	2aa6c <write_raid56_with_parity@@Base+0x2dc>
   2aa32:	ldrd	r2, r3, [r7, #16]
   2aa36:	ldr	r1, [r7, #8]
   2aa38:	ldr.w	r0, [r4, r6, lsl #2]
   2aa3c:	strd	r2, r3, [r0, #48]	; 0x30
   2aa40:	ldr	r3, [r1, #24]
   2aa42:	str	r3, [r0, #88]	; 0x58
   2aa44:	ldrd	r3, r2, [r1, #16]
   2aa48:	adds	r3, #1
   2aa4a:	adc.w	r2, r2, #0
   2aa4e:	strd	r3, r2, [r1, #16]
   2aa52:	ldrd	r0, r1, [r0, #40]	; 0x28
   2aa56:	ldrd	r2, r3, [r8]
   2aa5a:	cmp	r1, r3
   2aa5c:	it	eq
   2aa5e:	cmpeq	r0, r2
   2aa60:	bne.n	2ab0e <write_raid56_with_parity@@Base+0x37e>
   2aa62:	adds	r6, #1
   2aa64:	adds	r7, #16
   2aa66:	add.w	r8, r8, #8
   2aa6a:	b.n	2a988 <write_raid56_with_parity@@Base+0x1f8>
   2aa6c:	mov	r0, r9
   2aa6e:	blx	8634 <malloc@plt+0x4>
   2aa72:	cmp	r0, #0
   2aa74:	beq.n	2ab14 <write_raid56_with_parity@@Base+0x384>
   2aa76:	ldrd	r2, r3, [r7, #16]
   2aa7a:	mov.w	ip, #4294967295	; 0xffffffff
   2aa7e:	ldr	r1, [r7, #8]
   2aa80:	mvn.w	fp, #1
   2aa84:	strd	r2, r3, [r0, #48]	; 0x30
   2aa88:	ldr	r3, [r1, #24]
   2aa8a:	str	r3, [r0, #88]	; 0x58
   2aa8c:	ldrd	r3, r2, [r1, #16]
   2aa90:	adds	r3, #1
   2aa92:	adc.w	r2, r2, #0
   2aa96:	strd	r3, r2, [r1, #16]
   2aa9a:	ldr	r3, [sp, #88]	; 0x58
   2aa9c:	str	r3, [r0, #76]	; 0x4c
   2aa9e:	ldrd	r2, r3, [r8]
   2aaa2:	cmp	r3, ip
   2aaa4:	it	eq
   2aaa6:	cmpeq	r2, fp
   2aaa8:	beq.n	2aab6 <write_raid56_with_parity@@Base+0x326>
   2aaaa:	adds	r3, #1
   2aaac:	itt	eq
   2aaae:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2aab2:	moveq	r5, r0
   2aab4:	b.n	2aa62 <write_raid56_with_parity@@Base+0x2d2>
   2aab6:	str	r0, [sp, #8]
   2aab8:	b.n	2aa62 <write_raid56_with_parity@@Base+0x2d2>
   2aaba:	ldr.w	r2, [r4, r3, lsl #2]
   2aabe:	adds	r2, #96	; 0x60
   2aac0:	str.w	r2, [sl, r3, lsl #2]
   2aac4:	adds	r3, #1
   2aac6:	b.n	2a9ac <write_raid56_with_parity@@Base+0x21c>
   2aac8:	ldr	r2, [sp, #8]
   2aaca:	str.w	r2, [r4, r3, lsl #2]
   2aace:	cmp	r0, r5
   2aad0:	bgt.n	2ab00 <write_raid56_with_parity@@Base+0x370>
   2aad2:	ldr	r1, [sp, #88]	; 0x58
   2aad4:	subs	r2, r0, #1
   2aad6:	mov	r3, sl
   2aad8:	bl	2eb68 <raid5_gen_result@@Base>
   2aadc:	subs.w	r9, r0, #0
   2aae0:	bge.w	2a9be <write_raid56_with_parity@@Base+0x22e>
   2aae4:	movs	r5, #0
   2aae6:	ldr	r3, [sp, #12]
   2aae8:	ldr	r3, [r3, #4]
   2aaea:	cmp	r3, r5
   2aaec:	ble.n	2aa04 <write_raid56_with_parity@@Base+0x274>
   2aaee:	ldr.w	r0, [r4, r5, lsl #2]
   2aaf2:	ldr	r3, [sp, #4]
   2aaf4:	cmp	r0, r3
   2aaf6:	beq.n	2aafc <write_raid56_with_parity@@Base+0x36c>
   2aaf8:	blx	83f0 <free@plt+0x4>
   2aafc:	adds	r5, #1
   2aafe:	b.n	2aae6 <write_raid56_with_parity@@Base+0x356>
   2ab00:	ldr.w	r3, [r4, r5, lsl #2]
   2ab04:	adds	r3, #96	; 0x60
   2ab06:	str.w	r3, [sl, r5, lsl #2]
   2ab0a:	adds	r5, #1
   2ab0c:	b.n	2aace <write_raid56_with_parity@@Base+0x33e>
   2ab0e:	mvn.w	r9, #21
   2ab12:	b.n	2aae4 <write_raid56_with_parity@@Base+0x354>
   2ab14:	mvn.w	r9, #11
   2ab18:	b.n	2aae4 <write_raid56_with_parity@@Base+0x354>
   2ab1a:	mvn.w	r9, #11
   2ab1e:	b.n	2aa04 <write_raid56_with_parity@@Base+0x274>

0002ab20 <btrfs_stripe_length@@Base>:
   2ab20:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2ab24:	adds	r1, #96	; 0x60
   2ab26:	add	r1, r2
   2ab28:	movs	r3, #0
   2ab2a:	cmp	r3, #0
   2ab2c:	mov	r7, r3
   2ab2e:	ldr	r4, [r1, #24]
   2ab30:	ldrh	r2, [r1, #44]	; 0x2c
   2ab32:	and.w	r6, r4, #2040	; 0x7f8
   2ab36:	ldr	r5, [r1, #0]
   2ab38:	it	eq
   2ab3a:	cmpeq	r6, #64	; 0x40
   2ab3c:	ldr	r4, [r1, #4]
   2ab3e:	uxth	r0, r2
   2ab40:	beq.n	2abe4 <btrfs_stripe_length@@Base+0xc4>
   2ab42:	cmp	r3, #0
   2ab44:	it	eq
   2ab46:	cmpeq	r6, #65	; 0x41
   2ab48:	bcs.n	2ab94 <btrfs_stripe_length@@Base+0x74>
   2ab4a:	cmp	r3, #0
   2ab4c:	it	eq
   2ab4e:	cmpeq	r6, #8
   2ab50:	beq.n	2abda <btrfs_stripe_length@@Base+0xba>
   2ab52:	cmp	r3, #0
   2ab54:	it	eq
   2ab56:	cmpeq	r6, #9
   2ab58:	bcs.n	2ab7a <btrfs_stripe_length@@Base+0x5a>
   2ab5a:	orrs.w	r3, r6, r7
   2ab5e:	beq.n	2ab8a <btrfs_stripe_length@@Base+0x6a>
   2ab60:	ldr	r2, [pc, #140]	; (2abf0 <btrfs_stripe_length@@Base+0xd0>)
   2ab62:	movs	r3, #1
   2ab64:	ldr	r1, [pc, #140]	; (2abf4 <btrfs_stripe_length@@Base+0xd4>)
   2ab66:	ldr	r0, [pc, #144]	; (2abf8 <btrfs_stripe_length@@Base+0xd8>)
   2ab68:	add	r2, pc
   2ab6a:	str	r3, [sp, #0]
   2ab6c:	adds	r2, #130	; 0x82
   2ab6e:	add	r1, pc
   2ab70:	add	r0, pc
   2ab72:	movw	r3, #2545	; 0x9f1
   2ab76:	bl	27e1c <btrfs_add_root_ref@@Base+0x1f4>
   2ab7a:	cmp	r3, #0
   2ab7c:	it	eq
   2ab7e:	cmpeq	r6, #16
   2ab80:	beq.n	2ab8a <btrfs_stripe_length@@Base+0x6a>
   2ab82:	cmp	r3, #0
   2ab84:	it	eq
   2ab86:	cmpeq	r6, #32
   2ab88:	bne.n	2ab60 <btrfs_stripe_length@@Base+0x40>
   2ab8a:	mov	r0, r5
   2ab8c:	mov	r1, r4
   2ab8e:	add	sp, #12
   2ab90:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2ab94:	cmp	r3, #0
   2ab96:	it	eq
   2ab98:	cmpeq.w	r6, #256	; 0x100
   2ab9c:	beq.n	2abe0 <btrfs_stripe_length@@Base+0xc0>
   2ab9e:	mov.w	r9, #0
   2aba2:	cmp	r9, r3
   2aba4:	mov.w	r8, #256	; 0x100
   2aba8:	it	eq
   2abaa:	cmpeq	r8, r6
   2abac:	bcc.n	2abc6 <btrfs_stripe_length@@Base+0xa6>
   2abae:	cmp	r3, #0
   2abb0:	it	eq
   2abb2:	cmpeq	r6, #128	; 0x80
   2abb4:	bne.n	2ab60 <btrfs_stripe_length@@Base+0x40>
   2abb6:	subs	r2, r0, #1
   2abb8:	mov	r0, r5
   2abba:	mov	r1, r4
   2abbc:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2abc0:	mov	r5, r0
   2abc2:	mov	r4, r1
   2abc4:	b.n	2ab8a <btrfs_stripe_length@@Base+0x6a>
   2abc6:	cmp	r3, #0
   2abc8:	it	eq
   2abca:	cmpeq.w	r6, #512	; 0x200
   2abce:	beq.n	2ab8a <btrfs_stripe_length@@Base+0x6a>
   2abd0:	cmp	r3, #0
   2abd2:	it	eq
   2abd4:	cmpeq.w	r6, #1024	; 0x400
   2abd8:	b.n	2ab88 <btrfs_stripe_length@@Base+0x68>
   2abda:	uxth	r2, r2
   2abdc:	movs	r3, #0
   2abde:	b.n	2abb8 <btrfs_stripe_length@@Base+0x98>
   2abe0:	subs	r2, r0, #2
   2abe2:	b.n	2abb8 <btrfs_stripe_length@@Base+0x98>
   2abe4:	ldrh	r1, [r1, #46]	; 0x2e
   2abe6:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   2abea:	mov	r2, r0
   2abec:	b.n	2abdc <btrfs_stripe_length@@Base+0xbc>
   2abee:	nop
   2abf0:	ldrh	r4, [r5, r7]
   2abf2:	movs	r1, r0
   2abf4:	strb	r3, [r1, r4]
   2abf6:	movs	r1, r0
   2abf8:	adds	r2, #123	; 0x7b
   2abfa:	movs	r1, r0

0002abfc <btrfs_fix_device_size@@Base>:
   2abfc:	ldr	r2, [pc, #344]	; (2ad58 <btrfs_fix_device_size@@Base+0x15c>)
   2abfe:	ldr	r3, [pc, #348]	; (2ad5c <btrfs_fix_device_size@@Base+0x160>)
   2ac00:	add	r2, pc
   2ac02:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ac06:	sub	sp, #116	; 0x74
   2ac08:	ldr	r3, [r2, r3]
   2ac0a:	mov	r5, r1
   2ac0c:	ldrd	sl, fp, [r1, #72]	; 0x48
   2ac10:	movs	r1, #0
   2ac12:	ldr	r3, [r3, #0]
   2ac14:	str	r3, [sp, #108]	; 0x6c
   2ac16:	mov.w	r3, #0
   2ac1a:	ldr.w	r3, [r0, #388]	; 0x184
   2ac1e:	movs	r4, #0
   2ac20:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2ac24:	adc.w	r1, r1, #4294967295	; 0xffffffff
   2ac28:	and.w	r6, r2, sl
   2ac2c:	and.w	r7, r1, fp
   2ac30:	orrs.w	r2, r6, r7
   2ac34:	beq.n	2ac80 <btrfs_fix_device_size@@Base+0x84>
   2ac36:	negs	r3, r3
   2ac38:	ldr.w	r9, [r0, #32]
   2ac3c:	and.w	r3, r3, sl
   2ac40:	str	r3, [r5, #72]	; 0x48
   2ac42:	movs	r3, #216	; 0xd8
   2ac44:	strb.w	r3, [sp, #28]
   2ac48:	ldr	r3, [r5, #64]	; 0x40
   2ac4a:	mov.w	r8, #1
   2ac4e:	mov	r1, r8
   2ac50:	mov	r0, r9
   2ac52:	strd	r8, r4, [sp, #20]
   2ac56:	str.w	r3, [sp, #29]
   2ac5a:	ldr	r3, [r5, #68]	; 0x44
   2ac5c:	str.w	r3, [sp, #33]	; 0x21
   2ac60:	bl	2af7c <btrfs_start_transaction@@Base>
   2ac64:	cmn.w	r0, #4096	; 0x1000
   2ac68:	mov	r6, r0
   2ac6a:	bls.n	2ac94 <btrfs_fix_device_size@@Base+0x98>
   2ac6c:	mov	r4, r0
   2ac6e:	blx	8740 <__errno_location@plt>
   2ac72:	negs	r3, r6
   2ac74:	mov	r1, r6
   2ac76:	str	r3, [r0, #0]
   2ac78:	ldr	r0, [pc, #228]	; (2ad60 <btrfs_fix_device_size@@Base+0x164>)
   2ac7a:	add	r0, pc
   2ac7c:	bl	1747c <__btrfs_error@@Base>
   2ac80:	ldr	r2, [pc, #224]	; (2ad64 <btrfs_fix_device_size@@Base+0x168>)
   2ac82:	ldr	r3, [pc, #216]	; (2ad5c <btrfs_fix_device_size@@Base+0x160>)
   2ac84:	add	r2, pc
   2ac86:	ldr	r3, [r2, r3]
   2ac88:	ldr	r2, [r3, #0]
   2ac8a:	ldr	r3, [sp, #108]	; 0x6c
   2ac8c:	eors	r2, r3
   2ac8e:	beq.n	2ad50 <btrfs_fix_device_size@@Base+0x154>
   2ac90:	blx	84cc <__stack_chk_fail@plt>
   2ac94:	add	r7, sp, #40	; 0x28
   2ac96:	mov	r0, r7
   2ac98:	bl	17e48 <btrfs_init_path@@Base>
   2ac9c:	strd	r4, r8, [sp]
   2aca0:	add	r2, sp, #20
   2aca2:	mov	r3, r7
   2aca4:	mov	r1, r9
   2aca6:	mov	r0, r6
   2aca8:	bl	1a23c <btrfs_search_slot@@Base>
   2acac:	subs	r4, r0, #0
   2acae:	ble.n	2acca <btrfs_fix_device_size@@Base+0xce>
   2acb0:	ldr	r0, [pc, #180]	; (2ad68 <btrfs_fix_device_size@@Base+0x16c>)
   2acb2:	mvn.w	r4, #1
   2acb6:	ldrd	r2, r3, [r5, #64]	; 0x40
   2acba:	add	r0, pc
   2acbc:	bl	1747c <__btrfs_error@@Base>
   2acc0:	mov	r1, r9
   2acc2:	mov	r0, r6
   2acc4:	bl	2b1fc <btrfs_commit_transaction@@Base>
   2acc8:	b.n	2ad24 <btrfs_fix_device_size@@Base+0x128>
   2acca:	beq.n	2ace0 <btrfs_fix_device_size@@Base+0xe4>
   2accc:	blx	8740 <__errno_location@plt>
   2acd0:	negs	r3, r4
   2acd2:	mov	r1, r4
   2acd4:	str	r3, [r0, #0]
   2acd6:	ldr	r0, [pc, #148]	; (2ad6c <btrfs_fix_device_size@@Base+0x170>)
   2acd8:	add	r0, pc
   2acda:	bl	1747c <__btrfs_error@@Base>
   2acde:	b.n	2acc0 <btrfs_fix_device_size@@Base+0xc4>
   2ace0:	ldr	r0, [sp, #40]	; 0x28
   2ace2:	mov.w	ip, #25
   2ace6:	ldr	r2, [sp, #72]	; 0x48
   2ace8:	add.w	r3, r0, #96	; 0x60
   2acec:	ldrd	r1, r4, [r5, #72]	; 0x48
   2acf0:	mla	r2, ip, r2, r3
   2acf4:	ldr.w	r2, [r2, #118]	; 0x76
   2acf8:	add	r3, r2
   2acfa:	str.w	r1, [r3, #109]	; 0x6d
   2acfe:	str.w	r4, [r3, #113]	; 0x71
   2ad02:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2ad06:	mov	r1, r9
   2ad08:	mov	r0, r6
   2ad0a:	bl	2b1fc <btrfs_commit_transaction@@Base>
   2ad0e:	subs	r4, r0, #0
   2ad10:	bge.n	2ad2c <btrfs_fix_device_size@@Base+0x130>
   2ad12:	blx	8740 <__errno_location@plt>
   2ad16:	negs	r3, r4
   2ad18:	mov	r1, r4
   2ad1a:	str	r3, [r0, #0]
   2ad1c:	ldr	r0, [pc, #80]	; (2ad70 <btrfs_fix_device_size@@Base+0x174>)
   2ad1e:	add	r0, pc
   2ad20:	bl	1747c <__btrfs_error@@Base>
   2ad24:	mov	r0, r7
   2ad26:	bl	17e58 <btrfs_release_path@@Base>
   2ad2a:	b.n	2ac80 <btrfs_fix_device_size@@Base+0x84>
   2ad2c:	mov	r0, r7
   2ad2e:	mov	r4, r8
   2ad30:	bl	17e58 <btrfs_release_path@@Base>
   2ad34:	ldrd	r2, r3, [r5, #72]	; 0x48
   2ad38:	ldr	r1, [pc, #56]	; (2ad74 <btrfs_fix_device_size@@Base+0x178>)
   2ad3a:	mov	r0, r8
   2ad3c:	strd	sl, fp, [sp]
   2ad40:	strd	r2, r3, [sp, #8]
   2ad44:	add	r1, pc
   2ad46:	ldrd	r2, r3, [r5, #64]	; 0x40
   2ad4a:	blx	87f4 <__printf_chk@plt+0x4>
   2ad4e:	b.n	2ac80 <btrfs_fix_device_size@@Base+0x84>
   2ad50:	mov	r0, r4
   2ad52:	add	sp, #116	; 0x74
   2ad54:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ad58:	add	r1, pc, #544	; (adr r1, 2af7c <btrfs_start_transaction@@Base>)
   2ad5a:	movs	r3, r0
   2ad5c:	lsls	r4, r4, #8
   2ad5e:	movs	r0, r0
   2ad60:	ldr	r1, [r6, r1]
   2ad62:	movs	r1, r0
   2ad64:	add	r1, pc, #16	; (adr r1, 2ad78 <btrfs_fix_super_size@@Base>)
   2ad66:	movs	r3, r0
   2ad68:	ldr	r5, [r2, r1]
   2ad6a:	movs	r1, r0
   2ad6c:	ldr	r6, [r3, r1]
   2ad6e:	movs	r1, r0
   2ad70:	ldr	r5, [r7, r0]
   2ad72:	movs	r1, r0
   2ad74:	ldr	r5, [r0, r1]
   2ad76:	movs	r1, r0

0002ad78 <btrfs_fix_super_size@@Base>:
   2ad78:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2ad7c:	sub	sp, #20
   2ad7e:	ldr.w	r3, [r0, #352]	; 0x160
   2ad82:	mov	r5, r0
   2ad84:	movs	r6, #0
   2ad86:	movs	r7, #0
   2ad88:	add.w	lr, r3, #72	; 0x48
   2ad8c:	ldr	r3, [r3, #72]	; 0x48
   2ad8e:	cmp	r3, lr
   2ad90:	bne.n	2adce <btrfs_fix_super_size@@Base+0x56>
   2ad92:	ldr.w	r3, [r5, #308]	; 0x134
   2ad96:	ldr.w	r9, [r3, #116]	; 0x74
   2ad9a:	ldr.w	r8, [r3, #112]	; 0x70
   2ad9e:	cmp	r7, r9
   2ada0:	it	eq
   2ada2:	cmpeq	r6, r8
   2ada4:	beq.n	2ae48 <btrfs_fix_super_size@@Base+0xd0>
   2ada6:	str	r6, [r3, #112]	; 0x70
   2ada8:	movs	r1, #1
   2adaa:	str	r7, [r3, #116]	; 0x74
   2adac:	ldr	r0, [r5, #28]
   2adae:	bl	2af7c <btrfs_start_transaction@@Base>
   2adb2:	cmn.w	r0, #4096	; 0x1000
   2adb6:	mov	r4, r0
   2adb8:	bls.n	2ae18 <btrfs_fix_super_size@@Base+0xa0>
   2adba:	blx	8740 <__errno_location@plt>
   2adbe:	negs	r3, r4
   2adc0:	mov	r1, r4
   2adc2:	str	r3, [r0, #0]
   2adc4:	ldr	r0, [pc, #132]	; (2ae4c <btrfs_fix_super_size@@Base+0xd4>)
   2adc6:	add	r0, pc
   2adc8:	bl	1747c <__btrfs_error@@Base>
   2adcc:	b.n	2ae06 <btrfs_fix_super_size@@Base+0x8e>
   2adce:	ldr.w	ip, [r5, #388]	; 0x184
   2add2:	movs	r4, #0
   2add4:	ldrd	r1, r0, [r3, #72]	; 0x48
   2add8:	adds.w	r2, ip, #4294967295	; 0xffffffff
   2addc:	adc.w	r4, r4, #4294967295	; 0xffffffff
   2ade0:	and.w	r8, r2, r1
   2ade4:	and.w	r9, r4, r0
   2ade8:	orrs.w	r2, r8, r9
   2adec:	beq.n	2ae0e <btrfs_fix_super_size@@Base+0x96>
   2adee:	strd	r1, r0, [sp]
   2adf2:	mvn.w	r4, #116	; 0x74
   2adf6:	ldr	r0, [pc, #88]	; (2ae50 <btrfs_fix_super_size@@Base+0xd8>)
   2adf8:	str.w	ip, [sp, #8]
   2adfc:	add	r0, pc
   2adfe:	ldrd	r2, r3, [r3, #64]	; 0x40
   2ae02:	bl	1747c <__btrfs_error@@Base>
   2ae06:	mov	r0, r4
   2ae08:	add	sp, #20
   2ae0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2ae0e:	adds	r6, r6, r1
   2ae10:	ldr	r3, [r3, #0]
   2ae12:	adc.w	r7, r0, r7
   2ae16:	b.n	2ad8e <btrfs_fix_super_size@@Base+0x16>
   2ae18:	ldr	r1, [r5, #28]
   2ae1a:	bl	2b1fc <btrfs_commit_transaction@@Base>
   2ae1e:	subs	r4, r0, #0
   2ae20:	bge.n	2ae32 <btrfs_fix_super_size@@Base+0xba>
   2ae22:	blx	8740 <__errno_location@plt>
   2ae26:	negs	r3, r4
   2ae28:	mov	r1, r4
   2ae2a:	str	r3, [r0, #0]
   2ae2c:	ldr	r0, [pc, #36]	; (2ae54 <btrfs_fix_super_size@@Base+0xdc>)
   2ae2e:	add	r0, pc
   2ae30:	b.n	2adc8 <btrfs_fix_super_size@@Base+0x50>
   2ae32:	ldr	r1, [pc, #36]	; (2ae58 <btrfs_fix_super_size@@Base+0xe0>)
   2ae34:	mov	r2, r8
   2ae36:	mov	r3, r9
   2ae38:	movs	r0, #1
   2ae3a:	add	r1, pc
   2ae3c:	strd	r6, r7, [sp]
   2ae40:	blx	87f4 <__printf_chk@plt+0x4>
   2ae44:	movs	r4, #1
   2ae46:	b.n	2ae06 <btrfs_fix_super_size@@Base+0x8e>
   2ae48:	movs	r4, #0
   2ae4a:	b.n	2ae06 <btrfs_fix_super_size@@Base+0x8e>
   2ae4c:	ldrsb	r5, [r4, r4]
   2ae4e:	movs	r1, r0
   2ae50:	ldrsb	r6, [r1, r7]
   2ae52:	movs	r1, r0
   2ae54:	ldrsb	r5, [r5, r4]
   2ae56:	movs	r1, r0
   2ae58:	ldrsb	r7, [r7, r6]
   2ae5a:	movs	r1, r0

0002ae5c <btrfs_fix_device_and_super_size@@Base>:
   2ae5c:	push	{r3, r4, r5, r6, r7, lr}
   2ae5e:	mov	r5, r0
   2ae60:	ldr.w	r3, [r0, #352]	; 0x160
   2ae64:	add.w	r7, r3, #72	; 0x48
   2ae68:	ldr	r2, [r3, #92]	; 0x5c
   2ae6a:	cbz	r2, 2ae7a <btrfs_fix_device_and_super_size@@Base+0x1e>
   2ae6c:	ldr	r0, [pc, #132]	; (2aef4 <btrfs_fix_device_and_super_size@@Base+0x98>)
   2ae6e:	add	r0, pc
   2ae70:	bl	1747c <__btrfs_error@@Base>
   2ae74:	mvn.w	r0, #94	; 0x5e
   2ae78:	pop	{r3, r4, r5, r6, r7, pc}
   2ae7a:	ldr	r4, [r3, #72]	; 0x48
   2ae7c:	cmp	r7, r4
   2ae7e:	bne.n	2aed0 <btrfs_fix_device_and_super_size@@Base+0x74>
   2ae80:	ldr	r0, [pc, #116]	; (2aef8 <btrfs_fix_device_and_super_size@@Base+0x9c>)
   2ae82:	add	r0, pc
   2ae84:	bl	1747c <__btrfs_error@@Base>
   2ae88:	mvn.w	r0, #18
   2ae8c:	b.n	2ae78 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2ae8e:	ldr	r2, [r3, #24]
   2ae90:	adds	r2, #1
   2ae92:	bne.n	2aea6 <btrfs_fix_device_and_super_size@@Base+0x4a>
   2ae94:	ldr	r0, [pc, #100]	; (2aefc <btrfs_fix_device_and_super_size@@Base+0xa0>)
   2ae96:	ldrd	r2, r3, [r3, #64]	; 0x40
   2ae9a:	add	r0, pc
   2ae9c:	bl	1747c <__btrfs_error@@Base>
   2aea0:	ldr	r0, [pc, #92]	; (2af00 <btrfs_fix_device_and_super_size@@Base+0xa4>)
   2aea2:	add	r0, pc
   2aea4:	b.n	2ae84 <btrfs_fix_device_and_super_size@@Base+0x28>
   2aea6:	ldr	r2, [r3, #28]
   2aea8:	cmp	r2, #0
   2aeaa:	beq.n	2ae94 <btrfs_fix_device_and_super_size@@Base+0x38>
   2aeac:	ldr	r3, [r3, #0]
   2aeae:	cmp	r3, r7
   2aeb0:	bne.n	2ae8e <btrfs_fix_device_and_super_size@@Base+0x32>
   2aeb2:	movs	r6, #0
   2aeb4:	cmp	r4, r7
   2aeb6:	bne.n	2aed4 <btrfs_fix_device_and_super_size@@Base+0x78>
   2aeb8:	mov	r0, r5
   2aeba:	bl	2ad78 <btrfs_fix_super_size@@Base>
   2aebe:	cmp	r0, #0
   2aec0:	bgt.n	2aec4 <btrfs_fix_device_and_super_size@@Base+0x68>
   2aec2:	cbz	r6, 2aee8 <btrfs_fix_device_and_super_size@@Base+0x8c>
   2aec4:	ldr	r0, [pc, #60]	; (2af04 <btrfs_fix_device_and_super_size@@Base+0xa8>)
   2aec6:	add	r0, pc
   2aec8:	blx	8618 <puts@plt+0x4>
   2aecc:	movs	r0, #1
   2aece:	b.n	2ae78 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2aed0:	mov	r3, r4
   2aed2:	b.n	2aeae <btrfs_fix_device_and_super_size@@Base+0x52>
   2aed4:	mov	r1, r4
   2aed6:	mov	r0, r5
   2aed8:	bl	2abfc <btrfs_fix_device_size@@Base>
   2aedc:	cmp	r0, #0
   2aede:	blt.n	2ae78 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2aee0:	ldr	r4, [r4, #0]
   2aee2:	it	ne
   2aee4:	movne	r6, #1
   2aee6:	b.n	2aeb4 <btrfs_fix_device_and_super_size@@Base+0x58>
   2aee8:	ldr	r0, [pc, #28]	; (2af08 <btrfs_fix_device_and_super_size@@Base+0xac>)
   2aeea:	add	r0, pc
   2aeec:	blx	8618 <puts@plt+0x4>
   2aef0:	mov	r0, r6
   2aef2:	b.n	2ae78 <btrfs_fix_device_and_super_size@@Base+0x1c>
   2aef4:	ldrsb	r3, [r0, r7]
   2aef6:	movs	r1, r0
   2aef8:	ldrsb	r0, [r5, r7]
   2aefa:	movs	r1, r0
   2aefc:	ldrsb	r0, [r4, r7]
   2aefe:	movs	r1, r0
   2af00:	ldrsb	r7, [r7, r7]
   2af02:	movs	r1, r0
   2af04:	ldr	r6, [r3, r0]
   2af06:	movs	r1, r0
   2af08:	ldr	r2, [r0, r1]
   2af0a:	movs	r1, r0
   2af0c:	ldr.w	ip, [pc, #80]	; 2af60 <btrfs_fix_device_and_super_size@@Base+0x104>
   2af10:	ldr	r4, [pc, #80]	; (2af64 <btrfs_fix_device_and_super_size@@Base+0x108>)
   2af12:	add	ip, pc
   2af14:	ldr	r3, [pc, #80]	; (2af68 <btrfs_fix_device_and_super_size@@Base+0x10c>)
   2af16:	push	{lr}
   2af18:	sub	sp, #92	; 0x5c
   2af1a:	ldr.w	r4, [ip, r4]
   2af1e:	add	r3, pc
   2af20:	ldr	r4, [r4, #0]
   2af22:	str	r4, [sp, #84]	; 0x54
   2af24:	mov.w	r4, #0
   2af28:	ldr	r4, [pc, #64]	; (2af6c <btrfs_fix_device_and_super_size@@Base+0x110>)
   2af2a:	ldr	r4, [r3, r4]
   2af2c:	ldr	r3, [pc, #64]	; (2af70 <btrfs_fix_device_and_super_size@@Base+0x114>)
   2af2e:	strd	r0, r2, [sp, #8]
   2af32:	add	r3, pc
   2af34:	ldr	r2, [pc, #60]	; (2af74 <btrfs_fix_device_and_super_size@@Base+0x118>)
   2af36:	strd	r1, r3, [sp]
   2af3a:	movs	r1, #1
   2af3c:	ldr	r3, [pc, #56]	; (2af78 <btrfs_fix_device_and_super_size@@Base+0x11c>)
   2af3e:	add	r2, pc
   2af40:	ldr	r0, [r4, #0]
   2af42:	add	r4, sp, #20
   2af44:	add	r3, pc
   2af46:	blx	881c <__fprintf_chk@plt+0x4>
   2af4a:	movs	r1, #16
   2af4c:	mov	r0, r4
   2af4e:	blx	8680 <backtrace@plt>
   2af52:	movs	r2, #2
   2af54:	mov	r1, r0
   2af56:	mov	r0, r4
   2af58:	blx	8990 <backtrace_symbols_fd@plt>
   2af5c:	blx	8948 <abort@plt>
   2af60:	ldr	r6, [sp, #472]	; 0x1d8
   2af62:	movs	r3, r0
   2af64:	lsls	r4, r4, #8
   2af66:	movs	r0, r0
   2af68:	ldr	r6, [sp, #424]	; 0x1a8
   2af6a:	movs	r3, r0
   2af6c:	lsls	r4, r6, #8
   2af6e:	movs	r0, r0
   2af70:	ldrh	r0, [r5, r6]
   2af72:	movs	r1, r0
   2af74:	adcs.w	r0, r3, r0
   2af78:	ldrh	r0, [r4, r2]
   2af7a:	movs	r1, r0

0002af7c <btrfs_start_transaction@@Base>:
   2af7c:	push	{r3, r4, r5, r6, r7, lr}
   2af7e:	mov	r5, r0
   2af80:	ldr.w	r6, [r0, #464]	; 0x1d0
   2af84:	mov	r7, r1
   2af86:	movs	r0, #1
   2af88:	movs	r1, #96	; 0x60
   2af8a:	blx	8358 <calloc@plt+0x4>
   2af8e:	ldr.w	r3, [r6, #368]	; 0x170
   2af92:	mov	r4, r0
   2af94:	cbnz	r3, 2aff4 <btrfs_start_transaction@@Base+0x78>
   2af96:	cbz	r0, 2affa <btrfs_start_transaction@@Base+0x7e>
   2af98:	ldr	r3, [r5, #4]
   2af9a:	cbz	r3, 2afb2 <btrfs_start_transaction@@Base+0x36>
   2af9c:	ldr	r0, [pc, #96]	; (2b000 <btrfs_start_transaction@@Base+0x84>)
   2af9e:	add	r0, pc
   2afa0:	bl	1747c <__btrfs_error@@Base>
   2afa4:	mov	r0, r4
   2afa6:	blx	83f0 <free@plt+0x4>
   2afaa:	mvn.w	r4, #21
   2afae:	mov	r0, r4
   2afb0:	pop	{r3, r4, r5, r6, r7, pc}
   2afb2:	ldr.w	r3, [r6, #304]	; 0x130
   2afb6:	cbz	r3, 2afbe <btrfs_start_transaction@@Base+0x42>
   2afb8:	ldr	r0, [pc, #72]	; (2b004 <btrfs_start_transaction@@Base+0x88>)
   2afba:	add	r0, pc
   2afbc:	b.n	2afa0 <btrfs_start_transaction@@Base+0x24>
   2afbe:	str	r6, [r0, #0]
   2afc0:	ldrd	r3, r2, [r6, #232]	; 0xe8
   2afc4:	str.w	r0, [r6, #304]	; 0x130
   2afc8:	adds	r3, #1
   2afca:	adc.w	r2, r2, #0
   2afce:	strd	r3, r2, [r6, #232]	; 0xe8
   2afd2:	strd	r3, r2, [r0, #8]
   2afd6:	ldrh	r1, [r0, #32]
   2afd8:	strd	r3, r2, [r5, #480]	; 0x1e0
   2afdc:	ldr	r3, [r5, #0]
   2afde:	bic.w	r1, r1, #510	; 0x1fe
   2afe2:	str	r7, [r0, #48]	; 0x30
   2afe4:	bic.w	r1, r1, #1
   2afe8:	strh	r1, [r0, #32]
   2afea:	str	r3, [r5, #4]
   2afec:	ldr	r2, [r3, #80]	; 0x50
   2afee:	adds	r2, #1
   2aff0:	str	r2, [r3, #80]	; 0x50
   2aff2:	b.n	2afae <btrfs_start_transaction@@Base+0x32>
   2aff4:	mvn.w	r4, #29
   2aff8:	b.n	2afae <btrfs_start_transaction@@Base+0x32>
   2affa:	mvn.w	r4, #11
   2affe:	b.n	2afae <btrfs_start_transaction@@Base+0x32>
   2b000:	ldrh	r4, [r2, r1]
   2b002:	movs	r1, r0
   2b004:	ldrh	r2, [r5, r1]
   2b006:	movs	r1, r0

0002b008 <commit_tree_roots@@Base>:
   2b008:	ldr	r2, [pc, #264]	; (2b114 <commit_tree_roots@@Base+0x10c>)
   2b00a:	ldr	r3, [pc, #268]	; (2b118 <commit_tree_roots@@Base+0x110>)
   2b00c:	add	r2, pc
   2b00e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b012:	sub	sp, #28
   2b014:	ldr	r3, [r2, r3]
   2b016:	mov	r6, r0
   2b018:	mov	r5, r1
   2b01a:	ldr	r3, [r3, #0]
   2b01c:	str	r3, [sp, #20]
   2b01e:	mov.w	r3, #0
   2b022:	ldrb.w	r3, [r1, #364]	; 0x16c
   2b026:	ands.w	r3, r3, #2
   2b02a:	beq.n	2b044 <commit_tree_roots@@Base+0x3c>
   2b02c:	mov.w	sl, #0
   2b030:	ldr	r2, [pc, #232]	; (2b11c <commit_tree_roots@@Base+0x114>)
   2b032:	ldr	r3, [pc, #228]	; (2b118 <commit_tree_roots@@Base+0x110>)
   2b034:	add	r2, pc
   2b036:	ldr	r3, [r2, r3]
   2b038:	ldr	r2, [r3, #0]
   2b03a:	ldr	r3, [sp, #20]
   2b03c:	eors	r2, r3
   2b03e:	beq.n	2b10c <commit_tree_roots@@Base+0x104>
   2b040:	blx	84cc <__stack_chk_fail@plt>
   2b044:	ldr	r2, [r1, #28]
   2b046:	ldr	r2, [r2, #0]
   2b048:	ldr	r1, [r2, #80]	; 0x50
   2b04a:	str	r2, [sp, #16]
   2b04c:	adds	r1, #1
   2b04e:	str	r1, [r2, #80]	; 0x50
   2b050:	add	r1, sp, #16
   2b052:	strd	r3, r1, [sp]
   2b056:	ldr	r1, [r5, #28]
   2b058:	bl	18884 <btrfs_cow_block@@Base>
   2b05c:	mov	sl, r0
   2b05e:	ldr	r0, [sp, #16]
   2b060:	bl	16c20 <free_extent_buffer@@Base>
   2b064:	cmp.w	sl, #0
   2b068:	bne.n	2b030 <commit_tree_roots@@Base+0x28>
   2b06a:	mov.w	r1, #4294967295	; 0xffffffff
   2b06e:	mov	r0, r6
   2b070:	bl	22ee4 <btrfs_run_delayed_refs@@Base>
   2b074:	cmp	r0, #0
   2b076:	bne.n	2b108 <commit_tree_roots@@Base+0x100>
   2b078:	add.w	fp, r5, #336	; 0x150
   2b07c:	str	r0, [sp, #12]
   2b07e:	ldr.w	r4, [r5, #336]	; 0x150
   2b082:	cmp	r4, fp
   2b084:	beq.n	2b02c <commit_tree_roots@@Base+0x24>
   2b086:	ldrd	r2, r3, [r4]
   2b08a:	sub.w	r7, r4, #520	; 0x208
   2b08e:	sub.w	r8, r4, #512	; 0x200
   2b092:	str	r3, [r2, #4]
   2b094:	str	r2, [r3, #0]
   2b096:	strd	r4, r4, [r4]
   2b09a:	subs	r4, #73	; 0x49
   2b09c:	ldr.w	r3, [r7, #464]	; 0x1d0
   2b0a0:	ldr.w	r9, [r3, #28]
   2b0a4:	ldr.w	ip, [r7]
   2b0a8:	ldr.w	r1, [r8, #180]	; 0xb4
   2b0ac:	ldr.w	r0, [r8, #176]	; 0xb0
   2b0b0:	ldrd	r2, r3, [ip, #40]	; 0x28
   2b0b4:	cmp	r1, r3
   2b0b6:	it	eq
   2b0b8:	cmpeq	r0, r2
   2b0ba:	beq.n	2b0f2 <commit_tree_roots@@Base+0xea>
   2b0bc:	str.w	r2, [r8, #176]	; 0xb0
   2b0c0:	mov	r1, r9
   2b0c2:	str.w	r3, [r8, #180]	; 0xb4
   2b0c6:	mov	r0, r6
   2b0c8:	ldrd	r3, r2, [r6, #8]
   2b0cc:	str.w	r2, [r8, #164]	; 0xa4
   2b0d0:	mov	r2, r4
   2b0d2:	str.w	r3, [r8, #160]	; 0xa0
   2b0d6:	ldrb.w	r3, [ip, #196]	; 0xc4
   2b0da:	strb.w	r3, [r7, #246]	; 0xf6
   2b0de:	mov	r3, r8
   2b0e0:	bl	27a78 <btrfs_update_root@@Base>
   2b0e4:	subs.w	sl, r0, #0
   2b0e8:	blt.n	2b0f6 <commit_tree_roots@@Base+0xee>
   2b0ea:	mov	r0, r6
   2b0ec:	bl	2093c <btrfs_write_dirty_block_groups@@Base>
   2b0f0:	b.n	2b0a4 <commit_tree_roots@@Base+0x9c>
   2b0f2:	mov.w	sl, #0
   2b0f6:	ldr	r0, [r7, #4]
   2b0f8:	bl	16c20 <free_extent_buffer@@Base>
   2b0fc:	ldr	r3, [sp, #12]
   2b0fe:	str	r3, [r7, #4]
   2b100:	cmp.w	sl, #0
   2b104:	beq.n	2b07e <commit_tree_roots@@Base+0x76>
   2b106:	b.n	2b030 <commit_tree_roots@@Base+0x28>
   2b108:	mov	sl, r0
   2b10a:	b.n	2b030 <commit_tree_roots@@Base+0x28>
   2b10c:	mov	r0, sl
   2b10e:	add	sp, #28
   2b110:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b114:	ldr	r5, [sp, #496]	; 0x1f0
   2b116:	movs	r3, r0
   2b118:	lsls	r4, r4, #8
   2b11a:	movs	r0, r0
   2b11c:	ldr	r5, [sp, #336]	; 0x150
   2b11e:	movs	r3, r0

0002b120 <__commit_transaction@@Base>:
   2b120:	ldr	r2, [pc, #196]	; (2b1e8 <__commit_transaction@@Base+0xc8>)
   2b122:	ldr	r3, [pc, #200]	; (2b1ec <__commit_transaction@@Base+0xcc>)
   2b124:	add	r2, pc
   2b126:	stmdb	sp!, {r4, r5, r6, r7, r9, sl, fp, lr}
   2b12a:	sub	sp, #40	; 0x28
   2b12c:	ldr	r3, [r2, r3]
   2b12e:	add.w	fp, sp, #24
   2b132:	ldr.w	r6, [r1, #464]	; 0x1d0
   2b136:	add.w	sl, sp, #16
   2b13a:	ldr	r3, [r3, #0]
   2b13c:	str	r3, [sp, #36]	; 0x24
   2b13e:	mov.w	r3, #0
   2b142:	mov	r5, r0
   2b144:	add.w	r9, r6, #64	; 0x40
   2b148:	movs	r7, #1
   2b14a:	movs	r2, #0
   2b14c:	movs	r3, #0
   2b14e:	mov	r0, r9
   2b150:	strd	fp, r7, [sp, #4]
   2b154:	str.w	sl, [sp]
   2b158:	bl	16b18 <find_first_extent_bit@@Base>
   2b15c:	cbz	r0, 2b19a <__commit_transaction@@Base+0x7a>
   2b15e:	ldr	r2, [pc, #144]	; (2b1f0 <__commit_transaction@@Base+0xd0>)
   2b160:	ldr	r3, [pc, #136]	; (2b1ec <__commit_transaction@@Base+0xcc>)
   2b162:	add	r2, pc
   2b164:	ldr	r3, [r2, r3]
   2b166:	ldr	r2, [r3, #0]
   2b168:	ldr	r3, [sp, #36]	; 0x24
   2b16a:	eors	r2, r3
   2b16c:	beq.n	2b1de <__commit_transaction@@Base+0xbe>
   2b16e:	blx	84cc <__stack_chk_fail@plt>
   2b172:	ldr	r0, [pc, #128]	; (2b1f4 <__commit_transaction@@Base+0xd4>)
   2b174:	movs	r2, #1
   2b176:	movs	r1, #145	; 0x91
   2b178:	add	r0, pc
   2b17a:	bl	2af0c <btrfs_fix_device_and_super_size@@Base+0xb0>
   2b17e:	ldrd	r2, r3, [sp, #16]
   2b182:	mov	r0, r4
   2b184:	ldr	r1, [r4, #76]	; 0x4c
   2b186:	adds	r2, r2, r1
   2b188:	adc.w	r3, r3, #0
   2b18c:	strd	r2, r3, [sp, #16]
   2b190:	bl	172ce <clear_extent_buffer_dirty@@Base>
   2b194:	mov	r0, r4
   2b196:	bl	16c20 <free_extent_buffer@@Base>
   2b19a:	ldrd	r2, r3, [sp, #16]
   2b19e:	ldrd	r0, r1, [sp, #24]
   2b1a2:	cmp	r1, r3
   2b1a4:	it	eq
   2b1a6:	cmpeq	r0, r2
   2b1a8:	bcc.n	2b14a <__commit_transaction@@Base+0x2a>
   2b1aa:	mov	r0, r9
   2b1ac:	bl	16cf2 <find_first_extent_buffer@@Base>
   2b1b0:	mov	r4, r0
   2b1b2:	cmp	r0, #0
   2b1b4:	beq.n	2b172 <__commit_transaction@@Base+0x52>
   2b1b6:	ldrd	r0, r1, [r0, #40]	; 0x28
   2b1ba:	ldrd	r2, r3, [sp, #16]
   2b1be:	cmp	r1, r3
   2b1c0:	it	eq
   2b1c2:	cmpeq	r0, r2
   2b1c4:	bne.n	2b172 <__commit_transaction@@Base+0x52>
   2b1c6:	mov	r2, r4
   2b1c8:	mov	r1, r6
   2b1ca:	mov	r0, r5
   2b1cc:	bl	1d5dc <write_tree_block@@Base>
   2b1d0:	mov	r2, r0
   2b1d2:	cmp	r0, #0
   2b1d4:	beq.n	2b17e <__commit_transaction@@Base+0x5e>
   2b1d6:	ldr	r0, [pc, #32]	; (2b1f8 <__commit_transaction@@Base+0xd8>)
   2b1d8:	movs	r1, #147	; 0x93
   2b1da:	add	r0, pc
   2b1dc:	b.n	2b17a <__commit_transaction@@Base+0x5a>
   2b1de:	movs	r0, #0
   2b1e0:	add	sp, #40	; 0x28
   2b1e2:	ldmia.w	sp!, {r4, r5, r6, r7, r9, sl, fp, pc}
   2b1e6:	nop
   2b1e8:	ldr	r4, [sp, #400]	; 0x190
   2b1ea:	movs	r3, r0
   2b1ec:	lsls	r4, r4, #8
   2b1ee:	movs	r0, r0
   2b1f0:	ldr	r4, [sp, #152]	; 0x98
   2b1f2:	movs	r3, r0
   2b1f4:	ldr	r2, [r4, r3]
   2b1f6:	movs	r1, r0
   2b1f8:	adcs.w	r0, r9, #8388608	; 0x800000

0002b1fc <btrfs_commit_transaction@@Base>:
   2b1fc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b200:	mov	r6, r0
   2b202:	ldr	r3, [r0, #0]
   2b204:	sub	sp, #20
   2b206:	ldrd	r8, r9, [r0, #8]
   2b20a:	mov	r5, r1
   2b20c:	ldr.w	r7, [r1, #464]	; 0x1d0
   2b210:	ldr.w	sl, [r3, #368]	; 0x170
   2b214:	cmp.w	sl, #0
   2b218:	bne.w	2b366 <btrfs_commit_transaction@@Base+0x16a>
   2b21c:	mov.w	r1, #4294967295	; 0xffffffff
   2b220:	bl	22ee4 <btrfs_run_delayed_refs@@Base>
   2b224:	subs	r4, r0, #0
   2b226:	blt.n	2b2d6 <btrfs_commit_transaction@@Base+0xda>
   2b228:	ldrd	r3, r0, [r5]
   2b22c:	cmp	r0, r3
   2b22e:	bne.n	2b284 <btrfs_commit_transaction@@Base+0x88>
   2b230:	mov	r1, r7
   2b232:	mov	r0, r6
   2b234:	bl	2b008 <commit_tree_roots@@Base>
   2b238:	subs	r4, r0, #0
   2b23a:	blt.n	2b2d6 <btrfs_commit_transaction@@Base+0xda>
   2b23c:	add.w	sl, r7, #128	; 0x80
   2b240:	mov.w	fp, #1
   2b244:	ldr	r3, [r6, #64]	; 0x40
   2b246:	cmp	r3, #0
   2b248:	bne.n	2b2e4 <btrfs_commit_transaction@@Base+0xe8>
   2b24a:	mov.w	r2, #4294967295	; 0xffffffff
   2b24e:	strd	fp, r3, [sp, #8]
   2b252:	mov	r0, sl
   2b254:	mov.w	r3, #4294967295	; 0xffffffff
   2b258:	strd	r2, r3, [sp]
   2b25c:	movs	r2, #0
   2b25e:	movs	r3, #0
   2b260:	bl	16b5a <test_range_bit@@Base>
   2b264:	cmp	r0, #0
   2b266:	bne.n	2b2e4 <btrfs_commit_transaction@@Base+0xe8>
   2b268:	mov	r1, r5
   2b26a:	mov	r0, r6
   2b26c:	bl	2b120 <__commit_transaction@@Base>
   2b270:	ldr.w	sl, [r6, #64]	; 0x40
   2b274:	cmp.w	sl, #0
   2b278:	beq.n	2b2fe <btrfs_commit_transaction@@Base+0x102>
   2b27a:	ldr	r0, [pc, #240]	; (2b36c <btrfs_commit_transaction@@Base+0x170>)
   2b27c:	add	r0, pc
   2b27e:	bl	1747c <__btrfs_error@@Base>
   2b282:	b.n	2b2d6 <btrfs_commit_transaction@@Base+0xda>
   2b284:	ldr.w	r3, [r5, #464]	; 0x1d0
   2b288:	ldr	r2, [r3, #28]
   2b28a:	cmp	r2, r5
   2b28c:	beq.n	2b230 <btrfs_commit_transaction@@Base+0x34>
   2b28e:	ldr	r3, [r3, #32]
   2b290:	cmp	r3, r5
   2b292:	beq.n	2b230 <btrfs_commit_transaction@@Base+0x34>
   2b294:	bl	16c20 <free_extent_buffer@@Base>
   2b298:	ldr	r3, [r5, #0]
   2b29a:	str.w	sl, [r5, #4]
   2b29e:	mov	r0, r6
   2b2a0:	ldrd	r1, r2, [r3, #40]	; 0x28
   2b2a4:	str.w	r1, [r5, #184]	; 0xb8
   2b2a8:	str.w	r2, [r5, #188]	; 0xbc
   2b2ac:	ldrd	r1, r2, [r6, #8]
   2b2b0:	str.w	r1, [r5, #168]	; 0xa8
   2b2b4:	str.w	r2, [r5, #172]	; 0xac
   2b2b8:	addw	r2, r5, #447	; 0x1bf
   2b2bc:	ldrb.w	r3, [r3, #196]	; 0xc4
   2b2c0:	ldr.w	r1, [r5, #464]	; 0x1d0
   2b2c4:	strb.w	r3, [r5, #246]	; 0xf6
   2b2c8:	add.w	r3, r5, #8
   2b2cc:	ldr	r1, [r1, #28]
   2b2ce:	bl	27a78 <btrfs_update_root@@Base>
   2b2d2:	subs	r4, r0, #0
   2b2d4:	bge.n	2b230 <btrfs_commit_transaction@@Base+0x34>
   2b2d6:	mov	r0, r6
   2b2d8:	bl	242e4 <btrfs_destroy_delayed_refs@@Base>
   2b2dc:	mov	r0, r6
   2b2de:	blx	83f0 <free@plt+0x4>
   2b2e2:	b.n	2b338 <btrfs_commit_transaction@@Base+0x13c>
   2b2e4:	mov	r0, r6
   2b2e6:	bl	2093c <btrfs_write_dirty_block_groups@@Base>
   2b2ea:	subs	r4, r0, #0
   2b2ec:	blt.n	2b2d6 <btrfs_commit_transaction@@Base+0xda>
   2b2ee:	mov.w	r1, #4294967295	; 0xffffffff
   2b2f2:	mov	r0, r6
   2b2f4:	bl	22ee4 <btrfs_run_delayed_refs@@Base>
   2b2f8:	subs	r4, r0, #0
   2b2fa:	bge.n	2b244 <btrfs_commit_transaction@@Base+0x48>
   2b2fc:	b.n	2b2d6 <btrfs_commit_transaction@@Base+0xda>
   2b2fe:	mov	r0, r6
   2b300:	add.w	r7, r7, #356	; 0x164
   2b304:	bl	1d2ec <write_ctree_super@@Base>
   2b308:	mov	r4, r0
   2b30a:	mov	r0, r6
   2b30c:	bl	20b88 <btrfs_finish_extent_commit@@Base>
   2b310:	mov	r0, r6
   2b312:	blx	83f0 <free@plt+0x4>
   2b316:	ldr	r0, [r5, #4]
   2b318:	bl	16c20 <free_extent_buffer@@Base>
   2b31c:	str.w	sl, [r5, #4]
   2b320:	ldr	r5, [r7, #0]
   2b322:	ldr	r6, [pc, #76]	; (2b370 <btrfs_commit_transaction@@Base+0x174>)
   2b324:	subs	r5, #44	; 0x2c
   2b326:	str.w	sl, [r7, #-52]
   2b32a:	add	r6, pc
   2b32c:	strd	r8, r9, [r7, #-116]	; 0x74
   2b330:	add.w	r3, r5, #44	; 0x2c
   2b334:	cmp	r3, r7
   2b336:	bne.n	2b340 <btrfs_commit_transaction@@Base+0x144>
   2b338:	mov	r0, r4
   2b33a:	add	sp, #20
   2b33c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b340:	ldrd	r2, r3, [r5, #32]
   2b344:	orrs.w	r1, r2, r3
   2b348:	beq.n	2b360 <btrfs_commit_transaction@@Base+0x164>
   2b34a:	strd	r2, r3, [sp, #8]
   2b34e:	mov	r0, r6
   2b350:	ldrd	r2, r3, [r5]
   2b354:	strd	r2, r3, [sp]
   2b358:	mov	r2, r8
   2b35a:	mov	r3, r9
   2b35c:	bl	17400 <__btrfs_warning@@Base>
   2b360:	ldr	r5, [r5, #44]	; 0x2c
   2b362:	subs	r5, #44	; 0x2c
   2b364:	b.n	2b330 <btrfs_commit_transaction@@Base+0x134>
   2b366:	mvn.w	r4, #29
   2b36a:	b.n	2b338 <btrfs_commit_transaction@@Base+0x13c>
   2b36c:	ldrsb	r0, [r7, r7]
   2b36e:	movs	r1, r0
   2b370:	ldrsb	r4, [r5, r5]
   2b372:	movs	r1, r0

0002b374 <btrfs_abort_transaction@@Base>:
   2b374:	ldr	r3, [r0, #0]
   2b376:	str.w	r1, [r3, #368]	; 0x170
   2b37a:	bx	lr
   2b37c:	push	{r4, lr}
   2b37e:	mov	r4, r1
   2b380:	ldr	r1, [pc, #84]	; (2b3d8 <btrfs_abort_transaction@@Base+0x64>)
   2b382:	sub	sp, #24
   2b384:	ldr	r3, [pc, #84]	; (2b3dc <btrfs_abort_transaction@@Base+0x68>)
   2b386:	add	r1, pc
   2b388:	ldr	r3, [r1, r3]
   2b38a:	mov	r1, sp
   2b38c:	ldr	r3, [r3, #0]
   2b38e:	str	r3, [sp, #20]
   2b390:	mov.w	r3, #0
   2b394:	movs	r3, #25
   2b396:	muls	r2, r3
   2b398:	movs	r3, #17
   2b39a:	adds	r2, #101	; 0x65
   2b39c:	bl	1731a <read_extent_buffer@@Base>
   2b3a0:	ldr.w	r3, [sp, #13]
   2b3a4:	ldr.w	r2, [sp, #9]
   2b3a8:	str.w	r3, [r4, #13]
   2b3ac:	ldrb.w	r3, [sp, #8]
   2b3b0:	str.w	r2, [r4, #9]
   2b3b4:	ldr	r2, [pc, #40]	; (2b3e0 <btrfs_abort_transaction@@Base+0x6c>)
   2b3b6:	strb	r3, [r4, #8]
   2b3b8:	ldr	r3, [sp, #0]
   2b3ba:	add	r2, pc
   2b3bc:	str	r3, [r4, #0]
   2b3be:	ldr	r3, [sp, #4]
   2b3c0:	str	r3, [r4, #4]
   2b3c2:	ldr	r3, [pc, #24]	; (2b3dc <btrfs_abort_transaction@@Base+0x68>)
   2b3c4:	ldr	r3, [r2, r3]
   2b3c6:	ldr	r2, [r3, #0]
   2b3c8:	ldr	r3, [sp, #20]
   2b3ca:	eors	r2, r3
   2b3cc:	beq.n	2b3d2 <btrfs_abort_transaction@@Base+0x5e>
   2b3ce:	blx	84cc <__stack_chk_fail@plt>
   2b3d2:	add	sp, #24
   2b3d4:	pop	{r4, pc}
   2b3d6:	nop
   2b3d8:	ldr	r2, [sp, #8]
   2b3da:	movs	r3, r0
   2b3dc:	lsls	r4, r4, #8
   2b3de:	movs	r0, r0
   2b3e0:	ldr	r1, [sp, #824]	; 0x338
   2b3e2:	movs	r3, r0
   2b3e4:	push	{r4, r5, r6, r7, lr}
   2b3e6:	sub	sp, #36	; 0x24
   2b3e8:	ldr	r6, [pc, #112]	; (2b45c <btrfs_abort_transaction@@Base+0xe8>)
   2b3ea:	mov	r4, r3
   2b3ec:	ldr	r5, [pc, #112]	; (2b460 <btrfs_abort_transaction@@Base+0xec>)
   2b3ee:	add	r6, pc
   2b3f0:	ldr	r5, [r6, r5]
   2b3f2:	ldrd	r6, r7, [r2, #40]	; 0x28
   2b3f6:	ldr	r5, [r5, #0]
   2b3f8:	str	r5, [sp, #28]
   2b3fa:	mov.w	r5, #0
   2b3fe:	movs	r5, #198	; 0xc6
   2b400:	strb.w	r5, [sp, #16]
   2b404:	strd	r6, r7, [sp, #8]
   2b408:	ldr.w	r5, [r2, #49]	; 0x31
   2b40c:	ldr.w	r2, [r2, #53]	; 0x35
   2b410:	str.w	r5, [sp, #17]
   2b414:	str.w	r2, [sp, #21]
   2b418:	ldr	r2, [sp, #56]	; 0x38
   2b41a:	str	r2, [sp, #4]
   2b41c:	movs	r2, #0
   2b41e:	str	r2, [sp, #0]
   2b420:	add	r2, sp, #8
   2b422:	bl	1a23c <btrfs_search_slot@@Base>
   2b426:	cmp	r0, #0
   2b428:	blt.n	2b442 <btrfs_abort_transaction@@Base+0xce>
   2b42a:	ittte	eq
   2b42c:	ldreq	r3, [r4, #32]
   2b42e:	moveq	r1, #25
   2b430:	ldreq	r2, [r4, #0]
   2b432:	mvnne.w	r0, #1
   2b436:	ittt	eq
   2b438:	mlaeq	r3, r1, r3, r2
   2b43c:	ldreq.w	r0, [r3, #214]	; 0xd6
   2b440:	addeq	r0, #101	; 0x65
   2b442:	ldr	r2, [pc, #32]	; (2b464 <btrfs_abort_transaction@@Base+0xf0>)
   2b444:	ldr	r3, [pc, #24]	; (2b460 <btrfs_abort_transaction@@Base+0xec>)
   2b446:	add	r2, pc
   2b448:	ldr	r3, [r2, r3]
   2b44a:	ldr	r2, [r3, #0]
   2b44c:	ldr	r3, [sp, #28]
   2b44e:	eors	r2, r3
   2b450:	beq.n	2b456 <btrfs_abort_transaction@@Base+0xe2>
   2b452:	blx	84cc <__stack_chk_fail@plt>
   2b456:	add	sp, #36	; 0x24
   2b458:	pop	{r4, r5, r6, r7, pc}
   2b45a:	nop
   2b45c:	ldr	r1, [sp, #616]	; 0x268
   2b45e:	movs	r3, r0
   2b460:	lsls	r4, r4, #8
   2b462:	movs	r0, r0
   2b464:	ldr	r1, [sp, #264]	; 0x108
   2b466:	movs	r3, r0
   2b468:	push	{r4}
   2b46a:	ldr	r4, [r1, #0]
   2b46c:	ldr	r2, [r1, #32]
   2b46e:	adds	r2, #1
   2b470:	str	r2, [r1, #32]
   2b472:	ldr.w	r4, [r4, #192]	; 0xc0
   2b476:	cmp	r2, r4
   2b478:	bcc.n	2b48c <btrfs_abort_transaction@@Base+0x118>
   2b47a:	movs	r2, #0
   2b47c:	ldr.w	r4, [sp], #4
   2b480:	strb.w	r2, [r1, #65]	; 0x41
   2b484:	ldr.w	r0, [r0, #464]	; 0x1d0
   2b488:	b.w	1b670 <btrfs_next_sibling_tree_block@@Base>
   2b48c:	movs	r0, #0
   2b48e:	ldr.w	r4, [sp], #4
   2b492:	bx	lr
   2b494:	push	{r4, r5, r6, lr}
   2b496:	lsrs	r4, r2, #5
   2b498:	and.w	r6, r2, #31
   2b49c:	bic.w	r2, r2, #31
   2b4a0:	ldr.w	r5, [r0, r4, lsl #2]
   2b4a4:	mov.w	r4, #4294967295	; 0xffffffff
   2b4a8:	lsls	r4, r6
   2b4aa:	eors	r5, r3
   2b4ac:	ands	r4, r5
   2b4ae:	cbz	r4, 2b4e4 <btrfs_abort_transaction@@Base+0x170>
   2b4b0:	uxth	r3, r4
   2b4b2:	cbnz	r3, 2b4f4 <btrfs_abort_transaction@@Base+0x180>
   2b4b4:	lsrs	r4, r4, #16
   2b4b6:	movs	r3, #16
   2b4b8:	tst.w	r4, #255	; 0xff
   2b4bc:	itt	eq
   2b4be:	lsreq	r4, r4, #8
   2b4c0:	addeq	r3, #8
   2b4c2:	lsls	r6, r4, #28
   2b4c4:	itt	eq
   2b4c6:	lsreq	r4, r4, #4
   2b4c8:	addeq	r3, #4
   2b4ca:	lsls	r5, r4, #30
   2b4cc:	itt	eq
   2b4ce:	lsreq	r4, r4, #2
   2b4d0:	addeq	r3, #2
   2b4d2:	lsls	r0, r4, #31
   2b4d4:	it	pl
   2b4d6:	addpl	r3, #1
   2b4d8:	add	r3, r2
   2b4da:	cmp	r1, r3
   2b4dc:	it	cs
   2b4de:	movcs	r1, r3
   2b4e0:	mov	r0, r1
   2b4e2:	pop	{r4, r5, r6, pc}
   2b4e4:	adds	r2, #32
   2b4e6:	cmp	r2, r1
   2b4e8:	bcs.n	2b4e0 <btrfs_abort_transaction@@Base+0x16c>
   2b4ea:	lsrs	r4, r2, #5
   2b4ec:	ldr.w	r4, [r0, r4, lsl #2]
   2b4f0:	eors	r4, r3
   2b4f2:	b.n	2b4ae <btrfs_abort_transaction@@Base+0x13a>
   2b4f4:	movs	r3, #0
   2b4f6:	b.n	2b4b8 <btrfs_abort_transaction@@Base+0x144>
   2b4f8:	ldr.w	ip, [pc, #80]	; 2b54c <btrfs_abort_transaction@@Base+0x1d8>
   2b4fc:	ldr	r4, [pc, #80]	; (2b550 <btrfs_abort_transaction@@Base+0x1dc>)
   2b4fe:	add	ip, pc
   2b500:	ldr	r3, [pc, #80]	; (2b554 <btrfs_abort_transaction@@Base+0x1e0>)
   2b502:	push	{lr}
   2b504:	sub	sp, #92	; 0x5c
   2b506:	ldr.w	r4, [ip, r4]
   2b50a:	add	r3, pc
   2b50c:	ldr	r4, [r4, #0]
   2b50e:	str	r4, [sp, #84]	; 0x54
   2b510:	mov.w	r4, #0
   2b514:	ldr	r4, [pc, #64]	; (2b558 <btrfs_abort_transaction@@Base+0x1e4>)
   2b516:	ldr	r4, [r3, r4]
   2b518:	movs	r3, #0
   2b51a:	strd	r2, r1, [sp]
   2b51e:	movs	r1, #1
   2b520:	strd	r0, r3, [sp, #8]
   2b524:	ldr	r2, [pc, #52]	; (2b55c <btrfs_abort_transaction@@Base+0x1e8>)
   2b526:	ldr	r3, [pc, #56]	; (2b560 <btrfs_abort_transaction@@Base+0x1ec>)
   2b528:	ldr	r0, [r4, #0]
   2b52a:	add	r4, sp, #20
   2b52c:	add	r3, pc
   2b52e:	add	r2, pc
   2b530:	blx	881c <__fprintf_chk@plt+0x4>
   2b534:	movs	r1, #16
   2b536:	mov	r0, r4
   2b538:	blx	8680 <backtrace@plt>
   2b53c:	movs	r2, #2
   2b53e:	mov	r1, r0
   2b540:	mov	r0, r4
   2b542:	blx	8990 <backtrace_symbols_fd@plt>
   2b546:	blx	8948 <abort@plt>
   2b54a:	nop
   2b54c:	ldr	r0, [sp, #552]	; 0x228
   2b54e:	movs	r3, r0
   2b550:	lsls	r4, r4, #8
   2b552:	movs	r0, r0
   2b554:	ldr	r0, [sp, #504]	; 0x1f8
   2b556:	movs	r3, r0
   2b558:	lsls	r4, r6, #8
   2b55a:	movs	r0, r0
   2b55c:	ldcl	0, cr0, [r0]
   2b560:	strb	r3, [r0, r7]
   2b562:	movs	r1, r0
   2b564:	push	{r3, lr}
   2b566:	cbnz	r3, 2b56c <btrfs_abort_transaction@@Base+0x1f8>
   2b568:	bl	2b4f8 <btrfs_abort_transaction@@Base+0x184>
   2b56c:	pop	{r3, pc}
   2b56e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b572:	mov	r6, r2
   2b574:	ldr	r2, [pc, #192]	; (2b638 <btrfs_abort_transaction@@Base+0x2c4>)
   2b576:	mov	r7, r3
   2b578:	ldr	r3, [pc, #192]	; (2b63c <btrfs_abort_transaction@@Base+0x2c8>)
   2b57a:	sub	sp, #28
   2b57c:	add	r2, pc
   2b57e:	ldr.w	fp, [r0]
   2b582:	mov	r1, sp
   2b584:	mov	sl, r0
   2b586:	ldr	r3, [r2, r3]
   2b588:	ldr	r2, [r0, #32]
   2b58a:	mov	r0, fp
   2b58c:	ldr	r3, [r3, #0]
   2b58e:	str	r3, [sp, #20]
   2b590:	mov.w	r3, #0
   2b594:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2b598:	ldrb.w	r3, [sp, #8]
   2b59c:	ldr	r1, [pc, #160]	; (2b640 <btrfs_abort_transaction@@Base+0x2cc>)
   2b59e:	sub.w	r2, r3, #200	; 0xc8
   2b5a2:	ldr	r0, [pc, #160]	; (2b644 <btrfs_abort_transaction@@Base+0x2d0>)
   2b5a4:	negs	r3, r2
   2b5a6:	add	r1, pc
   2b5a8:	adcs	r3, r2
   2b5aa:	add	r0, pc
   2b5ac:	movs	r2, #62	; 0x3e
   2b5ae:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2b5b2:	ldrd	r4, r5, [sp]
   2b5b6:	ldr.w	r3, [sp, #9]
   2b5ba:	cmp	r7, r5
   2b5bc:	ldr.w	r2, [sp, #13]
   2b5c0:	it	eq
   2b5c2:	cmpeq	r6, r4
   2b5c4:	bcc.n	2b62e <btrfs_abort_transaction@@Base+0x2ba>
   2b5c6:	adds.w	r8, r4, r3
   2b5ca:	adc.w	r9, r5, r2
   2b5ce:	cmp	r7, r9
   2b5d0:	it	eq
   2b5d2:	cmpeq	r6, r8
   2b5d4:	ite	cc
   2b5d6:	movcc	r3, #1
   2b5d8:	movcs	r3, #0
   2b5da:	ldr	r1, [pc, #108]	; (2b648 <btrfs_abort_transaction@@Base+0x2d4>)
   2b5dc:	movs	r2, #66	; 0x42
   2b5de:	ldr	r0, [pc, #108]	; (2b64c <btrfs_abort_transaction@@Base+0x2d8>)
   2b5e0:	add	r1, pc
   2b5e2:	add	r0, pc
   2b5e4:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2b5e8:	ldr.w	r3, [fp, #92]	; 0x5c
   2b5ec:	subs	r0, r6, r4
   2b5ee:	sbc.w	r1, r7, r5
   2b5f2:	ldr.w	r2, [r3, #388]	; 0x184
   2b5f6:	movs	r3, #0
   2b5f8:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2b5fc:	ldr.w	r3, [sl, #32]
   2b600:	movs	r1, #25
   2b602:	mla	r3, r1, r3, fp
   2b606:	ldr.w	r1, [r3, #214]	; 0xd6
   2b60a:	adds	r1, #101	; 0x65
   2b60c:	mov	r2, r0
   2b60e:	mov	r0, fp
   2b610:	bl	173b4 <extent_buffer_test_bit@@Base>
   2b614:	ldr	r2, [pc, #56]	; (2b650 <btrfs_abort_transaction@@Base+0x2dc>)
   2b616:	ldr	r3, [pc, #36]	; (2b63c <btrfs_abort_transaction@@Base+0x2c8>)
   2b618:	add	r2, pc
   2b61a:	ldr	r3, [r2, r3]
   2b61c:	subs	r0, #0
   2b61e:	it	ne
   2b620:	movne	r0, #1
   2b622:	ldr	r2, [r3, #0]
   2b624:	ldr	r3, [sp, #20]
   2b626:	eors	r2, r3
   2b628:	beq.n	2b632 <btrfs_abort_transaction@@Base+0x2be>
   2b62a:	blx	84cc <__stack_chk_fail@plt>
   2b62e:	movs	r3, #0
   2b630:	b.n	2b5da <btrfs_abort_transaction@@Base+0x266>
   2b632:	add	sp, #28
   2b634:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b638:	ldr	r0, [sp, #48]	; 0x30
   2b63a:	movs	r3, r0
   2b63c:	lsls	r4, r4, #8
   2b63e:	movs	r0, r0
   2b640:	ldrh	r5, [r4, r0]
   2b642:	movs	r1, r0
   2b644:	strb	r7, [r2, r5]
   2b646:	movs	r1, r0
   2b648:	ldr	r3, [r5, r7]
   2b64a:	movs	r1, r0
   2b64c:	strb	r7, [r0, r5]
   2b64e:	movs	r1, r0
   2b650:	str	r7, [sp, #448]	; 0x1c0
   2b652:	movs	r3, r0
   2b654:	push	{r0, r1, r2, r4, r5, lr}
   2b656:	movs	r5, #1
   2b658:	str	r5, [sp, #4]
   2b65a:	mov	r4, r3
   2b65c:	ldr	r5, [sp, #24]
   2b65e:	str	r5, [sp, #0]
   2b660:	bl	1a23c <btrfs_search_slot@@Base>
   2b664:	cmp	r0, #0
   2b666:	blt.n	2b692 <btrfs_abort_transaction@@Base+0x31e>
   2b668:	bne.n	2b67a <btrfs_abort_transaction@@Base+0x306>
   2b66a:	ldr	r1, [pc, #44]	; (2b698 <btrfs_abort_transaction@@Base+0x324>)
   2b66c:	movs	r2, #89	; 0x59
   2b66e:	ldr	r0, [pc, #44]	; (2b69c <btrfs_abort_transaction@@Base+0x328>)
   2b670:	add	r1, pc
   2b672:	adds	r1, #20
   2b674:	add	r0, pc
   2b676:	bl	2b4f8 <btrfs_abort_transaction@@Base+0x184>
   2b67a:	ldr	r3, [r4, #32]
   2b67c:	cbnz	r3, 2b68c <btrfs_abort_transaction@@Base+0x318>
   2b67e:	ldr	r1, [pc, #32]	; (2b6a0 <btrfs_abort_transaction@@Base+0x32c>)
   2b680:	movs	r2, #94	; 0x5e
   2b682:	ldr	r0, [pc, #32]	; (2b6a4 <btrfs_abort_transaction@@Base+0x330>)
   2b684:	add	r1, pc
   2b686:	adds	r1, #20
   2b688:	add	r0, pc
   2b68a:	b.n	2b676 <btrfs_abort_transaction@@Base+0x302>
   2b68c:	movs	r0, #0
   2b68e:	subs	r3, #1
   2b690:	str	r3, [r4, #32]
   2b692:	add	sp, #12
   2b694:	pop	{r4, r5, pc}
   2b696:	nop
   2b698:	ldr	r3, [r3, r5]
   2b69a:	movs	r1, r0
   2b69c:	asrs	r6, r6, #19
   2b69e:	movs	r1, r0
   2b6a0:	ldr	r7, [r0, r5]
   2b6a2:	movs	r1, r0
   2b6a4:	asrs	r2, r4, #19
   2b6a6:	movs	r1, r0
   2b6a8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2b6ac:	mov	r6, r2
   2b6ae:	ldr	r2, [pc, #156]	; (2b74c <btrfs_abort_transaction@@Base+0x3d8>)
   2b6b0:	sub	sp, #36	; 0x24
   2b6b2:	ldr	r3, [pc, #156]	; (2b750 <btrfs_abort_transaction@@Base+0x3dc>)
   2b6b4:	mov	r8, r0
   2b6b6:	add	r2, pc
   2b6b8:	ldr	r0, [r6, #0]
   2b6ba:	mov	r9, r1
   2b6bc:	ldr	r3, [r2, r3]
   2b6be:	ldr	r2, [r6, #32]
   2b6c0:	ldr	r3, [r3, #0]
   2b6c2:	str	r3, [sp, #28]
   2b6c4:	mov.w	r3, #0
   2b6c8:	adds	r3, r2, #1
   2b6ca:	ldr.w	r1, [r0, #192]	; 0xc0
   2b6ce:	cmp	r3, r1
   2b6d0:	bcs.n	2b6ea <btrfs_abort_transaction@@Base+0x376>
   2b6d2:	movs	r0, #0
   2b6d4:	str	r3, [r6, #32]
   2b6d6:	ldr	r2, [pc, #124]	; (2b754 <btrfs_abort_transaction@@Base+0x3e0>)
   2b6d8:	ldr	r3, [pc, #116]	; (2b750 <btrfs_abort_transaction@@Base+0x3dc>)
   2b6da:	add	r2, pc
   2b6dc:	ldr	r3, [r2, r3]
   2b6de:	ldr	r2, [r3, #0]
   2b6e0:	ldr	r3, [sp, #28]
   2b6e2:	eors	r2, r3
   2b6e4:	beq.n	2b746 <btrfs_abort_transaction@@Base+0x3d2>
   2b6e6:	blx	84cc <__stack_chk_fail@plt>
   2b6ea:	add	r7, sp, #8
   2b6ec:	movs	r5, #255	; 0xff
   2b6ee:	mov	r1, r7
   2b6f0:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2b6f4:	mov	r0, r6
   2b6f6:	bl	17e58 <btrfs_release_path@@Base>
   2b6fa:	ldr.w	r1, [sp, #17]
   2b6fe:	ldr	r3, [sp, #8]
   2b700:	ldr.w	r0, [sp, #21]
   2b704:	ldr	r2, [sp, #12]
   2b706:	adds	r3, r3, r1
   2b708:	mov	r1, r9
   2b70a:	strb.w	r5, [sp, #16]
   2b70e:	adc.w	r2, r0, r2
   2b712:	mov	r0, r8
   2b714:	strd	r3, r2, [sp, #8]
   2b718:	movs	r3, #0
   2b71a:	mov	r2, r7
   2b71c:	str	r3, [sp, #0]
   2b71e:	mov	r3, r6
   2b720:	strb.w	r5, [sp, #17]
   2b724:	strb.w	r5, [sp, #18]
   2b728:	strb.w	r5, [sp, #19]
   2b72c:	strb.w	r5, [sp, #20]
   2b730:	strb.w	r5, [sp, #21]
   2b734:	strb.w	r5, [sp, #22]
   2b738:	strb.w	r5, [sp, #23]
   2b73c:	strb.w	r5, [sp, #24]
   2b740:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2b744:	b.n	2b6d6 <btrfs_abort_transaction@@Base+0x362>
   2b746:	add	sp, #36	; 0x24
   2b748:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2b74c:	str	r6, [sp, #840]	; 0x348
   2b74e:	movs	r3, r0
   2b750:	lsls	r4, r4, #8
   2b752:	movs	r0, r0
   2b754:	str	r6, [sp, #696]	; 0x2b8
   2b756:	movs	r3, r0
   2b758:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b75c:	mov	r7, r3
   2b75e:	vpush	{d8-d9}
   2b762:	mov	r4, r2
   2b764:	ldr.w	r3, [pc, #2080]	; 2bf88 <btrfs_abort_transaction@@Base+0xc14>
   2b768:	mov	fp, r1
   2b76a:	ldr.w	r2, [pc, #2080]	; 2bf8c <btrfs_abort_transaction@@Base+0xc18>
   2b76e:	mov.w	r8, #1
   2b772:	add	r3, pc
   2b774:	mov	r5, r0
   2b776:	sub	sp, #124	; 0x7c
   2b778:	add	r2, pc
   2b77a:	ldr	r1, [r0, #0]
   2b77c:	str	r3, [sp, #64]	; 0x40
   2b77e:	ldr.w	r3, [pc, #2064]	; 2bf90 <btrfs_abort_transaction@@Base+0xc1c>
   2b782:	ldr	r3, [r2, r3]
   2b784:	mov	r2, fp
   2b786:	ldr	r3, [r3, #0]
   2b788:	str	r3, [sp, #116]	; 0x74
   2b78a:	mov.w	r3, #0
   2b78e:	str.w	r8, [sp]
   2b792:	mov	r3, r4
   2b794:	ldr	r1, [r1, #48]	; 0x30
   2b796:	bl	2b3e4 <btrfs_abort_transaction@@Base+0x70>
   2b79a:	cmn.w	r0, #4096	; 0x1000
   2b79e:	bls.n	2b7bc <btrfs_abort_transaction@@Base+0x448>
   2b7a0:	mov	r6, r0
   2b7a2:	ldr.w	r2, [pc, #2032]	; 2bf94 <btrfs_abort_transaction@@Base+0xc20>
   2b7a6:	ldr.w	r3, [pc, #2024]	; 2bf90 <btrfs_abort_transaction@@Base+0xc1c>
   2b7aa:	add	r2, pc
   2b7ac:	ldr	r3, [r2, r3]
   2b7ae:	ldr	r2, [r3, #0]
   2b7b0:	ldr	r3, [sp, #116]	; 0x74
   2b7b2:	eors	r2, r3
   2b7b4:	beq.w	2bf7c <btrfs_abort_transaction@@Base+0xc08>
   2b7b8:	blx	84cc <__stack_chk_fail@plt>
   2b7bc:	ldr	r2, [r4, #0]
   2b7be:	adds	r2, #96	; 0x60
   2b7c0:	adds	r3, r2, r0
   2b7c2:	ldr.w	sl, [r3, #4]
   2b7c6:	ldr	r3, [r3, #0]
   2b7c8:	add	r7, r3
   2b7ca:	str	r7, [r2, r0]
   2b7cc:	ldr	r0, [r4, #0]
   2b7ce:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2b7d2:	mov	r0, r4
   2b7d4:	bl	17e58 <btrfs_release_path@@Base>
   2b7d8:	ands.w	sl, sl, #1
   2b7dc:	bne.w	2bbc8 <btrfs_abort_transaction@@Base+0x854>
   2b7e0:	ldr.w	r3, [fp, #112]	; 0x70
   2b7e4:	cmp	r7, r3
   2b7e6:	bls.w	2bf78 <btrfs_abort_transaction@@Base+0xc04>
   2b7ea:	ldr	r3, [r5, #0]
   2b7ec:	str	r3, [sp, #40]	; 0x28
   2b7ee:	ldr	r3, [r3, #48]	; 0x30
   2b7f0:	ldr.w	r6, [fp, #49]	; 0x31
   2b7f4:	ldr.w	r7, [fp, #53]	; 0x35
   2b7f8:	vmov	s16, r3
   2b7fc:	ldr	r3, [sp, #40]	; 0x28
   2b7fe:	mov	r0, r6
   2b800:	mov	r1, r7
   2b802:	ldr.w	r2, [r3, #388]	; 0x184
   2b806:	mov	r3, sl
   2b808:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2b80c:	adds	r1, r0, #7
   2b80e:	mov	r0, r8
   2b810:	lsrs	r1, r1, #3
   2b812:	subs	r1, #1
   2b814:	orr.w	r1, r1, #3
   2b818:	adds	r1, #1
   2b81a:	blx	8358 <calloc@plt+0x4>
   2b81e:	str	r0, [sp, #56]	; 0x38
   2b820:	cmp	r0, #0
   2b822:	beq.w	2bbbe <btrfs_abort_transaction@@Base+0x84a>
   2b826:	ldrd	r2, r3, [fp, #40]	; 0x28
   2b82a:	ldr.w	r8, [pc, #1900]	; 2bf98 <btrfs_abort_transaction@@Base+0xc24>
   2b82e:	strd	r2, r3, [sp, #16]
   2b832:	add	r8, pc
   2b834:	ldr	r3, [sp, #16]
   2b836:	add.w	r8, r8, #43	; 0x2b
   2b83a:	adds	r3, r6, r3
   2b83c:	str	r3, [sp, #24]
   2b83e:	ldr	r3, [sp, #20]
   2b840:	adc.w	r3, r7, r3
   2b844:	str	r3, [sp, #28]
   2b846:	ldr	r3, [sp, #24]
   2b848:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2b84c:	ldr	r3, [sp, #28]
   2b84e:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2b852:	strd	r2, r3, [sp, #76]	; 0x4c
   2b856:	movs	r2, #255	; 0xff
   2b858:	strb.w	r2, [sp, #84]	; 0x54
   2b85c:	strb.w	r2, [sp, #85]	; 0x55
   2b860:	strb.w	r2, [sp, #86]	; 0x56
   2b864:	strb.w	r2, [sp, #87]	; 0x57
   2b868:	strb.w	r2, [sp, #88]	; 0x58
   2b86c:	strb.w	r2, [sp, #89]	; 0x59
   2b870:	strb.w	r2, [sp, #90]	; 0x5a
   2b874:	strb.w	r2, [sp, #91]	; 0x5b
   2b878:	strb.w	r2, [sp, #92]	; 0x5c
   2b87c:	mov.w	r3, #4294967295	; 0xffffffff
   2b880:	vmov	r1, s16
   2b884:	str	r3, [sp, #0]
   2b886:	add	r2, sp, #76	; 0x4c
   2b888:	mov	r3, r4
   2b88a:	mov	r0, r5
   2b88c:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2b890:	mov	r6, r0
   2b892:	cmp	r0, #0
   2b894:	bne.n	2b976 <btrfs_abort_transaction@@Base+0x602>
   2b896:	ldr	r3, [r4, #0]
   2b898:	mov	r9, r0
   2b89a:	vmov	s17, r3
   2b89e:	ldr	r3, [r4, #32]
   2b8a0:	adds	r3, #1
   2b8a2:	str	r3, [r4, #32]
   2b8a4:	ldr.w	r3, [pc, #1780]	; 2bf9c <btrfs_abort_transaction@@Base+0xc28>
   2b8a8:	add	r3, pc
   2b8aa:	vmov	s18, r3
   2b8ae:	ldr	r2, [r4, #32]
   2b8b0:	add.w	r7, r9, sl
   2b8b4:	cmp	r2, #0
   2b8b6:	bgt.n	2b8c2 <btrfs_abort_transaction@@Base+0x54e>
   2b8b8:	mov.w	sl, #0
   2b8bc:	b.n	2b932 <btrfs_abort_transaction@@Base+0x5be>
   2b8be:	mov	sl, r7
   2b8c0:	b.n	2b87c <btrfs_abort_transaction@@Base+0x508>
   2b8c2:	vmov	r0, s17
   2b8c6:	subs	r2, #1
   2b8c8:	add	r1, sp, #96	; 0x60
   2b8ca:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2b8ce:	ldrb.w	r3, [sp, #104]	; 0x68
   2b8d2:	cmp	r3, #198	; 0xc6
   2b8d4:	bne.n	2b98c <btrfs_abort_transaction@@Base+0x618>
   2b8d6:	ldrd	r2, r3, [fp, #40]	; 0x28
   2b8da:	mov.w	sl, #1
   2b8de:	ldrd	r0, r1, [sp, #96]	; 0x60
   2b8e2:	ldr.w	r6, [pc, #1724]	; 2bfa0 <btrfs_abort_transaction@@Base+0xc2c>
   2b8e6:	cmp	r1, r3
   2b8e8:	add	r6, pc
   2b8ea:	it	eq
   2b8ec:	cmpeq	r0, r2
   2b8ee:	add.w	r6, r6, #43	; 0x2b
   2b8f2:	ldr.w	r0, [pc, #1712]	; 2bfa4 <btrfs_abort_transaction@@Base+0xc30>
   2b8f6:	ite	eq
   2b8f8:	moveq	r3, #1
   2b8fa:	movne	r3, #0
   2b8fc:	add	r0, pc
   2b8fe:	movs	r2, #222	; 0xde
   2b900:	mov	r1, r6
   2b902:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2b906:	ldr.w	r3, [fp, #53]	; 0x35
   2b90a:	ldr.w	r1, [sp, #109]	; 0x6d
   2b90e:	ldr.w	r0, [sp, #105]	; 0x69
   2b912:	ldr.w	r2, [fp, #49]	; 0x31
   2b916:	cmp	r1, r3
   2b918:	mov	r1, r6
   2b91a:	it	eq
   2b91c:	cmpeq	r0, r2
   2b91e:	ldr.w	r0, [pc, #1672]	; 2bfa8 <btrfs_abort_transaction@@Base+0xc34>
   2b922:	mov.w	r2, #223	; 0xdf
   2b926:	add	r0, pc
   2b928:	ite	eq
   2b92a:	moveq	r3, #1
   2b92c:	movne	r3, #0
   2b92e:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2b932:	vmov	r1, s16
   2b936:	mov	r2, r4
   2b938:	ldr	r3, [r4, #32]
   2b93a:	mov	r0, r5
   2b93c:	str.w	r9, [sp]
   2b940:	bl	1b3f8 <btrfs_del_items@@Base>
   2b944:	mov	r6, r0
   2b946:	cbnz	r0, 2b976 <btrfs_abort_transaction@@Base+0x602>
   2b948:	mov	r0, r4
   2b94a:	bl	17e58 <btrfs_release_path@@Base>
   2b94e:	cmp.w	sl, #0
   2b952:	beq.n	2b8be <btrfs_abort_transaction@@Base+0x54a>
   2b954:	ldr	r1, [sp, #40]	; 0x28
   2b956:	mov	r3, r4
   2b958:	mov.w	r8, #1
   2b95c:	mov	r2, fp
   2b95e:	str.w	r8, [sp]
   2b962:	mov	r0, r5
   2b964:	ldr	r1, [r1, #48]	; 0x30
   2b966:	bl	2b3e4 <btrfs_abort_transaction@@Base+0x70>
   2b96a:	cmn.w	r0, #4096	; 0x1000
   2b96e:	mov	r3, r0
   2b970:	bls.w	2ba9a <btrfs_abort_transaction@@Base+0x726>
   2b974:	mov	r6, r0
   2b976:	ldr	r0, [sp, #56]	; 0x38
   2b978:	blx	83f0 <free@plt+0x4>
   2b97c:	cmp	r6, #0
   2b97e:	beq.w	2b7a2 <btrfs_abort_transaction@@Base+0x42e>
   2b982:	mov	r1, r6
   2b984:	mov	r0, r5
   2b986:	bl	2b374 <btrfs_abort_transaction@@Base>
   2b98a:	b.n	2b7a2 <btrfs_abort_transaction@@Base+0x42e>
   2b98c:	cmp	r3, #199	; 0xc7
   2b98e:	bne.n	2ba86 <btrfs_abort_transaction@@Base+0x712>
   2b990:	ldrd	r6, r7, [sp, #96]	; 0x60
   2b994:	mov	r1, r8
   2b996:	ldrd	r2, r3, [sp, #16]
   2b99a:	vmov	r0, s18
   2b99e:	cmp	r7, r3
   2b9a0:	it	eq
   2b9a2:	cmpeq	r6, r2
   2b9a4:	mov.w	r2, #229	; 0xe5
   2b9a8:	ite	cs
   2b9aa:	movcs	r3, #1
   2b9ac:	movcc	r3, #0
   2b9ae:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2b9b2:	ldrd	r2, r3, [sp, #24]
   2b9b6:	ldr.w	r0, [pc, #1524]	; 2bfac <btrfs_abort_transaction@@Base+0xc38>
   2b9ba:	mov	r1, r8
   2b9bc:	cmp	r7, r3
   2b9be:	it	eq
   2b9c0:	cmpeq	r6, r2
   2b9c2:	add	r0, pc
   2b9c4:	mov.w	r2, #230	; 0xe6
   2b9c8:	ite	cc
   2b9ca:	movcc	r3, #1
   2b9cc:	movcs	r3, #0
   2b9ce:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2b9d2:	ldr.w	r3, [sp, #105]	; 0x69
   2b9d6:	ldr.w	r2, [sp, #109]	; 0x6d
   2b9da:	adds	r3, r3, r6
   2b9dc:	str	r3, [sp, #48]	; 0x30
   2b9de:	adc.w	r3, r2, r7
   2b9e2:	str	r3, [sp, #52]	; 0x34
   2b9e4:	ldrd	r0, r1, [sp, #48]	; 0x30
   2b9e8:	ldrd	r2, r3, [sp, #24]
   2b9ec:	cmp	r3, r1
   2b9ee:	mov	r1, r8
   2b9f0:	it	eq
   2b9f2:	cmpeq	r2, r0
   2b9f4:	ldr.w	r0, [pc, #1464]	; 2bfb0 <btrfs_abort_transaction@@Base+0xc3c>
   2b9f8:	mov.w	r2, #231	; 0xe7
   2b9fc:	ite	cs
   2b9fe:	movcs	r3, #1
   2ba00:	movcc	r3, #0
   2ba02:	add	r0, pc
   2ba04:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2ba08:	ldr	r3, [sp, #40]	; 0x28
   2ba0a:	ldr	r1, [sp, #16]
   2ba0c:	ldr.w	r2, [r3, #388]	; 0x184
   2ba10:	subs	r0, r6, r1
   2ba12:	ldr	r1, [sp, #20]
   2ba14:	mov.w	r3, #0
   2ba18:	sbc.w	r1, r7, r1
   2ba1c:	str	r2, [sp, #68]	; 0x44
   2ba1e:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2ba22:	ldr	r1, [sp, #48]	; 0x30
   2ba24:	ldr	r7, [sp, #20]
   2ba26:	movs	r3, #0
   2ba28:	ldr	r2, [sp, #68]	; 0x44
   2ba2a:	mov	r6, r0
   2ba2c:	ldr	r0, [sp, #16]
   2ba2e:	subs	r0, r1, r0
   2ba30:	ldr	r1, [sp, #52]	; 0x34
   2ba32:	sbc.w	r1, r1, r7
   2ba36:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2ba3a:	ldr	r3, [sp, #56]	; 0x38
   2ba3c:	add.w	r2, r3, r6, lsr #3
   2ba40:	movs	r3, #255	; 0xff
   2ba42:	subs	r7, r0, r6
   2ba44:	and.w	r6, r6, #7
   2ba48:	rsb	r1, r6, #8
   2ba4c:	lsl.w	r6, r3, r6
   2ba50:	uxtb	r6, r6
   2ba52:	subs	r1, r7, r1
   2ba54:	bpl.n	2ba76 <btrfs_abort_transaction@@Base+0x702>
   2ba56:	cbz	r7, 2ba6a <btrfs_abort_transaction@@Base+0x6f6>
   2ba58:	negs	r0, r0
   2ba5a:	movs	r3, #255	; 0xff
   2ba5c:	and.w	r0, r0, #7
   2ba60:	ldrb	r1, [r2, #0]
   2ba62:	asrs	r3, r0
   2ba64:	ands	r3, r6
   2ba66:	orrs	r3, r1
   2ba68:	strb	r3, [r2, #0]
   2ba6a:	ldr	r3, [r4, #32]
   2ba6c:	add.w	r9, r9, #1
   2ba70:	subs	r3, #1
   2ba72:	str	r3, [r4, #32]
   2ba74:	b.n	2b8ae <btrfs_abort_transaction@@Base+0x53a>
   2ba76:	ldrb	r3, [r2, #0]
   2ba78:	mov	r7, r1
   2ba7a:	movs	r1, #8
   2ba7c:	orrs	r3, r6
   2ba7e:	movs	r6, #255	; 0xff
   2ba80:	strb.w	r3, [r2], #1
   2ba84:	b.n	2ba52 <btrfs_abort_transaction@@Base+0x6de>
   2ba86:	ldr.w	r1, [pc, #1324]	; 2bfb4 <btrfs_abort_transaction@@Base+0xc40>
   2ba8a:	movs	r2, #243	; 0xf3
   2ba8c:	ldr.w	r0, [pc, #1320]	; 2bfb8 <btrfs_abort_transaction@@Base+0xc44>
   2ba90:	add	r1, pc
   2ba92:	adds	r1, #43	; 0x2b
   2ba94:	add	r0, pc
   2ba96:	bl	2b4f8 <btrfs_abort_transaction@@Base+0x184>
   2ba9a:	ldr	r0, [r4, #0]
   2ba9c:	add.w	r2, r0, #96	; 0x60
   2baa0:	add	r3, r2
   2baa2:	ldr	r2, [r3, #4]
   2baa4:	ldr.w	r9, [r3]
   2baa8:	orr.w	r2, r2, #1
   2baac:	str	r2, [r3, #4]
   2baae:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2bab2:	mov	r0, r4
   2bab4:	bl	17e58 <btrfs_release_path@@Base>
   2bab8:	cmp	r9, r7
   2baba:	beq.n	2baf2 <btrfs_abort_transaction@@Base+0x77e>
   2babc:	ldr	r2, [sp, #64]	; 0x40
   2babe:	ldr.w	r3, [pc, #1276]	; 2bfbc <btrfs_abort_transaction@@Base+0xc48>
   2bac2:	ldr	r3, [r2, r3]
   2bac4:	strd	r7, r9, [sp, #8]
   2bac8:	ldrd	r0, r1, [fp, #40]	; 0x28
   2bacc:	ldr.w	r2, [pc, #1264]	; 2bfc0 <btrfs_abort_transaction@@Base+0xc4c>
   2bad0:	strd	r0, r1, [sp]
   2bad4:	add	r2, pc
   2bad6:	mov	r1, r8
   2bad8:	ldr	r0, [r3, #0]
   2bada:	blx	881c <__fprintf_chk@plt+0x4>
   2bade:	ldr.w	r1, [pc, #1252]	; 2bfc4 <btrfs_abort_transaction@@Base+0xc50>
   2bae2:	ldr.w	r0, [pc, #1252]	; 2bfc8 <btrfs_abort_transaction@@Base+0xc54>
   2bae6:	movw	r2, #271	; 0x10f
   2baea:	add	r1, pc
   2baec:	adds	r1, #43	; 0x2b
   2baee:	add	r0, pc
   2baf0:	b.n	2ba96 <btrfs_abort_transaction@@Base+0x722>
   2baf2:	ldr	r3, [sp, #40]	; 0x28
   2baf4:	mov.w	fp, #0
   2baf8:	ldr.w	r8, [sp, #56]	; 0x38
   2bafc:	mov.w	r9, #200	; 0xc8
   2bb00:	ldr.w	r3, [r3, #388]	; 0x184
   2bb04:	lsls	r3, r3, #11
   2bb06:	mov	sl, r3
   2bb08:	ldrd	r2, r3, [sp, #16]
   2bb0c:	ldrd	r0, r1, [sp, #24]
   2bb10:	cmp	r3, r1
   2bb12:	it	eq
   2bb14:	cmpeq	r2, r0
   2bb16:	bcs.w	2b976 <btrfs_abort_transaction@@Base+0x602>
   2bb1a:	ldr	r2, [sp, #16]
   2bb1c:	ldr	r3, [sp, #24]
   2bb1e:	subs	r3, r3, r2
   2bb20:	ldr	r2, [sp, #20]
   2bb22:	str	r3, [sp, #32]
   2bb24:	ldr	r3, [sp, #28]
   2bb26:	sbc.w	r3, r3, r2
   2bb2a:	str	r3, [sp, #36]	; 0x24
   2bb2c:	ldrd	r2, r3, [sp, #32]
   2bb30:	cmp	fp, r3
   2bb32:	ldr	r3, [sp, #40]	; 0x28
   2bb34:	it	eq
   2bb36:	cmpeq	sl, r2
   2bb38:	it	cc
   2bb3a:	strdcc	sl, fp, [sp, #32]
   2bb3e:	ldrd	r0, r1, [sp, #32]
   2bb42:	ldr.w	r2, [r3, #388]	; 0x184
   2bb46:	movs	r3, #0
   2bb48:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2bb4c:	ldr	r3, [sp, #16]
   2bb4e:	vmov	r1, s16
   2bb52:	mov	r2, r4
   2bb54:	strb.w	r9, [sp, #84]	; 0x54
   2bb58:	str	r3, [sp, #76]	; 0x4c
   2bb5a:	ldr	r3, [sp, #20]
   2bb5c:	str	r3, [sp, #80]	; 0x50
   2bb5e:	ldr	r3, [sp, #32]
   2bb60:	str.w	r3, [sp, #85]	; 0x55
   2bb64:	ldr	r3, [sp, #36]	; 0x24
   2bb66:	str.w	r3, [sp, #89]	; 0x59
   2bb6a:	movs	r3, #1
   2bb6c:	str	r3, [sp, #4]
   2bb6e:	add	r3, sp, #72	; 0x48
   2bb70:	str	r3, [sp, #0]
   2bb72:	add	r3, sp, #76	; 0x4c
   2bb74:	adds	r0, #7
   2bb76:	lsrs	r7, r0, #3
   2bb78:	mov	r0, r5
   2bb7a:	str	r7, [sp, #72]	; 0x48
   2bb7c:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2bb80:	cbnz	r0, 2bbc4 <btrfs_abort_transaction@@Base+0x850>
   2bb82:	ldr	r0, [r4, #0]
   2bb84:	movs	r2, #25
   2bb86:	ldr	r3, [r4, #32]
   2bb88:	mov	r1, r8
   2bb8a:	add	r8, r7
   2bb8c:	str	r0, [sp, #48]	; 0x30
   2bb8e:	mla	r3, r2, r3, r0
   2bb92:	ldr.w	r2, [r3, #214]	; 0xd6
   2bb96:	mov	r3, r7
   2bb98:	adds	r2, #101	; 0x65
   2bb9a:	bl	17330 <write_extent_buffer@@Base>
   2bb9e:	ldr	r0, [sp, #48]	; 0x30
   2bba0:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2bba4:	mov	r0, r4
   2bba6:	bl	17e58 <btrfs_release_path@@Base>
   2bbaa:	ldr	r3, [sp, #16]
   2bbac:	ldr	r2, [sp, #32]
   2bbae:	adds	r3, r3, r2
   2bbb0:	ldr	r2, [sp, #36]	; 0x24
   2bbb2:	str	r3, [sp, #16]
   2bbb4:	ldr	r3, [sp, #20]
   2bbb6:	adc.w	r3, r2, r3
   2bbba:	str	r3, [sp, #20]
   2bbbc:	b.n	2bb08 <btrfs_abort_transaction@@Base+0x794>
   2bbbe:	mvn.w	r6, #11
   2bbc2:	b.n	2b976 <btrfs_abort_transaction@@Base+0x602>
   2bbc4:	mov	r6, r0
   2bbc6:	b.n	2b976 <btrfs_abort_transaction@@Base+0x602>
   2bbc8:	ldr.w	r3, [fp, #116]	; 0x74
   2bbcc:	cmp	r7, r3
   2bbce:	bcs.w	2bf78 <btrfs_abort_transaction@@Base+0xc04>
   2bbd2:	ldr	r3, [r5, #0]
   2bbd4:	str	r3, [sp, #16]
   2bbd6:	ldr	r3, [r3, #48]	; 0x30
   2bbd8:	ldr.w	r6, [fp, #49]	; 0x31
   2bbdc:	ldr.w	r7, [fp, #53]	; 0x35
   2bbe0:	vmov	s16, r3
   2bbe4:	ldr	r3, [sp, #16]
   2bbe6:	mov	r0, r6
   2bbe8:	mov	r1, r7
   2bbea:	ldr.w	r2, [r3, #388]	; 0x184
   2bbee:	movs	r3, #0
   2bbf0:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2bbf4:	adds	r1, r0, #7
   2bbf6:	mov	r0, r8
   2bbf8:	lsrs	r1, r1, #3
   2bbfa:	subs	r1, #1
   2bbfc:	orr.w	r1, r1, #3
   2bc00:	adds	r1, #1
   2bc02:	blx	8358 <calloc@plt+0x4>
   2bc06:	mov	r8, r0
   2bc08:	cmp	r0, #0
   2bc0a:	beq.w	2bf6e <btrfs_abort_transaction@@Base+0xbfa>
   2bc0e:	ldrd	r2, r3, [fp, #40]	; 0x28
   2bc12:	ldr.w	r9, [pc, #952]	; 2bfcc <btrfs_abort_transaction@@Base+0xc58>
   2bc16:	strd	r2, r3, [sp, #24]
   2bc1a:	add	r9, pc
   2bc1c:	ldr	r3, [sp, #24]
   2bc1e:	add.w	r9, r9, #73	; 0x49
   2bc22:	adds	r3, r6, r3
   2bc24:	str	r3, [sp, #40]	; 0x28
   2bc26:	ldr	r3, [sp, #28]
   2bc28:	adc.w	r3, r7, r3
   2bc2c:	str	r3, [sp, #44]	; 0x2c
   2bc2e:	ldr	r3, [sp, #40]	; 0x28
   2bc30:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2bc34:	ldr	r3, [sp, #44]	; 0x2c
   2bc36:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2bc3a:	strd	r2, r3, [sp, #76]	; 0x4c
   2bc3e:	movs	r2, #255	; 0xff
   2bc40:	strb.w	r2, [sp, #84]	; 0x54
   2bc44:	strb.w	r2, [sp, #85]	; 0x55
   2bc48:	strb.w	r2, [sp, #86]	; 0x56
   2bc4c:	strb.w	r2, [sp, #87]	; 0x57
   2bc50:	strb.w	r2, [sp, #88]	; 0x58
   2bc54:	strb.w	r2, [sp, #89]	; 0x59
   2bc58:	strb.w	r2, [sp, #90]	; 0x5a
   2bc5c:	strb.w	r2, [sp, #91]	; 0x5b
   2bc60:	strb.w	r2, [sp, #92]	; 0x5c
   2bc64:	mov.w	r3, #4294967295	; 0xffffffff
   2bc68:	vmov	r1, s16
   2bc6c:	str	r3, [sp, #0]
   2bc6e:	add	r2, sp, #76	; 0x4c
   2bc70:	mov	r3, r4
   2bc72:	mov	r0, r5
   2bc74:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2bc78:	mov	r6, r0
   2bc7a:	cmp	r0, #0
   2bc7c:	bne.n	2bd42 <btrfs_abort_transaction@@Base+0x9ce>
   2bc7e:	ldr	r3, [r4, #32]
   2bc80:	ldr	r7, [r4, #0]
   2bc82:	adds	r3, #1
   2bc84:	str	r3, [r4, #32]
   2bc86:	ldr	r3, [pc, #840]	; (2bfd0 <btrfs_abort_transaction@@Base+0xc5c>)
   2bc88:	str	r0, [sp, #48]	; 0x30
   2bc8a:	add	r3, pc
   2bc8c:	vmov	s17, r3
   2bc90:	ldr	r2, [r4, #32]
   2bc92:	cmp	r2, #0
   2bc94:	bgt.n	2bc9a <btrfs_abort_transaction@@Base+0x926>
   2bc96:	movs	r7, #0
   2bc98:	b.n	2bd06 <btrfs_abort_transaction@@Base+0x992>
   2bc9a:	subs	r2, #1
   2bc9c:	add	r1, sp, #96	; 0x60
   2bc9e:	mov	r0, r7
   2bca0:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2bca4:	ldrb.w	r3, [sp, #104]	; 0x68
   2bca8:	cmp	r3, #198	; 0xc6
   2bcaa:	bne.n	2bd46 <btrfs_abort_transaction@@Base+0x9d2>
   2bcac:	ldrd	r2, r3, [fp, #40]	; 0x28
   2bcb0:	ldrd	r6, r7, [sp, #96]	; 0x60
   2bcb4:	ldr	r0, [pc, #796]	; (2bfd4 <btrfs_abort_transaction@@Base+0xc60>)
   2bcb6:	cmp	r7, r3
   2bcb8:	mov.w	r7, #1
   2bcbc:	it	eq
   2bcbe:	cmpeq	r6, r2
   2bcc0:	ldr	r6, [pc, #788]	; (2bfd8 <btrfs_abort_transaction@@Base+0xc64>)
   2bcc2:	add	r0, pc
   2bcc4:	mov.w	r2, #360	; 0x168
   2bcc8:	add	r6, pc
   2bcca:	it	eq
   2bccc:	moveq	r3, #1
   2bcce:	add.w	r6, r6, #73	; 0x49
   2bcd2:	it	ne
   2bcd4:	movne	r3, #0
   2bcd6:	mov	r1, r6
   2bcd8:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2bcdc:	ldr.w	r3, [fp, #53]	; 0x35
   2bce0:	ldr.w	r1, [sp, #109]	; 0x6d
   2bce4:	ldr.w	r0, [sp, #105]	; 0x69
   2bce8:	ldr.w	r2, [fp, #49]	; 0x31
   2bcec:	cmp	r1, r3
   2bcee:	mov	r1, r6
   2bcf0:	it	eq
   2bcf2:	cmpeq	r0, r2
   2bcf4:	ldr	r0, [pc, #740]	; (2bfdc <btrfs_abort_transaction@@Base+0xc68>)
   2bcf6:	movw	r2, #361	; 0x169
   2bcfa:	add	r0, pc
   2bcfc:	ite	eq
   2bcfe:	moveq	r3, #1
   2bd00:	movne	r3, #0
   2bd02:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2bd06:	ldr	r3, [sp, #48]	; 0x30
   2bd08:	mov	r2, r4
   2bd0a:	vmov	r1, s16
   2bd0e:	mov	r0, r5
   2bd10:	str	r3, [sp, #0]
   2bd12:	ldr	r3, [r4, #32]
   2bd14:	bl	1b3f8 <btrfs_del_items@@Base>
   2bd18:	mov	r6, r0
   2bd1a:	cbnz	r0, 2bd42 <btrfs_abort_transaction@@Base+0x9ce>
   2bd1c:	mov	r0, r4
   2bd1e:	bl	17e58 <btrfs_release_path@@Base>
   2bd22:	cmp	r7, #0
   2bd24:	beq.n	2bc64 <btrfs_abort_transaction@@Base+0x8f0>
   2bd26:	ldr	r1, [sp, #16]
   2bd28:	movs	r3, #1
   2bd2a:	mov	r2, fp
   2bd2c:	str	r3, [sp, #0]
   2bd2e:	mov	r0, r5
   2bd30:	mov	r3, r4
   2bd32:	ldr	r1, [r1, #48]	; 0x30
   2bd34:	bl	2b3e4 <btrfs_abort_transaction@@Base+0x70>
   2bd38:	cmn.w	r0, #4096	; 0x1000
   2bd3c:	mov	r3, r0
   2bd3e:	bls.n	2be38 <btrfs_abort_transaction@@Base+0xac4>
   2bd40:	mov	r6, r0
   2bd42:	mov	r0, r8
   2bd44:	b.n	2b978 <btrfs_abort_transaction@@Base+0x604>
   2bd46:	cmp	r3, #200	; 0xc8
   2bd48:	bne.n	2be28 <btrfs_abort_transaction@@Base+0xab4>
   2bd4a:	ldrd	r2, r3, [sp, #96]	; 0x60
   2bd4e:	ldrd	r0, r1, [sp, #24]
   2bd52:	cmp	r3, r1
   2bd54:	strd	r2, r3, [sp, #32]
   2bd58:	it	eq
   2bd5a:	cmpeq	r2, r0
   2bd5c:	mov	r1, r9
   2bd5e:	vmov	r0, s17
   2bd62:	movw	r2, #369	; 0x171
   2bd66:	ite	cs
   2bd68:	movcs	r3, #1
   2bd6a:	movcc	r3, #0
   2bd6c:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2bd70:	ldrd	r2, r3, [sp, #32]
   2bd74:	ldrd	r0, r1, [sp, #40]	; 0x28
   2bd78:	cmp	r3, r1
   2bd7a:	mov	r1, r9
   2bd7c:	it	eq
   2bd7e:	cmpeq	r2, r0
   2bd80:	ldr	r0, [pc, #604]	; (2bfe0 <btrfs_abort_transaction@@Base+0xc6c>)
   2bd82:	mov.w	r2, #370	; 0x172
   2bd86:	ite	cc
   2bd88:	movcc	r3, #1
   2bd8a:	movcs	r3, #0
   2bd8c:	add	r0, pc
   2bd8e:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2bd92:	ldr.w	r6, [sp, #105]	; 0x69
   2bd96:	ldr	r3, [sp, #32]
   2bd98:	ldr.w	sl, [sp, #109]	; 0x6d
   2bd9c:	adds	r3, r3, r6
   2bd9e:	str	r3, [sp, #56]	; 0x38
   2bda0:	ldr	r3, [sp, #36]	; 0x24
   2bda2:	adc.w	r3, r3, sl
   2bda6:	str	r3, [sp, #60]	; 0x3c
   2bda8:	ldrd	r0, r1, [sp, #56]	; 0x38
   2bdac:	ldrd	r2, r3, [sp, #40]	; 0x28
   2bdb0:	cmp	r3, r1
   2bdb2:	mov	r1, r9
   2bdb4:	it	eq
   2bdb6:	cmpeq	r2, r0
   2bdb8:	ldr	r0, [pc, #552]	; (2bfe4 <btrfs_abort_transaction@@Base+0xc70>)
   2bdba:	movw	r2, #371	; 0x173
   2bdbe:	ite	cs
   2bdc0:	movcs	r3, #1
   2bdc2:	movcc	r3, #0
   2bdc4:	add	r0, pc
   2bdc6:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2bdca:	ldr	r3, [sp, #16]
   2bdcc:	mov	r0, r6
   2bdce:	mov	r1, sl
   2bdd0:	ldr.w	r2, [r3, #388]	; 0x184
   2bdd4:	movs	r3, #0
   2bdd6:	str	r2, [sp, #68]	; 0x44
   2bdd8:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2bddc:	ldr	r3, [r4, #32]
   2bdde:	movs	r1, #25
   2bde0:	ldr	r2, [sp, #68]	; 0x44
   2bde2:	subs	r3, #1
   2bde4:	mla	r3, r1, r3, r7
   2bde8:	ldr	r1, [sp, #32]
   2bdea:	lsls	r2, r2, #3
   2bdec:	ldr.w	sl, [r3, #214]	; 0xd6
   2bdf0:	movs	r3, #0
   2bdf2:	add.w	sl, sl, #101	; 0x65
   2bdf6:	adds	r0, #7
   2bdf8:	lsrs	r6, r0, #3
   2bdfa:	ldr	r0, [sp, #24]
   2bdfc:	subs	r0, r1, r0
   2bdfe:	ldr	r1, [sp, #36]	; 0x24
   2be00:	mov	ip, r1
   2be02:	ldr	r1, [sp, #28]
   2be04:	sbc.w	r1, ip, r1
   2be08:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2be0c:	mov	r3, r6
   2be0e:	mov	r2, sl
   2be10:	add.w	r1, r8, r0
   2be14:	mov	r0, r7
   2be16:	bl	1731a <read_extent_buffer@@Base>
   2be1a:	ldr	r3, [sp, #48]	; 0x30
   2be1c:	adds	r3, #1
   2be1e:	str	r3, [sp, #48]	; 0x30
   2be20:	ldr	r3, [r4, #32]
   2be22:	subs	r3, #1
   2be24:	str	r3, [r4, #32]
   2be26:	b.n	2bc90 <btrfs_abort_transaction@@Base+0x91c>
   2be28:	ldr	r1, [pc, #444]	; (2bfe8 <btrfs_abort_transaction@@Base+0xc74>)
   2be2a:	movw	r2, #387	; 0x183
   2be2e:	ldr	r0, [pc, #444]	; (2bfec <btrfs_abort_transaction@@Base+0xc78>)
   2be30:	add	r1, pc
   2be32:	adds	r1, #73	; 0x49
   2be34:	add	r0, pc
   2be36:	b.n	2ba96 <btrfs_abort_transaction@@Base+0x722>
   2be38:	ldr	r0, [r4, #0]
   2be3a:	add.w	r2, r0, #96	; 0x60
   2be3e:	add	r3, r2
   2be40:	ldr	r2, [r3, #4]
   2be42:	bic.w	r2, r2, #1
   2be46:	str	r2, [r3, #4]
   2be48:	ldr	r3, [r3, #0]
   2be4a:	str	r3, [sp, #40]	; 0x28
   2be4c:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2be50:	mov	r0, r4
   2be52:	bl	17e58 <btrfs_release_path@@Base>
   2be56:	ldr	r3, [sp, #16]
   2be58:	ldr.w	r0, [fp, #49]	; 0x31
   2be5c:	ldr.w	r1, [fp, #53]	; 0x35
   2be60:	ldr.w	r2, [r3, #388]	; 0x184
   2be64:	mov	r3, r6
   2be66:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2be6a:	mov	r9, r0
   2be6c:	cmp	r0, #0
   2be6e:	beq.n	2bf6a <btrfs_abort_transaction@@Base+0xbf6>
   2be70:	mov	r3, r6
   2be72:	mov	r1, r0
   2be74:	mov	r2, r6
   2be76:	mov	r0, r8
   2be78:	bl	2b494 <btrfs_abort_transaction@@Base+0x120>
   2be7c:	ldr	r3, [pc, #368]	; (2bff0 <btrfs_abort_transaction@@Base+0xc7c>)
   2be7e:	str	r6, [sp, #32]
   2be80:	add	r3, pc
   2be82:	adds	r3, #73	; 0x49
   2be84:	vmov	s17, r3
   2be88:	ldr	r3, [pc, #360]	; (2bff4 <btrfs_abort_transaction@@Base+0xc80>)
   2be8a:	add	r3, pc
   2be8c:	vmov	s18, r3
   2be90:	mov	r7, r0
   2be92:	cmp	r9, r7
   2be94:	bhi.n	2bed2 <btrfs_abort_transaction@@Base+0xb5e>
   2be96:	ldr	r3, [sp, #32]
   2be98:	ldr	r2, [sp, #40]	; 0x28
   2be9a:	cmp	r3, r2
   2be9c:	beq.w	2bd42 <btrfs_abort_transaction@@Base+0x9ce>
   2bea0:	ldr	r2, [sp, #64]	; 0x40
   2bea2:	ldr	r3, [pc, #280]	; (2bfbc <btrfs_abort_transaction@@Base+0xc48>)
   2bea4:	ldr	r3, [r2, r3]
   2bea6:	ldr	r2, [sp, #40]	; 0x28
   2bea8:	str	r2, [sp, #12]
   2beaa:	ldr	r2, [sp, #32]
   2beac:	str	r2, [sp, #8]
   2beae:	ldrd	r0, r1, [fp, #40]	; 0x28
   2beb2:	ldr	r2, [pc, #324]	; (2bff8 <btrfs_abort_transaction@@Base+0xc84>)
   2beb4:	strd	r0, r1, [sp]
   2beb8:	add	r2, pc
   2beba:	movs	r1, #1
   2bebc:	ldr	r0, [r3, #0]
   2bebe:	blx	881c <__fprintf_chk@plt+0x4>
   2bec2:	ldr	r1, [pc, #312]	; (2bffc <btrfs_abort_transaction@@Base+0xc88>)
   2bec4:	ldr	r0, [pc, #312]	; (2c000 <btrfs_abort_transaction@@Base+0xc8c>)
   2bec6:	mov.w	r2, #436	; 0x1b4
   2beca:	add	r1, pc
   2becc:	adds	r1, #73	; 0x49
   2bece:	add	r0, pc
   2bed0:	b.n	2ba96 <btrfs_abort_transaction@@Base+0x722>
   2bed2:	mov.w	r3, #4294967295	; 0xffffffff
   2bed6:	mov	r2, r7
   2bed8:	mov	r1, r9
   2beda:	mov	r0, r8
   2bedc:	bl	2b494 <btrfs_abort_transaction@@Base+0x120>
   2bee0:	vmov	r1, s17
   2bee4:	movw	r2, #415	; 0x19f
   2bee8:	cmp	r7, r0
   2beea:	mov	sl, r0
   2beec:	vmov	r0, s18
   2bef0:	ite	cs
   2bef2:	movcs	r3, #0
   2bef4:	movcc	r3, #1
   2bef6:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2befa:	ldr	r3, [sp, #16]
   2befc:	ldrd	r0, r1, [sp, #24]
   2bf00:	ldr.w	r3, [r3, #388]	; 0x184
   2bf04:	mul.w	r2, r3, r7
   2bf08:	sub.w	r7, sl, r7
   2bf0c:	muls	r3, r7
   2bf0e:	adds	r0, r0, r2
   2bf10:	adc.w	r1, r1, #0
   2bf14:	movs	r2, #199	; 0xc7
   2bf16:	strd	r0, r1, [sp, #76]	; 0x4c
   2bf1a:	mov	r0, r5
   2bf1c:	strb.w	r2, [sp, #84]	; 0x54
   2bf20:	movs	r2, #0
   2bf22:	vmov	r1, s16
   2bf26:	str.w	r3, [sp, #85]	; 0x55
   2bf2a:	movs	r3, #1
   2bf2c:	str.w	r2, [sp, #89]	; 0x59
   2bf30:	str	r2, [sp, #72]	; 0x48
   2bf32:	mov	r2, r4
   2bf34:	str	r3, [sp, #4]
   2bf36:	add	r3, sp, #72	; 0x48
   2bf38:	str	r3, [sp, #0]
   2bf3a:	add	r3, sp, #76	; 0x4c
   2bf3c:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2bf40:	mov	r7, r0
   2bf42:	cbnz	r0, 2bf74 <btrfs_abort_transaction@@Base+0xc00>
   2bf44:	mov	r0, r4
   2bf46:	bl	17e58 <btrfs_release_path@@Base>
   2bf4a:	ldr	r3, [sp, #32]
   2bf4c:	cmp	r9, sl
   2bf4e:	add.w	r3, r3, #1
   2bf52:	str	r3, [sp, #32]
   2bf54:	bls.n	2bf66 <btrfs_abort_transaction@@Base+0xbf2>
   2bf56:	mov	r3, r7
   2bf58:	mov	r2, sl
   2bf5a:	mov	r1, r9
   2bf5c:	mov	r0, r8
   2bf5e:	bl	2b494 <btrfs_abort_transaction@@Base+0x120>
   2bf62:	mov	r7, r0
   2bf64:	b.n	2be92 <btrfs_abort_transaction@@Base+0xb1e>
   2bf66:	mov	r7, r9
   2bf68:	b.n	2be92 <btrfs_abort_transaction@@Base+0xb1e>
   2bf6a:	str	r6, [sp, #32]
   2bf6c:	b.n	2be96 <btrfs_abort_transaction@@Base+0xb22>
   2bf6e:	mvn.w	r6, #11
   2bf72:	b.n	2bd42 <btrfs_abort_transaction@@Base+0x9ce>
   2bf74:	mov	r6, r0
   2bf76:	b.n	2bd42 <btrfs_abort_transaction@@Base+0x9ce>
   2bf78:	movs	r6, #0
   2bf7a:	b.n	2b7a2 <btrfs_abort_transaction@@Base+0x42e>
   2bf7c:	mov	r0, r6
   2bf7e:	add	sp, #124	; 0x7c
   2bf80:	vpop	{d8-d9}
   2bf84:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bf88:	str	r6, [sp, #88]	; 0x58
   2bf8a:	movs	r3, r0
   2bf8c:	str	r6, [sp, #64]	; 0x40
   2bf8e:	movs	r3, r0
   2bf90:	lsls	r4, r4, #8
   2bf92:	movs	r0, r0
   2bf94:	str	r5, [sp, #888]	; 0x378
   2bf96:	movs	r3, r0
   2bf98:	ldrsb	r1, [r3, r6]
   2bf9a:	movs	r1, r0
   2bf9c:	strh	r1, [r1, r4]
   2bf9e:	movs	r1, r0
   2bfa0:	ldrsb	r3, [r4, r3]
   2bfa2:	movs	r1, r0
   2bfa4:	strh	r1, [r3, r1]
   2bfa6:	movs	r1, r0
   2bfa8:	strh	r7, [r3, r1]
   2bfaa:	movs	r1, r0
   2bfac:	strh	r3, [r1, r0]
   2bfae:	movs	r1, r0
   2bfb0:	str	r4, [r4, r7]
   2bfb2:	movs	r1, r0
   2bfb4:	strb	r3, [r7, r4]
   2bfb6:	movs	r1, r0
   2bfb8:	asrs	r6, r2, #3
   2bfba:	movs	r1, r0
   2bfbc:	lsls	r4, r6, #8
   2bfbe:	movs	r0, r0
   2bfc0:	str	r7, [r7, r4]
   2bfc2:	movs	r1, r0
   2bfc4:	strb	r1, [r4, r3]
   2bfc6:	movs	r1, r0
   2bfc8:	asrs	r4, r7, #1
   2bfca:	movs	r1, r0
   2bfcc:	strh	r1, [r6, r6]
   2bfce:	movs	r1, r0
   2bfd0:	ldr	r7, [pc, #156]	; (2c070 <btrfs_abort_transaction@@Base+0xcfc>)
   2bfd2:	movs	r1, r0
   2bfd4:	ldr	r6, [pc, #588]	; (2c224 <btrfs_abort_transaction@@Base+0xeb0>)
   2bfd6:	movs	r1, r0
   2bfd8:	strh	r3, [r0, r4]
   2bfda:	movs	r1, r0
   2bfdc:	ldr	r6, [pc, #556]	; (2c20c <btrfs_abort_transaction@@Base+0xe98>)
   2bfde:	movs	r1, r0
   2bfe0:	ldr	r6, [pc, #260]	; (2c0e8 <btrfs_abort_transaction@@Base+0xd74>)
   2bfe2:	movs	r1, r0
   2bfe4:	ldr	r6, [pc, #136]	; (2c070 <btrfs_abort_transaction@@Base+0xcfc>)
   2bfe6:	movs	r1, r0
   2bfe8:	str	r3, [r3, r6]
   2bfea:	movs	r1, r0
   2bfec:	lsrs	r6, r6, #20
   2bfee:	movs	r1, r0
   2bff0:	str	r3, [r1, r5]
   2bff2:	movs	r1, r0
   2bff4:	ldr	r5, [pc, #776]	; (2c300 <btrfs_abort_transaction@@Base+0xf8c>)
   2bff6:	movs	r1, r0
   2bff8:	ldr	r5, [pc, #364]	; (2c168 <btrfs_abort_transaction@@Base+0xdf4>)
   2bffa:	movs	r1, r0
   2bffc:	str	r1, [r0, r4]
   2bffe:	movs	r1, r0
   2c000:	lsrs	r4, r3, #18
   2c002:	movs	r1, r0
   2c004:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c008:	sub	sp, #156	; 0x9c
   2c00a:	mov	r4, r2
   2c00c:	ldr	r2, [pc, #900]	; (2c394 <btrfs_abort_transaction@@Base+0x1020>)
   2c00e:	ldr	r3, [sp, #200]	; 0xc8
   2c010:	mov	r5, r1
   2c012:	add	r2, pc
   2c014:	ldrd	r9, sl, [sp, #192]	; 0xc0
   2c018:	ldr	r1, [r0, #0]
   2c01a:	mov	r6, r0
   2c01c:	str	r3, [sp, #92]	; 0x5c
   2c01e:	ldr	r3, [sp, #204]	; 0xcc
   2c020:	ldr.w	r8, [r1, #48]	; 0x30
   2c024:	str	r3, [sp, #96]	; 0x60
   2c026:	ldr	r3, [pc, #880]	; (2c398 <btrfs_abort_transaction@@Base+0x1024>)
   2c028:	ldr	r3, [r2, r3]
   2c02a:	ldr	r3, [r3, #0]
   2c02c:	str	r3, [sp, #148]	; 0x94
   2c02e:	mov.w	r3, #0
   2c032:	ldrd	r2, r3, [r5, #40]	; 0x28
   2c036:	cmp	r3, sl
   2c038:	it	eq
   2c03a:	cmpeq	r2, r9
   2c03c:	bcs.n	2c0ec <btrfs_abort_transaction@@Base+0xd78>
   2c03e:	ldr.w	r3, [r1, #388]	; 0x184
   2c042:	add	r7, sp, #108	; 0x6c
   2c044:	movs	r2, #255	; 0xff
   2c046:	mov	fp, sl
   2c048:	strb.w	r2, [sp, #116]	; 0x74
   2c04c:	subs.w	sl, r9, r3
   2c050:	strb.w	r2, [sp, #117]	; 0x75
   2c054:	mov.w	r3, #0
   2c058:	strb.w	r2, [sp, #118]	; 0x76
   2c05c:	mov	r1, r8
   2c05e:	strb.w	r2, [sp, #119]	; 0x77
   2c062:	sbc.w	fp, fp, #0
   2c066:	strb.w	r2, [sp, #120]	; 0x78
   2c06a:	strb.w	r2, [sp, #121]	; 0x79
   2c06e:	strb.w	r2, [sp, #122]	; 0x7a
   2c072:	strb.w	r2, [sp, #123]	; 0x7b
   2c076:	strb.w	r2, [sp, #124]	; 0x7c
   2c07a:	mov	r2, r7
   2c07c:	str	r3, [sp, #0]
   2c07e:	mov	r3, r4
   2c080:	strd	sl, fp, [sp, #108]	; 0x6c
   2c084:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2c088:	mov	r3, r0
   2c08a:	cbnz	r0, 2c0d6 <btrfs_abort_transaction@@Base+0xd62>
   2c08c:	mov	r3, fp
   2c08e:	mov	r2, sl
   2c090:	mov	r0, r4
   2c092:	bl	2b56e <btrfs_abort_transaction@@Base+0x1fa>
   2c096:	ldr	r2, [r4, #32]
   2c098:	mov	r1, r7
   2c09a:	str	r0, [sp, #68]	; 0x44
   2c09c:	ldr	r0, [r4, #0]
   2c09e:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2c0a2:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2c0a6:	ldr.w	r2, [sp, #117]	; 0x75
   2c0aa:	ldr.w	r1, [sp, #121]	; 0x79
   2c0ae:	adds	r3, r3, r2
   2c0b0:	str	r3, [sp, #8]
   2c0b2:	adc.w	r3, r0, r1
   2c0b6:	str	r3, [sp, #12]
   2c0b8:	ldrd	r0, r1, [sp, #8]
   2c0bc:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2c0c0:	cmp	r3, r1
   2c0c2:	it	eq
   2c0c4:	cmpeq	r2, r0
   2c0c6:	bcc.n	2c134 <btrfs_abort_transaction@@Base+0xdc0>
   2c0c8:	mov	r2, r4
   2c0ca:	mov	r1, r8
   2c0cc:	mov	r0, r6
   2c0ce:	bl	2b6a8 <btrfs_abort_transaction@@Base+0x334>
   2c0d2:	mov	r3, r0
   2c0d4:	cbz	r0, 2c134 <btrfs_abort_transaction@@Base+0xdc0>
   2c0d6:	ldr	r1, [pc, #708]	; (2c39c <btrfs_abort_transaction@@Base+0x1028>)
   2c0d8:	ldr	r2, [pc, #700]	; (2c398 <btrfs_abort_transaction@@Base+0x1024>)
   2c0da:	add	r1, pc
   2c0dc:	ldr	r2, [r1, r2]
   2c0de:	ldr	r1, [r2, #0]
   2c0e0:	ldr	r2, [sp, #148]	; 0x94
   2c0e2:	eors	r1, r2
   2c0e4:	beq.w	2c38a <btrfs_abort_transaction@@Base+0x1016>
   2c0e8:	blx	84cc <__stack_chk_fail@plt>
   2c0ec:	ldr	r3, [sp, #192]	; 0xc0
   2c0ee:	movs	r2, #255	; 0xff
   2c0f0:	mov	r1, r8
   2c0f2:	strb.w	r2, [sp, #116]	; 0x74
   2c0f6:	strb.w	r2, [sp, #117]	; 0x75
   2c0fa:	str	r3, [sp, #108]	; 0x6c
   2c0fc:	ldr	r3, [sp, #196]	; 0xc4
   2c0fe:	strb.w	r2, [sp, #118]	; 0x76
   2c102:	strb.w	r2, [sp, #119]	; 0x77
   2c106:	str	r3, [sp, #112]	; 0x70
   2c108:	movs	r3, #0
   2c10a:	strb.w	r2, [sp, #120]	; 0x78
   2c10e:	strb.w	r2, [sp, #121]	; 0x79
   2c112:	strb.w	r2, [sp, #122]	; 0x7a
   2c116:	strb.w	r2, [sp, #123]	; 0x7b
   2c11a:	strb.w	r2, [sp, #124]	; 0x7c
   2c11e:	add	r2, sp, #108	; 0x6c
   2c120:	str	r3, [sp, #0]
   2c122:	mov	r3, r4
   2c124:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2c128:	mov	r3, r0
   2c12a:	cmp	r0, #0
   2c12c:	bne.n	2c0d6 <btrfs_abort_transaction@@Base+0xd62>
   2c12e:	mov.w	r3, #4294967295	; 0xffffffff
   2c132:	str	r3, [sp, #68]	; 0x44
   2c134:	ldr	r3, [sp, #92]	; 0x5c
   2c136:	str	r3, [sp, #8]
   2c138:	ldr	r3, [sp, #96]	; 0x60
   2c13a:	str	r3, [sp, #12]
   2c13c:	ldrd	r2, r3, [sp, #192]	; 0xc0
   2c140:	strd	r2, r3, [sp, #16]
   2c144:	ldr	r3, [pc, #600]	; (2c3a0 <btrfs_abort_transaction@@Base+0x102c>)
   2c146:	add	r3, pc
   2c148:	adds	r3, #103	; 0x67
   2c14a:	str	r3, [sp, #88]	; 0x58
   2c14c:	mov	fp, r3
   2c14e:	ldr	r2, [sp, #8]
   2c150:	add	r1, sp, #128	; 0x80
   2c152:	ldr	r3, [sp, #16]
   2c154:	ldr	r7, [r4, #0]
   2c156:	adds	r3, r3, r2
   2c158:	ldr	r2, [sp, #12]
   2c15a:	str	r3, [sp, #56]	; 0x38
   2c15c:	ldr	r3, [sp, #20]
   2c15e:	mov	r0, r7
   2c160:	ldr.w	r9, [r7, #92]	; 0x5c
   2c164:	adcs	r3, r2
   2c166:	ldr	r2, [r4, #32]
   2c168:	str	r3, [sp, #60]	; 0x3c
   2c16a:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2c16e:	ldrb.w	r3, [sp, #136]	; 0x88
   2c172:	ldr	r0, [pc, #560]	; (2c3a4 <btrfs_abort_transaction@@Base+0x1030>)
   2c174:	sub.w	r2, r3, #200	; 0xc8
   2c178:	ldr	r1, [sp, #88]	; 0x58
   2c17a:	negs	r3, r2
   2c17c:	add	r0, pc
   2c17e:	adcs	r3, r2
   2c180:	mov.w	r2, #502	; 0x1f6
   2c184:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c188:	ldrd	r2, r3, [sp, #128]	; 0x80
   2c18c:	strd	r2, r3, [sp, #24]
   2c190:	ldr	r1, [sp, #24]
   2c192:	ldr.w	r3, [sp, #137]	; 0x89
   2c196:	ldr.w	r2, [sp, #141]	; 0x8d
   2c19a:	adds	r3, r3, r1
   2c19c:	str	r3, [sp, #48]	; 0x30
   2c19e:	ldr	r3, [sp, #28]
   2c1a0:	ldrd	r0, r1, [sp, #24]
   2c1a4:	adc.w	r3, r2, r3
   2c1a8:	str	r3, [sp, #52]	; 0x34
   2c1aa:	ldrd	r2, r3, [sp, #16]
   2c1ae:	cmp	r3, r1
   2c1b0:	it	eq
   2c1b2:	cmpeq	r2, r0
   2c1b4:	bcc.n	2c2b2 <btrfs_abort_transaction@@Base+0xf3e>
   2c1b6:	ldrd	r0, r1, [sp, #48]	; 0x30
   2c1ba:	cmp	r3, r1
   2c1bc:	it	eq
   2c1be:	cmpeq	r2, r0
   2c1c0:	ite	cc
   2c1c2:	movcc	r3, #1
   2c1c4:	movcs	r3, #0
   2c1c6:	ldr	r0, [pc, #480]	; (2c3a8 <btrfs_abort_transaction@@Base+0x1034>)
   2c1c8:	mov.w	r2, #506	; 0x1fa
   2c1cc:	mov	r1, fp
   2c1ce:	add	r0, pc
   2c1d0:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c1d4:	ldrd	r2, r3, [sp, #24]
   2c1d8:	ldrd	r0, r1, [sp, #56]	; 0x38
   2c1dc:	cmp	r3, r1
   2c1de:	mov	r1, fp
   2c1e0:	it	eq
   2c1e2:	cmpeq	r2, r0
   2c1e4:	ldr	r0, [pc, #452]	; (2c3ac <btrfs_abort_transaction@@Base+0x1038>)
   2c1e6:	movw	r2, #507	; 0x1fb
   2c1ea:	ite	cc
   2c1ec:	movcc	r3, #1
   2c1ee:	movcs	r3, #0
   2c1f0:	add	r0, pc
   2c1f2:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c1f6:	ldrd	r2, r3, [sp, #56]	; 0x38
   2c1fa:	strd	r2, r3, [sp, #32]
   2c1fe:	ldrd	r0, r1, [sp, #32]
   2c202:	ldrd	r2, r3, [sp, #48]	; 0x30
   2c206:	cmp	r3, r1
   2c208:	ldr	r1, [sp, #16]
   2c20a:	it	eq
   2c20c:	cmpeq	r2, r0
   2c20e:	it	cc
   2c210:	strdcc	r2, r3, [sp, #32]
   2c214:	ldr	r3, [r4, #32]
   2c216:	movs	r2, #25
   2c218:	ldr	r0, [sp, #24]
   2c21a:	mla	r3, r2, r3, r7
   2c21e:	subs	r0, r1, r0
   2c220:	ldr	r1, [sp, #20]
   2c222:	ldr.w	r2, [r9, #388]	; 0x184
   2c226:	mov	ip, r1
   2c228:	ldr	r1, [sp, #28]
   2c22a:	ldr.w	sl, [r3, #214]	; 0xd6
   2c22e:	mov.w	r3, #0
   2c232:	sbc.w	r1, ip, r1
   2c236:	str	r2, [sp, #100]	; 0x64
   2c238:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2c23c:	ldr	r1, [sp, #32]
   2c23e:	ldr	r2, [sp, #100]	; 0x64
   2c240:	movs	r3, #0
   2c242:	add.w	sl, sl, #101	; 0x65
   2c246:	mov	r9, r0
   2c248:	ldr	r0, [sp, #24]
   2c24a:	subs	r0, r1, r0
   2c24c:	ldr	r1, [sp, #36]	; 0x24
   2c24e:	mov	ip, r1
   2c250:	ldr	r1, [sp, #28]
   2c252:	sbc.w	r1, ip, r1
   2c256:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2c25a:	ldr	r2, [sp, #208]	; 0xd0
   2c25c:	sub.w	r3, r0, r9
   2c260:	cbnz	r2, 2c2b6 <btrfs_abort_transaction@@Base+0xf42>
   2c262:	mov	r2, r9
   2c264:	mov	r1, sl
   2c266:	mov	r0, r7
   2c268:	bl	166b2 <extent_buffer_bitmap_set@@Base>
   2c26c:	mov	r0, r7
   2c26e:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2c272:	ldr	r2, [sp, #32]
   2c274:	ldr	r3, [sp, #16]
   2c276:	ldr	r1, [sp, #36]	; 0x24
   2c278:	subs	r3, r3, r2
   2c27a:	ldr	r2, [sp, #20]
   2c27c:	sbc.w	r2, r2, r1
   2c280:	ldr	r1, [sp, #8]
   2c282:	adds	r3, r1, r3
   2c284:	str	r3, [sp, #8]
   2c286:	ldr	r3, [sp, #12]
   2c288:	adc.w	r3, r2, r3
   2c28c:	str	r3, [sp, #12]
   2c28e:	ldrd	r2, r3, [sp, #8]
   2c292:	orrs	r3, r2
   2c294:	beq.n	2c2c2 <btrfs_abort_transaction@@Base+0xf4e>
   2c296:	mov	r2, r4
   2c298:	mov	r1, r8
   2c29a:	mov	r0, r6
   2c29c:	bl	2b6a8 <btrfs_abort_transaction@@Base+0x334>
   2c2a0:	mov	r3, r0
   2c2a2:	cmp	r0, #0
   2c2a4:	bne.w	2c0d6 <btrfs_abort_transaction@@Base+0xd62>
   2c2a8:	ldrd	r2, r3, [sp, #32]
   2c2ac:	strd	r2, r3, [sp, #16]
   2c2b0:	b.n	2c14e <btrfs_abort_transaction@@Base+0xdda>
   2c2b2:	movs	r3, #0
   2c2b4:	b.n	2c1c6 <btrfs_abort_transaction@@Base+0xe52>
   2c2b6:	mov	r2, r9
   2c2b8:	mov	r1, sl
   2c2ba:	mov	r0, r7
   2c2bc:	bl	166fa <extent_buffer_bitmap_clear@@Base>
   2c2c0:	b.n	2c26c <btrfs_abort_transaction@@Base+0xef8>
   2c2c2:	ldr	r2, [sp, #92]	; 0x5c
   2c2c4:	ldr	r3, [sp, #192]	; 0xc0
   2c2c6:	ldrd	r1, r0, [r5, #40]	; 0x28
   2c2ca:	adds	r3, r3, r2
   2c2cc:	ldr	r2, [sp, #196]	; 0xc4
   2c2ce:	str	r3, [sp, #40]	; 0x28
   2c2d0:	ldr	r3, [sp, #96]	; 0x60
   2c2d2:	adc.w	r3, r2, r3
   2c2d6:	str	r3, [sp, #44]	; 0x2c
   2c2d8:	ldr.w	r3, [r5, #49]	; 0x31
   2c2dc:	ldr.w	r2, [r5, #53]	; 0x35
   2c2e0:	adds	r3, r3, r1
   2c2e2:	str	r3, [sp, #72]	; 0x48
   2c2e4:	adc.w	r3, r2, r0
   2c2e8:	str	r3, [sp, #76]	; 0x4c
   2c2ea:	ldrd	r0, r1, [sp, #72]	; 0x48
   2c2ee:	ldrd	r2, r3, [sp, #40]	; 0x28
   2c2f2:	cmp	r3, r1
   2c2f4:	it	eq
   2c2f6:	cmpeq	r2, r0
   2c2f8:	bcs.n	2c37a <btrfs_abort_transaction@@Base+0x1006>
   2c2fa:	ldr	r2, [r4, #32]
   2c2fc:	add	r1, sp, #108	; 0x6c
   2c2fe:	ldr	r0, [r4, #0]
   2c300:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2c304:	ldrd	r3, r0, [sp, #108]	; 0x6c
   2c308:	ldr.w	r2, [sp, #117]	; 0x75
   2c30c:	ldr.w	r1, [sp, #121]	; 0x79
   2c310:	adds	r3, r3, r2
   2c312:	str	r3, [sp, #80]	; 0x50
   2c314:	adc.w	r3, r0, r1
   2c318:	str	r3, [sp, #84]	; 0x54
   2c31a:	ldrd	r0, r1, [sp, #80]	; 0x50
   2c31e:	ldrd	r2, r3, [sp, #40]	; 0x28
   2c322:	cmp	r3, r1
   2c324:	it	eq
   2c326:	cmpeq	r2, r0
   2c328:	bcs.n	2c368 <btrfs_abort_transaction@@Base+0xff4>
   2c32a:	ldrd	r2, r3, [sp, #40]	; 0x28
   2c32e:	mov	r0, r4
   2c330:	bl	2b56e <btrfs_abort_transaction@@Base+0x1fa>
   2c334:	ldr	r3, [sp, #68]	; 0x44
   2c336:	ldr	r2, [sp, #208]	; 0xd0
   2c338:	subs	r3, #1
   2c33a:	it	ne
   2c33c:	movne	r3, #1
   2c33e:	cbz	r2, 2c380 <btrfs_abort_transaction@@Base+0x100c>
   2c340:	cmp	r0, #1
   2c342:	ite	ne
   2c344:	negne	r3, r3
   2c346:	rsbeq	r3, r3, #1
   2c34a:	mov	r0, r4
   2c34c:	str	r3, [sp, #8]
   2c34e:	bl	17e58 <btrfs_release_path@@Base>
   2c352:	ldr	r3, [sp, #8]
   2c354:	cmp	r3, #0
   2c356:	beq.w	2c0d6 <btrfs_abort_transaction@@Base+0xd62>
   2c35a:	mov	r2, r4
   2c35c:	mov	r1, r5
   2c35e:	mov	r0, r6
   2c360:	bl	2b758 <btrfs_abort_transaction@@Base+0x3e4>
   2c364:	mov	r3, r0
   2c366:	b.n	2c0d6 <btrfs_abort_transaction@@Base+0xd62>
   2c368:	mov	r2, r4
   2c36a:	mov	r1, r8
   2c36c:	mov	r0, r6
   2c36e:	bl	2b6a8 <btrfs_abort_transaction@@Base+0x334>
   2c372:	mov	r3, r0
   2c374:	cmp	r0, #0
   2c376:	beq.n	2c32a <btrfs_abort_transaction@@Base+0xfb6>
   2c378:	b.n	2c0d6 <btrfs_abort_transaction@@Base+0xd62>
   2c37a:	mov.w	r0, #4294967295	; 0xffffffff
   2c37e:	b.n	2c334 <btrfs_abort_transaction@@Base+0xfc0>
   2c380:	cmp	r0, #1
   2c382:	it	eq
   2c384:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2c388:	b.n	2c34a <btrfs_abort_transaction@@Base+0xfd6>
   2c38a:	mov	r0, r3
   2c38c:	add	sp, #156	; 0x9c
   2c38e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c392:	nop
   2c394:	ldrh	r6, [r6, #42]	; 0x2a
   2c396:	movs	r3, r0
   2c398:	lsls	r4, r4, #8
   2c39a:	movs	r0, r0
   2c39c:	ldrh	r6, [r5, #36]	; 0x24
   2c39e:	movs	r3, r0
   2c3a0:	ldr	r6, [pc, #532]	; (2c5b8 <btrfs_abort_transaction@@Base+0x1244>)
   2c3a2:	movs	r1, r0
   2c3a4:	ldr	r1, [pc, #532]	; (2c5bc <btrfs_abort_transaction@@Base+0x1248>)
   2c3a6:	movs	r1, r0
   2c3a8:	ldr	r2, [pc, #584]	; (2c5f4 <btrfs_abort_transaction@@Base+0x1280>)
   2c3aa:	movs	r1, r0
   2c3ac:	ldr	r2, [pc, #624]	; (2c620 <btrfs_abort_transaction@@Base+0x12ac>)
   2c3ae:	movs	r1, r0
   2c3b0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c3b4:	sub	sp, #116	; 0x74
   2c3b6:	mov	r5, r2
   2c3b8:	ldr	r2, [pc, #1000]	; (2c7a4 <btrfs_abort_transaction@@Base+0x1430>)
   2c3ba:	ldr	r3, [sp, #160]	; 0xa0
   2c3bc:	mov	r6, r1
   2c3be:	add	r2, pc
   2c3c0:	ldr	r1, [r0, #0]
   2c3c2:	mov.w	r8, #0
   2c3c6:	mov	r7, r0
   2c3c8:	str	r3, [sp, #48]	; 0x30
   2c3ca:	mov	r0, r8
   2c3cc:	ldr	r3, [sp, #164]	; 0xa4
   2c3ce:	str	r3, [sp, #52]	; 0x34
   2c3d0:	ldr	r3, [pc, #980]	; (2c7a8 <btrfs_abort_transaction@@Base+0x1434>)
   2c3d2:	ldr	r3, [r2, r3]
   2c3d4:	mov	r2, r6
   2c3d6:	ldr	r3, [r3, #0]
   2c3d8:	str	r3, [sp, #108]	; 0x6c
   2c3da:	mov.w	r3, #0
   2c3de:	str.w	r8, [sp]
   2c3e2:	mov	r3, r5
   2c3e4:	ldr	r1, [r1, #48]	; 0x30
   2c3e6:	bl	2b3e4 <btrfs_abort_transaction@@Base+0x70>
   2c3ea:	cmn.w	r0, #4096	; 0x1000
   2c3ee:	bls.n	2c408 <btrfs_abort_transaction@@Base+0x1094>
   2c3f0:	mov	r4, r0
   2c3f2:	ldr	r2, [pc, #952]	; (2c7ac <btrfs_abort_transaction@@Base+0x1438>)
   2c3f4:	ldr	r3, [pc, #944]	; (2c7a8 <btrfs_abort_transaction@@Base+0x1434>)
   2c3f6:	add	r2, pc
   2c3f8:	ldr	r3, [r2, r3]
   2c3fa:	ldr	r2, [r3, #0]
   2c3fc:	ldr	r3, [sp, #108]	; 0x6c
   2c3fe:	eors	r2, r3
   2c400:	beq.w	2c79a <btrfs_abort_transaction@@Base+0x1426>
   2c404:	blx	84cc <__stack_chk_fail@plt>
   2c408:	ldr	r4, [r5, #0]
   2c40a:	add	r4, r0
   2c40c:	mov	r0, r5
   2c40e:	ldr	r4, [r4, #100]	; 0x64
   2c410:	bl	17e58 <btrfs_release_path@@Base>
   2c414:	lsls	r4, r4, #31
   2c416:	bpl.n	2c438 <btrfs_abort_transaction@@Base+0x10c4>
   2c418:	ldr	r3, [sp, #48]	; 0x30
   2c41a:	mov	r2, r5
   2c41c:	mov	r1, r6
   2c41e:	mov	r0, r7
   2c420:	str.w	r8, [sp, #16]
   2c424:	str	r3, [sp, #8]
   2c426:	ldr	r3, [sp, #52]	; 0x34
   2c428:	str	r3, [sp, #12]
   2c42a:	ldrd	r3, r4, [sp, #152]	; 0x98
   2c42e:	strd	r3, r4, [sp]
   2c432:	bl	2c004 <btrfs_abort_transaction@@Base+0xc90>
   2c436:	b.n	2c3f0 <btrfs_abort_transaction@@Base+0x107c>
   2c438:	ldr	r3, [r7, #0]
   2c43a:	ldrd	r0, r1, [sp, #152]	; 0x98
   2c43e:	ldr.w	sl, [r3, #48]	; 0x30
   2c442:	ldrd	r3, r4, [sp, #152]	; 0x98
   2c446:	strd	r3, r4, [sp, #88]	; 0x58
   2c44a:	movs	r3, #199	; 0xc7
   2c44c:	strb.w	r3, [sp, #96]	; 0x60
   2c450:	ldr	r3, [sp, #48]	; 0x30
   2c452:	str.w	r3, [sp, #97]	; 0x61
   2c456:	ldr	r3, [sp, #52]	; 0x34
   2c458:	str.w	r3, [sp, #101]	; 0x65
   2c45c:	ldrd	r2, r3, [r6, #40]	; 0x28
   2c460:	cmp	r1, r3
   2c462:	it	eq
   2c464:	cmpeq	r0, r2
   2c466:	beq.n	2c4ec <btrfs_abort_transaction@@Base+0x1178>
   2c468:	ldr	r3, [sp, #152]	; 0x98
   2c46a:	add.w	r8, sp, #68	; 0x44
   2c46e:	mov.w	r1, #4294967295	; 0xffffffff
   2c472:	mov	r0, r7
   2c474:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2c478:	ldr	r3, [sp, #156]	; 0x9c
   2c47a:	strb.w	r1, [sp, #77]	; 0x4d
   2c47e:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2c482:	str	r1, [sp, #0]
   2c484:	strd	r2, r3, [sp, #68]	; 0x44
   2c488:	mov	r1, sl
   2c48a:	movs	r2, #255	; 0xff
   2c48c:	mov	r3, r5
   2c48e:	strb.w	r2, [sp, #76]	; 0x4c
   2c492:	strb.w	r2, [sp, #78]	; 0x4e
   2c496:	strb.w	r2, [sp, #79]	; 0x4f
   2c49a:	strb.w	r2, [sp, #80]	; 0x50
   2c49e:	strb.w	r2, [sp, #81]	; 0x51
   2c4a2:	strb.w	r2, [sp, #82]	; 0x52
   2c4a6:	strb.w	r2, [sp, #83]	; 0x53
   2c4aa:	strb.w	r2, [sp, #84]	; 0x54
   2c4ae:	mov	r2, r8
   2c4b0:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2c4b4:	mov	r4, r0
   2c4b6:	cmp	r0, #0
   2c4b8:	bne.n	2c3f2 <btrfs_abort_transaction@@Base+0x107e>
   2c4ba:	ldr	r2, [r5, #32]
   2c4bc:	mov	r1, r8
   2c4be:	ldr	r0, [r5, #0]
   2c4c0:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2c4c4:	ldrb.w	r3, [sp, #76]	; 0x4c
   2c4c8:	cmp	r3, #199	; 0xc7
   2c4ca:	beq.n	2c4f2 <btrfs_abort_transaction@@Base+0x117e>
   2c4cc:	sub.w	r0, r3, #198	; 0xc6
   2c4d0:	ldr	r1, [pc, #732]	; (2c7b0 <btrfs_abort_transaction@@Base+0x143c>)
   2c4d2:	negs	r3, r0
   2c4d4:	movw	r2, #857	; 0x359
   2c4d8:	adcs	r3, r0
   2c4da:	ldr	r0, [pc, #728]	; (2c7b4 <btrfs_abort_transaction@@Base+0x1440>)
   2c4dc:	add	r1, pc
   2c4de:	add	r0, pc
   2c4e0:	adds	r1, #123	; 0x7b
   2c4e2:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c4e6:	mov	r0, r5
   2c4e8:	bl	17e58 <btrfs_release_path@@Base>
   2c4ec:	mov.w	fp, #1
   2c4f0:	b.n	2c5c2 <btrfs_abort_transaction@@Base+0x124e>
   2c4f2:	ldrd	r8, r9, [sp, #68]	; 0x44
   2c4f6:	ldr.w	r3, [sp, #77]	; 0x4d
   2c4fa:	ldr.w	r2, [sp, #81]	; 0x51
   2c4fe:	adds.w	r3, r3, r8
   2c502:	str	r3, [sp, #32]
   2c504:	adc.w	r3, r2, r9
   2c508:	str	r3, [sp, #36]	; 0x24
   2c50a:	ldrd	r2, r3, [r6, #40]	; 0x28
   2c50e:	cmp	r9, r3
   2c510:	it	eq
   2c512:	cmpeq	r8, r2
   2c514:	bcc.w	2c6b4 <btrfs_abort_transaction@@Base+0x1340>
   2c518:	ldrd	r0, r1, [sp, #32]
   2c51c:	cmp	r3, r1
   2c51e:	it	eq
   2c520:	cmpeq	r2, r0
   2c522:	ite	cc
   2c524:	movcc	r3, #1
   2c526:	movcs	r3, #0
   2c528:	ldr	r1, [pc, #652]	; (2c7b8 <btrfs_abort_transaction@@Base+0x1444>)
   2c52a:	mov.w	r2, #864	; 0x360
   2c52e:	ldr	r0, [pc, #652]	; (2c7bc <btrfs_abort_transaction@@Base+0x1448>)
   2c530:	add	r1, pc
   2c532:	adds	r1, #123	; 0x7b
   2c534:	add	r0, pc
   2c536:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c53a:	ldrd	r2, r3, [sp, #152]	; 0x98
   2c53e:	cmp	r9, r3
   2c540:	it	eq
   2c542:	cmpeq	r8, r2
   2c544:	bcs.n	2c55a <btrfs_abort_transaction@@Base+0x11e6>
   2c546:	mov	r4, r3
   2c548:	mov	r3, r2
   2c54a:	ldrd	r1, r2, [sp, #32]
   2c54e:	cmp	r4, r2
   2c550:	it	eq
   2c552:	cmpeq	r3, r1
   2c554:	ite	cs
   2c556:	movcs	r4, #1
   2c558:	movcc	r4, #0
   2c55a:	ldr	r1, [pc, #612]	; (2c7c0 <btrfs_abort_transaction@@Base+0x144c>)
   2c55c:	mov	r3, r4
   2c55e:	ldr	r0, [pc, #612]	; (2c7c4 <btrfs_abort_transaction@@Base+0x1450>)
   2c560:	movw	r2, #866	; 0x362
   2c564:	add	r1, pc
   2c566:	adds	r1, #123	; 0x7b
   2c568:	add	r0, pc
   2c56a:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c56e:	ldrd	r3, r4, [sp, #152]	; 0x98
   2c572:	ldrd	r1, r2, [sp, #32]
   2c576:	cmp	r4, r2
   2c578:	mov.w	r4, #1
   2c57c:	it	eq
   2c57e:	cmpeq	r3, r1
   2c580:	bne.n	2c5ba <btrfs_abort_transaction@@Base+0x1246>
   2c582:	str	r4, [sp, #0]
   2c584:	mov	r2, r5
   2c586:	ldr	r3, [r5, #32]
   2c588:	mov	r1, sl
   2c58a:	mov	r0, r7
   2c58c:	bl	1b3f8 <btrfs_del_items@@Base>
   2c590:	mov	r4, r0
   2c592:	cmp	r0, #0
   2c594:	bne.w	2c3f2 <btrfs_abort_transaction@@Base+0x107e>
   2c598:	ldr.w	r3, [sp, #97]	; 0x61
   2c59c:	ldr.w	r1, [sp, #77]	; 0x4d
   2c5a0:	ldr.w	r2, [sp, #101]	; 0x65
   2c5a4:	ldr.w	r0, [sp, #81]	; 0x51
   2c5a8:	adds	r3, r3, r1
   2c5aa:	strd	r8, r9, [sp, #88]	; 0x58
   2c5ae:	adc.w	r2, r0, r2
   2c5b2:	str.w	r3, [sp, #97]	; 0x61
   2c5b6:	str.w	r2, [sp, #101]	; 0x65
   2c5ba:	mov	r0, r5
   2c5bc:	mov	fp, r4
   2c5be:	bl	17e58 <btrfs_release_path@@Base>
   2c5c2:	ldr	r2, [sp, #48]	; 0x30
   2c5c4:	ldr	r3, [sp, #152]	; 0x98
   2c5c6:	ldrd	r1, r0, [r6, #40]	; 0x28
   2c5ca:	adds	r3, r3, r2
   2c5cc:	ldr	r2, [sp, #156]	; 0x9c
   2c5ce:	str	r3, [sp, #24]
   2c5d0:	ldr	r3, [sp, #52]	; 0x34
   2c5d2:	adc.w	r3, r2, r3
   2c5d6:	str	r3, [sp, #28]
   2c5d8:	ldr.w	r3, [r6, #49]	; 0x31
   2c5dc:	ldr.w	r2, [r6, #53]	; 0x35
   2c5e0:	adds	r3, r3, r1
   2c5e2:	str	r3, [sp, #56]	; 0x38
   2c5e4:	adc.w	r3, r2, r0
   2c5e8:	str	r3, [sp, #60]	; 0x3c
   2c5ea:	ldrd	r1, r2, [sp, #56]	; 0x38
   2c5ee:	ldrd	r3, r4, [sp, #24]
   2c5f2:	cmp	r4, r2
   2c5f4:	it	eq
   2c5f6:	cmpeq	r3, r1
   2c5f8:	beq.n	2c678 <btrfs_abort_transaction@@Base+0x1304>
   2c5fa:	ldr	r3, [sp, #24]
   2c5fc:	add.w	r8, sp, #68	; 0x44
   2c600:	movs	r2, #255	; 0xff
   2c602:	mov.w	r1, #4294967295	; 0xffffffff
   2c606:	strb.w	r2, [sp, #76]	; 0x4c
   2c60a:	mov	r0, r7
   2c60c:	str	r3, [sp, #68]	; 0x44
   2c60e:	ldr	r3, [sp, #28]
   2c610:	strb.w	r1, [sp, #77]	; 0x4d
   2c614:	strb.w	r2, [sp, #78]	; 0x4e
   2c618:	str	r3, [sp, #72]	; 0x48
   2c61a:	mov	r3, r5
   2c61c:	strb.w	r2, [sp, #79]	; 0x4f
   2c620:	strb.w	r2, [sp, #80]	; 0x50
   2c624:	strb.w	r2, [sp, #81]	; 0x51
   2c628:	strb.w	r2, [sp, #82]	; 0x52
   2c62c:	strb.w	r2, [sp, #83]	; 0x53
   2c630:	strb.w	r2, [sp, #84]	; 0x54
   2c634:	mov	r2, r8
   2c636:	str	r1, [sp, #0]
   2c638:	mov	r1, sl
   2c63a:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2c63e:	mov	r4, r0
   2c640:	cmp	r0, #0
   2c642:	bne.w	2c3f2 <btrfs_abort_transaction@@Base+0x107e>
   2c646:	ldr	r2, [r5, #32]
   2c648:	mov	r1, r8
   2c64a:	ldr	r0, [r5, #0]
   2c64c:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2c650:	ldrb.w	r3, [sp, #76]	; 0x4c
   2c654:	cmp	r3, #199	; 0xc7
   2c656:	beq.n	2c6b8 <btrfs_abort_transaction@@Base+0x1344>
   2c658:	sub.w	r1, r3, #198	; 0xc6
   2c65c:	ldr	r0, [pc, #360]	; (2c7c8 <btrfs_abort_transaction@@Base+0x1454>)
   2c65e:	negs	r3, r1
   2c660:	mov.w	r2, #896	; 0x380
   2c664:	adcs	r3, r1
   2c666:	ldr	r1, [pc, #356]	; (2c7cc <btrfs_abort_transaction@@Base+0x1458>)
   2c668:	add	r0, pc
   2c66a:	add	r1, pc
   2c66c:	adds	r1, #123	; 0x7b
   2c66e:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c672:	mov	r0, r5
   2c674:	bl	17e58 <btrfs_release_path@@Base>
   2c678:	movs	r3, #0
   2c67a:	mov	r2, r5
   2c67c:	str	r3, [sp, #64]	; 0x40
   2c67e:	mov	r1, sl
   2c680:	movs	r3, #1
   2c682:	mov	r0, r7
   2c684:	str	r3, [sp, #4]
   2c686:	add	r3, sp, #64	; 0x40
   2c688:	str	r3, [sp, #0]
   2c68a:	add	r3, sp, #88	; 0x58
   2c68c:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2c690:	mov	r4, r0
   2c692:	cmp	r0, #0
   2c694:	bne.w	2c3f2 <btrfs_abort_transaction@@Base+0x107e>
   2c698:	mov	r0, r5
   2c69a:	bl	17e58 <btrfs_release_path@@Base>
   2c69e:	cmp.w	fp, #0
   2c6a2:	beq.w	2c3f2 <btrfs_abort_transaction@@Base+0x107e>
   2c6a6:	mov	r3, fp
   2c6a8:	mov	r2, r5
   2c6aa:	mov	r1, r6
   2c6ac:	mov	r0, r7
   2c6ae:	bl	2b758 <btrfs_abort_transaction@@Base+0x3e4>
   2c6b2:	b.n	2c3f0 <btrfs_abort_transaction@@Base+0x107c>
   2c6b4:	mov	r3, r4
   2c6b6:	b.n	2c528 <btrfs_abort_transaction@@Base+0x11b4>
   2c6b8:	ldrd	r8, r9, [sp, #68]	; 0x44
   2c6bc:	ldr.w	r3, [sp, #77]	; 0x4d
   2c6c0:	ldr.w	r2, [sp, #81]	; 0x51
   2c6c4:	adds.w	r3, r3, r8
   2c6c8:	str	r3, [sp, #40]	; 0x28
   2c6ca:	adc.w	r3, r2, r9
   2c6ce:	str	r3, [sp, #44]	; 0x2c
   2c6d0:	ldrd	r2, r3, [r6, #40]	; 0x28
   2c6d4:	cmp	r9, r3
   2c6d6:	it	eq
   2c6d8:	cmpeq	r8, r2
   2c6da:	bcc.n	2c792 <btrfs_abort_transaction@@Base+0x141e>
   2c6dc:	ldrd	r0, r1, [sp, #40]	; 0x28
   2c6e0:	cmp	r3, r1
   2c6e2:	it	eq
   2c6e4:	cmpeq	r2, r0
   2c6e6:	ite	cc
   2c6e8:	movcc	r3, #1
   2c6ea:	movcs	r3, #0
   2c6ec:	ldr	r1, [pc, #224]	; (2c7d0 <btrfs_abort_transaction@@Base+0x145c>)
   2c6ee:	movw	r2, #903	; 0x387
   2c6f2:	ldr	r0, [pc, #224]	; (2c7d4 <btrfs_abort_transaction@@Base+0x1460>)
   2c6f4:	add	r1, pc
   2c6f6:	adds	r1, #123	; 0x7b
   2c6f8:	add	r0, pc
   2c6fa:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c6fe:	ldrd	r2, r3, [sp, #152]	; 0x98
   2c702:	cmp	r9, r3
   2c704:	it	eq
   2c706:	cmpeq	r8, r2
   2c708:	bcs.n	2c716 <btrfs_abort_transaction@@Base+0x13a2>
   2c70a:	ldrd	r0, r1, [sp, #40]	; 0x28
   2c70e:	cmp	r3, r1
   2c710:	it	eq
   2c712:	cmpeq	r2, r0
   2c714:	bcs.n	2c796 <btrfs_abort_transaction@@Base+0x1422>
   2c716:	ldrd	r2, r3, [sp, #24]
   2c71a:	cmp	r9, r3
   2c71c:	it	eq
   2c71e:	cmpeq	r8, r2
   2c720:	bcc.n	2c736 <btrfs_abort_transaction@@Base+0x13c2>
   2c722:	mov	r4, r3
   2c724:	mov	r3, r2
   2c726:	ldrd	r1, r2, [sp, #40]	; 0x28
   2c72a:	cmp	r4, r2
   2c72c:	it	eq
   2c72e:	cmpeq	r3, r1
   2c730:	ite	cc
   2c732:	movcc	r4, #1
   2c734:	movcs	r4, #0
   2c736:	ldr	r1, [pc, #160]	; (2c7d8 <btrfs_abort_transaction@@Base+0x1464>)
   2c738:	mov	r3, r4
   2c73a:	ldr	r0, [pc, #160]	; (2c7dc <btrfs_abort_transaction@@Base+0x1468>)
   2c73c:	movw	r2, #905	; 0x389
   2c740:	add	r1, pc
   2c742:	adds	r1, #123	; 0x7b
   2c744:	add	r0, pc
   2c746:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c74a:	ldrd	r3, r4, [sp, #24]
   2c74e:	cmp	r4, r9
   2c750:	it	eq
   2c752:	cmpeq	r3, r8
   2c754:	bne.n	2c672 <btrfs_abort_transaction@@Base+0x12fe>
   2c756:	movs	r3, #1
   2c758:	mov	r2, r5
   2c75a:	str	r3, [sp, #0]
   2c75c:	mov	r1, sl
   2c75e:	ldr	r3, [r5, #32]
   2c760:	mov	r0, r7
   2c762:	bl	1b3f8 <btrfs_del_items@@Base>
   2c766:	mov	r4, r0
   2c768:	cmp	r0, #0
   2c76a:	bne.w	2c3f2 <btrfs_abort_transaction@@Base+0x107e>
   2c76e:	ldr.w	r3, [sp, #97]	; 0x61
   2c772:	add.w	fp, fp, #4294967295	; 0xffffffff
   2c776:	ldr.w	r1, [sp, #77]	; 0x4d
   2c77a:	ldr.w	r2, [sp, #101]	; 0x65
   2c77e:	ldr.w	r0, [sp, #81]	; 0x51
   2c782:	adds	r3, r3, r1
   2c784:	str.w	r3, [sp, #97]	; 0x61
   2c788:	adc.w	r2, r0, r2
   2c78c:	str.w	r2, [sp, #101]	; 0x65
   2c790:	b.n	2c672 <btrfs_abort_transaction@@Base+0x12fe>
   2c792:	mov	r3, r4
   2c794:	b.n	2c6ec <btrfs_abort_transaction@@Base+0x1378>
   2c796:	movs	r4, #1
   2c798:	b.n	2c736 <btrfs_abort_transaction@@Base+0x13c2>
   2c79a:	mov	r0, r4
   2c79c:	add	sp, #116	; 0x74
   2c79e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c7a2:	nop
   2c7a4:	ldrh	r2, [r1, #14]
   2c7a6:	movs	r3, r0
   2c7a8:	lsls	r4, r4, #8
   2c7aa:	movs	r0, r0
   2c7ac:	ldrh	r2, [r2, #12]
   2c7ae:	movs	r3, r0
   2c7b0:	ldr	r2, [pc, #956]	; (2cb70 <populate_free_space_tree@@Base+0x6c>)
   2c7b2:	movs	r1, r0
   2c7b4:	blx	r8
   2c7b6:	movs	r1, r0
   2c7b8:	ldr	r2, [pc, #620]	; (2ca28 <remove_from_free_space_tree@@Base+0x248>)
   2c7ba:	movs	r1, r0
   2c7bc:	blx	r2
   2c7be:	movs	r1, r0
   2c7c0:	ldr	r2, [pc, #412]	; (2c960 <remove_from_free_space_tree@@Base+0x180>)
   2c7c2:	movs	r1, r0
   2c7c4:			; <UNDEFINED> instruction: 0x47ae
   2c7c6:	movs	r1, r0
   2c7c8:	mov	r6, r6
   2c7ca:	movs	r1, r0
   2c7cc:	ldr	r1, [pc, #388]	; (2c954 <remove_from_free_space_tree@@Base+0x174>)
   2c7ce:	movs	r1, r0
   2c7d0:	ldr	r0, [pc, #860]	; (2cb30 <populate_free_space_tree@@Base+0x2c>)
   2c7d2:	movs	r1, r0
   2c7d4:	cmp	ip, r9
   2c7d6:	movs	r1, r0
   2c7d8:	ldr	r0, [pc, #556]	; (2ca08 <remove_from_free_space_tree@@Base+0x228>)
   2c7da:	movs	r1, r0
   2c7dc:	cmp	ip, pc
   2c7de:	movs	r1, r0

0002c7e0 <remove_from_free_space_tree@@Base>:
   2c7e0:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c7e4:	sub	sp, #92	; 0x5c
   2c7e6:	movs	r4, #0
   2c7e8:	mov	r6, r0
   2c7ea:	strd	r2, r3, [sp, #24]
   2c7ee:	ldrd	sl, r3, [sp, #128]	; 0x80
   2c7f2:	ldr	r2, [pc, #616]	; (2ca5c <remove_from_free_space_tree@@Base+0x27c>)
   2c7f4:	str	r3, [sp, #52]	; 0x34
   2c7f6:	add	r2, pc
   2c7f8:	ldr	r3, [pc, #612]	; (2ca60 <remove_from_free_space_tree@@Base+0x280>)
   2c7fa:	ldr	r3, [r2, r3]
   2c7fc:	ldr	r3, [r3, #0]
   2c7fe:	str	r3, [sp, #84]	; 0x54
   2c800:	mov.w	r3, #0
   2c804:	ldr	r3, [r0, #0]
   2c806:	ldr.w	r3, [r3, #308]	; 0x134
   2c80a:	ldr.w	r1, [r3, #180]	; 0xb4
   2c80e:	mov	r3, r4
   2c810:	and.w	r2, r1, #1
   2c814:	orrs	r3, r2
   2c816:	beq.w	2c9ca <remove_from_free_space_tree@@Base+0x1ea>
   2c81a:	bl	17e50 <btrfs_alloc_path@@Base>
   2c81e:	mov	r5, r0
   2c820:	cmp	r0, #0
   2c822:	beq.w	2ca4e <remove_from_free_space_tree@@Base+0x26e>
   2c826:	ldrd	r2, r3, [sp, #24]
   2c82a:	ldr	r0, [r6, #0]
   2c82c:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   2c830:	mov	r8, r0
   2c832:	cbnz	r0, 2c846 <remove_from_free_space_tree@@Base+0x66>
   2c834:	ldr	r1, [pc, #556]	; (2ca64 <remove_from_free_space_tree@@Base+0x284>)
   2c836:	movw	r2, #795	; 0x31b
   2c83a:	ldr	r0, [pc, #556]	; (2ca68 <remove_from_free_space_tree@@Base+0x288>)
   2c83c:	add	r1, pc
   2c83e:	adds	r1, #145	; 0x91
   2c840:	add	r0, pc
   2c842:	bl	2b4f8 <btrfs_abort_transaction@@Base+0x184>
   2c846:	ldr	r1, [r6, #0]
   2c848:	mov	r2, r0
   2c84a:	str	r4, [sp, #0]
   2c84c:	mov	r3, r5
   2c84e:	mov	r0, r4
   2c850:	ldr	r1, [r1, #48]	; 0x30
   2c852:	bl	2b3e4 <btrfs_abort_transaction@@Base+0x70>
   2c856:	cmn.w	r0, #4096	; 0x1000
   2c85a:	bls.n	2c860 <remove_from_free_space_tree@@Base+0x80>
   2c85c:	mov	r4, r0
   2c85e:	b.n	2c9ba <remove_from_free_space_tree@@Base+0x1da>
   2c860:	ldr	r4, [r5, #0]
   2c862:	add	r4, r0
   2c864:	mov	r0, r5
   2c866:	ldr	r4, [r4, #100]	; 0x64
   2c868:	bl	17e58 <btrfs_release_path@@Base>
   2c86c:	lsls	r0, r4, #31
   2c86e:	bpl.n	2c890 <remove_from_free_space_tree@@Base+0xb0>
   2c870:	movs	r3, #1
   2c872:	str	r3, [sp, #16]
   2c874:	ldr	r3, [sp, #52]	; 0x34
   2c876:	mov	r2, r5
   2c878:	mov	r1, r8
   2c87a:	mov	r0, r6
   2c87c:	str.w	sl, [sp, #8]
   2c880:	str	r3, [sp, #12]
   2c882:	ldrd	r3, r4, [sp, #24]
   2c886:	strd	r3, r4, [sp]
   2c88a:	bl	2c004 <btrfs_abort_transaction@@Base+0xc90>
   2c88e:	b.n	2c85c <remove_from_free_space_tree@@Base+0x7c>
   2c890:	ldr	r3, [r6, #0]
   2c892:	add.w	r7, sp, #73	; 0x49
   2c896:	add.w	fp, sp, #64	; 0x40
   2c89a:	mov.w	r2, #4294967295	; 0xffffffff
   2c89e:	mov	r0, r6
   2c8a0:	strb.w	r2, [sp, #73]	; 0x49
   2c8a4:	ldr.w	r9, [r3, #48]	; 0x30
   2c8a8:	ldrd	r3, r4, [sp, #24]
   2c8ac:	mov	r1, r9
   2c8ae:	strd	r3, r4, [sp, #64]	; 0x40
   2c8b2:	movs	r3, #255	; 0xff
   2c8b4:	strb	r3, [r7, #1]
   2c8b6:	strb	r3, [r7, #2]
   2c8b8:	strb	r3, [r7, #3]
   2c8ba:	strb	r3, [r7, #4]
   2c8bc:	strb	r3, [r7, #5]
   2c8be:	strb	r3, [r7, #6]
   2c8c0:	strb	r3, [r7, #7]
   2c8c2:	strb.w	r3, [sp, #72]	; 0x48
   2c8c6:	mov	r3, r5
   2c8c8:	str	r2, [sp, #0]
   2c8ca:	mov	r2, fp
   2c8cc:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2c8d0:	mov	r4, r0
   2c8d2:	cmp	r0, #0
   2c8d4:	bne.n	2c9ba <remove_from_free_space_tree@@Base+0x1da>
   2c8d6:	ldr	r3, [sp, #24]
   2c8d8:	mov	r1, fp
   2c8da:	ldr	r2, [sp, #28]
   2c8dc:	adds.w	r3, r3, sl
   2c8e0:	str	r3, [sp, #32]
   2c8e2:	ldr	r3, [sp, #52]	; 0x34
   2c8e4:	ldr	r0, [r5, #0]
   2c8e6:	adc.w	r3, r2, r3
   2c8ea:	ldr	r2, [r5, #32]
   2c8ec:	str	r3, [sp, #36]	; 0x24
   2c8ee:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2c8f2:	ldrb.w	r3, [sp, #72]	; 0x48
   2c8f6:	movw	r2, #691	; 0x2b3
   2c8fa:	ldr	r0, [pc, #368]	; (2ca6c <remove_from_free_space_tree@@Base+0x28c>)
   2c8fc:	sub.w	r1, r3, #199	; 0xc7
   2c900:	negs	r3, r1
   2c902:	add	r0, pc
   2c904:	adcs	r3, r1
   2c906:	ldr	r1, [pc, #360]	; (2ca70 <remove_from_free_space_tree@@Base+0x290>)
   2c908:	add	r1, pc
   2c90a:	adds	r1, #173	; 0xad
   2c90c:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c910:	ldrd	sl, fp, [sp, #64]	; 0x40
   2c914:	ldr.w	r3, [sp, #73]	; 0x49
   2c918:	ldr.w	r2, [sp, #77]	; 0x4d
   2c91c:	adds.w	r3, r3, sl
   2c920:	str	r3, [sp, #40]	; 0x28
   2c922:	adc.w	r3, r2, fp
   2c926:	str	r3, [sp, #44]	; 0x2c
   2c928:	ldrd	r2, r3, [sp, #24]
   2c92c:	cmp	r3, fp
   2c92e:	it	eq
   2c930:	cmpeq	r2, sl
   2c932:	bcc.n	2c948 <remove_from_free_space_tree@@Base+0x168>
   2c934:	ldrd	r3, r4, [sp, #40]	; 0x28
   2c938:	ldrd	r1, r2, [sp, #32]
   2c93c:	cmp	r4, r2
   2c93e:	it	eq
   2c940:	cmpeq	r3, r1
   2c942:	ite	cs
   2c944:	movcs	r4, #1
   2c946:	movcc	r4, #0
   2c948:	ldr	r1, [pc, #296]	; (2ca74 <remove_from_free_space_tree@@Base+0x294>)
   2c94a:	mov	r3, r4
   2c94c:	ldr	r0, [pc, #296]	; (2ca78 <remove_from_free_space_tree@@Base+0x298>)
   2c94e:	movw	r2, #695	; 0x2b7
   2c952:	add	r1, pc
   2c954:	adds	r1, #173	; 0xad
   2c956:	add	r0, pc
   2c958:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2c95c:	movs	r3, #1
   2c95e:	mov	r2, r5
   2c960:	str	r3, [sp, #0]
   2c962:	mov	r1, r9
   2c964:	ldr	r3, [r5, #32]
   2c966:	mov	r0, r6
   2c968:	bl	1b3f8 <btrfs_del_items@@Base>
   2c96c:	mov	r4, r0
   2c96e:	cbnz	r0, 2c9ba <remove_from_free_space_tree@@Base+0x1da>
   2c970:	ldrd	r2, r3, [sp, #24]
   2c974:	cmp	fp, r3
   2c976:	it	eq
   2c978:	cmpeq	sl, r2
   2c97a:	bcs.n	2c9de <remove_from_free_space_tree@@Base+0x1fe>
   2c97c:	movs	r3, #199	; 0xc7
   2c97e:	strb.w	r3, [sp, #72]	; 0x48
   2c982:	ldr	r3, [sp, #24]
   2c984:	mov	r0, r5
   2c986:	strd	sl, fp, [sp, #64]	; 0x40
   2c98a:	subs.w	r2, r3, sl
   2c98e:	ldr	r3, [sp, #28]
   2c990:	str.w	r2, [sp, #73]	; 0x49
   2c994:	sbc.w	r3, r3, fp
   2c998:	str.w	r3, [sp, #77]	; 0x4d
   2c99c:	bl	17e58 <btrfs_release_path@@Base>
   2c9a0:	movs	r3, #1
   2c9a2:	mov	r2, r5
   2c9a4:	str	r3, [sp, #4]
   2c9a6:	mov	r1, r9
   2c9a8:	add	r3, sp, #60	; 0x3c
   2c9aa:	mov	r0, r6
   2c9ac:	str	r3, [sp, #0]
   2c9ae:	add	r3, sp, #64	; 0x40
   2c9b0:	str	r4, [sp, #60]	; 0x3c
   2c9b2:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2c9b6:	mov	r4, r0
   2c9b8:	cbz	r0, 2c9e2 <remove_from_free_space_tree@@Base+0x202>
   2c9ba:	mov	r0, r5
   2c9bc:	bl	17e7e <btrfs_free_path@@Base>
   2c9c0:	cbz	r4, 2c9ca <remove_from_free_space_tree@@Base+0x1ea>
   2c9c2:	mov	r1, r4
   2c9c4:	mov	r0, r6
   2c9c6:	bl	2b374 <btrfs_abort_transaction@@Base>
   2c9ca:	ldr	r2, [pc, #176]	; (2ca7c <remove_from_free_space_tree@@Base+0x29c>)
   2c9cc:	ldr	r3, [pc, #144]	; (2ca60 <remove_from_free_space_tree@@Base+0x280>)
   2c9ce:	add	r2, pc
   2c9d0:	ldr	r3, [r2, r3]
   2c9d2:	ldr	r2, [r3, #0]
   2c9d4:	ldr	r3, [sp, #84]	; 0x54
   2c9d6:	eors	r2, r3
   2c9d8:	beq.n	2ca54 <remove_from_free_space_tree@@Base+0x274>
   2c9da:	blx	84cc <__stack_chk_fail@plt>
   2c9de:	mov.w	r4, #4294967295	; 0xffffffff
   2c9e2:	ldrd	r2, r3, [sp, #32]
   2c9e6:	ldrd	r0, r1, [sp, #40]	; 0x28
   2c9ea:	cmp	r3, r1
   2c9ec:	it	eq
   2c9ee:	cmpeq	r2, r0
   2c9f0:	bcs.n	2ca36 <remove_from_free_space_tree@@Base+0x256>
   2c9f2:	strd	r2, r3, [sp, #64]	; 0x40
   2c9f6:	movs	r3, #199	; 0xc7
   2c9f8:	ldr	r2, [sp, #32]
   2c9fa:	mov	r0, r5
   2c9fc:	strb.w	r3, [sp, #72]	; 0x48
   2ca00:	ldr	r3, [sp, #40]	; 0x28
   2ca02:	ldr	r1, [sp, #36]	; 0x24
   2ca04:	subs	r2, r3, r2
   2ca06:	ldr	r3, [sp, #44]	; 0x2c
   2ca08:	str.w	r2, [sp, #73]	; 0x49
   2ca0c:	sbc.w	r3, r3, r1
   2ca10:	str	r3, [r7, #4]
   2ca12:	bl	17e58 <btrfs_release_path@@Base>
   2ca16:	movs	r3, #0
   2ca18:	mov	r2, r5
   2ca1a:	str	r3, [sp, #60]	; 0x3c
   2ca1c:	mov	r1, r9
   2ca1e:	movs	r3, #1
   2ca20:	mov	r0, r6
   2ca22:	str	r3, [sp, #4]
   2ca24:	add	r3, sp, #60	; 0x3c
   2ca26:	str	r3, [sp, #0]
   2ca28:	add	r3, sp, #64	; 0x40
   2ca2a:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2ca2e:	cmp	r0, #0
   2ca30:	bne.w	2c85c <remove_from_free_space_tree@@Base+0x7c>
   2ca34:	adds	r4, #1
   2ca36:	mov	r0, r5
   2ca38:	bl	17e58 <btrfs_release_path@@Base>
   2ca3c:	cmp	r4, #0
   2ca3e:	beq.n	2c9ba <remove_from_free_space_tree@@Base+0x1da>
   2ca40:	mov	r3, r4
   2ca42:	mov	r2, r5
   2ca44:	mov	r1, r8
   2ca46:	mov	r0, r6
   2ca48:	bl	2b758 <btrfs_abort_transaction@@Base+0x3e4>
   2ca4c:	b.n	2c85c <remove_from_free_space_tree@@Base+0x7c>
   2ca4e:	mvn.w	r4, #11
   2ca52:	b.n	2c9ba <remove_from_free_space_tree@@Base+0x1da>
   2ca54:	mov	r0, r4
   2ca56:	add	sp, #92	; 0x5c
   2ca58:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ca5c:	strh	r2, [r2, #44]	; 0x2c
   2ca5e:	movs	r3, r0
   2ca60:	lsls	r4, r4, #8
   2ca62:	movs	r0, r0
   2ca64:			; <UNDEFINED> instruction: 0x478f
   2ca66:	movs	r1, r0
   2ca68:	lsls	r2, r5, #12
   2ca6a:	movs	r1, r0
   2ca6c:	add	sp, r2
   2ca6e:	movs	r1, r0
   2ca70:	mov	fp, r8
   2ca72:	movs	r1, r0
   2ca74:	mov	r1, pc
   2ca76:	movs	r1, r0
   2ca78:	add	r1, sp
   2ca7a:	movs	r1, r0
   2ca7c:	strh	r2, [r7, #28]
   2ca7e:	movs	r3, r0

0002ca80 <add_to_free_space_tree@@Base>:
   2ca80:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
   2ca84:	mov	r7, r3
   2ca86:	ldr	r3, [r0, #0]
   2ca88:	mov	sl, r2
   2ca8a:	movs	r4, #0
   2ca8c:	mov	r5, r0
   2ca8e:	ldr.w	r3, [r3, #308]	; 0x134
   2ca92:	ldr.w	r1, [r3, #180]	; 0xb4
   2ca96:	mov	r3, r4
   2ca98:	and.w	r2, r1, #1
   2ca9c:	orrs	r3, r2
   2ca9e:	beq.n	2caee <add_to_free_space_tree@@Base+0x6e>
   2caa0:	bl	17e50 <btrfs_alloc_path@@Base>
   2caa4:	mov	r6, r0
   2caa6:	cbz	r0, 2caf6 <add_to_free_space_tree@@Base+0x76>
   2caa8:	ldr	r0, [r5, #0]
   2caaa:	mov	r2, sl
   2caac:	mov	r3, r7
   2caae:	bl	1eeb4 <btrfs_lookup_block_group@@Base>
   2cab2:	mov	r1, r0
   2cab4:	cbnz	r0, 2cac8 <add_to_free_space_tree@@Base+0x48>
   2cab6:	ldr	r1, [pc, #68]	; (2cafc <add_to_free_space_tree@@Base+0x7c>)
   2cab8:	mov.w	r2, #976	; 0x3d0
   2cabc:	ldr	r0, [pc, #64]	; (2cb00 <add_to_free_space_tree@@Base+0x80>)
   2cabe:	add	r1, pc
   2cac0:	adds	r1, #198	; 0xc6
   2cac2:	add	r0, pc
   2cac4:	bl	2b4f8 <btrfs_abort_transaction@@Base+0x184>
   2cac8:	ldrd	r8, r9, [sp, #48]	; 0x30
   2cacc:	mov	r2, r6
   2cace:	mov	r0, r5
   2cad0:	strd	sl, r7, [sp]
   2cad4:	strd	r8, r9, [sp, #8]
   2cad8:	bl	2c3b0 <btrfs_abort_transaction@@Base+0x103c>
   2cadc:	mov	r4, r0
   2cade:	mov	r0, r6
   2cae0:	bl	17e7e <btrfs_free_path@@Base>
   2cae4:	cbz	r4, 2caee <add_to_free_space_tree@@Base+0x6e>
   2cae6:	mov	r1, r4
   2cae8:	mov	r0, r5
   2caea:	bl	2b374 <btrfs_abort_transaction@@Base>
   2caee:	mov	r0, r4
   2caf0:	add	sp, #16
   2caf2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2caf6:	mvn.w	r4, #11
   2cafa:	b.n	2cade <add_to_free_space_tree@@Base+0x5e>
   2cafc:	cmp	r5, r1
   2cafe:	movs	r1, r0
   2cb00:	lsls	r0, r5, #2
   2cb02:	movs	r1, r0

0002cb04 <populate_free_space_tree@@Base>:
   2cb04:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cb08:	mov	r9, r0
   2cb0a:	vpush	{d8}
   2cb0e:	mov	r5, r1
   2cb10:	ldr	r2, [pc, #544]	; (2cd34 <populate_free_space_tree@@Base+0x230>)
   2cb12:	ldr	r3, [pc, #548]	; (2cd38 <populate_free_space_tree@@Base+0x234>)
   2cb14:	add	r2, pc
   2cb16:	sub	sp, #60	; 0x3c
   2cb18:	ldr	r3, [r2, r3]
   2cb1a:	ldr	r3, [r3, #0]
   2cb1c:	str	r3, [sp, #52]	; 0x34
   2cb1e:	mov.w	r3, #0
   2cb22:	ldr	r3, [r0, #0]
   2cb24:	ldr	r3, [r3, #24]
   2cb26:	vmov	s17, r3
   2cb2a:	bl	17e50 <btrfs_alloc_path@@Base>
   2cb2e:	mov	r7, r0
   2cb30:	cbz	r0, 2cb46 <populate_free_space_tree@@Base+0x42>
   2cb32:	movs	r3, #2
   2cb34:	strb.w	r3, [r0, #64]	; 0x40
   2cb38:	bl	17e50 <btrfs_alloc_path@@Base>
   2cb3c:	mov	r8, r0
   2cb3e:	cbnz	r0, 2cb4c <populate_free_space_tree@@Base+0x48>
   2cb40:	mov	r0, r7
   2cb42:	bl	17e7e <btrfs_free_path@@Base>
   2cb46:	mvn.w	r4, #11
   2cb4a:	b.n	2ccc2 <populate_free_space_tree@@Base+0x1be>
   2cb4c:	ldr.w	r3, [r9]
   2cb50:	add.w	r6, sp, #41	; 0x29
   2cb54:	ldr	r1, [r3, #48]	; 0x30
   2cb56:	ldrd	r2, r3, [r5, #40]	; 0x28
   2cb5a:	strd	r2, r3, [sp, #32]
   2cb5e:	movs	r3, #198	; 0xc6
   2cb60:	strb.w	r3, [sp, #40]	; 0x28
   2cb64:	ldr.w	r3, [r5, #53]	; 0x35
   2cb68:	ldr.w	r2, [r5, #49]	; 0x31
   2cb6c:	str.w	r3, [sp, #45]	; 0x2d
   2cb70:	movs	r3, #8
   2cb72:	str	r3, [sp, #28]
   2cb74:	add	r3, sp, #32
   2cb76:	str.w	r2, [sp, #41]	; 0x29
   2cb7a:	mov	r2, r0
   2cb7c:	vmov	s16, r3
   2cb80:	mov	r0, r9
   2cb82:	movs	r3, #1
   2cb84:	str	r3, [sp, #4]
   2cb86:	add	r3, sp, #28
   2cb88:	str	r3, [sp, #0]
   2cb8a:	vmov	r3, s16
   2cb8e:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2cb92:	mov	r4, r0
   2cb94:	cbnz	r0, 2cbc4 <populate_free_space_tree@@Base+0xc0>
   2cb96:	ldr.w	r0, [r8]
   2cb9a:	movs	r2, #25
   2cb9c:	ldr.w	r3, [r8, #32]
   2cba0:	add.w	r1, r0, #96	; 0x60
   2cba4:	mla	r3, r2, r3, r1
   2cba8:	ldr.w	r2, [r3, #118]	; 0x76
   2cbac:	adds	r2, #101	; 0x65
   2cbae:	adds	r3, r1, r2
   2cbb0:	strb	r4, [r1, r2]
   2cbb2:	strb	r4, [r3, #1]
   2cbb4:	strb	r4, [r3, #2]
   2cbb6:	strb	r4, [r3, #3]
   2cbb8:	strb	r4, [r3, #4]
   2cbba:	strb	r4, [r3, #5]
   2cbbc:	strb	r4, [r3, #6]
   2cbbe:	strb	r4, [r3, #7]
   2cbc0:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2cbc4:	mov	r0, r8
   2cbc6:	bl	17e58 <btrfs_release_path@@Base>
   2cbca:	cmp	r4, #0
   2cbcc:	bne.n	2ccb6 <populate_free_space_tree@@Base+0x1b2>
   2cbce:	ldrd	r2, r3, [r5, #40]	; 0x28
   2cbd2:	strb	r4, [r6, #1]
   2cbd4:	strb	r4, [r6, #2]
   2cbd6:	strd	r2, r3, [sp, #32]
   2cbda:	movs	r3, #168	; 0xa8
   2cbdc:	strb	r4, [r6, #3]
   2cbde:	mov	r2, r7
   2cbe0:	strb.w	r3, [sp, #40]	; 0x28
   2cbe4:	movs	r3, #1
   2cbe6:	strb	r4, [r6, #4]
   2cbe8:	strb	r4, [r6, #5]
   2cbea:	strb	r4, [r6, #6]
   2cbec:	strb	r4, [r6, #7]
   2cbee:	vmov	r1, s16
   2cbf2:	vmov	r0, s17
   2cbf6:	str	r4, [sp, #0]
   2cbf8:	strb.w	r4, [sp, #41]	; 0x29
   2cbfc:	bl	1b84c <btrfs_search_slot_for_read@@Base>
   2cc00:	cmp	r0, #0
   2cc02:	blt.n	2ccb4 <populate_free_space_tree@@Base+0x1b0>
   2cc04:	ldr	r1, [pc, #308]	; (2cd3c <populate_free_space_tree@@Base+0x238>)
   2cc06:	it	eq
   2cc08:	moveq	r3, #1
   2cc0a:	ldr	r0, [pc, #308]	; (2cd40 <populate_free_space_tree@@Base+0x23c>)
   2cc0c:	it	ne
   2cc0e:	movne	r3, #0
   2cc10:	add	r1, pc
   2cc12:	movw	r2, #1027	; 0x403
   2cc16:	adds	r1, #221	; 0xdd
   2cc18:	add	r0, pc
   2cc1a:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2cc1e:	ldrd	sl, fp, [r5, #40]	; 0x28
   2cc22:	ldr.w	r3, [r5, #49]	; 0x31
   2cc26:	ldr.w	r2, [r5, #53]	; 0x35
   2cc2a:	adds.w	r3, r3, sl
   2cc2e:	str	r3, [sp, #16]
   2cc30:	adc.w	r3, r2, fp
   2cc34:	str	r3, [sp, #20]
   2cc36:	ldr	r2, [r7, #32]
   2cc38:	vmov	r1, s16
   2cc3c:	ldr	r0, [r7, #0]
   2cc3e:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2cc42:	ldrb.w	r2, [sp, #40]	; 0x28
   2cc46:	add.w	r3, r2, #88	; 0x58
   2cc4a:	uxtb	r3, r3
   2cc4c:	cmp	r3, #1
   2cc4e:	bhi.n	2cce8 <populate_free_space_tree@@Base+0x1e4>
   2cc50:	ldrd	r0, r1, [sp, #32]
   2cc54:	ldrd	r2, r3, [sp, #16]
   2cc58:	cmp	r1, r3
   2cc5a:	it	eq
   2cc5c:	cmpeq	r0, r2
   2cc5e:	bcs.n	2ccfc <populate_free_space_tree@@Base+0x1f8>
   2cc60:	cmp	fp, r1
   2cc62:	it	eq
   2cc64:	cmpeq	sl, r0
   2cc66:	bcc.n	2cc96 <populate_free_space_tree@@Base+0x192>
   2cc68:	ldrb.w	r1, [sp, #40]	; 0x28
   2cc6c:	ldrd	r2, r3, [sp, #32]
   2cc70:	cmp	r1, #169	; 0xa9
   2cc72:	bne.n	2ccd6 <populate_free_space_tree@@Base+0x1d2>
   2cc74:	ldr.w	r1, [r9]
   2cc78:	ldr.w	r1, [r1, #384]	; 0x180
   2cc7c:	adds.w	sl, r2, r1
   2cc80:	adc.w	fp, r3, #0
   2cc84:	vmov	r0, s17
   2cc88:	mov	r1, r7
   2cc8a:	bl	2b468 <btrfs_abort_transaction@@Base+0xf4>
   2cc8e:	cmp	r0, #0
   2cc90:	blt.n	2ccb4 <populate_free_space_tree@@Base+0x1b0>
   2cc92:	beq.n	2cc36 <populate_free_space_tree@@Base+0x132>
   2cc94:	b.n	2ccfc <populate_free_space_tree@@Base+0x1f8>
   2cc96:	subs.w	r2, r0, sl
   2cc9a:	strd	sl, fp, [sp]
   2cc9e:	sbc.w	r3, r1, fp
   2cca2:	mov	r0, r9
   2cca4:	strd	r2, r3, [sp, #8]
   2cca8:	mov	r1, r5
   2ccaa:	mov	r2, r8
   2ccac:	bl	2c3b0 <btrfs_abort_transaction@@Base+0x103c>
   2ccb0:	cmp	r0, #0
   2ccb2:	beq.n	2cc68 <populate_free_space_tree@@Base+0x164>
   2ccb4:	mov	r4, r0
   2ccb6:	mov	r0, r8
   2ccb8:	bl	17e7e <btrfs_free_path@@Base>
   2ccbc:	mov	r0, r7
   2ccbe:	bl	17e7e <btrfs_free_path@@Base>
   2ccc2:	ldr	r2, [pc, #128]	; (2cd44 <populate_free_space_tree@@Base+0x240>)
   2ccc4:	ldr	r3, [pc, #112]	; (2cd38 <populate_free_space_tree@@Base+0x234>)
   2ccc6:	add	r2, pc
   2ccc8:	ldr	r3, [r2, r3]
   2ccca:	ldr	r2, [r3, #0]
   2cccc:	ldr	r3, [sp, #52]	; 0x34
   2ccce:	eors	r2, r3
   2ccd0:	beq.n	2cd28 <populate_free_space_tree@@Base+0x224>
   2ccd2:	blx	84cc <__stack_chk_fail@plt>
   2ccd6:	ldr.w	r1, [sp, #41]	; 0x29
   2ccda:	ldr.w	r0, [sp, #45]	; 0x2d
   2ccde:	adds.w	sl, r1, r2
   2cce2:	adc.w	fp, r0, r3
   2cce6:	b.n	2cc84 <populate_free_space_tree@@Base+0x180>
   2cce8:	cmp	r2, #192	; 0xc0
   2ccea:	bne.n	2cc84 <populate_free_space_tree@@Base+0x180>
   2ccec:	ldrd	r2, r3, [r5, #40]	; 0x28
   2ccf0:	ldrd	r0, r1, [sp, #32]
   2ccf4:	cmp	r1, r3
   2ccf6:	it	eq
   2ccf8:	cmpeq	r0, r2
   2ccfa:	beq.n	2cc84 <populate_free_space_tree@@Base+0x180>
   2ccfc:	ldrd	r2, r3, [sp, #16]
   2cd00:	cmp	fp, r3
   2cd02:	it	eq
   2cd04:	cmpeq	sl, r2
   2cd06:	bcs.n	2ccb6 <populate_free_space_tree@@Base+0x1b2>
   2cd08:	ldr	r3, [sp, #16]
   2cd0a:	mov	r1, r5
   2cd0c:	mov	r0, r9
   2cd0e:	strd	sl, fp, [sp]
   2cd12:	subs.w	r2, r3, sl
   2cd16:	ldr	r3, [sp, #20]
   2cd18:	sbc.w	r3, r3, fp
   2cd1c:	strd	r2, r3, [sp, #8]
   2cd20:	mov	r2, r8
   2cd22:	bl	2c3b0 <btrfs_abort_transaction@@Base+0x103c>
   2cd26:	b.n	2ccb4 <populate_free_space_tree@@Base+0x1b0>
   2cd28:	mov	r0, r4
   2cd2a:	add	sp, #60	; 0x3c
   2cd2c:	vpop	{d8}
   2cd30:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cd34:	strh	r4, [r6, #18]
   2cd36:	movs	r3, r0
   2cd38:	lsls	r4, r4, #8
   2cd3a:	movs	r0, r0
   2cd3c:	bics	r3, r7
   2cd3e:	movs	r1, r0
   2cd40:	b.n	2ce38 <remove_block_group_free_space@@Base+0xf0>
   2cd42:	movs	r0, r0
   2cd44:	strh	r2, [r0, #6]
   2cd46:	movs	r3, r0

0002cd48 <remove_block_group_free_space@@Base>:
   2cd48:	ldr	r2, [pc, #536]	; (2cf64 <remove_block_group_free_space@@Base+0x21c>)
   2cd4a:	ldr	r3, [pc, #540]	; (2cf68 <remove_block_group_free_space@@Base+0x220>)
   2cd4c:	add	r2, pc
   2cd4e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cd52:	sub	sp, #92	; 0x5c
   2cd54:	ldr	r3, [r2, r3]
   2cd56:	mov	r9, r0
   2cd58:	mov	r8, r1
   2cd5a:	ldr	r3, [r3, #0]
   2cd5c:	str	r3, [sp, #84]	; 0x54
   2cd5e:	mov.w	r3, #0
   2cd62:	ldr	r3, [r0, #0]
   2cd64:	ldr.w	fp, [r3, #48]	; 0x30
   2cd68:	bl	17e50 <btrfs_alloc_path@@Base>
   2cd6c:	mov	r5, r0
   2cd6e:	cmp	r0, #0
   2cd70:	beq.w	2cf56 <remove_block_group_free_space@@Base+0x20e>
   2cd74:	ldrd	r3, r4, [r8, #40]	; 0x28
   2cd78:	ldr.w	r2, [r8, #53]	; 0x35
   2cd7c:	ldr.w	sl, [pc, #492]	; 2cf6c <remove_block_group_free_space@@Base+0x224>
   2cd80:	strd	r3, r4, [sp, #24]
   2cd84:	ldr	r1, [sp, #24]
   2cd86:	add	sl, pc
   2cd88:	ldr.w	r3, [r8, #49]	; 0x31
   2cd8c:	add.w	sl, sl, #246	; 0xf6
   2cd90:	adds	r3, r3, r1
   2cd92:	str	r3, [sp, #8]
   2cd94:	ldr	r3, [sp, #28]
   2cd96:	adc.w	r3, r2, r3
   2cd9a:	str	r3, [sp, #12]
   2cd9c:	ldr	r3, [sp, #8]
   2cd9e:	adds.w	r2, r3, #4294967295	; 0xffffffff
   2cda2:	ldr	r3, [sp, #12]
   2cda4:	adc.w	r3, r3, #4294967295	; 0xffffffff
   2cda8:	strd	r2, r3, [sp, #44]	; 0x2c
   2cdac:	movs	r2, #255	; 0xff
   2cdae:	strb.w	r2, [sp, #52]	; 0x34
   2cdb2:	strb.w	r2, [sp, #53]	; 0x35
   2cdb6:	strb.w	r2, [sp, #54]	; 0x36
   2cdba:	strb.w	r2, [sp, #55]	; 0x37
   2cdbe:	strb.w	r2, [sp, #56]	; 0x38
   2cdc2:	strb.w	r2, [sp, #57]	; 0x39
   2cdc6:	strb.w	r2, [sp, #58]	; 0x3a
   2cdca:	strb.w	r2, [sp, #59]	; 0x3b
   2cdce:	strb.w	r2, [sp, #60]	; 0x3c
   2cdd2:	mov.w	r3, #4294967295	; 0xffffffff
   2cdd6:	add	r2, sp, #44	; 0x2c
   2cdd8:	str	r3, [sp, #0]
   2cdda:	mov	r1, fp
   2cddc:	mov	r3, r5
   2cdde:	mov	r0, r9
   2cde0:	bl	2b654 <btrfs_abort_transaction@@Base+0x2e0>
   2cde4:	mov	r4, r0
   2cde6:	cmp	r0, #0
   2cde8:	bne.n	2ce90 <remove_block_group_free_space@@Base+0x148>
   2cdea:	ldr	r7, [pc, #388]	; (2cf70 <remove_block_group_free_space@@Base+0x228>)
   2cdec:	ldr	r6, [r5, #0]
   2cdee:	ldr	r3, [r5, #32]
   2cdf0:	add	r7, pc
   2cdf2:	adds	r3, #1
   2cdf4:	str	r3, [r5, #32]
   2cdf6:	ldr	r2, [r5, #32]
   2cdf8:	cmp	r2, #0
   2cdfa:	bgt.n	2ce00 <remove_block_group_free_space@@Base+0xb8>
   2cdfc:	movs	r6, #0
   2cdfe:	b.n	2ce74 <remove_block_group_free_space@@Base+0x12c>
   2ce00:	subs	r2, #1
   2ce02:	add	r1, sp, #64	; 0x40
   2ce04:	mov	r0, r6
   2ce06:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2ce0a:	ldrb.w	r3, [sp, #72]	; 0x48
   2ce0e:	cmp	r3, #198	; 0xc6
   2ce10:	bne.n	2ceb4 <remove_block_group_free_space@@Base+0x16c>
   2ce12:	ldrd	r2, r3, [r8, #40]	; 0x28
   2ce16:	adds	r4, #1
   2ce18:	ldrd	r6, r7, [sp, #64]	; 0x40
   2ce1c:	ldr	r0, [pc, #340]	; (2cf74 <remove_block_group_free_space@@Base+0x22c>)
   2ce1e:	cmp	r7, r3
   2ce20:	it	eq
   2ce22:	cmpeq	r6, r2
   2ce24:	ldr	r6, [pc, #336]	; (2cf78 <remove_block_group_free_space@@Base+0x230>)
   2ce26:	add	r0, pc
   2ce28:	mov.w	r2, #1112	; 0x458
   2ce2c:	add	r6, pc
   2ce2e:	it	eq
   2ce30:	moveq	r3, #1
   2ce32:	add.w	r6, r6, #246	; 0xf6
   2ce36:	it	ne
   2ce38:	movne	r3, #0
   2ce3a:	mov	r1, r6
   2ce3c:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2ce40:	ldr.w	r3, [r8, #53]	; 0x35
   2ce44:	ldr.w	r1, [sp, #77]	; 0x4d
   2ce48:	ldr.w	r0, [sp, #73]	; 0x49
   2ce4c:	ldr.w	r2, [r8, #49]	; 0x31
   2ce50:	cmp	r1, r3
   2ce52:	mov	r1, r6
   2ce54:	mov.w	r6, #1
   2ce58:	it	eq
   2ce5a:	cmpeq	r0, r2
   2ce5c:	ldr	r0, [pc, #284]	; (2cf7c <remove_block_group_free_space@@Base+0x234>)
   2ce5e:	movw	r2, #1113	; 0x459
   2ce62:	ite	eq
   2ce64:	moveq	r3, #1
   2ce66:	movne	r3, #0
   2ce68:	add	r0, pc
   2ce6a:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2ce6e:	ldr	r3, [r5, #32]
   2ce70:	subs	r3, #1
   2ce72:	str	r3, [r5, #32]
   2ce74:	str	r4, [sp, #0]
   2ce76:	mov	r2, r5
   2ce78:	ldr	r3, [r5, #32]
   2ce7a:	mov	r1, fp
   2ce7c:	mov	r0, r9
   2ce7e:	bl	1b3f8 <btrfs_del_items@@Base>
   2ce82:	mov	r4, r0
   2ce84:	cbnz	r0, 2ce90 <remove_block_group_free_space@@Base+0x148>
   2ce86:	mov	r0, r5
   2ce88:	bl	17e58 <btrfs_release_path@@Base>
   2ce8c:	cmp	r6, #0
   2ce8e:	beq.n	2cdd2 <remove_block_group_free_space@@Base+0x8a>
   2ce90:	mov	r0, r5
   2ce92:	bl	17e7e <btrfs_free_path@@Base>
   2ce96:	cbz	r4, 2cea0 <remove_block_group_free_space@@Base+0x158>
   2ce98:	mov	r1, r4
   2ce9a:	mov	r0, r9
   2ce9c:	bl	2b374 <btrfs_abort_transaction@@Base>
   2cea0:	ldr	r2, [pc, #220]	; (2cf80 <remove_block_group_free_space@@Base+0x238>)
   2cea2:	ldr	r3, [pc, #196]	; (2cf68 <remove_block_group_free_space@@Base+0x220>)
   2cea4:	add	r2, pc
   2cea6:	ldr	r3, [r2, r3]
   2cea8:	ldr	r2, [r3, #0]
   2ceaa:	ldr	r3, [sp, #84]	; 0x54
   2ceac:	eors	r2, r3
   2ceae:	beq.n	2cf5c <remove_block_group_free_space@@Base+0x214>
   2ceb0:	blx	84cc <__stack_chk_fail@plt>
   2ceb4:	adds	r3, #57	; 0x39
   2ceb6:	uxtb	r3, r3
   2ceb8:	cmp	r3, #1
   2ceba:	bhi.n	2cf44 <remove_block_group_free_space@@Base+0x1fc>
   2cebc:	ldrd	r2, r3, [sp, #64]	; 0x40
   2cec0:	adds	r4, #1
   2cec2:	ldrd	r0, r1, [sp, #24]
   2cec6:	cmp	r3, r1
   2cec8:	strd	r2, r3, [sp, #16]
   2cecc:	it	eq
   2cece:	cmpeq	r2, r0
   2ced0:	mov	r1, sl
   2ced2:	mov.w	r2, #1120	; 0x460
   2ced6:	mov	r0, r7
   2ced8:	ite	cs
   2ceda:	movcs	r3, #1
   2cedc:	movcc	r3, #0
   2cede:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2cee2:	ldrd	r2, r3, [sp, #16]
   2cee6:	ldrd	r0, r1, [sp, #8]
   2ceea:	cmp	r3, r1
   2ceec:	mov	r1, sl
   2ceee:	it	eq
   2cef0:	cmpeq	r2, r0
   2cef2:	ldr	r0, [pc, #144]	; (2cf84 <remove_block_group_free_space@@Base+0x23c>)
   2cef4:	movw	r2, #1121	; 0x461
   2cef8:	ite	cc
   2cefa:	movcc	r3, #1
   2cefc:	movcs	r3, #0
   2cefe:	add	r0, pc
   2cf00:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2cf04:	ldr.w	r3, [sp, #73]	; 0x49
   2cf08:	ldr	r1, [sp, #16]
   2cf0a:	ldr.w	r2, [sp, #77]	; 0x4d
   2cf0e:	adds	r3, r3, r1
   2cf10:	str	r3, [sp, #32]
   2cf12:	ldr	r3, [sp, #20]
   2cf14:	adc.w	r3, r2, r3
   2cf18:	str	r3, [sp, #36]	; 0x24
   2cf1a:	ldrd	r0, r1, [sp, #32]
   2cf1e:	ldrd	r2, r3, [sp, #8]
   2cf22:	cmp	r3, r1
   2cf24:	mov	r1, sl
   2cf26:	it	eq
   2cf28:	cmpeq	r2, r0
   2cf2a:	ldr	r0, [pc, #92]	; (2cf88 <remove_block_group_free_space@@Base+0x240>)
   2cf2c:	movw	r2, #1122	; 0x462
   2cf30:	ite	cs
   2cf32:	movcs	r3, #1
   2cf34:	movcc	r3, #0
   2cf36:	add	r0, pc
   2cf38:	bl	2b564 <btrfs_abort_transaction@@Base+0x1f0>
   2cf3c:	ldr	r3, [r5, #32]
   2cf3e:	subs	r3, #1
   2cf40:	str	r3, [r5, #32]
   2cf42:	b.n	2cdf6 <remove_block_group_free_space@@Base+0xae>
   2cf44:	ldr	r1, [pc, #68]	; (2cf8c <remove_block_group_free_space@@Base+0x244>)
   2cf46:	movw	r2, #1126	; 0x466
   2cf4a:	ldr	r0, [pc, #68]	; (2cf90 <remove_block_group_free_space@@Base+0x248>)
   2cf4c:	add	r1, pc
   2cf4e:	adds	r1, #246	; 0xf6
   2cf50:	add	r0, pc
   2cf52:	bl	2b4f8 <btrfs_abort_transaction@@Base+0x184>
   2cf56:	mvn.w	r4, #11
   2cf5a:	b.n	2ce90 <remove_block_group_free_space@@Base+0x148>
   2cf5c:	mov	r0, r4
   2cf5e:	add	sp, #92	; 0x5c
   2cf60:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cf64:	strh	r4, [r7, #0]
   2cf66:	movs	r3, r0
   2cf68:	lsls	r4, r4, #8
   2cf6a:	movs	r0, r0
   2cf6c:	negs	r5, r0
   2cf6e:	movs	r1, r0
   2cf70:	subs	r5, #193	; 0xc1
   2cf72:	movs	r1, r0
   2cf74:	subs	r5, #47	; 0x2f
   2cf76:	movs	r1, r0
   2cf78:	sbcs	r7, r3
   2cf7a:	movs	r1, r0
   2cf7c:	subs	r5, #29
   2cf7e:	movs	r1, r0
   2cf80:	ldrb	r4, [r4, #27]
   2cf82:	movs	r3, r0
   2cf84:	subs	r4, #207	; 0xcf
   2cf86:	movs	r1, r0
   2cf88:	subs	r4, #176	; 0xb0
   2cf8a:	movs	r1, r0
   2cf8c:	eors	r7, r7
   2cf8e:	movs	r1, r0
   2cf90:	ldc2	0, cr0, [sl], {-0}

0002cf94 <btrfs_clear_free_space_tree@@Base>:
   2cf94:	ldr	r2, [pc, #352]	; (2d0f8 <btrfs_clear_free_space_tree@@Base+0x164>)
   2cf96:	movs	r1, #0
   2cf98:	ldr	r3, [pc, #352]	; (2d0fc <btrfs_clear_free_space_tree@@Base+0x168>)
   2cf9a:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2cf9e:	add	r2, pc
   2cfa0:	ldr.w	r8, [r0, #28]
   2cfa4:	sub	sp, #44	; 0x2c
   2cfa6:	ldr	r3, [r2, r3]
   2cfa8:	mov	r7, r0
   2cfaa:	ldr	r5, [r0, #48]	; 0x30
   2cfac:	mov	r0, r8
   2cfae:	ldr	r3, [r3, #0]
   2cfb0:	str	r3, [sp, #36]	; 0x24
   2cfb2:	mov.w	r3, #0
   2cfb6:	bl	2af7c <btrfs_start_transaction@@Base>
   2cfba:	cmn.w	r0, #4096	; 0x1000
   2cfbe:	mov	r6, r0
   2cfc0:	bls.n	2cfda <btrfs_clear_free_space_tree@@Base+0x46>
   2cfc2:	mov	r4, r0
   2cfc4:	ldr	r2, [pc, #312]	; (2d100 <btrfs_clear_free_space_tree@@Base+0x16c>)
   2cfc6:	ldr	r3, [pc, #308]	; (2d0fc <btrfs_clear_free_space_tree@@Base+0x168>)
   2cfc8:	add	r2, pc
   2cfca:	ldr	r3, [r2, r3]
   2cfcc:	ldr	r2, [r3, #0]
   2cfce:	ldr	r3, [sp, #36]	; 0x24
   2cfd0:	eors	r2, r3
   2cfd2:	beq.w	2d0e8 <btrfs_clear_free_space_tree@@Base+0x154>
   2cfd6:	blx	84cc <__stack_chk_fail@plt>
   2cfda:	ldr.w	r3, [r7, #308]	; 0x134
   2cfde:	movs	r4, #0
   2cfe0:	ldr.w	r1, [r3, #184]	; 0xb8
   2cfe4:	ldr.w	r2, [r3, #180]	; 0xb4
   2cfe8:	str.w	r1, [r3, #184]	; 0xb8
   2cfec:	bic.w	r2, r2, #3
   2cff0:	str.w	r2, [r3, #180]	; 0xb4
   2cff4:	str	r4, [r7, #48]	; 0x30
   2cff6:	bl	17e50 <btrfs_alloc_path@@Base>
   2cffa:	mov	r7, r0
   2cffc:	cbnz	r0, 2d004 <btrfs_clear_free_space_tree@@Base+0x70>
   2cffe:	mvn.w	r4, #11
   2d002:	b.n	2cfc4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d004:	add.w	r9, sp, #16
   2d008:	mov.w	sl, #1
   2d00c:	mov.w	fp, #4294967295	; 0xffffffff
   2d010:	movs	r2, #0
   2d012:	movs	r3, #0
   2d014:	strb.w	r4, [sp, #24]
   2d018:	strd	r2, r3, [sp, #16]
   2d01c:	strb.w	r4, [sp, #25]
   2d020:	strb.w	r4, [sp, #26]
   2d024:	strb.w	r4, [sp, #27]
   2d028:	strb.w	r4, [sp, #28]
   2d02c:	strb.w	r4, [sp, #29]
   2d030:	strb.w	r4, [sp, #30]
   2d034:	strb.w	r4, [sp, #31]
   2d038:	strb.w	r4, [sp, #32]
   2d03c:	mov	r3, r7
   2d03e:	mov	r2, r9
   2d040:	mov	r1, r5
   2d042:	mov	r0, r6
   2d044:	strd	fp, sl, [sp]
   2d048:	bl	1a23c <btrfs_search_slot@@Base>
   2d04c:	subs	r4, r0, #0
   2d04e:	blt.n	2d074 <btrfs_clear_free_space_tree@@Base+0xe0>
   2d050:	ldr	r3, [r7, #0]
   2d052:	ldr.w	r4, [r3, #192]	; 0xc0
   2d056:	cbz	r4, 2d074 <btrfs_clear_free_space_tree@@Base+0xe0>
   2d058:	movs	r3, #0
   2d05a:	mov	r2, r7
   2d05c:	str	r3, [r7, #32]
   2d05e:	mov	r1, r5
   2d060:	str	r4, [sp, #0]
   2d062:	mov	r0, r6
   2d064:	bl	1b3f8 <btrfs_del_items@@Base>
   2d068:	mov	r4, r0
   2d06a:	cbnz	r0, 2d074 <btrfs_clear_free_space_tree@@Base+0xe0>
   2d06c:	mov	r0, r7
   2d06e:	bl	17e58 <btrfs_release_path@@Base>
   2d072:	b.n	2d03c <btrfs_clear_free_space_tree@@Base+0xa8>
   2d074:	mov	r0, r7
   2d076:	bl	17e7e <btrfs_free_path@@Base>
   2d07a:	cmp	r4, #0
   2d07c:	bne.n	2cfc4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d07e:	addw	r2, r5, #447	; 0x1bf
   2d082:	mov	r1, r8
   2d084:	mov	r0, r6
   2d086:	bl	27bd0 <btrfs_del_root@@Base>
   2d08a:	mov	r4, r0
   2d08c:	cmp	r0, #0
   2d08e:	bne.n	2cfc4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d090:	ldrd	r2, r3, [r5, #520]	; 0x208
   2d094:	str	r3, [r2, #4]
   2d096:	str	r2, [r3, #0]
   2d098:	ldr	r2, [pc, #84]	; (2d0f0 <btrfs_clear_free_space_tree@@Base+0x15c>)
   2d09a:	ldr	r3, [pc, #88]	; (2d0f4 <btrfs_clear_free_space_tree@@Base+0x160>)
   2d09c:	ldr	r0, [r5, #0]
   2d09e:	strd	r2, r3, [r5, #520]	; 0x208
   2d0a2:	bl	1d50c <clean_tree_block@@Base>
   2d0a6:	mov	r4, r0
   2d0a8:	cmp	r0, #0
   2d0aa:	bne.n	2cfc4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d0ac:	movs	r3, #1
   2d0ae:	movs	r2, #0
   2d0b0:	str	r3, [sp, #8]
   2d0b2:	mov	r1, r5
   2d0b4:	movs	r3, #0
   2d0b6:	mov	r0, r6
   2d0b8:	strd	r2, r3, [sp]
   2d0bc:	ldr	r2, [r5, #0]
   2d0be:	bl	20dc0 <btrfs_free_tree_block@@Base>
   2d0c2:	mov	r4, r0
   2d0c4:	cmp	r0, #0
   2d0c6:	bne.w	2cfc4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d0ca:	ldr	r0, [r5, #0]
   2d0cc:	bl	16c20 <free_extent_buffer@@Base>
   2d0d0:	ldr	r0, [r5, #4]
   2d0d2:	bl	16c20 <free_extent_buffer@@Base>
   2d0d6:	mov	r0, r5
   2d0d8:	blx	83f0 <free@plt+0x4>
   2d0dc:	mov	r1, r8
   2d0de:	mov	r0, r6
   2d0e0:	bl	2b1fc <btrfs_commit_transaction@@Base>
   2d0e4:	mov	r4, r0
   2d0e6:	b.n	2cfc4 <btrfs_clear_free_space_tree@@Base+0x30>
   2d0e8:	mov	r0, r4
   2d0ea:	add	sp, #44	; 0x2c
   2d0ec:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d0f0:	lsls	r0, r0, #4
   2d0f2:	movs	r0, r2
   2d0f4:	lsls	r0, r0, #8
   2d0f6:	movs	r0, r4
   2d0f8:	ldrb	r2, [r5, #23]
   2d0fa:	movs	r3, r0
   2d0fc:	lsls	r4, r4, #8
   2d0fe:	movs	r0, r0
   2d100:	ldrb	r0, [r0, #23]
   2d102:	movs	r3, r0

0002d104 <btrfs_create_free_space_tree@@Base>:
   2d104:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2d108:	movs	r1, #0
   2d10a:	ldr	r7, [r0, #28]
   2d10c:	mov	r5, r0
   2d10e:	mov	r0, r7
   2d110:	bl	2af7c <btrfs_start_transaction@@Base>
   2d114:	cmn.w	r0, #4096	; 0x1000
   2d118:	mov	r6, r0
   2d11a:	bls.n	2d124 <btrfs_create_free_space_tree@@Base+0x20>
   2d11c:	mov	r4, r0
   2d11e:	mov	r0, r4
   2d120:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   2d124:	movs	r2, #10
   2d126:	movs	r3, #0
   2d128:	mov	r1, r5
   2d12a:	bl	1e37c <btrfs_create_tree@@Base>
   2d12e:	cmn.w	r0, #4096	; 0x1000
   2d132:	mov	r4, r0
   2d134:	bhi.n	2d16e <btrfs_create_free_space_tree@@Base+0x6a>
   2d136:	mov.w	r8, #69632	; 0x11000
   2d13a:	mov.w	r9, #0
   2d13e:	str	r0, [r5, #48]	; 0x30
   2d140:	mov	r2, r8
   2d142:	mov	r3, r9
   2d144:	mov	r0, r5
   2d146:	bl	1ee30 <btrfs_lookup_first_block_group@@Base>
   2d14a:	mov	r1, r0
   2d14c:	cbz	r0, 2d178 <btrfs_create_free_space_tree@@Base+0x74>
   2d14e:	ldr.w	r2, [r0, #49]	; 0x31
   2d152:	ldr.w	r9, [r0, #53]	; 0x35
   2d156:	ldrd	r0, r3, [r0, #40]	; 0x28
   2d15a:	adds.w	r8, r2, r0
   2d15e:	mov	r0, r6
   2d160:	adc.w	r9, r9, r3
   2d164:	bl	2cb04 <populate_free_space_tree@@Base>
   2d168:	mov	r4, r0
   2d16a:	cmp	r0, #0
   2d16c:	beq.n	2d140 <btrfs_create_free_space_tree@@Base+0x3c>
   2d16e:	mov	r1, r4
   2d170:	mov	r0, r6
   2d172:	bl	2b374 <btrfs_abort_transaction@@Base>
   2d176:	b.n	2d11e <btrfs_create_free_space_tree@@Base+0x1a>
   2d178:	ldr.w	r3, [r5, #308]	; 0x134
   2d17c:	mov	r9, r1
   2d17e:	ldr.w	r2, [r3, #180]	; 0xb4
   2d182:	ldr.w	r0, [r3, #184]	; 0xb8
   2d186:	and.w	r8, r2, #1
   2d18a:	orrs.w	r1, r8, r9
   2d18e:	mov.w	r1, #0
   2d192:	ittt	eq
   2d194:	streq.w	r0, [r3, #184]	; 0xb8
   2d198:	orreq.w	r2, r2, #1
   2d19c:	streq.w	r2, [r3, #180]	; 0xb4
   2d1a0:	ldr.w	r3, [r5, #308]	; 0x134
   2d1a4:	ldr.w	r2, [r3, #180]	; 0xb4
   2d1a8:	ldr.w	r4, [r3, #184]	; 0xb8
   2d1ac:	and.w	r0, r2, #2
   2d1b0:	orrs	r1, r0
   2d1b2:	mov	r1, r7
   2d1b4:	it	eq
   2d1b6:	orreq.w	r2, r2, #2
   2d1ba:	mov	r0, r6
   2d1bc:	itt	eq
   2d1be:	streq.w	r2, [r3, #180]	; 0xb4
   2d1c2:	streq.w	r4, [r3, #184]	; 0xb8
   2d1c6:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   2d1ca:	b.w	2b1fc <btrfs_commit_transaction@@Base>

0002d1ce <load_free_space_tree@@Base>:
   2d1ce:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d1d2:	mov	r9, r0
   2d1d4:	vpush	{d8-d9}
   2d1d8:	mov	r8, r1
   2d1da:	ldr	r2, [pc, #976]	; (2d5ac <load_free_space_tree@@Base+0x3de>)
   2d1dc:	ldr	r3, [pc, #976]	; (2d5b0 <load_free_space_tree@@Base+0x3e2>)
   2d1de:	add	r2, pc
   2d1e0:	ldr	r6, [pc, #976]	; (2d5b4 <load_free_space_tree@@Base+0x3e6>)
   2d1e2:	sub	sp, #124	; 0x7c
   2d1e4:	ldr	r3, [r2, r3]
   2d1e6:	add	r6, pc
   2d1e8:	ldr	r3, [r3, #0]
   2d1ea:	str	r3, [sp, #116]	; 0x74
   2d1ec:	mov.w	r3, #0
   2d1f0:	bl	17e50 <btrfs_alloc_path@@Base>
   2d1f4:	mov	r5, r0
   2d1f6:	cmp	r0, #0
   2d1f8:	beq.w	2d59a <load_free_space_tree@@Base+0x3cc>
   2d1fc:	movs	r4, #0
   2d1fe:	movs	r3, #1
   2d200:	mov	r2, r8
   2d202:	strb.w	r3, [r0, #64]	; 0x40
   2d206:	mov	r3, r0
   2d208:	str	r4, [sp, #0]
   2d20a:	mov	r0, r4
   2d20c:	ldr.w	r1, [r9, #48]	; 0x30
   2d210:	bl	2b3e4 <btrfs_abort_transaction@@Base+0x70>
   2d214:	cmn.w	r0, #4096	; 0x1000
   2d218:	bls.n	2d242 <load_free_space_tree@@Base+0x74>
   2d21a:	mov	r3, r0
   2d21c:	mov	r0, r5
   2d21e:	str	r3, [sp, #32]
   2d220:	bl	17e7e <btrfs_free_path@@Base>
   2d224:	ldr	r3, [sp, #32]
   2d226:	cmp	r3, #0
   2d228:	it	eq
   2d22a:	moveq	r3, r4
   2d22c:	ldr	r1, [pc, #904]	; (2d5b8 <load_free_space_tree@@Base+0x3ea>)
   2d22e:	ldr	r2, [pc, #896]	; (2d5b0 <load_free_space_tree@@Base+0x3e2>)
   2d230:	add	r1, pc
   2d232:	ldr	r2, [r1, r2]
   2d234:	ldr	r1, [r2, #0]
   2d236:	ldr	r2, [sp, #116]	; 0x74
   2d238:	eors	r1, r2
   2d23a:	beq.w	2d5a0 <load_free_space_tree@@Base+0x3d2>
   2d23e:	blx	84cc <__stack_chk_fail@plt>
   2d242:	ldr	r3, [r5, #0]
   2d244:	adds	r3, #96	; 0x60
   2d246:	adds	r2, r3, r0
   2d248:	ldr	r3, [r3, r0]
   2d24a:	ldr	r7, [r2, #4]
   2d24c:	str	r3, [sp, #64]	; 0x40
   2d24e:	ldr.w	r3, [r9, #48]	; 0x30
   2d252:	vmov	s18, r3
   2d256:	ldr.w	r3, [r8, #40]	; 0x28
   2d25a:	str	r3, [sp, #48]	; 0x30
   2d25c:	ldr.w	r3, [r8, #44]	; 0x2c
   2d260:	ldr	r1, [sp, #48]	; 0x30
   2d262:	str	r3, [sp, #52]	; 0x34
   2d264:	ldr.w	r3, [r8, #49]	; 0x31
   2d268:	ldr.w	r2, [r8, #53]	; 0x35
   2d26c:	adds	r3, r3, r1
   2d26e:	str	r3, [sp, #32]
   2d270:	ldr	r3, [sp, #52]	; 0x34
   2d272:	adc.w	r3, r2, r3
   2d276:	ands.w	r7, r7, #1
   2d27a:	str	r3, [sp, #36]	; 0x24
   2d27c:	beq.w	2d404 <load_free_space_tree@@Base+0x236>
   2d280:	movs	r3, #0
   2d282:	mov	r7, r4
   2d284:	vmov	s16, r3
   2d288:	str	r4, [sp, #40]	; 0x28
   2d28a:	vmov	s17, r3
   2d28e:	add	r3, sp, #96	; 0x60
   2d290:	vmov	s19, r3
   2d294:	vmov	r0, s18
   2d298:	mov	r1, r5
   2d29a:	bl	2b468 <btrfs_abort_transaction@@Base+0xf4>
   2d29e:	subs	r3, r0, #0
   2d2a0:	blt.w	2d400 <load_free_space_tree@@Base+0x232>
   2d2a4:	bne.w	2d3fc <load_free_space_tree@@Base+0x22e>
   2d2a8:	vmov	r1, s19
   2d2ac:	ldr	r2, [r5, #32]
   2d2ae:	ldr	r0, [r5, #0]
   2d2b0:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2d2b4:	ldrb.w	r3, [sp, #104]	; 0x68
   2d2b8:	cmp	r3, #198	; 0xc6
   2d2ba:	beq.w	2d3fc <load_free_space_tree@@Base+0x22e>
   2d2be:	cmp	r3, #200	; 0xc8
   2d2c0:	beq.n	2d314 <load_free_space_tree@@Base+0x146>
   2d2c2:	ldr	r2, [pc, #760]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d2c4:	movs	r1, #1
   2d2c6:	ldr	r0, [r6, r2]
   2d2c8:	ldr	r2, [pc, #756]	; (2d5c0 <load_free_space_tree@@Base+0x3f2>)
   2d2ca:	ldr	r0, [r0, #0]
   2d2cc:	add	r2, pc
   2d2ce:	blx	881c <__fprintf_chk@plt+0x4>
   2d2d2:	movs	r4, #1
   2d2d4:	ldr	r3, [sp, #40]	; 0x28
   2d2d6:	cmp	r3, #1
   2d2d8:	bne.n	2d2f4 <load_free_space_tree@@Base+0x126>
   2d2da:	ldrd	r2, r3, [sp, #32]
   2d2de:	mov	r1, r9
   2d2e0:	mov	r0, r8
   2d2e2:	adds	r7, #1
   2d2e4:	strd	r2, r3, [sp]
   2d2e8:	vmov	r2, s16
   2d2ec:	vmov	r3, s17
   2d2f0:	bl	22cf8 <add_new_free_space@@Base>
   2d2f4:	ldr	r3, [sp, #64]	; 0x40
   2d2f6:	cmp	r3, r7
   2d2f8:	beq.n	2d310 <load_free_space_tree@@Base+0x142>
   2d2fa:	ldr	r3, [pc, #704]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d2fc:	ldr	r2, [pc, #708]	; (2d5c4 <load_free_space_tree@@Base+0x3f6>)
   2d2fe:	ldr	r0, [r6, r3]
   2d300:	add	r2, pc
   2d302:	ldr	r3, [sp, #64]	; 0x40
   2d304:	str	r7, [sp, #0]
   2d306:	ldr	r0, [r0, #0]
   2d308:	movs	r1, #1
   2d30a:	blx	881c <__fprintf_chk@plt+0x4>
   2d30e:	adds	r4, #1
   2d310:	movs	r3, #0
   2d312:	b.n	2d21c <load_free_space_tree@@Base+0x4e>
   2d314:	ldrd	sl, fp, [sp, #96]	; 0x60
   2d318:	ldrd	r3, r4, [sp, #32]
   2d31c:	cmp	fp, r4
   2d31e:	it	eq
   2d320:	cmpeq	sl, r3
   2d322:	bcc.n	2d34a <load_free_space_tree@@Base+0x17c>
   2d324:	ldrd	r1, r2, [sp, #32]
   2d328:	ldr	r3, [pc, #656]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d32a:	ldr	r3, [r6, r3]
   2d32c:	strd	r1, r2, [sp, #16]
   2d330:	ldr	r2, [sp, #48]	; 0x30
   2d332:	strd	sl, fp, [sp]
   2d336:	str	r2, [sp, #8]
   2d338:	ldr	r2, [sp, #52]	; 0x34
   2d33a:	str	r2, [sp, #12]
   2d33c:	ldr	r2, [pc, #648]	; (2d5c8 <load_free_space_tree@@Base+0x3fa>)
   2d33e:	add	r2, pc
   2d340:	ldr	r0, [r3, #0]
   2d342:	movs	r1, #1
   2d344:	blx	881c <__fprintf_chk@plt+0x4>
   2d348:	b.n	2d2d2 <load_free_space_tree@@Base+0x104>
   2d34a:	ldr.w	r3, [sp, #105]	; 0x69
   2d34e:	ldr.w	r2, [sp, #109]	; 0x6d
   2d352:	adds.w	r3, r3, sl
   2d356:	str	r3, [sp, #72]	; 0x48
   2d358:	adc.w	r3, r2, fp
   2d35c:	str	r3, [sp, #76]	; 0x4c
   2d35e:	ldrd	r1, r2, [sp, #72]	; 0x48
   2d362:	ldrd	r3, r4, [sp, #32]
   2d366:	cmp	r4, r2
   2d368:	it	eq
   2d36a:	cmpeq	r3, r1
   2d36c:	bcs.n	2d3b6 <load_free_space_tree@@Base+0x1e8>
   2d36e:	ldrd	r1, r2, [sp, #32]
   2d372:	ldr	r3, [pc, #584]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d374:	ldr	r3, [r6, r3]
   2d376:	strd	r1, r2, [sp, #16]
   2d37a:	ldr	r2, [sp, #48]	; 0x30
   2d37c:	strd	sl, fp, [sp]
   2d380:	str	r2, [sp, #8]
   2d382:	ldr	r2, [sp, #52]	; 0x34
   2d384:	str	r2, [sp, #12]
   2d386:	ldr	r2, [pc, #580]	; (2d5cc <load_free_space_tree@@Base+0x3fe>)
   2d388:	add	r2, pc
   2d38a:	b.n	2d340 <load_free_space_tree@@Base+0x172>
   2d38c:	mov	r3, fp
   2d38e:	mov	r2, sl
   2d390:	mov	r0, r5
   2d392:	bl	2b56e <btrfs_abort_transaction@@Base+0x1fa>
   2d396:	ldr	r3, [sp, #40]	; 0x28
   2d398:	mov	r4, r0
   2d39a:	cbnz	r3, 2d3da <load_free_space_tree@@Base+0x20c>
   2d39c:	cmp	r0, #1
   2d39e:	bne.n	2d3a8 <load_free_space_tree@@Base+0x1da>
   2d3a0:	vmov	s16, sl
   2d3a4:	vmov	s17, fp
   2d3a8:	ldr.w	r3, [r9, #388]	; 0x184
   2d3ac:	str	r4, [sp, #40]	; 0x28
   2d3ae:	adds.w	sl, sl, r3
   2d3b2:	adc.w	fp, fp, #0
   2d3b6:	ldr.w	r3, [sp, #105]	; 0x69
   2d3ba:	ldr	r1, [sp, #96]	; 0x60
   2d3bc:	ldr.w	r2, [sp, #109]	; 0x6d
   2d3c0:	adds	r3, r3, r1
   2d3c2:	str	r3, [sp, #80]	; 0x50
   2d3c4:	ldr	r3, [sp, #100]	; 0x64
   2d3c6:	adc.w	r3, r2, r3
   2d3ca:	str	r3, [sp, #84]	; 0x54
   2d3cc:	ldrd	r3, r4, [sp, #80]	; 0x50
   2d3d0:	cmp	fp, r4
   2d3d2:	it	eq
   2d3d4:	cmpeq	sl, r3
   2d3d6:	bcc.n	2d38c <load_free_space_tree@@Base+0x1be>
   2d3d8:	b.n	2d294 <load_free_space_tree@@Base+0xc6>
   2d3da:	ldr	r3, [sp, #40]	; 0x28
   2d3dc:	cmp	r3, #1
   2d3de:	bne.n	2d3a8 <load_free_space_tree@@Base+0x1da>
   2d3e0:	cmp	r0, #0
   2d3e2:	bne.n	2d3a8 <load_free_space_tree@@Base+0x1da>
   2d3e4:	vmov	r2, s16
   2d3e8:	mov	r1, r9
   2d3ea:	vmov	r3, s17
   2d3ee:	mov	r0, r8
   2d3f0:	strd	sl, fp, [sp]
   2d3f4:	adds	r7, #1
   2d3f6:	bl	22cf8 <add_new_free_space@@Base>
   2d3fa:	b.n	2d3a8 <load_free_space_tree@@Base+0x1da>
   2d3fc:	movs	r4, #0
   2d3fe:	b.n	2d2d4 <load_free_space_tree@@Base+0x106>
   2d400:	movs	r4, #0
   2d402:	b.n	2d21c <load_free_space_tree@@Base+0x4e>
   2d404:	add	r3, sp, #96	; 0x60
   2d406:	mov	r4, r7
   2d408:	str	r7, [sp, #72]	; 0x48
   2d40a:	vmov	s16, r3
   2d40e:	ldr	r3, [pc, #448]	; (2d5d0 <load_free_space_tree@@Base+0x402>)
   2d410:	add	r3, pc
   2d412:	vmov	s17, r3
   2d416:	ldr	r3, [pc, #444]	; (2d5d4 <load_free_space_tree@@Base+0x406>)
   2d418:	add	r3, pc
   2d41a:	vmov	s19, r3
   2d41e:	vmov	r0, s18
   2d422:	mov	r1, r5
   2d424:	bl	2b468 <btrfs_abort_transaction@@Base+0xf4>
   2d428:	subs	r3, r0, #0
   2d42a:	blt.w	2d21c <load_free_space_tree@@Base+0x4e>
   2d42e:	bne.n	2d45a <load_free_space_tree@@Base+0x28c>
   2d430:	vmov	r1, s16
   2d434:	ldr	r2, [r5, #32]
   2d436:	ldr	r0, [r5, #0]
   2d438:	bl	2b37c <btrfs_abort_transaction@@Base+0x8>
   2d43c:	ldrb.w	r3, [sp, #104]	; 0x68
   2d440:	cmp	r3, #198	; 0xc6
   2d442:	beq.n	2d45a <load_free_space_tree@@Base+0x28c>
   2d444:	cmp	r3, #199	; 0xc7
   2d446:	beq.n	2d470 <load_free_space_tree@@Base+0x2a2>
   2d448:	ldr	r2, [pc, #368]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d44a:	movs	r1, #1
   2d44c:	ldr	r0, [r6, r2]
   2d44e:	ldr	r2, [pc, #392]	; (2d5d8 <load_free_space_tree@@Base+0x40a>)
   2d450:	ldr	r0, [r0, #0]
   2d452:	add	r2, pc
   2d454:	blx	881c <__fprintf_chk@plt+0x4>
   2d458:	adds	r4, #1
   2d45a:	ldr	r3, [sp, #64]	; 0x40
   2d45c:	cmp	r3, r7
   2d45e:	beq.w	2d310 <load_free_space_tree@@Base+0x142>
   2d462:	ldr	r3, [pc, #344]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d464:	ldr	r2, [pc, #372]	; (2d5dc <load_free_space_tree@@Base+0x40e>)
   2d466:	ldr	r0, [r6, r3]
   2d468:	add	r2, pc
   2d46a:	ldr	r3, [sp, #64]	; 0x40
   2d46c:	str	r7, [sp, #0]
   2d46e:	b.n	2d306 <load_free_space_tree@@Base+0x138>
   2d470:	ldrd	r2, r3, [sp, #96]	; 0x60
   2d474:	ldrd	r0, r1, [sp, #32]
   2d478:	cmp	r3, r1
   2d47a:	it	eq
   2d47c:	cmpeq	r2, r0
   2d47e:	bcc.n	2d4a6 <load_free_space_tree@@Base+0x2d8>
   2d480:	ldr	r1, [pc, #312]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d482:	ldrd	r8, r9, [sp, #32]
   2d486:	ldr	r0, [r6, r1]
   2d488:	ldr	r1, [sp, #48]	; 0x30
   2d48a:	strd	r2, r3, [sp]
   2d48e:	ldr	r2, [pc, #336]	; (2d5e0 <load_free_space_tree@@Base+0x412>)
   2d490:	str	r1, [sp, #8]
   2d492:	ldr	r1, [sp, #52]	; 0x34
   2d494:	add	r2, pc
   2d496:	strd	r8, r9, [sp, #16]
   2d49a:	str	r1, [sp, #12]
   2d49c:	movs	r1, #1
   2d49e:	ldr	r0, [r0, #0]
   2d4a0:	blx	881c <__fprintf_chk@plt+0x4>
   2d4a4:	b.n	2d458 <load_free_space_tree@@Base+0x28a>
   2d4a6:	ldr.w	r1, [sp, #105]	; 0x69
   2d4aa:	ldr.w	r0, [sp, #109]	; 0x6d
   2d4ae:	adds	r1, r1, r2
   2d4b0:	str	r1, [sp, #40]	; 0x28
   2d4b2:	adc.w	r1, r0, r3
   2d4b6:	str	r1, [sp, #44]	; 0x2c
   2d4b8:	ldrd	fp, ip, [sp, #40]	; 0x28
   2d4bc:	ldrd	r0, r1, [sp, #32]
   2d4c0:	cmp	r1, ip
   2d4c2:	it	eq
   2d4c4:	cmpeq	r0, fp
   2d4c6:	bcs.n	2d4ee <load_free_space_tree@@Base+0x320>
   2d4c8:	ldr	r3, [pc, #240]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d4ca:	mov	r2, r1
   2d4cc:	mov	r1, r0
   2d4ce:	ldr	r3, [r6, r3]
   2d4d0:	strd	r1, r2, [sp, #16]
   2d4d4:	mov	r1, fp
   2d4d6:	ldr	r2, [sp, #48]	; 0x30
   2d4d8:	str	r2, [sp, #8]
   2d4da:	ldr	r2, [sp, #52]	; 0x34
   2d4dc:	str	r2, [sp, #12]
   2d4de:	mov	r2, ip
   2d4e0:	strd	r1, r2, [sp]
   2d4e4:	movs	r1, #1
   2d4e6:	ldr	r2, [pc, #252]	; (2d5e4 <load_free_space_tree@@Base+0x416>)
   2d4e8:	ldr	r0, [r3, #0]
   2d4ea:	add	r2, pc
   2d4ec:	b.n	2d4a0 <load_free_space_tree@@Base+0x2d2>
   2d4ee:	ldr	r1, [sp, #72]	; 0x48
   2d4f0:	cbz	r1, 2d53e <load_free_space_tree@@Base+0x370>
   2d4f2:	ldr	r1, [sp, #88]	; 0x58
   2d4f4:	ldr	r0, [sp, #68]	; 0x44
   2d4f6:	adds.w	r1, sl, r1
   2d4fa:	str	r1, [sp, #56]	; 0x38
   2d4fc:	ldr	r1, [sp, #92]	; 0x5c
   2d4fe:	adc.w	r1, r0, r1
   2d502:	str	r1, [sp, #60]	; 0x3c
   2d504:	ldrd	r0, r1, [sp, #56]	; 0x38
   2d508:	cmp	r3, r1
   2d50a:	it	eq
   2d50c:	cmpeq	r2, r0
   2d50e:	bcs.n	2d576 <load_free_space_tree@@Base+0x3a8>
   2d510:	ldr	r1, [pc, #168]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d512:	ldrd	fp, ip, [sp, #56]	; 0x38
   2d516:	ldr	r0, [r6, r1]
   2d518:	strd	r2, r3, [sp]
   2d51c:	vmov	r2, s19
   2d520:	ldr	r1, [sp, #68]	; 0x44
   2d522:	strd	fp, ip, [sp, #24]
   2d526:	str.w	sl, [sp, #16]
   2d52a:	ldrd	sl, fp, [sp, #40]	; 0x28
   2d52e:	str	r1, [sp, #20]
   2d530:	strd	sl, fp, [sp, #8]
   2d534:	ldr	r0, [r0, #0]
   2d536:	movs	r1, #1
   2d538:	blx	881c <__fprintf_chk@plt+0x4>
   2d53c:	adds	r4, #1
   2d53e:	ldrd	r2, r3, [sp, #96]	; 0x60
   2d542:	adds	r7, #1
   2d544:	ldr.w	r1, [sp, #105]	; 0x69
   2d548:	ldr.w	r0, [sp, #109]	; 0x6d
   2d54c:	adds	r1, r1, r2
   2d54e:	adc.w	r0, r3, r0
   2d552:	strd	r1, r0, [sp]
   2d556:	mov	r1, r9
   2d558:	mov	r0, r8
   2d55a:	bl	22cf8 <add_new_free_space@@Base>
   2d55e:	ldrd	sl, r3, [sp, #96]	; 0x60
   2d562:	str	r3, [sp, #68]	; 0x44
   2d564:	ldr.w	r3, [sp, #105]	; 0x69
   2d568:	str	r3, [sp, #88]	; 0x58
   2d56a:	ldr.w	r3, [sp, #109]	; 0x6d
   2d56e:	str	r3, [sp, #92]	; 0x5c
   2d570:	movs	r3, #1
   2d572:	str	r3, [sp, #72]	; 0x48
   2d574:	b.n	2d41e <load_free_space_tree@@Base+0x250>
   2d576:	bne.n	2d53e <load_free_space_tree@@Base+0x370>
   2d578:	ldr	r1, [pc, #64]	; (2d5bc <load_free_space_tree@@Base+0x3ee>)
   2d57a:	ldr	r0, [r6, r1]
   2d57c:	ldr	r1, [sp, #68]	; 0x44
   2d57e:	str.w	sl, [sp, #16]
   2d582:	ldrd	sl, fp, [sp, #40]	; 0x28
   2d586:	strd	r2, r3, [sp, #24]
   2d58a:	strd	r2, r3, [sp]
   2d58e:	str	r1, [sp, #20]
   2d590:	vmov	r2, s17
   2d594:	strd	sl, fp, [sp, #8]
   2d598:	b.n	2d534 <load_free_space_tree@@Base+0x366>
   2d59a:	mvn.w	r3, #11
   2d59e:	b.n	2d22c <load_free_space_tree@@Base+0x5e>
   2d5a0:	mov	r0, r3
   2d5a2:	add	sp, #124	; 0x7c
   2d5a4:	vpop	{d8-d9}
   2d5a8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d5ac:	ldrb	r2, [r5, #14]
   2d5ae:	movs	r3, r0
   2d5b0:	lsls	r4, r4, #8
   2d5b2:	movs	r0, r0
   2d5b4:	ldrb	r2, [r4, #14]
   2d5b6:	movs	r3, r0
   2d5b8:	ldrb	r0, [r3, #13]
   2d5ba:	movs	r3, r0
   2d5bc:	lsls	r4, r6, #8
   2d5be:	movs	r0, r0
   2d5c0:	subs	r3, #28
   2d5c2:	movs	r1, r0
   2d5c4:	subs	r3, #143	; 0x8f
   2d5c6:	movs	r1, r0
   2d5c8:	subs	r2, #197	; 0xc5
   2d5ca:	movs	r1, r0
   2d5cc:	subs	r2, #194	; 0xc2
   2d5ce:	movs	r1, r0
   2d5d0:	subs	r3, #122	; 0x7a
   2d5d2:	movs	r1, r0
   2d5d4:	subs	r3, #52	; 0x34
   2d5d6:	movs	r1, r0
   2d5d8:	subs	r1, #150	; 0x96
   2d5da:	movs	r1, r0
   2d5dc:	subs	r2, #39	; 0x27
   2d5de:	movs	r1, r0
   2d5e0:	subs	r2, #44	; 0x2c
   2d5e2:	movs	r1, r0
   2d5e4:	subs	r2, #29
   2d5e6:	movs	r1, r0

0002d5e8 <btrfs_add_corrupt_extent_record@@Base>:
   2d5e8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d5ec:	mov	sl, r2
   2d5ee:	ldr	r2, [pc, #220]	; (2d6cc <btrfs_add_corrupt_extent_record@@Base+0xe4>)
   2d5f0:	mov	r9, r3
   2d5f2:	ldr	r3, [pc, #220]	; (2d6d0 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   2d5f4:	sub	sp, #92	; 0x5c
   2d5f6:	add	r2, pc
   2d5f8:	ldr.w	r8, [pc, #216]	; 2d6d4 <btrfs_add_corrupt_extent_record@@Base+0xec>
   2d5fc:	ldr.w	fp, [r0, #380]	; 0x17c
   2d600:	mov	r4, r1
   2d602:	ldr	r3, [r2, r3]
   2d604:	add	r8, pc
   2d606:	ldr	r3, [r3, #0]
   2d608:	str	r3, [sp, #84]	; 0x54
   2d60a:	mov.w	r3, #0
   2d60e:	cmp.w	fp, #0
   2d612:	beq.n	2d6a6 <btrfs_add_corrupt_extent_record@@Base+0xbe>
   2d614:	movs	r0, #64	; 0x40
   2d616:	blx	8634 <malloc@plt+0x4>
   2d61a:	mov	r5, r0
   2d61c:	cmp	r0, #0
   2d61e:	beq.n	2d6bc <btrfs_add_corrupt_extent_record@@Base+0xd4>
   2d620:	add.w	r6, r0, #40	; 0x28
   2d624:	add.w	r3, r4, #16
   2d628:	ldr	r0, [r4, #0]
   2d62a:	adds	r4, #8
   2d62c:	ldr.w	r1, [r4, #-4]
   2d630:	cmp	r4, r3
   2d632:	mov	r7, r6
   2d634:	stmia	r7!, {r0, r1}
   2d636:	mov	r6, r7
   2d638:	bne.n	2d628 <btrfs_add_corrupt_extent_record@@Base+0x40>
   2d63a:	ldrb	r3, [r4, #0]
   2d63c:	mov	r1, r5
   2d63e:	mov	r0, fp
   2d640:	strb	r3, [r7, #0]
   2d642:	ldrd	r2, r3, [sp, #128]	; 0x80
   2d646:	strd	sl, r9, [r5, #24]
   2d64a:	strd	r2, r3, [r5, #32]
   2d64e:	ldr	r3, [sp, #136]	; 0x88
   2d650:	str	r3, [r5, #60]	; 0x3c
   2d652:	bl	15e9a <insert_cache_extent@@Base>
   2d656:	mov	r4, r0
   2d658:	cbz	r0, 2d6a6 <btrfs_add_corrupt_extent_record@@Base+0xbe>
   2d65a:	mov	r0, r5
   2d65c:	blx	83f0 <free@plt+0x4>
   2d660:	cmn.w	r4, #17
   2d664:	beq.n	2d6a8 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   2d666:	ldr	r3, [pc, #112]	; (2d6d8 <btrfs_add_corrupt_extent_record@@Base+0xf0>)
   2d668:	add	r4, sp, #20
   2d66a:	ldr	r2, [pc, #112]	; (2d6dc <btrfs_add_corrupt_extent_record@@Base+0xf4>)
   2d66c:	movs	r1, #1
   2d66e:	ldr.w	r0, [r8, r3]
   2d672:	add	r2, pc
   2d674:	ldr	r3, [pc, #104]	; (2d6e0 <btrfs_add_corrupt_extent_record@@Base+0xf8>)
   2d676:	str	r1, [sp, #12]
   2d678:	add	r3, pc
   2d67a:	str	r3, [sp, #8]
   2d67c:	ldr	r3, [pc, #100]	; (2d6e4 <btrfs_add_corrupt_extent_record@@Base+0xfc>)
   2d67e:	add	r3, pc
   2d680:	str	r3, [sp, #4]
   2d682:	movs	r3, #49	; 0x31
   2d684:	str	r3, [sp, #0]
   2d686:	ldr	r3, [pc, #96]	; (2d6e8 <btrfs_add_corrupt_extent_record@@Base+0x100>)
   2d688:	ldr	r0, [r0, #0]
   2d68a:	add	r3, pc
   2d68c:	blx	881c <__fprintf_chk@plt+0x4>
   2d690:	movs	r1, #16
   2d692:	mov	r0, r4
   2d694:	blx	8680 <backtrace@plt>
   2d698:	movs	r2, #2
   2d69a:	mov	r1, r0
   2d69c:	mov	r0, r4
   2d69e:	blx	8990 <backtrace_symbols_fd@plt>
   2d6a2:	blx	8948 <abort@plt>
   2d6a6:	movs	r4, #0
   2d6a8:	ldr	r2, [pc, #64]	; (2d6ec <btrfs_add_corrupt_extent_record@@Base+0x104>)
   2d6aa:	ldr	r3, [pc, #36]	; (2d6d0 <btrfs_add_corrupt_extent_record@@Base+0xe8>)
   2d6ac:	add	r2, pc
   2d6ae:	ldr	r3, [r2, r3]
   2d6b0:	ldr	r2, [r3, #0]
   2d6b2:	ldr	r3, [sp, #84]	; 0x54
   2d6b4:	eors	r2, r3
   2d6b6:	beq.n	2d6c2 <btrfs_add_corrupt_extent_record@@Base+0xda>
   2d6b8:	blx	84cc <__stack_chk_fail@plt>
   2d6bc:	mvn.w	r4, #11
   2d6c0:	b.n	2d6a8 <btrfs_add_corrupt_extent_record@@Base+0xc0>
   2d6c2:	mov	r0, r4
   2d6c4:	add	sp, #92	; 0x5c
   2d6c6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d6ca:	nop
   2d6cc:	strb	r2, [r2, #30]
   2d6ce:	movs	r3, r0
   2d6d0:	lsls	r4, r4, #8
   2d6d2:	movs	r0, r0
   2d6d4:	strb	r4, [r0, #30]
   2d6d6:	movs	r3, r0
   2d6d8:	lsls	r4, r6, #8
   2d6da:	movs	r0, r0
   2d6dc:	stmia	r4!, {r0, r1, r2, r3, r4}
   2d6de:	movs	r0, r0
   2d6e0:	subs	r2, #112	; 0x70
   2d6e2:	movs	r1, r0
   2d6e4:	subs	r2, #128	; 0x80
   2d6e6:	movs	r1, r0
   2d6e8:	subs	r2, #85	; 0x55
   2d6ea:	movs	r1, r0
   2d6ec:	strb	r4, [r3, #27]
   2d6ee:	movs	r3, r0
   2d6f0:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d6f4:	mov	r7, r3
   2d6f6:	ldr.w	r9, [r0]
   2d6fa:	mov	r5, r2
   2d6fc:	ldr	r3, [r0, #32]
   2d6fe:	movs	r2, #25
   2d700:	add.w	sl, r9, #96	; 0x60
   2d704:	movs	r4, #0
   2d706:	mla	r3, r2, r3, sl
   2d70a:	ldr.w	r6, [r3, #118]	; 0x76
   2d70e:	ldr.w	fp, [r3, #122]	; 0x7a
   2d712:	adds	r6, #101	; 0x65
   2d714:	cmp	r4, fp
   2d716:	bcc.n	2d71c <btrfs_add_corrupt_extent_record@@Base+0x134>
   2d718:	movs	r0, #0
   2d71a:	b.n	2d74a <btrfs_add_corrupt_extent_record@@Base+0x162>
   2d71c:	add.w	r8, r4, r6
   2d720:	add.w	r3, sl, r8
   2d724:	ldrh	r3, [r3, #8]
   2d726:	cmp	r3, r5
   2d728:	add.w	r2, r3, #10
   2d72c:	add	r4, r2
   2d72e:	bne.n	2d714 <btrfs_add_corrupt_extent_record@@Base+0x12c>
   2d730:	add.w	r2, r8, #10
   2d734:	mov	r3, r5
   2d736:	mov	r0, r9
   2d738:	str	r1, [sp, #4]
   2d73a:	bl	17308 <memcmp_extent_buffer@@Base>
   2d73e:	ldr	r1, [sp, #4]
   2d740:	cmp	r0, #0
   2d742:	bne.n	2d714 <btrfs_add_corrupt_extent_record@@Base+0x12c>
   2d744:	movs	r0, #1
   2d746:	str.w	r8, [r7]
   2d74a:	add	sp, #12
   2d74c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d750:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d754:	mov	sl, r2
   2d756:	ldr.w	r8, [r0]
   2d75a:	movs	r1, #25
   2d75c:	ldr	r2, [r0, #32]
   2d75e:	mov	fp, r3
   2d760:	add.w	r9, r8, #96	; 0x60
   2d764:	ldr	r3, [sp, #52]	; 0x34
   2d766:	movs	r4, #0
   2d768:	mla	r2, r1, r2, r9
   2d76c:	ldr.w	r6, [r2, #118]	; 0x76
   2d770:	ldr.w	r1, [r2, #122]	; 0x7a
   2d774:	adds	r6, #101	; 0x65
   2d776:	str	r1, [sp, #4]
   2d778:	ldr	r2, [sp, #4]
   2d77a:	cmp	r4, r2
   2d77c:	bcc.n	2d786 <btrfs_add_corrupt_extent_record@@Base+0x19e>
   2d77e:	movs	r0, #0
   2d780:	add	sp, #12
   2d782:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d786:	adds	r7, r4, r6
   2d788:	add.w	r2, r9, r7
   2d78c:	ldrh	r5, [r2, #16]
   2d78e:	cmp	r5, r3
   2d790:	bne.n	2d7ba <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2d792:	ldr	r1, [r2, #4]
   2d794:	ldr	r0, [r2, #0]
   2d796:	cmp	fp, r1
   2d798:	it	eq
   2d79a:	cmpeq	sl, r0
   2d79c:	bne.n	2d7ba <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2d79e:	ldr	r1, [sp, #48]	; 0x30
   2d7a0:	add.w	r2, r7, #18
   2d7a4:	mov	r0, r8
   2d7a6:	str	r3, [sp, #52]	; 0x34
   2d7a8:	bl	17308 <memcmp_extent_buffer@@Base>
   2d7ac:	ldr	r3, [sp, #52]	; 0x34
   2d7ae:	cbnz	r0, 2d7ba <btrfs_add_corrupt_extent_record@@Base+0x1d2>
   2d7b0:	ldr	r3, [sp, #56]	; 0x38
   2d7b2:	cbz	r3, 2d7b6 <btrfs_add_corrupt_extent_record@@Base+0x1ce>
   2d7b4:	str	r7, [r3, #0]
   2d7b6:	movs	r0, #1
   2d7b8:	b.n	2d780 <btrfs_add_corrupt_extent_record@@Base+0x198>
   2d7ba:	adds	r5, #18
   2d7bc:	add	r4, r5
   2d7be:	b.n	2d778 <btrfs_add_corrupt_extent_record@@Base+0x190>

0002d7c0 <btrfs_lookup_inode@@Base>:
   2d7c0:	push	{r4, r5, r6, r7, lr}
   2d7c2:	mov	r5, r2
   2d7c4:	ldr	r6, [pc, #152]	; (2d860 <btrfs_lookup_inode@@Base+0xa0>)
   2d7c6:	sub	sp, #36	; 0x24
   2d7c8:	ldr	r2, [pc, #152]	; (2d864 <btrfs_lookup_inode@@Base+0xa4>)
   2d7ca:	mov	r4, r3
   2d7cc:	add	r6, pc
   2d7ce:	ldr	r3, [sp, #56]	; 0x38
   2d7d0:	ldr	r2, [r6, r2]
   2d7d2:	ldr	r2, [r2, #0]
   2d7d4:	str	r2, [sp, #28]
   2d7d6:	mov.w	r2, #0
   2d7da:	subs	r2, r3, #0
   2d7dc:	mov.w	r3, r3, asr #31
   2d7e0:	str	r3, [sp, #0]
   2d7e2:	it	ne
   2d7e4:	movne	r2, #1
   2d7e6:	mov	r3, r5
   2d7e8:	str	r2, [sp, #4]
   2d7ea:	mov	r2, r4
   2d7ec:	bl	1a23c <btrfs_search_slot@@Base>
   2d7f0:	subs	r6, r0, #0
   2d7f2:	ble.n	2d846 <btrfs_lookup_inode@@Base+0x86>
   2d7f4:	ldrb	r3, [r4, #8]
   2d7f6:	cmp	r3, #132	; 0x84
   2d7f8:	bne.n	2d846 <btrfs_lookup_inode@@Base+0x86>
   2d7fa:	ldr.w	r3, [r4, #13]
   2d7fe:	ldr.w	r2, [r4, #9]
   2d802:	adds	r3, #1
   2d804:	it	eq
   2d806:	cmpeq.w	r2, #4294967295	; 0xffffffff
   2d80a:	bne.n	2d846 <btrfs_lookup_inode@@Base+0x86>
   2d80c:	ldr	r2, [r5, #32]
   2d80e:	cbz	r2, 2d846 <btrfs_lookup_inode@@Base+0x86>
   2d810:	subs	r2, #1
   2d812:	movs	r3, #25
   2d814:	ldr	r0, [r5, #0]
   2d816:	add	r1, sp, #8
   2d818:	muls	r2, r3
   2d81a:	movs	r3, #17
   2d81c:	adds	r2, #101	; 0x65
   2d81e:	bl	1731a <read_extent_buffer@@Base>
   2d822:	ldrd	r2, r3, [sp, #8]
   2d826:	ldr	r1, [r4, #4]
   2d828:	ldr	r0, [r4, #0]
   2d82a:	cmp	r1, r3
   2d82c:	ldrb.w	r7, [sp, #16]
   2d830:	it	eq
   2d832:	cmpeq	r0, r2
   2d834:	bne.n	2d846 <btrfs_lookup_inode@@Base+0x86>
   2d836:	ldrb	r3, [r4, #8]
   2d838:	cmp	r3, r7
   2d83a:	itttt	eq
   2d83c:	ldreq	r3, [r5, #32]
   2d83e:	moveq	r6, #0
   2d840:	addeq.w	r3, r3, #4294967295	; 0xffffffff
   2d844:	streq	r3, [r5, #32]
   2d846:	ldr	r2, [pc, #32]	; (2d868 <btrfs_lookup_inode@@Base+0xa8>)
   2d848:	ldr	r3, [pc, #24]	; (2d864 <btrfs_lookup_inode@@Base+0xa4>)
   2d84a:	add	r2, pc
   2d84c:	ldr	r3, [r2, r3]
   2d84e:	ldr	r2, [r3, #0]
   2d850:	ldr	r3, [sp, #28]
   2d852:	eors	r2, r3
   2d854:	beq.n	2d85a <btrfs_lookup_inode@@Base+0x9a>
   2d856:	blx	84cc <__stack_chk_fail@plt>
   2d85a:	mov	r0, r6
   2d85c:	add	sp, #36	; 0x24
   2d85e:	pop	{r4, r5, r6, r7, pc}
   2d860:	strb	r4, [r7, #22]
   2d862:	movs	r3, r0
   2d864:	lsls	r4, r4, #8
   2d866:	movs	r0, r0
   2d868:	strb	r6, [r7, #20]
   2d86a:	movs	r3, r0

0002d86c <btrfs_insert_inode@@Base>:
   2d86c:	push	{lr}
   2d86e:	sub	sp, #36	; 0x24
   2d870:	ldr.w	lr, [pc, #104]	; 2d8dc <btrfs_insert_inode@@Base+0x70>
   2d874:	ldr.w	ip, [pc, #104]	; 2d8e0 <btrfs_insert_inode@@Base+0x74>
   2d878:	add	lr, pc
   2d87a:	ldr.w	ip, [lr, ip]
   2d87e:	ldr.w	ip, [ip]
   2d882:	str.w	ip, [sp, #28]
   2d886:	mov.w	ip, #0
   2d88a:	strd	r2, r3, [sp, #8]
   2d88e:	movs	r2, #0
   2d890:	movs	r3, #1
   2d892:	strb.w	r2, [sp, #17]
   2d896:	strb.w	r3, [sp, #16]
   2d89a:	movs	r3, #160	; 0xa0
   2d89c:	strb.w	r2, [sp, #18]
   2d8a0:	strb.w	r2, [sp, #19]
   2d8a4:	strb.w	r2, [sp, #20]
   2d8a8:	strb.w	r2, [sp, #21]
   2d8ac:	strb.w	r2, [sp, #22]
   2d8b0:	strb.w	r2, [sp, #23]
   2d8b4:	strb.w	r2, [sp, #24]
   2d8b8:	add	r2, sp, #8
   2d8ba:	str	r3, [sp, #0]
   2d8bc:	ldr	r3, [sp, #40]	; 0x28
   2d8be:	bl	1b2c8 <btrfs_insert_item@@Base>
   2d8c2:	ldr	r2, [pc, #32]	; (2d8e4 <btrfs_insert_inode@@Base+0x78>)
   2d8c4:	ldr	r3, [pc, #24]	; (2d8e0 <btrfs_insert_inode@@Base+0x74>)
   2d8c6:	add	r2, pc
   2d8c8:	ldr	r3, [r2, r3]
   2d8ca:	ldr	r2, [r3, #0]
   2d8cc:	ldr	r3, [sp, #28]
   2d8ce:	eors	r2, r3
   2d8d0:	beq.n	2d8d6 <btrfs_insert_inode@@Base+0x6a>
   2d8d2:	blx	84cc <__stack_chk_fail@plt>
   2d8d6:	add	sp, #36	; 0x24
   2d8d8:	ldr.w	pc, [sp], #4
   2d8dc:	strb	r0, [r2, #20]
   2d8de:	movs	r3, r0
   2d8e0:	lsls	r4, r4, #8
   2d8e2:	movs	r0, r0
   2d8e4:	strb	r2, [r0, #19]
   2d8e6:	movs	r3, r0

0002d8e8 <btrfs_lookup_inode_ref@@Base>:
   2d8e8:	push	{r4, r5, r6, lr}
   2d8ea:	mov	r4, r2
   2d8ec:	ldr	r2, [pc, #112]	; (2d960 <btrfs_lookup_inode_ref@@Base+0x78>)
   2d8ee:	mov	r5, r3
   2d8f0:	ldr	r3, [pc, #112]	; (2d964 <btrfs_lookup_inode_ref@@Base+0x7c>)
   2d8f2:	sub	sp, #40	; 0x28
   2d8f4:	add	r2, pc
   2d8f6:	ldr	r6, [sp, #80]	; 0x50
   2d8f8:	ldr	r3, [r2, r3]
   2d8fa:	ldr	r3, [r3, #0]
   2d8fc:	str	r3, [sp, #36]	; 0x24
   2d8fe:	mov.w	r3, #0
   2d902:	movs	r3, #0
   2d904:	str	r3, [sp, #12]
   2d906:	ldrd	r2, r3, [sp, #64]	; 0x40
   2d90a:	strd	r2, r3, [sp, #16]
   2d90e:	movs	r3, #12
   2d910:	strb.w	r3, [sp, #24]
   2d914:	add	r2, sp, #16
   2d916:	ldr	r3, [sp, #72]	; 0x48
   2d918:	str.w	r3, [sp, #25]
   2d91c:	ldr	r3, [sp, #76]	; 0x4c
   2d91e:	str.w	r3, [sp, #29]
   2d922:	subs	r3, r6, #0
   2d924:	it	ne
   2d926:	movne	r3, #1
   2d928:	strd	r6, r3, [sp]
   2d92c:	mov	r3, r4
   2d92e:	bl	1a23c <btrfs_search_slot@@Base>
   2d932:	cmp	r0, #0
   2d934:	bne.n	2d946 <btrfs_lookup_inode_ref@@Base+0x5e>
   2d936:	ldr	r2, [sp, #56]	; 0x38
   2d938:	add	r3, sp, #12
   2d93a:	mov	r1, r5
   2d93c:	mov	r0, r4
   2d93e:	bl	2d6f0 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2d942:	ldr	r0, [sp, #12]
   2d944:	b.n	2d948 <btrfs_lookup_inode_ref@@Base+0x60>
   2d946:	bge.n	2d942 <btrfs_lookup_inode_ref@@Base+0x5a>
   2d948:	ldr	r2, [pc, #28]	; (2d968 <btrfs_lookup_inode_ref@@Base+0x80>)
   2d94a:	ldr	r3, [pc, #24]	; (2d964 <btrfs_lookup_inode_ref@@Base+0x7c>)
   2d94c:	add	r2, pc
   2d94e:	ldr	r3, [r2, r3]
   2d950:	ldr	r2, [r3, #0]
   2d952:	ldr	r3, [sp, #36]	; 0x24
   2d954:	eors	r2, r3
   2d956:	beq.n	2d95c <btrfs_lookup_inode_ref@@Base+0x74>
   2d958:	blx	84cc <__stack_chk_fail@plt>
   2d95c:	add	sp, #40	; 0x28
   2d95e:	pop	{r4, r5, r6, pc}
   2d960:	strb	r4, [r2, #18]
   2d962:	movs	r3, r0
   2d964:	lsls	r4, r4, #8
   2d966:	movs	r0, r0
   2d968:	strb	r4, [r7, #16]
   2d96a:	movs	r3, r0

0002d96c <btrfs_lookup_inode_extref@@Base>:
   2d96c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d970:	mov	sl, r2
   2d972:	ldr	r2, [pc, #152]	; (2da0c <btrfs_lookup_inode_extref@@Base+0xa0>)
   2d974:	sub	sp, #52	; 0x34
   2d976:	ldr	r3, [pc, #152]	; (2da10 <btrfs_lookup_inode_extref@@Base+0xa4>)
   2d978:	mov	r5, r0
   2d97a:	add	r2, pc
   2d97c:	ldrd	r7, r8, [sp, #112]	; 0x70
   2d980:	ldrd	r6, r9, [sp, #96]	; 0x60
   2d984:	mov	r4, r1
   2d986:	ldr	r3, [r2, r3]
   2d988:	mov	r1, r7
   2d98a:	ldr.w	fp, [sp, #120]	; 0x78
   2d98e:	ldr	r3, [r3, #0]
   2d990:	str	r3, [sp, #44]	; 0x2c
   2d992:	mov.w	r3, #0
   2d996:	ldrd	r2, r3, [sp, #88]	; 0x58
   2d99a:	mov	r0, r6
   2d99c:	strd	r2, r3, [sp, #24]
   2d9a0:	mov	r2, r8
   2d9a2:	movs	r3, #13
   2d9a4:	strb.w	r3, [sp, #32]
   2d9a8:	bl	173fa <crc32c_le@@Base>
   2d9ac:	movs	r3, #0
   2d9ae:	str.w	r3, [sp, #37]	; 0x25
   2d9b2:	subs.w	r3, fp, r3
   2d9b6:	add	r2, sp, #24
   2d9b8:	mov	r1, sl
   2d9ba:	it	ne
   2d9bc:	movne	r3, #1
   2d9be:	strd	fp, r3, [sp]
   2d9c2:	mov	r3, r4
   2d9c4:	str.w	r0, [sp, #33]	; 0x21
   2d9c8:	mov	r0, r5
   2d9ca:	bl	1a23c <btrfs_search_slot@@Base>
   2d9ce:	cmp	r0, #0
   2d9d0:	blt.n	2d9d6 <btrfs_lookup_inode_extref@@Base+0x6a>
   2d9d2:	beq.n	2d9ea <btrfs_lookup_inode_extref@@Base+0x7e>
   2d9d4:	movs	r0, #0
   2d9d6:	ldr	r2, [pc, #60]	; (2da14 <btrfs_lookup_inode_extref@@Base+0xa8>)
   2d9d8:	ldr	r3, [pc, #52]	; (2da10 <btrfs_lookup_inode_extref@@Base+0xa4>)
   2d9da:	add	r2, pc
   2d9dc:	ldr	r3, [r2, r3]
   2d9de:	ldr	r2, [r3, #0]
   2d9e0:	ldr	r3, [sp, #44]	; 0x2c
   2d9e2:	eors	r2, r3
   2d9e4:	beq.n	2da04 <btrfs_lookup_inode_extref@@Base+0x98>
   2d9e6:	blx	84cc <__stack_chk_fail@plt>
   2d9ea:	add	r3, sp, #20
   2d9ec:	mov	r2, r6
   2d9ee:	strd	r8, r3, [sp, #4]
   2d9f2:	mov	r0, r4
   2d9f4:	mov	r3, r9
   2d9f6:	str	r7, [sp, #0]
   2d9f8:	bl	2d750 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2d9fc:	cmp	r0, #0
   2d9fe:	beq.n	2d9d4 <btrfs_lookup_inode_extref@@Base+0x68>
   2da00:	ldr	r0, [sp, #20]
   2da02:	b.n	2d9d6 <btrfs_lookup_inode_extref@@Base+0x6a>
   2da04:	add	sp, #52	; 0x34
   2da06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2da0a:	nop
   2da0c:	strb	r6, [r1, #16]
   2da0e:	movs	r3, r0
   2da10:	lsls	r4, r4, #8
   2da12:	movs	r0, r0
   2da14:	strb	r6, [r5, #14]
   2da16:	movs	r3, r0

0002da18 <btrfs_del_inode_extref@@Base>:
   2da18:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2da1c:	mov	r6, r3
   2da1e:	vpush	{d8}
   2da22:	mov	fp, r2
   2da24:	ldr	r2, [pc, #284]	; (2db44 <btrfs_del_inode_extref@@Base+0x12c>)
   2da26:	mov	r8, r0
   2da28:	mov	r7, r1
   2da2a:	mov	r1, fp
   2da2c:	add	r2, pc
   2da2e:	sub	sp, #52	; 0x34
   2da30:	ldrd	sl, r3, [sp, #104]	; 0x68
   2da34:	ldr.w	r9, [sp, #112]	; 0x70
   2da38:	vmov	s16, r3
   2da3c:	ldr	r3, [pc, #264]	; (2db48 <btrfs_del_inode_extref@@Base+0x130>)
   2da3e:	mov	r0, sl
   2da40:	ldr	r3, [r2, r3]
   2da42:	ldr	r3, [r3, #0]
   2da44:	str	r3, [sp, #44]	; 0x2c
   2da46:	mov.w	r3, #0
   2da4a:	ldrd	r2, r3, [sp, #96]	; 0x60
   2da4e:	strd	r2, r3, [sp, #24]
   2da52:	mov	r2, r6
   2da54:	movs	r3, #13
   2da56:	strb.w	r3, [sp, #32]
   2da5a:	bl	173fa <crc32c_le@@Base>
   2da5e:	movs	r3, #0
   2da60:	str.w	r3, [sp, #37]	; 0x25
   2da64:	str.w	r0, [sp, #33]	; 0x21
   2da68:	bl	17e50 <btrfs_alloc_path@@Base>
   2da6c:	mov	r4, r0
   2da6e:	cmp	r0, #0
   2da70:	beq.n	2db30 <btrfs_del_inode_extref@@Base+0x118>
   2da72:	mov.w	r3, #4294967295	; 0xffffffff
   2da76:	movs	r2, #1
   2da78:	mov	r1, r7
   2da7a:	strd	r3, r2, [sp]
   2da7e:	mov	r3, r0
   2da80:	add	r2, sp, #24
   2da82:	mov	r0, r8
   2da84:	bl	1a23c <btrfs_search_slot@@Base>
   2da88:	subs	r5, r0, #0
   2da8a:	ble.n	2daaa <btrfs_del_inode_extref@@Base+0x92>
   2da8c:	mvn.w	r5, #1
   2da90:	mov	r0, r4
   2da92:	bl	17e7e <btrfs_free_path@@Base>
   2da96:	ldr	r2, [pc, #180]	; (2db4c <btrfs_del_inode_extref@@Base+0x134>)
   2da98:	ldr	r3, [pc, #172]	; (2db48 <btrfs_del_inode_extref@@Base+0x130>)
   2da9a:	add	r2, pc
   2da9c:	ldr	r3, [r2, r3]
   2da9e:	ldr	r2, [r3, #0]
   2daa0:	ldr	r3, [sp, #44]	; 0x2c
   2daa2:	eors	r2, r3
   2daa4:	beq.n	2db36 <btrfs_del_inode_extref@@Base+0x11e>
   2daa6:	blx	84cc <__stack_chk_fail@plt>
   2daaa:	bne.n	2da90 <btrfs_del_inode_extref@@Base+0x78>
   2daac:	add	r3, sp, #20
   2daae:	mov	r2, sl
   2dab0:	strd	r6, r3, [sp, #4]
   2dab4:	mov	r0, r4
   2dab6:	vmov	r3, s16
   2daba:	str.w	fp, [sp]
   2dabe:	bl	2d750 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2dac2:	cmp	r0, #0
   2dac4:	beq.n	2da8c <btrfs_del_inode_extref@@Base+0x74>
   2dac6:	ldr	r0, [r4, #0]
   2dac8:	movs	r2, #25
   2daca:	ldr	r3, [r4, #32]
   2dacc:	add.w	ip, r0, #96	; 0x60
   2dad0:	mla	r3, r2, r3, ip
   2dad4:	ldr.w	sl, [r3, #122]	; 0x7a
   2dad8:	cmp.w	r9, #0
   2dadc:	beq.n	2daea <btrfs_del_inode_extref@@Base+0xd2>
   2dade:	ldr	r2, [sp, #20]
   2dae0:	add	r2, ip
   2dae2:	ldr	r1, [r2, #8]
   2dae4:	ldr	r3, [r2, #12]
   2dae6:	strd	r1, r3, [r9]
   2daea:	adds	r6, #18
   2daec:	ldr	r3, [r4, #32]
   2daee:	cmp	r6, sl
   2daf0:	bne.n	2db04 <btrfs_del_inode_extref@@Base+0xec>
   2daf2:	movs	r2, #1
   2daf4:	mov	r1, r7
   2daf6:	str	r2, [sp, #0]
   2daf8:	mov	r0, r8
   2dafa:	mov	r2, r4
   2dafc:	bl	1b3f8 <btrfs_del_items@@Base>
   2db00:	mov	r5, r0
   2db02:	b.n	2da90 <btrfs_del_inode_extref@@Base+0x78>
   2db04:	mov.w	lr, #25
   2db08:	ldr	r1, [sp, #20]
   2db0a:	mla	r3, lr, r3, ip
   2db0e:	adds	r2, r6, r1
   2db10:	ldr.w	ip, [r3, #118]	; 0x76
   2db14:	rsb	r3, r2, #101	; 0x65
   2db18:	add	r3, sl
   2db1a:	add	r3, ip
   2db1c:	bl	1738c <memmove_extent_buffer@@Base>
   2db20:	sub.w	r2, sl, r6
   2db24:	movs	r3, #1
   2db26:	mov	r1, r4
   2db28:	mov	r0, r7
   2db2a:	bl	19e7c <btrfs_truncate_item@@Base>
   2db2e:	b.n	2da90 <btrfs_del_inode_extref@@Base+0x78>
   2db30:	mvn.w	r5, #11
   2db34:	b.n	2da96 <btrfs_del_inode_extref@@Base+0x7e>
   2db36:	mov	r0, r5
   2db38:	add	sp, #52	; 0x34
   2db3a:	vpop	{d8}
   2db3e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2db42:	nop
   2db44:	strb	r4, [r3, #13]
   2db46:	movs	r3, r0
   2db48:	lsls	r4, r4, #8
   2db4a:	movs	r0, r0
   2db4c:	strb	r6, [r5, #11]
   2db4e:	movs	r3, r0

0002db50 <btrfs_insert_inode_extref@@Base>:
   2db50:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2db54:	sub	sp, #68	; 0x44
   2db56:	mov	r6, r3
   2db58:	mov	r7, r2
   2db5a:	ldrd	sl, r3, [sp, #112]	; 0x70
   2db5e:	mov	r5, r0
   2db60:	ldr	r2, [pc, #260]	; (2dc68 <btrfs_insert_inode_extref@@Base+0x118>)
   2db62:	mov	r9, r1
   2db64:	mov	r1, r7
   2db66:	mov.w	fp, #0
   2db6a:	str	r3, [sp, #20]
   2db6c:	add	r2, pc
   2db6e:	ldr	r3, [sp, #120]	; 0x78
   2db70:	mov	r0, sl
   2db72:	add.w	r8, r6, #18
   2db76:	str	r3, [sp, #24]
   2db78:	ldr	r3, [sp, #124]	; 0x7c
   2db7a:	str	r3, [sp, #28]
   2db7c:	ldr	r3, [pc, #236]	; (2dc6c <btrfs_insert_inode_extref@@Base+0x11c>)
   2db7e:	ldr	r3, [r2, r3]
   2db80:	ldr	r3, [r3, #0]
   2db82:	str	r3, [sp, #60]	; 0x3c
   2db84:	mov.w	r3, #0
   2db88:	ldrd	r2, r3, [sp, #104]	; 0x68
   2db8c:	strd	r2, r3, [sp, #40]	; 0x28
   2db90:	mov	r2, r6
   2db92:	movs	r3, #13
   2db94:	strb.w	r3, [sp, #48]	; 0x30
   2db98:	bl	173fa <crc32c_le@@Base>
   2db9c:	str.w	fp, [sp, #53]	; 0x35
   2dba0:	str.w	r0, [sp, #49]	; 0x31
   2dba4:	bl	17e50 <btrfs_alloc_path@@Base>
   2dba8:	mov	r4, r0
   2dbaa:	cmp	r0, #0
   2dbac:	beq.n	2dc58 <btrfs_insert_inode_extref@@Base+0x108>
   2dbae:	movs	r3, #1
   2dbb0:	mov	r2, r0
   2dbb2:	str	r3, [sp, #4]
   2dbb4:	mov	r0, r5
   2dbb6:	add	r3, sp, #36	; 0x24
   2dbb8:	mov	r1, r9
   2dbba:	str	r3, [sp, #0]
   2dbbc:	add	r3, sp, #40	; 0x28
   2dbbe:	str.w	r8, [sp, #36]	; 0x24
   2dbc2:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2dbc6:	cmn.w	r0, #17
   2dbca:	mov	r5, r0
   2dbcc:	bne.n	2dc3a <btrfs_insert_inode_extref@@Base+0xea>
   2dbce:	strd	r6, fp, [sp, #4]
   2dbd2:	mov	r2, sl
   2dbd4:	ldr	r3, [sp, #20]
   2dbd6:	mov	r0, r4
   2dbd8:	str	r7, [sp, #0]
   2dbda:	bl	2d750 <btrfs_add_corrupt_extent_record@@Base+0x168>
   2dbde:	mov	fp, r0
   2dbe0:	cbnz	r0, 2dc3e <btrfs_insert_inode_extref@@Base+0xee>
   2dbe2:	mov	r2, r8
   2dbe4:	mov	r1, r4
   2dbe6:	mov	r0, r9
   2dbe8:	mov	r5, fp
   2dbea:	bl	1a030 <btrfs_extend_item@@Base>
   2dbee:	ldr	r3, [r4, #0]
   2dbf0:	movs	r2, #25
   2dbf2:	ldr	r1, [r4, #32]
   2dbf4:	rsb	r8, r8, #101	; 0x65
   2dbf8:	adds	r3, #96	; 0x60
   2dbfa:	mla	r1, r2, r1, r3
   2dbfe:	ldr.w	r2, [r1, #118]	; 0x76
   2dc02:	add	r8, r2
   2dc04:	ldr.w	r2, [r1, #122]	; 0x7a
   2dc08:	ldr	r1, [sp, #24]
   2dc0a:	add	r2, r8
   2dc0c:	add	r3, r2
   2dc0e:	strh	r6, [r3, #16]
   2dc10:	ldr	r3, [r4, #0]
   2dc12:	add	r3, r2
   2dc14:	str	r1, [r3, #104]	; 0x68
   2dc16:	ldr	r1, [sp, #28]
   2dc18:	str	r1, [r3, #108]	; 0x6c
   2dc1a:	ldr	r3, [r4, #0]
   2dc1c:	ldr	r1, [sp, #20]
   2dc1e:	add	r3, r2
   2dc20:	adds	r2, #18
   2dc22:	str.w	sl, [r3, #96]	; 0x60
   2dc26:	str	r1, [r3, #100]	; 0x64
   2dc28:	mov	r3, r6
   2dc2a:	ldr	r0, [r4, #0]
   2dc2c:	mov	r1, r7
   2dc2e:	bl	17330 <write_extent_buffer@@Base>
   2dc32:	ldr	r0, [r4, #0]
   2dc34:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2dc38:	b.n	2dc3e <btrfs_insert_inode_extref@@Base+0xee>
   2dc3a:	cmp	r0, #0
   2dc3c:	bge.n	2dbee <btrfs_insert_inode_extref@@Base+0x9e>
   2dc3e:	mov	r0, r4
   2dc40:	bl	17e7e <btrfs_free_path@@Base>
   2dc44:	ldr	r2, [pc, #40]	; (2dc70 <btrfs_insert_inode_extref@@Base+0x120>)
   2dc46:	ldr	r3, [pc, #36]	; (2dc6c <btrfs_insert_inode_extref@@Base+0x11c>)
   2dc48:	add	r2, pc
   2dc4a:	ldr	r3, [r2, r3]
   2dc4c:	ldr	r2, [r3, #0]
   2dc4e:	ldr	r3, [sp, #60]	; 0x3c
   2dc50:	eors	r2, r3
   2dc52:	beq.n	2dc5e <btrfs_insert_inode_extref@@Base+0x10e>
   2dc54:	blx	84cc <__stack_chk_fail@plt>
   2dc58:	mvn.w	r5, #11
   2dc5c:	b.n	2dc44 <btrfs_insert_inode_extref@@Base+0xf4>
   2dc5e:	mov	r0, r5
   2dc60:	add	sp, #68	; 0x44
   2dc62:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dc66:	nop
   2dc68:	strb	r4, [r3, #8]
   2dc6a:	movs	r3, r0
   2dc6c:	lsls	r4, r4, #8
   2dc6e:	movs	r0, r0
   2dc70:	strb	r0, [r0, #5]
   2dc72:	movs	r3, r0

0002dc74 <btrfs_insert_inode_ref@@Base>:
   2dc74:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dc78:	sub	sp, #148	; 0x94
   2dc7a:	mov	r6, r3
   2dc7c:	mov	r8, r2
   2dc7e:	ldr	r3, [sp, #192]	; 0xc0
   2dc80:	mov	r9, r0
   2dc82:	ldr	r2, [pc, #424]	; (2de2c <btrfs_insert_inode_ref@@Base+0x1b8>)
   2dc84:	mov	r7, r1
   2dc86:	ldr.w	fp, [sp, #204]	; 0xcc
   2dc8a:	str	r3, [sp, #36]	; 0x24
   2dc8c:	add	r2, pc
   2dc8e:	ldr	r3, [sp, #196]	; 0xc4
   2dc90:	str	r3, [sp, #40]	; 0x28
   2dc92:	ldr	r3, [sp, #200]	; 0xc8
   2dc94:	str	r3, [sp, #24]
   2dc96:	ldr	r3, [pc, #408]	; (2de30 <btrfs_insert_inode_ref@@Base+0x1bc>)
   2dc98:	add	r3, pc
   2dc9a:	str	r3, [sp, #32]
   2dc9c:	ldr	r3, [pc, #404]	; (2de34 <btrfs_insert_inode_ref@@Base+0x1c0>)
   2dc9e:	ldr	r3, [r2, r3]
   2dca0:	ldr	r3, [r3, #0]
   2dca2:	str	r3, [sp, #140]	; 0x8c
   2dca4:	mov.w	r3, #0
   2dca8:	add.w	r3, r6, #10
   2dcac:	str	r3, [sp, #28]
   2dcae:	ldrd	r3, r4, [sp, #184]	; 0xb8
   2dcb2:	strd	r3, r4, [sp, #56]	; 0x38
   2dcb6:	ldr	r3, [sp, #36]	; 0x24
   2dcb8:	str.w	r3, [sp, #65]	; 0x41
   2dcbc:	ldr	r3, [sp, #40]	; 0x28
   2dcbe:	str.w	r3, [sp, #69]	; 0x45
   2dcc2:	movs	r3, #12
   2dcc4:	strb.w	r3, [sp, #64]	; 0x40
   2dcc8:	bl	17e50 <btrfs_alloc_path@@Base>
   2dccc:	mov	r4, r0
   2dcce:	cmp	r0, #0
   2dcd0:	beq.w	2de1e <btrfs_insert_inode_ref@@Base+0x1aa>
   2dcd4:	ldr	r3, [sp, #28]
   2dcd6:	mov	r2, r0
   2dcd8:	add.w	sl, sp, #52	; 0x34
   2dcdc:	mov	r1, r7
   2dcde:	mov	r0, r9
   2dce0:	str.w	sl, [sp]
   2dce4:	str	r3, [sp, #52]	; 0x34
   2dce6:	movs	r3, #1
   2dce8:	str	r3, [sp, #4]
   2dcea:	add	r3, sp, #56	; 0x38
   2dcec:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2dcf0:	cmn.w	r0, #17
   2dcf4:	mov	r5, r0
   2dcf6:	bne.n	2dda6 <btrfs_insert_inode_ref@@Base+0x132>
   2dcf8:	mov	r3, sl
   2dcfa:	mov	r2, r6
   2dcfc:	mov	r1, r8
   2dcfe:	mov	r0, r4
   2dd00:	bl	2d6f0 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2dd04:	cmp	r0, #0
   2dd06:	bne.n	2ddb4 <btrfs_insert_inode_ref@@Base+0x140>
   2dd08:	ldr	r2, [r4, #0]
   2dd0a:	mov.w	sl, #25
   2dd0e:	ldr	r3, [r4, #32]
   2dd10:	mov	r1, r4
   2dd12:	mov	r0, r7
   2dd14:	mla	r3, sl, r3, r2
   2dd18:	ldr	r2, [sp, #28]
   2dd1a:	ldr.w	r3, [r3, #218]	; 0xda
   2dd1e:	str	r3, [sp, #44]	; 0x2c
   2dd20:	bl	1a030 <btrfs_extend_item@@Base>
   2dd24:	ldr	r3, [sp, #44]	; 0x2c
   2dd26:	mov	r5, r0
   2dd28:	cbz	r0, 2dd6a <btrfs_insert_inode_ref@@Base+0xf6>
   2dd2a:	ldr	r2, [sp, #32]
   2dd2c:	add	r4, sp, #76	; 0x4c
   2dd2e:	ldr	r3, [pc, #264]	; (2de38 <btrfs_insert_inode_ref@@Base+0x1c4>)
   2dd30:	movs	r1, #1
   2dd32:	ldr	r0, [r2, r3]
   2dd34:	ldr	r3, [pc, #260]	; (2de3c <btrfs_insert_inode_ref@@Base+0x1c8>)
   2dd36:	ldr	r2, [pc, #264]	; (2de40 <btrfs_insert_inode_ref@@Base+0x1cc>)
   2dd38:	add	r3, pc
   2dd3a:	str	r3, [sp, #8]
   2dd3c:	ldr	r3, [pc, #260]	; (2de44 <btrfs_insert_inode_ref@@Base+0x1d0>)
   2dd3e:	add	r2, pc
   2dd40:	str	r5, [sp, #12]
   2dd42:	add	r3, pc
   2dd44:	str	r3, [sp, #4]
   2dd46:	movs	r3, #83	; 0x53
   2dd48:	str	r3, [sp, #0]
   2dd4a:	ldr	r3, [pc, #252]	; (2de48 <btrfs_insert_inode_ref@@Base+0x1d4>)
   2dd4c:	ldr	r0, [r0, #0]
   2dd4e:	add	r3, pc
   2dd50:	blx	881c <__fprintf_chk@plt+0x4>
   2dd54:	movs	r1, #16
   2dd56:	mov	r0, r4
   2dd58:	blx	8680 <backtrace@plt>
   2dd5c:	movs	r2, #2
   2dd5e:	mov	r1, r0
   2dd60:	mov	r0, r4
   2dd62:	blx	8990 <backtrace_symbols_fd@plt>
   2dd66:	blx	8948 <abort@plt>
   2dd6a:	ldr	r2, [r4, #32]
   2dd6c:	ldr	r1, [r4, #0]
   2dd6e:	mla	r2, sl, r2, r1
   2dd72:	ldr.w	r2, [r2, #214]	; 0xd6
   2dd76:	add	r3, r2
   2dd78:	adds	r3, #101	; 0x65
   2dd7a:	str	r3, [sp, #52]	; 0x34
   2dd7c:	ldr	r2, [r4, #0]
   2dd7e:	mov	r1, r8
   2dd80:	add	r2, r3
   2dd82:	strh.w	r6, [r2, #104]	; 0x68
   2dd86:	ldr	r2, [r4, #0]
   2dd88:	add	r3, r2
   2dd8a:	ldr	r2, [sp, #24]
   2dd8c:	str.w	fp, [r3, #100]	; 0x64
   2dd90:	str	r2, [r3, #96]	; 0x60
   2dd92:	mov	r3, r6
   2dd94:	ldr	r2, [sp, #52]	; 0x34
   2dd96:	ldr	r0, [r4, #0]
   2dd98:	adds	r2, #10
   2dd9a:	bl	17330 <write_extent_buffer@@Base>
   2dd9e:	ldr	r0, [r4, #0]
   2dda0:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2dda4:	b.n	2ddb4 <btrfs_insert_inode_ref@@Base+0x140>
   2dda6:	cmp	r0, #0
   2dda8:	bge.n	2de0e <btrfs_insert_inode_ref@@Base+0x19a>
   2ddaa:	cmn.w	r0, #75	; 0x4b
   2ddae:	it	eq
   2ddb0:	mvneq.w	r5, #30
   2ddb4:	mov	r0, r4
   2ddb6:	bl	17e7e <btrfs_free_path@@Base>
   2ddba:	cmn.w	r5, #31
   2ddbe:	bne.n	2ddfa <btrfs_insert_inode_ref@@Base+0x186>
   2ddc0:	ldr.w	r3, [r7, #464]	; 0x1d0
   2ddc4:	ldr.w	r3, [r3, #308]	; 0x134
   2ddc8:	ldr.w	r1, [r3, #188]	; 0xbc
   2ddcc:	movs	r3, #0
   2ddce:	and.w	r2, r1, #64	; 0x40
   2ddd2:	orrs	r3, r2
   2ddd4:	beq.n	2ddfa <btrfs_insert_inode_ref@@Base+0x186>
   2ddd6:	ldr	r3, [sp, #24]
   2ddd8:	mov	r2, r8
   2ddda:	mov	r1, r7
   2dddc:	mov	r0, r9
   2ddde:	strd	r3, fp, [sp, #16]
   2dde2:	ldr	r3, [sp, #36]	; 0x24
   2dde4:	str	r3, [sp, #8]
   2dde6:	ldr	r3, [sp, #40]	; 0x28
   2dde8:	str	r3, [sp, #12]
   2ddea:	ldrd	r3, r4, [sp, #184]	; 0xb8
   2ddee:	strd	r3, r4, [sp]
   2ddf2:	mov	r3, r6
   2ddf4:	bl	2db50 <btrfs_insert_inode_extref@@Base>
   2ddf8:	mov	r5, r0
   2ddfa:	ldr	r2, [pc, #80]	; (2de4c <btrfs_insert_inode_ref@@Base+0x1d8>)
   2ddfc:	ldr	r3, [pc, #52]	; (2de34 <btrfs_insert_inode_ref@@Base+0x1c0>)
   2ddfe:	add	r2, pc
   2de00:	ldr	r3, [r2, r3]
   2de02:	ldr	r2, [r3, #0]
   2de04:	ldr	r3, [sp, #140]	; 0x8c
   2de06:	eors	r2, r3
   2de08:	beq.n	2de24 <btrfs_insert_inode_ref@@Base+0x1b0>
   2de0a:	blx	84cc <__stack_chk_fail@plt>
   2de0e:	ldr	r3, [r4, #32]
   2de10:	movs	r1, #25
   2de12:	ldr	r2, [r4, #0]
   2de14:	mla	r3, r1, r3, r2
   2de18:	ldr.w	r3, [r3, #214]	; 0xd6
   2de1c:	b.n	2dd78 <btrfs_insert_inode_ref@@Base+0x104>
   2de1e:	mvn.w	r5, #11
   2de22:	b.n	2ddfa <btrfs_insert_inode_ref@@Base+0x186>
   2de24:	mov	r0, r5
   2de26:	add	sp, #148	; 0x94
   2de28:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de2c:	strb	r4, [r7, #3]
   2de2e:	movs	r3, r0
   2de30:	strb	r0, [r6, #3]
   2de32:	movs	r3, r0
   2de34:	lsls	r4, r4, #8
   2de36:	movs	r0, r0
   2de38:	lsls	r4, r6, #8
   2de3a:	movs	r0, r0
   2de3c:	ldmia	r1, {r0, r1, r3, r4, r5, r6, r7}
   2de3e:	movs	r0, r0
   2de40:	pop	{r0, r1, r4, r6, pc}
   2de42:	movs	r0, r0
   2de44:	adds	r3, #233	; 0xe9
   2de46:	movs	r1, r0
   2de48:	adds	r3, #208	; 0xd0
   2de4a:	movs	r1, r0
   2de4c:	ldr	r2, [r1, #120]	; 0x78
   2de4e:	movs	r3, r0

0002de50 <btrfs_del_inode_ref@@Base>:
   2de50:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2de54:	sub	sp, #76	; 0x4c
   2de56:	mov	r8, r3
   2de58:	mov	r9, r2
   2de5a:	ldr	r3, [sp, #120]	; 0x78
   2de5c:	mov	r7, r0
   2de5e:	ldr	r2, [pc, #356]	; (2dfc4 <btrfs_del_inode_ref@@Base+0x174>)
   2de60:	mov	r6, r1
   2de62:	ldr.w	sl, [sp, #128]	; 0x80
   2de66:	str	r3, [sp, #32]
   2de68:	add	r2, pc
   2de6a:	ldr	r3, [sp, #124]	; 0x7c
   2de6c:	str	r3, [sp, #36]	; 0x24
   2de6e:	ldr	r3, [pc, #344]	; (2dfc8 <btrfs_del_inode_ref@@Base+0x178>)
   2de70:	ldr	r3, [r2, r3]
   2de72:	ldr	r3, [r3, #0]
   2de74:	str	r3, [sp, #68]	; 0x44
   2de76:	mov.w	r3, #0
   2de7a:	ldrd	r3, r4, [sp, #112]	; 0x70
   2de7e:	strd	r3, r4, [sp, #48]	; 0x30
   2de82:	ldr	r3, [sp, #32]
   2de84:	str.w	r3, [sp, #57]	; 0x39
   2de88:	ldr	r3, [sp, #36]	; 0x24
   2de8a:	str.w	r3, [sp, #61]	; 0x3d
   2de8e:	movs	r3, #12
   2de90:	strb.w	r3, [sp, #56]	; 0x38
   2de94:	bl	17e50 <btrfs_alloc_path@@Base>
   2de98:	mov	r5, r0
   2de9a:	cmp	r0, #0
   2de9c:	beq.w	2dfb6 <btrfs_del_inode_ref@@Base+0x166>
   2dea0:	mov.w	r3, #4294967295	; 0xffffffff
   2dea4:	movs	r2, #1
   2dea6:	mov	r1, r6
   2dea8:	strd	r3, r2, [sp]
   2deac:	mov	r3, r0
   2deae:	add	r2, sp, #48	; 0x30
   2deb0:	mov	r0, r7
   2deb2:	bl	1a23c <btrfs_search_slot@@Base>
   2deb6:	subs	r4, r0, #0
   2deb8:	ble.n	2df1a <btrfs_del_inode_ref@@Base+0xca>
   2deba:	mov.w	fp, #1
   2debe:	mvn.w	r4, #1
   2dec2:	mov	r0, r5
   2dec4:	bl	17e7e <btrfs_free_path@@Base>
   2dec8:	cmp.w	fp, #0
   2decc:	beq.n	2df06 <btrfs_del_inode_ref@@Base+0xb6>
   2dece:	ldr.w	r3, [r6, #464]	; 0x1d0
   2ded2:	ldr.w	r3, [r3, #308]	; 0x134
   2ded6:	ldr.w	r1, [r3, #188]	; 0xbc
   2deda:	movs	r3, #0
   2dedc:	and.w	r2, r1, #64	; 0x40
   2dee0:	orrs	r3, r2
   2dee2:	beq.n	2df06 <btrfs_del_inode_ref@@Base+0xb6>
   2dee4:	ldr	r3, [sp, #32]
   2dee6:	mov	r2, r9
   2dee8:	mov	r1, r6
   2deea:	mov	r0, r7
   2deec:	str.w	sl, [sp, #16]
   2def0:	str	r3, [sp, #8]
   2def2:	ldr	r3, [sp, #36]	; 0x24
   2def4:	str	r3, [sp, #12]
   2def6:	ldrd	r3, r4, [sp, #112]	; 0x70
   2defa:	strd	r3, r4, [sp]
   2defe:	mov	r3, r8
   2df00:	bl	2da18 <btrfs_del_inode_extref@@Base>
   2df04:	mov	r4, r0
   2df06:	ldr	r2, [pc, #196]	; (2dfcc <btrfs_del_inode_ref@@Base+0x17c>)
   2df08:	ldr	r3, [pc, #188]	; (2dfc8 <btrfs_del_inode_ref@@Base+0x178>)
   2df0a:	add	r2, pc
   2df0c:	ldr	r3, [r2, r3]
   2df0e:	ldr	r2, [r3, #0]
   2df10:	ldr	r3, [sp, #68]	; 0x44
   2df12:	eors	r2, r3
   2df14:	beq.n	2dfbc <btrfs_del_inode_ref@@Base+0x16c>
   2df16:	blx	84cc <__stack_chk_fail@plt>
   2df1a:	bne.n	2dfb0 <btrfs_del_inode_ref@@Base+0x160>
   2df1c:	add	r3, sp, #44	; 0x2c
   2df1e:	mov	r2, r8
   2df20:	mov	r1, r9
   2df22:	mov	r0, r5
   2df24:	bl	2d6f0 <btrfs_add_corrupt_extent_record@@Base+0x108>
   2df28:	cmp	r0, #0
   2df2a:	beq.n	2deba <btrfs_del_inode_ref@@Base+0x6a>
   2df2c:	ldr	r0, [r5, #0]
   2df2e:	movs	r2, #25
   2df30:	ldr	r3, [r5, #32]
   2df32:	add.w	ip, r0, #96	; 0x60
   2df36:	mla	r3, r2, r3, ip
   2df3a:	ldr.w	r3, [r3, #122]	; 0x7a
   2df3e:	str	r3, [sp, #28]
   2df40:	cmp.w	sl, #0
   2df44:	beq.n	2df56 <btrfs_del_inode_ref@@Base+0x106>
   2df46:	ldr	r3, [sp, #44]	; 0x2c
   2df48:	add.w	r1, ip, r3
   2df4c:	ldr.w	r2, [ip, r3]
   2df50:	ldr	r3, [r1, #4]
   2df52:	strd	r2, r3, [sl]
   2df56:	ldr	r2, [sp, #28]
   2df58:	add.w	fp, r8, #10
   2df5c:	ldr	r3, [r5, #32]
   2df5e:	cmp	fp, r2
   2df60:	bne.n	2df76 <btrfs_del_inode_ref@@Base+0x126>
   2df62:	movs	r2, #1
   2df64:	mov	r1, r6
   2df66:	str	r2, [sp, #0]
   2df68:	mov	r0, r7
   2df6a:	mov	r2, r5
   2df6c:	mov	fp, r4
   2df6e:	bl	1b3f8 <btrfs_del_items@@Base>
   2df72:	mov	r4, r0
   2df74:	b.n	2dec2 <btrfs_del_inode_ref@@Base+0x72>
   2df76:	mov.w	lr, #25
   2df7a:	ldr	r1, [sp, #44]	; 0x2c
   2df7c:	mla	r3, lr, r3, ip
   2df80:	add.w	r2, fp, r1
   2df84:	rsb	lr, r2, #101	; 0x65
   2df88:	ldr.w	ip, [r3, #118]	; 0x76
   2df8c:	ldr	r3, [sp, #28]
   2df8e:	add	r3, lr
   2df90:	add	r3, ip
   2df92:	bl	1738c <memmove_extent_buffer@@Base>
   2df96:	ldr	r2, [sp, #28]
   2df98:	movs	r3, #1
   2df9a:	mov	r1, r5
   2df9c:	sub.w	r2, r2, fp
   2dfa0:	mov	r0, r6
   2dfa2:	bl	19e7c <btrfs_truncate_item@@Base>
   2dfa6:	ldr	r0, [r5, #0]
   2dfa8:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2dfac:	mov	fp, r4
   2dfae:	b.n	2dec2 <btrfs_del_inode_ref@@Base+0x72>
   2dfb0:	mov.w	fp, #0
   2dfb4:	b.n	2dec2 <btrfs_del_inode_ref@@Base+0x72>
   2dfb6:	mvn.w	r4, #11
   2dfba:	b.n	2df06 <btrfs_del_inode_ref@@Base+0xb6>
   2dfbc:	mov	r0, r4
   2dfbe:	add	sp, #76	; 0x4c
   2dfc0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dfc4:	ldr	r0, [r4, #112]	; 0x70
   2dfc6:	movs	r3, r0
   2dfc8:	lsls	r4, r4, #8
   2dfca:	movs	r0, r0
   2dfcc:	ldr	r6, [r7, #100]	; 0x64
   2dfce:	movs	r3, r0
   2dfd0:	ldr	r2, [pc, #60]	; (2e010 <btrfs_del_inode_ref@@Base+0x1c0>)
   2dfd2:	movs	r1, #16
   2dfd4:	ldr	r3, [pc, #60]	; (2e014 <btrfs_del_inode_ref@@Base+0x1c4>)
   2dfd6:	push	{r4, lr}
   2dfd8:	add	r2, pc
   2dfda:	sub	sp, #72	; 0x48
   2dfdc:	add	r4, sp, #4
   2dfde:	ldr	r3, [r2, r3]
   2dfe0:	mov	r0, r4
   2dfe2:	ldr	r3, [r3, #0]
   2dfe4:	str	r3, [sp, #68]	; 0x44
   2dfe6:	mov.w	r3, #0
   2dfea:	blx	8680 <backtrace@plt>
   2dfee:	movs	r2, #2
   2dff0:	mov	r1, r0
   2dff2:	mov	r0, r4
   2dff4:	blx	8990 <backtrace_symbols_fd@plt>
   2dff8:	ldr	r2, [pc, #28]	; (2e018 <btrfs_del_inode_ref@@Base+0x1c8>)
   2dffa:	ldr	r3, [pc, #24]	; (2e014 <btrfs_del_inode_ref@@Base+0x1c4>)
   2dffc:	add	r2, pc
   2dffe:	ldr	r3, [r2, r3]
   2e000:	ldr	r2, [r3, #0]
   2e002:	ldr	r3, [sp, #68]	; 0x44
   2e004:	eors	r2, r3
   2e006:	beq.n	2e00c <btrfs_del_inode_ref@@Base+0x1bc>
   2e008:	blx	84cc <__stack_chk_fail@plt>
   2e00c:	add	sp, #72	; 0x48
   2e00e:	pop	{r4, pc}
   2e010:	ldr	r0, [r6, #88]	; 0x58
   2e012:	movs	r3, r0
   2e014:	lsls	r4, r4, #8
   2e016:	movs	r0, r0
   2e018:	ldr	r4, [r1, #88]	; 0x58
   2e01a:	movs	r3, r0
   2e01c:	push	{r4, lr}
   2e01e:	mov	r4, r1
   2e020:	ldr	r1, [pc, #84]	; (2e078 <btrfs_del_inode_ref@@Base+0x228>)
   2e022:	sub	sp, #24
   2e024:	ldr	r3, [pc, #84]	; (2e07c <btrfs_del_inode_ref@@Base+0x22c>)
   2e026:	add	r1, pc
   2e028:	ldr	r3, [r1, r3]
   2e02a:	mov	r1, sp
   2e02c:	ldr	r3, [r3, #0]
   2e02e:	str	r3, [sp, #20]
   2e030:	mov.w	r3, #0
   2e034:	movs	r3, #25
   2e036:	muls	r2, r3
   2e038:	movs	r3, #17
   2e03a:	adds	r2, #101	; 0x65
   2e03c:	bl	1731a <read_extent_buffer@@Base>
   2e040:	ldr.w	r3, [sp, #13]
   2e044:	ldr.w	r2, [sp, #9]
   2e048:	str.w	r3, [r4, #13]
   2e04c:	ldrb.w	r3, [sp, #8]
   2e050:	str.w	r2, [r4, #9]
   2e054:	ldr	r2, [pc, #40]	; (2e080 <btrfs_del_inode_ref@@Base+0x230>)
   2e056:	strb	r3, [r4, #8]
   2e058:	ldr	r3, [sp, #0]
   2e05a:	add	r2, pc
   2e05c:	str	r3, [r4, #0]
   2e05e:	ldr	r3, [sp, #4]
   2e060:	str	r3, [r4, #4]
   2e062:	ldr	r3, [pc, #24]	; (2e07c <btrfs_del_inode_ref@@Base+0x22c>)
   2e064:	ldr	r3, [r2, r3]
   2e066:	ldr	r2, [r3, #0]
   2e068:	ldr	r3, [sp, #20]
   2e06a:	eors	r2, r3
   2e06c:	beq.n	2e072 <btrfs_del_inode_ref@@Base+0x222>
   2e06e:	blx	84cc <__stack_chk_fail@plt>
   2e072:	add	sp, #24
   2e074:	pop	{r4, pc}
   2e076:	nop
   2e078:	ldr	r2, [r4, #84]	; 0x54
   2e07a:	movs	r3, r0
   2e07c:	lsls	r4, r4, #8
   2e07e:	movs	r0, r0
   2e080:	ldr	r6, [r5, #80]	; 0x50
   2e082:	movs	r3, r0
   2e084:	push	{r0, r1, r2, r3, r4, lr}
   2e086:	ldr	r4, [pc, #40]	; (2e0b0 <btrfs_del_inode_ref@@Base+0x260>)
   2e088:	ldr	r5, [pc, #40]	; (2e0b4 <btrfs_del_inode_ref@@Base+0x264>)
   2e08a:	add	r4, pc
   2e08c:	ldr	r4, [r4, r5]
   2e08e:	strd	r2, r1, [sp]
   2e092:	movs	r1, #1
   2e094:	strd	r0, r3, [sp, #8]
   2e098:	ldr	r2, [pc, #28]	; (2e0b8 <btrfs_del_inode_ref@@Base+0x268>)
   2e09a:	ldr	r3, [pc, #32]	; (2e0bc <btrfs_del_inode_ref@@Base+0x26c>)
   2e09c:	add	r2, pc
   2e09e:	ldr	r0, [r4, #0]
   2e0a0:	add	r3, pc
   2e0a2:	blx	881c <__fprintf_chk@plt+0x4>
   2e0a6:	bl	2dfd0 <btrfs_del_inode_ref@@Base+0x180>
   2e0aa:	blx	8948 <abort@plt>
   2e0ae:	nop
   2e0b0:	ldr	r6, [r7, #76]	; 0x4c
   2e0b2:	movs	r3, r0
   2e0b4:	lsls	r4, r6, #8
   2e0b6:	movs	r0, r0
   2e0b8:	cbnz	r5, 2e0f8 <btrfs_insert_file_extent@@Base+0x2e>
   2e0ba:	movs	r0, r0
   2e0bc:	adds	r0, #162	; 0xa2
   2e0be:	movs	r1, r0
   2e0c0:	push	{r3, lr}
   2e0c2:	cbz	r3, 2e0c8 <btrfs_del_inode_ref@@Base+0x278>
   2e0c4:	bl	2e084 <btrfs_del_inode_ref@@Base+0x234>
   2e0c8:	pop	{r3, pc}

0002e0ca <btrfs_insert_file_extent@@Base>:
   2e0ca:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e0ce:	sub	sp, #60	; 0x3c
   2e0d0:	mov	r8, r3
   2e0d2:	mov	r6, r1
   2e0d4:	ldr	r3, [sp, #96]	; 0x60
   2e0d6:	mov	r5, r0
   2e0d8:	str	r2, [sp, #16]
   2e0da:	movs	r0, #0
   2e0dc:	ldr	r2, [pc, #312]	; (2e218 <btrfs_insert_file_extent@@Base+0x14e>)
   2e0de:	str	r3, [sp, #12]
   2e0e0:	ldr	r3, [pc, #312]	; (2e21c <btrfs_insert_file_extent@@Base+0x152>)
   2e0e2:	add	r2, pc
   2e0e4:	ldr	r1, [sp, #100]	; 0x64
   2e0e6:	ldrd	r7, fp, [sp, #112]	; 0x70
   2e0ea:	ldr	r3, [r2, r3]
   2e0ec:	ldrd	sl, r9, [sp, #120]	; 0x78
   2e0f0:	ldr	r3, [r3, #0]
   2e0f2:	str	r3, [sp, #52]	; 0x34
   2e0f4:	mov.w	r3, #0
   2e0f8:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e0fc:	ldr.w	r3, [r3, #308]	; 0x134
   2e100:	ldr.w	ip, [r3, #188]	; 0xbc
   2e104:	mov	r3, r0
   2e106:	and.w	r2, ip, #512	; 0x200
   2e10a:	orrs	r3, r2
   2e10c:	ldrd	r3, r4, [sp, #104]	; 0x68
   2e110:	beq.n	2e11a <btrfs_insert_file_extent@@Base+0x50>
   2e112:	orrs	r3, r4
   2e114:	bne.n	2e122 <btrfs_insert_file_extent@@Base+0x58>
   2e116:	mov	r6, r0
   2e118:	b.n	2e1f4 <btrfs_insert_file_extent@@Base+0x12a>
   2e11a:	orrs	r3, r4
   2e11c:	itt	eq
   2e11e:	moveq	r7, r0
   2e120:	moveq	fp, r7
   2e122:	str	r1, [sp, #20]
   2e124:	bl	17e50 <btrfs_alloc_path@@Base>
   2e128:	mov	r4, r0
   2e12a:	cmp	r0, #0
   2e12c:	beq.n	2e208 <btrfs_insert_file_extent@@Base+0x13e>
   2e12e:	ldr	r3, [sp, #16]
   2e130:	mov	r2, r0
   2e132:	ldr	r1, [sp, #20]
   2e134:	mov	r0, r5
   2e136:	strd	r3, r8, [sp, #32]
   2e13a:	mov.w	r8, #1
   2e13e:	ldr	r3, [sp, #12]
   2e140:	str.w	r1, [sp, #45]	; 0x2d
   2e144:	mov	r1, r6
   2e146:	str.w	r8, [sp, #4]
   2e14a:	str.w	r3, [sp, #41]	; 0x29
   2e14e:	movs	r3, #108	; 0x6c
   2e150:	strb.w	r3, [sp, #40]	; 0x28
   2e154:	movs	r3, #53	; 0x35
   2e156:	str	r3, [sp, #28]
   2e158:	add	r3, sp, #28
   2e15a:	str	r3, [sp, #0]
   2e15c:	add	r3, sp, #32
   2e15e:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2e162:	subs	r6, r0, #0
   2e164:	blt.n	2e1ee <btrfs_insert_file_extent@@Base+0x124>
   2e166:	ldr	r1, [pc, #184]	; (2e220 <btrfs_insert_file_extent@@Base+0x156>)
   2e168:	mov	r3, r6
   2e16a:	ldr	r0, [pc, #184]	; (2e224 <btrfs_insert_file_extent@@Base+0x15a>)
   2e16c:	movs	r2, #67	; 0x43
   2e16e:	add	r1, pc
   2e170:	add	r0, pc
   2e172:	bl	2e0c0 <btrfs_del_inode_ref@@Base+0x270>
   2e176:	ldr	r0, [r4, #0]
   2e178:	ldr	r3, [r4, #32]
   2e17a:	movs	r2, #25
   2e17c:	add.w	ip, r0, #96	; 0x60
   2e180:	mla	r3, r2, r3, ip
   2e184:	ldr	r2, [sp, #104]	; 0x68
   2e186:	ldr.w	r1, [r3, #118]	; 0x76
   2e18a:	adds	r1, #101	; 0x65
   2e18c:	add.w	r3, ip, r1
   2e190:	str.w	r2, [r3, #21]
   2e194:	ldr	r2, [sp, #108]	; 0x6c
   2e196:	str.w	r7, [r3, #29]
   2e19a:	str.w	fp, [r3, #33]	; 0x21
   2e19e:	str.w	r2, [r3, #25]
   2e1a2:	movs	r2, #0
   2e1a4:	str.w	sl, [r3, #45]	; 0x2d
   2e1a8:	strb.w	r2, [r3, #37]	; 0x25
   2e1ac:	strb.w	r2, [r3, #38]	; 0x26
   2e1b0:	strb.w	r2, [r3, #39]	; 0x27
   2e1b4:	strb.w	r2, [r3, #40]	; 0x28
   2e1b8:	strb.w	r2, [r3, #41]	; 0x29
   2e1bc:	strb.w	r2, [r3, #42]	; 0x2a
   2e1c0:	strb.w	r2, [r3, #43]	; 0x2b
   2e1c4:	strb.w	r2, [r3, #44]	; 0x2c
   2e1c8:	str.w	r9, [r3, #49]	; 0x31
   2e1cc:	str.w	sl, [r3, #8]
   2e1d0:	str.w	r9, [r3, #12]
   2e1d4:	ldrd	r7, r5, [r5, #8]
   2e1d8:	str.w	r7, [ip, r1]
   2e1dc:	str	r5, [r3, #4]
   2e1de:	strb.w	r8, [r3, #20]
   2e1e2:	strb	r2, [r3, #16]
   2e1e4:	strb	r2, [r3, #17]
   2e1e6:	strb	r2, [r3, #18]
   2e1e8:	strb	r2, [r3, #19]
   2e1ea:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2e1ee:	mov	r0, r4
   2e1f0:	bl	17e7e <btrfs_free_path@@Base>
   2e1f4:	ldr	r2, [pc, #48]	; (2e228 <btrfs_insert_file_extent@@Base+0x15e>)
   2e1f6:	ldr	r3, [pc, #36]	; (2e21c <btrfs_insert_file_extent@@Base+0x152>)
   2e1f8:	add	r2, pc
   2e1fa:	ldr	r3, [r2, r3]
   2e1fc:	ldr	r2, [r3, #0]
   2e1fe:	ldr	r3, [sp, #52]	; 0x34
   2e200:	eors	r2, r3
   2e202:	beq.n	2e20e <btrfs_insert_file_extent@@Base+0x144>
   2e204:	blx	84cc <__stack_chk_fail@plt>
   2e208:	mvn.w	r6, #11
   2e20c:	b.n	2e1f4 <btrfs_insert_file_extent@@Base+0x12a>
   2e20e:	mov	r0, r6
   2e210:	add	sp, #60	; 0x3c
   2e212:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e216:	nop
   2e218:	ldr	r6, [r4, #72]	; 0x48
   2e21a:	movs	r3, r0
   2e21c:	lsls	r4, r4, #8
   2e21e:	movs	r0, r0
   2e220:	cmp	r7, #246	; 0xf6
   2e222:	movs	r1, r0
   2e224:	stmia	r5!, {r0, r1, r6, r7}
   2e226:	movs	r0, r0
   2e228:	ldr	r0, [r2, #56]	; 0x38
   2e22a:	movs	r3, r0

0002e22c <btrfs_insert_inline_extent@@Base>:
   2e22c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e230:	mov	sl, r2
   2e232:	ldr	r2, [pc, #208]	; (2e304 <btrfs_insert_inline_extent@@Base+0xd8>)
   2e234:	mov	r4, r3
   2e236:	ldr	r3, [pc, #208]	; (2e308 <btrfs_insert_inline_extent@@Base+0xdc>)
   2e238:	sub	sp, #52	; 0x34
   2e23a:	add	r2, pc
   2e23c:	mov	r9, r0
   2e23e:	str	r1, [sp, #12]
   2e240:	ldr	r3, [r2, r3]
   2e242:	ldrd	r8, fp, [sp, #88]	; 0x58
   2e246:	ldrd	r7, r6, [sp, #96]	; 0x60
   2e24a:	ldr	r3, [r3, #0]
   2e24c:	str	r3, [sp, #44]	; 0x2c
   2e24e:	mov.w	r3, #0
   2e252:	bl	17e50 <btrfs_alloc_path@@Base>
   2e256:	mov	r5, r0
   2e258:	cmp	r0, #0
   2e25a:	beq.n	2e2f4 <btrfs_insert_inline_extent@@Base+0xc8>
   2e25c:	movs	r3, #108	; 0x6c
   2e25e:	mov	r2, r0
   2e260:	strb.w	r3, [sp, #32]
   2e264:	mov	r0, r9
   2e266:	add.w	r3, r6, #21
   2e26a:	ldr	r1, [sp, #12]
   2e26c:	str	r3, [sp, #20]
   2e26e:	movs	r3, #1
   2e270:	str	r3, [sp, #4]
   2e272:	add	r3, sp, #20
   2e274:	str	r3, [sp, #0]
   2e276:	add	r3, sp, #24
   2e278:	strd	sl, r4, [sp, #24]
   2e27c:	str.w	r8, [sp, #33]	; 0x21
   2e280:	str.w	fp, [sp, #37]	; 0x25
   2e284:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2e288:	mov	r4, r0
   2e28a:	cbnz	r0, 2e2da <btrfs_insert_inline_extent@@Base+0xae>
   2e28c:	ldr	r0, [r5, #0]
   2e28e:	movs	r2, #25
   2e290:	ldr	r3, [r5, #32]
   2e292:	add.w	r1, r0, #96	; 0x60
   2e296:	ldrd	sl, lr, [r9, #8]
   2e29a:	str	r0, [sp, #12]
   2e29c:	mla	r3, r2, r3, r1
   2e2a0:	ldr.w	ip, [r3, #118]	; 0x76
   2e2a4:	add.w	r2, ip, #101	; 0x65
   2e2a8:	adds	r3, r1, r2
   2e2aa:	str.w	sl, [r1, r2]
   2e2ae:	mov	r1, r7
   2e2b0:	str.w	lr, [r3, #4]
   2e2b4:	strb	r4, [r3, #20]
   2e2b6:	str	r6, [r3, #8]
   2e2b8:	str	r4, [r3, #12]
   2e2ba:	strb	r4, [r3, #16]
   2e2bc:	strb	r4, [r3, #17]
   2e2be:	strb	r4, [r3, #18]
   2e2c0:	strb	r4, [r3, #19]
   2e2c2:	mov	r3, r6
   2e2c4:	ldr.w	r2, [sp, #33]	; 0x21
   2e2c8:	rsb	r2, r2, #122	; 0x7a
   2e2cc:	add	r2, r8
   2e2ce:	add	r2, ip
   2e2d0:	bl	17330 <write_extent_buffer@@Base>
   2e2d4:	ldr	r0, [sp, #12]
   2e2d6:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2e2da:	mov	r0, r5
   2e2dc:	bl	17e7e <btrfs_free_path@@Base>
   2e2e0:	ldr	r2, [pc, #40]	; (2e30c <btrfs_insert_inline_extent@@Base+0xe0>)
   2e2e2:	ldr	r3, [pc, #36]	; (2e308 <btrfs_insert_inline_extent@@Base+0xdc>)
   2e2e4:	add	r2, pc
   2e2e6:	ldr	r3, [r2, r3]
   2e2e8:	ldr	r2, [r3, #0]
   2e2ea:	ldr	r3, [sp, #44]	; 0x2c
   2e2ec:	eors	r2, r3
   2e2ee:	beq.n	2e2fa <btrfs_insert_inline_extent@@Base+0xce>
   2e2f0:	blx	84cc <__stack_chk_fail@plt>
   2e2f4:	mvn.w	r4, #11
   2e2f8:	b.n	2e2e0 <btrfs_insert_inline_extent@@Base+0xb4>
   2e2fa:	mov	r0, r4
   2e2fc:	add	sp, #52	; 0x34
   2e2fe:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e302:	nop
   2e304:	ldr	r6, [r1, #52]	; 0x34
   2e306:	movs	r3, r0
   2e308:	lsls	r4, r4, #8
   2e30a:	movs	r0, r0
   2e30c:	ldr	r4, [r4, #40]	; 0x28
   2e30e:	movs	r3, r0

0002e310 <btrfs_csum_file_block@@Base>:
   2e310:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e314:	mov	fp, r0
   2e316:	vpush	{d8-d9}
   2e31a:	mov	r6, r1
   2e31c:	sub	sp, #140	; 0x8c
   2e31e:	strd	r2, r3, [sp, #24]
   2e322:	ldr	r3, [sp, #200]	; 0xc8
   2e324:	ldr.w	r2, [pc, #1044]	; 2e73c <btrfs_csum_file_block@@Base+0x42c>
   2e328:	ldrd	r7, r8, [sp, #192]	; 0xc0
   2e32c:	vmov	s18, r3
   2e330:	ldr.w	r3, [pc, #1036]	; 2e740 <btrfs_csum_file_block@@Base+0x430>
   2e334:	add	r2, pc
   2e336:	add	r3, pc
   2e338:	str	r3, [sp, #36]	; 0x24
   2e33a:	ldr.w	r3, [pc, #1032]	; 2e744 <btrfs_csum_file_block@@Base+0x434>
   2e33e:	ldr	r3, [r2, r3]
   2e340:	ldr	r3, [r3, #0]
   2e342:	str	r3, [sp, #132]	; 0x84
   2e344:	mov.w	r3, #0
   2e348:	ldr.w	r3, [r1, #464]	; 0x1d0
   2e34c:	ldr.w	r2, [r3, #388]	; 0x184
   2e350:	ldr.w	r0, [r3, #308]	; 0x134
   2e354:	vmov	s16, r2
   2e358:	bl	17e10 <btrfs_super_csum_size@@Base>
   2e35c:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e360:	ldr.w	r3, [r3, #308]	; 0x134
   2e364:	ldrh.w	r3, [r3, #196]	; 0xc4
   2e368:	vmov	s17, r3
   2e36c:	mov	r5, r0
   2e36e:	bl	17e50 <btrfs_alloc_path@@Base>
   2e372:	mov	r4, r0
   2e374:	cmp	r0, #0
   2e376:	beq.w	2e72a <btrfs_csum_file_block@@Base+0x41a>
   2e37a:	mvn.w	r2, #9
   2e37e:	mov.w	r3, #4294967295	; 0xffffffff
   2e382:	strd	r2, r3, [sp, #40]	; 0x28
   2e386:	mov.w	r9, #128	; 0x80
   2e38a:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e38e:	str.w	r7, [sp, #49]	; 0x31
   2e392:	str.w	r8, [sp, #53]	; 0x35
   2e396:	ldr.w	r0, [r3, #308]	; 0x134
   2e39a:	strb.w	r9, [sp, #48]	; 0x30
   2e39e:	bl	17e10 <btrfs_super_csum_size@@Base>
   2e3a2:	mvn.w	r2, #9
   2e3a6:	mov.w	r3, #4294967295	; 0xffffffff
   2e3aa:	movs	r1, #1
   2e3ac:	strd	r2, r3, [sp, #60]	; 0x3c
   2e3b0:	movs	r3, #0
   2e3b2:	add	r2, sp, #60	; 0x3c
   2e3b4:	strd	r3, r1, [sp]
   2e3b8:	mov	r3, r4
   2e3ba:	mov	r1, r6
   2e3bc:	str.w	r7, [sp, #69]	; 0x45
   2e3c0:	str.w	r8, [sp, #73]	; 0x49
   2e3c4:	strb.w	r9, [sp, #68]	; 0x44
   2e3c8:	mov	sl, r0
   2e3ca:	mov	r0, fp
   2e3cc:	bl	1a23c <btrfs_search_slot@@Base>
   2e3d0:	cmp	r0, #0
   2e3d2:	blt.n	2e3e2 <btrfs_csum_file_block@@Base+0xd2>
   2e3d4:	ldr.w	r9, [r4]
   2e3d8:	beq.n	2e440 <btrfs_csum_file_block@@Base+0x130>
   2e3da:	ldr	r2, [r4, #32]
   2e3dc:	cbnz	r2, 2e3e6 <btrfs_csum_file_block@@Base+0xd6>
   2e3de:	mvn.w	r0, #1
   2e3e2:	mov	r8, r0
   2e3e4:	b.n	2e45e <btrfs_csum_file_block@@Base+0x14e>
   2e3e6:	subs	r2, #1
   2e3e8:	add	r1, sp, #80	; 0x50
   2e3ea:	mov	r0, r9
   2e3ec:	str	r2, [r4, #32]
   2e3ee:	bl	2e01c <btrfs_del_inode_ref@@Base+0x1cc>
   2e3f2:	ldrb.w	r3, [sp, #88]	; 0x58
   2e3f6:	cmp	r3, #128	; 0x80
   2e3f8:	bne.n	2e3de <btrfs_csum_file_block@@Base+0xce>
   2e3fa:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e3fe:	ldr.w	r0, [sp, #89]	; 0x59
   2e402:	ldr.w	r1, [sp, #93]	; 0x5d
   2e406:	subs	r0, r7, r0
   2e408:	ldr.w	r2, [r3, #388]	; 0x184
   2e40c:	sbc.w	r1, r8, r1
   2e410:	movs	r3, #0
   2e412:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2e416:	ldr	r3, [r4, #32]
   2e418:	movs	r2, #25
   2e41a:	mla	r3, r2, r3, r9
   2e41e:	strd	r0, r1, [sp, #16]
   2e422:	mov	r1, sl
   2e424:	ldr.w	r0, [r3, #218]	; 0xda
   2e428:	bl	38f98 <btrfs_util_strerror@@Base+0x290>
   2e42c:	ldrd	r2, r3, [sp, #16]
   2e430:	asrs	r1, r0, #31
   2e432:	cmp	r3, r1
   2e434:	it	eq
   2e436:	cmpeq	r2, r0
   2e438:	bcc.n	2e448 <btrfs_csum_file_block@@Base+0x138>
   2e43a:	mvn.w	r0, #26
   2e43e:	b.n	2e3e2 <btrfs_csum_file_block@@Base+0xd2>
   2e440:	movs	r2, #0
   2e442:	movs	r3, #0
   2e444:	strd	r2, r3, [sp, #16]
   2e448:	ldr	r3, [r4, #32]
   2e44a:	movs	r2, #25
   2e44c:	mla	r3, r2, r3, r9
   2e450:	ldr.w	r8, [r3, #214]	; 0xd6
   2e454:	ldr	r3, [sp, #16]
   2e456:	add.w	r8, r8, #101	; 0x65
   2e45a:	mla	r8, sl, r3, r8
   2e45e:	cmn.w	r8, #4096	; 0x1000
   2e462:	ldr	r2, [r4, #0]
   2e464:	bhi.n	2e490 <btrfs_csum_file_block@@Base+0x180>
   2e466:	mov	r6, r2
   2e468:	add	r7, sp, #100	; 0x64
   2e46a:	vmov	r1, s18
   2e46e:	ldr	r3, [sp, #204]	; 0xcc
   2e470:	mov	r2, r7
   2e472:	vmov	r0, s17
   2e476:	bl	1c046 <btrfs_csum_data@@Base>
   2e47a:	mov	r1, r7
   2e47c:	mov	r3, r5
   2e47e:	mov	r2, r8
   2e480:	mov	r0, r6
   2e482:	movs	r7, #0
   2e484:	bl	17330 <write_extent_buffer@@Base>
   2e488:	ldr	r0, [r4, #0]
   2e48a:	bl	1d510 <btrfs_mark_buffer_dirty@@Base>
   2e48e:	b.n	2e608 <btrfs_csum_file_block@@Base+0x2f8>
   2e490:	cmn.w	r8, #27
   2e494:	ldr	r0, [r4, #32]
   2e496:	bne.n	2e4fc <btrfs_csum_file_block@@Base+0x1ec>
   2e498:	mov.w	sl, #25
   2e49c:	mov	r1, r5
   2e49e:	mla	r0, sl, r0, r2
   2e4a2:	ldr.w	r0, [r0, #218]	; 0xda
   2e4a6:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   2e4aa:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e4ae:	mov	r1, r5
   2e4b0:	mov	r7, r0
   2e4b2:	ldr.w	r0, [r3, #384]	; 0x180
   2e4b6:	subs	r0, #151	; 0x97
   2e4b8:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   2e4bc:	subs	r3, r0, #1
   2e4be:	cmp	r7, r3
   2e4c0:	bcs.w	2e64c <btrfs_csum_file_block@@Base+0x33c>
   2e4c4:	mov	r0, r4
   2e4c6:	mov.w	r8, #1
   2e4ca:	bl	17e58 <btrfs_release_path@@Base>
   2e4ce:	add	r2, sp, #40	; 0x28
   2e4d0:	mov	r3, r4
   2e4d2:	mov	r1, r6
   2e4d4:	mov	r0, fp
   2e4d6:	strd	r5, r8, [sp]
   2e4da:	bl	1a23c <btrfs_search_slot@@Base>
   2e4de:	subs	r7, r0, #0
   2e4e0:	blt.w	2e608 <btrfs_csum_file_block@@Base+0x2f8>
   2e4e4:	bne.w	2e652 <btrfs_csum_file_block@@Base+0x342>
   2e4e8:	ldr	r1, [pc, #604]	; (2e748 <btrfs_csum_file_block@@Base+0x438>)
   2e4ea:	mov	r3, r8
   2e4ec:	ldr	r0, [pc, #604]	; (2e74c <btrfs_csum_file_block@@Base+0x43c>)
   2e4ee:	movw	r2, #265	; 0x109
   2e4f2:	add	r1, pc
   2e4f4:	adds	r1, #25
   2e4f6:	add	r0, pc
   2e4f8:	bl	2e084 <btrfs_del_inode_ref@@Base+0x234>
   2e4fc:	ldr.w	r3, [r2, #192]	; 0xc0
   2e500:	subs	r3, #1
   2e502:	cmp	r3, r0
   2e504:	bls.w	2e624 <btrfs_csum_file_block@@Base+0x314>
   2e508:	adds	r2, r0, #1
   2e50a:	ldr	r0, [r4, #0]
   2e50c:	add	r1, sp, #80	; 0x50
   2e50e:	bl	2e01c <btrfs_del_inode_ref@@Base+0x1cc>
   2e512:	ldrd	r2, r3, [sp, #80]	; 0x50
   2e516:	mov.w	r1, #4294967295	; 0xffffffff
   2e51a:	mvn.w	r0, #9
   2e51e:	cmp	r3, r1
   2e520:	it	eq
   2e522:	cmpeq	r2, r0
   2e524:	bne.w	2e63a <btrfs_csum_file_block@@Base+0x32a>
   2e528:	ldrb.w	r3, [sp, #88]	; 0x58
   2e52c:	cmp	r3, #128	; 0x80
   2e52e:	bne.w	2e63a <btrfs_csum_file_block@@Base+0x32a>
   2e532:	ldr.w	r7, [sp, #89]	; 0x59
   2e536:	mov.w	r9, #1
   2e53a:	ldr.w	r8, [sp, #93]	; 0x5d
   2e53e:	mov	r0, r4
   2e540:	bl	17e58 <btrfs_release_path@@Base>
   2e544:	cmp.w	r9, #0
   2e548:	beq.w	2e720 <btrfs_csum_file_block@@Base+0x410>
   2e54c:	ldrd	r0, r1, [sp, #24]
   2e550:	mov	r3, r8
   2e552:	ldr.w	r9, [sp, #53]	; 0x35
   2e556:	mov	r2, r7
   2e558:	cmp	r1, r8
   2e55a:	ldr.w	r8, [sp, #49]	; 0x31
   2e55e:	it	eq
   2e560:	cmpeq	r0, r7
   2e562:	mov.w	sl, #0
   2e566:	itt	cc
   2e568:	movcc	r2, r0
   2e56a:	movcc	r3, r1
   2e56c:	subs.w	r8, r2, r8
   2e570:	mov	r1, r5
   2e572:	sbc.w	r9, r3, r9
   2e576:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e57a:	ldr.w	r0, [r3, #384]	; 0x180
   2e57e:	subs	r0, #151	; 0x97
   2e580:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   2e584:	vmov	r2, s16
   2e588:	mov	r3, sl
   2e58a:	mov	r1, r9
   2e58c:	subs	r7, r0, #1
   2e58e:	mov	r0, r8
   2e590:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2e594:	mov	r2, r7
   2e596:	mov	r8, r0
   2e598:	mov	r9, r1
   2e59a:	orrs.w	r3, r8, r9
   2e59e:	itt	eq
   2e5a0:	moveq.w	r8, #1
   2e5a4:	moveq.w	r9, #0
   2e5a8:	cmp	r9, sl
   2e5aa:	it	eq
   2e5ac:	cmpeq	r8, r7
   2e5ae:	it	cc
   2e5b0:	movcc	r2, r8
   2e5b2:	muls	r2, r5
   2e5b4:	add	r3, sp, #60	; 0x3c
   2e5b6:	str	r2, [sp, #60]	; 0x3c
   2e5b8:	mov.w	r8, #1
   2e5bc:	str	r3, [sp, #0]
   2e5be:	mov	r2, r4
   2e5c0:	add	r3, sp, #40	; 0x28
   2e5c2:	mov	r1, r6
   2e5c4:	mov	r0, fp
   2e5c6:	str.w	r8, [sp, #4]
   2e5ca:	bl	1b00c <btrfs_insert_empty_items@@Base>
   2e5ce:	subs	r7, r0, #0
   2e5d0:	blt.n	2e608 <btrfs_csum_file_block@@Base+0x2f8>
   2e5d2:	beq.w	2e724 <btrfs_csum_file_block@@Base+0x414>
   2e5d6:	ldr	r3, [pc, #376]	; (2e750 <btrfs_csum_file_block@@Base+0x440>)
   2e5d8:	mov	r1, r8
   2e5da:	ldr	r2, [sp, #36]	; 0x24
   2e5dc:	ldr	r0, [r2, r3]
   2e5de:	ldr	r3, [pc, #372]	; (2e754 <btrfs_csum_file_block@@Base+0x444>)
   2e5e0:	ldr	r2, [pc, #372]	; (2e758 <btrfs_csum_file_block@@Base+0x448>)
   2e5e2:	add	r3, pc
   2e5e4:	str	r3, [sp, #8]
   2e5e6:	ldr	r3, [pc, #372]	; (2e75c <btrfs_csum_file_block@@Base+0x44c>)
   2e5e8:	add	r2, pc
   2e5ea:	str.w	r8, [sp, #12]
   2e5ee:	add	r3, pc
   2e5f0:	adds	r3, #25
   2e5f2:	str	r3, [sp, #4]
   2e5f4:	mov.w	r3, #308	; 0x134
   2e5f8:	str	r3, [sp, #0]
   2e5fa:	ldr	r3, [pc, #356]	; (2e760 <btrfs_csum_file_block@@Base+0x450>)
   2e5fc:	ldr	r0, [r0, #0]
   2e5fe:	add	r3, pc
   2e600:	blx	881c <__fprintf_chk@plt+0x4>
   2e604:	bl	2dfd0 <btrfs_del_inode_ref@@Base+0x180>
   2e608:	mov	r0, r4
   2e60a:	bl	17e7e <btrfs_free_path@@Base>
   2e60e:	ldr	r2, [pc, #340]	; (2e764 <btrfs_csum_file_block@@Base+0x454>)
   2e610:	ldr	r3, [pc, #304]	; (2e744 <btrfs_csum_file_block@@Base+0x434>)
   2e612:	add	r2, pc
   2e614:	ldr	r3, [r2, r3]
   2e616:	ldr	r2, [r3, #0]
   2e618:	ldr	r3, [sp, #132]	; 0x84
   2e61a:	eors	r2, r3
   2e61c:	beq.w	2e730 <btrfs_csum_file_block@@Base+0x420>
   2e620:	blx	84cc <__stack_chk_fail@plt>
   2e624:	movs	r3, #0
   2e626:	mov	r1, r4
   2e628:	strb.w	r3, [r4, #65]	; 0x41
   2e62c:	ldr.w	r0, [r6, #464]	; 0x1d0
   2e630:	bl	1b670 <btrfs_next_sibling_tree_block@@Base>
   2e634:	cmp	r0, #1
   2e636:	mov	r2, r0
   2e638:	bne.n	2e646 <btrfs_csum_file_block@@Base+0x336>
   2e63a:	mov.w	r9, #1
   2e63e:	mov.w	r7, #4294967295	; 0xffffffff
   2e642:	mov	r8, r7
   2e644:	b.n	2e53e <btrfs_csum_file_block@@Base+0x22e>
   2e646:	cmp	r0, #0
   2e648:	beq.w	2e50a <btrfs_csum_file_block@@Base+0x1fa>
   2e64c:	mov.w	r9, #0
   2e650:	b.n	2e63e <btrfs_csum_file_block@@Base+0x32e>
   2e652:	ldr	r2, [r4, #32]
   2e654:	cmp	r2, #0
   2e656:	beq.n	2e64c <btrfs_csum_file_block@@Base+0x33c>
   2e658:	ldr	r7, [r4, #0]
   2e65a:	subs	r2, #1
   2e65c:	add	r1, sp, #80	; 0x50
   2e65e:	str	r2, [r4, #32]
   2e660:	mov	r0, r7
   2e662:	bl	2e01c <btrfs_del_inode_ref@@Base+0x1cc>
   2e666:	ldrd	r2, r3, [sp, #80]	; 0x50
   2e66a:	mov.w	r1, #4294967295	; 0xffffffff
   2e66e:	mvn.w	r0, #9
   2e672:	cmp	r3, r1
   2e674:	it	eq
   2e676:	cmpeq	r2, r0
   2e678:	bne.n	2e64c <btrfs_csum_file_block@@Base+0x33c>
   2e67a:	ldrb.w	r3, [sp, #88]	; 0x58
   2e67e:	cmp	r3, #128	; 0x80
   2e680:	bne.n	2e64c <btrfs_csum_file_block@@Base+0x33c>
   2e682:	ldr.w	lr, [sp, #49]	; 0x31
   2e686:	movs	r3, #0
   2e688:	ldr.w	r0, [sp, #89]	; 0x59
   2e68c:	ldr.w	ip, [sp, #53]	; 0x35
   2e690:	ldr.w	r1, [sp, #93]	; 0x5d
   2e694:	subs.w	r0, lr, r0
   2e698:	vmov	r2, s16
   2e69c:	sbc.w	r1, ip, r1
   2e6a0:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2e6a4:	ldr.w	r3, [r6, #464]	; 0x1d0
   2e6a8:	mov	r8, r0
   2e6aa:	ldr.w	r0, [r3, #384]	; 0x180
   2e6ae:	mov	r9, r1
   2e6b0:	mov	r1, r5
   2e6b2:	subs	r0, #151	; 0x97
   2e6b4:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   2e6b8:	movs	r1, #0
   2e6ba:	cmp	r9, r1
   2e6bc:	add.w	r0, r0, #4294967295	; 0xffffffff
   2e6c0:	it	eq
   2e6c2:	cmpeq	r8, r0
   2e6c4:	bcs.n	2e64c <btrfs_csum_file_block@@Base+0x33c>
   2e6c6:	ldr	r3, [r4, #32]
   2e6c8:	mov	r1, r5
   2e6ca:	mla	r7, sl, r3, r7
   2e6ce:	ldr.w	r7, [r7, #218]	; 0xda
   2e6d2:	mov	r0, r7
   2e6d4:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   2e6d8:	movs	r1, #0
   2e6da:	cmp	r9, r1
   2e6dc:	it	eq
   2e6de:	cmpeq	r8, r0
   2e6e0:	bcc.n	2e64c <btrfs_csum_file_block@@Base+0x33c>
   2e6e2:	mla	r0, r5, r8, r5
   2e6e6:	subs	r0, r0, r7
   2e6e8:	cmp	r0, r5
   2e6ea:	bne.n	2e64c <btrfs_csum_file_block@@Base+0x33c>
   2e6ec:	mov	r2, r5
   2e6ee:	mov	r1, r4
   2e6f0:	mov	r0, r6
   2e6f2:	bl	1a030 <btrfs_extend_item@@Base>
   2e6f6:	ldr	r1, [pc, #112]	; (2e768 <btrfs_csum_file_block@@Base+0x458>)
   2e6f8:	mov.w	r2, #286	; 0x11e
   2e6fc:	add	r1, pc
   2e6fe:	adds	r1, #25
   2e700:	mov	r3, r0
   2e702:	ldr	r0, [pc, #104]	; (2e76c <btrfs_csum_file_block@@Base+0x45c>)
   2e704:	add	r0, pc
   2e706:	bl	2e0c0 <btrfs_del_inode_ref@@Base+0x270>
   2e70a:	ldr	r6, [r4, #0]
   2e70c:	movs	r2, #25
   2e70e:	ldr	r3, [r4, #32]
   2e710:	mla	r3, r2, r3, r6
   2e714:	ldr.w	r0, [r3, #214]	; 0xd6
   2e718:	adds	r0, #101	; 0x65
   2e71a:	mla	r8, r5, r8, r0
   2e71e:	b.n	2e468 <btrfs_csum_file_block@@Base+0x158>
   2e720:	mov	r2, r5
   2e722:	b.n	2e5b4 <btrfs_csum_file_block@@Base+0x2a4>
   2e724:	mov.w	r8, #0
   2e728:	b.n	2e70a <btrfs_csum_file_block@@Base+0x3fa>
   2e72a:	mvn.w	r7, #11
   2e72e:	b.n	2e60e <btrfs_csum_file_block@@Base+0x2fe>
   2e730:	mov	r0, r7
   2e732:	add	sp, #140	; 0x8c
   2e734:	vpop	{d8-d9}
   2e738:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e73c:	ldr	r4, [r2, #36]	; 0x24
   2e73e:	movs	r3, r0
   2e740:	ldr	r2, [r2, #36]	; 0x24
   2e742:	movs	r3, r0
   2e744:	lsls	r4, r4, #8
   2e746:	movs	r0, r0
   2e748:	cmp	r4, #114	; 0x72
   2e74a:	movs	r1, r0
   2e74c:	ldr??.w	r0, [r5]
   2e750:	lsls	r4, r6, #8
   2e752:	movs	r0, r0
   2e754:	strb.w	r0, [r9, r0]
   2e758:	cbnz	r0, 2e79c <btrfs_del_csums@@Base+0x2c>
   2e75a:	movs	r0, r0
   2e75c:	cmp	r3, #118	; 0x76
   2e75e:	movs	r1, r0
   2e760:	cmp	r3, #68	; 0x44
   2e762:	movs	r1, r0
   2e764:	str	r6, [r6, #116]	; 0x74
   2e766:	movs	r3, r0
   2e768:	cmp	r2, #104	; 0x68
   2e76a:	movs	r1, r0
   2e76c:	stmia	r0!, {r0, r1, r2, r3, r5}
	...

0002e770 <btrfs_del_csums@@Base>:
   2e770:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e774:	sub	sp, #100	; 0x64
   2e776:	mov	sl, r0
   2e778:	strd	r2, r3, [sp, #8]
   2e77c:	ldr	r3, [sp, #136]	; 0x88
   2e77e:	ldr	r2, [pc, #832]	; (2eac0 <btrfs_del_csums@@Base+0x350>)
   2e780:	str	r3, [sp, #60]	; 0x3c
   2e782:	add	r2, pc
   2e784:	ldr	r3, [sp, #140]	; 0x8c
   2e786:	str	r3, [sp, #64]	; 0x40
   2e788:	ldr	r3, [pc, #824]	; (2eac4 <btrfs_del_csums@@Base+0x354>)
   2e78a:	ldr	r3, [r2, r3]
   2e78c:	ldr	r2, [sp, #60]	; 0x3c
   2e78e:	ldr	r3, [r3, #0]
   2e790:	str	r3, [sp, #92]	; 0x5c
   2e792:	mov.w	r3, #0
   2e796:	ldr	r3, [sp, #8]
   2e798:	adds.w	r8, r3, r2
   2e79c:	ldr	r3, [sp, #12]
   2e79e:	ldr	r2, [sp, #64]	; 0x40
   2e7a0:	adc.w	r9, r3, r2
   2e7a4:	ldr	r3, [r0, #0]
   2e7a6:	ldr.w	r0, [r3, #308]	; 0x134
   2e7aa:	bl	17e10 <btrfs_super_csum_size@@Base>
   2e7ae:	ldr.w	r3, [sl]
   2e7b2:	ldr.w	r2, [r3, #388]	; 0x184
   2e7b6:	ldr	r5, [r3, #40]	; 0x28
   2e7b8:	str	r2, [sp, #48]	; 0x30
   2e7ba:	str	r0, [sp, #44]	; 0x2c
   2e7bc:	bl	17e50 <btrfs_alloc_path@@Base>
   2e7c0:	mov	r4, r0
   2e7c2:	cmp	r0, #0
   2e7c4:	beq.w	2eab4 <btrfs_del_csums@@Base+0x344>
   2e7c8:	adds.w	r3, r8, #4294967295	; 0xffffffff
   2e7cc:	str	r3, [sp, #52]	; 0x34
   2e7ce:	adc.w	r3, r9, #4294967295	; 0xffffffff
   2e7d2:	str	r3, [sp, #56]	; 0x38
   2e7d4:	add.w	r3, sp, #81	; 0x51
   2e7d8:	str	r3, [sp, #40]	; 0x28
   2e7da:	mvn.w	r2, #9
   2e7de:	mov.w	r3, #4294967295	; 0xffffffff
   2e7e2:	strd	r2, r3, [sp, #72]	; 0x48
   2e7e6:	mov	r1, r5
   2e7e8:	ldr	r2, [sp, #40]	; 0x28
   2e7ea:	mov	r0, sl
   2e7ec:	ldr	r3, [sp, #52]	; 0x34
   2e7ee:	str	r3, [r2, #0]
   2e7f0:	ldr	r3, [sp, #56]	; 0x38
   2e7f2:	str	r3, [r2, #4]
   2e7f4:	movs	r3, #128	; 0x80
   2e7f6:	movs	r2, #1
   2e7f8:	strb.w	r3, [sp, #80]	; 0x50
   2e7fc:	mov.w	r3, #4294967295	; 0xffffffff
   2e800:	strd	r3, r2, [sp]
   2e804:	add	r2, sp, #72	; 0x48
   2e806:	mov	r3, r4
   2e808:	bl	1a23c <btrfs_search_slot@@Base>
   2e80c:	cmp	r0, #0
   2e80e:	ble.n	2e81c <btrfs_del_csums@@Base+0xac>
   2e810:	ldr	r3, [r4, #32]
   2e812:	cmp	r3, #0
   2e814:	beq.w	2ea98 <btrfs_del_csums@@Base+0x328>
   2e818:	subs	r3, #1
   2e81a:	str	r3, [r4, #32]
   2e81c:	ldr	r6, [r4, #0]
   2e81e:	add	r7, sp, #72	; 0x48
   2e820:	ldr	r2, [r4, #32]
   2e822:	mov	r1, r7
   2e824:	mov	r0, r6
   2e826:	bl	2e01c <btrfs_del_inode_ref@@Base+0x1cc>
   2e82a:	ldrd	r2, r3, [sp, #72]	; 0x48
   2e82e:	mov.w	r1, #4294967295	; 0xffffffff
   2e832:	mvn.w	r0, #9
   2e836:	cmp	r3, r1
   2e838:	it	eq
   2e83a:	cmpeq	r2, r0
   2e83c:	bne.w	2ea98 <btrfs_del_csums@@Base+0x328>
   2e840:	ldrb.w	r3, [sp, #80]	; 0x50
   2e844:	cmp	r3, #128	; 0x80
   2e846:	bne.w	2ea98 <btrfs_del_csums@@Base+0x328>
   2e84a:	ldr.w	r3, [sp, #81]	; 0x51
   2e84e:	str	r3, [sp, #16]
   2e850:	ldr.w	r3, [sp, #85]	; 0x55
   2e854:	str	r3, [sp, #20]
   2e856:	ldrd	r2, r3, [sp, #16]
   2e85a:	cmp	r3, r9
   2e85c:	it	eq
   2e85e:	cmpeq	r2, r8
   2e860:	bcs.w	2ea98 <btrfs_del_csums@@Base+0x328>
   2e864:	ldr	r3, [r4, #32]
   2e866:	ldr	r1, [sp, #44]	; 0x2c
   2e868:	mov	fp, r3
   2e86a:	movs	r3, #25
   2e86c:	mla	r3, r3, fp, r6
   2e870:	add.w	r2, r3, #197	; 0xc5
   2e874:	str	r2, [sp, #68]	; 0x44
   2e876:	ldr.w	r0, [r3, #218]	; 0xda
   2e87a:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   2e87e:	ldr	r3, [sp, #48]	; 0x30
   2e880:	mov	r1, r3
   2e882:	asrs	r2, r3, #31
   2e884:	strd	r1, r2, [sp, #32]
   2e888:	ldr	r1, [sp, #36]	; 0x24
   2e88a:	umull	r2, r3, r3, r0
   2e88e:	mla	r3, r0, r1, r3
   2e892:	ldr	r1, [sp, #16]
   2e894:	adds	r1, r1, r2
   2e896:	str	r1, [sp, #24]
   2e898:	ldr	r1, [sp, #20]
   2e89a:	adc.w	r3, r1, r3
   2e89e:	str	r3, [sp, #28]
   2e8a0:	ldrd	r0, r1, [sp, #24]
   2e8a4:	ldrd	r2, r3, [sp, #8]
   2e8a8:	cmp	r3, r1
   2e8aa:	it	eq
   2e8ac:	cmpeq	r2, r0
   2e8ae:	bcs.w	2ea98 <btrfs_del_csums@@Base+0x328>
   2e8b2:	ldrd	r2, r3, [sp, #16]
   2e8b6:	ldrd	r0, r1, [sp, #8]
   2e8ba:	cmp	r3, r1
   2e8bc:	it	eq
   2e8be:	cmpeq	r2, r0
   2e8c0:	ldrd	r2, r3, [sp, #24]
   2e8c4:	bcc.n	2e8f4 <btrfs_del_csums@@Base+0x184>
   2e8c6:	cmp	r9, r3
   2e8c8:	it	eq
   2e8ca:	cmpeq	r8, r2
   2e8cc:	bcc.n	2e988 <btrfs_del_csums@@Base+0x218>
   2e8ce:	movs	r3, #1
   2e8d0:	mov	r2, r4
   2e8d2:	mov	r1, r5
   2e8d4:	str	r3, [sp, #0]
   2e8d6:	mov	r0, sl
   2e8d8:	mov	r3, fp
   2e8da:	bl	1b3f8 <btrfs_del_items@@Base>
   2e8de:	ldr	r1, [pc, #488]	; (2eac8 <btrfs_del_csums@@Base+0x358>)
   2e8e0:	mov.w	r2, #450	; 0x1c2
   2e8e4:	add	r1, pc
   2e8e6:	adds	r1, #47	; 0x2f
   2e8e8:	mov	r3, r0
   2e8ea:	ldr	r0, [pc, #480]	; (2eacc <btrfs_del_csums@@Base+0x35c>)
   2e8ec:	add	r0, pc
   2e8ee:	bl	2e0c0 <btrfs_del_inode_ref@@Base+0x270>
   2e8f2:	b.n	2e980 <btrfs_del_csums@@Base+0x210>
   2e8f4:	cmp	r9, r3
   2e8f6:	it	eq
   2e8f8:	cmpeq	r8, r2
   2e8fa:	bcs.n	2e988 <btrfs_del_csums@@Base+0x218>
   2e8fc:	ldr	r1, [sp, #8]
   2e8fe:	ldr	r0, [sp, #16]
   2e900:	ldrd	r2, r3, [sp, #32]
   2e904:	subs	r0, r1, r0
   2e906:	ldr	r1, [sp, #12]
   2e908:	mov	ip, r1
   2e90a:	ldr	r1, [sp, #20]
   2e90c:	sbc.w	r1, ip, r1
   2e910:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2e914:	ldr	r3, [sp, #44]	; 0x2c
   2e916:	muls	r3, r0
   2e918:	ldrd	r0, r1, [sp, #60]	; 0x3c
   2e91c:	mov	fp, r3
   2e91e:	ldrd	r2, r3, [sp, #32]
   2e922:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2e926:	ldr	r3, [sp, #68]	; 0x44
   2e928:	add.w	r2, fp, #101	; 0x65
   2e92c:	ldr.w	r1, [r3, #17]
   2e930:	ldr	r3, [sp, #44]	; 0x2c
   2e932:	add	r2, r1
   2e934:	movs	r1, #0
   2e936:	muls	r3, r0
   2e938:	mov	r0, r6
   2e93a:	bl	173a2 <memset_extent_buffer@@Base>
   2e93e:	ldr	r2, [sp, #40]	; 0x28
   2e940:	ldr	r3, [sp, #8]
   2e942:	mov	r1, r5
   2e944:	mov	r0, sl
   2e946:	str	r3, [r2, #0]
   2e948:	ldr	r3, [sp, #12]
   2e94a:	str	r3, [r2, #4]
   2e94c:	mov	r3, r7
   2e94e:	mov	r2, r4
   2e950:	str.w	fp, [sp]
   2e954:	bl	1adc0 <btrfs_split_item@@Base>
   2e958:	mov	r3, r0
   2e95a:	cbz	r0, 2e964 <btrfs_del_csums@@Base+0x1f4>
   2e95c:	adds.w	r3, r0, #11
   2e960:	it	ne
   2e962:	movne	r3, #1
   2e964:	ldr	r1, [pc, #360]	; (2ead0 <btrfs_del_csums@@Base+0x360>)
   2e966:	movw	r2, #491	; 0x1eb
   2e96a:	ldr	r0, [pc, #360]	; (2ead4 <btrfs_del_csums@@Base+0x364>)
   2e96c:	add	r1, pc
   2e96e:	adds	r1, #47	; 0x2f
   2e970:	add	r0, pc
   2e972:	bl	2e0c0 <btrfs_del_inode_ref@@Base+0x270>
   2e976:	ldr	r3, [sp, #52]	; 0x34
   2e978:	ldr	r2, [sp, #40]	; 0x28
   2e97a:	str	r3, [r2, #0]
   2e97c:	ldr	r3, [sp, #56]	; 0x38
   2e97e:	str	r3, [r2, #4]
   2e980:	mov	r0, r4
   2e982:	bl	17e58 <btrfs_release_path@@Base>
   2e986:	b.n	2e7da <btrfs_del_csums@@Base+0x6a>
   2e988:	ldr.w	r3, [r5, #464]	; 0x1d0
   2e98c:	ldr.w	r0, [r3, #308]	; 0x134
   2e990:	bl	17e10 <btrfs_super_csum_size@@Base>
   2e994:	ldr.w	r3, [r5, #464]	; 0x1d0
   2e998:	ldr	r1, [r4, #0]
   2e99a:	ldr.w	r6, [sp, #81]	; 0x51
   2e99e:	ldr.w	r2, [r3, #388]	; 0x184
   2e9a2:	ldr	r3, [r4, #32]
   2e9a4:	ldr.w	r7, [sp, #85]	; 0x55
   2e9a8:	mov	fp, r6
   2e9aa:	str	r2, [sp, #32]
   2e9ac:	str	r0, [sp, #16]
   2e9ae:	movs	r0, #25
   2e9b0:	mla	r3, r0, r3, r1
   2e9b4:	ldr	r1, [sp, #16]
   2e9b6:	ldr.w	r0, [r3, #218]	; 0xda
   2e9ba:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   2e9be:	ldr	r2, [sp, #32]
   2e9c0:	mov	ip, r7
   2e9c2:	umlal	fp, ip, r2, r0
   2e9c6:	ldrd	r0, r1, [sp, #8]
   2e9ca:	cmp	r7, r1
   2e9cc:	it	eq
   2e9ce:	cmpeq	r6, r0
   2e9d0:	bcs.n	2ea1e <btrfs_del_csums@@Base+0x2ae>
   2e9d2:	cmp	r9, ip
   2e9d4:	it	eq
   2e9d6:	cmpeq	r8, fp
   2e9d8:	bcc.n	2ea84 <btrfs_del_csums@@Base+0x314>
   2e9da:	ldr	r1, [sp, #8]
   2e9dc:	movs	r3, #0
   2e9de:	subs	r0, r1, r6
   2e9e0:	ldr	r1, [sp, #12]
   2e9e2:	sbc.w	r1, r1, r7
   2e9e6:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2e9ea:	ldr	r2, [sp, #16]
   2e9ec:	movs	r3, #1
   2e9ee:	mov	r1, r4
   2e9f0:	muls	r2, r0
   2e9f2:	mov	r0, r5
   2e9f4:	bl	19e7c <btrfs_truncate_item@@Base>
   2e9f8:	ldr	r1, [pc, #220]	; (2ead8 <btrfs_del_csums@@Base+0x368>)
   2e9fa:	mov.w	r2, #372	; 0x174
   2e9fe:	add	r1, pc
   2ea00:	adds	r1, #63	; 0x3f
   2ea02:	mov	r3, r0
   2ea04:	ldr	r0, [pc, #212]	; (2eadc <btrfs_del_csums@@Base+0x36c>)
   2ea06:	add	r0, pc
   2ea08:	bl	2e0c0 <btrfs_del_inode_ref@@Base+0x270>
   2ea0c:	ldr	r1, [pc, #208]	; (2eae0 <btrfs_del_csums@@Base+0x370>)
   2ea0e:	ldr	r0, [pc, #212]	; (2eae4 <btrfs_del_csums@@Base+0x374>)
   2ea10:	movs	r3, #0
   2ea12:	add	r1, pc
   2ea14:	movw	r2, #497	; 0x1f1
   2ea18:	adds	r1, #47	; 0x2f
   2ea1a:	add	r0, pc
   2ea1c:	b.n	2e8ee <btrfs_del_csums@@Base+0x17e>
   2ea1e:	cmp	r9, ip
   2ea20:	it	eq
   2ea22:	cmpeq	r8, fp
   2ea24:	bcs.n	2ea84 <btrfs_del_csums@@Base+0x314>
   2ea26:	cmp	r7, r9
   2ea28:	it	eq
   2ea2a:	cmpeq	r6, r8
   2ea2c:	bcs.n	2ea84 <btrfs_del_csums@@Base+0x314>
   2ea2e:	subs.w	r0, fp, r8
   2ea32:	mov.w	r3, #0
   2ea36:	sbc.w	r1, ip, r9
   2ea3a:	ldr	r7, [pc, #172]	; (2eae8 <btrfs_del_csums@@Base+0x378>)
   2ea3c:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2ea40:	ldr	r2, [sp, #16]
   2ea42:	movs	r3, #0
   2ea44:	mov	r1, r4
   2ea46:	ldr	r6, [pc, #164]	; (2eaec <btrfs_del_csums@@Base+0x37c>)
   2ea48:	add	r7, pc
   2ea4a:	adds	r7, #63	; 0x3f
   2ea4c:	add	r6, pc
   2ea4e:	muls	r2, r0
   2ea50:	mov	r0, r5
   2ea52:	bl	19e7c <btrfs_truncate_item@@Base>
   2ea56:	movw	r2, #385	; 0x181
   2ea5a:	mov	r1, r7
   2ea5c:	mov	r3, r0
   2ea5e:	mov	r0, r6
   2ea60:	bl	2e0c0 <btrfs_del_inode_ref@@Base+0x270>
   2ea64:	ldr	r3, [sp, #40]	; 0x28
   2ea66:	add	r2, sp, #72	; 0x48
   2ea68:	mov	r1, r4
   2ea6a:	mov	r0, r5
   2ea6c:	str.w	r8, [r3]
   2ea70:	str.w	r9, [r3, #4]
   2ea74:	bl	18e98 <btrfs_set_item_key_safe@@Base>
   2ea78:	movw	r2, #389	; 0x185
   2ea7c:	mov	r1, r7
   2ea7e:	mov	r3, r0
   2ea80:	mov	r0, r6
   2ea82:	b.n	2ea08 <btrfs_del_csums@@Base+0x298>
   2ea84:	ldr	r1, [pc, #104]	; (2eaf0 <btrfs_del_csums@@Base+0x380>)
   2ea86:	movs	r3, #1
   2ea88:	ldr	r0, [pc, #104]	; (2eaf4 <btrfs_del_csums@@Base+0x384>)
   2ea8a:	movw	r2, #391	; 0x187
   2ea8e:	add	r1, pc
   2ea90:	adds	r1, #63	; 0x3f
   2ea92:	add	r0, pc
   2ea94:	bl	2e084 <btrfs_del_inode_ref@@Base+0x234>
   2ea98:	mov	r0, r4
   2ea9a:	bl	17e7e <btrfs_free_path@@Base>
   2ea9e:	movs	r0, #0
   2eaa0:	ldr	r2, [pc, #84]	; (2eaf8 <btrfs_del_csums@@Base+0x388>)
   2eaa2:	ldr	r3, [pc, #32]	; (2eac4 <btrfs_del_csums@@Base+0x354>)
   2eaa4:	add	r2, pc
   2eaa6:	ldr	r3, [r2, r3]
   2eaa8:	ldr	r2, [r3, #0]
   2eaaa:	ldr	r3, [sp, #92]	; 0x5c
   2eaac:	eors	r2, r3
   2eaae:	beq.n	2eaba <btrfs_del_csums@@Base+0x34a>
   2eab0:	blx	84cc <__stack_chk_fail@plt>
   2eab4:	mvn.w	r0, #11
   2eab8:	b.n	2eaa0 <btrfs_del_csums@@Base+0x330>
   2eaba:	add	sp, #100	; 0x64
   2eabc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eac0:	str	r6, [r0, #96]	; 0x60
   2eac2:	movs	r3, r0
   2eac4:	lsls	r4, r4, #8
   2eac6:	movs	r0, r0
   2eac8:	cmp	r0, #128	; 0x80
   2eaca:	movs	r1, r0
   2eacc:	bkpt	0x0047
   2eace:	movs	r0, r0
   2ead0:	movs	r7, #248	; 0xf8
   2ead2:	movs	r1, r0
   2ead4:	movs	r7, #222	; 0xde
   2ead6:	movs	r1, r0
   2ead8:	movs	r7, #102	; 0x66
   2eada:	movs	r1, r0
   2eadc:	pop	{r0, r2, r3, r5, pc}
   2eade:	movs	r0, r0
   2eae0:	movs	r7, #82	; 0x52
   2eae2:	movs	r1, r0
   2eae4:	pop	{r0, r3, r4, pc}
   2eae6:	movs	r0, r0
   2eae8:	movs	r7, #28
   2eaea:	movs	r1, r0
   2eaec:	pop	{r0, r1, r2, r5, r6, r7}
   2eaee:	movs	r0, r0
   2eaf0:	movs	r6, #214	; 0xd6
   2eaf2:	movs	r1, r0
   2eaf4:			; <UNDEFINED> instruction: 0xf3590000
   2eaf8:	str	r4, [r4, #44]	; 0x2c
   2eafa:	movs	r3, r0

0002eafc <raid6_gen_syndrome@@Base>:
   2eafc:	subs	r3, r0, #2
   2eafe:	sub.w	ip, r0, #3
   2eb02:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2eb06:	add.w	ip, r2, ip, lsl #2
   2eb0a:	ldr.w	r8, [r2, r3, lsl #2]
   2eb0e:	add.w	r3, r2, r3, lsl #2
   2eb12:	movs	r4, #0
   2eb14:	ldr.w	r9, [r3, #4]
   2eb18:	cmp	r1, r4
   2eb1a:	bhi.n	2eb20 <raid6_gen_syndrome@@Base+0x24>
   2eb1c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2eb20:	ldr.w	r3, [ip]
   2eb24:	subs	r7, r0, #4
   2eb26:	ldr	r6, [r3, r4]
   2eb28:	mov	r3, r6
   2eb2a:	cmp	r7, #0
   2eb2c:	bge.n	2eb3a <raid6_gen_syndrome@@Base+0x3e>
   2eb2e:	str.w	r6, [r8, r4]
   2eb32:	str.w	r3, [r9, r4]
   2eb36:	adds	r4, #4
   2eb38:	b.n	2eb18 <raid6_gen_syndrome@@Base+0x1c>
   2eb3a:	ldr.w	r5, [r2, r7, lsl #2]
   2eb3e:	and.w	sl, r3, #2155905152	; 0x80808080
   2eb42:	lsls	r3, r3, #1
   2eb44:	subs	r7, #1
   2eb46:	and.w	r3, r3, #4278124286	; 0xfefefefe
   2eb4a:	ldr.w	lr, [r5, r4]
   2eb4e:	mov.w	r5, sl, lsr #7
   2eb52:	rsb	r5, r5, sl, lsl #1
   2eb56:	and.w	r5, r5, #488447261	; 0x1d1d1d1d
   2eb5a:	eor.w	r6, r6, lr
   2eb5e:	eor.w	lr, r5, lr
   2eb62:	eor.w	r3, lr, r3
   2eb66:	b.n	2eb2a <raid6_gen_syndrome@@Base+0x2e>

0002eb68 <raid5_gen_result@@Base>:
   2eb68:	cmp.w	r1, #65536	; 0x10000
   2eb6c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eb70:	mov	r6, r0
   2eb72:	ldr.w	r8, [r3, r2, lsl #2]
   2eb76:	mov	r5, r2
   2eb78:	mov	r7, r3
   2eb7a:	beq.n	2eb92 <raid5_gen_result@@Base+0x2a>
   2eb7c:	ldr	r1, [pc, #184]	; (2ec38 <raid5_gen_result@@Base+0xd0>)
   2eb7e:	ldr	r0, [pc, #188]	; (2ec3c <raid5_gen_result@@Base+0xd4>)
   2eb80:	add	r1, pc
   2eb82:	add	r0, pc
   2eb84:	bl	1747c <__btrfs_error@@Base>
   2eb88:	mvn.w	r0, #21
   2eb8c:	add	sp, #12
   2eb8e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb92:	cmp	r2, r0
   2eb94:	bge.n	2eb7c <raid5_gen_result@@Base+0x14>
   2eb96:	cmp	r0, #1
   2eb98:	ble.n	2eb7c <raid5_gen_result@@Base+0x14>
   2eb9a:	cmp	r0, #2
   2eb9c:	bne.n	2ebb2 <raid5_gen_result@@Base+0x4a>
   2eb9e:	rsb	r5, r2, #1
   2eba2:	mov	r0, r8
   2eba4:	mov	r2, r1
   2eba6:	ldr.w	r1, [r3, r5, lsl #2]
   2ebaa:	blx	843c <memcpy@plt+0x4>
   2ebae:	movs	r0, #0
   2ebb0:	b.n	2eb8c <raid5_gen_result@@Base+0x24>
   2ebb2:	mov	r2, r1
   2ebb4:	mov	r0, r8
   2ebb6:	movs	r1, #0
   2ebb8:	mvn.w	fp, #3
   2ebbc:	blx	8780 <memset@plt+0x4>
   2ebc0:	movs	r0, #0
   2ebc2:	cmp	r0, r6
   2ebc4:	beq.n	2ebae <raid5_gen_result@@Base+0x46>
   2ebc6:	cmp	r0, r5
   2ebc8:	bne.n	2ebce <raid5_gen_result@@Base+0x66>
   2ebca:	adds	r0, #1
   2ebcc:	b.n	2ebc2 <raid5_gen_result@@Base+0x5a>
   2ebce:	ldr.w	r1, [r7, r0, lsl #2]
   2ebd2:	mov.w	r2, #65536	; 0x10000
   2ebd6:	mov	r4, r8
   2ebd8:	lsls	r3, r4, #29
   2ebda:	bmi.n	2ec10 <raid5_gen_result@@Base+0xa8>
   2ebdc:	bic.w	r9, r2, #3
   2ebe0:	sub.w	ip, r4, #4
   2ebe4:	add.w	sl, r1, r9
   2ebe8:	lsrs	r3, r2, #2
   2ebea:	str	r3, [sp, #4]
   2ebec:	cmp	r1, sl
   2ebee:	bne.n	2ec26 <raid5_gen_result@@Base+0xbe>
   2ebf0:	ldr	r3, [sp, #4]
   2ebf2:	add	r4, r9
   2ebf4:	mla	r2, fp, r3, r2
   2ebf8:	add	r2, r1
   2ebfa:	cmp	r1, r2
   2ebfc:	beq.n	2ebca <raid5_gen_result@@Base+0x62>
   2ebfe:	ldrb.w	ip, [r4], #1
   2ec02:	ldrb.w	r3, [r1], #1
   2ec06:	eor.w	r3, r3, ip
   2ec0a:	strb.w	r3, [r4, #-1]
   2ec0e:	b.n	2ebfa <raid5_gen_result@@Base+0x92>
   2ec10:	ldrb.w	ip, [r4], #1
   2ec14:	subs	r2, #1
   2ec16:	ldrb.w	r3, [r1], #1
   2ec1a:	eor.w	r3, r3, ip
   2ec1e:	strb.w	r3, [r4, #-1]
   2ec22:	bne.n	2ebd8 <raid5_gen_result@@Base+0x70>
   2ec24:	b.n	2ebca <raid5_gen_result@@Base+0x62>
   2ec26:	ldr.w	lr, [ip, #4]!
   2ec2a:	ldr.w	r3, [r1], #4
   2ec2e:	eor.w	lr, lr, r3
   2ec32:	str.w	lr, [ip]
   2ec36:	b.n	2ebec <raid5_gen_result@@Base+0x84>
   2ec38:	movs	r6, #78	; 0x4e
   2ec3a:	movs	r1, r0
   2ec3c:	movs	r6, #51	; 0x33
   2ec3e:	movs	r1, r0

0002ec40 <raid6_recov_data2@@Base>:
   2ec40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ec44:	mov	r5, r2
   2ec46:	ldr.w	sl, [pc, #320]	; 2ed88 <raid6_recov_data2@@Base+0x148>
   2ec4a:	sub	sp, #28
   2ec4c:	cmp	r5, #0
   2ec4e:	mov	fp, r1
   2ec50:	add	sl, pc
   2ec52:	mov	r4, r3
   2ec54:	str	r0, [sp, #8]
   2ec56:	blt.w	2ed82 <raid6_recov_data2@@Base+0x142>
   2ec5a:	subs	r3, r0, #2
   2ec5c:	cmp	r3, r5
   2ec5e:	ble.w	2ed82 <raid6_recov_data2@@Base+0x142>
   2ec62:	cmp	r4, #0
   2ec64:	blt.w	2ed82 <raid6_recov_data2@@Base+0x142>
   2ec68:	cmp	r3, r4
   2ec6a:	ble.w	2ed82 <raid6_recov_data2@@Base+0x142>
   2ec6e:	cmp	r5, r4
   2ec70:	bge.w	2ed82 <raid6_recov_data2@@Base+0x142>
   2ec74:	movs	r0, #1
   2ec76:	blx	8358 <calloc@plt+0x4>
   2ec7a:	mov	r1, fp
   2ec7c:	mov	r8, r0
   2ec7e:	movs	r0, #1
   2ec80:	blx	8358 <calloc@plt+0x4>
   2ec84:	mov	r7, r0
   2ec86:	cmp.w	r8, #0
   2ec8a:	beq.n	2ec90 <raid6_recov_data2@@Base+0x50>
   2ec8c:	ldr	r2, [sp, #64]	; 0x40
   2ec8e:	cbnz	r0, 2eca6 <raid6_recov_data2@@Base+0x66>
   2ec90:	mov	r0, r8
   2ec92:	blx	83f0 <free@plt+0x4>
   2ec96:	mov	r0, r7
   2ec98:	blx	83f0 <free@plt+0x4>
   2ec9c:	mvn.w	r0, #11
   2eca0:	add	sp, #28
   2eca2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eca6:	ldr	r3, [sp, #8]
   2eca8:	str	r2, [sp, #64]	; 0x40
   2ecaa:	add.w	r9, r3, #1073741824	; 0x40000000
   2ecae:	sub.w	r9, r9, #2
   2ecb2:	ldr.w	r1, [r2, r9, lsl #2]
   2ecb6:	mov.w	r3, r9, lsl #2
   2ecba:	adds	r3, #4
   2ecbc:	str	r3, [sp, #20]
   2ecbe:	str	r1, [sp, #12]
   2ecc0:	ldr	r1, [r2, r3]
   2ecc2:	str	r1, [sp, #16]
   2ecc4:	ldr.w	r1, [r2, r5, lsl #2]
   2ecc8:	str.w	r8, [r2, r5, lsl #2]
   2eccc:	str.w	r1, [r2, r9, lsl #2]
   2ecd0:	ldr.w	r6, [r2, r4, lsl #2]
   2ecd4:	str	r1, [sp, #4]
   2ecd6:	mov	r1, fp
   2ecd8:	str.w	r0, [r2, r4, lsl #2]
   2ecdc:	str	r6, [r2, r3]
   2ecde:	ldr	r0, [sp, #8]
   2ece0:	bl	2eafc <raid6_gen_syndrome@@Base>
   2ece4:	ldr	r2, [sp, #64]	; 0x40
   2ece6:	ldr	r3, [sp, #4]
   2ece8:	str.w	r3, [r2, r5, lsl #2]
   2ecec:	ldr	r3, [sp, #12]
   2ecee:	str.w	r6, [r2, r4, lsl #2]
   2ecf2:	str.w	r3, [r2, r9, lsl #2]
   2ecf6:	ldrd	r1, r3, [sp, #16]
   2ecfa:	str	r1, [r2, r3]
   2ecfc:	ldr	r3, [pc, #140]	; (2ed8c <raid6_recov_data2@@Base+0x14c>)
   2ecfe:	ldr.w	r2, [sl, r3]
   2ed02:	subs	r3, r4, r5
   2ed04:	ldrb	r0, [r2, r3]
   2ed06:	ldr	r3, [pc, #136]	; (2ed90 <raid6_recov_data2@@Base+0x150>)
   2ed08:	lsls	r0, r0, #8
   2ed0a:	ldr.w	r2, [sl, r3]
   2ed0e:	ldr	r3, [pc, #132]	; (2ed94 <raid6_recov_data2@@Base+0x154>)
   2ed10:	ldr.w	r1, [sl, r3]
   2ed14:	ldrb	r3, [r1, r5]
   2ed16:	ldrb	r1, [r1, r4]
   2ed18:	eors	r3, r1
   2ed1a:	add.w	r1, r6, fp
   2ed1e:	ldrb	r4, [r2, r3]
   2ed20:	ldr	r3, [sp, #12]
   2ed22:	subs	r5, r3, #1
   2ed24:	ldr	r3, [sp, #4]
   2ed26:	lsls	r4, r4, #8
   2ed28:	add.w	ip, r3, #4294967295	; 0xffffffff
   2ed2c:	ldr	r3, [sp, #16]
   2ed2e:	add.w	lr, r3, #4294967295	; 0xffffffff
   2ed32:	cmp	r6, r1
   2ed34:	bne.n	2ed46 <raid6_recov_data2@@Base+0x106>
   2ed36:	mov	r0, r8
   2ed38:	blx	83f0 <free@plt+0x4>
   2ed3c:	mov	r0, r7
   2ed3e:	blx	83f0 <free@plt+0x4>
   2ed42:	movs	r0, #0
   2ed44:	b.n	2eca0 <raid6_recov_data2@@Base+0x60>
   2ed46:	ldrb.w	r2, [r5, #1]!
   2ed4a:	ldrb.w	r3, [ip, #1]!
   2ed4e:	ldrb.w	r9, [r6]
   2ed52:	eors	r3, r2
   2ed54:	ldrb.w	r2, [lr, #1]!
   2ed58:	add.w	fp, r3, r0
   2ed5c:	eor.w	r2, r2, r9
   2ed60:	ldr.w	r9, [pc, #52]	; 2ed98 <raid6_recov_data2@@Base+0x158>
   2ed64:	add	r2, r4
   2ed66:	ldr.w	r9, [sl, r9]
   2ed6a:	ldrb.w	r2, [r2, r9]
   2ed6e:	ldrb.w	r9, [fp, r9]
   2ed72:	eor.w	r2, r2, r9
   2ed76:	strb.w	r2, [r6], #1
   2ed7a:	eors	r3, r2
   2ed7c:	strb.w	r3, [ip]
   2ed80:	b.n	2ed32 <raid6_recov_data2@@Base+0xf2>
   2ed82:	mvn.w	r0, #21
   2ed86:	b.n	2eca0 <raid6_recov_data2@@Base+0x60>
   2ed88:	str	r0, [r7, #16]
   2ed8a:	movs	r3, r0
   2ed8c:	lsls	r4, r4, #9
   2ed8e:	movs	r0, r0
   2ed90:	lsls	r0, r7, #8
   2ed92:	movs	r0, r0
   2ed94:	lsls	r4, r5, #8
   2ed96:	movs	r0, r0
   2ed98:	lsls	r4, r7, #8
	...

0002ed9c <raid6_recov_datap@@Base>:
   2ed9c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eda0:	mov	r7, r2
   2eda2:	add.w	r2, r0, #1073741824	; 0x40000000
   2eda6:	mov	r4, r3
   2eda8:	subs	r2, #2
   2edaa:	ldr.w	sl, [pc, #144]	; 2ee3c <raid6_recov_datap@@Base+0xa0>
   2edae:	mov	fp, r0
   2edb0:	movs	r0, #1
   2edb2:	lsls	r3, r2, #2
   2edb4:	add	sl, pc
   2edb6:	add.w	r9, r3, #4
   2edba:	ldr.w	r8, [r4, r2, lsl #2]
   2edbe:	mov	r6, r1
   2edc0:	ldr.w	r3, [r4, r9]
   2edc4:	str	r3, [sp, #4]
   2edc6:	blx	8358 <calloc@plt+0x4>
   2edca:	cbz	r0, 2ee36 <raid6_recov_datap@@Base+0x9a>
   2edcc:	ldr.w	r5, [r4, r7, lsl #2]
   2edd0:	mov	r2, r4
   2edd2:	str.w	r0, [r4, r7, lsl #2]
   2edd6:	mov	r1, r6
   2edd8:	mov	r0, fp
   2edda:	add	r6, r8
   2eddc:	str.w	r5, [r4, r9]
   2ede0:	bl	2eafc <raid6_gen_syndrome@@Base>
   2ede4:	ldr	r3, [sp, #4]
   2ede6:	str.w	r5, [r4, r7, lsl #2]
   2edea:	subs	r5, #1
   2edec:	str.w	r3, [r4, r9]
   2edf0:	ldr	r3, [pc, #76]	; (2ee40 <raid6_recov_datap@@Base+0xa4>)
   2edf2:	ldr.w	r2, [sl, r3]
   2edf6:	ldr	r3, [pc, #76]	; (2ee44 <raid6_recov_datap@@Base+0xa8>)
   2edf8:	ldr.w	r3, [sl, r3]
   2edfc:	ldrb	r3, [r3, r7]
   2edfe:	ldrb	r2, [r2, r3]
   2ee00:	ldr	r3, [sp, #4]
   2ee02:	lsls	r2, r2, #8
   2ee04:	add.w	r9, r3, #4294967295	; 0xffffffff
   2ee08:	cmp	r8, r6
   2ee0a:	bne.n	2ee14 <raid6_recov_datap@@Base+0x78>
   2ee0c:	movs	r0, #0
   2ee0e:	add	sp, #12
   2ee10:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ee14:	ldrb.w	r1, [r5, #1]!
   2ee18:	ldrb.w	r3, [r9, #1]!
   2ee1c:	eors	r3, r1
   2ee1e:	ldr	r1, [pc, #40]	; (2ee48 <raid6_recov_datap@@Base+0xac>)
   2ee20:	add	r3, r2
   2ee22:	ldr.w	r1, [sl, r1]
   2ee26:	ldrb	r3, [r3, r1]
   2ee28:	strb	r3, [r5, #0]
   2ee2a:	ldrb.w	r1, [r8], #1
   2ee2e:	eors	r3, r1
   2ee30:	strb.w	r3, [r8, #-1]
   2ee34:	b.n	2ee08 <raid6_recov_datap@@Base+0x6c>
   2ee36:	mvn.w	r0, #11
   2ee3a:	b.n	2ee0e <raid6_recov_datap@@Base+0x72>
   2ee3c:	ldrsh	r4, [r2, r7]
   2ee3e:	movs	r3, r0
   2ee40:	lsls	r0, r7, #8
   2ee42:	movs	r0, r0
   2ee44:	lsls	r4, r5, #8
   2ee46:	movs	r0, r0
   2ee48:	lsls	r4, r7, #8
	...

0002ee4c <raid56_recov@@Base>:
   2ee4c:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   2ee50:	mov.w	ip, #0
   2ee54:	mov	r5, r0
   2ee56:	mov	r0, r2
   2ee58:	and.w	r6, r0, #128	; 0x80
   2ee5c:	mov	r7, ip
   2ee5e:	orrs.w	lr, r6, r7
   2ee62:	ldrd	r2, r4, [sp, #40]	; 0x28
   2ee66:	ldr	r3, [sp, #48]	; 0x30
   2ee68:	bne.n	2ee88 <raid56_recov@@Base+0x3c>
   2ee6a:	and.w	r8, r0, #256	; 0x100
   2ee6e:	mov	r9, ip
   2ee70:	orrs.w	r0, r8, r9
   2ee74:	beq.n	2eef4 <raid56_recov@@Base+0xa8>
   2ee76:	movs	r0, #3
   2ee78:	cmp	r0, r5
   2ee7a:	bgt.n	2eef4 <raid56_recov@@Base+0xa8>
   2ee7c:	adds	r0, r2, #1
   2ee7e:	bne.n	2ee8c <raid56_recov@@Base+0x40>
   2ee80:	adds	r2, r4, #1
   2ee82:	bne.n	2eefe <raid56_recov@@Base+0xb2>
   2ee84:	movs	r0, #0
   2ee86:	b.n	2eeee <raid56_recov@@Base+0xa2>
   2ee88:	movs	r0, #2
   2ee8a:	b.n	2ee78 <raid56_recov@@Base+0x2c>
   2ee8c:	adds	r0, r4, #1
   2ee8e:	beq.n	2ef28 <raid56_recov@@Base+0xdc>
   2ee90:	cmp	r2, r4
   2ee92:	bgt.n	2ef1a <raid56_recov@@Base+0xce>
   2ee94:	orrs.w	r0, r6, r7
   2ee98:	bne.n	2eefa <raid56_recov@@Base+0xae>
   2ee9a:	subs	r0, r5, #2
   2ee9c:	cmp	r0, r2
   2ee9e:	bne.n	2eea6 <raid56_recov@@Base+0x5a>
   2eea0:	subs	r6, r5, #1
   2eea2:	cmp	r6, r4
   2eea4:	beq.n	2ef10 <raid56_recov@@Base+0xc4>
   2eea6:	cmp	r0, r4
   2eea8:	ble.n	2eecc <raid56_recov@@Base+0x80>
   2eeaa:	str	r3, [sp, #40]	; 0x28
   2eeac:	mov	r0, r5
   2eeae:	mov	r3, r4
   2eeb0:	add	sp, #12
   2eeb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2eeb6:	b.w	2ec40 <raid6_recov_data2@@Base>
   2eeba:	mov	r2, r4
   2eebc:	mov	r0, r5
   2eebe:	add	sp, #12
   2eec0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2eec4:	b.w	2eb68 <raid5_gen_result@@Base>
   2eec8:	mov	r2, r4
   2eeca:	b.n	2eebe <raid56_recov@@Base+0x72>
   2eecc:	subs	r0, r5, #1
   2eece:	cmp	r0, r4
   2eed0:	bne.n	2eede <raid56_recov@@Base+0x92>
   2eed2:	mov	r0, r5
   2eed4:	add	sp, #12
   2eed6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2eeda:	b.w	2ed9c <raid6_recov_datap@@Base>
   2eede:	strd	r1, r3, [sp]
   2eee2:	bl	2eb68 <raid5_gen_result@@Base>
   2eee6:	ldrd	r1, r3, [sp]
   2eeea:	cmp	r0, #0
   2eeec:	bge.n	2ef10 <raid56_recov@@Base+0xc4>
   2eeee:	add	sp, #12
   2eef0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2eef4:	mvn.w	r0, #21
   2eef8:	b.n	2eeee <raid56_recov@@Base+0xa2>
   2eefa:	movs	r0, #1
   2eefc:	b.n	2eeee <raid56_recov@@Base+0xa2>
   2eefe:	orrs.w	r2, r6, r7
   2ef02:	bne.n	2eeba <raid56_recov@@Base+0x6e>
   2ef04:	subs	r0, r5, #1
   2ef06:	cmp	r0, r4
   2ef08:	beq.n	2ef10 <raid56_recov@@Base+0xc4>
   2ef0a:	subs	r2, r5, #2
   2ef0c:	cmp	r2, r4
   2ef0e:	bne.n	2eec8 <raid56_recov@@Base+0x7c>
   2ef10:	mov	r2, r3
   2ef12:	mov	r0, r5
   2ef14:	bl	2eafc <raid6_gen_syndrome@@Base>
   2ef18:	b.n	2ee84 <raid56_recov@@Base+0x38>
   2ef1a:	orrs.w	r0, r6, r7
   2ef1e:	bne.n	2eefa <raid56_recov@@Base+0xae>
   2ef20:	mov	r0, r2
   2ef22:	mov	r2, r4
   2ef24:	mov	r4, r0
   2ef26:	b.n	2ee9a <raid56_recov@@Base+0x4e>
   2ef28:	orrs.w	r0, r6, r7
   2ef2c:	mov	r4, r2
   2ef2e:	b.n	2ef02 <raid56_recov@@Base+0xb6>

0002ef30 <check_arg_type@@Base>:
   2ef30:	ldr	r1, [pc, #128]	; (2efb4 <check_arg_type@@Base+0x84>)
   2ef32:	ldr	r2, [pc, #132]	; (2efb8 <check_arg_type@@Base+0x88>)
   2ef34:	push	{r4, lr}
   2ef36:	add	r1, pc
   2ef38:	sub.w	sp, sp, #4096	; 0x1000
   2ef3c:	sub	sp, #8
   2ef3e:	ldr	r2, [r1, r2]
   2ef40:	add.w	r3, sp, #4096	; 0x1000
   2ef44:	adds	r3, #4
   2ef46:	ldr	r2, [r2, #0]
   2ef48:	str	r2, [r3, #0]
   2ef4a:	mov.w	r2, #0
   2ef4e:	cbz	r0, 2efa2 <check_arg_type@@Base+0x72>
   2ef50:	add	r4, sp, #4
   2ef52:	mov.w	r2, #4096	; 0x1000
   2ef56:	mov	r1, r4
   2ef58:	blx	859c <__realpath_chk@plt>
   2ef5c:	cbz	r0, 2ef98 <check_arg_type@@Base+0x68>
   2ef5e:	mov	r0, r4
   2ef60:	bl	2f94c <path_is_block_device@@Base>
   2ef64:	cmp	r0, #1
   2ef66:	beq.n	2efa8 <check_arg_type@@Base+0x78>
   2ef68:	mov	r0, r4
   2ef6a:	bl	2f9a8 <path_is_mount_point@@Base>
   2ef6e:	cmp	r0, #1
   2ef70:	beq.n	2ef7e <check_arg_type@@Base+0x4e>
   2ef72:	mov	r0, r4
   2ef74:	bl	2f9f0 <path_is_reg_file@@Base>
   2ef78:	cmp	r0, #0
   2ef7a:	it	ne
   2ef7c:	movne	r0, #4
   2ef7e:	ldr	r1, [pc, #60]	; (2efbc <check_arg_type@@Base+0x8c>)
   2ef80:	add.w	r3, sp, #4096	; 0x1000
   2ef84:	ldr	r2, [pc, #48]	; (2efb8 <check_arg_type@@Base+0x88>)
   2ef86:	adds	r3, #4
   2ef88:	add	r1, pc
   2ef8a:	ldr	r2, [r1, r2]
   2ef8c:	ldr	r1, [r2, #0]
   2ef8e:	ldr	r2, [r3, #0]
   2ef90:	eors	r1, r2
   2ef92:	beq.n	2efac <check_arg_type@@Base+0x7c>
   2ef94:	blx	84cc <__stack_chk_fail@plt>
   2ef98:	blx	8740 <__errno_location@plt>
   2ef9c:	ldr	r0, [r0, #0]
   2ef9e:	negs	r0, r0
   2efa0:	b.n	2ef7e <check_arg_type@@Base+0x4e>
   2efa2:	mvn.w	r0, #21
   2efa6:	b.n	2ef7e <check_arg_type@@Base+0x4e>
   2efa8:	movs	r0, #3
   2efaa:	b.n	2ef7e <check_arg_type@@Base+0x4e>
   2efac:	add.w	sp, sp, #4096	; 0x1000
   2efb0:	add	sp, #8
   2efb2:	pop	{r4, pc}
   2efb4:	ldrsh	r2, [r2, r1]
   2efb6:	movs	r3, r0
   2efb8:	lsls	r4, r4, #8
   2efba:	movs	r0, r0
   2efbc:	ldrsh	r0, [r0, r0]
   2efbe:	movs	r3, r0

0002efc0 <test_uuid_unique@@Base>:
   2efc0:	push	{r0, r1, r2, r3, r4, r5, r6, lr}
   2efc2:	movs	r1, #0
   2efc4:	ldr	r2, [pc, #136]	; (2f050 <test_uuid_unique@@Base+0x90>)
   2efc6:	mov	r4, r0
   2efc8:	ldr	r3, [pc, #136]	; (2f054 <test_uuid_unique@@Base+0x94>)
   2efca:	add	r0, sp, #8
   2efcc:	add	r2, pc
   2efce:	ldr	r3, [r2, r3]
   2efd0:	ldr	r3, [r3, #0]
   2efd2:	str	r3, [sp, #12]
   2efd4:	mov.w	r3, #0
   2efd8:	strd	r1, r1, [sp, #4]
   2efdc:	blx	8920 <blkid_get_cache@plt>
   2efe0:	cmp	r0, #0
   2efe2:	bge.n	2f002 <test_uuid_unique@@Base+0x42>
   2efe4:	ldr	r0, [pc, #112]	; (2f058 <test_uuid_unique@@Base+0x98>)
   2efe6:	movs	r4, #1
   2efe8:	add	r0, pc
   2efea:	blx	8618 <puts@plt+0x4>
   2efee:	ldr	r2, [pc, #108]	; (2f05c <test_uuid_unique@@Base+0x9c>)
   2eff0:	ldr	r3, [pc, #96]	; (2f054 <test_uuid_unique@@Base+0x94>)
   2eff2:	add	r2, pc
   2eff4:	ldr	r3, [r2, r3]
   2eff6:	ldr	r2, [r3, #0]
   2eff8:	ldr	r3, [sp, #12]
   2effa:	eors	r2, r3
   2effc:	beq.n	2f048 <test_uuid_unique@@Base+0x88>
   2effe:	blx	84cc <__stack_chk_fail@plt>
   2f002:	ldr	r0, [sp, #8]
   2f004:	add	r6, sp, #4
   2f006:	blx	896c <blkid_probe_all@plt>
   2f00a:	ldr	r0, [sp, #8]
   2f00c:	blx	84d8 <blkid_dev_iterate_begin@plt>
   2f010:	ldr	r1, [pc, #76]	; (2f060 <test_uuid_unique@@Base+0xa0>)
   2f012:	mov	r2, r4
   2f014:	add	r1, pc
   2f016:	mov	r5, r0
   2f018:	blx	8540 <blkid_dev_set_search@plt>
   2f01c:	mov	r1, r6
   2f01e:	mov	r0, r5
   2f020:	blx	868c <blkid_dev_next@plt>
   2f024:	mov	r4, r0
   2f026:	cbz	r0, 2f02c <test_uuid_unique@@Base+0x6c>
   2f028:	movs	r4, #1
   2f02a:	b.n	2f03a <test_uuid_unique@@Base+0x7a>
   2f02c:	ldrd	r1, r0, [sp, #4]
   2f030:	blx	8698 <blkid_verify@plt>
   2f034:	str	r0, [sp, #4]
   2f036:	cmp	r0, #0
   2f038:	beq.n	2f01c <test_uuid_unique@@Base+0x5c>
   2f03a:	mov	r0, r5
   2f03c:	blx	87d8 <blkid_dev_iterate_end@plt>
   2f040:	ldr	r0, [sp, #8]
   2f042:	blx	848c <blkid_put_cache@plt>
   2f046:	b.n	2efee <test_uuid_unique@@Base+0x2e>
   2f048:	mov	r0, r4
   2f04a:	add	sp, #16
   2f04c:	pop	{r4, r5, r6, pc}
   2f04e:	nop
   2f050:	ldrb	r4, [r7, r6]
   2f052:	movs	r3, r0
   2f054:	lsls	r4, r4, #8
   2f056:	movs	r0, r0
   2f058:	cmp	r4, r2
   2f05a:	movs	r2, r0
   2f05c:	ldrb	r6, [r2, r6]
   2f05e:	movs	r3, r0
   2f060:	ldmia	r7!, {r0, r5}
	...

0002f064 <btrfs_add_to_fsid@@Base>:
   2f064:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f068:	sub	sp, #132	; 0x84
   2f06a:	mov	fp, r3
   2f06c:	ldr	r3, [pc, #596]	; (2f2c4 <btrfs_add_to_fsid@@Base+0x260>)
   2f06e:	str	r2, [sp, #48]	; 0x30
   2f070:	mov	r9, r0
   2f072:	ldr	r2, [pc, #596]	; (2f2c8 <btrfs_add_to_fsid@@Base+0x264>)
   2f074:	add	r3, pc
   2f076:	str	r3, [sp, #52]	; 0x34
   2f078:	ldr	r3, [pc, #592]	; (2f2cc <btrfs_add_to_fsid@@Base+0x268>)
   2f07a:	add	r2, pc
   2f07c:	ldr.w	r8, [r1, #464]	; 0x1d0
   2f080:	ldr	r7, [sp, #184]	; 0xb8
   2f082:	ldr	r3, [r2, r3]
   2f084:	ldr.w	r6, [r8, #308]	; 0x134
   2f088:	ldr	r3, [r3, #0]
   2f08a:	str	r3, [sp, #124]	; 0x7c
   2f08c:	mov.w	r3, #0
   2f090:	ldrd	r0, r1, [sp, #168]	; 0xa8
   2f094:	mov	r2, r7
   2f096:	ldr	r3, [r6, #112]	; 0x70
   2f098:	str	r3, [sp, #32]
   2f09a:	ldr	r3, [r6, #116]	; 0x74
   2f09c:	str	r3, [sp, #36]	; 0x24
   2f09e:	movs	r3, #0
   2f0a0:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   2f0a4:	umull	r3, r4, r7, r0
   2f0a8:	movs	r0, #1
   2f0aa:	strd	r3, r4, [sp, #16]
   2f0ae:	ldr	r3, [sp, #20]
   2f0b0:	mla	r3, r7, r1, r3
   2f0b4:	movs	r1, #128	; 0x80
   2f0b6:	str	r3, [sp, #20]
   2f0b8:	blx	8358 <calloc@plt+0x4>
   2f0bc:	mov	r4, r0
   2f0be:	cmp	r0, #0
   2f0c0:	beq.w	2f2ac <btrfs_add_to_fsid@@Base+0x248>
   2f0c4:	mov	r1, r7
   2f0c6:	movs	r0, #1
   2f0c8:	blx	8358 <calloc@plt+0x4>
   2f0cc:	mov	r5, r0
   2f0ce:	cmp	r0, #0
   2f0d0:	beq.w	2f2ac <btrfs_add_to_fsid@@Base+0x248>
   2f0d4:	add.w	r3, r4, #112	; 0x70
   2f0d8:	str	r3, [sp, #44]	; 0x2c
   2f0da:	mov	r0, r3
   2f0dc:	blx	880c <uuid_generate@plt>
   2f0e0:	ldr	r2, [sp, #176]	; 0xb0
   2f0e2:	movs	r3, #0
   2f0e4:	str	r7, [r4, #96]	; 0x60
   2f0e6:	strd	r3, r3, [r4, #64]	; 0x40
   2f0ea:	mov	r0, fp
   2f0ec:	str	r2, [r4, #92]	; 0x5c
   2f0ee:	mov	sl, r3
   2f0f0:	ldr	r2, [sp, #180]	; 0xb4
   2f0f2:	strd	r3, r3, [r4, #104]	; 0x68
   2f0f6:	strd	r3, r3, [r4, #80]	; 0x50
   2f0fa:	str	r2, [r4, #88]	; 0x58
   2f0fc:	ldr	r2, [sp, #48]	; 0x30
   2f0fe:	strd	r3, r3, [r4, #16]
   2f102:	str	r2, [r4, #24]
   2f104:	movs	r2, #1
   2f106:	str	r2, [r4, #28]
   2f108:	ldrd	r1, r2, [sp, #16]
   2f10c:	strd	r1, r2, [r4, #72]	; 0x48
   2f110:	ldr.w	r2, [r8, #36]	; 0x24
   2f114:	str	r2, [r4, #8]
   2f116:	blx	84b4 <strdup@plt+0x4>
   2f11a:	str	r0, [r4, #32]
   2f11c:	cmp	r0, #0
   2f11e:	beq.w	2f2b4 <btrfs_add_to_fsid@@Base+0x250>
   2f122:	ldrd	r0, r1, [sp, #32]
   2f126:	strd	sl, sl, [sp, #24]
   2f12a:	ldrd	sl, fp, [sp, #16]
   2f12e:	adds.w	r2, sl, r0
   2f132:	adcs.w	r3, fp, r1
   2f136:	mov	fp, r2
   2f138:	itt	cs
   2f13a:	movcs	r0, #1
   2f13c:	movcs	r1, #0
   2f13e:	mov	sl, r3
   2f140:	it	cs
   2f142:	strdcs	r0, r1, [sp, #24]
   2f146:	ldrd	r2, r3, [sp, #24]
   2f14a:	orrs	r3, r2
   2f14c:	beq.n	2f17a <btrfs_add_to_fsid@@Base+0x116>
   2f14e:	ldrd	r0, r1, [sp, #16]
   2f152:	mov.w	r2, #512	; 0x200
   2f156:	bl	30500 <pretty_size_mode@@Base>
   2f15a:	ldrd	r2, r3, [sp, #16]
   2f15e:	mvn.w	r9, #74	; 0x4a
   2f162:	str	r0, [sp, #0]
   2f164:	ldr	r0, [pc, #360]	; (2f2d0 <btrfs_add_to_fsid@@Base+0x26c>)
   2f166:	add	r0, pc
   2f168:	bl	1747c <__btrfs_error@@Base>
   2f16c:	mov	r0, r4
   2f16e:	blx	83f0 <free@plt+0x4>
   2f172:	mov	r0, r5
   2f174:	blx	83f0 <free@plt+0x4>
   2f178:	b.n	2f298 <btrfs_add_to_fsid@@Base+0x234>
   2f17a:	mov	r0, r9
   2f17c:	mov	r2, r4
   2f17e:	mov	r1, r8
   2f180:	strd	r4, r4, [r4]
   2f184:	bl	28498 <btrfs_add_device@@Base>
   2f188:	mov	r9, r0
   2f18a:	cmp	r0, #0
   2f18c:	bne.n	2f16c <btrfs_add_to_fsid@@Base+0x108>
   2f18e:	ldr.w	r3, [r6, #136]	; 0x88
   2f192:	mov	r1, r6
   2f194:	ldr.w	r2, [r6, #140]	; 0x8c
   2f198:	mov	r0, r5
   2f19a:	adds	r3, #1
   2f19c:	str.w	fp, [r6, #112]	; 0x70
   2f1a0:	adc.w	r2, r2, #0
   2f1a4:	str.w	r3, [r6, #136]	; 0x88
   2f1a8:	str.w	r2, [r6, #140]	; 0x8c
   2f1ac:	movw	r2, #3531	; 0xdcb
   2f1b0:	str.w	sl, [r6, #116]	; 0x74
   2f1b4:	addw	r6, r5, #267	; 0x10b
   2f1b8:	blx	843c <memcpy@plt+0x4>
   2f1bc:	movs	r3, #0
   2f1be:	mov.w	r2, #65536	; 0x10000
   2f1c2:	strd	r2, r3, [r5, #48]	; 0x30
   2f1c6:	ldr	r3, [r4, #64]	; 0x40
   2f1c8:	str.w	r3, [r5, #201]	; 0xc9
   2f1cc:	ldr	r3, [r4, #68]	; 0x44
   2f1ce:	str.w	r3, [r5, #205]	; 0xcd
   2f1d2:	ldr	r3, [r4, #104]	; 0x68
   2f1d4:	str.w	r3, [r5, #237]	; 0xed
   2f1d8:	ldr	r3, [r4, #108]	; 0x6c
   2f1da:	str.w	r3, [r5, #241]	; 0xf1
   2f1de:	ldr	r3, [r4, #88]	; 0x58
   2f1e0:	str.w	r3, [r5, #225]	; 0xe1
   2f1e4:	ldr	r3, [r4, #92]	; 0x5c
   2f1e6:	str.w	r3, [r5, #229]	; 0xe5
   2f1ea:	ldr	r3, [r4, #96]	; 0x60
   2f1ec:	str.w	r3, [r5, #233]	; 0xe9
   2f1f0:	ldr	r3, [r4, #72]	; 0x48
   2f1f2:	str.w	r3, [r5, #209]	; 0xd1
   2f1f6:	ldr	r3, [r4, #76]	; 0x4c
   2f1f8:	str.w	r3, [r5, #213]	; 0xd5
   2f1fc:	ldr	r3, [r4, #80]	; 0x50
   2f1fe:	str.w	r3, [r5, #217]	; 0xd9
   2f202:	ldr	r3, [r4, #84]	; 0x54
   2f204:	str.w	r3, [r5, #221]	; 0xdd
   2f208:	ldr	r3, [sp, #44]	; 0x2c
   2f20a:	add.w	ip, r3, #16
   2f20e:	mov	r2, r3
   2f210:	adds	r6, #8
   2f212:	ldmia	r2!, {r0, r1}
   2f214:	cmp	r2, ip
   2f216:	str.w	r0, [r6, #-8]
   2f21a:	mov	r3, r2
   2f21c:	str.w	r1, [r6, #-4]
   2f220:	bne.n	2f20e <btrfs_add_to_fsid@@Base+0x1aa>
   2f222:	mov.w	r2, #65536	; 0x10000
   2f226:	movs	r3, #0
   2f228:	ldr	r0, [sp, #48]	; 0x30
   2f22a:	mov	r1, r5
   2f22c:	strd	r2, r3, [sp]
   2f230:	mov	r2, r7
   2f232:	blx	87e4 <pwrite64@plt>
   2f236:	cmp	r0, r7
   2f238:	beq.n	2f27a <btrfs_add_to_fsid@@Base+0x216>
   2f23a:	ldr	r2, [sp, #52]	; 0x34
   2f23c:	add	r4, sp, #60	; 0x3c
   2f23e:	ldr	r3, [pc, #148]	; (2f2d4 <btrfs_add_to_fsid@@Base+0x270>)
   2f240:	movs	r1, #1
   2f242:	ldr	r0, [r2, r3]
   2f244:	ldr	r3, [pc, #144]	; (2f2d8 <btrfs_add_to_fsid@@Base+0x274>)
   2f246:	ldr	r2, [pc, #148]	; (2f2dc <btrfs_add_to_fsid@@Base+0x278>)
   2f248:	add	r3, pc
   2f24a:	str	r3, [sp, #8]
   2f24c:	ldr	r3, [pc, #144]	; (2f2e0 <btrfs_add_to_fsid@@Base+0x27c>)
   2f24e:	add	r2, pc
   2f250:	str	r1, [sp, #12]
   2f252:	add	r3, pc
   2f254:	str	r3, [sp, #4]
   2f256:	movs	r3, #192	; 0xc0
   2f258:	str	r3, [sp, #0]
   2f25a:	ldr	r3, [pc, #136]	; (2f2e4 <btrfs_add_to_fsid@@Base+0x280>)
   2f25c:	ldr	r0, [r0, #0]
   2f25e:	add	r3, pc
   2f260:	blx	881c <__fprintf_chk@plt+0x4>
   2f264:	movs	r1, #16
   2f266:	mov	r0, r4
   2f268:	blx	8680 <backtrace@plt>
   2f26c:	movs	r2, #2
   2f26e:	mov	r1, r0
   2f270:	mov	r0, r4
   2f272:	blx	8990 <backtrace_symbols_fd@plt>
   2f276:	blx	8948 <abort@plt>
   2f27a:	mov	r0, r5
   2f27c:	blx	83f0 <free@plt+0x4>
   2f280:	ldr.w	r2, [r8, #352]	; 0x160
   2f284:	mov	r3, r2
   2f286:	ldr.w	r1, [r3, #72]!
   2f28a:	str	r4, [r1, #4]
   2f28c:	strd	r1, r3, [r4]
   2f290:	str	r4, [r2, #72]	; 0x48
   2f292:	ldr.w	r3, [r8, #352]	; 0x160
   2f296:	str	r3, [r4, #12]
   2f298:	ldr	r2, [pc, #76]	; (2f2e8 <btrfs_add_to_fsid@@Base+0x284>)
   2f29a:	ldr	r3, [pc, #48]	; (2f2cc <btrfs_add_to_fsid@@Base+0x268>)
   2f29c:	add	r2, pc
   2f29e:	ldr	r3, [r2, r3]
   2f2a0:	ldr	r2, [r3, #0]
   2f2a2:	ldr	r3, [sp, #124]	; 0x7c
   2f2a4:	eors	r2, r3
   2f2a6:	beq.n	2f2ba <btrfs_add_to_fsid@@Base+0x256>
   2f2a8:	blx	84cc <__stack_chk_fail@plt>
   2f2ac:	mvn.w	r9, #11
   2f2b0:	movs	r5, #0
   2f2b2:	b.n	2f16c <btrfs_add_to_fsid@@Base+0x108>
   2f2b4:	mvn.w	r9, #11
   2f2b8:	b.n	2f16c <btrfs_add_to_fsid@@Base+0x108>
   2f2ba:	mov	r0, r9
   2f2bc:	add	sp, #132	; 0x84
   2f2be:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f2c2:	nop
   2f2c4:	ldrb	r4, [r2, r4]
   2f2c6:	movs	r3, r0
   2f2c8:	ldrb	r6, [r1, r4]
   2f2ca:	movs	r3, r0
   2f2cc:	lsls	r4, r4, #8
   2f2ce:	movs	r0, r0
   2f2d0:	bics	r5, r6
   2f2d2:	movs	r2, r0
   2f2d4:	lsls	r4, r6, #8
   2f2d6:	movs	r0, r0
   2f2d8:	orrs	r3, r5
   2f2da:	movs	r2, r0
   2f2dc:	add	r0, sp, #268	; 0x10c
   2f2de:	movs	r0, r0
   2f2e0:	mvns	r2, r4
   2f2e2:	movs	r2, r0
   2f2e4:	orrs	r0, r0
   2f2e6:	movs	r2, r0
   2f2e8:	ldrh	r4, [r5, r3]
   2f2ea:	movs	r3, r0

0002f2ec <btrfs_register_one_device@@Base>:
   2f2ec:	ldr	r1, [pc, #168]	; (2f398 <btrfs_register_one_device@@Base+0xac>)
   2f2ee:	ldr	r2, [pc, #172]	; (2f39c <btrfs_register_one_device@@Base+0xb0>)
   2f2f0:	push	{r4, r5, r6, r7, lr}
   2f2f2:	add	r1, pc
   2f2f4:	sub.w	sp, sp, #4096	; 0x1000
   2f2f8:	mov	r6, r0
   2f2fa:	sub	sp, #12
   2f2fc:	ldr	r0, [pc, #160]	; (2f3a0 <btrfs_register_one_device@@Base+0xb4>)
   2f2fe:	ldr	r2, [r1, r2]
   2f300:	add.w	r3, sp, #4096	; 0x1000
   2f304:	add	r0, pc
   2f306:	movs	r1, #2
   2f308:	adds	r3, #4
   2f30a:	ldr	r2, [r2, #0]
   2f30c:	str	r2, [r3, #0]
   2f30e:	mov.w	r2, #0
   2f312:	blx	8608 <open64@plt>
   2f316:	subs	r5, r0, #0
   2f318:	bge.n	2f344 <btrfs_register_one_device@@Base+0x58>
   2f31a:	ldr	r0, [pc, #136]	; (2f3a4 <btrfs_register_one_device@@Base+0xb8>)
   2f31c:	add	r0, pc
   2f31e:	bl	17400 <__btrfs_warning@@Base>
   2f322:	blx	8740 <__errno_location@plt>
   2f326:	ldr	r4, [r0, #0]
   2f328:	negs	r4, r4
   2f32a:	ldr	r1, [pc, #124]	; (2f3a8 <btrfs_register_one_device@@Base+0xbc>)
   2f32c:	add.w	r3, sp, #4096	; 0x1000
   2f330:	ldr	r2, [pc, #104]	; (2f39c <btrfs_register_one_device@@Base+0xb0>)
   2f332:	adds	r3, #4
   2f334:	add	r1, pc
   2f336:	ldr	r2, [r1, r2]
   2f338:	ldr	r1, [r2, #0]
   2f33a:	ldr	r2, [r3, #0]
   2f33c:	eors	r1, r2
   2f33e:	beq.n	2f388 <btrfs_register_one_device@@Base+0x9c>
   2f340:	blx	84cc <__stack_chk_fail@plt>
   2f344:	mov	r4, sp
   2f346:	add	r7, sp, #8
   2f348:	mov.w	r2, #4096	; 0x1000
   2f34c:	movs	r1, #0
   2f34e:	mov	r0, r4
   2f350:	blx	8780 <memset@plt+0x4>
   2f354:	movw	r2, #4088	; 0xff8
   2f358:	mov	r1, r6
   2f35a:	mov	r0, r7
   2f35c:	bl	2fb80 <__strncpy_null@@Base>
   2f360:	mov	r2, r4
   2f362:	ldr	r1, [pc, #48]	; (2f394 <btrfs_register_one_device@@Base+0xa8>)
   2f364:	mov	r0, r5
   2f366:	blx	8578 <ioctl@plt>
   2f36a:	subs	r4, r0, #0
   2f36c:	bge.n	2f380 <btrfs_register_one_device@@Base+0x94>
   2f36e:	ldr	r0, [pc, #60]	; (2f3ac <btrfs_register_one_device@@Base+0xc0>)
   2f370:	mov	r1, r6
   2f372:	add	r0, pc
   2f374:	bl	1747c <__btrfs_error@@Base>
   2f378:	blx	8740 <__errno_location@plt>
   2f37c:	ldr	r4, [r0, #0]
   2f37e:	negs	r4, r4
   2f380:	mov	r0, r5
   2f382:	blx	8960 <close@plt>
   2f386:	b.n	2f32a <btrfs_register_one_device@@Base+0x3e>
   2f388:	mov	r0, r4
   2f38a:	add.w	sp, sp, #4096	; 0x1000
   2f38e:	add	sp, #12
   2f390:	pop	{r4, r5, r6, r7, pc}
   2f392:	nop
   2f394:	str	r4, [sp, #16]
   2f396:	str	r0, [r0, r0]
   2f398:	ldrh	r6, [r2, r2]
   2f39a:	movs	r3, r0
   2f39c:	lsls	r4, r4, #8
   2f39e:	movs	r0, r0
   2f3a0:	cmp	r1, r0
   2f3a2:	movs	r2, r0
   2f3a4:	negs	r4, r7
   2f3a6:	movs	r2, r0
   2f3a8:	ldrh	r4, [r2, r1]
   2f3aa:	movs	r3, r0
   2f3ac:	negs	r2, r5
   2f3ae:	movs	r2, r0

0002f3b0 <btrfs_register_all_devices@@Base>:
   2f3b0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2f3b4:	bl	2a784 <btrfs_scanned_uuids@@Base>
   2f3b8:	movs	r5, #0
   2f3ba:	ldr	r4, [r0, #0]
   2f3bc:	mov	r6, r0
   2f3be:	mov	r0, r5
   2f3c0:	subs	r4, #80	; 0x50
   2f3c2:	add.w	r3, r4, #80	; 0x50
   2f3c6:	cmp	r6, r3
   2f3c8:	bne.n	2f3d0 <btrfs_register_all_devices@@Base+0x20>
   2f3ca:	mov	r0, r5
   2f3cc:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2f3d0:	mov	r8, r4
   2f3d2:	ldr.w	r7, [r8, #72]!
   2f3d6:	cmp	r7, r8
   2f3d8:	bne.n	2f3e0 <btrfs_register_all_devices@@Base+0x30>
   2f3da:	ldr	r4, [r4, #80]	; 0x50
   2f3dc:	subs	r4, #80	; 0x50
   2f3de:	b.n	2f3c2 <btrfs_register_all_devices@@Base+0x12>
   2f3e0:	ldr	r3, [r7, #32]
   2f3e2:	ldrb	r2, [r3, #0]
   2f3e4:	cbz	r2, 2f3ec <btrfs_register_all_devices@@Base+0x3c>
   2f3e6:	mov	r0, r3
   2f3e8:	bl	2f2ec <btrfs_register_one_device@@Base>
   2f3ec:	cbz	r0, 2f3f0 <btrfs_register_all_devices@@Base+0x40>
   2f3ee:	adds	r5, #1
   2f3f0:	ldr	r7, [r7, #0]
   2f3f2:	b.n	2f3d6 <btrfs_register_all_devices@@Base+0x26>

0002f3f4 <btrfs_device_already_in_root@@Base>:
   2f3f4:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   2f3f6:	mov	r6, r0
   2f3f8:	mov.w	r0, #4096	; 0x1000
   2f3fc:	mov	r7, r1
   2f3fe:	mov	r4, r2
   2f400:	blx	8634 <malloc@plt+0x4>
   2f404:	mov	r5, r0
   2f406:	cbz	r0, 2f46e <btrfs_device_already_in_root@@Base+0x7a>
   2f408:	asrs	r3, r4, #31
   2f40a:	mov	r2, r4
   2f40c:	mov	r1, r0
   2f40e:	strd	r2, r3, [sp]
   2f412:	mov	r0, r7
   2f414:	mov.w	r2, #4096	; 0x1000
   2f418:	blx	85cc <pread64@plt>
   2f41c:	cmp.w	r0, #4096	; 0x1000
   2f420:	mov	r4, r0
   2f422:	bne.n	2f45e <btrfs_device_already_in_root@@Base+0x6a>
   2f424:	ldrd	r2, r3, [r5, #64]	; 0x40
   2f428:	add	r1, pc, #76	; (adr r1, 2f478 <btrfs_device_already_in_root@@Base+0x84>)
   2f42a:	ldrd	r0, r1, [r1]
   2f42e:	cmp	r3, r1
   2f430:	it	eq
   2f432:	cmpeq	r2, r0
   2f434:	beq.n	2f444 <btrfs_device_already_in_root@@Base+0x50>
   2f436:	add	r1, pc, #72	; (adr r1, 2f480 <btrfs_device_already_in_root@@Base+0x8c>)
   2f438:	ldrd	r0, r1, [r1]
   2f43c:	cmp	r3, r1
   2f43e:	it	eq
   2f440:	cmpeq	r2, r0
   2f442:	bne.n	2f46a <btrfs_device_already_in_root@@Base+0x76>
   2f444:	ldr.w	r3, [r6, #464]	; 0x1d0
   2f448:	add.w	r0, r5, #32
   2f44c:	movs	r2, #16
   2f44e:	ldr.w	r1, [r3, #308]	; 0x134
   2f452:	adds	r1, #32
   2f454:	blx	8464 <memcmp@plt+0x4>
   2f458:	clz	r4, r0
   2f45c:	lsrs	r4, r4, #5
   2f45e:	mov	r0, r5
   2f460:	blx	83f0 <free@plt+0x4>
   2f464:	mov	r0, r4
   2f466:	add	sp, #12
   2f468:	pop	{r4, r5, r6, r7, pc}
   2f46a:	movs	r4, #0
   2f46c:	b.n	2f45e <btrfs_device_already_in_root@@Base+0x6a>
   2f46e:	mvn.w	r4, #11
   2f472:	b.n	2f464 <btrfs_device_already_in_root@@Base+0x70>
   2f474:	nop.w
   2f478:	negs	r7, r3
   2f47a:	strh	r0, [r1, r1]
   2f47c:	strh	r6, [r4, r5]
   2f47e:	ldr	r5, [pc, #380]	; (2f5fc <btrfs_scan_devices@@Base+0xb4>)
   2f480:	tst	r1, r4
   2f482:	strh	r0, [r1, r1]
   2f484:	strh	r6, [r4, r5]
   2f486:	ldr	r5, [pc, #380]	; (2f604 <btrfs_scan_devices@@Base+0xbc>)

0002f488 <is_seen_fsid@@Base>:
   2f488:	push	{r3, r4, r5, lr}
   2f48a:	mov	r5, r0
   2f48c:	ldrb	r3, [r0, #0]
   2f48e:	ldr.w	r4, [r1, r3, lsl #2]
   2f492:	cbnz	r4, 2f498 <is_seen_fsid@@Base+0x10>
   2f494:	mov	r0, r4
   2f496:	pop	{r3, r4, r5, pc}
   2f498:	movs	r2, #16
   2f49a:	mov	r1, r5
   2f49c:	mov	r0, r4
   2f49e:	blx	8464 <memcmp@plt+0x4>
   2f4a2:	cbz	r0, 2f4a8 <is_seen_fsid@@Base+0x20>
   2f4a4:	ldr	r4, [r4, #16]
   2f4a6:	b.n	2f492 <is_seen_fsid@@Base+0xa>
   2f4a8:	movs	r0, #1
   2f4aa:	b.n	2f496 <is_seen_fsid@@Base+0xe>

0002f4ac <add_seen_fsid@@Base>:
   2f4ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   2f4b0:	mov	r5, r0
   2f4b2:	ldrb.w	sl, [r0]
   2f4b6:	mov	r7, r1
   2f4b8:	mov	r9, r2
   2f4ba:	mov	r8, r3
   2f4bc:	ldr.w	r4, [r1, sl, lsl #2]
   2f4c0:	cbnz	r4, 2f4f8 <add_seen_fsid@@Base+0x4c>
   2f4c2:	movs	r0, #28
   2f4c4:	blx	8634 <malloc@plt+0x4>
   2f4c8:	mov	r6, r0
   2f4ca:	cbz	r0, 2f518 <add_seen_fsid@@Base+0x6c>
   2f4cc:	add.w	ip, r5, #16
   2f4d0:	mov	r2, r0
   2f4d2:	movs	r3, #0
   2f4d4:	str	r3, [r0, #16]
   2f4d6:	ldr	r0, [r5, #0]
   2f4d8:	adds	r5, #8
   2f4da:	ldr.w	r1, [r5, #-4]
   2f4de:	cmp	r5, ip
   2f4e0:	mov	r3, r2
   2f4e2:	stmia	r3!, {r0, r1}
   2f4e4:	mov	r2, r3
   2f4e6:	bne.n	2f4d6 <add_seen_fsid@@Base+0x2a>
   2f4e8:	strd	r8, r9, [r6, #20]
   2f4ec:	cbz	r4, 2f50c <add_seen_fsid@@Base+0x60>
   2f4ee:	str	r6, [r4, #16]
   2f4f0:	movs	r0, #0
   2f4f2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   2f4f6:	mov	r4, r3
   2f4f8:	movs	r2, #16
   2f4fa:	mov	r1, r5
   2f4fc:	mov	r0, r4
   2f4fe:	blx	8464 <memcmp@plt+0x4>
   2f502:	cbz	r0, 2f512 <add_seen_fsid@@Base+0x66>
   2f504:	ldr	r3, [r4, #16]
   2f506:	cmp	r3, #0
   2f508:	bne.n	2f4f6 <add_seen_fsid@@Base+0x4a>
   2f50a:	b.n	2f4c2 <add_seen_fsid@@Base+0x16>
   2f50c:	str.w	r6, [r7, sl, lsl #2]
   2f510:	b.n	2f4f0 <add_seen_fsid@@Base+0x44>
   2f512:	mvn.w	r0, #16
   2f516:	b.n	2f4f2 <add_seen_fsid@@Base+0x46>
   2f518:	mvn.w	r0, #11
   2f51c:	b.n	2f4f2 <add_seen_fsid@@Base+0x46>

0002f51e <free_seen_fsid@@Base>:
   2f51e:	push	{r3, r4, r5, r6, r7, lr}
   2f520:	subs	r6, r0, #4
   2f522:	add.w	r5, r0, #1020	; 0x3fc
   2f526:	ldr.w	r4, [r6, #4]!
   2f52a:	cbnz	r4, 2f534 <free_seen_fsid@@Base+0x16>
   2f52c:	cmp	r6, r5
   2f52e:	str	r4, [r6, #0]
   2f530:	bne.n	2f526 <free_seen_fsid@@Base+0x8>
   2f532:	pop	{r3, r4, r5, r6, r7, pc}
   2f534:	ldrd	r7, r1, [r4, #16]
   2f538:	ldr	r0, [r4, #24]
   2f53a:	bl	30d60 <close_file_or_dir@@Base>
   2f53e:	mov	r0, r4
   2f540:	blx	83f0 <free@plt+0x4>
   2f544:	mov	r4, r7
   2f546:	b.n	2f52a <free_seen_fsid@@Base+0xc>

0002f548 <btrfs_scan_devices@@Base>:
   2f548:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f54c:	vpush	{d8}
   2f550:	ldr	r1, [pc, #324]	; (2f698 <btrfs_scan_devices@@Base+0x150>)
   2f552:	ldr	r2, [pc, #328]	; (2f69c <btrfs_scan_devices@@Base+0x154>)
   2f554:	add	r1, pc
   2f556:	sub.w	sp, sp, #4128	; 0x1020
   2f55a:	sub	sp, #20
   2f55c:	ldr	r2, [r1, r2]
   2f55e:	add.w	r3, sp, #4128	; 0x1020
   2f562:	add	r4, sp, #48	; 0x30
   2f564:	ldr	r2, [r2, #0]
   2f566:	str	r2, [r3, #12]
   2f568:	mov.w	r2, #0
   2f56c:	ldr	r2, [pc, #304]	; (2f6a0 <btrfs_scan_devices@@Base+0x158>)
   2f56e:	adds	r3, #12
   2f570:	sub.w	sl, r4, #20
   2f574:	add	r2, pc
   2f576:	movs	r3, #0
   2f578:	str.w	r3, [r4, #-24]
   2f57c:	ldr	r5, [r2, #0]
   2f57e:	str.w	r3, [r4, #-20]
   2f582:	cmp	r5, #0
   2f584:	bne.n	2f684 <btrfs_scan_devices@@Base+0x13c>
   2f586:	mov	r1, r5
   2f588:	mov	r0, sl
   2f58a:	blx	8920 <blkid_get_cache@plt>
   2f58e:	subs	r6, r0, #0
   2f590:	bge.n	2f5be <btrfs_scan_devices@@Base+0x76>
   2f592:	blx	8740 <__errno_location@plt>
   2f596:	negs	r3, r6
   2f598:	mov	r5, r6
   2f59a:	str	r3, [r0, #0]
   2f59c:	ldr	r0, [pc, #260]	; (2f6a4 <btrfs_scan_devices@@Base+0x15c>)
   2f59e:	add	r0, pc
   2f5a0:	bl	1747c <__btrfs_error@@Base>
   2f5a4:	ldr	r1, [pc, #256]	; (2f6a8 <btrfs_scan_devices@@Base+0x160>)
   2f5a6:	add.w	r3, sp, #4128	; 0x1020
   2f5aa:	ldr	r2, [pc, #240]	; (2f69c <btrfs_scan_devices@@Base+0x154>)
   2f5ac:	adds	r3, #12
   2f5ae:	add	r1, pc
   2f5b0:	ldr	r2, [r1, r2]
   2f5b2:	ldr	r1, [r2, #0]
   2f5b4:	ldr	r2, [r3, #0]
   2f5b6:	eors	r1, r2
   2f5b8:	beq.n	2f688 <btrfs_scan_devices@@Base+0x140>
   2f5ba:	blx	84cc <__stack_chk_fail@plt>
   2f5be:	ldr.w	r0, [sl]
   2f5c2:	blx	896c <blkid_probe_all@plt>
   2f5c6:	ldr.w	r0, [sl]
   2f5ca:	blx	84d8 <blkid_dev_iterate_begin@plt>
   2f5ce:	ldr	r2, [pc, #220]	; (2f6ac <btrfs_scan_devices@@Base+0x164>)
   2f5d0:	ldr	r1, [pc, #220]	; (2f6b0 <btrfs_scan_devices@@Base+0x168>)
   2f5d2:	add	r2, pc
   2f5d4:	ldr.w	fp, [pc, #220]	; 2f6b4 <btrfs_scan_devices@@Base+0x16c>
   2f5d8:	add	r1, pc
   2f5da:	add	fp, pc
   2f5dc:	mov	r9, r0
   2f5de:	blx	8540 <blkid_dev_set_search@plt>
   2f5e2:	ldr	r3, [pc, #212]	; (2f6b8 <btrfs_scan_devices@@Base+0x170>)
   2f5e4:	add	r3, pc
   2f5e6:	vmov	s16, r3
   2f5ea:	sub.w	r7, r4, #24
   2f5ee:	mov	r1, r7
   2f5f0:	mov	r0, r9
   2f5f2:	blx	868c <blkid_dev_next@plt>
   2f5f6:	mov	r6, r0
   2f5f8:	cbz	r0, 2f612 <btrfs_scan_devices@@Base+0xca>
   2f5fa:	mov	r0, r9
   2f5fc:	blx	87d8 <blkid_dev_iterate_end@plt>
   2f600:	ldr.w	r0, [r4, #-20]
   2f604:	blx	848c <blkid_put_cache@plt>
   2f608:	ldr	r3, [pc, #176]	; (2f6bc <btrfs_scan_devices@@Base+0x174>)
   2f60a:	movs	r2, #1
   2f60c:	add	r3, pc
   2f60e:	str	r2, [r3, #0]
   2f610:	b.n	2f5a4 <btrfs_scan_devices@@Base+0x5c>
   2f612:	ldr	r1, [r7, #0]
   2f614:	ldr.w	r0, [sl]
   2f618:	blx	8698 <blkid_verify@plt>
   2f61c:	str	r0, [r7, #0]
   2f61e:	cmp	r0, #0
   2f620:	beq.n	2f5ee <btrfs_scan_devices@@Base+0xa6>
   2f622:	blx	88d4 <blkid_dev_devname@plt>
   2f626:	sub.w	r8, r4, #4
   2f62a:	mov.w	r2, #4096	; 0x1000
   2f62e:	mov	r1, r0
   2f630:	mov	r0, r8
   2f632:	bl	2fb80 <__strncpy_null@@Base>
   2f636:	mov	r1, r6
   2f638:	mov	r0, r8
   2f63a:	blx	8608 <open64@plt>
   2f63e:	subs	r7, r0, #0
   2f640:	bge.n	2f64c <btrfs_scan_devices@@Base+0x104>
   2f642:	mov	r1, r8
   2f644:	mov	r0, fp
   2f646:	bl	1747c <__btrfs_error@@Base>
   2f64a:	b.n	2f5ea <btrfs_scan_devices@@Base+0xa2>
   2f64c:	mov.w	r2, #65536	; 0x10000
   2f650:	movs	r3, #0
   2f652:	str	r6, [sp, #8]
   2f654:	mov	r1, r8
   2f656:	strd	r2, r3, [sp]
   2f65a:	sub.w	r3, r4, #16
   2f65e:	sub.w	r2, r4, #28
   2f662:	bl	280ec <btrfs_scan_one_device@@Base>
   2f666:	mov	r6, r0
   2f668:	cbz	r0, 2f67c <btrfs_scan_devices@@Base+0x134>
   2f66a:	blx	8740 <__errno_location@plt>
   2f66e:	negs	r6, r6
   2f670:	mov	r1, r8
   2f672:	str	r6, [r0, #0]
   2f674:	vmov	r0, s16
   2f678:	bl	1747c <__btrfs_error@@Base>
   2f67c:	mov	r0, r7
   2f67e:	blx	8960 <close@plt>
   2f682:	b.n	2f5ea <btrfs_scan_devices@@Base+0xa2>
   2f684:	mov	r5, r3
   2f686:	b.n	2f5a4 <btrfs_scan_devices@@Base+0x5c>
   2f688:	mov	r0, r5
   2f68a:	add.w	sp, sp, #4128	; 0x1020
   2f68e:	add	sp, #20
   2f690:	vpop	{d8}
   2f694:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f698:	ldr	r4, [r6, r0]
   2f69a:	movs	r3, r0
   2f69c:	lsls	r4, r4, #8
   2f69e:	movs	r0, r0
   2f6a0:	ldr	r4, [r0, #80]	; 0x50
   2f6a2:	movs	r3, r0
   2f6a4:	eors	r5, r3
   2f6a6:	movs	r2, r0
   2f6a8:	ldrsb	r2, [r3, r7]
   2f6aa:	movs	r3, r0
   2f6ac:	eors	r4, r0
   2f6ae:	movs	r2, r0
   2f6b0:	eors	r4, r0
   2f6b2:	movs	r2, r0
   2f6b4:	add	r5, pc, #580	; (adr r5, 2f8fc <btrfs_scan_devices@@Base+0x3b4>)
   2f6b6:	movs	r0, r0
   2f6b8:	ands	r5, r7
   2f6ba:	movs	r2, r0
   2f6bc:	ldr	r4, [r5, #68]	; 0x44
   2f6be:	movs	r3, r0
   2f6c0:	ldr	r2, [pc, #100]	; (2f728 <btrfs_scan_devices@@Base+0x1e0>)
   2f6c2:	ldr	r3, [pc, #104]	; (2f72c <btrfs_scan_devices@@Base+0x1e4>)
   2f6c4:	add	r2, pc
   2f6c6:	push	{lr}
   2f6c8:	sub	sp, #116	; 0x74
   2f6ca:	ldr	r3, [r2, r3]
   2f6cc:	mov	r1, sp
   2f6ce:	ldr	r3, [r3, #0]
   2f6d0:	str	r3, [sp, #108]	; 0x6c
   2f6d2:	mov.w	r3, #0
   2f6d6:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   2f6da:	cmp	r0, #0
   2f6dc:	bge.n	2f6fa <btrfs_scan_devices@@Base+0x1b2>
   2f6de:	blx	8740 <__errno_location@plt>
   2f6e2:	ldr	r0, [r0, #0]
   2f6e4:	negs	r0, r0
   2f6e6:	ldr	r2, [pc, #72]	; (2f730 <btrfs_scan_devices@@Base+0x1e8>)
   2f6e8:	ldr	r3, [pc, #64]	; (2f72c <btrfs_scan_devices@@Base+0x1e4>)
   2f6ea:	add	r2, pc
   2f6ec:	ldr	r3, [r2, r3]
   2f6ee:	ldr	r2, [r3, #0]
   2f6f0:	ldr	r3, [sp, #108]	; 0x6c
   2f6f2:	eors	r2, r3
   2f6f4:	beq.n	2f722 <btrfs_scan_devices@@Base+0x1da>
   2f6f6:	blx	84cc <__stack_chk_fail@plt>
   2f6fa:	ldr	r3, [sp, #16]
   2f6fc:	and.w	r3, r3, #61440	; 0xf000
   2f700:	cmp.w	r3, #24576	; 0x6000
   2f704:	bne.n	2f71e <btrfs_scan_devices@@Base+0x1d6>
   2f706:	ldrd	r0, r1, [sp, #32]
   2f70a:	lsrs	r2, r0, #8
   2f70c:	lsrs	r3, r1, #8
   2f70e:	orr.w	r2, r2, r1, lsl #24
   2f712:	cmp	r3, #0
   2f714:	itte	eq
   2f716:	cmpeq	r2, #7
   2f718:	moveq	r0, #1
   2f71a:	movne	r0, #0
   2f71c:	b.n	2f6e6 <btrfs_scan_devices@@Base+0x19e>
   2f71e:	movs	r0, #0
   2f720:	b.n	2f6e6 <btrfs_scan_devices@@Base+0x19e>
   2f722:	add	sp, #116	; 0x74
   2f724:	ldr.w	pc, [sp], #4
   2f728:	ldrsb	r4, [r0, r3]
   2f72a:	movs	r3, r0
   2f72c:	lsls	r4, r4, #8
   2f72e:	movs	r0, r0
   2f730:	ldrsb	r6, [r3, r2]
   2f732:	movs	r3, r0
   2f734:	ldr	r1, [pc, #192]	; (2f7f8 <btrfs_scan_devices@@Base+0x2b0>)
   2f736:	ldr	r2, [pc, #196]	; (2f7fc <btrfs_scan_devices@@Base+0x2b4>)
   2f738:	push	{r4, r5, r6, r7, lr}
   2f73a:	add	r1, pc
   2f73c:	sub.w	sp, sp, #8192	; 0x2000
   2f740:	sub	sp, #20
   2f742:	ldr	r2, [r1, r2]
   2f744:	add.w	r3, sp, #8192	; 0x2000
   2f748:	add	r5, sp, #12
   2f74a:	ldr	r2, [r2, #0]
   2f74c:	str	r2, [r3, #12]
   2f74e:	mov.w	r2, #0
   2f752:	adds	r3, #12
   2f754:	ldr	r3, [pc, #168]	; (2f800 <btrfs_scan_devices@@Base+0x2b8>)
   2f756:	movs	r2, #1
   2f758:	str	r0, [sp, #4]
   2f75a:	mov	r0, r5
   2f75c:	add	r3, pc
   2f75e:	str	r3, [sp, #0]
   2f760:	mov.w	r3, #4096	; 0x1000
   2f764:	mov	r1, r3
   2f766:	blx	8984 <__snprintf_chk@plt>
   2f76a:	ldr	r1, [pc, #152]	; (2f804 <btrfs_scan_devices@@Base+0x2bc>)
   2f76c:	mov	r0, r5
   2f76e:	add	r1, pc
   2f770:	blx	88e0 <fopen64@plt>
   2f774:	mov	r4, r0
   2f776:	cbz	r0, 2f796 <btrfs_scan_devices@@Base+0x24e>
   2f778:	add.w	r6, sp, #4096	; 0x1000
   2f77c:	mov	r2, r0
   2f77e:	adds	r6, #12
   2f780:	mov.w	r1, #4096	; 0x1000
   2f784:	mov	r0, r6
   2f786:	blx	83fc <fgets@plt>
   2f78a:	cbnz	r0, 2f7b0 <btrfs_scan_devices@@Base+0x268>
   2f78c:	movs	r5, #0
   2f78e:	mov	r0, r4
   2f790:	mov	r4, r5
   2f792:	blx	8834 <fclose@plt>
   2f796:	ldr	r1, [pc, #112]	; (2f808 <btrfs_scan_devices@@Base+0x2c0>)
   2f798:	add.w	r3, sp, #8192	; 0x2000
   2f79c:	ldr	r2, [pc, #92]	; (2f7fc <btrfs_scan_devices@@Base+0x2b4>)
   2f79e:	adds	r3, #12
   2f7a0:	add	r1, pc
   2f7a2:	ldr	r2, [r1, r2]
   2f7a4:	ldr	r1, [r2, #0]
   2f7a6:	ldr	r2, [r3, #0]
   2f7a8:	eors	r1, r2
   2f7aa:	beq.n	2f7ee <btrfs_scan_devices@@Base+0x2a6>
   2f7ac:	blx	84cc <__stack_chk_fail@plt>
   2f7b0:	mov	r0, r6
   2f7b2:	blx	8704 <strlen@plt>
   2f7b6:	cmp	r0, #1
   2f7b8:	bls.n	2f78c <btrfs_scan_devices@@Base+0x244>
   2f7ba:	add	r0, r6
   2f7bc:	ldr	r3, [pc, #76]	; (2f80c <btrfs_scan_devices@@Base+0x2c4>)
   2f7be:	movs	r7, #0
   2f7c0:	movs	r2, #1
   2f7c2:	strb.w	r7, [r0, #-1]
   2f7c6:	add	r3, pc
   2f7c8:	str	r3, [sp, #0]
   2f7ca:	mov.w	r3, #4096	; 0x1000
   2f7ce:	mov	r1, r3
   2f7d0:	mov	r0, r5
   2f7d2:	str	r6, [sp, #4]
   2f7d4:	blx	8984 <__snprintf_chk@plt>
   2f7d8:	mov	r1, r7
   2f7da:	mov	r0, r5
   2f7dc:	blx	8828 <access@plt>
   2f7e0:	cmp	r0, #0
   2f7e2:	bne.n	2f78c <btrfs_scan_devices@@Base+0x244>
   2f7e4:	mov	r0, r5
   2f7e6:	blx	84b4 <strdup@plt+0x4>
   2f7ea:	mov	r5, r0
   2f7ec:	b.n	2f78e <btrfs_scan_devices@@Base+0x246>
   2f7ee:	mov	r0, r4
   2f7f0:	add.w	sp, sp, #8192	; 0x2000
   2f7f4:	add	sp, #20
   2f7f6:	pop	{r4, r5, r6, r7, pc}
   2f7f8:	ldrsb	r6, [r1, r1]
   2f7fa:	movs	r3, r0
   2f7fc:	lsls	r4, r4, #8
   2f7fe:	movs	r0, r0
   2f800:	subs	r6, #234	; 0xea
   2f802:	movs	r2, r0
   2f804:	eors.w	r0, r3, #8388608	; 0x800000
   2f808:	strb	r0, [r5, r7]
   2f80a:	movs	r3, r0
   2f80c:	subs	r6, #150	; 0x96
   2f80e:	movs	r2, r0
   2f810:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   2f814:	mov	r8, r1
   2f816:	ldr	r1, [pc, #284]	; (2f934 <btrfs_scan_devices@@Base+0x3ec>)
   2f818:	sub.w	sp, sp, #8448	; 0x2100
   2f81c:	ldr	r2, [pc, #280]	; (2f938 <btrfs_scan_devices@@Base+0x3f0>)
   2f81e:	sub	sp, #12
   2f820:	add	r1, pc
   2f822:	add.w	r4, sp, #4352	; 0x1100
   2f826:	add.w	r3, sp, #8448	; 0x2100
   2f82a:	adds	r4, #4
   2f82c:	ldr	r2, [r1, r2]
   2f82e:	adds	r3, #4
   2f830:	mov	r1, r4
   2f832:	mov	r9, r0
   2f834:	ldr	r2, [r2, #0]
   2f836:	str	r2, [r3, #0]
   2f838:	mov.w	r2, #0
   2f83c:	mov.w	r2, #4096	; 0x1000
   2f840:	blx	859c <__realpath_chk@plt>
   2f844:	cbnz	r0, 2f84e <btrfs_scan_devices@@Base+0x306>
   2f846:	blx	8740 <__errno_location@plt>
   2f84a:	ldr	r6, [r0, #0]
   2f84c:	b.n	2f89e <btrfs_scan_devices@@Base+0x356>
   2f84e:	movs	r1, #47	; 0x2f
   2f850:	mov	r0, r4
   2f852:	blx	8864 <strrchr@plt>
   2f856:	add	r4, sp, #264	; 0x108
   2f858:	ldr	r3, [pc, #224]	; (2f93c <btrfs_scan_devices@@Base+0x3f4>)
   2f85a:	subs	r5, r4, #4
   2f85c:	movs	r2, #1
   2f85e:	add	r3, pc
   2f860:	str	r3, [sp, #0]
   2f862:	mov.w	r3, #4096	; 0x1000
   2f866:	mov	r1, r3
   2f868:	str	r0, [sp, #4]
   2f86a:	mov	r0, r5
   2f86c:	blx	8984 <__snprintf_chk@plt>
   2f870:	ldr	r1, [pc, #204]	; (2f940 <btrfs_scan_devices@@Base+0x3f8>)
   2f872:	mov	r0, r5
   2f874:	add	r1, pc
   2f876:	blx	88e0 <fopen64@plt>
   2f87a:	mov	r7, r0
   2f87c:	cmp	r0, #0
   2f87e:	bne.n	2f8f4 <btrfs_scan_devices@@Base+0x3ac>
   2f880:	blx	8740 <__errno_location@plt>
   2f884:	ldr	r6, [r0, #0]
   2f886:	mov	r5, r0
   2f888:	cmp	r6, #2
   2f88a:	bne.n	2f89e <btrfs_scan_devices@@Base+0x356>
   2f88c:	mov	r0, r9
   2f88e:	mov.w	r1, #2048	; 0x800
   2f892:	blx	8608 <open64@plt>
   2f896:	subs.w	r9, r0, #0
   2f89a:	bge.n	2f8a2 <btrfs_scan_devices@@Base+0x35a>
   2f89c:	ldr	r6, [r5, #0]
   2f89e:	negs	r6, r6
   2f8a0:	b.n	2f8bc <btrfs_scan_devices@@Base+0x374>
   2f8a2:	add	r4, sp, #8
   2f8a4:	movw	r1, #19461	; 0x4c05
   2f8a8:	mov	r2, r4
   2f8aa:	blx	8578 <ioctl@plt>
   2f8ae:	subs	r6, r0, #0
   2f8b0:	bge.n	2f8d6 <btrfs_scan_devices@@Base+0x38e>
   2f8b2:	ldr	r6, [r5, #0]
   2f8b4:	negs	r6, r6
   2f8b6:	mov	r0, r9
   2f8b8:	blx	8960 <close@plt>
   2f8bc:	ldr	r1, [pc, #132]	; (2f944 <btrfs_scan_devices@@Base+0x3fc>)
   2f8be:	add.w	r3, sp, #8448	; 0x2100
   2f8c2:	ldr	r2, [pc, #116]	; (2f938 <btrfs_scan_devices@@Base+0x3f0>)
   2f8c4:	adds	r3, #4
   2f8c6:	add	r1, pc
   2f8c8:	ldr	r2, [r1, r2]
   2f8ca:	ldr	r1, [r2, #0]
   2f8cc:	ldr	r2, [r3, #0]
   2f8ce:	eors	r1, r2
   2f8d0:	beq.n	2f928 <btrfs_scan_devices@@Base+0x3e0>
   2f8d2:	blx	84cc <__stack_chk_fail@plt>
   2f8d6:	adds	r4, #56	; 0x38
   2f8d8:	mov	r5, r8
   2f8da:	ldmia	r4!, {r0, r1, r2, r3}
   2f8dc:	stmia	r5!, {r0, r1, r2, r3}
   2f8de:	ldmia	r4!, {r0, r1, r2, r3}
   2f8e0:	stmia	r5!, {r0, r1, r2, r3}
   2f8e2:	ldmia	r4!, {r0, r1, r2, r3}
   2f8e4:	stmia	r5!, {r0, r1, r2, r3}
   2f8e6:	ldmia.w	r4, {r0, r1, r2, r3}
   2f8ea:	stmia.w	r5, {r0, r1, r2, r3}
   2f8ee:	strb.w	r7, [r8, #64]	; 0x40
   2f8f2:	b.n	2f8b6 <btrfs_scan_devices@@Base+0x36e>
   2f8f4:	movw	r3, #4095	; 0xfff
   2f8f8:	str	r3, [sp, #4]
   2f8fa:	ldr	r3, [pc, #76]	; (2f948 <btrfs_scan_devices@@Base+0x400>)
   2f8fc:	subs	r4, #24
   2f8fe:	movs	r2, #1
   2f900:	add	r3, pc
   2f902:	str	r3, [sp, #0]
   2f904:	movs	r3, #20
   2f906:	mov	r0, r4
   2f908:	mov	r1, r3
   2f90a:	blx	8984 <__snprintf_chk@plt>
   2f90e:	mov	r1, r4
   2f910:	mov	r2, r8
   2f912:	mov	r0, r7
   2f914:	blx	87b4 <fscanf@plt>
   2f918:	mov	r4, r0
   2f91a:	mov	r0, r7
   2f91c:	blx	8834 <fclose@plt>
   2f920:	adds	r4, #1
   2f922:	beq.n	2f846 <btrfs_scan_devices@@Base+0x2fe>
   2f924:	movs	r6, #0
   2f926:	b.n	2f8bc <btrfs_scan_devices@@Base+0x374>
   2f928:	mov	r0, r6
   2f92a:	add.w	sp, sp, #8448	; 0x2100
   2f92e:	add	sp, #12
   2f930:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   2f934:	strb	r0, [r5, r5]
   2f936:	movs	r3, r0
   2f938:	lsls	r4, r4, #8
   2f93a:	movs	r0, r0
   2f93c:	subs	r6, #13
   2f93e:	movs	r2, r0
   2f940:	usat	r0, #0, sp
   2f944:	strb	r2, [r0, r3]
   2f946:	movs	r3, r0
   2f948:	subs	r5, #139	; 0x8b
   2f94a:	movs	r2, r0

0002f94c <path_is_block_device@@Base>:
   2f94c:	ldr	r2, [pc, #76]	; (2f99c <path_is_block_device@@Base+0x50>)
   2f94e:	ldr	r3, [pc, #80]	; (2f9a0 <path_is_block_device@@Base+0x54>)
   2f950:	add	r2, pc
   2f952:	push	{lr}
   2f954:	sub	sp, #116	; 0x74
   2f956:	ldr	r3, [r2, r3]
   2f958:	mov	r1, sp
   2f95a:	ldr	r3, [r3, #0]
   2f95c:	str	r3, [sp, #108]	; 0x6c
   2f95e:	mov.w	r3, #0
   2f962:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   2f966:	cmp	r0, #0
   2f968:	bge.n	2f986 <path_is_block_device@@Base+0x3a>
   2f96a:	blx	8740 <__errno_location@plt>
   2f96e:	ldr	r0, [r0, #0]
   2f970:	negs	r0, r0
   2f972:	ldr	r2, [pc, #48]	; (2f9a4 <path_is_block_device@@Base+0x58>)
   2f974:	ldr	r3, [pc, #40]	; (2f9a0 <path_is_block_device@@Base+0x54>)
   2f976:	add	r2, pc
   2f978:	ldr	r3, [r2, r3]
   2f97a:	ldr	r2, [r3, #0]
   2f97c:	ldr	r3, [sp, #108]	; 0x6c
   2f97e:	eors	r2, r3
   2f980:	beq.n	2f996 <path_is_block_device@@Base+0x4a>
   2f982:	blx	84cc <__stack_chk_fail@plt>
   2f986:	ldr	r0, [sp, #16]
   2f988:	and.w	r0, r0, #61440	; 0xf000
   2f98c:	sub.w	r3, r0, #24576	; 0x6000
   2f990:	negs	r0, r3
   2f992:	adcs	r0, r3
   2f994:	b.n	2f972 <path_is_block_device@@Base+0x26>
   2f996:	add	sp, #116	; 0x74
   2f998:	ldr.w	pc, [sp], #4
   2f99c:	strb	r0, [r7, r0]
   2f99e:	movs	r3, r0
   2f9a0:	lsls	r4, r4, #8
   2f9a2:	movs	r0, r0
   2f9a4:	strb	r2, [r2, r0]
   2f9a6:	movs	r3, r0

0002f9a8 <path_is_mount_point@@Base>:
   2f9a8:	push	{r4, r5, r6, lr}
   2f9aa:	mov	r6, r0
   2f9ac:	ldr	r1, [pc, #56]	; (2f9e8 <path_is_mount_point@@Base+0x40>)
   2f9ae:	ldr	r0, [pc, #60]	; (2f9ec <path_is_mount_point@@Base+0x44>)
   2f9b0:	add	r1, pc
   2f9b2:	add	r0, pc
   2f9b4:	blx	88ec <setmntent@plt>
   2f9b8:	mov	r5, r0
   2f9ba:	cbnz	r0, 2f9cc <path_is_mount_point@@Base+0x24>
   2f9bc:	mov.w	r4, #4294967295	; 0xffffffff
   2f9c0:	b.n	2f9de <path_is_mount_point@@Base+0x36>
   2f9c2:	ldr	r0, [r4, #4]
   2f9c4:	mov	r1, r6
   2f9c6:	blx	837c <strcmp@plt>
   2f9ca:	cbz	r0, 2f9e2 <path_is_mount_point@@Base+0x3a>
   2f9cc:	mov	r0, r5
   2f9ce:	blx	85f0 <getmntent@plt>
   2f9d2:	mov	r4, r0
   2f9d4:	cmp	r0, #0
   2f9d6:	bne.n	2f9c2 <path_is_mount_point@@Base+0x1a>
   2f9d8:	mov	r0, r5
   2f9da:	blx	8840 <endmntent@plt>
   2f9de:	mov	r0, r4
   2f9e0:	pop	{r4, r5, r6, pc}
   2f9e2:	movs	r4, #1
   2f9e4:	b.n	2f9d8 <path_is_mount_point@@Base+0x30>
   2f9e6:	nop
   2f9e8:			; <UNDEFINED> instruction: 0xf2510000
   2f9ec:	subs	r4, #226	; 0xe2
   2f9ee:	movs	r2, r0

0002f9f0 <path_is_reg_file@@Base>:
   2f9f0:	ldr	r2, [pc, #76]	; (2fa40 <path_is_reg_file@@Base+0x50>)
   2f9f2:	ldr	r3, [pc, #80]	; (2fa44 <path_is_reg_file@@Base+0x54>)
   2f9f4:	add	r2, pc
   2f9f6:	push	{lr}
   2f9f8:	sub	sp, #116	; 0x74
   2f9fa:	ldr	r3, [r2, r3]
   2f9fc:	mov	r1, sp
   2f9fe:	ldr	r3, [r3, #0]
   2fa00:	str	r3, [sp, #108]	; 0x6c
   2fa02:	mov.w	r3, #0
   2fa06:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   2fa0a:	cmp	r0, #0
   2fa0c:	bge.n	2fa2a <path_is_reg_file@@Base+0x3a>
   2fa0e:	blx	8740 <__errno_location@plt>
   2fa12:	ldr	r0, [r0, #0]
   2fa14:	negs	r0, r0
   2fa16:	ldr	r2, [pc, #48]	; (2fa48 <path_is_reg_file@@Base+0x58>)
   2fa18:	ldr	r3, [pc, #40]	; (2fa44 <path_is_reg_file@@Base+0x54>)
   2fa1a:	add	r2, pc
   2fa1c:	ldr	r3, [r2, r3]
   2fa1e:	ldr	r2, [r3, #0]
   2fa20:	ldr	r3, [sp, #108]	; 0x6c
   2fa22:	eors	r2, r3
   2fa24:	beq.n	2fa3a <path_is_reg_file@@Base+0x4a>
   2fa26:	blx	84cc <__stack_chk_fail@plt>
   2fa2a:	ldr	r0, [sp, #16]
   2fa2c:	and.w	r0, r0, #61440	; 0xf000
   2fa30:	sub.w	r3, r0, #32768	; 0x8000
   2fa34:	negs	r0, r3
   2fa36:	adcs	r0, r3
   2fa38:	b.n	2fa16 <path_is_reg_file@@Base+0x26>
   2fa3a:	add	sp, #116	; 0x74
   2fa3c:	ldr.w	pc, [sp], #4
   2fa40:	strh	r4, [r2, r6]
   2fa42:	movs	r3, r0
   2fa44:	lsls	r4, r4, #8
   2fa46:	movs	r0, r0
   2fa48:	strh	r6, [r5, r5]
   2fa4a:	movs	r3, r0

0002fa4c <path_exists@@Base>:
   2fa4c:	ldr	r2, [pc, #72]	; (2fa98 <path_exists@@Base+0x4c>)
   2fa4e:	ldr	r3, [pc, #76]	; (2fa9c <path_exists@@Base+0x50>)
   2fa50:	add	r2, pc
   2fa52:	push	{lr}
   2fa54:	sub	sp, #116	; 0x74
   2fa56:	ldr	r3, [r2, r3]
   2fa58:	mov	r1, sp
   2fa5a:	ldr	r3, [r3, #0]
   2fa5c:	str	r3, [sp, #108]	; 0x6c
   2fa5e:	mov.w	r3, #0
   2fa62:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   2fa66:	cmp	r0, #0
   2fa68:	bge.n	2fa8a <path_exists@@Base+0x3e>
   2fa6a:	blx	8740 <__errno_location@plt>
   2fa6e:	ldr	r0, [r0, #0]
   2fa70:	cmp	r0, #2
   2fa72:	beq.n	2fa8e <path_exists@@Base+0x42>
   2fa74:	negs	r0, r0
   2fa76:	ldr	r2, [pc, #40]	; (2faa0 <path_exists@@Base+0x54>)
   2fa78:	ldr	r3, [pc, #32]	; (2fa9c <path_exists@@Base+0x50>)
   2fa7a:	add	r2, pc
   2fa7c:	ldr	r3, [r2, r3]
   2fa7e:	ldr	r2, [r3, #0]
   2fa80:	ldr	r3, [sp, #108]	; 0x6c
   2fa82:	eors	r2, r3
   2fa84:	beq.n	2fa92 <path_exists@@Base+0x46>
   2fa86:	blx	84cc <__stack_chk_fail@plt>
   2fa8a:	movs	r0, #1
   2fa8c:	b.n	2fa76 <path_exists@@Base+0x2a>
   2fa8e:	movs	r0, #0
   2fa90:	b.n	2fa76 <path_exists@@Base+0x2a>
   2fa92:	add	sp, #116	; 0x74
   2fa94:	ldr.w	pc, [sp], #4
   2fa98:	strh	r0, [r7, r4]
   2fa9a:	movs	r3, r0
   2fa9c:	lsls	r4, r4, #8
   2fa9e:	movs	r0, r0
   2faa0:	strh	r6, [r1, r4]
   2faa2:	movs	r3, r0

0002faa4 <path_is_reg_or_block_device@@Base>:
   2faa4:	ldr	r2, [pc, #96]	; (2fb08 <path_is_reg_or_block_device@@Base+0x64>)
   2faa6:	ldr	r3, [pc, #100]	; (2fb0c <path_is_reg_or_block_device@@Base+0x68>)
   2faa8:	add	r2, pc
   2faaa:	push	{lr}
   2faac:	sub	sp, #116	; 0x74
   2faae:	ldr	r3, [r2, r3]
   2fab0:	mov	r1, sp
   2fab2:	ldr	r3, [r3, #0]
   2fab4:	str	r3, [sp, #108]	; 0x6c
   2fab6:	mov.w	r3, #0
   2faba:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   2fabe:	cmp	r0, #0
   2fac0:	bge.n	2fae2 <path_is_reg_or_block_device@@Base+0x3e>
   2fac2:	blx	8740 <__errno_location@plt>
   2fac6:	ldr	r0, [r0, #0]
   2fac8:	cmp	r0, #2
   2faca:	beq.n	2faf8 <path_is_reg_or_block_device@@Base+0x54>
   2facc:	negs	r0, r0
   2face:	ldr	r2, [pc, #64]	; (2fb10 <path_is_reg_or_block_device@@Base+0x6c>)
   2fad0:	ldr	r3, [pc, #56]	; (2fb0c <path_is_reg_or_block_device@@Base+0x68>)
   2fad2:	add	r2, pc
   2fad4:	ldr	r3, [r2, r3]
   2fad6:	ldr	r2, [r3, #0]
   2fad8:	ldr	r3, [sp, #108]	; 0x6c
   2fada:	eors	r2, r3
   2fadc:	beq.n	2fb00 <path_is_reg_or_block_device@@Base+0x5c>
   2fade:	blx	84cc <__stack_chk_fail@plt>
   2fae2:	ldr	r0, [sp, #16]
   2fae4:	and.w	r0, r0, #61440	; 0xf000
   2fae8:	cmp.w	r0, #24576	; 0x6000
   2faec:	beq.n	2fafc <path_is_reg_or_block_device@@Base+0x58>
   2faee:	sub.w	r3, r0, #32768	; 0x8000
   2faf2:	negs	r0, r3
   2faf4:	adcs	r0, r3
   2faf6:	b.n	2face <path_is_reg_or_block_device@@Base+0x2a>
   2faf8:	movs	r0, #0
   2fafa:	b.n	2face <path_is_reg_or_block_device@@Base+0x2a>
   2fafc:	movs	r0, #1
   2fafe:	b.n	2face <path_is_reg_or_block_device@@Base+0x2a>
   2fb00:	add	sp, #116	; 0x74
   2fb02:	ldr.w	pc, [sp], #4
   2fb06:	nop
   2fb08:	strh	r0, [r4, r3]
   2fb0a:	movs	r3, r0
   2fb0c:	lsls	r4, r4, #8
   2fb0e:	movs	r0, r0
   2fb10:	strh	r6, [r6, r2]
   2fb12:	movs	r3, r0

0002fb14 <canonicalize_dm_name@@Base>:
   2fb14:	cbz	r0, 2fb1c <canonicalize_dm_name@@Base+0x8>
   2fb16:	ldrb	r3, [r0, #0]
   2fb18:	cbz	r3, 2fb1c <canonicalize_dm_name@@Base+0x8>
   2fb1a:	b.n	2f734 <btrfs_scan_devices@@Base+0x1ec>
   2fb1c:	movs	r0, #0
   2fb1e:	bx	lr

0002fb20 <canonicalize_path@@Base>:
   2fb20:	push	{r3, r4, r5, lr}
   2fb22:	mov	r5, r0
   2fb24:	cbz	r0, 2fb74 <canonicalize_path@@Base+0x54>
   2fb26:	ldrb	r4, [r0, #0]
   2fb28:	cbz	r4, 2fb76 <canonicalize_path@@Base+0x56>
   2fb2a:	movs	r1, #0
   2fb2c:	blx	8954 <realpath@plt>
   2fb30:	mov	r4, r0
   2fb32:	cbnz	r0, 2fb3e <canonicalize_path@@Base+0x1e>
   2fb34:	mov	r0, r5
   2fb36:	ldmia.w	sp!, {r3, r4, r5, lr}
   2fb3a:	b.w	84b0 <strdup@plt>
   2fb3e:	movs	r1, #47	; 0x2f
   2fb40:	blx	8864 <strrchr@plt>
   2fb44:	mov	r5, r0
   2fb46:	cbz	r0, 2fb76 <canonicalize_path@@Base+0x56>
   2fb48:	ldr	r1, [pc, #48]	; (2fb7c <canonicalize_path@@Base+0x5c>)
   2fb4a:	movs	r2, #4
   2fb4c:	add	r1, pc
   2fb4e:	blx	893c <strncmp@plt>
   2fb52:	cbnz	r0, 2fb76 <canonicalize_path@@Base+0x56>
   2fb54:	blx	86e0 <__ctype_b_loc@plt>
   2fb58:	ldrb	r2, [r5, #4]
   2fb5a:	ldr	r3, [r0, #0]
   2fb5c:	ldrh.w	r3, [r3, r2, lsl #1]
   2fb60:	lsls	r3, r3, #20
   2fb62:	bpl.n	2fb76 <canonicalize_path@@Base+0x56>
   2fb64:	adds	r0, r5, #1
   2fb66:	bl	2fb14 <canonicalize_dm_name@@Base>
   2fb6a:	mov	r5, r0
   2fb6c:	cbz	r0, 2fb76 <canonicalize_path@@Base+0x56>
   2fb6e:	mov	r0, r4
   2fb70:	blx	83f0 <free@plt+0x4>
   2fb74:	mov	r4, r5
   2fb76:	mov	r0, r4
   2fb78:	pop	{r3, r4, r5, pc}
   2fb7a:	nop
   2fb7c:	subs	r3, #90	; 0x5a
   2fb7e:	movs	r2, r0

0002fb80 <__strncpy_null@@Base>:
   2fb80:	push	{r3, r4, r5, lr}
   2fb82:	mov	r4, r2
   2fb84:	mov	r5, r0
   2fb86:	blx	879c <strncpy@plt>
   2fb8a:	cbz	r4, 2fb94 <__strncpy_null@@Base+0x14>
   2fb8c:	add	r4, r5
   2fb8e:	movs	r3, #0
   2fb90:	strb.w	r3, [r4, #-1]
   2fb94:	mov	r0, r5
   2fb96:	pop	{r3, r4, r5, pc}

0002fb98 <is_same_loop_file@@Base>:
   2fb98:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2fb9c:	mov	r5, r1
   2fb9e:	ldr	r1, [pc, #368]	; (2fd10 <is_same_loop_file@@Base+0x178>)
   2fba0:	sub.w	sp, sp, #16512	; 0x4080
   2fba4:	ldr	r2, [pc, #364]	; (2fd14 <is_same_loop_file@@Base+0x17c>)
   2fba6:	sub	sp, #88	; 0x58
   2fba8:	add	r1, pc
   2fbaa:	add.w	r3, sp, #16512	; 0x4080
   2fbae:	adds	r3, #84	; 0x54
   2fbb0:	mov	r6, r0
   2fbb2:	ldr	r2, [r1, r2]
   2fbb4:	ldr	r2, [r2, #0]
   2fbb6:	str	r2, [r3, #0]
   2fbb8:	mov.w	r2, #0
   2fbbc:	bl	2f6c0 <btrfs_scan_devices@@Base+0x178>
   2fbc0:	subs	r4, r0, #0
   2fbc2:	bge.n	2fbcc <is_same_loop_file@@Base+0x34>
   2fbc4:	adds	r3, r4, #2
   2fbc6:	bne.n	2fc5e <is_same_loop_file@@Base+0xc6>
   2fbc8:	movs	r4, #0
   2fbca:	b.n	2fc5e <is_same_loop_file@@Base+0xc6>
   2fbcc:	beq.n	2fbe8 <is_same_loop_file@@Base+0x50>
   2fbce:	add	r7, sp, #212	; 0xd4
   2fbd0:	mov	r0, r6
   2fbd2:	mov	r1, r7
   2fbd4:	bl	2f810 <btrfs_scan_devices@@Base+0x2c8>
   2fbd8:	subs	r4, r0, #0
   2fbda:	bge.n	2fc78 <is_same_loop_file@@Base+0xe0>
   2fbdc:	blx	8740 <__errno_location@plt>
   2fbe0:	ldr	r3, [r0, #0]
   2fbe2:	cmp	r3, #1
   2fbe4:	bne.n	2fc5e <is_same_loop_file@@Base+0xc6>
   2fbe6:	movs	r6, #0
   2fbe8:	mov	r0, r5
   2fbea:	bl	2f6c0 <btrfs_scan_devices@@Base+0x178>
   2fbee:	subs	r4, r0, #0
   2fbf0:	blt.n	2fbc4 <is_same_loop_file@@Base+0x2c>
   2fbf2:	beq.n	2fc12 <is_same_loop_file@@Base+0x7a>
   2fbf4:	add.w	r7, sp, #4288	; 0x10c0
   2fbf8:	mov	r0, r5
   2fbfa:	adds	r7, #20
   2fbfc:	mov	r1, r7
   2fbfe:	bl	2f810 <btrfs_scan_devices@@Base+0x2c8>
   2fc02:	subs	r4, r0, #0
   2fc04:	bge.n	2fc7c <is_same_loop_file@@Base+0xe4>
   2fc06:	blx	8740 <__errno_location@plt>
   2fc0a:	ldr	r3, [r0, #0]
   2fc0c:	cmp	r3, #1
   2fc0e:	bne.n	2fc5e <is_same_loop_file@@Base+0xc6>
   2fc10:	movs	r5, #0
   2fc12:	add.w	r4, sp, #8384	; 0x20c0
   2fc16:	mov.w	r2, #4096	; 0x1000
   2fc1a:	adds	r4, #20
   2fc1c:	mov	r0, r6
   2fc1e:	mov	r1, r4
   2fc20:	blx	859c <__realpath_chk@plt>
   2fc24:	cbnz	r0, 2fc32 <is_same_loop_file@@Base+0x9a>
   2fc26:	mov.w	r2, #4096	; 0x1000
   2fc2a:	mov	r1, r6
   2fc2c:	mov	r0, r4
   2fc2e:	bl	2fb80 <__strncpy_null@@Base>
   2fc32:	add.w	r7, sp, #12480	; 0x30c0
   2fc36:	mov.w	r2, #4096	; 0x1000
   2fc3a:	adds	r7, #20
   2fc3c:	mov	r0, r5
   2fc3e:	mov	r1, r7
   2fc40:	blx	859c <__realpath_chk@plt>
   2fc44:	cbnz	r0, 2fc52 <is_same_loop_file@@Base+0xba>
   2fc46:	mov.w	r2, #4096	; 0x1000
   2fc4a:	mov	r1, r5
   2fc4c:	mov	r0, r7
   2fc4e:	bl	2fb80 <__strncpy_null@@Base>
   2fc52:	mov	r1, r7
   2fc54:	mov	r0, r4
   2fc56:	blx	837c <strcmp@plt>
   2fc5a:	cbnz	r0, 2fc80 <is_same_loop_file@@Base+0xe8>
   2fc5c:	movs	r4, #1
   2fc5e:	ldr	r1, [pc, #184]	; (2fd18 <is_same_loop_file@@Base+0x180>)
   2fc60:	add.w	r3, sp, #16512	; 0x4080
   2fc64:	ldr	r2, [pc, #172]	; (2fd14 <is_same_loop_file@@Base+0x17c>)
   2fc66:	adds	r3, #84	; 0x54
   2fc68:	add	r1, pc
   2fc6a:	ldr	r2, [r1, r2]
   2fc6c:	ldr	r1, [r2, #0]
   2fc6e:	ldr	r2, [r3, #0]
   2fc70:	eors	r1, r2
   2fc72:	beq.n	2fd02 <is_same_loop_file@@Base+0x16a>
   2fc74:	blx	84cc <__stack_chk_fail@plt>
   2fc78:	mov	r6, r7
   2fc7a:	b.n	2fbe8 <is_same_loop_file@@Base+0x50>
   2fc7c:	mov	r5, r7
   2fc7e:	b.n	2fc12 <is_same_loop_file@@Base+0x7a>
   2fc80:	add	r7, sp, #88	; 0x58
   2fc82:	mov	r0, r6
   2fc84:	sub.w	r8, r7, #88	; 0x58
   2fc88:	mov	r1, r8
   2fc8a:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   2fc8e:	cmp	r0, #0
   2fc90:	bge.n	2fca0 <is_same_loop_file@@Base+0x108>
   2fc92:	blx	8740 <__errno_location@plt>
   2fc96:	ldr	r4, [r0, #0]
   2fc98:	cmp	r4, #2
   2fc9a:	beq.n	2fbc8 <is_same_loop_file@@Base+0x30>
   2fc9c:	negs	r4, r4
   2fc9e:	b.n	2fc5e <is_same_loop_file@@Base+0xc6>
   2fca0:	add	r6, sp, #216	; 0xd8
   2fca2:	mov	r0, r5
   2fca4:	sub.w	r4, r6, #112	; 0x70
   2fca8:	mov	r1, r4
   2fcaa:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   2fcae:	cmp	r0, #0
   2fcb0:	blt.n	2fc92 <is_same_loop_file@@Base+0xfa>
   2fcb2:	ldr.w	r3, [r8, #16]
   2fcb6:	and.w	r3, r3, #61440	; 0xf000
   2fcba:	cmp.w	r3, #24576	; 0x6000
   2fcbe:	bne.n	2fcdc <is_same_loop_file@@Base+0x144>
   2fcc0:	ldr	r3, [r4, #16]
   2fcc2:	and.w	r3, r3, #61440	; 0xf000
   2fcc6:	cmp.w	r3, #24576	; 0x6000
   2fcca:	bne.n	2fcdc <is_same_loop_file@@Base+0x144>
   2fccc:	ldrd	r0, r1, [r8, #32]
   2fcd0:	ldrd	r2, r3, [r4, #32]
   2fcd4:	cmp	r1, r3
   2fcd6:	it	eq
   2fcd8:	cmpeq	r0, r2
   2fcda:	beq.n	2fc5c <is_same_loop_file@@Base+0xc4>
   2fcdc:	ldrd	r0, r1, [r7, #-88]	; 0x58
   2fce0:	ldrd	r2, r3, [r6, #-112]	; 0x70
   2fce4:	cmp	r1, r3
   2fce6:	it	eq
   2fce8:	cmpeq	r0, r2
   2fcea:	bne.w	2fbc8 <is_same_loop_file@@Base+0x30>
   2fcee:	ldrd	r2, r3, [r4, #96]	; 0x60
   2fcf2:	ldrd	r0, r1, [r8, #96]	; 0x60
   2fcf6:	cmp	r1, r3
   2fcf8:	itte	eq
   2fcfa:	cmpeq	r0, r2
   2fcfc:	moveq	r4, #1
   2fcfe:	movne	r4, #0
   2fd00:	b.n	2fc5e <is_same_loop_file@@Base+0xc6>
   2fd02:	mov	r0, r4
   2fd04:	add.w	sp, sp, #16512	; 0x4080
   2fd08:	add	sp, #88	; 0x58
   2fd0a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   2fd0e:	nop
   2fd10:	str	r0, [r4, r7]
   2fd12:	movs	r3, r0
   2fd14:	lsls	r4, r4, #8
   2fd16:	movs	r0, r0
   2fd18:	str	r0, [r4, r4]
   2fd1a:	movs	r3, r0

0002fd1c <path_is_dir@@Base>:
   2fd1c:	ldr	r2, [pc, #76]	; (2fd6c <path_is_dir@@Base+0x50>)
   2fd1e:	ldr	r3, [pc, #80]	; (2fd70 <path_is_dir@@Base+0x54>)
   2fd20:	add	r2, pc
   2fd22:	push	{lr}
   2fd24:	sub	sp, #116	; 0x74
   2fd26:	ldr	r3, [r2, r3]
   2fd28:	mov	r1, sp
   2fd2a:	ldr	r3, [r3, #0]
   2fd2c:	str	r3, [sp, #108]	; 0x6c
   2fd2e:	mov.w	r3, #0
   2fd32:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   2fd36:	cmp	r0, #0
   2fd38:	bge.n	2fd56 <path_is_dir@@Base+0x3a>
   2fd3a:	blx	8740 <__errno_location@plt>
   2fd3e:	ldr	r0, [r0, #0]
   2fd40:	negs	r0, r0
   2fd42:	ldr	r2, [pc, #48]	; (2fd74 <path_is_dir@@Base+0x58>)
   2fd44:	ldr	r3, [pc, #40]	; (2fd70 <path_is_dir@@Base+0x54>)
   2fd46:	add	r2, pc
   2fd48:	ldr	r3, [r2, r3]
   2fd4a:	ldr	r2, [r3, #0]
   2fd4c:	ldr	r3, [sp, #108]	; 0x6c
   2fd4e:	eors	r2, r3
   2fd50:	beq.n	2fd66 <path_is_dir@@Base+0x4a>
   2fd52:	blx	84cc <__stack_chk_fail@plt>
   2fd56:	ldr	r0, [sp, #16]
   2fd58:	and.w	r0, r0, #61440	; 0xf000
   2fd5c:	sub.w	r3, r0, #16384	; 0x4000
   2fd60:	negs	r0, r3
   2fd62:	adcs	r0, r3
   2fd64:	b.n	2fd42 <path_is_dir@@Base+0x26>
   2fd66:	add	sp, #116	; 0x74
   2fd68:	ldr.w	pc, [sp], #4
   2fd6c:	str	r0, [r5, r1]
   2fd6e:	movs	r3, r0
   2fd70:	lsls	r4, r4, #8
   2fd72:	movs	r0, r0
   2fd74:	str	r2, [r0, r1]
   2fd76:	movs	r3, r0

0002fd78 <arg_copy_path@@Base>:
   2fd78:	push	{r0, r1, r2, r4, r5, lr}
   2fd7a:	mov	r5, r0
   2fd7c:	mov	r0, r1
   2fd7e:	mov	r4, r2
   2fd80:	str	r1, [sp, #4]
   2fd82:	blx	8704 <strlen@plt>
   2fd86:	cmp.w	r0, #4096	; 0x1000
   2fd8a:	bcs.n	2fda0 <arg_copy_path@@Base+0x28>
   2fd8c:	cmp	r4, r0
   2fd8e:	bls.n	2fda0 <arg_copy_path@@Base+0x28>
   2fd90:	ldr	r1, [sp, #4]
   2fd92:	mov	r2, r4
   2fd94:	mov	r0, r5
   2fd96:	bl	2fb80 <__strncpy_null@@Base>
   2fd9a:	movs	r0, #0
   2fd9c:	add	sp, #12
   2fd9e:	pop	{r4, r5, pc}
   2fda0:	mvn.w	r0, #35	; 0x23
   2fda4:	b.n	2fd9c <arg_copy_path@@Base+0x24>

0002fda6 <test_issubvolname@@Base>:
   2fda6:	push	{r4, lr}
   2fda8:	mov	r4, r0
   2fdaa:	ldrb	r3, [r0, #0]
   2fdac:	cbz	r3, 2fdd4 <test_issubvolname@@Base+0x2e>
   2fdae:	movs	r1, #47	; 0x2f
   2fdb0:	blx	8710 <strchr@plt>
   2fdb4:	cbnz	r0, 2fdd4 <test_issubvolname@@Base+0x2e>
   2fdb6:	ldr	r1, [pc, #32]	; (2fdd8 <test_issubvolname@@Base+0x32>)
   2fdb8:	mov	r0, r4
   2fdba:	add	r1, pc
   2fdbc:	blx	837c <strcmp@plt>
   2fdc0:	cbz	r0, 2fdd2 <test_issubvolname@@Base+0x2c>
   2fdc2:	ldr	r1, [pc, #24]	; (2fddc <test_issubvolname@@Base+0x36>)
   2fdc4:	mov	r0, r4
   2fdc6:	add	r1, pc
   2fdc8:	blx	837c <strcmp@plt>
   2fdcc:	subs	r0, #0
   2fdce:	it	ne
   2fdd0:	movne	r0, #1
   2fdd2:	pop	{r4, pc}
   2fdd4:	movs	r0, #0
   2fdd6:	b.n	2fdd2 <test_issubvolname@@Base+0x2c>
   2fdd8:	subs	r0, #242	; 0xf2
   2fdda:	movs	r2, r0
   2fddc:	subs	r0, #229	; 0xe5
   2fdde:	movs	r2, r0
   2fde0:	and.w	r2, r0, #2040	; 0x7f8
   2fde4:	movs	r3, #0
   2fde6:	cmp	r3, #0
   2fde8:	it	eq
   2fdea:	cmpeq	r2, #64	; 0x40
   2fdec:	beq.n	2fe68 <test_issubvolname@@Base+0xc2>
   2fdee:	cmp	r3, #0
   2fdf0:	it	eq
   2fdf2:	cmpeq	r2, #65	; 0x41
   2fdf4:	bcs.n	2fe28 <test_issubvolname@@Base+0x82>
   2fdf6:	cmp	r3, #0
   2fdf8:	it	eq
   2fdfa:	cmpeq	r2, #16
   2fdfc:	beq.n	2fe74 <test_issubvolname@@Base+0xce>
   2fdfe:	cmp	r3, #0
   2fe00:	it	eq
   2fe02:	cmpeq	r2, #17
   2fe04:	bcs.n	2fe1a <test_issubvolname@@Base+0x74>
   2fe06:	orrs.w	r1, r2, r3
   2fe0a:	beq.n	2fe6c <test_issubvolname@@Base+0xc6>
   2fe0c:	cmp	r3, #0
   2fe0e:	itet	eq
   2fe10:	cmpeq	r2, #8
   2fe12:	movne.w	r0, #4294967295	; 0xffffffff
   2fe16:	moveq	r0, #2
   2fe18:	bx	lr
   2fe1a:	cmp	r3, #0
   2fe1c:	itet	eq
   2fe1e:	cmpeq	r2, #32
   2fe20:	movne.w	r0, #4294967295	; 0xffffffff
   2fe24:	moveq	r0, #1
   2fe26:	bx	lr
   2fe28:	cmp	r3, #0
   2fe2a:	it	eq
   2fe2c:	cmpeq.w	r2, #512	; 0x200
   2fe30:	beq.n	2fe70 <test_issubvolname@@Base+0xca>
   2fe32:	movs	r1, #0
   2fe34:	cmp	r1, r3
   2fe36:	mov.w	r0, #512	; 0x200
   2fe3a:	it	eq
   2fe3c:	cmpeq	r0, r2
   2fe3e:	bcc.n	2fe58 <test_issubvolname@@Base+0xb2>
   2fe40:	cmp	r3, #0
   2fe42:	it	eq
   2fe44:	cmpeq	r2, #128	; 0x80
   2fe46:	beq.n	2fe74 <test_issubvolname@@Base+0xce>
   2fe48:	cmp	r3, #0
   2fe4a:	itet	eq
   2fe4c:	cmpeq.w	r2, #256	; 0x100
   2fe50:	movne.w	r0, #4294967295	; 0xffffffff
   2fe54:	moveq	r0, #3
   2fe56:	bx	lr
   2fe58:	cmp	r3, #0
   2fe5a:	itet	eq
   2fe5c:	cmpeq.w	r2, #1024	; 0x400
   2fe60:	movne.w	r0, #4294967295	; 0xffffffff
   2fe64:	moveq	r0, #4
   2fe66:	bx	lr
   2fe68:	movs	r0, #4
   2fe6a:	bx	lr
   2fe6c:	movs	r0, #1
   2fe6e:	bx	lr
   2fe70:	movs	r0, #3
   2fe72:	bx	lr
   2fe74:	movs	r0, #2
   2fe76:	bx	lr
   2fe78:	ldr	r2, [pc, #136]	; (2ff04 <test_issubvolname@@Base+0x15e>)
   2fe7a:	movs	r1, #0
   2fe7c:	ldr	r3, [pc, #136]	; (2ff08 <test_issubvolname@@Base+0x162>)
   2fe7e:	add	r2, pc
   2fe80:	ldr	r0, [pc, #136]	; (2ff0c <test_issubvolname@@Base+0x166>)
   2fe82:	push	{r4, r5, lr}
   2fe84:	sub	sp, #20
   2fe86:	ldr	r3, [r2, r3]
   2fe88:	add	r0, pc
   2fe8a:	ldr	r3, [r3, #0]
   2fe8c:	str	r3, [sp, #12]
   2fe8e:	mov.w	r3, #0
   2fe92:	blx	8608 <open64@plt>
   2fe96:	subs	r4, r0, #0
   2fe98:	bge.n	2fee6 <test_issubvolname@@Base+0x140>
   2fe9a:	ldr	r0, [pc, #116]	; (2ff10 <test_issubvolname@@Base+0x16a>)
   2fe9c:	ldr	r4, [pc, #116]	; (2ff14 <test_issubvolname@@Base+0x16e>)
   2fe9e:	add	r0, pc
   2fea0:	bl	17400 <__btrfs_warning@@Base>
   2fea4:	movs	r1, #0
   2fea6:	add	r0, sp, #4
   2fea8:	add	r4, pc
   2feaa:	blx	85c0 <gettimeofday@plt>
   2feae:	blx	86ec <getpid@plt>
   2feb2:	ldr	r3, [sp, #4]
   2feb4:	eors	r0, r3
   2feb6:	strh	r0, [r4, #0]
   2feb8:	blx	88bc <getppid@plt>
   2febc:	ldr	r3, [sp, #8]
   2febe:	ldr	r2, [sp, #4]
   2fec0:	eors	r0, r3
   2fec2:	eors	r3, r2
   2fec4:	strh	r0, [r4, #2]
   2fec6:	asrs	r3, r3, #16
   2fec8:	strh	r3, [r4, #4]
   2feca:	ldr	r3, [pc, #76]	; (2ff18 <test_issubvolname@@Base+0x172>)
   2fecc:	movs	r2, #1
   2fece:	add	r3, pc
   2fed0:	str	r2, [r3, #8]
   2fed2:	ldr	r2, [pc, #72]	; (2ff1c <test_issubvolname@@Base+0x176>)
   2fed4:	ldr	r3, [pc, #48]	; (2ff08 <test_issubvolname@@Base+0x162>)
   2fed6:	add	r2, pc
   2fed8:	ldr	r3, [r2, r3]
   2feda:	ldr	r2, [r3, #0]
   2fedc:	ldr	r3, [sp, #12]
   2fede:	eors	r2, r3
   2fee0:	beq.n	2fefe <test_issubvolname@@Base+0x158>
   2fee2:	blx	84cc <__stack_chk_fail@plt>
   2fee6:	ldr	r1, [pc, #56]	; (2ff20 <test_issubvolname@@Base+0x17a>)
   2fee8:	movs	r2, #6
   2feea:	add	r1, pc
   2feec:	blx	83b8 <read@plt>
   2fef0:	mov	r5, r0
   2fef2:	mov	r0, r4
   2fef4:	blx	8960 <close@plt>
   2fef8:	cmp	r5, #5
   2fefa:	bhi.n	2feca <test_issubvolname@@Base+0x124>
   2fefc:	b.n	2fe9a <test_issubvolname@@Base+0xf4>
   2fefe:	add	sp, #20
   2ff00:	pop	{r4, r5, pc}
   2ff02:	nop
   2ff04:	ldr	r7, [pc, #40]	; (2ff30 <test_issubvolname@@Base+0x18a>)
   2ff06:	movs	r3, r0
   2ff08:	lsls	r4, r4, #8
   2ff0a:	movs	r0, r0
   2ff0c:	subs	r0, #38	; 0x26
   2ff0e:	movs	r2, r0
   2ff10:	subs	r0, #29
   2ff12:	movs	r2, r0
   2ff14:	str	r4, [r2, #60]	; 0x3c
   2ff16:	movs	r3, r0
   2ff18:	str	r6, [r5, #56]	; 0x38
   2ff1a:	movs	r3, r0
   2ff1c:	ldr	r6, [pc, #712]	; (301e8 <get_btrfs_mount@@Base+0x28>)
   2ff1e:	movs	r3, r0
   2ff20:	str	r2, [r2, #56]	; 0x38
   2ff22:	movs	r3, r0
   2ff24:	ldr.w	ip, [pc, #76]	; 2ff74 <test_issubvolname@@Base+0x1ce>
   2ff28:	ldr	r5, [pc, #76]	; (2ff78 <test_issubvolname@@Base+0x1d2>)
   2ff2a:	add	ip, pc
   2ff2c:	ldr	r4, [pc, #76]	; (2ff7c <test_issubvolname@@Base+0x1d6>)
   2ff2e:	push	{lr}
   2ff30:	sub	sp, #92	; 0x5c
   2ff32:	ldr.w	r5, [ip, r5]
   2ff36:	add	r4, pc
   2ff38:	ldr	r5, [r5, #0]
   2ff3a:	str	r5, [sp, #84]	; 0x54
   2ff3c:	mov.w	r5, #0
   2ff40:	ldr	r5, [pc, #60]	; (2ff80 <test_issubvolname@@Base+0x1da>)
   2ff42:	ldr	r4, [r4, r5]
   2ff44:	strd	r2, r1, [sp]
   2ff48:	movs	r1, #1
   2ff4a:	strd	r0, r3, [sp, #8]
   2ff4e:	ldr	r2, [pc, #52]	; (2ff84 <test_issubvolname@@Base+0x1de>)
   2ff50:	ldr	r3, [pc, #52]	; (2ff88 <test_issubvolname@@Base+0x1e2>)
   2ff52:	ldr	r0, [r4, #0]
   2ff54:	add	r4, sp, #20
   2ff56:	add	r3, pc
   2ff58:	add	r2, pc
   2ff5a:	blx	881c <__fprintf_chk@plt+0x4>
   2ff5e:	movs	r1, #16
   2ff60:	mov	r0, r4
   2ff62:	blx	8680 <backtrace@plt>
   2ff66:	movs	r2, #2
   2ff68:	mov	r1, r0
   2ff6a:	mov	r0, r4
   2ff6c:	blx	8990 <backtrace_symbols_fd@plt>
   2ff70:	blx	8948 <abort@plt>
   2ff74:	ldr	r6, [pc, #376]	; (300f0 <check_mounted_where@@Base+0x7c>)
   2ff76:	movs	r3, r0
   2ff78:	lsls	r4, r4, #8
   2ff7a:	movs	r0, r0
   2ff7c:	ldr	r6, [pc, #328]	; (300c8 <check_mounted_where@@Base+0x54>)
   2ff7e:	movs	r3, r0
   2ff80:	lsls	r4, r6, #8
   2ff82:	movs	r0, r0
   2ff84:	ldr	r3, [sp, #228]	; 0xe4
   2ff86:	movs	r0, r0
   2ff88:	adds	r7, #162	; 0xa2
   2ff8a:	movs	r2, r0

0002ff8c <btrfs_make_root_dir@@Base>:
   2ff8c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   2ff90:	mov	r6, r2
   2ff92:	ldr	r2, [pc, #208]	; (30064 <btrfs_make_root_dir@@Base+0xd8>)
   2ff94:	mov	r5, r3
   2ff96:	ldr	r3, [pc, #208]	; (30068 <btrfs_make_root_dir@@Base+0xdc>)
   2ff98:	sub	sp, #192	; 0xc0
   2ff9a:	add	r2, pc
   2ff9c:	mov	r8, r0
   2ff9e:	movs	r0, #0
   2ffa0:	mov	r4, r1
   2ffa2:	ldr	r3, [r2, r3]
   2ffa4:	ldr	r3, [r3, #0]
   2ffa6:	str	r3, [sp, #188]	; 0xbc
   2ffa8:	mov.w	r3, #0
   2ffac:	blx	8454 <time@plt>
   2ffb0:	movs	r2, #104	; 0x68
   2ffb2:	movs	r1, #0
   2ffb4:	mov	r7, r0
   2ffb6:	add	r0, sp, #36	; 0x24
   2ffb8:	blx	8780 <memset@plt+0x4>
   2ffbc:	ldr.w	r3, [r8, #8]
   2ffc0:	movs	r2, #1
   2ffc2:	str	r2, [sp, #68]	; 0x44
   2ffc4:	ldr.w	r2, [r4, #464]	; 0x1d0
   2ffc8:	mov	r0, r8
   2ffca:	str	r3, [sp, #28]
   2ffcc:	ldr.w	r3, [r8, #12]
   2ffd0:	ldr.w	r1, [r2, #384]	; 0x180
   2ffd4:	str	r3, [sp, #32]
   2ffd6:	movs	r3, #0
   2ffd8:	strd	r3, r7, [sp, #172]	; 0xac
   2ffdc:	strd	r1, r3, [sp, #52]	; 0x34
   2ffe0:	movw	r1, #16877	; 0x41ed
   2ffe4:	strd	r3, r7, [sp, #148]	; 0x94
   2ffe8:	str	r1, [sp, #80]	; 0x50
   2ffea:	asrs	r1, r7, #31
   2ffec:	strd	r1, r3, [sp, #156]	; 0x9c
   2fff0:	strd	r7, r1, [sp, #164]	; 0xa4
   2fff4:	strd	r1, r3, [sp, #180]	; 0xb4
   2fff8:	strd	r7, r1, [sp, #140]	; 0x8c
   2fffc:	mov	r1, r4
   2fffe:	ldr	r3, [r2, #28]
   30000:	cmp	r3, r4
   30002:	it	eq
   30004:	ldreq.w	r3, [r2, #308]	; 0x134
   30008:	mov	r2, r6
   3000a:	itt	eq
   3000c:	streq.w	r6, [r3, #128]	; 0x80
   30010:	streq.w	r5, [r3, #132]	; 0x84
   30014:	add	r3, sp, #28
   30016:	str	r3, [sp, #0]
   30018:	mov	r3, r5
   3001a:	bl	2d86c <btrfs_insert_inode@@Base>
   3001e:	cbnz	r0, 30048 <btrfs_make_root_dir@@Base+0xbc>
   30020:	movs	r2, #0
   30022:	movs	r3, #0
   30024:	strd	r2, r3, [sp, #16]
   30028:	mov	r1, r4
   3002a:	ldr	r2, [pc, #64]	; (3006c <btrfs_make_root_dir@@Base+0xe0>)
   3002c:	movs	r3, #2
   3002e:	mov	r0, r8
   30030:	strd	r6, r5, [sp, #8]
   30034:	add	r2, pc
   30036:	strd	r6, r5, [sp]
   3003a:	bl	2dc74 <btrfs_insert_inode_ref@@Base>
   3003e:	cbnz	r0, 30048 <btrfs_make_root_dir@@Base+0xbc>
   30040:	str.w	r6, [r4, #176]	; 0xb0
   30044:	str.w	r5, [r4, #180]	; 0xb4
   30048:	ldr	r2, [pc, #36]	; (30070 <btrfs_make_root_dir@@Base+0xe4>)
   3004a:	ldr	r3, [pc, #28]	; (30068 <btrfs_make_root_dir@@Base+0xdc>)
   3004c:	add	r2, pc
   3004e:	ldr	r3, [r2, r3]
   30050:	ldr	r2, [r3, #0]
   30052:	ldr	r3, [sp, #188]	; 0xbc
   30054:	eors	r2, r3
   30056:	beq.n	3005c <btrfs_make_root_dir@@Base+0xd0>
   30058:	blx	84cc <__stack_chk_fail@plt>
   3005c:	add	sp, #192	; 0xc0
   3005e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   30062:	nop
   30064:	ldr	r5, [pc, #952]	; (30420 <pretty_size_snprintf@@Base+0x18c>)
   30066:	movs	r3, r0
   30068:	lsls	r4, r4, #8
   3006a:	movs	r0, r0
   3006c:	adds	r6, #119	; 0x77
   3006e:	movs	r2, r0
   30070:	ldr	r5, [pc, #240]	; (30164 <check_mounted_where@@Base+0xf0>)
   30072:	movs	r3, r0

00030074 <check_mounted_where@@Base>:
   30074:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30078:	mov	r8, r2
   3007a:	ldr	r2, [pc, #300]	; (301a8 <check_mounted_where@@Base+0x134>)
   3007c:	mov	r6, r3
   3007e:	ldr	r3, [pc, #300]	; (301ac <check_mounted_where@@Base+0x138>)
   30080:	sub	sp, #60	; 0x3c
   30082:	add	r2, pc
   30084:	mov	r9, r1
   30086:	ldr.w	sl, [sp, #96]	; 0x60
   3008a:	ldr	r3, [r2, r3]
   3008c:	movs	r2, #1
   3008e:	ldr	r3, [r3, #0]
   30090:	str	r3, [sp, #52]	; 0x34
   30092:	mov.w	r3, #0
   30096:	movs	r3, #0
   30098:	strd	r2, r3, [sp, #40]	; 0x28
   3009c:	movs	r3, #0
   3009e:	str	r3, [sp, #36]	; 0x24
   300a0:	mov.w	r2, #65536	; 0x10000
   300a4:	ldr	r3, [sp, #100]	; 0x64
   300a6:	str	r3, [sp, #8]
   300a8:	movs	r3, #0
   300aa:	strd	r2, r3, [sp]
   300ae:	add	r3, sp, #40	; 0x28
   300b0:	add	r2, sp, #36	; 0x24
   300b2:	bl	280ec <btrfs_scan_one_device@@Base>
   300b6:	subs	r3, r0, #0
   300b8:	str	r3, [sp, #16]
   300ba:	bge.n	30118 <check_mounted_where@@Base+0xa4>
   300bc:	ldr	r1, [pc, #240]	; (301b0 <check_mounted_where@@Base+0x13c>)
   300be:	ldr	r0, [pc, #244]	; (301b4 <check_mounted_where@@Base+0x140>)
   300c0:	add	r1, pc
   300c2:	add	r0, pc
   300c4:	blx	88ec <setmntent@plt>
   300c8:	mov	r7, r0
   300ca:	cmp	r0, #0
   300cc:	beq.n	30142 <check_mounted_where@@Base+0xce>
   300ce:	ldr.w	fp, [pc, #232]	; 301b8 <check_mounted_where@@Base+0x144>
   300d2:	add	fp, pc
   300d4:	mov	r0, r7
   300d6:	blx	85f0 <getmntent@plt>
   300da:	mov	r5, r0
   300dc:	cmp	r0, #0
   300de:	beq.n	30168 <check_mounted_where@@Base+0xf4>
   300e0:	ldr	r3, [sp, #16]
   300e2:	cmp	r3, #0
   300e4:	blt.n	3014c <check_mounted_where@@Base+0xd8>
   300e6:	ldr	r0, [r5, #8]
   300e8:	mov	r1, fp
   300ea:	blx	837c <strcmp@plt>
   300ee:	cmp	r0, #0
   300f0:	bne.n	300d4 <check_mounted_where@@Base+0x60>
   300f2:	ldr	r2, [sp, #36]	; 0x24
   300f4:	ldr	r1, [r5, #0]
   300f6:	ldr.w	r3, [r2, #72]!
   300fa:	cmp	r3, r2
   300fc:	beq.n	300d4 <check_mounted_where@@Base+0x60>
   300fe:	ldr	r0, [r3, #32]
   30100:	strd	r1, r2, [sp, #24]
   30104:	str	r3, [sp, #20]
   30106:	bl	2fb98 <is_same_loop_file@@Base>
   3010a:	subs	r4, r0, #0
   3010c:	bne.n	3019c <check_mounted_where@@Base+0x128>
   3010e:	ldr	r3, [sp, #20]
   30110:	ldrd	r1, r2, [sp, #24]
   30114:	ldr	r3, [r3, #0]
   30116:	b.n	300fa <check_mounted_where@@Base+0x86>
   30118:	ldrd	r2, r3, [sp, #40]	; 0x28
   3011c:	cmp	r3, #0
   3011e:	it	eq
   30120:	cmpeq	r2, #2
   30122:	bcc.n	300bc <check_mounted_where@@Base+0x48>
   30124:	bl	2f548 <btrfs_scan_devices@@Base>
   30128:	mov	r4, r0
   3012a:	cmp	r0, #0
   3012c:	beq.n	300bc <check_mounted_where@@Base+0x48>
   3012e:	ldr	r2, [pc, #140]	; (301bc <check_mounted_where@@Base+0x148>)
   30130:	ldr	r3, [pc, #120]	; (301ac <check_mounted_where@@Base+0x138>)
   30132:	add	r2, pc
   30134:	ldr	r3, [r2, r3]
   30136:	ldr	r2, [r3, #0]
   30138:	ldr	r3, [sp, #52]	; 0x34
   3013a:	eors	r2, r3
   3013c:	beq.n	301a0 <check_mounted_where@@Base+0x12c>
   3013e:	blx	84cc <__stack_chk_fail@plt>
   30142:	blx	8740 <__errno_location@plt>
   30146:	ldr	r4, [r0, #0]
   30148:	negs	r4, r4
   3014a:	b.n	3012e <check_mounted_where@@Base+0xba>
   3014c:	ldr	r0, [r5, #0]
   3014e:	bl	2faa4 <path_is_reg_or_block_device@@Base>
   30152:	subs	r4, r0, #0
   30154:	blt.n	3017a <check_mounted_where@@Base+0x106>
   30156:	beq.n	300d4 <check_mounted_where@@Base+0x60>
   30158:	ldr	r1, [r5, #0]
   3015a:	mov	r0, r9
   3015c:	bl	2fb98 <is_same_loop_file@@Base>
   30160:	subs	r4, r0, #0
   30162:	blt.n	3017a <check_mounted_where@@Base+0x106>
   30164:	beq.n	300d4 <check_mounted_where@@Base+0x60>
   30166:	cbnz	r6, 30182 <check_mounted_where@@Base+0x10e>
   30168:	cmp.w	sl, #0
   3016c:	beq.n	30174 <check_mounted_where@@Base+0x100>
   3016e:	ldr	r3, [sp, #36]	; 0x24
   30170:	str.w	r3, [sl]
   30174:	subs	r4, r5, #0
   30176:	it	ne
   30178:	movne	r4, #1
   3017a:	mov	r0, r7
   3017c:	blx	8840 <endmntent@plt>
   30180:	b.n	3012e <check_mounted_where@@Base+0xba>
   30182:	cmp.w	r8, #0
   30186:	beq.n	30168 <check_mounted_where@@Base+0xf4>
   30188:	mov	r2, r6
   3018a:	add	r6, r8
   3018c:	ldr	r1, [r5, #4]
   3018e:	mov	r0, r8
   30190:	blx	879c <strncpy@plt>
   30194:	movs	r3, #0
   30196:	strb.w	r3, [r6, #-1]
   3019a:	b.n	30168 <check_mounted_where@@Base+0xf4>
   3019c:	blt.n	3017a <check_mounted_where@@Base+0x106>
   3019e:	b.n	30166 <check_mounted_where@@Base+0xf2>
   301a0:	mov	r0, r4
   301a2:	add	sp, #60	; 0x3c
   301a4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   301a8:	ldr	r5, [pc, #24]	; (301c4 <get_btrfs_mount@@Base+0x4>)
   301aa:	movs	r3, r0
   301ac:	lsls	r4, r4, #8
   301ae:	movs	r0, r0
   301b0:	adc.w	r0, r1, r0
   301b4:	adds	r5, #210	; 0xd2
   301b6:	movs	r2, r0
   301b8:	adds	r5, #68	; 0x44
   301ba:	movs	r2, r0
   301bc:	ldr	r4, [pc, #344]	; (30318 <pretty_size_snprintf@@Base+0x84>)
   301be:	movs	r3, r0

000301c0 <get_btrfs_mount@@Base>:
   301c0:	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
   301c4:	mov	r5, r0
   301c6:	mov	r7, r1
   301c8:	mov	r8, r2
   301ca:	bl	2f94c <path_is_block_device@@Base>
   301ce:	subs	r4, r0, #0
   301d0:	bgt.n	301fe <get_btrfs_mount@@Base+0x3e>
   301d2:	bne.n	301ea <get_btrfs_mount@@Base+0x2a>
   301d4:	ldr	r0, [pc, #108]	; (30244 <get_btrfs_mount@@Base+0x84>)
   301d6:	mov	r1, r5
   301d8:	mvn.w	r4, #21
   301dc:	add	r0, pc
   301de:	bl	1747c <__btrfs_error@@Base>
   301e2:	mov	r0, r4
   301e4:	add	sp, #8
   301e6:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   301ea:	blx	8740 <__errno_location@plt>
   301ee:	negs	r3, r4
   301f0:	mov	r1, r5
   301f2:	str	r3, [r0, #0]
   301f4:	ldr	r0, [pc, #80]	; (30248 <get_btrfs_mount@@Base+0x88>)
   301f6:	add	r0, pc
   301f8:	bl	1747c <__btrfs_error@@Base>
   301fc:	b.n	301e2 <get_btrfs_mount@@Base+0x22>
   301fe:	movs	r1, #0
   30200:	mov	r0, r5
   30202:	blx	8608 <open64@plt>
   30206:	subs	r6, r0, #0
   30208:	bge.n	30228 <get_btrfs_mount@@Base+0x68>
   3020a:	blx	8740 <__errno_location@plt>
   3020e:	mov	r1, r5
   30210:	ldr	r4, [r0, #0]
   30212:	ldr	r0, [pc, #56]	; (3024c <get_btrfs_mount@@Base+0x8c>)
   30214:	negs	r4, r4
   30216:	add	r0, pc
   30218:	bl	1747c <__btrfs_error@@Base>
   3021c:	adds	r3, r6, #1
   3021e:	beq.n	301e2 <get_btrfs_mount@@Base+0x22>
   30220:	mov	r0, r6
   30222:	blx	8960 <close@plt>
   30226:	b.n	301e2 <get_btrfs_mount@@Base+0x22>
   30228:	movs	r3, #0
   3022a:	mov	r2, r7
   3022c:	strd	r3, r3, [sp]
   30230:	mov	r1, r5
   30232:	mov	r3, r8
   30234:	bl	30074 <check_mounted_where@@Base>
   30238:	cmp	r0, #0
   3023a:	ite	eq
   3023c:	mvneq.w	r4, #21
   30240:	movne	r4, #0
   30242:	b.n	30220 <get_btrfs_mount@@Base+0x60>
   30244:	adds	r5, #43	; 0x2b
   30246:	movs	r2, r0
   30248:	adds	r5, #40	; 0x28
   3024a:	movs	r2, r0
   3024c:	ldr	r1, [sp, #340]	; 0x154
	...

00030250 <check_mounted@@Base>:
   30250:	push	{r0, r1, r2, r4, r5, lr}
   30252:	movs	r1, #0
   30254:	mov	r4, r0
   30256:	blx	8608 <open64@plt>
   3025a:	subs	r5, r0, #0
   3025c:	bge.n	30276 <check_mounted@@Base+0x26>
   3025e:	ldr	r0, [pc, #48]	; (30290 <check_mounted@@Base+0x40>)
   30260:	mov	r1, r4
   30262:	add	r0, pc
   30264:	bl	1747c <__btrfs_error@@Base>
   30268:	blx	8740 <__errno_location@plt>
   3026c:	ldr	r4, [r0, #0]
   3026e:	negs	r4, r4
   30270:	mov	r0, r4
   30272:	add	sp, #12
   30274:	pop	{r4, r5, pc}
   30276:	movs	r3, #0
   30278:	mov	r1, r4
   3027a:	mov	r2, r3
   3027c:	strd	r3, r3, [sp]
   30280:	bl	30074 <check_mounted_where@@Base>
   30284:	mov	r4, r0
   30286:	mov	r0, r5
   30288:	blx	8960 <close@plt>
   3028c:	b.n	30270 <check_mounted@@Base+0x20>
   3028e:	nop
   30290:	ldr	r0, [sp, #1008]	; 0x3f0
	...

00030294 <pretty_size_snprintf@@Base>:
   30294:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30298:	mov	r7, r1
   3029a:	vpush	{d8}
   3029e:	mov	r6, r0
   302a0:	mov	r5, r3
   302a2:	vmov	s17, r2
   302a6:	ldr	r2, [pc, #540]	; (304c4 <pretty_size_snprintf@@Base+0x230>)
   302a8:	sub	sp, #44	; 0x2c
   302aa:	add	r2, pc
   302ac:	ldr	r1, [sp, #88]	; 0x58
   302ae:	cbz	r3, 302e2 <pretty_size_snprintf@@Base+0x4e>
   302b0:	and.w	r3, r1, #1024	; 0x400
   302b4:	str	r3, [sp, #32]
   302b6:	bic.w	r3, r1, #1272	; 0x4f8
   302ba:	bic.w	r3, r3, #7
   302be:	cmp.w	r3, #256	; 0x100
   302c2:	bne.n	302f4 <pretty_size_snprintf@@Base+0x60>
   302c4:	ldr	r3, [sp, #32]
   302c6:	strd	r0, r7, [sp, #8]
   302ca:	cbz	r3, 302ee <pretty_size_snprintf@@Base+0x5a>
   302cc:	ldr	r3, [pc, #504]	; (304c8 <pretty_size_snprintf@@Base+0x234>)
   302ce:	add	r3, pc
   302d0:	str	r3, [sp, #0]
   302d2:	movs	r2, #1
   302d4:	vmov	r0, s17
   302d8:	mov.w	r3, #4294967295	; 0xffffffff
   302dc:	mov	r1, r5
   302de:	blx	8984 <__snprintf_chk@plt>
   302e2:	movs	r0, #0
   302e4:	add	sp, #44	; 0x2c
   302e6:	vpop	{d8}
   302ea:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   302ee:	ldr	r3, [pc, #476]	; (304cc <pretty_size_snprintf@@Base+0x238>)
   302f0:	add	r3, pc
   302f2:	b.n	302d0 <pretty_size_snprintf@@Base+0x3c>
   302f4:	cmp.w	r3, #512	; 0x200
   302f8:	beq.w	30488 <pretty_size_snprintf@@Base+0x1f4>
   302fc:	cmp.w	r3, #768	; 0x300
   30300:	bne.w	30462 <pretty_size_snprintf@@Base+0x1ce>
   30304:	ldr	r3, [pc, #456]	; (304d0 <pretty_size_snprintf@@Base+0x23c>)
   30306:	mov.w	r2, #1000	; 0x3e8
   3030a:	mov.w	sl, #1000	; 0x3e8
   3030e:	add	r3, pc
   30310:	adds	r3, #28
   30312:	str	r3, [sp, #36]	; 0x24
   30314:	b.n	30496 <pretty_size_snprintf@@Base+0x202>
   30316:	asrs	r1, r2, #31
   30318:	movs	r4, #1
   3031a:	mul.w	r3, sl, r1
   3031e:	mla	r3, r2, fp, r3
   30322:	umull	sl, fp, sl, r2
   30326:	add	fp, r3
   30328:	asrs	r1, r2, #31
   3032a:	adds	r4, #1
   3032c:	mul.w	r3, sl, r1
   30330:	mla	r3, r2, fp, r3
   30334:	umull	sl, fp, sl, r2
   30338:	add	fp, r3
   3033a:	asrs	r1, r2, #31
   3033c:	adds	r4, #1
   3033e:	mul.w	r3, sl, r1
   30342:	mla	r3, r2, fp, r3
   30346:	umull	sl, fp, sl, r2
   3034a:	add	fp, r3
   3034c:	adds	r4, #1
   3034e:	cmp	r4, #6
   30350:	ble.n	303c6 <pretty_size_snprintf@@Base+0x132>
   30352:	vmov	r2, s17
   30356:	movs	r3, #0
   30358:	ldr	r1, [pc, #376]	; (304d4 <pretty_size_snprintf@@Base+0x240>)
   3035a:	movs	r0, #1
   3035c:	add	r1, pc
   3035e:	strb	r3, [r2, #0]
   30360:	mov	r2, r4
   30362:	blx	87f4 <__printf_chk@plt+0x4>
   30366:	ldr	r3, [pc, #368]	; (304d8 <pretty_size_snprintf@@Base+0x244>)
   30368:	ldr	r1, [pc, #368]	; (304dc <pretty_size_snprintf@@Base+0x248>)
   3036a:	movw	r2, #451	; 0x1c3
   3036e:	ldr	r0, [pc, #368]	; (304e0 <pretty_size_snprintf@@Base+0x24c>)
   30370:	add	r3, pc
   30372:	add	r1, pc
   30374:	add	r0, pc
   30376:	blx	899c <__assert_fail@plt>
   3037a:	movs	r4, #0
   3037c:	b.n	30328 <pretty_size_snprintf@@Base+0x94>
   3037e:	movs	r4, #0
   30380:	b.n	3033a <pretty_size_snprintf@@Base+0xa6>
   30382:	movs	r4, #0
   30384:	b.n	3034c <pretty_size_snprintf@@Base+0xb8>
   30386:	mov	r3, r2
   30388:	asrs	r4, r2, #31
   3038a:	strd	r3, r4, [sp, #24]
   3038e:	mov	r8, r6
   30390:	ldr	r3, [sp, #32]
   30392:	mov	r9, r7
   30394:	cmp	r3, #0
   30396:	beq.n	3044c <pretty_size_snprintf@@Base+0x1b8>
   30398:	movs	r4, #0
   3039a:	cmp.w	r8, #0
   3039e:	mov	r2, r8
   303a0:	sbcs.w	r1, r9, #0
   303a4:	mov	r3, r9
   303a6:	bge.n	303b0 <pretty_size_snprintf@@Base+0x11c>
   303a8:	rsbs	r2, r8, #0
   303ac:	sbc.w	r3, r9, r9, lsl #1
   303b0:	ldrd	r0, r1, [sp, #24]
   303b4:	cmp	r2, r0
   303b6:	sbcs	r3, r1
   303b8:	bge.n	30410 <pretty_size_snprintf@@Base+0x17c>
   303ba:	cmp	r4, #0
   303bc:	bne.n	3034e <pretty_size_snprintf@@Base+0xba>
   303be:	mov.w	sl, #1
   303c2:	mov.w	fp, #0
   303c6:	mov	r1, fp
   303c8:	mov	r0, sl
   303ca:	bl	393d8 <btrfs_util_strerror@@Base+0x6d0>
   303ce:	ldr	r3, [sp, #32]
   303d0:	mov	r1, r7
   303d2:	vmov	s16, r0
   303d6:	mov	r0, r6
   303d8:	cmp	r3, #0
   303da:	beq.n	3045c <pretty_size_snprintf@@Base+0x1c8>
   303dc:	bl	393e8 <btrfs_util_strerror@@Base+0x6e0>
   303e0:	vmov	s15, r0
   303e4:	ldr	r3, [sp, #36]	; 0x24
   303e6:	vmov	r0, s17
   303ea:	movs	r2, #1
   303ec:	vdiv.f32	s14, s15, s16
   303f0:	mov	r1, r5
   303f2:	ldr.w	r3, [r3, r4, lsl #2]
   303f6:	str	r3, [sp, #16]
   303f8:	ldr	r3, [pc, #232]	; (304e4 <pretty_size_snprintf@@Base+0x250>)
   303fa:	add	r3, pc
   303fc:	str	r3, [sp, #0]
   303fe:	mov.w	r3, #4294967295	; 0xffffffff
   30402:	vcvt.f64.f32	d7, s14
   30406:	vstr	d7, [sp, #8]
   3040a:	blx	8984 <__snprintf_chk@plt>
   3040e:	b.n	302e4 <pretty_size_snprintf@@Base+0x50>
   30410:	mov	r0, r8
   30412:	mov	r1, r9
   30414:	ldrd	r2, r3, [sp, #24]
   30418:	mov	r6, r8
   3041a:	bl	39464 <btrfs_util_strerror@@Base+0x75c>
   3041e:	mov	r7, r9
   30420:	adds	r4, #1
   30422:	mov	r8, r0
   30424:	mov	r9, r1
   30426:	b.n	3039a <pretty_size_snprintf@@Base+0x106>
   30428:	mov	r0, r8
   3042a:	mov	r1, r9
   3042c:	ldrd	r2, r3, [sp, #24]
   30430:	adds	r4, #1
   30432:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   30436:	mov	r6, r8
   30438:	mov	r7, r9
   3043a:	mov	r8, r0
   3043c:	mov	r9, r1
   3043e:	ldrd	r2, r3, [sp, #24]
   30442:	cmp	r9, r3
   30444:	it	eq
   30446:	cmpeq	r8, r2
   30448:	bcs.n	30428 <pretty_size_snprintf@@Base+0x194>
   3044a:	b.n	303ba <pretty_size_snprintf@@Base+0x126>
   3044c:	ldr	r4, [sp, #32]
   3044e:	b.n	3043e <pretty_size_snprintf@@Base+0x1aa>
   30450:	mov.w	sl, #1
   30454:	mov.w	fp, #0
   30458:	movs	r4, #0
   3045a:	b.n	303c6 <pretty_size_snprintf@@Base+0x132>
   3045c:	bl	393d8 <btrfs_util_strerror@@Base+0x6d0>
   30460:	b.n	303e0 <pretty_size_snprintf@@Base+0x14c>
   30462:	ldr	r3, [pc, #132]	; (304e8 <pretty_size_snprintf@@Base+0x254>)
   30464:	ldr	r0, [r2, r3]
   30466:	bic.w	r3, r1, #1024	; 0x400
   3046a:	ldr	r2, [pc, #128]	; (304ec <pretty_size_snprintf@@Base+0x258>)
   3046c:	movs	r1, #1
   3046e:	add	r2, pc
   30470:	ldr	r0, [r0, #0]
   30472:	blx	881c <__fprintf_chk@plt+0x4>
   30476:	ldr	r3, [pc, #120]	; (304f0 <pretty_size_snprintf@@Base+0x25c>)
   30478:	ldr	r1, [pc, #120]	; (304f4 <pretty_size_snprintf@@Base+0x260>)
   3047a:	mov.w	r2, #394	; 0x18a
   3047e:	ldr	r0, [pc, #120]	; (304f8 <pretty_size_snprintf@@Base+0x264>)
   30480:	add	r3, pc
   30482:	add	r1, pc
   30484:	add	r0, pc
   30486:	b.n	30376 <pretty_size_snprintf@@Base+0xe2>
   30488:	ldr	r3, [pc, #112]	; (304fc <pretty_size_snprintf@@Base+0x268>)
   3048a:	mov.w	r2, #1024	; 0x400
   3048e:	mov.w	sl, #1024	; 0x400
   30492:	add	r3, pc
   30494:	str	r3, [sp, #36]	; 0x24
   30496:	uxtb	r1, r1
   30498:	mov.w	fp, #0
   3049c:	subs	r1, #1
   3049e:	cmp	r1, #4
   304a0:	bhi.w	30386 <pretty_size_snprintf@@Base+0xf2>
   304a4:	add	r3, pc, #8	; (adr r3, 304b0 <pretty_size_snprintf@@Base+0x21c>)
   304a6:	ldr.w	r1, [r3, r1, lsl #2]
   304aa:	add	r3, r1
   304ac:	bx	r3
   304ae:	nop
   304b0:			; <UNDEFINED> instruction: 0xffa1ffff
   304b4:	mrc2	15, 6, pc, cr3, cr15, {7}
   304b8:	mcr2	15, 6, pc, cr15, cr15, {7}	; <UNPREDICTABLE>
   304bc:	mcr2	15, 6, pc, cr11, cr15, {7}	; <UNPREDICTABLE>
   304c0:	mcr2	15, 3, pc, cr7, cr15, {7}	; <UNPREDICTABLE>
   304c4:	ldr	r2, [pc, #888]	; (30840 <parse_size@@Base+0x4c>)
   304c6:	movs	r3, r0
   304c8:	adds	r4, #100	; 0x64
   304ca:	movs	r2, r0
   304cc:	ldc2l	0, cr0, [r7]
   304d0:	ldrsh	r2, [r6, r2]
   304d2:	movs	r3, r0
   304d4:	adds	r3, #219	; 0xdb
   304d6:	movs	r2, r0
   304d8:	subs	r1, #237	; 0xed
   304da:	movs	r2, r0
   304dc:	adds	r3, #134	; 0x86
   304de:	movs	r2, r0
   304e0:	stmia	r7!, {r1, r2, r4, r5, r6, r7}
   304e2:	movs	r0, r0
   304e4:	adds	r3, #112	; 0x70
   304e6:	movs	r2, r0
   304e8:	lsls	r4, r6, #8
   304ea:	movs	r0, r0
   304ec:	adds	r3, #3
   304ee:	movs	r2, r0
   304f0:	subs	r0, #221	; 0xdd
   304f2:	movs	r2, r0
   304f4:	adds	r2, #118	; 0x76
   304f6:	movs	r2, r0
   304f8:	stmia	r6!, {r1, r2, r5, r6, r7}
   304fa:	movs	r0, r0
   304fc:	ldrb	r6, [r5, r4]
   304fe:	movs	r3, r0

00030500 <pretty_size_mode@@Base>:
   30500:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
   30504:	mov	r7, r0
   30506:	ldr	r0, [pc, #68]	; (3054c <pretty_size_mode@@Base+0x4c>)
   30508:	mov	r8, r2
   3050a:	mov	r6, r1
   3050c:	ldr.w	r9, [pc, #64]	; 30550 <pretty_size_mode@@Base+0x50>
   30510:	add	r0, pc
   30512:	blx	88f8 <__tls_get_addr@plt>
   30516:	movs	r1, #10
   30518:	add.w	r4, r0, r9
   3051c:	mov	r5, r0
   3051e:	ldr.w	r0, [r0, r9]
   30522:	adds	r4, #4
   30524:	add.w	r4, r4, r0, lsl #5
   30528:	adds	r0, #1
   3052a:	bl	3922c <btrfs_util_strerror@@Base+0x524>
   3052e:	movs	r3, #32
   30530:	mov	r2, r4
   30532:	mov	r0, r7
   30534:	str.w	r1, [r9, r5]
   30538:	mov	r1, r6
   3053a:	str.w	r8, [sp]
   3053e:	bl	30294 <pretty_size_snprintf@@Base>
   30542:	mov	r0, r4
   30544:	add	sp, #12
   30546:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   3054a:	nop
   3054c:	ldr	r2, [pc, #528]	; (30760 <set_label@@Base+0xce>)
   3054e:	movs	r3, r0
   30550:	movs	r0, r0
	...

00030554 <get_label_unmounted@@Base>:
   30554:	push	{r0, r1, r4, r5, r6, lr}
   30556:	mov	r5, r0
   30558:	mov	r6, r1
   3055a:	bl	30250 <check_mounted@@Base>
   3055e:	subs	r2, r0, #0
   30560:	bge.n	30572 <get_label_unmounted@@Base+0x1e>
   30562:	ldr	r0, [pc, #68]	; (305a8 <get_label_unmounted@@Base+0x54>)
   30564:	mov	r1, r5
   30566:	add	r0, pc
   30568:	bl	1747c <__btrfs_error@@Base>
   3056c:	mov.w	r0, #4294967295	; 0xffffffff
   30570:	b.n	305a4 <get_label_unmounted@@Base+0x50>
   30572:	mov	r0, r5
   30574:	movs	r4, #0
   30576:	movs	r2, #0
   30578:	movs	r3, #0
   3057a:	str	r4, [sp, #0]
   3057c:	bl	1e2ec <open_ctree@@Base>
   30580:	mov	r5, r0
   30582:	cmp	r0, #0
   30584:	beq.n	3056c <get_label_unmounted@@Base+0x18>
   30586:	ldr.w	r3, [r0, #464]	; 0x1d0
   3058a:	movs	r2, #255	; 0xff
   3058c:	mov	r0, r6
   3058e:	ldr.w	r1, [r3, #308]	; 0x134
   30592:	addw	r1, r1, #299	; 0x12b
   30596:	bl	2fb80 <__strncpy_null@@Base>
   3059a:	ldr.w	r0, [r5, #464]	; 0x1d0
   3059e:	bl	1d38c <close_ctree_fs_info@@Base>
   305a2:	mov	r0, r4
   305a4:	add	sp, #8
   305a6:	pop	{r4, r5, r6, pc}
   305a8:	adds	r2, #55	; 0x37
   305aa:	movs	r2, r0

000305ac <get_label_mounted@@Base>:
   305ac:	ldr	r2, [pc, #160]	; (30650 <get_label_mounted@@Base+0xa4>)
   305ae:	ldr	r3, [pc, #164]	; (30654 <get_label_mounted@@Base+0xa8>)
   305b0:	add	r2, pc
   305b2:	push	{r4, r5, r6, r7, lr}
   305b4:	mov	r5, r1
   305b6:	ldr	r3, [r2, r3]
   305b8:	sub	sp, #268	; 0x10c
   305ba:	mov.w	r1, #262144	; 0x40000
   305be:	mov	r7, r0
   305c0:	ldr	r3, [r3, #0]
   305c2:	str	r3, [sp, #260]	; 0x104
   305c4:	mov.w	r3, #0
   305c8:	blx	8608 <open64@plt>
   305cc:	subs	r4, r0, #0
   305ce:	bge.n	305f2 <get_label_mounted@@Base+0x46>
   305d0:	ldr	r0, [pc, #132]	; (30658 <get_label_mounted@@Base+0xac>)
   305d2:	mov	r1, r7
   305d4:	mov.w	r5, #4294967295	; 0xffffffff
   305d8:	add	r0, pc
   305da:	bl	1747c <__btrfs_error@@Base>
   305de:	ldr	r2, [pc, #124]	; (3065c <get_label_mounted@@Base+0xb0>)
   305e0:	ldr	r3, [pc, #112]	; (30654 <get_label_mounted@@Base+0xa8>)
   305e2:	add	r2, pc
   305e4:	ldr	r3, [r2, r3]
   305e6:	ldr	r2, [r3, #0]
   305e8:	ldr	r3, [sp, #260]	; 0x104
   305ea:	eors	r2, r3
   305ec:	beq.n	30644 <get_label_mounted@@Base+0x98>
   305ee:	blx	84cc <__stack_chk_fail@plt>
   305f2:	add	r6, sp, #4
   305f4:	mov.w	r2, #256	; 0x100
   305f8:	movs	r1, #0
   305fa:	mov	r0, r6
   305fc:	blx	8780 <memset@plt+0x4>
   30600:	ldr	r1, [pc, #72]	; (3064c <get_label_mounted@@Base+0xa0>)
   30602:	mov	r2, r6
   30604:	mov	r0, r4
   30606:	blx	8578 <ioctl@plt>
   3060a:	cmp	r0, #0
   3060c:	bge.n	30630 <get_label_mounted@@Base+0x84>
   3060e:	blx	8740 <__errno_location@plt>
   30612:	ldr	r3, [r0, #0]
   30614:	mov	r5, r0
   30616:	cmp	r3, #25
   30618:	beq.n	30624 <get_label_mounted@@Base+0x78>
   3061a:	ldr	r0, [pc, #68]	; (30660 <get_label_mounted@@Base+0xb4>)
   3061c:	mov	r1, r7
   3061e:	add	r0, pc
   30620:	bl	1747c <__btrfs_error@@Base>
   30624:	ldr	r5, [r5, #0]
   30626:	mov	r0, r4
   30628:	negs	r5, r5
   3062a:	blx	8960 <close@plt>
   3062e:	b.n	305de <get_label_mounted@@Base+0x32>
   30630:	movs	r2, #255	; 0xff
   30632:	mov	r1, r6
   30634:	mov	r0, r5
   30636:	movs	r5, #0
   30638:	bl	2fb80 <__strncpy_null@@Base>
   3063c:	mov	r0, r4
   3063e:	blx	8960 <close@plt>
   30642:	b.n	305de <get_label_mounted@@Base+0x32>
   30644:	mov	r0, r5
   30646:	add	sp, #268	; 0x10c
   30648:	pop	{r4, r5, r6, r7, pc}
   3064a:	nop
   3064c:	str	r4, [sp, #196]	; 0xc4
   3064e:	strh	r0, [r0, #8]
   30650:	blx	fp
   30652:	movs	r3, r0
   30654:	lsls	r4, r4, #8
   30656:	movs	r0, r0
   30658:	adds	r1, #236	; 0xec
   3065a:	movs	r2, r0
   3065c:			; <UNDEFINED> instruction: 0x47a6
   3065e:	movs	r3, r0
   30660:	adds	r1, #190	; 0xbe
   30662:	movs	r2, r0

00030664 <get_label@@Base>:
   30664:	push	{r0, r1, r4, lr}
   30666:	mov	r4, r0
   30668:	str	r1, [sp, #4]
   3066a:	bl	2faa4 <path_is_reg_or_block_device@@Base>
   3066e:	ldr	r1, [sp, #4]
   30670:	cmp	r0, #0
   30672:	bne.n	30680 <get_label@@Base+0x1c>
   30674:	mov	r0, r4
   30676:	add	sp, #8
   30678:	ldmia.w	sp!, {r4, lr}
   3067c:	b.w	305ac <get_label_mounted@@Base>
   30680:	ble.n	3068e <get_label@@Base+0x2a>
   30682:	mov	r0, r4
   30684:	add	sp, #8
   30686:	ldmia.w	sp!, {r4, lr}
   3068a:	b.w	30554 <get_label_unmounted@@Base>
   3068e:	add	sp, #8
   30690:	pop	{r4, pc}

00030692 <set_label@@Base>:
   30692:	ldr	r2, [pc, #312]	; (307cc <set_label@@Base+0x13a>)
   30694:	ldr	r3, [pc, #312]	; (307d0 <set_label@@Base+0x13e>)
   30696:	add	r2, pc
   30698:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   3069c:	mov	r5, r0
   3069e:	ldr	r3, [r2, r3]
   306a0:	sub	sp, #272	; 0x110
   306a2:	mov	r0, r1
   306a4:	mov	r6, r1
   306a6:	ldr	r3, [r3, #0]
   306a8:	str	r3, [sp, #268]	; 0x10c
   306aa:	mov.w	r3, #0
   306ae:	blx	8704 <strlen@plt>
   306b2:	cmp	r0, #255	; 0xff
   306b4:	bhi.n	306da <set_label@@Base+0x48>
   306b6:	mov	r0, r5
   306b8:	bl	2faa4 <path_is_reg_or_block_device@@Base>
   306bc:	subs	r4, r0, #0
   306be:	bne.n	30740 <set_label@@Base+0xae>
   306c0:	mov.w	r1, #262144	; 0x40000
   306c4:	mov	r0, r5
   306c6:	blx	8608 <open64@plt>
   306ca:	subs	r7, r0, #0
   306cc:	bge.n	306e8 <set_label@@Base+0x56>
   306ce:	ldr	r0, [pc, #260]	; (307d4 <set_label@@Base+0x142>)
   306d0:	mov	r1, r5
   306d2:	add	r0, pc
   306d4:	bl	1747c <__btrfs_error@@Base>
   306d8:	b.n	30720 <set_label@@Base+0x8e>
   306da:	ldr	r0, [pc, #252]	; (307d8 <set_label@@Base+0x146>)
   306dc:	movs	r2, #255	; 0xff
   306de:	mov	r1, r6
   306e0:	add	r0, pc
   306e2:	bl	1747c <__btrfs_error@@Base>
   306e6:	b.n	30720 <set_label@@Base+0x8e>
   306e8:	add.w	r8, sp, #12
   306ec:	mov.w	r2, #256	; 0x100
   306f0:	mov	r1, r4
   306f2:	mov	r0, r8
   306f4:	blx	8780 <memset@plt+0x4>
   306f8:	movs	r2, #255	; 0xff
   306fa:	mov	r1, r6
   306fc:	mov	r0, r8
   306fe:	bl	2fb80 <__strncpy_null@@Base>
   30702:	ldr	r1, [pc, #196]	; (307c8 <set_label@@Base+0x136>)
   30704:	mov	r2, r8
   30706:	mov	r0, r7
   30708:	blx	8578 <ioctl@plt>
   3070c:	cmp	r0, #0
   3070e:	bge.n	30726 <set_label@@Base+0x94>
   30710:	ldr	r0, [pc, #200]	; (307dc <set_label@@Base+0x14a>)
   30712:	mov	r1, r5
   30714:	add	r0, pc
   30716:	bl	1747c <__btrfs_error@@Base>
   3071a:	mov	r0, r7
   3071c:	blx	8960 <close@plt>
   30720:	mov.w	r4, #4294967295	; 0xffffffff
   30724:	b.n	3072c <set_label@@Base+0x9a>
   30726:	mov	r0, r7
   30728:	blx	8960 <close@plt>
   3072c:	ldr	r2, [pc, #176]	; (307e0 <set_label@@Base+0x14e>)
   3072e:	ldr	r3, [pc, #160]	; (307d0 <set_label@@Base+0x13e>)
   30730:	add	r2, pc
   30732:	ldr	r3, [r2, r3]
   30734:	ldr	r2, [r3, #0]
   30736:	ldr	r3, [sp, #268]	; 0x10c
   30738:	eors	r2, r3
   3073a:	beq.n	307c0 <set_label@@Base+0x12e>
   3073c:	blx	84cc <__stack_chk_fail@plt>
   30740:	ble.n	3072c <set_label@@Base+0x9a>
   30742:	mov	r0, r5
   30744:	bl	30250 <check_mounted@@Base>
   30748:	subs	r4, r0, #0
   3074a:	bge.n	30756 <set_label@@Base+0xc4>
   3074c:	ldr	r0, [pc, #148]	; (307e4 <set_label@@Base+0x152>)
   3074e:	mov	r2, r4
   30750:	mov	r1, r5
   30752:	add	r0, pc
   30754:	b.n	306e2 <set_label@@Base+0x50>
   30756:	beq.n	30760 <set_label@@Base+0xce>
   30758:	ldr	r0, [pc, #140]	; (307e8 <set_label@@Base+0x156>)
   3075a:	mov	r1, r5
   3075c:	add	r0, pc
   3075e:	b.n	306d4 <set_label@@Base+0x42>
   30760:	mov	r0, r5
   30762:	mov.w	r8, #1
   30766:	movs	r2, #0
   30768:	movs	r3, #0
   3076a:	str.w	r8, [sp]
   3076e:	bl	1e2ec <open_ctree@@Base>
   30772:	mov	r5, r0
   30774:	cmp	r0, #0
   30776:	beq.n	30720 <set_label@@Base+0x8e>
   30778:	mov	r1, r8
   3077a:	bl	2af7c <btrfs_start_transaction@@Base>
   3077e:	cmn.w	r0, #4096	; 0x1000
   30782:	mov	r7, r0
   30784:	bls.n	3079a <set_label@@Base+0x108>
   30786:	ldr	r1, [pc, #100]	; (307ec <set_label@@Base+0x15a>)
   30788:	mov	r3, r8
   3078a:	ldr	r0, [pc, #100]	; (307f0 <set_label@@Base+0x15e>)
   3078c:	movw	r2, #507	; 0x1fb
   30790:	add	r1, pc
   30792:	adds	r1, #21
   30794:	add	r0, pc
   30796:	bl	2ff24 <test_issubvolname@@Base+0x17e>
   3079a:	ldr.w	r3, [r5, #464]	; 0x1d0
   3079e:	movs	r2, #255	; 0xff
   307a0:	mov	r1, r6
   307a2:	ldr.w	r0, [r3, #308]	; 0x134
   307a6:	addw	r0, r0, #299	; 0x12b
   307aa:	bl	2fb80 <__strncpy_null@@Base>
   307ae:	mov	r1, r5
   307b0:	mov	r0, r7
   307b2:	bl	2b1fc <btrfs_commit_transaction@@Base>
   307b6:	ldr.w	r0, [r5, #464]	; 0x1d0
   307ba:	bl	1d38c <close_ctree_fs_info@@Base>
   307be:	b.n	3072c <set_label@@Base+0x9a>
   307c0:	mov	r0, r4
   307c2:	add	sp, #272	; 0x110
   307c4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   307c8:	str	r4, [sp, #200]	; 0xc8
   307ca:	asrs	r0, r0
   307cc:	mov	sl, lr
   307ce:	movs	r3, r0
   307d0:	lsls	r4, r4, #8
   307d2:	movs	r0, r0
   307d4:	adds	r0, #242	; 0xf2
   307d6:	movs	r2, r0
   307d8:	adds	r1, #26
   307da:	movs	r2, r0
   307dc:	adds	r1, #4
   307de:	movs	r2, r0
   307e0:	mov	r0, fp
   307e2:	movs	r3, r0
   307e4:	adds	r0, #75	; 0x4b
   307e6:	movs	r2, r0
   307e8:	adds	r0, #218	; 0xda
   307ea:	movs	r2, r0
   307ec:	adds	r5, #205	; 0xcd
   307ee:	movs	r2, r0
   307f0:	str	r3, [sp, #168]	; 0xa8
	...

000307f4 <parse_size@@Base>:
   307f4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   307f8:	mov	sl, r0
   307fa:	ldr	r2, [pc, #404]	; (30990 <parse_size@@Base+0x19c>)
   307fc:	ldr	r3, [pc, #404]	; (30994 <parse_size@@Base+0x1a0>)
   307fe:	add	r2, pc
   30800:	ldr	r3, [r2, r3]
   30802:	ldr	r3, [r3, #0]
   30804:	str	r3, [sp, #4]
   30806:	mov.w	r3, #0
   3080a:	cbnz	r0, 3081a <parse_size@@Base+0x26>
   3080c:	ldr	r0, [pc, #392]	; (30998 <parse_size@@Base+0x1a4>)
   3080e:	add	r0, pc
   30810:	bl	1747c <__btrfs_error@@Base>
   30814:	movs	r0, #1
   30816:	blx	86f8 <exit@plt>
   3081a:	ldrb	r3, [r0, #0]
   3081c:	cmp	r3, #45	; 0x2d
   3081e:	bne.n	3082c <parse_size@@Base+0x38>
   30820:	mov	r1, r0
   30822:	ldr	r0, [pc, #376]	; (3099c <parse_size@@Base+0x1a8>)
   30824:	add	r0, pc
   30826:	bl	1747c <__btrfs_error@@Base>
   3082a:	b.n	30814 <parse_size@@Base+0x20>
   3082c:	movs	r2, #10
   3082e:	mov	r1, sp
   30830:	blx	87c0 <strtoull@plt>
   30834:	mov	r9, r1
   30836:	ldr	r1, [sp, #0]
   30838:	mov	r8, r0
   3083a:	cmp	r1, sl
   3083c:	bne.n	30844 <parse_size@@Base+0x50>
   3083e:	ldr	r0, [pc, #352]	; (309a0 <parse_size@@Base+0x1ac>)
   30840:	add	r0, pc
   30842:	b.n	30826 <parse_size@@Base+0x32>
   30844:	ldrb.w	fp, [r1]
   30848:	cmp.w	fp, #0
   3084c:	beq.n	30858 <parse_size@@Base+0x64>
   3084e:	ldrb	r1, [r1, #1]
   30850:	cbz	r1, 30858 <parse_size@@Base+0x64>
   30852:	ldr	r0, [pc, #336]	; (309a4 <parse_size@@Base+0x1b0>)
   30854:	add	r0, pc
   30856:	b.n	30826 <parse_size@@Base+0x32>
   30858:	blx	8740 <__errno_location@plt>
   3085c:	ldr	r3, [r0, #0]
   3085e:	cmp	r3, #34	; 0x22
   30860:	bne.n	30876 <parse_size@@Base+0x82>
   30862:	cmp.w	r9, #4294967295	; 0xffffffff
   30866:	it	eq
   30868:	cmpeq.w	r8, #4294967295	; 0xffffffff
   3086c:	bne.n	30876 <parse_size@@Base+0x82>
   3086e:	ldr	r0, [pc, #312]	; (309a8 <parse_size@@Base+0x1b4>)
   30870:	mov	r1, sl
   30872:	add	r0, pc
   30874:	b.n	30826 <parse_size@@Base+0x32>
   30876:	cmp.w	fp, #0
   3087a:	beq.n	30978 <parse_size@@Base+0x184>
   3087c:	blx	86a4 <__ctype_tolower_loc@plt>
   30880:	ldr	r3, [r0, #0]
   30882:	ldrb.w	r1, [r3, fp, lsl #2]
   30886:	sub.w	r3, r1, #98	; 0x62
   3088a:	cmp	r3, #18
   3088c:	bhi.n	30972 <parse_size@@Base+0x17e>
   3088e:	tbb	[pc, r3]
   30892:	strb	r3, [r6, #1]
   30894:	lsrs	r0, r6, #9
   30896:	str	r0, [r6, #116]	; 0x74
   30898:	strb	r0, [r6, #1]
   3089a:	ldr	r0, [r6, #84]	; 0x54
   3089c:	ldr	r0, [r6, #36]	; 0x24
   3089e:	strb	r0, [r6, #1]
   308a0:	strb	r2, [r4, #1]
   308a2:	strb	r0, [r6, #1]
   308a4:	lsls	r4, r4, #1
   308a6:	mov.w	r2, #1024	; 0x400
   308aa:	movs	r3, #0
   308ac:	orr.w	r3, r3, r2, lsr #22
   308b0:	lsls	r2, r2, #10
   308b2:	lsls	r3, r3, #10
   308b4:	orr.w	r3, r3, r2, lsr #22
   308b8:	lsls	r2, r2, #10
   308ba:	lsls	r3, r3, #10
   308bc:	orr.w	r3, r3, r2, lsr #22
   308c0:	lsls	r2, r2, #10
   308c2:	lsls	r3, r3, #10
   308c4:	orr.w	r3, r3, r2, lsr #22
   308c8:	lsls	r2, r2, #10
   308ca:	lsls	r3, r3, #10
   308cc:	orr.w	r3, r3, r2, lsr #22
   308d0:	lsls	r2, r2, #10
   308d2:	movs	r1, #0
   308d4:	sub.w	ip, r1, #32
   308d8:	rsb	r0, r1, #32
   308dc:	lsl.w	r7, r9, r1
   308e0:	lsl.w	ip, r8, ip
   308e4:	lsr.w	r0, r8, r0
   308e8:	orr.w	r7, r7, ip
   308ec:	lsl.w	r6, r8, r1
   308f0:	orrs	r7, r0
   308f2:	cmp	r6, #0
   308f4:	sbcs.w	r0, r7, #0
   308f8:	bge.n	3097e <parse_size@@Base+0x18a>
   308fa:	rsb	r0, r1, #64	; 0x40
   308fe:	movs	r1, #0
   30900:	adds	r1, #1
   30902:	cmp	r1, #64	; 0x40
   30904:	beq.n	30934 <parse_size@@Base+0x140>
   30906:	sub.w	r7, r1, #32
   3090a:	rsb	r6, r1, #32
   3090e:	lsl.w	r5, r3, r1
   30912:	lsl.w	r7, r2, r7
   30916:	lsr.w	r6, r2, r6
   3091a:	orrs	r5, r7
   3091c:	lsl.w	r4, r2, r1
   30920:	orrs	r5, r6
   30922:	cmp	r4, #0
   30924:	sbcs.w	r6, r5, #0
   30928:	bge.n	30900 <parse_size@@Base+0x10c>
   3092a:	rsb	r1, r1, #64	; 0x40
   3092e:	add	r1, r0
   30930:	cmp	r1, #65	; 0x41
   30932:	bgt.n	3086e <parse_size@@Base+0x7a>
   30934:	mul.w	r3, r8, r3
   30938:	mla	r3, r2, r9, r3
   3093c:	umull	r0, r1, r8, r2
   30940:	ldr	r2, [pc, #104]	; (309ac <parse_size@@Base+0x1b8>)
   30942:	add	r1, r3
   30944:	ldr	r3, [pc, #76]	; (30994 <parse_size@@Base+0x1a0>)
   30946:	add	r2, pc
   30948:	ldr	r3, [r2, r3]
   3094a:	ldr	r2, [r3, #0]
   3094c:	ldr	r3, [sp, #4]
   3094e:	eors	r2, r3
   30950:	beq.n	30988 <parse_size@@Base+0x194>
   30952:	blx	84cc <__stack_chk_fail@plt>
   30956:	movs	r2, #1
   30958:	b.n	308aa <parse_size@@Base+0xb6>
   3095a:	movs	r2, #1
   3095c:	movs	r3, #0
   3095e:	b.n	308b2 <parse_size@@Base+0xbe>
   30960:	movs	r2, #1
   30962:	movs	r3, #0
   30964:	b.n	308ba <parse_size@@Base+0xc6>
   30966:	movs	r2, #1
   30968:	movs	r3, #0
   3096a:	b.n	308c2 <parse_size@@Base+0xce>
   3096c:	movs	r2, #1
   3096e:	movs	r3, #0
   30970:	b.n	308ca <parse_size@@Base+0xd6>
   30972:	ldr	r0, [pc, #60]	; (309b0 <parse_size@@Base+0x1bc>)
   30974:	add	r0, pc
   30976:	b.n	30826 <parse_size@@Base+0x32>
   30978:	movs	r2, #1
   3097a:	movs	r3, #0
   3097c:	b.n	308d2 <parse_size@@Base+0xde>
   3097e:	adds	r1, #1
   30980:	cmp	r1, #64	; 0x40
   30982:	bne.n	308d4 <parse_size@@Base+0xe0>
   30984:	movs	r0, #0
   30986:	b.n	308fe <parse_size@@Base+0x10a>
   30988:	add	sp, #12
   3098a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3098e:	nop
   30990:	cmp	sl, r1
   30992:	movs	r3, r0
   30994:	lsls	r4, r4, #8
   30996:	movs	r0, r0
   30998:	adds	r0, #78	; 0x4e
   3099a:	movs	r2, r0
   3099c:	adds	r0, #76	; 0x4c
   3099e:	movs	r2, r0
   309a0:	adds	r0, #85	; 0x55
   309a2:	movs	r2, r0
   309a4:	adds	r0, #92	; 0x5c
   309a6:	movs	r2, r0
   309a8:	adds	r0, #119	; 0x77
   309aa:	movs	r2, r0
   309ac:	add	r2, r8
   309ae:	movs	r3, r0
   309b0:	cmp	r7, #154	; 0x9a
   309b2:	movs	r2, r0

000309b4 <parse_qgroupid@@Base>:
   309b4:	ldr	r2, [pc, #220]	; (30a94 <parse_qgroupid@@Base+0xe0>)
   309b6:	movs	r1, #47	; 0x2f
   309b8:	ldr	r3, [pc, #220]	; (30a98 <parse_qgroupid@@Base+0xe4>)
   309ba:	add	r2, pc
   309bc:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   309c0:	sub	sp, #24
   309c2:	ldr	r3, [r2, r3]
   309c4:	mov	r4, r0
   309c6:	ldr	r3, [r3, #0]
   309c8:	str	r3, [sp, #20]
   309ca:	mov.w	r3, #0
   309ce:	blx	8710 <strchr@plt>
   309d2:	mov	r6, r0
   309d4:	mov	r0, r4
   309d6:	blx	8704 <strlen@plt>
   309da:	movs	r3, #0
   309dc:	str	r3, [sp, #4]
   309de:	ldrb	r3, [r4, #0]
   309e0:	cmp	r3, #47	; 0x2f
   309e2:	add.w	r5, r4, r0
   309e6:	beq.n	30a3c <parse_qgroupid@@Base+0x88>
   309e8:	add.w	r8, sp, #4
   309ec:	movs	r2, #10
   309ee:	mov	r0, r4
   309f0:	mov	r1, r8
   309f2:	cbnz	r6, 30a16 <parse_qgroupid@@Base+0x62>
   309f4:	blx	87c0 <strtoull@plt>
   309f8:	ldr	r3, [sp, #4]
   309fa:	cmp	r3, r5
   309fc:	strd	r0, r1, [sp, #8]
   30a00:	bne.n	30a3c <parse_qgroupid@@Base+0x88>
   30a02:	ldr	r2, [pc, #152]	; (30a9c <parse_qgroupid@@Base+0xe8>)
   30a04:	ldr	r3, [pc, #144]	; (30a98 <parse_qgroupid@@Base+0xe4>)
   30a06:	add	r2, pc
   30a08:	ldr	r3, [r2, r3]
   30a0a:	ldr	r2, [r3, #0]
   30a0c:	ldr	r3, [sp, #20]
   30a0e:	eors	r2, r3
   30a10:	beq.n	30a8c <parse_qgroupid@@Base+0xd8>
   30a12:	blx	84cc <__stack_chk_fail@plt>
   30a16:	blx	87c0 <strtoull@plt>
   30a1a:	mov	r7, r0
   30a1c:	ldr	r0, [sp, #4]
   30a1e:	cmp	r0, r6
   30a20:	bne.n	30a3c <parse_qgroupid@@Base+0x88>
   30a22:	adds	r0, #1
   30a24:	movs	r2, #10
   30a26:	mov	r1, r8
   30a28:	blx	87c0 <strtoull@plt>
   30a2c:	ldr	r3, [sp, #4]
   30a2e:	cmp	r3, r5
   30a30:	strd	r0, r1, [sp, #8]
   30a34:	bne.n	30a3c <parse_qgroupid@@Base+0x88>
   30a36:	orr.w	r1, r1, r7, lsl #16
   30a3a:	b.n	30a02 <parse_qgroupid@@Base+0x4e>
   30a3c:	mov	r0, r4
   30a3e:	bl	323f8 <btrfs_util_is_subvolume@@Base>
   30a42:	mov	r1, r0
   30a44:	cbnz	r0, 30a7a <parse_qgroupid@@Base+0xc6>
   30a46:	mov	r0, r4
   30a48:	blx	8608 <open64@plt>
   30a4c:	subs	r6, r0, #0
   30a4e:	blt.n	30a7a <parse_qgroupid@@Base+0xc6>
   30a50:	add	r1, sp, #8
   30a52:	bl	177e4 <lookup_path_rootid@@Base>
   30a56:	mov	r5, r0
   30a58:	cbz	r0, 30a6a <parse_qgroupid@@Base+0xb6>
   30a5a:	blx	8740 <__errno_location@plt>
   30a5e:	negs	r3, r5
   30a60:	str	r3, [r0, #0]
   30a62:	ldr	r0, [pc, #60]	; (30aa0 <parse_qgroupid@@Base+0xec>)
   30a64:	add	r0, pc
   30a66:	bl	1747c <__btrfs_error@@Base>
   30a6a:	mov	r0, r6
   30a6c:	blx	8960 <close@plt>
   30a70:	cmp	r5, #0
   30a72:	blt.n	30a7a <parse_qgroupid@@Base+0xc6>
   30a74:	ldrd	r0, r1, [sp, #8]
   30a78:	b.n	30a02 <parse_qgroupid@@Base+0x4e>
   30a7a:	ldr	r0, [pc, #40]	; (30aa4 <parse_qgroupid@@Base+0xf0>)
   30a7c:	mov	r1, r4
   30a7e:	add	r0, pc
   30a80:	bl	1747c <__btrfs_error@@Base>
   30a84:	mov.w	r0, #4294967295	; 0xffffffff
   30a88:	blx	86f8 <exit@plt>
   30a8c:	add	sp, #24
   30a8e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   30a92:	nop
   30a94:	mvns	r6, r1
   30a96:	movs	r3, r0
   30a98:	lsls	r4, r4, #8
   30a9a:	movs	r0, r0
   30a9c:	bics	r2, r0
   30a9e:	movs	r3, r0
   30aa0:	cmp	r6, #199	; 0xc7
   30aa2:	movs	r2, r0
   30aa4:	cmp	r6, #202	; 0xca
   30aa6:	movs	r2, r0

00030aa8 <parse_csum_type@@Base>:
   30aa8:	ldr	r1, [pc, #100]	; (30b10 <parse_csum_type@@Base+0x68>)
   30aaa:	push	{r4, lr}
   30aac:	add	r1, pc
   30aae:	mov	r4, r0
   30ab0:	blx	850c <strcasecmp@plt>
   30ab4:	cbz	r0, 30b04 <parse_csum_type@@Base+0x5c>
   30ab6:	ldr	r1, [pc, #92]	; (30b14 <parse_csum_type@@Base+0x6c>)
   30ab8:	mov	r0, r4
   30aba:	add	r1, pc
   30abc:	blx	850c <strcasecmp@plt>
   30ac0:	cbz	r0, 30b02 <parse_csum_type@@Base+0x5a>
   30ac2:	ldr	r1, [pc, #84]	; (30b18 <parse_csum_type@@Base+0x70>)
   30ac4:	mov	r0, r4
   30ac6:	add	r1, pc
   30ac8:	blx	850c <strcasecmp@plt>
   30acc:	cbz	r0, 30b02 <parse_csum_type@@Base+0x5a>
   30ace:	ldr	r1, [pc, #76]	; (30b1c <parse_csum_type@@Base+0x74>)
   30ad0:	mov	r0, r4
   30ad2:	add	r1, pc
   30ad4:	blx	850c <strcasecmp@plt>
   30ad8:	cbz	r0, 30b06 <parse_csum_type@@Base+0x5e>
   30ada:	ldr	r1, [pc, #68]	; (30b20 <parse_csum_type@@Base+0x78>)
   30adc:	mov	r0, r4
   30ade:	add	r1, pc
   30ae0:	blx	850c <strcasecmp@plt>
   30ae4:	cbz	r0, 30b0a <parse_csum_type@@Base+0x62>
   30ae6:	ldr	r1, [pc, #60]	; (30b24 <parse_csum_type@@Base+0x7c>)
   30ae8:	mov	r0, r4
   30aea:	add	r1, pc
   30aec:	blx	850c <strcasecmp@plt>
   30af0:	cbz	r0, 30b0a <parse_csum_type@@Base+0x62>
   30af2:	ldr	r0, [pc, #52]	; (30b28 <parse_csum_type@@Base+0x80>)
   30af4:	mov	r1, r4
   30af6:	add	r0, pc
   30af8:	bl	1747c <__btrfs_error@@Base>
   30afc:	movs	r0, #1
   30afe:	blx	86f8 <exit@plt>
   30b02:	movs	r0, #1
   30b04:	pop	{r4, pc}
   30b06:	movs	r0, #2
   30b08:	b.n	30b04 <parse_csum_type@@Base+0x5c>
   30b0a:	movs	r0, #3
   30b0c:	b.n	30b04 <parse_csum_type@@Base+0x5c>
   30b0e:	nop
   30b10:	cmp	r6, #195	; 0xc3
   30b12:	movs	r2, r0
   30b14:	cmp	r6, #188	; 0xbc
   30b16:	movs	r2, r0
   30b18:	cmp	r6, #185	; 0xb9
   30b1a:	movs	r2, r0
   30b1c:	cmp	r6, #180	; 0xb4
   30b1e:	movs	r2, r0
   30b20:	cmp	r6, #175	; 0xaf
   30b22:	movs	r2, r0
   30b24:	cmp	r6, #171	; 0xab
   30b26:	movs	r2, r0
   30b28:	cmp	r6, #166	; 0xa6
   30b2a:	movs	r2, r0

00030b2c <open_file_or_dir3@@Base>:
   30b2c:	push	{r4, r5, r6, lr}
   30b2e:	mov	r6, r2
   30b30:	ldr	r2, [pc, #136]	; (30bbc <open_file_or_dir3@@Base+0x90>)
   30b32:	sub	sp, #112	; 0x70
   30b34:	ldr	r3, [pc, #136]	; (30bc0 <open_file_or_dir3@@Base+0x94>)
   30b36:	mov	r4, r1
   30b38:	add	r2, pc
   30b3a:	mov	r1, sp
   30b3c:	mov	r5, r0
   30b3e:	ldr	r3, [r2, r3]
   30b40:	ldr	r3, [r3, #0]
   30b42:	str	r3, [sp, #108]	; 0x6c
   30b44:	mov.w	r3, #0
   30b48:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   30b4c:	cmp	r0, #0
   30b4e:	bge.n	30b68 <open_file_or_dir3@@Base+0x3c>
   30b50:	mov.w	r0, #4294967295	; 0xffffffff
   30b54:	ldr	r2, [pc, #108]	; (30bc4 <open_file_or_dir3@@Base+0x98>)
   30b56:	ldr	r3, [pc, #104]	; (30bc0 <open_file_or_dir3@@Base+0x94>)
   30b58:	add	r2, pc
   30b5a:	ldr	r3, [r2, r3]
   30b5c:	ldr	r2, [r3, #0]
   30b5e:	ldr	r3, [sp, #108]	; 0x6c
   30b60:	eors	r2, r3
   30b62:	beq.n	30bb6 <open_file_or_dir3@@Base+0x8a>
   30b64:	blx	84cc <__stack_chk_fail@plt>
   30b68:	ldr	r3, [sp, #16]
   30b6a:	and.w	r2, r3, #61440	; 0xf000
   30b6e:	cmp.w	r2, #16384	; 0x4000
   30b72:	bne.n	30b98 <open_file_or_dir3@@Base+0x6c>
   30b74:	mov	r0, r5
   30b76:	blx	85fc <opendir@plt>
   30b7a:	str	r0, [r4, #0]
   30b7c:	cmp	r0, #0
   30b7e:	beq.n	30b50 <open_file_or_dir3@@Base+0x24>
   30b80:	blx	88b0 <dirfd@plt>
   30b84:	cmp	r0, #0
   30b86:	bge.n	30b54 <open_file_or_dir3@@Base+0x28>
   30b88:	ldr	r0, [r4, #0]
   30b8a:	cmp	r0, #0
   30b8c:	beq.n	30b50 <open_file_or_dir3@@Base+0x24>
   30b8e:	blx	8978 <closedir@plt>
   30b92:	movs	r3, #0
   30b94:	str	r3, [r4, #0]
   30b96:	b.n	30b50 <open_file_or_dir3@@Base+0x24>
   30b98:	and.w	r3, r3, #53248	; 0xd000
   30b9c:	cmp.w	r3, #32768	; 0x8000
   30ba0:	bne.n	30bac <open_file_or_dir3@@Base+0x80>
   30ba2:	mov	r1, r6
   30ba4:	mov	r0, r5
   30ba6:	blx	8734 <__open64_2@plt>
   30baa:	b.n	30b84 <open_file_or_dir3@@Base+0x58>
   30bac:	blx	8740 <__errno_location@plt>
   30bb0:	movs	r3, #22
   30bb2:	str	r3, [r0, #0]
   30bb4:	b.n	30b50 <open_file_or_dir3@@Base+0x24>
   30bb6:	add	sp, #112	; 0x70
   30bb8:	pop	{r4, r5, r6, pc}
   30bba:	nop
   30bbc:	negs	r0, r2
   30bbe:	movs	r3, r0
   30bc0:	lsls	r4, r4, #8
   30bc2:	movs	r0, r0
   30bc4:	tst	r0, r6
   30bc6:	movs	r3, r0

00030bc8 <open_file_or_dir@@Base>:
   30bc8:	movs	r2, #2
   30bca:	b.w	30b2c <open_file_or_dir3@@Base>

00030bce <btrfs_open@@Base>:
   30bce:	push	{r4, r5, r6, r7, lr}
   30bd0:	mov	r6, r2
   30bd2:	ldr	r2, [pc, #172]	; (30c80 <btrfs_open@@Base+0xb2>)
   30bd4:	mov	r7, r3
   30bd6:	ldr	r3, [pc, #172]	; (30c84 <btrfs_open@@Base+0xb6>)
   30bd8:	sub	sp, #204	; 0xcc
   30bda:	add	r2, pc
   30bdc:	mov	r5, r1
   30bde:	add	r1, sp, #104	; 0x68
   30be0:	mov	r4, r0
   30be2:	ldr	r3, [r2, r3]
   30be4:	ldr	r3, [r3, #0]
   30be6:	str	r3, [sp, #196]	; 0xc4
   30be8:	mov.w	r3, #0
   30bec:	blx	887c <statfs64@plt>
   30bf0:	cbz	r0, 30c16 <btrfs_open@@Base+0x48>
   30bf2:	ldr	r1, [pc, #148]	; (30c88 <btrfs_open@@Base+0xba>)
   30bf4:	mov	r2, r4
   30bf6:	mov	r0, r6
   30bf8:	mov.w	r5, #4294967295	; 0xffffffff
   30bfc:	add	r1, pc
   30bfe:	bl	17574 <__btrfs_error_on@@Base>
   30c02:	ldr	r2, [pc, #136]	; (30c8c <btrfs_open@@Base+0xbe>)
   30c04:	ldr	r3, [pc, #124]	; (30c84 <btrfs_open@@Base+0xb6>)
   30c06:	add	r2, pc
   30c08:	ldr	r3, [r2, r3]
   30c0a:	ldr	r2, [r3, #0]
   30c0c:	ldr	r3, [sp, #196]	; 0xc4
   30c0e:	eors	r2, r3
   30c10:	beq.n	30c76 <btrfs_open@@Base+0xa8>
   30c12:	blx	84cc <__stack_chk_fail@plt>
   30c16:	ldr	r3, [pc, #100]	; (30c7c <btrfs_open@@Base+0xae>)
   30c18:	ldr	r2, [sp, #104]	; 0x68
   30c1a:	cmp	r2, r3
   30c1c:	beq.n	30c30 <btrfs_open@@Base+0x62>
   30c1e:	ldr	r1, [pc, #112]	; (30c90 <btrfs_open@@Base+0xc2>)
   30c20:	mov	r2, r4
   30c22:	mov	r0, r6
   30c24:	mvn.w	r5, #1
   30c28:	add	r1, pc
   30c2a:	bl	17574 <__btrfs_error_on@@Base>
   30c2e:	b.n	30c02 <btrfs_open@@Base+0x34>
   30c30:	mov	r1, sp
   30c32:	mov	r0, r4
   30c34:	bl	396b8 <__libc_csu_fini@@Base+0x1c>
   30c38:	cmp	r0, #0
   30c3a:	bne.n	30bf2 <btrfs_open@@Base+0x24>
   30c3c:	cbz	r7, 30c5c <btrfs_open@@Base+0x8e>
   30c3e:	ldr	r3, [sp, #16]
   30c40:	and.w	r3, r3, #61440	; 0xf000
   30c44:	cmp.w	r3, #16384	; 0x4000
   30c48:	beq.n	30c5c <btrfs_open@@Base+0x8e>
   30c4a:	ldr	r1, [pc, #72]	; (30c94 <btrfs_open@@Base+0xc6>)
   30c4c:	mov	r2, r4
   30c4e:	mov	r0, r6
   30c50:	mvn.w	r5, #2
   30c54:	add	r1, pc
   30c56:	bl	17574 <__btrfs_error_on@@Base>
   30c5a:	b.n	30c02 <btrfs_open@@Base+0x34>
   30c5c:	mov	r1, r5
   30c5e:	mov	r0, r4
   30c60:	bl	30bc8 <open_file_or_dir@@Base>
   30c64:	subs	r5, r0, #0
   30c66:	bge.n	30c02 <btrfs_open@@Base+0x34>
   30c68:	ldr	r1, [pc, #44]	; (30c98 <btrfs_open@@Base+0xca>)
   30c6a:	mov	r2, r4
   30c6c:	mov	r0, r6
   30c6e:	add	r1, pc
   30c70:	bl	17574 <__btrfs_error_on@@Base>
   30c74:	b.n	30c02 <btrfs_open@@Base+0x34>
   30c76:	mov	r0, r5
   30c78:	add	sp, #204	; 0xcc
   30c7a:	pop	{r4, r5, r6, r7, pc}
   30c7c:	ldr	r6, [r7, #0]
   30c7e:	str	r1, [sp, #140]	; 0x8c
   30c80:	sbcs	r6, r5
   30c82:	movs	r3, r0
   30c84:	lsls	r4, r4, #8
   30c86:	movs	r0, r0
   30c88:	cmp	r5, #181	; 0xb5
   30c8a:	movs	r2, r0
   30c8c:	sbcs	r2, r0
   30c8e:	movs	r3, r0
   30c90:	cmp	r5, #160	; 0xa0
   30c92:	movs	r2, r0
   30c94:	cmp	r5, #143	; 0x8f
   30c96:	movs	r2, r0
   30c98:	cmp	r5, #67	; 0x43
   30c9a:	movs	r2, r0

00030c9c <btrfs_open_dir@@Base>:
   30c9c:	movs	r3, #1
   30c9e:	b.w	30bce <btrfs_open@@Base>

00030ca2 <btrfs_open_file_or_dir@@Base>:
   30ca2:	movs	r3, #0
   30ca4:	b.w	30bce <btrfs_open@@Base>

00030ca8 <open_path_or_dev_mnt@@Base>:
   30ca8:	push	{r4, r5, r6, r7, lr}
   30caa:	mov	r4, r1
   30cac:	ldr	r1, [pc, #156]	; (30d4c <open_path_or_dev_mnt@@Base+0xa4>)
   30cae:	mov	r6, r2
   30cb0:	ldr	r2, [pc, #156]	; (30d50 <open_path_or_dev_mnt@@Base+0xa8>)
   30cb2:	sub.w	sp, sp, #4096	; 0x1000
   30cb6:	add	r1, pc
   30cb8:	sub	sp, #12
   30cba:	add.w	r3, sp, #4096	; 0x1000
   30cbe:	mov	r5, r0
   30cc0:	ldr	r2, [r1, r2]
   30cc2:	adds	r3, #4
   30cc4:	ldr	r2, [r2, #0]
   30cc6:	str	r2, [r3, #0]
   30cc8:	mov.w	r2, #0
   30ccc:	bl	2f94c <path_is_block_device@@Base>
   30cd0:	cbz	r0, 30d32 <open_path_or_dev_mnt@@Base+0x8a>
   30cd2:	add	r7, sp, #4
   30cd4:	mov.w	r2, #4096	; 0x1000
   30cd8:	mov	r0, r5
   30cda:	mov	r1, r7
   30cdc:	bl	301c0 <get_btrfs_mount@@Base>
   30ce0:	cmp	r0, #0
   30ce2:	bge.n	30d16 <open_path_or_dev_mnt@@Base+0x6e>
   30ce4:	ldr	r1, [pc, #108]	; (30d54 <open_path_or_dev_mnt@@Base+0xac>)
   30ce6:	mov	r2, r5
   30ce8:	mov	r0, r6
   30cea:	mov.w	r4, #4294967295	; 0xffffffff
   30cee:	add	r1, pc
   30cf0:	bl	17574 <__btrfs_error_on@@Base>
   30cf4:	blx	8740 <__errno_location@plt>
   30cf8:	movs	r3, #22
   30cfa:	str	r3, [r0, #0]
   30cfc:	ldr	r1, [pc, #88]	; (30d58 <open_path_or_dev_mnt@@Base+0xb0>)
   30cfe:	add.w	r3, sp, #4096	; 0x1000
   30d02:	ldr	r2, [pc, #76]	; (30d50 <open_path_or_dev_mnt@@Base+0xa8>)
   30d04:	adds	r3, #4
   30d06:	add	r1, pc
   30d08:	ldr	r2, [r1, r2]
   30d0a:	ldr	r1, [r2, #0]
   30d0c:	ldr	r2, [r3, #0]
   30d0e:	eors	r1, r2
   30d10:	beq.n	30d40 <open_path_or_dev_mnt@@Base+0x98>
   30d12:	blx	84cc <__stack_chk_fail@plt>
   30d16:	mov	r1, r4
   30d18:	mov	r0, r7
   30d1a:	bl	30bc8 <open_file_or_dir@@Base>
   30d1e:	mov	r4, r0
   30d20:	cbz	r6, 30d24 <open_path_or_dev_mnt@@Base+0x7c>
   30d22:	lsrs	r6, r0, #31
   30d24:	ldr	r1, [pc, #52]	; (30d5c <open_path_or_dev_mnt@@Base+0xb4>)
   30d26:	mov	r2, r5
   30d28:	mov	r0, r6
   30d2a:	add	r1, pc
   30d2c:	bl	17574 <__btrfs_error_on@@Base>
   30d30:	b.n	30cfc <open_path_or_dev_mnt@@Base+0x54>
   30d32:	mov	r1, r4
   30d34:	movs	r2, #1
   30d36:	mov	r0, r5
   30d38:	bl	30c9c <btrfs_open_dir@@Base>
   30d3c:	mov	r4, r0
   30d3e:	b.n	30cfc <open_path_or_dev_mnt@@Base+0x54>
   30d40:	mov	r0, r4
   30d42:	add.w	sp, sp, #4096	; 0x1000
   30d46:	add	sp, #12
   30d48:	pop	{r4, r5, r6, r7, pc}
   30d4a:	nop
   30d4c:	lsrs	r2, r2
   30d4e:	movs	r3, r0
   30d50:	lsls	r4, r4, #8
   30d52:	movs	r0, r0
   30d54:	cmp	r5, #9
   30d56:	movs	r2, r0
   30d58:	lsls	r2, r0
   30d5a:	movs	r3, r0
   30d5c:	cmp	r4, #240	; 0xf0
   30d5e:	movs	r2, r0

00030d60 <close_file_or_dir@@Base>:
   30d60:	push	{r3, r4, r5, r6, r7, lr}
   30d62:	mov	r5, r0
   30d64:	mov	r6, r1
   30d66:	blx	8740 <__errno_location@plt>
   30d6a:	ldr	r7, [r0, #0]
   30d6c:	mov	r4, r0
   30d6e:	cbz	r6, 30d7a <close_file_or_dir@@Base+0x1a>
   30d70:	mov	r0, r6
   30d72:	blx	8978 <closedir@plt>
   30d76:	str	r7, [r4, #0]
   30d78:	pop	{r3, r4, r5, r6, r7, pc}
   30d7a:	cmp	r5, #0
   30d7c:	blt.n	30d76 <close_file_or_dir@@Base+0x16>
   30d7e:	mov	r0, r5
   30d80:	blx	8960 <close@plt>
   30d84:	b.n	30d76 <close_file_or_dir@@Base+0x16>

00030d86 <get_device_info@@Base>:
   30d86:	push	{r4, lr}
   30d88:	mov	r4, r0
   30d8a:	ldr	r0, [sp, #8]
   30d8c:	movs	r1, #0
   30d8e:	strd	r2, r3, [r0], #8
   30d92:	movs	r2, #16
   30d94:	blx	8780 <memset@plt+0x4>
   30d98:	ldr	r2, [sp, #8]
   30d9a:	ldr	r1, [pc, #24]	; (30db4 <get_device_info@@Base+0x2e>)
   30d9c:	mov	r0, r4
   30d9e:	blx	8578 <ioctl@plt>
   30da2:	cmp	r0, #0
   30da4:	bge.n	30db0 <get_device_info@@Base+0x2a>
   30da6:	blx	8740 <__errno_location@plt>
   30daa:	ldr	r0, [r0, #0]
   30dac:	negs	r0, r0
   30dae:	pop	{r4, pc}
   30db0:	movs	r0, #0
   30db2:	b.n	30dae <get_device_info@@Base+0x28>
   30db4:	str	r4, [sp, #120]	; 0x78
   30db6:	beq.n	30dba <get_df@@Base+0x2>

00030db8 <get_df@@Base>:
   30db8:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   30dbc:	mov	r5, r0
   30dbe:	movs	r0, #16
   30dc0:	mov	sl, r1
   30dc2:	blx	8634 <malloc@plt+0x4>
   30dc6:	mov	r4, r0
   30dc8:	cbnz	r0, 30dd2 <get_df@@Base+0x1a>
   30dca:	mvn.w	r0, #11
   30dce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   30dd2:	mov.w	r8, #0
   30dd6:	mov.w	r9, #0
   30dda:	mov	r2, r0
   30ddc:	strd	r8, r9, [r0]
   30de0:	strd	r8, r9, [r0, #8]
   30de4:	mov	r0, r5
   30de6:	ldr	r1, [pc, #120]	; (30e60 <get_df@@Base+0xa8>)
   30de8:	blx	8578 <ioctl@plt>
   30dec:	cmp	r0, #0
   30dee:	bge.n	30e08 <get_df@@Base+0x50>
   30df0:	ldr	r0, [pc, #112]	; (30e64 <get_df@@Base+0xac>)
   30df2:	add	r0, pc
   30df4:	bl	1747c <__btrfs_error@@Base>
   30df8:	mov	r0, r4
   30dfa:	blx	83f0 <free@plt+0x4>
   30dfe:	blx	8740 <__errno_location@plt>
   30e02:	ldr	r0, [r0, #0]
   30e04:	negs	r0, r0
   30e06:	b.n	30dce <get_df@@Base+0x16>
   30e08:	ldrd	r6, r7, [r4, #8]
   30e0c:	mov	r0, r4
   30e0e:	orrs.w	r3, r6, r7
   30e12:	bne.n	30e1e <get_df@@Base+0x66>
   30e14:	blx	83f0 <free@plt+0x4>
   30e18:	mvn.w	r0, #1
   30e1c:	b.n	30dce <get_df@@Base+0x16>
   30e1e:	blx	83f0 <free@plt+0x4>
   30e22:	movs	r0, #24
   30e24:	muls	r0, r6
   30e26:	adds	r0, #16
   30e28:	blx	8634 <malloc@plt+0x4>
   30e2c:	mov	r4, r0
   30e2e:	cmp	r0, #0
   30e30:	beq.n	30dca <get_df@@Base+0x12>
   30e32:	mov	r2, r0
   30e34:	strd	r6, r7, [r0]
   30e38:	strd	r8, r9, [r0, #8]
   30e3c:	mov	r0, r5
   30e3e:	ldr	r1, [pc, #32]	; (30e60 <get_df@@Base+0xa8>)
   30e40:	blx	8578 <ioctl@plt>
   30e44:	cmp	r0, #0
   30e46:	bge.n	30e56 <get_df@@Base+0x9e>
   30e48:	ldr	r0, [pc, #28]	; (30e68 <get_df@@Base+0xb0>)
   30e4a:	mov	r2, r6
   30e4c:	mov	r3, r7
   30e4e:	add	r0, pc
   30e50:	bl	1747c <__btrfs_error@@Base>
   30e54:	b.n	30df8 <get_df@@Base+0x40>
   30e56:	movs	r0, #0
   30e58:	str.w	r4, [sl]
   30e5c:	b.n	30dce <get_df@@Base+0x16>
   30e5e:	nop
   30e60:	str	r4, [sp, #80]	; 0x50
   30e62:	stmia	r0!, {r4}
   30e64:	cmp	r4, #62	; 0x3e
   30e66:	movs	r2, r0
   30e68:	cmp	r3, #252	; 0xfc
   30e6a:	movs	r2, r0

00030e6c <get_fs_info@@Base>:
   30e6c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30e70:	sub.w	sp, sp, #12288	; 0x3000
   30e74:	sub	sp, #44	; 0x2c
   30e76:	mov	r5, r1
   30e78:	ldr	r1, [pc, #736]	; (3115c <get_fs_info@@Base+0x2f0>)
   30e7a:	add.w	r3, sp, #12288	; 0x3000
   30e7e:	str	r2, [sp, #20]
   30e80:	adds	r3, #36	; 0x24
   30e82:	ldr	r2, [pc, #732]	; (31160 <get_fs_info@@Base+0x2f4>)
   30e84:	add	r1, pc
   30e86:	add	r7, sp, #40	; 0x28
   30e88:	mov.w	r9, #0
   30e8c:	mov	r8, r0
   30e8e:	mov	r0, r5
   30e90:	ldr	r2, [r1, r2]
   30e92:	mov	r1, r9
   30e94:	ldr	r2, [r2, #0]
   30e96:	str	r2, [r3, #0]
   30e98:	mov.w	r2, #0
   30e9c:	mov.w	r2, #1024	; 0x400
   30ea0:	sub.w	r3, r7, #16
   30ea4:	strd	r9, r9, [r7, #-16]
   30ea8:	str	r3, [sp, #12]
   30eaa:	blx	8780 <memset@plt+0x4>
   30eae:	mov	r0, r8
   30eb0:	bl	2f94c <path_is_block_device@@Base>
   30eb4:	cmp	r0, #1
   30eb6:	bne.n	30f94 <get_fs_info@@Base+0x128>
   30eb8:	mov	r1, r9
   30eba:	mov	r0, r8
   30ebc:	blx	8608 <open64@plt>
   30ec0:	subs	r6, r0, #0
   30ec2:	bge.n	30efc <get_fs_info@@Base+0x90>
   30ec4:	blx	8740 <__errno_location@plt>
   30ec8:	mov	r1, r8
   30eca:	ldr	r4, [r0, #0]
   30ecc:	ldr	r0, [pc, #660]	; (31164 <get_fs_info@@Base+0x2f8>)
   30ece:	negs	r4, r4
   30ed0:	add	r0, pc
   30ed2:	bl	1747c <__btrfs_error@@Base>
   30ed6:	ldr.w	r1, [r7, #-12]
   30eda:	mov	r0, r6
   30edc:	bl	30d60 <close_file_or_dir@@Base>
   30ee0:	ldr	r1, [pc, #644]	; (31168 <get_fs_info@@Base+0x2fc>)
   30ee2:	ldr	r2, [pc, #636]	; (31160 <get_fs_info@@Base+0x2f4>)
   30ee4:	add.w	r3, sp, #12288	; 0x3000
   30ee8:	add	r1, pc
   30eea:	adds	r3, #36	; 0x24
   30eec:	ldr	r2, [r1, r2]
   30eee:	ldr	r1, [r2, #0]
   30ef0:	ldr	r2, [r3, #0]
   30ef2:	eors	r1, r2
   30ef4:	beq.w	31146 <get_fs_info@@Base+0x2da>
   30ef8:	blx	84cc <__stack_chk_fail@plt>
   30efc:	add.w	r3, sp, #4128	; 0x1020
   30f00:	mov	r1, r8
   30f02:	adds	r3, #4
   30f04:	str	r3, [sp, #16]
   30f06:	ldr	r3, [sp, #12]
   30f08:	ldr	r2, [sp, #16]
   30f0a:	str.w	r9, [sp, #4]
   30f0e:	str	r3, [sp, #0]
   30f10:	mov.w	r3, #4096	; 0x1000
   30f14:	bl	30074 <check_mounted_where@@Base>
   30f18:	subs	r4, r0, #0
   30f1a:	beq.n	30f88 <get_fs_info@@Base+0x11c>
   30f1c:	blt.n	30ed6 <get_fs_info@@Base+0x6a>
   30f1e:	add.w	r8, sp, #8192	; 0x2000
   30f22:	movs	r2, #1
   30f24:	add.w	r8, r8, #36	; 0x24
   30f28:	movs	r3, #0
   30f2a:	mov	r0, r6
   30f2c:	strd	r2, r3, [r5, #8]
   30f30:	mov	r1, r8
   30f32:	mov.w	r2, #65536	; 0x10000
   30f36:	movs	r3, #0
   30f38:	str.w	r9, [sp]
   30f3c:	bl	1ccc8 <btrfs_read_dev_super@@Base>
   30f40:	subs	r4, r0, #0
   30f42:	blt.n	30f8e <get_fs_info@@Base+0x122>
   30f44:	ldr	r2, [sp, #12]
   30f46:	mov	r3, r5
   30f48:	ldr.w	sl, [r8, #201]	; 0xc9
   30f4c:	ldr.w	fp, [r8, #205]	; 0xcd
   30f50:	ldr	r2, [r2, #0]
   30f52:	add.w	r1, r2, #16
   30f56:	strd	sl, fp, [r3], #16
   30f5a:	ldr.w	r0, [r2], #4
   30f5e:	cmp	r2, r1
   30f60:	str.w	r0, [r3], #4
   30f64:	bne.n	30f5a <get_fs_info@@Base+0xee>
   30f66:	mov	r0, r6
   30f68:	blx	8960 <close@plt>
   30f6c:	ldr.w	r8, [sp, #16]
   30f70:	sub.w	r1, r7, #12
   30f74:	mov	r0, r8
   30f76:	bl	30bc8 <open_file_or_dir@@Base>
   30f7a:	subs	r6, r0, #0
   30f7c:	bge.n	30fa0 <get_fs_info@@Base+0x134>
   30f7e:	blx	8740 <__errno_location@plt>
   30f82:	ldr	r4, [r0, #0]
   30f84:	negs	r4, r4
   30f86:	b.n	30ed6 <get_fs_info@@Base+0x6a>
   30f88:	mvn.w	r4, #21
   30f8c:	b.n	30ed6 <get_fs_info@@Base+0x6a>
   30f8e:	mvn.w	r4, #4
   30f92:	b.n	30ed6 <get_fs_info@@Base+0x6a>
   30f94:	mov.w	sl, #0
   30f98:	mov.w	fp, #0
   30f9c:	mov	r4, r9
   30f9e:	b.n	30f70 <get_fs_info@@Base+0x104>
   30fa0:	ldrd	r2, r3, [r5, #8]
   30fa4:	cmp	r3, #0
   30fa6:	it	eq
   30fa8:	cmpeq	r2, #1
   30faa:	beq.w	31110 <get_fs_info@@Base+0x2a4>
   30fae:	ldr	r1, [pc, #420]	; (31154 <get_fs_info@@Base+0x2e8>)
   30fb0:	mov	r2, r5
   30fb2:	blx	8578 <ioctl@plt>
   30fb6:	cmp	r0, #0
   30fb8:	blt.n	30f7e <get_fs_info@@Base+0x112>
   30fba:	mov	r8, r7
   30fbc:	movs	r2, #3
   30fbe:	movs	r3, #0
   30fc0:	strd	r2, r3, [r7, #-8]
   30fc4:	movs	r2, #1
   30fc6:	movs	r3, #0
   30fc8:	movs	r4, #216	; 0xd8
   30fca:	strd	r2, r3, [r8], #-8
   30fce:	mov	r9, r3
   30fd0:	strd	r4, r4, [r8, #56]	; 0x38
   30fd4:	movs	r4, #30
   30fd6:	str.w	r4, [r8, #64]	; 0x40
   30fda:	mov	r4, r2
   30fdc:	movs	r0, #0
   30fde:	movs	r1, #0
   30fe0:	strd	r2, r3, [r8, #16]
   30fe4:	strd	r0, r1, [r5, #8]
   30fe8:	strd	r0, r1, [r8, #40]	; 0x28
   30fec:	mov.w	r0, #4294967295	; 0xffffffff
   30ff0:	mov.w	r1, #4294967295	; 0xffffffff
   30ff4:	strd	r0, r1, [r8, #48]	; 0x30
   30ff8:	strd	r0, r1, [r8, #32]
   30ffc:	ldr	r1, [pc, #344]	; (31158 <get_fs_info@@Base+0x2ec>)
   30ffe:	mov	r2, r8
   31000:	mov	r0, r6
   31002:	strd	r4, r9, [r8, #24]
   31006:	blx	8578 <ioctl@plt>
   3100a:	cmp	r0, #0
   3100c:	bge.n	310be <get_fs_info@@Base+0x252>
   3100e:	blx	8740 <__errno_location@plt>
   31012:	ldr	r3, [r0, #0]
   31014:	negs	r4, r3
   31016:	cmp	r3, #0
   31018:	bne.w	30ed6 <get_fs_info@@Base+0x6a>
   3101c:	movs	r2, #0
   3101e:	movs	r3, #0
   31020:	mov	r0, r6
   31022:	str.w	r8, [sp]
   31026:	bl	30d86 <get_device_info@@Base>
   3102a:	mov	r4, r0
   3102c:	cmp	r0, #0
   3102e:	bne.n	31110 <get_fs_info@@Base+0x2a4>
   31030:	ldrd	r3, r2, [r5, #8]
   31034:	mov.w	r8, #1
   31038:	adds	r3, #1
   3103a:	adc.w	r2, r2, #0
   3103e:	strd	r3, r2, [r5, #8]
   31042:	orrs.w	r3, sl, fp
   31046:	itt	eq
   31048:	moveq.w	sl, #1
   3104c:	moveq.w	fp, #0
   31050:	ldrd	r0, r1, [r5, #8]
   31054:	orrs.w	r3, r0, r1
   31058:	beq.w	30ed6 <get_fs_info@@Base+0x6a>
   3105c:	lsls	r0, r0, #12
   3105e:	blx	8634 <malloc@plt+0x4>
   31062:	ldr	r3, [sp, #20]
   31064:	mov	r9, r0
   31066:	str	r0, [r3, #0]
   31068:	cmp	r0, #0
   3106a:	beq.n	30f7e <get_fs_info@@Base+0x112>
   3106c:	cmp.w	r8, #0
   31070:	beq.n	3107e <get_fs_info@@Base+0x212>
   31072:	sub.w	r1, r7, #8
   31076:	mov.w	r2, #4096	; 0x1000
   3107a:	blx	843c <memcpy@plt+0x4>
   3107e:	ldrd	r2, r3, [r5]
   31082:	ldrd	r0, r1, [r5, #8]
   31086:	cmp	r3, fp
   31088:	it	eq
   3108a:	cmpeq	r2, sl
   3108c:	bcc.n	3109a <get_fs_info@@Base+0x22e>
   3108e:	mov	r2, r8
   31090:	asrs	r3, r2, #31
   31092:	cmp	r3, r1
   31094:	it	eq
   31096:	cmpeq	r8, r0
   31098:	bcc.n	31116 <get_fs_info@@Base+0x2aa>
   3109a:	cmp	r1, #0
   3109c:	it	eq
   3109e:	cmpeq	r0, #1
   310a0:	beq.w	30ed6 <get_fs_info@@Base+0x6a>
   310a4:	cmp.w	r8, #0
   310a8:	bne.n	31142 <get_fs_info@@Base+0x2d6>
   310aa:	ldr	r1, [pc, #192]	; (3116c <get_fs_info@@Base+0x300>)
   310ac:	movs	r3, #1
   310ae:	ldr	r0, [pc, #192]	; (31170 <get_fs_info@@Base+0x304>)
   310b0:	movw	r2, #1091	; 0x443
   310b4:	add	r1, pc
   310b6:	adds	r1, #41	; 0x29
   310b8:	add	r0, pc
   310ba:	bl	2ff24 <test_issubvolname@@Base+0x17e>
   310be:	ldrd	r2, r3, [r5, #8]
   310c2:	ldr.w	r1, [r8, #64]	; 0x40
   310c6:	adds	r2, r2, r1
   310c8:	adc.w	r3, r3, #0
   310cc:	cmp	r1, #30
   310ce:	strd	r2, r3, [r5, #8]
   310d2:	bne.n	310e4 <get_fs_info@@Base+0x278>
   310d4:	ldr.w	r4, [r8, #3906]	; 0xf42
   310d8:	ldr.w	r9, [r8, #3910]	; 0xf46
   310dc:	adds	r4, #1
   310de:	adc.w	r9, r9, #0
   310e2:	b.n	30ffc <get_fs_info@@Base+0x190>
   310e4:	cbnz	r1, 310f4 <get_fs_info@@Base+0x288>
   310e6:	adds.w	r4, r4, #4294967295	; 0xffffffff
   310ea:	str	r4, [r5, #0]
   310ec:	adc.w	r3, r9, #4294967295	; 0xffffffff
   310f0:	str	r3, [r5, #4]
   310f2:	b.n	3101c <get_fs_info@@Base+0x1b0>
   310f4:	add.w	r2, sp, #12288	; 0x3000
   310f8:	subs	r1, #1
   310fa:	adds	r2, #40	; 0x28
   310fc:	movs	r3, #130	; 0x82
   310fe:	mla	r1, r3, r1, r2
   31102:	sub.w	r1, r1, #12160	; 0x2f80
   31106:	ldr.w	r2, [r1], #-32
   3110a:	ldr	r3, [r1, #36]	; 0x24
   3110c:	str	r2, [r5, #0]
   3110e:	b.n	310f0 <get_fs_info@@Base+0x284>
   31110:	mov.w	r8, #0
   31114:	b.n	31050 <get_fs_info@@Base+0x1e4>
   31116:	add.w	r3, r9, r8, lsl #12
   3111a:	mov	r2, sl
   3111c:	str	r3, [sp, #0]
   3111e:	mov	r0, r6
   31120:	mov	r3, fp
   31122:	bl	30d86 <get_device_info@@Base>
   31126:	cmn.w	r0, #19
   3112a:	mov	r4, r0
   3112c:	beq.n	31138 <get_fs_info@@Base+0x2cc>
   3112e:	cmp	r0, #0
   31130:	bne.w	30ed6 <get_fs_info@@Base+0x6a>
   31134:	add.w	r8, r8, #1
   31138:	adds.w	sl, sl, #1
   3113c:	adc.w	fp, fp, #0
   31140:	b.n	3107e <get_fs_info@@Base+0x212>
   31142:	movs	r4, #0
   31144:	b.n	30ed6 <get_fs_info@@Base+0x6a>
   31146:	mov	r0, r4
   31148:	add.w	sp, sp, #12288	; 0x3000
   3114c:	add	sp, #44	; 0x2c
   3114e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31152:	nop
   31154:	str	r4, [sp, #124]	; 0x7c
   31156:	strh	r0, [r0, #32]
   31158:	str	r4, [sp, #68]	; 0x44
   3115a:	beq.n	3115e <get_fs_info@@Base+0x2f2>
   3115c:	subs	r7, #4
   3115e:	movs	r3, r0
   31160:	lsls	r4, r4, #8
   31162:	movs	r0, r0
   31164:	ldrh	r3, [r3, #36]	; 0x24
   31166:	movs	r0, r0
   31168:	subs	r6, #160	; 0xa0
   3116a:	movs	r3, r0
   3116c:	cmp	r4, #169	; 0xa9
   3116e:	movs	r2, r0
   31170:	cmp	r1, #188	; 0xbc
   31172:	movs	r2, r0

00031174 <get_fsid@@Base>:
   31174:	push	{r4, r5, r6, r7, lr}
   31176:	mov	r7, r2
   31178:	ldr	r2, [pc, #148]	; (31210 <get_fsid@@Base+0x9c>)
   3117a:	subw	sp, sp, #1036	; 0x40c
   3117e:	ldr	r3, [pc, #148]	; (31214 <get_fsid@@Base+0xa0>)
   31180:	mov	r4, r1
   31182:	add	r2, pc
   31184:	movs	r1, #0
   31186:	mov	r6, r0
   31188:	ldr	r3, [r2, r3]
   3118a:	ldr	r3, [r3, #0]
   3118c:	str.w	r3, [sp, #1028]	; 0x404
   31190:	mov.w	r3, #0
   31194:	blx	8608 <open64@plt>
   31198:	subs	r5, r0, #0
   3119a:	bge.n	311ca <get_fsid@@Base+0x56>
   3119c:	blx	8740 <__errno_location@plt>
   311a0:	ldr	r4, [r0, #0]
   311a2:	negs	r4, r4
   311a4:	cbnz	r7, 311b0 <get_fsid@@Base+0x3c>
   311a6:	ldr	r0, [pc, #112]	; (31218 <get_fsid@@Base+0xa4>)
   311a8:	mov	r1, r6
   311aa:	add	r0, pc
   311ac:	bl	1747c <__btrfs_error@@Base>
   311b0:	adds	r3, r5, #1
   311b2:	bne.n	311de <get_fsid@@Base+0x6a>
   311b4:	ldr	r2, [pc, #100]	; (3121c <get_fsid@@Base+0xa8>)
   311b6:	ldr	r3, [pc, #92]	; (31214 <get_fsid@@Base+0xa0>)
   311b8:	add	r2, pc
   311ba:	ldr	r3, [r2, r3]
   311bc:	ldr	r2, [r3, #0]
   311be:	ldr.w	r3, [sp, #1028]	; 0x404
   311c2:	eors	r2, r3
   311c4:	beq.n	31204 <get_fsid@@Base+0x90>
   311c6:	blx	84cc <__stack_chk_fail@plt>
   311ca:	ldr	r1, [pc, #64]	; (3120c <get_fsid@@Base+0x98>)
   311cc:	mov	r2, sp
   311ce:	blx	8578 <ioctl@plt>
   311d2:	cmp	r0, #0
   311d4:	bge.n	311e6 <get_fsid@@Base+0x72>
   311d6:	blx	8740 <__errno_location@plt>
   311da:	ldr	r4, [r0, #0]
   311dc:	negs	r4, r4
   311de:	mov	r0, r5
   311e0:	blx	8960 <close@plt>
   311e4:	b.n	311b4 <get_fsid@@Base+0x40>
   311e6:	mov	r3, r4
   311e8:	add	r6, sp, #16
   311ea:	add	r4, sp, #32
   311ec:	mov	r2, r6
   311ee:	adds	r3, #8
   311f0:	ldmia	r2!, {r0, r1}
   311f2:	cmp	r2, r4
   311f4:	str.w	r0, [r3, #-8]
   311f8:	mov	r6, r2
   311fa:	str.w	r1, [r3, #-4]
   311fe:	bne.n	311ec <get_fsid@@Base+0x78>
   31200:	movs	r4, #0
   31202:	b.n	311de <get_fsid@@Base+0x6a>
   31204:	mov	r0, r4
   31206:	addw	sp, sp, #1036	; 0x40c
   3120a:	pop	{r4, r5, r6, r7, pc}
   3120c:	str	r4, [sp, #124]	; 0x7c
   3120e:	strh	r0, [r0, #32]
   31210:	subs	r4, #6
   31212:	movs	r3, r0
   31214:	lsls	r4, r4, #8
   31216:	movs	r0, r0
   31218:	str	r4, [sp, #264]	; 0x108
   3121a:	movs	r0, r0
   3121c:	subs	r3, #208	; 0xd0
   3121e:	movs	r3, r0

00031220 <group_profile_max_safe_loss@@Base>:
   31220:	movs	r3, #0
   31222:	cmp	r3, #0
   31224:	push	{r4, r5, lr}
   31226:	and.w	r4, r0, #2040	; 0x7f8
   3122a:	it	eq
   3122c:	cmpeq	r4, #128	; 0x80
   3122e:	mov	r5, r3
   31230:	beq.n	312a0 <group_profile_max_safe_loss@@Base+0x80>
   31232:	cmp	r3, #0
   31234:	it	eq
   31236:	cmpeq	r4, #129	; 0x81
   31238:	bcs.n	3126e <group_profile_max_safe_loss@@Base+0x4e>
   3123a:	cmp	r3, #0
   3123c:	it	eq
   3123e:	cmpeq	r4, #16
   31240:	beq.n	312a0 <group_profile_max_safe_loss@@Base+0x80>
   31242:	cmp	r3, #0
   31244:	it	eq
   31246:	cmpeq	r4, #17
   31248:	bcs.n	31258 <group_profile_max_safe_loss@@Base+0x38>
   3124a:	tst.w	r0, #2032	; 0x7f0
   3124e:	ite	ne
   31250:	movne.w	r0, #4294967295	; 0xffffffff
   31254:	moveq	r0, r3
   31256:	pop	{r4, r5, pc}
   31258:	cmp	r3, #0
   3125a:	it	eq
   3125c:	cmpeq	r4, #32
   3125e:	beq.n	312a4 <group_profile_max_safe_loss@@Base+0x84>
   31260:	cmp	r3, #0
   31262:	itet	eq
   31264:	cmpeq	r4, #64	; 0x40
   31266:	movne.w	r0, #4294967295	; 0xffffffff
   3126a:	moveq	r0, #1
   3126c:	b.n	31256 <group_profile_max_safe_loss@@Base+0x36>
   3126e:	cmp	r3, #0
   31270:	it	eq
   31272:	cmpeq.w	r4, #1024	; 0x400
   31276:	beq.n	312a8 <group_profile_max_safe_loss@@Base+0x88>
   31278:	movs	r3, #0
   3127a:	cmp	r3, r5
   3127c:	mov.w	r2, #1024	; 0x400
   31280:	it	eq
   31282:	cmpeq	r2, r4
   31284:	bcc.n	312ac <group_profile_max_safe_loss@@Base+0x8c>
   31286:	cmp	r5, #0
   31288:	it	eq
   3128a:	cmpeq.w	r4, #256	; 0x100
   3128e:	beq.n	312b2 <group_profile_max_safe_loss@@Base+0x92>
   31290:	cmp	r5, #0
   31292:	itet	eq
   31294:	cmpeq.w	r4, #512	; 0x200
   31298:	movne.w	r0, #4294967295	; 0xffffffff
   3129c:	moveq	r0, #2
   3129e:	b.n	31256 <group_profile_max_safe_loss@@Base+0x36>
   312a0:	movs	r0, #1
   312a2:	b.n	31256 <group_profile_max_safe_loss@@Base+0x36>
   312a4:	mov	r0, r3
   312a6:	b.n	31256 <group_profile_max_safe_loss@@Base+0x36>
   312a8:	movs	r0, #3
   312aa:	b.n	31256 <group_profile_max_safe_loss@@Base+0x36>
   312ac:	mov.w	r0, #4294967295	; 0xffffffff
   312b0:	b.n	31256 <group_profile_max_safe_loss@@Base+0x36>
   312b2:	movs	r0, #2
   312b4:	b.n	31256 <group_profile_max_safe_loss@@Base+0x36>

000312b6 <ask_user@@Base>:
   312b6:	ldr	r2, [pc, #148]	; (3134c <ask_user@@Base+0x96>)
   312b8:	ldr	r3, [pc, #148]	; (31350 <ask_user@@Base+0x9a>)
   312ba:	add	r2, pc
   312bc:	push	{r4, r5, r6, lr}
   312be:	movs	r5, #0
   312c0:	sub	sp, #40	; 0x28
   312c2:	ldr	r3, [r2, r3]
   312c4:	mov	r4, r0
   312c6:	movs	r2, #26
   312c8:	mov	r1, r5
   312ca:	add	r0, sp, #8
   312cc:	ldr	r3, [r3, #0]
   312ce:	str	r3, [sp, #36]	; 0x24
   312d0:	mov.w	r3, #0
   312d4:	str	r5, [sp, #4]
   312d6:	blx	8780 <memset@plt+0x4>
   312da:	ldr	r1, [pc, #120]	; (31354 <ask_user@@Base+0x9e>)
   312dc:	mov	r2, r4
   312de:	ldr	r6, [pc, #120]	; (31358 <ask_user@@Base+0xa2>)
   312e0:	add	r1, pc
   312e2:	movs	r0, #1
   312e4:	str	r5, [sp, #0]
   312e6:	blx	87f4 <__printf_chk@plt+0x4>
   312ea:	ldr	r3, [pc, #112]	; (3135c <ask_user@@Base+0xa6>)
   312ec:	add	r6, pc
   312ee:	add	r4, sp, #4
   312f0:	movs	r1, #29
   312f2:	ldr	r3, [r6, r3]
   312f4:	mov	r0, r4
   312f6:	ldr	r2, [r3, #0]
   312f8:	blx	83fc <fgets@plt>
   312fc:	cbnz	r0, 31314 <ask_user@@Base+0x5e>
   312fe:	movs	r0, #0
   31300:	ldr	r2, [pc, #92]	; (31360 <ask_user@@Base+0xaa>)
   31302:	ldr	r3, [pc, #76]	; (31350 <ask_user@@Base+0x9a>)
   31304:	add	r2, pc
   31306:	ldr	r3, [r2, r3]
   31308:	ldr	r2, [r3, #0]
   3130a:	ldr	r3, [sp, #36]	; 0x24
   3130c:	eors	r2, r3
   3130e:	beq.n	31346 <ask_user@@Base+0x90>
   31310:	blx	84cc <__stack_chk_fail@plt>
   31314:	ldr	r1, [pc, #76]	; (31364 <ask_user@@Base+0xae>)
   31316:	mov	r0, r4
   31318:	mov	r2, sp
   3131a:	add	r1, pc
   3131c:	blx	85e4 <strtok_r@plt>
   31320:	mov	r4, r0
   31322:	cmp	r0, #0
   31324:	beq.n	312fe <ask_user@@Base+0x48>
   31326:	ldr	r1, [pc, #64]	; (31368 <ask_user@@Base+0xb2>)
   31328:	add	r1, pc
   3132a:	blx	850c <strcasecmp@plt>
   3132e:	cbz	r0, 31342 <ask_user@@Base+0x8c>
   31330:	ldr	r1, [pc, #56]	; (3136c <ask_user@@Base+0xb6>)
   31332:	mov	r0, r4
   31334:	add	r1, pc
   31336:	blx	850c <strcasecmp@plt>
   3133a:	clz	r0, r0
   3133e:	lsrs	r0, r0, #5
   31340:	b.n	31300 <ask_user@@Base+0x4a>
   31342:	movs	r0, #1
   31344:	b.n	31300 <ask_user@@Base+0x4a>
   31346:	add	sp, #40	; 0x28
   31348:	pop	{r4, r5, r6, pc}
   3134a:	nop
   3134c:	subs	r2, #206	; 0xce
   3134e:	movs	r3, r0
   31350:	lsls	r4, r4, #8
   31352:	movs	r0, r0
   31354:	movs	r7, #159	; 0x9f
   31356:	movs	r2, r0
   31358:	subs	r2, #156	; 0x9c
   3135a:	movs	r3, r0
   3135c:	lsls	r4, r1, #9
   3135e:	movs	r0, r0
   31360:	subs	r2, #132	; 0x84
   31362:	movs	r3, r0
   31364:	movs	r7, #112	; 0x70
   31366:	movs	r2, r0
   31368:	b.n	311fc <get_fsid@@Base+0x88>
   3136a:	movs	r0, r0
   3136c:	stmia	r4!, {r1, r2, r3, r4, r5, r7}
	...

00031370 <find_mount_root@@Base>:
   31370:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31374:	mov	r9, r0
   31376:	str	r1, [sp, #0]
   31378:	mov.w	r1, #262144	; 0x40000
   3137c:	blx	8608 <open64@plt>
   31380:	cmp	r0, #0
   31382:	bge.n	31394 <find_mount_root@@Base+0x24>
   31384:	blx	8740 <__errno_location@plt>
   31388:	ldr	r4, [r0, #0]
   3138a:	negs	r4, r4
   3138c:	mov	r0, r4
   3138e:	add	sp, #12
   31390:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31394:	blx	8960 <close@plt>
   31398:	ldr	r1, [pc, #172]	; (31448 <find_mount_root@@Base+0xd8>)
   3139a:	ldr	r0, [pc, #176]	; (3144c <find_mount_root@@Base+0xdc>)
   3139c:	add	r1, pc
   3139e:	add	r0, pc
   313a0:	blx	88ec <setmntent@plt>
   313a4:	mov	r7, r0
   313a6:	cmp	r0, #0
   313a8:	beq.n	31384 <find_mount_root@@Base+0x14>
   313aa:	ldr.w	fp, [pc, #164]	; 31450 <find_mount_root@@Base+0xe0>
   313ae:	movs	r5, #0
   313b0:	mov	sl, r5
   313b2:	movs	r6, #1
   313b4:	add	fp, pc
   313b6:	b.n	313c4 <find_mount_root@@Base+0x54>
   313b8:	ldr	r0, [r4, #8]
   313ba:	mov	r1, fp
   313bc:	blx	837c <strcmp@plt>
   313c0:	mov	sl, r8
   313c2:	mov	r6, r0
   313c4:	mov	r0, r7
   313c6:	blx	85f0 <getmntent@plt>
   313ca:	mov	r4, r0
   313cc:	cbz	r0, 31408 <find_mount_root@@Base+0x98>
   313ce:	ldr	r3, [r4, #4]
   313d0:	mov	r0, r3
   313d2:	str	r3, [sp, #4]
   313d4:	blx	8704 <strlen@plt>
   313d8:	ldr	r3, [sp, #4]
   313da:	mov	r1, r9
   313dc:	mov	r8, r0
   313de:	mov	r2, r0
   313e0:	mov	r0, r3
   313e2:	blx	893c <strncmp@plt>
   313e6:	cmp	r0, #0
   313e8:	bne.n	313c4 <find_mount_root@@Base+0x54>
   313ea:	cmp	sl, r8
   313ec:	bgt.n	313c4 <find_mount_root@@Base+0x54>
   313ee:	mov	r0, r5
   313f0:	blx	83f0 <free@plt+0x4>
   313f4:	ldr	r0, [r4, #4]
   313f6:	blx	84b4 <strdup@plt+0x4>
   313fa:	mov	r5, r0
   313fc:	cmp	r0, #0
   313fe:	bne.n	313b8 <find_mount_root@@Base+0x48>
   31400:	blx	8740 <__errno_location@plt>
   31404:	ldr	r4, [r0, #0]
   31406:	negs	r4, r4
   31408:	mov	r0, r7
   3140a:	blx	8840 <endmntent@plt>
   3140e:	cmp	r4, #0
   31410:	bne.n	3138c <find_mount_root@@Base+0x1c>
   31412:	cbz	r5, 31440 <find_mount_root@@Base+0xd0>
   31414:	cbz	r6, 31420 <find_mount_root@@Base+0xb0>
   31416:	mov	r0, r5
   31418:	movs	r4, #1
   3141a:	blx	83f0 <free@plt+0x4>
   3141e:	b.n	3138c <find_mount_root@@Base+0x1c>
   31420:	mov	r1, r6
   31422:	mov	r0, r5
   31424:	blx	8954 <realpath@plt>
   31428:	ldr	r3, [sp, #0]
   3142a:	str	r0, [r3, #0]
   3142c:	cbnz	r0, 31436 <find_mount_root@@Base+0xc6>
   3142e:	blx	8740 <__errno_location@plt>
   31432:	ldr	r6, [r0, #0]
   31434:	negs	r6, r6
   31436:	mov	r0, r5
   31438:	mov	r4, r6
   3143a:	blx	83f0 <free@plt+0x4>
   3143e:	b.n	3138c <find_mount_root@@Base+0x1c>
   31440:	mvn.w	r4, #1
   31444:	b.n	3138c <find_mount_root@@Base+0x1c>
   31446:	nop
   31448:	bhi.n	31516 <find_next_key@@Base+0xae>
   3144a:	movs	r0, r0
   3144c:	movs	r2, #246	; 0xf6
   3144e:	movs	r2, r0
   31450:	movs	r2, #98	; 0x62
   31452:	movs	r2, r0

00031454 <units_set_mode@@Base>:
   31454:	ldrb	r3, [r0, #0]
   31456:	orrs	r1, r3
   31458:	str	r1, [r0, #0]
   3145a:	bx	lr

0003145c <units_set_base@@Base>:
   3145c:	ldr	r3, [r0, #0]
   3145e:	bic.w	r3, r3, #255	; 0xff
   31462:	orrs	r3, r1
   31464:	str	r3, [r0, #0]
   31466:	bx	lr

00031468 <find_next_key@@Base>:
   31468:	ldr	r2, [pc, #168]	; (31514 <find_next_key@@Base+0xac>)
   3146a:	ldr	r3, [pc, #172]	; (31518 <find_next_key@@Base+0xb0>)
   3146c:	add	r2, pc
   3146e:	push	{r4, r5, r6, lr}
   31470:	sub	sp, #24
   31472:	ldr	r3, [r2, r3]
   31474:	mov	r4, r1
   31476:	movs	r5, #0
   31478:	ldr	r3, [r3, #0]
   3147a:	str	r3, [sp, #20]
   3147c:	mov.w	r3, #0
   31480:	subs	r3, r0, #4
   31482:	ldr.w	r0, [r3, #4]!
   31486:	cbz	r0, 3149a <find_next_key@@Base+0x32>
   31488:	ldr	r2, [r3, #32]
   3148a:	ldr.w	r1, [r0, #192]	; 0xc0
   3148e:	adds	r2, #1
   31490:	cmp	r2, r1
   31492:	bcc.n	3149e <find_next_key@@Base+0x36>
   31494:	adds	r5, #1
   31496:	cmp	r5, #8
   31498:	bne.n	31482 <find_next_key@@Base+0x1a>
   3149a:	movs	r5, #1
   3149c:	b.n	314ce <find_next_key@@Base+0x66>
   3149e:	add.w	r6, r4, #9
   314a2:	mov	r1, sp
   314a4:	cbnz	r5, 314e2 <find_next_key@@Base+0x7a>
   314a6:	movs	r3, #25
   314a8:	muls	r2, r3
   314aa:	movs	r3, #17
   314ac:	adds	r2, #101	; 0x65
   314ae:	bl	1731a <read_extent_buffer@@Base>
   314b2:	ldr.w	r2, [sp, #9]
   314b6:	ldr.w	r3, [sp, #13]
   314ba:	str.w	r2, [r4, #9]
   314be:	str	r3, [r6, #4]
   314c0:	ldrb.w	r3, [sp, #8]
   314c4:	strb	r3, [r4, #8]
   314c6:	ldr	r3, [sp, #0]
   314c8:	str	r3, [r4, #0]
   314ca:	ldr	r3, [sp, #4]
   314cc:	str	r3, [r4, #4]
   314ce:	ldr	r2, [pc, #76]	; (3151c <find_next_key@@Base+0xb4>)
   314d0:	ldr	r3, [pc, #68]	; (31518 <find_next_key@@Base+0xb0>)
   314d2:	add	r2, pc
   314d4:	ldr	r3, [r2, r3]
   314d6:	ldr	r2, [r3, #0]
   314d8:	ldr	r3, [sp, #20]
   314da:	eors	r2, r3
   314dc:	beq.n	3150e <find_next_key@@Base+0xa6>
   314de:	blx	84cc <__stack_chk_fail@plt>
   314e2:	add.w	r2, r2, r2, lsl #5
   314e6:	movs	r3, #17
   314e8:	adds	r2, #101	; 0x65
   314ea:	movs	r5, #0
   314ec:	bl	1731a <read_extent_buffer@@Base>
   314f0:	ldr.w	r2, [sp, #9]
   314f4:	ldr.w	r3, [sp, #13]
   314f8:	str.w	r2, [r4, #9]
   314fc:	str	r3, [r6, #4]
   314fe:	ldrb.w	r3, [sp, #8]
   31502:	strb	r3, [r4, #8]
   31504:	ldr	r3, [sp, #0]
   31506:	str	r3, [r4, #0]
   31508:	ldr	r3, [sp, #4]
   3150a:	str	r3, [r4, #4]
   3150c:	b.n	314ce <find_next_key@@Base+0x66>
   3150e:	mov	r0, r5
   31510:	add	sp, #24
   31512:	pop	{r4, r5, r6, pc}
   31514:	subs	r1, #28
   31516:	movs	r3, r0
   31518:	lsls	r4, r4, #8
   3151a:	movs	r0, r0
   3151c:	subs	r0, #182	; 0xb6
   3151e:	movs	r3, r0

00031520 <btrfs_group_type_str@@Base>:
   31520:	and.w	r3, r1, #131072	; 0x20000
   31524:	and.w	r2, r0, #7
   31528:	cmp	r3, #0
   3152a:	it	eq
   3152c:	cmpeq	r2, #6
   3152e:	push	{r4, r5, lr}
   31530:	bcs.n	31562 <btrfs_group_type_str@@Base+0x42>
   31532:	orrs.w	r1, r2, r3
   31536:	beq.n	3157e <btrfs_group_type_str@@Base+0x5e>
   31538:	adds.w	r4, r2, #4294967295	; 0xffffffff
   3153c:	adc.w	r5, r3, #4294967295	; 0xffffffff
   31540:	cmp	r5, #0
   31542:	it	eq
   31544:	cmpeq	r4, #5
   31546:	bcs.n	3155c <btrfs_group_type_str@@Base+0x3c>
   31548:	cmp	r4, #4
   3154a:	bhi.n	3155c <btrfs_group_type_str@@Base+0x3c>
   3154c:	tbb	[pc, r4]
   31550:	lsls	r2, r3, #12
   31552:	asrs	r6, r0, #4
   31554:	movs	r4, r2
   31556:	ldr	r0, [pc, #56]	; (31590 <btrfs_group_type_str@@Base+0x70>)
   31558:	add	r0, pc
   3155a:	pop	{r4, r5, pc}
   3155c:	ldr	r0, [pc, #52]	; (31594 <btrfs_group_type_str@@Base+0x74>)
   3155e:	add	r0, pc
   31560:	b.n	3155a <btrfs_group_type_str@@Base+0x3a>
   31562:	cmp.w	r3, #131072	; 0x20000
   31566:	it	eq
   31568:	cmpeq	r2, #0
   3156a:	bne.n	3158a <btrfs_group_type_str@@Base+0x6a>
   3156c:	ldr	r0, [pc, #40]	; (31598 <btrfs_group_type_str@@Base+0x78>)
   3156e:	add	r0, pc
   31570:	b.n	3155a <btrfs_group_type_str@@Base+0x3a>
   31572:	ldr	r0, [pc, #40]	; (3159c <btrfs_group_type_str@@Base+0x7c>)
   31574:	add	r0, pc
   31576:	b.n	3155a <btrfs_group_type_str@@Base+0x3a>
   31578:	ldr	r0, [pc, #36]	; (315a0 <btrfs_group_type_str@@Base+0x80>)
   3157a:	add	r0, pc
   3157c:	b.n	3155a <btrfs_group_type_str@@Base+0x3a>
   3157e:	ldr	r0, [pc, #36]	; (315a4 <btrfs_group_type_str@@Base+0x84>)
   31580:	add	r0, pc
   31582:	b.n	3155a <btrfs_group_type_str@@Base+0x3a>
   31584:	ldr	r0, [pc, #32]	; (315a8 <btrfs_group_type_str@@Base+0x88>)
   31586:	add	r0, pc
   31588:	b.n	3155a <btrfs_group_type_str@@Base+0x3a>
   3158a:	ldr	r0, [pc, #32]	; (315ac <btrfs_group_type_str@@Base+0x8c>)
   3158c:	add	r0, pc
   3158e:	b.n	3155a <btrfs_group_type_str@@Base+0x3a>
   31590:	movs	r5, #74	; 0x4a
   31592:	movs	r2, r0
   31594:	bvs.n	314f0 <find_next_key@@Base+0x88>
   31596:	movs	r0, r0
   31598:	movs	r5, #59	; 0x3b
   3159a:	movs	r2, r0
   3159c:	movs	r5, #37	; 0x25
   3159e:	movs	r2, r0
   315a0:	movs	r5, #26
   315a2:	movs	r2, r0
   315a4:	bvs.n	314bc <find_next_key@@Base+0x54>
   315a6:	movs	r0, r0
   315a8:	movs	r5, #9
   315aa:	movs	r2, r0
   315ac:	bvs.n	316ac <test_num_disk_vs_raid@@Base+0x8>
	...

000315b0 <btrfs_group_profile_str@@Base>:
   315b0:	and.w	r2, r0, #2040	; 0x7f8
   315b4:	movs	r3, #0
   315b6:	cmp	r3, #0
   315b8:	it	eq
   315ba:	cmpeq	r2, #64	; 0x40
   315bc:	beq.n	31638 <btrfs_group_profile_str@@Base+0x88>
   315be:	cmp	r3, #0
   315c0:	it	eq
   315c2:	cmpeq	r2, #65	; 0x41
   315c4:	bcs.n	315f8 <btrfs_group_profile_str@@Base+0x48>
   315c6:	cmp	r3, #0
   315c8:	it	eq
   315ca:	cmpeq	r2, #16
   315cc:	beq.n	3163e <btrfs_group_profile_str@@Base+0x8e>
   315ce:	cmp	r3, #0
   315d0:	it	eq
   315d2:	cmpeq	r2, #17
   315d4:	bcs.n	315ea <btrfs_group_profile_str@@Base+0x3a>
   315d6:	orrs.w	r1, r2, r3
   315da:	beq.n	31644 <btrfs_group_profile_str@@Base+0x94>
   315dc:	cmp	r3, #0
   315de:	it	eq
   315e0:	cmpeq	r2, #8
   315e2:	bne.n	3164a <btrfs_group_profile_str@@Base+0x9a>
   315e4:	ldr	r0, [pc, #136]	; (31670 <btrfs_group_profile_str@@Base+0xc0>)
   315e6:	add	r0, pc
   315e8:	bx	lr
   315ea:	cmp	r3, #0
   315ec:	it	eq
   315ee:	cmpeq	r2, #32
   315f0:	bne.n	31650 <btrfs_group_profile_str@@Base+0xa0>
   315f2:	ldr	r0, [pc, #128]	; (31674 <btrfs_group_profile_str@@Base+0xc4>)
   315f4:	add	r0, pc
   315f6:	bx	lr
   315f8:	cmp	r3, #0
   315fa:	it	eq
   315fc:	cmpeq.w	r2, #512	; 0x200
   31600:	beq.n	31656 <btrfs_group_profile_str@@Base+0xa6>
   31602:	movs	r1, #0
   31604:	cmp	r1, r3
   31606:	mov.w	r0, #512	; 0x200
   3160a:	it	eq
   3160c:	cmpeq	r0, r2
   3160e:	bcc.n	31628 <btrfs_group_profile_str@@Base+0x78>
   31610:	cmp	r3, #0
   31612:	it	eq
   31614:	cmpeq	r2, #128	; 0x80
   31616:	beq.n	3165c <btrfs_group_profile_str@@Base+0xac>
   31618:	cmp	r3, #0
   3161a:	it	eq
   3161c:	cmpeq.w	r2, #256	; 0x100
   31620:	bne.n	31662 <btrfs_group_profile_str@@Base+0xb2>
   31622:	ldr	r0, [pc, #84]	; (31678 <btrfs_group_profile_str@@Base+0xc8>)
   31624:	add	r0, pc
   31626:	bx	lr
   31628:	cmp	r3, #0
   3162a:	it	eq
   3162c:	cmpeq.w	r2, #1024	; 0x400
   31630:	bne.n	31668 <btrfs_group_profile_str@@Base+0xb8>
   31632:	ldr	r0, [pc, #72]	; (3167c <btrfs_group_profile_str@@Base+0xcc>)
   31634:	add	r0, pc
   31636:	bx	lr
   31638:	ldr	r0, [pc, #68]	; (31680 <btrfs_group_profile_str@@Base+0xd0>)
   3163a:	add	r0, pc
   3163c:	bx	lr
   3163e:	ldr	r0, [pc, #68]	; (31684 <btrfs_group_profile_str@@Base+0xd4>)
   31640:	add	r0, pc
   31642:	bx	lr
   31644:	ldr	r0, [pc, #64]	; (31688 <btrfs_group_profile_str@@Base+0xd8>)
   31646:	add	r0, pc
   31648:	bx	lr
   3164a:	ldr	r0, [pc, #64]	; (3168c <btrfs_group_profile_str@@Base+0xdc>)
   3164c:	add	r0, pc
   3164e:	bx	lr
   31650:	ldr	r0, [pc, #60]	; (31690 <btrfs_group_profile_str@@Base+0xe0>)
   31652:	add	r0, pc
   31654:	bx	lr
   31656:	ldr	r0, [pc, #60]	; (31694 <btrfs_group_profile_str@@Base+0xe4>)
   31658:	add	r0, pc
   3165a:	bx	lr
   3165c:	ldr	r0, [pc, #56]	; (31698 <btrfs_group_profile_str@@Base+0xe8>)
   3165e:	add	r0, pc
   31660:	bx	lr
   31662:	ldr	r0, [pc, #56]	; (3169c <btrfs_group_profile_str@@Base+0xec>)
   31664:	add	r0, pc
   31666:	bx	lr
   31668:	ldr	r0, [pc, #52]	; (316a0 <btrfs_group_profile_str@@Base+0xf0>)
   3166a:	add	r0, pc
   3166c:	bx	lr
   3166e:	nop
   31670:	bne.n	316d2 <test_num_disk_vs_raid@@Base+0x2e>
   31672:	movs	r0, r0
   31674:	bne.n	316fa <test_num_disk_vs_raid@@Base+0x56>
   31676:	movs	r0, r0
   31678:	bne.n	316c6 <test_num_disk_vs_raid@@Base+0x22>
   3167a:	movs	r0, r0
   3167c:	beq.n	31670 <btrfs_group_profile_str@@Base+0xc0>
   3167e:	movs	r0, r0
   31680:	bne.n	31684 <btrfs_group_profile_str@@Base+0xd4>
   31682:	movs	r0, r0
   31684:	beq.n	31640 <btrfs_group_profile_str@@Base+0x90>
   31686:	movs	r0, r0
   31688:	movs	r4, #113	; 0x71
   3168a:	movs	r2, r0
   3168c:	bpl.n	3160c <btrfs_group_profile_str@@Base+0x5c>
   3168e:	movs	r0, r0
   31690:	bpl.n	31604 <btrfs_group_profile_str@@Base+0x54>
   31692:	movs	r0, r0
   31694:	beq.n	3162e <btrfs_group_profile_str@@Base+0x7e>
   31696:	movs	r0, r0
   31698:	beq.n	31664 <btrfs_group_profile_str@@Base+0xb4>
   3169a:	movs	r0, r0
   3169c:	bpl.n	315ec <btrfs_group_profile_str@@Base+0x3c>
   3169e:	movs	r0, r0
   316a0:	bpl.n	315e4 <btrfs_group_profile_str@@Base+0x34>
	...

000316a4 <test_num_disk_vs_raid@@Base>:
   316a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   316a8:	sub	sp, #36	; 0x24
   316aa:	mov	sl, r3
   316ac:	ldr	r3, [pc, #316]	; (317ec <test_num_disk_vs_raid@@Base+0x148>)
   316ae:	ldrd	r6, r7, [sp, #72]	; 0x48
   316b2:	orr.w	fp, r0, r2
   316b6:	add	r3, pc
   316b8:	ldr	r5, [sp, #80]	; 0x50
   316ba:	cmp	r7, #0
   316bc:	mov	r9, r0
   316be:	it	eq
   316c0:	cmpeq	r6, #2
   316c2:	mov	r8, r2
   316c4:	str	r3, [sp, #28]
   316c6:	beq.n	31754 <test_num_disk_vs_raid@@Base+0xb0>
   316c8:	cmp	r7, #0
   316ca:	it	eq
   316cc:	cmpeq	r6, #3
   316ce:	beq.n	31750 <test_num_disk_vs_raid@@Base+0xac>
   316d0:	cmp	r7, #0
   316d2:	it	eq
   316d4:	cmpeq	r6, #1
   316d6:	beq.n	31758 <test_num_disk_vs_raid@@Base+0xb4>
   316d8:	mov.w	r4, #1088	; 0x440
   316dc:	orr.w	r4, r4, #768	; 0x300
   316e0:	orr.w	r4, r4, #152	; 0x98
   316e4:	cmp	r7, #0
   316e6:	orr.w	r4, r4, #32
   316ea:	it	eq
   316ec:	cmpeq	r6, #2
   316ee:	bcc.n	31706 <test_num_disk_vs_raid@@Base+0x62>
   316f0:	and.w	r2, fp, #32
   316f4:	movs	r3, #0
   316f6:	orrs	r3, r2
   316f8:	beq.n	31706 <test_num_disk_vs_raid@@Base+0x62>
   316fa:	ldr	r0, [pc, #244]	; (317f0 <test_num_disk_vs_raid@@Base+0x14c>)
   316fc:	str	r1, [sp, #16]
   316fe:	add	r0, pc
   31700:	bl	17400 <__btrfs_warning@@Base>
   31704:	ldr	r1, [sp, #16]
   31706:	bic.w	r3, r9, r4
   3170a:	mvn.w	ip, r4
   3170e:	strd	r3, r1, [sp, #16]
   31712:	ldrd	r3, r4, [sp, #16]
   31716:	orrs	r3, r4
   31718:	beq.n	3175c <test_num_disk_vs_raid@@Base+0xb8>
   3171a:	ldr	r2, [pc, #216]	; (317f4 <test_num_disk_vs_raid@@Base+0x150>)
   3171c:	mov	r0, r9
   3171e:	ldr	r3, [sp, #28]
   31720:	ldr	r3, [r3, r2]
   31722:	str	r1, [sp, #28]
   31724:	ldr	r4, [r3, #0]
   31726:	bl	315b0 <btrfs_group_profile_str@@Base>
   3172a:	ldr	r1, [sp, #28]
   3172c:	str	r0, [sp, #16]
   3172e:	mov	r0, r9
   31730:	bl	2fde0 <test_issubvolname@@Base+0x3a>
   31734:	ldr	r2, [pc, #192]	; (317f8 <test_num_disk_vs_raid@@Base+0x154>)
   31736:	ldr	r3, [sp, #16]
   31738:	add	r2, pc
   3173a:	strd	r6, r7, [sp]
   3173e:	str	r0, [sp, #8]
   31740:	movs	r1, #1
   31742:	mov	r0, r4
   31744:	blx	881c <__fprintf_chk@plt+0x4>
   31748:	movs	r0, #1
   3174a:	add	sp, #36	; 0x24
   3174c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31750:	movs	r4, #0
   31752:	b.n	316dc <test_num_disk_vs_raid@@Base+0x38>
   31754:	movs	r4, #0
   31756:	b.n	316e0 <test_num_disk_vs_raid@@Base+0x3c>
   31758:	movs	r4, #0
   3175a:	b.n	316e4 <test_num_disk_vs_raid@@Base+0x40>
   3175c:	and.w	r0, ip, r8
   31760:	mov	r1, sl
   31762:	orrs.w	r3, r0, r1
   31766:	beq.n	3178e <test_num_disk_vs_raid@@Base+0xea>
   31768:	ldr	r2, [pc, #136]	; (317f4 <test_num_disk_vs_raid@@Base+0x150>)
   3176a:	mov	r0, r8
   3176c:	ldr	r3, [sp, #28]
   3176e:	ldr	r3, [r3, r2]
   31770:	ldr	r4, [r3, #0]
   31772:	bl	315b0 <btrfs_group_profile_str@@Base>
   31776:	mov	r1, sl
   31778:	str	r0, [sp, #16]
   3177a:	mov	r0, r8
   3177c:	bl	2fde0 <test_issubvolname@@Base+0x3a>
   31780:	ldr	r2, [pc, #120]	; (317fc <test_num_disk_vs_raid@@Base+0x158>)
   31782:	ldr	r3, [sp, #16]
   31784:	add	r2, pc
   31786:	strd	r6, r7, [sp]
   3178a:	str	r0, [sp, #8]
   3178c:	b.n	31740 <test_num_disk_vs_raid@@Base+0x9c>
   3178e:	cmp	r7, #0
   31790:	mov.w	r1, #0
   31794:	it	eq
   31796:	cmpeq	r6, #3
   31798:	bne.n	317ce <test_num_disk_vs_raid@@Base+0x12a>
   3179a:	and.w	r2, fp, #256	; 0x100
   3179e:	mov	r3, r1
   317a0:	orrs	r3, r2
   317a2:	beq.n	317ac <test_num_disk_vs_raid@@Base+0x108>
   317a4:	ldr	r0, [pc, #88]	; (31800 <test_num_disk_vs_raid@@Base+0x15c>)
   317a6:	add	r0, pc
   317a8:	bl	17400 <__btrfs_warning@@Base>
   317ac:	cbnz	r5, 317e6 <test_num_disk_vs_raid@@Base+0x142>
   317ae:	and.w	r2, r8, #32
   317b2:	mov	r3, r5
   317b4:	orrs	r3, r2
   317b6:	beq.n	317c0 <test_num_disk_vs_raid@@Base+0x11c>
   317b8:	ldr	r5, [sp, #84]	; 0x54
   317ba:	subs	r5, #0
   317bc:	it	ne
   317be:	movne	r5, #1
   317c0:	ldr	r1, [pc, #64]	; (31804 <test_num_disk_vs_raid@@Base+0x160>)
   317c2:	mov	r0, r5
   317c4:	add	r1, pc
   317c6:	bl	174f8 <__btrfs_warning_on@@Base>
   317ca:	movs	r0, #0
   317cc:	b.n	3174a <test_num_disk_vs_raid@@Base+0xa6>
   317ce:	cmp	r7, #0
   317d0:	it	eq
   317d2:	cmpeq	r6, #2
   317d4:	bne.n	317ac <test_num_disk_vs_raid@@Base+0x108>
   317d6:	and.w	r2, fp, #128	; 0x80
   317da:	mov	r3, r1
   317dc:	orrs	r3, r2
   317de:	beq.n	317ac <test_num_disk_vs_raid@@Base+0x108>
   317e0:	ldr	r0, [pc, #36]	; (31808 <test_num_disk_vs_raid@@Base+0x164>)
   317e2:	add	r0, pc
   317e4:	b.n	317a8 <test_num_disk_vs_raid@@Base+0x104>
   317e6:	movs	r5, #0
   317e8:	b.n	317c0 <test_num_disk_vs_raid@@Base+0x11c>
   317ea:	nop
   317ec:	adds	r6, #210	; 0xd2
   317ee:	movs	r3, r0
   317f0:	movs	r3, #192	; 0xc0
   317f2:	movs	r2, r0
   317f4:	lsls	r4, r6, #8
   317f6:	movs	r0, r0
   317f8:	movs	r3, #193	; 0xc1
   317fa:	movs	r2, r0
   317fc:	movs	r3, #218	; 0xda
   317fe:	movs	r2, r0
   31800:	movs	r4, #25
   31802:	movs	r2, r0
   31804:	movs	r4, #113	; 0x71
   31806:	movs	r2, r0
   31808:	movs	r4, #24
   3180a:	movs	r2, r0

0003180c <btrfs_tree_search2_ioctl_supported@@Base>:
   3180c:	ldr	r2, [pc, #144]	; (318a0 <btrfs_tree_search2_ioctl_supported@@Base+0x94>)
   3180e:	ldr	r3, [pc, #148]	; (318a4 <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   31810:	add	r2, pc
   31812:	ldr	r1, [pc, #136]	; (3189c <btrfs_tree_search2_ioctl_supported@@Base+0x90>)
   31814:	push	{r4, r5, r7, lr}
   31816:	sub	sp, #8
   31818:	add	r7, sp, #0
   3181a:	ldr	r3, [r2, r3]
   3181c:	sub.w	sp, sp, #1024	; 0x400
   31820:	movs	r2, #1
   31822:	ldr	r3, [r3, #0]
   31824:	str	r3, [r7, #4]
   31826:	mov.w	r3, #0
   3182a:	movs	r3, #0
   3182c:	strd	r2, r3, [sp]
   31830:	movs	r2, #2
   31832:	movs	r3, #0
   31834:	strd	r2, r3, [sp, #8]
   31838:	strd	r2, r3, [sp, #16]
   3183c:	mov.w	r2, #4294967295	; 0xffffffff
   31840:	movs	r3, #132	; 0x84
   31842:	strd	r3, r3, [sp, #56]	; 0x38
   31846:	mov.w	r3, #4294967295	; 0xffffffff
   3184a:	strd	r2, r3, [sp, #32]
   3184e:	strd	r2, r3, [sp, #48]	; 0x30
   31852:	movs	r3, #1
   31854:	mov.w	r2, #912	; 0x390
   31858:	str	r3, [sp, #64]	; 0x40
   3185a:	movs	r3, #0
   3185c:	strd	r2, r3, [sp, #104]	; 0x68
   31860:	mov	r2, sp
   31862:	movs	r4, #0
   31864:	movs	r5, #0
   31866:	strd	r4, r5, [sp, #24]
   3186a:	strd	r4, r5, [sp, #40]	; 0x28
   3186e:	blx	8578 <ioctl@plt>
   31872:	cmn.w	r0, #95	; 0x5f
   31876:	beq.n	31892 <btrfs_tree_search2_ioctl_supported@@Base+0x86>
   31878:	cmp	r0, #0
   3187a:	it	eq
   3187c:	moveq	r0, #1
   3187e:	ldr	r2, [pc, #40]	; (318a8 <btrfs_tree_search2_ioctl_supported@@Base+0x9c>)
   31880:	ldr	r3, [pc, #32]	; (318a4 <btrfs_tree_search2_ioctl_supported@@Base+0x98>)
   31882:	add	r2, pc
   31884:	ldr	r3, [r2, r3]
   31886:	ldr	r2, [r3, #0]
   31888:	ldr	r3, [r7, #4]
   3188a:	eors	r2, r3
   3188c:	beq.n	31896 <btrfs_tree_search2_ioctl_supported@@Base+0x8a>
   3188e:	blx	84cc <__stack_chk_fail@plt>
   31892:	movs	r0, #0
   31894:	b.n	3187e <btrfs_tree_search2_ioctl_supported@@Base+0x72>
   31896:	adds	r7, #8
   31898:	mov	sp, r7
   3189a:	pop	{r4, r5, r7, pc}
   3189c:	str	r4, [sp, #68]	; 0x44
   3189e:	stmia	r0!, {r4, r5, r6}
   318a0:	adds	r5, #120	; 0x78
   318a2:	movs	r3, r0
   318a4:	lsls	r4, r4, #8
   318a6:	movs	r0, r0
   318a8:	adds	r5, #6
   318aa:	movs	r3, r0

000318ac <get_unit_mode_from_arg@@Base>:
   318ac:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   318b0:	mov	r8, r2
   318b2:	ldr	r2, [pc, #448]	; (31a74 <get_unit_mode_from_arg@@Base+0x1c8>)
   318b4:	sub	sp, #20
   318b6:	ldr	r3, [pc, #448]	; (31a78 <get_unit_mode_from_arg@@Base+0x1cc>)
   318b8:	mov	r7, r0
   318ba:	add	r2, pc
   318bc:	ldr.w	r9, [pc, #444]	; 31a7c <get_unit_mode_from_arg@@Base+0x1d0>
   318c0:	ldr.w	sl, [pc, #444]	; 31a80 <get_unit_mode_from_arg@@Base+0x1d4>
   318c4:	mov	r4, r1
   318c6:	ldr.w	fp, [pc, #444]	; 31a84 <get_unit_mode_from_arg@@Base+0x1d8>
   318ca:	add	r9, pc
   318cc:	ldr	r3, [r2, r3]
   318ce:	add	sl, pc
   318d0:	add	fp, pc
   318d2:	movs	r5, #0
   318d4:	ldr	r3, [r3, #0]
   318d6:	str	r3, [sp, #12]
   318d8:	mov.w	r3, #0
   318dc:	mov.w	r3, #512	; 0x200
   318e0:	str	r3, [sp, #8]
   318e2:	ldr	r3, [r7, #0]
   318e4:	cmp	r3, r5
   318e6:	bgt.n	3190e <get_unit_mode_from_arg@@Base+0x62>
   318e8:	movs	r3, #0
   318ea:	mov	r0, r3
   318ec:	ldr	r2, [r7, #0]
   318ee:	cmp	r2, r0
   318f0:	bgt.w	31a5a <get_unit_mode_from_arg@@Base+0x1ae>
   318f4:	ldr	r2, [pc, #400]	; (31a88 <get_unit_mode_from_arg@@Base+0x1dc>)
   318f6:	str	r3, [r7, #0]
   318f8:	ldr	r3, [pc, #380]	; (31a78 <get_unit_mode_from_arg@@Base+0x1cc>)
   318fa:	add	r2, pc
   318fc:	ldr	r0, [sp, #8]
   318fe:	ldr	r3, [r2, r3]
   31900:	ldr	r2, [r3, #0]
   31902:	ldr	r3, [sp, #12]
   31904:	eors	r2, r3
   31906:	beq.w	31a6e <get_unit_mode_from_arg@@Base+0x1c2>
   3190a:	blx	84cc <__stack_chk_fail@plt>
   3190e:	ldr.w	r6, [r4, r5, lsl #2]
   31912:	mov	r1, r9
   31914:	mov	r0, r6
   31916:	blx	837c <strcmp@plt>
   3191a:	cmp	r0, #0
   3191c:	beq.w	31a6a <get_unit_mode_from_arg@@Base+0x1be>
   31920:	mov	r1, sl
   31922:	mov	r0, r6
   31924:	blx	837c <strcmp@plt>
   31928:	cbnz	r0, 31930 <get_unit_mode_from_arg@@Base+0x84>
   3192a:	mov.w	r3, #256	; 0x100
   3192e:	b.n	3193e <get_unit_mode_from_arg@@Base+0x92>
   31930:	mov	r1, fp
   31932:	mov	r0, r6
   31934:	blx	837c <strcmp@plt>
   31938:	cbnz	r0, 31948 <get_unit_mode_from_arg@@Base+0x9c>
   3193a:	mov.w	r3, #512	; 0x200
   3193e:	str	r3, [sp, #8]
   31940:	str.w	r0, [r4, r5, lsl #2]
   31944:	adds	r5, #1
   31946:	b.n	318e2 <get_unit_mode_from_arg@@Base+0x36>
   31948:	ldr	r1, [pc, #320]	; (31a8c <get_unit_mode_from_arg@@Base+0x1e0>)
   3194a:	mov	r0, r6
   3194c:	add	r1, pc
   3194e:	blx	837c <strcmp@plt>
   31952:	cbnz	r0, 31964 <get_unit_mode_from_arg@@Base+0xb8>
   31954:	mov.w	r1, #512	; 0x200
   31958:	str	r0, [sp, #4]
   3195a:	add	r0, sp, #8
   3195c:	bl	31454 <units_set_mode@@Base>
   31960:	ldr	r3, [sp, #4]
   31962:	b.n	319d0 <get_unit_mode_from_arg@@Base+0x124>
   31964:	ldr	r1, [pc, #296]	; (31a90 <get_unit_mode_from_arg@@Base+0x1e4>)
   31966:	mov	r0, r6
   31968:	add	r1, pc
   3196a:	blx	837c <strcmp@plt>
   3196e:	cbnz	r0, 31978 <get_unit_mode_from_arg@@Base+0xcc>
   31970:	mov.w	r1, #768	; 0x300
   31974:	str	r0, [sp, #4]
   31976:	b.n	3195a <get_unit_mode_from_arg@@Base+0xae>
   31978:	ldr	r1, [pc, #280]	; (31a94 <get_unit_mode_from_arg@@Base+0x1e8>)
   3197a:	mov	r0, r6
   3197c:	add	r1, pc
   3197e:	blx	837c <strcmp@plt>
   31982:	mov	r3, r0
   31984:	cbnz	r0, 31992 <get_unit_mode_from_arg@@Base+0xe6>
   31986:	movs	r1, #2
   31988:	str	r3, [sp, #4]
   3198a:	add	r0, sp, #8
   3198c:	bl	3145c <units_set_base@@Base>
   31990:	b.n	31960 <get_unit_mode_from_arg@@Base+0xb4>
   31992:	ldr	r1, [pc, #260]	; (31a98 <get_unit_mode_from_arg@@Base+0x1ec>)
   31994:	mov	r0, r6
   31996:	add	r1, pc
   31998:	blx	837c <strcmp@plt>
   3199c:	mov	r3, r0
   3199e:	cbnz	r0, 319a6 <get_unit_mode_from_arg@@Base+0xfa>
   319a0:	movs	r1, #3
   319a2:	str	r3, [sp, #4]
   319a4:	b.n	3198a <get_unit_mode_from_arg@@Base+0xde>
   319a6:	ldr	r1, [pc, #244]	; (31a9c <get_unit_mode_from_arg@@Base+0x1f0>)
   319a8:	mov	r0, r6
   319aa:	add	r1, pc
   319ac:	blx	837c <strcmp@plt>
   319b0:	mov	r3, r0
   319b2:	cbnz	r0, 319ba <get_unit_mode_from_arg@@Base+0x10e>
   319b4:	movs	r1, #4
   319b6:	str	r3, [sp, #4]
   319b8:	b.n	3198a <get_unit_mode_from_arg@@Base+0xde>
   319ba:	ldr	r1, [pc, #228]	; (31aa0 <get_unit_mode_from_arg@@Base+0x1f4>)
   319bc:	mov	r0, r6
   319be:	add	r1, pc
   319c0:	blx	837c <strcmp@plt>
   319c4:	cbnz	r0, 319d6 <get_unit_mode_from_arg@@Base+0x12a>
   319c6:	add	r0, sp, #8
   319c8:	movs	r1, #5
   319ca:	bl	3145c <units_set_base@@Base>
   319ce:	movs	r3, #0
   319d0:	str.w	r3, [r4, r5, lsl #2]
   319d4:	b.n	31944 <get_unit_mode_from_arg@@Base+0x98>
   319d6:	cmp.w	r8, #0
   319da:	beq.n	31944 <get_unit_mode_from_arg@@Base+0x98>
   319dc:	ldr	r1, [pc, #196]	; (31aa4 <get_unit_mode_from_arg@@Base+0x1f8>)
   319de:	mov	r0, r6
   319e0:	add	r1, pc
   319e2:	blx	837c <strcmp@plt>
   319e6:	cmp	r0, #0
   319e8:	beq.n	3192a <get_unit_mode_from_arg@@Base+0x7e>
   319ea:	ldr	r1, [pc, #188]	; (31aa8 <get_unit_mode_from_arg@@Base+0x1fc>)
   319ec:	mov	r0, r6
   319ee:	add	r1, pc
   319f0:	blx	837c <strcmp@plt>
   319f4:	cmp	r0, #0
   319f6:	beq.n	3193a <get_unit_mode_from_arg@@Base+0x8e>
   319f8:	ldr	r1, [pc, #176]	; (31aac <get_unit_mode_from_arg@@Base+0x200>)
   319fa:	mov	r0, r6
   319fc:	add	r1, pc
   319fe:	blx	837c <strcmp@plt>
   31a02:	cbnz	r0, 31a0a <get_unit_mode_from_arg@@Base+0x15e>
   31a04:	mov.w	r3, #768	; 0x300
   31a08:	b.n	3193e <get_unit_mode_from_arg@@Base+0x92>
   31a0a:	ldr	r1, [pc, #164]	; (31ab0 <get_unit_mode_from_arg@@Base+0x204>)
   31a0c:	mov	r0, r6
   31a0e:	add	r1, pc
   31a10:	blx	837c <strcmp@plt>
   31a14:	mov	r3, r0
   31a16:	cmp	r0, #0
   31a18:	beq.n	31986 <get_unit_mode_from_arg@@Base+0xda>
   31a1a:	ldr	r1, [pc, #152]	; (31ab4 <get_unit_mode_from_arg@@Base+0x208>)
   31a1c:	mov	r0, r6
   31a1e:	add	r1, pc
   31a20:	blx	837c <strcmp@plt>
   31a24:	mov	r3, r0
   31a26:	cmp	r0, #0
   31a28:	beq.n	319a0 <get_unit_mode_from_arg@@Base+0xf4>
   31a2a:	ldr	r1, [pc, #140]	; (31ab8 <get_unit_mode_from_arg@@Base+0x20c>)
   31a2c:	mov	r0, r6
   31a2e:	add	r1, pc
   31a30:	blx	837c <strcmp@plt>
   31a34:	mov	r3, r0
   31a36:	cmp	r0, #0
   31a38:	beq.n	319b4 <get_unit_mode_from_arg@@Base+0x108>
   31a3a:	ldr	r1, [pc, #128]	; (31abc <get_unit_mode_from_arg@@Base+0x210>)
   31a3c:	mov	r0, r6
   31a3e:	add	r1, pc
   31a40:	blx	837c <strcmp@plt>
   31a44:	mov	r6, r0
   31a46:	cmp	r0, #0
   31a48:	bne.w	31944 <get_unit_mode_from_arg@@Base+0x98>
   31a4c:	add	r0, sp, #8
   31a4e:	movs	r1, #5
   31a50:	bl	3145c <units_set_base@@Base>
   31a54:	str.w	r6, [r4, r5, lsl #2]
   31a58:	b.n	31944 <get_unit_mode_from_arg@@Base+0x98>
   31a5a:	ldr.w	r2, [r4, r0, lsl #2]
   31a5e:	cbz	r2, 31a66 <get_unit_mode_from_arg@@Base+0x1ba>
   31a60:	str.w	r2, [r4, r3, lsl #2]
   31a64:	adds	r3, #1
   31a66:	adds	r0, #1
   31a68:	b.n	318ec <get_unit_mode_from_arg@@Base+0x40>
   31a6a:	mov	r3, r0
   31a6c:	b.n	318ec <get_unit_mode_from_arg@@Base+0x40>
   31a6e:	add	sp, #20
   31a70:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31a74:	adds	r4, #206	; 0xce
   31a76:	movs	r3, r0
   31a78:	lsls	r4, r4, #8
   31a7a:	movs	r0, r0
   31a7c:	ldrh	r5, [r4, #28]
   31a7e:	movs	r0, r0
   31a80:	movs	r3, #172	; 0xac
   31a82:	movs	r2, r0
   31a84:	movs	r3, #176	; 0xb0
   31a86:	movs	r2, r0
   31a88:	adds	r4, #142	; 0x8e
   31a8a:	movs	r3, r0
   31a8c:	movs	r3, #69	; 0x45
   31a8e:	movs	r2, r0
   31a90:	movs	r3, #47	; 0x2f
   31a92:	movs	r2, r0
   31a94:	movs	r3, #32
   31a96:	movs	r2, r0
   31a98:	movs	r3, #15
   31a9a:	movs	r2, r0
   31a9c:	movs	r3, #4
   31a9e:	movs	r2, r0
   31aa0:	movs	r2, #249	; 0xf9
   31aa2:	movs	r2, r0
   31aa4:	movs	r2, #224	; 0xe0
   31aa6:	movs	r2, r0
   31aa8:	movs	r2, #213	; 0xd5
   31aaa:	movs	r2, r0
   31aac:	movs	r2, #202	; 0xca
   31aae:	movs	r2, r0
   31ab0:	movs	r2, #187	; 0xbb
   31ab2:	movs	r2, r0
   31ab4:	movs	r2, #174	; 0xae
   31ab6:	movs	r2, r0
   31ab8:	movs	r2, #161	; 0xa1
   31aba:	movs	r2, r0
   31abc:	movs	r2, #148	; 0x94
   31abe:	movs	r2, r0

00031ac0 <div_factor@@Base>:
   31ac0:	cmp	r2, #10
   31ac2:	push	{r3, r4, r5, lr}
   31ac4:	beq.n	31ae0 <div_factor@@Base+0x20>
   31ac6:	asrs	r5, r2, #31
   31ac8:	movs	r3, #0
   31aca:	muls	r1, r2
   31acc:	mla	r1, r0, r5, r1
   31ad0:	umull	r4, r5, r2, r0
   31ad4:	movs	r2, #10
   31ad6:	add	r5, r1
   31ad8:	mov	r1, r5
   31ada:	mov	r0, r4
   31adc:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   31ae0:	pop	{r3, r4, r5, pc}

00031ae2 <count_digits@@Base>:
   31ae2:	mov	r2, r0
   31ae4:	mov	r3, r1
   31ae6:	orrs.w	r1, r2, r3
   31aea:	push	{r4, r6, r7, lr}
   31aec:	beq.n	31b14 <count_digits@@Base+0x32>
   31aee:	movs	r4, #0
   31af0:	mov	r6, r2
   31af2:	mov	r7, r3
   31af4:	movs	r2, #10
   31af6:	movs	r3, #0
   31af8:	mov	r0, r6
   31afa:	mov	r1, r7
   31afc:	bl	39504 <btrfs_util_strerror@@Base+0x7fc>
   31b00:	cmp	r7, #0
   31b02:	it	eq
   31b04:	cmpeq	r6, #10
   31b06:	add.w	r4, r4, #1
   31b0a:	mov	r2, r0
   31b0c:	mov	r3, r1
   31b0e:	bcs.n	31af0 <count_digits@@Base+0xe>
   31b10:	mov	r0, r4
   31b12:	pop	{r4, r6, r7, pc}
   31b14:	movs	r4, #1
   31b16:	b.n	31b10 <count_digits@@Base+0x2e>

00031b18 <string_is_numerical@@Base>:
   31b18:	cbz	r0, 31b3a <string_is_numerical@@Base+0x22>
   31b1a:	ldrb	r3, [r0, #0]
   31b1c:	subs	r3, #48	; 0x30
   31b1e:	cmp	r3, #9
   31b20:	bhi.n	31b38 <string_is_numerical@@Base+0x20>
   31b22:	subs	r3, r0, #1
   31b24:	ldrb.w	r0, [r3, #1]!
   31b28:	sub.w	r2, r0, #48	; 0x30
   31b2c:	cmp	r2, #9
   31b2e:	bls.n	31b24 <string_is_numerical@@Base+0xc>
   31b30:	clz	r0, r0
   31b34:	lsrs	r0, r0, #5
   31b36:	bx	lr
   31b38:	movs	r0, #0
   31b3a:	bx	lr

00031b3c <prefixcmp@@Base>:
   31b3c:	subs	r1, #1
   31b3e:	subs	r3, r0, #1
   31b40:	ldrb.w	r0, [r1, #1]!
   31b44:	cbz	r0, 31b50 <prefixcmp@@Base+0x14>
   31b46:	ldrb.w	r2, [r3, #1]!
   31b4a:	cmp	r0, r2
   31b4c:	beq.n	31b40 <prefixcmp@@Base+0x4>
   31b4e:	subs	r0, r0, r2
   31b50:	bx	lr

00031b52 <subvol_strip_mountpoint@@Base>:
   31b52:	push	{r4, r5, r6, lr}
   31b54:	mov	r6, r0
   31b56:	mov	r5, r1
   31b58:	blx	8704 <strlen@plt>
   31b5c:	mov	r4, r0
   31b5e:	cbz	r0, 31b96 <subvol_strip_mountpoint@@Base+0x44>
   31b60:	mov	r2, r0
   31b62:	mov	r1, r5
   31b64:	mov	r0, r6
   31b66:	blx	893c <strncmp@plt>
   31b6a:	cbnz	r0, 31b78 <subvol_strip_mountpoint@@Base+0x26>
   31b6c:	cmp	r4, #1
   31b6e:	mov	r3, r4
   31b70:	beq.n	31b88 <subvol_strip_mountpoint@@Base+0x36>
   31b72:	ldrb	r2, [r5, r4]
   31b74:	cmp	r2, #47	; 0x2f
   31b76:	beq.n	31b88 <subvol_strip_mountpoint@@Base+0x36>
   31b78:	ldr	r0, [pc, #32]	; (31b9c <subvol_strip_mountpoint@@Base+0x4a>)
   31b7a:	mov	r1, r6
   31b7c:	add	r0, pc
   31b7e:	bl	1747c <__btrfs_error@@Base>
   31b82:	movs	r0, #1
   31b84:	blx	86f8 <exit@plt>
   31b88:	add	r6, r4
   31b8a:	ldrb.w	r2, [r6, #-1]
   31b8e:	cmp	r2, #47	; 0x2f
   31b90:	it	ne
   31b92:	addne	r3, r4, #1
   31b94:	add	r5, r3
   31b96:	mov	r0, r5
   31b98:	pop	{r4, r5, r6, pc}
   31b9a:	nop
   31b9c:	movs	r1, #89	; 0x59
   31b9e:	movs	r2, r0

00031ba0 <init_rand_seed@@Base>:
   31ba0:	ldr	r3, [pc, #24]	; (31bbc <init_rand_seed@@Base+0x1c>)
   31ba2:	mvns	r2, r0
   31ba4:	lsrs	r0, r0, #16
   31ba6:	add	r3, pc
   31ba8:	orr.w	r0, r0, r1, lsl #16
   31bac:	mvns	r1, r1
   31bae:	mvns	r0, r0
   31bb0:	strh	r2, [r3, #0]
   31bb2:	strh	r0, [r3, #2]
   31bb4:	movs	r2, #1
   31bb6:	strh	r1, [r3, #4]
   31bb8:	str	r2, [r3, #8]
   31bba:	bx	lr
   31bbc:	mov	lr, sl
   31bbe:	movs	r3, r0

00031bc0 <rand_u32@@Base>:
   31bc0:	push	{r3, lr}
   31bc2:	ldr	r3, [pc, #24]	; (31bdc <rand_u32@@Base+0x1c>)
   31bc4:	add	r3, pc
   31bc6:	ldr	r3, [r3, #8]
   31bc8:	cbnz	r3, 31bce <rand_u32@@Base+0xe>
   31bca:	bl	2fe78 <test_issubvolname@@Base+0xd2>
   31bce:	ldr	r0, [pc, #16]	; (31be0 <rand_u32@@Base+0x20>)
   31bd0:	ldmia.w	sp!, {r3, lr}
   31bd4:	add	r0, pc
   31bd6:	b.w	847c <jrand48@plt>
   31bda:	nop
   31bdc:	mov	r8, r7
   31bde:	movs	r3, r0
   31be0:	mov	r8, r5
   31be2:	movs	r3, r0

00031be4 <rand_range@@Base>:
   31be4:	ldr	r3, [pc, #32]	; (31c08 <rand_range@@Base+0x24>)
   31be6:	push	{r4, lr}
   31be8:	add	r3, pc
   31bea:	mov	r4, r0
   31bec:	ldr	r3, [r3, #8]
   31bee:	cbnz	r3, 31bf4 <rand_range@@Base+0x10>
   31bf0:	bl	2fe78 <test_issubvolname@@Base+0xd2>
   31bf4:	ldr	r0, [pc, #20]	; (31c0c <rand_range@@Base+0x28>)
   31bf6:	add	r0, pc
   31bf8:	blx	8480 <jrand48@plt+0x4>
   31bfc:	mov	r1, r4
   31bfe:	bl	38f7c <btrfs_util_strerror@@Base+0x274>
   31c02:	mov	r0, r1
   31c04:	pop	{r4, pc}
   31c06:	nop
   31c08:	mov	ip, r2
   31c0a:	movs	r3, r0
   31c0c:	mov	lr, r0
   31c0e:	movs	r3, r0

00031c10 <rand_int@@Base>:
   31c10:	b.w	31bc0 <rand_u32@@Base>

00031c14 <rand_u64@@Base>:
   31c14:	push	{r3, r4, r5, lr}
   31c16:	bl	31bc0 <rand_u32@@Base>
   31c1a:	movs	r4, #0
   31c1c:	mov	r5, r0
   31c1e:	bl	31bc0 <rand_u32@@Base>
   31c22:	adds	r0, r4, r0
   31c24:	adc.w	r1, r5, #0
   31c28:	pop	{r3, r4, r5, pc}

00031c2a <rand_u16@@Base>:
   31c2a:	push	{r3, lr}
   31c2c:	bl	31bc0 <rand_u32@@Base>
   31c30:	uxth	r0, r0
   31c32:	pop	{r3, pc}

00031c34 <rand_u8@@Base>:
   31c34:	push	{r3, lr}
   31c36:	bl	31bc0 <rand_u32@@Base>
   31c3a:	uxtb	r0, r0
   31c3c:	pop	{r3, pc}

00031c3e <btrfs_config_init@@Base>:
   31c3e:	ldr	r3, [pc, #12]	; (31c4c <btrfs_config_init@@Base+0xe>)
   31c40:	ldr	r2, [pc, #12]	; (31c50 <btrfs_config_init@@Base+0x12>)
   31c42:	add	r3, pc
   31c44:	ldr	r3, [r3, r2]
   31c46:	movs	r2, #4
   31c48:	str	r2, [r3, #0]
   31c4a:	bx	lr
   31c4c:	adds	r1, #70	; 0x46
   31c4e:	movs	r3, r0
   31c50:	lsls	r0, r4, #8
	...

00031c54 <total_memory@@Base>:
   31c54:	ldr	r2, [pc, #72]	; (31ca0 <total_memory@@Base+0x4c>)
   31c56:	ldr	r3, [pc, #76]	; (31ca4 <total_memory@@Base+0x50>)
   31c58:	add	r2, pc
   31c5a:	push	{lr}
   31c5c:	sub	sp, #76	; 0x4c
   31c5e:	ldr	r3, [r2, r3]
   31c60:	add	r0, sp, #4
   31c62:	ldr	r3, [r3, #0]
   31c64:	str	r3, [sp, #68]	; 0x44
   31c66:	mov.w	r3, #0
   31c6a:	blx	8624 <sysinfo@plt>
   31c6e:	cmp	r0, #0
   31c70:	bge.n	31c92 <total_memory@@Base+0x3e>
   31c72:	ldr	r0, [pc, #52]	; (31ca8 <total_memory@@Base+0x54>)
   31c74:	add	r0, pc
   31c76:	bl	1747c <__btrfs_error@@Base>
   31c7a:	mov.w	r0, #4294967295	; 0xffffffff
   31c7e:	ldr	r2, [pc, #44]	; (31cac <total_memory@@Base+0x58>)
   31c80:	ldr	r3, [pc, #32]	; (31ca4 <total_memory@@Base+0x50>)
   31c82:	add	r2, pc
   31c84:	ldr	r3, [r2, r3]
   31c86:	ldr	r2, [r3, #0]
   31c88:	ldr	r3, [sp, #68]	; 0x44
   31c8a:	eors	r2, r3
   31c8c:	beq.n	31c9a <total_memory@@Base+0x46>
   31c8e:	blx	84cc <__stack_chk_fail@plt>
   31c92:	ldr	r3, [sp, #20]
   31c94:	ldr	r0, [sp, #56]	; 0x38
   31c96:	muls	r0, r3
   31c98:	b.n	31c7e <total_memory@@Base+0x2a>
   31c9a:	add	sp, #76	; 0x4c
   31c9c:	ldr.w	pc, [sp], #4
   31ca0:	adds	r1, #48	; 0x30
   31ca2:	movs	r3, r0
   31ca4:	lsls	r4, r4, #8
   31ca6:	movs	r0, r0
   31ca8:	movs	r0, #120	; 0x78
   31caa:	movs	r2, r0
   31cac:	adds	r1, #6
   31cae:	movs	r3, r0

00031cb0 <print_device_info@@Base>:
   31cb0:	push	{r0, r1, r4, lr}
   31cb2:	mov	r2, r1
   31cb4:	mov	r4, r0
   31cb6:	cbz	r1, 31cc2 <print_device_info@@Base+0x12>
   31cb8:	ldr	r1, [pc, #28]	; (31cd8 <print_device_info@@Base+0x28>)
   31cba:	movs	r0, #1
   31cbc:	add	r1, pc
   31cbe:	blx	87f4 <__printf_chk@plt+0x4>
   31cc2:	ldr	r3, [r4, #32]
   31cc4:	movs	r0, #1
   31cc6:	ldr	r1, [pc, #20]	; (31cdc <print_device_info@@Base+0x2c>)
   31cc8:	str	r3, [sp, #0]
   31cca:	add	r1, pc
   31ccc:	ldrd	r2, r3, [r4, #64]	; 0x40
   31cd0:	blx	87f4 <__printf_chk@plt+0x4>
   31cd4:	add	sp, #8
   31cd6:	pop	{r4, pc}
   31cd8:	b.n	31ac0 <div_factor@@Base>
   31cda:	movs	r0, r0
   31cdc:	movs	r0, #62	; 0x3e
   31cde:	movs	r2, r0

00031ce0 <print_all_devices@@Base>:
   31ce0:	push	{r4, r5, r6, lr}
   31ce2:	mov	r4, r0
   31ce4:	ldr	r0, [pc, #36]	; (31d0c <print_all_devices@@Base+0x2c>)
   31ce6:	ldr	r6, [pc, #40]	; (31d10 <print_all_devices@@Base+0x30>)
   31ce8:	add	r0, pc
   31cea:	blx	8618 <puts@plt+0x4>
   31cee:	ldr	r5, [r4, #0]
   31cf0:	add	r6, pc
   31cf2:	cmp	r5, r4
   31cf4:	bne.n	31d00 <print_all_devices@@Base+0x20>
   31cf6:	ldmia.w	sp!, {r4, r5, r6, lr}
   31cfa:	movs	r0, #10
   31cfc:	b.w	878c <putchar@plt>
   31d00:	mov	r0, r5
   31d02:	mov	r1, r6
   31d04:	bl	31cb0 <print_device_info@@Base>
   31d08:	ldr	r5, [r5, #0]
   31d0a:	b.n	31cf2 <print_all_devices@@Base+0x12>
   31d0c:	movs	r0, #62	; 0x3e
   31d0e:	movs	r2, r0
   31d10:	ldrh	r3, [r5, #26]
   31d12:	movs	r0, r0
   31d14:	ldr	r2, [pc, #284]	; (31e34 <print_all_devices@@Base+0x154>)
   31d16:	ldr	r3, [pc, #288]	; (31e38 <print_all_devices@@Base+0x158>)
   31d18:	push	{r4, r5, r6, r7, lr}
   31d1a:	add	r2, pc
   31d1c:	sub.w	sp, sp, #516	; 0x204
   31d20:	mov	r4, r1
   31d22:	ldr	r3, [r2, r3]
   31d24:	mov	r5, sp
   31d26:	ldr	r1, [pc, #264]	; (31e30 <print_all_devices@@Base+0x150>)
   31d28:	mov	r2, r5
   31d2a:	ldr	r3, [r3, #0]
   31d2c:	str	r3, [sp, #508]	; 0x1fc
   31d2e:	mov.w	r3, #0
   31d32:	blx	8578 <ioctl@plt>
   31d36:	adds	r0, #1
   31d38:	beq.n	31e24 <print_all_devices@@Base+0x144>
   31d3a:	ldrd	r2, r3, [sp]
   31d3e:	add	r7, sp, #296	; 0x128
   31d40:	add.w	r6, r4, #32
   31d44:	strd	r2, r3, [r4]
   31d48:	ldrd	r2, r3, [r5, #264]	; 0x108
   31d4c:	strd	r2, r3, [r4, #8]
   31d50:	ldrd	r2, r3, [r5, #272]	; 0x110
   31d54:	strd	r2, r3, [r4, #16]
   31d58:	ldrd	r2, r3, [r5, #288]	; 0x120
   31d5c:	strd	r2, r3, [r4, #24]
   31d60:	ldrd	r2, r3, [r5, #280]	; 0x118
   31d64:	strd	r2, r3, [r4, #80]	; 0x50
   31d68:	add	r2, sp, #312	; 0x138
   31d6a:	mov	r3, r7
   31d6c:	adds	r6, #8
   31d6e:	ldmia	r3!, {r0, r1}
   31d70:	cmp	r3, r2
   31d72:	str.w	r0, [r6, #-8]
   31d76:	mov	r7, r3
   31d78:	str.w	r1, [r6, #-4]
   31d7c:	bne.n	31d6a <print_all_devices@@Base+0x8a>
   31d7e:	add.w	r7, r4, #48	; 0x30
   31d82:	add	r3, sp, #328	; 0x148
   31d84:	mov	r6, r2
   31d86:	adds	r7, #8
   31d88:	ldmia	r6!, {r0, r1}
   31d8a:	cmp	r6, r3
   31d8c:	str.w	r0, [r7, #-8]
   31d90:	mov	r2, r6
   31d92:	str.w	r1, [r7, #-4]
   31d96:	bne.n	31d84 <print_all_devices@@Base+0xa4>
   31d98:	add.w	r6, r4, #64	; 0x40
   31d9c:	add	r7, sp, #344	; 0x158
   31d9e:	mov	r2, r3
   31da0:	adds	r6, #8
   31da2:	ldmia	r2!, {r0, r1}
   31da4:	cmp	r2, r7
   31da6:	str.w	r0, [r6, #-8]
   31daa:	mov	r3, r2
   31dac:	str.w	r1, [r6, #-4]
   31db0:	bne.n	31d9e <print_all_devices@@Base+0xbe>
   31db2:	ldrd	r2, r3, [r5, #344]	; 0x158
   31db6:	movs	r0, #0
   31db8:	strd	r2, r3, [r4, #88]	; 0x58
   31dbc:	ldrd	r2, r3, [r5, #352]	; 0x160
   31dc0:	strd	r2, r3, [r4, #96]	; 0x60
   31dc4:	ldrd	r2, r3, [r5, #360]	; 0x168
   31dc8:	strd	r2, r3, [r4, #104]	; 0x68
   31dcc:	ldrd	r2, r3, [r5, #368]	; 0x170
   31dd0:	strd	r2, r3, [r4, #112]	; 0x70
   31dd4:	ldr.w	r3, [r5, #376]	; 0x178
   31dd8:	str	r3, [r4, #120]	; 0x78
   31dda:	ldr.w	r3, [r5, #384]	; 0x180
   31dde:	str	r3, [r4, #124]	; 0x7c
   31de0:	ldr.w	r3, [r5, #392]	; 0x188
   31de4:	str.w	r3, [r4, #128]	; 0x80
   31de8:	ldr.w	r3, [r5, #400]	; 0x190
   31dec:	str.w	r3, [r4, #132]	; 0x84
   31df0:	ldr.w	r3, [r5, #408]	; 0x198
   31df4:	str.w	r3, [r4, #136]	; 0x88
   31df8:	ldr.w	r3, [r5, #416]	; 0x1a0
   31dfc:	str.w	r3, [r4, #140]	; 0x8c
   31e00:	ldr.w	r3, [r5, #424]	; 0x1a8
   31e04:	str.w	r3, [r4, #144]	; 0x90
   31e08:	ldr.w	r3, [r5, #432]	; 0x1b0
   31e0c:	str.w	r3, [r4, #148]	; 0x94
   31e10:	ldr	r2, [pc, #40]	; (31e3c <print_all_devices@@Base+0x15c>)
   31e12:	ldr	r3, [pc, #36]	; (31e38 <print_all_devices@@Base+0x158>)
   31e14:	add	r2, pc
   31e16:	ldr	r3, [r2, r3]
   31e18:	ldr	r2, [r3, #0]
   31e1a:	ldr	r3, [sp, #508]	; 0x1fc
   31e1c:	eors	r2, r3
   31e1e:	beq.n	31e28 <print_all_devices@@Base+0x148>
   31e20:	blx	84cc <__stack_chk_fail@plt>
   31e24:	movs	r0, #23
   31e26:	b.n	31e10 <print_all_devices@@Base+0x130>
   31e28:	add.w	sp, sp, #516	; 0x204
   31e2c:	pop	{r4, r5, r6, r7, pc}
   31e2e:	nop
   31e30:	str	r4, [sp, #240]	; 0xf0
   31e32:	strh	r0, [r7, #14]
   31e34:	adds	r0, #110	; 0x6e
   31e36:	movs	r3, r0
   31e38:	lsls	r4, r4, #8
   31e3a:	movs	r0, r0
   31e3c:	cmp	r7, #116	; 0x74
   31e3e:	movs	r3, r0
   31e40:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   31e44:	mov	r7, r0
   31e46:	mov	r0, r1
   31e48:	mov	r9, r1
   31e4a:	mov	r6, r2
   31e4c:	mov	r8, r3
   31e4e:	blx	8704 <strlen@plt>
   31e52:	mov	r5, r0
   31e54:	cmp	r5, #1
   31e56:	bls.n	31e62 <print_all_devices@@Base+0x182>
   31e58:	subs	r3, r5, #1
   31e5a:	ldrb.w	r2, [r9, r3]
   31e5e:	cmp	r2, #47	; 0x2f
   31e60:	beq.n	31eb6 <print_all_devices@@Base+0x1d6>
   31e62:	adds	r0, r5, #1
   31e64:	blx	8634 <malloc@plt+0x4>
   31e68:	mov	r4, r0
   31e6a:	cmp	r0, #0
   31e6c:	beq.n	31f04 <print_all_devices@@Base+0x224>
   31e6e:	mov	r2, r5
   31e70:	mov	r1, r9
   31e72:	blx	843c <memcpy@plt+0x4>
   31e76:	mov.w	r9, #0
   31e7a:	mov	r2, r5
   31e7c:	strb.w	r9, [r4, r5]
   31e80:	movs	r1, #47	; 0x2f
   31e82:	mov	r0, r4
   31e84:	blx	8728 <memrchr@plt>
   31e88:	cmp	r4, r0
   31e8a:	mov	r5, r0
   31e8c:	bne.n	31eba <print_all_devices@@Base+0x1da>
   31e8e:	ldr.w	sl, [pc, #120]	; 31f08 <print_all_devices@@Base+0x228>
   31e92:	adds	r5, r4, #1
   31e94:	add	sl, pc
   31e96:	mov	r0, r5
   31e98:	blx	8704 <strlen@plt>
   31e9c:	cmp	r0, r8
   31e9e:	mov	r9, r0
   31ea0:	bcc.n	31ece <print_all_devices@@Base+0x1ee>
   31ea2:	mov	r0, r4
   31ea4:	blx	83f0 <free@plt+0x4>
   31ea8:	blx	8740 <__errno_location@plt>
   31eac:	movs	r3, #36	; 0x24
   31eae:	str	r3, [r0, #0]
   31eb0:	movs	r0, #3
   31eb2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   31eb6:	mov	r5, r3
   31eb8:	b.n	31e54 <print_all_devices@@Base+0x174>
   31eba:	cbz	r0, 31ec4 <print_all_devices@@Base+0x1e4>
   31ebc:	mov	sl, r4
   31ebe:	strb.w	r9, [r5], #1
   31ec2:	b.n	31e96 <print_all_devices@@Base+0x1b6>
   31ec4:	ldr.w	sl, [pc, #68]	; 31f0c <print_all_devices@@Base+0x22c>
   31ec8:	mov	r5, r4
   31eca:	add	sl, pc
   31ecc:	b.n	31e96 <print_all_devices@@Base+0x1b6>
   31ece:	mov	r2, r0
   31ed0:	mov	r1, r5
   31ed2:	mov	r0, r6
   31ed4:	movs	r5, #0
   31ed6:	blx	843c <memcpy@plt+0x4>
   31eda:	mov.w	r2, #16384	; 0x4000
   31ede:	mov	r1, sl
   31ee0:	mov	r0, r7
   31ee2:	strb.w	r5, [r6, r9]
   31ee6:	blx	84c0 <openat@plt>
   31eea:	ldr	r3, [sp, #32]
   31eec:	str	r0, [r3, #0]
   31eee:	adds	r0, #1
   31ef0:	mov	r0, r4
   31ef2:	bne.n	31efc <print_all_devices@@Base+0x21c>
   31ef4:	blx	83f0 <free@plt+0x4>
   31ef8:	movs	r0, #7
   31efa:	b.n	31eb2 <print_all_devices@@Base+0x1d2>
   31efc:	blx	83f0 <free@plt+0x4>
   31f00:	mov	r0, r5
   31f02:	b.n	31eb2 <print_all_devices@@Base+0x1d2>
   31f04:	movs	r0, #2
   31f06:	b.n	31eb2 <print_all_devices@@Base+0x1d2>
   31f08:	ldr	r4, [sp, #508]	; 0x1fc
   31f0a:	movs	r0, r0
   31f0c:	asrs	r2, r4, #31
   31f0e:	movs	r2, r0
   31f10:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31f14:	sub.w	sp, sp, #4096	; 0x1000
   31f18:	sub	sp, #20
   31f1a:	ldr	r1, [pc, #528]	; (3212c <print_all_devices@@Base+0x44c>)
   31f1c:	mov	r6, r2
   31f1e:	mov	r7, r3
   31f20:	ldr	r2, [pc, #524]	; (32130 <print_all_devices@@Base+0x450>)
   31f22:	add.w	r3, sp, #4128	; 0x1020
   31f26:	add	r1, pc
   31f28:	add.w	r8, sp, #16
   31f2c:	sub.w	r5, r8, #8
   31f30:	ldr	r4, [r3, #24]
   31f32:	ldr	r2, [r1, r2]
   31f34:	adds	r3, #24
   31f36:	add.w	r3, sp, #4096	; 0x1000
   31f3a:	mov	r9, r0
   31f3c:	ldr	r2, [r2, #0]
   31f3e:	str	r2, [r3, #12]
   31f40:	mov.w	r2, #0
   31f44:	mov	r0, r5
   31f46:	mov.w	r2, #4096	; 0x1000
   31f4a:	movs	r1, #0
   31f4c:	adds	r3, #12
   31f4e:	blx	8780 <memset@plt+0x4>
   31f52:	movs	r2, #1
   31f54:	movs	r3, #0
   31f56:	strd	r6, r7, [r5, #16]
   31f5a:	strd	r2, r3, [r8, #-8]
   31f5e:	mov.w	r2, #4294967295	; 0xffffffff
   31f62:	mov.w	r3, #4294967295	; 0xffffffff
   31f66:	strd	r6, r7, [r5, #8]
   31f6a:	strd	r2, r3, [r5, #32]
   31f6e:	strd	r2, r3, [r5, #48]	; 0x30
   31f72:	movs	r2, #132	; 0x84
   31f74:	movs	r3, #144	; 0x90
   31f76:	strd	r2, r3, [r5, #56]	; 0x38
   31f7a:	cbnz	r4, 31fce <print_all_devices@@Base+0x2ee>
   31f7c:	movs	r6, #0
   31f7e:	movs	r3, #132	; 0x84
   31f80:	str	r3, [r5, #60]	; 0x3c
   31f82:	ldr.w	fp, [pc, #432]	; 32134 <print_all_devices@@Base+0x454>
   31f86:	movs	r2, #0
   31f88:	movs	r7, #1
   31f8a:	mov	ip, r2
   31f8c:	mov.w	sl, #4096	; 0x1000
   31f90:	ldr	r3, [r5, #64]	; 0x40
   31f92:	cmp	r3, ip
   31f94:	bhi.n	31ffe <print_all_devices@@Base+0x31e>
   31f96:	mov	r2, r5
   31f98:	mov	r1, fp
   31f9a:	mov	r0, r9
   31f9c:	str.w	sl, [r5, #64]	; 0x40
   31fa0:	blx	8578 <ioctl@plt>
   31fa4:	adds	r0, #1
   31fa6:	beq.w	3211c <print_all_devices@@Base+0x43c>
   31faa:	ldr	r3, [r5, #64]	; 0x40
   31fac:	cbnz	r3, 31ffa <print_all_devices@@Base+0x31a>
   31fae:	cbnz	r7, 31fee <print_all_devices@@Base+0x30e>
   31fb0:	movs	r0, #0
   31fb2:	ldr	r1, [pc, #388]	; (32138 <print_all_devices@@Base+0x458>)
   31fb4:	add.w	r3, sp, #4096	; 0x1000
   31fb8:	ldr	r2, [pc, #372]	; (32130 <print_all_devices@@Base+0x450>)
   31fba:	adds	r3, #12
   31fbc:	add	r1, pc
   31fbe:	ldr	r2, [r1, r2]
   31fc0:	ldr	r1, [r2, #0]
   31fc2:	ldr	r2, [r3, #0]
   31fc4:	eors	r1, r2
   31fc6:	beq.w	32120 <print_all_devices@@Base+0x440>
   31fca:	blx	84cc <__stack_chk_fail@plt>
   31fce:	cmp	r7, #0
   31fd0:	mov.w	r2, #0
   31fd4:	it	eq
   31fd6:	cmpeq	r6, #5
   31fd8:	mov.w	r3, #0
   31fdc:	strd	r6, r7, [r4]
   31fe0:	strd	r2, r3, [r4, #8]
   31fe4:	strd	r2, r3, [r4, #16]
   31fe8:	beq.n	31f7c <print_all_devices@@Base+0x29c>
   31fea:	movs	r6, #1
   31fec:	b.n	31f82 <print_all_devices@@Base+0x2a2>
   31fee:	blx	8740 <__errno_location@plt>
   31ff2:	movs	r3, #2
   31ff4:	str	r3, [r0, #0]
   31ff6:	movs	r0, #6
   31ff8:	b.n	31fb2 <print_all_devices@@Base+0x2d2>
   31ffa:	movs	r2, #0
   31ffc:	mov	ip, r2
   31ffe:	add	r3, sp, #112	; 0x70
   32000:	add	r3, r2
   32002:	ldr	r1, [r3, #24]
   32004:	cmp	r1, #132	; 0x84
   32006:	bne.n	320ee <print_all_devices@@Base+0x40e>
   32008:	cmp	r4, #0
   3200a:	beq.n	320d0 <print_all_devices@@Base+0x3f0>
   3200c:	ldr.w	r0, [r3, #240]	; 0xf0
   32010:	addw	r7, r3, #295	; 0x127
   32014:	ldr.w	r1, [r3, #244]	; 0xf4
   32018:	strd	r0, r1, [r4, #24]
   3201c:	addw	r1, r3, #279	; 0x117
   32020:	add.w	r0, r4, #32
   32024:	ldr.w	lr, [r1], #4
   32028:	cmp	r1, r7
   3202a:	str.w	lr, [r0], #4
   3202e:	bne.n	32024 <print_all_devices@@Base+0x344>
   32030:	add.w	r0, r4, #48	; 0x30
   32034:	addw	r7, r3, #311	; 0x137
   32038:	ldr.w	lr, [r1], #4
   3203c:	cmp	r1, r7
   3203e:	str.w	lr, [r0], #4
   32042:	bne.n	32038 <print_all_devices@@Base+0x358>
   32044:	add.w	r0, r4, #64	; 0x40
   32048:	addw	r7, r3, #327	; 0x147
   3204c:	ldr.w	lr, [r1], #4
   32050:	cmp	r1, r7
   32052:	str.w	lr, [r0], #4
   32056:	bne.n	3204c <print_all_devices@@Base+0x36c>
   32058:	ldr.w	r0, [r3, #192]	; 0xc0
   3205c:	ldr.w	r1, [r3, #196]	; 0xc4
   32060:	strd	r0, r1, [r4, #80]	; 0x50
   32064:	ldr.w	r0, [r3, #327]	; 0x147
   32068:	ldr.w	r1, [r3, #331]	; 0x14b
   3206c:	strd	r0, r1, [r4, #88]	; 0x58
   32070:	ldr.w	r0, [r3, #335]	; 0x14f
   32074:	ldr.w	r1, [r3, #339]	; 0x153
   32078:	strd	r0, r1, [r4, #96]	; 0x60
   3207c:	ldr.w	r0, [r3, #343]	; 0x157
   32080:	ldr.w	r1, [r3, #347]	; 0x15b
   32084:	strd	r0, r1, [r4, #104]	; 0x68
   32088:	ldr.w	r1, [r3, #355]	; 0x163
   3208c:	ldr.w	r0, [r3, #351]	; 0x15f
   32090:	strd	r0, r1, [r4, #112]	; 0x70
   32094:	ldr.w	r1, [r3, #359]	; 0x167
   32098:	str	r1, [r4, #120]	; 0x78
   3209a:	ldr.w	r1, [r3, #367]	; 0x16f
   3209e:	str	r1, [r4, #124]	; 0x7c
   320a0:	ldr.w	r1, [r3, #371]	; 0x173
   320a4:	str.w	r1, [r4, #128]	; 0x80
   320a8:	ldr.w	r1, [r3, #379]	; 0x17b
   320ac:	str.w	r1, [r4, #132]	; 0x84
   320b0:	ldr.w	r1, [r3, #383]	; 0x17f
   320b4:	str.w	r1, [r4, #136]	; 0x88
   320b8:	ldr.w	r1, [r3, #391]	; 0x187
   320bc:	str.w	r1, [r4, #140]	; 0x8c
   320c0:	ldr.w	r1, [r3, #395]	; 0x18b
   320c4:	str.w	r1, [r4, #144]	; 0x90
   320c8:	ldr.w	r1, [r3, #403]	; 0x193
   320cc:	str.w	r1, [r4, #148]	; 0x94
   320d0:	movs	r7, #0
   320d2:	movs	r1, #144	; 0x90
   320d4:	str	r1, [r5, #56]	; 0x38
   320d6:	ldr	r3, [r3, #28]
   320d8:	adds	r2, #32
   320da:	add.w	ip, ip, #1
   320de:	add	r2, r3
   320e0:	cmp	r7, #0
   320e2:	bne.w	31f90 <print_all_devices@@Base+0x2b0>
   320e6:	cmp	r6, #0
   320e8:	bne.w	31f90 <print_all_devices@@Base+0x2b0>
   320ec:	b.n	31fb0 <print_all_devices@@Base+0x2d0>
   320ee:	cmp	r1, #144	; 0x90
   320f0:	bne.n	320d6 <print_all_devices@@Base+0x3f6>
   320f2:	cbz	r4, 32112 <print_all_devices@@Base+0x432>
   320f4:	mov	r1, r3
   320f6:	sub.w	r6, r8, #16
   320fa:	ldr.w	r0, [r1, #16]!
   320fe:	ldr	r1, [r1, #4]
   32100:	stmia	r6!, {r0, r1}
   32102:	ldrd	r0, r1, [r8, #-16]
   32106:	strd	r0, r1, [r4, #8]
   3210a:	ldr	r0, [r3, #32]
   3210c:	ldr	r1, [r3, #36]	; 0x24
   3210e:	strd	r0, r1, [r4, #16]
   32112:	mov.w	r1, #4294967295	; 0xffffffff
   32116:	movs	r6, #0
   32118:	str	r1, [r5, #56]	; 0x38
   3211a:	b.n	320d6 <print_all_devices@@Base+0x3f6>
   3211c:	movs	r0, #12
   3211e:	b.n	31fb2 <print_all_devices@@Base+0x2d2>
   32120:	add.w	sp, sp, #4096	; 0x1000
   32124:	add	sp, #20
   32126:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3212a:	nop
   3212c:	cmp	r6, #98	; 0x62
   3212e:	movs	r3, r0
   32130:	lsls	r4, r4, #8
   32132:	movs	r0, r0
   32134:	str	r4, [sp, #68]	; 0x44
   32136:	beq.n	3213a <print_all_devices@@Base+0x45a>
   32138:	cmp	r5, #204	; 0xcc
   3213a:	movs	r3, r0
   3213c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32140:	mov	r9, r3
   32142:	ldr	r3, [r0, #20]
   32144:	mov	r5, r2
   32146:	movw	r2, #4112	; 0x1010
   3214a:	ldr	r6, [sp, #40]	; 0x28
   3214c:	mov	r4, r0
   3214e:	mov	r8, r1
   32150:	muls	r2, r3
   32152:	ldr	r3, [r0, #16]
   32154:	sub.w	r2, r2, #4096	; 0x1000
   32158:	subs	r2, #16
   3215a:	add.w	sl, r3, r2
   3215e:	movw	r3, #4108	; 0x100c
   32162:	ldr.w	r3, [sl, r3]
   32166:	cbz	r3, 321dc <print_all_devices@@Base+0x4fc>
   32168:	cbz	r6, 321dc <print_all_devices@@Base+0x4fc>
   3216a:	adds	r2, r3, #1
   3216c:	adds	r7, r2, r6
   3216e:	cbz	r3, 32176 <print_all_devices@@Base+0x496>
   32170:	cbnz	r6, 32176 <print_all_devices@@Base+0x496>
   32172:	cbz	r5, 32176 <print_all_devices@@Base+0x496>
   32174:	adds	r7, r2, #1
   32176:	ldr	r3, [r4, #32]
   32178:	add	r7, r5
   3217a:	add.w	fp, r7, #1
   3217e:	cmp	fp, r3
   32180:	bls.n	32190 <print_all_devices@@Base+0x4b0>
   32182:	ldr	r0, [r4, #28]
   32184:	mov	r1, fp
   32186:	blx	84e8 <realloc@plt+0x4>
   3218a:	cbz	r0, 321e0 <print_all_devices@@Base+0x500>
   3218c:	strd	r0, fp, [r4, #28]
   32190:	movw	r3, #4108	; 0x100c
   32194:	ldr	r1, [r4, #28]
   32196:	ldr.w	r2, [sl, r3]
   3219a:	adds	r3, r1, r2
   3219c:	cbz	r2, 321a6 <print_all_devices@@Base+0x4c6>
   3219e:	cbz	r6, 321a6 <print_all_devices@@Base+0x4c6>
   321a0:	adds	r3, #1
   321a2:	movs	r0, #47	; 0x2f
   321a4:	strb	r0, [r1, r2]
   321a6:	mov	r2, r6
   321a8:	mov	r1, r9
   321aa:	mov	r0, r3
   321ac:	blx	843c <memcpy@plt+0x4>
   321b0:	movw	r2, #4108	; 0x100c
   321b4:	ldr.w	r2, [sl, r2]
   321b8:	adds	r4, r0, r6
   321ba:	cbz	r2, 321c6 <print_all_devices@@Base+0x4e6>
   321bc:	cbnz	r6, 321c6 <print_all_devices@@Base+0x4e6>
   321be:	cbz	r5, 321c6 <print_all_devices@@Base+0x4e6>
   321c0:	movs	r2, #47	; 0x2f
   321c2:	strb	r2, [r4, #0]
   321c4:	adds	r4, r0, #1
   321c6:	mov	r2, r5
   321c8:	mov	r1, r8
   321ca:	mov	r0, r4
   321cc:	blx	843c <memcpy@plt+0x4>
   321d0:	ldr	r3, [sp, #44]	; 0x2c
   321d2:	movs	r0, #0
   321d4:	strb	r0, [r4, r5]
   321d6:	str	r7, [r3, #0]
   321d8:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   321dc:	mov	r2, r3
   321de:	b.n	3216c <print_all_devices@@Base+0x48c>
   321e0:	movs	r0, #2
   321e2:	b.n	321d8 <print_all_devices@@Base+0x4f8>
   321e4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
   321e8:	mov	r4, r1
   321ea:	ldr	r1, [pc, #172]	; (32298 <print_all_devices@@Base+0x5b8>)
   321ec:	sub.w	sp, sp, #4128	; 0x1020
   321f0:	mov	r5, r2
   321f2:	ldr	r2, [pc, #168]	; (3229c <print_all_devices@@Base+0x5bc>)
   321f4:	add	r1, pc
   321f6:	mov	r9, r3
   321f8:	add.w	r3, sp, #4160	; 0x1040
   321fc:	add	r7, sp, #24
   321fe:	ldr	r2, [r1, r2]
   32200:	mov	r6, r0
   32202:	ldr.w	sl, [r3]
   32206:	add.w	r3, sp, #4096	; 0x1000
   3220a:	ldr	r2, [r2, #0]
   3220c:	str	r2, [r3, #28]
   3220e:	mov.w	r2, #0
   32212:	mov	r0, r7
   32214:	mov.w	r2, #4096	; 0x1000
   32218:	movs	r1, #0
   3221a:	adds	r3, #28
   3221c:	blx	8780 <memset@plt+0x4>
   32220:	mov	r1, r4
   32222:	add.w	r8, sp, #32
   32226:	ldr.w	r0, [r1, #8]!
   3222a:	sub.w	r3, r8, #16
   3222e:	ldr	r1, [r1, #4]
   32230:	stmia	r3!, {r0, r1}
   32232:	ldrd	r2, r3, [r8, #-16]
   32236:	ldr	r1, [pc, #92]	; (32294 <print_all_devices@@Base+0x5b4>)
   32238:	ldr	r0, [r6, #4]
   3223a:	strd	r2, r3, [r8, #-8]
   3223e:	ldr	r2, [r5, #0]
   32240:	ldr	r3, [r5, #4]
   32242:	str	r2, [r7, #8]
   32244:	mov	r2, r7
   32246:	str.w	r3, [r8, #4]
   3224a:	blx	8578 <ioctl@plt>
   3224e:	adds	r0, #1
   32250:	beq.n	32286 <print_all_devices@@Base+0x5a6>
   32252:	add	r3, sp, #40	; 0x28
   32254:	str	r3, [sp, #12]
   32256:	mov	r0, r3
   32258:	blx	8704 <strlen@plt>
   3225c:	ldr	r3, [sp, #12]
   3225e:	ldrh	r2, [r5, #16]
   32260:	mov	r1, r9
   32262:	strd	r0, sl, [sp]
   32266:	mov	r0, r6
   32268:	bl	3213c <print_all_devices@@Base+0x45c>
   3226c:	ldr	r1, [pc, #48]	; (322a0 <print_all_devices@@Base+0x5c0>)
   3226e:	add.w	r3, sp, #4096	; 0x1000
   32272:	ldr	r2, [pc, #40]	; (3229c <print_all_devices@@Base+0x5bc>)
   32274:	adds	r3, #28
   32276:	add	r1, pc
   32278:	ldr	r2, [r1, r2]
   3227a:	ldr	r1, [r2, #0]
   3227c:	ldr	r2, [r3, #0]
   3227e:	eors	r1, r2
   32280:	beq.n	3228a <print_all_devices@@Base+0x5aa>
   32282:	blx	84cc <__stack_chk_fail@plt>
   32286:	movs	r0, #13
   32288:	b.n	3226c <print_all_devices@@Base+0x58c>
   3228a:	add.w	sp, sp, #4128	; 0x1020
   3228e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
   32292:	nop
   32294:	str	r4, [sp, #72]	; 0x48
   32296:	beq.n	3229a <print_all_devices@@Base+0x5ba>
   32298:	cmp	r3, #148	; 0x94
   3229a:	movs	r3, r0
   3229c:	lsls	r4, r4, #8
   3229e:	movs	r0, r0
   322a0:	cmp	r3, #18
   322a2:	movs	r3, r0
   322a4:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   322a8:	sub.w	sp, sp, #4128	; 0x1020
   322ac:	sub	sp, #4
   322ae:	ldr	r1, [pc, #168]	; (32358 <print_all_devices@@Base+0x678>)
   322b0:	mov	r7, r2
   322b2:	mov	r6, r3
   322b4:	ldr	r2, [pc, #164]	; (3235c <print_all_devices@@Base+0x67c>)
   322b6:	add.w	r3, sp, #4160	; 0x1040
   322ba:	add	r1, pc
   322bc:	add	r5, sp, #24
   322be:	ldr.w	r8, [r3, #8]
   322c2:	adds	r3, #8
   322c4:	ldr	r2, [r1, r2]
   322c6:	add.w	r3, sp, #4096	; 0x1000
   322ca:	mov	r4, r0
   322cc:	mov	r0, r5
   322ce:	ldr	r2, [r2, #0]
   322d0:	str	r2, [r3, #28]
   322d2:	mov.w	r2, #0
   322d6:	movs	r1, #0
   322d8:	mov.w	r2, #4096	; 0x1000
   322dc:	adds	r3, #28
   322de:	blx	8780 <memset@plt+0x4>
   322e2:	add.w	r3, sp, #4160	; 0x1040
   322e6:	ldr	r1, [pc, #108]	; (32354 <print_all_devices@@Base+0x674>)
   322e8:	add.w	r9, sp, #32
   322ec:	ldrd	r2, r3, [r3]
   322f0:	ldr	r0, [r4, #8]
   322f2:	str	r7, [r5, #8]
   322f4:	strd	r2, r3, [r9, #-8]
   322f8:	mov	r2, r5
   322fa:	str.w	r6, [r9, #4]
   322fe:	blx	8578 <ioctl@plt>
   32302:	adds	r0, #1
   32304:	beq.n	32346 <print_all_devices@@Base+0x666>
   32306:	add	r1, sp, #40	; 0x28
   32308:	str	r1, [sp, #20]
   3230a:	mov	r0, r1
   3230c:	blx	8704 <strlen@plt>
   32310:	add	r3, sp, #296	; 0x128
   32312:	str	r3, [sp, #12]
   32314:	str	r0, [sp, #16]
   32316:	mov	r0, r3
   32318:	blx	8704 <strlen@plt>
   3231c:	ldrd	r3, r2, [sp, #12]
   32320:	ldr	r1, [sp, #20]
   32322:	strd	r0, r8, [sp]
   32326:	mov	r0, r4
   32328:	bl	3213c <print_all_devices@@Base+0x45c>
   3232c:	ldr	r1, [pc, #48]	; (32360 <print_all_devices@@Base+0x680>)
   3232e:	add.w	r3, sp, #4096	; 0x1000
   32332:	ldr	r2, [pc, #40]	; (3235c <print_all_devices@@Base+0x67c>)
   32334:	adds	r3, #28
   32336:	add	r1, pc
   32338:	ldr	r2, [r1, r2]
   3233a:	ldr	r1, [r2, #0]
   3233c:	ldr	r2, [r3, #0]
   3233e:	eors	r1, r2
   32340:	beq.n	3234a <print_all_devices@@Base+0x66a>
   32342:	blx	84cc <__stack_chk_fail@plt>
   32346:	movs	r0, #25
   32348:	b.n	3232c <print_all_devices@@Base+0x64c>
   3234a:	add.w	sp, sp, #4128	; 0x1020
   3234e:	add	sp, #4
   32350:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32354:	str	r4, [sp, #248]	; 0xf8
   32356:	beq.n	3235a <print_all_devices@@Base+0x67a>
   32358:	cmp	r2, #206	; 0xce
   3235a:	movs	r3, r0
   3235c:	lsls	r4, r4, #8
   3235e:	movs	r0, r0
   32360:	cmp	r2, #82	; 0x52
   32362:	movs	r3, r0
   32364:	ldrb	r1, [r0, #0]
   32366:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3236a:	mov	r4, r0
   3236c:	ldr	r3, [r0, #20]
   3236e:	subs	r2, r3, #1
   32370:	cbnz	r1, 32376 <print_all_devices@@Base+0x696>
   32372:	cmp	r3, #1
   32374:	bne.n	3237e <print_all_devices@@Base+0x69e>
   32376:	str	r2, [r4, #20]
   32378:	movs	r0, #0
   3237a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3237e:	ldr	r1, [r0, #16]
   32380:	movw	r0, #4112	; 0x1010
   32384:	str	r2, [r4, #20]
   32386:	ldr.w	sl, [pc, #108]	; 323f4 <print_all_devices@@Base+0x714>
   3238a:	mla	r2, r0, r2, r1
   3238e:	ldr	r6, [r4, #8]
   32390:	mla	r3, r0, r3, r1
   32394:	add	sl, pc
   32396:	ldr.w	r7, [r2, #-4]
   3239a:	subs	r5, r3, #4
   3239c:	ldr	r3, [r5, #0]
   3239e:	cmp	r3, r7
   323a0:	bhi.n	323b2 <print_all_devices@@Base+0x6d2>
   323a2:	ldrd	r3, r0, [r4, #4]
   323a6:	cmp	r0, r3
   323a8:	beq.n	323ae <print_all_devices@@Base+0x6ce>
   323aa:	blx	8960 <close@plt>
   323ae:	str	r6, [r4, #8]
   323b0:	b.n	32378 <print_all_devices@@Base+0x698>
   323b2:	cbz	r7, 323bc <print_all_devices@@Base+0x6dc>
   323b4:	ldr	r3, [r4, #28]
   323b6:	ldrb	r3, [r3, r7]
   323b8:	cmp	r3, #47	; 0x2f
   323ba:	bne.n	323ea <print_all_devices@@Base+0x70a>
   323bc:	movs	r2, #0
   323be:	mov	r1, sl
   323c0:	mov	r0, r6
   323c2:	blx	84c0 <openat@plt>
   323c6:	ldr	r3, [r4, #8]
   323c8:	cmp	r3, r6
   323ca:	mov	r8, r0
   323cc:	beq.n	323e2 <print_all_devices@@Base+0x702>
   323ce:	blx	8740 <__errno_location@plt>
   323d2:	ldr.w	fp, [r0]
   323d6:	mov	r9, r0
   323d8:	mov	r0, r6
   323da:	blx	8960 <close@plt>
   323de:	str.w	fp, [r9]
   323e2:	cmp.w	r8, #4294967295	; 0xffffffff
   323e6:	beq.n	323ee <print_all_devices@@Base+0x70e>
   323e8:	mov	r6, r8
   323ea:	adds	r7, #1
   323ec:	b.n	3239c <print_all_devices@@Base+0x6bc>
   323ee:	movs	r0, #7
   323f0:	b.n	3237a <print_all_devices@@Base+0x69a>
   323f2:	nop
   323f4:	asrs	r7, r2, #12
   323f6:	movs	r2, r0

000323f8 <btrfs_util_is_subvolume@@Base>:
   323f8:	ldr	r2, [pc, #132]	; (32480 <btrfs_util_is_subvolume@@Base+0x88>)
   323fa:	ldr	r3, [pc, #136]	; (32484 <btrfs_util_is_subvolume@@Base+0x8c>)
   323fc:	add	r2, pc
   323fe:	push	{r4, lr}
   32400:	sub	sp, #160	; 0xa0
   32402:	ldr	r3, [r2, r3]
   32404:	add	r1, sp, #92	; 0x5c
   32406:	mov	r4, r0
   32408:	ldr	r3, [r3, #0]
   3240a:	str	r3, [sp, #156]	; 0x9c
   3240c:	mov.w	r3, #0
   32410:	blx	8414 <statfs@plt>
   32414:	adds	r0, #1
   32416:	beq.n	3246a <btrfs_util_is_subvolume@@Base+0x72>
   32418:	ldr	r3, [pc, #96]	; (3247c <btrfs_util_is_subvolume@@Base+0x84>)
   3241a:	ldr	r2, [sp, #92]	; 0x5c
   3241c:	cmp	r2, r3
   3241e:	beq.n	3243e <btrfs_util_is_subvolume@@Base+0x46>
   32420:	blx	8740 <__errno_location@plt>
   32424:	movs	r3, #22
   32426:	str	r3, [r0, #0]
   32428:	movs	r0, #4
   3242a:	ldr	r2, [pc, #92]	; (32488 <btrfs_util_is_subvolume@@Base+0x90>)
   3242c:	ldr	r3, [pc, #84]	; (32484 <btrfs_util_is_subvolume@@Base+0x8c>)
   3242e:	add	r2, pc
   32430:	ldr	r3, [r2, r3]
   32432:	ldr	r2, [r3, #0]
   32434:	ldr	r3, [sp, #156]	; 0x9c
   32436:	eors	r2, r3
   32438:	beq.n	32476 <btrfs_util_is_subvolume@@Base+0x7e>
   3243a:	blx	84cc <__stack_chk_fail@plt>
   3243e:	mov	r1, sp
   32440:	mov	r0, r4
   32442:	bl	396a0 <__libc_csu_fini@@Base+0x4>
   32446:	adds	r0, #1
   32448:	beq.n	3246e <btrfs_util_is_subvolume@@Base+0x76>
   3244a:	ldr	r3, [sp, #12]
   3244c:	cmp.w	r3, #256	; 0x100
   32450:	bne.n	3245e <btrfs_util_is_subvolume@@Base+0x66>
   32452:	ldr	r3, [sp, #16]
   32454:	and.w	r3, r3, #61440	; 0xf000
   32458:	cmp.w	r3, #16384	; 0x4000
   3245c:	beq.n	32472 <btrfs_util_is_subvolume@@Base+0x7a>
   3245e:	blx	8740 <__errno_location@plt>
   32462:	movs	r3, #22
   32464:	str	r3, [r0, #0]
   32466:	movs	r0, #5
   32468:	b.n	3242a <btrfs_util_is_subvolume@@Base+0x32>
   3246a:	movs	r0, #11
   3246c:	b.n	3242a <btrfs_util_is_subvolume@@Base+0x32>
   3246e:	movs	r0, #10
   32470:	b.n	3242a <btrfs_util_is_subvolume@@Base+0x32>
   32472:	movs	r0, #0
   32474:	b.n	3242a <btrfs_util_is_subvolume@@Base+0x32>
   32476:	add	sp, #160	; 0xa0
   32478:	pop	{r4, pc}
   3247a:	nop
   3247c:	ldr	r6, [r7, #0]
   3247e:	str	r1, [sp, #140]	; 0x8c
   32480:	cmp	r1, #140	; 0x8c
   32482:	movs	r3, r0
   32484:	lsls	r4, r4, #8
   32486:	movs	r0, r0
   32488:	cmp	r1, #90	; 0x5a
   3248a:	movs	r3, r0

0003248c <btrfs_util_is_subvolume_fd@@Base>:
   3248c:	ldr	r2, [pc, #132]	; (32514 <btrfs_util_is_subvolume_fd@@Base+0x88>)
   3248e:	ldr	r3, [pc, #136]	; (32518 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   32490:	add	r2, pc
   32492:	push	{r4, lr}
   32494:	sub	sp, #160	; 0xa0
   32496:	ldr	r3, [r2, r3]
   32498:	add	r1, sp, #92	; 0x5c
   3249a:	mov	r4, r0
   3249c:	ldr	r3, [r3, #0]
   3249e:	str	r3, [sp, #156]	; 0x9c
   324a0:	mov.w	r3, #0
   324a4:	blx	8800 <fstatfs@plt>
   324a8:	adds	r0, #1
   324aa:	beq.n	324fe <btrfs_util_is_subvolume_fd@@Base+0x72>
   324ac:	ldr	r3, [pc, #96]	; (32510 <btrfs_util_is_subvolume_fd@@Base+0x84>)
   324ae:	ldr	r2, [sp, #92]	; 0x5c
   324b0:	cmp	r2, r3
   324b2:	beq.n	324d2 <btrfs_util_is_subvolume_fd@@Base+0x46>
   324b4:	blx	8740 <__errno_location@plt>
   324b8:	movs	r3, #22
   324ba:	str	r3, [r0, #0]
   324bc:	movs	r0, #4
   324be:	ldr	r2, [pc, #92]	; (3251c <btrfs_util_is_subvolume_fd@@Base+0x90>)
   324c0:	ldr	r3, [pc, #84]	; (32518 <btrfs_util_is_subvolume_fd@@Base+0x8c>)
   324c2:	add	r2, pc
   324c4:	ldr	r3, [r2, r3]
   324c6:	ldr	r2, [r3, #0]
   324c8:	ldr	r3, [sp, #156]	; 0x9c
   324ca:	eors	r2, r3
   324cc:	beq.n	3250a <btrfs_util_is_subvolume_fd@@Base+0x7e>
   324ce:	blx	84cc <__stack_chk_fail@plt>
   324d2:	mov	r1, sp
   324d4:	mov	r0, r4
   324d6:	bl	396ac <__libc_csu_fini@@Base+0x10>
   324da:	adds	r0, #1
   324dc:	beq.n	32502 <btrfs_util_is_subvolume_fd@@Base+0x76>
   324de:	ldr	r3, [sp, #12]
   324e0:	cmp.w	r3, #256	; 0x100
   324e4:	bne.n	324f2 <btrfs_util_is_subvolume_fd@@Base+0x66>
   324e6:	ldr	r3, [sp, #16]
   324e8:	and.w	r3, r3, #61440	; 0xf000
   324ec:	cmp.w	r3, #16384	; 0x4000
   324f0:	beq.n	32506 <btrfs_util_is_subvolume_fd@@Base+0x7a>
   324f2:	blx	8740 <__errno_location@plt>
   324f6:	movs	r3, #22
   324f8:	str	r3, [r0, #0]
   324fa:	movs	r0, #5
   324fc:	b.n	324be <btrfs_util_is_subvolume_fd@@Base+0x32>
   324fe:	movs	r0, #11
   32500:	b.n	324be <btrfs_util_is_subvolume_fd@@Base+0x32>
   32502:	movs	r0, #10
   32504:	b.n	324be <btrfs_util_is_subvolume_fd@@Base+0x32>
   32506:	movs	r0, #0
   32508:	b.n	324be <btrfs_util_is_subvolume_fd@@Base+0x32>
   3250a:	add	sp, #160	; 0xa0
   3250c:	pop	{r4, pc}
   3250e:	nop
   32510:	ldr	r6, [r7, #0]
   32512:	str	r1, [sp, #140]	; 0x8c
   32514:	cmp	r0, #248	; 0xf8
   32516:	movs	r3, r0
   32518:	lsls	r4, r4, #8
   3251a:	movs	r0, r0
   3251c:	cmp	r0, #198	; 0xc6
   3251e:	movs	r3, r0

00032520 <btrfs_util_subvolume_id_fd@@Base>:
   32520:	push	{r4, r5, r6, lr}
   32522:	mov	r4, r1
   32524:	ldr	r1, [pc, #120]	; (325a0 <btrfs_util_subvolume_id_fd@@Base+0x80>)
   32526:	sub.w	sp, sp, #4096	; 0x1000
   3252a:	ldr	r2, [pc, #120]	; (325a4 <btrfs_util_subvolume_id_fd@@Base+0x84>)
   3252c:	sub	sp, #8
   3252e:	add	r1, pc
   32530:	add.w	r3, sp, #4096	; 0x1000
   32534:	adds	r3, #4
   32536:	mov	r5, r0
   32538:	ldr	r2, [r1, r2]
   3253a:	movs	r1, #0
   3253c:	add	r6, sp, #8
   3253e:	ldr	r2, [r2, #0]
   32540:	str	r2, [r3, #0]
   32542:	mov.w	r2, #0
   32546:	mov	r3, sp
   32548:	mov.w	r2, #4096	; 0x1000
   3254c:	mov	r0, r3
   3254e:	blx	8780 <memset@plt+0x4>
   32552:	movs	r1, #0
   32554:	mov	r3, r0
   32556:	mov.w	r0, #256	; 0x100
   3255a:	mov	r2, r3
   3255c:	strd	r0, r1, [r3, #8]
   32560:	ldr	r1, [pc, #56]	; (3259c <btrfs_util_subvolume_id_fd@@Base+0x7c>)
   32562:	mov	r0, r5
   32564:	blx	8578 <ioctl@plt>
   32568:	ldr	r1, [pc, #60]	; (325a8 <btrfs_util_subvolume_id_fd@@Base+0x88>)
   3256a:	add	r1, pc
   3256c:	adds	r0, #1
   3256e:	ittet	ne
   32570:	ldrdne	r2, r3, [r6, #-8]
   32574:	movne	r0, #0
   32576:	moveq	r0, #13
   32578:	strdne	r2, r3, [r4]
   3257c:	add.w	r3, sp, #4096	; 0x1000
   32580:	ldr	r2, [pc, #32]	; (325a4 <btrfs_util_subvolume_id_fd@@Base+0x84>)
   32582:	adds	r3, #4
   32584:	ldr	r2, [r1, r2]
   32586:	ldr	r1, [r2, #0]
   32588:	ldr	r2, [r3, #0]
   3258a:	eors	r1, r2
   3258c:	beq.n	32592 <btrfs_util_subvolume_id_fd@@Base+0x72>
   3258e:	blx	84cc <__stack_chk_fail@plt>
   32592:	add.w	sp, sp, #4096	; 0x1000
   32596:	add	sp, #8
   32598:	pop	{r4, r5, r6, pc}
   3259a:	nop
   3259c:	str	r4, [sp, #72]	; 0x48
   3259e:	beq.n	325a2 <btrfs_util_subvolume_id_fd@@Base+0x82>
   325a0:	cmp	r0, #90	; 0x5a
   325a2:	movs	r3, r0
   325a4:	lsls	r4, r4, #8
   325a6:	movs	r0, r0
   325a8:	cmp	r0, #30
   325aa:	movs	r3, r0

000325ac <btrfs_util_subvolume_id@@Base>:
   325ac:	push	{r3, r4, r5, r6, r7, lr}
   325ae:	mov	r4, r1
   325b0:	movs	r1, #0
   325b2:	blx	86bc <open@plt>
   325b6:	adds	r3, r0, #1
   325b8:	mov	r6, r0
   325ba:	beq.n	325d8 <btrfs_util_subvolume_id@@Base+0x2c>
   325bc:	mov	r1, r4
   325be:	bl	32520 <btrfs_util_subvolume_id_fd@@Base>
   325c2:	mov	r4, r0
   325c4:	blx	8740 <__errno_location@plt>
   325c8:	ldr	r7, [r0, #0]
   325ca:	mov	r5, r0
   325cc:	mov	r0, r6
   325ce:	blx	8960 <close@plt>
   325d2:	str	r7, [r5, #0]
   325d4:	mov	r0, r4
   325d6:	pop	{r3, r4, r5, r6, r7, pc}
   325d8:	movs	r4, #7
   325da:	b.n	325d4 <btrfs_util_subvolume_id@@Base+0x28>
   325dc:	push	{r4, r5, r6, r7, lr}
   325de:	mov	r4, r2
   325e0:	ldr	r2, [pc, #156]	; (32680 <btrfs_util_subvolume_id@@Base+0xd4>)
   325e2:	mov	r5, r3
   325e4:	ldr	r3, [pc, #156]	; (32684 <btrfs_util_subvolume_id@@Base+0xd8>)
   325e6:	subw	sp, sp, #2068	; 0x814
   325ea:	add	r2, pc
   325ec:	mov	r6, r0
   325ee:	mov	r7, r1
   325f0:	ldr	r3, [r2, r3]
   325f2:	ldr	r3, [r3, #0]
   325f4:	str.w	r3, [sp, #2060]	; 0x80c
   325f8:	mov.w	r3, #0
   325fc:	bl	3248c <btrfs_util_is_subvolume_fd@@Base>
   32600:	subs	r3, r0, #4
   32602:	cmp	r3, #1
   32604:	bhi.n	32612 <btrfs_util_subvolume_id@@Base+0x66>
   32606:	blx	8740 <__errno_location@plt>
   3260a:	movs	r3, #2
   3260c:	str	r3, [r0, #0]
   3260e:	movs	r0, #6
   32610:	b.n	32624 <btrfs_util_subvolume_id@@Base+0x78>
   32612:	cbnz	r0, 32624 <btrfs_util_subvolume_id@@Base+0x78>
   32614:	ldr	r1, [pc, #100]	; (3267c <btrfs_util_subvolume_id@@Base+0xd0>)
   32616:	add	r2, sp, #8
   32618:	mov	r0, r7
   3261a:	blx	8578 <ioctl@plt>
   3261e:	adds	r0, #1
   32620:	bne.n	3263a <btrfs_util_subvolume_id@@Base+0x8e>
   32622:	movs	r0, #26
   32624:	ldr	r2, [pc, #96]	; (32688 <btrfs_util_subvolume_id@@Base+0xdc>)
   32626:	ldr	r3, [pc, #92]	; (32684 <btrfs_util_subvolume_id@@Base+0xd8>)
   32628:	add	r2, pc
   3262a:	ldr	r3, [r2, r3]
   3262c:	ldr	r2, [r3, #0]
   3262e:	ldr.w	r3, [sp, #2060]	; 0x80c
   32632:	eors	r2, r3
   32634:	beq.n	32676 <btrfs_util_subvolume_id@@Base+0xca>
   32636:	blx	84cc <__stack_chk_fail@plt>
   3263a:	ldr	r1, [pc, #64]	; (3267c <btrfs_util_subvolume_id@@Base+0xd0>)
   3263c:	add.w	r2, sp, #1032	; 0x408
   32640:	mov	r0, r6
   32642:	blx	8578 <ioctl@plt>
   32646:	adds	r0, #1
   32648:	beq.n	32622 <btrfs_util_subvolume_id@@Base+0x76>
   3264a:	add.w	r1, sp, #1048	; 0x418
   3264e:	add	r0, sp, #24
   32650:	movs	r2, #16
   32652:	blx	8464 <memcmp@plt+0x4>
   32656:	cmp	r0, #0
   32658:	bne.n	32606 <btrfs_util_subvolume_id@@Base+0x5a>
   3265a:	mov	r7, sp
   3265c:	mov	r0, r6
   3265e:	mov	r1, r7
   32660:	bl	32520 <btrfs_util_subvolume_id_fd@@Base>
   32664:	cmp	r0, #0
   32666:	bne.n	32624 <btrfs_util_subvolume_id@@Base+0x78>
   32668:	ldrd	r2, r3, [r7]
   3266c:	cmp	r3, r5
   3266e:	it	eq
   32670:	cmpeq	r2, r4
   32672:	beq.n	32624 <btrfs_util_subvolume_id@@Base+0x78>
   32674:	b.n	32606 <btrfs_util_subvolume_id@@Base+0x5a>
   32676:	addw	sp, sp, #2068	; 0x814
   3267a:	pop	{r4, r5, r6, r7, pc}
   3267c:	str	r4, [sp, #124]	; 0x7c
   3267e:	strh	r0, [r0, #32]
   32680:	movs	r7, #158	; 0x9e
   32682:	movs	r3, r0
   32684:	lsls	r4, r4, #8
   32686:	movs	r0, r0
   32688:	movs	r7, #96	; 0x60
   3268a:	movs	r3, r0
   3268c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   32690:	mov	r6, r3
   32692:	ldrd	r3, r5, [r0, #20]
   32696:	mov	r4, r0
   32698:	mov	r7, r2
   3269a:	cmp	r3, r5
   3269c:	bcc.n	326b4 <btrfs_util_subvolume_id@@Base+0x108>
   3269e:	lsls	r5, r5, #1
   326a0:	ldr	r0, [r0, #16]
   326a2:	movw	r2, #4112	; 0x1010
   326a6:	mov	r1, r5
   326a8:	bl	33a68 <btrfs_util_deleted_subvolumes@@Base+0x38>
   326ac:	cmp	r0, #0
   326ae:	beq.n	3276c <btrfs_util_subvolume_id@@Base+0x1c0>
   326b0:	str	r5, [r4, #24]
   326b2:	str	r0, [r4, #16]
   326b4:	ldr	r3, [r4, #16]
   326b6:	movw	r8, #4112	; 0x1010
   326ba:	ldr	r5, [r4, #20]
   326bc:	mov	r2, r8
   326be:	movs	r1, #0
   326c0:	mla	r5, r8, r5, r3
   326c4:	mov	r0, r5
   326c6:	blx	8780 <memset@plt+0x4>
   326ca:	ldr	r2, [sp, #24]
   326cc:	movw	r3, #4108	; 0x100c
   326d0:	str	r2, [r5, r3]
   326d2:	ldrb	r3, [r4, #0]
   326d4:	cbz	r3, 32716 <btrfs_util_subvolume_id@@Base+0x16a>
   326d6:	movs	r2, #1
   326d8:	movs	r3, #0
   326da:	movs	r0, #0
   326dc:	movs	r1, #0
   326de:	strd	r2, r3, [r5]
   326e2:	movs	r3, #156	; 0x9c
   326e4:	mov.w	r2, #4294967295	; 0xffffffff
   326e8:	strd	r3, r3, [r5, #56]	; 0x38
   326ec:	strd	r7, r6, [r5, #8]
   326f0:	mov.w	r3, #4294967295	; 0xffffffff
   326f4:	strd	r7, r6, [r5, #16]
   326f8:	strd	r2, r3, [r5, #32]
   326fc:	strd	r2, r3, [r5, #48]	; 0x30
   32700:	movs	r3, #0
   32702:	strd	r0, r1, [r5, #24]
   32706:	strd	r0, r1, [r5, #40]	; 0x28
   3270a:	str	r3, [r5, #64]	; 0x40
   3270c:	ldr	r3, [r4, #20]
   3270e:	movs	r5, #0
   32710:	adds	r3, #1
   32712:	str	r3, [r4, #20]
   32714:	b.n	3275a <btrfs_util_subvolume_id@@Base+0x1ae>
   32716:	ldr	r3, [r4, #20]
   32718:	strd	r7, r6, [r5]
   3271c:	cmp	r3, #0
   3271e:	beq.n	3270c <btrfs_util_subvolume_id@@Base+0x160>
   32720:	ldr	r2, [r4, #16]
   32722:	ldr	r0, [r4, #8]
   32724:	mla	r3, r8, r3, r2
   32728:	ldr	r2, [r4, #28]
   3272a:	ldr.w	r3, [r3, #-4]
   3272e:	adds	r1, r2, r3
   32730:	ldrb	r3, [r2, r3]
   32732:	movs	r2, #0
   32734:	cmp	r3, #47	; 0x2f
   32736:	it	eq
   32738:	addeq	r1, #1
   3273a:	blx	84c0 <openat@plt>
   3273e:	cmp.w	r0, #4294967295	; 0xffffffff
   32742:	mov	r8, r0
   32744:	beq.n	32770 <btrfs_util_subvolume_id@@Base+0x1c4>
   32746:	ldr	r1, [r4, #8]
   32748:	mov	r2, r7
   3274a:	mov	r3, r6
   3274c:	bl	325dc <btrfs_util_subvolume_id@@Base+0x30>
   32750:	mov	r5, r0
   32752:	cbz	r0, 32760 <btrfs_util_subvolume_id@@Base+0x1b4>
   32754:	mov	r0, r8
   32756:	blx	8960 <close@plt>
   3275a:	mov	r0, r5
   3275c:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   32760:	ldr	r0, [r4, #8]
   32762:	blx	8960 <close@plt>
   32766:	str.w	r8, [r4, #8]
   3276a:	b.n	3270c <btrfs_util_subvolume_id@@Base+0x160>
   3276c:	movs	r5, #2
   3276e:	b.n	3275a <btrfs_util_subvolume_id@@Base+0x1ae>
   32770:	movs	r5, #7
   32772:	b.n	3275a <btrfs_util_subvolume_id@@Base+0x1ae>

00032774 <btrfs_util_subvolume_path_fd@@Base>:
   32774:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32778:	sub.w	sp, sp, #8192	; 0x2000
   3277c:	sub	sp, #44	; 0x2c
   3277e:	ldr	r5, [pc, #496]	; (32970 <btrfs_util_subvolume_path_fd@@Base+0x1fc>)
   32780:	add.w	r1, sp, #8256	; 0x2040
   32784:	ldr	r4, [pc, #492]	; (32974 <btrfs_util_subvolume_path_fd@@Base+0x200>)
   32786:	adds	r1, #16
   32788:	add	r5, pc
   3278a:	strd	r2, r3, [sp, #24]
   3278e:	orrs	r3, r2
   32790:	ldr	r1, [r1, #0]
   32792:	add	r6, sp, #40	; 0x28
   32794:	sub.w	fp, r6, #16
   32798:	mov	r7, r0
   3279a:	str	r1, [sp, #16]
   3279c:	add.w	r1, sp, #8192	; 0x2000
   327a0:	ldr	r4, [r5, r4]
   327a2:	add.w	r1, r1, #36	; 0x24
   327a6:	ldr	r4, [r4, #0]
   327a8:	str	r4, [r1, #0]
   327aa:	mov.w	r4, #0
   327ae:	beq.n	327c0 <btrfs_util_subvolume_path_fd@@Base+0x4c>
   327b0:	mov.w	r0, #4096	; 0x1000
   327b4:	blx	8634 <malloc@plt+0x4>
   327b8:	mov	r4, r0
   327ba:	cbnz	r0, 327ee <btrfs_util_subvolume_path_fd@@Base+0x7a>
   327bc:	movs	r0, #2
   327be:	b.n	327d2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   327c0:	bl	3248c <btrfs_util_is_subvolume_fd@@Base>
   327c4:	cbnz	r0, 327d2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   327c6:	mov	r1, fp
   327c8:	mov	r0, r7
   327ca:	bl	32520 <btrfs_util_subvolume_id_fd@@Base>
   327ce:	cmp	r0, #0
   327d0:	beq.n	327b0 <btrfs_util_subvolume_path_fd@@Base+0x3c>
   327d2:	ldr	r1, [pc, #420]	; (32978 <btrfs_util_subvolume_path_fd@@Base+0x204>)
   327d4:	add.w	r3, sp, #8192	; 0x2000
   327d8:	ldr	r2, [pc, #408]	; (32974 <btrfs_util_subvolume_path_fd@@Base+0x200>)
   327da:	adds	r3, #36	; 0x24
   327dc:	add	r1, pc
   327de:	ldr	r2, [r1, r2]
   327e0:	ldr	r1, [r2, #0]
   327e2:	ldr	r2, [r3, #0]
   327e4:	eors	r1, r2
   327e6:	beq.w	3295e <btrfs_util_subvolume_path_fd@@Base+0x1ea>
   327ea:	blx	84cc <__stack_chk_fail@plt>
   327ee:	addw	r5, r0, #4095	; 0xfff
   327f2:	movs	r3, #0
   327f4:	strb.w	r3, [r0, #4095]	; 0xfff
   327f8:	mov.w	r3, #4096	; 0x1000
   327fc:	str	r3, [sp, #0]
   327fe:	ldrd	r8, r9, [fp]
   32802:	cmp.w	r9, #0
   32806:	it	eq
   32808:	cmpeq.w	r8, #5
   3280c:	bne.n	32828 <btrfs_util_subvolume_path_fd@@Base+0xb4>
   3280e:	cmp	r4, r5
   32810:	beq.n	32820 <btrfs_util_subvolume_path_fd@@Base+0xac>
   32812:	ldr	r3, [sp, #0]
   32814:	mov	r1, r5
   32816:	mov	r0, r4
   32818:	add	r3, r4
   3281a:	subs	r2, r3, r5
   3281c:	blx	83e0 <memmove@plt+0x4>
   32820:	ldr	r3, [sp, #16]
   32822:	movs	r0, #0
   32824:	str	r4, [r3, #0]
   32826:	b.n	327d2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32828:	sub.w	sl, r6, #8
   3282c:	mov.w	r2, #4096	; 0x1000
   32830:	movs	r1, #0
   32832:	mov	r0, sl
   32834:	blx	8780 <memset@plt+0x4>
   32838:	movs	r2, #1
   3283a:	movs	r3, #0
   3283c:	ldr	r1, [pc, #296]	; (32968 <btrfs_util_subvolume_path_fd@@Base+0x1f4>)
   3283e:	strd	r2, r3, [r6, #-8]
   32842:	mov	r0, r7
   32844:	mov.w	r2, #4294967295	; 0xffffffff
   32848:	mov.w	r3, #4294967295	; 0xffffffff
   3284c:	strd	r2, r3, [sl, #32]
   32850:	strd	r2, r3, [sl, #48]	; 0x30
   32854:	mov	r2, sl
   32856:	movs	r3, #144	; 0x90
   32858:	strd	r8, r9, [sl, #8]
   3285c:	strd	r3, r3, [sl, #56]	; 0x38
   32860:	movs	r3, #1
   32862:	strd	r8, r9, [sl, #16]
   32866:	str.w	r3, [sl, #64]	; 0x40
   3286a:	blx	8578 <ioctl@plt>
   3286e:	adds	r0, #1
   32870:	bne.n	3287c <btrfs_util_subvolume_path_fd@@Base+0x108>
   32872:	mov	r0, r4
   32874:	blx	83f0 <free@plt+0x4>
   32878:	movs	r0, #12
   3287a:	b.n	327d2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   3287c:	ldr.w	r3, [sl, #64]	; 0x40
   32880:	cbnz	r3, 32894 <btrfs_util_subvolume_path_fd@@Base+0x120>
   32882:	mov	r0, r4
   32884:	blx	83f0 <free@plt+0x4>
   32888:	blx	8740 <__errno_location@plt>
   3288c:	movs	r3, #2
   3288e:	str	r3, [r0, #0]
   32890:	movs	r0, #6
   32892:	b.n	327d2 <btrfs_util_subvolume_path_fd@@Base+0x5e>
   32894:	ldrd	r0, r1, [sl, #120]	; 0x78
   32898:	add.w	r2, sp, #4128	; 0x1020
   3289c:	adds	r2, #8
   3289e:	ldrh.w	r9, [sl, #152]	; 0x98
   328a2:	strd	r0, r1, [r2, #-8]
   328a6:	strd	r0, r1, [fp]
   328aa:	ldrd	r0, r1, [sl, #136]	; 0x88
   328ae:	strd	r0, r1, [r2], #-8
   328b2:	mov	r0, r7
   328b4:	ldr	r1, [pc, #180]	; (3296c <btrfs_util_subvolume_path_fd@@Base+0x1f8>)
   328b6:	blx	8578 <ioctl@plt>
   328ba:	adds	r0, #1
   328bc:	beq.n	32872 <btrfs_util_subvolume_path_fd@@Base+0xfe>
   328be:	add.w	r0, sp, #4128	; 0x1020
   328c2:	adds	r0, #16
   328c4:	blx	8704 <strlen@plt>
   328c8:	ldrd	r2, r3, [fp]
   328cc:	cmp	r3, #0
   328ce:	it	eq
   328d0:	cmpeq	r2, #5
   328d2:	strd	r2, r3, [sp, #8]
   328d6:	ite	ne
   328d8:	movne	r3, #1
   328da:	moveq	r3, #0
   328dc:	add	r3, r9
   328de:	add	r3, r0
   328e0:	mov	r8, r0
   328e2:	subs	r3, r5, r3
   328e4:	cmp	r4, r3
   328e6:	bls.n	32926 <btrfs_util_subvolume_path_fd@@Base+0x1b2>
   328e8:	ldr	r3, [sp, #0]
   328ea:	lsls	r3, r3, #1
   328ec:	str	r3, [sp, #4]
   328ee:	mov	r0, r3
   328f0:	blx	8634 <malloc@plt+0x4>
   328f4:	cbnz	r0, 328fe <btrfs_util_subvolume_path_fd@@Base+0x18a>
   328f6:	mov	r0, r4
   328f8:	blx	83f0 <free@plt+0x4>
   328fc:	b.n	327bc <btrfs_util_subvolume_path_fd@@Base+0x48>
   328fe:	ldr	r2, [sp, #0]
   32900:	ldr	r1, [sp, #4]
   32902:	add	r2, r4
   32904:	str	r0, [sp, #20]
   32906:	subs	r2, r2, r5
   32908:	sub.w	sl, r1, r2
   3290c:	mov	r1, r5
   3290e:	add	sl, r0
   32910:	mov	r0, sl
   32912:	mov	r5, sl
   32914:	blx	843c <memcpy@plt+0x4>
   32918:	mov	r0, r4
   3291a:	blx	83f0 <free@plt+0x4>
   3291e:	ldr	r3, [sp, #4]
   32920:	str	r3, [sp, #0]
   32922:	ldr	r3, [sp, #20]
   32924:	mov	r4, r3
   32926:	sub.w	r5, r5, r9
   3292a:	add.w	r1, r6, #146	; 0x92
   3292e:	mov	r2, r9
   32930:	mov	r0, r5
   32932:	sub.w	r5, r5, r8
   32936:	blx	843c <memcpy@plt+0x4>
   3293a:	add.w	r1, sp, #4128	; 0x1020
   3293e:	mov	r2, r8
   32940:	mov	r0, r5
   32942:	adds	r1, #16
   32944:	blx	843c <memcpy@plt+0x4>
   32948:	ldrd	r2, r3, [sp, #8]
   3294c:	cmp	r3, #0
   3294e:	iteee	eq
   32950:	cmpeq	r2, #5
   32952:	movne	r3, #47	; 0x2f
   32954:	strbne.w	r3, [r5, #-1]
   32958:	addne.w	r5, r5, #4294967295	; 0xffffffff
   3295c:	b.n	327fe <btrfs_util_subvolume_path_fd@@Base+0x8a>
   3295e:	add.w	sp, sp, #8192	; 0x2000
   32962:	add	sp, #44	; 0x2c
   32964:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32968:	str	r4, [sp, #68]	; 0x44
   3296a:	beq.n	3296e <btrfs_util_subvolume_path_fd@@Base+0x1fa>
   3296c:	str	r4, [sp, #72]	; 0x48
   3296e:	beq.n	32972 <btrfs_util_subvolume_path_fd@@Base+0x1fe>
   32970:	movs	r6, #0
   32972:	movs	r3, r0
   32974:	lsls	r4, r4, #8
   32976:	movs	r0, r0
   32978:	movs	r5, #172	; 0xac
   3297a:	movs	r3, r0

0003297c <btrfs_util_subvolume_path@@Base>:
   3297c:	push	{r4, r5, r6, r7, lr}
   3297e:	sub	sp, #20
   32980:	movs	r1, #0
   32982:	strd	r3, r2, [sp, #8]
   32986:	blx	86bc <open@plt>
   3298a:	adds	r3, r0, #1
   3298c:	mov	r6, r0
   3298e:	beq.n	329b4 <btrfs_util_subvolume_path@@Base+0x38>
   32990:	ldr	r1, [sp, #40]	; 0x28
   32992:	ldrd	r3, r2, [sp, #8]
   32996:	str	r1, [sp, #0]
   32998:	bl	32774 <btrfs_util_subvolume_path_fd@@Base>
   3299c:	mov	r4, r0
   3299e:	blx	8740 <__errno_location@plt>
   329a2:	ldr	r7, [r0, #0]
   329a4:	mov	r5, r0
   329a6:	mov	r0, r6
   329a8:	blx	8960 <close@plt>
   329ac:	str	r7, [r5, #0]
   329ae:	mov	r0, r4
   329b0:	add	sp, #20
   329b2:	pop	{r4, r5, r6, r7, pc}
   329b4:	movs	r4, #7
   329b6:	b.n	329ae <btrfs_util_subvolume_path@@Base+0x32>

000329b8 <btrfs_util_subvolume_info_fd@@Base>:
   329b8:	push	{r4, r5, lr}
   329ba:	sub	sp, #20
   329bc:	mov	r4, r0
   329be:	strd	r2, r3, [sp, #8]
   329c2:	orrs	r3, r2
   329c4:	ldr	r5, [sp, #32]
   329c6:	beq.n	329f0 <btrfs_util_subvolume_info_fd@@Base+0x38>
   329c8:	ldrd	r2, r3, [sp, #8]
   329cc:	cmp	r3, #0
   329ce:	it	eq
   329d0:	cmpeq.w	r2, #256	; 0x100
   329d4:	bcc.n	32a16 <btrfs_util_subvolume_info_fd@@Base+0x5e>
   329d6:	mov.w	r1, #4294967295	; 0xffffffff
   329da:	cmp	r1, r3
   329dc:	mvn.w	r0, #255	; 0xff
   329e0:	it	eq
   329e2:	cmpeq	r0, r2
   329e4:	bcc.n	32a1e <btrfs_util_subvolume_info_fd@@Base+0x66>
   329e6:	mov	r0, r4
   329e8:	str	r5, [sp, #0]
   329ea:	bl	31f10 <print_all_devices@@Base+0x230>
   329ee:	b.n	32a04 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   329f0:	bl	3248c <btrfs_util_is_subvolume_fd@@Base>
   329f4:	cbnz	r0, 32a04 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   329f6:	blx	8518 <geteuid@plt>
   329fa:	cbz	r0, 32a08 <btrfs_util_subvolume_info_fd@@Base+0x50>
   329fc:	mov	r1, r5
   329fe:	mov	r0, r4
   32a00:	bl	31d14 <print_all_devices@@Base+0x34>
   32a04:	add	sp, #20
   32a06:	pop	{r4, r5, pc}
   32a08:	add	r1, sp, #8
   32a0a:	mov	r0, r4
   32a0c:	bl	32520 <btrfs_util_subvolume_id_fd@@Base>
   32a10:	cmp	r0, #0
   32a12:	beq.n	329c8 <btrfs_util_subvolume_info_fd@@Base+0x10>
   32a14:	b.n	32a04 <btrfs_util_subvolume_info_fd@@Base+0x4c>
   32a16:	cmp	r3, #0
   32a18:	it	eq
   32a1a:	cmpeq	r2, #5
   32a1c:	beq.n	329e6 <btrfs_util_subvolume_info_fd@@Base+0x2e>
   32a1e:	blx	8740 <__errno_location@plt>
   32a22:	movs	r3, #2
   32a24:	str	r3, [r0, #0]
   32a26:	movs	r0, #6
   32a28:	b.n	32a04 <btrfs_util_subvolume_info_fd@@Base+0x4c>

00032a2a <btrfs_util_subvolume_info@@Base>:
   32a2a:	push	{r4, r5, r6, r7, lr}
   32a2c:	sub	sp, #20
   32a2e:	movs	r1, #0
   32a30:	strd	r3, r2, [sp, #8]
   32a34:	blx	86bc <open@plt>
   32a38:	adds	r3, r0, #1
   32a3a:	mov	r6, r0
   32a3c:	beq.n	32a62 <btrfs_util_subvolume_info@@Base+0x38>
   32a3e:	ldr	r1, [sp, #40]	; 0x28
   32a40:	ldrd	r3, r2, [sp, #8]
   32a44:	str	r1, [sp, #0]
   32a46:	bl	329b8 <btrfs_util_subvolume_info_fd@@Base>
   32a4a:	mov	r4, r0
   32a4c:	blx	8740 <__errno_location@plt>
   32a50:	ldr	r7, [r0, #0]
   32a52:	mov	r5, r0
   32a54:	mov	r0, r6
   32a56:	blx	8960 <close@plt>
   32a5a:	str	r7, [r5, #0]
   32a5c:	mov	r0, r4
   32a5e:	add	sp, #20
   32a60:	pop	{r4, r5, r6, r7, pc}
   32a62:	movs	r4, #7
   32a64:	b.n	32a5c <btrfs_util_subvolume_info@@Base+0x32>

00032a66 <btrfs_util_get_subvolume_read_only_fd@@Base>:
   32a66:	push	{r0, r1, r2, r3, r4, lr}
   32a68:	mov	r4, r1
   32a6a:	ldr	r2, [pc, #68]	; (32ab0 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4a>)
   32a6c:	ldr	r3, [pc, #68]	; (32ab4 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   32a6e:	add	r2, pc
   32a70:	ldr	r1, [pc, #56]	; (32aac <btrfs_util_get_subvolume_read_only_fd@@Base+0x46>)
   32a72:	ldr	r3, [r2, r3]
   32a74:	mov	r2, sp
   32a76:	ldr	r3, [r3, #0]
   32a78:	str	r3, [sp, #12]
   32a7a:	mov.w	r3, #0
   32a7e:	blx	8578 <ioctl@plt>
   32a82:	ldr	r2, [pc, #52]	; (32ab8 <btrfs_util_get_subvolume_read_only_fd@@Base+0x52>)
   32a84:	add	r2, pc
   32a86:	adds	r0, #1
   32a88:	ittet	ne
   32a8a:	ldrne	r3, [sp, #0]
   32a8c:	movne	r0, #0
   32a8e:	moveq	r0, #14
   32a90:	ubfxne	r3, r3, #1, #1
   32a94:	it	ne
   32a96:	strbne	r3, [r4, #0]
   32a98:	ldr	r3, [pc, #24]	; (32ab4 <btrfs_util_get_subvolume_read_only_fd@@Base+0x4e>)
   32a9a:	ldr	r3, [r2, r3]
   32a9c:	ldr	r2, [r3, #0]
   32a9e:	ldr	r3, [sp, #12]
   32aa0:	eors	r2, r3
   32aa2:	beq.n	32aa8 <btrfs_util_get_subvolume_read_only_fd@@Base+0x42>
   32aa4:	blx	84cc <__stack_chk_fail@plt>
   32aa8:	add	sp, #16
   32aaa:	pop	{r4, pc}
   32aac:	str	r4, [sp, #100]	; 0x64
   32aae:	strh	r0, [r1, #0]
   32ab0:	movs	r3, #26
   32ab2:	movs	r3, r0
   32ab4:	lsls	r4, r4, #8
   32ab6:	movs	r0, r0
   32ab8:	movs	r3, #4
   32aba:	movs	r3, r0

00032abc <btrfs_util_get_subvolume_read_only@@Base>:
   32abc:	push	{r3, r4, r5, r6, r7, lr}
   32abe:	mov	r4, r1
   32ac0:	movs	r1, #0
   32ac2:	blx	86bc <open@plt>
   32ac6:	adds	r3, r0, #1
   32ac8:	mov	r6, r0
   32aca:	beq.n	32ae8 <btrfs_util_get_subvolume_read_only@@Base+0x2c>
   32acc:	mov	r1, r4
   32ace:	bl	32a66 <btrfs_util_get_subvolume_read_only_fd@@Base>
   32ad2:	mov	r4, r0
   32ad4:	blx	8740 <__errno_location@plt>
   32ad8:	ldr	r7, [r0, #0]
   32ada:	mov	r5, r0
   32adc:	mov	r0, r6
   32ade:	blx	8960 <close@plt>
   32ae2:	str	r7, [r5, #0]
   32ae4:	mov	r0, r4
   32ae6:	pop	{r3, r4, r5, r6, r7, pc}
   32ae8:	movs	r4, #7
   32aea:	b.n	32ae4 <btrfs_util_get_subvolume_read_only@@Base+0x28>

00032aec <btrfs_util_set_subvolume_read_only_fd@@Base>:
   32aec:	ldr	r2, [pc, #108]	; (32b5c <btrfs_util_set_subvolume_read_only_fd@@Base+0x70>)
   32aee:	ldr	r3, [pc, #112]	; (32b60 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   32af0:	add	r2, pc
   32af2:	push	{r4, r5, lr}
   32af4:	sub	sp, #28
   32af6:	ldr	r3, [r2, r3]
   32af8:	mov	r5, r1
   32afa:	add	r2, sp, #8
   32afc:	ldr	r1, [pc, #84]	; (32b54 <btrfs_util_set_subvolume_read_only_fd@@Base+0x68>)
   32afe:	ldr	r3, [r3, #0]
   32b00:	str	r3, [sp, #20]
   32b02:	mov.w	r3, #0
   32b06:	mov	r4, r0
   32b08:	str	r2, [sp, #4]
   32b0a:	blx	8578 <ioctl@plt>
   32b0e:	adds	r0, #1
   32b10:	beq.n	32b4c <btrfs_util_set_subvolume_read_only_fd@@Base+0x60>
   32b12:	ldrd	r3, r1, [sp, #8]
   32b16:	ldr	r2, [sp, #4]
   32b18:	cbz	r5, 32b46 <btrfs_util_set_subvolume_read_only_fd@@Base+0x5a>
   32b1a:	orr.w	r3, r3, #2
   32b1e:	strd	r3, r1, [sp, #8]
   32b22:	mov	r0, r4
   32b24:	ldr	r1, [pc, #48]	; (32b58 <btrfs_util_set_subvolume_read_only_fd@@Base+0x6c>)
   32b26:	blx	8578 <ioctl@plt>
   32b2a:	adds	r3, r0, #1
   32b2c:	ite	ne
   32b2e:	movne	r0, #0
   32b30:	moveq	r0, #15
   32b32:	ldr	r2, [pc, #48]	; (32b64 <btrfs_util_set_subvolume_read_only_fd@@Base+0x78>)
   32b34:	ldr	r3, [pc, #40]	; (32b60 <btrfs_util_set_subvolume_read_only_fd@@Base+0x74>)
   32b36:	add	r2, pc
   32b38:	ldr	r3, [r2, r3]
   32b3a:	ldr	r2, [r3, #0]
   32b3c:	ldr	r3, [sp, #20]
   32b3e:	eors	r2, r3
   32b40:	beq.n	32b50 <btrfs_util_set_subvolume_read_only_fd@@Base+0x64>
   32b42:	blx	84cc <__stack_chk_fail@plt>
   32b46:	bic.w	r3, r3, #2
   32b4a:	b.n	32b1e <btrfs_util_set_subvolume_read_only_fd@@Base+0x32>
   32b4c:	movs	r0, #14
   32b4e:	b.n	32b32 <btrfs_util_set_subvolume_read_only_fd@@Base+0x46>
   32b50:	add	sp, #28
   32b52:	pop	{r4, r5, pc}
   32b54:	str	r4, [sp, #100]	; 0x64
   32b56:	strh	r0, [r1, #0]
   32b58:	str	r4, [sp, #104]	; 0x68
   32b5a:	ands	r0, r1
   32b5c:	movs	r2, #152	; 0x98
   32b5e:	movs	r3, r0
   32b60:	lsls	r4, r4, #8
   32b62:	movs	r0, r0
   32b64:	movs	r2, #82	; 0x52
   32b66:	movs	r3, r0

00032b68 <btrfs_util_set_subvolume_read_only@@Base>:
   32b68:	push	{r3, r4, r5, r6, r7, lr}
   32b6a:	mov	r4, r1
   32b6c:	movs	r1, #0
   32b6e:	blx	86bc <open@plt>
   32b72:	adds	r3, r0, #1
   32b74:	mov	r6, r0
   32b76:	beq.n	32b94 <btrfs_util_set_subvolume_read_only@@Base+0x2c>
   32b78:	mov	r1, r4
   32b7a:	bl	32aec <btrfs_util_set_subvolume_read_only_fd@@Base>
   32b7e:	mov	r4, r0
   32b80:	blx	8740 <__errno_location@plt>
   32b84:	ldr	r7, [r0, #0]
   32b86:	mov	r5, r0
   32b88:	mov	r0, r6
   32b8a:	blx	8960 <close@plt>
   32b8e:	str	r7, [r5, #0]
   32b90:	mov	r0, r4
   32b92:	pop	{r3, r4, r5, r6, r7, pc}
   32b94:	movs	r4, #7
   32b96:	b.n	32b90 <btrfs_util_set_subvolume_read_only@@Base+0x28>

00032b98 <btrfs_util_get_default_subvolume_fd@@Base>:
   32b98:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32b9c:	mov	r7, r1
   32b9e:	ldr	r1, [pc, #256]	; (32ca0 <btrfs_util_get_default_subvolume_fd@@Base+0x108>)
   32ba0:	sub.w	sp, sp, #4096	; 0x1000
   32ba4:	ldr	r2, [pc, #252]	; (32ca4 <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   32ba6:	sub	sp, #20
   32ba8:	add	r1, pc
   32baa:	add.w	r9, sp, #16
   32bae:	sub.w	r4, r9, #8
   32bb2:	add.w	r3, sp, #4096	; 0x1000
   32bb6:	ldr	r2, [r1, r2]
   32bb8:	mov	r8, r0
   32bba:	ldr.w	fp, [pc, #236]	; 32ca8 <btrfs_util_get_default_subvolume_fd@@Base+0x110>
   32bbe:	mov	r0, r4
   32bc0:	ldr.w	sl, [pc, #232]	; 32cac <btrfs_util_get_default_subvolume_fd@@Base+0x114>
   32bc4:	ldr	r2, [r2, #0]
   32bc6:	str	r2, [r3, #12]
   32bc8:	mov.w	r2, #0
   32bcc:	movs	r6, #0
   32bce:	mov.w	r2, #4096	; 0x1000
   32bd2:	add	fp, pc
   32bd4:	movs	r1, #0
   32bd6:	adds	r3, #12
   32bd8:	blx	8780 <memset@plt+0x4>
   32bdc:	movs	r2, #1
   32bde:	movs	r3, #0
   32be0:	strd	r2, r3, [r9, #-8]
   32be4:	movs	r2, #6
   32be6:	movs	r3, #0
   32be8:	strd	r2, r3, [r4, #8]
   32bec:	strd	r2, r3, [r4, #16]
   32bf0:	mov.w	r3, #4294967295	; 0xffffffff
   32bf4:	mov.w	r2, #4294967295	; 0xffffffff
   32bf8:	strd	r2, r3, [r4, #32]
   32bfc:	strd	r2, r3, [r4, #48]	; 0x30
   32c00:	movs	r3, #84	; 0x54
   32c02:	strd	r3, r3, [r4, #56]	; 0x38
   32c06:	mov	r3, r6
   32c08:	ldr	r2, [r4, #64]	; 0x40
   32c0a:	cmp	r2, r3
   32c0c:	bhi.n	32c4e <btrfs_util_get_default_subvolume_fd@@Base+0xb6>
   32c0e:	mov	r2, r4
   32c10:	mov	r1, sl
   32c12:	mov	r0, r8
   32c14:	mov.w	r3, #4096	; 0x1000
   32c18:	str	r3, [r4, #64]	; 0x40
   32c1a:	blx	8578 <ioctl@plt>
   32c1e:	adds	r0, #1
   32c20:	beq.n	32c90 <btrfs_util_get_default_subvolume_fd@@Base+0xf8>
   32c22:	ldr	r3, [r4, #64]	; 0x40
   32c24:	cbnz	r3, 32c4a <btrfs_util_get_default_subvolume_fd@@Base+0xb2>
   32c26:	blx	8740 <__errno_location@plt>
   32c2a:	movs	r3, #2
   32c2c:	str	r3, [r0, #0]
   32c2e:	movs	r0, #6
   32c30:	ldr	r1, [pc, #124]	; (32cb0 <btrfs_util_get_default_subvolume_fd@@Base+0x118>)
   32c32:	add.w	r3, sp, #4096	; 0x1000
   32c36:	ldr	r2, [pc, #108]	; (32ca4 <btrfs_util_get_default_subvolume_fd@@Base+0x10c>)
   32c38:	adds	r3, #12
   32c3a:	add	r1, pc
   32c3c:	ldr	r2, [r1, r2]
   32c3e:	ldr	r1, [r2, #0]
   32c40:	ldr	r2, [r3, #0]
   32c42:	eors	r1, r2
   32c44:	beq.n	32c94 <btrfs_util_get_default_subvolume_fd@@Base+0xfc>
   32c46:	blx	84cc <__stack_chk_fail@plt>
   32c4a:	movs	r6, #0
   32c4c:	mov	r3, r6
   32c4e:	add.w	r5, r9, #96	; 0x60
   32c52:	add	r5, r6
   32c54:	ldr	r2, [r5, #24]
   32c56:	cmp	r2, #84	; 0x54
   32c58:	bne.n	32c78 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   32c5a:	str	r3, [sp, #4]
   32c5c:	add.w	r0, r5, #62	; 0x3e
   32c60:	ldrh.w	r2, [r5, #59]	; 0x3b
   32c64:	mov	r1, fp
   32c66:	blx	893c <strncmp@plt>
   32c6a:	ldr	r3, [sp, #4]
   32c6c:	cbnz	r0, 32c78 <btrfs_util_get_default_subvolume_fd@@Base+0xe0>
   32c6e:	ldr	r2, [r5, #32]
   32c70:	ldr	r3, [r5, #36]	; 0x24
   32c72:	strd	r2, r3, [r7]
   32c76:	b.n	32c30 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   32c78:	ldr	r2, [r5, #28]
   32c7a:	adds	r6, #32
   32c7c:	adds	r3, #1
   32c7e:	add	r6, r2
   32c80:	ldrd	r2, r1, [r5, #16]
   32c84:	adds	r2, #1
   32c86:	adc.w	r1, r1, #0
   32c8a:	strd	r2, r1, [r4, #24]
   32c8e:	b.n	32c08 <btrfs_util_get_default_subvolume_fd@@Base+0x70>
   32c90:	movs	r0, #12
   32c92:	b.n	32c30 <btrfs_util_get_default_subvolume_fd@@Base+0x98>
   32c94:	add.w	sp, sp, #4096	; 0x1000
   32c98:	add	sp, #20
   32c9a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32c9e:	nop
   32ca0:	movs	r1, #224	; 0xe0
   32ca2:	movs	r3, r0
   32ca4:	lsls	r4, r4, #8
   32ca6:	movs	r0, r0
   32ca8:	str	r1, [sp, #560]	; 0x230
   32caa:	movs	r0, r0
   32cac:	str	r4, [sp, #68]	; 0x44
   32cae:	beq.n	32cb2 <btrfs_util_get_default_subvolume_fd@@Base+0x11a>
   32cb0:	movs	r1, #78	; 0x4e
   32cb2:	movs	r3, r0

00032cb4 <btrfs_util_get_default_subvolume@@Base>:
   32cb4:	push	{r3, r4, r5, r6, r7, lr}
   32cb6:	mov	r4, r1
   32cb8:	movs	r1, #0
   32cba:	blx	86bc <open@plt>
   32cbe:	adds	r3, r0, #1
   32cc0:	mov	r6, r0
   32cc2:	beq.n	32ce0 <btrfs_util_get_default_subvolume@@Base+0x2c>
   32cc4:	mov	r1, r4
   32cc6:	bl	32b98 <btrfs_util_get_default_subvolume_fd@@Base>
   32cca:	mov	r4, r0
   32ccc:	blx	8740 <__errno_location@plt>
   32cd0:	ldr	r7, [r0, #0]
   32cd2:	mov	r5, r0
   32cd4:	mov	r0, r6
   32cd6:	blx	8960 <close@plt>
   32cda:	str	r7, [r5, #0]
   32cdc:	mov	r0, r4
   32cde:	pop	{r3, r4, r5, r6, r7, pc}
   32ce0:	movs	r4, #7
   32ce2:	b.n	32cdc <btrfs_util_get_default_subvolume@@Base+0x28>

00032ce4 <btrfs_util_set_default_subvolume_fd@@Base>:
   32ce4:	push	{r0, r1, r4, lr}
   32ce6:	mov	r4, r0
   32ce8:	strd	r2, r3, [sp]
   32cec:	orrs	r3, r2
   32cee:	beq.n	32d06 <btrfs_util_set_default_subvolume_fd@@Base+0x22>
   32cf0:	ldr	r1, [pc, #40]	; (32d1c <btrfs_util_set_default_subvolume_fd@@Base+0x38>)
   32cf2:	mov	r2, sp
   32cf4:	mov	r0, r4
   32cf6:	blx	8578 <ioctl@plt>
   32cfa:	adds	r3, r0, #1
   32cfc:	ite	ne
   32cfe:	movne	r0, #0
   32d00:	moveq	r0, #19
   32d02:	add	sp, #8
   32d04:	pop	{r4, pc}
   32d06:	bl	3248c <btrfs_util_is_subvolume_fd@@Base>
   32d0a:	cmp	r0, #0
   32d0c:	bne.n	32d02 <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   32d0e:	mov	r1, sp
   32d10:	mov	r0, r4
   32d12:	bl	32520 <btrfs_util_subvolume_id_fd@@Base>
   32d16:	cmp	r0, #0
   32d18:	beq.n	32cf0 <btrfs_util_set_default_subvolume_fd@@Base+0xc>
   32d1a:	b.n	32d02 <btrfs_util_set_default_subvolume_fd@@Base+0x1e>
   32d1c:	str	r4, [sp, #76]	; 0x4c
   32d1e:	ands	r0, r1

00032d20 <btrfs_util_set_default_subvolume@@Base>:
   32d20:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   32d22:	movs	r1, #0
   32d24:	strd	r3, r2, [sp]
   32d28:	blx	86bc <open@plt>
   32d2c:	adds	r3, r0, #1
   32d2e:	mov	r6, r0
   32d30:	beq.n	32d52 <btrfs_util_set_default_subvolume@@Base+0x32>
   32d32:	ldrd	r3, r2, [sp]
   32d36:	bl	32ce4 <btrfs_util_set_default_subvolume_fd@@Base>
   32d3a:	mov	r4, r0
   32d3c:	blx	8740 <__errno_location@plt>
   32d40:	ldr	r7, [r0, #0]
   32d42:	mov	r5, r0
   32d44:	mov	r0, r6
   32d46:	blx	8960 <close@plt>
   32d4a:	str	r7, [r5, #0]
   32d4c:	mov	r0, r4
   32d4e:	add	sp, #12
   32d50:	pop	{r4, r5, r6, r7, pc}
   32d52:	movs	r4, #7
   32d54:	b.n	32d4c <btrfs_util_set_default_subvolume@@Base+0x2c>

00032d56 <btrfs_util_create_subvolume_fd@@Base>:
   32d56:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32d5a:	sub.w	sp, sp, #4096	; 0x1000
   32d5e:	sub	sp, #12
   32d60:	mov	r8, r1
   32d62:	ldr	r1, [pc, #232]	; (32e4c <btrfs_util_create_subvolume_fd@@Base+0xf6>)
   32d64:	mov	r9, r2
   32d66:	mov	r4, r3
   32d68:	ldr	r2, [pc, #228]	; (32e50 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   32d6a:	add.w	r3, sp, #4128	; 0x1020
   32d6e:	add	r1, pc
   32d70:	adds	r3, #8
   32d72:	mov	r5, sp
   32d74:	ldr	r2, [r1, r2]
   32d76:	mov	r7, r0
   32d78:	ldr	r6, [r3, #0]
   32d7a:	add.w	r3, sp, #4096	; 0x1000
   32d7e:	ldr	r2, [r2, #0]
   32d80:	str	r2, [r3, #4]
   32d82:	mov.w	r2, #0
   32d86:	movs	r1, #0
   32d88:	mov.w	r2, #4096	; 0x1000
   32d8c:	mov	r0, r5
   32d8e:	adds	r3, #4
   32d90:	blx	8780 <memset@plt+0x4>
   32d94:	cmp.w	r9, #0
   32d98:	beq.n	32dbe <btrfs_util_create_subvolume_fd@@Base+0x68>
   32d9a:	blx	8740 <__errno_location@plt>
   32d9e:	movs	r3, #22
   32da0:	str	r3, [r0, #0]
   32da2:	movs	r0, #3
   32da4:	ldr	r1, [pc, #172]	; (32e54 <btrfs_util_create_subvolume_fd@@Base+0xfe>)
   32da6:	add.w	r3, sp, #4096	; 0x1000
   32daa:	ldr	r2, [pc, #164]	; (32e50 <btrfs_util_create_subvolume_fd@@Base+0xfa>)
   32dac:	adds	r3, #4
   32dae:	add	r1, pc
   32db0:	ldr	r2, [r1, r2]
   32db2:	ldr	r1, [r2, #0]
   32db4:	ldr	r2, [r3, #0]
   32db6:	eors	r1, r2
   32db8:	beq.n	32e3e <btrfs_util_create_subvolume_fd@@Base+0xe8>
   32dba:	blx	84cc <__stack_chk_fail@plt>
   32dbe:	cbz	r4, 32dc8 <btrfs_util_create_subvolume_fd@@Base+0x72>
   32dc0:	movs	r2, #1
   32dc2:	movs	r3, #0
   32dc4:	strd	r2, r3, [r5, #16]
   32dc8:	cbz	r6, 32dea <btrfs_util_create_subvolume_fd@@Base+0x94>
   32dca:	ldr	r3, [r5, #16]
   32dcc:	str	r6, [r5, #32]
   32dce:	orr.w	r3, r3, #4
   32dd2:	str	r3, [r5, #16]
   32dd4:	ldrd	r3, r2, [r6, #8]
   32dd8:	adds	r3, #9
   32dda:	adc.w	r2, r2, #0
   32dde:	lsls	r2, r2, #3
   32de0:	orr.w	r2, r2, r3, lsr #29
   32de4:	lsls	r3, r3, #3
   32de6:	strd	r3, r2, [r5, #24]
   32dea:	mov	r0, r8
   32dec:	blx	8704 <strlen@plt>
   32df0:	movw	r3, #4039	; 0xfc7
   32df4:	cmp	r0, r3
   32df6:	mov	r6, r0
   32df8:	bls.n	32e02 <btrfs_util_create_subvolume_fd@@Base+0xac>
   32dfa:	blx	8740 <__errno_location@plt>
   32dfe:	movs	r3, #36	; 0x24
   32e00:	b.n	32da0 <btrfs_util_create_subvolume_fd@@Base+0x4a>
   32e02:	mov	r2, r0
   32e04:	mov	r1, r8
   32e06:	movw	r3, #4040	; 0xfc8
   32e0a:	add	r0, sp, #56	; 0x38
   32e0c:	add	r6, r5
   32e0e:	blx	855c <__memcpy_chk@plt>
   32e12:	ldr	r1, [pc, #52]	; (32e48 <btrfs_util_create_subvolume_fd@@Base+0xf2>)
   32e14:	mov	r2, r5
   32e16:	mov	r0, r7
   32e18:	mov.w	r8, #0
   32e1c:	strb.w	r8, [r6, #56]	; 0x38
   32e20:	blx	8578 <ioctl@plt>
   32e24:	adds	r0, #1
   32e26:	beq.n	32e36 <btrfs_util_create_subvolume_fd@@Base+0xe0>
   32e28:	cbz	r4, 32e3a <btrfs_util_create_subvolume_fd@@Base+0xe4>
   32e2a:	ldrd	r2, r3, [r5, #8]
   32e2e:	mov	r0, r8
   32e30:	strd	r2, r3, [r4]
   32e34:	b.n	32da4 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   32e36:	movs	r0, #16
   32e38:	b.n	32da4 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   32e3a:	mov	r0, r4
   32e3c:	b.n	32da4 <btrfs_util_create_subvolume_fd@@Base+0x4e>
   32e3e:	add.w	sp, sp, #4096	; 0x1000
   32e42:	add	sp, #12
   32e44:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32e48:	str	r4, [sp, #96]	; 0x60
   32e4a:	str	r0, [r0, r0]
   32e4c:	movs	r0, #26
   32e4e:	movs	r3, r0
   32e50:	lsls	r4, r4, #8
   32e52:	movs	r0, r0
   32e54:	subs	r2, r3, #7
   32e56:	movs	r3, r0

00032e58 <btrfs_util_create_subvolume@@Base>:
   32e58:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   32e5c:	mov	r7, r2
   32e5e:	ldr	r2, [pc, #120]	; (32ed8 <btrfs_util_create_subvolume@@Base+0x80>)
   32e60:	mov	r8, r3
   32e62:	ldr	r3, [pc, #120]	; (32edc <btrfs_util_create_subvolume@@Base+0x84>)
   32e64:	subw	sp, sp, #4060	; 0xfdc
   32e68:	add	r2, pc
   32e6a:	add.w	r9, sp, #12
   32e6e:	add	r6, sp, #8
   32e70:	mov	r5, r1
   32e72:	ldr	r3, [r2, r3]
   32e74:	mov	r1, r0
   32e76:	mvn.w	r0, #99	; 0x63
   32e7a:	mov	r2, r9
   32e7c:	ldr	r3, [r3, #0]
   32e7e:	str.w	r3, [sp, #4052]	; 0xfd4
   32e82:	mov.w	r3, #0
   32e86:	movw	r3, #4040	; 0xfc8
   32e8a:	str	r6, [sp, #0]
   32e8c:	bl	31e40 <print_all_devices@@Base+0x160>
   32e90:	mov	r4, r0
   32e92:	cbnz	r0, 32eb6 <btrfs_util_create_subvolume@@Base+0x5e>
   32e94:	mov	r3, r7
   32e96:	mov	r2, r5
   32e98:	mov	r1, r9
   32e9a:	str.w	r8, [sp]
   32e9e:	ldr	r0, [r6, #0]
   32ea0:	bl	32d56 <btrfs_util_create_subvolume_fd@@Base>
   32ea4:	mov	r4, r0
   32ea6:	blx	8740 <__errno_location@plt>
   32eaa:	ldr	r7, [r0, #0]
   32eac:	mov	r5, r0
   32eae:	ldr	r0, [r6, #0]
   32eb0:	blx	8960 <close@plt>
   32eb4:	str	r7, [r5, #0]
   32eb6:	ldr	r2, [pc, #40]	; (32ee0 <btrfs_util_create_subvolume@@Base+0x88>)
   32eb8:	ldr	r3, [pc, #32]	; (32edc <btrfs_util_create_subvolume@@Base+0x84>)
   32eba:	add	r2, pc
   32ebc:	ldr	r3, [r2, r3]
   32ebe:	ldr	r2, [r3, #0]
   32ec0:	ldr.w	r3, [sp, #4052]	; 0xfd4
   32ec4:	eors	r2, r3
   32ec6:	beq.n	32ecc <btrfs_util_create_subvolume@@Base+0x74>
   32ec8:	blx	84cc <__stack_chk_fail@plt>
   32ecc:	mov	r0, r4
   32ece:	addw	sp, sp, #4060	; 0xfdc
   32ed2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   32ed6:	nop
   32ed8:	subs	r0, r4, #4
   32eda:	movs	r3, r0
   32edc:	lsls	r4, r4, #8
   32ede:	movs	r0, r0
   32ee0:	subs	r6, r1, #3
   32ee2:	movs	r3, r0

00032ee4 <btrfs_util_create_subvolume_iterator_fd@@Base>:
   32ee4:	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   32ee8:	mov	r7, r0
   32eea:	ldr.w	r8, [sp, #40]	; 0x28
   32eee:	strd	r2, r3, [sp, #8]
   32ef2:	bics.w	r1, r8, #1
   32ef6:	beq.n	32f0a <btrfs_util_create_subvolume_iterator_fd@@Base+0x26>
   32ef8:	blx	8740 <__errno_location@plt>
   32efc:	movs	r5, #3
   32efe:	movs	r3, #22
   32f00:	str	r3, [r0, #0]
   32f02:	mov	r0, r5
   32f04:	add	sp, #16
   32f06:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   32f0a:	orrs	r3, r2
   32f0c:	bne.n	32f30 <btrfs_util_create_subvolume_iterator_fd@@Base+0x4c>
   32f0e:	blx	8518 <geteuid@plt>
   32f12:	ldrd	r2, r3, [sp, #8]
   32f16:	orrs	r3, r2
   32f18:	clz	r6, r0
   32f1c:	mov.w	r6, r6, lsr #5
   32f20:	beq.n	32f34 <btrfs_util_create_subvolume_iterator_fd@@Base+0x50>
   32f22:	movs	r0, #36	; 0x24
   32f24:	blx	8634 <malloc@plt+0x4>
   32f28:	mov	r4, r0
   32f2a:	cbnz	r0, 32f50 <btrfs_util_create_subvolume_iterator_fd@@Base+0x6c>
   32f2c:	movs	r5, #2
   32f2e:	b.n	32f02 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32f30:	movs	r6, #1
   32f32:	b.n	32f22 <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   32f34:	mov	r0, r7
   32f36:	bl	3248c <btrfs_util_is_subvolume_fd@@Base>
   32f3a:	mov	r5, r0
   32f3c:	cmp	r0, #0
   32f3e:	bne.n	32f02 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32f40:	add	r1, sp, #8
   32f42:	mov	r0, r7
   32f44:	bl	32520 <btrfs_util_subvolume_id_fd@@Base>
   32f48:	mov	r5, r0
   32f4a:	cmp	r0, #0
   32f4c:	beq.n	32f22 <btrfs_util_create_subvolume_iterator_fd@@Base+0x3e>
   32f4e:	b.n	32f02 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32f50:	movs	r3, #4
   32f52:	strd	r7, r7, [r0, #4]
   32f56:	str.w	r8, [r0, #12]
   32f5a:	movs	r5, #0
   32f5c:	strb	r6, [r0, #0]
   32f5e:	strd	r5, r3, [r0, #20]
   32f62:	movw	r0, #16448	; 0x4040
   32f66:	blx	8634 <malloc@plt+0x4>
   32f6a:	str	r0, [r4, #16]
   32f6c:	cbz	r0, 32faa <btrfs_util_create_subvolume_iterator_fd@@Base+0xc6>
   32f6e:	mov.w	r0, #256	; 0x100
   32f72:	str	r0, [r4, #32]
   32f74:	blx	8634 <malloc@plt+0x4>
   32f78:	str	r0, [r4, #28]
   32f7a:	cbz	r0, 32fa6 <btrfs_util_create_subvolume_iterator_fd@@Base+0xc2>
   32f7c:	str	r5, [sp, #0]
   32f7e:	mov	r0, r4
   32f80:	ldrd	r2, r3, [sp, #8]
   32f84:	bl	3268c <btrfs_util_subvolume_id@@Base+0xe0>
   32f88:	mov	r5, r0
   32f8a:	cbz	r0, 32fa0 <btrfs_util_create_subvolume_iterator_fd@@Base+0xbc>
   32f8c:	ldr	r0, [r4, #28]
   32f8e:	blx	83f0 <free@plt+0x4>
   32f92:	ldr	r0, [r4, #16]
   32f94:	blx	83f0 <free@plt+0x4>
   32f98:	mov	r0, r4
   32f9a:	blx	83f0 <free@plt+0x4>
   32f9e:	b.n	32f02 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32fa0:	ldr	r3, [sp, #44]	; 0x2c
   32fa2:	str	r4, [r3, #0]
   32fa4:	b.n	32f02 <btrfs_util_create_subvolume_iterator_fd@@Base+0x1e>
   32fa6:	movs	r5, #2
   32fa8:	b.n	32f92 <btrfs_util_create_subvolume_iterator_fd@@Base+0xae>
   32faa:	movs	r5, #2
   32fac:	b.n	32f98 <btrfs_util_create_subvolume_iterator_fd@@Base+0xb4>

00032fae <btrfs_util_create_subvolume_iterator@@Base>:
   32fae:	push	{r4, r5, r6, r7, lr}
   32fb0:	sub	sp, #20
   32fb2:	movs	r1, #0
   32fb4:	strd	r3, r2, [sp, #8]
   32fb8:	ldr	r5, [sp, #44]	; 0x2c
   32fba:	blx	86bc <open@plt>
   32fbe:	adds	r3, r0, #1
   32fc0:	mov	r6, r0
   32fc2:	beq.n	32ff8 <btrfs_util_create_subvolume_iterator@@Base+0x4a>
   32fc4:	ldr	r1, [sp, #40]	; 0x28
   32fc6:	ldrd	r3, r2, [sp, #8]
   32fca:	str	r5, [sp, #4]
   32fcc:	str	r1, [sp, #0]
   32fce:	bl	32ee4 <btrfs_util_create_subvolume_iterator_fd@@Base>
   32fd2:	mov	r4, r0
   32fd4:	cbz	r0, 32fec <btrfs_util_create_subvolume_iterator@@Base+0x3e>
   32fd6:	blx	8740 <__errno_location@plt>
   32fda:	ldr	r7, [r0, #0]
   32fdc:	mov	r5, r0
   32fde:	mov	r0, r6
   32fe0:	blx	8960 <close@plt>
   32fe4:	str	r7, [r5, #0]
   32fe6:	mov	r0, r4
   32fe8:	add	sp, #20
   32fea:	pop	{r4, r5, r6, r7, pc}
   32fec:	ldr	r2, [r5, #0]
   32fee:	ldr	r3, [r2, #12]
   32ff0:	orr.w	r3, r3, #1073741824	; 0x40000000
   32ff4:	str	r3, [r2, #12]
   32ff6:	b.n	32fe6 <btrfs_util_create_subvolume_iterator@@Base+0x38>
   32ff8:	movs	r4, #7
   32ffa:	b.n	32fe6 <btrfs_util_create_subvolume_iterator@@Base+0x38>

00032ffc <btrfs_util_destroy_subvolume_iterator@@Base>:
   32ffc:	push	{r3, r4, r5, r6, r7, lr}
   32ffe:	mov	r4, r0
   33000:	cbz	r0, 33046 <btrfs_util_destroy_subvolume_iterator@@Base+0x4a>
   33002:	ldr	r0, [r0, #28]
   33004:	blx	83f0 <free@plt+0x4>
   33008:	ldr	r0, [r4, #16]
   3300a:	blx	83f0 <free@plt+0x4>
   3300e:	ldrd	r3, r6, [r4, #4]
   33012:	cmp	r6, r3
   33014:	beq.n	33026 <btrfs_util_destroy_subvolume_iterator@@Base+0x2a>
   33016:	blx	8740 <__errno_location@plt>
   3301a:	ldr	r7, [r0, #0]
   3301c:	mov	r5, r0
   3301e:	mov	r0, r6
   33020:	blx	8960 <close@plt>
   33024:	str	r7, [r5, #0]
   33026:	ldr	r3, [r4, #12]
   33028:	lsls	r3, r3, #1
   3302a:	bpl.n	3303c <btrfs_util_destroy_subvolume_iterator@@Base+0x40>
   3302c:	blx	8740 <__errno_location@plt>
   33030:	ldr	r6, [r0, #0]
   33032:	mov	r5, r0
   33034:	ldr	r0, [r4, #4]
   33036:	blx	8960 <close@plt>
   3303a:	str	r6, [r5, #0]
   3303c:	mov	r0, r4
   3303e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
   33042:	b.w	83ec <free@plt>
   33046:	pop	{r3, r4, r5, r6, r7, pc}

00033048 <btrfs_util_subvolume_iterator_fd@@Base>:
   33048:	ldr	r0, [r0, #4]
   3304a:	bx	lr

0003304c <btrfs_util_subvolume_iterator_next@@Base>:
   3304c:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33050:	mov	r5, r2
   33052:	ldr	r2, [pc, #696]	; (3330c <btrfs_util_subvolume_iterator_next@@Base+0x2c0>)
   33054:	sub	sp, #52	; 0x34
   33056:	ldr	r3, [pc, #696]	; (33310 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   33058:	mov	r4, r0
   3305a:	add	r2, pc
   3305c:	mov	r8, r1
   3305e:	ldr	r3, [r2, r3]
   33060:	ldr	r3, [r3, #0]
   33062:	str	r3, [sp, #44]	; 0x2c
   33064:	mov.w	r3, #0
   33068:	ldrb	r3, [r0, #0]
   3306a:	cmp	r3, #0
   3306c:	beq.n	3312e <btrfs_util_subvolume_iterator_next@@Base+0xe2>
   3306e:	movw	r6, #4112	; 0x1010
   33072:	movw	sl, #4104	; 0x1008
   33076:	ldr	r3, [r4, #20]
   33078:	cmp	r3, #0
   3307a:	beq.w	332ec <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   3307e:	muls	r3, r6
   33080:	ldr	r2, [r4, #16]
   33082:	sub.w	r3, r3, #4096	; 0x1000
   33086:	subs	r3, #16
   33088:	add.w	fp, r2, r3
   3308c:	add.w	r7, fp, sl
   33090:	ldr.w	r1, [fp, sl]
   33094:	ldr.w	r2, [fp, #64]	; 0x40
   33098:	cmp	r1, r2
   3309a:	bcc.w	331de <btrfs_util_subvolume_iterator_next@@Base+0x192>
   3309e:	mov.w	r2, #4096	; 0x1000
   330a2:	ldr	r1, [pc, #608]	; (33304 <btrfs_util_subvolume_iterator_next@@Base+0x2b8>)
   330a4:	str.w	r2, [fp, #64]	; 0x40
   330a8:	mov	r2, fp
   330aa:	ldr	r0, [r4, #4]
   330ac:	blx	8578 <ioctl@plt>
   330b0:	adds	r0, #1
   330b2:	beq.w	33276 <btrfs_util_subvolume_iterator_next@@Base+0x22a>
   330b6:	add.w	r1, fp, #4096	; 0x1000
   330ba:	movs	r2, #0
   330bc:	str	r2, [r7, #0]
   330be:	str	r2, [r1, #0]
   330c0:	ldr.w	r2, [fp, #64]	; 0x40
   330c4:	cmp	r2, #0
   330c6:	bne.n	33076 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   330c8:	mov	r0, r4
   330ca:	bl	32364 <print_all_devices@@Base+0x684>
   330ce:	ldr	r2, [r4, #12]
   330d0:	lsls	r0, r2, #31
   330d2:	bpl.n	33076 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   330d4:	ldr	r2, [r4, #20]
   330d6:	cmp	r2, #0
   330d8:	beq.n	33076 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   330da:	cmp.w	r8, #0
   330de:	beq.n	3310c <btrfs_util_subvolume_iterator_next@@Base+0xc0>
   330e0:	movw	r7, #4108	; 0x100c
   330e4:	ldr.w	r9, [fp, r7]
   330e8:	add.w	r0, r9, #1
   330ec:	blx	8634 <malloc@plt+0x4>
   330f0:	mov	r6, r0
   330f2:	str.w	r0, [r8]
   330f6:	cmp	r0, #0
   330f8:	beq.w	332f4 <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   330fc:	ldr	r1, [r4, #28]
   330fe:	mov	r2, r9
   33100:	blx	843c <memcpy@plt+0x4>
   33104:	ldr.w	r2, [fp, r7]
   33108:	movs	r1, #0
   3310a:	strb	r1, [r6, r2]
   3310c:	cbz	r5, 33116 <btrfs_util_subvolume_iterator_next@@Base+0xca>
   3310e:	ldrd	r2, r3, [fp, #8]
   33112:	strd	r2, r3, [r5]
   33116:	movs	r3, #0
   33118:	ldr	r1, [pc, #504]	; (33314 <btrfs_util_subvolume_iterator_next@@Base+0x2c8>)
   3311a:	ldr	r2, [pc, #500]	; (33310 <btrfs_util_subvolume_iterator_next@@Base+0x2c4>)
   3311c:	add	r1, pc
   3311e:	ldr	r2, [r1, r2]
   33120:	ldr	r1, [r2, #0]
   33122:	ldr	r2, [sp, #44]	; 0x2c
   33124:	eors	r1, r2
   33126:	beq.w	332fc <btrfs_util_subvolume_iterator_next@@Base+0x2b0>
   3312a:	blx	84cc <__stack_chk_fail@plt>
   3312e:	movw	r9, #4112	; 0x1010
   33132:	movw	sl, #4104	; 0x1008
   33136:	ldr	r3, [r4, #20]
   33138:	cmp	r3, #0
   3313a:	beq.w	332ec <btrfs_util_subvolume_iterator_next@@Base+0x2a0>
   3313e:	mul.w	fp, r9, r3
   33142:	ldr	r3, [r4, #16]
   33144:	sub.w	fp, fp, #4096	; 0x1000
   33148:	sub.w	fp, fp, #16
   3314c:	add	fp, r3
   3314e:	add.w	r6, fp, #4096	; 0x1000
   33152:	add.w	r7, fp, sl
   33156:	ldr.w	r1, [fp, sl]
   3315a:	ldrb	r3, [r6, #0]
   3315c:	cmp	r1, r3
   3315e:	bcc.w	3327a <btrfs_util_subvolume_iterator_next@@Base+0x22e>
   33162:	ldr	r1, [pc, #420]	; (33308 <btrfs_util_subvolume_iterator_next@@Base+0x2bc>)
   33164:	add.w	r2, fp, #8
   33168:	ldr	r0, [r4, #8]
   3316a:	blx	8578 <ioctl@plt>
   3316e:	adds	r0, #1
   33170:	bne.n	3317e <btrfs_util_subvolume_iterator_next@@Base+0x132>
   33172:	blx	8740 <__errno_location@plt>
   33176:	ldr	r3, [r0, #0]
   33178:	cmp	r3, #75	; 0x4b
   3317a:	bne.w	332f0 <btrfs_util_subvolume_iterator_next@@Base+0x2a4>
   3317e:	movs	r3, #0
   33180:	str	r3, [r7, #0]
   33182:	ldrb	r3, [r6, #0]
   33184:	cmp	r3, #0
   33186:	bne.n	33136 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   33188:	mov	r0, r4
   3318a:	bl	32364 <print_all_devices@@Base+0x684>
   3318e:	mov	r3, r0
   33190:	cmp	r0, #0
   33192:	bne.n	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   33194:	ldr	r3, [r4, #12]
   33196:	lsls	r2, r3, #31
   33198:	bpl.n	33136 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   3319a:	ldr	r3, [r4, #20]
   3319c:	cmp	r3, #0
   3319e:	beq.n	33136 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   331a0:	cmp.w	r8, #0
   331a4:	beq.n	331d2 <btrfs_util_subvolume_iterator_next@@Base+0x186>
   331a6:	movw	r7, #4108	; 0x100c
   331aa:	ldr.w	r9, [fp, r7]
   331ae:	add.w	r0, r9, #1
   331b2:	blx	8634 <malloc@plt+0x4>
   331b6:	mov	r6, r0
   331b8:	str.w	r0, [r8]
   331bc:	cmp	r0, #0
   331be:	beq.w	332f4 <btrfs_util_subvolume_iterator_next@@Base+0x2a8>
   331c2:	mov	r2, r9
   331c4:	ldr	r1, [r4, #28]
   331c6:	blx	843c <memcpy@plt+0x4>
   331ca:	ldr.w	r3, [fp, r7]
   331ce:	movs	r2, #0
   331d0:	strb	r2, [r6, r3]
   331d2:	cmp	r5, #0
   331d4:	beq.w	332f8 <btrfs_util_subvolume_iterator_next@@Base+0x2ac>
   331d8:	ldrd	r2, r3, [fp]
   331dc:	b.n	33112 <btrfs_util_subvolume_iterator_next@@Base+0xc6>
   331de:	add.w	r0, fp, #4096	; 0x1000
   331e2:	add.w	ip, fp, #104	; 0x68
   331e6:	adds	r1, #1
   331e8:	add	r7, sp, #32
   331ea:	ldr	r2, [r0, #0]
   331ec:	str.w	r1, [fp, sl]
   331f0:	add	ip, r2
   331f2:	adds	r2, #32
   331f4:	ldr.w	r1, [ip, #28]
   331f8:	mov	r9, ip
   331fa:	add	r2, r1
   331fc:	str	r2, [r0, #0]
   331fe:	ldr.w	r0, [r9, #16]!
   33202:	mov	r2, r7
   33204:	ldr.w	r1, [r9, #4]
   33208:	stmia	r2!, {r0, r1}
   3320a:	adds	r2, r0, #1
   3320c:	ldr	r1, [sp, #36]	; 0x24
   3320e:	adc.w	r1, r1, #0
   33212:	strd	r2, r1, [fp, #24]
   33216:	ldr.w	r3, [ip, #24]
   3321a:	cmp	r3, #156	; 0x9c
   3321c:	bne.w	33076 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   33220:	add	r3, sp, #28
   33222:	add.w	r2, ip, #32
   33226:	str	r3, [sp, #0]
   33228:	mov	r1, ip
   3322a:	add.w	r3, ip, #50	; 0x32
   3322e:	mov	r0, r4
   33230:	bl	321e4 <print_all_devices@@Base+0x504>
   33234:	mov	r3, r0
   33236:	cmp	r0, #0
   33238:	bne.w	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3323c:	ldr.w	r0, [r9]
   33240:	ldr.w	r1, [r9, #4]
   33244:	ldr	r3, [sp, #28]
   33246:	stmia	r7!, {r0, r1}
   33248:	mov	r0, r4
   3324a:	str	r3, [sp, #0]
   3324c:	ldrd	r2, r3, [sp, #32]
   33250:	bl	3268c <btrfs_util_subvolume_id@@Base+0xe0>
   33254:	mov	r3, r0
   33256:	cmp	r0, #0
   33258:	bne.w	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3325c:	ldr	r3, [r4, #12]
   3325e:	lsls	r1, r3, #31
   33260:	bmi.w	33076 <btrfs_util_subvolume_iterator_next@@Base+0x2a>
   33264:	ldr	r3, [r4, #20]
   33266:	muls	r6, r3
   33268:	ldr	r3, [r4, #16]
   3326a:	sub.w	r6, r6, #4096	; 0x1000
   3326e:	subs	r6, #16
   33270:	add.w	fp, r3, r6
   33274:	b.n	330da <btrfs_util_subvolume_iterator_next@@Base+0x8e>
   33276:	movs	r3, #12
   33278:	b.n	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   3327a:	adds	r1, #1
   3327c:	mov	r0, r4
   3327e:	add.w	r3, fp, r1, lsl #4
   33282:	ldrd	r6, r7, [r3]
   33286:	ldrd	r2, r3, [r3, #8]
   3328a:	str.w	r1, [fp, sl]
   3328e:	add	r1, sp, #32
   33290:	str	r1, [sp, #8]
   33292:	strd	r2, r3, [sp]
   33296:	mov	r2, r6
   33298:	mov	r3, r7
   3329a:	bl	322a4 <print_all_devices@@Base+0x5c4>
   3329e:	str	r0, [sp, #20]
   332a0:	cbz	r0, 332b2 <btrfs_util_subvolume_iterator_next@@Base+0x266>
   332a2:	blx	8740 <__errno_location@plt>
   332a6:	ldr	r2, [r0, #0]
   332a8:	cmp	r2, #13
   332aa:	ldr	r3, [sp, #20]
   332ac:	bne.w	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   332b0:	b.n	33136 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   332b2:	ldr	r3, [sp, #32]
   332b4:	mov	r2, r6
   332b6:	mov	r0, r4
   332b8:	str	r3, [sp, #0]
   332ba:	mov	r3, r7
   332bc:	bl	3268c <btrfs_util_subvolume_id@@Base+0xe0>
   332c0:	str	r0, [sp, #20]
   332c2:	cbz	r0, 332d0 <btrfs_util_subvolume_iterator_next@@Base+0x284>
   332c4:	blx	8740 <__errno_location@plt>
   332c8:	ldr	r2, [r0, #0]
   332ca:	cmp	r2, #2
   332cc:	bne.n	332a8 <btrfs_util_subvolume_iterator_next@@Base+0x25c>
   332ce:	b.n	33136 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   332d0:	ldr	r3, [r4, #12]
   332d2:	lsls	r3, r3, #31
   332d4:	bmi.w	33136 <btrfs_util_subvolume_iterator_next@@Base+0xea>
   332d8:	ldr	r3, [r4, #20]
   332da:	mul.w	fp, r9, r3
   332de:	ldr	r3, [r4, #16]
   332e0:	sub.w	fp, fp, #4096	; 0x1000
   332e4:	sub.w	fp, fp, #16
   332e8:	add	fp, r3
   332ea:	b.n	331a0 <btrfs_util_subvolume_iterator_next@@Base+0x154>
   332ec:	movs	r3, #1
   332ee:	b.n	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   332f0:	movs	r3, #24
   332f2:	b.n	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   332f4:	movs	r3, #2
   332f6:	b.n	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   332f8:	mov	r3, r5
   332fa:	b.n	33118 <btrfs_util_subvolume_iterator_next@@Base+0xcc>
   332fc:	mov	r0, r3
   332fe:	add	sp, #52	; 0x34
   33300:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33304:	str	r4, [sp, #68]	; 0x44
   33306:	beq.n	3330a <btrfs_util_subvolume_iterator_next@@Base+0x2be>
   33308:	str	r4, [sp, #244]	; 0xf4
   3330a:	beq.n	3330e <btrfs_util_subvolume_iterator_next@@Base+0x2c2>
   3330c:	adds	r6, r5, #4
   3330e:	movs	r3, r0
   33310:	lsls	r4, r4, #8
   33312:	movs	r0, r0
   33314:	adds	r4, r5, #1
   33316:	movs	r3, r0

00033318 <btrfs_util_create_snapshot_fd2@@Base>:
   33318:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3331c:	sub.w	sp, sp, #8192	; 0x2000
   33320:	sub	sp, #4
   33322:	mov	r6, r3
   33324:	add.w	r3, sp, #8192	; 0x2000
   33328:	mov	sl, r1
   3332a:	ldr	r1, [pc, #604]	; (33588 <btrfs_util_create_snapshot_fd2@@Base+0x270>)
   3332c:	adds	r3, #40	; 0x28
   3332e:	mov	r7, r2
   33330:	ldr	r5, [r3, #0]
   33332:	ldr	r2, [pc, #600]	; (3358c <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   33334:	add.w	r3, sp, #8192	; 0x2000
   33338:	add	r1, pc
   3333a:	add.w	r8, sp, #64	; 0x40
   3333e:	ldr.w	fp, [r3, #44]	; 0x2c
   33342:	adds	r3, #44	; 0x2c
   33344:	ldr	r2, [r1, r2]
   33346:	add.w	r3, sp, #8160	; 0x1fe0
   3334a:	sub.w	r4, r8, #16
   3334e:	mov	r9, r0
   33350:	ldr	r2, [r2, #0]
   33352:	str	r2, [r3, #28]
   33354:	mov.w	r2, #0
   33358:	mov.w	r2, #4096	; 0x1000
   3335c:	movs	r1, #0
   3335e:	mov	r0, r4
   33360:	adds	r3, #28
   33362:	blx	8780 <memset@plt+0x4>
   33366:	mov	r2, r9
   33368:	asrs	r3, r2, #31
   3336a:	strd	r2, r3, [r8, #-16]
   3336e:	bics.w	r3, r6, #3
   33372:	bne.n	33378 <btrfs_util_create_snapshot_fd2@@Base+0x60>
   33374:	cmp	r6, #3
   33376:	bne.n	3339e <btrfs_util_create_snapshot_fd2@@Base+0x86>
   33378:	blx	8740 <__errno_location@plt>
   3337c:	movs	r3, #22
   3337e:	movs	r6, #3
   33380:	str	r3, [r0, #0]
   33382:	ldr	r1, [pc, #524]	; (33590 <btrfs_util_create_snapshot_fd2@@Base+0x278>)
   33384:	add.w	r3, sp, #8160	; 0x1fe0
   33388:	ldr	r2, [pc, #512]	; (3358c <btrfs_util_create_snapshot_fd2@@Base+0x274>)
   3338a:	adds	r3, #28
   3338c:	add	r1, pc
   3338e:	ldr	r2, [r1, r2]
   33390:	ldr	r1, [r2, #0]
   33392:	ldr	r2, [r3, #0]
   33394:	eors	r1, r2
   33396:	beq.w	33576 <btrfs_util_create_snapshot_fd2@@Base+0x25e>
   3339a:	blx	84cc <__stack_chk_fail@plt>
   3339e:	lsls	r2, r6, #30
   333a0:	ittt	mi
   333a2:	movmi	r2, #2
   333a4:	movmi	r3, #0
   333a6:	strdmi	r2, r3, [r4, #16]
   333aa:	cbz	r5, 333b4 <btrfs_util_create_snapshot_fd2@@Base+0x9c>
   333ac:	ldr	r3, [r4, #16]
   333ae:	orr.w	r3, r3, #1
   333b2:	str	r3, [r4, #16]
   333b4:	cmp.w	fp, #0
   333b8:	beq.n	333dc <btrfs_util_create_snapshot_fd2@@Base+0xc4>
   333ba:	ldr	r3, [r4, #16]
   333bc:	str.w	fp, [r4, #32]
   333c0:	orr.w	r3, r3, #4
   333c4:	str	r3, [r4, #16]
   333c6:	ldrd	r3, r2, [fp, #8]
   333ca:	adds	r3, #9
   333cc:	adc.w	r2, r2, #0
   333d0:	lsls	r2, r2, #3
   333d2:	orr.w	r2, r2, r3, lsr #29
   333d6:	lsls	r3, r3, #3
   333d8:	strd	r3, r2, [r4, #24]
   333dc:	mov	r0, r7
   333de:	blx	8704 <strlen@plt>
   333e2:	movw	r3, #4039	; 0xfc7
   333e6:	cmp	r0, r3
   333e8:	mov	fp, r0
   333ea:	bls.n	333f4 <btrfs_util_create_snapshot_fd2@@Base+0xdc>
   333ec:	blx	8740 <__errno_location@plt>
   333f0:	movs	r3, #36	; 0x24
   333f2:	b.n	3337e <btrfs_util_create_snapshot_fd2@@Base+0x66>
   333f4:	mov	r2, r0
   333f6:	movw	r3, #4040	; 0xfc8
   333fa:	mov	r1, r7
   333fc:	add.w	r0, r8, #40	; 0x28
   33400:	add	fp, r4
   33402:	blx	855c <__memcpy_chk@plt>
   33406:	ldr	r1, [pc, #380]	; (33584 <btrfs_util_create_snapshot_fd2@@Base+0x26c>)
   33408:	mov	r2, r4
   3340a:	mov	r0, sl
   3340c:	movs	r3, #0
   3340e:	strb.w	r3, [fp, #56]	; 0x38
   33412:	blx	8578 <ioctl@plt>
   33416:	adds	r0, #1
   33418:	beq.w	3356e <btrfs_util_create_snapshot_fd2@@Base+0x256>
   3341c:	cbz	r5, 33426 <btrfs_util_create_snapshot_fd2@@Base+0x10e>
   3341e:	ldrd	r2, r3, [r4, #8]
   33422:	strd	r2, r3, [r5]
   33426:	ands.w	r3, r6, #1
   3342a:	beq.w	33572 <btrfs_util_create_snapshot_fd2@@Base+0x25a>
   3342e:	mov	r1, r7
   33430:	movs	r2, #0
   33432:	mov	r0, sl
   33434:	blx	84c0 <openat@plt>
   33438:	adds	r3, r0, #1
   3343a:	mov	r7, r0
   3343c:	beq.w	3356a <btrfs_util_create_snapshot_fd2@@Base+0x252>
   33440:	add	r4, sp, #32
   33442:	movs	r2, #0
   33444:	subs	r3, r4, #4
   33446:	mov	r0, r9
   33448:	str	r3, [sp, #12]
   3344a:	str	r3, [sp, #4]
   3344c:	movs	r3, #0
   3344e:	str	r3, [sp, #0]
   33450:	movs	r3, #0
   33452:	bl	32ee4 <btrfs_util_create_subvolume_iterator_fd@@Base>
   33456:	mov	r6, r0
   33458:	cbnz	r0, 33498 <btrfs_util_create_snapshot_fd2@@Base+0x180>
   3345a:	cmp	r5, #0
   3345c:	add.w	sl, sp, #36	; 0x24
   33460:	sub.w	r3, r8, #24
   33464:	str	r3, [sp, #16]
   33466:	it	eq
   33468:	moveq	r3, #0
   3346a:	str	r3, [sp, #20]
   3346c:	ldr	r3, [sp, #12]
   3346e:	movs	r2, #0
   33470:	mov	r1, r4
   33472:	ldr	r0, [r3, #0]
   33474:	bl	3304c <btrfs_util_subvolume_iterator_next@@Base>
   33478:	mov	fp, r0
   3347a:	blx	8740 <__errno_location@plt>
   3347e:	mov	r6, r0
   33480:	cmp.w	fp, #0
   33484:	beq.n	334aa <btrfs_util_create_snapshot_fd2@@Base+0x192>
   33486:	cmp.w	fp, #1
   3348a:	it	eq
   3348c:	moveq.w	fp, #0
   33490:	ldr	r0, [sp, #28]
   33492:	mov	r6, fp
   33494:	bl	32ffc <btrfs_util_destroy_subvolume_iterator@@Base>
   33498:	blx	8740 <__errno_location@plt>
   3349c:	ldr	r5, [r0, #0]
   3349e:	mov	r4, r0
   334a0:	mov	r0, r7
   334a2:	blx	8960 <close@plt>
   334a6:	str	r5, [r4, #0]
   334a8:	b.n	33382 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   334aa:	ldr	r1, [r4, #0]
   334ac:	mov.w	r2, #512	; 0x200
   334b0:	mov	r0, r7
   334b2:	blx	83d0 <unlinkat@plt>
   334b6:	adds	r0, #1
   334b8:	bne.n	334c6 <btrfs_util_create_snapshot_fd2@@Base+0x1ae>
   334ba:	ldr	r0, [r4, #0]
   334bc:	mov.w	fp, #8
   334c0:	blx	83f0 <free@plt+0x4>
   334c4:	b.n	33490 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   334c6:	ldr	r1, [r4, #0]
   334c8:	mov	r2, fp
   334ca:	mov	r0, r9
   334cc:	blx	84c0 <openat@plt>
   334d0:	cmp.w	r0, #4294967295	; 0xffffffff
   334d4:	mov	r8, r0
   334d6:	bne.n	334e4 <btrfs_util_create_snapshot_fd2@@Base+0x1cc>
   334d8:	ldr	r0, [r4, #0]
   334da:	mov.w	fp, #7
   334de:	blx	83f0 <free@plt+0x4>
   334e2:	b.n	33490 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   334e4:	add.w	r2, sp, #4128	; 0x1020
   334e8:	movw	r3, #4040	; 0xfc8
   334ec:	adds	r2, #20
   334ee:	str.w	sl, [sp]
   334f2:	mov	r0, r7
   334f4:	ldr	r1, [r4, #0]
   334f6:	str	r2, [sp, #8]
   334f8:	bl	31e40 <print_all_devices@@Base+0x160>
   334fc:	mov	fp, r0
   334fe:	ldr	r0, [r4, #0]
   33500:	blx	83f0 <free@plt+0x4>
   33504:	ldr	r2, [sp, #8]
   33506:	cmp.w	fp, #0
   3350a:	beq.n	33518 <btrfs_util_create_snapshot_fd2@@Base+0x200>
   3350c:	ldr	r4, [r6, #0]
   3350e:	mov	r0, r8
   33510:	blx	8960 <close@plt>
   33514:	str	r4, [r6, #0]
   33516:	b.n	33490 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   33518:	ldr	r3, [sp, #20]
   3351a:	mov	r0, r8
   3351c:	str.w	fp, [sp, #4]
   33520:	str	r3, [sp, #0]
   33522:	mov	r3, fp
   33524:	ldr.w	r1, [sl]
   33528:	bl	33318 <btrfs_util_create_snapshot_fd2@@Base>
   3352c:	ldr	r3, [r6, #0]
   3352e:	str	r3, [sp, #8]
   33530:	mov	fp, r0
   33532:	mov	r0, r8
   33534:	blx	8960 <close@plt>
   33538:	ldr	r3, [sp, #8]
   3353a:	ldr.w	r0, [sl]
   3353e:	str	r3, [r6, #0]
   33540:	blx	8960 <close@plt>
   33544:	ldr	r3, [sp, #8]
   33546:	str	r3, [r6, #0]
   33548:	cmp.w	fp, #0
   3354c:	bne.n	33490 <btrfs_util_create_snapshot_fd2@@Base+0x178>
   3354e:	cmp	r5, #0
   33550:	beq.n	3346c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   33552:	ldr	r3, [sp, #16]
   33554:	ldrd	r0, r1, [r3]
   33558:	ldrd	r2, r3, [r5]
   3355c:	cmp	r3, r1
   3355e:	it	eq
   33560:	cmpeq	r2, r0
   33562:	bcs.n	3346c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   33564:	strd	r0, r1, [r5]
   33568:	b.n	3346c <btrfs_util_create_snapshot_fd2@@Base+0x154>
   3356a:	movs	r6, #7
   3356c:	b.n	33382 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   3356e:	movs	r6, #16
   33570:	b.n	33382 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   33572:	mov	r6, r3
   33574:	b.n	33382 <btrfs_util_create_snapshot_fd2@@Base+0x6a>
   33576:	mov	r0, r6
   33578:	add.w	sp, sp, #8192	; 0x2000
   3357c:	add	sp, #4
   3357e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33582:	nop
   33584:	str	r4, [sp, #92]	; 0x5c
   33586:	str	r0, [r0, r0]
   33588:	subs	r0, r2, r1
   3358a:	movs	r3, r0
   3358c:	lsls	r4, r4, #8
   3358e:	movs	r0, r0
   33590:	adds	r4, r7, r7
   33592:	movs	r3, r0

00033594 <btrfs_util_create_snapshot_fd@@Base>:
   33594:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33598:	subw	sp, sp, #4068	; 0xfe4
   3359c:	mov	r8, r3
   3359e:	add.w	r3, sp, #4096	; 0x1000
   335a2:	mov	r7, r2
   335a4:	ldr	r2, [pc, #112]	; (33618 <btrfs_util_create_snapshot_fd@@Base+0x84>)
   335a6:	ldr.w	r9, [r3]
   335aa:	add	r6, sp, #16
   335ac:	ldr	r3, [pc, #108]	; (3361c <btrfs_util_create_snapshot_fd@@Base+0x88>)
   335ae:	add	r2, pc
   335b0:	mov	r5, r0
   335b2:	mvn.w	r0, #99	; 0x63
   335b6:	ldr	r3, [r2, r3]
   335b8:	add	r2, sp, #20
   335ba:	ldr	r3, [r3, #0]
   335bc:	str.w	r3, [sp, #4060]	; 0xfdc
   335c0:	mov.w	r3, #0
   335c4:	movw	r3, #4040	; 0xfc8
   335c8:	str	r6, [sp, #0]
   335ca:	str	r2, [sp, #12]
   335cc:	bl	31e40 <print_all_devices@@Base+0x160>
   335d0:	mov	r4, r0
   335d2:	cbnz	r0, 335f6 <btrfs_util_create_snapshot_fd@@Base+0x62>
   335d4:	mov	r3, r7
   335d6:	ldr	r2, [sp, #12]
   335d8:	mov	r0, r5
   335da:	strd	r8, r9, [sp]
   335de:	ldr	r1, [r6, #0]
   335e0:	bl	33318 <btrfs_util_create_snapshot_fd2@@Base>
   335e4:	mov	r4, r0
   335e6:	blx	8740 <__errno_location@plt>
   335ea:	ldr	r7, [r0, #0]
   335ec:	mov	r5, r0
   335ee:	ldr	r0, [r6, #0]
   335f0:	blx	8960 <close@plt>
   335f4:	str	r7, [r5, #0]
   335f6:	ldr	r2, [pc, #40]	; (33620 <btrfs_util_create_snapshot_fd@@Base+0x8c>)
   335f8:	ldr	r3, [pc, #32]	; (3361c <btrfs_util_create_snapshot_fd@@Base+0x88>)
   335fa:	add	r2, pc
   335fc:	ldr	r3, [r2, r3]
   335fe:	ldr	r2, [r3, #0]
   33600:	ldr.w	r3, [sp, #4060]	; 0xfdc
   33604:	eors	r2, r3
   33606:	beq.n	3360c <btrfs_util_create_snapshot_fd@@Base+0x78>
   33608:	blx	84cc <__stack_chk_fail@plt>
   3360c:	mov	r0, r4
   3360e:	addw	sp, sp, #4068	; 0xfe4
   33612:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   33616:	nop
   33618:	asrs	r2, r3, #31
   3361a:	movs	r3, r0
   3361c:	lsls	r4, r4, #8
   3361e:	movs	r0, r0
   33620:	asrs	r6, r1, #30
   33622:	movs	r3, r0

00033624 <btrfs_util_create_snapshot@@Base>:
   33624:	push	{r4, r5, r6, r7, lr}
   33626:	sub	sp, #20
   33628:	mov	r4, r1
   3362a:	movs	r1, #0
   3362c:	strd	r3, r2, [sp, #8]
   33630:	blx	86bc <open@plt>
   33634:	adds	r3, r0, #1
   33636:	mov	r6, r0
   33638:	beq.n	33660 <btrfs_util_create_snapshot@@Base+0x3c>
   3363a:	ldr	r1, [sp, #40]	; 0x28
   3363c:	ldrd	r3, r2, [sp, #8]
   33640:	str	r1, [sp, #0]
   33642:	mov	r1, r4
   33644:	bl	33594 <btrfs_util_create_snapshot_fd@@Base>
   33648:	mov	r4, r0
   3364a:	blx	8740 <__errno_location@plt>
   3364e:	ldr	r7, [r0, #0]
   33650:	mov	r5, r0
   33652:	mov	r0, r6
   33654:	blx	8960 <close@plt>
   33658:	str	r7, [r5, #0]
   3365a:	mov	r0, r4
   3365c:	add	sp, #20
   3365e:	pop	{r4, r5, r6, r7, pc}
   33660:	movs	r4, #7
   33662:	b.n	3365a <btrfs_util_create_snapshot@@Base+0x36>

00033664 <btrfs_util_delete_subvolume_fd@@Base>:
   33664:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33668:	mov	r5, r1
   3366a:	ldr	r1, [pc, #384]	; (337ec <btrfs_util_delete_subvolume_fd@@Base+0x188>)
   3366c:	mov	r6, r2
   3366e:	ldr	r2, [pc, #384]	; (337f0 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   33670:	sub.w	sp, sp, #8192	; 0x2000
   33674:	add	r1, pc
   33676:	sub	sp, #36	; 0x24
   33678:	add.w	r3, sp, #8192	; 0x2000
   3367c:	add	r4, sp, #32
   3367e:	ldr	r2, [r1, r2]
   33680:	mov	r7, r0
   33682:	mov	r0, r4
   33684:	movs	r1, #0
   33686:	ldr	r2, [r2, #0]
   33688:	str	r2, [r3, #28]
   3368a:	mov.w	r2, #0
   3368e:	mov.w	r2, #4096	; 0x1000
   33692:	adds	r3, #28
   33694:	blx	8780 <memset@plt+0x4>
   33698:	bics.w	r2, r6, #1
   3369c:	beq.n	336ac <btrfs_util_delete_subvolume_fd@@Base+0x48>
   3369e:	blx	8740 <__errno_location@plt>
   336a2:	movs	r3, #22
   336a4:	mov.w	r8, #3
   336a8:	str	r3, [r0, #0]
   336aa:	b.n	336d8 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   336ac:	cbnz	r6, 336c6 <btrfs_util_delete_subvolume_fd@@Base+0x62>
   336ae:	mov	r0, r5
   336b0:	blx	8704 <strlen@plt>
   336b4:	movw	r3, #4087	; 0xff7
   336b8:	cmp	r0, r3
   336ba:	mov	r6, r0
   336bc:	bls.n	337ac <btrfs_util_delete_subvolume_fd@@Base+0x148>
   336be:	blx	8740 <__errno_location@plt>
   336c2:	movs	r3, #36	; 0x24
   336c4:	b.n	336a4 <btrfs_util_delete_subvolume_fd@@Base+0x40>
   336c6:	mov	r1, r5
   336c8:	mov	r0, r7
   336ca:	blx	84c0 <openat@plt>
   336ce:	adds	r3, r0, #1
   336d0:	mov	r6, r0
   336d2:	bne.n	336f2 <btrfs_util_delete_subvolume_fd@@Base+0x8e>
   336d4:	mov.w	r8, #7
   336d8:	ldr	r1, [pc, #280]	; (337f4 <btrfs_util_delete_subvolume_fd@@Base+0x190>)
   336da:	add.w	r3, sp, #8192	; 0x2000
   336de:	ldr	r2, [pc, #272]	; (337f0 <btrfs_util_delete_subvolume_fd@@Base+0x18c>)
   336e0:	adds	r3, #28
   336e2:	add	r1, pc
   336e4:	ldr	r2, [r1, r2]
   336e6:	ldr	r1, [r2, #0]
   336e8:	ldr	r2, [r3, #0]
   336ea:	eors	r1, r2
   336ec:	beq.n	337da <btrfs_util_delete_subvolume_fd@@Base+0x176>
   336ee:	blx	84cc <__stack_chk_fail@plt>
   336f2:	sub.w	r3, r4, #12
   336f6:	movs	r2, #0
   336f8:	strd	r3, r3, [sp, #4]
   336fc:	movs	r3, #1
   336fe:	str	r3, [sp, #0]
   33700:	movs	r3, #0
   33702:	bl	32ee4 <btrfs_util_create_subvolume_iterator_fd@@Base>
   33706:	mov	r8, r0
   33708:	cbnz	r0, 33742 <btrfs_util_delete_subvolume_fd@@Base+0xde>
   3370a:	add.w	sl, sp, #4128	; 0x1020
   3370e:	sub.w	r9, r4, #8
   33712:	add.w	sl, sl, #4
   33716:	ldr	r3, [sp, #8]
   33718:	movs	r2, #0
   3371a:	mov	r1, r9
   3371c:	ldr	r0, [r3, #0]
   3371e:	bl	3304c <btrfs_util_subvolume_iterator_next@@Base>
   33722:	mov	r8, r0
   33724:	blx	8740 <__errno_location@plt>
   33728:	mov	fp, r0
   3372a:	cmp.w	r8, #0
   3372e:	beq.n	3375e <btrfs_util_delete_subvolume_fd@@Base+0xfa>
   33730:	cmp.w	r8, #1
   33734:	it	eq
   33736:	moveq.w	r8, #0
   3373a:	ldr.w	r0, [r4, #-12]
   3373e:	bl	32ffc <btrfs_util_destroy_subvolume_iterator@@Base>
   33742:	blx	8740 <__errno_location@plt>
   33746:	ldr.w	sl, [r0]
   3374a:	mov	r9, r0
   3374c:	mov	r0, r6
   3374e:	blx	8960 <close@plt>
   33752:	str.w	sl, [r9]
   33756:	cmp.w	r8, #0
   3375a:	beq.n	336ae <btrfs_util_delete_subvolume_fd@@Base+0x4a>
   3375c:	b.n	336d8 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   3375e:	subs	r3, r4, #4
   33760:	mov	r2, sl
   33762:	str	r3, [sp, #0]
   33764:	mov	r0, r6
   33766:	ldr.w	r1, [r9]
   3376a:	movw	r3, #4088	; 0xff8
   3376e:	bl	31e40 <print_all_devices@@Base+0x160>
   33772:	mov	r8, r0
   33774:	ldr.w	r0, [r9]
   33778:	blx	83f0 <free@plt+0x4>
   3377c:	cmp.w	r8, #0
   33780:	bne.n	3373a <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   33782:	mov	r2, r8
   33784:	mov	r1, sl
   33786:	ldr.w	r0, [r4, #-4]
   3378a:	bl	33664 <btrfs_util_delete_subvolume_fd@@Base>
   3378e:	ldr.w	r3, [fp]
   33792:	str	r3, [sp, #12]
   33794:	mov	r8, r0
   33796:	ldr.w	r0, [r4, #-4]
   3379a:	blx	8960 <close@plt>
   3379e:	ldr	r3, [sp, #12]
   337a0:	str.w	r3, [fp]
   337a4:	cmp.w	r8, #0
   337a8:	beq.n	33716 <btrfs_util_delete_subvolume_fd@@Base+0xb2>
   337aa:	b.n	3373a <btrfs_util_delete_subvolume_fd@@Base+0xd6>
   337ac:	mov	r2, r0
   337ae:	movw	r3, #4088	; 0xff8
   337b2:	mov	r1, r5
   337b4:	add.w	r0, r4, #8
   337b8:	add	r6, r4
   337ba:	blx	855c <__memcpy_chk@plt>
   337be:	ldr	r1, [pc, #40]	; (337e8 <btrfs_util_delete_subvolume_fd@@Base+0x184>)
   337c0:	mov	r2, r4
   337c2:	mov	r0, r7
   337c4:	movs	r3, #0
   337c6:	strb	r3, [r6, #8]
   337c8:	blx	8578 <ioctl@plt>
   337cc:	adds	r0, #1
   337ce:	ite	ne
   337d0:	movne.w	r8, #0
   337d4:	moveq.w	r8, #18
   337d8:	b.n	336d8 <btrfs_util_delete_subvolume_fd@@Base+0x74>
   337da:	mov	r0, r8
   337dc:	add.w	sp, sp, #8192	; 0x2000
   337e0:	add	sp, #36	; 0x24
   337e2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   337e6:	nop
   337e8:	str	r4, [sp, #60]	; 0x3c
   337ea:	str	r0, [r0, r0]
   337ec:	asrs	r4, r2, #28
   337ee:	movs	r3, r0
   337f0:	lsls	r4, r4, #8
   337f2:	movs	r0, r0
   337f4:	asrs	r6, r4, #26
   337f6:	movs	r3, r0

000337f8 <btrfs_util_delete_subvolume@@Base>:
   337f8:	push	{r4, r5, r6, r7, lr}
   337fa:	mov	r5, r1
   337fc:	ldr	r1, [pc, #116]	; (33874 <btrfs_util_delete_subvolume@@Base+0x7c>)
   337fe:	sub.w	sp, sp, #4096	; 0x1000
   33802:	ldr	r2, [pc, #116]	; (33878 <btrfs_util_delete_subvolume@@Base+0x80>)
   33804:	sub	sp, #12
   33806:	add	r1, pc
   33808:	add.w	r3, sp, #4096	; 0x1000
   3380c:	add	r7, sp, #12
   3380e:	adds	r3, #4
   33810:	ldr	r2, [r1, r2]
   33812:	add	r6, sp, #8
   33814:	mov	r1, r0
   33816:	mvn.w	r0, #99	; 0x63
   3381a:	ldr	r2, [r2, #0]
   3381c:	str	r2, [r3, #0]
   3381e:	mov.w	r2, #0
   33822:	movw	r3, #4088	; 0xff8
   33826:	mov	r2, r7
   33828:	str	r6, [sp, #0]
   3382a:	bl	31e40 <print_all_devices@@Base+0x160>
   3382e:	mov	r4, r0
   33830:	cbnz	r0, 3384e <btrfs_util_delete_subvolume@@Base+0x56>
   33832:	mov	r2, r5
   33834:	mov	r1, r7
   33836:	ldr	r0, [r6, #0]
   33838:	bl	33664 <btrfs_util_delete_subvolume_fd@@Base>
   3383c:	mov	r4, r0
   3383e:	blx	8740 <__errno_location@plt>
   33842:	ldr	r7, [r0, #0]
   33844:	mov	r5, r0
   33846:	ldr	r0, [r6, #0]
   33848:	blx	8960 <close@plt>
   3384c:	str	r7, [r5, #0]
   3384e:	ldr	r1, [pc, #44]	; (3387c <btrfs_util_delete_subvolume@@Base+0x84>)
   33850:	add.w	r3, sp, #4096	; 0x1000
   33854:	ldr	r2, [pc, #32]	; (33878 <btrfs_util_delete_subvolume@@Base+0x80>)
   33856:	adds	r3, #4
   33858:	add	r1, pc
   3385a:	ldr	r2, [r1, r2]
   3385c:	ldr	r1, [r2, #0]
   3385e:	ldr	r2, [r3, #0]
   33860:	eors	r1, r2
   33862:	beq.n	33868 <btrfs_util_delete_subvolume@@Base+0x70>
   33864:	blx	84cc <__stack_chk_fail@plt>
   33868:	mov	r0, r4
   3386a:	add.w	sp, sp, #4096	; 0x1000
   3386e:	add	sp, #12
   33870:	pop	{r4, r5, r6, r7, pc}
   33872:	nop
   33874:	asrs	r2, r0, #22
   33876:	movs	r3, r0
   33878:	lsls	r4, r4, #8
   3387a:	movs	r0, r0
   3387c:	asrs	r0, r6, #20
   3387e:	movs	r3, r0

00033880 <btrfs_util_subvolume_iterator_next_info@@Base>:
   33880:	push	{r4, r5, lr}
   33882:	mov	r5, r2
   33884:	ldr	r2, [pc, #72]	; (338d0 <btrfs_util_subvolume_iterator_next_info@@Base+0x50>)
   33886:	sub	sp, #28
   33888:	ldr	r3, [pc, #72]	; (338d4 <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   3388a:	mov	r4, r0
   3388c:	add	r2, pc
   3388e:	ldr	r3, [r2, r3]
   33890:	add	r2, sp, #8
   33892:	ldr	r3, [r3, #0]
   33894:	str	r3, [sp, #20]
   33896:	mov.w	r3, #0
   3389a:	bl	3304c <btrfs_util_subvolume_iterator_next@@Base>
   3389e:	cbnz	r0, 338b0 <btrfs_util_subvolume_iterator_next_info@@Base+0x30>
   338a0:	ldrb	r3, [r4, #0]
   338a2:	str	r5, [sp, #0]
   338a4:	cbz	r3, 338c4 <btrfs_util_subvolume_iterator_next_info@@Base+0x44>
   338a6:	ldrd	r2, r3, [sp, #8]
   338aa:	ldr	r0, [r4, #4]
   338ac:	bl	329b8 <btrfs_util_subvolume_info_fd@@Base>
   338b0:	ldr	r2, [pc, #36]	; (338d8 <btrfs_util_subvolume_iterator_next_info@@Base+0x58>)
   338b2:	ldr	r3, [pc, #32]	; (338d4 <btrfs_util_subvolume_iterator_next_info@@Base+0x54>)
   338b4:	add	r2, pc
   338b6:	ldr	r3, [r2, r3]
   338b8:	ldr	r2, [r3, #0]
   338ba:	ldr	r3, [sp, #20]
   338bc:	eors	r2, r3
   338be:	beq.n	338cc <btrfs_util_subvolume_iterator_next_info@@Base+0x4c>
   338c0:	blx	84cc <__stack_chk_fail@plt>
   338c4:	ldr	r0, [r4, #8]
   338c6:	movs	r2, #0
   338c8:	movs	r3, #0
   338ca:	b.n	338ac <btrfs_util_subvolume_iterator_next_info@@Base+0x2c>
   338cc:	add	sp, #28
   338ce:	pop	{r4, r5, pc}
   338d0:	asrs	r4, r7, #19
   338d2:	movs	r3, r0
   338d4:	lsls	r4, r4, #8
   338d6:	movs	r0, r0
   338d8:	asrs	r4, r2, #19
   338da:	movs	r3, r0

000338dc <btrfs_util_deleted_subvolumes_fd@@Base>:
   338dc:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   338e0:	mov	r6, r1
   338e2:	ldr	r1, [pc, #320]	; (33a24 <btrfs_util_deleted_subvolumes_fd@@Base+0x148>)
   338e4:	mov	r7, r2
   338e6:	ldr	r2, [pc, #320]	; (33a28 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   338e8:	sub.w	sp, sp, #4096	; 0x1000
   338ec:	add	r1, pc
   338ee:	sub	sp, #28
   338f0:	add	r5, sp, #16
   338f2:	add.w	r3, sp, #4096	; 0x1000
   338f6:	ldr	r2, [r1, r2]
   338f8:	add	r4, sp, #24
   338fa:	mov	fp, r0
   338fc:	mov	r0, r5
   338fe:	ldr	r2, [r2, #0]
   33900:	str	r2, [r3, #20]
   33902:	mov.w	r2, #0
   33906:	movs	r1, #0
   33908:	mov.w	r2, #4096	; 0x1000
   3390c:	adds	r3, #20
   3390e:	blx	8780 <memset@plt+0x4>
   33912:	movs	r2, #1
   33914:	movs	r3, #0
   33916:	strd	r2, r3, [r4, #-8]
   3391a:	movs	r4, #0
   3391c:	mvn.w	r2, #4
   33920:	mov	sl, r4
   33922:	mov	r9, r4
   33924:	mov.w	r3, #4294967295	; 0xffffffff
   33928:	str	r4, [r6, #0]
   3392a:	strd	r2, r3, [r5, #8]
   3392e:	strd	r2, r3, [r5, #16]
   33932:	mov.w	r3, #4294967295	; 0xffffffff
   33936:	mov.w	r2, #4294967295	; 0xffffffff
   3393a:	str	r4, [r7, #0]
   3393c:	strd	r2, r3, [r5, #32]
   33940:	strd	r2, r3, [r5, #48]	; 0x30
   33944:	movs	r3, #48	; 0x30
   33946:	strd	r3, r3, [r5, #56]	; 0x38
   3394a:	ldr	r3, [r5, #64]	; 0x40
   3394c:	cmp	r3, sl
   3394e:	bhi.n	3396e <btrfs_util_deleted_subvolumes_fd@@Base+0x92>
   33950:	ldr	r1, [pc, #204]	; (33a20 <btrfs_util_deleted_subvolumes_fd@@Base+0x144>)
   33952:	mov	r2, r5
   33954:	mov	r0, fp
   33956:	mov.w	r3, #4096	; 0x1000
   3395a:	str	r3, [r5, #64]	; 0x40
   3395c:	blx	8578 <ioctl@plt>
   33960:	adds	r0, #1
   33962:	beq.n	33a0a <btrfs_util_deleted_subvolumes_fd@@Base+0x12e>
   33964:	ldr	r3, [r5, #64]	; 0x40
   33966:	cmp	r3, #0
   33968:	beq.n	339f0 <btrfs_util_deleted_subvolumes_fd@@Base+0x114>
   3396a:	movs	r4, #0
   3396c:	mov	sl, r4
   3396e:	add.w	r8, sp, #120	; 0x78
   33972:	movs	r3, #0
   33974:	add	r8, r4
   33976:	str	r3, [sp, #0]
   33978:	mov	r0, fp
   3397a:	ldrd	r2, r3, [r8, #16]
   3397e:	bl	329b8 <btrfs_util_subvolume_info_fd@@Base>
   33982:	mov	r3, r0
   33984:	cbnz	r0, 339dc <btrfs_util_deleted_subvolumes_fd@@Base+0x100>
   33986:	ldr	r3, [r7, #0]
   33988:	cmp	r3, r9
   3398a:	bcc.n	339a6 <btrfs_util_deleted_subvolumes_fd@@Base+0xca>
   3398c:	cmp.w	r9, #0
   33990:	beq.n	339d6 <btrfs_util_deleted_subvolumes_fd@@Base+0xfa>
   33992:	mov.w	r9, r9, lsl #1
   33996:	ldr	r0, [r6, #0]
   33998:	movs	r2, #8
   3399a:	mov	r1, r9
   3399c:	bl	33a68 <btrfs_util_deleted_subvolumes@@Base+0x38>
   339a0:	cmp	r0, #0
   339a2:	beq.n	33a0e <btrfs_util_deleted_subvolumes_fd@@Base+0x132>
   339a4:	str	r0, [r6, #0]
   339a6:	ldr	r0, [r7, #0]
   339a8:	ldr	r1, [r6, #0]
   339aa:	adds	r3, r0, #1
   339ac:	str	r3, [r7, #0]
   339ae:	ldrd	r2, r3, [r8, #16]
   339b2:	add.w	r1, r1, r0, lsl #3
   339b6:	strd	r2, r3, [r1]
   339ba:	ldr.w	r3, [r8, #28]
   339be:	adds	r4, #32
   339c0:	add.w	sl, sl, #1
   339c4:	add	r4, r3
   339c6:	ldrd	r3, r2, [r8, #16]
   339ca:	adds	r3, #1
   339cc:	adc.w	r2, r2, #0
   339d0:	strd	r3, r2, [r5, #24]
   339d4:	b.n	3394a <btrfs_util_deleted_subvolumes_fd@@Base+0x6e>
   339d6:	mov.w	r9, #1
   339da:	b.n	33996 <btrfs_util_deleted_subvolumes_fd@@Base+0xba>
   339dc:	cmp	r0, #6
   339de:	beq.n	339ba <btrfs_util_deleted_subvolumes_fd@@Base+0xde>
   339e0:	ldr	r0, [r6, #0]
   339e2:	str	r3, [sp, #12]
   339e4:	blx	83f0 <free@plt+0x4>
   339e8:	ldr	r3, [sp, #12]
   339ea:	movs	r2, #0
   339ec:	str	r2, [r6, #0]
   339ee:	str	r2, [r7, #0]
   339f0:	ldr	r0, [pc, #56]	; (33a2c <btrfs_util_deleted_subvolumes_fd@@Base+0x150>)
   339f2:	add.w	r2, sp, #4096	; 0x1000
   339f6:	ldr	r1, [pc, #48]	; (33a28 <btrfs_util_deleted_subvolumes_fd@@Base+0x14c>)
   339f8:	adds	r2, #20
   339fa:	add	r0, pc
   339fc:	ldr	r1, [r0, r1]
   339fe:	ldr	r0, [r1, #0]
   33a00:	ldr	r1, [r2, #0]
   33a02:	eors	r0, r1
   33a04:	beq.n	33a12 <btrfs_util_deleted_subvolumes_fd@@Base+0x136>
   33a06:	blx	84cc <__stack_chk_fail@plt>
   33a0a:	movs	r3, #12
   33a0c:	b.n	339e0 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   33a0e:	movs	r3, #2
   33a10:	b.n	339e0 <btrfs_util_deleted_subvolumes_fd@@Base+0x104>
   33a12:	mov	r0, r3
   33a14:	add.w	sp, sp, #4096	; 0x1000
   33a18:	add	sp, #28
   33a1a:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33a1e:	nop
   33a20:	str	r4, [sp, #68]	; 0x44
   33a22:	beq.n	33a26 <btrfs_util_deleted_subvolumes_fd@@Base+0x14a>
   33a24:	asrs	r4, r3, #18
   33a26:	movs	r3, r0
   33a28:	lsls	r4, r4, #8
   33a2a:	movs	r0, r0
   33a2c:	asrs	r6, r1, #14
   33a2e:	movs	r3, r0

00033a30 <btrfs_util_deleted_subvolumes@@Base>:
   33a30:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   33a32:	mov	r4, r1
   33a34:	movs	r1, #0
   33a36:	str	r2, [sp, #4]
   33a38:	blx	86bc <open@plt>
   33a3c:	adds	r3, r0, #1
   33a3e:	mov	r6, r0
   33a40:	beq.n	33a62 <btrfs_util_deleted_subvolumes@@Base+0x32>
   33a42:	mov	r1, r4
   33a44:	ldr	r2, [sp, #4]
   33a46:	bl	338dc <btrfs_util_deleted_subvolumes_fd@@Base>
   33a4a:	mov	r4, r0
   33a4c:	blx	8740 <__errno_location@plt>
   33a50:	ldr	r7, [r0, #0]
   33a52:	mov	r5, r0
   33a54:	mov	r0, r6
   33a56:	blx	8960 <close@plt>
   33a5a:	str	r7, [r5, #0]
   33a5c:	mov	r0, r4
   33a5e:	add	sp, #12
   33a60:	pop	{r4, r5, r6, r7, pc}
   33a62:	movs	r4, #7
   33a64:	b.n	33a5c <btrfs_util_deleted_subvolumes@@Base+0x2c>
   33a66:	nop
   33a68:	push	{r3, lr}
   33a6a:	mul.w	r3, r2, r1
   33a6e:	cmp	r1, r3
   33a70:	bhi.n	33a80 <btrfs_util_deleted_subvolumes@@Base+0x50>
   33a72:	cmp	r2, r3
   33a74:	bhi.n	33a80 <btrfs_util_deleted_subvolumes@@Base+0x50>
   33a76:	mov	r1, r3
   33a78:	ldmia.w	sp!, {r3, lr}
   33a7c:	b.w	84e4 <realloc@plt>
   33a80:	blx	8740 <__errno_location@plt>
   33a84:	movs	r3, #12
   33a86:	str	r3, [r0, #0]
   33a88:	movs	r0, #0
   33a8a:	pop	{r3, pc}

00033a8c <hash_crc32c@@Base>:
   33a8c:	push	{r4, lr}
   33a8e:	mov	r4, r2
   33a90:	mov	r2, r1
   33a92:	mov	r1, r0
   33a94:	mov.w	r0, #4294967295	; 0xffffffff
   33a98:	bl	173fa <crc32c_le@@Base>
   33a9c:	mvns	r0, r0
   33a9e:	str	r0, [r4, #0]
   33aa0:	movs	r0, #0
   33aa2:	pop	{r4, pc}

00033aa4 <hash_xxhash@@Base>:
   33aa4:	push	{r0, r1, r2, r3, r4, lr}
   33aa6:	mov	r4, r2
   33aa8:	ldr	r2, [pc, #60]	; (33ae8 <hash_xxhash@@Base+0x44>)
   33aaa:	ldr	r3, [pc, #64]	; (33aec <hash_xxhash@@Base+0x48>)
   33aac:	add	r2, pc
   33aae:	ldr	r3, [r2, r3]
   33ab0:	movs	r2, #0
   33ab2:	ldr	r3, [r3, #0]
   33ab4:	str	r3, [sp, #12]
   33ab6:	mov.w	r3, #0
   33aba:	movs	r3, #0
   33abc:	bl	34460 <XXH64@@Base>
   33ac0:	ldr	r2, [pc, #44]	; (33af0 <hash_xxhash@@Base+0x4c>)
   33ac2:	mov	r3, sp
   33ac4:	add	r2, pc
   33ac6:	strd	r0, r1, [sp]
   33aca:	ldmia	r3!, {r0, r1}
   33acc:	ldr	r3, [pc, #28]	; (33aec <hash_xxhash@@Base+0x48>)
   33ace:	str	r0, [r4, #0]
   33ad0:	str	r1, [r4, #4]
   33ad2:	ldr	r3, [r2, r3]
   33ad4:	ldr	r2, [r3, #0]
   33ad6:	ldr	r3, [sp, #12]
   33ad8:	eors	r2, r3
   33ada:	beq.n	33ae0 <hash_xxhash@@Base+0x3c>
   33adc:	blx	84cc <__stack_chk_fail@plt>
   33ae0:	movs	r0, #0
   33ae2:	add	sp, #16
   33ae4:	pop	{r4, pc}
   33ae6:	nop
   33ae8:	asrs	r4, r3, #11
   33aea:	movs	r3, r0
   33aec:	lsls	r4, r4, #8
   33aee:	movs	r0, r0
   33af0:	asrs	r4, r0, #11
   33af2:	movs	r3, r0

00033af4 <hash_sha256@@Base>:
   33af4:	push	{r4, r5, r6, r7, lr}
   33af6:	mov	r5, r2
   33af8:	ldr	r2, [pc, #72]	; (33b44 <hash_sha256@@Base+0x50>)
   33afa:	sub	sp, #124	; 0x7c
   33afc:	ldr	r3, [pc, #72]	; (33b48 <hash_sha256@@Base+0x54>)
   33afe:	mov	r7, r1
   33b00:	add	r2, pc
   33b02:	mov	r4, sp
   33b04:	mov	r6, r0
   33b06:	mov	r0, r4
   33b08:	ldr	r3, [r2, r3]
   33b0a:	ldr	r3, [r3, #0]
   33b0c:	str	r3, [sp, #116]	; 0x74
   33b0e:	mov.w	r3, #0
   33b12:	bl	34d0e <SHA256Reset@@Base>
   33b16:	mov	r2, r7
   33b18:	mov	r1, r6
   33b1a:	mov	r0, r4
   33b1c:	bl	34d4c <SHA256Input@@Base>
   33b20:	mov	r1, r5
   33b22:	mov	r0, r4
   33b24:	bl	34e44 <SHA256Result@@Base>
   33b28:	ldr	r2, [pc, #32]	; (33b4c <hash_sha256@@Base+0x58>)
   33b2a:	ldr	r3, [pc, #28]	; (33b48 <hash_sha256@@Base+0x54>)
   33b2c:	add	r2, pc
   33b2e:	ldr	r3, [r2, r3]
   33b30:	ldr	r2, [r3, #0]
   33b32:	ldr	r3, [sp, #116]	; 0x74
   33b34:	eors	r2, r3
   33b36:	beq.n	33b3c <hash_sha256@@Base+0x48>
   33b38:	blx	84cc <__stack_chk_fail@plt>
   33b3c:	movs	r0, #0
   33b3e:	add	sp, #124	; 0x7c
   33b40:	pop	{r4, r5, r6, r7, pc}
   33b42:	nop
   33b44:	asrs	r0, r1, #10
   33b46:	movs	r3, r0
   33b48:	lsls	r4, r4, #8
   33b4a:	movs	r0, r0
   33b4c:	asrs	r4, r3, #9
   33b4e:	movs	r3, r0

00033b50 <hash_blake2b@@Base>:
   33b50:	push	{r4, r5, r6, r7, lr}
   33b52:	mov	r5, r2
   33b54:	ldr	r2, [pc, #76]	; (33ba4 <hash_blake2b@@Base+0x54>)
   33b56:	sub	sp, #252	; 0xfc
   33b58:	ldr	r3, [pc, #76]	; (33ba8 <hash_blake2b@@Base+0x58>)
   33b5a:	mov	r6, r0
   33b5c:	add	r2, pc
   33b5e:	mov	r4, sp
   33b60:	mov	r7, r1
   33b62:	mov	r0, r4
   33b64:	ldr	r3, [r2, r3]
   33b66:	movs	r1, #32
   33b68:	ldr	r3, [r3, #0]
   33b6a:	str	r3, [sp, #244]	; 0xf4
   33b6c:	mov.w	r3, #0
   33b70:	bl	388fc <blake2b_init@@Base>
   33b74:	mov	r2, r7
   33b76:	mov	r1, r6
   33b78:	mov	r0, r4
   33b7a:	bl	38988 <blake2b_update@@Base>
   33b7e:	movs	r2, #32
   33b80:	mov	r1, r5
   33b82:	mov	r0, r4
   33b84:	bl	38b38 <blake2b_final@@Base>
   33b88:	ldr	r2, [pc, #32]	; (33bac <hash_blake2b@@Base+0x5c>)
   33b8a:	ldr	r3, [pc, #28]	; (33ba8 <hash_blake2b@@Base+0x58>)
   33b8c:	add	r2, pc
   33b8e:	ldr	r3, [r2, r3]
   33b90:	ldr	r2, [r3, #0]
   33b92:	ldr	r3, [sp, #244]	; 0xf4
   33b94:	eors	r2, r3
   33b96:	beq.n	33b9c <hash_blake2b@@Base+0x4c>
   33b98:	blx	84cc <__stack_chk_fail@plt>
   33b9c:	movs	r0, #0
   33b9e:	add	sp, #252	; 0xfc
   33ba0:	pop	{r4, r5, r6, r7, pc}
   33ba2:	nop
   33ba4:	asrs	r4, r5, #8
   33ba6:	movs	r3, r0
   33ba8:	lsls	r4, r4, #8
   33baa:	movs	r0, r0
   33bac:	asrs	r4, r7, #7
   33bae:	movs	r3, r0
   33bb0:	push	{r4, r5, r6, r7, lr}
   33bb2:	and.w	r2, r2, #15
   33bb6:	ldr	r6, [pc, #96]	; (33c18 <hash_blake2b@@Base+0xc8>)
   33bb8:	adds	r5, r1, r2
   33bba:	ldr	r7, [pc, #96]	; (33c1c <hash_blake2b@@Base+0xcc>)
   33bbc:	mov	r4, r2
   33bbe:	cmp	r4, #3
   33bc0:	sub.w	r3, r5, r4
   33bc4:	bhi.n	33bf6 <hash_blake2b@@Base+0xa6>
   33bc6:	and.w	r4, r2, #12
   33bca:	lsrs	r3, r2, #2
   33bcc:	add	r1, r4
   33bce:	mvn.w	r4, #3
   33bd2:	mla	r2, r4, r3, r2
   33bd6:	ldr	r5, [pc, #72]	; (33c20 <hash_blake2b@@Base+0xd0>)
   33bd8:	ldr	r4, [pc, #72]	; (33c24 <hash_blake2b@@Base+0xd4>)
   33bda:	add	r2, r1
   33bdc:	cmp	r1, r2
   33bde:	bne.n	33c06 <hash_blake2b@@Base+0xb6>
   33be0:	ldr	r3, [pc, #68]	; (33c28 <hash_blake2b@@Base+0xd8>)
   33be2:	eor.w	r0, r0, r0, lsr #15
   33be6:	muls	r0, r3
   33be8:	ldr	r3, [pc, #44]	; (33c18 <hash_blake2b@@Base+0xc8>)
   33bea:	eor.w	r0, r0, r0, lsr #13
   33bee:	muls	r0, r3
   33bf0:	eor.w	r0, r0, r0, lsr #16
   33bf4:	pop	{r4, r5, r6, r7, pc}
   33bf6:	ldr	r3, [r3, #0]
   33bf8:	subs	r4, #4
   33bfa:	mla	r0, r6, r3, r0
   33bfe:	mov.w	r0, r0, ror #15
   33c02:	muls	r0, r7
   33c04:	b.n	33bbe <hash_blake2b@@Base+0x6e>
   33c06:	ldrb.w	r3, [r1], #1
   33c0a:	mla	r0, r4, r3, r0
   33c0e:	mov.w	r0, r0, ror #21
   33c12:	muls	r0, r5
   33c14:	b.n	33bdc <hash_blake2b@@Base+0x8c>
   33c16:	nop
   33c18:	add	r6, sp, #244	; 0xf4
   33c1a:	stmia	r2!, {r1, r4, r5, r7}
   33c1c:			; <UNDEFINED> instruction: 0xeb2f27d4
   33c20:	ldrb	r1, [r6, #6]
   33c22:	ldr	r6, [sp, #220]	; 0xdc
   33c24:	str	r1, [r6, #120]	; 0x78
   33c26:	asrs	r6, r2, #25
   33c28:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   33c2a:	strh	r3, [r5, #46]	; 0x2e
   33c2c:	cmp	r1, #15
   33c2e:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33c32:	mov	r6, r1
   33c34:	bls.n	33cc8 <hash_blake2b@@Base+0x178>
   33c36:	ldr	r4, [pc, #152]	; (33cd0 <hash_blake2b@@Base+0x180>)
   33c38:	sub.w	lr, r1, #15
   33c3c:	ldr	r7, [pc, #148]	; (33cd4 <hash_blake2b@@Base+0x184>)
   33c3e:	add	lr, r0
   33c40:	ldr.w	ip, [pc, #152]	; 33cdc <hash_blake2b@@Base+0x18c>
   33c44:	add	r4, r2
   33c46:	ldr.w	r9, [pc, #152]	; 33ce0 <hash_blake2b@@Base+0x190>
   33c4a:	adds	r5, r2, r7
   33c4c:	add	ip, r2
   33c4e:	mov	r1, r0
   33c50:	ldr.w	r8, [r1]
   33c54:	adds	r1, #16
   33c56:	mla	r4, r7, r8, r4
   33c5a:	ldr.w	r8, [r1, #-12]
   33c5e:	mla	r5, r7, r8, r5
   33c62:	ldr.w	r8, [r1, #-8]
   33c66:	mov.w	r4, r4, ror #19
   33c6a:	mla	r2, r7, r8, r2
   33c6e:	ldr.w	r8, [r1, #-4]
   33c72:	mov.w	r5, r5, ror #19
   33c76:	cmp	lr, r1
   33c78:	mul.w	r4, r9, r4
   33c7c:	mla	ip, r7, r8, ip
   33c80:	mov.w	r2, r2, ror #19
   33c84:	mul.w	r5, r9, r5
   33c88:	mul.w	r2, r9, r2
   33c8c:	mov.w	ip, ip, ror #19
   33c90:	mul.w	ip, r9, ip
   33c94:	bhi.n	33c50 <hash_blake2b@@Base+0x100>
   33c96:	sub.w	r1, r6, #16
   33c9a:	mov.w	r5, r5, ror #25
   33c9e:	bic.w	r1, r1, #15
   33ca2:	adds	r7, r0, #1
   33ca4:	adds	r1, #16
   33ca6:	add.w	r5, r5, r4, ror #31
   33caa:	cmp	lr, r7
   33cac:	it	cc
   33cae:	movcc	r1, #16
   33cb0:	add.w	r4, r5, r2, ror #20
   33cb4:	add	r0, r1
   33cb6:	add.w	r4, r4, ip, ror #14
   33cba:	and.w	r2, r6, #15
   33cbe:	mov	r1, r0
   33cc0:	adds	r0, r4, r6
   33cc2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
   33cc6:	b.n	33bb0 <hash_blake2b@@Base+0x60>
   33cc8:	ldr	r4, [pc, #12]	; (33cd8 <hash_blake2b@@Base+0x188>)
   33cca:	add	r4, r2
   33ccc:	b.n	33cba <hash_blake2b@@Base+0x16a>
   33cce:	nop
   33cd0:	add	r0, r5
   33cd2:	movs	r4, #35	; 0x23
   33cd4:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   33cd6:	strh	r3, [r5, #46]	; 0x2e
   33cd8:	str	r1, [r6, #120]	; 0x78
   33cda:	asrs	r6, r2, #25
   33cdc:	strh	r7, [r1, #50]	; 0x32
   33cde:	str	r0, [r1, #28]
   33ce0:	ldrb	r1, [r6, #6]
   33ce2:	ldr	r6, [sp, #220]	; 0xdc
   33ce4:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33ce8:	and.w	r3, r3, #31
   33cec:	ldr.w	r8, [pc, #368]	; 33e60 <hash_blake2b@@Base+0x310>
   33cf0:	add.w	sl, r2, r3
   33cf4:	ldr.w	lr, [pc, #352]	; 33e58 <hash_blake2b@@Base+0x308>
   33cf8:	mov	ip, r3
   33cfa:	ldr.w	r9, [pc, #352]	; 33e5c <hash_blake2b@@Base+0x30c>
   33cfe:	ldr.w	fp, [pc, #376]	; 33e78 <hash_blake2b@@Base+0x328>
   33d02:	strd	r0, r1, [sp]
   33d06:	cmp.w	ip, #7
   33d0a:	sub.w	r1, sl, ip
   33d0e:	bhi.n	33dbc <hash_blake2b@@Base+0x26c>
   33d10:	and.w	r0, r3, #24
   33d14:	lsrs	r1, r3, #3
   33d16:	add	r2, r0
   33d18:	mvn.w	r0, #7
   33d1c:	mla	r3, r0, r1, r3
   33d20:	cmp	r3, #3
   33d22:	bls.n	33d6a <hash_blake2b@@Base+0x21a>
   33d24:	ldr.w	r6, [r2], #4
   33d28:	subs	r3, #4
   33d2a:	ldr	r0, [pc, #300]	; (33e58 <hash_blake2b@@Base+0x308>)
   33d2c:	ldr	r7, [pc, #300]	; (33e5c <hash_blake2b@@Base+0x30c>)
   33d2e:	ldr	r1, [sp, #0]
   33d30:	umull	r4, r5, r6, r0
   33d34:	eor.w	r0, r4, r1
   33d38:	ldr	r1, [sp, #4]
   33d3a:	mla	r5, r7, r6, r5
   33d3e:	ldr	r7, [pc, #288]	; (33e60 <hash_blake2b@@Base+0x310>)
   33d40:	eors	r1, r5
   33d42:	lsls	r6, r1, #23
   33d44:	orr.w	r6, r6, r0, lsr #9
   33d48:	lsls	r0, r0, #23
   33d4a:	orr.w	r0, r0, r1, lsr #9
   33d4e:	ldr	r1, [pc, #276]	; (33e64 <hash_blake2b@@Base+0x314>)
   33d50:	umull	r4, r5, r0, r7
   33d54:	muls	r1, r0
   33d56:	ldr	r0, [pc, #272]	; (33e68 <hash_blake2b@@Base+0x318>)
   33d58:	mla	r6, r7, r6, r1
   33d5c:	add	r5, r6
   33d5e:	ldr	r6, [pc, #268]	; (33e6c <hash_blake2b@@Base+0x31c>)
   33d60:	adds	r1, r4, r6
   33d62:	str	r1, [sp, #0]
   33d64:	adc.w	r1, r5, r0
   33d68:	str	r1, [sp, #4]
   33d6a:	ldr	r7, [pc, #260]	; (33e70 <hash_blake2b@@Base+0x320>)
   33d6c:	add	r3, r2
   33d6e:	ldr.w	ip, [pc, #268]	; 33e7c <hash_blake2b@@Base+0x32c>
   33d72:	ldr	r6, [pc, #228]	; (33e58 <hash_blake2b@@Base+0x308>)
   33d74:	ldr.w	lr, [pc, #228]	; 33e5c <hash_blake2b@@Base+0x30c>
   33d78:	cmp	r2, r3
   33d7a:	bne.n	33e1e <hash_blake2b@@Base+0x2ce>
   33d7c:	ldrd	r3, r2, [sp]
   33d80:	ldr	r1, [pc, #224]	; (33e64 <hash_blake2b@@Base+0x314>)
   33d82:	ldr	r0, [sp, #4]
   33d84:	eor.w	r2, r3, r2, lsr #1
   33d88:	ldr	r3, [pc, #212]	; (33e60 <hash_blake2b@@Base+0x310>)
   33d8a:	muls	r1, r2
   33d8c:	mla	r1, r3, r0, r1
   33d90:	umull	r2, r3, r2, r3
   33d94:	add	r3, r1
   33d96:	eor.w	r1, r3, r3, lsr #29
   33d9a:	lsrs	r0, r2, #29
   33d9c:	orr.w	r0, r0, r3, lsl #3
   33da0:	ldr	r3, [pc, #196]	; (33e68 <hash_blake2b@@Base+0x318>)
   33da2:	eors	r0, r2
   33da4:	ldr	r2, [pc, #196]	; (33e6c <hash_blake2b@@Base+0x31c>)
   33da6:	muls	r3, r0
   33da8:	umull	r4, r5, r0, r2
   33dac:	mla	r3, r2, r1, r3
   33db0:	adds	r1, r5, r3
   33db2:	eor.w	r0, r4, r1
   33db6:	add	sp, #12
   33db8:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33dbc:	ldr	r0, [r1, #0]
   33dbe:	sub.w	ip, ip, #8
   33dc2:	ldr	r6, [r1, #4]
   33dc4:	ldr	r1, [pc, #156]	; (33e64 <hash_blake2b@@Base+0x314>)
   33dc6:	muls	r1, r0
   33dc8:	mla	r6, r8, r6, r1
   33dcc:	umull	r0, r1, r0, r8
   33dd0:	add	r1, r6
   33dd2:	lsls	r7, r1, #31
   33dd4:	lsls	r6, r0, #31
   33dd6:	orr.w	r7, r7, r0, lsr #1
   33dda:	orr.w	r6, r6, r1, lsr #1
   33dde:	mul.w	r1, r9, r6
   33de2:	mla	r1, lr, r7, r1
   33de6:	umull	r6, r7, r6, lr
   33dea:	add	r7, r1
   33dec:	ldr	r1, [sp, #0]
   33dee:	eor.w	r0, r6, r1
   33df2:	ldr	r1, [sp, #4]
   33df4:	eors	r1, r7
   33df6:	lsls	r6, r1, #27
   33df8:	orr.w	r6, r6, r0, lsr #5
   33dfc:	lsls	r0, r0, #27
   33dfe:	orr.w	r0, r0, r1, lsr #5
   33e02:	mul.w	r1, r9, r0
   33e06:	mla	r6, lr, r6, r1
   33e0a:	umull	r0, r1, r0, lr
   33e0e:	adds.w	r4, r0, fp
   33e12:	str	r4, [sp, #0]
   33e14:	ldr	r4, [pc, #92]	; (33e74 <hash_blake2b@@Base+0x324>)
   33e16:	add	r1, r6
   33e18:	adcs	r1, r4
   33e1a:	str	r1, [sp, #4]
   33e1c:	b.n	33d06 <hash_blake2b@@Base+0x1b6>
   33e1e:	ldrb.w	r8, [r2], #1
   33e22:	ldr	r5, [sp, #4]
   33e24:	ldr	r4, [sp, #0]
   33e26:	umull	r0, r1, r8, r7
   33e2a:	eors	r4, r0
   33e2c:	mla	r1, ip, r8, r1
   33e30:	eors	r5, r1
   33e32:	lsls	r1, r5, #11
   33e34:	orr.w	r1, r1, r4, lsr #21
   33e38:	lsls	r4, r4, #11
   33e3a:	orr.w	r4, r4, r5, lsr #21
   33e3e:	mul.w	r0, lr, r4
   33e42:	umull	r4, r5, r4, r6
   33e46:	mla	r1, r6, r1, r0
   33e4a:	strd	r4, r5, [sp]
   33e4e:	ldr	r0, [sp, #4]
   33e50:	add	r0, r1
   33e52:	str	r0, [sp, #4]
   33e54:	b.n	33d78 <hash_blake2b@@Base+0x228>
   33e56:	nop
   33e58:	ldmia	r2, {r0, r1, r2, r7}
   33e5a:	strh	r3, [r5, #46]	; 0x2e
   33e5c:	ldrb	r1, [r6, #6]
   33e5e:	ldr	r6, [sp, #220]	; 0xdc
   33e60:	adc.w	r7, pc, r4, lsr #11
   33e64:	add	r6, sp, #244	; 0xf4
   33e66:	stmia	r2!, {r1, r4, r5, r7}
   33e68:	str	r1, [r6, #120]	; 0x78
   33e6a:	asrs	r6, r2, #25
   33e6c:	ldrb	r1, [r7, #7]
   33e6e:	ldr	r6, [sp, #220]	; 0xdc
   33e70:	str	r5, [r0, #124]	; 0x7c
   33e72:	asrs	r6, r2, #25
   33e74:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   33e76:	strh	r3, [r5, #46]	; 0x2e
   33e78:	add	r6, sp, #396	; 0x18c
   33e7a:	stmia	r2!, {r1, r4, r5, r7}
   33e7c:			; <UNDEFINED> instruction: 0xeb2f27d4
   33e80:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33e84:	sub	sp, #84	; 0x54
   33e86:	mov	fp, r3
   33e88:	cmp	r1, #31
   33e8a:	ldr	r3, [sp, #120]	; 0x78
   33e8c:	mov	sl, r2
   33e8e:	str	r0, [sp, #40]	; 0x28
   33e90:	str	r1, [sp, #52]	; 0x34
   33e92:	str	r3, [sp, #76]	; 0x4c
   33e94:	bls.w	34204 <hash_blake2b@@Base+0x6b4>
   33e98:	sub.w	r3, r1, #32
   33e9c:	str	r3, [sp, #56]	; 0x38
   33e9e:	ldr	r3, [pc, #820]	; (341d4 <hash_blake2b@@Base+0x684>)
   33ea0:	mov	r1, r0
   33ea2:	ldr	r2, [sp, #56]	; 0x38
   33ea4:	adds.w	r3, sl, r3
   33ea8:	str	r3, [sp, #0]
   33eaa:	ldr	r3, [pc, #812]	; (341d8 <hash_blake2b@@Base+0x688>)
   33eac:	add.w	r9, r0, r2
   33eb0:	ldr	r5, [pc, #808]	; (341dc <hash_blake2b@@Base+0x68c>)
   33eb2:	adc.w	r3, fp, r3
   33eb6:	str	r3, [sp, #4]
   33eb8:	ldr	r3, [pc, #800]	; (341dc <hash_blake2b@@Base+0x68c>)
   33eba:	ldr.w	ip, [pc, #804]	; 341e0 <hash_blake2b@@Base+0x690>
   33ebe:	adds.w	r3, sl, r3
   33ec2:	str	r3, [sp, #8]
   33ec4:	ldr	r3, [pc, #792]	; (341e0 <hash_blake2b@@Base+0x690>)
   33ec6:	ldr	r2, [pc, #796]	; (341e4 <hash_blake2b@@Base+0x694>)
   33ec8:	adc.w	r3, fp, r3
   33ecc:	str	r3, [sp, #12]
   33ece:	ldr	r3, [pc, #792]	; (341e8 <hash_blake2b@@Base+0x698>)
   33ed0:	adds.w	r3, sl, r3
   33ed4:	str	r3, [sp, #16]
   33ed6:	ldr	r3, [pc, #788]	; (341ec <hash_blake2b@@Base+0x69c>)
   33ed8:	adc.w	r3, fp, r3
   33edc:	str	r3, [sp, #20]
   33ede:	ldr	r3, [pc, #784]	; (341f0 <hash_blake2b@@Base+0x6a0>)
   33ee0:	ldr	r6, [r1, #0]
   33ee2:	adds	r1, #32
   33ee4:	ldr.w	r4, [r1, #-28]
   33ee8:	ldr.w	lr, [r1, #-12]
   33eec:	mul.w	r0, ip, r6
   33ef0:	mla	r0, r5, r4, r0
   33ef4:	ldr	r4, [sp, #4]
   33ef6:	umull	r6, r7, r6, r5
   33efa:	add	r7, r0
   33efc:	ldr	r0, [sp, #0]
   33efe:	adds	r0, r6, r0
   33f00:	adc.w	r4, r7, r4
   33f04:	mov.w	r8, r4, lsl #31
   33f08:	orr.w	r6, r8, r0, lsr #1
   33f0c:	lsls	r0, r0, #31
   33f0e:	orr.w	r0, r0, r4, lsr #1
   33f12:	str	r0, [sp, #48]	; 0x30
   33f14:	str	r6, [sp, #72]	; 0x48
   33f16:	mul.w	r4, r2, r0
   33f1a:	ldr	r0, [sp, #48]	; 0x30
   33f1c:	mla	r4, r3, r6, r4
   33f20:	umull	r6, r7, r0, r3
   33f24:	strd	r6, r7, [sp]
   33f28:	ldr.w	r6, [r1, #-24]
   33f2c:	ldr.w	r7, [r1, #-20]
   33f30:	ldr	r0, [sp, #4]
   33f32:	adds	r0, r4, r0
   33f34:	str	r0, [sp, #4]
   33f36:	mul.w	r4, ip, r6
   33f3a:	ldr	r0, [sp, #8]
   33f3c:	mla	r4, r5, r7, r4
   33f40:	umull	r6, r7, r6, r5
   33f44:	add	r7, r4
   33f46:	adds	r4, r6, r0
   33f48:	ldr	r0, [sp, #12]
   33f4a:	adc.w	r0, r7, r0
   33f4e:	lsls	r7, r0, #31
   33f50:	mov	r6, r0
   33f52:	orr.w	r0, r7, r4, lsr #1
   33f56:	lsls	r4, r4, #31
   33f58:	orr.w	r4, r4, r6, lsr #1
   33f5c:	str	r0, [sp, #68]	; 0x44
   33f5e:	umull	r7, r8, r4, r3
   33f62:	mul.w	r6, r2, r4
   33f66:	mla	r6, r3, r0, r6
   33f6a:	strd	r7, r8, [sp, #8]
   33f6e:	ldr	r0, [sp, #12]
   33f70:	adds	r0, r6, r0
   33f72:	ldr.w	r6, [r1, #-16]
   33f76:	str	r0, [sp, #12]
   33f78:	mul.w	r7, ip, r6
   33f7c:	mla	lr, r5, lr, r7
   33f80:	umull	r7, r8, r6, r5
   33f84:	adds.w	r6, r7, sl
   33f88:	add	r8, lr
   33f8a:	adc.w	sl, r8, fp
   33f8e:	ldr.w	lr, [r1, #-4]
   33f92:	mov.w	r7, sl, lsl #31
   33f96:	orr.w	r0, r7, r6, lsr #1
   33f9a:	lsls	r6, r6, #31
   33f9c:	str	r0, [sp, #60]	; 0x3c
   33f9e:	orr.w	r0, r6, sl, lsr #1
   33fa2:	str	r0, [sp, #44]	; 0x2c
   33fa4:	mul.w	r6, r2, r0
   33fa8:	ldr	r0, [sp, #60]	; 0x3c
   33faa:	mla	r6, r3, r0, r6
   33fae:	ldr	r0, [sp, #44]	; 0x2c
   33fb0:	umull	sl, fp, r0, r3
   33fb4:	add	fp, r6
   33fb6:	ldr.w	r6, [r1, #-8]
   33fba:	mul.w	r7, ip, r6
   33fbe:	mla	lr, r5, lr, r7
   33fc2:	umull	r6, r7, r6, r5
   33fc6:	strd	r6, r7, [sp, #32]
   33fca:	ldr	r0, [sp, #36]	; 0x24
   33fcc:	ldr	r6, [sp, #32]
   33fce:	add	r0, lr
   33fd0:	str	r0, [sp, #36]	; 0x24
   33fd2:	ldr	r0, [sp, #16]
   33fd4:	ldr	r7, [sp, #20]
   33fd6:	adds	r6, r6, r0
   33fd8:	ldr	r0, [sp, #36]	; 0x24
   33fda:	adc.w	r7, r0, r7
   33fde:	cmp	r9, r1
   33fe0:	mov.w	lr, r7, lsl #31
   33fe4:	orr.w	r0, lr, r6, lsr #1
   33fe8:	mov.w	r6, r6, lsl #31
   33fec:	str	r0, [sp, #64]	; 0x40
   33fee:	orr.w	r0, r6, r7, lsr #1
   33ff2:	str	r0, [sp, #32]
   33ff4:	mul.w	r6, r2, r0
   33ff8:	ldr	r0, [sp, #64]	; 0x40
   33ffa:	mla	r6, r3, r0, r6
   33ffe:	ldr	r0, [sp, #32]
   34000:	umull	r7, r8, r0, r3
   34004:	strd	r7, r8, [sp, #16]
   34008:	ldr	r0, [sp, #20]
   3400a:	add	r0, r6
   3400c:	str	r0, [sp, #20]
   3400e:	bcs.w	33ee0 <hash_blake2b@@Base+0x390>
   34012:	ldr	r1, [sp, #56]	; 0x38
   34014:	add.w	r5, r9, #1
   34018:	ldr	r0, [sp, #40]	; 0x28
   3401a:	bic.w	r1, r1, #31
   3401e:	ldr.w	r9, [pc, #468]	; 341f4 <hash_blake2b@@Base+0x6a4>
   34022:	adds	r6, r0, #1
   34024:	adds	r1, #32
   34026:	cmp	r5, r6
   34028:	it	cc
   3402a:	movcc	r1, #32
   3402c:	ldr.w	lr, [pc, #456]	; 341f8 <hash_blake2b@@Base+0x6a8>
   34030:	adds	r1, r0, r1
   34032:	str	r1, [sp, #40]	; 0x28
   34034:	ldr	r1, [sp, #48]	; 0x30
   34036:	ldr	r0, [sp, #72]	; 0x48
   34038:	mul.w	r1, r9, r1
   3403c:	mla	r8, lr, r0, r1
   34040:	ldr	r1, [sp, #48]	; 0x30
   34042:	umull	r6, r7, r1, lr
   34046:	add	r7, r8
   34048:	lsls	r5, r7, #31
   3404a:	orr.w	r1, r5, r6, lsr #1
   3404e:	str	r1, [sp, #48]	; 0x30
   34050:	ldr	r1, [sp, #4]
   34052:	lsls	r0, r6, #31
   34054:	ldr	r6, [sp, #0]
   34056:	orr.w	r0, r0, r7, lsr #1
   3405a:	ldr	r5, [sp, #12]
   3405c:	lsls	r1, r1, #1
   3405e:	orr.w	r7, r1, r6, lsr #31
   34062:	ldr	r1, [sp, #4]
   34064:	lsls	r6, r6, #1
   34066:	orr.w	r6, r6, r1, lsr #31
   3406a:	ldr	r1, [sp, #12]
   3406c:	mov.w	r8, r1, lsl #7
   34070:	ldr	r1, [sp, #8]
   34072:	orr.w	ip, r8, r1, lsr #25
   34076:	lsls	r1, r1, #7
   34078:	orr.w	r1, r1, r5, lsr #25
   3407c:	ldr	r5, [sp, #20]
   3407e:	adds	r1, r6, r1
   34080:	mov.w	r6, sl, lsl #12
   34084:	orr.w	r6, r6, fp, lsr #20
   34088:	adc.w	r7, r7, ip
   3408c:	adds	r6, r1, r6
   3408e:	ldr	r1, [sp, #20]
   34090:	mov.w	ip, fp, lsl #12
   34094:	orr.w	r8, ip, sl, lsr #20
   34098:	adc.w	r7, r7, r8
   3409c:	mov.w	r8, r1, lsl #18
   340a0:	ldr	r1, [sp, #16]
   340a2:	orr.w	ip, r8, r1, lsr #14
   340a6:	lsls	r1, r1, #18
   340a8:	orr.w	r1, r1, r5, lsr #14
   340ac:	ldr	r5, [sp, #48]	; 0x30
   340ae:	adds	r6, r6, r1
   340b0:	ldr.w	r8, [pc, #328]	; 341fc <hash_blake2b@@Base+0x6ac>
   340b4:	mul.w	r1, r2, r0
   340b8:	adc.w	r7, r7, ip
   340bc:	mla	r5, r3, r5, r1
   340c0:	umull	r0, r1, r0, r3
   340c4:	add	r1, r5
   340c6:	eors	r6, r0
   340c8:	ldr	r0, [sp, #68]	; 0x44
   340ca:	eors	r7, r1
   340cc:	mul.w	r1, r9, r4
   340d0:	umull	r4, r5, r4, lr
   340d4:	mla	r1, lr, r0, r1
   340d8:	mul.w	ip, r2, r6
   340dc:	add	r5, r1
   340de:	lsls	r0, r4, #31
   340e0:	mla	ip, r3, r7, ip
   340e4:	orr.w	r0, r0, r5, lsr #1
   340e8:	lsls	r1, r5, #31
   340ea:	umull	r6, r7, r6, r3
   340ee:	orr.w	r1, r1, r4, lsr #1
   340f2:	mul.w	r4, r2, r0
   340f6:	add	r7, ip
   340f8:	mla	r4, r3, r1, r4
   340fc:	ldr.w	ip, [pc, #256]	; 34200 <hash_blake2b@@Base+0x6b0>
   34100:	umull	r0, r1, r0, r3
   34104:	add	r1, r4
   34106:	adds.w	r4, r6, ip
   3410a:	adc.w	r5, r7, r8
   3410e:	eors	r4, r0
   34110:	eors	r1, r5
   34112:	mul.w	r0, r2, r4
   34116:	mla	r1, r3, r1, r0
   3411a:	umull	r4, r5, r4, r3
   3411e:	add	r5, r1
   34120:	ldr	r1, [sp, #44]	; 0x2c
   34122:	mul.w	r7, r9, r1
   34126:	ldr	r1, [sp, #60]	; 0x3c
   34128:	mla	r7, lr, r1, r7
   3412c:	ldr	r1, [sp, #44]	; 0x2c
   3412e:	umull	r0, r1, r1, lr
   34132:	add	r1, r7
   34134:	lsls	r7, r1, #31
   34136:	lsls	r6, r0, #31
   34138:	orr.w	r7, r7, r0, lsr #1
   3413c:	orr.w	r6, r6, r1, lsr #1
   34140:	adds.w	r0, r4, ip
   34144:	adc.w	r4, r5, r8
   34148:	mul.w	r1, r2, r6
   3414c:	mla	r1, r3, r7, r1
   34150:	umull	r6, r7, r6, r3
   34154:	eors	r0, r6
   34156:	add	r7, r1
   34158:	eors	r4, r7
   3415a:	mul.w	r1, r2, r0
   3415e:	mla	r4, r3, r4, r1
   34162:	ldr	r1, [sp, #32]
   34164:	umull	sl, fp, r0, r3
   34168:	mul.w	r9, r9, r1
   3416c:	ldr	r1, [sp, #64]	; 0x40
   3416e:	add	fp, r4
   34170:	mla	r9, lr, r1, r9
   34174:	ldr	r1, [sp, #32]
   34176:	umull	r0, r1, r1, lr
   3417a:	add	r1, r9
   3417c:	lsls	r6, r1, #31
   3417e:	lsls	r4, r0, #31
   34180:	orr.w	r6, r6, r0, lsr #1
   34184:	orr.w	r4, r4, r1, lsr #1
   34188:	adds.w	r0, sl, ip
   3418c:	adc.w	r1, fp, r8
   34190:	mul.w	r5, r2, r4
   34194:	mla	r6, r3, r6, r5
   34198:	umull	r4, r5, r4, r3
   3419c:	eors	r0, r4
   3419e:	add	r5, r6
   341a0:	eors	r1, r5
   341a2:	muls	r2, r0
   341a4:	mla	r2, r3, r1, r2
   341a8:	umull	r0, r1, r0, r3
   341ac:	adds.w	r3, r0, ip
   341b0:	add	r1, r2
   341b2:	str	r3, [sp, #24]
   341b4:	adc.w	r3, r1, r8
   341b8:	str	r3, [sp, #28]
   341ba:	ldr	r3, [sp, #76]	; 0x4c
   341bc:	ldrd	r0, r1, [sp, #24]
   341c0:	ldr	r2, [sp, #40]	; 0x28
   341c2:	str	r3, [sp, #120]	; 0x78
   341c4:	ldr	r3, [sp, #52]	; 0x34
   341c6:	adds	r0, r0, r3
   341c8:	adc.w	r1, r1, #0
   341cc:	add	sp, #84	; 0x54
   341ce:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   341d2:	b.n	33ce4 <hash_blake2b@@Base+0x194>
   341d4:	push	{r1, r2, r4, r6, r7, lr}
   341d6:	add	r5, sp, #768	; 0x300
   341d8:	movs	r7, #238	; 0xee
   341da:	str	r2, [r5, #12]
   341dc:	adc.w	r7, pc, r4, lsr #11
   341e0:	add	r6, sp, #244	; 0xf4
   341e2:	stmia	r2!, {r1, r4, r5, r7}
   341e4:	ldrb	r1, [r6, #6]
   341e6:	ldr	r6, [sp, #220]	; 0xdc
   341e8:	adds	r5, #121	; 0x79
   341ea:	ldrb	r4, [r2, #8]
   341ec:	strh	r6, [r1, #50]	; 0x32
   341ee:	str	r0, [r1, #28]
   341f0:	ldmia	r2, {r0, r1, r2, r7}
   341f2:	strh	r3, [r5, #46]	; 0x2e
   341f4:	ldrh	r1, [r0, r4]
   341f6:	udf	#243	; 0xf3
   341f8:	ldr	r1, [r5, #72]	; 0x48
   341fa:	lsrs	r1, r7, #29
   341fc:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   341fe:	strh	r3, [r5, #46]	; 0x2e
   34200:	add	r6, sp, #396	; 0x18c
   34202:	stmia	r2!, {r1, r4, r5, r7}
   34204:	ldr	r3, [pc, #12]	; (34214 <hash_blake2b@@Base+0x6c4>)
   34206:	adds	r3, r2, r3
   34208:	str	r3, [sp, #24]
   3420a:	ldr	r3, [pc, #12]	; (34218 <hash_blake2b@@Base+0x6c8>)
   3420c:	adc.w	r3, fp, r3
   34210:	b.n	341b8 <hash_blake2b@@Base+0x668>
   34212:	nop
   34214:	str	r5, [r0, #124]	; 0x7c
   34216:	asrs	r6, r2, #25
   34218:			; <UNDEFINED> instruction: 0xeb2f27d4
   3421c:	b.w	8438 <memcpy@plt>

00034220 <XXH_versionNumber@@Base>:
   34220:	movw	r0, #701	; 0x2bd
   34224:	bx	lr

00034226 <XXH32@@Base>:
   34226:	ands.w	r3, r0, #3
   3422a:	it	ne
   3422c:	movne	r3, #1
   3422e:	b.n	33c2c <hash_blake2b@@Base+0xdc>

00034230 <XXH32_createState@@Base>:
   34230:	movs	r0, #48	; 0x30
   34232:	b.w	8630 <malloc@plt>

00034236 <XXH32_freeState@@Base>:
   34236:	push	{r3, lr}
   34238:	blx	83f0 <free@plt+0x4>
   3423c:	movs	r0, #0
   3423e:	pop	{r3, pc}

00034240 <XXH32_copyState@@Base>:
   34240:	add.w	r3, r1, #48	; 0x30
   34244:	ldr.w	r2, [r1], #4
   34248:	cmp	r1, r3
   3424a:	str.w	r2, [r0], #4
   3424e:	bne.n	34244 <XXH32_copyState@@Base+0x4>
   34250:	bx	lr

00034252 <XXH32_reset@@Base>:
   34252:	ldr	r2, [pc, #124]	; (342d0 <XXH32_reset@@Base+0x7e>)
   34254:	ldr	r3, [pc, #124]	; (342d4 <XXH32_reset@@Base+0x82>)
   34256:	add	r2, pc
   34258:	push	{r4, r5, lr}
   3425a:	sub	sp, #60	; 0x3c
   3425c:	ldr	r3, [r2, r3]
   3425e:	mov	r5, r1
   34260:	mov	r4, r0
   34262:	movs	r2, #48	; 0x30
   34264:	ldr	r3, [r3, #0]
   34266:	str	r3, [sp, #52]	; 0x34
   34268:	mov.w	r3, #0
   3426c:	add	r3, sp, #4
   3426e:	movs	r1, #0
   34270:	mov	r0, r3
   34272:	blx	8780 <memset@plt+0x4>
   34276:	ldr	r2, [pc, #76]	; (342c4 <XXH32_reset@@Base+0x72>)
   34278:	mov	r3, r4
   3427a:	add	r2, r5
   3427c:	str	r2, [sp, #12]
   3427e:	ldr	r2, [pc, #72]	; (342c8 <XXH32_reset@@Base+0x76>)
   34280:	add	r2, r5
   34282:	strd	r2, r5, [sp, #16]
   34286:	ldr	r2, [pc, #68]	; (342cc <XXH32_reset@@Base+0x7a>)
   34288:	add	r2, r5
   3428a:	add	r5, sp, #44	; 0x2c
   3428c:	str	r2, [sp, #24]
   3428e:	mov	r2, r0
   34290:	mov	r4, r2
   34292:	adds	r3, #8
   34294:	ldmia	r4!, {r0, r1}
   34296:	cmp	r4, r5
   34298:	str.w	r0, [r3, #-8]
   3429c:	mov	r2, r4
   3429e:	str.w	r1, [r3, #-4]
   342a2:	bne.n	34290 <XXH32_reset@@Base+0x3e>
   342a4:	ldr	r0, [r4, #0]
   342a6:	ldr	r2, [pc, #48]	; (342d8 <XXH32_reset@@Base+0x86>)
   342a8:	str	r0, [r3, #0]
   342aa:	add	r2, pc
   342ac:	ldr	r3, [pc, #36]	; (342d4 <XXH32_reset@@Base+0x82>)
   342ae:	ldr	r3, [r2, r3]
   342b0:	ldr	r2, [r3, #0]
   342b2:	ldr	r3, [sp, #52]	; 0x34
   342b4:	eors	r2, r3
   342b6:	beq.n	342bc <XXH32_reset@@Base+0x6a>
   342b8:	blx	84cc <__stack_chk_fail@plt>
   342bc:	movs	r0, #0
   342be:	add	sp, #60	; 0x3c
   342c0:	pop	{r4, r5, pc}
   342c2:	nop
   342c4:	add	r0, r5
   342c6:	movs	r4, #35	; 0x23
   342c8:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   342ca:	strh	r3, [r5, #46]	; 0x2e
   342cc:	strh	r7, [r1, #50]	; 0x32
   342ce:	str	r0, [r1, #28]
   342d0:	lsrs	r2, r6, #12
   342d2:	movs	r3, r0
   342d4:	lsls	r4, r4, #8
   342d6:	movs	r0, r0
   342d8:	lsrs	r6, r3, #11
   342da:	movs	r3, r0

000342dc <XXH32_update@@Base>:
   342dc:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   342e0:	mov	r4, r0
   342e2:	mov	r7, r2
   342e4:	mov	r5, r1
   342e6:	cmp	r1, #0
   342e8:	beq.w	34408 <XXH32_update@@Base+0x12c>
   342ec:	ldr	r3, [r0, #0]
   342ee:	adds	r6, r1, r2
   342f0:	add	r3, r2
   342f2:	str	r3, [r0, #0]
   342f4:	cmp	r3, #15
   342f6:	it	ls
   342f8:	cmpls	r2, #15
   342fa:	ldr	r0, [r0, #4]
   342fc:	ite	hi
   342fe:	movhi	r3, #1
   34300:	movls	r3, #0
   34302:	orrs	r3, r0
   34304:	str	r3, [r4, #4]
   34306:	ldr	r3, [r4, #40]	; 0x28
   34308:	adds	r0, r3, r2
   3430a:	cmp	r0, #15
   3430c:	bhi.n	34322 <XXH32_update@@Base+0x46>
   3430e:	add.w	r0, r4, #24
   34312:	add	r0, r3
   34314:	bl	3421c <hash_blake2b@@Base+0x6cc>
   34318:	ldr	r2, [r4, #40]	; 0x28
   3431a:	add	r2, r7
   3431c:	str	r2, [r4, #40]	; 0x28
   3431e:	movs	r0, #0
   34320:	b.n	3440a <XXH32_update@@Base+0x12e>
   34322:	cbz	r3, 34382 <XXH32_update@@Base+0xa6>
   34324:	add.w	r0, r4, #24
   34328:	rsb	r2, r3, #16
   3432c:	add	r0, r3
   3432e:	bl	3421c <hash_blake2b@@Base+0x6cc>
   34332:	ldr	r1, [pc, #220]	; (34410 <XXH32_update@@Base+0x134>)
   34334:	ldr	r2, [r4, #8]
   34336:	ldr	r3, [r4, #24]
   34338:	ldr	r0, [r4, #12]
   3433a:	mla	r3, r1, r3, r2
   3433e:	ldr	r2, [pc, #212]	; (34414 <XXH32_update@@Base+0x138>)
   34340:	mov.w	r3, r3, ror #19
   34344:	muls	r3, r2
   34346:	str	r3, [r4, #8]
   34348:	ldr	r3, [r4, #28]
   3434a:	mla	r3, r1, r3, r0
   3434e:	ldr	r0, [r4, #16]
   34350:	mov.w	r3, r3, ror #19
   34354:	muls	r3, r2
   34356:	str	r3, [r4, #12]
   34358:	ldr	r3, [r4, #32]
   3435a:	mla	r3, r1, r3, r0
   3435e:	ldr	r0, [r4, #20]
   34360:	mov.w	r3, r3, ror #19
   34364:	muls	r3, r2
   34366:	str	r3, [r4, #16]
   34368:	ldr	r3, [r4, #36]	; 0x24
   3436a:	mla	r1, r1, r3, r0
   3436e:	ldr	r3, [r4, #40]	; 0x28
   34370:	rsb	r3, r3, #16
   34374:	add	r5, r3
   34376:	movs	r3, #0
   34378:	str	r3, [r4, #40]	; 0x28
   3437a:	mov.w	r1, r1, ror #19
   3437e:	muls	r2, r1
   34380:	str	r2, [r4, #20]
   34382:	sub.w	r3, r6, #16
   34386:	cmp	r3, r5
   34388:	bcc.n	343f2 <XXH32_update@@Base+0x116>
   3438a:	ldrd	ip, r7, [r4, #8]
   3438e:	mov	r1, r5
   34390:	ldrd	r0, r8, [r4, #16]
   34394:	ldr.w	r9, [pc, #120]	; 34410 <XXH32_update@@Base+0x134>
   34398:	ldr.w	lr, [pc, #120]	; 34414 <XXH32_update@@Base+0x138>
   3439c:	ldr	r2, [r1, #0]
   3439e:	adds	r1, #16
   343a0:	mla	ip, r9, r2, ip
   343a4:	ldr.w	r2, [r1, #-12]
   343a8:	mla	r7, r9, r2, r7
   343ac:	ldr.w	r2, [r1, #-8]
   343b0:	mov.w	ip, ip, ror #19
   343b4:	mla	r0, r9, r2, r0
   343b8:	ldr.w	r2, [r1, #-4]
   343bc:	mov.w	r7, r7, ror #19
   343c0:	cmp	r3, r1
   343c2:	mul.w	ip, lr, ip
   343c6:	mla	r2, r9, r2, r8
   343ca:	mov.w	r0, r0, ror #19
   343ce:	mul.w	r7, lr, r7
   343d2:	mul.w	r0, lr, r0
   343d6:	mov.w	r2, r2, ror #19
   343da:	mul.w	r8, lr, r2
   343de:	bcs.n	3439c <XXH32_update@@Base+0xc0>
   343e0:	subs	r3, r3, r5
   343e2:	strd	ip, r7, [r4, #8]
   343e6:	bic.w	r3, r3, #15
   343ea:	strd	r0, r8, [r4, #16]
   343ee:	adds	r3, #16
   343f0:	add	r5, r3
   343f2:	cmp	r5, r6
   343f4:	bcs.n	3431e <XXH32_update@@Base+0x42>
   343f6:	subs	r6, r6, r5
   343f8:	add.w	r0, r4, #24
   343fc:	mov	r1, r5
   343fe:	mov	r2, r6
   34400:	bl	3421c <hash_blake2b@@Base+0x6cc>
   34404:	str	r6, [r4, #40]	; 0x28
   34406:	b.n	3431e <XXH32_update@@Base+0x42>
   34408:	movs	r0, #1
   3440a:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   3440e:	nop
   34410:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   34412:	strh	r3, [r5, #46]	; 0x2e
   34414:	ldrb	r1, [r6, #6]
   34416:	ldr	r6, [sp, #220]	; 0xdc

00034418 <XXH32_digest@@Base>:
   34418:	push	{r4, r5}
   3441a:	ldr	r3, [r0, #4]
   3441c:	ldr	r2, [r0, #16]
   3441e:	cbz	r3, 34448 <XXH32_digest@@Base+0x30>
   34420:	ldrd	r1, r3, [r0, #8]
   34424:	mov.w	r4, r3, ror #25
   34428:	ldr	r3, [r0, #20]
   3442a:	add.w	r4, r4, r1, ror #31
   3442e:	add.w	r4, r4, r2, ror #20
   34432:	add.w	r4, r4, r3, ror #14
   34436:	mov	r1, r0
   34438:	ldr	r2, [r0, #40]	; 0x28
   3443a:	ldr.w	r5, [r1], #24
   3443e:	movs	r3, #0
   34440:	adds	r0, r4, r5
   34442:	pop	{r4, r5}
   34444:	b.w	33bb0 <hash_blake2b@@Base+0x60>
   34448:	ldr	r4, [pc, #4]	; (34450 <XXH32_digest@@Base+0x38>)
   3444a:	add	r4, r2
   3444c:	b.n	34436 <XXH32_digest@@Base+0x1e>
   3444e:	nop
   34450:	str	r1, [r6, #120]	; 0x78
   34452:	asrs	r6, r2, #25

00034454 <XXH32_canonicalFromHash@@Base>:
   34454:	rev	r1, r1
   34456:	str	r1, [r0, #0]
   34458:	bx	lr

0003445a <XXH32_hashFromCanonical@@Base>:
   3445a:	ldr	r0, [r0, #0]
   3445c:	rev	r0, r0
   3445e:	bx	lr

00034460 <XXH64@@Base>:
   34460:	push	{r0, r1, r4, lr}
   34462:	ands.w	r4, r0, #7
   34466:	it	ne
   34468:	movne	r4, #1
   3446a:	str	r4, [sp, #0]
   3446c:	bl	33e80 <hash_blake2b@@Base+0x330>
   34470:	add	sp, #8
   34472:	pop	{r4, pc}

00034474 <XXH64_createState@@Base>:
   34474:	movs	r0, #88	; 0x58
   34476:	b.w	8630 <malloc@plt>

0003447a <XXH64_freeState@@Base>:
   3447a:	push	{r3, lr}
   3447c:	blx	83f0 <free@plt+0x4>
   34480:	movs	r0, #0
   34482:	pop	{r3, pc}

00034484 <XXH64_copyState@@Base>:
   34484:	movs	r2, #88	; 0x58
   34486:	b.w	8438 <memcpy@plt>

0003448a <XXH64_reset@@Base>:
   3448a:	push	{r4, r5, r6, r7, lr}
   3448c:	mov	r4, r2
   3448e:	ldr	r2, [pc, #140]	; (3451c <XXH64_reset@@Base+0x92>)
   34490:	mov	r5, r3
   34492:	ldr	r3, [pc, #140]	; (34520 <XXH64_reset@@Base+0x96>)
   34494:	sub	sp, #100	; 0x64
   34496:	add	r2, pc
   34498:	mov	r7, r0
   3449a:	mov	r6, sp
   3449c:	movs	r1, #0
   3449e:	ldr	r3, [r2, r3]
   344a0:	mov	r0, r6
   344a2:	movs	r2, #88	; 0x58
   344a4:	ldr	r3, [r3, #0]
   344a6:	str	r3, [sp, #92]	; 0x5c
   344a8:	mov.w	r3, #0
   344ac:	blx	8780 <memset@plt+0x4>
   344b0:	ldr	r3, [pc, #80]	; (34504 <XXH64_reset@@Base+0x7a>)
   344b2:	mov	r1, r6
   344b4:	ldr	r2, [pc, #80]	; (34508 <XXH64_reset@@Base+0x7e>)
   344b6:	mov	r0, r7
   344b8:	adds	r3, r4, r3
   344ba:	strd	r4, r5, [sp, #24]
   344be:	adc.w	r2, r5, r2
   344c2:	strd	r3, r2, [sp, #8]
   344c6:	ldr	r3, [pc, #68]	; (3450c <XXH64_reset@@Base+0x82>)
   344c8:	ldr	r2, [pc, #68]	; (34510 <XXH64_reset@@Base+0x86>)
   344ca:	adds	r3, r4, r3
   344cc:	adc.w	r2, r5, r2
   344d0:	strd	r3, r2, [sp, #16]
   344d4:	ldr	r2, [pc, #60]	; (34514 <XXH64_reset@@Base+0x8a>)
   344d6:	ldr	r3, [pc, #64]	; (34518 <XXH64_reset@@Base+0x8e>)
   344d8:	adds	r4, r4, r2
   344da:	mov.w	r2, #80	; 0x50
   344de:	adc.w	r5, r3, r5
   344e2:	strd	r4, r5, [sp, #32]
   344e6:	blx	843c <memcpy@plt+0x4>
   344ea:	ldr	r2, [pc, #56]	; (34524 <XXH64_reset@@Base+0x9a>)
   344ec:	ldr	r3, [pc, #48]	; (34520 <XXH64_reset@@Base+0x96>)
   344ee:	add	r2, pc
   344f0:	ldr	r3, [r2, r3]
   344f2:	ldr	r2, [r3, #0]
   344f4:	ldr	r3, [sp, #92]	; 0x5c
   344f6:	eors	r2, r3
   344f8:	beq.n	344fe <XXH64_reset@@Base+0x74>
   344fa:	blx	84cc <__stack_chk_fail@plt>
   344fe:	movs	r0, #0
   34500:	add	sp, #100	; 0x64
   34502:	pop	{r4, r5, r6, r7, pc}
   34504:	push	{r1, r2, r4, r6, r7, lr}
   34506:	add	r5, sp, #768	; 0x300
   34508:	movs	r7, #238	; 0xee
   3450a:	str	r2, [r5, #12]
   3450c:	adc.w	r7, pc, r4, lsr #11
   34510:	add	r6, sp, #244	; 0xf4
   34512:	stmia	r2!, {r1, r4, r5, r7}
   34514:	adds	r5, #121	; 0x79
   34516:	ldrb	r4, [r2, #8]
   34518:	strh	r6, [r1, #50]	; 0x32
   3451a:	str	r0, [r1, #28]
   3451c:	lsrs	r2, r6, #3
   3451e:	movs	r3, r0
   34520:	lsls	r4, r4, #8
   34522:	movs	r0, r0
   34524:	lsrs	r2, r3, #2
   34526:	movs	r3, r0

00034528 <XXH64_update@@Base>:
   34528:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3452c:	mov	r4, r0
   3452e:	sub	sp, #36	; 0x24
   34530:	mov	r5, r2
   34532:	mov	r8, r1
   34534:	cmp	r1, #0
   34536:	beq.w	3481c <XXH64_update@@Base+0x2f4>
   3453a:	ldrd	r6, r7, [r0]
   3453e:	add.w	r9, r1, r2
   34542:	ldr	r3, [r0, #72]	; 0x48
   34544:	adds	r6, r6, r2
   34546:	adc.w	r7, r7, #0
   3454a:	strd	r6, r7, [r0]
   3454e:	adds	r0, r3, r2
   34550:	cmp	r0, #31
   34552:	bhi.n	34568 <XXH64_update@@Base+0x40>
   34554:	add.w	r0, r4, #40	; 0x28
   34558:	add	r0, r3
   3455a:	bl	3421c <hash_blake2b@@Base+0x6cc>
   3455e:	ldr	r2, [r4, #72]	; 0x48
   34560:	add	r2, r5
   34562:	str	r2, [r4, #72]	; 0x48
   34564:	movs	r0, #0
   34566:	b.n	3481e <XXH64_update@@Base+0x2f6>
   34568:	cmp	r3, #0
   3456a:	beq.w	34678 <XXH64_update@@Base+0x150>
   3456e:	add.w	r0, r4, #40	; 0x28
   34572:	rsb	r2, r3, #32
   34576:	add	r0, r3
   34578:	ldr	r5, [pc, #680]	; (34824 <XXH64_update@@Base+0x2fc>)
   3457a:	bl	3421c <hash_blake2b@@Base+0x6cc>
   3457e:	ldr.w	ip, [pc, #688]	; 34830 <XXH64_update@@Base+0x308>
   34582:	ldr	r6, [r4, #40]	; 0x28
   34584:	ldr	r3, [r4, #44]	; 0x2c
   34586:	mul.w	r2, ip, r6
   3458a:	mla	r3, r5, r3, r2
   3458e:	umull	r6, r7, r6, r5
   34592:	add	r7, r3
   34594:	ldrd	r3, r2, [r4, #8]
   34598:	adds	r3, r6, r3
   3459a:	ldr	r6, [pc, #652]	; (34828 <XXH64_update@@Base+0x300>)
   3459c:	adc.w	r0, r7, r2
   345a0:	ldr	r2, [pc, #648]	; (3482c <XXH64_update@@Base+0x304>)
   345a2:	lsls	r1, r0, #31
   345a4:	orr.w	r1, r1, r3, lsr #1
   345a8:	lsls	r3, r3, #31
   345aa:	orr.w	r0, r3, r0, lsr #1
   345ae:	mul.w	r3, r6, r0
   345b2:	mla	r3, r2, r1, r3
   345b6:	umull	r0, r1, r0, r2
   345ba:	add	r1, r3
   345bc:	ldr	r3, [r4, #52]	; 0x34
   345be:	strd	r0, r1, [r4, #8]
   345c2:	ldr	r0, [r4, #48]	; 0x30
   345c4:	mul.w	r1, ip, r0
   345c8:	mla	r3, r5, r3, r1
   345cc:	umull	r0, r1, r0, r5
   345d0:	add	r1, r3
   345d2:	ldrd	r3, r7, [r4, #16]
   345d6:	adds	r3, r0, r3
   345d8:	adc.w	r0, r1, r7
   345dc:	lsls	r1, r0, #31
   345de:	orr.w	r1, r1, r3, lsr #1
   345e2:	lsls	r3, r3, #31
   345e4:	orr.w	r0, r3, r0, lsr #1
   345e8:	mul.w	r3, r6, r0
   345ec:	mla	r3, r2, r1, r3
   345f0:	umull	r0, r1, r0, r2
   345f4:	add	r1, r3
   345f6:	ldr	r3, [r4, #60]	; 0x3c
   345f8:	strd	r0, r1, [r4, #16]
   345fc:	ldr	r0, [r4, #56]	; 0x38
   345fe:	mul.w	r1, ip, r0
   34602:	mla	r3, r5, r3, r1
   34606:	umull	r0, r1, r0, r5
   3460a:	add	r1, r3
   3460c:	ldrd	r3, r7, [r4, #24]
   34610:	adds	r3, r0, r3
   34612:	adc.w	r0, r1, r7
   34616:	lsls	r1, r0, #31
   34618:	orr.w	r1, r1, r3, lsr #1
   3461c:	lsls	r3, r3, #31
   3461e:	orr.w	r0, r3, r0, lsr #1
   34622:	mul.w	r3, r6, r0
   34626:	mla	r3, r2, r1, r3
   3462a:	umull	r0, r1, r0, r2
   3462e:	add	r1, r3
   34630:	ldr	r3, [r4, #68]	; 0x44
   34632:	strd	r0, r1, [r4, #24]
   34636:	ldr	r0, [r4, #64]	; 0x40
   34638:	mul.w	ip, ip, r0
   3463c:	mla	ip, r5, r3, ip
   34640:	umull	r0, r1, r0, r5
   34644:	ldrd	r3, r5, [r4, #32]
   34648:	add	r1, ip
   3464a:	adds	r3, r0, r3
   3464c:	adc.w	r5, r1, r5
   34650:	lsls	r1, r5, #31
   34652:	orr.w	r1, r1, r3, lsr #1
   34656:	lsls	r3, r3, #31
   34658:	orr.w	r5, r3, r5, lsr #1
   3465c:	muls	r6, r5
   3465e:	mla	r6, r2, r1, r6
   34662:	umull	r2, r3, r5, r2
   34666:	add	r3, r6
   34668:	strd	r2, r3, [r4, #32]
   3466c:	ldr	r3, [r4, #72]	; 0x48
   3466e:	rsb	r3, r3, #32
   34672:	add	r8, r3
   34674:	movs	r3, #0
   34676:	str	r3, [r4, #72]	; 0x48
   34678:	add.w	r3, r8, #32
   3467c:	cmp	r9, r3
   3467e:	bcc.w	34802 <XXH64_update@@Base+0x2da>
   34682:	ldrd	r2, r3, [r4, #8]
   34686:	sub.w	ip, r9, #32
   3468a:	ldr	r5, [pc, #408]	; (34824 <XXH64_update@@Base+0x2fc>)
   3468c:	ldr	r7, [pc, #416]	; (34830 <XXH64_update@@Base+0x308>)
   3468e:	strd	r2, r3, [sp]
   34692:	ldrd	r2, r3, [r4, #16]
   34696:	strd	r2, r3, [sp, #8]
   3469a:	ldrd	r2, r3, [r4, #24]
   3469e:	strd	r2, r3, [sp, #16]
   346a2:	ldrd	r2, r3, [r4, #32]
   346a6:	strd	r2, r3, [sp, #24]
   346aa:	mov	r3, r8
   346ac:	ldr	r2, [pc, #380]	; (3482c <XXH64_update@@Base+0x304>)
   346ae:	ldr	r0, [r3, #0]
   346b0:	adds	r3, #32
   346b2:	ldr.w	lr, [r3, #-28]
   346b6:	ldr	r6, [pc, #368]	; (34828 <XXH64_update@@Base+0x300>)
   346b8:	umull	sl, fp, r0, r5
   346bc:	mul.w	r1, r7, r0
   346c0:	mla	lr, r5, lr, r1
   346c4:	ldr	r1, [sp, #0]
   346c6:	adds.w	r0, sl, r1
   346ca:	ldr	r1, [sp, #4]
   346cc:	add	fp, lr
   346ce:	adc.w	r1, fp, r1
   346d2:	mov.w	lr, r1, lsl #31
   346d6:	orr.w	lr, lr, r0, lsr #1
   346da:	lsls	r0, r0, #31
   346dc:	orr.w	r1, r0, r1, lsr #1
   346e0:	ldr	r0, [pc, #324]	; (34828 <XXH64_update@@Base+0x300>)
   346e2:	muls	r0, r1
   346e4:	mla	lr, r2, lr, r0
   346e8:	umull	r0, r1, r1, r2
   346ec:	strd	r0, r1, [sp]
   346f0:	ldr	r1, [sp, #4]
   346f2:	ldr.w	r0, [r3, #-24]
   346f6:	add	r1, lr
   346f8:	ldr.w	lr, [r3, #-20]
   346fc:	str	r1, [sp, #4]
   346fe:	umull	sl, fp, r0, r5
   34702:	mul.w	r1, r7, r0
   34706:	mla	lr, r5, lr, r1
   3470a:	ldr	r1, [sp, #8]
   3470c:	adds.w	r0, sl, r1
   34710:	ldr	r1, [sp, #12]
   34712:	add	fp, lr
   34714:	adc.w	r1, fp, r1
   34718:	mov.w	lr, r1, lsl #31
   3471c:	orr.w	lr, lr, r0, lsr #1
   34720:	lsls	r0, r0, #31
   34722:	orr.w	r1, r0, r1, lsr #1
   34726:	ldr	r0, [pc, #256]	; (34828 <XXH64_update@@Base+0x300>)
   34728:	muls	r0, r1
   3472a:	mla	lr, r2, lr, r0
   3472e:	umull	r0, r1, r1, r2
   34732:	strd	r0, r1, [sp, #8]
   34736:	ldr	r1, [sp, #12]
   34738:	ldr.w	r0, [r3, #-16]
   3473c:	add	r1, lr
   3473e:	ldr.w	lr, [r3, #-12]
   34742:	str	r1, [sp, #12]
   34744:	umull	sl, fp, r0, r5
   34748:	mul.w	r1, r7, r0
   3474c:	mla	lr, r5, lr, r1
   34750:	ldr	r1, [sp, #16]
   34752:	adds.w	r0, sl, r1
   34756:	ldr	r1, [sp, #20]
   34758:	add	fp, lr
   3475a:	adc.w	lr, fp, r1
   3475e:	mov.w	r1, lr, lsl #31
   34762:	orr.w	r1, r1, r0, lsr #1
   34766:	lsls	r0, r0, #31
   34768:	orr.w	r0, r0, lr, lsr #1
   3476c:	umull	sl, fp, r0, r2
   34770:	mul.w	lr, r6, r0
   34774:	ldr	r6, [sp, #24]
   34776:	mla	r1, r2, r1, lr
   3477a:	ldr.w	lr, [r3, #-4]
   3477e:	strd	sl, fp, [sp, #16]
   34782:	ldr	r0, [sp, #20]
   34784:	add	r1, r0
   34786:	ldr.w	r0, [r3, #-8]
   3478a:	str	r1, [sp, #20]
   3478c:	mul.w	r1, r7, r0
   34790:	mla	lr, r5, lr, r1
   34794:	umull	r0, r1, r0, r5
   34798:	adds.w	sl, r0, r6
   3479c:	ldr	r6, [sp, #28]
   3479e:	add	r1, lr
   347a0:	ldr	r0, [pc, #132]	; (34828 <XXH64_update@@Base+0x300>)
   347a2:	adc.w	r6, r1, r6
   347a6:	cmp	ip, r3
   347a8:	mov.w	r1, r6, lsl #31
   347ac:	orr.w	r1, r1, sl, lsr #1
   347b0:	mov.w	sl, sl, lsl #31
   347b4:	orr.w	sl, sl, r6, lsr #1
   347b8:	mul.w	r0, r0, sl
   347bc:	umull	sl, fp, sl, r2
   347c0:	mla	r1, r2, r1, r0
   347c4:	strd	sl, fp, [sp, #24]
   347c8:	ldr	r0, [sp, #28]
   347ca:	add	r0, r1
   347cc:	str	r0, [sp, #28]
   347ce:	bcs.w	346ae <XXH64_update@@Base+0x186>
   347d2:	sub.w	r3, r9, #32
   347d6:	sub.w	r3, r3, r8
   347da:	bic.w	r3, r3, #31
   347de:	adds	r3, #32
   347e0:	add	r8, r3
   347e2:	ldrd	r2, r3, [sp]
   347e6:	strd	r2, r3, [r4, #8]
   347ea:	ldrd	r2, r3, [sp, #8]
   347ee:	strd	r2, r3, [r4, #16]
   347f2:	ldrd	r2, r3, [sp, #16]
   347f6:	strd	r2, r3, [r4, #24]
   347fa:	ldrd	r2, r3, [sp, #24]
   347fe:	strd	r2, r3, [r4, #32]
   34802:	cmp	r8, r9
   34804:	bcs.w	34564 <XXH64_update@@Base+0x3c>
   34808:	sub.w	r5, r9, r8
   3480c:	add.w	r0, r4, #40	; 0x28
   34810:	mov	r1, r8
   34812:	mov	r2, r5
   34814:	bl	3421c <hash_blake2b@@Base+0x6cc>
   34818:	str	r5, [r4, #72]	; 0x48
   3481a:	b.n	34564 <XXH64_update@@Base+0x3c>
   3481c:	movs	r0, #1
   3481e:	add	sp, #36	; 0x24
   34820:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34824:	adc.w	r7, pc, r4, lsr #11
   34828:	ldrb	r1, [r6, #6]
   3482a:	ldr	r6, [sp, #220]	; 0xdc
   3482c:	ldmia	r2, {r0, r1, r2, r7}
   3482e:	strh	r3, [r5, #46]	; 0x2e
   34830:	add	r6, sp, #244	; 0xf4
   34832:	stmia	r2!, {r1, r4, r5, r7}

00034834 <XXH64_digest@@Base>:
   34834:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34838:	sub	sp, #28
   3483a:	ldrd	r3, r4, [r0]
   3483e:	strd	r3, r4, [sp, #8]
   34842:	ldrd	r2, r3, [sp, #8]
   34846:	ldrd	r4, r5, [r0, #24]
   3484a:	cmp	r3, #0
   3484c:	it	eq
   3484e:	cmpeq	r2, #32
   34850:	bcc.w	34a18 <XXH64_digest@@Base+0x1e4>
   34854:	ldrd	sl, lr, [r0, #8]
   34858:	ldr	r6, [pc, #456]	; (34a24 <XXH64_digest@@Base+0x1f0>)
   3485a:	ldr	r7, [pc, #460]	; (34a28 <XXH64_digest@@Base+0x1f4>)
   3485c:	ldrd	r1, ip, [r0, #16]
   34860:	umull	r2, r3, sl, r6
   34864:	mul.w	r8, r7, sl
   34868:	ldr	r7, [r0, #36]	; 0x24
   3486a:	mla	r8, r6, lr, r8
   3486e:	add	r3, r8
   34870:	mov.w	r8, r2, lsl #31
   34874:	mov.w	fp, r3, lsl #31
   34878:	orr.w	r8, r8, r3, lsr #1
   3487c:	mov.w	r3, lr, lsl #1
   34880:	orr.w	r9, fp, r2, lsr #1
   34884:	orr.w	r2, r3, sl, lsr #31
   34888:	mov.w	r3, sl, lsl #1
   3488c:	orr.w	fp, r3, lr, lsr #31
   34890:	mov.w	lr, r1, lsl #7
   34894:	mov.w	r3, ip, lsl #7
   34898:	orr.w	lr, lr, ip, lsr #25
   3489c:	orr.w	sl, r3, r1, lsr #25
   348a0:	adds.w	r3, fp, lr
   348a4:	mov.w	lr, r4, lsl #12
   348a8:	adc.w	sl, r2, sl
   348ac:	orr.w	lr, lr, r5, lsr #20
   348b0:	lsls	r2, r5, #12
   348b2:	adds.w	lr, r3, lr
   348b6:	ldr	r3, [r0, #36]	; 0x24
   348b8:	orr.w	fp, r2, r4, lsr #20
   348bc:	adc.w	sl, sl, fp
   348c0:	mov.w	fp, r3, lsl #18
   348c4:	ldr	r3, [r0, #32]
   348c6:	orr.w	r2, fp, r3, lsr #14
   348ca:	lsls	r3, r3, #18
   348cc:	orr.w	r3, r3, r7, lsr #14
   348d0:	adds.w	lr, lr, r3
   348d4:	ldr	r3, [pc, #340]	; (34a2c <XXH64_digest@@Base+0x1f8>)
   348d6:	adc.w	sl, sl, r2
   348da:	ldr	r2, [pc, #340]	; (34a30 <XXH64_digest@@Base+0x1fc>)
   348dc:	mul.w	fp, r2, r8
   348e0:	mla	fp, r3, r9, fp
   348e4:	umull	r8, r9, r8, r3
   348e8:	add	r9, fp
   348ea:	eor.w	lr, lr, r8
   348ee:	eor.w	sl, sl, r9
   348f2:	mul.w	r8, r2, lr
   348f6:	mla	sl, r3, sl, r8
   348fa:	umull	r7, r8, lr, r3
   348fe:	strd	r7, r8, [sp, #16]
   34902:	ldr	r7, [sp, #20]
   34904:	add	r7, sl
   34906:	str	r7, [sp, #20]
   34908:	ldr	r7, [pc, #284]	; (34a28 <XXH64_digest@@Base+0x1f4>)
   3490a:	umull	sl, fp, r1, r6
   3490e:	mul.w	lr, r7, r1
   34912:	ldr	r7, [sp, #16]
   34914:	mla	ip, r6, ip, lr
   34918:	mov.w	r8, sl, lsl #31
   3491c:	add	fp, ip
   3491e:	orr.w	r8, r8, fp, lsr #1
   34922:	mov.w	r1, fp, lsl #31
   34926:	orr.w	r1, r1, sl, lsr #1
   3492a:	mul.w	ip, r2, r8
   3492e:	mla	r1, r3, r1, ip
   34932:	ldr.w	ip, [pc, #268]	; 34a40 <XXH64_digest@@Base+0x20c>
   34936:	umull	r8, r9, r8, r3
   3493a:	add	r9, r1
   3493c:	ldr	r1, [pc, #244]	; (34a34 <XXH64_digest@@Base+0x200>)
   3493e:	adds.w	sl, r7, r1
   34942:	ldr	r7, [sp, #20]
   34944:	eor.w	sl, r8, sl
   34948:	adc.w	lr, r7, ip
   3494c:	ldr	r7, [pc, #216]	; (34a28 <XXH64_digest@@Base+0x1f4>)
   3494e:	eor.w	lr, r9, lr
   34952:	mul.w	r8, r2, sl
   34956:	mla	lr, r3, lr, r8
   3495a:	umull	sl, fp, sl, r3
   3495e:	add	fp, lr
   34960:	mul.w	lr, r7, r4
   34964:	umull	r7, r8, r4, r6
   34968:	mla	lr, r6, r5, lr
   3496c:	add	r8, lr
   3496e:	lsls	r4, r7, #31
   34970:	orr.w	r4, r4, r8, lsr #1
   34974:	mov.w	lr, r8, lsl #31
   34978:	orr.w	lr, lr, r7, lsr #1
   3497c:	adds.w	r8, sl, r1
   34980:	mul.w	r5, r2, r4
   34984:	mla	lr, r3, lr, r5
   34988:	umull	r4, r5, r4, r3
   3498c:	add	r5, lr
   3498e:	eor.w	r8, r4, r8
   34992:	adc.w	lr, fp, ip
   34996:	eor.w	r4, r5, lr
   3499a:	mul.w	r5, r2, r8
   3499e:	mla	r4, r3, r4, r5
   349a2:	ldr	r5, [pc, #132]	; (34a28 <XXH64_digest@@Base+0x1f4>)
   349a4:	umull	r8, r9, r8, r3
   349a8:	add	r9, r4
   349aa:	ldr	r4, [r0, #32]
   349ac:	mul.w	r7, r5, r4
   349b0:	ldr	r5, [r0, #32]
   349b2:	ldr	r4, [r0, #36]	; 0x24
   349b4:	umull	sl, fp, r5, r6
   349b8:	mla	r4, r6, r4, r7
   349bc:	add	fp, r4
   349be:	mov.w	r6, sl, lsl #31
   349c2:	orr.w	r6, r6, fp, lsr #1
   349c6:	mov.w	r4, fp, lsl #31
   349ca:	orr.w	r4, r4, sl, lsr #1
   349ce:	mul.w	r5, r2, r6
   349d2:	mla	r4, r3, r4, r5
   349d6:	umull	r6, r7, r6, r3
   349da:	add	r7, r4
   349dc:	adds.w	r4, r8, r1
   349e0:	eor.w	r4, r4, r6
   349e4:	adc.w	r5, r9, ip
   349e8:	eors	r5, r7
   349ea:	muls	r2, r4
   349ec:	mla	r2, r3, r5, r2
   349f0:	umull	r5, r6, r4, r3
   349f4:	add	r6, r2
   349f6:	adds	r4, r5, r1
   349f8:	adc.w	r1, r6, ip
   349fc:	movs	r3, #0
   349fe:	str	r3, [sp, #0]
   34a00:	ldr	r3, [sp, #8]
   34a02:	add.w	r2, r0, #40	; 0x28
   34a06:	adds	r0, r3, r4
   34a08:	ldr	r4, [sp, #12]
   34a0a:	adc.w	r1, r4, r1
   34a0e:	bl	33ce4 <hash_blake2b@@Base+0x194>
   34a12:	add	sp, #28
   34a14:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34a18:	ldr	r1, [pc, #28]	; (34a38 <XXH64_digest@@Base+0x204>)
   34a1a:	adds	r4, r4, r1
   34a1c:	ldr	r1, [pc, #28]	; (34a3c <XXH64_digest@@Base+0x208>)
   34a1e:	adc.w	r1, r5, r1
   34a22:	b.n	349fc <XXH64_digest@@Base+0x1c8>
   34a24:	adc.w	r7, pc, r4, lsr #11
   34a28:	add	r6, sp, #244	; 0xf4
   34a2a:	stmia	r2!, {r1, r4, r5, r7}
   34a2c:	ldmia	r2, {r0, r1, r2, r7}
   34a2e:	strh	r3, [r5, #46]	; 0x2e
   34a30:	ldrb	r1, [r6, #6]
   34a32:	ldr	r6, [sp, #220]	; 0xdc
   34a34:	add	r6, sp, #396	; 0x18c
   34a36:	stmia	r2!, {r1, r4, r5, r7}
   34a38:	str	r5, [r0, #124]	; 0x7c
   34a3a:	asrs	r6, r2, #25
   34a3c:			; <UNDEFINED> instruction: 0xeb2f27d4
   34a40:	ldmia	r2, {r0, r1, r2, r4, r5, r6}
   34a42:	strh	r3, [r5, #46]	; 0x2e

00034a44 <XXH64_canonicalFromHash@@Base>:
   34a44:	push	{r0, r1, r4, lr}
   34a46:	mov	r4, r0
   34a48:	strd	r2, r3, [sp]
   34a4c:	rev	r2, r2
   34a4e:	ldr	r3, [sp, #4]
   34a50:	rev	r3, r3
   34a52:	strd	r3, r2, [sp]
   34a56:	mov	r3, sp
   34a58:	ldmia	r3!, {r0, r1}
   34a5a:	str	r0, [r4, #0]
   34a5c:	str	r1, [r4, #4]
   34a5e:	add	sp, #8
   34a60:	pop	{r4, pc}

00034a62 <XXH64_hashFromCanonical@@Base>:
   34a62:	ldr	r1, [r0, #0]
   34a64:	ldr	r0, [r0, #4]
   34a66:	rev	r1, r1
   34a68:	rev	r0, r0
   34a6a:	bx	lr
   34a6c:	ldr	r2, [pc, #372]	; (34be4 <XXH64_hashFromCanonical@@Base+0x182>)
   34a6e:	ldr	r3, [pc, #376]	; (34be8 <XXH64_hashFromCanonical@@Base+0x186>)
   34a70:	add	r2, pc
   34a72:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34a76:	sub	sp, #308	; 0x134
   34a78:	ldr	r3, [r2, r3]
   34a7a:	add	r1, sp, #44	; 0x2c
   34a7c:	add.w	r5, r0, #64	; 0x40
   34a80:	mov	r2, r0
   34a82:	ldr	r3, [r3, #0]
   34a84:	str	r3, [sp, #300]	; 0x12c
   34a86:	mov.w	r3, #0
   34a8a:	mov	r4, r1
   34a8c:	ldrb.w	r3, [r2, #43]	; 0x2b
   34a90:	adds	r2, #4
   34a92:	ldrb.w	r6, [r2, #38]	; 0x26
   34a96:	lsls	r3, r3, #16
   34a98:	orr.w	r3, r3, r6, lsl #24
   34a9c:	ldrb.w	r6, [r2, #41]	; 0x29
   34aa0:	orrs	r3, r6
   34aa2:	ldrb.w	r6, [r2, #40]	; 0x28
   34aa6:	cmp	r5, r2
   34aa8:	orr.w	r3, r3, r6, lsl #8
   34aac:	str.w	r3, [r4], #4
   34ab0:	bne.n	34a8c <XXH64_hashFromCanonical@@Base+0x2a>
   34ab2:	movs	r4, #16
   34ab4:	ldr	r2, [r1, #56]	; 0x38
   34ab6:	mov	r6, r1
   34ab8:	ldr.w	r5, [r1, #4]!
   34abc:	adds	r4, #1
   34abe:	cmp	r4, #64	; 0x40
   34ac0:	mov.w	r3, r2, ror #19
   34ac4:	eor.w	r3, r3, r2, ror #17
   34ac8:	eor.w	r3, r3, r2, lsr #10
   34acc:	ldr	r2, [r6, #36]	; 0x24
   34ace:	ldr	r6, [r6, #0]
   34ad0:	add	r2, r6
   34ad2:	add	r3, r2
   34ad4:	mov.w	r2, r5, ror #18
   34ad8:	eor.w	r2, r2, r5, ror #7
   34adc:	eor.w	r2, r2, r5, lsr #3
   34ae0:	add	r3, r2
   34ae2:	str	r3, [r1, #60]	; 0x3c
   34ae4:	bne.n	34ab4 <XXH64_hashFromCanonical@@Base+0x52>
   34ae6:	ldr	r3, [r0, #0]
   34ae8:	add.w	r9, sp, #44	; 0x2c
   34aec:	mov.w	lr, #0
   34af0:	str	r3, [sp, #0]
   34af2:	ldr	r3, [r0, #4]
   34af4:	str	r3, [sp, #4]
   34af6:	ldr	r3, [r0, #8]
   34af8:	ldrd	r4, r6, [sp]
   34afc:	str	r3, [sp, #8]
   34afe:	ldr	r3, [r0, #12]
   34b00:	str	r3, [sp, #12]
   34b02:	ldr	r3, [r0, #16]
   34b04:	ldrd	r5, r8, [sp, #8]
   34b08:	str	r3, [sp, #16]
   34b0a:	ldr	r3, [r0, #20]
   34b0c:	str	r3, [sp, #20]
   34b0e:	ldr	r3, [r0, #24]
   34b10:	ldrd	r1, ip, [sp, #16]
   34b14:	str	r3, [sp, #24]
   34b16:	ldr	r3, [r0, #28]
   34b18:	str	r3, [sp, #28]
   34b1a:	ldrd	r7, fp, [sp, #24]
   34b1e:	ldr	r3, [pc, #204]	; (34bec <XXH64_hashFromCanonical@@Base+0x18a>)
   34b20:	add	r3, pc
   34b22:	str	r3, [sp, #36]	; 0x24
   34b24:	ldr	r3, [sp, #36]	; 0x24
   34b26:	ldr.w	r2, [r3], #4
   34b2a:	str	r3, [sp, #36]	; 0x24
   34b2c:	mov.w	r3, r1, ror #11
   34b30:	eor.w	r3, r3, r1, ror #6
   34b34:	eor.w	sl, r3, r1, ror #25
   34b38:	ldr.w	r3, [r9, lr, lsl #2]
   34b3c:	add.w	lr, lr, #1
   34b40:	add	r2, r3
   34b42:	cmp.w	lr, #64	; 0x40
   34b46:	add.w	r3, sl, r2
   34b4a:	bic.w	sl, r7, r1
   34b4e:	and.w	r2, r1, ip
   34b52:	eor.w	r2, sl, r2
   34b56:	mov.w	sl, r4, ror #13
   34b5a:	add	r2, r3
   34b5c:	eor.w	r3, r6, r5
   34b60:	add	r2, fp
   34b62:	eor.w	sl, sl, r4, ror #2
   34b66:	and.w	fp, r6, r5
   34b6a:	and.w	r3, r3, r4
   34b6e:	eor.w	r3, r3, fp
   34b72:	eor.w	sl, sl, r4, ror #22
   34b76:	add	sl, r3
   34b78:	mov	fp, r7
   34b7a:	add.w	r3, r2, r8
   34b7e:	add	r2, sl
   34b80:	mov	r8, r5
   34b82:	str	r3, [sp, #32]
   34b84:	bne.n	34bd0 <XXH64_hashFromCanonical@@Base+0x16e>
   34b86:	ldr	r3, [sp, #0]
   34b88:	add	r3, r2
   34b8a:	str	r3, [r0, #0]
   34b8c:	ldr	r3, [sp, #4]
   34b8e:	ldr	r2, [sp, #32]
   34b90:	add	r3, r4
   34b92:	str	r3, [r0, #4]
   34b94:	ldr	r3, [sp, #8]
   34b96:	add	r3, r6
   34b98:	str	r3, [r0, #8]
   34b9a:	ldr	r3, [sp, #12]
   34b9c:	add	r3, r5
   34b9e:	str	r3, [r0, #12]
   34ba0:	ldr	r3, [sp, #16]
   34ba2:	add	r3, r2
   34ba4:	str	r3, [r0, #16]
   34ba6:	ldr	r3, [sp, #20]
   34ba8:	ldr	r2, [pc, #68]	; (34bf0 <XXH64_hashFromCanonical@@Base+0x18e>)
   34baa:	add	r3, r1
   34bac:	str	r3, [r0, #20]
   34bae:	ldr	r3, [sp, #24]
   34bb0:	add	r2, pc
   34bb2:	add	r3, ip
   34bb4:	str	r3, [r0, #24]
   34bb6:	ldr	r3, [sp, #28]
   34bb8:	add	r3, r7
   34bba:	str	r3, [r0, #28]
   34bbc:	movs	r3, #0
   34bbe:	strh	r3, [r0, #40]	; 0x28
   34bc0:	ldr	r3, [pc, #36]	; (34be8 <XXH64_hashFromCanonical@@Base+0x186>)
   34bc2:	ldr	r3, [r2, r3]
   34bc4:	ldr	r2, [r3, #0]
   34bc6:	ldr	r3, [sp, #300]	; 0x12c
   34bc8:	eors	r2, r3
   34bca:	beq.n	34bde <XXH64_hashFromCanonical@@Base+0x17c>
   34bcc:	blx	84cc <__stack_chk_fail@plt>
   34bd0:	mov	r7, ip
   34bd2:	mov	r5, r6
   34bd4:	mov	ip, r1
   34bd6:	mov	r6, r4
   34bd8:	ldr	r1, [sp, #32]
   34bda:	mov	r4, r2
   34bdc:	b.n	34b24 <XXH64_hashFromCanonical@@Base+0xc2>
   34bde:	add	sp, #308	; 0x134
   34be0:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34be4:	lsls	r0, r3, #12
   34be6:	movs	r3, r0
   34be8:	lsls	r4, r4, #8
   34bea:	movs	r0, r0
   34bec:			; <UNDEFINED> instruction: 0xf2740001
   34bf0:	lsls	r0, r3, #7
   34bf2:	movs	r3, r0
   34bf4:	push	{r4, lr}
   34bf6:	mov	r4, r0
   34bf8:	ldrsh.w	r3, [r0, #40]	; 0x28
   34bfc:	adds	r2, r3, #1
   34bfe:	cmp	r3, #55	; 0x37
   34c00:	add	r3, r0
   34c02:	sxth	r2, r2
   34c04:	strh	r2, [r0, #40]	; 0x28
   34c06:	strb.w	r1, [r3, #42]	; 0x2a
   34c0a:	ble.n	34c1c <XXH64_hashFromCanonical@@Base+0x1ba>
   34c0c:	movs	r2, #0
   34c0e:	ldrsh.w	r3, [r4, #40]	; 0x28
   34c12:	cmp	r3, #63	; 0x3f
   34c14:	ble.n	34c5a <XXH64_hashFromCanonical@@Base+0x1f8>
   34c16:	mov	r0, r4
   34c18:	bl	34a6c <XXH64_hashFromCanonical@@Base+0xa>
   34c1c:	movs	r2, #0
   34c1e:	ldrsh.w	r3, [r4, #40]	; 0x28
   34c22:	cmp	r3, #55	; 0x37
   34c24:	ble.n	34c66 <XXH64_hashFromCanonical@@Base+0x204>
   34c26:	ldr	r3, [r4, #32]
   34c28:	mov	r0, r4
   34c2a:	ldrh	r2, [r4, #32]
   34c2c:	lsrs	r1, r3, #24
   34c2e:	lsrs	r3, r3, #16
   34c30:	strb.w	r3, [r4, #99]	; 0x63
   34c34:	rev16	r2, r2
   34c36:	ldr	r3, [r4, #36]	; 0x24
   34c38:	strh.w	r2, [r4, #100]	; 0x64
   34c3c:	ldrh	r2, [r4, #36]	; 0x24
   34c3e:	strb.w	r1, [r4, #98]	; 0x62
   34c42:	lsrs	r1, r3, #24
   34c44:	rev16	r2, r2
   34c46:	lsrs	r3, r3, #16
   34c48:	strb.w	r1, [r4, #102]	; 0x66
   34c4c:	strb.w	r3, [r4, #103]	; 0x67
   34c50:	strh.w	r2, [r4, #104]	; 0x68
   34c54:	ldmia.w	sp!, {r4, lr}
   34c58:	b.n	34a6c <XXH64_hashFromCanonical@@Base+0xa>
   34c5a:	adds	r1, r3, #1
   34c5c:	add	r3, r4
   34c5e:	strh	r1, [r4, #40]	; 0x28
   34c60:	strb.w	r2, [r3, #42]	; 0x2a
   34c64:	b.n	34c0e <XXH64_hashFromCanonical@@Base+0x1ac>
   34c66:	adds	r1, r3, #1
   34c68:	add	r3, r4
   34c6a:	strh	r1, [r4, #40]	; 0x28
   34c6c:	strb.w	r2, [r3, #42]	; 0x2a
   34c70:	b.n	34c1e <XXH64_hashFromCanonical@@Base+0x1bc>
   34c72:	push	{r3, r4, r5, r6, r7, lr}
   34c74:	mov	r4, r0
   34c76:	ldr	r5, [r0, #108]	; 0x6c
   34c78:	mov	r7, r1
   34c7a:	mov	r6, r2
   34c7c:	cbnz	r5, 34c9c <XXH64_hashFromCanonical@@Base+0x23a>
   34c7e:	movs	r1, #128	; 0x80
   34c80:	bl	34bf4 <XXH64_hashFromCanonical@@Base+0x192>
   34c84:	add.w	r2, r4, #42	; 0x2a
   34c88:	add.w	r1, r4, #106	; 0x6a
   34c8c:	strb.w	r5, [r2], #1
   34c90:	cmp	r2, r1
   34c92:	bne.n	34c8c <XXH64_hashFromCanonical@@Base+0x22a>
   34c94:	movs	r3, #1
   34c96:	strd	r5, r5, [r4, #32]
   34c9a:	str	r3, [r4, #108]	; 0x6c
   34c9c:	movs	r3, #0
   34c9e:	asrs	r2, r3, #2
   34ca0:	mvns	r0, r3
   34ca2:	and.w	r0, r0, #3
   34ca6:	ldr.w	r2, [r4, r2, lsl #2]
   34caa:	lsls	r0, r0, #3
   34cac:	lsr.w	r0, r2, r0
   34cb0:	strb	r0, [r7, r3]
   34cb2:	adds	r3, #1
   34cb4:	cmp	r3, r6
   34cb6:	bne.n	34c9e <XXH64_hashFromCanonical@@Base+0x23c>
   34cb8:	movs	r0, #0
   34cba:	pop	{r3, r4, r5, r6, r7, pc}

00034cbc <SHA224Reset@@Base>:
   34cbc:	cbz	r0, 34cf2 <SHA224Reset@@Base+0x36>
   34cbe:	ldr	r2, [pc, #56]	; (34cf8 <SHA224Reset@@Base+0x3c>)
   34cc0:	movs	r3, #0
   34cc2:	strd	r3, r3, [r0, #32]
   34cc6:	add	r2, pc
   34cc8:	strh	r3, [r0, #40]	; 0x28
   34cca:	strd	r3, r3, [r0, #108]	; 0x6c
   34cce:	ldr	r1, [r2, #0]
   34cd0:	str	r1, [r0, #0]
   34cd2:	ldr	r1, [r2, #4]
   34cd4:	str	r1, [r0, #4]
   34cd6:	ldr	r1, [r2, #8]
   34cd8:	str	r1, [r0, #8]
   34cda:	ldr	r1, [r2, #12]
   34cdc:	str	r1, [r0, #12]
   34cde:	ldr	r1, [r2, #16]
   34ce0:	str	r1, [r0, #16]
   34ce2:	ldr	r1, [r2, #20]
   34ce4:	str	r1, [r0, #20]
   34ce6:	ldr	r1, [r2, #24]
   34ce8:	str	r1, [r0, #24]
   34cea:	ldr	r2, [r2, #28]
   34cec:	str	r2, [r0, #28]
   34cee:	mov	r0, r3
   34cf0:	bx	lr
   34cf2:	movs	r0, #1
   34cf4:	bx	lr
   34cf6:	nop
   34cf8:	asrs	r2, r6, #20
   34cfa:	movs	r3, r0

00034cfc <SHA224Result@@Base>:
   34cfc:	cbz	r0, 34d08 <SHA224Result@@Base+0xc>
   34cfe:	cbz	r1, 34d08 <SHA224Result@@Base+0xc>
   34d00:	ldr	r3, [r0, #112]	; 0x70
   34d02:	cbnz	r3, 34d0a <SHA224Result@@Base+0xe>
   34d04:	movs	r2, #28
   34d06:	b.n	34c72 <XXH64_hashFromCanonical@@Base+0x210>
   34d08:	movs	r3, #1
   34d0a:	mov	r0, r3
   34d0c:	bx	lr

00034d0e <SHA256Reset@@Base>:
   34d0e:	cbz	r0, 34d44 <SHA256Reset@@Base+0x36>
   34d10:	ldr	r2, [pc, #52]	; (34d48 <SHA256Reset@@Base+0x3a>)
   34d12:	movs	r3, #0
   34d14:	strd	r3, r3, [r0, #32]
   34d18:	add	r2, pc
   34d1a:	strh	r3, [r0, #40]	; 0x28
   34d1c:	strd	r3, r3, [r0, #108]	; 0x6c
   34d20:	ldr	r1, [r2, #32]
   34d22:	str	r1, [r0, #0]
   34d24:	ldr	r1, [r2, #36]	; 0x24
   34d26:	str	r1, [r0, #4]
   34d28:	ldr	r1, [r2, #40]	; 0x28
   34d2a:	str	r1, [r0, #8]
   34d2c:	ldr	r1, [r2, #44]	; 0x2c
   34d2e:	str	r1, [r0, #12]
   34d30:	ldr	r1, [r2, #48]	; 0x30
   34d32:	str	r1, [r0, #16]
   34d34:	ldr	r1, [r2, #52]	; 0x34
   34d36:	str	r1, [r0, #20]
   34d38:	ldr	r1, [r2, #56]	; 0x38
   34d3a:	str	r1, [r0, #24]
   34d3c:	ldr	r2, [r2, #60]	; 0x3c
   34d3e:	str	r2, [r0, #28]
   34d40:	mov	r0, r3
   34d42:	bx	lr
   34d44:	movs	r0, #1
   34d46:	bx	lr
   34d48:	asrs	r0, r4, #19
   34d4a:	movs	r3, r0

00034d4c <SHA256Input@@Base>:
   34d4c:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   34d50:	mov	r4, r0
   34d52:	cmp	r0, #0
   34d54:	beq.n	34dc2 <SHA256Input@@Base+0x76>
   34d56:	cmp	r2, #0
   34d58:	beq.n	34dbe <SHA256Input@@Base+0x72>
   34d5a:	cmp	r1, #0
   34d5c:	beq.n	34dc2 <SHA256Input@@Base+0x76>
   34d5e:	ldr	r3, [r0, #108]	; 0x6c
   34d60:	cbz	r3, 34d6a <SHA256Input@@Base+0x1e>
   34d62:	movs	r0, #3
   34d64:	str	r0, [r4, #112]	; 0x70
   34d66:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   34d6a:	ldr	r0, [r0, #112]	; 0x70
   34d6c:	cmp	r0, #0
   34d6e:	bne.n	34d66 <SHA256Input@@Base+0x1a>
   34d70:	adds	r6, r1, r2
   34d72:	mov	r5, r1
   34d74:	movs	r7, #8
   34d76:	mov.w	r8, #2
   34d7a:	cmp	r5, r6
   34d7c:	bne.n	34d82 <SHA256Input@@Base+0x36>
   34d7e:	ldr	r0, [r4, #112]	; 0x70
   34d80:	b.n	34d66 <SHA256Input@@Base+0x1a>
   34d82:	ldrsh.w	r3, [r4, #40]	; 0x28
   34d86:	adds	r2, r3, #1
   34d88:	add	r3, r4
   34d8a:	sxth	r2, r2
   34d8c:	strh	r2, [r4, #40]	; 0x28
   34d8e:	ldrb.w	r1, [r5], #1
   34d92:	strb.w	r1, [r3, #42]	; 0x2a
   34d96:	ldr	r3, [r4, #36]	; 0x24
   34d98:	adds	r3, r3, r7
   34d9a:	str	r3, [r4, #36]	; 0x24
   34d9c:	bcc.n	34dac <SHA256Input@@Base+0x60>
   34d9e:	ldr	r3, [r4, #32]
   34da0:	adds	r3, #1
   34da2:	str	r3, [r4, #32]
   34da4:	cbnz	r3, 34dac <SHA256Input@@Base+0x60>
   34da6:	str.w	r8, [r4, #112]	; 0x70
   34daa:	b.n	34d7a <SHA256Input@@Base+0x2e>
   34dac:	ldr	r3, [r4, #112]	; 0x70
   34dae:	cmp	r3, #0
   34db0:	bne.n	34d7a <SHA256Input@@Base+0x2e>
   34db2:	cmp	r2, #64	; 0x40
   34db4:	bne.n	34d7a <SHA256Input@@Base+0x2e>
   34db6:	mov	r0, r4
   34db8:	bl	34a6c <XXH64_hashFromCanonical@@Base+0xa>
   34dbc:	b.n	34d7a <SHA256Input@@Base+0x2e>
   34dbe:	mov	r0, r2
   34dc0:	b.n	34d66 <SHA256Input@@Base+0x1a>
   34dc2:	movs	r0, #1
   34dc4:	b.n	34d66 <SHA256Input@@Base+0x1a>

00034dc6 <SHA224Input@@Base>:
   34dc6:	b.w	34d4c <SHA256Input@@Base>

00034dca <SHA256FinalBits@@Base>:
   34dca:	push	{r4, lr}
   34dcc:	mov	r4, r0
   34dce:	cbz	r0, 34e34 <SHA256FinalBits@@Base+0x6a>
   34dd0:	cbz	r2, 34e38 <SHA256FinalBits@@Base+0x6e>
   34dd2:	ldr	r0, [r0, #112]	; 0x70
   34dd4:	cbnz	r0, 34dde <SHA256FinalBits@@Base+0x14>
   34dd6:	ldr	r0, [r4, #108]	; 0x6c
   34dd8:	cbz	r0, 34de0 <SHA256FinalBits@@Base+0x16>
   34dda:	movs	r0, #3
   34ddc:	str	r0, [r4, #112]	; 0x70
   34dde:	pop	{r4, pc}
   34de0:	cmp	r2, #7
   34de2:	bls.n	34de8 <SHA256FinalBits@@Base+0x1e>
   34de4:	movs	r0, #4
   34de6:	b.n	34ddc <SHA256FinalBits@@Base+0x12>
   34de8:	ldr	r3, [r4, #36]	; 0x24
   34dea:	adds	r3, r2, r3
   34dec:	str	r3, [r4, #36]	; 0x24
   34dee:	bcc.n	34dfc <SHA256FinalBits@@Base+0x32>
   34df0:	ldr	r3, [r4, #32]
   34df2:	adds	r3, #1
   34df4:	str	r3, [r4, #32]
   34df6:	cmp	r3, #0
   34df8:	it	eq
   34dfa:	moveq	r0, #2
   34dfc:	ldr	r3, [pc, #60]	; (34e3c <SHA256FinalBits@@Base+0x72>)
   34dfe:	str	r0, [r4, #112]	; 0x70
   34e00:	mov	r0, r4
   34e02:	add	r3, pc
   34e04:	add	r2, r3
   34e06:	ldrb.w	r3, [r2, #256]	; 0x100
   34e0a:	ands	r1, r3
   34e0c:	ldrb.w	r3, [r2, #264]	; 0x108
   34e10:	orrs	r1, r3
   34e12:	bl	34bf4 <XXH64_hashFromCanonical@@Base+0x192>
   34e16:	add.w	r2, r4, #42	; 0x2a
   34e1a:	add.w	r1, r4, #106	; 0x6a
   34e1e:	movs	r3, #0
   34e20:	strb.w	r3, [r2], #1
   34e24:	cmp	r1, r2
   34e26:	bne.n	34e20 <SHA256FinalBits@@Base+0x56>
   34e28:	strd	r3, r3, [r4, #32]
   34e2c:	movs	r3, #1
   34e2e:	ldr	r0, [r4, #112]	; 0x70
   34e30:	str	r3, [r4, #108]	; 0x6c
   34e32:	b.n	34dde <SHA256FinalBits@@Base+0x14>
   34e34:	movs	r0, #1
   34e36:	b.n	34dde <SHA256FinalBits@@Base+0x14>
   34e38:	mov	r0, r2
   34e3a:	b.n	34dde <SHA256FinalBits@@Base+0x14>
   34e3c:	vaddl.s16	q0, d2, d1

00034e40 <SHA224FinalBits@@Base>:
   34e40:	b.w	34dca <SHA256FinalBits@@Base>

00034e44 <SHA256Result@@Base>:
   34e44:	cbz	r0, 34e50 <SHA256Result@@Base+0xc>
   34e46:	cbz	r1, 34e50 <SHA256Result@@Base+0xc>
   34e48:	ldr	r3, [r0, #112]	; 0x70
   34e4a:	cbnz	r3, 34e52 <SHA256Result@@Base+0xe>
   34e4c:	movs	r2, #32
   34e4e:	b.n	34c72 <XXH64_hashFromCanonical@@Base+0x210>
   34e50:	movs	r3, #1
   34e52:	mov	r0, r3
   34e54:	bx	lr
   34e56:	nop
   34e58:	mov	r3, r0
   34e5a:	ldr	r0, [r0, #0]
   34e5c:	ldr	r1, [r3, #4]
   34e5e:	bx	lr
   34e60:	ldr	r2, [pc, #952]	; (3521c <SHA256Result@@Base+0x3d8>)
   34e62:	ldr	r3, [pc, #956]	; (35220 <SHA256Result@@Base+0x3dc>)
   34e64:	add	r2, pc
   34e66:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34e6a:	sub.w	sp, sp, #540	; 0x21c
   34e6e:	ldr	r3, [r2, r3]
   34e70:	add	r5, sp, #272	; 0x110
   34e72:	add.w	r7, r1, #128	; 0x80
   34e76:	mov	fp, r0
   34e78:	ldr	r3, [r3, #0]
   34e7a:	str	r3, [sp, #532]	; 0x214
   34e7c:	mov.w	r3, #0
   34e80:	mov	r2, r1
   34e82:	mov	r4, r5
   34e84:	mov	r0, r2
   34e86:	bl	34e58 <SHA256Result@@Base+0x14>
   34e8a:	adds	r2, #8
   34e8c:	strd	r0, r1, [r5], #8
   34e90:	cmp	r2, r7
   34e92:	bne.n	34e84 <SHA256Result@@Base+0x40>
   34e94:	sub.w	r3, fp, #8
   34e98:	str	r3, [sp, #132]	; 0x84
   34e9a:	add	r3, sp, #400	; 0x190
   34e9c:	str	r3, [sp, #136]	; 0x88
   34e9e:	ldrd	r1, r0, [sp, #132]	; 0x84
   34ea2:	add.w	r3, fp, #56	; 0x38
   34ea6:	str	r3, [sp, #140]	; 0x8c
   34ea8:	ldrd	r2, r3, [r1, #8]!
   34eac:	strd	r2, r3, [r0], #8
   34eb0:	ldr	r3, [sp, #140]	; 0x8c
   34eb2:	cmp	r1, r3
   34eb4:	bne.n	34ea8 <SHA256Result@@Base+0x64>
   34eb6:	ldr	r3, [sp, #272]	; 0x110
   34eb8:	ldrd	r8, r0, [sp, #432]	; 0x1b0
   34ebc:	ldr	r7, [sp, #400]	; 0x190
   34ebe:	str	r3, [sp, #4]
   34ec0:	ldr	r3, [sp, #276]	; 0x114
   34ec2:	adds.w	r7, r8, r7
   34ec6:	ldr	r6, [r4, #8]
   34ec8:	str	r3, [sp, #8]
   34eca:	ldr	r3, [sp, #404]	; 0x194
   34ecc:	str	r6, [sp, #12]
   34ece:	adc.w	r9, r0, r3
   34ed2:	ldr	r3, [sp, #4]
   34ed4:	ldr	r6, [r4, #12]
   34ed6:	adds	r7, r7, r3
   34ed8:	ldr	r3, [sp, #8]
   34eda:	adc.w	r9, r9, r3
   34ede:	ldrd	r3, r2, [fp, #64]	; 0x40
   34ee2:	str	r6, [sp, #16]
   34ee4:	eor.w	r2, r9, r2
   34ee8:	eor.w	r5, r7, r3
   34eec:	eor.w	r1, r2, #1358954496	; 0x51000000
   34ef0:	eor.w	r3, r5, #2902458368	; 0xad000000
   34ef4:	eor.w	r1, r1, #937984	; 0xe5000
   34ef8:	ldr	r2, [pc, #768]	; (351fc <SHA256Result@@Base+0x3b8>)
   34efa:	eor.w	r1, r1, #636	; 0x27c
   34efe:	eor.w	r3, r3, #15073280	; 0xe60000
   34f02:	eor.w	r1, r1, #3
   34f06:	ldr	r5, [pc, #760]	; (35200 <SHA256Result@@Base+0x3bc>)
   34f08:	eor.w	r3, r3, #33280	; 0x8200
   34f0c:	adds	r2, r1, r2
   34f0e:	eor.w	r3, r3, #209	; 0xd1
   34f12:	eor.w	r8, r8, r2
   34f16:	adc.w	r5, r3, r5
   34f1a:	ldr	r6, [sp, #12]
   34f1c:	eor.w	ip, r0, r5
   34f20:	mov.w	sl, r8, lsr #24
   34f24:	adds	r7, r7, r6
   34f26:	ldr	r6, [sp, #16]
   34f28:	orr.w	lr, sl, ip, lsl #8
   34f2c:	mov.w	r0, ip, lsr #24
   34f30:	orr.w	r0, r0, r8, lsl #8
   34f34:	adc.w	r9, r9, r6
   34f38:	adds.w	r6, r7, lr
   34f3c:	str	r6, [sp, #76]	; 0x4c
   34f3e:	adc.w	r6, r9, r0
   34f42:	str	r6, [sp, #80]	; 0x50
   34f44:	ldr	r6, [sp, #76]	; 0x4c
   34f46:	eors	r1, r6
   34f48:	ldr	r6, [sp, #80]	; 0x50
   34f4a:	eors	r3, r6
   34f4c:	lsrs	r7, r1, #16
   34f4e:	orr.w	r6, r7, r3, lsl #16
   34f52:	lsrs	r3, r3, #16
   34f54:	orr.w	r3, r3, r1, lsl #16
   34f58:	str	r3, [sp, #168]	; 0xa8
   34f5a:	adds	r3, r2, r6
   34f5c:	str	r3, [sp, #108]	; 0x6c
   34f5e:	ldr	r3, [sp, #168]	; 0xa8
   34f60:	str	r6, [sp, #104]	; 0x68
   34f62:	adc.w	r3, r5, r3
   34f66:	str	r3, [sp, #112]	; 0x70
   34f68:	ldr	r3, [sp, #108]	; 0x6c
   34f6a:	eor.w	lr, r3, lr
   34f6e:	ldr	r3, [sp, #112]	; 0x70
   34f70:	eors	r0, r3
   34f72:	lsls	r3, r0, #1
   34f74:	orr.w	r3, r3, lr, lsr #31
   34f78:	mov.w	lr, lr, lsl #1
   34f7c:	str	r3, [sp, #196]	; 0xc4
   34f7e:	orr.w	r3, lr, r0, lsr #31
   34f82:	str	r3, [sp, #192]	; 0xc0
   34f84:	ldrd	r9, ip, [sp, #440]	; 0x1b8
   34f88:	ldr	r3, [r4, #16]
   34f8a:	ldr	r2, [sp, #408]	; 0x198
   34f8c:	ldr	r7, [sp, #412]	; 0x19c
   34f8e:	str	r3, [sp, #20]
   34f90:	adds.w	r2, r9, r2
   34f94:	ldr	r3, [r4, #20]
   34f96:	adc.w	r7, ip, r7
   34f9a:	ldr	r6, [r4, #24]
   34f9c:	str	r3, [sp, #24]
   34f9e:	ldr	r3, [sp, #20]
   34fa0:	str	r6, [sp, #28]
   34fa2:	adds	r2, r2, r3
   34fa4:	ldr	r3, [sp, #24]
   34fa6:	ldr	r6, [r4, #28]
   34fa8:	adc.w	r7, r3, r7
   34fac:	ldrd	r3, r1, [fp, #72]	; 0x48
   34fb0:	eor.w	r0, r7, r1
   34fb4:	eors	r3, r2
   34fb6:	eor.w	r5, r0, #2600468480	; 0x9b000000
   34fba:	eor.w	r1, r3, #721420288	; 0x2b000000
   34fbe:	eor.w	r5, r5, #354304	; 0x56800
   34fc2:	ldr	r3, [pc, #576]	; (35204 <SHA256Result@@Base+0x3c0>)
   34fc4:	eor.w	r1, r1, #4079616	; 0x3e4000
   34fc8:	eor.w	r5, r5, #140	; 0x8c
   34fcc:	ldr	r0, [pc, #568]	; (35208 <SHA256Result@@Base+0x3c4>)
   34fce:	eor.w	r1, r1, #11264	; 0x2c00
   34fd2:	adds	r3, r5, r3
   34fd4:	eor.w	r1, r1, #31
   34fd8:	adc.w	r0, r1, r0
   34fdc:	eor.w	r9, r9, r3
   34fe0:	str	r6, [sp, #32]
   34fe2:	eor.w	ip, ip, r0
   34fe6:	ldr	r6, [sp, #28]
   34fe8:	mov.w	sl, r9, lsr #24
   34fec:	orr.w	r8, sl, ip, lsl #8
   34ff0:	mov.w	ip, ip, lsr #24
   34ff4:	adds	r2, r2, r6
   34ff6:	ldr	r6, [sp, #32]
   34ff8:	orr.w	lr, ip, r9, lsl #8
   34ffc:	adc.w	r7, r6, r7
   35000:	adds.w	r2, r2, r8
   35004:	str	r2, [sp, #92]	; 0x5c
   35006:	adc.w	r2, r7, lr
   3500a:	str	r2, [sp, #96]	; 0x60
   3500c:	ldr	r2, [sp, #92]	; 0x5c
   3500e:	eors	r5, r2
   35010:	ldr	r2, [sp, #96]	; 0x60
   35012:	eors	r1, r2
   35014:	lsrs	r2, r5, #16
   35016:	orr.w	r2, r2, r1, lsl #16
   3501a:	lsrs	r1, r1, #16
   3501c:	str	r2, [sp, #184]	; 0xb8
   3501e:	orr.w	r2, r1, r5, lsl #16
   35022:	str	r2, [sp, #188]	; 0xbc
   35024:	ldr	r2, [sp, #184]	; 0xb8
   35026:	adds	r3, r3, r2
   35028:	str	r3, [sp, #124]	; 0x7c
   3502a:	ldr	r3, [sp, #188]	; 0xbc
   3502c:	adc.w	r3, r0, r3
   35030:	str	r3, [sp, #128]	; 0x80
   35032:	ldr	r3, [sp, #124]	; 0x7c
   35034:	eor.w	r8, r3, r8
   35038:	ldr	r3, [sp, #128]	; 0x80
   3503a:	eor.w	lr, r3, lr
   3503e:	mov.w	r3, lr, lsl #1
   35042:	orr.w	r3, r3, r8, lsr #31
   35046:	mov.w	r8, r8, lsl #1
   3504a:	str	r3, [sp, #88]	; 0x58
   3504c:	orr.w	r3, r8, lr, lsr #31
   35050:	str	r3, [sp, #84]	; 0x54
   35052:	ldrd	r8, r7, [sp, #448]	; 0x1c0
   35056:	ldr	r3, [r4, #32]
   35058:	ldr	r2, [sp, #420]	; 0x1a4
   3505a:	ldr	r6, [r4, #40]	; 0x28
   3505c:	str	r3, [sp, #36]	; 0x24
   3505e:	ldr	r3, [r4, #36]	; 0x24
   35060:	ldr	r1, [sp, #36]	; 0x24
   35062:	str	r6, [sp, #44]	; 0x2c
   35064:	str	r3, [sp, #40]	; 0x28
   35066:	ldr	r3, [sp, #416]	; 0x1a0
   35068:	ldr	r6, [r4, #44]	; 0x2c
   3506a:	adds.w	r3, r8, r3
   3506e:	adc.w	r2, r7, r2
   35072:	adds	r3, r3, r1
   35074:	ldr	r1, [sp, #40]	; 0x28
   35076:	str	r6, [sp, #48]	; 0x30
   35078:	adc.w	ip, r2, r1
   3507c:	ldrd	r2, r1, [fp, #80]	; 0x50
   35080:	ldr	r6, [sp, #44]	; 0x2c
   35082:	eor.w	r5, ip, r1
   35086:	eors	r2, r3
   35088:	eor.w	r0, r5, #528482304	; 0x1f800000
   3508c:	eor.w	r1, r2, #4211081216	; 0xfb000000
   35090:	eor.w	r0, r0, #251904	; 0x3d800
   35094:	ldr	r2, [pc, #372]	; (3520c <SHA256Result@@Base+0x3c8>)
   35096:	eor.w	r0, r0, #426	; 0x1aa
   3509a:	eor.w	r1, r1, #4292608	; 0x418000
   3509e:	eor.w	r0, r0, #1
   350a2:	ldr	r5, [pc, #364]	; (35210 <SHA256Result@@Base+0x3cc>)
   350a4:	eor.w	r1, r1, #15680	; 0x3d40
   350a8:	adds	r2, r0, r2
   350aa:	eor.w	r1, r1, #43	; 0x2b
   350ae:	eor.w	r8, r8, r2
   350b2:	adc.w	r5, r1, r5
   350b6:	adds	r3, r3, r6
   350b8:	eor.w	lr, r7, r5
   350bc:	ldr	r6, [sp, #48]	; 0x30
   350be:	mov.w	sl, r8, lsr #24
   350c2:	orr.w	r7, sl, lr, lsl #8
   350c6:	mov.w	lr, lr, lsr #24
   350ca:	orr.w	r9, lr, r8, lsl #8
   350ce:	adc.w	ip, ip, r6
   350d2:	adds	r3, r3, r7
   350d4:	str	r3, [sp, #116]	; 0x74
   350d6:	adc.w	r3, ip, r9
   350da:	str	r3, [sp, #120]	; 0x78
   350dc:	ldr	r3, [sp, #116]	; 0x74
   350de:	ldrd	sl, r8, [sp, #456]	; 0x1c8
   350e2:	eors	r0, r3
   350e4:	ldr	r3, [sp, #120]	; 0x78
   350e6:	eors	r1, r3
   350e8:	lsrs	r3, r0, #16
   350ea:	orr.w	r3, r3, r1, lsl #16
   350ee:	lsrs	r1, r1, #16
   350f0:	str	r3, [sp, #200]	; 0xc8
   350f2:	orr.w	r3, r1, r0, lsl #16
   350f6:	str	r3, [sp, #204]	; 0xcc
   350f8:	ldr	r3, [sp, #200]	; 0xc8
   350fa:	adds	r2, r2, r3
   350fc:	ldr	r3, [sp, #204]	; 0xcc
   350fe:	eor.w	r7, r7, r2
   35102:	adc.w	r5, r3, r5
   35106:	eor.w	r9, r5, r9
   3510a:	mov.w	r3, r9, lsl #1
   3510e:	orr.w	r3, r3, r7, lsr #31
   35112:	lsls	r7, r7, #1
   35114:	str	r3, [sp, #176]	; 0xb0
   35116:	orr.w	r3, r7, r9, lsr #31
   3511a:	str	r3, [sp, #172]	; 0xac
   3511c:	ldr	r3, [r4, #48]	; 0x30
   3511e:	str	r3, [sp, #52]	; 0x34
   35120:	ldr	r3, [r4, #52]	; 0x34
   35122:	str	r3, [sp, #56]	; 0x38
   35124:	ldr	r1, [sp, #424]	; 0x1a8
   35126:	ldr	r3, [sp, #428]	; 0x1ac
   35128:	adds.w	r1, sl, r1
   3512c:	adc.w	r9, r8, r3
   35130:	ldr	r3, [sp, #52]	; 0x34
   35132:	adds	r1, r1, r3
   35134:	ldr	r3, [sp, #56]	; 0x38
   35136:	adc.w	r9, r9, r3
   3513a:	ldrd	r3, r0, [fp, #88]	; 0x58
   3513e:	eor.w	r0, r9, r0
   35142:	eors	r3, r1
   35144:	eor.w	r7, r0, #1535115264	; 0x5b800000
   35148:	eor.w	r6, r3, #325058560	; 0x13600000
   3514c:	eor.w	r7, r7, #6324224	; 0x608000
   35150:	ldr	r3, [pc, #192]	; (35214 <SHA256Result@@Base+0x3d0>)
   35152:	eor.w	r7, r7, #19712	; 0x4d00
   35156:	eor.w	r6, r6, #1974272	; 0x1e2000
   3515a:	eor.w	r7, r7, #25
   3515e:	ldr	r0, [pc, #184]	; (35218 <SHA256Result@@Base+0x3d4>)
   35160:	adds	r3, r7, r3
   35162:	str	r3, [sp, #68]	; 0x44
   35164:	eor.w	sl, sl, r3
   35168:	ldr	r3, [r4, #56]	; 0x38
   3516a:	eor.w	r6, r6, #376	; 0x178
   3516e:	eor.w	r6, r6, #1
   35172:	mov.w	fp, sl, lsr #24
   35176:	str	r3, [sp, #60]	; 0x3c
   35178:	adc.w	r0, r6, r0
   3517c:	ldr	r3, [r4, #60]	; 0x3c
   3517e:	eor.w	r8, r8, r0
   35182:	orr.w	ip, fp, r8, lsl #8
   35186:	mov.w	lr, r8, lsr #24
   3518a:	str	r3, [sp, #64]	; 0x40
   3518c:	orr.w	lr, lr, sl, lsl #8
   35190:	ldr	r3, [sp, #60]	; 0x3c
   35192:	adds	r1, r1, r3
   35194:	ldr	r3, [sp, #64]	; 0x40
   35196:	adc.w	r9, r9, r3
   3519a:	adds.w	r3, r1, ip
   3519e:	str	r3, [sp, #144]	; 0x90
   351a0:	adc.w	r3, r9, lr
   351a4:	str	r3, [sp, #148]	; 0x94
   351a6:	ldr	r3, [sp, #144]	; 0x90
   351a8:	eors	r7, r3
   351aa:	ldr	r3, [sp, #148]	; 0x94
   351ac:	eors	r6, r3
   351ae:	lsrs	r1, r7, #16
   351b0:	ldr	r3, [sp, #68]	; 0x44
   351b2:	orr.w	r8, r1, r6, lsl #16
   351b6:	lsrs	r6, r6, #16
   351b8:	adds.w	r3, r3, r8
   351bc:	orr.w	sl, r6, r7, lsl #16
   351c0:	adc.w	r0, r0, sl
   351c4:	eor.w	ip, r3, ip
   351c8:	eor.w	lr, r0, lr
   351cc:	str	r3, [sp, #100]	; 0x64
   351ce:	mov.w	r1, lr, lsl #1
   351d2:	orr.w	fp, r1, ip, lsr #31
   351d6:	mov.w	ip, ip, lsl #1
   351da:	orr.w	r1, ip, lr, lsr #31
   351de:	str	r1, [sp, #208]	; 0xd0
   351e0:	ldr	r1, [r4, #64]	; 0x40
   351e2:	str	r1, [sp, #68]	; 0x44
   351e4:	ldr	r1, [r4, #68]	; 0x44
   351e6:	ldr	r6, [sp, #68]	; 0x44
   351e8:	str	r1, [sp, #72]	; 0x48
   351ea:	ldr	r1, [sp, #76]	; 0x4c
   351ec:	ldr	r7, [sp, #72]	; 0x48
   351ee:	adds	r1, r1, r6
   351f0:	ldr	r6, [sp, #80]	; 0x50
   351f2:	adc.w	r9, r6, r7
   351f6:	ldr	r6, [sp, #84]	; 0x54
   351f8:	adds	r1, r1, r6
   351fa:	b.n	35224 <SHA256Result@@Base+0x3e0>
   351fc:	ldmia	r1!, {r3}
   351fe:	bfcsel	e, 35ece <SHA256Result@@Base+0x108a>, 10, <und>
   35202:	ldr	r1, [r1, #32]
   35204:	add	r7, pc, #236	; (adr r7, 352f4 <SHA256Result@@Base+0x4b0>)
   35206:	strh	r2, [r1, #38]	; 0x26
   35208:	add	r6, sp, #532	; 0x214
   3520a:	cbnz	r7, 35266 <SHA256Result@@Base+0x422>
   3520c:	strht	pc, [fp, #148]
   35210:			; <UNDEFINED> instruction: 0xf3723c6e
   35214:	adds	r6, #241	; 0xf1
   35216:	ldrsh	r5, [r3, r4]
   35218:	bmi.w	fffafcba <__bss_end__@@Base+0xfff49a2a>
   3521c:	vhadd.u32	d0, d4, d2
   35220:	lsls	r4, r4, #8
   35222:	movs	r0, r0
   35224:	ldr	r6, [sp, #88]	; 0x58
   35226:	eor.w	r7, r1, r8
   3522a:	adc.w	r9, r9, r6
   3522e:	ldr	r6, [sp, #84]	; 0x54
   35230:	eor.w	lr, r9, sl
   35234:	adds.w	r2, r2, lr
   35238:	eor.w	r8, r2, r6
   3523c:	ldr	r6, [sp, #88]	; 0x58
   3523e:	ldr	r3, [r4, #72]	; 0x48
   35240:	adc.w	r5, r7, r5
   35244:	eor.w	ip, r5, r6
   35248:	mov.w	r6, r8, lsr #24
   3524c:	str	r3, [sp, #76]	; 0x4c
   3524e:	orr.w	r6, r6, ip, lsl #8
   35252:	ldr	r3, [r4, #76]	; 0x4c
   35254:	mov.w	ip, ip, lsr #24
   35258:	orr.w	sl, ip, r8, lsl #8
   3525c:	str	r3, [sp, #80]	; 0x50
   3525e:	ldr	r3, [sp, #76]	; 0x4c
   35260:	adds	r1, r1, r3
   35262:	ldr	r3, [sp, #80]	; 0x50
   35264:	adc.w	r9, r9, r3
   35268:	adds	r3, r1, r6
   3526a:	str	r3, [sp, #152]	; 0x98
   3526c:	adc.w	r3, r9, sl
   35270:	str	r3, [sp, #156]	; 0x9c
   35272:	ldr	r3, [sp, #152]	; 0x98
   35274:	eor.w	lr, r3, lr
   35278:	ldr	r3, [sp, #156]	; 0x9c
   3527a:	eors	r7, r3
   3527c:	mov.w	r1, lr, lsr #16
   35280:	orr.w	r3, r1, r7, lsl #16
   35284:	lsrs	r7, r7, #16
   35286:	str	r3, [sp, #212]	; 0xd4
   35288:	orr.w	r3, r7, lr, lsl #16
   3528c:	str	r3, [sp, #216]	; 0xd8
   3528e:	ldr	r3, [sp, #212]	; 0xd4
   35290:	adds	r3, r2, r3
   35292:	str	r3, [sp, #160]	; 0xa0
   35294:	ldr	r3, [sp, #216]	; 0xd8
   35296:	adc.w	r3, r5, r3
   3529a:	str	r3, [sp, #164]	; 0xa4
   3529c:	ldr	r3, [sp, #160]	; 0xa0
   3529e:	eors	r6, r3
   352a0:	ldr	r3, [sp, #164]	; 0xa4
   352a2:	eor.w	sl, r3, sl
   352a6:	mov.w	r2, sl, lsl #1
   352aa:	orr.w	r3, r2, r6, lsr #31
   352ae:	lsls	r6, r6, #1
   352b0:	str	r3, [sp, #224]	; 0xe0
   352b2:	orr.w	r3, r6, sl, lsr #31
   352b6:	str	r3, [sp, #220]	; 0xdc
   352b8:	ldr	r3, [r4, #80]	; 0x50
   352ba:	str	r3, [sp, #84]	; 0x54
   352bc:	ldr	r3, [r4, #84]	; 0x54
   352be:	ldr	r2, [sp, #84]	; 0x54
   352c0:	str	r3, [sp, #88]	; 0x58
   352c2:	ldr	r3, [sp, #92]	; 0x5c
   352c4:	ldr	r1, [sp, #88]	; 0x58
   352c6:	adds	r2, r3, r2
   352c8:	ldr	r3, [sp, #96]	; 0x60
   352ca:	adc.w	r6, r3, r1
   352ce:	ldr	r3, [sp, #172]	; 0xac
   352d0:	adds	r2, r2, r3
   352d2:	ldr	r3, [sp, #176]	; 0xb0
   352d4:	adc.w	r6, r3, r6
   352d8:	ldr	r3, [sp, #168]	; 0xa8
   352da:	eor.w	r5, r6, r3
   352de:	ldr	r3, [sp, #104]	; 0x68
   352e0:	eor.w	r1, r2, r3
   352e4:	ldr	r3, [sp, #100]	; 0x64
   352e6:	ldr	r7, [sp, #172]	; 0xac
   352e8:	adds.w	sl, r3, r5
   352ec:	ldr	r3, [r4, #88]	; 0x58
   352ee:	eor.w	r8, sl, r7
   352f2:	ldr	r7, [sp, #176]	; 0xb0
   352f4:	adc.w	r0, r1, r0
   352f8:	str	r3, [sp, #92]	; 0x5c
   352fa:	eor.w	ip, r0, r7
   352fe:	ldr	r3, [r4, #92]	; 0x5c
   35300:	mov.w	r9, r8, lsr #24
   35304:	orr.w	r7, r9, ip, lsl #8
   35308:	mov.w	ip, ip, lsr #24
   3530c:	orr.w	lr, ip, r8, lsl #8
   35310:	str	r3, [sp, #96]	; 0x60
   35312:	ldr	r3, [sp, #92]	; 0x5c
   35314:	adds	r2, r2, r3
   35316:	ldr	r3, [sp, #96]	; 0x60
   35318:	adc.w	r6, r3, r6
   3531c:	adds	r3, r2, r7
   3531e:	str	r3, [sp, #168]	; 0xa8
   35320:	adc.w	r3, r6, lr
   35324:	str	r3, [sp, #172]	; 0xac
   35326:	ldr	r3, [sp, #168]	; 0xa8
   35328:	eors	r5, r3
   3532a:	ldr	r3, [sp, #172]	; 0xac
   3532c:	eors	r1, r3
   3532e:	lsrs	r2, r5, #16
   35330:	orr.w	r3, r2, r1, lsl #16
   35334:	lsrs	r1, r1, #16
   35336:	str	r3, [sp, #228]	; 0xe4
   35338:	orr.w	r3, r1, r5, lsl #16
   3533c:	str	r3, [sp, #232]	; 0xe8
   3533e:	ldr	r3, [sp, #228]	; 0xe4
   35340:	adds.w	r3, sl, r3
   35344:	str	r3, [sp, #176]	; 0xb0
   35346:	ldr	r3, [sp, #232]	; 0xe8
   35348:	adc.w	r3, r0, r3
   3534c:	str	r3, [sp, #180]	; 0xb4
   3534e:	ldr	r3, [sp, #176]	; 0xb0
   35350:	eors	r7, r3
   35352:	ldr	r3, [sp, #180]	; 0xb4
   35354:	eor.w	lr, r3, lr
   35358:	mov.w	r3, lr, lsl #1
   3535c:	orr.w	r3, r3, r7, lsr #31
   35360:	lsls	r7, r7, #1
   35362:	str	r3, [sp, #240]	; 0xf0
   35364:	orr.w	r3, r7, lr, lsr #31
   35368:	str	r3, [sp, #236]	; 0xec
   3536a:	ldr	r3, [r4, #96]	; 0x60
   3536c:	str	r3, [sp, #100]	; 0x64
   3536e:	ldr	r3, [r4, #100]	; 0x64
   35370:	ldr	r2, [sp, #100]	; 0x64
   35372:	str	r3, [sp, #104]	; 0x68
   35374:	ldr	r3, [sp, #116]	; 0x74
   35376:	ldr	r1, [sp, #104]	; 0x68
   35378:	adds	r3, r3, r2
   3537a:	ldr	r2, [sp, #120]	; 0x78
   3537c:	adc.w	ip, r2, r1
   35380:	ldr	r2, [sp, #208]	; 0xd0
   35382:	adds	r3, r3, r2
   35384:	ldr	r2, [sp, #188]	; 0xbc
   35386:	adc.w	ip, ip, fp
   3538a:	ldr	r0, [sp, #112]	; 0x70
   3538c:	eor.w	r7, ip, r2
   35390:	ldr	r2, [sp, #184]	; 0xb8
   35392:	eor.w	r1, r3, r2
   35396:	ldr	r2, [sp, #108]	; 0x6c
   35398:	adds	r2, r2, r7
   3539a:	adc.w	r5, r0, r1
   3539e:	ldr	r0, [sp, #208]	; 0xd0
   353a0:	eor.w	lr, r2, r0
   353a4:	eor.w	r0, r5, fp
   353a8:	mov.w	r9, lr, lsr #24
   353ac:	orr.w	r8, r9, r0, lsl #8
   353b0:	lsrs	r0, r0, #24
   353b2:	orr.w	r6, r0, lr, lsl #8
   353b6:	ldr	r0, [r4, #104]	; 0x68
   353b8:	str	r0, [sp, #108]	; 0x6c
   353ba:	ldr	r0, [r4, #108]	; 0x6c
   353bc:	str	r0, [sp, #112]	; 0x70
   353be:	ldr	r0, [sp, #108]	; 0x6c
   353c0:	adds	r3, r3, r0
   353c2:	ldr	r0, [sp, #112]	; 0x70
   353c4:	adc.w	ip, ip, r0
   353c8:	adds.w	r3, r3, r8
   353cc:	str	r3, [sp, #184]	; 0xb8
   353ce:	adc.w	r3, ip, r6
   353d2:	str	r3, [sp, #188]	; 0xbc
   353d4:	ldr	r3, [sp, #184]	; 0xb8
   353d6:	eors	r7, r3
   353d8:	ldr	r3, [sp, #188]	; 0xbc
   353da:	eors	r1, r3
   353dc:	lsrs	r3, r7, #16
   353de:	orr.w	r3, r3, r1, lsl #16
   353e2:	lsrs	r1, r1, #16
   353e4:	str	r3, [sp, #208]	; 0xd0
   353e6:	orr.w	r3, r1, r7, lsl #16
   353ea:	str	r3, [sp, #244]	; 0xf4
   353ec:	ldr	r3, [sp, #208]	; 0xd0
   353ee:	adds	r2, r2, r3
   353f0:	ldr	r3, [sp, #244]	; 0xf4
   353f2:	eor.w	r8, r2, r8
   353f6:	adc.w	r5, r3, r5
   353fa:	eors	r6, r5
   353fc:	lsls	r3, r6, #1
   353fe:	orr.w	r3, r3, r8, lsr #31
   35402:	mov.w	r8, r8, lsl #1
   35406:	str	r3, [sp, #252]	; 0xfc
   35408:	orr.w	r3, r8, r6, lsr #31
   3540c:	str	r3, [sp, #248]	; 0xf8
   3540e:	ldr	r3, [r4, #112]	; 0x70
   35410:	str	r3, [sp, #116]	; 0x74
   35412:	ldr	r3, [r4, #116]	; 0x74
   35414:	ldr	r1, [sp, #116]	; 0x74
   35416:	str	r3, [sp, #120]	; 0x78
   35418:	ldr	r3, [sp, #144]	; 0x90
   3541a:	ldr	r0, [sp, #120]	; 0x78
   3541c:	adds	r1, r3, r1
   3541e:	ldr	r3, [sp, #148]	; 0x94
   35420:	adc.w	r9, r3, r0
   35424:	ldr	r3, [sp, #192]	; 0xc0
   35426:	adds	r1, r1, r3
   35428:	ldr	r3, [sp, #196]	; 0xc4
   3542a:	adc.w	r9, r9, r3
   3542e:	ldr	r3, [sp, #204]	; 0xcc
   35430:	eor.w	r7, r9, r3
   35434:	ldr	r3, [sp, #200]	; 0xc8
   35436:	ldr	r6, [sp, #192]	; 0xc0
   35438:	eor.w	sl, r1, r3
   3543c:	ldr	r3, [sp, #124]	; 0x7c
   3543e:	ldr	r0, [sp, #128]	; 0x80
   35440:	adds	r3, r3, r7
   35442:	eor.w	lr, r3, r6
   35446:	ldr	r6, [sp, #196]	; 0xc4
   35448:	adc.w	r0, r0, sl
   3544c:	eors	r6, r0
   3544e:	mov.w	fp, lr, lsr #24
   35452:	orr.w	ip, fp, r6, lsl #8
   35456:	lsrs	r6, r6, #24
   35458:	orr.w	r8, r6, lr, lsl #8
   3545c:	ldr	r6, [r4, #120]	; 0x78
   3545e:	ldr	r4, [r4, #124]	; 0x7c
   35460:	adds	r1, r1, r6
   35462:	str	r6, [sp, #124]	; 0x7c
   35464:	str	r4, [sp, #128]	; 0x80
   35466:	ldr	r4, [sp, #128]	; 0x80
   35468:	adc.w	r9, r9, r4
   3546c:	adds.w	r1, r1, ip
   35470:	str	r1, [sp, #144]	; 0x90
   35472:	adc.w	r1, r9, r8
   35476:	str	r1, [sp, #148]	; 0x94
   35478:	ldr	r1, [sp, #144]	; 0x90
   3547a:	eors	r7, r1
   3547c:	ldr	r1, [sp, #148]	; 0x94
   3547e:	eor.w	r1, r1, sl
   35482:	lsrs	r4, r7, #16
   35484:	orr.w	fp, r4, r1, lsl #16
   35488:	mov.w	sl, r1, lsr #16
   3548c:	adds.w	r3, r3, fp
   35490:	orr.w	sl, sl, r7, lsl #16
   35494:	adc.w	r0, r0, sl
   35498:	eor.w	ip, r3, ip
   3549c:	eor.w	r8, r0, r8
   354a0:	ldr	r4, [sp, #116]	; 0x74
   354a2:	ldr	r7, [sp, #120]	; 0x78
   354a4:	mov.w	r1, r8, lsl #1
   354a8:	str	r3, [sp, #192]	; 0xc0
   354aa:	orr.w	r6, r1, ip, lsr #31
   354ae:	ldr	r1, [sp, #152]	; 0x98
   354b0:	mov.w	ip, ip, lsl #1
   354b4:	adds	r1, r1, r4
   354b6:	ldr	r4, [sp, #156]	; 0x9c
   354b8:	orr.w	lr, ip, r8, lsr #31
   354bc:	adc.w	r9, r4, r7
   354c0:	adds.w	r1, r1, lr
   354c4:	ldr	r4, [sp, #232]	; 0xe8
   354c6:	adc.w	r9, r9, r6
   354ca:	eor.w	r7, r9, r4
   354ce:	ldr	r4, [sp, #228]	; 0xe4
   354d0:	adds	r2, r2, r7
   354d2:	eor.w	r4, r1, r4
   354d6:	eor.w	ip, r2, lr
   354da:	adc.w	r5, r4, r5
   354de:	eors	r6, r5
   354e0:	mov.w	r3, ip, lsr #24
   354e4:	orr.w	lr, r3, r6, lsl #8
   354e8:	ldr	r3, [sp, #84]	; 0x54
   354ea:	lsrs	r6, r6, #24
   354ec:	adds	r1, r3, r1
   354ee:	ldr	r3, [sp, #88]	; 0x58
   354f0:	orr.w	r8, r6, ip, lsl #8
   354f4:	adc.w	r9, r3, r9
   354f8:	adds.w	r3, r1, lr
   354fc:	str	r3, [sp, #152]	; 0x98
   354fe:	adc.w	r3, r9, r8
   35502:	str	r3, [sp, #156]	; 0x9c
   35504:	ldr	r3, [sp, #152]	; 0x98
   35506:	eors	r7, r3
   35508:	ldr	r3, [sp, #156]	; 0x9c
   3550a:	eors	r4, r3
   3550c:	lsrs	r1, r7, #16
   3550e:	orr.w	r3, r1, r4, lsl #16
   35512:	lsrs	r4, r4, #16
   35514:	str	r3, [sp, #228]	; 0xe4
   35516:	orr.w	r3, r4, r7, lsl #16
   3551a:	str	r3, [sp, #232]	; 0xe8
   3551c:	ldr	r3, [sp, #228]	; 0xe4
   3551e:	adds	r3, r2, r3
   35520:	str	r3, [sp, #196]	; 0xc4
   35522:	ldr	r3, [sp, #232]	; 0xe8
   35524:	adc.w	r3, r5, r3
   35528:	str	r3, [sp, #200]	; 0xc8
   3552a:	ldr	r3, [sp, #196]	; 0xc4
   3552c:	ldr	r1, [sp, #172]	; 0xac
   3552e:	eor.w	lr, r3, lr
   35532:	ldr	r3, [sp, #200]	; 0xc8
   35534:	ldr	r4, [sp, #220]	; 0xdc
   35536:	eor.w	r8, r3, r8
   3553a:	mov.w	r2, r8, lsl #1
   3553e:	orr.w	r3, r2, lr, lsr #31
   35542:	mov.w	lr, lr, lsl #1
   35546:	ldr	r2, [sp, #168]	; 0xa8
   35548:	str	r3, [sp, #260]	; 0x104
   3554a:	orr.w	r3, lr, r8, lsr #31
   3554e:	str	r3, [sp, #256]	; 0x100
   35550:	ldr	r3, [sp, #36]	; 0x24
   35552:	adds	r2, r3, r2
   35554:	ldr	r3, [sp, #40]	; 0x28
   35556:	adc.w	r7, r3, r1
   3555a:	ldr	r3, [sp, #220]	; 0xdc
   3555c:	adds	r2, r2, r3
   3555e:	ldr	r3, [sp, #224]	; 0xe0
   35560:	adc.w	r7, r3, r7
   35564:	ldr	r3, [sp, #244]	; 0xf4
   35566:	eor.w	r5, r7, r3
   3556a:	ldr	r3, [sp, #208]	; 0xd0
   3556c:	eor.w	r1, r2, r3
   35570:	ldr	r3, [sp, #192]	; 0xc0
   35572:	adds	r3, r3, r5
   35574:	eor.w	r6, r3, r4
   35578:	ldr	r4, [sp, #224]	; 0xe0
   3557a:	adc.w	r0, r1, r0
   3557e:	eors	r4, r0
   35580:	mov.w	r8, r6, lsr #24
   35584:	orr.w	ip, r8, r4, lsl #8
   35588:	lsrs	r4, r4, #24
   3558a:	orr.w	lr, r4, r6, lsl #8
   3558e:	ldr	r4, [sp, #68]	; 0x44
   35590:	adds	r2, r4, r2
   35592:	ldr	r4, [sp, #72]	; 0x48
   35594:	adc.w	r7, r4, r7
   35598:	adds.w	r2, r2, ip
   3559c:	str	r2, [sp, #168]	; 0xa8
   3559e:	adc.w	r2, r7, lr
   355a2:	str	r2, [sp, #172]	; 0xac
   355a4:	ldr	r2, [sp, #168]	; 0xa8
   355a6:	eors	r5, r2
   355a8:	ldr	r2, [sp, #172]	; 0xac
   355aa:	eors	r1, r2
   355ac:	lsrs	r2, r5, #16
   355ae:	orr.w	r2, r2, r1, lsl #16
   355b2:	lsrs	r1, r1, #16
   355b4:	str	r2, [sp, #208]	; 0xd0
   355b6:	orr.w	r2, r1, r5, lsl #16
   355ba:	str	r2, [sp, #220]	; 0xdc
   355bc:	ldr	r2, [sp, #208]	; 0xd0
   355be:	adds	r3, r3, r2
   355c0:	str	r3, [sp, #192]	; 0xc0
   355c2:	ldr	r3, [sp, #220]	; 0xdc
   355c4:	adc.w	r3, r0, r3
   355c8:	str	r3, [sp, #204]	; 0xcc
   355ca:	ldr	r2, [sp, #204]	; 0xcc
   355cc:	ldr	r3, [sp, #192]	; 0xc0
   355ce:	eor.w	lr, r2, lr
   355d2:	eor.w	r3, r3, ip
   355d6:	mov.w	r2, lr, lsl #1
   355da:	orr.w	r2, r2, r3, lsr #31
   355de:	mov.w	ip, r3, lsl #1
   355e2:	str	r2, [sp, #224]	; 0xe0
   355e4:	orr.w	ip, ip, lr, lsr #31
   355e8:	ldr	r3, [sp, #76]	; 0x4c
   355ea:	ldr	r2, [sp, #184]	; 0xb8
   355ec:	adds	r3, r3, r2
   355ee:	ldr	r2, [sp, #80]	; 0x50
   355f0:	ldr	r1, [sp, #188]	; 0xbc
   355f2:	adc.w	r8, r2, r1
   355f6:	ldr	r2, [sp, #236]	; 0xec
   355f8:	ldr	r1, [sp, #164]	; 0xa4
   355fa:	adds	r3, r3, r2
   355fc:	ldr	r2, [sp, #240]	; 0xf0
   355fe:	eor.w	r0, r3, fp
   35602:	adc.w	r8, r8, r2
   35606:	ldr	r2, [sp, #160]	; 0xa0
   35608:	eor.w	r6, r8, sl
   3560c:	adds	r2, r2, r6
   3560e:	adc.w	r5, r1, r0
   35612:	ldr	r1, [sp, #236]	; 0xec
   35614:	eor.w	r7, r2, r1
   35618:	ldr	r1, [sp, #240]	; 0xf0
   3561a:	eor.w	r4, r5, r1
   3561e:	mov.w	r9, r7, lsr #24
   35622:	orr.w	r1, r9, r4, lsl #8
   35626:	lsrs	r4, r4, #24
   35628:	orr.w	lr, r4, r7, lsl #8
   3562c:	ldr	r4, [sp, #124]	; 0x7c
   3562e:	adds	r3, r4, r3
   35630:	ldr	r4, [sp, #128]	; 0x80
   35632:	adc.w	r8, r4, r8
   35636:	adds	r3, r3, r1
   35638:	str	r3, [sp, #160]	; 0xa0
   3563a:	adc.w	r3, r8, lr
   3563e:	str	r3, [sp, #164]	; 0xa4
   35640:	ldr	r3, [sp, #160]	; 0xa0
   35642:	ldr	r4, [sp, #248]	; 0xf8
   35644:	eors	r6, r3
   35646:	ldr	r3, [sp, #164]	; 0xa4
   35648:	eors	r0, r3
   3564a:	lsrs	r3, r6, #16
   3564c:	orr.w	r3, r3, r0, lsl #16
   35650:	lsrs	r0, r0, #16
   35652:	str	r3, [sp, #236]	; 0xec
   35654:	orr.w	r3, r0, r6, lsl #16
   35658:	str	r3, [sp, #240]	; 0xf0
   3565a:	ldr	r3, [sp, #236]	; 0xec
   3565c:	ldr	r0, [sp, #148]	; 0x94
   3565e:	adds	r2, r2, r3
   35660:	ldr	r3, [sp, #240]	; 0xf0
   35662:	eor.w	r1, r1, r2
   35666:	adc.w	r5, r3, r5
   3566a:	eor.w	lr, r5, lr
   3566e:	mov.w	r3, lr, lsl #1
   35672:	orr.w	r3, r3, r1, lsr #31
   35676:	lsls	r1, r1, #1
   35678:	str	r3, [sp, #188]	; 0xbc
   3567a:	orr.w	r3, r1, lr, lsr #31
   3567e:	ldr	r1, [sp, #144]	; 0x90
   35680:	str	r3, [sp, #184]	; 0xb8
   35682:	ldr	r3, [sp, #108]	; 0x6c
   35684:	adds	r1, r3, r1
   35686:	ldr	r3, [sp, #112]	; 0x70
   35688:	adc.w	sl, r3, r0
   3568c:	ldr	r3, [sp, #248]	; 0xf8
   3568e:	ldr	r0, [sp, #180]	; 0xb4
   35690:	adds	r1, r1, r3
   35692:	ldr	r3, [sp, #252]	; 0xfc
   35694:	adc.w	sl, sl, r3
   35698:	ldr	r3, [sp, #216]	; 0xd8
   3569a:	eor.w	lr, sl, r3
   3569e:	ldr	r3, [sp, #212]	; 0xd4
   356a0:	eor.w	r6, r1, r3
   356a4:	ldr	r3, [sp, #176]	; 0xb0
   356a6:	adds.w	r3, r3, lr
   356aa:	eor.w	r8, r3, r4
   356ae:	ldr	r4, [sp, #252]	; 0xfc
   356b0:	adcs	r0, r6
   356b2:	eor.w	r7, r0, r4
   356b6:	mov.w	fp, r8, lsr #24
   356ba:	orr.w	r4, fp, r7, lsl #8
   356be:	lsrs	r7, r7, #24
   356c0:	orr.w	r9, r7, r8, lsl #8
   356c4:	ldr	r7, [sp, #52]	; 0x34
   356c6:	adds	r1, r7, r1
   356c8:	ldr	r7, [sp, #56]	; 0x38
   356ca:	adc.w	sl, r7, sl
   356ce:	adds	r1, r1, r4
   356d0:	str	r1, [sp, #144]	; 0x90
   356d2:	adc.w	r1, sl, r9
   356d6:	str	r1, [sp, #148]	; 0x94
   356d8:	ldr	r1, [sp, #144]	; 0x90
   356da:	eor.w	lr, r1, lr
   356de:	ldr	r1, [sp, #148]	; 0x94
   356e0:	eors	r6, r1
   356e2:	mov.w	r1, lr, lsr #16
   356e6:	orr.w	r8, r1, r6, lsl #16
   356ea:	lsrs	r6, r6, #16
   356ec:	adds.w	r3, r3, r8
   356f0:	orr.w	sl, r6, lr, lsl #16
   356f4:	adc.w	r0, r0, sl
   356f8:	eors	r4, r3
   356fa:	eor.w	r9, r0, r9
   356fe:	ldr	r6, [sp, #156]	; 0x9c
   35700:	mov.w	r1, r9, lsl #1
   35704:	orr.w	r1, r1, r4, lsr #31
   35708:	lsls	r4, r4, #1
   3570a:	orr.w	fp, r4, r9, lsr #31
   3570e:	str	r1, [sp, #212]	; 0xd4
   35710:	ldr	r4, [sp, #152]	; 0x98
   35712:	ldr	r1, [sp, #12]
   35714:	adds	r1, r1, r4
   35716:	ldr	r4, [sp, #16]
   35718:	adc.w	r9, r4, r6
   3571c:	ldr	r4, [sp, #224]	; 0xe0
   3571e:	adds.w	r1, r1, ip
   35722:	adc.w	r9, r9, r4
   35726:	eor.w	r7, r1, r8
   3572a:	eor.w	lr, r9, sl
   3572e:	adds.w	r2, r2, lr
   35732:	adc.w	r5, r7, r5
   35736:	eor.w	ip, r2, ip
   3573a:	eor.w	r6, r5, r4
   3573e:	mov.w	sl, ip, lsr #24
   35742:	orr.w	r4, sl, r6, lsl #8
   35746:	lsrs	r6, r6, #24
   35748:	orr.w	r8, r6, ip, lsl #8
   3574c:	ldr	r6, [sp, #100]	; 0x64
   3574e:	adds	r1, r6, r1
   35750:	ldr	r6, [sp, #104]	; 0x68
   35752:	adc.w	r9, r6, r9
   35756:	adds	r1, r1, r4
   35758:	str	r1, [sp, #152]	; 0x98
   3575a:	adc.w	r1, r9, r8
   3575e:	str	r1, [sp, #156]	; 0x9c
   35760:	ldr	r1, [sp, #152]	; 0x98
   35762:	eor.w	lr, r1, lr
   35766:	ldr	r1, [sp, #156]	; 0x9c
   35768:	eors	r7, r1
   3576a:	mov.w	r1, lr, lsr #16
   3576e:	orr.w	r1, r1, r7, lsl #16
   35772:	lsrs	r7, r7, #16
   35774:	str	r1, [sp, #216]	; 0xd8
   35776:	orr.w	r1, r7, lr, lsl #16
   3577a:	str	r1, [sp, #224]	; 0xe0
   3577c:	ldr	r1, [sp, #216]	; 0xd8
   3577e:	adds	r2, r2, r1
   35780:	str	r2, [sp, #176]	; 0xb0
   35782:	ldr	r2, [sp, #224]	; 0xe0
   35784:	ldr	r1, [sp, #168]	; 0xa8
   35786:	adc.w	r2, r5, r2
   3578a:	str	r2, [sp, #180]	; 0xb4
   3578c:	ldr	r2, [sp, #176]	; 0xb0
   3578e:	eors	r4, r2
   35790:	ldr	r2, [sp, #180]	; 0xb4
   35792:	eor.w	r8, r2, r8
   35796:	mov.w	r2, r8, lsl #1
   3579a:	orr.w	r2, r2, r4, lsr #31
   3579e:	lsls	r4, r4, #1
   357a0:	str	r2, [sp, #248]	; 0xf8
   357a2:	orr.w	r2, r4, r8, lsr #31
   357a6:	str	r2, [sp, #244]	; 0xf4
   357a8:	ldr	r2, [sp, #4]
   357aa:	ldr	r4, [sp, #172]	; 0xac
   357ac:	adds	r2, r2, r1
   357ae:	ldr	r1, [sp, #8]
   357b0:	adc.w	r7, r1, r4
   357b4:	ldr	r1, [sp, #184]	; 0xb8
   357b6:	adds	r2, r2, r1
   357b8:	ldr	r1, [sp, #188]	; 0xbc
   357ba:	adc.w	r7, r1, r7
   357be:	ldr	r1, [sp, #232]	; 0xe8
   357c0:	eor.w	r4, r7, r1
   357c4:	ldr	r1, [sp, #228]	; 0xe4
   357c6:	adds	r3, r3, r4
   357c8:	eor.w	r9, r2, r1
   357cc:	ldr	r1, [sp, #184]	; 0xb8
   357ce:	adc.w	r0, r0, r9
   357d2:	eor.w	ip, r3, r1
   357d6:	ldr	r1, [sp, #188]	; 0xbc
   357d8:	eor.w	r5, r0, r1
   357dc:	mov.w	lr, ip, lsr #24
   357e0:	orr.w	r1, lr, r5, lsl #8
   357e4:	lsrs	r5, r5, #24
   357e6:	orr.w	r6, r5, ip, lsl #8
   357ea:	ldr	r5, [sp, #20]
   357ec:	adds	r2, r5, r2
   357ee:	ldr	r5, [sp, #24]
   357f0:	adc.w	r7, r5, r7
   357f4:	adds	r2, r2, r1
   357f6:	str	r2, [sp, #168]	; 0xa8
   357f8:	adc.w	r2, r7, r6
   357fc:	str	r2, [sp, #172]	; 0xac
   357fe:	ldr	r2, [sp, #168]	; 0xa8
   35800:	eors	r4, r2
   35802:	ldr	r2, [sp, #172]	; 0xac
   35804:	eor.w	r2, r2, r9
   35808:	lsrs	r5, r4, #16
   3580a:	orr.w	r5, r5, r2, lsl #16
   3580e:	mov.w	r9, r2, lsr #16
   35812:	orr.w	r9, r9, r4, lsl #16
   35816:	adds	r3, r3, r5
   35818:	str	r3, [sp, #184]	; 0xb8
   3581a:	adc.w	r3, r0, r9
   3581e:	str	r3, [sp, #188]	; 0xbc
   35820:	ldr	r3, [sp, #184]	; 0xb8
   35822:	ldr	r2, [sp, #160]	; 0xa0
   35824:	eors	r1, r3
   35826:	ldr	r3, [sp, #188]	; 0xbc
   35828:	ldr	r0, [sp, #200]	; 0xc8
   3582a:	eors	r6, r3
   3582c:	str	r5, [sp, #228]	; 0xe4
   3582e:	lsls	r3, r6, #1
   35830:	orr.w	r3, r3, r1, lsr #31
   35834:	lsls	r1, r1, #1
   35836:	str	r3, [sp, #252]	; 0xfc
   35838:	orr.w	r3, r1, r6, lsr #31
   3583c:	str	r3, [sp, #232]	; 0xe8
   3583e:	ldr	r3, [sp, #92]	; 0x5c
   35840:	ldr	r1, [sp, #164]	; 0xa4
   35842:	adds	r3, r3, r2
   35844:	ldr	r2, [sp, #96]	; 0x60
   35846:	adc.w	ip, r2, r1
   3584a:	ldr	r2, [sp, #212]	; 0xd4
   3584c:	adds.w	r3, r3, fp
   35850:	adc.w	ip, ip, r2
   35854:	ldr	r2, [sp, #220]	; 0xdc
   35856:	eor.w	r7, ip, r2
   3585a:	ldr	r2, [sp, #208]	; 0xd0
   3585c:	eor.w	r1, r3, r2
   35860:	ldr	r2, [sp, #196]	; 0xc4
   35862:	adds	r2, r2, r7
   35864:	adc.w	r5, r0, r1
   35868:	ldr	r0, [sp, #212]	; 0xd4
   3586a:	eor.w	fp, r2, fp
   3586e:	eors	r0, r5
   35870:	mov.w	r4, fp, lsr #24
   35874:	orr.w	r8, r4, r0, lsl #8
   35878:	lsrs	r0, r0, #24
   3587a:	orr.w	r6, r0, fp, lsl #8
   3587e:	ldr	r0, [sp, #60]	; 0x3c
   35880:	adds	r3, r0, r3
   35882:	ldr	r0, [sp, #64]	; 0x40
   35884:	adc.w	ip, r0, ip
   35888:	adds.w	r3, r3, r8
   3588c:	str	r3, [sp, #160]	; 0xa0
   3588e:	adc.w	r3, ip, r6
   35892:	str	r3, [sp, #164]	; 0xa4
   35894:	ldr	r3, [sp, #160]	; 0xa0
   35896:	ldr	r0, [sp, #148]	; 0x94
   35898:	eors	r7, r3
   3589a:	ldr	r3, [sp, #164]	; 0xa4
   3589c:	ldr	r4, [sp, #256]	; 0x100
   3589e:	eors	r1, r3
   358a0:	lsrs	r3, r7, #16
   358a2:	orr.w	r3, r3, r1, lsl #16
   358a6:	lsrs	r1, r1, #16
   358a8:	str	r3, [sp, #200]	; 0xc8
   358aa:	orr.w	r3, r1, r7, lsl #16
   358ae:	str	r3, [sp, #208]	; 0xd0
   358b0:	ldr	r3, [sp, #200]	; 0xc8
   358b2:	ldr	r1, [sp, #144]	; 0x90
   358b4:	adds	r2, r2, r3
   358b6:	ldr	r3, [sp, #208]	; 0xd0
   358b8:	eor.w	r8, r2, r8
   358bc:	adc.w	r5, r3, r5
   358c0:	eors	r6, r5
   358c2:	lsls	r3, r6, #1
   358c4:	orr.w	r3, r3, r8, lsr #31
   358c8:	mov.w	r8, r8, lsl #1
   358cc:	str	r3, [sp, #220]	; 0xdc
   358ce:	orr.w	r3, r8, r6, lsr #31
   358d2:	str	r3, [sp, #212]	; 0xd4
   358d4:	ldr	r3, [sp, #44]	; 0x2c
   358d6:	adds	r1, r3, r1
   358d8:	ldr	r3, [sp, #48]	; 0x30
   358da:	adc.w	sl, r3, r0
   358de:	ldr	r3, [sp, #256]	; 0x100
   358e0:	ldr	r0, [sp, #204]	; 0xcc
   358e2:	adds	r1, r1, r3
   358e4:	ldr	r3, [sp, #260]	; 0x104
   358e6:	adc.w	sl, sl, r3
   358ea:	ldr	r3, [sp, #240]	; 0xf0
   358ec:	eor.w	ip, sl, r3
   358f0:	ldr	r3, [sp, #236]	; 0xec
   358f2:	eor.w	r6, r1, r3
   358f6:	ldr	r3, [sp, #192]	; 0xc0
   358f8:	adds.w	r3, r3, ip
   358fc:	eor.w	lr, r3, r4
   35900:	ldr	r4, [sp, #260]	; 0x104
   35902:	adcs	r0, r6
   35904:	eor.w	r7, r0, r4
   35908:	mov.w	fp, lr, lsr #24
   3590c:	orr.w	r4, fp, r7, lsl #8
   35910:	lsrs	r7, r7, #24
   35912:	orr.w	r8, r7, lr, lsl #8
   35916:	ldr	r7, [sp, #28]
   35918:	adds	r1, r7, r1
   3591a:	ldr	r7, [sp, #32]
   3591c:	adc.w	sl, r7, sl
   35920:	adds	r1, r1, r4
   35922:	str	r1, [sp, #144]	; 0x90
   35924:	adc.w	r1, sl, r8
   35928:	str	r1, [sp, #148]	; 0x94
   3592a:	ldr	r1, [sp, #144]	; 0x90
   3592c:	ldr	r7, [sp, #156]	; 0x9c
   3592e:	eor.w	ip, r1, ip
   35932:	ldr	r1, [sp, #148]	; 0x94
   35934:	eors	r6, r1
   35936:	mov.w	r1, ip, lsr #16
   3593a:	orr.w	r1, r1, r6, lsl #16
   3593e:	lsrs	r6, r6, #16
   35940:	orr.w	fp, r6, ip, lsl #16
   35944:	adds	r3, r3, r1
   35946:	adc.w	r0, r0, fp
   3594a:	eors	r4, r3
   3594c:	eor.w	r8, r0, r8
   35950:	str	r1, [sp, #236]	; 0xec
   35952:	mov.w	r1, r8, lsl #1
   35956:	orr.w	r6, r1, r4, lsr #31
   3595a:	lsls	r4, r4, #1
   3595c:	orr.w	ip, r4, r8, lsr #31
   35960:	ldr	r1, [sp, #92]	; 0x5c
   35962:	ldr	r4, [sp, #152]	; 0x98
   35964:	adds	r1, r1, r4
   35966:	ldr	r4, [sp, #96]	; 0x60
   35968:	adc.w	sl, r4, r7
   3596c:	adds.w	r1, r1, ip
   35970:	adc.w	sl, sl, r6
   35974:	ldr	r4, [sp, #228]	; 0xe4
   35976:	eor.w	lr, sl, r9
   3597a:	adds.w	r2, r2, lr
   3597e:	eor.w	r7, r1, r4
   35982:	adc.w	r5, r7, r5
   35986:	eor.w	r4, r2, ip
   3598a:	eor.w	ip, r5, r6
   3598e:	mov.w	r9, r4, lsr #24
   35992:	orr.w	r6, r9, ip, lsl #8
   35996:	mov.w	ip, ip, lsr #24
   3599a:	orr.w	r8, ip, r4, lsl #8
   3599e:	ldr	r4, [sp, #68]	; 0x44
   359a0:	adds	r1, r4, r1
   359a2:	ldr	r4, [sp, #72]	; 0x48
   359a4:	adc.w	sl, r4, sl
   359a8:	adds	r1, r1, r6
   359aa:	str	r1, [sp, #152]	; 0x98
   359ac:	adc.w	r1, sl, r8
   359b0:	str	r1, [sp, #156]	; 0x9c
   359b2:	ldr	r1, [sp, #152]	; 0x98
   359b4:	ldr	r4, [sp, #172]	; 0xac
   359b6:	eor.w	lr, r1, lr
   359ba:	ldr	r1, [sp, #156]	; 0x9c
   359bc:	eors	r7, r1
   359be:	mov.w	r1, lr, lsr #16
   359c2:	orr.w	r1, r1, r7, lsl #16
   359c6:	lsrs	r7, r7, #16
   359c8:	str	r1, [sp, #228]	; 0xe4
   359ca:	orr.w	r1, r7, lr, lsl #16
   359ce:	str	r1, [sp, #240]	; 0xf0
   359d0:	ldr	r1, [sp, #228]	; 0xe4
   359d2:	adds	r2, r2, r1
   359d4:	str	r2, [sp, #192]	; 0xc0
   359d6:	ldr	r2, [sp, #240]	; 0xf0
   359d8:	ldr	r1, [sp, #168]	; 0xa8
   359da:	adc.w	r2, r5, r2
   359de:	str	r2, [sp, #196]	; 0xc4
   359e0:	ldr	r2, [sp, #192]	; 0xc0
   359e2:	ldr	r5, [sp, #248]	; 0xf8
   359e4:	eors	r6, r2
   359e6:	ldr	r2, [sp, #196]	; 0xc4
   359e8:	eor.w	r8, r2, r8
   359ec:	mov.w	r2, r8, lsl #1
   359f0:	orr.w	r2, r2, r6, lsr #31
   359f4:	lsls	r6, r6, #1
   359f6:	str	r2, [sp, #260]	; 0x104
   359f8:	orr.w	r2, r6, r8, lsr #31
   359fc:	str	r2, [sp, #256]	; 0x100
   359fe:	ldr	r2, [sp, #100]	; 0x64
   35a00:	adds	r2, r2, r1
   35a02:	ldr	r1, [sp, #104]	; 0x68
   35a04:	adc.w	r7, r1, r4
   35a08:	ldr	r1, [sp, #244]	; 0xf4
   35a0a:	ldr	r4, [sp, #244]	; 0xf4
   35a0c:	adds	r2, r2, r1
   35a0e:	ldr	r1, [sp, #248]	; 0xf8
   35a10:	adc.w	r7, r1, r7
   35a14:	ldr	r1, [sp, #208]	; 0xd0
   35a16:	eor.w	r6, r7, r1
   35a1a:	ldr	r1, [sp, #200]	; 0xc8
   35a1c:	adds	r3, r3, r6
   35a1e:	eor.w	r1, r2, r1
   35a22:	eor.w	r4, r3, r4
   35a26:	adc.w	r0, r1, r0
   35a2a:	eors	r5, r0
   35a2c:	mov.w	r8, r4, lsr #24
   35a30:	orr.w	ip, r8, r5, lsl #8
   35a34:	lsrs	r5, r5, #24
   35a36:	orr.w	lr, r5, r4, lsl #8
   35a3a:	ldr	r4, [sp, #4]
   35a3c:	adds	r2, r4, r2
   35a3e:	ldr	r4, [sp, #8]
   35a40:	adc.w	r7, r4, r7
   35a44:	adds.w	r2, r2, ip
   35a48:	str	r2, [sp, #168]	; 0xa8
   35a4a:	adc.w	r2, r7, lr
   35a4e:	str	r2, [sp, #172]	; 0xac
   35a50:	ldr	r2, [sp, #168]	; 0xa8
   35a52:	eors	r6, r2
   35a54:	ldr	r2, [sp, #172]	; 0xac
   35a56:	eors	r1, r2
   35a58:	lsrs	r2, r6, #16
   35a5a:	orr.w	r2, r2, r1, lsl #16
   35a5e:	lsrs	r1, r1, #16
   35a60:	str	r2, [sp, #208]	; 0xd0
   35a62:	orr.w	r2, r1, r6, lsl #16
   35a66:	str	r2, [sp, #244]	; 0xf4
   35a68:	ldr	r2, [sp, #208]	; 0xd0
   35a6a:	ldr	r1, [sp, #164]	; 0xa4
   35a6c:	adds	r3, r3, r2
   35a6e:	str	r3, [sp, #200]	; 0xc8
   35a70:	ldr	r3, [sp, #244]	; 0xf4
   35a72:	adc.w	r3, r0, r3
   35a76:	str	r3, [sp, #204]	; 0xcc
   35a78:	ldr	r2, [sp, #204]	; 0xcc
   35a7a:	ldr	r3, [sp, #200]	; 0xc8
   35a7c:	eor.w	lr, r2, lr
   35a80:	eor.w	r3, r3, ip
   35a84:	mov.w	r2, lr, lsl #1
   35a88:	orr.w	r2, r2, r3, lsr #31
   35a8c:	mov.w	ip, r3, lsl #1
   35a90:	str	r2, [sp, #248]	; 0xf8
   35a92:	orr.w	ip, ip, lr, lsr #31
   35a96:	ldr	r2, [sp, #160]	; 0xa0
   35a98:	ldr	r3, [sp, #44]	; 0x2c
   35a9a:	adds	r3, r3, r2
   35a9c:	ldr	r2, [sp, #48]	; 0x30
   35a9e:	adc.w	lr, r2, r1
   35aa2:	ldr	r2, [sp, #232]	; 0xe8
   35aa4:	ldr	r1, [sp, #180]	; 0xb4
   35aa6:	adds	r3, r3, r2
   35aa8:	ldr	r2, [sp, #252]	; 0xfc
   35aaa:	adc.w	lr, lr, r2
   35aae:	ldr	r2, [sp, #236]	; 0xec
   35ab0:	eor.w	r6, lr, fp
   35ab4:	eor.w	r0, r3, r2
   35ab8:	ldr	r2, [sp, #176]	; 0xb0
   35aba:	adds	r2, r2, r6
   35abc:	adc.w	r5, r1, r0
   35ac0:	ldr	r1, [sp, #232]	; 0xe8
   35ac2:	eor.w	r8, r2, r1
   35ac6:	ldr	r1, [sp, #252]	; 0xfc
   35ac8:	eor.w	r4, r5, r1
   35acc:	mov.w	r9, r8, lsr #24
   35ad0:	orr.w	r1, r9, r4, lsl #8
   35ad4:	lsrs	r4, r4, #24
   35ad6:	orr.w	r7, r4, r8, lsl #8
   35ada:	ldr	r4, [sp, #20]
   35adc:	adds	r3, r4, r3
   35ade:	ldr	r4, [sp, #24]
   35ae0:	adc.w	lr, r4, lr
   35ae4:	adds	r3, r3, r1
   35ae6:	str	r3, [sp, #160]	; 0xa0
   35ae8:	adc.w	r3, lr, r7
   35aec:	str	r3, [sp, #164]	; 0xa4
   35aee:	ldr	r3, [sp, #160]	; 0xa0
   35af0:	eors	r6, r3
   35af2:	ldr	r3, [sp, #164]	; 0xa4
   35af4:	eors	r0, r3
   35af6:	lsrs	r3, r6, #16
   35af8:	orr.w	r3, r3, r0, lsl #16
   35afc:	lsrs	r0, r0, #16
   35afe:	str	r3, [sp, #232]	; 0xe8
   35b00:	orr.w	r3, r0, r6, lsl #16
   35b04:	str	r3, [sp, #236]	; 0xec
   35b06:	ldr	r3, [sp, #232]	; 0xe8
   35b08:	adds	r2, r2, r3
   35b0a:	ldr	r3, [sp, #236]	; 0xec
   35b0c:	eor.w	r1, r1, r2
   35b10:	adc.w	r5, r3, r5
   35b14:	eors	r7, r5
   35b16:	lsls	r3, r7, #1
   35b18:	orr.w	r3, r3, r1, lsr #31
   35b1c:	lsls	r1, r1, #1
   35b1e:	str	r3, [sp, #264]	; 0x108
   35b20:	orr.w	r3, r1, r7, lsr #31
   35b24:	str	r3, [sp, #252]	; 0xfc
   35b26:	ldr	r3, [sp, #124]	; 0x7c
   35b28:	ldr	r1, [sp, #144]	; 0x90
   35b2a:	ldr	r0, [sp, #148]	; 0x94
   35b2c:	adds	r1, r3, r1
   35b2e:	ldr	r3, [sp, #128]	; 0x80
   35b30:	ldr	r4, [sp, #212]	; 0xd4
   35b32:	adc.w	sl, r3, r0
   35b36:	ldr	r3, [sp, #212]	; 0xd4
   35b38:	ldr	r0, [sp, #188]	; 0xbc
   35b3a:	adds	r1, r1, r3
   35b3c:	ldr	r3, [sp, #220]	; 0xdc
   35b3e:	adc.w	sl, sl, r3
   35b42:	ldr	r3, [sp, #224]	; 0xe0
   35b44:	eor.w	lr, sl, r3
   35b48:	ldr	r3, [sp, #216]	; 0xd8
   35b4a:	eor.w	r6, r1, r3
   35b4e:	ldr	r3, [sp, #184]	; 0xb8
   35b50:	adds.w	r3, r3, lr
   35b54:	eor.w	r8, r3, r4
   35b58:	ldr	r4, [sp, #220]	; 0xdc
   35b5a:	adcs	r0, r6
   35b5c:	eor.w	r7, r0, r4
   35b60:	mov.w	fp, r8, lsr #24
   35b64:	orr.w	r4, fp, r7, lsl #8
   35b68:	lsrs	r7, r7, #24
   35b6a:	orr.w	r9, r7, r8, lsl #8
   35b6e:	ldr	r7, [sp, #108]	; 0x6c
   35b70:	adds	r1, r7, r1
   35b72:	ldr	r7, [sp, #112]	; 0x70
   35b74:	adc.w	sl, r7, sl
   35b78:	adds	r1, r1, r4
   35b7a:	str	r1, [sp, #144]	; 0x90
   35b7c:	adc.w	r1, sl, r9
   35b80:	str	r1, [sp, #148]	; 0x94
   35b82:	ldr	r1, [sp, #144]	; 0x90
   35b84:	eor.w	lr, r1, lr
   35b88:	ldr	r1, [sp, #148]	; 0x94
   35b8a:	eors	r6, r1
   35b8c:	mov.w	r1, lr, lsr #16
   35b90:	orr.w	r8, r1, r6, lsl #16
   35b94:	lsrs	r6, r6, #16
   35b96:	adds.w	r3, r3, r8
   35b9a:	orr.w	sl, r6, lr, lsl #16
   35b9e:	adc.w	r0, r0, sl
   35ba2:	eors	r4, r3
   35ba4:	eor.w	r9, r0, r9
   35ba8:	ldr	r6, [sp, #156]	; 0x9c
   35baa:	mov.w	r1, r9, lsl #1
   35bae:	orr.w	r1, r1, r4, lsr #31
   35bb2:	lsls	r4, r4, #1
   35bb4:	orr.w	fp, r4, r9, lsr #31
   35bb8:	str	r1, [sp, #212]	; 0xd4
   35bba:	ldr	r4, [sp, #152]	; 0x98
   35bbc:	ldr	r1, [sp, #84]	; 0x54
   35bbe:	adds	r1, r1, r4
   35bc0:	ldr	r4, [sp, #88]	; 0x58
   35bc2:	adc.w	r9, r4, r6
   35bc6:	ldr	r4, [sp, #248]	; 0xf8
   35bc8:	adds.w	r1, r1, ip
   35bcc:	adc.w	r9, r9, r4
   35bd0:	eor.w	r7, r1, r8
   35bd4:	eor.w	lr, r9, sl
   35bd8:	adds.w	r2, r2, lr
   35bdc:	adc.w	r5, r7, r5
   35be0:	eor.w	ip, r2, ip
   35be4:	eor.w	r6, r5, r4
   35be8:	mov.w	sl, ip, lsr #24
   35bec:	orr.w	r4, sl, r6, lsl #8
   35bf0:	lsrs	r6, r6, #24
   35bf2:	orr.w	r8, r6, ip, lsl #8
   35bf6:	ldr	r6, [sp, #116]	; 0x74
   35bf8:	adds	r1, r6, r1
   35bfa:	ldr	r6, [sp, #120]	; 0x78
   35bfc:	adc.w	r9, r6, r9
   35c00:	adds	r1, r1, r4
   35c02:	str	r1, [sp, #152]	; 0x98
   35c04:	adc.w	r1, r9, r8
   35c08:	str	r1, [sp, #156]	; 0x9c
   35c0a:	ldr	r1, [sp, #152]	; 0x98
   35c0c:	eor.w	lr, r1, lr
   35c10:	ldr	r1, [sp, #156]	; 0x9c
   35c12:	eors	r7, r1
   35c14:	mov.w	r1, lr, lsr #16
   35c18:	orr.w	r1, r1, r7, lsl #16
   35c1c:	lsrs	r7, r7, #16
   35c1e:	str	r1, [sp, #216]	; 0xd8
   35c20:	orr.w	r1, r7, lr, lsl #16
   35c24:	str	r1, [sp, #220]	; 0xdc
   35c26:	ldr	r1, [sp, #216]	; 0xd8
   35c28:	adds	r2, r2, r1
   35c2a:	str	r2, [sp, #176]	; 0xb0
   35c2c:	ldr	r2, [sp, #220]	; 0xdc
   35c2e:	ldr	r1, [sp, #168]	; 0xa8
   35c30:	adc.w	r2, r5, r2
   35c34:	str	r2, [sp, #180]	; 0xb4
   35c36:	ldr	r2, [sp, #176]	; 0xb0
   35c38:	eors	r4, r2
   35c3a:	ldr	r2, [sp, #180]	; 0xb4
   35c3c:	eor.w	r8, r2, r8
   35c40:	mov.w	r2, r8, lsl #1
   35c44:	orr.w	r2, r2, r4, lsr #31
   35c48:	lsls	r4, r4, #1
   35c4a:	str	r2, [sp, #248]	; 0xf8
   35c4c:	orr.w	r2, r4, r8, lsr #31
   35c50:	str	r2, [sp, #224]	; 0xe0
   35c52:	ldr	r2, [sp, #28]
   35c54:	ldr	r4, [sp, #172]	; 0xac
   35c56:	adds	r2, r2, r1
   35c58:	ldr	r1, [sp, #32]
   35c5a:	adc.w	r7, r1, r4
   35c5e:	ldr	r1, [sp, #252]	; 0xfc
   35c60:	adds	r2, r2, r1
   35c62:	ldr	r1, [sp, #264]	; 0x108
   35c64:	adc.w	r7, r1, r7
   35c68:	ldr	r1, [sp, #240]	; 0xf0
   35c6a:	eor.w	r4, r7, r1
   35c6e:	ldr	r1, [sp, #228]	; 0xe4
   35c70:	adds	r3, r3, r4
   35c72:	eor.w	r9, r2, r1
   35c76:	ldr	r1, [sp, #252]	; 0xfc
   35c78:	adc.w	r0, r0, r9
   35c7c:	eor.w	ip, r3, r1
   35c80:	ldr	r1, [sp, #264]	; 0x108
   35c82:	eor.w	r5, r0, r1
   35c86:	mov.w	lr, ip, lsr #24
   35c8a:	orr.w	r1, lr, r5, lsl #8
   35c8e:	lsrs	r5, r5, #24
   35c90:	orr.w	r6, r5, ip, lsl #8
   35c94:	ldr	r5, [sp, #52]	; 0x34
   35c96:	adds	r2, r5, r2
   35c98:	ldr	r5, [sp, #56]	; 0x38
   35c9a:	adc.w	r7, r5, r7
   35c9e:	adds	r2, r2, r1
   35ca0:	str	r2, [sp, #168]	; 0xa8
   35ca2:	adc.w	r2, r7, r6
   35ca6:	str	r2, [sp, #172]	; 0xac
   35ca8:	ldr	r2, [sp, #168]	; 0xa8
   35caa:	eors	r4, r2
   35cac:	ldr	r2, [sp, #172]	; 0xac
   35cae:	eor.w	r2, r2, r9
   35cb2:	lsrs	r5, r4, #16
   35cb4:	orr.w	r5, r5, r2, lsl #16
   35cb8:	mov.w	r9, r2, lsr #16
   35cbc:	orr.w	r9, r9, r4, lsl #16
   35cc0:	adds	r3, r3, r5
   35cc2:	str	r3, [sp, #184]	; 0xb8
   35cc4:	adc.w	r3, r0, r9
   35cc8:	str	r3, [sp, #188]	; 0xbc
   35cca:	ldr	r3, [sp, #184]	; 0xb8
   35ccc:	ldr	r2, [sp, #160]	; 0xa0
   35cce:	eors	r1, r3
   35cd0:	ldr	r3, [sp, #188]	; 0xbc
   35cd2:	str	r5, [sp, #228]	; 0xe4
   35cd4:	eors	r6, r3
   35cd6:	lsls	r3, r6, #1
   35cd8:	orr.w	r3, r3, r1, lsr #31
   35cdc:	lsls	r1, r1, #1
   35cde:	str	r3, [sp, #252]	; 0xfc
   35ce0:	orr.w	r3, r1, r6, lsr #31
   35ce4:	str	r3, [sp, #240]	; 0xf0
   35ce6:	ldr	r3, [sp, #60]	; 0x3c
   35ce8:	adds	r3, r3, r2
   35cea:	ldr	r2, [sp, #64]	; 0x40
   35cec:	ldr	r1, [sp, #164]	; 0xa4
   35cee:	ldr	r0, [sp, #196]	; 0xc4
   35cf0:	adc.w	ip, r2, r1
   35cf4:	ldr	r2, [sp, #212]	; 0xd4
   35cf6:	adds.w	r3, r3, fp
   35cfa:	adc.w	ip, ip, r2
   35cfe:	ldr	r2, [sp, #244]	; 0xf4
   35d00:	eor.w	r7, ip, r2
   35d04:	ldr	r2, [sp, #208]	; 0xd0
   35d06:	eor.w	r1, r3, r2
   35d0a:	ldr	r2, [sp, #192]	; 0xc0
   35d0c:	adds	r2, r2, r7
   35d0e:	adc.w	r5, r0, r1
   35d12:	ldr	r0, [sp, #212]	; 0xd4
   35d14:	eor.w	fp, r2, fp
   35d18:	eors	r0, r5
   35d1a:	mov.w	r4, fp, lsr #24
   35d1e:	orr.w	r8, r4, r0, lsl #8
   35d22:	lsrs	r0, r0, #24
   35d24:	orr.w	r6, r0, fp, lsl #8
   35d28:	ldr	r0, [sp, #12]
   35d2a:	ldr	r4, [sp, #256]	; 0x100
   35d2c:	adds	r3, r0, r3
   35d2e:	ldr	r0, [sp, #16]
   35d30:	adc.w	ip, r0, ip
   35d34:	adds.w	r3, r3, r8
   35d38:	str	r3, [sp, #160]	; 0xa0
   35d3a:	adc.w	r3, ip, r6
   35d3e:	str	r3, [sp, #164]	; 0xa4
   35d40:	ldr	r3, [sp, #160]	; 0xa0
   35d42:	ldr	r0, [sp, #148]	; 0x94
   35d44:	eors	r7, r3
   35d46:	ldr	r3, [sp, #164]	; 0xa4
   35d48:	eors	r1, r3
   35d4a:	lsrs	r3, r7, #16
   35d4c:	orr.w	r3, r3, r1, lsl #16
   35d50:	lsrs	r1, r1, #16
   35d52:	str	r3, [sp, #208]	; 0xd0
   35d54:	orr.w	r3, r1, r7, lsl #16
   35d58:	str	r3, [sp, #212]	; 0xd4
   35d5a:	ldr	r3, [sp, #208]	; 0xd0
   35d5c:	ldr	r1, [sp, #144]	; 0x90
   35d5e:	adds	r2, r2, r3
   35d60:	ldr	r3, [sp, #212]	; 0xd4
   35d62:	eor.w	r8, r2, r8
   35d66:	adc.w	r5, r3, r5
   35d6a:	eors	r6, r5
   35d6c:	lsls	r3, r6, #1
   35d6e:	orr.w	r3, r3, r8, lsr #31
   35d72:	mov.w	r8, r8, lsl #1
   35d76:	str	r3, [sp, #264]	; 0x108
   35d78:	orr.w	r3, r8, r6, lsr #31
   35d7c:	str	r3, [sp, #244]	; 0xf4
   35d7e:	ldr	r3, [sp, #76]	; 0x4c
   35d80:	adds	r1, r3, r1
   35d82:	ldr	r3, [sp, #80]	; 0x50
   35d84:	adc.w	sl, r3, r0
   35d88:	ldr	r3, [sp, #256]	; 0x100
   35d8a:	ldr	r0, [sp, #204]	; 0xcc
   35d8c:	adds	r1, r1, r3
   35d8e:	ldr	r3, [sp, #260]	; 0x104
   35d90:	adc.w	sl, sl, r3
   35d94:	ldr	r3, [sp, #236]	; 0xec
   35d96:	eor.w	lr, sl, r3
   35d9a:	ldr	r3, [sp, #232]	; 0xe8
   35d9c:	eor.w	r7, r1, r3
   35da0:	ldr	r3, [sp, #200]	; 0xc8
   35da2:	adds.w	r3, r3, lr
   35da6:	eor.w	r6, r3, r4
   35daa:	ldr	r4, [sp, #260]	; 0x104
   35dac:	adcs	r0, r7
   35dae:	eor.w	ip, r0, r4
   35db2:	mov.w	fp, r6, lsr #24
   35db6:	orr.w	r4, fp, ip, lsl #8
   35dba:	mov.w	ip, ip, lsr #24
   35dbe:	orr.w	r8, ip, r6, lsl #8
   35dc2:	ldr	r6, [sp, #36]	; 0x24
   35dc4:	adds	r1, r6, r1
   35dc6:	ldr	r6, [sp, #40]	; 0x28
   35dc8:	adc.w	sl, r6, sl
   35dcc:	adds	r1, r1, r4
   35dce:	str	r1, [sp, #144]	; 0x90
   35dd0:	adc.w	r1, sl, r8
   35dd4:	str	r1, [sp, #148]	; 0x94
   35dd6:	ldr	r1, [sp, #144]	; 0x90
   35dd8:	eor.w	lr, r1, lr
   35ddc:	ldr	r1, [sp, #148]	; 0x94
   35dde:	eors	r7, r1
   35de0:	mov.w	r1, lr, lsr #16
   35de4:	orr.w	r1, r1, r7, lsl #16
   35de8:	lsrs	r7, r7, #16
   35dea:	str	r1, [sp, #232]	; 0xe8
   35dec:	orr.w	r1, r7, lr, lsl #16
   35df0:	str	r1, [sp, #236]	; 0xec
   35df2:	ldr	r1, [sp, #232]	; 0xe8
   35df4:	ldr	r7, [sp, #156]	; 0x9c
   35df6:	adds	r3, r3, r1
   35df8:	ldr	r1, [sp, #236]	; 0xec
   35dfa:	eor.w	r4, r4, r3
   35dfe:	adc.w	r0, r1, r0
   35e02:	eor.w	r8, r0, r8
   35e06:	mov.w	r1, r8, lsl #1
   35e0a:	orr.w	r6, r1, r4, lsr #31
   35e0e:	lsls	r4, r4, #1
   35e10:	orr.w	fp, r4, r8, lsr #31
   35e14:	ldr	r1, [sp, #60]	; 0x3c
   35e16:	ldr	r4, [sp, #152]	; 0x98
   35e18:	adds	r1, r1, r4
   35e1a:	ldr	r4, [sp, #64]	; 0x40
   35e1c:	adc.w	sl, r4, r7
   35e20:	adds.w	r1, r1, fp
   35e24:	ldr	r4, [sp, #228]	; 0xe4
   35e26:	adc.w	sl, sl, r6
   35e2a:	eor.w	lr, sl, r9
   35e2e:	adds.w	r2, r2, lr
   35e32:	eor.w	r7, r1, r4
   35e36:	adc.w	r5, r7, r5
   35e3a:	eor.w	fp, r2, fp
   35e3e:	eor.w	ip, r5, r6
   35e42:	mov.w	r4, fp, lsr #24
   35e46:	orr.w	r6, r4, ip, lsl #8
   35e4a:	ldr	r4, [sp, #76]	; 0x4c
   35e4c:	mov.w	ip, ip, lsr #24
   35e50:	adds	r1, r4, r1
   35e52:	ldr	r4, [sp, #80]	; 0x50
   35e54:	orr.w	r8, ip, fp, lsl #8
   35e58:	adc.w	sl, r4, sl
   35e5c:	adds	r1, r1, r6
   35e5e:	str	r1, [sp, #152]	; 0x98
   35e60:	adc.w	r1, sl, r8
   35e64:	str	r1, [sp, #156]	; 0x9c
   35e66:	ldr	r1, [sp, #152]	; 0x98
   35e68:	eor.w	lr, r1, lr
   35e6c:	ldr	r1, [sp, #156]	; 0x9c
   35e6e:	eors	r7, r1
   35e70:	mov.w	r1, lr, lsr #16
   35e74:	orr.w	r1, r1, r7, lsl #16
   35e78:	lsrs	r7, r7, #16
   35e7a:	str	r1, [sp, #228]	; 0xe4
   35e7c:	orr.w	r1, r7, lr, lsl #16
   35e80:	str	r1, [sp, #256]	; 0x100
   35e82:	ldr	r1, [sp, #228]	; 0xe4
   35e84:	adds	r2, r2, r1
   35e86:	str	r2, [sp, #192]	; 0xc0
   35e88:	ldr	r2, [sp, #256]	; 0x100
   35e8a:	ldr	r1, [sp, #168]	; 0xa8
   35e8c:	adc.w	r2, r5, r2
   35e90:	str	r2, [sp, #196]	; 0xc4
   35e92:	ldr	r2, [sp, #192]	; 0xc0
   35e94:	eors	r6, r2
   35e96:	ldr	r2, [sp, #196]	; 0xc4
   35e98:	eor.w	r8, r2, r8
   35e9c:	mov.w	r2, r8, lsl #1
   35ea0:	orr.w	r2, r2, r6, lsr #31
   35ea4:	lsls	r6, r6, #1
   35ea6:	str	r2, [sp, #268]	; 0x10c
   35ea8:	orr.w	r2, r6, r8, lsr #31
   35eac:	str	r2, [sp, #260]	; 0x104
   35eae:	ldr	r2, [sp, #28]
   35eb0:	adds	r2, r2, r1
   35eb2:	ldr	r1, [sp, #32]
   35eb4:	ldr	r4, [sp, #172]	; 0xac
   35eb6:	ldr	r5, [sp, #248]	; 0xf8
   35eb8:	adc.w	r7, r1, r4
   35ebc:	ldr	r1, [sp, #224]	; 0xe0
   35ebe:	ldr	r4, [sp, #224]	; 0xe0
   35ec0:	adds	r2, r2, r1
   35ec2:	ldr	r1, [sp, #248]	; 0xf8
   35ec4:	adc.w	r7, r1, r7
   35ec8:	ldr	r1, [sp, #212]	; 0xd4
   35eca:	eor.w	r6, r7, r1
   35ece:	ldr	r1, [sp, #208]	; 0xd0
   35ed0:	adds	r3, r3, r6
   35ed2:	eor.w	r1, r2, r1
   35ed6:	eor.w	r4, r3, r4
   35eda:	adc.w	r0, r1, r0
   35ede:	eors	r5, r0
   35ee0:	mov.w	r8, r4, lsr #24
   35ee4:	orr.w	ip, r8, r5, lsl #8
   35ee8:	lsrs	r5, r5, #24
   35eea:	orr.w	lr, r5, r4, lsl #8
   35eee:	ldr	r4, [sp, #12]
   35ef0:	adds	r2, r4, r2
   35ef2:	ldr	r4, [sp, #16]
   35ef4:	adc.w	r7, r4, r7
   35ef8:	adds.w	r2, r2, ip
   35efc:	str	r2, [sp, #168]	; 0xa8
   35efe:	adc.w	r2, r7, lr
   35f02:	str	r2, [sp, #172]	; 0xac
   35f04:	ldr	r2, [sp, #168]	; 0xa8
   35f06:	eors	r6, r2
   35f08:	ldr	r2, [sp, #172]	; 0xac
   35f0a:	eors	r1, r2
   35f0c:	lsrs	r2, r6, #16
   35f0e:	orr.w	r2, r2, r1, lsl #16
   35f12:	lsrs	r1, r1, #16
   35f14:	str	r2, [sp, #208]	; 0xd0
   35f16:	orr.w	r2, r1, r6, lsl #16
   35f1a:	str	r2, [sp, #212]	; 0xd4
   35f1c:	ldr	r2, [sp, #208]	; 0xd0
   35f1e:	ldr	r1, [sp, #164]	; 0xa4
   35f20:	adds	r3, r3, r2
   35f22:	str	r3, [sp, #200]	; 0xc8
   35f24:	ldr	r3, [sp, #212]	; 0xd4
   35f26:	adc.w	r3, r0, r3
   35f2a:	str	r3, [sp, #204]	; 0xcc
   35f2c:	ldr	r2, [sp, #204]	; 0xcc
   35f2e:	ldr	r3, [sp, #200]	; 0xc8
   35f30:	eor.w	lr, r2, lr
   35f34:	eor.w	r3, r3, ip
   35f38:	mov.w	r2, lr, lsl #1
   35f3c:	orr.w	r2, r2, r3, lsr #31
   35f40:	mov.w	ip, r3, lsl #1
   35f44:	str	r2, [sp, #224]	; 0xe0
   35f46:	orr.w	ip, ip, lr, lsr #31
   35f4a:	ldr	r2, [sp, #160]	; 0xa0
   35f4c:	ldr	r3, [sp, #108]	; 0x6c
   35f4e:	adds	r3, r3, r2
   35f50:	ldr	r2, [sp, #112]	; 0x70
   35f52:	adc.w	lr, r2, r1
   35f56:	ldr	r2, [sp, #240]	; 0xf0
   35f58:	adds	r3, r3, r2
   35f5a:	ldr	r2, [sp, #252]	; 0xfc
   35f5c:	adc.w	lr, lr, r2
   35f60:	ldr	r2, [sp, #236]	; 0xec
   35f62:	eor.w	r6, lr, r2
   35f66:	ldr	r2, [sp, #232]	; 0xe8
   35f68:	eor.w	r0, r3, r2
   35f6c:	ldr	r2, [sp, #176]	; 0xb0
   35f6e:	ldr	r1, [sp, #180]	; 0xb4
   35f70:	adds	r2, r2, r6
   35f72:	adc.w	r5, r1, r0
   35f76:	ldr	r1, [sp, #240]	; 0xf0
   35f78:	eor.w	r8, r2, r1
   35f7c:	ldr	r1, [sp, #252]	; 0xfc
   35f7e:	eor.w	r4, r5, r1
   35f82:	mov.w	r9, r8, lsr #24
   35f86:	orr.w	r1, r9, r4, lsl #8
   35f8a:	lsrs	r4, r4, #24
   35f8c:	orr.w	r7, r4, r8, lsl #8
   35f90:	ldr	r4, [sp, #100]	; 0x64
   35f92:	adds	r3, r4, r3
   35f94:	ldr	r4, [sp, #104]	; 0x68
   35f96:	adc.w	lr, r4, lr
   35f9a:	adds	r3, r3, r1
   35f9c:	str	r3, [sp, #160]	; 0xa0
   35f9e:	adc.w	r3, lr, r7
   35fa2:	str	r3, [sp, #164]	; 0xa4
   35fa4:	ldr	r3, [sp, #160]	; 0xa0
   35fa6:	ldr	r4, [sp, #244]	; 0xf4
   35fa8:	eors	r6, r3
   35faa:	ldr	r3, [sp, #164]	; 0xa4
   35fac:	eors	r0, r3
   35fae:	lsrs	r3, r6, #16
   35fb0:	orr.w	r3, r3, r0, lsl #16
   35fb4:	lsrs	r0, r0, #16
   35fb6:	str	r3, [sp, #232]	; 0xe8
   35fb8:	orr.w	r3, r0, r6, lsl #16
   35fbc:	str	r3, [sp, #236]	; 0xec
   35fbe:	ldr	r3, [sp, #232]	; 0xe8
   35fc0:	ldr	r0, [sp, #148]	; 0x94
   35fc2:	adds	r2, r2, r3
   35fc4:	ldr	r3, [sp, #236]	; 0xec
   35fc6:	eor.w	r1, r1, r2
   35fca:	adc.w	r5, r3, r5
   35fce:	eors	r7, r5
   35fd0:	lsls	r3, r7, #1
   35fd2:	orr.w	r3, r3, r1, lsr #31
   35fd6:	lsls	r1, r1, #1
   35fd8:	str	r3, [sp, #248]	; 0xf8
   35fda:	orr.w	r3, r1, r7, lsr #31
   35fde:	ldr	r1, [sp, #144]	; 0x90
   35fe0:	str	r3, [sp, #240]	; 0xf0
   35fe2:	ldr	r3, [sp, #92]	; 0x5c
   35fe4:	adds	r1, r3, r1
   35fe6:	ldr	r3, [sp, #96]	; 0x60
   35fe8:	adc.w	sl, r3, r0
   35fec:	ldr	r3, [sp, #244]	; 0xf4
   35fee:	ldr	r0, [sp, #188]	; 0xbc
   35ff0:	adds	r1, r1, r3
   35ff2:	ldr	r3, [sp, #264]	; 0x108
   35ff4:	adc.w	sl, sl, r3
   35ff8:	ldr	r3, [sp, #220]	; 0xdc
   35ffa:	eor.w	lr, sl, r3
   35ffe:	ldr	r3, [sp, #216]	; 0xd8
   36000:	eor.w	r6, r1, r3
   36004:	ldr	r3, [sp, #184]	; 0xb8
   36006:	adds.w	r3, r3, lr
   3600a:	eor.w	r8, r3, r4
   3600e:	ldr	r4, [sp, #264]	; 0x108
   36010:	adcs	r0, r6
   36012:	eor.w	r7, r0, r4
   36016:	mov.w	fp, r8, lsr #24
   3601a:	orr.w	r4, fp, r7, lsl #8
   3601e:	lsrs	r7, r7, #24
   36020:	orr.w	r9, r7, r8, lsl #8
   36024:	ldr	r7, [sp, #116]	; 0x74
   36026:	adds	r1, r7, r1
   36028:	ldr	r7, [sp, #120]	; 0x78
   3602a:	adc.w	sl, r7, sl
   3602e:	adds	r1, r1, r4
   36030:	str	r1, [sp, #144]	; 0x90
   36032:	adc.w	r1, sl, r9
   36036:	str	r1, [sp, #148]	; 0x94
   36038:	ldr	r1, [sp, #144]	; 0x90
   3603a:	eor.w	lr, r1, lr
   3603e:	ldr	r1, [sp, #148]	; 0x94
   36040:	eors	r6, r1
   36042:	mov.w	r1, lr, lsr #16
   36046:	orr.w	r8, r1, r6, lsl #16
   3604a:	lsrs	r6, r6, #16
   3604c:	adds.w	r3, r3, r8
   36050:	orr.w	sl, r6, lr, lsl #16
   36054:	adc.w	r0, r0, sl
   36058:	eors	r4, r3
   3605a:	eor.w	r9, r0, r9
   3605e:	ldr	r6, [sp, #156]	; 0x9c
   36060:	mov.w	r1, r9, lsl #1
   36064:	orr.w	r1, r1, r4, lsr #31
   36068:	lsls	r4, r4, #1
   3606a:	orr.w	fp, r4, r9, lsr #31
   3606e:	str	r1, [sp, #216]	; 0xd8
   36070:	ldr	r4, [sp, #152]	; 0x98
   36072:	ldr	r1, [sp, #20]
   36074:	adds	r1, r1, r4
   36076:	ldr	r4, [sp, #24]
   36078:	adc.w	r9, r4, r6
   3607c:	ldr	r4, [sp, #224]	; 0xe0
   3607e:	adds.w	r1, r1, ip
   36082:	adc.w	r9, r9, r4
   36086:	eor.w	r7, r1, r8
   3608a:	eor.w	lr, r9, sl
   3608e:	adds.w	r2, r2, lr
   36092:	adc.w	r5, r7, r5
   36096:	eor.w	ip, r2, ip
   3609a:	eor.w	r6, r5, r4
   3609e:	mov.w	sl, ip, lsr #24
   360a2:	orr.w	r4, sl, r6, lsl #8
   360a6:	lsrs	r6, r6, #24
   360a8:	orr.w	r8, r6, ip, lsl #8
   360ac:	ldr	r6, [sp, #52]	; 0x34
   360ae:	adds	r1, r6, r1
   360b0:	ldr	r6, [sp, #56]	; 0x38
   360b2:	adc.w	r9, r6, r9
   360b6:	adds	r1, r1, r4
   360b8:	str	r1, [sp, #152]	; 0x98
   360ba:	adc.w	r1, r9, r8
   360be:	str	r1, [sp, #156]	; 0x9c
   360c0:	ldr	r1, [sp, #152]	; 0x98
   360c2:	eor.w	lr, r1, lr
   360c6:	ldr	r1, [sp, #156]	; 0x9c
   360c8:	eors	r7, r1
   360ca:	mov.w	r1, lr, lsr #16
   360ce:	orr.w	r1, r1, r7, lsl #16
   360d2:	lsrs	r7, r7, #16
   360d4:	str	r1, [sp, #220]	; 0xdc
   360d6:	orr.w	r1, r7, lr, lsl #16
   360da:	str	r1, [sp, #224]	; 0xe0
   360dc:	ldr	r1, [sp, #220]	; 0xdc
   360de:	adds	r2, r2, r1
   360e0:	str	r2, [sp, #176]	; 0xb0
   360e2:	ldr	r2, [sp, #224]	; 0xe0
   360e4:	ldr	r1, [sp, #168]	; 0xa8
   360e6:	adc.w	r2, r5, r2
   360ea:	str	r2, [sp, #180]	; 0xb4
   360ec:	ldr	r2, [sp, #176]	; 0xb0
   360ee:	eors	r4, r2
   360f0:	ldr	r2, [sp, #180]	; 0xb4
   360f2:	eor.w	r8, r2, r8
   360f6:	mov.w	r2, r8, lsl #1
   360fa:	orr.w	r2, r2, r4, lsr #31
   360fe:	lsls	r4, r4, #1
   36100:	str	r2, [sp, #252]	; 0xfc
   36102:	orr.w	r2, r4, r8, lsr #31
   36106:	str	r2, [sp, #244]	; 0xf4
   36108:	ldr	r2, [sp, #44]	; 0x2c
   3610a:	ldr	r4, [sp, #172]	; 0xac
   3610c:	adds	r2, r2, r1
   3610e:	ldr	r1, [sp, #48]	; 0x30
   36110:	adc.w	r7, r1, r4
   36114:	ldr	r1, [sp, #240]	; 0xf0
   36116:	adds	r2, r2, r1
   36118:	ldr	r1, [sp, #248]	; 0xf8
   3611a:	adc.w	r7, r1, r7
   3611e:	ldr	r1, [sp, #256]	; 0x100
   36120:	eor.w	r4, r7, r1
   36124:	ldr	r1, [sp, #228]	; 0xe4
   36126:	adds	r3, r3, r4
   36128:	eor.w	r9, r2, r1
   3612c:	ldr	r1, [sp, #240]	; 0xf0
   3612e:	adc.w	r0, r0, r9
   36132:	eor.w	ip, r3, r1
   36136:	ldr	r1, [sp, #248]	; 0xf8
   36138:	eor.w	r5, r0, r1
   3613c:	mov.w	lr, ip, lsr #24
   36140:	orr.w	r1, lr, r5, lsl #8
   36144:	lsrs	r5, r5, #24
   36146:	orr.w	r6, r5, ip, lsl #8
   3614a:	ldr	r5, [sp, #84]	; 0x54
   3614c:	adds	r2, r5, r2
   3614e:	ldr	r5, [sp, #88]	; 0x58
   36150:	adc.w	r7, r5, r7
   36154:	adds	r2, r2, r1
   36156:	str	r2, [sp, #168]	; 0xa8
   36158:	adc.w	r2, r7, r6
   3615c:	str	r2, [sp, #172]	; 0xac
   3615e:	ldr	r2, [sp, #168]	; 0xa8
   36160:	eors	r4, r2
   36162:	ldr	r2, [sp, #172]	; 0xac
   36164:	eor.w	r2, r2, r9
   36168:	lsrs	r5, r4, #16
   3616a:	orr.w	r5, r5, r2, lsl #16
   3616e:	mov.w	r9, r2, lsr #16
   36172:	orr.w	r9, r9, r4, lsl #16
   36176:	adds	r3, r3, r5
   36178:	str	r3, [sp, #184]	; 0xb8
   3617a:	adc.w	r3, r0, r9
   3617e:	str	r3, [sp, #188]	; 0xbc
   36180:	ldr	r3, [sp, #184]	; 0xb8
   36182:	ldr	r2, [sp, #160]	; 0xa0
   36184:	eors	r1, r3
   36186:	ldr	r3, [sp, #188]	; 0xbc
   36188:	ldr	r0, [sp, #196]	; 0xc4
   3618a:	eors	r6, r3
   3618c:	str	r5, [sp, #228]	; 0xe4
   3618e:	lsls	r3, r6, #1
   36190:	orr.w	r3, r3, r1, lsr #31
   36194:	lsls	r1, r1, #1
   36196:	str	r3, [sp, #248]	; 0xf8
   36198:	orr.w	r3, r1, r6, lsr #31
   3619c:	str	r3, [sp, #240]	; 0xf0
   3619e:	ldr	r3, [sp, #36]	; 0x24
   361a0:	ldr	r1, [sp, #164]	; 0xa4
   361a2:	adds	r3, r3, r2
   361a4:	ldr	r2, [sp, #40]	; 0x28
   361a6:	adc.w	ip, r2, r1
   361aa:	ldr	r2, [sp, #216]	; 0xd8
   361ac:	adds.w	r3, r3, fp
   361b0:	adc.w	ip, ip, r2
   361b4:	ldr	r2, [sp, #212]	; 0xd4
   361b6:	eor.w	r7, ip, r2
   361ba:	ldr	r2, [sp, #208]	; 0xd0
   361bc:	eor.w	r1, r3, r2
   361c0:	ldr	r2, [sp, #192]	; 0xc0
   361c2:	adds	r2, r2, r7
   361c4:	adc.w	r5, r0, r1
   361c8:	ldr	r0, [sp, #216]	; 0xd8
   361ca:	eor.w	fp, r2, fp
   361ce:	eors	r0, r5
   361d0:	mov.w	r4, fp, lsr #24
   361d4:	orr.w	r8, r4, r0, lsl #8
   361d8:	lsrs	r0, r0, #24
   361da:	orr.w	r6, r0, fp, lsl #8
   361de:	ldr	r0, [sp, #4]
   361e0:	adds	r3, r0, r3
   361e2:	ldr	r0, [sp, #8]
   361e4:	adc.w	ip, r0, ip
   361e8:	adds.w	r3, r3, r8
   361ec:	str	r3, [sp, #160]	; 0xa0
   361ee:	adc.w	r3, ip, r6
   361f2:	str	r3, [sp, #164]	; 0xa4
   361f4:	ldr	r3, [sp, #160]	; 0xa0
   361f6:	eors	r7, r3
   361f8:	ldr	r3, [sp, #164]	; 0xa4
   361fa:	eors	r1, r3
   361fc:	lsrs	r3, r7, #16
   361fe:	orr.w	r3, r3, r1, lsl #16
   36202:	lsrs	r1, r1, #16
   36204:	str	r3, [sp, #208]	; 0xd0
   36206:	orr.w	r3, r1, r7, lsl #16
   3620a:	str	r3, [sp, #212]	; 0xd4
   3620c:	ldr	r3, [sp, #208]	; 0xd0
   3620e:	ldr	r1, [sp, #144]	; 0x90
   36210:	adds	r2, r2, r3
   36212:	ldr	r3, [sp, #212]	; 0xd4
   36214:	eor.w	r8, r2, r8
   36218:	ldr	r0, [sp, #148]	; 0x94
   3621a:	adc.w	r5, r3, r5
   3621e:	ldr	r4, [sp, #260]	; 0x104
   36220:	eors	r6, r5
   36222:	lsls	r3, r6, #1
   36224:	orr.w	r3, r3, r8, lsr #31
   36228:	mov.w	r8, r8, lsl #1
   3622c:	str	r3, [sp, #256]	; 0x100
   3622e:	orr.w	r3, r8, r6, lsr #31
   36232:	str	r3, [sp, #216]	; 0xd8
   36234:	ldr	r3, [sp, #124]	; 0x7c
   36236:	adds	r1, r3, r1
   36238:	ldr	r3, [sp, #128]	; 0x80
   3623a:	adc.w	sl, r3, r0
   3623e:	ldr	r3, [sp, #260]	; 0x104
   36240:	ldr	r0, [sp, #204]	; 0xcc
   36242:	adds	r1, r1, r3
   36244:	ldr	r3, [sp, #268]	; 0x10c
   36246:	adc.w	sl, sl, r3
   3624a:	ldr	r3, [sp, #236]	; 0xec
   3624c:	eor.w	lr, sl, r3
   36250:	ldr	r3, [sp, #232]	; 0xe8
   36252:	eor.w	r7, r1, r3
   36256:	ldr	r3, [sp, #200]	; 0xc8
   36258:	adds.w	r3, r3, lr
   3625c:	eor.w	r6, r3, r4
   36260:	ldr	r4, [sp, #268]	; 0x10c
   36262:	adcs	r0, r7
   36264:	eor.w	ip, r0, r4
   36268:	mov.w	fp, r6, lsr #24
   3626c:	orr.w	r4, fp, ip, lsl #8
   36270:	mov.w	ip, ip, lsr #24
   36274:	orr.w	r8, ip, r6, lsl #8
   36278:	ldr	r6, [sp, #68]	; 0x44
   3627a:	adds	r1, r6, r1
   3627c:	ldr	r6, [sp, #72]	; 0x48
   3627e:	adc.w	sl, r6, sl
   36282:	adds	r1, r1, r4
   36284:	str	r1, [sp, #144]	; 0x90
   36286:	adc.w	r1, sl, r8
   3628a:	str	r1, [sp, #148]	; 0x94
   3628c:	ldr	r1, [sp, #144]	; 0x90
   3628e:	eor.w	lr, r1, lr
   36292:	ldr	r1, [sp, #148]	; 0x94
   36294:	eors	r7, r1
   36296:	mov.w	r1, lr, lsr #16
   3629a:	orr.w	r1, r1, r7, lsl #16
   3629e:	lsrs	r7, r7, #16
   362a0:	str	r1, [sp, #232]	; 0xe8
   362a2:	orr.w	r1, r7, lr, lsl #16
   362a6:	str	r1, [sp, #236]	; 0xec
   362a8:	ldr	r1, [sp, #232]	; 0xe8
   362aa:	ldr	r7, [sp, #156]	; 0x9c
   362ac:	adds	r3, r3, r1
   362ae:	ldr	r1, [sp, #236]	; 0xec
   362b0:	eor.w	r4, r4, r3
   362b4:	adc.w	r0, r1, r0
   362b8:	eor.w	r8, r0, r8
   362bc:	mov.w	r1, r8, lsl #1
   362c0:	orr.w	r6, r1, r4, lsr #31
   362c4:	lsls	r4, r4, #1
   362c6:	orr.w	fp, r4, r8, lsr #31
   362ca:	ldr	r1, [sp, #76]	; 0x4c
   362cc:	ldr	r4, [sp, #152]	; 0x98
   362ce:	adds	r1, r1, r4
   362d0:	ldr	r4, [sp, #80]	; 0x50
   362d2:	adc.w	sl, r4, r7
   362d6:	adds.w	r1, r1, fp
   362da:	adc.w	sl, sl, r6
   362de:	ldr	r4, [sp, #228]	; 0xe4
   362e0:	eor.w	lr, sl, r9
   362e4:	adds.w	r2, r2, lr
   362e8:	eor.w	r7, r1, r4
   362ec:	adc.w	r5, r7, r5
   362f0:	eor.w	fp, r2, fp
   362f4:	eor.w	ip, r5, r6
   362f8:	mov.w	r4, fp, lsr #24
   362fc:	orr.w	r6, r4, ip, lsl #8
   36300:	ldr	r4, [sp, #4]
   36302:	mov.w	ip, ip, lsr #24
   36306:	adds	r1, r4, r1
   36308:	ldr	r4, [sp, #8]
   3630a:	orr.w	r8, ip, fp, lsl #8
   3630e:	adc.w	sl, r4, sl
   36312:	adds	r1, r1, r6
   36314:	str	r1, [sp, #152]	; 0x98
   36316:	adc.w	r1, sl, r8
   3631a:	str	r1, [sp, #156]	; 0x9c
   3631c:	ldr	r1, [sp, #152]	; 0x98
   3631e:	ldr	r4, [sp, #172]	; 0xac
   36320:	eor.w	lr, r1, lr
   36324:	ldr	r1, [sp, #156]	; 0x9c
   36326:	eors	r7, r1
   36328:	mov.w	r1, lr, lsr #16
   3632c:	orr.w	r1, r1, r7, lsl #16
   36330:	lsrs	r7, r7, #16
   36332:	str	r1, [sp, #228]	; 0xe4
   36334:	orr.w	r1, r7, lr, lsl #16
   36338:	str	r1, [sp, #260]	; 0x104
   3633a:	ldr	r1, [sp, #228]	; 0xe4
   3633c:	adds	r2, r2, r1
   3633e:	str	r2, [sp, #192]	; 0xc0
   36340:	ldr	r2, [sp, #260]	; 0x104
   36342:	ldr	r1, [sp, #168]	; 0xa8
   36344:	adc.w	r2, r5, r2
   36348:	str	r2, [sp, #196]	; 0xc4
   3634a:	ldr	r2, [sp, #192]	; 0xc0
   3634c:	ldr	r5, [sp, #252]	; 0xfc
   3634e:	eors	r6, r2
   36350:	ldr	r2, [sp, #196]	; 0xc4
   36352:	eor.w	r8, r2, r8
   36356:	mov.w	r2, r8, lsl #1
   3635a:	orr.w	r2, r2, r6, lsr #31
   3635e:	lsls	r6, r6, #1
   36360:	str	r2, [sp, #268]	; 0x10c
   36362:	orr.w	r2, r6, r8, lsr #31
   36366:	str	r2, [sp, #264]	; 0x108
   36368:	ldr	r2, [sp, #44]	; 0x2c
   3636a:	adds	r2, r2, r1
   3636c:	ldr	r1, [sp, #48]	; 0x30
   3636e:	adc.w	r7, r1, r4
   36372:	ldr	r1, [sp, #244]	; 0xf4
   36374:	ldr	r4, [sp, #244]	; 0xf4
   36376:	adds	r2, r2, r1
   36378:	ldr	r1, [sp, #252]	; 0xfc
   3637a:	adc.w	r7, r1, r7
   3637e:	ldr	r1, [sp, #212]	; 0xd4
   36380:	eor.w	r6, r7, r1
   36384:	ldr	r1, [sp, #208]	; 0xd0
   36386:	adds	r3, r3, r6
   36388:	eor.w	r1, r2, r1
   3638c:	eor.w	r4, r3, r4
   36390:	adc.w	r0, r1, r0
   36394:	eors	r5, r0
   36396:	mov.w	r8, r4, lsr #24
   3639a:	orr.w	ip, r8, r5, lsl #8
   3639e:	lsrs	r5, r5, #24
   363a0:	orr.w	lr, r5, r4, lsl #8
   363a4:	ldr	r4, [sp, #60]	; 0x3c
   363a6:	adds	r2, r4, r2
   363a8:	ldr	r4, [sp, #64]	; 0x40
   363aa:	adc.w	r7, r4, r7
   363ae:	adds.w	r2, r2, ip
   363b2:	str	r2, [sp, #168]	; 0xa8
   363b4:	adc.w	r2, r7, lr
   363b8:	str	r2, [sp, #172]	; 0xac
   363ba:	ldr	r2, [sp, #168]	; 0xa8
   363bc:	eors	r6, r2
   363be:	ldr	r2, [sp, #172]	; 0xac
   363c0:	eors	r1, r2
   363c2:	lsrs	r2, r6, #16
   363c4:	orr.w	r2, r2, r1, lsl #16
   363c8:	lsrs	r1, r1, #16
   363ca:	str	r2, [sp, #208]	; 0xd0
   363cc:	orr.w	r2, r1, r6, lsl #16
   363d0:	str	r2, [sp, #212]	; 0xd4
   363d2:	ldr	r2, [sp, #208]	; 0xd0
   363d4:	ldr	r1, [sp, #164]	; 0xa4
   363d6:	adds	r3, r3, r2
   363d8:	str	r3, [sp, #200]	; 0xc8
   363da:	ldr	r3, [sp, #212]	; 0xd4
   363dc:	adc.w	r3, r0, r3
   363e0:	str	r3, [sp, #204]	; 0xcc
   363e2:	ldr	r2, [sp, #204]	; 0xcc
   363e4:	ldr	r3, [sp, #200]	; 0xc8
   363e6:	eor.w	lr, r2, lr
   363ea:	eor.w	r3, r3, ip
   363ee:	mov.w	r2, lr, lsl #1
   363f2:	orr.w	r2, r2, r3, lsr #31
   363f6:	mov.w	ip, r3, lsl #1
   363fa:	str	r2, [sp, #244]	; 0xf4
   363fc:	orr.w	ip, ip, lr, lsr #31
   36400:	ldr	r2, [sp, #160]	; 0xa0
   36402:	ldr	r3, [sp, #20]
   36404:	adds	r3, r3, r2
   36406:	ldr	r2, [sp, #24]
   36408:	adc.w	lr, r2, r1
   3640c:	ldr	r2, [sp, #240]	; 0xf0
   3640e:	ldr	r1, [sp, #180]	; 0xb4
   36410:	adds	r3, r3, r2
   36412:	ldr	r2, [sp, #248]	; 0xf8
   36414:	adc.w	lr, lr, r2
   36418:	ldr	r2, [sp, #236]	; 0xec
   3641a:	eor.w	r6, lr, r2
   3641e:	ldr	r2, [sp, #232]	; 0xe8
   36420:	eor.w	r0, r3, r2
   36424:	ldr	r2, [sp, #176]	; 0xb0
   36426:	adds	r2, r2, r6
   36428:	adc.w	r5, r1, r0
   3642c:	ldr	r1, [sp, #240]	; 0xf0
   3642e:	eor.w	r8, r2, r1
   36432:	ldr	r1, [sp, #248]	; 0xf8
   36434:	eor.w	r4, r5, r1
   36438:	mov.w	r9, r8, lsr #24
   3643c:	orr.w	r1, r9, r4, lsl #8
   36440:	lsrs	r4, r4, #24
   36442:	orr.w	r7, r4, r8, lsl #8
   36446:	ldr	r4, [sp, #36]	; 0x24
   36448:	adds	r3, r4, r3
   3644a:	ldr	r4, [sp, #40]	; 0x28
   3644c:	adc.w	lr, r4, lr
   36450:	adds	r3, r3, r1
   36452:	str	r3, [sp, #160]	; 0xa0
   36454:	adc.w	r3, lr, r7
   36458:	str	r3, [sp, #164]	; 0xa4
   3645a:	ldr	r3, [sp, #160]	; 0xa0
   3645c:	eors	r6, r3
   3645e:	ldr	r3, [sp, #164]	; 0xa4
   36460:	eors	r0, r3
   36462:	lsrs	r3, r6, #16
   36464:	orr.w	r3, r3, r0, lsl #16
   36468:	lsrs	r0, r0, #16
   3646a:	str	r3, [sp, #232]	; 0xe8
   3646c:	orr.w	r3, r0, r6, lsl #16
   36470:	str	r3, [sp, #236]	; 0xec
   36472:	ldr	r3, [sp, #232]	; 0xe8
   36474:	adds	r2, r2, r3
   36476:	ldr	r3, [sp, #236]	; 0xec
   36478:	eor.w	r1, r1, r2
   3647c:	adc.w	r5, r3, r5
   36480:	eors	r7, r5
   36482:	lsls	r3, r7, #1
   36484:	orr.w	r3, r3, r1, lsr #31
   36488:	lsls	r1, r1, #1
   3648a:	str	r3, [sp, #248]	; 0xf8
   3648c:	orr.w	r3, r1, r7, lsr #31
   36490:	str	r3, [sp, #240]	; 0xf0
   36492:	ldr	r3, [sp, #84]	; 0x54
   36494:	ldr	r1, [sp, #144]	; 0x90
   36496:	ldr	r0, [sp, #148]	; 0x94
   36498:	adds	r1, r3, r1
   3649a:	ldr	r3, [sp, #88]	; 0x58
   3649c:	ldr	r4, [sp, #216]	; 0xd8
   3649e:	adc.w	sl, r3, r0
   364a2:	ldr	r3, [sp, #216]	; 0xd8
   364a4:	ldr	r0, [sp, #188]	; 0xbc
   364a6:	adds	r1, r1, r3
   364a8:	ldr	r3, [sp, #256]	; 0x100
   364aa:	adc.w	sl, sl, r3
   364ae:	ldr	r3, [sp, #224]	; 0xe0
   364b0:	eor.w	lr, sl, r3
   364b4:	ldr	r3, [sp, #220]	; 0xdc
   364b6:	eor.w	r6, r1, r3
   364ba:	ldr	r3, [sp, #184]	; 0xb8
   364bc:	adds.w	r3, r3, lr
   364c0:	eor.w	r8, r3, r4
   364c4:	ldr	r4, [sp, #256]	; 0x100
   364c6:	adcs	r0, r6
   364c8:	eor.w	r7, r0, r4
   364cc:	mov.w	fp, r8, lsr #24
   364d0:	orr.w	r4, fp, r7, lsl #8
   364d4:	lsrs	r7, r7, #24
   364d6:	orr.w	r9, r7, r8, lsl #8
   364da:	ldr	r7, [sp, #124]	; 0x7c
   364dc:	adds	r1, r7, r1
   364de:	ldr	r7, [sp, #128]	; 0x80
   364e0:	adc.w	sl, r7, sl
   364e4:	adds	r1, r1, r4
   364e6:	str	r1, [sp, #144]	; 0x90
   364e8:	adc.w	r1, sl, r9
   364ec:	str	r1, [sp, #148]	; 0x94
   364ee:	ldr	r1, [sp, #144]	; 0x90
   364f0:	eor.w	lr, r1, lr
   364f4:	ldr	r1, [sp, #148]	; 0x94
   364f6:	eors	r6, r1
   364f8:	mov.w	r1, lr, lsr #16
   364fc:	orr.w	r8, r1, r6, lsl #16
   36500:	lsrs	r6, r6, #16
   36502:	adds.w	r3, r3, r8
   36506:	orr.w	sl, r6, lr, lsl #16
   3650a:	adc.w	r0, r0, sl
   3650e:	eors	r4, r3
   36510:	eor.w	r9, r0, r9
   36514:	ldr	r6, [sp, #156]	; 0x9c
   36516:	mov.w	r1, r9, lsl #1
   3651a:	orr.w	r1, r1, r4, lsr #31
   3651e:	lsls	r4, r4, #1
   36520:	orr.w	fp, r4, r9, lsr #31
   36524:	str	r1, [sp, #216]	; 0xd8
   36526:	ldr	r4, [sp, #152]	; 0x98
   36528:	ldr	r1, [sp, #116]	; 0x74
   3652a:	adds	r1, r1, r4
   3652c:	ldr	r4, [sp, #120]	; 0x78
   3652e:	adc.w	r9, r4, r6
   36532:	ldr	r4, [sp, #244]	; 0xf4
   36534:	adds.w	r1, r1, ip
   36538:	adc.w	r9, r9, r4
   3653c:	eor.w	r7, r1, r8
   36540:	eor.w	lr, r9, sl
   36544:	adds.w	r2, r2, lr
   36548:	adc.w	r5, r7, r5
   3654c:	eor.w	ip, r2, ip
   36550:	eor.w	r6, r5, r4
   36554:	mov.w	sl, ip, lsr #24
   36558:	orr.w	r4, sl, r6, lsl #8
   3655c:	lsrs	r6, r6, #24
   3655e:	orr.w	r8, r6, ip, lsl #8
   36562:	ldr	r6, [sp, #12]
   36564:	adds	r1, r6, r1
   36566:	ldr	r6, [sp, #16]
   36568:	adc.w	r9, r6, r9
   3656c:	adds	r1, r1, r4
   3656e:	str	r1, [sp, #152]	; 0x98
   36570:	adc.w	r1, r9, r8
   36574:	str	r1, [sp, #156]	; 0x9c
   36576:	ldr	r1, [sp, #152]	; 0x98
   36578:	eor.w	lr, r1, lr
   3657c:	ldr	r1, [sp, #156]	; 0x9c
   3657e:	eors	r7, r1
   36580:	mov.w	r1, lr, lsr #16
   36584:	orr.w	r1, r1, r7, lsl #16
   36588:	lsrs	r7, r7, #16
   3658a:	str	r1, [sp, #220]	; 0xdc
   3658c:	orr.w	r1, r7, lr, lsl #16
   36590:	str	r1, [sp, #224]	; 0xe0
   36592:	ldr	r1, [sp, #220]	; 0xdc
   36594:	adds	r2, r2, r1
   36596:	str	r2, [sp, #176]	; 0xb0
   36598:	ldr	r2, [sp, #224]	; 0xe0
   3659a:	ldr	r1, [sp, #168]	; 0xa8
   3659c:	adc.w	r2, r5, r2
   365a0:	str	r2, [sp, #180]	; 0xb4
   365a2:	ldr	r2, [sp, #176]	; 0xb0
   365a4:	eors	r4, r2
   365a6:	ldr	r2, [sp, #180]	; 0xb4
   365a8:	eor.w	r8, r2, r8
   365ac:	mov.w	r2, r8, lsl #1
   365b0:	orr.w	r2, r2, r4, lsr #31
   365b4:	lsls	r4, r4, #1
   365b6:	str	r2, [sp, #252]	; 0xfc
   365b8:	orr.w	r2, r4, r8, lsr #31
   365bc:	str	r2, [sp, #244]	; 0xf4
   365be:	ldr	r2, [sp, #92]	; 0x5c
   365c0:	ldr	r4, [sp, #172]	; 0xac
   365c2:	adds	r2, r2, r1
   365c4:	ldr	r1, [sp, #96]	; 0x60
   365c6:	adc.w	r7, r1, r4
   365ca:	ldr	r1, [sp, #240]	; 0xf0
   365cc:	adds	r2, r2, r1
   365ce:	ldr	r1, [sp, #248]	; 0xf8
   365d0:	adc.w	r7, r1, r7
   365d4:	ldr	r1, [sp, #260]	; 0x104
   365d6:	eor.w	r4, r7, r1
   365da:	ldr	r1, [sp, #228]	; 0xe4
   365dc:	adds	r3, r3, r4
   365de:	eor.w	r9, r2, r1
   365e2:	ldr	r1, [sp, #240]	; 0xf0
   365e4:	adc.w	r0, r0, r9
   365e8:	eor.w	ip, r3, r1
   365ec:	ldr	r1, [sp, #248]	; 0xf8
   365ee:	eor.w	r5, r0, r1
   365f2:	mov.w	lr, ip, lsr #24
   365f6:	orr.w	r1, lr, r5, lsl #8
   365fa:	lsrs	r5, r5, #24
   365fc:	orr.w	r6, r5, ip, lsl #8
   36600:	ldr	r5, [sp, #100]	; 0x64
   36602:	adds	r2, r5, r2
   36604:	ldr	r5, [sp, #104]	; 0x68
   36606:	adc.w	r7, r5, r7
   3660a:	adds	r2, r2, r1
   3660c:	str	r2, [sp, #168]	; 0xa8
   3660e:	adc.w	r2, r7, r6
   36612:	str	r2, [sp, #172]	; 0xac
   36614:	ldr	r2, [sp, #168]	; 0xa8
   36616:	eors	r4, r2
   36618:	ldr	r2, [sp, #172]	; 0xac
   3661a:	eor.w	r2, r2, r9
   3661e:	lsrs	r5, r4, #16
   36620:	orr.w	r5, r5, r2, lsl #16
   36624:	mov.w	r9, r2, lsr #16
   36628:	orr.w	r9, r9, r4, lsl #16
   3662c:	adds	r3, r3, r5
   3662e:	str	r3, [sp, #184]	; 0xb8
   36630:	adc.w	r3, r0, r9
   36634:	str	r3, [sp, #188]	; 0xbc
   36636:	ldr	r3, [sp, #184]	; 0xb8
   36638:	ldr	r2, [sp, #160]	; 0xa0
   3663a:	eors	r1, r3
   3663c:	ldr	r3, [sp, #188]	; 0xbc
   3663e:	str	r5, [sp, #228]	; 0xe4
   36640:	eors	r6, r3
   36642:	lsls	r3, r6, #1
   36644:	orr.w	r3, r3, r1, lsr #31
   36648:	lsls	r1, r1, #1
   3664a:	str	r3, [sp, #248]	; 0xf8
   3664c:	orr.w	r3, r1, r6, lsr #31
   36650:	str	r3, [sp, #240]	; 0xf0
   36652:	ldr	r3, [sp, #52]	; 0x34
   36654:	adds	r3, r3, r2
   36656:	ldr	r2, [sp, #56]	; 0x38
   36658:	ldr	r1, [sp, #164]	; 0xa4
   3665a:	ldr	r0, [sp, #196]	; 0xc4
   3665c:	adc.w	ip, r2, r1
   36660:	ldr	r2, [sp, #216]	; 0xd8
   36662:	adds.w	r3, r3, fp
   36666:	adc.w	ip, ip, r2
   3666a:	ldr	r2, [sp, #212]	; 0xd4
   3666c:	eor.w	r7, ip, r2
   36670:	ldr	r2, [sp, #208]	; 0xd0
   36672:	eor.w	r1, r3, r2
   36676:	ldr	r2, [sp, #192]	; 0xc0
   36678:	adds	r2, r2, r7
   3667a:	adc.w	r5, r0, r1
   3667e:	ldr	r0, [sp, #216]	; 0xd8
   36680:	eor.w	fp, r2, fp
   36684:	eors	r0, r5
   36686:	mov.w	r4, fp, lsr #24
   3668a:	orr.w	r8, r4, r0, lsl #8
   3668e:	lsrs	r0, r0, #24
   36690:	orr.w	r6, r0, fp, lsl #8
   36694:	ldr	r0, [sp, #68]	; 0x44
   36696:	ldr	r4, [sp, #264]	; 0x108
   36698:	adds	r3, r0, r3
   3669a:	ldr	r0, [sp, #72]	; 0x48
   3669c:	adc.w	ip, r0, ip
   366a0:	adds.w	r3, r3, r8
   366a4:	str	r3, [sp, #160]	; 0xa0
   366a6:	adc.w	r3, ip, r6
   366aa:	str	r3, [sp, #164]	; 0xa4
   366ac:	ldr	r3, [sp, #160]	; 0xa0
   366ae:	ldr	r0, [sp, #148]	; 0x94
   366b0:	eors	r7, r3
   366b2:	ldr	r3, [sp, #164]	; 0xa4
   366b4:	eors	r1, r3
   366b6:	lsrs	r3, r7, #16
   366b8:	orr.w	r3, r3, r1, lsl #16
   366bc:	lsrs	r1, r1, #16
   366be:	str	r3, [sp, #208]	; 0xd0
   366c0:	orr.w	r3, r1, r7, lsl #16
   366c4:	str	r3, [sp, #212]	; 0xd4
   366c6:	ldr	r3, [sp, #208]	; 0xd0
   366c8:	ldr	r1, [sp, #144]	; 0x90
   366ca:	adds	r2, r2, r3
   366cc:	ldr	r3, [sp, #212]	; 0xd4
   366ce:	eor.w	r8, r2, r8
   366d2:	adc.w	r5, r3, r5
   366d6:	eors	r6, r5
   366d8:	lsls	r3, r6, #1
   366da:	orr.w	r3, r3, r8, lsr #31
   366de:	mov.w	r8, r8, lsl #1
   366e2:	str	r3, [sp, #256]	; 0x100
   366e4:	orr.w	r3, r8, r6, lsr #31
   366e8:	str	r3, [sp, #216]	; 0xd8
   366ea:	ldr	r3, [sp, #28]
   366ec:	adds	r1, r3, r1
   366ee:	ldr	r3, [sp, #32]
   366f0:	adc.w	sl, r3, r0
   366f4:	ldr	r3, [sp, #264]	; 0x108
   366f6:	ldr	r0, [sp, #204]	; 0xcc
   366f8:	adds	r1, r1, r3
   366fa:	ldr	r3, [sp, #268]	; 0x10c
   366fc:	adc.w	sl, sl, r3
   36700:	ldr	r3, [sp, #236]	; 0xec
   36702:	eor.w	lr, sl, r3
   36706:	ldr	r3, [sp, #232]	; 0xe8
   36708:	eor.w	r7, r1, r3
   3670c:	ldr	r3, [sp, #200]	; 0xc8
   3670e:	adds.w	r3, r3, lr
   36712:	eor.w	r6, r3, r4
   36716:	ldr	r4, [sp, #268]	; 0x10c
   36718:	adcs	r0, r7
   3671a:	eor.w	ip, r0, r4
   3671e:	mov.w	fp, r6, lsr #24
   36722:	orr.w	r4, fp, ip, lsl #8
   36726:	mov.w	ip, ip, lsr #24
   3672a:	orr.w	r8, ip, r6, lsl #8
   3672e:	ldr	r6, [sp, #108]	; 0x6c
   36730:	adds	r1, r6, r1
   36732:	ldr	r6, [sp, #112]	; 0x70
   36734:	adc.w	sl, r6, sl
   36738:	adds	r1, r1, r4
   3673a:	str	r1, [sp, #144]	; 0x90
   3673c:	adc.w	r1, sl, r8
   36740:	str	r1, [sp, #148]	; 0x94
   36742:	ldr	r1, [sp, #144]	; 0x90
   36744:	eor.w	lr, r1, lr
   36748:	ldr	r1, [sp, #148]	; 0x94
   3674a:	eors	r7, r1
   3674c:	mov.w	r1, lr, lsr #16
   36750:	orr.w	r1, r1, r7, lsl #16
   36754:	lsrs	r7, r7, #16
   36756:	str	r1, [sp, #232]	; 0xe8
   36758:	orr.w	r1, r7, lr, lsl #16
   3675c:	str	r1, [sp, #236]	; 0xec
   3675e:	ldr	r1, [sp, #232]	; 0xe8
   36760:	ldr	r7, [sp, #156]	; 0x9c
   36762:	adds	r3, r3, r1
   36764:	ldr	r1, [sp, #236]	; 0xec
   36766:	eor.w	r4, r4, r3
   3676a:	adc.w	r0, r1, r0
   3676e:	eor.w	r8, r0, r8
   36772:	mov.w	r1, r8, lsl #1
   36776:	orr.w	r6, r1, r4, lsr #31
   3677a:	lsls	r4, r4, #1
   3677c:	orr.w	fp, r4, r8, lsr #31
   36780:	ldr	r1, [sp, #20]
   36782:	ldr	r4, [sp, #152]	; 0x98
   36784:	adds	r1, r1, r4
   36786:	ldr	r4, [sp, #24]
   36788:	adc.w	sl, r4, r7
   3678c:	adds.w	r1, r1, fp
   36790:	ldr	r4, [sp, #228]	; 0xe4
   36792:	adc.w	sl, sl, r6
   36796:	eor.w	lr, sl, r9
   3679a:	adds.w	r2, r2, lr
   3679e:	eor.w	r7, r1, r4
   367a2:	adc.w	r5, r7, r5
   367a6:	eor.w	fp, r2, fp
   367aa:	eor.w	ip, r5, r6
   367ae:	mov.w	r4, fp, lsr #24
   367b2:	orr.w	r6, r4, ip, lsl #8
   367b6:	ldr	r4, [sp, #100]	; 0x64
   367b8:	mov.w	ip, ip, lsr #24
   367bc:	adds	r1, r4, r1
   367be:	ldr	r4, [sp, #104]	; 0x68
   367c0:	orr.w	r8, ip, fp, lsl #8
   367c4:	adc.w	sl, r4, sl
   367c8:	adds	r1, r1, r6
   367ca:	str	r1, [sp, #152]	; 0x98
   367cc:	adc.w	r1, sl, r8
   367d0:	str	r1, [sp, #156]	; 0x9c
   367d2:	ldr	r1, [sp, #152]	; 0x98
   367d4:	eor.w	lr, r1, lr
   367d8:	ldr	r1, [sp, #156]	; 0x9c
   367da:	eors	r7, r1
   367dc:	mov.w	r1, lr, lsr #16
   367e0:	orr.w	r1, r1, r7, lsl #16
   367e4:	lsrs	r7, r7, #16
   367e6:	str	r1, [sp, #228]	; 0xe4
   367e8:	orr.w	r1, r7, lr, lsl #16
   367ec:	str	r1, [sp, #260]	; 0x104
   367ee:	ldr	r1, [sp, #228]	; 0xe4
   367f0:	adds	r2, r2, r1
   367f2:	str	r2, [sp, #192]	; 0xc0
   367f4:	ldr	r2, [sp, #260]	; 0x104
   367f6:	ldr	r1, [sp, #168]	; 0xa8
   367f8:	adc.w	r2, r5, r2
   367fc:	str	r2, [sp, #196]	; 0xc4
   367fe:	ldr	r2, [sp, #192]	; 0xc0
   36800:	eors	r6, r2
   36802:	ldr	r2, [sp, #196]	; 0xc4
   36804:	eor.w	r8, r2, r8
   36808:	mov.w	r2, r8, lsl #1
   3680c:	orr.w	r2, r2, r6, lsr #31
   36810:	lsls	r6, r6, #1
   36812:	str	r2, [sp, #268]	; 0x10c
   36814:	orr.w	r2, r6, r8, lsr #31
   36818:	str	r2, [sp, #264]	; 0x108
   3681a:	ldr	r2, [sp, #52]	; 0x34
   3681c:	adds	r2, r2, r1
   3681e:	ldr	r1, [sp, #56]	; 0x38
   36820:	ldr	r4, [sp, #172]	; 0xac
   36822:	ldr	r5, [sp, #252]	; 0xfc
   36824:	adc.w	r7, r1, r4
   36828:	ldr	r1, [sp, #244]	; 0xf4
   3682a:	ldr	r4, [sp, #244]	; 0xf4
   3682c:	adds	r2, r2, r1
   3682e:	ldr	r1, [sp, #252]	; 0xfc
   36830:	adc.w	r7, r1, r7
   36834:	ldr	r1, [sp, #212]	; 0xd4
   36836:	eor.w	r6, r7, r1
   3683a:	ldr	r1, [sp, #208]	; 0xd0
   3683c:	adds	r3, r3, r6
   3683e:	eor.w	r1, r2, r1
   36842:	eor.w	r4, r3, r4
   36846:	adc.w	r0, r1, r0
   3684a:	eors	r5, r0
   3684c:	mov.w	r8, r4, lsr #24
   36850:	orr.w	ip, r8, r5, lsl #8
   36854:	lsrs	r5, r5, #24
   36856:	orr.w	lr, r5, r4, lsl #8
   3685a:	ldr	r4, [sp, #84]	; 0x54
   3685c:	adds	r2, r4, r2
   3685e:	ldr	r4, [sp, #88]	; 0x58
   36860:	adc.w	r7, r4, r7
   36864:	adds.w	r2, r2, ip
   36868:	str	r2, [sp, #168]	; 0xa8
   3686a:	adc.w	r2, r7, lr
   3686e:	str	r2, [sp, #172]	; 0xac
   36870:	ldr	r2, [sp, #168]	; 0xa8
   36872:	eors	r6, r2
   36874:	ldr	r2, [sp, #172]	; 0xac
   36876:	eors	r1, r2
   36878:	lsrs	r2, r6, #16
   3687a:	orr.w	r2, r2, r1, lsl #16
   3687e:	lsrs	r1, r1, #16
   36880:	str	r2, [sp, #208]	; 0xd0
   36882:	orr.w	r2, r1, r6, lsl #16
   36886:	str	r2, [sp, #212]	; 0xd4
   36888:	ldr	r2, [sp, #208]	; 0xd0
   3688a:	ldr	r1, [sp, #164]	; 0xa4
   3688c:	adds	r3, r3, r2
   3688e:	str	r3, [sp, #200]	; 0xc8
   36890:	ldr	r3, [sp, #212]	; 0xd4
   36892:	adc.w	r3, r0, r3
   36896:	str	r3, [sp, #204]	; 0xcc
   36898:	ldr	r2, [sp, #204]	; 0xcc
   3689a:	ldr	r3, [sp, #200]	; 0xc8
   3689c:	eor.w	lr, r2, lr
   368a0:	eor.w	r3, r3, ip
   368a4:	mov.w	r2, lr, lsl #1
   368a8:	orr.w	r2, r2, r3, lsr #31
   368ac:	mov.w	ip, r3, lsl #1
   368b0:	str	r2, [sp, #244]	; 0xf4
   368b2:	orr.w	ip, ip, lr, lsr #31
   368b6:	ldr	r2, [sp, #160]	; 0xa0
   368b8:	ldr	r3, [sp, #4]
   368ba:	adds	r3, r3, r2
   368bc:	ldr	r2, [sp, #8]
   368be:	adc.w	lr, r2, r1
   368c2:	ldr	r2, [sp, #240]	; 0xf0
   368c4:	adds	r3, r3, r2
   368c6:	ldr	r2, [sp, #248]	; 0xf8
   368c8:	adc.w	lr, lr, r2
   368cc:	ldr	r2, [sp, #236]	; 0xec
   368ce:	eor.w	r6, lr, r2
   368d2:	ldr	r2, [sp, #232]	; 0xe8
   368d4:	eor.w	r0, r3, r2
   368d8:	ldr	r2, [sp, #176]	; 0xb0
   368da:	ldr	r1, [sp, #180]	; 0xb4
   368dc:	adds	r2, r2, r6
   368de:	adc.w	r5, r1, r0
   368e2:	ldr	r1, [sp, #240]	; 0xf0
   368e4:	eor.w	r8, r2, r1
   368e8:	ldr	r1, [sp, #248]	; 0xf8
   368ea:	eor.w	r4, r5, r1
   368ee:	mov.w	r9, r8, lsr #24
   368f2:	orr.w	r1, r9, r4, lsl #8
   368f6:	lsrs	r4, r4, #24
   368f8:	orr.w	r7, r4, r8, lsl #8
   368fc:	ldr	r4, [sp, #92]	; 0x5c
   368fe:	adds	r3, r4, r3
   36900:	ldr	r4, [sp, #96]	; 0x60
   36902:	adc.w	lr, r4, lr
   36906:	adds	r3, r3, r1
   36908:	str	r3, [sp, #160]	; 0xa0
   3690a:	adc.w	r3, lr, r7
   3690e:	str	r3, [sp, #164]	; 0xa4
   36910:	ldr	r3, [sp, #160]	; 0xa0
   36912:	ldr	r4, [sp, #216]	; 0xd8
   36914:	eors	r6, r3
   36916:	ldr	r3, [sp, #164]	; 0xa4
   36918:	eors	r0, r3
   3691a:	lsrs	r3, r6, #16
   3691c:	orr.w	r3, r3, r0, lsl #16
   36920:	lsrs	r0, r0, #16
   36922:	str	r3, [sp, #232]	; 0xe8
   36924:	orr.w	r3, r0, r6, lsl #16
   36928:	str	r3, [sp, #236]	; 0xec
   3692a:	ldr	r3, [sp, #232]	; 0xe8
   3692c:	ldr	r0, [sp, #148]	; 0x94
   3692e:	adds	r2, r2, r3
   36930:	ldr	r3, [sp, #236]	; 0xec
   36932:	eor.w	r1, r1, r2
   36936:	adc.w	r5, r3, r5
   3693a:	eors	r7, r5
   3693c:	lsls	r3, r7, #1
   3693e:	orr.w	r3, r3, r1, lsr #31
   36942:	lsls	r1, r1, #1
   36944:	str	r3, [sp, #248]	; 0xf8
   36946:	orr.w	r3, r1, r7, lsr #31
   3694a:	ldr	r1, [sp, #144]	; 0x90
   3694c:	str	r3, [sp, #240]	; 0xf0
   3694e:	ldr	r3, [sp, #68]	; 0x44
   36950:	adds	r1, r3, r1
   36952:	ldr	r3, [sp, #72]	; 0x48
   36954:	adc.w	sl, r3, r0
   36958:	ldr	r3, [sp, #216]	; 0xd8
   3695a:	ldr	r0, [sp, #188]	; 0xbc
   3695c:	adds	r1, r1, r3
   3695e:	ldr	r3, [sp, #256]	; 0x100
   36960:	adc.w	sl, sl, r3
   36964:	ldr	r3, [sp, #224]	; 0xe0
   36966:	eor.w	lr, sl, r3
   3696a:	ldr	r3, [sp, #220]	; 0xdc
   3696c:	eor.w	r6, r1, r3
   36970:	ldr	r3, [sp, #184]	; 0xb8
   36972:	adds.w	r3, r3, lr
   36976:	eor.w	r8, r3, r4
   3697a:	ldr	r4, [sp, #256]	; 0x100
   3697c:	adcs	r0, r6
   3697e:	eor.w	r7, r0, r4
   36982:	mov.w	fp, r8, lsr #24
   36986:	orr.w	r4, fp, r7, lsl #8
   3698a:	lsrs	r7, r7, #24
   3698c:	orr.w	r9, r7, r8, lsl #8
   36990:	ldr	r7, [sp, #28]
   36992:	adds	r1, r7, r1
   36994:	ldr	r7, [sp, #32]
   36996:	adc.w	sl, r7, sl
   3699a:	adds	r1, r1, r4
   3699c:	str	r1, [sp, #144]	; 0x90
   3699e:	adc.w	r1, sl, r9
   369a2:	str	r1, [sp, #148]	; 0x94
   369a4:	ldr	r1, [sp, #144]	; 0x90
   369a6:	eor.w	lr, r1, lr
   369aa:	ldr	r1, [sp, #148]	; 0x94
   369ac:	eors	r6, r1
   369ae:	mov.w	r1, lr, lsr #16
   369b2:	orr.w	r8, r1, r6, lsl #16
   369b6:	lsrs	r6, r6, #16
   369b8:	adds.w	r3, r3, r8
   369bc:	orr.w	sl, r6, lr, lsl #16
   369c0:	adc.w	r0, r0, sl
   369c4:	eors	r4, r3
   369c6:	eor.w	r9, r0, r9
   369ca:	ldr	r6, [sp, #156]	; 0x9c
   369cc:	mov.w	r1, r9, lsl #1
   369d0:	orr.w	r1, r1, r4, lsr #31
   369d4:	lsls	r4, r4, #1
   369d6:	orr.w	fp, r4, r9, lsr #31
   369da:	str	r1, [sp, #216]	; 0xd8
   369dc:	ldr	r4, [sp, #152]	; 0x98
   369de:	ldr	r1, [sp, #36]	; 0x24
   369e0:	adds	r1, r1, r4
   369e2:	ldr	r4, [sp, #40]	; 0x28
   369e4:	adc.w	r9, r4, r6
   369e8:	ldr	r4, [sp, #244]	; 0xf4
   369ea:	adds.w	r1, r1, ip
   369ee:	adc.w	r9, r9, r4
   369f2:	eor.w	r7, r1, r8
   369f6:	eor.w	lr, r9, sl
   369fa:	adds.w	r2, r2, lr
   369fe:	adc.w	r5, r7, r5
   36a02:	eor.w	ip, r2, ip
   36a06:	eor.w	r6, r5, r4
   36a0a:	mov.w	sl, ip, lsr #24
   36a0e:	orr.w	r4, sl, r6, lsl #8
   36a12:	lsrs	r6, r6, #24
   36a14:	orr.w	r8, r6, ip, lsl #8
   36a18:	ldr	r6, [sp, #108]	; 0x6c
   36a1a:	adds	r1, r6, r1
   36a1c:	ldr	r6, [sp, #112]	; 0x70
   36a1e:	adc.w	r9, r6, r9
   36a22:	adds	r1, r1, r4
   36a24:	str	r1, [sp, #152]	; 0x98
   36a26:	adc.w	r1, r9, r8
   36a2a:	str	r1, [sp, #156]	; 0x9c
   36a2c:	ldr	r1, [sp, #152]	; 0x98
   36a2e:	eor.w	lr, r1, lr
   36a32:	ldr	r1, [sp, #156]	; 0x9c
   36a34:	eors	r7, r1
   36a36:	mov.w	r1, lr, lsr #16
   36a3a:	orr.w	r1, r1, r7, lsl #16
   36a3e:	lsrs	r7, r7, #16
   36a40:	str	r1, [sp, #220]	; 0xdc
   36a42:	orr.w	r1, r7, lr, lsl #16
   36a46:	str	r1, [sp, #224]	; 0xe0
   36a48:	ldr	r1, [sp, #220]	; 0xdc
   36a4a:	adds	r2, r2, r1
   36a4c:	str	r2, [sp, #176]	; 0xb0
   36a4e:	ldr	r2, [sp, #224]	; 0xe0
   36a50:	ldr	r1, [sp, #168]	; 0xa8
   36a52:	adc.w	r2, r5, r2
   36a56:	str	r2, [sp, #180]	; 0xb4
   36a58:	ldr	r2, [sp, #176]	; 0xb0
   36a5a:	eors	r4, r2
   36a5c:	ldr	r2, [sp, #180]	; 0xb4
   36a5e:	eor.w	r8, r2, r8
   36a62:	mov.w	r2, r8, lsl #1
   36a66:	orr.w	r2, r2, r4, lsr #31
   36a6a:	lsls	r4, r4, #1
   36a6c:	str	r2, [sp, #252]	; 0xfc
   36a6e:	orr.w	r2, r4, r8, lsr #31
   36a72:	str	r2, [sp, #244]	; 0xf4
   36a74:	ldr	r2, [sp, #60]	; 0x3c
   36a76:	ldr	r4, [sp, #172]	; 0xac
   36a78:	adds	r2, r2, r1
   36a7a:	ldr	r1, [sp, #64]	; 0x40
   36a7c:	adc.w	r7, r1, r4
   36a80:	ldr	r1, [sp, #240]	; 0xf0
   36a82:	adds	r2, r2, r1
   36a84:	ldr	r1, [sp, #248]	; 0xf8
   36a86:	adc.w	r7, r1, r7
   36a8a:	ldr	r1, [sp, #260]	; 0x104
   36a8c:	eor.w	r4, r7, r1
   36a90:	ldr	r1, [sp, #228]	; 0xe4
   36a92:	adds	r3, r3, r4
   36a94:	eor.w	r9, r2, r1
   36a98:	ldr	r1, [sp, #240]	; 0xf0
   36a9a:	adc.w	r0, r0, r9
   36a9e:	eor.w	ip, r3, r1
   36aa2:	ldr	r1, [sp, #248]	; 0xf8
   36aa4:	eor.w	r5, r0, r1
   36aa8:	mov.w	lr, ip, lsr #24
   36aac:	orr.w	r1, lr, r5, lsl #8
   36ab0:	lsrs	r5, r5, #24
   36ab2:	orr.w	r6, r5, ip, lsl #8
   36ab6:	ldr	r5, [sp, #44]	; 0x2c
   36ab8:	adds	r2, r5, r2
   36aba:	ldr	r5, [sp, #48]	; 0x30
   36abc:	adc.w	r7, r5, r7
   36ac0:	adds	r2, r2, r1
   36ac2:	str	r2, [sp, #168]	; 0xa8
   36ac4:	adc.w	r2, r7, r6
   36ac8:	str	r2, [sp, #172]	; 0xac
   36aca:	ldr	r2, [sp, #168]	; 0xa8
   36acc:	eors	r4, r2
   36ace:	ldr	r2, [sp, #172]	; 0xac
   36ad0:	eor.w	r2, r2, r9
   36ad4:	lsrs	r5, r4, #16
   36ad6:	orr.w	r5, r5, r2, lsl #16
   36ada:	mov.w	r9, r2, lsr #16
   36ade:	orr.w	r9, r9, r4, lsl #16
   36ae2:	adds	r3, r3, r5
   36ae4:	str	r3, [sp, #184]	; 0xb8
   36ae6:	adc.w	r3, r0, r9
   36aea:	str	r3, [sp, #188]	; 0xbc
   36aec:	ldr	r3, [sp, #184]	; 0xb8
   36aee:	ldr	r2, [sp, #160]	; 0xa0
   36af0:	eors	r1, r3
   36af2:	ldr	r3, [sp, #188]	; 0xbc
   36af4:	ldr	r0, [sp, #196]	; 0xc4
   36af6:	eors	r6, r3
   36af8:	str	r5, [sp, #228]	; 0xe4
   36afa:	lsls	r3, r6, #1
   36afc:	orr.w	r3, r3, r1, lsr #31
   36b00:	lsls	r1, r1, #1
   36b02:	str	r3, [sp, #248]	; 0xf8
   36b04:	orr.w	r3, r1, r6, lsr #31
   36b08:	str	r3, [sp, #240]	; 0xf0
   36b0a:	ldr	r3, [sp, #124]	; 0x7c
   36b0c:	ldr	r1, [sp, #164]	; 0xa4
   36b0e:	adds	r3, r3, r2
   36b10:	ldr	r2, [sp, #128]	; 0x80
   36b12:	adc.w	ip, r2, r1
   36b16:	ldr	r2, [sp, #216]	; 0xd8
   36b18:	adds.w	r3, r3, fp
   36b1c:	adc.w	ip, ip, r2
   36b20:	ldr	r2, [sp, #212]	; 0xd4
   36b22:	eor.w	r7, ip, r2
   36b26:	ldr	r2, [sp, #208]	; 0xd0
   36b28:	eor.w	r1, r3, r2
   36b2c:	ldr	r2, [sp, #192]	; 0xc0
   36b2e:	adds	r2, r2, r7
   36b30:	adc.w	r5, r0, r1
   36b34:	ldr	r0, [sp, #216]	; 0xd8
   36b36:	eor.w	fp, r2, fp
   36b3a:	eors	r0, r5
   36b3c:	mov.w	r4, fp, lsr #24
   36b40:	orr.w	r8, r4, r0, lsl #8
   36b44:	lsrs	r0, r0, #24
   36b46:	orr.w	r6, r0, fp, lsl #8
   36b4a:	ldr	r0, [sp, #116]	; 0x74
   36b4c:	adds	r3, r0, r3
   36b4e:	ldr	r0, [sp, #120]	; 0x78
   36b50:	adc.w	ip, r0, ip
   36b54:	adds.w	r3, r3, r8
   36b58:	str	r3, [sp, #160]	; 0xa0
   36b5a:	adc.w	r3, ip, r6
   36b5e:	str	r3, [sp, #164]	; 0xa4
   36b60:	ldr	r3, [sp, #160]	; 0xa0
   36b62:	eors	r7, r3
   36b64:	ldr	r3, [sp, #164]	; 0xa4
   36b66:	eors	r1, r3
   36b68:	lsrs	r3, r7, #16
   36b6a:	orr.w	r3, r3, r1, lsl #16
   36b6e:	lsrs	r1, r1, #16
   36b70:	str	r3, [sp, #208]	; 0xd0
   36b72:	orr.w	r3, r1, r7, lsl #16
   36b76:	str	r3, [sp, #212]	; 0xd4
   36b78:	ldr	r3, [sp, #208]	; 0xd0
   36b7a:	ldr	r1, [sp, #144]	; 0x90
   36b7c:	adds	r2, r2, r3
   36b7e:	ldr	r3, [sp, #212]	; 0xd4
   36b80:	eor.w	r8, r2, r8
   36b84:	ldr	r0, [sp, #148]	; 0x94
   36b86:	adc.w	r5, r3, r5
   36b8a:	ldr	r4, [sp, #264]	; 0x108
   36b8c:	eors	r6, r5
   36b8e:	lsls	r3, r6, #1
   36b90:	orr.w	r3, r3, r8, lsr #31
   36b94:	mov.w	r8, r8, lsl #1
   36b98:	str	r3, [sp, #256]	; 0x100
   36b9a:	orr.w	r3, r8, r6, lsr #31
   36b9e:	str	r3, [sp, #216]	; 0xd8
   36ba0:	ldr	r3, [sp, #12]
   36ba2:	adds	r1, r3, r1
   36ba4:	ldr	r3, [sp, #16]
   36ba6:	adc.w	sl, r3, r0
   36baa:	ldr	r3, [sp, #264]	; 0x108
   36bac:	ldr	r0, [sp, #204]	; 0xcc
   36bae:	adds	r1, r1, r3
   36bb0:	ldr	r3, [sp, #268]	; 0x10c
   36bb2:	adc.w	sl, sl, r3
   36bb6:	ldr	r3, [sp, #236]	; 0xec
   36bb8:	eor.w	lr, sl, r3
   36bbc:	ldr	r3, [sp, #232]	; 0xe8
   36bbe:	eor.w	r7, r1, r3
   36bc2:	ldr	r3, [sp, #200]	; 0xc8
   36bc4:	adds.w	r3, r3, lr
   36bc8:	eor.w	r6, r3, r4
   36bcc:	ldr	r4, [sp, #268]	; 0x10c
   36bce:	adcs	r0, r7
   36bd0:	eor.w	ip, r0, r4
   36bd4:	mov.w	fp, r6, lsr #24
   36bd8:	orr.w	r4, fp, ip, lsl #8
   36bdc:	mov.w	ip, ip, lsr #24
   36be0:	orr.w	r8, ip, r6, lsl #8
   36be4:	ldr	r6, [sp, #76]	; 0x4c
   36be6:	adds	r1, r6, r1
   36be8:	ldr	r6, [sp, #80]	; 0x50
   36bea:	adc.w	sl, r6, sl
   36bee:	adds	r1, r1, r4
   36bf0:	str	r1, [sp, #144]	; 0x90
   36bf2:	adc.w	r1, sl, r8
   36bf6:	str	r1, [sp, #148]	; 0x94
   36bf8:	ldr	r1, [sp, #144]	; 0x90
   36bfa:	eor.w	lr, r1, lr
   36bfe:	ldr	r1, [sp, #148]	; 0x94
   36c00:	eors	r7, r1
   36c02:	mov.w	r1, lr, lsr #16
   36c06:	orr.w	r1, r1, r7, lsl #16
   36c0a:	lsrs	r7, r7, #16
   36c0c:	str	r1, [sp, #232]	; 0xe8
   36c0e:	orr.w	r1, r7, lr, lsl #16
   36c12:	str	r1, [sp, #236]	; 0xec
   36c14:	ldr	r1, [sp, #232]	; 0xe8
   36c16:	ldr	r7, [sp, #156]	; 0x9c
   36c18:	adds	r3, r3, r1
   36c1a:	ldr	r1, [sp, #236]	; 0xec
   36c1c:	eor.w	r4, r4, r3
   36c20:	adc.w	r0, r1, r0
   36c24:	eor.w	r8, r0, r8
   36c28:	mov.w	r1, r8, lsl #1
   36c2c:	orr.w	r6, r1, r4, lsr #31
   36c30:	lsls	r4, r4, #1
   36c32:	orr.w	fp, r4, r8, lsr #31
   36c36:	ldr	r1, [sp, #100]	; 0x64
   36c38:	ldr	r4, [sp, #152]	; 0x98
   36c3a:	adds	r1, r1, r4
   36c3c:	ldr	r4, [sp, #104]	; 0x68
   36c3e:	adc.w	sl, r4, r7
   36c42:	adds.w	r1, r1, fp
   36c46:	adc.w	sl, sl, r6
   36c4a:	ldr	r4, [sp, #228]	; 0xe4
   36c4c:	eor.w	lr, sl, r9
   36c50:	adds.w	r2, r2, lr
   36c54:	eor.w	r7, r1, r4
   36c58:	adc.w	r5, r7, r5
   36c5c:	eor.w	fp, r2, fp
   36c60:	eor.w	ip, r5, r6
   36c64:	mov.w	r4, fp, lsr #24
   36c68:	orr.w	r6, r4, ip, lsl #8
   36c6c:	ldr	r4, [sp, #44]	; 0x2c
   36c6e:	mov.w	ip, ip, lsr #24
   36c72:	adds	r1, r4, r1
   36c74:	ldr	r4, [sp, #48]	; 0x30
   36c76:	orr.w	r8, ip, fp, lsl #8
   36c7a:	adc.w	sl, r4, sl
   36c7e:	adds	r1, r1, r6
   36c80:	str	r1, [sp, #152]	; 0x98
   36c82:	adc.w	r1, sl, r8
   36c86:	str	r1, [sp, #156]	; 0x9c
   36c88:	ldr	r1, [sp, #152]	; 0x98
   36c8a:	ldr	r4, [sp, #172]	; 0xac
   36c8c:	eor.w	lr, r1, lr
   36c90:	ldr	r1, [sp, #156]	; 0x9c
   36c92:	eors	r7, r1
   36c94:	mov.w	r1, lr, lsr #16
   36c98:	orr.w	r1, r1, r7, lsl #16
   36c9c:	lsrs	r7, r7, #16
   36c9e:	str	r1, [sp, #228]	; 0xe4
   36ca0:	orr.w	r1, r7, lr, lsl #16
   36ca4:	str	r1, [sp, #260]	; 0x104
   36ca6:	ldr	r1, [sp, #228]	; 0xe4
   36ca8:	adds	r2, r2, r1
   36caa:	str	r2, [sp, #192]	; 0xc0
   36cac:	ldr	r2, [sp, #260]	; 0x104
   36cae:	ldr	r1, [sp, #168]	; 0xa8
   36cb0:	adc.w	r2, r5, r2
   36cb4:	str	r2, [sp, #196]	; 0xc4
   36cb6:	ldr	r2, [sp, #192]	; 0xc0
   36cb8:	ldr	r5, [sp, #252]	; 0xfc
   36cba:	eors	r6, r2
   36cbc:	ldr	r2, [sp, #196]	; 0xc4
   36cbe:	eor.w	r8, r2, r8
   36cc2:	mov.w	r2, r8, lsl #1
   36cc6:	orr.w	r2, r2, r6, lsr #31
   36cca:	lsls	r6, r6, #1
   36ccc:	str	r2, [sp, #268]	; 0x10c
   36cce:	orr.w	r2, r6, r8, lsr #31
   36cd2:	str	r2, [sp, #264]	; 0x108
   36cd4:	ldr	r2, [sp, #12]
   36cd6:	adds	r2, r2, r1
   36cd8:	ldr	r1, [sp, #16]
   36cda:	adc.w	r7, r1, r4
   36cde:	ldr	r1, [sp, #244]	; 0xf4
   36ce0:	ldr	r4, [sp, #244]	; 0xf4
   36ce2:	adds	r2, r2, r1
   36ce4:	ldr	r1, [sp, #252]	; 0xfc
   36ce6:	adc.w	r7, r1, r7
   36cea:	ldr	r1, [sp, #212]	; 0xd4
   36cec:	eor.w	r6, r7, r1
   36cf0:	ldr	r1, [sp, #208]	; 0xd0
   36cf2:	adds	r3, r3, r6
   36cf4:	eor.w	r1, r2, r1
   36cf8:	eor.w	r4, r3, r4
   36cfc:	adc.w	r0, r1, r0
   36d00:	eors	r5, r0
   36d02:	mov.w	r8, r4, lsr #24
   36d06:	orr.w	ip, r8, r5, lsl #8
   36d0a:	lsrs	r5, r5, #24
   36d0c:	orr.w	lr, r5, r4, lsl #8
   36d10:	ldr	r4, [sp, #124]	; 0x7c
   36d12:	adds	r2, r4, r2
   36d14:	ldr	r4, [sp, #128]	; 0x80
   36d16:	adc.w	r7, r4, r7
   36d1a:	adds.w	r2, r2, ip
   36d1e:	str	r2, [sp, #168]	; 0xa8
   36d20:	adc.w	r2, r7, lr
   36d24:	str	r2, [sp, #172]	; 0xac
   36d26:	ldr	r2, [sp, #168]	; 0xa8
   36d28:	eors	r6, r2
   36d2a:	ldr	r2, [sp, #172]	; 0xac
   36d2c:	eors	r1, r2
   36d2e:	lsrs	r2, r6, #16
   36d30:	orr.w	r2, r2, r1, lsl #16
   36d34:	lsrs	r1, r1, #16
   36d36:	str	r2, [sp, #208]	; 0xd0
   36d38:	orr.w	r2, r1, r6, lsl #16
   36d3c:	str	r2, [sp, #212]	; 0xd4
   36d3e:	ldr	r2, [sp, #208]	; 0xd0
   36d40:	ldr	r1, [sp, #164]	; 0xa4
   36d42:	adds	r3, r3, r2
   36d44:	str	r3, [sp, #200]	; 0xc8
   36d46:	ldr	r3, [sp, #212]	; 0xd4
   36d48:	adc.w	r3, r0, r3
   36d4c:	str	r3, [sp, #204]	; 0xcc
   36d4e:	ldr	r2, [sp, #204]	; 0xcc
   36d50:	ldr	r3, [sp, #200]	; 0xc8
   36d52:	eor.w	lr, r2, lr
   36d56:	eor.w	r3, r3, ip
   36d5a:	mov.w	r2, lr, lsl #1
   36d5e:	orr.w	r2, r2, r3, lsr #31
   36d62:	mov.w	ip, r3, lsl #1
   36d66:	str	r2, [sp, #244]	; 0xf4
   36d68:	orr.w	ip, ip, lr, lsr #31
   36d6c:	ldr	r2, [sp, #160]	; 0xa0
   36d6e:	ldr	r3, [sp, #116]	; 0x74
   36d70:	adds	r3, r3, r2
   36d72:	ldr	r2, [sp, #120]	; 0x78
   36d74:	adc.w	lr, r2, r1
   36d78:	ldr	r2, [sp, #240]	; 0xf0
   36d7a:	ldr	r1, [sp, #180]	; 0xb4
   36d7c:	adds	r3, r3, r2
   36d7e:	ldr	r2, [sp, #248]	; 0xf8
   36d80:	adc.w	lr, lr, r2
   36d84:	ldr	r2, [sp, #236]	; 0xec
   36d86:	eor.w	r6, lr, r2
   36d8a:	ldr	r2, [sp, #232]	; 0xe8
   36d8c:	eor.w	r0, r3, r2
   36d90:	ldr	r2, [sp, #176]	; 0xb0
   36d92:	adds	r2, r2, r6
   36d94:	adc.w	r5, r1, r0
   36d98:	ldr	r1, [sp, #240]	; 0xf0
   36d9a:	eor.w	r8, r2, r1
   36d9e:	ldr	r1, [sp, #248]	; 0xf8
   36da0:	eor.w	r4, r5, r1
   36da4:	mov.w	r9, r8, lsr #24
   36da8:	orr.w	r1, r9, r4, lsl #8
   36dac:	lsrs	r4, r4, #24
   36dae:	orr.w	r7, r4, r8, lsl #8
   36db2:	ldr	r4, [sp, #108]	; 0x6c
   36db4:	adds	r3, r4, r3
   36db6:	ldr	r4, [sp, #112]	; 0x70
   36db8:	adc.w	lr, r4, lr
   36dbc:	adds	r3, r3, r1
   36dbe:	str	r3, [sp, #160]	; 0xa0
   36dc0:	adc.w	r3, lr, r7
   36dc4:	str	r3, [sp, #164]	; 0xa4
   36dc6:	ldr	r3, [sp, #160]	; 0xa0
   36dc8:	eors	r6, r3
   36dca:	ldr	r3, [sp, #164]	; 0xa4
   36dcc:	eors	r0, r3
   36dce:	lsrs	r3, r6, #16
   36dd0:	orr.w	r3, r3, r0, lsl #16
   36dd4:	lsrs	r0, r0, #16
   36dd6:	str	r3, [sp, #232]	; 0xe8
   36dd8:	orr.w	r3, r0, r6, lsl #16
   36ddc:	str	r3, [sp, #236]	; 0xec
   36dde:	ldr	r3, [sp, #232]	; 0xe8
   36de0:	adds	r2, r2, r3
   36de2:	ldr	r3, [sp, #236]	; 0xec
   36de4:	eor.w	r1, r1, r2
   36de8:	adc.w	r5, r3, r5
   36dec:	eors	r7, r5
   36dee:	lsls	r3, r7, #1
   36df0:	orr.w	r3, r3, r1, lsr #31
   36df4:	lsls	r1, r1, #1
   36df6:	str	r3, [sp, #248]	; 0xf8
   36df8:	orr.w	r3, r1, r7, lsr #31
   36dfc:	str	r3, [sp, #240]	; 0xf0
   36dfe:	ldr	r3, [sp, #36]	; 0x24
   36e00:	ldr	r1, [sp, #144]	; 0x90
   36e02:	ldr	r0, [sp, #148]	; 0x94
   36e04:	adds	r1, r3, r1
   36e06:	ldr	r3, [sp, #40]	; 0x28
   36e08:	ldr	r4, [sp, #216]	; 0xd8
   36e0a:	adc.w	sl, r3, r0
   36e0e:	ldr	r3, [sp, #216]	; 0xd8
   36e10:	ldr	r0, [sp, #188]	; 0xbc
   36e12:	adds	r1, r1, r3
   36e14:	ldr	r3, [sp, #256]	; 0x100
   36e16:	adc.w	sl, sl, r3
   36e1a:	ldr	r3, [sp, #224]	; 0xe0
   36e1c:	eor.w	lr, sl, r3
   36e20:	ldr	r3, [sp, #220]	; 0xdc
   36e22:	eor.w	r6, r1, r3
   36e26:	ldr	r3, [sp, #184]	; 0xb8
   36e28:	adds.w	r3, r3, lr
   36e2c:	eor.w	r8, r3, r4
   36e30:	ldr	r4, [sp, #256]	; 0x100
   36e32:	adcs	r0, r6
   36e34:	eor.w	r7, r0, r4
   36e38:	mov.w	fp, r8, lsr #24
   36e3c:	orr.w	r4, fp, r7, lsl #8
   36e40:	lsrs	r7, r7, #24
   36e42:	orr.w	r9, r7, r8, lsl #8
   36e46:	ldr	r7, [sp, #84]	; 0x54
   36e48:	adds	r1, r7, r1
   36e4a:	ldr	r7, [sp, #88]	; 0x58
   36e4c:	adc.w	sl, r7, sl
   36e50:	adds	r1, r1, r4
   36e52:	str	r1, [sp, #144]	; 0x90
   36e54:	adc.w	r1, sl, r9
   36e58:	str	r1, [sp, #148]	; 0x94
   36e5a:	ldr	r1, [sp, #144]	; 0x90
   36e5c:	eor.w	lr, r1, lr
   36e60:	ldr	r1, [sp, #148]	; 0x94
   36e62:	eors	r6, r1
   36e64:	mov.w	r1, lr, lsr #16
   36e68:	orr.w	r8, r1, r6, lsl #16
   36e6c:	lsrs	r6, r6, #16
   36e6e:	adds.w	r3, r3, r8
   36e72:	orr.w	sl, r6, lr, lsl #16
   36e76:	adc.w	r0, r0, sl
   36e7a:	eors	r4, r3
   36e7c:	eor.w	r9, r0, r9
   36e80:	ldr	r6, [sp, #156]	; 0x9c
   36e82:	mov.w	r1, r9, lsl #1
   36e86:	orr.w	r1, r1, r4, lsr #31
   36e8a:	lsls	r4, r4, #1
   36e8c:	orr.w	fp, r4, r9, lsr #31
   36e90:	str	r1, [sp, #216]	; 0xd8
   36e92:	ldr	r4, [sp, #152]	; 0x98
   36e94:	ldr	r1, [sp, #4]
   36e96:	adds	r1, r1, r4
   36e98:	ldr	r4, [sp, #8]
   36e9a:	adc.w	r9, r4, r6
   36e9e:	ldr	r4, [sp, #244]	; 0xf4
   36ea0:	adds.w	r1, r1, ip
   36ea4:	adc.w	r9, r9, r4
   36ea8:	eor.w	r7, r1, r8
   36eac:	eor.w	lr, r9, sl
   36eb0:	adds.w	r2, r2, lr
   36eb4:	adc.w	r5, r7, r5
   36eb8:	eor.w	ip, r2, ip
   36ebc:	eor.w	r6, r5, r4
   36ec0:	mov.w	sl, ip, lsr #24
   36ec4:	orr.w	r4, sl, r6, lsl #8
   36ec8:	lsrs	r6, r6, #24
   36eca:	orr.w	r8, r6, ip, lsl #8
   36ece:	ldr	r6, [sp, #60]	; 0x3c
   36ed0:	adds	r1, r6, r1
   36ed2:	ldr	r6, [sp, #64]	; 0x40
   36ed4:	adc.w	r9, r6, r9
   36ed8:	adds	r1, r1, r4
   36eda:	str	r1, [sp, #152]	; 0x98
   36edc:	adc.w	r1, r9, r8
   36ee0:	str	r1, [sp, #156]	; 0x9c
   36ee2:	ldr	r1, [sp, #152]	; 0x98
   36ee4:	eor.w	lr, r1, lr
   36ee8:	ldr	r1, [sp, #156]	; 0x9c
   36eea:	eors	r7, r1
   36eec:	mov.w	r1, lr, lsr #16
   36ef0:	orr.w	r1, r1, r7, lsl #16
   36ef4:	lsrs	r7, r7, #16
   36ef6:	str	r1, [sp, #220]	; 0xdc
   36ef8:	orr.w	r1, r7, lr, lsl #16
   36efc:	str	r1, [sp, #224]	; 0xe0
   36efe:	ldr	r1, [sp, #220]	; 0xdc
   36f00:	adds	r2, r2, r1
   36f02:	str	r2, [sp, #176]	; 0xb0
   36f04:	ldr	r2, [sp, #224]	; 0xe0
   36f06:	ldr	r1, [sp, #168]	; 0xa8
   36f08:	adc.w	r2, r5, r2
   36f0c:	str	r2, [sp, #180]	; 0xb4
   36f0e:	ldr	r2, [sp, #176]	; 0xb0
   36f10:	eors	r4, r2
   36f12:	ldr	r2, [sp, #180]	; 0xb4
   36f14:	eor.w	r8, r2, r8
   36f18:	mov.w	r2, r8, lsl #1
   36f1c:	orr.w	r2, r2, r4, lsr #31
   36f20:	lsls	r4, r4, #1
   36f22:	str	r2, [sp, #252]	; 0xfc
   36f24:	orr.w	r2, r4, r8, lsr #31
   36f28:	str	r2, [sp, #244]	; 0xf4
   36f2a:	ldr	r2, [sp, #52]	; 0x34
   36f2c:	ldr	r4, [sp, #172]	; 0xac
   36f2e:	adds	r2, r2, r1
   36f30:	ldr	r1, [sp, #56]	; 0x38
   36f32:	adc.w	r7, r1, r4
   36f36:	ldr	r1, [sp, #240]	; 0xf0
   36f38:	adds	r2, r2, r1
   36f3a:	ldr	r1, [sp, #248]	; 0xf8
   36f3c:	adc.w	r7, r1, r7
   36f40:	ldr	r1, [sp, #260]	; 0x104
   36f42:	eor.w	r4, r7, r1
   36f46:	ldr	r1, [sp, #228]	; 0xe4
   36f48:	adds	r3, r3, r4
   36f4a:	eor.w	r9, r2, r1
   36f4e:	ldr	r1, [sp, #240]	; 0xf0
   36f50:	adc.w	r0, r0, r9
   36f54:	eor.w	ip, r3, r1
   36f58:	ldr	r1, [sp, #248]	; 0xf8
   36f5a:	eor.w	r5, r0, r1
   36f5e:	mov.w	lr, ip, lsr #24
   36f62:	orr.w	r1, lr, r5, lsl #8
   36f66:	lsrs	r5, r5, #24
   36f68:	orr.w	r6, r5, ip, lsl #8
   36f6c:	ldr	r5, [sp, #28]
   36f6e:	adds	r2, r5, r2
   36f70:	ldr	r5, [sp, #32]
   36f72:	adc.w	r7, r5, r7
   36f76:	adds	r2, r2, r1
   36f78:	str	r2, [sp, #168]	; 0xa8
   36f7a:	adc.w	r2, r7, r6
   36f7e:	str	r2, [sp, #172]	; 0xac
   36f80:	ldr	r2, [sp, #168]	; 0xa8
   36f82:	eors	r4, r2
   36f84:	ldr	r2, [sp, #172]	; 0xac
   36f86:	eor.w	r2, r2, r9
   36f8a:	lsrs	r5, r4, #16
   36f8c:	orr.w	r5, r5, r2, lsl #16
   36f90:	mov.w	r9, r2, lsr #16
   36f94:	orr.w	r9, r9, r4, lsl #16
   36f98:	adds	r3, r3, r5
   36f9a:	str	r3, [sp, #184]	; 0xb8
   36f9c:	adc.w	r3, r0, r9
   36fa0:	str	r3, [sp, #188]	; 0xbc
   36fa2:	ldr	r3, [sp, #184]	; 0xb8
   36fa4:	ldr	r2, [sp, #160]	; 0xa0
   36fa6:	eors	r1, r3
   36fa8:	ldr	r3, [sp, #188]	; 0xbc
   36faa:	str	r5, [sp, #228]	; 0xe4
   36fac:	eors	r6, r3
   36fae:	lsls	r3, r6, #1
   36fb0:	orr.w	r3, r3, r1, lsr #31
   36fb4:	lsls	r1, r1, #1
   36fb6:	str	r3, [sp, #248]	; 0xf8
   36fb8:	orr.w	r3, r1, r6, lsr #31
   36fbc:	str	r3, [sp, #240]	; 0xf0
   36fbe:	ldr	r3, [sp, #76]	; 0x4c
   36fc0:	adds	r3, r3, r2
   36fc2:	ldr	r2, [sp, #80]	; 0x50
   36fc4:	ldr	r1, [sp, #164]	; 0xa4
   36fc6:	ldr	r0, [sp, #196]	; 0xc4
   36fc8:	adc.w	ip, r2, r1
   36fcc:	ldr	r2, [sp, #216]	; 0xd8
   36fce:	adds.w	r3, r3, fp
   36fd2:	adc.w	ip, ip, r2
   36fd6:	ldr	r2, [sp, #212]	; 0xd4
   36fd8:	eor.w	r7, ip, r2
   36fdc:	ldr	r2, [sp, #208]	; 0xd0
   36fde:	eor.w	r1, r3, r2
   36fe2:	ldr	r2, [sp, #192]	; 0xc0
   36fe4:	adds	r2, r2, r7
   36fe6:	adc.w	r5, r0, r1
   36fea:	ldr	r0, [sp, #216]	; 0xd8
   36fec:	eor.w	fp, r2, fp
   36ff0:	eors	r0, r5
   36ff2:	mov.w	r4, fp, lsr #24
   36ff6:	orr.w	r8, r4, r0, lsl #8
   36ffa:	lsrs	r0, r0, #24
   36ffc:	orr.w	r6, r0, fp, lsl #8
   37000:	ldr	r0, [sp, #20]
   37002:	ldr	r4, [sp, #264]	; 0x108
   37004:	adds	r3, r0, r3
   37006:	ldr	r0, [sp, #24]
   37008:	adc.w	ip, r0, ip
   3700c:	adds.w	r3, r3, r8
   37010:	str	r3, [sp, #160]	; 0xa0
   37012:	adc.w	r3, ip, r6
   37016:	str	r3, [sp, #164]	; 0xa4
   37018:	ldr	r3, [sp, #160]	; 0xa0
   3701a:	ldr	r0, [sp, #148]	; 0x94
   3701c:	eors	r7, r3
   3701e:	ldr	r3, [sp, #164]	; 0xa4
   37020:	eors	r1, r3
   37022:	lsrs	r3, r7, #16
   37024:	orr.w	r3, r3, r1, lsl #16
   37028:	lsrs	r1, r1, #16
   3702a:	str	r3, [sp, #208]	; 0xd0
   3702c:	orr.w	r3, r1, r7, lsl #16
   37030:	str	r3, [sp, #212]	; 0xd4
   37032:	ldr	r3, [sp, #208]	; 0xd0
   37034:	ldr	r1, [sp, #144]	; 0x90
   37036:	adds	r2, r2, r3
   37038:	ldr	r3, [sp, #212]	; 0xd4
   3703a:	eor.w	r8, r2, r8
   3703e:	adc.w	r5, r3, r5
   37042:	eors	r6, r5
   37044:	lsls	r3, r6, #1
   37046:	orr.w	r3, r3, r8, lsr #31
   3704a:	mov.w	r8, r8, lsl #1
   3704e:	str	r3, [sp, #256]	; 0x100
   37050:	orr.w	r3, r8, r6, lsr #31
   37054:	str	r3, [sp, #216]	; 0xd8
   37056:	ldr	r3, [sp, #68]	; 0x44
   37058:	adds	r1, r3, r1
   3705a:	ldr	r3, [sp, #72]	; 0x48
   3705c:	adc.w	sl, r3, r0
   37060:	ldr	r3, [sp, #264]	; 0x108
   37062:	ldr	r0, [sp, #204]	; 0xcc
   37064:	adds	r1, r1, r3
   37066:	ldr	r3, [sp, #268]	; 0x10c
   37068:	adc.w	sl, sl, r3
   3706c:	ldr	r3, [sp, #236]	; 0xec
   3706e:	eor.w	lr, sl, r3
   37072:	ldr	r3, [sp, #232]	; 0xe8
   37074:	eor.w	r7, r1, r3
   37078:	ldr	r3, [sp, #200]	; 0xc8
   3707a:	adds.w	r3, r3, lr
   3707e:	eor.w	r6, r3, r4
   37082:	ldr	r4, [sp, #268]	; 0x10c
   37084:	adcs	r0, r7
   37086:	eor.w	ip, r0, r4
   3708a:	mov.w	fp, r6, lsr #24
   3708e:	orr.w	r4, fp, ip, lsl #8
   37092:	mov.w	ip, ip, lsr #24
   37096:	orr.w	r8, ip, r6, lsl #8
   3709a:	ldr	r6, [sp, #92]	; 0x5c
   3709c:	adds	r1, r6, r1
   3709e:	ldr	r6, [sp, #96]	; 0x60
   370a0:	adc.w	sl, r6, sl
   370a4:	adds	r1, r1, r4
   370a6:	str	r1, [sp, #144]	; 0x90
   370a8:	adc.w	r1, sl, r8
   370ac:	str	r1, [sp, #148]	; 0x94
   370ae:	ldr	r1, [sp, #144]	; 0x90
   370b0:	eor.w	lr, r1, lr
   370b4:	ldr	r1, [sp, #148]	; 0x94
   370b6:	eors	r7, r1
   370b8:	mov.w	r1, lr, lsr #16
   370bc:	orr.w	r1, r1, r7, lsl #16
   370c0:	lsrs	r7, r7, #16
   370c2:	str	r1, [sp, #232]	; 0xe8
   370c4:	orr.w	r1, r7, lr, lsl #16
   370c8:	str	r1, [sp, #236]	; 0xec
   370ca:	ldr	r1, [sp, #232]	; 0xe8
   370cc:	ldr	r7, [sp, #156]	; 0x9c
   370ce:	adds	r3, r3, r1
   370d0:	ldr	r1, [sp, #236]	; 0xec
   370d2:	eor.w	r4, r4, r3
   370d6:	adc.w	r0, r1, r0
   370da:	eor.w	r8, r0, r8
   370de:	mov.w	r1, r8, lsl #1
   370e2:	orr.w	r6, r1, r4, lsr #31
   370e6:	lsls	r4, r4, #1
   370e8:	orr.w	fp, r4, r8, lsr #31
   370ec:	ldr	r1, [sp, #108]	; 0x6c
   370ee:	ldr	r4, [sp, #152]	; 0x98
   370f0:	adds	r1, r1, r4
   370f2:	ldr	r4, [sp, #112]	; 0x70
   370f4:	adc.w	sl, r4, r7
   370f8:	adds.w	r1, r1, fp
   370fc:	ldr	r4, [sp, #228]	; 0xe4
   370fe:	adc.w	sl, sl, r6
   37102:	eor.w	lr, sl, r9
   37106:	adds.w	r2, r2, lr
   3710a:	eor.w	r7, r1, r4
   3710e:	adc.w	r5, r7, r5
   37112:	eor.w	fp, r2, fp
   37116:	eor.w	ip, r5, r6
   3711a:	mov.w	r4, fp, lsr #24
   3711e:	orr.w	r6, r4, ip, lsl #8
   37122:	ldr	r4, [sp, #92]	; 0x5c
   37124:	mov.w	ip, ip, lsr #24
   37128:	adds	r1, r4, r1
   3712a:	ldr	r4, [sp, #96]	; 0x60
   3712c:	orr.w	r8, ip, fp, lsl #8
   37130:	adc.w	sl, r4, sl
   37134:	adds	r1, r1, r6
   37136:	str	r1, [sp, #152]	; 0x98
   37138:	adc.w	r1, sl, r8
   3713c:	str	r1, [sp, #156]	; 0x9c
   3713e:	ldr	r1, [sp, #152]	; 0x98
   37140:	eor.w	lr, r1, lr
   37144:	ldr	r1, [sp, #156]	; 0x9c
   37146:	eors	r7, r1
   37148:	mov.w	r1, lr, lsr #16
   3714c:	orr.w	r1, r1, r7, lsl #16
   37150:	lsrs	r7, r7, #16
   37152:	str	r1, [sp, #228]	; 0xe4
   37154:	orr.w	r1, r7, lr, lsl #16
   37158:	str	r1, [sp, #260]	; 0x104
   3715a:	ldr	r1, [sp, #228]	; 0xe4
   3715c:	adds	r2, r2, r1
   3715e:	str	r2, [sp, #192]	; 0xc0
   37160:	ldr	r2, [sp, #260]	; 0x104
   37162:	ldr	r1, [sp, #168]	; 0xa8
   37164:	adc.w	r2, r5, r2
   37168:	str	r2, [sp, #196]	; 0xc4
   3716a:	ldr	r2, [sp, #192]	; 0xc0
   3716c:	eors	r6, r2
   3716e:	ldr	r2, [sp, #196]	; 0xc4
   37170:	eor.w	r8, r2, r8
   37174:	mov.w	r2, r8, lsl #1
   37178:	orr.w	r2, r2, r6, lsr #31
   3717c:	lsls	r6, r6, #1
   3717e:	str	r2, [sp, #268]	; 0x10c
   37180:	orr.w	r2, r6, r8, lsr #31
   37184:	str	r2, [sp, #264]	; 0x108
   37186:	ldr	r2, [sp, #60]	; 0x3c
   37188:	adds	r2, r2, r1
   3718a:	ldr	r1, [sp, #64]	; 0x40
   3718c:	ldr	r4, [sp, #172]	; 0xac
   3718e:	ldr	r5, [sp, #252]	; 0xfc
   37190:	adc.w	r7, r1, r4
   37194:	ldr	r1, [sp, #244]	; 0xf4
   37196:	ldr	r4, [sp, #244]	; 0xf4
   37198:	adds	r2, r2, r1
   3719a:	ldr	r1, [sp, #252]	; 0xfc
   3719c:	adc.w	r7, r1, r7
   371a0:	ldr	r1, [sp, #212]	; 0xd4
   371a2:	eor.w	r6, r7, r1
   371a6:	ldr	r1, [sp, #208]	; 0xd0
   371a8:	adds	r3, r3, r6
   371aa:	eor.w	r1, r2, r1
   371ae:	eor.w	r4, r3, r4
   371b2:	adc.w	r0, r1, r0
   371b6:	eors	r5, r0
   371b8:	mov.w	r8, r4, lsr #24
   371bc:	orr.w	ip, r8, r5, lsl #8
   371c0:	lsrs	r5, r5, #24
   371c2:	orr.w	lr, r5, r4, lsl #8
   371c6:	ldr	r4, [sp, #116]	; 0x74
   371c8:	adds	r2, r4, r2
   371ca:	ldr	r4, [sp, #120]	; 0x78
   371cc:	adc.w	r7, r4, r7
   371d0:	adds.w	r2, r2, ip
   371d4:	str	r2, [sp, #168]	; 0xa8
   371d6:	adc.w	r2, r7, lr
   371da:	str	r2, [sp, #172]	; 0xac
   371dc:	ldr	r2, [sp, #168]	; 0xa8
   371de:	eors	r6, r2
   371e0:	ldr	r2, [sp, #172]	; 0xac
   371e2:	eors	r1, r2
   371e4:	lsrs	r2, r6, #16
   371e6:	orr.w	r2, r2, r1, lsl #16
   371ea:	lsrs	r1, r1, #16
   371ec:	str	r2, [sp, #208]	; 0xd0
   371ee:	orr.w	r2, r1, r6, lsl #16
   371f2:	str	r2, [sp, #212]	; 0xd4
   371f4:	ldr	r2, [sp, #208]	; 0xd0
   371f6:	ldr	r1, [sp, #164]	; 0xa4
   371f8:	adds	r3, r3, r2
   371fa:	str	r3, [sp, #200]	; 0xc8
   371fc:	ldr	r3, [sp, #212]	; 0xd4
   371fe:	adc.w	r3, r0, r3
   37202:	str	r3, [sp, #204]	; 0xcc
   37204:	ldr	r2, [sp, #204]	; 0xcc
   37206:	ldr	r3, [sp, #200]	; 0xc8
   37208:	eor.w	lr, r2, lr
   3720c:	eor.w	r3, r3, ip
   37210:	mov.w	r2, lr, lsl #1
   37214:	orr.w	r2, r2, r3, lsr #31
   37218:	mov.w	ip, r3, lsl #1
   3721c:	str	r2, [sp, #244]	; 0xf4
   3721e:	orr.w	ip, ip, lr, lsr #31
   37222:	ldr	r2, [sp, #160]	; 0xa0
   37224:	ldr	r3, [sp, #100]	; 0x64
   37226:	adds	r3, r3, r2
   37228:	ldr	r2, [sp, #104]	; 0x68
   3722a:	adc.w	lr, r2, r1
   3722e:	ldr	r2, [sp, #240]	; 0xf0
   37230:	adds	r3, r3, r2
   37232:	ldr	r2, [sp, #248]	; 0xf8
   37234:	adc.w	lr, lr, r2
   37238:	ldr	r2, [sp, #236]	; 0xec
   3723a:	eor.w	r6, lr, r2
   3723e:	ldr	r2, [sp, #232]	; 0xe8
   37240:	eor.w	r0, r3, r2
   37244:	ldr	r2, [sp, #176]	; 0xb0
   37246:	ldr	r1, [sp, #180]	; 0xb4
   37248:	adds	r2, r2, r6
   3724a:	adc.w	r5, r1, r0
   3724e:	ldr	r1, [sp, #240]	; 0xf0
   37250:	eor.w	r8, r2, r1
   37254:	ldr	r1, [sp, #248]	; 0xf8
   37256:	eor.w	r4, r5, r1
   3725a:	mov.w	r9, r8, lsr #24
   3725e:	orr.w	r1, r9, r4, lsl #8
   37262:	lsrs	r4, r4, #24
   37264:	orr.w	r7, r4, r8, lsl #8
   37268:	ldr	r4, [sp, #12]
   3726a:	adds	r3, r4, r3
   3726c:	ldr	r4, [sp, #16]
   3726e:	adc.w	lr, r4, lr
   37272:	adds	r3, r3, r1
   37274:	str	r3, [sp, #160]	; 0xa0
   37276:	adc.w	r3, lr, r7
   3727a:	str	r3, [sp, #164]	; 0xa4
   3727c:	ldr	r3, [sp, #160]	; 0xa0
   3727e:	ldr	r4, [sp, #216]	; 0xd8
   37280:	eors	r6, r3
   37282:	ldr	r3, [sp, #164]	; 0xa4
   37284:	eors	r0, r3
   37286:	lsrs	r3, r6, #16
   37288:	orr.w	r3, r3, r0, lsl #16
   3728c:	lsrs	r0, r0, #16
   3728e:	str	r3, [sp, #232]	; 0xe8
   37290:	orr.w	r3, r0, r6, lsl #16
   37294:	str	r3, [sp, #236]	; 0xec
   37296:	ldr	r3, [sp, #232]	; 0xe8
   37298:	ldr	r0, [sp, #148]	; 0x94
   3729a:	adds	r2, r2, r3
   3729c:	ldr	r3, [sp, #236]	; 0xec
   3729e:	eor.w	r1, r1, r2
   372a2:	adc.w	r5, r3, r5
   372a6:	eors	r7, r5
   372a8:	lsls	r3, r7, #1
   372aa:	orr.w	r3, r3, r1, lsr #31
   372ae:	lsls	r1, r1, #1
   372b0:	str	r3, [sp, #248]	; 0xf8
   372b2:	orr.w	r3, r1, r7, lsr #31
   372b6:	ldr	r1, [sp, #144]	; 0x90
   372b8:	str	r3, [sp, #240]	; 0xf0
   372ba:	ldr	r3, [sp, #28]
   372bc:	adds	r1, r3, r1
   372be:	ldr	r3, [sp, #32]
   372c0:	adc.w	sl, r3, r0
   372c4:	ldr	r3, [sp, #216]	; 0xd8
   372c6:	ldr	r0, [sp, #188]	; 0xbc
   372c8:	adds	r1, r1, r3
   372ca:	ldr	r3, [sp, #256]	; 0x100
   372cc:	adc.w	sl, sl, r3
   372d0:	ldr	r3, [sp, #224]	; 0xe0
   372d2:	eor.w	lr, sl, r3
   372d6:	ldr	r3, [sp, #220]	; 0xdc
   372d8:	eor.w	r6, r1, r3
   372dc:	ldr	r3, [sp, #184]	; 0xb8
   372de:	adds.w	r3, r3, lr
   372e2:	eor.w	r8, r3, r4
   372e6:	ldr	r4, [sp, #256]	; 0x100
   372e8:	adcs	r0, r6
   372ea:	eor.w	r7, r0, r4
   372ee:	mov.w	fp, r8, lsr #24
   372f2:	orr.w	r4, fp, r7, lsl #8
   372f6:	lsrs	r7, r7, #24
   372f8:	orr.w	r9, r7, r8, lsl #8
   372fc:	ldr	r7, [sp, #76]	; 0x4c
   372fe:	adds	r1, r7, r1
   37300:	ldr	r7, [sp, #80]	; 0x50
   37302:	adc.w	sl, r7, sl
   37306:	adds	r1, r1, r4
   37308:	str	r1, [sp, #144]	; 0x90
   3730a:	adc.w	r1, sl, r9
   3730e:	str	r1, [sp, #148]	; 0x94
   37310:	ldr	r1, [sp, #144]	; 0x90
   37312:	eor.w	lr, r1, lr
   37316:	ldr	r1, [sp, #148]	; 0x94
   37318:	eors	r6, r1
   3731a:	mov.w	r1, lr, lsr #16
   3731e:	orr.w	r8, r1, r6, lsl #16
   37322:	lsrs	r6, r6, #16
   37324:	adds.w	r3, r3, r8
   37328:	orr.w	sl, r6, lr, lsl #16
   3732c:	adc.w	r0, r0, sl
   37330:	eors	r4, r3
   37332:	eor.w	r9, r0, r9
   37336:	ldr	r6, [sp, #156]	; 0x9c
   37338:	mov.w	r1, r9, lsl #1
   3733c:	orr.w	r1, r1, r4, lsr #31
   37340:	lsls	r4, r4, #1
   37342:	orr.w	fp, r4, r9, lsr #31
   37346:	str	r1, [sp, #216]	; 0xd8
   37348:	ldr	r4, [sp, #152]	; 0x98
   3734a:	ldr	r1, [sp, #44]	; 0x2c
   3734c:	adds	r1, r1, r4
   3734e:	ldr	r4, [sp, #48]	; 0x30
   37350:	adc.w	r9, r4, r6
   37354:	ldr	r4, [sp, #244]	; 0xf4
   37356:	adds.w	r1, r1, ip
   3735a:	adc.w	r9, r9, r4
   3735e:	eor.w	r7, r1, r8
   37362:	eor.w	lr, r9, sl
   37366:	adds.w	r2, r2, lr
   3736a:	adc.w	r5, r7, r5
   3736e:	eor.w	ip, r2, ip
   37372:	eor.w	r6, r5, r4
   37376:	mov.w	sl, ip, lsr #24
   3737a:	orr.w	r4, sl, r6, lsl #8
   3737e:	lsrs	r6, r6, #24
   37380:	orr.w	r8, r6, ip, lsl #8
   37384:	ldr	r6, [sp, #4]
   37386:	adds	r1, r6, r1
   37388:	ldr	r6, [sp, #8]
   3738a:	adc.w	r9, r6, r9
   3738e:	adds	r1, r1, r4
   37390:	str	r1, [sp, #152]	; 0x98
   37392:	adc.w	r1, r9, r8
   37396:	str	r1, [sp, #156]	; 0x9c
   37398:	ldr	r1, [sp, #152]	; 0x98
   3739a:	eor.w	lr, r1, lr
   3739e:	ldr	r1, [sp, #156]	; 0x9c
   373a0:	eors	r7, r1
   373a2:	mov.w	r1, lr, lsr #16
   373a6:	orr.w	r1, r1, r7, lsl #16
   373aa:	lsrs	r7, r7, #16
   373ac:	str	r1, [sp, #220]	; 0xdc
   373ae:	orr.w	r1, r7, lr, lsl #16
   373b2:	str	r1, [sp, #224]	; 0xe0
   373b4:	ldr	r1, [sp, #220]	; 0xdc
   373b6:	adds	r2, r2, r1
   373b8:	str	r2, [sp, #176]	; 0xb0
   373ba:	ldr	r2, [sp, #224]	; 0xe0
   373bc:	ldr	r1, [sp, #168]	; 0xa8
   373be:	adc.w	r2, r5, r2
   373c2:	str	r2, [sp, #180]	; 0xb4
   373c4:	ldr	r2, [sp, #176]	; 0xb0
   373c6:	eors	r4, r2
   373c8:	ldr	r2, [sp, #180]	; 0xb4
   373ca:	eor.w	r8, r2, r8
   373ce:	mov.w	r2, r8, lsl #1
   373d2:	orr.w	r2, r2, r4, lsr #31
   373d6:	lsls	r4, r4, #1
   373d8:	str	r2, [sp, #252]	; 0xfc
   373da:	orr.w	r2, r4, r8, lsr #31
   373de:	str	r2, [sp, #244]	; 0xf4
   373e0:	ldr	r2, [sp, #124]	; 0x7c
   373e2:	ldr	r4, [sp, #172]	; 0xac
   373e4:	adds	r2, r2, r1
   373e6:	ldr	r1, [sp, #128]	; 0x80
   373e8:	adc.w	r7, r1, r4
   373ec:	ldr	r1, [sp, #240]	; 0xf0
   373ee:	adds	r2, r2, r1
   373f0:	ldr	r1, [sp, #248]	; 0xf8
   373f2:	adc.w	r7, r1, r7
   373f6:	ldr	r1, [sp, #260]	; 0x104
   373f8:	eor.w	r4, r7, r1
   373fc:	ldr	r1, [sp, #228]	; 0xe4
   373fe:	adds	r3, r3, r4
   37400:	eor.w	r9, r2, r1
   37404:	ldr	r1, [sp, #240]	; 0xf0
   37406:	adc.w	r0, r0, r9
   3740a:	eor.w	ip, r3, r1
   3740e:	ldr	r1, [sp, #248]	; 0xf8
   37410:	eor.w	r5, r0, r1
   37414:	mov.w	lr, ip, lsr #24
   37418:	orr.w	r1, lr, r5, lsl #8
   3741c:	lsrs	r5, r5, #24
   3741e:	orr.w	r6, r5, ip, lsl #8
   37422:	ldr	r5, [sp, #36]	; 0x24
   37424:	adds	r2, r5, r2
   37426:	ldr	r5, [sp, #40]	; 0x28
   37428:	adc.w	r7, r5, r7
   3742c:	adds	r2, r2, r1
   3742e:	str	r2, [sp, #168]	; 0xa8
   37430:	adc.w	r2, r7, r6
   37434:	str	r2, [sp, #172]	; 0xac
   37436:	ldr	r2, [sp, #168]	; 0xa8
   37438:	eors	r4, r2
   3743a:	ldr	r2, [sp, #172]	; 0xac
   3743c:	eor.w	r2, r2, r9
   37440:	lsrs	r5, r4, #16
   37442:	orr.w	r5, r5, r2, lsl #16
   37446:	mov.w	r9, r2, lsr #16
   3744a:	orr.w	r9, r9, r4, lsl #16
   3744e:	adds	r3, r3, r5
   37450:	str	r3, [sp, #184]	; 0xb8
   37452:	adc.w	r3, r0, r9
   37456:	str	r3, [sp, #188]	; 0xbc
   37458:	ldr	r3, [sp, #184]	; 0xb8
   3745a:	ldr	r2, [sp, #160]	; 0xa0
   3745c:	eors	r1, r3
   3745e:	ldr	r3, [sp, #188]	; 0xbc
   37460:	ldr	r0, [sp, #196]	; 0xc4
   37462:	eors	r6, r3
   37464:	str	r5, [sp, #228]	; 0xe4
   37466:	lsls	r3, r6, #1
   37468:	orr.w	r3, r3, r1, lsr #31
   3746c:	lsls	r1, r1, #1
   3746e:	str	r3, [sp, #248]	; 0xf8
   37470:	orr.w	r3, r1, r6, lsr #31
   37474:	str	r3, [sp, #240]	; 0xf0
   37476:	ldr	r3, [sp, #68]	; 0x44
   37478:	ldr	r1, [sp, #164]	; 0xa4
   3747a:	adds	r3, r3, r2
   3747c:	ldr	r2, [sp, #72]	; 0x48
   3747e:	adc.w	ip, r2, r1
   37482:	ldr	r2, [sp, #216]	; 0xd8
   37484:	adds.w	r3, r3, fp
   37488:	adc.w	ip, ip, r2
   3748c:	ldr	r2, [sp, #212]	; 0xd4
   3748e:	eor.w	r7, ip, r2
   37492:	ldr	r2, [sp, #208]	; 0xd0
   37494:	eor.w	r1, r3, r2
   37498:	ldr	r2, [sp, #192]	; 0xc0
   3749a:	adds	r2, r2, r7
   3749c:	adc.w	r5, r0, r1
   374a0:	ldr	r0, [sp, #216]	; 0xd8
   374a2:	eor.w	fp, r2, fp
   374a6:	eors	r0, r5
   374a8:	mov.w	r4, fp, lsr #24
   374ac:	orr.w	r8, r4, r0, lsl #8
   374b0:	lsrs	r0, r0, #24
   374b2:	orr.w	r6, r0, fp, lsl #8
   374b6:	ldr	r0, [sp, #52]	; 0x34
   374b8:	adds	r3, r0, r3
   374ba:	ldr	r0, [sp, #56]	; 0x38
   374bc:	adc.w	ip, r0, ip
   374c0:	adds.w	r3, r3, r8
   374c4:	str	r3, [sp, #160]	; 0xa0
   374c6:	adc.w	r3, ip, r6
   374ca:	str	r3, [sp, #164]	; 0xa4
   374cc:	ldr	r3, [sp, #160]	; 0xa0
   374ce:	eors	r7, r3
   374d0:	ldr	r3, [sp, #164]	; 0xa4
   374d2:	eors	r1, r3
   374d4:	lsrs	r3, r7, #16
   374d6:	orr.w	r3, r3, r1, lsl #16
   374da:	lsrs	r1, r1, #16
   374dc:	str	r3, [sp, #208]	; 0xd0
   374de:	orr.w	r3, r1, r7, lsl #16
   374e2:	str	r3, [sp, #212]	; 0xd4
   374e4:	ldr	r3, [sp, #208]	; 0xd0
   374e6:	ldr	r1, [sp, #144]	; 0x90
   374e8:	adds	r2, r2, r3
   374ea:	ldr	r3, [sp, #212]	; 0xd4
   374ec:	eor.w	r8, r2, r8
   374f0:	ldr	r0, [sp, #148]	; 0x94
   374f2:	adc.w	r5, r3, r5
   374f6:	ldr	r4, [sp, #264]	; 0x108
   374f8:	eors	r6, r5
   374fa:	lsls	r3, r6, #1
   374fc:	orr.w	r3, r3, r8, lsr #31
   37500:	mov.w	r8, r8, lsl #1
   37504:	str	r3, [sp, #256]	; 0x100
   37506:	orr.w	r3, r8, r6, lsr #31
   3750a:	str	r3, [sp, #216]	; 0xd8
   3750c:	ldr	r3, [sp, #20]
   3750e:	adds	r1, r3, r1
   37510:	ldr	r3, [sp, #24]
   37512:	adc.w	sl, r3, r0
   37516:	ldr	r3, [sp, #264]	; 0x108
   37518:	ldr	r0, [sp, #204]	; 0xcc
   3751a:	adds	r1, r1, r3
   3751c:	ldr	r3, [sp, #268]	; 0x10c
   3751e:	adc.w	sl, sl, r3
   37522:	ldr	r3, [sp, #236]	; 0xec
   37524:	eor.w	lr, sl, r3
   37528:	ldr	r3, [sp, #232]	; 0xe8
   3752a:	eor.w	r7, r1, r3
   3752e:	ldr	r3, [sp, #200]	; 0xc8
   37530:	adds.w	r3, r3, lr
   37534:	eor.w	r6, r3, r4
   37538:	ldr	r4, [sp, #268]	; 0x10c
   3753a:	adcs	r0, r7
   3753c:	eor.w	ip, r0, r4
   37540:	mov.w	fp, r6, lsr #24
   37544:	orr.w	r4, fp, ip, lsl #8
   37548:	mov.w	ip, ip, lsr #24
   3754c:	orr.w	r8, ip, r6, lsl #8
   37550:	ldr	r6, [sp, #84]	; 0x54
   37552:	adds	r1, r6, r1
   37554:	ldr	r6, [sp, #88]	; 0x58
   37556:	adc.w	sl, r6, sl
   3755a:	adds	r1, r1, r4
   3755c:	str	r1, [sp, #144]	; 0x90
   3755e:	adc.w	r1, sl, r8
   37562:	str	r1, [sp, #148]	; 0x94
   37564:	ldr	r1, [sp, #144]	; 0x90
   37566:	eor.w	lr, r1, lr
   3756a:	ldr	r1, [sp, #148]	; 0x94
   3756c:	eors	r7, r1
   3756e:	mov.w	r1, lr, lsr #16
   37572:	orr.w	r1, r1, r7, lsl #16
   37576:	lsrs	r7, r7, #16
   37578:	str	r1, [sp, #232]	; 0xe8
   3757a:	orr.w	r1, r7, lr, lsl #16
   3757e:	str	r1, [sp, #236]	; 0xec
   37580:	ldr	r1, [sp, #232]	; 0xe8
   37582:	ldr	r7, [sp, #156]	; 0x9c
   37584:	adds	r3, r3, r1
   37586:	ldr	r1, [sp, #236]	; 0xec
   37588:	eor.w	r4, r4, r3
   3758c:	adc.w	r0, r1, r0
   37590:	eor.w	r8, r0, r8
   37594:	mov.w	r1, r8, lsl #1
   37598:	orr.w	r6, r1, r4, lsr #31
   3759c:	lsls	r4, r4, #1
   3759e:	orr.w	fp, r4, r8, lsr #31
   375a2:	ldr	r1, [sp, #52]	; 0x34
   375a4:	ldr	r4, [sp, #152]	; 0x98
   375a6:	adds	r1, r1, r4
   375a8:	ldr	r4, [sp, #56]	; 0x38
   375aa:	adc.w	sl, r4, r7
   375ae:	adds.w	r1, r1, fp
   375b2:	adc.w	sl, sl, r6
   375b6:	ldr	r4, [sp, #228]	; 0xe4
   375b8:	eor.w	lr, sl, r9
   375bc:	adds.w	r2, r2, lr
   375c0:	eor.w	r7, r1, r4
   375c4:	adc.w	r5, r7, r5
   375c8:	eor.w	fp, r2, fp
   375cc:	eor.w	ip, r5, r6
   375d0:	mov.w	r4, fp, lsr #24
   375d4:	orr.w	r6, r4, ip, lsl #8
   375d8:	ldr	r4, [sp, #124]	; 0x7c
   375da:	mov.w	ip, ip, lsr #24
   375de:	adds	r1, r4, r1
   375e0:	ldr	r4, [sp, #128]	; 0x80
   375e2:	orr.w	r8, ip, fp, lsl #8
   375e6:	adc.w	sl, r4, sl
   375ea:	adds	r1, r1, r6
   375ec:	str	r1, [sp, #152]	; 0x98
   375ee:	adc.w	r1, sl, r8
   375f2:	str	r1, [sp, #156]	; 0x9c
   375f4:	ldr	r1, [sp, #152]	; 0x98
   375f6:	ldr	r4, [sp, #172]	; 0xac
   375f8:	eor.w	lr, r1, lr
   375fc:	ldr	r1, [sp, #156]	; 0x9c
   375fe:	eors	r7, r1
   37600:	mov.w	r1, lr, lsr #16
   37604:	orr.w	r1, r1, r7, lsl #16
   37608:	lsrs	r7, r7, #16
   3760a:	str	r1, [sp, #228]	; 0xe4
   3760c:	orr.w	r1, r7, lr, lsl #16
   37610:	str	r1, [sp, #260]	; 0x104
   37612:	ldr	r1, [sp, #228]	; 0xe4
   37614:	adds	r2, r2, r1
   37616:	str	r2, [sp, #192]	; 0xc0
   37618:	ldr	r2, [sp, #260]	; 0x104
   3761a:	ldr	r1, [sp, #168]	; 0xa8
   3761c:	adc.w	r2, r5, r2
   37620:	str	r2, [sp, #196]	; 0xc4
   37622:	ldr	r2, [sp, #192]	; 0xc0
   37624:	ldr	r5, [sp, #252]	; 0xfc
   37626:	eors	r6, r2
   37628:	ldr	r2, [sp, #196]	; 0xc4
   3762a:	eor.w	r8, r2, r8
   3762e:	mov.w	r2, r8, lsl #1
   37632:	orr.w	r2, r2, r6, lsr #31
   37636:	lsls	r6, r6, #1
   37638:	str	r2, [sp, #268]	; 0x10c
   3763a:	orr.w	r2, r6, r8, lsr #31
   3763e:	str	r2, [sp, #264]	; 0x108
   37640:	ldr	r2, [sp, #116]	; 0x74
   37642:	adds	r2, r2, r1
   37644:	ldr	r1, [sp, #120]	; 0x78
   37646:	adc.w	r7, r1, r4
   3764a:	ldr	r1, [sp, #244]	; 0xf4
   3764c:	ldr	r4, [sp, #244]	; 0xf4
   3764e:	adds	r2, r2, r1
   37650:	ldr	r1, [sp, #252]	; 0xfc
   37652:	adc.w	r7, r1, r7
   37656:	ldr	r1, [sp, #212]	; 0xd4
   37658:	eor.w	r6, r7, r1
   3765c:	ldr	r1, [sp, #208]	; 0xd0
   3765e:	adds	r3, r3, r6
   37660:	eor.w	r1, r2, r1
   37664:	eor.w	r4, r3, r4
   37668:	adc.w	r0, r1, r0
   3766c:	eors	r5, r0
   3766e:	mov.w	r8, r4, lsr #24
   37672:	orr.w	ip, r8, r5, lsl #8
   37676:	lsrs	r5, r5, #24
   37678:	orr.w	lr, r5, r4, lsl #8
   3767c:	ldr	r4, [sp, #76]	; 0x4c
   3767e:	adds	r2, r4, r2
   37680:	ldr	r4, [sp, #80]	; 0x50
   37682:	adc.w	r7, r4, r7
   37686:	adds.w	r2, r2, ip
   3768a:	str	r2, [sp, #168]	; 0xa8
   3768c:	adc.w	r2, r7, lr
   37690:	str	r2, [sp, #172]	; 0xac
   37692:	ldr	r2, [sp, #168]	; 0xa8
   37694:	eors	r6, r2
   37696:	ldr	r2, [sp, #172]	; 0xac
   37698:	eors	r1, r2
   3769a:	lsrs	r2, r6, #16
   3769c:	orr.w	r2, r2, r1, lsl #16
   376a0:	lsrs	r1, r1, #16
   376a2:	str	r2, [sp, #208]	; 0xd0
   376a4:	orr.w	r2, r1, r6, lsl #16
   376a8:	str	r2, [sp, #212]	; 0xd4
   376aa:	ldr	r2, [sp, #208]	; 0xd0
   376ac:	ldr	r1, [sp, #164]	; 0xa4
   376ae:	adds	r3, r3, r2
   376b0:	str	r3, [sp, #200]	; 0xc8
   376b2:	ldr	r3, [sp, #212]	; 0xd4
   376b4:	adc.w	r3, r0, r3
   376b8:	str	r3, [sp, #204]	; 0xcc
   376ba:	ldr	r2, [sp, #204]	; 0xcc
   376bc:	ldr	r3, [sp, #200]	; 0xc8
   376be:	eor.w	lr, r2, lr
   376c2:	eor.w	r3, r3, ip
   376c6:	mov.w	r2, lr, lsl #1
   376ca:	orr.w	r2, r2, r3, lsr #31
   376ce:	mov.w	ip, r3, lsl #1
   376d2:	str	r2, [sp, #244]	; 0xf4
   376d4:	orr.w	ip, ip, lr, lsr #31
   376d8:	ldr	r2, [sp, #160]	; 0xa0
   376da:	ldr	r3, [sp, #92]	; 0x5c
   376dc:	adds	r3, r3, r2
   376de:	ldr	r2, [sp, #96]	; 0x60
   376e0:	adc.w	lr, r2, r1
   376e4:	ldr	r2, [sp, #240]	; 0xf0
   376e6:	ldr	r1, [sp, #180]	; 0xb4
   376e8:	adds	r3, r3, r2
   376ea:	ldr	r2, [sp, #248]	; 0xf8
   376ec:	adc.w	lr, lr, r2
   376f0:	ldr	r2, [sp, #236]	; 0xec
   376f2:	eor.w	r6, lr, r2
   376f6:	ldr	r2, [sp, #232]	; 0xe8
   376f8:	eor.w	r0, r3, r2
   376fc:	ldr	r2, [sp, #176]	; 0xb0
   376fe:	adds	r2, r2, r6
   37700:	adc.w	r5, r1, r0
   37704:	ldr	r1, [sp, #240]	; 0xf0
   37706:	eor.w	r8, r2, r1
   3770a:	ldr	r1, [sp, #248]	; 0xf8
   3770c:	eor.w	r4, r5, r1
   37710:	mov.w	r9, r8, lsr #24
   37714:	orr.w	r1, r9, r4, lsl #8
   37718:	lsrs	r4, r4, #24
   3771a:	orr.w	r7, r4, r8, lsl #8
   3771e:	ldr	r4, [sp, #28]
   37720:	adds	r3, r4, r3
   37722:	ldr	r4, [sp, #32]
   37724:	adc.w	lr, r4, lr
   37728:	adds	r3, r3, r1
   3772a:	str	r3, [sp, #160]	; 0xa0
   3772c:	adc.w	r3, lr, r7
   37730:	str	r3, [sp, #164]	; 0xa4
   37732:	ldr	r3, [sp, #160]	; 0xa0
   37734:	eors	r6, r3
   37736:	ldr	r3, [sp, #164]	; 0xa4
   37738:	eors	r0, r3
   3773a:	lsrs	r3, r6, #16
   3773c:	orr.w	r3, r3, r0, lsl #16
   37740:	lsrs	r0, r0, #16
   37742:	str	r3, [sp, #232]	; 0xe8
   37744:	orr.w	r3, r0, r6, lsl #16
   37748:	str	r3, [sp, #236]	; 0xec
   3774a:	ldr	r3, [sp, #232]	; 0xe8
   3774c:	adds	r2, r2, r3
   3774e:	ldr	r3, [sp, #236]	; 0xec
   37750:	eor.w	r1, r1, r2
   37754:	adc.w	r5, r3, r5
   37758:	eors	r7, r5
   3775a:	lsls	r3, r7, #1
   3775c:	orr.w	r3, r3, r1, lsr #31
   37760:	lsls	r1, r1, #1
   37762:	str	r3, [sp, #248]	; 0xf8
   37764:	orr.w	r3, r1, r7, lsr #31
   37768:	str	r3, [sp, #240]	; 0xf0
   3776a:	ldr	r3, [sp, #4]
   3776c:	ldr	r1, [sp, #144]	; 0x90
   3776e:	ldr	r0, [sp, #148]	; 0x94
   37770:	adds	r1, r3, r1
   37772:	ldr	r3, [sp, #8]
   37774:	ldr	r4, [sp, #216]	; 0xd8
   37776:	adc.w	sl, r3, r0
   3777a:	ldr	r3, [sp, #216]	; 0xd8
   3777c:	ldr	r0, [sp, #188]	; 0xbc
   3777e:	adds	r1, r1, r3
   37780:	ldr	r3, [sp, #256]	; 0x100
   37782:	adc.w	sl, sl, r3
   37786:	ldr	r3, [sp, #224]	; 0xe0
   37788:	eor.w	lr, sl, r3
   3778c:	ldr	r3, [sp, #220]	; 0xdc
   3778e:	eor.w	r6, r1, r3
   37792:	ldr	r3, [sp, #184]	; 0xb8
   37794:	adds.w	r3, r3, lr
   37798:	eor.w	r8, r3, r4
   3779c:	ldr	r4, [sp, #256]	; 0x100
   3779e:	adcs	r0, r6
   377a0:	eor.w	r7, r0, r4
   377a4:	mov.w	fp, r8, lsr #24
   377a8:	orr.w	r4, fp, r7, lsl #8
   377ac:	lsrs	r7, r7, #24
   377ae:	orr.w	r9, r7, r8, lsl #8
   377b2:	ldr	r7, [sp, #68]	; 0x44
   377b4:	adds	r1, r7, r1
   377b6:	ldr	r7, [sp, #72]	; 0x48
   377b8:	adc.w	sl, r7, sl
   377bc:	adds	r1, r1, r4
   377be:	str	r1, [sp, #144]	; 0x90
   377c0:	adc.w	r1, sl, r9
   377c4:	str	r1, [sp, #148]	; 0x94
   377c6:	ldr	r1, [sp, #144]	; 0x90
   377c8:	eor.w	lr, r1, lr
   377cc:	ldr	r1, [sp, #148]	; 0x94
   377ce:	eors	r6, r1
   377d0:	mov.w	r1, lr, lsr #16
   377d4:	orr.w	r8, r1, r6, lsl #16
   377d8:	lsrs	r6, r6, #16
   377da:	adds.w	r3, r3, r8
   377de:	orr.w	sl, r6, lr, lsl #16
   377e2:	adc.w	r0, r0, sl
   377e6:	eors	r4, r3
   377e8:	eor.w	r9, r0, r9
   377ec:	ldr	r6, [sp, #156]	; 0x9c
   377ee:	mov.w	r1, r9, lsl #1
   377f2:	orr.w	r1, r1, r4, lsr #31
   377f6:	lsls	r4, r4, #1
   377f8:	orr.w	fp, r4, r9, lsr #31
   377fc:	str	r1, [sp, #216]	; 0xd8
   377fe:	ldr	r4, [sp, #152]	; 0x98
   37800:	ldr	r1, [sp, #100]	; 0x64
   37802:	adds	r1, r1, r4
   37804:	ldr	r4, [sp, #104]	; 0x68
   37806:	adc.w	r9, r4, r6
   3780a:	ldr	r4, [sp, #244]	; 0xf4
   3780c:	adds.w	r1, r1, ip
   37810:	adc.w	r9, r9, r4
   37814:	eor.w	r7, r1, r8
   37818:	eor.w	lr, r9, sl
   3781c:	adds.w	r2, r2, lr
   37820:	adc.w	r5, r7, r5
   37824:	eor.w	ip, r2, ip
   37828:	eor.w	r6, r5, r4
   3782c:	mov.w	sl, ip, lsr #24
   37830:	orr.w	r4, sl, r6, lsl #8
   37834:	lsrs	r6, r6, #24
   37836:	orr.w	r8, r6, ip, lsl #8
   3783a:	ldr	r6, [sp, #20]
   3783c:	adds	r1, r6, r1
   3783e:	ldr	r6, [sp, #24]
   37840:	adc.w	r9, r6, r9
   37844:	adds	r1, r1, r4
   37846:	str	r1, [sp, #152]	; 0x98
   37848:	adc.w	r1, r9, r8
   3784c:	str	r1, [sp, #156]	; 0x9c
   3784e:	ldr	r1, [sp, #152]	; 0x98
   37850:	eor.w	lr, r1, lr
   37854:	ldr	r1, [sp, #156]	; 0x9c
   37856:	eors	r7, r1
   37858:	mov.w	r1, lr, lsr #16
   3785c:	orr.w	r1, r1, r7, lsl #16
   37860:	lsrs	r7, r7, #16
   37862:	str	r1, [sp, #220]	; 0xdc
   37864:	orr.w	r1, r7, lr, lsl #16
   37868:	str	r1, [sp, #224]	; 0xe0
   3786a:	ldr	r1, [sp, #220]	; 0xdc
   3786c:	adds	r2, r2, r1
   3786e:	str	r2, [sp, #176]	; 0xb0
   37870:	ldr	r2, [sp, #224]	; 0xe0
   37872:	ldr	r1, [sp, #168]	; 0xa8
   37874:	adc.w	r2, r5, r2
   37878:	str	r2, [sp, #180]	; 0xb4
   3787a:	ldr	r2, [sp, #176]	; 0xb0
   3787c:	eors	r4, r2
   3787e:	ldr	r2, [sp, #180]	; 0xb4
   37880:	eor.w	r8, r2, r8
   37884:	mov.w	r2, r8, lsl #1
   37888:	orr.w	r2, r2, r4, lsr #31
   3788c:	lsls	r4, r4, #1
   3788e:	str	r2, [sp, #252]	; 0xfc
   37890:	orr.w	r2, r4, r8, lsr #31
   37894:	str	r2, [sp, #244]	; 0xf4
   37896:	ldr	r2, [sp, #108]	; 0x6c
   37898:	ldr	r4, [sp, #172]	; 0xac
   3789a:	adds	r2, r2, r1
   3789c:	ldr	r1, [sp, #112]	; 0x70
   3789e:	adc.w	r7, r1, r4
   378a2:	ldr	r1, [sp, #240]	; 0xf0
   378a4:	adds	r2, r2, r1
   378a6:	ldr	r1, [sp, #248]	; 0xf8
   378a8:	adc.w	r7, r1, r7
   378ac:	ldr	r1, [sp, #260]	; 0x104
   378ae:	eor.w	r4, r7, r1
   378b2:	ldr	r1, [sp, #228]	; 0xe4
   378b4:	adds	r3, r3, r4
   378b6:	eor.w	r9, r2, r1
   378ba:	ldr	r1, [sp, #240]	; 0xf0
   378bc:	adc.w	r0, r0, r9
   378c0:	eor.w	ip, r3, r1
   378c4:	ldr	r1, [sp, #248]	; 0xf8
   378c6:	eor.w	r5, r0, r1
   378ca:	mov.w	lr, ip, lsr #24
   378ce:	orr.w	r1, lr, r5, lsl #8
   378d2:	lsrs	r5, r5, #24
   378d4:	orr.w	r6, r5, ip, lsl #8
   378d8:	ldr	r5, [sp, #60]	; 0x3c
   378da:	adds	r2, r5, r2
   378dc:	ldr	r5, [sp, #64]	; 0x40
   378de:	adc.w	r7, r5, r7
   378e2:	adds	r2, r2, r1
   378e4:	str	r2, [sp, #168]	; 0xa8
   378e6:	adc.w	r2, r7, r6
   378ea:	str	r2, [sp, #172]	; 0xac
   378ec:	ldr	r2, [sp, #168]	; 0xa8
   378ee:	eors	r4, r2
   378f0:	ldr	r2, [sp, #172]	; 0xac
   378f2:	eor.w	r2, r2, r9
   378f6:	lsrs	r5, r4, #16
   378f8:	orr.w	r5, r5, r2, lsl #16
   378fc:	mov.w	r9, r2, lsr #16
   37900:	orr.w	r9, r9, r4, lsl #16
   37904:	adds	r3, r3, r5
   37906:	str	r3, [sp, #184]	; 0xb8
   37908:	adc.w	r3, r0, r9
   3790c:	str	r3, [sp, #188]	; 0xbc
   3790e:	ldr	r3, [sp, #184]	; 0xb8
   37910:	ldr	r2, [sp, #160]	; 0xa0
   37912:	eors	r1, r3
   37914:	ldr	r3, [sp, #188]	; 0xbc
   37916:	str	r5, [sp, #228]	; 0xe4
   37918:	eors	r6, r3
   3791a:	lsls	r3, r6, #1
   3791c:	orr.w	r3, r3, r1, lsr #31
   37920:	lsls	r1, r1, #1
   37922:	str	r3, [sp, #248]	; 0xf8
   37924:	orr.w	r3, r1, r6, lsr #31
   37928:	str	r3, [sp, #240]	; 0xf0
   3792a:	ldr	r3, [sp, #12]
   3792c:	adds	r3, r3, r2
   3792e:	ldr	r2, [sp, #16]
   37930:	ldr	r1, [sp, #164]	; 0xa4
   37932:	ldr	r0, [sp, #196]	; 0xc4
   37934:	adc.w	ip, r2, r1
   37938:	ldr	r2, [sp, #216]	; 0xd8
   3793a:	adds.w	r3, r3, fp
   3793e:	adc.w	ip, ip, r2
   37942:	ldr	r2, [sp, #212]	; 0xd4
   37944:	eor.w	r7, ip, r2
   37948:	ldr	r2, [sp, #208]	; 0xd0
   3794a:	eor.w	r1, r3, r2
   3794e:	ldr	r2, [sp, #192]	; 0xc0
   37950:	adds	r2, r2, r7
   37952:	adc.w	r5, r0, r1
   37956:	ldr	r0, [sp, #216]	; 0xd8
   37958:	eor.w	fp, r2, fp
   3795c:	eors	r0, r5
   3795e:	mov.w	r4, fp, lsr #24
   37962:	orr.w	r8, r4, r0, lsl #8
   37966:	lsrs	r0, r0, #24
   37968:	orr.w	r6, r0, fp, lsl #8
   3796c:	ldr	r0, [sp, #36]	; 0x24
   3796e:	ldr	r4, [sp, #264]	; 0x108
   37970:	adds	r3, r0, r3
   37972:	ldr	r0, [sp, #40]	; 0x28
   37974:	adc.w	ip, r0, ip
   37978:	adds.w	r3, r3, r8
   3797c:	str	r3, [sp, #160]	; 0xa0
   3797e:	adc.w	r3, ip, r6
   37982:	str	r3, [sp, #164]	; 0xa4
   37984:	ldr	r3, [sp, #160]	; 0xa0
   37986:	ldr	r0, [sp, #148]	; 0x94
   37988:	eors	r7, r3
   3798a:	ldr	r3, [sp, #164]	; 0xa4
   3798c:	eors	r1, r3
   3798e:	lsrs	r3, r7, #16
   37990:	orr.w	r3, r3, r1, lsl #16
   37994:	lsrs	r1, r1, #16
   37996:	str	r3, [sp, #208]	; 0xd0
   37998:	orr.w	r3, r1, r7, lsl #16
   3799c:	str	r3, [sp, #212]	; 0xd4
   3799e:	ldr	r3, [sp, #208]	; 0xd0
   379a0:	ldr	r1, [sp, #144]	; 0x90
   379a2:	adds	r2, r2, r3
   379a4:	ldr	r3, [sp, #212]	; 0xd4
   379a6:	eor.w	r8, r2, r8
   379aa:	adc.w	r5, r3, r5
   379ae:	eors	r6, r5
   379b0:	lsls	r3, r6, #1
   379b2:	orr.w	r3, r3, r8, lsr #31
   379b6:	mov.w	r8, r8, lsl #1
   379ba:	str	r3, [sp, #256]	; 0x100
   379bc:	orr.w	r3, r8, r6, lsr #31
   379c0:	str	r3, [sp, #216]	; 0xd8
   379c2:	ldr	r3, [sp, #84]	; 0x54
   379c4:	adds	r1, r3, r1
   379c6:	ldr	r3, [sp, #88]	; 0x58
   379c8:	adc.w	sl, r3, r0
   379cc:	ldr	r3, [sp, #264]	; 0x108
   379ce:	ldr	r0, [sp, #204]	; 0xcc
   379d0:	adds	r1, r1, r3
   379d2:	ldr	r3, [sp, #268]	; 0x10c
   379d4:	adc.w	sl, sl, r3
   379d8:	ldr	r3, [sp, #236]	; 0xec
   379da:	eor.w	lr, sl, r3
   379de:	ldr	r3, [sp, #232]	; 0xe8
   379e0:	eor.w	r7, r1, r3
   379e4:	ldr	r3, [sp, #200]	; 0xc8
   379e6:	adds.w	r3, r3, lr
   379ea:	eor.w	r6, r3, r4
   379ee:	ldr	r4, [sp, #268]	; 0x10c
   379f0:	adcs	r0, r7
   379f2:	eor.w	ip, r0, r4
   379f6:	mov.w	fp, r6, lsr #24
   379fa:	orr.w	r4, fp, ip, lsl #8
   379fe:	mov.w	ip, ip, lsr #24
   37a02:	orr.w	r8, ip, r6, lsl #8
   37a06:	ldr	r6, [sp, #44]	; 0x2c
   37a08:	adds	r1, r6, r1
   37a0a:	ldr	r6, [sp, #48]	; 0x30
   37a0c:	adc.w	sl, r6, sl
   37a10:	adds	r1, r1, r4
   37a12:	str	r1, [sp, #144]	; 0x90
   37a14:	adc.w	r1, sl, r8
   37a18:	str	r1, [sp, #148]	; 0x94
   37a1a:	ldr	r1, [sp, #144]	; 0x90
   37a1c:	eor.w	lr, r1, lr
   37a20:	ldr	r1, [sp, #148]	; 0x94
   37a22:	eors	r7, r1
   37a24:	mov.w	r1, lr, lsr #16
   37a28:	orr.w	r1, r1, r7, lsl #16
   37a2c:	lsrs	r7, r7, #16
   37a2e:	str	r1, [sp, #232]	; 0xe8
   37a30:	orr.w	r1, r7, lr, lsl #16
   37a34:	str	r1, [sp, #236]	; 0xec
   37a36:	ldr	r1, [sp, #232]	; 0xe8
   37a38:	ldr	r7, [sp, #156]	; 0x9c
   37a3a:	adds	r3, r3, r1
   37a3c:	ldr	r1, [sp, #236]	; 0xec
   37a3e:	eor.w	r4, r4, r3
   37a42:	adc.w	r0, r1, r0
   37a46:	eor.w	r8, r0, r8
   37a4a:	mov.w	r1, r8, lsl #1
   37a4e:	orr.w	r6, r1, r4, lsr #31
   37a52:	lsls	r4, r4, #1
   37a54:	orr.w	fp, r4, r8, lsr #31
   37a58:	ldr	r1, [sp, #84]	; 0x54
   37a5a:	ldr	r4, [sp, #152]	; 0x98
   37a5c:	adds	r1, r1, r4
   37a5e:	ldr	r4, [sp, #88]	; 0x58
   37a60:	adc.w	sl, r4, r7
   37a64:	adds.w	r1, r1, fp
   37a68:	ldr	r4, [sp, #228]	; 0xe4
   37a6a:	adc.w	sl, sl, r6
   37a6e:	eor.w	lr, sl, r9
   37a72:	adds.w	r2, r2, lr
   37a76:	eor.w	r7, r1, r4
   37a7a:	adc.w	r5, r7, r5
   37a7e:	eor.w	fp, r2, fp
   37a82:	eor.w	ip, r5, r6
   37a86:	mov.w	r4, fp, lsr #24
   37a8a:	orr.w	r6, r4, ip, lsl #8
   37a8e:	ldr	r4, [sp, #20]
   37a90:	mov.w	ip, ip, lsr #24
   37a94:	adds	r1, r4, r1
   37a96:	ldr	r4, [sp, #24]
   37a98:	orr.w	r8, ip, fp, lsl #8
   37a9c:	adc.w	sl, r4, sl
   37aa0:	adds	r1, r1, r6
   37aa2:	str	r1, [sp, #152]	; 0x98
   37aa4:	adc.w	r1, sl, r8
   37aa8:	str	r1, [sp, #156]	; 0x9c
   37aaa:	ldr	r1, [sp, #152]	; 0x98
   37aac:	eor.w	lr, r1, lr
   37ab0:	ldr	r1, [sp, #156]	; 0x9c
   37ab2:	eors	r7, r1
   37ab4:	mov.w	r1, lr, lsr #16
   37ab8:	orr.w	r1, r1, r7, lsl #16
   37abc:	lsrs	r7, r7, #16
   37abe:	str	r1, [sp, #228]	; 0xe4
   37ac0:	orr.w	r1, r7, lr, lsl #16
   37ac4:	str	r1, [sp, #260]	; 0x104
   37ac6:	ldr	r1, [sp, #228]	; 0xe4
   37ac8:	adds	r2, r2, r1
   37aca:	str	r2, [sp, #192]	; 0xc0
   37acc:	ldr	r2, [sp, #260]	; 0x104
   37ace:	ldr	r1, [sp, #168]	; 0xa8
   37ad0:	adc.w	r2, r5, r2
   37ad4:	str	r2, [sp, #196]	; 0xc4
   37ad6:	ldr	r2, [sp, #192]	; 0xc0
   37ad8:	eors	r6, r2
   37ada:	ldr	r2, [sp, #196]	; 0xc4
   37adc:	eor.w	r8, r2, r8
   37ae0:	mov.w	r2, r8, lsl #1
   37ae4:	orr.w	r2, r2, r6, lsr #31
   37ae8:	lsls	r6, r6, #1
   37aea:	str	r2, [sp, #268]	; 0x10c
   37aec:	orr.w	r2, r6, r8, lsr #31
   37af0:	str	r2, [sp, #264]	; 0x108
   37af2:	ldr	r2, [sp, #68]	; 0x44
   37af4:	adds	r2, r2, r1
   37af6:	ldr	r1, [sp, #72]	; 0x48
   37af8:	ldr	r4, [sp, #172]	; 0xac
   37afa:	ldr	r5, [sp, #252]	; 0xfc
   37afc:	adc.w	r7, r1, r4
   37b00:	ldr	r1, [sp, #244]	; 0xf4
   37b02:	ldr	r4, [sp, #244]	; 0xf4
   37b04:	adds	r2, r2, r1
   37b06:	ldr	r1, [sp, #252]	; 0xfc
   37b08:	adc.w	r7, r1, r7
   37b0c:	ldr	r1, [sp, #212]	; 0xd4
   37b0e:	eor.w	r6, r7, r1
   37b12:	ldr	r1, [sp, #208]	; 0xd0
   37b14:	adds	r3, r3, r6
   37b16:	eor.w	r1, r2, r1
   37b1a:	eor.w	r4, r3, r4
   37b1e:	adc.w	r0, r1, r0
   37b22:	eors	r5, r0
   37b24:	mov.w	r8, r4, lsr #24
   37b28:	orr.w	ip, r8, r5, lsl #8
   37b2c:	lsrs	r5, r5, #24
   37b2e:	orr.w	lr, r5, r4, lsl #8
   37b32:	ldr	r4, [sp, #36]	; 0x24
   37b34:	adds	r2, r4, r2
   37b36:	ldr	r4, [sp, #40]	; 0x28
   37b38:	adc.w	r7, r4, r7
   37b3c:	adds.w	r2, r2, ip
   37b40:	str	r2, [sp, #168]	; 0xa8
   37b42:	adc.w	r2, r7, lr
   37b46:	str	r2, [sp, #172]	; 0xac
   37b48:	ldr	r2, [sp, #168]	; 0xa8
   37b4a:	eors	r6, r2
   37b4c:	ldr	r2, [sp, #172]	; 0xac
   37b4e:	eors	r1, r2
   37b50:	lsrs	r2, r6, #16
   37b52:	orr.w	r2, r2, r1, lsl #16
   37b56:	lsrs	r1, r1, #16
   37b58:	str	r2, [sp, #208]	; 0xd0
   37b5a:	orr.w	r2, r1, r6, lsl #16
   37b5e:	str	r2, [sp, #212]	; 0xd4
   37b60:	ldr	r2, [sp, #208]	; 0xd0
   37b62:	ldr	r1, [sp, #164]	; 0xa4
   37b64:	adds	r3, r3, r2
   37b66:	str	r3, [sp, #200]	; 0xc8
   37b68:	ldr	r3, [sp, #212]	; 0xd4
   37b6a:	adc.w	r3, r0, r3
   37b6e:	str	r3, [sp, #204]	; 0xcc
   37b70:	ldr	r2, [sp, #204]	; 0xcc
   37b72:	ldr	r3, [sp, #200]	; 0xc8
   37b74:	eor.w	lr, r2, lr
   37b78:	eor.w	r3, r3, ip
   37b7c:	mov.w	r2, lr, lsl #1
   37b80:	orr.w	r2, r2, r3, lsr #31
   37b84:	mov.w	ip, r3, lsl #1
   37b88:	str	r2, [sp, #244]	; 0xf4
   37b8a:	orr.w	ip, ip, lr, lsr #31
   37b8e:	ldr	r2, [sp, #160]	; 0xa0
   37b90:	ldr	r3, [sp, #60]	; 0x3c
   37b92:	adds	r3, r3, r2
   37b94:	ldr	r2, [sp, #64]	; 0x40
   37b96:	adc.w	lr, r2, r1
   37b9a:	ldr	r2, [sp, #240]	; 0xf0
   37b9c:	adds	r3, r3, r2
   37b9e:	ldr	r2, [sp, #248]	; 0xf8
   37ba0:	adc.w	lr, lr, r2
   37ba4:	ldr	r2, [sp, #236]	; 0xec
   37ba6:	eor.w	r6, lr, r2
   37baa:	ldr	r2, [sp, #232]	; 0xe8
   37bac:	eor.w	r0, r3, r2
   37bb0:	ldr	r2, [sp, #176]	; 0xb0
   37bb2:	ldr	r1, [sp, #180]	; 0xb4
   37bb4:	adds	r2, r2, r6
   37bb6:	adc.w	r5, r1, r0
   37bba:	ldr	r1, [sp, #240]	; 0xf0
   37bbc:	eor.w	r8, r2, r1
   37bc0:	ldr	r1, [sp, #248]	; 0xf8
   37bc2:	eor.w	r4, r5, r1
   37bc6:	mov.w	r9, r8, lsr #24
   37bca:	orr.w	r1, r9, r4, lsl #8
   37bce:	lsrs	r4, r4, #24
   37bd0:	orr.w	r7, r4, r8, lsl #8
   37bd4:	ldr	r4, [sp, #52]	; 0x34
   37bd6:	adds	r3, r4, r3
   37bd8:	ldr	r4, [sp, #56]	; 0x38
   37bda:	adc.w	lr, r4, lr
   37bde:	adds	r3, r3, r1
   37be0:	str	r3, [sp, #160]	; 0xa0
   37be2:	adc.w	r3, lr, r7
   37be6:	str	r3, [sp, #164]	; 0xa4
   37be8:	ldr	r3, [sp, #160]	; 0xa0
   37bea:	ldr	r4, [sp, #216]	; 0xd8
   37bec:	eors	r6, r3
   37bee:	ldr	r3, [sp, #164]	; 0xa4
   37bf0:	eors	r0, r3
   37bf2:	lsrs	r3, r6, #16
   37bf4:	orr.w	r3, r3, r0, lsl #16
   37bf8:	lsrs	r0, r0, #16
   37bfa:	str	r3, [sp, #232]	; 0xe8
   37bfc:	orr.w	r3, r0, r6, lsl #16
   37c00:	str	r3, [sp, #236]	; 0xec
   37c02:	ldr	r3, [sp, #232]	; 0xe8
   37c04:	ldr	r0, [sp, #148]	; 0x94
   37c06:	adds	r2, r2, r3
   37c08:	ldr	r3, [sp, #236]	; 0xec
   37c0a:	eor.w	r1, r1, r2
   37c0e:	adc.w	r5, r3, r5
   37c12:	eors	r7, r5
   37c14:	lsls	r3, r7, #1
   37c16:	orr.w	r3, r3, r1, lsr #31
   37c1a:	lsls	r1, r1, #1
   37c1c:	str	r3, [sp, #248]	; 0xf8
   37c1e:	orr.w	r3, r1, r7, lsr #31
   37c22:	ldr	r1, [sp, #144]	; 0x90
   37c24:	str	r3, [sp, #240]	; 0xf0
   37c26:	ldr	r3, [sp, #12]
   37c28:	adds	r1, r3, r1
   37c2a:	ldr	r3, [sp, #16]
   37c2c:	adc.w	sl, r3, r0
   37c30:	ldr	r3, [sp, #216]	; 0xd8
   37c32:	ldr	r0, [sp, #188]	; 0xbc
   37c34:	adds	r1, r1, r3
   37c36:	ldr	r3, [sp, #256]	; 0x100
   37c38:	adc.w	sl, sl, r3
   37c3c:	ldr	r3, [sp, #224]	; 0xe0
   37c3e:	eor.w	lr, sl, r3
   37c42:	ldr	r3, [sp, #220]	; 0xdc
   37c44:	eor.w	r6, r1, r3
   37c48:	ldr	r3, [sp, #184]	; 0xb8
   37c4a:	adds.w	r3, r3, lr
   37c4e:	eor.w	r8, r3, r4
   37c52:	ldr	r4, [sp, #256]	; 0x100
   37c54:	adcs	r0, r6
   37c56:	eor.w	r7, r0, r4
   37c5a:	mov.w	fp, r8, lsr #24
   37c5e:	orr.w	r4, fp, r7, lsl #8
   37c62:	lsrs	r7, r7, #24
   37c64:	orr.w	r9, r7, r8, lsl #8
   37c68:	ldr	r7, [sp, #44]	; 0x2c
   37c6a:	adds	r1, r7, r1
   37c6c:	ldr	r7, [sp, #48]	; 0x30
   37c6e:	adc.w	sl, r7, sl
   37c72:	adds	r1, r1, r4
   37c74:	str	r1, [sp, #144]	; 0x90
   37c76:	adc.w	r1, sl, r9
   37c7a:	str	r1, [sp, #148]	; 0x94
   37c7c:	ldr	r1, [sp, #144]	; 0x90
   37c7e:	eor.w	lr, r1, lr
   37c82:	ldr	r1, [sp, #148]	; 0x94
   37c84:	eors	r6, r1
   37c86:	mov.w	r1, lr, lsr #16
   37c8a:	orr.w	r8, r1, r6, lsl #16
   37c8e:	lsrs	r6, r6, #16
   37c90:	adds.w	r3, r3, r8
   37c94:	orr.w	sl, r6, lr, lsl #16
   37c98:	adc.w	r0, r0, sl
   37c9c:	eors	r4, r3
   37c9e:	eor.w	r9, r0, r9
   37ca2:	ldr	r6, [sp, #156]	; 0x9c
   37ca4:	mov.w	r1, r9, lsl #1
   37ca8:	orr.w	r1, r1, r4, lsr #31
   37cac:	lsls	r4, r4, #1
   37cae:	orr.w	fp, r4, r9, lsr #31
   37cb2:	str	r1, [sp, #216]	; 0xd8
   37cb4:	ldr	r4, [sp, #152]	; 0x98
   37cb6:	ldr	r1, [sp, #124]	; 0x7c
   37cb8:	adds	r1, r1, r4
   37cba:	ldr	r4, [sp, #128]	; 0x80
   37cbc:	adc.w	r9, r4, r6
   37cc0:	ldr	r4, [sp, #244]	; 0xf4
   37cc2:	adds.w	r1, r1, ip
   37cc6:	adc.w	r9, r9, r4
   37cca:	eor.w	r7, r1, r8
   37cce:	eor.w	lr, r9, sl
   37cd2:	adds.w	r2, r2, lr
   37cd6:	adc.w	r5, r7, r5
   37cda:	eor.w	ip, r2, ip
   37cde:	eor.w	r6, r5, r4
   37ce2:	mov.w	sl, ip, lsr #24
   37ce6:	orr.w	r4, sl, r6, lsl #8
   37cea:	lsrs	r6, r6, #24
   37cec:	orr.w	r8, r6, ip, lsl #8
   37cf0:	ldr	r6, [sp, #92]	; 0x5c
   37cf2:	adds	r1, r6, r1
   37cf4:	ldr	r6, [sp, #96]	; 0x60
   37cf6:	adc.w	r9, r6, r9
   37cfa:	adds	r1, r1, r4
   37cfc:	str	r1, [sp, #152]	; 0x98
   37cfe:	adc.w	r1, r9, r8
   37d02:	str	r1, [sp, #156]	; 0x9c
   37d04:	ldr	r1, [sp, #152]	; 0x98
   37d06:	eor.w	lr, r1, lr
   37d0a:	ldr	r1, [sp, #156]	; 0x9c
   37d0c:	eors	r7, r1
   37d0e:	mov.w	r1, lr, lsr #16
   37d12:	orr.w	r1, r1, r7, lsl #16
   37d16:	lsrs	r7, r7, #16
   37d18:	str	r1, [sp, #220]	; 0xdc
   37d1a:	orr.w	r1, r7, lr, lsl #16
   37d1e:	str	r1, [sp, #224]	; 0xe0
   37d20:	ldr	r1, [sp, #220]	; 0xdc
   37d22:	adds	r2, r2, r1
   37d24:	str	r2, [sp, #176]	; 0xb0
   37d26:	ldr	r2, [sp, #224]	; 0xe0
   37d28:	ldr	r1, [sp, #168]	; 0xa8
   37d2a:	adc.w	r2, r5, r2
   37d2e:	str	r2, [sp, #180]	; 0xb4
   37d30:	ldr	r2, [sp, #176]	; 0xb0
   37d32:	eors	r4, r2
   37d34:	ldr	r2, [sp, #180]	; 0xb4
   37d36:	eor.w	r8, r2, r8
   37d3a:	mov.w	r2, r8, lsl #1
   37d3e:	orr.w	r2, r2, r4, lsr #31
   37d42:	lsls	r4, r4, #1
   37d44:	str	r2, [sp, #252]	; 0xfc
   37d46:	orr.w	r2, r4, r8, lsr #31
   37d4a:	str	r2, [sp, #244]	; 0xf4
   37d4c:	ldr	r2, [sp, #76]	; 0x4c
   37d4e:	ldr	r4, [sp, #172]	; 0xac
   37d50:	adds	r2, r2, r1
   37d52:	ldr	r1, [sp, #80]	; 0x50
   37d54:	adc.w	r7, r1, r4
   37d58:	ldr	r1, [sp, #240]	; 0xf0
   37d5a:	adds	r2, r2, r1
   37d5c:	ldr	r1, [sp, #248]	; 0xf8
   37d5e:	adc.w	r7, r1, r7
   37d62:	ldr	r1, [sp, #260]	; 0x104
   37d64:	eor.w	r4, r7, r1
   37d68:	ldr	r1, [sp, #228]	; 0xe4
   37d6a:	adds	r3, r3, r4
   37d6c:	eor.w	r9, r2, r1
   37d70:	ldr	r1, [sp, #240]	; 0xf0
   37d72:	adc.w	r0, r0, r9
   37d76:	eor.w	ip, r3, r1
   37d7a:	ldr	r1, [sp, #248]	; 0xf8
   37d7c:	eor.w	r5, r0, r1
   37d80:	mov.w	lr, ip, lsr #24
   37d84:	orr.w	r1, lr, r5, lsl #8
   37d88:	lsrs	r5, r5, #24
   37d8a:	orr.w	r6, r5, ip, lsl #8
   37d8e:	ldr	r5, [sp, #116]	; 0x74
   37d90:	adds	r2, r5, r2
   37d92:	ldr	r5, [sp, #120]	; 0x78
   37d94:	adc.w	r7, r5, r7
   37d98:	adds	r2, r2, r1
   37d9a:	str	r2, [sp, #168]	; 0xa8
   37d9c:	adc.w	r2, r7, r6
   37da0:	str	r2, [sp, #172]	; 0xac
   37da2:	ldr	r2, [sp, #168]	; 0xa8
   37da4:	eors	r4, r2
   37da6:	ldr	r2, [sp, #172]	; 0xac
   37da8:	eor.w	r2, r2, r9
   37dac:	lsrs	r5, r4, #16
   37dae:	orr.w	r5, r5, r2, lsl #16
   37db2:	mov.w	r9, r2, lsr #16
   37db6:	orr.w	r9, r9, r4, lsl #16
   37dba:	adds	r3, r3, r5
   37dbc:	str	r3, [sp, #184]	; 0xb8
   37dbe:	adc.w	r3, r0, r9
   37dc2:	str	r3, [sp, #188]	; 0xbc
   37dc4:	ldr	r3, [sp, #184]	; 0xb8
   37dc6:	ldr	r2, [sp, #160]	; 0xa0
   37dc8:	eors	r1, r3
   37dca:	ldr	r3, [sp, #188]	; 0xbc
   37dcc:	ldr	r0, [sp, #196]	; 0xc4
   37dce:	eors	r6, r3
   37dd0:	str	r5, [sp, #228]	; 0xe4
   37dd2:	lsls	r3, r6, #1
   37dd4:	orr.w	r3, r3, r1, lsr #31
   37dd8:	lsls	r1, r1, #1
   37dda:	str	r3, [sp, #248]	; 0xf8
   37ddc:	orr.w	r3, r1, r6, lsr #31
   37de0:	str	r3, [sp, #240]	; 0xf0
   37de2:	ldr	r3, [sp, #28]
   37de4:	ldr	r1, [sp, #164]	; 0xa4
   37de6:	adds	r3, r3, r2
   37de8:	ldr	r2, [sp, #32]
   37dea:	adc.w	ip, r2, r1
   37dee:	ldr	r2, [sp, #216]	; 0xd8
   37df0:	adds.w	r3, r3, fp
   37df4:	adc.w	ip, ip, r2
   37df8:	ldr	r2, [sp, #212]	; 0xd4
   37dfa:	eor.w	r7, ip, r2
   37dfe:	ldr	r2, [sp, #208]	; 0xd0
   37e00:	eor.w	r1, r3, r2
   37e04:	ldr	r2, [sp, #192]	; 0xc0
   37e06:	adds	r2, r2, r7
   37e08:	adc.w	r5, r0, r1
   37e0c:	ldr	r0, [sp, #216]	; 0xd8
   37e0e:	eor.w	fp, r2, fp
   37e12:	eors	r0, r5
   37e14:	mov.w	r4, fp, lsr #24
   37e18:	orr.w	r8, r4, r0, lsl #8
   37e1c:	lsrs	r0, r0, #24
   37e1e:	orr.w	r6, r0, fp, lsl #8
   37e22:	ldr	r0, [sp, #100]	; 0x64
   37e24:	adds	r3, r0, r3
   37e26:	ldr	r0, [sp, #104]	; 0x68
   37e28:	adc.w	ip, r0, ip
   37e2c:	adds.w	r3, r3, r8
   37e30:	str	r3, [sp, #160]	; 0xa0
   37e32:	adc.w	r3, ip, r6
   37e36:	str	r3, [sp, #164]	; 0xa4
   37e38:	ldr	r3, [sp, #160]	; 0xa0
   37e3a:	eors	r7, r3
   37e3c:	ldr	r3, [sp, #164]	; 0xa4
   37e3e:	eors	r1, r3
   37e40:	lsrs	r3, r7, #16
   37e42:	orr.w	r3, r3, r1, lsl #16
   37e46:	lsrs	r1, r1, #16
   37e48:	str	r3, [sp, #208]	; 0xd0
   37e4a:	orr.w	r3, r1, r7, lsl #16
   37e4e:	str	r3, [sp, #212]	; 0xd4
   37e50:	ldr	r3, [sp, #208]	; 0xd0
   37e52:	ldr	r1, [sp, #144]	; 0x90
   37e54:	adds	r2, r2, r3
   37e56:	ldr	r3, [sp, #212]	; 0xd4
   37e58:	eor.w	r8, r2, r8
   37e5c:	ldr	r0, [sp, #148]	; 0x94
   37e5e:	adc.w	r5, r3, r5
   37e62:	ldr	r4, [sp, #264]	; 0x108
   37e64:	eors	r6, r5
   37e66:	lsls	r3, r6, #1
   37e68:	orr.w	r3, r3, r8, lsr #31
   37e6c:	mov.w	r8, r8, lsl #1
   37e70:	str	r3, [sp, #256]	; 0x100
   37e72:	orr.w	r3, r8, r6, lsr #31
   37e76:	str	r3, [sp, #216]	; 0xd8
   37e78:	ldr	r3, [sp, #108]	; 0x6c
   37e7a:	adds	r1, r3, r1
   37e7c:	ldr	r3, [sp, #112]	; 0x70
   37e7e:	adc.w	sl, r3, r0
   37e82:	ldr	r3, [sp, #264]	; 0x108
   37e84:	ldr	r0, [sp, #204]	; 0xcc
   37e86:	adds	r1, r1, r3
   37e88:	ldr	r3, [sp, #268]	; 0x10c
   37e8a:	adc.w	sl, sl, r3
   37e8e:	ldr	r3, [sp, #236]	; 0xec
   37e90:	eor.w	lr, sl, r3
   37e94:	ldr	r3, [sp, #232]	; 0xe8
   37e96:	eor.w	r7, r1, r3
   37e9a:	ldr	r3, [sp, #200]	; 0xc8
   37e9c:	adds.w	r3, r3, lr
   37ea0:	eor.w	r6, r3, r4
   37ea4:	ldr	r4, [sp, #268]	; 0x10c
   37ea6:	adcs	r0, r7
   37ea8:	eor.w	ip, r0, r4
   37eac:	mov.w	fp, r6, lsr #24
   37eb0:	orr.w	r4, fp, ip, lsl #8
   37eb4:	mov.w	ip, ip, lsr #24
   37eb8:	orr.w	r8, ip, r6, lsl #8
   37ebc:	ldr	r6, [sp, #4]
   37ebe:	adds	r1, r6, r1
   37ec0:	ldr	r6, [sp, #8]
   37ec2:	adc.w	sl, r6, sl
   37ec6:	adds	r1, r1, r4
   37ec8:	str	r1, [sp, #144]	; 0x90
   37eca:	adc.w	r1, sl, r8
   37ece:	str	r1, [sp, #148]	; 0x94
   37ed0:	ldr	r1, [sp, #144]	; 0x90
   37ed2:	eor.w	lr, r1, lr
   37ed6:	ldr	r1, [sp, #148]	; 0x94
   37ed8:	eors	r7, r1
   37eda:	mov.w	r1, lr, lsr #16
   37ede:	orr.w	r1, r1, r7, lsl #16
   37ee2:	lsrs	r7, r7, #16
   37ee4:	str	r1, [sp, #232]	; 0xe8
   37ee6:	orr.w	r1, r7, lr, lsl #16
   37eea:	str	r1, [sp, #236]	; 0xec
   37eec:	ldr	r1, [sp, #232]	; 0xe8
   37eee:	ldr	r7, [sp, #156]	; 0x9c
   37ef0:	adds	r3, r3, r1
   37ef2:	ldr	r1, [sp, #236]	; 0xec
   37ef4:	eor.w	r4, r4, r3
   37ef8:	adc.w	r0, r1, r0
   37efc:	eor.w	r8, r0, r8
   37f00:	mov.w	r1, r8, lsl #1
   37f04:	orr.w	r6, r1, r4, lsr #31
   37f08:	lsls	r4, r4, #1
   37f0a:	orr.w	fp, r4, r8, lsr #31
   37f0e:	ldr	r1, [sp, #4]
   37f10:	ldr	r4, [sp, #152]	; 0x98
   37f12:	adds	r1, r1, r4
   37f14:	ldr	r4, [sp, #8]
   37f16:	adc.w	sl, r4, r7
   37f1a:	adds.w	r1, r1, fp
   37f1e:	adc.w	sl, sl, r6
   37f22:	ldr	r4, [sp, #228]	; 0xe4
   37f24:	eor.w	lr, sl, r9
   37f28:	adds.w	r2, r2, lr
   37f2c:	eor.w	r7, r1, r4
   37f30:	adc.w	r5, r7, r5
   37f34:	eor.w	fp, r2, fp
   37f38:	eor.w	ip, r5, r6
   37f3c:	mov.w	r4, fp, lsr #24
   37f40:	orr.w	r6, r4, ip, lsl #8
   37f44:	ldr	r4, [sp, #12]
   37f46:	mov.w	ip, ip, lsr #24
   37f4a:	adds	r1, r4, r1
   37f4c:	ldr	r4, [sp, #16]
   37f4e:	orr.w	r8, ip, fp, lsl #8
   37f52:	adc.w	sl, r4, sl
   37f56:	adds	r1, r1, r6
   37f58:	str	r1, [sp, #152]	; 0x98
   37f5a:	adc.w	r1, sl, r8
   37f5e:	str	r1, [sp, #156]	; 0x9c
   37f60:	ldr	r1, [sp, #152]	; 0x98
   37f62:	ldr	r4, [sp, #172]	; 0xac
   37f64:	eor.w	lr, r1, lr
   37f68:	ldr	r1, [sp, #156]	; 0x9c
   37f6a:	eors	r7, r1
   37f6c:	mov.w	r1, lr, lsr #16
   37f70:	orr.w	r1, r1, r7, lsl #16
   37f74:	lsrs	r7, r7, #16
   37f76:	str	r1, [sp, #228]	; 0xe4
   37f78:	orr.w	r1, r7, lr, lsl #16
   37f7c:	str	r1, [sp, #260]	; 0x104
   37f7e:	ldr	r1, [sp, #228]	; 0xe4
   37f80:	adds	r2, r2, r1
   37f82:	str	r2, [sp, #192]	; 0xc0
   37f84:	ldr	r2, [sp, #260]	; 0x104
   37f86:	ldr	r1, [sp, #168]	; 0xa8
   37f88:	adc.w	r2, r5, r2
   37f8c:	str	r2, [sp, #196]	; 0xc4
   37f8e:	ldr	r2, [sp, #192]	; 0xc0
   37f90:	ldr	r5, [sp, #252]	; 0xfc
   37f92:	eors	r6, r2
   37f94:	ldr	r2, [sp, #196]	; 0xc4
   37f96:	eor.w	r8, r2, r8
   37f9a:	mov.w	r2, r8, lsl #1
   37f9e:	orr.w	r2, r2, r6, lsr #31
   37fa2:	lsls	r6, r6, #1
   37fa4:	str	r2, [sp, #268]	; 0x10c
   37fa6:	orr.w	r2, r6, r8, lsr #31
   37faa:	str	r2, [sp, #264]	; 0x108
   37fac:	ldr	r2, [sp, #20]
   37fae:	adds	r2, r2, r1
   37fb0:	ldr	r1, [sp, #24]
   37fb2:	adc.w	r7, r1, r4
   37fb6:	ldr	r1, [sp, #244]	; 0xf4
   37fb8:	ldr	r4, [sp, #244]	; 0xf4
   37fba:	adds	r2, r2, r1
   37fbc:	ldr	r1, [sp, #252]	; 0xfc
   37fbe:	adc.w	r7, r1, r7
   37fc2:	ldr	r1, [sp, #212]	; 0xd4
   37fc4:	eor.w	r6, r7, r1
   37fc8:	ldr	r1, [sp, #208]	; 0xd0
   37fca:	adds	r3, r3, r6
   37fcc:	eor.w	r1, r2, r1
   37fd0:	eor.w	r4, r3, r4
   37fd4:	adc.w	r0, r1, r0
   37fd8:	eors	r5, r0
   37fda:	mov.w	r8, r4, lsr #24
   37fde:	orr.w	ip, r8, r5, lsl #8
   37fe2:	lsrs	r5, r5, #24
   37fe4:	orr.w	lr, r5, r4, lsl #8
   37fe8:	ldr	r4, [sp, #28]
   37fea:	adds	r2, r4, r2
   37fec:	ldr	r4, [sp, #32]
   37fee:	adc.w	r7, r4, r7
   37ff2:	adds.w	r2, r2, ip
   37ff6:	str	r2, [sp, #168]	; 0xa8
   37ff8:	adc.w	r2, r7, lr
   37ffc:	str	r2, [sp, #172]	; 0xac
   37ffe:	ldr	r2, [sp, #168]	; 0xa8
   38000:	eors	r6, r2
   38002:	ldr	r2, [sp, #172]	; 0xac
   38004:	eors	r1, r2
   38006:	lsrs	r2, r6, #16
   38008:	orr.w	r2, r2, r1, lsl #16
   3800c:	lsrs	r1, r1, #16
   3800e:	str	r2, [sp, #208]	; 0xd0
   38010:	orr.w	r2, r1, r6, lsl #16
   38014:	str	r2, [sp, #212]	; 0xd4
   38016:	ldr	r2, [sp, #208]	; 0xd0
   38018:	ldr	r1, [sp, #164]	; 0xa4
   3801a:	adds	r3, r3, r2
   3801c:	str	r3, [sp, #200]	; 0xc8
   3801e:	ldr	r3, [sp, #212]	; 0xd4
   38020:	adc.w	r3, r0, r3
   38024:	str	r3, [sp, #204]	; 0xcc
   38026:	ldr	r2, [sp, #204]	; 0xcc
   38028:	ldr	r3, [sp, #200]	; 0xc8
   3802a:	eor.w	lr, r2, lr
   3802e:	eor.w	r3, r3, ip
   38032:	mov.w	r2, lr, lsl #1
   38036:	orr.w	r2, r2, r3, lsr #31
   3803a:	mov.w	ip, r3, lsl #1
   3803e:	str	r2, [sp, #244]	; 0xf4
   38040:	orr.w	ip, ip, lr, lsr #31
   38044:	ldr	r2, [sp, #160]	; 0xa0
   38046:	ldr	r3, [sp, #36]	; 0x24
   38048:	adds	r3, r3, r2
   3804a:	ldr	r2, [sp, #40]	; 0x28
   3804c:	adc.w	lr, r2, r1
   38050:	ldr	r2, [sp, #240]	; 0xf0
   38052:	ldr	r1, [sp, #180]	; 0xb4
   38054:	adds	r3, r3, r2
   38056:	ldr	r2, [sp, #248]	; 0xf8
   38058:	adc.w	lr, lr, r2
   3805c:	ldr	r2, [sp, #236]	; 0xec
   3805e:	eor.w	r6, lr, r2
   38062:	ldr	r2, [sp, #232]	; 0xe8
   38064:	eor.w	r0, r3, r2
   38068:	ldr	r2, [sp, #176]	; 0xb0
   3806a:	adds	r2, r2, r6
   3806c:	adc.w	r5, r1, r0
   38070:	ldr	r1, [sp, #240]	; 0xf0
   38072:	eor.w	r8, r2, r1
   38076:	ldr	r1, [sp, #248]	; 0xf8
   38078:	eor.w	r4, r5, r1
   3807c:	mov.w	r9, r8, lsr #24
   38080:	orr.w	r1, r9, r4, lsl #8
   38084:	lsrs	r4, r4, #24
   38086:	orr.w	r7, r4, r8, lsl #8
   3808a:	ldr	r4, [sp, #44]	; 0x2c
   3808c:	adds	r3, r4, r3
   3808e:	ldr	r4, [sp, #48]	; 0x30
   38090:	adc.w	lr, r4, lr
   38094:	adds	r3, r3, r1
   38096:	str	r3, [sp, #160]	; 0xa0
   38098:	adc.w	r3, lr, r7
   3809c:	str	r3, [sp, #164]	; 0xa4
   3809e:	ldr	r3, [sp, #160]	; 0xa0
   380a0:	eors	r6, r3
   380a2:	ldr	r3, [sp, #164]	; 0xa4
   380a4:	eors	r0, r3
   380a6:	lsrs	r3, r6, #16
   380a8:	orr.w	r3, r3, r0, lsl #16
   380ac:	lsrs	r0, r0, #16
   380ae:	str	r3, [sp, #232]	; 0xe8
   380b0:	orr.w	r3, r0, r6, lsl #16
   380b4:	str	r3, [sp, #236]	; 0xec
   380b6:	ldr	r3, [sp, #232]	; 0xe8
   380b8:	adds	r2, r2, r3
   380ba:	ldr	r3, [sp, #236]	; 0xec
   380bc:	eor.w	r1, r1, r2
   380c0:	adc.w	r5, r3, r5
   380c4:	eors	r7, r5
   380c6:	lsls	r3, r7, #1
   380c8:	orr.w	r3, r3, r1, lsr #31
   380cc:	lsls	r1, r1, #1
   380ce:	str	r3, [sp, #248]	; 0xf8
   380d0:	orr.w	r3, r1, r7, lsr #31
   380d4:	str	r3, [sp, #240]	; 0xf0
   380d6:	ldr	r3, [sp, #52]	; 0x34
   380d8:	ldr	r1, [sp, #144]	; 0x90
   380da:	ldr	r0, [sp, #148]	; 0x94
   380dc:	adds	r1, r3, r1
   380de:	ldr	r3, [sp, #56]	; 0x38
   380e0:	ldr	r4, [sp, #216]	; 0xd8
   380e2:	adc.w	sl, r3, r0
   380e6:	ldr	r3, [sp, #216]	; 0xd8
   380e8:	ldr	r0, [sp, #188]	; 0xbc
   380ea:	adds	r1, r1, r3
   380ec:	ldr	r3, [sp, #256]	; 0x100
   380ee:	adc.w	sl, sl, r3
   380f2:	ldr	r3, [sp, #224]	; 0xe0
   380f4:	eor.w	lr, sl, r3
   380f8:	ldr	r3, [sp, #220]	; 0xdc
   380fa:	eor.w	r6, r1, r3
   380fe:	ldr	r3, [sp, #184]	; 0xb8
   38100:	adds.w	r3, r3, lr
   38104:	eor.w	r8, r3, r4
   38108:	ldr	r4, [sp, #256]	; 0x100
   3810a:	adcs	r0, r6
   3810c:	eor.w	r7, r0, r4
   38110:	mov.w	fp, r8, lsr #24
   38114:	orr.w	r4, fp, r7, lsl #8
   38118:	lsrs	r7, r7, #24
   3811a:	orr.w	r9, r7, r8, lsl #8
   3811e:	ldr	r7, [sp, #60]	; 0x3c
   38120:	adds	r1, r7, r1
   38122:	ldr	r7, [sp, #64]	; 0x40
   38124:	adc.w	sl, r7, sl
   38128:	adds	r1, r1, r4
   3812a:	str	r1, [sp, #144]	; 0x90
   3812c:	adc.w	r1, sl, r9
   38130:	str	r1, [sp, #148]	; 0x94
   38132:	ldr	r1, [sp, #144]	; 0x90
   38134:	eor.w	lr, r1, lr
   38138:	ldr	r1, [sp, #148]	; 0x94
   3813a:	eors	r6, r1
   3813c:	mov.w	r1, lr, lsr #16
   38140:	orr.w	r8, r1, r6, lsl #16
   38144:	lsrs	r6, r6, #16
   38146:	adds.w	r3, r3, r8
   3814a:	orr.w	sl, r6, lr, lsl #16
   3814e:	adc.w	r0, r0, sl
   38152:	eors	r4, r3
   38154:	eor.w	r9, r0, r9
   38158:	ldr	r6, [sp, #156]	; 0x9c
   3815a:	mov.w	r1, r9, lsl #1
   3815e:	orr.w	r1, r1, r4, lsr #31
   38162:	lsls	r4, r4, #1
   38164:	orr.w	fp, r4, r9, lsr #31
   38168:	str	r1, [sp, #216]	; 0xd8
   3816a:	ldr	r4, [sp, #152]	; 0x98
   3816c:	ldr	r1, [sp, #68]	; 0x44
   3816e:	adds	r1, r1, r4
   38170:	ldr	r4, [sp, #72]	; 0x48
   38172:	adc.w	r9, r4, r6
   38176:	ldr	r4, [sp, #244]	; 0xf4
   38178:	adds.w	r1, r1, ip
   3817c:	adc.w	r9, r9, r4
   38180:	eor.w	r7, r1, r8
   38184:	eor.w	lr, r9, sl
   38188:	adds.w	r2, r2, lr
   3818c:	adc.w	r5, r7, r5
   38190:	eor.w	ip, r2, ip
   38194:	eor.w	r6, r5, r4
   38198:	mov.w	sl, ip, lsr #24
   3819c:	orr.w	r4, sl, r6, lsl #8
   381a0:	lsrs	r6, r6, #24
   381a2:	orr.w	r8, r6, ip, lsl #8
   381a6:	ldr	r6, [sp, #76]	; 0x4c
   381a8:	adds	r1, r6, r1
   381aa:	ldr	r6, [sp, #80]	; 0x50
   381ac:	adc.w	r9, r6, r9
   381b0:	adds	r1, r1, r4
   381b2:	str	r1, [sp, #152]	; 0x98
   381b4:	adc.w	r1, r9, r8
   381b8:	str	r1, [sp, #156]	; 0x9c
   381ba:	ldr	r1, [sp, #152]	; 0x98
   381bc:	eor.w	lr, r1, lr
   381c0:	ldr	r1, [sp, #156]	; 0x9c
   381c2:	eors	r7, r1
   381c4:	mov.w	r1, lr, lsr #16
   381c8:	orr.w	r1, r1, r7, lsl #16
   381cc:	lsrs	r7, r7, #16
   381ce:	str	r1, [sp, #220]	; 0xdc
   381d0:	orr.w	r1, r7, lr, lsl #16
   381d4:	str	r1, [sp, #224]	; 0xe0
   381d6:	ldr	r1, [sp, #220]	; 0xdc
   381d8:	adds	r2, r2, r1
   381da:	str	r2, [sp, #176]	; 0xb0
   381dc:	ldr	r2, [sp, #224]	; 0xe0
   381de:	ldr	r1, [sp, #168]	; 0xa8
   381e0:	adc.w	r2, r5, r2
   381e4:	str	r2, [sp, #180]	; 0xb4
   381e6:	ldr	r2, [sp, #176]	; 0xb0
   381e8:	eors	r4, r2
   381ea:	ldr	r2, [sp, #180]	; 0xb4
   381ec:	eor.w	r8, r2, r8
   381f0:	mov.w	r2, r8, lsl #1
   381f4:	orr.w	r2, r2, r4, lsr #31
   381f8:	lsls	r4, r4, #1
   381fa:	str	r2, [sp, #252]	; 0xfc
   381fc:	orr.w	r2, r4, r8, lsr #31
   38200:	str	r2, [sp, #244]	; 0xf4
   38202:	ldr	r2, [sp, #84]	; 0x54
   38204:	ldr	r4, [sp, #172]	; 0xac
   38206:	adds	r2, r2, r1
   38208:	ldr	r1, [sp, #88]	; 0x58
   3820a:	adc.w	r7, r1, r4
   3820e:	ldr	r1, [sp, #240]	; 0xf0
   38210:	adds	r2, r2, r1
   38212:	ldr	r1, [sp, #248]	; 0xf8
   38214:	adc.w	r7, r1, r7
   38218:	ldr	r1, [sp, #260]	; 0x104
   3821a:	eor.w	r4, r7, r1
   3821e:	ldr	r1, [sp, #228]	; 0xe4
   38220:	adds	r3, r3, r4
   38222:	eor.w	sl, r2, r1
   38226:	ldr	r1, [sp, #240]	; 0xf0
   38228:	adc.w	r0, r0, sl
   3822c:	eor.w	ip, r3, r1
   38230:	ldr	r1, [sp, #248]	; 0xf8
   38232:	eor.w	r5, r0, r1
   38236:	mov.w	lr, ip, lsr #24
   3823a:	orr.w	r1, lr, r5, lsl #8
   3823e:	lsrs	r5, r5, #24
   38240:	orr.w	r6, r5, ip, lsl #8
   38244:	ldr	r5, [sp, #92]	; 0x5c
   38246:	adds	r2, r5, r2
   38248:	ldr	r5, [sp, #96]	; 0x60
   3824a:	adc.w	r7, r5, r7
   3824e:	adds	r2, r2, r1
   38250:	str	r2, [sp, #168]	; 0xa8
   38252:	adc.w	r2, r7, r6
   38256:	str	r2, [sp, #172]	; 0xac
   38258:	ldr	r2, [sp, #168]	; 0xa8
   3825a:	eors	r4, r2
   3825c:	ldr	r2, [sp, #172]	; 0xac
   3825e:	eor.w	r2, r2, sl
   38262:	lsrs	r5, r4, #16
   38264:	orr.w	r5, r5, r2, lsl #16
   38268:	mov.w	sl, r2, lsr #16
   3826c:	orr.w	sl, sl, r4, lsl #16
   38270:	adds	r3, r3, r5
   38272:	str	r3, [sp, #184]	; 0xb8
   38274:	adc.w	r3, r0, sl
   38278:	str	r3, [sp, #188]	; 0xbc
   3827a:	ldr	r3, [sp, #184]	; 0xb8
   3827c:	ldr	r2, [sp, #160]	; 0xa0
   3827e:	eors	r1, r3
   38280:	ldr	r3, [sp, #188]	; 0xbc
   38282:	str	r5, [sp, #228]	; 0xe4
   38284:	eors	r6, r3
   38286:	lsls	r3, r6, #1
   38288:	orr.w	r3, r3, r1, lsr #31
   3828c:	lsls	r1, r1, #1
   3828e:	str	r3, [sp, #248]	; 0xf8
   38290:	orr.w	r3, r1, r6, lsr #31
   38294:	str	r3, [sp, #240]	; 0xf0
   38296:	ldr	r3, [sp, #100]	; 0x64
   38298:	adds	r3, r3, r2
   3829a:	ldr	r2, [sp, #104]	; 0x68
   3829c:	ldr	r1, [sp, #164]	; 0xa4
   3829e:	ldr	r0, [sp, #196]	; 0xc4
   382a0:	adc.w	ip, r2, r1
   382a4:	ldr	r2, [sp, #216]	; 0xd8
   382a6:	adds.w	r3, r3, fp
   382aa:	adc.w	ip, ip, r2
   382ae:	ldr	r2, [sp, #212]	; 0xd4
   382b0:	eor.w	r7, ip, r2
   382b4:	ldr	r2, [sp, #208]	; 0xd0
   382b6:	eor.w	r1, r3, r2
   382ba:	ldr	r2, [sp, #192]	; 0xc0
   382bc:	adds	r2, r2, r7
   382be:	adc.w	r5, r0, r1
   382c2:	ldr	r0, [sp, #216]	; 0xd8
   382c4:	eor.w	fp, r2, fp
   382c8:	eors	r0, r5
   382ca:	mov.w	r4, fp, lsr #24
   382ce:	orr.w	r9, r4, r0, lsl #8
   382d2:	lsrs	r0, r0, #24
   382d4:	orr.w	r6, r0, fp, lsl #8
   382d8:	ldr	r0, [sp, #108]	; 0x6c
   382da:	adds	r3, r0, r3
   382dc:	ldr	r0, [sp, #112]	; 0x70
   382de:	adc.w	ip, r0, ip
   382e2:	adds.w	r3, r3, r9
   382e6:	str	r3, [sp, #160]	; 0xa0
   382e8:	adc.w	r3, ip, r6
   382ec:	str	r3, [sp, #164]	; 0xa4
   382ee:	ldr	r3, [sp, #160]	; 0xa0
   382f0:	ldr	r0, [sp, #148]	; 0x94
   382f2:	eors	r7, r3
   382f4:	ldr	r3, [sp, #164]	; 0xa4
   382f6:	eors	r1, r3
   382f8:	lsrs	r3, r7, #16
   382fa:	orr.w	r3, r3, r1, lsl #16
   382fe:	lsrs	r1, r1, #16
   38300:	str	r3, [sp, #192]	; 0xc0
   38302:	orr.w	r3, r1, r7, lsl #16
   38306:	str	r3, [sp, #196]	; 0xc4
   38308:	ldr	r3, [sp, #192]	; 0xc0
   3830a:	ldr	r1, [sp, #144]	; 0x90
   3830c:	adds	r2, r2, r3
   3830e:	ldr	r3, [sp, #196]	; 0xc4
   38310:	eor.w	r9, r2, r9
   38314:	ldr	r7, [sp, #268]	; 0x10c
   38316:	adc.w	r5, r3, r5
   3831a:	eors	r6, r5
   3831c:	lsls	r3, r6, #1
   3831e:	orr.w	r3, r3, r9, lsr #31
   38322:	mov.w	r9, r9, lsl #1
   38326:	str	r3, [sp, #212]	; 0xd4
   38328:	orr.w	r3, r9, r6, lsr #31
   3832c:	str	r3, [sp, #208]	; 0xd0
   3832e:	ldr	r3, [sp, #116]	; 0x74
   38330:	ldr	r6, [sp, #264]	; 0x108
   38332:	adds	r1, r3, r1
   38334:	ldr	r3, [sp, #120]	; 0x78
   38336:	adc.w	r4, r3, r0
   3833a:	ldr	r3, [sp, #264]	; 0x108
   3833c:	ldr	r0, [sp, #204]	; 0xcc
   3833e:	adds	r1, r1, r3
   38340:	ldr	r3, [sp, #268]	; 0x10c
   38342:	adc.w	r4, r3, r4
   38346:	ldr	r3, [sp, #236]	; 0xec
   38348:	eor.w	r8, r4, r3
   3834c:	ldr	r3, [sp, #232]	; 0xe8
   3834e:	eor.w	ip, r1, r3
   38352:	ldr	r3, [sp, #200]	; 0xc8
   38354:	adds.w	r3, r3, r8
   38358:	adc.w	r0, r0, ip
   3835c:	eors	r6, r3
   3835e:	eor.w	lr, r0, r7
   38362:	mov.w	fp, r6, lsr #24
   38366:	orr.w	r7, fp, lr, lsl #8
   3836a:	mov.w	lr, lr, lsr #24
   3836e:	orr.w	r9, lr, r6, lsl #8
   38372:	ldr	r6, [sp, #124]	; 0x7c
   38374:	adds	r1, r6, r1
   38376:	ldr	r6, [sp, #128]	; 0x80
   38378:	adc.w	r4, r6, r4
   3837c:	adds	r1, r1, r7
   3837e:	str	r1, [sp, #144]	; 0x90
   38380:	adc.w	r1, r4, r9
   38384:	str	r1, [sp, #148]	; 0x94
   38386:	ldr	r1, [sp, #144]	; 0x90
   38388:	ldr	r6, [sp, #152]	; 0x98
   3838a:	eor.w	r8, r1, r8
   3838e:	ldr	r1, [sp, #148]	; 0x94
   38390:	eor.w	ip, r1, ip
   38394:	mov.w	r1, r8, lsr #16
   38398:	orr.w	r1, r1, ip, lsl #16
   3839c:	mov.w	ip, ip, lsr #16
   383a0:	orr.w	fp, ip, r8, lsl #16
   383a4:	adds	r3, r3, r1
   383a6:	adc.w	r0, r0, fp
   383aa:	eors	r7, r3
   383ac:	eor.w	r9, r0, r9
   383b0:	str	r1, [sp, #200]	; 0xc8
   383b2:	mov.w	r1, r9, lsl #1
   383b6:	orr.w	r4, r1, r7, lsr #31
   383ba:	ldr	r1, [sp, #116]	; 0x74
   383bc:	lsls	r7, r7, #1
   383be:	orr.w	ip, r7, r9, lsr #31
   383c2:	adds	r1, r1, r6
   383c4:	ldr	r7, [sp, #156]	; 0x9c
   383c6:	ldr	r6, [sp, #120]	; 0x78
   383c8:	adc.w	r9, r6, r7
   383cc:	adds.w	r1, r1, ip
   383d0:	adc.w	r9, r9, r4
   383d4:	ldr	r6, [sp, #228]	; 0xe4
   383d6:	eor.w	lr, r9, sl
   383da:	adds.w	r2, r2, lr
   383de:	eor.w	r6, r1, r6
   383e2:	adc.w	r5, r6, r5
   383e6:	eor.w	r7, r2, ip
   383ea:	eor.w	ip, r5, r4
   383ee:	mov.w	sl, r7, lsr #24
   383f2:	orr.w	r4, sl, ip, lsl #8
   383f6:	mov.w	ip, ip, lsr #24
   383fa:	orr.w	r8, ip, r7, lsl #8
   383fe:	ldr	r7, [sp, #84]	; 0x54
   38400:	adds	r1, r7, r1
   38402:	ldr	r7, [sp, #88]	; 0x58
   38404:	adc.w	r9, r7, r9
   38408:	adds	r1, r1, r4
   3840a:	str	r1, [sp, #84]	; 0x54
   3840c:	adc.w	r1, r9, r8
   38410:	str	r1, [sp, #88]	; 0x58
   38412:	ldr	r1, [sp, #84]	; 0x54
   38414:	eor.w	lr, r1, lr
   38418:	ldr	r1, [sp, #88]	; 0x58
   3841a:	eors	r6, r1
   3841c:	mov.w	r1, lr, lsr #16
   38420:	orr.w	r1, r1, r6, lsl #16
   38424:	lsrs	r6, r6, #16
   38426:	str	r1, [sp, #152]	; 0x98
   38428:	orr.w	r1, r6, lr, lsl #16
   3842c:	str	r1, [sp, #156]	; 0x9c
   3842e:	ldr	r1, [sp, #152]	; 0x98
   38430:	adds	r2, r2, r1
   38432:	str	r2, [sp, #116]	; 0x74
   38434:	ldr	r2, [sp, #156]	; 0x9c
   38436:	ldr	r1, [sp, #168]	; 0xa8
   38438:	adc.w	r2, r5, r2
   3843c:	str	r2, [sp, #120]	; 0x78
   3843e:	ldr	r2, [sp, #116]	; 0x74
   38440:	eors	r4, r2
   38442:	ldr	r2, [sp, #120]	; 0x78
   38444:	eor.w	r8, r2, r8
   38448:	mov.w	r2, r8, lsl #1
   3844c:	orr.w	r2, r2, r4, lsr #31
   38450:	lsls	r4, r4, #1
   38452:	str	r2, [sp, #216]	; 0xd8
   38454:	orr.w	r2, r4, r8, lsr #31
   38458:	str	r2, [sp, #204]	; 0xcc
   3845a:	ldr	r2, [sp, #36]	; 0x24
   3845c:	ldr	r4, [sp, #172]	; 0xac
   3845e:	adds	r2, r2, r1
   38460:	ldr	r1, [sp, #40]	; 0x28
   38462:	adc.w	r7, r1, r4
   38466:	ldr	r1, [sp, #244]	; 0xf4
   38468:	adds	r2, r2, r1
   3846a:	ldr	r1, [sp, #252]	; 0xfc
   3846c:	ldr	r4, [sp, #244]	; 0xf4
   3846e:	adc.w	r7, r1, r7
   38472:	ldr	r1, [sp, #196]	; 0xc4
   38474:	ldr	r5, [sp, #252]	; 0xfc
   38476:	eor.w	r6, r7, r1
   3847a:	ldr	r1, [sp, #192]	; 0xc0
   3847c:	adds	r3, r3, r6
   3847e:	eor.w	r1, r2, r1
   38482:	eor.w	r4, r3, r4
   38486:	adc.w	r0, r1, r0
   3848a:	eors	r5, r0
   3848c:	mov.w	r8, r4, lsr #24
   38490:	orr.w	lr, r8, r5, lsl #8
   38494:	lsrs	r5, r5, #24
   38496:	orr.w	ip, r5, r4, lsl #8
   3849a:	ldr	r4, [sp, #68]	; 0x44
   3849c:	adds	r2, r4, r2
   3849e:	ldr	r4, [sp, #72]	; 0x48
   384a0:	adc.w	r7, r4, r7
   384a4:	adds.w	r2, r2, lr
   384a8:	str	r2, [sp, #36]	; 0x24
   384aa:	adc.w	r2, r7, ip
   384ae:	str	r2, [sp, #40]	; 0x28
   384b0:	ldr	r2, [sp, #36]	; 0x24
   384b2:	eors	r6, r2
   384b4:	ldr	r2, [sp, #40]	; 0x28
   384b6:	eors	r1, r2
   384b8:	lsrs	r2, r6, #16
   384ba:	orr.w	r2, r2, r1, lsl #16
   384be:	lsrs	r1, r1, #16
   384c0:	str	r2, [sp, #168]	; 0xa8
   384c2:	orr.w	r2, r1, r6, lsl #16
   384c6:	str	r2, [sp, #172]	; 0xac
   384c8:	ldr	r2, [sp, #168]	; 0xa8
   384ca:	ldr	r1, [sp, #164]	; 0xa4
   384cc:	adds	r3, r3, r2
   384ce:	str	r3, [sp, #68]	; 0x44
   384d0:	ldr	r3, [sp, #172]	; 0xac
   384d2:	adc.w	r3, r0, r3
   384d6:	str	r3, [sp, #72]	; 0x48
   384d8:	ldr	r2, [sp, #72]	; 0x48
   384da:	ldr	r3, [sp, #68]	; 0x44
   384dc:	eor.w	ip, r2, ip
   384e0:	eor.w	r3, r3, lr
   384e4:	mov.w	r2, ip, lsl #1
   384e8:	orr.w	r2, r2, r3, lsr #31
   384ec:	mov.w	lr, r3, lsl #1
   384f0:	str	r2, [sp, #192]	; 0xc0
   384f2:	orr.w	lr, lr, ip, lsr #31
   384f6:	ldr	r2, [sp, #160]	; 0xa0
   384f8:	ldr	r3, [sp, #76]	; 0x4c
   384fa:	adds	r3, r3, r2
   384fc:	ldr	r2, [sp, #80]	; 0x50
   384fe:	adc.w	ip, r2, r1
   38502:	ldr	r2, [sp, #240]	; 0xf0
   38504:	ldr	r1, [sp, #180]	; 0xb4
   38506:	adds	r3, r3, r2
   38508:	ldr	r2, [sp, #248]	; 0xf8
   3850a:	adc.w	ip, ip, r2
   3850e:	ldr	r2, [sp, #200]	; 0xc8
   38510:	eor.w	r6, ip, fp
   38514:	eor.w	r0, r3, r2
   38518:	ldr	r2, [sp, #176]	; 0xb0
   3851a:	adds	r2, r2, r6
   3851c:	adc.w	r5, r1, r0
   38520:	ldr	r1, [sp, #240]	; 0xf0
   38522:	eor.w	r8, r2, r1
   38526:	ldr	r1, [sp, #248]	; 0xf8
   38528:	eor.w	r4, r5, r1
   3852c:	mov.w	r9, r8, lsr #24
   38530:	orr.w	r1, r9, r4, lsl #8
   38534:	lsrs	r4, r4, #24
   38536:	orr.w	r7, r4, r8, lsl #8
   3853a:	ldr	r4, [sp, #124]	; 0x7c
   3853c:	adds	r3, r4, r3
   3853e:	ldr	r4, [sp, #128]	; 0x80
   38540:	adc.w	ip, r4, ip
   38544:	adds	r3, r3, r1
   38546:	str	r3, [sp, #76]	; 0x4c
   38548:	adc.w	r3, ip, r7
   3854c:	str	r3, [sp, #80]	; 0x50
   3854e:	ldr	r3, [sp, #76]	; 0x4c
   38550:	eors	r6, r3
   38552:	ldr	r3, [sp, #80]	; 0x50
   38554:	eors	r0, r3
   38556:	lsrs	r3, r6, #16
   38558:	orr.w	r3, r3, r0, lsl #16
   3855c:	lsrs	r0, r0, #16
   3855e:	str	r3, [sp, #124]	; 0x7c
   38560:	orr.w	r3, r0, r6, lsl #16
   38564:	str	r3, [sp, #128]	; 0x80
   38566:	ldr	r3, [sp, #124]	; 0x7c
   38568:	ldr	r0, [sp, #148]	; 0x94
   3856a:	adds	r2, r2, r3
   3856c:	ldr	r3, [sp, #128]	; 0x80
   3856e:	eor.w	r1, r1, r2
   38572:	ldr	r6, [sp, #208]	; 0xd0
   38574:	adc.w	r5, r3, r5
   38578:	eors	r7, r5
   3857a:	lsls	r3, r7, #1
   3857c:	orr.w	r3, r3, r1, lsr #31
   38580:	lsls	r1, r1, #1
   38582:	str	r3, [sp, #164]	; 0xa4
   38584:	orr.w	r3, r1, r7, lsr #31
   38588:	ldr	r1, [sp, #144]	; 0x90
   3858a:	str	r3, [sp, #160]	; 0xa0
   3858c:	ldr	r3, [sp, #108]	; 0x6c
   3858e:	adds	r1, r3, r1
   38590:	ldr	r3, [sp, #112]	; 0x70
   38592:	adc.w	r4, r3, r0
   38596:	ldr	r3, [sp, #208]	; 0xd0
   38598:	ldr	r0, [sp, #188]	; 0xbc
   3859a:	adds	r1, r1, r3
   3859c:	ldr	r3, [sp, #212]	; 0xd4
   3859e:	adc.w	r4, r3, r4
   385a2:	ldr	r3, [sp, #224]	; 0xe0
   385a4:	eor.w	r8, r4, r3
   385a8:	ldr	r3, [sp, #220]	; 0xdc
   385aa:	eor.w	r7, r1, r3
   385ae:	ldr	r3, [sp, #184]	; 0xb8
   385b0:	adds.w	r3, r3, r8
   385b4:	str	r3, [sp, #108]	; 0x6c
   385b6:	eor.w	r9, r3, r6
   385ba:	ldr	r6, [sp, #212]	; 0xd4
   385bc:	ldr	r3, [sp, #52]	; 0x34
   385be:	adcs	r0, r7
   385c0:	eor.w	ip, r0, r6
   385c4:	mov.w	fp, r9, lsr #24
   385c8:	adds	r1, r3, r1
   385ca:	ldr	r3, [sp, #56]	; 0x38
   385cc:	orr.w	r6, fp, ip, lsl #8
   385d0:	mov.w	ip, ip, lsr #24
   385d4:	orr.w	sl, ip, r9, lsl #8
   385d8:	adc.w	r4, r3, r4
   385dc:	adds	r3, r1, r6
   385de:	str	r3, [sp, #52]	; 0x34
   385e0:	adc.w	r3, r4, sl
   385e4:	str	r3, [sp, #56]	; 0x38
   385e6:	ldr	r3, [sp, #52]	; 0x34
   385e8:	eor.w	r8, r3, r8
   385ec:	ldr	r3, [sp, #56]	; 0x38
   385ee:	eors	r7, r3
   385f0:	mov.w	r1, r8, lsr #16
   385f4:	ldr	r3, [sp, #108]	; 0x6c
   385f6:	orr.w	r4, r1, r7, lsl #16
   385fa:	lsrs	r7, r7, #16
   385fc:	adds	r3, r3, r4
   385fe:	orr.w	fp, r7, r8, lsl #16
   38602:	adc.w	r0, r0, fp
   38606:	eors	r6, r3
   38608:	eor.w	sl, r0, sl
   3860c:	mov.w	r1, sl, lsl #1
   38610:	orr.w	r1, r1, r6, lsr #31
   38614:	lsls	r6, r6, #1
   38616:	str	r1, [sp, #112]	; 0x70
   38618:	orr.w	r1, r6, sl, lsr #31
   3861c:	str	r1, [sp, #108]	; 0x6c
   3861e:	ldr	r6, [sp, #84]	; 0x54
   38620:	ldr	r1, [sp, #12]
   38622:	ldr	r7, [sp, #88]	; 0x58
   38624:	adds	r1, r1, r6
   38626:	ldr	r6, [sp, #16]
   38628:	adc.w	r9, r6, r7
   3862c:	ldr	r6, [sp, #192]	; 0xc0
   3862e:	adds.w	r1, r1, lr
   38632:	adc.w	r9, r9, r6
   38636:	eor.w	r7, r1, r4
   3863a:	eor.w	r6, r9, fp
   3863e:	ldr	r4, [sp, #192]	; 0xc0
   38640:	adds	r2, r2, r6
   38642:	adc.w	r5, r7, r5
   38646:	eor.w	lr, r2, lr
   3864a:	eors	r4, r5
   3864c:	mov.w	sl, lr, lsr #24
   38650:	orr.w	ip, sl, r4, lsl #8
   38654:	lsrs	r4, r4, #24
   38656:	orr.w	r8, r4, lr, lsl #8
   3865a:	ldr	r4, [sp, #100]	; 0x64
   3865c:	adds	r1, r4, r1
   3865e:	ldr	r4, [sp, #104]	; 0x68
   38660:	adc.w	r9, r4, r9
   38664:	adds.w	r1, r1, ip
   38668:	adc.w	r4, r9, r8
   3866c:	eors	r6, r1
   3866e:	eors	r7, r4
   38670:	strd	r1, r4, [sp, #400]	; 0x190
   38674:	mov.w	lr, r6, lsr #16
   38678:	orr.w	r1, lr, r7, lsl #16
   3867c:	lsrs	r7, r7, #16
   3867e:	orr.w	r4, r7, r6, lsl #16
   38682:	adds	r2, r2, r1
   38684:	adc.w	r5, r4, r5
   38688:	strd	r2, r5, [sp, #480]	; 0x1e0
   3868c:	eor.w	r5, r5, r8
   38690:	eor.w	r2, r2, ip
   38694:	strd	r1, r4, [sp, #520]	; 0x208
   38698:	lsls	r6, r5, #1
   3869a:	ldr	r1, [sp, #36]	; 0x24
   3869c:	orr.w	r6, r6, r2, lsr #31
   386a0:	lsls	r2, r2, #1
   386a2:	orr.w	r5, r2, r5, lsr #31
   386a6:	ldr	r2, [sp, #4]
   386a8:	ldr	r4, [sp, #40]	; 0x28
   386aa:	adds	r2, r2, r1
   386ac:	ldr	r1, [sp, #8]
   386ae:	strd	r5, r6, [sp, #440]	; 0x1b8
   386b2:	adc.w	r7, r1, r4
   386b6:	ldr	r1, [sp, #160]	; 0xa0
   386b8:	ldr	r5, [sp, #160]	; 0xa0
   386ba:	adds	r2, r2, r1
   386bc:	ldr	r1, [sp, #164]	; 0xa4
   386be:	ldr	r4, [sp, #152]	; 0x98
   386c0:	adc.w	r7, r1, r7
   386c4:	ldr	r1, [sp, #156]	; 0x9c
   386c6:	eors	r4, r2
   386c8:	eors	r1, r7
   386ca:	adds	r3, r3, r1
   386cc:	eor.w	lr, r3, r5
   386d0:	ldr	r5, [sp, #164]	; 0xa4
   386d2:	adc.w	r0, r4, r0
   386d6:	eors	r5, r0
   386d8:	mov.w	r8, lr, lsr #24
   386dc:	orr.w	r6, r8, r5, lsl #8
   386e0:	lsrs	r5, r5, #24
   386e2:	orr.w	ip, r5, lr, lsl #8
   386e6:	ldr	r5, [sp, #20]
   386e8:	adds	r2, r5, r2
   386ea:	ldr	r5, [sp, #24]
   386ec:	adc.w	r7, r5, r7
   386f0:	adds	r2, r2, r6
   386f2:	adc.w	r7, r7, ip
   386f6:	eors	r1, r2
   386f8:	eors	r4, r7
   386fa:	strd	r2, r7, [sp, #408]	; 0x198
   386fe:	lsrs	r7, r1, #16
   38700:	orr.w	r2, r7, r4, lsl #16
   38704:	lsrs	r4, r4, #16
   38706:	orr.w	r5, r4, r1, lsl #16
   3870a:	adds	r3, r3, r2
   3870c:	adc.w	r0, r5, r0
   38710:	strd	r2, r5, [sp, #496]	; 0x1f0
   38714:	strd	r3, r0, [sp, #488]	; 0x1e8
   38718:	eor.w	r0, r0, ip
   3871c:	eors	r3, r6
   3871e:	ldr	r2, [sp, #76]	; 0x4c
   38720:	lsls	r1, r0, #1
   38722:	orr.w	r1, r1, r3, lsr #31
   38726:	lsls	r3, r3, #1
   38728:	orr.w	r0, r3, r0, lsr #31
   3872c:	ldr	r3, [sp, #92]	; 0x5c
   3872e:	strd	r0, r1, [sp, #448]	; 0x1c0
   38732:	adds	r3, r3, r2
   38734:	ldr	r1, [sp, #80]	; 0x50
   38736:	ldr	r2, [sp, #96]	; 0x60
   38738:	adc.w	ip, r2, r1
   3873c:	ldr	r2, [sp, #108]	; 0x6c
   3873e:	ldr	r1, [sp, #120]	; 0x78
   38740:	adds	r3, r3, r2
   38742:	ldr	r2, [sp, #112]	; 0x70
   38744:	adc.w	ip, ip, r2
   38748:	ldr	r2, [sp, #172]	; 0xac
   3874a:	eor.w	r0, ip, r2
   3874e:	ldr	r2, [sp, #168]	; 0xa8
   38750:	eor.w	r4, r3, r2
   38754:	ldr	r2, [sp, #116]	; 0x74
   38756:	adds	r2, r2, r0
   38758:	adc.w	r5, r1, r4
   3875c:	ldr	r1, [sp, #108]	; 0x6c
   3875e:	eor.w	r6, r2, r1
   38762:	ldr	r1, [sp, #112]	; 0x70
   38764:	eors	r1, r5
   38766:	mov.w	r8, r6, lsr #24
   3876a:	orr.w	r7, r8, r1, lsl #8
   3876e:	lsrs	r1, r1, #24
   38770:	orr.w	lr, r1, r6, lsl #8
   38774:	ldr	r1, [sp, #60]	; 0x3c
   38776:	adds	r3, r1, r3
   38778:	ldr	r1, [sp, #64]	; 0x40
   3877a:	adc.w	ip, r1, ip
   3877e:	adds	r3, r3, r7
   38780:	adc.w	r1, ip, lr
   38784:	eors	r0, r3
   38786:	eors	r4, r1
   38788:	strd	r3, r1, [sp, #416]	; 0x1a0
   3878c:	lsrs	r6, r0, #16
   3878e:	orr.w	r3, r6, r4, lsl #16
   38792:	lsrs	r4, r4, #16
   38794:	orr.w	r1, r4, r0, lsl #16
   38798:	adds	r2, r2, r3
   3879a:	adc.w	r5, r1, r5
   3879e:	strd	r2, r5, [sp, #464]	; 0x1d0
   387a2:	eor.w	r5, r5, lr
   387a6:	eors	r2, r7
   387a8:	strd	r3, r1, [sp, #504]	; 0x1f8
   387ac:	lsls	r0, r5, #1
   387ae:	ldr	r3, [sp, #44]	; 0x2c
   387b0:	orr.w	r0, r0, r2, lsr #31
   387b4:	lsls	r2, r2, #1
   387b6:	orr.w	r5, r2, r5, lsr #31
   387ba:	ldr	r2, [sp, #52]	; 0x34
   387bc:	strd	r5, r0, [sp, #456]	; 0x1c8
   387c0:	adds	r1, r3, r2
   387c2:	ldr	r3, [sp, #48]	; 0x30
   387c4:	ldr	r2, [sp, #56]	; 0x38
   387c6:	adc.w	r4, r3, r2
   387ca:	ldr	r3, [sp, #204]	; 0xcc
   387cc:	adds	r1, r1, r3
   387ce:	ldr	r3, [sp, #216]	; 0xd8
   387d0:	adc.w	r2, r4, r3
   387d4:	ldr	r3, [sp, #128]	; 0x80
   387d6:	eor.w	r5, r2, r3
   387da:	ldr	r3, [sp, #124]	; 0x7c
   387dc:	ldr	r0, [sp, #72]	; 0x48
   387de:	eor.w	r6, r1, r3
   387e2:	ldr	r3, [sp, #68]	; 0x44
   387e4:	ldr	r4, [sp, #204]	; 0xcc
   387e6:	adds	r3, r3, r5
   387e8:	ldr	r7, [sp, #216]	; 0xd8
   387ea:	adcs	r0, r6
   387ec:	eors	r4, r3
   387ee:	eors	r7, r0
   387f0:	mov.w	r8, r4, lsr #24
   387f4:	orr.w	ip, r8, r7, lsl #8
   387f8:	lsrs	r7, r7, #24
   387fa:	orr.w	lr, r7, r4, lsl #8
   387fe:	ldr	r4, [sp, #28]
   38800:	adds	r1, r4, r1
   38802:	ldr	r4, [sp, #32]
   38804:	adc.w	r2, r4, r2
   38808:	adds.w	r1, r1, ip
   3880c:	adc.w	r2, r2, lr
   38810:	eors	r5, r1
   38812:	eors	r6, r2
   38814:	strd	r1, r2, [sp, #424]	; 0x1a8
   38818:	lsrs	r1, r5, #16
   3881a:	orr.w	r2, r1, r6, lsl #16
   3881e:	lsrs	r6, r6, #16
   38820:	adds	r3, r3, r2
   38822:	orr.w	r7, r6, r5, lsl #16
   38826:	adc.w	r0, r7, r0
   3882a:	strd	r3, r0, [sp, #472]	; 0x1d8
   3882e:	eor.w	r0, r0, lr
   38832:	eor.w	ip, r3, ip
   38836:	strd	r2, r7, [sp, #512]	; 0x200
   3883a:	lsls	r3, r0, #1
   3883c:	orr.w	r3, r3, ip, lsr #31
   38840:	mov.w	ip, ip, lsl #1
   38844:	orr.w	r0, ip, r0, lsr #31
   38848:	strd	r0, r3, [sp, #432]	; 0x1b0
   3884c:	ldr	r1, [sp, #136]	; 0x88
   3884e:	ldr	r3, [sp, #136]	; 0x88
   38850:	adds	r1, #8
   38852:	str	r1, [sp, #136]	; 0x88
   38854:	ldr	r1, [sp, #132]	; 0x84
   38856:	ldrd	r2, r3, [r3]
   3885a:	ldr.w	r0, [r1, #8]!
   3885e:	eors	r2, r0
   38860:	str	r1, [sp, #132]	; 0x84
   38862:	ldr	r1, [r1, #4]
   38864:	eors	r3, r1
   38866:	ldr	r1, [sp, #136]	; 0x88
   38868:	ldrd	r0, r1, [r1, #56]	; 0x38
   3886c:	eors	r3, r1
   3886e:	ldr	r1, [sp, #132]	; 0x84
   38870:	eors	r2, r0
   38872:	str	r2, [r1, #0]
   38874:	ldr	r2, [sp, #140]	; 0x8c
   38876:	str	r3, [r1, #4]
   38878:	cmp	r1, r2
   3887a:	bne.n	3884c <SHA256Result@@Base+0x3a08>
   3887c:	ldr	r2, [pc, #24]	; (38898 <SHA256Result@@Base+0x3a54>)
   3887e:	ldr	r3, [pc, #28]	; (3889c <SHA256Result@@Base+0x3a58>)
   38880:	add	r2, pc
   38882:	ldr	r3, [r2, r3]
   38884:	ldr	r2, [r3, #0]
   38886:	ldr	r3, [sp, #532]	; 0x214
   38888:	eors	r2, r3
   3888a:	beq.n	38890 <SHA256Result@@Base+0x3a4c>
   3888c:	blx	84cc <__stack_chk_fail@plt>
   38890:	add.w	sp, sp, #540	; 0x21c
   38894:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38898:	stmia	r5!, {r3}
   3889a:	movs	r2, r0
   3889c:	lsls	r4, r4, #8
	...

000388a0 <blake2b_init_param@@Base>:
   388a0:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   388a4:	movs	r2, #240	; 0xf0
   388a6:	ldr	r6, [pc, #80]	; (388f8 <blake2b_init_param@@Base+0x58>)
   388a8:	mov	r5, r1
   388aa:	movs	r1, #0
   388ac:	mov	r4, r0
   388ae:	blx	8780 <memset@plt+0x4>
   388b2:	sub.w	r2, r4, #8
   388b6:	add	r6, pc
   388b8:	add.w	r8, r4, #56	; 0x38
   388bc:	mov	r3, r2
   388be:	ldrd	r0, r1, [r6], #8
   388c2:	strd	r0, r1, [r3, #8]!
   388c6:	cmp	r3, r8
   388c8:	bne.n	388be <blake2b_init_param@@Base+0x1e>
   388ca:	mov	r6, r5
   388cc:	mov	r0, r6
   388ce:	adds	r6, #8
   388d0:	bl	34e58 <SHA256Result@@Base+0x14>
   388d4:	ldr.w	r7, [r2, #8]!
   388d8:	cmp	r2, r8
   388da:	eor.w	r0, r0, r7
   388de:	ldr	r3, [r2, #4]
   388e0:	eor.w	r1, r1, r3
   388e4:	strd	r0, r1, [r2]
   388e8:	bne.n	388cc <blake2b_init_param@@Base+0x2c>
   388ea:	ldrb	r3, [r5, #0]
   388ec:	movs	r0, #0
   388ee:	str.w	r3, [r4, #228]	; 0xe4
   388f2:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   388f6:	nop
   388f8:	push	{r1, r2, r3, r5, r6, r7, lr}
   388fa:	movs	r1, r0

000388fc <blake2b_init@@Base>:
   388fc:	ldr	r2, [pc, #124]	; (3897c <blake2b_init@@Base+0x80>)
   388fe:	ldr	r3, [pc, #128]	; (38980 <blake2b_init@@Base+0x84>)
   38900:	add	r2, pc
   38902:	push	{r4, r5, lr}
   38904:	sub	sp, #76	; 0x4c
   38906:	ldr	r3, [r2, r3]
   38908:	mov	r5, r0
   3890a:	ldr	r3, [r3, #0]
   3890c:	str	r3, [sp, #68]	; 0x44
   3890e:	mov.w	r3, #0
   38912:	subs	r3, r1, #1
   38914:	cmp	r3, #63	; 0x3f
   38916:	bhi.n	38970 <blake2b_init@@Base+0x74>
   38918:	movs	r4, #0
   3891a:	movs	r2, #14
   3891c:	strb.w	r1, [sp, #4]
   38920:	add.w	r0, sp, #22
   38924:	mov	r1, r4
   38926:	movw	r3, #257	; 0x101
   3892a:	strb.w	r4, [sp, #5]
   3892e:	strh.w	r3, [sp, #6]
   38932:	strd	r4, r4, [sp, #8]
   38936:	str	r4, [sp, #16]
   38938:	strh.w	r4, [sp, #20]
   3893c:	blx	8780 <memset@plt+0x4>
   38940:	movs	r2, #16
   38942:	mov	r1, r4
   38944:	add	r0, sp, #36	; 0x24
   38946:	blx	8780 <memset@plt+0x4>
   3894a:	mov	r1, r4
   3894c:	add	r0, sp, #52	; 0x34
   3894e:	movs	r2, #16
   38950:	blx	8780 <memset@plt+0x4>
   38954:	add	r1, sp, #4
   38956:	mov	r0, r5
   38958:	bl	388a0 <blake2b_init_param@@Base>
   3895c:	ldr	r2, [pc, #36]	; (38984 <blake2b_init@@Base+0x88>)
   3895e:	ldr	r3, [pc, #32]	; (38980 <blake2b_init@@Base+0x84>)
   38960:	add	r2, pc
   38962:	ldr	r3, [r2, r3]
   38964:	ldr	r2, [r3, #0]
   38966:	ldr	r3, [sp, #68]	; 0x44
   38968:	eors	r2, r3
   3896a:	beq.n	38976 <blake2b_init@@Base+0x7a>
   3896c:	blx	84cc <__stack_chk_fail@plt>
   38970:	mov.w	r0, #4294967295	; 0xffffffff
   38974:	b.n	3895c <blake2b_init@@Base+0x60>
   38976:	add	sp, #76	; 0x4c
   38978:	pop	{r4, r5, pc}
   3897a:	nop
   3897c:	stmia	r4!, {r3, r7}
   3897e:	movs	r2, r0
   38980:	lsls	r4, r4, #8
   38982:	movs	r0, r0
   38984:	stmia	r4!, {r3, r5}
   38986:	movs	r2, r0

00038988 <blake2b_update@@Base>:
   38988:	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3898c:	mov	r4, r0
   3898e:	mov	sl, r1
   38990:	mov	r5, r2
   38992:	cmp	r2, #0
   38994:	beq.n	38a22 <blake2b_update@@Base+0x9a>
   38996:	ldr.w	r3, [r0, #224]	; 0xe0
   3899a:	add.w	fp, r0, #96	; 0x60
   3899e:	rsb	r2, r3, #128	; 0x80
   389a2:	cmp	r5, r2
   389a4:	bls.n	38a0a <blake2b_update@@Base+0x82>
   389a6:	movs	r0, #0
   389a8:	str.w	r0, [r4, #224]	; 0xe0
   389ac:	add.w	r0, fp, r3
   389b0:	str	r2, [sp, #4]
   389b2:	str	r3, [sp, #0]
   389b4:	blx	843c <memcpy@plt+0x4>
   389b8:	ldrd	r1, r0, [r4, #64]	; 0x40
   389bc:	adds.w	r8, r1, #128	; 0x80
   389c0:	adc.w	r9, r0, #0
   389c4:	ldrd	r0, r1, [r4, #72]	; 0x48
   389c8:	cmp.w	r9, #0
   389cc:	strd	r8, r9, [r4, #64]	; 0x40
   389d0:	it	eq
   389d2:	cmpeq.w	r8, #128	; 0x80
   389d6:	ite	cc
   389d8:	movcc.w	ip, #1
   389dc:	movcs.w	ip, #0
   389e0:	adds.w	r0, r0, ip
   389e4:	adc.w	r1, r1, #0
   389e8:	strd	r0, r1, [r4, #72]	; 0x48
   389ec:	mov	r1, fp
   389ee:	mov	r0, r4
   389f0:	bl	34e60 <SHA256Result@@Base+0x1c>
   389f4:	ldr	r3, [sp, #0]
   389f6:	ldr	r2, [sp, #4]
   389f8:	subs	r3, #128	; 0x80
   389fa:	add	r2, sl
   389fc:	add	r5, r3
   389fe:	add.w	r8, r2, r5
   38a02:	cmp	r5, #128	; 0x80
   38a04:	sub.w	sl, r8, r5
   38a08:	bhi.n	38a2a <blake2b_update@@Base+0xa2>
   38a0a:	ldr.w	r0, [r4, #224]	; 0xe0
   38a0e:	mov	r2, r5
   38a10:	mov	r1, sl
   38a12:	add	r0, fp
   38a14:	blx	843c <memcpy@plt+0x4>
   38a18:	ldr.w	r2, [r4, #224]	; 0xe0
   38a1c:	add	r2, r5
   38a1e:	str.w	r2, [r4, #224]	; 0xe0
   38a22:	movs	r0, #0
   38a24:	add	sp, #12
   38a26:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38a2a:	ldrd	r3, r2, [r4, #64]	; 0x40
   38a2e:	mov	r0, r4
   38a30:	subs	r5, #128	; 0x80
   38a32:	adds.w	r6, r3, #128	; 0x80
   38a36:	adc.w	r7, r2, #0
   38a3a:	ldrd	r2, r3, [r4, #72]	; 0x48
   38a3e:	cmp	r7, #0
   38a40:	strd	r6, r7, [r4, #64]	; 0x40
   38a44:	it	eq
   38a46:	cmpeq	r6, #128	; 0x80
   38a48:	ite	cc
   38a4a:	movcc	r1, #1
   38a4c:	movcs	r1, #0
   38a4e:	adds	r2, r2, r1
   38a50:	mov	r1, sl
   38a52:	adc.w	r3, r3, #0
   38a56:	strd	r2, r3, [r4, #72]	; 0x48
   38a5a:	bl	34e60 <SHA256Result@@Base+0x1c>
   38a5e:	b.n	38a02 <blake2b_update@@Base+0x7a>

00038a60 <blake2b_init_key@@Base>:
   38a60:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   38a64:	mov	r8, r2
   38a66:	ldr	r2, [pc, #192]	; (38b28 <blake2b_init_key@@Base+0xc8>)
   38a68:	mov	r6, r3
   38a6a:	ldr	r3, [pc, #192]	; (38b2c <blake2b_init_key@@Base+0xcc>)
   38a6c:	sub	sp, #200	; 0xc8
   38a6e:	add	r2, pc
   38a70:	mov	r7, r0
   38a72:	ldr	r3, [r2, r3]
   38a74:	ldr	r3, [r3, #0]
   38a76:	str	r3, [sp, #196]	; 0xc4
   38a78:	mov.w	r3, #0
   38a7c:	subs	r3, r1, #1
   38a7e:	cmp	r3, #63	; 0x3f
   38a80:	bls.n	38a9a <blake2b_init_key@@Base+0x3a>
   38a82:	mov.w	r0, #4294967295	; 0xffffffff
   38a86:	ldr	r2, [pc, #168]	; (38b30 <blake2b_init_key@@Base+0xd0>)
   38a88:	ldr	r3, [pc, #160]	; (38b2c <blake2b_init_key@@Base+0xcc>)
   38a8a:	add	r2, pc
   38a8c:	ldr	r3, [r2, r3]
   38a8e:	ldr	r2, [r3, #0]
   38a90:	ldr	r3, [sp, #196]	; 0xc4
   38a92:	eors	r2, r3
   38a94:	beq.n	38b22 <blake2b_init_key@@Base+0xc2>
   38a96:	blx	84cc <__stack_chk_fail@plt>
   38a9a:	cmp.w	r8, #0
   38a9e:	beq.n	38a82 <blake2b_init_key@@Base+0x22>
   38aa0:	subs	r3, r6, #1
   38aa2:	cmp	r3, #63	; 0x3f
   38aa4:	bhi.n	38a82 <blake2b_init_key@@Base+0x22>
   38aa6:	movs	r4, #0
   38aa8:	movs	r2, #14
   38aaa:	strb.w	r1, [sp, #4]
   38aae:	add.w	r0, sp, #22
   38ab2:	mov	r1, r4
   38ab4:	movw	r3, #257	; 0x101
   38ab8:	strb.w	r6, [sp, #5]
   38abc:	strh.w	r3, [sp, #6]
   38ac0:	strd	r4, r4, [sp, #8]
   38ac4:	str	r4, [sp, #16]
   38ac6:	strh.w	r4, [sp, #20]
   38aca:	blx	8780 <memset@plt+0x4>
   38ace:	movs	r2, #16
   38ad0:	mov	r1, r4
   38ad2:	add	r0, sp, #36	; 0x24
   38ad4:	blx	8780 <memset@plt+0x4>
   38ad8:	movs	r2, #16
   38ada:	mov	r1, r4
   38adc:	add	r0, sp, #52	; 0x34
   38ade:	blx	8780 <memset@plt+0x4>
   38ae2:	add	r1, sp, #4
   38ae4:	mov	r0, r7
   38ae6:	bl	388a0 <blake2b_init_param@@Base>
   38aea:	cmp	r0, r4
   38aec:	blt.n	38a82 <blake2b_init_key@@Base+0x22>
   38aee:	add	r5, sp, #68	; 0x44
   38af0:	movs	r2, #128	; 0x80
   38af2:	mov	r1, r4
   38af4:	mov	r0, r5
   38af6:	blx	8780 <memset@plt+0x4>
   38afa:	movs	r3, #128	; 0x80
   38afc:	mov	r2, r6
   38afe:	mov	r1, r8
   38b00:	mov	r0, r5
   38b02:	blx	855c <__memcpy_chk@plt>
   38b06:	movs	r2, #128	; 0x80
   38b08:	mov	r1, r5
   38b0a:	mov	r0, r7
   38b0c:	bl	38988 <blake2b_update@@Base>
   38b10:	ldr	r3, [pc, #32]	; (38b34 <blake2b_init_key@@Base+0xd4>)
   38b12:	movs	r2, #128	; 0x80
   38b14:	mov	r1, r4
   38b16:	add	r3, pc
   38b18:	mov	r0, r5
   38b1a:	ldr	r3, [r3, #0]
   38b1c:	blx	r3
   38b1e:	mov	r0, r4
   38b20:	b.n	38a86 <blake2b_init_key@@Base+0x26>
   38b22:	add	sp, #200	; 0xc8
   38b24:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   38b28:	stmia	r3!, {r1, r3, r4}
   38b2a:	movs	r2, r0
   38b2c:	lsls	r4, r4, #8
   38b2e:	movs	r0, r0
   38b30:	stmia	r2!, {r1, r2, r3, r4, r5, r6, r7}
   38b32:	movs	r2, r0
   38b34:	bvc.n	38b7c <blake2b_final@@Base+0x44>
   38b36:	movs	r2, r0

00038b38 <blake2b_final@@Base>:
   38b38:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
   38b3c:	mov	r6, r2
   38b3e:	ldr	r2, [pc, #280]	; (38c58 <blake2b_final@@Base+0x120>)
   38b40:	sub	sp, #76	; 0x4c
   38b42:	ldr	r3, [pc, #280]	; (38c5c <blake2b_final@@Base+0x124>)
   38b44:	mov	r5, r1
   38b46:	add	r2, pc
   38b48:	mov	r4, r0
   38b4a:	movs	r1, #0
   38b4c:	add	r0, sp, #8
   38b4e:	ldr	r3, [r2, r3]
   38b50:	movs	r2, #60	; 0x3c
   38b52:	ldr	r3, [r3, #0]
   38b54:	str	r3, [sp, #68]	; 0x44
   38b56:	mov.w	r3, #0
   38b5a:	str	r1, [sp, #4]
   38b5c:	blx	8780 <memset@plt+0x4>
   38b60:	cmp	r5, #0
   38b62:	beq.n	38c4c <blake2b_final@@Base+0x114>
   38b64:	ldr.w	r3, [r4, #228]	; 0xe4
   38b68:	cmp	r3, r6
   38b6a:	bhi.n	38c4c <blake2b_final@@Base+0x114>
   38b6c:	ldrd	r2, r3, [r4, #80]	; 0x50
   38b70:	orrs	r3, r2
   38b72:	bne.n	38c4c <blake2b_final@@Base+0x114>
   38b74:	ldrd	r2, r3, [r4, #64]	; 0x40
   38b78:	movs	r7, #0
   38b7a:	ldr.w	r0, [r4, #224]	; 0xe0
   38b7e:	adds.w	r8, r0, r2
   38b82:	adcs.w	r9, r7, r3
   38b86:	ldrd	r2, r3, [r4, #72]	; 0x48
   38b8a:	strd	r8, r9, [r4, #64]	; 0x40
   38b8e:	ite	cs
   38b90:	movcs	r1, #1
   38b92:	movcc	r1, #0
   38b94:	adds	r2, r2, r1
   38b96:	ldrb.w	r1, [r4, #232]	; 0xe8
   38b9a:	adc.w	r3, r3, #0
   38b9e:	strd	r2, r3, [r4, #72]	; 0x48
   38ba2:	mov.w	r2, #4294967295	; 0xffffffff
   38ba6:	mov.w	r3, #4294967295	; 0xffffffff
   38baa:	cbz	r1, 38bb0 <blake2b_final@@Base+0x78>
   38bac:	strd	r2, r3, [r4, #88]	; 0x58
   38bb0:	add.w	r6, r4, #96	; 0x60
   38bb4:	strd	r2, r3, [r4, #80]	; 0x50
   38bb8:	movs	r1, #0
   38bba:	rsb	r2, r0, #128	; 0x80
   38bbe:	add	r0, r6
   38bc0:	add.w	r7, r4, #56	; 0x38
   38bc4:	blx	8780 <memset@plt+0x4>
   38bc8:	mov	r1, r6
   38bca:	mov	r0, r4
   38bcc:	bl	34e60 <SHA256Result@@Base+0x1c>
   38bd0:	add	r3, sp, #4
   38bd2:	sub.w	r1, r4, #8
   38bd6:	mov	r6, r3
   38bd8:	ldr.w	r0, [r1, #8]!
   38bdc:	adds	r3, #8
   38bde:	cmp	r1, r7
   38be0:	ldr	r2, [r1, #4]
   38be2:	mov.w	ip, r0, lsr #8
   38be6:	strb.w	r0, [r3, #-8]
   38bea:	strb.w	ip, [r3, #-7]
   38bee:	mov.w	ip, r0, lsr #16
   38bf2:	strb.w	r2, [r3, #-4]
   38bf6:	mov.w	r0, r0, lsr #24
   38bfa:	strb.w	ip, [r3, #-6]
   38bfe:	strb.w	r0, [r3, #-5]
   38c02:	mov.w	r0, r2, lsr #8
   38c06:	strb.w	r0, [r3, #-3]
   38c0a:	mov.w	r0, r2, lsr #16
   38c0e:	mov.w	r2, r2, lsr #24
   38c12:	strb.w	r0, [r3, #-2]
   38c16:	strb.w	r2, [r3, #-1]
   38c1a:	bne.n	38bd8 <blake2b_final@@Base+0xa0>
   38c1c:	ldr.w	r2, [r4, #228]	; 0xe4
   38c20:	mov	r1, r6
   38c22:	mov	r0, r5
   38c24:	blx	843c <memcpy@plt+0x4>
   38c28:	ldr	r3, [pc, #52]	; (38c60 <blake2b_final@@Base+0x128>)
   38c2a:	movs	r2, #64	; 0x40
   38c2c:	movs	r1, #0
   38c2e:	add	r3, pc
   38c30:	mov	r0, r6
   38c32:	ldr	r3, [r3, #0]
   38c34:	blx	r3
   38c36:	movs	r0, #0
   38c38:	ldr	r2, [pc, #40]	; (38c64 <blake2b_final@@Base+0x12c>)
   38c3a:	ldr	r3, [pc, #32]	; (38c5c <blake2b_final@@Base+0x124>)
   38c3c:	add	r2, pc
   38c3e:	ldr	r3, [r2, r3]
   38c40:	ldr	r2, [r3, #0]
   38c42:	ldr	r3, [sp, #68]	; 0x44
   38c44:	eors	r2, r3
   38c46:	beq.n	38c52 <blake2b_final@@Base+0x11a>
   38c48:	blx	84cc <__stack_chk_fail@plt>
   38c4c:	mov.w	r0, #4294967295	; 0xffffffff
   38c50:	b.n	38c38 <blake2b_final@@Base+0x100>
   38c52:	add	sp, #76	; 0x4c
   38c54:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
   38c58:	stmia	r2!, {r1, r6}
   38c5a:	movs	r2, r0
   38c5c:	lsls	r4, r4, #8
   38c5e:	movs	r0, r0
   38c60:	bvs.n	38c78 <blake2b@@Base+0x10>
   38c62:	movs	r2, r0
   38c64:	stmia	r1!, {r2, r3, r6}
   38c66:	movs	r2, r0

00038c68 <blake2b@@Base>:
   38c68:	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
   38c6c:	mov	r6, r0
   38c6e:	ldr	r5, [pc, #136]	; (38cf8 <blake2b@@Base+0x90>)
   38c70:	sub	sp, #248	; 0xf8
   38c72:	ldr	r0, [pc, #136]	; (38cfc <blake2b@@Base+0x94>)
   38c74:	mov	r4, r1
   38c76:	add	r5, pc
   38c78:	mov	r8, r3
   38c7a:	mov	r7, r2
   38c7c:	ldrd	r1, r3, [sp, #272]	; 0x110
   38c80:	ldr	r0, [r5, r0]
   38c82:	ldr	r0, [r0, #0]
   38c84:	str	r0, [sp, #244]	; 0xf4
   38c86:	mov.w	r0, #0
   38c8a:	cbnz	r2, 38caa <blake2b@@Base+0x42>
   38c8c:	cmp.w	r8, #0
   38c90:	beq.n	38caa <blake2b@@Base+0x42>
   38c92:	mov.w	r0, #4294967295	; 0xffffffff
   38c96:	ldr	r2, [pc, #104]	; (38d00 <blake2b@@Base+0x98>)
   38c98:	ldr	r3, [pc, #96]	; (38cfc <blake2b@@Base+0x94>)
   38c9a:	add	r2, pc
   38c9c:	ldr	r3, [r2, r3]
   38c9e:	ldr	r2, [r3, #0]
   38ca0:	ldr	r3, [sp, #244]	; 0xf4
   38ca2:	eors	r2, r3
   38ca4:	beq.n	38cf2 <blake2b@@Base+0x8a>
   38ca6:	blx	84cc <__stack_chk_fail@plt>
   38caa:	cmp	r6, #0
   38cac:	beq.n	38c92 <blake2b@@Base+0x2a>
   38cae:	cbnz	r1, 38cb4 <blake2b@@Base+0x4c>
   38cb0:	cmp	r3, #0
   38cb2:	bne.n	38c92 <blake2b@@Base+0x2a>
   38cb4:	subs	r2, r4, #1
   38cb6:	cmp	r2, #63	; 0x3f
   38cb8:	bhi.n	38c92 <blake2b@@Base+0x2a>
   38cba:	cmp	r3, #64	; 0x40
   38cbc:	bhi.n	38c92 <blake2b@@Base+0x2a>
   38cbe:	mov	r5, sp
   38cc0:	cbz	r3, 38ce8 <blake2b@@Base+0x80>
   38cc2:	mov	r2, r1
   38cc4:	mov	r0, r5
   38cc6:	mov	r1, r4
   38cc8:	bl	38a60 <blake2b_init_key@@Base>
   38ccc:	cmp	r0, #0
   38cce:	blt.n	38c92 <blake2b@@Base+0x2a>
   38cd0:	mov	r2, r8
   38cd2:	mov	r1, r7
   38cd4:	mov	r0, r5
   38cd6:	bl	38988 <blake2b_update@@Base>
   38cda:	mov	r2, r4
   38cdc:	mov	r1, r6
   38cde:	mov	r0, r5
   38ce0:	bl	38b38 <blake2b_final@@Base>
   38ce4:	movs	r0, #0
   38ce6:	b.n	38c96 <blake2b@@Base+0x2e>
   38ce8:	mov	r1, r4
   38cea:	mov	r0, r5
   38cec:	bl	388fc <blake2b_init@@Base>
   38cf0:	b.n	38ccc <blake2b@@Base+0x64>
   38cf2:	add	sp, #248	; 0xf8
   38cf4:	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
   38cf8:	stmia	r1!, {r1, r4}
   38cfa:	movs	r2, r0
   38cfc:	lsls	r4, r4, #8
   38cfe:	movs	r0, r0
   38d00:	stmia	r0!, {r1, r2, r3, r5, r6, r7}
   38d02:	movs	r2, r0

00038d04 <blake2@@Base>:
   38d04:	b.w	38c68 <blake2b@@Base>

00038d08 <btrfs_util_strerror@@Base>:
   38d08:	cmp	r0, #26
   38d0a:	bhi.n	38d16 <btrfs_util_strerror@@Base+0xe>
   38d0c:	ldr	r3, [pc, #12]	; (38d1c <btrfs_util_strerror@@Base+0x14>)
   38d0e:	add	r3, pc
   38d10:	ldr.w	r0, [r3, r0, lsl #2]
   38d14:	bx	lr
   38d16:	movs	r0, #0
   38d18:	bx	lr
   38d1a:	nop
   38d1c:	bkpt	0x00f6
   38d1e:	movs	r2, r0
   38d20:	subs	r2, r1, #1
   38d22:	it	eq
   38d24:	bxeq	lr
   38d26:	bcc.w	38f72 <btrfs_util_strerror@@Base+0x26a>
   38d2a:	cmp	r0, r1
   38d2c:	bls.w	38f5c <btrfs_util_strerror@@Base+0x254>
   38d30:	tst	r1, r2
   38d32:	beq.w	38f64 <btrfs_util_strerror@@Base+0x25c>
   38d36:	clz	r3, r0
   38d3a:	clz	r2, r1
   38d3e:	sub.w	r3, r2, r3
   38d42:	rsb	r3, r3, #31
   38d46:	add	r2, pc, #16	; (adr r2, 38d58 <btrfs_util_strerror@@Base+0x50>)
   38d48:	add.w	r3, r2, r3, lsl #4
   38d4c:	mov.w	r2, #0
   38d50:	mov	pc, r3
   38d52:	nop
   38d54:	nop.w
   38d58:	cmp.w	r0, r1, lsl #31
   38d5c:	nop
   38d5e:	adc.w	r2, r2, r2
   38d62:	it	cs
   38d64:	subcs.w	r0, r0, r1, lsl #31
   38d68:	cmp.w	r0, r1, lsl #30
   38d6c:	nop
   38d6e:	adc.w	r2, r2, r2
   38d72:	it	cs
   38d74:	subcs.w	r0, r0, r1, lsl #30
   38d78:	cmp.w	r0, r1, lsl #29
   38d7c:	nop
   38d7e:	adc.w	r2, r2, r2
   38d82:	it	cs
   38d84:	subcs.w	r0, r0, r1, lsl #29
   38d88:	cmp.w	r0, r1, lsl #28
   38d8c:	nop
   38d8e:	adc.w	r2, r2, r2
   38d92:	it	cs
   38d94:	subcs.w	r0, r0, r1, lsl #28
   38d98:	cmp.w	r0, r1, lsl #27
   38d9c:	nop
   38d9e:	adc.w	r2, r2, r2
   38da2:	it	cs
   38da4:	subcs.w	r0, r0, r1, lsl #27
   38da8:	cmp.w	r0, r1, lsl #26
   38dac:	nop
   38dae:	adc.w	r2, r2, r2
   38db2:	it	cs
   38db4:	subcs.w	r0, r0, r1, lsl #26
   38db8:	cmp.w	r0, r1, lsl #25
   38dbc:	nop
   38dbe:	adc.w	r2, r2, r2
   38dc2:	it	cs
   38dc4:	subcs.w	r0, r0, r1, lsl #25
   38dc8:	cmp.w	r0, r1, lsl #24
   38dcc:	nop
   38dce:	adc.w	r2, r2, r2
   38dd2:	it	cs
   38dd4:	subcs.w	r0, r0, r1, lsl #24
   38dd8:	cmp.w	r0, r1, lsl #23
   38ddc:	nop
   38dde:	adc.w	r2, r2, r2
   38de2:	it	cs
   38de4:	subcs.w	r0, r0, r1, lsl #23
   38de8:	cmp.w	r0, r1, lsl #22
   38dec:	nop
   38dee:	adc.w	r2, r2, r2
   38df2:	it	cs
   38df4:	subcs.w	r0, r0, r1, lsl #22
   38df8:	cmp.w	r0, r1, lsl #21
   38dfc:	nop
   38dfe:	adc.w	r2, r2, r2
   38e02:	it	cs
   38e04:	subcs.w	r0, r0, r1, lsl #21
   38e08:	cmp.w	r0, r1, lsl #20
   38e0c:	nop
   38e0e:	adc.w	r2, r2, r2
   38e12:	it	cs
   38e14:	subcs.w	r0, r0, r1, lsl #20
   38e18:	cmp.w	r0, r1, lsl #19
   38e1c:	nop
   38e1e:	adc.w	r2, r2, r2
   38e22:	it	cs
   38e24:	subcs.w	r0, r0, r1, lsl #19
   38e28:	cmp.w	r0, r1, lsl #18
   38e2c:	nop
   38e2e:	adc.w	r2, r2, r2
   38e32:	it	cs
   38e34:	subcs.w	r0, r0, r1, lsl #18
   38e38:	cmp.w	r0, r1, lsl #17
   38e3c:	nop
   38e3e:	adc.w	r2, r2, r2
   38e42:	it	cs
   38e44:	subcs.w	r0, r0, r1, lsl #17
   38e48:	cmp.w	r0, r1, lsl #16
   38e4c:	nop
   38e4e:	adc.w	r2, r2, r2
   38e52:	it	cs
   38e54:	subcs.w	r0, r0, r1, lsl #16
   38e58:	cmp.w	r0, r1, lsl #15
   38e5c:	nop
   38e5e:	adc.w	r2, r2, r2
   38e62:	it	cs
   38e64:	subcs.w	r0, r0, r1, lsl #15
   38e68:	cmp.w	r0, r1, lsl #14
   38e6c:	nop
   38e6e:	adc.w	r2, r2, r2
   38e72:	it	cs
   38e74:	subcs.w	r0, r0, r1, lsl #14
   38e78:	cmp.w	r0, r1, lsl #13
   38e7c:	nop
   38e7e:	adc.w	r2, r2, r2
   38e82:	it	cs
   38e84:	subcs.w	r0, r0, r1, lsl #13
   38e88:	cmp.w	r0, r1, lsl #12
   38e8c:	nop
   38e8e:	adc.w	r2, r2, r2
   38e92:	it	cs
   38e94:	subcs.w	r0, r0, r1, lsl #12
   38e98:	cmp.w	r0, r1, lsl #11
   38e9c:	nop
   38e9e:	adc.w	r2, r2, r2
   38ea2:	it	cs
   38ea4:	subcs.w	r0, r0, r1, lsl #11
   38ea8:	cmp.w	r0, r1, lsl #10
   38eac:	nop
   38eae:	adc.w	r2, r2, r2
   38eb2:	it	cs
   38eb4:	subcs.w	r0, r0, r1, lsl #10
   38eb8:	cmp.w	r0, r1, lsl #9
   38ebc:	nop
   38ebe:	adc.w	r2, r2, r2
   38ec2:	it	cs
   38ec4:	subcs.w	r0, r0, r1, lsl #9
   38ec8:	cmp.w	r0, r1, lsl #8
   38ecc:	nop
   38ece:	adc.w	r2, r2, r2
   38ed2:	it	cs
   38ed4:	subcs.w	r0, r0, r1, lsl #8
   38ed8:	cmp.w	r0, r1, lsl #7
   38edc:	nop
   38ede:	adc.w	r2, r2, r2
   38ee2:	it	cs
   38ee4:	subcs.w	r0, r0, r1, lsl #7
   38ee8:	cmp.w	r0, r1, lsl #6
   38eec:	nop
   38eee:	adc.w	r2, r2, r2
   38ef2:	it	cs
   38ef4:	subcs.w	r0, r0, r1, lsl #6
   38ef8:	cmp.w	r0, r1, lsl #5
   38efc:	nop
   38efe:	adc.w	r2, r2, r2
   38f02:	it	cs
   38f04:	subcs.w	r0, r0, r1, lsl #5
   38f08:	cmp.w	r0, r1, lsl #4
   38f0c:	nop
   38f0e:	adc.w	r2, r2, r2
   38f12:	it	cs
   38f14:	subcs.w	r0, r0, r1, lsl #4
   38f18:	cmp.w	r0, r1, lsl #3
   38f1c:	nop
   38f1e:	adc.w	r2, r2, r2
   38f22:	it	cs
   38f24:	subcs.w	r0, r0, r1, lsl #3
   38f28:	cmp.w	r0, r1, lsl #2
   38f2c:	nop
   38f2e:	adc.w	r2, r2, r2
   38f32:	it	cs
   38f34:	subcs.w	r0, r0, r1, lsl #2
   38f38:	cmp.w	r0, r1, lsl #1
   38f3c:	nop
   38f3e:	adc.w	r2, r2, r2
   38f42:	it	cs
   38f44:	subcs.w	r0, r0, r1, lsl #1
   38f48:	cmp.w	r0, r1
   38f4c:	nop
   38f4e:	adc.w	r2, r2, r2
   38f52:	it	cs
   38f54:	subcs.w	r0, r0, r1
   38f58:	mov	r0, r2
   38f5a:	bx	lr
   38f5c:	ite	eq
   38f5e:	moveq	r0, #1
   38f60:	movne	r0, #0
   38f62:	bx	lr
   38f64:	clz	r2, r1
   38f68:	rsb	r2, r2, #31
   38f6c:	lsr.w	r0, r0, r2
   38f70:	bx	lr
   38f72:	cbz	r0, 38f78 <btrfs_util_strerror@@Base+0x270>
   38f74:	mov.w	r0, #4294967295	; 0xffffffff
   38f78:	b.w	39534 <btrfs_util_strerror@@Base+0x82c>
   38f7c:	cmp	r1, #0
   38f7e:	beq.n	38f72 <btrfs_util_strerror@@Base+0x26a>
   38f80:	stmdb	sp!, {r0, r1, lr}
   38f84:	bl	38d20 <btrfs_util_strerror@@Base+0x18>
   38f88:	ldmia.w	sp!, {r1, r2, lr}
   38f8c:	mul.w	r3, r2, r0
   38f90:	sub.w	r1, r1, r3
   38f94:	bx	lr
   38f96:	nop
   38f98:	cmp	r1, #0
   38f9a:	beq.w	3921a <btrfs_util_strerror@@Base+0x512>
   38f9e:	eor.w	ip, r0, r1
   38fa2:	it	mi
   38fa4:	negmi	r1, r1
   38fa6:	subs	r2, r1, #1
   38fa8:	beq.w	391ea <btrfs_util_strerror@@Base+0x4e2>
   38fac:	movs	r3, r0
   38fae:	it	mi
   38fb0:	negmi	r3, r0
   38fb2:	cmp	r3, r1
   38fb4:	bls.w	391f4 <btrfs_util_strerror@@Base+0x4ec>
   38fb8:	tst	r1, r2
   38fba:	beq.w	39204 <btrfs_util_strerror@@Base+0x4fc>
   38fbe:	clz	r2, r3
   38fc2:	clz	r0, r1
   38fc6:	sub.w	r2, r0, r2
   38fca:	rsb	r2, r2, #31
   38fce:	add	r0, pc, #16	; (adr r0, 38fe0 <btrfs_util_strerror@@Base+0x2d8>)
   38fd0:	add.w	r2, r0, r2, lsl #4
   38fd4:	mov.w	r0, #0
   38fd8:	mov	pc, r2
   38fda:	nop
   38fdc:	nop.w
   38fe0:	cmp.w	r3, r1, lsl #31
   38fe4:	nop
   38fe6:	adc.w	r0, r0, r0
   38fea:	it	cs
   38fec:	subcs.w	r3, r3, r1, lsl #31
   38ff0:	cmp.w	r3, r1, lsl #30
   38ff4:	nop
   38ff6:	adc.w	r0, r0, r0
   38ffa:	it	cs
   38ffc:	subcs.w	r3, r3, r1, lsl #30
   39000:	cmp.w	r3, r1, lsl #29
   39004:	nop
   39006:	adc.w	r0, r0, r0
   3900a:	it	cs
   3900c:	subcs.w	r3, r3, r1, lsl #29
   39010:	cmp.w	r3, r1, lsl #28
   39014:	nop
   39016:	adc.w	r0, r0, r0
   3901a:	it	cs
   3901c:	subcs.w	r3, r3, r1, lsl #28
   39020:	cmp.w	r3, r1, lsl #27
   39024:	nop
   39026:	adc.w	r0, r0, r0
   3902a:	it	cs
   3902c:	subcs.w	r3, r3, r1, lsl #27
   39030:	cmp.w	r3, r1, lsl #26
   39034:	nop
   39036:	adc.w	r0, r0, r0
   3903a:	it	cs
   3903c:	subcs.w	r3, r3, r1, lsl #26
   39040:	cmp.w	r3, r1, lsl #25
   39044:	nop
   39046:	adc.w	r0, r0, r0
   3904a:	it	cs
   3904c:	subcs.w	r3, r3, r1, lsl #25
   39050:	cmp.w	r3, r1, lsl #24
   39054:	nop
   39056:	adc.w	r0, r0, r0
   3905a:	it	cs
   3905c:	subcs.w	r3, r3, r1, lsl #24
   39060:	cmp.w	r3, r1, lsl #23
   39064:	nop
   39066:	adc.w	r0, r0, r0
   3906a:	it	cs
   3906c:	subcs.w	r3, r3, r1, lsl #23
   39070:	cmp.w	r3, r1, lsl #22
   39074:	nop
   39076:	adc.w	r0, r0, r0
   3907a:	it	cs
   3907c:	subcs.w	r3, r3, r1, lsl #22
   39080:	cmp.w	r3, r1, lsl #21
   39084:	nop
   39086:	adc.w	r0, r0, r0
   3908a:	it	cs
   3908c:	subcs.w	r3, r3, r1, lsl #21
   39090:	cmp.w	r3, r1, lsl #20
   39094:	nop
   39096:	adc.w	r0, r0, r0
   3909a:	it	cs
   3909c:	subcs.w	r3, r3, r1, lsl #20
   390a0:	cmp.w	r3, r1, lsl #19
   390a4:	nop
   390a6:	adc.w	r0, r0, r0
   390aa:	it	cs
   390ac:	subcs.w	r3, r3, r1, lsl #19
   390b0:	cmp.w	r3, r1, lsl #18
   390b4:	nop
   390b6:	adc.w	r0, r0, r0
   390ba:	it	cs
   390bc:	subcs.w	r3, r3, r1, lsl #18
   390c0:	cmp.w	r3, r1, lsl #17
   390c4:	nop
   390c6:	adc.w	r0, r0, r0
   390ca:	it	cs
   390cc:	subcs.w	r3, r3, r1, lsl #17
   390d0:	cmp.w	r3, r1, lsl #16
   390d4:	nop
   390d6:	adc.w	r0, r0, r0
   390da:	it	cs
   390dc:	subcs.w	r3, r3, r1, lsl #16
   390e0:	cmp.w	r3, r1, lsl #15
   390e4:	nop
   390e6:	adc.w	r0, r0, r0
   390ea:	it	cs
   390ec:	subcs.w	r3, r3, r1, lsl #15
   390f0:	cmp.w	r3, r1, lsl #14
   390f4:	nop
   390f6:	adc.w	r0, r0, r0
   390fa:	it	cs
   390fc:	subcs.w	r3, r3, r1, lsl #14
   39100:	cmp.w	r3, r1, lsl #13
   39104:	nop
   39106:	adc.w	r0, r0, r0
   3910a:	it	cs
   3910c:	subcs.w	r3, r3, r1, lsl #13
   39110:	cmp.w	r3, r1, lsl #12
   39114:	nop
   39116:	adc.w	r0, r0, r0
   3911a:	it	cs
   3911c:	subcs.w	r3, r3, r1, lsl #12
   39120:	cmp.w	r3, r1, lsl #11
   39124:	nop
   39126:	adc.w	r0, r0, r0
   3912a:	it	cs
   3912c:	subcs.w	r3, r3, r1, lsl #11
   39130:	cmp.w	r3, r1, lsl #10
   39134:	nop
   39136:	adc.w	r0, r0, r0
   3913a:	it	cs
   3913c:	subcs.w	r3, r3, r1, lsl #10
   39140:	cmp.w	r3, r1, lsl #9
   39144:	nop
   39146:	adc.w	r0, r0, r0
   3914a:	it	cs
   3914c:	subcs.w	r3, r3, r1, lsl #9
   39150:	cmp.w	r3, r1, lsl #8
   39154:	nop
   39156:	adc.w	r0, r0, r0
   3915a:	it	cs
   3915c:	subcs.w	r3, r3, r1, lsl #8
   39160:	cmp.w	r3, r1, lsl #7
   39164:	nop
   39166:	adc.w	r0, r0, r0
   3916a:	it	cs
   3916c:	subcs.w	r3, r3, r1, lsl #7
   39170:	cmp.w	r3, r1, lsl #6
   39174:	nop
   39176:	adc.w	r0, r0, r0
   3917a:	it	cs
   3917c:	subcs.w	r3, r3, r1, lsl #6
   39180:	cmp.w	r3, r1, lsl #5
   39184:	nop
   39186:	adc.w	r0, r0, r0
   3918a:	it	cs
   3918c:	subcs.w	r3, r3, r1, lsl #5
   39190:	cmp.w	r3, r1, lsl #4
   39194:	nop
   39196:	adc.w	r0, r0, r0
   3919a:	it	cs
   3919c:	subcs.w	r3, r3, r1, lsl #4
   391a0:	cmp.w	r3, r1, lsl #3
   391a4:	nop
   391a6:	adc.w	r0, r0, r0
   391aa:	it	cs
   391ac:	subcs.w	r3, r3, r1, lsl #3
   391b0:	cmp.w	r3, r1, lsl #2
   391b4:	nop
   391b6:	adc.w	r0, r0, r0
   391ba:	it	cs
   391bc:	subcs.w	r3, r3, r1, lsl #2
   391c0:	cmp.w	r3, r1, lsl #1
   391c4:	nop
   391c6:	adc.w	r0, r0, r0
   391ca:	it	cs
   391cc:	subcs.w	r3, r3, r1, lsl #1
   391d0:	cmp.w	r3, r1
   391d4:	nop
   391d6:	adc.w	r0, r0, r0
   391da:	it	cs
   391dc:	subcs.w	r3, r3, r1
   391e0:	cmp.w	ip, #0
   391e4:	it	mi
   391e6:	negmi	r0, r0
   391e8:	bx	lr
   391ea:	teq	ip, r0
   391ee:	it	mi
   391f0:	negmi	r0, r0
   391f2:	bx	lr
   391f4:	it	cc
   391f6:	movcc	r0, #0
   391f8:	itt	eq
   391fa:	moveq.w	r0, ip, asr #31
   391fe:	orreq.w	r0, r0, #1
   39202:	bx	lr
   39204:	clz	r2, r1
   39208:	rsb	r2, r2, #31
   3920c:	cmp.w	ip, #0
   39210:	lsr.w	r0, r3, r2
   39214:	it	mi
   39216:	negmi	r0, r0
   39218:	bx	lr
   3921a:	cmp	r0, #0
   3921c:	it	gt
   3921e:	mvngt.w	r0, #2147483648	; 0x80000000
   39222:	it	lt
   39224:	movlt.w	r0, #2147483648	; 0x80000000
   39228:	b.w	39534 <btrfs_util_strerror@@Base+0x82c>
   3922c:	cmp	r1, #0
   3922e:	beq.n	3921a <btrfs_util_strerror@@Base+0x512>
   39230:	stmdb	sp!, {r0, r1, lr}
   39234:	bl	38f9e <btrfs_util_strerror@@Base+0x296>
   39238:	ldmia.w	sp!, {r1, r2, lr}
   3923c:	mul.w	r3, r2, r0
   39240:	sub.w	r1, r1, r3
   39244:	bx	lr
   39246:	nop
   39248:	eor.w	r0, r0, #2147483648	; 0x80000000
   3924c:	b.n	39254 <btrfs_util_strerror@@Base+0x54c>
   3924e:	nop
   39250:	eor.w	r1, r1, #2147483648	; 0x80000000
   39254:	lsls	r2, r0, #1
   39256:	itttt	ne
   39258:	movsne.w	r3, r1, lsl #1
   3925c:	teqne	r2, r3
   39260:	mvnsne.w	ip, r2, asr #24
   39264:	mvnsne.w	ip, r3, asr #24
   39268:	beq.n	39340 <btrfs_util_strerror@@Base+0x638>
   3926a:	mov.w	r2, r2, lsr #24
   3926e:	rsbs	r3, r2, r3, lsr #24
   39272:	itttt	gt
   39274:	addgt	r2, r2, r3
   39276:	eorgt	r1, r0
   39278:	eorgt	r0, r1
   3927a:	eorgt	r1, r0
   3927c:	it	lt
   3927e:	neglt	r3, r3
   39280:	cmp	r3, #25
   39282:	it	hi
   39284:	bxhi	lr
   39286:	tst.w	r0, #2147483648	; 0x80000000
   3928a:	orr.w	r0, r0, #8388608	; 0x800000
   3928e:	bic.w	r0, r0, #4278190080	; 0xff000000
   39292:	it	ne
   39294:	negne	r0, r0
   39296:	tst.w	r1, #2147483648	; 0x80000000
   3929a:	orr.w	r1, r1, #8388608	; 0x800000
   3929e:	bic.w	r1, r1, #4278190080	; 0xff000000
   392a2:	it	ne
   392a4:	negne	r1, r1
   392a6:	teq	r2, r3
   392aa:	beq.n	3932c <btrfs_util_strerror@@Base+0x624>
   392ac:	sub.w	r2, r2, #1
   392b0:	asr.w	ip, r1, r3
   392b4:	adds.w	r0, r0, ip
   392b8:	rsb	r3, r3, #32
   392bc:	lsl.w	r1, r1, r3
   392c0:	and.w	r3, r0, #2147483648	; 0x80000000
   392c4:	bpl.n	392cc <btrfs_util_strerror@@Base+0x5c4>
   392c6:	negs	r1, r1
   392c8:	sbc.w	r0, r0, r0, lsl #1
   392cc:	cmp.w	r0, #8388608	; 0x800000
   392d0:	bcc.n	392fa <btrfs_util_strerror@@Base+0x5f2>
   392d2:	cmp.w	r0, #16777216	; 0x1000000
   392d6:	bcc.n	392e6 <btrfs_util_strerror@@Base+0x5de>
   392d8:	lsrs	r0, r0, #1
   392da:	mov.w	r1, r1, rrx
   392de:	add.w	r2, r2, #1
   392e2:	cmp	r2, #254	; 0xfe
   392e4:	bcs.n	3938a <btrfs_util_strerror@@Base+0x682>
   392e6:	cmp.w	r1, #2147483648	; 0x80000000
   392ea:	adc.w	r0, r0, r2, lsl #23
   392ee:	it	eq
   392f0:	biceq.w	r0, r0, #1
   392f4:	orr.w	r0, r0, r3
   392f8:	bx	lr
   392fa:	lsls	r1, r1, #1
   392fc:	adc.w	r0, r0, r0
   39300:	subs	r2, #1
   39302:	it	cs
   39304:	cmpcs.w	r0, #8388608	; 0x800000
   39308:	bcs.n	392e6 <btrfs_util_strerror@@Base+0x5de>
   3930a:	clz	ip, r0
   3930e:	sub.w	ip, ip, #8
   39312:	subs.w	r2, r2, ip
   39316:	lsl.w	r0, r0, ip
   3931a:	itet	ge
   3931c:	addge.w	r0, r0, r2, lsl #23
   39320:	neglt	r2, r2
   39322:	orrge	r0, r3
   39324:	itt	lt
   39326:	lsrlt	r0, r2
   39328:	orrlt	r0, r3
   3932a:	bx	lr
   3932c:	teq	r2, #0
   39330:	eor.w	r1, r1, #8388608	; 0x800000
   39334:	itte	eq
   39336:	eoreq.w	r0, r0, #8388608	; 0x800000
   3933a:	addeq	r2, #1
   3933c:	subne	r3, #1
   3933e:	b.n	392ac <btrfs_util_strerror@@Base+0x5a4>
   39340:	mov.w	r3, r1, lsl #1
   39344:	mvns.w	ip, r2, asr #24
   39348:	it	ne
   3934a:	mvnsne.w	ip, r3, asr #24
   3934e:	beq.n	39394 <btrfs_util_strerror@@Base+0x68c>
   39350:	teq	r2, r3
   39354:	beq.n	39360 <btrfs_util_strerror@@Base+0x658>
   39356:	teq	r2, #0
   3935a:	it	eq
   3935c:	moveq	r0, r1
   3935e:	bx	lr
   39360:	teq	r0, r1
   39364:	itt	ne
   39366:	movne	r0, #0
   39368:	bxne	lr
   3936a:	tst.w	r2, #4278190080	; 0xff000000
   3936e:	bne.n	3937a <btrfs_util_strerror@@Base+0x672>
   39370:	lsls	r0, r0, #1
   39372:	it	cs
   39374:	orrcs.w	r0, r0, #2147483648	; 0x80000000
   39378:	bx	lr
   3937a:	adds.w	r2, r2, #33554432	; 0x2000000
   3937e:	itt	cc
   39380:	addcc.w	r0, r0, #8388608	; 0x800000
   39384:	bxcc	lr
   39386:	and.w	r3, r0, #2147483648	; 0x80000000
   3938a:	orr.w	r0, r3, #2130706432	; 0x7f000000
   3938e:	orr.w	r0, r0, #8388608	; 0x800000
   39392:	bx	lr
   39394:	mvns.w	r2, r2, asr #24
   39398:	itet	ne
   3939a:	movne	r0, r1
   3939c:	mvnseq.w	r3, r3, asr #24
   393a0:	movne	r1, r0
   393a2:	lsls	r2, r0, #9
   393a4:	itte	eq
   393a6:	movseq.w	r3, r1, lsl #9
   393aa:	teqeq	r0, r1
   393ae:	orrne.w	r0, r0, #4194304	; 0x400000
   393b2:	bx	lr
   393b4:	mov.w	r3, #0
   393b8:	b.n	393c4 <btrfs_util_strerror@@Base+0x6bc>
   393ba:	nop
   393bc:	ands.w	r3, r0, #2147483648	; 0x80000000
   393c0:	it	mi
   393c2:	negmi	r0, r0
   393c4:	movs.w	ip, r0
   393c8:	it	eq
   393ca:	bxeq	lr
   393cc:	orr.w	r3, r3, #1258291200	; 0x4b000000
   393d0:	mov	r1, r0
   393d2:	mov.w	r0, #0
   393d6:	b.n	39412 <btrfs_util_strerror@@Base+0x70a>
   393d8:	orrs.w	r2, r0, r1
   393dc:	it	eq
   393de:	bxeq	lr
   393e0:	mov.w	r3, #0
   393e4:	b.n	393fc <btrfs_util_strerror@@Base+0x6f4>
   393e6:	nop
   393e8:	orrs.w	r2, r0, r1
   393ec:	it	eq
   393ee:	bxeq	lr
   393f0:	ands.w	r3, r1, #2147483648	; 0x80000000
   393f4:	bpl.n	393fc <btrfs_util_strerror@@Base+0x6f4>
   393f6:	negs	r0, r0
   393f8:	sbc.w	r1, r1, r1, lsl #1
   393fc:	movs.w	ip, r1
   39400:	ittt	eq
   39402:	moveq	ip, r0
   39404:	moveq	r1, r0
   39406:	moveq	r0, #0
   39408:	orr.w	r3, r3, #1526726656	; 0x5b000000
   3940c:	it	eq
   3940e:	subeq.w	r3, r3, #268435456	; 0x10000000
   39412:	sub.w	r3, r3, #8388608	; 0x800000
   39416:	clz	r2, ip
   3941a:	subs	r2, #8
   3941c:	sub.w	r3, r3, r2, lsl #23
   39420:	blt.n	39444 <btrfs_util_strerror@@Base+0x73c>
   39422:	lsl.w	ip, r1, r2
   39426:	add	r3, ip
   39428:	lsl.w	ip, r0, r2
   3942c:	rsb	r2, r2, #32
   39430:	cmp.w	ip, #2147483648	; 0x80000000
   39434:	lsr.w	r2, r0, r2
   39438:	adc.w	r0, r3, r2
   3943c:	it	eq
   3943e:	biceq.w	r0, r0, #1
   39442:	bx	lr
   39444:	add.w	r2, r2, #32
   39448:	lsl.w	ip, r1, r2
   3944c:	rsb	r2, r2, #32
   39450:	orrs.w	r0, r0, ip, lsl #1
   39454:	lsr.w	r2, r1, r2
   39458:	adc.w	r0, r3, r2
   3945c:	it	eq
   3945e:	biceq.w	r0, r0, ip, lsr #31
   39462:	bx	lr
   39464:	cbnz	r3, 39486 <btrfs_util_strerror@@Base+0x77e>
   39466:	cbnz	r2, 39486 <btrfs_util_strerror@@Base+0x77e>
   39468:	cmp	r1, #0
   3946a:	ittt	lt
   3946c:	movlt	r0, #0
   3946e:	movlt.w	r1, #2147483648	; 0x80000000
   39472:	blt.n	39482 <btrfs_util_strerror@@Base+0x77a>
   39474:	it	eq
   39476:	cmpeq	r0, #0
   39478:	itt	ne
   3947a:	mvnne.w	r1, #2147483648	; 0x80000000
   3947e:	movne.w	r0, #4294967295	; 0xffffffff
   39482:	b.w	39534 <btrfs_util_strerror@@Base+0x82c>
   39486:	sub.w	ip, sp, #8
   3948a:	strd	ip, lr, [sp, #-16]!
   3948e:	cmp	r1, #0
   39490:	blt.n	394a6 <btrfs_util_strerror@@Base+0x79e>
   39492:	cmp	r3, #0
   39494:	blt.n	394cc <btrfs_util_strerror@@Base+0x7c4>
   39496:	bl	39540 <btrfs_util_strerror@@Base+0x838>
   3949a:	ldr.w	lr, [sp, #4]
   3949e:	ldrd	r2, r3, [sp, #8]
   394a2:	add	sp, #16
   394a4:	bx	lr
   394a6:	negs	r0, r0
   394a8:	sbc.w	r1, r1, r1, lsl #1
   394ac:	cmp	r3, #0
   394ae:	blt.n	394e8 <btrfs_util_strerror@@Base+0x7e0>
   394b0:	bl	39540 <btrfs_util_strerror@@Base+0x838>
   394b4:	ldr.w	lr, [sp, #4]
   394b8:	ldrd	r2, r3, [sp, #8]
   394bc:	add	sp, #16
   394be:	negs	r0, r0
   394c0:	sbc.w	r1, r1, r1, lsl #1
   394c4:	negs	r2, r2
   394c6:	sbc.w	r3, r3, r3, lsl #1
   394ca:	bx	lr
   394cc:	negs	r2, r2
   394ce:	sbc.w	r3, r3, r3, lsl #1
   394d2:	bl	39540 <btrfs_util_strerror@@Base+0x838>
   394d6:	ldr.w	lr, [sp, #4]
   394da:	ldrd	r2, r3, [sp, #8]
   394de:	add	sp, #16
   394e0:	negs	r0, r0
   394e2:	sbc.w	r1, r1, r1, lsl #1
   394e6:	bx	lr
   394e8:	negs	r2, r2
   394ea:	sbc.w	r3, r3, r3, lsl #1
   394ee:	bl	39540 <btrfs_util_strerror@@Base+0x838>
   394f2:	ldr.w	lr, [sp, #4]
   394f6:	ldrd	r2, r3, [sp, #8]
   394fa:	add	sp, #16
   394fc:	negs	r2, r2
   394fe:	sbc.w	r3, r3, r3, lsl #1
   39502:	bx	lr
   39504:	cbnz	r3, 3951c <btrfs_util_strerror@@Base+0x814>
   39506:	cbnz	r2, 3951c <btrfs_util_strerror@@Base+0x814>
   39508:	cmp	r1, #0
   3950a:	it	eq
   3950c:	cmpeq	r0, #0
   3950e:	itt	ne
   39510:	movne.w	r1, #4294967295	; 0xffffffff
   39514:	movne.w	r0, #4294967295	; 0xffffffff
   39518:	b.w	39534 <btrfs_util_strerror@@Base+0x82c>
   3951c:	sub.w	ip, sp, #8
   39520:	strd	ip, lr, [sp, #-16]!
   39524:	bl	39540 <btrfs_util_strerror@@Base+0x838>
   39528:	ldr.w	lr, [sp, #4]
   3952c:	ldrd	r2, r3, [sp, #8]
   39530:	add	sp, #16
   39532:	bx	lr
   39534:	push	{r1, lr}
   39536:	mov.w	r0, #8
   3953a:	blx	8364 <raise@plt>
   3953e:	pop	{r1, pc}
   39540:	cmp	r1, r3
   39542:	it	eq
   39544:	cmpeq	r0, r2
   39546:	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3954a:	mov	r4, r0
   3954c:	it	cc
   3954e:	movcc	r0, #0
   39550:	mov	r5, r1
   39552:	ldr.w	ip, [sp, #36]	; 0x24
   39556:	it	cc
   39558:	movcc	r1, r0
   3955a:	bcc.n	39634 <btrfs_util_strerror@@Base+0x92c>
   3955c:	mov	r8, r2
   3955e:	mov	r9, r3
   39560:	clz	r2, r3
   39564:	cmp	r3, #0
   39566:	beq.n	3964a <btrfs_util_strerror@@Base+0x942>
   39568:	clz	r3, r5
   3956c:	cmp	r5, #0
   3956e:	beq.n	39642 <btrfs_util_strerror@@Base+0x93a>
   39570:	subs	r2, r2, r3
   39572:	sub.w	lr, r2, #32
   39576:	lsl.w	fp, r9, r2
   3957a:	lsl.w	r3, r8, lr
   3957e:	rsb	r7, r2, #32
   39582:	orr.w	fp, fp, r3
   39586:	lsr.w	r3, r8, r7
   3958a:	orr.w	fp, fp, r3
   3958e:	lsl.w	sl, r8, r2
   39592:	cmp	r5, fp
   39594:	it	eq
   39596:	cmpeq	r4, sl
   39598:	itt	cc
   3959a:	movcc	r0, #0
   3959c:	movcc	r1, r0
   3959e:	bcc.n	395b6 <btrfs_util_strerror@@Base+0x8ae>
   395a0:	movs	r0, #1
   395a2:	subs.w	r4, r4, sl
   395a6:	lsl.w	r1, r0, lr
   395aa:	lsr.w	r3, r0, r7
   395ae:	sbc.w	r5, r5, fp
   395b2:	orrs	r1, r3
   395b4:	lsls	r0, r2
   395b6:	cmp	r2, #0
   395b8:	beq.n	39634 <btrfs_util_strerror@@Base+0x92c>
   395ba:	mov.w	r8, sl, lsr #1
   395be:	mov.w	r9, fp, lsr #1
   395c2:	orr.w	r8, r8, fp, lsl #31
   395c6:	mov	r6, r2
   395c8:	b.n	395e2 <btrfs_util_strerror@@Base+0x8da>
   395ca:	subs.w	r3, r4, r8
   395ce:	sbc.w	sl, r5, r9
   395d2:	adds	r3, r3, r3
   395d4:	adc.w	sl, sl, sl
   395d8:	adds	r4, r3, #1
   395da:	adc.w	r5, sl, #0
   395de:	subs	r6, #1
   395e0:	beq.n	395f2 <btrfs_util_strerror@@Base+0x8ea>
   395e2:	cmp	r5, r9
   395e4:	it	eq
   395e6:	cmpeq	r4, r8
   395e8:	bcs.n	395ca <btrfs_util_strerror@@Base+0x8c2>
   395ea:	adds	r4, r4, r4
   395ec:	adcs	r5, r5
   395ee:	subs	r6, #1
   395f0:	bne.n	395e2 <btrfs_util_strerror@@Base+0x8da>
   395f2:	lsl.w	r7, r5, r7
   395f6:	lsr.w	r3, r4, r2
   395fa:	orrs	r3, r7
   395fc:	lsr.w	lr, r5, lr
   39600:	adds	r0, r0, r4
   39602:	lsr.w	r8, r5, r2
   39606:	orr.w	r4, r3, lr
   3960a:	sub.w	r7, r2, #32
   3960e:	rsb	r6, r2, #32
   39612:	lsl.w	r3, r8, r2
   39616:	lsl.w	r7, r4, r7
   3961a:	lsl.w	r2, r4, r2
   3961e:	orr.w	r3, r3, r7
   39622:	lsr.w	r6, r4, r6
   39626:	adc.w	r1, r5, r1
   3962a:	orrs	r3, r6
   3962c:	subs	r0, r0, r2
   3962e:	mov	r5, r8
   39630:	sbc.w	r1, r1, r3
   39634:	cmp.w	ip, #0
   39638:	beq.n	3963e <btrfs_util_strerror@@Base+0x936>
   3963a:	strd	r4, r5, [ip]
   3963e:	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39642:	clz	r3, r4
   39646:	adds	r3, #32
   39648:	b.n	39570 <btrfs_util_strerror@@Base+0x868>
   3964a:	clz	r2, r8
   3964e:	clz	r3, r5
   39652:	adds	r2, #32
   39654:	cmp	r5, #0
   39656:	bne.n	39570 <btrfs_util_strerror@@Base+0x868>
   39658:	b.n	39642 <btrfs_util_strerror@@Base+0x93a>
   3965a:	nop

0003965c <__libc_csu_init@@Base>:
   3965c:	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
   39660:	mov	r7, r0
   39662:	ldr	r6, [pc, #48]	; (39694 <__libc_csu_init@@Base+0x38>)
   39664:	mov	r8, r1
   39666:	ldr	r5, [pc, #48]	; (39698 <__libc_csu_init@@Base+0x3c>)
   39668:	mov	r9, r2
   3966a:	add	r6, pc
   3966c:	blx	8334 <calloc@plt-0x20>
   39670:	add	r5, pc
   39672:	subs	r6, r6, r5
   39674:	asrs	r6, r6, #2
   39676:	beq.n	3968e <__libc_csu_init@@Base+0x32>
   39678:	subs	r5, #4
   3967a:	movs	r4, #0
   3967c:	ldr.w	r3, [r5, #4]!
   39680:	adds	r4, #1
   39682:	mov	r2, r9
   39684:	mov	r1, r8
   39686:	mov	r0, r7
   39688:	blx	r3
   3968a:	cmp	r6, r4
   3968c:	bne.n	3967c <__libc_csu_init@@Base+0x20>
   3968e:	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
   39692:	nop
   39694:	add	r7, sp, #312	; 0x138
   39696:	movs	r2, r0
   39698:	add	r7, sp, #272	; 0x110
   3969a:	movs	r2, r0

0003969c <__libc_csu_fini@@Base>:
   3969c:	bx	lr
   3969e:	nop
   396a0:	mov	r2, r1
   396a2:	mov	r1, r0
   396a4:	movs	r0, #3
   396a6:	b.w	8530 <__xstat@plt>
   396aa:	nop
   396ac:	mov	r2, r1
   396ae:	mov	r1, r0
   396b0:	movs	r0, #3
   396b2:	b.w	8658 <__fxstat@plt>
   396b6:	nop
   396b8:	mov	r2, r1
   396ba:	mov	r1, r0
   396bc:	movs	r0, #3
   396be:	b.w	8910 <__xstat64@plt>
   396c2:	nop
   396c4:	mov	r2, r1
   396c6:	mov	r1, r0
   396c8:	movs	r0, #3
   396ca:	b.w	854c <__fxstat64@plt>
   396ce:	nop

Disassembly of section .fini:

000396d0 <.fini>:
   396d0:	push	{r3, lr}
   396d4:	pop	{r3, pc}
